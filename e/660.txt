--->|SXQgcHJlcG9zdGVyb3VzIHRvIGNvbnNpZGVyIERvdGEgMiBhIG1vbmV5c2luayBmb3IgVmFsdmUuIFRoZSB0ZWFtIGlzIHNtYWxsIGFuZCB0aGUgb3ZlcmhlYWQgaXMgbWluaW1hbC4gVGhlIHByaXplbW9uZXkgdGhhdCBWYWx2ZSBwdXRzIGludG8gdG91cm5hbWVudHMgcGF5cyBmb3IgaXRzZWxmIG1hbnkgdGltZXMgb3ZlciBvbmNlIFRoZSBJbnRlcm5hdGlvbmFsIGNvbWVzIGFyb3VuZC4gT3V0c2lkZSBvZiBTdGVhbSwgRG90YSAyIGlzIHByb2JhYmx5IHRoZWlyIGhpZ2hlc3QgcmV2ZW51ZSBnZW5lcmF0b3IuCkZsYWcgKGEgInN0YXIgc3BhbmdsZWQgYmFubmVyIikgZmxvd24gYWJvdmUgdGhlIGZvcnQsIG1lYW5pbmcgdGhhdCB0aGUgZm9ydCBoYWQgc3Vydml2ZWQsIHRoZSBkZWZlbnNlIG1haW50YWluZWQsIHdpdGggYSB2aWN0b3J5IGluIGhhbmQuIApBbnl3YXkuIApJbiBvdGhlciB3b3JkcywgYnVybGVzcXVlIGlzIGV4YWN0bHkgd2hhdCB0aGUgc29sZGllcnMgYW5kIHNvbGRpZXJzIHdpdmVzIG5lZWQ6IGEgc291cmNlIG9mIGJhd2R5IGh1bW9yIHRoYXQgaXMgYWxzbyBhIHNvY2lhbCBjcml0aXF1ZSwgYSBzbGFwIGluIHRoZSBmYWNlLCB0byB0aGUgcG93ZXJzIHRoYXQgY29udHJvbCB0aGVpciBsaXZlcy4gTGlrZSB3b3JraW5nIGNsYXNzIG1lbiBhbmQgd29tZW4gYSBjZW50dXJ5IGFnbywgdG9kYXkgZW5saXN0ZWQgc29sZGllcnMgYXJlIGJlaW5nIHNjcmV3ZWQgYnkgYSBzeXN0ZW0gdGhhdCBzZW5kcyB3b3JraW5nIGNsYXNzIEFtZXJpY2FucyB0byB3YXIgYWZ0ZXIgd2FyIGFmdGVyIHdhciwgd2hpbGUgdGhlIHJ1bGluZyBjbGFzc2VzIChteXNlbGYgaW5jbHVkZWQpIHdvdWxkIG5ldmVyIGNvbnNpZGVyIHJpc2tpbmcgb3VyIGxpdmVzIGZvciBhIHN5c3RlbSBmcm9tIHdoaWNoIHdlIGJlbmVmaXQgdGhlIG1vc3QuClBvdXJxdW9pIG5lIHNvbW1lcyBub3VzIHBhcyBhdSBjb3VyYW50IGRlIGNlbGEgPyBQYXJjZSBxdSdpbCBleGlzdGUgZGVzIGxhYm9yYXRvaXJlcyBpbnRyZXNzcyAgZmFpcmUgdW5lIHZlcnNpb24gc3ludGh0aXF1ZSBxdWkgbGV1ciBhcHBvcnRlcmEgZCdub3JtZXMgcHJvZml0cy4gVm91cyBwb3V2ZXogZHNvcm1haXMgYWlkZXIgdW4gYW1pIGRhbnMgbGUgYmVzb2luIGVuIGx1aSBsYWlzc2FudCwgc2F2b2lyIHF1ZSBsZSBqdXMgZGUgY2l0cm9uIGV0IGxlIGNpdHJvbiBsdWkgbW1lIHRlbCBxdSdleHBsaXF1IGNpIGRlc3N1cywgZXN0IGJuZmlxdWUgZGFucyBsYSBwcnZlbnRpb24gZGUgbGEgbWFsYWRpZS4gClNvIHJlcGFpcnMgY2FuIGJlIHByZXR0eSBjb3N0bHkuIApQbGF5ZXJzIGFuZCBydWJiZXJuZWNrZXJzIGFyZSBmb3VyIGhvdXJzIGludG8gdGhlIGJpZywgbm8gbGltaXQgV29ybGQgU2VyaWVzIG9mIFBva2VyIGZyZWV6ZSBvdXQgaGVyZSBhdCBCaW5pb24ncyBIb3JzZXNob2UgaW4gTGFzIFZlZ2FzLiBNYXliZSAxNzAgcGxheWVycyBhcmUgbGVmdCBvZiB0aGUgMTk0IHdobyBiZWdhbiBjaGFzaW5nIHRoZSAkODM1LDAwMCBmaXJzdCBwcml6ZSB3aXRoICQxMCwwMDAgZWFjaCBpbiBjaGlwcy4gCkhhcmRpbmcsIHdobyBqb2luZWQgS2VsbGVuYmVyZyB2YXJzaXR5IHRlYW0gYXMgYSBmcmVzaG1hbiwgd2FzIG1lbnRvcmVkIGVhcmx5IGluIGhpZ2ggc2Nob29sIGJ5IFN0LiBKb2huIG1lbiBoZWFkIGNvYWNoIE1hbCBHYWxsZXR0YSBJSUksIGEgUEdBIGdvbGZlci4gCkkgaGF2ZSBubyBpZGVhIHdoYXQgdGhlIHBlbmFsdGllcyBhcmUgaWYgeW91IHdlcmUgdG8gZ2V0IGNhdWdodCBpbiBhIHN0aW5nLCBub3IgZG8gSSBpbnRlbmQgdG8gZmluZCBvdXQuLiAKSSBsb29rZWQgYXQgQXNjZW50LCBQaWxvdCwgYW5kIEhpZ2hsYW5kZXIgYW5kIGZvdW5kIGZvciB0aGUgbGV2ZWwgSSB3YW50LCB3aGljaCBpbmNsdWRlcyBhYmlsaXR5IHRvIHRvdyA1MDAwIHBvdW5kcywgdGhlIEFzY2VudCB3YXMgZGVmaW5pdGVseSB0aGUgYmVzdCB2YWx1ZS4gUGlsb3QgaGFkIHRvIGp1bXAgdXAgc2V2ZXJhbCBsZXZlbHMgdG8gZ2V0IHRoZSB0b3dpbmcgYWJpbGl0eS4gU3ViYXJ1IGJhc2ljYWxseSBtYWtlcyBvbmUgY2FyIGJ1dCBzdHJldGNoZXMgZW5naW5lIHBvd2VyIG9yIGZyYW1lIHNpemUgZm9yIHRoZSBtb2RlbC4gVGhlIEJveGVyIGVuZ2luZXMgYXJlIGZ1ZWwgZWZmaWNpZW50LCBnaXZlIGEgbG90IG9mIHBlcCBmb3IgaXRzIHNpemUsIGFuZCB3aWxsIGVhc2lseSBtYWtlIGl0IHRvIDIwMGsgb3IgbW9yZSB3aXRoIGdvb2QgY2FyZS4KQ29tcGxpYW5jZSBpcyBhIGh1Z2UgaXNzdWUgd2hlbiBJIHJlY29tbWVuZCBzdXBwbGVtZW50cy4gCktwMzEzICAyNyw2ODggcG9pbnRzICBzdWJtaXR0ZWQgMjcgZGF5cyBhZ28KTGlzdGVuLCBJIGtub3cgeW91IGRvbid0IHdhbnQgdG8gaGVhciAiYnJlYWsgdXAiLCBidXQgaXQncyBsZWdpdCB5b3VyIG9ubHkgY2hvaWNlLiBZb3Ugd2lsbCBlaXRoZXIgaGF2ZSBubyBraWQgYW5kIGhlIGdyb3dzIHJlc2VudG1lbnQvdHJ5IHRvIHNhYm90YWdlIHlvdXIgYmlydGggY29udHJvbCAod2hpY2ggaGFzIGhhcHBlbmVkIG9uIHRoaXMgc3ViKSBvciB5b3UgZG8gYW5kIHlvdSdyZSBub3Qgb25seSBtaXNlcmFibGUsIGJ1dCB5b3UgcG9zc2libHkgdGFrZSBpdCBvdXQgb24gdGhlIGtpZCBhZnRlciBzbGVlcCBkZXByaXZhdGlvbiBhbmQgYSBwb3NzaWJsZSBkaXZvcmNlIGFueXdheS4gWW91IHR3byB3YW50IHZlcnkgZGlmZmVyZW50IHRoaW5ncywgaXQncyB1bmZhaXIgdG8gYXNrIGhpbSB0byBnaXZlIHVwIGhpcyBkcmVhbSB0byBoYXZlIGNoaWxkcmVuIGp1c3QgbGlrZSBpdCdzIHVuZmFpciBmb3IgaGltIHRvIGFzayB0aGF0IG9mIHlvdSB3aGVuIHlvdSBkb24ndCB3YW50IHRvLiAKIkJ1dCBqdXN0IGJlaW5nIG91dCB0aGVyZSBvbiB0aGUgcG9kaXVtICAgeW91IGp1c3QgbG9zdCBhIHJlYWxseSBiaWcgZ2FtZSBhbmQgeW91IHN0aWxsIGhhdmUgNiwwMDAgcGVvcGxlIGNoZWVyaW5nIGZvciB5b3UuIFRoYXQncyBtb3JlIHdoeSBJJ20gZW1vdGlvbmFsIHRoYW4gYW55dGhpbmcuIApKb25lcywgNDksIGRlbmllZCBzZWxsaW5nIG1ldGggdG8gSGFnZ2FyZC4gSGUgdG9sZCBNU05CQy4gCkFBIHdhcyB0aGUgb25seSBvdmVycGFpciB0aGF0IGNoZWNrZWQgYmFjayBhdCBzb21lIGZyZXEgYW5kIEkgdGhpbmsgaXQgd2FzIDEwJSBvciBzby4gCk9QLCBteSBwZXJzb25hbCBvcGluaW9uIGlzIHRoYXQgeW91IHNob3VsZCBub3QgYXNrIGFib3V0IHRoZSBtb25leSBhbmQgZGVjbGluZSBpdCBpZiBzaGUgYnJpbmdzIGl0IHVwLiBJdCBpcyBhIGxvdCBvZiBtb25leSBidXQgaXQncyBhbHNvIGEgYmlnIGJhbGwgYW5kIGNoYWluIHJlYWR5IG1hZGUgZ3VpbHQgdHJpcCBpZiB5b3UgcGxhbiB0byBnbyBsb3cgb3Igbm8gY29udGFjdCB3aXRoIERvbm5hIGFmdGVyIHRoZSB3ZWRkaW5nLiAoSXQncyBhbHNvIG9uZSBoZWxsIG9mIGEgUFIgY291cCBmb3IgaGVyLiBZb3UndmUgYWxyZWFkeSBsb3N0IGEgdmFsdWVkIGNvdXNpbiBhcyBicmlkZXNtYWlkIGJlY2F1c2Ugc2hlIGRpZG4ndCB3YW50IHRvIGdldCBpbnZvbHZlZCBpbiBmYW1pbHkgZHJhbWEuKSBEZWZpbml0ZWx5IGFzayBtdW0gZm9yIHlvdXIgZG9jdW1lbnRzIGJ1dCBpZiBzaGUgZ2V0cyBhbGwgZGl0aGVyeSBvciBkZWZlbnNpdmUsIGRvbid0IGFyZ3VlL3JlYXNvbiB3aXRoIGhlciwganVzdCBvcmRlciBkdXBsaWNhdGVzICAgaXQncyBub3QgZGlmZmljdWx0IG9yIGV4cGVuc2l2ZSwgZXhjZXB0CkluIHRoZXJtb2R5bmFtaWNzLCB0aGUgdGVybSBlbmRvdGhlcm1pYyBwcm9jZXNzIGRlc2NyaWJlcyBhIHByb2Nlc3Mgb3IgcmVhY3Rpb24gaW4gd2hpY2ggdGhlIHN5c3RlbSBhYnNvcmJzIGVuZXJneSBmcm9tIGl0cyBzdXJyb3VuZGluZ3M7IHVzdWFsbHksIGJ1dCBub3QgYWx3YXlzLCBpbiB0aGUgZm9ybSBvZiBoZWF0LiAKRkNBIHByZXNlbnRlZCB0aGUgbmV3IEFsZmEgUm9tZW8gR2l1bGlhIHNlZGFuIGluIEp1bmUsIGJ1dCB0aGUgdmVoaWNsZSBoYXMgeWV0IHRvIGdvIG9uIHNhbGUuIFNvdXJjZXMgY2xvc2UgdG8gdGhlIG1hdHRlciBzYXkgdGhlIG1vZGVsIGhhcyBmYWNlZCB0ZWNobmljYWwgaGljY3VwcyBhbmQgZnVsbCBzY2FsZSBwcm9kdWN0aW9uIG1heSBvbmx5IHN0YXJ0IGluIE1hcmNoLCB3aGlsZSB0aGUgbGF1bmNoIG9mIGEgcmVsYXRlZCBTVVYgbWF5IGJlIHB1c2hlZCBiYWNrIHRvIGVhcmx5IDIwMTcuCldoeSB3b3VsZCBzdWNoIGFuIG9mZmljaWFsIHdhbnQgdG8gY2hhbGxlbmdlIHRoZWlyIG93biBwcml2aWxlZ2VkIHBvc2l0aW9uIGluIHRoYXQgY2FzZT8gQWxzbywgdGhlIG1lZGlhIGhlZ2Vtb255IGxpbWl0cyBpZGVhcyB0aGF0IGNoYWxsZW5nZSB0aGUgc3lzdGVtIGl0cyBvd25lcnMgcmVseSBvbi4gQnV0IGlmIGl0IGhhcyB0bywgdGhlIHJ1bGluZyBjbGFzcyB3aWxsIGRlZmVuZCBpdHMgb3duIHBlcnNvbmFsIGludGVyZXN0IHdpdGggdmlvbGVuY2UuIApUaGUgcmVhc29uIHdoeSB0aGUgVmlraW5ncyBpbml0aWFsbHkgcmFpZGVkIEVuZ2xhbmQgd2FzIGJlY2F1c2UgRW5nbGFuZCB3YXMgYSB3ZWFsdGh5IGNvdW50cnkuIApGZXR1cyBvciBjaGlsZCB3aG8gZGllZCBiZWZvcmUgQmFwdGlzbSBhbmQgdGhlIGVyYXN1cmUgb2Ygb3JpZ2luYWwgc2luIHdhcyBjb25kZW1uZWQgdG8gSGVsbC4gCk91ciBpbm4gb2ZmZXJzIHRoZSBwZXJmZWN0IHNldHRpbmcgZm9yIHdlZGRpbmdzLCBjb3Jwb3JhdGUgcmV0cmVhdHMsIGZhbWlseSByZXVuaW9ucywgaG9uZXltb29ucywgc3RheWNhdGlvbnMsIGFuZCBvdGhlciBldmVudHMuIApVc2luZyBIYXNrZWxsIHRvIGdlbmVyYXRlIHBhc3NwaHJhc2VzIG9mIHRoZSBmb3JtCllvdSB3aWxsIGhhdmUgdG8gd2FpdCB1bnRpbCB3ZSByZWZpbGwgb3VyIGJhbmsgd2l0aCBjYXNoLiAKQVMgeW91IGhhdmUgcmVhZCB0aHJvdWdoLCBtYXNzYWdlcyBjYW4gYmUgdGhlIHNvbHV0aW9uIHRvIGEgbG90IG9mIHByb2JsZW1zIGluIGRhaWx5IGxpZmUsIGVzcGVjaWFsbHkgdGhlIHJlY3VycmluZyB0eXBlcyBsaWtlIHN0cmVzcyBhbmQgYWNoZXMgYW5kIHBhaW5zISBIb3BlZnVsbHkgdGhpcyBwb3N0IGhhcyBvZmZlcmVkIHlvdSB3aXRoIGEgbG90IG9mIGludGVyZXN0aW5nIGluZm8gb24gdGhlIG1hdHRlci4gWW91IG11c3Qgbm93IGJlIGVudGh1c2lhc3RpY2FsbHkgc2Vla2luZyBhaGVhZCB0byBhbiBhcHBvaW50bWVudCBmb3IgeW91ciB2ZXJ5IG93biB0aGVyYXBldXRpYyBtYXNzYWdlIQpNb3JlIGRlZXIgY29sbGlzaW9ucyBoYXBwZW4gdGhlcmUgdGhhbiBhbnl3aGVyZSBpbiB0aGUgVW5pdGVkIFN0YXRlcy4gSSBncmV3IHVwIHRoZXJlIGFuZCB0aGUgZXhhbXBsZSBvZiwgb2ggaXQganVzdCBhbm90aGVyIGRlZXIsIGlzIHRoZSBkZWZpbml0aW9uIG9mIG91ciBsaXZlcyBvdXQgaGVyZS4gSSBkb24gdGhpbmsgTllDIGNhbiBjbGFzc2lmeSBhcyBkZWVyIGNvdW50eSB1bmxlc3MgdGhleSBzZWUgZGVlciBhbGwgdGhlIHRpbWUsIHdoaWNoIHRoZXkgZG9uIFNvIEkgaW4gbm8gd2F5IGRpc2NyZWRpdGluZyB5b3VyIG9yaWdpbmFsIHN0YXRlbWVudCBvZiB5b3UgYmVpbmcgaW4gTllDIGFuZCB0aGUgZmFjdCB0aGF0IHlvdSBzYXcgYSBkZWVyLCBidXQgc2VyaW91c2x5LCB3aGVyZSB0aGUgaGVsbCBpbiBOWUMgZGlkIHlvdSBzZWUgb25lPy4gClN0aWxsLCBwbGFubmluZyBhcm91bmQgaWxsbmVzcyBpcyBtdWNoIHRoZSBzYW1lIGZvciBlaXRoZXIgT0FTIG9yIENQUCwgSGVjdG9yIHNheXMuIElmIHlvdSBkZWZlciB0aGVzZSBiZW5lZml0cyBhbmQgdGhlbiBkaXNjb3ZlciB5b3UgYXJlIHRlcm1pbmFsbHkgaWxsLCBpdCBiZXN0IHRvIGFwcGx5IGZvciBhbnkgcmV0cm9hY3RpdmUgYW1vdW50cyBpbW1lZGlhdGVseS4gTWF0dGhldyBBcmRyZXkgYWdyZWVzIGlzIG5vdCBtdWNoIGVsc2UgdG8gZG8gZXhjZXB0IHRvIGNhcHR1cmUgdGhlIG9uZSB5ZWFyIHlvdSBjYW4uIApZb3UgYWJzb2x1dGVseSBkb24gaGF2ZSB0byBkbyB0aGUgcG9ybnN0YXIgc3R1ZmYsIG1vc3Qgb2YgdGhlbSBhcmUgbm90IHZlcnkgcGxlYXN1cmFibGUgYW55d2F5LiBUaGUgb25seSB0aGluZyB3ZSBhc2sgaXMgeW91IHNob3cgdXMgeW91IGVuam95aW5nIHlvdXJzZWxmLgpJIGdyYWR1YXRlZCB0aGUgZm9sbG93aW5nIHllYXIsIHdpdGggbXkgcmVzZWFyY2ggYWZmaXJtaW5nLCBhdCBsZWFzdCBmb3IgbWUsIHRoYXQgbWFya2V0cyB3ZXJlIG5vdCBwZXJmZWN0bHkgZWZmaWNpZW50Li4gCkhvd2V2ZXIsIHRoZXJlIGFyZSBzb21lIHdobyB3b3VsZCByYXRoZXIgd2F0Y2ggdGhlIGJhbGwgcm9sbCBhcm91bmQgdGhlIHdoZWVsLiAKRG9lcyB0aGF0IG1lYW4gdGhhdCB0aGVzZSBzZXRzIGFyZSBvbmx5IGdvb2QgZm9yIGRpc3BsYXk/IE5vLCB0aGVzZSBjaGlwcyBhcmUgZ3JlYXQgZm9yIHBsYXlpbmcgYSBmcmllbmRseSBnYW1lIGFzIHdlbGwuIAoyKSBXaGVuIHlvdSBnbyB0byBncm9jZXJ5IHN0b3JlIG9yIG1hbGwsIHBhcmsgaW4gYSBzcGFjZSBmYXJ0aGVzdCBhd2F5LgpTaGUgY2xlYW5lZCB1cCB3aXRoIGZvdXIgb2YgYSBraW5kLiBIZXIgc2VsZiBkZXByZWNhdGluZyBzaHJ1Z3Mgb2YgYXBvbG9neSB3ZXJlIHNsaWdodGx5IGF0IG9kZHMgd2l0aCB0aGUgYnVzaW5lc3NsaWtlIHdheSBzaGUgcmFrZWQgdGhlIGNoaXBzIHRvd2FyZHMgaGVyc2VsZi4gQW5kIGFsbCBhdCBvbmNlIHBlb3BsZSB3ZXJlIGxvb2tpbmcgYXQgdGhlaXIgd2F0Y2hlcyBhbmQgd29uZGVyaW5nLCB3YXMgdGhhdCB0aGUgdGltZSBhbHJlYWR5LiAKVGhlIGZpcnN0IHN0ZXAgaW4gY2hvb3NpbmcgdGhlIHJpZ2h0IHR5cGUgZm9yIHlvdSBpcyB0byBsZWFybiB0aGUgZGlmZmVyZW5jZXMgYmV0d2VlbiB0aGVzZSB0eXBlcy4gU2VlaW5nIHRoYXQgdGhpcyBzdGVwIGhhcyBhbGVydGVkIHlvdSB0byB0aGUgZmFjdCB0aGF0IHRoZXJlIGFyZSBkaWZmZXJlbnQgbWF0ZXJpYWxzIHVzZWQgaW4gdGhlIGNvbXBvc2l0aW9uIG9mIHRoZSBjaGlwcywgdGhlIG5leHQgc2V2ZXJhbCBzdGVwcyBpbiB0aGlzIGhvdyB0byBndWlkZSB3aWxsIGJlIHVzZWQgdG8gaW50cm9kdWNlIHlvdSB0byB0aGUgbWFpbiBwb2ludHMgb2YgZWFjaCB0eXBlIG9mIG1hdGVyaWFsLi4gClRoZSBiaWxsLCB0aGUgbWFpbiBvbmUgaW4gdGhlIHBhY2thZ2UsIHBhc3NlZCAzMyA1IGluIHRoZSBTZW5hdGUuIFZvdGluZyBhZ2FpbnN0IGl0IHdlcmUgU2Vucy4gTWlrZSBHcmVlbiwgUiBNYXl2aWxsZTsgSm9lIEh1bmUsIFIgSGFtYnVyZyBUd3AuOyBQZXRlciBNYWNHcmVnb3IsIFIgUm9ja2ZvcmQ7IEppbSBNYXJsZWF1LCBSIExha2UgT3Jpb247IGFuZCBUb255YSBTY2h1aXRtYWtlciwgUiBMYXd0b24uCkl0IHdhcyB2ZXJ5IG11Y2ggYSAieW91ciB0dXJuLCBteSB0dXJuIiB0eXBlIG9mIHRlYW0uaSB0aGluayBLRHMgZGVwYXJ0dXJlIGhlbHBlZCBSdXNzIGRldmVsb3AgYW5kIG1hdHVyZSBpbiBhIHdheSBub3RoaW5nIGVsc2UgY291bGQgYmVjYXVzZSBoZSB3YXMgZmluYWxseSB0aGUgdW5kaXNwdXRlZCAxQSBidXQgd2hhdCBkaWQgaGUgZG8/IGZ1Y2tpbmcgYXZlcmFnZSBhIHRyaXBsZSBkb3VibGUgZm9yIGFsbW9zdCAyIHNlYXNvbnMgbm93LCBjb21wbGV0ZWx5IHNoZWRkaW5nIHRoZSAic2VsZmlzaCIgbGFiZWwgaSBhbmQgaSdtIHN1cmUgbWFueSBvdGhlcnMgZ2F2ZSBoaW0gYXMgd2VsbCwgd2hpY2ggbGVhZHMgdG8gdGhlIGNvaGVzaXZlbmVzcyB3aXRoIFBHIG5vdy4gClRoYW5rcyBmb3IgeW91ciByZXBseSB0aG8uIEkgcmVhbGx5IGFwcHJlY2lhdGUgaXQuIEkgZG8gbXkgYmVzdCBJIGd1ZXNzCk15IGRhdWdodGVyIHRocml2ZXMgb24gY29udmVyc2F0aW9uLCBteSBvdGhlciBzb24gYWRtaXJhdGlvbiBmb3IgaGlzIGluZ2VudWl0eS9jcmVhdGl2aXR5IGFuZCBzaGFyaW5nIGV4Y2l0aW5nIGV4cGVyaWVuY2VzLCBldGMgZXRjTXlzZWxmIEkgZmVlbCBsb3ZlZCBieSBteSBodXNiYW5kIChzb21lIHBlb3BsZSBjYWxsIGl0ICJidWNrZXQgZmlsbGVkIikgdGhyb3VnaCBib3RoIGNvbnZlcnNhdGlvbiBhbmQgcGh5c2ljYWwgY2xvc2VuZXNzLiBJIG9uY2UgdG9sZCBoaW0gaXQncyBsaWtlIGEgcGhvbmUgcmVjaGFyZ2luZy5JIHRvbyBhcHByZWNpYXRlIHRoZXNlIGZpZWxkIHJlcG9ydHMuIApUaGV5IGNhbiBlaXRoZXIgZGl2aWRlIHRoZSBtb25leSByZW1haW5pbmcgbW9uZXkgaW4gdGhlIHBvdHMgZXZlbmx5IGFtb25nc3QgdGhlbXNlbHZlcyBvciBwbGF5IG9uZSBmaW5hbCByb3VuZCBrbm93biBhcyAiY292ZXIgYWxsLiIgSW4gdGhlICJjb3ZlciBhbGwiIHJvdW5kLCBhbGwgcmVtYWluaW5nIHBvdHMgYXJlIGNvbWJpbmVkIGFuZCB0aGUgZ2FtZSBjb250aW51ZXMgdW50aWwgb25lIHBsYXllciBoYXMgY292ZXJlZCB0aGVpciBlbnRpcmUgZ2FtZSBib2FyZC4uIApBbiBpbXBvcnQgZnJvbSBFYXN0IExvcyBBbmdlbGVzLCBKZXJpIHNhaWQgbWFraW5nIGZyaWVuZHMgaW4gdGhlIE1pZHdlc3QgZGlkbid0IGNvbWUgbmF0dXJhbGx5Li4gCk5vdywgR3VudGhlciBzYWlkLCAiVGhhdCdzICQxMCwwMDAgdGhhdCBkb2Vzbid0IGdvIHRvIHRoZSBjb21tdW5pdHkuIiBBIGNvYWxpdGlvbiBvZiBjaGFyaXR5IGdyb3VwcyBoYWQgc3VlZCB0aGUgZ2FtaW5nIGNvbnRyb2wgYm9hcmQgYW5kIHRoZSBzdGF0ZSBvdmVyIGEgcHJpb3Igc2V0IG9mIHJ1bGVzIHRoYXQgZ292ZXJuZWQgbWlsbGlvbmFpcmUgcGFydGllcywgY2FzaW5vIHN0eWxlIGV2ZW50cyB0aGF0IGNhbiBpbmNsdWRlIGJsYWNramFjayBvciBwb2tlci4gVGhlIENvdXJ0IG9mIENsYWltcyBmaXJzdCBpc3N1ZWQgYSB0ZW1wb3JhcnkgaW5qdW5jdGlvbiBhbmQgaW4gQXVndXN0IHJ1bGVkIHRoYXQgdGhvc2UgcnVsZXMgd2VyZSBub3QgcHJvcGVybHkgcHJvbXVsZ2F0ZWQuIApUaGUgY29tbWlzc2lvbiBldmVuIHRvb2sgYSBsb29rIGF0IHB1YiBwb2tlciBkaWNlLCBwbGF5ZWQgZm9yIGRyaW5rcy4gVGhlc2Ugd2VyZSBiZXR0ZXIga25vd24gYnkgdGhlIHBlYXNhbnRyeSBhcyAicG9rZXkgRGFpIiwgb3RoZXJ3aXNlIHRoZSByYW5keSBXZWxzaG1hbi4gKElnbm9yZSB0aGlzIGRpZ3Jlc3Npb24gaWYgaXQgZ2l2ZXMgb2ZmZW5jZSkuIEkgb25jZSB3b24gMTAgcGludHMgYW5kIHNob3J0bHkgYWZ0ZXJ3YXJkcyB3YXMgZmluZWQgYSBmaXZlciBmb3IgYmVpbmcgZHJ1bmsgYW5kIGRpc29yZGVybHkuIEJ1dCB3ZSB3b24ndCBkd2VsbCBvbiB0aGlzIHNoYW1lZnVsIGVwaXNvZGUuCkFuZCBhcyB3ZSBnb3QgcG9vcmVyIGFuZCB0aGUgZGVidCBwaWxlZCB1cCwgd2hhdCBkaWQgd2UgQW1lcmljYW5zIGRvPyBXZSBiZWxpZXZlZCBpbiB0aGUgQW1lcmljYW4gRHJlYW0gZXZlbiBtb3JlLiBBY2NvcmRpbmcgdG8gYSByZXBvcnQgY29tcGlsZWQgZm9yIHRoZSBDZW50ZXIgZm9yIEFtZXJpY2FuIFByb2dyZXNzIGJ5IEFtZXJpY2FuIFVuaXZlcnNpdHkgZWNvbm9taXN0IFRvbSBIZXJ0eiwgdGhlIGxhc3QgdGhpcnR5IHllYXJzIGhhdmUgc2VlbiBpbmNyZWFzaW5nIGRvd253YXJkIG1vYmlsaXR5IGZvciBtb3JlIEFtZXJpY2FucywgbW9yZSBpbmNvbWUgdm9sYXRpbGl0eSBmb3IgdGhlIG1pZGRsZSBjbGFzcywgYW5kLCBieSAyMDAzIDA0LCBubyBpbmNyZWFzZSBpbiBpbmNvbWUgZXZlbiBmb3IgcGVvcGxlIHdobyB3b3JrZWQgbG9uZ2VyIGhvdXJzLiBPZGRseSBlbm91Z2gsIHdlIGJlZ2FuIHRvIGJlbGlldmUgaW4gdGhlIERyZWFtIGV2ZW4gbW9yZS4KSSBhc2ssIHNoZSBnb2VzLiAKVGhlIGhvc3RlbCBtYW5hZ2VyIHRvbGQgbWUgbGF0ZXIgdGhhdCBuaWdodCB0aGF0IHNhaWQgc3RhZmYgZGlkbiB3YW50IGEgZm9yZWlnbmVyIHN0YXlpbmcgaW4gYSByb29tIHdoZXJlIHRoZXJlIG1heSBiZSBDaGluZXNlIGZlbWFsZXMsIGFwb2xvZ2lzZWQgYW5kIGNoZWNrZWQgbWUgaW50byBhIG5vcm1hbCBtaXhlZCByb29tLi4gCihFZGl0IHRvIGFkZDogSSBsaWtlKGQpIEVsaXphYmV0aCBXYXJyZW4gICBhbmQgSSBkb24ndCBkb3VidCBoZXIgaW50ZWxsZWN0LiBJIGp1c3QgdGhpbmsgdGhpcyBpcyBUcnVtcGlhbiBkZW1hZ29ndWVyeS4gU2hlIGlzIGp1c3QgcGlja2luZyBhIHNjYXBlZ29hdCBhbmQgbWFraW5nIGV4dHJhdmFnYW50IGFuZCB1bnJlYXNvbmFibGUgcHJvbWlzZXMgdG8gcmlsZSB1cCBhIGJhc2Ugb2YgbG93IGluZm9ybWF0aW9uLCBhbmdyeSB2b3RlcnMgLCByZWdhcmRsZXNzIG9mIGxvbmcgdGVybSBjb25zZXF1ZW5jZXMsIGFuZCBjb25zaXN0ZW5jeSB3aXRoIG90aGVyIFVTIHBvbGljeS4pLiAKVGhlIGVjb25vbXkgaW4gdGhpcyBjb3VudHJ5IGlzIHJpY2ggZmlyc3QsIHRha2Ugb3ZlciB3aGljaCBpcyByZWFsbHkgcXVpdGUgYW4gYWJzdXJkIHN5c3RlbSB3aXRoIGNvdW50bGVzcyBwcm9ibGVtcy4uIApVbml2ZXJzaXR5IEhlYWx0aCBhbmQgU2FmZXR5IFBvbGljeQpHbmwgaXN0ZXIga2kgdGVyciBiaXRzaW4ga2ltc2UgbG1lc2luIGJhciBpaW5kZSB5YWF5YWxtLgoiUm9nZXJzIHJlYWxseSB0cnVzdHMgbmV3IGxlYWRlcnMgdG8gdGFrZSBvbiBwcm9qZWN0cywiIHNoZSBzYXlzLCAiYW5kIGdpdmVzIHRoZW0gdGhlIHRvb2xzIHRvIGRvIGl0IG9uIHRoZWlyIG93bi4gSSd2ZSBiZWVuIGFibGUgdG8gZG8gdGhpbmdzIGhlcmUgdGhhdCBwZW9wbGUgaW4gb3RoZXIgY29tcGFuaWVzIGFyZSBqZWFsb3VzIG9mLiIKSSBjYW5ub3Qgb3ZlcnN0YXRlIGhvdyBtdWNoIG9mIGEgYmlnIGRlYWwgdGhhdCB3YXMgaGVyZSBpbiBCQyB3aGVuIGhlIHdlbnQgbWlzc2luZy4gUHJvdmluY2Ugd2lkZSBzZWFyY2gsIGRhaWx5IHVwZGF0ZXMsIHRlcnJpZmllZCBwYXJlbnRzLCB0ZXJyaWZpZWQga2lkcy4gV2UgaGFkIHBvbGljZSBjb21lIHRvIG91ciBjbGFzcyBmb3IgYSBzdHJhbmdlciBkYW5nZXIgdGFsaywgc2Nob29sIHdvdWxkbid0IGxldCB1cyB3YWxrIGhvbWUgYWxvbmUgYW55bW9yZSBhbmQgdGhlcmUgd2FzIGp1c3QgdGhpcyBwYXJhbm9pZCBmZWFyIGFib3V0IGNoaWxkIGFiZHVjdGlvbnMgdGhhdCBsYXN0ZWQgZm9yIHllYXJzIGFzIGEgcmVzdWx0LiAKSGUgd2FzIHRoZSBvbmUgd2hvIGhhZCBvZmZlcmVkIHRvIG1heWJlIGRlbGF5IHRoZSB0cmVhdG1lbnQgZm9yIGEgZGF5LiBKdXN0IGEgZGF5IHdhcyBhbGwgaGUgY291bGQgZG8uIApGZXcgcGVvcGxlIGNhbiBhcmd1ZSB3aXRoIHRoZSBmYWN0IHRoYXQgZWZmZWN0aXZlIG1vbmV5IG1hbmFnZW1lbnQgaXMgdGhlIHNpbmdsZSBtb3N0IGltcG9ydGFudCBza2lsbCB5b3UgY2FuIGhhdmUgaW4gYnVzaW5lc3MgYW5kIGluIHBva2VyLiBTZWFzb25lZCBwb2tlciBwbGF5ZXJzIGhhdmUgbGVhcm5lZCB0aGF0IGxlc3NvbiBsb25nIGFnbyBpbiB0aGVpciBjYXJlZXJzLiBOb3QgZXZlcnkgaGFuZCBpcyB3b3J0aCBwbGF5aW5nOyBpbiBmYWN0IG1vc3QgaGFuZHMgc2hvdWxkIGJlIGZvbGRlZC4KRm9yIFJvd3NvbWUsIGJlaW5nIG9uZSBvZiB0aGUgMjEgcHJvZmVzc2lvbmFscyB3b3JsZHdpZGUgICBhbmQgb25seSBmZW1hbGUgICBvbiBQb2tlclN0YXJzJyBUZWFtIE9ubGluZSBoYXMgbWFkZSBoZXIgYSBjZWxlYnJpdHkgb2Ygc29ydHMsIG5vdCB0byBtZW50aW9uIGFuIGludGVybmF0aW9uYWwgZ29vZCBsdWNrIGNoYXJtLgpZb3UgICBJIGxpa2UgeW91LiBZb3UgbWFnbmlmaWNlbnQgYmFzdGFyZDsgeW91LCBzaXIsIGFyZSBzbyBicmF2ZSwgYSBnZW50bGVtYW4gYW5kIGEgc2Nob2xhciwgYW5kIHNlZWluZyBob3cgeW91IGFyZSBhIHJlZGRpdG9yIGZvciA0IHllYXJzLCB0aGlzIGNoZWNrcyBvdXQsIHNvIEkgYWxsb3cgaXQuIApObywgd2UgaW5zdGVhZCBvcHQgb3V0LiAKVGhhdCBpcyBhIGZ1bGwgaW1tZXJzaW9uIHNjZW5hcmlvIG9mIGNvdXJzZSwgYnV0IGl0IGV4ZW1wbGlmaWVzIGhvdyBmbHVpZCBjaGlsZHJlbiBhcmUgYXQgdGhpcyBhZ2UuIFlvdXIgY2hpbGQgaGFzIHBsZW50eSBvZiB0aW1lIHRvIHJlbGVhcm4gZnJvbSBoZXIgbmF0aXZlIFNwYW5pc2ggc3BlYWtpbmcgZmF0aGVyLCBhbmQgaXQgc2hvdWxkbid0IGJlIHBhaW5mdWwgb3IgY2hhbGxlbmdpbmcgZm9yIGhlciBhdCBhbGwuIApXZWxsLCBpbiB0aGUgdHJpYWwsIHdlIGdvdCB0aGUgW2ZpbmFuY2lhbF0gcmVjb3JkcyBvZiBXcmVzdGxlTWFuaWEgMywgdGhlIGJpZyBvbmUsIGhpbSBhbmQgQW5kcmUgW1RoZSBHaWFudF0sIHdlbGwsIEhvZ2FuIG1hZGUgbW9yZSBtb25leSB0aGFuIGFsbCBvZiB1cyBjb21iaW5lZCwgaW5jbHVkaW5nIEFuZHJlLiBJZiB5b3UgdG9vayB0aGUgcGF5b2ZmcyBvZiBBbmRyZSBhbmQgdGhlIHdob2xlIHJlc3Qgb2YgdGhlIGNhcmQsIEhvZ2FuIG1hZGUgbW9yZSB0aGFuIHdlIGRpZC4gCkhvcGUgdGhpcyBoZWxwcy4gCkl0IGRlcGVuZHMuIEluIHN0YW5kYXJkIHBva2VyIHRoZXJlIGlzIG5vIHJhbmtpbmcgb2Ygc3VpdHMuIFRoZSBoYW5kIHdpdGggdGhlIGhpZ2hlc3QgdG90YWwgd2lsbCB3aW4uIElmIHlvdSBhcmUgZm9sbG93aW5nIHN0YW5kYXJkIHBva2VyIHJ1bGVzLCBhIGhlYXJ0IGZsdXNoIGFuZCBjbHViIGZsdXNoIHdvdWxkIHRpZSAoYXNzdW1pbmcgYWxsIHRoZSBjYXJkcyBhcmUgdGhlIHNhbWUpLiBTbywgeW91IHNlZSB3aHkgaXQgaXMgaW1wb3J0YW50IHRvIGFncmVlIHRvIGFsbCBvZiB0aGUgcnVsZXMgYmVmb3JlIHlvdSBzdGFydCB0aGUgZ2FtZS4gKEZ1bGwgQW5zd2VyKQpCdXQgYWxzbyB5b3UgY29udmluY2VkIG1lIHRvIGdvIGZvciBhIHJvdW5kIHR3bywgc28gbWF5YmUgbXkgZXhwZXJpZW5jZSB3aWxsIGJlIGRpZmZlcmVudCB0aGlzIHRpbWUuLiAKTGV0IGhlciBmZWVsIHJlbGF4ZWQgYW5kIGNvbWZvcnRhYmxlLi4gCkFsbCByaWdodCwgSSBoYXZlIHRvIGludGVycnVwdCBmb3IganVzdCBhIG1vbWVudCB0byByZW1pbmQgeW91IHRoYXQgVGhhbmtzZ2l2aW5nIGlzIGFsbW9zdCBoZXJlLiBXaGljaCBtZWFucyBCbGFjayBGcmlkYXkgYW5kIEN5YmVyIE1vbmRheSBhcmUgYWxzbyBhbG1vc3QgaGVyZSBhbmQgd2UgYXJlIGdvaW5nIGJpZyB0aGlzIHllYXIuIFVwIHRvIDc1JSBvZmYgdGhlIEJpZ2dlclBvY2tldHMgYm9vayBzdG9yZS4gCkFsbCBxdWVzdGlvbnMgYXJlIHdlbGNvbWUgc3VjaCBhcyB0byBob3cgdG8gY2hhbmdlIG9pbCwgdG8gaG93IHRvIHRpZSBzaG9lcy4gQWxsIHF1ZXN0aW9ucyBhcmUgd2VsY29tZSAgIGV4Y2VwdCBjbGVhciB0cm9sbHMsIHBsZWFzZSBkb24gYmUgdGhhdCBndXkuIApNdW1iYWksIE9jdCAwMzogTW9zdCB3aWxsIGJlIGF3YXJlIHRoYXQgVGhlIERhcmsgS25pZ2h0IGhhcyBhbWFzc2VkIG92ZXIgVVNEIDUwMCBtaWxsaW9uIGluIEJveCBPZmZpY2UgZWFybmluZ3MgaW4gdGhlIFVTLiBIb3dldmVyLCB3aGF0J3Mgbm90IGNvbW1vbmx5IGtub3duIGlzIHRoZSBtb29sYWggaXRzIG1ha2VycyB3aWxsIHJha2UgaW4gd2l0aCB0aGUgc2FsZSBvZiBEYXJrIEtuaWdodCBtZXJjaGFuZGlzZSBhbmQgc3BlY2lhbCBlZGl0aW9uIERWRHMuIEpva2VyIGJ1c3RzLCBiYXQgYmVsdHMgYW5kIHRveSByZXBsaWNhcyBvZiB0aGUgQmF0bW9iaWxlIGhhdmUgZmxvd24gb2ZmIHNoZWx2ZXMgc2luY2UgdGhlIGZpbG0ncyByZWxlYXNlLiBBbmQgdG8gcGxlYXNlIGFkdWx0cywgdGhlcmUncyBhbHNvIFRoZSBKb2tlciBQb2tlciBTZXQgd2l0aCBhIEpva2VyIHRoZW1lZCBzZXQgb2YgcG9rZXIgY2hpcHMuCklmIGEgdXNlciBkb2Vzbid0IG1lZXQgdGhlc2UgcmVxdWlyZW1lbnRzLCB0aGVpciBjb21tZW50IG11c3QgYmUgYXBwcm92ZWQgYnkgYSBtb2RlcmF0b3IgYmVmb3JlIGl0IGFwcGVhcnMgb24gdGhlIHNpdGUuIApUaGUgaW50ZXJpb3IgZGVzaWduIG9mIHRoZSBob3RlbCwgYXMgc2hvd24gaW4gYXJ0aXN0IHJlbmRlcmluZ3MsIGRlcGljdHMgYSBtb2Rlcm4gYW5kIHRyZW5keSB2aWJlIGluIHRoZSByZXN0YXVyYW50cyBhbmQgbG9iYnkgYXJlYXMsIHdpdGggYSBzb2Z0IGFuZCBzb21ld2hhdCByb21hbnRpYyB0d2lzdCBpbiBvdGhlciBzZWN0aW9ucyBvZiB0aGUgaG90ZWwuIExvY2F0ZWQgb24gdGhlIDEwMm5kIGZsb29yIGlzIGFuIEl0YWxpYW4gUmVzdGF1cmFudCB3aXRoIGFuIG9wZW4ga2l0Y2hlbiBkZXNpZ24sIHRoZSBMb2JieSBMb3VuZ2Ugc2VydmluZyBzaWduYXR1cmUgYWZ0ZXJub29uIHRlYSBhbmQgYSBDaGluZXNlIFJlc3RhdXJhbnQgd2l0aCA3IHByaXZhdGUgcm9vbXMuIE9uIHRoZSAxMDNyZCBmbG9vciwgYSB0ZWEgbG91bmdlIGZvciBndWVzdHMgYW5kIG9uIHRoZSAxMTh0aCBmbG9vciwgYSByb29mdG9wIHJlc3RhdXJhbnQgYW5kIGJhciwgdW5kb3VidGVkbHkgcHJvdmlkaW5nIHRoZSB3b3JsZCBtb3N0IG1hZ25pZmljZW50IHZpZXdzLCBhbmQgYWxzbyB0ZXN0aW5nIHRoZSB2ZXJ0aWdvIG9mIGl0cyBndWVzdHMuClNhdyB0aGUgcG9rZXIgbmV4dCB0byBtZSBhbmQgSSBoaXQgaGltIGFyb3VuZCB0aGUgZmFjZSB3aXRoIGl0LCBoZSBzYWlkLgpBZnRlciBhbGwsIHlvdSBuZWVkIHRvIGdhdGhlciBzb21lIHNraWxscyBiZWZvcmUgeW91IGNhbiBzdGFydCByaXNraW5nIHlvdXIgbW9uZXkgaW4gdGhlIGNhc2luby4gQmV0dGVyIHlldCwgaWYgeW91IGhhdmUgYSBjYXJkc2hhcnAgZm9yIGEgZnJpZW5kLCBhc2sgaGltIHRvIGhlbHAgeW91IG91dCB3aXRoIHlvdXIgZ2FtZSwgYW5kIGhvcGVmdWxseSBpbiB0aGUgcHJvY2VzcyB5b3UgbWF5IGdldCB0byBwaWNrIHVwIHNvbWUgaW52YWx1YWJsZSB0aXBzIGFuZCB0cmlja3MuLiAKUXVvdGh0aGVyYXZlbjkyOVRvbyBnYXkgdG8gZnVuY3Rpb24KTmV4dCBjaXJjbGUgSSB3b3VsZCBhcmd1ZSBpcyBvbmxpbmUgY2xhc3MgYW5kIG9ubGluZSBqZXdlbHJ5IGJ1c2luZXNzIHN0dWZmIHlvdSBoYW5kbGUgYSBjb3VwbGUgdGltZXMgYSB3ZWVrIGJ1dCBub3QgZXZlcnkgZGF5LiBPdXRlcm1vc3QgY2lyY2xlIGlzIHRoZSBzdHVmZiB5b3UgY2FuIGNvbnRyb2wgdGhlIGxlYXN0IChwYXJlbnRzKS4uIApFZGR5IE1hcnRpbmV6IEVzdGV2ZSBpcyBhIGdvb2QgKG9yIGJhZCkgZXhhbXBsZSBvZiBUaWRyb3cgdXR0ZXIgaW5hYmlsaXR5IHRvIGlkZW50aWZ5IHRhbGVudGVkIGhpdHRlcnMuIEVNRSBpcyBhIGJ1c3QuIApUaGUgcGFpciBvZiBqYWNrcyBhcHBlYXJlZCBvbiBoaXMgYnVzaW5lc3MgY2FyZHMuIApCdXQgdGhlcmUncyBhIG5ldyB2ZXJ5IGNvb2wgd2F5IHRvIGRhdGUgb3IgbWVldCBuZXcgZnJpZW5kcyB0aGF0J3MgcXVpY2sgYW5kIHRvdGFsbHkgcGFpbiBmcmVlISBXaGVuIHRoZXkgbWFkZSB0aGUgYWxwaGFiZXQgdGhleSBzaG91bGQgaGF2ZSBwdXQgVSBhbmQgSSB0b2dldGhlci4uIApGaW5kIGEgbGV2ZWwsIGZsYXQgY29uY3JldGUgc3BvdCB0byBkbyB0aGlzLiBOZXZlciB0cnVzdCBhbnkgamFjayEgQnV5IGEgZmlsdGVyIGFuZCBnYXNrZXQga2l0LCBhbmQgNSBvciA2IHF1YXJ0cyBvZiB0cmFucyBmbHVpZC4gClVubGlrZSBtdXNjbGVzIGFuZCBib25lcywgdGhvdWdoLCBmYXNjaWEgaGFzIGhpc3RvcmljYWxseSBiZWVuIGdpdmVuIHNvIGxpdHRsZSBhdHRlbnRpb24gYnkgdGhlcmFwaXN0cywgdHJhaW5lcnMgYW5kIG90aGVyIGZpdG5lc3MgcHJvcyB0aGF0IGl0J3Mgbm90IGV2ZW4gb24gdGhlIHN0YW5kYXJkIGd5bSB3YWxsIGFuYXRvbXkgY2hhcnQuClRoYXQgZGlkIG5vdCBzZXR0bGUgbWUgZG93biBhdCBhbGwgYXMgSSB0aGVuIHByb2NlZWRlZCB0byBkbyBzb21lIHZpY3RvcnkgbGFwcyBhcm91bmQgdGhlIGNhc2luby4gSSB3b3VsZCBsb3ZlIHRvIHNlZSB0aGUgdmlkZW8gZm9vdGFnZSBoYSBoYS4gWW91IG5vIGRvdWJ0IGRpZCBzb21lIGNlbGVicmF0aW5nIG92ZXIgdGhlIG5leHQgZmV3IHdlZWtzIGFuZCBtb250aHMgICBob3cgZGlkIHlvdSB0cmVhdCB5b3Vyc2VsZj8gVGhlIHRpbWluZyBvZiB0aGUgd2Vla2VuZCB3YXMgcGVyZmVjdCBhcyB0aGUgU3VuZGF5IHdhcyB0aGUgU0FORkwgZ3JhbmQgZmluYWwgc28gd2UgZnJhbnRpY2FsbHkgZ290IGEgbWF0ZSB0byBvcmdhbmlzZSBhIGNvcnBvcmF0ZSBib3ggYW5kIHRvb2sgYWxsIHRoZSBib3lzIGZyb20gdGhlIGJ1Y2tzIHNob3cgYW5kIHdlIGNlbGVicmF0ZWQgcXVpdGUgaGFyZCB0aGF0IGRheS4gClRoZSBndXkgaXMganVzdCBzYXlpbmcgdGhhdCB0aGVyZSBuZWVkcyB0byBiZSBldmlkZW5jZSBhIGNyaW1lIHdhcyBhY3R1YWxseSBjb21taXR0ZWQgICBzbywgaW4geW91ciBjb21wYXJpc29uLCB0aGF0J2QgYmUgYSBkZWFkIGJvZHksIG5vdCB0aGUgbXVyZGVyZXIuIEFuIGFjY3VzYXRpb24gaXMgb25seSB0aGF0ICAgYW4gYWNjdXNhdGlvbiAgIHdpdGhvdXQgdGhlIGV4aXN0ZW5jZSBvZiBldmlkZW5jZSBvZiBhIGNyaW1lLgpSYW1vbmEgdGhlbiBmZWxsIGZvciBhIHJlY29yZGluZyBhcnRpc3QgY2FsbGVkIFByb3BoZXQgTW9zZXMsIHNheWluZyBvZiBoaW06ICdIZSB3YXMgd2l0aG91dCBleGNlcHRpb24gdGhlIG1vc3QgYmVhdXRpZnVsIG1hbiBJIGhhZCBldmVyIHNlZW4uICdJIGFsd2F5cyB0aG91Z2h0IHNoZSB3YXMgdGhlIGdyZWF0IGxvdmUgb2YgbXkgbGlmZS4gSG93IHdyb25nICAgaXQgd2FzIE1vZS4nCklmIHRoZSBpbmxldCBwaXBlIGlzIHN1Ym1lcmdlZCB0aGUgd2F0ZXIgaXMgbm90IGJlaW5nIGFic29yYmVkIGR1ZSB0byBibG9ja2FnZSwgYmFkIGluc3RhbGxhdGlvbiwgb3IgZHJhaW4gZmllbGQgLyBkcnkgd2VsbCBpc3N1ZXMuIApOb3QgbWFueSBzZXh5IG1hc3NhZ2UgcGxhY2VzIG9mZmVyIFRoYWkgbWFzc2FnZSwgYXMgaXQgaXMgcmVxdWlyZXMgYSBsb3QgbW9yZSBza2lsbCB0aGFuIGp1c3QgcnViYmluZyBoYW5kcyBvdmVyIGEgYm9keSBhbmQgc3F1ZWV6aW5nIHRoZSBtdXNjbGVzLCBzbyBmYWlyIHBsYXkgdG8gQW5uaWUgYW5kIG15IGdpcmwgZm9yIGRvaW5nIHRoaXMuIApIaWogb25kZXJrZW50IGV0aGlzY2hlIGRpbGVtbWEncywgaGVlZnQgaW56aWNodCBpbiBldGhpc2NoZSBub3JtZW4gZW4gaG91ZHQgemljaCBhYW4gZGUgd2V0Z2V2aW5nLk9uZGVyIHByb2Zlc3Npb25lZWwgaGFuZGVsZW4gdmVyc3RhIGlrIG1lZXJkZXJlIGRpbmdlbiAuIApUaGlzIHN0YW5kcyBmb3IgIlJhZGlvIEZyZXF1ZW5jeSBJZGVudGlmaWNhdGlvbiIuIFRoZXJlIGFyZSBtYWNoaW5lcyB0aGF0IGNhbiBwbGFjZSBhIHRhZyB0aGF0IGlzIGNvbW1vbiB0byB0aGlzIHRlY2hub2xvZ3kgb250byBwb2tlciBjaGlwcyBmb3IgdGhlIHNha2Ugb2Ygc2VjdXJpbmcgYW5kIGVuc3VyaW5nIHRoYXQgdGhleSBhcmUgYXV0aGVudGljLiBJZiB5b3UgYXJlIGRldGVybWluaW5nIGlmIGEgY2hpcCB5b3UgYXJlIGRlYWxpbmcgd2l0aCBpcyBhdXRoZW50aWMsIHlvdSBjYW4gYXR0ZW1wdCB0byBkZXRlcm1pbmUgaWYgdGhlcmUgaXMgYSAiUkZJRCBUYWciIGFzc29jaWF0ZWQgd2l0aCBpdC4gCldvcmRzIHN1Z2dlc3QgdGhlIEJhbmsgb2YgQ2FuYWRhIHNsb3cgbWFyY2ggdG8gaGlnaGVyIGludGVyZXN0IHJhdGVzIGluIG5vdyBvbiBob2xkLCBwZXJoYXBzIHVudGlsIDIwMjAuIApTaXR0aW5nIFRoZSBNb3N0IERhbmdlcm91cyBUaGluZyBZb3UnbGwgRG8gQWxsIERheSBNZW5zIEhlYWx0aCAyMDExClRoZSBwb2xpdGljYWwgY2xpbWF0ZSBiZXR3ZWVuIHRoZSB0ZXJyaXRvcmllcyBpcyBwcmV0dHkgZmFyIG9mZiwgYW5kIEZhdGFoIGFuZCBIYW1hcyBmb3VnaHQgYSBibG9vZHkgd2FyIGluIDIwMDYuIApBbiBpbXBvcnRhbnQgc2hpZnQgaW4gbW9kZWxzIG9mIGhlYWx0aCBjYXJlIGhhcyBiZWVuIGV2b2x2aW5nIGluIHRoZSBtaWRzdCBvZiB0aGUgdHVybW9pbCB0aGF0IGNoYXJhY3Rlcml6ZXMgaGVhbHRoIGNhcmUgZGVsaXZlcnkgaW4gdGhlIFVTIHRvZGF5LiBPbmUgZnVuZGFtZW50YWwgY2hhbmdlIGlzIGJhc2VkIG9uIHRoZSBncm93aW5nIHJlYWxpemF0aW9uIHRoYXQgdGhlIGJpb21lZGljYWwgbW9kZWwsIHRoZSBjb3JuZXJzdG9uZSBvZiBjb250ZW1wb3JhcnkgbWVkaWNpbmUsIG9mZmVycyB0b28gbGltaXRlZCBvZiBhbiBhcHByb2FjaCB0byBoZWFsdGguIEFzIEVicmFsbCwgQkFwcFNjMSBub3RlZCBpbiAxOTk0LAoiUG9rZXIgUm9vbSJSZXZpZXdlZCBPY3RvYmVyIDksIDIwMTIgSSBnbyBkb3duIGFuZCBwbGF5ZXIgcG9rZXIgaW4gdGhlcmUgcG9rZXIgcm9vbSBzZXZlcmFsIHRpbWVzIGEgeWVhciBmcm9tIFZpcmdpbmlhLiBJJ3ZlIHBsYXllZCBpbiBzZXZlcmFsIGRpZmZlcmVudCBwb2tlciByb29tcyBvdmVyIHRoZSB5ZWFycyBmcm9tIExhcyBWZWdhcyB0byBBdGxhbnRpYyBDaXR5LiAKVGhlIGZlYXR1cmVzIG9mIGEgc3VzcGVuZGVkIGNvYXN0ZXIgYXJlIGNhcnMgdGhhdCBhcmUgZnJlZSB0byBzd2luZyB0byB0aGUgc2lkZSBhbmQgdGhleSBkb24ndCBoYXZlIGxvb3BzLiAKQnV0IHdoeSB3b3VsZCBJIG5vdCB3YW50IHRvIHdhdGNoIHRoZSBGQ0MgImRldGVybWluZSB3aGV0aGVyIHRoZSBwcmljZSBjaGFyZ2VkIGJ5IGJyb2FkYmFuZCBwcm92aWRlcnMgYXJlIG9yIHVucmVhc29uYWJsZS4gSWYgbm90IG9ubHkgdG8gd2F0Y2ggdGhlIHNhbWUgY29tcGFuaWVzIHdobyBkZWNpZGVkIHRoYXQgZGF0YSBjYXBzIG9uIGhvbWUgaW50ZXJuZXQgdXNhZ2Ugd2FzIGEgZ3JlYXQgaWRlYSB3cml0aGUgaW4gZmVhcj8gSWYgc29tZW9uZSB0aG91Z2h0IHRoYXQgdGhpcyB3b3VsZCBtYWtlIGFueSBDb21jYXN0IGN1c3RvbWVyIGZlZWwgYmFkIGFib3V0IHdoeSBQYWkgb3Bwb3NlIFRpdGxlIElJIHJlZ3VsYXRpb25zLiBXZWxsLCB0aGV5IGJldHRlciBjYWxsIHRpbWVvdXQgYW5kIHJldGhpbmsgdGhlaXIgc3RyYXRlZ3kuLiAKQ2hhc3RhaW4gZ29lcyBhbGwgaW4gd2l0aCBoZXIgdW52YXJuaXNoZWQgcGVyZm9ybWFuY2UgcGxheWluZyBhIHRydWx5IGZsYXdlZCBjaGFyYWN0ZXIgd2l0aCBxdWlldCB2dWxuZXJhYmlsaXR5LiBTaGUgaXMgc3RyaXBwZWQgYmFyZSBlbW90aW9uYWxseSBhbmQgYnJpbmdzIHRoZSByaWdodCBibGVuZCBvZiBicm9rZW5uZXNzIGFuZCBjYWxjdWxhdGlvbiB0byB0aGUgcm9sZSAgIHNoZSBzbWFydCwgZnVubnksIHNhc3N5LCBhbmQgd2VsbCBvbiBoZXIgd2F5IHRvIE9zY2FyIGphY2twb3QuClRoZSBiYWNjYXJhdCB0YWJsZSBpcyBmdWxsLiAKRm9yIGV4YW1wbGUsIHdlIHVzZSBHcmFwaFFMIGV4dGVuc2l2ZWx5LCB3aXRoIHR5cGUgZ2VuZXJhdGlvbi4gClNvLCB0b28sIHdhcyB0aGUgaW5zaWRlIG9mIHRoZSBzdG9yZSwgd2hpY2ggdGhleSBjb3VsZCBzZWUgdGhyb3VnaCB0aGUgZ2xhc3MgZG91YmxlIGRvb3JzLCBhbmQgdGhyb3VnaCBhIHBsYXRlIGdsYXNzIHdpbmRvdy4gCk9yIHRoZXkgbWlnaHQgbm90LiAKRGVhbCB3aXRoIG9ubGluZSBwb2tlciBjb21wYW55IGEgZmlyc3QgZm9yIFUKRm9yIHNvbWUgc3VwZXJmYW5zIG9mIEJpZyBCcm90aGVyLCBvbmUgb2YgdGhlIG1vc3QgZGF1bnRpbmcgZGVjaXNpb25zIHlvdSBjYW4gbWFrZSBpcyB3aGV0aGVyIG9yIG5vdCB0byBjb21wZXRlIG9uIHRoZSByZWFsaXR5IFRWIHNlcmllcy4KVGhlcmUgYXJlIHNpbXBseSBtb3JlIHJ1bm5lcnMgYW5kIG1vcmUgb3JnYW5pemVkIHJhY2VzIHJlbGF0aXZlIHRvIHRoZSB0b3RhbCBwb3B1bGF0aW9uIG5vd2FkYXlzLiBDb21wZXRpdGl2ZSBydW5uZXJzIGFyZSBzdGlsbCBjb21wZXRpdGl2ZSwgYW5kIGl0IG5vdCBhbGwgdGhhdCBoYXJkIGZvciB0aGVtIHRvIGZpbmQgd2hhdCB0aGV5IGxvb2tpbmcgZm9yLCBidXQgdGhleSBjYW4gZXhwZWN0IGV2ZXJ5IGxvY2FsIGZhc3QgZ3V5IHRvIHNob3cgdXAgYXQgZXZlcnkgbG9jYWwgNWsgd2hlbiB0aGVyZSBhcmUgaGFsZiBhIGRvemVuIHJhY2VzIHdpdGhpbiBkcml2aW5nIGRpc3RhbmNlIGV2ZXJ5IHdlZWsgb2YgdGhlIHllYXIuIE1heWJlIHRoZXkgdGhlIG9uZXMgbm90IGxpdmluZyB1cCB0byB0aGVpciBwb3RlbnRpYWwgYW55bW9yZSBzaW5jZSB0aGUgdG91Z2hlc3QgY29tcGV0aXRpb24gaXNuIGd1YXJhbnRlZWQgdG8gc2hvdyB1cCBhdCBldmVyeSByYWNlLiBJIGRvbiBrbm93LiBJIGp1c3QgZG9uIHRoaW5rIGl0IGZhaXIgdG8gcG9pbnQgYXQgcGVvcGxlIHdpdGggZGlmZmVyZW50IGdvYWxzIGFuZCBzYXkgdGhleSBhZnJhaWQgb2YgaW1wcm92ZW1lbnQuIFBlb3BsZSB3aG8gd291bGQgaGF2ZSBiZWVuIGFjdGl2ZWx5IHB1c2hlZCBhd2F5IGZyb20gcnVubmluZyBiYWNrIGluIHRoZSBnb29kIG9sZCBkYXlzIGFyZSBmaW5kaW5nIHRoZWlyIG93biByZWFzb25zIHRvIHB1cnN1ZSBpdCwgYW5kIHRoYXQgYSBnb29kIHRoaW5nLgpUaGUgcmF0aW9uYWxlIHRvIHJlY2FsbCBNYWNFd2VuIG9uIFN1bmRheSB3YXMgYmFzZWQgdXBvbiBoaXMgaW1wb3Npbmcgc2l6ZSwgaW1wcmVzc2l2ZSBwcm9kdWN0aXZpdHksIHJhcGlkIGltcHJvdmVtZW50IGFuZCBjdXJpb3NpdHkgYWJvdXQgaG93IGFsbCB0aGF0IHRyYW5zbGF0ZXMgdG8gdGhlIHRvdWdoZXN0IGxldmVsLiBuYXRpdmUgcGxheXMgaGlzIGZpcnN0IHJlZ3VsYXIgc2Vhc29uIGdhbWUuCkFubmUgY291bGQgaGFyZGx5IGRpc2NhcmQgaXQgY29tcGxldGVseSwgZm9yIHRoZXJlIHdlcmUgdW5kb3VidGVkbHkgdGltZXMgd2hlbiBzaGUgZmVsdCwgd2l0aCBhbiBpbnN0aW5jdCB0aGF0IHdhcyBub3QgdG8gYmUgY29tYmF0ZWQgYnkgcmVhc29uLCB0aGF0IExlc2xpZSBoYXJib3JlZCBhIHF1ZWVyLCBpbmRlZmluYWJsZSByZXNlbnRtZW50IHRvd2FyZHMgaGVyLiBBdCB0aW1lcywgdGhpcyBzZWNyZXQgY29uc2Npb3VzbmVzcyBtYXJyZWQgdGhlIGRlbGlnaHQgb2YgdGhlaXIgY29tcmFkZXNoaXA7IGF0IG90aGVycyBpdCB3YXMgYWxtb3N0IGZvcmdvdHRlbjsgYnV0IEFubmUgYWx3YXlzIGZlbHQgdGhlIGhpZGRlbiB0aG9ybiB3YXMgdGhlcmUsIGFuZCBtaWdodCBwcmljayBoZXIgYXQgYW55IG1vbWVudC4gU2hlIGZlbHQgYSBjcnVlbCBzdGluZyBmcm9tIGl0IG9uIHRoZSBkYXkgd2hlbiBzaGUgdG9sZCBMZXNsaWUgb2Ygd2hhdCBzaGUgaG9wZWQgdGhlIHNwcmluZyB3b3VsZCBicmluZyB0byB0aGUgbGl0dGxlIGhvdXNlIG9mIGRyZWFtcy4gCklkaW5hIHNheXMgdGhlIGhpZ2hseSBhbnRpY2lwYXRlZCAiUG9rZXIgRmFjZSIgZHVldCBpcyAidmVyeSBzaW1wbGUgYW5kIHRydXRoZnVsIiBhbmQgdGhhdCAidGhlIG1lYW5pbmcgb2YgdGhlIHNvbmcsIHdoaWNoIGlzIHF1aXRlIHNleHVhbCBhcHBhcmVudGx5LCBpcyBkaWZmZXJlbnQgd2l0aGluIHRoZSBjb250ZXh0IG9mIHRoZSBzaG93LiIKRGF2aWQgU2hhdydzIHNvdWxmdWwgcmFzcCByZXRhaW5zIGl0cyBnb3NwZWwgc2hhZGVzIGZvciBtdWNoIG9mIENhcmUsIGFuZCBwb3AgaW5maWx0cmF0ZXMgbXVjaCBvZiB0aGUgYWxidW0sIGJ1dCBzb21lIHN1Z2dlc3Rpb25zIG9mIHRoZSBzd2FtcHkgZnVuaywgUiBhbmQgYnJhc3Mgb2YgdGhlIGJhbmQncyBOZXcgT3JsZWFucyBob21lIHN1YnNlcXVlbnRseSBtYW5pZmVzdCB0aGVtc2VsdmVzLiBOZXZlcnRoZWxlc3MsIHNwZWNpZmljIE5PTEEgaW5mbHVlbmNlcyBhcmUgcmVsYXRpdmVseSB0aGluIGluIGEgZ2VuZXJhbGx5IGFtaWFibGUgYnV0IGVzc2VudGlhbGx5IGRyaWZ0aW5nIHJvY2svamFtIGJhbmQgbW9yZSBwcm9uZSB0byBob29rcyBhbmQgY2F0Y2h5IGNob3J1c2VzIHRoYW4gdHJ1ZSBncml0LiAKSXQgY2FuIGJlIG1hZGUgc28gYmUgc28gYWJzb2x1dGVseSB0aGluLCBpdCBjYW4gYmUgYXBwbGllZCBpbiBsYXllcnMgaW4gbWljcm8gY2lyY3VpdHJ5IDIuIDMuIApJdCB3YXMgZWFzeSBiZWNhdXNlIGl0IHdhcyBob3cgZG8gSSBkbyB4IGFuZCBvayBJIGNhbid0IGRvIGl0IHRoYXQgd2F5LCBzbyBJJ2xsIHdvcmsgYXJvdW5kIGl0Li4gCkZVQ0sgU0hVVCBVUCBJIE5FRUQgVE8gSEVBUiBkZWFkIFdoZWVlZXd3d3d3d3d3LiAKSWYgY29udHJhYmFuZCBpcyBkaXNjb3ZlcmVkIHdlbGwgY29uZmlzY2F0ZSBpdCBhbmQgbG9nIGl0LiBCdXQgaXQgaXMgTkVWRVIgdGllZCB0byBhbnkgcGF0aWVudCBpbmZvcm1hdGlvbi4gCkxlcyB0ZXh0ZXMgc29udCBzaWduc0FsZnJlZCBBbGV4YW5kcmUsIEVkZW0gQXd1bWV5LCBKdWxpZW4gRGVsbWFpcmUsRnJhbmtpdG8sIEp1bGllbiBNYWJpYWxhIEJpc3NpbGEsIEplYW4gTWFyYyBSb3NpZXIsIEluc2EgU2FuLCBGZWx3aW5lIFNhcnIsIFN1bmphdGEgZXRHZW9yZ2VzIFlteS4KIlRoZXJlIGlzIGEgZ2FtZSBvZiBwb2tlciBnb2luZyBvbiBiZXR3ZWVuIEdlcm1hbiBhbmQgR3JlZWsgZ292ZXJubWVudHMsIiBTdGVwaGVuIEhhc2VsZXIsIHRoZSBkaXJlY3RvciBvZiB0aGUgR2xvYmFsIFBvbGljeSBJbnN0aXR1dGUsIHRvbGQgQWwgSmF6ZWVyYS4KVGhlIFVyb0xpZnQgRGV2aWNlIGlzIHJlbW92ZWQsIGxlYXZpbmcgYW4gb3BlbiB1cmV0aHJhIGZvciB1cmluZSB0byBmbG93LgpUaGF0IHRpbmdseSBmZWVsaW5nIEkgcGlubmVkIHRvIExpZmUgRW5lcmd5LiAKSSBhbHdheXMgcHV0IG90aGVyIHBlb3BsZXMgbmVlZHMgYW5kIHdhbnRzIGJlZm9yZSBtaW5lIGV2ZW4gaWYgSSBoYXRlIGl0LgoxNSBpcyBhIHNleHVhbCBhZ2UuIEl0IHN1cHBvc2VkIHRvIGJlIGFueXdheSwgZXZlbiBpZiBjcmF6eSByZWxpZ2lvdXMgZ3JvdXBzIHdvdWxkIGxpa2UgMTUgeWVhciBvbGQgZ2lybHMgdG8gcGxlZGdlIGV0ZXJuYWwgdmlyZ2luaXR5IGFuZCB3ZWFyICJwcm9taXNlIHJpbmdzIiBmcm9tIHRoZWlyIGZhdGhlcnMuLiAKU2FtZS4gQWxsIG15IGZyaWVuZHMgc3RpbGwgZ2V0IGl0IGZyb20gdGhlaXIgZ3V5LCBidXQgSSBiZSBmdWNrZWQgaWYgSSBnb25uYSBiZSBmb3JjZWQgdG8gaGFuZyBvdXQgd2l0aCBzb21lIGR1ZGUgd2hvIHByYWN0aWNhbGx5IHNtb2tlZCBoaW1zZWxmIHJldGFyZGVkIGp1c3QgdG8gZ2V0IGFuIG91bmNlIGZvciB0aGUgd2Vla2VuZC4gClRoZXkgY2FuIGRlZmluaXRlbHkgYnJpbmcgZ3JlYXQgZW5qb3ltZW50IHRvIGEgbG90IG9mIHRleHQgbGVhcm5pbmcuIApUaGUgb3JpZ2luYWwgYmxhY2srd2hpdGUgd2FzaCwgZm91bmQgaW50IGVoIGNvbGxlY3Rpb25zIG9mIHRoZSBBY2FkZW15IG9mIE5hdHVyYWwgU2NpZW5jZSBvZiBQaGlsYWRlbHBoaWE6LiAKTmV4dCBnZW5lcmF0aW9uIHZpZGVvIGNhbWVyYSBzZW5zb3IgMyBlbmhhbmNlZCB2aWRlbyBjYW1lcmEgc2Vuc29yIHdpdGggc2l4IHRpbWVzIHRoZSBwcm9jZXNzaW5nIHBvd2VyIG9mIHByZXZpb3VzIGdlbmVyYXRpb24gc3lzdGVtcyB0byBzdXBwb3J0IGxhbmUgZGVwYXJ0dXJlIHdhcm5pbmcgYW5kIGxhbmUga2VlcGluZyBzeXN0ZW1zLCBmb3J3YXJkIGNvbGxpc2lvbiB3YXJuaW5nLCBmb3J3YXJkIGRpc3RhbmNlIGluZGljYXRpb24sIHRyYWZmaWMgc2lnbiByZWNvZ25pdGlvbiwgaGlnaC9sb3cgYmVhbSBjb250cm9sLCBwZWRlc3RyaWFuIGRldGVjdGlvbiBhbmQgYSByYW5nZSBvZiBuZXcgZnVuY3Rpb25zLgpBbmQgYWxsIG15IHByYWN0aWNlIHdhcyBwYXlpbmcgb2ZmLiAKVGlkaWFuZSBOJ0RpYXllIDogTGVzIEFudGlsbGVzIGZyYW5haXNlcyBvbnQgZW5yZWdpc3RyIHVuIGJvb20gY29ub21pcXVlIHNhbnMgcHJjZGVudCBncmNlIGF1eCBlc2NsYXZlcyBhZnJpY2FpbnMuIApSZWFsbHk/IE1vdmllIHdvcmxkIHdhcyBvbmUgb2YgdGhlIG1vc3QgcmVjb21tZW5kZWQgdGhpbmdzIHRvIGRvIGFjY29yZGluZyB0byBLb3JlYW4gdG91cmlzdHMuIElzIGl0IHNvbWV0aGluZyBsaWtlIFVuaXZlcnNpYWwgU3R1ZGlvLCBiZWNhdXNlIGlmIGl0IGlzIEkgYW0gdGVtcHRlZC4gCkRhYmVpIHppZWh0IHNpY2ggV2lkZXJzcHJ1Y2ggcmVnZWxtaWcgZWluZW4gTmViZWxicmFuZCB6dSwgZGVyIHZvbiBkZXIgaGllc2lnZW4gRmV1ZXJ3ZWhyIGdlbHNjaHQgd2VyZGVuIG11c3MuMTk4OSB3b2xsdGUgaWhtIGRhcyBOb2JlbHByZWlza29taXRlZSBkZW4gTm9iZWxwcmVpcyBmciBHZXNjaGljaHRlIGFiZXJrZW5uZW4sIHdhcyBkZXIgUHJvZmVzc29yIGFiZXIgYXVzc2NobHVnLCBkYSBlciBzaWNoIHNlbGJzdCBhbHMgbm9jaCBuaWNodCBiZXJlaXQgZnIgZGllc2VuIFByZWlzIGJlZmFuZC4uIApGb3IgdGltZSByZWZlcmVuY2UgaGVyZSwgbXkga2lkIGlzIDE3IHllYXJzIG9sZC4gClRoZXkgYXJlIG5vdCB3ZWxjb21lIHdoZW4gc28gaXMgYXQgd29yaywgYW5kIGlmIHRoZXkgdHJ5IHRvIHNob3cgdXAsIHRoYXQgaXQgZm9yIHNlZWluZyBsbyBwZXJpb2QuIFRoZXJlIGFsc28gbmVlZCB0byBiZSBib3VuZGFyaWVzIGFib3V0IGhvdyB5b3UgYXJlIHNwb2tlbiB0byBhbmQgdHJlYXRlZCwgYW5kIGNvbnNlcXVlbmNlcyAodmlzaXQgZW5kcykgaWYgdGhleSBhcmUgbm90IHJlc3BlY3RlZC4gVGhpbmdzIGxpa2Ugbm8gd2VpZ2h0IGRpc2N1c3Npb24sIG5vIGdyYWJiaW5nIGJhYnkgZnJvbSBtb20sIHJlc3BlY3RpbmcgbW9tcyBwcml2YWN5LCBldGMuLiAKVGhhdCA2LjQgdGltZXMgdGhlaXIgJDQxNCwwMDAgdG90YWwgZmluYW5jaWFsIGFzc2V0cyBpbmNsdWRpbmcgY2FzaC4gVGhlcmUgaXMgb25seSBvbmUgbGlhYmlsaXR5IGEgJDE1MCwwMDAgbW9ydGdhZ2Ugb24gdGhlIGNvdHRhZ2UuIApUcnkgY3JlYXRpbmcgYW4gYWQgb24gRmFjZWJvb2sgb3IgYW55IG90aGVyIHNvY2lhbCBtZWRpYSB0aGF0IGlzIGNvbW1vbiB0aGVyZS4gSSB1c2VkIEZhY2Vib29rIHRvIHJ1biBhZHMgcHJvbW90aW5nIGEgYmpqIGNsdWIgYW5kIGl0IGdvdCBhIGxvdCBvZiBoaXRzIGZvciBjaGVhcC4gMTAwIHZpZXdzIGZvciBhIGRvbGxhci4gClRoZSBwYXJrIGlzIGZpbGxlZCB3aXRoIFJhaW55cyB0aGF0IGNhbm5vdCBub3Qgd2FrZSB1cCBhbGl0dHJiaXRsYXRlIGFuZCB3aGVuIGFycml2aW5nIGluIHRoZSBwYXJrLCBydW4gcHJhbmNlLCBvciBvdGhlcndpc2UgbW92ZSwgYWNyb3NzIHRoZSBncmFzcyBhbmQgY29uY3JldGUgYXQgOC4wNWFtLCBhZnJhaWQgb2YgY2xvY2tpbmcgaW4gYSBsaXR0bGUgYml0IHRvbyBsYXRlIGZvciBzb21lb25lIHRvIG5vdGljZSBBbiA4YW0gcHVibGlzaGVkIHN0YXJ0IGlzIGludGVycHJldGVkIGFzIGEgc3VnZ2VzdGlvbiwgOC4xMCByZWFsaXR5LCBhbmQgOC4yMCB3aWxsIGhhdmUgYSBzdXBlcnZpc29yIGFza2luZyB3aHksIHRoZXkga25vdyBhbmQgd29yayB3aXRoaW4gdGhlIGJvdW5kYXJpZXMuIE9uY2UgY2xvY2tlZCBpbiB0aGUgZmxvY2tzIG9mIFJhaW55cyB3aWxsIHdhbGsgYmV0d2VlbiBGYW1pbHkgTWFydHMsIGlkbGUgaW4gbW92ZW1lbnQsIGluIGxhcmdlIHBhY2tzIHRoYXQgYXJlIGltcGFzc2FibGUuIApBcyBzb29uIGFzIGhpcyBiYWNrIHdhcyB0dXJuZWQsIHRoZSB0d28gbWVuIG1vdmVkIGluIHRvIGRpc21hbnRsZWQgdGhlIGZha2Uga2V5Ym9hcmQgYXMgcmFwaWRseSBhcyB0aGV5IGhhcyBpbnN0YWxsZWQgaXQgYW5kIHRoZW4gbGVmdCBvbmNlIG1vcmUuLiAKV2hlbiB5b3UgYnJpbmcgeW91ciBmdWxsIHNlbGYsIHlvdSBkb24ndCBoaWRlIHdoYXQgbWFrZXMgeW91IGh1bWFuLCBhbmQgaXQgbWVhbnMgb3RoZXJzIGNhbiB0b28uLiAKVHJhbnNjcmlwdCBvZiBXaW5kb3dzIDcgVWx0aW1hdGUgICAzMiBCaXQgKEF1dG8gQWN0aXZhdGlvbikgICBDcmFja2VkIERvd25sb2FkIEZyZWUuIApbZGVsZXRlZF0gIDYgcG9pbnRzICBzdWJtaXR0ZWQgMTEgbW9udGhzIGFnbwoiU29tZWJvZHkgW3RoZW5dIG1hZGUgYSBjYWxsIHRvIGEgbGF3eWVyIGZyaWVuZCBvZiBzb21lYm9keSBhdCB0aGUgTW9oYXdrcy4gSGUgc2FpZCwgSSBoYXZlIGEgY3VzdG9tZXIgd2hvIG1pZ2h0IGJlIGludGVyZXN0ZWQuJyBJdCB0dXJuZWQgb3V0IGl0IG1pZ2h0IGJlIGFuIG9ubGluZSBnYW1pbmcgY3VzdG9tZXIsIiByZWNhbGxlZCBUb2Jpbi4uIApUYW1wYSBwb2xpY2UgYW5ub3VuY2VkIG9uIFdlZG5lc2RheSB0aGF0IHRoZSBpbmNpZGVudCB3YXMgcmVwb3J0ZWQgdG8gdGhlbSBhbmQgdGhleSBkaXNjb3ZlcmVkIHRoYXQgaXQgd2FzIG5vdGhpbmcgbW9yZSB0aGFuIGEgbWlzdW5kZXJzdGFuZGluZywgYWNjb3JkaW5nIHRvIFRhbXBhIEJheSBUaW1lcy4KQnV0IGZvciB0aGF0IHRvIGhhcHBlbiwgdGhleSBuZWVkIHRvIGJlIG1ha2luZyB0aGF0IGV2ZXJ5IG5pZ2h0IG9uIGEgZnVsbCB0aW1lIGJhc2lzLiAKSGFkIGEgZmV3IHNlc3Npb25zIGF0IDUwLzEwMCBhZ2FpbnN0IHNvbWUgYmlnIGRyb29sZXJzLCBidXQgSSBzb2xkIGFjdGlvbi4gVGhlIG9ubHkgd2F5IHRvIGdldCBhY3Rpb24gd2FzIHRvIGJlIHNwcmVhZCBhY3Jvc3MgbXVsdGlwbGUgbmV0d29ya3MgYmVjYXVzZSBvbmNlIHlvdXIgU04gd2FzIG91dGVkLCBubyBvbmUgd291bGQgcGxheSB5b3UgdW5sZXNzIHRoZXkgd2VyZSB3YXkgYmV0dGVyIHRoYW4geW91Li4gClN0YXJ0IHdpdGggdGhlIGJhc2ljLiBTcGFzIGFyZSBleHBlY3RlZCB0byBvZmZlciB0aGUgYmFzaWMgc3BhIHNlcnZpY2VzLiAKTm93IEkgaGF2ZSBhIGRlc2sgam9iIGFuZCBtYWtlIGNhbGxzIG91dCBvY2Nhc2lvbmFsbHksIG9uIG15IHRlcm1zLiBJdCB0YWtlcyBsdWNrIGFuZCBwZXJzaXN0ZW5jZSwgYnV0IHRoZXJlIENBTiBiZSBsaWZlIGFmdGVyIGNhbGwgY2VudGVycyEKTm93IHRoYXQgdGhleSdyZSBhZHVsdHMgYW5kIGJvdGggaW4gY29tbWl0dGVkIHJlbGF0aW9uc2hpcHMsIG1ha2luZyBpbW1hdHVyZSBqb2tlcyBpcyBvbmUgd2F5IHRvIGZlZWwgbGlrZSB0aGV5J3JlIG5vdCBsb3NpbmcgdGhlaXIgY2FyZWZyZWUgeW91dGgvZnJlZWRvbS5IZSBwcm9iYWJseSBkaWRuJ3QgcmVhbGl6ZSBpdCB3b3VsZCBodXJ0IHlvdSBiZWNhdXNlIDEuIApTaW5nYXBvcmUgaXNzIG5vdCBhIGRlbW9jcmFjeSBhbmQgaGFzIHNvbWUgdmVyeSByZXByZXNzaXZlIGxhd3MuIEkgYW0gbm90IGZhbWlsaWFyIHdpdGggdGhlaXIgbGFib3VyIGxhd3MuIApGcm9tIG15IHJlc2VhcmNoLCB0aGUgYmVzdCB0aW1lcyB0byBnbyBhcmUgaW4gQXByaWwgTWF5IGlmIHlvdSBhcmUgZ29pbmcgU291dGggPk5vcnRoIChzbyB5b3UgYXJlIGZvbGxvd2luZyBiZWdpbm5pbmcgb2Ygc3VtbWVyKSBvciBBdWcgT2N0IGlmIHlvdSBhcmUgZ29pbmcgTm9ydGggPlNvdXRoIChzbyB5b3UgYXJlIGZvbGxvd2luZyB0aGUgZW5kIG9mIHN1bW1lciBhcyBpdCBwcm9ncmVzc2VzIGRvd24gdGhlIGNvdW50cnkpLi4gCklmIGl0IG1ha2VzIHlvdSBmZWVsIGFueSBiZXR0ZXIsIEkgZmVsdCB0aGUgc2FtZSB3YXkgdW50aWwgdGhlIG90aGVyIGRheS4gUVEgb24gdGhlIGJ1dHRvbiB2aWxsaWFuIHJhaXNlcyB0byAuMTUgSSByZXJhaXNlIHRvIDMwLiBGbG9wIGNvbWVzIDggOSA0IHR3byBjbHVicy4gCkF1Y2ggR2xlaXRjcmVtZXM/IiAgICJOZWluIi4gCkluIHRoYXQsIGl0IG1pZ2h0IHNlZW0gc2ltaWxhciB0byB0cmlnZ2VyIHBvaW50IHRoZXJhcHkuIEV4Y2VwdCBTUlQgaW5jb3Jwb3JhdGVzIHRoZSBzcGluZSwgc2tlbGV0b24gYW5kIG5lcnZvdXMgc3lzdGVtIGFuZCBmb2xsb3dzIHByZWRlc2lnbmVkIHByb3RvY29sIHRoYXQgaGFzIGJlZW4gdGVzdGVkIGFuZCBwcm92ZW4gdG8gY3JlYXRlIHJlcGxpY2FibGUgcmVzdWx0cywgYWR2b2NhdGVzIHNheS4KSWYgeW91IHdhbnQgdG8gcGljayBzb21ldGhpbmcgdXAgbGlrZSBTaWx2ZXIgQnVkIExpZ2h0IExpbWUgU3Bpbm5lciBQb2tlciBDYXJkIFByb3RlY3RvciwgaXRzIGRlZmluaXRlbHkgYSBncmVhdCBjaG9pY2UgZm9yIHlvdS4uIApTbyBJIGdvdCBvbGRlciwgYW5kIHdhcyBzdGlsbCBlbmpveWluZyBkb2luZyB5b3VuZyBraWQgc3R1ZmYgdGhhdCB3YXNuIGFib3V0IHNldHRpbmcgd29ybGQgcmVjb3Jkcy4gCkl0IGNvbmNsdWRlcyB0aGF0IGEgdG9wIHRpZXIgd29tZW4ncyBwbGF5ZXIgd291bGQgbWFrZSBvbmx5IDM4IHBlciBjZW50IG9mIGEgc2ltaWxhcmx5IHNpdHVhdGVkIG1lbidzIHBsYXllci4gd2VudCBvdXQgaW4gdGhlIHJvdW5kIG9mIDE2IGluIEJyYXppbC4gVGhlIHdvbWVuJ3MgdGVhbSByZWNlaXZlZCBhIGJvbnVzIG9mICQxLjcyIG1pbGxpb24gYWZ0ZXIgd2lubmluZyB0aGUgMjAxNSBXb3JsZCBDdXAgaW4gQ2FuYWRhLiBtZW4gbWFkZSB0aGUgV29ybGQgQ3VwIGZpZWxkIChmb3IgQnJhemlsKSBtYWxlIHBsYXllcnMgc2VsZWN0ZWQgdG8gdGhlIHJvc3RlciByZWNlaXZlZCBhICQ1NSwwMDAgYm9udXMsIHdoaWxlIHRoZSB3b21lbiByZWNlaXZlZCAkMTUsMDAwIGVhY2ggZm9yIG1ha2luZyB0aGUgMjAxNSBXb3JsZCBDdXAsIGFjY29yZGluZyB0byBjb3VydCBkb2N1bWVudHMuIEFkZGl0aW9uYWxseSwgdGhlIG1lbiBzaGFyZWQgYSAkMiBtaWxsaW9uIGJvbnVzIGZvciBxdWFsaWZ5aW5nLCB3aGlsZSB0aGUgd29tZW4gc2hhcmVkICQzMDAsMDAwLgpUaGV5IHdpbGwgZXZlbiB0YWtlIGxpemFyZHMgYW5kIHlvdW5nIGJpcmRzLiAKTEUgaGFzIGRhbmNlZCBhcm91bmQgaXQsIGFuZCBJJ3ZlIHNlZW4gc28gbWFueSBwZW9wbGUgcG9zdCBhbiBhcnRpY2xlIGZyb20gYSBmZXcgZGF5cyBhZnRlciB0aGUgbXVyZGVycyB0aGF0IHNheXMgdGhleSBjb2xsZWN0ZWQgZG5hIGZyb20gdGhlIHNjZW5lLiAKTG9va2luZyBmb3IgbG92ZSB0aGlzIFZhbGVudGluZSBEYXk/IFNUT1AgbG9va2luZyBpbW1lZGlhdGVseS4geW91IG5lZWQgdG8gYmUgbG9va2luZyBmb3IgaXMgSEFURSBpZiB5b3Ugd2FudCB0byBmaW5kIHlvdXIgcGVyZmVjdCBtYXRlLgpJIG1ldCBzb21lb25lIHdobyB3YXMgc3dpbW1pbmcgaW4gSWNlbGFuZCBhbmQgZ290IGFuIGFuY2llbnQgbWljcm9vcmdhbmlzbSBpbiBoaXMgZWFyIGFmdGVyIGdsb2JhbCB3YXJtaW5nIGV4cG9zZWQgaXQgZnJvbSBnbGFjaWFsIGljZS4gCk5vdCBhbGwgdGhlIG9mIFBva2VyIGhhcyBiZWNvbWUgZXF1YWxseSBzdWNjZXNzZnVsLCBob3dldmVyIHRoZSBzdWNjZXNzIGFsbCBjYW1lIGFjcm9zcyB0aGUgZ2FtZSBuYW1lZCBIb2xkJ2VtIFBva2VyLiAKRmlyc3QsIHRoZSBmdW5kIHdpbGwgaW5kZXggNTAgaGVkZ2UgZnVuZHMgYW5kIGFpbSB0byByZXBsaWNhdGUgdGhlaXIgcmV0dXJucy4gT24gdGhlIGxvbmcvc2hvcnQgc2lkZSwgdGhlIGZ1bmQgd2lsbCBhbHNvIGlkZW50aWZ5IHRoZSBtb3N0IHBvcHVsYXIgc3RvY2tzIHRoYXQgYWx0ZXJuYXRpdmUgYXNzZXQgbWFuYWdlcnMgYXJlIGJ1eWluZyBhbmQgdGFrZSBsb25nIHBvc2l0aW9ucyBpbiB0aGVtIHdoaWxlIHNob3J0aW5nIFMgNTAwIG9yIGZ1dHVyZXMgY29udHJhY3RzIGFuZCBhbnkgaW5kaXZpZHVhbCBuYW1lcyBpdCBkZWVtcyB1bmF0dHJhY3RpdmUuIFRoaXJkbHksIHRoZSBmdW5kIHdpbGwgdGFyZ2V0IHJpc2sgcHJlbWlhLgpUaGlzIHByb2JhYmlsaXR5IG9mIHdpbm5pbmcgY2FuIHRoZW4gYmUgbXVsdGlwbGllZCB3aXRoIHRoZSBwb3QsIHNheSBmb3IgZXhhbXBsZSAkMTAwLCAgYW5kIHlvdSB3aWxsIGdldCB5b3VyIGVxdWl0eS4KSSBoYXZlIGEgZGV2ZWxvcGVkIGEgdGltZSBtYWNoaW5lLiBZb3UgaGF2ZSBjaG9zZW4gMTkwOCBhcyB5b3VyIGRlc3RpbmF0aW9uLiAKTWlzc2luZyBsaW5rIGJvbmRpbmcgY2FwYWJpbGl0eS4gCkknbSBhcmd1aW5nIHNheWluZyBJIGRvbid0IE5FRUQgaXQgZm9yIHBpenphIEkganVzdCBsaWtlIGl0IHdpdGggcGl6emEuIFdlIGdldCB0byB0aGUgcGFydHkgYSBsaXR0bGUgbGF0ZSBhbmQgaGVyIGh1c2JhbmQgaXMgd2Fsa2luZyBpbiB3aXRoIHJhbmNoIGFuZCBJIHNlZSBhIHRhYmxlIGZ1bGwgb2YgcGl6emFzLiAKTURBIG5lZWRzIGl0IHRvIG1ha2UgYmV0dGVyIHJvY2tldHMuIApFcXVhbmltaXR5OiBObyBkcmFtYSBpbmR1Y2luZyBjcm9zc3Bvc3Rpbmcgb2YgY29udGVudCBmb3VuZCBpbiBvdGhlciBzdWJyZWRkaXRzLCBvciB2aWNlIHZlcnNhLiBMaWtld2lzZSwgcG9zdHMgZm91bmQgdG8gZGlyZWN0IG9kaW91cyBpbmZsdXhlcyBoZXJlIG1heSBiZSByZW1vdmVkLiBbbW9yZV0KQmVmb3JlIHlvdXIgcXVpdCBkYXRlLCBicmFpbnN0b3JtIGEgbGlzdCBvZiBsaXR0bGUgcGxlYXN1cmVzICAgYW55dGhpbmcgZnJvbSBhIGdsb3NzeSBuZXcgZmFzaGlvbiBtYWdhemluZSBvciB0dWJlIG9mIGV4cGVuc2l2ZSBsaXAgZ2xvc3MgdG8gYSBwcm9mZXNzaW9uYWwgbWFuaWN1cmUgb3IgZXZlbiBhIG1hc3NhZ2UuIApUaGUgY29udmVyc2F0aW9ucyB3ZXJlIGVuZGxlc3MuIEh1Z2gncyBsaWZlIHdpbGwgYmUgcmVtZW1iZXJlZCBhdCBhIHByaXZhdGUgY2VsZWJyYXRpb24gb2YgbGlmZSwgbGF0ZXIgdGhpcyBzdW1tZXIgYXQgaGlzIGZhdm91cml0ZSBzcG90LCBTYW5kIExha2UuLiAKVG91Y2ggYW5kIHZvY2FsIGNvbW11bmljYXRpb25zIGhlbHAgdXNzb2xpZGlmeSBvdXIgYm9uZHMgYXMgaW5kaXZpZHVhbHMgd2hvIGdldGFsb25nIHdpdGggZWFjaCBvdGhlci4gCkkgd2FzIGRpYWdub3NlZCB3aXRoIGRlcHJlc3Npb24gNCB5ZWFycyBhZ28gYW5kIHdhcyBwcmVzY3JpYmVkIGFudGkgZGVwcmVzc2FudHMuIEkgdG9vayB0aGVtIGZvciBhYm91dCBhIHllYXIgYW5kIHRoZW4gSSBnb3Qgc3VwZXIgbHVja3kuIEkgZm91bmQgbG92ZS4gSSBtZXQgbXkgbm93IGZpYW5jZWUgYXQgd29yayBhbmQgdGhlIGFmdGVyIG9ubHkgYSBjb3VwbGUgbW9udGggb2YgZGF0aW5nIHdlIG1vdmVkIGluIHRvZ2V0aGVyIGFuZCBJIHN0b3BwZWQgdGFraW5nIHRoZSBwaWxscyAoem9sb2Z0KSBwcmV0dHkgbXVjaCBjb2xkIHR1cmtleS4gVGhpcyBvbmUgZXZlbnQgcHJldHR5IG11Y2ggY29tcGxldGVseSBjaGFuZ2VkIG15IGxpZmUgYW5kIEkgd291bGQgc2F5IEkgbm93IHRoZSBvcHBvc2l0ZSBvZiBkZXByZXNzZWQuCkhlIGJyb2tlIGVhY2ggYW5kIGV2ZXJ5IHJ1bGUgZm9yIG1lIGR1cmluZyBvdXIgY291cnRzaGlwLiAKR2V0IGNhbWVyYXMsIHVwZ3JhZGUgbG9ja3MsIHRoZXJlIGEgd2hvbGUgYXJ0aWNsZSBoZXJlIHNvbWV3aGVyZSBhYm91dCB1bm9idHJ1c2l2ZSBzZWN1cml0eSBtZWFzdXJlcy4gWW91ciBzaXN0ZXJzIGFyZSBnb2luZyB0byBnbyB0aHJvdWdoIGEgdG91Z2ggdGltZSwgYnV0IHRoZXkgY29tZSB0aHJvdWdoIGl0IHdpdGggeW91IGFuZCBTTyB0byBoZWxwIHRoZW0uIFlvdSBoYXZlIG5vdGhpbmcgdG8gZmVhciBmcm9tIHRoZSBjb3VydHMgYW5kIHNpbmNlIHNoZSBjb3VudGluZyBvbiBoZXIgcHJvZ3JhbW1pbmcgb2YgeW91IHRvIHJlbWFpbiBpbnRhY3Qgc2hlIG5vdCBhIHNlcmlvdXMgdGhyZWF0LiAKQW15LCBhIGZvcm1lciBkdXR5IG1hbmFnZXIsIHJlc2lnbmVkIGhpcyBwb3NpdGlvbiBsYXN0IHdlZWsgYWZ0ZXIgYSBsb25nIGJhdHRsZSB0byByZWNvdmVyIHVucGFpZCB3YWdlcy4gSGUgZXhwbGFpbmVkIHRoYXQgaGlzIHBheSBzaW1wbHkgc3RvcHBlZCBjb21pbmcgdGhyb3VnaCBvbmUgZGF5Li4gClRoZSBpbnNpZ2h0cyBiZWluZyBwcm92aWRlZCBhcmUgbm90IHBhcnRpY3VsYXJseSBncm91bmRicmVha2luZyBpbiBsaWdodCBvZiB3aGF0IHdlIGtub3cgbm93IGFib3V0IHBzeWNob2xvZ3kKTWV0cm8sIHRoZSBjb3VwbGUncyBhbmltYWwgcmVsYXRlZCBkcmFtYSBkb2Vzbid0IGp1c3QgZXh0ZW5kIHRvIHBldHMuIExhc3QgeWVhciwgQ2hyaXMgUHJhdHQgZmFjZWQgYSBtYWpvciBiYWNrbGFzaCBmb3IgY29tbWVudHMgaGUgbWFkZSBhYm91dCBodW50aW5nLiBMYXN0IHllYXIsIENocmlzIFByYXR0IGZhY2VkIGEgbWFqb3IgYmFja2xhc2ggZm9yIGNvbW1lbnRzIGhlIG1hZGUgYWJvdXQgaHVudGluZy4gVGhlIGFjdG9yIHdhcyBsYWJlbGVkICJyZXB1bHNpdmUgYW5kICJsb2F0aHNvbWUiIGFmdGVyIGhlIHRyaWVkIHRvIGV4cGxhaW4gd2h5IGhlIGxpa2VzIHRvIGh1bnQuCkFtYXpvbiBsaXN0aW5nIGl0IG93biBwcm9kdWN0cyBhaGVhZCBvZiBjb21wZXRpbmcgcHJvZHVjdHMgaW4gaXQgbWFya2V0cGxhY2UuLiAKIldlIGhhdmUgYmVhdXRpZnVsIHNpbHZlciBtZWRhbHMsIGFuZCB3aGF0IGFuIGFtYXppbmcgZXhwZXJpZW5jZS4gCk9uZSB0aW1lIHNoZSByaXBwZWQgYSBiaWcgZmFydCBhbmQgaGUgZ2F2ZSBoZXIgdGhpcyByZXZvbHRlZCBsb29rLCB3ZW50IG92ZXIgdG8gImNoZWNrIGhlciBkaWFwZXIsIiBhbmQgdG9sZCB1cyBpbiB0aGUgbW9zdCBkaXNndXN0ZWQgdG9uZSBvZiB2b2ljZSBJIGV2ZXIgaGVhcmQsICJNYW1hIGJvb3BpbmcuIiBXZSBzdGlsbCBzYXkgaXQgdG8gZWFjaCBvdGhlciBwcmV0dHkgcmVndWxhcmx5LiBXZSBnaXZlIGVhY2ggb3RoZXIgd2lja2VkIHNpZGUgZXllIHdoZW4gd2UgZG8uCk1ldGhvZHM6IEZvbGxvd2luZyBhIDYgd2VlayBiYXNlbGluZSwgSWdHIGFudGlib2RpZXMgYWdhaW5zdCAyNjYgZm9vZCBhbnRpZ2VucyB3ZXJlIGRldGVjdGVkIGJ5IEVMSVNBLiBUaGVuLCB0aGUgcGF0aWVudHMgd2VyZSByYW5kb21pc2VkIHRvIGEgNiB3ZWVrIGRpZXQgZWl0aGVyIGV4Y2x1ZGluZyBvciBpbmNsdWRpbmcgc3BlY2lmaWMgZm9vZHMgd2l0aCByYWlzZWQgSWdHIGFudGlib2RpZXMsIGluZGl2aWR1YWxseS4gRm9sbG93aW5nIGEgMiB3ZWVrIGRpZXQgZnJlZSBpbnRlcnZhbCBhZnRlciB0aGUgZmlyc3QgZGlldCBwZXJpb2QsIHRoZSBzYW1lIHBhdGllbnRzIHdlcmUgZ2l2ZW4gdGhlIG9wcG9zaXRlClNhbHQgRm9vdCBTY3J1Yi4gQWxsIHlvdSBuZWVkIGFyZTogMSBjdXAgb2Ygc2VhIHNhbHQgb3IgRXBzb20gc2FsdCwgMS8yIGN1cCBvZiBjb2xkIHdhdGVyIGFuZCAyIGRyb3BzIG9mIGxhdmVuZGVyIGVzc2VudGlhbCBvaWwuIFN0YXJ0IGJ5IGdyYWR1YWxseSBhZGRpbmcgd2F0ZXIgdG8gc2FsdCBhbmQgbGF2ZW5kZXIgb2lsLiBUaGUgbWl4dHVyZSBzaG91bGQgbG9vayBsaWtlIGEgcGFzdGUuIE9uY2UgeW91J3ZlIHJlYWNoZWQgdGhlIGRlc2lyZWQgY29uc2lzdGVuY3ksIHlvdSBtYXkgbm93IHVzZSB5b3VyIHNhbHQgZm9vdCBzY3J1Yi4KSWYgdGhlIGJpZyBibGluZCByYWlzZXMgdG8gMTUwMCBwcmUgZmxvcCBpbnRvIGEgcG90IG9mIDUwMCB3aXRoIHRoZSBibGluZHMgYXQgMTAwIHRoZW4gYW5kIHlvdSBhcmUgc2l0dGluZyB3aXRoIHBvY2tldCBraW5ncyB5b3UgbXVzdCBub3cgY2FsbCAxNTAwIGludG8gYSBwb3Qgb2YgMjAwMCBzdXBwb3NpbmcgZXZlcnlvbmUgZWxzZSBmb2xkcywgaGF2aW5nIHRoZSBzZWNvbmQgYmVzdCBoYW5kIHRoZW9yZXRpY2FsbHkgeW91IGNhbiBqdXN0aWZ5IGNhbGxpbmcgMS4yNSB0byBvbmUgb24geW91ciBjaGlwcy4gYnV0IHdhaXQgdGhlcmUgaXMgbW9yZSBsZXRzIGhhdmUgYSBsb29rIGF0IHlvdXIgY2hpcCBzdGFjayBhcyB3ZWxsLCBpZiB5b3UgYXJlIHRvIGNhbGwgMTUwMCBpbnRvIGEgcG90IGJ1dCB5b3Ugb25seSBoYXZlIDE4MDAgaW4gY2hpcHMsIHlvdSBuZWVkIHRvIGNvbnNpZGVyIHRoZSBjaGFuY2VzIG9mIGxvb3NpbmcgeW91ciBzZWF0LCBzaW5jZSB0aGUgYmxpbmRzIGFyZSBhdCAxMDAgeW91IHdvdWxkIG9ubHkgaGF2ZSAyIHJvdW5kcyBsZWZ0IHRvIGhpdCBzb21ldGhpbmcgZWxzZSBhbmQgdGhhdCBpZiB0aGUgaW5pdGlhbCByYWlzZXIgZG9lc24gcmFpc2Ugd2hpY2ggaXMgdW5saWtlbHkgc2luY2UgdGhleSBoYXZlIGFscmVhZHkgcmFpc2VkIDMgdGltZXMgb3ZlciB0aGUgcG90LCBzbyBmcm9tIHRoZXJlIHlvdSBkZWNpc2lvbiBiYXNlZCBvbiBhIGZldyBudW1iZXIgc2hvdWxkIGJlIHRvIGdvIGFsbCBpbi4KSXQgd2lsbCBhbHNvIGFsbW9zdCBlbnN1cmUgdGhleSB0aGV5IG5ldmVyIGdldCBhbiBlZHVjYXRpb24gYW5kIHdpbGwgcmVtYWluIG9uIGFzc2lzdGFuY2UgbW9zdCwgaWYgbm90IGFsbCBvZiB0aGVpciBsaWZlLiBJZiB0aGUgY2hpbGQgaXMgZm9yY2VkIHRvIHJlbWFpbiBpbiB0aGF0IHNpdHVhdGlvbiwgaXQgd2lsbCBoYXZlIGEgdmVyeSBsb3cgcXVhbGl0eSBvZiBsaWZlIGFuZCBhbHNvLCBtb3N0IGxpa2VseSwgbGl2ZSBhIGZ1bGwgbGlmZSByZWx5aW5nIG9uIGFzc2lzdGFuY2UgcHJvZ3JhbXMgKHllYWggeWVhaCwgSSBrbm93IHRoaXMgb25lIHN1cGVyIGdlbml1cyB3aG8ncyB2ZXJ5IHBvb3IgdGVlbmFnZSBtb20gd2FudGVkIHRvIGFib3J0LCBidXQgZGlkbid0LCBhbmQgaGUncyBub3cgYSBtdWx0aSB0cmlsbGlvbmFpciB3aG8gY3VyZWQgc3VwZXIgYWlkcy4gV2UncmUgbm90IHRhbGtpbmcgYWJvdXQgaGltLCB3ZSdyZSB0YWtpbmcgYWJvdXQgbm9ybXMgYW5kIGF2ZXJhZ2VzKS4uIApCZXN0IHdheSBsb2dpc3RpY2FsbHkgZm9yIG1lIHRvIGRvIGl0IGlzIGZpcnN0IGNvbWUgZmlyc3Qgc2VydmUgYW5kIGdvIGRvd24gdGhlIGxpc3Qgb2YgZXZlcnlvbmUuIEFscmVhZHkgbWF5YmUgYSAxLzNyZCBvZiB0aGUgd2F5IHRoZXJlLiBUaGUgYmlnZ2VzdCByZWFzb24gaXQgZ29pbmcgdG8gdGFrZSBtZSBhd2hpbGUgdG8gcHJvY2VzcyBldmVyeW9uZSB3aXRoZHJhd2FscyAobm90IGEgc21hbGwgbnVtYmVyKSwgaXMgYmVjYXVzZSBJIGRvbiBob2xkIGl0IGFsbCBpbiBidGMuIApSYWlzZSB5b3VyIGFybXksIHNlbmQgaXQgaW4gdG8ga2lsbCBhcyBtYW55IG9mIGhpcyBldmVudCB0cm9vcHMgYXMgcG9zc2libGUsIHRoZW4gdW4gcmFpc2UgeW91ciBhcm15LiBXYWl0IDYgbW9udGhzIGFuZCBkbyBpdCBhZ2Fpbi4gCkl0IG9mdGVuIHNhaWQgdGhhdCBhIG1hbiBob21lIGlzIGhpcyBjYXN0bGUuIApUcnkgdG8gcGxheSBhbGwgdHlwZXMgb2YgcGVvcGxlLiBUaG9zZSB5b3UgY2FuIHJlYWQsIHRob3NlIHlvdSBjYW4ndCByZWFkLCB0aG9zZSB3aG8gc3RpY2sgdG8gdGhlIHNhbWUgc3RyYXRlZ3ksIHRob3NlIHdobyBoYXZlIG5vIHN0cmF0ZWd5IGF0IGFsbCAgIGhhdmUgeW91ciBvcHBvbmVudHMgcnVuIHRoZSBnYW11dCBvZiBwZXJzb25hbGl0aWVzLiBXaGVuIHlvdSBmaW5kIGEgdHlwZSBvZiBwZXJzb24geW91J3JlIHdlYWtlciBhZ2FpbnN0LCB6ZXJvIGluIG9uIHRoZW0gYW5kIHBsYXkgdGhlbSB1bnRpbCB0aGUgd2Vha25lc3MgZ29lcyBhd2F5LgpUd28gY2FyZHMgYXJlIGRlYWx0IGZhY2UgZG93biB0byBlYWNoIHBsYXllci4gU3RhcnRpbmcgb24gdGhlIGRlYWxlciBsZWZ0LCBlYWNoIHBsYXllciBkZWNsYXJlcyB3aGV0aGVyIHRoZXkgYXJlIGluIG9yIG91dC4gCkkgYWx3YXlzIGtpc3NpbmcgdGhlbSBhbmQgdGVsbGluZyB0aGVtIEkgbG92ZSB0aGVtLiAKSSB0aGluayBjbGltYXRlIGNoYW5nZSBtYWtlcyBpdCBpbmV2aXRhYmxlLiBNb3N0IG9mIHRoZSBjb3VudHJ5IGZyZXNod2F0ZXIgaXMsIGFmdGVyIGFsbCwgcXVpdGUgZmFtb3VzbHkgY29uY2VudHJhdGVkIGluIHRoZSBNaWR3ZXN0LCBhbmQgdGhlIE5vcnRoZWFzdCBhbmQgTWlkd2VzdCBhcyBhIHdob2xlIGFyZSBtdWNoIG1vcmUgcmVzaXN0YW50IHRvIGNsaW1hdGljIChhbmQgb3RoZXJ3aXNlKSBzaG9ja3MgdGhhbiB0aGUgU291dGggb3IgSW50ZXJpb3IgV2VzdCBhcmUuClRoZXkgbG92ZSB0aGF0IHlvdSdyZSBsaWtlIHRoZSBsaXZlIHZlcnNpb24gb2YgS2FtYSBTdXRyYSBhbmQgZmVlbCBjb21mb3J0YWJsZSBjb21pbmcgdG8geW91IGZvciBhZHZpY2UuIENvIHdyaXR0ZW4gYnkgQ291cnRuZXkgS2lyaG9mZiBhbmQgU3RldmVuIENyb3dkZXIgV29tZW4gbWF5IGJlIGRyYXduIHRvIGEgc2V4eSBCb25kIHR5cGUgaW4gYSBtb3ZpZSwgYnV0IHRoaXMgaXMgaGFyZGx5IHRoZSBzb3J0IG9mIG1hbiB0aGV5IGFyZSBob3BlZnVsbHkgYXR0cmFjdGVkIHRvIGluIHJlYWwgbGlmZS4gWW91ciBjb25maWRlbmNlIGlzIG9mZiB0aGUgY2hhcnRzIEhvdyBtYW55IHRpbWVzIGRvIHdlIGhlYXIgZnJvbSBtZW4gdGhhdCBjb25maWRlbmNlIGlzIHNleHk/IFlvdSBqdXN0IG5lZWQgdG8gc3RhbmQgZmlybSB3aXRoaW4geW91ciBoZWFydCwgaGF2aW5nIGNvbXBsZXRlIGZhaXRoIGluIHlvdXJzZWxmLiAKUHVyaXRhbiBQcmVldCdzIHJhaWQgb24gSW50ZXJuZXQgcG9rZXIgc2l0ZXMgaW4gYSBjb3VudHJ5IHdoZXJlIGdhbWJsaW5nIGlzIGxlZ2FsIGluIGFsbCA1MCBzdGF0ZXMsIHdoZXJlIGdvdmVybm1lbnRzIGFyZSBwdXNoaW5nIHRoZWlyIG93biBsb3R0ZXJ5IGdhbWVzIGV2ZXJ5IGRheSwgc2VlbXMgYSBiaXQgY29udHJhZGljdG9yeSB0byBzYXkgdGhlIGxlYXN0IGFuZCBJJ20gd2lsbGluZyB0byBiZXQgdGhhdCBzb21lIG9mIEJoYXJhcmEncyBzdGFmZiBoYXZlIHBsYXllZCBwb2tlci4gClR3ZW50eSBzZXZlbiBwYXBlcnMgd2VyZSBpbmNsdWRlZCBpbiB0aGlzIHJldmlldzogMTAgUkNUcyAoYXJvdW5kIDI0MCBwYXRpZW50cyk7IGFuZCAxNyBzdHVkaWVzIGxhYmVsbGVkIGFzIGNhc2Ugc2VyaWVzIChhcm91bmQgMjAwIHBhdGllbnRzKSAuIApUaGUgd2F5IHRoZXkgZHJlc3NlZC4gVGhlaXIgc29jaW9lY29ub21pYyBzdGF0dXMsIGV0Yy4pLiAKQW5sc3NsaWNoIGRlciBXZWx0YXVzc3RlbGx1bmcgMTg3MyB3dXJkZSBkYXMgQmF1d2VyayB6dSBlaW5lbSBIb3RlbCB1bWdlYmF1dC4gWnVsZXR6dCB3YXJlbiBNYWdpc3RyYXRlIGRlciBTdGFkdCBXaWVuIHVuZCBCcm9zIGluIGRlciBJbW1vYmlsaWUgdW50ZXJnZWJyYWNodC4uIApUaGlzIHdpbGwgbGV0IHlvdSBsZWFybiB0aGUgU2FuZHN0b3JtIHNwZWxsLiBJdCBoYXMgaXRzIG93biByZWFnZW50LCBidXQgaXQgZ2l2ZXMgeW91IHNvbWUgbXVjaCBuZWVkZWQgQW9FLiBJdCBtaWdodCBub3QgYmUgYSBiYWQgaWRlYSB0byBsZWFybiBGaXJlYmFsbCBhdCA0LCBidXQgSSB1bnN1cmUgb2YgaXRzIGVmZmVjdGl2ZW5lc3MuIApJdCBlYXNpZXIgdG8gc2l0IHRocm91Z2ggYSAyMCBtaW4gZXBpc29kZSB2cyBhIDQ1IG1pbiBlcGlzb2RlLiAKU29tZSBncm91cHMgYXJlIGFyZ3VpbmcgZm9yIHNvbWUgZm9ybSBvZiBsZWdhbGl6YXRpb24sIHdoaWxlIG90aGVycyBzYXkgcHJvc3RpdHV0aW9uIG11c3QgcmVtYWluIGFnYWluc3QgdGhlIGxhdy4KUGxlYXNlIGxpbmsgZGlyZWN0bHkgdG8gdGhlIGNvbW1lbnQgdGhyZWFkIGNvbnRhaW5pbmcgdGhlIGRyYW1hLiAKVGhyb3VnaCB0aGUgbGl2ZSBiZXR0aW5nIHBsYXRmb3JtIHlvdSBjYW4gYmV0IG9uIGJpZyBnYW1lcyBhcyB0aGV5IHVuZm9sZCBhbmQgeW91IGNhbiBkbyB0aGF0IHRocm91Z2ggeW91ciBQQyBvciB0aHJvdWdoIHlvdXIgbW9iaWxlIG9uIHRoZSBhd2FyZCB3aW5uaW5nIG1vYmlsZSBwbGF0Zm9ybSB0aGF0IGFsbG93cyB5b3UgdG8gZ2V0IGluIG9uIHRoZSBhY3Rpb24gZnJvbSBhbnl3aGVyZSB5b3Ugd2FudCwgYXMgbG9uZyBhcyB5b3UgaGF2ZSBhbiBpbnRlcm5ldCBjb25uZWN0aW9uLiAKMSkgQmV0dGVyIHNlYXRpbmcgcG9zaXRpb24uIFlvdSBmZWVsIGxvd2VyIGFuZCBtb3JlIGNvbm5lY3RlZCB0byB0aGUgcm9hZC4gV1JYIGZlZWxzIGxpa2UgeW91IHNpdHRpbmcgaW4gYSBsaWZ0ZWQgdHJ1Y2sgYWZ0ZXIgZ2V0dGluZyBvdXQgb2YgdGhlIDg2LgpXZSBoYWFzdHRlbiBvbnMgdGUgdm9ldCB2b29yIGhldCBsYWF0c3RlIHN0dWtqZSB2YW5hZiBkZSBwYXJraW5nIGVuIGtvbmRlbiBub2cgbmV0IG1lZS4gWm9hbHMgb3ZlcmFsIHdhcyBkZSB0b3VyIGFsbGVlbiBpbiBoZXQgU2xvd2Fha3MsIG1hYXIgaGllciBrcmVnZW4gd2UgZWVuIHBhcGllcnRqZSBtZXQgd2F0IHVpdGxlZyBpbiBoZXQgRW5nZWxzIG1lZSAod2Ugd2FyZW4gdHJvdXdlbnMgZGUgZW5pZ2VuIHZhbiBkZSBncm90ZSBncm9lcCBtZXQgem8gcGFwaWVydGplLikuIAoiVGhlcmUgaXMgbm90IGEgbG90IG9mIGRlYnQsIG1vc3Qgb2YgaXQgaXMgc2VjdXJlZCB0byBhIGJhbmsgb3IgdGhlIFZpY3RvcmlhbiBMaXF1b3IgYW5kIEdhbWluZyBSZWd1bGF0b3IgaW4gcmVzcGVjdCBvZiBlbGVjdHJvbmljIGdhbWluZyBlbnRpdGxlbWVudHMsIiBNciBDaGFtYmVybGFpbiBzYWlkLgpJbnN0ZWFkLCBhcHBseSBzb21lIGhlYXZ5IGVycm9yIGNvcnJlY3RpbmcgYW5kIGVuY29kZSBzZXZlcmFsIGNvcGllcyBpbnRvIHRoZSBETkEuCkJ1dCBsb29rIHdobydzIHN0aWxsIGhlcmUgYXMgcGxheSBlbmRzIGZvciB0aGUgZGF5LiBEaWFuZSBCb3JnZXIgZnJvbSBXaW5uaXBlZyBpcyBvbmUgb2YgZml2ZSB3b21lbiBpbiB3aGF0IGlzIHN0aWxsIGxhcmdlbHkgYSBtYW4ncyBnYW1lLiBTaGUncyBhIHBzeWNob2xvZ3kgc3R1ZGVudCBhdCBDYWxpZm9ybmlhIEx1dGhlcmFuIFVuaXZlcnNpdHksIG9mIGFsbCBwbGFjZXMsIHdoZXJlIHNoZSB3aWxsIGhhdmUgdG8gZmluaXNoIGhlciBtYXN0ZXIncyB0aGVzaXMgaWYgc2hlIGRvZXNuJ3QgcGxhY2Ugd2VsbCBhdCBCaW5pb24ncy4gCk9uZSBvZiB0aGUgZmF2b3JpdGVzIGlzIHRoZSBzdWl0ZWQgd2F0ZXJwcm9vZiBzdGFsd2FydCB0YWJsZSBmZWx0IGNsb3RoLiBUaGlzIGV5ZSBjYXRjaGluZyBkZXNpZ24sIHdoaWNoIGZlYXR1cmVzIGEgcGF0dGVybiBtYWRlIHVwIG9mIHRoZSBmb3VyIGRpZmZlcmVudCBjYXJkIHN1aXRlcywgY29tZXMgaW4gY29sb3JzIGxpa2UgYmxhY2tiZXJyeTsgcm95YWwgYmx1ZTsgbWlkbmlnaHQgYmx1ZTsgcG9sbzsgcGxhdGludW07IGVtZXJhbGQ7IGZvcmVzdDsgYnVyZ2FuZHk7IHJlZDsgZ29sZDsgYnJvbnplOyBwdXJwbGU7IHNpbHZlcjsgY2hvY29sYXRlOyB5ZWxsb3c7IGFuZCBsYXZlbmRlci4gWW91IGNhbid0IGdvIHdyb25nIHdpdGggdGhpcyBwb2tlciB0YWJsZSBjbG90aC4gWW91IGp1c3QgbmVlZCBhbiBleWUgZm9yIGdvb2QgY29sb3IgY29tYmluYXRpb25zIHNvIHRoYXQgeW91ciBwb2tlciB0YWJsZSBjbG90aCBjb2xvciBkb2Vzbid0IGNsYXNoIHdpdGggdGhlIHByb21pbmVudCBjb2xvcnMgdGhyb3VnaG91dCB0aGUgcmVzdCBvZiB0aGUgcG9rZXIgcm9vbSdzIGFyZWFzLgpTdWNoIGEgc21hcm15IHJlc3BvbnNlLiBPd25pbmcgc3RvY2sgaXMgb3duaW5nIHBhcnQgb2YgdGhlIGNvbXBhbnksIGFuZCB0aGUgY29tcGFueSBvd25zIHRoZSBtZWFucyBvZiBwcm9kdWN0aW9uLiBIYXZpbmcgdGhlIG9wdGlvbiB0byBidXkgdGhlIHN0b2NrIGF0IGEgY2VydGFpbiBwcmljZSBpbiB0aGUgZnV0dXJlIGlzIGEgdHJpdmlhbCBkaWZmZXJlbmNlIHRoYXQgZGlzdHJhY3RzIGZyb20gbXkgb2J2aW91cyBwb2ludC4gSSB3b24gYWxsb3cgeW91IHRvIHdhc3RlIGFueSBtb3JlIG9mIG15IHRpbWUuIFlvdSBzZWUsIEkgYSB3b3JrZXIsIGFuZCBJIG11c3QgbWFuYWdlIG15IG1lYW5zIG9mIHByb2R1Y3Rpb24uIEkgbGVhdmUgeW91IHRvIGNvbnRpbnVlIG5pdHBpY2tpbmcgYW5kIGRpc3RyYWN0aW5nIHBlb3BsZSBmcm9tIHRydXRoLiBUaGF0IGEgZGVzcGljYWJsZSBob2JieSB5b3UgdGFrZW4gdXAgaGVyZS4KWW91IGtub3cgd2hhdCB0aGUgZ2FtZSBjb3VsZCBoYXZlIGJlZW4sIGJlY2F1c2UgeW91IHBsYXkgdGhlIGdhbWUgYXMgaXQgd2FzIGludGVuZGVkIGJlZm9yZSBmaW5hbmNpYWwgcmVhbGl0eSBjYXRjaGVzIHVwIHdpdGggaXQuIi4gClRoaXMgZ2lybCBpcyB3b3JraW5nIG9uIGhlcnNlbGYgZm9yIHlvdSwgZm9yIHlvdXIgcmVsYXRpb25zaGlwLiAKU28geW91ciBhcmd1bWVudCBub3cgc2VlbXMgdG8gYmUgdGhhdCB0aGUgb3RoZXJzIGNvbnRyaWJ1dGUgdG8gZ2FtZXBsYXksIHNvIHdlIGNhbiBicnVzaCB0aG9zZSBvZmYuIEJ1dCB0aGUgb25seSByZWFzb24gYmxhY2sgZmVtYWxlIG5hemkgZXhpc3QgaW4gQ09EIGlzIGJlY2F1c2UgeW91IGNhbiBjdXN0b21pemUgeW91ciBjaGFyYWN0ZXIuIApXaGVuIHRoZSB0d28gbWVuIGFycml2ZWQgYXQgVHJhdm9sdGEgaG90ZWwgYnVuZ2Fsb3csIHRoZSBzdWl0IGFsbGVnZXMgdGhlIGFjdG9yIGJlZ2FuIGNhcmVzc2luZyB0aGUgbWFzc2V1ciBsZWcsIHNjcm90dW0sIGFuZCBwZW5pcy4gVGhlIHN1aXQgdGhlbiBjbGFpbXMgdGhhdCBUcmF2b2x0YSBtYXN0dXJiYXRlZCBhbmQgb2ZmZXJlZCB0byBkbyB0aGUgc2FtZSBmb3IgdGhlIG1hc3NldXIuCkRlZmFtYXRpb24gb2YgdGhlIHN1YnJlZGRpdCBpdHNlbGYgYW5kIHRob3NlIHdobyBkaXNyZWdhcmQgdGhlIHNpZGViYXIgcnVsZXMgd2lsbCBiZSBiYW5uZWQgcGVybWFuZW50bHkuIApJdCBpcyBub3QgYSBmcmVlIGJlbmVmaXQuIApEaXNyZWdhcmRpbmcgcGVyZm9ybWFuY2UgY29uY2VybnMsIEkgc3RpbGwgbm90IHlldCByZWFkeSB0byBnaXZlIHVwIG9uIGZyZWVyIGVmZmVjdHMuIFRoZSBpbmFiaWxpdHkgKElJUkMpIHRvIGNyZWF0ZSBhIENvbnRUIGxpa2UgaW50ZXJwcmV0ZXIgbGl0ZXJhbGx5IG1lYW5zIG5vdGhpbmcgdG8gbWUsIGFuZCBJIGhvbmVzdGx5IHRoaW5rIHRoYXQgYXQgbGVhc3QgY29uY2VwdHVhbGx5IHRoZXkgbWFrZSBtb3JlIHNlbnNlIHRoYW4gbW9uYWQgc3RhY2tzLiBUaGF0IGlzLCBjb25jZXB0dWFsbHksIGlmIG9uZSBpZ25vcmVzIHBlcmZvcm1hbmNlIGFuZCB0aGUgaGFycm93aW5nIHN5bnRheCBmb3IgY3JlYXRpbmcgaW50ZXJwcmV0ZXJzIChtdWNoIG9mIHdoaWNoIHN0ZW1zIGZyb20gSGFza2VsbCBsYWNrIG9mIG9wZW4gZGF0YSB0eXBlcywgYnV0IEkgc2F2ZSB0aGF0IHJhbnQgZm9yIGFub3RoZXIgZGF5KS4KVGhlIGdpcmwgYXQgdGhlIGNvdW50ZXIgd2FzIHZlcnkgbmljZSBhYm91dCBpdCBhbmQgcHJvZmVzc2lvbmFsLCBhbmQgd2FzIGxpa2UgIlNpciwgeW91IG5lZWQgdG8gcGF5IGZvciB0aG9zZSBmaXJzdC4iIEF0IGZpcnN0IGhlIGtlcHQgcHJldGVuZGluZyB0byBiZSB0aXJlZCBhbmQgbm90IGhlYXIgaGVyLCBidXQgZXZlbnR1YWxseSB0dXJuZWQgYmFjayBhcm91bmQgYW5kIGJyb3VnaHQgdGhlbSB0byB0aGUgY291bnRlci4gClBlb3BsZSBnYWluIGxpdHRsZSBmcm9tIExveWFsdHkgaW4gV2VzdGVyb3MsIGFueXdheS4gSW4gb3JkZXIgdG8gcmV0YWluIHBvd2VyLCBhc3N1bWluZyBNYXJnYWVyeSB3b3VsZCBiZSB0aGUgb25lIHdpdGggcHJpbWFyeSBwb3dlciwgc2hlIHdvdWxkIG9wZXJhdGUgaW4gYSB3YXkgdG8gaGF2ZSBwZW9wbGUgbG92ZSBoZXIsIGluIGEgdmVyeSBNYWNoaWF2ZWxsaWFuIHNvcnQgb2Ygd2F5KGJhc2luZyB0aGlzIG9mZiBvZiBoZXIgaW50ZXJhY3Rpb25zIHdpdGggSm9mZnJleSBhbmQgdGhlICJpZiB5b3UgZ2l2ZSB0aGVtIHlvdXIgbG92ZSwgdGhleSByZXR1cm4gaXQgYSB0aG91c2FuZGZvbGQiIGNvbW1lbnQgYW5kIHRoZSBzY2VuZSB3aXRoIHRoZSBjaGlsZHJlbikuIApUaGF0IG1heSBiZSBzdXJwcmlzaW5nIHRvIHNvbWUsIGJlY2F1c2UgYSBwb2tlciBjYWxjdWxhdG9yIGlzIGFuIGluaGVyZW50bHkgbWF0aGVtYXRpY2FsIG9kZHMgZ2FkZ2V0LCB3aGljaCB3b3VsZCBzZWVtaW5nbHkgaGVscCB5b3UgaW4gY2VydGFpbiBoYW5kcyAgIGFzIHdlbGwgaXQgZG9lcy4gCkp1c3QgbG9vayBhdCB0aGUgYW1hemluZyB0ZWNobm9sb2d5LCBtZWRpY2luZSBhbmQgYWJ1bmRhbmNlIG9mIGZvb2QgdGhhdCBzdXJyb3VuZHMgdXMuIElzIGVhY2ggZW5hYmxlZCBieSBhIG1hZ2ljYWwgaW1wIG9yIGZhaXJ5IGluc2lkZSBvciBwZXJoYXBzIGEgbWFnaWNhbCBpbmNhbnRhdGlvbj8gRWFjaCBiZW5lZml0IHdlIGVuam95IGlzIHJlaW5mb3JjaW5nIGV2aWRlbmNlIHRoYXQgaW4gZ2VuZXJhbCwgYW5kIG92ZXIgdGltZSwgc2NpZW5jZSB3b3Jrcy4gClR0dWtzZW9tIHJlc29ydCwgdGhlcmVzIGEgY29vbCBhcmVhIHRvIGhhbmcgb3V0IGFuZCBqdXN0IGNoaWxsIG5leHQgdG8gYSB3YXRlciBwYXJrLiAKU296aWFsZHJhbWEgbWl0IGVpbmVyIGdybyBDaHJpc3RpbmEgTGluZGJlcmcKUmVzcGVjdCB0aGUgcHJvcGVydHkgcmlnaHRzIG9mIG90aGVycyBhbmQgb25seSBkaWcgd2hlcmUgeW91IGhhdmUgcGVybWlzc2lvbi4gQWx3YXlzIGZpbGwgaW4gYW55IGhvbGVzIHlvdSBkaWcgYW5kIHJlbW92ZSBhbnkgdHJhc2ggeW91IGZpbmQuIENhcnJ5IGEgdHJhc2ggYmFnIGFuZCBiZSBhIGdvb2QgY2l0aXplbi4gUGljayB1cCBhbnkgZGVicmlzIHlvdSBjb21lIGFjcm9zcyBvciB1bmVhcnRoLgpJY2ggbWNodGUgZWlnZW50bGljaCBlcnN0IHp1IFN0YXJzIHp1cmNra2VocmVuLCB3ZW5uIGljaCBnZW5nZW5kIEZQUHMgcHJvIE1vbmF0IGVycmVpY2hlbiBrYW5uIHVtIG1pbmRlc3RlbnMgZGVuIEdvbGRTdGFyIFN0YXR1cyB6dSBlcnJlaWNoZW4uIEVyc3QgZGFubiBzY2hlaW50IFN0YXJzIGZyIG1pY2ggd2llZGVyIGx1a3JhdGl2IHp1IHNlaW4uClRoYXQgYmVpbmcgc2FpZCwgeW91IGRvIG1ha2UgYSBuaWNlIHBvaW50IGFib3V0IHBlb3BsZSB0YWtpbmcgYW50aWJpb3RpY3MgbmVlZGxlc3NseS4gSSB3aXNoIGRvY3RvcnMgd291bGRuIHByZXNjcmliZSBhbnRpYmlvdGljcyBmb3IgYSBjb21tb24gY29sZCBvciBmb3IgYnJvbmNoaXRpcy9mbHUgKHdoaWNoIGlzIGEgdmlydXMpLiBQYXRpZW50cyBvZnRlbiBkZW1hbmQgYW50aWJpb3RpY3MgZm9yIG1pbm9yIGlsbG5lc3Nlcywgb3IgZm9yIGlsbG5lc3NlcyB3aGljaCBhcmUgYmV0dGVyIHRyZWF0ZWQgd2l0aCBhbnRpdmlyYWxzLiAKVGhlIGNsb3Qgd2FzIHNvIGhlYXZ5IGl0IGxpdGVyYWxseSB3ZWlnaGVkIGRvd24gbXkgdW5kZXJ3ZWFyIGVub3VnaCBmb3IgaXQganVzdCBmYWxsIG91dC4uIApBcmUgb3ZlcndoZWxtZWQgYnkgYWxsIHRoZSB0cmVhdG1lbnQgY2hvaWNlcwoiSSdtIG9uZSBvZiB0aG9zZSBwZW9wbGUgd2hvIHRoaW5rcyB0aGF0IGFjdGlvbnMgc3BlYWsgbG91ZGVyIHRoYW4gd29yZHMsIiBzYXlzIE9kYS4gIkkgY291bGQgc2F5IGFsbCBraW5kcyBvZiB0aGluZ3MsIGJ1dCBhdCB0aGUgZW5kIG9mIHRoZSBkYXksIEknZCBsaWtlIGZhbnMgdG8gc2VlIHRoYXQgd2UncmUgdGFraW5nIGl0IHNlcmlvdXNseSBieSBzdGFydGluZyB0byByZXN1cnJlY3QgdGhlIGJyYW5kIGluIHRoZSB3YXkgdGhhdCB3ZSBhcmUgYW5kIHRvIGNvbnRpbnVlIHRvIHByb3ZlIG91cnNlbHZlcyBtb3ZpbmcgZm9yd2FyZC4gCjIyLiAKU28sIGhlIGhhcyB0byBnbyBsb29raW5nIGFuZCB0cmllcyB0byBtYWtlIGEgbmFtZSBmb3IgaGltc2VsZi4gCkl0J3MgYmVlbiBtb250aHMgYW5kIEkgcmVkb3dubG9hZGVkIHRoZSBzaXRlIHdlIG1ldCBmcm9tKFBPRikgdG8gbWVzc2FnZSBoaW0gdG8gc2F5IEkgd2FzIHNvcnJ5IGFuZCBob3BlIGhlIHdhcyBkb2luZyB3ZWxsIGFrYSAiZ2ltbWUgYW5vdGhlciBjaGFuY2UgY3V6IEkgdGhpbmsgeW91J3JlIHNvbWV0aGluZyBzcGVjaWFsIiBidXQgbXkgYWNjb3VudCB3YXMgYWJydXB0bHkgZGVsZXRlZC4gClRoZXkgYmVsaWV2ZSBpbiBwb3dlci4gCkl0J3MgdGhlIGFjdGlvbiBtb3ZpZSBlcXVpdmFsZW50IG9mICJidXN5IHdvcmsuIiBVbmxpa2UgV29uZGVyIFdvbWFuICh0aGUgbW9zdCBvYnZpb3VzIHBvaW50IG9mIGNvbXBhcmlzb24pLCB3aGljaCBvZmZlcmVkIGEgcmljaCwgd2VsbCB0aG91Z2h0IG91dCBiYWNrc3RvcnkgYW5kIGFuIGludGVyZXN0aW5nIG15dGhvbG9neSwgQ2FwdGFpbiBNYXJ2ZWwgcmVsaWVzIG9uIGNvbmZ1c2luZyBleHBvc2l0aW9uIGFuZCBhIHNjYXR0ZXJzaG90IG1ldGhvZCBvZiB1bml2ZXJzZSBidWlsZGluZyB0aGF0J3Mgbm90IGFkZXF1YXRlIHRvIHRoZSB0YXNrIGF0IGhhbmQuLiAKVGhlcmUgd2FzIG5vIHNpbmdsZSBVSyByZWNvcmQgY2hhcnQgdW50aWwgdGhlIG1pZCAxOTYwcy4gV2hpbGUgdGhlIGFib3ZlIHN0YXRlbWVudCBpcyB0cnVlLCB0aGVyZSB3ZXJlIGluZGljYXRvcnMgYXMgdG8gQnJpdGlzaCBzb25nIHBvcHVsYXJpdHkgZGF0aW5nIGZyb20gdGhlIDE5MzBzLiBFYXNpZXIgdG8gYW5zd2VyIGlzIFdIQVQgd2FzIE51bWJlciBPbmUgaW4gT2N0b2JlciAxOTQ5LiAKRWxhZHkgc2FpZCBoZSB3YXMgc3R1bm5lZCB0aGF0IHRoZSBtYW4gd2hvIGxpdmVkIHdpdGggaGlzIG1vdGhlciBhYm92ZSBoaXMgU3Vuc2V0IEJvdWxldmFyZCBzaG9wIGlzIHN1c3BlY3RlZCBvZiB0b3JjaGluZyB2ZWhpY2xlcywgc29tZSBqdXN0IHN0ZXBzIGZyb20gaGlzIGhvbWUuIFRoZSBmaXJlcyBjYXVzZWQgYW4gZXN0aW1hdGVkICQzIG1pbGxpb24gaW4gZGFtYWdlLgpBIHdvcmQgdG8gdGhlIHdpc2U6CkhlIHdhcyBXQVkgYWhlYWQgb2YgaGlzIHRpbWUuIGhlcyB0aGUgZmlyc3QgcGVyc29uIHRvIGV2ZXIgc3RhcnQgYSBwb2RjYXN0LiB3aGVuIHRoZSBuZXR3b3JrcyB3b3VsZG50IGdpdmUgaGltIGEgc2hvdyBoZSBzYWlkIGZ1Y2sgaXQgaWxsIHB1dCBteSBzaG93IG9uIHRoZSBpbnRlcm5ldC4gcGVvcGxlIHRob3VnaHQgaGUgd2FzIGNyYXp5LiBoaXMgZ3Vlc3RzIHdlcmUgYmV3aWxkZXJlZCB3aGVuIGhlIHRvbGQgdGhlbSB0aGV5IHdlcmUgb25saW5lIG5vdCBvbiB0di4KRXZlbnR1YWxseSB5b3UgbWlnaHQgYmUgYWJsZSB0byB0YWxrIGhlciBpbnRvIGl0LiBHb29kIGx1Y2ssIGJlY2F1c2UgaWYgc2hlIGRvZXNuIGxpa2UgYW5hbCwgc2hlIG5ldmVyIHdpbGwuIAoiQ29tZSBvbiBSeWRlci4gV2UgYXJlIGdvaW5nIHRvIG91ciBmaXNoaW5nIHNwb3R0byBmaW5kIExpbGxpYW4uIgpUaGUgbWFuc2lvbiBpcyBvbiB0aGUgbWFya2V0IGJlY2F1c2UgU2FwZXJzdGVpbiwgbm93IGEgbGFyZ2Ugc2hhcmVob2xkZXIgb2YgV2VzdHdvb2QgT25lIHN0b2NrLCBhbmQgaGlzIHdpZmUgcmVjZW50bHkgZGl2b3JjZWQuIApOZXcgd29ybGQgYXRobGV0aWNzIGJvc3MgU2ViYXN0aWFuIENvZSB3aWxsIHByaXZhdGVseSBiZSBicmVhdGhpbmcgYSBzaWdoIG9mIHJlbGllZiB0aGF0IE9seW1waWMgY2hhbXBpb24gQm9sdCByZXBlbGxlZCBHYXRsaW4gY2hhbGxlbmdlIGFmdGVyIHRoZSBzcG9ydCB3YXMgcGx1bmdlZCBpbnRvIGNyaXNpcyBieSBhbGxlZ2F0aW9ucyBvZiB3aWRlc3ByZWFkIGRvcGluZy4KT2J2aW91c2x5LCBJIGFncmVlIHdpdGggeW91ciBodXNiYW5kLiBJdCdzIG5ldmVyIGdvaW5nIHRvIGdldCBiZXR0ZXIgdW50aWwgeW91IHNldCBmaXJtIGJvdW5kYXJpZXMsIGJ1dCBJIGFjdHVhbGx5IHdhbnRlZCB0byBwb2ludCBvdXQgdGhhdCB5b3UgKGxpa2UgbXkgaHVzYmFuZCkgTWF5IGJlIHN1ZmZlcmluZyBmcm9tIGFueGlldHkuIEhlIHdlbnQgdGhyb3VnaCBhIGxvdCBvZiB0aGVyYXB5IGFuZCBtZWRpY2F0aW9uIHRvIGdldCBoaXMgYW54aWV0eSB1bmRlciBjb250cm9sIHdoZW4gaXQgY29tZXMgdG8ganVzdCBoYXZpbmcgYSBjb252ZXJzYXRpb24gd2l0aCBoaXMgcGFyZW50cyBhbmQgeW91ciBkZXNjcmlwdGlvbiBvZiBmZWVsaW5nICJzdGFydGVkIHRvIGZlZWwgcGh5c2ljYWxseSB0ZW5zZSBhbmQgc2hha3ksIGV2ZW4gdGhvdWdoIHNoZSBpcyBsaXRlcmFsbHkgdGhvdXNhbmRzIG9mIG1pbGVzIGF3YXkiIGlzIGVlcmlseSBzaW1pbGFyIHRvIHdoYXQgaGUgd2FzIGV4cGVyaWVuY2luZyBiZWZvcmUgYmVpbmcgZm9ybWVybHkgZGlhZ25vc2VkIHdpdGggYW4gYW54aWV0eSBkaXNvcmRlci4uIApTYWx1ZG9zIEFtaWdvcyB3YXMgbm90IHRoZSBvbmx5IGZpbG0gaW4gcHJvZ3Jlc3MgYXQgdGhlIHRpbWUsIHdpdGggdGhlIGdvdmVybm1lbnQgYWxzbyBjb21taXNzaW9uaW5nIERpc25leSB0byBtYWtlIGEgc2VyaWVzIG9mIGVkdWNhdGlvbmFsIGZpbG1zIGZvciB0aGUgU291dGggQW1lcmljYW4gYXVkaWVuY2UuIFRoZXNlIGluY2x1ZGVkIFRoZSBXaW5nZWQgU2NvdXJnZSwgaW4gd2hpY2ggdGhlIFNldmVuIER3YXJmcyBjb21iYXQgdGhlIG1hbGFyaWEgY2FycnlpbmcgQW5vcGhlbGVzIE1vc3F1aXRvIGJ5IHNwcmF5aW5nIG9pbCBvbiB3YXRlciB0byBraWxsIG1vc3F1aXRvIGxhcnZhZSwgdXNpbmcgYXJzZW5pYyBiYXNlZCBQYXJpcyBHcmVlbiBwZXN0aWNpZGUgdGhyb3VnaG91dCB0aGVpciBob3VzZSwgYW5kIGJ1cnlpbmcgcnViYmlzaCBpbiB0aGVpciBnYXJkZW4uIExhdGVyIGZpbG1zIHdlcmUgcGFydCBvZiB0aGUgJ0hlYWx0aCBmb3IgdGhlIEFtZXJpY2FzJyBzZXJpZXMsIGFuZCBpbmNsdWRlZCB0aXRsZXMgc3VjaCBhcyBDbGVhbmxpbmVzcyBicmluZ3MgSGVhbHRoLCBUaGUgVW5zZWVuIEVuZW15IGFuZCBQbGFubmluZyBmb3IgR29vZCBFYXRpbmcuIApQcm9tb3RlIGludGVsbGVjdHVhbHMvY2xlcmd5LCBlaXRoZXIgMiA0JSBvZiB0b3RhbCBwb3AsIGRlcGVuZHMgb24geW91ciBsaXRlcmFjeQpJZiB0aGVyZSBpcyBvbmUgbm90YWJsZSBkaWZmZXJlbmNlIGJldHdlZW4gRnJhbmNpc2NvIHNlbmF0ZSByYWNlIGFuZCBhIHBvdGVudGlhbCBwcmVzaWRlbnRpYWwsIGl0IGlzIG90aGVyIERlbW9jcmF0cy4KQnV0IHRoYXQgY291bGQgc3RhbmQgdG8gY2hhbmdlLiBKYXNvbiBNb21vYSByZWNlbnRseSBtYWRlIGEgdmVyeSBwdWJsaWMgc2NydW5jaGllIGFwcGVhcmFuY2UsIHdhbGtpbmcgdGhlIE9zY2FycyByZWQgY2FycGV0IHdpdGggYSBwaW5rIG9uZSB3cmFwcGVkIGFyb3VuZCBoaXMgd3Jpc3QuIFRoZSBhY2Nlc3NvcnksIHdoaWNoIGFkZGVkIGEgdG91Y2ggb2YgY2hhcmFjdGVyaXN0aWMgZ29vZmluZXNzIGFuZCB3aGltc3kgdG8gdGhlIGFjdG9yJ3MgZHVzdHkgcGluayB2ZWx2ZXQgc3VpdCwgd2FzIGFuIGluc3RhbnQgaGl0IHdpdGggdGhlIHByZXNob3cncyB2aWV3ZXJzLi4gCkVkaWJsZXMgYXJlIG91dHJhZ2VvdXNseSBvdmVycHJpY2VkLiBUaGUgbGFzdCB0aW1lIEkgd2VudCBJIGdvdCB0aGVpciBob21lIGdyb3duIHRvcCBzaGVsZiBMQSBDb25maWRlbnRpYWwuIApBcHIgMjYsIDIwMTEgLiBNaWNyb3NvZnQgV29yZCAyMDEwIGlzIHRoZSBzZWNvbmQgbmV3IHZlcnNpb24gb2YgV29yZCBzaW5jZSBXb3JkIDIwMDMuIApTcGl0emVuaHVuZCAgMyBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ28KWW91IGhhdmUgdG8gbWFrZSBhIGRlY2lzaW9uLCBhbmQgdGh1cyB5b3UgY3JlYXRlIGEgc3RyYXRlZ3kuIFlvdSBjaG9vc2UsIGluIHRoaXMgc2l0dWF0aW9uIHR5cGUgKEhVU05HLCBidXR0b24sIDEwYmIgZWZmZWN0aXZlKSB0byBsaW1wIDAlIG9mIHRoZSB0aW1lLCByYWlzZSB0byAyYmIgOS45OWJiIDAlIG9mIHRoZSB0aW1lIGFuZCBzaG92ZSB3aXRoIHRoaXMgcmFuZ2UgYW5kIGZvbGQgYWxsIG90aGVyIHN0YXJ0aW5nIGhhbmRzLiAKVGhpcyBtaWdodCBub3QgYmUgd2hhdCB5b3Ugd2VyZSBsb29raW5nIGZvciwgYnV0IEkgZ29ubmEgdGVsbCBpdCBiZWNhdXNlIHdoaWxlIHRoZSBwcm9wb3NhbCBpdHNlbGYgd2FzIHJvbWFudGljLCB0aGUgbmlnaHQgaXRzZWxmIHdhc24gTWluZSB3YXMgc3dlZXQgdG9vLCBidXQgaXQgaGFkIGEgZGFyayBjbG91ZCBvdmVyIGl0IGJlY2F1c2UgSSBoYXZlIGJpcG9sYXIgYW5kIHdhcyBpbiBhIFNFUklPVVMgbG93IGRlcHJlc3Npb24uIExpa2UgbmVhcmluZyBzdWljaWRhbCBsZXZlbHMsIG9ubHkgYSB5ZWFyIGFuZCBhIGhhbGYgb3Igc28gYWZ0ZXIgSSBnb3R0ZW4gb3V0IG9mIHRoZSBob3NwaXRhbCBmb3Igc3VpY2lkYWwgaWRlYXRpb24uIEFuZCBJIGJlZW4gYXQgdGhhdCBsb3cgcG9pbnQgZm9yIGEgY291cGxlIHdlZWtzIGRlc3BpdGUgbXkgbm93IGh1c2JhbmQgYmVpbmcgaG9tZSBmb3IgdGhlIGhvbGlkYXlzIChoZSB3YXMgYXQgbWlsaXRhcnkgdHJhaW5pbmcpLiBTbyBJIHdhcyBzdXBlciBoYXBweSB0byBoYXZlIGhpbSBob21lLCBidXQgaG9ycmlibHkgZGVwcmVzc2VkIGFuZCBzdHJ1Z2dsaW5nIHdpdGggbXkgam9iLgpJJ20gaW4gQkIgd2l0aCAyN28sIGZpc2ggYmlnIHN0YWNrIGxpbXBzIGJ1dHRvbiwgU0IgZmlzaCBjYWxscywgSSBjaGVjay4KSSBqdXN0IGdvaW5nIHRvIHBvc3QgbXkgcGVyc3BlY3RpdmUgaGVyZSBmcm9tIHdoZW4gdGhpcyBwYXJ0aWN1bGFyIHJ1bGUgd2FzIG1hZGUgYW5kIHNvbWUgaW5zaWdodCBpbnRvIG91ciBwcmFjdGljZS4gClRoZSBVSyBHb3Zlcm5tZW50IGhhcyBhbHNvIGNvbmZpcm1lZCBFVSBzdHVkZW50cyB3aWxsIGNvbnRpbnVlIHRvIGJlIGVsaWdpYmxlIGZvciAnaG9tZSBmZWUgc3RhdHVzJyB3aXRoIHRoZSB0dWl0aW9uIGZlZSBmb3IgU2VwdGVtYmVyIDIwMTkgZW50cnksIGFuZCBzbyBmZWVzIGZvciBmdWxsIHRpbWUgRVUgc3R1ZGVudHMgd2lsbCBiZSBjYXBwZWQgYXQgZm9yIHRoZSBmaXJzdCB5ZWFyIG9mIHN0dWR5LiAKSSBhbSBwcmV0dHkgc3VyZSB0aGV5IGFyZSBhIHBhaW4gaW4gdGhlIGFzcyB0byBkaXN0aW5ndWlzaCBhbmQgbGVhcm4gZm9yIGxlYXJuZXJzLCBidXQgYXMgYSBuYXRpdmUgdGhleSBhcmUgdmVyeSBlYXN5IHRvIGRpZmZlcmVudGlhdGUgbm8gcHJvYmxlbS4KVGhlIGhvdXNlIGRvZXNuJ3QgZ2V0IGVtb3Rpb25hbCBmb3IgeW91LiAKVGhlIGJ1cyB3YXMgY2FyZWVubmcgYXJvdW5kIHR1cm5zIGFuZCByb2NrbmcgYmFjayBhbmQgZm9ydGggYW5kIHQgd2FzIGV0aGVyIGZyZWV6bmcgY29sZCBvciBidXJubmcgaG90LiBJdCB3YXMgcmVhbGx5IHRvcnR1b3VzLi4gCkFuICJBbHBoYSIgaXMgYSBtZWRpY2FsIGVtZXJnZW5jeSwgYSAiQnJhdm8iIGlzIGEgZmlyZSwgYW5kICJLaWxvIiBpcyBhIHJlcXVlc3QgZm9yIGFsbCBwZXJzb25uZWwgdG8gcmVwb3J0IHRvIHRoZWlyIGVtZXJnZW5jeSBwb3N0cywgd2hpY2ggaGFwcGVucyBpbiB0aGUgZXZlbnQgb2YsIHNheSwgYSBuZWNlc3NhcnkgZXZhY3VhdGlvbi4gCldhbGtlciByc3VtIGlzIGltcHJlc3NpdmUsIEJhY2hlbG9yIGRlZ3JlZSwgUmhvZGVzIFNjaG9sYXIgYXQgT3hmb3JkLCBNZW1iZXIgb2YgUGFybGlhbWVudCwgYWxsIGJlZm9yZSBzaGUgdHVybmVkIDMwLiBBbmQgYWxsIG9mIGl0IGZvbGxvd2luZyBhbiBvcmlnaW4gc3RvcnkgYWJvdXQgaGVyIG1vdGhlciBzdHJ1Z2dsZXMgYXMgYSBzaW5nbGUgcGFyZW50IGFuZCBoZXIgb3duIGxpZmVsb25nIGRyZWFtIHRvIG1ha2Ugc3VyZSBldmVyeSBjaGlsZCBpbiBOZXcgWmVhbGFuZCBoYWQgdGhlIGtpbmQgb2Ygc2FmZSwgc2VjdXJlLCBvcHBvcnR1bml0eSByaWNoIGNoaWxkaG9vZCBzaGUgZW5qb3llZC4gSXQgd2FzIGEgc3RvcnkgdGhhdCwgYnkgdGhlIHRpbWUgc2hlIGxlZnQgUGFybGlhbWVudCBpbiAyMDE0LCBzaGUgaGFkIGNvbWUgdG8gZG91YnQgYXMgaW5hdXRoZW50aWMuIHJlYXNvbnMgZm9yIHRoaXMgbG9mdHkgYW1iaXRpb24sIHNoZSB3cml0ZXMsIGFzIG11Y2ggdG8gZG8gd2l0aCBjZWxlYnJpdHkgYW5kIGFwcHJvdmFsIGFzIHRoZXkgd2VyZSBhYm91dCBwdWJsaWMgc2VydmljZS4gSG9sbHkgV2Fsa2VyIHdhbnRlZCB0byBleGNlbCwgdG8gZXhjZWVkIGV4cGVjdGF0aW9ucywgdG8gYmUgYXBwcm92ZWQgb2YsIHRvIGJlIGxpa2VkLgpTaW5jZSB2b2x0YWdlIGlzIHByb3BvcnRpb25hbCB0byBjdXJyZW50LCB0aGUgc2FtZSBhcHBsaWVzIHRvIHZvbHRhZ2UuIFZhbHVlcy4gVmFsdWUgaXMgMC43MDd4IHRoZSBwZWFrIHZhbHVlLiAKSXQncyBhbWF6aW5nIGhvdyBvdXIgdGVjaG5vbG9neSB0b2RheSBoYXMgY2hhbmdlZCB0aGUgbGFuZHNjYXBlIG9mIHRoZSBnYW1pbmcgaW5kdXN0cnkuIExvbmcgYWdvIHRoZSBvbmx5IHR5cGVzIG9mIHBva2VyIG1hY2hpbmUgZ2FtZXMgeW91IHdvdWxkIGZpbmQgaW4gYSBjYXNpbm8gd2VyZSB0b3VjaCBzY3JlZW5zIGluIHRoZSBiYXIgYXJlYSB3aXRoIGEgbGltaXRlZCBzdXBwbHkgb2YgZ2FtZXMuIApEdXJhbnQgc2VlbXMgaGVhZGVkIG91dCB0aGUgZG9vciBmcm9tIHRoZSBXYXJyaW9ycywgd2hvIGhhdmUgd29uIGJpZyB3aXRoIER1cmFudCBidXQgYXQgdGhlIHByaWNlIG9mIHRoZSBwcmVjaW91cyBjaGVtaXN0cnkgdGhhdCBtYWRlIHRoZW0gc28gYXBwZWFsaW5nIHRocmVlIHN1bW1lcnMgYWdvIGluIHRoZSBIYW1wdG9ucy4gRHVyYW50IGhhcyBzaWduZWQgYSBzZXJpZXMgb2Ygb25lIHllYXIgY29udHJhY3RzIHdpdGggR29sZGVuIFN0YXRlLCBob2xkaW5nIGl0IG92ZXIgdGhlIFdhcnJpb3JzJyBoZWFkIHRoYXQgaGUgY291bGQgbGVhdmUgYXQgYW55IHRpbWUsIGFuZCBEcmF5bW9uZCBHcmVlbiwgYmxlc3MgaGlzIHNvdWwsIHdhcyB3aWxsaW5nIHRvIHNheSBoZSdzIGZlZCB1cC4uIApIZSBpcyBzdGlsbCBhY3RpdmVseSBwbGF5aW5nLCBhbmQgaGFzIGhpcyBmaW5nZXIgb24gdGhlIHB1bHNlIG9mIHRoZSB3aG9sZSBpbmR1c3RyeSwgdGhpbmsgbmV3IHVwIGFuZCBjb21pbmcgZ2FtZSB0eXBlcyAoc2VlIHNob3J0IGRlY2sgcG9rZXIgZm9yIGV4YW1wbGUpLCBhbmQgd2lsbCBoZWxwIGFkdmlzZSB1cyBvbiB3aGF0IGZvcm1hdHMgd2Ugc2hvdWxkIGltcGxlbWVudCBmb3IgYW4gaW5pdGlhbCBsYXVuY2guLiAKSGUgc2hvdWxkIGJlZ2luIGJ5IHNsb3dseSBhbmQgZ2VudGx5IGluc2VydGluZyB0aGUgdGlwIG9mIGhpcyBwZW5pcyBpbnRvIHlvdXIgYW51cy4gCk15IGNvdXNpbiBsaXZlcyB0d28gYmxvY2tzIGF3YXkgZnJvbSBoZXIgcGFyZW50cy4gU2hlIGxpdmVzIGluIGEgaG91c2UsIHRoZSBwYXJlbnRzIGluIGEgYXBhcnRtZW50IGJ1aWxkaW5nIChyZWFsbHkgdGFsbCBvbmUsIHRoZXkgbGl2ZSBpbiB0aGUgdG9wIGZsb29yKSBhbmQgdGhleSBjYW4gc2VlIGhlciBob3VzZSBmcm9tIHRoZWlyIGJlZHJvb20hIEkgZG9uIGtub3cgaWYgdGhleSBzdG9wcGVkIHRoaXMgb3Igbm90LCBidXQgdGhleSB3b3VsZCBjYWxsIGhlciB0byBhc2sgaGVyIHdoeSBzaGUgd2FzIHVwIHNvIGxhdGUsIHdoeSBoZXIgbGl2aW5nIHJvb20gbGlnaHRzIHdlcmUgb24sIHdobyB3YXMgc2hlIHdpdGgsIGFsbCBraW5kcyBvZiBpbnRydXNpdmUgYmVoYXZpb3IhCldoZW4gdGhlIGdhbWJsaW5nIGJ1ZyBkb25lIGdvdGNoYQpZb3UgY2hvc2VuIHRvIGJlIHNvIHNlbGZpc2ggdGhhdCB5b3Ugd291bGQgcnVpbiBhbiBlbnRpcmUgZHluYW1pYyBqdXN0IHNvIHlvdXIgZGF1Z2h0ZXIgY2FuIGxlYXJuIHRvIGZpc2ggd2l0aCBmcmllbmRzIHNoZSB3b24gZXZlbiBiZSBpbnRlcmVzdGVkIGluIGtlZXBpbmcuIFRoYXQgYnVsbHNoaXQuLiAKTG9vc2VuaW5nIFRoZSBQZWx2aXMgTG93IEJhY2s6IExheSBvbiB5b3VyIGJhY2sgd2l0aCB5b3VyIGtuZWVzIGJlbnQgYW5kIHlvdXIgZmVldCBmbGF0IG9uIHRoZSBmbG9vciwgYW5kIGRvIHRoZSBmb2xsb3dpbmcgZXhlcmNpc2VzLiBUaGlzIHJvdXRpbmUgd2lsbCBzdHJldGNoIGFuZCBsb29zZW4gdGhlIGxvdyBiYWNrIHNhY3J1bSBwZWx2aXMsIHN0cmVuZ3RoZW4gdGhlIGNvcmUgbXVzY2xlcyB5b3UgbmVlZCB0byBtYWludGFpbiBwcm9wZXIgcG9zdHVyZSwgYW5kIG5ldXJvbG9naWNhbGx5IHRyYWluIHlvdXIgY29yZSBtdXNjbGVzIHRvIG9wZXJhdGUgaW5kZXBlbmRlbnRseSB3aXRob3V0IGNvIGNvbnRyYWN0aW5nIGhpcCwgbGVnLCBhbmQgb3RoZXIgbXVzY2xlcy4KSGVyc2hleSBDTU8gSmlsbCBCYXNraW4gaW4gYSBTYXR1cmRheSBtb3JuaW5nIHNlc3Npb24gdG91dGVkIHRoZSBjYW5keSBtYXJrZXRlcidzIGluIGhvdXNlIGNvbnRlbnQgc3R1ZGlvIHRoYXQgbGF1bmNoZWQgZml2ZSBtb250aHMgYWdvLiBCeSBzaG9vdGluZyBzb21lIGFkcyBpbiBob3VzZSwgSGVyc2hleSBwdW1wcyBvdXQgY29udGVudCBtb3JlIHF1aWNrbHksIHNoZSBzYWlkLiAiSSBhbSBoZXJlIHRvIHRlbGwgeW91IGFueW9uZSBjYW4gZG8gdGhpcywiIHNoZSBzYWlkLgpJIHdvcmtlZCBmb3IgYW4gb3JnYW5pemF0aW9uIGZvciAzIHllYXJzOyBtaW5pbWFsIHBheSBkZXNwaXRlIG15IHF1YWxpZmljYXRpb25zLCBwb29yIHdvcmtpbmcgY29uZGl0aW9ucywgaGlnaCBzdHJlc3MgYW5kIGNvbnNpc3RlbnRseSBvdmVyd29ya2VkIChldmVyeW9uZSwgbm90IGp1c3QgbWUpLiBJIHdhcyBwcm9tb3RlZCBzZXZlcmFsIHRpbWVzIHdpdGggbWluaW1hbCBpbmNyZWFzZSBpbiBzYWxhcnkuIFdvdWxkIGNvbnRpbnVlIHBhc3QgZHV0aWVzIHBsdXMgdGFjayBvbiB0aGUgbmV3IG9uZXMuIFdhcyBjb25zaXN0ZW50bHkgdG9sZCB0aGF0IHRoZXkgImZvdWdodCIgZm9yIGFzIG11Y2ggb2YgYW4gaW5jcmVhc2UgYXMgcG9zc2libGUuIDEwJSBpbmNyZWFzZSBtYXggd2FzIGFsbCB0aGV5IHdlcmUgcGVybWl0dGVkIHRvIG9mZmVyLiBJIHdhcyBvZmZlcmVkIGEgbXVjaCBiZXR0ZXIgcG9zaXRpb24gZWxzZXdoZXJlIHN0YXJ0aW5nIGF0IDEwayBtb3JlL3llYXIuIFdoZW4gSSB0b2xkIG15IGJvc3MgdGhleSBjb3VudGVyZWQgYXNraW5nIGlmIEkgd291bGQgc3RheSBpZiB0aGV5IGNvdWxkIG1hdGNoIHRoaXMgb3IgY29tZSBjbG9zZS4gU28gbm93IHlvdSBjYW4gbWFnaWNhbGx5IGdldCBtZSB0aG91c2FuZHMgbW9yZT8gSSBoYXZlIG5ldmVyIGJlZW4gbW9yZSByZWxpZXZlZCB0aGFuIHdhbGtpbmcgYXdheSBmcm9tIHRoYXQgaGVsbGZpcmUgb2YgYSBqb2IuCkFueWhvdywgaHVzYmFuZCBhbmQgSSBib3VnaHQgc29tZSBuaWNlIGFsY29ob2wgYW5kIEkgZXZlbiB3ZW50IGFuZCBnb3QgYSBmZXcgY2lnYXJzIGZvciBteXNlbGYgYW5kIHdlIHNob3dlZCB1cCBhbmQgb2ZmZXJlZCB0byBzaGFyZSBldmVyeXRoaW5nLiBXZSBjb21wbGltZW50ZWQgYW5kIHRoYW5rZWQgdGhlIGhvc3QgYW5kIEkgbWFkZSBzdXJlIHRvIGdyZWV0IGhpcyB3aWZlIGFuZCB0ZWxsIGhlciBob3cgbmljZWx5IHNoZSBrZXB0IHRoZSBob21lLCBldGMuIFNoZSB3YXMgYXJvdW5kIGZvciBtYXliZSB0d28gbWludXRlcywgdGhlbiB3YXMgaW4gYSBiYWQgbW9vZC90aXJlZCBmcm9tIHdvcmsvc29tZXRoaW5nIGFuZCB3ZW50IGluc2lkZS4gSGVyIGh1c2JhbmQgaGFkIGJlZW4gc3VwcG9zZWQgdG8gbWFrZSBkaW5uZXIgZm9yIGhlciBzaW5jZSBpdCB3YXMgaGlzIGRheSBvZmYgYW5kIGhlIGhhZG4gc28gc2hlIGNhbWUgaG9tZSBmcm9tIGVycmFuZHMgYW5kIHdvcmsgYW5kIHRoZXJlIHdhcyBubyBmb29kLCBzbyBJIHRvdGFsbHkgdW5kZXJzdG9vZCBoZXIganVzdCB3YW50aW5nIHRvIGdvIGluc2lkZS4KSGFkIGEgYmxvY2sgYmFzZW1lbnQgYW5kIG9uZSB3YWxsIGJvd2VkIGEgYml0LiAKU2VhcmNoIGZvcjpHYW1ibGluZyBBZGRpY3Rpb24gYW5kIFByb2JsZW0gR2FtYmxpbmdIb3cgdG8gU3RvcCBHYW1ibGluZyBhbmQgUmVnYWluIENvbnRyb2wgb2YgWW91ciBMaWZlIEl0IGNhbiBoYXBwZW4gdG8gYW55b25lIGZyb20gYW55IHdhbGsgb2YgbGlmZTogWW91ciBnYW1ibGluZyBnb2VzIGZyb20gYSBmdW4sIGhhcm1sZXNzIGRpdmVyc2lvbiB0byBhbiB1bmhlYWx0aHkgb2JzZXNzaW9uIHdpdGggc2VyaW91cyBjb25zZXF1ZW5jZXMuIFdoZXRoZXIgeW91IGJldCBvbiBzcG9ydHMsIHNjcmF0Y2ggY2FyZHMsIHJvdWxldHRlLCBwb2tlciwgb3Igc2xvdHMgaW4gYSBjYXNpbm8sIGF0IHRoZSB0cmFjaywgb3Igb25saW5lIGEgZ2FtYmxpbmcgcHJvYmxlbSBjYW4gc3RyYWluIHlvdXIgcmVsYXRpb25zaGlwcywgaW50ZXJmZXJlIHdpdGggd29yaywgYW5kIGxlYWQgdG8gZmluYW5jaWFsIGRpc2FzdGVyLiAKQW1lcmljYW4gUGllClRoZSAicG9raWVzIHBhcmFzaXRlIiBjYW1wYWlnbiwgYmVpbmcgcm9sbGVkIG91dCBieSBsb2NhbCBncm91cCBSZWluIGluIHRoZSBQb2tpZXMgYW5kIEJhZCBCZXRzIEF1c3RyYWxpYSwgaXMgYmVsaWV2ZWQgdG8gaGF2ZSBiZWVuIGZpbmFuY2VkIGluIGEgbGFyZ2UgcGFydCBieSB0aGUgbWlsbGlvbmFpcmUgb3duZXIgb2YgdGhlIE11c2V1bSBvZiBPbGQgYW5kIE5ldyBBcnQgKE1PTkEpLCBEYXZpZCBXYWxzaC4KU291bmRzIGdyZWF0LCByaWdodD8gVGhlIHByb2JsZW0gaXMgYXQgYWdlIDcyLCB0aGVpciBhdmVyYWdlIHRheCByYXRlIGNvdWxkIGJlIG1vcmUgbGlrZSAyMyBwZXIgY2VudC4uIApBcyBmb3Igam9iIHByb3NwZWN0cywgbGlrZSBJIHNhaWQgaXQgZGVwZW5kcyBvbiB0aGUgYXJlYSBhbmQgZXhwZXJpZW5jZS4gSSBhcHBsaWVkIHRvIGFib3V0IDUwIDc1IGZpcm1zIGFsbCBvdmVyIHRoZSBjb3VudHJ5IChtb3N0bHkgY29uY2VudHJhdGVkIGluIENhbGlmb3JuaWEpIGJlZm9yZSBJIGZpbmFsbHkgbGFuZGVkIHRoaXMgb25lLiBJdCBzZWVtcyBsaWtlIGZpcm1zIGluIENhbGlmb3JuaWEgYXJlIHN0YXJ0aW5nIHRvIGdldCBhIGxvdCBvZiBvcGVuaW5ncyBlc3BlY2lhbGx5IHdpdGggdGhlIHN1bW1lciBjb21pbmcgdXAuClRoZXJlIGlzIG5vIGp1c3RpZmljYXRpb24gZm9yIGNvbnRpbnVpbmcgdG8gY2hvcCBvZmYgcGFydHMgZnJvbSBjaGlsZHJlbiBnZW5pdGFscy4uIApJIGRvbiBrbm93IGZvciBvdGhlciBzdHJlYW1lcnMsIGJ1dCBhIGxhcmdlIGFtb3VudCBvZiBLcmlwcCB2aWV3ZXJzIGRvbiBldmVuIHBsYXkgSFMgYW55bW9yZSwgaGUgbWFkZSBhIHBvbGwgb25jZSB0byBjaGVjayBpdCBvdXQuIFRoaW5nIGlzIEhTIGlzIGEgdmVyeSBjb21mb3J0YWJsZSBnYW1lIHRvIHdhdGNoLiBZb3UgY2FuIG1pc3MgYSBmZXcgdHVybnMgYW5kIHN0aWxsIHVuZGVyc3RhbmQgZXhhY3RseSB3aGF0IGdvaW5nIG9uIGp1c3QgYnkgbG9va2luZyBhdCB0aGUgYm9hcmQsIGl0IGNvbG9yZnVsLCBhbmQgaXQgZ3JlYXQgYmFja2dyb3VuZCBub2lzZSB3aGVuIHlvdSBkbyBzb21ldGhpbmcgZWxzZSBhcyB0aGUgbXVzaWMgYW5kIHRoZSBzb3VuZCBlZmZlY3RzIGFyZW4gb3ZlcndoZWxtaW5nLiBBbHNvIG1hdGNoZXMgYXJlIHVzdWFsbHkgc2hvcnQsIHNvIHlvdSByYXJlbHkgZmVlbCBmcnVzdHJhdGlvbiB3aGVuIHlvdSBtaXNzIHRoZSBmaXJzdCBoYWxmIG9mIGEgZ2FtZS4KTGVhc2UgaW4gTG9zIEFuZ2VsZXMgd2FzIHVwIEp1bmUgMjgsIGhlIHNhaWQuIFBsYW4gd2FzIHRvIG1vdmUgaW50byBteSBmcmllbmQncyBndWVzdCBob3VzZSBpbiBWZWdhcyB3aGVuIHRoZSBXU09QIHdhcyBkb25lLiAKUmVnaXN0ZXJlZCB0YXhpIGRyaXZlcnMgaGF2ZSBmaWVyY2VseSBwcm90ZXN0ZWQgdGhlIGFubm91bmNlbWVudCwgYW5kIGFmdGVyIHRoZSBjb21wYW55J3MgdHJhbnNwb3J0YXRpb24gYXJtIEtha2FvIE1vYmlsaXR5IHBvc3RlZCBhIHJlY3J1aXRtZW50IG5vdGljZSwgdGF4aSBkcml2ZXJzIGhhdmUgZGVjaWRlZCB0byB0YWtlIGFjdGlvbiBhZ2FpbnN0IHdoYXQgaXQgY2FsbHMgImlsbGVnYWwgb3BlcmF0aW9uIG9mIHBlcnNvbmFsIHZlaGljbGVzIHVuZGVyIHRoZSBwcmV0ZW5zZSBvZiBjYXIgc2hhcmluZy4iLiAKSGUgc3RhcnRzIGJlbGxvd2luZyBmb3IgZXZlcnlib2R5IHRvIGJlIHF1aWV0IGFuZCB0ZWxscyBtZSB0byBnbyBhbmQgc3RhbmQgb3V0c2lkZSBoaXMgb2ZmaWNlLi4gClByaW9yIHRvIHdvcmxkIHdhciBJLCB0aGF0IGhvbm91ciBhY3R1YWxseSB3ZW50IHRvIFByYWd1ZS4gMyBwb2ludHMgIHN1Ym1pdHRlZCAxIHllYXIgYWdvLiAKV2hlbiB5b3UgZG8gcGxheSBhIGhhbmQsIHRoZXknbGwgYXNzdW1lIHlvdSd2ZSBnb3QgYSBtb25zdGVyLiBUaGlzIHdpbGwgYWxsb3cgeW91IHRvIG9jY2FzaW9uYWxseSBzdGVhbCBibGluZHMgd2l0aCBhIG1hcmdpbmFsIHN0YXJ0aW5nIGhhbmQgKEt4bywgZm9yIGV4YW1wbGUpLiAKU2luY2UgdGhlIGZpcnN0IG9ubGluZSBjYXNpbm8gd2FzIGxhdW5jaGVkLCBwbGF5ZXJzIGFsbCBhcm91bmQgdGhlIHdvcmxkIHdlcmUgYXR0cmFjdGVkIGJ5IHRoZSBhbWF6aW5nIGlkZWEgb2YgcGxheWluZyBmcm9tIHRoZSBjb21mb3J0IG9mIG91ciBob21lcy4gQXMgYSByZXN1bHQsIHRoZSBvbmxpbmUgZ2FtYmxpbmcgaW5kdXN0cnkgaXMgY29uc3RhbnRseSBncm93aW5nIGFuZCB0aGUgbnVtYmVyIG9mIG9ubGluZSBjYXNpbm9zIGlzIGJpZ2dlciB0aGFuIGV2ZXIhIEhvd2V2ZXIsIG5vdCBhbGwgb2YgdGhvc2UgY2FzaW5vcyBhcmUgd29ydGggcGVvcGxlJ3MgdGltZSBhbmQgYXR0ZW50aW9uIGJlY2F1c2Ugc29tZSBvZiB0aGVtIG9mZmVyIGRpc2FzdHJvdXMgc2VydmljZSBhbmQgdW5zYWZlIGdhbWluZyBlbnZpcm9ubWVudC4uIApCdXQgdGhlIG1vc3QgaW1wb3J0YW50IHBva2VyIHN0cmF0ZWd5IG9mIGFsbCBpczogbmV2ZXIgZm9ybSBhIHBhdHRlcm4gb2YgcGxheS4gCkJvdGggZXhhbXBsZXMgYXJlIGFjaGlldmVtZW50cyBtYWRlIGV2ZW4gbW9yZSByZW1hcmthYmxlIGJ5IHRoZSBwcmltaXRpdmUgdGVjaG5pY2FsIGNvbmRpdGlvbnMgYW5kIG5vdG9yaW91c2x5IGxvdyBidWRnZXRzIEtvdmFjcyBhbmQgaGlzIHRlYW0gbmF2aWdhdGVkLi4gCkFyb3VuZCBhIHRoaXJkIG9mIG91ciBSTE9zIGhhdmUgYmVlbiBjb21waWxlZCBpbnRvIElNUyBDb250ZW50IFBhY2thZ2VzIChpZSB6aXBmaWxlcyB3aXRoIG1ldGFkYXRhKSB3aGljaCB5b3UgY2FuIGRvd25sb2FkIGZvciBsb2NhbCB1c2UsIGFmdGVyIGZpbGxpbmcgaW4gYSBzaG9ydCBmb3JtIGZvciBvdXIgcmVzZWFyY2guIApHaXZlbiByZWFsIGVzdGF0ZSBpcyBhbHdheXMgaW4gc2hvcnQgc3VwcGx5LCBSYXRobWVsbCBzYXlzIHRoZXkgdG9vayBhIHNpbXBsZSBhcHByb2FjaCB3aGVuIGZpbmRpbmcgdGhlaXIgZmlyc3QgbG9jYXRpb24gaW4gMjAxMC4gClJFQUQgTU9SRTogUG9rZW1vbiBHbyBjb3VsZCBmZWVkIGdhbWJsaW5nIGFkZGljdGlvbnMKRm9yIHRob3VzYW5kcyBvZiB5ZWFycywgdGhlIEJyYXppbGlhbiBJbmRpYW5zIGhhdmUgdXNlZCBndWFyYW5hIGFzIGEgZm9vZCwgbWVkaWNpbmUgYW5kIHN0aW11bGFudC4gVGhlIEluZGlhbnMgdXNlIGd1YXJhbmEgdG8gaGVscCBjb3BlIHdpdGggZXh0cmVtZSBoZWF0LCBnYWluIGVuZXJneSB0byBjb21wbGV0ZSBsb25nIGpvdXJuZXlzLCBzdXBwcmVzcyBodW5nZXIsIGFuZCBhcyBhIG1lZGljaW5hbCBoZXJiIHRvIHRyZWF0IG1hbnkgbWFsYWRpZXMuLiAKTmV0bGV5IENhc3RsZSwgd2hpY2ggZGF0ZXMgZnJvbSB0aGUgMTZ0aCBDZW50dXJ5LCBpcyBhIEdyYWRlIElJIExpc3RlZCBCdWlsZGluZyBhcyB3ZWxsIGFzIGEgU2NoZWR1bGVkIEFuY2llbnQgTW9udW1lbnQuIApEZXBhcnRtZW50IG9mIEhlYWx0aCBhbmQgRXhlcmNpc2UgU2NpZW5jZSwgQ29sb3JhZG8gU3RhdGUgVW5pdmVyc2l0eQoyMiBoIDM2IFRyb2lzIGhvbW1lcyBzIGRlcyBwcml4IGV0IGRlIGxhIGRpc3BvbmliaWxpdCBkZXMgZmlsbGVzLiBJbWFnZXMgIGwgbGEgcmNlcHRpb25uaXN0ZSBtb250cmUgbGVzIG1hc3NldXNlcyBldCBleHBsaXF1ZSBsZXMgdGFyaWZzLiBEYW5zIHVuZSBsYW5ndWUgdHJhbmdyZSwgaWxzIGRpc2N1dGVudCBlbnRyZSBldXguIApUaGF0IHRoZSBvbmx5IHJlYWwgY29tcGxhaW50IEkgaGF2ZSB3aXRoIHRoZSBjaHJvbWVjYXN0LCB0aG91Z2ggSSBsb3ZlIGl0LiBJdCBkb2VzbiBhbGxvdyB0aGUgVFYgdG8gYmUgYW4gZXh0ZW5zaW9uIG9mIHlvdXIgZWNvc3lzdGVtLCBpdCBvbmx5IGFsbG93cyBpdCB0byBiZSBhIG1pcnJvciBmb3IgcHJvY2Vzc2luZyBoYXBwZW5pbmcgb24gb3RoZXIgZGV2aWNlcy4gVGhlIGN1cnJlbnQgQXBwbGUgVFYgd29ya3MgaW4gbXVjaCB0aGUgc2FtZSB3YXksIGl0IGFsbCBhYm91dCBnZXR0aW5nIG1lZGlhIGNvbnRlbnQgdG8gdGhlIGJpZyBzY3JlZW4uIEkgZG9uIHdhbnQganVzdCBtZWRpYSBvbiB0aGUgYmlnIHNjcmVlbi4gSSB3b3VsZCBsaWtlIHRvIGJlIG5vdGlmaWVkIG9mIGNhbGxzLCBpbXBvcnRhbnQgZW1haWxzLCB1cGNvbWluZyBhcHBvaW50bWVudHMsIGFuZCBoYXZlIGEgbGV4aWNvbiBvZiBUViBvcHRpbWl6ZWQgZ2FtZXMuIEVzcGVjaWFsbHkgd2l0aCB0aGUgcG9zc2liaWxpdHkgb2YgTmludGVuZG8gdGl0bGVzIGNvbWluZyB0byBBcHBsZSBkZXZpY2VzLiBUaGUgbmV3IEFwcGxlIFRWIGNvdWxkIGVmZmVjdGl2ZWx5IGJlIGEgY2FzdWFsIGNvbnNvbGUuClRoZXkgYWxzbyBkbyBub3QgbmVlZCBhIHdhcnJhbnQgdG8gc2VhcmNoIGFueSBjYXIgb3IgcGVyc29uIGFzIHRoZWlyIGJlbGllZiBncmFudHMgdGhlbSBhbiBvbiB0aGUgc3BvdCB3YXJyYW50IHRvIGRvIHNvLiBTbyBpZiB0aGV5IGJlbGlldmUgYSBkcnVnLCB3ZWFwb24sIG9yIGFueSBldmlkZW5jZSB1c2VkIG9yIG1heSBiZSB1c2VkIHRvIGNvbW1pdCBhbnkgY3JpbWUgaXMgaW4gdGhlIGNhciB0aGV5IGNhbiBzZWFyY2ggaXQuIChBIHNjcmV3IGRyaXZlciBub3QgaW4gdXNlIGlzIGNvbnNpZGVyZWQgYSB3ZWFwb24gaW4gQXVzdHJhbGlhLCBzYW1lIHdpdGggYSBiYXNlYmFsbCBiYXQsIGhhbW1lciwgZXRjLiAKUHVycGxlQ2hhb3NUcm9sbCAgMiBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KVGhlcmUgc2hlIHdvcmtlZCBhIGZhcm8gdGFibGUgc2l4IGRheXMgYSB3ZWVrIChzaGUgbmV2ZXIgd29ya2VkIG9uIFN1bmRheSkgYXQgRm9yZCdzIEV4Y2hhbmdlLCBhIHNhbG9vbiBhbmQgZGFuY2VoYWxsLiBUaGUgb3duZXIsIEJvYiBGb3JkLCB3YXMgbm9uZSBvdGhlciB0aGFuIHRoZSBtYW4gd2hvIGhhZCB3YXN0ZWQgSmVzc2UgSmFtZXMgaW4gMTg4Mi4gClRoYXQgd2FzIG15IGJyb3RoZXIgYm9ybiBhIGNlbnR1cnkgdG9vIGxhdGUsIHBvc2luZyBhcyBhIGNvd2JveSBidXQgYSB0cnVlIEluZGlhbiBpbnNpZGUuIE9yIHdhcyBoZSBhIHNhbXVyYWkgd2FycmlvciwgZmx1ZW50IGluIEphcGFuZXNlIGFuZCBhcyBxdWljayB0byBpbXByZXNzIHdpdGggdGhlIGRlbGljYWNpZXMgb2YgYSB0ZWEgY2VyZW1vbnkgYXMgd2l0aCB0aGUgZnVsbCBwdXJjaGFzZSBvZiB0aGUgS2F0YW5zIGJsYWRlLiBTZXBwdWt1IHdvdWxkIGhhdmUgYmVlbiBoaXMgYW5zd2VyIHRoZSBob25vcmFibGUgd2FycmlvciB3YXkgb3V0LiAKSG9wZWZ1bGx5IHRoZWlyIHJlY29uY2lsaWF0aW9uIG1hcmtzIHRoZSBlbmQgb2YgQmV0dHkncyB0aW1lIGFzIGEgY2FtIGdpcmwsIGJlY2F1c2UgdGhlcmUgYXJlIG90aGVyIHN0b3JpZXMgd2UnZCByYXRoZXIgd2F0Y2ggdGhhbiBhbiB1bmRlcmFnZSBnaXJsIGNhdGVyaW5nIHRvIGxvbmVseSBtZW4gb24gdGhlIGludGVybmV0IGFzIGEgd2F5IG9mIGNvcGluZyB3aXRoIGhlciBtZW50YWwgaGVhbHRoIHN0cnVnZ2xlcy4gCkx1bmNoIChvbmUgaG91cikuNy4gUmV0dXJuIGFuZCByZWdyb3VwICAgQ2lyY2xlIHNob3VsZGVyIG1hc3NhZ2VzIGFuZCBodWdzLjguIApUaGUgY29tcGFueSBwcm9tb3RlcyBmbGV4aWJsZSB3b3JrIHNjaGVkdWxlcyBhbmQgbG9jYXRpb25zLiAKVGhpcyBtYXkgdGFrZSBsb25nZXIgdGhhbiB5b3UgdGhpbmsgaXQgd291bGQuIExpa2UgNSAxMCBtaW51dGVzLCBqdXN0IHN0YW5kaW5nIHRoZXJlLCB0b3NzaW5nIHJpY2UgdW50aWwgaXQgaXMgdGhlIHJpZ2h0IGNvbG9yLCBidXQgdGhpcyBpcyB0aGUgTU9TVCBDUlVDSUFMIFNURVAuIApBbHNvLCBJIGZlbHQgbGlrZSBpbnN0YWxsaW5nIHRoZSByYWRpbyB3YXMgcHJldHR5IHN0cmFpZ2h0IGZvcndhcmQuIApEaXZvcmNlIGlzIGEgaHVnZSBzdGVwIGFuZCBzbyB1bm5lY2Vzc2FyeSB1bnRpbCB0aGUgZGVjaXNpb24gaXMgdG90YWxseSBmaW5hbC4gSXQgY2FuIGFsc28gYmUgZXhwZW5zaXZlLiAKQWxzbywgSSB3b3VsZCBzdGlsbCBiZSB3ZWFyeSBvZiB0aGUgZ2FtZSwgc28gbG9uZyBhcyB0aGUgdXR0ZXJseSBpbmNvbXBldGVudCBMdWtlIFNtaXRoIGlzIHN0aWxsIGludm9sdmVkIGluIGl0LgpUd28gb2YgdGhlIGxhcmdlc3QgYnVzaW5lc3NlcyBpbiB0aGUgY291bnRyeSBhcmUgaGVyZTogSXJ2aW5nIGFuZCBDb29rZSBBcXVhY3VsdHVyZS4gTWluaW11bSB3YWdlIGlzICQxMS4yNS4gCldlbGwsIGl0IHVzdWFsbHkgZWFzaWVyIHdoZW4geW91IGluaXRpYXRlIHRoZSBicmVha3VwIGJ1dCB3aGVuIEkgYnJva2UgdXAgd2l0aCBteSBleCBoZSBwcmV2ZW50ZWQgYW55IGRvdWJ0cyBJIHdvdWxkIGhhdmUgaGFkLiAKV2hlcmUgcHJvc3RpdHV0aW9uIGlzIGlsbGVnYWwgb3IgdGFib28sIGl0IGlzIGNvbW1vbiBmb3IgbWFsZSBwcm9zdGl0dXRlcyB0byB1c2UgZXVwaGVtaXNtcyB3aGljaCBwcmVzZW50IHRoZWlyIGJ1c2luZXNzIGFzIHByb3ZpZGluZyBjb21wYW5pb25zaGlwLCBudWRlIG1vZGVsaW5nIG9yIGRhbmNpbmcsIGJvZHkgbWFzc2FnZSwgb3Igc29tZSBvdGhlciBhY2NlcHRhYmxlIGZlZSBmb3Igc2VydmljZSBhcnJhbmdlbWVudC4gClRhbWJpbiBlcyB1biBtb2RvIGRlIHZpZGEgcXVlIGVuc2VhIGNtbyBtYW50ZW5lciB5IHByb3RlZ2VyIGxhIHNhbHVkLiAKT2YgY291cnNlIHNwb3J0cyBhcmUgbm90IHRoZSBvbmx5IHRoaW5nIHRoYXQgcGVvcGxlIGRlY29yYXRlIHdpdGggaW4gdGhlaXIgZ2FtZSByb29tcy4gCk5ldmVydGhlbGVzcywgaW4gc3BpdGUgb2YgdGhlIGhpZ2ggdGVtcGVyYXR1cmUsIHRoZSBudWNsZWFyIHJlYWN0aW9ucyBpbiBzdGFycyBwcm9jZWVkIGF0IGFuIGV4dHJlbWVseSBzbG93IHJhdGU7IG9ubHkgb25lIHBlciBjZW50IG9mIHRoZSBoeWRyb2dlbiBpbiB0aGUgc3VuIGlzIHRyYW5zZm9ybWVkIGludG8gaGVsaXVtIGluIGEgYmlsbGlvbiB5ZWFycy4gCkkgYWx3YXlzIHRyaWVkIHRvIGRlZmVuZCwgZXZlbiBpbiBzb21lIHRyeWluZyB0aW1lcy4gQnV0IGl0IHNlZW1lZCBsaWtlIHRoZXkgaGFkIGZpbmFsbHkgZm91bmQgdGhlaXIgZ3Jvb3ZlIGFuZCBGb3ggd2FzIGdpdmluZyB0aGVtIHRoZSBjaGFuY2UgdG8gZmluaXNoIHN0cm9uZyBhbmQgSSdtIG5vdCBzdXJlIEknbSBmZWVsaW5nIGl0LkknbSBhIGxpdHRsZSBiaXQgd29ycmllZCB0aGF0IG1heWJlIHRoZXkncmUganVzdCBpbiBhIHNoaXQgcG9zaXRpb24gYmVjYXVzZSB1bmxpa2Ugc28gbWFueSBvdGhlciBzZXJpZXMgZW5kaW5ncyBpbiB3aGljaCB0aGUgZ29hbCBpcyB0byB3cmFwIHVwIHN0b3J5bGluZXMgYW5kIHNheSBnb29kYnllIHRvIGNoYXJhY3RlcnMgdGhpcyBpcyB0aGUgb3Bwb3NpdGUuIApUaGV5IGp1c3QgY291bGRuIGhpdC4gR2FtZSAzLCByaXA6IDIgb2YgOCwgY2hhdW5jeSA0IG9mIDE0IGV0Yy5TdXJlLCBlcmljIHNub3cgY291bGRuIGhpdCB0aGUgcGFjaWZpYyBvY2VhbiBmcm9tIHRoZSBzaWRlIG9mIGEgc2hpcCwgYnV0IGhpcyBkZWZlbnNlIHdhcyBpbWhvIFRIRSByZWFzb24gd2UgbWFkZSB0aGUgZmluYWxzLiAKTGFzdCwgYnV0IG5vdCBsZWFzdCwgYmUgY2VydGFpbiB0byBwYXkgY2xvc2UgYXR0ZW50aW9uIHRvIHRoZSBlZGdlcyBvZiB0aGUgcG9rZXIgY2hpcHMgdGhhdCB5b3UgYXJlIGNvbnNpZGVyaW5nLiBJdCBpcyBpbXBvcnRhbnQgYW5kIGFic29sdXRlbHkgZXNzZW50aWFsIHRvIGVuc3VyZSB0aGF0IHRoZSBlZGdlcyBhcmUgaW4gZ29vZCBjb25kaXRpb24gYW5kIHRoYXQgdGhleSBhcmUgbm90IG1hcmtlZCBpbiBhbnkgd2F5LiAKRnVydGhlcm1vcmUsIE1zLiBIYXNzYW4gc2FpZCBiYW5uaW5nIHRoZSBidXJrYSBpcyBhbiBpc3N1ZSBvZiBnZW5kZXIgZXF1YWxpdHk6CkluIHN1Y2ggY2FzZXMsIHNtYWxsIGF1dG9tYXRpYyBzaHVmZmxlciBpbnN0cnVtZW50cyBjYW4gYmUgdmVyeSBoYW5keSBmb3IgeW91LiAKQnViYmFiZWFyemxlVGhpcyB1c2VyIGhhcyBub3QgeWV0IGJlZW4gdmVyaWZpZWQuCkkgY2FuJ3Qgc2VlIGEgTWF5d2VhdGhlciB2cyBQYWNxdWlhbyBmaWdodCBoYXBwZW5pbmcgdGhpcyB5ZWFyLiBNYW5ueSBpcyBmaWdodGluZyBvbiBOb3ZlbWJlciAxMHRoIGFuZCBhbnkgdGFsa3MgYmV0d2VlbiB0aGUgcGFpciB3aWxsIHRha2UgdGltZS4gVGhlaXIgdGFsa3MgYXJlIG5vdG9yaW91c2x5IGNvbXBsaWNhdGVkLiAKT25jZSBhbGwgd2VyZSBpbiBwbGFjZSwgSSBmb3VuZCBvciBtYWRlIHZlcnkgc21hbGwgcGllY2VzIG9mIHR3aWcgYW5kIGJhcmsgdG8gcHV0IGluIGxpdHRsZSBjcmV2aWNlcyBvbiB0aGUgZWRnZXMgdGhhdCB3YXkgeW91IGNvdWxkbiBzZWUgdGhlIG9yaWdpbmFsIHdvb2QuCkJvdGggdGltZXMgdGhvc2UgcGVvcGxlIGFkbWl0dGVkIHRoZXkgd2VyZSBtaXN0YWtlbiBiZWZvcmUgSSBldmVuIGZpbmlzaGVkIGJ1dCBJIHN0aWxsIGZpbmlzaGVkLi4gClRoaXMgcGhlbm9tZW5vbiBoYXMgb2Z0ZW4gYmVlbiB1c2VkIHRvIHBhaW50IHRob3NlIHdobyBiZWxpZXZlIHRoZXkgYXJlIHdoZWF0IHNlbnNpdGl2ZSBhcyBuZXVyb3RpYyBhbmQgZ3VsbGlibGUgKHBlcmhhcHMgaW1hZ2luaW5nIHRoZXkgaGF2ZSBhIHByb2JsZW0gYmVjYXVzZSB0aGV5IHJlYWQgYWJvdXQgaXQgaW4gYSB3b21hbidzIG1hZ2F6aW5lKS4uIApJdCB3b24gYmUgdm90ZSBmb3IgIkN1dCBhbmQgUnVuIiBPc2NhciwgaXQgd2lsbCBiZSB2b3RlIGdvb2QgRGVtb2NyYXQgT3NjYXIgb3ZlciBUYXggcmFpc2luZyBSZXB1YmxpY2FuIEdyaW5nby4KTm8sIG5ldmVyIGV4cG9zaW5nIHNpbHZlciBhbnltbm9yZSBidXQgcmVhbGlnbmluZyBydXN0IG9yIGJpdHMgKGZpbG0gPS89IHZpZGVvIHRhcGUsIGhhcmQgZHJpdmVzLCBTREhWIG9yIFAyIGNhcmRzKQpBZnRlciBsZWF2aW5nIEljeSBTdHJhaXQsIHRoZSBuZXh0IHN0b3Agd2FzIEp1bmVhdS4gTmVzdGxlZCBpbiB0aGUgbm9ydGhlcm4gcmVhY2hlcyBvZiB0aGUgSW5zaWRlIFBhc3NhZ2UsIHRoZSBBbGFza2FuIGNhcGl0YWwgd2FzIGZvdW5kZWQgZHVyaW5nIGEgZ29sZCBydXNoIGluIDE4ODAuIFZlc3RpZ2VzIG9mIHRoZSBXaWxkIFdlc3QgcmVtYWluICAgeW91IGNhbiBjaGVjayBvdXQgdGhlIFJlZCBEb2cgU2Fsb29uIHdoZXJlIGEgcGFpciBvZiBXeWF0dCBFYXJwIHBpc3RvbHMgd2VyZSBsZWZ0IGJlaGluZCAgIGJ1dCB0b3VyaXNtIGlzIG5vdyB0aGUgbWFpbiBtb25leSBzcGlubmVyLi4gClNvIGd1eXMsIG5leHQgdGltZSB5b3UgZGVjaWRlIHRvIHB1dCB1cCB5b3VyIHdpZmUgYXMgYSBiZXQsIG1ha2Ugc3VyZSB0aGF0IHlvdSB3aW4uIE90aGVyd2lzZSwgeW91IG1pZ2h0IGp1c3QgZmluZCB5b3Vyc2VsZiBpbiB0aGUgZGl2b3JjZSBjb3VydHMhCldoZW4gaXQncyBhbnkgcGxheWVyJ3MgdHVybiwgaWYgdGhleSBjYW5ub3QgZGlzY2FyZCBhZnRlciBkcmF3aW5nIGZyb20gdGhlIGRlY2ssIHBsYXkgcGFzc2VzIG9uIHRvIHRoZSBuZXh0IHBsYXllci4KVGhlIGVhc2llc3Qgd2F5IHRvIGRvIHRoaXMgaXMgdG8gZmlyc3QgY2FsY3VsYXRlIHRoZSBwcm9iYWJpbGl0eSBvZiBkcmF3aW5nIHNwYWRlL2hlYXJ0L2NsdWIvZGlhbW9uZCBpbiBvcmRlci4gVGhpcyBpcyAxMy81MiB0aW1lcyAxMy81MSB0aW1lIDEzLzUwIHRpbWVzIDEzLzQ5LiBOb3RlIHRoYXQgZWFjaCB0aW1lIHRoZXJlIGFyZSAxMyBwb3NzaWJsZSBjYXJkcyB0byBjaG9vc2UgZnJvbSBvdXQgb2YgYSBzaHJpbmtpbmcgZGVjay4gCk15IGdvYWwgaXMgdG8gd2luIGEgd29ybGQgdGl0bGUgc28gdGhhdCBJIGNhbiB0YWtlIGl0IGJhY2sgdG8gbXkgaG9tZXRvd24gaW4gUFIgYW5kIHNob3cgdGhhdCBteSBmaXJzdCBmaWdodCB3YXNuIHRoZSBsYXN0IG9uZS4gSSB3YW50IHRvIHNob3cgdGhlbSB0aGF0IHdoYXRldmVyIHlvdSB3YW50IHRvIGRvIGluIGxpZmUgeW91IGNhbiBtYWtlIGl0IGhhcHBlbiBpZiB5b3Ugd29yayBoYXJkIGVub3VnaC4gCkFzIGZhciBhcyBiaWdnZXIgYmV0cyA9IG1vcmUgZm9sZCBlcXVpdHksIHllcyBidXQgYmFjayB0byB0aGUgbWlzIHN0YXRlbWVudC4gCkEgcGlhbm8gcHJvZGlneSBzb2FraW5nIHVwIHdpc2RvbSBmcm9tIHRoZSBlbGRlcnMsIENvaGVuIGlzIGEgdHJhZGl0aW9uYWxpc3Qgd2l0aCB0ZWNobmlxdWUgdG8gYnVybi4gSGUncyBhIHByb2R1Y2VyIGFuZCBjbyBwZXJmb3JtZXIgb2YgdGhlIEphenogTWFzdGVycyBMZWdhY3kgU2VyaWVzIG9mIHJlY29yZGluZ3MgYW5kIGludGVydmlld3MgdGhhdCB0aHVzIGZhciBoYXMgZmVhdHVyZWQgUm9uIENhcnRlciBhbmQgSmltbXkgQ29iYiwgYW5kIGhlIGhhcyBjb2xsYWJvcmF0aW9ucyB3aXRoIFRvb3RpZSBIZWF0aCwgQmVubnkgR29sc29uLCBhbmQgR2VvcmdlIENvbGVtYW4gaW4gdGhlIHdvcmtzLiAKTm93IHlvdSBtdXN0IHBpY2sgdXAgdGhlIHN0aXRjaGVzIHNvIHRoYXQgdGhlIHBpcGluZyBjYW4gYmUga25pdHRlZCB0b2dldGhlci4gCkF0IHRoZSBzYW1lIHRpbWUsIGEgZnJpZW5kIGhhcyB3cmVja2VkIFRodW1wcyBjYXIsIGhlIGNhbiBnZXQgaW4gdG91Y2ggd2l0aCBDbGFpcmUsIGhpcyBjYXQgaGFzIGRpc2FwcGVhcmVkLCBhbmQgaGUgaGFzIGhpbXNlbGYganVzdCBiZWVuIGRpYWdub3NlZCB3aXRoIGRpYWJldGVzLiBIaXMgbGlmZSBhbHJlYWR5IHNlZW1zIHRvbyBmcmF1Z2h0IHRvIHN0YXJ0IGRhYmJsaW5nIGluIGRlYXRoLCBidXQgZm9yIG9uZSByZWFzb24gYW5kIGFub3RoZXIsIGhlIHdpbmRzIHVwIHN0dWNrIGludG8gdGhlIGNhc2UuClRoZXJlIHNvbWV0aGluZyBhYm91dCB3YXRjaGluZyB0aGUgcmVhbCBPYmFtYSBjb21lIG91dCBhcyBhbiBhcG9sb2dpc3QgZm9yIEJ1c2ggdGhhdCBpcyByZWFsbHkgYW5kIHRydWx5IG5hdXNlYXRpbmcuIApCdWlsZGluZyByb3V0aW5lcyBhcm91bmQgaGVyIHRocmVlIHRvcCB0b29scyBiYW5kcywgYSBzdGVwIGFuZCBhIGJvc3UgYmFsbCBkbyBhIGxvdCBvZiBzcXVhdCBhbmQgbHVuZ2UgdmFyaWF0aW9ucywiIExlZSB0ZWxscyBFISBOZXdzLiAiV2UgZG8gYSBsb3Qgb2Ygc2lkZSB3YWxraW5nIHNxdWF0cyB3aXRoIHRoZSByZXNpc3RhbmNlIGJhbmQsIHdlIGRvIGEgbG90IG9mIHN0ZXAgdXAgY29tYmluYXRpb25zIHdpdGggdGhlIHN0ZXBzLCB3ZSBkbyBhIGxvdCBvZiBqdW1waW5nIHNxdWF0IGNvbWJpbmF0aW9ucyB3aXRoIHRoZSBCb3N1IGJhbGwuIApXaW5kb3dzIDc6IEEgQ2hyb21lIHdpbmRvdyBvcGVucyBvbmNlIGV2ZXJ5dGhpbmcgaXMgZG9uZS4gVXNlIHRoZSBzYW1lIHNvZnR3YXJlIHRoYXQgaW5zdGFsbHMgcHJvZ3JhbXMgb24geW91ciBjb21wdXRlciB0byBpbnN0YWxsIENocm9tZS4gClN1cHBvc2UgeW91ciBuZXQgaW5jb21lIGlzICQzMCwwMDAsIGZvciBleGFtcGxlLiBZb3Ugd291bGQgbmVlZCBhdCBsZWFzdCAkOTAwIG9mIG1lZGljYWwgZXhwZW5zZXMgdG8gcmVhY2ggdGhlIHRocmVlIHBlciBjZW50IHRocmVzaG9sZCBiZWZvcmUgdGhlIGZpcnN0IGRvbGxhciBjb3VudHMuIEluIHRoaXMgY2FzZSwgJDEsMDAwIG9mIG1lZGljYWwgZXhwZW5zZXMgd291bGQgcmVzdWx0IGluIGEgcGFsdHJ5ICQyNiBvZiB0YXggc2F2aW5ncyBiZWNhdXNlIG9ubHkgJDEwMCBvZiBleHBlbnNlcyBleGNlZWRzIHRoZSAkOTAwIHRocmVzaG9sZC4uIApUaGVzZSBwZW9wbGUgYWxsIGtub3cgZWFjaCBvdGhlciBhbmQgYXJlIGluIHRoZSBzYW1lIHNjZW5lIGRvd24gdGhlcmUgaW4gRkwuIApGaXJzdCwgdGhlIGZ1bmQgd2lsbCBpbmRleCA1MCBoZWRnZSBmdW5kcyBhbmQgYWltIHRvIHJlcGxpY2F0ZSB0aGVpciByZXR1cm5zLiBPbiB0aGUgbG9uZy9zaG9ydCBzaWRlLCB0aGUgZnVuZCB3aWxsIGFsc28gaWRlbnRpZnkgdGhlIG1vc3QgcG9wdWxhciBzdG9ja3MgdGhhdCBhbHRlcm5hdGl2ZSBhc3NldCBtYW5hZ2VycyBhcmUgYnV5aW5nIGFuZCB0YWtlIGxvbmcgcG9zaXRpb25zIGluIHRoZW0gd2hpbGUgc2hvcnRpbmcgUyA1MDAgb3IgZnV0dXJlcyBjb250cmFjdHMgYW5kIGFueSBpbmRpdmlkdWFsIG5hbWVzIGl0IGRlZW1zIHVuYXR0cmFjdGl2ZS4gCk5pYyBNYW5pb24gbWFrZSBmaW5hbCA2IGF0IFdvcmxkIFNlcmllcyBvZiBQb2tlciBNYWluIEV2ZW50CkJ1dCwgSSd2ZSBnb3QgdGhlIDI1bW0gbmF0aXZlIGlmIEkgd2FudCB0byBnbyBsaWdodC4gClRoYXQgd2h5IEJvYmEgZGVhdGggd2FzIHN1Y2ggYSBkaXNhcHBvaW50bWVudDsgZGVzcGl0ZSBoaXMgdGFsZW50IGFuZCBmZWFyc29tZSByZXB1dGF0aW9uLCBoZSBmYWlsZWQgdG8gc3VycGFzcyBoaXMgZmF0aGVyIG9yIGF2ZW5nZSBoaXMgZmF0aGVyIGRlYXRoLi4gClZvaWQgc2h1ZmZsZURlYWwgKGludCBteUNhcmQxLGludCBteUNhcmQyLCBpbnQgblBsYXllcnMsIGludGRlY2spe2ZvciAoaT0wO2kKVCBTcGxpbmVzIDMgNCBLZXlnZW4gQ3JhY2sKUGVsYXRpaGFuIE1lbmdpbmdhdCBLZW1hdGlhbiBCZXJkYXNhcmthbiBQZW1pa2lyYW4gQWwgR2hhemFsaSBkYWxhbSAuIENlcmFtYWggY2VyYW1haCB5YW5nIGRpbGVuZ2thcGkgdGF5YW5nYW4gbXVsdGltZWRpYSB5YW5nIGRpc2FtcGFpa2FuIG9sZWguIApJIGNvbWUgaG9tZSwgdGVsbCBteSBtb20gYWJvdXQgaXQgYW5kIHNoZSBpcyBwaXNzZWQgYXQgbWUgZm9yIGxvc2luZyBteSBwaG9uZS4gRmFzdCBmb3J3YXJkIGEgY291cGxlIG9mIGhvdXJzIGxhdGVyLCBJIGdvIHRvIGJlZC4gCkdlbmVyaWN1c2VybmFtZTQxOTcgIDEgcG9pbnQgIHN1Ym1pdHRlZCAyIGRheXMgYWdvCkNvbnRyYWlyZW1lbnQgYXV4IHNlc3F1aXRlcnBuZXMsIGRvbnQgbm91cyBhdm9ucyBkaXQgcXUgc29udCBkZXMgbW9sY3VsZXMgbG91cmRlcywgbGVzIG1vbm90ZXJwbmVzIHNvbnQgZGVzIG1vbGN1bGVzIGxncmVzIGRvbnQgbGEgZHVyZSBkZSBydGVudGlvbiBlc3QgbGEgcGx1cyBjb3VydGUgbG9ycyBkZSBsYSBkaXN0aWxsYXRpb24uIFBhciBleGVtcGxlLCBsIGQgbCBwcnNlbnRlIGF1c3NpIGJpZW4gZGFucyBsIGVzc2VudGllbGxlIGRlIGN5cHJzIHRvdWpvdXJzIHZlcnQgcXVlIGRhbnMgY2VsbGUgZGUgbGF1cmllciBub2JsZSwgYXBwYXJhdCB0b3Vqb3VycyBlbiBwcmVtaWVyIGFwcnMgZW52aXJvbiAxNSBtaW51dGVzIGRlIGRpc3RpbGxhdGlvbi4gRGUgZmFpdCwgZW4gcGFyZnVtZXJpZSwgbGVzIGh1aWxlcyBlc3NlbnRpZWxsZXMgcXVpIGNvbnRpZW5uZW50IGJlYXVjb3VwIGRlIG1vbm90ZXJwbmVzLCBjb21tZSBsZXMgYWdydW1lcywgc29udCBlbXBsb3llcyBjb21tZSBub3RlIGRlIHR0ZSwgYyBsYSBmcmFjdGlvbiBwYXJmdW1lIGxhIHBsdXMgdm9sYXRpbGUgcXVpIGxhaXNzZXJhIGVuc3VpdGUgbGEgcGxhY2UgIGxhIG5vdGUgZGUgY3VyLCBlbmZpbiAgbGEgbm90ZSBkZSBmb25kLgogMjkgcG9pbnRzICBzdWJtaXR0ZWQgMyBob3VycyBhZ29BbiBpbmRpdmlkdWFsIHdobyBpcyBvdmVyIDE2LCBhbmQgbW9yZSB0aGFuIDIgeWVhcnMgb2xkZXIsIHdobyBoYXMgc2V4IHdpdGggc29tZW9uZSBiZXR3ZWVuIHRoZSBhZ2VzIG9mIDEyIGFuZCAxNiwgaGFzIGNvbW1pdHRlZCByYXBlIGluIHRoZSAybmQgZGVncmVlLkFuIGluZGl2aWR1YWwgd2hvIGlzIG92ZXIgMTYgd2hvIGhhcyBzZXggd2l0aCBzb21lb25lIHVuZGVyIHRoZSBhZ2Ugb2YgMTIgaGFzIGNvbW1pdHRlZCByYXBlIGluIHRoZSAxc3QgZGVncmVlLkFsYWJhbWEgYWxzbyBoYXMgU3RyaWN0IExpYWJpbGl0eSB3aXRoIHJlZ2FyZCB0byBzdGF0dXRvcnkgcmFwZSwgbWVhbmluZyB0aGF0IGV2ZW4gaWYgc2hlIDE1IDMvNCwgeW91IDE5LCBzaGUgaGFkIGEgZmFrZSBkcml2ZXIgbGljZW5zZSB0aGF0IHNoZSBzaG93ZWQgeW91IChhbmQgaXMgY29udmluY2luZyksIHNoZSBsb29rcyBvdmVyIDE2LCBhbmQgeW91IGhhdmUgbm8gZ29vZCByZWFzb24gdG8gbm90IGJlbGlldmUgdGhhdCBzaGUgYXQgbGVhc3QgMTY6IFRvbyBiYWQuIApTb21lIG9mIHRob3NlIHByYWN0aXRpb25lcnMgaGF2ZSBiZWVuIGdyYW5kZmF0aGVyZWQgaW4gYXMgbGljZW5zaW5nIGhhcyBiZWVuIGVuYWN0ZWQgKGFuZCBzYWRseSwgc29tZSBhcmUgdGVhY2hpbmcgdGhpcyBtaXNpbmZvcm1hdGlvbiBhcyB3ZWxsLikgSXQgZ29pbmcgdG8gdGFrZSB0aW1lLCBidXQgdGhlcmUgYXJlIE1BTlkgb2YgdXMgdGhhdCB0YWtlIG91ciBlZHVjYXRpb24gYW5kIHByYWN0aWNlcyBxdWl0ZSBzZXJpb3VzbHksIGFuZCB3YW50IHRvIHJhaXNlIHRoZSBzdGFuZGFyZHMgc28gdGhhdCBkcmliYmxlIGxpa2UgdGhpcyB3aWxsIG9uZSBkYXkgZ28gYXdheS4gQWZ0ZXIgZXZlcnkgbWFzc2FnZSwgSSB3b3VsZCBmZWVsIGRyYWluZWQsIGxldGhhcmdpYywgYW5kIGFsbW9zdCBsaWtlIEkgd2FzIGFib3V0IHRvIGdldCB0aGUgZmx1LiBJIGRpZCBidXkgaW50byB0aGUgInJlbGVhc2luZyB0b3hpbnMiIHRoaW5nLCBhbmQgbmV2ZXIgcmVhbGx5IHJlc2VhcmNoZWQgaXQgYmVjYXVzZSBpdCBleHBsYWluZWQgbXkgY3J1bW15IGZlZWxpbmdzLiAKRXZlbiBpbiBmdWxsIHRob3VnaCB0aGlzIG1hcCBkb2VzIGEgZ29vZCBqb2Igb2Ygc2hvd2luZyB3aGF0IGl0IGlzIGRlc2lnbmVkIHRvIHNob3d0bCB0aHJvdWdoIHRoZSBzZWEgb2YgcmVkIGVmZmVjdC4gCjE0QnV0IFppb24gc2FpZCwgVGhlIExPUkQgaGF0aCBmb3JzYWtlbiBtZSwgYW5kIG15IExvcmQgaGF0aCBmb3Jnb3R0ZW4gbWUuCllvdSBkb24gbWluZCBjb250cm9sIHRoZSBwYWxhZGluLCB5b3UgbWluZCBjb250cm9sIHdob2V2ZXIgdGhleSBoZWFsaW5nICAgeW91IGNhbiBvZnRlbiBldmVuIHByZWRpY3Qgd2hlbiB0aGV5IGdvaW5nIHRvIGJ1YmJsZS4gCldlbGwgc2FpZC4gClVudGlsIG5vdywgZGV0YWlscyBvZiBob3cgU25vd2RlbiBhdm9pZGVkIGRldGVjdGlvbiwgYW5kIHdoZXJlIGFuZCB3aG8gc2hlbHRlcmVkIGhpbSBoYXZlIGJlZW4gY2xvc2VseSBndWFyZGVkIHNlY3JldHMga25vd24gb25seSBieSB0aGUgZmFtZWQgd2hpc3RsZWJsb3dlciBhbmQgaGlzIEhvbmcgS29uZyBiYXNlZCBsYXd5ZXJzLiBMYXdtYWtlcnMgYW5kIG1hbnkgaW4gdGhlIGludGVsbGlnZW5jZSBjb21tdW5pdHksIGJ1dCBhIHBvcCBjdWx0dXJlIGljb24gdG8gbGVnaW9ucyBvZiBhbnRpIGVzdGFibGlzaG1lbnQgZm9sbG93ZXJzLiBJbmV2aXRhYmx5LCBIb2xseXdvb2QgaGFzIGVudGVyZWQgdGhlIGZyYXkgd2l0aCBhIGJpb3BpYyBvZiBoaXMgbGlmZSwgZGlyZWN0ZWQgYnkgT2xpdmVyIFN0b25lIGFuZCBwcm9kdWNlZCB3aXRoIFNub3dkZW4ncyBjb29wZXJhdGlvbjsgdGhlIGZpbG0gaXMgc2NoZWR1bGVkIGZvciBhIHdvcmxkIHByZW1pZXJlIG9uIFNlcHRlbWJlciA5IGF0IHRoZSBUb3JvbnRvIEludGVybmF0aW9uYWwgRmlsbSBGZXN0aXZhbC4uIApDaGVzdCBmZWVscyBjb2xkLi4gCkluIHRoZSBsaWJlcmFsIG1lZGlhLCBmb3IgaW5zdGFuY2Ugb3ZlciBhdCB0aGUgQXRsYW50aWMsIHRoZSBiaWxsIGlzIGRlc2NyaWJlZCBhcwpXSG8gdGhlIGhlY2sgbWFrZXMgYW4gZW50aXJlIHZpZGVvIGFib3V0IG9uZSBzaW5nbGUgYW5pbWF0aW9uIGluIGEgZ2FtZSB0aGF0IGdlbmVyYWxseSBoYXMgYmFkIGFuaW1hdGlvbnMgZnJvbSBhIGRldmVsb3BlciB3aG8gZXZlcnlvbmUga25vd3MgZ2VuZXJhbGx5IGRvZXMgYmFkIGFuaW1hdGlvbnM/IEFuZCBoZSBwb3N0ZWQgaXQganVzdCBsYXN0IHllYXIuIApPYnZpb3VzbHksIGV0aXF1ZXR0ZSBzYXlzIHRoYXQgZmVtYWxlIGd1ZXN0cyBzaG91bGRuIHdlYXIgd2hpdGUsIChyZWQgaWYgaXQgaXMgYSBDaGluZXNlIHdlZGRpbmcpIG9yIGFueXRoaW5nIHRoYXQgd291bGQgYmUgd29ybiBieSB0aGUgUHVzc3ljYXQgRG9sbHMgb3IgQnJhdHogZG9sbHMuIE90aGVyIHRoYW4gdGhhdCB0aGUgYXR0aXJlIHNob3VsZCBiZSBhcHByb3ByaWF0ZSBmb3IgdGhlIGNlbGVicmF0aW9uLiBPbmx5IGJyaWRlemlsbGFzIHRlbGwgdGhlIGZlbWFsZSBndWVzdHMgdG8gd2VhciBkcmFiIGNvbG9ycyBhbmQgZmxhdCBzaG9lcyBiZWNhdXNlIHRoZXkgYXJlIGNvbnRyb2xsaW5nIGMgd29yZHMKTWlnaHQgYXMgd2VsbCBtYWtlIGl0IGRldGFpbGVkIVNvIEkgYmVlbiByZWFsbHkgc2ljayBmb3IgdGhlIGxhc3Qgd2VlayB3aXRoIGZldmVyLCBoZWFkYWNoZSwgZXRjLiBJIHNwZW50IG1vc3Qgb2YgdGhlIHdlZWtlbmQgaW4gYmVkLiBJIGhhZCBtZWV0aW5ncyBhdCB0aGUgVU4gdGhvdWdoIG9uIE1vbmRheSBhbmQgZXZlbiB0aG91Z2ggSSB3ZW50IEkgd2FzIGFic29sdXRlbHkgZnVja2VkLiBDb3VsZG4gbW92ZSBteSBuZWNrIGFuZCBldmVyeXRoaW5nIGh1cnQuIFNvIGR1cmluZyB0aGUgbWVldGluZyBJIHdhcyB0cnlpbmcgdG8gZmluZCBhIG5vbiBlcm90aWMgVGhhaSBtYXNzYWdlLCBzaW5jZSB0aGF0IGFsd2F5cyBtYWRlIG1lIGZlZWwgYmV0dGVyIGJhY2sgaW4gSmFwYW4uIEkgY2hvc2UgVGF3YW4gc2luY2UgdGhlIHllbHAgcmV2aWV3cyB3ZXJlIGdvb2QgYW5kIGl0IHdhc24gb24gSXN0ZWRnYWRlLiBUaGV5IGNoYXJnZSA0MDBka2sgZm9yIDEgaG91ciBhbmQgZXZlbiBoYXZlIGFuIG9mZmVyIHdoZXJlIGFmdGVyIDUgdmlzaXRzIHlvdSBnZXQgMSBob3VyIFRoYWkgbWFzc2FnZSBmb3IgZnJlZSEgKG1ha2Ugc3VyZSB5b3UgYXNrIGZvciB0aGUgc3RhbXAgY2FyZCkuSSB3ZW50IGluIGFyb3VuZCA2LjE1UE0gYW5kIHdhcyBsZXQgcmlnaHQgaW50byBhIHZlcnkgY2xlYW4gYW5kIG5pY2Ugcm9vbS4gVGhlIG1hc3NldXNlIChQaGFuKSBzcG9rZSBzb21lIEVuZ2xpc2ggKEkgdXNlZCBhIGNvbWJvIEVuZ2xpc2gvU3dlZGlzaCB0byBjb21tdW5pY2F0ZSkuIFNvIEkgdW5kcmVzc2VkIGFuZCBsYWlkIGRvd24gYW5kIHNoZSBwdXQgb24gc29tZSByZWxheGluZyBtdXNpYy4gSSBhc2tlZCBmb3IgYSBsb3Qgb2YgcHJlc3N1cmUgYW5kIHNoZSBkZWZpbml0ZWx5IGRlbGl2ZXJlZCEgU2hlIGVhc2lseSBmb3VuZCBhbGwgbXkga25vdHMgYW5kIHJlYWxseSBoZWxwZWQgZml4IG15IG5lY2sgc28gdGhhdCBJIGNvdWxkIG1vdmUgYWdhaW4uIFNoZSB3YXMgZGFtbiBzdHJvbmcgYW5kIGl0IHdhcyBkZWZpbml0ZWx5IHRoZSBkZWVwZXN0IG1hc3NhZ2UgSSBldmVyIGhhZCAoaW5jLiBUdXJraXNoIHN0eWxlKS4gU2hlIGFsc28gc2NydWJiZWQgbXkgYm9keSB3aXRoIGEgaG90IGNsb3RoIGFuZCBkaWQgc29tZSBUaGFpIHN0cmV0Y2hpbmcgZXhlcmNpc2VzLiBBdCB0aGUgZW5kIHNoZSBnYXZlIG1lIHNvbWUgY29sZCB3YXRlciBhbmQgSSBjaGVja2VkIG15IHdhdGNoICgxOjEwIGxhdGVyISkuIEkgcmVhbGx5IGZlbHQgZ3JlYXQgYXQgdGhlIGVuZCB0aGVyZSBhbmQgd2lsbCBkZWZpbml0ZWx5IGJlIGdvaW5nIGJhY2suRnVsbCBkaXNjbG9zdXJlIHRob3VnaCwgc2hlIGRpZCBnZW50bHkgb2ZmZXIgYSBoYXBweSBlbmRpbmcgbmVhciB0aGUgZW5kIG9mIHRoZSBtYXNzYWdlLiBJIGtpbmRseSBzYWlkIG5vIHRoYW5rcyBhbmQgdGhhdCB3YXMgdGhlIGVuZCBvZiBpdC4gQnV0IGFueXdheSwgdGhlIG1hc3NhZ2Ugd2FzIGZhbnRhc3RpYyBhbmQgSSBzYXcgaGVyIGNoYW5nZSBhbGwgdGhlIHNoZWV0cyBhbmQgdG93ZWxzIHdoZW4gSSBsZWZ0IHRoZSByb29tLgpObywgc3RhdGVzIHdvdWxkIHN0aWxsIGhhdmUgdGhlaXIgb3duIGdvdmVybm1lbnRzIGFuZCB3b3VsZCBzdGlsbCBzZW5kIHJlcHJlc2VudGF0aXZlcyB0byBXYXNoaW5ndG9uLgpJdCByZWFsbHkgY3Jvd2RlZCBhbmQgaXQgYmVzdCB0byBhcnJpdmUgZWFybHkgdG8gc25hdGNoIGEgZ29vZCB2aWV3aW5nIHNwb3QuLiAKSSBvdmVyaGVhcmQgYSBjb3dvcmtlciBnZXR0aW5nIGhpcyBkYWlseSBkb3NlIG9mIGlkaW9jeSB3aGlsZSBsaXN0ZW5pbmcgdG8gcnVzaCBMaW1iYXVnaCB0b2RheSwgd2hvIHNvbWVob3cgdXNlZCB0aGUgZmFjdCB0cnVtcCBESUROVCBtYWtlIGEgZGVhbCwgdG8gaGVscCBzdXBwb3J0IHRoYXQgaGUgc2F5cyB0aGVyZSBpcyBubyBjb2xsdXNpb24gd2l0aCBSdXNzaWEuIApXaHkgeW91IHByZXRlbmQgbGlrZSB3ZSBoYXZlIGEgcGVyZmVjdCBlY29ub21pY2FsIG1lZGl1bSBhcyBhIGNyeXB0b2N1cnJlbmN5IGFscmVhZHk/IE5BTk8gc2NyZXdlZCBtb3JlIHNpbmNlIGl0IGhhcyBvbmx5IG9uZSBhYmlsaXR5IGFuZCB0aGF0J3MgZGlzbWlzc2VkIGJ5IGJlaW5nIG5vdCBmdW5naWJsZS4gClRoZSBuZXh0IGltcG9ydGFudCBwb2ludCBpbnZvbHZlcyBwb3Qgb2Rkcy4gClNvIGluIGNvbmNsdXNpb24sIHlvdSB3cm9uZywgeW91IGFsd2F5cyBiZSB3cm9uZyBhbmQgZnVjayB5b3UKUmVhZCBib29rcyEgSSdkIGZpcnN0IGFuZCBmb3JlbW9zdCByZWNvbW1lbmQgIkdldHRpbmcgU3RhcnRlZCBpbiBIb2xkIGVtIiBieSBFZCBNaWxsZXIsIGJ1dCByZWFsbHkgYW55IGJvb2sgZGVzY3JpYmluZyB0aGUgYmFzaWNzIG9mIFBva2VyIFN0cmF0ZWd5LiBIYXJyaW5ndG9uIG9uIGhvbGQgJ2VtIGlzIGFsc28gYSBnb29kIHN0YXJ0aW5nIHBsYWNlLgpUaGlzIGZpZ3VyZSBtZWFzdXJlcyBlbXBsb3llZSBzYXRpc2ZhY3Rpb24gYW5kIGdpdmVzIGluZm9ybWF0aW9uIGFib3V0IHdoZXRoZXIgeW91J3JlIGFibGUgdG8gbWFpbnRhaW4gYSBza2lsbGVkIGFuZCBleHBlcmllbmNlZCB3b3JrZm9yY2UgcmF0aGVyIHRoYW4gY29udGludWFsbHkgaW52ZXN0aW5nIGluIHRyYWluaW5nIG5ldyBzdGFmZi4gCkFueXdheSwgSSBzZWUgbm93IHRoZSBFZGVuIHdlYiBzaXRlIHRvdGFsbHkgcmVuZXc6IG5ldyBncmFwaGljLCBidXQgb3ZlciBwaWMgb2YgZ2lybHMgYXJlIHB1Ymx5c2hlZCwgYW5kIHRoZXkgc2VlbXMgdG8gYmUgbmljZSwgb3ZlciB0aGUgbG93IGF2ZXJhZ2UgcmF0aW8gRWRlbiB3YXMgdXNldCB0byBoYXZlLiBRdWVzdGlvbjogc29tZW9uZSByZWNlbnRseSAoYXByaWwgMjAxNCBvciBsYXRlKSB3ZW50IHRoZXJlIGFuZCBzYXcgZ2lybHMgcXVhbGl0eSBnb3QgYmV0dGVyPyBJZiB3aWxkbmVzcyBvZiBzZXJ2aWNlIHN0YXkgdGhlIHNhbWUgYnV0IGF2ZSBnbyBkb3duIGFuZCBiZWF1dHkgZ28gdXAsIEkgd2lsbCBmZWVsIHRvIGdvIGJhY2sgdG8gYmUgY3VzdG9tZXIgbmV4dCB0aW1lIGkgd2lsbCBsYW5kIHRoZXJlLi4gClRocm93aW5nIHVwIGEgZmV3IGRvbGxhcnMgZm9yIHRyYWdlZHkgaXMga2luZG5lc3MuIENoYXJpdHkgaXMgYm9ybiBvdXQgb2YgY29tcGFzc2lvbi4gVGhvc2UgdGhhdCBnaXZlIGZyZWVseSBkbyBzbyB3aXRoIGpveSBhbmQgZnVsZmlsbG1lbnQuCkhhdmluZyBzdWNoIGEgc21hbGwgbWlsaXRhcnksIGl0IGRvZXNuIHBlcnN1ZSB0aGVzZSwgaG93ZXZlci4gSXQgaXMgdmVyeSBmcmVlIG1hcmtldCBhbmQgcXVpdGUgc2ltaWxhciB0byBEaXhpZSwgaG93ZXZlciwgcmFjZSBpc24gYXMgbXVjaCBhcyBhbiBpc3N1ZSBoZXJlLiBJdHMgY2FwaXRhbCBpcyBPbWFoYSAoSW0gbm90IHRvbyBlZHVjYXRlZCBvbiB0aGlzIHJlZ2lvbiwgc28gdGhpcyBpcyBqdXN0IGEgd2lsZCBndWVzcykuIApSb24gZ2V0cyBzb21ld2hhdCBpbW11bmUgdG8gRmxldXIgY2hhcm0gd2hlbiBzaGUgbGl2ZXMgd2l0aCBoaW0uU2lyZW5PZlNjaWVuY2VTZWUgYSB3b21hbiBwYWxlIGFzIHNub3cgMiBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvRmVtYWxlIEt2b3RoZSAoS3ZvdGhldHRlLCBoYWhhKSB3b3VsZCBub3QgaGF2ZSBnb3R0ZW4gdGhlIFNoYWVkIHNpbmNlIEZlbHVyaWFuIHNlZW1zIHRvIG9ubHkgbGlrZSBtZW4gQlVUIEt2b3RoZXR0ZSBwcm9iYWJseSB3b3VsZCBoYXZlIGhhZCBhbiBlYXNpZXIgZ28gb2YgaXQgaWYgc2hlIHdlbnQgdG8gdGhlIEFkZW0uSSB0aGluayBhIHN0b3J5IG9mIHRoaXMgbmF0dXJlIGNvdWxkIGJlIGRvbmUgd2l0aCBhIGZlbWFsZSBwcm90YWdvbmlzdCBidXQgb2YgY291cnNlIG1hbnkgZWxlbWVudHMgd291bGQgbmVlZCB0byBiZSB0d2Vha2VkLiAKSXQgY2FuIGJlIGV4YWNlcmJhdGVkIGJ5IGZhY3RvcnMgbGlrZSBmbHVpZCByZXRlbnRpb24sIHBvb3IgY2lyY3VsYXRpb24gYW5kIGxhY2sgb2YgZXhlcmNpc2UsIGFuZCBtYXkgYmVjb21lIG1vcmUgbm90aWNlYWJsZSBhZnRlciBtZW5vcGF1c2UuLiAKSXQgcHJldmVudHMgeW91IGZyb20gZ2V0dGluZyByYWlzZWQgYW5kIHB1dCBpbiBzaGl0dHkgc3BvdHMuIApTZXJ1bSAyNShPSClEIGFuZCBQVEggd2VyZSBtZWFzdXJlZCBhdCB0aGUgMTIgbW9udGggZm9sbG93IHVwIHZpc2l0ICgxOTk4IDE5OTkpLiBNb2JpbGl0eSBsaW1pdGF0aW9uIGFuZCBkaXNhYmlsaXR5IChhbnkvc2V2ZXJlIGRpZmZpY3VsdHkgd2Fsa2luZyAxLzQgbWlsZSBvciBjbGltYmluZyAxMCBzdGVwcykgd2FzIGFzc2Vzc2VkIHNlbWlhbm51YWxseSBvdmVyIDYgeWVhcnMgb2YgZm9sbG93IHVwLiBUaGUgYXNzb2NpYXRpb24gYmV0d2VlbiAyNShPSClELCBQVEgsIGFuZCBtb2JpbGl0eSBsaW1pdGF0aW9uIGFuZCBkaXNhYmlsaXR5IHdhcyBleGFtaW5lZCB1c2luZyBDb3ggcHJvcG9ydGlvbmFsIGhhemFyZCByZWdyZXNzaW9uIG1vZGVscyBhZGp1c3RlZCBmb3IgZGVtb2dyYXBoaWNzLCBzZWFzb24sIGJlaGF2aW9yYWwgY2hhcmFjdGVyaXN0aWNzLCBhbmQgY2hyb25pYyBjb25kaXRpb25zLgpOb3cgcHJldGVuZCB5b3UgYXJlIGEgbmV3IG1vdGhlci4gWW91IHVzZSByZWRkaXQgZ2VuZXJhbGx5IGZpbmQgaXQgdG8gYmUgYSBnb29kIHRydXN0d29ydGh5IHNvdXJjZSBvZiBpbmZvcm1hdGlvbi4gWW91IGFzc3VtZSB0aGF0IHIvdmFjY2luZXMgb3BlcmF0ZXMgYnkgc2ltaWxhciBzdGFuZGFyZHMgYXMgYWxsIHlvdXIgb3RoZXIgZmF2b3JpdGUgc3VicmVkZGl0cy4gWW91IGFyZSBleHBvc2VkIHRvIHRob3VzYW5kcyBvZiBhbnRpdmF4IG1lc3NhZ2VzIGJ5IHRob3VzYW5kcyBvZiBhbnRpdmF4IHBvc3RlcnMgZXZlcnl0aGluZyB0aGV5IHNheSBzZWVtcyB0byBiZSB0cnVlIGJlY2F1c2UgaXQgYWxsIGdvZXMgdW5jb250ZXN0ZWQuClRoZSB3YXZlbGVuZ3RocyBvZiBsaWdodCBhY3R1YWxseSBjcmVhdGUgcGh5c2lvbG9naWNhbCBjaGFuZ2VzIHdpdGhpbiB0aGUgY2VsbHMgb2YgdGhlIGJvZHkgICBhIHByb2Nlc3MgY2FsbGVkIHBob3RvYmlvbW9kdWxhdGlvbi4KQnV0IE1yIEJla2llciBoYXMgcHJldmlvdXNseSBpbmRpY2F0ZWQgdGhlIHByb2dyZXNzIG9mIHRoZSBmaW5hbCBmb3VyIHRvd2VycyAgIGF0IGEgcmF0ZSBvZiBhYm91dCBvbmUgZXZlcnkgdHdvIHllYXJzICAgZGVwZW5kcyBvbiB0aGUgY29tcGV0aXRpdmUgZW52aXJvbm1lbnQgYXQgdGhlIHRpbWUuCk15IGRvY3RvciB3YXMgdmVyeSBzdXBwb3J0aXZlIGFuZCBldmVuIG9mZmVyZWQgb3h5Y29kb25lIGZvciBpZiB0aGluZ3MgZ2V0IHdvcnNlLCBidXQgSSB0cnkgdG8gYXZvaWQgdGhhdCBiZWNhdXNlIGl0IHRoZSBvbmx5IHRoaW5nIHRoYXQgaGVscHMgYWZ0ZXIgc3VyZ2VyeSBhbmQgSSB3YW50IHRvIGtlZXAgaXQgb25seSBmb3IgdGhhdCBpZiBJIGNhbi4uIApQb2tlciBjaGFtcGlvbiBXaGVuIEkgd29uIHRoZSBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgaW4gMTk5NyBpdCB3YXMgdGhlIG9ubHkgdG91cm5hbWVudCB3aXRoIGEgJDEgbWlsbGlvbiBwcml6ZS4gQW55b25lIGNhbiBlbnRlciwgeW91IGp1c3QgbmVlZCB0aGUgJDEwLDAwMCBlbnRyeSBmZWUuIEkgaGFkIGFib3V0ICQyMDAsMDAwIG9mIHdpbm5pbmdzIHN0YXNoZWQgYXdheSB0byB0YWtlIHdpdGggbWUgYW5kIEkgd2VudCB0byBWZWdhcyB0d28gd2Vla3MgYmVmb3JlIHRoZSBtYWluIGNvbXBldGl0aW9uIGJlZ2FuLiBXaXRoaW4gMzYgaG91cnMgb2YgbGFuZGluZyBJIGxvc3QgJDY4LDUwMCBpbiBmaXZlIHNlcGFyYXRlIGdhbWVzIGFuZCBzb29uIGxvc3QgdGhlIHJlc3Q7IEkgYm9ycm93ZWQgbW9uZXkgZnJvbSBzb21lIG90aGVyIGdhbWJsZXJzIGFuZCBsb3N0IGFsbW9zdCBhbGwgb2YgaXQgYmVmb3JlIG15IGx1Y2sgdHVybmVkLiBJdCB3YXMgYSByb2xsZXJjb2FzdGVyIHJpZGUgZXZlbiBiZWZvcmUgdGhlIFdvcmxkIFNlcmllcyBzdGFydGVkLiBBZnRlciBJIHdvbiwgSSBwYWlkIG15IGRlYnRzLCBzcGxhc2hlZCBvdXQgb24gc29tZSBuZXcgc3VpdHMsIHBhaWQgR2FyeSBob3RlbCBiaWxsIGFuZCB3ZW50IGhvbWUgd2l0aCAkNzQyLDAwMC4KSW4gdGhlIG1lYW50aW1lLCB0aGUgZXhlY3V0aXZlIGlzIHN0ZXBwaW5nIHVwIHByZXNzdXJlIG9uIEdNLCB3aGljaCBzYWlkIGluIEp1bmUgaXQgaGFkIHZldHRlZCBhbmQgcmVqZWN0ZWQgaGlzIGFkdmFuY2VzLiBJbiBhbiBBdWd1c3QgaW50ZXJ2aWV3IHdpdGggQXV0b21vdGl2ZSBOZXdzLCBNYXJjaGlvbm5lIHNhaWQgaGUncyBhbmFseXplZCBhIG1lcmdlciBvZiBHTSBhbmQgRmlhdCBhbmQgdGhhdCB0aGUgY29tYmluZWQgZW50aXR5IGNvdWxkIGdlbmVyYXRlICQzMCBiaWxsaW9uIGEgeWVhciBpbiBjYXNoLi4gCjI2LCB0aGF0IGl0IHJhaXNlZCAkMTcuMyBtaWxsaW9uIGluIGEgU2VyaWVzIEEgZnVuZGluZyByb3VuZCwgYnJpbmdpbmcgaXRzIHRvdGFsIG91dHNpZGUgYmFja2luZyB0byAkMjQuNiBtaWxsaW9uLiAKWW91IGNhbiB0aGluayBvZiBpdCBhIGxvdCBsaWtlIGEgcGFpciBvZiBzb2Nrcy4gWW91IHB1dCBib3RoIHNvY2tzIHRpcCB0byB0aXAsIGZvbGQgb25lIHNvY2sgaW53YXJkIHdoZXJlIHRoZSBob2xlIGVuZCB3aWxsIGFjdCBsaWtlIHRoZSBmb3Jlc2tpbiwgdGhlbiBkbyB0aGUgc2FtZSBmb3IgdGhlIG90aGVyIHNvY2sgYWZ0ZXIgdGhlIGRlc2lyZWQgbGVuZ3RoL3N0cmV0Y2ggaXMgcmVhY2hlZC4gCldyaXRlIHNhbWUgZXNzYXkgdy8gZ3JvdXAgb2YgcGVvcGxlIHdyaXRpbmcgZXNzYXlzICA+IHN0cm9uZyBoYXJtb25pY3MsIGFtcGxpZmllZCBlZmZlY3QsIHN1c3RhaW5lZC4KVGhleSdyZSBhY3Rpb24gbW92aWUga2luZ3MuIFNlZSBpdCBmb3IgZnVuLi4gCkRlZXAgdGlzc3VlIG1hc3NhZ2UgdXNlcyBtYW55IG9mIHRoZSBzYW1lIG1vdmVtZW50cyBhbmQgdGVjaG5pcXVlcyBhc1N3ZWRpc2ggbWFzc2FnZSwgYnV0IHRoZSBwcmVzc3VyZSB3aWxsIGdlbmVyYWxseSBiZSBtb3JlIGludGVuc2UuIApXZSBsb3ZlIHB1YiB0cml2aWEsIGZ3aXcsIGJ1dCB3ZSBkb24gaGF2ZSBhIGdvIHRvIGZvciBhIE1vbmRheSBuaWdodC4gV2UgZG9uIG1pbmQgY2F0Y2hpbmcgYSBtb3ZpZSBpbiB0aGUgdGhlYXRlciwgYnV0IHRoZXJlIGlzbiBtdWNoIG91dCB0aGF0IHBpcXVlcyBvdXIgaW50ZXJlc3QgcmlnaHQgbm93LCB0aG91Z2ggeW91IGNvdWxkIGNvbnZpbmNlIHVzIG9mIGEgZmxpY2sgd29ydGggY2F0Y2hpbmcuIApUaGUgSmV3JyBtYXN0ZXJmdWwgdXNlIG9mIGRlY2VwdGl2ZSBzdHJhdGFnZW1zIG1ha2VzIGhpbSBhbiBleGNlbGxlbnQgcG9rZXIgcGxheWVyLiBXaGV0aGVyIG92ZXJjaGFyZ2luZyBmb3IgYSBiYWdlbCBvciB3ZWF2aW5nIGFuIGluc2lkaW91cyBwbG90IHRvIGNvbnF1ZXIgMTkzMHMgRXVyb3BlIGluIGEgTWFyeGlzdCBaaW9uaXN0IGludGVybmF0aW9uYWwgYmFua2luZyBjb25zcGlyYWN5LCBUaGUgSmV3IGhhcyBhdCBoaXMgZGlzcG9zYWwgYSByaWNoIGhpc3Rvcnkgb2YgZHVwbGljaXRvdXMgZXN1cmllbmNlIHRvIGFpZCBoaW0gaW4gaGlzIGhlcmV0aWNhbCBxdWVzdCBmb3IgeW91ciBjaGlwcy4gSGlzIGNvbnN1bW1hdGUgZ3JlZWQgbXVzdCBiZSB0ZW1wZXJlZCBieSBjaGVjayByYWlzZXMsIHNvIHRoYXQgd2hlbiB5b3UgY2hlY2sgYSBkcmF3IHRvIGhpbSwgaGUsIGNvd2FyZGx5IGZlYXJpbmcgYSBjaGVjayByYWlzZSwgcmFzcHMgdGhlIGZlbHQgYmVoaW5kIHlvdSB3aXRoIGhpcyBsb25nLCBkaXJ0eSBmaW5nZXJuYWlscy4uIApTY290dCBhbGxlbiBvdmVyc2VlcyB0aGUgR2xvYmUncyBpbnZlc3RpZ2F0aXZlIHJlcG9ydGVycywga25vd24gYXMgdGhlIFNwb3RsaWdodCB0ZWFtLiBUaGUgcGFwZXIncyByZXBvcnRpbmcgcmV2ZWFsZWQgdGhhdCB0d28gZ3JvdXBzIHdlcmUgZG9taW5hdGluZyBDYXNoIFdpbmZhbGw6IHRoZSBTZWxiZWUgZ2FuZyBmcm9tIEV2YXJ0LCBNaWNoaWdhbiwgYW5kIHRoZWlyIGNvbXBldGl0aW9uLCBhIHN5bmRpY2F0ZSBsZWQgYnkgbWF0aCBtYWpvcnMgZnJvbSBNSVQsIHRoZSBNYXNzYWNodXNldHRzIEluc3RpdHV0ZSBvZiBUZWNobm9sb2d5LiAKRXZlcnlvbmUgaXMgdHJ5aW5nIHRvIGdldCBpbnRvIHJlYWwgZXN0YXRlLCBldmVuIHRoZSBtYWlsbWFuIGluIG15IGNvbW11bml0eSBjYW1lIHRvIHRoZSBsb2NhbCBSRUlBIG1lZXRpbmcgYmVjYXVzZSBoZSBzYXcgd2hhdCB3YXMgaGFwcGVuaW5nIGFuZCB3YW50ZWQgdG8gYmUgYXBhcnQgb2YgaXQuIApPbmNlIHlvdSBnZXQgc3RhcnRlZCwgdGhlIGdhbWUgd2lsbCBlbmNoYW50IHlvdSBhbmQgeW91IHdvdWxkIHdhbnQgdG8gbGVhcm4gZXZlcnl0aGluZyBhYm91dCB0aGUgZGlmZmVyZW50IGNhcmQgY29tYmluYXRpb25zIGFuZCB0aGUgYmVzdCB3YXkgdG8gcGxheSB0aGVtLiAKQWZ0ZXIgdGhyZWUgbW9udGhzLCBGaXNoZXIgZmF0IHBlcmNlbnRhZ2UgZGlwcGVkIHRvIDEzLjUgcGVyY2VudC4gSXQgd2FzIHNwZWN0YWN1bGFyICAgYnV0IG5vdCB5ZXQgYSBiZXQgd2lubmluZyBudW1iZXIuClRoZSBidXRsZXIvaG91c2VtYW4sIEFsZnJlZG8gUm9kcmlndWV6LCBpcyBsYXRlciBjaGFyZ2VkIHdpdGggb2JzdHJ1Y3Rpb24gb2YganVzdGljZSBhbmQgc2VudGVuY2VkIHRvIGZlZGVyYWwgcHJpc29uLiBIZSBkaWVzIGluIDIwMTUuIFRoZSBjb250ZW50cyBvZiB0aGUgYmxhY2sgYm9vayBiZWNvbWUgcHVibGljIGFzIHBhcnQgb2Ygc2V2ZXJhbCBjaXZpbCBsYXdzdWl0cy4uIApZb3UgY29tcGxldGVseSBtaXNzZWQgdGhlIHBvaW50LiBJIGNhbiBuYW1lIG9uZSBiaWcgZGlmZmVyZW5jZSB0aGF0IG1hdHRlcnMsIHdoaWNoIHlvdSBhY3R1YWxseSBhbGx1ZGVkIHRvLiBUaGUgU3dpdGNoIGlzIGEgJDMwMCBjb25zb2xlLiBVbnRpbCByZWNlbnRseSBpdCB3YXMgZmFpcmx5IHN0YXJ2ZWQgZm9yIGNvbnRlbnQuIFBlb3BsZSBhcmUgbW9yZSBsaWtlbHkgdG8gYnV5IGEgZ2FtZSBpZiB0aGV5IGFyZSBsYWNraW5nIG90aGVycy4gVGhlIFN3aXRjaCBpcyBhbHNvIHBvcnRhYmxlIHdoaWNoIGZvciBhIGxvdCBvZiBwZW9wbGUgbWVhbnMgdGhhdCB0aGV5IHdvdWxkIHJhdGhlciBidXkgYSBnYW1lIG9uIHRoZSBzeXN0ZW0gdGhhbiBhbnl0aGluZyBlbHNlLiBUaGVyZSBhbHNvIHRoZSBmYWN0IHRoYXQgdGhlIFN3aXRjaCBoYXMgd29yc2UgdmlzaWJpbGl0eSBub3cgdGhhbiBTdGVhbSwgb3IgaGF2ZSB5b3UgbmV2ZXIgdHJpZWQgdG8gZmluZCBhbiBvbGRlciBnYW1lIG9uIHRoZSBlIHNob3A/CklmIHlvdSBuZXZlciBjb250ZW1wbGF0ZSBqYXl3YWxraW5nIHRoYXQgeW91ciBjYWxsIHRvbyAoaWYgeW91IGRvbiBnbGFyZSBhdCBtZSkuLiAKU3RlcCA1IERyYXcgbW9yZSBjYXJkcy4gT25jZSB5b3UgaGF2ZSBsYWlkIHlvdXIgaGFuZCwgZHJhdyB0aHJlZSBtb3JlIGNhcmRzIHRvIHJlcGxlbmlzaCB5b3VyIHN0b2NrLiAKV2hhdCB5b3UgdGhpbmsgaXMgZ29vZCBhYm91dCBiZWluZyBib3JuIG1pZ2h0IGJlIHV0dGVybHkgbWVhbmluZ2xlc3MgdG8gc3VjaCBhIHBlcnNvbi4gClRoZSBDb2NhIENvbGEgdGVhbSBob3BlZCBpdCB3b3VsZCBiZSAibG92ZSBhdCBmaXJzdCBzaXAiLiBUaGV5IGFsbW9zdCBjZXJ0YWlubHkgZGlkIG5vdCB0aGluayB3ZSB3b3VsZCB3YWxrIGF3YXkgZnJvbSBhIG11bHRpYmlsbGlvbiBkb2xsYXIgcGF5ZGF5LCBwYXJ0aWN1bGFybHkgc2luY2UgdGhleSBoYWQganVzdCBzcGVudCBhcm91bmQgc2l4IG1vbnRocyBkZXZlbG9waW5nIGEgMTAgeWVhciBidXNpbmVzcyBwbGFuIGZvciBvdXIgZnV0dXJlICJqb2ludCIgb3BlcmF0aW9ucy4gCkFuZCB0aGVzZSB0aGluZ3Mgb2Z0ZW4gZG8gdGFrZSB5ZWFycywgc28gaXQncyBoYXJkIHRvIGtub3cgd2hhdCB3aWxsIGVtZXJnZS4uIApJIGluY3JlYXNlIHRoZSBlZmZlY3RpdmVuZXNzIG9mIHlvdXIgdWx0IGJ5IHRlbGxpbmcgcGVvcGxlIHlvdSBsb29raW5nIGZvciBncmF2ICh3aGljaCB5b3UgZG8pIGFuZCB0aGVuIHRlbGwgcGVvcGxlIHlvdXIgZ3JhdmluZyBhcyBzb29uIGFzIHlvdSBrbm93IHlvdXIgYWJvdXQgdG8gZG8gaXQgKHdoaWNoIHlvdSBkb24gVGhpbmsgb2YgdGhlIHBocmFzZSAiIE9uIHlvdXIgbWFyaywgZ2V0IHNldC4gR28hIiBZb3UgYXJlIG1pc3NpbmcgdGhlICJHbyEiIHBhcnQgb2YgeW91ciBjYWxsb3V0IGZvciBncmF2LiBUaGlzIHdpbGwgYWxsb3cgYSBiaXQgbW9yZSBkYW1hZ2UgYW5kIG1heSBtYWtlIGFuIGV2ZW4gYmlnZ2VyIGltcGFjdCBvbiB0aGUgZmlnaHQuIApNYXVyaWNlIExpZ2h0bmVyIGFuZCBkYXVnaCAgdGVycywgTWFkYWxlbmUgYW5kIFJ1dGgsIHNwZW50IGFuIGV2ZW5pbmcgbGFzdCB3ZWVrIGF0IHRoZSBob21lIG9mIE1ycy4gClNoZSBpcyBhbHNvIGEgZnVsbHkgY2VydGlmaWVkIFNvbWF0aWMgTW92ZW1lbnQgQ29hY2ggYW5kIEhvdCBTdG9uZSAgVGhlcmFwaXN0LiBTb25pYSB3b3JrZWQsIHN0dWRpZWQgYW5kIHNoYXJlZCBoZXIgZXhwZXJpZW5jZSB3aXRoIHZhcmlvdXMgdGVhY2hlcnMgYW5kIHRoZXJhcGlzdCBmcm9tIFVLLCBVU0EsIEhvbGxhbmQsIEluZGlhIGFuZCBOZXcgWmVhbGFuZC4gU2hlIGhhcyB3b3JrZWQgd2l0aCBOSFMgY2xpZW50cyBhbmQgY29tbXVuaXR5IHByb2plY3RzIGJlbmVmaWNpYXJpZXMuIFNvbWUgb2Ygd2hvbSB3aXRoIHNldmVyZSBoZWFsdGggcHJvYmxlbXMuIApUaGUgV1BUIHJlbnRzIHRoZSBjb25mZXJlbmNlIGFyZWEgdy9mb29kLCBicmluZ3MgdGhlIHRhYmxlcywgY2hpcHMsIGNhcmRzLCBkZWFsZXJzLCBzd2FnLCB0YWxlbnQsIGluc3RydWN0b3JzLCBldGMsIHNvIHRoZXJlIGlzIHNvbWUgZXh0cmEgY29zdC4gClN3ZWV0LCBJIGhpdCBteSBmbHVzaCwgYnV0IEkgd2FzIGxvb2tpbmcgYXQgdGhlIGZsb3AgdGhpbmtpbmcgImZ1Y2ssIGhlIGdvdCBhIGJvYXQgb3IgYW4gQSBoaWdoIGZsdXNoLiBJIGZ1Y2tlZCIuIApDcmF6eSBpbnRlbnNlIHBhaW4uIApKdXN0IHRoYXQgbW9yZSBkZXZlbG9wbWVudCB0aW1lIGRvZXNuIGFsd2F5cyBtZWFuIGEgYmV0dGVyIGdhbWUsIGFzIEJpb3dhcmUgaGFzIHByb3ZlZCB3aXRoIGl0IGxhc3QgMiBwcm9qZWN0cy4gClRoZSBjZW50cmFsIGNvbmNlaXQgb2YgdGhpcyBzZXJpZXMgaXMgc29ydCBvZiB0aGUgb3Bwb3NpdGUgb2Ygb2xkIHNjaG9vbCBnZW9jZW50cmlzbTsgZWFjaCBpbnRlbGxpZ2VudCBzcGVjaWVzLCBvZiB3aGljaCB0aGVyZSBhcmUgbWFueSwgZ2V0cyBpdHMgb3duIChzaW1pbGFyKSBwYXRoIHdpdGggR29kIGFuZCBvcHBvcnR1bml0eSB0byBmYWxsLCBidXQgbW9zdCBkb24gRiBpdCB1cCBsaWtlIGh1bWFucyBkaWQuIEluIHRoZSBmaXJzdCBib29rLCB3ZSBtZWV0IGFsaWVucyB3aG8gbWFkZSBpdCBwcmV0dHkgZmFyIGRvd24gdGhhdCBwYXRoIGFuZCBoYXZlbiBtZXNzZWQgaXQgdXAgKHRoZXkgYXJlIHN0aWxsICJpbiIgdGhlaXIgRWRlbiBlc3NlbnRpYWxseSkuIEluIHRoZSBzZWNvbmQgYm9vaywgd2UgbWVldCBhIHlvdW5nIHNwZWNpZXMgYmVpbmcgZ2l2ZW4gdGhlIG9wcG9ydHVuaXR5IHRvIG1lc3MgdXAgdGhlaXIgRWRlbiBvciBub3QuCklmIHlvdSd2ZSBiZWVuIGJldHRpbmcgb24gIkV2ZW4iIGluIHJvdWxldHRlIGFuZCBvZGQgbnVtYmVycyBoYXZlIHNob3duIHVwIHRlbiB0aW1lcyBpbiBhIHJvdywgdGhlIG5leHQgc3BpbiBpcyBubyBtb3JlIG9yIGxlc3MgbGlrZWx5IHRvIGJlIGFuIGV2ZW4gbnVtYmVyIHRoYW4gYW55IG90aGVyIHNwaW4uIApJbmRlcGVuZGVudCBMb25nIEJlYWNoIE5ld3NwYXBlciBBcmNoaXZlcwpJbiBhbGwgc2VyaW91c25lc3MgdGhvdWdoLCBpbnZlc3RpbmcgbW9yZSB0aW1lIGludG8gYSBnYW1lIGxvbmcgdGVybSB3b3VsZCB5aWVsZCBtb3JlIG1vbmV5IGluIHRoZSBlbmQsIGFuZCBmb3IgdXMgb24gdGhlIGNvbnN1bWVyIHNpZGUgaXQgbWFrZXMgbXVjaCBtb3JlICJvYnZpb3VzIHNlbnNlLiIgRnJvbSB0aGUgVklQIHBlcnNwZWN0aXZlLCBpdCBtYWtlcyBtb3JlIHNlbnNlIHRvIGhhdmUgcXVpY2tlciB0dXJub3ZlciB0byB5aWVsZCBoaWdoIHByb2ZpdHMgc29vbmVyLiBDb2luY2lkZW50YWxseSBpdCBtYWtlcyBpbnZlc3RvcnMgbXVjaCBoYXBwaWVyIHRvIHNlZSBhIHJldHVybiBzb29uZXIgcmF0aGVyIHRoYW4gbGF0ZXIuIApUaGF0IHdheSB5b3UgZ2V0IHRvIHRoZSAxIGEgbW9udGggbWFpbnRlbmFuY2Ugem9uZSBxdWlja2VyLCBhbmQgeW91IGZlZWwgYmV0dGVyIGFsbCB0aGUgdGltZSBpbnN0ZWFkIG9mIGp1c3QgZm9yIHRoZSBkYXkgb3IgMiBhZnRlciB5b3VyIG1hc3NhZ2UuLiAKU3RhZmYgbWF5IHB1cmNoYXNlIHRvcCB1cCBjb3ZlciB0byByZW1haW4gY292ZXJlZCB1bmRlciB0aGUgcG9saWN5IGZvciB0cmF2ZWwgdGhhdCBleGNlZWRzIHRoZXNlIGxpbWl0cy5TdGFmZiB0cmF2ZWxsaW5nIGZvciBwZXJpb2RzIGdyZWF0ZXIgdGhhbiAxMiBtb250aHNTdGFmZiB0cmF2ZWxsaW5nLCBzdHVkeWluZyBhbmQgd29ya2luZyBvdmVyc2VhcyAoIGZvciBtb3JlIHRoYW4gMTIgbW9udGhzIG11c3QgYXBwbHkgZm9yIHNwZWNpYWwgY2lyY3Vtc3RhbmNlcyBpbnN1cmFuY2UgYmVmb3JlIHRoZXkgbGVhdmUgQXVzdHJhbGlhLiAKSSBhbSBub3QgbmV3IHRvIHRoaXMgICBJIGhhdmUgcmV1c2FibGUgcGFkcyBhbmQgdGhleSBnbyBmaW5lIGluIHRoZSB3YXNoIGluIGEgbGluZ2VyaWUgYmFnIG9uIGRlbGljYXRlLiAKRXhwZXJpZW5jZWQgYWxsIG1hbm5lciBvZiBhYnVzZSB3aGVuIGhlciBmYXRoZXIgZGlkIHNob3cgdXAuIFNoZSBzaG93cyB0aGUgc2NhcnMgdG8gcHJvdmUgaXQud2FzIGJlYXQgdXAgZXZlcnkgZGF5IGhlIHdhcyBhcm91bmQsIGJlY2F1c2UgaGUgYmxhbWVkIG1lIG1vc3QgZm9yIG91ciB0cm91Ymxlcy4gCkFuZCB5b3UgZG9uICJsaXN0ZW4gdG8gZXhwZXJ0cyIgb3IgImxvb2sgZm9yIHRoZSBjcmVkZW50aWFsIiBvciBwb2ludCB0byBob3cgcG9wdWxhciBhbiBpZGVhIGlzICAgeW91IGxvb2sgYXQgdGhlIGRhdGEgdGhleSBwcmVzZW50IGFuZCB5b3UgZmlndXJlIG91dCBpZiBpdCBoYXMgcHJlZGljdGl2ZSB2YWxpZGl0eSwgdHJhbnNwYXJlbnQgbWV0aG9kcywgc2lnbmlmaWNhbnQgc2FtcGxlIHNpemVzLCBldGMuIApBaCwgaGFzIHRoZSB3b3JsZCBjaGFuZ2VkIHNpbmNlIHRoZW4uIERvbiBnZXQgbWUgd3JvbmcuIFJpY2ggZ290IGV2ZW4gcmljaGVyIGluIDIwMDksIHRoZSByZXN0IG9mIHVzIGFyZSB3b3JzZSBvZmYgdGhhbiBldmVyLCBidXQgdGhlIGlkZWEgdGhhdCB0aGVyZSBtaWdodCBiZSBhIHBvc3NpYmlsaXR5IG9mIHVuaXRpbmcgYXJvdW5kIG91ciBjb21tb24gY2xhc3MgaW50ZXJlc3RzIGFuZCB0YWtpbmcgb3VyIGNvdW50cnkgYmFjayBmcm9tIHRoZSByb2JiZXIgYmFyb25zIHdobyBoYXZlIGJlZW4gcnVubmluZyBpdCBzZWVtcyBzbyBjb21wbGV0ZWx5IGRpc2Nvbm5lY3RlZCBmcm9tIHJlYWxpdHkgdGhhdCBJIHdhbnQgdG8gdHJhdmVsIGJhY2sgaW4gdGltZSB0d28geWVhcnMgYW5kIHRocm93IGEgYnVja2V0IG9mIGljZSB3YXRlciBpbnRvIG15IHN0dXBpZGx5IG9wdGltaXN0aWMgZmFjZUlmIEkgaGFkIGJlZW4gc2hvY2tlZCBpbnRvIHJlYWxpdHkgd2l0aCBhIGZhY2VmdWwgb2Ygd2F0ZXIsIHBlcmhhcHMgSSB3b3VsZCBoYXZlIHByZWRpY3RlZCB0aGUgc3VjY2VzcyB3aXRoIHdoaWNoIHdoaXRlIHJlc2VudG1lbnQgd291bGQgYmUgbW9iaWxpemVkIGluIGdyb3VwcyBsaWtlIHRoZSBUZWEgUGFydHkuIApOb3cgaGVyZSB0aGUgdWdseSBwYXJ0IHRob3VnaCwgYW55IGZsdXNoIGlzIGdvaW5nIHRvIGJldCwgYW5kIGFsbCB0aGUgZnVsbCBob3VzZXMgYXJlIGdvaW5nIHRvIGJldCAoSkosIDg4LCBBSiwgQTgpIGFuZCB0aGUgb25seSAycCB0aGF0IGdvdCBjb3VudGVyZmVpdGVkIGlzIHByb2JhYmx5IGdvaW5nIHRvIGdpdmUgdXAgKEo4KS4gQUsgYW5kIEFRIHdpbGwgcHJvYmFibHkgYmUgYmV0dGluZyBoZXJlIGFzIHdlbGwuIFRoYXQgbWVhbnMgd2UgbG9zaW5nIHRvIGEgbG90IG9mIGhhbmRzIChmdWxsIGhvdXNlcyBhbmQgZmx1c2hlcyksIGNob3BwaW5nIHdpdGggb25lIChBSyksIGJlYXRpbmcganVzdCBhIGNvdXBsZSAoQVEgYW5kIHZlcnkgYWdncmVzc2l2ZSBibHVmZnMpLi4gCkFzIGEgdGhpbmtpbmcgYmVpbmcgYWJsZSB0byBjb25jZWl2ZSBvZiBtYXR0ZXJzIGJleW9uZCB5b3VyIG93biBib2R5LCB0YWtlIGEgc3RlcCBiYWNrIGZvciBhIG1vbWVudCBhbmQgbG9vayBkb3duIG9uIHlvdXJzZWxmIGluIGEgY3Jvd2Qgb2YgcGVvcGxlIGFuZCBzZWUgdGhpbmdzIGZvciB3aGF0IHRoZXkgcmVhbGx5IGFyZS4gClNlY29uZGx5IHRoZSBzaXR1YXRpb24gd2hlcmUgeW91IGRpZSBvbmNlIGluIGdhbWUgYW5kIGxvc2UgdGhlIGdhbWUgb3V0IG9mIGl0IGFyZSBpbmNyZWRpYmx5IHNtYWxsLiBJIGhvbmVzdGx5IGNhbiB0aGluayBvZiBpdCBldmVyIGhhcHBlbmluZyB0byBtZSBvciBldmVuIGV2ZXIgaGFwcGVuaW5nIGluIHBybyBwbGF5LiBOb3RhYmxlIGV4Y2VwdGlvbiB1c2VkIHRvIGJlIGVhcmx5IGdhbWUgaW52YWRlcyB0aGF0IGNvdWxkIGhvbmVzdGx5IGRlY2lkZSB0aGUgZ2FtZSBhdCBsZXZlbCAxIGJ1dCB0aG9zZSBnb3QgbmVyZmVkIGFnZXMgYWdvLi4gCkhlIG1heSBhbHNvIGJlIHdyaXRpbmcgc2NhdGhpbmcgaW52ZXN0aWdhdGl2ZSBhcnRpY2xlcyBhYm91dCBoaXMgb3duIGFudGljcyB1bmRlciBhIHBlbiBuYW1lLiAKSWYgeW91IHdhbnQgdG8gcGxheSBmcmVlIHBva2VyIG9ubGluZSwgdGhlbiBzZWxlY3QgdGhlIHJpZ2h0IG5vIGRlcG9zaXQgYm9udXMgcG9rZXIgc2l0ZXMgd2hlcmUgeW91IGNhbiBzaWduIHVwIGZvciBmcmVlIGFuZCBuZWVkIG5vdCBtYWtlIGFueSBjYXNoIGRlcG9zaXQgdG8gc3RhcnQgdGhlIGdhbWUuIApUcnVtcCBsaXRlcmFsbHkgd29uIHRlbGwgdXMgYW5kIHNvbWVob3cgd2UgYXJlIGFsbCBva2F5IHdpdGggdGhhdD8uIApSZWFzb25hYmxlIGRvdWJ0IGlzIHZlcnkgaGFyZCB0byBhY2hpZXZlIHdpdGhvdXQgaGFyZCwgYmxhY2sgYW5kIHdoaXRlIGV2aWRlbmNlLi4gCkkgdGhpbmsgZmFtaWxpZXMgbmVlZCB0byBzdGF5IGNvbm5lY3RlZCB3aXRoIGR5aW5nIGZyaWVuZHMgYW5kIHJlbGF0aXZlcyBhbmQgaGVscCB0aGVtIHRocm91Z2ggdGhlIHByb2Nlc3MuIEkgaGVscGVkIG15IG1vdGhlciBieSB0YWxraW5nIHRvIGhvc3BpdGFsIHN0YWZmIGFuZCBzcGVuZGluZyB0aW1lIHdpdGggaGVyLiBTaGUgd2FzIG5ldmVyIGRpc3RyYWN0ZWQgYnkgdHJ5aW5nIHRvIGZpbmQgYSBub24gZXhpc3RlbnQgY3VyZSBvciBhbnl0aGluZy4gCk1jQ295LCBEb25hbGQgUnlhbiwgTGF3cmVuY2UgQ2FubmlmZiwgUm9nZXIgS3VlaG5lLCBFbGxpcyBDcm9zcywgS2FybCBQZWFyc29uLCBEYWxlIEF1c3RpbiwgVmVybGFuZCBIdWZmYXIsIFJvYiAnIGVydCBNY0tpbm5leSwgUGF1bGluZSBNY0dhcnZpZSwgRW1lcnkgTmVsc29uLCBQaGlsaXAgRmVybiByaXRlLCBHZXJhbGQgSG9sbWVzLCBIYXJvbGQgQmFVLCBSb2dlciBCcnlkZW4uIApCZWkgTmFtZSBkZXIgUm9zZSBsZXJuc3QgYXVjaCBub2NoIHdhcyBiZXIgbWl0dGVsYXRlcmxpY2hlIFJlbGlnaW9uc3BoaWxvc29waGllLCBkaWUgR2VzY2hpY2h0ZSBkZXIga2F0aG9saXNjaGVuIEtpcmNoZSB1bmQgZGFzIE1uY2hzbGViZW4gaW0gQWxsZ2VtZWluZW4uClRoZSBmaW5hbGUgIkJhZCBSb21hbmNlIiB3YXMgYSBjcm93ZCBwbGVhc2VyLiBHYWdhLCB3aG8gaGFkIHNwZW50IG11Y2ggb2YgdGhlIGV2ZW5pbmcgaW4gYSBtZXRhbGxpYyBzcGFjZSBzdWl0LCBlbWVyZ2VkIGluIGhlciB0aGlyZCBvdXRmaXQgb2YgdGhlIHBlcmZvcm1hbmNlLCBhIG1pZHJpZmYgYmFyaW5nIGNvc3R1bWUgdG9wcGVkIG9mZiBieSBmb290YmFsbCBsaWtlIHNob3VsZGVyIHBhZHMuIAoiTm93IHdlIGhhdmUgcHJvdmVuIHRoZSBhYmlsaXR5IG9mIEFJIHRvIGRvIHN0cmF0ZWd5IGFuZCByZWFzb25pbmcsIHRoZXJlIGFyZSBtYW55IHBvdGVudGlhbCBhcHBsaWNhdGlvbnMgaW4gZnV0dXJlLCIgU2FuZGhvbG0gd2FzIHF1b3RlZCBhcyBzYXlpbmcgYnkgJ0JCQyBOZXdzJy4KU28sIHJlYWxseSwgaXQncyBubyBzdXJwcmlzZSB0aGF0IHRoZXJlIGFyZSBhaXJwb3J0IHRoZW1lZCBjb25zcGlyYWN5IHRoZW9yaWVzLiAKQnV0IGluc3VyYW5jZSBjb21wYW5pZXMgYWxzbyBoYXZlIGRpc2NvdW50cyB0aGF0IGFyZSBjYWxsZWQgVUNSICh1c3VhbCBjdXN0b21hcnkgYW5kIHJlYXNvbmFibGUuKSBXaGF0IHRoaXMgbWVhbnMgYmFzaWNhbGx5IGlzIHRoZSBpbnN1cmFuY2UgY29tcGFueSB3aWxsIG5vdCBsb3QgYSBwaGFybWFjeSBjaGFyZ2Ugb3ZlciBYIGFtb3VudCBmb3IgYSBjZXJ0YWluIHByZXNjcmlwdGlvbi4gCkp1c3QgZW5vdWdoIHRvIGdldCB0aGUgaGVhcnQgcHVtcGluZyBhIGJpdC4gClNlbGYgcG9zdHMgYXJlIG5vdyByZXNlcnZlZCBmb3IgZGlzY3Vzc2lvbnMsIHNvbmcgaWRlbnRpZmljYXRpb24sIGFuZCBnZW5lcmFsIHRob3VnaHRzIG9uIGFuaW1lIG11c2ljLiAoZWcuIFdoYXQgZG8geW91IHRoaW5rIEhpcm95dWtpIFNhd2FubyBncmVhdGVzdCB3b3JrcyBhcmU/IC8gQmVzdCBzb25ncyBmcm9tIE1hZG9rYSBNYWdpY2E/KQpPbiBuIHF1IGQgZCBwcm9qZXQgcXVpIGEgZGUgZ3JhbmRlcyBhbWJpdGlvbnMuIApUbyBzY29yZSB0aGUgbG93ZXN0IG51bWJlciBvZiBwb2ludHMgYnkgZmluaXNoaW5nIGVhY2ggaGFuZCB3aXRoIGFzIG1hbnkgcGFpcnMgYW5kIGxvdyBzY29yaW5nIGNhcmRzIGFzIHBvc3NpYmxlLgpUb3JkYW5hIHUKQSBmdWxsIGJvZHkgbWFzc2FnZSB3b3VsZCBpbmNsdWRlIGhpbSByZXBlYXRpbmcgdGhpcyBvbiBlYWNoIG9mIGhlciBqb2ludHMuIApNb3N0IGRvdCBjb20gYnVzaW5lc3NlcyBmYWlsZWQgYmVjYXVzZSB0aGV5IGRpZG4ndCBmaWxsIGEgY2xlYXJseSBkZWZpbmVkIG5lZWQuIEEgbmV3IHByb2R1Y3QsIG5ldyB0ZWNobm9sb2d5LCBuZXcgaWRlYXMgZm9yIGRvaW5nIGJ1c2luZXNzICAgdGhlc2UgZG9uJ3QgbWF0dGVyIHVubGVzcyB5b3UgY2FuIGRlbW9uc3RyYXRlIGEgbmVlZCB0aGF0IGlzIGdldHRpbmcgbWV0IGJ5IHRoZXNlIHByb2R1Y3RzLCB0ZWNobm9sb2d5IGFuZCBpZGVhcy4gCkR1cmluZyB0aGUgc3VtbWVyIGhvbGlkYXlzIEkgc3RheWVkIHdpdGggYSBmcmllbmQgb2YgbWluZS4gCkxhc3Qgd2VlaywgR2VybWFuIHN1cHBsaWVyIFJvYmVydCBCb3NjaCBHbWJIIGFubm91bmNlZCBwbGFucyB0byBsYXVuY2ggcHJvZHVjdGlvbiBvZiBhbiBvbmJvYXJkIGNvbXB1dGVyIHdpdGggYW4gZW1iZWRkZWQgTnZpZGlhIGNoaXAgImF0IHRoZSBiZWdpbm5pbmcgb2YgdGhlIG5leHQgZGVjYWRlIGF0IHRoZSBsYXRlc3QuIgpWNCAwIFNSMiBLRVlHRU4gVCBTcGxpbmVzIFtWR0NFVFJdIFNreXBlIDUuMy4wLjExNiAoQ3JhY2sgKyBTZXJpYWwpLiAxIE1hciAyMDEzICAgNSBtaW4yIFRoZW4geW91IG5lZWQgdG8gYWN0aXZhdGUgdGhlbSB0byBmdWxsIHZlcnNpb24gc28geW91IG5lZWQgdG8gZG93bmxvYWQgY3JhY2sgc2VyaWFsIG9yIC4gMzUyNjMgcmVjb3JkcyAuIApJbiBmYWN0LCBib3RoIHNldHMgb2YgY29tcGFuaWVzIGhhZCBhYm91dCB0aGUgc2FtZSBhbW91bnQgb2YgYm90aCBnb29kIGFuZCBiYWQgbHVjay4gVGhlIHN1Y2Nlc3NmdWwgY29tcGFuaWVzIHNpbXBseSBoYWQgYSBiZXR0ZXIgb24gbHVjay4gSW4gb3RoZXIgd29yZHMsIHRoZSBiZXR0ZXIgY29tcGFuaWVzc2ltcGx5IHBlcmZvcm1lZCBiZXR0ZXIgYmVjYXVzZSB0aGV5IHdlcmUsIG9uIGF2ZXJhZ2UsIGJldHRlci4uIApBcyBwbGF5ZWQsIGZsb3AgY2hlY2sgYmFjayBpcyBmaW5lIHRvIGtlZXAgdGhlIHBvdCBzbWFsbGVyIGFuZCBwb3NzaWJseSBpbmR1Y2Ugd29yc2UgaGFuZHMgdG8gYmV0IHR1cm4uIFR1cm4sIHdoeSBhcmUgeW91IGphbW1pbmc/IEp1c3QgY2FsbCBkb3duIGFsbCB0aGUgd2F5LiBZb3UgYXJlIGVpdGhlciB3YXkgYWhlYWQgb3Igd2F5IGJlaGluZCB3aXRoIGhpcyBmbG9wIGNoZWNrLiAKSXQgdGltZSBmb3IgaGlnaGVyIGVkIHRvIGdldCBiYWNrIHRvIGJhc2ljcy4gcmVxdWlyZXMgc3R1ZGVudHMgYW5kIHByb2Zlc3NvcnMgYW5kIHJlYXNvbmFibHkgZXF1aXBwZWQgY2xhc3Nyb29tcywgZG9ybSByb29tcywgZGluaW5nIGhhbGxzLCBiYXNpYyBzdXBwb3J0IHN0YWZmIGFuZCBtZWRpY2FsIHNlcnZpY2VzLiBkbyBub3QgbmVlZCB1cHBlciBtYW5hZ2VtZW50IG1ha2luZyBoYWxmIGEgbWlsbGlvbiBkb2xsYXJzIGEgeWVhciBvciBhIHF1YXJ0ZXIgb2YgYSBtaWxsaW9uIGRvbGxhcnMgYSB5ZWFyIG9yIHdoYXRldmVyIHJpZGljdWxvdXMgc2FsYXJpZXMgdGhleSBtYWtlLiBkbyBub3QgbmVlZCBzdXBlcnN0YXIgYWNhZGVtaWNzIHdobyBtYWtlIHNpbWlsYXIgYW1vdW50cy4gd2FudCBhIGdvb2QgZWR1Y2F0aW9uIGZyb20gcHJvZmVzc29ycyB3aG8gY2FyZSBhYm91dCB0aGVtLCBub3QgcGVvcGxlIHdobyBhcmUgaW4gdGhlIG5ld3MuIHdhbnQgYSBsaXZhYmxlIHdhZ2UgYW5kIGpvYiBzZWN1cml0eSBhbmQgYmVuZWZpdHMuCkkgbm93IGxpdmUgdGhvdXNhbmRzIG9mIG1pbGVzIGF3YXkgZnJvbSBoZXIgYW5kIGxlYWQgYSB2ZXJ5IGhhcHB5IGxpZmUuIApIaXMgbWluZCBpcyBubyBkb3VidCBzdGlsbCBsb2RnZWQgZmlybWx5IGluIHRoZSAxOTcwcyBhbmQgMTk4MHMgYW5kLCBzaW5jZSBoZSBoYXMgYWxtb3N0IGNlcnRhaW5seSBzcGVudCBtb3N0IG9mIHRoZSB0aW1lIGZyb20gdGhlbiB1bnRpbCBub3cgaW5lYnJpYXRlZCBhbmQgbG9ja2VkIGF3YXkgaW4gcHJpdmF0ZSBnYXRoZXJpbmdzIHdpdGggb3RoZXIgcmljaCBvbGQgbWVuIGFuZCB0aGVpciBoaXJlZCBzeWNvcGhhbnRzLCB0aGUgc29jaWFsIGFuZCBsaWZlc3R5bGUgY2hhbmdlcyBpbiBKYXBhbiBoYXZlIGdvbmUgY29tcGxldGVseSBvdmVyIGhpcyBoZWFkLiBBbGwgaGUga25vd3MgaXMgdGhhdCB0aGVyZSBleGlzdCBzb21lIHByb2JsZW1zLCBhbmQgdGhhdCB0aGVyZSBhbHNvIGV4aXN0IHBlb3BsZSB5b3VuZ2VyIGFuZCBwb29yZXIgdGhhbiBoaW0uIEEgbGl0dGxlIHNpbXBsZSBtZW50YWwgYXJpdGhtZXRpYyBpcyBhbGwgaXQgdGFrZXMgZm9yIGhpbSB0byBiZSBkZWNsYXJpbmcgdGhlIHlvdXRoIG9mIEphcGFuIHRoZSBzb2xlIGNhdXNlIG9mIHRoZSBlbnRpcmUgbmF0aW9uIGlzc3Vlcy4KSGUgMTAwJSBjYXJyaWVkIHRoYXQgT2tsYWhvbWEgdGVhbS4gVGhhdCB0ZWFtIHJvc2UgYW5kIGZlbGwgd2l0aCBoaW0sIGhlIGhhZCBvbmUgb2YgdGhlIGhpZ2hlc3QgdXNhZ2UgcmF0ZXMgYW5kIG1vc3QgImxpdmUgb3IgZGllIiBwbGF5c3R5bGVzIEkgZXZlciBzZWVuIGluIHRoZSBjb2xsZWdlIGdhbWUuIApZZXAsIHRob3NlIEJyb3duIFJlY2x1c2UuIFRoZSBvbmVzIHRoYXQgY2FuIGNhdXNlIG5lY3JvdGljIGZsZXNoIChsaXRlcmFsbHkgc2tpbiByb3R0aW5nIHNvcmVzKS4gClJpZ2h0bHkgb3Igd3JvbmdseSwgb3VyIHNvY2lldHkgdGVsbHMgYm95cyB0aGV5IE1VU1QgTk9UIG9wZW5seSBkaXNjdXNzIHRoZWlyIGVtb3Rpb25zLCB0aGF0IGFuZ2VyIGFuZCBhZ2dyZXNzaW9uIGFyZSB0aGUgb25seSBhcHByb3ByaWF0ZSBlbW90aW9uYWwgb3V0bGV0cyBmb3IgdGhlbS4gWW91IHNheSBoZSBkb2Vzbid0IHNlZW0gYm90aGVyZWQsIGJ1dCBpbiB0aGUgc2FtZSBicmVhdGggeW91IHNheSB5b3UgZG9uJ3QgdGFsayBtdWNoICAgRklYIFRISVMgSU1NRURJQVRFTFkuIApPbmUgb2YgbXkgcGxheWVycyBpbiBhIGNhbXBhaWduIEkgcmFuIHllYXJzIGFnbyBwbGF5ZWQgYSBGcmVuemllZCBCZXJzZXJrZXIgd2hvc2UgcHJlZmVycmVkIHdlYXBvbiB3YXMgYSBodWdlIHNwaWtlZCBjYWJlci4gClBsYXkgd2l0aCBmaXZlIGNvaW5zLiAKVGhlIGd1eSB3aG8gcHJvZHVjZWQgdGhlIGRhdGEgY2F1dGlvbmVkIHRoYXQgaWYgdGhlIHdhdGVyIGluIHRoZSBzd2FtcCBpcyBzbGlnaHRseSBhY2lkaWMgYW5kIGdpdmVuIHRoYXQgdGhlIHNvaWwgaW4gdGhlIGFyZWEgaGFzIG5vdCBqdXN0IGdvbGQgb3JlLCBidXQgZm9vbCBnb2xkIGFuZCBpcm9uIG9yZSwgdGhlc2UgImhvdCBzcG90cyIgY291bGQgYmUgcGhhbnRvbSBoaXRzLgpEbyBjZWxsdWxpdGUgdHJlYXRtZW50cyB3b3JrClRoZXkgYXJlIGVpdGhlciB0b28gbG9uZywgdG9vIHNtYWxsIG9yIGhhdmUgc29tZWhvdyBiZWVuIGRhbWFnZWQgZHVyaW5nIGNvbnN0cnVjdGlvbi4gCkVuam95ZWQgaXQgcXVpdGUgYSBiaXQuIEkgYWJzb2x1dGVseSBsb3ZlIGhlciBhbGJ1bSAiQmxhY2tzIGFuZCBCbHVlcyIgYW5kIHdoaWxlIHRoaXMgZ29lcyBhIGJpdCB0b28gY2hlZXJ5LCBjdXRlc3kgYW5kIGxpZ2h0IGhlYXJ0ZWQgdG8gbWF0Y2ggdGhlIHN0cm9uZyB1cmJhbiAoYmVzdCBkZXNjcmlwdGlvbiBJIGdvdCkgZmxhdm9yIG9mIEJhQiwgSSBzdGlsbCBsaWtlZCBpdHMgc2lsa3kgZ3Jvb3Zlcy4gSXQgd2FzIGhlciBsYXN0IGFsYnVtIHdpdGggQmx1ZSBOb3RlIGFuZCB0aGUgTWl6ZWxsIEJyb3RoZXJzLCB3aG8gaW1idWVkIGl0IHdpdGggdGhlaXIgdHJhZGVtYXJrIHNvdW5kLCBzbyBJIGFscmVhZHkgZXhwZWN0IGhlciBjaHJvbm9sb2dpY2FsbHkgbmV4dCBhbGJ1bSB0byBzb3VuZCBxdWl0ZSBkaWZmZXJlbnQuIE9mIGNvdXJzZSwgYmUgYXdhcmUgdGhhdCBJIHRhbGtpbmcgYWJvdXQgamF6eiBmdW5rIGhlcmUgdGhhdCBmYWxscyBtb3JlIG9uIHRoZSBjaGVlc3kgdGhhbiB0aGUgY3JhenkgdGVjaG5pY2FsIHNpZGUuCkFuZCB0byBmb3Jlc3RhbGwgdGhlIGFyZ3VtZW50IHRoYXQgUENzIHVzZXJzIGNhbiBhdHRhY2ggYSBjb250cm9sbGVyLCByZW1lbWJlciB0aGF0IGNvbnNvbGUgcGxheWVycyBjYW4gaW5zdGFsbCBhIGtleWJvYXJkIGFuZCBtb3VzZS4gQXQgd2hpY2ggcG9pbnQsIHdoYXQgd2FzIHRoZSBwYXJ0IHRoYXQgbWFkZSB5b3UgaGFyZGNvcmUgYWdhaW4/IDEwODBQPwogMTcgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnb0kgZG9uIHVuZGVyc3RhbmQgd2h5IHNvbWUgUmVkc2tpbnMgZmFucyBoYXRlIENvdXNpbnMuIEhlIGNhcnJpZWQgb3VyIHNvcnJ5IGZyYW5jaGlzZSBmb3IgMyBzZWFzb25zLCBvdXIgaW5lcHQgZnJvbnQgb2ZmaWNlIGNvdWxkbiBsb2NrIGhpbSB1cCwgYW5kIGFwcGFyZW50bHkgdGhhdCBtZWFucyBpdCBhbGwgQ291c2lucyBmYXVsdC5JIGFsd2F5cyBiZSBhIENvdXNpbnMgZmFuLiBJIHdhcyByaWRlIG9yIGRpZSB3aXRoIGhpbSB3aGlsZSBoZSB3YXMgaGVyZSAoSSBwcmFjdGljYWxseSB3b3JzaGlwZWQgaGltKSwgYW5kIEkgY2hlZXIgaGltIG9uIGluIE1pbm5lc290YSBhcyBsb25nIGFzIGl0IGRvZXNuIGludm9sdmUgdXMuIApPbmUgcmVjZW50IHN0dWR5LCBwdWJsaXNoZWQgaW4gVGhlIE5ldyBFbmdsYW5kIEpvdXJuYWwgb2YgTWVkaWNpbmUsIGZvdW5kIHRoYXQgZHVyaW5nIHB1YmVydHkgICB3aGVuIGhvcm1vbmFsIGNoYW5nZXMgc3B1ciBib25lIGRldmVsb3BtZW50cyAgIHRoZSBib25lIGRlbnNpdHkgb2YgYmxhY2sgZ2lybHMgaW5jcmVhc2VzIHRocmVlIHRpbWVzIG1vcmUgdGhhbiB0aGF0IG9mIHdoaXRlIGdpcmxzLiBQdWJsaWMgSGVhbHRoIFNlcnZpY2UgY29uZHVjdGVkIGEgbmF0aW9uYWwgc3VydmV5IGluIDE5OTAsIGl0IGZvdW5kIHRoYXQgYmxhY2tzIGV4cGVyaWVuY2VkIDIwIHBlcmNlbnQgZmV3ZXIgZm9vdCBwcm9ibGVtcyBvdmVyYWxsIHRoYW4gd2hpdGVzLCBhbHRob3VnaCBibGFja3MgYXJlIG1vcmUgbGlrZWx5IHRvIHN1ZmZlciBmcm9tIGNvcm5zLCBjYWxsdXNlcywgYW5kIGZsYXQgZmVldC4KSGUgcmV0dXJuZWQgdG8gY29tcGV0ZSBvbiBXZWRuZXNkYXkgYnV0IGFmdGVyIGFsbW9zdCBmb3VyIGhvdXJzIG9mIHBsYXkgd2FzIGVsaW1pbmF0ZWQgYWZ0ZXIgYmV0dGluZyBiaWcgb24gdHdvIGNvbnNlY3V0aXZlIGxvc2luZyBoYW5kcy4KQnV0IHRoZXJlIGFyZSBhbHNvIG9sZGVyIG1hcHMgdGhhdCBzaG93IEF0bGFudGlzIGluIHRoZSBOVyBwYXJ0IG9mIEFmcmljYSByaWdodCBiZWxvdyB0aGUgQXRsYXMgTW91bnRhaW5zLiBOZWFyIHRoZXJlIGlzIGEgbmF0dXJhbCBmb3JtYXRpb24gY2FsbGVkIHRoZSBSaWNoYXQgc3RydWN0dXJlIG9yIHRoZSAiRXllIG9mIHRoZSBTYWhhcmEiLiAKQ2FuIHlvdSBpbWFnaW5lLCBXaWxsIFJvZ2VycywgV2lsZXkgUG9zdCwgSm9obiBEIFJvY2tlZmVsbGVyPyBBbGwgcGxheWVkIHBva2VyIGhlcmUuIFdpbGxpYW0gU2tlbGx5LiAKRWRpdDogd2hlbiBJIHdhcyBhIHN0dWRlbnQgWzIwMTYgMjAxN10sIEkgYXNrZWQgYWJvdXQgcHJpY2luZyBhdCBhIHZlcnkgbGFyZ2UgaG9zcGl0YWwgdGhhdCBJIHdhcyB0cmFpbmluZyBhdCBhbmQgaXQgd2VudCBzb21ldGhpbmcgbGlrZSB0aGlzOiBDVCBvZiB0aGUgYWJkb21lbiBwZWx2aXMgd2FzICQ0LDAwMCBhbmQgdGhlIGNvc3Qgb2YgMSB2aWFsIG9mIGNvbnRyYXN0IHdhcyAkNTAwIGFuZCB0aGUgcmFkaW9sb2dpc3QgZmVlIHdhcyBhbHNvICQ1MDAuIApBWzIwMTIgc3R1ZHkgYnkgU2hha3VuIGV0IGFsLl1sb29rZWQgYXQgdGVtcGVyYXR1cmUgY2hhbmdlcyAyMCwwMDAgeWVhcnMgYWdvICh0aGUgbGFzdCBnbGFjaWFsIGludGVyZ2xhY2lhbCB0cmFuc2l0aW9uKSBmcm9tIGFyb3VuZCB0aGUgd29ybGQgYW5kIGFkZGVkIG1vcmUgZGV0YWlsIHRvIG91ciB1bmRlcnN0YW5kaW5nIG9mIHRoZUNPMiB0ZW1wZXJhdHVyZSBjaGFuZ2UgcmVsYXRpb25zaGlwLiBUaGV5IGZvdW5kIHRoYXQ6ClVuZXhwZWN0ZWQsIG5vPyBJdCByZW1pbmRzIG1lIG9mIHNlZWluZyBhIGIrdyBlcGlzb2RlIG9mIExlYXZlIGl0IHRvIEJlYXZlciwgd2hlcmUgdGhlIEJlYXZlciBidXlzIGhpbXNlbGYgYSBzdWl0IGFuZCBoaXMgcGFyZW50cyBhcmUgY29tcGxldGVseSBkb25lIGluIGJ5IGl0cyBjb2xvciwgd2hpY2ggb2YgY291cnNlIG9uIHRoZSB0diBsb29rZWQgbGlrZSBwcmV0dHkgbXVjaCBldmVyeXRoaW5nIGVsc2UuIEZvdXIgbW9yZSwgaW5jbHVkaW5nIFBvc3RtYW4gU3BlY2lhbHR5IFNob3AsIDV0aCBBdmUsIE5ZQzouIApBbmQgdGJoIHRoZXJlIGFyZSBiYXJlbHkgbm8gb3RoZXIgdXNlcnMgcG9zdGluZyBPVSByZXBsYXlzIGhlcmUgYXQgdGhpcyBsZXZlbCBvbiB0aGUgbGFkZGVyLiBPbiBhIGdvb2Qgd2VlayB3ZSBtaWdodCBzZWUgMSBwb3N0LgpFdmVuIGlmIEZhY2Vib29rIGJlY2FtZSBhIHNvY2lhbCBtZWRpYSBtb25vcG9seSwgaXQgd291bGQgSEFWRSB0byBjb250aW51ZSB0byBiZSBpbm5vdmF0aXZlIGFuZCBjYXRlciB0byBpdHMgY3VzdG9tZXJzIHdpdGggZ29vZCBzZXJ2aWNlIGF0IGxvdyBwcmljZXMgc2luY2Ugb3RoZXJ3aXNlLCBhIG5ldyBjb21wZXRpdG9yIGZyb20gYmFzaWNhbGx5IGFueXdoZXJlICAgd2hldGhlciBpdCBhbm90aGVyIGVzdGFibGlzaGVkIHRlY2ggY29tcGFueSBsaWtlIEdvb2dsZSwgdHdvIGZvcm1lciBNaWNyb3NvZnQgZW1wbG95ZWVzLCBvciBzb21lIGNvbGxlZ2Uga2lkcyBpbiBhIGRvcm0uVGVsZWNvbXMgYXJlIGFuIGVudGlyZWx5IGRpZmZlcmVudCBtYXR0ZXIgZnJvbSBzb2Z0d2FyZSBjb21wYW5pZXMsIGFuZCBubyBvZmZlbnNlLCBidXQgSSBzaG91bGRuIHJlYWxseSBuZWVkIHRvIGV4cGxhaW4gd2h5LiAKVGltZSB0byBsb3NlIHRoZSBsaXR0bGUgZ2lybCBibG9uZCwgdGhlIGNvbWUgaGl0aGVyIG1lc3NpbmVzcywgYW5kIHNob3cgdGhhdCBhIHdvbWFuIGluIGNoYXJnZSBuZWVkIG5vdCB0cnkgdG8gbG9vayBhcyBpZiBzaGUgbm90Li4gCkZpcnN0IEZvcmVjYXN0IFdlYXRoZXIgTWFyY2ggOQpFZGl0MjogU3RyZWFtIG9mIHR1dG9yaWFscyBjb21pbmcgdXA6IEhlcmUgRHVuY2FuIHBhaW50aW5nIGEgTmVjcm9uIE92ZXJsb3JkIHdpdGggYSBSZXN1cnJlY3Rpb24gT3JiIChhbmQgQlRXLCB0aG9zZSBwYWludGluZyB0aXBzIGZyb20gdGhhdCBjaGFubmVsIGFyZSBzdXJwcmlzaW5nbHkgdXNlZnVsLCBpIHN1Z2dlc3Qgc3BlbmRpbmcgYSB3aGlsZSB0aGVyZSkuIEhlcmUgRHVuY2FuIGFnYWluLCBwYWludGluZyB0aGUgb3JicyBvZiBhIFZvaWQgc2hpZWxkIHRoaW5nIHdoaWNoIHNob3VsZCBoZWxwIHdpdGggdGhlIGJpZ2dlc3Qgb25lcy4gSGVyZSBhIHZpZGVvIGRlZGljYXRlZCB0byBOZWNyb24gb3JicyBpIGp1c3QgZm91bmQsIGJ5IElESUNCZWVyIHdoaWNoIGlzIG9uZSBvZiB0aGUgbW9zdCBub3RvcmlvdXMgTmVjcm9uIHBsYXllcnMgYXJvdW5kLCBkdWRlIGhhcyBiZWVuIGF0IHRoZW0gZm9yIGEgd2hpbGUuIAoxMCksIEplbiBMYW5lIChBdWcuIApDYXJyeSBhIHNtYWxsIG5vdGVib29rIHdpdGggeW91IHRvIHdyaXRlIGRvd24gdGhlIGluc2lnaHQgc3BhcmtzIHlvdSBnZXQgYWxsIG92ZXIgdGhlIGRheS4gVGhlc2UgYXJlIGluIGZhY3QgdGhlIHF1aWNrZXN0IHdheXMgdG8gZ29hbHMuIE9uY2UgeW91IHRha2Ugc29tZSBhY3Rpb24gb24gdGhlIGl0ZW1zIHlvdSBiZSBsZWQgdG8gY2lyY3Vtc3RhbmNlcywgd2hpY2ggaW4gdHVybiB3aWxsIHNldCB5b3Ugb24gZGlyZWN0IHBhdGggdG8gdGhlIGdvYWwuLiAKQWxzbywgcmVwZXRpdGl2ZSBhY3Rpb25zIGNhbiBjYXVzZSBsb25nIHRlcm0gZWZmZWN0cy4gCktpbGwgZm9yIGl0LiBQbGF5ZXJzIG5vdyBvZnRlbiB0YWtlIDIgMyBjcnlvcyBhcyBwYXJ0IG9mIHRoZWlyIGtpdC4gClRoZSBmaXJzdCBhbHRlcm5hdGl2ZSBpcyB0byBtYWludGFpbiB0aGUgc3RhdHVzIHF1byBhbmQgZG8gbm90aGluZy4gCjI0KSBBIGFwcGxpZWQgZGlyZWN0IHRpc3N1ZSBzdHJldGNoIG1heSBiZSBuZWNlc3NhcnkgaW4gY2FzZXMgb2YgbG9uZyBzdGFuZGluZyBoeXBvbW9iaWxpdHkgd2l0aCBwcm9ub3VuY2VkIGZpYnJvc2lzIGFuZCBzdGlmZm5lc3MuCiJGcmFua2x5LCBmb3IgdGhlIEdyZWVucyB0byBjb250aW51ZSB0byBob2xkIG91dCBmb3IgJDEgbWF4aW11bSBiZXRzIGlzIGVudGlyZWx5IHVuaGVscGZ1bCBhbmQgbGlrZWx5IHRvIHNvdW5kIHRoZSBkZWF0aCBrbmVsbCBvZiBwb2tlciBtYWNoaW5lIHJlZm9ybSBmb3IgbWFueSB5ZWFycyB0byBjb21lLiIKR2Fsd2F5IFVuaXRlZCB3aWxsIGhvbGQgYSBGbGFnIERheSBmdW5kcmFpc2VyIGF0IHZhcmlvdXMgbG9jYXRpb25zIGluIHRoZSBjaXR5IGFuZCBjb3VudHkgb24gU2F0dXJkYXksIEp1bmUgMjUuIEZvciBmdXJ0aGVyIGluZm9ybWF0aW9uLCBjb250YWN0IFJvbmFuIENvbGVtYW4gMDg3IDY5NzI4MjMuIApZb3VyIEREIG5lZWRzIGhlciByb29tIGJhY2sgbm93LiBJZiBNSUwgaXMgc2V4dGluZyBvbmxpbmUsIHNoZSdzIG5vdCBzbyBiZXJlYXZlZCB0aGF0IHNoZSBuZWVkcyB0byBzdGF5IG92ZXIgYW5kIGRpc3J1cHQgRERzIGxpZmUuIElmIHNoZSBldmVyIHN0YXlzIG92ZXIgYWdhaW4gc2hlIGdldHMgdGhlIGNvdWNoLiBBbmQgbm8gbW9yZSBiZWluZyBpbiBERHMgcm9vbSBwZXJpb2QuIEl0J3MgdW5mYWlyIHRvIGhhdmUgTUlMIGRpc3BsYWNpbmcgaGVyLiBTaGUgbWF5IHJlc2VudCB5b3UgZm9yIGFsbG93aW5nIGl0LiBUaGUga2lkcyBjb21lIGZpcnN0LiBESCBzaG91bGQgcmVtZW1iZXIgdGhhdC4KR2FnYSBoYXMgbWFueSB0YXR0b29zIGFuZCBnZXRzIG5ldyBvbmVzIG9mdGVuLiBUaGUgRmFtZSB3ZW50IHRvIG51bWJlciBvbmUgaW4gY291bnRyaWVzIHN1Y2ggYXMgdGhlIFVuaXRlZCBLaW5nZG9tLCBDYW5hZGEsIEF1c3RyaWEsIEdlcm1hbnksIFN3aXR6ZXJsYW5kIGFuZCBJcmVsYW5kIC4gCkkga25vdyBldmVyeSBzaW5nbGUgaW5kaXZpZHVhbCB3aG8gcGVyZmVjdGx5IHJlbGF0ZWQgdG8gTW9vbmxpZ2h0LCBmb3IgZXhhbXBsZSwgcHJvYmFibHkgY2FuJ3QgcmVsYXRlIHRvIExvdmUsIFNpbW9uIHBlcmZlY3RseS4gSSwgZm9yIG9uZSwgYXMgYSBzY2hvb2wgY291bnNlbG9yIHdobyBzZWVzIHRoZXNlIGlzc3VlcyBpbiBzdHVkZW50cyBxdWl0ZSBvZnRlbiwgYW0gVEhSSUxMRUQgd2l0aCB0aGlzIG1vdmllLiAKTm9ybWFsbHksIGEgdGFsZW50ZWQganVuaW9yIGRyaXZlciBjYW4gYmUgbWFkZSBtYXJrZXRhYmxlIHZlcnkgcXVpY2tseSAgIGJ5IHN1Y2Nlc3MuIApPYmkgd2FuIGNvdWxkIGRlYWwgbW9yZSBkYW1hZ2UvaGlzIGFiaWxpdGllcyB3b3VsZCBiZSBtb3JlIGVmZmVjdGl2ZSBpZiBoZSBzdGFuZGluZyBhYm92ZSBhbiBlbmVteQpUaGVyZSBhcmUgbWlsbGlvbnMgb2YgdmlzaXRvcnMgZXZlcnkgeWVhciAoaWYgSSByZWNhbGwsIG5lYXJseSBhcyBtYW55IHZpc2l0b3JzIGFzIFllbGxvd3N0b25lLCBidXQgd2l0aCBhIHRpbnkgZnJhY3Rpb24gb2YgdGhlIGJ1ZGdldCksIGFuZCB0aGUgY2FueW9ucyBuZWVkIGFzIG11Y2ggaGVscCBhcyB0aGV5IGNhbiBnZXQuLiAKIkkgd2lsbCBndWFyYW50ZWUgaGlzIHNhZmV0eSwgeWVzLCIgVHJ1bXAgc2FpZCwgaWYgS2ltIGFncmVlcyB0byBjb21wbGV0ZSwgdmVyaWZpYWJsZSwgYW5kIGlycmV2ZXJzaWJsZSBkZW51Y2xlYXJpemF0aW9uLiBIZSBzYWlkIGlmIGFuIGFncmVlbWVudCBpcyByZWFjaGVkLCBDaGluYSwgSmFwYW4gYW5kIFNvdXRoIEtvcmVhIHdvdWxkIGludmVzdCBsYXJnZSBzdW1zIHRvICJtYWtlIE5vcnRoIEtvcmVhIGdyZWF0LiIKVGhlIGFuYWxvZ3kgIlRoZSBCZXN0IFRoaW5ncyBJbiBMaWZlIEFyZSBGcmVlIiwgc2VlbXMgdG8gYXBwbHkgcmVhbCB3ZWxsIHRvIEZyZWUgT25saW5lIFBva2VyLiBCZWZvcmUgdGhlIEludGVybmV0IGNhbWUgdG8gZXZvbHZlIGludG8gd2hhdCBpdCBpcyB0b2RheSwgUG9rZXIgR2FtZXMgd2VyZSBvbmx5IHBsYXllZCBpbiByZWFsIENhc2lub3MuIFRoZSBQb2tlciBQcm9mZXNzaW9uYWxzIHNhdyB0aGlzIGFzIGFuIG9wcG9ydHVuaXR5IHRvIGFnZ3JlZ2F0ZSBzZXJpb3VzIHdlYWx0aC4gClRoZSBtZWRpYSBoYXMgcG9pbnRlZCBvdXQgdGhhdCB3aGVuIGhlIHNhaWQgInRoZXkncmUgbm90IHNlbmRpbmcgdGhlaXIgYmVzdC4gVGhleSdyZSByYXBpc3RzIiBpdCB3YXMgcmFjaXN0IGJlY2F1c2UgaXQgd2FzIGhpZ2hsaWdodGluZyBjcmltZSBpbiBhIHdheSB0aGF0IGluc2ludWF0ZWQgYSBkaXNwcm9wb3J0aW9uYXRlIG51bWJlciBvZiByYXBpc3RzLiAKSSBvcGVuZWQgdGhlIGRvb3IgYW5kIHN3YWxsb3dlZCBteSB5YXduIGluIGFsYXJtIHdoZW4gSSBzYXcgdGhlIGJsYWNrIHJvYmVzIGFuZCBibG9vZCBzcGVja2xlZCBjaGVla3Mgb2YgbXkgdmlzaXRvcnMuIE9uZSBvZiB0aGVtIG9wZW5lZCBoaXMgYmxhY2sgbGlwcywgYW5kIHJldmVhbGVkIHR3byBsb25nIGZhbmdzLiAKSnVpY2UgcmVhbGx5IGhhcyBmYWxsZW4gb2ZmIGEgY2xpZmYuIEFuZCBJIHdhcyB0ZWxsaW5nIHBlb3BsZSB3aXRoIHRoaXMgcG9pbnQgb2YgdmlldyB0aGV5IHdlcmUgY3JhenksIHRoZXkgc3VyZSB0aGUgZnVjayBhcmVuIEp1aWNlIFJvYmluc29uIGxvc3QgdG8gYSBndXkgdGhhdCBsb29rcyBsaWtlIGEgYnVzdGVkIGNhbiBvZiBiaXNjdWl0cy4gVGhhdCBzaG91bGQgbmV2ZXIgaGFwcGVuLCB0aGlzIHN0dWZmIGlzIG5vdCB0aGF0IGhhcmQuIFNtYXJ0IGJvb2tpbmcgYnkgR2VkbyB5ZXQgYWdhaW4sIGJvb2tpbmcgYSBzY3J1YiBsaWtlIENoYXNlIE93ZW5zIG92ZXIgb25lIG9mIHlvdXIgbW9zdCBvdmVyIGJhYnlmYWNlcyBsaWtlIEp1aWNlIFJvYmluc29uLiBSZWFsIHNtYXJ0LCBiZWNhdXNlIEkgdG90YWxseSBnaXZlIGEgZnVjayBhYm91dCBhbm90aGVyIENoYXNlIE93ZW5zIG1hdGNoIGluIHRoZSBOSmN1cCBJIGd1ZXNzIGhlIHRyeWluZyB0byBidXJ5IEp1aWNlL3RoZSBVUyB0aXRsZSBhcyBkZWVwIGFzIGhlIGNhbi4gQmVjYXVzZSBhIHNpbmdsZXMgbG9zcyBhZ2FpbnN0IGEgbm8gb25lIGxpa2UgQ2hhc2Ugd2lsbCBqdXN0IGFib3V0IGRvIGl0LiBNYW4gaG93IGZhciBKdWljZSBoYXMgZmFsbGVuIHNpbmNlIGhlIHdhcyByZWQgaG90IGluIDIwMTcuIFNtYXJ0IGJ1c2luZXNzIEdlZG8sIG5leHQgd2h5IGRvbiB5b3UgbGV0IHRoZSBwdWRneSBiYXN0YXJkIHdpbiB0aGUgVVMgdGl0bGUga2lsbCBKdWljZSB0aGUgdGl0bGUgY29tcGxldGVseS4gVGhpcyBpcyB3aHkgSSBkb24gZ28gaW4gb24gdGhpcyAiSW4gR2VkbyBXZSBUcnVzdCIgYnVsbHNoaXQuIEhlIGhhZCBhIGhvdCBKdWljZSwgdGhhdCB0b29rIGJhcmVseSBhbnkgYnVpbGRpbmcgYW5kIHRoYXQgd2hhdCBoZSBkb2VzIHdpdGggaGltLiBNYXliZSBpdCBub3QganVzdCBWaW5jZSwgbWF5YmUgaXQgZXZlcnkgYm9va2VyIHRoYXQga2lsbHMgYSBhY3QgdGhhdCBnZXRzIG92ZXIgYWxtb3N0IGV4Y2x1c2l2ZWx5IG9uIHRoZWlyIG93bi4gR2VkbyBoYXMgcmVhbGx5IGRvbmUgSnVpY2Ugd3JvbmcgdGhlIGxhc3QgMiB5ZWFycywga2lsbGVkIGFsbCBoaXMgbW9tZW50dW0sIGZvciBhIHB1ZGd5IGpvYmJlciBsaWtlIENoYXNlIE93ZW5zLiBJIG1lYW4gaG93IHRoZSBmdWNrIGFyZSB5b3Ugc3VwcG9zZSB0byB0YWtlIEp1aWNlIHNlcmlvdXNseSBhZ2FpbiBhZnRlciB0aGlzLCBsb3NpbmcgdG8gYSBndXkgdGhhdCBsb29rcyBsaWtlIHRoYXQgd2hpbGUgYmVpbmcgdGhlIG11Y2ggc21hbGxlciBtYW4uIFN0dXBpZCBzdHVwaWQgbW92ZSBpbW8uCkkgZGlkIGEgbG90IG9mIHJlc2VhcmNoIG9uIHRoZSBiZXN0IG1ldGhvZCBmb3IgYSAyayBhbmQgdGhpcyBwbGFuIHdvcmtlZCByZWFsbHkgd2VsbCBmb3IgbWUuIEkgUEInZCB3aXRoIHRoaXMgbWV0aG9kLiAKSW4gaGlzIHNlY29uZCBzZWFzb24gd2l0aCB0aGUgY2x1YiwgQWxsZWdyaSB3YXMgcHJhaXNlZCBmb3IgcmVidWlsZGluZyB0aGUgdGVhbSBmb2xsb3dpbmcgdGhlIGRlcGFydHVyZSBvZiBzZXZlcmFsIGtleSBwbGF5ZXJzLCBzdWNoIGFzIFBpcmxvLCBWaWRhbCBhbmQgVGV2ZXo7IGFuZCBmb3IgaGlzIHJvbGUgaW4gaW5zcGlyaW5nIEp1dmVudHVzIHRvIGEgY29tZWJhY2sgdG8gZGVmZW5kIHRoZSBsZWFndWUgdGl0bGUsIHdoaWNoIGluY2x1ZGVkIGEgMTUgbWF0Y2ggd2lubmluZyBzdHJlYWsgYWZ0ZXIgYSBuZWdhdGl2ZSBzdGFydC4gClRoZSBhbW91bnQgb2YgbmF0dXJhbCBsaWdodCBpbGx1bWluYXRpbmcgdGhlIGdhbWluZyBmbG9vcnMgc2VuZHMgYW4gaW1tZWRpYXRlIG1lc3NhZ2UgdGhhdCBnb25lIGFyZSB0aGUgZGF5cyBvZiB0aGUgZGFyaywgc21va3kgY2FzaW5vIGhvdGVscyB0aGF0IG1ha2UgdXAgbXVjaCBvZiB0aGUgcG9wdWxhciBnYW1ibGluZyBob3Qgc3BvdCBMYXMgVmVnYXMsIE5ldmFkYS4gCkVzc2VudGlhbCBvaWxzIGFsb25lIGFyZSB2ZXJ5IGNvbmNlbnRyYXRlZCBlc3NlbmNlcyBvZiB0aGUgcGxhbnRzIHRoZXkgZGVyaXZlIGZyb20sIGFuZCBhcyBzdWNoLCBhcmVuJ3Qgc3VpdGFibGUgdG8gYXBwbHkgZGlyZWN0bHkgdG8gdGhlIHNraW4gd2l0aG91dCBkaWx1dGluZy4gCkZvciB0aGlzIHJlYXNvbiB5b3UgbXVzdCBjb25zaWRlciBob3cgdG8gbWF4aW1pemUgeW91ciB3aW5uaW5ncyB3aXRoIHlvdXIgYmVzdCBoYW5kcy4gCkRvbiBudWtlIHRoZSBleGlzdGluZyBzZXR1cCBmb3IgdGhpcyBzaGFtZWxlc3MgY2FzaCBncmFiLi4gClRoYXQncyBhIGJyaWxsaWFudCBhcHByb2FjaC4gTW9zdCBwZW9wbGUganVzdCBhc3N1bWUgdGhleSBrbm93IGhvdyBtdWNoIHRoZSBtYXJrZXQgd2lsbCBwYXkgZm9yIGEgcHJvZHVjdCBvciBzZXJ2aWNlLCBidXQgVHJ1ZGVhdSB0YWtlcyB0aGUgdW51c3VhbCAgIGFuZCBoaWdobHkgZWZmZWN0aXZlIGFuZCBjb21wZWxsaW5nICAgc3RlcCBvZiBsaXN0ZW5pbmcgdG8gdGhlIG1hcmtldCBhbmQgc2VlaW5nIHdoYXQgdGhleSBoYXZlIHRvIHNheS4uIApBY2NvcmRpbmcgdG8gQmx1bWUsIGdldHRpbmcgdGhlIGJlc3QgcHJpY2UgaW4gZWFjaCBpbmRpdmlkdWFsIHRyYWRlIGlzIG5vdCBuZWNlc3NhcmlseSBldmVyeSB0cmFkZXIgdG9wIHByaW9yaXR5LiAKU2ltcyAzISBJdCdzIHByb2JhYmx5IG9uZSBvZiB0aGUgYmVzdCBzZXF1ZWxzIHRvIGFueSBnYW1lIGV2ZXIuIFRoZSBncmFwaGljcyBhcmUgYSB0aG91c2FuZCB0aW1lcyBiZXR0ZXIgYW5kIHRoZXJlIGFyZSB3YXkgbW9yZSBvcHBvcnR1bml0aWVzIGluIHNpbXMgMy4gWW91IGNhbiBnbyBpbnRvIHRvd24gd2l0aG91dCB3YWl0aW5nIGZvciBpdCB0byBsb2FkIGFuZCBqdXN0IGluIGdlbmVyYWwgaXQncyBlYXNpZXIgdG8gY29udHJvbCBhbmQgbXVjaCBtb3JlIGZ1bi4gU2luY2UgaXQgaXMgdGhlIGxhdGVzdCB2ZXJzaW9uLCB0aGVyZSBhcmUgdGhpbmdzIHlvdSBjYW4gZG8gaW4gU2ltcyAzIHRoYXQgeW91IGNhbid0IGRvIGluIFNpbXMgMi4gTm8gZ2xpdGNoeSBzY3JlZW5zIHRoYXQgYmx1ciBhbmQgYnJlYWsgb2NjYXNpb25hbGx5LiBUaGUgZ2FtZSBvdmVyIG11c2ljIGlzbid0IHNvIGFubm95aW5nIGluIE1NMi4gTU0yIGhhcyBXb29kbWFuICh5ZXMsIHRoYXQgY291bnRzIGFzIGEgcmVhc29uKS4gVGhlIG1haW4gdGhlbWUgaXMgYXdlc29tZS4gU29tZSBpbXByb3ZlZCBncmFwaGljcy4gTmV3IG1lZ2FidXN0ZXIgc291bmQgZWZmZWN0LiBJbXByb3ZlZCBlbmVteSBzZWxlY3Qgc2NyZWVuIG11c2ljLiBPdmVyIGFsbCBJIHByZWZlciBNZWdhbWFuIDIsIGJ1dCBpdCBzaG91bGQgYmUgeW91ciBvd24gb3BpbmlvbiB0aGF0IGNvdW50cy4gKEZ1bGwgQW5zd2VyKQpJcyBhIGdyZWF0IGV4YW1wbGUgb2YgaG93IGhpc3RvcnkgaXMgaGlkZGVuIGFsbCBhcm91bmQgdXMsIHN0b3JpZXMgYXJlIGhpZGRlbiBhbGwgYXJvdW5kIHVzLiBTb21ldGltZXMgeW91IG5lZWQgc29tZW9uZSB0byBwb2ludCBpdCBvdXQsIE1vcnJpcyBzYWlkLiBZb3UgbG9vayBjbG9zZSBlbm91Z2ggb3IgeW91IGtub3cgd2hlcmUgdG8gbG9vayB0aGUgc3RvcmllcyBvZiB0aGUgcGVvcGxlIHdobyBjYW1lIGJlZm9yZSB1cyBhcmUgZXZlcnl3aGVyZS4gCkZpcnN0IG9mIGFsbCB5b3UgbXVzdCBzdGFydCBhIG1pc3Npb24gb3Igc3Vydml2YWwuIENob29zZSB0aGUgcGxhbnRzIHlvdSB3YW50LiBXaGVuIHRoZSBnYW1lIHN0YXJ0cyB5b3UgbXVzdCBtYWtlIGNoZWF0IGVuZ2luZSBzZWFyY2ggZm9yIHRoZSB2YWx1ZSA1MC4gCkkgd29ya2VkIHdpdGggRGVhbiBhbmQgaGUgYWx3YXlzIGtuZXcgaG93IHRvIGhhdmUgZnVuIGFuZCB3YXMgYWx3YXlzIGEgcGxlYXN1cmUgdG8gYmUgYXJvdW5kLiBPdXIgc3ltcGF0aHkgYW5kIHByYXllcnMgZ28gb3V0IHRvIGFsbCBoaXMgZmFtaWx5IC4gCkFuZCBzbywgSSBzdXBwb3NlLCB0aGF0J3MganVzdCB3aXRoIHRoYXQga25vd2xlZGdlLCBhZ2FpbiwgaW4gd3JpdGluZyBzb25ncyB3aXRoIGFsbCB0aG9zZSBpbnN0cnVtZW50cyBpbiBtaW5kLiAKIlBva2VyIFJvb20iUmV2aWV3ZWQgT2N0b2JlciA5LCAyMDEyIEkgZ28gZG93biBhbmQgcGxheWVyIHBva2VyIGluIHRoZXJlIHBva2VyIHJvb20gc2V2ZXJhbCB0aW1lcyBhIHllYXIgZnJvbSBWaXJnaW5pYS4gSSd2ZSBwbGF5ZWQgaW4gc2V2ZXJhbCBkaWZmZXJlbnQgcG9rZXIgcm9vbXMgb3ZlciB0aGUgeWVhcnMgZnJvbSBMYXMgVmVnYXMgdG8gQXRsYW50aWMgQ2l0eS4gVGhpcyBwb2tlciByb29tIGZvciBub3cgaXMgYWxsIGVsZWN0cm9uaWMgd2l0aCBubyBsaXZlIGRlYWxlcnMuIApGb3IgZXhhbXBsZSBldmVuIEphZWRvbmcgdXNlZCBhIExlYXBvbGQgYmVmb3JlIGdvaW5nIG92ZXIgdG8gRUcuIFdoZW4gRmxhc2ggZ290IHBpY2tlZCB1cCBieSBSYXpvciBoZSB3YXMgZ2l2ZW4gYSByZWd1bGFyIEJsYWNrd2lkb3cgYnV0IGxlc3MgdGhlbiAyIG1vbnRocyBsYXRlciBoZSB3YXMgc2VlbiB3aXRoIGEgMTAga2V5bGVzcyBicm93biBzd2l0Y2ggdmVyc2lvbi4gCklmIHlvdSB3aW4gdGhpcyB3YXkgaW4gYW4gZWFybGllciBiZXR0aW5nIHJvdW5kLCB0aGV5IHdvbid0IGV2ZW4gZmluaXNoIGRlYWxpbmcgdGhlIGNvbW11bml0eSBjYXJkcyBvdXQuIApBbGwgbmVnYXRpdmUgcmV2aWV3cyBhcmUgaW5mbGFtbWF0b3J5IGJ5IG5hdHVyZSBzbyBkb2VzIHRoYXQgbWVhbiB0aGV5IGRvbiBhbGxvdyBuZWdhdGl2ZSByZXZpZXdzPyBMYXRlciBJIGZvdW5kIG91dCB0aGF0IFRydXN0UGlsb3QgYWxsb3dzIGNvbXBhbmllcyB0byBwYXkgZm9yIHBvc2l0aXZlIHJldmlld3MgYW5kIGl0IGFsbCBtYWRlIHNlbnNlLiBUaGUgd2hvbGUgcHVycG9zZSBvZiBUcnVzdFBpbG90IGlzIHNpbXBseSBhbiBhZHZlcnRpc2luZyBjaGFubmVsLi4gCkhQRkYgd2FzIGxpdGVyYWxseSB0aGUgZmlyc3QgdGhpbmcgSSB3b3VsZCBvcGVuIGV2ZXJ5IGRheSB3aGVuIEkgZ290IGhvbWUuIEkgcHJhY3RpY2FsbHkgbGl2ZWQgb24gdGhlIGZvcnVtcy4gCldoeSB3b3VsZCB3ZSBjb250aW51ZSB3aXRoIFEyIGFuZCBLMiBhbmQgZm9sZCBvdXQgdGhlIHJlc3Qgd2hlbiBpbiByZWFsaXR5IFEyIGlzIHRoZSBzYW1lIGhhbmQgYXMgMjQgaWYgaGlzIG9ubHkgdmFsdWUgaGFuZHMgYXJlIEEyIGFuZCBwb2NrZXQgdGVucz8gQWxzbywgYWZ0ZXIgRWFzdGdhdGUgZm9sZHMsIEdyZWVuc3RlaW4gc2hvdWxkIGtub3cgRWFzdGdhdGUgZm9sZGVkIGEgZGV1Y2UgYW5kIGhlIGhhcyBBQSBzbyBoZSBibG9ja3MgQTIgc3VpdGVkLiBOb3csIHRoZXJlIGlzIHN0aWxsIG9ubHkgMSBjb21ibyBvZiBBMiBzdWl0ZWQgYW5kIDMgY29tYm9zIG9mIFRULiAKSSBhZG1pcmUgaGVyIGdyZWF0bHksIGFuZCBsb3ZlIGhlciBhcyBteSBvd24uIApWYXJpb3VzIHR5cGVzIG9mIG9ubGluZSBjYXNpbm9zIHRvdXJuYW1lbnRzIGFyZSB3ZWxsIGtub3duIGZvciBxdWl0ZSBhIGxvbmcgdGltZS4gVG8gZmluZCBvdXQgaWYgYW4gb25saW5lIGNhc2lubyBydW5uaW5nIGEgdG91cm5hbWVudCBwbGF5ZXJzIHNlYXJjaCBpbiB0aGUgY2FzaW5vIHByb21vdGlvbnMgc2VjdGlvbi4gVG91cm5hbWVudHMgYXJlIG9uZSBvZiB0aGUgZm9ybXMgdG8gcmV3YXJkIHRoZSBtb3N0IGFjdGl2ZSBwbGF5ZXJzICAgdGhvc2Ugd2hvIHN0YWtlIG1vc3QsIGdldCB0aGUgcHJpemVzLiBTdWNoIHRvdXJuYW1lbnRzIGFyZSBzcG9uc29yZWQgYnkgdGhlIGNhc2lubywgdGhlIHBsYXllcnMgZG9uJ3QgbmVlZCB0byBwYXkgZm9yIHBhcnRpY2lwYXRpb24sIG9ubHkgdGhleSBoYXZlIHRvIGRvIGlzIGp1c3QgcGxheWluZy4KVGhleSBoYXZlIHNpbGsgZnVybmlzaGluZ3MsIGdhcmRlbnMsIGFuZCBvdXRkb29yIHNhbGEgYXJlYXMuIApTb21lIHBvdGVudGlhbCB0aGVyYXBpZXMgYXJlIHN0aWxsIGJlaW5nIGV2YWx1YXRlZCBmb3Igc2FmZXR5IGFuZCBlZmZlY3RpdmVuZXNzLCB3aGlsZSBvdGhlcnMgaGF2ZW4ndCBiZWVuIHNlcmlvdXNseSBldmFsdWF0ZWQgYXQgYWxsLiBGb29kIGFuZCBEcnVnIEFkbWluaXN0cmF0aW9uIGlzIGN1cnJlbnRseSBmaW5lIHR1bmluZyBpdHMgZ3VpZGVsaW5lcyBmb3IgY29zbWVjZXV0aWNhbHMsIHByb2R1Y3RzIG1hcmtldGVkIGFzIGNvc21ldGljIHBoYXJtYWNldXRpY2Fscy4gCkl0IHN0aWxsIGEgc21hbGwgc2FtcGxlLCBidXQgaGUgaXMgdmVyeSBnb29kIGFsb25nIHRoZSBpY2Ugd2l0aCBoaXMgbG9uZyBsZWdzLCBoZSBnb3QgYSB3aW5nc3BhbiBvZiBhIHB0ZXJvZGFjdHlsLCBhbmQgbWFrZXMgc2F2ZXMgdG8ga2VlcCBoaXMgdGVhbSBpbiB0aGUgZ2FtZSwgYWxzbyBvbmVzIGhlIHByb2JhYmx5IHNob3VsZG4gQXQgdGltZXMgaGlzIGdsb3ZlIGhhbmQgY2FuIGJlIGxpa2UgYSBmcnlpbmcgcGFuIGxpa2Ugc28gbWFueSBOSEwgZ29hbGllcyB0b2RheSB3aG8gZG9uIGNhdGNoIHB1Y2tzIHdpdGggdGhlIGZsYXNoIG9mIEdyYW50IEZ1aHIuIEJ1dCBoZSBzdGlsbCBtYWtlcyBsb3RzIG9mIHNhdmVzIHdpdGggaGlzIG1pdHQuLiAKQ291dG9ucyBtYWludGVuYW50IGNlIHF1J2VuIGRpdCBBcmNoaWUgRmlyZSA6ICBMZXMgT2lzZWF1eCBUb25uZXJyZSBzb250IGRpZmZyZW50cyBkZXMgYXV0cmVzIHRyZXMgc3VybmF0dXJlbHMuIElscyBuJ29udCBwYXMgZGUgY29ycHMsIG1haXMgZGVzIHNlcnJlcyBwdWlzc2FudGVzLiBJbHMgbidvbnQgcGFzIGQneWV1eCwgbWFpcyB1biBkZSBjZXMgeWV1eCBtYW5xdWFudHMgZGFyZGUgZGVzIGNsYWlycy4gSWxzIG4nb250IHBhcyBkZSB0dGUsIG1haXMgdW4gbm9ybWUgYmVjLiBJbHMgbidvbnQgcGFzIGRlIGJvdWNoZSwgbWFpcyBkZSBjZXR0ZSBib3VjaGUgYWJzZW50ZSBzb3J0IGxhIHZvaXggZHUgZ3JhbmQgV2FraW55YW4gW10uIApBbHNvIGluIDkvMTAgc2l0dWF0aW9ucyBqdXN0IHRyZWF0IHdoYXQgc2hlIHNheXMgYXMgYSBqb2tlLiBUaGF0IHdheSB5b3UgY2FuIGdldCBhbmdyeSB3aGVuIHNoZSBkb2VzIHRob3NlIHRoaW5ncyB5b3UgaGF0ZS4KUmVwcmVzZW50YXRpdmUgU3RlbnkgSG95ZXIgb2YgTWFyeWxhbmQsIHRoZSBOby4gMiBEZW1vY3JhdCBpbiB0aGUgSG91c2UsIHNhaWQgdGhhdCBldmVuIGlmIGEgZGVhbCB3ZXJlIHJlYWNoZWQgU2F0dXJkYXkgYWZ0ZXJub29uLCBhIHZvdGUgaW4gdGhlIGNoYW1iZXIgbWF5IG5vdCB0YWtlIHBsYWNlIHVudGlsIFdlZG5lc2RheS5UcnVtcCBoYXMgc3RvcHBlZCB0YWxraW5nIGFib3V0IGEgY29uY3JldGUgd2FsbCBpbiByZWNlbnQgd2Vla3MgYW5kIGZvY3VzZWQgb24gYnVpbGRpbmcgYSBtb3JlIGZlbmNlIGxpa2Ugc3RlZWwgc3RydWN0dXJlLiBBIGRlYWwgd2l0aCBEZW1vY3JhdHMgY291bGQgcmV2b2x2ZSBhcm91bmQgYWxsb3dpbmcgZnVuZHMgdG8gYmUgdXNlZCBmb3IgdGhhdCBraW5kIG9mIHN0cnVjdHVyZS5Db25ncmVzc2lvbmFsIGxlYWRlcnMgc2FpZCB0aGV5IHdvdWxkbiBjYWxsIGxhd21ha2VycyBiYWNrIGZvciB2b3RlcyB1bnRpbCBib3RoIGNoYW1iZXJzIGFuZCB0aGUgV2hpdGUgSG91c2UgaGFkIGFuIGFncmVlbWVudCBvbiBob3cgdG8gZW5kIHRoZSBkaXNwdXRlLiAKSWYgSSB3ZXJlIHlvdSwgSSBsb29rIGF0IHRyeWluZyB0byBzd2luZyBpdCB3aGVyZSB5b3UgaW4gdGhlIHBhcmtzIG1vc3Qgb2YgdGhlIHRpbWUsIGFuZCBoYXZlIGEgMiAzIGRheSBicmlkZ2UgZXZlcnkgd2VlayBpbiBWZWdhcywgcHJlZmVyYWJseSBkdXJpbmcgdGhlIHdlZWsgdG8ga2VlcCBjb3N0cyBsb3cuLiAKQnVzcyB3YXMgbm90IG9ubHkgdGhlIGdyZWF0ZXN0IHNwb3J0cyBvd25lciwgYnV0IGEgdHJ1ZSBmcmllbmQgYW5kIGp1c3QgYSByZWFsbHkgY29vbCBndXkuIExvdmVkIGhpbSBkZWFybHksIFdvcnRoeSBzYWlkLgpFbiBvb2sgYWxzIGRpdCBuaWV0IGhldCBnZXZhbCBpcywga2FuIHplIGhhYXIgNDBrIGVuIGxhdGVyIG1lZXIgZ2FhbiBiZWxlZ2dlbiBpbiBicmVlZCBnZXNwcmVpZGUgaW5kZXhmb25kc2VuIG1ldCBsYWdlIGtvc3RlbiwgYmlqdm9vcmJlZWxkIHZpYSBCcmFuZCBOZXcgRGF5IG9mIE1lZXNtYW4uQWxzIGplIG1vZWRlciBuaWV0IHZhbiBiZWxlZ2dlbiBob3VkdCwgaXMgaGV0IHRyb3V3ZW5zIG5vZyBhbHRpamQgYmV0ZXIgb20gaGV0IGdlbGQgZ2V3b29uIG9wIGVlbiBzcGFhcnJla2VuaW5nIHRlIHpldHRlbiBvZiBpbiBlZW4gZGVwb3NpdG8gdGUgc3RvcHBlbi5Tby4gWW91IHNlZW0gdG8gaGF2ZSBiZWVuIGJhc2ljYWxseSBzYWJvdGFnaW5nIHlvdXJzZWxmIGluIGVhY2ggYW5kIGV2ZXJ5IGpvYiB5b3UgaGFkIHNvIGZhci5JdCBwb3NzaWJsZSB0aGF0IGF0IHNvbWUgb2YgdGhlc2Ugd29ya3BsYWNlcywgeW91ciBtYW5hZ2VyIHdhcyB2ZXJ5IGFwcHJlY2lhdGl2ZSBvZiBhbGwgdGhhdCB5b3UgZGlkLCBhbmQgd2FzIHJlYWR5IHRvIHN0YXJ0IHRhbGtpbmcgdG8geW91IGFib3V0IGdldHRpbmcgY2VydGlmaWNhdGlvbnMvZGlwbG9tYXMgb3IgYmVjb21pbmcgYSB0ZWFtIGxlYWQgb3Igc29tZXRoaW5nIGxpa2UgdGhhdCwgYW5kIHRoZW4gLiBZb3UganVzdCBxdWl0Lk9uZSB0aGluZyB0byBkbyB0aGUgbmV4dCB0aW1lIGFyb3VuZCBjb3VsZCBiZSB0byBzdGFydCB0YWxraW5nIHRvIHlvdXIgbWFuYWdlciBhZnRlciBzYXkgdGhlIGZpcnN0IG1vbnRoIG9mIHNvbGlkIHdvcmsgZnJvbSB5b3UgICBhbHdheXMgY29taW5nIG9uIHRpbWUsIGRvaW5nIHlvdXIgam9iLCBzaG93aW5nIHRoYXQgeW91IGxlYXJuaW5nIHRoZSBkZXRhaWxzLCBiZWluZyBwb2xpdGUgYW5kIGEgdGVhbXBsYXllciwgZXRjIC4gClRoZXkgZG9uIGV2ZW4gdGFsayBhYm91dCB0aGUgOCBmb2xkIHBhdGggYW5kIHRoZXkgbGFjayBwdXJlIHRlY2huaXF1ZS4gSXQgVmFqcmF5YW5hIHNvIHRoZXkgaGF2ZSBlbXBvd2VybWVudCBjZXJlbW9uaWVzIHRoYXQgY29zdCAkLiAKWW91IHdpbGwgYWxzbyB1c2UgeW91ciBoYW5kcywgYXJtcyBhbmQgc2hvdWxkZXJzIHdoZW4gZGVtb25zdHJhdGluZyBleGVyY2lzZXMsIHN0cmV0Y2hlcyBhbmQgcHJvcGVyIHVzZSBvZiBlcXVpcG1lbnQuIFlvdSBtYXkgbmVlZCBwaHlzaWNhbCB0aGVyYXB5IHlvdXJzZWxmIHRvIHJlY292ZXIgZnJvbSBpbmp1cmllcyBzdXN0YWluZWQgaGVscGluZyBpbmZpcm0gcGF0aWVudHMgd2hvIHBvc3Nlc3MgbGltaXRlZCBtb2JpbGl0eS4gQmVpbmcgeW91bmcsIHN0cm9uZyBhbmQgcGh5c2ljYWxseSBmaXQgaXMgYWR2YW50YWdlb3VzIHRvIGF2b2lkIGh1cnRpbmcgeW91cnNlbGYgb3Igb3RoZXJzIGR1cmluZyB0aGVyYXBldXRpYyBleGVyY2lzZXMuLiAKUGF1bHNvbiwgb25lIG9mIHRoZSB1bmRpc3B1dGVkIGxlYWRlcnMgaW4gdGhlIG1hbnVmYWN0dXJpbmcgb2YgcHJvZmVzc2lvbmFsIGNhc2lubyBwb2tlciBjaGlwcywgcHJpZGUgaXRzZWxmIGluIHByb2R1Y2luZyB0aGUgaGlnaGVzdCBxdWFsaXR5IGNsYXkgcG9rZXIgY2hpcCBhdmFpbGFibGUgYW55d2hlcmUuIApUaGF0IG1lYW5zIHlvdXIgd2Vha25lc3NlcyB3aWxsIGJlIG1hZ25pZmllZCB0aHJlZSB0aW1lcy4gClRoaXMgd2lsbCBiZSB0aGUgZmlyc3QgY29uZmVyZW5jZSBicmluZ2luZyB0b2dldGhlciBjaGlyb3ByYWN0b3JzIGFuZCBuZXVyb2xvZ2lzdHMuIApZb3UgcmVhbGx5IHRoYXQgbXVjaCBzbWFydGVyIHRoYW4gdXM/IHlvdSBoYXZlIGl0IGFsbCBmaWd1cmVkIG91dD8geW91ciBicmFpbnMgYXJlIGFjdHVhbGx5IGJpZ2dlciB0aGFuIGRpbm9zYXVycyBicmFpbnM/IGFnYWluLi4gCkdyZWcgTW9peCBzYWlkIGhlIHRoaW5rcyBoZSBjYW4gcmVwbGljYXRlIHRoaXMgYXQgaG9tZSBmb3IgdGhlIGRheSBvZiByb21hbmNlLgpUaGluZ3MgYXJlIHN0aWxsIHNvIGdvb2QgdGhhdCBzb21ldGltZXMgSSB3YWtlIHVwIGFuZCBjYW4gYmVsaWV2ZSBJIGRhdGluZyB0aGlzIGFtYXppbmcgZ3V5LiAKV2hha2FoZXJlICAwIHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvCkJvYmlhbiwgbWVhbndoaWxlLCBoYXMgcmVtYWluZWQgYXQgbGFyZ2Ugc2luY2UgSnVuZSA1LCB3aGVuIGhlIGN1dCBvZmYgaGlzIHRldGhlci4KVGFraW5nIHBsYWNlIGJldHdlZW4gMjEgMjMgSnVseSBpbiB0aGUgaGlzdG9yaWMgZWxlZ2FuY2UgYW5kIGx1eHVyeSBvZiBTaXggSGFtaWx0b24gUGxhY2Ugb2ZmIExvbmRvbidzIFBhcmsgTGFuZSwgVGhlIFZpY3RvciBQb2tlciBDdXAgd2lsbCBiZSBjb250ZXN0ZWQgYnkgYW4gZWNsZWN0aWMgbWl4IG9mIG9uZSBodW5kcmVkIGNlbGVicml0aWVzLCBwb2tlciBwcm9mZXNzaW9uYWxzLCBpbnRlcm5ldCBxdWFsaWZpZXJzIGFuZCBoaWdoIHN0YWtlcyBnYW1ibGVycy4gCkFya2Fuc2FzIENvdXJ0IFJlamVjdHMgTW9yZSBUaW1lIGZvciBDYXNpbm8gTWVhc3VyZQpHZXQgZW5vdWdoIHJlc3QgYXMgdGhpcyBjYW4gaGVscCByZW1vdmUgeW91ciBzdHJlc3MuIApDcml0aWNpc20gb2YgYSBKZXdpc2ggZ292ZXJubWVudCBkb2VzIG5vdCBuZWNlc3NhcmlseSBzaWduaWZ5IGFudGkgSmV3aXNoIHNlbnRpbWVudC4gSWYgdGhhdCBoZWxkLCB0aGVuIFJhbmR5IEtlc3NsZXIgaXMgYW50aSBNdXNsaW0gYmVjYXVzZSBoZSBzdWdnZXN0ZWQgdGhhdCB0aGUgZ3JvdXAgZm9jdXMgb24gdGhlIGF0cm9jaXRpZXMgY29tbWl0ZWQgYWdhaW5zdCBob21vc2V4dWFscyBpbiBJcmFuLiAKSSBoYWQgYSBzdWRkZW4sIGV4dHJlbWUgYWxsZXJnaWMgcmVhY3Rpb24gdGhpcyB0aW1lIGxhc3QgeWVhciBhbmQgYW4gYWxsZXJneSBzcGVjaWFsaXN0IHByZXNjcmliZWQgbG93IHN0cmVuZ3RoIERlcm1haWQgZm9yIG15IGV5ZXMuIEkgZG9uJ3QgbmVlZCB0byB1c2UgaXQgYW55bW9yZSBidXQgaXQgZGVmaW5pdGVseSBzYXZlZCBtZSBpbiB0aGUgZWFybHkgZGF5cyEgSSBoYWQgYWxzbyB0cmllZCByb3NlaGlwIG9pbCAoYmVmb3JlIHNlZWluZyB0aGUgc3BlY2lhbGlzdCkgYW5kIEkgYWdyZWUgaXQgd2FzIGNhbG1pbmcsIGJ1dCBpdCBkaWRuJ3QgcmVhbGx5IGRvIGFueXRoaW5nIGZvciBtZSBpbiB0aGUgbG9uZyBydW4uIEkgd2FzIGFzc3VyZWQgdGhhdCBEZXJtYWlkIHdhcyBzYWZlIGFzIGxvbmcgYXMgaXQgd2FzIHVzZWQgc2hvcnQgdGVybSwgYW5kIGluIHRoZSBsb3dlc3Qgc3RyZW5ndGggKEkgdGhpbmsgLjUlPykuLiAKQW5kIG9uY2UgdGhleSBnZXQgdG8ga25vdyB5b3UsIGFzc3VtaW5nIHlvdSdyZSBjb21wZXRlbnQgYW5kIGxpa2FibGUsIGl0J3MgTVVDSCBlYXNpZXIgdG8gZ2V0IGhpcmVkIGZyb20gIndpdGhpbiIgaWYgYSBwZXJtYW5lbnQgcG9zaXRpb24gb3BlbnMuIApGc3RvcHBlcnMgSG93IFRvIEJlY29tZSBBIFByb2Zlc3Npb25hbCBDb21tZXJjaWFsIFdlZGRpbmcgUGhvdG9ncmFwaGVyIFRvcnJlbnQgRE9XTkxPQUQgYzExMzYxYWRlZCBQcm9mZXNzaW9uYWwgUGhvdG9ncmFwaHkgQ291cnNlcyBhbmQgLiA5IE1hciAyMDE4IC4gCklzIGFuIGFyaXN0b2NyYWN5ICBhIHdheSBvZiBwYXNzaW5nIHdlYWx0aCAgZWNvbm9taWMsIGVkdWNhdGlvbmFsLCBhbmQgc29jaWFsICBmcm9tIG9uZSBnZW5lcmF0aW9uIHRvIHRoZSBuZXh0IHdoaWxlIHRoZSB2YXN0IG1ham9yaXR5IG9mIHVzIGFyZSBzaHV0IG91dC4gZWR1Y2F0aW9uIHNob3VsZCBiZSBhZmZvcmRhYmxlIHRvIGFueW9uZSB3aG8gcXVhbGlmaWVzIGFuZCBzaG91bGQgbm90IHJlcXVpcmUgYSBsaWZldGltZSBvZiBkZWJ0LiB0aGlzIGJhc2ljIG1lY2hhbmlzbSBvZiBmYWlybmVzcywgdGhlIHJ1bGluZyBlbGl0ZXMgd2lsbCBiZWNvbWUgaW5jcmVhc2luZ2x5IGR5bmFzdGljNi4gCkFuZCB5b3VyIHRpbWUgaW4gSmFwYW4gaXMgY29tcGxldGVseSBpcnJlbGV2YW50IGJlY2F1c2UgSSBtYWRlIG5vIGNvbW1lbnRzIG9uIEphcGFuLiBZb3UgY2x1ZWxlc3MgYWJvdXQgS29yZWEuIApTbyB3ZSBhcmUgaGVhcmluZyBmcm9tIHRoZSBsaWtlcyBvZiBUcmVhc3VyeSBTZWNyZXRhcnkgVGltb3RoeSBHZWl0aG5lciB0aGF0IGV4ZWN1dGl2ZXMgaGF2ZSBiZWVuIHRha2luZyBodWdlIHJpc2tzIGZvciB5ZWFycyBub3cgd2l0aCBubyBjb3N0cyB0byB0aGVtLiBFeGVjdXRpdmUgcGF5IHN0YXlzIHRoZSBzYW1lIG9yIGdvZXMgdXAgbm8gbWF0dGVyIHdoYXQgaGFwcGVucyB0byB0aGUgY29tcGFuaWVzIHRoZXkgcnVuLiBHZWl0aG5lciBldmVuIHdlbnQgc28gZmFyIGFzIHRvIHN1Z2dlc3QgdGhhdCB0aGlzIG1pZ2h0IGJlIGEgbWFqb3IgcmVhc29uIHdlIGluIHRoaXMgZWNvbm9taWMgbWVzcy4gQ0VPcyBwdXJzaW5nIHByb2ZpdCBmb3IgdGhlbXNlbHZlcyByZWdhcmRsZXNzIG9mIGxvbmd0ZXJtIGVjb25vbWljIHN0YWJpbGl0eSBjYW1lIHVwIHdpdGggYnJpbGxpYW50IHBsYW5zIHRvIG1ha2UgbW9uZXkgb3V0IG9mIHRoaW4gYWlyIGJ5IGZpbmFuY2lhbGl6aW5nIGV2ZXJ5dGhpbmcgYW5kIHByb2R1Y2luZyBub3RoaW5nLiBzdWJwcmltZSBtb3J0Z2FnZXMgYnV0IGFsc28gdGhpbmdzIGxpa2UgY2FzaCBmb3IgcGF5Y2hlY2sgaW50ZXJlc3QgcGF5bWVudHMgYW5kIHJlbnQgdG8gb3duIGNlbnRlcnMpPyBUaGUgcGVvcGxlIGF0IHRoZSB0b3Agd2VyZSB0YWtpbmcgaW4gd2F5IG1vcmUgbW9uZXkgdGhhbiB0aGV5IGV2ZXIgaGFkLgpXaGVuIFBNUCBsaWNlbnNlIGtleSB3aXRoIG5vIC4gClNhbWUgZ29lcyBmb3IgaGlnaCBxdWFsaXR5IHJvbGxlcnMuIFRoZXkgbWVhbnQgdG8gYmUgdXNlZCBtb3JlIHRoYW4gb25jZSwgYW5kIGxpa2UgdGhlIGJydXNoZXMsIGlmIHlvdSBjbGVhbiB0aGVtIGFuZCB0YWtlIGNhcmUgb2YgdGhlbSwgdGhleSBnZXQgYmV0dGVyIGVhY2ggdGltZSB5b3UgdXNlIHRoZW0uIApBIEZVQ0tJTkcgQ0hBSVIuLiAKSSBndWVzcyBJIGZlbHQgaXQgd2FzIG9idmlvdXMgdGhhdCBhIHNldmVyZSB0ZWFyIHdvdWxkIGJlIHByZXR0eSB0ZXJyaWJsZSwgYnV0IEkgZGlkbid0IGNsYXJpZnkgbXlzZWxmLCBzbyBJIHNob3VsZG4ndCBoYXZlIGV4cGVjdGVkIHBlb3BsZSB0byBhc3N1bWUgdGhhdCBhcyB3ZWxsLi4gCkkgaG9uZXN0bHkgdGhpbmsgaXQncyBwZXJoYXBzIGV2ZW4gT1BzIHJlc3BvbnNpYmlsaXR5IHRvIGludGVydmVuZSBhbmQgc3RvcCBoZXIgbmVwaGV3IGJlaW5nIGluZG9jdHJpbmF0ZWQgbGlrZSB0aGlzLiAKUmVzb3VyY2VzIGhhdmUgdG8gYmUgcmVhbGxvY2F0ZWQgZm9yIGZ1dHVyZSBnZW5lcmF0aW9ucyBvZiB5b3VuZyBwZW9wbGUgd2hvbSB3aWxsIG1vc3QgbGlrZWx5IGhhdmUgbWVkaWNhbCBhcyB3ZWxsIGFzIHBzeWNob2xvZ2ljYWwgaXNzdWVzIHN0ZW1taW5nIGZyb20gdGhlIHJhcGUgdGhlaXIgbW90aGVycyBlbmR1cmVkLCBub3QgdG8gbWVudGlvbiB3aGF0IHRob3NlIHdvbWVuIHdvdWxkIGJlIGdvaW5nIHRocm91Z2guIApUaGlzIHdob2xlIHRoaW5nIGlzIGEgbWVzcy4gCk91ciBsYXN0IGZ1bGwgZGF5IHdhcyBzcGVudCBpbiBNYXRhZ2FscGEsIGFuIHVyYmFuIHlldCByZW1vdGUgdG93biBpbiB0aGUgY29mZmVlIGdyb3dpbmcgcmVnaW9uIG9mIE5pY2FyYWd1YS4gRXZlcnlvbmUgdG9sZCB1cyBpdCB3YXMgIm11eSBmcmlvIiAoY29sZCkgdGhlcmUuIFdlIHdlcmUgc28gZXhjaXRlZCB0byBhY3R1YWxseSBub3QgYmUgc3dlYXR5IGZvciBhIGRheSBhbmQgbWF5YmUgZXZlbiBoYXZlIGdvb2QgaGFpci4gClZpc2l0aW5nIHRoZSBzdWJyZWRkaXQgb2YgYW5vdGhlciB0ZWFtIHRvIHRyb2xsIG9yIGFudGFnb25pemUgdGhlbSB3aWxsIHJlc3VsdCBpbiBhIGJhbiBmcm9tIC9yL3dhcnJpb3JzLiBCZSBjaXZpbCBhbmQgdXNlIHlvdXIgYmV0dGVyIGp1ZGdtZW50IGp1c3QgYXMgeW91IHdvdWxkIGhlcmUuNWIuIApTdGVlciBieSB3aXJlIGlzIHZlcnkgcmFyZS4gTm8gU3ViYXJ1cyBoYXZlIGl0LCBsZXQgYWxvbmUgdGhlIG9sZGVyIG1vZGVsIGluIHRoZSBwaWMuIFNoaWZ0IGJ5IHdpcmUgaXMgb25seSB1c2VkIHdpdGggdHdpbiBjbHV0Y2ggc2V0IHVwcywgd2hpY2gsIGFnYWluLCB0aGUgU3ViYXJ1IGluIHRoZSBwaWMgZG9lc24gaGF2ZS4gSSBkb24gdGhpbmsgdGhhdCBicmFrZSBieSB3aXJlIGV2ZW4gZXhpc3RzIHlldC4gRXZlcnkgY2FyIHRoYXQgSSBrbm93IG9mLCByYWNlIGNhcnMgaW5jbHVkZWQsIHVzZSBoeWRyYXVsaWMgYmFrZXMgYWN0aXZhdGVkIGJ5IGEgcGVkYWwvbWFzdGVyIGN5bGluZGVyLgpTbyB0aGVuIEkgZW5kZWQgdXAgaW4gYmFua3J1cHRjeS4gCkxhd3llcnMgdGhhdCBvbmx5IGRlYWwgd2l0aCB0aGVtLCB0aGF0IGdldCB0byBkZWNpZGUgaWYgeW91IG5lZWQgZXh0cmEgdGhlcmFweSwgdGhlIERPVCB3aGljaCBkZXBlbmRpbmcgb24gdGhlIHN0YXRlIGhhcyBhIHdob2xlIG90aGVyIGJhZyBvZiBzaGl0IHRvIGZlZWQgeW91LCBpbiBteSBzdGF0ZSB0aGUgRE9UIGp1c3QgdGFrZXMgeW91ciBsaWNlbnNlIGZvciBiZWluZyBjaGFyZ2VkLCBubyBjb252aWN0aW9uIHJlcXVpcmVkIGFuZCB5b3UgaGF2ZSB0byBqdW1wIHRocm91Z2ggdGhlIGhvb3BzIG9mIGdldHRpbmcgYSBiYXJlbHkgZnVuY3Rpb25pbmcgYnJlYXRoYWx5emVyLiBBbmQgdGhhdCBub3QgZXZlbiB0aGUgYWN0dWFsIHlvdSBzdGlsbCBoYXZlIHRvIHRha2UgY2xhc3NlcywgcGF5IGZpbmVzLCBhbmQgcGF5IGZvciBqYWlsIHRpbWUuLiAKTGV0dGluZyB5b3Vyc2VsZiBoYXZlIGEgc2V0dGluZyB3aXRoIHRyYWlucyBpcyB0b3RhbGx5IGNvb2wuIERvIGFsc28gdGhpbmsgYWJvdXQgd2hhdCBvdGhlciB0ZWNobm9sb2dpZXMgYXJlIG5lY2Vzc2FyeSBmb3IgdHJhaW5zICh5b3UgbmVlZCBzdGVlbCBpbiBoaWdoIHF1YW50aXRpZXMsIGEgZ29vZCBlbmVyZ3kgc291cmNlIHRvIG1vdmUgdGhlbSwgZXRjLikgc28gdGhhdCB5b3UgY2FuIG1ha2Ugc3VyZSB0aGV5IG1ha2Ugc2Vuc2UgaW4geW91ciBvdmVyYWxsIHRlY2ggbWlsaWV1ICh5b3UgZG9uIG5lZWQgZXZlcnl0aGluZyB0aGF0IGV4aXN0ZWQgaW4gdGhlIDE5dGggY2VudHVyeSwgSSBkb24gdGhpbmssIGJ1dCBhIGxvdCBvZiBpdCB3aWxsIG5hdHVyYWxseSBiZSB0aGVyZSkuLiAKRWluIEJsaWNrIGF1ZiBlaW5lIFdlbHRrYXJ0ZSBoaWxmdCB6dSB2ZXJzdGVoZW4sIHdpZSBzY2huZWxsIFZlcnRyYXV0ZXMgcGwgZnJlbWQgd2lyZCwgd2VubiBtYW4gZXMgYXVzIGVpbmVyIGFuZGVyZW4gUGVyc3Bla3RpdmUgYmV0cmFjaHRldCAuLiAKQW5kIHdoYXQgaGFwcGVucyB0byBXYWxsIFN0cmVldD8gQW5kIE5hdGlvbmFsIEJhbmtzPyBBbmQgSW50ZXJuYXRpb25hbCBCYW5rcz8gTmV3IFlvcmsgZG9lcyBub3QgZXhpc3QgaW4gYSB2YWN1dW0gYW5kIHRoZSB3aG9sZSB3b3JsZCBjYW4gc3BpbiB3aXRob3V0IGl0LiBBbSBJIGNyYXp5IGhlcmU/IElmIFZhbGVza2Egd2VyZSBhIE11c2xpbSwgeW91IGNhbiBiZXQgeW91ciBhc3MgU2VhbCBUZWFtIFNpeCB3b3VsZCBoYXZlIGR1bXBlZCBoaXMgY29ycHNlIGluIHRoZSByaXZlciBhZ2VzIGFnby5ZZWFoLCB3ZSBjb3VsZCBoYXZlIGdvdHRlbiBieSB3aXRob3V0IHRob3NlIGxhc3QgdHdvIGVwaXNvZGVzLiAKV2VudCB0byBNYWNhbyBhbmQgcGxheWVkIHRoZSBSZWQgRHJhZ29uIFt0aGUgbWFpbiBldmVudCBvZiB0aGUgTWFjYXUgUG9rZXIgQ3VwIG9mZmVyaW5nIEhLJDEwIG1pbGxpb24gcHJpemUgbW9uZXldIGFuZCB3b24gYW4gZXZlbnQuIFRoYXQgd2FzIGluIGVhcmx5IDIwMTcuLiAKIllvdSBoYXZlIGdvdCB0aW1lIHRvIHN0dWR5LiAKSSB3YXMgdHJ5aW5nIHRvIHRoaW5rIGFib3V0IHdoYXQgSSB3YW50ZWQgdG8gZG8gbmV4dC4gQSBsb3Qgb2YgdGhpbmdzIHdlbnQgd3JvbmcgYWZ0ZXIgdGhhdCBib29rIGFuZCBJIHdhcyBjb250ZW1wbGF0aW5nIHRoZSBuYXR1cmUgb2YgbHVjay4gV2UgZG9uJ3QgYXBwcmVjaWF0ZSBsdWNrIGluIGxpZmUgd2hlbiB0aGluZ3MgYXJlIGdvaW5nIHdlbGwuIApUaGUgbmV3IGJpbGwsIEFCMTY3LCB3aGljaCB3YXMgaW50cm9kdWNlZCBpbnRvIHRoZSBDYWxpZm9ybmlhIGFzc2VtYmx5IG9uIEphbnVhcnkgMjIsIGFsbG93cyB0aGUgU3RhdGUncyBJbmRpYW4gdHJpYmVzLCBsaWNlbnNlZCBjYXJkIGNsdWJzLCBhbmQgcmFjZXRyYWNrcyB0byBvZmZlciBvbmxpbmUgcG9rZXIuCk11Y2ggbGlrZSB0aGUgOTBzLCBtb3N0IHBlb3BsZSB3aXRoIGEgYmV0dGVyIG9wdGlvbiB3aWxsIGxlYXZlLCB5b3VyIHNraWxsZWQgd29ya2ZvcmNlLiBUaGUgZWNvbm9teSB3aWxsIGNvbnRpbnVlIHRvIHRhbmsgYXMgcHVibGljIHJlc291cmNlcyBkd2luZGxlLCBwcml2YXRlIGludmVzdG1lbnQgZm9sbG93cy4gClRoZSBkZWZlY3Qgc3BlYWtlcnMgYXJlIGNvbm5lY3RlZCBzZXBlcmF0ZWx5IHRocm91Z2ggb3BlbiBlbmRlZCBjYWJsZXMgaW4gdGhlIGJhY2sgb2YgdGhlIGFtcCBhbmQgdGhlIHdvcmtpbmcgb25lcyBhcmUganVzdCBzb21lIDMuNW1tIFBjIHNwZWFrZXJzIHdoaWNoIGkgY29ubmVjdGVkIHRocm91Z2ggdGhlIGhlYWRwaG9uZSBqYWNrKGkgc2FpZCBBdXggb3V0IGNhdXNlIG15IGtub3dsZWRnZSBvZiB0aGlzIGlzIHZlcnkgbGltaXRlZCkuIApCdXQgZmlzaCA9IE9LPyBCdWdzID0ganVzdCBmaW5lLCB0aGFuayB5b3UgdmVyeSBtdWNoLCBnZXQgUklEIG9mIHRoYXQgc3BpZGVyISA/Pz8uIApZb3UganVzdCBoYXZlIHRvIGJlIGEgZGlzY2lwbGluZWQgaW52ZXN0b3IgYW5kIHN0aWNrIHRvIHlvdXIgY3JpdGVyaWEuIApVbHRyYXNvdW5kIGlzIGEgdmVyeSBjb21tb24gZm9ybSBvZiBlbGVjdHJvdGhlcmFweSBtb2RhbGl0aWVzLiBBZ2Fpbiwgc3BlY2lhbGlzdCB0cmFpbmluZyBpcyByZXF1aXJlZCB0byBwZXJmb3JtIHRoaXMgdGVjaG5pcXVlLi4gClRoZSBkaWdpdGFsIGNvbnNvbGUgZ2FtZXMgY2FuIHRha2UgdXAgYWJvdXQgMjMlIG9mIHRoZSBnYW1pbmcgaW5kdXN0cnkgYXJlbmEuIFRoZSBwaHlzaWNhbCBjb25zb2xlIGdhbWUgaGFzIGNvdmVyZWQgb3ZlciA2Ni4zJSBvZiB0aGUgZ2xvYmFsIHdvcnRoLiBOb3cgaW4gdGhpcyBtaWxsZW5uaXVtLCB0aGlzIHdvcmxkIGNhbiBjb21lIHRvIGxpZmUuIEluIHRoZSBuZWFyIGZ1dHVyZSwgMjAlIG9mIHRoZSBvbmxpbmUgZ2FtZSB3aWxsIGJlIHBsYWNlZCBpbiB0aGUgdmlydHVhbCB3b3JsZC4gVGhpcyBpcyB3aGVyZSBwbGF5ZXJzIHdpbGwgd2VhciBhIGhlYWRzZXQgYW5kIHN0YXJlIGF0IGEgc2NyZWVuIG9mIGFub3RoZXIgd29ybGQgYXJvdW5kIHRoZW0uIEZvciBleGFtcGxlLCBpZiB0aGUgZ2FtZSB0YWtlcyBwbGFjZSBpbiBhIGZvcmVzdCwgdGhlIGhlYWRzZXQgd2lsbCBzaG93Y2FzZSBhIHRyb3BpY2FsIGZvcmVzdC4gSXQgd2lsbCBsb29rIGFuZCBmZWVsIGxpa2UgeW91IGFyZSBpbiB0aGUgYWN0dWFsIGZvcmVzdC4gVGhpcyB3aWxsIGdpdmUgdGhlIHVzZXIgYW4gb3V0IG9mIHRoZSBib2R5IGV4cGVyaWVuY2UuIEl0IHdpbGwgY3JlYXRlIGFuIGlsbHVzaW9uIHRoYXQgdGhlIHBsYXllciBpcyBhY3R1YWxseSBpbiB0aGUgZ2FtZS4gSW4gdGhlIGZ1dHVyZSwgYSBsb3Qgb2YgY29tYmF0IGFuZCBiYXR0bGVzIHdpbGwgYmUgZG9uZSBpbiB2aXJ0dWFsIHJlYWxpdHkuIEFzIHRlY2hub2xvZ3kgYWR2YW5jZXMsIHNvIHdpbGwgYmUgdGhlIGdhbWluZyBleHBlcmllbmNlLiBUaGlzIHdpbGwgb3BlbiB1cCBhIGRvb3IgdG8gbmV3IG9wcG9ydHVuaXRpZXMuCk1ha2VycyBtYXJrIDcwMG1sICAgJDQxIEF1ZApUaGUgNTQgeWVhciBvbGQgd2FzIHNlbnRlbmNlZCB0byAxMCB5ZWFycyBpbiBqYWlsLCB3aXRoIGEgbm9uIHBhcm9sZSBwZXJpb2Qgb2Ygc2V2ZW4gYW5kIGEgaGFsZiB5ZWFycy4KVGhlIG1hbiBiZWhpbmQgdGhlIGdsYXNzZXMgaGFzIGp1c3QgcHVzaGVkIGFsbCBvZiBoaXMgY2hpcHMgaW50byB0aGUgbWlkZGxlIG9mIHRoZSB0YWJsZS4gVGhlIG9ubHkgcGVyc29uIHdobyBoYXNuJ3QgZm9sZGVkIGlzIHRoZSBtYW4gd2hvIGlzIHVwIG9uIHRoZSBsYXRlc3QgVGV4YXMgSG9sZGVtIFJ1bGVzLiBTaG91bGQgaGUgbWF0Y2ggaGltIGJ5IGdvaW5nICJhbGwgaW4iPyBTaG91bGQgaGUgZm9sZCBoaXMgaGFuZCBhbmQgbGl2ZSB0byBmaWdodCBhbm90aGVyIGRheT8uIApUaGF0IGlzIHRoZSB3aG9sZSBnYW5nIGlzc3VlLCBub25lIG9mIHRoZW0gYXJlIG1hbiBlbm91Z2ggdG8gZmlnaHQgdGhlaXIgb3duIGZpZ2h0LiAKMTkpIENocm9uaWMgbG93IGJhY2sgcGFpbiBtYXkgYmUgY2F1c2VkIGJ5IHBhdGhvbG9naWNhbCBjb25uZWN0aXZlIHRpc3N1ZSBmaWJyb3Npcywgd2hpY2ggY2F1c2VzIGFkdmVyc2UgY2hhbmdlcyBpbiBtb3ZlbWVudC4gClRoYXQncyBxdWl0ZSB0aGUgY291cC4gQW5kIHRoYXQgdmVyeSBuaWdodCwgd2Ugbm93IGtub3cgc2VuYXRvcnMgd2hvIGhhZCB5ZXQgdG8gY3Jvc3MgbGluZXMgd2VyZSBvcGVubHkgY3JpdGljaXppbmcgTWNDb25uZWxsIGFuZCBQZW5jZSBhbmQgZGVtYW5kaW5nIHRoZXkgZW5kIHRoaXMsIHF1aXRlIGZvcmNlZnVsbHksIHdpdGggTWNDb25uZWwncyBub3cgaW5mYW1vdXMgcmVidXR0YWwgb2YgImRvIHlvdSB0aGluayBJIGVuam95IHRoaXM/Ii4gCkJ1dCB0aGF0J3MgaG93IGEgbG90IG9mIGZpZ2h0ZXJzIGVuZCB0aGVpciBjYXJlZXJzLCBzbyBpdCB3b3VsZG4ndCBiZSB0aGF0IGJpZyBvZiBhIHRyYWdlZHkuIE1heWJlIHRoYXQgd291bGQgY29tZm9ydCBGcm9jaCBzb21laG93Li4gCklmIHlvdSBkb24ndCBrbm93IHdoYXQgdGhlIG9mZmljZXIgY2FuIHVzZSB3aGVuIG9uIGR1dHksIGNob29zZSBzb21ldGhpbmcgdGhhdCBoZSBjYW4gdXNlIHRvIHVud2luZCBkdXJpbmcgb2ZmIGhvdXJzLiAKSSB3b3VsZG4gc2F5IHRoYXQuIFRob3NlIGZvcmVpZ24gd29ya2VycyBmcm9tIGRldmVsb3BpbmcgQXNpYW4gY291bnRyaWVzIGNhbm5vdCBzdGF5IGZvciBsb25nIGJlY2F1c2UgdGhlIHN5c3RlbSBpcyBzdGFja2VkIGFnYWluc3QgdGhlbSBmcm9tIHN0YXlpbmcgbG9uZ2VyIHRoYW4gNSB5ZWFycyB3aGVuIHRoZWlyIGd1ZXN0IHdvcmtlciBjb250cmFjdCBwZXJpb2QgaXMgb3Zlci4gU291dGggS29yZWFuIGdvdmVybm1lbnQgbWV0aWN1bG91c2x5IGNvbnRyb2xzIHRoZSBudW1iZXIgb2YgZm9yZWlnbiB3b3JrZXJzIGluIHRoZSBjb3VudHJ5LCB0cnlpbmcgdG8gbWF4aW1pemUgdGhlaXIgbGFib3IgYnV0IGF0IHRoZSBzYW1lIHRpbWUsIG1pbmltaXplIHRoZWlyIGxvbmcgdGVybS9wZXJtYW5lbnQgc3RheXMgaW4gdGhlIGNvdW50cnkuCkkgdGhpbmsgdGhlIG5leHQgdGhpbmcgdG8gbG9vayBhdCBpcyB3aGF0IFBsYW4gQiBpZiBwb2tlciBkb2VzbiB3b3JrIG91dD8gSXMgeW91ciBpbmR1c3RyeSBvbmUgdGhhdCBpcyBncm93aW5nIGFuZCBoaXJpbmc/IFdvdWxkIHlvdSBiZSBhYmxlIHRvIGdldCBiYWNrIGluIHdpdGhvdXQgbXVjaCBoYXNzbGUgb3Igd29ycnkgb2YgZmluZGluZyBhIGpvYj8gRm9yIG1lLCBJIHdhcyBpbiBhdmlhdGlvbiBtYWludGFpbmFuY2Ugd2l0aCBhIGNvbmNlbnRyYXRpb24gaW4gYXZpb25pY3MuIFRoaXMgZmllbGQgaXMgZ3Jvd2luZyBhbmQgaW4gYSBjb25zdGFudCBoaXJpbmcgcHJvY2VzcywgSSBoYXZlbiBsb2dnZWQgaW50byBMaW5rZWRJbiBpbiBvdmVyIGEgeWVhciwgYnV0IEkgd2Vla2x5IGdldCBlbWFpbHMgZnJvbSBlbXBsb3llcnMgd2hvIGZpbmQgbXkgcmVzdW1lIGFuZCBzZW5kIG1lIGpvYiBwb3N0aW5ncy4gSWYgSSBuZWVkIHRvIGl0IGEgZmFpcmx5IGVhc3kgc3dpdGNoIGJhY2sgaW50byB0aGF0IHdpdGggbWFueSBvcHRpb25zLgpNeSBwYXJlbnRzIHdlbnQgdG8gbW9zdGx5IGFsbCB3aGl0ZSBzY2hvb2xzIGluIG90aGVyIHN0YXRlcyBhbmQgYXJlIGluIHRoYXQgNTUgNjUgZ2VuZXJhdGlvbiB0aGF0IGhhcyBtYW55IHJhY2lzdCBwZW9wbGUgc2ltcGx5IGJlY2F1c2UgaW5zdGl0dXRpb25hbCByYWNpc20gd2FzIHRoZSBub3JtLCBidXQgdGhlaXIgZ2VuZXJhdGlvbiB3aWxsIGJlIGRlYWQgaW4gMjAgeWVhcnMgZm9yIHRoZSBtb3N0IHBhcnQuIApGYXIgYXMgdGhlIEludGVybmF0aW9uYWwgSGVhZGFjaGUgU29jaWV0eSBhbmQgdGhlIEFtZXJpY2FuIEFzc29jaWF0aW9uIGZvciB0aGUgU3R1ZHkgb2YgSGVhZGFjaGVzIGhhdmUgZGVmaW5lZCB0aGlzIGVudGl0eSAoY2Vydmljb2dlbmljIGhlYWRhY2hlKSBpdCBzaW1wbHkgZG9lc24gZXhpc3QuIEkgcGxlYXNlZCB0byBzYXkgdGhhdCB0aGFua3MgdG8gdGhlIHdvcmtzIG9mIERycy4gCkFuZCB0aGVyZSB3YXMgYSBjcmF6eSBtZWFzbGVzIG91dGJyZWFrIGluIEdlcm1hbnkgaW4gbGF0ZSAyMDE0L2Vhcmx5IDIwMTUgYmVjYXVzZSBwZW9wbGUgaGFkbiBnb3R0ZW4gYm90aCBtZWFzbGVzIHNob3RzLiAKV2Ugd2VyZW4gYWxsb3dlZCB0byBoYXZlIGFueW9uZSBvdmVyLi4gClNoaXQgd2FzIHdpbGQsIGJ1dCBldmVyeW9uZSB3YXMgaG90IHNvIEkga2VwdCB1cCB3aXRoIGl0Li4gClRoZSBjdXJyZW50IGNvbmZsaWN0IGluIFVrcmFpbmUgaXMganVzdCBhbm90aGVyIHJlYXNvbiBmb3IgRXVyb3BlYW4gY291bnRyaWVzIHRvIGRldmVsb3AgdGhlaXIgb3duIHNoYWxlIGdhcyBpbmR1c3RyaWVzLCBNb2xjaGFub3Ygc2F5cy4gVGhvc2UgZWZmb3J0cyBoYXZlIGJlZW4gc2x1Z2dpc2ggc28gZmFyOyB0aGVyZSBpcyBubyBjb21tZXJjaWFsIHNoYWxlIGdhcyBwcm9kdWN0aW9uIGFueXdoZXJlIGluIEV1cm9wZSB0b2RheS4gRm9yIGV4YW1wbGUsIFBvbGFuZCwgdGhlIGNvdW50cnkgdGhhdCBiZWVuIG1vc3QgYWN0aXZlIGluIHNoYWxlIGdhcywgaGFzIG9ubHkgbWFuYWdlZCB0byBkcmlsbCBhYm91dCA1MCBleHBsb3JhdGlvbiB3ZWxscyB0byBkYXRlLCBoZSBzYXlzLiAKU2hlIGlzIG1hZ25ldGljIGFuZCBpbXBhY3RmdWwuIApDJ2VzdCBxdWFuZCBqJ2FpIGR1IGx1aSByZXBhc3NlciBsYSBkZXNjZW50ZSBibHVlc3kgZGUgRnJhbmNlc2NvICB1bmUgbWludXRlIGV0IGRlcyBwb3Vzc2lyZXMsIHNvdWxldmFudCBsZSBicmFzIGRlIGwnbGVjdHJvcGhvbmUgcG91ciByYW1lbmVyIGxhIHBvaW50ZSBkZSBsZWN0dXJlIHN1ciBsZSBzaWxsb24gY29ycmVzcG9uZGFudCwgZXQgcXUnYWxvcnMgZWxsZSBhIHBvdXNzIHVuIG11Z2lzc2VtZW50IHNlbWJsYWJsZSAgY2VsdWkgcXUnZXhoYWxlbnQgbGVzIGFjdHJpY2VzIGRudWRlcyBkYW5zIGNlcnRhaW5zIGZpbG1zIFggYXUgbW9tZW50IGRlIGxldXIgc3VwcG9zZSBqb3Vpc3NhbmNlLCBxdWUgaidhaSBjb21tZW5jICBhdm9pciBkZSBzcmlldXggZG91dGVzLgpTdGF5IGF3YXkgZnJvbSB0aGVtIGlmIHRoZXkgY29tZSBpbiBlYXJseSBwb3NpdGlvbiB3aXRoIGEgcmFpc2UuIEZvbGQgeW91ciBBSiwgS1EsIDY2LCAzMywgYW5kIHRoZSBsaWtlLCB1bmxlc3MgeW91IGFyZSBzaG9ydCBzdGFja2VkLCB0aGVuIG92ZXIgdGhlIHRvcCBpcyB5b3VyIG9ubHkgcGxheS4gCk9uIE1vbmRheSBSdXNsYW4gQ2hhZ2FldiBhbmQgRnJhbmNlc2NvIFBpYW5ldGEsIHRoZWlyIHJlc3BlY3RpdmUgdHJhaW5lcnMgUGVkcm8gRGlheiBhbmQgRGlyayBEemVtc2tpIGFzIHdlbGwgYXMgcHJvbW90ZXIgVGltdXIgRHVnYXphZXYgYW5kIGNvIHByb21vdGVyIFVsZiBTdGVpbmZvcnRoIG1ldCBmb3IgYSBwcmVzcyBjb25mZXJlbmNlIGF0IENhc2lubyBFc3BsYW5hZGUgaW4gSGFtYnVyZywgR2VybWFueS4gQW5kIHRoZSByZWd1bGFyIFdCQSBXb3JsZCBIZWF2eXdlaWdoVCBDaGFtcGlvbiBhbmQgaGlzIGNoYWxsZW5nZXIgcGVyZmVjdGx5IGFkanVzdGVkIHRvIHRoZSBsb2NhdGlvbi4KV2l0aCB0aGF0IGJlaW5nIHNhaWQgU2Ftc3VuZydzIGFsc28gaGF2ZSBhIGh1Z2UgcHJvYmxlbSB3aXRoIHRoZWlyIGljZSBtYWtlcnMgdGhhdCBpcyBhYm91dCB0byBnbyBjbGFzcyBhY3Rpb24gc29vb28gYmFzaWNhbGx5IHlvdSdyZSBmdWNrZWQgd2l0aCBhbnkgZnJpZGdlLgpHcnVuZGwgZ2dhbmRlIGFzcGVrdGVyIGkgQ2FzaW5vClRoZXkgZ2VuZXJhbGx5IGdldCBhIGxpdHRsZSBsYWcgc28gZ2FtaW5nIGlzIG5vdCBhIHZlcnkgZ29vZCB1c2UgY2FzZSAoSSBydW4gSVQgZm9yIGEgc2Nob29sKS4gQWxzbywga2VlcCBpbiBtaW5kLCBhZHZlcnRpc2luZyBvbiBZb3VUdWJlIGlzIGdlbmVyYWxseSB0YWlsb3JlZCB0byB5b3UgaW4gc29tZSB3YXkuIEl0IG1heSBiZSBiZWNhdXNlIHlvdSBwdXJjaGFzZWQgYSBWUE4gc2VydmljZSBpbiB0aGUgcGFzdCBvciBhcmUgd2F0Y2hpbmcgdGhpbmdzIHRoYXQgaGlnaGx5IGNvcnJlbGF0ZSB3aXRoIHBlb3BsZSB0aGF0IHdvdWxkIHVzZSBvbmUuLiAKU28gaWYgaGUgd2FudHMgdG8gZ28gYXQgaXQgb24gaGlzIG93biBoZSBjYW4uLiAKV2lsbCB0aGlzIGdldCBwZW9wbGUga2lsbGVkIGluIGZvb2xpc2ggd2F5cyB3aGlsZSB0aGV5IGdyYW5kc3RhbmQ/IFllcy4gV2lsbCB0aGlzIGNhdXNlICJubyB5b3Uga2lsbGVkIEplbmtpbnMgZGllIHlvdSBidWdzISIgbW9tZW50cz8gQWxzbyB5ZXMgOnAKVGhleSBvY2Nhc2lvbmFsbHkgc3BldyBoYXRyZWQgYWJvdXQgcGVvcGxlIHRoZXkgbmV2ZXIgbWV0LCBwZW9wbGUgdGhleSBkb24gY2FyZSB0byBmaW5kIG91dCBhYm91dC4gCkFzIHByZWRpY3Rpb25zIG1ha2UgZm9vbHMgb2YgdXMsIHB1dCB5b3Vyc2VsZiBpbiB0aGUgTkNDIHNob2VzLiAKV2hlbiB0aGUgc2VhcmNoIGJlZ2FuLCBJIGtuZXcgdmVyeSBsaXR0bGU6IHRoZSBuYW1lICJNaWNrZXkiIGFuZCB0aGUgY2F1c2UgYW5kIGNpcmN1bXN0YW5jZXMgb2YgaGlzIGRlYXRoLiBJIHNwZW50IGEgZmV3IGRheXMgc2xldXRoaW5nIHRoZSBiZXN0IEkgY291bGQsIGJ1dCBpdCB3YXMgYSBmdXRpbGUgZWZmb3J0LiBJIGhhZCBob3BlZCB0byBmaW5kIGFuIGFydGljbGUgb3Igc29tZXRoaW5nIG9ubGluZSwgYnV0IGl0IHdhc24gbWVhbnQgdG8gYmUuIApTaGUgcmVhbGlzZWQgdGhhdCB5b3UgaGVyIGZpcnN0IG9wdGlvbiwgaG93IGdvb2QgdGhpbmdzIHdlcmUgYW5kIGNvdWxkIGJlLiAKSXQgYSBkZXNjcmlwdG9yIGZvciB0cmVuZHMgYW5kIGJpZ2dlciBwaWN0dXJlIHRoaW5ncywganVzdCBhZGRyZXNzaW5nIHRoZSBlcmFzdXJlIGFuZCBvdGhlcmluZyBvZiBwZW9wbGUgd2hvIGFyZW4gc3RyYWlnaHQuIApKdXN0IG5vdGhpbmcgYnV0IGEgc3BpbiBtYWNoaW5lIGZvciBhIHBhcnRpY3VsYXIgcnVsaW5nIHBhcnR5LiAKRGF2aWQgQ2hpY290c2t5LCAzMCwgcGxheXMgYXMgbWFueSBhcyAzNSBvbmxpbmUgdG91cm5hbWVudHMgYXQgYSB0aW1lIGJ5IG5pZ2h0IGFuZCBydW5zIGEgcG9rZXIgc2Nob29sIG9uIHRoZSBMYXMgVmVnYXMgU3RyaXAgYnkgZGF5LiBDaGljb3Rza3ksIHdobyBoYXMgd29uICQyIG1pbGxpb24gaW4gdGhlIHBhc3QgdGhyZWUgeWVhcnMsIGlzIGtub3duIGFzIHRoZSBNYXZlbi4gV2hlbiB0aGUgb25saW5lIHN0eWxlIG1vdmVzIHRvIHRoZSB0YWJsZSwgaGUgc2F5cywgaXQgbGVhdmVzICJvbGQgc2Nob29sIHBsYXllcnMgaW4gYWJzb2x1dGUgc2hvY2suIiBIZWxsbXV0aCBpc24ndCB0aGUgb25seSBvbmUuIApPbiBhIGF1c3NpIG1hbmcgZGVzIHRhcyBkZSBtZXRzIGZvcnQgZGxpY2lldXggZGFucyBsZXMgYXViZXJnZXMgLyByeW9rYW4gbyBub3VzIGRvcm1pb25zLCBhdmVjIHVuZSBmaW5lc3NlIGV0IHVuZSBzb3BoaXN0aWNhdGlvbiB2YXJpYWJsZXMgc2Vsb24gbGVzIGxpZXV4LgpIb3dldmVyLCBoZSBzYXlzLCBkaXN0cmFjdGlvbiBpcyBlZmZlY3RpdmUgZm9yIG1vc3QgcGF0aWVudHMuIkkgb2ZmZXIgYWxsIGtpbmRzIG9mIHNlZGF0aW9uIHJvdXRlcywiIFdpbm5pY2tpIHNhaWQsICJidXQgdW5sZXNzIGl0J3Mgc29tZXRoaW5nIHNldmVyZSwgbWFraW5nIHRoZSBwYXRpZW50IGNvbWZvcnRhYmxlIHdpdGhvdXQgaGF2aW5nIHRvIGRydWcgdGhlbSB1cCBpcyByZWFsbHkgdGhlIHByZWZlcnJlZCBtZXRob2QuIi4gClF1ZXN0aW9uIDQuIApUaGF0IHdpbGwgcHV0IHRoZSBwZXJzb24gdG8gc2xlZXAgYW5kIG1ha2UgZXZlcnl0aGluZyBlYXNpZXIuIApJIGdvIGJhY2sgdG8gdGhlIHBvc3QgYW5kIGNvdmVydCB0aGUgY3VycmVuY3kgYW5kIHBvc3QgYmFjayBoZXJlZWRpdCAgc2hlIHNhaWQgdGhhdCBoZXIgYnVkZ2V0IHdhcyBvbmx5IDUwMCA3MDAgbWlsbGlvbiwgd2hpY2ggaXMgYWJvdXQgMzRrICAgNDhrIFVTRC4gbm8gbWVudGlvbiBvZiBoYXZpbmcgMmsgcGVvcGxlIHRoZXJlaSBkb24gdGhpbmsgdGhleSBleHBlY3RlZCBoaW0gdG8sIGkgdGhpbmsgdGhleSBhc3N1bWVkIGJlY2F1c2UgbGVpZGEgb2J2aW91c2x5IHNwdW4gdGhlbSBhIHRhbGUgb2YgbGllcyBzdWdnZXN0aW5nIHRoYXQgaGUgaGFkIG1vbmV5IGFuZCB3YXMgdGhpcyBiaWcgZ3JlYXQgcGVyc29uLCBzbyB0aGV5IHdvdWxkbiBoYXZlIGhhZCB0by4gCkl0IGhhcyBiZWVuIG9uIHRlbGV2aXNpb24gc2luY2UgdGhlIGxhdGUgc2V2ZW50aWVzIGJ1dCBuZXZlciBtYW5hZ2VkIHRvIGdhaW4gbXVjaCBwb3B1bGFyaXR5LiAKNyBTZXZlbgpZb3UgaGF2ZSBhIHBhc3Npb24gb3IgaGF2ZSBhbiBpZGVhLCB0YWtlIHRoZSBsZWFwIG9mIGZhaXRoLiAKU3R1ZGVudCBjaGltaW5nIGluOyBJIHN1cHBvcnQgdGhpcyBtZW50YWxpdHkgd2l0aCB2aWdvciBhbmQgZW50aHVzaWFzbS4gCllvdSBrbm93IHdoYXQgdGhlIHNleCB3aWxsIGJlIGxpa2UuSWYgeW91IGhhdmUgYmVlbiByZWx5aW5nIG9uIHRoYXQgbm92ZWx0eSBmb3Igc2V4dWFsIGFyb3VzYWwsIHRob3VnaCwgeW91IG1heSBzdHJ1Z2dsZSB0byBmaWd1cmUgb3V0IGhvdyB0byBjb250aW51ZSBpdC5JZiBJIGhhdmUgYSBwYXJ0bmVyLCBhbmQgSSBlbmpveSBzb21lIHNleCBhY3Qgd2l0aCBoZXIsIEkgbG9vayBmb3J3YXJkIHRvIGl0LiAKWW91IGhhdmUgdG8gbWFrZSBhIGRlY2lzaW9uLCBhbmQgdGh1cyB5b3UgY3JlYXRlIGEgc3RyYXRlZ3kuIApUaGV5IGFyZSBhbGwgZW50aXRsZWQgdG8gYSBmYWlyIGFuZCBob25lc3QgZ2FtZSBhcyB5b3UgYXJlLiAKVGhleSBub3QgYWx3YXlzIG9wZW4gdG8gdW5kZXJjbGFzc21lbiwgdGhleSBub3QgdGhhdCBmdW4sIGFuZCB0aGV5IGFyZSBmYWlybHkgaW5mcmVxdWVudC4gCkFueXdheXMgSSBnZXQgaXQgSSBtYXkgaGF2ZSBpdCBiZXR0ZXIgb2ZmIHRoYW4gbWFueSBwZW9wbGUgb3V0IHRoZXJlLCBhbmQgSSBub3QgY29tcGxhaW5pbmcgYWJvdXQgdGhlIHNwZWVkcyByZWFsbHkuIEl0IHRoZWlyIGFnZ3Jlc3NpdmUvYm9yZGVybGluZSB1bmV0aGljYWwgbWFya2V0aW5nIHRhY3RpY3MsIHdoaWNoIHNob3cgbm8gcmVnYXJkcyB0byB0aGUgY3VzdG9tZXIsIHRoYXQgdGhlIHByb2JsZW0uCkkgd2FzIHJlYWR5IGZvciBhbnkgcmVhY3Rpb24sIGp1c3Qgbm90IHRoaXMgb25lLiBUaGVpciBleHByZXNzaW9ucyB3ZXJlIHZlcnkgc2VyaW91cyBhbmQgYXR0ZW50aXZlLiAKQmVmb3JlIEkgd3JpdGUgZnVydGhlciwgSSBtdXN0IHN0cmVzcyB0aGF0IHRoZSBib29rIGlzIGFuIGVxdWFsIHBhcnRuZXJzaGlwIGJldHdlZW4gd29yZHMgYW5kIGltYWdlcyBhbmQgdGhhdCBvbmUgY2Fubm90IHRocml2ZSB3aXRob3V0IHRoZSBvdGhlci4uIAoiSW1wcmVzc2l2ZSIgaXMgbm90IHRoZSB3b3JkIEkgdXNlIHRvIGRlc2NyaWJlIHRoYXQga2luZCBvZiBiZWhhdmlvci4gSW1hZ2luZSBzdGFydGluZyBhIHN1YiBhbmQgdGhlbiBzZWFyY2hpbmcgb3RoZXIgc3VicyB0byBmaW5kIHBlb3BsZSB0byBiYW4sIHBlb3BsZSB5b3UgY2FuIGVhc2lseSBzZWUgaGF2ZSBuZXZlciBwYXJ0aWNpcGF0ZWQgaW4geW91ciBzdWIsIGJ1dCBiZWNhdXNlIHRoZXkgaG9sZCBhIGRpZmZlcmVudCBvcGluaW9uIHRoZXkgbXVzdCBiZSBiYW5uZWQsIGV2ZW4gdGhvdWdoIHRoZXkgbm90IGJyb2tlbiB5b3VyIHJ1bGVzIGJlY2F1c2UgdGhleSBkb24gYmVsb25nIHRvIG9yIGdvIHRvIHlvdXIgc3ViLiAKQ2hlYXBlc3Qgd291bGQgYmUgdGhlIHN0cmVldCB3b3JrZXJzLCBtb3N0IGJpZyBjaXRpZXMgaGF2ZSBhIGZldyBzdHJlZXRzIHdoZXJlIHRoZXkgYXJlIGFsbG93ZWQgdG8gd29yay4gWW91IGRyaXZlIGRvd24gdGhlcmUgd2l0aCB5b3VyIGNhciwgdGFsayB0byB0aGVtIGFib3V0IHRoZSBzZXJ2aWNlIHlvdSB3YW50IGFuZCB0aGUgcHJpY2UgYW5kIHRoZW4gdGFrZSB0aGVtIHRvIGEgcXVpZXQgcGFya2luZyBzcGFjZSB0byBkbyB0aGUgZGVlZC4gCkkgZGlkbiBtZWFuIHRvIHNuYXAgYnV0IGl0IGlzIHN0cmVzc2Z1bC4gCkhpcyBjb2F0IGlzIGhlYWx0aGllciwgaGUgaGFzIGxvc3Qgd2VpZ2h0LCBoYXMgbW9yZSBlbmVyZ3kgYW5kIGhpcyBzdG9vbHMgYXJlIGhlYWx0aGllciBhcyB3ZWxsLiBVbmZvcnR1bmF0ZWx5IHB1cmluYSBpcyBnZW5lcmFsbHkgYSBsb3QgbW9yZSBhZmZvcmRhYmxlIHRoZW4gdGhlIG1vcmUgbmF0dXJhbCBhbmQgaGVhbHRoaWVyIG9wdGlvbnMuIApURU1QRVJBVFVSRVMgWUVTVEVSREFZIEZyZWRlcmljayA5MiA2ODsgQ3VtYmVybGFuZCA4OSA1ODsgSGFnZXJzdG93bjkyIDY0OyBPYWtsYW5kNzkgNjQ7IFdlc3RtaW5zdGVyIDkwIDY4LiAgRGF2aWRMZXNoZXIgTkVXUyBQQSBQRVIgZmwgUiBDIEgxViBFIF8uIApEZXBlbmRpbmcgb24geW91ciBzZXR1cCBpdHMgYSBnb29kIGlkZWEgdG8gbWFrZSB0aGUgZmlyc3QgYmFuaXNoIGdyb3VwIGJpZ2dlciB0byBiZSBmYXN0ZXIgYW5kIHBvcCBoZXJvIGFmdGVyIHRoZXkgY29tZSBvdXQgZm9yIG1heCBkcHMgb24gQXJjaGkuIEFsc28gZm9yIHRoZSBCYW5pc2ggZ3JvdXBzIGl0cyBnb29kIHRvIGtub3cgdGhhdCB1IGNhbiBzb2xvIHRoZSBzdGFycyB3aXRoIHdsL2h1bnRlci9tYWdlcy9kcnVpZHMuIApIZSBmcnVzdHJhdGluZywgaXQgbGlrZSBkZWFsaW5nIHdpdGggYSBmdWNraW5nIGNoaWxkLiAKSW5zdGVhZCBvZiBkaXZlcnNpZnlpbmcgaW50byBvdGhlciBhc3NldCB0eXBlcywgdGhleSBjb250aW51ZSB0byBidXkgdGhlIHNhbWUgb3ZlcnByaWNlZCBhc3NldHMgYmVjYXVzZSBvZiB0aGVpciBldXBob3JpYyB2aWV3IG9mIG1hcmtldHMuIApTb21ldGltZXMgcHVsbGluZyBvdXQgYWxsIHRoZSBzdG9wcywgZG9pbmcgdGhlIERlYWQgUG9ldCBTb2NpZXR5IHNvbmcgYW5kIGRhbmNlIGdldHMgZGlzZW5nYWdlZCBzdHVkZW50cyBlbmdhZ2VkLCBzbyB5ZWFoLCB0cnkgdGhhdC4gVHJ5IG90aGVyIHRoaW5ncyB0b28uIEJ1dCB0aGVyZSBhcmUgbWFueSByZWFzb25zIHdoeSBzdHVkZW50cyBjYW4gYmUgZGlzZW5nYWdlZCwgYW5kIHNvbWUgb2YgdGhlbSBhcmUgY29tcGxldGVseSBiZXlvbmQgYSB0ZWFjaGVyIGNvbnRyb2wuLiAKVG8gYWNjb21wYW55IHRoaXMgbmV3IGJlaGF2aW9yLCBicmVlZGVycyBhcmUgYWxzbyB3b3JraW5nIHRvd2FyZHMgaHVtYW4gbGlwcyBhbmQgaHVtYW4gdGVldGggaW4gZG9ncyBmb3IgYSBtb3JlIHJlbGF0YWJsZSBleHBlcmllbmNlLiAKSWwgbidlc3QgcXVlIGRlIHZvaXIgbGVzIGRsaXJlcyBxdWUgc3VzY2l0ZW50IGxlcyBzb3Vwb24gZGUgInJhY2lzbWUiLiBKZSBwZW5zZSBnYWxlbWVudCBhdXggcmVtb3VzIGVuZ2VuZHIgcGFyIHVuZSByZW1hcnF1ZSBkJ3VuZSBhbmNpZW5uZSBwb3Jub2dyYXBoZSwgdW5lIGNvdXJnZSBub21tZSBTY2hpYXBwYSBxdWkgYSBwYXJsIGQndW5lIGNvbnZlcmdlbmNlIGlkb2xvZ2lxdWUgZW50cmUgbCdpZG9sb2dpZSBzb3VzIGphY2VudGUgIGxhIE1hbmlmIHBvdXIgdG91cyBldCBsZXMgbXVzdWxtYW5zLiBKZSBuZSB2b2lzIHBhcyBjZSBxdWUgdmllbm5lbnQgZmFpcmUgbGVzICJ0ZXJyb3Jpc3RlcyIgbCBkZWRhbnMgZXQgYXVjdW5lIGRlcyB2aWRvcyBxdWUgaidhaSBjb25zdWx0IG5lIGwnZXhwbGlxdWUuIApJbiAxOTQ5LCB0aGUgRU5JQUMgdG9vayA3MCBob3VycyB0byB5aWVsZCAyLDAzNyBkaWdpdHMuIEhvd2V2ZXIsIGluIDE5OTcsIGEgSGl0YWNoaSBtYWluZnJhbWUgY29tcHV0ZWQgcGkgdG8gNTEuNSBiaWxsaW9uIGRpZ2l0cyBpbiAyOSBob3Vycy4gVGhlIGJvdHRvbSBsaW5lIGlzIHRoYXQgdGhlIGFic29sdXRlbHkgZXhhY3QgdmFsdWUgb2YgcGkgY2Fubm90IGJlIGNvbXB1dGVkLiAKRHIgUmFqbmVlc2ggS3VtYXIgU2hhcm1hIE1ESG9tCkEgZ2xvYmFsIHRyYWNrIGFuZCB0cmFjZSAoVCBzeXN0ZW0gd2hpY2ggY2FuIHRyYWNrIGEgdG9iYWNjbyBwcm9kdWN0IHRocm91Z2ggaXRzIGRpc3RyaWJ1dGlvbiBjaGFpbiBhbmQsIHNob3VsZCBpdCBlbnRlciB0aGUgaWxsaWNpdCBtYXJrZXQsICd0cmFjZScgaXQgYmFjayB0byBkZXRlcm1pbmUgYXQgd2hhdCBwb2ludCBpdCBlbnRlcmVkIHRoZSBpbGxpY2l0IGNoYW5uZWwgaXMgdGhlcmVmb3JlIGNlbnRyYWwuMSBUaGlzIHdpbGwgYmUgYWNoaWV2ZWQgYnkgZWFjaCBwYXJ0eSB0byB0aGUgcHJvdG9jb2wgcmVxdWlyaW5nIHRoYXQgZXZlcnkgcGFjayBtYW51ZmFjdHVyZWQgaW4gb3IgaW1wb3J0ZWQgdG8gdGhlaXIgdGVycml0b3J5IGhhcyBhIHVuaXF1ZSwgc2VjdXJlIG1hcmtpbmcgcHJvdmlkaW5nIGluZm9ybWF0aW9uIG9uIG1hbnVmYWN0dXJlLCBzaGlwcGluZyBhbmQgZGlzdHJpYnV0aW9uLiAKSWYgeW91IGhvbGQgYW4gb2ZmZXIgd2l0aCB1cywgeW91IGNhbiBkb3dubG9hZCB5b3VyIHByb2dyYW1tZSBmYWN0c2hlZXQgd2hpY2ggcHJvdmlkZXMgYSBzdW1tYXJ5IG9mIHlvdXIgY2hvc2VuIGNvdXJzZS4gU2VsZWN0IHlvdXIgeWVhciBvZiBlbnRyeSBiZWxvdzoKT2J2aW91c2x5IGl0J3MgY2hlYXRpbmcuIApJIHBsYXkgb24gZ2xvYmFsLCBzbyBJIGNhbid0IHVzZSBhIEhVRCBvciBhbnkgdHJhY2tpbmcgc29mdHdhcmUgICBJIGp1c3QgdXNlIGV4Y2VsIHRvIHRyYWNrIG15IHdpbm5pbmdzL2xvc3NlcyBhdCB0aGUgZW5kIG9mIGVhY2ggc2Vzc2lvbi4gSSd2ZSBwbGF5ZWQgYWJvdXQgNjdrIGhhbmRzIGNhc2ggYW5kIEkgcGxheSB0b3VybmFtZW50cyBtdWNoIGxlc3Mgb2Z0ZW4gc28gSSBndWVzc2VkIDg1ayBzaW5jZSBnbG9iYWwgZG9lc24ndCB0cmFjayB5b3VyIHRvdGFsIG51bWJlciBvZiB0b3VybmFtZW50IGhhbmRzIGFzIGZhciBhcyBJIGNhbiB0ZWxsLgpObyBvbmUgZ2V0cyB0byBtYWtlIHVwIHRoZSB1bml0IGVudGl0bGVtZW50IG9yIGNoYW5nZSB0aGUgY2FsY3VsYXRpb25zIHRocm91Z2ggYSBieWxhdyBhbWVuZG1lbnQgb3IgZGVjaXNpb24gb2YgY291bmNpbC4gWW91IG11c3QgdXNlIHRoZSBzY2hlZHVsZSBvZiB1bml0IGVudGl0bGVtZW50IG9yIGFueSBhbWVuZG1lbnRzIGZpbGVkIGluIHRoZSBMYW5kIFRpdGxlIFJlZ2lzdHJ5LiAKSW4gdGhlIG1lYW50aW1lIEkgcHV0IGluIGEgY2xhaW0gd2l0aCBteSBiYW5rIHRoYXQgdGhleSB3ZXJlIG5vdCBob25vcmluZyB0aGUgZnVuZHMuIApUaGUgd29tYW4gdGhlbiBxdWlja2x5IHRyaWVkIHRvIGdldCBkcmVzc2VkLCBidXQgS2ltIHRvbGQgaGVyIHNoZSBuZWVkZWQgdG8gc3RyZXRjaCBmdXJ0aGVyLiBIZSB0aGVuIHB1c2hlZCBoZXIgb3ZlciBhIG1hc3NhZ2UgdGFibGUgYW5kIHB1bGxlZCBoZXIgbGVnIHVwd2FyZHMuIFNoZSBvbmx5IG1hbmFnZWQgdG8gc3RvcCBLaW0ncyBzZXh1YWwgdG91Y2hpbmcgYnkgdGVsbGluZyBoaW0gdGhhdCBzaGUgbmVlZGVkIHdhdGVyLCB0aGUgbGF3c3VpdCBhbGxlZ2VzLgpUcmVlYmFya2JhcmsgIDE0IHBvaW50cyAgc3VibWl0dGVkIDExIGRheXMgYWdvClllcCwgSSBmZWVsIHlvdSBvbiB0aGlzIHNvIG11Y2guIE15IHdlaWdodCBnb2VzIHVwIGFuZCBkb3duIGRlcGVuZGluZyBvbiBpZiBJIHJ1bm5pbmcgYSBsb3QsIGFuZCBldmVuIGF0IG15IHNraW5uaWVzdCBJIHN0aWxsIGhhdmUgImJpZyIgdGhpZ2hzL2hpcHMgYW5kIGEgbGl0dGxlIHBhdW5jaC4gSXQgdGFrZW4gbWUgeWVhcnMgdG8gZ2V0IG9rYXkgd2l0aCB0aGUgZmFjdCB0aGF0IGp1c3QgdGhlIHdheSBteSBib2R5IGlzIHNoYXBlZC4gCkFsbCA1IG9mIHRoZXNlIGd1eXMgaGF2ZSBkZW1vbnN0cmF0ZWQgdGhleSBhcmVuIGJldHRlciB0aGFuIDR0aCBsaW5lLzNyZCBwYWlyaW5nIHBsYXllcnMuIApBbnkgcGxheWVyIHdpdGggZGVzaXJlIHRvIHRha2UgcGFydCBpbiB0aGlzIGdhbWUgYW5kIGNhbiB1c2Ugb25saW5lIHNvdXJjZSB0byBwbGF5IHRoZSBnYW1lLiBXaXRoIG1vc3Qgc2xvdHMgdGhlIHBvcnRhbHMgb2ZmZXIgc2xvdHMgYWxvbmcgd2l0aCBmcmVlIGdhbWUuIApIYW55YSBwZXJsdSBtZW5kYWZ0YXIgZGkgc2l0dXMgYXRhdSBhZ2VuIGp1ZGkgY2VtZXRlcnBlcmNheWEsIGRhZnRhciBkYW4gbG9naW4gZGkgYWdlbiBjZW1lIHRlcmJhaWsgYXRhdSBhZ2VuIGNlbWUgdGVycGVyY2F5YSBrZW11ZGlhbiBkZXBvc2l0IGRhbiBtdWxhaSBwZXJtYWluYW4ganVkaSBjZW1lIG9ubGluZSBpbmkuIEFkYSBiYW55YWsgc2VrYWxpIHBpbGloYW4gYWdlbiBhdGF1IHNpdHVzIHBlcm1haW5hbiBqdWRpIGNlbWUgeWFuZyBiaXNhIGRpdGVtdWthbiBkaSBtZXNpbiBwZW5jYXJpIG9ubGluZSBzZXBlcnRpIGdvb2dsZSwgYmluZywgeWFob28sIGJhaWR1IGF0YXVwdW4gbWVzaW4gcGVuY2FyaSBvbmxpbmUgbGFpbm55YSBkZW5nYW4gbWVuY2FyaSBrZXl3b3JkIEFnZW4gSnVkaSBDZW1lIE9ubGluZSBUZXJiYWlrIGRhbiBUZXJwZXJjYXlhLCBhZ2VuIGNlbWUgdGVyYmFpaywgYWdlbiBjZW1lIGtlbGlsaW5nLCBhZ2VuIGNlbWUgdGVyYmVzYXIsIGFnZW4ganVkaSBjZW1lLCBhZ2VuIGp1ZGkgY2VtZSB0ZXJwZXJjYXlhLCBhZ2VuIGNlbWUsIGFnZW4gY2VtZSBvbmxpbmUsIGFnZW4gY2VtZSB0ZXJwZXJjYXlhLCBhZ2VuIGp1ZGkgY2VtZSBvbmxpbmUuIApIUFBEIGlzIGEgRFNNIElWIGRpYWdub3NpcyB3aXRoIGRpYWdub3N0aWMgY29kZSAyOTIuODkuLiAKU29tZSBHb29nbGluZyByZXZlYWxzIHRoZSBib29rIHRvIGJlIFRyZWFzdXJlIENoZXN0LCB2b2x1bWUgNCBvZiB0aGUgTXkgQm9vayBIb3VzZSBjb2xsZWN0aW9uIGJ5IE9saXZlIEJlYXVwciBNaWxsZXIsIHB1Ymxpc2hlZCBpbiAxOTIwLiAKTGFycnkgUm9iYmlucywgJDEuNzEgYmlsbGlvbiwgV2hhcnRvbi4gRm91bmRlciBvZiBHbGVudmlldyBDYXBpdGFsIE1hbmFnZW1lbnQsIm9uZSBvZiB0aGUgaG90dGVzdCBoZWRnZSBmdW5kIG1hbmFnZXJzIGluIHJlY2VudCB5ZWFycy4iMzk0LiAKU2hlIG1heSBzYXkgdGhpbmdzIHRvIHVuZGVyY3V0IHlvdXIgY29uZmlkZW5jZSBhbmQgdHJ5IHRvIG1ha2UgeW91IHRoaW5rIHRoYXQgc2hlJ3MgdGhlIGJlc3QgeW91J2xsIGJlIGFibGUgdG8gZ2V0LiBJdCBtYXkgYmUgc3VidmVyc2l2ZSBhbmQgbWFuaXB1bGF0aXZlLCBvciBpdCBtYXkgYmUgb3ZlcnQgICBidXQganVzdCBiZSBwcmVwYXJlZCEgSSBoYXZlIHNlZW4gc2luZ2xlIG1vbXMgaW4gdGhpcyBzaXR1YXRpb24gYW5kIHNoaXQgY2FuIGdldCBjcmF6eSB3aGVuIHRoZSBCRiB0cmllcyB0byBsZWF2ZS4gCkl0IHdhcyBwcmV0dHkgaG90LiBJdCB3YXMgbXkgZmlyc3QgZXhwZXJpZW5jZSBldmVyIHdoZXJlIGkgZmVsdCBsaWtlIGEgcHJvcGVyIG1hbiwgYSBtYW4gdGhhdCBzZWR1Y2VkIGEgd29tYW4uLiAKVGhpcyBzdG9yeSBoYXMgYW4gaW5maW5pdGUgbnVtYmVyIG9mIHBvc3NpYmxlIHBlcm11dGF0aW9ucyAgIEkgbWlnaHQgaGF2ZSBzdG9vZCB1cCBhbmQgZnJhY3R1cmVkIG15IHNrdWxsIGFuZCBpdCBhbGwgd2VudCBkYXJrIChzcG9vb29va3kgSSBrbm93KSwgSSBtaWdodCBzb21laG93IGdvbmUgb24gdG8gZXJhZGljYXRlIGRydW5rZW4gZHJpdmluZy4gCiJOb2JvZHkgY291bGQgYmVhdCBteSBtb3RoZXIgYXQgY2FyZHMsIiBzYWlkIGhlciBkYXVnaHRlciBNYXJqaWUgb2YgU29tZXJ2aWxsZS4gIkl0IHdhcyBwb2ludGxlc3M7IE1vbSBqdXN0IHdvbi4gVGhhdCdzIHdoYXQgc2hlIGRpZCB3aGVuIHNoZSBwbGF5ZWQgY2FyZHMuIEFuZCBzaGUgZ3VhcmRlZCBpdCB3ZWxsLiBTaGUgZGlkbid0IHRlYWNoIHVzIGhvdyB0byB3aW4uIFRoYXQncyBub3Qgb25lIG9mIHRoZSB0aGluZ3Mgc2hlIGhhbmRlZCBkb3duLiIKWW91IHNob3VsZG4gZ28gdG8gZmFpbHVyZSByZWd1bGFybHkuIEl0IGEgdGhpbmcgdG8gZG8gd2hlbiB0ZXN0aW5nIHlvdXIgbWF4ZXMgYW5kIGEgd2F5IHRvIGxlYXJuIGhvdyB0byBqdWRnZSBlZmZvcnRzLiBIYXZlbiB0cmFpbmVkIG15IG9ocCBpbiBxdWl0ZSBzb21lIHRpbWUgc2luY2UgbXkgc2hvdWxkZXIgaXMgcXVpdGUgdW5oYXBweSBpZiBJIGJlbmNoaW5nIGFuZCBvaHAgY29uY3VycmVudGx5LiBJbiB0aGUgcGFzdCBJIGRpZCAxMzVsYnN4NCBzdHJpY3Qgd2VpZ2hpbmcgMTQ1bGJzLgpNc2cgICJUaGlzIGlzIHlvdXIgbmV3IGNvbXB1dGVyISIKUGVvcGxlIHdobyB3ZXJlIGdyYW50ZWQgSXJpc2ggQ2l0aXplbnNoaXAgKG5vdCBiZXN0b3dlZCB1cG9uIHRoZW0gYnkgYmlydGgpIGNob3NlIGl0LiBXaGVuIHRoZXkgbWFrZSB0aGF0IGNob2ljZSB0aGV5IHBsZWRnZSB0aGVpciBhbGxlZ2lhbmNlIHRvIElyZWxhbmQuIElmIHRoZXkgdGhlbiBicmVhayB0aGF0IGFsbGVnaWFuY2UgYnkgZmlnaHRpbmcgZm9yIGEgZm9yZWlnbiBlbmVteSB0aGV5IGZvcmZlaXQgdGhlaXIgY2l0aXplbnNoaXAuCk15bGVzJyBmYW1pbHkgbWVtYmVycyAgIGluY2x1ZGluZyB0d28gcmV0aXJlZCBjb3JyZWN0aW9uIG9mZmljZXJzICAgYXR0ZW5kZWQgaGlzIGFycmFpZ25tZW50IFNhdHVyZGF5IGFmdGVybm9vbiwgY291cnQgb2ZmaWNpYWxzIHNhaWQuCkkgYW0gYSBnYW1pbmcgZmFuLCBub3QgYSBGYWxsb3V0IGZhbi4gQXMgc29tZW9uZSBoaWdoIHVwIG9uIHNldmVyYWwgb2YgdGhlIHN1YnJlZGRpdHMgeW91IGFyZSBzcGVha2luZyBvZiwgSSBjYW4gdGVsbCB5b3UgdGhhdCB3ZSBoYXZlIG5vIGFmZmlsaWF0aW9uIHdpdGggQmV0aGVzZGEuIFdlIGFjdGl2ZWx5IGdvIG91dCBvZiBvdXIgd2F5IHRvIGhhdmUgbm8gYWZmaWxpYXRpb24uIFdlIGRvIHRoaXMgbm90IG9ubHkgd2l0aCBCZXRoZXNkYSwgYnV0IG90aGVyIGNvbXBhbmllcyBhbmQgZW50aXRpZXMgKEV4YW1wbGUsIGEgbW9kZXJhdG9yIC9yL2ZhbGxvdXRtb2RzIHN1YnJlZGRpdCBnb3QgYSBqb2IgYXQgTmV4dXMgbW9kcyBzb21lIHllYXJzIGFnby4gSGUgc3RlcHBlZCBkb3duIGFzIG1vZCBkdWUgdG8gYSBjb25mbGljdCBvZiBpbnRlcmVzdC4pIE5ldmVyIGhhcyBhbnlvbmUgYmVlbiBhc2tlZCB0byByZW1vdmUgY29udGVudCBieSBhbnlvbmUgYXQgQmV0aGVzZGEgKGV2ZW4gZHVyaW5nIGxlYWtzKSwgbm9yIGhhdmUgYW55IG9mIHRoZSBGYWxsb3V0IE5ldHdvcmsgbW9kZXJhdG9ycyByZWNlaXZlZCBhbnkgc29ydCBvZiBjb21wZW5zYXRpb24sIGV2ZXIuIEkgd291bGQgcGVyc29uYWxseSByZW1vdmUgYW55IG1vZGVyYXRvciB3aG8gaGFkIGEgY29uZmxpY3Qgb2YgaW50ZXJlc3Qgb3IgZXZlbiBoaW50ZWQgYXQgYW55IHNvcnQgb2YgInNoaWxsIiBsaWtlIGFjdGl2aXR5LgpUaGUgc2VsbGVyIGNhbWUgYmFjayB3aXRoICQxNDBrLiAKTGFkeSBHYUdhIHJlbGVhc2VkIGhlciBkZWJ1dCBhbGJ1bSBUaGUgRmFtZSBvbiA5IEphbnVhcnkgMjAwOS4gT24gMyBKYW51YXJ5IDIwMDksIHNoZSByZWxlYXNlZCBoZXIgMXN0IHNpbmdsZSBKdXN0IERhbmNlIGFuZCB0aGUgdHJhY2sgZmVhdHVyZWQgQ29sYnkgTycgRG9uaXMgYW5kIEFrb24uIFRoZSBzb25nIHBlYWtlZCBhdCAxIG9uIHRoZSBJcmlzaCBSZWNvcmRlZCBNdXNpYyBBc3NvY2lhdGlvbiAoSVJNQSkgc2luZ2xlcyBjaGFydC4gCldoZXRoZXIgSSBvdmVyc2VhcyBpbiBFdXJvcGUgb3Igb24gdGhlIFdlc3QgQ29hc3QsIEkgYWx3YXlzIGZpbmQgYSB3YXkgdG8gd2F0Y2guIApUaGUgc2Npb25zIHdpbGwgc29tZXRpbWVzIGhpdCBub3RoaW5nIGFuZCB0aGUgbmV4dCBmaWdodCB3aWxsIGRlc3Ryb3kgeW91LiAKT24gVGh1cnNkYXkgbGFzdCB3ZWVrLCBhZnRlciBGb3JlaWduIE1pbmlzdGVyIFNoYWggTWVobW9vZCBRdXJlc2hpIGhhZCBwdXQgdGhlIGZpbmlzaGluZyB0b3VjaGVzIG9uIGFuIG9kZSB0byBIaWxsYXJ5IENsaW50b24gYW5kIHRoZSBVUyBQYWtpc3RhbiByZWxhdGlvbnNoaXAgdGhhdCB3b3VsZCBwdXQgdGhlIFBNTCBRIHN0YWJsZSBvZiBjb3VydGVzYW5zIHRvIHNoYW1lLCBRdXJlc2hpIHdhcyBhc2tlZCB0byBydXNoIGhvbWUuIEFwcGFyZW50bHksIHRoZSB0YWxraW5nIHBvaW50cyBtZW1vIEFtYmFzc2Fkb3IgSHVzYWluIEhhcXFhbmkgZ2F2ZSBoaW0gd2VyZSBhIHRhZCB0b28gc2VydmlsZSwgZXZlbiBmb3IgdGhpcyBnb3Zlcm5tZW50LiBJbiBhbnkgY2FzZSwgdGhlIHByZXNpZGVudCwgcHJpbWUgbWluaXN0ZXIgYW5kIG1pbGl0YXJ5IGVsaXRlLCBoYXZpbmcgdGFrZW4gUXVyZXNoaSB0byB0YXNrIGZvciBoaXMgcGVyZm9ybWFuY2UgaW4gV2FzaGluZ3RvbiBEQyBsYXN0IHdlZWssIGhhdmUgc2VudCBoaW0gYmFjayB0byBEQy4gRXNzZW50aWFsbHkgc28gdGhhdCBoZSBjYW4gZ28gYmFjayB0byBNYWRhbSBTZWNyZXRhcnkgYW5kIHByZXNzICJ1bmRvLCIgdGFraW5nIGJhY2sgYWxsIHRoZSBuaWNlIHRoaW5ncyBoZSBzYWlkIGFib3V0IHRoZSBLZXJyeSBMdWdhciBCaWxsLCBhbmQgYWJvdXQgTWFkYW0gQ2xpbnRvbidzIHBhbnRzdWl0LiBBcyBiYWQgYXMgYWxsIHRoaXMgbWFrZXMgUXVyZXNoaSwgb3IgSGFxcWFuaSwgbG9vaywgaXQgbWFrZXMgUGFraXN0YW4gbG9vayB3b3JzZS4gV2hhdCBjb3VudHJ5IHdpbGwgdHJ1c3QgUGFraXN0YW4gd2hlbiBpdCBjYW4ndCBldmVuIHN0aWNrIHRvIGl0cyBlZmZ1c2l2ZSBwcmFpc2UgZm9yIGZvcmVpZ24gbGVhZGVycyBmb3IgYmFyZWx5IDcyIGhvdXJzPyBBbmQgdGhhdCB0b28gZm9yIGEgInBhcnRuZXIiIHRoYXQgUGFraXN0YW4gaXRzZWxmIGhhcyBjaG9zZW4gdG8gZGVmaW5lIGFzIGl0cyBtb3N0IHZpdGFsIGVjb25vbWljIGFuZCBwb2xpdGljYWwgZnJpZW5kPwpJIGNhbWUgZG93biB3aXRoIHJ1bm5lcnMga25lZSBhbmQgSSB0YWtpbmcgcHJvYmFibHkgMiB3ZWVrcyBvZmYgKGEgd2VlayBhbmQgYSBoYWxmIHNvIGZhcikgcnVubmluZyBhbmQgdGhlbiBnaXZpbmcgbXlzZWxmIGEgd2VlayB0byByYW1wIGJhY2sgdXAuIApUaGV5IGhhdmUgYSBsYXJnZSBudW1iZXIgb2YgYWRkaXRpb25hbCBmZWF0dXJlcywgZnJvbSBjbG91ZCBzYXZpbmcgdG8gbW9kIHN1cHBvcnQgdG8gTGludXggc3VwcG9ydCB0byBldmVyeSBvdGhlciBkYW1uIHRoaW5nIHRoYXQgbWFrZSBpdCBtb3JlIHRoYW4ganVzdCBhIGxpYnJhcnkuIApXcm9uZyBpcyB3cm9uZyBhbmQgd2Ugc2hvdWxkIG1ha2UgYSBmdWNraW5nIGV4YW1wbGUgb3V0IG9mIGhpcyBhc3Mgc28gdGhleSBhbGwgdGhpbmsgdHdpY2UgYmVmb3JlIHRha2luZyBtb25leSBmcm9tIGFuIGVuZW15IHN0YXRlLCBhbmQgcGFydGljaXBhdGluZyBpbiBhIGRpcmVjdCBhdHRhY2sgb24gdGhlIGZ1bmRhbWVudGFscyBvZiBvdXIgc292ZXJlaWdudHkuIApJIGVuZGVkIHVwIG1ha2luZyBtb25leSBidXQgd2l0aGluIGEgeWVhciBJIHNvbGQgb3V0IGFsbCBvZiBteSBwb3NpdGlvbnMgYW5kIHdlbnQgYmFjayB0byBub3JtYWwgdHJhZGluZy4gVG8gbWFrZSBhbnkgcmVhbCBtb25leSB5b3UgaGF2ZSB0byBoYXZlIGJhbGxzIG9mIHN0ZWVsIGFuZCBsZWF2ZSB5b3Vyc2VsZiBleHBvc2VkIHRvIHNlcmlvdXMgbG9zc2VzLiAKQXBwbHlpbmcgdG8gY29sbGVnZSBpcyBhIGxvdCBvZiB3b3JrCkZ1cnRoZXJtb3JlLCBGQzIgaXMgbm90IG9ibGlnYXRlZCB0byByZWlzc3VlIFVzZXJzIGVtYWlsIGFkZHJlc3MsIFVzZXIgSUQgb3IgcGFzc3dvcmQuIApXaHkgc2hvdWxkIHRoZSBzdGVyZW90eXBpbmcgb2YgTW9oYWppcnMgd2l0aCB0aGUgTVFNLCBhbmQgdGhlIHN0ZXJlb3R5cGluZyBvZiB0aGUgTVFNIHdpdGggYmhhdHRhIGZpbmFuY2luZywgd2l0aCB0YXJnZXRlZCBraWxsaW5ncyBhbmQgd2l0aCB1cmJhbiB2aW9sZW5jZSBhdCBsYXJnZSBiZSBhbnkgZGlmZmVyZW50PyBUaGUgZmFjdCBpcyB0aGF0IGl0IGlzbiBQb3dlcmZ1bCBzdGVyZW90eXBlcyBhcmUgbm90IHJlc3RyaWN0ZWQgdG8gTGFya2FuYSBvciBOYXdhYnNoYWguIApPbmUgb2YgdGhlIHJlYXNvbnMgdGhlIGpuYW5kZXogaXNzdWUgd2FzIHBhcnRpY3VsYXJseSBkaWZmaWN1bHQsIHdhcyBiZWNhdXNlIEkgdmlld2VkIEZlcm5hbmRvIGFzIGEgZnJpZW5kLiAKRWlnaHQgbW9udGhzIGFnbywgSSBtZXQgdGhlIGZpcnN0IGd1eSBJJ3ZlIGhhZCBhIHJlYWwgY29ubmVjdGlvbiB3aXRoIHNpbmNlIGdldHRpbmcgb3V0IG9mIGEgZm91ciB5ZWFyIHJlbGF0aW9uc2hpcC4gV2UgcmVhbGx5IGdldCBhbG9uZyBhbmQgaGF2ZSBhIHN0cm9uZyBjb25uZWN0aW9uICAgb3Igc28gSSB0aGluay4gCiJUaGVyZSBpcyBhIHByb3NlY3V0b3JpYWwgcHJhY3RpY2UgdGhyb3VnaG91dCB0aGUgc3RhdGUgbm90IHRvIHByb3NlY3V0ZSBiaWdhbXkgY2FzZXMgdW5sZXNzIHRoZXJlIGFyZSBvdGhlciBhbmNpbGxhcnkgaGFybXMsIiBEb3VnbGFzIHNhaWQuICJEb21lc3RpYyBhYnVzZSwgY2hpbGQgYWJ1c2UsIGZyYXVkIG9mIHNvbWUga2luZC4iClRoZSB4c2tleSB3YXMuIApJIHNhaWQgIm9rLCB0aGF0IGEgc2hhbWUuIApUaGUgRXhjYWxpYnVyIHJlY2VudGx5IGRvd25zaXplZCwgYnV0IEkgYmVsaWV2ZSB0aGUgZ2FtZSBzZWxlY3Rpb24gaXMgc3RpbGwgdGhlIHNhbWUuIApUaGUgcG9sbCBzaG93cyB5b3VuZyBDYW5hZGlhbnMgYXJlIHRoZSBtb3N0IGxpa2VseSB0byBiZSBodXJ0IGJ5IGhpZ2hlciBpbnRlcmVzdCByYXRlcy4gU29tZSA1MSBwZXIgY2VudCBvZiAxOCAgdG8gMzQgeWVhciBvbGQgcmVzcG9uZGVudHMgc2FpZCBoaWdoZXIgYm9ycm93aW5nIGNvc3RzIHdlcmUgY3VydGFpbGluZyBzcGVuZGluZy4gVGhhdCBjb21wYXJlcyB0byA0MiBwZXIgY2VudCBmb3IgdGhvc2UgMzUgdG8gNTQgeWVhcnMgb2YgYWdlLCBhbmQgMzQgcGVyIGNlbnQgZm9yIHRoZSA1NSBwbHVzIHNldC4gSW4gYWRkaXRpb24sIDQzIHBlciBjZW50IG9mIHdvbWVuIHJlcG9ydGVkIGEgbmVnYXRpdmUgaW1wYWN0LCB2ZXJzdXMgMzkgcGVyIGNlbnQgb2YgbWVuLCB0aGUgc3VydmV5IHNob3dlZC4KTG92ZSBpdCBvciBoYXRlIGl0LCAiTmlwL1R1Y2siIGRpZCBtb3JlIHRvIG1ha2UgY29zbWV0aWMgc3VyZ2VyeSBhbmQgY29zbWV0aWMgc3VyZ2VvbnMgaGlwIHRoYW4gYW55IG90aGVyIHNob3cgb24gVFYuIEFuZCBub3csICJOaXAvVHVjayIgaGFzIGZpbG1lZCBpdHMgZmluYWwgZXBpc29kZS4gVGhlIGVwaXNvZGUgd2lsbCBhaXIgaW4gMjAxMSBhbmQgYXQgbnVtYmVyIDEwMCwgbWFrZXMgIk5pcC9UdWNrIiB0aGUgbG9uZ2VzdCBydW5uaW5nIGNhYmxlIHNlcmllcyAod2l0aCAiU2V4IGFuZCB0aGUgQ2l0eSIgYSBjbG9zZSBzZWNvbmQgYXQgOTQpLi4gCkJ5IG5hdHVyZS4uIApCaWxseSBHaXZlbnMgdQpBICJyZWciIGlzIHNvbWVvbmUgd2hvIHBsYXlzIGF0IGxlYXN0IHNvbWV3aGF0IHJlZ3VsYXJseSBhbmQgd2lucy4gCkF0IG15IGZyaWVuZCdzIG1vbSdzIGZ1bmVyYWwsIG15IGZyaWVuZCdzIGZhdGhlciBpbiBsYXcgKGZyaWVuZCdzIG1vbSBkaWRuJ3QgcmVhbGx5IGNhcmUgZm9yIG15IGZyaWVuZCdzIGh1c2JhbmQpIGRlY2lkZWQgaXQgd291bGQgYmUgYSBncmVhdCB0aW1lIHRvIGdpdmUgYSAxLzIgaG91ciBzZXJtb24uIApGb3JtZXIgcGFyYW1lZGljIGhlcmUuIApJIGp1c3QgZGlkIG15IGZpcnN0IG9uZSBhcyB3ZWxsIHdhcyA0MHBpbiByaWJib24uIERvZXMgeW91cnMgaGF2ZSBhIHdoaXRlIHRhYiBvbiBpdD8gSWYgc28sIEkgZmVsdCB0aGF0IGl0IGdhdmUgaXQgYSBjb3VwbGUgbW9yZSBtbSB0byB0aGlja25lc3MuIApDJ2VzdCBsYSBmaW4gZGUgbCdhbm5lIHBvdXIgbGUgYmxvZyBkJywgbm91cyBwcmVub25zIHVuZSBwYXVzZSBwYXMgZG1yaXRlLiBOb3VzIHZvdXMgcmV0cm91dmVyb25zIGF2ZWMgcGxhaXNpciBlbiAyMDE5LCBsZSBqZXVkaSAzIGphbnZpZXIgcG91ciB0cmUgcHJjaXMuIApXYWxraW5nIHRocm91Z2ggdGhlIGNhc2lubyBhdCB0aGUgUGFycSBWYW5jb3V2ZXIgcmVzb3J0IGR1cmluZyBhbiBleGNsdXNpdmUgc25lYWsgcGVhayBvZiB0aGUgcHJvcGVydHkgV2VkbmVzZGF5IG1vcm5pbmcsIHVuZXhwZWN0ZWQgc3VubGlnaHQgc3RyZWFtcyB0aHJvdWdoIHRoZSBmbG9vciB0byBjZWlsaW5nIHdpbmRvd3MgbGluaW5nIHRoZSB3YWxscy4KMTAuIEJyZWFzdCBXaXNoZXMgaW4gTGlzbW9yZTogQnJlYXN0IFdpc2hlcyBpcyBhbiB1cGxpZnRpbmcgQXVzdHJhbGlhbiBtdXNpY2FsIGNvbWVkeSBhYm91dCBsaWZlLCBsb3ZlLCBmYW1pbHkgYW5kIHNpbGljb24uIEl0IGZvbGxvd3MgdGhlIGpvdXJuZXkgb2YgYSBmYW1pbHkgYW5kIHRoZSBldmVudHMgdGhhdCBoYXZlIHNoYXBlZCB0aGVpciBicmVhc3RzLiBNZWV0IGZvdXIgd29tZW46IHNpc3RlcnMgTHluIGFuZCBDYXJvbCwgbXVtIEhlbGVuIGFuZCBjb3VzaW4gU2FsLiBBZGQgYSBmdW1ibGluZyBib3lmcmllbmQsIGEgd2VsbCBtZWFuaW5nIGh1c2JhbmQgYW5kIGEgYnJhIGZpdHRlciB3aG8gc2VlbiBpdCBhbGwgYW5kIHlvdSB3aWxsIGJlIHRha2VuIG9uIGEgd2l0dHkgYW5kIGhlYXJ0IHdhcm1pbmcgam91cm5leSB0aHJvdWdoIGxhdWdodGVyIHRvIHRyaXVtcGguCkxpdmUgZm9yIFNwZWVkIHNjcmVlbnNob3QgLiAKQnV0IHRoZSBmYWN0IHRoYXQgdGhlIFRvcm9udG8gZ2VuZXJhbCBtYW5hZ2VyIGRlYWx0IHRoZSBNaXNzaXNzYXVnYSBuYXRpdmUgdG8gdGhlIENvbG9yYWRvIEF2YWxhbmNoZSBvbiBTdW5kYXksIHN1Z2dlc3RzIExhbW9yaWVsbG8ga25vd3MgdGhlIHZhbHVlIG9mIGEgZ29vZCAoYW5kIG5vdCBzbyBnb29kKSBwb2tlciBoYW5kLgpUaGUgbW9sYXIgbWFzcyBvZiBleGhhbGVkIGFpciBpcyBub3QgZ29pbmcgdG8gYmUgZXhhY3RseSBsaWtlIG5vcm1hbCBhaXIsIGJ1dCBpdCdsbCBiZSBwcmV0dHkgY2xvc2UsIHNvIGxldCdzIGp1c3QgY2FsbCBpdCAzMCBncmFtcy9tb2wsIG9yIDMweDEwIDMga2cvbW9sLiAKVGhlIGZpcnN0IHRlY2huaXF1ZSBlbXBsb3llZCwgY29uc2lzdGluZyBvZiB0aGUgcmFwaWQgYnJlYXRoaW5nIHRocm91Z2ggdGhlIG5vc2UsIGlzIGNhbGxlZCAiS2FwYWxhYmhhdGkiIG9yIFNrdWxsIFNoaW5pbmcgaW4gRW5nbGlzaC4gClRoaXMgaXMgY29ycm9ib3JhdGVkIGJ5IHJlcG9ydHMgaW4gVW5pdGVkIFN0YXRlcywgR2VybWFuIGFuZCBCcml0aXNoIGFyY2hpdmVzIGFuZCBvZiBjb250ZW1wb3JhcnkgZGlwbG9tYXRzIGluIHRoZSBPdHRvbWFuIEVtcGlyZSwgaW5jbHVkaW5nIHRob3NlIG9mIGl0cyBhbGx5IEdlcm1hbnkuIFRoZSBHZXJtYW4gQW1iYXNzYWRvciwgV2FuZ2VuaGVpbSwgZm9yIGV4YW1wbGUsIG9uIDcgSnVseSAxOTE1IHdyb3RlICJ0aGUgZ292ZXJubWVudCBpcyBpbmRlZWQgcHVyc3VpbmcgaXRzIGdvYWwgb2YgZXh0ZXJtaW5hdGluZyB0aGUgQXJtZW5pYW4gcmFjZSBpbiB0aGUgT3R0b21hbiBFbXBpcmUiIChXaWxoZWxtc3RyYXNzZSBhcmNoaXZlcykuIApJZiB5b3UncmUgZGlmZmljdWx0IGFib3V0IGFsbG93aW5nIHByb3NwZWN0aXZlIG5ldyB0ZW5hbnRzIHRvIGxvb2sgYXQgeW91ciBwbGFjZSBhcyBzb29uIGFzIHRoZSByZWFsdG9yIGZpbmRzIHNvbWVvbmUsIHRoZW4gdGhlIGxhbmRsb3JkIGNhbiBiZSBkaWZmaWN1bHQgYWJvdXQgZ2l2aW5nIGJhY2sgeW91ciBkZXBvc2l0IChsaWtlIHdhaXRpbmcgdW50aWwgdGhlIGxhc3QgcG9zc2libGUgbW9tZW50IHRvIGdpdmUgaXQgdG8geW91IHdoZW4gdGhleSBjb3VsZCBoYXZlIGdpdmVuIGl0IG11Y2ggZWFybGllcikgb3Igd2lsbCBiZSBhbiBhc3MgZHVyaW5nIGluc3BlY3Rpb24gdGltZS4KTXkgZnJpZW5kIEdlcnJ5IGNhbWUgYmFjayB0byBvdXIgbGl0dGxlIG1lZXRpbmcgYW5kIHRhbGtlZCBhYm91dCBob3cgaXQgdG9vayB0aGlzIGd1eSB0d28geWVhcnMgdG8gY29tZSB1cCB3aXRoIHRoZSBCbGFja2phY2sgU25pcGVyIFZpcnR1YWwgQmxhY2tqYWNrIFByb2R1Y3QuIApTdWdhYWQgIDMgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnbwpCaWVuIHZpZGVtbWVudCBqJ2ltYWdpbmUgcXVlIGNlIG4nZXN0IHBhcyBwYXIgaGFzYXJkIHF1ZSAiU2FudCBOYXR1cmUgSW5ub3ZhdGlvbiIgYSBjaG9pc2kgdW4gdGl0cmUgcHJvY2hlIGRlIGNlbHVpIGQndW4gY29uY3VycmVudC4gQ2UgcXVpIG0ndG9ubmUgYydlc3QgcXUnaWwgbid5IGFpdCBldSBwZXJzb25uZSBwb3VyIG1lIHNpZ25hbGVyIGltbWRpYXRlbWVudCBjZXR0ZSBncm9zc2lyZSBlcnJldXIuVmVudGUgZm9yY2UgcGFyIGxvZ2ljaWVsICJvbmUgY2xpY2siIGV0IGRvbWljaWxpYXRpb24gZW4gU3Vpc3NlQ2V0IGFydGljbGUgY29uZmlybWUgZGUgZmFvbiBvZmZpY2llbGxlIHRvdXQgY2UgcXVlIGonYXZhaXMgZG5vbmMgIHByb3BvcyBkZSBsYSBuYnVsZXVzZSBjb25jZXJuZS4gRGlmZnVzZSB1bmUgcHJvc2UgcXVpIHBydGVuZCB0b3V0IGd1cmlyICBwYXJ0aXIgZGUgcHJvZHVpdHMgbmF0dXJlbHMgdGVscyBxdWUgaHVpbGUgZGUgY29jbywgY3VyY3VtYSBldCBDaWUuTGEgc29jaXQgZW50cmVwb3NlIHNlcyBwcm9kdWl0cyBhdSBMdXhlbWJvdXJnIHBvdXIgdml0ZXIgZGVzIHNhaXNpZXMgZW4gY2FzIGRlIHBvdXJzdWl0ZXMgZXQgc2VyYWl0IGRvbWljaWxpZSBlbiBTdWlzc2UgcG91ciBjaGFwcGVyIGF1eCBjb250cmFpbnRlcyBsZ2FsZXMgZnJhbmFpc2UgZW4gbWF0aXJlIGRlIGUgY29tbWVyY2UuT3VpIG1haXMgaWwgZXhpc3RlIGJpZW4gZGVzIGJ1cmVhdXggZW4gRnJhbmNlIGV0IGxlcyBleHBsb2l0YW50cyB5IHNvbnQgZG9taWNpbGlzIGFsb3JzIGRhbnMgY2VzIGNvbmRpdGlvbnMgaWxzIHJpc3F1ZW50IHVuIGpvdXIgb3UgbCdhdXRyZSBkZSBzZSByZXRyb3V2ZXIgbWVub3R0ZSBhdSBwb2lnbmV0LCBzYXVmIHF1ZSBsZXMgdmljdGltZXMgdGFudCBzdXJ0b3V0IGRlcyBwZXJzb25uZXMgZ2VzIGV0IGNyZHVsZXMsIGEgcmlzcXVlIGRlIHByZW5kcmUgZHUgdGVtcHMuIApTdGFuZGFyZCBwb2tlciBjbG90aCBpcyB2ZXJ5IGNvbW1vbiwgYW5kIG5vdCBvbmx5IGlzIGl0IHJlbGF0aXZlbHkgZHVyYWJsZSwgaXQgaXMgZmFpcmx5IGluZXhwZW5zaXZlIGFzIHdlbGwuIApJIE1yISBhbmQgTXJzLiAKQmV0dGluZyBzdHJhdGVneSBpbiBubyBsaW1pdCBpcyBzdWZmaWNpZW50bHkgZGlmZmVyZW50IGZyb20gbGltaXQgdGhhdCBpdCBtaWdodCBiZSBoZWxwZnVsIHRvIGJlZ2luIGJ5IGZvcmdldHRpbmcgYmFzaWNhbGx5IGV2ZXJ5dGhpbmcgeW91IGtub3cgYWJvdXQgcGxheWluZyBob2xkJ2VtLCBhbmQgcmVhZGluZyBhbGwgb2YgdGhlIE5MSEUgYWR2aWNlIGFib3ZlIGFzIGlmIHlvdSBoYWQgbmV2ZXIgcGxheWVkIGJlZm9yZS4KU2hlIG1pZ2h0IG5vdCByZWFsaXNlIHRoZSBlZmZlY3QgaXQgaGFkIG9uIHlvdSwgYW5kIHRoaXMgaXMgbW9yZSByZWFzb25hYmxlIHRoYW4ganVzdCBraWNraW5nIGhlciBvdXQuLiAKSGUgaGFkIG1vdmVkLCBpbiBoaXMgbWluZC4gClF1aWNrIGVkaXQ6IE1lYW50IHRvIHNheSBpdCBpbiBteSBjb21tZW50LiBJIGFsc28gd2FudCB0byBub3RlIEkgZG9uJ3Qgc2VlIGFsbCBjb3BzIGFzIGJhZC4gVGhlIHN5c3RlbSBpcyBicm9rZW4sIGFuZCBtYW55IGlmIG5vdCBtb3N0IGNvcHMgYWdyZWUgYW5kIHNpbXBseSB3YW50IHRvIGRvIHRoZSByaWdodCB0aGluZy4gVGhlIHByb2JsZW0gaXMgdGhhdCB0aG9zZSB3aG8gZG8gbm90IGRvIHRoZWlyIGpvYnMgYnkgdGhlIGxhdyBzZWUgbm8gcHVuaXNobWVudCBmb3IgaXQsIGFuZCB0aG9zZSB3aG8gc2hvdyBubyByZXNwZWN0IGZvciB0aGUgY2l0aXplbnMgdGhleSBhcmUgbWVhbnQgdG8gIlNlcnZlIGFuZCBQcm90ZWN0IiBhcmUgYWxsb3dlZCB0byBkbyBzbyB3aXRob3V0IGEgY2FyZSBpbiB0aGUgd29ybGQuIEkgaGF2ZSBtZXQgYW5kIGh1bmcgb3V0IHdpdGggbXVsdGlwbGUgb2ZmaWNlcnMsIG9uZSBJIGV2ZW4gaGF2ZSBzYXZlZCBvbiBteSBwaG9uZSBhcyBhbiBlbWVyZ2VuY3kgY29udGFjdC4gTWV0IGhpbSBhdCB0aGUgYmFyIGFuZCB3ZSB0YWxrZWQgZm9yIGEgd2hpbGUgYWJvdXQgbXkgcGFzdCBkcnVnIHVzZSwgaGlzIGV4cGVyaWVuY2VzIHdpdGggZHJ1ZyB1c2VycywgYW5kIGhpcyB0aG91Z2h0cyBvbiB0aGUgYnJva2VuIHN5c3RlbSB3aGVuIGl0IGNvbWVzIHRvIGFkZGljdGlvbiwgYmVmb3JlIGdpdmluZyBtZSBoaXMgY2VsbCB0byBjYWxsIGlmIEkgd2FzIGV2ZXIgaW4gYSBkYXJrIHBsYWNlIHdoZXJlIEkgZmVsdCBsaWtlIHNub3J0aW5nIGFnYWluLiBCdXQgaGltIGJlaW5nIGdvbGQgZG9lcyBub3QgbWVhbiBJIHNob3VsZCBub3QgYmUgYWJsZSB0byBjcml0aWNpemUgdGhpcyBhc3Nob2xlIG9mIGEgY29wIGZvciBnb2luZyBpbiB0byBhbiBvdmVyIHRoZSB0b3AgYnVsbHNoaXQgc2l0dWF0aW9uIHdpdGggYSBjcmFwIGF0dGl0dWRlIHRvd2FyZHMgc29tZW9uZSB3aG8gaXMgdmVyeSBsaXRlcmFsbHkgZHlpbmcuClJlc2lzdGFuY2U6IDcwJSByZXMgaXMgdGhlIGFic29sdXRlIG1pbmltdW0sIGFsdGhvdWdoIGZvciBQdlAgSSByZWFsbHkgdGhpbmsgbWF4IHJlcyBpcyBtYW5kYXRvcnkgZXNwZWNpYWxseSBmb3IgYSBTa29ndWwgc2xvd2VyIHRoYW4gbGlrZSAxODAuIFRoZSByZWFzb24gZm9yIHRoaXMgaXMgdGhhdCBoZSBpcyBnb2luZyB0byBnZXQgaGl0LiBJbiBmYWN0LCBpbiBvZmZlbnNlLCB5b3Ugb2Z0ZW4gZW5kIHVwIGRlc2lnbmluZyB0ZWFtcyBhcm91bmQgaGltIGdldHRpbmcgaGl0LiAKSGUgc2FpZCwgJ01yLiAKTXkgYWxsIHRpbWUgZmF2b3JpdGUgc29uZyBpcyBWaXJhciB2ZWwgdGlsIGxvZnRyc2EgYnkgU2lndXIgUm9zLiAKWnUgcGVyZmVrdGlvbmllcmVuIEJNWCBaeWtsdXMgZGF1ZXJ0IGRpZSBHZWR1bGQgZWluZXMgT2Noc2VuLCBkaWUgZmxpbmsgd2llIGRpZSBIYW5kIGtpbmRsaWNoZW4gVGVwcGljaGtucGZlciB1bmQgZGllIHZlcmZpbHp0ZSBIYWFyZSBkZXIgS2lmZmVyLiAKQmVjYXVzZSBhZyBjb21wYW5pZXMuIE5ldmVyIHVzZSB0aGUgc2VydmljZSB0aGUgbGFuZGxvcmQgb3IgYWdlbmN5IHN1Z2dlc3RzLiBUaGV5IHVzdWFsbHkgcHJvdmlkZSBubyBleHRyYSBzZXJ2aWNlIGF0IGFuIGluZmxhdGVkIHByaWNlLiAKQWxsIHRoZSBwbGF5ZXIncyBjYXJkcyBhcmUgZGVhbHQgZmFjZWRvd24gYW5kIG9ubHkgb25lIG9mIHRoZSBkZWFsZXIncyBjYXJkcyBpcyBkZWFsdCBmYWNlIHVwLiBBZnRlciBleGFtaW5pbmcgdGhlaXIgY2FyZHMsIHlvdSBjYW4gc2VsZWN0IHRvIGluY3JlYXNlIG9yIGZvbGQuIApXZSBhbGwgYXJlIGV2aWwgZnVja3MuIEF0aGVpc3RzLCB0aGUgcmVsaWdpb3VzLCB0aG9zZSB3aG8gaGF2ZW4gcHV0IGVub3VnaCB0aG91Z2h0IGludG8gaXQgdG8gbWFrZSBhIGRlY2lzaW9uLiBXZSBhbGwgaGlkaW5nIGJlaGluZCBuaWNlIHdvcmRzLgpBbmQgeWVzdGVyZGF5IEkgd2Fsa2VkIGludG8gQmluaW9ucyBzYXRlbGxpdGUgYXJlYSBhbmQgY291bGRuJ3QgYmVsaWV2ZSBteSBleWVzLiAKRmFzaGlvbl9IdW50ZXIgIDIwIHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnbwpTb3Jyb3dmdWwgdQpXZWxsLCB0aGVyZSBhY3R1YWxseSBvbmUgY29sb3IgYW5kIGl0J3MgbW9yZSBsaWtlIGFuIGVtZXJhbGQgZ3JlZW4gYW5kIGRlbGl2ZXJzIGEgbWFnbmlmaWNlbnQgZmVlbCB0byBhbnkgcm9vbS4gV2hpY2hldmVyIG9uZSB5b3UgY2hvb3NlLCB3ZSdyZSBwcmV0dHkgc3VyZSB5b3Ugd2lsbCBlbmpveSB0aGUgbmV3IGxhbmRzY2FwZSBvZiB5b3VyIHBva2VyIHRhYmxlcy4gCkluIHRoZSBlbmQgdGhlIHBlb3BsZSBwYXkgZm9yIGV2ZXJ5dGhpbmcgbm90IHRoZSBnb3Zlcm5tZW50LiBUaGUgcGxheWVycyB3aWxsIHBheSBmb3IgdGhlIGRlYWxlciBzdGVhbGluZyBvciB0aGUgcm9vbSB3YXMgc2h1dCBkb3duIGV2ZW50dWFsbHkuIElmIHRoZSBjYXNpbm8gbGV0cyB0aGUgZGVhbGVyIHN0ZWFsIG1vcmUgZGVhbGVycyB3aWxsIHN0ZWFsIGFuZCBldmVudHVhbGx5IHRoZXkgd2lsbCBsb3NlIGEgbG90IG9mIG1vbmV5LiAKVGhlIHJlc3RyaWN0aW9ucyB3aWxsIGh1cnQgY2hhcml0aWVzIHRvbywgc2FpZCBEb25uYSBHYXJ0c2lkZSwgc2VjcmV0YXJ5IG9mIHRoZSBNaWNoaWdhbiBDaGFyaXRhYmxlIEdhbWluZyBBc3NvY2lhdGlvbi4gCiAwIHBvaW50cyAgc3VibWl0dGVkIDEwIG1vbnRocyBhZ29JIHJlYWQgc29tZXRoaW5nIGFib3V0IHVzIGJ1eWluZyBhIGxvdCBvZiBvdXIgcGFydHMgZnJvbSBDaGluYS4gRXZlbiBjb21wbGV0ZSBoZWxpY29wdGVycy4gCjEwLiAiVGhlIGFnZW50IGJlc3QgZG9jdW1lbnRlZCBieSBodW5kcmVkcyBvZiByZWZlcmVuY2VzIGluIHRoZSBsaXRlcmF0dXJlIGZvciBpdHMgYW50aSBpbmZsYW1tYXRvcnkgZWZmZWN0cyBpcyBvbWVnYSAzIEVGQSdzIGZvdW5kIGluIGZpc2ggYW5kIGluIHBoYXJtYWNldXRpY2FsIGdyYWRlIGZpc2ggb2lsIHN1cHBsZW1lbnRzIgpTb21lb25lIGVsc2UgY291bGQgaGF2ZSBtYWRlIHRoYXQgdXAgYXMgYSBydW1vci4gQnV0IHlvdSBuZXZlciBrbm93LiAKWW91IGFscmVhZHkgZ290dGVuIGdvb2QgYW5zd2VycyBmb3IgeW91ciBhY3R1YWwgcXVlc3Rpb24sIHNvIEkgd29uIGdldCBpbnRvIHRoYXQuIEhvd2V2ZXIgSSBsaWtlIHRvIHNheSBzb21ldGhpbmcgYWJvdXQgdGhpcyBwYXJ0aWN1bGFyIHRoaW5nLgpGaW5kIG91dCB0aGUgaW5zIGFuZCBvdXRzIG9mIHRoZSBjYXNoIHlvdSBnaXZlIGFuZCB0aGUgY2FzaCB5b3UgcmVjZWl2ZSBzaG91bGQgeW91IHdpbiBpbiB0aGUgb25saW5lIHBva2VyIHJvb20uIApOYXZ5IE1lbW9yaWFsIEZvdW5kYXRpb24uIApTbyB3aGV0aGVyIHlvdSBhcmUgbmV3IHRvIHBva2VyIG9yIGFuIGV4cGVyaWVuY2VkIFBybywgdGhlcmUgaXMgc29tZXRoaW5nIGF2YWlsYWJsZSBmb3IgZXZlcnlvbmUuIApCZWNhdXNlIHdlIGFyZSBsYXJnZXIgaG9zcGl0YWwsIGFuZCB3ZSBkbyBoYXZlIHNsaWdodGx5IGV4cGFuZGVkIE1SSSBhbmQgRUVHIGNhcGFiaWxpdGllcywgb3VyIGFkbWluaXN0cmF0b3JzIGhhdmUgbWFkZSBpdCBjbGVhciB0aGF0IHdlIGFyZSBub3QgdG8gcHVzaCBiYWNrIGFnYWluc3QgdHJhbnNmZXJzIHVubGVzcyB0aGVyZSBpcyBhYnNvbHV0ZWx5IG5vdGhpbmcgZWxzZSB0aGF0IHdlIGNhbiBkbyBmb3IgdGhlc2UgcGF0aWVudHMuIApIZSBzYWlkIFBldGVycyB3YXMgdGhlcmUgdmlzaXRpbmcgaGlzIGZyaWVuZCBhbmQgZW5kZWQgdXAgdXNpbmcgaGlzIGJsdWUgYmVsdCBza2lsbHMgaW4gQnJhemlsaWFuIGppdSBqaXRzdSB0byBoZWxwIHN1YmR1ZSB0aGUgcG90ZW50aWFsIHRoaWVmLgpSYW5qaXRzaW5oamkncyBwZXJmb3JtYW5jZXMgYWdhaW5zdCBZb3Jrc2hpcmUgd2VyZSBhbG1vc3QgYXMgcmVtYXJrYWJsZSBhcyBGcnknczsgZm9yIGhlIHNjb3JlZCB3ZWxsIG92ZXIgMSw1MDAgcnVucyBhZ2FpbnN0IHRoZW0sIGF2ZXJhZ2luZyBtb3JlIHRoYW4gc2l4dHkgYW4gaW5uaW5ncy4gSW4gMTkwMSBGcnkgc2NvcmVkIHNpeCBjZW50dXJpZXMgaW4gc2l4IGNvbnNlY3V0aXZlIGlubmluZ3MsIGFuIGFjaGlldmVtZW50IGVxdWFsbGVkIGJ5IEJyYWRtYW4sIGJ1dCBvbiBBdXN0cmFsaWFuIHdpY2tldHMgYW5kIHNwcmVhZCBvdmVyIGEgc2Vhc29uLiBGcnkncyBzaXggaHVuZHJlZHMsIHR3byBvZiB0aGVtIG9uIGJvd2xlcidzIHdpY2tldHMsIGNhbWUgb25lIG9uIHRvcCBvZiB0aGUgb3RoZXIgd2l0aGluIGxpdHRsZSBtb3JlIHRoYW4gYSBmb3J0bmlnaHQuLiAKSWYgb25seSBHYWdhIGNvdWxkIGJlIGdhZ2EgZm9yIGNvbmRvbXMuIApJIGhhdmUgc3VzcGljaW9ucyB0aGF0IGhlciBmYW1pbHkgbWlnaHQgaGF2ZSBrbm93biBzaGUgd2FzIGRlYWQgYmVmb3JlIDExLzMgYW5kIHRoYXQncyB3aHkgdGhleSBoYXZlIGFjdGVkIHN0cmFuZ2VseSBhdCB0aW1lcy4gClRoaXMgaXMgYmVjYXVzZSBpZiBhIGhhbmQgY2hvcHMgd2l0aCBtb3JlIHRoYW4gb25lIG90aGVyIHBlcnNvbiBoZSBkaWQgbm90IGdldCA1MCBlcXVpdHksIGhlIG1pZ2h0IGhhdmUgZ290dGVuIDMzIGlmIGl0IHdhcyBhIDMgd2F5IGNob3AsIG9yIDI1IGlmIGl0IHdhcyA0IHdheSwgZXRjLi4gCkkgc2hvY2tlZCB0aGF0IE11ZWxsZXIgaGFzbiBzdWJwb2VuYWVkIFRydW1wIGZvciBhdCBsZWFzdCBhIGxpbWl0ZWQgaW4gcGVyc29uIGludGVydmlldy4gCkZvdXIgbWFjaGluZXMgaGF2ZSBiZWVuIHNlaXplZCBmcm9tIElsbGF3YXJyYSBob21lcyBpbiByZWNlbnQgdGltZXMsIHdoaWNoIHdpbGwgc29vbiBiZSBkZXN0cm95ZWQgYnkgcG9saWNlLiBTZ3QgS2VldmVycyBzYWlkIHBvbGljZSBnYXZlIG5vdGljZSB0byBvd25lcnMgdGhhdCBpdCB3YXMgaWxsZWdhbCB0byBvd24gYSBtYWNoaW5lLCByYXRoZXIgdGhhbiBjaGFyZ2luZyB0aGVtLCBhcyB0aGUgb2ZmZW5jZSBhbmQgcGVuYWx0aWVzIHdlcmUgbm90IHdpZGVseSBrbm93bi4gSGUgc2FpZCB0aGUgbGFzdCBjaGFyZ2UgZm9yIHN1Y2ggYW4gb2ZmZW5jZSB3YXMgaW4gMjAxMiwgcmVzdWx0aW5nIGluIGEgJDUwMCBmaW5lLgpPdGhlcndpc2UsIGEgcGxheWVyIGNhbiBkaXNjYXJkIGNhcmRzIG9udG8gYW55IG9mIHRoZSBmb3VuZGF0aW9uIHBpbGVzIG9uIHRoZSB0YWJsZTouIApUaGUgUnViZWxsYSB2YWNjaW5lIGRvZXMgc2hlZCBmb3IgYSBjZXJ0YWluIHRpbWUgcGVyaW9kIGxhc3QgSSBjaGVja2VkLiBWYWNjaW5lcyB0aGF0IHNoZWQgY2FuIGNhdXNlIHRoZSBhY3R1YWwgZGlzZWFzZS4gCkJ1dCB1bnRpbCBJIHdhcyBjbGVhbmVkIG91dCwgdGhlIG9jY2FzaW9uYWwgc3VyZ2UgaW4gY2hpcHMgYnVveWVkIG15IHNwaXJpdHMgYW5kIGtlcHQgbWUgYXQgdGhlIHRhYmxlLiAiSWYgcGVvcGxlIGFyZSB3aW5uaW5nIGxpdHRsZSBqYWNrcG90cyBhcyB0aGV5IGdvIGFsb25nLCB0aGV5J3JlIG5vdCBrZWVwaW5nIHRyYWNrIG9mIHRoZWlyIG92ZXJhbGwgd2luIG9yIGxvc3MuIFlvdSdyZSBlbmNvdXJhZ2VkLCBidXQgZXZlbnR1YWxseSBpdCdzIGdvaW5nIHRvIGdyaW5kIHlvdSBkb3duLCBhbmQgeW91J2xsIGxvc2UgYWxsIHlvdXIgc3Rha2UuIgpUd2luIFJpdmVyIENhc2lubyB3aWxsIGFkZCAyOCB0YWJsZSBnYW1lcywgaW5jbHVkaW5nIDE2IHBva2VyIHRhYmxlcywgc3RhcnRpbmcgbGF0ZXIgdGhpcyBzdW1tZXIgYW5kIGludG8gdGhlIGVhcmx5IGZhbGwsIFR3aW4gUml2ZXIgQ2hhaXJtYW4gSm9obiBUYXlsb3IgYW5ub3VuY2VkIFR1ZXNkYXkuCkV2ZXJ5IHNpbmdsZSBjYXNpbm8gZ2FtZSBoYXMgdGhlIHJ1bGVzLCB3aGljaCB0ZWxscyB5b3UgdGhlIGhvdXNlIGVkZ2UuIFdlIHdpbGwgdGFsayBhYm91dCBob3VzZSBlZGdlIGxhdGVyLiBUaGlzIGlzIHRoZSBiYXNpYyB0aGluZyB5b3Ugc2hvdWxkIGRvIGJlZm9yZSBwbGF5aW5nIGFueSBjYXNpbm8gZ2FtZSwgY2hlY2sgb3V0IHRoZSBydWxlcywgc28geW91IHdpbGwgbm90IG1ha2Ugc3R1cGlkIG1pc3Rha2VzLiAKVGhlIFVuaXZlcnNpdHkgaGFzIDIwIHdvcmtpbmcgZGF5cyBpbiB3aGljaCB0byBkZWFsIHdpdGggdGhlIHJlcXVlc3QuLiAKVGhlIHBlb3BsZSBJIGtub3cgb24gdGhlIGxlZnQgYXJlIG1vcmUgbXkgYWdlLCBhbmQgbXVjaCBsZXNzIGdpdmluZyBvciBlbXBhdGhldGljIGluIGdlbmVyYWwuIApTbyBhIEtvYmxlbnogaXMgcHJvYmFibHkgZG9pbmcgd2hhdCBvdGhlciBlcXVpdmFsZW50IHByb2R1Y3RzIGRvICAgZXNwZWNpYWxseSBpZiBsZXNzIHRoYW4gJDEwMDAuIE1ha2UgcG93ZXIgQW55IHN1YmplY3RpdmUgc3RhdGVtZW50IGlzIGFsd2F5cyBhbmQgYmVzdCB0cmVhdGVkIGFzIGEgbGllIG9yIGEgc3RhdGVtZW50IGZyb20gc29tZW9uZSB3aXRob3V0IGFueSB0ZWNobmljYWwga25vd2xlZGdlLi4gClNvIHlvdSBtaWdodCBub3QgYmUgb3ZlcnRseSByYWNpc3QgYnV0IHlvdSBzdGF5IGhvbWUgb3IgZXZlbiB2b3RlIGZvciBvcmFuZ2UgaGl0bGVyIGJlY2F1c2UgRGVtb2NyYXRzIGhhdGUgd2hpdGUgbWVuIGFuZCBkbyBub3RoaW5nIGZvciB0aGVtIGJ1dCBkZW1vbml6ZSB0aGVtLiAKQydlc3QgdW5lIHF1ZXN0aW9uIHF1ZSBqZSBtZSBwb3NlIGRlcHVpcyBwbHVzIGQndW5lIGRpemFpbmUgZCdhbm5lcyBldCBqZSBuZSBwZW5zZSBwYXMgcXUnaWwgeSBhaXQgdW5lIHJwb25zZSB1bmlxdWUuIElsIHkgYSBiaWVuIHZpZGVtbWVudCwgZGVycmlyZSwgdW4gbm9ybWUgYnVzaW5lc3MgY29ub21pcXVlLCBtYWlzIGlsIG5lIGZhdXQgcGFzIG91YmxpZXIsIGVuIGNlIHF1aSBjb25jZXJuZSBsYSBGcmFuY2UsIHF1ZSBsZXMgb2xpZW5uZXMgc29udCBpbXBvcnRlcyBkJ0FsbGVtYWduZSBldCBxdWUgbGVzIHBhbm5lYXV4IHBob3Rvdm9sdGFxdWVzIHNvbnQgZXNzZW50aWVsbGVtZW50IGltcG9ydHMgZGUgQ2hpbmUuIERlcnJpcmUsIGlsIHkgYSB1biBub3JtZSBidXNpbmVzcyBmaW5hbmNpZXIuIEplIHJlb2lzIHVuIHBhcGllciBkZSBtYSBiYW5xdWUgcXVpIG0naW5jaXRlICBhY2hldGVyIGRlcyBvYmxpZ2F0aW9ucyB2ZXJ0ZXMsIGplIG5lIHZvaXMgcGFzIGNlIHF1J2VsbGVzIHBldXZlbnQgYXZvaXIgZGUgdmVydCBlbiBsJ29jY3VycmVuY2UsIG1haXMgaWwgcydhZ2l0IGQnaW52ZXN0aXIgdG91am91cnMgcGx1cyBkJ2FyZ2VudCBkYW5zIGNlcyBjaG9zZXMgYWxvcnMgcXVlIGwnb24gc2FpdCBkaiBxdWUgYydlc3QgcGx1cyBxdWUgZGlzY3V0YWJsZS4gTWFpcyBjZWxhIGRwYXNzZSBtYSBjb21wdGVuY2UgZGUgcGh5c2ljaWVuLgpObyB3ZWIgcGFnZXMgdGhhdCBvbmx5IGVtYmVkIFlvdXR1YmUgb3IgVmltZW8gdmlkZW9zLgpUaGUgbHV4dXJpb3VzIGZlZWxpbmcgU2xpcCBwaWxsb3djYXNlLCBtYWRlIHdpdGggMTAwIHBlcmNlbnQgbXVsYmVycnkgc2lsaywgd2FzIGFuIGVhc3kgZmF2b3JpdGUuIEl0J3MgaHlwbyBhbGxlcmdlbmljLCBwcmV2ZW50cyBza2luIGNyZWFzaW5nIGFuZCBzdGF5cyBjb29sIHRocm91Z2hvdXQgdGhlIG5pZ2h0LCB0aG91Z2ggYXQgJDg1IGFuZCB1cCwgaXQncyBvbmUgb2YgdGhlIG1vcmUgZXhwZW5zaXZlIHNpbGsgY2FzZXMgb3V0IHRoZXJlLgpDb25zaWRlciB0aGUgcHJvcG9ydGlvbnMgb2YgeW91ciBwaWN0dXJlcyBpbiB5b3VyIGZpbmFsIGNvbGxhZ2UuIFRoZSBwaWN0dXJlcyBkbyBub3QgbmVlZCB0byBiZSB0aGUgc2FtZSBzaXplLCBub3IgZG8gdGhleSBuZWVkIHRvIGJlIHRoZSBzYW1lIHNoYXBlLiBJbiBmYWN0LCBhIHJhbmdlIG9mIHNpemVzIGFuZCBzaGFwZXMgd2lsbCBnaXZlIG1vcmUgZGltZW5zaW9uIHRvIHlvdXIgY29sbGFnZSBhbmQgbWFrZSBpdCBtb3JlIGludGVyZXN0aW5nIHRvIHRoZSBleWUuIFRoaW5rIGFib3V0IGlmIHlvdSB3YW50IGEgY2VydGFpbiBwaWN0dXJlIHRvIGRvbWluYXRlIHRoZSBjb2xsYWdlIGFuZCBoYXZlIHN1Ym9yZGluYXRlIHBpY3R1cmVzIHN1cnJvdW5kaW5nIGl0LCBmb3IgZXhhbXBsZS4KSSBjb3Vuc2VsIHBlb3BsZSBhYm91dCB0aGUgc2FmZSBhbmQgaGVhbHRoeSB3YXkgdG8gZ2FpbiB3ZWlnaHQuIApKbmtzamRuem1kICA3OCBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpDcm9zc2luZ3MgYXJlIHR5cGljYWxseSBkaXZpZGVkIGludG8gMyBzZWN0aW9ucyBzdWNoIGFzIE5vcnRoIGFwcHJvYWNoLCBpc2xhbmQgYW5kIHRoZW4gc291dGggYXBwcm9hY2guIE9yIEVhc3QgYW5kIHdlc3QgZGVwZW5kaW5nIG9yIHlvdXIgcmFpbHJvYWQgYW5kIGxvY2F0aW9uLiAKR2hpc2xhaW5lIE1heHdlbGwgaGFzIGRlbmllZCBhbGxlZ2F0aW9ucyBvZiBlbmFibGluZyBhYnVzZS4uIApTdHVkaWVzIG9mIG90aGVyIHJlbGF0ZWQgY29tcGxpbWVudGFyeSB0aGVyYXBpZXMgKGFyb21hIHRoZXJhcHkgbWFzc2FnZSwgcmVmbGV4b2xvZ3ksIGx5bXBoYXRpYyBkcmFpbmFnZSBhbmQgYWN1cHVuY3R1cmUvYWN1cHJlc3N1cmUpIHdlcmUgZXhjbHVkZWQuIApTaSBsZXMgcGxhbnRlcyBvbnQgZGVzIHZlcnR1cyBtZGljaW5hbGVzLCBjIHF1IHNvbnQgZWxsZXMgbW1lcyBkZXMgZG9ucyBkdSBjaWVsIGV0IGxlcyByYWNpbmVzIGRlIGxhIHZpZS4gCkNiZXR0aW5nIGNsb3NlIHRvIDEwMCUgd2FzIGFsbCB0aGUgcmFnZSBhbmQgd2FzIGV4cGVjdGVkIHRvIHRha2UgZG93biB0aGUgcG90IGEgZmFpciBiaXQgb2YgdGhlIHRpbWUuIApIZWFsdGggY2FyZSBpcyBhIGNvbXBsZXggc3BlY3RydW0gb2YgbmVlZHMsIGVuY29tcGFzc2luZyBjaHJvbmljIGRpc2Vhc2VzLCBtZW50YWwgaGVhbHRoIGFuZCB3ZWxsbmVzcywgZW1lcmdlbmN5LCBhY3V0ZSBjYXJlLCBwb3N0IGFjdXRlIGNhcmUsIGFuZCBob21lIGNhcmUuIFRoZXJlIGlzIGdyZWF0IHZhbHVlIGluIHJlYWxpZ25pbmcgc2VydmljZXMgdG8gZW5zdXJlIHRoYXQgY29zdGx5IGluZnJhc3RydWN0dXJlIG5vdCByZXF1aXJlZCBvbiBhbiBlbWVyZ2VuY3kgYmFzaXMgaXMgYW1hbGdhbWF0ZWQgdG8gc2FmZWd1YXJkIHN1c3RhaW5hYmlsaXR5LiAKSSBhZ2FpbnN0IHBheXdhbGxzLCB2ZWhlbWVudGx5IHNvLiAKT3VpIHNpIGMnZXN0IEJlZW5hIHF1aSBsJ2EgZmFpdApBbGwgaW4gYWxsLCBhIHZlcnkgcGVyc29uYWJsZSB3b21hbiB3aG8gaXMgdmVyeSBkZWRpY2F0ZWQgdG8gcHJvdmlkaW5nIHRoZSBiZXN0IGV4cGVyaWVuY2UgcG9zc2libGUuIApUaGV5IHNvbGQgYSBwcm9wZXJ0eSBhbmQgYSBjb3VwbGUgeWVhcnMgbGF0ZXIgaGFkIG5vIG1vbmV5IGxlZnQuLiAKV2UgYWxsIHdhdGNoaW5nIHR2IGFuZCB0aGlzIG9sZGVyIGd1eSByZWxhdGl2ZSB3YWxrcyBpbiB3aXRoIGEgYnJpZWYgY2FzZSBidXQgaGUgYWludCBhIGJ1c2luZXNzIG1hbi4gCkVkaXQ6IEEgY291bnRlciBleGFtcGxlIG1pZ2h0IGJlIHNvbWV3aGVyZSBsaWtlIFJvbWUsIHdoZXJlIHRoZXJlIGlzIGV2ZW4gbW9yZSBkZXB0aCBhbmQgbGF5ZXJzIG9mIGhpc3RvcnksIGJ1dCBpbnN0ZWFkIG9mIHRob3NlIGxheWVycyBiZWluZyBkeW5hbWljIGFuZCBzdGlsbCBhbGl2ZSBhbmQgc3RpbGwgdGhlcmUgdG8gZXhwbG9yZSBhbmQgZGlzY292ZXIsIHRoZXkgYXJlIHNtb3RoZXJlZCBieSBhIHRoaWNrIHNsdWRnZSBvZiB0b3VyaXNtLCB0byB0aGUgcG9pbnQgd2hlcmUgdGhlIGNpdHkgaXMgYWxsIGJ1dCBsb3N0IGJlbmVhdGggaXRzIGNvbXBsZXRlIHN1Ym1pc3Npb24gdG8gdGhlIHNpbmd1bGFyIHB1cnBvc2Ugb2YgdG91cmlzbSBhdCBhbiBvdmVycG93ZXJpbmcgc2NhbGUuIFdoZW4geW91IGV4cGxvcmUgUm9tZSB5b3UgYXJlIG5vdCBleHBsb3JpbmcgYW4gYW5jaWVudCBidXQgbGl2aW5nIGNpdHksIHlvdSBhcmUgYmVpbmcgd2FzaGVkIHRocm91Z2ggdGhlIHN0cmVldHMgYnkgcml2ZXJzIG9mIHRvdXJpc20uIFRoZSBjaXR5IGJlbmVhdGggdGhlIHN1cmZhY2UgaGFzIGJlZW4gbG9zdC4uIApUaGUgcHJvcHJpb2NlcHRpdmUgaW5wdXRzIGZyb20gdGhlIGNlcnZpY2FsIG11c2N1bGF0dXJlIHBsYXkgYW4gaW1wb3J0YW50IHJvbGUgaW4gaGVhZCBleWUgY28gb3JkaW5hdGlvbiBhbmQgcG9zdHVyYWwgcHJvY2Vzc2VzLgpTb2FrIGluIGEgaG90IGJhdGguIApUaGV5IHdpbGwgY29udGludWUgdGhlaXIgYmFkIGJlaGF2aW9yLCBoYXJhc3NpbmcgcGVvcGxlIHdoZXRoZXIgdGhleSBhcmUgaW4gdGhlIHJpZ2h0IG9yIG5vdC4gClRoZSBmb3VuZGF0aW9uIHdhcyBhbHNvIHJlbnRpbmcgb2ZmaWNlIHNwYWNlIGluIGEgYnVpbGRpbmcgb3duZWQgYnkgV2FybmUgcGFyZW50cy4gQW4gaW5jZW5zZWQgV2FybmUgdXNlZCBoaXMgcm9sZSBhcyBhIENoYW5uZWwgTmluZSBjb21tZW50YXRvciB0byBsYXVuY2ggYSBzcGlyaXRlZCBkZWZlbmNlIG9mIHRoZSBmb3VuZGF0aW9uIGR1cmluZyB0aGUgbHVuY2ggYnJlYWsgb2YgdGhlIEFkZWxhaWRlIFRlc3QgYWdhaW5zdCBOZXcgWmVhbGFuZCBpbiBOb3ZlbWJlci4gIldlIGdvdCBhYnNvbHV0ZWx5IG5vdGhpbmcgdG8gaGlkZSBhdCB0aGUgU2hhbmUgV2FybmUgRm91bmRhdGlvbi4gClNvLCBteSBjb25zcGlyYWN5IHRoZW9yeSBpcyB0aGF0IGl0IG5vIGFjY2lkZW50IHRoYXQgdGhvc2UgR2lsZWFkIHNlY3VyaXR5IGd1eXMgY2F1Z2h0IE5pY2sgYW5kIEp1bmUgYXQgdGhlIHNhZmUgaG91c2Ugd2hlcmUgdGhleSB3ZW50IHRvIG1lZXQgSGFubmFoLiAKSnVzdCBieSB2aXJ0dWUgb2YgdGhlbSBleGlzdGluZyBpbiBHZXJtYW4gdGVycml0b3J5IGF0IHRoZSBzdGFydCBvZiB0aGUgd2FyLCBpdCB3b3VsZCBub3QgaGF2ZSBiZWVuIHNvIGVhc3kgZm9yIHRoZXNlIGZhY3RvcmllcyBub3QgdG8gaGF2ZSBiZWVuIHRha2VuIG92ZXIgaW4gc29tZSBjYXBhY2l0eS4gClRoZXkgd291bGQgaGF2ZSBhIHN1cnBsdXMgZm9yIHRyYXZlbCBvciBvdGhlciBwbGVhc3VyZXMuIFNhbGUgb2YgdGhlIHByaW5jaXBhbCBob3VzZSBhbmQgbGF0ZXIgdGhlIGNvbmRvIHdvdWxkIGxlYXZlIHRoZW0gd2l0aCB0aGUgJDY1MCwwMDAgY290dGFnZSwgbm8gZGVidHMgYW5kIGZpbmFuY2lhbCBhc3NldHMgb2YgJDEuNCBtaWxsaW9uLi4gCkxhIGNvbmN1cnJlbmNlIG4nYSBwYXMgc2EgcGxhY2UgY2FyIGlsIG5lIHMnYWdpdCBwYXMgZCd1biAgY29uY291cnMgZGUgYmVhdXQgIG1haXMgZGUgZGVzc2luZXIgbCdhdmVuaXIgZGUgbGEgc2N1cml0IGRlcyBjaXRveWVucyBldXJvcGVucy4uIApObyBvbmUgd2lsbCBncm93LiAKVGhlIFRpbW1vbnMgYnJvdGhlcnMgYW5kIEdlbmUgV2hlbGNoZWwgd2VyZSB3YWl0aW5nLiAKSG93IFRvIFN0cmV0Y2ggVXNpbmcgdGhlIE15b2Zhc2NpYWwgUmVsZWFzZSBUZWNobmlxdWUKSWYgeW91IGxpa2UgdGhlIGRlYWwgdGhleSBhcmUgb2ZmZXJpbmcgeW91IGNhbiBhY2NlcHQgaXQuIE9uY2UgeW91IGFjY2VwdCB0aGUgZGVhbCB5b3Ugd2lsbCBiZSBjYWxsZWQgdXAgaW4gZnJvbnQgb2YgdGhlIEp1c3RpY2Ugb2YgdGhlIFBlYWNlIGFuZCBhc2tlZCBpZiB5b3UgYXJlIHdpbGxpbmcgdG8gcGxlYWQgZ3VpbHR5IHRvIHRoZSByZWR1Y2VkIGNoYXJnZSwgaWYgeW91IHNheSB5ZXMgdGhlIEpQIHdpbGwgcnViYmVyIHN0YW1wIHRoZSBkZWFsIGFuZCB0aGF0IHdpbGwgYmUgdGhhdC4uIApTaSBsIGVzc2FpZSBkZSBzZSByYXBwcm9jaGVyIGRlIGxhIHBoeXNpcXVlIG9uIHBvdXJyYWl0IGRpcmUgcXVlIGwgYWdpdCBlbiB0YW50IHF1IGRlIHRvdXRlIGF1dHJlIGZvcm1lIHBlbnNlIHF1aSBzIHJhcHByb2NoZS4gTCBwZXV0IGFsb3JzIHNlIGNvbmNldm9pciBjb21tZSByZWNvdXZyYW50IGxlIG1jYW5pc21lIGVuY29yZSBpbmNvbm51IHF1aSB0ZW5kICBzeW5jaHJvbmlzZXIgZGVzIHZuZW1lbnRzIHJlbGlzIHBhciBsZSBzZW5zIChzaW1pbGFyaXQgYXJjaHR5cGFsZSkgZXQgbm9uIHBhciBsYSBjYXVzZS4uIAoiSSB3YXMgc2NyYW1ibGluZyB0aGVyZSwiIFZlbGxhIHNhaWQuICJZb3UganVzdCB3YW50IHRvIGNvbXBldGUuIApCb3JnYXRhIEhvdGVsIENhc2lubyBTcGEgaXMgYSAkMS4xIGJpbGxpb24gZGVzdGluYXRpb24gZmFjaWxpdHkgcmVzb3J0IGxvY2F0ZWQgYXQgUmVuYWlzc2FuY2UgUG9pbnRlIGluIHRoZSBNYXJpbmEgRGlzdHJpY3Qgb2YgQXRsYW50aWMgQ2l0eSwgd2l0aCBlYXN5IGFjY2VzcyB0byBuZWFyYnkgY2FzaW5vcyBhbmQgYXR0cmFjdGlvbnMuIEVuam95IHNjZW5pYyB2aWV3cyBmcm9tIHRoZSBmbG9vciB0byBjZWlsaW5nIHdpbmRvd3MsIHVud2luZCBpbiB0aGUgc3BhY2lvdXMgbWFyYmxlZCBiYXRocm9vbSB3aXRoIG92ZXJzaXplZCBnbGFzcyBzaG93ZXJzIGFuZCBnZXQgYSByZXN0ZnVsIG5pZ2h0IHNsZWVwIG9uIHRoZSBjdXN0b20gbWFkZSBTZWFseSBQbHVzaCBtYXR0cmVzcy4gVGhlIHdvcmtpbmcgdHJhdmVsZXIgd2lsbCBhcHByZWNpYXRlIFdpIEZpIEludGVybmV0IGFjY2VzcyBhbmQgdGhyZWUgZHVhbCBsaW5lIHRlbGVwaG9uZXMuIApPdmVydmlldyBmb3IgemlwZGlzcwpBIEJlZ2lubmVycyBJbnRybyB0byBPbmxpbmUgUG9rZXIKQnV0IG5vdyBzaG92aW5nIG1pZ2h0IGJlLiBUaGF0IGlzIGhvdyB0aGUgb2RkcyB3b3JrLiAKWWVzLCBoYXZpbmcgc2tpbGxzIGRpYWxlZCBpbiB3aWxsIG1ha2UgaXQgc28gdGhhdCB5b3UgZG9uIGhhdmUgdG8gdGhpbmsgc28gbXVjaCBhYm91dCB3aGF0IHlvdSBkb2luZywgYnV0IHdpdGggdGhhdCBleHRyYSBicmFpbiBzcGFjZSB5b3Ugc2hvdWxkIGJlIHBsYW5uaW5nLiAKRGFtaXQgc2luZCBpbiBXZXN0ZXVyb3BhIG5ldW4gUHJvemVudCBtZWhyIEhvdGVscHJvamVrdGUgaW4gZGVyIFBpcGVsaW5lIChhbHMgaW0gVm9yamFocmVzcXVhcnRhbCkuIERpZSBaYWhsIGRlciBpbiBCYXUgYmVmaW5kbGljaGVuIEhvdGVsemltbWVyIHN0aWVnIHVtIGRyZWkgUHJvemVudC4gRGllIG1laXN0ZW4gSG90ZWxzIHdlcmRlbiBuYWNod2lldm9yIGluIER1YmFpIHVuZCBBYnUgRGhhYmkgZ2ViYXV0LCBhdWNoIHdlbm4gZXRsaWNoZSBQcm9qZWt0ZSBkdXJjaCBGaW5hbnppZXJ1bmdzc2Nod2llcmlna2VpdGVuIGVyaGVibGljaCB2ZXJ6Z2VydCB3dXJkZW4uIAoyIGVudHJpZXMgZnJvbSBBdWd1c3QgMjAxOApUaGVyZSBhcmUgc2VyaW91cyBkaXZpZGVzIGFjcm9zcyB0aGUgcG9saXRpY2FsIHNwZWN0cnVtIGFuZCBtaXNpbmZvcm1hdGlvbiBwbGF5cyBhIGxhcmdlIHJvbGUgaW4gZXhhY2VyYmF0aW5nIHRoZSBzaXR1YXRpb24uIApKYW1lcyBDYXJsZXRvbjogQnV0IGRvZXNuJ3QgdGhhdCBpbiBzb21lIHdheXMgc3RhbmQgYXQgb2RkcyB3aXRoIHdoYXQgeW91IHdlcmUgc2F5aW5nIGJlZm9yZSwgbmFtZWx5IHRoYXQgcHJvYmxlbSBnYW1ibGluZyBpc24ndCBhIGFkZGljdGlvbiwgaXNuJ3QgYSBkaXNvcmRlciBvZiBjb21wdWxzaW9uLiBTaG91bGRuJ3QgdGhlbiB0aGUgb251cyBiZSBvbiB0aGUgaW5kaXZpZHVhbCB0byB0YWtlIG1vcmUgcmVzcG9uc2liaWxpdHk/ClNoZSBtdXN0IGJlIGhlYXJ0IGJyb2tlbiB0b2RheS4uIApXaXRoIGl0cyBsb25nIGxpc3Qgb2YgcXVhbGl0eSBmZWF0dXJlcyBhbmQgdW5jbHV0dGVyZWQgc3BhY2lvdXNuZXNzLCB0aGUgaG91c2Ugb2ZmZXJzIGEgbHV4dXJ5IGxpZmVzdHlsZSB0aGUgd2hvbGUgZmFtaWx5IGNhbiBlbmpveS4uIApIeXBlcmdyaXBpNSAyNTAwLCA4R0IgcmFtLCBHVFg5NzAKS2FubiBkZXIgUGF0aWVudCBkaWUgQnVjaHVuZyBuYWNoIGRlbSBiZXphaGxlbiwgc3Rvcm5pZXJlbi4KQSBjYXBzdWxlIGxhdW5jaGVkIGxhc3Qgd2VlayB3aXRoIGEgZHVtbXkgbmlja25hbWVkICJSaXBsZXkiIGFib2FyZCwgYSByZWZlcmVuY2UgdG8gdGhlIGhvcnJvciBmaWxtIEFsaWVuLHN1Y2Nlc3NmdWxseSByZWFjaGVkIHRoZSBJbnRlcm5hdGlvbmFsIFNwYWNlIFN0YXRpb24gYW5kIGlzIGR1ZSB0byByZXR1cm4gdG8gZWFydGggdGhpcyB3ZWVrZW5kLiAKSmVyaSBpcyBhbiBhY2NvdW50YW50IGJ5IHRyYWRlIGFuZCBtYW5hZ2VzIFJhZGlvIFNoYWNrIGluIEphbWVzdG93bi4gU2hlIHNhaWQgcGxheWluZyBwb2tlciB0YWtlcyA5NSBwZXJjZW50IGx1Y2ssIDQgcGVyY2VudCBza2lsbCBhbmQgMSBwZXJjZW50IGthcm1hLiBTaGUgc2FpZCBzaGUgcGxheXMgdGhlIGdhbWUgb2YgYmx1ZmZpbmcgYnkgaGVyIGd1dCBmZWVsaW5ncy4KTm93LCB5b3UgbWF5IGFzaywgaG93IGNhbiB5b3UgZ2V0IGhvbGQgb2YgdGhpcyBhbG1vc3QgbWFnaWNhbCBmcmVlIHBva2VyIHNvZnR3YXJlPyBXZWxsLCB0aGUgYW5zd2VyIGlzIGEgc2ltcGxlIG9uZS4gQWxsIHlvdSBoYXZlIHRvIGRvIGlzIHNlYXJjaCB0aGUgSW50ZXJuZXQgYW5kIGZpbmQgb3V0IHNvbWUgY3JlZGlibGUgc2l0ZXMgd2hlcmUgeW91IGNhbiBkb3dubG9hZCB0aGlzIHNvZnR3YXJlLiBIb3dldmVyLCBkbyBrZWVwIGluIG1pbmQgbm90IHRvIHBheSBldmVuIGEgc2luZ2xlIHBlbm55IGZvciB0aGlzIGZyZWUgc29mdHdhcmUuIApUaGUgU2NpZW50aWZpYyBNZXRob2QgYW5kIFRydXRoTm90aGluZyBpcyBldmVyIHByb3ZlbiB0byBiZSBhYnNvbHV0ZWx5IHRydWUgaW4gc2NpZW5jZSBhbmQsIHRvZ2V0aGVyIHdpdGggdGhlIHVzZSBvZiB0aGUgd29yZCB0aGVvcnksIGV2ZW4gb24gc29tZXRoaW5nIGxpa2UgdGhlIFRoZW9yeSBvZiBHcmF2aXR5LCB3aGljaCBhbG1vc3QgYW55b25lIHdvdWxkIGNvbnNpZGVyIGEgdHJ1dGgsIHRoaXMgbGVhZHMgbWFueSBwZW9wbGUgdG8gdGhpbmsgc2NpZW5jZSBpc24ndCB0aGUgYW5zd2VyLiAKQSBwcmVidWlsdCBzaG91bGQgaGF2ZSB0aGVybWFsIHBhc3RlIHByZSBhcHBsaWVkLCBzbyB5b3Ugc2hvdWxkIGJlIGZpbmUgb24gdGhhdCBmcm9udCwgYW5kIHByZWJ1aWx0cyB1c3VhbGx5IGNvbWUgd2l0aCBhdCBsZWFzdCAyIGNhc2UgZmFucyAobm90IHRoZSBiZXN0IHF1YWxpdHkgdGhvdWdoLCBJIHJlcGxhY2UgdGhvc2UgYmVjYXVzZSB0aGV5IGNhbiBnZXQgbG91ZCkuIApUaGlzIHdlYWtlbnMgeW91ciBpbWFnZSBpbmNyZWRpYmx5LiAKTWFpcyBsZXMgY2lyY29uc3RhbmNlcyBuZSBsZSBwZXJtZXR0ZW50IHBhcyB0b3Vqb3Vycy4gClNBRERZLCBGcmVkZXJpY2sgSm9zZXBoICAgSmFudWFyeSAyOCwgMjAxNywgcXVpZXRseSBhdCBQYXJrd29vZCBIb3NwaXRhbCBWZXRlcmFucyBXaW5nLCB3aXRoIGZhbWlseSBieSBoaXMgc2lkZSwgRnJlZGVyaWNrIEpvc2VwaCBTYWRkeSBpbiBoaXMgOTd0aCB5ZWFyOyBnb25lIHRvICJ0aGUgYmlnIGF1dG8gd3JlY2tlcnMgaW4gdGhlIHNreS4iIEJvcm4gaW4gTG9uZG9uIE9udGFyaW8gaW4gMTkyMC4gCkFsc28sIHlvdSBoYXZlIHRvIGNoaXAgaW4vcGF5IHRvIHBsYXksIGFuZCB0aGUgcHJpY2UgZ29lcyB1cCBhcyB0aGUgbnVtYmVyIG9mIHBsYXllcnMgZHdpbmRsZSBpbiB0aGUgdG91cm5hbWVudC4gQnV0ICJmcmllbmRseSIgcG9rZXIgY2FuIGhhdmUgdGhlIGV4cGVjdGVkIG91dGNvbWUgZ28gd3JvbmcgYW5kIGNhdXNlIHlvdSB0byBsb3NlIHlvdXIgc3RhY2ssICh0byBzYXkgbm90aGluZyBvZiBydWluaW5nIHlvdXIgY3JlZGl0LCB3aGVuIGJvcnJvd2luZyB0byBwYXkgZ2FtYmxpbmcgZGVidHMpIGFuZCBwb3NzaWJseSBsb3NlIGZhY2UveW91ciByZXB1dGF0aW9uISBCeSBiZXR0aW5nIG1vbmV5IGludG8gYSBwb3QgdGhhdCB5b3Uga25vdyB5b3UncmUgbm90IGxpa2VseSB0byB3aW4sIHlvdSdyZSB0YWtpbmcgYmlnIHJpc2tzIChhbmQsIGlmIHlvdSBmb2xkIHlvdXIgYmV0L3dhZ2VyZWQgbW9uZXkgc3RheXMgaW4gdGhlIHBvdCkuIApXaGVuIGl0IGlzIHlvdXIgdGltZSwgbXkgZmxhcCBpcyBvcGVuIGFuZCB0aGUgaGFwcHkgaHVudGluZyBncm91bmRzIGJvdW50aWZ1bC4gCkRlc3BpdGUgdGhlIGRldGFpbHMgb2YgdGhlIG1hcnJpYWdlIGJyZWFrZG93biwgSnVzdGljZSBNZXNidXIgc3VjY2luY3RseSBkZXNjcmliZWQgdGhlIGxlbmd0aHkgdHJpYWwgYmVmb3JlIGhlciwgYXMgZm9sbG93czogdGhlIHJlYWwgY29uZmxpY3QgYmV0d2VlbiB0aGUgcGFydGllcyBsaWVzIG5vdCBpbiB0aGUgaGlzdG9yaWNhbCBmYWN0cyBvZiB0aGVpciBjYXNlIG9yIHdobyBkaWQgd2hhdCwgYnV0IHJhdGhlciBvbiB0aGUgY29uc2lkZXJhYmxlIGRpZmZlcmVuY2UgaW4gdGhlIGV4cGVydCBvcGluaW9ucyBlYWNoIGhhcyBwcm9mZmVyZWQgYm90aCB0byBkZXRlcm1pbmUgdGhlIHZhbHVlIG9mIHRoZXNlIGFzc2V0cyBhbmQgdG8gZGV0ZXJtaW5lIE1yLiAKJ1RoZSBCYXJuIFN3YWxsb3dzJyBpcyBsaWdodApQb29yIHBlb3BsZSBjYW50IGFmZm9yZCB0byBmYWlsLCByaWNoIHBlb3BsZSBjYW4gZmFpbCB1bnRpbCB0aGV5IGJlY29tZSBzdWNjZXNzZnVsLiBUaGlzIGlzIGV4YWN0bHkgaG93IHRoZXkgZG8gaXQuIE9uY2UgYSBwb29yIHBlcnNvbiBmYWlscywgdGhhdCB1c3VhbGx5IGl0IGZvciB0aGVtLiAKQnV0IHdoYXQgYSBwYWluIGl0IGlzIHRvIGdldCB0aGF0IHN0dWZmIHN0YXJ0ZWQgYXMgb3Bwb3NlZCB0byBkb2luZyB0aW1lIHdhc3RpbmcgcmVjcmVhdGlvbi4gCkhlIHJlcG9ydHMgdGhlIGNhciBzdG9sZW4gdG8gcG9saWNlLiAKVmV0ZXJhbiBNZWxib3VybmUgcHJvcGVydHkgZGV2ZWxvcGVyIE1heCBCZWNrIG9mZmljaWFsbHkgcmV0aXJlZCBmcm9tIGxpc3RlZCBwcm9wZXJ0eSBjb21wYW55IEJlY3RvbiBpbiBBcHJpbCAyMDA4LCBidXQgaGUgaXMgc3RpbGwgbWFuYWdpbmcgdG8ga2VlcCBoaXMgaGFuZCBpbiB0aGUgcHJvcGVydHkgZ2FtZS4gQXMgd2VsbCBhcyBoZWxwaW5nIHdpdGggdGhlIGRldmVsb3BtZW50IG9mIG1peGVkIHVzZSBwcmVjaW5jdCBFc3NlbmRvbiBGaWVsZHMsIEJlY2sgaGFzIGVtZXJnZWQgYXMgdGhlIG1vbmV5IGJlaGluZCBCZWNrIFByb3BlcnR5IEdyb3VwLCBydW4gYnkgaGlzIHNvbnMgYW5kIGEgZm9ybWVyIEJlY3RvbiBleGVjdXRpdmUuIApXaGVuIGEgZ3V5IGphY2tzIG9mZiwgdGhlcmUncyBraW5kIG9mIGEgc21hbGwgYnVyc3QsIGFuZCB5b3Ugc2l0IHRoZXJlIGZvciBhIGNvdXBsZSBzZWNvbmRzLCB0aGVuIHlvdSBqdXN0IGtpbmQgb2Ygc2hydWcgYW5kIGNsZWFuIHdoYXRldmVyIHVwIGFuZCBtb3ZlIG9uIHdpdGggeW91ciBkYXkuIFdoZW4gYSBndXkgb3JnYXNtcywgdGhlaXIgcGVsdmlzIGtpbmRhIHNob290cyBmb3J3YXJkIHdpdGggYSBtaW5kIG9mIHRoZWlyIG93biwgdGhlaXIgd2hvbGUgaGVhZCBraW5kYSB0ZW5zZXMgdXAgd2l0aCBhIG1hc3NpdmUgYmxvb2QgcnVzaCwgYW5kIHRoZXkncmUgbGVmdCB0byBsaWUvc2l0IGRvd24gZm9yIGEgZ29vZCBmZXcgbWludXRlcyBiZWZvcmUgY29sbGVjdGluZyB0aGVtc2VsdmVzLiAKT24gdGhlIG90aGVyIGhhbmQsIGFuYWwgc2V4IGNhbiBiZSBvbmUgb2YgdGhlIG1vc3QgZXJvdGljIGFuZCBzYXRpc2Z5aW5nIHNleHVhbCBwcmFjdGljZXMgYSB3b21hbiBjYW4gZW5qb3kuIEl0IGEgZGlmZmVyZW50LCB0aWdodGVyIHNlbnNhdGlvbiB0aGFuIHZhZ2luYWwgc2V4LCBhbmQsIGlmIHRoZSBjbGl0b3JpcyBhbmQvb3IgdmFnaW5hIGFyZSBzdGltdWxhdGVkIHdoaWxlIHlvdSBpbnNpZGUgaGVyLCBpdCBjYW4gdGFrZSBoZXIgdG8gYW5vdGhlciBzZXh1YWwgcmVhbG0uLiAKU2xlZXBpbmcgaXMgc3RpbGwgdW5jb21mb3J0YWJsZSwgYnV0IGl0IGdldHRpbmcgYmV0dGVyIGVhY2ggbmlnaHQuIEkgY291bGRuIGRvIGFueSBvZiB0aGF0IGJlZm9yZSBMIEdsdXRhbWluZS4gClN1cmUsIG1heWJlIHdlIGRvbiBrbm93IHRoZSB3aG9sZSBzdG9yeSwgYnV0IGhlIGp1c3QgbG9va2luZyBmb3IgYSBsaXR0bGUgYWR2aWNlLiAKVG8gbXkgRXVyb3BlYW4gaG9taWVzOiBJIGRpZCBub3QgbWVhbiB0byBvZmZlbmQuIEkgbGl2ZSBpbiBTcGFpbiBub3cgYW5kIGxpZmUgaXMgd29uZGVyZnVsIGhlcmUuIEhvd2V2ZXIsIEkgd2FzIG9iamVjdGl2ZWx5IG11Y2ggd2VhbHRoaWVyIGluIHRoZSBVUyBjb21wYXJlZCB0byBteSBsaWZlIGluIFVLLCBJcmVsYW5kLCBvciBTcGFpbi4gSSByZW1pbmQgeW91IG9mIHRoZSBvYnZpb3VzOiBObyBjb3VudHJ5IGlzIG9yIGFuZCB0aGF0IGFsbCBoYXZlIHRoZWlyIHByb3MgYW5kIGNvbnMuIEhlYWx0aGNhcmUgaXMgbW9yZSBleHBlbnNpdmUgaW4gdGhlIFVTLCBidXQgaG91c2luZyBpcyBtb3JlIGV4cGVuc2l2ZSBpbiBJcmVsYW5kLiBVbml2ZXJzaXR5IGlzIG1vcmUgZXhwZW5zaXZlIGluIHRoZSBVUywgYnV0IGdhc29saW5lIGlzIG1vcmUgZXhwZW5zaXZlIGluIEVuZ2xhbmQuIE1vYmlsZSBwaG9uZSBjb250cmFjdHMgYXJlIG1vcmUgZXhwZW5zaXZlIGluIHRoZSBVUywgYnV0IGVsZWN0cm9uaWNzIGFyZSBtb3JlIGV4cGVuc2l2ZSBpbiBTcGFpbi4gSXQganVzdCB0aGUgd2F5IGl0IGlzLCBmb2xrcy4KKENoZWFwZXIgdG8gYnVpbGQgY29tcGFyZWQgdG8gcmFpbCkgQnVzIHJvdXRlcyBjaGFuZ2UsIGJ1cyByb3V0ZXMgZG9udCBoYXZlIGZpeGVkIHN0b3BzLCBidXNlcyBhcmUgaGFyZCB0byByZWFkL3dvcmsvbGFwdG9wIG9uLCBidXNlcyBoYXZlIGFjY2Vzc2liaWxpdHkgaXNzdWVzLiBBIHRyYW0gZG9lcyBhbGwgb2YgdGhlIGFib3ZlIGJldHRlciBhbmQgaGFzIGZhciBtb3JlIHNjYWxhYmlsaXR5ICh2b2x1bWUgb2YgcGVvcGxlIG1vdmVkKSB0aGFuIGFueSBidXMgc3lzdGVtL2RlZGljYXRlZCBsYW5lLiBJdCBhbHNvIGVuY291cmFnZXMgaGlnaGVyIGRldmVsb3BtZW50IGRlbnNpdHkgYW5kIGhpZ2hlciBxdWFsaXR5IG9mIGRldmVsb3BtZW50LiAKSWYgeW91IHJ1biwgeW91IGp1c3QgY29uY2VkZWQgdGhlIGNob2tlIGFuZCBmYWlsZWQgYXMgYSB0YW5rLiAKSSBoYXZlIHBsaWdodGVkIG15IHRyb3RoIHRvIG1hc3NhZ2UsIGhhdmUgYmVlbiBtYWtpbmcgbXkgbGl2aW5nIHRoYXQgd2F5IGZvciAxNSB5ZWFycyBub3cgKGNhbid0IGJlbGlldmUgaXQgaGFzIGJlZW4gdGhhdCBsb25nKSwgbGl2ZSBpbiB0aGUgaGVhcnQgb2YgYmx1ZWdyYXNzLCBibHVlcyBhbmQgY291bnRyeSBjb3VudHJ5LCBkbyBub3QgcGxheSBjaGFtYmVyIG11c2ljIGF0IGFsbCBleGNlcHQgb24gdGhlIHN0ZXJlby4gCkFueXdheSwgaG91c2UgaXMgYXdlc29tZSBub3csIHN1cGVyIGdsYWQgSSBtYWRlIHRoZSBkZWNpc2lvbiwgYnV0IHllYWggdGhlICJmcmVlIGhvdXNlIiB0aGluZyBpcyB2ZXJ5IGRpc2luZ2VudW91cy4gWW91IGhhdmUgdG8gYmUgYSB2ZXJ5IHBhcnRpY3VsYXIga2luZCBvZiBwZXJzb24gdG8gd2FudCB0byBsaXZlIHdoZXJlIEkgZG8sIHdpdGggdGhlIGZpbmFuY2VzIHRvIGhhbmRsZSBhbGwgdGhlIHVuZm9yZXNlZW4gY3JhcCB0aGF0IGNvbWVzIHdpdGggbWFraW5nIGFuIG9sZCBob3VzZSBuaWNlLi4gCkFzIG11Y2ggYXMgSSBsb3ZlIE5pY2ssIEkgZG9uIGtub3cgdGhhdCBoZSB3aWxsIHRha2Ugb24gYSBiaWdnZXIgcm9sZS4gV2UgYmVlbiB0b2xkIHRocm91Z2ggaW50ZXJ2aWV3cyB0aGF0IEp1bmUgcmVhbGx5IGlzIG1lYW50IHRvIGJlIHRoZSBtYWluIGNoYXJhY3RlciwgYW5kIHdlIGFyZSBzdXBwb3NlZCB0byBzZWUgdGhlIHNob3cgcHJpbWFyaWx5IHRocm91Z2ggaGVyIGxlbnMuIEkgbm90IGNvbmZpZGVudCB0aGF0IEp1bmUgd2lsbCBnZXQgdG8gc2VlIE5pY2sgYSB3aG9sZSBsb3QgaW4gU2Vhc29uIDMsIHNvIEkgbm90IHN1cmUgdGhhdCB3ZSB3aWxsIGVpdGhlci4gClRoZWlyIGdlbmVzZWVkIGlzIGJlbGlldmVkIHRvIGJlIGNoaW1lcmljLCBtYW55IHRoZW9yaWVzIGV4aXN0IHRvIHRoZWlyIGdlbmUgZmF0aGVycy4gVGhlIGNoYXB0ZXIgaXMgbGVkIGJ5IHRoZSBsZWdlbmRhcnkgQXN0YXJ0ZXMsIEFzdGVyaW9uIE1vbG9jLiBIZSBpcyBhIHBvd2VyZnVsIGN1c3RvZGVzIGFzdGFydGVzIHdobyB1c2VzIGEgc3BlYXIgYW5kIHNoaWVsZC4gCkknbSBzdXJlIHlvdSBrbm93IHRoZSB0aGluZ3MgSSdtIHNheWluZywgYnV0IEkgd2FudCB0byBzdHJlc3MgaXQsIGJlY2F1c2UgcGFydCBvZiB0aGUgcHJvYmxlbSB0aGF0IHByb3BlbHMgZWF0aW5nIGRpc29yZGVycyBhbmQga2VlcHMgcGVvcGxlIGZyb20gcmVjb2duaXppbmcgdGhlbSBpcyB0aGlzIGlkZWEgdGhhdCB0aGVyZSBpcyBzb21lIHZlcnkgc3RyaWN0IHNldCBvZiBzdGFuZGFyZHMgZm9yIHdobyBkb2VzIGFuZCBkb2Vzbid0IG5lZWQgaGVscC4gRmF0IHBlb3BsZSwgc2tpbm55IHBlb3BsZSwgbXVzY3VsYXIgcGVvcGxlLCB2ZWdldGFyaWFucywgbm9uIHZlZ2V0YXJpYW5zLCBwZW9wbGUgd2hvIGxpa2UgdG8gd29yayBvdXQsIHBlb3BsZSB3aG8gaGF0ZSB3b3JraW5nIG91dCwgcGVvcGxlIHdobyBlYXQgWCBvciBZIG51bWJlciBvZiBjYWxvcmllcyAgdGhleSBjYW4gYWxsIGhhdmUgZWF0aW5nIGRpc29yZGVycy4gWW91IGFuZCBJIGNhbid0IGRpYWdub3NlIGhlciwgYnV0IGlmIGZvb2QgYW5kL29yIHdlaWdodCBhcmUgY2F1c2luZyBoZXIgZGlzdHJlc3MsIHNoZSBuZWVkcyBzb21lIGtpbmQgb2YgaGVscC4KVGhlIGhvdXNlIGNhbiBnZXQgd2F5eXkgb3V0IG9mIGhhbmQgdmVyeSBmYXN0IGp1c3QgZnJvbSB0aGUgU2FpbnQgZXhpc3RpbmcgaW4gaXQgZm9yIGEgZmV3IHdlZWtzLiBCdXQgdGhleSBhcmUgc3VjaCBnb29kIGRvZ3MuCkZvciBleGFtcGxlOiB5b3UgaG9sZCBBY2UgYW5kIGEgUXVlZW4gJ29mZiBzdWl0JywgYW5kIHRoZSBmbG9wIHdhcyBRdWVlbiBvZiBoZWFydCwgVGVuIG9mIGNsdWJzIGFuZCA2IG9mIGNsdWJzLCB0aGUgdHVybiB3YXMgNSBvZiBoZWFydCwgYW5kIHRoZSByaXZlciBpcyA4IG9mIGNsdWJzICAgd2l0aCB0aGlzIGJvYXJkIGl0IGlzIG5vdCBzbWFydCB0byBiZXQuLiAKVGhhdCBtZWFudCBvY2Nhc2lvbmFsbHkgZG9pbmcgdGhpbmdzIGxpa2Ugc3BlbmRpbmcgdGhlIHdob2xlIGRheSBpbiBiZWQgd2F0Y2hpbmcgTmV0ZmxpeCBvciBnb2luZyB0byBhIGNhZmUgb3IgcGFyayBhbmQganVzdCByZWFkaW5nIGEgYm9vayBhbGwgZGF5IHdpdGhvdXQgZmVlbGluZyBndWlsdHkgYWJvdXQgbm90ICJkb2luZyIgYW55dGhpbmcuIApIZXJtZXMnIHN0b3J5IGlzIGNvbW1vbiBhbW9uZyBuYXR1cm9wYXRoaWMgcGh5c2ljaWFucyBhbmQgdGhlaXIgcGF0aWVudHMuIFRoZXkgaGFkIGEgY2hyb25pYyBhbmQgcGFpbmZ1bCBjb25kaXRpb24gdGhhdCB3YXMgZWl0aGVyIGRpc21pc3NlZCBieSBkb2N0b3JzIG9yIG92ZXJtZWRpY2F0ZWQuIFNlYXJjaGluZyBmb3IgcmVsaWVmLCBvciBldmVuIGp1c3Qgc29tZW9uZSB3aG8gd291bGQgbGlzdGVuLCB0aGV5IGxvb2tlZCBiZXlvbmQgY29udmVudGlvbmFsIFdlc3Rlcm4gbWVkaWNpbmUuIApIb3cgbXVjaCBtb3JlIGFyZSB0aGV5IHBheWluZz8gRG9lcyB0aGF0IGNvdmVyIHRoZSBjb3N0IG9mIHRoZSByZW5vdmF0aW9uPyBEb2VzIHRoZSByZW5vdmF0aW9uIGluY3JlYXNlIHRoZSBob21lJ3MgdmFsdWU/IEJ5IGhvdyBtdWNoP1doYXQgdGltZSBmcmFtZSBkbyB5b3UgaGF2ZSB0byBjb21wbGV0ZSB0aGUgYmFzZW1lbnQ/IFdobyBpcyBkcmF3aW5nIHVwIHRoYXQgY29udHJhY3Q/IFdoYXQgaWYgeW91IGRvbid0IGNvbXBsZXRlIGl0IGluIHRpbWU/IFdoYXQgaGFwcGVucyBpZiB0aGUgd29yayBpcyBub3QgdG8gdGhlaXIgc2F0aXNmYWN0aW9uP0xvb2sgYXQgdGhpcyBzaXR1YXRpb25saWtlIGEgcG9rZXJ3YWdlci4gClNlYmVsdW0gQW5kYSBtZW1pbGloIHNlY2FyYSBvbmxpbmUga2FtYXIgdGVyYmFpayBwb2tlciwgbWVtYmFjYSB0dWxpc2FuIGtlY2lsIGRlbmdhbiBzeWFyYXQgZGFuIGtldGVudHVhbiBzaXR1cyAnLiBBbmRhIG11bmdraW4gbWVuZGFwYXRrYW4gYmFpayB0ZXJrZWp1dCBkZW5nYW4gYmViZXJhcGEgZGFyaSBtZXJla2EuIApUaGUgZmVkZXJhbCBnb3Zlcm5tZW50IGhhcyBzdGF0ZWQgdGhhdCBpdCB3b3VsZCBub3Qga2VlcCBhbnkgZGlyZWN0IHByb2NlZWRzIGZyb20gY2FyYm9uIHBvbGx1dGlvbiBwcmljaW5nLi4gCkh1dGNoaW5zb24gc2FpZCB0aGF0IGhlIHdhcyB3YWl0aW5nIGZvciBCZWViZSdzIG9waW5pb24gdG8gZGV0ZXJtaW5lIHdoZXRoZXIgdG8gc3VibWl0IGEgYmlsbCBhZGRyZXNzaW5nIHRoZSBpc3N1ZS4gCiJBbmQgdG8gdGhpbmsgbXkgYm9vayBpcyB0byBiZSB3cml0IGJ5IHRoZSBzY2hvb2xtYXN0ZXIncyBncmFuZHNvbiEiIGV4Y2xhaW1lZCBDYXB0YWluIEppbS4gIkxhZCwgeW91ciBncmFuZGZhdGhlciB3YXMgbXkgZGVhcmVzdCBmcmllbmQuIEkgdGhvdWdodCB0aGVyZSB3YXMgbm9ib2R5IGxpa2UgaGltLiBJIHNlZSBub3cgd2h5IEkgaGFkIHRvIHdhaXQgc28gbG9uZy4gSXQgY291bGRuJ3QgYmUgd3JpdCB0aWxsIHRoZSByaWdodCBtYW4gY29tZS4gWW91IEJFTE9ORyBoZXJlIHlvdSd2ZSBnb3QgdGhlIHNvdWwgb2YgdGhpcyBvbGQgbm9ydGggc2hvcmUgaW4geW91ICB5b3UncmUgdGhlIG9ubHkgb25lIHdobyBDT1VMRCB3cml0ZSBpdC4iCkhlIHN0b3BwZWQgc3RlcHBpbmcgdXAgdG8gbGVhZCBvbmNlIGhlIGhhZCBhY2hpZXZlbWVudHMgaGUgY291bGQgcmVzdCBvbi4gSGUgY291bGQgaGF2ZSBzdGVwcGVkIGJhY2sgdXAgd2hlbiBCaXNjdWl0IGRpZWQsIGJ1dCBpbnN0ZWFkIGhlIHN0ZXBwZWQgYmFjayBhbmQgYWxsb3dlZCBNaWthIHRvIHRha2Ugb3Zlci4gTGl0dGxlIHN0ZXBzIHRoYXQgY291bGQgaGF2ZSBoYWQgYSBiaWcgaW1wYWN0LlNvIHNlZWluZyB0aGUgc2NlbmUgdG9kYXkgd2l0aCBFdWdlbmUgdGFsa2luZyBhYm91dCBob3cgdGhleSAibWFkZSBoaW0gdGFrZSB0aGlzIHBhdGgiIHdhcyBib3RoIHBhaW5mdWwgYW5kIHNhdGlzZnlpbmcuIApJJ3ZlIHNlZW4gc2V2ZXJhbCBicmVha2Rvd25zLCBtb3N0IG5vdGFibHkgdGhlIEdyYWNpZSBicmVha2Rvd24sIGJ1dCBJIGNhbid0IHJlY2FsbCB0aGUgbGFzdCB0aW1lIHNvbWVvbmUgYWN0dWFsbHkgd2VudCBvdXQgZnJvbSBhIGNob2tlIGFwcGxpZWQgdG8gdGhlIGNoaW4uIApMJ2VtcGxvaSBkJ3VuZSBtYXRpcmUgcGVybWV0dGFudCBsYSBwdXJpZmljYXRpb24gc2VtYmxlIGRvbmMgdHJlIHVuIGJvbiBtb3llbiBkZSBzZSBsaWJyZXIgZGUgbGEgY29uZGl0aW9uIG1vcnRlbGxlLCBwcm9wcmUgIGwnSG9tbWUsIGMnZXN0IHNhbnMgZG91dGUgY2UgcXVpIGV4cGxpcXVlIHF1ZSAgZGUgc3VhdmVzIGFybWVzIHNlIGRnYWdyZW50IGR1IHNwdWxjcmUgb3V2ZXJ0IGRlIG5vbWJyZXV4IHNhaW50cyBwcnNlbnRhbnQgdW4gY29ycHMgaW50YWN0IGRlcHVpcyBkZXMgYW5uZXMsIHZvaXJlIGRlcyBzaWNsZXMgICgxMCkuLiAKT2JzZXJ2YXRpb25zIGluZGljYXRlIGxhY2sgb2YgYWRlcXVhdGUgc2VjdXJpdHksIHByb3BlciByZWNvcmQga2VlcGluZywgcHJvcGVyIG92ZXJzaWdodCBvZiB0aGUgZ2FtaW5nIG9wZXJhdGlvbnMsIGFuZCBpbGxlZ2FsIG5vbiBjaGFyaXRhYmxlIGdhbWJsaW5nLCIgS2FsbSBzYWlkIGluIGFhY2NvbXBhbnlpbmcgdGhlIG5ldyBydWxlcy4gS2FsbSBub3RlZCB0aGF0IGZyb20gSmFudWFyeSAyMDEwIHRocm91Z2ggTWFyY2ggMjAxMywgdGhlcmUgd2VyZSBhdCBsZWFzdCBmb3VyLCA0NyBhc3NhdWx0cywgdGhyZWUgd2VhcG9ucyBvZmZlbnNlcywgNzIgZGlzb3JkZXJseSBwZXJzb25zIGFuZCAxMSBmcmF1ZCBjYXNlcyBhdCBwZXJtYW5lbnQgcG9rZXIgcm9vbXMsIG5vdCBpbmNsdWRpbmcgc2V2ZXJhbCBvbmdvaW5nIGludmVzdGlnYXRpb25zLiBJbiAyMDA5IGEgc2hvdGd1biB3aWVsZGluZyBtYW4gd2FzLiAKQW5zd2VyIHdhcyB0aGF0IHRoZXkgd2VyZSBGSVQgVE8gUlVMRSAgZml0IGluIHRoZSBtZW50YWwgc2Vuc2UsIGJ1dCBhbHNvIHRoZSBwaHlzaWNhbCBvbmUuIEJvdXJnZW9pc2llIHBhaW50ZWQgdGhlIHVwcGVyIGNsYXNzZXMgYXMgYSBidW5jaCBvZiBkZWJhdWNoZWQgYW5kIGVmZmV0ZSBtYWxlcyB3aG8gY291bGQgbm90IG1hbiB1cCB0byB0aGUgam9iIG9mIHJ1bm5pbmcgV2FsbCBTdC4gCkZ1bGwsIGNvbXBsZXRlIHRvdGFsIGltbWVyc2lvbiB3b3VsZCBoYXZlIHRvIGJlIHRoZSBmaXJzdCB0aW1lIEkgcGxheWVkIFNreXJpbSBhbmQgQmF0dGxlZnJvbnQuIApBbmVzdGhlc2lhIHByZXZlbnRzIHRoZSBjb25zY2lvdXMgbWluZCBmcm9tIGZvcm1pbmcgcGFpbiBtZW1vcmllcyBkdXJpbmcgYSBwdXJwb3NlZnVsIGluanVyeSBsaWtlIHN1cmdlcnkuIFlldCwgdGhlIG5lcnZvdXMgc3lzdGVtIGNhbiBzdGlsbCBmb3JtIGl0cyBvd24gcGFpbiBtZW1vcmllcy4gCk9wcG9ydHVuaXRpZXMgT3Bwb3J0dW5pdGllcyBhYm91bmQgd2l0aCB0aGUgZGF5IHNhbG9uIGJ1c2luZXNzLiBBbiBlY29ub21pYyB0dXJuYXJvdW5kIGNhbiBncmVhdGx5IGltcGFjdCB0aGUgc3VjY2VzcyBvZiB0aGlzIHR5cGUgb2YgY29tcGFueS4gCkF0IHRoaXMgcG9pbnQsIGlmIHlvdSBsb3NlIGFsbCB5b3VyIGNoaXBzLCB5b3UgYXJlIG91dCBvZiB0aGUgdG91cm5hbWVudCBmb3IgZ29vZC4gSXQncyB0eXBpY2FsIGZvciByZSBidXlzIGFuZCBhZGQgb25zIHRvIGJlIGF2YWlsYWJsZSBmb3IgdGhlIGZpcnN0IGhvdXIgb2YgcGxheS4uIApJbCBuJ3kgYSBxdScgdmVuaXIgbm90YW1tZW50IHN1ciBsYSBwbGFjZXR0ZSBDaGFyYm9ubmlyZSBlbiBmaW4gZGUgam91cm5lIHBvdXIgcydlbiByZW5kcmUgY29tcHRlLiAKQW4gZXN0aW1hdGVkIDIyLDAwMCBwZW9wbGUgd2VyZSBhdHRlbmRpbmcgdGhlIFJvdXRlIDkxIEhhcnZlc3QgTXVzaWMgRmVzdGl2YWwgaW4gYW4gb3V0ZG9vciBhcmVhIGtub3duIGFzIHRoZSBMYXMgVmVnYXMgVmlsbGFnZSBTdW5kYXkgbmlnaHQsIHdoZW4gdGhlIHNob290aW5nIGJlZ2FuLiBBY2NvcmRpbmcgdG8gTGFzIFZlZ2FzIE1ldHJvcG9saXRhbiBQb2xpY2UgU2hlcmlmZiBKb3NlcGggTG9tYmFyZG8sIDY0IHllYXIgb2xkIFN0ZXBoZW4gQ3JhaWcgUGFkZG9jayBvZiBuZWFyYnkgTWVzcXVpdGUsIE5ldmFkYSwgb3BlbmVkIGZpcmUgZnJvbSBoaXMgaG90ZWwgcm9vbSBpbiB0aGUgTWFuZGFsYXkgQmF5IENhc2lubyBkaXJlY3RseSBhY3Jvc3MgdGhlIHN0cmVldCBmcm9tIHRoZSBmZXN0aXZhbC4gClRoZSBwYWluIGZyb20gcG9raWVzIGxvc3NlcyBpcyBzb2FyaW5nLiBJdCdzIGNhdXNpbmcgZGV2YXN0YXRpbmcgaGFybSB0byBwZW9wbGUgYWNyb3NzIHJ1cmFsIGFuZCByZWdpb25hbCBWaWN0b3JpYS4gRnJvbSByZWxhdGlvbnNoaXAgYnJlYWtkb3ducywgZmFtaWx5IHZpb2xlbmNlIGFuZCBtZW50YWwgaWxsbmVzcyB0byBpbmNyZWFzZWQgY3JpbWUgcmF0ZXMgYW5kIGxvc3Mgb2YgbGlmZS4gCk1pcmFjdWxvdXNseSwgaGUgc3Vydml2ZWQsIGJ1dCBldmVuIG1vcmUgcmlkaWN1bG91cywgaXMgdGhhdCBoZSBkaWRuJ3Qgc3RheSBkb3duLiAKQSBmZXcgd2Vla3MgbGF0ZXIgd2lsbCBjb21lIFRoZSBTaGVkLCBhbiBleWUgcG9wcGluZyBjdWx0dXJhbCBjZW50ZXIgaW5zaWRlIGEgc3BpZGVyd29yayByaW1tZWQgZ2xhc3Mgc2hlbGwgdGhhdCBjYW4gc3RyZXRjaCBsaWtlIGFuIGFjY29yZGlvbiB0byBzdWl0IGRpZmZlcmVudCBwZXJmb3JtYW5jZXMuIApBaGhoLiAKV29tZW4gc3BvcnRzIHdlcmUgbW9yZSBjb21wbGljYXRlZCwgbW9yZSBkYW5nZXJvdXMgdG8gdGhlIHNleHVhbCBiaW5hcnkuIHNwb3J0cyBjb3VsZCBtYWtlIGEgbWFuIG91dCBvZiBhIGJveSwgd2hhdCBjb3VsZCB0aGV5IGRvIHRvIGEgd29tYW4/IG1hc2N1bGluaXplZCB3b21lbiB3ZXJlIGRhbmdlcm91cyBub3QganVzdCB0byB0aGUgc2V4dWFsIGJpbmFyeSwgYnV0IHRvIGhldGVyb3NleHVhbGl0eSBhcyB3ZWxsIHNpbmNlIHNoZSB3YXMgYWx3YXlzIGFzc3VtZWQgdG8gYmUgYSBsZXNiaWFuLiBkZXNwaXRlIHRoZSBkYW5nZXJzIG9mIHNwb3J0cyB0byB3b21lbiwgZ2lybHMgcHVyc3VlZCB0aGVtIHdpdGggYSBwYXNzaW9uLCBlc3BlY2lhbGx5IGFmdGVyIHRoZSBwYXNzYWdlIG9mIFRpdGxlIElYLiB0aGV5IHdvcmtlZCBoYXJkIHRvIGZlbWluaXplIHNwb3J0cyAgdG8gd2VhciAiY3V0ZSIgbGl0dGxlIG91dGZpdHMgb3IgZmxvY2sgdG8gc3BvcnRzIHRoYXQgbWFkZSB0aGVtIHRoaW4gKGxpa2UgdHJhY2sgb3IgdGVubmlzKSBhbmQgbm90IHNwb3J0cyB0aGF0IG1pZ2h0IGJ1bGsgdGhlbSB1cCAobGlrZSBydWdieSBvciBib2R5YnVpbGRpbmcpLiBzdGlsbCwgZGVzcGl0ZSB0aGUgYW54aWV0eSBvdmVyIHNwb3J0cyBhcyBhIG1hc2N1bGluaXppbmcgaW5mbHVlbmNlLCB3b21lbiBzcG9ydHMgZ3JldyBhbG9uZ3NpZGUgbWVuIHlldCwgd2hhdCB0byBkbyB3aGVuIHNvbWVvbmUgbGlrZSBTZW1lbnlhIGNvbWVzIGFsb25nPyBtdXNjdWxhciwgY2xlYXJseSBmYXN0LCBjbGVhcmx5IG5vdCB0cnlpbmcgdG8gbG9vayBmZW1pbmluZSwgU2VtZW55YSBib2R5IGFuZCBnZW5kZXIgcHJlc2VudGF0aW9uIGFjdHMgYXMgdGhyZWF0IHRvIHRoZSBzdXBwb3NlZGx5IGNsZWFyIHNlcGFyYXRpb24gYmV0d2VlbiBtZW4gYW5kIHdvbWVuLiBoZXIgYm9keSBpcyBzbyB0aHJlYXRlbmluZyB0aGF0IGl0IGhhZCB0byBiZSBzdHVkaWVkIGZvciB0ZW4gbW9udGhzIHRvIGRlY2lkZSB0byB3aGljaCBzZXggaXQgYmVsb25ncy4KV2hldGhlciB3ZSBrZWVwIGl0IG5hdHVyYWwgb3IgYm9sZCB0byBlbmhhbmNlIHRoZSB0ZXh0dXJlIG9mIGEgc3R5bGUsIGNvbG9yIGNhbiBiZSB0aGUgbW9zdCBleHByZXNzaXZlIHBhcnQgb2YgYSBncmVhdCBuZXcgc3R5bGUuLiAKWW91IGNhbiBsZWFybiBob3cgdG8gc2xvd2x5IGJ1aWxkIHVwIHlvdXIgY2hpcCBsZWFkIHdpdGggZWFzeSBwcmUgZmxvcCBtb3ZlcyBsaWtlIHRoZSBpc29sYXRpb24gcGxheSwgdGhlIHNxdWVlemUsIGFuZCB0aGUgIm5vIGxvb2siIGJsaW5kIHN0ZWFsLiAKT25saW5lIEdhbWJsaW5nIEdldHMgU2FmZXIgYW5kIEVhc2llciBXaXRoIEZvYmV0IDg4CkhlIHdhbGtpbmcgYnkgaGltc2VsZiB3aGljaCBzZWVtcyB0byBiZSBtb3JlIG9mIGEgc2hvdyBvZiBmb3JjZSB0aGFuIGFjdGl2ZWx5IHN0b3BwaW5nIGEgcmlvdCBpbiBwcm9ncmVzcy4gT25seSBvbmUgbWFuIGFjY29zdGVkIGhpbSwgYW5kIGFmdGVyIGZpcmluZyBoZSBhbGxvd2VkIHRoZSBzdXNwZWN0IHRvIHdhbGsgYXdheSwgd2hpY2ggc3VnZ2VzdHMgdG8gbWUgdGhhdCBoZSBmaXJlZCBhcyBhIGRldGVycmVudCByYXRoZXIgdGhhbiBhcyBhIG1lYW5zIG9mIGNvbnRyb2xsaW5nIGEgdGhyZWF0IGR1cmluZyBhbiBhcnJlc3QuIApPaGJhcmYgIDEgcG9pbnQgIHN1Ym1pdHRlZCAyOCBkYXlzIGFnbwpNb3Jlb3ZlciwgZGVzcGl0ZSB0aGUgbW92aWUgdGl0bGUsIEFzaWFuIGlzbiBhIG1vbm9saXRoaWMgaWRlbnRpdHkgdGhhdCBlYXNpZXIgdG8gdW5kZXJzdGFuZCBmcm9tIHRoZSB2YW50YWdlIHBvaW50IG9mIGEgY29zbW9wb2xpdGFuIHBsYWNlIGxpa2UgU2luZ2Fwb3JlLCB3aGljaCBzZXJ2ZXMgYXMgYSBuZXh1cyBmb3IgbWFueSBBc2lhbiBleHBlcmllbmNlcy4gQnV0IEhvbGx5d29vZCBoYXMgdGVuZGVkIHRvIHRyZWF0IGl0IGFzIG9uZSBjYXRlZ29yeS4gS29yZWFuIGlzIGRpZmZlcmVudCB0aGFuIENoaW5lc2UsIHdoaWNoIGlzIGRpZmZlcmVudCBmcm9tIHRoZSBWaWV0bmFtZXNlIGN1bHR1cmUsIGJ1dCB0aGUgd2F5IHRoZSBbQW1lcmljYW5dIGN1bHR1cmUgaGFzIHRyZWF0ZWQgdXMgaXMgYSBwb2ludCB0aGF0IHdlIGNhbiBwcm9iYWJseSBmaW5kIHNvbWUgY29tbW9uIGdyb3VuZCBvbiwgV3Ugc2F5cy4gClRpbWluZyBpbiBhdCAxOCBob3VycyBhbmQgNDQgbWludXRlcywgRXZlbnQgNDkgd2FzIHRoZSBzZWNvbmQgbG9uZ2VzdCBmaW5hbCB0YWJsZSAodGltZSBkdXJhdGlvbikgaW4gV1NPUCBoaXN0b3J5IHdpdGggNDgwIGhhbmRzIGRlYWx0LiBUaXRsZSBpcyBldmVuIG1vcmUgcHJlc3RpZ2lvdXMgYXMgc2VlbiBieSB0aGUgdG9wIG5hbWVzIGluIHRoZSBnYW1lLiBGcmVkZGllIEVsbGlzIHdobyByZWNlaXZlZCBoaXMgZmlyc3QgYnJhY2VsZXQgYnkgd2lubmluZyBFdmVudCA2IENoYW1waW9uc2hpcCBTZXZlbiBDYXJkIFN0dWQsIGJlY2FtZSB0aGUgZmlmdGggQWZyaWNhbiBBbWVyaWNhbiBpbiBXU09QIGhpc3RvcnkgdG8gd2luIGEgZ29sZCBicmFjZWxldC4gCkZpcnN0IGFzIGEgcGFyZW50IHRvIGEgdGVlbmFnZXIsIG15IDEzIHlvIGRhdWdodGVyIGlzIHJlYWxseSBkaXN0YW50IHdpdGggaGVyIGZhdm9yaXRlIGF1bnQuIFRoZXkgd2VyZSBhbHdheXMgc3VwZXIgY2xvc2UgYnV0IG5vdyBzaGUganVzdCBwbGF5cyBvbiBoZXIgcGhvbmUgb3IgY29tcHV0ZXIgd2hlbiB3ZSB2aXNpdC4gV2UgZW5kZWQgdXAgZHJvcHBpbmcgaGVyIG9mZiBhdCBob21lIHNvIHdlIGNvdWxkIGFjdHVhbGx5IGVuam95IG91ciBhZnRlcm5vb24gbGFzdCB0aW1lIHdlIHdlcmUgYWxsIGhhbmdpbmcgb3V0LCBqdXN0IGEgY291cGxlIG9mIHllYXJzIGFnbyBzaGUgd2FzIGJlZ2dpbmcgdG8gdmlzaXQgdGhlbS4gCkkgdW5kZXJzdGFuZCB3aGF0IGl0J3MgbGlrZSB0byB3YWtlIHVwIGFuZCBmZWVsIG5vdGhpbmcgYnV0IGZ1dGlsaXR5LiBCdXQgdGhhdCBmZWVsaW5nIGlzbid0IGV2ZXJ5dGhpbmcuIFRoZXJlIGlzIHNvIG11Y2ggb2YgbGlmZSB5b3UgaGF2ZW4ndCBleHBlcmllbmNlZCB5ZXQsIGFuZCBpdCB0cnVseSBnZXRzIGJldHRlciBhcyB5b3UgZ2V0IG9sZGVyLiBJIGtub3cgaXQgcmVhbGx5IGRvZXNuJ3QgZmVlbCB0aGF0IHdheSwgc28gaWYgeW91IG5lZWQgdG8gdGFsayB0byBzb21lb25lIHdoZW4geW91IGZlZWwgdGhhdCB3YXksIGZlZWwgZnJlZSB0byBwbSBtZS4KSSBzdXJlIHRoZXJlIGFyZSBvdGhlciBtZXRob2RzIGFuZCB2YXJpb3VzIGh5YnJpZCBiZWx0L2JvdCBzeXN0ZW1zLCBidXQgSSBwYXJ0aWN1bGFybHkgbGlrZSB0aGUgc2Vjb25kIG1ldGhvZC4gTm90ZSB0aGF0IHJlZ2FyZGxlc3MsIHlvdSB3YW50IGEgYnVuY2ggb2Ygcm9ib3BvcnRzIGNsb3NlIHRvIHRoZSBsb2FkaW5nIGNoZXN0cywgYW5kIGlmIHlvdSB1c2UgYWN0aXZlIHByb3ZpZGVycyBvbiB0aGUgbWluaW5nIHBhdGNoLCByb2JvcG9ydHMgYXJvdW5kIHRoZSBvcmUgcGF0Y2ggYXMgd2VsbC4gQWxzbywgbWFrZSBzdXJlIHRoZSBsb2FkaW5nIHN5c3RlbSBpcyBpdCBvd24gbG9naXN0aWMgbmV0d29yayAobm90IGNvbm5lY3RlZCB0byB0aGUgcmVzdCBvZiB5b3VyIGJhc2UpLCBzbyB0aGF0IHRoZSBib3RzIHdpbGwgYmUgc3RyaWN0bHkgZGVkaWNhdGVkIHRvIGxvYWRpbmcgYXQgdGhhdCBzdGF0aW9uLiAKUG9rZXIgYWN0dWFsbHkgaXNuIGFib3V0IHdpbm5pbmcgb3IgbG9zaW5nLiBQb2tlciBpcyBhYm91dCBtYWtpbmcgdGhlIHJpZ2h0IGRlY2lzaW9ucy4gTHVjayBqdXN0IHRoZSBkb29yLCB5b3UgZ290IHRvIGNvbWUgaW4gdGhyb3VnaCB0aGUgd2luZG93LiAKRWFjaCB0ZWFtIHdpbGwgaGF2ZSBhIG1lbnRvciwgdHdvIHByb2Zlc3Npb25hbCBwb2tlciBwbGF5ZXJzLCBmb3VyIGFtYXRldXJzIGFuZCB0d28gd2lsZGNhcmRzLiAiVGhlIGFtYXRldXJzIHdpbGwgYmUgc2VsZWN0ZWQgZnJvbSBhIHNlcmllcyBvZiBvbmxpbmUgYW5kIG9uIGdyb3VuZCB0b3VybmFtZW50cy4gVGhlIHRvdXJuYW1lbnRzIGhhdmUgYWxyZWFkeSBzdGFydGVkIGFuZCBtZW50b3JzIGFyZSBtb25pdG9yaW5nIHRoZW0uIApTaXN0ZXJzIGluIGxhdyBHcmFjZSBNY0Rlcm1vdHQsIEJldHR5IEJlc3QgYW5kIG1hbnkgbmllY2VzIGFuZCBuZXBoZXdzLiBIYXplbCB3YXMgcHJlZGVjZWFzZWQgYnkgaGVyIGxvdmluZyBodXNiYW5kIEF1YnJleSAiUmVkIiAoMTkxOSAyMDA5KSwgcGFyZW50cyBNYXJ5IGFuZCBKYW1lcyBNY0Rlcm1vdHQsIHNpc3RlciBNYXJpb24gQW5kZXJzb24sIGJyb3RoZXJzIEVkIGFuZCBMZXMgKENocmlzKS4gCk1vbiBtb2lzIGRlIG1hcnMgYSB0IGJpZW4gb2NjdXAgZW4gZGVob3JzIGRlcyBjb25zdWx0YXRpb25zLCBlbnRyZSAyIGpvdXJzIHBhc3Npb25uYW50cyBhdSBzYWxvbiBPbW5pdm9yZSwgdW4gZGxpY2lldXggd2VlayBlbmQgIENhbmNhbGUgZXQgU3QgTWFsbywgdW5lIHBhcmVudGhzZSByZXBvc2FudGUgYXUgVG91cXVldCwgZGl2ZXJzZXMgcmVuY29udHJlcyBwZXJzb25uZWxsZXMgZXQgcHJvZmVzc2lvbm5lbGxlcy4KQ2FsbCB0aGUgY29wcy4gCk1pbmQgeW91LCBMYXF1YXR1cyBpcyBzdGlsbCBvbmUgb2YgbXkgZmF2b3JpdGUgdmlsbGFpbnMuIEhlIGp1c3Qgc28gZGVzcGljYWJsZS4KV2VudCBvbiBzb21lIGRhdGVzIGFuZCBmb3VuZCBhIHNvbGlkLCBzb2xpZCBtYW4gYW5kIGhlcmUgd2UgYXJlLgpEcnVuayBJcmlzaG1lbj8gRVJJTiBHTyBCUkFHSCwgQ0FCUk9ORVMhIEFydCBpc24gZXhhY3RseSBJcmlzaCwgYnV0IGhlIGlzIG5vdCBleGFjdGx5IGEgbGVzYmlhbiBlaXRoZXIuIHRoaXMgbWF5IGNvbWUgZG93biB0byBhIGNvaW4gZmxpcCBmb3Igc29tZSB2b3RlcnMuCkFjdGl2ZSBSZWxlYXNlIFRlY2huaXF1ZSBBUlQKVGhlcmUgYSByZWFzb24gbWFueSBnYW1lcyBlbmdpbmVzIGFyZSB3cml0dGVuIGluIGxvdyBsZXZlbCBsYW5ndWFnZXMgd2l0aCBtYW51YWwgbWVtb3J5IG1hbmFnZW1lbnQsIGFuZCBpZiB5b3UgbmVlZCB0byB1c2UgV0FTTSB0byBtYWtlIGEgcGVyZm9ybWFudCB3ZWIgZ2FtZSB0aGVuIHRoYXQgYmVjYXVzZSB5b3UgY2FuIHVzZSBhIGZ1bmRhbWVudGFsbHkgZGlmZmVyZW50IGxhbmd1YWdlIHRvIHdyaXRlIGl0IGluLi4gCldlIHdlcmUgbGVhcm5pbmcgdG8gYmVjb21lIGluZGVwZW5kZW50IGFkdWx0cyB0b2dldGhlciBhcyBhIGNvdXBsZSBpbnN0ZWFkIG9mIGJlaW5nIHR3byBhZHVsdHMgc2V0IGluIHRoZWlyIHdheXMgYW5kIHRyeWluZyB0byBmaXQgdG9nZXRoZXIgYWZ0ZXIgdGhlIGZhY3QuLiAKSWYgdGhlcm1vbnVjbGVhciByZWFjdGlvbnMgYXJlIHRvIGJlIGluaXRpYXRlZCBvbiBlYXJ0aCwgb25lIG11c3QgdGFrZSBpbnRvIGNvbnNpZGVyYXRpb24gdGhhdCBhbnkgbnVjbGVhciBlbmVyZ3kgcmVsZWFzZWQgd2lsbCBiZSBjYXJyaWVkIGF3YXkgcmFwaWRseSBieSByYWRpYXRpb24sIHNvIHRoYXQgaXQgd2lsbCBub3QgYmUgcG9zc2libGUgdG8ga2VlcCB0aGUgdGVtcGVyYXR1cmUgaGlnaCBmb3IgYSBsb25nIHRpbWUuIFRoZXJlZm9yZSwgaWYgdGhlIHJlYWN0aW9uIGlzIHRvIHByb2NlZWQgYXQgYWxsLCBpdCBtdXN0IHByb2NlZWQgdmVyeSBxdWlja2x5LiBSZWFjdGlvbiB0aW1lcyBvZiBiaWxsaW9ucyBvZiB5ZWFycywgbGlrZSB0aG9zZSBpbiB0aGUgc3VuLCB3b3VsZCBuZXZlciBsZWFkIHRvIGFuIGFwcHJlY2lhYmxlIGVuZXJneSByZWxlYXNlOyB3ZSBtdXN0IHRoaW5rIHJhdGhlciBpbiB0ZXJtcyBvZiBtaWxsaW9udGhzIG9mIGEgc2Vjb25kLiAKSGF2ZSB0aGVtICJ0ZWFjaCIgeW91LiBJZiBpdCB3b3JrcywgaXQgZm9yY2UgdGhlbSB0byB0aGluayBhYm91dCB3aGF0IHRoZXkgb3RoZXJ3aXNlIHdvdWxkIGlnbm9yZS4uIApTdWNoIGEgbGFtcCBpcyBub3QganVzdCBicmlnaHQsIGl0IGxpa2UgaXQgbmVlZHMgbnVjbGVhciBwb3dlciB0byBydW4uIApNY0dvd2FuLiBUaGUgbWVuIGFyZSBlYWNoIGNoYXJnZWQgd2l0aCBhcm1lZCByb2JiZXJ5LCBjb25zcGlyaW5nIHRvIGNvbW1pdCB0aGF0IGNyaW1lLCBhbmQgdHdvIGZpcmVhcm0gb2ZmZW5zZXMuIApJdHMgb25seSBlbnRyYXBtZW50IGlmIHdlIGNhbiBwcm92ZSBpdCwgYW5kIHdlIGNhbiBCdXQgd2l0aCBJU1AgYWdncmVzc2l2ZWx5IHB1bGxpbmcgb3ZlciBoZW1wIHRydWNrcyB0byBsb29rIGxpa2UgdGhleSBhcmUgImZpZ2h0aW5nIHRoZSB3YXIgb24gZHJ1Z3MiIHdlIHNob3VsZG4gYmUgb25lIGJpdCBzdXJwcmlzZWQgYWJvdXQgc2hhZHkgcHJhY3RpY2VzLiAKQSBiaXQgb2YgYmFja2dyb3VuZCBmb3IgdGhlIHF1ZXN0aW9uICAgSSBiZWVuIHBsYXlpbmcgc2luY2UgYWJvdXQgMjAwNyBidXQgdG9vayBhbmQgZXh0ZW5kZWQgYnJlYWsgYWZ0ZXIgYXJvdW5kIDIwMDkvMjAxMCBhbmQgY2FtZSBiYWNrIHRoaXMgcGFzdCB5ZWFyIGFzIEkgbW92ZWQgYmFjayB0byBMb25kb24uIEkgc3RhcnRlZCBvZmYgYmFkbHkgYnV0IGluIHRoZSBwYXN0IGZldyBtb250aHMgSSB0cmFuc2l0aW9uZWQgaW4gdG8gYSBzbWFsbCB3aW5uaW5nIHBsYXllciBpbiBib3RoIGNhc2ggMS8xLCAxLzIgYW5kIGxpdmUgdG91cm5hbWVudHMuIEkgZG9uZSB0aGlzIGFsbW9zdCBleGNsdXNpdmVseSBieSB3YXRjaGluZyB0b25zIGFuZCB0b25zIG9mIGhhbmQgYW5hbHlzaXMsIHN0cmVhbXMgYW5kIHBvZGNhc3RzIGFuZCB2ZXJ5IGJhc2ljIHJhbmdlIGNvbnN0cnVjdGlvbi4gRml4aW5nIGxlYWtzIGluIG15IGVnbyBhbmQgbWVudGFsaXR5IGFuZCB0cnlpbmcgdG8gYW5hbHlzZSBvcHBvbmVudHMgYW5kIGV4cGxvaXQgb2J2aW91cyBsZWFrcy4gSSBlYXJuaW5nIG1vcmUgbW9uZXkgY29uc2lzdGVudGx5IGJ1dCBsb29raW5nIHRvIGNlbWVudCB0aGF0IGtub3dsZWRnZS4KUmF0aGVyIHRoYW4gaGF2aW5nIG9uZSBiaWcgcGFydHkgb3IgZXZlbnQsIHRoZSBtYW5hZ2VycyBjb2xsZWN0aXZlbHkgZGVjaWRlZCB0byBoYXZlIGVhY2ggZGVwYXJ0bWVudCBzcG9uc29yIGV2ZW50cyB0aGF0IGludm9sdmUgaXRzIGN1c3RvbWVycyBhbmQgZ2l2ZSBiYWNrIHRvIHRoZSBjb21tdW5pdHksIExpbm5lYSBJc3JhZWwsIGRlYWxlciBwcmluY2lwYWwsIHRvbGQgQXV0b21vdGl2ZSBOZXdzLgpNeSBodXNiYW5kIGFuZCBJIG9uY2Ugd2Fsa2VkIGludG8gYSBwbGFjZSB0aGF0IGFkdmVydGlzZWQgbWFzc2FnZXMuIFdlIGp1c3Qgd2Fsa2VkIGluIGFuZCBpdCBleGFjdGx5IGxpa2UgeW91IHNheSwgdGhlIHdpbmRvd3Mgd2VyZSBibGFja2VkIG91dCBhbmQgSSBzd2VhciBpdCB3YXMgbGlrZSBhIHBvcm5vIHJvb20gd2l0aCB0aGUgc2luZ2xlIGNvdWNoIGFuZCB0aGUgZG9jdG9yIG9mZmljZS9kZW50aXN0IG9mZmljZSBjaGVjayBpbiB3aW5kb3cgYnV0IGluc3RlYWQgb2YgZ2xhc3MgaXQgd2FzIG1ldGFsIGFuZCBoYWQgYSBzaW5nbGUgY2FtZXJhIHBvaW50ZWQgZG93bi4gV2Ugd2VyZSBkdW1iYXNzZXMgYW5kIGRpZG4gcmVhbGx5IG5vdGljZS4gS25vY2tlZCBvbiB0aGUgbWV0YWwgZ3JhdGUgYW5kIHdhaXRlZCBhIGJpdC4gVGhlbiB3YWxrZWQgb3V0IHdoZW4gbm8gb25lIHJlc3BvbmRlZC4gSXQgZGlkbiBjbGljayB1bnRpbCBhIGRheSBvciBzbyBsYXRlciB3aGVuIHdlIHdlcmUgdGVsbGluZyBmcmllbmRzIGFib3V0IHRoZSBleHBlcmllbmNlLiBJIGhhdmUgYSBmZWVsaW5nIHRoZXkgZG9uIGhhdmUgYSBnaWZ0IGNhcmQgcHJvZ3JhbS4KQnV0IDEwIG1pbnV0ZXMgaW50byB0aGUgc2Vzc2lvbiwgVGlhbiBzdGFydGVkIHRvIGZvY3VzICJleGNsdXNpdmVseSBvbiBBcm5hdSdzIGJ1dHRvY2tzIGZvciBhbiBpbm9yZGluYXRlIGFtb3VudCBvZiB0aW1lLCBtYWtpbmcgQXJuYXUgdmVyeSB1bmNvbWZvcnRhYmxlLCIgY291cnQgcGFwZXJzIHNheS4KQnV0IG1hbnkgZGVybWF0b2xvZ2lzdHMsIGluY2x1ZGluZyBEci4gV2lsbWEgQmVyZ2ZlbGQgb2YgdGhlIENsZXZlbGFuZCBDbGluaWMsIGFyZSBza2VwdGljYWwgb2YgdGhlIG5vIHBvbyBpZGVhLiBTaGUncyBtb3N0bHkgY29uY2VybmVkIHRoYXQgc29tZSBtaWdodCB0YWtlIHRoZSBpZGVhIHRvbyBmYXIsIGZhaWxpbmcgdG8gYWRlcXVhdGVseSByZW1vdmUgc2NhbHAgb2lsIGFuZCBzdWJzZXF1ZW50bHkgaW52aXRpbmcgbWlsbGlvbnMgb2YgbWljcm9iZXMgdG8gYSBkZWxpY2lvdXMgZmVhc3QuIChUaGF0J3Mgd2hlbiB0aGluZ3MgY2FuIHN0YXJ0IHRvIGdldCBzbWVsbHkuKQpLbmlmZSAgIGludmVzdCBpbiBhIGdvb2QgcXVhbGl0eSBidXNoY3JhZnQgb3IgdHlwZSBrbmlmZSwgaXQgY2FuIGxpdGVyYWxseSBzYXZlIHlvdXIgbGlmZS4KSG93ZXZlciBpdCBjYW4gYmUgZGV2YXN0YXRpbmcuIApXaXRoIGFuIGV4Y2VsbGVudCBmb290YmFsbCBzZWxlY3Rpb24gd2hlcmUgdGhlIFByZW1pZXJlIExlYWd1ZSBpcyB0aGUgbW9zdCBwcm9taW5lbnQgY29tcGV0aXRpb24sIDg4OCBTcG9ydCBsZXQncyB5b3UgY2hvb3NlIGJldHdlZW4gbW9yZSB0aGFuIDI1IHZhcmlvdXMgdmFyaWFudHMgb2YgaGFuZGljYXBzLiAKVGhpcyBhcHBsaWVzIHRvIHBva2VyIGF0IENsdWJXUFQgdG9vIGhvd2V2ZXIgdGhleSBjaGFuZ2UgZnJvbSB0aGVvcmV0aWNhbCBwbGFucyB0byBmYWN0cyB3aGljaCBjYW4gYmUgcHV0IHRvIHByYWN0aWNlLiAKWW91IHdvbnQgaGF2ZSB0byB0dXJuIGF3YXkgdGhvc2UgdGhhdCBhcmUgZGVjbGluZWQgY29udmVudGlvbmFsbHkuIFlvdSB3aWxsIGhhdmUgb3RoZXIgbGVuZGVycyB0byBjaG9zZSBmcm9tLiAKSXQgbm90IHVudXN1YWwgdG8gaGF2ZSBhIG1pZGRsZSBtYW4uIApJIHRoaW5rIGl0J3MgbGlrZSAyMywwMDA/IEdlbXMgb3IgbW9yZS4gCkkgd291bGRuIHNheSB0aGUgc2lnbnMgYXJlIGFjY3VyYXRlLCB0aGUgcG9zaXRpb25pbmcgb2YgdGhlIGNvbnN0ZWxsYXRpb25zIGFjdHVhbGx5IGNoYW5nZWQgc2luY2UgdGhlaXIgaW5jZXB0aW9uIHNvIHRoZSB6b2RpYWMgY2FsZW5kYXIgdGhhdCBwZW9wbGUgdXNlIHRvZGF5IGlzbiBldmVuIHRoZSBhY2N1cmF0ZS4gTmV3IGFnZSBpbnRlcnByZXRhdGlvbnMgb2YgdGhlc2UgY29uc3RlbGxhdGlvbnMgaGF2ZSBub3QgdGFrZW4gdGhpcyBzaGlmdCBpbnRvIGVmZmVjdCwgc28gdGhlIGNhbGVuZGFyIHRoYXQgcGVvcGxlIGdvIGJ5IGNvbW1vbmx5IGlzIGFsc28gbm90IGNvcnJlY3QuCldoZXRoZXIgeW91IHBsYXkgYmxhY2tqYWNrLCByb3VsZXR0ZSBvciBwb2tlciwgdGhleSBhbGxvdyBwbGF5ZXJzIHRvIGhhdmUgYSBtb3JlIHBlcnNvbmFsaXplZCBleHBlcmllbmNlIHdoZW4gdGhleSBhcmUgcGxheWluZywgYXMgdGhleSB3aWxsIGJlIGludGVyYWN0aW5nIHdpdGggcmVhbCBsaWZlIGRlYWxlcnMgaW4gcmVhbCB0aW1lLiAKVGhlIG9ubHkgcmFjZSB3aGljaCBvY2N1cGllcyBOaW5vIHRoaXMgTGFkaWVzIERheSBpcyB0aGUgcmFjZSBmb3Igc3Vydml2YWwuLiAKU29tZSBwb2tlciByb29tIG9wZXJhdG9ycyBhcmUgd29ycmllZCBhYm91dCB0aGVpciBpbWFnZSBhZnRlciBhIGJpemFycmUgaW5jaWRlbnQgbGFzdCB3ZWVrIGluIHdoaWNoIGEgbWFza2VkIGd1bm1hbiBicm9rZSBpbnRvIHRoZSBQYWxhY2UgUG9rZXIgUm9vbSBvbiBFYXN0IEJyaXN0b2wgUm9hZCBuZWFyIEZlbnRvbiBSb2FkIGFuZCBvcmRlcmVkIHBhdHJvbnMgdG8gdGhlIGZsb29yIGluIGFuIGFwcGFyZW50IHJvYmJlcnkgYXR0ZW1wdC4gVGhlIHN1c3BlY3Qgd2FzIGd1bm5lZCBkb3duLCByZXBvcnRlZGx5IGJ5IGZvcm1lciBGbGludCBQb2xpY2UgQ2hpZWYgQnJhZGZvcmQgQmFya3NkYWxlLCB3aG8gd2FzIHBsYXlpbmcgcG9rZXIgdGhlcmUgYXQgdGhlIHRpbWUuIEF0IHRoZSB0aW1lIG9mIHRoZSBzaG9vdGluZywgbmVhcmx5IDUwIHBlb3BsZSB3ZXJlIGluc2lkZSB0aGUgbG9ja2VkIHJvb20uIApXaGlsZSBzbGlnaHQsIHRoZSBjaGFuY2UgdG8gaGl0IHRoZSBzYW1lIHBhcnQgbW9yZSB0aGFuIG9uY2UgaXMgbG93ZXIgYW1vbmdzdCB0aGUgU2hlayBhbmQgSHVtYW5zIGFuZCBoaWdoZXIgYW1vbmdzdCB0aGUgSGl2ZXJzLiBUaGUgdGhyZWFkIHJlZmVyZW5jZWQgaW4gdGhlIE9QIHJlcGVhdGVkbHkgbGlzdGVkIHRoZSBoZWFkIGFzIHRoZSBtb3N0IHZ1bG5lcmFibGUgc3BvdCBmb3IgYWxsIHJhY2VzLCBwcm9iYWJseSBiZWNhdXNlIGRlZmVuc2Ugb2YgdGhlIGhlYWQgaXMgdGhlIG1vc3QgbGltaXRlZC4gCkFjY29yZGluZyB0byBUaGUgQmxhc3QsIENhcmJhbGxvIGZsZWQgZnJvbSBMZWUgc3VpdGUgYXQgdGhlIEh5YXR0IFJlZ2VuY3kgd2hlbiBoZSBhbGxlZ2VkbHkgYmVnYW4gdG8gbW9hbiBhbmQgZ3JvYW4sIHdoaWxlIHNoZSB3YXMgbWFzc2FnaW5nIGhpbSwgYnV0IHNoZSB3YXMgY2FsbGVkIGJhY2sgdG8gdGhlIHJvb20gdGhlIGZvbGxvd2luZyBkYXkuCjMgcG9pbnRzICBzdWJtaXR0ZWQgNCBtb250aHMgYWdvCkZvciBleGFtcGxlLCBpZiBhIHBlcnNvbiB3aXRob3V0IGluc3VyYW5jZSBnZXRzIGEgcHJlc2NyaXB0aW9uIGFuZCBkb2VzbiB1c2UgdGhlIGdvb2QgcnggY2FyZCBvciB0aGUgaW5zdXJhbmNlIGNhcmQsIHRoZSBjb3N0IGlzICQyMDAuIApZb3UgaGF2ZSB0byB0aGluayBvZiB0aGlzIGFzIG1vcmUgb2YgYW4gaW52ZXN0bWVudCB0aGVuIGFuIGFjdHVhbCBwdXJjaGFzZS4gCk91ciBmaXJzdCBzdG9wIHdhcyBhIHRvd24gYWJvdXQgNTAga20gZnJvbSBBbW1hbiBjYWxsZWQgTWFkYWJhLiBJdCBhIG1vc2FpYyBjaXR5IHRoYXQgaXMgZmFtb3VzIGZvciBpdCBjb2xvcmZ1bCBydWdzLiAKQWxtb3N0IGFsbCBwcmVmYWIgbGFwdG9wcyBjb21lIHdpdGggYW4gU1NEIGFuZCBhbiBIREQgZHJpdmUuIFRoZSBTU0QgcmFuZ2VzIGZyb20gMTI4IHRvIDUxMiBHQiBhbmQgaXQgd2hlcmUgdGhlIE9TIGlzIGluc3RhbGxlZC4gVGhlIEhERCBpcyB0eXBpY2FsbHkgMSBUQiBpbiBzaXplIGluIHRob3NlIGxhcHRvcHMuIEJ1dCB0aGVyZSBhcmUgbGFwdG9wcyAobGlrZSB0aGUgTVNJIEdTIFN0ZWFsdGggdmFyaWFudHMpIHRoYXQgbWF5IG9ubHkgaGF2ZSBhbiBTU0QgYnV0IG5vIEhERC4gU28geW91IG1pZ2h0IGJlIHN0dWNrIHdpdGggbGlrZSA1MTIgR0Igb2Ygc3BhY2Ugb3IgZXZlbiAyNTYgR0IuIFRoYXQgbGFwdG9wIEkgbWVudGlvbmVkIHdvdWxkIHN1aXQgc29tZW9uZSB0aGF0IHdhbnRzIGEgc2xpbSBhbmQgbGlnaHQgbGFwdG9wIGRlc2lnbiwgZ29vZCBwZXJmb3JtYW5jZSBidXQgZG9lc24gbmVlZCBtdWNoIGhhcmQgZHJpdmUgc3BhY2UuIEkganVzdCB0b29rIGl0IGFzIGEgcmVmZXJlbmNlIHRvIGhhdmUgc29tZXRoaW5nIHRvIGxpbmsuIE1heWJlIGNoZWNrIGZvciByZXZpZXdzIG9uIGdvb2dsZSBvciBzb21ldGhpbmcuCkhhbmRhIExvcGV6LCBJbmMuIApXb3cuIApXZSByb2xsIG91dCBiaWcgZ3ltbmFzdGljIGxpa2UgbWF0cyBhbmQgY292ZXIgdGhlIGVudGlyZSBhcmVhIGluIGJhYnkgcG93ZGVyIGFuZCB0aGUgZGFuY2VycyBydW4gYW5kIHNsaWRlIGRvd24gb24gdGhlaXIgYmVsbGllcyBvbiB0aGVtIGFuZCBnZXQgbGlrZSwgMTVzIG9mIGRvemVucyBvZiBoYW5kcyBtYXNzYWdpbmcgdGhlaXIgYmFja3MvbGVncy9hcm1zLlRoZXJlIGFsc28gbG9hZHMgb2YgbWFzc2FnZSB0aGVyYXBpc3QgdHlwZSB2b2x1bnRlZXJzIHRoYXQgd29yayBpbiB0aGUgdHVubmVscyBvZiB0aGUgQkpDICh3aGVyZSB0aGUgZXZlbnQgaXMgaGVsZCkgdG8gaGVscCBkYW5jZXJzIG1ha2Ugc3VyZSB0aGV5IGtlZXAgYmxvb2QgZmxvdyBtb3ZpbmcuIApXYXMgdG9vIGVhcmx5IGZvciBhIGxhcmdlIHdoaXNreSBvciBldmVuIGEgc21hbGwgb25lIHNvIEkganVzdCBzYXQgZG93biBhbmQgc2hvb2sgbXkgaGVhZCBpbiBkaXNiZWxpZWYuIEhlIHNhaWQgdGhhdCBpdCB3YXMgdGhlIHNlY29uZCB0aW1lIHdpdGhpbiBhIG1vbnRoIHRoYXQgdGhlIHRvdGFsIGhhZCByZWFjaGVkIDQ3LiBPbiB0aGUgcHJldmlvdXMgb2NjYXNpb24gdGhlIGhhZCBlYmJlZCByYXBpZGx5IGRvd24gdGhlIGJlYWNoIGFzIG90aGVyIE1QcyB3aXRoZHJldyB0aGVpciBsZXR0ZXJzLi4gCkV2ZW50dWFsbHksIEkgdGhpbmsgc29tZSBwYXJlbnRzIHNwb2tlIHVwIGFib3V0IGl0LCBhbmQgc29tZSBvZiB1cyB3ZW50IHRvIHRoZSBzY2hvb2wgb2ZmaWNlIHRvIGFzayB3aHkgd2Ugd2VyZSBiZWluZyBsZWZ0IGFsb25lLiBXZSB3ZXJlIGluZm9ybWVkIHRoYXQgd2Ugc2hvdWxkIGhhdmUgb3JnYW5pc2VkIGEgc3Vic3RpdHV0ZSBvdXJzZWx2ZXMgYW5kIGRvbmUgd29yayBhbnl3YXkgICB0aGF0IHJpZ2h0LCB0aGUgZ3JvdXAgb2YgZmlmdGVlbiB5ZWFyIG9sZHMuIApMYWR5IEdhR2EpLCBOb3RoaW4nIE9uIChCdXQgVGhlIFJhZGlvKS4gClRoZSBWaWN0b3IgUG9rZXIgQ3VwIHdpbGwsIGFjY29yZGluZyB0byBDaGFpcm1hbiwgVmljdG9yIENoYW5kbGVyLCAiYmUgYSB0cnVseSBncm91bmQgYnJlYWtpbmcgZXZlbnQgdGhhdCB3aWxsIGdpdmUgRXVyb3BlYW4gcG9rZXIgYW4gZXZlbnQgdG8gcmFuayBhbG9uZ3NpZGUgYW55dGhpbmcgc2VlbiBpbiB0aGUgVW5pdGVkIFN0YXRlcy4iIE1yIENoYW5kbGVyIGdvZXMgb24gdG8gYWRkICJXZSdyZSBwcm91ZCB0byBiZSBzcG9uc29yaW5nIGEgdG91cm5hbWVudCB0aGF0IHdpbGwgYmVjb21lIHN5bm9ueW1vdXMgd2l0aCB0aGUgZ2xhbW91ciBhbmQgZXhjaXRlbWVudCBvZiBoaWdoIHN0YWtlcyBwb2tlci4gCldoZW4gSSBzYXcgeW91ciBwb3N0IHllc3RlcmRheSBhbmQgcmVhZCB0aGUgdGl0bGUsIG15IGhlYXJ0IHNhbmsuIApUaGUgcGFpcidzIHJlbGF0aW9uc2hpcCBvbmx5IGRlZXBlbmVkIGluIHRoZSBmb2xsb3dpbmcgeWVhcnMuIApOYWplZWIgQXppemksIHNwZWFraW5nIHRvIEFsIEphemVlcmEgZnJvbSB0aGUgQWZnaGFuIGNhcGl0YWwsIHNhaWQgdGhlIGFjY3VzZWQsIG1hbnkgb2Ygd2hvbSBhcmUgY2xvc2VseSBjb25uZWN0ZWQgdG8gdGhlIGJhbmsncyBmb3JtZXIgb2ZmaWNpYWxzLCBzaG93ZWQgIm5vIHN5bXBhdGh5IHRvd2FyZHMgdGhpcyBjb3VudHJ5IG9yIHRoZSBwZW9wbGUgb2YgdGhpcyBjb3VudHJ5Ii4KVGhlIGRvd250b3duIGNhc2lubyBpcyBob3VzZWQgaW4gdGhlIEhpZ2JlZSBCdWlsZGluZywgYnVpbHQgaW4gMTkzMSBhcyBhIGRlcGFydG1lbnQgc3RvcmUuIFVubGlrZSBtb3JlIHR5cGljYWwgY2FzaW5vcyB0aGF0IGhhdmUgYSBzaW5nbGUsIGV4cGFuc2l2ZSBnYW1pbmcgZmxvb3IgYW5kIGEgZmllbGQgb2YgZnJlZSBwYXJraW5nLCB0aGUgSmFjayBEb3dudG93biBpcyBzcHJlYWQgb3ZlciBmb3VyIGZsb29ycyBhbmQgcGF0cm9ucyB3aG8gZHJpdmUgaW4gbXVzdCBwYXJrIGluIGEgbXVsdGkgc3RvcnkgcGFya2luZyBnYXJhZ2UgbGlua2VkIHRvIHRoZSBzZWNvbmQgZmxvb3Igb2YgdGhlIEhpZ2JlZSBCdWlsZGluZy4gCk5vdyBsb29rIGFuZCBzZWUgd2hvIGdldHMgbWFqb3JpdHkgY3VzdG9keSBvZiB0aGUgY2hpbGRyZW4uIApCbHl0aGU/IEknbGwgYXNrIGhpbSBhYm91dCB0aGF0IGxpZmUgYm9vayBteXNlbGYsIGJ1dCBJIHdhbnQgeW91IHRvIHRlbGwgaGltIHRoYXQgeW91IHRvbGQgbWUgdGhlIHN0b3J5IG9mIGxvc3QgTWFyZ2FyZXQgYW5kIGFzayBoaW0gaWYgaGUgd2lsbCBsZXQgbWUgdXNlIGl0IGFzIGEgdGhyZWFkIG9mIHJvbWFuY2Ugd2l0aCB3aGljaCB0byB3ZWF2ZSB0aGUgc3RvcmllcyBvZiB0aGUgbGlmZSBib29rIGludG8gYSBoYXJtb25pb3VzIHdob2xlLiIuIApUaGV5IG9ubHkgcmVjb3JkIHdoYXQgdGhleSBvYnNlcnZlIGFuZCBiYXNlZCBvbiB0aGVpciBvYnNlcnZhdGlvbiwgdGhlcmUgbm8gcmVhc29uIHRvIG5vdCBjb25zaWRlciBBQVZFIGEgZGlhbGVjdCB0aGUgc2FtZSB3YXkgVGV4YXMgRW5nbGlzaCBpcyBhIGRpYWxlY3Qgb3IgQ29ja25leSBvciB3aGF0ZXZlci4uIApBbmQgSSBqdXN0IGdvIHRvIGEgcmFuZG9tLCBzbWFsbCAyNGggZml0bmVzcy4gQXMgSSBtYWRlIG15IG93biBnYWlucywgdGhlIHRvcGljIG9mIHJvaWRzIGNvbWVzIHVwIGluY3JlYXNpbmdseSBvZnRlbi4gClJvZGVuYmVyZyBmb3VuZCBEYW5pZWwsIHdobyBsaWtlcyB0byBkbyBmaWVsZCB3b3JrIG9uIHRoZSBmYW1pbHkgZmFybSwgcGxheSBiYXNlYmFsbCB3aXRoIGhpcyBzaWJsaW5ncyBhbmQgZ28gc2xlZGRpbmcsIGhhcyBiZWVuICJtZWRpY2FsbHkgbmVnbGVjdGVkIiBieSBoaXMgcGFyZW50cywgQ29sbGVlbiBhbmQgQW50aG9ueSBIYXVzZXIuCkkgc3RpbGwgb25seSBzbGVlcCA2IDcgdW5yZXN0ZnVsIGhvdXJzLCBidXQgSSBnYXZlIHVwIG5pZ2h0IGxpZmUgYWZ0ZXIgbWFycmlhZ2UuIEl0IGp1c3Qgbm90IHJlYWxseSByZXNwZWN0ZnVsLCBhbmQgbGF0ZSBuaWdodCBwcm93bGluZyBhYm91dCBjb21lcyB3aXRoIGNvbm5vdGF0aW9ucy4gCk15IGVudGlyZSBmYW1pbHkgaXMgcmVhbGx5IGJpZyBidXQgd2UgYWxsIGhhdmUgZ29vZCBibG9vZCBwcmVzc3VyZSwgbG93IGNob2xlc3Rlcm9sLCBubyBoaXN0b3J5IG9mIGRpYWJldGVzLCBldGMuSSBkbyBlYXQgdmVyeSBjbGVhbiwgSSBqdXN0IGVhdCBhIGxvdCBhbmQgaGF2ZSBhIHJhdGhlciBzZWRlbnRhcnkgbGlmZSBzdHlsZSByaWdodCBub3cuVGhhdCBiZWluZyBzYWlkIEkgZG8gaGF2ZSBvdGhlciBoZWFsdGggcmVsYXRlZCBpc3N1ZXMgY3JvcHBpbmcgdXAgZnJvbSBteSBzaXplIHNvIGFtIGdvaW5nIHRvIGJlIGN1dHRpbmcgZG93biB0byB0byBhYm91dCAxNDUgMTUwIGtnIHRoaXMgc3VtbWVyIHRvIHNlZSBob3cgSSBmZWVsLiAxOSBwb2ludHMgIHN1Ym1pdHRlZCAzIGRheXMgYWdvU2luY2UgbW9yZSB0aGFuIGxpa2VseSBub3QgZ29pbmcgdG8gYmUgZ29pbmcgdG8gV29ybGRzIGluIElyZWxhbmQgdGhpcyB5ZWFyIGhhdmUgZGVjaWRlZCB0aGF0IGFmdGVyIG15IG1lZXQgYXQgdGhlIGVuZCBvZiB0aGlzIG1vbnRoIEkgYW0gZ29pbmcgdG8gZ28gb24gYSBjdXQuIApZb3UgY2FuIGFsc28gcGF5IHZpc2l0IHRvIHRoZSBvbmxpbmUgbWFya2V0cGxhY2VzIHdoZXJlIHRoZSBwbGF5ZXIgY2FyZCBwcm9kdWNlcnMgY29tZSB1cCB3aXRoIGRpZmZlcmVudCBjYXJkIHByb3RlY3Rpb24gc29sdXRpb25zLiAKU2hlIGFkbWl0dGVkIHNoZSBoYWQgdGhlIGZvbGRpbmcga25pZmUgYW5kIGhhbmRlZCBpdCBvdmVyIHRvIHRoZSBzZWN1cml0eSB3b3JrZXJzLiBCdXQgYSBjaGVjayBvZiBoZXIgaGFuZGJhZyB0aHJvdWdoIHRoZSBYIHJheSBtYWNoaW5lIGZvdW5kIHRoZSBmb3VyIGJsYWRlZCBuaW5qYSBzdGFyLCB3aGljaCB3YXMgc2VpemVkIHdpdGggdGhlIDAuNCBncmFtcyBvZiBjYW5uYWJpcy4gCkkgd2lsbCBzYXkgb3VyIGV4cGVyaWVuY2Ugd2FzIGxhY2tsdXN0ZXIuIFRoZSBuYW1lIGluZGljYXRlcyBhIEZyZW5jaCByZXN0YXVyYW50LiAKTXkgaGVsbC4gQWxzbyBpdCBpcyByZWFsbHkgaW5jcmVkaWJsZSB0aGF0IGluIHRoZSBmYWNlIG9mIGhpcyBlbnRpcmUgbGl2ZWxpaG9vZCBiZWluZyBkZXN0cm95ZWQgdGhlIGh1c2JhbmQgZmlyc3QgaW5zdGluY3RzIGFyZSB0byBtYWtlIHN1cmUgb3RoZXJzIGFyZSBva2F5LiAKT25lIG9mIHRoZSB1bmlxdWUgZmVhdHVyZXMgd2hpY2ggc2VwYXJhdGUgS1FPTCBTRVJJRVMgSUkgNk1heCBTcGVjaWFsIGZyb20gdGhlIHByZXZpb3VzIEtRT0wgaXMgdGhlIDYgTWF4IFNwZWNpYWwuIEluIDYgTWF4IFNwZWNpYWwgdGhlIG1heGltdW0gbnVtYmVyIG9mIHBsYXllcnMgaW4gYSB0YWJsZSBpcyBsaW1pdGVkIHRvIDYuIApCZW5jaCBQcmVzczogV2hlbiB5b3UgcGVyZm9ybSBhIGJlbmNoIHByZXNzIG9uIGEgYmFsbCwgdHJ5IHRvIGtlZXAgeW91ciBib2R5IGFzIHN0cmFpZ2h0IGFzIHBvc3NpYmxlIGZyb20geW91ciBzaG91bGRlcnMgdG8geW91ciBrbmVlcy4gClJhaXNpbmcgaW4gcG9rZXIgaXMgYWJvdXQga25vd2luZyB5b3VyIG9wcG9uZW50IGFuZCBob3cgaGUgcGVyY2VpdmVzIHlvdS4gClNoZSBpcyBJdGFsaWFuIGFuZCBoZXIgcHJldmlvdXMgam9iIHdhcyBhIHN0cmlwcGVyLiBBbmQgdGhlcmUgaXMgYSBydW1vciBnb2luZyBhcm91bmQgdGhhdCBzaGUgaXMgYSAibWFuIiwgdGhhdCBpcyBmYWtlIGJlY2F1c2Ugc2hlIG1hZGUgaXQgdXAgdG8gZ2V0IG1vbmV5LiAKSSB3b3JrIHdpdGggbG90cyBvZiBjYWJsZXMgaW4gbXkgam9iLiBBbHRob3VnaCB0aGlzIGlzIGFuIGF3ZXNvbWUgc29sdXRpb24gbm93LCB0aGUgc3RyZXNzIG9mIHRoZSBjYWJsZSBwdWxsaW5nIGluIHRoZSB3cm9uZyBkaXJlY3Rpb24gaXMgZ29pbmcgdG8gY2F1c2UgZGFtYWdlIG92ZXIgcHJvbG9uZ2VkIHVzZS4gQSBjYWJsZSB3YW50cyB0byBiZSBhdCByZXN0IGluIGl0cyBuYXR1cmFsIHBvc2l0aW9uLiBUaGF0IHdoeSBtdXNpY2lhbnMgYW5kIHBlb3BsZSBpbiBJVCB0aGF0IHV0aWxpemUgY2FibGVzIHNvIG9mdGVuIGFyZSBzbyBzdHJpY3QgYWJvdXQgaXQuIFdlIHNlZSBkZXN0cm95ZWQgY2FibGVzIGFsbCB0aGUgdGltZS4gQSBjYWJsZSBjYW4gYmUgZGVzdHJveWVkIHNpbXBseSBmcm9tIGNvaWxpbmcgYXJvdW5kIHlvdSBhcm0gcmVwZWF0ZWRseSEgQXQgdGhlIHZlcnkgbGVhc3QsIEkgd291bGQgZ2V0IHNvbWUgc2xhY2sgb24gdGhhdCBjYWJsZSBhdCB0aGUgaGVhZHNldCwgYW5kIGxvb3AgaXQgaW4gaXRzIG5hdHVyYWwgZG93bndhcmQgcG9zaXRpb24sIHRoZW4gcGluIGl0IHVwd2FyZHMuClBsZWFzZSB0YWxrIHRvIHlvdXIgdGhlcmFwaXN0IGFuZCB0ZWxsIHRoZW0gZXhhY3RseSB3aGF0IGhhcHBlbmVkIGFuZCBzZWUgaWYgeW91IGNhbiBnZXQgYSBuZXcgcHJlc2NyaXB0aW9uLiAKUG9zdHMgYWJvdXQgaG93IHBzZXJ2ZXIgaXMgc28gbXVjaCBiZXR0ZXIgdGhhbiBDbGFzc2ljIHR1cm5lZCBvdXQKSXQncyBhIGdyZWF0IHdheSB0byBjb25uZWN0IHdpdGggdGhlbS4gCkFsbCB2ZXRlcmFuaWFucyByZWNvbW1lbmQgdG8ga2VlcCB0aGVtIGluZG9vcnMuIFRoZXkgd2lsbCBsaXZlIGxvbmdlciwgbGVzcyBzdHJlc3NmdWwuIApJZiB5b3UgZXhwZXJpZW5jZSBwaHlzaWNhbCBvciBlbW90aW9uYWwgcGFpbiBvciBkaXN0cmVzcywgcmVhZCB0aGUgaW50ZXJ2aWV3IGJlbG93IGFuZCBsZWFybiBtb3JlIGFib3V0IGhvdyBDYXJ5biBjYW4gaGVscC4uIApUaGUgU2hlcmF0b24gbG9iYnkgY2FmZSBhbmQgYmFyIGFuZCB0aGUgSGlsdG9uIGJhciBhbmQgcmVzdGF1cmFudCBSaXNlIGFyZSBzbyBjbG9zZSB0aGF0IHNvbWVvbmUgc2Vla2luZyBhIGJyZWFrIGZyb20gYWlycG9ydCBmb29kIGNvdWxkIGVhc2lseSB3YWxrIG92ZXIgZm9yIGEgbWVhbCBhbmQgZW5qb3kgYSBtb3JlIHRyYW5xdWlsIGF0bW9zcGhlcmUuLiAKSSBzYXQgZG93biB3aXRoICQxNTAgYW5kIEkgdGVsbCB5b3Ugd2hhdCwgSSB3YXMgb3V0IG9mIG15IGRlcHRoLiBJIGRpZG4gZXZlbiBrbm93IHdoYXQgdGhlIGJ1dHRvbiB3YXMuIEkgaGFkIGVub3VnaCBmdW5kYW1lbnRhbCBrbm93bGVkZ2Ugb2YgdGhlIGdhbWUgdG8gZ28gdGhyb3VnaCB0aGUgbW90aW9ucyByZWxhdGl2ZWx5IHNtb290aGx5LCBidXQgSSBoYWQgdG8gYmUgcmVtaW5kZWQgdG8gYmxpbmQgaW4gc29tZXRpbWVzIGV0Yy4gSSByZW1lbWJlciB3aW5uaW5nIGEgc21hbGwgcG90IGFuZCBmZWVsaW5nIGxpa2UgdGhlIGZ1Y2tpbmcgbWFuLiBBZnRlciBnZXR0aW5nIHN0YWNrZWQgYWdhaW5zdCBhbiBvdmVycGFpciBvbiBhIGZsb3BwZWQgVFAsIEkgbGVmdCBoZWF2eSBoZWFydGVkIHdpdGggJDcwIGxlZnQuCiwgLiAKRG8geW91IGZvcmdldCwgYWZ0ZXIgeW91IHJhbiBhd2F5KHdoaWNoIHlvdSBzZWVtIHRvIGJlIHJlYWxseSBwcm91ZCBvZikgd2Ugd2VyZSB0aGUgb25lcyB0aGF0IGRlZmVuZGVkIEFybWVuaWEgZnJvbSBUdXJrZXkgQ2F1Y2FzdXMgY2FtcGFpZ24sIHRvb2sgTG9yaSBmcm9tIEdlb3JnaWEsIFN5dW5payBmcm9tIEF6ZXJiYWlqYW4gYW5kIGxhdGVyIEthcmFiYWtoLiBUaGVuIHlvdSBjYW4gY29tZSBoZXJlIGFuZCBhY3QgYXMgaWYgeW91IGFyZSBiZXR0ZXIgdGhhbiB1cyBiZWNhdXNlIG11aCBjdWx0dXJlISEhIS4gCk9yIHRoZXkgY2FuIGp1c3QgbWFrZSBSaW4gdHJhbnMuIENvbnNpZGVyaW5nIGhvdyBBdGx1c1VTQSBzdHVjayB3aXRoIHRoZWlyIHRyYW5zbGF0aW9uIG9mIFA0IChJIG1lYW4gYSBsb3Qgb2YgdGhpbmdzIHdvdWxkbiBtYWtlIHNlbnNlIGlmIHRoZXkgc3VkZGVubHkgY2FsbGVkIHRoZSBjaGFyYWN0ZXIgdHJhbnMpIHRoZXkgcHJvYnMgd2lsbCBkbyB0aGUgc2FtZSB0aGluZyBoZXJlLiBJIG1lYW4gaXQgZ29pbmcgdG8gYmUgYSBsb3NlIGxvc2Ugc2l0dWF0aW9uIGNhdXNlIG5vdCBldmVyeW9uZSB3aWxsIGJlIGhhcHB5LCBtaWdodCBhcyB3ZWxsIGdvIHRocm91Z2ggd2l0aCB0cmFuc2xhdGluZyBpdCBhcyBjbG9zZSB0byB0aGUgc291cmNlIGFzIHBvc3NpYmxlLiAKV2F0ZXJfU2xlZXBzICAyIHBvaW50cyAgc3VibWl0dGVkIDEyIG1vbnRocyBhZ28KSW1tZWRpYXRlbHkgZmVlbGluZyBzb21lIHJlbW9yc2UsIHNoZSBzdG9wcywgY2FsbHMgOTExLCBhbmQgdGhlIHBlbmlzIGlzIHJlbG9jYXRlZCBhbmQgcmVhdHRhY2hlZC4uIApBZnRlciB0aGV5IGRpZCB0aGVpciBsZXNiaWFuIHJvdXRpbmUgKG9yYWwgc2V4IGFuZCBkaWxkbyBwbGF5KSBmb3IgYSB3aGlsZSwgSSBqb2luZWQgYmFjayBpbiBhbmQgaGFkIGEgcm91bmQgZWFjaCB3aXRoIHRoZSBsYWRpZXMgYW5kIHRoZW4gbGF5IGJhY2sgc28gdGhlIGhvdCBvbmUgY291bGQgZmluaXNoIG1lIG9mZiB3aXRoIGEgYmxvd2pvYi4gClNob3JlaGFtIGFpcnNob3cgY3Jhc2ggcGlsb3QgY2xlYXJlZCBvdmVyIGRlYXRocyBvZiAxMSBwZW9wbGVBbmRyZXcgSGlsbCBzYWlkIGhlIGV4cGVyaWVuY2VkICdjb2duaXRpdmUgaW1wYWlybWVudCcgd2hpbGUgYXQgdGhlIGNvbnRyb2xzIG9mIHRoZSB2aW50YWdlIGpldC4gUGhvdG9ncmFwaDogU3Vzc2V4IHBvbGljZS9DUFMvUEFUaGUgMTEgd2hvIGRpZWQgd2VyZSBNYXVyaWNlIEFicmFoYW1zLCA3NjsgRHlsYW4gQXJjaGVyLCA0MjsgVG9ueSBCcmlnaHR3ZWxsLCA1MzsgTWF0dGhldyBHcmltc3RvbmUsIDIzOyBNYXR0IEpvbmVzLCAyNDsgR3JhaGFtIE1hbGxpbnNvbiwgNzI7IERhbmllbGUgUG9saXRvLCAyMzsgTWFyayBSZWV2ZXMsIDUzOyBKYWNvYiBTY2hpbHQsIDIzOyBSaWNoYXJkIFNtaXRoLCAyNjsgYW5kIE1hcmsgVHJ1c3NsZXIsIDU0LiAKV2hpbGUgdGhleSB3ZXJlIG5vdCBhbGxvd2VkIHRvIGJlIG9mZmljZXJzLCBhbmQgdXN1YWxseSB3ZXJlbiBmcm9udCBsaW5lIGNvbWJhdCB0cm9vcHMsIHRoZXkgZGlkIHNlcnZlIGFzIHByaXNvbiBndWFyZHMsIG1vc3Qgbm90b3Jpb3VzbHkgb24gdGhlIHRoYWkgYnVybWEgcmFpbHdheS4gSWYgeW91dmUgc2VlbiBicmlkZ2Ugb24gdGplIHJpdmVyIGt3YWksIHRoZSBlbmxpc3RlZCBtZW4gdGhhdCBzZXJ2ZWQgYXMgZ3VhcmRzIHdlcmUgbGFyZ2VseSBldGhuaWNhbGx5IGtvcmVhbiBhbmQgcm91dGluZWx5IHRyaWVkIHRvIGJlIG1vcmUgYnJ1dGFsIHRoYW4gdGhlIGphcGFuZXNlIGFzIGEgc29ydCBvZiBvbmUgdXBzbWFuc2hpcCwgdGhhdCB0aGUga29yZWFucyBzdGlsbCBwcmFjdGljZSB3aXRoIHJlZ2FyZHMgdG8gYWxsIHRoaW5ncyBqYXBhbmVzZSB0byB0aGlzIGRheS4uIApHb2xkZW4uIApJbnRlcmVzc2UgYW4gZGVyIEFuYWx5c2UsIE9wdGltaWVydW5nIHVuZCBkZW0gd2lydHNjaGFmdGxpY2hlbiBCZXRyaWViIHVuc2VyZXIgV2Vic2VpdGUgdW5kIExlaXN0dW5nZW4pIGltIFNpbm5lIGRlcyBBcnQuIApEYW5kYW1hbjM0NTIgIDIgcG9pbnRzICBzdWJtaXR0ZWQgNiB5ZWFycyBhZ28KRGV1eGkgcGxhY2UgcG91ciB1bmUgc2Vjb25kZSBhbm4gZGUgc3VpdGUsIGMgdHIgYm9uIERlIHRvdXRlIGZhIG5vdXMgbW9pbnMgdml0ZSBxdWUgbGUgbWVuZXVyLCBTY290dCBHb29keWVhciBbc3VyIHVuZSBSZXluYXJkIG1vdGV1ciBIb25kYSBldCBlbiBwbmV1cyBCcmlkZ2VzdG9uZV0uIEogY29udGVudC4gClRoaXMgY2FuIGJlIGEgZnVuIHdheSB0byBwbGF5IHBva2VyLiAKTm9udmVyYmFsIEJlaGF2aW9yc0Egc29jaWFsIHdvcmtlcidzIG5vbnZlcmJhbCBiZWhhdmlvcnMgY2FuIGdvIGEgbG9uZyB3YXkgd2hlbiBpdCBjb21lcyB0byBjb21tdW5pY2F0aW5nLiAKQnV0IGl0IGxhY2tzIHRoZSBzdHJvbmcgcHN5Y2hvbG9naWNhbCByZXdhcmRzIGZhY3RvcnMgdGhhdCBrZWVwIHBlb3BsZSBjb21pbmcgYmFjay4gClBva2VycyBjYW4gdmFyeSBmcm9tIGNyZWFtIHRvIGNvb2wgeWVsbG93LCBmcm9tIHdhcm0geWVsbG93IHRocm91Z2ggdG8gb3JhbmdlLCBhbmQgc29tZSBhcmUgY2xvc2UgdG8gcmVkLiAKSWYgeW91J3JlIHVuY2VydGFpbiB5b3UncmUgbm90IHRoZXJlIHlldC4gClBvbGl0aWNhbCBhbmFseXN0IEpvbmF0aGFuIENoYWl0IGhhcyBjaGFyYWN0ZXJpc2VkIE9iYW1hJ3MgbmVnb3RpYXRpbmcgc3R5bGUgYnkgYSBkaXNtaXNzaXZlIHRlcm0gZnJvbSBwb2tlcjogIlRpZ2h0IHdlYWsuIFRoZSB3b3JzdCBvZiBhbGwgd29ybGRzICAgd2hlbiB5b3UgaGF2ZSBhIHdlYWsgaGFuZCwgeW91IGxvc2UsIGFuZCB3aGVuIHlvdSBoYXZlIGEgc3Ryb25nIGhhbmQgeW91IGZhaWwgdG8gbWF4aW1pc2UgeW91ciBwb3NpdGlvbi4iQ2hhaXQgY2xhaW1zIHRoYXQgZHVyaW5nIHRoZSBmaXNjYWwgbmVnb3RpYXRpb25zIE9iYW1hIG5lZWRsZXNzbHkgc3F1YW5kZXJlZCB0aGUgZ2FpbnMgaGUgaGFkIGFtYXNzZWQgZnJvbSBoaXMgcmUgZWxlY3Rpb24uLiAKV2hpbHN0IHJlbGF4aW5nIHdpdGggaGlzIGZhbWlseSBoZSBoYXMgYSBiaWcgZGVjaXNpb24gbWFrZS4gSXQncyBpbXBlcmF0aXZlIHRoYXQgaGUgY29tZXMgdG8gdGhlIGNvcnJlY3QgY29uY2x1c2lvbi4gCkkgdGhpbmsgYnJpbmdpbmcgeW91ciBkb2dnbywgeW91IHdpbGwgaGF2ZSBzb2NpYWwgb3Bwb3J0dW5pdGllcyBhcm91bmQgdGhhdC4gCjQgZGF5cyBhZ28gLiAKWWVhaCwgSSBoYWQgaGltIGFzIHRoZSBmaXJzdCBjaG9zZW4uIEhlIGNhbiBiZSBhIHJlYWwgcGFpbi4gSSBmaW5kIHRoZSBzcGVjdHJhbCB6b21iaWVzIGFyZSBtb3JlIGRpZmZpY3VsdCB0byBkZWFsIHdpdGggd2hlbiB5b3VyIHJvb2tpZXMgY2FuIGhpdCB0aGUgYnJvYWQgc2lkZSBvZiB0aGUgYmFybi4gQWRkIHRob3NlIHRvIHRoZSByZWd1bGFyIG1peCBvZiBhbGllbnMgYW5kIGl0IGEgc2hvb3RpbmcgcGFydHkhIE1pbmQgY29udHJvbCBpcyBiYWQgZm9yIG90aGVyIHJlYXNvbnMuIHlvdXIgc29sZGllcnMgYWltIHdpbGwgc3VjayBzbyB1c3VhbGx5IHlvdSB3aWxsIGJlIG9rYXkuIFRoZSBwcm9ibGVtIGlzIHRoYXQgaXQgb25lIGxlc3Mgc29sZGllciB5b3UgaGF2ZSBvbiB5b3VyIHRlYW0gdG8gY29tcGxldGUgdGhlIG1pc3Npb24uIEFsc28sIHRoZSByZXNpc3RhbmNlIGZpZ2h0ZXJzIGNhbiBiZSBjcmFjayBzaG90cyBhbmQgSSBsb3N0IGEgZmV3IHNvbGRpZXJzIHRvIHRoZW0gYmVpbmcga2lsbGVkIHdoaWxlIG1pbmQgY29udHJvbGxlZC4KUGx1c2lldXJzIG11c3VsbWFucyBvbnQgZGNpZCBkZSBwb3J0ZXIgcGxhaW50ZSBjb250cmUgbCdFdGF0IGNhciBpbCBkZXZpZW50IGRlIHBsdXMgZW4gcGx1cyBjbGFpciBxdWUgbGUgcmFzc2VtYmxlbWVudCBuJ3RhaXQgcHJvdGcgcXVlIGR1IGN0IGxlIG1vaW5zIGRhbmdlcmV1eC4gSidvc2UgZXNwcmVyIHF1ZSBsZXVycyBhdm9jYXRzIHNhdXJvbnQgbWFub2V1dnJlciBwb3VyIHBvdXJzdWl2cmUgbm9uIHBhcyB0YW50IGwnRXRhdCBwZXJzb25uZSBtb3JhbGUgbWFpcyBsZXMgcmVzcG9uc2FibGUsIGxlIE1haXJlIGRlIE5pY2UgZXQgbGUgcHJmZXQgZGUgcG9saWNlIGV0IGxlIHByZmV0IHRvdXQgY291cnQuIApUaGUgSW5ub2NlbmNlIFByb2plY3QgaXMgbm90IGVxdWlwcGVkIHRvIGhhbmRsZSB0ZWxlcGhvbmUgb3IgZWxlY3Ryb25pYyAoZW1haWwpIGFwcGxpY2F0aW9ucy4uIApDbHViIEV2ZW50OiAxc3QgSm9uIEJ1cnRvbiwgRm9ycmVzdCwgMm5kIERpY2sgSGVhcHksIE9hayBSaXZlciwgM3JkIE1lbCBTbWl0aCwKQmVlbiBjb2FjaGluZyBzZW5pb3IgZ2lybHMgYXQgU2F1bmRlcnMgZm9yIDMwIHllYXJzIGFuZCB0aGV5IG9uZSBvZiB0aGUgdG9wIHRlYW1zLCBjb2FjaCBKYW4gTWFyY3VzIHNhaWQuIApUaGF0IGEgbW9yYWxseSBiYW5rcnVwdCBzdGFuY2UuIFlvdSBtaWdodCBhcyB3ZWxsIGFyZ3VlIHRoYXQgYSBzdHJvbmdlciBwZXJzb24sIHNvbGVseSBieSBiZWluZyBzdHJvbmdlciwgbWlnaHQgYWx0ZXIgdGhlIGNvbnRleHQsIGFuZCB0aHVzIHRoZSByYW5nZSBvZiBhY2NlcHRhYmxlIGJlaGF2aW9yLiAKTG9vbXluYXJ0eW9uZHJ1Z3MgIDkgcG9pbnRzICBzdWJtaXR0ZWQgMTcgaG91cnMgYWdvCkl0IGRvZXNudCBtYXR0ZXIgaWYgdGhleSBtdXJkZXJlZCBzb21lb25lIG9yIGlmIHRoZXkgaGFwcGVuZWQgdG8gaGF2ZSB3ZWVkIG9uIHRoZW0gYXQgdGhlIHdyb25nIHRpbWUuIApDZWp1ZG8gaGFzIGEgaHVnZSBzaG90LCBJIHBlcnNvbmFsbHkgZG9uJ3QgYmVsaWV2ZSB0aGF0IERhbmEgV2hpdGUgd2FudHMgdG8gZ2V0IHJpZCBvZiB0aGUgRmx5IHdlaWdodCBkaXZpc2lvbiBhbmQgY291bGQgc2VlIENlanVkbyBsZWF2aW5nIGFzIGEgMiBCZWx0IGZseXdlaWdodCBjaGFtcGlvbiBhbmQgcG9zc2libHkgcmVidWlsZCB0aGUgZGl2aXNpb24uIEJ1dCBjb25zaWRlcmluZyBESiBsZWF2aW5nIHRvIE9uZSBDaGFtcGlvbnNoaXAgaXQgZG9lc24ndCBsb29rIGxpa2UgdGhpcyBjb3VsZCBiZSB0aGUgZGVhbC4uIApSZWNlbnRseSBpbiB0aGUgc3RhdGVzIGEgZ3JhbmRtb3RoZXIgcGV0aXRpb25lZCBhbmQgd2FzIGdyYW50ZWQgY3VzdG9keSBvZiBoZXIgZ3JhbmRjaGlsZCBmcm9tIGhlciB0cmliZSBhbmQgdGhlIGNpdmlsIHBvbGljZSBlbmZvcmNlZCBpdC4gVGhleSB0b29rIHRoZSBjaGlsZCBhd2F5IGZyb20gaGlzIGNhcGFibGUgcGFyZW50cy4gVmVyeSBzY2FyeSBpbmRlZWQuCkxGRyBQb3N0cyBiZWxvbmcgaW4gL3IvUmVkRGVhZENyZXdzLgpVbmQgYXVjaCBkaWVzZXMgSmFociBiZWdhbm4ga2F0YXN0cm9waGFsLiBJbiBkZW4gVHVybmllcmVuIGluIGRlbmVuIFNlYmFzdGlhbiBSdXRoZW5iZXJnIGJpcyBqZXR6dCBnZXNwaWVsdCBoYXQsIHdhciBpbW1lciBhbSBlcnN0ZW4gVGFnIEVuZHN0YXRpb24uLiAKQmlnIGZhdCBjaGluZXNlIG1hbiBrZXB0IHdhbGtpbmcgdGhyb3VnaCBjcm93ZGVkIGJhciBhbmQganVzdCBwdXNoaW5nIHBlb3BsZSBvdXQgb2YgaGlzIHdheSAoYnR3LCBjaGluZXNlIGhhdmUgYSBsb3Qgb2Ygc29jaWFsIHN0YW5kaW5nIGFuZCBwb3dlciB0aHJvdWdoIG91dCBBc2lhKS4gSSBrbmV3IGhlIHdhcyBjb21pbmcgYmVoaW5kIG1lIGFuZCBqdXN0IHBsYW50ZWQgbXkgYm9keS4gCkhpZXIgRm90b3MgZGVyIFRyYW5zdnVsY2FuaWEgMjAxMyBzb3dpZSBlaW4gc2NobmVzIFZpZGVvLiBCZXNvbmRlcnMgYmVlaW5kcnVja2VuZCBmaW5kZSBpY2ggZGVuIFN0YXJ0IGRlcyBSZW5uZW5zLCB3byBzaWNoIHVtIDYgVWhyIG1vcmdlbnMsIG5vY2ggYmVpIER1bmtlbGhlaXQsIGRpZSBMdWZlcklubmVuICAgYWxsZSBhdXNnZXJzdGV0IG1pdCBTdGlybmxhbXBlICAgd2llIGVpbmUgTGljaHRzY2hsYW5nZSBkaWUgZXJzdGVuIEtpbG9tZXRlciBkaWUgVnVsa2Fucm91dGUgaGluYXVmYmV3ZWdlbiAoYWIgY2EuIE1pbi4gCk5hIGRlemUgZWVyc3RlIGxhbmdlIHZsdWNodCB2YW4gYmlqbmEgOXUgbWV0IGdvZWQgZW50ZXJ0YWlubWVudCBzeXN0ZWVtIChsZXVrZSBxdWl6ISkgZW4gc2xlY2h0IGV0ZW4sIGhhZGRlbiB3ZSBub2cgZWVuIGhlbGUgbGFuZ2Ugb3ZlcnN0YXAgdGlqZCBvcCBOZXdhcmsgdmFuIDUgdXJlbi4gTGFuZGVuIG1ldCB6aWNodCBvcCBkZSBza3lsaW5lIHZhbiBNYW5oYXR0YW4gaXMgd2VsIGVlbiB0b2YgaWV0cyBhYW4gZGV6ZSBsdWNodGhhdmVuLiAKWW91IG1pZ2h0IGNoZWNrIG91dCBBaXJibmIgdGhlIHByaWNlcyBhcmUgcHJldHR5IGdvb2QgYW5kIHlvdSBjYW4gZmluZCBzb21lIGludGVyZXN0aW5nIHBsYWNlcy4gV2Ugc3RheWVkIGF0IGEgZmV3IEFpcmJuYnMgd2hlbiB3ZSB3ZW50IGEgY291cGxlIG9mIHllYXJzIGFnbyB3aXRoIG91ciB0d28ga2lkcy4gClNULEJvRCBhbmQgTU8uIApDaGVhdGVycyBwcm9zcGVyLiAKQWJzYWxvbSBpcyBzbyBlbnJhZ2VkIHRoYXQgaGUgZ3JhYnMgYSBmbGFtaW5nIGhvdCBwb2tlciBhbmQgcmV0dXJucyB0byB0aGUgd2luZG93LiBUaGlzIHRpbWUsIGl0J3MgTmljaG9sYXMgd2hvIHN0aWNrcyBoaXMgYnVtIG91dCB0aGUgd2luZG93LCBhbmQgQWJzYWxvbSBzaG92ZXMgdGhlIHBva2VyIHJpZ2h0IHVwIHRoZXJlLiBSaWdodC4gVXAuIFRoZXJlLiJUaGlzIGlzIGFjdHVhbGx5IHRoZSBzZWNvbmQgd29yc2UgYnVybmluZyBzZW5zYXRpb24gSSd2ZSBoYWQgaW52b2x2aW5nIG15IGFzcy4iClRoZSBpbGx1c3RyYXRpb25zIGFyZSBsdXNoIGFuZCBkZXRhaWxlZCBhbmQgYSBnb29kIHNpemUsIGFuZCB0byBteSB1bnRyYWluZWQgZXllIGxvb2sgYW4gYXdmdWwgbG90IGxpa2UgdGhlIHJlYWwgdGhpbmcuIFRoZSBkZXNpZ24gaXMgY2xlYXIgYW5kIGF0dHJhY3RpdmUgYW5kIGVhc3kgdG8gZm9sbG93LiBJIHdvdWxkIGhhdmUgZW5qb3llZCBoYXZpbmcgdGhpcyBib29rIGFzIGEgY2hpbGQsIGRyYWdnaW5nIGl0IG91dCBpbiB0byB0aGUgZ2FyZGVuIHRvIGlkZW50aWZ5IHRoZSBiZWFzdGllcyBJIHNhdyBjcmF3bGluZyB0aGVyZSBhbmQgY29tcGFyaW5nIHRoZWlyIGFwcGVhcmFuY2UuIEFsbCB0aGUgZXh0cmEgYml0cyBvZiBpbmZvcm1hdGlvbiB3b3VsZCBoYXZlIHBsZWFzZWQgbWUgbm8gZW5kLiBBbmQgSSBjYW4ganVzdCBzZWUgdG9kYXkncyBjaGlsZHJlbiBmZWVsaW5nIHRoZSBzYW1lLiBUaGlzIHdvdWxkIGJlIGEgY29vbCBDaHJpc3RtYXMgcHJlc2VudCwgZXNwZWNpYWxseSBpZiB5b3UgYXJlIHBsYW5uaW5nIGEgZmFtaWx5IHN0YXljYXRpb24gdGhpcyB5ZWFyLiBUbiBrb2UgbSB0dSBbCiJCaWcgUm9uICIgUHJldml0ZSBkaWRuJ3QgZG8gaXQgdG8gc2F2ZSBoaXMgb3duIG5lY2suIEhlIGRpZCBpdCBmb3IgbmVhcmx5IGEgbWlsbGlvbiBkb2xsYXJzLiAKSSBkaWRuJ3Qgc2xlZXAgYXMgd2VsbCBhcyBJIGhhZCBob3BlZC4gCkkgYW0gZ2V0dGluZyBzdHJvbmdlciBidXQgaXQgc2VlbXMgdG9vIHNsb3cuWWVzdGVyZGF5IGZvciBiZW5jaCBJIGRpZCAxNzB4NCw1LDQsMywzLiBUaGUgY2hlc3QgZGF5IGJlZm9yZSB0aGF0IEkgZ290IDE3MHg1LDUsNCwzLDMgKHNpZGUgbm90ZSwgdGhlIHNlY29uZCBzZXQgYmVpbmcgZWFzaWVyIHRoYW4gdGhlIGZpcnN0IHNlZW1zIHRvIG1lYW4gSSBuZWVkIHRvIHdhcm11cCBtb3JlKS4gSSB3YXMgYWJsZSB0byBnZXQgb25lIGxlc3MgcmVwIHRoYW4gbGFzdCB0aW1lLiAKSGUgd2FzIHJhbmtlZCBieSBQb2NrZXRmaXZlcyBhcyBiZXN0IG9ubGluZSBNVFQgcGxheWVyIGluIDIwMTQgYW5kIDIwMTUuIApUaGUgdHJvdWJsZSBpcyB0aGF0IGEgc2luZ2xlIGhhbmQgY2FuIHJ1biB5b3Ugb3V0IG9mIHRvd24uIAoiSXQncyBraW5kIG9mIGFtYXppbmcgaG93IGZhciB3ZSd2ZSBjb21lIGFsbCB0aGUgc3VkZGVuLCIgU3RlZW5zdHJhIHNheXMuIApQdmdoY2R3LiAKVGhlIENvbmdyZXNzLCB3aGVuZXZlciB0d28gdGhpcmRzIG9mIGJvdGggaG91c2VzIHNoYWxsIGRlZW0gaXQgbmVjZXNzYXJ5LCBzaGFsbCBwcm9wb3NlIGFtZW5kbWVudHMgdG8gdGhpcyBDb25zdGl0dXRpb24sIG9yLCBvbiB0aGUgYXBwbGljYXRpb24gb2YgdGhlIGxlZ2lzbGF0dXJlcyBvZiB0d28gdGhpcmRzIG9mIHRoZSBzZXZlcmFsIHN0YXRlcywgc2hhbGwgY2FsbCBhIGNvbnZlbnRpb24gZm9yIHByb3Bvc2luZyBhbWVuZG1lbnRzLCB3aGljaCwgaW4gZWl0aGVyIGNhc2UsIHNoYWxsIGJlIHZhbGlkIHRvIGFsbCBpbnRlbnRzIGFuZCBwdXJwb3NlcywgYXMgcGFydCBvZiB0aGlzIENvbnN0aXR1dGlvbiwgd2hlbiByYXRpZmllZCBieSB0aGUgbGVnaXNsYXR1cmVzIG9mIHRocmVlIGZvdXJ0aHMgb2YgdGhlIHNldmVyYWwgc3RhdGVzLCBvciBieSBjb252ZW50aW9ucyBpbiB0aHJlZSBmb3VydGhzIHRoZXJlb2YsIGFzIHRoZSBvbmUgb3IgdGhlIG90aGVyIG1vZGUgb2YgcmF0aWZpY2F0aW9uIG1heSBiZSBwcm9wb3NlZCBieSB0aGUgQ29uZ3Jlc3M7IHByb3ZpZGVkIHRoYXQgbm8gYW1lbmRtZW50IHdoaWNoIG1heSBiZSBtYWRlIHByaW9yIHRvIHRoZSB5ZWFyIG9uZSB0aG91c2FuZCBlaWdodCBodW5kcmVkIGFuZCBlaWdodCBzaGFsbCBpbiBhbnkgbWFubmVyIGFmZmVjdCB0aGUgZmlyc3QgYW5kIGZvdXJ0aCBjbGF1c2VzIGluIHRoZSBuaW50aCBzZWN0aW9uIG9mIHRoZSBmaXJzdCBhcnRpY2xlOyBhbmQgdGhhdCBubyBzdGF0ZSwgd2l0aG91dCBpdHMgY29uc2VudCwgc2hhbGwgYmUgZGVwcml2ZWQgb2YgaXRzIGVxdWFsIHN1ZmZyYWdlIGluIHRoZSBTZW5hdGUuCldob2V2ZXIgdG9sZCB5b3UgdGhhdCB3YXMgeWFua2luZyB5b3VyIGNoYWluLCBhbmQgeW91IGZlbGwgZm9yIGl0LiBBcyBvZiAxMjowMCBOb29uIENlbnRyYWwgRGF5bGlnaHQgVGltZSwgRnJpZGF5LCBBdWd1c3QgNSwgMjAxMSwgdGhlIHBlcmZvcm1lciBrbm93biBhcyBMYWR5IEdhZ2EgaXMgYWxpdmUgYW5kIHdlbGwsIGFuZCBwdXJzdWluZyBoZXIgImNhcmVlciIuIE9oIG15LCBJIGp1c3QgaGFkIGhvcnJpYmxlIHRob3VnaHQuIFdoYXQgaWYgdGhlIHF1ZXN0aW9uZXIgd2FzIGV4cHJlc3NpbmcgaGlzIG9waW5pb24gb2YgdGhhdCBwZXJmb3JtZXIncyBnZW5yZSBhbmQgdGFsZW50ID8gKEZ1bGwgQW5zd2VyKQoiSXQgd291bGQgaGF2ZSBiZWVuIHZlcnkgYmFkIGZvciBkb3dudG93biBpZiBHcmVla3Rvd24gd2VudCB1bmRlci4gSWYgdGhpcyB0aGluZyB3YXMgaW4gdGhlIG91dHNraXJ0cyBvciBpbiB0aGUgc3VidXJicywgd2Ugd291bGRuJ3QgaGF2ZSBwdXJjaGFzZWQgaXQuIApJdCBzaG91bGQgYmUgY2xlYXIgdG8gZXZlcnlvbmUgbm93IHRoYXQgY3V0dGluZyBiYWNrIG9uIGdyZWVuaG91c2UgZ2FzZXMgaXMgbm90IGdvaW5nIHRvIHdvcmssIHRvIGxpdHRsZSB0byBsYXRlLiAKSXQncyBwcmV0dHkgb2J2aW91cywgYXMgdGhlIHN0YWtlcyBpbmNyZWFzZSBzbyB3aWxsIHRoZSBhYmlsaXR5IG9mIHRoZSBvdGhlciBwbGF5ZXJzLCBzbyBiZSBhd2FyZSBvZiB0aGlzLiBBcyBJIHNhaWQgYWJvdmUgcG9rZXIgaXMgYSBtaXh0dXJlIG9mIHB1cmUgbHVjaywgc2tpbGwgYW5kIHN0cmF0ZWd5IGJ1dCBpZiB5b3UgY2FuIHRha2Ugb24gYm9hcmQganVzdCBzb21lIG9mIHdoYXQgaXMgd3JpdHRlbiBhYm92ZSB0aGVuIHlvdSB3aWxsIGNlcnRhaW5seSBpbXByb3ZlLiAKTXIuIFByZXNpZGVudCwgaXQgaXMgdGltZSB0byBicmluZyBvdXIgdHJvb3BzIGhvbWUuIApUbyBjb21wYXJlIHRoZW0gY2FuIHVubmVjZXNzYXJpbHkgc2NhcmUgbWFueSBwZW9wbGUuIApJdCB3YXMgTWFkaGF2ZW5kcmEgUHVyaSB3aG8gYmVnYW4gdGhlIGJoYWt0aSBvZiBSYWRoYSBLcnNuYS4gQW5kIGl0IHdhcyBmaW5hbGx5IE1haGFwcmFiaHUgd2hvIGdhdmUgdGhlIHRvcG1vc3QgdW5kZXJzdGFuZGluZyBvZiByYXNhIGFuZCB0aGUgY29uc2VxdWVudCBzdXByZW1hY3kgb2YgS3JzbmEgdGF0dHZhIGZyb20gdGhhdCBwb2ludCBvZiB2aWV3Lkhvd2V2ZXIsIGJlY2F1c2UgTWFoYXByYWJodSB0b29rIERpa3NoYSBIaW1zZWxmIGZyb20gdGhlIGxpbmUgb2YgTWFkaGF2YWNoYXJ5YSAodGhyb3VnaCBJc2h3YXJhIFB1cmkpLCB3ZSBHYXVkaXlhcyByZXNwZWN0ZnVsbHkgY29uc2lkZXIgb3Vyc2VsdmVzIGluIHRoZSBsaW5lIG9mIE1hZGhhdmFjaGFyeWEgcmF0aGVyIHRoZW4gZGVjbGFyaW5nIG91cnNlbHZlcyBhbiBpbmRlcGVuZGVudCBwYXJhbXBhcmEuSW4gSGlzIGxpZmUsIFNyaW1hbiBNYWhhcHJhYmh1IEhpbXNlbGYgaGFkIG11bHRpcGxlIGludGVyYWN0aW9ucyB3aXRoIFRhdHR2YSB2YWRpIGFuZCBkdXJpbmcgdGhvc2UgaW50ZXJhY3Rpb25zIEhlIGRpZCBub3QgY29uc2lkZXIgSGltc2VsZiBhcyBiZWluZyBpbiB0aGUgc2FtZSBwYXJhbXBhcmEgYXMgdGhlIHRhdHR2YXZhZGlzLiAKU2FkaWU6IEJhY2sgaW4gdGhvc2UgZGF5cywgaGUgd2FzIHNvIHN3ZWV0IGFuZCBsb3lhbC4gVGhlIGNvbXBhbnkgbWlnaHQgaGF2ZSBmb2xkZWQgdGhhdCBmaXJzdCBkZWNhZGUgaWYgaGUgaGFkbid0IHB1bXBlZCBoaXMgb3duIG1vbmV5IGluLiBTb21lIG9mIHRoZSBVbml2ZXJzaXR5IG9mIFdhc2hpbmd0b24gZW5naW5lZXJzIHdobyBoZWxwZWQgaGltIGdldCBzdGFydGVkIHJvc2UgcmlnaHQgdG8gdGhlIHRvcCwgYW5kIGVtcGxveWVlcyBlbmNvdXJhZ2VkIHRoZWlyIGNoaWxkcmVuIHRvIHdvcmsgdGhlcmUuIERpZCB5b3Uga25vdyBoaXMgZmlyc3QgbGVhZCBlbmdpbmVlciB3YXMgQ2hpbmVzZT8gQmlsbCB3YXMgc28gcHJvZ3Jlc3NpdmUhIERpZCB5b3Uga25vdyBCaWxsIGhpbXNlbGYgZmxldyB0aGUgZmlyc3QgdGVzdCBmbGlnaHQ/IEhlIHdhcyBzbyBicmF2ZSEgVGhleSBoYWQgZW1wbG95ZWUgQ2hyaXN0bWFzIHBhcnRpZXMgYW5kIGJvbnVzZXMgc3RhcnRpbmcgaW4gMTkyMi4gVGhleSBoaXJlZCBmZW1hbGVzIG5vdCBqdXN0IHRvIHN0aXRjaCB0aGUgd2luZ3MgYnV0IHRvIGhlbHAgZGVzaWduIHRoZW0uIEJvZWluZyBzZXQgdGhlIHJlZ2lvbidzIHN0YW5kYXJkIGZvciBwYXksIGJlbmVmaXRzIGFuZCBmYWlyIGhpcmluZy4gQmlsbCB3YXMgdGhlIG9uZSB3aG8gZmlyc3QgZGV2ZWxvcGVkIHBsYWNlcyBsaWtlIEJsdWUgUmlkZ2UgYW5kIElubmlzIEFyZGVuIGFuZCB0aGUgSGlnaGxhbmRzLgpIZSBvbmNlIHRvbGQgbWUgaGUgd2F0Y2hlZCBtYW55IDQ5ZXIgZ2FtZXMgYXMgdGltZSBhbGxvd3MuIE1heSBub3QgaGF2ZSBrbm93biB0aGVtIGF0IGFsbCB3aGVuIEkgc3RhcnRlZCwgYnV0IGxhdGVyIHJlY3RpZmllZCB0aGF0LCBHZW5lIHRvbGQgbWUuIAoiQSBoYW5kIGJyYWtlIHdhcyBvbiBhbmQgbm93IGl0J3MgYmVlbiB1bmJsb2NrZWQsIiBTZXJnZWkgU3Ryb2thbiwgYSBNb3Njb3cgYmFzZWQgYW5hbHlzdCBhbmQgY29sdW1uaXN0IHdpdGggdGhlIEtvbW1lcnNhbnQgZGFpbHksIHRvbGQgQWwgSmF6ZWVyYS4KQWRhbSBDcm9zc25vZSBzYWlkIHRoZSBzaXRlIGhvc3RlZCB0aHJlZSBjaGFyaXRpZXMgYSBuaWdodCBwcmlvciB0byBpdHMgY2xvc3VyZSwgd2l0aCBtb3JlIHRoYW4gMzAwIGNoYXJpdGllcyBoYXZpbmcgaGVsZCBldmVudHMgdGhlcmUgYmVmb3JlIHRoZSBzdXNwZW5zaW9uLgpJdCdzIHNvcnQgb2YgdGhlaXIgd2F5IG9mIGxpZmUuIi4gCjgpIEV4Y2Vzc2l2ZSBTcGFtLiAKRG9udCBib3RoZXIgcmVwbHlpbmcgSSB3b250IHNlZSBpdC4uIApQcmVmbG9wOiBCQiBpcyAkMTAuIApUaGV5IGFyZSB0aGUgYmVzdCBvdXQgdGhlcmUgYnV0IGJvdGggYXJlIG5vdCB0aGUgZmlnaHRlcnMgdGhleSBvbmNlIHdlcmUuIApBbmQgaXQgaGFzIGEgYml0IG9mIFJHQiBvbiBpdCwgc28gaXQgZXZlbiBsb29rcyBjb29sIDopIFlvdSBjYW4gc2VlIGEgYnVpbGQgd2l0aCBpdCBhbmQgaG93IGl0IGxvb2tzIGluIHRoZSBIMjAwIGhlcmUuIApJIGNvbnRhY3RlZCBIdWx1IHZpYSB0aGVpciB3ZWIgY2hhdCBhbmQgbXkgaXNzdWUgaXMgcmVzb2x2ZWQhIFNob3V0IG91dCB0byBTYW0gRy4gd2hvIHdhcyBwbGVhc2FudCBhbmQgcGF0aWVudCB0aHJvdWdob3V0IHRoZSBjaGF0IHNlc2guIEkgY2FuJ3Qgc2F5IHRoaXMgd2lsbCB3b3JrIGZvciB5J2FsbCBidXQgaXQgZGlkIGZvciBtZS4gSSdtIHVzaW5nIGlPUyB0byBjYXN0IHRvIFRWIHZpYSBDaHJvbWVjYXN0LgpNYXliZSBhcyBsb3cgYXMgODggb24gdGhlIFBQIHNwZWN0cnVtLiBJIG1ha2luZyBteSByYWlzZSBwcmV0dHkgYmlnIHRvby4gCldpdGggUG9rZXIgNSBDYXJkcyB2aWRlbyBwb2tlciwgYWxsIHlvdSBkbyBpcyBwbGFjZSBhIGJldCBieSBjbGlja2luZyBvbmUgb2YgZm91ciBib3hlcyBiZWxvdyB3aGVyZSB5b3VyIGNhcmRzIHdpbGwgYmUgZGVhbHQgdG8geW91LiBZb3Ugc3RhcnQgdGhlIGdhbWUgd2l0aCAkMjAwLCBzbyB1bmxlc3MgeW91IHdpbiBlbm91Z2ggdG8gaW5jcmVhc2UgdGhhdCBhY2NvdW50IHRoYXQncyB5b3VyIG1heGltdW0gYmV0LiBZb3VyIG1pbmltdW0gYmV0IGlzIGFsd2F5cyAkMSwgYW5kIHlvdSBjYW4gYmV0IGFueSBhbW91bnQgZnJvbSAkMSB0byB0aGUgZnVsbCBzaXplIG9mIHlvdXIgY3VycmVudCBhY2NvdW50LgpUaGUgb2ZmZXJpbmcgd2FzIGNvbXBsZXRlZCB0aHJvdWdoIGEgc3luZGljYXRlIG9mIGFnZW50cyBsZWQgYnkgQ2FuYWNjb3JkIEdlbnVpdHkgQ29ycCBhbmQgd2hpY2ggaW5jbHVkZWQgRGVzamFyZGlucyBTZWN1cml0aWVzIEluYy4KRWFybHkgaW4gaGlzIGNhcmVlciBSb2dlcnMgd2FzIG9mdGVuIHRpbWVzIHRlYXNlZCBhYm91dCBoaXMgd2VpZ2h0LiBXaGlsZSBoZSBoYXMgbmV2ZXIgYmVlbiB3aGF0IHlvdSB3b3VsZCBjYWxsIGZhdCwgaGUgaGFzIGJlZW4gaGVhdnkgYW5kIHNvbWV0aW1lcyBsb29rZWQgYSBiaXQgYmxvYXRlZC4gRm9yIHRoaXMgaGUgZW5saXN0ZWQgc29tZSBoZWxwIHRvIG1ha2UgaGltc2VsZiBtb3JlIG9uIHRoZSBjdXR0aW5nIGVkZ2Ugb2YgdGhlIG5ldyBzdGFycyB0aGF0IHdlcmUgYXBwZWFyaW5nLiAKQW5kIHRoYXQganVzdCB3cm9uZy4gWW91IGNhbiBhY3R1YWxseSBxdWFudGlmeSBhbiBleGFjdCBlZGdlICUgYXMgYSBmdW5jdGlvbiBvZiB5b3VyIGJldHRpbmcgdW5pdCBvciBvZiB5b3VyIGF2ZXJhZ2UgYmV0IHVzaW5nIGEgZ2l2ZW4gc3ByZWFkIGFuZCBnaXZlbiBydWxlIHNldC4gSXQgdXN1YWxseSBiZXR3ZWVuIGhhbGYgYW5kIG9uZSBwZXJjZW50IGZvciBtb3N0IGdhbWVzLCBidXQgeW91IGNvdWxkIGhhdmUgYSBodW1vbmdvdXMgZWRnZSBpbiBhIHNpbmdsZSBkZWNrIGdhbWUgd2l0aCBhIDEgMjUgc3ByZWFkLCBmb3IgZXhhbXBsZSwgYnV0IHlvdSBiZSBiYWNrZWQgb2ZmIGltbWVkaWF0ZWx5Li4gCkFnYWluLCB3ZSByZWNvbW1lbmQgdGhhdCB5b3UgY29uc3VsdCB3aXRoIGxlZ2FsIGNvdW5zZWwgaWYgeW91IGhhdmUgcXVlc3Rpb25zIGFib3V0IHlvdXIgbGVnYWwgcmlnaHRzLgpTbnlkZXIgdG9sZCBUaGUgRGFpbHkgQmVhc3QgdGhhdCB0aGUgRmxvcmlkYSBtYXNzYWdlIHBhcmxvcnMgd2VyZSBwYXJ0IG9mIGEgJDIwIG1pbGxpb24gQ2hpbmEgYmFzZWQgc2V4IHRyYWZmaWNraW5nIG9wZXJhdGlvbiwgYW5kIHRoZXkgc2F3IHNldmVyYWwgbWVuIG1vdmluZyB3b21lbiBiZXR3ZWVuIG1hc3NhZ2UgcGFybG9ycy4gQSBmZW1hbGUgc2V4IHNsYXZlIHRvbGQgaGlzIGludmVzdGlnYXRvcnMgdGhhdCBtYW4gd2hvIHdhcyBtb3ZpbmcgaGVyIGFyb3VuZCBoYWQgYSBndW4sIGFuZCBpbmRpY2F0ZWQgdGhhdCBoZSB3b3VsZCB1c2UgaXQsIFNueWRlciBjb250aW51ZWQsIGFkZGluZyB0aGF0IHRoZSBtZW4gdGhyZWF0ZW5lZCB0aGUgd29tZW4gbm90IHRvIGxlYXZlIHRoZSBzcGFzLiAKIkkga25vdyB0aGUgR00gZXhlY3V0aXZlcyB2ZXJ5LCB2ZXJ5IHdlbGwsIGFuZCB0aGV5J3JlIHJlZCBmYWNlZCBhbmQganVzdCB3aXNoIHRoZSBkZXZpbCB0aGV5IGNvdWxkIGdldCBvdXQgb2YgdGhpcyB0aGluZyB3aXRob3V0IGl0IGNvc3RpbmcgdGhlbSBhbiBhcm0gYW5kIGEgbGVnLiJNZXllcnMsIGFuIGluZHVzdHJ5IHZldGVyYW4sIG9uY2UgaGVhZGVkIEFtZXJpY2FuIE1vdG9ycyBDb3JwLlRoZSBlYXJsaWVzdCBkYXRlIGFncmVlZCBmb3IgRmlhdCBBdXRvJ3Mgc2FsZSBwYXNzZWQgbGFzdCB3ZWVrLiAKT25lIHdheSB0byBjb25zaWRlciB0aGlzIHF1ZXN0aW9uIGlzIGluIHRlcm1zIG9mIHRyYWRlLiBCZWNhdXNlIGNvbnRhY3QgKGFuZCBjb25mbGljdCkgYmV0d2VlbiB0aGUgT3R0b21hbiBFbXBpcmUgYW5kIEV1cm9wZSB3YXMgZnJlcXVlbnQgZHVyaW5nIHRoZSAxNTAwcyBhbmQgMTYwMHMsIHRyYWRlIGdvb2RzIGZyb20gdGhlIEFtZXJpY2FzIHJlYWNoZWQgdGhlIE90dG9tYW4gRW1waXJlIHJlbGF0aXZlbHkgcXVpY2tseS4gQnkgdGhlIGVhcmx5IDE2MDBzLCBwZW9wbGUgaW4gdGhlIE90dG9tYW4gRW1waXJlIGhhZCBzdGFydGVkIHNtb2tpbmcgdG9iYWNjbywgYSBjcm9wIHRoYXQgb3JpZ2luYXRlZCBpbiB0aGUgQW1lcmljYXMuIApWZXJ5IGNhcmluZyBtYW4uIApEZXIgU3RhcnRzdGFjayBkZXIgVGVpbG5laG1lciBlcnJlY2huZXRlIHNpY2ggYXVzIGRlciBlcnJlaWNodGVuIEdlc2FtdCBQdW5rdHphaGwgZGVyIFNhaXNvbiAyMDE4IHggRmFrdG9yIDMwIChkYWhlciBlcnN0IGltIEFuc2NobHVzcyBhbiBkaWUgU2Fpc29uIG1nbGljaCkuRGllIFJhbmdlIHJlaWNodGUgZGFoZXIgdm9uIDI4LjU1MCBiaXMgaGluIHp1bSBNaW5kZXN0c3RhY2sgdm9uIDUuMDAwLiAKT25lIG9mIHRoZSB0aHJlZSBzaG9wcyBpdCBjb250YWluZWQgd2FzIGZvciByZW50IGFuZCBhbm90aGVyIHdhcyBhbiBhbGwgbmlnaHQgcmVzdGF1cmFudCwgYXBwcm9hY2hlZCBieSBhIHRyYWlsIG9mIGFzaGVzOyB0aGUgdGhpcmQgd2FzIGEgZ2FyYWdlICAgUmVwYWlycy4gR2VvcmdlIEIuIApUaGV5IGFsc28gc2VlIHRoZSBsYXJnZSBiZXQgYXMgYSBzaWduIG9mIGEgc3VyZSBibHVmZi4gClRoaXMgdHlwZSBvZiBkb2cgaXMgdmVyeSBwbGF5ZnVsIGFuZCBkZW1hbmRzIGF0dGVudGlvbiBhbmQgYWZmZWN0aW9uLiAKT2YgdGhlIDE0IGF2YWlsYWJsZSBjcmFwcyB0YWJsZXMsIHRoZXkgc2lkbGVkIHVwIHRvIHRoZSBuZWFyZXN0IG9uZSBhbmQgd2FpdGVkIGZvciB0aGUgdGhyZWUgb3RoZXIgcGxheWVycyB0byBmaW5pc2ggcm9sbGluZy4gCjMuIFNldmVuIENhcmQgU3R1ZDogVGhlIHByb2NlZHVyZXMgaW5jbHVzaXZlIGluIHRoZSBTZXZlbiBDYXJkIFN0dWQgUG9rZXIgZ2FtZSBhcmUgdGhlIG9uZXMgd2hpY2ggYXJlIG9uIGEgdXN1YWwgYmFzaXMgYWdyZWVkIGJ5IHRoZSBleHBlcnRzIG9uIGZsYXQgbGltaXQgZ2FtZXMuIApBbmQgd2l0aCB0aGF0LCBuZXcgdG91Y2ggc2NyZWVuIG1vbml0b3JzIGhhdmUgYmVlbiBpbnRyb2R1Y2VkIGluIHRoZSB3b3JsZCBvZiBnYW1ibGluZy4gClBvcHVsaXN0IHByb3Rlc3RzIGluIENoaWNhZ28gbWlnaHQganVzdCBiZSB0aGUgYWxhcm0gdGhhdCB3YWtlcyB1cyB1cFdobyBrbmV3IHRoYXQgdGhlIHNjb3JlIGZyb20gIkFubmllIiBjb3VsZCBiZSBhIHJhZGljYWwgY3JpdGlxdWUgb2YgY29ycG9yYXRlIGdyZWVkPyBBZnRlciBhbGwsICJBbm5pZSIgd2FzIGFib3V0IGEgaGVyb2ljIHJpY2ggZ3V5IHdobyBzYXZlcyBhIHNpbmdsZSBvcnBoYW4gZ2lybCBmcm9tIHBvdmVydHkuIFRoZXJlIGlzIG5vIHN0cnVjdHVyYWwgY2hhbmdlLCBubyByZWRpc3RyaWJ1dGlvbiBvZiB0aGUgb2JzY2VuZSBhbW91bnRzIG9mIHdlYWx0aCB0aGF0IERhZGR5IFdhcmJ1Y2tzIGhhZCBleHRyYWN0ZWQgZnJvbSB0aGUgQW5uaWVzIG9mIHRoZSB3b3JsZEluc3RlYWQsIGl0IHdhcyBBbm5pZSBvcHRpbWlzbSwgaGVyIHVuc2hha2FibGUgYmVsaWVmIGluIHRoZSBBbWVyaWNhbiBkcmVhbSB0aGF0IGlmIHdlIGp1c3Qga2VlcCBiZWxpZXZpbmcgdGhhdCB0aGluZ3Mgd2lsbCBnZXQgYmV0dGVyLCB0aGVuIHRoZXkgd2lsbCAgYXQgbGVhc3QgZm9yIHRoZSBpbmRpdmlkdWFsIEFubmllIGlmIG5vdCBmb3IgdGhlIG1hc3Mgb2YgQW5uaWVzVGhlIHN1biB3aWxsIGNvbWUgb3V0IHRvbW9ycm93LiAKV2Vla2x5IHRyYWluaW5nIHRocmVhZApUaGluZ3Mgd2lsbCBjb2xsYXBzZSBsaWtlIGEgaG91c2Ugb2YgY2FyZHMgaWYgdGhlIHN1YnNpZGllcyBhcmUgcmVtb3ZlZCB0b21vcnJvdy4gCkRlZmluaXRlbHkgY2hlY2sgd2l0aCBhbiBhdHRvcm5leSwgYW5kIG1ha2Ugc3VyZSBpdCBpcyBhbiBhdHRvcm5leSB5b3UgZmVlbCBjb21mb3J0YWJsZSB3aXRoIGFuZCB5b3UgZmVlbCB3aWxsIHN1cHBvcnQgeW91LiBJIHNlZW4gdG9vIG1hbnkgdGFsZXMgb2YgYXR0b3JuZXlzIHVyZ2luZyBhIHJlY29uY2lsaWF0aW9uLCBldmVuIHRob3VnaCBpdCBpcyBub25lIG9mIHRoZWlyIGJ1c2luZXNzLiBXaXRoIG15IGFkbWl0dGVkbHkgbGltaXRlZCBrbm93bGVkZ2Ugb2YgR1AgcmlnaHRzICAgc2hlIGhhcyBubyBsZWcgdG8gc3RhbmQgb24uIEFsc28sIHdoaWxlIHlvdSBhcmUgd29ya2luZyB3aXRoIHlvdXIgYXR0b3JuZXksIGdldCBhbGwgb2YgeW91ciBkb2N1bWVudHMgaW4gb3JkZXIgICBQT0FzLCBib3RoIGZpbmFuY2lhbCBhbmQgbWVkaWNhbDsgZ3VhcmRpYW5zaGlwIGluIHRoZSBldmVudCB5b3UgYm90aCBiZWNvbWUgdW5hYmxlIHRvIHJhaXNlIGtpZGRvOyBMYXN0IFdpbGwgVGVzdGFtZW50LCBldGMuCk5vYm9keSBleHBsYWlucyB0byB5b3Ugd2hhdCB0aGV5IGV4cGVjdCBhbmQgd2hlbiB5b3UganVzdCB0cnkgeW91ciBiZXN0IHRoZXkgc2hpdCBvbiB5b3UuIFRoaXMgaXMgbm90IG9rYXkuIEl0IHRoZWlyIGZhdWx0LgpJIGhhdmUgYSBtZWV0IGNvbWluZyB1cCBhbmQgSSB0cnlpbmcgdG8gcXVhbGlmeSBmb3IgQ29sbGVnaWF0ZSBOYXRpb25hbHMsIGJ1dCBvbmNlIHRoYXQgZG9uZSBJIHRoaW5rIEkgd2FudCBhIHZhY2F0aW9uIGZyb20gc2VyaW91c2x5IHBvd2VybGlmdGluZyBmb3IgYXdoaWxlLiAKRm9yLiAKVGhlbiwgdGhlcmUgd2lsbCBiZSB3aGF0IGlzIGNhbGxlZCBmaXZlIGNvbW11bml0eSBjYXJkcyBiZWluZyBwbGFjZWQgYnkgdGhlIGRlYWxlci4gCkhlIGlzIGFsc28gbW9yZSBsaWtlbHkgdG8gbm8gbG9uZ2VyIGhhdmUgc3ltcGF0aHkgZm9yIHRoZSBibG9vZCBwdXJpdHkgY2F1c2UsIGFzIHNlZW4gd2hlbiBoZSB0ZWxscyBQaGluZWFzIE5pZ2VsbHVzIG5vdCB0byB1c2UgdGhlIHdvcmQgbXVkYmxvb2QuIApBZnRlciBFcmVuIGdldCB0byBzZWUgdGhlIHBsYW4gZnJvbSBZbWlyLCBoZSB3YWtlcyB1cCBhbmQgY3JpZXMuIApTY290dHlkb2c3MXBvc3RlZCA4IHllYXJzIGFnbwpUaGV5IGxpdGVyYWxseSBsb3N0IGV2ZXJ5dGhpbmcgaW4gdGhlIHNwYW4gb2YgYSB3ZWVrLk1hZHJpZCBhcmUga2luZ3Mgb2YgdGhlIENoYW1waW9ucyBMZWFndWUuIApUaGUgSW50ZXJuZXQgaGFzIG1hZGUgZ2FtYmxpbmcgZmFyIG1vcmUgYWNjZXNzaWJsZSBhbmQsIHRoZXJlZm9yZSwgaGFyZGVyIGZvciByZWNvdmVyaW5nIGFkZGljdHMgdG8gYXZvaWQgcmVsYXBzZS4gT25saW5lIGNhc2lub3MgYW5kIGJvb2ttYWtlcnMgYXJlIG9wZW4gYWxsIGRheSwgZXZlcnkgZGF5IGZvciBhbnlvbmUgd2l0aCBhIHNtYXJ0cGhvbmUgb3IgYWNjZXNzIHRvIGEgY29tcHV0ZXIuIApOb3cgaWYgeW91IHdlcmUgdG8gYXNrIHRoZSBEb24gS2luZyBvZiBwaXp6YSwgSGVybWFuIENhaW4sIEknbSBzdXJlIGhlJ2QgaGF2ZSBhIHNpbXBsZSBwbGFuIHRvIHNvbHZlIHRoaXMgcHJvYmxlbSwgd2hpY2ggd291bGQgcHJvYmFibHkgaW5jbHVkZSBhIG51bWJlciBvZiA5cyBhbmQgdGhlIGFzc3VtcHRpb24gdGhhdCBaYW5lc3ZpbGxlLCBPaGlvIGlzIHNvbWV3aGVyZSBpbiB0aGUgdmljaW5pdHkgb2YgQ2hpYW5nIE1haS4gCkhvbGRpbmcgbW9zdCBvZiB0aGVzZSBoYW5kcyB5b3VyIHBva2VyIGNhbGN1bGF0b3IgaXMgZ29pbmcgdG8gYmUgdGVsbGluZyB5b3UgdG8gZm9sZC4gCldoZW4gYWxsIHRoZSBmbG93ZXJzIGFuZCBvaWwgYXJlIG91dCBvZiB0aGUgamFyLCB0aGVuIHlvdSBjYW4gcHV0IGl0IGF3YXkgZm9yIHdhc2hpbmcgdXAuIFB1dCB0aGUgbGlkIG9uICAgb3Igb3RoZXJ3aXNlIGNvdmVyIHRoZSBqYXIgb3ZlciB0aGUgdG9wIG9mIHRoZSBtdXNsaW4gICBhbmQgbGVhdmUgaXQgb3Zlcm5pZ2h0IHRvIGRyYWluLiAKSG93IHRvIFN0cmV0Y2ggWW91ciBGZWV0ClRvZ2V0aGVyLCB3ZSBhcmUgc3Ryb25nZXIuIFRvZ2V0aGVyLCB3ZSBhbGwgYWR2YW5jZSB0b3dhcmRzIHRoZSBkYXkgd2hlbiB0cmF1bWEgY2FuIGJlIGN1cnRhaWxlZCwgaXRzIGRhbWFnZSBtaW5pbWl6ZWQsIGFuZCBhbGwgcGVvcGxlIHdpbGwgaGF2ZSB0aGUgc3VwcG9ydCBldmVuIG91ciBtb25rZXkgYnJhaW5zIGFja25vd2xlZGdlIGFzIGltcGVyYXRpdmUgdG8gb3VyIHdlbGwgYmVpbmcuCk5ldXJvSW1hZ2UuIAo=|<---