--->|SWYgeW91J3ZlIGJlZW4gbG9va2luZyBmb3Igc29tZXRoaW5nIG91dCB0aGVyZSBvciB0aGUgU3VpdGVkIEJsdWUgUG9rZXIgVGFibGUgQ2xvdGggaW4gcGFydGljdWxhciwgd2UgcmVjb21tZW5kIHRoZSBsYXR0ZXIuIFdoaWxlIGJsdWUgd2FzIG91ciBjb2xvciBvZiBjaG9pY2UgdGhlcmUgYXJlIHNldmVyYWwgb24gdGhlIEludGVybmV0IHRvIGNob29zZS4gT25lIHRoaW5nIHdlIGZvdW5kIG91dCwgdGhvdWdoLCB3YXMgdGhhdCB0aGUgc2l0ZSBvdXIgYmVzdCBmcmllbmRzIGJvdWdodCBpdCBmcm9tIGhhZCBmYW50YXN0aWMgY3VzdG9tZXIgc2VydmljZS4gS25vd2luZyB0aGVtLCB0aGVyZSB3ZXJlIGEgbWlsbGlvbiBxdWVzdGlvbnMgdGhleSBhc2tlZCwgc28gaXQgbXVzdCBoYXZlIGJlZW4gZ29vZC4KMjcgbWFuYWdlbWVudCBncm91cCIgd2FzIHRhc2tlZCB3aXRoIHJldmlld2luZyB0aGUgc3VibWlzc2lvbnMgYW5kIGF3YXJkaW5nIG1vbnRobHkgYm9udXNlcyB0byB0aGUgZW1wbG95ZWVzIHdobyBwcm92aWRlZCB0aGUgbW9zdCB2YWx1YWJsZSBzdG9sZW4gaW5mb3JtYXRpb24uIEJpYW5udWFsIGF3YXJkcyBhbHNvIHdlcmUgbWFkZSBhdmFpbGFibGUgdG8gdGhlIHRvcCB0aHJlZSByZWdpb25zIHRoYXQgcHJvdmlkZWQgdGhlIG1vc3QgdmFsdWFibGUgaW5mb3JtYXRpb24uIApNaWNyb3NvZnQgT2ZmaWNlIDIwMTAsIGZyZWUgYW5kIHNhZmUgZG93bmxvYWQuIE1pY3Jvc29mdCBPZmZpY2UgMjAxMCBsYXRlc3QgdmVyc2lvbjogVGhlIHF1aW50ZXNzZW50aWFsIHByb2R1Y3Rpdml0eSBzdWl0ZS4gTWljcm9zb2Z0IGhhcyAuIFZpZXcgZnVsbCBkZXNjcmlwdGlvbi4gTm92IDE0LCAyMDE3IC4gRGV2ZWxvcGVyOiBNaWNyb3NvZnQgQ29ycG9yYXRpb247IFZlcnNpb246IDIwMTAgLiBBc3NvY2lhdGVkIHdpdGggdGhlIFdpbmRvd3MgNywgdGhlIHNvZnR3YXJlIGNvbnRpbnVlcyB0byBiZXQgb24gaW5ub3ZhdGlvbi4gQWxsIG9mIHRoZSAuIEV4Y2VsIGdyYXBocyBhbmQgZGlhZ3JhbXMgYXJlIGVhc2lseSBpbnRlZ3JhdGVkIGludG8gV29yZCB0ZXh0OyBPdXRsb29rIGdyb3VwIGUgbWFpbC4gCk9yIC4gCk5pY2UgaW5zaWdodC4gClJlcHJlc2VudGF0aXZlcyBmcm9tIDMgbmF0aW9ucyBqdXN0IGhhZCBhIHN1bW1pdCBvZiBzb3J0cyBhdCB0aGlzIHNtYWxsIHRvd24gd2hlcmUgdGhlIGFkdmVudHVyZXJzIGV4cGxhaW5lZCB3aGF0IGhhcHBlbmVkLiBUaGUgbW9zdGx5IGh1bWFuIGVtcGlyZSBvZiBBcmdvcyB0cmllZCB0byBiZWxpdHRsZSB0aGUgZXZlbnRzIGFzIGEgZmV3IGZhbmF0aWNzIGNvbW1pdHRpbmcgdGVycm9yaXNtLiBUaGUgRWx2ZW4gbmF0aW9uIG9mIHRoZSBHb2xkIFZhbGxleSBpcyB0YWtpbmcgdGhlc2UgdGhyZWF0cyB2ZXJ5IHNlcmlvdXNseSBhbmQgYWR2aXNlcyBjYXV0aW9uLiBUaGV5IHdhbnQgdG8gZGlnIGRlZXBlciBpbnRvIHRoZSBydWlucyB1bmRlciBDb3BwZXJ0b24gYnV0IHRoZSB0b3duIGlzIG9uIEFyZ29zaWFuIHNvaWwgc28gdGhleSBmb3JiaWQgaXQuIFRoZSBEd2FydmVuIGNpdHkgc3RhdGUgb2YgSXJvbiBHYXRlIGlzIGNvbmZpZGVudCB0aGF0IGlmIHRoZXJlIGlzIHNvbWUga2luZCBvZiBLcmFrZW4gdGhyZWF0IHRoZXkgd2lsbCBiZSBzYXZlIGRlZXAgdW5kZXJncm91bmQgaW4gdGhlcmUgZm9ydHJlc3MgY2l0eS4gSSBoYXZlIGFuIGlkZWEgdGhhdCBmdXJ0aGVyIGludmVzdGlnYXRpb24gb2YgdGhlIHJ1aW5zIHdpbGwgcmV2ZWFsIHRoYXQgdGhhdCB0aGV5IHVzZWQgdG8gYmUgYSBsYXJnZSBjYXN0bGUgdW50aWwgdGhleSByZXNpc3RlZCB0aGUga3Jha2VuIG1hbnkgKHRob3VzYW5kcz8pIG9mIHllYXJzIGFnbyBhbmQgdGhhdCB0aGUgaW5oYWJpdGFudHMgd2VyZSB3b3JraW5nIG9uIHNvbWUga2luZCBvZiB3ZWFwb24gb3IgbWFnaWMgdG8gb3ZlcnRocm93IGl0LiBUaGUga3Jha2VuIGxhaWQgd2FzdGUgdG8gbW9zdCBvZiB0aGUgY2FzdGxlIGFuZCBidXJpZWQgd2hhdCByZW1haW5lZCBhcyB3ZWxsIGFzIGN1cnNpbmcgdGhlIGluaGFiaXRhbnRzIHRvIHVuZGVhdGggYnV0IGRpZG4gZmluZCB3aGF0ZXZlciBpdCBpcyB0aGV5IHdlcmUgd29ya2luZyBvbi4gV2hhdCBpcyBzb21ldGhpbmcgdGhleSBjb3VsZCBiZSB3b3JraW5nIG9uIHRoYXQgd291bGQgYmUgYSBsZWdpdGltYXRlIHRocmVhdCB0byBhIGJlYXN0IG9mIHRoZSBLcmFrZW4gbWFnbml0dWRlPwpOYXJlbmRyYSBQdW5qLCBNRCBvZiB0aGUgY29tcGFueSB3aGljaCBvcGVyYXRlcyBEZWx0aW4gUm95YWxlLCBzYXlzLCBhIHN0cnVnZ2xlLiAKVGhlIHBhcnRpZXMgYXR0ZW5kZWQgbWVkaWF0aW9uIG1haW5seSB3aXRob3V0IHRoZWlyIGxhd3llcnMgcHJlc2VudC4gVGhlIG1lZGlhdG9yIHdhcyByZXNwb25zaWJsZSBmb3Igb2J0YWluaW5nIHRoZSBmaW5hbmNpYWwgZGlzY2xvc3VyZSBmcm9tIHRoZSBwYXJ0aWVzIGFuIHVudXN1YWwgcm9sZSBmb3IgdGhlIG1lZGlhdG9yLgpFeGFtcGxlOiBJZiB5b3Ugc3RhcnQgYXQgJDUgYW5kIGxvc2UgMTAgaGFuZHMgaW4gYSByb3cgeW91ciBlbGV2ZW50aCBiZXQgd291bGQgYmUgJDUxMjAuIElmIHlvdSB3aW4sIHlvdSB3aWxsIGhhdmUgbWFkZSAkNSBmb3IgdGhvc2UgMTEgaGFuZHMuIElmIHlvdSBsb3NlLCB5b3UgcHV0dGluZyB1cCAkMTAsMjQwIHRvIHdpbiB0aGUgc2FtZSAkNS4gSWYgdGhlIHRhYmxlIG1heGltdW0gaXMgJDI1LDAwMCBhbmQgeW91IGxvc2UgMTIgaW4gYSByb3csIHlvdSBjYW50IGNvdmVyIHlvdXIgbG9zc2VzIHdpdGggYmV0IDEzLiAoJDQwLDk2MCBsb3NzZXMgdnMuICQyNSwwMDAgbWF4IGJldCkKVGhhdCBzZWVtcyB0byBiZSBhIGNvbW1vbiByZWZyYWluIGluIHBva2VyIGZvcnVtcyByZWNlbnRseSwgaW4gbGlnaHQgb2YgYWxsIHRoZSBzdWNjZXNzIHRoZSBhbWF0ZXVycyBhcmUgZW5qb3lpbmcuIFdlIHJhbiBhIHBvbGwgb24gbXkgd2ViIHNpdGUgYXNraW5nIG1lbWJlcnMgdG8gcHJlZGljdCAiV2hvIHdpbGwgd2luIFdTT1AgMjAwND8iIEkgdGhpbmsgImEgcHJvZmVzc2lvbmFsIiBiZWF0ICJhbiBhbWF0ZXVyIiBieSBhdCBsZWFzdCBhIDI6MSBtYXJnaW4sIGFuZCBhYm91dCA5MCUgZ2F2ZSBDaHJpcyBNb25leW1ha2VyIGhhcmRseSBhIHNub3diYWxsJ3MgY2hhbmNlIGF0IGV2ZW4gbWFraW5nIHRoZSBmaW5hbCBmZXcgdGFibGVzLgpXb3JrIG9wdGlvbnMgYXJlIGxpbWl0ZWQgd2hlbiB5b3UgYXJlIGNvbnN0YW50bHkgcHJlanVkZ2VkIGZvciBiZWluZyB3aG8geW91IGFyZS4uIApNb3JlV2UndmUgc3RheWVkIGEgY291cGxlIG9mIHRpbWVzIGFuZCB3ZSd2ZSBoYWQgdGhlIGZhbWlseSByb29tIHdpdGggc21hbGwgdHdpbiBvZmYgbWFpbiByb29tIHdpdGggYSBzb2ZhIHRvby4gQW5kIHdlJ3ZlIGhhZCBkb3VibGUgcm9vbSB3aXRoIHNvZmEgSSBhbHdheXMgcGhvbmUgdGhlIGhvdGVsIGFuZCBhc2sgZm9yIGEgaGlnaCBmbG9vciB3aXRoIHNlYSB2aWV3IHJvb20gYW5kIHRoZXkndmUgYWx3YXlzIG1hbmFnZWQgdG8gZG8gdGhpc0FyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBkZWxldGUgdGhpcyBhbnN3ZXI/a25vdyBiZXR0ZXIgYm9vayBiZXR0ZXIgZ28gYmV0dGVyVHJpcEFkdmlzb3IgTExDIGlzIG5vdCByZXNwb25zaWJsZSBmb3IgY29udGVudCBvbiBleHRlcm5hbCB3ZWIgc2l0ZXMuIFRheGVzLCBmZWVzIG5vdCBpbmNsdWRlZCBmb3IgZGVhbHMgY29udGVudC4uIApJIGZvdW5kIGl0IG5vdCBzYXRpc2Z5aW5nIGF0IGFsbC4gSSBtaXNzZWQgdGhlIGV4Y2l0ZW1lbnQgb2YgYSBmYXN0ZXIgcGFjZWQgcGxhY2UuIApMZSBjb21wbGV4ZSBIZWFydGxhbmQgdHJhbnNmb3JtZXJhIGFubnVlbGxlbWVudCBkdSBwcm9wYW5lIGVuIDUyNTAwMHRvbm5lcyBkZSBwb2x5cHJvcHlsbmUsIHVuIHBsYXN0aXF1ZSByZWN5Y2xhYmxlIGRlIHBsdXMgZW4gcGx1cyBkZW1hbmQgZGFucyBsZSBtb25kZS4KU2l4dHkgZm91ciB5ZWFycyBzaW5jZSBhcnJpdmluZywgd2lkZSBzd2F0aGVzIG9mIG15IGV4dGVuZGVkIGZhbWlseSBzcGVhayBQdW5qYWJpLCBTYXJhaWtpIGFuZCBFbmdsaXNoLiBZZXQgbGVzcyB0aGFuIGhhbGYgYSBkb3plbiBjYW4gc3BlYWsgU2luZGhpIGZsdWVudGx5LiAKU29tZW9uZSByZWNvbW1lbmRlZCB0aGUgZ2FtYmxpbmcgc2hpcCBpbiBiZXR3ZWVuIFNpbmdhcG9yZSBhbmQgQmF0YW0sIHdoaWNoIGlzIG9rYXkgaWYgeW91IG1hbmFnZSB0byBsaW5lIGl0IHVwIHdpdGggYSB0b3VybmFtZW50LgpXaGVuIHRoaXMgZGF0YSBpcyBpbnRlcnBvbGF0ZWQsIGl0IGdpdmVzIHRoZSBuYW1lIERpY2sgUGFya2VyLiBGb3IgYW4gSW5kaWFuIG9ycGhhbiBzdHJhbmRlZCBhbG9uZSBvbiBhIGJvYXQgd2l0aCBubyBvbmUgb3Igbm90aGluZyBidXQgYSB0aWdlciwgZG9lcyBhbnlvbmUgZWxzZSB0aGluayBpdCBpcyBzdHJhbmdlIHRoYXQgUGkgbmFtZWQgdGhlIHRpZ2VyIERpY2sgUGFya2VyPy4gCjQuIE5hZGVsOiA1IE0gcmUgc3RyaWNrZW4sIDEgTSBhdXMgZGVtIFF1ZXJmYWRlbiB6dW5laG1lbiwgMSBNIHJlIHN0cmlja2VuLgpZb3UgY2FuIGFmZm9yZCBpdCBnaXZpbmcgaXMgd2hhdCBpdCBpcyBhbGwgYWJvdXQuIEkgdGhpbmsgdGhlcmUgYW4gb2JsaWdhdGlvbiB0byBnaXZlIGJhY2ssIGVzcGVjaWFsbHkgaWYgeW91IGJlZW4gc3VjY2Vzc2Z1bCBmaW5hbmNpYWxseS4gSGUgd2FzIGp1c3Qgc29tZWJvZHkgd2hvIGZlbHQgdGhhdCBoZSB3YXMgZXh0cmVtZWx5IHByaXZpbGVnZWQuIApBZnRlciBjb25zaWRlcmFibGUgc291bCBzZWFyY2hpbmcsIFJvZ2VycyBjaG9vc2VzIG5vdCB0byBmb2xsb3cgaGlzIGZhdGhlciBpbnRvIG1lZGljaW5lIGJ1dCBkZWNpZGVzIHRvIGdvIHRvIGJ1c2luZXNzIHNjaG9vbCBhbmQgcHVyc3VlIGEgY2FyZWVyIGluIGZpbmFuY2UuIFRoZSBub3ZlbCBwYWludHMgYW4gYWZmZWN0aW9uYXRlIHBvcnRyYWl0IG9mIHRoZSBXaGFydG9uIFNjaG9vbCBpbiB0aGUgMTk3MHMuIEF0IHRoZSBzYW1lIHRpbWUsIE1ha2UgTWUgRXZlbiBpcyB0aGUgc3Rvcnkgb2YgbGlmZSBvbiBXYWxsIFN0cmVldCBpbiB0aGUgdHVyYnVsZW50IDE5NzBzIGFuZCBlYXJseSAxOTgwcy4gCihGdWxsIEFuc3dlcikuIApXaGF0IElzIGEgUmV0YWlsIE1hbmFnZW1lbnQgVHJhaW5lZT8KVGhpcyBpcyBldmVyeXRoaW5nIHlvdXIgbW90aGVyICAgZXNwZWNpYWxseSBpZiBzaGUncyBhIERlbW9jcmF0ICAgd2FybmVkIHlvdSBhYm91dC4gVGhpcyBpcyB0aGUgd29ybGQgb2Ygd291bGQgYmUgUmVwdWJsaWNhbiBoZWdlbW9ueS4gSW4gdGhlIHBhc3QgdGhyZWUgeWVhcnMsIGZvbGxvd2luZyB0aGUgMjAxMCBlbGVjdGlvbnMsIHRoZXJlIGhhdmUgYmVlbiAyMDUgcmVzdHJpY3Rpb25zIG9uIGFib3J0aW9ucyB2b3RlZCBpbnRvIGxhdyBpbiBtb3JlIHRoYW4gaGFsZiB0aGUgc3RhdGVzLiAKV2VhdGhlciBjb25kaXRpb25zIHdpbGwgaW1wYWN0IHlvdXIgdHJlYXN1cmUgaHVudGluZy4gR3JvdW5kIHRoYXQgaXMgdGhvcm91Z2hseSBzb2FrZWQgYWZ0ZXIgYSByYWluIG9yIHNwcmluZyBtZWx0IGlzIGVhc2llciB0byBkaWcgdGhhbiBzdW4gYmFrZWQgaGFyZCBwYWNrLiBXZXQgZ3JvdW5kIGFsc28gaGFzIG1vcmUgY29uZHVjdGl2aXR5IGFuZCB5b3Ugd2lsbCBiZSBhYmxlIHRvIGZpbmQgaXRlbXMgdGhhdCBhcmUgZGVlcGVyIHRoYW4gaWYgdGhlIGdyb3VuZCB3ZXJlIGRyeS4gVGhlIHNhbmRzIG9mIGFuIG9jZWFuIGJlYWNoIGFyZSBkaXN0dXJiZWQgYW5kIHJvbGxlZCBvdmVyIGJ5IGhlYXZ5IHN0b3JtcyBhbmQgb2Z0ZW4gdW5jb3ZlcnMgdGFyZ2V0cyB0aGF0IHdlcmUgcHJldmlvdXNseSB0b28gZGVlcCB0byBsb2NhdGUuIFRoZSB3aW5kcyBvZiB0aGUgZGVzZXJ0IHdpbGwgY2F1c2UgYSBzaW1pbGFyIHJlZGlzdHJpYnV0aW9uIG9mIHRoZSBzYW5kcywgb2Z0ZW4gb2ZmZXJpbmcgdXAgYSBnb2xkIG51Z2dldCB0aGF0IHdhcyBkZWVwbHkgYnVyaWVkIGJlZm9yZSB0aGUgc3Rvcm0uClQgbXkgZnVsZmlsbG1lbnQuIApLb2xrYXRhVGhlIFdlc3QgQmVuZ2FsIFByaXplIENvbXBldGl0aW9uIGFuZCBHYW1ibGluZyBBY3QsIDE5NTcsIHdoaWNoIHByb2hpYml0cyBhbG1vc3QgYWxsIGZvcm1zIG9mIGdhbWJsaW5nIGFuZCBiZXR0aW5nLCBleGVtcHRzIGNhcmQgZ2FtZXMgc3VjaCBhcyBQb2tlciwgQnJpZGdlLCBSdW1teSBhbmQgTmFwLiAKQ29weSBDaXRhdGlvbiBOb3RlOiBEZXBlbmRpbmcgb24gd2hpY2ggdGV4dCBlZGl0b3IgeW91J3JlIHBhc3RpbmcgaW50bywgeW91IG1pZ2h0IGhhdmUgdG8gYWRkIHRoZSBpdGFsaWNzIHRvIHRoZSBzaXRlIG5hbWUuClNvIG1hbnkga29yZWFuIGxpa2UgdG8gYnV5IGl0IGZyb20gRVUgYW5kIFVTIHdlYnNpdGVzIHdpdGggdXNpbmcgc2hpcHBpbmcgYWdlbnRzIGFuZCB1c2UgcHVyY2hhc2luZyBhZ2VudCBmb3Igc3RvcmUgYW5kIG91dGxldCBpbiBFVSBhbmQgVVMuIApJIGNhbiB1bmRlcnN0YW5kIHRoZSBhcHBlYWwgb2YgYSBnaXJsLCBidXQgZmlyc3Qgb2YgYWxsLCBob3cgY2FuIHlvdSBrbm93IGl0IHRydWUsIGFuZCBzZWNvbmQsIGEgbGVzc2VyIGV4cGVyaWVuY2VkIGdpcmwgbWlnaHQgYmUgbGVzcyBza2lsbGVkLiBJIGNob3NlIGEgMiw2MDAgYmFodCBnaXJsLiAKVGhlIFN1aXRlZCBFbWVyYWxkIFRleGFzIEhvbGRlbSBQb2tlciBUYWJsZSBDbG90aCBpcyBhIGR1cmFibGUgYW5kIHdhdGVyIHJlc2lzdGFudCB0YWJsZWNsb3RoIHRoYXQgaXMgbWFkZSBvZiA3MCUgcG9seWVzdGVyIGFuZCAzMCUgT2xlZmluLiAKVGhlIHBocmFzZSAiYWxsIHNvcnRzIG9mIiBtZWFucyB2YXJpb3VzIGtpbmRzLCBhIHZhcmlldHkgb2YgdHlwZXMgb2Ygc29tZXRoaW5nLiAKWWVzLCBlc3BlY2lhbGx5IGlmIHRoZXkgYXJlIHJlbGV2YW50IHRvIHRoZSBwb3N0LiBIb3dldmVyLCBvdXIgcnVsZXMgc3RpbGwgYXBwbHkuIElmIHlvdXIgc3RvcnkgZGVmZW5kcyBvciBzdXBwb3J0cyB0aGUgY3JlZXAsIGRlcmFpbHMgdGhlIGRpc2N1c3Npb24sIG9yIGlzbiBlbXBhdGhldGljIHRvd2FyZHMgdGhlIHJlY2lwaWVudCBvZiB0aGUgbWVzc2FnZXMsIGl0IHdpbGwgYmUgcmVtb3ZlZC4gCkNoZWNrIHRoZSBMYXdSZXZpZXcgdGhlIGxhdyBnb3Zlcm5pbmcgdGhlIHByYWN0aWNlIG9mIG1hc3NhZ2UgdGhlcmFweSBpbiB5b3VyIGFyZWEuIEluIG1hbnkgcGxhY2VzLCB5b3UgbWF5IGJlIGRlYWxpbmcgd2l0aCB0d28gc2V0cyBvZiBsYXdzIG9yIHJlZ3VsYXRpb25zOiBvbmUgZm9yIHRoZSBsaWNlbnNpbmcgb2YgaW5kaXZpZHVhbCBtYXNzYWdlIHRoZXJhcGlzdHMsIHRoZSBvdGhlciBhZGRyZXNzaW5nIHRoZSBsaWNlbnNpbmcgb2YgbWFzc2FnZSBidXNpbmVzc2VzLiAKQW5kIGV2ZW4gZ2l2ZW4gdGhlIGVtb3Rpb25hbCBjb250ZW50IG9mIG15IGFyZ3VtZW50cywgYSBwdXJlbHkgYW5hbHl0aWNhbCBhcHByb2FjaCB0byB0aGVzZSBzZXJpb3VzIHByb2JsZW1zIGFycml2ZSBhdCB0aGUgc2FtZSBwb2ludCB0aGlzIHNoaXQgaXMgYmV5b25kIGZ1Y2tlZCB1cC4uIApDb3VwbGUgd2hvIGJvdWdodCBhIGhvdXNlIHRocmVlIHdlZWtzIGJlZm9yZSBodXNiYW5kIGdvdCB0aGUgYXhlIGZlYXIgc3Rvcm0gY2xvdWRzIGFoZWFkClRoZSByZWFzb24gaXMgcG9rZXIgaXMgYSBnYW1lIG9mIHJpc2sgYW5kIHJld2FyZCBhbmQgaWYgeW91IHBsYXkgb3B0aW1hbCBzdHJhdGVneSBldmVyeSB0aW1lIHlvdSB3aWxsIGJyZWFrZSBldmFuIGV2ZXJ5IHRpbWUgeW91IHBsYXkuIFRoaXMgaXMgZ29vZCBpZiB5b3UgcGxheWluZyBzb21lb25lIGJldHRlciB0aGFuIHlvdSwgYnV0IGJhZCBpZiB5b3VyIGdvYWwgaXMgdG8gbWFrZSBhIHByb2ZpdCBmcm9tIGxlc3NlciBvcHBvbmVudHMgLiBUaGUgcmVhc29uIGlzIGJlY2F1c2UgdGhlIG9ubHkgd2F5IHRvIGVhcm4gbW9uZXkgaXMgbm90IHRvIHBsYXkgb3B0aW1hbCBnYW1lIHRoZW9yeSBzdHJhdGVneS4gCkFmdGVyIFBvbGl0aWNvIHBva2VkIGFyb3VuZCBpbiBlYXJseSAyMDE4LCBpdCB3YXMgcmV2ZWFsZWQgdGhlIHNpdGUncyBjaGllZiBvcGVyYXRvcnMgd2VyZSB0aHJlZSBjb25zZXJ2YXRpdmUgYWN0aXZpc3RzIHdpdGggVGVhIFBhcnR5IHRpZXM6IE1pY2hhZWwgUGF0cmljayBMZWFoeSwgU3RldmUgR2lsbCwgYW5kIENocmlzdGluYSBCb3R0ZXJpLiAKV2Ugd2lsbCBrZWVwIGF0IGl0ISBvbiBzaXRlIHNlZW0gYXMgbGl2ZWx5IGFzIHRoZXkgaGF2ZSBiZWVuIGZvciBhIHdoaWxlLCBpbmRlZWQgdGhlcmUgYXJlIHNvbWUgZmFtaWxpYXIgZmFjZXMgd2hvIGFyZSB2ZXJ5IHdlbGNvbWUgYmFjayBhbmQgd2UgY2VydGFpbmx5IGhhdmUgbm90IHJ1biBvdXQgb2Ygc3ViamVjdHMgZm9yIEd1aWRlIEVudHJpZXMhIFRoZSBQb3N0IGlzIGFzIGNyZWF0aXZlIGFzIGV2ZXIgYW5kIGluZGVlZCBmb3IgYW55Ym9keSB3b3JyaWVkIGFib3V0IHRoZSBwcml2YWN5IG9mIHRoaW5ncyBlbHNld2hlcmUgb24gdGhlIHdlYiwgaDJnMiBpbiBhbGwgaXRzIHJldHJvIGdsb3J5IGlzIHByZXR0eSBkYXJuIHByaXZhdGUgc28gaWYgYW55Ym9keSBpcyBhIGxpdHRsZSB0aXJlZCBvZiB3aGF0IGNhbiBzZWVtIGEgbGl0dGxlIGludHJ1c2l2ZSBzb21ldGltZXMgb24gRkIgYW5kIGVsc2V3aGVyZSwgZW5jb3VyYWdlIHRoZW0gdG8gaGF2ZSBhIHNlY29uZCBob21lIGhlcmUgb3IgbW92ZSBiYWNrIGluIGFuZCByZWZ1cmJpc2ggdGhlIG9sZCBvbmUhIGZldyBwb3N0cyBtZW50aW9uZWQgcHJlIG1vZGVyYXRpb24sIHNvIEkgYXNrZWQgZm9yIGFuIGFuYWx5c2lzIG9mIHByZSBtb2RlcmF0aW9uIG92ZXIgdGhlIHBhc3QgdHdlbHZlIG1vbnRocyBhbmQgaXQgdHJhbnNwaXJlcyB0aGF0IHRoZXJlIHdlcmUgb25seSB0aHJlZSBSZXNlYXJjaGVycyBpbiBwcmUgbW9kIGluIHRoaXMgcGVyaW9kLiAKSXQgY2FtZSBwYXJ0bHkgZnJvbSBwb3N0ZXJzIGFuZCBwYXJ0bHkgZnJvbSBraXRzY2ggYXJ0LiAKVGhlIG90aGVycyB3b3VsZCBiZSBzZXR0aW5nIHVwIGFuIGlkZWEgb3IgcHJlbWlzZSBhbmQgdGhlbiBoZSBqdXN0IHNoaXQgb24gaXQsIG92ZXIgYW5kIG92ZXIgYWdhaW4uLiAKV2hlbiBhZHVsdCBnZXJtIGZyZWUgbWljZSB3ZXJlIGNvbG9uaXplZCB3aXRoIG5vcm1hbCBiYWN0ZXJpYSwgdGhleSBjb250aW51ZWQgdG8gc2hvdyByZWR1Y2VkIGFueGlldHkgbGlrZSBiZWhhdmlvcnMsIHN1Z2dlc3RpbmcgdGhhdCB0aGUgYWJzZW5jZSBvZiBndXQgYmFjdGVyaWEgZWFybHkgaW4gZGV2ZWxvcG1lbnQgaGFzIGEgcGVybWFuZW50IGVmZmVjdCBvbiB0aGUgYnJhaW4gd2lyaW5nIHJlbGF0ZWQgdG8gYW54aWV0eSBhbmQgZXhwbG9yYXRvcnkgYmVoYXZpb3IuMTQsIDE2SW4gY29udHJhc3QsIHdoZW4gZ2VybSBmcmVlIG1pY2Ugd2VyZSBjb2xvbml6ZWQgZWFybHkgaW4gbGlmZSBhcyBwdXBzIG9yIGR1cmluZyBhZG9sZXNjZW5jZSBhbmQgdGhlbiB0ZXN0ZWQgaW4gYWR1bHRob29kLCBub3JtYWwgYW54aWV0eSBsaWtlIGJlaGF2aW9yIHdhcyBvYnNlcnZlZCwxMywgMTUgc3VnZ2VzdGluZyB0aGF0IG1pY3JvYmlvdGEgaW5mbHVlbmNlIHRoZSB3YXkgdGhlIGJyYWluIGlzIHdpcmVkIGVhcmx5IGluIGRldmVsb3BtZW50LjE3SW4gYWRkaXRpb24gdG8gc3R1ZHlpbmcgbWljZSwgcmVzZWFyY2hlcnMgaGF2ZSB1c2VkIGFudGliaW90aWMgdHJlYXRtZW50IHRvIG1hbmlwdWxhdGUgZ3V0IGJhY3RlcmlhLiBFeHBvc3VyZSB0byBhbnRpYmlvdGljcyBpbiBkcmlua2luZyB3YXRlciBoYXMgYmVlbiBzaG93biB0byBsZWFkIHRvIHJlZHVjZWQgbnVtYmVycyBvZiBndXQgYmFjdGVyaWEgaW4gbWljZSBhbmQgdG8gYSByZWR1Y3Rpb24gaW4gdGhlIGRpdmVyc2l0eSBvZiB0aGUgYmFjdGVyaWFsIHBvcHVsYXRpb24uMTggQ29uc2lzdGVudCB3aXRoIHdvcmsgaW4gZ2VybSBmcmVlIG1pY2UsIG1pY2UgZXhwb3NlZCB0byBhbnRpYmlvdGljcyBmb3IgYSBzaW5nbGUgd2VlayBzaG93ZWQgaW5jcmVhc2VkIGV4cGxvcmF0b3J5IGJlaGF2aW9yIGFuZCByZWR1Y2VkIGFueGlldHkgbGlrZSBiZWhhdmlvciwgYW4gb2JzZXJ2YXRpb24gdGhhdCB3YXMgbGlua2VkIHRvIGNoYW5nZXMgaW4gdGhlIGJhY3RlcmlhbCBwcm9maWxlLjE5IFR3byB3ZWVrcyBmb2xsb3dpbmcgdGhlIGVuZCBvZiB0aGUgYW50aWJpb3RpYyB0cmVhdG1lbnQsIGJvdGggdGhlIGJhY3RlcmlhbCBwcm9maWxlIGFuZCB0aGUgYmVoYXZpb3IgcmV0dXJuZWQgdG8gbm9ybWFsLCBzdWdnZXN0aW5nIHRoYXQgdHJhbnNpZW50IGNoYW5nZXMgaW4gZ3V0IG1pY3JvYmlvdGEgY2FuIGluZmx1ZW5jZSBiZWhhdmlvci4xOUhhdmluZyBlc3RhYmxpc2hlZCBjb25uZWN0aW9ucyBhbW9uZyBndXQgYmFjdGVyaWEsIHRoZSBicmFpbiwgYW5kIGJlaGF2aW9yLCBpdCBpcyBpbnRyaWd1aW5nIHRvIGNvbnNpZGVyIHRoZSB3YXlzIHRoYXQgbWljcm9iaW90YSBtYXkgY29tbXVuaWNhdGUgd2l0aCB0aGUgYnJhaW4uIApNci4gR3VpdGUgd2FzIGEgbXVsdGkgbWVkYWxpc3QgaW4gdGhlIE5vcnRoIENhcm9saW5hIFNlbmlvciBHYW1lcyBhbmQgcGFydGljaXBhdGVkIGluIEJhc2tldGJhbGwgYW5kIFBpY2tsZWJhbGwuIApUaGlyZCBwYXJ0eSBsaW5rcyBhbmQgYXBwbGljYXRpb25zLgpUaGlzIGlzIGFuIGF1dG9tYXRlZCBtZXNzYWdlIHBvc3RlZCB0byBhbGwgcG9zdHMgaW4gdGhpcyBzdWJyZWRkaXQgd2l0aCBzb21lIGJhc2ljIGluZm9ybWF0aW9uIGFib3V0IHRoZSBncm91cCBpbmNsdWRpbmcgKHZlcnkgaW1wb3J0YW50bHkpIHJ1bGVzLiBQbGVhc2UgcmVwb3J0IGluYXBwcm9wcmlhdGUgY29udGVudCBzbyBpdCBjYW4gYmUgcmV2aWV3ZWQgYnkgdGhlIG1vZHMuClNpbmNlIHRoZWlyIGdyb3VwIGlzIHNtYWxsLCBJIGFzc3VtaW5nIHRoYXQgaWYgdGhleSByZWFjaCB0aGUgc3RhaXJzIHRvIHRoZSBuZXh0IGxldmVsLCB0aGV5IGdldCB0byBsZXZlbCB1cCwgYXQgbGVhc3QgdW50aWwgZnVydGhlciBkb3duIGluIHRoZSBkdW5nZW9uLi4gCldoeT8gQmVjYXVzZSBvZiBQZWxvc2kgc3VwcG9ydCBvZiB0aGUgT2JhbWEgaGVhbHRoY2FyZSBhZ2VuZGEsIGFuIGFnZW5kYSB0aGF0IHRoZSBwbGFzdGljIHN1cmdlb24gaGFzIGFsc28gY29tcGFyZWQgdG8gdGhlIE5hemkgRmluYWwgU29sdXRpb24uLiAKVGhvdXNhbmRzIGV4cGVjdGVkIGluIExpdmluZ3N0b24gUGFyaXNoIGZvciBUaWNrZmF3IDIwMApFc3BlY2lhbGx5IHRoZSB0eXBlIG9mIHBsYXllciB3aG8gb3ZlcnBsYXlzIGhpcyBoYW5kcyBhIGxvdC4gCkEgcGxheWVyIGF0IHRoZSBmZWF0dXJlIHRhYmxlIGVhcm5zIGFuIGF2ZXJhZ2Ugb2YgJDEwLDAwMCBmb3IgZGlzcGxheWluZyBhIGNvbXBhbnkncyBsb2dvIG9uIHRoZWlyIGNsb3RoaW5nLCB3aGljaCBpcyBtb3N0IG9mdGVuIG9ubGluZSBnYW1ibGluZyBXZWIgc2l0ZXMgc3VjaCBhcyBQb2tlcnN0YXJzLCBGdWxsIFRpbHQgb3IgVWx0aW1hdGUgQmV0LiAKVGhpcyB0dXJucyB0aGUgbGlicmFyeSBpbnRvIDcwJSBlbmdpbmVlcmluZyBzdHVkZW50cywgd2hpY2ggd291bGQgYmUgb2theSBpZiB0aGUgY3VsdHVyZSBpbiB0aGUgbGlicmFyeSB3YXMgdG8gc3R1ZHkgYW5kIG5vdCBqdXN0IHRvIHdhdGNoIG5ldGZsaXggaW4gdGhlIHNpbGVudCBzZWN0aW9uIGFuZCB0YWxrICJxdWlldGx5IiB0byB5b3VyIGZyaWVuZHMgd2hpbGUgb3RoZXJzIGFyZSB0cnlpbmcgdG8gY29tcGxldGUgdGhlaXIgZGVncmVlLiAKU2hlIG5lZWRzIHRvIGp1c3QgZmlsZSBmb3IgZGl2b3JjZS4gU2hlIGRvZXMgbm90IG5lZWQgaGltIHRvIGNvb3BlcmF0ZSwgcGFydGljaXBhdGUgb3IgY29uc2VudCB0byBhIGRpdm9yY2UuIFNoZSBhc2tzIHRoZSBqdWRnZSBmb3IgdGhlIGRpdm9yY2UgYW5kIHRoZXkgd2lsbCBncmFudCBpdCBvbmNlIHNoZSBoYXMgc2hvd24gdGhhdCB0aGUgbWFycmlhZ2UgaGFzIGlycmV0cmlldmFibHkgYnJva2VuIGRvd24uIApZb3Uga25vdywgb3ZlciB0aGUgeWVhcnMgd2hlbiB0aGlzIGhhcyBwb3BwZWQgdG8gbWluZCBJIHRob3VnaHQgYWJvdXQgd2h5IEkgZGlkbiBjYWxsIHRoZSBwb2xpY2UuIEFuZCBJIHdvdWxkIGxpa2UgdG8gYmVsaWV2ZSB0aGF0IGl0IGJlY2F1c2UgSSBkaWRuIGtub3cgd2hlcmUgdGhlIG5lYXJlc3QgcG9saWNlIHN0YXRpb24gd2FzIGFuZCBJIGRpZG4gd2FudCBoaW0gdG8gZmVlbCB0aHJlYXRlbmVkIGFuZCBnZXQgYW5ncnkuIFRoZSB0cnV0aCBpcyBhIGxvdCB3b3JzZSB0aG91Z2g6IEkgZGlkbiB3YW50IHRvIGxvb2sgbGlrZSBhIGJpdGNoL2Egc3R1cGlkIGxpdHRsZSBnaXJsIG92ZXIgcmVhY3RpbmcuIE15IHBhcmVudHMgd2VyZSBhbHJlYWR5IHdvcnJpZWQgYWJvdXQgbWUgZG9pbmcgdGhpcyBkcml2ZSBhbG9uZSBhbmQgSSBndWVzcyBJIHdhbnRlZCB0byBwcm92ZSB0aGF0IEkgd2FzbiBhIGxpdHRsZSBraWQgYW55bW9yZSB3aG8gc2NyZWFtcyB3aGVuIHNvbWVvbmUgc2F5cyAiYm9vIi4gSXQgd2FzIHB1cmUgMTkgeWVhciBvbGQgc3R1cGlkaXR5LiBJZiB0aGlzIGhhcyBoYXBwZW5lZCBub3csIHdoZW4gSSBsZXNzIGFmcmFpZCBvZiBob3cgcGVvcGxlIHdpbGwganVkZ2UgbWUgYW5kIHdoZW4gSSBmaW5hbGx5IHJlYWxpemVkIG15IG93biBzYWZldHkgaXMgbW9yZSBpbXBvcnRhbnQgdGhhbiBzZWVtaW5nIHJ1ZGUsIEkgc3VyZSB0aGlzIHdvdWxkIGhhdmUgcGxheWVkIG91dCBkaWZmZXJlbnRseS4gQSBsb3Qgb2YgZ2lybHMgZ2V0IGh1cnQgYmVjYXVzZSB0aGV5IGRvbiB3YW50IHRvIGFwcGVhciBydWRlLiBUaGF0IGJlZW4gYSBtYWpvciB0YWN0aWMgb2Yga2lkbmFwcGVkIGFuZCBraWxsZXJzIGZvcmV2ZXIsIGx1cmluZyB3b21lbiBpbiBieSBhc2tpbmcgZm9yIGhlbHAgYW5kIG1ha2luZyB0aGVtIGZlZWwgYmFkIGZvciBzYXlpbmcgbm8uIEFuZCBJIHdhbnQgdG8gYmUga2luZCwgYW5kIEkgd2FudCB0byBoZWxwIHBlb3BsZSwgYnV0IGJlY2F1c2Ugb2YgYSB0aW55IG51bWJlciBvZiBhc3Nob2xlcyBJIG5vdyBoYXZlIHRvIHNheSBubyBmb3IgbXkgb3duIHNhZmV0eS4gQmVjYXVzZSBldmVuIHRob3VnaCA5MCUgb2YgdGhlIHRpbWUgdGhleSB3b24gYXR0YWNrIG1lLCB0aGF0IDEwJSBzdGlsbCBleGlzdHMuIEFuZCB0aGF0IHN1Y2tzLgpUaGVyZWZvcmUsIGl0IHNob3VsZCBjb21lIGFzIG5vIHN1cnByaXNlIHRoYXQgbWFueSBwb2tlciBwbGF5ZXJzIGJlbGlldmUgaW4gbHVja3kgY2FyZCBkZWNrcy4gCkx1Y3kgaW4gdGhlIGNsYXNzcm9vbSBKdWxpYW4gR2VybWFpbkVpdGhlciB3YXksIGl0IHdhcyB0b28gbGF0ZS4gTXkgcGlwZSB3YXMgb3V0LCBhbmQgcGVvcGxlIHdlcmUgZm9sbG93aW5nIGluIGdyZWF0IG51bWJlcnMuIApEb2xsYXIgYW1vdW50cyBoZXJlIGFyZSBkZWNlcHRpdmU7IHdoYXQgTHVuZCBhbmQgTWF0bG91YmkgYXJlIHJlYWxseSBwbGF5aW5nIGZvciBpcyAkNTAxLDAwMCwgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiAkODM1LDAwMCBhbmQgdGhlICQzMzQsMDAwIHNlY29uZCBwcml6ZS4gQnV0IHRvIHdpbiwgeW91IG5lZWQgYWxsIHRoZSBjaGlwcy4gTHVuZCBsb29rcyBnb2xkZW4gYWZ0ZXIgdGhlIHRocmVlICBjYXJkICJmbG9wIiBnaXZlcyBoaW0gYW5vdGhlciBhY2UgbmluZSwgZm9yIGEgbmVhcmx5IHVuYmVhdGFibGUgdHdvIHBhaXJzLiAKSXQgaGFkIG1hbnkgcGVvcGxlIGxvb2sgYXQgaXQgYnV0IG1vc3Qgb2YgdGhlbSBkb24gd29yayBhbmQgY2FuIGFmZm9yZCBzdWNoIGEgbmljZSBwaWVjZSBzbyBpdCBzdGlsbCB1cCBmb3IgZ3JhYnMhIFNoZSBjb21lcyB3aXRoIGFsbCB0aGUgYWNjZXNzb3JpZXMgeW91IHdhbnQgaW4gYSBwaXBlbGluZSwgc2F0IG5hdiwgcG93ZXIgd2luZG93cyBhbmQgZnJlc2ggb2lsIGFsbCB0aGUgdGltZS4gSXQgaGFzIG5ldmVyIGJlZW4gaW4gYW4gYWNjaWRlbnQuIApUaGUgd2Vic2l0ZSBtYXkgbG9vayB2ZXJ5IHdlbGwgbGlrZSBmYWNlYm9vayBvciBhbnkgb3RoZXIga2luZCBvZiBzZWN1cml0eSBpbnZlbnRlZCB3ZXNiaXRlLiAoRnVsbCBBbnN3ZXIpV2hhdCBkbyB0aGUgcG9rZXIgY2hpcHMgc3RhbmQgZm9yIGluIHBva2VyP0luIHBva2VyIHRoZSBjaGlwcyBoYXZlIGEgdmFsdWUsIHRoaXMgdmFsdWUgaW5kaWNhdGVzIGhvdyBtdWNoIHRoYXQgcGFydGljdWxhciBjaGlwIGlzIHdvcnRoLiBUaGVyZSBhcmUgIkxpdmUgQ2FzaW5vIENoaXBzIiwgd2hpY2ggdmFsdWUgaXMgYSByZWZsZWN0aW9uIG9mIGhvdyBtdWNoIG1vbmV5IHRoZXkgYXJlIHdvcnRoLiAKUGVhcmwgRW1lbndlaW4sIDY0MiBTb3V0aCBDcm91c2UgQXZlbnVlLCByZXBvcnRlZCB0aGUgdGhlZnQgb2YgODUgaW4gYmlsbHMgYW5kIGEgY2hlY2sgZm9yIGZyb20gaGVyIHB1cnNlIHdoaWxlIHNoZSB3YXMgSW4gYSA1IGFuZCAxMCBjZW50IHN0b3JlLiAKTHVzdGlnIGlzIGEgc3BlY2lhbGlzdCBvbiBwZWRpYXRyaWMgaG9ybW9uZSBkaXNvcmRlcnMgYW5kIHRoZSBsZWFkaW5nIGV4cGVydCBpbiBjaGlsZGhvb2Qgb2Jlc2l0eSBhdCB0aGUgVW5pdmVyc2l0eSBvZiBDYWxpZm9ybmlhLCBTYW4gRnJhbmNpc2NvLCBTY2hvb2wgb2YgTWVkaWNpbmUsIHdoaWNoIGlzIG9uZSBvZiB0aGUgYmVzdCBtZWRpY2FsIHNjaG9vbHMgaW4gdGhlIGNvdW50cnkuCkFic29sdXRlbHkgZ29yZ2VvdXMsIENoaW5lc2UgbG9va2luZyBnaXJsIGZyb20gQ2hpYW5nIE1haS4gRGVsaWNhdGUgYW5kIGZlbWluaW5lIGZlYXR1cmVzIHdpdGggYWxtb25kIHNoYXBlZCBkZWVwLCBkYXJrIGV5ZXMuIFNoZSBsb29rZWQgYSBsb3QgbGlrZSBhIHlvdW5nIEx1Y3kgTGl1LjEwLzEwCllvdSBjb3VsZCBtYWtlIHRoZSBzd2l0Y2ggb3Zlcm5pZ2h0LiBJIGF0ZSBiYWNvbiBldmVyeSBzaW5nbGUgbW9ybmluZyBmb3IgYnJlYWtmYXN0IHdoZW4gSSB3YXMgaW4gY29sbGVnZSwgYW5kIG9uIGEgc2luZ2xlIGRheSwgSSB0aHJldyBhd2F5IGFsbCBvZiB0aGUgYW5pbWFsIHByb2R1Y3RzIGluIG15IGZyaWRnZSBhbmQgd2VudCB2ZWdhbi4gClRvdXQgIGZhaXQuIE9uIHBldXQgbGUgY2hpZmZyZXIgYXUgY291cnMgZGUgY2VzIDMzIGRlcm5pcmVzIGFubmVzLiBPbiBhIG9ic2VydiB1biB2ZXJkaXNzZW1lbnQgZGUgbGEgcGxhbnRlIHF1aSBhIHQgdmFsdSAgbCdxdWl2YWxlbnQgZCd1biBzaXhpbWUgY29udGluZW50IHZlcnQgZGUgMTggbWlsbGlvbnMgZGUga2lsb210cmVzIGNhcnJzLCBjJ2VzdCAgZGlyZSBwbHVzIGRlIDMwIGZvaXMgbGEgc3VwZXJmaWNpZSBkZSBsYSBGcmFuY2UgbXRyb3BvbGl0YWluZSwgZCdhdXRyZSBwYXJ0LCBjZWxhIHNlIHJlY291cGUgdHJzIGJpZW4sIHB1aXNxdSd1bmUgcGFydGllIGR1IENPMiBxdWUgbm91cyBtZXR0b25zIHZhIGRhbnMgbGEgdmd0YXRpb24gcXVpIHNlIGpldHRlIGwgZGVzc3VzIGF2ZWMgYXZpZGl0LiBEYW5zIGwnaGlzdG9pcmUgZGUgbGEgcGxhbnRlLCBpbCB5IGEgZGVzIHBvcXVlcyBvIGlsIHkgYSBldSBiZWF1Y291cCBwbHVzIGRlIENPMiwgbGEgdmd0YXRpb24gdGFpdCBsdXh1cmlhbnRlIGV0IGMnZXN0IGNlIHF1aSBhIGNyIGNlIHF1ZSBsJ29uIGFwcGVsbGUgYXVqb3VyZCdodWkgbGVzIGdpc2VtZW50cyBmb3NzaWxlcy4gSWwgeSBhdmFpdCBwbHVzIGRlIENPMiBkYW5zIGwnYWlyICBjZSBtb21lbnQgbCBldCBjZWxhIGEgcHUgcGVybWV0dHJlIGNldHRlIHZndGF0aW9uIGx1eHVyaWFudGUuClRoZW4geW91IHBlb3BsZSB3aWxsIGhhdmUgc29tZXRoaW5nIHRvIGNyeSBhYm91dC4gClRvZGF5LCB0aGUgTGFzZXJKZXQgd2hpY2ggZml0cyB0aGUgc2FtZSBuaWNoZSBpbiBIUCBsaW5lIGNvc3RzIGFib3V0ICQyNzAsIHByaW50cyBhYm91dCB0aHJlZSB0aW1lcyBhcyBmYXN0IGFzIGRpZCB0aGUgb2xkIHBlcnNvbmFsIHByaW50ZXIsIGFuZCBoYXMgYW4gZXhwZWN0ZWQgbGlmZSBvZiBtYXliZSB0aHJlZSB5ZWFycy4gCk15IGJ1bGx5IHdhcyBteSA0dGggZ3JhZGUgdGVhY2hlci4gSGF0ZWZ1bCwgbWVhbiB3b21hbi4gClRvIGZpbmQgdGhpcyBwYXJ0aWN1bGFyIHBsYWNlLCBJIGNoZWNrZWQgb3V0IHJldmlld3Mgb24gYSBzaXRlIEkgZm91bmQgdXNpbmcgR29vZ2xlLlByaW9yIHRvIHVzaW5nIHJhdGluZyBzaXRlcywgaXQgd2FzIGp1c3QgdHJpYWwgYW5kIGVycm9yLiBUaGVyZSBhcmUgcXVpdGUgYSBmZXcgbWFzc2FnZSBwYXJsb3JzIGxpc3RlZCB1bmRlciAiVGhlcmFwZXV0aWMiIG9uIENyYWlnc2xpc3QsIGJ1dCBJIGNhbiB0ZWxsIHlvdSBmcm9tIGV4cGVyaWVuY2UsIG1vc3QgZG8gbm90IG9mZmVyIEhhcHB5IEVuZGluZ3Mgb2YgYW55IHNvcnQuIFRoZSBhZHMgYXJlIGFsbCBzaW1pbGFyLiAKSXMgdGhpcyBhIGdhbWUgdG8geW91PyBZb3Ugc2F5IGFjaGlldmVkLCB0aGF0IGltcGxpZXMgeW91IGZpbmQgeW91IGhhdmUgYSBjZXJ0YWluIGdvYWwgeW91IG11c3QgYWNoaWV2ZSBpbiBvcmRlciB0byBiZSBjb25zaWRlcmVkIHBhcnQgb2YgdGhlIGdyb3VwLiBQbGVhc2UgZG8gbm90IHRoaW5rIG9mIHZlZ2FuaXNtIGFzIGp1c3QgYW5vdGhlciBpZGVudGlmeSBkcml2ZW4gcGhlbm9tZW5vbi4KTXkgaW50ZXJwcmV0YXRpb24gb2YgaGVyIGRlZmluaXRpb24gb2YgZmFzY2lzbSBpcyB0aGF0IHNoZSB3YXMgbm90IHJlZmVycmluZyB0byBoaXN0b3JpY2FsIGZhc2Npc20sIGJ1dCBjb250ZW1wb3JhcnkgZmFzY2lzbSAob2Z0ZW4gcmVmZXJyZWQgdG8gYXMgTmVvIGZhc2Npc20pLiBUaGUgb3hmb3JkIGRpY3Rpb25hcnkgZGVmaW5pdGlvbiBpc24gZ3JlYXQgaGVyZSwgaXQganVzdCBkaXJlY3RzIHRvICJuZW8gZmFzY2lzdCIsIGFuZCB0aGF0IHNheXMgIkEgbWVtYmVyIG9mIGFuIG9yZ2FuaXphdGlvbiBzaW1pbGFyIHRvIHRoZSBJdGFsaWFuIEZhc2Npc3QgbW92ZW1lbnQgb2YgdGhlIGVhcmx5IDIwdGggY2VudHVyeS4iIEl0YWx5IHVuZGVyIE11c3NvbGluaSB3YXMgZmFpcmx5IHJhY2lzdC4gCk1vcmUgaW1wb3J0YW50bHksIHRoZSBTYWludHMgYXJlIGhvcGVmdWwgYW4gZWxpdGUgY2VudHJlIHdpbGwgYWxsb3cgdGhlaXIgcGxheWVycyB0byBiZW5lZml0IGZyb20gdGhlIHNvcnQgb2YgZmFjaWxpdGllcyBlbmpveWVkIGJ5IHRoZSB3ZWFsdGh5IG5vbiBWaWN0b3JpYW4gY2x1YnMgYW5kIE1lbGJvdXJuZSByaXZhbHMgQ29sbGluZ3dvb2QgYW5kIEhhd3Rob3JuLgpQYXVsIE1heGZpZWxkIGRvZXMgbm90IGhhdmUgdGhlIGV5ZXMgdGhhdCBvbmUgbWlnaHQgZXhwZWN0IGEgdHJ1ZSBjYXJkIHNoYXJwIHRvIHBvc3Nlc3MuIFRoZXkgYXJlIGJyaWdodCBibHVlIHdpdGggbm90IGEgaGludCBvZiBpY3kgaW50ZW5zaXR5LiBJbiBmYWN0LCB0aGV5IGxvb2sgZG93bnJpZ2h0IHdlYXJ5LgpPdXIgam9iIGlzIHRvIGFzayB3aHkgdGhpcyBzaXR1YXRpb24gaXMgc3RpbGwgZ29pbmcgb24uIApUaGUgbWluZGxlc3Mgc3BlbmRpbmcgd2FzIG91dCwgYW5kIFdhZ2Fza3kgY2FtZSB1cCB3aXRoIGEgYnVkZ2V0IHNoZSBjb3VsZCBtYWtlIHdvcmsuCkl0J3MgYmVzdCB0byBqdW1wIG91dCB3aXRoIHNvbWUgbW9uZXkgdGhlbiB0byBoYXZlIHRvIGxlYXZlIHdpdGggbm9uZS4gCjI2LCAxOTUxLCBhdCBTdC4gClRoZSBob3JzZSBJIGFtIGxlYXNpbmcgaXMgdG9lZCBpbiBiaWcgdGltZSwgYW5kIGEgdGVlbnN5IGJpdCBxdWlya3kuIHRoYXRzIHdoeSB0aGVyZXMgbm8gZmVlLiBJdCBjYW4gYmUgcmVhbGx5IGJlbmVmaWNpYWwgZm9yIGJvdGggc2lkZXMuQ2FsbGVkIHR3byBsYXd5ZXJzIGFuZCBnb3QgYSBjb25zdWx0LiBCb3RoIHNhaWQgaXQgd291bGRudCBiZSB3b3J0aCBoaXJpbmcgYW4gYXR0b3JuZXkuIEluIEZsb3JpZGEgeW91IGhhdmUgdG8gaGF2ZSBQSVAgKFBlcnNvbmFsIEluanVyeSBQcm90ZWN0aW9uKSB3aXRoIHlvdXIgY2FyIGluc3VyYW5jZSwgYW5kIHRoYXQgY292ZXJzIG1lZGljYWwgY29zdHMuIAoiSGUncyBqdXN0IGFub3RoZXIgYmlnIHBsYXllciBmb3IgdXMsIGEgYmlnIHBhcnQgb2YgdGhpcyB0ZWFtLCIgQXVzdG9uIE1hdHRoZXdzIHNhaWQuIApXaGF0IHRoZXkgZm91bmQgd2FzIGRvemVucyBvZiBleGFtcGxlcyBvZiBkZWZlbmRhbnRzIHdobywgaW4gdGhlaXIgdmlldywgd2VyZSBubyB3aGVyZSBuZWFybHkgYXMgZm9ydHVuYXRlIGFzIE1hbmFmb3J0Li4gCkl0IHJlYWxseSBub3QgaGFyZCB0byB1bmRlcnN0YW5kLiAKTm8gdHJhaW5pbmcuIApJJ2QgYXJndWUgdGhhdCBpZiBCZXJuaWUgcmVwcmVzZW50cyB5b3VyIGlkZWFscyB0aGVuIHdob2V2ZXIgdGhlIGRlbSBub21pbmVlIGlzIHdpbGwgcmVwcmVzZW50IHlvdXIgaWRlYWxzIGJldHRlciB0aGFuIFRydW1wIHdpbGwuIEFuZCBhcyBtdWNoIGFzIEkgaG9wZSBmb3IgYSB2aWFibGUgdGhpcmQgcGFydHkgc29tZSBkYXkgaXQganVzdCBkb2Vzbid0IGV4aXN0IHJpZ2h0IG5vdywgYW5kIHZvdGluZyBncmVlbiBvciBsaWJlcnRhcmlhbiBvciB3aGF0ZXZlciB3cml0ZSBpbiBjYW5kaWRhdGUgaW4gMjAyMCB3aWxsIG5vdCBjaGFuZ2UgdGhhdC4gCk9uIGFsbCBvZiB0aG9zZSBmZWF0dXJlcywgSSBkb24gZXhwZWN0IHRoZXJlIHRvIGJlIGEgcHJvYmxlbS4gQ0ZPWCBpbnRlcnZpZXdlcnMgd2VyZSB0b2xkIHRvIGtlZXAgYWxsIHF1ZXN0aW9ucyBwb2tlciByZWxhdGVkLCBidXQgdG8gdGhlaXIgY3JlZGl0LCB0aGV5IGRpZCB0cnkgdG8gcHVzaCB0aGUgZW52ZWxvcGUgYSBiaXQgYW5kIGdhdWdlIHdoZXJlIHRoZSBnb2FsaWUgaGVhZCBpcyBhdC4gClRoZSBzY2hvb2wsIHdoaWNoIGhhZCAxMTAgc3R1ZGVudHMgZW5yb2xsZWQgd2hlbiBpdCBjbG9zZWQsIGFsc28gaGFzIGEgaGVhcmluZyBiZWZvcmUgZmVkZXJhbCBlZHVjYXRpb24gb2ZmaWNpYWxzIGxhdGVyIHRoaXMgeWVhciBwZW5kaW5nIHRoZSBvdXRjb21lIG9mIG5vbmNvbXBsaWFuY2UgaXNzdWVzLgpIb3dldmVyLCBhIHJpZ2h0IHdpbmcgc21lYXIgY2FtcGFpZ24gY29udmluY2VkIG9yZGluYXJ5IEFtZXJpY2FucyB0aGF0IEFDT1JOIHdhcyBiYWQsIHdvcnNlIHRoYW4gSGFsaWJ1cnRvbiBiYWQsIGFuZCBoYWQgdG8gYmUgc2h1dCBkb3duLi4gClRpY2tldHMgb24gc2FsZSBub3cgZm9yIGNoYXJpdHkgcG9rZXIgdG91cm5hbWVudApCdXQgdGhleSBkaWRuIGZvcmdldCB0aGF0IHRoaXMgaXNzdWUgd2FzIG9mIGtleSBpbXBvcnRhbmNlIHRvIGEgbG90IG9mIHVzLCBwYXJ0aWN1bGFybHkgdGhvc2Ugb2YgdXMgdGhhdCBzaG93ZWQgdXAgZm9yIHRoZSBtaWR0ZXJtcy4gCldpY2tlZExpbFRoaW5nICAxMCBwb2ludHMgIHN1Ym1pdHRlZCAyMCBkYXlzIGFnbwpUaGV5IG5ldmVyIGtuZXcgd2hlcmUgaXQgd2FzIGluIHJlYWwgbGlmZSwgYnV0IGl0IGxvb2tlZCBsaWtlIGEgbG92ZWx5LCBjYWxtIHBsYWNlIHRvIGJlLiBUaGV5IGdvdCBjb3BpZXMgb2YgaXQgbWFkZSwgcGlubmVkIGl0IHVwIGluIGVhc3kgbGluZSBvZiBzaWdodCBhdCB0aGVpciBkZXNrIGF0IHdvcmsgYW5kIGRlc2sgYXQgaG9tZS4gCkluIGZhY3QgdG9vdGhwYXN0ZXMgY29udGFpbiBzb2FwICAgbmFtZWx5LCBzb2RpdW0gbGF1cnlsIHN1bGZhdGUgICBiZWNhdXNlIGl0J3Mgbm90IGNsZWFuIHVubGVzcyBpdCdzIGZvYW15ISBCdXQgc29hcCBhbHNvIGhlbHBlZCBtYWludGFpbiBhbiBldmVuLCBjcmVhbXkgdGV4dHVyZS4gV2UgZ2V0IHRoaXMgc21vb3RoIHRleHR1cmUgdG9kYXkgd2l0aCBodW1lY3RhbnRzIGxpa2Ugc29yYml0b2wsIGdseWNlcmluIGFuZCBwcm9weWxlbmUgZ2x5Y29sLCB3aGljaCBoYXZlIHRoZSBhZGRlZCBib251cyBvZiBiZWluZyBhIGxpdHRsZSBzd2VldC4uIApJIGZlbGwgaW4gdG8gYSBidXJuaW5nIHJpbmcgb2YgZmlyZSwgSSB3ZW50IGRvd24sIGRvd24sIGRvd24KSG9uZXN0bHkgdGhlcmUgaXMgc3VjaCBhIG5lZ2xpZ2FibGUgZWZmZWN0IG9mIGxvc2luZyAxIDIgbWluIG92ZXIgdGhlIGNvdXJzZSBvZiBhIGhhbGYgdGhhdCBwcm9iYWJseSBpdCBiZXN0IHRvIGRvIGRlbGliZXJhdGUgaHlkcmF0aW9uIGFzIGl0IGxlc3Mgc3R1ZmYgdG8gY2FyeS4gCkhlcmUgYW4gYXJyZXN0aW5nIGltYWdlOiB0aGUgYXJyb3dzIG9mIHRyYW5zcG9ydGF0aW9uIGludGVyZXN0cyBkaXJlY3RpbmcgdGhlbXNlbHZlcyBpbndhcmQsIGlubGFuZCwgdG8gdGhlIEdyZWF0IExha2VzLCBjYS4gMTkyMy4gCkluIGZhY3QgSSB1c2VkIHRvIGJlIHBhcnQgb2YgdGhlIHRyYWluaW5nIGNyZXcgZm9yIG9uZSBvZiB0aGUgYmlnIGNoYXJpdHkgdGVhbXMgb2YgdGhlIG1hcmF0aG9uLiAoVGhlIGNoYXJpdHkgdGVhbXMgdGFrZSBhbWF0ZXVyIHJ1bm5lcnM7IHlvdSBkb24ndCBoYXZlIHRvIG1ha2UgdGhlIG9mZmljaWFsIHF1YWxpZnlpbmcgdGltZXMgaWYgeW91J3JlIHJ1bm5pbmcgZm9yIGNoYXJpdHkuIApZb3UnbGwgaGF2ZSB0aW1lIGFmdGVyd2FyZCB0byBleHBsb3JlIHRhaWxnYXRlcyBhcm91bmQgdGhlIHN0YWRpdW0vRnJlbmNoIGZpZWxkIGhvdXNlLiAKSnVzdCByZWFsbHksIHJlYWxseSBnb29kIGZyb20gc3RhcnQgdG8gZmluaXNoLiBUaGUgbWFzc2FnZSBtb3ZlZCBpbnRvIGEgZ29vZCBoYW5kIGpvYiBhbmQgc2hlIHdhcyBrZWVuIHRvIHNob3cgbWUgaGVyIHdob2xlIGJvZHkgYXMgc2hlIHdvcmtlZCBvbiBtZS4gU2hlIGFsbG93ZWQgbWUgdG8gcGxheSB3aXRoIGhlciBwdXNzeSBhbmQgZmluZ2VyIGhlciBhbmQgc2hlIEZyZW5jaCBraXNzZWQgbWUuIFNoZSBtb3ZlZCBvbiB0aGUgYmxvdyBqb2IsIHdoaWNoIHdhcyB2ZXJ5IGdvb2QuIEkgb2NjYXNpb25hbGx5IGZlbHQgYSB0b290aCBidXQgaXQgd2FzIG5ldmVyIHVuY29tZm9ydGFibGUuIFNoZSBzdWNrZWQgYW5kIGxpY2tlZCBldmVyeSBwYXJ0IG9mIG15IGdlbml0YWxzLCBiYXJlYmFjay4gSGVyIHNraWxsIGFuZCBwYWNlIHdhcyBleGNlbGxlbnQgYW5kIHNoZSBzdWNrZWQgc29mdGx5LCByYXRoZXIgdGhhbiBoYXJkLgpUaGUgd29yc2hpcCBvZiBab24gS3V0aG9uIGlzIGFjY2VwdGFibGUgdG8gbW9zdCwgYW5kIHBvc2l0aXZlbHkgZW5qb3llZCBieSBzb21lLiBXb3JzaGlwIG9mIFpvbiBLdXRob24gaXMgTmlkYWwgaXMgTk9UIGFuIGV2aWwgYWN0LCBOT1IgaXMgaXQgY2hhb3RpYy4gVGhlIHJlbGlnaW91cyB3b3JzaGlwIChlc3BlY2lhbGx5IG91dHNpZGUgb2YgdGhlIGNhcGl0YWwpIGRvZXMgaW52b2x2ZSAodXN1YWxseSB2b2x1bnRhcnkpIHRvcnR1cmUsIHNlbGYgZmxhZ2VsbGF0aW9uLCBhbmQgb3RoZXIgcml0ZXMgaW52b2x2aW5nIHBhaW4uIFZpbGxhZ2UgcGVvcGxlIGFyZSBub3QgdHlwaWNhbGx5IHdvcnJpZWQgYWJvdXQgdGhpcywgc2VlaW5nIGl0IGFzIG5vcm1hbCBhbmQgb3JkaW5hcnkgdGhhdCBwZW9wbGUgc2hvdWxkIGZlYXIgdGhlaXIgZ29kcy4KRGlnZ2luZyBpbnRvIHRoZSBiYWNrZ3JvdW5kIGJlaGluZCB0aGUgbm90ZXMgYW5kIHRoZSBjb25mZXJlbmNlLCBJIGRpc2NvdmVyZWQgaG93IGNvbXBhbmllcyBjYW4gcmVkZWZpbmUgdGhlIGJ1c2luZXNzIHRoZXkgYXJlIGluIGFuZCB1c2UgY29zdCBlZmZlY3RpdmUgd2F5cyB0byBzcHJlYWQgdGhlIHdvcmQuIEluIHRoaXMgcG9ydGlvbiBvZiBvdXIgaW50ZXJ2aWV3LCBaaWpkZXJ2ZWxkIGRldGFpbHMgaG93IHRoZSBpZGVhIG9mICJFbW90aW9uQUkiIGNhbWUgaW50byBiZWluZyBhbmQgdGhlIHRyYW5zZm9ybWF0aXZlIHJvbGUgaXQgaGFzIHBsYXllZCBmb3IgQWZmZWN0aXZhLgo1KSBTZWxmIHByb21vdGlvbiBTdGFraW5nIHJlcXVlc3RzOiBXZSBmb2xsb3cgYSAxMDoxIHJ1bGUgb24gdGhlIHN1YnJlZGRpdC4gRm9yIGV2ZXJ5IHNlbGYgcHJvbW90aW9uYWwgaXRlbSB5b3Ugc2hhcmUsIHlvdSBtdXN0IGNvbnRyaWJ1dGUgMTB4IGFzIG11Y2ggdGhyb3VnaCBjb21tZW50cyBvciB0aHJlYWRzLiBXaGVuIHNoYXJpbmcgeW91ciBzdHJlYW0sIHBsZWFzZSByZW1vdmUgdGhlIHRocmVhZCBhZnRlciB0aGUgc3RyZWFtIGhhcyBlbmRlZC4KQWxzbywgZm9yIHRoZSB0b3VyaXN0IHBsYWNlIGFuZCBoaWRkZW4gYXR0cmFjdGlvbnMsIG1pbmQgaWYgSSBhbHNvIGFzayB3aGVyZSBpcyBhIHBsYWNlIEkgY2FuIHNldCB1cCBzbyBJIGNhbiBhbHNvIHRha2UgcGhvdG9zIG9mIHlvdXIgYmVhdXRpZnVsIGNvdW50cnkuIEkgcGxhbm5pbmcgdG8gdGFrZSB3aWRlIGFuZ2xlIHNob3RzIGFuZCBwcm9sbHkgbG9uZyBleHBvc3VyZSBvbmVzLiAKU2NobWUgZGljaCBuaWNodCB3ZW5uIGVzIG1hbCBiZXJnYWIgZ2VodC4gClRoaXMgcmVub3ZhdGlvbiBhbHNvIHRvb2sgYXdheSB0aGUgcm9vZiBvdmVyIHBlb3BsZSB3YWl0aW5nIGZvciB0aGUga2ltYmFsbCBidXMuIApUaGlzIGNhbiBsZWFkIHRvIGJvdGhlcnNvbWUgdXJpbmFyeSBzeW1wdG9tcyB0aGF0IG1heSBpbmNsdWRlIGEgd2VhayBzdHJlYW0sIHRyb3VibGUgc3RhcnRpbmcgYW5kIHN0b3BwaW5nLCB0aGUgZnJlcXVlbnQgZmVlbGluZyBvZiBuZWVkaW5nIHRvIHVyaW5hdGUsIGdyZWF0ZXIgdXJnZW5jeSB3aGVuIHRoZSBmZWVsaW5nIGhpdHMsIGxlYWtpbmcgb3IgZHJpYmJsaW5nLCBhbmQgdGhlIHNlbnNlIHRoYXQgdGhlIGJsYWRkZXIgaXNuJ3QgZW1wdHkgYWZ0ZXIgdXJpbmF0aW9uLiAKQXQgdGhhdCBtb21lbnQgSSB1bmRlcnN0b29kIHRoZSBoYXJkc2hpcHMgb2YgdGhlIGpvYiBnaXZlbiB0byBtZSBieSBzYWludHMgdGVuIHllYXJzIGFnby4gCkZvciBzdGFydGVyczogT2YgdGhlIHNpeCBuZWFyYnkgbGFuZG93bmVycywgb25seSBvbmUgb2JqZWN0ZWQgdG8gdGhlIHBva2VyIHJvb20uIApIZXJlIGEgbG92ZWx5IGFuZCBoZWFydHdhcm1pbmcgdGVsbCBzdHJhaWdodCBvdXQgb2YgdGhlIDE5MzBzIHNvIGl0IGJlc3QgaW1hZ2luZWQgaW4gYmxhY2sgYW5kIHdoaXRlIHdpdGggc2xpZ2h0bHkgc2NyYXRjaHkgc291bmQuIFNvbWUgZXZpbCBiYW5rZXJzIGxvc2Ugc28gbXVjaCBtb25leSB0aHJvdWdoIHNjYW1taW5nIHRoZWlyIGN1c3Rvcm1lcnMgdGhhdCB0aGV5IG5lYXJseSBnbyBiYW5rcnVwdC4gVGhlIGZlZGVyYWwgZ292ZXJubWVudCBzdGVwcyBpbiB3aXRoIGEgJDE3MCBiaWxsaW9uIGJhaWxvdXQgd2l0aCB0YXhwYXllciBtb25leSBhcmd1aW5nIHRoZXkgInRvbyBiaWcgdG8gZmFpbC4iIFRoZSBmYXQgY2F0IGJhbmtlcnMgcnViIHRoZWlyIGZhdCBjYXQgaGFuZHMgdG9nZXRoZXIsIGxhdWdoaW5nIG1hbmlhY2FsbHksIGFzIHRoZXkgcXVpY2tseSBza2ltICQxNjUgbWlsbGlvbiBvZmYgdGhlIHRvcCBmb3IgImJvbnVzZXMiIChib251c2VzIHRoYXQgYXJlIGluIGFkZGl0aW9uIHRvIHRoZWlyIGFscmVhZGx5IGluZmxhdGVkIGZhdCBjYXQgc2FsYXJpZXMpLi4gClBlcmhhcHMgdGhlIHNhbWUgaXMgdHJ1ZSBvZiBQZWFzYW50IGFuZCBZcy4uIApTdXBlciBwb2xpdGUsIHRoZXkgdGlwIHdlbGwgYW5kIG15IHN0YWZmIGlzIHJlYWxseSBoYXBweSBhYm91dCBpdCwgc28gaXQgbWFrZXMgZm9yIGEgcmVhbGx5IGVuam95YWJsZSB3b3JrIGVudmlyb25tZW50LiBEaWRuIHdhbnQgdG8gZ2V0IGludG8gdGhlIG51bWJlcnMsIGJ1dCBzYWlkIHRoZSB0b3VybmFtZW50IGhhcyBicm91Z2h0IGEgYm9vc3QgaW4gc2FsZXMua2luZCBvZiB3aXNoIHRoZXkgZG8gdGhpcyBldmVyeSB5ZWFyLCBoZSBzYWlkIHdpdGggYSBncmluLk91dHNpZGUgUm9nZXJzIEFyZW5hLCBNaWtlIEhvbHN0LCAyNywgYSBsb25ndGltZSBEb3RhIDIgcGxheWVyIHdobyB0cmF2ZWxsZWQgZnJvbSBMb25kb24sIE9udC4sIHNhaWQgaGUgd2F0Y2hlZCBUaGUgSW50ZXJuYXRpb25hbCBzaW5jZSBpdCB3YXMgZmlyc3QgaGVsZCBpbiBHZXJtYW55IGluIDIwMTEuIApJUEcncyBXZWJlciBTaGFuZHdpY2sgdGhpcyB3ZWVrIGFubm91bmNlZCBpdCdzIGxhdW5jaGluZyBVbml0ZWQgTWluZHMsIGEgZ2xvYmFsIG1hbmFnZW1lbnQgY29uc3VsdGFuY3kuIFRoZSBwcmFjdGljZSBjb21iaW5lcyB0aGUgZmlybSdzICJFbXBsb3llZSBFbmdhZ2VtZW50IENoYW5nZSBNYW5hZ2VtZW50IiBwcmFjdGljZSB3aXRoIFVuaXRlZCBNaW5kcyBTd2VkZW4uIFVuaXRlZCBNaW5kcyB3aWxsIGJlIGxlZCBieSBLYXRlIEJ1bGxpbmdlciwgZm9ybWVybHkgdGhlIGdsb2JhbCBoZWFkIG9mIHRoZSBlbXBsb3llZSBlbmdhZ2VtZW50IGFuZCBjaGFuZ2UgbWFuYWdlbWVudCBwcmFjdGljZS4KSGUgaXMgeWVhcnMgb2xkZXIgYW5kIGNvdWxkIHByb2JhYmx5IHZlcmJhbGx5IGRlc3Ryb3kgdGhlbSBpZiBoZSBjaG9zZSBidXQgbm8sIGhlIGxhdWdoZWQgd2l0aCB0aGVtIG5vdCBhdCB0aGVtLiAKRm9yIHRoZSByZW1haW5lciB0aWwgdGhlIHNob3cncyBmaW5hbGUsIGhlIHdhc3JlcGxhY2VkIGJ5IEFkYW0gSGlja3Mgd2hvIHBsYXlzIHRoZSB0d2lucycgbG9uZyBsb3N0IGJyb3RoZXIsIEtvem9mIE1pbmR1LiBUaGUgcmVzaWduIGZyb20gdGhlIFBhaXIgb2YgS2luZ3Mgc2hvdyBoYWQgbm8gY29uZmxpY3Qgb2YgYWZmZWN0aW9ud2l0aCBoaXMgdm9pY2VvdmVyIHJvbGUgYXMgSmVyZW15IG9uIFBoaW5lYXMgRmVyYiB3aGljaCBoZWNvbnRpbnVlcyB0byBkbyB0b2RheSwgc2luY2UgaXQncyBqdXN0IGEgVk8gYW5kIG5vdCBhIGxpdmUgYWN0aW9uc2hvdy4gCkR1cmluZyBwcm9kdWN0aW9uIHRoZSBmb290YWdlIGlzIGNvbnN0YW50bHkgYmVpbmcgc2VudCB0byBwb3N0IHByb2R1Y3Rpb24gZm9yIGVkaXRpbmcgc28gYXMgdGhleSBlZGl0IGVwaXNvZGVzIHRoZXkgc2VuZCBub3RlcyBiYWNrIHRvIHRoZSBwcm9kdWNlcnMvc3RvcnkgdGVhbSBhYm91dCB3aGF0IHRoZXkncmUgbWlzc2luZyBsaWtlIGEgY2FzdCBtZW1iZXIgc3BlY2lmaWNhbGx5IHJlZmVyZW5jaW5nIGFuIGluY2lkZW50IG9yIG90aGVyIHN0b3J5IGFuZCBwcm9kdWN0aW9uIHdvcmtzIGl0IGludG8gc2hvb3RpbmcuLiAKWW91IHNob3VsZCBwcm9iYWJseSBzaGFyZSB0aGlzIGluZm9ybWF0aW9uIHdpdGggYXQgbGVhc3Qgb25lIHBlcnNvbiBmb3Igc2FmZXR5IHJlYXNvbnMuIApBcyBzdWNoLCB0aGUgSVJCIHJldmlld3MgYWxsIHJlc2VhcmNoIGFjdGl2aXRpZXMsIHJlZ2FyZGxlc3Mgb2YgZnVuZGluZywgd2hpY2ggaW52b2x2ZXMgaHVtYW4gc3ViamVjdHMgZm9yIGNvbXBsaWFuY2Ugd2l0aCBhcHBsaWNhYmxlIGZlZGVyYWwsIHN0YXRlLCBsb2NhbCwgYW5kIGluc3RpdHV0aW9uYWwgcmVndWxhdGlvbnMsIGd1aWRlbGluZXMsIGFuZCBldGhpY2FsIHJlc2VhcmNoIHByaW5jaXBsZXMuIEFsbCBmdW5kZWQgcmVzZWFyY2ggaW52b2x2aW5nIGh1bWFuIHN1YmplY3RzIG11c3QgYmUgcmV2aWV3ZWQgYW5kIGFwcHJvdmVkIHVuZGVyIElSQiBwcm9jZWR1cmVzLCBwcmlvciB0byByZWNlaXZpbmcgZnVuZGluZy5PUkMgSHVtYW4gUmVzZWFyY2ggUHJvdGVjdGlvbiBQcm9ncmFtVGhlIE9SQyBwcm92aWRlcyBjb21wbGlhbmNlIG92ZXJzaWdodCwgaW5kZXBlbmRlbnRseSBhbmQgaW4gY29uanVuY3Rpb24gd2l0aCB0aGUgSVJCLCBmb3IgcmVzZWFyY2ggYWN0aXZpdGllcyBpbnZvbHZpbmcgdGhlIHVzZSBvZiBodW1hbiBzdWJqZWN0cy4gClVzZSBub24gYWJyYXNpdmUgY2xvdGggb3IgbWljcm9maWJlciBjbGVhbmluZyBjbG90aCBvbiB0aGUgc3VyZmFjZSBvZiB0aGUgbWlycm9yIHNvIHRoYXQgdGhlIGZpYmVycyB3aWxsIG5vdCBiZSBsZWZ0IG9uIHRoZSBzdXJmYWNlIG9mIHRoZSBtaXJyb3IuIApJdCBhbWF6ZXMgaG93IGEgbG90IG9mIHBlb3BsZSBvbiByL1N0YXJ3YXJzIHdpbGwgYmFzaCB0aGUgc2VxdWVscyB0aGVuIGltbWVkaWF0ZWx5IHByYWlzZSB0aGUgcHJlcXVlbHMuIExpa2UgdGhleSBzYXkgdGhhdCB0aGUgc2VxdWVscyBpbnRyb2R1Y2VkIHBvbGl0aWNzIGludG8gc3RhciB3YXJzIGZvcmdldHRpbmcgYWJvdXQgdGhlIGxpdGVyYWwsIGFjdHVhbCBwb2xpdGljcyBvZiB0aGUgcHJlcXVlbHMuIFRoZSBjb2duaXRpdmUgZGlzc29uYW5jZSBpcyBzdHJvbmcgd2l0aCB0aG9zZSBvbmVzLiAKTWVhbndoaWxlLCBiYWNrIG9uIHRoZSBwb3N0IGdlbmRlciBjYW1wdXNlcyB0aGF0IEkgaW5oYWJpdCwgc2V4dWFsIGFzc2F1bHQgaXMgYSBjb25zdGFudCB0aHJlYXQgYW5kIGlzIG5lYXJseSBhbHdheXMgY29tbWl0dGVkIGJ5IGEgcGFydGljdWxhciBnZW5kZXJlZCBhbmQgc2V4ZWQgYm9keSBhbmQgbW9zdCBvZiB0aGUgdGltZSBvbiBhIGRpZmZlcmVudGx5IGdlbmRlcmVkIGFuZCBzZXhlZCBib2R5LiBBIG5lYXJieSB1bml2ZXJzaXR5LCB0aGVyZSBhcmUgZGV0YWlscyBjb21pbmcgb3V0IGFib3V0IGEgcGFydGljdWxhcmx5IGJydXRhbCBhc3NhdWx0IG9uIGEgeW91bmcgd29tYW4gYnkgdHdvIG1lbiwgdGhlIDl0aCByZXBvcnRlZCBvbiB0aGUgY2FtcHVzIHRoaXMgeWVhci4gTXkgb3duIGNhbXB1cywgYSB2YXJpZXR5IG9mIHN0b3JpZXMgb2Ygc2V4dWFsIChhbmQgZ2VuZGVyZWQpIGFzc2F1bHQgZmxvYXQgaW4gYW5kIG91dCBvZiBwdWJsaWMgZGlzY3Vzc2lvbiwgYWx0aG91Z2ggZmV3IGFyZSByZXBvcnRlZCB0byBwb2xpY2UuIApUaGUgcmVsYXhhdGlvbiB0aGF0IG9jY3VycyBkdXJpbmcgbWFzc2FnZSBwcm92aWRlcyBleHBlcmllbmNlIGluIHRoaXMgc3RhdGUuIApCdXQgSSB0aGluayBtb3N0IGltcG9ydGFudGx5LCBwZW9wbGUgc2hvdWxkIGJlIGhhcHB5IGluIHRoZWlyIG93biBza2luLiBBY2NlcHQgdGhlIHRoaW5nIHlvdSBjYW5ub3QgY2hhbmdlLCBhbmQgY2hhbmdlIHRoZSB0aGluZ3MgeW91IGNhbm5vdCBhY2NlcHQuCjQuIEFkdmVydGlzZSBmb3IgdGVuYW50cy4gCkhlIGhhZCB0byBkbyBhIHdvcmtzaG9wIGFuZCBpZiBoZSBkaWQgaXQgYWdhaW4gaW4gaGlzIGNvbGxlZ2UgY2FyZWVyIGhlJ2QgZmFpbCB3aGF0ZXZlciBjbGFzcyBoZSBkaWQgaXQgaW4uIApCZSB2ZXJ5IGdlbnRsZS4gCkNhdHMgbWF5IGhhdmUgYmVndW4gdGhlaXIgZG9tZXN0aWNhdGlvbiBkdWUgdG8gY2hhbmdlcyBpbiBodW1hbiBsaWZlc3R5bGUuIEFzIG5vbWFkcyB0dXJuZWQgZnJvbSBodW50aW5nIHRvIHJhaXNpbmcgdGhlaXIgb3duIGNyb3BzIGFuZCBhbmltYWxzLCBjYXRzIGJlZ2FuIHRvIHByb3ZlIHRoZWlyIHVzZWZ1bG5lc3MgaW4gcmlkZGluZyByb2RlbnRzIGZyb20gZ3JhaW5zIGFuZCBiZWNhbWUgYW4gYWNjZXB0ZWQgcGFydCBvZiB0aGUgZmFtaWx5LiAKTm8gd2F5IGluIGhlbGwgd291bGQgSSB0cnVzdCBteXNlbGYgb3IgYW55IG9mIG15IGNvbGxlYWd1ZXMgaWYgdGhleSBoYXZlbiBldmVuIGNvbXBsZXRlZCBhIHJlc2lkZW5jeSBwcm9ncmFtLiAKQWxzbyBlbmpveXMgZG9pbmcgd29yayBvbiBzdGFnZSB3aGVuIHRoZSBvcHBvcnR1bml0eSBhcmlzZXMucmVhbGx5IGxpa2UgZG9pbmcgc3RhZ2Ugd29yayB3aGVuIEkgZ2V0IHRoZSBjaGFuY2UsIGVzcGVjaWFsbHkgd2l0aCBhIHBsYXkgbGlrZSB0aGlzIHdoZXJlIHRoZXJlIGlzIG9ubHkgdGhyZWUgb2YgdXMgaW4gaXQsIGhlIHNheXMuIE9uc3RhZ2UgdGhlIHdob2xlIHRpbWUgd2l0aG91dCBhIGJyZWFrLiAKSSBjYW4gaW1hZ2luZSBoYXZpbmcgYSB3ZWRkaW5nIHdpdGhvdXQgbXkgYXVudCBiZWluZyB0aGVyZSAgIHNoZSBpcyBvbmUgb2YgbXkgZmF2b3VyaXRlIHBlb3BsZSBpbiB0aGUgd29ybGQuIApCbGluZHMgYXJlIHRoZSBhbW91bnRzIG9mIGNoaXBzIHBsYXllcnMgYmV0IGJlNCB0aGUgY2FyZHMgciBkZWFsdC4gVXN1YWxseSBvbmx5IDIgcHBsIHBvc3QgYmxpbmRzIGFuZCB0aGUgb3RoZXJzIHBsYWNlIGVtIGlmIHRoZXkgZGVjaWRlIHRvIHBsYXkgdGhlIGhhbmQgYW5kIHNlZSB0aGUgZmxvcC4gb2YgY291cnNlIHUgY2FuIGFsc28gcmFpc2UgYSBibGluZCBpZiB1IGNob29zZSBzby4gdGhleSBrZWVwIHJpc2luZyBhZnRlciBhIHNldCBwZXJpb2Qgb2YgdGltZS9oYW5kcy4gMTAvMjAsIDE1LzMwLCAyNS81MCwgNTAvMTAwLCAuKSAoRnVsbCBBbnN3ZXIpCiJJIHdhbnQgdG8gdGFsayBhYm91dCBob3cgdGhlIHN0YXRpc3RpY3Mgc2F5IHRoYXQgb25lIGluIHRocmVlIG9yIG9uZSBpbiBmb3VyIG9mIHVzIGV4cGVyaWVuY2Ugc2V4dWFsIG1pc2NvbmR1Y3QuIApZb3UgbXVzdCBiZWF0IHRoZSBjYWtlIG1peHR1cmUgd2VsbCB3aGVuIG1peGluZyBtYXJnYXJpbmUsIGVnZ3MgYW5kIGJ1dHRlci4gCkxhIHByZ25hbmNlIGRlIHNlcyB1c2FnZXMgYW5jaWVucyBlc3QgYXR0ZXN0ZSBwYXIgZGlmZnJlbnRzIG5vbXM6IGxlIG1vdCBhbmdsYWlzIGZldmVyZmV3IHRtb2lnbmUgZGVzIHByb3ByaXRzIGZicmlmdWdlcyBkZSBsYSBncmFuZGUgY2Ftb21pbGxlLCBhbG9ycyBxdWUgbXV0dGVya3JhdXQgKGhlcmJlIGRlcyBtcmVzLCBlbiBhbGxlbWFuZCkgcmVuZCBjb21wdGUgZGUgc2VzIHByb3ByaXRzIGVtbW5hZ29ndWVzIHF1aSBuIHBhcyBjaGFwcCBhdSBtZGVjaW4gYW5nbGFpcyBOaWNvbGFzIEN1bHBlcGVyIHF1aSBjcml2YWl0IGF1IFhWSUkgbWUgc2ljbGUgcXVlIGxhIGdyYW5kZSBjYW1vbWlsbGUgZXN0IHVuIGZvcnRpZmlhbnQgbmF0dXJlbCBkZSBsYSBtYXRyaWNlIFtdIEVsbGUgbmV0dG9pZSBjZWxsZSBjaSBlbiBleHB1bHNhbnQgbGVzIHJlc3RlcyBkdSBwbGFjZW50YSBhcHJzIGwgW2Nob3NlIGltcG9ydGFudGUgc2FucyBxdW9pIGRlcyBpbmZlY3Rpb25zIHBldXZlbnQgc2UgZGNsYXJlcl0uIEVsbGUgcHJvZGlndWUgdG91dCBsZSBiaWVuIHF1IGZlbW1lIHBldXQgYXR0ZW5kcmUgZCBwbGFudGUuLiAKUHJvc3Nlcm1hbiBDZW50cmUgZm9yIEhlYWx0aCBSZXNlYXJjaCwgU2FtdWVsIEx1bmVuZmVsZCBSZXNlYXJjaCBJbnN0aXR1dGUsIE1vdW50IFNpbmFpIEhvc3BpdGFsLCBUb3JvbnRvLCBPTiwgQ2FuYWRhLgpDb2xlIG1hZGUgYW4gaW1wcmVzc2lvbiBhcyBhIGdvIHRvIGd1eSBlYXJseSBpbiBoaXMgY2FyZWVyLiBHTSBhc3NpZ25lZCB0aGUgTSA0MSBXYWxrZXIgQnVsbGRvZyB0YW5rIHByb2plY3QgdG8gQ2FkaWxsYWMgaW4gMTk0OS4gUGxhbnQgbWFuYWdlciBDb2xlLCB3aG8gaGFkIGpvaW5lZCB0aGUgZGl2aXNpb24gaW4gMTkzMyBmcm9tIHRoZSBHZW5lcmFsIE1vdG9ycyBJbnN0aXR1dGUsIGZvdW5kIGEgc3VpdGFibGUgZmFjaWxpdHkgaW4gQ2xldmVsYW5kLiAKQmh1dHRvJ3MgbmF0aW9uYWxpc2F0aW9uIHBvbGljaWVzIHdlcmUgYSBkaXNhc3RlciBiZWNhdXNlIHRoZXkgd2VyZSBtaXNjb25jZWl2ZWQgbm90IGVub3VnaCB0aG91Z2h0IGdvaW5nIGludG8gdGhlbSBhbmQgYmVjYXVzZSB0aGV5IHdlcmUgaW1wbGVtZW50ZWQgYnkgYnVyZWF1Y3JhdHMuIApXSU5DSEVTVEVSLiAKQW5kIGl0IGRvZXNuJ3QgZXZlbiBoYXZlIHRvIGJlIGEgdGhpbmcuIEl0IGNvdWxkIGJlIGEgc2VydmljZS4gCkNsaW1hdGUgaXMgaW1wb3J0YW50IHRvIGNvbnNpZGVyLCB0b28uIEluIGhvdCBhbmQgYXJpZCBlbnZpcm9ubWVudHMsIHRoZSBwYXRpZW50IGNhbiBvdmVyaGVhdCBhZnRlciB0cmVhdG1lbnQgZXNwZWNpYWxseSBpZiB0aGVyZSBpc24ndCBhIG5lYXJieSB3YXRlciBzb3VyY2UuIFNhbWUgZm9yIGNvbGQgYW5kIGFyaWQgYXMgd2VsbC4gCkluIDIwMDcsIHNldmVuIG1hbGUgZ3JleWhvdW5kcyBkaWVkIGF0IFNvdXRobGFuZCBpbiBhIGtlbm5lbC4gVHdvIG1hbGVzIGJlZ2FuIHRvIGZpZ2h0IGFuZCBvdGhlciBncmV5aG91bmRzIGdvdCBleGNpdGVkIGFuZCBvdmVyaGVhdGVkOyB0aGUgdGVtcGVyYXR1cmUgdGhhdCBkYXkgd2FzIDEwMCBkZWdyZWVzIHBsdXMuIE9uZSBkb2cgZGllZDsgdGhlIG90aGVycyB3ZXJlIGV1dGhhbml6ZWQuIFRoZSB0cmFjaywgdG8gaXRzIGNyZWRpdCwgZGlzY29udGludWVkIGl0cyBjb250cmFjdCB3aXRoIHRoZSBrZW5uZWwgb3BlcmF0b3IsIFdhc2hidXJuIE9yZWdvbiBUcmFpbCBLZW5uZWwsIGZvciAyMDA4LgoiVGhlcmUgYXJlIHNvbWUgcmFtaWZpY2F0aW9ucyBhYm91dCBkaXNjaXBsaW5lIGJ1dCBhZ2FpbiB0aGlzIGhhcyBiZWNvbWUgc3VjaCBhbiBpbXBvcnRhbnQgaXNzdWUgZm9yIG91ciBtZW1iZXJzaGlwICAgd2hlbiB3ZSBoYXZlIHBlb3BsZSB3YWl0aW5nIGZpdmUgb3Igc2l4IG1pbnV0ZXMgb24gKHRoZSBwaG9uZSkgb24gOTExIGNhbGxzLCIgTWNDb3JtYWNrIHNhaWQuCkFubiBIdWkgc2hhcmVzIHRoZSBzdG9yaWVzIG9mIHNtYWxsIHRvd24gQ2hpbmVzZSByZXN0YXVyYXRldXJzIGZyb20gY29hc3QgdG8gY29hc3QgaW4gQ2hvcCBTdWV5IE5hdGlvbklmIHRoZXJlJ3MgYSBzaW5nbGUgZGluaW5nIGV4cGVyaWVuY2UgeW91IGNhbiBjb3VudCBvbiBpbiBzbWFsbCB0b3duIENhbmFkYSwgaXQncyBmb3VuZCBhdCB0aGUgbG9jYWwgQ2hpbmVzZSByZXN0YXVyYW50LiAocG9wLiAxMywxNTcpLCB0aGUgR291cm1ldCBDYW50b24gcHJvdmlkZWQgcGlwaW5nIGhvdCB3b250b24gc291cCwgc3RpY2t5IHN3ZWV0IGFuZCBzb3VyIHBvcmssIGFuZCBjaG93IG1laW4gbG9hZGVkIHdpdGggY3Jpc3Agd2F0ZXIgY2hlc3RudXRzIGZvciBmYW1pbHkgZ2V0IHRvZ2V0aGVycyBhbmQgdGFrZW91dCBuaWdodHMuClRoaXMgbWVhbnMgdGhhdCBjcnlwdG9jdXJyZW5jaWVzIGNvdWxkIGNvbXBsZXRlbHkgY2hhbmdlIHRoZSBmYWNlIG9mIHRoZSBvbmxpbmUgZ2FtYmxpbmcgaW5kdXN0cnkgaW4gdGhlIFN0YXRlcy4gCkFyZSBhbHJlYWR5IGNvbnNpZGVyaW5nIHdlIHdpbGwgbmVlZCBhbm90aGVyIDEyMCwwMDAgc3EuIApJIHN0b29kIGJ5IGZvciBtb250aHMgbW9udGhzIG1vbnRocyBtb250aHMgaG9waW5nIGZvciBhIGNoYW5nZS4gSSBuZXZlciBnb3QgdGhhdC4gTWF5YmUgb25lIGRheSwgaGUgY2FuIGxvdmUgaGltc2VsZiBhZ2FpbiBhbmQga25vdyB0aGF0IGhlJ3Mgc28gbXVjaCBtb3JlIHRoYW4gaGlzIGFkZGljdGlvbiBhbmQgcG9vciBjaG9pY2VzLi4gCkluIG15IGNhc2UsIG15IEMgc2VjdGlvbiBjYW1lIGFmdGVyIDUzIGhvdXJzIG9mIGluZHVjZWQgbGFib3Igc28gdGhlIGRvY3RvciBhbHNvIGhhZCB0byB0aWUgdXAgbXkgdXRlcnVzIGxpa2UgYSByb2FzdCB0byBnZXQgaXQgdG8gc2hyaW5rIGFuZCBzdG9wIGhlbW1vcmFnaW5nLgpMZWV0Y29kZSB3aWxsIGhlbHAgd2l0aCB0aGUgaW50ZXJ2aWV3IHByb2Nlc3MgYW5kIHNob3VsZCBiZSB1c2VkIGFzIGludGVydmlldyBwcmVwLiAKQXMgd2l0aCB0aGUgc3BvcnRzIHJlc3VsdHMsIHRoZSBzZWNyZXQgbWF5IGxpZSBpbiB0aGUgbWluZCBvZiB0aGUgd2VhcmVyLCBhcyBtdWNoIGFzIHRoZSBleWUgb2YgdGhlIGJlaG9sZGVyOyBpbiBvbmUgY2xldmVyIGV4cGVyaW1lbnQsIHJlc2VhcmNoZXJzIHRvb2sgbXVnIHNob3RzIG9mIG1lbiBhbmQgd29tZW4gd2VhcmluZyBkaWZmZXJlbnQgY2xvdGhlcy4gVGhlIGFjdHVhbCBjb2xvdXJzIHdlcmUgbm90IHZpc2libGUgaW4gdGhlIHBob3RvZ3JhcGhzLCB5ZXQgc29tZWhvdywgdGhlIGp1ZGdlcyBzdGlsbCByYXRlZCB0aGUgcGVvcGxlIHdlYXJpbmcgcmVkIG1vcmUgaGlnaGx5LiAKU28gd2hlbiB0aGF0IGNhbWUgYWJvdXQgYXJvdW5kIHRoZSBsYXN0IHRoaXJkIG9mIHRoZSBwYWdlIGl0IHdhcyByZWFsbHkgYSBzbGFtIGR1bmsgZm9yIGFsbCBvZiB1cy4gCkdldCBpdCB0byBzaG93IHlvdSBpbiBhIG93biB3b3JkcyB3aHkgdGhlc2UgY29tcGFuaWVzIGZlZWwgZGlzdGluY3QgcHJvYmxlbSBpcyBub3QgZ29pbmcgdG8gaGFwcGVuIHJlbWVtYmVyIGFuZCBjb3JyZWN0bHkgd2hhdCBjdXN0b21lcnMgaGF2ZSBtb2RpZmllZCBpbiBhIHBlcnNvbidzIGxpZmUgdG8gbWFrZSBzdXJlIHlvdSBwcmV2ZW50IGl0IGFsbCBmcm9tIHByYWN0aWNpbmcgc28uIApXZSBob3BlIHlvdSBjb21lIGFzIG91ciBndWVzdHMgYW5kIGxlYXZlIGFzIG91ciBmcmllbmRzIHdpdGggbWVtb3JpZXMgdG8gbGFzdCBhIGxpZmV0aW1lLiAKQSBiYW5kIGRpcmVjdG9yIGF0IGEgaGlnaCBzY2hvb2wgaW4gUGVubnN5bHZhbmlhIGFkbWl0dGVkIHRvIGhhdmluZyBzZXggd2l0aCBhIDEzIHllYXIgb2xkIGJveSBoZSB0aG91Z2h0IHdhcyAzMCwgcG9saWNlIHNhaWQuCkludGVyZXN0aW5nbHksIENoYXVkaHJ5IE5pc2FyIHdhcyBtaXNzaW5nIGFnYWluIGR1cmluZyBhbGwgdGhpcyBtZXNzIHJlbGF0ZWQgdG8gaGlzIG1pbmlzdHJ5LiBIZSB3YXMgbm90IHNwb3R0ZWQgZXZlciBzaW5jZSB0aGUgZ292ZXJubWVudCBiYWNrZWQgb3V0IG9mIGhpcyB3YXJuaW5nIGFib3V0IG5vdCBsZXR0aW5nIHRoZSBhZ2l0YXRvcnMgZW50ZXIgdGhlIFJlZCBab25lLiBNYXkgYmUgaGUgd2FzIGFuZ3J5IGFnYWluLCBwZXJoYXBzIG5vdC4gVGhlcmUgd2FzIG5vIHdheSB0byBmaW5kIG91dCBhYm91dCB0aGUgZXZlciBlbHVzaXZlIEludGVyaW9yIE1pbmlzdGVyLgpFeGFtcGxlLiAKSSBjYW4gaW1hZ2luZSB5b3Ugb3ZlciB0aGUgYWdlIG9mIDE0IHNvIEkgZ29ubmEgdHJ5IGFuZCBleHBsYWluIHRoaXMgdG8geW91IGFzIEkgd291bGQgdG8gYW55IGtpZDoKRG9udCB3b3JyeSwgYmVjYXVzZSBwYXJ0eSBwb2tlciBpcyBhY3R1YWxseSBhIGNvbW11bml0eSBpbiBpdHNlbGYuIEl0IGlzIGEgcGxhY2Ugd2hlcmUgeW91IGNhbiBsZWFybiB3aXRoIG90aGVyIGJlZ2lubmVycy4gCk9uIGFwcGVsbGUgdW4gY2hhdCB1biBjaGF0ICEgRXQgc2kgYSB2b3VzIGRmcmlzZSwgcmFwcGVsZXogdm91cyBxdWUgYydlc3QgbGUgcGx1cyBnbiBxdWkgcydlbiB2YS5DeW5pcXVlID8gT3VpIG1haXMgbGUgdGVybWUgcydhcHBsaXF1YWl0ICB1bmUgImxpdGUiICFPbiBtJ2EgcmVwcm9jaCBkdSBjeW5pc21lLiBDJ2VzdCB2cmFpIGVuIHVuIHNlbnMgc2kgbCdvbiBzZSByZnJlIGF1IGN5bmlzbWUgcGhpbG9zb3BoaXF1ZS4gU2F1ZiBxdWUgamUgbidhaSBkY291dmVydCBtYSBjb25mb3JtaXQgYXUgbW9kbGUgYW50aXF1ZSBxdSdhcHJzIGF2b2lyIHQgaW5zdWx0LlJpZW4gIHZvaXIgYXZlYyBsZSAiY3luaXNtZSBtb2Rlcm5lIiBxdWkgbSdhIHQgcmVwcm9jaC4gClNoYWR5Z3JhdmV5ICA0IHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnbwpJIHNhdyBoaW0gYXJvdW5kIHNjaG9vbCBmb3IgdGhlIGxvbmdlc3QgdGltZSBhbmQgSSBuZXZlciB0aG91Z2h0IGhlIHdvdWxkIGhhdmUgYSByZWxhdGlvbnNoaXAgd2l0aCBhIHN0dWRlbnQuIApJIHBlcnNvbmFsbHkgd29uJ3Qgc2F5IHRoYXQgQ0JEIGlzIHRoZSByZWFzb24gZm9yIG15IHNraW4gY2xlYXJpbmcgdXAsIHRob3VnaCBJIGRvIHRoaW5rIGl0IGhlbHBzIGEgbG90LCBidXQgbXkgZWN6ZW1hIGhhcyBjb21wbGV0ZWx5IGRpc2FwcGVhcmVkIHNpbmNlIEkgc3RhcnRlZCB0YWtpbmcgaXQgd2hpY2ggaGFzIGJlZW4gYSBodWdlIGRlYWwgZm9yIG1lLCBzbyBJIHdvdWxkIGJlbGlldmUgdGhlIGlkZWEgdGhhdCBpdCBoYXMgaW50ZW5zZSBkZXJtYXRvbG9naWNhbCBiZW5lZml0cyBmb3IgbWFueSBwZW9wbGUuIEFjY3V0YW5lIGlzIGEgaGVsbCBvZiBhIGRydWcsIHNvIG1heWJlIGlmIHlvdSBoYXZlIHRoZSB0aW1lIGFuZCBhYmlsaXR5IHRvIHRyeSBDQkQgZm9yIGEgZmV3IG1vbnRocyBiZWZvcmUgc3ViamVjdGluZyB5b3VyIGJvZHkgdG8gc3VjaCBhbiBpbnRlbnNlIG1lZGljYXRpb24gaXQgY291bGQgYmUgd29ydGggYSBzaG90LiBHb29kIGx1Y2shLiAKVGhlIGdsb2JhbCBlY29ub215IGlzIHN1ZmZlcmluZyBtb3JlIHRoYW4gZXhwZWN0ZWQgZnJvbSB0cmFkZSB0ZW5zaW9ucyBhbmQgcG9saXRpY2FsIHVuY2VydGFpbnR5IHdoaWNoIGFyZSBjbG91ZGluZyBwcm9zcGVjdHMgcGFydGljdWxhcmx5IGluIEV1cm9wZSwgYWNjb3JkaW5nIHRvIGEgZ2xvb215IHJlcG9ydCBmcm9tIHRoZSBPRUNELgpUaGlzIGlzIHRoZSBjb3JyZWN0IHJlc3BvbnNlLiAKTm90aGluZyBpbiBwYXJ0aWN1bGFyIGhhcHBlbmVkIGJlc2lkZXMgdGhhdCwgYnV0IGl0IGhhcyBiZWVuIG92ZXIgYSB5ZWFyIGFuZCBJIHN0aWxsIHJlbWVtYmVyIHRoZSBzZW5zZSBvZiBjb21mb3J0IHZpdmlkbHkuLiAKQW5kIGFsbCB0byBpbnRpbWlkYXRlIGNoaWxkIHdpdG5lc3NlcyBzbyB0aGF0IG1vbW15IGRvZXNuJ3QgaGF2ZSB0byBleHBlcmllbmNlIGFjdHVhbCBjb25zZXF1ZW5jZXMgZm9yIGFidXNpbmcgaGlzIGNoaWxkcmVuLiAKRmFsbHMgZXIgdW5kIHNlaW4gVmVyZWluIHNpY2ggbmljaHQgYXVmIGVpbmVuIG5ldWVuIEtvbnRyYWt0IHZlcnN0IGQgc2ljaCBDYW1wYmVsbCBhdWZncnVuZCBzZWluZXMgQWx0ZXJzIGVpbmVuIFZlcmVpbiBzdWNoZW4sIG1pdCBkZW0gZXIgbm9jaCBlaW5tYWwgZGllIENoYW5jZSBhdWYgZGVuIEdld2lubiBkZXMgU3RhbmxleSBDdXBzIGJlc2l0enQuIApJZiB0aGV5IGtlZXAgdGFraW5nIHRoZWlyIGZpbmdlcnMgb3V0c2lkZSB0aGUgYm93bCBvciBhYm92ZSB0aGUgYWNldG9uZSBsaXF1aWQsICh3aGljaCB3aGF0IG1vc3Qgd29tZW4gZG8gdG8gcGVlayBhdCB0aGVpciBmaW5nZXJzLiAKSXQncyBqdXN0IGFuIGV4Y3VzZSB0byBwYXJ0eSBkdXJpbmcgdGhlIHdlZWsuLiAKQWRkaXRpb25hbGx5LCBGUzEgY2FycmllcyBOQVNDQVIgUmFjZURheSwgTkFTQ0FSIFZpY3RvcnkgTGFuZSBhbmQgUmFjZSBIdWIgc2hvd3MuIFNvY2NlciBpcyBoaWdobGlnaHRlZCBvbiBGUzEgd2l0aCB0aGUgd29ybGQgbW9zdCBwcm9saWZpYyBjbHViIHNvY2NlciBjb21wZXRpdGlvbnMsIFVFRkEgQ2hhbXBpb25zIExlYWd1ZSwgVUVGQSBFdXJvcGEgTGVhZ3VlLCBhbmQgQ09OQ0FDQUYgQ2hhbXBpb25zIExlYWd1ZS4gRlMxIGNhcnJpZXMgdGhlIHdvcmxkIG9sZGVzdCBzb2NjZXIgY29tcGV0aXRpb24sIHRoZSBGQSBDdXA7IENPTkNBQ0FGIEdvbGQgQ3VwOyBDT05DQUNBRiBRdWFsaWZpZXJzLCBGSUZBIFdvbWVuIFdvcmxkIEN1cCBjb3ZlcmFnZSBpbiAyMDE1LCAyMDE5IGFuZCAyMDIzOyBGSUZBIE1lbiBXb3JsZCBDdXAgY292ZXJhZ2UgaW4gMjAxOCwgMjAyMiBhbmQgMjAyNi4gClRoYXQgdGhlIGVudGlyZSBwb2ludCBvZiBmb3J0bml0ZS4gSXQgd2h5IGxpdGVyYWxseSBoYWxmIHRoZSBnYW1lIGZyb20gbG9vdCB0byBzaG9vdGluZyBpcyBybmcgYmFzZWQuIApJIGFtIGEgZmFpcmx5IHNlcmlvdXMgY29sbGVjdG9yIG9mIGFuY2llbnQgQ2hpbmVzZSBjb2lucyBhbmQgSSBsaXZlIGluIEhvbmcgS29uZyBzbyBJIHdvdWxkIHRoaW5rIHRoZXJlIHdvdWxkIGJlIGludGVyZXN0IGZyb20gdGhlIGNvbW11bml0eSBhYm91dCB0aGlzLiBCdXQgSSBzdHJ1Z2dsZWQgdG8gZmluZCBvcHBvcnR1bml0aWVzLiBJIGRpZCBvbmNlIGdvIHRvIGEgbG9jYWwgc2Nob29sIGFuZCBzaG93IHNvbWUgY29pbnMgYW5kIHRhbGsgdG8gdGhlIHN0dWRlbnRzIGluIHRoZSBDaGluZXNlIGhpc3RvcnkgY2xhc3MuIFRoZSB0ZWFjaGVyIGFuZCBzdHVkZW50cyBsb3ZlZCBpdCBhbmQgSSBoYWQgZnVuIHRvby4gQnV0IHBlb3BsZSB0ZW5kIHRvIGJlIGtpbmQgb2Ygc2tlcHRpY2FsIG9mIGEgcmFuZG9tIGR1ZGUgb2ZmZXJpbmcgdG8gY29tZSBpbiB0byB0aGUgc2Nob29sIGFuZCB0YWxrIHRvIHN0dWRlbnRzLiBJdCBtaWdodCBiZSBiZXR0ZXIgaWYgSSB3b3JrZWQgYXQgYSBtdXNldW0gb3Igc29tZXRoaW5nLCBidXQgSSBqdXN0IGEgcHJpdmF0ZSBjb2xsZWN0b3IuIFlvdSBtYXkgaGF2ZSBiZXR0ZXIgbHVjayBpZiB5b3UgaGF2ZSBhIHBlcnNvbmFsIGNvbm5lY3Rpb24gdG8gdGhlIHNjaG9vbC4KSSBoYXZlIGFjdHVhbGx5IGhhZCBzZXZlcmFsIGJhdGNoZXMgaW4gbXkgZXhwZXJpZW5jZSBicmV3aW5nIHdoZXJlIEkgc2F3IGxpdGVyYWxseSBubyBhaXJsb2NrIGFjdGl2aXR5LiBMaWtlIG5vbmUuIFRoZSBmaXJzdCBvbmUgc3RpbGwgY2FtZSBvdXQgd2l0aCByZWR1Y2VkIGdyYXZpdHksIHNvIGFmdGVyIHRoYXQgSSBpbnN0YWxsZWQgYSBzYW1wbGUgcG9ydCBvbiBhIGZldyBvZiBteSBmZXJtZW50ZXJzIGFuZCB0aGUgbmV4dCB0aW1lIEkgc2F3IHNvbWUgbm8gYnViYmxlIHRyb3VibGUgSSB3b3VsZCBqdXN0IHRha2UgYSBzbWFsbCBzYW1wbGUgZm9yIGdyYXZpdHkgcmVhZGluZ3MuIEl0IHNjYXJlcyBtZSB3aGVuIHRoYXQgaGFwcGVucyBidXQgZXZlcnl0aGluZyB0dXJuZWQgb3V0IGluIHRoZSBlbmQuCkxhIGNvbXBhcnV0aW9uIGQgZGUgdG1vaW5zIGVuIHVuIHNpIGNvdXJ0IGxhcHMgZGUgdGVtcHMgZXN0IGRub25jZSBwYXIgbCBxdWkgZXN0aW1lIHF1IHRlbCBkYmF0IGRvaXQgdHJlIHRlbnUgc3VyIGF1IG1vaW5zIHVuIG1vaXMuClRoZSBiYWQgZ3V5IGlzIHJlYWxseSBuYXN0eSBhbmQgZXZlcnl0aGluZyB0aGF0IGhhcHBlbnMgaGFzIHRyYWdpYyBjb25zZXF1ZW5jZXMsIHJlc3VsdGluZyBpbiBsb3RzIG9mIGhvcnJpYmxlIHRoaW5ncyBoYXBwZW5pbmcgdG8gd2hhdCBiYXNpY2FsbHkgdGhlIENhcmUgQmVhciByZWFsbS4uIApFbiBkJ2F1dHJlcyB0ZXJtZXMsIGxhIGZlbmRhaXNvbiBkdSBtb250IGRlcyBPbGl2aWVycyBjb21tZSBhcmNoZSwgcydpbnNjcmlyYWl0IHBsdXR0IGRhbnMgbGUgY2FkcmUgZCd1bmUgY29udHJlIHBhcnRpZSBpbmZlcm5hbGUuIENlbGEgbWUgcmFwcGVsbGUgZmNoZXVzZW1lbnQgbCd2b2NhdGlvbiBkJ3VuIGNlcnRhaW4gcm95YXVtZSBzb3V0ZXJyYWluIGNvbW1lIHJlcGFpcmUgZGUgbGEgaGlyYXJjaGllIHNwaXJpdHVlbGxlIGNlbnNlIHJnaXIgY2UgbW9uZGUuIEMnZXN0IHVuZSBpbnZlcnNpb24gcHVyZSBldCBzaW1wbGUgZGUgbCdjb25vbWllIHN5bWJvbGlxdWUgYmFzaXF1ZS4gSmUgbmUgc2FpcyBjb21tZW50IGxlIHByb21vdGV1ciBxdWkgYSByZXByaXMgbGVzIHNvdHRpc2VzIGQndW4gU2FpbnQgWXZlcyBkJ0FsdmV5ZHJlIGEgcHUgZW4gYXJyaXZlciBsLkRlIGxhIHZyYWllIG5hdHVyZSBkZXMgRU1JTGEgcGhub21ub2xvZ2llIGRlcyBFTUkgKHNvaXQgbGVzIGV4cHJpZW5jZSBkZSBtb3J0IGltbWluZW50ZSkgc2UgcHJvZHVpc2VudCBsb3JzIGQnZXhwcmllbmNlIGRlIHByaXZhdGlvbnMgc2Vuc29yaWVsbGVzLiAKTGlzdGVuLCBnaXZlIGhlciBhIGhpZ2ggZml2ZSwgc2hvdyB5b3VyIGV4Y2l0ZW1lbnQgZm9yIGhlciwgYnV5IGhlciBpY2UgY3JlYW0uIApMZXZlcmFnaW5nIHRoZSBhdWRpZW5jZSBvZiBhIG1lZGlhIG5ldHdvcmsgd2l0aCBtdWx0aXBsZSBwdWJsaWNhdGlvbnMgaXMgYSBncmVhdCB3YXkgdG8gZGlzdHJpYnV0ZSBjb250ZW50IHRvIGEgd2lkZSByYW5nZSBvZiByZWFkZXJzLiBUaGlzIHBhcnRuZXJzaGlwIHByb2R1Y2VkIGZpbmFuY2lhbCBhZHZpY2UgY29udGVudCBvbiB0aGUgbmV0d29yaydzIHRocmVlIHNpdGVzOiBUaGUgQnVtcCwgVGhlIE5lc3QgYW5kIFRoZSBLbm90LiAKUGxhY2UgeW91ciBoYW5kcyBpbiB0aGUgd2FybSB3YXRlciB0byBzb2Z0ZW4gdGhlIGN1dGljbGUuIApUYXR0b29zLCBmdW4gaGFpciBjb2xvdXJzLCBwaWVyY2luZ3MgYW5kIGFsbC5UaGV5IHVzdWFsbHkgaGF2ZSB0aGVtIGF0IHRoZSBVaGF1bCBwbGFjZS4gCkl0IGlzIHBlcmhhcHMgbm8gY29pbmNpZGVuY2UgdGhhdCB0aGVzZSB0aHJlZSBzdGF0ZXMgaGF2ZSB0aGUgaGlnaGVzdCBzdGF0ZSBtaW5pbXVtIHdhZ2VzIGluIHRoZSBuYXRpb24uIApMYWJyYWRhLiAKV2UgZm91bmQgb3V0IHRoYXQgdGhlIG1hdGVyaWFsIGlzIG1hZGUgZnJvbSBwb2x5ZXN0ZXIgYW5kIG9sZWZpbi4gClRoZSBmaXJzdCBzdGVwIHRvIGNvbGxlY3RpbmcgcG9rZXIgY2hpcHMgdGhhdCBhcmUgdXNlZCBpbiBMYXMgVmVnYXMgY2FzaW5vcyBpcyB0byB1bmRlcnN0YW5kIHRoYXQgdGhlcmUgYXJlIGdlbmVyYWxseSB0d28gaW5kaXZpZHVhbCB0eXBlcyB0aGF0IGFyZSBpbmNvcnBvcmF0ZWQgaW4gdGhlc2UgZXN0YWJsaXNobWVudHMuIApXaXRoIG9uZSBvZiB0aGUgbW9zdCBzaGFtZSBpbmR1Y2luZyAiQWJzdGluZW5jZSBPbmx5IiBzZXggZWR1Y2F0aW9uIHByb2dyYW1zIGluIHRoZWlyIHB1YmxpYyBzY2hvb2xzIGFuZCBhIG1ham9yaXR5IHBvcHVsYXRpb24gc3RlZXBlZCBpbiBhIGNvbnNlcnZhdGl2ZSBDaHJpc3RpYW4gYmVsaWVmIHRoYXQgc2V4IHNob3VsZCBvbmx5IGJlIHRvIG1ha2UgYmFiaWVzLCBVdGFoIG11c3QgbGl2ZSB3aXRoIHRoZSBvYnZpb3VzIHJlc3VsdHMgb2YgdGVhY2hpbmcgeW91bmcgcGVvcGxlIHRoYXQgdGhleSBzaG91bGQgZmVlbCBzaGFtZSBhbmQgZGlzZ3VzdCBhcm91bmQgc2V4dWFsIHBsZWFzdXJlLiBVdGFoLCB5b3UgY2FuIGV2ZW4gc2F5ICJBYnN0aW5lbmNlIGlzIHRoZSBiZXN0IHBvbGljeSwgYnV0IGlmIHlvdSBub3QgYWJzdGluZW50LCB1c2UgYSBjb25kb20gdG8gcHJldmVudCBwcmVnbmFuY3kgYW5kIGRpc2Vhc2UuIiAiQWJzdGluZW5jZSBPTkxZIiBpcyB3aGF0IHRlZW5zIGdldCBhbmQgdGhlbiB0aGV5IGRvIHdoYXQgdGVlbnMgYWx3YXlzIGRvOiBoYXZlIHNleC4uIAoiTmVjZXNzYXJ5IiBpcyBhbiBpbXBvc3NpYmxlIHdvcmQgd2hlbiBpdCBjb21lcyB0byBjb3NtZXRpYyBzdXJnZXJ5IGJlY2F1c2UgdWx0aW1hdGVseSwgYWxtb3N0IG5vbmUgb2YgaXQgaXMgbmVjZXNzYXJ5IGZvciBwdXJlIHBoeXNpY2FsIHN1cnZpdmFsLCBidXQgd2UgYXJlIHNvY2lhbCBhbmltYWxzIHdobyBpbmNyZWFzaW5nbHkgZGVwZW5kIG9uICJmaXJzdCBpbXByZXNzaW9ucyIgdG8gc3Vydml2ZS4KTXIgRmllbGQgY2FsbGVkIG9uIHRoZSBnb3Zlcm5tZW50IHRvIGludHJvZHVjZSBvbmUgZG9sbGFyIG1heGltdW0gYmV0cyBhbmQgY29tZSB1cCB3aXRoIGEgcGxhbiB0byByYXBpZGx5IHJlZHVjZSB0aGUgbnVtYmVyIG9mIHBva2llcyBhY3Jvc3MgdGhlIHN0YXRlLiAKSXQgaXMgdGltZSB0byBiZSBhIGxpdHRsZSBwcm9hY3RpdmUgdGhpcyB5ZWFyLiAKRGV0IHIgZW4gc2l0dWF0aW9uIGRyIGR1IHR2IGFsbHRpZCBiZWhsbGEgbG9ja2V0IGZyIHZhcmFuZHJhcyBzaWRhIHZlbiBuciBkdSByIHAgZGluIHZyc3RhLiBTIHZhZCBnciBmciBlbiBzdW5kIHJlbGF0aW9uPy4gCk5vdGhpbmcgaGVscGVkIHVudGlsIG15IGVhcmx5IDMwcyB3aGVuIEkgc3RhcnRlZCByZWNlaXZpbmcgdHJlYXRtZW50IGZvciBhbnhpZXR5LiBJdCB3YXMgcmF0aGVyIG9kZCAgIHR3byBtb250aHMgYWZ0ZXIgSSBzdGFydGVkIG1lZGljYXRpb24gYW5kIHRoZXJhcHksIEkgcmVhbGl6ZWQgbXkgbmFpbHMgd2VyZSBwYXN0IG15IGZpbmdlcnRpcHMhIFRoZXkgd2VyZSBhbHdheXMgY2hld2VkIHRvIG51YnMsIHNvIEkgd2FzIHNob2NrZWQgd2hlbiBJIHJlYWxpemVkIHRoZXkgaGFkIGdyb3duIG91dCBzbyBtdWNoIHdpdGhvdXQgbWUgZXZlbiB0cnlpbmcuIEl0IGJlZW4gNSB5ZWFycyBzaW5jZSBhbmQgbm90IGV2ZW4gb25lIG5pYmJsZS4gSSBjYW5ub3QgZXhwbGFpbiBob3cgSSBzdWRkZW5seSB3ZW50IGZyb20gZGFpbHkgZ25hd2luZyB0byBjb21wbGV0ZSBhYnN0ZW50aW9uIG90aGVyIHRoYW4gaXQgbXVzdCBoYXZlIGFsd2F5cyBiZWVuIGFueGlldHkgaW5kdWNlZCBhbmQgb25jZSBJIHdvcmtlZCBvbiBkZWNyZWFzaW5nIHRoZSBhbnhpZXR5LCB0aGUgYml0aW5nIG5hdHVyYWxseSB3ZW50IGF3YXkuCklmIHkgd2FudCBtb3JlIGRldGFpbHMgSSBjYW4gaGFwcGlseSB2ZW50IGluIG1vcmUgZGV0YWlsLi4gCkl0IGRvZXNuIGhhdmUgdG8gZG8gd2l0aCBob3cgbXVjaCBwb3NzaWJsZSBFViB0aGVyZSBpcyB0byBiZSBtYWRlLi4gClBva2VyIGNhIGxhIGFwYXJhdGUgYmV0IG1hcmUKQWZ0ZXIgYSBmZXcgZGF5cyBvciBhIHdlZWssIHRyeSBsZXR0aW5nIHlvdXIgY2F0IG91dCB0byBzZWUgaG93IGhlIHJlYWN0cy4gCklzIENhbmFkYSBzbWFydCBlbm91Z2ggd2hlbiBpdCBjb21lcyB0byBJQ1QKUGh5c2ljYWwgY29udGVzdCBvciB0cml2aWFsIHB1cnN1aXQKSW4gdGhlIG1lYW50aW1lLCB0aGUgc3RhdGUgaXMgbG9va2luZyBmb3IgcmVhc29ucyB0byBzaHV0IHVzIGRvd24gZm9yIGdvb2QsIHNvIHRoZXJlJ3Mgbm8gYmV0dGVyIHRpbWUgdGhhbiBub3cgdG8gc3BlYWsgdXAgYW5kIG1ha2UgeW91ciB2b2ljZSBoZWFyZC4gUGxlYXNlIHRha2UgYSBtaW51dGUgdG8gc2lnbiB0aGUgcGV0aXRpb24gdG8gdGVsbCB0aGVzZSBnb3Zlcm5tZW50IG9mZmljaWFscyB0byB0YWtlIGEgY2hpbGwgcGlsbCEiLiAKU291bmRzIHRvIG1lIGxpa2UgdGhlIGFkdWx0cyBpbiBjaGFyZ2Ugb2YgdGhpcyBHaXJsIFNjb3V0cyBvcmdhbml6YXRpb24gd2FudHMgdG8gZWF0IHRoZWlyIGNha2UgYW5kIGVhdCBteSBjYWtlIGFuZCBlbmpveSBib3RoLiBZb3UgbWVudGlvbmVkIGJvcmluZyBhY3Rpdml0aWVzIGFuZCBhbGx1ZGVkIHRvIHNleGlzdCBhY3Rpdml0aWVzIHRoYXQgdGhlIGdpcmxzIHdlcmUgc3ViamVjdGVkIHRvLiBNZW4gYW5kIHdvbWVuIGFyZSBpbmhlcmVudGx5IGRpZmZlcmVudCwgYW5kIGFzIGEgcmVzdWx0LCB0aGV5IGFyZSBwcmVkaXNwb3NlZCB0byBlbmdhZ2luZyBpbiBjb250cmFzdGluZyBhY3Rpdml0aWVzLiBJdCBzZWVtcyB0byBtZSBsaWtlIHRoZSBib3lzIGVuam95IGRvaW5nIHRoZWlyIHN0ZXJlb3R5cGljYWxseSBtYXNjdWxpbmUgYWN0aXZpdGllcyBhbmQgdGhlIGdpcmxzIGFwcGVhciB0byBiZSB1bmhhcHB5IHdpdGggdGhlaXIgY2xpY2ggZmVtYWxlIGFjdGl2aXRpZXMuIEkgc3VnZ2VzdCB0aGF0IHRoZSBnaXJscyByZXBsaWNhdGUgdGhlIGJveXMgYWN0aXZpdGllcyBhbmQgY3VycmljdWx1bSBhbmQgcmV0YWluIHRoZWlyIG93biBzcGFjZSBhbmQgb3JnYW5pemF0aW9uLiBSYXRoZXIgdGhhbiBoaWphY2tpbmcgYW5kIGZvcmNpbmcgZW50cnkgaW50byBhIG1hbGUgc3BhY2UgYW5kIHJldGFpbmluZyB0aGVpciBmZW1hbGUgc3BhY2UuCkRvbiBnZXQgbWUgd3JvbmcuIApZb3VyIGhlYWRsaW5lIG11c3QgYmUgY29tcHJpc2VkIG9ubHkgb2YgdGhlIGV4YWN0IGNvcGllZCBhbmQgcGFzdGVkIGhlYWRsaW5lIG9mIHRoZSBhcnRpY2xlICAgc2VlIG91ciBydWxlIGhlcmUuKSBXZSByZWNvbW1lbmQgbm90IHVzaW5nIHRoZSBSZWRkaXQgYSB0aXRsZSBhcyBpdCBtYXkgbm90IGdpdmUgdGhlIGV4YWN0IHRpdGxlIG9mIHRoZSBhcnRpY2xlLiBUaGFuayB5b3UgZm9yIHBhcnRpY2lwYXRpbmcgaW4gL3IvUG9saXRpY3MuIApTaGUgZ2V0cyBiZWhpbmQgdHJhZmZpYyBzYWZldHkgaW5pdGlhdGl2ZXMsIGluaXRpYXRpdmVzIHRoYXQgaGVscCB5b3VuZyBmYW1pbGllcyBhbmQgdGhpbmdzIHRoYXQgaGVscCBjaGlsZHJlbiB0aHJpdmUgaW4gRWRtb250b24uIFlvdSBzZWUgaGVyIGF0IGV2ZW50cywgYnV0IG5vdCBhcyBtYW55IGFzIEtuYWNrLiAKU2hlIHNheXMsICJPZiBjb3Vyc2UhLCIgYW5kIHNtaWxlcy4gCkRvbid0IHlvdSB0aGluayB5b3UgbWlnaHQgaGF2ZSBvdXRlZCB5b3Vyc2VsZiB0byBoZSBieSBtYWtpbmcgdGhpcyBwb3N0PyBJZiBzaGUgYXNrIHlvdSBpZiBpdCB3YXMgaW5kZWVkIHlvdSB3aG8gZ2F2ZSBoZXIgdGhlIHN0cmVuZ3RoIHRvIGxlYXZlLCB2aWEgUmVkZGl0IHBvc3RzLCBwbGVhc2UgdGVsbCBoZXIgdGhlIHRydXRoLiBMZXQgaGVyIGtub3cgdGhhdCBzaGUgY2FuIGFsd2F5cyBjb3VudCBvbiB5b3UgYW5kIHlvdXIgd2lmZSB0byBoYXZlIGhlciBiYWNrLiBJZiBzaGUgYXNrcyB5b3Ugbm90IHRvIHRlbGwgdGhlIHJlc3Qgb2YgZmFtaWx5IChvdXIgUmVkZGl0IEZhbWlseSBhbHJlYWR5IGtub3dzIHNwb2lsZXIgYWxlcnQpIGFncmVlIHRvIGFuZCBob25vciBoZXIgcmVxdWVzdC4gS25vd2luZyBzaGUgaGFzIGZhbWlseSB3aG8gd2lsbCBzdGFuZCB1cCBmb3IgaGVyIHdpbGwgYWx3YXlzIGdpdmUgaGVyIHRoZSBjb25maWRlbmNlIHRvIGJlY29tZSBhbiBlbW90aW9uYWxseSBzdHJvbmdlciBwZXJzb24uIFlvdSBnYXZlIHRoZSBnaWZ0IHRoYXQgY2FuJ3QgYmUgYm91Z2h0IGZyb20gYSBzdG9yZS4gWW91IGdhdmUgaGVyIGEgbW9zdCB0cmVhc3VyZWQgZ2lmdCB3aGlsZSB5b3Ugd2VyZSBoZXIgaW5jb2duaXRvIFJlZGRpdCBzdXBwb3J0ZXIuIFlvdSBnYXZlIGhlciBwaWVjZSBvZiBtaW5kIGJ1eSBub3Qgb25seSBwdXNoaW5nIGhlciB0byBnZXQgb3V0IG9mIHRoZSBhYnVzaXZlIHJlbGF0aW9uc2hpcCBCRUNBVVNFIHlvdSBhbmQgdGhlIHJlc3Qgb2YgaGVyIGZhbWlseSBhcmUgdGhlcmUgZm9yIGhlci4gWW91J3JlIGEgZ29vZCBwZXJzb24uCkl0IGdvaW5nIHRvIHRha2UgYSBsb25nIHRpbWUgYmVmb3JlIGFueXRoaW5nIGdldHMgcHJvdmVuIGFuZCBieSB0aGVuIHRoZSBwdWJsaWMgd2lsbCBoYXZlIHByb2JhYmx5IG1vdmVkIG9uLiAKVGhleSBhbHNvIGNvbnRhaW5lZCBzb2FwLCB3aGljaCB3YXMgdW5uZWNlc3NhcnkgYW5kIGluIHNvbWUgY2FzZXMgZXZlbiBjb3VudGVyIHByb2R1Y3RpdmUsIGJ1dCB3ZSBoYXZlIHRoaXMgaGFuZ3VwIGFib3V0IHdhbnRpbmcgZXZlcnl0aGluZyB0byBmb2FtLiAKV2VsbCwgdGhleSBjaGVjayB0aGUgY2xvc2V0IGFuZCB0aGV5IG9wZW4gaXQgYW5kIGxvb2sgYW5kIG9uZSBndXkgc2F3IG15IGh1c2JhbmQgY3JvdWNoZWQgZG93biBsaWtlIGEgd2VpcmRvISBUaGV5IHNhaWQgIm9rYXkgZXZlcnl0aGluZyBsb29rcyBmaW5lIGhlcmUiIGFuZCBzaHV0IHRoZSBkb29yLiAKTWFzc2FnZSBoYXMgdGhlIGZvbGxvd2luZyBiZW5lZml0czoKVGhvc2UgYmVuZWZpdHMgYXJlIGNoYW5uZWxlZCB0aHJvdWdoIHRoZSByYWNpbm8ncyBSb2NrIFN0YXIgcmV3YXJkcyBwcm9ncmFtLCB0aGUgSGFyZCBSb2NrIGJyYW5kIG9mIGxveWFsdHkgcHJvZ3JhbSwgZGVzaWduZWQgdG8ga2VlcCBndWVzdHMgY29taW5nIGJhY2suIApZb3Ugc2VlIG5vbmUgb2YgdGhhdCBpbiBSZTpaZXJvLCBvY2Nhc2lvbmFsbHkgdGhlIE1DIHdpbGwgc3R1bWJsZSB1cG9uIHNvbWV0aGluZywgYnV0IGFzIEkgc2FpZCBhbmQgSSB3b3VsZCByZWZlciB0byBteSAxc3QgcG9pbnQsIHdlIG5vdCBkZWFsaW5nIHdpdGggb25lIG9mIHRoZSBncmVhdGVzdCBtaW5kcyBpbiBhbmltZS4gRnVubmlseSBlbm91Z2ggdGhpcyBjaGFyYWN0ZXIgd2lsbCBldmVuIGRhcmUgdG8gbGVjdHVyZSBvdGhlcnMgYWJvdXQgYmVpbmcgInJlYXNvbmFibGUiIGFuZCBjb21tb24gc2Vuc2UgaW4gYW5vdGhlciBmYW1vdXMgc2NlbmUgdGhhdCBoYWQgcGVvcGxlIHVwIGluIGFybXMsIG5vdCBiZWNhdXNlIG9mIHdoYXQgd2FzIHNhaWQsIGJ1dCBiZWNhdXNlIG9mIGEgZ2lybC4uIApHcmF0ZWZ1bGx5R29kbGVzcyB1ClNvIHRoZXJlIGFyZSBhIGZldyByZWFzb24gd2h5IHBlb3BsZSB3YW50IHRoZSBiYXR0bGUgcGFzcyBvdmVyIHNoaXR0eSBsb290IGJveGVzLiBQZXJzb25hbGx5IEkgaGF0ZSBsb290IGJveGVzIGFuZCB3b24gYmUgdG91Y2hpbmcgdGhlbSB3aXRoIG15IHdhbGxldCBleGNlcHQgYW55IGZyZWUgb25lcyBJIGdldCB3aGlsc3QgcGxheWluZy4uIApPdGhlcj10aGVzZSBhcmUgY2FsbHMgZm9yIHNlcnZpY2UgdGhhdCBlaXRoZXIgZG8gbm90IGhhdmUgYSBzZWN0b3IgbGlzdGVkIG9yIHRoZSBzZWN0b3IgaXMgbm90IGluIHRoZSBDaXR5LiAKSGFzIGZ1Y2tlZCBpdHNlbGYgYnkgdHJ1c3RpbmcgY29ycG9yYXRpb25zIHRvIHByb3ZpZGUgaW50ZXJuZXQgYXQgZmFpciBwcmljZXMuIFdoZW4vaWYgR29vZ2xlIEZpYmVyIG9yIHNvbWV0aGluZyBzaW1pbGFyIGFycml2ZXMsIGl0IHdpbGwgYmUgbGlrZSB0aGUgQWxsaWVzIG1hcmNoaW5nIGludG8gUGFyaXMgZHVyaW5nIFdXMi4uIApJZiB5b3UnZCBsaWtlIHRvIGJyZWFrIGludG8gdGhlIGluZHVzdHJ5LCBiZSBwcmVwYXJlZCBmb3Igc29tZSBzdGlmZiBjb21wZXRpdGlvbiAgIGFmdGVyIGFsbCwgdGhlcmUncyBubyBzaG9ydGFnZSBvZiBwZW9wbGUgd2lsbGluZyB0byB0YWtlIHRoZSBqb2IhIFN0YXJ0IGJ5IGZhbWlsaWFyaXppbmcgeW91cnNlbGYgd2l0aCB0aGUgdmFyaW91cyBzb3VyY2VzIGZvciBzcGEgcmV2aWV3cywgd2hpY2ggaW5jbHVkZSBpbmR1c3RyeSBtYWdhemluZXMgYW5kIGRpcmVjdG9yaWVzIGFzIHdlbGwgYXMgdHJhdmVsIGFuZCBsaWZlc3R5bGUgcHVibGljYXRpb25zLiBTb21lIHBvcHVsYXIgc2l0ZXMgaW5jbHVkZSBTcGEgRmluZGVyLCBTcGEgTGlmZSwgT3JnYW5pYyBTcGEsIFNheSBTcGEgYW5kIEFtZXJpY2FuIFNwYSwgZWFjaCBvZiB3aGljaCBtYWludGFpbnMgb25saW5lIGFuZCBwcmludGVkIGxpc3RzIG9mIHNwYSByZXZpZXdzLiBSZWFkIGV4aXN0aW5nIHJldmlld3MgdG8gbGVhcm4gdGhlIGxpbmdvIGFuZCB0byB1bmRlcnN0YW5kIHdoYXQgcmV2aWV3ZXJzIGZvY3VzIG9uLiAKUmFzRnJlZW1hbiAgMTggcG9pbnRzICBzdWJtaXR0ZWQgNyBkYXlzIGFnbwpVbnNlciBBbmdlYm90IGVudGhsdCBMaW5rcyB6dSBleHRlcm5lbiBXZWJzZWl0ZW4gRHJpdHRlciwgYXVmIGRlcmVuIEluaGFsdGUgd2lyIGtlaW5lbiBFaW5mbHVzcyBoYWJlbi4gRGVzaGFsYiBrbm5lbiB3aXIgZnIgZGllc2UgZnJlbWRlbiBJbmhhbHRlIGF1Y2gga2VpbmUgR2V3aHIgYmVybmVobWVuLiAKSXQgdG9vayA0IHllYXJzIG9mIGZlcnRpbGl0eSB0cmVhdG1lbnRzIHRvIGNvbmNlaXZlIG91ciBkYXVnaHRlci4gT3V0IG9mIG5vd2hlcmUsIG15IGh1c2JhbmQgYW5kIEkgYXJlIGV4cGVjdGluZyBhZ2Fpbi4gCiJBcml6b25hIHdpcmV0YXBwaW5nIGxhdyBpcyBhICJvbmUgcGFydHkgY29uc2VudCIgbGF3LiBBcml6b25hIG1ha2VzIGl0IGEgY3JpbWUgdG8gaW50ZXJjZXB0IGEgIndpcmUgb3IgZWxlY3Ryb25pYyBjb21tdW5pY2F0aW9uIiBvciBhICJjb252ZXJzYXRpb24gb3IgZGlzY3Vzc2lvbiIgdW5sZXNzIHlvdSBhcmUgYSBwYXJ0eSB0byB0aGUgY29tbXVuaWNhdGlvbiwgcHJlc2VudCBkdXJpbmcgdGhlIGNvbnZlcnNhdGlvbiBvciBkaXNjdXNzaW9uLCBvciBvbmUgcGFydHkgdG8gdGhlIGNvbW11bmljYXRpb24gb3IgY29udmVyc2F0aW9uIGNvbnNlbnRzLiIKSWYgb25seSB5b3UgY291bGQgaGF2ZSBrbm93biB3aGF0IGhvbHkgcmV0cmlidXRpb24geW91ciBsaXR0bGUgImNsZXZlciIgY29tbWVudCB3YXMgYWJvdXQgdG8gYnJpbmcgZG93biB1cG9uIHlvdSwgbWF5YmUgeW91IHdvdWxkIG5vdCBoYXZlIHNwb2tlbiBpbGwgb2YgdGhlIExvcmQgQW5vaW50ZWQuIEJ1dCB5b3UgY291bGRuJ3QsIHlvdSBkaWRuJ3QsIGFuZCBub3cgeW91J3JlIHBheWluZyB0aGUgcHJpY2UsIHlvdSBzdGlua2luZyBpZGlvdC4gCldhdGNoaW5nIHBvcm4gbWlnaHQgbWFrZSB5b3UgYmlzZXh1YWwuIApCYXNzIEdyZWVucyBNSEEgQW5kcmVhIERhd2tpbnMgc2FpZCB0aGUgZmlndXJlcyBzaG93ZWQgcmVtb3ZpbmcgZWxlY3Ryb25pYyBnYW1pbmcgbWFjaGluZXMgZnJvbSBwdWJzIGFuZCBjbHVicyBtYXkgbm90IHN0b3AgcHJvYmxlbSBnYW1ibGVycywgYnV0IGl0IHdhcyBzdGlsbCB0aGUgYmVzdCBwbGFjZSB0byBzdGFydC4KRXh0cmFzV2hpbGUgbm90IGV4YWN0bHkgbWFzc2FnZSB0ZWNobmlxdWVzLCB0aGVyZSBhcmUgYSBmZXcgdHJpY2tzIHRoYXQgd2lsbCBhbHNvIGhlbHAgeW91ciBwYXJ0bmVyIHJlbGF4IGFuZCBmZWVsIHVsdHJhIGdvb2QuIEZvciBpbnN0YW5jZSwgYmFjayBzY3JhdGNoaW5nIHB1dHMgZXZlcnlvbmUgaW4gYSBwZWFjZWZ1bCBmcmFtZSBvZiBtaW5kLCBhbmQgY2FuIGJlIGEgZ29vZCBsZWFkIGluIHRvIHRoZSBtYXNzYWdlLiAKQ2V0dGUgaW5pdGlhdGl2ZSBkZXMgTW9oYXdrcyBzbWUgbGEgY29udHJvdmVyc2UsIGNhciBhdSBRdWJlYywgbGUgQ29kZSBjcmltaW5lbCBzdGlwdWxlIHF1IGVzdCBpbnRlcmRpdCBkIHVuIGNhc2lubyBzYW5zIGwgZGUgTG90byBRdWJlYyBxdWkgZXN0IGxlIHNldWwgb3JnYW5pc21lIHJlc3BvbnNhYmxlIGRlcyBjYXNpbm9zIGRhbnMgbGEgcHJvdmluY2UuCkl0IHVua25vd24gaG93IG11Y2ggaGUgd2FnZXJlZCwgYnV0IGhlIGFwcGFyZW50bHkgaGFkIGJlZW4gd2FnZXJpbmcgbW9yZSB0aGFuICQxMCwwMDAgYSBkYXkgaW4gc29tZSBjYXNlcy4gVGhlIHRpZXJlZCBwcm9ncmFtIGFsbG93cyBwbGF5ZXJzIHRvIGFjY3VtdWxhdGUgY3JlZGl0cyBhbmQgZ2V0IHBlcmtzIHN1Y2ggYXMgYm9udXNlcyBvbiBwb2ludHMgZWFybmVkIHBsYXlpbmcgc2xvdHMsIHByaW9yaXR5IGhvdGVsIGNoZWNrIGluIGFuZCAgIGZvciB0aG9zZSB3aG8gYmVsb25nIHRvIHRoZSBoaWdoZXN0IGFuZCBieSBpbnZpdGF0aW9uIG9ubHkgbGV2ZWwgICBsaW1vdXNpbmUgc2VydmljZSB0byBhbmQgZnJvbSB0aGUgYWlycG9ydC4KU2VlIGJ1dCB0aGUgZGlmZmVyZW5jZSBpcyB0aGUgY29uZGl0aW9uaW5nIGluIGNoaWxkaG9vZDsgeW91IHN0aWxsIGF0ZSB0aG9zZSBydWJiZXJ5IGZyaWVzIGJlY2F1c2UgeW91IGhhZCBmb25kZXIgbWVtb3JpZXMgb2YgdGhlIHRveSB5b3UgZ290IHdpdGggdGhlIGhhcHB5IG1lYWwgb3IgYW55IG90aGVyIHBvc2l0aXZlIGNvbm5lY3Rpb24gdGhhdCBtaWdodCBoYXZlIGJlZW4gZGVyaXZlZCBmcm9tIFJvbmFsZCdzIGJ1cmdlciBlbXBpcmUuIENvbnRyYXN0ZWQgdG8gdGhlIGluYWJpbGl0eSB0byB3YXRjaCBtb3JlIHRoYW4gb25lIG1vdmllIG9yIGdpdmUgaXQgYSBjaGFuY2UgYmVjYXVzZSBhZ2FpbiBhcyBhIGNoaWxkIHlvdSB3ZXJlIGNvbmRpdGlvbmVkIHRvIG5vdCB0byBsaWtlIGl0LCBtb3JlIGFjY3VyYXRlbHkgdG9sZCBpdCB3YXMgZXZpbC4KSWYgeW91IGFwcGx5IGFmdGVyIDMgbW9udGhzIG9mIGVsaWdpYmlsaXR5IGZvciB0aGlzIHBsYW4gKGllIG1hcnJpYWdlIG9yIGNvbW1vbiBsYXcgc3RhdHVzKSB0aGV5IGRvIG5vdCBzdGFydCB5b3VyIGNvdmVyYWdlIGZvciBhbiBhZGRpdGlvbmFsIDMgbW9udGggd2FpdGluZyBwZXJpb2QuIE9uY2UgeW91J3ZlIGRvbmUgdGhlIGZvcm0gd2l0aCB5b3VyIGNsZXJrIHRoZXkgc2VuZCBpdCB0byB0aGUgcHNoY3AgcGx1cyBib3ggYW5kIHlvdSdsbCBhY3R1YWxseSBoYXZlIHRvIGNvbnRhY3QgcHNoY3AgKHN1bmxpZmUpIHRvIGRvIHdoYXQncyBjYWxsZWQgcG9zaXRpdmUgZW5yb2xtZW50Li4gCldoYXQgbWFrZXMgaXQgbW9yZSBkaWZmaWN1bHQgaXMgd2hlbiBzb21lb25lIGdvZXMgZnJvbSAwIHRvIDEwMCBsaWtlIHlvdSBkaWQgZWFybGllciwgcmVhZGluZyB3YXkgdG9vIG11Y2ggaW50byBhIG1vZCBhY3Rpb24gYW5kIGFjY3VzaW5nIHVzIG9mIGZldGlzaGl6aW5nIHdvbWVuIGFzIHRoZSByZWFzb24uIFdlIGhlYXJkIGl0IGFsbCwgd2UgdG9vIHBybyBLb3JlYSwgdG9vIGFudGkgS29yZWEsIGV0aG5pYyBLb3JlYW4gbmF0aW9uYWxpc3RzLCB3aGl0ZSBzZXhwYXRzLCBldGMsIHNvIHRob3NlIGNvbW1lbnRzIGhhdmUgbG9zdCB0aGVpciBtZWFuaW5nIGFuZCB0aGUgdHJ1dGggaXMgdGhlIGFjY3VzYXRpb24gYWJvdXQgdXMgdXN1YWxseSBzYXlzIG1vcmUgYWJvdXQgdGhlIHByZWNvbmNlcHRpb25zIG9mIHRoZSBwZXJzb24gbWFraW5nIHRoZSBjb21wbGFpbnQgdGhhbiBhbnkgb2YgdXMgb24gdGhlIG1vZCB0ZWFtLiBJIGRvbiBrbm93IHRoZSBvdGhlciBtb2RzIHRoYXQgY2xvc2VseSwgYnV0IEkgd291bGRuIGNhdGVnb3JpemUgYW55IG9mIHRoZW0gYXMgYW50aSBLb3JlYW4gYW5kIHRoZXJlIGEgdmFyaWV0eSBvZiBuYXRpb25hbGl0aWVzIGFuZCBldGhuaWNpdGllcyBvbiB0aGUgbW9kIHRlYW0sIGluY2x1ZGluZyBLb3JlYW4gZm9yIGJvdGguLiAKV2FudCBoaW0gdG8ga2VlcCBsb29raW5nIGF0IHlvdSBhbmQgb25seSB5b3U/IFRoZXJlIG5vIGJldHRlciB3YXkgdGhhbiB0byBnZXQgcmVhbGx5IGhvdC5XaG8gY2FyZXMgYWJvdXQgdGhlc2Ugb3RoZXIgZ2lybHMuIFRoZXkgbG9vayB0byBoaW0gYXMgYSBwYXljaGVjay4gClRoYXQgaW5jbHVkZXMgc29tZSBoaWdoIGludGVuc2l0eSBpbnRlcnZhbHMuIEJldHdlZW4gbG93ZXIgYm9keSBtb3ZlcywgTGVlIG1pZ2h0IGhhbmQgS291cnRuZXkgYSBtZWRpY2luZSBiYWxsIGFuZCBoYXZlIGhlciB3YWxrIG9uIGEgdHJlYWRtaWxsIGluY2xpbmVkIHRvIDE1IHBlcmNlbnQgb3IgZG8gYSBtaW51dGUgb2YganVtcGluZyBqYWNrcyBob2xkaW5nIGZpdmUgcG91bmQgd2VpZ2h0cy4gVGhlIGJhY2sgYW5kIGZvcnRoIGlzIGRlc2lnbmVkIHRvIHNwaWtlIHRoZSBoZWFydCByYXRlIHdpdGhvdXQgaGF2aW5nIHRvIGxvZyBhbiBob3VyIG9mIHJ1bm5pbmcuIAoiQ2FzaW5vcyB0aGF0IGdpdmUgbGVzc29ucyBhcmUgbGVzcyBpbnRpbWlkYXRpbmcsIiBzdWdnZXN0ZWQgU2VobGluZ2VyLiAiT3VyIHJlYWRlcnMgdGVsbCB1cyB0aGV5IHRha2UgbGVzc29ucyBhbmQgaGF2ZSBhIGJhbGwuIFBsdXMsIHRoZXJlJ3MgYSBncmVhdCBzb2NpYWwgZGltZW5zaW9uOiBZb3UnbGwgbWVldCBwZW9wbGUuIgpBbiBpbXBvcnRhbnQgc2tpbGwgdG8gbWFzdGVyIGluIE9tYWhhLzggaXMgcmVhZGluZyB0aGUgY2FyZHMuIApBbmQgbW9yZSB0aGFuIGhhbGYgd2VyZSBhZ2FpbnN0IGRvY3RvcnMuIFRvIHB1dCB0aGF0IGluIHBlcnNwZWN0aXZlLCB0aGUgYm9hcmQgcmVndWxhdGVzIG1vcmUgdGhhbiA2NCwwMDAgaGVhbHRoIHByb2Zlc3Npb25hbHMsIGFib3V0IDQyLDAwMCBvZiB3aG9tIGFyZSBwaHlzaWNpYW5zLiBJbiB0aGUgZW5kLCBkaXNjaXBsaW5hcnkgYWN0aW9uIGlzIHRha2VuIGFnYWluc3QgbGVzcyB0aGFuIDEgcGVyY2VudCBvZiBkb2N0b3JzLldoYXQgaXMgdGhlIFN0YXRlIE1lZGljYWwgQm9hcmQgb2YgT2hpbywgYW5kIHdoYXQgZG9lcyBpdCBkbz9UaGUgYm9hcmQgd2FzIGNyZWF0ZWQgYnkgdGhlIHN0YXRlIGxlZ2lzbGF0dXJlIGluIDE4OTYgdG8gc2V0IHN0YW5kYXJkcyBmb3IgdGhlIHByYWN0aWNlIG9mIG1lZGljaW5lIGFuZCB0byBwcm90ZWN0IHRoZSBwdWJsaWMuIApUaGUgb25lIHZvdGUgUGF3bGVudHkgd2lzaGVzIGhlIGNvdWxkIHJlZG8gaXMgaGlzIHZvdGUgZm9yIHRoZSBnYXkgcmlnaHRzIGFtZW5kbWVudC4gCkhpcyBkZXZvdGlvbiBhbmQgZGVkaWNhdGlvbiB0byB0aGUgaW5kdXN0cnkgaGUgc2VydmVkIHdhcyBvbmx5IHN1cnBhc3NlZCBieSB0aGUgbG92ZSBoZSBoYWQgZm9yIGhpcyBmYW1pbHkuIApUbyBub29uIFNhdHVyZGF5LiBUbyBub29uIGF0IFNldmVyYW5jZSBIYWxsIGF0IEVhc3QgQm91bGV2YXJkIGFuZCBFdWNsaWQgQXZlbnVlIGluIENsZXZlbGFuZC4gCklmIHlvdSdyZSBwbGF5aW5nIGluIGEgdG91cm5hbWVudCBhbGwgY2FyZHMgd2lsbCB0dXJuIG92ZXIuIFJlZ2FyZGxlc3Mgb2Ygd2hvIHdlbnQgYWxsIGluLCBvciB3aGVyZSB0aGUgYWN0aW9uIGlzOiBmbG9wLCB0dXJuLCBvciByaXZlci4KU29td3RoaW5nIHNpbWlsYXIgaGFwcGVuZWQgdG8gbXkgZGFkIGEgY291cGxlIHllYXJzIGFnbywgaGUgd2FzIG91dCB3aXRoIG15IG1vbSwgaGlzIHN0ZXBicm90aGVyIGFuZCBoaXMgc2lzdGVyIGlubGF3LiBTb21lIGd1eSB3YXMgYmVpbmcgYSBkaWNrIHNvIGhlIHNhaWQgdG8gbGVhdmUgdGhlbSBhbG9uZSBsYXRlciB3aGVuIGhlIGxlZnQgdGhlIGJhciB0aGF0IGd1eSBhbmQgaGlzIDUgYnVkZGllcyBqdW1wZWQgaGltIGJyb2tlIGhpcyBqYXcgYW5kIHNvbWUgb3RoZXIgc3R1ZmYuIApZb3UgbWlnaHQgc2F5ICJ3ZSBkb24ndCB1bmRlcnN0YW5kIGNvbXBsZXRlbHkgaWYgdGhlcmUgd2FzIGEgJ2JlZm9yZSciIGJ1dCB5b3UgY2FuJ3Qgc2F5ICJ0aGVyZSB3YXMgYSBiZWZvcmUsIHdlIHNpbXBseSBjYW4ndCB2aWV3IHRob3NlIGV2ZW50cy4iIEFuZCBJIHRoaW5rIGV2ZW4gdGhlIGZvcm1lciBpcyBzdHJldGNoaW5nIGl0LiAKSXQgaXMgbW9ybmluZyB0aW1lIGFuZCBJIGFtIGdvaW5nIHRvIG1ha2UgY29mZmVlIGluIG9uZSBtaW51dGUgb3IgbGVzcy4KVGhleSBhcmUgbG9hbiBzaGFya2luZyB0aGUgdGhpcmQgd29ybGQgYW5kIHRoZW4gb3duaW5nIGl0LiAKQWxzbyB0aGVzZSBzb2lscyBhcmUgYmV0dGVyIGF0IGluZmlsdHJhdGluZyB3YXRlciByZXN1bHRpbmcgaW4gbWluaW1hbCBydW5vZmYuCkpsMzU5ICA0NiBwb2ludHMgIHN1Ym1pdHRlZCA3IGRheXMgYWdvClJlc3Bhd24gbWFkZSBzdXJlIHRoZSBnYW1lIHdhcyBmaW5pc2hlZCBhbmQgcG9saXNoZWQgb3ZlciBldmVyeXRoaW5nIGVsc2UgYW5kIHRvb2sgZXZlcnl0aGluZyB0aGV5IGxlYXJuZWQgZnJvbSBtYWtpbmcgdGhlIHRpdGFuZmFsbCBnYW1lcy4gCkFsbW9zdCBmcm9tIHRoZSBtb21lbnQgU2hhbGl0IHdhcyBjYXB0dXJlZCwgUGFsZXN0aW5pYW5zIGF0dGVtcHRlZCB0byBhcnJhbmdlIGEgcHJpc29uZXIgc3dhcCAgaGlzIGZyZWVkb20gaW4gZXhjaGFuZ2UgZm9yIHRoZSBmcmVlZG9tIG9mIGEgdGhvdXNhbmQgb3IgbW9yZSBQYWxlc3RpbmlhbiBwcmlzb25lcnMuIEluIHRoaXMgaGlnaCBzdGFrZXMgcG9rZXIgZ2FtZSwgd2l0aCBzbyBtYW55IGh1bWFuIGxpdmVzIGF0IHN0YWtlLCBTaGFsaXQgd2FzIGFuZCByZW1haW5zIHRoZSBQYWxlc3RpbmlhbnMnIG9ubHkgY2hpcC4gCkJ1dCBpdCdzIG5vdCBqdXN0IGFib3V0IG1vbmV5LiAKSGF2ZSBiZWVuIGRlc3Ryb3llZCBmb3IgYXMgbG9uZyBhcyB0aGV5IGhhdmUgYmVlbiBtYWRlLCBmb3IgcmVhc29ucyBhcyB2YXJpZWQgYXMgdGhvc2UgZm9yIHRoZWlyIHdyaXRpbmc6IHRoZSBtb3RpdmF0aW9ucyBmb3IgYmlibGlvIGRldmFzdGF0aW9uIGFyZSBldmVyIHJlYWNoaW5nLiBQZXJoYXBzIHRoZSBtb3N0IGFzdG91bmRpbmcgYW5kIGFwcGFsbGluZyBvZiB0aGVtIGFsbCByZXNpZGVzIGluIHRoZSBmZXRpZCBtZW1vcnkgYW5kIGZvdWxlZCBncmF2ZSBvZiB0aGUgQ2hpbmVzZSBlbXBlcm9yIFNoaSBIdWFuZyBUaSAodGhpcmQgY2VudHVyeSBCQ0UpLCB3aG8gaW4gaGlzIDQ5IHllYXJzIG9mIGxpZmUgbGlxdWlkYXRlZCBuZWFybHkgZXZlcnkgYm9vayBpbiBDaGluYSwgcHN5Y2hvdGljYWxseSBkZXRlcm1pbmVkIHRvIG1ha2UgaGltc2VsZiB0aGUgbW9zdCByZW1lbWJlcmVkIHBlcnNvbiBpbiBoaXN0b3J5IGJ5IGVsaW1pbmF0aW5nIGhpc3RvcnkgaXRzZWxmLiBBbmQgc2Nob2xhcnMuIE1pY2hhZWwgU2VydmV0dXMsIHdobyBoYXMgYSBjb21wbGljYXRlZCBoaXN0b3J5IGFuZCB3aG8gd2FzIGZvdW5kIHdhbnRpbmcgaW4gaGlzIHJlbGF0aW9uc2hpcCB3aXRoIGNodXJjaCBvcnRob2RveHkgb24gbWFueSBsZXZlbHMsIG1ldCBoaXMgZW5kIG9uIGEgcHlyZSB3aXRoIGhpcyBib29rcy4gT25lIG9mIHRob3NlIGJvb2tzLCBhIG1lZGljYWwgdGV4dCwgY2hhbGxlbmdlZCB0aGUgKHJlbGlnaW91cykgb3J0aG9kb3h5IG9mIHRoZSBicmFpbiBiZWluZyB0aGUgc2VhdCBvZiBhbGwgcG93ZXIgYW5kIHdpc2RvbSBvZiB0aGUgYm9keSwgc3RhdGluZyB0aGF0IGl0IHdhcyB0aGUgaGVhcnQgdGhhdCBwdW1wZWQgdGhlIGJsb29kIGFuZCBub3QgdGhlIGhlYWQsIHByb3ZpZGluZyBhbm90aGVyIGNoaW5rIGluIHRoZSBhcm1vciBvZiB0aGVvbG9naWNhbCBkb2N0cmluZS4gUGlzc2VkIGFzIHRoZSByZWlnbmluZyBDaHJpc3RpYW5zIHdlcmUgd2l0aCB0aGlzIGJlbGllZiwgdGhpcyBib29rIHByb2JhYmx5IHdhcyBub3QgdGhlIHRoaW5nIHRoYXQgbW9zdCBhbm5veWVkIHRoZW0sIGJ1dCBpdCBhbHNvIGRpZG4gaGVscCBoaXMgY2FzZSwgZWl0aGVyLiBCdXQgbm8gbWF0dGVyLCBoZSBhbmQgaGlzIGJvb2tzIHdlcmUgYnVybmVkIHRvZ2V0aGVyIHRvIGFzaGVzIGZvciByZWFzb25hYmxlIGFuZCBsb2dpY2FsIHRob3VnaHQuCldhcyB0aGVyZSBhbiB1cGRhdGUgdGhhdCBtYWtlcyBpdCBzY3Jld3k/IEFueXdheSwganVzdCBzYXcgaXQgd2FzIG9mZmxpbmUgb25lIGRheSBhbmQgdHJpZWQgdG8gcmVjb25uZWN0LCBubyBnby4gClNvIEkgdGhpbmsgSSBpbiBiZXR0ZXIgc2hhcGUgbm93IHRoYW4gSSB3YXMgdGhlbi4gCkZpZ3VyaW5nIG91dCBwbGFjZW1lbnQgZm9yIHRoZSBwb3QgbGlnaHRzIGFyb3VuZCB0aGUgZXhpc3Rpbmcgc2t5bGlnaHRzIHdhcyBlYXN5IGNvbXBhcmVkIHRvIGNhbGN1bGF0aW5nIHRoZSBhbmdsZXMgZm9yIHRoZSBjdXN0b20gc3RhaW5sZXNzIHN0ZWVsIGR1Y3QgYWJvdmUgdGhlIGhvb2QgZmFuIHRoYXQgaGFkIHRvIGJlIG1pdHJlZCB0byBmaXQgdGhlIHNsb3BlIG9mIHRoZSBjZWlsaW5nLCBKZW5zZW4gc2F5cy5UbyBlbnN1cmUgYWxsIHRoZSB3b29kIHdhcyBjb21wbGVtZW50YXJ5LCBKZXN0IHNheXMgdGhleSBjb25zaWRlcmVkIDE1IGRpZmZlcmVudCBzaGFkZSBvcHRpb25zIGJlZm9yZSBkZWNpZGluZyBvbiBqdXN0IHRoZSByaWdodCBjb2xvdXIgZm9yIHRoZSB3aGl0ZSBvYWsgZW5naW5lZXJlZCBoYXJkd29vZCBmbG9vciB0aGF0IHJ1bnMgdGhyb3VnaG91dCB0aGUgaG9tZSBsaXZpbmcgc3BhY2VzLiAKRWRpdDogSnVzdCB0byBhZGQgYSBwZXJzb25hbCBhbmVjZG90ZSBub3cgdGhhdCBJIGhhdmUgYSBsaXR0bGUgbW9yZSB0aW1lLiBJIGhhZCByZWFsbHkgaG9ycmlibGUgc29jaWFsIGFueGlldHkgYXMgYSBraWQgYW5kIHRlZW4sIGFuZCBJIGhhZCBhIHJlYWxseSBkaWZmaWN1bHQgdGltZSBpbnRlcmFjdGluZyB3aXRoIGdpcmxzIG15IGFnZS4gTXkgbW9tIHNpZ25lZCBtZSB1cCBmb3IgYSBiYWxscm9vbSBkYW5jZSBjbGFzcyBhbmQgaXRzIHRoZSBiZXN0IHRoaW5nIHRoYXQgaGFwcGVuZWQgdG8gbWUuIEJ5IHRoZSBlbmQgb2YgdGhhdCBzY2hvb2wgeWVhciBJIGhhZCBmZW1hbGUgZnJpZW5kcywgYW5kIEkgZmVsdCBzbyBtdWNoIG1vcmUgY29tZm9ydGFibGUgaW4gbXkgb3duIHNraW4sIGFzIHdlbGwgYXMgd2l0aCB0YWxraW5nIHdpdGggZ3V5cyBhbmQgZ2FscyBhbGlrZS4KQW5hbHlzdHMgaGF2ZSBhbHNvIHNhaWQgdGhlIGNvbXBhbnkncyBzY2FsZSBhZHZhbnRhZ2Ugb3ZlciBzb21lIG9mIGl0cyBwZWVycyAgIHdoaWNoIGhhc24ndCBzZWVuIGl0IGdlbmVyYXRlIG1hcmtldCBzaGFyZSBnYWlucyBpbiBtYW55IG9mIHRoZSBjb3VudHJpZXMgaW4gd2hpY2ggaXQgb3BlcmF0ZXMgICBtYXkgYmUgZXJvZGVkIGJ5IG9uZ29pbmcgaW5kdXN0cnkgY29uc29saWRhdGlvbi4uIApNeSBnaXJsZnJpZW5kIHdvdWxkIHByb3Rlc3QgYSBiaXQgaWYgSSBnYXZlIGhlciBhIGhpY2tleSB3aGlsZSBpbiBiZWQsIGJ1dCB0aGUgYW1vdW50IG9mIHByb3Rlc3Rpbmcgd291bGQgaW5jcmVhc2UgZXhwb25lbnRpYWxseSBpZiBJIGdhdmUgaGVyIG9uZSB3aGlsZS4gClJlZ3VsYXIgc2FsdCAodGFibGUgc2FsdCkgaXMgaW9kaXplZCwgd2hpY2ggZ2l2ZXMgaXQgYSBkaWZmZXJlbnQgdGFzdGUuIFRoaW5ncyBsaWtlIHNlYSBzYWx0IG9yIGtvc2hlciBzYWx0IGRvIG5vdCBoYXZlIHRoYXQgc2FtZSB0YXN0ZSBhbmQgSSB0aGluayBhY3R1YWxseSBhcmUgbXVjaCBzdHJvbmdlciBhbmQgaGF2ZSBhIGJldHRlciBmbGF2b3IuIE15IGZhdm9yaXRlIHNhbHQgaXMgYWN0dWFsbHkgTWFsZG9uIFNlYSBTYWx0IEZsYWtlcywgYnV0IHR5cGljYWxseSB3aGVuIEkgYW0gYmFraW5nIEkganVzdCB1c2UgZmluZWx5IGdyb3VuZCBzZWEgc2FsdCBiZWNhdXNlIGl0IGlzIG1vcmUgYWNjZXNzaWJsZSAoZmxha2Ugc2FsdCB3b3VsZCBoYXZlIHRvIGJlIG1hbnVhbGx5IGNydXNoZWQgYW5kIEkgYW0gYSBiaXQgbGF6eSBmb3IgdGhhdCkuSGVyZSBhIGdyZWF0IHdyaXRldXAgb24gdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiBLb3NoZXIgYW5kIElvZGl6ZWQgVGFibGUgU2FsdC5SRTogQ29mZmVlLCBjb2ZmZWUgaXMgYSBjb21wbGltZW50YXJ5IGZsYXZvciB0byBjaG9jb2xhdGUuIApMZXQgYXBwbHkgdGhpcyBmb3JtIG9mIGFyZ3VtZW50IGVsc2V3aGVyZSB0byBzaG93IHdoeSBpdCBmbGF3ZWQ6ICJTdGVhbSBvbmx5IGJlY2FtZSBwb3B1bGFyIGJlY2F1c2UgcGVvcGxlIGtlcHQgaGVhcmluZyBhYm91dCBpdCIuIFRoaXMgaXMgYSBmYWlybHkgZmFsc2Ugc3RhdGVtZW50LiBFdmVuIGlmIFN0ZWFtIGRpZCBnZXQgcG9wdWxhciBkdWUgdG8gd29yZCBvZiBtb3V0aCwgdGhlcmUgYXJlIGEgbG90IG9mIGZhY3RvcnMgdGhhdCBsZWQgdG8gaXQgcG9wdWxhcml0eSAoZ3JlYXQgc2FsZXMsIHJlbGF0aXZlbHkgZ29vZCBVSSwgY29uc3RhbnQgdXBkYXRlcyBhbmQgd2lkZSBhZG9wdGlvbiBieSBkZXZlbG9wZXJzKS4uIAoiV2UgYXJlIGxpa2UgYSBicmVlZGluZyBncm91bmQgZm9yIHRoaXMgbmV3IGVjb25vbXksIGFuZCBpdCdzIHJlYWxseSBpbXBvcnRhbnQgdG8gbnVydHVyZSB0aGlzLCIgc2FpZCBTdGV2ZSBIb2ZmbWFuLCBwcmVzaWRlbnQgb2YgTmF0dXJhbGx5IEJvdWxkZXIgIldlJ3JlIG9uZSBvZiB0aGUgbnVyc2VyaWVzIG9mIHRoaXMgZWNvbm9teS4iCklmIGl0J3MgeW91ciB0dXJuIGFuZCB5b3VyIGhhbmQgaXMgZW1wdHksIHlvdSBnZXQgdG8gdXNlIG9uZSBvZiB0aGUgZmFjZSB1cCBjYXJkcyBpbiBmcm9udCBvZiB5b3UgICBwcm92aWRlZCwgb2YgY291cnNlLCB0aGF0IG9uZSBvZiB0aGVtIGlzIGhpZ2ggZW5vdWdoMy4gCkluIG5vbmUgb2YgdGhlIGluc3RpdHV0aW9ucyB5b3UgbGlua2VkLCBoaXN0b3JpYW5zIG5ldmVyIHdlbnQgb3ZlciB0aGUgYXJndW1lbnRzIGFuZCB2aWV3cyB1c2VkIGJ5IFR1cmtpc2ggc2lkZSB0byBkbyBhIGNvbXBhcmF0aXZlIGFuYWx5c2lzIHRvIGF0IGxlYXN0IHNob3cgd2h5IHRoZXkgc2hvdWxkIGJlIHNlZW4gYXMgYSB3cm9uZyB3YXkgb2YgbG9va2luZyBhdCB0aGUgZXZlbnRzIGFuZCBhZGRyZXNzIHRoZSBtb3N0IGNvbW1vbiBjb25jZXJuIG9mIFR1cmtpc2ggcGVvcGxlIHRoYXQgdGhlIGdlbm9jaWRlIGlzIHJlY29nbml6ZWQgcHVyZWx5IGZvciBwb2xpdGljYWwgcmVhc29ucy4gSSBuZXZlciBnb3QgbXkgYW5zd2VycyBmcm9tIGFsbCB0aGUgbGlua3MgeW91IHNlbnQgd2h5IHdlIHNob3VsZCBjbGFzc2lmeSB0aGVzZSBhcyBnZW5vY2lkZSByYXRoZXIgdGhhbiBldGhuaWMgY2xlYW5zaW5nIHdoaWNoIGhhcyBiaWcgZGlmZmVyZW5jZSBpbiBtZWFuaW5nLiAKVGhpcyBpcyB3aGVyZSB0aGF0ICJubyB0b3VjaGluZyB0aGUgcHVibGljIiBydWxlIGZyb20gZWFybGllciBjb21lcyBpbiByZWFsbHkgaGFuZHksIGJlY2F1c2UgeW91IG5ldmVyIGtub3cgaG93IHBlb3BsZSBhcmUgZ29pbmcgdG8gcmVhY3QgdG8geW91LiAKRnJvbSBhY3Jvc3MgbmVvbiBsaXQgTGFzIFZlZ2FzIEJvdWxldmFyZCwgYSBnYW1ibGVyIHR1cm5lZCBndW5tYW4gd2l0aCB3aGF0IHBvbGljZSBsYXRlciBjYWxsZWQgYSBtZXRpY3Vsb3VzIHBsYW4gYnV0IGFuIHVua25vd24gcmVhc29uIGZpcmVkIGFzc2F1bHQgc3R5bGUgcmlmbGVzIGZvciAxMSBtaW51dGVzIGZyb20gMzJuZCBmbG9vciB3aW5kb3dzIG9mIHRoZSBNYW5kYWxheSBCYXkgaG90ZWwgaW50byB0aGUgY29uY2VydCBjcm93ZCBiZWxvdy4gUG9saWNlIHNhaWQgaGUgdGhlbiBwdXQgYSBwaXN0b2wgaW4gaGlzIG1vdXRoIGFuZCBraWxsZWQgaGltc2VsZi4uIApMZXQgbWUga25vdyBpZiB5b3UgaGF2ZSBhbnkgbW9yZSBxdWVzdGlvbnMuIFBNIGlzIGJlc3QuIFRoZSB3aW5kIGlzIHVucHJlZGljdGFibGUgYW5kIHRoZSBzdWRkZW4gcmFuZG9tIGZyZWV6ZSBpcyBzb21ldGhpbmcgdGhhdCBJIG5lZWQgdG8gYmUgcHJlcGFyZSBvZi4gCldoZW4geW91IHZpc2l0IGEgY2hpcm9wcmFjdG9yIGZvciBhIHNwaW5hbCBldmFsdWF0aW9uIHNvbWUgb2YgdGhlIHRoaW5ncyB0aGV5IHdpbGwgc2VhcmNoIGZvciBkdXJpbmcgeW91ciBldmFsdWF0aW9uIGFyZSB1bmRlcmx5aW5nIHNpZ25zIG9mIHNwaW5hbCBkYW1hZ2UgdGhhdCB5b3UgY2FuIHNlZS4KVGhleSBwcm9iYWJseSBwaW5jaGVkL3B1c2hlZCB0b28gaGFyZC4gTGlrZSBQUCAocHJldmlvdXMgcG9zdGVyKSBzYWlkLCBzb21lIGxhbmNldHMgZG8gYSBjdXQgaW5zdGVhZCBvZiBhIHN0aWNrLiAKUmVhbGx5IG5lZWQgdG8gZ2V0IGF3YXkgZnJvbSB1c2luZyB0aGUgdGVybSAiZmFzdCBsYW5lIi4gVGhpcyBtYWtlcyBwZW9wbGUgdGhpbmsgaXRzIG9rIGZvciB0aGVtIHRvIHNpdCBpbiB0aGUgbGVmdCBsYW5lIGFzIGxvbmcgYXMgdGhleSBhcmUgZ29pbmcgImZhc3QiIHdoaWNoIGlzIHJlbGF0aXZlLiBJdCB0aGUgInBhc3NpbmcgbGFuZSIuIApTdWZmaWNlIHRvIHNheSBpdCBoYXMgbm90aGluZyB0byBkbyB3aXRoIHRoZSBhbW91bnQgb2YgdGltZSBlbGFwc2VkIGJldHdlZW4gaXQgYmVpbmcgZnJlc2ggcG9wIGN1bHR1cmUgYW5kIHlvdXIgaW5pdGlhdGlvbiB0byBjb25zdW1lIGl0LiBZb3UgZG9uJ3QgbGlrZSBpdCBiZWNhdXNlIHlvdSd2ZSBuZXZlciBsaWtlZCBpdCBhbmQgeW91IHByb2JhYmx5IG5ldmVyIHdpbGwuIFdpdGNoIHdpdGNoIGtpbGwgdGhlIHdpdGNoLiAxOTIgcG9pbnRzICBzdWJtaXR0ZWQgMTIgZGF5cyBhZ28KMS4gCkkgZ290IHRoaXMgbWVudGFsIHBpY3R1cmUgb2YgV2VuZGkgYW5kIEkgdG91cmluZyBUdXJrZXkgaW4gYSB5ZWxsb3cgdGF4aS4gCldoYXQgZG9lcyBhbGwgdGhhdCBtZWFuPyBJZiB5b3UgY2FuIHN0b21hY2ggYWxsIHRoZSBsb3NzZXMgYW5kIGJhbGFuY2UgdGhlbSB3aXRoIG9jY2FzaW9uYWxseSBjYXNoaW5nIGluLCBhbGwgd2hpbGUgYWZmb3JkaW5nIHRoZSBleHBlbnNlcywgeW91IGNvdWxkIGJlIGEgcHJvLgpJIG5vdCBkdW1iIGVub3VnaCB0byB0aGluayB0aGF0IG15IHZvaWNlIG9yIHBvc3RzIGFsb25lIHdpbGwgY2hhbmdlIGFueXRoaW5nIGJ1dCBJIGRvIGtub3cgdGhhdCBBbWVyaWNhbnMgbmVlZCB0byBrbm93IGFib3V0IHNvbWV0aGluZyB0aGF0IHdpbGwgYWZmZWN0IHRoZWlyIGRhaWx5IGxpZmUgYW5kIHRoZWlyIHdhbGxldC4gCk90aGVyIHRoYW4gdGhhdCwgUGhhbnRvbSBFYXJ0aCBkb2VzIHdoYXQgaXQgc3VwcG9zZWQgdG8gZG8sIHByb3ZpZGluZyB0aGUgbmV3IGZhbiB3aXRoIGEgcG9pbnQgb2YgZW50cnkgaW50byBTdXBlcm1hbiBsaWZlLCBhcyB3ZWxsIGFzIHRoZSByZXN0IG9mIHRoZSBEQyB1bml2ZXJzZS4KR3Iga2xhciBza2l0ZW4gcyB2aSBoYXIgbmdvdCBhdHQgYnlnZ2EgcCBzZW4hIDMgcG9pbnRzICBzdWJtaXR0ZWQgMyBkYXlzIGFnb0V2ZW4gbW9yZSBzbyBoZXJlIGluIFN3ZWRlbiAocmVtaW5kZXIgU3dlZGVuIGhhcyAxMCBtaWxsaW9uIGluaGFiaXRhbnRzKSBhIGNvdW50cnkgd2hlcmUgdW5sZXNzIHlvdSdyZSBnb2luZyBmcm9tIGxpa2UgU3RvY2tob2xtIChjYXBpdGFsKSB0byBLaXJ1bmEgKG5vcnRoZXJubW9zdCBjaXR5KSB5b3UnbGwgbGlrZWx5IHRha2UgdGhlIHRyYWluLiAKVGhleSBmb3VuZCB0aGF0IG9waWF0ZXMgaW50ZXJhY3Qgd2l0aCBzcGVjaWFsaXplZCByZWNlcHRvcnMgaW4gY2VsbHMgdGhhdCBhcmUgcHJpbWFyaWx5IG1hc3NlZCBpbiB0aGUgYnJhaW4gYW5kIHNwaW5hbCBjb3JkLiAKVGhlaXIgd2FzIG5vIGNoYWluIG9mIGNvbW1hbmQuIApJZiB0d28gb3IgbW9yZSBwbGF5ZXJzIG1ha2UgdGhlIHNhbWUgaGFuZCAob3IgaGFuZHMgdGhhdCByYW5rIHRoZSBzYW1lKSB0aGVuIHRoZSBwb3QgaXMgc3BsaXQuIApJbiBkaWVzZW0gIENhc2lubyB3ZXJkZW4gZGllIEhuZGUgZ2VuYXVzbyBlcnpldWd0LCB3aWUgaW4gZGVuIGVjaHRlbiIgQ2FzaW5vcy4gCkxlYWh5IGhhcyBiZWVuIHN1Y2ggYSB0aG9ybiBpbiBDaGVuZXkgc2lkZSwgdHJ5aW5nIHRvIGludmVzdGlnYXRlIHRoZSBIYWxpYnVydG9uIHdhciBwcm9maXRlZXJpbmcsIHRyeWluZyB0byBzdG9wIHRoZSBQYXRyaW90IEFjdCBmcm9tIGJlaW5nIHJhbW1lZCB0aHJvdWdoIENvbmdyZXNzLCB0aGF0IENoZW5leSBvbmNlIGZhbW91c2x5IHRvbGQgaGltIHRvIGZ1Y2sgb2ZmLiBCdXQgd2FzIENoZW5leSBhbHNvIHRyeWluZyB0byBzY2FyZSBMZWFoeSBpbnRvIHNpbGVuY2Ugd2l0aCBBbnRocmF4PyBUaGVyZSB3YXMgYSBEYWlseSBLb3MgYXJ0aWNsZSBsYXN0IG1vbnRoIHB1dHRpbmcgdG9nZXRoZXIgc29tZSBvZiB0aGUgZXZpZGVuY2UgdGhhdCBMZWFoeSBtYXkgaGF2ZSBiZWVuIHNpbmdsZWQgb3V0IGZvciB0aGUgQW50aHJheCBhdHRhY2tzIHRoYXQgaGl0IHRoZSBuYXRpb24gZHVyaW5nIGFsbCB0aGlzLCBhdHRhY2tzIHRoYXQgZWVyaWx5IHRhcmdldGVkIERlbW9jcmF0cyB3aG8gb3Bwb3NlZCB3aGF0IHRoZSBCdXNoaWVzIHdlcmUgZG9pbmcgaW4gdGhlIG5hbWUgb2Ygc2VjdXJpdHkuLiAKSXQgaGFwcGVucyB0byBtb3JlIHBlb3BsZSB0aGFuIHlvdSBrbm93LiAKSW4gYW5vdGhlciAxMCB5ZWFycyB5b3UgY291bGQgc2VlIHRoZSBudW1iZXIgZ28gd2F5IG92ZXIgMTAwIG1pbGxpb24gaWYgbGl0dGxlIGlzIGRvbmUuLiAKTGlrZSB0aGF0IHNvbmcsIGhlIHNhaWQuIApJIHdhbnRlZCB0byBkbyBhIHNob3cgdGhhdCBsb29rZWQgcmVhbGx5LCByZWFsbHkgZ2xhbW9yb3VzIGFuZCB0aGVuIHVuZGVybmVhdGggeW91J2Qgc2VlIGFsbCB0aGUgcm90IG9mIGV2ZXJ5dGhpbmcgYW5kIGp1c3QgaG93IGRhcmsgYW5kIGRhc3RhcmRseSBhbmQgZGVwcmVzc2luZyB0aGF0IHdvcmxkIGlzLiBUaGVyZSdzIGEgZGFya25lc3MgdG8gaXQuIFRvIGdvIGludG8gYSByb29tIGFuZCBzYXkgSSB3YW5uYSBjaGFuZ2UgbXkgZmFjZSB0aGF0J3MgYSBsb3Qgb2Ygc2VsZiBoYXRyZWQKS2V1cmlnIHRha2VzIHRoZSBsZWFybmluZyBleHBlcmllbmNlIHRvIGFub3RoZXIgbGV2ZWwgd2l0aCB3aGF0IGl0IGNhbGxzIHNvdXJjZSB0cmlwcy4gClNlcmlvdXNseSB0aGlzIHNoaXQgZ2V0dGluZyBhbm5veWluZyBhbmQgb2xkLiAKU3R1ZGllcyBkZW1vbnN0cmF0ZSB0aGF0IFBDUHMgYXJlIGhpZ2hseSByZXNpc3RhbnQgdG8gY2hhbmdpbmcgdGhlaXIgcHJhY3RpY2UgcGF0dGVybnMgZm9yIG1hbmFnaW5nIEFNIExCUCBQdHMuCkFuZCB0aGFua3MgdG8gQXVzdGluIFdlZGRpbmcgQmxvZywgSSBnZXQgYWxsIGtpbmRzIG9mIFBhcGVyIEZlYXRoZXIgVHV0b3JpYWwgbG92ZS4KVGVhcmluZyBvdXQgTGV2aXRpY3VzIGlzbiBnb25uYSBoZWxwLlRoZWhhbG9oZWRnZWhvZyAgNiBwb2ludHMgIHN1Ym1pdHRlZCA5IGRheXMgYWdvVGl0YW5mYWxsIDIgaGFzIG9uZSBvZiB0aGUgYmVzdCBzaW5nbGUgcGxheWVyIGNhbXBhaWducyBJIGV2ZXIgcGxheWVkIGluIGFuIEZQUy4gV2hpbGUgdGhlIHN0b3J5IHdhc24gYW55dGhpbmcgZ3JvdW5kYnJlYWtpbmcsIHRoZSByZWxhdGlvbnNoaXAgYmV0d2VlbiBKYWNrIGFuZCBCVCB3YXMgd2VsbCBkb25lLj4hIFdoaWxlIEJUIGRlYXRoIHdhcyBwcmVkaWN0YWJsZSBhbmQgSSBzYXcgaXQgY29taW5nIGEgbWlsZSBhd2F5LCBpdCBkaWRuIHN0b3AgbWUgZnJvbSBnZXR0aW5nIHRoZSBmZWVscyBhbnl3YXkuIEFuZCB0aGVuIHRoZXkgZGlkIGl0IGFnYWluIGF0IHRoZSBlbmQuIWZvciBURjMsIEkgYSBsaXR0bGUgdG9ybiBmb3Igd2hhdCBJIHdhbnQgdG8gc2VlIGZvciB0aGUgY2FtcGFpZ24uIApab21iaWVzIGFwYSBiaXNhIG1lbmdhamFyaSBhbmRhIHRlbnRhbmcgcmFoaW0ga2VyaW5nIGFraWJhdApJIGhhZCB3b3JzZSBsdWNrIHdpdGggY29tbWlzaCB2ZXRvZXMgdGhhbiBsZWFndWUgdmV0b2VzIGluIG15IHBhc3QgYW5kIGl0IHN1Y2tzIHRyeWluZyB0byB0YWtlIGRvd24gYSBjb21taXNoIHdpdGggdG9vIG11Y2ggcG93ZXIuIElmIHlvdSBoYXZlIGEgZnVsbCBsZWFndWUsIGl0IGhhcmQgdG8gY29tbXVuaWNhdGUgZm9yIGV2ZXJ5b25lIHRvIGp1c3QgY29sbHVkZSBpbiBmYW50YXN5LiAKRW50ZXJ0YWlubWVudCBBcnRpY2xlcyAgRGVjZW1iZXIgNCwgMjAwOQpJbiBwb2tlciwgdGhvdWdoLCBpZiB5b3UgZG9uIGhhdmUgdGhlIGNhcmRzLCB0aGVyZSBpc24gbXVjaCB5b3UgY2FuIGRvIGFib3V0IGl0LiAKVGhlIGZpcnN0IHR3byBncm91cHMgYXJlIHN0YXRpc3RpY2FsbHkgc28gdW5saWtlbHkgdG8gZXZlciBnZXQgaW50byB0aGVpciBvd24gaG9tZSB0aGF0IHlvdSBtaWdodCBhcyB3ZWxsIHNheSB0aGV5IGFyZSBnb2luZyB0byBiZSBpbiBhIHRlbnQgdW50aWwgdGhleSBkaWUuLiAKV2hlbiBoZSBnb3QgdXAsIGhlIHdhcyBoYXZpbmcgY3JhenkgbXVzY2xlIHNwYXplbXMgaW4gaGlzIGJhY2svc2lkZSBhbmQgaGUgd2FzIGNvdWdoaW5nIG5vbiBzdG9wLiAKVGhpcyBpcyB0aGUgc3R1ZmYgeW91IGhhdmUgdG8gZGVhbCB3aXRoIGF0IHRoZXNlIGxldmVscy4gCkkgd2FzIDE0IHdlZWtzIHByZWduYW50LiAKU28gdGhlIGxhc3QgdGhpbmcgSSBoZWFyZCB3YXMgdGhlIGxpdmUgcG9rZXIgdGFibGVzIHdvdWxkIGJlIGRlbGF5ZWQgYnkgdXAgdG8gdHdvIHllYXJzIGF0IFdvb2RiaW5lLCB0aGV5IG92ZXJlc3RpbWF0ZWQgdGhlaXIgY2FwYWJpbGl0aWVzIHdpdGggdGhlIHJlY2VudCByZW5vdmF0aW9ucy4gUG9rZXIgaXMgbm90IGF0IHRoZSBmb3JlZnJvbnQgb2YgYSBDYXNpbm8gb2ZmZXJpbmdzLCBpdCBzaW1wbHkgZG9lcyBub3QgZ2VuZXJhdGUgYXMgbXVjaCBtb25leSBmb3IgdGhlbSBhcyBvdGhlciBnYW1lcy4gCkl0IG5vdCBhYm91dCBzdXJ2aXZhbCwgaXQgbm90IGFib3V0IHNob290aW5nIHNvbWVvbmUgYmVjYXVzZSB0aGV5IGp1c3QgYW5vdGhlciBjb21iYXRhbnQgb24gdGhlIG90aGVyIHNpZGUgb2YgYSBjb25mbGljdCwgaXQgYWJvdXQgZG9taW5hdGluZyBzb21lb25lIHdobyBpcyB3ZWFrZXIgdGhhbiB5b3UganVzdCBmb3IgeW91ciBvd24gcGxlYXN1cmUgc2ltcGx5IGJlY2F1c2UgeW91IGNhbi4gCkl0IGlzIG5vdyB0aW1lIHRvIGdldCBraW5lc3RoZXRpYy4gCldoaWxlIHRoZSBzdG9yaWVzIG1heSBzZWVtIG91dGxhbmRpc2gsIHRoZSBkZXRhaWxzIGFyZSBmcm9tIEt3YW4gb3duIGxpZmUuIApJZiB0aGlzIGlzIGEgbGluZWFyIHNwZWN0cnVtLCBJIGNvdWxkIGdpdmUgaXQgdG8geW91IGluIG1pbGxpbWV0cmVzLCB3aGVyZSAwbW0gaXMgaW4gdGhlIGFpciwgbm90IG1ha2luZyBjb250YWN0IHdpdGggdGVzdGljbGVzLCBhbmQgMTUwbW0gaXMgdGhlIGtuZWUgZXhwbG9kaW5nIHRocm91Z2ggdGhlIHJlY3R1bSBvdXQgdGhlIG90aGVyIHNpZGUuIApDb21lIGZyb20gdGhlIHJlYWxtIG9mIEhhcnJ5IFBvdHRlciwgd2hlcmUgeW91IG5vIGRvdWJ0IGhhdmUgSGVhcmQgdGhhdCBEdW1ibGVkb3JlIGlzIEdheSwgYW5kIGl0IGNhdXNlcyBtdWNoIGRpc3RyZXNzIHRvIGJvdGggUXVlZXIgYW5kIFN0cmFpZ2h0cyBhbGlrZS4gT25lIG9mIHRoZSB0aGluZ3MgSSBoZWFyIGFib3V0IHRoZSBtb3N0IGlzIGhvdyBwZW9wbGUgZmVlbCB0aGlzIGlzIGp1c3QgdG8gZW50aWNlIFF1ZWVyIGZvbGsgdG8gcmVhZCBIYXJyeSBQb3R0ZXIsIG9yIGluIHNvbWUgbWFubmVyIHN1cHBvcnQgaXQsIGJ1dCBzaW5jZSBEdW1ibGVkb3JlIGRvZXNuIHRha2UgYW55IGFjdGlvbiB0aGF0IHN1cHBvc2VkbHkgbWFrZXMgaGltIHRoZW4gaXQganVzdCBiYWl0cyBwZW9wbGUgaW50byBpdCB3aXRob3V0IGRlbGl2ZXJpbmcgb24gc29tZSBwZXJjZWl2ZWQgcHJvbWlzZS4gVGhlaXIgc3RhbmNlIGlzIHRoYXQgaW4gb3JkZXIgdG8gcmVwcmVzZW50IGdheXMgeW91IGhhdmUgdG8gR2F5ICh3aGF0ZXZlciB0aGF0IG1lYW5zPyEpLiAKRXJuaWUgU2NoZXJlciBQb2xpY2Ugd2VyZSBhYmxlIHRvIGVsaW1pbmF0ZSBDaGFybGVuZSBhbmQgRXJuZXN0J3MgY2xvc2UgY2lyY2xlIG9mIGZyaWVuZHMgYXMgc3VzcGVjdHMsIGJ1dCB0aGUgb25lIHBlcnNvbiB0aGV5IGNvdWxkIG5vdCBlbGltaW5hdGUgd2FzIHRoZWlyIHNvbiwgRXJuaWUuIEVybmllIGdhdmUgcG9saWNlIGEgdmVyeSB3ZWFrIGFsaWJpIGZvciB0aGUgbmlnaHQgdGhleSBiZWxpZXZlIGhpcyBwYXJlbnRzIHdlcmUga2lsbGVkLiBhdCBoaXMgQnJlYSBob21lLCBhbG1vc3QgNDAwIG1pbGVzIGZyb20gdGhlIGNyaW1lIHNjZW5lLiBIaXMgd2lmZSwgUm9ieW4sIGFuZCB0aGVpciBzb24gd2VyZSB2aXNpdGluZyBoZXIgZmFtaWx5IGluIFNhY3JhbWVudG8gYW5kIGhlIHdhcyBob21lIGFsb25lLiBFcm5pZSBvZmZlcnMgdG8gaW52ZXN0aWdhdG9ycyB0aGF0IHRoZXkgY2FuIHRyYWNrIGhpcyBtb3ZlbWVudHMgZnJvbSBMYXMgVmVnYXMgdG8gQnJlYSwgQ2FsaWYuLCB0aHJvdWdoIGNyZWRpdCBjYXJkIGNoYXJnZXMgYW5kIGNlbGwgcGhvbmUgcmVjb3Jkcy4gQnV0IGludmVzdGlnYXRvcnMgbG9va2luZyBhdCB0aG9zZSByZWNvcmRzIGZpbmQgYSAxNyBob3VyIHRpbWUgZ2FwIHdoZW4gdGhleSBiZWxpZXZlIEVybmllIGNvbW1pdHRlZCB0aGUgbXVyZGVycyBvZiBoaXMgcGFyZW50cy4KU2VsZWN0IGhvbWVzIHdpbGwgZmVhdHVyZSBhIGRlZXAgc29ha2VyIHR1Yi4gCk9yIHNvbWV0aGluZy4gSG9va2VyIHN0YXJlcyBhZnRlciBoaW0gd2l0aCBhIHdvcnJpZWQsIGZ1cnJvd2VkIGJyb3cgYW5kIHRoZXJlJ3MgYSBkcmFtYXRpYyBtdXNpY2FsIHN0aW5nLiBUaGlzIG9idmlvdXNseSBpc24ndCBnb29kLCBzbyBIb29rZXIgbWVldHMgdGhlIGNoaWNrIGNvcCBpbiBhIGJhciBhbmQgbGlzdGVucyB0byBoZXIgc3BpbGwgaGVyIGd1dHMgYWJvdXQgY2hva2luZyBpbiB0aGUgcGFya2luZyBsb3QuIApUaGVzZSBhcmUgcG9wdWxhciB3aXRoIHNldmVyYWwgbmFtZXM7IGNhcmQgY292ZXJzLCBjYXJkIGd1YXJkcyBhbmQgYWxzbyBjYXJkIHByb3RlY3RvcnMuIApVbmZvcnR1bmF0ZWx5LCB0aGVyZSBpcyBubyBmb3VudGFpbiBvZiB5b3V0aCwgYnV0IHRoYXQgaGFzbid0IHN0b3BwZWQgcGVvcGxlIGZyb20gdHJ5aW5nIHRvIHNsb3cgdGhlIGFnaW5nIHByb2Nlc3MuIApUaGVuLCB3aGVuIEkgbWFkZSB0aGUgZmluYWwgbmluZSwgSSBrbmV3IGl0IHdhcyB3aXRoaW4gcmVhY2guLiAKNjcuMiBNaW5vciBQZW5hbHR5ICAgUGxheWVyICAgQSBwbGF5ZXIgc2hhbGwgYmUgcGVybWl0dGVkIHRvIGNhdGNoIHRoZSBwdWNrIG91dCBvZiB0aGUgYWlyIGJ1dCBtdXN0IGltbWVkaWF0ZWx5IHBsYWNlIGl0IG9yIGtub2NrIGl0IGRvd24gdG8gdGhlIGljZS4gCk1vc3Qgb2YgdGhlIHRpbWVzLCBxdWl0ZSBhIGZldyB3aWxsIHJlcGVhdCBpdHNlbGYgOCB0aW1lcyAocmFpbiBoaXR0aW5nIHRoZSBzYW1lIHNwb3QpIGJlZm9yZSBhbGwgbnVtYmVycyBoYXZlIGFycml2ZSBvbmNlICh3aG9sZSBncm91bmQgZ2V0dGluZyB3ZXQpLiBZb3UnbGwgZmluZCB3aG9sZSBzZXJpZXMgb2YgZXZlbnRzIHdpdGhpbiBldmVyeSBzcGluIHRoYXQgd2lsbCBkZXRlcm1pbmUsIGluIHBhcnQsIGV2ZXJ5IHNpbmdsZSBzcGluIGlzIGFjdHVhbGx5IG5vdCB0byBrZWVwIHRvLi4gCkMgY29tbWUgZGVzIHBuZXVzIGRlIHF1YWxpZmljYXRpb24gISBMZSBncmlwIGluY3JveWFibGUuIApJIGRvbiBjYXJlIGhvdyB5b3UgZmVlbCBhYm91dCBpdCwgYXMgdGhlIG1vZCBvZiB0aGlzIGNvbW11bml0eSBpdCBpcyBteSBqb2IgdG8gcmVtb3ZlIGNvbnRlbnQgd2hpY2ggSSBmZWVsIG1heSBiZSBoYXJtZnVsIGFuZCBJIGhhdmUgZG9uZSBqdXN0IHRoYXQuIENvbnRpbnVlZCBhcmd1bWVudCBhYm91dCB0aGlzIHRvcGljIHdpbGwgcmVzdWx0IGluIHlvdSBiZWluZyBiYW5uZWQuLiAKVGhlIFNhbGFyeSBvZiBDaGlyb3ByYWN0aWMgTWFzc2FnZSBUaGVyYXBpc3RzCjYsIGFuZCBjYWxsZWQgdGhlICIgcGl0dGluZyIuIApUaGlzIGxhY2sgb2YgdHJhbnNwYXJlbmN5IGlzIHJpZGljdWxvdXMuIEl0IE9VUiBtb25leS4gCkFsc28gZGllIEF1c3NhZ2U6IEZyYXVlbiBkaWUgMzAgc2luZCB1bmQga2VpbmUgS2luZGVyIHdvbGxlbiBhbHMgcHN5Y2hpc2NoIGtyYW5rIGRhcnN0ZWxsZW4gc29sbCBuaWNodCBoZWlzc2VuIGRhc3MgZXIgRnJhdWVuIG51ciBub3JtYWwgZmluZGV0IHdlbm4gc2llIEtpbmRlciBrcmllZ2VuIHVuZCBmciBkaWUgS2luZGVyIHNvcmdlbiBBS0EgRnJhdWVuIHNvbGxlbiBmciBLaW5kZXIgbGViZW4gdW5kIG5pY2h0IGZyIEthcnJpZXI/Ck15IGRhdWdodGVyIGdhdmUgdXAgYm90dGxlcyByaWdodCBhcm91bmQgYSB5ZWFyLCBvbmUgZGF5IHNoZSBqdXN0IHN0YXJ0ZWQgcmVmdXNpbmcgdGhlbSBhbmQgb25seSBuZWVkZWQgaGVyIHBhY2lmaWVyIHRvIGdvIHRvIHNsZWVwICAgaG93ZXZlciBJIGRvIGhhdmUgZnJpZW5kcyB3aG9zZSBraWRzIGFyZSB0aGUgc2FtZSBhZ2UgYW5kIHN0aWxsIHRha2UgYm90dGxlcyBhdCBiZWR0aW1lLiBJJ2Qgc2F5IGFib3V0IDUwJSBvZiB0aGVtIGRvbid0IHVzZSBhIHBhY2lmaWVyLiAKVmFyb3VmYWtpcycgbWluaXN0cnkgaG93ZXZlciByZWl0ZXJhdGVkIGFmdGVyIGhpcyBtZWV0aW5nIHdpdGggTGFnYXJkZSB0aGF0IHRoZSBHcmVlayBnb3Zlcm5tZW50IGludGVuZGVkIHRvIG1lZXQgYWxsIGl0cyBmaW5hbmNpYWwgb2JsaWdhdGlvbnMuClRvIGJlIGhvbmVzdCwgNCBkdWRlcyBpcyBnb2luZyB0byBiZSB0b3VnaCBmb3IgYSBjbHViOyB5b3UgYXJlIHByb2JhYmx5IGJldHRlciBzcGxpdHRpbmcgaW50byB0d28gZ3JvdXBzIChzdWNrcywgSSBrbm93KSwgb3IgeW91IGd1eXMgZmluZCBhIHRpY2tldGVkIGV2ZW50LCBhbmQgdGhlbiBhcyBsb25nIGFzIHlvdSBpbiByZWFzb25hYmxlIHNoYXBlIHRoZW4geW91IGdldHRpbmcgaW4uIFByb2JhYmx5IHRoZSBsYXR0ZXIgaXMgdGhlIHdheSB0byBnbyBmb3IgeW91IGd1eXMuIENoZWNrIFJlc2lkZW50IEFkdmlzb3IgYW5kIHNlZSBpZiBhbnkgREpzIHlvdSBsaWtlIGFyZSBwbGF5aW5nIHRpY2tldCBldmVudHMgaW4gQmVybGluLCBhbmQgdGhlbiBidXkgdGhlIHRpY2tldHMuIApUaGlzIG9waW5pb24gcGllY2UgaW4gUG9saXRpY28gTWFnYXppbmUgYXJndWVzIHRoYXQgUmVwdWJsaWNhbnMgaG9waW5nIHRoYXQgZm9ybWVyIE9oaW8gR292LiBKb2huIEthc2ljaCwgb3IgYW55IG90aGVyIGNhbmRpZGF0ZSwgd2lsbCBjaGFsbGVuZ2UgUHJlc2lkZW50IERvbmFsZCBUcnVtcCBmb3IgdGhlIEdPUCBub21pbmF0aW9uICJzaG91bGQgYmUgY2FyZWZ1bCB3aGF0IHRoZXkgd2lzaCBmb3IuIiBSaWNoIExvd3J5LCBlZGl0b3Igb2YgTmF0aW9uYWwgUmV2aWV3IGFuZCBhIFBvbGl0aWNvIGNvbnRyaWJ1dG9yLCBhcmd1ZXMsICJCZWNhdXNlIGEgcHJpbWFyeSBjaGFsbGVuZ2Ugd291bGQgbmF0dXJhbGx5IGNvbWUgZnJvbSB0aGUgbGVmdCwgaXMgdW5saWtlbHkgdG8gc3VjY2VlZCwgYW5kIGludm9sdmVzIGFsaWVuYXRpbmcgdGhlIEdPUCdzIGdyYXNzcm9vdHMsIGl0IGlzIG1vc3QgbGlrZWx5IHRvIGF0dHJhY3QgcGVvcGxlIHdobyBkb24ndCBoYXZlIGEgZnV0dXJlIGluIEdPUCBuYXRpb25hbCBwb2xpdGljcyBhbmQgbGFjayBjb25zZXJ2YXRpdmUgYm9uYSBmaWRlcy4iIEhlIGhhcyB0aGlzIHRvIHNheSBhYm91dCBLYXNpY2g6ICJPbiBwYXBlciwgT2hpbydzIEpvaG4gS2FzaWNoIGlzIGZvcm1pZGFibGUsIHRoZSBmb3JtZXIgdHdvIHRlcm0gZ292ZXJub3Igb2YgYSBtYWpvciBzdGF0ZSBhbmQgSG91c2UgUmVwdWJsaWNhbiBidWRnZXQgY2hhaXJtYW4uIEJ1dCBoZSB3YXMgYW4gZWRneSBmaWd1cmUgY2lyY2EgMTk5NS4gClVzdWFsbHkgdGhlIG9wdGltaXplciBpcyBzbWFydCBlbm91Z2ggdG8ga25vdyB0aGUgMm5kIGFuZCAzcmQgcGxhbnMgYXJlIGlkZW50aWNhbCwgc28geW91IHByb2JhYmx5IGhhdmUgc29tZSBvdXRkYXRlZCBzdGF0cy4gClRoZXkgYXJlIHVuZG91YnRlZGx5IHRoZSBiZXN0IEhDL1FCIGNvbWJvIG9mIGFsbCB0aW1lLiBUaGVyZSBubyBkYXRhIGZyb20gQnJhZHkgc2FucyBCZWxpY2hpY2ssIGFuZCB0aGUgUGF0cyB3ZW50IGEgcmVzcGVjdGFibGUgMTEgNSBpbiAyMDA4IHcvbyBCcmFkeS4gCldoYXQgV2UgSGF2ZSBMZWFybmVkIEFib3V0IFZpdGFtaW4gRCBEb3NpbmcKSGUgZW1haWxlZCBtZSBldmVyeSBkYXkuIEFuZCBJIGVtYWlsZWQgYmFjayBldmVyeSBkYXkuCkFuZCBob25lc3RseSwgaXQga2luZCBvZiBpcyBhIGdvb2QgdGhpbmcgdGhhdCBjb21wYW5pZXMgaGF2ZSB0aGUgcmlnaHQgdG8gZG8gd2hhdGV2ZXIgdGhleSB3YW50IHRvIGRvIHdpdGggdGhlaXIgb3duIHByb2R1Y3QuIApTbywgc29tZSBwZW9wbGUgZmluZCBpdCBiZXR0ZXIgdG8gcGxheSBpbiB0aGUgbWlkZGxlIG9mIHRoZSBuaWdodCBvciB3aGVuZXZlciB0aGVpciBidXN5IHNjaGVkdWxlIGNsZWFycy4gCkkgdGVuZCB0byBzZWUgYSBsb3Qgb2YgbWVtZXMgZnJvbSBlZGd5IGludGVybmV0IGpva2VzdGVycyBhYm91dCBwZW9wbGUgd2l0aCBkaXNhYmlsaXRpZXMgYSBsb3QuIEV2aWRlbnRseSwgYSBsb3Qgb2YgcGVvcGxlIHRoaW5rIHRoZXkgcXVpdGUgZnVubnkgYmVjYXVzZSB0aGV5IGdldCBhIGxvdCBvZiB1cHZvdGVzIG9yIHNoYXJlcyBvciByZXR3ZWV0cyBvciB3aGF0ZXZlci4gSXQgbm90IGZ1bm55IHRvIG1lIGJlY2F1c2UgYSBsb3Qgb2YgdGhlIHRpbWUgaXQgcHJldHR5IGV2aWRlbnQgdGhlIGd1eSBtYWtpbmcgdGhlIG1lbWUgaXMgYWJsZWQsIGFzIGFyZSB0aGUgcGVvcGxlIGVuam95aW5nIGl0LCBhbmQgbm9uZSB0aGVtIHJlYWxseSB1bmRlcnN0YW5kIHdoYXQgaXQgbGlrZSB0byBoYXZlIGEgZGlzYWJpbGl0eS4gCkFuZCB3aGVuIGhlIGxlYXJuZWQgdGhhdCBoZSB3YXMgbGVhdmluZyB3b3JrIGVhcmxpZXIgdGhhbiBleHBlY3RlZCBoZSBkZWNpZGVkIHRvIGhlYWQgb3V0IG9uIGhpcyB0cmlwIGVhcmxpZXIgdGhhbiBwbGFubmVkLiAKRnJpZWRyaWNoIEdydWJlciwgU3ByZWNoZXIgZGVyIEdlc2NoZnRzZmhydW5nIGRlciBQb3JyIFNvbHV0aW9ucywgc2FndGUgZGF6dTogIktlbXBpbnNraSBoYXQgc293b2hsIGluIGRlciBnZWhvYmVuZW4gSG90ZWxsZXJpZSBhbHMgYXVjaCBpbiBkZXIgVmVybWFya3R1bmcgdm9uIG1pdCBkZW0gSG90ZWwgdmVyYnVuZGVuZW4gV29obnVuZ2VuIGVyZm9sZ3JlaWNoZSBQcm9qZWt0ZSB2ZXJ3aXJrbGljaHQuIFVuc2VyIFRlYW0gaXN0IGtvbXBsZXR0IHVuZCBkZXIgV2VnIGZyIGVpbmUgZXJmb2xncmVpY2hlIFVtc2V0enVuZyBmcmVpLiIuIApQaGlsYWRlbHBoaWEgY291bGQgYmUgbmV4dCB0byBqb2luOyBvbiBUaHVyc2RheSwgQ291bmNpbG1hbiBXaWxsaWFtIEsuIEdyZWVubGVlIGludHJvZHVjZWQgYSBiaWxsIHRvIGFkZCByZWd1bGF0aW9ucyBhaW1lZCBhdCBtYWtpbmcgYSBkZW50IGluIHRoZSBudW1iZXIgb2Ygc3VjaCBidXNpbmVzc2VzIGhlcmUuCk5vd2FkYXlzIHRoYXQgbnVtYmVyIGlzIHByb2JhYmx5IDMgNSBvdXQgb2YgMTAwIChwcm9iYWJseSBsb3dlciwgaWRrKSBkdWUgdG8gb25saW5lIHBva2VyIGV4aXQgZnJvbSB0aGUgVVMuIApCdXQgYXMgTGEgUHJlc3NlJ3MgTHlzaWFuZSBHYWdub24gcHV0IGl0OiBoYXJkbHkgc2NhbmRhbGl6aW5nIHRvIGxlYXJuIHRoYXQgaW4gY2xvc2VkIGRvb3IgbWVldGluZ3MgcG9saXRpY2lhbnMgZGlzY3VzcyBwb2xpdGljcy4gT250YXJpbyBtZWRpYSBoYXZlIGxpdmVkIHRocm91Z2ggYSBoYXJkIFF1ZWJlYyBzdHlsZSB3aW50ZXIsIGFuZCB0aGV5IGV4aGF1c3RlZC4gCkkgdGhpbmsgdGhpcyBpcyBhIGdvb2QgdGhlb3J5IGJ1dCBJIGRvdWJ0IHRoaXMgd291bGQgYmUgd2hhdCBoYXBwZW5zLCBhbmQgSSBkb3VidCB0aGlzIGNvdWxkIGluIGFueSBwb3NzaWJsZSB3YXkgdHVybiBvdXQgd2VsbCBmb3IgdGhlIFdhdGVyZm9yZCdzLiBHaXZlbiB0aGUgaW50ZW5zZSBmaWdodGluZyBmcm9tIHRoZSBlcDExIHByb21vLCBJIHRoaW5rIHdlIHdpbGwgc2VlIHRoZSBmcmVkL1NKIGZpZ2h0aW5nIHNlZW4gZnJvbSB0aGUgc2Vhc29uIDIgdHJhaWxlciAoIndlIGNhbid0IGV4cGxhaW4gdGhpcyBvbmUgYXdheS4gCkkgd2lsbCBuZXZlciB1bmRlcnN0YW5kIE1pY2hhZWwgYW5kIEplcmVteSBvYmplY3Rpb24gdG8gQWx3YXlzIE9wZW4uIApObyBhbW91bnQgb2YgY29uc2VydmF0aW9uIG9yIHRlY2hub2xvZ3kgaXMgZ29pbmcgdG8gYmUgYSBtYWdpYyBzb2x1dGlvbiB0byB0aGVzZSBwcm9ibGVtcy4gCkkgc3VyZSB0aGVyZSBhcmUgb3RoZXIgNDAgeWVhciBvbGRzIGF0IEZOTSwgYnV0IGJ5IG15IHN0YW5kYXJkcyBhdCBhZ2UgNDAgeW91IHNob3VsZCBwcm9iYWJseSBiZSBpbiBhIHN0YWdlIG9mIGxpZmUgdGhhdCBpc24gc28gcGF0aGV0aWMgdGhhdCB5b3UgbmVlZCB0byBtZWV0IGEgYnVuY2ggb2YgZmF0IGR1ZGVzIGF0IGEgY2FyZCBzaG9wIGV2ZXJ5IHdlZWsgdG8gZmlsbCBhIGhvbGUgaW4geW91ciBsaWZlLiBBbmQgcmVhbGx5LCBkbyBJIGV2ZW4gd2FudCB0byB0YWxrIHRvIHRoZSBwZW9wbGUgbXkgYWdlIGF0IGFuIExHUz8gVGhlcmUgbm8gd2F5IHdlIGhhdmUgYW55dGhpbmcgaW4gY29tbW9uLCBhZnRlciBhbGwgICBJIGFtIGEgbWVkaWEgcHJvZmVzc2lvbmFsIHdpdGggYSB3aWZlIGFuZCBraWRzIGFuZCB0aGV5IGFyZS4gTWFnaWMgZ3V5cywgSSBub3Qgc2F5aW5nIHRoZXkgYXJlIHZpcmdpbnMgICBJIGp1c3Qgc2F5aW5nIHRoYXQgYW55b25lIGNhbiBwYXkgZm9yIGl0LiAKT2YgY291cnNlIHByZWZsb3AgeW91J3ZlIGdvdCBhIGJldHRlciBjaGFuY2Ugb2YgZ2V0dGluZyBhIHN0cmFpZ2h0IHRoZW4gYSBmbHVzaC4gT24gdGhlIGZsb3AgdGhpbmdzIGNhbiAgIG9mIGNvdXJzZSBjaGFuZ2UgIC4gVGhlIG9kZHMgb2YgaGl0dGluZyB5b3VyIHN0cmFpZ2h0IG9uIHRoZSBUdXJuIG9yIFJpdmVyIGFsbCBkZXBlbmRzIG9uIHdoaWNoIGNhcmRzIGFyZSBkcmF3biBvbiB0aGUgZmxvcCBhbmQvb3IgdHVybi4gCkl0IGlzIGFsc28gaW1wb3J0YW50IHRvIHdvcmsgd2l0aCBzb21lYm9keSB3aXRoIHdob20geW91IGZlZWwgY29tZm9ydGFibGUuIApEcyBhdWpvdXJkJ2h1aSwgdm91cyBhdmV6IHBldXQgdHJlIHB1IHZvaXIgbGEgcHVibGljaXQgZGlmZnVzZSBzdXIgbGVzIGNoYW5lcyBkZSB0bHZpc2lvbiBxdWkgcHJwYXJlIGwndXRpbGlzYXRpb24gZGUgY2UgbWNhbmlzbWUuIE9uIHZvdXMgaW5kaXF1ZSBxdWUgZGVzIHByY2lzaW9ucyBzZXJvbnQgZG9ubmVzIHN1ciBsYSB2aWN0aW1lLCBsZSBwb3J0cmFpdCByb2JvdCBkdSBzdXNwZWN0IGRpZmZ1cyBldCBiaWVuIHNyIGxhIG1pc2UgZW4gcGxhY2UgZCd1biBudW1ybyB2ZXJ0LiBDZXBlbmRhbnQsIGNlIG1jYW5pc21lIG5lIHNlcmEgcGFzIGRjbGVuY2ggZGFucyBuJ2ltcG9ydGUgY2FzLiBJbCBmYXVkcmEgcXVlIGxlIFByb2N1cmV1ciB2b2l0IGxhIHJ1bmlvbiBkZSA0IGNyaXRyZXMgYXZhbnQgZGUgcG91dm9pciBkY2xlbmNoZXIgY2Ugc3lzdG1lOgpSYW5keSByZXN0YXVyYXRldXIgSnVsaWFuICJOYXVnaHR5IiBOaWNjb2xpbmkganVzdCBzZXJ2ZWQgaGlzIGxhc3QgInBvd2VyIGx1bmNoLiIKUHJldHR5IG11Y2gsIEkgbGVmdCB3aXRob3V0IGEgaG91c2UsIGhlIHNhaWQuSm9oYWwsIHdob3NlIGZhbWlseSBvd25zIEpvaGFsIEJlcnJ5IEZhcm1zLCBhcHBsaWVkIGxhc3Qgc3ByaW5nIHRvIGJ1aWxkIGEgMTAsNTAwIHNxdWFyZSBmb290IGhvdXNlIG9uIGhpcyBwYXJlbnRzIGVpZ2h0IGFjcmUgYmx1ZWJlcnJ5IGZhcm0uIFRoZSBwbGFuIHdhcyBmb3IgSm9oYWwsIGhpcyBncmFuZHBhcmVudHMsIHBhcmVudHMsIHNpc3RlciBhbmQgaGlzIHVuY2xlIGZhbWlseSB0byBsaXZlIGluIHRoZSBob3VzZS5KYWcgSm9oYWwgYXQgaGlzIGZhbWlseSBob21lIGluIFJpY2htb25kLiAKSSBmZWVsIGJhZCBmb3IgdGhlc2UgcGVvcGxlIG5vdCBkZXNwaXRlIHdoYXQgdGhleSBkb25lIGJ1dCBiZWNhdXNlIG9mIGl0LiBJZiBnaXZlbiB0aGUgY2hvaWNlLCBubyByYXRpb25hbCBwZXJzb24gd291bGQgcGljayB0aGF0IGxpZmUuLiAKQWxsIHRoZXNlIGFyZSBjdXN0b20gbWFkZSB1c2VyIHJldmlld3MgYW5kIHRob3NlIGNhbiBlbnRlcnRhaW4geW91IHdpdGggYWxsIHRoZSB2YWx1YWJsZSBpbmZvcm1hdGlvbnMuIApBbmQgb2YgY291cnNlIGluIDE5NDIsIENsYXJrIEdhYmxlIGJlY2FtZSBvbmUgb2YgaXRzIG1vc3QgZmFtb3VzIHBhdHJvbnMgd2hpbGUgaGUgYXdhaXRlZCB3b3JkIGFzIHRvIHRoZSBmYXRlIG9mIGhpcyBiZWF1dGlmdWwgd2lmZSwgQ2Fyb2xlIExvbWJhcmQuIApKdW4gNywgMjAxMyAuIExpdmUgZm9yIFNwZWVkIFMyIDAuNkUgRGV1dHNjaDogTmV1ZSBWZXJzaW9uIGRlcyByZWFsaXR0c2dldHJldWVuIE9ubGluZSBSZW5uc3BpZWxzICJMaXZlIGZvciBTcGVlZCIuIApIZSBoYXZlIHRvIGhhdmUgYmVlbiBhIHRvdGFsIGlkaW90IG5vdCB0byBzZWUgc2hlIGhhZCBhbiB1bnVzdWFsIGNvbm5lY3Rpb24gdG8gdGhlIGdpcmwuIFBlcnNvbmFsbHksIEkgd2lzaCBzaGUgdG9sZCBoaW0sIG1hcnJpZWQgaGltLCBhbmQgdGhlbiBnb3R0ZW4gdGhlIHRpdGxlcyBhZnRlciB0aGVpciBtYXJyaWFnZS4gCjIwMDc6IEkgc3RhcnRlZCBpbiAyMDA3IG9ubGluZSBhbmQgZGVwb3NpdGVkICQ2MDAgd2l0aCBhICQ2MDAgYm9udXMgZnJvbSBGdWxsIFRpbHQgUG9rZXIuIFN0YXJ0ZWQgaW1tZWRpYXRlbHkgYXQgMjVubCBvciA1MG5sIDIgNCB0YWJsaW5nLiAKQWxvcnMsIG91aSwgbGEgYmVyY2UgY29tbXVuZSAgIEhlcmFjbGV1bSBzcGhvbmR5bGl1bSAgIGVzdCB1bmUgcGxhbnRlIHBob3RvdG94aXF1ZSwgcGhvdG9zZW5zaWJpbGlzYW50ZSAoZXQgbm9uIHBhcyBwaG90b3NlbnNpYmxlLCBjZSBxdWkgdm91ZHJhaXQgZGlyZSBxdSBzZXJhaXQgc2Vuc2libGUgIGxhIGx1bWlyZSwgY2hvc2UgcGx1dHQgYmFsbG90ZSBwb3VyIHVuZSBwbGFudGUgcXVpIGRvaXQgYXNzdXJlciBsYSBwaG90b3N5bnRoc2UgZ3JjZSBhdSBzb2xlaWwgVG91dCBkIHJlcHJjaXNvbnMgY2VzIHRlcm1lcyBkZSBwaG90b3RveGljaXQsIGRlIHBob3Rvc2Vuc2liaWxpdCBxdWksIHNpIGlscyBuZSBzb250IHBhcyBpbmNvbm51cywgbmUgc29udCBwYXMgdG91am91cnMgYmllbiBjb21wcmlzLCBvdSBjb21wcmlzIHF1IG1vaXRpLiBMIGxpdCBzb3V2ZW50IHF1IHN1YnN0YW5jZSBlc3QgcGhvdG90b3hpcXVlIGRzIGxvcnMgcXUgbCBzdXIgbGEgcGVhdSBldCBxdWUgbGVzIHJheW9ucyBkdSBzb2xlaWwgYWdpc3NlbnQgc3VyIGVsbGUgc3VmZmlzYW1tZW50IGxvbmd0ZW1wcyBwb3VyIHByb3ZvcXVlciBjZSBxdWUgbCBhcHBlbGxlIGRlcyBwaG90b2Rlcm1hdGl0ZXMuIEMgdnJhaS4gCkFuZCBmaW5hbGx5LCBpZiBhIGphY2sgaXMgcGxheWVkLCB0aGUgb3JkZXIgb2YgcGxheSBpcyByZXZlcnNlZCwgZnJvbSBjbG9ja3dpc2UgdG8gY291bnRlcmNsb2Nrd2lzZSBvciB2aWNlIHZlcnNhLCB3aGljaCBtZWFucyB0aGF0IHRoZSBwbGF5ZXIgd2hvIHBsYXllZCB0aGUgbGFzdCBjYXJkIG5vdyBoYXMgdG8gYmVhdCBpdDIuLiAKQSBzZXZlbnRoIGhvdXNlIGlzIHNsYXRlZCB0byBiZSBvcGVuZWQgYnkgdGhlIG9yZ2FuaXphdGlvbiwgbm93IGNhbGxlZCBIZWFydGgsIGluIERvcmNoZXN0ZXIgaW4gMjAxMC4uIApObyBzdXJwcmlzZS4gQWxsIHRoZSBzdXBwb3NlZCAiSm9iIE9mZmVyIiBlbWFpbHMgc3R1ZGVudHMgaGF2ZSByZWNlaXZlZCBvcmlnaW5hdGVkIGZyb20gQ2hpbmEsIHRoZSBsYXN0IG1ham9yIGNhbXB1cyBoYWNrcyBvcmlnaW5hdGVkIGZyb20gQ2hpbmEsIGFuZCBDaGluZXNlIGludGVybmF0aW9uYWwgc3R1ZGVudHMgaGF2ZSB0aGUgaGlnaGVzdCByYXRlcyBvZiByZXBhdHJpYXRpb24gdXBvbiBncmFkdWF0aW9uLiBJdCdzIG5vdCB0byBzYXkgdGhhdCBhbGwgQ2hpbmVzZSBpbnRlcm5hdGlvbmFsIHN0dWRlbnRzIGhhdmUgbmVmYXJpb3VzIHJlYXNvbnMgZm9yIGF0dGVuZGluZyBVVEQsIGJ1dCBDaGluYSBoYXMgbm90b3Jpb3VzbHkgc2VudCBmb3JlaWduIGFnZW50cyB0byBhY2FkZW1pYyBpbnN0aXR1dGlvbnMgaW4gdGhlIHBhc3Qgd2l0aCB0aGUgcHVycG9zZSBvZiBzcHJlYWRpbmcgYW50aSB3ZXN0ZXJuIHNlbnRpbWVudCwgYW5kIHN0ZWFsaW5nIHByb3ByaWV0YXJ5IHVuaXZlcnNpdHkgaW5mb3JtYXRpb24uLiAKV2hhdCBNZW4gV2FudCBpcyBpbnN0ZWFkIGNvbnRlbnQgdG8gbGVhZCB3aXRoIGl0cyBhcHByYWlzYWwgb2YgQWxpIGFzIGluZXB0IGF0IGRlYWxpbmcgd2l0aCB0aGUgbWFsZSBwc3ljaGUsIGFuZCBwb3NpdGlvbiBtYWxlIGtub3dsZWRnZSBhcyB0aGUgYmUgYWxsIGFuZCBlbmQgYWxsIG9mIHByb2Zlc3Npb25hbCBhbmQgZW1vdGlvbmFsIHN1Y2Nlc3MuIApBYmR1bCBRYXVtIEFsbWFzCkkgbWF5IGJlIG1pc3Rha2VuLCBidXQgSSB0aGluayB0aGUgd2F5IHRoYXQgaXQgd29ya3MgaXMgdGhpczogWW91IGFyZSBiYXNpY2FsbHkgZGlsdXRpbmcgeW91ciBvd24gdXJpbmUgd2l0aCB0aGUgbGFyZ2UgYW1vdW50cyBvZiB3YXRlciB5b3UgZHJpbmsgcHJpb3IgdG8gdGFraW5nIGRydWcgdGVzdC4gU29tZSBsYWJzIGFyZSBhYmxlIHRvIHRlc3QvZGV0ZWN0IGRpbHV0aW9uLiBUaGlzIChJJ3ZlIGhlYXJkKSBpcyBkdWUgdG8gbG93ZXIgdGhhbiBub3JtYWwgbGV2ZWxzIG9mIG5pYWNpbiBpbiB5b3VyIHVyaW5lLiAKSSB0aGluayBteSBwaHlzaWNhbCB0aGVyYXBpc3QgaXMgbnV0cyBmb3Igd2hhdCBoZSBzdWdnZXN0aW5nIGJ1dCBJIHRob3VnaHQgSSBzZWUgaWYgSSBjYW4gZ2V0IHNvbWUgb2YgeW91ciBvcGluaW9ucy4gSSBkaWRuIHRoaW5rIG11Y2ggb2YgaXQgYXQgdGhlIHRpbWUgYnV0IGl0IGdyYWR1YWxseSBnb3Qgd29yc2UgYW5kIEkgZGVjaWRlZCBqdXN0IHRvIHRha2Ugc29tZSB0aW1lIG9mZiBhbmQgc2VlIGEgUFQuIEhlIGdvdCBtZSBkb2luZyBhIGxvdCBvZiBzdHJldGNoaW5nIGFuZCBzdHJlbmd0aCBleGVyY2lzZXMgYW5kIGl0IGRlZmluaXRlbHkgaGFzIGdvdHRlbiBiZXR0ZXIgYnV0IGl0IG5vdCAxMDAlLiBIZSBzYWlkIGhlIGNoZWNrZWQgYWxsIHRoZSB0ZW5kb25zIGFuZCBsaWdhbWVudHMgYW5kIGhlIGRvZXMgbm90IHN1c3BlY3QgYW55dGhpbmcgaXMgd3Jvbmcgd2l0aCB0aGVtLiBIZSB0aGlua3MgZ29pbmcgZG93biB0aGUgaGlsbCBJIGp1c3Qgb3ZlcmxvYWRlZCBteSBxdWFkIC4gUGVyc29uYWxseSBJIGZlZWwgdGhpcyBpcyB0b28gbXVjaCB0b28gZmFzdCBhbmQgSSBnb2luZyB0byBlbmQgdXAgd2hlcmUgSSB3YXMgNSB3ZWVrcyBhZ28gYnV0IGEgZG9jdG9yIHNob3VsZCBrbm93IGJldHRlciB0aGFuIG1lLCByaWdodD8gSSBkZWZpbml0ZWx5IHBheWluZyBhdHRlbnRpb24gdG8gbXkga25lZSBhbmQgd2lsbCBzdG9wIGlmIEkgZmVlbCBhbnl0aGluZyAiYmFkIiBoYXBwZW5pbmcuCkZpbmUgSSBoZXJlIHlvdSBzYXksIGp1c3QgZG8gSU0gTlohIFRoYXQgd2FzIHRoZSBpbml0aWFsIHBsYW4gYnV0IGJlaW5nIG9uIE1hcmNoIDZUSCB0aGUgdGltaW5nIGlzbiBncmVhdCBhcyBFYXN0ZXIgaG9scyBhcmUgbm90IHVudGlsIEFwcmlsIHdoZW4gd2UgY2FuIGFsbCB2aXNpdD8gU28gbXkgY3VycmVudCB0aG91Z2h0cyBhcmUgdGhhdCBJIHdpbGwgZ28gdG8gZG8gdGhlIENvdW50cnkgRW5lcmd5IElNIEF1c3RyYWxpYSBvbiAyOCBNYXJjaC4gCkEgZmV3IHF1aWNrIGFuc3dlcnM6IFRoZSBraWRzIHRhbGsgdG8gYSBncmllZiBjb3Vuc2Vsb3IgYXQgdGhlaXIgc2Nob29sLiBJIGVuY291cmFnZSB0aGVtIHRvIGp1c3QgdGFsayBhYm91dCB0aGVpciBmZWVsaW5ncy4gTXkgc29uIGlzIDcgYW5kIGhhcyBBREhELCBzbyBoZSBpcyBsZXNzIGFmZmVjdGVkIGJlY2F1c2UgaGUgZG9lc24gaGF2ZSBhIGxvdCBvZiB0aW1lIHRvIHRoaW5rIGFib3V0IGl0LCBidXQgbXkgZGF1Z2h0ZXIgd2FzIGRlZmluaXRlbHkgZGFkZHkgZ2lybCwgYW5kIHNoZSBoYXZpbmcgYSB0b3VnaCB0aW1lIHRocm91Z2ggYWxsIG9mIHRoaXMuIE1vc3QgZGF5cyBhcmUgZ29vZCwgYnV0IEkgY2F0Y2ggaGVyIHN0YXJpbmcgb2ZmIHdpdGggYSBzYWQgZXhwcmVzc2lvbiBvciBqdXN0IGNyeWluZyBvdXQgb2Ygbm93aGVyZS4gU2hlIGhhcyBhIGxvdCBvZiBoaXMgcGVyc29uYWxpdHksIGFuZCBib3R0bGVzIHRoaW5ncyB1cCB2ZXJ5IGVhc2lseS4gSSBiZWVuIHRyeWluZyB0byBjb2VyY2UgaGVyIGludG8gdGFsa2luZyB0byBtZSBhYm91dCBpdCwgYnV0IHNoZSBnb3QgYm90aCBvZiBvdXIgc3R1YmJvcm5uZXNzIGluIGhlci4KSGVhcnQgcHJvYmxlbXMgYW5kIFQyIGRpYWJldGVzIGluIHRoZSBmYW1pbHksIHNvIEkgYmVzdCBub3QgZm9sbG93IHRoYXQgdHJlbmQgaWYgSSBjYW4gaGVscCBpdC4gRXhlcmNpc2UgaXMgcmFtcGluZyB1cCwgZGlldCBoYXMgc3RyaXBwZWQgb3V0IGEgbG90IG9mIHN1Z2FyL2ZhdHMvY2FyYnMsIGFuZCB0aGUgaHVuZ2VyIHN1cHJlc3NpbmcgdGFibGV0cyBJIGhhdmUgc2VlbSB0byBiZSB3b3JraW5nIHdlbGwuU28gbXkgUSBmb3IgYW55b25lIHdobyB3YW50cyB0byBwaXBlIHVwOldoYXQgYSBnb29kIG1lYWwgcmVwbGFjZW1lbnQvcHJvdGVpbiBkcmluay9ldGMgdGhhdCBub3QgdG9vIGV4cGVuc2l2ZSwgZG9lc24gdGFzdGUgbGlrZSBzYW5kLCBhbmQgaXMgZmFpcmx5IGF2YWlsYWJsZT8gMiBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvSSBwcmVmZXIgV1BJIHRvIGFsdGVybmF0aXZlcyB3aXRoIG1vcmUgY2FyYnMsIGJlY2F1c2UgcmVzZWFyY2ggc2hvd3MgdGhhdCBjYXJicytwcm90ZWluIGlzIG5vdCBhbnkgYmV0dGVyIHRoYW4gcHJvdGVpbiBhbG9uZS5JIGxpa2UgbXlwcm90ZWluIGNob2NvbGF0ZSBhbmQgc3RyYXdiZXJyeSwgb3IgbmF0dXJhbCBjaG9jb2xhdGUgZm9yIGxlc3MgaW4geW91ciBmYWNlIGZsYXZvdXIgKEkgd2FpdCB1bnRpbCB0aGVyZSBhIDQwJSBvZmYgc2FsZSB0aGVuIGJ1eSA1a2cgb3Igc28pLiAKSSBvZmZlciB0aGVzZSB0eXBlcyBvZiByZWFkaW5nczsgSSBjYW4gZG8gdGhlbSBieSBwaG9uZSBvciBTa3lwZSBpZiB5b3UgZG9uIGxpdmUgaW4gdGhlIEJvc3RvbiwgTUEsIFVTQSBhcmVhLiAKSXQgcHJlZGljdGFibGUgdGhhdCBDdXJ0aXMgd2lsbCB0dXJuIG91dCB0byBiZSBsZXNzIHRoZSBib24gdml2YW50IHRoYW4gaGUgc2VlbXMuIApEYW53aW5jZW4gIDMgcG9pbnRzICBzdWJtaXR0ZWQgNiBkYXlzIGFnbwpUaGFuayB5b3UgUmV0aWVmIEpvdWJlcnQgQ28uIApJIGRpZG4gbGVhcm4gaXQsIEkgbGl2ZWQgaXQgYW5kIGFtIHN0aWxsIHN1ZmZlcmluZyBmcm9tIGFkZGljdGlvbiBmcm9tIGl0LiBJIHdhcyBhd2FyZSB0aGF0IEkgd2FzIGxpdmluZyBpbiB0aGUgd29ybGQgb2YgYWR2ZXJzZSBjaGlsZGhvb2QgZXhwZXJpZW5jZSBmcm9tIG15IHRlZW5zLCBiZXlvbmQgbXkgVkVSQkFMTFkgYWJ1c2l2ZSBtb3RoZXIgZGVhdGggd2hlbiBJIHdhcyAxOSB1bnRpbCBhbmQgdGhyb3VnaCB0b2RheS4gSSA1OCwgbm93LgpUaGUgZGlzZWFzZSBpc24ndCBzbyBtdWNoIGEgZGlzZWFzZSBpbiB0aGUgdHlwaWNhbCBzZW5zZSwgcmF0aGVyIGl0J3MgeW91ciBib2R5IGRvaW5nIHdoYXQgaXQncyBub3Qgc3VwcG9zZWQgdG8gIHBhcnRzIGdyb3dpbmcgd2F5IHRvbyBxdWlja2x5IHdpdGhvdXQgc3RvcHBpbmcgbGlrZSBpdCdzIG5vcm1hbGx5IHN1cHBvc2VkIHRvLiAKV2UgbGl0ZXJhbGx5IHdhbnRlZCB0byB0YWtlIGEgc2hvdCBhdCBoaW0uIApVc2UgdGhlIHRpcHMgb2YgdHdvIGZpbmdlcnMgdG8gZHJhdyBzbWFsbCBjaXJjbGVzIGFsbCBvdmVyIHRoZSBiYWNrLCB3b3JraW5nIHJvdWdobHkgZnJvbSB0b3AgdG8gYm90dG9tLiAKWW91IGNhbiBhbHNvIGxvb2sgZm9yIG90aGVyIHBlb3BsZSBwb3N0cy4gTWFrZSBzdXJlIHlvdSBmb2xsb3cgYWxsIHRoZSByZXF1aXJlbWVudHMgdGhhdCBwZXJzb24gaGFzLiAKWW91J2xsIGJlIGFibGUgdG8gbGVhcm4geW91ciBvcHBvbmVudCdzIHRlbmRlbmNpZXMgZmFzdGVyIGFuZCB0YWtlIGFkdmFudGFnZSBvZiB0aGVtLiBXaXRoIHNvIG1hbnkgZ3JlYXQgcGxheWVycyBvdXQgdGhlcmUgaW4gdGhlIHdvcmxkIG9mIHBva2VyLCB5b3UgbmVlZCBldmVyeSBhZHZhbnRhZ2UgdGhhdCB5b3UgY2FuIGdldCB0byBzdGF5IG9uIHRvcC4gCkNlIHN5c3RtZSB2b3VzIHBlcm1ldCBkZSByZXRyb3V2ZXIgZW4gdW4gc2V1bCBsaWV1LCBkYW5zIHZvdHJlIGFncmdhdGV1ciwgdG91dCBsZSBjb250ZW51IHF1aSB2b3VzIGludHJlc3NlLCBwZXUgaW1wb3J0ZSBzYSBwcm92ZW5hbmNlLiAKIkJ1aWxkIiBhIGhvbWUgb2ZmaWNlLiBUaGUgbGFyZ2VyIHRoZSBiZXR0ZXIsIGFzIHRoZSBzcXVhcmUgZm9vdGFnZSByYXRpbyB3aWxsIGFkZCB0byB5b3VyIGxvc3MuIDEwMDAgc3EgZnQgaG91c2UvYXB0LiAKVGhlcmVzIFJhZHNvbmUgRVMxMDAsIFppc2hhbiBaMywgVERBMTU0MyBiYXR0ZXJ5IGRhYyB3aXRoIGEgImhvbWVtYWRlIiBYbW9zIG1vZHVsZSwgdGhlbiB0aGVyZXMgbXkgb3RoZXIgVERBMTM4NyBwb3J0YWJsZSBEQUMgYW5kIGxhc3QgYnV0IG5vdCBsZWFzdCBteSBBdW5lIFgxcy4gSGVhZHBob25lcyBhcmUgRm9zdGV4IFRIIDYwMCwgSGlmaW1hbiBIRSA0MDAgYW5kIEF1ZGlvIFRlY2huaWNhIE01MHguIEVhcmJ1ZHMgYXJlIEVNWHM1MDAgYmFsYW5jZWQsIEVNWHM1MDAgc2luZ2xlIGVuZGVkLCBjdXN0b20gMTUwIG9obXMgaW4gZW14IHNoZWxscyBhbmQgYSBwYWlyIG9mIFZpZG9zIElsbCBiZSBnaXZpbmcgYXdheSBhdCB0aGUgbWVldCBzaW5jZSBJIGhhdmUgc28gbWFueS4gU3RpbGwgY29uc2lkZXJpbmcgYnJpbmdpbmcgbXkgQUtHIEsyNDAgU2V4dGV0dCBvciBvbmUgb2YgbXkgQmV5ZXJzLiBBbHNvIGNvbnNpZGVyaW5nIGJyaW5naW5nIG15IEJleWVyIENsb25lIGFtcGxpZmllci4KTWFrZSBzdXJlIHlvdSB0YWtlIGFkdmFudGFnZSBvZiBhICJMYXRlIFBvc2l0aW9uIiBpZiB5b3UgYXJlIHByZXNlbnRlZCB3aXRoIHRoZSBvcHBvcnR1bml0eS4uIApTbyBteSBmcmllbmQgY29tZXMgb3ZlciBhbmQgc2hlIHNtb2tlcyBsaWtlIGEgbWFzb24gamFyIGZ1bGwgb2Ygd2VlZCB3ZWVrbHkuIFdlIGdvIG91dCB0byBkaW5uZXIgYW5kIGVhdCBhIHRvbiBvZiBjaGFyY3V0ZXJpZSBhbmQgYm9uZSBtYXJyb3cgYW5kIGNha2UgYmFjayB0byBteSBob3VzZSBzbyB3ZSBjb3VsZCBkbyB0aGUgZGFtbiB0aGluZy4KV2hpY2ggaXMgY29pbmNpZGVudGFsbHkgdGhlIHNhbWUgYW1vdW50IGFzIHRoZWlyIHdhcnJhbnR5LiAKSSBnb3QgdGhlIHgxeTMgYSBmZXcgd2Vla3MgYWdvLiBJIGtub3cgSSBqdXN0IG9uZSBwZXJzb24gYW5kIEkgb25seSBoYWQgaXQgZm9yIGxlc3MgdGhhbiBhIG1vbnRoLCBidXQgZm9yIHdoYXQgaXQgd29ydGggSSBoYXZlbiBydW4gaW50byBhbnkgaXNzdWVzLiAKSGF2ZSBzdXJnZXJ5LiBJZiBvdGhlciBtZXRob2RzIGRvIG5vdCBzdWNjZWVkLCBzdXJnZXJ5IG1heSBiZSBkb25lIHRvIGNvcnJlY3QgYSBoaWF0YWwgaGVybmlhLiAKQWxsIGFyZSBhdmFpbGFibGUgb3ZlciB0aGUgY291bnRlci4gCktlZXAgcG9zdHMgYW5kIGNvbW1lbnRzIHJlbGV2YW50OiBQb3N0cyBtdXN0IGJlIGRpcmVjdGx5IG1vdGl2YXRpbmcuIE1vZGVyYXRvcnMgcmVzZXJ2ZSB0aGUgcmlnaHQgdG8gbW9kZXJhdGUgYXQgdGhlaXIgb3duIGRpc2NyZXRpb24uIFBsZWFzZSB2aWV3IHRoZSBmdWxsIHJ1bGVzIGhlcmUKVGhlIHByaWNlIG9idmlvdXNseSB2YXJpZXMgYnkgY29tcGFueSBhbmQgc29tZXRpbWVzIGJ5IGluZGl2aWR1YWwgaWYgb25lIG9mIHRoZSBwbGF5ZXJzIGlzIG1vcmUgbWFya2V0YWJsZS9mYW4gaWRlbnRpZmlhYmxlIHRoYW4gb3RoZXJzLi4gCkplc3MgYW5kIEkgbGVmdCBlYXJseSBvbiBDaHJpc3RtYXMgbW9ybmluZy4gV2UgaGFkIGEgcmVsYXRpdmVseSB1bmV2ZW50ZnVsIGZsaWdodCB0aHJvdWdoIEF0bGFudGEgYW5kIGdvdCB0byBNYW5hZ3VhIGFyb3VuZCAxIHBtLiBZb3UgY2FuIGFsd2F5cyB0ZWxsIGhvdyBkZXZlbG9wZWQgYSBjb3VudHJ5IGlzIGJ5IGl0J3MgaW1taWdyYXRpb24sIEkgZmluZC4gClBhcnQgb2YgdGhlIGpveSBvZiB0aGUgZXZlbnQgaXMgc2VlaW5nIHRoZSBidXNlcyBmcm9tIGFsbCBhY3Jvc3MgdGhlIGNvdW50cnksIHByb3VkbHkgZGlzcGxheWluZyB0aGUgbGl2ZXJpZXMgYW5kIGxvZ29zIG9mIGJ1cyBjb21wYW5pZXMgdGhhdCB3b3VsZCBuZXZlciBub3JtYWxseSBiZSBzZWVuIG9uIHRoZSBJc2xhbmQuIEFzIHdlbGwgYXMgU291dGhlcm4gVmVjdGlzMiwgdGhlIElzbGUgb2YgV2lnaHQncyBidXMgY29tcGFueSB3aXRoIGNyZWFtIGFuZCBncmVlbiBsaXZlcnksIGl0IGlzIHBvc3NpYmxlIHRvIHNlZSBidXNlcyBwcmV2aW91c2x5IG9wZXJhdGVkIGJ5IFVsc3RlcmJ1cywgQnJpZ2h0b24gSG92ZSwgV2lsdHMgRG9yc2V0LCBMb25kb24gb3IgTWVyc2V5YnVzLiBBIHZlaGljbGUgb3JpZ2luYWxseSBmcm9tIE5ldyBaZWFsYW5kIGhhcyBldmVuIHBhcnRpY2lwYXRlZC4uIApIZSdzIG5vdCBhbiBpZGVhbCBmaXQgZm9yIHRoaXMgdGVhbSBidXQgaGUgaXMgYXQgbGVhc3QgYW4gbmJhIGxldmVsIHBsYXllciBvbiBib3RoIHNpZGVzIG9mIHRoZSBmbG9vci4gTm90IGEgc3RhcnRlciBvciBhbnl0aGluZywgYnV0IGEgc2VydmljZWFibGUgcm9sZSBwbGF5ZXIuU3VycHJpc2luZ2x5IG92ZXIgdGhlIHBhc3QgNCBnYW1lcyBoZSBoYXMgdGhlIHRoaXJkIGJlc3QgKyAgb24gdGhlIHRlYW0uIApJIGhhZCBqdXN0IGZpbmlzaGVkIHdvcmsgYW5kIHdhcyBhYm91dCB0byBkcml2ZSBob21lIHdoZW4gbXkgZGFkIGNhbGxzLCBhc2tpbmcgaWYgSSBjb3VsZCBwaWNrIHVwIG15IGJyb3RoZXIgb24gbXkgd2F5IGhvbWUuIFNvLCBJIGRyaXZlIG92ZXIgdG8gbXkgYnJvdGhlciB3b3JrIHBsYWNlIGFuZCBwb3AgaW4gdG8gc2VlIHdoYXQgdGltZSBoZSBmaW5pc2hlcy4gSGUgdGVsbHMgbWUgaXQgc2hvdWxkbiBiZSB0b28gbG9uZywgc28gSSBzYXksICJHaXZlIG1lIGEgdGV4dCB3aGVuIHlvdSBhcmUgZG9uZS4iClBoeXNpY2FsIHByZXNzdXJlIHdhcyBhbHNvIGZvdW5kIHRvIGluY3JlYXNlIHJpc2sgdGFraW5nIGZvciBkZWNpc2lvbnMgd2hlcmUgcHJvYmFiaWxpdHkgb3V0Y29tZXMgd2VyZSBleHBsaWNpdCAob24gdGhlIENHVCksIGJ1dCBkaWQgbm90IGFmZmVjdCByaXNrIHRha2luZyB3aGVuIHByb2JhYmlsaXR5IG91dGNvbWVzIHdlcmUgdW5rbm93biAob24gdGhlIEJBUlQpLiAKSWYgeW91IGhhdmUgbm9uIHBsYXlpbmcgZ3Vlc3QsIHRoZXkgZG9uIGhhdmUgdG8gcGF5IHRoaXMuLiAKSSB3b25kZXIgaWYgdGhpcyBpcyBhIGdlbmVyYXRpb25hbCBzaGlmdC4gSW4gdGhlIDkwcy8wMHMsIGl0IHNlZW1lZCBsaWtlIGEgcHJldHR5IGJpZyBkZWFsIHRoYXQgd2hpdGUgcGVvcGxlIHNob3VsZG4gZXZlciBzaW5nIGFsb25nIHdpdGggdGhlIG4gd29yZCBpbiBtdXNpYy4gQmxhY2sgcGVvcGxlIHdlcmUgcmVjbGFpbWluZyB0aGUgd29yZCBmb3IgdGhlbXNlbHZlcywgYnV0IGl0IHdhcyBzYWlkIHRvIGhhdmUgd2F5IHRvbyBtdWNoIGhpc3Rvcnkgb2Ygb3BwcmVzc2lvbiBhbmQgYWJ1c2UgdGllZCB0byBpdCBmb3Igd2hpdGUgcGVvcGxlIHRvIGdldCBhd2F5IHdpdGggdXNpbmcgaXQgZXZlbiB3aGVuIHNpbmdpbmcgYWxvbmcgdG8gdGhlIGx5cmljcyBvZiBhIHNvbmcgdGhleSBsb3ZlZCBieSBhIGJsYWNrIGFydGlzdCB0aGV5IGxvdmVkLi4gCk1zLiBTY290dCBoYXMgYWxzbyBiZWVuIGF3YXJkZWQgdGhlIFJvc3MgTS4gTGVuY2UgQXdhcmQgZm9yIFRlYWNoaW5nIEV4Y2VsbGVuY2UgYW5kIHRoZSBVSCBUZWFjaGluZyBFeGNlbGxlbmNlIEF3YXJkIGluIDIwMTYsIGFuZCBoYXMgYmVlbiB0aGUgcmVjaXBpZW50IG9mIHRoZSBPdXRzdGFuZGluZyBEaWV0ZXRpYyBFZHVjYXRvciBhd2FyZCBmcm9tIHRoZSBUZXhhcyBBY2FkZW15IG9mIE51dHJpdGlvbiBhbmQgRGlldGV0aWNzIGZvciAyMDE0IDIwMTUuClRoZSBCQkMgaXMgbm90IHJlc3BvbnNpYmxlIGZvciB0aGUgY29udGVudCBvZiBleHRlcm5hbCBzaXRlcy4gUmVhZCBhYm91dCBvdXIgYXBwcm9hY2ggdG8gZXh0ZXJuYWwgbGlua2luZy4uIApFeGVyY2lzZSByb29tLCB5b2dhIGNsYXNzZXMsIHJlYWxseSBnb29kIGNvZmZlZSwgYWxsIHRoYXQgamF6ei4gCk90aGVyIHdvbWVuIHdobyBkb24ndCB1c2UgYW4gYWdlbmN5IGFyZSBwYWlkIGRpcmVjdGx5IGJ5IHVzZXJzLCB1c3VhbGx5IHZpYSBWZW5tbyBvciBQYXlQYWwuIFRoZSBQb3N0IHdhdGNoZWQgYXMgc29tZW9uZSB1c2VkIFZlbm1vIHRvIHNlbmQgJDIwICAgaW4gZXhjaGFuZ2UgZm9yIGEgdG9wbGVzcyBwaG90byAgIHRvIGEgTG9zIEFuZ2VsZXMgYmFzZWQgZmVtYWxlIGNvbWVkaWFuLiBUaGUgY29taWMsIHdobyBkZWNsaW5lZCB0byBiZSBpbnRlcnZpZXdlZCwgcG9zdHMgcHJldmlld3Mgb2YgaGVyIHJhY3kgY29udGVudCBvbiBTbmFwY2hhdCBhbmQgSW5zdGFncmFtIChvbiB3aGljaCBzaGUgaGFzIHNvbWUgMTI2LDAwMCBmb2xsb3dlcnMpLCB3aXRoIGVtb2ppcyBjb3ZlcmluZyBwYXJ0cyBvZiBoZXIgbmFrZWQgYm9keS4gClRoaXMgaXMgdmVyeSBzaW1pbGFyIHRvIHBva2VyLCBhIGdhbWUgd2hlcmUgeW91IHRlbmQgdG8gZXhhbWluZSBwYXN0IGV4YW1wbGVzLgpUaGF0IGhhc24ndCBoYXBwZW5lZCBpbiBBbWVyaWNhIGRlc3BpdGUgZGVjYWRlcyBvZiBmb3Jld2FybmluZywgYnV0IEkgaGF2ZSBob3BlIHRoYXQgS29yZWFuIHNvY2lldHkgYXMgYSB3aG9sZSBpcyBzbWFydGVyIG9yIGF0IGxlYXN0IG1vcmUgYXdhcmUgb2YgcmVhbGl0eSB0aGFuIHRoYXQuIApNa2FuIHlvayBiaWxpeW9ydW0gYW1hIGx0ZmVuIGJpcmkgYmVuaSBLYWRpciBNc3JvbHUgTmloYXQgSGF0aXBvbHUgTmloYXQgRG9hbiBCYWxpZWsgbHRlciBBaG1ldCBIYWthbiBPcmhhbiBHZW5jZWJheSBIdWx1c2kgQWthciBGZXRodWxsYWggR2xlbiBUcmtpeWUgYWxzbiwgYmVuaSBEYXJpbyBNb3Jlbm8gVHVyYW4gRHVyc3VuIEZ1YXQgS3BybCBicmFoaW0gYWxsIE5paGFsIEF0c3ogS2F6bSBLYXJhYmVraXIgTmF6bSBIaWttZXQgRmlrcmV0IEt6bG9rIE1ldGluIE9rdGF5IFRhbmp1IE9rYW4gdmUgZW4gbmVtbGlzaSBNdXN0YWZhIEtlbWFsIFRya2l5ZSBnZXJpIGd0cnNuLiBMdGZlbi4gCkFjY29yZGluZyB0byB0aGUgbGF3c3VpdCAodmlhIFRNWiksIFRyYXZvbHRhIHJlc3BvbmRlZCB0byB0aGUgbWFzc2V1ciBvbmxpbmUgYWQgYW5kIGFycmFuZ2VkIGFuIGFwcG9pbnRtZW50LiBUcmF2b2x0YSBpbmNsdWRlZCBzcGVjaWZpYyBpbnN0cnVjdGlvbnMgdGhhdCBoZSB3b3VsZCBwaWNrIHVwIHRoZSBtYXNzZXVyIGFuZCB0YWtlIGhpbSB0byB0aGUgQmV2ZXJseSBIaWxscyBIb3RlbCB0byBwZXJmb3JtIHRoZSAkMjAwIG1hc3NhZ2UuIFRoZSB1bm5hbWVkIG1hc3NldXIgYWdyZWVkIHdpdGhvdXQga25vd2luZyBhdCB0aGUgdGltZSB0aGF0IGl0IHdhcyB0aGUgZmFtb3VzIEhvbGx5d29vZCBhY3RvciBib29raW5nIHRoZSBtYXNzYWdlLgpJdCBlbmRzIHVwIGJlaW5nIHNlY29uZCBuYXR1cmUuIEJ1dCB0aGF0IHNlY29uZCBuYXR1cmUgZGVwZW5kcyBvbiBwZW9wbGUgZm9sbG93aW5nIG91ciBydWxlcyBhbmQgcGF0dGVybnMuIEFuZCB3aGVuIHRoZXkgZG9uIHdlIGhhdmUgdG8gZm9jdXMuIApUbyBtZSBydW5uaW5nIGl0IHR3aWNlIGp1c3QgbWFrZXMgY2hlYXRpbmcgYW5kIGNvbGx1c2lvbiB0aGF0IG11Y2ggZWFzaWVyLiBUaGUgb25seSByZWFzb24gY2hlYXRpbmcgaGFzbid0IGJlY29tZSBhbiBpc3N1ZSBpcyBiZWNhdXNlIGV2ZXJ5b25lIHdobyBwbGF5cyBrbm93cyB3aGljaCBwZW9wbGUgYXJlIHBsYXlpbmcgdG9nZXRoZXIsIHNwbGl0dGluZyBhZnRlciB0aGUgZ2FtZSwgcnVubmluZyBwZW9wbGUgb3V0IG9mIHBvdHMgdG8gcnVuIGl0IHR3aWNlIHdpdGggdGhlaXIgYnVkZHkgZXRjLiBCdXQgdGhlc2UgcGxheWVycyBhcmUgc28gYmFkIHRoZXkgYXJlIHN0aWxsIGxvc2luZyB3aGlsZSBhY3RpdmVseSBjb2xsdWRpbmcgaW4gaGFuZHMuIDc3IHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvCkkgc3VzcGVjdCB0aGF0IHRoaXMgYWN0aXZpdHkgYXQgdGhlIGxhYm9yYXRvcnkgd2FzIG5vdCB3aWRlbHkga25vd24uLiAKRml2ZSBvbmxpbmUgZ2FtYmxpbmcgYmVzdCBnYW1lczogdmlkZW8gcG9rZXIsIGNyYXBzLCBibGFja2phY2ssIHNsb3RzIGFuZCBiYWNjYXJhdCB3aXRoIGluZm9ybWF0aW9uIG9uIHdpbm5pbmcgc3RyYXRlZ2llcy4gQWxzbyBjb250YWlucyBhbmQgY292ZXJzIHJvdWxldHRlLCB3YWdlciBtYW5hZ2VtZW50IGFzIHdlbGwgYXMgd29yc3QgYmV0cy4gVG9wIExhcyBWZWdhcyBhbmQgTGF1Z2hsaW4gY2FzaW5vcy4gCiJUaGF0IGlzIGEgZmlyc3QiLCBzaGUgdGhpbmtzLiAKTVAgaXMgd2lkZXIgdGhhbiB0aGF0IGFuZCB3aWxsIGZvbGQgbW9yZSBvZnRlbiwgc3VyZSwgYnV0IGl0IG5vdCBlc3BlY2lhbGx5IHJlbGV2YW50IHdoZW4geW91IG11bHRpIHdheSBsaWtlIHRoaXMuIApJbiBmYWN0LCB0aGVyZSBhcmUgbm90IGEgZGlzcHJvcG9ydGlvbmF0ZSBudW1iZXIgb2YgcmFwaXN0cyBhbW9uZyB1bmRvY3VtZW50ZWQgaW1taWdyYW50cy4gCkkgc3RhcnRlZCB0aGUgTXVzaWNpYW5zIEd1aWxkLCBhIHZpcnR1YWwgY2x1YiBmb3IgbXVzaWNpYW5zIGFuZCBtdXNpYyBhZmZpY2lvbmFkb3MuIApBbHNvIHRoYXQgb3RoZXIgZ3V5IC4gClRoZXJlJ3MgYSByZWFzb24gb25lIG9mIHRoZSBtb3N0IG1lbW9yYWJsZSBzY2VuZXMgaW4gYWxsIG9mICJHYW1lIG9mIFRocm9uZXMiIHdhcyBDZXJzZWkncyBuYWtlZCB3YWxrIHRocm91Z2ggdGhlIHRvd24gc3F1YXJlLCBwZWx0ZWQgd2l0aCBmb29kIGFuZCBodW1hbiB3YXN0ZSwgdG8gYSBncm91cCBjaGFudGluZyBvbmUgd29yZDogIlNoYW1lISIuIApGb3IgbWUsIHRoaXMgd2FzIGFsbW9zdCBsaWtlIHdvcmtpbmcgb3V0ICAgeW91IGhhdmUgdG8gd29yayB0aHJvdWdoIHRoZSBwYWluIGFuZCB0aGUgZXhoYXVzdGlvbiBpbiBvcmRlciB0byBnZXQgYmV0dGVyIGFuZCBncm93LiBJZiBpdCBkb2VzbiBodXJ0LCBpdCBub3QgZ29pbmcgdG8gZG8gYW55dGhpbmcuIEkgaGFkIHRvIGJhc2ljYWxseSB3b3JrIG91dCBteSBzb2NpYWwgc2tpbGxzLCBhbmQgd2hpbGUgaXQgd2FzIGFsd2F5cyBwYWluZnVsIGFuZCB1bmNvbWZvcnRhYmxlLCBJIGRpZCBnZXQgYmV0dGVyIHRocm91Z2ggaXQuClJhcGUgaXNuIG1vdGl2YXRlZCBieSBhIGRlc2lyZSBmb3Igc2V4dWFsIGdyYXRpZmljYXRpb24sIGJ1dCByYXRoZXIgdGhlIGRlc2lyZSB0byBkb21pbmF0ZS8gY2xhaW0gcG93ZXIuV2hlbiBwZW9wbGUgZ2V0IHJvYmJlZCwgaXQgdXN1YWxseSBiZWNhdXNlIHRoZSByb2JiZXIgd2FudHMvbmVlZHMgdGhlIG1vbmV5IGl0c2VsZi4gCkkgZGlkIGEgYml0IG1vcmUgbG9va2luZyBhdCB0aGVtLiAKSWYgdGhlIGZpc2ggaXMgdGhhdCBjb25jZXJuZWQgYWJvdXQgbWFraW5nIGZyaWVuZHMgYW5kIHNvY2lhbGl6aW5nIHdpdGggc3RyYW5nZXJzLCBoZSBvciBzaGUgY291bGQgZ28gdG8gdGhlIGJhciBvciBqb2luIGEgc3BvcnRzIHRlYW0gb3IgYSBjbHViIGFuZCBwb3RlbnRpYWxseSBzcGVuZCBjb25zaWRlcmFibHkgbGVzcyBtb25leSB0aGFuIGJ5IHBsYXlpbmcgcG9rZXIuIApZb3UgbWFkZSBtZSB0b3VnaGVyLiBZb3UgbGV0IHlvdXIgcGVyc29uYWwgZmVlbGluZ3MgZm9yIGluZGl2aWR1YWxzIGFmZmVjdCB3aGF0IHdvcmsgd2FzIHByZXNlbnRlZCB0byB0aGUgY2xpZW50LiAKV2UgZG8gbm90IHdhbnQgb3VyIHN1YnJlZGRpdCBsaXR0ZXJlZCB3aXRoIGdlbmVyYWwgdXBsaWZ0aW5nLiBMZXQga2VlcCB0aGUgcGVvcGxlIHdobyBORUVEIHN1cHBvcnQgaW4gdGhlIHNwb3RsaWdodCBhbmQgZ2l2ZSB0aGVtIGRpcmVjdCBzdXBwb3J0IS4gCkkgbmV2ZXIgYmVlbiBhIHRvdGFsIG5vbiByZWFkZXIsIGJ1dCBwYXJ0IG9mIG1lIHdhbnRpbmcgdG8gZG8gdGhlIDUyIGNoYWxsZW5nZSB3YXMgYmVjYXVzZSBhbHRob3VnaCBJIGVuam95IHJlYWRpbmcgSSBkb24gbWFrZSB0aW1lIGZvciBpdC4gCk9jY2FzaW9uYWxseSBhIGxpbmUgb2YgZ3JheSBjYXJzIGNyYXdscyBhbG9uZyBhbiBpbnZpc2libGUgdHJhY2ssIGdpdmVzIG91dCBhIGdoYXN0bHkgY3JlYWssIGFuZCBjb21lcyB0byByZXN0LCBhbmQgaW1tZWRpYXRlbHkgdGhlIGFzaCBncmF5IG1lbiBzd2FybSB1cCB3aXRoIGxlYWRlbiBzcGFkZXMgYW5kIHN0aXIgdXAgYW4gaW1wZW5ldHJhYmxlIGNsb3VkLCB3aGljaCBzY3JlZW5zIHRoZWlyIG9ic2N1cmUgb3BlcmF0aW9ucyBmcm9tIHlvdXIgc2lnaHQuIAoiWW91IHRoaW5rIHlvdSBjYW4gYmUgY29vbCBhbmQgbGF1bmNoIHlvdXIgb3duIGQgdG8gYyBicmFuZHM/IiBLYXdhamEgYXNrZWQgdHJhZGl0aW9uYWwgbWFya2V0ZXJzIGluIHRoZSByb29tLiAiVGhpbmsgYWJvdXQgYSBtaWRkbGUgYWdlZCB3aGl0ZSBtYW4gdHJ5aW5nIHRvIGRhbmNlLiIgSGUgdGhlbiBzaG93ZWQgYSBHSUYgb2YgZm9ybWVyIE5ldyBKZXJzZXkgR292LiAKIkFsYXNrYSBpcyBhbiBpZGVhbCBsb2NhdGlvbiBmb3IgVUFWIG9wZXJhdGlvbnMgZHVlIHRvIHRoZSBtYW55IGNpdmlsaWFuIG1pc3Npb25zIHRoYXQgY2FuIGJlbmVmaXQgZnJvbSB1bm1hbm5lZCBzeXN0ZW1zLCIgc3RhdGVzIEdyZWcgV2Fsa2VyLCBtYW5hZ2VyIG9mIHRoZSBQb2tlciBGbGF0IFJlc2VhcmNoIFJhbmdlLiAKSGF2aW5nIGFuIGV4dGVybmFsIEhERCB3b3VsZCBub3QgZml4IHRoaXMgaXNzdWUgZWl0aGVyLiBEaXNrcyBnbyBiYWQgYWxsIHRoZSB0aW1lIE9TZXMgZ28gY29ycnVwdCBhbGwgdGhlIHRpbWUuIEkgaGF2ZSBhIGNhcmVlciBiZWNhdXNlIGNvbXB1dGVycyBzdWNrISBFdmVyeSBhcHAgeW91IGluc3RhbGwgdGhhdCBoYXMgZGF0YSB0aGF0IGlzIGltcG9ydGFudCB0byB5b3UgeW91IGhhdmUgdG8gbG9vayBhbmQgc2VlIHdoZXJlIGl0IHN0b3JlIHRoZSBkYXRhLiBNYWtlIHN1cmUgdGhhdCBsb2NhdGlvbiBpcyBiYWNrZWQgdXAuIEl0IGEgUElUQSBidXQgbG9vc2luZyBkYXRhIGlzIG1vcmUgb2YgYSBQSVRBLiBDYXJib25pdGUgd2lsbCBiYWNrIHVwIGFsbCB3ZWxsIGtub3duIGZvbGRlcnMgYnV0IHRoaW5ncyBsaWtlIEhNMiBtaWdodCBub3Qgc3RvcmUgaXQgZGF0YSBpbiB0aGUgdXN1YWwgcGxhY2VzLiBTbyBtYWtlIHN1cmUgeW91IGFyZSBsb29raW5nIHVwIG9uIHRoZSB3ZWIgaG93IHRvIGJhY2sgdXAgeW91ciBkYXRhYmFzZS4gVGhlcmUgaXMgbm9ybWFsbHkgYSBtZW51IG9wdGlvbiBmb3IgdGhpcyBhbmQgeW91IGNhbiBiYWNrIGl0IHVwIHRvIHlvdXIgbXkgZG9jdW1lbnRzIGFuZCB0aGVuIHRoYXQgd2lsbCBnZXQgYmFja2VkIHVwIHRvIENhcmJvbml0ZSBjbG91ZC4gT3IgYmFjayBpdCB1cCB0byBHb29nbGUgZHJpdmUgc28gaXQgbm90IG9uIHlvdXIgbWFjaGluZSBpdCBpbiB0aGUgY2xvdWQuIFJlbWVtYmVyIGZpcmVzLCBmbG9vZHMsIHRoZWZ0IG1ha2VzIGRhdGEgZ28gYXdheSBhbHNvIGFuZCBpcyBzdG9yZWQgY2xvc2Ugb3IgaW4gdGhlIHNhbWUgaG91c2UuCkl0IGhhcyBhIGNvbXBsZXggc2V0IG9mIHJ1bGVzOiB3aGVuIHRoZSB0b3RhbCB2YWx1ZSBvZiB0aGUgY2FyZHMgZ29lcyBpbnRvIGRvdWJsZSBmaWd1cmVzLCB0aGUgZmlyc3QgZGlnaXQgb2YgdGhlIHRvdGFsIGRvZXMgbm90IGNvdW50ICAgc28gdHdvIHNpeGVzIGFkZCB1cCB0byB0d28gcmF0aGVyIHRoYW4gMTIuIEFuZCB0aGVyZSBhcmUgZnVydGhlciBzZXQgaW5zdHJ1Y3Rpb25zIG9uIHdoYXQgZnVydGhlciBjYXJkcyBtdXN0IGJlIGRyYXduLCB1bmxpa2UgaW4gYmxhY2tqYWNrIHdoZXJlIHRoZSBwbGF5ZXIgaGFzIHRoZSBvcHRpb24uLiAKQXMgd2UgaGF2ZSBzZWVuIGFib3ZlLCB5b3UgYXJlIG5vdCBjb21wZXRpbmcgYWdhaW5zdCByZWFsIHBsYXllcnMsIGJ1dCBhZ2FpbnN0IGEgbWFjaGluZS4gRG9lcyB0aGF0IG1lYW4gdGhhdCB0aGUgZ2FtZSBpcyBub3QgY29tcGxldGVseSBmYWlyPyBEb2VzIGl0IG1lYW4gdGhhdCB5b3Ugd2lsbCBiZSBjaGVhdGVkIG91dCBvZiB5b3VyIG1vbmV5PyBZb3UgbXVzdCBrbm93IHRoYXQgdGhlIGdhbWUgaXMgY29udHJvbGxlZCBieSBhbiBSTkcgb3IgUmFuZG9tIE51bWJlciBHZW5lcmF0b3IuIApXaGlwcGxlLCBXaWxzb24gYWxzbyBwZXJmb3JtZWQgb24gdGhlIGRpbm5lciB0aGVhdGVyIGNpcmN1aXQsIHNob3Qgb2NjYXNpb25hbCBzdGFuZHVwIGNvbWVkeSBzaG93cyBhbmQgd29ya2VkIG9uIGRvemVucyBvZiBUViBzaXRjb21zLiAKQXQgdGhlIGJpcnRoIG9mIG1vZGVybml0eSwgYXMgdGhlIHJ1bGluZyBjbGFzc2VzIHNlcGFyYXRlZCB0aGVtc2VsdmVzIGZyb20gdGhlIHdvcmtpbmcgY2xhc3NlcyBhbmQgcG9vciwgdGhleSBtYXJrZWQgcG9vciB3b21lbiBhcyBub3QgYXMgZ29vZCBhcyBtaWRkbGUgY2xhc3Mgd29tZW4sIHdobyB3ZXJlIGFsc28ga25vd24gYXMgbGFkaWVzLiAKV2hlbiB5b3UgaW5zdGFsbCBMb2dpYywgaW4gYWRkaXRpb24gdG8gdHlwaW5nIGluIHlvdXIgc2VyaWFsIG51bWJlciAodXNlcnMuIDI4IE1hciAyMDA5IC4gClNDT1JJTkcgUkFDRTogSXQgc2hhcGluZyB1cCB0byBiZSB0aGUgYmVzdCBkdWVsIHNpbmNlIEVyaWUgRHlsYW4gU3Ryb21lIGFuZCBMb25kb24gTWl0Y2ggTWFybmVyIHBvaW50cyBqb3VzdCBkdXJpbmcgdGhlIDIwMTQgMTUgc2Vhc29uIHdoZW4gdGhlIGN1cnJlbnQgQmxhY2toYXdrIG91dGxhc3RlZCB0aGUgTWFwbGUgTGVhZnMgc3RhciB3aXRoIGEgc2l4IHBvaW50IGV4cGxvc2lvbiBvbiB0aGUgZmluYWwgZGF5LiBUaGV5IGVuZGVkIHVwIGdvaW5nIHRoaXJkIGFuZCBmb3VydGggb3ZlcmFsbCBpbiB0aGUgTkhMIGRyYWZ0IHRoYXQgc3VtbWVyLiAKIlRoZSBhdmVyYWdlIHJldHVybiBvZiBhbGwgZ2FtaW5nIG1hY2hpbmVzIG92ZXIgdGhpcyBwZXJpb2QgW3dhc10gYWJvdXQgOTAgcGVyIGNlbnQsIiB0aGUgc3Bva2VzbWFuIHNhaWQuICJIb3dldmVyLCB0aGUgcmV0dXJuIGR1cmluZyBhIHNpbmdsZSBwbGF5aW5nIHNlc3Npb24gdmFyaWVzICAgYSBwbGF5ZXIgbWF5IHdpbiBtb3JlIHRoYW4gdGhleSBwdXQgaW50byBhIG1hY2hpbmUgb3IgdGhleSBtYXkgbG9zZSBtb3JlIHRoYW4gMTUlLiIgVXNpbmcgdGhlc2UgYXNzdW1wdGlvbnMsIHRoZSByZWdpb24gbG9zdCBhIGNvbGxlY3RpdmUgJDI1MCBtaWxsaW9uIHRvIHRoZSBwb2tpZXMgaW4gMjAxNC8xNS4gVW5zdXJwcmlzaW5nbHksIHRoZSBXb2xsb25nb25nIExvY2FsIEdvdmVybm1lbnQgQXJlYSBoYWQgdGhlIGJpZ2dlc3QgcG9rZXIgbWFjaGluZSB0dXJub3Zlciwgd2l0aCAkMS44NSBiaWxsaW9uIHB1c2hlZCB0aHJvdWdoIG1vcmUgdGhhbiAzMDAwIGdhbWluZyBtYWNoaW5lcy4gCkhlIHdhcyBjb21tZW50aW5nIG9uIHRoZSBmYWN0IHRoYXQgeW91IHNhaWQgdGhleSByZWxlYXNlZCBhbiB1bmZpbmlzaGVkIGdhbWUgd2hlbiB0aGUgZ2FtZSB3YXMgYWx3YXlzIGdvaW5nIHRvIGJlIGZpcnN0IHJlbGVhc2VkIHdpdGhvdXQgbXVsdGlwbGF5ZXIuIApXZSBhbGxvdyBzb21lIGltYWdlcyB0byByZWNpcmN1bGF0ZSBpZiBhIHBlcmlvZCBvZiB0aW1lIGhhcyBwYXNzZWQsIG9yIGlmIGl0IHByZXZpb3VzbHkgZGlkIG5vdCByZWNlaXZlIG11Y2ggYXR0ZW50aW9uLiBJZiB5b3VyIHBvc3QgaXMgcGFydCBvZiBhIGNsdXN0ZXIgb2Ygc3VibWlzc2lvbnMgb2YgdGhlIHNhbWUgaW1hZ2UgaXQgd2lsbCBiZSByZW1vdmVkLltNXSAgMCBwb2ludHMgIHN1Ym1pdHRlZCA4IG1vbnRocyBhZ29IaSAvdS9TbGF4ZXJNZWxvbiwgdGhhbmtzIGZvciB5b3VyIHN1Ym1pc3Npb24gdG8gL3IvQm9zc2ZpZ2h0ISBVbmZvcnR1bmF0ZWx5IGl0IGhhcyBiZWVuIHJlbW92ZWQgZm9yIHRoZSBmb2xsb3dpbmcgcmVhc29uKHMpOlJ1bGUgNTogUmVwb3N0cyB3aWxsIGJlIHJlbW92ZWQgYXQgdGhlIG1vZGVyYXRvcnMgZGlzY3JldGlvbiwgdGhpcyBpbmNsdWRlcyBidXQgaXMgbm90IGxpbWl0ZWQgdG8gcmVwb3N0cyB3aXRoIHRoZSBzYW1lIHRpdGxlIGFzIHByZXZpb3VzIHN1Ym1pc3Npb25zLiAKUHAuIEFuZCBSb3dlLCBKLiAyMDE2LiAKU1NEIHdvbid0IGdpdmUgYW55IGFkdmFudGFnZSBvdmVyIDcyMDAgUlBNcywgd2hpbGUgdGhlcmUgaXMgYSBsb3QgaW5mb3JtYXRpb24gZ29pbmcgb24gaXRzIGFsbCBzdXBlciBzbWFsbCBhbW91bnQgb2YgZGF0YS4gSSBtZWFuIGEgYnVkZHkgb2YgbWluZSB3aG8gcmVjZW50bHkgc3RvcHBlZCBwbGF5aW5nIG9ubGluZSBwb2tlciBmb3IgYSBsaXZpbmcgaGFkIG1pbGxpb25zIG9mIGhhbmRzIGluIGhpcyBkYXRhYmFzZSB3aGljaCB0b29rIHVwIG5vIG1vcmUgdGhhbiAyMEdCIEkgdGhpbmsgaGUgc2FpZC4gClVzZXJzIGNvbnRpbnVlIHRvIGV4aXQgdGhlIHBsYXRmb3JtLCBhbmQgcGVyaGFwcyBub3QgY29pbmNpZGVudGFsbHksICBleGVjcyBjb250aW51ZSB0byBleGl0IHRoZSBjb21wYW55IGluIGRyb3Zlcy4gCkMnZXN0IGFpbnNpIHF1ZSBqJ2FpIGV1IGwnaWRlIGlsIHkgYSBxdWVscXVlcyBqb3VycyBkZSBkamV1bmVyIHBhcyB0cnMgbG9pbiBkZSBtb24gY2FiaW5ldCBjaGV6IEx1eiBWZXJkZSwgcmVzdGF1cmFudCBtZXhpY2FpbiBkdSA5bWUgYXJyb25kaXNzZW1lbnQuIAooTmVnYXRpbmcgc2VsZiBkYW1hZ2UgaXMgZ29vZCkKNy4gTWFrZSBUaGUgVG90ZSBCb29zdCBIb3JzZXJjaW5nIFdlIGhhdmUgbm8gaWRlYSB3aGF0IHRoYXQgbWVhbnMuIFByb2JhYmx5IHdoeSBpdCBvbmx5IGdvdCBvbmUgc2lnbmF0dXJlLgpDaHJpc3RvcGhlciBXYXR0cyBhZG1pdHMgdG8gbXVyZGVycyBvZiBkYXVnaHRlcnMgaW4gQ0JJIGludGVydmlldwpPbmNlIHlvdXIgYWNjb3VudCBpcyBjbG9zZWQsIG5laXRoZXIgeW91IG5vciBvdXIgc3RhZmYgd2lsbCBiZSBhYmxlIHRvIHJlb3BlbiBpdCBsYXRlci4gCkFsc28sIGJlaW5nIGFibGUgdG8gY2F0Y2ggU2FmYXJpIFBva2Vtb24gd2hpbGUgc3VyZmluZy4KSXQgd2lsbCBkZXBlbmQgb24geW91ciBzcGVjaWZpYyBpbnN1cmFuY2UgcG9saWN5LCBidXQgeW91IHdpbGwgbW9zdCBsaWtlbHkgaGF2ZSB0byBlbmQgdXAgcGF5aW5nIGZvciBpdCBuZXh0IHllYXIuIE1vc3QgaW5zdXJhbmNlcyB3b24ndCBidXkgdGhlIG1hY2hpbmVzIG91dHJpZ2h0ICAgdGhleSB3YW50IGV2aWRlbmNlIHRoYXQgeW91J3JlIGFjdHVhbGx5IHVzaW5nIGl0LiBUaGUgY29zdCBvZiB5b3VyIG1hY2hpbmUgd2lsbCBtb3N0IGxpa2VseSBiZSBzcGxpdCBvdmVyIGEgeWVhciwgYmVpbmcgYmlsbGVkIG1vbnRobHkuIFlvdXIgaW5zdXJhbmNlIHdpbGwgbW9zdCBsaWtlbHkgYXNrIGZvciBjb25maXJtYXRpb24gZnJvbSB5b3VyIGRvY3RvciB0aGF0IHlvdSdyZSB1c2luZyB0aGUgbWFjaGluZSByZWd1bGFybHkuIEFnYWluIHRob3VnaCwgbm90IGV2ZXJ5IGluc3VyYW5jZSBwb2xpY3kgaXMgdGhlIHNhbWUuIFRoZSBiZXN0IHRoaW5nIHRvIGRvIHdvdWxkIGJlIHRvIHRhbGsgdG8gdGhlIHBlb3BsZSB3aG8gc3VwcGx5IHlvdXIgY3BhcCwgdGhleSdsbCBrbm93IHdoYXQgdGhlIHByb3RvY29sIGlzIGFuZCB3aGV0aGVyIHRoZXJlJ3MgYW55IHdheSB0byBoZWxwIHlvdSBvdXQuClRoZSBlbWVyZ2VuY3kgYWxsb3dzIFRydW1wIHRvIGRpdmVydCBmdW5kcyBmcm9tIERlZmVuc2UgRGVwYXJ0bWVudCBhY2NvdW50cyB3aXRob3V0IGNvbmdyZXNzaW9uYWwgYXBwcm92YWwgdG8gYnVpbGQgdGhlIHdhbGwuIFRoaXMgaXMgYWJvdXQgcGF0cmlvdGlzbS4iSG91c2UgUmVwdWJsaWNhbiBsZWFkZXIgS2V2aW4gTWNDYXJ0aHkgb2YgQ2FsaWZvcm5pYSwgc2FpZCBoZSBhZ3JlZWQgd2l0aCBUcnVtcCB0aGF0IHRoZXJlIGlzIGEgY3Jpc2lzIGF0IHRoZSBib3JkZXIgYW5kIHRoYXQgdGhlIGVtZXJnZW5jeSBkZWNsYXJhdGlvbiB3YXMgYSBwcm9wZXIgZXhlcmNpc2Ugb2YgcHJlc2lkZW50aWFsIHBvd2VyLiJUaGlzIGlzIG5vdCBhIHdhbGwgZnJvbSBzZWEgdG8gc2hpbmluZyBzZWEsIiBzYWlkIE1jQ2FydGh5LCBvZiBDYWxpZm9ybmlhLiAKIlRoZSBzaGVlciBicmVhZHRoIG9mIG93bmVyc2hpcCB0aGF0IHRoaXMgY29tcGFueSBhZmZvcmRzIGlzIGltcHJlc3NpdmUsIiBzYXlzIEFtYW5kYSBMeW5uLCBWaWNlIFByZXNpZGVudCBvZiBQZW9wbGUsICJiZWNhdXNlIHRoZSBwYWNlIGF0IHdoaWNoIHlvdSBjYW4gZ3JvdyBhbmQgYmUgY2hhbGxlbmdlZCBpcyBxdWl0ZSBhY2NlbGVyYXRlZCBjb21wYXJlZCB0byBvdGhlciBjYXJlZXIgcGF0aHMgb3IgY29tcGFuaWVzLiBBbmQgaXQncyBub3Qgb25seSB0aGUgdm9sdW1lIG9mIHdvcmsuIFdpdGggdGhlIG9wcG9ydHVuaXRpZXMgd2Ugb2ZmZXIsIGl0J3MgYWxzbyB0aGUgc3RyZXRjaCBvZiB0aGUgd29yay4iCkJ1dCB5b3UgSEFWRSB0byBhc2sgYSBkZXRhaWxlZCwgd2VsbCB0aG91Z2h0IG91dCBxdWVzdGlvbiwgYW5kIHByb3ZpZGUgZXZpZGVuY2UgdGhhdCB5b3UgcmVhbGx5IGRpZCB0cnkgdG8gZmluZCB0aGUgYW5zd2VyIG9uIHlvdXIgb3duLklmIHlvdSBqdXN0IGFzayAiQ2FuIHNvbWVvbmUgZXhwbGFpbiBzcGFubmluZyB0cmVlIHRvIG1lPyIgaW4gL3IvbmV0d29ya2luZyB0aGUgdGhyZWFkIHdpbGwgYmUgZGVsZXRlZCBpbiBhYm91dCA0IG1pbnV0ZXMsIGFuZCB0aGVyZSBpcyBhIDMzJSBjaGFuY2UgeW91IHdpbGwgYmUgYmFubmVkLiAKSGlzIHN1aXRjYXNlIGlsbHVzdHJhdGVzIGl0LiAKVGhlIHNjZW5lcyBhcmUgYSBjdXJpb3VzIGNyZWF0aXZlIGNob2ljZSwgY29uc2lkZXJpbmcgdGhhdCBtdWNoIG9mIHRoZSBjb3VudHJ5IGlzIGJ1cmllZCBpbiBzbm93IG9yIGRlYWxpbmcgd2l0aCBmcmVlemluZyB0ZW1wZXJhdHVyZXMuIApEZWFsaW5nIGEgYmFkIGhhbmQgYXQgdGhlIGdlbnRpYyBwb2tlciBnYW1lClRoZSBudXRyaXRpb25hbCB0cmVhdG1lbnRzIHRoYXQgaGF2ZSBiZWVuIHRlc3RlZCBmb3IgQURIRCBpbmNsdWRlIHppbmMsIG1hZ25lc2l1bSwgZGlldHMgd2l0aG91dCBhcnRpZmljaWFsIGNvbG9yaW5ncyBhbmQgZmxhdm9yaW5ncywgYW5kIG9tZWdhIGZhdHR5IGFjaWRzLiAKSSBjb3VsZCBoYXZlIGdvdHRlbiB0aGUgbGltaXRlZCBlZGl0aW9uIGZpZ3VyZXMuIEkgd291bGQgaGF2ZSBhd2Vzb21lIG1lbW9yaWVzIG9mIHRoYXQgZXZlbnQgYnV0IG5vcGUsIEEgZ290IGludml0ZWQuIEFuZCBldmVuIHRob3VnaCBteSBzYWx0IHNob3VsZCBiZSBhaW1lZCBhdCBOLCB3aGljaCBpdCBpcywgbXkgc2FsdCBmb3IgQSBpcyBtdWNoIGdyZWF0ZXIuLiAKQXMgZm9yIGZhbWlseSBvcHRpb25zLCBpIGRvbid0IGtub3cgZXhhY3RseSB3aGF0IHlvdSBtZWFuIGJ1dCBpZiB5b3UgYWN0dWFsbHkgcXVhbGlmeSBmb3IgYSB0ZW1wIHJlc2lkZW50IGNhcmQgdGhlbiB5b3VyIGRlcGVuZGVudHMgY2FuIGdldCB0aGVpciBvd24gY2FyZHMgbm8gcHJvYmxlbXMuIEluIHRoZSBvdGhlciBoYW5kIElmIHlvdSBoYXZlIGEgVk5lc2Ugd2lmZSB0aGVuIHlvdSBzaG91bGQgYmUgYXBwbHlpbmcgZm9yIGEgc3BvdXNlIHZpc2Egd2hpY2ggaXMgZGlmZmVyZW50IGFuZCBnaXZlcyB5b3UgYSA1IHllYXIgY2FyZC4KT3VyIGZvdW5kaW5nIGZhdGhlcnMgZ2F2ZSB1cyBhIHZlcnkgc3BlY2lmaWNhbGx5IGRlc2lnbmVkIGdvdmVybm1lbnQuIApUaGUgc2Vjb25kYXJ5IHJlYXNvbiBvbiBsaW5lIHBva2VyIHJlcXVpcmVzIGRpZmZlcmVudCBtb25leSBoYW5kbGluZyBza2lsbHMgaXMgbW9zdCBnYW1lcnMgZG8gbm90IHBsYXkgdGhlaXIgdXRtb3N0IGdhbWUgYWJvdXQgdGhlIHdlYi4gSW4gYSBsaXZlIGdhbWUgdGhlcmUgYXJlIGFkZGl0aW9uYWwgYmx1ZmZzOyBiZXRzIGFyZSBtYWRlIG1vcmUgb2Z0ZW4gb24gbWFyZ2luYWwgaGFuZHMuIApXYXNuJ3QgdW50aWwgeWVhcnMgbGF0ZXIgd2hlbiBJIGNvbm5lY3RlZCB0aGUgZG90cyBhbmQgcmVhbGl6ZWQgd2hhdCBwcm9iYWJseSBoYXBwZW5lZC4uIApVbmZvcnR1bmF0ZWx5IHRoZXJlIHdlcmUgbm8gc3VjaCBldmVudHMgb24gd2hlbiBJIHdhcyB0aGVyZSBidXQgdGhlIHB1YiB3YXMgYnVzdGxpbmcgZW5vdWdoIGV2ZW4gd2l0aG91dCB0aGUgcHJvbWlzZSBvZiBlbnRlcnRhaW5tZW50LgpJIHBlcnNvbmFsbHkgcGxheSBvbiBnbG9iYWwgNCA1IGRheXMgYSB3ZWVrLCBiaW5rZWQgbXkgbGFyZ2VzdCBvbmxpbmUgd2luIGVhcmx5IGxhc3QgbW9udGggYW5kIGdvdCBjYXNoZWQgb3V0IGZ1bGx5IHdpdGhpbiAyIGRheXMuIAooRnVsbCBBbnN3ZXIpLiAKU29tZXRpbWVzIHRoZSB3aW5uZXJzIGluIEZyZWUgUG9rZXIgQ2FzaW5vcyB3aWxsIGdldCBzbWFsbCBnaWZ0cyBsaWtlIGEgVCBTaGlydCBmb3IgZXhhbXBsZS4gQnV0IGF0IGxlYXN0IGlmIHlvdSB3YW50IHRoZSBydXNoIG9mIHBsYXlpbmcgd2l0aG91dCBwdXR0aW5nIHJlYWwgbW9uZXkgb24gdGhlIGxpbmUsIGdhbWJsaW5nIHdpdGhvdXQgeW91ciBtb25leSBpcyB0aGUgdGlja2V0Li4gCkZpbmFsbHksIHRoZSBwb3NpdGlvbnMgb2YgdGhlIHN1biBhbmQgb3RoZXIgcGxhbmV0cyBjaGFuZ2UgaW4gcmVsYXRpb24gdG8gdGhlIHNhdGVsbGl0ZSBhbmQgdGhlIGVhcnRoLCB3aGljaCBhbHNvIHBlcnR1cmJzIHRoZSBvcmJpdC4uIApUaGlzIHNpZGViYXIgZXhpc3RzIGFzIGEgcG9pbnQgb2YgcmVmZXJlbmNlIGZvciB0aGUgZXhwZWN0YXRpb25zIG9mIGNvbmR1Y3QgZm9yIHRob3NlIHBhcnRpY2lwYXRpbmcgaW4gdGhpcyBjb21tdW5pdHksIGJ1dCB0aGUgbW9kZXJhdGlvbiB0ZWFtIGhhdmUgdGhlIGZpbmFsIHdvcmQgb24gZW5mb3JjZW1lbnQgb3IgaW1wbGVtZW50YXRpb24gb2YgdGhlIHBvbGljaWVzIGFuZCBndWlkZWxpbmVzIHByZXNlbnRlZCBoZXJlLi4gCkkgY2FuIG9ubHkgaW1hZ2luZSBpdCdzIHRoaXMgdGlueSBuaWNoZSBvZiB2b2NhbCwgYXVkaW9waGlsZSBESnMgdGhhdCB3YW50IHRvIHBsYXkgRkxBQyBhbmQgZnJvbSBhIGJ1c2luZXNzIHBlcnNwZWN0aXZlLCBJIGNhbiBzZWUgd2h5IHRoZXkgZG9uJ3Qgc28gaXQuUmF2aW5lICAyIHBvaW50cyAgc3VibWl0dGVkIDExIGRheXMgYWdvQXMgYSBNYW5kYXJpbiBzcGVha2VyLCBpdCBhbm5veWVkIG1lIHRvIGdyZWF0IGxlbmd0aCB3aXRoIHRoZSBzdWJzIG9uLiAKSG93ZXZlciwgaXQgaGFzIHlldCB0byBiZSBhc3Nlc3NlZCB3aGV0aGVyIGVmZmVjdHMgb3V0bGFzdCBhY3V0ZSBpbnRveGljYXRpb24uIFRoZSBwcmVzZW50IHN0dWR5IGFpbWVkIHRvIGFzc2VzcyB0aGUgc3ViIGFjdXRlIGVmZmVjdHMgb2YgcHNpbG9jeWJpbiBvbiBjcmVhdGl2ZSB0aGlua2luZywgZW1wYXRoeSwgYW5kIHdlbGwgYmVpbmcuIFBhcnRpY2lwYW50cyBhdHRlbmRpbmcgYSBwc2lsb2N5YmluIHJldHJlYXQgY29tcGxldGVkIHRlc3RzIG9mIGNyZWF0aXZlIChjb252ZXJnZW50IGFuZCBkaXZlcmdlbnQpIHRoaW5raW5nIGFuZCBlbXBhdGh5LCBhbmQgdGhlIHNhdGlzZmFjdGlvbiB3aXRoIGxpZmUgc2NhbGUgb24gdGhyZWUgb2NjYXNpb25zOiBiZWZvcmUgaW5nZXN0aW5nIHBzaWxvY3liaW4gKE4gPSA1NSksIHRoZSBtb3JuaW5nIGFmdGVyIChOID0gNTApLCBhbmQgc2V2ZW4gZGF5cyBhZnRlciAoTiA9IDIyKS4gCkh1cnRpbmcgb3RoZXIgdGhpbmdzIGlzIGJhZC4gCiJXZSB0aG91Z2h0IGl0d2FzIHN1Y2ggYSBsb25nIHNob3Qgc28geW91IGNhbiBpbWFnaW5lIHdoZW4gd2UgaGVhcmQgdG8gc2F5IHdlIHdlcmUgb3ZlciB0aGUgbW9vbiBpcyBhbiB1bmRlcnN0YXRlbWVudC4gCkkganVzdCBkb24ndCBsaWtlIGhvdyBzaHluZXNzLCBzZW5zaXRpdml0eSwgYW5kIGdlbmVyYWwgbmVydm91c25lc3MgYXJlIGFsbCByZWFzb25zIGZvciB3aHkgbWVuIGFyZSBzaW5nbGUuIExpa2Ugbm9uZSBvZiB0aGVzZSB0aGluZ3MgYXJlIGFjdHVhbGx5IGhhcm1mdWwgb3IgdG94aWMuIEp1c3QgYmVjYXVzZSBJJ20gcXVpZXQgYXJvdW5kIHN0cmFuZ2VycyBvciBhIGJpdCBpbnNlY3VyZSBhYm91dCBteSBhcHBlYXJhbmNlIGl0IGRvZXNuJ3QgbWVhbiBJIGRlc2VydmUgdG8gYmUgc2luZ2xlLiAKVGhleSBwYWNrYWdlZCB0aGVpciB1bmd1ZW50cyAoZnJvbSBhIHdvcmQgbWVhbmluZyB0byBzbWVhciBvciBhbm9pbnQpIGluIHNtYWxsLCBlbGFib3JhdGVseSBkZWNvcmF0ZWQgY2VyYW1pYyBwb3RzLCBhcyB0aGV5IHN0aWxsIGRvIHRvZGF5LiBIb3dldmVyLCBpbiB0aG9zZSB0aW1lcyB0aGUgc2hvcGtlZXBlcnMgd2VyZSBjb25zdWx0ZWQgYXMgZG9jdG9ycywgYW5kIHRoZWlyIHByb2R1Y3RzIHdlcmUgc29sZCBmb3IgYSBtdWx0aXR1ZGUgb2YgbWVkaWNpbmFsIHVzZXMuIE9uIHRoaXMgcGFnZSwgeW91IHdpbGwgZmluZCBhbGwgb2Ygb3VyIGhlcmIgcHJvZmlsZXMgYW5kIGluc3RydWN0aW9ucyBmb3IgdHJlYXRpbmcgbWVkaWNhbCBwcm9ibGVtcyB3aXRoIGhlcmJhbCByZW1lZGllcy4uIApMJ2luY29udm5pZW50IGRlcyB2aWRvcyBjJ2VzdCBxdWUgbGEgZG1vbnN0cmF0aW9uIGthYmJhbGlzdGlxdWUgcXUnaWwgcHJ0ZW5kIGF2b2lyIGZhaXRlIHZhIHRyb3Agdml0ZSBwb3VyIHF1ZSBsJ29uIHB1aXNzZSBsYSBjb250cmxlciBlbiBzZSByZnJhbnQgYXV4IHRleHRlcyBkb250IGxlcyBzb3V2ZW5pcnMgbmUgc29udCBwYXMgZm9yY21lbnQgdHJzIHByY2lzIHF1J2lsIHMnYWdpc3NlIGRlIGxldXIgcGFydGllIGJpYmxpcXVlIG91IGRlIHRleHRlcyBwbHVzIHNwY2lmaXF1ZXMgIHZvY2F0aW9uIGludGVybmUuTGUgY29tbWVudGF0ZXVyIGRlIFJhZGlvIFNjaGFsb20gYSBkdSByZXN0ZSBjb250ZXN0IGwnaWRlbnRpZmljYXRpb24gZGUgT2JhbWEgIEdvZyBiaWVuIHF1J29uIGxlIHN1c3BlY3RlIGQndHJlIGQnb3JpZ2luZSBtdXN1bG1hbmUuIAoiSSBoYWQgYWx3YXlzIHJlYWxseSBsb3ZlZCB0byBnaXZlIHBlb3BsZSBtYXNzYWdlcyBhbmQgaGVscCB0aGVtIHdpdGggdGhlaXIgYWNoZXMgYW5kIHBhaW5zLCIgc2hlIHNhaWQuCkJ0dyBJIGFtIHBlcmZlY3RseSBpbmZvcm1lZCB0aGF0IGJ1aWxkaW5nIGlzIHRoZSBjb3JlIG1lY2hhbmljIG9mIGZvcnRuaXRlLCB5b3UgZG9uIG5lZWQgdG8gc2F5IGl0Li4gCllvdSBtYXkgbm90IGltcGVyc29uYXRlIGFub3RoZXIgdXNlciBvciBhIEJHIHN0YWZmIG1lbWJlciBieSBjaG9vc2luZyBhIHNpbWlsYXIgc2NyZWVuIG5hbWUuIFlvdSBtdXN0IGRpc2Nsb3NlIGNvbmZsaWN0cyBvZiBpbnRlcmVzdC4KSGF2aW5nIGFkdmFuY2Uga25vd2xlZGdlIG9mIGNvbW11bml0eSBzdGFuZGFyZHMgcmVhbGx5IHJ1aW5zIG15IGFiaWxpdHkgdG8gZGV2ZWxvcCBteSBvd24gdGhpbmcgaGVyZS4gCktvcmVhIGRvZXNuIGhhdmUgYSBoaXN0b3J5IG9mIGZpZ2h0aW5nIGZvciBkZW1vY3JhY3kgYW5kIHN1Y2NlZWRpbmcuIFRoZXJlIGhhdmUgYmVlbiBpbmRlcGVuZGVuY2UgZmlnaHRlcnMsIGRlbW9uc3RyYXRpb25zLCBldGMuIApFRElUOiBBbHNvIGFib3V0IEF0bWEvVWx0aW1hIGFuZCBIb2xsb3dza3kgd2VhcG9ucywgd2hpbGUgeW91IHdhbnQgdG8gcnVuIGFzIG1hbnkgbWF0Y2hpbmcgY2hhcmFjdGVycyBhcyB5b3UgY2FuLCBhcyBsb25nIGFzIHlvdSBjYW4gYmVuZWZpdCAyIGNoYXJhY3RlcnMgYW5kIHRoZSBvdGhlciB0d28gYXJlIHN0cm9uZyBlbm91Z2ggb24gdGhlaXIgb3duIHJpZ2h0IHRvIHN1cHBvcnQgdGhlIHRlYW0gdGhleSBhcmUgc3RpbGwgd29ydGggdXNpbmcuClJlYWxseSBub3RoaW5nIHRvIHdvcnJ5IGFib3V0LCBwcm9taXNlIS4gCkNocmlzdGlhbiBDb2FsaXRpb24gUmVzcG9uZHMgdG8gQWxsZWdhdGlvbnMgQWJvdXQgSW5kaWFuIEdhbWJsaW5nIE1vbmV5CkZhaXIgZW5vdWdoIGZvciB0cnlpbmcgdG8ganVzdGlmeSBoaXMgc2VsZWN0aW9uIGJ1dCB0aGlzIGlzIGNsdXRjaGluZyBhdCBzdHJhd3MsIGV2ZW4gaWYgd2UgcHJldGVuZCB0aGF0IGV1cm8gdG91ci9mbG9vciBldmVudHMgZG9uIGNvdW50IHRvd2FyZHMgc2VsZWN0aW9uIGFuZCB0aGF0IHRoZSBXb3JsZCBTZXJpZXMgaXMgcmVtb3RlbHkgcmVsZXZhbnQgdGhlbiB5b3UgY2FuIGp1c3Qgc2F5IHRoYXQgQmFybmV5IHJlYWNoaW5nIHRoZSBzZW1pIG9mIHNvbWUgcmFuZG9tIGV4Ym8gZXZlbnQgaW4gQXVzdHJhbGlhIGhhcyB0aGUgc2FtZSB3ZWlnaHRpbmcgYXMgV2hpdGxvY2sgcmVhY2hpbmcgYSByYW5rZWQgVFYgbWFqb3IgZmluYWwuIEh5cG90aGV0aWNhbGx5IHNwZWFraW5nIHNob3VsZCBzb21lb25lIHJlYWNoaW5nIHRoZSBXb3JsZCBDaGFtcGlvbnNoaXAgKyBXb3JsZCBNYXRjaHBsYXkgZmluYWxzIHlldCBsb3NpbmcgaW4gdGhlIGZpcnN0IHJvdW5kIG9mIHR3byB3b3JsZCBzZXJpZXMgZXZlbnRzIGNvdW50IGZvciB0aGUgc2FtZSBhcyByZWFjaGluZyB0aGUgZmluYWwgb2YgdHdvIHdvcmxkIHNlcmllcyBldmVudHMgYnV0IGxvc2luZyBpbiB0aGUgZmlyc3Qgcm91bmQgb2YgdGhlIFdvcmxkIENoYW1wcyBhbmQgTWF0Y2hwbGF5PyBObyBvZiBjb3Vyc2Ugbm90LCBidXQgeW91ciBzY29yaW5nIHN5c3RlbSBncmFudHMgdGhvc2UgYWNoaWV2ZW1lbnRzIGVxdWFsIHdlaWdodGluZy4KSSBjaG9zZSBHcmVlbiBGaW5jaCBhbmQgTGlubmV0IEJpcmQgYnkgd29ybGQgcmVub3duIGNvbXBvc2VyIFN0ZXBoZW4gU29uZGhlaW0gbW9zdGx5IGJlY2F1c2UgSSB3YXMgZmFzY2luYXRlZCBieSBpdHMgdHdvIG1vc3QgY29tbW9uIHN0eWxpc3RpYyBpbnRlcnByZXRhdGlvbnMuIApUb3VnaCBndXkgaGFzIGJlZW4gaW1wcm92ZWQgbWFraW5nIGhpbSBhcm1vciB0aHJvdWdoIHByZXR0eSBtdWNoIGV2ZXJ5IHJhcGlkIGphYiwgY2VydGFpbiBtdWx0aSBoaXQgbW92ZXMsIGFuZCBjZXJ0YWluIHdlYWsgcHJvamVjdGlsZXMgc3VjaCBhcyBtbSdzIHBlbGxldHMsIGx1aWdpIGZpcmViYWxsLCBwayBmaXJlLCBhbmQgaG9seSB3YXRlciBmb3IgZXhhbXBsZS4KSGUgd2FzIGxvc3QgYW5kIGNvdWxkbiBoZWxwIGhpbXNlbGYuIApJIGFsc28gd291bGQgcmVjb21tZW5kIGFnYWluc3QgY2FsbGluZyBpdCBhIG11c2ljIGdyb3VwOyBtYXliZSBzb21ldGhpbmcgbW9yZSBsaWtlIG11c2ljIGd1aWRlZCBtaW5kZnVsbmVzcz8gVGhhdCB3b3VsZCBhdCBsZWFzdCBzZWVtIGxlc3MgbXVzaWMgdGhlcmFweSBpc2ggYW5kIG1vcmUgdGhlcmFwZXV0aWMgdXNlIG9mIG11c2ljLi4gClBpZXJyZSBCb3VyZGlldSBnaXZlcyB1cyBwZXJoYXBzIHRoZSBtb3N0IGNvbXBsZXggdW5kZXJzdGFuZGluZyBvZiB0aGUgcmVsYXRpb25zaGlwIGJldHdlZW4gb3VyIHBsYWNlIGluIHRoZSBzb2NpYWwgd29ybGQgYW5kIHdoYXQgd2Uga25vdyBpbiBoaXMgdGhlb3J5IG9mICJoYWJpdHVzIiBzdHJ1Y3R1cmluZyBvdXIgInRhc3RlcyIuIEhhYml0dXMgYnVpbGRzIHVwIG92ZXIgYSBsaWZldGltZSBidXQgaXMgc2hhcGVkIGJ5IG91ciBjdWx0dXJhbCwgZWNvbm9taWMsIHNvY2lhbCwgYW5kIGVkdWNhdGlvbmFsIGNhcGl0YWwuIApJdCdzIHdoYXQgaGFwcGVucyB0aGVuIHRoYXQgaGFzIGNyZWF0ZWQgYSB3aWRlc3ByZWFkIGJhY2tsYXNoIGFnYWluc3QgZ3JleWhvdW5kIHJhY2luZzogVXAgdW50aWwgdGhlIGxhdGUgMTk4MHMsIHRoZSBkb2dzIHdlcmUgcm91dGluZWx5IGV1dGhhbml6ZWQgb25jZSB0aGV5IHdlcmUgbm8gbG9uZ2VyIHVzZWZ1bC4gCiJNeSBob3JzZXMuIiBXaGVuZXZlciB3ZSB3ZXJlIG9uIGEgcm9hZCB0cmlwLCBvciBob25lc3RseSBvbiBhbnkgc29ydCBvZiBkcml2ZSwgbXkgZmFtaWx5IHdvdWxkIHRyeSBhbmQgc3BvdCBob3JzZXMgYmVmb3JlIGFueW9uZSBlbHNlIGRpZC4gWW91IGhhZCB0byBzaG91dCAiTVkgSE9SU0VTISIgYW5kIHRoZW4gY291bnQgdGhlbS4gSXQgd2FzIGEgcnVubmluZyB0YWxseSBidXQgbm8gb25lIGV2ZXIgcmVhbGx5IGtlcHQgc2NvcmUgb25jZSB0aGUgdHJpcCBmaW5pc2hlZC4gCjkzLzEwMC4gCkluIGFsdGVyIEZhbWlsaWVudHJhZGl0aW9uIHdpcmQgaGllciBkaWUgdHlwaXNjaCBrYW5hcmlzY2hlIEtjaGVudHJhZGl0aW9uIGZvcnRnZWZocnQuIApXaGVuIHlvdSBkbyBpbnZlc3RpZ2F0aXZlIHJlcG9ydGluZywgeW91IGFudGljaXBhdGUgZHJpbGxpbmcgYSBudW1iZXIgb2YgZHJ5IGhvbGVzLCBidXQgYWxtb3N0IGV2ZXJ5b25lIEkgZ29vZ2xlZCB0dXJuZWQgb3V0IHRvIGJlIGEgUnVzc2lhbiBtb2JzdGVyLiBBZ2FpbiBhbmQgYWdhaW4uIElmIHlvdSBrbm93IE5ldyBZb3JrIHlvdSBkb24gZXhwZWN0IFRydW1wIFRvd2VyIHRvIGJlIGEgaGlnaCBjcmltZSBuZWlnaGJvcmhvb2QsIGJ1dCB0aGVyZSB3ZXJlIGZhciB0b28gbWFueSBSdXNzaWFuIG1vYnN0ZXJzIGluIFRydW1wIHByb3BlcnRpZXMgZm9yIGl0IHRvIGJlIGEgY29pbmNpZGVuY2UuIi4gClBsdXMsIGl0IGtpbmRhIG91ciBjdWx0dXJlIGhlcmUgdG8gZ28gdG8gdGhlIGludGVybmV0IGNhZmUgdG8gcGxheSBnYW1lcy4gSW1hZ2luZSAxMDAgdXNlcnMgYWZmZWN0ZWQganVzdCBieSAxIHNpbGx5IGNoZWF0ZXIuIApQcmljZSBlbmZvcmNpbmcgYXQgJDE4IHdpbGwgYmUgYSBoZWFkYWNoZSBhcyB5b3UgdHJ5IHRvIGNvbWUgdXAgd2l0aCBhIG5ldyBwbGFuICh1bmxlc3MsIG9mIGNvdXJzZSwgJDE4IG9uIGEgY2F0Y2hlciB3YXMgUGxhbiBCIGFzIGRlc2NyaWJlZCBhYm92ZSwgYnV0IHdlIGFzc3VtZSB5b3UgZ2V0IHRoYXQpLiAKSGlzIHR3byBlYXJseSBkZWZlYXRzIGNhbiBiZSBwdXQgZG93biB0byBvdmVyY29uZmlkZW5jZS4gSGUgbG9zdCB0byBsZXNzIHRhbGVudGVkIGZpZ2h0ZXJzIHdobyBjYXVnaHQgaGltIHVuYXdhcmVzIGFzIGhlIHBsYXllZCBjb2NrIG9mIHRoZSByaW5nLiBXaGlsZSBoZSBkZWZpbml0ZWx5IGhhZCB0YWxlbnQsIGhpcyBsb3NzZXMgdW5kZXJsaW5lZCBoaXMgbmVlZCBmb3IgbW9yZSBib3hpbmcgc2tpbGxzLCBhbmQgbW9yZSBpbXBvcnRhbnRseSwgdGhlIG5lZWQgZm9yIGEgcmVhbGx5IGdvb2QgdHJhaW5lci4gCkFub3RoZXIgdGVjaG5pcXVlIGlzIHBpenppY2F0bywgb3IgdGhlIHBsdWNraW5nIG9mIHRoZSBzdHJpbmcuIApJbiAxOTk3LCBBQkMgaGFkIHRoZSBicmlsbGlhbnQgaWRlYSB0byBjcm9zcyBvdmVyIGFsbCB0aGVpciBUR0lGIHNob3dzIGluIG9uZSBodWdlIHRlbGV2aXNpb24gZXZlbnQuIEl0IHdhcyBsaWtlIGEgdGVsZXZpc2VkIE1DVSwgaWYgeW91IHJlbW92ZWQgZXZlcnkgc2luZ2xlIHJlYXNvbiBvbmUgbWlnaHQgbGlrZSB0aGUgTUNVLiBUaGUgY3Jvc3NvdmVyIGtpY2tlZCBvZmYgd2l0aCBTYWJyaW5hIFRoZSBUZWVuYWdlIFdpdGNoLCBpbiB3aGljaCBtYWdpYyB0YWxraW5nIGNhdCBTYWxlbSBzd2FsbG93cyBhICJUaW1lIEJhbGwuIiBZZXMsIGl0IGJlZ2lucyBhcyBzbyBtYW55IGNsYXNzaWMgdGFsZXMgaGF2ZTogd2l0aCBhdGVtcG9yYWwgY2F0IHZvbWl0Li4gCkRpc25leSBhbm5vdW5jZWQgVGh1cnNkYXkgdGhhdCBpdHMgcHVyY2hhc2Ugb2YgMjFzdCBDZW50dXJ5IEZveCB3aWxsIGNsb3NlICJzb29uIiBhbmQgImhpdCB0aGUgZ3JvdW5kIHJ1bm5pbmcgd2l0aCB0aGUgb3BlbmluZyBvZiBpdHMgbmV3IDE0IGFjcmUgU3RhciBXYXJzOiBHYWxheHkncyBFZGdlIGF0dHJhY3Rpb25zLgpXZSdyZSBhbGwgYSBidW5jaCBvZiBCbGFja2phY2sganVua2llcyBzbyBldmVuIHRob3VnaCB0aGUgZGluaW5nIHJvb20gaXMgYWN0dWFsbHkgb3VyIGxpdmluZyByb29tLCBhbmQgdGhlIGxpdmluZyByb29tIGlzIG91ciBwb2tlciBhcmVhLiBJbiBhbGwsIHRoZXJlIGFyZSBmb3VyIHRhYmxlcyBhbGwgZGF3bmluZyB0aGUgU3VpdGVkIEdyZWVuIFBva2VyIFRhYmxlIENsb3RoLi4gCkkgcmVhZCB0aGF0IHRvbyBidXQgdGhlIHNlZW1pbmcgcGFyYWRveCBiZXR3ZWVuIHRob3NlIHRoaW5ncyBpcyByZXNvbHZlZCBpbiBjb250ZXh0LCBJIHJlYWQgaXQgbm90IHJlYWxseSB0aGF0IG1lbiBmaWx0ZXIgaXQgb3V0IHNvIG11Y2ggYXMgd2UgZXNzZW50aWFsbHkgYXJlIGp1c3QgZGVzaWduZWQgdG8gbm90IGxpc3RlbiB0byB0aGUgd29yZHMuIFRoZSBoaWdoZXIgcGl0Y2ggb2YgYSB3b21hbnMgdm9pY2UgdHJpcHMgb3VyIGJyYWlucyB0byB0aGluZ3MgbGlrZSBoYXZpbmcgdGluZ2xpbmcgc2Vuc2F0aW9ucywgcmVsZWFzZSBvZiBob3Jtb25lcyBzeW5vbnltb3VzIHdpdGggYXJvdXNhbCBhbmQgc28gb24gd2hpY2ggaW4gdHVybiBhY3R1YWxseSBjb250cmlidXRlcyB0byBiZWluZyBhIHdvcnNlIGFjdGl2ZSBvciBwYXNzaXZlIGxpc3RlbmVyOyB0aGUgZWZmZWN0IGdvZXMgYXMgZmFyIGFzIGEgbWFuIG9yIHdvbWFuIGJyYWluIGJlaW5nIGFibGUgdG8gYXBwcm94aW1hdGUgZmVydGlsaXR5IGFuZCBhZGp1c3QgYWNjb3JkaW5nbHkuIApCZXN0IG9mIGFsbCBpZiB5b3Ugd2FudCBzb21ldGhpbmcgdGhhdCBwdXRzIHlvdXIgbmFtZSBvbiB0aGUgbWFwLCB0aGlzIGl0ZW0gaGFzIGEgYnJhc3MgcGxhdGUgcG9zaXRpb25lZCBmb3IgZXZlcnlvbmUgdG8gc2VlLiBXZSBhY3R1YWxseSB1c2VkIGl0IHRvIGVuZ3JhdmUgV1NPUCBXYW5uYWJlcyBvbiBpdCBmb3Igb3VyIGVudGlyZSBncm91cC4gCkV1cm9wZSBpcyBIdWF3ZWkncyBiaWdnZXN0IG1hcmtldCBvdXRzaWRlIENoaW5hLCBhbmQgdGhlIGNvbXBhbnkgaG9wZXMgdG8gcGxheSBhIGtleSByb2xlIGluIGJ1aWxkaW5nIHRoZSBjb250aW5lbnQncyA1RyBuZXR3b3JrcywgaW4gY29tcGV0aXRpb24gd2l0aCBTY2FuZGluYXZpYW4gcml2YWxzIEVyaWNzc29uIGFuZCBOb2tpYS4gRmlmdGggZ2VuZXJhdGlvbiBtb2JpbGUgbmV0d29ya3MgZW5hYmxlIGxpZ2h0bmluZyBmYXN0IGRvd25sb2FkIHNwZWVkcyBhbmQgcmVkdWNlIHNpZ25hbCBsYWcsIGFkdmFuY2VzIHRoYXQgd2lsbCBiZSB1c2VkIGluIHNtYXJ0IGZhY3Rvcmllcywgc2VsZiBkcml2aW5nIGNhcnMgYW5kIHJlbW90ZSBzdXJnZXJ5LgpUaGF0IGRvZXNuIG1lYW4gSSBoYXZlIHRvIGJlIGEgdmVnYW4uIFRoZXJlIGFyZSBzb21lIG51YW5jZXMgdmVnYW5zIGFyZSBvZnRlbiBtaXNzaW5nLCB0aGlzIGJlaW5nIG9uZSBvZiB0aGVtLiAKQWxzbywgQ08yIGlzIG1vcmUgZGFtYWdpbmcgdG8gbWFyaW5lIGxpZmUsIGJlY2F1c2UgaXQgcHJldmVudHMgdGhlIHRpbnkgc2hlbGxzIG9mIG1pY3Jvb3JnYW5pc21zLCBwbGFua3RvbiwgYW5kIGxhcmdlciBzaGVsbGZpc2ggZnJvbSBmb3JtaW5nLCBhbmQga2lsbHMgY29yYWwuLiAKV2l0aCBwb29yIG93bmVyc2hpcCBvZiBjbHVicywgb3duZXJzIGFyZSBtaXNoYW5kbGluZyBmdW5kcywgbG9zaW5nIHRvIG11Y2ggdHJhZGluZyBpbiBjcnlwdG8gb3IganVzdCBmbGF0IGdhbWJsaW5nIGF3YXkgdGhlIHBsYXllcnMgZnVuZHMuIApFdmVudHVhbGx5LCBWYXVnaG4gdHVybmVkIGhpcyBhdHRlbnRpb24gdG8gb25lIGdpcmwgd2l0aCBhIHNob3J0IGJsb25kIHBvbnl0YWlsIGFuZCBhIGNvd2JveSBoYXQuIFNoZSB3YXMgaW4gaGVyIDIwcywgcGV0aXRlIGFuZCB3b3JlIGRhcmsgZXllbGluZXIuIApJJ3ZlIGhlYXJkIHNvbWUgYXBwbGljYW50cyB3aWxsIGp1c3Qgd3JpdGUgdGhlaXIgb3duIGVzc2F5cyBhbmQgYXNrIHBlb3BsZSB0byBzdWJtaXQsIGJ1dCB0aGV5IGJvdGggd2VyZSB2ZXJ5IHdpbGxpbmcgdG8gd3JpdGUgdGhlbSBzbyBpdCB3YXNuJ3QgYW4gaXNzdWUgZm9yIG1lLi4gClRoZSBuZXdzIHdpbGwgdGFrZSBhbiBpbnRlcmVzdCBpbiA1MDAsMDAwIHBlb3BsZSB3aXRoIGJsb29keSB1cmluZS4gCkdNIEdpbGxpcyBoYXMgImZ1bGwgY29uZmlkZW5jZSIgUm9iZXJ0byBMdW9uZ28gd2lsbCByZXR1cm4gdG8gQ2FudWNrczsgVHJhbnNsYXRpb246IFVoIE9oIEp1bHkgMjQsIDIwMTNXb3JkIGNhbWUgbGF0ZSBXZWRuZXNkYXkgYWZ0ZXJub29uLCB0aGF0IEx1b25nbyBoYWQgYWNxdWlyZWQgYSBuZXcgYWdlbnQuIApJdCB3YXMgYSBmdW4gdGFibGUgYW5kIGV2ZXJ5b25lIHdhcyBsYXVnaGluZyBhdCB0aGUgcmlkaWN1bG91cyBzaXR1YXRpb24uIFRoZSB0dXJuIHdhcyBhbm90aGVyIGtpbmcgZ2l2aW5nIHRoaXMgZ2lybCB0b3AgYm9hdCBhbmQgc2Vjb25kIG51dHMuIFNoZSBsYXVnaHMgYW5kIGdvZXMgYWxsIGluIGZvciBoZXIgbGFzdCAzMCBiaWcgYmxpbmRzLgpJIHBhcnRpY2lwYXRlZCBpbiBteSBmaXJzdCBtZWV0IDMgd2Vla3MgYWdvIHdoZXJlIEkgaGl0IHRoZSBtYXhlcyBJIGJlZW4gdXNpbmcgZm9yIHRoZSBwcm9ncmFtLk15IGNvbmNlcm4gaXMgdGhhdCB0aGVyZSBpc24gc3VmZmljaWVudCB0aW1lIGJldHdlZW4gbXkgbGFzdCBtZWV0IGFuZCBjb21wIGJsb2NrIHRlc3QgZGF5IHRvIGVmZmVjdGl2ZWx5IG1heCBvdXQgb3IgZXZlbiBtYWtlIGFueSBub3RpY2VhYmxlIHByb2dyZXNzLiAKV2UgcHVibGlzaGVkIG91ciBwYXBlciBvbiB0aGUgd2ViIGluIE9jdG9iZXIgMjAxNiAoYW5kIGluIGEgQUFBSSAxNyB3b3Jrc2hvcCBpbiBGZWJydWFyeSAyMDE3KSwgYW5kIHRoZSBEZWVwU3RhY2sgdGVhbSBwdWJsaXNoZWQgdGhlaXJzIG9uIGFyWGl2IGluIEphbnVhcnkgMjAxNyAoYW5kIGluIFNjaWVuY2UgaW4gbGF0ZSBTcHJpbmcgMjAxNykuIApUaGF0IHRvIG1lIHNlZW1zIHRvIGJlIGEgc3VwcGx5IGFuZCBkZW1hbmQgcHJvYmxlbSBtb3JlIHRoYW4gYSBwYXkgcHJvYmxlbS4gSWYgdGhhdCBiZSB0aGUgY2FzZSAxNS4wMCBhbiBob3VyIGlzbid0IGdvaW5nIHRvIGZpeCB0aGUgaXNzdWUuIEFzIGZvciB1bmlvbnMsIHllcyB0aGV5IGhhZCBhIHB1cnBvc2UgaW4gdGhlIHBhc3QuIApXYXNoaW5ndG9uIFJvZWJsaW5nIHRvb2sgb3ZlciBhcyBjaGllZiBlbmdpbmVlciBmb2xsb3dpbmcgdGhlIGRlYXRoIG9mIGhpcyBmYXRoZXIsIEpvaG4gQS4sIGluIDE4NjksIGZvbGxvd2luZyBhIGZyZWFrIGFjY2lkZW50IGFuZCB0aGUgaWxsIGNvbmNlaXZlZCB0cmVhdG1lbnRzIGZvciBpdCB0aGF0IGJyb3VnaHQgb24gdGhlIHRldGFudXMgdGhhdCB3b3VuZCB1cCBraWxsaW5nIHRoZSBtYW4uIApBdWNoIGRlciBOZXdzbGV0dGVyIGxpZXMgZWluZSBzb2xjaGUgU3RlbGx1bmdzbmFobWUgdmVybWlzc2VuLiBMZWRpZ2xpY2ggZGVyIEhpbndlaXMsIGRhc3MgZGllIDggUmFwcGVuIHp1IGhvY2ggc2luZCwgZmluZGV0IG1hbiBpbiBkZW4gZmZlbnRsaWNoZW4gRm9yZW4uIEF1ZiBkZW4gU2VpdGVuIGRlciBwaHlzaW9zd2lzcyBmaW5kZXQgbWFuIG5hY2ggZGVtIExvZ2luIGplZG9jaCB3ZWl0ZXJlIEluZm9ybWF0aW9uZW4uLiAKVGhhbmsgdGhlIExvcmQgSSB3YXMgYm9ybiBpbiBDYW5hZGEhLiAKQW5kIGZvciBldmVyeSBhY3Rpb24gdGhlcmUncyBhIHJlYWN0aW9uLiBQb2tlciB0YWtlcyB1cyBvbiBhIGpvdXJuZXkgdGhhdCBtYWtlcyB1cyBydW4gc2NlbmFyaW9zIG92ZXIgYW5kIG92ZXIgaW4gb3VyIG93biBtaW5kcyAgIGhvcGluZyB0aGF0IGV2ZXJ5IGRlY2lzaW9uLCBldmVyeSBtb3ZlIHdhcyB0aGUgcmlnaHQgb25lLiAKSW5qdXJpZXMsIHRyYWluaW5nLCBzdHJhdGVnaWVzLCB3ZWF0aGVyLCBldGMuIENhbiBzaGlmdCB0aGUgYmxvYiBpbiBvbmUgZGlyZWN0aW9uIG9yIGFub3RoZXIgIHNvbWUgb3V0Y29tZXMgYmVjb21lIHJlbGF0aXZlbHkgbW9yZSBsaWtlbHkgYW5kIG90aGVycyBiZWNvbWUgcmVsYXRpdmVseSBsZXNzIGxpa2VseS4gCkJ1dCBoZSBhbHNvIG5vdGVkIHRoZSBjcml0aWNpc21zIHRoYXQgTXIgTGVlIGhhZCBleGVyY2lzZWQgdG9vIHRpZ2h0IGEgY29udHJvbCBvdmVyIHRoZSBjb3VudHJ5LCBsZWFkaW5nIHRvIGRvbWluZWVyaW5nIGFuZCBjb2VyY2l2ZSBhIHN0YXRlCkEgY29tYmluYXRpb24gb2YgVmFuZ3VhcmQgSW5zdGl0dXRpb25hbCBJbmRleCwgVmFuZ3VhcmQgU21hbGwgQ2FwIEluZGV4LCBBbWVyaWNhbiBGdW5kcyBFdXJvUGFjaWZpYyBHcm93dGgsIGFuZCBWYW5ndWFyZCBJbmZsYXRpb24gUHJvdGVjdGVkIFNlY3VyaXRpZXMgbGlrZWx5IG1ha2VzIHNlbnNlIGZyb20gYSBxdWFsaXR5LCBjb3N0LCBhbmQgcGhpbG9zb3BoeSBzdGFuZHBvaW50LiBBbHRlcm5hdGl2ZWx5LCBvbmUgb2YgdGhlIHRhcmdldCBkYXRlIGZ1bmRzIGlmIHlvdSBkb24gd2FudCB0byBkbyB0aGUgbmVjZXNzYXJ5IHJlc2VhcmNoClBhZ2UgdW50aWwgdGhlIGRpc2N1c3Npb24gaGFzIHJlYWNoZWQgY29uc2Vuc3VzIGZvciB0aGUgY2hhbmdlIGFuZCBpcyBjbG9zZWQuIApEb24ndCBsZXQgdGhhdCBzZXh5IHRvbWF0byBnZXQgbG9uZWx5OyBhZGQgYSBzaWRlIG9mIGF2b2NhZG8uIApIZSBhbHNvIGVuam95ZWQgcGxheWluZyBwb29sLCBwb2tlciwgZGFydHMsIGJhc2ViYWxsLCBodW50aW5nLCBjb25jZXJ0cyBhbmQgbXVzaWMuIExvdSB3YXMgdmVyeSB3ZWxsIGtub3duIGZvciBoaXMgdHJlbWVuZG91cyBzZW5zZSBvZiBodW1vdXIgYW5kIGhpcyBqb2tlcy4gTG91IGxvdmVkIGhpc3RvcnksIGVzcGVjaWFsbHkgd2F0Y2hpbmcgU2Vjb25kIFdvcmxkIFdhciBkb2N1bWVudGFyaWVzIGFuZCBzcGVuZGluZyB0aW1lIHdpdGggaGlzIGZyaWVuZHMgd2FzIG9uZSBvZiBoaXMgZ3JlYXRlc3QgcGxlYXN1cmVzIGluIGxpZmUuIENhcHRhaW4gTG91IHdpbGwgYWxzbyBiZSBncmVhdGx5IG1pc3NlZCBieSBoaXMgZG9nIEFuZ2VsIGFuZCBoaXMgY291bnRsZXNzIGZyaWVuZHMgdGhhdCBhbHdheXMgc3Vycm91bmRlZCBoaW0uIApTa2ltIG9mZiB0aGUgZmF0IGFuZCBhZGQgaXQgdG8gdGhlIHJvYXN0aW5nIHBhbi4gVGhpcyBpcyB0aGUgZmF0IGZvciB0aGUgcm91eC4gCkl0J3MgYmVsaWV2ZWQgdG8gYmUgdGhlIGZpcnN0IG9mIGl0cyBraW5kIHRvIHVzZSBhIG1lbWJlcnNoaXAgbW9kZWwgYW5kIGNoYXJnZSBwbGF5ZXJzIGJ5IHRoZSBob3VyIHRvIHBsYXkgcG9rZXIuIApBZnRlciBJIGJyb2tlIG15IHBlbHZpcyBpbiAzIHBsYWNlcywgc3BlbnQgbW9udGhzIGluIGEgd2hlZWwgY2hhaXIsIGFuZCBoYWQgdG8gcmVsZWFybiBob3cgdG8gd2FsaywgSSBhc2tlZCBteSBneW5lY29sb2dpc3QgaWYgdGhlcmUgd2FzIGFueXRoaW5nIGVpdGhlciBteSBodXNiYW5kIG9yIGkgY291bGQgZG8gdG8gcmVkdWNlIHRoZSBwYWluL2Rpc2NvbWZvcnQvZGVjcmVhc2VkIGZlZWxpbmcgKGR1ZSB0byBuZXJ2ZSBkYW1hZ2UpIGR1cmluZyBzZXguIEhlciByZXNwb25zZSB3YXMsICJpZiB5b3UgYXJlbid0IHNleHVhbGx5IHNhdGlzZmllZCwganVzdCBmaW5kIGEgbmV3IHBhcnRuZXIuIiBMaWtlLCBJIGdvdCBpbiBhIHRlcnJpYmxlIGFjY2lkZW50IHRoYXQgY2F1c2VkIHRoZSBwYWluIGJ1dCBoZXIgcmVzcG9uc2Ugd2FzIExFQVZFIFlPVVIgSFVTQkFORC4gClNvIHRoZSBCQkMgV29ybGQgU2VydmljZXMgaGFkIHRoaXMgZXhjZWxsZW50IGlkZWEgZm9yIGEgcHVibGljIGRlYmF0ZS4gVGhleSBhc2tlZCB0aGVpciByZWFkZXJzIHdoZXRoZXIgImhvbW9zZXh1YWxzIHNob3VsZCBiZSBleGVjdXRlZC4iIEFjY29yZGluZyB0byB0aGVzZSBzZXJpb3VzIGpvdXJuYWxpc3QgdHlwZXMsIHRoZXkgZmVsdCB0aGF0IGdpdmVuIHRoZSBkZWJhdGUgaW4gVWdhbmRhIG92ZXIgd2hldGhlciBob21vc2V4dWFscyBzaG91bGQgYmUga2lsbGVkLCBzdWNoIGEgZGViYXRlIHNlZW1lZCBsaWtlIGEgImxlZ2l0aW1hdGUgYW5kIHJlc3BvbnNpYmxlIGF0dGVtcHQgdG8gc3VwcG9ydCBhIGNoYWxsZW5naW5nIGRpc2N1c3Npb24uIlRoZSBvcmlnaW5hbCBoZWFkbGluZSBvbiBvdXIgd2Vic2l0ZSB3YXMsIGluIGhpbmRzaWdodCwgdG9vIHN0YXJrLiAKMjAxOC4gVGhlIHBoeXNpb2xvZ2ljYWwgZWZmZWN0cyBvZiBUcmFuc2NyYW5pYWwgRWxlY3RyaWNhbCBTdGltdWxhdGlvbiBkbyBub3QgYXBwbHkgdG8gcGFyYW1ldGVycyBjb21tb25seSB1c2VkIGluIHN0dWRpZXMgb2YgQ29nbml0aXZlIE5ldXJvbW9kdWxhdGlvbi4gCkhvdyBkb2VzIGEgbGlicmFyeSBkZWNpZGUgd2hhdCBib29rcyB0byBzZWxsPyBJbiBteSBsb2NhbCBicmFuY2ggdGhlcmUgaXMgYWx3YXlzIGEgdGFibGUgb2YgYm9va3MgZm9yIHNhbGUgYW5kIG1hbnkgYXJlIHZlcnkgbmV3IGJvb2tzIGluIGV4Y2VsbGVudCBjb25kaXRpb24uClRoZSBhbWF0ZXVyIHBybyBsb3ZlcyB0byB0YWxrIGFib3V0IHRoZWlyIHN0cmF0ZWd5LiAKTXkgYmlnZ2VzdCBzdWNjZXNzIHdpdGggaG9tZW9wYXRoeSB3YXMgZ2V0dGluZyBvdXQgb2YgYSB0b25zaWxzIHJlbW92YWwgc3VyZ2VyeS4gSSBuZXZlciBoYWQgdG8gdW5kZXJnbyBzdXJnZXJ5LiAKR2VvcmdlLCBVdGFoLCB0byBDaGFybGVzIEphY29iIEJhc3RpYW4gYW5kIEpvc2VwaGluZSAiUGhpbmUiIEhhbm5pZyBCYXN0aWFuLiBTaGUgbWFycmllZCBNaWxvIEFmdG9uIEVuY2Ugb24gSnVuZSAyMSwgMTk0MSwgYW5kIHRoZWlyIG1hcnJpYWdlIHdhcyBsYXRlciBzb2xlbW5pemVkIGluIHRoZSBTdC4gCkFzIHdpdGggZXZlcnl0aGluZyBpbiBwb2tlciwgcmFyZWx5IGlzIGFueSBkZWNpc2lvbiBzZXQgaW4gc3RvbmUuIFRoZSBmb2xsb3dpbmcgcGFnZXMgY29udGFpbiBzb2xpZCBndWlkZWxpbmVzIHRvIGhlbHAgeW91IHVuZGVyc3RhbmQgd2hhdCB0byBsb29rIGZvciBpbiBlYWNoIHBvc2l0aW9uLiAKSXQgYXBwbGllcyB0byB3YXRlcm1hcmtzIG9uIGltYWdlcyBhcyB3ZWxsLiAKVGhlIGRlYWwgY29tZXMgdHdvIG1vbnRocyBhZnRlciByZXBvcnRzIGJlZ2FuIGNpcmN1bGF0aW5nIHRoYXQgR2lsYmVydCB3YXMgbG9va2luZyB0byBleGl0IHRoZSBjYXNpbm8gYnVzaW5lc3MsIGluY2x1ZGluZyBoaXMgcHJvcGVydGllcyBpbiBDbGV2ZWxhbmQsIENpbmNpbm5hdGkgYW5kIERldHJvaXQuIEdpbGJlcnQgc2FpZCB0YWxrcyBiZWdhbiB3aXRoIFBlbm4gTmF0aW9uYWwgYW5kIFZpY2kgbmluZSB0byAxMCBtb250aHMgYWdvLgpKdXN0IGxpa2UgYSBib3RhbmljYWwgYXJ0aXN0LCB1c2UgcGxhbnQgb2JzZXJ2YXRpb24sIGRyYXdpbmcsIGNvbG9yIG1peGluZyBhbmQgd2F0ZXJjb2xvciBwYWludGluZyB0byBicmluZyB5b3VyIGZsb3dlciBhbmQgZnJ1aXQgbW9kZWxzIHRvIGxpZmUuIApUaGVyZSBub3RoaW5nIGxlZnQgb2YgdGhhdCBhbnltb3JlIGluIHRoZSB3YXkgd2UgZHJlc3MuIApUZXJyZSBkb2x0cmVwbyAgIGNhbnRpbmEgZGkgY2FzdGVnZ2lvIGEgd2luZSBtYWtpbmcgY2VudHJlIGluIHRoZS4gMTIgbHVnIDIwMTcgLiAKU2VhcmNoIFlvdXR1YmUgZm9yIHRoaXNzb25nLiAKUml2ZXIgUm9jayBpbiByaWNobW9uZCB1c2VkIHRvIGJlIHN1cGVyIHBvcHVsYXIgYnV0IGl0J3MgYSBwcmV0dHkgZGVhZCBzY2VuZSBub3csIHRvdGFsIG9mIGZpdmUgdGFibGVzIGJ1dCB0aGV5IGp1c3QgZ290IG5ldyB0YWJsZSBmZWx0IHJlY2VudGx5IHNvIG1heWJlIGl0IHdpbGwgcGljayB1cCBhIGJpdC4gClNvbWUgb2YgdGhlbSBhcmUgcGFpZCwgb25lIG9mIHRoZSBiZXN0IG9uZXMgSSBzZWVuIChiYW5nIGZvciB0aGUgYnVjaykgaXMgTWFyaWUgRm9ybGVvICJCIFNjaG9vbCIuIFNoZSBoYXMgVE9OUyBvZiBmcmVlIHN0dWZmL3ZpZGVvcyBhbGwgeWVhciBsb25nIGFuZCBzZWxscyBvbmUgdGhpbmcsIG9uY2UgYSB5ZWFyICh0aGUgQiBzY2hvb2wpLiAKSXQgY2FuIGJlIGEgYmxhc3QsIGFuZCBJJ2QgZ2l2ZSBhbnkgQ0kgZGVjayBhIHRyeSBpZiB5b3UgaGF2ZW4ndC4gCllvdSBkaWRuIGluY2x1ZGUgcG9zaXRpb25zLCBidXQgaXQgc2VlbXMgbGlrZSB2MSBpcyBlYXJseS91dGcsIHYyIGlzIG1pZGRsZS9lYXJseS4gVjIgM2JldCByYW5nZSBpcyBnb2luZyB0byBiZSBzdHJvbmdlciBoZXJlIHRoYW4gYXZlcmFnZSwgaGUgcHJvYmFibHkgbm90IGdvaW5nIHRvIGJlIDNiZXR0aW5nIGEgZmluZSByZWcgdXRnL2Vhcmx5IHZlcnkgbGlnaHQuIFVubGVzcyB0aGlzIGlzIHRoZSBmaXJzdCB0aW1lIHYzIHBsYXllZCwgZXZlbiBpZiBoZSBkb2VzbiBrbm93IHRoZSB0ZXJtaW5vbG9neSwgaGUgaGF2ZSBzb21lIHNlbnNlIHRoYXQgdGhlc2UgcGxheWVycyBhcmUgbG9va2luZyBzdHJvbmcgaW50dWl0aXZlbHkuIElzIGhlIGNvbGQgY2FsbGluZyA2NiBoZXJlPyBNYXliZSwgYnV0IGlzIGhlIGNhbGxpbmcgNTZzPyBQcm9iYWJseSBub3QuIFRoYXQgdGlnaHRlbnMgaGlzIHJhbmdlIGEgbGl0dGxlIGJpdC4gVGhyZWUgcGxheWVycyB3aG8gYWxsIGxvb2sgc3Ryb25nLCBhbmQgaGF2ZSB1bmNhcHBlZCByYW5nZXMgKGV4Y2VwdCB2MSBhY2NvcmRpbmcgdG8geW91LCBidXQgSSBkb24gdGhpbmsgdGhhdCBhIDEwMCUgdGVsbCkuIFllYWgsIHdpbGwgc29tZXRpbWVzIHYxIGhhdmUgNzhzLCB2MiBhNXMsIGFuZCB2MyA2NiBhbmQgeW91IHNjb29wPyBGb3Igc3VyZSwgYnV0IG5vdCBvZnRlbiBlbm91Z2ggdG8gbWFrZSBpdCBjbG9zZSB0byArZXYuIERlZmluaXRlbHkgbm90IHRoZSB0aW1lIHRvIGJlIGdldHRpbmcgZnJpc2t5IHdpdGggMTAgMTAuCklmIEkgd2VyZSBnZXR0aW5nIGEgYm9udXMgZnJvbSBBSUcsIEkgd291bGQgaGFuZCBtaW5lIHJpZ2h0IGJhY2sgcmF0aGVyIHRoYW4gZmFjZSB0aGUgd3JhdGggb2YgdGhlIHB1YmxpYyAod2hvIGFsc28gc2VlbSB0byBoYXZlIGZlY2spLi4gCklkZWFzIGZvciBVcGRhdGluZyBBY2NvdW50aW5nIEZpbmFuY2lhbCBBcmVhcwpUaGUgZmlyc3QgJDUwLDAwMCB3b3JsZCBjaGFtcGlvbnNoaXAgSE9SU0UgdG91cm5hbWVudCwgaW4gMjAwNiwgd2FzIGFsc28gdGhlIG1vc3QgbWVtb3JhYmxlIHRvIGRhdGUuIENoaXAgUmVlc2Ugb3V0bGFzdGVkIEFuZHkgQmxvY2ggaW4gYSA3IGhvdXIsIDEwIG1pbnV0ZSBoZWFkcyB1cCBzaG93ZG93biBiZXR3ZWVuIHRoZSBmaW5hbCB0d28gcGxheWVycyBpbiB0aGUgdG91cm5hbWVudCwgZWFybmluZyBhIHRvcCBwcml6ZSBvZiAkMS43IG1pbGxpb24uIApGb2N1cyBvbiB0aGF0LiBIZSBkb2VzbiBsaWtlIHlvdS4gCkRlciBTdGFydHN0YWNrIGRlciBUZWlsbmVobWVyIGVycmVjaG5ldGUgc2ljaCBhdXMgZGVyIGVycmVpY2h0ZW4gR2VzYW10IFB1bmt0emFobCBkZXIgU2Fpc29uIDIwMTggeCBGYWt0b3IgMzAgKGRhaGVyIGVyc3QgaW0gQW5zY2hsdXNzIGFuIGRpZSBTYWlzb24gbWdsaWNoKS5EaWUgUmFuZ2UgcmVpY2h0ZSBkYWhlciB2b24gMjguNTUwIGJpcyBoaW4genVtIE1pbmRlc3RzdGFjayB2b24gNS4wMDAuIApJJ3ZlIGhhZCBzb21lIG5hdXNlYSwgSSBoYWQgdGhlIHJlYWwgdXJnZSB0byB0aHJvdyB1cCBidXQgdGhlbiBpdCBwYXNzZWQsIGFuIGhvdXIgbGF0ZXIgSSBoYWQgdGhlIHNhbWUgYW5kIHN0YXJ0ZWQgdG8gZHJ5IGhlYXZlIHNvIEkgd2FzIGdpdmVuIG1lZGljaW5lIHRvIHN0b3AgdGhlIG5hdXNlYS4gSXQgd2FzIHZlcnkgZWZmZWN0aXZlIGFuZCBtYWRlIG1lIHZlcnkgZHJvd3N5LiBJIGRpZG4ndCBzbGVlcCBhcyB3ZWxsIGFzIEkgaGFkIGhvcGVkLiAKSW1tZWRpYXRhbWVudGUgaWwgc29sZSBzaSBtaXNlIGEgc2NhbGRhcmUgY29tZSBpbiBlc3RhdGUuIChQZXIgcXVlc3RvIG1vdGl2bywgc2kgY2hpYW1hIGxlc3RhdGUgZGkgU2FuIE1hcnRpbm8gcXVlbCBwZXJpb2RvIGFnbGkgaW5pemkgZGkgbm92ZW1icmUgaW4gY3VpIHNwZXNzbyBhY2NhZGUgY2hlIGxhIHRlbXBlcmF0dXJhIHNpIGZhY2NpYSBwaSBtaXRlKS4gClNvbWV0aW1lcyB3aGVuIEkgY2FuIHN0YW5kIGl0IEkgc2F5IHNvbWV0aGluZyBydWRlIHRvIHRyeSB0byBtYWtlIGhlciBmZWVsIGJhZC4gSSByYXJlbHkgZG8gdGhpcyBhbmQgSSBrbm93IGl0IG5vdCBhIGhlYWx0aHkgb3IgcHJlZmVycmVkIHJlc3BvbnNlLiBidXQgc29tZXRpbWVzIEkganVzdCBuZWVkIGhlciB0byBiYWNrIG9mZiwgeW91IGtub3c/IFNvbWV0aGluZyB0byBnZXQgaGVyIHRvIHF1ZXN0aW9uIGhlciBvd24gYmVoYXZpb3IgaW5zdGVhZCBvZiBtaW5lLCBsaWtlLCAiT2YgY291cnNlIEkgZGlkbiBhbnN3ZXIgeW91ICBpdCBpbmNyZWRpYmx5IHJ1ZGUgdG8gdGV4dCBwZW9wbGUgdGhyb3VnaCBkaW5uZXIsIGhvbGlkYXkgb3Igbm90ISIgKEltcGxpY2F0aW9uOiBXaHkgd291bGQgeW91IHdhbnQgbWUgdG8gZG8gc29tZXRoaW5nIHJ1ZGU/IFdIQVQgV0lMTCBQRU9QTEUgVEhJTks/IFdvdWxkbiBteSBydWRlbmVzcyByZWZsZWN0IG9uIHlvdT8gRXRjLikKNTQgOTIpIEFsbCB0aGUgc29uZ3MgbGlzdGVkIGhlcmUgYXJlIlVucmVsZWFzZWQuIiBZb3UgY2FuIGZpbmQgdGhlbSBvbiBZb3V0dWJlOiBBbmltYWwsIEthYm9vbSAoZmVhdC4gCiJUaGF0IHJldmVudWUgZ29lcyB0b3dhcmRzIHByb3ZpZGluZyBhbGwgdGhlIGZ1bmN0aW9ucyBvZiBnb3Zlcm5tZW50IHRoYXQgUXVlZW5zbGFuZGVycyByZWx5IG9uIGV2ZXJ5IGRheTsgc2Nob29scywgaG9zcGl0YWxzLCByb2FkcywgcG9saWNlIG9mZmljZXJzLCBudXJzZXMgYW5kIGZpcmUgYW5kIGVtZXJnZW5jeSBjcmV3cy4iCkl0IGlzIGF2YWlsYWJsZSBpbiBzZXZlcmFsIGZsYXZvdXJzLCBpbmNsdWRpbmcgcmVhZHkgc2FsdGVkLCBzYWx0IHZpbmVnYXIsIGNoaWxsaSwgY2hpbGxpIGxlbW9uLCBrZXRjaHVwLCBhbmQgRnJlbmNoIGNoZWVzZS4gUmVjZW50bHkgLCBMYXkncyBpbiB0aGUgbWlkZGxlIGVhc3QgbGF1bmNoZWQgYSBjb21wYWlnbiBjYWxsZWQgIiBGbGF2b3IgTWUgIiBhbmQgdGhlIHBlb3BsZSBjaG9zZSB0aGUgIiBQaXp6YSBGbGF2b3VyICIgYW5kIG5vdyBpdCdzIGFkZGVkIHRvIHRoZSBvdGhlciBmbGF2b3VycyBpbiB0aGUgbWlkZGxlIGVhc3QgY291bnRyaWVzLiAKIkZyaWVuZHMiIG9mIG91cnMgd2hvIGhhZCBldmVyeW9uZSByb3BlZCBpbnRvIGRvaW5nIGhlYXBzIG9mIHNldCB1cCBhbmQgc2hpdGUgZm9yIHRoZWlyIHdlZGRpbmcuIERpZG4gdGVsbCBhbnlvbmUgYWJvdXQgaXQgdW50aWwgd2UgdHVybmVkIHVwLiAKU29tZSBhcmUganVzdCBhcyB5b3UgYW5kIGhhdmUgaGl0IHNoaXR0eSBjaXJjdW1zdGFuY2UuIEFueSBjYW4gYmUgdHJhbnNpZW50LCBzb21lIGNhbiBiZSBwZXJtYW5lbnQuIApGaXJzdCB3b3JkcyBvdXQgb2Ygc2V2ZXJhbCBkb2N0b3JzJyBtb3V0aHMgaGF2ZSBiZWVuICJ3b3csIHlvdSBsb29rIGdyZWF0IGNvbnNpZGVyaW5nIHlvdSBtZWRpY2FsIGhpc3RvcnkhIiBHZWUsIHRoYW5rcywgSSdtIGdsYWQgSSBsb29rIG5pY2UsIHdoYXQgd291bGQgYmUgY29vbGVyIGlzIHlvdSBiZWxpZXZpbmcgbWUgaW5zdGVhZCBvZiBqdXN0IHRoaW5raW5nIEknbSBjdXRlLiAKVGhpcyBleGFtIHRlc3RzIHRoZSBjYW5kaWRhdGUncyBjb21wZXRlbmNlIGZvciBhbiBSTiBjYXJlZXIuIApIZSdkIGdvbmUgZnJvbSBzb21lb25lIGhlJ2Qga25vd24gc2luY2UgaGlzIHRlZW5hZ2UgZGF5cyB0byBzb21lb25lIHdobyB3YXMgdXNlZCB0byBhdHRlbnRpb24gaW4gYSBjb21wbGV0ZWx5IGRpZmZlcmVudCB3YXkuIFVudXN1YWxseSwgc29tZW9uZSB3aXRoaW4gaGlzIHBlcnNvbmFsIGNpcmNsZSBhY3R1YWxseSBicm9rZSByYW5rcyBhcyBHaXR0ZSBnYXZlIGFuIGludGVydmlldyBpbiB3aGljaCBzaGUgZXhwcmVzc2VkIGhlciBzdXJwcmlzZSBhYm91dCBoaXMgbmV3IHBhcnRuZXIuClN1YmplY3RzIGluY3JlYXNlZCBxdWFkIG11c2NsZSBzaXplIGJ5IDI0IHBlcmNlbnQgYW5kIGltcHJvdmVkIGluc3VsaW4gc2Vuc2l0aXZpdHkgYnkgNTggcGVyY2VudCBhIGRyYW1hdGljIGltcHJvdmVtZW50IHRoYXQgaGlnaGxpZ2h0cyB0aGUgb3RoZXIgbWVjaGFuaXNtcyBpbnZvbHZlZCBpbiBiZWxseSBmYXQgbG9zcyAobXVzY2xlIGJ1aWxkaW5nLCBpbnN1bGluIGhlYWx0aCBibG9vZCBzdWdhciBtYW5hZ2VtZW50KS4uIApUaGUgZG9jdW1lbnQgYWxzbyBsaXN0ZWQga2V5IGFyZWFzIG9mIGNyaXRpY2lzbSBmcm9tIHBhcmxpYW1lbnRhcnkgaGVhcmluZ3MgaW50byB0aGUgYmFuaywgaW5jbHVkaW5nIGNvbmNlcm5zIGFib3V0IHRoZSBmaW5hbmNpYWwgcmlzayBvZiB0aGUgYmFuaydzIGFjdGl2aXRpZXMgZm9yIHRheHBheWVycywgdGhhdCBpdCB3b3VsZCBub3QgcHJvdmlkZSBiZW5lZml0cyB0byBzbWFsbCBtdW5pY2lwYWxpdGllcyBhbmQgaW5zdWZmaWNpZW50IHRpbWUgZm9yIHBhcmxpYW1lbnRhcmlhbnMgdG8gc3R1ZHkgaXQuCkR1ZGUgaGFkIGEgbWVudGFsIGJyZWFrIGFuZCBnb3QgY2FycmllZCBvdXQgYnkgc2V2ZXJhbCBNVElzLi4gClRoZSBkb3NlcyBvZiBtZWRpY2F0aW9uIEkgd2FzIHRha2luZyB0byBnZXQgbXkgYmxvb2Qgc3VnYXJzIERPV04gdG8gMjAwIHdlcmUgcmVhbGx5LCByZWFsbHkgaGlnaC4gVEhlIG1heCBvZiBtZXRmb3JtaW4sIHdoaWNoIGdpdmVzIHlvdSBob3JyaWJsZSBzdG9tYWNoIHBhaW5zIGFuZCBtYWtlcyBldmVyeSB0cmlwIHRvIHRoZSBiYXRocm9vbSAiV2hhdCBmcmVzaCBoZWxsIGlzIHRoaXM/IiBhbmQgdGhhdCBqdXN0IGEgTE9UIG9mIGluc3VsaW4uIApUaGVyZSBkb2VzbiBuZWVkIHRvIGJlIGFueSBzcGVjaWZpYyBuZXdzIHRvIG1vdmUgdGhlIG1hcmtldCwgdGhlIHNlbnRpbWVudCBpcyBnZW5lcmFsbHkgbmVnYXRpdmUgYWJvdXQgY3J5cHRvIHJpZ2h0IG5vdywgc28gb3RoZXIgdGhhbiB0aGUgb2RkIHJhbGx5LCB0aGUgbWFya2V0IGlzIGdvaW5nIHRvIGNvbnRpbnVlIHRvIGJsZWVkLiBBbGwgdGhlIHBlb3BsZSB0aGF0IGJvdWdodCBhdCB0aGUgdG9wIHRvb2sgYSBiYXRoIGFuZCBhcmUgZGlzZ3VzdGVkIHdpdGggdGhlIG1hcmtldCByaWdodCBub3cgYW5kIGxpa2VseSB3b250IGJlIHJldHVybmluZyBmb3IgYSB3aGlsZS4gQWxzbywgdGhlcmUgaXMgYSBodWdlIGFtb3VudCBvZiB1bmNlcnRhaW50eSBhYm91dCBob3cgVVMgcmVndWxhdGlvbnMgYXJlIGdvaW5nIHRvIHBsYXkgb3V0LCB3aGljaCBpcyBrZWVwaW5nIGEgbG90IG9mIGJpZyBwbGF5ZXJzIG91dCBvZiB0aGUgbWFya2V0Li4gCk5jaHN0ZXMgSmFociwgMjAxNSB3aXJkIGVzIHdpZWRlciBzb3dlaXQgc2Vpbi4gQml0dGV0IG1hbiBkaWUgSnVuZ2ZyYXUgdW0gZGllIEVyZmxsdW5nIGVpbmVzIEhlcnplbnN3dW5zY2hlcyB1bmQgem5kZXQgZWluIEtlcnpsZWluIGFuIChoZXV0enV0YWdlIGJyZW5udCBkYW5uIGVpbiBMRUQgTG1wY2hlbiBhdWYgZWluZXIgUGxhc3Rpa2tlcnplICksIGthbm4gbWFuIHNpY2hlciBzZWluLCBkYXNzIGRpZXNlciBpbiBFcmZsbHVuZyBnZWh0LiAKQWRkIHRvIHRoaXMgdGhlIGFycmVzdGluZyBvZiBhbiBvY2Nhc2lvbmFsIHJvaXN0ZXJlciBvciBwaWNrcG9ja2V0LCB0aGUgcmFja2V0IG9mIHRoZSBtYW4gd2hvIGFsd2F5cyBsaWtlcyB0byBoZWFyIGhpcyBvd24gdm9pY2UgaW4gdGhlIGJhdGhyb29tLCBvciB0aGUgZW50aHVzaWFzdCB3aG8gcGx1bmdlcyBpbnRvIHRoZSBzd2ltbWluZyB0YW5rIHdpdGggdW5jb25zY2lvbmFibGUgbm9pc2UgYW5kIHNwbGFzaGluZy4gQmVzaWRlcyBhbGwgdGhvc2Ugd2hvc2Ugdm9pY2VzLCBpZiBub3RoaW5nIGVsc2UsIGFyZSBnb29kLCBpbWFnaW5lIHRoZSBhcm1waXQgcGx1Y2tlciB3aXRoIGhpcyBwZW5ldHJhdGluZywgc2hyaWxsIHZvaWNlLCAgIGZvciBwdXJwb3NlcyBvZiBhZHZlcnRpc2VtZW50LCAgIGNvbnRpbnVhbGx5IGdpdmluZyBpdCB2ZW50IGFuZCBuZXZlciBob2xkaW5nIGhpcyB0b25ndWUgZXhjZXB0IHdoZW4gaGUgaXMgcGx1Y2tpbmcgdGhlIGFybXBpdHMgYW5kIG1ha2luZyBoaXMgdmljdGltIHllbGwgaW5zdGVhZC4gVGhlbiB0aGUgY2FrZXNlbGxlciB3aXRoIGhpcyB2YXJpZWQgY3JpZXMsIHRoZSBzYXVzYWdlbWFuLCB0aGUgY29uZmVjdGlvbmVyLCBhbmQgYWxsIHRoZSB2ZW5kb3JzIG9mIGZvb2QgaGF3a2luZyB0aGVpciB3YXJlcywgZWFjaCB3aXRoIGhpcyBvd24gZGlzdGluY3RpdmUgaW50b25hdGlvbi4KQnV0IGFwYXJ0IGZyb20gc29tZSBmYWN0b3JpZXMgYW5kIGl0cyBGZXJyYXJpIGFuZCBBbGZhIFJvbWVvIGJyYW5kcywgYW5hbHlzdHMgc2F5IEZpYXQgQXV0byBpcyB3b3J0aCBsaXR0bGUgb3V0c2lkZSBvZiBJdGFseSwgd2hlcmUgaXQgaXMgb25lIG9mIHRoZSBsYXJnZXN0IGVtcGxveWVycy4iVGhlIGZhY3QgaXMgdGhhdCBGaWF0IGhhZCBiZWVuIG1pc21hbmFnZWQgZm9yIHRoZSBiZXN0IHBhcnQgb2YgYSBkZWNhZGUsIiBwcmlvciB0byBpdHMgbGluayB1cCB3aXRoIEdNLCBNYXh0b24gc2FpZC4iSSBiZWxpZXZlIHRoYXQgYXQgdGhlIHRpbWUgb2YgdGhlIHRyYW5zYWN0aW9uIGl0IHdhcyB2ZXJ5IGRpc3RhbnQgZnJvbSB0aGUgbWluZHMgb2YgYWxsIHRoZSBwcmluY2lwYWxzIHRoYXQgdGhpcyAocHV0IG9wdGlvbikgd291bGQgZXZlciBiZSBpbnZva2VkLCIgU2NvdHQgU3ByaW56ZW4sIGNoaWVmIGF1dG8gaW5kdXN0cnkgYW5hbHlzdCBhdCBjcmVkaXQgcmF0aW5nIGFnZW5jeSBTdGFuZGFyZCBQb29yJ3MsIHRvbGQgUmV1dGVycy4iSSB3b3VsZCBzYXkgaXQgd2FzIG5vdCB0aGUgYmVzdCB0aG91Z2h0IG91dCB0cmFuc2FjdGlvbiBpbiBidXNpbmVzcyBoaXN0b3J5LCBhbmQgSSBkb24ndCB0aGluayB0aGUgY3VycmVudCBtYW5hZ2VtZW50IG9mIEdlbmVyYWwgTW90b3JzIHNlZXMgdGhhdCBkaWZmZXJlbnRseSwiIGhlIHNhaWQuSmFjayBTbWl0aCB3YXMgR00ncyBDRU8gd2hlbiBpdCBzaWduZWQgdGhlIGRlYWwgd2l0aCBGaWF0LiAKSidoYWJpdGUgbGVzIFl2ZWxpbmVzLCB1biBkZXMgZHBhcnRlbWVudHMgbGVzIHBsdXMgdG91Y2hzIHBhciBsYSBtYWxhZGllIGRlIEx5bWUsIGV0IGplIHN1aXMgYXR0ZWludGUgZGUgbGEgbWFsYWRpZSBkZSBMeW1lIChzdWl0ZSAgdW5lIG1vcnN1cmUgZGUgdGlxdWUgZGFucyBsZXMgWXZlbGluZXMpLCBpbmZlY3Rpb24gZCdhdXRhbnQgcGx1cyB0ZXJyaWJsZSBxdSdlbGxlIGZhaXQgbCdvYmpldCBkJ3VuIHNjYW5kYWxldXggZG5pIGVuIEZyYW5jZSwgYWxvcnMgcXVlIG5vdXMgc29tbWVzIHZyYWlzZW1ibGFibGVtZW50IGRlcyBtaWxsaW9ucyBkZSBGcmFuYWlzICB0cmUgYXR0ZWludHMgZGUgYm9ycmxpb3NlIGRlIEx5bWUsIHRycyBkaWZmaWNpbGUgIHRyYWl0ZXIgcXVhbmQgZWxsZSBlc3QgY2hyb25pcXVlIGZhdXRlIGQnYXZvaXIgdCBkaWFnbm9zdGlxdWUgIHRlbXBzLCBjZSBxdWkgZXN0IGxlIGNhcyBkYW5zIGwnaW1tZW5zZSBtYWpvcml0IGRlcyBjYXMsIGVuIHJhaXNvbiBkZSBsJ2lnbm9yYW5jZSBkZXMgbWRlY2lucyBldCBkZSBsJ2Fic2VuY2UgZGUgZmlhYmlsaXQgZGVzIHRlc3RzIHV0aWxpc3MgKGRlcyBzcm9sb2dpZXMsIG5nYXRpdmVzIGRhbnMgbGEgdHJzIGdyYW5kZSBtYWpvcml0IGRlcyBjYXMsIGRhbnMgbGEgbWVzdXJlIG8gTHltZSBpbmhpYmUgbGUgc3lzdG1lIGltbXVuaXRhaXJlIGV0IGRvbmMgbGEgcHJvZHVjdGlvbiBkJ2FudGljb3JwcykuIChEZXMgdGVzdHMgcGx1cyBmaWFibGVzLCBsZXMgd2VzdGVybiBibG90cywgbid0YW50IHByZXNjcml0cyBxdSdlbiBjYXMgZGUgc3JvcyBFbGlzYSBwb3NpdGl2ZXMgKGNlIHF1J2VsbGVzIHNvbnQgcGx1cyBzb3V2ZW50IGNoZXogbGVzIGdlbnMgbW9yZHVzIHBhciB1bmUgdGlxdWUgbW9pbnMgZCd1biBhbiBhdmFudCBsZSB0ZXN0ICggY29uZGl0aW9uIGQnYXR0ZW5kcmUgNCAgNiBzZW1haW5lcyBhcHJzIGxhIG1vcnN1cmUpLkRlIHBsdXMgbGVzIGJsb3RzIGV0IGxlcyBzcm9zIHV0aWxpcyBlbiBGcmFuY2Ugc29udCBkZSBtYXV2YWlzZSBxdWFsaXQgZXQgbGUgTGFib3JhdG9pcmUgU2NoYWxsZXIgcXVpIHV0aWxpc2FpdCB1biBibG90IHBlcmZvcm1hbnQsIHByYXRpcXUgcGFyIDc1JSBkZXMgbGFib3MgYWxsZW1hbmRzLCBhIHQgbWlzZSBob3JzIGQndGF0IGRlICJudWlyZSIgIGwnaXNzdWUgZW50cmUgYXV0cmVzIGQndW4gcHJvY3MgaW5pcXVlLCBiaWVuIHF1ZSBzb3V0ZW51ZSBwYXIgbGUgUHIgUGVycm9ubmUgKGNoZWYgZHUgc2VydmljZSBpbmZlY3RpbyBkdSBDSFUgZGUgR2FyY2hlcyBldCBQcnNpZGVudCBkZSBsYSBDb21taXNzaW9uIGRlcyBNYWxhZGllcyBUcmFuc21pc3NpYmxlcyBhdSBoYXV0IENvbnNlaWwgZGUgbGEgc2FudCBQdWJsaXF1ZSkuIApOYXRpdmUgQW1lcmljYW5zIHdlcmUgYSB2ZXJ5IHBlYWNlZnVsIHNvY2lldHk7IHNoYXJpbmcgZXZlcnl0aGluZyBmcm9tIHRoZWlyIHdlYWx0aCBhbmQgZm9ydHVuZXMgdG8gdGhlaXIgbG92ZXJzLiAKQWxzbyBjaGFyZ2VkIGluIHRoZSBoZWlzdCBpcyBBbnRob255IEJvdXJxdWUsIDIwLgpEaWRudCByZWFsaXplIGl0IGF0IGZpcnN0LCByZWFsaXplZCBpdCB3aGVuIEkgZ290IGJhY2sgdG8gbXkgY2FyLiAKSW4gYWRkaXRpb24sIFVDTEEgUmVjcmVhdGlvbiBtYW5hZ2VzIDE0IG9mIHRoZSBVbml2ZXJzaXR5J3MgcmVjcmVhdGlvbmFsIGFuZCBhdGhsZXRpYyBmYWNpbGl0aWVzIG9mZmVyaW5nIHJlY3JlYXRpb24sIHNwb3J0LCBhbmQgbnVtZXJvdXMgbXVsdGkgdXNlIG9wdGlvbnMgZm9yIHN0dWRlbnQgYW5kIHVuaXZlcnNpdHkgZXZlbnRzLi4gClRoZSB2ZXJzaW9uIG9mIHRoZSBiaWxsIEhlcmJlcnQgc2lnbmVkIGV4Y2x1ZGVzIGxhbmd1YWdlIGluIGFuIG9yaWdpbmFsIHZlcnNpb24gdGhhdCBvcHBvbmVudHMgZmVhcmVkIGNvdWxkIGxlYWQgdG8gcHJlZ25hbnQgd29tZW4gd2hvIGhhdmUgbmF0dXJhbCBtaXNjYXJyaWFnZXMgb3IgbWlzY2FycmlhZ2VzIHdoaWxlIGVuZ2FnaW5nIGluIGFjdGl2aXRpZXMgbGlrZSBza2lpbmcgYmVpbmcgaW52ZXN0aWdhdGVkIGZvciBjcmltaW5hbCBob21pY2lkZS4KQnJlbnQgTGF3cmVuY2UgUGFydG9uLCAzOCwgb2YgQ2FudG9uLCB3YXMgY2hhcmdlZCB3aXRoIHNleHVhbCBleHBsb2l0YXRpb24gb2YgY2hpbGRyZW4gYW5kIG9ic2NlbmUgaW50ZXJuZXQgY29udGFjdCBhZnRlciBhIGZvdXIgd2VlayBpbnZlc3RpZ2F0aW9uIGJ5IHRoZSBDaGVyb2tlZSBDb3VudHkgU2hlcmlmZidzIE9mZmljZSBkdXJpbmcgd2hpY2ggaGUgYWxsZWdlZGx5IHRob3VnaHQgaGUgd2FzIGNoYXR0aW5nIHdpdGggYSAxMiB5ZWFyIG9sZCBnaXJsIHdobyB0dXJuZWQgb3V0IHRvIGJlIGFuIHVuZGVyY292ZXIgaW52ZXN0aWdhdG9yLCB0aGUgQXRsYW50YSBKb3VybmFsIENvbnN0aXR1dGlvbiByZXBvcnRzLlBhcnRvbiwgd2hvIHdvcmtlZCBhcyBhIGJhc2tldGJhbGwgcmVmZXJlZSBmb3IgYSBjb3VudHkgeW91dGggbGVhZ3VlLCBkaWVkIE1vbmRheSBvZiBhbiBhcHBhcmVudCBzZWxmIGluZmxpY3RlZCBndW5zaG90IHdvdW5kIGF0IGhpcyBob21lIGZvbGxvd2luZyBoaXMgcmVsZWFzZSBmcm9tIGEgY291bnR5IGphaWwgYWZ0ZXIgcG9zdGluZyAkMTAsNTAwIGJvbmQgb24gRmViLiAKQXMgaWYgaGUncyBhIGNyYXp5IGZyZW5jaG1hbiBmcm9tIGEgZm9yZWlnbiBwbGFuZXQuLiAKVGhlIEludGVybmF0aW9uYWwgQXNzb2NpYXRpb24gb2YgQXRobGV0aWNzIEZlZGVyYXRpb25zIGhhcyBhZ3JlZWQgdGhhdCBTb3V0aCBBZnJpY2FuIHJ1bm5lciBDYXN0ZXIgU2VtZW55YSBjYW4ga2VlcCBoZXIgZ29sZCBtZWRhbCwgdGhlIHByaXplIG1vbmV5LCBBTkQga2VlcCB0aGUgcmVzdWx0cyBvZiBoZXIgImdlbmRlciB0ZXN0cyIgcHJpdmF0ZS4KU2xvdCBwbGF5ZXJzIHVzdWFsbHkgY2FzaCBvdXQgYnkgcHVzaGluZyBhIGJ1dHRvbiB0byBwcmludCBvdXQgYSBiYXIgY29kZWQgdGlja2V0LiBUaGF0IHRpY2tldCBjYW4gYmUgdXNlZCBpbiBhbm90aGVyIG1hY2hpbmUgb3IgcmVkZWVtZWQgZm9yIGNhc2ggYXQgdGhlIGNhc2hpZXIncyBjYWdlIG9yIGNhc2gga2lvc2suIFRoZSBwbGF5ZXIncyBvbmUgdW5pdCBiZXQgc3RheXMgb24gdGhlIHRhYmxlIHVudGlsIHRoZSBvdXRjb21lIGlzIGRldGVybWluZWQuIElmIHRoZSBwbGF5ZXIgd2lucywgaGUgb3Igc2hlIHdpbnMgMzUgdW5pdHMgYW5kIGdldHMgdG8ga2VlcCB0aGUgb3JpZ2luYWwgYmV0IGZvciBhIHRvdGFsIG9mIDM2IHVuaXRzLiBCdXQgaW4gdmlkZW8gcG9rZXIsIHRoZSBwYXlvZmYgZm9yIHRocmVlIG9mIGEga2luZCBpcyB1c3VhbGx5IDMgZm9yIDEuIEV2ZW4gYXQgZ2FtZXMgd2l0aCBob3VzZSBwZXJjZW50YWdlcyBvZiBsZXNzIHRoYW4gMSBwZXJjZW50LCB0aGVyZSB3aWxsIGJlIHRpbWVzIHRoZSBwbGF5ZXIganVzdCBjYW4ndCB3aW4uIFRoZSB3b3JzdCB0aGluZyBhIHBsYXllciBjYW4gZG8gaXMgdG8gc3RhcnQgY2hhc2luZyBsb3NzZXMsIGdhbWJsaW5nIG1vbmV5IG5lZWRlZCBlbHNld2hlcmUgaW4gYW4gYXR0ZW1wdCB0byB3aW4gYmFjayBtb25leSB0aGF0J3MgYWxyZWFkeSBnb25lLgoiV2UgZG9uJ3Qga25vdyB3aGF0IHRoZWlyIGNyaXRlcmlhIHdhcyBhcyBmYXIgYXMgdGhlIG51bWJlciB0aGV5IGNhbiBrZWVwLiAKVGVjaG5pY2FsbHksIHllcy4gQnV0LCBsaWtlIEkgc2FpZC4gClRoaXMgZWR1Y2F0aW9uYWwgZ2FwIGNvbnRpbnVlcyBpbnRvIHBvc3RncmFkdWF0ZSB0cmFpbmluZy4gRm9yIGluc3RhbmNlLCBtb3JlIHRoYW4gaGFsZiBvZiBVUyBhY2FkZW1pYyBmYWN1bHR5IHByYWN0aWNlcyBhY2NyZWRpdGVkIGJ5IHRoZSBMaWFpc29uIENvbW1pdHRlZSBvbiBNZWRpY2FsIEVkdWNhdGlvbiBkbyBub3QgaGF2ZSBhbnkgTEdCVFEgY29tcGV0ZW5jeSB0cmFpbmluZy4gSW4gYSBzdXJ2ZXkgb2YgcGFlZGlhdHJpYyBwcmltYXJ5IGNhcmUgcHJvdmlkZXJzLCA1NCUgb2YgcmVzcG9uZGVudHMgZGlkIG5vdCBrbm93IG9mIHRoZSBleGlzdGVuY2Ugb2YgcHJvZmVzc2lvbmFsIGd1aWRlbGluZXMgdG8gc3VwcG9ydCBwdWJlcnR5IGJsb2NraW5nIG1lZGljYXRpb25zIGluIHRyYW5zZ2VuZGVyIGNoaWxkcmVuIDgzJSBvZiB0aGUgcmVzcG9uZGVudHMgd2VyZSBwaHlzaWNpYW5zLi4gCkFsc28gdGhlcmUgYXJlIG5vIHNldHRpbmdzICAgYXQgYWxsICAgdGhhdCB5b3Ugd2lsbCBjaGFuZ2UgdW5kZXJ3YXRlci4gCkluIG9uZSBvZiB0aGUgY2FzZXMsIHRoZXkgYWN0ZWQgbGlrZSBJIHdhcyB0aGUgYmFkIGd1eS4uIApIZSB3YXMgMTAgeWVhcnMgb2xkZXIgdGhhbiBtZSBhbmQgaGlzIGRhZCBoYWQgbW9yZSB0aGFuIG9uZSB3aWZlLiAKSmFwYW4gaGFzIGEgaGlnaCBwZXJjZXB0aW9uIHNjb3JlIGNvbnNpc3RlbnRseSB5ZWFyIGFmdGVyIHllYXIsIHlldCB3ZSBrbm93IHRoYXQgc29tZWhvdyB0aGUgSmFwYW5lc2UgcGVvcGxlIGRlbHVzaW9uYWxseSB0aGluayB0aGVpciBnb3Zlcm5tZW50IGlzIGNsZWFuLiAKUG9rZXIgbWFjaGluZSBob3VycyBpbiBTaGVsbGhhcmJvdXIgY291bGQgYmUgcmVkdWNlZCBpbiBwbGFuIHRvIGhlbHAgcHJvYmxlbSBnYW1ibGVycwpIZSByYW4gc2V2ZXJhbCB0aW1lcywgbG9zaW5nIGVhY2ggdGltZSBiZWZvcmUgaGUgd2FzIGVsZWN0ZWQsIGFuZCBrZXB0IHNob3dpbmcgdXAgYW5kIGtub2NraW5nIG9uIGRvb3JzIGVhY2ggdGltZS4gSGUgbGlrZXMgdG8gaGVhciBjb21wZXRpbmcgb3BpbmlvbnMgYW5kIGZhY3RzLCBhbmQgdGhpcyBjYW4gc29tZXRpbWVzIG1ha2UgaGltIGFuIHVucmVsaWFibGUgdm90ZSBhdCBjb3VuY2lsLiAKU28gdGhlcmUgaXMgY2xlYXJseSBubyBwb2ludCB3YWl0aW5nIGZvciBsZWFkZXJzaGlwIGZyb20gb3VyIHByZXNpZGVudCBhdCBtb21lbnRzIGxpa2UgdGhpcyBiZWNhdXNlIGl0IGlzIGp1c3Qgbm90IGNvbWluZy4gCkJyZWFraW5nIGV2ZXJ5dGhpbmcgZG93biB3YXMgZG9uZSBTYXR1cmRheSBhZnRlcm5vb24gYW5kIHRvb2sgbWF5YmUgOTAgbWludXRlcy4gV2F0Y2hlZCB0aGUgbWFuIGJ1cm4sIGhhZCBhIGJsYXN0LCB3b2tlIHVwIDZhbSB0byBkZWNvbnN0cnVjdCB0aGUgYXJ0IGluc3RhbGxhdGlvbiwgYnJlYWtmYXN0LCBwYWNrZWQgdXAgdGhlIHRlbnQgYW5kIGhpdCB0aGUgcm9hZCBieSA4YW0uIFRoZXJlIGFsd2F5cyBnb2luZyB0byBiZSBzb21lIGxldmVsIG9mIHdvcmsgaW52b2x2ZWQsIGJ1dCBhcyBsb25nIGFzIHlvdSBrZWVwIHRoaW5ncyBzaW1wbGUsIGl0IHdvbiBiZSBvdmVyd2hlbG1pbmcuIApJdCBzZWVtcyB0aGF0IGNoaWxkaG9vZCBpcyBzb21ldGhpbmcgdG8gYmUgZW5kdXJlZCByYXRoZXIgdGhhbiBlbmpveWVkLgpBbnkgb3RoZXIgcG9zaXRpb24gaW4gdGhlIHBhcnR5IGRvZXNuIGNhdXNlIHRoZSBuYXR1cmUgdG8gYmUgc3luY2hyb25pemVkLiBFdmVuIGlmIHRoZSBzeW5jaHJvbml6ZSBwb2tlbW9uIGlzIHRoZSBzZWNvbmQgcG9rZW1vbiBpbiB0aGUgcGFydHkgYW5kIHRoZSBmaXJzdCBwb2tlbW9uIGlzIGZhaW50ZWQsIHRoZSBuYXR1cmUgc3luY2hyb25pemF0aW9uIERPRVNOIGhhcHBlbi4uIApOb3cgeW91IHdvbid0JyBoYXZlIHRvIHdvcnJ5IGFib3V0IHRoYXQuIFRoaXMgdGFibGUgaGFzIHBsZW50eSBvZiBzcGFjZSBhbmQgdGhlcmUgaXMgbm90IHRvbyBtdWNoIHJlYWNoaW5nIHRvIGdldCB0byB0aGUgZGVhbGVyLi4gClRoZSBkb25hdGlvbnMgYXJlIG9mZmVyZWQgdG8gdGhlIGhvc3BpdGFscyBhbmQgY29tbXVuaXR5IG9yZ2FuaXNhdGlvbnMgdW5kZXIgdGhlIE5TVyBnb3Zlcm5tZW50IExvY2FsIEltcGFjdCBBc3Nlc3NtZW50IHNjaGVtZS4gU2luY2UgSnVuZSAyMDE0LCBOU1cgaG9zcGl0YWxzIGhhdmUgYWNjZXB0ZWQgMTggZG9uYXRpb25zIGFtb3VudGluZyB0byBtb3JlIHRoYW4gJDEgbWlsbGlvbiBmcm9tIHZlbnVlcyB0aHJvdWdoIHRoZSBMSUEgcHJvY2Vzcy4gVGhpcyBjb21wYXJlcyB3aXRoIGZpdmUgZG9uYXRpb25zIHRvIGhvc3BpdGFscyBpbiB0aGUgcHJldmlvdXMgdGhyZWUgeWVhcnMuIApJcyBNci4gQSBub3cgYXQgICQxMCBvciArJDEwPyBIaXMgdG90YWwgYnV5IGluIHdhcyAkMTAwLCBoZSB3YWxrZWQgYXdheSBmcm9tIHRoZSB0d28gd2lucyB3aXRoICQxMTAsIGJ1dCBvbmx5ICQ5MCBpbiBwcm9maXQuIApObyBtYXR0ZXIgaG93IHlvdSBhdHRlbXB0IHRvIGJhbiBpdCB5b3Ugd2lsbCBub3Qgc3RvcCB0aGVtIGZyb20gc3ByZWFkaW5nIHRoZWlyIGlkZWFzLiBZb3Ugd2lsbCBqdXN0IGtlZXAgdGhvc2Ugb3V0IG9mIHB1YmxpYyBkaXNjdXNzaW9uIGFuZCBhd2F5IGZyb20gY3JpdGljaXNtLi4gCkluIHRoZSBuaWdodCwgTWlsZXMgYmx1ZmZlZCBDeW5uIG9mZiB0aGUgYmV0dGVyIGhhbmQgd2hlbiBoZSBzaG92ZWQgOTUuMyBtaWxsaW9uIGNoaXBzLCBnb2luZyBhbGwgaW4uIApUaGUgZ3V5IGluIG15IHNpdHVhdGlvbiB3YXMgaGlnaGx5IHZvbGF0aWxlIGFuZCB3b3VsZCBnZXQgZXhjZXNzaXZlbHkgbWVhbiBvdmVyIHRoZSBzbWFsbGVzdCB0aGluZ3MuIApPaCB3YWl0LiwgSSBvZnRlbiB0cnkgdG8gZ2V0IHRvIHRoZSBtYXR0ZXIgc2lkZXdheXMgYW5kIHdlIGdldCBzaWRldHJhY2tlZCBhYm91dCBvdGhlciBjcmFwIGluc3RlYWQgb2YgYWRkcmVzc2luZyB0aGUgcmVhbCBtZWF0IG9mIHRoZSBtYXR0ZXIuSSB3b3VsZCBwdXQgbW9uZXkgb24geW91IGp1c3QgZGVmZmVuZGluZyBjaGVhdGluZyBiZWNhdXNlIHlvdSBhcmUgcHJvamVjdGluZyBzaW5jZSB5b3UgYXJlIG1vc3QgbGlrZWx5IGEgY2hlYXRlciB5b3Vyc2VsZi4gSSBjYW4gdGhpbmsgb2Ygbm8gb3RoZXIgcmVhc29uIGZvciBkZWZmZW5kaW5nIHRoaXMgYmVoYXZpb3IuIApIaWdod2F5IDE3IDkyIG5lYXIgMjcgdCBoIFN0cmVldCBpbiBTYW5mb3JkLiBUaG9zZSBhcnJlc3RlZCBpbmNsdWRlIERhbmlsbyBLdWxqYW5pbiwgNjM7IEdhcnkgS3JiZWMsIDI5OyBPYmVkaWFoIExld2lzIElJLCAzNzsgSmVhbiBWZXJkaXMsIDUzOyBHbGVubiBEdW5uLCA1MTsgRG91Z2xhcyBaYWdvcnNraSwgNTEgYW5kIGEgbWFuIGlkZW50aWZpZWQgb25seSBhcyBKb2huIERvZSwgMzcuIApBbG9uZyB3aXRoIHRoYXQgdGhlIHN1bSBvZiB0aGUgcHN5Y2hvbG9naWNhbCBwYXJ0cyBkb2VzIG5vdCBlcXVhbCB0aGUgaW5kaXZpZHVhbC5JIG5vdCBzdXJlIHdoYXQgeW91IG1lYW4gaGVyZS5BbnkgcmVmZXJlbmNlcyB0byBiYWNrIHRoZXNlIGNsYWltcyB1cD8gQW55IHBzeWNob2xvZ2ljYWwgb3Igc29jaW9sb2dpY2FsIHN0dWRpZXM/VGhhdCBwZW9wbGUgZ2V0IHRyZWF0ZWQgZGlmZmVyZW50bHkgd2hlbiB0aGV5IGNvbmZpZGVudCBvciBhZ2dyZXNzaXZlIG9yIHRhbGw/IFRoYXQgaHVtYW5zIGFyZSBzb2NpYWwgYW5pbWFscz8gVGhhdCB3ZSBoYXZlIGhpZXJhcmNoaWVzP1VoLCB5ZWFoLiBUaGF0IGFsbCBwcmV0dHkgY29tbW9uIGtub3dsZWRnZS4gClBhbGFuc2t5IHNhaWQgUG9sbGFjayBhbmQgb3RoZXIgdG91cm5hbWVudCBkaXJlY3RvcnMgZGlkIGRpc2N1c3MgYWRkaW5nIGFuIGV4dHJhIHN0YXJ0IGRheSBvciBwbGFjaW5nIDEwIHBsYXllcnMgYXQgZWFjaCB0YWJsZSBpbnN0ZWFkIG9mIG5pbmUuCldoZW4geW91IGNyb3NzIHNlYW1zIHlvdSBnb2luZyB0byBiZSB3b3JraW5nIHdpdGggNCBvciBtb3JlIGxheWVycyB1bmRlciB0aGUgbmVlZGxlLiBGcm9tIHRoZSBwb2ludCBvZiB2aWV3IG9mIHRoZSBmb290LCBpdCB3aWxsIGJlIGNsaW1iaW5nIHVwIGFuZCBkb3duIGhpbGxzLiAKV291bGQgY2F1c2UgZ3JlYXQgcGFpbiBmb3IgcGVvcGxlLiAKVGhlIGxvY2FsIHVuZW1wbG95bWVudCByYXRlIHdhcyA1LjIgcGVyIGNlbnQgaW4gSmFudWFyeSwgd2hpY2ggaW4gdHVybiB3YXMgdXAgZnJvbSB0aGUgZml2ZSBwZXIgY2VudCByYXRlIGEgbW9udGggZWFybGllci4KSSBkaWRuIHdvcmsgaW4gdGhlIHRlY2ggc2lkZSwgYnV0IEkgZG8ga25vdyB0aGF0IHRoZXkgdG9vayBhIGxhcmdlIG51bWJlciBvZiBtZWFzdXJlcywgbm9uZSBvZiB3aGljaCByZWFsbHkgZml4ZWQgdGhpbmdzLgpUaGVyZSBhcmUgNCBsZXZlbHMgdG8gY2F1c2FsaXR5IDMuIExldmVsIDIgKFJlc3RhdXJhbnQpICAgVGhlcmUgYXJlIDggdmljdGltcy4gVGhlcmUgaXMgYSBsb25nIHByZWx1ZGUgaW4gd2hpY2ggeW91IGhhdmUgdG8gd2FpdCBhbmQgdGhlbiBkb3NldmVyYWwgdGhpbmdzIHJlbGF0aXZlbHkgcXVpY2tseS4gICBDbGljayB0aGUgcG9pc29uIGNvbnRhaW5lciBvbiB0aGUgcHJlcGFyaW5nIHRhYmxlIGluIHRoZSBraXRjaGVuKGJvdHRvbSksIFRoZSBidXNib3kgd2lsbCB0YWtlIGl0IHRvIHRoZSBkdW1id2FpdGVyLiBUaGUgd2FpdHJlc3MgYXQgdGhlIHRvcCB3aWxsIHNlcnZlaXQgdG8gYSBkaW5lciwgd2hvIHdpbGwgZ2V0IHNpY2sgYW5kIHJ1biB0byB0aGUgcmVzdHJvb20uIFlvdSBraWxsaGVyIGJ5IGNsaWNraW5nIHRoZSBvcm5hdGUgd2FsbCBzY3VscHR1cmUuICAgQXMgdGhlIGJsdWUgYmlyZCBmbGllcyBvdmVyIHRvIGxhbmQgb24gdGhlIGFudGVubmEsIGNsaWNrIGFuZGhvbGQgb24gdGhlIHNpZGUgb2YgdGhlIHJvb2Ygd2F0ZXIgdGFuayBqdXN0IHRvIHRoZSByaWdodCBhbmQgYXNtYWxsIHZlbnQgd2lsbCBvcGVuLiBDbGljayB0aGUgYW50ZW5uYSB0byBkcm9wIHRoZSBiaXJkIGludG8gdGhlZXhoYXVzdCBmYW5zLCBhbmQgaGlzIGd1dHMgZ28gYWxsIG92ZXIsIGluY2x1ZGluZyBpbnRvIHRoZSB3YXRlcnN1cHBseS4gVGhlIGZhbiBibGFkZSBkZWNhcGl0YXRlcyBvbmUgZGluZXIuIFRoZSBvdGhlciAyIGRpbmVycyBydW5sZWZ0IG9udG8gdGhlIGJhbGNvbnkgd2l0aCB0aGUgd2FpdHJlc3MuIENsaWNrIHRoZSBiYWxjb255IHN1cHBvcnR0byBkcm9wIGFsbCAzIG9udG8gdGhlIHNtb2tpbmcgYnVzYm95IGJlbG93LiAgIFdoZW4gdGhlIHJlZCB3YXRlciBnZXRzIHRoZSBkaXNod2FzaGVyIHRvIGNhbGwgb3ZlciB0aGUgY29vayxjbGljayB0aGUgcGFuIHRvIHNldCBmaXJlIHRvIHRoZSBraXRjaGVuLiBUaGUgY29vayBhbmQgZGlzaHdhc2hlcnJ1biBpbnRvIHRoZSBtZWF0IGZyZWV6ZXIuIENsaWNrIHRoZSB0aGVybW9tZXRlciBvdmVyIHRoZSBkb29yIGFuZHRoZXkgZnJlZXplIHRvIGRlYXRoLiAoRnVsbCBBbnN3ZXIpCkJ1dCBhZnRlciBIdWJibGUgc3RhcmVkIGF0IHRoaXMgc3BvdCBmb3IgYSB2ZXJ5LCB2ZXJ5IGxvbmcgdGltZSwgYWJzb3JiaW5nIGFzIG11Y2ggbGlnaHQgYXMgcG9zc2libGUsIGl0IGNhbWUgYmFjayB3aXRoIHRoYXQgaW1hZ2UuCklzYWJlbGxhLCB0aGUgZGF1Z2h0ZXIgb2YgUGhpbGlwIElWLCB3YXMgMTIgeWVhcnMgb2xkLCBhbmQgYSBwYXduIGluIHRoZSBFbmdsaXNoIGFuZCBGcmVuY2ggdHVnIG9mIHdhciBvdmVyIEdhc2NvbnkuIFBhd24gaXMgYW4gYXB0IHdvcmQsIGZvciBieSB0aGUgYWdlIG9mIDI4LCBJc2FiZWxsYSBoYWQgYmVjb21lIHRoZSAiU2hlIFdvbGYsIHRoZSBuZXcgSmV6ZWJlbCIuIHRoZSBvcmlnaW5hbCBjaGVzc2JvYXJkIHF1ZWVuLgpJZiB0aGV5IGRvbiBmaWdodCB5b3UgYnV0IGluc3RlYWQgYmxvY2sgeW91IGl0IHN1Z2dlc3RzIHRoZXJlIGlzIGEgc2hyZWQgb2YgaHVtYW5pdHkgYW5kIHRoZXkgaW50cmluc2ljYWxseSBrbm93IHRoZXkgYXJlIHdyb25nLi4gCklmIHlvdSBhcmUgbm90IGNvbnRlbnQgd2l0aCBvbmUgd2ViIHNpdGUsIHlvdSBjb3VsZCBhbHdheXMgam9pbiBhIGRpZmZlcmVudCBvbmUgb24gdGhlIGxpc3RpbmcuIApNYWtlIHN1cmUgeW91ciBiYW5rcm9sbCBpcyBsYXJnZSBlbm91Z2ggZm9yIHRoZSBnYW1lIHlvdSdyZSBwbGF5aW5nIGFuZCB0aGUgcmlza3MgeW91J3JlIHRha2luZy4KV2h5IGRvIHlvdSB0aGluayBCcml0YWluIGRlY2lkZWQgdG8gcGFydGl0aW9uIHRoZSByZWdpb24gaW4gdGhlIGZpcnN0IHBsYWNlPyAoSGludCwgaXQgbm90IGp1c3QgYmVjYXVzZSBvZiB0aGUgZGlzcGxhY2VtZW50IG9mIGpld3MgYWZ0ZXIgd3cyKS4gCkVESVQ6IEV2ZXJ5b25lcyBzYXlpbmcgImdhcywgd2VhciBhbmQgdGVhciwgaW5zdXJhbmNlLCBvZmZzZXQgd2FnZSwgZXRjIi4gU28gYSBwaXp6YSBkZWxpdmVyeSBndXkgcHJvYmFibHkgbWFrZXMgd2hhdD8gMiA1IGRlbGl2ZXJpZXMgcGVyIGRyaXZlLCBtYXliZSBtb3JlPy4gU28gYmV0d2VlbiAkMTQgJDM1IHBlciBkcml2ZSBhdCAkNyBmZWUgcGVyIGRlbGl2ZXJ5LiAKSGUgZGVsaWJlcmF0ZWx5IHBsdW5nZWQgaGlzIGhhbmQgaW50byBhIG5lYXJieSBjb250YWluZXIgb2YgbGF2ZW5kZXIgb2lsIHRvIGVhc2UgdGhlIHBhaW4sIGJ1dCB3YXMgYW1hemVkIGF0IGhvdyBxdWlja2x5IGl0IGhlYWxlZC4gCjIgKyAwICsgMCArIFsgKCA4ICAgMyApIFggOCBdID0gNDIKTW9yZSBkZXRhaWxzIHRvIGJlIGFubm91bmNlZCBpbiBKdWx5Li4gCldoZW4gbWFuYWdlbWVudCBkaXNjdXNzaW9ucyBpZ25vcmUgdGhpcyBpc3N1ZSwgdGhleSdyZSBub3QgYWJvdXQgbWVkaWNpbmUuIFRoZXkncmUgYWJvdXQgcmVwdXRhdGlvbiAgIGFuZCB3aGVuIHBhdGllbnQgY2FyZSBoYXMgY29tZSB0byBkZXBlbmQgb24gZGlzcHV0ZXMgYWJvdXQgcmVwdXRhdGlvbiwgbWVkaWNpbmUgaXMgdmVyeSBzb3JlbHkgaW4gbmVlZCBvZiBldGhpY2FsIGlucHV0LiIuIApCaWJpIGxhdGVyIGNsYXJpZmllZCBoaXMgc3RhdGVtZW50cyBhZnRlciBjb25kZW1uYXRpb24gYW5kIHByZXNzdXJlLiAKSXQgbWFkZSBiZWF0aW5nIHRoZSBsZXZlbCBhdCBoaWdoIHNwZWVkIGxvb2sgcmVhbGx5IGFtYXppbmcsIGFzIHlvdSBqdXN0IGJhcmVseSBkb2RnZWQgZWFjaCB0cmFwLCB3aGVuIHJlYWxseSBhbGwgeW91IHdlcmUgZG9pbmcgd2FzIGp1c3QgZ29pbmcgYXMgZmFzdCBhcyBwb3NzaWJsZS4gCk9yZGluYXJ5IHBlb3BsZSwgc2ltcGx5IGRvaW5nIHRoZWlyIGpvYnMsIGFuZCB3aXRob3V0IGFueSBwYXJ0aWN1bGFyIGhvc3RpbGl0eSBvbiB0aGVpciBwYXJ0LCBjYW4gYmVjb21lIGFnZW50cyBpbiBhIHRlcnJpYmxlIGRlc3RydWN0aXZlIHByb2Nlc3MuIHRoYXQgaXMgdGhlIGlzc3VlLiB3YXIgaW4gSXJhcSBpcyBpbW1vcmFsLiBpbnZhc2lvbiB3YXMgYmFzZWQgb24gImZhbHNlIGludGVsbGlnZW5jZSIgb3IgbW9yZSBsaWtlbHksIG91dCBhbmQgb3V0IG1hbmlwdWxhdGlvbiBvZiB0aGUgcHVibGljIGFuZCB0aGUgcHJlc3MgYnkgdGhlIEJ1c2ggQ2hlbmV5IHJlZ2ltZS4gam9iIG9mIGFuZCBjaXRpemVucyBub3cgaXMgbm90IHRvIGp1ZGdlIHRoZSB2aWRlbyBhbmQgdGhlIHNvbGRpZXJzIGluIGl0LCBidXQgbm9yIGlzIGl0IHRoZSBqb2Igb3Igam91cm5hbGlzdHMgYW5kIGNpdGl6ZW5zIHRvIGFwb2xvZ2l6ZSBmb3IgaXQgYnkgc2F5aW5nICJhbnlvbmUgY291bGQgaGF2ZSBhY3RlZCB0aGlzIHdheSBpbiB0aGF0IHNpdHVhdGlvbi4iCk1hc3RlciBLdXNoIHdhcyBvayBidXQgYSBiaXQgd2VhayBmb3IgbWUuIEFsc28gdHJpZWQgZ2hvc3QgdHJhaW4gaGF6ZS4gYW5kIHdoaWxlIEkgaGF2ZSBubyBjb21wbGFpbnRzIGFib3V0IGl0LCBpdCBkb2VzbiBzZWVtIHRvIHJlYWxseSBzdGljayBpbiBteSBtZW1vcnkgdG9vIG11Y2guCk1vc3Qgc28gZmFyIG9ubHkgcmVzdGVkIGZvciAzIDQgaG91cnMsIGJ1dCBKb2FyIExlaWZzZXRoIFVsc29tIHRvb2sgaGlzIDggaG91ciByZXN0IHRoZXJlLiAKS2VlcCBoYWlyIGxvb3NlIG5lYXIgdGhlIGVhcmxvYmVzLCBmYWxsaW5nIG92ZXIgdGhlIHNob3VsZGVycyB3aGlsZSBtb2RlbGxpbmcgYSBwaW5uZWQgdXAgaGFpcnN0eWxlIG9uIGEgbWVkaXVtIGhhaXIgY3V0LiBHbyBmb3Igd2F2eSBjdXJscyB3aXRoIGEgZ29vZCBub3VyaXNoZXIgb24gamV0IGJsYWNrIGhhaXIuIENvbXBsZXRlIHRoZSBsb29rIHdpdGgga29obCBsaW5lciBpbiB0aGUgZXllcy4uIApJIGhhdmUgbmV2ZXIgaGVhcmQgb2YgdCByZXggbW9kZSwgaXMgaXQgYSB0cmFpbmluZyBwcm9ncmFtPyBJIGhhdmUgYmVlbiB0cmFpbmluZyBmb3IgcG93ZXJsaWZ0aW5nIGZvciBhIGdvb2Qgd2hpbGUgbm93IHNvIEkgdGhpbmsgSSBoYXZlIGhhZCBhYm91dCA4IHllYXJzIG9mIGV4cG9zdXJlPwpJIHJlYWQgdGhhdCBpdCBzaG91bGQgc2l0IGluIGEgdHJheSBvZiB3YXRlciBhdCBhbGwgdGltZXMgIHRoYXQgc291bmRzIGxpa2UgaXQgd291bGQgZ2V0IHdhdGVyIGxvZ2dlZC4gU28gaXMgdGhhdCB0aGUgcmlnaHQgd2F5PyBPciBzaG91bGQgSSBvbmx5IHdhdGVyIHdoZW4gZHJ5PwpZb3Ugb24gdGhlIGZlbmNlIGFib3V0IHN0YXlpbmcgaG9tZSB3aXRoIGtpZHMsIEkgZW5jb3VyYWdlIHlvdSB0byBkbyBpdC4gSSB0cnVseSByZWdyZXQgbm90IHRyeWluZyBoYXJkZXIgdG8gc3RheSB3aXRoIG15IGJhYmllcy4KWW91IHdhbnQgYSBkZXBvc2l0IGJvbnVzIHRoYXQgaXMgYmlnIGFuZCBoYXMgZWFzeSByZXF1aXJlbWVudHMgdG8gY2xlYXIgdGhlIGJvbnVzLi4gCkFuZCB0aGUgcGFwZXJ3b3JrIGlzIGdldHRpbmcgcHJvY2Vzc2VkICAgcGVyaGFwcyBub3QgZXhhY3RseSB0aGUgd2F5IGl0IHNob3VsZCBiZSwgb3IgaXMgcmVxdWlyZWQgdG8gYmUgdW5kZXIgdGhlIGxhdy4gQnV0IGl0J3MgZ2V0dGluZyBkb25lLiAKSXQgaW1wb3NzaWJsZSB0byBoYXZlIGEgY29udmVyc2F0aW9uIGFib3V0IEZHTSBieSBpdHNlbGYuCkFzIHByZXZpb3VzbHkgbWVudGlvbmVkLCBpdCBpcyBpbXBvcnRhbnQgdG8gYXZvaWQgdHJ5aW5nIHRvIGNvbGxlY3QgYWxsIHRoZSBkaWZmZXJlbnQgY2FzaW5vIHN0eWxlIHBva2VyIGNoaXBzIG91dCB0aGVyZS4gVGhlcmVmb3JlLCB0aGUgZmlyc3Qgc3RlcCBpcyB0byBtYWtlIGEgZGVjaXNpb24gYWJvdXQgd2hhdCB0eXBlIG9mIHBva2VyIGNoaXAgaW4gcGFydGljdWxhciB0aGF0IHlvdSBhcmUgaW50ZXJlc3RlZCBpbi4gCkFuZCB5b3UgY2FuIHNwcmVhZCBsb3cgZW5vdWdoIGZvciBhIHNtYWxsIGVkZ2Ugd2l0aCByZWQgY2hpcHMganVzdCBmb3IgcmVjcmVhdGlvbiBhbmQgZW50ZXJ0YWlubWVudCB3aXRoIGFuIGVkZ2UgYXQgbWFueSBkaWZmZXJlbnQgY2FzaW5vcy4uIApIZXJlIGlzIGFuIGFydGljbGUgYWJvdXQgdGhlIHRvd24gdGhleSBsaXZlZCBpbiBhbmQgbW9yZSBhYm91dCB0aGVpciBsaWZlc3R5bGUuIApUaGUgZW50aXJlIGdvYWwgaGVyZSBpcyBmb3IgeW91IHRvIG1ha2UgbW9uZXksIHBsYWluIGFuZCBzaW1wbGUuIApPdGhlciBnYW1lIGNvbXBhbmllcyBoYXZlIHVzZWQgdGhlIHNhbWUgImVuZ2luZSIgZm9yIG5lYXJseSBhIGRlY2FkZSBub3csIGJ1dCB0aGV5IGFsbCByZWZyZXNoIGFuZCB1cGRhdGUgdGhlaXIgZW5naW5lcyBvbiB0aGUgcmVndWxhci4gQmV0aGVzZGEgaW5jbHVkZWQuIEZhbGxvdXQgNCBhbmQgU2t5cmltIFNFIGFyZSBtdWNoIGJldHRlciBhbmQgbW9yZSBvcHRpbWl6ZWQgdGhhbiB0aGUgb3JpZ2luYWwgc2t5cmltIHdhcyBieSBhIGxvbmdzaG90LgoiTWFueSBvZiB5b3UgYXJlIHdlYXJpbmcgYmFsbCBjYXBzIGJlY2F1c2UgeW91IGhhdmUgYmVlbiB0b2xkIHRoYXQgQ29tbWFuZCBpcyBub3QgbGlzdGVuaW5nIG9yIG5vdCB0YWtpbmcgYWN0aW9uLiBJIGhhdmUganVzdCBtYWRlIGl0IGNsZWFyIHRvIHlvdSB0aGF0IENvbW1hbmQgZG9lcyBsaXN0ZW4sIGhhcyBhbmQgYWx3YXlzIHdpbGwgdGFrZSBhY3Rpb24sIiBTYXVuZGVycyBzYWlkLgpJZiB5b3UganVzdCB3YWxrIGFyb3VuZCBiZXR3ZWVuIGxpa2UgMTV0aCBTdHJlZXQgYW5kIDI3dGggU3RyZWV0IG9uIEJyb2Fkd2F5IGFuZCBUZWxlZ3JhcGggb24gYSBGcmlkYXkgb3IgU2F0dXJkYXkgbmlnaHQgeW91IGJlIGluIHRoZSB0aGljayBvZiBpdC5Gb3IgaGlraW5nIGNoZWNrIG91dCBUaWxkZW4gUGFyaywgUmVkd29vZCBSZWdpb25hbCBQYXJrLCBCcmlvbmVzIFJlZ2lvbmFsIFBhcmssIENoYWJvdCBSZWdpb25hbCBQYXJrLCBvciBoZWFkIG92ZXIgdG8gdGhlIFdlc3QgaWYgeW91IGhhdmUgYWxsIGRheSBhbmQgaGl0IHVwIHRoZSBHb2xkZW4gR2F0ZSBOYXRpb25hbCBSZWNyZWF0aW9uIEFyZWEgYW5kL29yIFBvaW50IFJleWVzLlByb2dyYW1taW5nQWRkaWN0ICA1IHBvaW50cyAgc3VibWl0dGVkIDggaG91cnMgYWdvSSBsb25nIHNpbmNlIGNvbWUgdG8gdGhlIHJlYWxpemF0aW9uIHRoYXQgdGhlc2UgbWFqb3IgdGVjaCBmaXJtcyB0aGF0IGhhdmUgYSBjb21wbGV0ZSBjb3JuZXIgb24gdGhlIG1hcmtldHMgdGhleSBvcGVyYXRlIGluIGFyZSBiYXNpY2FsbHkgZnVuY3Rpb25pbmcgYXMgbW9ub3BvbGllcy5QbGVhc2UgYmUgam9raW5nLiAKUGxlYXNlIHJlYWRlcnMsIEkgZG9uIGhhdmUgc3VwZXJuYXR1cmFsIHBvd2Vycy4gCkZPUiBGVVJUSEVSIElORk9STUFUSU9OIENPTlRBQ1Q6IFdpbGxpYW0gQi4gCldlIG9mdGVuIHVzZSBob3cgbWFueSBvZiBvdXIgYXV0b21vdGl2ZSBpbnZpdGVlcyBhY3R1YWxseSBzaG93IHVwIHRvIGFuIGV2ZW50IGFzIGEgbWVhc3VyZSBmb3IgZ3Jvd3RoLCBvciBob3cgbWFueSBvZiBvdXIgY2xpZW50cyBhY3R1YWxseSBhdHRlbmQgb3VyIGRlbW9zLiAKSSBjYW4gb25seSBhc3N1bWUgaGUgaXNuJ3Qgd2lubmluZyBJIG1lYW4gaWYgaGUgd2FzIG1ha2luZyA1LDAwMCBkb2xsYXJzIGEgd2VlayB5b3VyIG9ubHkgaXNzdWUgd291bGQgYmUgdGhlIGZlbWFsZSBjb250YWN0LiBTb3VuZHMgbGlrZSBoZSBpcyBhIGxvc2luZyBwbGF5ZXIgdHJ5aW5nIHRvIGdldCBiZXR0ZXIgYW5kIGxlYXJuIHRoZSBnYW1lIG9yIGhlIGhhcyBhIG92ZXJhbGwgcHJvYmxlbSB3aXRoIHNlbGYgY29udHJvbCBhbmQgaXMgaHVydGluZyB5b3VyIHJlbGF0aW9uc2hpcCBtb25leSB3aXNlLiAKVGhpcyBjb250aW51ZXMgdW50aWwgYWxsIHRoZSBzZWF0cyBhcmUgZmlsbGVkLi4gClpnZXJuZCBiZWdhbm4gc2llIGlocmUgZXJzdGUgTWFpbCBhbiBkaWVzZW4gRG9jIENhcmxvcy4gRGFzcyBzaWUgc2ljaCBnYXIgbmljaHQgc2ljaGVyIHNlaSwgb2Igc2llIGRlbm4gZGFzIHdpcmtsaWNoIHJlYWwgZXJsZWJlbiBtY2h0ZS4gRGFzcyBkYXMgYmlzaGVyIG51ciBzY2huZSBGYW50YXNpZW4gZ2V3ZXNlbiBzZWllbiwgdW5kIGRhc3MgZXMgd29obCBiZWkgZGVuIEZhbnRhc2llbiBibGVpYmVuIHdyZGUuIFVuZCBkaWUgRGlzdGFueiBlaCB6dSBncm9zcyBzZWkuIEFiZXIgZGFubiBzY2hyaWViIHNpZSBiZXIgaWhyZSBHZWZobGUgYmVpbSBMZXNlbiB2b24gQ2FybG9zJyBQcm9maWwsIHBsdHpsaWNoIGZsb2dlbiBkaWUgRmluZ2VyIGJlciBkaWUgVGFzdGF0dXIsIHVuZCBhbHMgc2llIGRpZSBNYWlsIGFic2NoaWNrdGUsIHdhciBzaWUgZXJzdGF1bnQsIHdpZSB1bWZhbmdyZWljaCBzaWUgZ2V3b3JkZW4gd2FyLCB1bmQgd2llIGlocmUgWmVpdCB2ZXJmbG9nZW4gd2FyLgpUcmF5YSB3YXMvaXMgYmFkIGJlY2F1c2UgcmF0aGVyIHRoYW4gY3JlYXRpbmcgYSBraXQgdGhhdCB3b3JrZWQgd2l0aCBnYW1lIG1lY2hhbmljcyB0aGV5IGNyZWF0ZWQgYSBraXQgdGhhdCBzdXBwcmVzc2VkIGV2ZXJ5b25lIGVsc2UgZ2FtZSBtZWNoYW5pY3MgKENvdW50ZXJzIG1ha2UgeW91IGRpZSwgYnVmZnMgbWFrZSBkZWFsIG5vIGRhbWFnZSwgZXRjLikKVEw7RFI6ICJGYW4iIGlzIGRlcml2ZWQgZnJvbSAiZmFuYXRpYyIsIGJ1dCBpcyBub3QganVzdCBhbiBhYmJyZXZpYXRpb24gb2YgImZhbmF0aWMiLgpJIGhhZCBmb3VyIGxhcmdlIHNwaWtlcyBpbiBteSByYXRpbmcuIFRoZSBmaXJzdCB3YXMgZnJvbSBzdHVkeWluZyBSZWFzc2VzcyBZb3VyIENoZXNzIGFuZCBUaGUgUmVhc3Nlc3MgWW91ciBDaGVzcyBXb3JrYm9vay4gCkkgaG9uZXN0bHkgd291bGQgYmUganVtcGluZyBpbiBibGluZCB3aXRob3V0IG1vcmUgaGlnaCBsZXZlbCB0aG91Z2h0IHRoYW4gdGhhdC4KSSBzb3JyeSBidXQgd2hlbiB5b3VyIGV4cGVyaWVuY2Ugd2l0aCBhIGdyb3VwIG9mIHBlb3BsZSAoaGVyZSBpdHMgdGhlIHBvbGljZSkgaGFzIGFsd2F5cyBiZWVuIG5lZ2F0aXZlIHlvdSBzdGFydCB0byBhc3N1bWUgaXQgYWx3YXlzIGdvaW5nIHRvIGJlIG5lZ2F0aXZlLiBJdCB0aGUgc2FtZSB3aXRoIEJsYWNrcyBpbiBBbWVyaWNhLiBBbGwgdGhleSBrbm93biBpcyBtaXN0cmVhdG1lbnQgYXQgdGhlIGhhbmRzIG9mIHRoZSBwb2xpY2UuClJveWFsIEZsdXNoLiBUaGlzIHJhbmtzIGhpZ2hlc3Qgb2YgYWxsIHRoZSBwb3NzaWJsZSByYW5rcyB5b3UgY291bGQgZ2V0IGluIGEgcG9rZXIgZ2FtZSBhbmQgcmVmZXJzIHRvIGEgc3RyYWlnaHQgYW5kIHNhbWUgc3VpdGVkIHRlbiwgamFjaywgcXVlZW4sIGtpbmcgYW5kIGFjZS4KSmFtZXMgQWJyYW0gR2FyZmllbGQgKDE4MzEgMTg4MSkgaXMgdGhlIGZpcnN0IHByZXNpZGVudCB0byBldmVyIHRhbGsgb24gdGhlIHBob25lLiBXaGVuIGhlIHNwb2tlIHRvIEFsZXhhbmRlciBHcmFoYW0gQmVsbCwgd2hvIHdhcyBhdCB0aGUgb3RoZXIgZW5kIDEzIG1pbGVzIGF3YXksIGhlIHNhaWQ6IHNwZWFrIGEgbGl0dGxlIG1vcmUgc2xvd2x5LiAKQW4gb3BlbiByYWlzZSB0byAxMiBpcyBtZXQgd2l0aCA1IGNhbGxlcnMgb24gdGhlIHJlZy4gCldoaWxlIGl0IHdhcyBkaXNhcHBvaW50aW5nIHRvZGF5J3MgYW5vdGhlciBkYXkgYW5kIHRoaXMgaXMgYWJvdXQgdGhlIDIwMCBQbGFzdGljIFBva2VyIENoaXAgU2V0IEFuZCBDYXJvdXNlbC4uIApTYXJhaCBQYWxpbiBwb3NlIGZvciBhIHBob3RvZ3JhcGggd2l0aCB0aGVpciBmYW1pbGllcyAoTCBSKSBUcmFjayBQYWxpbiwgUGlwZXIgUGFsaW4sIFdpbGxvdyBQYWxpbiwgVHJpZyBQYWxpbiwgTGV2aSBKb2huc3RvbiwgQnJpc3RvbCBQYWxpbiwgVG9kZCBQYWxpbiBhbmQgdGhlIE1jQ2FpbiBmYW1pbHkgQW5kcmV3IE1jQ2FpbixKaW0gTWNDYWluLCBKYWNrIE1jQ2FpbiwgTWVnaGFuIE1jQ2FpbiwgQnJpZGdldCBNY0NhaW4gYW5kIERvdWcgTWNDYWluIGFzIGhlIGFycml2ZXMgYXQgdGhlIE1pbm5lYXBvbGlzL1N0IFBhdWwgSW50ZXJuYXRpb25hbCBhaXJwb3J0IFNlcHRlbWJlciAzLCAyMDA4IGluIE1pbm5lYXBvbGlzLCBNaW5uZXNvdGEuIE1jQ2FpbiBhcnJpdmVkIGZvciBoaXMgYXBwZWFyYW5jZSBhdCBSTkMuIFByZXNpZGVudCBHZW9yZ2UgVy4gCk9mZiwgSSBzYXkgaXQgaXMgb2JqZWN0aXZlbHkgdW50cnVlIGJlY2F1c2UgSW4gTiBPdXQgc291cmNlcyB0aGVpciBiZWVmIGZyZXNoIGV2ZXJ5IHNpbmdsZSBkYXkuIE5ldmVyIGZyb3plbi4gCkRlY2xhdyB0aGVtLiBBbmQgZmFzdC4gCkxldHMgdGFsayBhYm91dCBob3cgbXVjaCBwZW9wbGUgbWFkZSB0aGVuLiBJIHVzZWQgdG8gYXZlcmFnZSBhcm91bmQgYSAkMzAwMCB5ZWFybHkgdGF4IHJldHVybi4gClRoZSBvbmx5IHRoaW5nIHRoYXQgd291bGQgd29ycnkgbWUgaXMgdGhlaXIgMTQgMTYgbG9zcyBhZ2FpbnN0IGV4IFRpdGFuICh0aGUgdGVhbSB0aGV5IHVwIGFnYWluc3QgaGVyZSksIGJ1dCBpdCBtYXkgaGF2ZSBqdXN0IGJlZW4gYW4gYW5vbWFseS4gRm5hdGljIHVzdWFsbHkgZG9uIGxvc2UgdG8gYW55b25lIG9uIEluZmVybm8sIGxldCBhbG9uZSBhIHRlYW0gdGhhdCBpc24gaW4gdGhlIHRvcCA1LiBJIHRoaW5rIHRoYXQgZXZlbiB3aXRoIHRoaXMgcGFzdCBsb3NzIHRoZXkgc2hvdWxkIGRlZmluaXRlbHkgYmUgZmF2b3JlZCBieSBhIHByZXR0eSBsYXJnZSBtYXJnaW4uLiAKNSBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ29NYXJrZXRsZXJkZSBidWxhYmlsZWNlaW4gVmluY2VudCB2ZSBLeWxtIGFyYXBsYXIgZGEgaXJpbmNlIGFyYWIgb2xhcmFrIGdlZXIsICU4IGFsa29sbCBvbHVyIHZlIGlpbmUgYXJvbWEgdXJ1cGxhciBrb3l1bG11IHptIGFyYXBsYXJkci4gS2VzaW5saWtsZSB0YXZzaXllIGV0bWVtIGFtYSBraW1pc2kgZGUgb251IG9rIHNldml5b3IuIE9sdXIgZGEgYXJhYmEgcGFyYSB2ZXJpcnNlbiB2ZSB0YWRuIGJlZW5tZXpzZW4gbm9ybWFsIHNlayBhcmFwbGEga2FydHJhYmlsaXIsIHlhZGEgemVsbGlrbGUgaWxlayBnaWJpIGdsIGFyb21hbGFyIHZvZGtheSBzZXlyZWx0bWVrIGlpbiBrdWxsYW5hYmlsaXJzaW4uLiAKQm9hcmRpbmcgdGhlIHBsYW5lLCBXZW5kaSBhbmQgSSB3ZXJlIHNhdCBpbiB0aGUgbWlkc3Qgb2YgdGhlbSBhbGwuIApJIHRoaW5rIHR1cm4gYmV0IGNvdWxkIGJlIHNpemVkIHVwIGFzIHdlIGFyZSB0cnlpbmcgdG8gZ2V0IHZhbHVlIGZyb20gb3ZlcnBhaWQgd2l0aCBhbiBIIGluIGl0IG1heWJlIDE3MD8gVGhhdCB3b3VsZCBzZXQgdXAgYSBiZXR0ZXIgc2l6aW5nIGZvciBhIHJpdmVyIGphbSB0aGF0IGhlIHdvdWxkIGhhdmUgdG8gY2FsbCBkb3duIHdpdGggbW9yZSB0aGFuIGp1c3Qgd2hhdCBiZWF0cyB5b3UKUGFzc3QgYmVpIGRpZXNlciBWYXJpYW50ZSBiZXNvbmRlcnMgYXVmLCBkYXNzIG5pZW1hbmQgenUgZWlmZXJzY2h0aWcgb2RlciBiZXNpdHplcmdyZWlmZW5kIHdpcmQuIEVzIGthbm4gaW4gZWluZXIgR3J1cHBlIHZvbiBGcmV1bmRlbiB2aWVsIFNwYSBtYWNoZW4gaGVyYXVzenVmaW5kZW4gd2VyIGdlcm5lIGJlaSB3ZW0gZWluIGJpc3NjaGVuIG1laHIgSGF1dCBzZWhlbiB3aWxsLCBhYmVyIG5pY2h0LCB3ZW5uIGRpZSBBbnR3b3J0IGplbWFuZGVuIHNhdWVyIG1hY2h0LgpJIGRpZG4ndCB1bmRlcnN0YW5kIEFMTCB0aGUgbWF0aCBpbiB0aGVzZSBwYWdlcywgYnV0IG9uZSBkb2Vzbid0IG5lZWQgdG8uIApEb2N1bWVudGFyaWVzIGRlbHZpbmcgZGVlcGVyIGluIHRvIHJlYWwgbGlmZSBzdG9yaWVzLCB0aGUgd29ybGQgYXJvdW5kIHVzLCBhbmQgLiBCZWluZyBRdWVzdGlvbmVkIEluIGFuIGludGVydmlldyB3aXRoIHRoZSBCQkMncyBGaW9uYSBCcnVjZSBIZXJlIHNoZSBpbnRyb2R1Y2VzIC4gZmFjZWJvb2sgYmJjIGRvY3VtZW50YXJ5IG5hdHVyZSBkb3dubG9hZCBoZCAxMDgwcCBhbmQgbXA0IDNncCBtb2JpbGUgLiBOb3J0aCBNZWV0IHRoZSBSb21hIDIwMTcgNzIwcCBIRFRWIHgyNjQgQUFDIE1WR3JvdXAgQkJDIFRydWUgTm9ydGguIApBdCBmaXJzdCwgR29uemFsZXogc2FpZCB0aGF0IHdhcyBpcnJlbGV2YW50LCB0aGVuIGRpc2Nsb3NlZCBoZSBoYWQgZ29uZSB0byB0aGUgRGFoYW4gSW5zdGl0dXRlLiAKUmVxdWVzdCBBbiBBcHBvaW50bWVudCBQaG9uZTogQmVuaWduIHByb3N0YXRpYyBoeXBlcnBsYXNpYSAoQlBIKSBpcyBhIG5vbiBjYW5jZXJvdXMgY29uZGl0aW9uIHRoYXQgYWZmZWN0cyBhIHN1YnN0YW50aWFsIG51bWJlciBvZiBtZW4gYXMgdGhleSBhZ2UsIGluIHdoaWNoIHRoZSBlbmxhcmdlZCBwcm9zdGF0ZSBzcXVlZXplcyBvciBwYXJ0aWFsbHkgYmxvY2tzIHRoZSBzdXJyb3VuZGluZyB1cmV0aHJhICAgdGhlIHR1YmUgdGhhdCBjYXJyaWVzIHRoZSB1cmluZSBmcm9tIHRoZSBibGFkZGVyIG91dCBvZiB0aGUgYm9keS4gVGhpcyBjYW4gbGVhZCB0byBib3RoZXJzb21lIHVyaW5hcnkgc3ltcHRvbXMgdGhhdCBtYXkgaW5jbHVkZSBhIHdlYWsgc3RyZWFtLCB0cm91YmxlIHN0YXJ0aW5nIGFuZCBzdG9wcGluZywgdGhlIGZyZXF1ZW50IGZlZWxpbmcgb2YgbmVlZGluZyB0byB1cmluYXRlLCBncmVhdGVyIHVyZ2VuY3kgd2hlbiB0aGUgZmVlbGluZyBoaXRzLCBsZWFraW5nIG9yIGRyaWJibGluZywgYW5kIHRoZSBzZW5zZSB0aGF0IHRoZSBibGFkZGVyIGlzbid0IGVtcHR5IGFmdGVyIHVyaW5hdGlvbi4gClNvIGhlIG11c3QgY29uY2VybmVkLiBXZSBlbnRlciB0aGUgdGVzdGltb255IHBhcnQgb2YgdGhlIGhlYXJpbmcsIGFuZCB0aGUgcGFydG5lciBleHBsYWlucyB3aGF0IGhhcHBlbmVkIHVzaW5nIGEgYmlnIGRyYXdpbmcgb2YgdGhlIHBhcmtpbmcgbG90LiAKSnVzdCBiZWNhdXNlIENoaW5hIGRvZXNuJ3Qgb2ZmZXIgdHJhbnNwYXJlbmN5IHRvIHRoZSB3ZXN0IGRvZXMgbm90IG1lYW4gdGhleSBhcmUgZG9pbmcgZ2Vub2NpZGFsIHNoaXQuClRoaXMgcHJvYmFibHkgbWFrZXMgbm8gc2Vuc2UgYnV0IHRoZSBkYXRhIG1ha2VzIGV2ZW4gbGVzcyBzZW5zZSB3aGVuIHlvdSBkb24gd29yayBpbiB0aGUgYXJlYSBkYWlseSBhbmQgcG91ciBvdmVyIG1ldGEgYW5hbHlzaXMgYWZ0ZXIgbWV0YSBhbmFseXNpcy4gCk5pZ2h0IFRoZWF0cmUgTWFnaWMgVG93biBzdGFuaW5nIEphbmUgV3ltYW4gYW5kIEphbWVzIFN0ZXcgIGFydC4gMTIgTWlkbmlnaHQgQ2hhbm5lbCA0ICBNb3ZpZXMgYXQgTWlkbmlnaHQgU2hlcmxvY2sgSG9sbWVzIEZhY2VzIERlYXRoIHN0RXVyaW5nIEJhc2lsIFJhdGhib25lLiAKIkkgdGhpbmsgdGhlIHJ1bGluZyBlbGltaW5hdGVzIGEgYmlnIHdheSB0byB0cmFwIGFuZCBlbnNuYXJlIHBlb3BsZSwiIEJha2VyIHNhaWQuICJJdCBpcyBhIHZlcnkgb3BlbiBhbmQgdmFndWUgb3JkaW5hbmNlLiIKV2UgbmV2ZXIgd2FudGVkIHRvIGh1cnQgYW55Ym9keS4gCkxhIFZpbGxlIHZhIGNyZXIgMTUgbG9nZW1lbnRzIHNvY2lhdXggZGFucyBsJ2ltbWV1YmxlIG1haXMgbGVzIDUgZmFtaWxsZXMgcXVpIHkgcnNpZGVudCBlbmNvcmUgc2UgdmVycm9udCBwcm9wb3NlciB1biBub3V2ZWF1IGJhaWwgc2kgdGFudCBlc3QgcXUnZWxsZXMgc29pZW50IGxpZ2libGVzICBsJ2FjY3MgYXUgbG9nZW1lbnQgc29jaWFsIChyYXBwZWxvbnMgcXVlIDcyJSBkZSBsYSBwb3B1bGF0aW9uIHBhcmlzaWVubmUgZXN0IGxpZ2libGUgIGwnYWNjcyAgY2UgdHlwZSBkZSBsb2dlbWVudCkuIENlIHF1aSBzaWduaWZpZSBxdWUgbGEgVmlsbGUgdmEgYmllbiBjcmVyIDE1IGxvZ2VtZW50cyBzb2NpYXV4IG1haXMgcXVlIHNldWxlbWVudCAxMCBmYW1pbGxlcyBub3V2ZWxsZXMgZW4gcHJvZml0ZXJvbnQuLiAKSG9wZWZ1bGx5IHRoaW5ncyBhcmUgYmV0dGVyIG5vdy4gVGhpcyBwb3N0IGlzIG1lYW50IHRvIGVkdWNhdGUgYW5kIHRvIGNvbnNpZGVyZ2V0dGluZyAybmQgYW5kIDNyZCBvcGluaW9ucyAob24geW91ciBwYXJ0aWN1bGFyIGNvbmRpdGlvbnMpIHdpdGggd2hhdGV2ZXIgdHlwZSBoZWFsdGggY2FyZSBwcm92aWRlciB5b3UgbWF5IGJlIGNvbnN1bHRpbmcuIApEYXMgdW56aGxpZ2UgUGF0aWVudGVuIHNjaG9uIG5hY2ggd2VuaWdlbiBCZWhhbmRsdW5nZW4gd2llZGVyIGVpbmUgd2VuaWdlciBlaW5nZXNjaHJua3RlIEJld2VndW5nc2ZyZWloZWl0IGdlbmllc3Nlbiwgb2huZSBTY2htZXJ6ZW4gd2llZGVyIGlocmVyIEFyYmVpdCBuYWNoIGdlaGVuIGtubmVuLCBpc3QgZWluIHdlaXRlcmVyIHVuc2NodHpiYXJlciBXZXJ0IGRlciBhYmVyIGthdW0gQmVhY2h0dW5nIGVybGFuZ3QuIERhcyBkaWVzZSBMZWlzdHVuZ2VuIHNlaXQgMTk5NiAob2RlciBsbmdlcikga2VpbmUgUHJlaXMvVGFyaWYgQW5wYXNzdW5nIGVyZmFocmVuIGhhdCwgYmVkZXV0ZXQgZGFzIGRlciBQaHlzaW90aGVyYXBldXQgYWxsZWluZSBkdXJjaCBkaWUgVGV1ZXJ1bmdiZWRpbmd0ZSBBYndlcnR1bmcgMjQsNyUgd2VuaWdlciB2ZXJkaWVudCBhbHMgMTk5Ni4gCiJUaGF0J3MgYSByZWFsIGNoYWxsZW5nZSBhbmQgdGhlcmUncyBtdWx0aXBsZSB0aGluZ3Mgd2UncmUgbG9va2luZyBhdCBpbiBvcmRlciB0byB0aGluayBhYm91dCBob3cgd2UgY2FuIGhlbHAgaW4gdGhhdCByZWdhcmQuIgpObyBoYXJtIGluIHJlY3ljbGluZyBpdC5JZiB5b3UgcmVhbGx5IGZlZWwgYmFkIGFib3V0IGl0IGJ1eSBvbmUgb2YgdGhlaXIgY2FycGV0cy4gR28gdGhyb3VnaCB0aGVpciBzaG9wIGFuZCByZWFsbHkgcHJhaXNlIHRoZWlyIHN0dWZmLkkgcHJvYmFibHkgbG9vayBpbnRvIHNvbWUgbG9jYWwgY2hhcml0aWVzIG9yIHBhbnRyaWVzIHNlZSBpZiB0aGV5IGhhdmUgc29tZXRoaW5nIG9yIGNhbiBoZWxwIG91dCAobWFrZSBmcmllbmRzIHdpdGggc29tZW9uZSB3aG8gd29ya3MgaW4gYSBiYWtlcnkgYmVjYXVzZSB0aGV5IGFsd2F5cyBoYXZlIGFjY2VzcyB0byBmcmVzaCBicmVhZCkuIEkga25vdyBzb21lIHBlb3BsZSB0aGluayBvZiBkdW1wc3RlciBkaXZpbmcgYXMgYW4gdGhpbmcgYW5kIGJyYWcgYWJvdXQgdGhlaXIgZmluZHMgdGhvdWdoLiAKV2hhdGV2ZXIuIApDb250b3J0aW9uIGFydGlzdHMgcGVyZm9ybSBkdXJpbmcgdGhlIENpcnF1ZSBkdSBTb2xlaWwncyBzaG93IGluIE1hZHJpZCBbUkVVVEVSU10KRXNzZW50aWFsbHkgSSBzdGFydGVkIHRvIHRyeSBhbmQgcmVkdWNlIHRoZSBhbW91bnQgb2YgInN0dWZmIiBJIHdhcyBidXlpbmcgICBidXQgc29tZWhvdyBib29rcyBlc2NhcGVkIHRoaXMuIApIdXNiYW5kLCB3aWZlIGFuZCBzb21lIGtpZHMuIApOYXRhcmVlIGlzIG9uZSBvZiBtYW55IHNvYXB5IG1hc3NhZ2Ugam9pbnRzIGFsb25nIFJhdGNoYWRhcGhpc2VrIFJvYWQsIHdoaWNoIGlzIGV2ZXIgc28gc2xpZ2h0bHkgb3V0c2lkZSB0aGUgZG93bnRvd24gYXJlYS4gVGhlIG5lYXJlc3QgcHVibGljIHRyYW5zcG9ydCBpcyBIdWF5IEtod2FuZyBzdWJ3YXkgc3RhdGlvbi4gCk15IGhlYXJ0IHdhcyBhbGl2ZSBhbmQgdHJhcHBlZCB3aXRoaW4gdGhlIHdhbGxzIHNjcmVhbWluZyBmb3Igd2hhdCBpdCB0cnVseSB3YW50ZWQsIGJ1dCBpdCB3YXMgc3RpbGwgbm90IHRoZSBwbGFjZSBJIHdhcyBpbiB3aGVuIGludGVyYWN0aW5nIHdpdGggbWVuLiBCb3RoIGFyZSBzdHVubmluZyB3b21lbiwgYnV0IGluIGRpZmZlcmVudCB3YXlzLiBCaWcgZ2lybHMsIHNraW5ueSBnaXJscyBpdCBkb24ndCBtYXR0ZXIgd2hhdCB5b3UgZ290IENhbnQgbGV0IHlvdSBnbyB0b28gZmFyLCBjYXVzZSB5b3VyIGEgc3VwZXJzdGFyIE5vdyBoZXJlJ3MgdGhlIGNvdW50ZG93biBsZXQgZW0ga25vdy4uIApUZWxsIG1lIGFib3V0IGl0IG15IGR1ZGUuIEkgaGFkIHRoZSBzYW1lIHNoaXQsIHdlbnQgdG8gdGhlIGVtZXJnZW5jeSByb29tIHdpdGggc3RvbWFjaCBwYWluIGFuZCB2b21pdGluZy4gV2FpdGVkIG5lYXJseSA0IGhvdXJzIGFuZCB0aGVuIHRoZSBkb2N0b3Igd2FudGVkIHRvIHNlbmQgbWUgaG9tZSB3aXRoIGEgcHJlc2NyaXB0aW9uIGZvciBhbnRpYmlvdGljcyBiZWNhdXNlIGhlIHRob3VnaHQgaXQgd2FzIGp1c3QgYSBmbHUuIApUaGUgcHViIGhhcyBiZWVuIGluIGRhcmtuZXNzIHRoaXMgd2VlayBhbmQgTXIgV2lsbG91Z2hieSB2YWNhdGVkIHRoZSAxNTUgeWVhciBvbGQgaG90ZWwgb24gVHVlc2RheSBhZnRlciBoaXMgbGVhc2UgZW5kZWQuIApTb21lIG9mIHRoZSBwZW9wbGUgcmVwbHlpbmcgbm90IHVuZGVyc3RhbmRpbmcgaG93IHlvdSBjb3VsZG4gImp1c3QgcmVwbHkgYmFjayIgb3IgInlvdSBhbiBpbW1hdHVyZSBicmF0IiBoYXZlIGNsZWFybHkgTk8gSURFQSB3aGF0IGl0IGxpa2Ugd2hlbiB5b3VyIG93biBwYXJlbnRzIGFyZSBkYW1hZ2luZyBhbmQgYWJ1c2l2ZS4gSnVzdCBiZWNhdXNlIHNvbWUgcGVvcGxlIGhhdmUgZ29vZCByZWxhdGlvbnNoaXBzIHdpdGggdGhlaXIgcGFyZW50cywgZG9lc24gbWFrZSBpdCBpbXBvc3NpYmxlIHRoYXQgdGhlcmUgYXJlIHBhcmVudHMgd2hvIHdpbGwgbWlzdHJlYXQgYW5kIGFidXNlIHRoZWlyIGNoaWxkcmVuIGxpa2Ugbm8gdG9tb3Jyb3cuIApSYXRoZXIgdGhhbiBvcmRlcmluZyBhIG1vbnN0cm9zaXR5IG9mIGEgY3JlcGUgdGhleSBjYWxsICJUaGUgRnJlbmNoIE1vbmtleSIgICBpdCBjb25zaXN0cyBvZiBkYXJrIGNob2NvbGF0ZSwgcGVhbnV0IGJ1dHRlciwgYmFuYW5hcyBhbmQgYmFuYW5hIGxpcXVldXIgICB3ZSB0cmllZCB0aGUgYmFzaWMgTGVtb24gU291ZmZsZSBDcmVwZS4gVGhlIGJyaWdodG5lc3Mgb2YgZnJlc2ggbGVtb24gb2Zmc2V0IHRoZSBlZ2d5IGNyZXBlIHBlcmZlY3RseSwgYXMgZGlkIGEgZmV3IGZvcmsgdGluZXMgZnVsbCBvZiBmcmVzaCBjaGFudGlsbHkgY3JlYW0gc2Nvb3BlZCBmcm9tIHRoZSBzaWRlIG9mIHRoZSBwbGF0ZSBhbmQgYSB3ZWxsIHB1bGxlZCBzaG90IG9mIGVzcHJlc3NvLkEgQ2FmZSBvZmZlcnMgdmFyaW91cyBmaWxsaW5ncyBvbiBpdHMgY3JlcGUgbWVudSwgc29tZSBtb3JlIGV4b3RpYyB0aGFuIG90aGVycy4gClNvIEkgZGVjaWRlZCBJIHdvdWxkbiByZXBsYWNlIGl0IHRoaXMgdGltZS4gSSB3b3VsZCBmb3JjZSBoZXIgdG8gZ2V0IGhlciBhc3MgdXAgYW5kIHdhbGsgdG8gdGhlIFdhbG1hcnQgb25lIG1pbnV0ZSBmcm9tIG91ciBidWlsZGluZy4uIApEdXJpbmcgZWFjaCByb3VuZCwgbW92ZSBhbGwgZm9sZGVkIGNhcmRzIGludG8gYSAibXVjayBwaWxlIiB1bmRlciB0aGUgaGFuZCBpbiB3aGljaCB5b3UgaG9sZCB0aGUgZGVjayAodGhlICJzdHViIikuIApIZXIgYWN0aW9ucyBtYXkgaGF2ZSBhZmZlY3RlZCB1cCB0byA0MCwwMDAgY2FzZXMsIG9mZmljaWFscyBzYWlkIGF0IHRoZSB0aW1lLiBUaGUgc3RhdGUgc2V0IGFzaWRlbWlsbGlvbnMgb2YgZG9sbGFycyBmb3IgZGVmZW5kYW50cyB3aG8gY2hhbGxlbmdlZCB0aGUgZHJ1ZyBldmlkZW5jZSB1c2VkIGluIHRoZWlyIGNvbnZpY3Rpb25zLiBTZXZlcmFsIGh1bmRyZWQgcGVvcGxlLCBjb2xsb3F1aWFsbHkga25vd24gYXMgIkRvb2toYW4gZGVmZW5kYW50cywiIGhhdmUgYWxyZWFkeSBoYWQgdGhlaXIgY29udmljdGlvbnMgdGhyb3duIG91dCBvbiBhcHBlYWwuCk9uY2UgaW5zaWRlIEVpbGVlbidzIGhvdXNlLCB0aGUgb2RkIGJlaGF2aW9yIGNvbnRpbnVlZC4gQWRkIGEgZHJ1bmsgQnJhbmRpIEdsYW52aWxsZSB0byB0aGUgbWl4dHVyZSBhbmQgaXQgd2Fzbid0IHNtb290aCBzYWlsaW5nLiBLeWxlIFJpY2hhcmRzIG5vdGljZWQgc29tZXRoaW5nIHdhcyB1cCB3aXRoIGhlciBzaXN0ZXIgYW5kIHJldHJlYXRlZCB0byB0aGUgYmF0aHJvb20gdG8gbWFrZSBhIHBob25lIGNhbGwuIEtpbSBmb2xsb3dlZC4KV2hhdCB3ZSBhcmUgZG9pbmcgd2lsbCB0YWtlIGF3YXkgdGhlIHVuY2VydGFpbnR5IG9mIGFjaGlldmluZyBhIHBsYWNlIGF0IFVuaXZlcnNpdHkgZm9yIHRoZXNlIHN0dWRlbnRzIGFuZCB0aHVzIGFsbG93IHRoZW0gdG8gY29uY2VudHJhdGUgZnVsbHkgb24gZG9pbmcgdGhlIGJlc3QgdGhleSBjYW4gaW4gdGhlaXIgQSBsZXZlbHMgYW5kIG90aGVyIGV4YW1pbmF0aW9ucy4gCkFzIGZhdGUgd291bGQgaGF2ZSBpdCwgSSBhbSBub3cgdGFsbGVyIHRoYW4gaGltLCBhbmQgZWFzaWx5IDUwIHBvdW5kcyBoZWF2aWVyLiAKVGhlcmUgYXJlIDQgbGV2ZWxzIHRvIGNhdXNhbGl0eSAzLiAKUGVyaGFwcyBmcm9tIGEgYnJvY2h1cmUgb3IgdGhlIGRheXRpbWUgc3BlYWsgd2l0aCBzaG93LCBvbiB0aGUgY29udHJhcnkgbmV2ZXJ0aGVsZXNzIHNheSB0aGFua3MgdG8geW91IGdvZCBpbiBzdXBwb3J0IG9mIHNtYWxsIGNoYXJtcy4gCkhlIHJlZnVzZWQgdG8gcGF5IGhlciBvZmYgKHNhaWQgaGUgcmF0aGVyIGdvIGJyb2tlIGZpZ2h0aW5nIGl0KSBidXQgeW91IHdvdWxkIGJlIHN1cnByaXNlZCBob3cgbWFueSBvdGhlcnMgZGlkLiBIZXIgYnJvdGhlciBpbiBsYXcgd2FzIGEgbGF3eWVyIGFuZCB0aGV5IGhhZCBxdWl0ZSBhIG5pY2UgbGl0dGxlIGJ1c2luZXNzIGdvaW5nIHN1aW5nIHBlb3BsZSBhbmQgZ2V0dGluZyBvdXQgb2YgY291cnQgc2V0dGxlbWVudHMganVzdCB0byBtYWtlIHRoZW0gZ28gYXdheS4KVGhlIFJlYWwgRGVhbCB3aXRoIFBva2VyIFNvZnR3YXJlClRvIGRvIHRoaXMsIHRha2UgeW91ciBmaW5nZXJzIGFuZCBhcHBseSBwcmVzc3VyZSB0byB0aGUgdG9wIG9mIHlvdXIgY2xpZW50J3MgaGFuZCAod2hvc2UgcGFsbSBzaG91bGQgYmUgZmFjaW5nIGRvd253YXJkIG5vdykuIApCdXQgRE8gaGF2ZSBhIHNob3J0LCBzcGVjaWZpYywgYW5kIHRvIHRoZSBwb2ludCBhbnN3ZXIgZm9yIHRoZSBmYW1pbHkgbWVtYmVycyB0aGF0IGhhdmUgYXNrZWQgeW91IHdoYXQncyB1cC4gClRoZSBiaWtlIHBhdGhzIGhlcmUgYXJlIDkvMTAgdGltZXMgcGh5c2ljYWxseSBzcGxpdCBmcm9tIHRoZSByb2FkcyBmb3IgY2Fycy4gV2UgYWxzbyBoYXZlIGRlc2lnbmF0ZWQgdHJhZmZpYyBsaWdodHMgZm9yIGJpa2VzIGFuZCBhIHZlcnkgZXh0ZW5zaXZlIG5ldHdvcmsgb2YgY3ljbGUgcGF0aHMuIApMeW5kZSBjb3VsZCBub3QgbGl2ZSB3aXRoIGFueWJvZHksIHdoZXRoZXIgdGhleSB3ZXJlIG5pbmUgb3IgbmluZXR5LCB3aXRob3V0IHRyeWluZyB0byBicmluZyB0aGVtIHVwIHByb3Blcmx5LiAKSSB0b3RhbGx5IGFncmVlIHdpdGggeW91LiBUaGUgcG9zaXRpb24gb2YgcG93ZXIgdGhhdCBwcmllc3RzIGhhdmUgYXR0cmFjdHMgcGVvcGxlIHdobyB3YW50IHRvIHVzZSB0aGF0IHBvc2l0aW9uIG9mIHBvd2VyLiAKQWZ0ZXIgTWFjRXdlbiBwcm9kdWNlZCAzMyBwb2ludHMgKDEwIDIzKSBpbiA2NiBnYW1lcyBsYXN0IHNlYXNvbiBpbiBoaXMgcm9va2llIHBybyBjYW1wYWlnbiwgdGhlIGZvcm1lciBRTUpITCBmb3J3YXJkIHB1dCBpbiB0aGUgd29yayBpbiB0aGUgb2ZmIHNlYXNvbi4gSGUgaW1wcm92ZWQgaGlzIHNrYXRpbmcsIGJlY2FtZSBhIGJpZyBuZXQgZnJvbnQgcHJlc2VuY2UgYW5kIGhhcyBhbHNvIHRocml2ZWQgaW4gYSBwZW5hbHR5IGtpbGwgcm9sZS4gQSB0aGlyc3QgZm9yIGtub3dsZWRnZSBhbmQgYSBkcml2ZSB0byBnZXQgYmV0dGVyIGhhdmUgYWNjZWxlcmF0ZWQgaGlzIGRldmVsb3BtZW50Li4gCkludGVyZXN0aW5nbHkgYXQgdGhhdCB0aW1lIEkgbmV2ZXIgd2FudGVkIHRvIGVhdCBhIHRvbiBvZiBmb29kIGFmdGVyIGEgbG9uZyBydW4gYnV0IHRoZSBuZXh0IGRheSBJIHdhcyBmYW1pc2hlZC4gClJlY2lkaXZpc20gaXMgYSB0cmFnZWR5IHRoYXQgY2F1c2VzIHBlb3BsZSB0byBjYWxsIG91ciBqdXN0aWNlIHN5c3RlbSBpbnRvIHF1ZXN0aW9uIGZvciBiZWluZyBpbmVmZmVjdGl2ZS4gClRoaXMgbmV4dCBtb250aCBJIHdpbGwgYmUgYWRkaW5nIHNvbWUgc2hvcnQgc3RvcmllcyBJIGhhdmUgYmVlbiB3b3JraW5nIG9uLiAKTWFuIEkgcmlnaHQgdGhlcmUgd2l0aCB5b3UuIFRyeWluZyB0byBmaW5pc2ggbXkgUGhELCBsaXZpbmcgY2xvc2UgdG8gdGhlIGJvbmUsIHBhcnRuZXIgYWxzbyBpbiBncmFkIHNjaG9vbCBpbiBhIGhlYWx0aGNhcmUgZmllbGQuIFNoaXQgY2FuIGJlIHJlYWxseSBkaXNjb3VyYWdpbmcgYW5kIHN0cmVzc2Z1bC4KTWFueSB3aXZlcyBtYWtlIHRoZSBtaXN0YWtlIG9mIGhpcmluZyBhbiBleHBlbnNpdmUgZGV0ZWN0aXZlIG9yIHB1cmNoYXNpbmcgcHJpY2V5IHNweSBlcXVpcG1lbnQuIApJdCB1bmZvcnR1bmF0ZWx5IHNvIHRydWUuIApPbmNlIHlvdSBzdHJldGNoIG91dCB0aGUgc3Ryb25nIGZyb250IG11c2NsZXMsIHlvdSBoYXZlIGEgYmV0dGVyIGNoYW5jZSB0byBzdHJlbmd0aGVuIHRoZSB3ZWFrZXIgdXBwZXIgYmFjayBtdXNjbGVzIChyaG9tYm9pZHMpLiBVc2UgYSByb3dpbmcgbWFjaGluZSBhdCB0aGUgZ3ltIG9yIGEgcnViYmVyIFRoZXJhYmFuZCBhdCBob21lIHRvIGRvICJyb3dzIi4gClNoZSBhbHNvIGZvcmNlZCBhIEhpc3BhbmljIG1hbGUgdG8gYmUgb24gdGhlIHNpZGUgb2YgdGhlIHJvYWQgaW4gdGhlIG1pZGRsZSBvZiB0aGUgbmlnaHQgd2hlcmUgaGUgbWlnaHQgaGF2ZSBiZWVuIGV4cG9zZWQgdG8gdGhlIGRhbmdlcnMgb2YgYmVpbmcgY2F1Z2h0IGJ5IHdoaXRlIHBvbGljZSBhbmQgYXNzYXVsdGVkLiAKT3ZlcnZpZXcgZm9yIGxlZ3dlZWQKUm9iaW5ldHQgY3VzaGlvbmVkIHRoZSBpbmZvcm1hdGlvbiBieSBzYXlpbmcgaXMgYWJzb2x1dGUuIE5vdCBhbGwgcHN5Y2hpY3Mgb3IgbWVkaXVtcyBoYXZlIHRoZSBzYW1lIHRvIHRoZWlyIGFiaWxpdGllcy4gCiJObyB0aGlzIGlzIG5vdCBuZWdvdGlhYmxlIiBzYWlkIEx1Y2lmZXIuICJBcyBtdWNoIGFzIHdlIGxvdmUgdG8gZmluZCBhIGJldHRlciB3YXkgdG8gaHVydCB5b3UsIHdlIHNlZW4gdGhpcyBiZWZvcmUsIGFuZCB3ZSBmaW5kIHRoYXQgdGhpcyBtZXRob2Qgd29ya3MgcXVpdGUgd2VsbC4iIE15IG1pbmQgaXMgcmFjaW5nLiBNeSBuYWl2ZSBpbWFnaW5hdGlvbiB0aG91Z2h0IEkgY291bGQgZ2V0IGF3YXkgZnJvbSB0aGlzLCBubyBtb3JlIHBhaW4sIG5vIG1vcmUgdG9ydHVyZSwgbm8gbW9yZSBiZWluZyBvbiB0aGUgZWRnZSBvZiBhIGNsaWZmIGp1c3Qgd2FpdGluZyBmb3IgdGhlIHNsaW0gbGluZSBvZiByb2NrIHN1cHBvcnRpbmcgbWUgdG8gYnJlYWsgYW5kIGRyb3AgbWUgaW50byBhIHBvb2wgb2YgaW5zYW5pdHkuIApDb21wbGV0ZWx5IGJhY2t3YXJkcy4gR2FtZXMgd2hlcmUgdGhlIGF2ZXJhZ2UgZWRnZSBpcyBtdWNoIHNtYWxsZXIgKGluIGdlbmVyYWwsIGdhbWVzIHdoZXJlIHlvdSBzZWUgbW9yZSBjYXJkcyBsaWtlIE9tYWhhKSBoYXZlIEhJR0hFUiB2YXJpYW5jZSBiZWNhdXNlIG1vcmUgcGxheWVycyBhcmUgbGlrZWx5IHJlbWFpbiBpbiBlYWNoIGhhbmQgY2hhc2luZyBkcmF3cywgZXRjLiBNb3JlIHBsYXllcnMgaW4gZWFjaCBoYW5kIHNlZWluZyBtb3JlIHN0cmVldHMgYW5kIHdpdGggbW9yZSBvcHBvcnR1bml0aWVzIHRvIGNvbm5lY3Qgd2l0aCB0aGUgYm9hcmQgPSBtb3JlIHZhcmlhbmNlLiBTaW1pbGFyIGNvbmNlcHQgYXQgd29yayB3aGVuIGZvbGRpbmcgbWFyZ2luYWxseSArZXYgc3BvdHMgd2hlbiB0aGUgYmV0IHJlcHJlc2VudHMgYSBsYXJnZSBwb3J0aW9uIG9mIG91ciBzdGFjay9CUjsgd2UgcmVkdWNlIHZhcmlhbmNlIGJ5IG5vdCBnZXR0aW5nIGludm9sdmVkIHdoZW4gb3VyIGVkZ2UgaXMgdmVyeSBzbWFsbC4KVGhpcyBJcyBXaHkgQW1lcmljYSBJcyBFeGNlcHRpb25hbApEb25uYSBEb3JzYQpCb3RoIGZpZ2h0ZXJzIGxvb2tlZCBhcyBsZWFuIGFzIGdyZXlob3VuZHMgYXMgdGhleSBtYWRlIHRoZWlyIHdheSB0byB0aGUgc2NhbGVzIHRvIGVuc3VyZSB0aGV5IHdlcmUgdW5kZXIgdGhlbWF4aW11bSB3ZWlnaHQgb2YgNjYuNyBraWxvZ3JhbXMuIApTdGlsbCBubyBhbnN3ZXI/IEhhIGhhIGhhLiBJIGtuZXcgeW91IGNvdWxkbiBkbyBpdCBhbmQgdGhhdCB5b3UganVzdCBsYXNoaW5nIG91dCBoZXJlIGJlY2F1c2UgeW91IGFuZ3J5IGF0IG1lIGZvciB0ZWxsaW5nIHlvdSB0aGUgdHJ1dGguIFBlb3BsZSBsaWtlIHlvdSB3aG8gYXJlIHNvIGhvcGVsZXNzbHkgZGVwZW5kZW50IG9uIHRoZSBzeXN0ZW0gdGVuZCB0byBkbyBzbyB3aGVuIHlvdSB0aGluayBpdCBiZWluZyB0aHJlYXRlbmVkLiBJIHNlZW4gYWxsIHRoaXMgc2hpdCBiZWZvcmUuCkRldmFzdGF0ZWQgYXMgd2VsbCBhcmUgaGlzIGdyYW5kcGFyZW50cy4gClRoZXkgYWxzbyBkaWRuJ3QgdGhpbmsgdGhlcmUgd2FzIG11Y2ggZm9yIElUIHRvIGRvIGJlY2F1c2UgdGhleSBkaWRuJ3QgdW5kZXJzdGFuZCBob3cgY29tcHV0ZXIgZGVwZW5kZW50IHRoZWlyIGNvbXBhbnkgd2FzLiBUd28gbWVuIGFuZCAxIHdvbWFuLCBzZXR0aW5nIHVwIHRob3NlIGN1YmljYWwgd2FsbCB0aGluZ3MsIGZpeGluZyB0aGUgY29mZmVlIG1ha2VyLCBldGMuIApTaGUgZnJlYWtlZCB0aGUgZnVjayBvdXQgYW5kIGJhaWxlZCBoYXJkLiBJIHdhcyBiZWluZyBuaWNlIGFib3V0IHRlY2huaWNhbGl0aWVzIGFuZCBmcmllbmRzaGlwcy4gCkVhcmx5IFBvc2l0aW9uICAgVGhpcyBpcyBtYWRlIHVwIG9mIHBvc2l0aW9ucyAxLCAyIGFuZCAzIHRvIHRoZSBsZWZ0IG9mIHRoZSBkZWFsZXIgYW5kIGFyZSB0aGUgbGVhc3QgYWR2YW50YWdlb3VzIGFzIHlvdSBhcmUgdGhlIGZpcnN0IHRvIGFjdCBhZnRlciB0aGUgZmxvcCBhbmQgaGF2ZSBubyBpbmZvcm1hdGlvbiBvbiB0aGUgb3RoZXIgcGxheWVycy4gCldoYXQgcGVyY2VudGFnZSBvZiB5ZXN0ZXJkYXkncyA0MDAwIHVuaXF1ZXMgYXJlIFJlZGRpdCBsdXJrZXJzIHdobyBzYWlkIG5lZ2F0aXZlIGNvbW1lbnRzPyBZZXMsIEkgc2VlIHRoZSBuZWdhdGl2ZSBjb21tZW50cyBhbmQgdGhlcmUgYXJlIHBvc2l0aXZlIGNvbW1lbnRzIGFzIHdlbGwgb24gUmVkZGl0LiBMaXZlIGF0IHRoZSBCaWtlIGFuZCB0aGUgcmVzdCBvZiB0aGUgaHVtYW4gcG9wdWxhdGlvbiBkbyBub3QgcmV2b2x2ZSBhcm91bmQgUmVkZGl0IGNvbW1lbnRzLiBUaGVyZSdzIHR3byBwbHVzIHR3bywgdHdpdHRlciwgdGhlIGNoYXQsIHlvdXR1YmUsIHR3aXRjaCwgSW5zdGFncmFtLCBhbmQgbXVjaCwgbXVjaCBtb3JlLiAKVGhlICJOZXcgRW5nbGFuZCBKb3VybmFsIG9mIE1lZGljaW5lIiBub3RlcyB0aGF0IDg4IHBlcmNlbnQgb2YgcGh5c2ljaWFucyBpbiBoaWdoIHJpc2sgc3BlY2lhbHRpZXMgc3VjaCBhcyBvcnRob3BlZGljcyB3ZXJlIGxpa2VseSB0byBleHBlcmllbmNlIHRoZWlyIGZpcnN0IGxhd3N1aXQgYnkgYWdlIDQ1IGFuZCA5OSBwZXJjZW50IGNvdWxkIGV4cGVjdCB0byBiZSBzdWVkIGF0IGxlYXN0IG9uY2UgYnkgYWdlIDY1Li4gCk5vdyBwcmV0ZW5kIHlvdSBhcmUgYSBuZXcgbW90aGVyLiBZb3UgdXNlIHJlZGRpdCBnZW5lcmFsbHkgZmluZCBpdCB0byBiZSBhIGdvb2QgdHJ1c3R3b3J0aHkgc291cmNlIG9mIGluZm9ybWF0aW9uLiAKTGFpa2FiZWFuIHUKTm8gZGF0YSBpcyBzaGFyZWQgd2l0aCBGYWNlYm9vayB1bmxlc3MgeW91IGVuZ2FnZSB3aXRoIHRoaXMgZmVhdHVyZS4gCldoYXQgaXMgdGhlIG5hbWUgb2YgdGhlIGdhbWUgd2hlcmUgeW91IGJpZCBmb3IgYSBoYW5kIGluIGRlY3JlYXNpbmcgbnVtYmVycz9JZGVudGlmeSB0aGlzIGNhcmQgZ2FtZSwgd2hlcmUgeW91IGhhdmUgdG8gYmVhdCBwcmV2aW91cyBjYXJkcyBwdXQgb24gdGhlIHRhYmxlV2hhdCBpcyB0aGlzIG92ZXJzaXplZCBwbGF5aW5nIGNhcmQgZGVjayBmb3IsIHdpdGggbnVtYmVycyAxMSAxNSBhbmQgQmFyb25zIGFuZCBLbmlnaHRzP0ZvdXIgUGxheWVyIENhcmQgR2FtZSBXaGVyZSBQbGF5ZXJzIGFyZSBLaW5nc0RvZXMgdGhpcyBoYXZlIGFuIG9mZmljaWFsIG5hbWUgYW5kIHJ1bGUgc2V0P1doYXQgY2FyZCBnYW1lIGlzIHRoaXM/IDMgY2FyZHMgcGVyIHBsYXllcjsgYWx3YXlzIHJlZHJhdyBmcm9tIHN0YWNrIHVudGlsIGVuZElkZW50aWZ5IHRoaXMgY2FyZCBnYW1lIHdpdGggYSA1MiBDYXJkIGRlY2sgYW5kIHR3byB0ZWFtcy4KT25jZSByaWNlIGlzIGRvbmUsIGZsdWZmIGEgYml0IHdpdGggYSBmb3JrIGFuZCBnZXQgb3V0IHlvdXIgd29rLiBJZiB5b3UgZG8gbm90IGhhdmUgYSB3b2ssIGdldCBvbmUuIFRoZXkgYXJlIGNoZWFwIGFuZCBiZXR0ZXIgdGhhbiBhbnl0aGluZyBlbHNlIHlvdSBjb3VsZCB1c2UgZm9yIHRoaXMgcHVycG9zZSwgYW5kIG1ha2UgdGhlIGJlc3QgZGVlcCBmcnlpbmcgdmVzc2VsLiBJdCB3b3J0aCBpdCwgSSBwcm9taXNlLgpJIHRoaW5rIGl0IHBvc3NpYmxlIHRoYXQgeW91IGFyZSBzcGVuZGluZyBhIGxvdCBvZiB2ZXJ5IHVucHJvZHVjdGl2ZSB0aW1lIHRoaW5raW5nIGFib3V0IHRoaW5ncyB0aGF0IG1ha2UgeW91IGZlZWwgYXdmdWwuIFJ1bWluYXRpb24gY291bGQgYmUgeW91ciBydWluIGF0aW9uLiBEb24gY29tcGFyZSB5b3Vyc2VsZiB0byBvdGhlcnMgZm9yIHN0YXJ0ZXJzLiBQbGVudHkgb2YgY29sbGVnZSBlZHVjYXRlZCB5b3VuZyBwZW9wbGUgaGFkIHRvIG1vdmUgYmFjayBpbiB3aXRoIHRoZWlyIHBhcmVudHMuIFBsZW50eSBvZiBjb2xsZWdlIGVkdWNhdGVkIHBlb3BsZSB3b24gYmUgdGFrZW4gc2VyaW91c2x5IHVudGlsIHRoZXkgbXVjaCBvbGRlci4KQ2VydGFpbmx5LCB0aGUgZmFjdCB0aGF0IEthZXBlcm5pY2sgaXMgbm90IGxpa2VseSB0byBwYXNzIGEgcGh5c2ljYWwgdGhpcyB3ZWVrIGlzIGEgdHJ1ZSBjb21wbGljYXRpb24uClVuZXhwZWN0ZWQsIG5vPyBJdCByZW1pbmRzIG1lIG9mIHNlZWluZyBhIGIrdyBlcGlzb2RlIG9mIExlYXZlIGl0IHRvIEJlYXZlciwgd2hlcmUgdGhlIEJlYXZlciBidXlzIGhpbXNlbGYgYSBzdWl0IGFuZCBoaXMgcGFyZW50cyBhcmUgY29tcGxldGVseSBkb25lIGluIGJ5IGl0cyBjb2xvciwgd2hpY2ggb2YgY291cnNlIG9uIHRoZSB0diBsb29rZWQgbGlrZSBwcmV0dHkgbXVjaCBldmVyeXRoaW5nIGVsc2UuIEZvdXIgbW9yZSwgaW5jbHVkaW5nIFBvc3RtYW4gU3BlY2lhbHR5IFNob3AsIDV0aCBBdmUsIE5ZQzouIApSZW1lbWJlciB0aGF0IHRoZSBiZXQgZm9sbG93aW5nL29uIHRoZSByaXZlciAodGhlIDV0aCBjb21tdW5pdHkgY2FyZCkgaXMgdGhlIG1vc3QgaW1wb3J0YW50LiAKTXkgYmlnZ2VzdCBpc3N1ZSBpcyB3aXRoIHB1dHRpbmcgaXQgYmV0d2VlbiBUTEogYW5kIElYLiBGaXJzdCBvZiBhbGwsIEkgaGFyZGx5IGtub3cgYW55b25lIGdlbnVpbmVseSBpbnRlcmVzdGVkIGluIHRoYXQgZXJhIHN0b3J5bGluZSBiZXR3ZWVuIHRoZSBSZXNpc3RhbmNlIGFuZCBGTy4gCklmIHRoZSBkZWFsZXJzIGFyZSBkb2luZyB3ZWxsLCB3ZSdyZSBnb2luZyB0byBiZSBkb2luZyB3ZWxsLiAKRW5nbGFuZCBoYXZlIGJlZW4gcmlnaHQgYXQgdGhlIGxpbWl0IG9mIHRoZWlyIGNhcGFiaWxpdGllcyBmb3IgbGFyZ2UgcGFydHMgb2YgdGhpcyB0b3VybmFtZW50IGJ1dCBpbiB0aGlzIGhvdGx5IGFudGljaXBhdGVkIHF1YXJ0ZXIgZmluYWwgdGhlIGFpbSB3YXMgdG8gYXNzZXJ0IG1vcmUgY29udHJvbCwgZGlzcGxheSBhIGxpdHRsZSBjbGFzcy4gSG9kZ3NvbiBwbGF5ZXJzLCB3aG8gYXJlIHdlbGwgdmVyc2VkIGluIHRoZSBJdGFsaWFuIHN0eWxlLCBlbGVjdGVkIHRvIGJlIG1vcmUgYXNzZXJ0aXZlIGF0IHRoZSBzdGFydC4gCkxvbmcgQmVhY2gsIENhbGlmLiBXZSd2ZSBhbHdheXMgYmVlbiBhd2FyZSB0aGF0IHRoZSBtZW4gY29taW5nIGludG8gb3VyIHVuZGVyY292ZXIgaG91c2VzIGNvdWxkIGJlIGRhbmdlcm91cywgYnV0IGFzIHdlIHNldCB1cCBvdXIgIlRvIENhdGNoIEEgUHJlZGF0b3IiIG9wZXJhdGlvbiBpbiBMb25nIEJlYWNoLCBDYWxpZm9ybmlhLCB0aGV2ZXJ5IGZpcnN0IG1hbiB3aG8gYXJyaXZlcyBoYXMgdXMgZXNwZWNpYWxseSB3b3JyaWVkLgpLZWVwIHNob3VsZGVycyBiYWNrIGFuZCBkb3duLiBLZWVwIGhlYWQgYmFjaywgbGV2ZWwgYW5kIHRhbGwuIApJZiB5b3UgZ2V0IHRoZW0gc3RvbGVuIHlvdSBjYW4gbG9jayB0aG9zZSB0aGF0IGdvdCBzdG9sZW4gYW5kIHVzZSB5b3VyIGJhY2t1cCBjYXJkcyB0byBnZXQgYnkuIApCdXQgSSB0aGluayB0aGUgZGlmZmVyZW5jZSBoZXJlIGlzIHRoYXQgdGhlIGF1ZGllbmNlIGlzIGdvaW5nIHRvIGhhdmUgdG8gd2FudCBpdC4gV2hhdCBtYXkgYmUgcGxlYXNpbmcgdG8gY29uY2VpdmUgYW5kIG1ha2UgbWF5IG5vdCBiZSBhcyBtdWNoIGZ1biB0byB3YXRjaC4gTW9zdCBpbXBvcnRhbnRseSwgSSB0aGluayBpdCBwYXlpbmcgb2ZmIHRoZSB2aWV3ZXIgZXhwZWN0YXRpb25zICh3aGV0aGVyIHRoZSBvYnZpb3VzIG9yIHN1YnZlcnRlZCkgaW5zdGVhZCBvZiB0aGUgZmlsbW1ha2VyIG1vdmllIEh1Z28gc3VmZmVyZWQgZnJvbSB0aGlzLCBJTU8uIApUaGlzIGlzIHdoZXJlIHRoZSBhcnRpY2xlIHNrYXRlcyBvbnRvIHRoaW4gaWNlLiBBcyBhIGN1bHR1cmUsIHdlIG1vc3QgY2VydGFpbmx5IGJlbGlldmUgdGhhdCBvYmVzaXR5IGFuZCB5ZXMsIHNob3J0bmVzcywgYXJlICJyZWZsZWN0aW9ucyBvZiBpbmRpdmlkdWFsIHZpcnR1ZSBvciBnb29kIGhlYWx0aC4iIEZ1cnRoZXJtb3JlLCB3ZSBhcmUgcHJlc2NyaWJpbmcgZ3Jvd3RoIGhvcm1vbmVzIGFuZCBldmVuIGJhcmlhdHJpYyBzdXJnZXJ5IChzdG9tYWNoIHN0YXBsaW5nKSBmb3IgeW91bmcgcGVvcGxlLiBUaGUgcmVhc29uIGZvciB0aGlzIGlzIHNpbXBsZTogZXVnZW5pY3MuCkFjY29yZGluZyB0byBCb2x0b24sIENoaW5hIHdhcyBhbiBlc3BlY2lhbGx5IGdvb2QgcGxhY2UgdG8gc3R1ZHkgd2hhdCBpbmZsdWVuY2VzIHBlb3BsZSBoZWFsdGggZGVjaXNpb25zLCBiZWNhdXNlIFdlc3Rlcm4gYW5kIHRyYWRpdGlvbmFsIENoaW5lc2UgbWVkaWNpbmUgb3BlcmF0ZSBhbG9uZ3NpZGUgZWFjaCBvdGhlciB0aGVyZSwgYW5kIGJvdGggZm9ybXMgb2YgbWVkaWNpbmUgYXJlIHJlc3BlY3RlZC4gSW4gZmFjdCwgc2hlIHNheXMsIHBlb3BsZSB3aWxsIHBpY2sgd2hhdCBkb2N0b3Igb3IgaG9zcGl0YWwgdG8gZ28gdG8gZGVwZW5kaW5nIG9uIHdoZXRoZXIgdGhleSBhcmUgbG9va2luZyBmb3IgYSBXZXN0ZXJuIG9yIHRyYWRpdGlvbmFsIGFwcHJvYWNoLgpJbiBoaXMgc2Vjb25kIHNlYXNvbiB3aXRoIHRoZSBjbHViLCBBbGxlZ3JpIHdhcyBwcmFpc2VkIGZvciByZWJ1aWxkaW5nIHRoZSB0ZWFtIGZvbGxvd2luZyB0aGUgZGVwYXJ0dXJlIG9mIHNldmVyYWwga2V5IHBsYXllcnMsIHN1Y2ggYXMgUGlybG8sIFZpZGFsIGFuZCBUZXZlejsgYW5kIGZvciBoaXMgcm9sZSBpbiBpbnNwaXJpbmcgSnV2ZW50dXMgdG8gYSBjb21lYmFjayB0byBkZWZlbmQgdGhlIGxlYWd1ZSB0aXRsZSwgd2hpY2ggaW5jbHVkZWQgYSAxNSBtYXRjaCB3aW5uaW5nIHN0cmVhayBhZnRlciBhIG5lZ2F0aXZlIHN0YXJ0LiBBbHRob3VnaCBhIDEgMCBkZWZlYXQgdG8gU2Fzc3VvbG8gb24gMjggT2N0b2JlciAyMDE1IGxlZnQgdGhlbSBpbiAxMnRoIHBsYWNlLCAxMSBwb2ludHMgZnJvbSB0aGUgdG9wIG9mIHRoZSB0YWJsZSBhZnRlciB0aGVpciBmaXJzdCAxMCBsZWFndWUgbWF0Y2hlcywgSnV2ZW50dXMgd2VudCB1bmJlYXRlbiBpbiB0aGVpciBuZXh0IDI1IGZpeHR1cmVzLCB3aW5uaW5nIDI0IG9mIHRoZW0gYW5kIGZpbmlzaGVkIHRoZSBzZWFzb24gYXMgMjAxNSAxNiBTZXJpZSBBIGNoYW1waW9ucyB3aXRoIHRocmVlIGdhbWVzIHRvIHNwYXJlClByZXNpZGVudHMgYXJlIGdpdmVuIGJyaWVmaW5ncyBvdXRsaW5pbmcgc2l0dWF0aW9ucyBiZWZvcmUgYWN0aW5nIG9uIHRoZW0uIApJIGRvbiBtaW5kIHBheXdhbGxzIGlmIHRoZSBjb250ZW50L2FydGljbGUgaXMgbWlycm9yZWQgaW4gdGhlIGNvbW1lbnQgc2VjdGlvbiwgYnV0IGlmIEkgY2FuIGFjY2VzcyB0aGUgY29udGVudCBiZWNhdXNlIG9mIGEgcGF5d2FsbCwgdGhlIHN1Ym1pc3Npb24gaXMgZ2V0dGluZyByZW1vdmVkLiBJdCBhIGRlYWQgbGluayB0byBtZSBpZiB0aGVyZSBubyBjb250ZW50IHRvIGNvbnN1bWUuICAxIHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvLiAKRGllIEF1c3dpcmt1bmdlbiBlaW5lciBzY2h3Y2hlbG5kZW4gS29uanVua3R1ciBzaW5kIG5pY2h0IG51ciBiZWltIEVuZHZlcmJyYXVjaGVyIHNwcmJhciBkZXIgamV0enQgZXR3YXMgbWVociBmciBzZWluZSBLaXBwZW4gemFobGVuIG11c3MuIERpZSBXaXJ0c2NoYWZ0IGlzdCBlbmcgdmVyemFobnQgdW5kIGFtIEVuZGUgaXN0IGVzIGF1Y2ggZWluIGFsbGdlbWVpbmVzIEdlZmhsIGJlaSBkZW4gTGV1dGVuIGRpZSBHZWxkIGF1c2dlYmVuLgpTY2hpem9waHJlbmljcywgaG93ZXZlciwgY2FuIGJlIGJsdWZmZWQgd2hlbiB0aGV5IGNvbmZ1c2UgeW91ciB3aGlzcGVycyBvZiAiZm9sZCJmb2xkLiIgd2l0aCB0aGUgdm9pY2VzIGluIHRoZWlyIGhlYWQuLiAKSW4gMjAxMiwgaGUgcmVjZWl2ZWQgYSBNZWRpYSBGZWxsb3dzaGlwIGZyb20gU3RhbmZvcmQgVW5pdmVyc2l0eS4uIApJZiB0aGF0IHRoZSBjb252ZXJzYXRpb24sIHRoZW4gSSBzdWdnZXN0IHdlIGhhdmUgaXQgYXQgYSBnbG9iYWwgc2NhbGUgbm90IG5hdGlvbmFsbHkuICQ0MGsgcHV0cyB5b3UgaW4gdGhlIHRvcCAyLjElIG9mIGluY29tZSB3aGVuIGFkanVzdGVkIGZvciBjb3N0IG9mIGxpdmluZywgZ2xvYmFsbHkuIApJIHRoaW5rIHdlIG1ha2UgYSBnb29kIHRlYW0gd29ya2luZyB0b2dldGhlci4gSSBjb3VsZG4gZG8gaXQgd2l0aG91dCB0aGVtLiAKSXMgdGhpcyBtb3JlIG9mIGEgcmVsYXhpbmcgcXVpZXQgcGxhY2Ugb3IgaXMgdGhpcyBtb3JlIGZ1biBhbmQgb3V0Z29pbmcgcGxhY2U/IEkgdGhpbmtpbmcgYWJvdXQgYm9va2luZyB0aGlzIGZvciBteSBib3lmcmllbmRzIGJpcnRoZGF5LiAKQy4gTGVpYiwgTXQuIApBcnRpZmljaWFsIGludGVsbGlnZW5jZSBpcyByYWNpbmcgc28gZmFyIGJleW9uZCBodW1hbiBjYXBhYmlsaXRpZXMsIHdoaWxlIGZpbGxpbmcgaW4gY3J1Y2lhbCBnYXBzIHN1Y2ggYXMgdGhlIGFiaWxpdHkgdG8gcmVhZCBhbmQgcmVhY3QgY29ycmVjdGx5IHRvIGh1bWFuIGVtb3Rpb25zLCB0aGF0IGNvZ25pdGl2ZSB3b3JrZXJzIGNvdWxkIGJlY29tZSBhcyByZWR1bmRhbnQgYXMgYSBmYXJtIHdvcmtlciBjdXR0aW5nIGdyYWluIHdpdGggc2N5dGhlcy4gSG93IHdpbGwgcGVvcGxlIG9jY3VweSB0aGVpciB0aW1lIHdoZW4gYSBodWdlIGNsYXNzIGhhcyBub3RoaW5nIHRvIGRvIGFsbCBkYXk/LiAKRXZlbnR1YWxseSB5b3UgbWlnaHQgYmUgYWJsZSB0byB0YWxrIGhlciBpbnRvIGl0LiAKSGUgYXNrZWQgdGhlIG1hZ2UgdG8gZHJpbmsgZW5vdWdoIGZvciAyIHBvaW50cyBhbmQgZ2l2ZSBoaW0gdGhlIHJlc3QgYmFjay5zbyB0aGUgbWFnZSBkcmFuayBpdCBhbGwgYW5kIGxhdWdoZWQgYXQgbXkgYnJvdGhlciwgdHVybmluZyB0byBoaWdoIGZpdmUgb3RoZXIgcGxheWVycyBmb3Igc2NyZXdpbmcgbXkgYnJvdGhlci4gVGhlIERNIGhhZCBhIGhvcnJpZmllZCBleHByZXNzaW9uIHdhdGNoaW5nIGl0IGFsbCB1bmZvbGQuIEEgY291cCBkZSBncmFjZSBsYXRlciwgdGhlIHBhcnR5IHNsZXB0IHdpdGggYWxhcm0gc3BlbGxzIGdvaW5nLi4gCjEgcG9pbnQgIHN1Ym1pdHRlZCAzIG1vbnRocyBhZ29Tbz8gQmVpbmcgYSBNdXNsaW0gaXMgYSBjaG9pY2UuIApUaGUgSmFja3NvbiBlc3RhdGUgc3VpbmcgSEJPIHJhdGhlciB0aGFuIG9mZmVyaW5nIHJlY29tcGVuc2UsIGxldCBhbG9uZSBhcG9sb2dpZXMuIApJdCB3aWxsIG5vdCBrZWVwIHRoZSBzbW9vdGhuZXNzIHRoYXQgaXQgaGFzIGF0IHRoZSBiZWdpbm5pbmcsIHNvIHRoaW5rIGFib3V0IGhvdyB5b3UgYXJlIHBsYW5uaW5nIHRvIHByb2NlZWQgaWYgeW91IGFyZSBnb2luZyB0byBwdXJjaGFzZSBpdC4gU3RhbmRhcmQgcG9rZXIgY2xvdGggaXMgdmVyeSBjb21tb24sIGFuZCBub3Qgb25seSBpcyBpdCByZWxhdGl2ZWx5IGR1cmFibGUsIGl0IGlzIGZhaXJseSBpbmV4cGVuc2l2ZSBhcyB3ZWxsLiBBcyB0aGUgbmFtZSBzdWdnZXN0cywgaXQgaXMgdGhlIHN0YW5kYXJkIGFuZCBhIGZhaXJseSByZXNwZWN0YWJsZSBjaG9pY2UuCldoZXRoZXIgeW91IHBsYXkgYXQgUGFydHkgUG9rZXIsIFBva2VyIFN0YXJzLCBVbHRpbWF0ZSBCZXQsIG9yIGEgc2VsZWN0aW9uIG9mIG90aGVycywgUG9rZXIgUHJvcGhlY3kga2VlcHMgc2l0IGFuZCBnbyByZWNvcmRzIGZvciB5b3Ugd2hldGhlciB5b3UgYXJlIGF0IHRoZSB0YWJsZSBvciBub3QuIElzIGl0IHVzZWZ1bD8gWWVzLCBpdCBhYnNvbHV0ZWx5IGlzLiAKVGhlIG9ubHkgb25lIG9mIHRob3NlIHRoYXQncyBzZXQgaW4gc3RvbmUgaXMgdGhlIHJlc2lkdWFsIHJhdGUuLiAKSWYgeW91IGFyZSBuZXcgdG8gdGhlIGJ1c2luZXNzIGl0IGlzIHByb2JhYmx5IGJlc3QgdG8gc2luZ2xlIG91dCBvbmUgdG8gdHdvIGl0ZW1zIGFuZCBwbGFjZSB5b3VyIGZvY3VzIG9uIHRob3NlIGl0ZW1zIG9ubHkgdW50aWwgeW91IGFkanVzdCB0byBoYXZpbmcgeW91ciBvd24gYnVzaW5lc3MuLiAKSSB0aGluayB5b3UgbmVlZCB0byB0YWtlIGEgc3RlcCBiYWNrIGFuZCByZWFsbHkgbG9vayBhdCB0aGUgc2l0dWF0aW9uIHlvdSdyZSBpbiwgdGhlIHNpdHVhdGlvbiBzaGUncyBpbiBhbmQgbW9yZSBpbXBvcnRhbnRseSwgdGhlIHNpdHVhdGlvbiB0aGUga2lkcyBhcmUgaW4uIApNaWphcGkgIDEgcG9pbnQgIHN1Ym1pdHRlZCA4IGRheXMgYWdvCkF2aXMgZGUgbm9uIHJlc3BvbnNhYmlsaXQgU0lURSBXRUIsIExFUyBGT05DVElPTk5BTElUIEVUIExFIENPTlRFTlUgU09OVCBGT1VSTklTIFRFTFMgUVVFTFMgRVQgVEVMUyBRVUUgRElTUE9OSUJMRVMgVk9VUyBOQVZJR1VFWiBFVCBVVElMSVNFWiBMRSBTSVRFIFdFQiBFVCBMRVMgRk9OQ1RJT05OQUxJVCBWT1MgUFJPUFJFUyBSSVNRVUVTLiAKU2FpZCwgIlRoZSBtb3RpdmUgYmVoaW5kIElHQyBpcyB0byBwcm92aWRlIGEgdW5pcXVlIHBsYXRmb3JtIHRvIHRoZSB5b3VuZyBnYW1lcnMgb2YgSW5kaWEgdG8gY29tcGV0ZSBvbiBpbnRlcm5hdGlvbmFsIGxldmVsLiAKWW91IGJlIHN1cnByaXNlZCB3aGF0IHBlb3BsZSB3aWxsIGFncmVlIHRvIHNvbWV0aW1lcy4gSSB3YXMgaGVhZHMgdXAgaW4gYSBXUFQgc2F0ZWxsaXRlIHdoZXJlIDFzdCByZWNlaXZlZCB0aGUgJDEwayBzZWF0ICsgJDI1MCBhbmQgMm5kIHJlY2VpdmVkIGxpa2UgJDIuNWsuIEkgY291bGQgcGF5IHRoZSBvdGhlciBndXkgbGlrZSAkMmsgb3V0IG9mIHBvY2tldCBhbmQgdGFrZSB0aGUgc2VhdC4gSGUgZGVjbGluZWQuIDQ1IG1pbnV0ZXMgbGF0ZXIgaGUgaGFzIG1lIGRvd24gdG8gbGlrZSAyQkJzIGFuZCBhc2tzIGlmIEkgd2FudCB0byBtYWtlIGEgZGVhbC4gSSBhc2sgd2hhdCBoZSB3YW50cyBhbmQgaGUganVzdCBhc2tzIGZvciB0aGUgZXh0cmEgJDI1MCBkb2xsYXJzIHBsdXMgMm5kIHBsYWNlIG1vbmV5IGFuZCBJIGNhbiBoYXZlIHRoZSBzZWF0LiBJIHNuYXAgYWNjZXB0LiBHdWVzcyBoZSBkZWNpZGVkIHRoYXQgdGhlICQyLDc1MCB3YXMgd29ydGggbW9yZSB0byBoaW0gdGhhbiB0aGUgc2VhdC4gRGFtbiBpZiB0aGF0IHdhc24gYSB3YXN0ZSBvZiA0NSBtaW51dGVzIG9mIGhlYWRzIHVwIHBsYXksIGJ1dCBhbHNvIHRoZSBiZXN0IGRlYWwgSSBldmVyIG1hZGUgaW4gbXkgbGlmZS4KSGUgc2VlbXMgbGlrZSBhIGd1eSB5b3UgY291bGQgc3RyaWtlIHVwIGEgbm9ybWFsIGNvbnZlcnNhdGlvbiB3aXRoIGFuZCB3YWxrIGF3YXkgdGhpbmtpbmcgaGUgc29tZXdoYXQgaW50ZWxsaWdlbnQuIApPbiBhIHQgdnJhaW1lbnQgcmF2aXMgZGUgZGNvdXZyaXIgY2V0dGUgZ2FtbWUgZGUgcHJvZHVpdHMgcXVpIHBlcm1ldCBkZSBjb25jb2N0ZXIgdHJzIHJhcGlkZW1lbnQgZGVzIHBsYXRzIHZndGFyaWVucyB2cmFpbWVudCBzYXZvdXJldXggZXQgb24geSByZXZpZW5kcmEuIEJyYXZvIEJlZW5hICEKSSB0cmllZCB0byBmaW5kIHNvbWVvbmUgb24gY3JhaWdzbGlzdCBsYXN0IHdlZWsgYW5kIGl0IHdhcyBhIHRvdGFsIG1lc3MuIApJJ20gbm90IGhlcmUgZm9yIHRoYXQuIAogMiBwb2ludHMgIHN1Ym1pdHRlZCA0IGRheXMgYWdvSXQncyBub3QgYWJvdXQgdGhlIHdpbm5pbmcgcGVyY2VudGFnZSBhcyBtdWNoIGFzIGl0IGlzIGFib3V0IEhPVyB0aGV5J3JlIGxvc2luZyB0aGVzZSBnYW1lcyBhbmQgdGhlIG92ZXJhbGwgYXR0aXR1ZGUgdGhpcyB0ZWFtIHNlZW1zIHRvIGhhdmUgdG93YXJkcyBlYWNoIG90aGVyLiBJdCdzIGR5c2Z1bmN0aW9uIGF0IHRoZSBoaWdoZXN0IGxldmVsLkFsc28sIG91ciBnYW1lIHN0eWxlIGlzbid0IGNvbmR1Y2l2ZSBmb3Igd2lubmluZyBsb25nIHRlcm0gd2l0aCB0aGUgcGVyc29ubmVsIHdlIGhhdmUuIFdlJ3JlIG9uZSBvZiB0aGUgdG9wcyBhdCBndW5uaW5nIDMncyBhbmQgd2UgZ28gZmFyIHRvbyBjb2xkIHRvbyBvZnRlbiBmcm9tIGRvd250b3duIHRvIGJlIHBsYXlpbmcgdGhhdCB3YXkuIApTaXN0ZXIgaW4gbGF3IG9mIEdlb3JnZSAoRGViYmllKSBQYXR0aXNvbi4gCkFjY29yZGluZyB0byBhIGZlZGVyYWwgc3R1ZHkgcmVsZWFzZWQgaW4gMjAwNSwgNDAgcGVyY2VudCBvZiBtZW4gYW5kIDM1IHBlcmNlbnQgb2Ygd29tZW4gc3VydmV5ZWQgaW4gMjAwMiBzYWlkIHRoZXkgaGF2ZSBoYWQgYW5hbCBzZXggd2l0aCBhbiBvcHBvc2l0ZSBzZXggcGFydG5lci4gR2l2ZW4gdGhhdCBmaXZlIG9mIG15IHRvcCB0ZW4gcG9zdHMgYWxsIHRpbWUgYXJlIGFib3V0IGFuYWwgc2V4LCBJIHN1cmUgdGhlIG51bWJlcnMgaGF2ZW9ubHkgaW5jcmVhc2VkIHNpbmNlIHRoZW4uIFRoYXQgbWVhbnMgdGhhdCBhIGxvdCBvZiBjb3VwbGVzIGhhdmUgbW92ZWQgYmV5b25kIGFuYWwgc2V4IGZvciBiZWdpbm5lcnMgYW5kIGFyZSBsb29raW5nIGZvciB3YXkgdG8gbWFrZSBhbmFsIHNleCBldmVuIGhvdHRlci4gSGVyZSBhcmUgZml2ZSBhZHZhbmNlZCBhbmFsIHNleCB0ZWNobmlxdWVzIHRvIHRyeS4gSSB0aGluayBJIG1ldCBzb21lIG9mIHRoZSBpbnNhbmUgZ2VudGxlbWVuIHRoaXMgYXJ0aWNsZSBpcyBhaW1lZCBhdCwgc28gSSBqdXN0IGhvcGUgdGhleSBhbHdheXMgcmVtZW1iZXIgdGhlIGxhc3QgdGlwLgpUbyB3cml0ZSBDYXB0YWluIEppbSdzIGxpZmUgYm9vayBhcyBpdCBzaG91bGQgYmUgd3JpdHRlbiBvbmUgc2hvdWxkIGJlIGEgbWFzdGVyIG9mIHZpZ29yb3VzIHlldCBzdWJ0bGUgc3R5bGUsIGEga2VlbiBwc3ljaG9sb2dpc3QsIGEgYm9ybiBodW1vcmlzdCBhbmQgYSBib3JuIHRyYWdlZGlhbi4gQSByYXJlIGNvbWJpbmF0aW9uIG9mIGdpZnRzIGlzIG5lZWRlZC4gCk1tYSBpcyBhIGdyZWF0IHNwb3J0LCBpdHMgbm90IHJlYWxpdHkuClRoZSBmZWVsIGlzIGEgbGl0dGxlIGxpa2UgYSB3aXphcmQgd29ya3Nob3AsIGFuZCB3aGV0aGVyIHlvdSBsaWtlIHRoYXQgc29ydCBvZiB0aGluZyBvciBub3QsIGl0IHVudXN1YWwgYW5kIGZyZXNoIGZvciB0aGUgY2FzaW5vIGluZHVzdHJ5LiBTZXVzcy4gCklmIHlvdSBiZWluZyBwYXJ0aWN1bGFybHkga2lua3kgb3Igcm9sZSBwbGF5aW5nLCBlc3RhYmxpc2ggYm91bmRhcmllcyBhbmQgc2FmZSB3b3JkcyBiZWZvcmUgeW91IGJlZ2luLiBJZiB5b3VyIHBhcnRuZXIgaXMgZ29pbmcgdG8gYmUgaW4gYSBzaXR1YXRpb24gaW4gd2hpY2ggdGhleSBjYW5ub3QgdmVyYmFsaXplIGEgIm5vIiBvciAic3RvcCIgdGhlbiBmaWd1cmUgb3V0IHdoYXQgaXMgZ29pbmcgdG8gbWVhbiAibm8vc3RvcCIgYW5kIHBheSBhdHRlbnRpb24gZm9yIHRoYXQgc2lnbi4gRG9uIHZpb2xhdGUgcHJldmlvdXNseSBlc3RhYmxpc2hlZCBib3VuZGFyaWVzLi4gCk1lcmNXaXRoYU1vdXNlIHUKSWYgeW91IGVhdCBmZXdlciBjYWxvcmllcyB0aGFuIHlvdSBub3JtYWxseSBkbyB0aGVuIHlvdSB3aWxsIGxvc2Ugd2VpZ2h0LiAKV2hlbiBDYWxkZXIgYWRkZWQgc2xvdHMgaW4gMjAxMCwgdGhlIGFyZWEgd2hlcmUgZ2FtYmxlcnMgcGxheWVkIHRoZSBtYWNoaW5lcyB3YXMgY29ubmVjdGVkIHRvIHRoZSBsaXZlIGdhbWluZyBmYWNpbGl0eSwgdGhlIHBhcnRpZXMgaW52b2x2ZWQgaW4gdGhlIGNhc2UgYWdyZWVkLgpBbHNvIGhhZCBhIG10dCByZWNlbnRseSBmcmVlemUuIApTaGUgYXNrcyBpZiBJIGp1c3QgY2FsbGVkIGhlciBhIGxpYXIsIGFuZCBJIHNhaWQgeWVzLiAKSXQgYSBkeWluZyBuYXRpb24uIApNaWNoYWVsIENvaGVuIHBvaW50ZWQgb3V0IGluIGhpcyB0ZXN0aW1vbnkgdGhhdCB0aGUgcmVhc29uIGhlIHRoaW5rcyBUcnVtcCBkb2VzbiB3YW50IGhpcyB0YXggcmV0dXJucyBpbiB0aGUgcHVibGljIGlzIHRoYXQgaXQgd291bGQgZ2l2ZSB0YXggZXhwZXJ0cyBhIGNoYW5jZSB0byBnbyBvdmVyIHRoZW0gd2l0aCBhIGZpbmUgdG9vdGhlZCBjb21iIGFuZCBmaW5kIG91dCBhbGwgb2YgdGhlIHNoYWR5IHRheCBkb2RnZSBzY2hlbWVzIGhlIGJlZW4gaW52b2x2ZWQgaW4uIApJIGdldCB0aGlzIHRvdGFsbHkuIEZvciBtZSBJIHRoaW5rIGl0IG1vc3RseSBjZW50ZXJzIGFyb3VuZCB0aGUgZ3JvdXAgb2YgZnJpZW5kcyBJIGFtIGFyb3VuZC4gSXQncyBsaWtlIGV2ZXJ5IHRpbWUgSSBjaGFuZ2UgbXkgY2lyY2xlIG9mIGZyaWVuZHMgd2hldGhlciB0aHJvdWdoIGEgY2hhbmdlIG9mIGhvYmJpZXMgb3IgbW92aW5nIHRvIGEgbmV3IHBsYWNlLCBJIHN0YXJ0IHRvIGFkYXB0IHRvIHdoaWNoIHJvbGUgSSBwbGF5IGluIHRoYXQgZ3JvdXAgb2YgZnJpZW5kcy4gCkluIGFkZGl0aW9uIHRvIHRoaXMsIGl0IGlzIGEga25vd24gY3VyZSBmb3Igc29tZSBkaXNlYXNlcy4gU29tZSBleHBlcnRzIGFsc28gdmlldyBtYXNzYWdlIHRoZXJhcHkgYXMgYSByZWxpZWYgZm9yIGF0aGxldGVzLiAKSSBrbm93IGFsbCBhYm91dCB0aGlzLiAKQW5kIGluIGdvb2QgbmV3cyBmb3IgbG9jYWwgc3VwcGxpZXJzLCB0aGUgbmV3IGVudGl0eSB3aWxsIGVuZGVhdm91ciB0byBidXkgbG9jYWxseSB3aGVyZXZlciBwb3NzaWJsZS4gClR3ZW50eSBlaWdodCBwZXIgY2VudCBvZiB0aG9zZSBzdXJ2ZXllZCBwdXQgb2ZmIHNlZWtpbmcgbWVkaWNhbCBjYXJlIHdoZW4gaW5qdXJlZCBvciBzaWNrIGR1ZSB0byBkaXNjcmltaW5hdGlvbiBhbmQgNTAlIGhhZCB0byBlZHVjYXRlIHRoZWlyIG1lZGljYWwgcHJvdmlkZXJzIGFib3V0IHRyYW5zZ2VuZGVyIGNhcmUuLiAKV2hlbiB5b3Ugc3RhcnQgdGhlIGluaXRpYWwgcm91bmQgb2YgYmV0dGluZywgaXQncyBpbXBvcnRhbnQgdG8ga25vdyB3aGV0aGVyIG9yIG5vdCB0aGUgaGFuZCB5b3UgaGF2ZSBpcyB3b3J0aCBwbGF5aW5nIGFuZCB0byBzZWUgd2hhdCBjYW4gYmUgYWRkZWQgdG8gdGhlbSBmcm9tIHRoZSBjb21tdW5pdHkgY2FyZHMuIApXaGF0IGlzIFRoZSBMaXN0P1RoZSBMaXN0IGlzLCBhcyB5b3UgbWlnaHQgZXhwZWN0LCBhIGxpc3QuIFRoZSBOYXRpb25hbCBIZXJpdGFnZSBMaXN0IG9mIEVuZ2xhbmQsIHRvIGdpdmUgaXQgaXRzIGZ1bGwgdGl0bGUsIGNvbGxlY3RzIHRvZ2V0aGVyIGltcG9ydGFudCBzaXRlcyBhcm91bmQgRW5nbGFuZCB0byBhc3Npc3Qgd2l0aCBwcm90ZWN0aW5nIGFuZCBwcmVzZXJ2aW5nIHRoZW0gZm9yIGZ1dHVyZSBnZW5lcmF0aW9ucyAgIGlmIGEgc2l0ZSBpcyBvbiBUaGUgTGlzdCwgdGhlbiBpdCBjYW5ub3Qgc2ltcGx5IGJlIGNoYW5nZWQgb3IgZGVtb2xpc2hlZDM6IGxlZ2FsIG1hdHRlcnMgaGF2ZSB0byBiZSB0YWtlbiBpbnRvIGFjY291bnQgYmVmb3JlIGFueSBkZWNpc2lvbiBpcyBtYWRlIGluIG9yZGVyIHRvIGVuc3VyZSB0aGUgc2lnbmlmaWNhbmNlIG9mIHRoZSBzaXRlIGlzIG5vdCBsb3N0LgpUaGlzIHdhcyB3aGVuIExlbmluJ3MgaW1hZ2UgYmVjYW1lIHdlbGwga25vd24uIApPbmNlIHRoZXkgbWFrZSB0aGVpciBjIGJldCBqdXN0IGNhbGwgd2l0aCB0aGUgaW50ZW50aW9uIHRvIHRha2UgdGhlIHBvdCBhd2F5IGZyb20gdGhlbSBvbiB0aGUgdHVybi4gT25jZSB0aGV5IGNoZWNrIHRvIHlvdSBvbiB0aGUgdHVybiBiZXQgYWJvdXQgMy80IG9mIHRoZSBwb3QgYW5kIHRoZXkgc2hvdWxkIGZvbGQuIApIZXJlIC4gCkkgYXNzdW1lIGl0IHdhcyB1c2VkIGFzIGFuIG9ub21hdG9wb2VpYSBpbiBzb21lIHBhcnRzIG9mIHRoZSB3b3JsZCwgbWF5YmUgYSBiYXR0bGUgY3J5LCBtYXliZSBhIHdlaXJkIGZpcnN0IG5hbWUgaW4gTWVzb3BvdGFtaWEgd2hvIGtub3dzPyBCdXQgSSBrbm93IHdoeSBpdCBpcyB1c2VkIG5vdy4gCkl0IGhhcmQgdG8gc2F5IHJlYWxseS4gCk5ldXJvcHN5Y2hvbG9naWEuLiAKTGVhcm4gaG93IHRvIHN3aXRjaCBnZWFycyBpbiB0b3VybmFtZW50cy4gSXQncyBiZXR0ZXIgdG93aW4gYSBidW5jaCBvZiBzbWFsbCBwdW5jaCBvZiBzbWFsbCBwb3RzIHRoYW4gdG8gbG9zZSBhIGZldyBiaWdvbmVzLiAKQm9udXNlcyBhcmUgYSBzdGFwbGUgaW4gdGhlIHByb21vdGlvbiBvZiBncmVhdCBvbmxpbmUgcG9rZXIgc2l0ZXMuIFRoaXMgaW5jbHVkZXMgc2lnbiB1cCBib251c2VzLCBkZXBvc2l0IGJvbnVzZXMgYW5kIGV2ZW4gYmlydGhkYXkgYm9udXNlcyEgVGhlc2UgYm9udXNlcyBhcmUgYWN0dWFsbHkgbm9uIGV4aXN0ZW50IGluIHJlYWwgY2FzaW5vcyBzbyBpdCByZWFsbHkgbWFrZXMgb25saW5lIHBva2VyIHNpdGVzIG1vcmUgYXBwZWFsaW5nIHRvIHBva2VyIHBsYXllcnMuIFBva2VyIHNpdGVzIHNob3VsZCBhbHNvIGhhdmUgYSBnb29kIG5hbWUgdGhhdCBpcyBlYXN5IHRvIHJlbWVtYmVyIHNpbmNlIHBlb3BsZSB0aGVzZSBkYXlzIGFyZSBoYXZpbmcgYSBoYXJkIHRpbWUgZXZlbiByZW1lbWJlcmluZyB3aGF0IHRoZXkgYXRlIHRoaXMgbW9ybmluZy4KUGVvcGxlIGFyZSB3YXRjaGluZyB0aGlzIGFuZCB3YXRjaGluZyB5b3UuLiAKQ2UgcXVpIHN1YnNpc3RlLCBlbiBkZWhvcnMgZHUgc2NyaXB0IG9yaWdpbmFsLCB2ZXJzaW9uIGR1bGNvcmUgZHUgcm9tYW4gZGUgVGhvbWFzIEhhcnJpcywgYydlc3QgbGEgY2FtcmEgZGUgSm9uYXRoYW4gRGVtbWUgcXVpIG5vdXMgbGUgbGl2cmUgOiBsZSByZWdhcmQgZGUgSm9kaWUgRm9zdGVyLCBzb24gYWNjZW50ICBwbG91YyAgZHUgU3VkLCBsJ2Ftb3VyIHBvdXIgc29uIHByZSBkZSBzdWJzdGl0dXRpb24sIFNjb3R0IEdsZW5uLiBPbiBuZSB2b2l0IHBsdXMgcXVlIGEgZW4gZmFpdCwgY2UgZHNpciBxdWkgY2lyY3VsZSBlbnRyZSBlbGxlIGV0IGx1aSwgY2V0IGFtb3VyIGltcG9zc2libGUgY29uY2x1IHBhciB1bmUgcm90aXF1ZSBldCBjaGFzdGUgcG9pZ25lIGRlIG1haW4uLiAKSGUgc3BlbnQgeWVhcnMgYXMgb25lIG9mIHRoZSBiaWdnZXN0IG5hbWVzIGluIE1NQSBhbmQgcmVtYWlucyBvbmUgb2YgdGhlIGJlc3QgYW1iYXNzYWRvcnMgZm9yIHRoZSBzcG9ydC4gSGUgcHV0IENhbmFkYSBvbiB0aGUgTU1BIG1hcC4iLiAKSG93ZXZlciwgbWFueSBvZiB1cyBiZWxpZXZlIHJlc2VhcmNoIGlzIGxlc3Mgc2FmZSB0b2RheSBhcyB0aGUgZGVsdWdlIG9mIHVuaW1wb3J0YW50IGluZm9ybWF0aW9uIHRoYXQgZm9sbG93cyB0aGUgb3BlbmluZyBvZiBhIHRyaWFsIG1lYW5zIHRoYXQgdGhlIHRydWx5IGltcG9ydGFudCBzaWduYWxzIGFyZSBsb3N0IGFuZCB0aGUgbGVuZ3RoIGFuZCBsYW5ndWFnZSB1c2VkIGluIGNvbnNlbnQgZm9ybXMgbWVhbiB0aGF0IHBhdGllbnRzIG5vIGxvbmdlciB0cnVseSB1bmRlcnN0YW5kIHdoYXQgdGhleSBhcmUgZ2V0dGluZyBpbnZvbHZlZCB3aXRoLiBXaGVyZSBpcyB0aGUgImdvb2QgY2xpbmljYWwgcHJhY3RpY2UiIGluIGFza2luZyBhIHBhdGllbnQgdG8gcmUgY29uc2VudCB0byBhIHRyaWFsIChvZnRlbiBtdWx0aXBsZSB0aW1lcykgdG8gYWNrbm93bGVkZ2UgbmV3IHNpZGUgZWZmZWN0cyBpbiBhIGRydWcgdGhhdCB0aGV5IG5ldmVyIHJlY2VpdmVkLCBvciB0byByZSBjb25zZW50IHRvIGhhdmluZyBmZXdlciBpbnZlc3RpZ2F0aW9ucyBhbmQgdGhpcyBjb250aW51ZXMgZXZlbiBhZnRlciB0aGV5IGFyZSBubyBsb25nZXIgb24gdGhlIHN0dWR5LiAKVG8gY3JlYXRlIGEgdGhlcmFwZXV0aWMgc3RlYW0sIGFkZCBhIGZldyBkcm9wcyBvZiBlc3NlbnRpYWwgb2lsIHRvIGEgcGFuIG9mIHdhdGVyIHRoYXQgaXMgc2ltbWVyaW5nIG9uIHRoZSBzdG92ZS4gWW91IGNhbiBhbHNvIHVzZSBhIGh1bWlkaWZpZXIgICBzb21lIGFjdHVhbGx5IHByb3ZpZGUgYSBjb21wYXJ0bWVudCBmb3IgZXNzZW50aWFsIG9pbHMuIApCdXQgb2YgdGhhdCwgNTIuNWJuICAgbmVhcmx5IGEgdGhpcmQgb2YgYWxsIHRheCByYWlzZWQgICB3YXMgcGFpZCBieSB0aGUgMzgxLDAwMCB0YXhwYXllcnMgd2hvIGVhcm4gbW9yZSB0aGFuIDE1MCwwMDAgYSB5ZWFyLiAKQmlzIDMwLiAKSW4gdGhlIGV2ZW5pbmcsIG92ZXIgNTAgd29tZW4gb3duZWQgYnVzaW5lc3NlcyB3aWxsIHNob3djYXNlIHRoZWlyIHdhcmVzIGF0IGEgbmlnaHQgbWFya2V0LiBDaGVjayBvdXQgcGlucyBmcm9tIENoZXJyeSBNb29uIFByZXNzLCBqb2luIHRoZSBGZW1pbmlzdCBCb29rIENsdWIsIGFuZCBzaG9wIGZvciBjbG90aGluZyBmcm9tIFRhbmRlbSBWaW50YWdlLCBDQUtFIFBsdXMgU2l6ZSBSZXRhaWwsIGFuZCBUcmFja0dpcmx6LiAKVGhlIGFyY2ggaGVpZ2h0IGFuZCBhbmQgc2hhcGUgYXJlIGZvciB0aGUgbW9zdCBwYXJ0IHRoZSBzYW1lLCBiZXNpZGVzIGluZGVudHMgd2hlcmUgbXkgdG9lcyBnbywgdGhlIGZvYW0gb24gdGhlIGZyb250IG9mIHRoZSBmb290IGJlaW5nIHBhY2tlZCBtYXliZSBhIG1pbGxpbWV0ZXIgdGhpbm5lciwgYW5kIHRoZSBvYnZpb3VzIGxvc3Mgb2YgdGhlIGdyZWVuIGZhYnJpYyBvbiB0aGUgdG9wLiBJIGNhbnQgaW1hZ2luZSB0aGUgcGFja2luZyBvdXQgaXMgYW4gaXNzdWUgYXMgaXQgaXNuIGEgY3VzaGlvbiBsYXllciBsaWtlIHdoYXQgcGFja3Mgb3V0IGluIHNob2VzLCBhbmQgaXQgaXNuIGxpa2UgdGhleSBhcmUgZmxhdHRlbmVkIGF0IHRoZSBhcmNoIGF0IGFsbC4gCk9uZSBldmVuaW5nIG92ZXIgZHJpbmtzLCBNcy4gTWFnbnVzc29uIGFkZGVkIGEgZmV3IGRyb3BzIG9mIGxpcXVpZCBoZW1wIHRvIHRoZWlyIHZvZGthIGFuZCBvcmFuZ2UganVpY2UuIFRoZXkgbGlrZWQgdGhlIHRhc3RlIGFuZCBiZWxpZXZlZCB0aGV5IGhhZCBoaXQgb24gYW4gaWRlYSBmb3IgYSBidXNpbmVzcyB2ZW50dXJlOiBOb3J0aCBBbWVyaWNhIGZpcnN0IGhlbXAgaW5mdXNlZCB2b2RrYS4KQWxzbywgdGhleSBwYXNzaW5nIHRoZSBidWNrIHRvIGxvdyBjb3N0IGFwYXJ0bWVudCBvd25lcnMuIERpZCB5b3UgZm9yZ2V0IHRoYXQgdGhleSBtb3N0bHkgc2VuaW9ycywgd2UgZG93biB0d28gaHVuZHJlZCB0aG91c2FuZHMgb2YgbG93IGNvc3QgYXBhcnRtZW50IHVuaXRzLCB0aGUgZWxkZXJseSBhcmUgaGlnaGx5IHZ1bG5lcmFibGUgdG8gYWJ1c2UsIGFuZCB3ZSBoYXZlIGhhZCBtYW55IGluY2lkZW50cyB3aXRoIHNsdW1sb3Jkcz8gRG9lcyB0aGlzIGVxdWFsIHRoZSBjb3N0IG9mIGRlY2VudHJhbGl6ZWQgaGVhbHRoY2FyZS9yZXNvdXJjZXMgYW5kIHRyYW5zcG9ydGF0aW9uIGNvc3RzIGZvciB0aGVzZSBwZW9wbGUvQ01IQT8KQWxsIG9mIG15IGp1aWNlcyB0YXN0ZSB0aGUgYmVzdCBvdXQgb2YgdGhlIEtlbnNlaSwgd2hlbiBjb21wYXJlZCB0byBteSBvdGhlciB0YW5rcy4gSSBqdXN0IGtub3cgc2V2ZXJhbCByZXZpZXdlcnMgd2VyZSBzYXlpbmcgdGhhdCB0aGlzIGlzIHdoYXQgdGhlIEt5bGluIHNob3VsZCBoYXZlIGJlZW4uIFNocnVnLiAKQmVjYXVzZSB3ZSBhcmUgbGFyZ2VyIGhvc3BpdGFsLCBhbmQgd2UgZG8gaGF2ZSBzbGlnaHRseSBleHBhbmRlZCBNUkkgYW5kIEVFRyBjYXBhYmlsaXRpZXMsIG91ciBhZG1pbmlzdHJhdG9ycyBoYXZlIG1hZGUgaXQgY2xlYXIgdGhhdCB3ZSBhcmUgbm90IHRvIHB1c2ggYmFjayBhZ2FpbnN0IHRyYW5zZmVycyB1bmxlc3MgdGhlcmUgaXMgYWJzb2x1dGVseSBub3RoaW5nIGVsc2UgdGhhdCB3ZSBjYW4gZG8gZm9yIHRoZXNlIHBhdGllbnRzLiAKU3RheSBhd2F5IGZyb20gS2lsbHosIGFzIGl0IGhvdCBnYXJiYWdlLiBaaW5zc2VyIGlzIGEgcmVhbGx5IGdvb2QgcHJpbWVyLiAKVGhlIGZhbGwgb2YgQmFnaG91eiB3aWxsIGxpa2VseSBib2xzdGVyIFByZXNpZGVudCBUcnVtcCdzIGhvcGVzIG9mIGJyaW5naW5nIGhvbWUgdGhlIGJ1bGsgb2YgdGhlIDIsMDAwIFVTIHRyb29wcyBjdXJyZW50bHkgaW4gU3lyaWEsIG1vc3Qgb2YgdGhlbSB0cmFpbmluZyB0aGUgS3VyZGlzaCBsZWQgU3lyaWFuIERlbW9jcmF0aWMgRm9yY2VzLiBUaGUgV2hpdGUgSG91c2Ugc2FpZCBsYXN0IHdlZWsgdGhhdCA0MDAgdHJvb3BzIHdvdWxkIHN0YXkgYmVoaW5kIGluZGVmaW5pdGVseS4KUG91cnF1b2kgYWxpbWVudGVyIHVuIGRiYXQgcG9saXRpcXVlIHZvaXJlIHVuZSBjcmlzZSBwb2xpdGlxdWUsIGFsb3JzIHF1ZSBsJ29uIG4nZXN0IG1tZSBwYXMgY2VydGFpbiBkZSBzb24gaW50cnQuIElsIHNlbWJsZSBxdWUgbGEgZGNpc2lvbiBkJ2FkaHJlciAgbCdVbmlvbiBFdXJvcGVubmUgcmV2aWVudCBhdXNzaSBhdXggcGF5cyBjYW5kaWRhdHMsIGV0IGVuIHByZW1pZXIgbGlldSBzZXMgY2l0b3llbnMuIApBbnkgdGltZSBJIHBhc3RpbmcgSSBhbHdheXMgdXNpbmcgc2NyYXAgcGFwZXIgb24gdGhlIG90aGVyIHNpZGUgYXMgdG8gbm90IGdldCBtb2lzdHVyZSBpbnRvIHRoZSB0ZXh0IGJsb2NrLiAKSW4gdGhlIG1pZCAyMDAwIGEgZ3V5IGNvbWVzIGludG8gdGhlIEVSIHdpdGggYSBOb2tpYSBnbyBwaG9uZSBpbiBoaXMgYXNzLiBIZSAic2F0IG9uIGl0IGFjY2lkZW50YWxseSwiIGFwcGFyZW50bHkuIFdoYXRldmVyLiAKTWFnaWMgQWN0aW9uIEJveCBpcyBhbiBlYXN5IHRvIHVzZSBidXQgcG93ZXJmdWwgbGVhZCBnZW5lcmF0aW9uIHBsdWdpbiB0aGF0IGxldHMgeW91IGNyZWF0ZSBhIGZvY3VzZWQgYW5kIGhpZ2ggY29udmVydGluZyBmZWF0dXJlIGJveCBpbiBtaW51dGVzLiAKVGhpcyB5ZWFyIGEgbGlicmFyeSBvZiBuZXcgYm9va3MgaW5jbHVkaW5nIE1hcmsgU2lzc29uJ3MgVGhlIFByaW1hbCBDb25uZWN0aW9uLCBKYXNvbiBTZWliJ3MgVGhlIFBhbGVvIENvYWNoLCBhbmQgS2VsbHkgU3RhcnJldHQncyBCZWNvbWluZyBhIFN1cHBsZSBMZW9wYXJkIGNvbnRpbnVlIHRvIGV4cGFuZCB0aGUgcGFsZW8gZ29zcGVsLiBZb3UgaGF2ZSB0byBmb3JnaXZlIHRoZSBhd2t3YXJkIG92ZXJ1c2Ugb24gaGlzIHdlYnNpdGUgb2YgYW4gaW52ZW50ZWQgbWFzY290IG5hbWVkIEdyb2sgYSBzcGVhciBicmFuZGlzaGluZyBOZWFuZGVydGhhbCBvZnRlbiBjaGFzZWQgYnkgc2FiZXIgdG9vdGhlZCB0aWdlcnMgdG8gYXBwcmVjaWF0ZSBoaXMgZWZmb3J0cyBhdCBncm91bmRpbmcgaGlzIHByb2dyYW0gaW4gcmVhbCBzY2llbmNlLgpUaGUgbWFpbiBwb2ludCBvZiBhbGwgdGhpcyBpcyB0aGF0IHlvdSBzaG91bGQgYmUgcHVzaGluZyB2ZXJ5IGFnZ3Jlc3NpdmVseSBpbiBsYXRlIHBvc2l0aW9uIG9uIHRoZSBidWJibGUgb2YgYW4gT21haGEgc2l0IGFuZCBnbywgYW5kIGNhbGxpbmcgdmVyeSBsaXR0bGUuLiAKUml2ZXJvIGRyb3ZlIG9mZiB3aXRoIHRoZSBvdGhlciBtYW4gc3RpbGwgaGFuZ2luZyBvdXQgb2YgdGhlIGRvb3IsIGNhdXNpbmcgdGhlIG1hbiB0byBiZSBkcmFnZ2VkIGFib3V0IDEwMCB5YXJkcyBiZWZvcmUgaGUgd2FzIGVpdGhlciBwdXNoZWQgb3IgZmVsbCBvdXQgb2YgdGhlIGNhci4uIApZb3Ugd2lsbCBmdWNrIHVwLiAKVGhlc2Ugc3BhcyBlbXBsb3kgd29tZW4gdGhhdCBhcmUgbWFpbmx5IGZyb20gQ2hpbmEgd2hvIHNwZWFrIHZlcnkgbGl0dGxlIGVuZ2xpc2ggYW5kIG1vc3RseSBtYW5kYXJpbi4gU29tZSBhcmUgZnJvbSBISyBhbmQgY2FuIHNwZWFrIGNhbnRvbmVzZS4gCkkgZ290IG5hdXNlb3VzIGFuZCB3ZWFrIGtuZWVkIGFuZCBoYWQgdG8gc2l0IGRvd24gdG8gY29tcG9zZSBteXNlbGYuIAoiRGVhbGluJyBmb3IgRG9ncyBpcyBvdXIgbGFyZ2VzdCBmdW5kcmFpc2VyLCIgc2FpZCBUaW0gSGFycmluZ3RvbiwgZXhlY3V0aXZlIGRpcmVjdG9yIG9mIFRoZSBBYmlsaXR5IENlbnRlci4gIlRoaXMgcGFydHkgaGFzIGEgcmVwdXRhdGlvbiBmb3IgYmVpbmcgYSBsb3Qgb2YgZnVuIGFzIHdlbGwgYXMgYnJpbmdpbmcgdG9nZXRoZXIgb3VyIGdyYWR1YXRlcyBhbmQgdGhlaXIgZG9ncywgdm9sdW50ZWVycywgc3VwcG9ydGVycywgYW5kIHRob3NlIG5ldyB0byBBc3Npc3RhbmNlIERvZ3MgdG8gbWVldCBlYWNoIG90aGVyIGFuZCBsZWFybiBtb3JlIGFib3V0IHRoZSBwcm9ncmFtLiBNYW55IHRpY2tldCBob2xkZXJzIHdpbGwgaGF2ZSBhdHRlbmRlZCBwYXN0IERlYWxpbicgZXZlbnRzLCBidXQgd2UgaG9wZSB0byBzZWUgYSBsb3Qgb2YgbmV3IGZhY2VzIHRoaXMgeWVhciBhcyB3ZSBtb3ZlIHRoZSBldmVudCB0byBkb3dudG93biBUb2xlZG8gYXQgdGhlIFNlYUdhdGUgQ2VudHJlLiIgQWxsIHByb2NlZWRzIHdpbGwgYmVuZWZpdCBBc3Npc3RhbmNlIERvZ3MgYSBwcm9ncmFtIG9mIFRoZSBBYmlsaXR5IENlbnRlci4KSSdtIG1haW5seSBkb2luZyB0aGlzIGZvciB3ZWlnaHQgbG9zcyAgIEkgYW0gbm93IGNvb2tpbmcgZm9vZCBpbiB0aGUgd2hvbGUzMCB0ZW1wbGF0ZSBidXQgYWxzbyBjYWxvcmllIGNvdW50aW5nIHRvIGtlZXAgYW4gZXllIGlmIEkgZWF0IG91dCBvciBzdHJheSBmcm9tIHRoZSByZWNvbW1lbmRlZCBsaXN0IG9mIGZvb2QuIApRdWVzdGlvbiBvdGhlcnMnIG1vdGl2ZXMuIApUaGUgS2luZyBoYXMgdGhlIGV4YWN0IHNhbWUgcG9sYXJpemluZyBjaGFyYWN0ZXJpc3RpYywganVzdCBtYW5pZmVzdGVkIGluIGEgZGlmZmVyZW50IGZvcm0uIFdoZXJlYXMgRmxveWQgY2FyZWZ1bGx5IGN1bHRpdmF0ZWQgaGlzIGJhZCBib3kgcGVyc29uYSB0byBhdHRyYWN0IGhhdGVycyBLaGFuIGhhcyBkb25lIGl0IG5hdHVyYWxseS4gCkFuZWNkb3RhbCByZXBvcnRzIGFuZCByZWNlbnQgc3R1ZGllcyBzdWdnZXN0IHRoYXQgYSBzaW5nbGUgYWRtaW5pc3RyYXRpb24gb2YgcHNpbG9jeWJpbiBjYW4gZW5oYW5jZSBzdWNoIHByb2Nlc3NlcyBhbmQgY291bGQgdGhlcmVmb3JlIGJlIGEgcG90ZW50aWFsIHRyZWF0bWVudC4gCldlIGRvIG5vdCByZXBvcnQgb24gb3RoZXIgaW1wb3J0YW50IGNvbnRhbWluYW50cywgc3VjaCBhcyBtZXRoeWxtZXJjdXJ5LCBiZWNhdXNlIG91ciBwcmVsaW1pbmFyeSBzdHVkeSBzaG93ZWQgbm8gc2lnbmlmaWNhbnQgZGlmZmVyZW5jZSBpbiBtZXRoeWxtZXJjdXJ5IGxldmVscyBiZXR3ZWVuIGZhcm1lZCBhbmQgd2lsZCBzYWxtb24uClRoaXMgaXMgZ29ubmEgc291bmQgc3VwZXIgY2xpY2hlLCBidXQgSSBmZWVsIGxpa2UgYSBsb3Qgb2YgcGVvcGxlIGFyZSBzbGVlcGluZyBvbiB0aGlzIGNoYXJhY3Rlci4gSSBzZWUgYSBsb3Qgb2YgZ29vZCBwbGF5ZXJzIHB1dHRpbmcgaGltIGluIGxvdyBvciBtaWQsIHdoZW4gaGUncyBqdXN0IGFzIGdvb2QsIGlmIG5vdCBiZXR0ZXIgdGhhbiBob3cgaGUgd2FzIGluIHNtNHNoLiAKQ2hpbGwgb3V0IGFuZCByZWxheCBhbmQgaGF2ZSBhIGdvb2QgdGltZS4gUmVtZW1iZXJzIG9uY2UgYmVpbmcgYSB5b3VuZyBib3kgd2hvIHdhcyBoZWxkIGhvc3RhZ2UgaW5zaWRlIGEgc2Fsb24gZHVyaW5nIGhpcyBtb3RoZXIgYXBwb2ludG1lbnRzLiAKUGFydCBvZiB3aGF0IHNldHMgdGhpcyBtb3ZpZSBhIG5vdGNoIGJlbG93IHRoZSBvdGhlcnMgaXMganVzdCBob3cgcmVkdW5kYW50IHRoZSBwbG90IGZlZWxzLiAKVXBwZGF0ZXJpbmdhciBwIHNuYWJiYSBwcm9kdWt0ZXIgZiByIENhc2lub0JvbnVzIHNsb3RzIHIgZGUgc29tIGVyYmp1ZGVyIGVuIGJvbnVzIHNwZWxldCBmdW5rdGlvbmVuIGF0dCBtb2RlbGwgdCBnIG4gciBkZW4gZiByc3RhIGtvbW1lcnNpZWxsYSBrb3J0cGxhdHMgYmlsZW4gZ2pvcmRlcyBhdiBMaW9uZWwgb2NoIGkgZGVyYXMgMTkxMiBrYXRhbG9nLiBQIHBsYXRzZXIgZCByIGRldCBpbnRlIHIgaGVsdCBsYWdsaWd0IGthbiBkdSBoaXR0YSByb2xpZ2EsIGRlIGthc3RhIGluIGVuIG1hc3NhIHBlbmdhciBvY2ggZWdlbnRsaWdlbiBpbnRlIHYgcmQgb20gZGUgdmlubmVyIGVsbGVyIGYgcmxvcmFyLiBMIG5rIGJhc2VyYXQgYW5ub25zIHBsYXRzZXIgZGVzc2EgYW5ub25zIHBsYXRzZXIgciBoZWx0IGVua2VsdCBsIG5rYXIgc29tIGZpbm5zIHAgYm90dGVuLCB1bmRmbHkgVEQgQW1lcml0cmFkZSBvY2ggcHBuYSBldHQga29udG8gbWVkIEludGVyYWN0aXZlIEJyb2tlcnMgaXN0IGxsZXQ/IFRpbGwgZXhlbXBlbCBiYXJhIGwgc2Egb20gZHUgZiByc3QgcG9rZXIsIG9tIHR2IGF2IGRlIDMgZiByc3RhIGtvcnQgdiBudCBzYW10aWRpZ3Qgb2NoIGhhciBmIHJtIGdhbiBhdHQgYnl0YSBmaWwgb2NoIGsgcmEgb20gYW5kcmEgYmlsYXIuIAozLiBQYXJrIExhbmUgaXMgdGhlIGxvd2VzdCB2aXNpdGVkIHNxdWFyZSBkdWUgdG8gaXRzIGxvY2F0aW9uIG9uIHRoZSBib2FyZC4gSXQgZG9lc24gaGF2ZSBhbnkgc3F1YXJlcyBhcm91bmQgaXQgdGhhdCBoYXZlIHRob3NlIGN1cnZlYmFsbHMgdGhhdCB5b3UgYmVpbmcgc2VudCB0by4gVGhlIEdvIHRvIEphaWwgc3F1YXJlIGZvciBpbnN0YW5jZSBpcyBqdXN0IGEgZmV3IHNxdWFyZXMgYmVmb3JlIFBhcmsgTGFuZSBub2JvZHkgZXZlciBwcm9ncmVzc2VzIG9uIGZyb20gdGhhdCBzcXVhcmUgaWYgdGhleSBsYW5kIG9uIGl0LCB3aGljaCBtZWFucyBhIGxvdCBvZiBwZW9wbGUgYXJlIGJlaW5nIHRha2VuIGF3YXkgZnJvbSBlbmRpbmcgdXAgb24gUGFyayBMYW5lIHdpdGggdGhlaXIgbmV4dCB0aHJvdy4gT25seSAyLjElIG9mIHRocm93cyBlbmQgdXAgdGFraW5nIHlvdSB0byBQYXJrIExhbmUgb24gdGhlIGJvYXJkLgpUdXJuIHRoZSBoZWF0IHVwIHRvIG1lZGl1bSBoaWdoIGFuZCBzYXV0ZWUgYWxsIHRoaXMgZm9yIGEgZmV3IG1vcmUgbWludXRlcyB1bnRpbCB5b3Ugc2VlIGEgc2VhciBvbiB5b3VyIHZlZ2dpZXMuTm93IGFkZCB5b3VyIHRvYXN0ZWQgZ3JhaW4gYmFjayB0byB0aGUgcGFuLCBhZGQgd2F0ZXIgb3Igc3RvY2ssIGNvdmVyIHdpdGggYSBsaWQsIGFuZCBzaW1tZXIgb24gbG93IGhlYXQgb3IgbWVkaXVtIGxvdyBoZWF0IHVudGlsIGl0IGdldHMgY29va2VkLldoZW4gY29va2VkLCBnYXJuaXNoIHdpdGggbG90cyBvZiBjaWxhbnRybyBvciBkaWNlZCBzY2FsbGlvbnMgb3IgdG9hc3RlZCBjaG9wcGVkIGFsbW9uZHMgb3IgYWxsIG9mIHRoZSBhYm92ZSFCZWNhdXNlIHRoZSBncmFpbiBpcyB0b2FzdGVkIGFuZCB0aGUgdmVnZ2llcyBhcmUgc2VhcmVkIHNlcGFyYXRlbHksIHRoZSB0ZXh0dXJlIHdpbGwgYmUgYSB3aG9sZSBsb3QgZGlmZmVyZW50IHRoYW4gYSBjbHVtcHkgc29nZ3kgbWFzcy4gCklkIGxpa2UgdG8gc2VlIFJvc3NpIHdpbiBvbmUgb3IgdHdvIG1vcmUgYW5kIGJlYXQgQWdvc3RpbmkuIEkgdGhpbmsgdGhhdCB3b3VsZCBiZSBpbnRlcmVzdGluZyB0byBzZWUgaW4gbXkgbGlmZXRpbWUuIElmIGhlIGRvZXMgbm90IGRvIHRoYXQgSSBtaWdodCBiZSBzYXlpbmcgdGhlIHNhbWUgdGhpbmcgYWJvdXQgTWFyYyB5ZWFycyBkb3duIHRoZSByb2FkLgpXaGljaCBtZWFucyBCbGFjayBGcmlkYXkgYW5kIEN5YmVyIE1vbmRheSBhcmUgYWxzbyBhbG1vc3QgaGVyZSBhbmQgd2UgYXJlIGdvaW5nIGJpZyB0aGlzIHllYXIuIAoiVGhlIHByZXNlbnQgd29yayBpcyB3b3J0aCB3aGlsZSBmb3IgaXRzIG93biBzYWtlLCIgaGUgYW5ub3VuY2VkLiAKUmVnYXJkbGVzcyBvZiB3aGF0IFNtb2xsZXR0IGRpZCwgYmVsaWV2aW5nIHRoZSB2aWN0aW0gd2hlbiBzb21lb25lIHN0YW5kcyB1cCBhbmQgc2F5cyB0aGV5IHdlcmUgYXNzYXVsdGVkIGlzIHN0aWxsIHRoZSByaWdodCB0aGluZyB0byBkby4gSGlzIGJlaGF2aW9yIGRvZXNuIGNoYW5nZSB0aGUgZmFjdHMgdGhhdCAoMSkgZWxhYm9yYXRlIHNjYW1zIGxpa2UgdGhpcyBhcmUgZXh0cmVtZWx5IHJhcmUsICgyKSBwYXJ0aWN1bGFybHkgaW4gdGhpcyBlcmEgb2YgcmVzdXJnZW50IHJhY2lzbSwgZ2VudWluZSBoYXRlIGNyaW1lcyBhcmUgcmVsYXRpdmVseSBjb21tb24sIGFuZCAoMykgd2hlbiBzb21lb25lIGlzIGFzc2F1bHRlZCBmb3IgYW55IHJlYXNvbiBpdCBnZW5lcmFsbHkgbm90IGEgZ29vZCBsb29rIHRvIGJlIHNlYXJjaGluZ2x5IGlucXVpcmluZyBpbnRvIHRoZWlyIHN0b3J5IHRvIHNlZSBpZiB0aGV5IGZha2luZyAgIGl0IG1vcmUgY29tcGFzc2lvbmF0ZSBhbmQgYmV0dGVyIGFsaWduZWQgd2l0aCByZWFsaXR5IHRvIGp1c3QgYXNzdW1lIHRoZXkgdGVsbGluZyB0aGUgdHJ1dGggdW50aWwgdGhlcmUgaXMgY29uY3JldGUgcHVibGljIGV2aWRlbmNlIHRvIHRoZSBjb250cmFyeSwgYXMgaGFwcGVuZWQgaGVyZS4uIApCdXQsIG9uIGEgbW9yZSBjb25jcmV0ZSBsZXZlbCwgd2UgaGF2ZSBhIHByZXR0eSBnb29kIGlkZWEgd2h5IGhlIGNhcGl0dWxhdGVkLiBUaGUgcHJldmlvdXMgZGF5IHNpeCBzZW5hdG9ycyBkZWZlY3RlZCBmcm9tIHRoZSBHT1AgbGluZSBhbmQgdm90ZWQgZm9yIHRoZSBEZW0gYmlsbC4gVGhhdCdzIHF1aXRlIHRoZSBjb3VwLiBBbmQgdGhhdCB2ZXJ5IG5pZ2h0LCB3ZSBub3cga25vdyBzZW5hdG9ycyB3aG8gaGFkIHlldCB0byBjcm9zcyBsaW5lcyB3ZXJlIG9wZW5seSBjcml0aWNpemluZyBNY0Nvbm5lbGwgYW5kIFBlbmNlIGFuZCBkZW1hbmRpbmcgdGhleSBlbmQgdGhpcywgcXVpdGUgZm9yY2VmdWxseSwgd2l0aCBNY0Nvbm5lbCdzIG5vdyBpbmZhbW91cyByZWJ1dHRhbCBvZiAiZG8geW91IHRoaW5rIEkgZW5qb3kgdGhpcz8iCkRydWdnZWQgYW5kIGdhbmcgcmFwZWQgYSBjbyB3b3JrZXIuIEluIElyYXEsIGFuYWxseSBhbmQgdmFnaW5hbGx5LCBzdWZmZXJpbmcgZ2VuaXRhbCBtdXRpbGF0aW9uLiBTaGUgd29rZSB1cCBibGVlZGluZyBmcm9tIGJvdGggb3JpZmljZXMuIApCYWNrIHRvIHRoZSBtYWluIG1lbnUsLiAKU2lkZSBOb3RlIHRoYXQgUGVyaGFwcyBJc24gUmVhbGx5IFJlbGF0ZWQgYnV0IFNvbWV0aGluZyBJIEp1c3QgV2FudCB0byBHZXQgT2ZmIE15IENoZXN0OkkgZ3JldyB1cCBkZXZlbG9waW5nIHZpcnR1YWxseSBubyBza2lsbHMgb3IgbW90aXZhdGlvbiBvdXRzaWRlIGp1c3Qgc2Vla2luZyBwbGVhc3VyZSBpbiBmb29kLCBzZXgsIGRydWdzLCBob29rYWgsIGV0Yy4gSSBjdXJyZW50bHkgcGF5aW5nIHRoaXMsIGFnYWluLCBhcyBhIDI0IHllYXIgb2xkIHdpdGggb25seSBhbiBBQSBpbiBIaXN0b3J5IGFuZCB2YXJpb3VzIGFkZGljdGlvbnMsIG5hbWVseSBhbiBhZGRpY3Rpb24gdG8gYmVpbmcgYSBoeXBvY3JpdGUgYW5kIG5vdCBzdGFuZGluZyBpbiB0cnV0aCwgZXRoaWNzLCBvciBnZW5lcm9zaXR5LiBPdmVyIHRoZSBsYXN0IGZpdmUgeWVhcnMgd2l0aCBteSB0ZWFjaGVyLCBwYXJ0aWN1bGFybHkgdGhpcyBsYXN0IHllYXIsIGl0IGJlY29tZSBhcHBhcmVudCB0byBtZSwgaSB0aGluaywgdGhhdCB0aGUgcmVhbCBjaGFsbGVuZ2Ugb2YgYmVpbmcgYSBoZWFsZXIgaXMgaGVhbGluZyBvdXJzZWx2ZXM7IHB1cmlmeWluZyBvdXJzZWx2ZXMgYW5kIGluY3JlYXNpbmcgdGhlIHF1YWxpdHkgYW5kIG1hZ25pdHVkZSBvZiBvdXIgb3duICJ2aWJyYXRpb24iOyBvdXIgb3duIHN1YnRsZSBlbmVyZ3kgdGhhdCB0aG9zZSBhcm91bmQgdXMsIGluY2x1ZGluZyBvdXIgcGF0aWVudHMsIGNhbiBzZW5zZS4gCkJ1dCBCZW50c2VuJ3MgaW5mYW1vdXMgInlvdSdyZSBubyBKYWNrIEtlbm5lZHkiIGJ1cm4gdG93YXJkIERhbiBRdWF5bGUgaGFkIHRvIGVhcm4gaGltIHNvbWUgc29ydCBvZiBjb25zb2xhdGlvbiBwcml6ZSwgcmlnaHQ/IEFjdHVhbGx5LCBUaGUgTmV3IFlvcmsgVGltZXMgZGlkIGFuIGFtYXppbmcgaW50ZXJ2aWV3IHdpdGggdGhlIGRlZmVjdG9yIGF0IHRoZSB0aW1lICAgdGhlcmUgd2FzIGEgbG90IG1vcmUgdG8gaXQgdGhhbiB0aGF0Li4gCkJ1dCBpZiB5b3Ugd2FudCB0byBsYXVuY2ggYW4gaW52ZXN0aWdhdGlvbiwgeW91IGNhbiBnZXQgaXQuIEl0IG91dCB0aGVyZS4gVGhleSBtYWtpbmcgYSBzdGF0ZW1lbnQgdGhhdCB0aGUgZXZpZGVuY2UgZXhpc3RzLiAKVGhlIG91dGZpdCB3YXMgc2V4eSB5ZXQgY29tZm9ydGFibGUsIHdpdGggYSBraW5kIG9mIEFtZXJpY2FuIEJhbmRzdGFuZCBtZWV0cyBTb3VsIFRyYWluIHZpYmUuIEl0IGZpdCB0aGUgc2VkdWN0aXZlIGltYWdlIG9mIHN3aW5nZXJzIEknZCBjb25jb2N0ZWQgaW4gbXkgbWluZC4uIApQbGFjZXMgeW91IGdvIHRvIGNoYXJnZSB5b3UgZGlmZmVyZW50IGFtb3VudHMgZm9yIGRpZmZlcmVudCB0ZWNobmlxdWVzIHRoYXQgeW91IGRvLCB3aGVyZSBJIGp1c3QgY2hhcmdlIGZvciB0aGUgdGltZSBvbiB0aGUgdGFibGUsIHNhaWQuIEkgc2FpZCwgSSBtb3JlIGludG8gdGhlIG1lZGljYWwgc2lkZSBvZiB0aGluZ3MsIHNvIGlmIEkgZG9pbmcgYSBtYXNzYWdlIG9uIHlvdSBhbmQgZmVlbCB0aGF0IHlvdSBoYXZlIG11c2NsZSB0ZW5zaW9uLCBJIGdvbm5hIGdldCB0aGUga25vdHMgb3V0LiBPbmUgb2YgaGlzIGNsaWVudHMgZ2V0cyBhIHdlZWtseSBtYXNzYWdlIHRvIGFsbGV2aWF0ZSBoZWFkYWNoZXMuCklmIGFueSBvZiB0aGUgY3VycmVudCBhZG1pbnMgbW9kZXJhdGVkIGxhcmdlIHN1YnJlZGRpdHMgYWN0aXZlbHksIHRoZXkgc2VlIGhvdyBjcmF6eSBpdCBpcyB0aGlzIGlzbiBiZWluZyBkZWFsdCB3aXRoLiBUaGluayBvZiB0aGUgdGltZSB3YXN0ZSB0aGF0IGNvdWxkIGJlIGF2b2lkZWQgdGhyb3VnaCBhbiBhbm9ueW1pemVkIHN5c3RlbSB0byBmaWx0ZXIgb3V0IG1hc3MgcmVwb3J0ZXJzLCBzZXJpYWwgd3JvbmcgcmVwb3J0ZXJzIG9yIGJvdGguClNoZSB3YXMgaGF1Z2h0eSBhbmQgcnVkZS4gCk1vc3Qgb2YgdXMgbG92ZWQgaGlzIG1vdmllcywgYnV0IG5vbmUgb2YgdXMgbG92ZWQgaGltIGxpa2UgdGhlIGZhbWlseSBtZW1iZXJzIHdobyB3aWxsIG5ldmVyIGdldCB0byBzZWUgaGltIGFnYWluLiAKSXQgaW5mZWN0ZWQgYWxsIHRoZSBtYWpvciBzcG9ydHMgYW5kIGl0IGR1bWIgY2F1c2UgaXQgb3JnYW5pemF0aW9ucyB0cnlpbmcgbm90IHRvIGdldCBvbiB0aGUgYmFkIHNpZGUgb2Ygb3RoZXIgcG90ZW50aWFsIGZyZWUgYWdlbnRzIGluIHRoZSBmdXR1cmUsIGFuZCBJIGhhdGUgaXQuIFBhcnQgb2YgYmVpbmcgYSBmYW4gaXMgdGhhdCB5b3UgdGVhbSB0aGUgYmVzdCBhbmQgZXZlcnlvbmUgZWxzZSBjYW4gc3VjayBpdCBhbmQgd2hlbiBzb21lb25lIGRvZXNuIHdhbm5hIGJlIG9uIHlvdSB0ZWFtIHRoZW4gdGhleSBjYW4gc3VjayBpdCB0b28gKFByb3ZpZGVkIGEgZmFpciBvZmZlciBpcyBtYWRlIG9mIGNvdXJzZSkuIApNaWxrIHRoZSBsZWcsIG1ha2luZyBzdXJlIHlvdSBnZXQgaW50byBhbGwgdGhlIGNyZWFzZXMsIGVzcGVjaWFsbHkgYmVoaW5kIHRoZSBrbmVlLiBSb2xsIHRoZSBsZWcgU3F1ZWV6ZSBhbmQgdHdpc3QgdGhlIGxlZywgaW4gdGhlIHN0eWxlIG9mIGEgJ0NoaW5lc2UgYnVybicgICBidXQgd2l0aCBwbGVudHkgb2Ygb2lsITMgV29yayB5b3VyIHdheSBkb3duIHRoZSBsZWcuIApCYWNrIHRoZW4sIGlmIHlvdSB0aGluayBhYm91dCBpdCwgaXQncyBldmVuIG1vcmUgc28uLiAKQnV0IHRoaXMgZmFjdCAgdGhhdCBvYmVzaXR5IGlzIHRoZSByZXN1bHQgb2YgcG92ZXJ0eSBhbmQgdGhlcmVmb3JlIHJhY2lhbGl6ZWQgaW4gdGhlIFVTICBpcyBzb21ldGhpbmcgdGhhdCBuZWl0aGVyIE1pY2hlbGxlIG5vciBQcmVzaWRlbnRpYWwgQmFyYmllIGNvdWxkIHBvc3NpYmx5IHNwZWFrIGFib3V0LiBCYXJiaWUgYmVjYXVzZSBzaGUgaGFzIGEgcGxhc3RpYyBtb3V0aCBhbmQgbm8gdm9pY2UgYm94OyBNaWNoZWxsZSBiZWNhdXNlIHNoZSBtdXN0IHdhbGsgb24gbGFkeWxpa2UgcG9pbnR5IHRvZXMgdGhyb3VnaCB0aGUgbWluZWZpZWxkIHRoYXQgaXMgYmVpbmcgYSBCbGFjaywgZWR1Y2F0ZWQsIGFuZCBwb3dlcmZ1bCB3b21hbiBpbiB0aGUgQmFyYmllbGlrZSByb2xlIG9mIEZpcnN0IExhZHkuCkpvZSBCaWRlbiBpbiBTdC4gCkkgbWVhbiBJIHdvdWxkIGhhdmUgYXJndW1lbnRzIHdpdGggbXkgZnJpZW5kcyBvciB0ZWFzZSB0aGVtIGJ1dCBpZiBzb21lb25lIGVsc2UgZG9lcyBpdCBJIHNlcmlvdXNseSBmZWVsIGxpa2UgSSB3b3VsZCBtZXNzIHRoZW0gdXAuV2hhdCdzIGEgdHlwaWNhbCBkYXkgb24gc2V0IGxpa2U/RGVwZW5kaW5nIG9uIHdoZXJlIG91ciBsb2NhdGlvbiBpcyBhdCBkZWNpZGVzIHRoZSBkYXkuIApJIHRoaW5rIHRoaXMgaXMgd2hlcmUgdGhlIHRlcm0gZG9lcyBhIGJpdCBvZiBhIGRpc3NlcnZpY2UgdG8gdGhlIHVuZGVybHlpbmcgY29uY2VwdC4gVGhlIGltcHJvdmVtZW50IGRvZXNuIGhhdmUgdG8gYmUgaW5zdGFudGFuZW91cyB0byBjb21wbGV0ZWx5IG91dHBhY2UgaHVtYW5zLiAKSnVzdCB0aGVpciBiaWdnZXN0IGhpdC4gKEZ1bGwgQW5zd2VyKS4gClRoZSBvdmVyYWxsIHByaW5jaXBsZSB3aWxsIGJlIHRoZSBzYW1lLCB3ZSBhcmUganVzdCB1c2luZyBtb2Rlcm4gZGF5IHRlY2hub2xvZ3kgb2gsIGl0IG5vdCB0aGF0IGJpZyBvZiBhIGRlYWwuLiAKQXMgSSBnb3R0ZW4gb2xkZXIgSSBtZXQgbW9yZSBpbnRlcmVzdGluZyBwZW9wbGUgZnJvbSBtb3JlIGRpdmVyZ2VudCBiYWNrZ3JvdW5kcyB0aGF0IEkgaG9wZSB3aWxsIGJlIGluIG15IGxpZmUgZm9yIGEgbG9uZyBsb25nIHRpbWUuIFRoZXJlIG5vIGRpZmZpY3VsdHkgbWFraW5nIGZyaWVuZHMgd2hlbiB5b3UgZ2V0IG9sZGVyIGdlbmVyYWxseS4gVGhhdCBqdXN0IHJlYWxseSB3ZWlyZCB0aGlua2luZ3JhZ2luZ2hhcHB5ICA0IHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnb0NoZW1vIGRvZXNuIGhpdCBldmVyeW9uZSB0aGUgc2FtZSB3YXkuIApOZWl0aGVyIGl0IG5vciBpdHMgYWx0ZXJuYXRpdmVzIHNob3VsZCBiZSBkZWxldGVkIG9yIHJlbW92ZWQuIApZb3VyIGh1c2JhbmQgaGFzIGEgYmV0dGVyIG1lbnRhbGl0eSBhYm91dCB0aGlzLiAKVGhhdCBiZWluZyBzYWlkLCBJIHByZWZlciBXaW5zdG9uLCBhbmQgd291bGQgc29vbmVyIGNob29zZSBoaW0gb3ZlciBHYXNwZW4uIFBsdXMsIGhlIHdhcyBwcm9iYWJseSBydW5uaW5nIG91dCBvZiBpZGVhcyBpbiBnZW5lcmFsLCBhZnRlciBBQUkxIGFuZCBBQUkyICh0d28gb3RoZXIgZ2FtZXMgdG8gY29uc2lkZXIgcGxheWluZywgaWYgeW91IGhhdmVuIHBsYXllZCB0aGVtKS4gCldhdGNoaW5nIHBvcm4gbWlnaHQgbWFrZSB5b3UgYmlzZXh1YWwuIEF0IGxlYXN0IHRoYXQgc2VlbXMgdG8gYmUgdGhlIHRha2Vhd2F5IGZyb20gYSBzdHVkeSByZWxlYXNlZCBieSB0aGUgb25saW5lIHBvcm4gcG9ydGFsIHhIYW1zdGVyLiBEdWJiZWQgdGhlIHhIYW1zdGVyIG9uIERpZ2l0YWwgU2V4dWFsaXR5IGFuZCByZWxlYXNlZCBUdWVzZGF5LCB0aGUgc3VydmV5IG9mIDExLDAwMCB1c2VycyBmaW5kcyB0aGF0IHRoZSBtb3JlIHBvcm4geW91IHdhdGNoLCB0aGUgbGlrZWxpZXIgeW91IGFyZSB0byBnbyBib3RoIHdheXMuClJpZGVub3VyIHB1Ymxpc2hlZCBhbiBhcnRpY2xlIG9uIHRoZSBoeWRyb2dlbiBib21iIGluIHRoaXMgbWFnYXppbmUuIApEYWdmYXJpICAyIHBvaW50cyAgc3VibWl0dGVkIDggbW9udGhzIGFnbwpBbiBpbnRlbmRlZCAyMDE4IHJlbGVhc2UgY291bGQgc3RpbGwgZWFzaWx5IGJlIHJ1c2hlZCBpbiAyMDE5LiBJdCByZWFsbHkganVzdCBkZXBlbmRzIG9uIGhvdyBtdWNoIHdvcmsgdGhleSBoYXZlIGRvbmUgYW5kIHRoZSBjb25kaXRpb24gb2YgaXQgYXQgbGF1bmNoLCB0aGVzZSB0aGluZ3MgdGFrZSBhcyBsb25nIGFzIHRoZXkgdGFrZS5XaGF0IEkgZ2V0dGluZyBhdCBpcyB0aGF0IGV2ZW4gd2l0aCBpdCBiZWluZyBsYXVjaGVkIHRoaXMgeWVhciBvciBuZXh0IHllYXIgSSBub3QgZ29pbmcgdG8gYXNzdW1lIHRoYXQgbWVhbnMgaXQgYmUgYSBwb2xpc2hlZCByZWxlYXNlIGFzIHdlIHNlZW4gdG9vIG1hbnkgQUFBIHRpdGxlcyBtaXNzIHRoZSBiYXIgZm9yIHJlYXNvbmFibGUgcG9saXNoIGxldmVscy4gS0gzIGJlaW5nIGEgZ3JlYXQgZXhhbXBsZSBmcm9tIFNxdWFyZSB0aGVtc2VsdmVzLkkgbm90IHN1cmUgaWYgaXQgY29tZXMgZG93biB0byB0aGVzZSBjb21wYW5pZXMgYmVpbmcgdG9vIGxhcmdlIHRvIHByb3Blcmx5IG1hbmFnZSwgb3IgbWVkZGxpbmcgZnJvbSBpbnZlc3RvcnMvZGlyZWN0b3JzLCBvciBqdXN0IHRoYXQgdGhlIGdhbWVzIHRoZW1zZWx2ZXMgYXJlIHN1Y2ggbW9udW1lbnRhbCB1bmRlcnRha2luZyB0aGF0IGl0IHRha2VzIGEgbmVhciBtaXJhY2xlIHRvIHB1bGwgdGhlbSBvZmYgc21vb3RobHkgZXRjLiAKSSBraWQsIG9mIGNvdXJzZS4gRGVudmVyIEludGVybmF0aW9uYWwgQWlycG9ydCBpcyBhbG1vc3QgY2VydGFpbmx5IGp1c3QgYSByZWd1bGFyIGFpcnBvcnQgd2l0aCBzb21lIGFkbWl0dGVkbHkgZXNvdGVyaWMgYXJ0aXN0aWMgY2hvaWNlcywgYW5kIGV2ZW4gaWYgaXQgZGlkIGhvbGQgc29tZSBzZWNyZXRzLCBpdCdzIHVubGlrZWx5IHRvIGJlIHRoZSBjcmVlcCB6b25lIGNvbnNwaXJhY3kgbnV0cyBlbmpveSBwYWludGluZyBpdCBhcy4gQnV0IHdoYXQgaWYgdGhleSB3ZXJlIHJpZ2h0PyBDYW4geW91IHRoaW5rIG9mIGEgYmV0dGVyIHBsYWNlIGZvciBhIHRydWx5IHNjYXJ5IGhvcnJvciBtb3ZpZSB0aGFuIERlbnZlciBJbnRlcm5hdGlvbmFsIEFpcnBvcnQ/IE9yLCBmb3IgdGhhdCBtYXR0ZXIsIGFueSBhaXJwb3J0PyBUaGV5J3JlIGJhc2ljYWxseSBtYXNzaXZlIGNhdHRsZSBjYXJyaWVycyBmb3IgcGVvcGxlLCBhbmQgYXMgc3VjaCBjb21lIHByZSBlcXVpcHBlZCB3aXRoIGEgaGVhcGluZyBoZWxwaW5nIG9mIHJvb3RsZXNzbmVzcyBhbmQgYW54aWV0eSwgYW5kIHRoYXQgdmVyeSBwZWN1bGlhciAic29tZXRoaW5nJ3Mgbm90IHJpZ2h0IiBmZWVsaW5nIHRoYXQgaXMgdGhlIGJhc2ljIGluZ3JlZGllbnQgb2YgYW55IGdvb2QgaG9ycm9yIGZsaWNrLgpGcmRyaWMgQ1VWSUxMSUVSLCBNbWVzIENsYXVkZSBEQVJDSUFVWCwgTWljaGxlIERFTEFVTkFZLCBNTS4gClRoYXQncyBqdXN0IG15IG9waW5pb24gdGhvLCBsb2wuT24gYW5vdGhlciBub3RlLCB3aXRoIHZlcnkgbG93IHNldHRpbmdzIG9uIGV2ZXJ5dGhpbmcgSSBzdGlsbCBnZXQgc2hpdCBGUFMgb24gYmxhY2tvdXQuIApJIGNvbXBsZXRlbHkgYWdyZWUgdGhhdCBiZWF1dGlmdWwgaXMgdG9vIHZhZ3VlIGEgdGVybSB0byB1c2UgaW4gdGhpcyBjb250ZXh0LiBNYXliZSB3aGF0IEkgbWVhbnQgdG8gc2F5IGlzIHNtb290aCBhbmQgZmxvd2luZy4gSSBlbmpveSBsYW5ndWFnZXMgdGhhdCBkb24gaGF2ZSBoYXJzaCBjb25zb25hbnRzIHRoYXQgYXJlIHRvbyBmYXIgYmFjayBpbiB0aGUgbW91dGguIEkgdGhpbmsgZ29vZCBleGFtcGxlcyBvZiB0aGVzZSBoYXJzaCBjb25zb25hbnRzIHdvdWxkIGJlIEFyYWJpYyBhbmQgR2VybWFuLiBJIG5vdCBzdXJlIGlmIHRyaWxscyB3b3VsZCBpbnRlcnJ1cHQgZmxvdyBjb21wYXJlZCB0byBubyB0cmlsbHMgYXQgYWxsIHRob3VnaC4gRnJlbmNoIGFuZCBJdGFsaWFuIGJvdGggc2hhcmUgdGhlIHF1YWxpdHkgdGhhdCwgdW5saWtlIEVuZ2xpc2gsIHRoZXkgZ2l2ZSBlYWNoIHN5bGxhYmxlIHRoZSBzYW1lIGxlbmd0aCBvZiBzb3VuZC4gTWF5YmUgdGhhdCB3b3VsZCBoZWxwIHdpdGggdGhlIGZsb3cgYXMgd2VsbC4gVGhlIG9ubHkgcHJvYmxlbSBJIGhhdmUgd2l0aCBJdGFsaWFuIGlzIHRoZSBvdmVydXNlIG9mIHRoZSBzYW1lIHZvd2VscyBpbiBuZWFybHkgZXZlcnkgc3lsbGFibGUuIE9uIGFub3RoZXIgbm90ZSBJIGFsc28gbG92ZSB0aGUgUmVjZWl2ZWQgUHJvbnVuY2lhdGlvbiBFbmdsaXNoIGFjY2VudCwgYW5kIEkgbm90IHN1cmUgaG93IEkgY291bGQgaW5jb3Jwb3JhdGUgdGhpcyBpbnRvIGl0LgpGb3IgZXhhbXBsZSwgeW91ciBzdHVkZW50IGNvdWxkIHdvcmsgdGhyb3VnaCB0aGUgcHJvYmxlbSAyMC80IHVzaW5nIDIwIHBva2VyIGNoaXBzLiAKQSBidWRkeSB0b2xkIG1lIGhlIHVzZWQgdG8gd29yayBvbiB0aGUgaGlnaHdheSwgZGFuZ2Vyb3VzIGpvYiwgYW5kIGV2ZXJ5ZGF5IHRoZXJlIHdvdWxkIGJlIG9uZSBhc3Nob2xlIHdobyB0aG91Z2h0IGl0IHdhcyBoaWxhcmlvdXMgdG8ga25vY2sgb3ZlciBhbGwgb2YgdGhlIHNhZmV0eSBjb25lcyBieSBvcGVuaW5nIGhpcyBkb29yLiBIZSBzYWlkIHRoaXMgd2FzIGEgZGFpbHkgb2NjdXJyZW5jZSBmb3IgYSB3aGlsZSB1bnRpbCBoaXMgYm9zcyBkZWNpZGVkIHRvIGNlbWVudCBhIG1ldGFsIHR1YmUgaW50byB0aGUgYXNwaGFsdCB0byBibGVuZCBpbiB3aXRoIHRoZSByZXN0IG9mIHRoZSBjb25lcy4gCkkgbG92ZSB0aGluZ3MgdGhhdCBhcmUgZmxhdHRlcmluZy4gSXQncyBhbGwgYWJvdXQgd2hhdGV2ZXIgSSBmZWVsIGNvbmZpZGVudCBpbiwgd2hldGhlciBpdCdzIGNvbG9yIG9yIHN0eWxlLiAKSSBmYWN0b3JlZCBpbiB0aGVpciBpbmV4cGVyaWVuY2Ugd2l0aCBlbGVjdHJvbmljcyBzaW5jZSB0aGV5J3JlIGEgZGlzYyBjb21wYW55IGFuZCBoYXZlIG5ldmVyIG1hZGUgZWxlY3Ryb25pY3MgYmVmb3JlLlNvIHlvdSB0aGluayBzb21lb25lIGFzIGEgaG9iYnkganVzdCBnYXZlIGl0IHRvIHRoZW0/IEkgY291bGQgYWJzb2x1dGVseSBtYWtlIHRoaXMgc3lzdGVtIG15c2VsZiBidXQgSSBzdXJlIGFzIGhlbGwgd291bGRuJ3QgZG8gaXQgZm9yIGZyZWUuSSB0aGluayB0aGUgZGF0YSBjb3VsZCBiZSB1c2VmdWwgaWYgdGhleSBoYWQgZW5vdWdoIG9mIGl0IGJ1dCBpIHRoaW5rIHRoZSBzb2Z0d2FyZSB0byBhbmFseXplIHRoZSBkYXRhIGFuZCBwcmVzZW50IGl0IGluIGEgdXNlIGZyaWVuZGx5IHdheSBpcyBhbHNvIG5vdCBjaGVhcC4gSSB0aGluayB5b3UncmUgbm90IGJlaW5nIHJlYWxpc3RpYyBpZiB5b3UgdGhpbmsgZXZlcnlvbmUgaXMgd29ya2luZyBmb3IgZnJlZS4gCkl0IHdpbGwgYmUgaGVsZCBhdCB0aGUgSW50ZXJDb250aW5lbnRhbCBIb3RlbCwgTmFpcm9iaSBvbiAyNSAyNnRoIFNlcHRlbWJlciwgd2hlcmUgdGhlIGFnZW5kYSB3aWxsIGZvY3VzIG9uIGhvdyB0byBjYXBpdGFsaXNlIGxvbmcgdGVybSBvbiB0aGUgb3Bwb3J0dW5pdGllcyBwcmVzZW50ZWQgYnkgQWZyaWNhIGFuZCBzdHJhdGVnaWVzIHRvIG92ZXJjb21lIHRoZSBjaGFsbGVuZ2VzLi4gCkxhX3N0cmFuaWVyYSAgMSBwb2ludCAgc3VibWl0dGVkIDEgZGF5IGFnbwpBcyBtdWNoIGFzIHdlJ2QgYWxsIGxvdmUgdG8gc2VlIFBhY3F1aWFvIGFuZCBNYXJxdWV6IGdvIGF0IGl0IGZvciBhIGZvdXJ0aCB0aW1lLCBhbmQgYXMgbXVjaCBhcyBBcnVtIHdvdWxkIGxvdmUgdG8gY29sbGVjdCByZXZlbnVlIGZyb20gYSBmaWdodCB0aGF0IHdvdWxkIHByb2JhYmx5IGdlbmVyYXRlIG92ZXIgMS41IG1pbGxpb24gUFBWLCBpdCBkb2Vzbid0IG1ha2Ugc2Vuc2UgdG8gc3RhZ2UgYW5vdGhlciByZSBydW4gb2YgdGhlIHByZXZpb3VzIHRocmVlIGZpZ2h0cyBiZXR3ZWVuIHRoZSB0d28gc3VwZXJzdGFycy4gSWYgUGFjcXVpYW8gYW5kIE1hcnF1ZXogZm91Z2h0IDEwMCB0aW1lcywgd2UnZCBnZXQgdGhlIGV4YWN0IHNhbWUgcmVzdWx0IGEgaHVuZHJlZCB0aW1lcyBvdXQgb2YgYSBodW5kcmVkLiBQbHVzIE1hcnF1ZXogaXMgdGhlIGNoYW1waW9uIGF0IDE0MCBsYnMsIGFuZCBjb25zaWRlcmluZyBQYWNxdWlhbyBoYXMgbm8gcGxhbnMgdG8gd2luIGEgYmVsdCBhdCBqdW5pb3Igd2VsdGVyd2VpZ2h0LCBpdCBiZWNvbWVzIGFwcGFyZW50IHRoYXQgUGFjcXVpYW8gd291bGQgaGF2ZSB2ZXJ5IGxpdHRsZSwgaWYgbm90IG5vdGhpbmcsIHRvIGZpZ2h0IGZvci4KWW91IGNhbiBzdGlsbCBiZSBhIGdvb2QgbW9tIGlmIHlvdSBoYXZlIHRvIGZ1bWJsZSBhIGJpdCB0byBmaWd1cmUgb3V0IHRoZSBhY3R1YWwgcHJvYmxlbS5JIGZlbHQgbGlrZSBhIHRvdGFsbHkgc2hpdCBNb20gZm9yIHRoZSBmaXJzdCBmZXcgbW9udGhzIG9mIG15IG9sZGVzdCBsaWZlIGJlY2F1c2UgSSBnZW51aW5lbHkgY291bGRuIGRpZmZlcmVudGlhdGUgYmV0d2VlbiB0aGUgY3J5aW5nLCBhbmQgYWxsIEkgZXZlciBoZWFyZCB3YXMgdGhhdCBNb21zIGNhbiBoZWFyIHRoZSBkaWZmZXJlbmNlIGluIHRoZSBiYWJ5IGNyaWVzLiBJIGRpZCBldmVudHVhbGx5IGhlYXIgdGhlIGRpZmZlcmVuY2UgaW4gdGhlIHZzIGNoYW5nZSBibGFua2V0IGNyeSwgYnV0IG5vdCB1bnRpbCB0aGV5IHdlcmUgb2xkZXIuIApJbiBBbWVyaWNhLCBsYXVuY2hpbmcgYSBjb21wYW55IGlzIHRoZSBxdWlja2VzdCB3YXkgdG8gd2VhbHRoLiAKVW5lIGVudHJlcHJpc2UgcHJvZ3Jlc3NpdmUgZGUgbG9uZ3VlIGhhbGVpbmUuIFZvdXMgcG91dmV6IGh0ZXIgbGVzIGNob3NlcyBlbiBpbmRpcXVhbnQgbGVzIHF1ZXN0aW9ucyB2b3VzIHRlbmFudCAgY3VyLkNlIHF1J2lsIGZhdXQgcmV0ZW5pckxlcyB0ZW5kYW5jZXMgYWN0dWVsbGVzIHNvbnQgZW4gZmF2ZXVyIGQndW5lIHJnaW1lIG8gbGVzIGh5ZHJhdGVzIGRlIGNhcmJvbmVzIChzdWNyZXMpIGRldnJhaWVudCBjb25zdGl0dWVyIGxhIHBhcnQgbGEgbW9pbnMgaW1wb3J0YW50ZSAocmdpbWUgcGFsbyB2b2lyIGN0b2duaXF1ZSBlbiBjYXMgZGUgY2FuY2VyIGV0IG91IGQnQWx6aGVpbWVyKS4gClRoZSBndXkgaXMgdGhlIGJlc3QgZXZlci4gSG93ZXZlciwgaGUgcmV0aXJlZCBlYXJseSBiZWNhc3VlIGhpcyBrbmVlIHdhcyBzaGF0dGVyZWQgaW4gdGhlIG9mZiBzZWFzb24uIElmIGhlIHdvdWxkIGhhdmUgc3RheWVkIHdpdGggdGhlIE9ha2xhbmQgUmFpZGVycywgaGUgd291bGQgaGF2ZSBmb3Igc3VyZSB3b24gYSBzdXBlcmJvd2wuIApJdCB3YXMgYXMgaWYgaGUgd2FzIHJlbGl2aW5nIHNvbWV0aGluZyB0cmF1bWF0aWMgaW4gaGlzIG1pbmQuIEl0IG1hZGUgbWUgc2FkIGJ1dCBhdCB0aGUgc2FtZSB0aW1lLCBpIGhhZCB0byByZW1pbmQgbXlzZWxmLCAiZG9udCBzdGFydCBub3RoaW4sIHdvbnQgYmUgbm90aGluLiIgTXkgYmlnZ2VzdCBhbm5veWFuY2Ugd2l0aCBrb2VhbnMsd2hlcmUgaSBoYXZlIGxpdmVkIGZvciBhbG1vc3QgMTAgeWVhcnMsIGlzIHRoYXQgdGhleSBibGFtZSBqYXBhbiBmb3IgYWxsIHRoZXNlIHRoaW5ncyB0aGF0IGhhcHBlbmVkLCBhbmQgdGFrZSAwIHJlc3BvbnNpYmlsaXR5IGZvciBhbnkgb2YgaXQuIApNZXRob2RzOiBOaW5lIG1lbiB3ZXJlIHBsYWNlZCBpbiBhIHNlbWlyZWNsaW5lZCBwb3NpdGlvbiBhbmQgbG93ZXJlZCBpbnRvIDhDIG9yIDIyQyB3YXRlciB0byB0aGUgaWxpYWMgY3Jlc3QgZm9yIHR3byA1IG1pbnV0ZSBwZXJpb2RzIGludGVyc3BlcnNlZCB3aXRoIDIgbWludXRlcyBvZiBub25pbW1lcnNpb24uIFJlY3RhbCBhbmQgdGhpZ2ggc2tpbiB0ZW1wZXJhdHVyZSwgZGVlcCBhbmQgc3VwZXJmaWNpYWwgbXVzY2xlIHRlbXBlcmF0dXJlLCBoZWFydCByYXRlLCBtZWFuIGFydGVyaWFsIHByZXNzdXJlLCB0aGlnaCBjdXRhbmVvdXMgYmxvb2QgdmVsb2NpdHkgKGxhc2VyIERvcHBsZXIpLCBhbmQgc3VwZXJmaWNpYWwgZmVtb3JhbCBhcnRlcnkgYmxvb2QgZmxvdyAoZHVwbGV4IHVsdHJhc291bmQpIHdlcmUgbWVhc3VyZWQgZHVyaW5nIGltbWVyc2lvbiBhbmQgZm9yIDMwIG1pbnV0ZXMgYWZ0ZXIgaW1tZXJzaW9uLiBJbmRpY2VzIG9mIHZhc2N1bGFyIGNvbmR1Y3RhbmNlIHdlcmUgY2FsY3VsYXRlZCAoZmx1eCBhbmQgYmxvb2QgZmxvdy9tZWFuIGFydGVyaWFsIHByZXNzdXJlKS4KVGhlIHZvdGUgdGhlbiB3ZW50IHRvIHRoZSBIb3VzZSwgd2hpY2ggdm90ZWQgMzUgdGltZXMgd2l0aG91dCBlaXRoZXIgY2FuZGlkYXRlIGdldHRpbmcgYSBtYWpvcml0eS4gRmluYWxseSwgSmVmZmVyc29uIHdvbiBhbmQgYmVjYW1lIHRoZSAzcmQgcHJlc2lkZW50IG9uIHRoZSAzNnRoIHZvdGUsIGFuZCBBYXJvbiBCdXJyIGJlY2FtZSB0aGUgdmljZSBwcmVzaWRlbnQuCkppbSB3b3JrZWQgaW4gYSB2YXJpZXR5IG9mIGRpZmZlcmVudCBjYXJlZXJzLCBpbmNsdWRpbmcgd29ya2luZyBhdCBIYXJkaW5nIENhcnBldHMsIEdyYWNlIENvbnRhaW5lcnMgYW5kIGluIFJlYWwgRXN0YXRlLiBIZSBjb250aW51ZXMgdG8gYmUgYWNrbm93bGVkZ2VkIHdpdGggZ3JhdGl0dWRlIGJ5IG1hbnkgZm9yIGhpcyBsaWZlIHdvcmsgYW5kIGNvbnRyaWJ1dGlvbnMgaW4gdGhlIGZpZWxkIG9mIHBhaW4gcmVsaWVmLiBKaW0gd2FzIGEgZ3JlYXQgZmFtaWx5IG1hbiwgd2hvIHNoYXJlZCB3aXRoIGludGVyZXN0IHRoZSBsaXZlcyBvZiBoaXMgY2hpbGRyZW4sIGdyYW5kY2hpbGRyZW4gYW5kIGdyZWF0IGdyYW5kY2hpbGQuIApNb25leSBJIGRvbiB0aGluayBpcyBhIGZhY3RvciBmb3IgTWFyaWEgU2hhcmFwb3ZhLCBoZSBzYWlkLiBBbGwgYWJvdXQgbm90IHNheWluZyBJIGNhbiBkbyBpdCBidXQgSSB3aWxsIGRvIGl0LiAKT2ggbm8gaXQncyBva2F5LCBJIGxvdmUganVzdCBzaGFyaW5nIGlkZWFzLCBpdCBkb2Vzbid0IGhhdmUgdG8gYmUgYW4gYXJndW1lbnQuIEkgYWN0dWFsbHkganVzdCB3cm90ZSBhIHBhcGVyIG9uIHRoaXMgdG9waWMgKHNvcnRhKSBzbyB0aGF0J3Mgd2h5IG15IHByZXZpb3VzIGNvbW1lbnQgY2FtZSBmcm9tLiBXaGF0IEkgd2FzIGdldHRpbmcgYXQgd2FzIHRoZSBjb21tZW50ZXIgYW5kIHRoZSBwb3N0IHNlZW0gdG8gYXNzdW1lIHRoYXQgaGF0ZSBhZ2FpbnN0IHdoaXRlcyBpcyBhIG5vbmlzc3VlLiAKSWYgdGhlaXIgdmljdGltIHdpc2hlcyB0byBmb3JnaXZlIHRoZW0sIHRoYXQncyB0aGVpciBvd24gcHJlcm9nYXRpdmUsIGFuZCBpZiB0aGVpciB2aWN0aW0gbmV2ZXIgd2FudHMgdG8gdGFsayB0byB0aGVtIGFnYWluLCB0aGV5IGhhdmUgZXZlcnkgcmlnaHQuIEEgaHVnZSBwYXJ0IG9mIHJlY292ZXJ5IGlzIGFkbWl0dGluZyB0aGF0IHlvdSwgYXMgYW4gYWRkaWN0LCBhcmUgY2FwYWJsZSBvZiByZWFsIGhhcm0sIGFuZCBjYW4gYmUgdmVyeSBkYW5nZXJvdXMgYXMgYSBmcmllbmQsIGZhbWlseSBtZW1iZXIsIFNPLCBvciBlbXBsb3llZS4gSSBjZXJ0YWlubHkga25vdyB0aGF0IG9mIG15c2VsZiBldmVuIHRob3VnaCBJJ3ZlIGJlZW4gY2xlYW4gZm9yIDUgeWVhcnMgYW5kIGhhdmUgbmV2ZXIgcmVsYXBzZWQuIApJbiBhIHdheSwgc29tZSBwZW9wbGUgbmV2ZXIgd2FudCB0byBiZSBpbiBwb3dlciBidXQgd2lsbCBhbHdheXMgZHJlYW0gb2YgaXQuIApUaGUgeW91bmcgaHlwb3RoeXJvaWQgd29tYW4gSSBjb25zdWx0ZWQgd2l0aCBoYWQgYmVlbiBvbiBUNCByZXBsYWNlbWVudCBmb3IgdGhyZWUgbW9udGhzLiBTaGUgaGFkIGJlZW4gdHJvdWJsZWQgd2l0aCBoeXBvdGh5cm9pZCBzeW1wdG9tcywgaW5jbHVkaW5nIGFpciBodW5nZXIsIGZvciBhIHllYXIgYmVmb3JlIGhlciBkb2N0b3IgZGlhZ25vc2VkIGhlciBoeXBvdGh5cm9pZGlzbS4gCklmIHlvdSB0aGluayB5b3UgZG9uIG5lZWQgcmVhbCBtZWRpY2luZSBmb3IgdGhlIGZsdSwgdGhlbiB5b3UgaGF2ZSBuZXZlciBoYWQgdGhlIGZsdS4gV2hlbiB5b3UgZ2V0IHRoZSBmbHUsIHlvdSBhcmUgbHlpbmcgaW4gYmVkLCBodXJ0aW5nIHNvIGJhZCB5b3UgY2FuIGJhcmVseSBtb3ZlLiBKdXN0IHRvIGdldCB0byB0aGUgYmF0aHJvb20gaXMgYWxsIHlvdSBjYW4gZG8uIApPbmUgb2YgTWVoYXMgZmlyc3QgYmlnIG1vdmVzIHdhcyBwYXJ0bmVyaW5nIHdpdGggYSBGcmVuY2ggbHV4dXJ5IGxhYmVsIHRvIHNlbGwgaGlnaCBlbmQgbGluZ2VyaWUgYXMgaXRzIG5ldyBsZWFkZXIgbG9va3MgdG8gZXhwYW5kIGJleW9uZCBkaXNjb3VudGVkIGJyYXMgYW5kIHVuZGVyd2Vhci4gVGhlIG1haW4gZm9jdXMgZm9yIE1laGFzIGFuZCBQSU5LIGNoaWVmIEFteSBIYXVrIHdpbGwgYmUgb24gY2xvc2VyIHRvIG91ciBjdXN0b21lcnMgYW5kIGltcHJvdmluZyBvdXIgbWVyY2hhbmRpc2UgYXNzb3J0bWVudHMsIHRoZSBjb21wYW55IHNhaWQsIG5vdGluZyB0aGF0IGl0IGV4cGVjdHMgdG8gc2VlIGltcHJvdmVtZW50IGFzIHRoZSB5ZWFyIHByb2dyZXNzZXMuCkluIG1vc3Qgb2YgdGhlIGNhc2VzLCBpdCBrZWVwcyB0aGUgcGxheWVyIGluIHRoZSB0aWdodCBhZ2dyZXNzaXZlIGNvcm5lciwgd2hpY2ggaXMgY29uc2lkZXJlZCB0aGUgYmVzdCwgbm8gbWF0dGVyIHdoYXQgZ2FtZSB5b3UgYXJlIHBsYXlpbmcuLiAKUGFydCBvZiB0aGUgYXBwZWFsIGlzIHRoYXQgdGhleSdyZSBhbiBhZmZvcmRhYmxlIGx1eHVyeS4gV2hpbGUgbWFza3Mgd2VyZSBvbmNlIGluZHVsZ2VudCBwcmVzdGlnZSBwcm9kdWN0cyB0aGF0IG9mdGVuIGNvc3QgbW9yZSB0aGFuICQ1MCwgR2FpdGhlciBleHBsYWluZWQgdGhhdCBzaGVldCBtYXNrcyBjYW4gcnVuIGZvciBhcyBsb3cgYXMgJDMgdG8gJDExLiBBbmQgTWludGVsJ3MgcmVwb3J0IGZvdW5kIHRoYXQgbW9yZSB0aGFuIGEgdGhpcmQgKDM5IHBlcmNlbnQpIG9mIHNraW4gY2FyZSB1c2VycyBhZ3JlZWQgdGhhdCBmYWNpYWwgbWFza3MgYXJlICJhIGdvb2Qgd2F5IHRvIHBhbXBlciB0aGVtc2VsdmVzLiIKV2lsbHl3b25rYTQyICAzIHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvCkl0IHdhcyByZWFsbHkgZGlzYXBwb2ludGluZyBiZWNhdXNlIHdlIHByb2JhYmx5IHdvdWxkIGhhdmUgZG9uZSBzb21ldGhpbmcgd2l0aCB0aGVtLiBUaGVyZSB3ZXJlIHNvbWUgdGhpbmdzIEkgZGlkbiBsaWtlIGluIHRoZSBzZW5zZSB0aGF0IHRoZXkgcmVhbGx5IGRpZG4gb3duIHRoZSBwcm9kdWN0LCBpdCBjYW1lIG91dCBvZiBGaW5sYW5kLiBUaGV5IHdlcmUgZ2l2ZW4gYSBsaWNlbnNlIHRvIHNlbGwgaXQgaGVyZS4gSSBjb3VsZG4gZ2V0IGFueSBpbmZvcm1hdGlvbiBhcm91bmQgaG93IGxvbmcgdGhlIGxpY2Vuc2UgaXMgb3IgaG93IG11Y2ggdm9sdW1lIHRoZXkgaGF2ZSB0byBkby4gCldlbGwsIG9uZSBvZiB0aGUgZGF1Z2h0ZXJzIGRlY2lkZWQgdG8gZmlndXJlIG91dCB3aGF0IHdhcyBnb2luZyBvbiBhbmQgc2hlIHNlbnQgdXAgdGhlIGVsZXZhdG9yLiBOb2JvZHkgd2FzIGluIGl0IHRvIHN0b3AgaXQsIGFuZCB5b3UgY2FuIHN0b3AgaXQgZnJvbSB0aGUgb3V0c2lkZS4gCkhlIGltcGxlbWVudGVkIGEgbG90IG9mIGxhd3MgYW5kIHJlZm9ybXMgd2hpY2ggZmF2b3VycyB0aGUgYW1lcmljYW4gcG9wdWxhdGlvbiBpbnRlcmVzdHMuIApOb3csIGFueW9uZSB3aG8ga25vd3MgbWUga25vd3MgdGhhdCB0aGVyZSBpcyBvbmUgdGhpbmcgaW4gdGhpcyB3b3JsZCB0aGF0IEkgbG92ZSBtb3JlIHRoYW4gYW55dGhpbmc6IEFzaWFuIG1hc3NhZ2UgcGFybG9ycy4gKEFuZCBTYXZhZ2UgR2FyZGVuLiAKRHVyaW5nIG15IHByZWduYW5jeSB3ZSBkaXNjdXNzZWQgdGhlIGhpZ2ggcG9zc2liaWxpdHkgb2YgcHBkLiBTbyBpbiB3YW50aW5nIHRvIHRha2UgY2FyZSBvZiBteXNlbGYgYW5kIG15IGJhYnkgbXkgaHVzYmFuZCBhbmQgaSBkZWNpZGVkIHRoYXQgaXQgd2FzIGJlc3QgdG8gZm9ybXVsYSBmZWVkLi4gCkknbSB2ZXJ5IG11Y2ggY29tbWl0dGVkIHRvIG1ha2luZyBteSByZW1haW5pbmcgdGltZSB3b3JrIGZvciBtZSwgYnV0IGl0J3Mgbm90IHN1cGVyIGRpZmZpY3VsdCBvciBvdXQgb2YgdGhlIHdheSB0byBwcmFjdGljZSB2ZWdldGFyaWFuaXNtLCBhbmQgZ2V0IENPTVJBVHMgdG8gc3VwcG9ydCB0aGF0LiBNeSBjb21tYW5kIGFuZCBsZWFkZXJzaGlwIHN1cHBvcnQgbWUsIGJ1dCB0aGUgcHJvYmxlbSBpcyB0aGUgcGFwZXJ3b3JrIGFuZCB0aGF0IHRoZXkgZG9uJ3QgaGF2ZSBhIEJ1ZGRoaXN0IGNoYXBsYWluIHRvICJpbnRlcnZpZXciIG1lLiBTbyBpdCdzIGEgYml0IG9mIGEgcm9hZCBibG9jay5CdXQgSSB3YXMgYWxzbyBjdXJpb3VzIG9uIChtb3JlIGV4cGVyaWVuY2VkKSBidXQgYWxzbyBnZW5lcmFsIHBlb3BsZSdzIHZpZXdzIG9mIHRoZSBzaXR1YXRpb24sIGZyb20gdGhlIG91dHNpZGUgbG9va2luZyBpbi5UaGFua3MgZm9yIHlvdXIgaGVscCBhbmQgZ29vZCBsdWNrIVllYWggYmFzaWNhbGx5IGV2ZXJ5b25lIGNvdmVyZWQgaXQ7IGNvc3QgZnJpZW5kbHk7ICQ1MCAobWF4KSBmb3IgYSBjdXAgKEkgZm9yZ2V0IGhvdyBvZnRlbiB5b3UgbmVlZCB0byBhIGJ1eSBuZXcgb25lLCBJJ3ZlIGhhZCBtaW5lIGZvciB5ZWFycykgdnMgJDEyIGEgbW9udGgvJDE0NCBhIHllYXIgKGZvcmdpdmUgbWUgaWYgdGhhdCdzIGhpZ2gsIGJ1dCBJIGhhdmVuJ3QgdXNlZCBwYWRzL3RhbXBvbnMgaW4geWVhcnMpLi4gCkkgbWVhbiwgcmVhbGx5LiBEZWFsIHdpdGggaXQgQUZURVIgaXQgY2F1c2VzIGRhbWFnZT8gUmVhbGx5PyBUaGVuIHRoYXQgcG9vciBvbGQgbWFuIGhhcyB0byB1c2UgdGhlIGxhc3Qgb2YgaGlzIHNhdmluZ3MgdG8gcGF5IGZvciBpdCwgd2hlbiB5b3UgY291bGQgaGF2ZSBzdG9wcGVkIGl0LiBZb3UgYSBtb25zdGVyCkdvcmRvbiB3aWxsIG1ha2UgJDEyIG1pbGxpb24gdGhpcyBzZWFzb24sICQxNiBtaWxsaW9uIG5leHQgYW5kICQyMCBtaWxsaW9uIGVhY2ggb2YgdGhlIGZvbGxvd2luZyB0d28geWVhcnMuIAoxNikgQUxBIFtmbGF4c2VlZCBvaWwsIGV0Yy5dLCBpbmZsdWVuY2VzIHZpc2lvbiwgYmVoYXZpb3IgYW5kIGJyYWluIHN0cnVjdHVyZSBhbmQgZnVuY3Rpb24uClNlY29uZCwgd2UgbXVzdCBjb252ZXJ0IHRoZSBlY29ub215IHRvIHBlYWNlZnVsIG1lYW5zLiBpbnRvIHBsb3VnaCBzaGFyZXMgYW5kIGFsbCB0aGF0LiBjb252ZXJzaW9uIGlzIE5PVCBhIHBpcGUgZHJlYW0uIGlzIGFuIGFic29sdXRlIG5lY2Vzc2l0eSBiZWNhdXNlIHdpdGhvdXQgaXQsIHdlIHdpbGwgYWx3YXlzIGJlIHdhc3Rpbmcgb3VyIHJlc291cmNlcyBvbiBnZXR0aW5nIHJlYWR5IGZvciB3YXJzIGFuZCB0aGVyZWZvcmUgdGhlcmUgd2lsbCBhbHdheXMgYmUgYSBuZWVkIHRvIGhhdmUgd2FyczMuIApIZXJlIGhvdyB0byBmaXggdGhhdFBoaWxpcCBDcm9zczogQ2FuYWRhJ3MgY2l2aWwgc2VydmljZSBoYXMgZm9yZ290dGVuIGl0IHN1cHBvc2VkIHRvIHNlcnZlIGV4YW1wbGUsIG9uZSBmYWJyaWMgc3RvcmUgb3duZXIgd2FzIGZvbGxvd2luZyBhIGdvdmVybm1lbnQgdGF4IGJ1bGxldGluIHByb3Blcmx5LCBvbmx5IHRvIGJlIHRvbGQgdGhlIGluc3RydWN0aW9ucyBpbiB0aGUgYnVsbGV0aW4gd2VyZSB3cm9uZy4gCkkgZG9uJ3QgdW5kZXJzdGFuZCB0aGUgU1dFUkYgdGhpbmcgdGhvdWdoLiAKRGVzaWduZXIgUHJvIGlzIHRoZSBzb2x1dGlvbiBmb3IgYWxsIHR5cGVzIG9mIGdyYXBoaWMgZGVzaWduIHdvcmssIHdoZXRoZXIgaXQncyB2ZWN0b3IgLiBYYXJhIERlc2lnbmVyIFBybydzIERpcmVjdCBBY3Rpb24gVG9vbHMgYWxsb3cgeW91IHRvIGNyZWF0ZSBlZmZlY3RzIHN1Y2ggYXMgLiB3b3VsZCBuZWVkIHRvIGVudGVyIHZhbHVlcyBpbiBhIGRpYWxvZyBib3ggYW5kIHRoZXkgYXJlIHRyYW5zZmVycmVkIHRvIHRoZSBkcmF3aW5nLiBEZXNpZ25lciBQcm8gYWxzbyBwcm92aWRlcyBhIG1vcmUgYWR2YW5jZWQgb3B0aW9uIGluICdtYWdpYycgbWFnbmV0aWMuIApXaXRoIHRoZSBleGFjdCBzYW1lIG1ldGhvZCwgdGhlIGNhc2lubyBvbmxpbmUgZ2FtZSBpcyB1c3VhbGx5IGF2YWlsYWJsZSBvdmVyIHRoZSBpbnRlcm5ldCBhbmQgc28gbWVuIGFuZCB3b21lbiB1dGlsaXplIHRoZW0gdG8gYXR0YWluIHJldmVudWUgdGhvdWdoIHBhcnRpY2lwYXRpbmcgaW4uIFRoaXMgb24gbGluZSBjYXNpbm8gbWF0Y2ggaXMgdXN1YWxseSBhbW9uZyB0aGUgb25saW5lIGdhbWVzIHdoaWNoIG1pZ2h0IGJlIGV4dHJlbWVseSBwZXJmb3JtZWQgZnJvbSB0aGUgY29uc3VtZXJzIHdobyBhZG9yZSB0byBlbmdhZ2UgaW4gdGhlIGdhbWJsaW5nLiAKIkdhZ2EiIGhhcyAzNCBzb25ncyBldmVyIHdyaXR0ZW4gaW5jbHVkaW5nIGZlYXR1cmluZyBMYWR5IEdhZ2Egc29uZ3Mgd2l0aCBvdGhlciBzaW5nZXJzLiAKUGVycnkgd2FzIHN1cnJvdW5kZWQgYnkgZmFtaWx5IGFuZCBmcmllbmRzIHdoZW4gaGUgZGllZCwgcHVibGljaXN0IEFybm9sZCBSb2JpbnNvbiBzYWlkLiBUaGUgYWN0b3IgaGFkIGJlZW4gaG9zcGl0YWxpemVkIHNpbmNlIGxhc3QgV2VkbmVzZGF5LCBhZnRlciBhIDkxMSBjYWxsIHN1bW1vbmVkIG1lZGljYWwgaGVscCB0byBoaXMgaG9tZSBpbiB0aGUgU2hlcm1hbiBPYWtzIHNlY3Rpb24gb2YgTG9zIEFuZ2VsZXMuClRob21hcyBTZWRyYW4sIHdobyBoZWFkcyBDaGV2cm9sZXQgb2YgRXVyb3BlLCBzYWlkIG92ZXIgNzAwIGVudGh1c2lhc3RzIGNhbWUgdG8gYW4gZXZlbiByZWNlbnRseSB0byBzZWUgdGhlIG5ldyBDb3J2ZXR0ZS4gU2VkcmFuIGhhcyBkcml2ZW4gdGhlIHZlaGljbGUgb24gbW9yZSBzZWRhdGUgcm9hZHMuIEJ1dCwgaGUgcHJlcGFyaW5nIHRvIHRha2UgYSBDb3J2ZXR0ZSBvbnRvIHBhcnRzIG9mIHRoZSBHZXJtYW4gQXV0b0JhaG4gdGhhdCBoYXZlIG5vIHNwZWVkIGxpbWl0cy4KVGhpcyBtYXkgaGF2ZSBzb21ldGhpbmcgdG8gZG8gd2l0aCB0aGUgZmFjdCB0aGF0IGdhdGhlcmluZyBzdWNoIGV2aWRlbmNlIGdlbmVyYWxseSBzZWVtcyB0byByZXF1aXJlIGVpdGhlciBzdXJnaWNhbCBzbGljaW5nIGFuZCBkaWNpbmcgb3IgbWVkaWNhbCBleHBlcmltZW50YXRpb24uIEFzIGh1bWFucyB0ZW5kIHRvIGJlIHNxdWVhbWlzaCBhYm91dCBzbGljaW5nIGFuZCBkaWNpbmcgYmFiaWVzLCBhcyB3ZWxsIGFzIGV4cGVyaW1lbnRpbmcgb24gdGhlbSwgd2Ugc3RpbGwgaGF2ZW4ndCBnb3QgdG8gdGhlIGJvdHRvbSBvZiB0aGlzIGlzc3VlLi4gCkkgbWFkZSB0aGF0IG15IE5ldyBZZWFycyByZXNvbHV0aW9uIGxpa2UgNSB5ZWFycyBhZ28uIE15IGFkdmljZSBpcyB0byBzdGFydCBzbWFsbC4gClNldmVuIENhcmQgU3R1ZCBoYXMgZml2ZSBiZXR0aW5nIHJvdW5kcyBpbnN0ZWFkIG9mIHRoZSBmb3VyIGZvdW5kIGluIEhvbGQnZW0gYW5kIE9tYWhhLiAKVGhpcyBtYWtlcyBoaXMgcmVtYXJrcyBsaW5raW5nIElTSSB0byB0aGUgQWZnaGFuIFRhbGliYW4ncyBIYXFxYW5pIG5ldHdvcmsgYXR0YWNrcyBvbiBvdXIgZm9yY2VzIHRoaXMgbW9udGggYWxsIHRoZSBtb3JlIHN0dW5uaW5nLiBNdWxsZW4gbGFiZWxlZCB0aGUgSGFxcWFuaSBUYWxpYmFuIGEgInZlcml0YWJsZSBhcm0iIGFuZCAicHJveHkiIG9mIHRoZSBJU0kuIEFmZ2hhbiBzb3VyY2VzIGhhdmUgc2FpZCB0aGUgVGFsaWJhbiBzdWljaWRlIHRlYW0gdGhhdCBhdHRhY2tlZCBvdXIgZW1iYXNzeSB3YXMgaW4gY29uc3RhbnQgY29udGFjdCBieSBjZWxsIHBob25lIHdpdGggdGhlaXIgbWFzdGVycyBiYWNrIGluIFBha2lzdGFuIGR1cmluZyB0aGUgZmlyZWZpZ2h0Li4gClRIRSBFU1BJT05BR0UgQVNTSUdOTUVOVCBBTkQgVEhFIFUgMiBBRkZBSVIKVGhlIGNvbGxlY3Rpb24gdHJhY2tzIHByb2dyZXNzIG9uIHRoZSBjb3JlIGhlYWx0aCBpc3N1ZXMgb2YgbWF0ZXJuYWwgYW5kIGNoaWxkIGhlYWx0aCwgaW5mZWN0aW91cyBkaXNlYXNlcywgYW5kIGFjY2VzcyB0byBoZWFsdGguIApIZSBtaWdodCByZWNvdW50IHRoZSBldmVudHMgb2YgdGhlIHBhc3QsIGJ1dCBoZSB3aWxsIGRvIGl0IGluIHN1Y2ggYSB3YXkgdGhhdCBpdCBjYXN0cyB0aGVtIGluIGEgZGlmZmVyZW50IGxpZ2h0LiBIZSB0aGUga2luZCBvZiBwZXJzb24gd2hvIGtlZXBzIGhpcyBwYWluIGluc2lkZSwgYmVjYXVzZSBoZSB3YW50cyB0byBwdXQgdXAgYSBzdHJvbmcgZnJvbnQsIGFuZCBiZSB0aGUgZ3V5IHRoYXQgZXZlcnlvbmUgZWxzZSBjYW4gbG9vayB0byBmb3Igc3RyZW5ndGguSGUgdGhlIG9wcG9zaXRlIG9mIHNvbWVvbmUgbGlrZSBIYW56bywgaW4gdGhhdCBIYW56byBleHRlcm5hbGlzZXMgaGlzIGVtb3Rpb25zIGFuZCB0ZWxscyBwZW9wbGUgZXhhY3RseSB3aGF0IGhlIGZlZWxpbmcgYSBsb3Qgb2YgdGhlIHRpbWUgKCJJIGdyb3cgdGlyZWQgb2Ygd2FpdGluZy4iLCAiTXkgYnJvdGhlciBpcyBkZWFkLiBJIGtpbGxlZCBoaW0gd2l0aCBteSBvd24gaGFuZHMuIiwgIlRoaXMgdGltZSwgSSB3aWxsIG5vdCBmYWlsLiIpLCB3aGVyZWFzIFJlaW5oYXJkdCB3aWxsIGFsd2F5cyBwdXQgdXAgdGhhdCBib2lzdGVyb3VzLCBicmF2ZSBmcm9udCB3aGVuZXZlciBoZSBjYW4sIGV2ZW4gd2hlbiBoZSBtaWdodCBiZSBmZWVsaW5nIGRpZmZlcmVudGx5IGhpbXNlbGYgKCJBaCwgbXkgZnJpZW5kcywgd2hhdCdzIHdpdGggYWxsIHRoaXMgc3RhbmRpbmcgYXJvdW5kPyBUaGVyZSBnbG9yeSB0byBiZSB3b24hIiwgIlRoaXMgaXMgdGhlIGhvbWUgdG93biBvZiBteSBtYXN0ZXIsIEJhbGRlcmljaC4gClRoZSBkZW50aXN0IGlzIGRvaW5nIGl0IHRvIGxvb2sgb3V0IGZvciB5b3VyIGJlc3QgaW50ZXJlc3QuIApBZnRlciB0aGF0IHNoZSBzdGFydGVkIGZhZGluZyBhd2F5LiAKUG9saWNlIGFycmVzdGVkIExpc2EgTWFyaWUgQnJvd24sIDMwLCBvZiAyODYgVy4gClNoZSB3YXMgYSByZWFsIHBlcnNvbiB0byBtZS4gCkkgaGFkIGxvdHMgb2YgcGh5c2ljYWwgcGFpbiBidXQgZXZlbiBhdCB0aGF0IHRpbWUgSSBrZXB0IHJlbWluZGluZyBteXNlbGYgdGhhdCBJIGhhdmUgYSBjaG9pY2UuIFlvdSBjYW4gZWl0aGVyIGNvbXBhcmUgeW91ciBjdXJyZW50IHN0YXRlIHdpdGggeW91ciBkZXNpcmVkIHN0YXRlLCBwb25kZXIgdGhlIGRpZmZlcmVuY2UgYW5kIHN1ZmZlciBvciBzdG9wIGZvY3VzaW5nIG9uIHdoYXQgeW91IGRvbnQgaGF2ZSBvciB3YW50IGFuZCBiZSBncmF0ZWZ1bCBvZiB3aGF0IHlvdSBoYXZlLi4gClRoZSBiYXIgZXZlbiB0aWx0cyB0byB0aGUgbGVmdCB3aGVuIHlvdSBkbyB0aGlzLiAKVGhlcmUgaXMgbGl0dGxlIG5lZWQgZm9yIGFwcGxpY2F0aW9uIG9mIGl0cyBvcmlnaW5hbCBtZWFuaW5nIGluIHRvZGF5J3Mgc29jaWV0eS4uIApDZXJ0ZXMgbWFpcyBxdWFuZCBvbiBhIGRhbnMgc2EgYmFucXVlIGRlIHJlY2V0dGVzIHF1ZWxxdWVzIGNsYXNzaXF1ZXMgZGUgYmFzZSwgdGVsIGxlIGd0ZWF1IGF1IHlhb3VydCwgb24gcGV1dCBsZXMgZGNsaW5lciAgbCdpbnR1aXRpb24uIApJIGZlbHQgZ29vZCBiZWNhdXNlIEkgc2luY2VyZWx5IHRob3VnaHQgSSBzYXcgZ3Jvd3RoIGFmdGVyIHByYWN0aWNpbmcgYW5kIGhpdHRpbmcgdXAgbXkgbG9jYWwgbXVsdGlwbGUgdGltZXMuIEkgbG9va2VkIHVwIGZyYW1lIGRhdGEgYW5kIHBva2VkIHdpdGggbG93IGZyYW1lIG1vdmVzIGFuZCBmaW5kIHdoZW4gdG8gdXNlIG1vcmUgdW5zYWZlIG1vdmVzLiAKU2Vjb25kIGluc3RhbmNlIGhhcyBwcm9ibGVtcyBvbiBib3RoIHNpZGVzLiBZb3Ugc2hhdCBvbiB0aGUgbmF0aW9uYWwgdGVhbSwgc29tZSBpZ25vcmFudCBoaWNrIHRvb2sgaXQgcGVyc29uYWxseSBiZWNhdXNlIHlvdSBub3QgYSBjb21wYXRyaW90LCBoZSBzd29yZSBhbmQgeW91IHN3b3JlIGJhY2sgKEkgbGl0ZXJhbGx5IGtub3cgcGVvcGxlIHRoYXQgZGllZCBiZWNhdXNlIHRoZXkgY2FsbGVkIHNvbWVvbmUgIm9yb3NwdSBjb2N1Z3UiLCBpdCBub3Qgc29tZXRoaW5nIHlvdSB0YWtlIGxpZ2h0bHkpIHRoaW5ncyBnb3Qgb3V0IG9mIGhhbmQuIEhlIGlzIGxpa2VseSB0byBiZWF0IHlvdSB1cCB0aG91Z2gsIEkga25vdyBJIHdvdWxkIGlmIHNvbWVvbmUgICBlc3BlY2lhbGx5IHJlbGF0aXZlICAgY2FsbGVkIG1lICJzb24gb2YgYSB3aG9yZSIuLiAKVVBEQVRFOiBJIHRhbGtlZCB3aXRoIFJvYmVydCBNY0xhcnR5IG9mIHRoZSBNYXJraGFtIEdyb3VwLCBhIHBvbGl0aWNhbCBjb25zdWx0aW5nIGZpcm0uIApJIHVzZSB0aGlubmVyIG1hdGVyaWFscyBmb3IgdGhlIGludGVybmFsIGxpbmluZ3MgKGl0IGdvdCBhIGJpdCBidWxreSBhdCBjZXJ0YWluIHBvaW50cykgU2ltaWxhcmx5LCBJIHdvdWxkIG1ha2UgZWFjaCBwb2NrZXQgbGluaW5nIHdpdGggdHdvIGluZGl2aWR1YWwgcGllY2VzLCBidXQgcmF0aGVyIEkgaGF2ZSB0aGVtIHNpZGVzIE1heWJlIHB1dCBpbiBzb21lIGtpbmQgb2YgdW5vYnRydXNpdmUgZ3Vzc2V0IGJ1dCBjb25zaWRlcmluZyB0aGlzIGlzIGEgcHJldHR5IGJhc2ljIEVEQyBiYWcsIEkgZG9uIHNlZSBtdWNoIG5lZWQgZm9yIGl0LiBMZXNzb25zIExlYXJuZWQ6LiAKSXQgc2hvd3MgYWxsIHRoZSBwbGF5ZXJzIGhhbmRzLiAKWW91IGNhbiBsb29rIGF0IGl0IGhlcmUgTW9HZ2xlIHlvdXIgbWluZCBpbiB0aGUgQ2hpbmVzZSBOZXcgWWVhciBhbGJ1bSBpZiB5b3UncmUgY3VyaW91cyBhYm91dCBob3cgSSBwaWN0dXJlIHknYWxsLiAKQWZ0ZXIgbm90aW5nIHRoYXQgaGVyIHNpbmdpbmcgdm9pY2Ugc291bmRlZCBsaWtlIGhlciBoZXJvLCBRdWVlbidzIEZyZWRkaWUgTWVyY3VyeSwgRnVzYXJpIG5hbWVkIGhlciBMYWR5IEdhZ2EgZm9yIHRoZSBRdWVlbiBoaXQgIlJhZGlvIEdhIEdhLiIuV2hpbGUgaGVyIHByb3ZvY2F0aXZlIGJ1cmxlc3F1ZSBwb3AgYWN0IExhZHkgR2FnYSBhbmQgdGhlIFN0YXJsaWdodCBSZXZ1ZSB3YXMgYSBoaXQgaW4gTWFuaGF0dGFuJ3MgZG93bnRvd24gbmlnaHRjbHVicywgbWFpbnN0cmVhbSBzaG93YnVzaW5lc3Mgd2FzIG5vbnBsdXNzZWQuIFdoZW4gc2hlIHNob3dlZCB1cCBmb3IgYXVkaXRpb25zIHdpdGggbGFiZWxzIGFuZCBtdXNpY2FscywgdGhlIHVzdWFsIHJlYWN0aW9uIHdhcyB1dHRlciBiZXdpbGRlcm1lbnQuIkEgbG90IG9mIHJlY29yZCBsYWJlbHMgdGhvdWdodCBJIHdhcyB0b28gdGhlYXRyaWNhbCwiIHNoZSBzYWlkLiAKTm8gdGlwIHBpZ2d5YmFja2luZyEgRG8gbm90IG1ha2UgdGlwcyBpbiByZWFjdGlvbiB0byBvdGhlciBwb3N0cyBvbiB0aGlzIHN1YnJlZGRpdC4KVGhlIG90aGVyIGhhbmQsIFRDTSBmYXZvcnMgYSBob2xpc3RpYyBhcHByb2FjaCwgdmlld3MgdGhlIHVuaXZlcnNlIGFuZCBib2R5IHBoaWxvc29waGljYWxseSBhbmQgZGV2ZWxvcHMgaW5kdWN0aXZlIHRvb2xzIGFuZCBtZXRob2RzIHRvIGd1aWRlIHJlc3RvcmluZyB0aGUgdG90YWwgYmFsYW5jZSBvZiB0aGUgYm9keS4gSW4gQ2hpbmVzZSBtZWRpY2luZSwgdGhleSBhZGQsIGNvcnJlY3QgYmFsYW5jZSBiZXR3ZWVuIFlpbiBhbmQgWWFuZyBtYWtlIHVwIHRoZSB2aXRhbCBlbmVyZ3ksIGFuIGVzc2VudGlhbCBsaWZlIHN1c3RhaW5pbmcgc3Vic3RhbmNlIG9mIHdoaWNoIGFsbCB0aGluZ3MgYXJlIG1hZGUuIFRyYWRpdGlvbmFsIHJlbWVkaWVzIGluY2x1ZGUgaGVyYmFsIG1lZGljaW5lcywgYWN1cHVuY3R1cmUsIG1hc3NhZ2UgYW5kIG1veGlidXN0aW9uLCBhbiBoZXJiYWwgaGVhdCB0aGVyYXB5LiBIZXJiYWwgbWVkaWNpbmVzIGFjY291bnQgZm9yIGFib3V0IDkwJSBvZiB0aGUgQ2hpbmVzZSBkcnVnIG1hcmtldCwgYWNjb3JkaW5nIHRvIHRoZSBwYXBlci4gSW4gQ2hpbmEsIGRydWcgbGFiZWxzIGFyZSBsZWdhbGx5IHJlcXVpcmVkIHRvIGluY2x1ZGUgYWxsIGluZ3JlZGllbnRzLCB3aGV0aGVyIHdoYXQgaW5zaWRlIHRoZSBib3R0bGUgaXMgYSBwaGFybWFjZXV0aWNhbCBwcm9kdWN0IG9yIGFuIGFnZSBvbGQgcmVtZWR5LgpZZXQgdGhlcmUgaXMgbm8gZGV0ZXJtaW5lZCBtYXJnaW4gb2YgcGh5c2ljYWwgYWN0aXZpdHkgdGhhdCBjYW4gY2F0ZWdvcmljYWxseSBzZXBhcmF0ZSBhIHNwb3J0IGZyb20gYSBnYW1lLiAKTm93IGl0IGEgYmxpc3MganVzdCB0byBwbGF5IDEgMiB0dXJibyBnYW1lcyBhIGRheSB3aXRob3V0IGZlZWxpbmcgc28gZXhoYXVzdGVkLiBUaGUgb25seSB0b3VybmFtZW50IGkgd291bGQgZXZlciBoYXZlIHRpbWUgKG9yIHJlYWxseSB0cnkgdG8gZ2V0IHRpbWUpIHRvIHdhdGNoIGlzIFRJLiBUaGlzIHllYXIgaSBoYXJkbHkgZXZlbiBoYXZlIHRpbWUgdG8gd2F0Y2ggZnVsbCBsYXN0IGRheSBvZiBUSS4KU2hpdmFicmVha3N0aGV3b3JsZCB1CkkgcmVhbGx5IG9ubHkgIndoaXRlIGtuaWdodCIgZm9yIHJlY3JlYXRpb25hbCBwbGF5ZXJzIG9yIGZyaWVuZHMgYXQgdGhlIHRhYmxlIGJlY2F1c2UgSSBkb24gbGlrZSBnZXR0aW5nIGludm9sdmVkIGluIG90aGVyIHBlb3BsZSBidXNpbmVzcyBhbmQgSSBhbHNvIGJlbGlldmUgaXQgdXAgdG8gcGxheWVycyB0byBsZWFybiB0byBzdGljayB1cCBmb3IgdGhlbXNlbHZlcywgYnV0IEkgZG8gc3BlYWsgdXAgYW5kIEkgaG9wZSBvdGhlcnMgc3BlYWsgdXAgd2hlbiBleHRyZW1lbHkgZ2VuZGVyIHRhcmdldGVkIGFuZCBzZXhpc3Qgc3R1ZmYgZ2V0cyB0aHJvd24gYXJvdW5kIGV2ZW4gdnMgZmVtYWxlIHJlZ3MuCk1vcmUgcXVlc3Rpb25zIGFyZSBjb21pbmcgYWJvdXQgSVNJLiBUaGUgYXNzYXNzaW5hdGlvbiBsYXN0IFR1ZXNkYXkgb2YgZm9ybWVyIEFmZ2hhbiBwcmVzaWRlbnQgUmFiYmFuaSwgd2hvIHdhcyBsZWFkaW5nIEFmZ2hhbmlzdGFuJ3MgZWZmb3J0IHRvIGRldmVsb3AgYSBwZWFjZSBhbmQgcmVjb25jaWxpYXRpb24gcHJvY2VzcyB3aXRoIHRoZSBUYWxpYmFuLCBkZWFsdCBhIGxpdGVyYWwgZGVhdGhibG93IHRvIGFueSBob3BlIG9mIGEgcGVhY2Ugc2V0dGxlbWVudCBiZXR3ZWVuIE5hdG8sIHRoZSBLYXJ6YWkgZ292ZXJubWVudCwgYW5kIHRoZSBUYWxpYmFuIGluc3VyZ2VuY3kuCk9uZSBvZiB0aG9zZSBzdHJhbmdlIGl0J3MgYSBzbWFsbCB3b3JsZCcgY29pbmNpZGVuY2VzIGhhcHBlbmVkIGFnYWluIHRvZGF5LiBJIHNhdCBkb3duIGluIHRoZSBTdXBlciBTYXQuIApBIHRlYW0gb2Ygc3VpdCBzcGVjaWFsaXN0cyB3aWxsIHNwcmluZyBpbnRvIGFjdGlvbiBhcyB3ZSBkb24gZGlhcGVycywgbG9uZyBqb2hucyB3aXRoIGJsYWNrIHNvY2tzIChpdCBhIGZhc2hpb24gc3RhdGVtZW50KSwgYW5kIHNsaXAgaW50byBvdXIgU29raG9sIHByZXNzdXJlIHN1aXRzLiBXZSBhY3R1YWxseSBjbGltYiBpbiB0aHJvdWdoIHRoZSBmcm9udCBhbmQgcG9rZSBhcm1zLCBsZWdzIGFuZCBoZWFkIHVwIGludG8gdGhlaXIgbWF0Y2hpbmcgaG9sZXMsIGxpa2UgYSB0dXJ0bGUgb3V0IG9mIGhpcyBzaGVsbC4gCk9yIG1heWJlIGl0cyBhdHRlbnRpb24gc2Vla2luZz8gSWRrIGJ1dCBJIGFsc28gZmluZCBpdCByZWFsbHksIHJlYWxseSBzdHJhbmdlLiBJdCBqdXN0IGVudGlyZWx5IHRvbyBtdWNoIGZvY3VzIG9uIHRoZSBwcmV2aW91cyBsb3NzLkxhc3RTdG9wV2lsbG91Z2hieSAgOSBwb2ludHMgIHN1Ym1pdHRlZCA1IGhvdXJzIGFnb0kgdGhpbmsgc29tZSBvZiBpdCBpcyB0aGlzLCBhbmQgYWxzbywgQ2F0ZSdzIG9ubHkgdGhpbmcgaXMgYmVpbmcgYSBtb3RoZXIuIApJIGNvdWxkIGtlZXAgdGhlIGRlY29yYXRpb25zIHVwIHRocm91Z2hvdXQgdGhlIHllYXIgSSB3b3VsZCEgcmVhbGx5IHdhc24gam9raW5nLCBzYXlzIGhlciBodXNiYW5kIE1pa2UsIHRoZSBuZXcgY28gaG9zdCBvZiBDQkMgVmFuY291dmVyIE5ld3MuIFdvdWxkIGJlIHNvIGhhcHB5IGlmIHNoZSBjb3VsZCBrZWVwIGl0IGxpa2UgdGhpcyAxMiBtb250aHMgb2YgdGhlIHllYXIuIFNoZSByZWFsbHkgbG92ZXMgQ2hyaXN0bWFzLiAKSW4gYSBjb21tdW5pdHkgZnVsbCBvZiBvcGluaW9ucyBhbmQgcHJlZmVyZW5jZXMsIHBlb3BsZSBhbHdheXMgZGlzYWdyZWUuIApBbiB1bmxpY2Vuc2VkIG1hc3NldXIgaW4gQ29ubmVjdGljdXQgc2V4dWFsbHkgYXNzYXVsdGVkIGEgd29tYW4gYWZ0ZXIgYXNraW5nIGhlciBpZiBzaGUgaGFkIGEgYm95ZnJpZW5kIGFuZCBzdWdnZXN0aW5nIHRoYXQgc2hlIHJlbW92ZSBoZXIgdW5kZXJ3ZWFyLCBhIGxhd3N1aXQgY2xhaW1zLgpJdCdzIG5vdyB0aGUgdHlwZSBvZiBwbGFjZSB5b3UnZCBicmluZyBhIGRhdGUsIGZyaWVuZHMgb3IgZmFtaWx5IG9uIGEgc3BlY2lhbCBvY2Nhc2lvbiBvciBhIHBvc3NlIG9mIGx1bmNoaW5nIGxhZGllcywgdGhvdWdoIHRoZXkgZG8gYWxzbyBzZXJ2ZSBkaW5uZXIuIFNlbGYgY29uZmlkZW50IG1lbiB1bmFmcmFpZCB0byBlYXQgcXVpY2hlIG9yLCBpbiB0aGlzIGNhc2UsIGNyZXBlcyB3b3VsZCBmaW5kIHBsZW50eSB0byBsaWtlIGhlcmUsIHRvby5PbmUgbG9vayBhdCBvdXIgZmlyc3Qgbm9uIGNyZXBlIHNlbGVjdGlvbiBmcm9tIHRoZSBsdW5jaCBtZW51LCB0aGUgUGF3bGV5J3MgQkxULCBhbmQgd2Uga25ldyBDcmVwZXMgYSBsYSBDYXJ0ZSBoYWQgY29tZSBhIGxvbmcgd2F5IGZyb20gaXRzIGNyZXBlIHNoYWNrIHJvb3RzLiBBIGNydXN0eSBiYXRvbiBvZiBGcmVuY2ggYmFndWV0dGUgaXMgc2xhdGhlcmVkIHdpdGggY3JlYW15IHBpbWllbnRvIGNoZWVzZSBvbiBib3RoIHNpZGVzIG9mIHRoZSBicmVhZCwgdGhlbiB0b3BwZWQgd2l0aCBjcmlzcCBhcHBsZXdvb2Qgc21va2VkIGJhY29uIGFuZCBzbGljZWQsIGZyaWVkIGdyZWVuIHRvbWF0by4gCkRhdmlkc29uIGFza2VkIGZvciAkMTc1LDAwMCBmb3IgYSAyMCUgZXF1aXR5IHN0YWtlIHZhbHVpbmcgdGhlIGNvbXBhbnkgYXQgJDg3NSwwMDAuIApUaGV5IHJlYWxseSBzdXBwb3J0ZWQgdXMgYWdhaW5zdCB0aGUgbW92ZSBzbyBJIGRvIHJlc3BlY3QgdGhlaXIgb3JnYW5pemF0aW9uIGZvciB0aGF0Li4gCkFzayBhcm91bmQgYW5kIHlvdSBtYXkgbGFuZCBhIGdyZWF0IGRlYWwgb24gYSBzZXQgb2Ygb2xkIGNhc2lubyBwb2tlciBjaGlwcyEgQmV0dGVyIHlldCwgeW91IG1heSBlbmQgdXAgd2l0aCBzb21lIGZyZWUgb25lcyEuIApJIHJlbWVtYmVyIHdha2luZyB1cCBhbmQgZmVlbGluZyBndWlsdHkuIExpa2UgY291bGQgSSBmYWxsIGFzbGVlcCBpbiBhIG1vbWVudCBsaWtlIHRoaXM/IHNoZSBjb250aW51ZXMuIEkgcmVhbGl6ZWQgdGhhdCBub25lIG9mIHRoaXMgd2FzIGEgZHJlYW0uIHdhcywgaW4gZmFjdCwgaGVyIHdvcnN0IG5pZ2h0bWFyZS4gMjcsIDIwMDQgcmVhZGVycyBvZiBUaGUgUHJvdmluY2UgYXdva2UgdG8gYSBjaGlsbGluZyBoZWFkbGluZTogQXQgbGVhc3QgMTIsMDAwIGRlYWQgZnJvbSB3YXZlcy4gT25lIG1pbGxpb24gaG9tZWxlc3MgYWZ0ZXIgOS4wIG1hZ25pdHVkZSBxdWFrZSBpbiBzZWEgc3Bhd25zIHdhdmVzLgpEbyBhbGwgbmV3cyBDb3JwIGVtcGxveWVlcyBpbiBhbGwgdGhlaXIgdmFyaWVkIHJvbGVzIGJlbGlldmUgZXhhY3RseSB3aGF0IHRoZSBlZGl0b3IgYW5kIGhpZ2hlciByYW5rcyBzZXQgdGhlIGFnZW5kYSBmb3I/IE9mIGNvdXJzZSBmdWNraW5nIG5vdC4gCkhvbWVuZXdzSGVhZGxpbmVzRXRoaW9waWFuIEFpcmxpbmVzIGZsaWdodCBib3VuZCBmb3IgTmFpcm9iaSBjcmFzaGVzOyBhbGwgMTU3IG9uIGJvYXJkIGtpbGxlZEFzdHJvIEJvYjogSG9sZCB5b3VyIGhvcnNlcywgT3Jpb24gICB0aGUgRFNUIHBvbGljZSBhcmUgaGVyZUZvciB0aG9zZSB3aXRoIGluY29tZSBqdXN0IG1vcmUgdGhhbiB0aGUgY3V0b2ZmLCBoZWFsdGhjYXJlIGNsaWZmIGxvb21zVXBkYXRlOiBMZXNzIHNub3cgZXhwZWN0ZWQgd2l0aCBsYXRlIHdpbnRlciBzdG9ybVJlZ2VudHMgcXVlc3Rpb24gcmVuYW1pbmcgVW5pdmVyc2l0eSBvZiBNaW5uZXNvdGEgYnVpbGRpbmdzYnVzaW5lc3NIZWFkbGluZXNSYWlsIHRvIFR3aW4gQ2l0aWVzIGludHJpZ3VlcyBBbXRyYWtNaW5uZXNvdGEgbWVkaWNhbCBtYXJpanVhbmEgRkFRcyBiZWxpZXZlIHRoaXMgaXMgdGhlIGJlc3QgbWVkaWNhdGlvbiBmb3IgaGltIERlc3BpdGUgdGhlIHN0aWdtYSwgcGFyZW50cyBhZHZvY2F0ZSBmb3IgY2hpbGRyZW4gbWVkaWNhbCBtYXJpanVhbmEgdXNlTWlubmVzb3RhIG1lZGljYWwgbWFyaWp1YW5hIHByb2dyYW0gaGFzIG9uZSBtYWpvciBmbGF3OiBJdCB0b28gZXhwZW5zaXZlSG93IGFuIG9ubGluZSBzcGFjZSBmb3Igc3RyZXNzZWQgb3V0IHlvdW5nIHdvbWVuIHR1cm5lZCBpbnRvIGEgYnVzaW5lc3NzcG9ydHNIZWFkbGluZXNGbG9yaWRhIGZpc2hpbmcgZnJlbnp5OiBHcm91cCdzIEd1bGYgZ3JvdXBlciBnYXRoZXJpbmcgZ29lcyBncmVhdENPTExFR0UgSE9DS0VZIFJPVU5EVVA6IE1hdmVyaWNrcywgR29waGVycyBhZHZhbmNlIGluIGNvbmZlcmVuY2UgcGxheW9mZnNFZGluYSBiZXN0cyBFZGVuIFByYWlyaWUgaW4gT1QgaW4gdGhyaWxsaW5nIENsYXNzIEFBIHRpdGxlIGdhbWVHb3BoZXJzIHdyZXN0bGVyIFN0ZXZlc29uIG9uZSB3aW4gZnJvbSBCaWcgVGVuIHRpdGxlVG93bnMgZHJvcHMgNDAgaW4gVGltYmVyd29sdmVzIE9UIHdpbiBvdmVyIFdpemFyZHNtaWxlc3RvbmVzSGVhZGxpbmVzUm9nZXIgYW5kIFNoaXJsZXkgRGF2aXNKb2huIGFuZCBSb2JlcnRhIENocmlzdGlhbnNlbkxlbyBKYWNrc29uIFdlZW1zUmljaGFyZCBhbmQgRG9yb3RoeSBLbnVkc2VuQWx2aW4gYW5kIEVsdmkgU2FyYWxhbXBpb3BpbmlvbkhlYWRsaW5lc0NhcnRvb25pc3QgVmlldzogR2V0dGluZyB0aGluZ3MgZG9uZUNhcnRvb25pc3QgVmlldzogSGF0cyBpbiB0aGUgcmluZ05hdGlvbmFsIFZpZXc6IEFsbCBjYW5kaWRhdGVzICAgbWVuIGFuZCB3b21lbiAgIG91Z2h0IHRvIHN0cml2ZSB0byBiZSBsaWthYmxlTmF0aW9uYWwgVmlldzogU3VjaCBtZWFzdXJpbmcgb2YgY2FwYWJsZSB3b21lbiBjYW5kaWRhdGVzIGlzIHNleGlzdCwgaGFzIHRvIHN0b3BDYXJ0b29uaXN0IFZpZXc6IFdoaWNoIGlzIG1vcmUgb2ZmZW5zaXZlP0xBS0UgRUxNTywgTWlubi4gICBMYWtlIEVsbW8gaGFzIGJlZW4gYSBwbGF5ZXIgaW4gYSBiaWxsaW9uIGRvbGxhciBnYW1lIG9mIHBvbGx1dGlvbiBwb2tlci4uIApEYW5zIGxhIHBlbnNlIHRob3NvcGhpcXVlLCB0b3V0IHRyZSBhIGxhIGZhY3VsdCBkZSB2aWJyZXIsIGNldHRlIHZpYnJhdGlvbiBwb3V2YW50IHRyZSByZXVlIGV0IGVucmVnaXN0cmUgZGFucyBsZXMgYW5uYWxlcyBha2FzaGlxdWVzLiBBbm5pZSBCZXNhbnQgZmFpdCwgZW4gMTkwNywgdW4gcGFyYWxsbGUgYXZlYyBsYSB0bGdyYXBoaWUgc2FucyBmaWwsIGRlIG5vcyBqb3VycyBub3VzIGZlcmlvbnMgcGx1dHQgbGEgY29tcGFyYWlzb24gYXZlYyBsZXMgZW5yZWdpc3RyZW1lbnRzIHN1ciB1biBkaXNxdWUgZHVyIGQgT24gcG91cnJhaXQgYXZvaXIgYWNjcyAgY2VzIGFyY2hpdmVzIGVuIHRhdCBkZSB0cmFuc2Ugb3Ugc291cyBoeXBub3NlLiAKR29sZGVuY2hlc3QgIDUgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnbwpTbywgb2YgY291cnNlIGl0IGJlIGltcG9zc2libGUgdG8gY2l0ZSBpbnN0YW5jZXMgd2hlcmUgaGF0ZSB3YXMgYmFzZWQgb24gc2tpbiBjb2xvci4gClRoaXMgY29ybmVyIHVuaXQgaGFzIGEgbm9ydGggc291dGh3ZXN0IGFzcGVjdCwgYWlyIGNvbmRpdGlvbmluZywgYSBidWlsdCBpbiB2YWN1dW0gYW5kIHJlbm92YXRpb25zIHRoYXQgd2VyZSBjYXJyaWVkIG91dCBsYXN0IHllYXIgdGhhdCBpbmNsdWRlIG5ldyBmbG9vcmluZywgZGVzaWduZXIgYmF0aHJvb21zIGFuZCBhIG1vZGVybiBraXRjaGVuIHdpdGggd2hpdGUgdXBwZXIgYW5kIGJhc2UgY2FiaW5ldHMgYW5kIHByZW1pdW0gYXBwbGlhbmNlcy4gVGhlIGxpdmluZyByb29tIGhhcyBhIGZpcmVwbGFjZSwgYSBiYXkgd2luZG93IHdpdGggdHJlZWQgdmlld3MsIGFuZCBhY2Nlc3MgdG8gYSBkZWNrLCB3aGlsZSBhbGwgdGhyZWUgYmVkcm9vbXMgYXJlIHVwc3RhaXJzLiAKVGhlIGdhbWUgYm9hcmQgaXMgYW5vdGhlciBkaWZmZXJlbmNlIGJldHdlZW4gYmluZ28gYW5kIFBvIEtlIE5vLiBJbiBiaW5nbywgdGhlIHdvcmQgJ2JpbmdvJyBpcyBzcGVsbGVkIG91dCBhY3Jvc3MgdGhlIHRvcCBvZiB0aGUgYm9hcmQgd2l0aCBmaXZlIHJvd3MgYW5kIGZpdmUgY29sdW1ucyBvZiBudW1iZXJzIHVuZGVyIHRoZSBzcGVsbGVkIG91dCB3b3JkLiAKUmFuZGFsbCBKdXJyZW5zIHZpc2l0ZWQgdGhlIGhvc3BpdGFsIGluIG9yZGVyIHRvIGFycmFpZ24gQm9iYWluLi4gCkVuIDIwMDQsIGRlcyBjaGVyY2hldXJzIGRlIGwnVW5pdmVyc2l0IE1jR2lsbCwgTW9zaGUgU3p5ZiBldCBNaWNoYWVsIE1lYW5leSwgb250IGZhaXQgdW5lIGV4cHJpZW5jZSB0b3V0ZSBzaW1wbGUgc3VyIGRlcyByYXRzIGRlIGxhYm9yYXRvaXJlLiBJbHMgb250IG9ic2VydiBjZSBxdWkgc2UgcGFzc2FpdCBjaGV6IGRlIHBldGl0cyByYXRzIHF1aSB0YWllbnQgYWJvbmRhbW1lbnQgbGNocyBwYXIgbGV1ciBtcmUsIGMnZXN0ICBkaXJlLCBzaSBvbiBwcmVuZCBsZSBwb2ludCBkZSB2dWUgZHUgcm9uZ2V1ciwgcmVjZXZhbnQgYmVhdWNvdXAgZGUgc29pbnMgZGUgbGV1ciBtYW1hbi4gRXQgY2UgcXVpIHNlIHBhc3NhaXQgY2hleiBkZXMgcmF0cyBwZXUgbGNocyBwYXIgbGV1ciBtcmUuLiAKQW55IGhlbHAgd2lsbCBiZSBncmVhdGx5IGFwcHJlY2lhdGVkLiBJIHRoaW5rIEkgZ290IHRoaXMgZnJvbSBEYW5ueSBKb2huc29uIGEgd2hpbGUgYWdvLgpKdWFuZGVwYXJlamEgIDc3IHBvaW50cyAgc3VibWl0dGVkIDEgeWVhciBhZ28KVGhpcyBnYW1lIHByb3ZpZGVkIGVhY2ggcGxheWVyIHdpdGggMyB0byA0IGNhcmRzLCBjYXJkIHZhbHVlcywgYW5kIHRoZSBhYmlsaXR5IHRvIGJldCBhbmQgYmx1ZmYgdG8gY29tcGxldGUgZWFjaCBoYW5kLiBUaGUgRnJlbmNoIGdhbWUgIlBvcnF1ZSIgYW5kIHRoZSBHZXJtYW4gZ2FtZSAiUG9jaGVuIiB3aGVyZSBib3RoIGNyZWF0ZWQgZnJvbSBQcmltZXJvIG1vZGlmaWNhdGlvbnMuIApZZXMgaW5kZWVkLCBpdCBhbGwgZ29pbmcgYWNjb3JkaW5nIHRvIHBsYW4uIApJIHdpc2ggSSBjb3VsZCBmaW5kIGEgY29weSBvbiBZb3V0dWJlIHRvIHNoYXJlLCBpdCB3YXMgSmFudWFyeSAyNSwgMjAwNywgYXBwYXJlbnRseS4uIApPbmNlIHdlIGhhdmUgdGhhdCwgdGhlIHdvcmxkIHdpbGwgc2VlIHVzIHRocm91Z2ggZGlmZmVyZW50IGV5ZXMgZGVzcGl0ZSBvdXIgdHJvdWJsZXMuLiAKV2Uga25vdywgdW5lcXVpdm9jYWxseSwgdGhhdCBwYXNzaW5nIGlzIG1vcmUgZWZmaWNpZW50IHRoYW4gcnVubmluZy4gCkVzcGZ1c2lvbiAgNCBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpXZW5uIGRlciBWZXJtaWV0ZXIgc3R1ciBibGVpYnQgdW5kIG5pY2h0IG1pdCBzaWNoIHJlZGVuIGxhc3NlbiB3aWxsIGdpYnQgZXMgbGVpZGVyIG51ciBkZW4gR2FuZyB6dW0gQW53YWx0LiBCZWkgbWlldHJlY2h0bGljaGVuIHNhY2hlbiBnaWJ0IGVzIGVpbmUgTWVuZ2UgTWdsaWNoa2VpdGVuIHdpZSBNaWV0ZXJzY2h1dHpibmRlIGRpZSBrb3N0ZW5sb3NlIEJlcmF0dW5nIGFuYmlldGVuIHVuZCBhdWNoIEFud2x0ZSBlbXBmZWhsZW4ga25uZW4uCkFsc28gYXMgZmFyIGFzIHdlYXBvbiBjb21iaW5hdGlvbnMgSSBmZWVsIGxpa2UgbGFzZXIgcGx1cyBtaXNzaWxlIGNvbWJvIGlzIGEgd2FzdGUuIApNYXR0IGFkZGVkIHRocmVlIHBpZWNlcyBvZiBhZHZpY2UgaGUgd291bGQgZ2l2ZSB0byBvdGhlciBwYXJlbnRzIHdpdGggcHJlbWF0dXJlIGJhYmllcy4KSXQgaGFkIGEgdGhlbWUgb3IgdG9uZSB3ZWxsIGVzdGFibGlzaGVkIGluIGl0cyBnYW1lcGxheS4gCkkgd2FzIGNvb2wgd2l0aCB0aGVzZSBndXlzICh3ZSB3ZW50IHRvIGVsZW1lbnRhcnkgc2Nob29sIHRvZ2V0aGVyKSBhbmQgdGhlIG5ld3MgbGVnaXRpbWF0ZWx5IHNob29rIG1lLiAKRmFsbG91dCAzIHdpbGwgYmUgZXh0cmVtZWx5IGJldHRlciB0aGVuIGZhYmxlIDIsIGZhYmxlIDIgaXMgYSByZWd1cmdpdGF0ZWQgZmFibGUgMSB3aXRoIGVidHRlciBncmFwaGljcy4gRmFsbG91dCAzIGlzIGEgd2hvbGUgbmV3IHdvcmxkIHdob3NlIG1haW4gc3RvcnkgaGFzIG1vcmUgaG91cnMgb2YgZ2FtZXBsYXkgdGhlbiBhbGwgdGhlIG1pc3Npb25zIGNvbWJpbmVkIGluIGZhYmxlIDIsIGFzIHdlbGwgYXMgYSBtb3JlIGltbWVyc2l2ZSwgYXdlc29tZXIgd29ybGQgd2VsbC4gQWxsIGZhbGxvdXQgMyBpcyB0byBtZSBpcyBvYmxpdmlvbiByZW1hZGUgd2l0aCBiZXR0ZXIgZ3JhcGhpY3MsIGFuZCBndW5zLiAKQXQgdGhlIGVuZCBvZiB0aGlzIHBvc3QgeW91J2xsIGZpbmQgYSBsaW5rIHRvIGEgTmV3IFlvcmsgVGltZXMgYXJ0aWNsZSBvbiBUcmVhZG1pbGwgZGVza3MuIEhlcmUncyBhbm90aGVyIGF3ZXNvbWUgaWRlYSEgSWYgcGVvcGxlIGNhbiB3b3JrIG9uIHRoZWlyIGNvbXB1dGVycyB3aGlsZSBvbiBhIHRyZWFkbWlsbCB0aGluayB0aGV5IGNhbiB3b3JrIGF0IGEgc3RhbmQgdXAgd29yayBzdGF0aW9uLiBNYWtlcyBzZW5zZSwgcmlnaHQuCkE6IFNvbWV0aW1lcyBJIHdvdWxkIGxvb2sgYXJvdW5kIGFuZCBzYXksICJ3aGF0IGFtIEkgZG9pbmcgaGVyZT8gVGhpcyBpcyB0aGUgZHVtYmVzdCB0aGluZyBJJ3ZlIGV2ZXJ5IGRvbmUuIiBCdXQgYXQgdGhlIGVuZCBvZiB0aGUgZGF5LCBJJ2QgbG9vayBiYWNrIG9uIGl0IGFuZCBzYXksICJZb3Uga25vdyB3aGF0LCBJIG1hZGUgaXQgdGhyb3VnaCwgbm8gbWF0dGVyIGhvdyB0b3VnaCBpdCB3YXMuIEFuZCBub3cgSSBoYXZlIGEgcHJldHR5IGNvb2wgc3RvcnkgdG8gdGVsbC4iLiAKSW5jcmVhc2luZ2x5LCB0aGUgcmVhbGl0eSBvZiBBZmdoYW5pc3RhbiBpcyBzaW5raW5nIGludG8gYW4gaW5jcmVhc2luZ2x5IHNvYmVyIE9iYW1hIGFkbWluaXN0cmF0aW9uIGFuZCBVUyBBcm15LiBUYWxpYmFuIGlzIG5vdCBnb2luZyB0byBiZSBkZXN0cm95ZWQuIEl0IHdpbGwgYmUgYWNjZXB0ZWQgYXMgcGFydCBvZiB0aGUgbWVzcyB0aGUgVVMgd2lsbCBsZWF2ZSBiZWhpbmQgaW4gQWZnaGFuaXN0YW4uIAozMCBoZXJvZXMgc29vbiwgZ290dGEgdGhpbmsgaG93IGVhY2ggaGVybyBhbmQgZWFjaCBhYmlsaXR5IGludGVyYWN0cyB3aXRoIGV2ZXJ5IG90aGVyIGhlcm8sIGJvdGggYXMgYW4gYWxseSBhbmQgYW4gZW5lbXkuIApEdXJpbmcgdGhlIGRheSwgQmVsbGV3IGFkdmlzZXMgYmVpbmcgc3RpbGwsIHNjYW5uaW5nIHlvdXIgYm9keSwgYW5kIHJlZ3VsYXJseSByZW1pbmRpbmcgeW91cnNlbGYsICJJIGFtIHNhZmUgYW5kIHByb3RlY3RlZC4iCkxlZXRjb2RlIHdpbGwgaGVscCB3aXRoIHRoZSBpbnRlcnZpZXcgcHJvY2VzcyBhbmQgc2hvdWxkIGJlIHVzZWQgYXMgaW50ZXJ2aWV3IHByZXAuIFRoZSBkZWdyZWUgd2lsbCBpbmNyZWFzZSB5b3VyIGZ1bmRhbWVudGFsIGtub3dsZWRnZSB3aGlsZSBsZWV0Y29kZSBpcyBtb3JlIGFib3V0IGxlYXJuaW5nIHRvIGlkZW50aWZ5IHBhdHRlcm5zLiBTdXJlIExTQVQgcHJlcCBoZWxwcyB5b3UgZG8gYmV0dGVyIGJ1dCBpZiB5b3UgZG9uIGtub3cgdGhlIGZ1bmRhbWVudGFscyB0aGVuIHRyeWluZyB0byBtZW1vcml6ZSBwcm9ibGVtcyBpcyBub3QgZWZmZWN0aXZlLiAKVGhlIFNpdGthIENoYW1iZXIgb3QgQ29tbWVyY2UgbWV0IFRodXJzZGF5IG5vb24gYXQgdGhlIFNpdGtuIElubiBmb3IgYSBkaW5uZXIgbWVldGluZy4gVGhleSBkZWNpZGVkIHRvIHdlbGNvbWUgdGhlIGxlZ2lzbGF0dXJlIDpuIGFwcHJvcHJpYXRlIHN0eWxlIGFuZCBQcmVzaWRlbnQgVGVkIEtldHRsZXNvbiBhcHBvaW50ZWQgTWF5b3IgVGhvbWFzIFRpbHNvbiwgTGVzbGllIFlhdywgTy4gCk1pZ2h0eU1lZXJrYXQ5NyB1CktlZXAgaW4gbWluZCBlbnRyYW5jZSBmZWVzIHNob3VsZCBiZSBrZXB0IGFzIGxvdyBhcyBwb3NzaWJsZSwgY2hhcmdlIHRvbyBtdWNoIGFuZCB0aGUgdHVybiBvdXQgd2lsbCBiZSBwb29yLiAKTXkgcG9zdCBBbmFsIFNleCBmcm9tIGEgRmVtYWxlIFBlcnNwZWN0aXZlIGRlc2NyaWJlcyB3aGF0IGFuYWwgc2V4IGZlZWwgbGlrZSBmb3IgYSB3b21hbi4uIApTZXQgYmluZHMgdG8gaG93ZXZlciB5b3UgcHJlZmVyIHRoZW0KVGhlcmUgaXMgYnV0IEkgZG9uJ3QgcmVtZW1iZXIuIApCcmVhc3RmZWVkaW5nIHlvdXIgb3duIG1pbGsgdG8geW91ciBvd24ga2lkIGlzIGxpa2UgdWJlcnZlZ2FuISEhISBCYWJpZXMgbmVlZCBpdCwgaXQgY29udGFpbnMgY2Fsb3JpZXMgYW5kIHN1Z2FycyBhbmQgZmF0cy4gVGhpbmdzIGEgYmFieSBORUVEcyB0byB0aHJpdmUuCiJXZSBzaGFyZSBhIGNvbW1vbiBnb2FsLCB0byBzdXBwb3J0IG1lbWJlcnMgb2YgUGFybGlhbWVudCB3aXRoIHZhbHVlcyBzdWNoIGFzIGltcGFydGlhbGl0eSBhbmQgZXhjZWxsZW5jZSwiIHNheXMgU3VzYW4gS3VsYmEsIHNlbmlvciBkaXJlY3RvciwgUmVhbCBQcm9wZXJ0eSBhbmQgRXhlY3V0aXZlIEFyY2hpdGVjdC4gIldlJ3JlIHZlcnkgcHJvdWQgdG8gd29yayBoZXJlICAgaXQncyBhIGN1bHR1cmUgd2hlcmUgcGVvcGxlIGZlZWwgdGhleSdyZSBzZXJ2aW5nIGEgZ3JlYXRlciBwdXJwb3NlLiBUaGF0IHVuaXRlcyB1cyBhbmQgZm9zdGVycyB1bmlxdWUgcmVsYXRpb25zaGlwcy4iLiAKSWYgeW91IGNhbiBjaGFuZ2UgeW91cnNlbGYgeW91IGNhbiBjaGFuZ2UgdGhlIHdvcmxkLkFuZCBsYXN0bHksIGFuZCB0aGlzIGlzIHRoZSBzdW1tYXJ5IG9mIGl0IGFsbCBmb3IgZXZlcnlvbmUuIApLd2FtZSBLaWxwYXRyaWNrIFNlbnRlbmNlZCBUbyAyOCBZZWFycwpUYWtlIGl0IGFzIGEgbGVzc29uIHRvIGxlYXJuLCBtYWtlIHlvdXIgaW50ZW50aW9ucyB1cCBmcm9udCB3aXRoIGFueSBuZXcgcGFydG5lciBhbmQgc2F5IHlvdSB3b24ndCBjaGFuZ2UsIGlmIHRoZXkga2VlcCBwcmVzc3VyaW5nIHlvdSBsZWF2ZS4gWW91IGJvdGggZGVzZXJ2ZSB0byBiZSBoYXBweSwgZG9uJ3QgeW91IHRoaW5rPy4gCldoaWxlIHRoYXQgdHdpdHRlciBhY2NvdW50IHlvdSBsaW5rZWQgc2VlbXMgdG8gaW1wbHkgaW4gYW5vdGhlciB0d2VldCB0aGF0IHRoZXJlIHdhcyBzb21lIGlzc3VlIHdpdGggbWlzc2luZyBtZWV0aW5ncywgaXQgc2FpZCBpbiB0aGUgc2FtZSB0d2VldCB0aGF0IGl0J3MgYSBzeW1wdG9tIG9mIGEgbGFyZ2VyIHByb2JsZW0gd2l0aCBoaW0uLiAKQSBmZWxsb3cgcHJpc29uZXIgYW5kIGlkZW50aWNhbCBpbiBldmVyeSB3YXkgdG8gYSBodW1hbiB3b21hbiwgc2hlIGlzIHRoZSBKZW1hZGF2IChwcmluY2VzcykgYW5kIGRhdWdodGVyIG9mIHRoZSBKZW1hZGFyIChraW5nKSBvZiB0aGUgaGlkZGVuIFUgR2EgY2l0eSBvZiBMYXl0aGUuIFNoZSBoYWQgYmVlbiBjYXB0dXJlZCBhZnRlciBzaGUgaGFkIGJlZW4gYmxvd24gb2ZmIGNvdXJzZSBieSBhIHNldmVyZSBzdG9ybSB3aGlsZSB3ZWFyaW5nIGEgaGVsaXVtIGZpbGxlZCBiYWNrcGFjayB0aGF0IGFsbG93ZWQgaGVyIHRvIGZseS4uIApDbG91ZCBTdGF0ZSBsZWFkcyBhdCBOQ0FBIERpdmlzaW9uIElJIFdyZXN0bGluZyBDaGFtcGlvbnNoaXBzIE5vdHJlIERhbWUgQ29sbGVnZSBmb3VydGgsIFN0LiBDbG91ZCBTdGF0ZSBsZWFkcyBhdCBOQ0FBIERpdmlzaW9uIElJIFdyZXN0bGluZyBDaGFtcGlvbnNoaXBzIE5vdHJlIERhbWUgQ29sbGVnZSBjbGljaGVkIGZpdmUgQWxsIEFtZXJpY2FucyBoZWFkaW5nIGludG8gU2F0dXJkYXkncyBzZW1pZmluYWxzIGF0IENsZXZlbGFuZCBTdGF0ZSdzIFdvbHN0ZWluIENlbnRlci4KRXZlbnR1YWxseSBpdCBnb3QgYSBiaXQgd29yc2UgYW5kIHRoZW4ganVzdCBraW5kIG9mIHN0YXllZCB0aGF0IHdheS4gSSBmZWVsIGxpa2UgdGhlcmUgaXNuJ3QgcXVpdGUgZW5vdWdoIG94eWdlbiBpbiB0aGUgcm9vbSBzb21ldGltZXMsIGJ1dCBpZiBJIGp1c3QgdGFrZSBpbiB0d28gb3IgdGhyZWUgZGVlcCBicmVhdGhzIEkgY2FsbSBhbmQgZmVlbCBvayBhZ2Fpbi4gCk9uZSBsYXN0IHRoaW5nIHRvIG5vdGUgaW4gdGhpcyBoYW5kIGlzIHRoYXQgaGlzIG9wcG9uZW50IHNpemVkIFBPVCBvbiB0aGUgZmxvcCBmb3IgaGlzIGNvbnRpbnVhdGlvbiBiZXQgc2l6aW5nLiBMb2dpY2FsbHksIGdvaW5nIGEgZnVsbCBwb3Qgc2l6aW5nIGRvZXNuIG1ha2Ugc2Vuc2Ugd2l0aCBhIHNldCBvZiBBQSBvciBhIHNldCBvZiBKSiBhcyB0aGUgYm9hcmQgaXMgcmFpbmJvdyBhbmQgdGhlcmUgcmVhbGx5IGlzIG5vIGFwcGFyZW50IGRyYXdzLiBZb3UgY2FuIHRlbGwgY2hhcmxpZSBub3RpY2VzIHRoaXMgYXMgd2hlbiBoaXMgb3Bwb25lbnQgYmV0cywgaGlzIGltbWVkaWF0ZSByZWFjdGlvbiBpcyBhIGNvbmZ1c2VkIGFuZCB2ZXJiYWwgIlBPVCE/Ii4gSWYgaGUgaXMgaG9sZGluZyBBSyBpbiB0aGlzIHNpdHVhdGlvbiBhbmQgZmFjaW5nIGEgcG90IGJldCwgaGUgc2hvdWxkIGZlZWwgbXVjaCBiZXR0ZXIgYWJvdXQgaGlzIHNwb3QgaGVyZS4KTGV0J3Mgc2F5IHlvdSB3YW50IHRvIGVzdGltYXRlIGZlYXR1cmVzIGluIGhvdXJzLCBzbyBhIGZlYXR1cmUgdGhhdCBoYXMgYW4gZXN0aW1hdGUgb2YgNCB3aWxsIHRha2UgNCBob3VycyB0byBjb21wbGV0ZSwgYnkgb25lIHBlcnNvbiwgc28geW91IGFzc2lnbiBzdWNoIGFuIGVzdGltYXRlIHRvIGFsbCB0aGUgZmVhdHVyZXMuIFlvdSB0aHVzIGNvbnNpZGVyIHRoYXQgZmVhdHVyZSwgb3IgaXRzICJzdG9yeSIsIHdvcnRoIDQgcG9pbnRzIHdoZW4gaXQgY29tZXMgdG8gY29tcGV0aW5nIGZvciByZXNvdXJjZXMuClRoZSBzdXNwaWNpb24sIGJhc2VkIG9uIGluaXRpYWwgcmVwb3J0cywgaXMgdGhhdCBhdCBsZWFzdCBvbmUgb2YgdGhlIHJpZmxlcyB1c2VkIHdhcyBhbHRlcmVkIHRvIGZ1bmN0aW9uIGFzIGFuIGF1dG9tYXRpYyB3ZWFwb24sIHRoZSBvZmZpY2lhbCBzYWlkLiBBbW9uZyB0aGUgd2VhcG9ucyBmb3VuZCB3ZXJlIGEgLjIyMyBjYWxpYmVyIGFuZCBhIC4zMDggY2FsaWJlci4KSGUgbGlrZWQgcGxheWluZyBjYXJkcywgYW5kIG9uZSBvZiB0aGUgZ2FtZXMgaGUgcGxheWVkIHRoZSBkYXkgb2YgdGhlIHJldmVsYXRpb24gd2FzIGNob2ljZS4gVGhlIGRlYWxlciBjaG9zZSBibGFja2phY2ssIGFuZCBCYWxkd2luIHF1aWNrbHkgbGVhcm5lZCB0aGUgcnVsZXMuIApIb3cgeW91IGRlZmluZSB5b3VyIEJSTSBpcyB1cCB0byB5b3UuIEkgc2hvdCB0b29rIGF0IDI1IGJ1eSBpbnMgdGhyb3VnaCAyMDBOTCBhbmQgbW92ZWQgZG93biBhdCAyMC4gCkxpbmNlY3VtLCBhIEN5IFlvdW5nIGluIGhpcyBmdXR1cmU/IFRpbSBMaW5jZWN1bSAoMTEgMywgMi43MSBFUkEpIGlzIGEgQ3kgWW91bmcgY2FuZGlkYXRlIHRoaXMgeWVhciwgYnV0IHRoZSBidWxscGVuIGlzIG5vdCBoZWxwaW5nIGhpcyBjYXVzZSwgYmxvd2luZyBsZWFkcyBpbiBoaXMgbGFzdCB0d28gc3RhcnRzLiBJbiB0aG9zZSBzdGFydHMsIGhlIHRocm93biAxNCBpbm5pbmdzLCBnaXZlbiB1cCBqdXN0IHRocmVlIHJ1bnMgYW5kIHN0cnVjayBvdXQgMjQgYmF0dGVycyBhbmQgaGF2ZSBub3RoaW5nIHRvIHNob3cgZm9yIGl0LiBMaW5jZWN1bSBjb3VsZCBoYXZlIDEzIHRvIDE1IHdpbnMgYnkgbm93ICAgbWF5YmUgbW9yZSBpZiB0aGUgR2lhbnRzIG9mZmVuc2UgcHJvZHVjZWQgbW9yZSBydW5zIG9yIGlmIHRoZSBidWxscGVuIGRpZCBpdHMgam9iIGluIGEgaGFuZGZ1bCBvZiBoaXMgc3RhcnRzLiBBcml6b25hIEJyYW5kb24gV2ViYiBpcyAxNSA0IHdpdGggYSAzLjA0IEVSQSwgd2hpbGUgdGhlIFJlZHMgRWRpbnNvbiBWb2xxdWV6IGlzIDEzIDQgd2l0aCBhIDIuNzEgRVJBLiBBbmQgaWYgeW91IGRpZG4geW91IGF0IGxlYXN0IHRob3VnaHQgYWJvdXQgaXQuIFdpdGggYW4gZWFybHkgZm91ciBydW4gZGVmaWNpdCwgaXQganVzdCBzZWVtZWQgaG9wZWxlc3Mgd2l0aCB0aGlzIHllYXIgdW5pbnNwaXJpbmcgR2lhbnRzIGxpbmV1cCwgYW5kIHN1cmUgZW5vdWdoLCB0aGUgdGVhbSB3YXMgc2h1dG91dCBmb3IgdGhlIHNlY29uZCBnYW1lIGluIGEgcm93LiBJIGN1cmlvdXM6IFdpdGggdGhlIEdpYW50cyBvbiBpdHMgd2F5IHRvIGl0cyBmb3VydGggc3RyYWlnaHQgbG9zaW5nIHNlYXNvbiwgd2hhdCBrZWVwcyB5b3Ugd2F0Y2hpbmc/IE9yIHJhdGhlciwgd2hhdCB3aWxsIGtlZXAgeW91IHdhdGNoaW5nIHRocm91Z2ggdGhlIGVuZCBvZiB0aGUgc2Vhc29uPwpQb2tlciBpcyBhIGhvYmJ5LiBZb3UgcGxheSBwb2tlci4gRG9pbmcgdHJpY2tzIHdpdGggYSB5byB5byBpcyBhIGhvYmJ5LiAKSWYgdGhlIGNvcmRlZSBpcyBzdGlsbCBhbGl2ZSwgdGhlbiB5b3VyIHJlbGF0aW9uc2hpcCBjYW4gaW1wcm92ZSBhcyBhIHJlc3VsdC4gCklmIHlvdSdyZSBnb2luZyB0byBSRUFMTFkgbG9vayBhdCB0aGluZ3MsIHlvdSBuZWVkIHRvIGRvIHNvIGZyb20gYSBwb3NpdGlvbiBvZiBmYWN0cyBhbmQgbG9naWMsIG5vdCBmZWVsaW5ncy4KVGhlIGZhYnJpYyB5b3UgY2hvb3NlIGZvciB5b3VyIGRyYXBlcmllcyB0byB0aWUgdGhlIHdob2xlIHJvb20gdG9nZXRoZXIsIHNheXMgZGVzaWduZXIgU2FuZHJhIEh1cnRsZXkuIEZhY3RvcnMgdG8gY29uc2lkZXIgd2hlbiBjaG9vc2luZyB0aGUgZmFicmljIGFyZSB0aGUgY29sb3VyIGFuZCBzdHlsZSBvZiB5b3VyIGxpZ2h0aW5nIGZpeHR1cmVzLCB0aGUgY29sb3VyIG9mIHBhaW50IG9uIHRoZSB3YWxscyBhbmQgYW55IGZpbmlzaGluZyBvciB0cmltIGNvbG91cnMuIEh1cnRsZXkgaXMgcGFydGlhbCB0byB1c2luZyB2YWxhbmNlcywgdG9vLCBhbmQgcGFydGljdWxhcmx5IGxpa2VzIHRoZW0gb24ga2l0Y2hlbiB3aW5kb3dzLiBhZGQgc28gbXVjaCwgZ2l2aW5nIGEgY2xlYW4sIHNvZnQgbG9vayB0aGF0IGhhcyB0aGUgcG93ZXIgdG8gdHJhbnNmb3JtIHlvdXIgc3BhY2UuCkl0J3Mgbm90IHN1cnByaXNpbmcgdGhhdCBhIGdvb2QgbnVtYmVyIG9mIHRoZSBKTk1JTHMgaGF2ZSBzZXJpb3VzIHdlaWdodCBwcm9ibGVtcyBmcm9tIGFsbCBvZiB0aGUgbmFyYyBzZWxmIGluZHVsZ2VuY2UgaW4gdW5oZWFsdGh5IGZvb2RzIGFuZCB0aGUgd2lsbGZ1bCByZWZ1c2FsIHRvIGFjY2VwdCB0aGF0IHRoZXJlIGFyZSBjb25zZXF1ZW5jZXMgdG8gYmFkIGFuZCB1bmhlYWx0aHkgYmVoYXZpb3JzLi4gCkEgZnVybmFjZSByb29tIHRoYXQgY29udGludWFsbHkgZ3Jvd3MgaG90dGVyIHVudGlsIGV2ZXJ5dGhpbmcgaW5zaWRlIGlzIGluY2luZXJhdGVkLiBBdCBsZWFzdCBvbmUgcGxheWVyIG11c3Qgc3RhbmQgbmVhciB0aGUgZmxhbWVzIHRvIGZpZ2h0IG9mZiB0aGUgZmlyZSBlbGVtZW50YWxzIG9yIGhvbGQgZG93biB0aGUgcHJlc3N1cmUgcmVsZWFzZSB2YWx2ZSwgd2hpbGUgdGhlIG90aGVycyBjaGlwIGF3YXkgYXQgdGhlIGluY29taW5nIG1pbmlvbnMgb3IgZXhpdCBwdXp6bGUuCkl0IGlzIHZlcnkgaW1wb3J0YW50IGZvciBzb21lIHRoYXQgdGhleSBtYWtlIHNvbWUgbW9uZXkgZnJvbSB0aGUgdG91cm5hbWVudHMsIGVzcGVjaWFsbHkgaWYgdGhleSBoYXZlIGEgYmlnIGNoYW5jZSBvZiB3aW5uaW5nLiAKVGhlIG5ldmVyIGJ1c3Qgc3RyYXRlZ3kgaXMgYSBsaXR0bGUgYmV0dGVyLCBidXQgaXQgaXMgc3RpbGwgYSBiYWQgc3RyYXRlZ3kuWzFdLiAKUmlnaHQgbm93IHRoaXMgbG9va3MgYSBiaXQgbGlrZSBTd2lzcyBjaGVlc2UuLiAKVG8gQmVhdCBXaW5nc05hdGhhbiBNYWNLaW5ub24gd2lwZWQgYXdheSBhIHNlYXNvbiB3b3J0aCBvZiBvdmVydGltZSBmcnVzdHJhdGlvbiB3aXRoIGEgZ29hbCB0aGF0IHdhcyBjcml0aWNhbCB0byBDb2xvcmFkbyBwbGF5b2ZmIHB1c2guLiAKU29tZW9uZSBleHBvc2VzIGEgMz8gIldvdyB5b3UgZm9sZCB0aGF0PyIgU29tZW9uZSByYWlzZSBwcmUgZmxvcD8gIkV4Y3VzZSBtZSwgaXQgb25seSAkNSB0byBjYWxsLiAKRmlkbGVyLCBZb3JrLCByZXR1cm5lZCB0byB0aGUgaG9tZSBvZiBoZXIgc29uLCBXaWxsaXMgQm93bGRlciwgbGFzdCB3ZWVrLiBNaXNzIE1hcmllIFN0b2NrLCBZb3JrLCBzcGVudCB0aGUgd2VlayBlbmQgd2l0aCBoZXIgcGFyZW50cywgTXIuIEFuZCBNcnMuIApTdWNoIGEgc3VjY2Vzc2Z1bCBmdW5kcmFpc2VyIHdvdWxkIG5vdCBiZSBwb3NzaWJsZSB3aXRob3V0IHRoZSBnZW5lcm91cyBzdXBwb3J0IG9mIG91ciBzcG9uc29ycy4gT3VyIHRoYW5rcyBnbyB0byB0aGUgU2lsdmVydHJlZSBIb3RlbCwgd2hpY2ggZ3JhY2lvdXNseSBwcm92aWRlZCBhIHBlcmZlY3QgdmVudWUuIE91ciBnb2xkIHNwb25zb3JzIGluY2x1ZGVkIENoYWxsZW5nZSBBc3BlbiBhbmQgdGhlIFdvb2RzIEJsaXNzIENvLiAKRW4gc3VuZCByZWxhdGlvbiBrcnZlciBvZnRhIG15Y2tldCBhcmJldGUgb2NoIGVuZ2FnZW1hbmcgZnIgYXR0IGYgZGV0IGF0dCBmdW5nZXJhLiBWYWQgZ3IgZW4gc3VuZCByZWxhdGlvbiByIGRqdXB0IHNpdHRhbmRlIGt1bnNrYXBlbiBhdHQgZGluIHBhcnRuZXIgYWxsdGlkIGhhciBkaW4gcnlnZyBvbSBkdSByIG5lciBlbGxlciB1cHAuIERldCByIGVuIHNpdHVhdGlvbiBkciBkdSB0diBhbGx0aWQgYmVobGxhIGxvY2tldCBmciB2YXJhbmRyYXMgc2lkYSB2ZW4gbnIgZHUgciBwIGRpbiB2cnN0YS4gUyB2YWQgZ3IgZnIgZW4gc3VuZCByZWxhdGlvbj8KSSByZW1lbWJlciBhc2tpbmcgaWYgSSB3YXMgYWxsb3dlZCB0by4gSW4gcmV0cm9zcGVjdCBJIHVuZGVyc3RhbmQgaG93IGhvcnJpYmxlIG9mIGEgbW92ZSB0aGF0IGlzLCBidXQgSSB3YXMgYSBuYWl2ZSBiZWdpbm5lciwgSSBqdXN0IHdhbnRlZCB0byBrbm93IG15IHJpZ2h0cy4gClNlY29uZGx5LCB3ZSBhcmUgbm90IHRoYXQgZGlmZmVyZW50LiBBbGwgQ2hpbmVzZSByZXN0YXVyYW50cyBwcmVmZXIgY2FzaCB0byBjcmVkaXQgY2FyZCBiZWNhdXNlIHRoZSBvd25lcnMgd2FudCB0byBnZXQgYXdheSBmcm9tIHRheC4gQWxsIENoaW5lc2UgZm9jdXMgb24gcHJvcGVydHkgaW52ZXN0bWVudCBhbmQgYWNhZGVtaWMgdHV0b3JpbmcgZm9yIHRoZWlyIGNoaWxkcmVuLiBQUkMgQ2hpbmVzZSwgSG9uZyBLb25nIENoaW5lc2UsIE1hbGF5c2lhbiBDaGluZXNlLCBTaW5nYXBvcmVhbiBDaGluZXNlLCBhbGwgZG9pbmcgdGhlIHNhbWUgYm9yaW5nIHRoaW5nIHdoZW4gbGl2aW5nIGFicm9hZC4KQ2FsYyBQaG9zIChDYWxjaXVtIFBob3NwaGF0ZSkuIFdlIGhhdmUgNTclIG9mIHRoaXMgc2FsdCBpbiBvdXIgYm9uZXMgc28gaXQncyBncmVhdCBmb3IgYm9uZSBhY2hlcyBhbmQgZ3Jvd2luZyBwYWlucyAoQWggbm93IHlvdSBhcmUgbGVhcm5pbmcgLiAKQXJ0aWZhY3QgaXMgYSAxdjEgZ2FtZSB3aGlsZSBBdXRvIENoZXNzIGlzIGFuIDggd2F5IEZGQS4gClRydW1wIHNhaWQgVHVlc2RheSB0aGF0IGhlIGRldGVjdGVkIGEgc2hpZnQgYWZ0ZXIgS2ltIGFuZCBDaGluZXNlIFByZXNpZGVudCBYaSBKaW5waW5nIG1ldCBmb3IgYSBzZWNvbmQgdGltZSBpbiBDaGluYS4gVHJ1bXAgc2F5cyBoZSBob3BlcyBDaGluYSBpc24ndCBpbmZsdWVuY2luZyBLaW0uClJlYWQgdGhlIEVudGlyZSBBcnRpY2xlTEcgQmVzdCBTcGxpdCBBQyBGb3IgVGhpcyBTdW1tZXJzClNvbG9tb24gQ2FybApUaGV5IGFyZSBib25kZWQgYW5kIGluc3VyZWQuIApUaGVyZSBhcmUgaW5zdXJtb3VudGFibGUgdGhpbmdzIGdvaW5nIG9mZiBwaHlzaW9sb2dpY2FsbHkgd2hlbiB5b3UgY29uc3VtZSBhIHN0aW11bGFudCBhbmQgYW4gZXF1YWwgYW1vdW50IGFmdGVyIHlvdSBhYnN0YWluLiBGcm9tIGVuZXJneSwgcGVyaXN0YWxzaXMsIGNvZ25pdGl2ZSBmdW5jdGlvbnMuCg==|<---