--->|V2UgY29udHJvbCBvdXIgZW1vdGlvbnMgYW5kIG91ciBkZXNpcmVzLiBUaGF0IHdoYXQgbWFrZXMgdXMgY2l2aWxpemVkLiBPZiBjb3Vyc2UsIG1vZGVybiBjaXZpbGl6YXRpb25zIGhhdmUgY29tbWl0dGVkIG1vcmUgYWN0cyBvZiB2aW9sZW5jZSB0aGFuIGFueSBvbiByZWNvcmQsIG9mdGVuIGluIHRoZSBuYW1lIG9mICJuYXRpb24gc3RhdGVzIiBidXQgYWxzbyBpbiB0aGUgbmFtZSBvZiBkcnVncyBvciBwcmlzb25zIG9yIG90aGVyIGZvcm1zIG9mIHRoZSAiY2l2aWxpemluZyBwcm9jZXNzLiIgQXMgZm9yIGNvbnRyb2xsaW5nIG91ciBkZXNpcmVzLCB3ZSBub3Qgc28gZ29vZCBhdCB0aGF0IGVpdGhlciAoc2VlIEplcnJ5IFNwcmluZ2VyLCBhYm92ZSkuCkkgZGlkbiBpbmNsdWRlIHRoaXMgaW4gdGhlIHRyYW5zY3JpcHRzIGJlY2F1c2UgaXQgZGlkbiByZWFsbHkgZml0IHRoZSBmbG93IG9mIGV2ZXJ5dGhpbmcgZWxzZSwgYnV0IGhlcmUgaXMgaG93IEkgb2ZmaWNpYWxseSBzdGFydGVkIHRoZSBzZXNzaW9uIFJpZ2h0IG9mZiB0aGUgYmF0LCBJIGNhbiB0ZWxsIHlvdSdyZSBub3QgYSBndXkgd2hvIG5lZWRzIGFuIGVudG91cmFnZQpCdXQgdGhlIGRldnMgYXJlIG9uIHRvcCBvZiBpdC4uIApGb3J0dW55IGhhcyBiZWVuIHRocmVhdGVuZWQgd2l0aCBsYXdzdWl0cyBmb3VyIHRpbWVzICAgc28gZmFyLCBldmVyeSB0aHJlYXQgaGFzIGJlZW4gaWRsZS4gCllvdSB3YW50IHRvIGJlIGVhdGluZyBhcm91bmQgMzAwMCBjYWxvcmllcyBhbHNvLiAKU3VkZGVubHksIFNoZWxkb24ncyBtb20gcnVzaGVzIGludG8gdGhlIHJvb20gdG8gYW5ub3VuY2UgdGhhdCBzaGUncyB0YWtpbmcgdGhlaXIgZmF0aGVyIHRvIHRoZSBob3NwaXRhbC4gQWZ0ZXIgU2hlbGRvbiBzZWVzIGhpcyBmYXRoZXIgd3JpdGhpbmcgaW4gcGFpbiBpbiBoaXMgaG9zcGl0YWwgYmVkLCBob29rZWQgdXAgdG8gd2lyZXMgYW5kIHR1YmVzIHdpdGggZG9jdG9ycyBhbmQgbnVyc2VzIHdvcmtpbmcgb24gaGltLCBTaGVsZG9uIGlzIHZpc2libHkgc2hha2VuIHVwIGFuZCBpbW1lZGlhdGVseSBnb2VzIHRvIHRoZSBob3NwaXRhbCdzIGNoYXBlbCBhbmQgZm9sZHMgaGlzIGhhbmRzIGluIHByYXllci4KSm9obm55IFJvY2tldHMgICBTbGljayBiYWNrIHlvdXIgaGFpciBvciBzbGlwIG9uIHlvdXIgcG9vZGxlIHNraXJ0IEpvaG5ueSBSb2NrZXRzIGlzIGhlcmUhIFRocm91Z2ggdGhlIG1hZ2ljIG9mIG11c3RhcmQsIGtldGNodXAgYW5kIGEgZnJlc2hseSBjb29rZWQgcGF0dHksIEpvaG5ueSBSb2NrZXRzIGJyaW5ncyB0aGUgNTBzIG1hbHQgc2hvcCBiYWNrIHRvIHRoZSBmdXR1cmUuIApUbyBzb2x2ZSB0aGlzIHByb2JsZW0sIGEgcmFpbHdheSB3YXMgZGV2aXNlZCB0aGF0IHdvdWxkIHJ1biB0aGlzIGNvdXJzZSBpbiBzdWNoIGEgd2F5IHRoYXQgYWxsIHRoZSB3b3JrZXJzIGhhZCB0byBkbyB3YXMgbG9hZCB0aGUgbWluZSBjYXJzLCBwdXNoIHRoZW0gb2ZmIHRoZSB0b3Agb2YgdGhlIG1vdW50YWluLCBhbmQgdGhleSB3b3VsZCBmb2xsb3cgdGhlIDE4IG1pbGUgY291cnNlIHB1cmVseSBieSBncmF2aXR5LiBUaGlzIHdhcyBwb3NzaWJsZSBzaW5jZSAxNyBvZiB0aGUgMTggbWlsZXMgd2VyZSBkb3duaGlsbC4gTXVsZXMgd2VyZSBlbXBsb3llZCB0byBoYXVsIHRoZSBlbXB0eSBjYXJzIGJhY2sgdG8gdGhlIHRvcC4gCkhlIGlzIHNtYXJ0IGFuZCBvYmVkaWVudCBhbmQgaXMgdmVyeSBxdWlja2x5IHBpY2tpbmcgdXAgY29tbWFuZHMgZnJvbSBtZSBhbmQgaW1wdWxzZSBjb250cm9sIGluIHRoZSBvbmx5IDIgd2Vla3MgdGhhdCBJIGhhdmUgaGFkIGhpbS4uIApUaGVuLCB0aGUgcGF0aWVudHMgd2VyZSByYW5kb21pc2VkIHRvIGEgNiB3ZWVrIGRpZXQgZWl0aGVyIGV4Y2x1ZGluZyBvciBpbmNsdWRpbmcgc3BlY2lmaWMgZm9vZHMgd2l0aCByYWlzZWQgSWdHIGFudGlib2RpZXMsIGluZGl2aWR1YWxseS4gCldpdGggYWxsIHRoZSBjcmltZXMgdGhhdCBUcnVtcCBjb21taXR0ZWQsIGhlIHN0aWxsIGhhcyBhbiBhcHByb3ZhbCByYXRpbmcgb3ZlciA0MCUuIApUbyBzdWNjZXNzIGlzIHRoZSBtb3N0IHNlYXJjaGVkIGtleXdvcmQuIFRoaXMgYXBwbGllcyB0byBwb2tlciBhdCBDbHViV1BUIHRvbyBob3dldmVyIHRoZXkgY2hhbmdlIGZyb20gdGhlb3JldGljYWwgcGxhbnMgdG8gZmFjdHMgd2hpY2ggY2FuIGJlIHB1dCB0byBwcmFjdGljZS4gVGhlIHRvcCBzZWNyZXQgaW4gcG9rZXIgaXMgbm90IHBsYXlpbmcga2Vlbmx5IG5vciBiZXR0aW5nIHNtYXJ0bHkgYnV0IHBhdGllbmNlLiBQcm8gcGxheWVycyB0YWxrIG9mIG90aGVyIHRoaW5ncyBub3Qgc2hlZGRpbmcgZW5vdWdoIGxpZ2h0IHRvIHRoZWlyIHBhdGllbmNlLiBMaWtlIHRoZSBzdG9jayBtYXJrZXQsIHBva2VyIHRvbyBoYXMgaXRzIHNoYXJlIG9mIGhpZ2hzIGFuZCBsb3dzIGNhbGxpbmcgZm9yIGEgc3RlYWR5IHBhdGllbnQgcGxheSB3aGljaCBoYXBwZW5zIHRvIGJlIHRoZSBvbmx5IHJld2FyZGluZyBwbGFuLiBHYW1ibGluZyB3aXRoIGNhcmRzIGNhbiB0YWtlIGxvbmc7IG1vbnRoIGFmdGVyIG1vbnRoIG9yIDEyMDAgaG91cnMgYXMgb3RoZXJzIGNsYWltLiBTaW5jZSBpdCBpcyBhIGxlbmd0aHkgdGhpbmcsIGEgcGF0aWVudCBwbGF5IGlzIHRoZSBvbmx5IHRoaW5nIHRoYXQgYXNzdXJlcyB5b3Ugb2YgcHJvZml0LiBMZXQgdXMgc2hpZnQgb3VyIHNjb3BlIGZyb20gdmFndWVuZXNzIHRvIGZhY3RzIGJ5IHRha2luZyBhIGxvb2sgb2YgcmVhc29ucyBiZWhpbmQgaW1wYXRpZW5jZS4KQWx5c3NhIGVuam95cyBibGVuZGluZyBoZXIgbWFnaWNrIGludG8gdGhlIHBvdGlvbnMsIGxvdGlvbnMgYW5kIGhlYWxpbmcgcHJvZHVjdHMgdGhhdCB3ZSBzZWxsIGF0IHRoZSBBcG90aGVjYXJ5LkRhd24gaGFzIGJlZW4gYSBtYXNzYWdlIGFuZCBuYXR1cmFsIHRoZXJhcGllcyBwcmFjdGl0aW9uZXIgc2luY2UgMjAxMC4gCkkgaW4gdGhlIHNhbWUgYm9hdCBhcyB5b3UgKG5vIHB1biBpbnRlbmRlZCksIHN0YXJ0ZWQgcmVjZW50bHkgYW5kIGhhdmUgYmVlbiBmb2N1c2luZyBvbiBmaXNoaW5nIGFzIG15IGZpcnN0IGdhdGhlcmluZyBzcGVjaWFsaXphdGlvbi4gT25lIHBybyBpcyB0aGF0IEkgZG9uIGhhdmUgdG8gd29ycnkgYWJvdXQgY2FycnlpbmcgYSB0b24gb2Ygd2VpZ2h0LiBJIHdlYXIgdGhlIFQ2IGdhdGhlcmluZyBnZWFyIG1pbnVzIHRoZSBiYWNrcGFjayBiZWNhdXNlIEkgbmV2ZXIgc3RheSBvdXQgbG9uZyBlbm91Z2ggdG8gd29ycnkgYWJvdXQgY2FwYWNpdHkuIE9uZSB0aGluZyBJIGJlZW4gdHJ5aW5nIHRvIGZpZ3VyZSBvdXQgbGlrZSB5b3UgbWVudGlvbmVkIGlzIHRoZSBUNyByYXJlIGRyb3BzLiBEbyB0aGV5IGRyb3AgbW9yZSBvZnRlbiBpbiBzYXkgYSBNZXJjaWEgQmxhY2tab25lIFQ1IHpvbmUgdnMgdGhlIGdyZWVuIG9yIHllbGxvdyBCbGFjayBab25lIHRlcnJpdG9yaWVzPyBJIGNhbnQgZmluZCBhbnkgaW5mbyBhbmQgaGF2ZW4gdHJpZWQgdHJhY2tpbmcgbXkgb3duIHJlc3VsdHMgeWV0LiBBbm90aGVyIGlzc3VlIEkgaGFkIHdhcyBTYXR1cmRheSBuaWdodCBJIHRyaWVkIGZvciBxdWl0ZSBhIHdoaWxlIGFuZCB3YXMgaGF2aW5nIG5vIGx1Y2sgd2l0aCB0aGUgZWVscyBpbiBhIGZvcmVzdCB6b25lLiBJIHJlYWQgc29tZXdoZXJlIHRoYXQgYSB6b25lIGNhbiBiZSBmaXNoZWQgb3V0IHNvIEkgd29uZGVyIGlmIHRoYXQgd2FzIHRoZSBjYXNlLiBTYXcgdGhhdCB0aGUgaGlnaCBlbmQgZm9vZCBpdGVtcyBhcmUgZ2V0dGluZyBhIG5lcmYgbmV4dCBwYXRjaCBzbyB0aGF0IG1pZ2h0IGVhdCBpbnRvIG91ciBwcm9maXRzIGFzIHdlbGwuIEhhcHB5IGh1bnRpbmchIDcgcG9pbnRzICBzdWJtaXR0ZWQgMSB5ZWFyIGFnbwpBIGNocmlzdG1hcyBjYXJvbCBtb3ZpZSBpbiBoaW5kaSBkb3dubG9hZGdvbGtlcyBnYnRlYW0gZ2JrZXkuIApJIGp1c3QgaGF2ZSBhIGZlZWxpbmcgcGVvcGxlIHdlcmUgdW5pZm9ybWVkLCBub3Qgb2YgYWdlIGR1cmluZyBCYXNoaXIsIG9yIGp1c3QgcGxhaW4gZm9yZ290IGFib3V0IHNvbWUgb2YgdGhlIGNyZWVweSBzdHVmZiBNaWNoYWVsIGNvbmZlc3NlZCB0by4gCkxleW9uaGplbG0sIHdobyBxdWl0IHRoZSBTZW5hdGUgbGFzdCB3ZWVrLCBiZWxpZXZlcyBvZmYgZHV0eSBwb2xpY2UsIGV4cGVyaWVuY2VkIGd1biBjbHViIG1lbWJlcnMgYW5kIG90aGVyIHBlcm1pdCBob2xkZXJzIHNob3VsZCBiZSBhYmxlIHRvIGNhcnJ5IGZpcmVhcm1zIGZvciBzZWxmIGRlZmVuY2UuICJBIGdvb2QgZ3V5IHdpdGggYSBndW4gY2FuIGRlYWwgd2l0aCBhIGJhZCBndXkgd2l0aCBhIGd1biwiIExleW9uaGplbG0gdG9sZCBBQVAgZnJvbSBoaXMgRHJ1bW1veW5lIG9mZmljZSwgcmVwZWF0aW5nIGEgbGluZSBtb3JlIG9mdGVuIGhlYXJkIGZyb20gdGhlIE5SQSBpbiB0aGUgVW5pdGVkIFN0YXRlcy4gClNlZW0gdG8gYmUgaHVydGluZyBDYW5hZGlhbiBob3VzZWhvbGRzIGFmdGVyIGFsbApCbHVmZmluZyBpcyByZWdhcmRlZCBhcyBhbW9uZyB0aGUgaW1wb3J0YW50IHNraWxscyB0byBwbGF5IHBva2VyIG9ubGluZSwgYW5kIGl0IGlzIHVuZG91YnRlZGx5IGNvdW50ZWQgYW1vbmcgdGhlIHNvcGhpc3RpY2F0ZWQgcG9rZXIgc3RyYXRlZ2llcy4uIApXaXRoIHRoZSBiYWJ5IGR1ZSBTYXR1cmRheSwgTWNMYXJlbiBoYXMgYmVlbiBmcmFudGljYWxseSB0cnlpbmcgdG8gY29sbGVjdCBtb25leSBmb3IgdGhlIGNvdXBsZSBhcyB3ZWxsIGFzIGJhc2ljIG5lY2Vzc2l0aWVzIGZvciBoZXIgc2lzdGVyLgpKYW5lIGtpbmQgb2YganVzdCBsb29rcyBhdCBoZXIsIGJ1dCBKb2huIGlzIHByZXR0eSBwaXNzZWQgYW5kIHRlbGxzIGhlciB0byBzdG9wIGJlaW5nIHJ1ZGUuIApZb3UgY2FuIGJ1eSBtYXNvbiBiZWVzIGluIHRoZWlyIGNvY29vbi4gVGhleSBzdG9yZWQgYXQgbG93IHRlbXBlcmF0dXJlcywgc28gd2hlbiB5b3UgcmVjZWl2ZSB0aGVtIHRoZXkgYXdha2UgZnJvbSB0aGVpciB3aW50ZXIgcmVzdCAuIElmIHlvdSBwcm92aWRlZCBwcm9wZXIgaG91c2luZyAoc29tZSBraW5kIG9mIGluc2VjdCBob3RlbCksIHlvdSBwdXQgdGhlIGNvY29vbnMgbmVhcmJ5LCBhbmQgc29vbiB0aGV5IHN0YXJ0IGluaGFiaXRpbmcgdGhlIGhvdGVsLiAKU28gZmFyIHNoZSBzYXlzIGFib3V0IDE1IG9yIHNvIGhhdmUgYWxyZWFkeSBjb250YWN0ZWQgaGVyIGFuZCBzYXkgdGhleSBiZSB1c2luZyB0aGUgYm9vayBmb3IgdGhlaXIgY2xhc3MgZHVyaW5nIHRoZSBmYWxsIHNlbWVzdGVyLgpNb250aHMgbGF0ZXIgKFNlcHRlbWJlciAyMDE3KSBoZSBhZG1pdHMgaGUgd2FzIG5lcnZvdXMgYXMgaGVsbCBhbmQgd2FudGVkIHRvLCBhbmQgZGlkbiB3YW50IHRvIG1lc3MgdXAuIFNvIGEgZmV3IGRheXMgbGF0ZXIsIEkgd2FzIHRoZSBvbmUgdG8gZXZlbnR1YWxseSBqdXN0IHB1bGwgaGltIGludG8gaGlzIGJlZHJvb20gYW5kIGZ1Y2sgdGhlIGRheWxpZ2h0cyBvdXQgb2YgaGltLgpPbmNlIEkgc3R1cGlkbHkgbW92ZWQgaW4gd2l0aCBhIGd1eSBhZnRlciBvbmx5IGEgY291cGxlIG1vbnRocyBkYXRpbmcgaGltIGNhdXNlIEkgdGhvdWdodCB3aHkgbm90LiBPbmUgbmlnaHQgSSB3YXMgcHV0dGluZyBteSBraWQgdG8gc2xlZXAgYW5kIEkgdXNlZCB0byBsYXkgaW4gYmVkIHdpdGggaGltIGFuZCBydWIgaGlzIGJhY2sgb3IgaG9sZCBoaXMgaGFuZCBzbyBoZSBjb3VsZCBmYWxsIGFzbGVlcCBxdWljaywgc28gSSBoYWQgdGhlIGRvb3Igc2h1dCBhbmQgSSBwbGF5ZWQgb24gbXkgcGhvbmUgd2hpbGUgSSBsYXllZCBpbiB0aGVyZSB3aXRoIGhpbS4gU2Nyb2xsZWQgRmFjZWJvb2ssIHR3aXR0ZXIsIGV0Yy4gQWJvdXQgYW4gaG91ciBwYXNzZWQgYW5kIG15IGtpZCB3YXMgc25vcmluZyBzbyBJIHdlbnQgYmFjayBvdXQgYW5kIEkgc2F0IG9uIHRoZSBjb3VjaCB3aXRoIGd1eSAoYnV0IG5vdCBuZXh0IHRvIGhpbSkuIE5leHQgdGhpbmcgSSBrbm93IEkgaGVhciBzb2JiaW5nLiBJIGxvb2sgb3ZlciBhbmQgdGhpcyBkdWRlIGlzIGp1c3QgY3J5aW5nLiBTbyBJIGxpa2UuIEZ1Y2suClRBTExBSEFTU0VFLCBGbGEuICAgIkpvY2tleXMiIHdvdWxkIGhhdmUgdG8gaGFuZyB1cCB0aGVpciBqZWFucyBhbmQgY293Ym95IGhhdHMsIGFuZCBhbGwgcmFjZSB0cmFja3Mgd291bGQgYmUgcmVxdWlyZWQgdG8gaGF2ZSBvdmFsIHNoYXBlcyB1bmRlciBhIHNldCBvZiBuZXcgcnVsZXMgcHJvcG9zZWQgYnkgZ2FtYmxpbmcgcmVndWxhdG9ycy4KWWVzLCBhbmQgdGhlIG51YW5jZSBjb21wYXJhYmxlIHRvIHllYXIgb3ZlciB5ZWFyIHdlaWdodCBnYWluIGlzIHRoYXQgd2VpZ2h0IGdhaW4gYXQgdGhlIGVuZCBvZiB0aGUgeWVhciBzaG93cyB0aGUgbmV0IGNoYW5nZSBpbiBnYWlucyBhbmQgbG9zc2VzIGluIHdlaWdodC4gClVuZSBkZXMgaW50ZXJ2ZW5hbnRlcywgZW1tZW5lIGNoZXogdW4gbnV0cml0aW9ubmlzdGUgdHJzIGpldW5lLCB0bW9pZ25haXQgZCd1bmUgY2hvc2UgYXNzZXogaW5jcm95YWJsZSBtYWlzIG1hbGhldXJldXNlbWVudCBnbG9iYWxlbWVudCBqdXN0ZSA6ICJvbiBhcHByZW5kIHRycyB0dCBxdWUgbGVzIG1kZWNpbnMgbmUgc29udCBwYXMgZGUgbm90cmUgY3QuIFVuIGVuZmFudCBncm9zIG4nZXN0IHBsdXMgdW4gZW5mYW50Ii4gRW4gZWZmZXQsIGxhIGdyb3Nzb3Bob2JpZSBtZGljYWxlIGVzdCB0cnMgcnBhbmR1ZSBldCBiYXNlIHN1ciBkZXMgY29ubmFpc3NhbmNlcyBlcnJvbmVzLiAKUGxhdHogbWl0IDE1ICUgZGVzIFRvcGZlcyBiZWxvaG50LiAKODA1bmF0aXZlICAgNiBwb2ludHMgIHN1Ym1pdHRlZCAzIGRheXMgYWdvCkJ1dCBhcyBoZSBzdGFydGVkIGFjdGluZyBvdXQgYW5kIGZsdW5raW5nIG91dCBvZiBzY2hvb2wgSSBoYXZlIHRvIGRpc2NpcGxpbmUgaGltICh3aGljaCBpcyByZWFsbHkgaGFyZCB3aGVuIGFsbCBJIGV2ZXIgZG9uZSB3YXMgdGFrZSBjYXJlIG9mIGhpbSkuIApIb25lc3RseS4gQ0JzIGFyZSB0aGUgYmlnZ2VzdCByZWFzb24gSSBsZWZ0IHRoZSBoYWlyIGluZHVzdHJ5LiAKR29uY2FsdmVzIHJlcG9ydGVkbHkgaGFkIGEgZ29vZCB3ZWVrIG9mIHRyYWluaW5nIHdpdGggaGlzIHRlYW1tYXRlcy4gCkxpc3RlbkxlYXJuIHUKRmluYWxseSBzb21lb25lIGdvdCBicmF2ZSBlbm91Z2ggYW5kIHdhbnRlZCB0byB0YWxrIHRvIGhpbSBhYm91dCBpdCwgYW5kIGhlIGxhdWdoZWQgYW5kIGhhZCBubyByZWNvbGxlY3Rpb24gb2YgdGVsbGluZyBtZSB0aGF0IGFuZCBzYWlkIGhlIHdhcyBwcm9iYWJseSBqdXN0IHNjcmV3aW5nIHdpdGggbWUuIEhlIGFsd2F5cyB3b25kZXJlZCB3aHkgbm8gb25lIHdpc2hlZCBoaW0gaGFwcHkgYmRheS5pcyBhbiBpc3N1ZSB3aXRoIGlsbGVnYWwsIGNsYXNzaWZpZWQgbGVha3MuIApUaGlzIGluY2x1ZGVzLCBidXQgaXMgbm90IGxpbWl0ZWQgdG86IGZpcnN0IGFuZCBsYXN0IG5hbWVzLCB1c2VybmFtZXMgKGluY2x1ZGluZyB5b3VyIG93biksIHByb2ZpbGUgcGljdHVyZXMgd2hlcmUgYSBwZXJzb24gZmFjZSBpcyB2aXNpYmxlLCBzdWJyZWRkaXQgYW5kIG9ubGluZSBjb21tdW5pdHkgbmFtZXMsIHRpdGxlcyBvZiBzcGVjaWZpYyBwb3N0cywgYW5kIG90aGVyIGluZm9ybWF0aW9uIGxpa2UgYWRkcmVzc2VzIGFuZCBsaWNlbnNlIHBsYXRlcy4gCkkgbG92ZSB0aGF0IHBsYWNlLiBUaGV5IGFsc28gaGF2ZSBiZWVyIGFuZCBsaXF1b3Igb24gdGhlaXIgbWVudSBhbmQgc29tZXRpbWVzIHRoZXkgaGF2ZSBzaG93cyBpbiB0aGUgYmFjayByb29tLiBUaGV5IHVzZWQgdG8gZG8gYW4gaW1wcm92IGNvbWVkeSBzaG93IG9uIHRoZSBmaXJzdCBvciBzZWNvbmQgU2F0dXJkYXkgb2YgZXZlcnkgbW9udGggdGhhdCB3YXMgaGlsYXJpb3VzLiAKTm8gS2lja3N0YXJ0ZXIsIGNyb3dkZnVuZGluZywgZXQgYWwgcHJvamVjdCAicmVtaW5kZXIiIHBvc3RzLiAKQW5kIHRoaXMgaXMgZnVubnkgYmVjYXVzZSB5b3UganVzdCBkaXNtaXNzIGhpcyB3b3JrLCBldmVuIHRob3VnaCB0aGlzIHN0dW50IHByb3ZlcyB0aGF0IGhlIGZvbGxvd3MgdGhlIGRhdGEgYW5kIGlzIHdpbGxpbmcgdG8gdGFrZSBhIGJlYXRpbmcgZnJvbSBoaXMgYXVkaWVuY2Ugb3ZlciBpdC4gCkFwcGFyZW1tZW50LCBmZXVpbGxlcyBldCBzZW1lbmNlcyB0YWllbnQgY29udmllcyBwb3VyIHNlIHNvaWduZXIuIApUaGUgcHJlc2lkZW50J3MgY291bnNlbG9yIHNwYXJyZWQgd2l0aCBob3N0IENocmlzIEN1b21vIG9uIGhpcyBwcmltZXRpbWUgc2hvdywgd2hlcmUgc2hlIGNsYWltZWQgaXQncyBhICJzbHVyIiB0byBhY2N1c2UgVHJ1bXAgb2YgbHlpbmcuCkRlcGVuZCBvbiB3aGF0IGV4YWN0bHkgc2hlIHVzZXMgaGl0ZmlsbSBmb3IuIElmIGl0cyBqdXN0IHRha2luZyBhIHNpbmdsZSB2aWRlbyBmaWxlLCBjdXR0aW5nIG91dCBwYXJ0cy9hZGRpbmcgYXVkaW8gYW5kIHRoZW4gc2F2aW5nIHRvIGRpc2svZW5jb2RpbmcgdG8gc21hbGxlciBmaWxlLCB0aGVuIGFueSBuZXdlciBjcHUgd2lsbCBkbyB0aGUgam9iLiBHZXQgdGhlIGZhc3Rlc3QgY3B1IHlvdSBjYW4gYWZmb3JkLgpUaGlzIHllYXIgTWlzcyBOb3NlIHdhcyBpbiBsaW5lIGZvciBhbiBhd2FyZCB3aXRoIGFub3RoZXIgcGVyc29uLiBJdCB3YXMgZG93biB0byB0aGUgdHdvIG9mIHRoZW0gaW4gdGhlIGZpbmFsIGp1ZGdpbmcgZm9yIHRoZSBhd2FyZCBuYW1pbmcgdGhlIEF1dGlzdGljIFN1cHBvcnRlciBvZiB0aGUgWWVhci4gClRoZXkgc2VuZCB5b3UgYSB2b3VjaGVyLCB0aGVuIHlvdSByZWRlZW0gdGhlIGFjdHVhbCBQYXNzIGF0IHRoZSBtYWpvciBKUiBNaWRvcmkgT2ZmaWNlcyAgIEFpcnBvcnRzIGxpa2UgTmFyaXRhIGhhdmUgdGhlbS4uIApUaGVfQmlnX0RlYWwgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIHllYXIgYWdvCkhlIHBsYXllZCB0aGVtIHByZXR0eSB3ZWxsLiAKQW55d2F5IGlmIHlvdSBkb24ndCBoYXZlIGEgam9iIHlvdSBjYW4ndCBnZXQgdGhlIHRlbXBvcmFyeSByZXNpZGVudCBwZXJtaXQuClNhbWUga2lkIGdvdCBpbiB0cm91YmxlIGJlY2F1c2UgaGUgd2F0Y2hlZCBwb3JuIHdpdGhvdXQgdXNpbmcgaW5jb2duaXRvIGFuZCBnb3QgZm91bmQgb3V0IGJlY2F1c2UgaGlzIGhpc3Rvcnkgd2FzIG9uIHRoZSBzZXJ2ZXIuIDM4IHBvaW50cyAgc3VibWl0dGVkIDIwIGRheXMgYWdvCk1pdCBkaWVzZXIgSGFuZGtvbWJpbmF0aW9uIGdld2lubmUgaWNoIGtuYXBwIDYzJSBtZWluZXIgSG5kZSwgc2NoYWZmZSBlcyBhYmVyIGluIHZpZWxlbiBIbmRlbiBuaWNodCwgcmVjaHR6ZWl0aWcgenUgZGllIE5vdGJyZW1zZSB6dSB6aWVoZW4gdW5kIG1pY2ggYXVzIGVpbmVyIEhhbmQgenUgdmVyYWJzY2hpZWRlbiwgb2J3b2hsIGljaCBtaXQgZ3JvZXIgV2FocnNjaGVpbmxpY2hrZWl0IGdlc2NobGFnZW4gYmluLgpSZWFkIHRoZSBFbnRpcmUgQXJ0aWNsZUFyZSB5b3UgY3JhenkgYWJvdXQgdmlkZW8gZ2FtZXM/IE9oLCBjb21lIG9uIGRvbnQgYmUgYXNoYW1lZCEgTm93YWRheXMgdGhpcyBpcyBzbyBub3JtYWwuIFNvIG1hbnkgcGVvcGxlIGxvdmUgdG8gc3RheSBsYXp5IGF0IGhvbWUgYW5kIHBsYXkgdmlkZW8gZ2FtZXMgYWxsIGRheSBsb25nLiBTb21lIGV2ZW4gY2xhaW0gdGhhdCB2aWRlbyBnYW1lcyBhcmUgdGhlIGJlc3QgZW50ZXJ0YWlubWVudCBvbiB0aGUgRWFydGguIExldCBtZSBiZSBtb3JlIHNwZWNpZmljLCBndXlzIGp1c3QgbG92ZSB0byB3YXN0ZSB0aGVpciB0aW1lIHBsYXlpbmcgdmlkZW8gZ2FtZXMuIEkgYWRtaXQsIHRoZXJlIG1heSBiZSB3b21lbiB3aG8gcGxheSB2aWRlbyBnYW1lcyBidXQgSSBrbm93IG5vbmUgb2YgdGhlbSEKMjEgcG9pbnRzICBzdWJtaXR0ZWQgNSBob3VycyBhZ29JIHNlZW4gdGhvc2UgcGxhY2VzIHRoYXQgZG8gc2hhcmVkIHNlYXRpbmcgaW4gQXVzdHJhbGlhIGhvd2V2ZXIgdGhleSB1c3VhbGx5IHNheSB1cGZyb250IGlmIHlvdSB3aWxsaW5nIHRvIHNoYXJlIHNlYXRpbmcgdGhleSBzZWF0IHlvdSBmYXN0ZXIuIApSZW5vd25lZCBmdXJuaXR1cmUgbWFrZXIsIEt1d2FiYXJhIHNob3djYXNlcyByZWQgY2VkYXIgc2N1bHB0dXJlcyB0aGF0IGFyZSAxMDAgcGVyIGNlbnQgbG9jYWwgYW5kIHJlY3ljbGVkLiBUaGUgaWRlYSwgYXMgdGhlIGdhbGxlcnkgcHV0cyBpdCwgaXMgdGhhdCB0aGVyZSBpcyB1bml2ZXJzYWwgYWJvdXQgZHVzdCwgdGhhdCBpdCBpcyBhbmQgdW5ydWx5IHRoZSBlbmVteSBvZiB0aGUgbW9kZXJuIG9yZGVyLCBpdHMgcmVwcmVzc2VkIG90aGVyLCBpdHMgbmVtZXNpcy4gQnV0IGl0IGhhcyBhIHN0b3J5IHRvIHRlbGwgZnJvbSB0aGUgb3RoZXIgc2lkZS4gUGhvdG9ncmFwaHMgYnkgSm9obiBEaXZvbGEsIE1hcmNlbCBEdWNoYW1wLCBXYWxrZXIgRXZhbnMsIEdlcmhhcmQgUmljaHRlciwgU29waGllIFJpc3RlbGh1ZWJlciwgWGF2aWVyIFJpYmFzLCBKZWZmIFdhbGwgYW5kIG1hbnkgb3RoZXJzIGFyZSBvbiBkaXNwbGF5IGFsb25nc2lkZSBhbm9ueW1vdXMgcHJlc3MgcGhvdG9zLCBwb3N0Y2FyZHMsIG1hZ2F6aW5lIHNwcmVhZHMgYW5kIG1vdmllcy4KTWlnaHQgaGF2ZSBiZXR0ZXIgbHVjayB3aXRoIGEgZm9sbG93IHVwIGNhbGw/LiAKSmltIGFuZCBBbGljZSB0cmF2ZWxsZWQgb2Z0ZW4gdG8gVG9yb250bywgQ2FsZ2FyeSBhbmQgRHVuY2FuIChCQykuIApCdXQgdGhhdCdzIG9ubHkgdGhlIHN0YXJ0LiBHYW1ibGluZyBzaXRlcyB0aGF0IGFwcGx5IGZvciBhIEthaG5hd2FrZSBsaWNlbnNlIGFyZSByZXF1aXJlZCB0byBwbGFjZSB0aGVpciBjb21wdXRlciBzZXJ2ZXJzIGluIGEgcmVmdXJiaXNoZWQgbWF0dHJlc3MgZmFjdG9yeSBvbiB0aGUgcmVzZXJ2YXRpb24gZm9yIGEgbWluaW11bSBvZiB0aHJlZSB5ZWFycy4gTW9oYXdrIEludGVybmV0IFRlY2hub2xvZ2llcyBjb2xsZWN0cyBtaWxsaW9ucyBpbiBmZWVzIGFubnVhbGx5IGZyb20gdGhlc2UgcmVudGFscywgdGhvdWdoIEthaG5hd2FrZSBvZmZpY2lhbHMgc2FpZCBtb3N0IG9mIHRoZSBwcm9maXRzIGhhdmUgYmVlbiBwbG93ZWQgYmFjayBpbnRvIHRoZSBjb21wYW55Li4gClRoZSB3aWRlIGd1bGYgYmV0d2VlbiB0aGUgZGVtb2NyYXRpYyBnb3Zlcm5tZW50IGluIElzbGFtYWJhZCBhbmQgdGhlIG1pbGl0YXJ5IGxlYWRlcnNoaXAgaW4gUmF3YWxwaW5kaSBoYXMgYmVlbiBleHBvc2VkIGJ5IHRoZSBLZXJyeSBMdWdhciBoeXN0ZXJpYS4gCldlbnQgdGhyb3VnaCBzb21lIHBhcmtzIGEgY291cGxlIG9mIG5pZ2h0cyBhZ28gd2l0aCBteSB3aWZlLiBXYXMgdmVyeSBpbnRlcmVzdGluZyBzZWVpbmcgdGhlIGRpZmZlcmVudCBsZXZlbHMgb2YgcGFya3MgaW4gbXkgYXJlYS4gRmlyc3QgcGFyayBoYXMgYWJvdXQgMzUgbG90cywgYW5kIDcgaG9tZXMgZm9yIHNhbGUsIGFsbCBjYXNoLiAKSSBkb24ga25vdyBpbiB3aGljaCBjb3VudHJ5IHBlb3BsZSBwcmVmZXIgdG8gdXNlIHNvbWV0aGluZyBsaWtlIDU6MSBvZGRzIGJ1dCBqdXN0IHVzZSB0aGUgc2ltcGxlIHJ1bGUgb2YgMi4gSWYgeW91IGhhdmUgOCBvdXRzIChpbiB0aGUgZmxvcCkgdGhlbiB5b3UgaGF2ZSBhcm91bmQgMzIlIGNoYW5jZSB0byBpbXByb3ZlIHlvdXIgaGFuZCBhZnRlciB0aGUgZmxvcCwgd2hpY2ggbWVhbnMgeW91IGluIHByb2ZpdCBJRiB2aWxsYWluIG9ubHkgYmV0IGluIHRoZSBmbG9wIGFuZCBjaGVjayB0dXJuLiBVc3VhbGx5IHRoaXMga2luZCBvZiBzY2VuYXJpb3Mgd29yayBiZXR0ZXIgd2hlbiB5b3UgYXJlIGluIHBvc2l0aW9uIGFuZCBtYWtlIGEgdGhpbiB2YWx1ZSBiZXQgKHVzdWFsbHkgMzMlIG9mIHRoZSBwb3QpIHRoZW4gY2hlY2sgdGhlIHR1cm4gYW5kIGV2YWx1YXRlIHRoZSByaXZlci4gCkkgZW5kZWQgdXAgZ2V0dGluZyBhIGJhc2UgR29sZiBhdXRvbWF0aWMgKEJlY2F1c2UgU2FuIEZyYW5jaXNjbyksIGZvciA0MzAwIG9mZiBNU1JQIGJlY2F1c2UgZGllc2VsZ2F0ZS4gCkkgZG8gY29uc2lkZXJhYmx5IHdlbGwgd2hlbiBJIHBsYXkgYXQgbXkgbG9jYWwgY2FyZCByb29tLiAKWW91IHJlYWxseSBzaG91bGQgbmV2ZXIgdGFja2xlLCBwaW4sIGFuZCBraWNrIHNvbWVib2R5IHVubGVzcyB5b3UgZmFjaW5nIGFuIGltbWVkaWF0ZSB0aHJlYXQuIFNvLCBldmVuIHRyeWluZyB0byBlbXBhdGhpemUgd2l0aCB0aGVzZSBwZW9wbGUsIEkgc3RpbGwgY29tZSB1cCBzaG9ydC4uIApCb251cyBtYXRlcmlhbDogRm9yIHRoZSBjb21tZW50ZXJzIGFza2luZyBhYm91dCBwb29wLCBmaXJzdCBvZiBhbGwgY2Fybml2b3JlcyBoYXZlIGEgaGVjayBvZiBhIGxvdCBsZXNzIHBvb3AgYmVjYXVzZSBpdCBub3QgcGFja2VkIHVwIHdpdGggaW5zb2x1YmxlIHBsYW50IG1hdGVyaWFsLCBhbmQgaWYgeW91IHdhbnRpbmcgYSB2ZXJ5IGdyYXBoaWMgYW5kIGdyb3NzIGFuc3dlciBoZXJlIHlvdSBnby4gQmFzaWNhbGx5IG15IGRhaWx5IHNtYWxsIGNyYXBzIGFyZSBhIHNvZnRlciBidXQgc3RpbGwgZm9ybWVkIGNvbnNpc3RlbmN5LCBuZXZlciBhbnkgcG9reSBwYXJ0cyBhbmQgdGhleSBzbGlkZSBvdXQgbXkgYXNzaG9sZSB2ZXJ5IGVhc2lseSBhcyBpZiBvbiBhIGxheWVyIG9mIGZhdC4gCkJvaWxpbmcgZG93biBob3cgdG8gZGVjaWRlIHdoYXQgYSBnb29kIGZvcm11bGEgaXMgaGFzIGJlZW4gdGhlIGhhcmRlc3QgcGFydCBvZiB0aGlzIGFydGljbGUgdG8gd3JpdGUgYW5kIHdpbGwgYmUgdGhlIGxlYXN0IHNhdGlzZnlpbmcgdG8gdGhvc2Ugd2hvIGFyZSBpbnRlcmVzdGVkIGluIGEgcXVpY2ssIGVhc3kgd2F5IHRvIGRldGVybWluZSBwYXRpZW50IG5lZWRzIHdpdGhvdXQgc3BlbmRpbmcgYWRkaXRpb25hbCB0aW1lLiBXaGVuIGV2YWx1YXRpbmcgYSBwcm9kdWN0IGZvcm11bGEsIHRoZSBxdWVzdGlvbnMgeW91IHdhbnQgdG8gYXNrIGFyZSBhcyBmb2xsb3dzOi4gCk9uIGVzdCBkYW5zIHVuZSBjZXJ0YWluZSBjb25jZXB0aW9uIGQndW5lIG1kZWNpbmUgaHVtb3JhbGUgYXNzZXogImdyb3NzaXJlIi4gSmUgbSdleGN1c2UgbWFpcyB0b3V0IGNlbGEgZXN0IHF1YW5kIG1tZSB1biBwZXUgImRwYXNzIiBtYWlzIHN1cnRvdXQgYydlc3QgZHUgZGxpcmUgcXVlIGQneSB2b2lyIHVuZSBsYSBzb2x1dGlvbiAgdG91cyBsZXMgcHJvYmxtZXMuIElscyBzZSBzb250IGNvbXBsZXhpZmkgYXZlYyBkZXMgaGlzdG9pcmVzIGRlIHBvbGx1dGlvbiBkaXZlcnNlcyBxdWkgbidleGlzdGFpZW50IHBhcyBlbmNvcmUgIGwncG9xdWUuQyd0YWl0IGxhIGdyYW5kZSBwb3F1ZSBkZSBsYSBWaWUgQ2xhaXJlIChHZW9mZnJveSkgc29ydGUgZGUgY29vcHJhdGl2ZSAoZG9udCBqJ3RhaXMgY2xpZW50KSBxdWkgYSBqb3UgdW4gcmxlIHV0aWxlIHBvdXIgbCdwb3F1ZSBtYWlzIHF1aSBlbiBmYWlzYW50IGxhIHByb21vdGlvbiBkZSBsJ2h1aWxlIGRlIHRvdXJuZXNvbCBzJ2VzdCBxdWFuZCBtbWUgcGxhbnQuIApXQVNISU5HVE9OIChDTk4pICAgU3BlY2lhbCBjb3Vuc2VsIFJvYmVydCBNdWVsbGVyIGhhcyBvZmZlcmVkIHRvIHJlZHVjZSB0aGUgbnVtYmVyIG9mIG9ic3RydWN0aW9uIHJlbGF0ZWQgcXVlc3Rpb25zIFByZXNpZGVudCBEb25hbGQgVHJ1bXAgd291bGQgYmUgYXNrZWQgYnkgaW52ZXN0aWdhdG9ycywgc291cmNlcyBmYW1pbGlhciB3aXRoIHRoZSBuZWdvdGlhdGlvbnMgdGVsbCBDTk4uIEhvd2V2ZXIsIE11ZWxsZXIgd2FudHMgb2JzdHJ1Y3Rpb24gdG8gYmUgYWRkcmVzc2VkIGluIHBlcnNvbiwgbm90IGp1c3QgaW4gd3JpdHRlbiBhbnN3ZXJzLgpMYXd5ZXJzIGFyZW4ndCB0aGUgb25seSBvbmVzIHdobyBhcmUgcmVxdWlyZWQgdG8gaW50ZXJwcmV0IGxhd3MsIGhvd2V2ZXIuIExlZ2FsIHNlY3JldGFyaWVzIG5lZWQgdG8gYmUgYWJsZSB0byByZWFkIGFuZCBzeW50aGVzaXplIG1hdGVyaWFsIHRoZXkgcmVjZWl2ZSBmcm9tIHRoZWlyIHN1cGVydmlzb3JzIGFuZCBtYW5hZ2VyLiAKQSBHcmFuZCBmb3IgQmVzdCBIYW5kIFBva2VyIFJ1biB0byBCZW5lZml0IEdyZWVud2VsbCBGb3VuZGF0aW9uClRoZXJlIGEgdmVyeSB2b2NhbCB3aW5nIG9mIFRydW1wIHN1cHBvcnRlcnMgdGhhdCBoYXRlICJQQyBjdWx0dXJlLiIgVGhleSBmZWVsIHRoYXQgdGhleSBjYW4gc2F5IGpva2VzIHdpdGhvdXQgc29tZW9uZSBnZXR0aW5nIG9mZmVuZGVkLiBMb29rIGF0IHRoZSBodWdlIGFtb3VudCBvZiBzdXBwb3J0IGZvciBSb3NlYW5uZSBhbmQgaGVyICJqb2tlcy4iIExvb2sgYXQgdGhlIGRlZmVuc2Ugb2YgUGV3RGllUGllIGFmdGVyIGhlIGNhbGxlZCBzb21lb25lIGEgbnIgb3V0IG9mIGFuZ2VyLiBUaGV5IHRoaW5rIHRoYXQgbWlub3JpdGllcyBhbmQgd29tZW4gaGF2aW5nIHJlcHJlc2VudGF0aW9uIGF0IHdvcmsgb3IgaW4gdGhlIG1lZGlhIGlzIGEgZm9ybSBvZiBtdWx0aWN1bHR1cmFsaXNtIHNob3ZlZCBkb3duIHRoZWlyIHRocm9hdHMuIApBbmQgYSBzdG9jayBnb2luZyBmcm9tIDEwIG1pbGxpb24gdG8gMTAwIG1pbGxpb24gcmFyZWx5IGhhcHBlbnMsIGdlbmVyYWxseSB5b3Ugd2lsbCBzZWUgYSAyIDUlIGluY3JlYXNlIHBlciB5ZWFyIGlmIHVyIGx1Y2t5Li4gCkF0IHRoaXMgcG9pbnQgSSB2ZXJ5IGNvbmZpZGVudCBJIGZhY2luZyB0d28gN3MuIEF0IHRoZSB0aW1lIEkgdGhvdWdodCBJIGhhZCBhYm91dCAzNSUgZXF1aXR5LCBidXQgSSByZWFsaXplIEkgd2FzbiBhY2NvdW50aW5nIGZvciBlbm91Z2ggZGlydHkgb3V0cyB0aGF0IGZpbGwgdXAgdGhlIDdzICAgSSB3YXMgYWN0dWFsbHkgYXQgYWJvdXQgMjUlLiBBdCAzNSUgSSBnZXR0aW5nIGFsbW9zdCBleGFjdGx5IHRoZSByaWdodCBwb3Qgb2RkcywgYnV0IGF0IDI1JSBJIG5vdCByZWFsbHkgZ2V0dGluZyB0aGUgcmlnaHQgb2RkcyB0byBjYWxsLgpJbiBoZXQga2xlaW5lIGRvcnBqZSBQYXRhIChsZXVrZSBuYWFtKSBzdG9wZW4gd2Ugb29rIHZvb3IgZWVuIGNhY2hlLiBPbnplIHJvdXRlIHdlcmQgZ3JvZW5lciBlbiBncm9lbmVyIGVuIGRlIGF1dG9zdHJhZGUgaGVlbCBib2NodGlnLCB0dXNzZW4gZGUgaGV1dmVscyBlbiBsYW5ncyBlZW4gcml2aWVyLiAKQXMgd2l0aCBhbnkgZ2FtZSB3aG9ldmVyIGNvbWVzIGhvbWUgd2l0aCB0aGUgYmVzdCBjYXJkIGluIGFyb3VuZCBpcyB0aGUgd2lubmVyLiAKU28gaW4gdGhpcyBjYXNlLCB3aGVuIG5vYm9keSBsaWZlIG9yIHJlcHV0YXRpb24gb3IgY2FyZWVyIGlzIG9uIHRoZSBsaW5lLCBpcyBpdCBzbyBiYWQgdG8gdGFrZSBoZXIgYXQgaGVyIHdvcmQ/IFdoZW4gdGhlIGNvbnNlcXVlbmNlIG9mIGJlbGlldmluZyBoZXIgaXMgdGhhdCB5b3UgYWRtaXQgdGhhdCBzZXh1YWwgYXNzYXVsdCBjYW4gYW5kIGRvZXMgaGFwcGVuIGluIHRoZSBtaWxpdGFyeSwgd2hhdCB0aGUgZnVja2luZyBoYXJtPwpIaXMgc3RhbnMgaGF2ZW4ndCB0YWtlbiB0aGUgbmV3cyB3ZWxsIGFuZCB0aGV5J3JlIGFjY3VzaW5nIEZ1bmltYXRpb24gb2YgZmlyaW5nIGhpbSBiYXNlZCBvZmYgIm5vIGV2aWRlbmNlIiBhbmQgdGhhdCB0aGV5J3JlIGRpc3Jlc3BlY3RpbmcgaGltIGZvciBhZnRlciBhbGwgdGhlIHllYXJzIG9mICJzZXJ2aWNlIiBoZSdzIHB1dCBpbiBmb3IgdGhlbSBhbmQgYWxsIHRoZSAibW9uZXkgdGhleSBtYWRlIG9mZiBmcm9tIGhpbSIuIApJJ20gbGVhcm5lZCByZWNlbnRseSB0aGF0IHlvdSBjYW4gcmVhbGx5IGxvdmUgYSBjb250ZXN0YW50IGJ1dCB0aGV5IHN0aWxsIG1pZ2h0IG5vdCBtYWtlIGEgZ29vZCBsZWFkLiAKVGhvdWdodHMsIGFzIGZhciBhcyBJIGtub3cgYW5kIGFzIGhlaW5vdXMgYXMgaGlzIG1heSBoYXZlIGJlZW4sIHN0aWxsIGFyZSBub3QgYSBjcmltZS4gCkRvY3VtZW50IHRpdGxlZDpUaGUgY291cnQgc2F5cyB0aGF0IHRoZSBkZWZlbnNlIG5hbWVkIG5pbmUgcGVvcGxlIHdobyBtYXkgaGF2ZSBoYWQgb3Bwb3J0dW5pdHkgYnV0IG5vIG1vdGl2ZSBpcyBnaXZlbiBieSBkZWZlbnNlIGFuZCBtZW50aW9ucyBzZXZlcmFsIHBsYWNlcyB3aGVyZSB0aGV5IGRpZG4gY29ubmVjdCB0aGUgZG90cyB0aGV5IGxhaWQgb3V0LiAKVGhlc2UgY2hpcHMgZG8gbm90IGhhdmUgbW9uZXRhcnkgdmFsdWUgYW5kIGlzIHVzZWQgc29sZWx5IGZvciB0aGUgdG91cm5hbWVudC4uIApUbyBtYWtlIHRoZSB0aW1lIGNoYW5nZSBlYXNpZXIsIHdoaWNoIGNhbiB0YWtlIHlvdXIgYm9keSB1cCB0byBhIHdlZWsgdG8gYWRqdXN0IHRvLCBuZXVyb2xvZ2lzdCBhbmQgc2xlZXAgZXhwZXJ0IG9mIHRoZSBDbGV2ZWxhbmQgQ2xpbmljIFRpbmEgV2F0ZXJzLCBNRCwgc3VnZ2VzdHMgbWFraW5nIHNtYWxsIGNoYW5nZXMgaW4gdGhlIHdlZWtzIGxlYWRpbmcgdXAgdG8gdGhlIHN0YXJ0IG9mIERheWxpZ2h0IFNhdmluZy4gCkFsc28gYSBnb29kIGVhcmx5IHRpcCBmb3IgbmV3IHBsYXllcnMgaXMgbm90IHRvIGJ1eSBtb2RpZmljYXRpb25zIGZvciB5b3VyIHNoaXBzIGJ1dCB0byBnZXQgbW9yZSBzbG90cyB0byBoYXZlIG1vcmUgc2hpcHMgdG8gcGxheSB3aXRoIHdoZW4gd2FpdGluZyBmb3Igb3RoZXJzIHRvIGJlIHJlcGFpcmVkLi4gCkluIHRoZSBOb3J0aGVhc3QsIHRoZXkgZWFybmVkIHRoZSBoaWdoZXN0IHNhbGFyaWVzIG9mICQ2MywwMDAgaW4gTmV3IFlvcmsgYW5kIHRoZSBsb3dlc3Qgb2YgJDQ1LDAwMCBpbiBNYWluZSwgYWNjb3JkaW5nIHRvIEluZGVlZC4gCkV2ZXJ5b25lIGhlcmUgZ29lcyBvbiBhbmQgb24gYWJvdXQgaG93IGFueW9uZSBiZWF0aW5nIG1pY3Jvc3Rha2VzIHdvdWxkIGNydXNoIGxpdmUgZ2FtZXMuIFRoaXMgd291bGQgYmUgdHJ1ZSBpZiB0aGUgZ3V5cyBiZWF0aW5nIG1pY3Jvc3Rha2VzIHdvbiBhdCBwb2tlciBiZWNhdXNlIHRoZXkgdW5kZXJzdG9vZCBwb2tlci4gCkFuZCB0aGUgdG9kYXkgaXQgZnJlZXplcyB1cCB0d2ljZSBvbiBtZS4gSSBrbm93IGlmIEkgdXBkYXRlIG15IHZpZGVvIGNhcmQgb3IgYnV5IGEgbmV3IGNvbXB1dGVyIEkgd291bGRuJ3QgaGF2ZSB0aGF0IHdvcnJ5LiBCdXQgYmVpbmcgcmV0aXJlZCBpdCBpcyBhbGwgYWJvdXQgbm90IHNwZW5kaW5nIG1vbmV5IEkgZG9uJ3QgaGF2ZS4gCldpbG1hIEJlcmdmZWxkIG9mIHRoZSBDbGV2ZWxhbmQgQ2xpbmljLCBhcmUgc2tlcHRpY2FsIG9mIHRoZSBubyBwb28gaWRlYS4gCkFsc28sIEkgZmFpcmx5IGNlcnRhaW4gSSBzYWlkIHRoYXQgdGhlIHN0b3Agd2FzIGhhbmRsZWQgcG9vcmx5LiBEcnVnIGNoYXJnZXMgYXJlIGRpZmZpY3VsdCBtYWlubHkgYmVjYXVzZSBwb3NzZXNzaW9uIHdpdGggaW50ZW50IGlzIGZyZXF1ZW50bHkgcmVkdWNlZCB0byBzaW1wbGUgcG9zc2Vzc2lvbi4gCkFtIDEuIApFeCBtaWxpdGFyeSBoZXJlLiBZb3VyIGh1c2JhbmQgaGFzIGEgYmV0dGVyIG1lbnRhbGl0eSBhYm91dCB0aGlzLiBUaGlzIGlzIGZvciB0aGUgY2hpbGQuIElmIHlvdXIgc2lzdGVyIGRpZG4gaGF2ZSBmYW1pbHkgdG8gaGVscCwgeW91ciBuaWVjZSB3b3VsZCBiZSBpbiBhIGZvc3RlciBob21lIG9yIHBhaXJlZCB3aXRoIGEgbWlsaXRhcnkgZmFtaWx5IHRoYXQgd291bGQgdGFrZSBoZXIgaW4uIFRoYXQgaG93IGl0IHdvcmtzLiBZb3UgbG9zZSB0ZW1wb3JhcnkgY3VzdG9keSBvZiB5b3VyIGtpZCB3aGVuIHlvdSBoYXZlIGEgdGVtcG9yYXJ5IGRlcGxveW1lbnQuIEl0IGEgdGVycmlmeWluZyBzaXR1YXRpb24uIFNvbWUgcGVvcGxlIHdpdGhvdXQgaGVscCBoYW5kIHRoZWlyIGtpZCBvdmVyIHRvIHN0cmFuZ2Vycy4gSSBnZXQgeW91ciBmcnVzdHJhdGVkIGJlY2F1c2UgeW91IHVzZSB0byBhbHdheXMgY29taW5nIGZpcnN0IGJ1dCB5b3UgbmVlZCB0byBzdWNrIGl0IHVwIGxpa2UgeW91IGRvIG9uIHRoZSBkYXlzIHlvdSBkb24gZmVlbCBsaWtlIHRyYWluaW5nLiBZb3UgaGF2ZSB0aGUgbWVudGFsIHN0cmVuZ3RoIGhlcmUsIGp1c3QgYXBwbHkgaXQgdG8geW91ciBjdXJyZW50IHNpdHVhdGlvbi4gVGhpcyBpcyBhIGNoYWxsZW5nZSBhbmQgeW91IHdpbGwgb3ZlcmNvbWUgaXQuCkFuZCBmb3IgbWUsIHRoYW5rIEdvZCBpdCBpcy4gCkkgYWxzbyByZWZsZWN0IG9uIEplc3VzLCB3aG8gb24gc2V2ZXJhbCBvY2Nhc2lvbnMgd2l0aGRyZXcgZnJvbSBjcm93ZHMgdG8gcHJheSB0byBoaXMgRmF0aGVyLiBIdW5kcmVkcywgcG9zc2libHkgdGhvdXNhbmRzLCBvZiBwZW9wbGUgd2VyZSBhbG1vc3QgY29uc3RhbnRseSBmb2xsb3dpbmcgaGltIGFyb3VuZCBkYWlseS4gSXQgZGlkbiBzZWVtIHRvIG1hdHRlciB3aGVyZSBoZSB3ZW50LiBFdmVuIHdoZW4gaGUgc2xlcHQsIHNvbWVvbmUgd2FzIGFsbW9zdCBhbHdheXMgd2l0aCBoaW0uCktub3dpbmcgd2hhdCB3ZSBrbm93IG5vdywgbm9ib2R5IHdvdWxkIGNhbGwgeW91IGNyYXp5IGZvciBub3Qgd2FudGluZyB0byBiZSBwdXQgb24gT3h5IENvbnRpbi4gClJvZG5leSBSdWRlLCB3aG8gaGFzIHRvdXJlZCBzaW5jZSB0aGUgYW5kIGJlZW4gbm9taW5hdGVkIGZvciBtdWx0aXBsZSBBUklBIEF3YXJkcyBmb3IgaGlzIGNvbWVkeSBhbGJ1bXMsIHJlbGllZCBvbiBzaW1pbGFyIHRvcGljcyBhcyBoaXMgYnJlYWQgYW5kIGJ1dHRlci4KQnV0IGl0J3MganVzdCB0aGUgZ2VuZXJhbCBmZWVsaW5nIG9mIHRoZSBtdXNpYyAgIHRoZSBzb3VuZCwgdGhlIG92ZXJhbGwgc291bmQgYW5kIHRoZSBlZmZlY3QsIGZvciBtZSwgaGFzIGEgZ3JlYXQgc2Vuc2Ugb2Ygb3B0aW1pc20uIEFuZCBJIGZlZWwgLCBhcyBhIHBlcnNvbiwgSSdtIGtpbmQgb2YgYW4gb3B0aW1pc3RpYyBwZXJzb24uIApCdXQgd2hhdCB5b3UgaGF2ZSB0byB1bmRlcnN0YW5kIGlzIHRoYXQgaGlzdG9yeSBoYXMgYWxyZWFkeSBtYWRlIGNlcnRhaW4gZ3JvdXBzLCBzdWNoIGFzIHdvbWVuLCBpbnRvIHZpY3RpbXM7IG92ZXIgeWVhcnMgb2Ygc3VianVnYXRpb24gYW5kIGZvcmNlZCBzZXJ2aXR1ZGUsIGp1c3QgbGlrZSBoaXN0b3J5IGhhcyBtYWRlIG1hbnkgZGlmZmVyZW50IHJhY2lhbC9ldGhuaWMvY3VsdHVyYWwvZ2VuZGVyIGdyb3VwcyBpbnRvIHZpY3RpbXMuIApUaGlzIGlzIHBlcmhhcHMgdGhlIGZpcnN0IHB1YmxpY2F0aW9uIGluIGEgam91cm5hbCBvZiB0aGUgZG90IG1ldGhvZCBvZiB0cmFuc2NyaWJlZCBzaWduYWxzIG9mIGEgcmVjb3JkaW5nIGVsZWN0cm9tYWduZXRpYyB0ZWxlZ3JhcGguIApQcmljZSBjaGVjayB0aGUgZHJ1ZyBpbiBxdWVzdGlvbiBhdCBlYWNoIHBoYXJtYWN5IGJlY2F1c2UgdGhlIGFtb3VudHMgd2lsbCBiZSBkaWZmZXJlbnQuIENvbXBhcmUgdGhhdCBhbW91bnQgdG8gZ29vZCByeCB3aGlsZSBrZWVwaW5nIGluIG1pbmQgaWYgeW91IHVzZSB5b3VyIGluc3VyYW5jZSBjYXJkIGl0IGdvZXMgdG93YXJkcyB5b3VyIGRlZHVjdGlibGUsIG91dCBvZiBwb2NrZXQgbWF4IGFuZCB5b3UgYXJlIHBheWluZyB3aXRoIHRheCBmcmVlIGRvbGxhcnMuIApKYXBhbiBoYWQgdGhlaXIgdXJiYW5pemF0aW9uIGFuZCBpbmR1c3RyaWFsaXphdGlvbiBzdGFnZSBtdWNoIGVhcmxpZXIgdGhhbiBTb3V0aCBLb3JlYSBkaWQgc28gVG9reW8gbG9va3MgYSBsaXR0bGUgZHVsbCBhbmQgbm90IGFzICJtb2Rlcm4iIGluIGNvbXBhcmlzb24uIEluIHR1cm4sIFRva3lvIHByb2JhYmx5IHByb2R1Y2VzIG11Y2ggbGVzcyBwb2xsdXRpb24gdGhhbiBTZW91bCBkb2VzIHRvZGF5LnplZHNvbmF0YSAgNCBwb2ludHMgIHN1Ym1pdHRlZCAxMiBkYXlzIGFnb0kgZG9uIHRoaW5rIHdlIGFyZSBhcyBjbG9zZSB0byB0aGUgbWluaW11bSB3YWdlIGFzIHlvdSBzYXksIGJ1dCB3ZSBhcmUgc3VyZWx5IGdldHRpbmcgdGhlcmUuIApUaGUgdHdvLCBmaXZlLCBhbmQgZXh0cmEgbmluZSBhcmUgbm90IGZhY3RvcmVkIGludG8gdGhlIGhhbmQuIChGdWxsIEFuc3dlcikuIApTZWUgcmVsYXRlZCBsaW5rcy4gCkhlIHdhcyB0aGUgYmVsb3ZlZCBodXNiYW5kIG9mIExpc2UgKFBldGl0KSBhbmQgZGV2b3RlZCBmYXRoZXIgb2YgUGF1bC4gCiJJZiB0aGF0IHBlcnNvbiAoc21va2luZyBjcmFjaykgaGFwcGVucyB0byBiZSBhIHNtYWxsIGZlbWFsZSBvciBzbWFsbCBndXkgLiB0aGUgY2hhbmNlcyBvZiB0aGUgdmlvbGVuY2Ugb2NjdXJyaW5nIGdvZXMgdXAgZXhwb25lbnRpYWxseS4iClRoZSBudXJzZSBzYXQgZG93biBhbmQgYm90aCBvZiB1cyBkaWRuIHJlYWxseSBrbm93IHdoYXQgdG8gZG8gYmVjYXVzZSBldmVyeW9uZSB3YXMgc2FmZS4gClN3ZWRpc2ggbWFzc2FnZSBpcyBhIHZpZ29yb3VzIHN5c3RlbSBvZiB0cmVhdG1lbnQgZGVzaWduZWQgdG8gZW5lcmdpemUgdGhlIGJvZHkgYnkgc3RpbXVsYXRpbmcgY2lyY3VsYXRpb24uIApXaGVuIGNyZWF0aW5nIHRoZSB3ZWJzaXRlIHdoZXJlIHlvdSB3aWxsIHNob3cgb2ZmIGFsbCB0aG9zZSBicmlnaHQsIGNvbG9yZnVsIFBhdWxzb24gQ2xheSBQb2tlciBDaGlwcywgaXQgaXMgaW1wb3J0YW50IHRvIGVuc3VyZSB0aGF0IHlvdSByZW1lbWJlciB0aGF0IHlvdSBhcmUgdGFyZ2V0aW5nIGEgcGFydGljdWxhciBhdWRpZW5jZS4gV2hlbiBwbGFjaW5nIGFydGljbGVzLCBibG9ncywgYW5kIG90aGVyIHR5cGVzIG9mIGluZm9ybWF0aW9uIG9uIENsYXkgUG9rZXIgQ2hpcHMgb24geW91ciB3ZWJzaXRlLCBrZWVwIGl0IHJlbGV2YW50IHRvIHRoZSB0YXJnZXQgYXVkaWVuY2UgdGhhdCB5b3UgYXJlIHNlZWtpbmcgdG8gYXR0cmFjdC4gVGhpcyB3aWxsIGVuc3VyZSB0aGF0IHdoZW4gcG90ZW50aWFsIGN1c3RvbWVycyB2aXNpdCB5b3VyIHBhZ2UsIHRoZXkgd2lsbCBzdGF5IG9uIHlvdXIgcGFnZS4KNy4gU2V0IGJvb2J5IHRyYXBzIGluIHlvdXIgaG91c2UuIElmIHlvdSB0aGluayB5b3VyIGNoZWF0aW5nIGh1c2JhbmQgbWF5IGJlIGJyaW5naW5nIHNvbWVvbmUgaW50byB5b3VyIGhvbWUgd2hpbGUgeW91IGFyZSB0cmF2ZWxpbmcgb3Igb3V0LCBzZXQgc29tZSB0cmFwcy4gCiJJdCdzIHZlcnkgZXhjaXRpbmcsIiBzYWlkIFNldmVyc29uLCB3aG8gaGFzIDE1IHRhY2tsZXMgaW4gMTIyIGNhcmVlciBzbmFwcyBvbiBkZWZlbnNlLiAiV2UndmUgYmVlbiBwcmVwYXJlZCBzaW5jZSBmYWxsIGNhbXAsIHN3aXRjaGluZyB3aXRoIHRoZSAoc3RhcnRlcnMpIGFuZCAoYmFja3VwcykgaW4gY2FzZSBhbnl0aGluZyB3ZXJlIHRvIGhhcHBlbi4gV2UgaGFkIHRoaXMgaGFwcGVuIGxhc3QgeWVhciwgc28gd2Ugd2VyZSB3ZWxsIHByZXBhcmVkLgpXaGVuIHBvbGljZSBhcHByb2FjaGVkIFdlbHNoIGFuZCBTdXBoZWVydCBvdXRzaWRlIHRoZSBob3RlbCwgdGhleSBzdGlsbCBoYWQgY29pbnMgaW4gdGhlaXIgcG9ja2V0cy4gU3VwaGVlcnQgYWRtaXR0ZWQgcmVhY2hpbmcgaW50byB0aGUgbWFjaGluZSBhdCBsZWFzdCAyMCB0aW1lcyBhbmQgaGFkICQzMCBpbiAkMSBjb2lucywgd2hpbGUgV2Vsc2ggaGFkICQxMS4gSXQgd2FzIGNsYWltZWQgYnkgU3VwaGVlcnQgdGhhdCBXZWxzaCBzaG9vayB0aGUgZG9vciBvZmYgdGhlIG1hY2hpbmUsIGJ1dCBoZSBiZWxpZXZlZCBpdCB3YXMgbm90IGxvY2tlZC4gCiJIYXZpbmcgYWxyZWFkeSBzaWduZWQgdGFrZXMgYSBsb3Qgb2YgcHJlc3N1cmUgb2ZmIG15IHNob3VsZGVycywiIFJlbmNrIHNhaWQuICJMYXN0IHllYXIsIEkgc3RhcnRlZCByZWFsbHkgc2xvdyBhbmQgSSB3YXMgcHJlc3NpbmcgYSBsaXR0bGUgYml0LiBJIGNhbiByZWFsbHkgcGxheSBmcmVlIGFuZCBsb29zZSBtaW5kZWQgYW5kIGp1c3QgcGxheSB3aXRoIG15IGxvdmUgZm9yIHRoZSBnYW1lLiAKTm8uIEJ1dCBmb3IgbWUgSSBsb3ZlIGl0LiBJIGhhdmUgbWF5YmUgYSBkb3plbiBjb25zb2xlcyB0aGF0IEkgZG9uIHRvdWNoLiAKQW5kIHRoZXkncmUgbm90IGNhbGxlZCBvbmUgYXJtZWQgYmFuZGl0cyBmb3Igbm90aGluZy4gQXVzdHJhbGlhJ3MgMjAwLDAwMCBvZGQgcG9rZXIgbWFjaGluZXMgdHJhbnNmZXIgbW9yZSB0aGFuICQxMCBiaWxsaW9uIGRvbGxhcnMgZWFjaCB5ZWFyIGZyb20gdGhlIHBvY2tldHMgb2YgQXVzdHJhbGlhbiBnYW1ibGVycyB0byB0aGUgY29mZmVycyBvZiBwdWIgb3duZXJzLCBjbHViIG1hbmFnZW1lbnRzLCBhbmQgc3RhdGUgZ292ZXJubWVudHMuIApJdCdzIGEgc21vb3RoIHJpZGUgYW5kIGl0IGRvZXNuJ3QgZmVlbCBhcyBiaWcgYXMgaXQgaXMgaWYgdGhhdCBtYWtlcyBzZW5zZS4gSXQncyBnb2luZyB0byB0YWtlIG1lIGEgd2hpbGUgdG8gZ2V0IHVzZWQgdG8gYWxsIHRoZSBnYWRnZXRzIHNpbmNlIEkndmUgbmV2ZXIgaGFkIGEgY2FyIHRoYXQgZXZlbiBoYWQgYXV0b21hdGljIGxvY2tzIG9yIHdpbmRvd3MuIApJdCBub3QgbWFnaWNhbGx5IGdvaW5nIHRvIG1ha2UgaGVyIHN0b21hY2ggd29yayBhZ2FpbiwgaXQgcHJpbWFyaWx5IGEgdHJlYXRtZW50IGZvciBuYXVzZWEgYXNzb2NpYXRlZCB3aXRoIEdQIGFuZCBpbiBjYXNlcyB3aGVyZSB0aGluZ3MgYXJlIHRoaXMgZGlyZSBpdCBub3QgYSByZWFsbHkgdGhlIGJlc3Qgb3B0aW9uIGFuZCB0aGUgc3VyZ2VyeSB3b3VsZCBsaWtlbHkgY2F1c2UgbW9yZSBpc3N1ZXMgZ2l2ZW4gaGVyIHBvb3IgbnV0cml0aW9uYWwgc3RhdGUuIApJJ20gYWx3YXlzIGdldHRpbmcgY29tbWVudHMgYW5kIGNvbXBsaW1lbnRzIGFib3V0IGhvdyBnZW50bGUgc2hlIGlzLiAKRXQgZ3JhdHVpdGUgZGFucyBsZXMgZGV1eCBzZW5zLk1vbiBwc2V1ZG9MZSBoYXNhcmQgIHZvdWx1IHF1J2VuIGNoZXJjaGFudCB1biBwc2V1ZG8gZW4gZHJvdWxhbnQgbGVzIHBhZ2VzIGQndW5lICJiaW9ncmFwaGllIHVuaXZlcnNlbGxlIiwgamUgc29pcyB0b21iIHN1ciBsZSBibGF6ZSBkJ3VuIG1kZWNpbiBhbHNhY2llbiBjbGJyZSBhdSBYVklJSW1lIHNpY2xlLiBKJ2FpIGFkb3B0IGNlIG5vbSBwYXJjZSBxdWUgamUgbCdhaSB0cm91diBldXBob25pcXVlIChpbCBzb25uZSBiaWVuICEpIFNhbnMgbWUgcmVuZHJlIGNvbXB0ZSBxdWUgTWV0emdlciBzaWduaWZpZSA6IGJvdWNoZXIgISBBbG9ycyBuZSB2b3VzIHRvbm5leiBwb2ludCBxdWUsIHBhcmZvaXMsIGplICJ0YWlsbGUgZGFucyBsYSB2aWFuZGUiLlVuIHRvbiB2b2xvbnRhaXJlbWVudCBwcm92b3F1YW50IHZvaXIgInN1YnZlcnNpZiIgZXQgbW1lICJqdWJpbGF0b2lyZSIgIUljaSBwYXMgZGUgbGFuZ3VlIGRlIGJvaXMuIE9uIGFwcGVsbGUgdW4gY2hhdCB1biBjaGF0ICEgRXQgc2kgYSB2b3VzIGRmcmlzZSwgcmFwcGVsZXogdm91cyBxdWUgYydlc3QgbGUgcGx1cyBnbiBxdWkgcydlbiB2YS5DeW5pcXVlID8gT3VpIG1haXMgbGUgdGVybWUgcydhcHBsaXF1YWl0ICB1bmUgImxpdGUiICFPbiBtJ2EgcmVwcm9jaCBkdSBjeW5pc21lLiAKU3Bpbm5pbmcgaXQgb2ZmIHdvdWxkIGJlIGVhc3ksIExhbW91cmV1eCBzYWlkLCBhdCB0aGUgc2FtZSB0aW1lLCBpdCB3ZWFrZW5zIFNOQy4gCk91ciBzdHJhdGEgbG90cyBvbiB0aGUgc3RyYXRhIHBsYW4gYXJlIG51bWJlcmVkIG9uZSB0byAzMDAgYW5kIHRoZSB1bml0IGVudGl0bGVtZW50IGlzIGJhc2VkIG9uIHRoZSBtZWFzdXJlZCBhcmVhcyBzaG93biBvbiB0aGUgcGxhbi4gCkl0IG9rYXkgdG8gYmUgYSBUUlVFIFJlcHVibGljYW4uIFRob3NlIGNsb3ducyBhcmUgbm90IHRydWUgUmVwdWJsaWNhbnMuClN0IEdlb3JnZSBIb3NwaXRhbCBpbiBLb2dhcmFoIHdhcyB0aGUgbW9zdCBmcmVxdWVudCByZWNpcGllbnQgb2YgZG9uYXRpb25zIHRocm91Z2ggdGhpcyBwcm9jZXNzLCBhY2NlcHRpbmcgbW9yZSB0aGFuICQzMDAsMDAwIGFzIHBhcnQgb2Ygc2V2ZW4gc3VjY2Vzc2Z1bCBhcHBsaWNhdGlvbnMgYnkgdmVudWVzIHRvIGFkZCBhcyBtYW55IGFzIDE2IG1hY2hpbmVzIHRvIHRoZWlyIGdhbWluZyByb29tcy4KSSBzZWFyY2hlZCBmb3IgYSBmdW4gdG8ga25pdCBsYWN5IHBhdHRlcm4gd2l0aCBhIHNpbXBsZSBib2JibGVzb21ldGhpbmcgdGhhdCB3b3VsZCBzaG93IG9mZiB0aGUgLiAKVE9LWU8gICBBIDExNiB5ZWFyIG9sZCBKYXBhbmVzZSB3b21hbiB3aG8gbG92ZXMgcGxheWluZyB0aGUgYm9hcmQgZ2FtZSBPdGhlbGxvIHdhcyBob25vdXJlZCBTYXR1cmRheSBhcyB0aGUgd29ybGQncyBvbGRlc3QgbGl2aW5nIHBlcnNvbiBieSBHdWlubmVzcyBXb3JsZCBSZWNvcmRzLiBIZXIgZmFtaWx5IGFuZCB0aGUgbWF5b3Igd2VyZSBwcmVzZW50IHRvIGNlbGVicmF0ZS4KVG8gZGVtb25zdHJhdGU6IEluIEVuZ2xpc2ggaWYgSSByZW1vdmUgYWxsIHRoZSB2b3dlbHMgZXhjZXB0IG9uZSwgaXQgaXMgc3RpbGwgbGVnaWJsZSwgaG9wZWZ1bGx5LiBJbiBIZWJyZXcsIGFsbCB5b3UgbmVlZCBpcyBhIHZvd2VsIG1hcmtlci4gSW4gdGhpcyBjYXNlIEknbSB1c2luZyB0aGUgbGV0dGVyICdlJy4gSXQncyBkaWZmaWN1bHQgaW4gRW5nbGlzaCBvbmx5IGJlY2F1c2UgRW5nbGlzaCBoYXMgY29tcGxpY2F0ZWQgdm93ZWwgc3RydWN0dXJlcy4gSGVicmV3IGhhcyBtdWNoIGVhc2llciBzcGVsbGluZyBydWxlcyBiZWNhdXNlIHRoZSBtZWFuaW5nIG9mIHRoZSB3b3JkIGNhbiBlYXNpbHkgYmUgZm91bmQgaW4gdGhlIHRocmVlIGxldHRlciByb290cyBvZiB0aGUgd29yZC4KQWdhaW4sIEkgYWNjZXB0IHRoYXQgeW91ciBjb25jbHVzaW9uIGlzIGxvZ2ljYWxseSBkZXJpdmVkIGZyb20gdGhlIHByZW1pc2UgdGhhdCBhIHBlcnNvbiBpcyBtb3JhbGx5IG9ibGlnYXRlZCB0byBjb250cmlidXRlIHRoZSBncmVhdGVzdCBnb29kIHRvIHNvY2lldHkgdGhhdCB0aGV5IGZlYXNpYmx5IGNhbiwgYnV0IHRoYXQgcHJlbWlzZSBzZWVtcyB2ZXJ5IGlycmF0aW9uYWwuIApUaGVyZSBhcmUgYWxzbyBhdXRvbWF0aWMgaGFuZGd1bnMsIG1hZ2F6aW5lcyBjYW4gaGF2ZSBhbGwgbWFubmVyIG9mIHNpemVzIG9mIGV4dGVuZGVkIG1hZ2F6aW5lLCB3aGljaCwgYXJlIGRpZmZpY3VsdCB0byBhcXVpcmUsIHRob3VnaCBub3QgaW1wb3NzaWJsZSwgYW5kIG9mdGVuIHRoZSBsYXJnZXN0IHBpc3RvbCBtYWdhemluZXMgaG9sZCBtb3JlIHRoYW4gYSByaWZsZSBtYWdhemluZS4uIApNci4gCkxhc3Qgc2NlbmUgb2YgdGhlIHNlcmllcyB3b3VsZCBiZSBoaW0gd2Fsa2luZyB1cCB0byBoaXMgZmF0aGVyIGFuZCB0aGUgdHdvIG9mIHRoZW0gaHVnZ2luZywgd2l0aCBKb2huIHRlbGxpbmcgaGltIHRoYXQgaGUgZGlkIGdvb2QuIFRoZW4gYmVoaW5kIGhpbSBoZSB3b3VsZCBoZWFyIGEgZmFtaWxpYXIgdm9pY2UgYWdyZWUsIGFuZCB0dXJuIHRvIHNlZSBBcnRodXIuIFRoZSB0aHJlZSBvZiB0aGVtIHdvdWxkIHJpZGUgYXdheSBvbiB0aGVpciBob3JzZXMgaW50byB0aGUgc3Vuc2V0IG9uZSBsYXN0IHRpbWUuLiAKTWF5YmUgdGhleSBsZWZ0IG1lIG9mZiB0aGUgbWFpbGluZyBsaXN0IGZvciBteSBsYXRlbnQgaGV0ZXJvc2V4dWFsIHRlbmRlbmNpZXM/IEJ1dCBJIHN0YXJ0aW5nIHRvIGJlIGNvbnZpbmNlZCB0aGF0IGdheSBkaXZvcmNlIGlzIHBhcnQgb2YgdGhlIGhvbW9zZXh1YWwgYWdlbmRhLgpCeXJuZXMgdGhpcyB5ZWFyIGlzIGhpdHRpbmcgLjMwMywgMTcgaG9tZSBydW5zLCA2NCBSQklzIGFuZCAyOCBzdG9sZW4gYmFzZXMuIApGb3Igc2lnaHRzZWVpbmcgeW91IGdvdCB0byBzZWUgdGhlIEJ1bmQsIHRoZSBZdSBHYXJkZW4sIGFuZCBnbyBjaGVjayBvdXQgWGludGlhbmRpIChhbiB1cCBzY2FsZSByZW5vdmF0ZWQgYmxvY2sgYW5kIHRoZSBiaXJ0aHBsYWNlIG9mIHRoZSBDaGluZXNlIGNvbW11bmlzdCBwYXJ0eSkuIApUaG9zZSBlbXBsb3llZCBmdWxsIHRpbWUgYWxzbyBnZXQgQ2VudHJhbCBQcm92aWRlbnQgRnVuZCBjb250cmlidXRpb25zLnZlcnkgdXBmcm9udC4gSSB0ZWxsIHRoZW0gd2hhdCBJIGNhbiBhZmZvcmQsIGFuZCB0aGV5IHdpbGwgZGVjaWRlIGlmIHdoYXQgSSBhbSBvZmZlcmluZyBpcyBmYWlyLiBJIGRvIG5vdCBzaG9ydCBjaGFuZ2UgdGhlbS5rbm93IHNvbWUgb2YgdGhlbSBoYXZlIGNvbXBsaWNhdGVkIGJhY2tncm91bmRzIHNvIEkgdHJ5IHRvIGJlIGZsZXhpYmxlIGFuZCBhY2NvbW1vZGF0ZSB0aGVpciByZXF1ZXN0cywgc2FpZCBNciBIYW4sIHdobyBhbGxvd3Mgc29tZSBvZiB0aGUgbG93IGluY29tZSBob3VzZXdpdmVzIHRvIGJyaW5nIHRoZWlyIGNoaWxkcmVuIHRvIHdvcmsuSGUgcmVhZGlseSBhZG1pdHMgdGhhdCBpdCB3b3VsZCBiZSBhIGxvdCBtb3JlIGNvc3QgZWZmZWN0aXZlIGFuZCBsb2dpc3RpY2FsbHkgbGVzcyBjb21wbGljYXRlZCB0byBoaXJlIHJlZ3VsYXIsIHlvdW5nZXIsIHN0YWZmLiAKVHdvIHNpdHVhdGlvbnMgc2hvdWxkIHNlbmQgdXAgYSByZWQgZmxhZyB3aGVuIHlvdSBzZWUgdGhlbS4gCkpha2UncyBEaW5lciBvd25lciwgTHlsZSBIaWNrcywgc2F5cywgIldoZW4gbXkgZGF1Z2h0ZXIgQ2FycmllIHdhcyBhY2NlcHRlZCBpbnRvIEhhYml0YXQncyBIb21lb3duZXJzaGlwIFByb2dyYW0gaW4gMjAwNiwgSSB3YW50ZWQgdG8gc3RhcnQgYSBmdW5kcmFpc2luZyBlZmZvcnQgdGhhdCB0aGUgcmVndWxhciBKb2UgY291bGQgYmUgYSBwYXJ0IG9mLiBGcmFuayBQYXRrYSwgdGhlIGxhdGUgUmljaGFyZCBTbWl0aCBhbmQgSSBkZXZlbG9wZWQgSG9sZCBFbScgZm9yIEhhYml0YXQsIHdlZWtseSBwb2tlciBnYW1lcyB0byByYWlzZSBtb25leSBmb3IgQmVuZCBBcmVhIEhhYml0YXQuLiAKVGhlIGNhc2UgZm9yIERhbW5hdGlvbiA6IEFuIGVlcmllLCBidXQgcGxlYXNhbnQgcm9vbSBkb21pbmF0ZWQgYnkgYSBXSEFUIFRIRSBGVUNLIElTIFRIQVQgVEhJTkc/CkRlciBpbnp3aXNjaGVuIDMwIGogU2Nod2VkZSBoYXQgYmVpIFdlbHRtZWlzdGVyc2NoYWZ0ZW4gYWxsZXMgZ2V3b25uZW4sIHdhcyBlcyB6dSBnZXdpbm5lbiBnaWJ0LiAKUmFjb29uYXR0YWNrICAyNiwwMDcgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KU28gcG9saXRpY2lhbnMgZG8gbm90aGluZywgYmVjYXVzZSBpdCBtaWdodCBsb3NlIHRoZW0gdm90ZXJzLiAKV2UgZGlkbid0IGhhdmUgZW5vdWdoIHBlb3BsZSBzbyB3ZSBlbmRlZCB1cCBpbnZpdGluZyBhIGd1eSB3ZSB1c2VkIHRvIHBsYXkgd2l0aCB5ZWFycyBhZ28uIApFdmVuIHRob3VnaCB5b3UgbWF5IHJvdXRpbmVseSBwbGF5IHBva2VyIHdpdGggdGhlIHNhbWUgcGVvcGxlLCB0aGVyZSBtYXkgc3RpbGwgYmUgc3BlY2lhbCBldmVudHMuIEFtb25nIG90aGVyIHRoaW5ncywgeW91IG1heSB3YW50IHRvIGhvc3QgYSBjZXJ0YWluIGdyb3VwIG9mIHBlb3BsZSBvbmNlIG9yIHR3aWNlIGEgeWVhci4gTm8gbWF0dGVyIHdoZXRoZXIgeW91IG9yZ2FuaXplIGEgcG9rZXIgZ2FtZSBmb3IgY2hhcml0eSBldmVudHMsIG9yIHNvbWUgb3RoZXIgdHlwZSBvZiBnYXRoZXJpbmcsIHlvdSBtYXkgd2FudCB0byBoYXZlIGEgbmV3IGRlY2sgb2YgY2FyZHMgb24gaGFuZC4uIApUaGlzIGlzIG11Y2ggZWFzaWVyIHdpdGggY2VydGFpbiBpdGVtcyB0aGFuIHdpdGggb3RoZXJzLiBGb3IgZXhhbXBsZSwgYXJ0LCBhcnRpZmFjdHMsIGNvbGxlY3RpYmxlcy4gCkkgZG9uIGNhcmUgbXVjaCBmb3IgYWN0aW9uIGhlcm8gcm9tYW5jZXMgd2hlcmUgdGhlIE1DIHJlc2N1ZXMgc29tZSBicm9hZCB0aGVuIGhhcyBzZXggd2l0aCBoZXIgYSBmZXcgaG91cnMgbGF0ZXIgb25seSB0byBoYXZlIGhlciBkaWUgYXQgdGhlIGNsaW1heCBvZiB0aGUgc3RvcnkuIEl0IGJvcmluZywgdW5pbnNwaXJlZCwgcGF0aGV0aWMgYW5kIGRvZXNuIG1ha2UgbWUgZmVlbCBhbnl0aGluZyBmb3IgdGhlIGNoYXJhY3RlcnMgaW52b2x2ZWQuIApUd28gZXZlbnRzIHRoaXMgd2VlayBtYWtlIHRoZSBzY2hpem9waHJlbmljIG5hdHVyZSBvZiB0aGlzIFByZXNpZGVudCB2aXNpYmxlIGZvciBhbGwgdG8gc2VlLiBUaGUgR29vZCBPYmFtYSBvbiB0aGUgZWNvbm9teS4gCk5vdyB3ZSBnaXZlIGhpbSBDb25jZXJ0YSAxOG1nIEVSIG9uY2UgYSBkYXkgYW5kIGhlIGRvZXMgcmVhbGx5IHJlYWxseSB3ZWxsIG9uIGl0LiAKSWYgeW91IGxvb2tpbmcgZm9yIGhlbHAgd2l0aCBhIHBlcnNvbmFsIGJvb2sgcmVjb21tZW5kYXRpb24sIGNvbnN1bHQgb3VyIFN1Z2dlc3RlZCBSZWFkaW5nIHBhZ2Ugb3IgYXNrIGluOiAvci9zdWdnZXN0bWVhYm9va1Byb21vdGlvbmFsIHBvc3RzLCBjb21tZW50cyBmbGFpcnMsIG1lZGlhIG9ubHkgcG9zdHMsIHBlcnNvbmFsIHJlY29tbWVuZGF0aW9uIHJlcXVlc3RzIGluY2wuIApGb3IgT3BlbnRob3MgdG8gcnVuIHlvdXIgY29tcHV0ZXIgaGFzIHRvIGJlIDY0IGJpdCBhbmQgc3VwcG9ydCB4ODYuIEZlYiA3LCAyMDE3IC4gCk9uIG1vc3Qgb2YgdGhlaXIgc29uZ3MsIHRoZSBkdW8gd2FzIGJhY2tlZCBieSB0aGUgQXllcnMgcmh5dGhtIHNlY3Rpb24gb2YgRXZhbnMgYW5kIFdpbGxpYW1zLiBEdXJpbmcgdGhlIHNob3cgRXZhbnMgc3Rvb2Qgb3V0IHdpdGggbWVsb2RpYyBzb2xvcyBhbmQgcHVuY2h5IGZ1bmsgcmh5dGhtcy4KTGlnaHQgYXMgYSBmZWF0aGVyLi4gCk1hbnkgb2YgdGhlIGJveXMgaW5mbHVlbmNlZCB0aHJvdWdoIHRoZSB5ZWFycyBieSBSZXNjaCBhcmUgbm93IG1lbiwgbGlrZSBNaWNoYWVsIEd1aWhlZW4sIG9uZSBvZiB0aGUgZmlyc3QgdG8gYmVjb21lIGFuIEVhZ2xlIFNjb3V0IHVuZGVyIFJlc2NoJ3MgbGVhZGVyc2hpcCwgYWxtb3N0IDMwIHllYXJzIGFnby4gIkkgbGVhcm5lZCBhIGxvdCBhYm91dCB0aGUgU2NvdXRzIGFuZCBhYm91dCBsZWFkZXJzaGlwIHRocm91Z2ggTXIuIFJlc2NoLCIgR3VpaGVlbiBzYWlkLiAKTWVpbiBOaWNrIGJlaSBCZXRzc29uIGlzdCBXZUFBa1RpZ2h0IHNhZyBoYWxsbywgd2VubiBkdSBtYWwgbWl0IG1pciBhbSBUaXNjaCBzaXR6dC4KRm91ciBvZiBhIEtpbmQgICBhbHNvIGtub3duIGFzIHF1YWRzOyBhIGhhbmQgdGhhdCBoYXMgZm91ciBjYXJkcyBvZiB0aGUgc2FtZSByYW5rLiAuIC4KSGlzIG1vdGhlciBvcGVuZWQgaXQgYmVmb3JlIGhlIGdvdCB0aGVyZSBhbmQgc2F3IHRoZSBicm9rZW4gYmljeWNsZSBhbmQgaGVyIGNyeWluZyBzb24uIApUaGluayBEYW5ueSBjYW4gYmUgYW4gdXBwZXIgZWNoZWxvbiBmaWdodGVyLCBoZSBhbHJlYWR5IGlzLiBIZSBjYW4gcHV0IGhpcyBuYW1lIGluIHRoZSBoaXN0b3J5IGJvb2tzLiBIZSBoYXMgYSBsb3Qgb2YgdGFsZW50LiAKWW91IGNoYW5nZSB5b3VyIHR1bmUuIEFuZCB0aGVpciBjYW5jZXIgc3Vydml2YWwgcmF0ZXMgYXJlIDEwIHllYXJzIGJlaGluZCB0aGUgRXVyb3BlYW4gYXZlcmFnZS4gQW5kIGl0IHdvcmtzLiAKSWYgeW91IGFyZSB0aGVpciBsb3dlc3QgdGllciwgdW5mb3J0dW5hdGVseSB0aGV5IG1hZGUgeW91ciAkNDAwIHdvcnRoIG9mIFBva2VyIFBvaW50cyBiZWNvbWUgd29ydGggb25seSAkMTYwLiAKSXQgc2hvd3MgdGhlIGdlb2dyYXBoaWMgcmVhbGl0eSBvZiB0aGUgcG9saXRpY2FsIGJ1YmJsZXMgd2UgbGl2ZSBpbi5JIGhhdGUgdGhhdCB5b3UgYXV0b21hdGljYWxseSBhIGRpY2sgaW4gQW1lcmljYSBpZiB5b3UgZG9uIHRpcC4gOTklIG9mIHRoZSBwb3B1bGF0aW9uIGRvZXNuIHVuZGVyc3RhbmQgbGFib3IgbGF3cy4gClRha2luZyBwbGFjZSBiZXR3ZWVuIDIxIDIzIEp1bHkgaW4gdGhlIGhpc3RvcmljIGVsZWdhbmNlIGFuZCBsdXh1cnkgb2YgU2l4IEhhbWlsdG9uIFBsYWNlIG9mZiBMb25kb24ncyBQYXJrIExhbmUsIFRoZSBWaWN0b3IgUG9rZXIgQ3VwIHdpbGwgYmUgY29udGVzdGVkIGJ5IGFuIGVjbGVjdGljIG1peCBvZiBvbmUgaHVuZHJlZCBjZWxlYnJpdGllcywgcG9rZXIgcHJvZmVzc2lvbmFscywgaW50ZXJuZXQgcXVhbGlmaWVycyBhbmQgaGlnaCBzdGFrZXMgZ2FtYmxlcnMuIApBcyBsb25nIGFzIHlvdSdyZSBvbiB0aGUgc3RyaXAsIEknZCBoaWdobHkgcmVjb21tZW5kIGhvcHBpbmcgZnJvbSBwbGFjZSB0byBwbGFjZSB1bnRpbCB5b3UgZmluZCBzb21ld2hlcmUgeW91IGxpa2UuIApJTUYgY2hpZWYgQ2hyaXN0aW5lIExhZ2FyZGUgc2FpZCBsYXRlIG9uIFN1bmRheSB0aGF0IEdyZWVrIEZpbmFuY2UgTWluaXN0ZXIgWWFuaXMgVmFyb3VmYWtpcyBoYWQgcGxlZGdlZCB0byBtYWtlIHRoZSBwYXltZW50IG9uIHRpbWUgaW4gYSBtZWV0aW5nIGluIFdhc2hpbmd0b24uClBva2VyIGlzIHdpZGVseSBwbGF5ZWQgaW4gdGhvc2UgT3JlZ29uIGNhc2lub3MgYnV0IHRoZSB3aWRlciBvbmxpbmUgcGxhdGZvcm0gaXMgZGVuaWVkIHRvIHdvdWxkIGJlIHBsYXllcnMgYW5kIHRoZSBzYW1lIGFwcGxpZWQgdG8gb3RoZXIgY2xhc3NpYyBnYW1lcyBzdWNoIGFzIGJsYWNramFjayBhbmQgcm91bGV0dGUuIFRoZSBmdXR1cmUgZm9yIGdhbWJsaW5nIGluIE9yZWdvbiBpcyB1bmtub3duIGJ1dCBieSBsb29raW5nIGF0IHRob3NlIG51bWJlcnMsIHRoZSBwb3RlbnRpYWwgZm9yIHZhc3QgcmV2ZW51ZXMgaXMgdGhlcmUgaWYgdGhlIHN0YXRlIHdhbnRzIHRvIHRha2UgYSBtb3JlIHJlbGF4ZWQgYXBwcm9hY2ggdG8gdGhlIGluZHVzdHJ5Li4gClRoaXMgZnJlZSBsaXN0IG9mIGNyb3Nzd29yZCBhbnN3ZXJzLiAKSW4gZmluYW5jZSBhdCBEdWtlIFVuaXZlcnNpdHkuIApUaGVyZSBhcmUgc2VyaW91cyBkaXZpZGVzIGFjcm9zcyB0aGUgcG9saXRpY2FsIHNwZWN0cnVtIGFuZCBtaXNpbmZvcm1hdGlvbiBwbGF5cyBhIGxhcmdlIHJvbGUgaW4gZXhhY2VyYmF0aW5nIHRoZSBzaXR1YXRpb24uIEkgYmVsaWV2ZSBjYWxtZXIgaGVhZHMgbWFraW5nIGluZm9ybWVkIGRlY2lzaW9ucyBjYW4gYW5kIG11c3QgcHJldmFpbC4gClNoZSBkb2VzbiBrbm93IHdoYXQgaGUgdGFsa2luZyBhYm91dCwgb2YgY291cnNlLgoiSSBrbm93IGl0J3Mgbm90IHdyaXR0ZW4gdGhhdCB3YXksIiBzaGUgc2FpZC4KSWYgeW91IGhhdmUgNSB5ZWFycyBpbiBiZXR3ZWVuIGpvYnMgYW5kIHRoYXQgdGltZSBpc24gYWNjb3VudGVkIGZvciwgdGhhdCBkb2VzbiBsb29rIGdvb2QuIApTbyB0ZWxsaW5nIHBsYXllcnMgdG8gInRha2UgYmFyb24iIGlzIGxpa2UgdGVsbGluZyBhIGRyaXZlciB0byAidHVybiIuIFdoZXJlIGFtIEkgdHVybmluZz8gV2hpY2ggZGlyZWN0aW9uPyBXaGVyZSdzIHRoZSB0cmFmZmljIGNvbWluZyBmcm9tPyBXaWxsIHRoZXJlIGJlIGEgdHVybiBsYW5lPyBBbGwgb2YgdGhpcyBpbmZvcm1hdGlvbiBpcyByZWxldmFudCBhbmQgYSBnb29kIGRyaXZlciBpbnRlcm5hbGl6ZXMgaXQgYWxsIG9uIHRoZSBmbHkuIEluIExPTCB5b3UgbWlnaHQgY2FsbCB0aGF0IGdhbWUgc2Vuc2UgYW5kIGl0IGNvbWVzIGZyb20gZXhwZXJpZW5jZSBub3QgZ3VpZGVzLi4gClRoZW4gYWdhaW4gaXQgY291bGQganVzdCBiZSBvbmUgb2YgdGhvc2UgdGhpbmdzIHRoYXQgdGhleSBzZXQgYXNpZGUgZm9yIHVzZSBsYXRlciBsaWtlIHRoZXkgdGVuZCB0byBkbyBmb3IgZHVuZ2VvbiBlbnRyYW5jZXMsIHRoZXJlIGFyZSBwbGVudHkgb2YgbGVmdCBvdmVyIGFyZWFzIGluIGRpZmZlcmVudCB6b25lcyB0aGF0IGNvdWxkIGhhdmUgYmVlbiB1c2VkIGFzIGR1bmdlb24gZW50cmFuY2VzIGJ1dCBuZXZlciB3ZXJlLiBJdCBqdXN0IHNvbWV0aGluZyBTRSBsaWtlcyB0byBkby4KV2hlbiBpdCBjb21lcyB0byBUZXhhcyBIb2xkIEVtIFBva2VyIENoaXBzLCB5b3UgYXJlIHN1cmUgdG8gd2FudCBvbmVzIHRoYXQgaGF2ZSB0aGUgdHJhZGVtYXJrIGVtYmxlbXMsIGFzIHdlbGwgYXMgdGhlIG1vc3QgcG9wdWxhciBjb2xvcnMuIApFbmQgdXAgc3BlbmRpbmcgYWJvdXQgMzVtLiBEaWRuIHNwZW5kIGFueSBtb25leSBvbiBQcmF5ZXIgcG90aW9ucyBiZWNhdXNlIHRoZSBNYW5pYWNhbCBNb25rZXlzIGRyb3AgcGxlbnR5IG9mIHRoZW0uLiAKTW5kIHlvdSwgR29yZW1lIHMgc28gc21hbGwgdGhhdCB0aGVyZSBhcmUgb25seSBmb3VyIGJhcnMuIApJIHNlcnZlIHRoZW0gZW50cmVlcyBhbmQgbGV0IHRoZW0gZWF0IGZvciBhIHdoaWxlIGJlZm9yZSBJIGRvIHRoZSB0eXBpY2FsICJob3cncyBldmVyeW9uZSBkb2luZz8iIDkgdGltZXMgb3V0IG9mIDEwIGV2ZXJ5b25lIGp1c3Qgc2F5cyBldmVyeXRoaW5nIGlzIGZpbmUgYW5kIGp1c3Qgd2FudCBtZSB0byBsZWF2ZSBzbyB0aGV5IGNhbiBlYXQuIE5vdCB0aGlzIGxhZHkuIFNoZSBjYWxscyBtZSBvdmVyIGFuZCB0ZWxscyBtZSBzaGUgZGlkbid0IHRoaW5rIEkgZ2F2ZSBoZXIgc2FsbW9uLiAKSGVyZSBhbmQgaGVyZS4gVGhpcyBvbmUgaXMgZnVuIGJlY2F1c2UgdGhleSB0YWxrIGFib3V0IGJha2luZyBicmVhZC4gVGhlcmUgaXMgYSB0b24gb2YgZXZpZGVuY2UgdGhhdCB0aGUgbGFib3IgZm9yY2Ugd2FzIG5vdCBlbnNsYXZlZCwgYnV0IEhlcm9kb3R1cyB3cm90ZSBpdCAoYW5kIHdoZW4gd2FzIGhlIGV2ZXIgaW5hY2N1cmF0ZSkgYW5kIHRoZSBKdWRlbyBDaHJpc3RpYW5zIHJlaW5mb3JjZWQgaXQgYmVjYXVzZSBpdCB3ZW50IGFsb25nIHdpdGggdGhlaXIgdHJhZGl0aW9ucyBhbmQgbXl0aG9sb2d5LiAoSSdtIHNvcnJ5IHRoaXMgaXMgc28gbG9uZywgSSdtIGp1c3QgcmVhbGx5IHBhc3Npb25hdGUgYWJvdXQgYW5jaWVudCBFZ3lwdCBhbmQgSSB3YW50IHBlb3BsZSB0byBiZSBwcm9wZXJseSBpbmZvcm1lZCkKSWYgc2hlIGplcmtzIGF3YXkgb3IgZ2l2ZXMgeW91IGEgbmVnYXRpdmUgcmVhY3Rpb24sIGRvbid0IHByZXNzIHRoZSBpc3N1ZS4gSnVzdCB0cnkgYWdhaW4gdGhlIG5leHQgdGltZSBhbmQgaG9wZSBmb3IgYSBtb3JlIHBvc2l0aXZlIHJlYWN0aW9uLi4gCkJhcm9tZXRyaWMgcHJlc3N1cmUgd2FzIHRoZSBvbmx5IHdlYXRoZXIgcHJlZGljdG9yIHRoYXQgd2FzIGNvbnNpc3RlbnRseSBzaWduaWZpY2FudC4KU2x1dHR5R2FuZGhpIHUKTWF5YmUgaXRzIGp1c3QgbWUgbG92aW5nIHRvIHNlZSBteSB0ZWFtIHdpbiBhbmQgbm90IGxvb2sgbGlrZSBjcmFwLCBidXQgSSBtdWNoIHJhdGhlciBzZWUgdXMgbWl4IG91ciB5b3VuZyBhbmQgb2xkZXIgZ3V5cyBhcyB3ZSBoYXZlIHRoaXMgc2Vhc29uIGFuZCBqdXN0IHB1dCBvdXIgYmVzdCBmb290IGZvcndhcmQuIApNcnMuIEtlcnIgYW5kIExlZXBlciB3ZXJlIGNob3NlbiB0byByZWNlaXZlIHRoZSBvcmdhbnMgYmVjYXVzZSB0aGV5IG1vc3QgbmVhcmx5IG1hdGNoZWQgdGhlIGRvbm9yIHBoeXNpY2FsbHkuIFN1Y2ggdGVzdHMgbGVzc2VuIHRoZSBjaGFuY2Ugb2YgcmVqZWN0aW9uIG9mIHRoZSBuZXcgb3JnYW4gYnkgdGhlIGJvZHkuIApXYWl0LCB3aGF0PyBXaHkgZG9uJ3QgeW91IG5lZWQgbmV3IGNvbXBhbmllcyB0byB3b3JrIHdpdGg/CldpbGxpYW0gUHJlYmJsZQpJIGRvbiBrbm93IHdoYXQgTkVTIGdhbWUgZGVzaWduZXJzIHRob3VnaHQgdGhleSB3ZXJlIGRvaW5nIGJhY2sgdGhlbi4gVGhlIG9uZXMgdGhhdCB3ZXJlIHBvcnRzIGZyb20gdGhlIGFyY2FkZSBJIGNhbiB1bmRlcnN0YW5kLiAKTWEgY29ubmFpc3NhbmNlIGRlIGxhIGN1aXNpbmUgamFwb25haXNlIGF2YWl0IGNvbW1lbmMsIGlsIHkgYSBiaWVuIGxvbmd0ZW1wcyAocGx1cyBkZSB2aW5ndCBhbnMuKSwgcGFyIGxhIGRjb3V2ZXJ0ZSBkZXMgYnJvY2hldHRlcyAoeWFraXRvcmkpIGRhbnMgdW4gcmVzdGF1cmFudCBwcm9jaGUgZGUgbW9uIGJ1cmVhdSBkJ2Fsb3JzLiBQdWlzIHNvbnQgdmVudXMgbGVzIHN1c2hpLiBQdWlzIHRvdXRlIGxhIGRpdmVyc2l0IGRlIGxhIGN1aXNpbmUgamFwb25haXNlLCBmYW1pbGlhbGUgb3UgZGUgcmVzdGF1cmFudCwgc2ltcGxlIG91IHNvcGhpc3RpcXVlLiBDZXMgZGV1eCBwcmVtaWVycyBleGVtcGxlcyBzb250IGQnYWlsbGV1cnMgbG9pbiBkJ3RyZSBsZXMgbm91cnJpdHVyZXMgbGVzIHBsdXMgcnBhbmR1ZXMgc3VyIHBsYWNlLiBEdXJhbnQgbm90cmUgc2pvdXIsIG5vdXMgYXZvbnMgbWFuZyBhdmVjIHVuZSBncmFuZGUgZGl2ZXJzaXQgKGplIHN1aXMgaW5jYXBhYmxlIGRlIGZhaXJlIGF1dHJlbWVudCAhKS4gTm91cyBhdm9ucyBub3RhbW1lbnQgc2F2b3VyIGxlcyBncmFuZHMgY2xhc3NpcXVlcyBkZSBsYSByZXN0YXVyYXRpb24gamFwb25haXNlLCBkYW5zIGRlcyBlbmRyb2l0cyB1biBwZXUgY2hpY3Mgc2FucyB0cmUgbHV4dWV1eCBvdSBjYXJybWVudCBwb3B1bGFpcmVzIChqZSByZXZpZW5kcmFpIGVuIHBhcnRpY3VsaWVyIHN1ciBsZSB0b2Z1IGRhbnMgdW4gYXV0cmUgYmlsbGV0KS4gQydlc3QgIGRpcmUgOgpJIGRvbid0IGtub3cgYWJvdXQgYmFycyBpbiBNYW5oYXR0YW4sIGJ1dCBteSBleHBlcmllbmNlIGhhcyBiZWVuIGdvb2Qgd2l0aCBiYXJzIGFuZCByZXN0YXVyYW50cyBpbiBDb25uZWN0aWN1dCBhbGxvd2luZyBwZW9wbGUgdG8gcGxheSBnYW1lcy4gVXN1YWxseSB3ZSBnZXQgYSByZXNlcnZlZCByb29tIGF0IG5vIGNoYXJnZSwgYW5kIHNvbWV0aW1lcyBnZXQgZHJpbmsgb3IgZm9vZCBzcGVjaWFscy4gRnJvbSB0aGVpciBwZXJzcGVjdGl2ZSwgb3VyIGdyb3VwIHJlcHJlc2VudHMgY3VzdG9tZXJzIGFuZCBtb25leSwgc28gaXQgc2VlbXMgd29ydGggdGhlaXIgd2hpbGUuIE1pbmQgeW91IHRoaXMgd2FzIGp1c3QgcGxheWluZyBib2FyZCBnYW1lcyBhbmQgcGFydHkgZ2FtZXMsIGJ1dCBJIGRvbid0IHNlZSBob3cgcG9rZXIgd2l0aCBjaGlwcyB3b3VsZCBiZSBhbnkgZGlmZmVyZW50LiBKdXN0IGFncmVlIG9uIGRlbm9taW5hdGlvbnMgZm9yIHRoZSBjaGlwcyBhbmQgYnV5IHRoZSBjaGlwcy4gSWYgaXQncyBhIGNvbmNlcm4sIGtlZXAgdGhlIG1vbmV5IG91dCBvZiBzaWdodC4KU2hvY2sgYW5kIGRpc21heSBhcmUgcmlwcGxpbmcgdGhyb3VnaCB0aGUgS2luZ3N2aWxsZSBjb21tdW5pdHkgYWZ0ZXIgdGhlIGFycmVzdCBvZiBsb25ndGltZSBmaXJlIENoaWVmIEJvYiBLaXNzbmVyIG9uIGFsbGVnYXRpb25zIG9mIHNleHVhbCBvZmZlbmNlcyBpbnZvbHZpbmcgYSBtaW5vcktpc3NuZXIsIDYwLCB3YXMgYXJyZXN0ZWQgYnkgRXNzZXggQ291bnR5IE9QUCBvbiBTYXR1cmRheS4gSGUgZmFjaW5nIHR3byBjb3VudHMgb2Ygc2V4dWFsIGFzc2F1bHQgYW5kIHR3byBjb3VudHMgb2Ygc2V4dWFsIGV4cGxvaXRhdGlvbml0IGEgbWFuYWdlbWVudCBtZW1iZXIgb2Ygb3VyIG11bmljaXBhbGl0eSwgU2FudG9zIHNhaWQuIApDb21wYXIgYXUgY29tbWVyY2UsIHF1aSBuZSByZWN1bGUgcXVlIGRlIDAsMiUgZSwgMjAxOCwgbGUgbGl2cmUgZXN0ICBsYSB0cmFuZS5TaSBsJ29uIGV4Y2VwdGUgMjAxNSBldCAyMDE2LCBsZSBtYXJjaCBuJ2EgY2VzcyBkJ3RyZSBlbiBiYWlzc2UgZGVwdWlzIDIwMTAuIApIYXMgYW55b25lIGV2ZXIgbm90aWNlZCB0aGF0IGV2ZXJ5IHNpbmdsZSBzd2luZ2luZyBnbGFzcyBkb29yIGluIHRoaXMgY291bnRyeSBpcyBtYW51ZmFjdHVyZWQgYnkgdGhlIHNhbWUgY29tcGFueT8gVGhhdCBzYW1lIGRvb3IgaGFzIHRoZSBmdW5jdGlvbiBvZiBzdGF5aW5nIG9wZW4gaWYgcHVzaGVkIGZhciBlbm91Z2guIE5vdyBpZiB0aGF0IGZ1bmN0aW9uIHdlcmUgcmVtb3ZlZCBvciBldmVuIG1vZGlmaWVkIHRvIGhhdmUgaXQgb25seSBzdGF5IG9wZW4gdGhyb3VnaCBhIHN3aXRjaCwgdGhlbiBJIHRoaW5rIHRoZSBhbW91bnQgb2YgZml4ZWQgZG9vcnMgd291bGQgZHJvcCBkcmFzdGljYWxseSBiZWNhdXNlIHNlY3VyaXR5IGFqdXNzaGlzIGhhdmUgaGFkIGVub3VnaCBvZiBwZW9wbGUgbm90IGNsb3NpbmcgdGhlIGdvZCBkYW1uZWQgZG9vciB3aGlsZSB0aGUgaGVhdGluZy9BQyBpcyBvbi4uIApJIGFkbWl0IGl0LiBJIHdpbGwgbmV2ZXIgdW5kZXJzdGFuZCBob3cgdGhlIFVTIGdvdmVybm1lbnQsIGVzcGVjaWFsbHkgdGhlIENvbmdyZXNzIGFuZCB0aGUgU3VwcmVtZSBDb3VydCwgd29yay4gVGFrZSB0aGVpciBub3Rpb24gb2YgdGhlIEZpcnN0IEFtZW5kbWVudC4gVi4gU3RldmVucy4gVGhlIGxlZ2FsIGlzc3VlIGlzIHdoZXRoZXIgQ29uZ3Jlc3MgaW5mcmluZ2VkIG9uIEZpcnN0IEFtZW5kbWVudCByaWdodHMgd2hlbiBpdCBwYXNzZWQgYSBsYXcgb3V0bGF3aW5nIHRoZSBkaXN0cmlidXRpb24gb2YgaW1hZ2VzIG9mIGFuaW1hbCBjcnVlbHR5IGZvciBwcm9maXQuIApNb3JlIGltcG9ydGFudGx5LCBmb3IgbXVzaWNpYW5zIGFuZCBlc3BlY2lhbGx5IHNpbmdlcnMsIGl0IHZlcnkgaGFyZCB0byBoZWFyIHdoYXQgeW91IGRvaW5nIHNvIHlvdSBkb24ga25vdyBpZiB5b3Ugb2ZmIG9yIHdoYXQgdGhlIGhlbGwgaXQgaXMgeW91IGRvaW5nLiAKVGhleSBzdG9sZSBJbnRlcm5ldCBFeHBsb3JlciBmcm9tIFNweWdsYXNzIGJ5IG9mZmVyaW5nIGEgcmV2ZW51ZSBzaGFyaW5nIGRlYWwgYW5kIHRoZW4gZ2l2aW5nIGl0IGF3YXkgZnJlZS4gCk15IGZpcnN0IHBsYXl0aHJvdWdoIEkgaGFkIHNraXBwZWQgREEyLCBzbyBJIGhhZCBubyBjb25jZXB0IG9mIHdobyBoZSB3YXMuIApDZXR0ZSBhc2NlbnNpb24gcml0dWVsbGUgbiBwYXMgcHJvcHJlIHF1IHNwaHJlcyBjaGFtYW5pcXVlcyBzaWJyaWVubmVzLCBwdWlzcXUgbGEgY3JvaXNlIGdhbGVtZW50IGVuIEFtcmlxdWUgZHUgTm9yZCBhaW5zaSBxdSBJbmRlIHBhciBleGVtcGxlLiAKV2hhdCBJIHdpc2ggZm9yIGhpbSBpcyB0byBleHBlcmllbmNlIHRoZSBmdWxsIHJhdmFnZXMgb2YgaGlzIEFsemhlaW1lciB3aGlsZSBsb2NrZWQgYXdheSBpbiBhIGZlZGVyYWwgcHJpc29uLiBJIHdhbnQgaGltIHRvIHdha2UgdXAgZXZlcnkgbW9ybmluZywgYWxvbmUsIGVuY2xvc2VkIGluIGEgY29uY3JldGUgYm94IGFuZCBub3QgZnVsbHkgdW5kZXJzdGFuZCB3aHkgaGUgaXMgdGhlcmUuIApDZXR0ZSBhc3NvdXZpc3NlbWVudCBkJ3VuIGdyYW5kIGJlc29pbiBkZSBjb250YWN0IGZhdm9yaXNlIGRlIGZhb24gdHJzIHNpZ25pZmljYXRpdmUgbGUgZHZlbG9wcGVtZW50IGhhcm1vbmlldXggZHUgY2VydmVhdSBldCBkdSBzeXN0bWUgbmVydmV1eCBlbiBsdWkgb2ZmcmFudCBwbHVzIGRlIGZpbmVzc2UsIGRlIHBlcmZvcm1hbmNlIGV0ICJkJ2ludGVsbGlnZW5jZSIuCkJ1dCBJIGRpZG4gZ2V0IGFueSBoZWxwIGZyb20gTHVja3kgb3IgUGVybWEuIFNvIEkga2VwdCBwdXNoaW5nIGZvciBuZXcgbW9kcy4gVGhleSBicm91Z2h0IGluIG1lZHltIGFuZCBTdHlnLiAKV2hpbGUgbW9zdCBhdGhsZXRlcyBoYXZlIGJlZW4gY29uZGl0aW9uZWQgdG8gZHJpbmsgYSBwb3Rhc3NpdW0gcmljaCBkcmluayBhZnRlciBzd2VhdGluZywgdmVyeSBmZXcgaGF2ZSBiZWVuIGVkdWNhdGVkIG9uIHRoZSBkYW5nZXJzIG9mIGEgbWFnbmVzaXVtIGRlZmljaWVuY3kuIERyLiBCcm9kc2t5IHN0YXRlcyB0aGF0IGFycmh5dGhtaWEgdGhlcmFweSBzaG91bGQgZm9jdXMgb24gcmVwbGVuaXNoaW5nIHR3byBrZXkgbWluZXJhbHM6IHBvdGFzc2l1bSBhbmQgbWFnbmVzaXVtLgpJdCBzaGVkcyBhIGRpZmZlcmVudCBsaWdodCBvbiBoZXIgYmVoYXZpb3IgaW4gdGhlIHByZXZpb3VzIGVwaXNvZGUgd2hlcmUgc2hlIHdhcyBvYnNlc3NpdmVseSBhc2tpbmcgSWRpbmEgaG93IG1hbnkgd29tZW4gc2hlIHNsZXB0IHdpdGguIEhvbmVzdGx5IG5vIGlkZWEgd2hlcmUgdGhpcyBnb2VzIGZvciB0aGVtIGJ1dCBJIGRvbid0IHRoaW5rIHRoZWlyIHJlbGF0aW9uc2hpcHMgbGFzdHMgYXMgaXMgYWZ0ZXIgdGhpcyBzZWFzb24uLiAKVGhlIFdhbmRlcmVycyBoYXZlIGZpbmlzaGVkIHRoZSBzZWFzb24gYXMgdGhleSBzdGFydGVkLCB3aXRoIGEgbG9uZyBydW4gb2YgZ2FtZXMgdW5iZWF0ZW4sIHdoaWNoIGhhcyBiZWVuIHRoZSBrZXkgdG8gb3VyIHN1Y2Nlc3MuIFdlIG5vdyBsb29rIGZvcndhcmQgdG8gYSBuZXcgY2hhbGxlbmdlIGluIHRoZSBmb3JtIG9mIERpdmlzaW9uIDIgbmV4dCBzZWFzb24uIApMb3MgQW5nZWxlcyB3YXMgdGhlIHNldHRpbmcgYXMgdGhlIFdvcmxkIFBva2VyIFRvdXIgaG9zdGVkIHRoZSBMZWdlbmRzIG9mIFBva2VyIGZvciB0aGUgMTR0aCB5ZWFyLiAKVGhlIFphZ3Mgd2VyZSBoZWxkIHRvIGEgc2Vhc29uIGxvdyBwb2ludCB0b3RhbC4gVGhleSdkIGJlZW4gYmVsb3cgNzAgcG9pbnRzIGp1c3QgdGhyZWUgdGltZXMgcHJpb3IgdG8gVGh1cnNkYXkncyBnYW1lLgpDb252ZW5pZW50IGxlbmd0aCBoYXBwZW5zIGluIG1lZGl1bSBoYWlyY3V0cy4gVGhlIGxlbmd0aCBpcyBlYXN5IHRvIG1haW50YWluIGFuZCBvZmZlcnMgdmFyaWV0eSBpbiBzdHlsaW5nLiAKU29tZW9uZSBwbGVhc2UgY29ycmVjdCBtZSBpZiBJIHdyb25nLCBidXQgSSB0aGluayBJIGhlYXJkIHRoYXQgcGVyZmVjdCBleHRyYWN0aW9uIGludG8gYSBwdXJlIGZhdCBsaWtlIGNsYXJpZmllZCBidXR0ZXIgb3IgY29jb251dCBvaWwgY2FuIG9ubHkgZXh0cmFjdCBhYm91dCA2MCA3MCUgb2YgdGhlIFRIQy4gQW5kIEkgc3VyZSB5b3UgY291bGQgaW1hZ2luZSwgdGhlIGZhdCBjb250ZW50IG9mIGEgZ2xhc3Mgb2YgbWlsayBpcyBzaWduaWZpY2FudGx5IGxlc3MgdGhhbiBhIHN0aWNrIG9mIGJ1dHRlci4KSGUgbG9zdCBtb25leSAgIGEgTE9UIG9mIG1vbmV5ICAgcGxheWluZyBnb2xmIGFnYWluc3QgdHdvIEVuZ2xpc2ggUG9rZXIgcHJvcywgUmFtIFZhc3dhbmkgYW5kIE1hcmsgIk1yIENvb2wiIEdvb2R3aW4uIFNvIGhlIHRvb2sgYSA2IG1vbnRoIGJyZWFrLCBhbmQgdGhlbiBpbnZpdGVkIFJhbSBhbmQgTWFyayB0byBjb21lIHBsYXkgc29tZSBtb3JlIG1vbmV5IGdvbGYsIG9uIHRoZSBzYW1lIHRlcm1zLiAKV2hpbGUgd2UgZmluZCB0aGUgYmFuIGEgbGl0dGxlIHNpbGx5LCBpdCdzIHByZXR0eSBhd2Vzb21lIHRvIHNlZSBhIHB1YmxpYyBoZWFyaW5nIHBhY2tlZCB3aXRoIHdlbGwgc3Bva2VuIGhpZ2ggc2Nob29sIHN0dWRlbnRzIG1ha2luZyB0aGVpciBjYXNlLiAKV2UgbG9vayBmb3J3YXJkIHRvIHdlbGNvbWUgeW91IGFuZCB5b3VyIEZhbWlseSB0byB5b3VyIG5leHQgdmlzaXQgdG8gS2F0YXRoYW5pISBXaXRoIEtpbmQgUmVnYXJkcywgQ3VzdG9tZXIgUmVsYXRpb25zIE1hbmFnZXIgLlJlYWQgbW9yZUlzIHRoZSBiZWFjaCBkaXJlY3RseSBhY2Nlc3NpYmxlIGZyb20gdGhlIHJlc29ydC4gCk5lY2sgbXVzY2xlIGluanVyeSAiZG9lcyBub3QgcHJvdmlkZSBhIHNhdGlzZnlpbmcgbW9kZWwgZm9yIHBlcnNpc3RlbnQgb3IgY2hyb25pYyBuZWNrIHBhaW4iIGJlY2F1c2UgZXh0cmVtaXR5IG11c2NsZSBpbmp1cmllcyBoZWFsIHJhcGlkbHksICJpbiBhIG1hdHRlciBvZiBkYXlzIG9yIHdlZWtzLiIKQWxsIGFnZXMuIApVbmxpa2UgSGVsbXV0aCBob3dldmVyLCBEb3lsZSdzIGJyYWNlbGV0cyBoYXZlIGNvbWUgZnJvbSBzZXZlcmFsIHZhcmlhdGlvbnMgaW5jbHVkaW5nIGhvbGRlbSwgc3R1ZCwgcmF6eiBhbmQgZHJhdy4gQWxvbmdzaWRlIGhpcyBXU09QIHN1Y2Nlc3MsIGhlIGhhcyBhbHNvIGFkZGVkIGEgV29ybGQgUG9rZXIgVG91ciB0aXRsZSB0byBoaXMgdHJvcGh5IGNhYmluZXQgYXQgdGhlIDIwMDQgTGVnZW5kcyBvZiBQb2tlci4gCkpvZTogUmV0YWxpYXRpb24sIGEgcGFpciBvZiBkb2N1bWVudGFyaWVzIGFib3V0IEp1c3RpbiBCaWViZXIsIENodSBrbmV3IGEgbG90IGFib3V0IGV4cGVjdGF0aW9ucyBmcm9tIGZhbnMgYW5kIGhvdyBldmVuIHNtYWxsIGRldGFpbHMgY291bGQgYmUgdGhlIHN1YmplY3Qgb2YgZmllcmNlIHNjcnV0aW55LiBIYWQgYSBtYWggam9uZ2cgc3BlY2lhbGlzdCBjb21lIGluIGFuZCBkZXNpZ24gYSBnYW1lIGZvciB1cyBhbmQgdGVhY2ggdXMsIENodSBzYXlzLCBpbiBvcmRlciB0byBuYWlsIGEgY2xpbWFjdGljIHQgYmV0d2VlbiBSYWNoZWwgYW5kIE5pY2sgbW90aGVyIEVsZWFub3IsIHBsYXllZCBieSB0aGUgdmVuZXJhYmxlIGFjdG9yIE1pY2hlbGxlIFllb2guIApBbWVyaWNhbiBwbGF5ZXJzIGNhbiBub3QgcGxheSBpbiB0aGlzIHNpdGUgYnV0IHRoZSBjb21wYW55IGlzIHNlZWtpbmcgZm9yIHRoaXMgdG8gY2hhbmdlLiAKVGhhbmsgZ29vZG5lc3MgaHVicyBzZWVzIHRocm91Z2ggaGVyIGNvbXBsZXRlbHkgc28gaGVyIHBsYW4gd29uJ3Qgd29yay4gSHVicyBpcyBqdXN0IHdvcnJpZWQgYWJvdXQgd2hhdCB0byBzYXkgd2hlbiBhbmQgaWYgbXkgSk5Nb20gYXNrcyBoaW0gd2hhdCBoZSB0aG91Z2h0IG9mIHRoZSBib29rISBIZSBpcyB0aGlua2luZyBoZSdzIGdvaW5nIHRvIHNheSBoZSBkaWRuJ3QgZmluZCBpdCByZWxldmFudCBzbyBoZSBkaWRuJ3QgcmVhZCBpdCBhbmQgd2FzIGN1cmlvdXMgd2hhdCBtYWRlIGhlciB0aGluayBvZiBoaW0gZm9yIHRoaXMgYm9vay4gQnV0IGhlJ3MgYWxzbyBhZnJhaWQgb2YgaGVyIHJlYWN0aW9uIGhhaGEuClRoYXQgZG9lc24gbWVhbiB0aGV5IHdhbnQgYWxsIGRvZ3MgYW5kIGNhdHMgdG8gZGllIG9mZi4KT2ssIG1hbiwgSSB0aGluayB5b3UgcmlnaHQsIG1heWJlIEkgd3JvbmcuIApJZiB5b3VyIGVtcGxveWVlcyBldmVyIHVzZWQgb25lIG9mIHRob3NlIHByZXZpb3VzIGxpbmVzIG9uIGEgY3VzdG9tZXIgdGhlbiBJIHdpbGwgYmV0IHlvdXIgY3VzdG9tZXIgZmVsdCBjcmFua3kuIEN1c3RvbWVycyBnZXQgY3Jhbmt5IHdoZW4geW91IHdhc3RlIHRoZWlyIHRpbWUgYW5kIGRvbid0IGhhdmUgdGhlIGFuc3dlcnMgdGhleSBuZWVkIS4gCiJJIHNpdCBhdCBhIGxhcmdlIG92YWwgdGFibGUsIGluIGEgd2lkZSBvcGVuIHNwYWNlLCB3aXRoIGNvbGxlYWd1ZXMgdG8gbXkgcmlnaHQgYW5kIGxlZnQsIGZyb250IGFuZCBiYWNrLCIgc2hlIHNheXMuICJTZXJpb3VzbHksIEkgbG92ZSBpdCBhbmQgY2FuJ3QgaW1hZ2luZSB3b3JraW5nIGFueSBvdGhlciB3YXkuIEFmdGVyIGNvbWluZyBiYWNrIGZyb20gYnVzaW5lc3MgdHJpcHMsIHdlIGFsbCByZXR1cm4gdG8gb3VyIGNvbW11bmFsIHRhYmxlLCBzaGFyaW5nIHN0b3JpZXMgZnJvbSB0aGUgcm9hZCwgd29yZHMgb2Ygd2lzZG9tLCBoaWxhcmlvdXMgdGFsZXMsIG5ldyBkaXNjb3Zlcmllcy4gSXQncyBpbW1lZGlhdGVseSBpbnZpZ29yYXRpbmcuIEFuZCB0aGF0J3MgYSBnb29kIHRoaW5nISIKQSBraWQgbGlrZSBCcmVuZGFuIG1pZ2h0IGhhdmUgYmVlbiBpbiB0aGF0IG1pbmRzZXQgb2Ygd2FudGluZyB0byBpbXByZXNzIGEgZ2lybCBhbmQgYWxzbyB3YW50aW5nIHRvICdrbm93IHdoYXQgaXQgZmVlbHMgbGlrZScuCkluIGZhY3QsIEkgcG9zaXQgYSBsb3Qgb2YgdGhlc2UgcGVvcGxlIHdobyBzY3JlYW0gYWJvdXQgZGl2ZXJzaXR5IGhhdmUgbmV2ZXIgcmVhbGx5IGludGVyYWN0ZWQgd2l0aCBhIGxvdCBvZiB3aGl0ZSBwZW9wbGUuIFllYWggSSBoYWQgc2hpdHR5IHdoaXRlIHBlb3BsZSBpbiBteSB0b3duLCBidXQgSSBhbHNvIGhhZCBhbWF6aW5nIHBlb3BsZSwgcGVvcGxlIHdobyBhcmUgc3RpbGwgbXkgYmVzdCBmcmllbmRzLiAKT2ssIGEgcXVpY2sgY3VkZGxlIG1heSBiZSBhIHByb2JsZW0gaWYgaXQncyBhIGxpb24gb3IgYSBiZWFyLCBidXQgeW91J2xsIHJlY2VpdmUgcGhvdG9zIGFuZCBsZXR0ZXJzIChldmVuIHRob3VnaCB0aGV5IHdvbid0IGJlIHJvbWFudGljKSB1cGRhdGluZyB5b3UgYWJvdXQgaXRzIGxpZmUuIApUaGVuIHllcyB5b3UgY2FuIHN3aXRjaCB0byBwaXhlbCAzLiBJZiBJIGRpZG4gaGF2ZSB0aGUgZmFtaWx5IHRoaW5nIEkgd291bGQgaGF2ZSBhbHJlYWR5IHN3aXRjaGVkIHRvIHBpeGVsIDMgZHVlIHRvIGNvc3QuIApMb29rIGZvciB0aGUgc2lnbiBpbiB0aGUgcGljdHVyZS4gSXQgaXMgYWJvdXQgYSA1IG1pbnV0ZSB3YWxrIGZyb20gdGhlIHNvaSBlbnRyYW5jZSwgbmV4dCB0byBhIG1vcmUgYnJpZ2h0bHkgZGVjb3JhdGVkIHNob3AgY2FsbGVkIExvdmUgVGVlbi4gCkkganVzdCB3aXNoIEkgY291bGQgZ2V0IGF3YXkgYnkgbXlzZWxmIGZvciB0aHJlZSBkYXlzIHNvIEkgY2FuIGhhdmUgbmljb3RpbmUgZml0cyBpbiBwZWFjZS4gCiJUaGUga2lkcyBjYW4gbGVhcm4gdGhlIGpveXMgb2Ygc3VjY2VzcyBhbmQgZmFpbHVyZSB3aGljaCBpcyBzb21ldGhpbmcgYSBsb3Qgb2YgdGhlbSBzdHJ1Z2dsZSB3aXRoLCIgaGUgc2FpZC4gCkhlYXRzZWVrZXJkaiB1ClRoZSBBbmdsbyBTYXhvbiBjaHJvbmljbGVzIGRlc2NyaWJlcyB0aGlzOi4gClRoZSBtaW5vcnMgICBvdXQgb2Ygc3RhdGUgdG91cmlzdHMgICB3ZXJlIHJlbGVhc2VkIHRvIHRoZWlyIHBhcmVudHMgYW5kIHdlcmUgbm90IGNoYXJnZWRLSVNTSU1NRUUgVHdvIHRlZW4gdG91cmlzdHMgdmlzaXRpbmcgYW4gT3NjZW9sYSBtYXNzYWdlIHBhcmxvciBsYXN0IHdlZWsgZm91bmQgdGhlbXNlbHZlcyBpbiB0aGUgbWlkc3Qgb2YgYSBwcm9zdGl0dXRpb24gYnVzdCwgYSBkaXNzYXRpc2ZpZWQgY2xpZW50IGFuZCBhbmdyeSBwcmFjdGl0aW9uZXJzIG9mIHRoZSBhbmNpZW50IGFydCBvZiByZWxheGF0aW9uLiAKVGhlIHJpZGUgd2lsbCBmb2xsb3cgdHJhaWxzIHRocm91Z2ggdGhlIERpeGllIE5hdGlvbmFsIEZvcmVzdCBhbmQgQ2VkYXIgQnJlYWtzIE5hdGlvbmFsIE1vbnVtZW50IGFuZCB3aWxsIGluY2x1ZGUgZml2ZSBzdG9wcyB0byBwaWNrIHVwIGFub3RoZXIgcG9rZXIgY2FyZC4gQmUgc3VyZSB0byBzbmFwIGJlYXV0aWZ1bCBwaG90b3MgYWxvbmcgdGhlIHJpZGUuIEJyaWFuIEhlYWQgd2lsbCBwb3N0IHBob3RvcyBvZiB0aGUgZGF5IG9uIHRoZWlyIHdlYnNpdGUgYW5kIEZhY2Vib29rIHBhZ2UuIApJdCB3b3VsZCBiZSBiZWF1dGlmdWwuIApBcnRpY2xlIDExMiBvZiB0aGUgQ29uc3RpdHV0aW9uIG9mIHRoZSBCb2xpdmFyaWFuIFJlcHVibGljIG9mIFZlbmV6dWVsYSBzYXlzICJhbGwgcGVyc29ucyBtYXkgZnJlZWx5IGVuZ2FnZSBpbiBhbiBlY29ub21pYyBhY3Rpdml0eSBvZiB0aGVpciBjaG9pY2UiIGFuZCBmb2xsb3dzICJ0aGUgcmlnaHQgb2Ygb3duZXJzaGlwIGlzIGd1YXJhbnRlZWQuIEV2ZXJ5b25lIGhhcyB0aGUgcmlnaHQgdG8gdXNlLCBvY2N1cHksIGVuam95LCBhbmQgZGlzcG9zZSBvZiB0aGVpciBwcml2YXRlIHByb3BlcnR5LiIgVGhlIGV4YWN0IG9wcG9zaXRlIG9mIHNvY2lhbGlzbS4KVGhlIG5ldyBHaWFudHMgcGxheWVycy4gCiJJIHRoaW5rIG1vc3QgVGFzbWFuaWFucyB3aWxsIGxvb2sgYXQgd2hhdCBiZWluZyBzYWlkIGhlcmUgYW5kIHRoaW5rIHRoYXQgYSBzdHJldGNoIHRvbyBmYXIuICJBbnphYyBEYXkgaXMgc28gbXVjaCBiaWdnZXIgdGhhbiBwb2tlciBtYWNoaW5lcy4gClRydW1wIHNwb2tlIHRvIHRob3NlIHBlb3BsZSB3aXRoIGEgcG9wdWxpc3QgbWVzc2FnZS4gCk5vdyBoZXJlIGFyZSBzb21lIENvbnMgb2YgdGhlIHNpdGUuIENhc2ggR2FtZSBzdHJ1Y3R1cmVzIGFyZSBzaW1wbHkgYSBqb2tlLCB0aGUgYWN0aW9uIGlzIGp1c3QgYmV5b25kIGluc2FuZSB5ZXMsIGJ1dCB0aGV5IGhhdmUgc3RyaWN0IHJ1bGVzLCBzdWNoIGFzIG5vIGJ1bSBodW50aW5nLCBhbmQgbm8gcHJlZGF0b3J5IGJlaGF2aW91ciwgSSBnZXQgdGhlIGJ1bSBodW50aW5nIHBhcnQgYnV0IGNoZWNrIHRoaXMgb3V0LiBGb3IgUExPIDEwMCwgbWluIGJ1eSBpbiBpcyAxMCBkb2xsYXJzLCBQTE8gNTAgaXQgNSBkb2xsYXJzLCBQTE8gNDAwIGl0IDQwIG1pbiwgeW91IGdldCB0aGUgaWRlYS4gCkxpa2Ugd2hhdGV2ZXIgeW91IHdlcmUgZmVlbGluZywganVzdCBnbyB0byBhIGRpZmZlcmVudCByb29tLiAKU2VlaW5nIGl0IGZyb20gdGhpcyBwZXJzcGVjdGl2ZSwgbW9zdCBvZiB0aGVzZSBza2lybWlzaGVzIGxhc3QgYWJvdXQgMTAgbWludXRlcyBpbiB0aGUgZ2FtZSB2aWV3IGFzIG9wcG9zZWQgdG8gaG93IHdlIHNlZSBpdC4gU28gd2hlbiBhbiBlbnRpcmUgc3F1YWRyb24gb2Ygc29sZGllcnMgZ28gb24gb3ZlcndhdGNoLCB0aGV5IGRvbiB1c3VhbGx5IGhhdmUgdGltZSB0byBkZWNpZGUgd2hvIHNob3VsZCBzaG9vdCB3aG8uIFRoZXNlIGJhdHRsZXMgYXJlIGhhcHBlbmluZyByZWFsbHkgZmFzdCwgbGlrZSBhIGxpdmUgd2FyIHpvbmUuLiAKSG93IGRvZXMgYW55b25lIGdvIGZyb20gYmVpbmcgYSBoYXBweSwgbG92aW5nIGRhZCB0byBiZWluZyBEZWF0aCwgRGVzdHJveWVyIG9mIExpZmUgU2F2aW5ncyBhbmQgUHJvYmFibHkgTWFycmlhZ2VzPyIuIApOZWxzb24sIHdobyBub3JtYWxseSB0cmFpbnMgaW4gU3RvbmV5IENyZWVrIHRocmVlIGRheXMgZWFjaCB3ZWVrLCB3YXRjaGVkIHNvbWUgdmlkZW8gb2YgaGlzIG9wcG9uZW50IGJ1dCBoaXMgZml0bmVzcyBsZXZlbCAgIHdoaWxlIHNvbGlkICAgd2FzIG5vdCBpbiBwZWFrIGZvcm0uClRoZSB3aW50ZXIgb2YgMTk0NCAvIDE5NDUgd2FzIGJpdHRlcmx5IGNvbGQuIEV2ZXJ5IG5pZ2h0IGF0IDAxLjMwIHRoZSBjYXN0IGFuZCBjcmV3IHdvdWxkIGJyZWFrIGZvciBhIG1lYWwsIGFuZCB0aGlzIHdhcyB0YWtlbiBpbiB0d28gZGluaW5nIGNhcnMsIHdoaWNoIHdlcmUgc2h1bnRlZCBpbnRvIHRoZSBNb3JlY2FtYmUgQmF5IHBsYXRmb3JtLiBUaGUgY2FzdCBhbmQgc2VuaW9yIHByb2R1Y3Rpb24gcGVvcGxlIGdvaW5nIGludG8gb25lIGRpbmluZyBjYXIgYW5kIHRoZSB0ZWNobmljaWFucyBhbmQgZXh0cmFzIGludG8gdGhlIG90aGVyLi4gCkxlIG1hbnF1ZSBkZSByYWN0aXZpdCBkZXMgZm9yY2VzIGRlIHBvbGljZSBzdWl0ZSAgdW4gYXBwZWwgYXUgMTcgYSB0IGRwbG9yLiAKVGhlIGNvdXJ0IGhlYXJkIHRoZSBkYXVnaHRlciB0cmllZCB0byBncmFiIGhlciBiZWxvbmdpbmdzIGFuZCBsZWF2ZSB0aGUgaG91c2UgaG93ZXZlciB0aGUgbW90aGVyIGJlZ2FuIHRocm93aW5nIHNob2VzIGF0IGhlci4gVGhlIGRhdWdodGVyIHNhaWQgc2hlIHB1c2hlZCBoZXIgbW90aGVyIGluIGEgYmlkIHRvIGdldCBhd2F5LCBob3dldmVyIHRoZSBvbGRlciB3b21hbiBjb250aW51ZWQgdGhyb3dpbmcgdGhpbmdzIGF0IGhlciBiZWZvcmUgZ3JhYmJpbmcgaGVyIGJ5IHRoZSBicmEsIGNhdXNpbmcgdGhlIGRhdWdodGVyIHRvIGZhbGwgb3Zlci4gCkJlY2F1c2UgMiB0aW1lcyAxNCBpcyAyOCwgd2hpY2ggaXMgYSBsaXR0bGUgbGVzcyB0aGFuIDMzLCBhbmQgMyB0aW1lcyAxNCBlcXVhbHMgNDIsIHlvdSBrbm93IHRoZSBudW1iZXIgaXMgY2xvc2VyIHRvIHR3byB0aGFuIHRocmVlLCBvciB5b3VyIG9kZHMgb2Ygd2lubmluZyBhcmUgY2xvc2VyIHRvIDIgdG8gMSB0aGFuIDMgdG8gMS4gVGhpcyBtZWFucyB0aGF0IGZvciBpdCB0byBiZSBjb3JyZWN0IGZvciB5b3UgdG8gY2FsbCwgdGhlcmUgbXVzdCBiZSBhdCBsZWFzdCAyLjQgdGltZXMgdGhlIGFtb3VudCB5b3UgbXVzdCBjYWxsIGluIHRoZSBwb3QuIEluIG90aGVyIHdvcmRzLCB0aGUgYW1vdW50IHlvdSBtdXN0IHJpc2ssIGluIHRoaXMgY2FzZSAkMSwgbXVzdCBoYXZlIGEgcmV3YXJkIG9mIGF0IGxlYXN0ICQyLjQwIHdoZW4geW91IGhpdCB5b3VyIGhhbmQuIEluIHRoZSBleGFtcGxlIGFib3ZlLCB0aGVyZSBpcyAkOSBpbiB0aGUgcG90LCBhbmQgeW91IGhhdmUgdG8gY2FsbCBvbmx5ICQxIHRvIHNlZSB0aGUgdHVybi4gU2luY2UgdGhlIHBvdCBpcyBvZmZlcmluZyB5b3UgOSB0byAxIG9kZHMsIHRoZSBjb3JyZWN0IHBsYXkgaXMgdG8gY2FsbCBvciByYWlzZSwgd2hpY2ggd2Ugd2lsbCBkaXNjdXNzIHNob3J0bHkuClN0ZXZlbiBhbmQgVmlja2llIFRocmlmdCB3ZXJlIHByZXZpb3VzbHkgY29udmljdGVkIGJ5IGEgTGVlIENvdW50eSBEaXN0cmljdCBDb3VydCBpbiAyMDExIGZvciBzaW1wbGUgZ2FtYmxpbmcuCk1lbWJlcnMgbm93IGdldCBjaGFyZ2VkIHVwb24gZW50ZXJpbmcgdGhlIGNsdWIsIHdoZXRoZXIgdGhleSBwbGF5IHBva2VyIG9yIG5vdCwgQ3JvdyBzYWlkLi4gCkluIHRoZW9yeSB0aGVyZSBjb3VsZCBvZiBiZWVuIHNvbWUgc29mdHdhcmUgb24gdGhlIHBob25lIGhlIGRvd25sb2FkZWQsIG9yIGEgbmV0d29yayB3YXMgY29tcHJvbWlzZWQgYW5kIGhpcyBzaGl0IGludGVyY2VwdGVkLiBidXQgSSBkb3VidCBpdC4gSW4gdGhhdCBjYXNlIGhlIGFsc28gbm90aWNlIG90aGVyIHRoaW5ncyBnZXR0aW5nIHNjYW1tZWQgKGVtYWlsLCBiYW5raW5nLCBwYXlwYWwgZXRjIGV0YyksIGlkZW50aXR5IHRoZWZ0LgpUd28gb2YgdGhlIHRocmVlIGNvbnN1bWVyIHJlcHJlc2VudGF0aXZlcyBjYW5ub3QgYmUgaW4gdGhlIGhlYWx0aCBwcm9mZXNzaW9uIGFuZCBhdCBsZWFzdCBvbmUgb2YgdGhlbSBtdXN0IGJlIDYwIG9yIG9sZGVyLiAKVGhpcyBib29rLCB3cml0dGVuIGJ5IFBheVBhbCBjbyBmb3VuZGVyIGFuZCBhbiBlYXJseSBGYWNlYm9vayBpbnZlc3RvciwgaXMgYW4gdXBkYXRlZCB2ZXJzaW9uIG9mIHRoZSBwb3B1bGFyIHNldCBvZiBvbmxpbmUgbm90ZXMgdGhhdCB3ZXJlIHRha2VuIGJ5IE1hc3RlcnMgZHVyaW5nIGEgY2xhc3Mgb24gc3RhcnQgdXBzIHRoYXQgd2FzIHRhdWdodCBieSBQZXRlciBUaGllbCBhdCBTdGFuZm9yZCBVbml2ZXJzaXR5IGluIDIwMTIuIFRoZSBib29rIGV4cGxhaW5zIGhvdyBwcm9ncmVzcyBjYW4gYmUgYWNoaWV2ZWQgaW4gYW55IGluZHVzdHJ5IGFuZCB0aGF0IGNvbWVzIGZyb20gbGVhcm5pbmcgdGhlIG1vc3QgaW1wb3J0YW50IHNraWxsOiBsZWFybmluZyBob3cgdG8gdGhpbmsgZm9yIHlvdXJzZWxmLgpBbHNvLCBob3cgZXhwZXJpZW5jZWQgYXJlIHRoZSBwaHlzaWNpYW5zIGlmIHRoZXkgdHJlYXQgc28gZmV3IHBhdGllbnRzIGZvciBlYWNoIHBhdGhvbG9neT9Ob3QgYSBzdHVkZW50LiBCdXQgSSBub3QgaW4gdGhlIFVTLiBIZXJlIChJdGFseSkgSSBuZXZlciBoZWFyZCBvZiBjZW50ZXJzIHdpdGggbGVzcyB0aGFuIDIgYWNjZWxlcmF0b3JzLiBOb3QgaW4gbXkgcmVnaW9uIGFueXdheS4gRXNwZWNpYWxseSBiZWNhdXNlLCBldmVuIGZvciBwcml2YXRlIGNlbnRlcnMgdGhhdCBhcmUgbm90IHN1YmplY3QgdG8gY2VudHJhbCBwbGFubmluZywgdGhlIGhlYWx0aGNhcmUgc3lzdGVtIHN0cm9uZ2x5IGRpc2NvdXJhZ2VzIHRoZSBpbnN0YWxsYXRpb24gb2YgYWR2YW5jZWQgdGVjaG5pcXVlcyBpbiBjZW50ZXJzIHdoZXJlIHRoZXkgd291bGQgbm90IG1lZXQgYSBjZXJ0YWluIG51bWJlciBvZiB0cmVhdG1lbnRzIGEgeWVhciwgdGhleSBmYXZvdXIgaGF2aW5nIGZldyBjZW50ZXJzIHdpdGggbG90cyBvZiBwYXRpZW50cyAoYW5kIG1hY2hpbmVzKSBmb3IgInNlY29uZCBsZXZlbCIgdHJlYXRtZW50cy4gSSBrbm93IG9mIGZldyBob3NwaXRhbHMgd2l0aCBsZXNzIHRoYW4gMyBhY2NlbGVyYXRvcnMgYWN0dWFsbHkuIE5vdCBvbmx5IGZvciByYWRpYXRpb24gdGhlcmFweSwgZXZlbiBmb3IgaW50ZXJ2ZW50aW9uYWwgY2FyZGlvbG9neSB0aGVyZSBhIHJ1bGUgcmVnYXJkaW5nIHRoZSBtaW5pbXVtIG51bWJlciBvZiBwYXRpZW50cyB0aGF0IHlvdSBjYW4gdHJlYXQgaW4gYSB5ZWFyLiBXaXRoIGV4Y2VwdGlvbnMgb25seSBmb3IgcnVyYWwgYXJlYXMuCkhlIGNvdWxkIGhhdmUgcmVjb3JkZWQgaXQgbGl2ZSB0b28sIGhvdyB3b3VsZCB0aGUgY29wIGtub3c/IEFuZCBiZWNhdXNlIHRoZSBwb2xpY2UgaGF2ZSB2ZXJ5IHN0cmljdCBydWxlcyBvbiBob3cgdG8gY2Fycnkgb3V0IHNlYXJjaGVzIGFuZCBzdWNoLCBub3QgdG8gbWVudGlvbiBpdCdzIG5vdCBsaWtlIHRoZXkgd3JvdGUgdGhlIGxhd3MgeW91ciBlbGVjdGVkIG9mZmljaWFscyBtYWRlLiAKUGxhY2UgbG9va3MgbGlrZSBpdCBoYXMgYWxsIHRoZSBzaGl0IHlvdSBjb3VsZCBldmVyIG5lZWQgYW5kIHRoZXJlIGFyZSBzb21lIHN0cm9uZyBtZnMgb3V0dGEgdGhhdCBneW0uIElmIHlvdSB3YW50ZWQgdG8gZHJpdmUgYSBsaWwgYml0IHRvIGNsb3V0IGNoYXNlLCBCcm93YXJkIEJhcmJlbGwgQ2VudGVyIGluIFBsYW50YXRpb24gaGFzIGEgZnVsbCBzZXQgb2YgKGFnZWQgbG9va2luZyBidXQgc3RpbGwgYmFkYXNzKSBjaHJvbWUgSXZhbmtvIGtpbG8gcGxhdGVzIHRoYXQgYXJlIHNvIGRhbW4gc2V4dWFsIGFzIHdlbGwgYXMgYSBidW5jaCBvZiBzdHJvbmdtYW4gZXF1aXBtZW50LiAKVGhlIENvbnZlbnRpb24gQ2VudGVyIGZvb2Qgb3V0bGV0cyBkbyBhIGdvb2Qgam9iLCBhbmQgbWFueSBvZiB0aGUgYm9vdGhzIG9mZmVyIHRlbXB0aW5nIGZvb2RzIHRvIHNhbXBsZS4gVG9tIERvdWdsYXMsIGEgbG9jYWwgcmVzdGF1cmF0ZXVyLCBvcGVyYXRlcyBuaW5lIHJlc3RhdXJhbnRzIGluIFNlYXR0bGUsIGFuZCBoZSB3aWxsIGJlIHByZXNlbnRpbmcgc29tZSB0YXN0eSBmb29kIG9wdGlvbnMgYXMgd2VsbC4gTG9jYWwgc3dlZXRzLCBzYXVjZXMsIGNoZWVzZXMgYW5kIHZpbmVnYXJzIHdpbGwgYWxzbyBiZSBmb3Igc2FsZS5JIGhhZCBtYW55IG9wcG9ydHVuaXRpZXMgdG8gc3BlYWsgYXQgdGhlIHNob3csIGFuZCBtb3JlIHJlY2VudGx5IEkgYmVlbiB0YWtpbmcgYnVzIHRvdXJzIHRoZXJlLCBzbyBJIGtub3cgdGhlIHNob3cgY2FuIGJlY29tZSBxdWl0ZSBidXN5LlRoaXMgZGlzcGxheSBnYXJkZW4gc2hvd3MgaG93IHRoZSBjbGV2ZXIgYW5kIHN0eWxpc2ggdXNlIG9mIGNvbnRhaW5lcnMgY2FuIGNyZWF0ZSBhIHNtYWxsIHNwYWNlIGdhcmRlbiB0aGF0IHNoaW5lcy5Ob3J0aHdlc3QgRmxvd2VyIGFuZCBHYXJkZW4gRmVzdGl2YWwgaXMgdGhlIHNlY29uZCBsYXJnZXN0IGluZG9vciBnYXJkZW4gc2hvdyBpbiBBbWVyaWNhLCBhbmQgd2UgZm9ydHVuYXRlIGl0IGlzIHNvIGNsb3NlLCBjZXJ0YWlubHkgZm9yIGZvbGtzIHJlc2lkaW5nIGluIHRoZSBsb3dlciBoYWxmIG9mIHRoZSBwcm92aW5jZS4gClRha2Ugc29tZSB0aW1lIGFuZCBtYWtlIHN1cmUgdGhhdCB5b3UgZmluZCB0aGUgcmlnaHQgc2V0IGFuZCB5b3VyIHBva2VyIGJ1ZGRpZXMgd2lsbCBsb3ZlIHRoZSByZXN1bHQhLiAKQmVmb3JlIGhlIGxlZnQsIGhlIGFza2VkIGZvciBteSBTbmFwY2hhdCBhbmQgZ2F2ZSBtZSBoaXMuIApUaGUgYmVzdCBtb2JpbGUgcG9rZXIgc2l0ZXMgaGF2ZSBjcmVhdGVkIGdyZWF0IHBva2VyIGFwcHMgdGhhdCBjYW4gYmUgZWFzaWx5IGRvd25sb2FkZWQgYW5kIGluc3RhbGxlZCBvbnRvIGlPUyBhbmQgQW5kcm9pZCBkZXZpY2VzIGVuYWJsaW5nIHBva2VyIGZhbnMgdG8gcGxheSByZWFsIG1vbmV5IGdhbWVzIG9uIHRoZSBtb3ZlLi4gCkkndmUgZm91bmQgUG9rZXIgUm9vbSB0byBiZSBxdWl0ZSBleGNlbGxlbnQgKGFuZCBKYXZhIGJhc2VkLCB1c2VmdWwgZm9yIE9TIFggdXNlcnMgc2luY2UgbW9zdCBvZiB0aGUgb3RoZXIgc2l0ZXMgSSd2ZSBzZWVuIHJlcXVpcmUgYSBXaW5kb3dzIGRvd25sb2FkKSwgYW5kIHRoZSBsZXZlbCBvZiBwbGF5IHdvbid0IGtpbGwgeW91IGlmIHlvdSdyZSBqdXN0IHN0YXJ0aW5nIG91dC4gVGhlcmUncyBhbHdheXMgc29tZSBvcGVuIHRhYmxlcywgYW5kIHlvdSBjYW4gYWx3YXlzIGdldCBtb3JlIHBsYXkgbW9uZXkuIEkgaGFkIEFza2VkTWVGaSByZWNlbnRseSBhYm91dCBhbnkgc3RhbmRhbG9uZSBwb2tlciBnYW1lcyBmb3IgT1MgWCBhbmQgd2FzIHRpcHBlZCBvZmYgdG8gcG9rZXJyb29tOyBpdCdzIGNlcnRhaW5seSBiZXR0ZXIgdGhhbiBhbnl0aGluZyBJIGNvdWxkIGRvd25sb2FkIChiZWNhdXNlIGFwcGFyZW50bHkgdGhlIEFJIGF2YWlsYWJsZSBvbiB0aGUgZGlmZmVyZW50IE1hYyBnYW1lcyBzdWNrcywgd2hlcmVhcyB0aGUgcmVhbCBwZW9wbGUgeW91IHBsYXkgd2l0aCBhcmUgbXVjaCBtb3JlIHJlYXNvbmFibHkgaXJyYXRpb25hbCkuLiAKSGUgdGhpbmtzIE1pa2Ugd2FzIHRyeWluZyB0byB0YWtlIGFkdmFudGFnZSBvZiB0aGVpciByZWxhdGlvbnNoaXAgYW5kIGRpZG4gd2FudCB0byBnaXZlIGhpbSB0aGUgbW9uZXkgYWZ0ZXIgbWFraW5nIGEgbWlzdGFrZQpUaGUgdG9wIDI1IHBlcmNlbnQgb2Ygd29ya2VycyBlYXJuZWQgbW9yZSB0aGFuICQzMCwwMDAgYSB5ZWFyLCB3aGlsZSB0aGUgYm90dG9tIHF1YXJ0ZXIgbWFkZSBsZXNzIHRoYW4gJDE4LDQyMC4gClRoZSBvY2N1bHQgaXMgYmFzZWQgdXBvbiBpbnRlbnQgb2Ygd2lsbCBhbmQgZXhlcmNpc2luZyB0aGF0IHdpbGwgZXh0ZXJuYWxseS4gVGhlcmUgYSByZWFzb24gd2h5IGN5bmljcyBvZiB0aGUgb2NjdWx0IG5ldmVyIGV4cGVyaWVuY2UgInByb29mIi4gVGhlaXIgYmVsaWVmIHBvd2VycyB0aGVpciBpbnRlbnQgYW5kIHdpbGw7IGJ5IGRpc2JlbGlldmluZyBzbyB0aG9yb3VnaGx5IHRoZWlyIGludGVudCBvdmVycG93ZXJzIHRoZSBpbnRlbnQgb2YgdGhlIHNwZWxsIGNhc3RlciBiZWNhdXNlIHRoZSBjeW5pYyBoYXMgbm90IERvdWJ0IHdoaWxlIG1vc3Qgb2NjdWx0aXN0cyBoYXZlIHNvbWUgImRvdWJ0Iiwgc29tZSBiZWxpZWYgdGhhdCB0aGUgc3BlbGwgbWF5IG5vdCB3b3JrIGV4YWN0bHksIG1heSBub3QgaGFwcGVuIHdoZW4gdGhleSB3YW50LiAKQW55b25lIHRoYXQga25vd3MgbWUgY2FuIHZvdWNoIHRoYXQgSSdtIG5vdCBhIGJpZyBzdGF5ZXIgd2hlbiBpdCBjb21lcyB0byBkcmlua2luZyBhcyBJIGdldCB2ZXJ5IHNvY2lhbGx5IGV4Y2l0ZWQgYW5kIG5vcm1hbGx5IGZhbGwgaW4gYSBoZWFwIGVhcmx5LCBoYSBoYS4gU28gYWZ0ZXIgYWxsIHRoaXMgYW5kIHRvIGV2ZXJ5b25lJ3MgYW1hemVtZW50IEkgd2FzIHN0aWxsIGF0IHRoZSBjYXNpbm8gYXQgNmFtIFN1bmRheSBtb3JuaW5nIGFuZCB0aGF0J3Mgd2hlbiBpdCBhbGwgaGFwcGVuZWQuIApIZSBkaWRuIFBlcnNvbmFsbHkgSSB0aGluayBoZSBqdXN0IHB1dCBoZXIgYm9keSBpbiB0aGUgY2FyIGFzIGEgcGxhY2UgdG8ga2VlcCBpdCB1bnRpbCBpdCB3YXMgZGFyayBhbmQgaGUgY291bGQgZ2V0IHRoZSBmaXJlIGdvaW5nLCByYXRoZXIgdGhhbiBsZWF2aW5nIGhlciBpbiB0aGUgbWlkZGxlIG9mIHRoZSBnYXJhZ2UgYmxlZWRpbmcuIEJyZW5kYW4gc2F5cyB0aGV5IHB1dCBoZXIgaW4gdGhlIGNhciBhbmQgZHJvdmUgdGhlIGNhciB0byBhIHF1YXJyeSBwb25kLCBwbGFubmluZyB0byB0aHJvdyBoZXIgaW4gdGhlIHBvbmQsIGJ1dCB0aGUgcG9uZHMgd2VyZSB0b28gc2hhbGxvdyBhbmQgdGhleSBkZWNpZGVkIGFnYWluc3QgaXQuIEhlIHNheXMgdGhleSBwdXQgaGVyIG9uIGEgY3JlZXBlciB0byBicmluZyBoZXIgdG8gdGhlIGZpcmUuIApCYWNoZWxvciBvZiBPcmFsIEhlYWx0aCBpbiAyMDE2IHdvcmtpbmcgaW4gdGhlIEZhY3VsdHkgb2YgRGVudGlzdHJ5J3Mgc2ltdWxhdGlvbiBjbGluaWMuIApObywgSSBuZXZlciBmb3VuZCBvdXQgaGlzIG5hbWUuIEkgQW1lcmljYW4gKEVhc3Rlcm4gRXVyb3BlYW4gYW5jZXN0cnkgbW9zdGx5KSBhbmQgSSBzaWduZWQgdXAgYmVjYXVzZSB0aGVyZSB3YXMgYW4gZW1wbG95ZWUgaGVyZSBhdCB3b3JrIHdobyBoYWQgY2FuY2VyIGFuZCB0aGV5IHdlcmUgbG9va2luZyBmb3IgcGVvcGxlIHRvIHNpZ24gdXAsIGVzcGVjaWFsbHkgaWYgdGhleSB3ZXJlIG9mIEVhc3Rlcm4gRXVyb3BlYW4gZGVzZW50LiAoRW1wbG95ZWUgd2FzIGZpbmUsIG1hZGUgYSBmdWxsIHJlY292ZXJ5KSBJIGZvcmdvdCBhbGwgYWJvdXQgc2lnbmluZyB1cCBhbmQgZWlnaHQgeWVhcnMgcGFzc2VkIGFuZCBJIGdvdCAidGhlIGNhbGwiIChhY3R1YWxseSBhbiBlbWFpbCBmaXJzdCkgd2hpY2ggc3VycHJpemVkIG1lIGEgYml0IGFzIG5vbmUgb2YgbXkgcmVsYXRpdmVzIHdlcmUgaW4gYW55IHdheSBpbGwuIApCYWJpZXMgZGVzZXJ2ZSB0byBmbHkgdG9vLCB3ZSBwYWlkIGxpa2UgZXZlcnlvbmUgZWxzZS4gSSBhbSBzb3JyeSBoZS9zaGUgY3JpZXMgZXZlcnkgb25jZSBpbiBhIHdoaWxlLiAKUHJvIHBsYXllcnMgdGFsayBvZiBvdGhlciB0aGluZ3Mgbm90IHNoZWRkaW5nIGVub3VnaCBsaWdodCB0byB0aGVpciBwYXRpZW5jZS4gCllPdSBhdHRlbXB0IHRvIGp1bXAgaW50byB0aGUgZGVlcCBkYXJrIGFieXNzLCB5b3UgZG8gc28gd2l0aCBzdWNoIHBlcmZlY3QgZm9ybSwgaW4gZmFjdCB5b3UgZGVjaWRlIHRvIGRvIGEgZmV3IGNhcnR3aGVlbHMgYW5kIGJhY2tmbGlwcyB3aGlsZSB5b3Ugd2VyZSBhdCBpdC4gRHVyaW5nIHlvdXIgdGhpcmQgYmFja2ZsaXAgQ2h1Y2tsZXMgYXR0ZW1wdHMgdG8gdG8gcHVzaCB5b3UgYXdheSBhdCB0aGUgbGFzdCBzZWNvbmQsIG9ubHkgdGhhdCBoZSBtaXNjYWxjdWxhdGVkIHRoYXQgbGFzdCBzZWNvbmQgYW5kIGVuZGVkIHVwIGp1bXBpbmcgaW4gd2l0aCB5b3UuIApDZWxhIG4gcGFzIHRvdXQgIGZhaXQgdW4gaGFzYXJkIHNpIGxlcyBodWlsZXMgZXNzZW50aWVsbGVzIHF1aSBlbiBjb250aWVubmVudCBwcnNlbnRlbnQgcGV1IG91IHByb3UgZGVzIHByb3ByaXRzIGFudGkgaW5mZWN0aWV1c2VzIChiaWVuIHF1ZSBjZSBuZSBzb2l0IHBhcyBsIGxldXIgZG9tYWluZSBkZSBwcmRpbGVjdGlvbikuU2kgY2V0dGUgZmFtaWxsZSByZW5mZXJtZW50IGRlIG5vbWJyZXVzZXMgbW9sY3VsZXMgZGlmZnJlbnRlcyBsZXMgdW5lcyBkZXMgYXV0cmVzLCBvbiBwZXV0IGRpcmUgcXVlLCBnbG9iYWxlbWVudCwgbGVzIGh1aWxlcyBlc3NlbnRpZWxsZXMgIGZvcnRlIHRlbmV1ciBlbiBzZXNxdWl0ZXJwbmVzIHNvbnQgZG90ZXMgZGVzIHByb3ByaXRzIHRocmFwZXV0aXF1ZXMgc3VpdmFudGVzIDpCaWVuIHNyLCBpbCBzIGwgZCB0cm9uYyBjb21tdW4gZGUgcHJvcHJpdHMgdGhyYXBldXRpcXVlcywgZCBodWlsZXMgZXNzZW50aWVsbGVzICBzZXNxdWl0ZXJwbmVzIHByc2VudGFudCBkZXMgcHJvcHJpdHMgcGx1cyBzcGNpZmlxdWVzIHF1ZSBuIHBhcyBsZXMgYXV0cmVzLiBQYXIgZXhlbXBsZSwgbGUgY2hhbWF6dWxuZSAobW9sY3VsZSBwcnNlbnRlIGRhbnMgbGVzIGh1aWxlcyBlc3NlbnRpZWxsZXMgZGUgY2Ftb21pbGxlIGFsbGVtYW5kZSBldCBkIG1pbGxlZmV1aWxsZSBldCBxdWkgbGV1cnMgZG9ubmUgdW5lIGpvbGllIGNvdWxldXIgaW5kaWdvKSBlc3QgdW5lIG1vbGN1bGUgYW50aXBobG9naXN0aXF1ZSwgYW50aXBydXJpZ2luZXVzZSBldCBhbnRpaGlzdGFtaW5pcXVlLiBNYWlzIG9uIG5lIHBldXQgZW4gZGlyZSBhdXRhbnQgZGUgbCBlc3NlbnRpZWxsZSBkZSB2dGl2ZXIgZGUgbGFxdWVsbGUgbGUgY2hhbWF6dWxuZSBlc3QgYWJzZW50LiAKSWYgdGhlcmUgaXMgb25lIGdvb2Qgc2hvcnRzdG9wIGxlZnQgYW5kIHlvdSBhbmQgeW91ciBhZHZlcnNhcnkgYm90aCBuZWVkIGEgc2hvcnRzdG9wLCBpdCBtYWtlcyBzZW5zZSB0byBjYWxsIG91dCB0aGF0IHNob3J0c3RvcCBpZiBhbmQgb25seSBpZiB5b3UgaGF2ZSBtb3JlIG1vbmV5IHRoYW4geW91ciBhZHZlcnNhcnkuIElmIG5vdCwgd2FpdCB0byBzZWUgaWYgeW91ciBhZHZlcnNhcnkgc3BlbmRzIGhpcy9oZXIgbW9uZXkgb24gYW5vdGhlciBuZWVkIGFuZCB0aGlzIGdpdmVzIHlvdSB0aGUgZmluYW5jaWFsIGFkdmFudGFnZS4gCkkgMTAgeWVhcnMgb2xkZXIgdGhhbiB5b3UuIEJlbGlldmUgbWUsIHdoZW4gSSBzYXkgdGhhdCBJIHdhc24gYm9ybiB0aGlzIHdheS4gV2hhdCBoYXBwZW5lZCBpcyB0aGF0IEkgc2hvY2tlZCB0byBzZWUgdGhhdCBhIGxvdCBvZiB0aGUgbmFnZ2luZyAidGhpcyBpc24gcmlnaHQiIGZlZWxpbmdzIGFuZCByZWQgZmxhZ3MgdGhhdCBJIHJlbWVtYmVyIGZyb20gbXkgY2hpbGRob29kLCBqdXN0IG1pbm9yIHNoaXQgcmVhbGx5LCBoYXZlIGJsb3duIHVwIGJpZ2dlciB0aGFuIEkgY291bGQgaGF2ZSBldmVyIGltYWdpbmVkIHRvIHRoZSBwb2ludCB3aGVyZSB3ZSBoYXZlIG5hemlzIGFuZCBjb21tdW5pc3RzIGZpZ2h0aW5nIGluIHRoZSBzdHJlZXRzLiBXZSBsaXZpbmcgdGhyb3VnaCB0b3VnaCB0aW1lcywgYW5kIHRoZSB3YXkgb3V0IG9mIGl0IGlzbiBqdXN0IHNtZWFyaW5nIGFuZCBkZWh1bWFuaXppbmcgYW4gZW50aXJlIGdyb3VwIG9mIHBlb3BsZSBhbmQgdHJ5aW5nIHRvIHBlcnNlY3V0ZSB0aGVtLCBpdCBieSBiZWluZyB3aWxsaW5nIHRvIGhhdmUgZGlmZmljdWx0IGNvbnZlcnNhdGlvbnMgYW5kIHRyeWluZyB0byB1bmRlcnN0YW5kIHRoZSBvdGhlciBzaWRlIHBvaW50IG9mIHZpZXcuCkV4ZXJjaXNlIFFpIEdvbmcKQ2UgcXVpIHN1YnNpc3RlLCBlbiBkZWhvcnMgZHUgc2NyaXB0IG9yaWdpbmFsLCB2ZXJzaW9uIGR1bGNvcmUgZHUgcm9tYW4gZGUgVGhvbWFzIEhhcnJpcywgYydlc3QgbGEgY2FtcmEgZGUgSm9uYXRoYW4gRGVtbWUgcXVpIG5vdXMgbGUgbGl2cmUgOiBsZSByZWdhcmQgZGUgSm9kaWUgRm9zdGVyLCBzb24gYWNjZW50ICBwbG91YyAgZHUgU3VkLCBsJ2Ftb3VyIHBvdXIgc29uIHByZSBkZSBzdWJzdGl0dXRpb24sIFNjb3R0IEdsZW5uLiBPbiBuZSB2b2l0IHBsdXMgcXVlIGEgZW4gZmFpdCwgY2UgZHNpciBxdWkgY2lyY3VsZSBlbnRyZSBlbGxlIGV0IGx1aSwgY2V0IGFtb3VyIGltcG9zc2libGUgY29uY2x1IHBhciB1bmUgcm90aXF1ZSBldCBjaGFzdGUgcG9pZ25lIGRlIG1haW4uLiAKTm90IGluIGEgIkhhIGhhISBDaHVyY2ggZHlpbmcuIApNYXNzYWdlIGJ1c2luZXNzIGdvYWxzIHJlbGF0ZWQgdG8gaGVhbHRoIGFuZCB3ZWxsbmVzcyBjYW4gaW5jbHVkZSBzdWNoIHRoaW5ncyBhcyAiY29tbXVuaWNhdGUgdGhlIGhlYWx0aCBiZW5lZml0cyBvZiBtYXNzYWdlIHRvIGVhY2ggb2YgbXkgY3VzdG9tZXJzIHRocm91Z2ggcGVyc29uYWwgY29udGFjdCBhbmQgdGFrZSBob21lIGJyb2NodXJlcyIgb3IgInJlYWQgYXQgbGVhc3QgdHdvIGhlYWx0aCBvciB0cmFkZSBtYWdhemluZSBhcnRpY2xlcyBhIHdlZWsgb24gcmVzZWFyY2ggcmVsYXRlZCB0byBtYXNzYWdlIGhlYWx0aCBiZW5lZml0cy4iLiAKQW5kIHBlcmhhcHMgdGhlIHNoaWZ0IGluIHRoZSB1c2Ugb2YgbGFuZ3VhZ2UsIHRoZSBlbmQgb2Ygc3ltYm9saWMgdmlvbGVuY2UgYWdhaW5zdCB3b21lbiB3aG8gaGF2ZSBhYm9ydGlvbnMgYW5kIGFib3J0aW9uIGFkdm9jYXRlcywgc3ltYm9saXplcyBhIHNsaWdodGx5IGRpZmZlcmVudCBvcmRlciBvZiB0aGluZ3M/IFdlIG1heSBub3cgaGF2ZSBhIHBvbGl0aWNhbCBvcmRlciB3aGVyZSBtb3N0IG9mIHRoZSBwZW9wbGUgaW4gY2hhcmdlIGFyZSBubyBsb25nZXIgc2xhdmVzIHRvIGEgcmFkaWNhbCByZWxpZ2lvdXMgbW92ZW1lbnQuCldoZW4gSSBtb3ZlZCBvdXQgb2YgQ2FsaWZvcm5pYSwgSSBtb3ZlZCB0byBOTCBvbmxpbmUgcGxheSwgYW5kIHBsYXllZCB0aHJvdWdoIHRoZSBUViBleHBsb3Npb24vTW9uZXltYWtlciBlcmEgdXAgdW50aWwgQmxhY2sgRnJpZGF5LiAKVGhlIENSQSBhbHNvIHJlYXNzZXNzZWQgdGhlIDIwMDMsIDIwMDQgYW5kIDIwMDUgdGF4IHllYXJzIGluIHdoaWNoIHRoZSB0YXhwYXllciBjbGFpbWVkIGNoaWxkIGNhcmUgZXhwZW5zZXMgb2YgJDQsODAwLCAkNCwwMDAgYW5kICQ1LDI0NSwgcmVzcGVjdGl2ZWx5LiBOb3JtYWxseSwgdGhlc2UgdGF4IHllYXJzIHdvdWxkIGJlIGNvbnNpZGVyZWQgc2luY2UgdGhlIENSQSBpcyBnZW5lcmFsbHkgcHJvaGliaXRlZCBmcm9tIHJlYXNzZXNzaW5nIGEgdGF4cGF5ZXIgbW9yZSB0aGFuIHRocmVlIHllYXJzIGFmdGVyIHRoZSBvcmlnaW5hbCByZWFzc2Vzc21lbnQgdW5sZXNzIGl0IGNhbiBiZSBzaG93biB0aGUgdGF4cGF5ZXIgYSBtaXNyZXByZXNlbnRhdGlvbiBpbiBmaWxpbmcgaGVyIHJldHVybnMgZm9yIHRoZXNlIHllYXJzIHRoYXQgaXMgYXR0cmlidXRhYmxlIHRvIG5lZ2xlY3QsIGNhcmVsZXNzbmVzcyBvciB3aWxmdWwgZGVmYXVsdC4ganVkZ2UgY29uY2x1ZGVkIHRoZSB0YXhwYXllciBub3QgcGF5IHRoZSBhbW91bnRzIGZvciBjaGlsZGNhcmUgc2hlIGNsYWltZWQgc2hlIHBhaWQgaW4gMjAwMywgMjAwNCBhbmQgMjAwNSBhbmQgdGhhdCBzaGUgdGhlcmVmb3JlIG1hZGUgYSBtaXNyZXByZXNlbnRhdGlvbiBpbiBoZXIgdGF4IHJldHVybnMuIG5lZ2xpZ2VuY2UgcGVuYWx0aWVzClRoaXMgaXMgdGhlIGJlc3QgdGhpbmcgZXZlcgpCZWNhdXNlIG9mIHRoZXNlIG5hdHVyYWwgaXJyZWd1bGFyaXRpZXMgYW5kIHRoZSBjaGFuZ2VzIHRoYXQgZXZlcnkgcGVyc29uIGVuY291bnRlcnMgZHVyaW5nIGxpZmUsIHRoZXJlIGFyZSBzZXZlcmFsIGV2ZXJ5ZGF5IGZvb3QgcHJvYmxlbXMgdGhhdCBvZnRlbiBvY2N1ci4uIApIZSBzdWdnZXN0cyBhbiBlbW90aW9uYWwgYW5zd2VyIHRvIHBlb3BsZSBiYWNrIHBhaW4sIHdoaWNoIEkgd2hvbGVoZWFydGVkbHkgYWdyZWUgd2l0aC4gClBva2VyIHJvb21zCk5vdyBMYW5lIGxpZmUgaXMgdG8gYmUgbGFpZCBiYXJlLiBPbmUgYnkgb25lLCBjb2xsZWFndWVzIGFuZCBhY3F1YWludGFuY2VzIGFyZSBjYWxsZWQgdG8gZ2l2ZSBldmlkZW5jZSBhYm91dCBoZXIgICB0byByZWNhbGwgaW5jaWRlbnRzLCB2ZW50dXJlIG9waW5pb25zLCByZXBlYXQgaGFsZiByZW1lbWJlcmVkIGNvbnZlcnNhdGlvbnMuIEpvdXJuYWxpc3RzIGZldmVyaXNobHkgdGFrZSBkb3duIHRoZWlyIHdvcmRzLCBwZW5zIGZseWluZyBhY3Jvc3Mgbm90ZWJvb2tzIGFzIHdlIHdhaXQgZm9yIHRoZSBxdW90ZSB0aGF0IHdpbGwgbWFrZSB0aGUgZXZlbmluZyBuZXdzIGFuZCB0b21vcnJvdyBwYXBlcnMuIApUaGUgc2t5IHdhcyBncmV5IGFuZCB0aGUgd2VhdGhlciB3YXMgYm9yaW5nIHRvZGF5LiBUaGUgdHJlZXMgb3V0c2lkZSBhcmUgc3RhcnRpbmcgdG8gYnJ1c2ggdXAgYWdhaW5zdCB0aGUgaG91c2UgYWdhaW4sIHRoZXkgbmVlZCB0byBiZSB0cmltbWVkIGF0IHNvbWUgcG9pbnQuIFRoZXJlIGEgZmFtaWx5IG9mIHNxdWlycmVscyBlaXRoZXIgb24gb3IgaW4gdGhlIHJvb2YgSSBwcmV0dHkgc3VyZSwgSSBkb24gdGhpbmsgdGhleSBjYXVzZSBhbnkgaGFybSBidXQgaXQgaXMgZWVyaWUgdG8gaGVhciBzb21ldGhpbmcgcnVubmluZyBhcm91bmQgd2hlbiB5b3UgYXJlIGhvbWUgYWxvbmUuCkNvcnBvcmF0aW9ucyBpcyBvbmUgd2F5IHRvIGdldCB0aGUgaW5kaXZpZHVhbHMgaWRlYSBvdXQgdGhlcmUuIApUaGluZ3MgbGlrZTogQW1hem9uIG9mZmVyaW5nIHRvIGJ1eSBaYXBwb3MgLyBCYWJpZXNkb3Rjb20sIGdldHRpbmcgcmVqZWN0ZWQsIGFuZCB0aGVuIHJlbGVhc2luZyBhIGNvbXBldGluZyBwcm9kdWN0IGF0IGEgbmV0IGxvc3MgdW50aWwgdGhlIGNvbXBhbmllcyB3ZXJlIGZvcmNlZCB0byBiZSBhY3F1aXJlZCBvciBmYWNlIGJhbmtydXB0Y3kuIApBbHNvIG5nbCB3aGVuZXZlciBJIGhlYXIvcmVhZCBhYm91dCBGcmFuY2lzIEJhY29uIEkgdGhpbmsgb2YgdGhhdCByZWRkaXRvciB3aG8gZ3JldyB1cCB3b25kZXJpbmcgd3RmIHlvdSB0YWNrIGlzIGJhY29uIG9udG8gdGhlIHdpc2UgcGhyYXNlIGlzIHBvd2VyLiBMaWtlLCBJIGNvdWxkIGltYWdpbmUgdGhlIDE3dGggY2VudHVyeSBwaGlsb3NvcGhlci9zY2llbnRpc3QgY291bGQgaGF2ZSBkb25lIHNvbWUgcGFpbnRpbmcgdG9vLCBidXQgdGhlIHN0eWxlIHNlZW1lZCByZWFsbHkgYWhlYWQgb2YgaGlzIHRpbWUuIAoiSXQgd2FzIGEgbmljZSBsaWZlLiBJdCB3YXMgZ29vZC4gQW5kIHBsdXMsIEkgaGFkIHRoZSBiYWRnZS4gSSBjb3VsZG4ndCBnZXQgYW55IHRyb3VibGUsICIgc2F5cyBQcmV2aXRlLgpVbmZvcnR1bmF0ZWx5LCB0aGlzIHdhcyBub3QgdG8gYmUgdGhlIGNhc2U7IEFsaWNlIGJlY2FtZSBoZXIgaHVzYmFuZCdzIGZ1bGx0aW1lIGNhcmV0YWtlciBhbmQgbGVmdCB0aGUgZ2FtYmxpbmcgbGlmZXN0eWxlIGJlaGluZCB1bnRpbCBoZSBkaWVkIGluIGhlciBhcm1zIHN1ZmZlcmluZyBmcm9tIHBuZXVtb25pYSBpbiAxOTEwIGR1cmluZyBhIHdpbnRlciBibGl6emFyZC4gQWxpY2UsIHdpdGggdGhlIGZyb3plbiBjb3Jwc2Ugb2YgaGVyIGh1c2JhbmQgYXQgaGVyIHNpZGUsIGRyb3ZlIGEgdGVhbSBvZiBtdWxlcyBhbmQgYSB3YWdvbiA0OCBtaWxlcyB0aHJvdWdoIGhvd2xpbmcgd2luZHMgYW5kIGRlZXAgc25vd2RyaWZ0cyB0byBTdHVyZ2lzLCB0aGUgbmVhcmVzdCB0b3duLiAKSW4gSWNlbGFuZGljIHRoZSB3b3JkIGZvciBwaWFubyBpcyAiYmVhdCBoYXJwIiBvciAicGVyY3Vzc2lvbiBoYXJwIiBkZXBlbmRpbmcgb24gaG93IHlvdSBpbnRlcnByZXQgaXQuIEFsdGhvdWdoIG5vIG9uZSB1c2VzIGl0IHVuIGlyb25pY2FsbHksIHdlIGp1c3QgY2FsbCBpdCBhIHBpYW5vLgpUaGlzIGlzIGxvbmcgdGVybSBtZW1vcnkuIApDaGFuZ2VyIDogb3VpIG1haXMgcGFzIHRvdXQgZCd1biBjb3VwIDogaWwgcydhZ2l0IHBsdXR0IGRlIG1ldHRyZSBlbiBwbGFjZSBkZXMgdGFwZXMgZW4gbGllbiBhdmVjIGNlIHF1J29uIGEgY29tcHJpcywgcG91ciBwcm9ncmVzc2l2ZW1lbnQgbW9kaWZpZXIgc2VzIGhhYml0dWRlcyBhbGltZW50YWlyZXMsIHF1J2lsIHMnYWdpc3NlIGRlcyBxdWFudGl0cywgZHUgY29udGVudSBkZSBsJ2Fzc2lldHRlLCBkZSBsJ29yZ2FuaXNhdGlvbiwgZGUgcmFwcHJlbmRyZSAgY291dGVyIHNhIGZhaW0sIGRlIGxhIGdlc3Rpb24gZHUgc3RyZXNzLCBkJ2FwcHJlbmRyZSAgY291dGVyIHNlcyBlbnZpZXMgZXQgc2F2b2lyIGRpcmUgbm9uLCBkZSByZW1hbmdlciBkZXMgYWxpbWVudHMgcXUnb24gcydpbnRlcmRpc2FpdCBzYW5zIGN1bHBhYmlsaXNlciAuIEVuIHByZW5hbnQgZW4gY29tcHRlIHNlcyBjb250cmFpbnRlcywgc29uIGVudmlyb25uZW1lbnQsIHNlcyBnb3RzLCAuCkFuZCB0aGlzIGlzIHRoZSByZWFzb24gdGhlIHBhcnR5IHdhcyBmb3JtZWQuIEl0IGdyZXcgb3V0IG9mIHBvc3RuYXRpb25hbGlzdCBvcHBvc2l0aW9uIHRvIENhdGFsYW4gaWRlbnRpdGFyaWFuaXNtLiAxMiBwb2ludHMgIHN1Ym1pdHRlZCAyMiBkYXlzIGFnbwpZZWFoLCBvbiB0aGUgc3VyZmFjZSBpdCBoYXMgYSBzaWxseSB0aXRsZSBhbmQgcHJlbWlzZSwgYnV0IHRoaXMgaXMgYSBzdHJhbmdlLCB3b3J0aHkgbW92aWUgc3RhcnJpbmcgc29tZSB2ZXJ5IHRhbGVudGVkIGFjdG9ycy4gSXQgc3RhcnRzIG91dCBzZXJpb3VzLCBhcyBXYWx0ZXIgQmxhY2sgKEdpYnNvbikgaXMgZGVwcmVzc2VkIHdpdGggaGlzIHRveSBjb21wYW55IGdvaW5nIGJhbmtydXB0IGFuZCBtYXJyaWFnZSBmYWlsaW5nLiBIZSBtb3ZlcyBpbnRvIGEgaG90ZWwgYW5kIGF0dGVtcHRzIHN1aWNpZGUgYnV0IGlzbid0IHN1Y2Nlc3NmdWwuIAoiSXQgc291bmRzIG1vcmUgbGlrZSB3aGVyZSBJJ3ZlIGNvbWUgZnJvbSB0aGFuIGFueSBvdGhlciBtdXNpYyBJJ3ZlIGV2ZXIgbWFkZSwiIGhlIHRvbGQgVGhlIEhvbGx5d29vZCBSZXBvcnRlciBiZWZvcmUgdGhlIHByb2plY3QgZXZlbiBoYWQgYSB0aXRsZSBvciByZWxlYXNlIGRhdGUuIApJIGZhY2VkIHdpdGggdGhlIHNhbWUgZGlsZW1tYS4gSSBoYXZlIHdheXl5IHlvaSBtYW55IHNsYWJzIGFuZCBiaW5kZXIgSSBhY2N1bXVsYXRlZCBzaW5jZSBJIGJlZW4gaGVyZSBhbmQgb25seSAxNzcgZGF5cyB0byBnbyBiZWZvcmUgSSByZXR1cm4gdG8gdGhlIFN0YXRlcy4gU2luY2UgSSBoYWQgbm8gaXNzdWUgZ2V0dGluZyBhbnl0aGluZyBtYWlsZWQgb3V0IGhlcmUgdGhyb3VnaCBVU1BTIEkgYW0gZ29pbmcgdG8gc3RhcnQgc2xvd2x5IG1haWxpbmcgdGhlIG1vcmUgdmFsdWFibGUgY29pbnMgaG9tZSB0byBhIHRydXN0ZWQgcmVsYXRpdmUgYXMgbXkgdGltZSBkcmF3cyBjbG9zZXIuIApQb2tlciBGYW5zCldoaWxlIGluIGhpcyB0d2VudGllcywgTm9ydG9uIHdvcmtlZCBhcyBhbiBpcm9ud29ya2VyIGhlbHBpbmcgdG8gYnVpbGQgdGhlIFdvcmxkIFRyYWRlIENlbnRlciBpbiBOZXcgWW9yayBDaXR5LiBBdCB0aGUgYWdlIG9mIDI4IGhlIHdhcyBlbGVjdGVkIHRvIHRoZSBNb2hhd2sgQ291bmNpbCBvZiBLYWhuYXdha2UsIHRoZSBnb3Zlcm5pbmcgYm9keSBmb3IgdGhlIDgsMDAwIG1lbWJlciB0cmliZSBsb2NhdGVkIG1pbnV0ZXMgZnJvbSBNb250cmVhbC4gCllvdSBzaG91bGQgZXhwZWN0IHlvdXIgZmFtaWx5IG1lbWJlcnMgdG8gc3ltcGF0aGl6ZSBhbmQgcGVyaGFwcyBzaWRlIHdpdGggeW91ciBjb3VzaW4uIFRoaXMgZmFsbHMgaW50byB0aGUgYWdlIG9sZCBjYXRlZ29yeSBvZiAiYmxvb2QgaXMgdGhpY2tlciB0aGFuIHdhdGVyLiIgSWYgeW91IHdhbnQgdG8gc2hhcmUgeW91ciBwb2ludCBvZiB2aWV3LCB5b3Ugc2hvdWxkIGRvIHNvIGRpcmVjdGx5IHdpdGggeW91ciBjb3VzaW4uIFlvdSBjYW4gYmVsaWV2ZSB3aGF0ZXZlciB5b3Ugd2FudCB0byBiZWxpZXZlLCBidXQgdGhlcmUgaXMgbm8gcmVhc29uIGZvciB5b3UgdG8gZ29zc2lwIHdpdGggb3RoZXIgZmFtaWx5IG1lbWJlcnMgYWJvdXQgd2hhdCBpcyBoYXBwZW5pbmcgd2l0aCBzb21lb25lIGVsc2UgbWFycmlhZ2UuLiAKSGVyZSBhIHZpZGVvIGRlZGljYXRlZCB0byBOZWNyb24gb3JicyBpIGp1c3QgZm91bmQsIGJ5IElESUNCZWVyIHdoaWNoIGlzIG9uZSBvZiB0aGUgbW9zdCBub3RvcmlvdXMgTmVjcm9uIHBsYXllcnMgYXJvdW5kLCBkdWRlIGhhcyBiZWVuIGF0IHRoZW0gZm9yIGEgd2hpbGUuIE1XRyBKYXkgaXMgYSBnb29kIHRlYWNoZXIsIGFuZCBoZXJlIGhlIHRhY2tsZXMgZ2xvd2luZyBvcmJzLiAKIlRoZXJlIGlzIG5vIGV2aWRlbmNlIHRoYXQgaGUgaGFzIHNlcmlvdXMgY3JpbWluYWwgaW52b2x2ZW1lbnQgaW4gcnVubmluZyBhIGdhbmcgb3IgZW50ZXJwcmlzZSBvciBvcGVyYXRpb24sIGFuZCB0aGVyZSBpcyBubyBsaW5rIGJldHdlZW4gdGhlc2UgbW9uaWVzIGFuZCBhbnkgcGFydGljdWxhciBjcmltZS4gSXQgd2FzIGhpcyBzeXN0ZW0gdG8gYXNrIHBlb3BsZSB0byBob2xkIHN1bXMgb2YgY2FzaCBmb3IgaGltLiIuIApFcmljIFBhZGRvY2sgc2FpZCBoZSBhbmQgaGlzIGJyb3RoZXIgaGFkIGJvdWdodCBhbmQgc29sZCBzb21lIG9mIHRob3NlIHByb3BlcnRpZXMgdG9nZXRoZXIgYW5kIHRoYXQgU3RlcGhlbiBQYWRkb2NrIHJlYWwgZXN0YXRlIGFuZCBnYW1ibGluZyBleHBsb2l0cyBoYWQgdHVybmVkIGhpbSBpbnRvIGEgbXVsdGltaWxsaW9uYWlyZS4uIApEck1hbmx5IHUKUGlvdHJvd3NraSBBZGFtIEJvbGVzbGF3ClRoZXJlIGFyZSBzZXZlcmFsIGNoYWxsZW5naW5nIGFuZCBzZXJlbmUgZ29sZiBjb3Vyc2VzIHRvIGNob29zZSBmcm9tIGluIE5ldyBaZWFsYW5kLCBhbmQgZWFjaCBjb3Vyc2Ugb2ZmZXJzIHRoZWlyIG93biB1bmlxdWUgZXhwZXJpZW5jZS4gV2UnbGwgZ28gb3ZlciB0aGUgYmFzaWNzIHRvIHBsYW4gd2hhdCB0aW1lIG9mIHRoZSB5ZWFyIHdvdWxkIGJlLgoiSSB3b3JrZWQgZm9yIHNldmVyYWwgeWVhcnMgYXMgYSBmcmVlbGFuY2UgcmVwb3J0ZXIgYW5kIHdoZW4gSSBmaW5hbGx5IGdvdCB0aGUgY292ZXRlZCBqb2IgICB0aGUgdW5pb24gam9iICAgdGhhdCB3ZSBhcmUgYWxsIGxvb2tpbmcgZm9yIHNvbWV0aGluZyBraW5kIG9mIGRpZWQgZm9yIG1lIGFuZCBJIHJlYWxpemVkIHNvbWV0aGluZyBhYm91dCBteXNlbGYsIiBXYWxsbmVyIGV4cGxhaW5lZC4gIkkgZmluZCB0aGUgY2hhbGxlbmdlIG9mIGhhdmluZyB0byBjb21wbGV0ZWx5IHJlaW52ZW50IGFuZCBmaW5kIHdvcmsgaXMgZmFyIG1vcmUgaW50ZXJlc3RpbmcgYW5kIG1vcmUgcmV3YXJkaW5nLiIuIApDKSB5b3VyZSBnb2luZyB0byBuZWVkIHRvIHBpY2sgdXAgYm9va3MsIGtleWJvYXJkcywgYW5kIHJhbmRvbSBkZXZpY2VzIHRvIHRlc3QgeW91ciBza2lsbCBsZXZlbHMuIFRha2Ugbm90ZXMgcmVsaWdpb3VzbHkgYmVjYXVzZSBpdCBiYWQgd2hlbiB5b3UgaGF2ZSB0byBHb29nbGUgdGhlIHNhbWUgY3JhcCBhIGRvemVuIHRpbWVzIGJlY2F1c2Ugd2hvIGNhbiByZW1lbWJlciBldmVyeXRoaW5nIHJpZ2h0IGF3YXk/PyBOb3QgbWFueS4gQWxzbyBkYXRhIHJldGVudGlvbiBkdWUgdG8gbm90ZXMgYmxhaCBibGFoCkl0IHdhcyBhIHBlcmlvZCBpbiB3aGljaCB0aGUgVmlraW5ncyB3ZXJlIGJlZ2lubmluZyB0byBiZWNvbWUgbW9yZSBvcmdhbmlzZWQgYW5kIHN0cm9uZy4gCjAgVG9sZXJhbmNlIGZvciBwcm9tb3RpbmcgZXNjb3J0IHNlcnZpY2VzIG9yIG91dGNhbGxzLCBUaGlzIGlzIGhlYWx0aCBjYXJlLCBub3QgcHJvc3RpdHV0aW9uLiBUaGlzIGluY2x1ZGVzICJydWIgYW5kIHR1Z3MsIiAiZXJvdGljIiwgImhhcHB5IGVuZGluZ3MsIiBldGMuClRoZXNlIGFyZSBtb3N0IG9mIHRoZSB0eXBlcyB0aGF0IEkgc2VlIGluIG15IGhvbWUgZ2FtZS4gCkluIHRoZSBsb25nIHJ1biwgYSBzb2xpZCBwbGF5ZXIgd2lsbCBlbmQgdXAgd2l0aCBhbGwgb2YgdGhlIG92ZXJseSB6ZWFsb3VzJ3MgbW9uZXkgYXMgbG9uZyBhcyB0aGUgc29saWQgcGxheWVyIGNhbiBzdXJ2aXZlIHRoZSBzaG9ydCB0ZXJtIGZpbmFuY2lhbCBzd2luZ3MuLiAKQWNjb3JkaW5nIHRvIHRoZSByZXNlYXJjaCBmcm9tIEdXVSwgaW5kb29yIHdvcmtlcnMgaGF2ZSBhIGxvdyByaXNrIG9mIFNURHMgYW5kIGFyZSByYXJlbHkgdGFyZ2V0cyBvZiBhYnVzZSBvciB2aW9sZW5jZS4gCkRyLiBKZWZmcmV5IFdpbm5pY2tpIHN0YXJ0ZWQgVGhlIERlbnRhbCBTaG9wcGUgaW4gTWF5IG9mIDIwMDYuIApCT0xBSE9PRCwgSm9zZXBoICAgUGFzc2VkIGF3YXkgYXQgTGFrZXJpZGdlIEhlYWx0aCBPc2hhd2EgYWZ0ZXIgYSBicmllZiBpbGxuZXNzIG9uIFR1ZXNkYXksIE5vdmVtYmVyIDIybmQsIDIwMTEgYXQgdGhlIGFnZSBvZiA5OS4gSGUgbGVhdmVzIGhpcyB3aWZlIG9mIDYwIHllYXJzLCBCZWF0cmljZSAoV2FraWwpIEJvbGFob29kOyBoaXMgc29uLCBXYXluZSBCb2xhaG9vZCBhbmQgaGlzIHdpZmUgQ2F0aHk7IGhpcyBkYXVnaHRlciwgRGFybGVuZSBCb2xhaG9vZCBhbmQgaGVyIHBhcnRuZXIgQ2hhcmxlcyBTeWxnZTsgaGlzIGRhdWdodGVyLCBNYXJ5IEpvIE1vcnJpc29uIGFuZCBoZXIgaHVzYmFuZCBSb2JlcnQ7IGhpcyBzb24gSm9zZXBoIEJvbGFob29kIElJIGFuZCBoaXMgd2lmZSBDYXJvbHluLiAKRmluZCBhIHNpdGUgdGhhdCB3ZWxjb21lcyBuZXcgbWVtYmVycyB3aXRoIGdvb2Qgd2VsY29tZSBwYWNrYWdlIGFuZCBvZmZlcnMgcmVsb2FkIGJvbnVzZXM7VGhlIHNvZnR3YXJlIGlzIG9uZSBvZiB0aGUga2V5IHRoaW5ncyB0aGF0IG1ha2UgYSBnb29kIHBva2VyIHNpdGUuIFdoZXRoZXIgdGhlIGdhbWVzIHJ1biBzbW9vdGhseSwgdGhlIGdyYXBoaWNzIGlzIGdvb2QgYW5kIHRoZXJlIGFyZSBzZXZlcmFsIHBva2VyIHZhcmlhbnRzIGRlcGVuZCBvbiB0aGUgcG9rZXIgc29mdHdhcmU7MjQvNyBjdXN0b21lciBzdXBwb3J0IHNlcnZpY2UsIHZhcmlvdXMgYmFua2luZyBtZXRob2RzIGFuZCBmYXN0IGNhc2hpbmcgb3V0cyBhcmUgc29tZSBvZiB0aGUgYmVuZWZpdHMgdGhhdCBnb29kIG9ubGluZSBwb2tlciBzaXRlcyBvZmZlciB0byB1c2Vycy4uIApFdmVuIGlmIHRoZXkgc3BlbmQgYWxsIG9mIHRoaXMgaW5jb21lIGFuZCBjYXBpdGFsIGJ5IExvdWlzYSBhZ2UgOTAsIHRoZXkgd291bGQgc3RpbGwgaGF2ZSBhICQxIG1pbGxpb24gaG91c2UgYXBwcmVjaWF0ZWQgYXQgbWFya2V0IHJhdGVzLCBMb3Vpc2EgcGVuc2lvbnMsIENQUCwgT0FTIGFuZCBhIHJlbnRhbCBwcm9wZXJ0eS4uIApFbGxlcyByZWxpZW50IGxlcyBuZXJnaWVzIHRlbGx1cmlxdWVzIGV0IGNvc21pcXVlcywgZGlzc29sdmVudCBsZXMgYmxvY2FnZXMgZXQgbGEgcmlnaWRpdCwgYXBhaXNlbnQsIGR0ZW5kZW50IGV0IHF1aWxpYnJlbnQgbGUgc3lzdG1lIG5lcnZldXguIEVsbGVzIHNvbnQgZCBib24gc291dGllbiBwb3VyIGNldXggcXVpIG1kaXRlbnQgIChMeWRpYSBCb3Nzb24sIEwgbmVyZ3RpcXVlLCBwLiAKQXJlIHZpb2xlbnQgYmVhc3RzLiAKSSBob3BlIGV2ZXJ5b25lIHdpbGwgdGFrZSB5b3VyIGFkdmljZSwgSSBjb3VsZG4gYWdyZWUgbW9yZS4gWW91ciB0aW1lIGlzIGxpa2UgYSBiYW5rIGFjY291bnQsIGFuZCBldmVyeSB0aW1lIHlvdSBjb21taXQgdG8gc29tZXRoaW5nLCB5b3UgdGFraW5nIG1vbmV5IG91dCBvZiB0aGF0IGFjY291bnQuIApJIGhhdGUgaXQgYW5kIGhhdmUgc3RvcHBlZCBvcGVubHkgY29tcGxpbWVudGluZyBteSBodXNiYW5kIGluIGZyb250IG9mIG15IGZlbWFsZSBhY3F1aW50YW5jZXMgYmVjYXVzZSBvZiB0aGlzIGF0dGl0dWRlLiAKSXQgYWJvdXQgbm9ybWFsIGZvciBhIHN0eWxlIHBsYWNlLiAKIlRoZSB1cHMgYW5kIGRvd25zIHRocm91Z2hvdXQgbWFrZSBmb3IgbmljZSB0ZW5zaW9uIGEgbGVzc2VyIHZlcnNpb24gb2YgdGhlIGlkZWEgY291bGQgaGF2ZSBoYWQgaGltIHdha2UgdXAgZWFjaCBtb3JuaW5nIGF0IGEgZGlmZmVyZW50IGhvdGVsIGhhdmluZyBmdW4uIiBDaGVjayBpdCBvdXQgaGVyZS4gCkkgdXBkYXRlIHRoaXMgcG9zdCB0b25pZ2h0IHdoZW4gSSBzbW9rZSBzb21lIGlmIEkgY2FuIHJlbWVtYmVyIHRvLiBEZWZpbml0ZWx5IHdvcnRoIHRoZSA5OSB0aG91Z2gsIGFuZCB0aGF0IHdpdGhvdXQgc21va2luZyBpdCB5ZXQuICAxIHBvaW50cyAgc3VibWl0dGVkIDE2IGRheXMgYWdvLiAKT2theSwgd2UgaGF2ZSBvdXIgb25lIGFkZHJlc3MuIApXZSBoYXZlIGdlbmVyYWxseSBjcmVhdGVkIGEgZ2VuZXJhdGlvbiBvZiB0ZWVucyB0b28gY29uZmxpY3RlZCBhYm91dCBzZXggdG8gcHV0IGEgY29uZG9tIG9uIGl0LiAyMDA3IGZlZGVyYWxseSBtYW5kYXRlZCByZXBvcnQgZm91bmQgdGhhdCBBYnN0aW5lbmNlIE9ubHkgcHJvZ3JhbXMgZGlkIG5vdCBpbmZsdWVuY2Ugc2V4dWFsIGJlaGF2aW9yLCBidXQgdGhleSBkaWQgaGF2ZSBhbiBpbXBhY3Qgb24gc2V4dWFsIHNtYXJ0cy4gV2hvIHVuZGVyd2VudCBhYnN0aW5lbmNlIHByb2dyYW1zIHdlcmUgbXVjaCBtb3JlIGxpa2VseSB0byBiZSB1bnN1cmUgd2hldGhlciBhIGNvbmRvbSB3YXMgZWZmZWN0aXZlIGF0IHByZXZlbnRpbmcgU1REcy4uIApBcHByZW5leiAgZGlzdHJpYnVlci4gIG1vaW5zIGRlIGpvdWVyIGRhbnMgdW4gY2FzaW5vLCBsZSBybGUgZGUgZG9ubmV1ciBwYXNzZXJhIHNhbnMgZG91dGUgZCd1biBqb3VldXIgIGwnYXV0cmUgIGNoYXF1ZSBub3V2ZWxsZSBtYW5jaGUuIExlIGRvbm5ldXIgZG9pdCBtbGFuZ2VyIGxlcyBjYXJ0ZXMgZXQgbGVzIGRpc3RyaWJ1ZXIgZW4gc2VucyBob3JhaXJlIGVuIGNvbW1lbmFudCBwYXIgbGUgam91ZXVyICBzYSBnYXVjaGUgZXQgZW4gdGVybWluYW50IHBhciBsdWkgbW1lLiBMZXMgY2FydGVzIGRvaXZlbnQgdHJlIGRpc3RyaWJ1ZXMgZmFjZSBjYWNoZSB1bmUgcGFyIHVuZSBqdXNxdScgY2UgcXVlIGNoYXF1ZSBqb3VldXIgZW4gYWl0IDUuClRwaGFudG9tMSAgMSBwb2ludCAgc3VibWl0dGVkIDE2IGhvdXJzIGFnbwpJIGhhdmVuIGFjdGl2ZWx5IHdvcmtlZCBvbiB2b2NhYiBpbiBhIGxvbmcgdGltZSAobXkgZmF1bHQgSSBsYXp5KSBidXQgd2hpbGUgd3JpdGluZyByZWNlbnRseSBJIHJlYWxpemVkIEkgbmVlZGVkIHRoZSBkaWN0aW9uYXJ5IGEgbG90IGxlc3MgYW5kIEkga25ldyBhIGxvdCBvZiB3b3JkcyB0aGF0IEkgbmV2ZXIgd2VudCBvdXQgb2YgbXkgd2F5IHRvIGxlYXJuLiAKSXQgd291bGQgY2FycnkgcGVvcGxlIGJldHdlZW4gQ2hpY2FnbydzIGRvd250b3duIGFuZCBPJ0hhcmUgSW50ZXJuYXRpb25hbCBBaXJwb3J0IGF0IHNwZWVkcyBvZiB1cCB0byAxNTAgbXBoIHRocm91Z2ggdW5kZXJncm91bmQgdHVubmVscy4uIApQbGF5ZXJzIG9mIHZpZGVvIHBva2VyIGNhbiBlbmpveSBvbmxpbmUgYWxtb3N0IGFsbCB2aWRlbyBwb2tlciB0eXBlcyBqdXN0IGFzIG9mZmxpbmUuIAoxOS4gUG9saWNlIGhhZCBkZXRlcm1pbmVkIGEgc2VyaWVzIG9mIHN0b3JlaG91c2UgZm9yY2VkIGVudHJpZXMgaGFkIHNldmVyYWwgc2ltaWxhcml0aWVzLCBpbmNsdWRpbmcgdGhlIHNhbWUgZGF5IG9mIHRoZSB3ZWVrLiBUaGUgQ29ybmVyIFB1YiBoYWQgYmVlbiBoaXQgYmVmb3JlIG9uIEphbi4gCkV4Y2VsbGVudCBjb2ZmZWUgaXMgc2VydmVkIGF0IHRoZSB0YWJsZS4uIApPYnZpb3VzbHkgd2Ugd291bGQgYmUgaW50ZXJlc3RlZCBpbiByZXBlYXRpbmcgdGhlIHN0dWR5IGluIG90aGVyIGNvdW50cmllcywgYnV0IHRoYXQgd291bGQgbm90IGVzdGFibGlzaCB2YWxpZGl0eSBpbiB0aGUgVVMuIEF0IGxlYXN0LCBpdCB3b3VsZCBkbyBtdWNoIGxlc3MgdGhhbiByZXBlYXRpbmcgdGhlIHNhbWUgc3R1ZHkgaW4gdGhlIFVTIHdpdGggb3RoZXIgY29tYmluYXRpb25zIG9mIHJhY2UgYW5kIGltcGxpZWQgY2xhc3MuClRoZSAkMTAsMDAwIGl0IHdvdWxkIGNvc3QgYSB5ZWFyIHdvdWxkIGJlIGEgYnVyZGVuIG9uIHRoZSBQYWl1dGUgdHJpYmUuIFRoYXQgbGFuZCB3YXMgZ2l2ZW4gdG8gdGhlIHRyaWJlIGZyZWUgYW5kIGNsZWFyLiBQYWl1dGVzIGhhdmUgZW5kdXJlZCBzbyBtdWNoIHdpdGggdGVybWluYXRpb24gYW5kIGNvdW50bGVzcyBjb3VydCBiYXR0bGVzIG92ZXIgbGFuZC4gVGhleSBoYWQgYSBsb3Qgb2YgaGFyZHNoaXBzLCBUb20gc2FpZC4gdGltZSB3ZSBsb29rIHRvIHRoZSBmdXR1cmUgYW5kIHRlYWNoIG91ciB5b3VuZyBwZW9wbGUgdGhhdCB0aGVyZSBpcyBzb21ldGhpbmcgdG8gbG9vayBmb3J3YXJkIHRvLiAKSSB3b3VsZCBhbHNvIHJlY29tbWVuZCBjaGVja2luZyBvdXQgU3RhbmZvcmQgYm9vayAoVGhlIEh1bnRpbmcgQXBlcyksIGFsdGhvdWdoIEkgZGlzYWdyZWUgd2l0aCBtdWNoIG9mIHdoYXQgaGUgc2F5cy4gCiJDZXJ0YWlubHkgbm8gaW5kaWNhdGlvbiB0aGF0IHNoZSBoYWQgYSBjaGlsZC4iIEZhbHNvbiBoYXMga25vd24gTGFuZSBzaW5jZSBzaGUgd2FzIDE1IGFuZCBpcyBoYXZpbmcgdHJvdWJsZSBhY2NlcHRpbmcgcmV2ZWxhdGlvbnMgb2YgaGVyIGR1cGxpY2l0eS4gIkEgY29tcGxldGUgcHV6emxlLCIgaGUgc2F5cywgdW5lYXNpbmVzcyBpbiBoaXMgdm9pY2UuIFRoZSBjb3VydCBidWlsZGluZyBpcyBhIGNoYXJtbGVzcywgc2luZ2xlIHN0b3JleSBicmljayBzdHJ1Y3R1cmUgc3Vycm91bmRlZCBvbiB0aHJlZSBzaWRlcyBieSB0aGUgc3ByYXdsaW5nIGNhciBwYXJrIG9mIGEgbGFyZ2UgZGVudGFsIGhvc3BpdGFsLiAKVGVybXMgb2YgZnV0dXJlIHBsYW5zLCBEYW5pZWxzIHNheXMgdGhleSBhcmUgc3RpbGwgd29ya2luZyBvbiB0aGF0LiAKVW5saWtlIGxpdmUgcG9rZXIgZ2FtZXMsIHBsYXlpbmcgb25saW5lIHBva2VyIHdpbGwgbm90IGVuYWJsZSB5b3UgdG8gc2VlIHRoZSByZWFsIHBsYXllcjsgeW91IG9ubHkgaGF2ZSB0aGVpciBuYW1lIGFuZCB0aGUgYW1vdW50IG9mIHRoZWlyIG1vbmV5IHRvIGtub3cgeW91IGFyZSBwbGF5aW5nIHdpdGggdGhlIHNhbWUgcGxheWVyLiBJbiBzbyBkb2luZywgeW91IHdvbid0IGV2ZW4gbm90aWNlIHdoZW4gb25lIHBsYXllciBsZWF2ZXMgYW5kIGFub3RoZXIgcGxheWVyIHNpdHMgZG93bi4uIApUaGUgYmVzdCBwbGF5ZXJzIHdpbGwgYmVhdCB5b3Ugd2l0aG91dCBsb29raW5nIGF0IHRoZWlyIGNhcmRzLiAKVGhpbmsgMTgga2FyYXRzLiAKVGhpcyBpcyBqdXN0IGEgbGFjayBvZiB1bmRlcnN0YW5kaW5nIGFib3V0IGhvdyBsYWIgZ3Jvd24gbWVhdCB3b3Jrcy4gSXQgbGl0ZXJhbGx5IGp1c3QgYW5pbWFsIGNlbGxzIHRoYXQgaGF2ZSBiZWVuIG1hZGUgdG8gZ3JvdyBpbnNpZGUgYSBwZXRyaSBkaXNoIHJhdGhlciB0aGFuIGluc2lkZSB0aGUgYW5pbWFsLiAKTm8gY2FtcGFpZ24gd2FzIGEgYml0IG9mIGEgYmxvdyB0byBtZS4gSSBhbHdheXMgbGlrZWQgdGhlIE1pY2hlYWwgQmF5IGVzcXVlIGNhbXBhaWducywgaSBldmVuIHRoaW5rIHRoZSBvcmlnaW5hbCBNb2Rlcm4gV2FyZmFyZSBjYW1wYWlnbnMgYXJlIHVwIHRoZXJlIGluIHRlcm1zIG9mIHNvbWUgbXkgZmF2b3JpdGUgRlBTIGV4cGVyaWVuY2VzLiBUaGV5IGhhZCBzb21lIHJlYWxseSBlbmpveWFibGUgbW9tZW50cy4gRXZlbiBBZHZhbmNlZCBXYXJmYXJlIGhhZCBhIHZlcnkgZnVuIGNhbXBhaWduLiBDZXJ0YWlubHkgbm90IGEgZGVhbCBicmVha2VyIHRvIHJlbW92ZSB0aGVtIGJ1dCBpdCBkb2VzbiBoZWxwIGp1c3RpZnkgdGhlIHByaWNlIHRhZy4KVGhlIHRoaW5nIGlzLCBwb29ybHkgZWR1Y2F0ZWQgcGVvcGxlIHdobyBkb24gdW5kZXJzdGFuZCBvciBjYXJlIGFib3V0IG51dHJpdGlvbiBidXQgc3RpbGwgZWF0IG1lYXQgYXJlIGp1c3QgYXMgcHJvbmUgdG8gdml0YW1pbiBkZWZpY2llbmNpZXMsIG9mIGRpZmZlcmVudCBraW5kcy4gClNoZSBkZXNjcmliZXMgQW5kcmV3IE5vcnJpcyBhcyBmYWlyIGhhaXJlZCwgdGFubmVkLCB3ZWxsIGJ1aWx0IGFuZCBvZiBtZWRpdW0gaGVpZ2h0LiAKSSBqdXN0IHdvbmRlciBpZiBob21lc2Nob29saW5nIHdvdWxkIGJlIGJldHRlci4gClBlcmhhcHMgcGVvcGxlIHdlcmUganVzdCBkb2luZyBhIGxvdCBvZiBzZXJlbmRpcGl0b3VzIGRyaXZpbmcgYXMgYW4gb3JnYW5pemVkIGNyZXcuIApUaGV5IGNhbWUgZnJvbSBBbWVyaWNhLCBDaGluYSwgU291dGggQW1lcmljYSBhbmQgYWxsIG92ZXIgRXVyb3BlLCBhcyB3ZWxsIGFzIHRoZSBVSy4uIApUaGUgYmFycmllciB0byBlbnRyeSBmb3IgdGVsZWNvbXMgaXMgTVVDSCBoaWdoZXIgZm9yIGEgdmFyaWV0eSBvZiByZWFzb25zICAgZnJvbSByZWd1bGF0aW9ucywgdG8gem9uaW5nIGxhd3MsIHRvIHRoZSBsZWdhbCBjb3N0cywgdG8gdGhlIHBoeXNpY2FsIGluZnJhc3RydWN0dXJlIHJlcXVpcmVkLkkgbm90IG9wcG9zZWQgdG8gYnJlYWtpbmcgdGhlbSB1cC5Zb3Ugc2hvdWxkLiAKSW50ZXIgUGlwZWxpbmUgcmVhY2hlZCBhIGZpbmFsIGludmVzdG1lbnQgZGVjaXNpb24gb24gaXRzIHVuZGVyIGNvbnN0cnVjdGlvbiAkMy41IGJpbGxpb24gcHJvcGFuZSB0byBwbGFzdGljcyBmYWNpbGl0eSBpbiBsYXRlIDIwMTcuIFRoZSBuZXcgYWNyeWxpYyBhY2lkIGZhY2lsaXR5IHdvdWxkIGJlIGxvY2F0ZWQgbmVhciB0aGUgc2l0ZSBvZiB0aGF0IHByb2plY3QsIGFuZCBjb25zdHJ1Y3Rpb24gd2lsbCBiZWdpbiBhZnRlciB0aGUgZmlyc3QgaXMgY29tcGxldGUuClRoZSBvbmx5IGRvbWluYXRpbmcgaGFuZCBpcyBpbmRlZWQgYSBwYWlyIG9mIGFjZXMsIGJ1dCBhZ2FpbnN0IGEgaGFuZCB3aXRoIGJvdGggbG93IGFuZCBzdHJhaWdodCBwb3NzaWJpbGl0aWVzIGV2ZW4gaXQgY2FuIGJlIGFzIGxpdHRsZSBhcyBhIDU1IDQ1IGZhdm9yaXRlIHByZWZsb3AuIFdpdGggYWNlcyBhbmQgYSBzaG9ydCBzdGFjayBvZiAxMCB0aW1lcyB0aGUgYmlnIGJsaW5kIG9yIGxlc3MsIHlvdSBzaG91bGQgZWl0aGVyIHB1c2ggYWxsIGluLCBvciBpbiBwb3QgbGltaXQsIG1ha2UgdGhlIG1heGltdW0gcmFpc2UgICBhbmQgeW91IHNob3VsZCBiZSBtYWtpbmcgdGhlIG1heGltdW0gcmFpc2UgaW4gbGF0ZXIgcG9zaXRpb24gd2l0aCBvdGhlciBoYW5kcyBhcyB3ZWxsLiBUaGUgaGFuZHMgdG8gbG9vayBmb3IgYXJlIGFueSBoYW5kIGNvbnRhaW5pbmcgYW4gYWNlIGFuZCBhdCBsZWFzdCBvbmUgbG93IGNhcmQgICB0aGVzZSBhY3R1YWxseSBhbGwgcnVuIHZlcnkgY2xvc2UgaW4gdmFsdWUsIGhhbmRzIHdpdGggYm90aCBsb3cgYW5kIHN0cmFpZ2h0IHBvc3NpYmlsaXRpZXMsIGRvdWJsZSBzdWl0ZWQgaGFuZHMsIGFuZCBoYW5kcyB3aXRoIGJvdGggYSBwYWlyIGFuZCB0aGUgYWJpbGl0eSB0byBtYWtlIGEgbG93LiAKU2FtZSB3aXRoIEhhbWFkYS4gVGhlIEFsbGllZCBpbnZhc2lvbiBvZiBOb3J0aGVybiBBZnJpY2Egd2FzIGEgaHVnZSBlbmRlYXZvci4gSSB0aGluayB0aGUgcHJvYmxlbSBpcyB0aGF0IHBlb3BsZSB3aXNoIGZvciB0aGVzZSAiaWNvbmljIiBiYXR0bGVzIHdoaWNoIHdlcmUgZWl0aGVyIHdvbiBvciBsb3N0IHdpdGhpbiBvbmUgZGF5LiAKMjAxNyAuIApJcyBnb2luZyBmcm9tIGZhaWx1cmUgdG8gZmFpbHVyZSB3aXRob3V0IGxvc3Mgb2YgZW50aHVzaWFzbSwiIGhlIHNhaWQuIEhlIHNhaWQgYSBtYW4gaW4gZnJvbnQgb2YgaGltIHNhbmcgVGluYSBUdXJuZXIncyAiU2ltcGx5IFRoZSBCZXN0IiBhbmQgd2FzIGdyZWF0LCBidXQgYWxzbyB3YXMgcmVqZWN0ZWQuICJXZSBkb24ndCBrbm93IHdoYXQgdGhlaXIgY3JpdGVyaWEgd2FzIGFzIGZhciBhcyB0aGUgbnVtYmVyIHRoZXkgY2FuIGtlZXAuIApUaGUgdGF4IHJhdGUgc2hvdWxkIGZhY3RvciBpbiBub3QganVzdCBmZWRlcmFsIGFuZCBwcm92aW5jaWFsIHRheGVzIGJ1dCBhbHNvIGNsYXdiYWNrcyBvZiBnb3Zlcm5tZW50IGZyZWViaWVzIGxpa2UgdGhlIENhbmFkYSBDaGlsZCBCZW5lZml0IChDQ0IuKSBCeSBsb3dlcmluZyB5b3VyIHRheGFibGUgaW5jb21lLCBhbiBSUlNQIGNvbnRyaWJ1dGlvbiBjYW4gbWluaW1pemUgQ0NCIGNsYXdiYWNrcy4gClRoZSBsaW1ibyBpcyBpbmRpZmZlcmVudC4gV2UgZGllIGFsb25lIGFuZCBpbiBwYWluLiBPdXIgbGFzdCBicmVhdGggaXMgc3ltYm9saWMgb2Ygb3VyIGluc2lnbmlmaWNhbmNlLiBJdCBpcyBsaWtlIHRoZSBzbW9rZSBmcm9tIGFuIGV4dGluZ3Vpc2hlZCB3aWNrIHRoYXQgaXMgc29vbiBsb3N0IHRvIGFsbCBvYnNlcnZlcnMuIFRob3NlIHRoYXQgaGF2ZSBmYWl0aCBhcmUgZ2FtYmxlcnMsIHdoaWNoIHdlIGFsc28gZGVlbWVkIGFzIGEgSXMgZmFpdGggbW9yZSB0aGFuIGEgZGVmZW5zZSBtZWNoYW5pc20/IElzIGl0IG1vcmUgdGhhbiBhIGRlbHVzaW9uPyBUaGF0IHdvdWxkIGJlIGdyZWF0LCBidXQgaXQgaXMgdGhlIHRoaW5ncyB0aGF0IGRvbiByZXF1aXJlIGZhaXRoIHRoYXQgbGV0IG1lIGtub3cgd2UgYXJlIHJlYWxseSBpbiBsaW1iby4KTG9sIFRydWUgd2UgbWlnaHQgaGVhciBvZiBoZXIgYXJyZXN0IGFnYWluIHNvb24sIHllcCwgaGlzdG9yeSB3aWxsIGNlcnRhaW5seSByZXBlYXQgaXRzZWxmLCBhbGwgdGhvc2UgcGFzdCBhcnJlc3RzIGluIGp1c3QgYSBmZXcgbW9udGhzIHdlcmVuIGEgZmx1a2UhIE9tZywgZGVmaW5pdGVseSBiZXR0ZXIgYXdheSBmcm9tIGhlciBraWRzLi4gCkFuZCBhbGwgb2YgdGhpcyBpcyBoYXBwZW5pbmcgd2hpbGUgd2UgZ28gYWJvdXQgb3VyIGJ1c2luZXNzLCBmYXIgZW5vdWdoIHJlbW92ZWQgZnJvbSBhbnkgb2YgdGhlc2UgY2lyY3Vtc3RhbmNlcyBhbmQgc2l0dWF0aW9ucyB0aGF0IHdlIGFyZSBhYmxlIHRvIGlnbm9yZSB0aGVpciBleGlzdGVuY2UgYW5kIHJlbWFpbiBsdWtld2FybSBhYm91dCB0aGVzZSBwcm9ibGVtcyBhbmQgdGhlaXIgc29sdXRpb25zLi4gCkl0IGRlcGVuZHMgb24geW91ciBhdWRpZW5jZS4gSWYgeW91ciBhdWRpZW5jZSBpc24gZmFtaWxpYXIgd2l0aCBmdWxsIGZyYW1lLCB3aHkgY29udmVydCBpdD8uIApUaGlzIHdpbGwgaGVscCB0byBlbnN1cmUgYXMgdG8gd2hldGhlciBvciBub3QgeW91IGFyZSBkZWFsaW5nIHdpdGggcG9rZXIgY2hpcHMgdGhhdCBhcmUgYXV0aGVudGljLiBJZiB5b3Ugd291bGQgbGlrZSB0byBsZWFybiBtb3JlIGFib3V0IGF1dGhlbnRpYyBjYXNpbm8gcG9rZXIgY2hpcHMsIGJlIGNlcnRhaW4gdG8gY2hlY2sgb3V0IHRoZSAiUmVzb3VyY2VzIiBzZWN0aW9uIGJlbG93IGZvciBzb21lIHZhbHVhYmxlIGFuZCBoaWdobHkgaW5mb3JtYXRpdmUgbGlua3MuLiAKVGhpcyBpc24gZm9yIGhlciBidXNpbmVzcyBvciBzaWRlIGdpZywgYXQgbGVhc3Qgbm90IGFzIGZhciBhcyB3ZSBrbm93LiAKVGhlIENyb3duIGNvcnBvcmF0aW9uIGhhcyBwYWlkIHRoZSBDaGluZXNlIHRlbGVjb20sIHdoaWNoIHNvbWUgY291bnRyaWVzIGhhdmUgYmFubmVkIHRoZSB1c2Ugb2YgaW4gdGhlaXIgbmV0d29ya3MsICQxNjMgbWlsbGlvbiBzaW5jZSAyMDEwLiBTYXNrVGVsIGJlbGlldmVzIHRoZSByaXNrIG9mIHVzaW5nIGVxdWlwbWVudCBtYWRlIGJ5IGEgQ2hpbmVzZSB0ZWxlY29tIGlkZW50aWZpZWQgYnkgc29tZSBjb3VudHJpZXMgYXMgYSBwb3RlbnRpYWwgc2VjdXJpdHkgcmlzayBpcyBtaXRpZ2F0ZWQgYnkgdGhpcmQgcGFydHkgdGVzdGluZywgYWNjb3JkaW5nIHRvIGFuIGludGVybmFsIGRvY3VtZW50Li4gCkl0J3MgYWN0dWFsbHkgYSBsYXJnZSwgY2hlYXAgcGxhc3RpYyBsYXVuZHJ5IGhhbXBlciB3aXRoIGEgZGV0YWNoZWQgbGlkLiAKS2VlcHMgdGFyaWZmcyBvbiBzdGVlbCBhbmQgYWx1bWludW0KSGFuc2VuIGV4cG9zZWQgaG93IGEgZ3JvdXAgd2l0aCBsaW5rcyB0byBPc2FtYSBCaW4gTGFkZW4gYW5kIEFsIFFhZWRhIHRyaWVkIHRvIGJ1eSBzdGluZ2VyIG1pc3NpbGVzIGFuZCBvdGhlciBkZWFkbHkgd2VhcG9ucywgaW5jbHVkaW5nIGNvbXBvbmVudHMgZm9yIG51Y2xlYXIgZGV2aWNlcyBmcm9tIEFtZXJpY2FuIGNpdGl6ZW5zLiAKU2hpZnRzIGludm9sdmVkIHR3byBob3VycyBvbiBwb3N0LCBmb2xsb3dlZCBieSBhdCBsZWFzdCBhbiBob3VyIG9mZiBwb3N0LiAKRGVhdGhCeVN1cGxleCAgMiw5OTYgcG9pbnRzICBzdWJtaXR0ZWQgMTEgaG91cnMgYWdvClN0aWxsLCBub3Qga25vd2luZyBhYm91dCBHUCBidXQgZXhwZXJpZW5jaW5nIHRoZSBoZWxsIG9mIGl0IGFsbCwgSSBkcm9wcGVkIHdlaWdodCBwcmV0dHkgcXVpY2tseS4gSSBzdHJ1Z2dsZSB3aXRoIHRyeWluZyB0byBtYWludGFpbiBub3VyaXNobWVudCwgaHlkcmF0aW9uLCBhIHNoYXJwIGJyYWluLCBldGMuIEl0IHN1Y2tzIHRyeWluZyB0byBmaWd1cmUgaXQgb3V0IGJ1dCB0aGFua3MiIGFrYSB0aGFua3MgZm9yIHBheWluZyBtZSB3aGF0IHlvdSBzZWVtIHRvIGJlbGlldmUgaXMgYSBjb21wbGltZW50LgpUaGVyZSBnb25uYSBiZSB0aHJlYWRzIGFsbCBvdmVyIHRoZSBwbGFjZSBmb3IgTG9yZCBUYWljaGksIGFuZCB0aGVuIGF0IHNvbWUgcG9pbnQgeW91IGdvbm5hIHRpcmUgb3V0IGxpa2UgZXZlcnlvbmUgaXMgdGlyaW5nIG91dCBvZiB0aGUgc2hhZ2d5IG1lbWUuIFRoZW4gWW91IGdvbm5hIHJlYWxpemUgaG93IHRoYXQgcHVzaCBodXJ0IGd1eXMgbGlrZSBIaXJvb2tpIEdvdG8sIGFuZCB5b3UgZ29ubmEgcmVncmV0IGV2ZXIgZW5qb3lpbmcgdGhpcyBzdHVwaWQgZnVja2luZyBtZW1lIG9mIGEgd3Jlc3RsZXIuLiAKRlJQIGxpZ2Ugcy4gRmFybGlnIHRhbmtlZ29kcy4gUGVuZ2VuZSBza2FsIHNsdXNlcyBvcHAgdGlsIGRlIGh5ZXJlIHNvc2lhbGUgbGFnLiAKTW90aGVyIGFuZCBzb24gYXJlIGRvaW5nIG5pY2VseS4gCkFuZCB3aGlsZSBJIGNvdWxkIGhvcGUgaGUgbWFkZSBhIGZsdXNoIG9uIHRoZSB0dXJuLCB0aGVyZSBhcmVuJ3QgYWN0dWFsbHkgbWFueSBmbHVzaCBoYW5kcyBoZSBjb3VsZCBoYXZlIGhlcmUgZWl0aGVyLiAKV2hpbGUgdHJhdmVsbGluZyB0aGUgd29ybGQgc2VhcmNoaW5nIGZvciB0aGUgYmVzdCBjYXJwZXRzLCBoZSBiZWNhbWUgZGlzdHJhdWdodCBhdCB0aGUgY29uZGl0aW9ucyB1bmRlciB3aGljaCBtYW55IG9mIHRoZSBjYXJwZXQgbWFrZXJzIGluIHBvb3JlciBjb3VudHJpZXMgd2VyZSB3b3JraW5nLiAKVnJhaW4gYXJlYS4gCkkgbm90IHN1cmUgaWYgeW91IGJlIGFibGUgdG8gZ2V0IGRhdGEgbGlrZSByZWxlYXNlIGFuZ2xlIGV0Yywgd2hpY2ggd291bGQgYmUgbW9zdCB1c2VmdWwgdG8gbWUuIApUaGVzZSBudW1iZXJzIGFyZSBzdGFnZ2VyaW5nLCBhbmQgdGhleSBrZWVwIG9uIHJpc2luZyBhZnRlciB0aGUgUGFybGlhbWVudCBsZWdpc2xhdGVkIGZvciBuZXcgMjAgeWVhciBwb2tpZXMgbGljZW5jZXMgbGF0ZSBsYXN0IHllYXIuIFJ1cmFsIGFuZCByZWdpb25hbCBWaWN0b3JpYW5zIHNpbXBseSBjYW5ub3Qgc3VzdGFpbiBnYW1ibGluZyBsb3NzZXMgd29ydGggbW9yZSB0aGFuIGhhbGYgYSBiaWxsaW9uIGRvbGxhcnMgZWFjaCB5ZWFyLiBUaGF0J3MgJDEuNiBtaWxsaW9uIGJlaW5nIGxvc3QgZXZlcnkgZGF5IG91dHNpZGUgb2YgbWV0cm9wb2xpdGFuIE1lbGJvdXJuZS4gClRoZSBHcmVla3MgSW5zcGlyZSBBbGxHcmVlayBhbnRpcXVpdHkgZW5kZWQgd2l0aCB0aGUgY29ucXVlc3Qgb2YgQXRoZW5zIGJ5IHRoZSBSb21hbnMgaW4gODYgQkMuIEZyb20gdGhlbiBvbiBSb21lIHRvb2sgb3ZlciB0aGUgcm9sZSBvZiB0aGUgcG9saXRpY2FsIGFuZCBjdWx0dXJhbCBjZW50cmUgaW4gRXVyb3BlLgpCdXQgdGhlbiBJIGxvb2tlZCBhdCB0aGVpciB3ZWJzaXRlLiBJIG1lYW4sIEkgcmVhbGx5IGxvb2tlZCBhdCBpdC4gCkkgZGlkbid0IGtub3cgd2hhdCB0byBkbyB3aXRoIHRoZW0gICBJIGNlcnRhaW5seSBkaWRuJ3Qgb3JkZXIgdGhlbSAgIGJ1dCBjdXJpb3NpdHkgZ290IHRoZSBiZXN0IG9mIG1lIHNvIEkgb3BlbmVkIHRoZW0uIApKdXN0IGdvaW5nIHRvIHRha2UgdGhlIG9wcG9ydHVuaXR5IHRvIHBvaW50IG91dCB0aGF0IGl0IGlzIGV4dHJlbWVseSB1bmxpa2VseSBmb3IgdGhlIGZyZWUgbWFya2V0IHBvbGljaW5nIGl0c2VsZiBvbiB0aGlzIG1hdHRlciBpcyBleHRyZW1lbHkgdW5saWtlbHksIGF0IGxlYXN0IG5vdCB3aXRoIHRoZSB3YXkgaXQgYnVpbHQgcmlnaHQgbm93LiBUaGUgcGVvcGxlIHRoYXQgY2FuIGFjdHVhbGx5IHN0ZWVyIHRoZSBtYXJrZXQgKFNoYXJlaG9sZGVycykgYXJlLCBhbG1vc3QgYnkgZGVmaW5pdGlvbiwgbW9yZSBpbnRlcmVzdGVkIGluIHByb2ZpdHMuLiAKSGVoLiAKVXNpbmcgeW91ciB0aHVtYnMsIG1hc3NhZ2UgdGhlIHNvbGVzIGluIGEgZGVlcCwgY2lyY3VsYXIgbW90aW9uLiAKQ2l0aWdyb3VwIGVhcm5lZCAkNC40IEJpbGxpb24gaW4gdGhlIGZpcnN0IHF1YXJ0ZXIgb2YgdGhpcyB5ZWFyIGFuZCBCYW5rIG9mIEFtZXJpY2EgJDMuMiBCaWxsaW9uLiBUaGUgdG9wIDI1IGhlZGdlIGZ1bmQgbWFuYWdlcnMgZWFybmVkIG9uIGF2ZXJhZ2UgJDEgQmlsbGlvbiBlYWNoIHRoaXMgcGFzdCB5ZWFyLiAKSXQgaXMgYWxzbyBkZXNpZ25lZCB0byBhbGxvdyB0aGUgZ3Vlc3QgdG8gcmVxdWVzdCBzb21ldGhpbmcgYWRkaXRpb25hbCwgc28gb3VyIGhvdXNla2VlcGluZyBzdGFmZiBjYW4gbWVldCBvdXIgZ3Vlc3RzIG5lZWRzLiAKU3RpbGwsIHRoZSBpZGVhIHNlZW1zIHRvIGJlIGZpbmRpbmcgaXRzIGZvb3RpbmcgaGVyZSAgIGJlYXV0eSBibG9ncyBhbmQgbWVzc2FnZSBib2FyZHMgYXJlIGFidXp6IHdpdGggJ3BvbyBlc2NoZXdlcnMsIGFuZCBzb21lIHN0eWxpc3RzIHNheSBtb3JlIG9mIHRoZWlyIGNsaWVudHMgYXJlIGFza2luZyBhYm91dCBpdC4uIApJIHRyaWVkIHVzaW5nIHRoZSBncmVhdGVyIHRoYW4gc3ltYm9sIGFuZCBpdCBoYWQgbm8gZWZmZWN0LiAKT3RoZXJ3aXNlLCBpZiB0aGUgbW9uZXkgd2FzIGdvaW5nIHRvIGZ1bmQgYW55IG92ZXJoZWFkIHRoYXQgd291bGQgZWF0IGludG8gdGhlIHJldHVybi4gRG9sbGFycykuIApBbSBGcmVpdGFnLCAxLiBDaGlsYWppdG9zIGRlciBrYW5hcmlzY2hlbiBBdXRvcmluIE1hcmEgR3V0aXJyZXouIERpZSBBdXRvcmluIHNlbGJzdCB1bmQgVmVybGVnZXJpbiBDbGF1ZGlhIEdlaHJrZSBsZXNlbiBhdWYgU3BhbmlzY2ggdW5kIERldXRzY2ggYXVzIGRlbSBlYmVuZmFsbHMgendlaXNwcmFjaGlnZW4gV2Vyay4KTm9uZXRoZWxlc3MsIHRoZSBTb3V0aGxhbmQgb3Bwb3NpdGlvbiBtYWtlcyBzb21lIGdvb2QgcG9pbnRzLiBPbmUgaXMgdGhpczogV2h5IGdpdmUgc29tZSBtb25vcG9seSBjYXNpbm8gcmlnaHRzIHRvIGEgc2luZ2xlIG9wZXJhdG9yPyBXaG8gYmV0dGVyIHRvIGtub3cgdGhlIGJlbmVmaXQgb2YgYSBDcml0dGVuZGVuIENvdW50eSBtb25vcG9seSB0aGFuIFNvdXRobGFuZD8gU3RpbGwsIHRoZXJlJ3MgdHJ1dGggaW4gdGhpcy4gSWYgd2UncmUgdG8gZ2FtYmxlLCBsZXQncyBnYW1ibGUuIExldCdzIGhhdmUgY29tcGV0aXRpb24gYW5kIHRoZSBncmVhdGVyIGludmVzdG1lbnQgdGhpcyBicmluZ3MuClVuaXZlcnNpdHkgb2YgSG91c3RvbiBIaWx0b24gQ29sbGVnZSBvZiBIb3RlbCBhbmQgUmVzdGF1cmFudCBNYW5hZ2VtZW50IHByb2Zlc3NvcnMgSm9obiBCb3dlbiBhbmQgQ3Jpc3RpYW4gTW9yb3NhbiByZWNlbnRseSBwdWJsaXNoZWQgb25lIG9mIHRoZSBmaXJzdCBzdHVkaWVzIHRvIGRpc2N1c3MgdGhlIG1ham9yIGRpc3J1cHRpb24gcm9ib3RzIHdpbGwgY2F1c2UgaW4gdGhlIGhvc3BpdGFsaXR5IGluZHVzdHJ5LiBUaGUgc3R1ZHkgaW4gdGhlIGpvdXJuYWwgV29ybGR3aWRlIEhvc3BpdGFsaXR5IGFuZCBUb3VyaXNtIFRoZW1lcyBleGFtaW5lcyBob3cgc2VydmljZSBkZWxpdmVyeSBzeXN0ZW1zIG5lZWQgdG8gYmUgcmVkZXNpZ25lZCB0byBtYXhpbWl6ZSB0aGUgYmVuZWZpdHMgb2Ygcm9ib3RzLCB3aGlsZSBzdGlsbCBtYWludGFpbmluZyBhdXRoZW50aWMgY3VzdG9tZXIgc2VydmljZS4KUmVwb3J0cyBkaWZmZXIgYXMgdG8gd2hldGhlciBvciBub3QgTWNDYXJ0bmV5IGJvdWdodCB0aGUgY2FyIGFuZCBkZW1hbmRlZCBpdCBiZSBmbG93biB0byBoaW0sIG9yIGlmIExleHVzIHRvb2sgaXQgdXBvbiB0aGVtc2VsdmVzIHRvIHNlbmQgaXQgdG8gaGltIHRvIG1ha2UgTWNDYXJ0bmV5IGxvb2sgbGlrZSBldmVuIG1vcmUgb2YgYSBkaWNrIHRoYW4gaGUgdXN1YWxseSBkb2VzLi4gClNvbWV0aGluZyBsaWtlIGEgVVYgbGlnaHQgd2lsbCBzaG93IGlmIGl0IGxpa2VseSB0byBiZSBib2RpbHkgZmx1aWQsIGFuZCBzb21lIHNpbXBsZSBwcm90ZWluIHRlc3RzIGNhbiBkZXRlcm1pbmUgaWYgaXQgc2VtZW4uIApFZGl0aCB3YXMgYWx3YXlzIG1vcmUgcmVzZXJ2ZWQgdGhhbiBTeWJpbCBidXQgd2FzIGFsbW9zdCBtb3JlIHByb2dyZXNzaXZlLiAKQW4gT2x5bXB1cyBURzUgaXMgc3VyZWx5IGJldHRlciB3aGF0IHlvdSBoYXZlIHJpZ2h0IG5vdyBidXQgZG9uIGV4cGVjdCBhIG1hZ2ljIGltcHJvdmVtZW50IGluIHRoZSByZXN1bHRzIE9OTFkgYmVjYXVzZSBvZiB0aGF0LiBJIGhhdmUgc2VlbiBwbGVudHkgb2YgT2x5bXB1cyBURzUgcGhvdG9zIGJ5IGFtYXRldXJzIGFuZCB0aGV5IGxvb2sgcHJldHR5IG11Y2ggdGhlIHNhbWUgYXMgeW91cnMuClJlYWQgdGhlIEVudGlyZSBBcnRpY2xlQXJlIHlvdSBjcmF6eSBhYm91dCB2aWRlbyBnYW1lcz8gT2gsIGNvbWUgb24gZG9udCBiZSBhc2hhbWVkISBOb3dhZGF5cyB0aGlzIGlzIHNvIG5vcm1hbC4gU28gbWFueSBwZW9wbGUgbG92ZSB0byBzdGF5IGxhenkgYXQgaG9tZSBhbmQgcGxheSB2aWRlbyBnYW1lcyBhbGwgZGF5IGxvbmcuIApTb21laG93IHRoZXkgbmV2ZXIgZ290IHNhdmVkIHRvIHRoZSBtZW1vcnkgY2FyZC4gCkl0IGNvbXBsZXRlbHkgb2theSBpZiB0aGUgU29sYXIgU3lzdGVtIHNjZW5hcmlvIGlzIG5vdCBmdW4gZm9yIHlvdSwgYW5kIGZlZWRiYWNrIG9uIHdoeSBtYXkgaGVscCBpbXByb3ZlIGl0ICAgYnV0IHlvdSBhbHNvIGhhdmUgZXZlcnkgcmlnaHQgdG8gcGxheSBpdCBpbiBzb21lIG90aGVyIHdheS4gVGhyb3cgdGhlIGNyZWF0aXZlIG1vZGUgdG9vbHMgb24gYW5kIGJ1aWxkIGEgc3RhcnRlciBiYXNlIGlmIHlvdSBsaWtlLCBvciBwbGF5IGluIGZ1bGx5IGNyZWF0aXZlIG1vZGUsIG9yIGRpZyB1cCBtb2RzIHRvIGFkZHJlc3MgdGhlIGRlZmljaWVuY2llcyBhcyB5b3Ugc2VlIHRoZW0uLiAKQnV0IGluc3RlYWQgY2xhaW0gdGhhdCB3ZSBhcmUgYWxsIGFncmVlIGFib3V0IHdlc3Rlcm4gYXRoZWlzdCB2YWx1ZXMgYnV0IGluIHJlYWxpdHkgd2UgZmlybWx5IGRvbiBwZW9wbGUgbWlnaHQgdGhpbmsgdGhhdCBhIG1ham9yaXR5IGFncmVlIHdpdGggdGhlIGF0aGVpc3RpYyB2YWx1ZXMuIEJ1dCBpIGRvbnQgdGhpbmsgdGhlIG1ham9yaXR5IGhlcmUgaXMgbHlpbmcgdG8gaXRzZWxmIGFib3V0IHRoZSBmYWN0IHRoYXQsIGZvciBiZXR0ZXIgb3Igd29yc2UsIGpvcmRhbiBpcyBtYWpvcmx5IG11c2xpbSBhbmQgaG9sZHMgbWFqb3JseSBtdXNsaW0gdmFsdWVzLiAKV2FzIHJlYWxseSBhc3RvbmlzaGVkIGF0IGhvdyB3ZWxsIHRoZXkga25ldyB0aGUgc2FpZCB0aGUgcHJpbmNpcGFsLiAKRm9yZXN0IFNlcnZpY2Ugb2YgU2l0IGogVGh1cnNkYXksIEZlYnJ1YXJ5IGR0aC4gClJlbWVtYmVyIHRoYXQgaW4gYWN0dWFsIGNhc2lub3MsIHlvdSBtYXkgaGF2ZSB0byBvcmRlciBmb29kIG9yIGRyaW5rcywgd2hpY2ggbWVhbnMgdGhhdCB5b3UgbWF5IGhhdmUgdG8gZ2l2ZSB0aGUgc2VydmVyIHNvbWUgdGlwLiAKVGhlIGFjdCB3YXMgaW4gaG9ub3Igb2YgdHdvIG1lbiB3aG8gd2VyZSBseW5jaGVkIGluIHRoZSByZWNlbnQgcGFzdDogb25lIGZvciBiZWluZyBCbGFjaywgdGhlIG90aGVyIGZvciBiZWluZyBnYXkgKE1hdHRoZXcgU2hlcGFyZCkuIApNeSBwb2ludCBpcyB0aGF0IHlvdSBjYW4gbW9yZSB0aGFuIG1ha2UgdXAgZm9yIGEgcGVyY2VpdmVkICJsYWNrIG9mIHRhbGVudCIgYnkgcHV0dGluZyBpbiB0aW1lIGFuZCBlZmZvcnQgdG8gbGVhcm4gdGhlIG1ldGhvZHMuIEluIHRoZSBlcmEgb2YgWW91VHViZSwgeW91IGNhbiBsZWFybiBzbyBtdWNoLiAKTHVjaWEgQ2F0ZWdvcmllc0FsbCBJbmNsdXNpdmUgUmVzb3J0cyBpbiBTdC4gTHVjaWFSZXNvcnRzIG9uIHRoZSBPY2VhbiBpbiBTdC4gCkFuZCBJIG5vdCBzYXlpbmcgdGhhdCBmZW1hbGUgZ2FtZXJzIGRvbiBsaWtlIHRvIHBsYXkgYXMgc2V4dWFsbHkgYXR0cmFjdGl2ZSBjaGFyYWN0ZXJzIG9yIGFueXRoaW5nICAgdmVyeSBtdWNoIG9uIHRoZSBjb250cmFyeS4gCkkgd2FzIHBhcnRpYWxseSBqb2tpbmcgcmVnYXJkaW5nIGNlbGwgcGhvbmVzLiBCdXQgSSBkaWQgdXNlIG15IHNtYXJ0cGhvbmUgdG8gYW5zd2VyIGEgZG96ZW4gbGVmdG92ZXIgZW1haWxzIGFuZCByZWFkIGEgZ3JhbnQgY2FsbCBkdXJpbmcgb25lIG9mIHRoZSBsYXN0IHNlbWluYXJzLiAKTWV0YWxtaW5kU3RhdHMgIDE2IHBvaW50cyAgc3VibWl0dGVkIDEyIGRheXMgYWdvCk5pcCB0aGUgaGFuZ25haWwgY2xvc2UgdG8gdGhlIHNraW4uIFVzZSB5b3VyIHNoYXJwIGNsZWFuIGNsaXBwZXIgYW5kIHN0YXJ0IG5pcHBpbmcgdGhlIGhhbmduYWlsLiBEb24ndCB0cnkgdG8gcHVsbCB0b28gaGFyZC4gSXQgbWF5IGNhdXNlIHlvdXIgc2tpbiB0byBibGVlZC4gRG9uJ3QgdXNlIHJlZ3VsYXIgY3JhZnQgc2Npc3NvcnMgdG8gdHJpbSBhIGhhbmduYWlsLiBUaGVzZSB3aWxsIGJlIHRvbyBiaWcgYW5kIG1heSBjYXVzZSB5b3UgZnVydGhlciBpbmp1cnkuCllvdSB3aWxsIGFjY29tcGxpc2ggbW9yZSB0aGlzIHdheS4gClRoZSBwcm9ibGVtIHdpdGggImZhY2UiIGlzIGl0IGNvbWVzIHdpdGggbWFueSBzdGlwdWxhdGlvbnMsIGFuZCBpdCB2YXJpZXMgZnJvbSBzaXR1YXRpb25zIHRvIHNpdHVhdGlvbnMuIFRoZXJlIGEgbG90IG9mIHZhcmlhYmxlcyB0aGF0IGNvbWVzIGludG8gcGxheS4KVGhlcmUgaXMgYWx3YXlzIG1pbmlzdGVycywgc29sZGllcnMsIHNlcnZhbnRzIGFjY29tcGFueWluZyBoaW0uIApKdXN0IGhhdmUgdG8gZ3JpbiBhbmQgYmVhciBpdCBJIHN1cHBvc2UhMkkgaGFkIHNvbWV3aGVyZSBvdmVyIDcwIGF0IGxhc3QgY291bnQsIGJ1dCBJJ3ZlIGxvc3QgY291bnQgYW5kIGhhdmVuJ3QgcmVjb3VudGVkIHNpbmNlM0ZvciBzb21lIHJlYXNvbiwgbG90cyBvZiBwZW9wbGUgYXNzdW1lIHRoYXQgbmRyIGlzIGEgbWFsZSBuYW1lLjRIb3cgZG8gSSBkbyB0aGUgIHRoaW5nPyBJZiB5b3UgYXJlIHJ1bm5pbmcgV2luZG93cyBhcyBhbiBPUywgdGhlbiBtYWtlIHN1cmUgbnVtbG9jayBpcyBvbiwgaG9sZCBkb3duIHRoZSBBbHQga2V5IGFuZCBvbiB0aGUgbnVtZXJpYyBrZXlwYWQgcHJlc3MgMDE5OCwgdGhlbiByZWxlYXNlIHRoZSBBbHQga2V5LiAKQ29tcGxhaW5lZCB0aGF0IENhbmFkaWFuIGVudHJlcHJlbmV1cnMgdGVuZCB0byBzZWxsIHRoZWlyIGJ1c2luZXNzIHRvbyBzb29uLCBiZWZvcmUgdGhleSByZWFjaCB0aGVpciBmdWxsIHBvdGVudGlhbC4gR2V0IHNlZHVjZWQgYnkgdGhlIHF1aWNrIGRvbGxhcnMsIGhlIHdhcm5lZC4gQ2FuIGhvbGQgdGhlaXIgb3duIHdpdGggYW55IGVudHJlcHJlbmV1cnMgaW4gdGhlIHdvcmxkLiAKRm9yIGV4YW1wbGUsIHNvbWUgZW1wbG95ZXJzIG9ubHkgd2FudCB0byBrbm93IGFib3V0IGNvbnZpY3Rpb25zIHdpdGhpbiBhIGNlcnRhaW4gdGltZSBwZXJpb2QsIHN1Y2ggYXMgaW4gdGhlIHBhc3QgZml2ZSB5ZWFycy4gClBERiBEcml2ZSAgIFNlYXJjaCBhbmQgZG93bmxvYWQgUERGIGZpbGVzIGZvciBmcmVlLiAKSSdtIHNpbWlsYXIgdG8geW91ciBkdWRlIGluIHRoZSBmYWN0IHRoYXQgSSBhbHNvIGFwcHJvYWNoIHRoaW5ncyBmcm9tIGEgcGVyc29uYWwgaW1wYWN0IHN0YW5kcG9pbnQgYXMgb3Bwb3NlZCB0byBhIGJsYWNrIC8gd2hpdGUgc3RhbmRwb2ludC4gCkR1cmluZyBwbGF5LCB0aGUgdG91cm5hbWVudCBkaXJlY3RvciBzaG91bGQgcmUgc2VhdCBwbGF5ZXJzIGF0IGRpZmZlcmVudCB0YWJsZXMgdG8ga2VlcCBhIHJlYXNvbmFibGUgYmFsYW5jZS4gSWYgYXQgYSB0aHJlZSB0YWJsZSB0b3VybmV5IHdoZXJlIDEwIHBsYXllcnMgc3RhcnQgb24gZWFjaCwgYSBwYXJ0aWN1bGFyIHRhYmxlIGV4cGVyaWVuY2VzIGEgcmFzaCBvZiBidXN0IG91dHMgYW5kIGlzIGxlZnQgd2l0aCA3IHBsYXllcnMgd2hpbGUgdGhlIG90aGVyIHR3byBsb3NlIG9ubHkgb25lIGJldHdlZW4gdGhlbS4gCk9zaXJpcyB3YWxrZWQgdGhlIHN0cmVldHMgYnkgaGltc2VsZi4gTWFycmlhZ2Ugd2FzIHRoZSBsYXN0IHRoaW5nIG9uIGhpcyBtaW5kLiBIZSB3YXNuJ3QgcmVhZHkgdG8gc2V0dGxlIGRvd24gYW55dGltZSBzb29uLiAKSSBrZWVwIG15IG1vdXRoIHNodXQgY2F1c2UgdGhpcyBob21lIGdhbWUgaGFzIGJlZW4gZmVlZGluZyBteSBjaGlsZCBmb3IgYWJvdXQgdGhyZWUgbW9udGhzIG5vdy4gClNoZWEgIHVuZCBLYWthb2J1dHRlciB3ZXJkZW4gaGF1cHRzY2hsaWNoIGFscyBLb25zaXN0ZW56Z2ViZXIgdW5kIEVtdWxnYXRvcmVuIHZlcndlbmRldC4gCkl0IHdhcyBjb25mdXNpbmcgdG8gZmlndXJlIG91dC5JIGF2b2lkZWQgYXNraW5nIHRoaXMgaW4gYSBwdWJsaWMgdGhyZWFkIGJlY2F1c2UgSSBkaWRuIHdhbnQgYW55IHRvIGRlYWwgd2l0aCBhbnkgdHVtYmxyIHN0eWxlIGRvd252b3RlIG1vYnMgb3IgbHluY2hpbmdzLCBidXQgaXMgdGhlcmUgYSByZWFzb24gd2h5IFBva2Vtb24gYXJ0cyBhbmQgY3JhZnRzIGFyZW4gdGhlaXIgb3duIHN1Yj9JIG1lbnRpb25lZCB0aGlzIGluIHRoZSBzdXJ2ZXkgdGhpbmcgYmVmb3JlIHRoZSB2b3RlIHdhcyBoZWxkLCBidXQgSSBzdGF0ZWQgdGhhdCBpbiBteSBvcGluaW9uLCB0aGUgbWFqb3JpdHkgb2YgdGhyZWFkcyBpbiBhbnkgc3ViIHNob3VsZCBiZSBkaXNjdXNzaW9uIHRocmVhZHMgYW5kIGl0IGxvb2tlZCBsaWtlIGV2ZXJ5IG90aGVyIFBva2Vtb24gc3ViamVjdCBoYXMgdGhhdCBleGNlcHQgZm9yIGFydHMgYW5kIGNyYWZ0cy5bTV0gIDEwIHBvaW50cyAgc3VibWl0dGVkIDIxIGRheXMgYWdvVGhhbmtzIGZvciBhbGwgb2YgdGhpcyEgSSBob3BlIHlvdSBkb24gbWluZCBtZSBwaWdneWJhY2tpbmcgb24geW91ciBjb21tZW50IHRvIGFkZHJlc3Mgb25lIG1ham9yIHBvaW50IGJlZm9yZSBJIHNwZWFrIHRvIHlvdXIgY29tbWVudHM6IGFsbCBvZiBvdXIgcnVsZXMsIGFuZCBhbGwgdGhlIG9wdGlvbnMgd2UgcHV0IGluIHBvbGxzIHdoZW4gd2Ugdm90ZSBvbiB0aGVtLCBhcmUgdGhlIHJlc3VsdCBvZiBjb21tdW5pdHkgZmVlZGJhY2sgcmF0aGVyIHRoYW4gbW9kIHByZWZlcmVuY2Ugb3IgY2hvaWNlLiAKSSBhdGUgYSBmZXcgb2YgdGhlIGRyeSwgc2FkIGN1cGNha2VzIGluIHRoZSBmb2xsb3dpbmcgZGF5cyBidXQgdGhleSB3ZXJlIHNvIHVuaW1wcmVzc2l2ZSBJIGRpZG4gaGF2ZSB0aGUgZ3V0cyB0byBvZmZlciB0aGVtIHRvIGFueW9uZSBlbHNlIHNpZGUgZnJvbSBteSBodXNiYW5kLCB3aG8gZGVjbGluZWQuClRoZSBVUyBkb2VzbiBuZWVkIGFuIGFnZW5jeSBzbyB0aG9yb3VnaGx5IGRlZGljYXRlZCB0byB0cnlpbmcgdG8gZGVwb3J0IGJyb3duIHBlb3BsZSB0aGF0IGV2ZW4gdmFsaWQgZG9jdW1lbnRhdGlvbiB3b24gc3RvcCB0aGVpciBhdHRlbXB0cy4gCkV2ZW4gaWYgeW91IGFyZSBiZWhpbmQgd2l0aCBLUW9zIGFuZCBnZXQgY2FsbGVkIHdpdGggQTksIHlvdSBhcmUgaW4gdGhlIHJpZ2h0IHNwb3QgdG8gZG91YmxlIHVwLCBidXQgbm90IGFnYWluc3QgbW9yZSB0aGFuIG9uZSBwbGF5ZXIuIApUaGF0J3Mgd2hhdCBJIGRvLiAKWmllbCBkZXIgU2Fua3Rpb25lbiBpc3QgZXMgLCBkaWUgVmVyc29yZ3VuZ3NsYWdlIHNvIHdlaXQgenUgdmVyc2NocmZlbiwgYmlzIGRpZSBCZXZsa2VydW5nIHNpY2ggZ2VnZW4gZGllIFJlZ2llcnVuZyBlcmhlYnQgdW5kIHNpZSBhdXMgZGVtIEFtdCBmZWd0LiAKUmhldW1hdG9pZCBBcnRocml0aXMgc3ltcHRvbXMgZGVjcmVhc2luZyB3aXRoIFBhbGVvIERpZXQKSGFtaWx0b24gSGFsbCBpcyBOT1QgRk9SIFBST0ZJVCBWRU5VRSBhbmQgSSBoYXZlIE5PVCBUQUtFTiBBIFdBR0UgSU4gVEVOIFlFQVJTICAgYXMgaSBhbSBUSEFUIERFRElDQVRFRCB0byB0aGUgZ2F5IHNvdWwsIGV2ZW4gdGhvdWdoIHRoZSBnYXkgY29tbXVuaXR5IGFuZCBnYXkgbWVkaWEgY2FuIGJlIHJlYWwgc2hpdCBhdCB0aW1lcywgaSBzdGlsbCBiZWxpZXZlIHRoYXQgbWFueSBkbyBhY3R1YWxseSBiZWxpZXZlLCBkbyBmb2xsb3cgdGhlaXIgaGVhcnRzIGFuZCBhcmUgbm90IGFzIGZ1Y2tlZCB1cCBhcyBtYW55IGFwcGVhciBvbiB0aGUgc2NlbmUuClZvaWNpIHF1ZWxxdWVzIGluZGljYXRpb25zIHN1ciBjZSBub3V2ZWF1IGxpdnJlIGRzICBwcnNlbnQgZGlzcG9uaWJsZSAgbGEgdmVudGUgLi4gCk9rYXl5eXl5c28gdGhlbiB3ZSB3ZXJlIG9mZiB0byBmaW5kIGFuIG9wZW4gcGhhcm1hY3kgKGFuZCBhdCB0aGlzIHBvaW50IGl0IHdhcyBwYXN0IG1pZG5pZ2h0KSBhbmQgd2UgZmluYWxseSBmb3VuZCBvbmUuIEFmdGVyIGZpbGxpbmcgV2VuZGkncyBwcmVzY3JpcHRpb24sIE1laG1ldCB0b29rIHVzIGJhY2sgdG8gaGlzIGFwYXJ0bWVudC4gCkJvdGggaW4gZ2VuZXJhbCAoaG93IG9yZ2FucyBhbmQgYm9keSBzeXN0ZW1zIHdvcmspIGFuZCBpbiBzcGVjaWZpYyAod2hhdCBpcyB3cm9uZyB3aXRoIHlvdSkuIApHbyB0byAvci9tb3ZpZXMgYW5kIHNlZSBldmVyeSB0aHJlYWQgdGhhdCB0YWxrcyBhYm91dCBDYXB0YWluIE1hcnZlbCBhbHdheXMgaGFzIGEgY3JhcGxvYWQgb2YgY29tbWVudHMgdGhhdCBhcmUgZWl0aGVyIGhpZ2hseSB1cHZvdGVkIG9yIGhpZ2hseSBkb3dudm90ZWQgKGRlcGVuZHMgb24gd2hldGhlciBpdCBnb3QgYnJlZ2FkZWQgb3Igbm90KSB0YWxraW5nIGFib3V0IExhcnNvbiBiZWluZyByYWNpc3QgYW5kIGRlc3Ryb3lpbmcgdGhlIG1vdmllLi4gCkkgbWFkZSBhIHdlYnNpdGUuIEkgbWFkZSBhIGZiIHBhZ2UuIEkgZGlkIGEgYnVuY2ggb2Ygc3R1ZmYgZm9yIG15IHByYWN0aWNlLi4gCk1yaXN1bXAgIDEgcG9pbnQgIHN1Ym1pdHRlZCA4IG1vbnRocyBhZ28KSSB3YXMgd2VhcmluZyB0aGlnaCBoaWdoIGJsYWNrIGJvb3RzIGFuZCBhIGNhdHN1aXQgb2YgYmxhY2sgbGVhdGhlci4uIApDaGlyb3ByYWN0b3JzIHVzZSBhIGNvbWJpbmF0aW9uIG9mIHRyZWF0bWVudHMsIGRlcGVuZGluZyBvbiB0aGUgc3BlY2lmaWMgbmVlZHMgb2YgdGhlIGluZGl2aWR1YWwgcGF0aWVudC4gCkFmdGVyIEkgd29rZSB1cCBJIHdhcyBpbiBhIGNhciBsYXlpbmcgaW4gdGhlIGJhY2sgc2VhdCBteSBtb20gd2FzIHNpdHRpbmcgd2l0aCBtZSBob2xkaW5nIG15IGhlYWQgYW5kIG15IHVuY2xlIHdhcyBob2xkaW5nIG15IGZlZXQgd2l0aCBhIGxhcmdlIGJsdWUgYmVhY2ggdG93ZWwgd3JhcHBlZCBhcm91bmQgbXkgZm9vdCBJIHdva2UgYmVjYXVzZSBvZiB0aGUgaW50ZW5zZSBwcmVzc3VyZSBoZSB3YXMgYXBwbHlpbmcgdG8gbXkgZm9vdCBteSBmaXJzdCB3b3JkcyB3ZXJlIGEgc2NyZWFtIHRoZW4gSSB0b2xkIGhpbSBoZSB3YXMgY3J1c2hpbmcgbXkgZm9vdC4gCkFtYXppbmcgUmFjZSBSZWNydWl0cyBIYXJsZW0gR2xvYmV0cm90dGVycwpPbmUgdGhpbmcgYWJvdXQgZ2VuZXN0ZWFsZXJzIGJlaW5nICJpbW11bmUiIHRvIHdhcnAgY29ycnVwdGlvbiB0aG91Z2guIFRoZSBXYXJwIGRvZXNuIGNhcmUgYWJvdXQgInNjaWVuY2UiLiBHZW5ldGljcywgcGh5c2ljYWwgdHJhaXRzLCBtYXRlcmlhbHMsIGV0Yy4gVGhlIG9ubHkgZXhjZXB0aW9uIHdlIGV2ZXIgc2VlbiBpcyB0aGUgQmxhY2sgU3RvbmUgdXNlZCBpbiB0aGUgQ2FkaWFuIFB5bG9ucyBhbmQgdGhlIEJsYWNrIFN0b25lIEZvcnRyZXNzZXMuIEJsYWNrIFN0b25lIGlzbiBpbW11bmUsIGJ1dCBpdCBjYW4gYmUgdXNlZCB0byBhbXBsaWZ5IG9yIHN1cHByZXNzIHRoZSB3YXJwLiBJdCBub3QgaW1wb3NzaWJsZSB0aGF0IEdlbmVzdGVhbGVycy9UeXJhbmlkcyBoYXZlIGEgc2ltaWxhciBwcm9wZXJ0eSwgYnV0IEkgcGVyc29uYWxseSBkb24gdGhpbmsgdGhhdCB0aGUgY2FzZS4KSSB3YXMgcmFwZWQgYW5kIHNvZG9taXplZCBhdCAxOCBieSBhIHNhaWxvciBpbiB0aGUgTmF2eS4gSSd2ZSBoYWQgbGFzdGluZyBlZmZlY3RzLCBib3RoIHBzeWNob2xvZ2ljYWwgYW5kIHBoeXNpY2FsLCBhbmQgSSBkaWRuJ3QgZGVhbCB3aXRoIHRoZW0gZm9yIG1hbnkgeWVhcnMuIApHdWlkZSB0byBPbmxpbmUgQ2FzaW5vIEdhbWVzClRoaXMgaXMgYSB2ZXJ5IGZhc3Qgd2F5IGFuZCB2ZXJ5IGdvb2QgZXhjdXNlIGZvciBzdHJpcHBpbmcgbmFrZWQsIG5vdCB0byBtZW50aW9uIHRoaXMgd2lsbCBnaXZlIHlvdSBncmVhdCBtb3RpdmF0aW9uIGluIHBsYXlpbmcgcG9rZXIuIApXaGVuIFlvdXIgSHVzYmFuZCdzIEhlYXJ0IElzIEhhcmQgVHJ1ZSBXb21hbiBCbG9nIFJldml2ZSBPdXIgSGVhcnRzIGlvbiBhbmRyb2lkIG1vcmUgaG9yaXpvbnRhbCBpb24gYW5kcm9pZCBtb3JlIHZlcnRpY2FsIGlvbiBjaGV2cm9uIHJpZ2h0IGlvbiBpb3MgYm9va21hcmtzIG91dGxpbmUgaW9uIGlvcyBib29rbWFya3MgaW9uIGlvcyBjaGF0YnViYmxlIG91dGxpbmUgaW9uIGlvcyBjaGF0YnViYmxlIGlvbiBpb3MgY2xvdWQgZG93bmxvYWQgb3V0bGluZSBpb24gaW9zIGNsb3VkIGRvd25sb2FkIGlvbiBpb3MgcGFwZXJwbGFuZSBvdXRsaW5lIGlvbiBpb3MgcGFwZXJwbGFuZSBpb24gaW9zIHByaW50ZXIgb3V0bGluZSBpb24gaW9zIHByaW50ZXIgaW9uIGlvcyBsb2NrZWQgaW9uIHNvY2lhbCBmYWNlYm9vayBvdXRsaW5lIGlvbiBzb2NpYWwgZmFjZWJvb2sgaW9uIHNvY2lhbCB0d2l0dGVyIG91dGxpbmUgaW9uIHNvY2lhbCB0d2l0dGVyIGlvbiBzb2NpYWwgd2hhdHNhcHAgb3V0bGluZSBpb24gc29jaWFsIHdoYXRzYXBwIG5ld3MgcHJvZmlsZSByZWNlaXB0IGNyZWRpdCBjYXJkIGRpYW1vbmQzIGJ1bGxob3JuIGlvbiBpb3MgbG9jYXRpb24gb3V0bGluZSBJIHdhcyBhIHdpZmUgd2lsbGluZyB0byBzdGF5IGFuZCBrZWVwIG15IHZvdywgbm8gbWF0dGVyIHdoYXQuIApBbmQgVHJ1bXAgaGF2ZSBoYXJzaGx5IHB1c2hlZCBiYWNrIG9uIGFueSBub3Rpb24gb2YgYSBwb2xpY3kgcmV2ZXJzYWwuIApGM2YgaXMgc3RpbGwgKzUgbWFuLiBIb25lc3RseSBoZXIgYmVzdCBjb21ibyBzdGFydGVycyBhcmUgbWFnaWMgNCBhbmQgZmY0LiBIZXIgcHVuaXNoZXMgYXJlIGhlbGxhIGdvb2QgYW5kIGh1cnQgbGlrZSBoZWxsLCBpIGxpa2UgdG8gdXNlIGRiNCwgZGYxIGFuZCAzLDIgKG9ubHkgaWYgaSBrbm93IGl0cyBnb25uYSBjb25uZWN0KSBhbG90LgpBbHNvIGNhbiBJIGp1c3Qgc2F5IHRoYXQgeW91IGRvbiBoYXZlIHRvIGJlIHJ1ZGUgdG8gbWUsIGNhbGwgbWUgYSBoeXBvY3JpdGUgYW5kIHNheSB0aGluZ3MgbGlrZSAib2ggSSBhc3N1bWUgdGhhdCB5b3UgdGhpbmsgW29idmlvdXNseSBzdHVwaWQgdGhpbmcgdGhhdCBub2JvZHkgdGhpbmtzXSIgYmVjYXVzZSBJIHJlYWxseSBqdXN0IHRyeWluZyB0byBoYXZlIGEgZGViYXRlIGhlcmUgYW5kIG5vdyB5b3UganVzdCBiZWluZyBtZWFuLi4gCkhhdmluZyBhIGJhY2hlbG9yIHBhcnR5IGFuZCB3YW50IHRvIHBsYXkgYSBsaXR0bGUgNSBjYXJkIHN0dWQ/IFdoeSBub3QgZ2V0IHRoZSBqdW1ibyBuYWtlZCBsYWR5IGNhcmQgZGVjayBhbmQgaGF2ZSBhIGdyZWF0IHRpbWUuIFRoZXNlIGNhcmRzIG1lYXN1cmUgNCJieSA2IiBhbmQgY2FuIG1ha2UgYW55IGJhY2hlbG9yIHBhcnR5IHBva2VyIGdhbWUgY29tZSBhbGl2ZS4gWW91IG1pZ2h0IGp1c3QgYmUgYWJsZSB0byB3aW4gYSBmZXcgYnVja3Mgb2ZmIGFsbCB5b3VyIGZyaWVuZHMgYXMgdGhleSB3aWxsIGJlIHRvbyBidXN5IGdhcGluZyBhdCB0aGUgYmVhdXRpZnVsIHdvbWVuIG9uIHRoZSBiYWNrIG9mIHlvdXIgY2FyZHMgdG8gaGF2ZSB0aGVpciBtaW5kIG9uIHRoZSBwb2tlciBnYW1lLi4gCkxvdHMgb2Ygc2NyYXBlcyBhbmQgYnJ1aXNlcywgYnV0IHdpdGggaG93IHdlIHRlbmRlZCB0byBmaWdodCBpdCB3YXMgc29tZXRoaW5nIG9mIGEgbWlyYWNsZSBubyBvbmUgd2FzIGV2ZXIgc2VyaW91c2x5IGluanVyZWQuCkV0IHVuIGVudmVsb3BwZW1lbnQgYXV4IGFsZ3VlcyBvIGwnb24gc2UgcmV0cm91dmUgcmVjb3V2ZXJ0ZSBkJ3VuZSAiYm91ZSIgZCdhbGd1ZXMsIGVudmVsb3BwZSBkYW5zIHVuIGxpbmdlIGZpbiBwdWlzIGRhbnMgdW5lIGNvdXZlcnR1cmUgY2hhdWZmYW50ZS4gCldlIHdvdWxkIG5vdCBiZSBhYmxlIHRvIHByb3Blcmx5IHVuZGVyc3RhbmQgdGhlIHN0cnVnZ2xlcyBpbiB0aGUgTWlkZGxlIEVhc3QgYW5kIHRoZSBNdXNsaW0gd29ybGQgYXQgbGFyZ2UgaWYgd2UgZG9uIGRlbHZlIGludG8gdGhlIGNvbG9uaWFsIGNvbnF1ZXN0cyBpbnRvIHRoZSByZWdpb24gaW4gdGhlIGxhdGUgMTl0aCBhbmQgZWFybHkgMjB0aCBjZW50dXJpZXMuIEJyaXRhaW4sIEZyYW5jZSwgUnVzc2lhLCBhbmQgdG8gYSBsZXNzZXIgZXh0ZW50LCBJdGFseSwgYWxsIGludmFkZWQgTWlkZGxlIEVhc3Rlcm4sIE5vcnRoIEFmcmljYW4gYW5kIFNvdXRoIEFzaWFuIHJlZ2lvbnMgdGhhdCB3ZXJlIG1ham9yaXR5IE11c2xpbS4gQnJpdGFpbiBoZWxkIEVneXB0IGFuZCBJbmRpYSwgRnJhbmNlIGhlbGQgQWxnZXJpYSwgTW9yb2NjbyBhbmQgVHVuaXNpYSwgUnVzc2lhIHdlbnQgaW50byB0aGUgQ2F1Y2FzdXMgYW5kIElyYW4sIGFuZCBJdGFseSBoZWxkIExpYnlhLiBBcyBpcyB0aGUgY2FzZSB3aXRoIG1vc3QgaW1wZXJpYWwgY29ucXVlc3RzLCB0aGUgaW52YWRlcnMgZGVjbGFyZWQgdGhlbXNlbHZlcyBzdXBlcmlvciBhbmQgc3VianVnYXRlZCB0aGUgbmF0aXZlIHBvcHVsYXRpb25zLiBUaGVyZSB3YXMgYSBjbGVhciBsaW5lIGJldHdlZW4gQ2hyaXN0aWFuIGludmFkZXJzIGFuZCBNdXNsaW0gc3ViamVjdHMsIGFuZCBhcyB5b3UgbWF5IGltYWdpbmUsIHRoaW5ncyBkaWRuIGdvIHdlbGwuIEZvciBleGFtcGxlLCBCcml0aXNoIG9mZmljZXIgRnJlZGVyaWNrIENvb3BlciwgRGVwdXR5IENvbW1pc3Npb25lciBvZiBBcm1pdHNhciwgcmVwb3J0ZWQgaW4gMTg1NyBhYm91dCBxdWlldGluZyBhbiB1cHJpc2luZyBpbiBMYWhvcmUsIEluZGlhIGJ5IFNlcG95cyAoQmVuZ2FsaSBzb2xkaWVycyBpbiB3aGF0IGlzIG5vdyBtb2Rlcm4gZGF5IFBha2lzdGFuKToKSSByZW1lbWJlciB3YXRjaGluZyB0aGF0IGVwaXNvZGUgYW5kIHRoYXQgbW90aGVyIHdhcyBhIG5hc3R5IHBpZWNlIG9mIHdvcmsuIApKb2Igd2FzIHRvIHNlbGwgcmVhbHRvcnMgb24gdGFraW5nIGEgMiB0cmFpbmluZyBldmVudC4gCkluY2lkZW50cyB0aGF0IGxlYWQgdG8gZGlzdHJ1c3QgY2FuIGJyaW5nIHR3byBwZW9wbGUgY2xvc2VyIHRvZ2V0aGVyIHByb2Zlc3Npb25hbGx5IGFmdGVyIGV2ZXJ5dGhpbmcgaXMgaGFzaGVkIG91dC4gClRoZSBwcm9iZSB3YXRjaGVzIGhvdyB0aGlzIHB1bHNlIG9mIGhlYXQgdHJhdmVscyB0aHJvdWdoIHRoZSBzdWJzdXJmYWNlIG1hdGVyaWFsIGFyb3VuZCBpdC4gSXQgbW9uaXRvcnMgaG93IHF1aWNrbHkgb3Igc2xvd2x5IHRoZSBtb2xlIGhlYXRzIHVwIHRoZSBzdXJyb3VuZGluZyBzb2lsOyB0aGlzIGlzIGtub3duIGFzIG1lYXN1cmluZyB0aGUgInRoZXJtYWwgY29uZHVjdGl2aXR5IiBvZiB0aGUgc29pbC4uIApBbmQgdGhlcmUgYXJlIHNvbWUgdHJpcHB5IG1vbWVudHMgZHVyaW5nIHNlbWkgcGxheWFibGUgY3V0IHNjZW5lcywgd2hpY2ggYXJlIG9rLCBidXQgZ2l2ZSBtZSBtb3JlIG91dHBvc3RzIHRvIHRha2UgZG93bi4uIApPZiBjb3Vyc2UgeW91IHdvdWxkIGNvbWUgdXAgd2l0aCBhbGwga2luZHMgb2YgY3JhenkgdGhlb3JpZXMgaWYgeW91IHdlbnQgYWJvdXQgaW52ZXN0aWdhdGluZyBsaWtlIHRoYXQuIFRoYXQgcmVja2xlc3MgYW5kIG5vbiBzY2llbnRpZmljLiAKQWZ0ZXIgdGhlIHdlZWsgaXMgdXAsIHlvdSdsbCBuZWVkIHRvIHN0cmFpbiBpdC4gCkVpbiBaaWVsIGsgenVtIEJlaXNwaWVsIFBvbnRhIGRlbCBTb2wgc2Vpbiwgdm9tIEZsdWdoYWZlbiBhdXMgYmVxdWVtIGluIDQ1IE1pbnV0ZW4genUgZXJyZWljaGVuLiAKRGlzdHJpYnV0ZWQgMjcwIG1vb24gcm9jayBzYW1wbGVzIGluIHRoZSAxOTcwcyBhcyBhIGdvb2R3aWxsIGdlc3R1cmUgdG8gY291bnRyaWVzIGFyb3VuZCB0aGUgd29ybGQuIApFU0guIEVoLiAKSGlkZGVuIHNvdXJjZXMgKHNvdXAgbWl4ZXMsIHNhbGFkIGRyZXNzaW5ncywgc2F1Y2VzLCBhcyB3ZWxsIGFzIGxpcHN0aWNrLCBjZXJ0YWluIHZpdGFtaW5zLCBtZWRpY2F0aW9ucywgc3RhbXBzIGFuZCBlbnZlbG9wZXMgeW91IGhhdmUgdG8gbGljaywgYW5kIGV2ZW4gUGxheSBEb2guKQpJIGd1ZXNzIGl0J3MgbGlrZSBTbWl0aCBhbmQgSm9uZXMgYmFjayBob21lISBZb3VuZyBEciBMZWUgd291bGRuJ3QgbWFrZSBleWUgY29udGFjdCB3aXRoIHVzIGF0IGZpcnN0LCBidXQgbm93IGhlJ3MgYmVjb21pbmcgdXNlZCB0byB1cyBhbmQgSSB0aGluayBoZSBsaWtlcyB1cyEgSGUgaXMgc28gZnVubnksIGhlIGNvbWVzIGluIGFuZCBpbiBoaXMgYnJva2VuIEVuZ2xpc2gsIHNheXMsICJVbSwgbm90aGluZywgaXQncyBub3RoaW5nIiBhbmQgdGhlbiBzdGFuZHMgdGhlcmUsIHRoZW4gc2F5cywgIm9rYXksIGlzIG5vdGhpbmcsIHlvdSBva2F5PyIgQW5kIGhlIGtlZXBzIG5vZGRpbmcgYW5kIHNheWluZyBtbW0gbW1tLCBtbW0gbW1tLCBtbW0gbW1tLCBhbmQgd2Uga2VlcCBmaW5kaW5nIG91cnNlbHZlcyBkb2luZyB0aGUgc2FtZS4gCk9ubHkgdGFrZSB1cCBjaGFsbGVuZ2VzIHdoZW4geW91IGFyZSBzdXJlIHRoYXQgeW91IHN0YW5kIGEgY2hhbmNlIGFnYWluc3QgdGhvc2UgcGxheWVycyBhbmQgaWYgeW91IGNhbiBtYXRjaCB0aGUgcmVzcGVjdGl2ZSBiaWRzLiAKSSBJcmlzaCBDYXRob2xpYyBhbmQgd2UgdGhlIHNhbWUuIEkgY2FuIGltYWdpbmUgaGF2aW5nIGEgd2VkZGluZyB3aXRob3V0IG15IGF1bnQgYmVpbmcgdGhlcmUgICBzaGUgaXMgb25lIG9mIG15IGZhdm91cml0ZSBwZW9wbGUgaW4gdGhlIHdvcmxkLiBBbmQgbXkgdW5jbGUgKGhlciBicm90aGVyKSBpcyB0aGUgb25lIHdobyBvcmdhbmlzZXMgYWxsIG91ciBmYW1pbHkgZ2V0IHRvZ2V0aGVycy4gSGUgYSBwcmllc3QsIHNvIGhlIGJlIGRvaW5nIGEgcmVhZGluZywgYmVjYXVzZSBpdCBhIGNpdmlsIGNlcmVtb255IHNvIGhlIGNhbiBvZmZpY2lhdGUuClNvbGx0ZSBJaG5lbiBpcmdlbmR3YXMgbmljaHQgZ2VmYWxsZW4sIGRlciBTZXJ2aWNlIG5pY2h0IHp1IElocmVyIFp1ZnJpZWRlbmhlaXQgc2VpbiwgbmljaHQgZ2VuZ2VuZCBCZXdlZ3VuZyBhdWYgZGVuIFRpc2NoZW4gc2VpbiBvZGVyIGF1Y2ggbnVyIGRpZSBPcHRpayBkZXIgU29mdHdhcmUsIGRhbm4gZGVua2VuIFNpZSBpbW1lciBkYXJhbjogZGVyIG5jaHN0ZSBBbmJpZXRlciBpc3QgbnVyIGVpbmVuIEtsaWNrIGVudGZlcm50ISBVbmQgZXMgZ2lidCBtaXQgU2ljaGVyaGVpdCBlaW5lbiBQb2tlcmFuYmlldGVyIGRlciBkYXMgcmljaHRpZ2UgR2VzYW10cGFrZXQgZnIgU2llIGJlcmVpdGhsdCEuLiAKVW5pdmVyc2l0eSBvZiBUb3JvbnRvCkJ1dCBmcmFua2x5IGl0IGEgbG90IG9mIHRpbWUgc3BlbnQganVzdCB0byByZWFsaXplIHRoYXQgcG9wdWxpc3QgcG9saXRpY3MgYXJlIHRyYXNoLCBhbmQgdGhhdCB0aGVyZSBpcyBsaXR0bGUgeW91IGNhbiBkbyB0byBzdG9wIG5vbiBzZWxmIHN1c3RhaW5pbmcgcGVvcGxlIGZyb20gdm90aW5nIHRoZW1zZWx2ZXMgbW9yZSByZXNvdXJjZXMsIHJlcHJvZHVjaW5nLCByZXBlYXRpbmcsIHVudGlsIFZlbmV6dWVsYSBzdHlsZSBjb2xsYXBzZSBvciBvdGhlciBzb2NpYWwgY2hhbmdlIG9jY3Vycy4uIApXYW50IHRvIGNoYW5nZSBpdD8gR29vZCAgIGdvIHdvcmsgb24gbG9iYnlpbmcgcG9saXRpY2lhbnMgYW5kIGluZHVzdHJ5IHRvIGNoYW5nZS4gCkknZCByZWd1bGFybHkgaGl0IDEwdGIgYSBtb250aCBhbmQgbm9ib2R5IGJsaW5rZWQgYW4gZXllLiBUaGF0IHdhcyAzIHllYXJzIGFnbyB0aG91Z2guCk5vdyB3aGVuZXZlciBJIGZlZWwgc29tZXRoaW5nIGxpa2UgdGhhdCBjb21pbmcgYWxvbmcsIEkgZG9uIHBhbmljIGFuZCBJIGtub3cgd2hhdCB0byBkby4uIApUaGUgTWFyc2hhbGwgUGxhbiByZWFsbHkgaGVscGVkIGdldCBFdXJvcGUgYmFjayBvbiBpdCBmZWV0LCBhbmQgSSB3b3VsZCBhcmd1ZSB0aGF0IGl0IHBhdmVkIHRoZSB3YXkgZm9yIGN1cnJlbnQgRXVyb3BlYW4gYWJpbGl0eSB0byBoYXZlIHN0cm9uZyBlY29ub21pZXMgYW5kIGRlY2VudCB3ZWxmYXJlLi4gClNwZWFraW5nIGluIGEgbm9pc3kgZW52aXJvbm1lbnQgaXNuIGhhcmQgZm9yIG1lIHRvIG1ha2UgaXQgc291bmQgZmVtaW5pbmUgYXMgSSBjYW4gcHJvamVjdCBubyBwcm9ibGVtLiBIb3dldmVyIEkgYmUgZGFtbmVkIG9mIEkgY2FuIG1ha2UgbXlzZWxmIGhlYXJkIGl0IHdhcyBzbyBlYXN5IHRvIGJvb20gbXkgd2F5IGludG8gcGVvcGxlIGVhciBkcnVtcyB0aGF0IEkgc29tZXRpbWVzIHRlbXB0ZWQgdG8ganVzdCBEYWQgYmxhc3QgYXQgdGhlbSB3aGVuIHRoZXkgY2FuIGhlYXIgbWUuIApEdWFsIGNsYXNzIG1lYW5zIHlvdSBoYXZlIHRvIGNob29zZSBhIHBvaW50IHdoZXJlIHlvdSBpZ25vcmUgYWxsIHRoZSB4cCB5b3UgaGF2ZSBnb3R0ZW4gdXAgdW50aWwgdGhhdCBwb2ludCBhbmQgc3RhcnQgZnJlc2ggaW4gYW5vdGhlciBjbGFzcy4gWW91IGRvbiBnZXQgZnVuY3Rpb25hbGl0eSBmcm9tIHlvdXIgb2xkIGNsYXNzIHRpbGwgeW91IHBhc3MgdGhlIHhwIHlvdSBoYWQgaW4gdGhlIGZpcnN0LiBTdXBlciBmdWNreS4gCklzIGhlIGp1c3QgdG9vIGltbWF0dXJlIGFuZCB1bndpbGxpbmcgdG8gcHV0IGhpcyBhbGwgaW50byBhIHJlYWwgcmVsYXRpb25zaGlwPyBNYW55IHNldHRsZSBmb3IgdGhlIHdyb25nIHJlYXNvbnMsIHN1Y2ggYXMgY29udmVuaWVuY2UsIGZlYXIgb2YgYmVpbmcgYWxvbmUgb3IgbG9uZWx5LCBmaW5hbmNpYWwgYWR2YW50YWdlIGV0Yy4gCjcwJSBlYXJuZWQgbGVzcyB0aGFuICQ2MCwwMDAuLiAKVGhpcyBpcyBkb25lIGJ5IGVhY2ggcGxheWVyIHN0YXJ0aW5nIHdpdGggdGhlIG9uZSBzZWF0ZWQgb24gdGhlIGxlZnQgb2YgdGhlIGJ1dHRvbi4gClRoZSBmaXJzdCBsYXcgaXMgZmluZSwgYm90aCBzaWRlcyBoYXZpbmcgdHlwZSBzICA+IHMuIFRoZSBzZWNvbmQgbGF3IGlzIHByb2JsZW1hdGljLiBPdXIgZmlyc3Qgc2lnbiBvZiB0cm91YmxlIGlzIHRoYXQgaXQgYWxsZWdlZGx5IGhhcyB0eXBlIChyICBhKSAgPiAociAgYSksIGJ1dCB0aGlzIGlzIGEgdHlwZSBlcnJvciBiZWNhdXNlLCBhcyBHSEMgd291bGQgcHV0IGl0LCB0eXBlIHZhcmlhYmxlICdyJyB3b3VsZCBlc2NhcGUgaXRzIHNjb3BlLi4gCihub3QgdGhhdCBNYW5uIGhhZCBub3QgYWxyZWFkeSBjb3JydXB0ZWQgdGhlIHN0dWR5IGZvciB0aGUgc2FtZSByZWFzb25zKSBUaGUgY2hhcnQgd2FzIGFic29sdXRlIGdhcmJhZ2UuIEFub3RoZXIgeW91IFNheT8gQmVuIFNhbnRlciwgSSB3aWxsIGxlYXZlIGhpcyBtaXNkZWVkcyBhcyBhbiBleGVyY2lzZSBmb3IgdGhlIHN0dWRlbnQuLiAKIldoZW4gdGhlIHN1biByb3NlIHRoZSBuZXh0IG1vcm5pbmcsIGdyaWVmIHR1cm5lZCB0byBhbmdlciwgYW5nZXIgdHVybmVkIHRvIHJlc29sdmUgYW5kIHJlc29sdmUgdHVybmVkIHRvIGFjdGlvbiwiIExvbWJhcmRvIHNhaWQuCkFubmVyZXZlbmFudCAgNDcgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnbwpIYWl0aS4gRWwgU2FsdmFkb3IuIApHZXQgcmVhZHkgZm9yIEZhY2Vib29raWUuIEFzIGdhbWluZyBhbmQgZ2FtYmxpbmcgY29udmVyZ2UsIGl0IHdvbiBiZSBsb25nIGJlZm9yZSBwZW9wbGUgYXJlIHBsYWNpbmcgYmV0cyBvbiB0aGUgc29jaWFsIG1lZGlhIHNpdGUgb3IgdGhyb3VnaCBhcHBzIG9uIGlQYWRzLiBGYWNlYm9vaywgYSBjb21tb24gcGxhdGZvcm0gYXJvdW5kIHRoZSB3b3JsZCwgYWxyZWFkeSBvZmZlcnMgZ2FtYmxpbmcgZ2FtZXMgc3VjaCBhcyBUZXhhcyBIb2xkIFBva2VyIGFuZCBvdGhlciBoaWdobHkgYWRkaWN0aXZlIGdhbWVzIHN1Y2ggYXMgRmFybXZpbGxlIGFuZCBBbmdyeSBCaXJkcywgYWx0aG91Z2ggdGhvc2UgZ2FtZXMgZG9uIHBheSBvdXQgYW55IG1vbmV5LiAKSXQgaXMgbm90IHVudXN1YWwgZm9yIHlvdSB0byBkaXNjb3ZlciB3b21lbiB3ZWFyaW5nIHVuaXF1ZSBhbmQgZmFzaGlvbmFibGUgYWNjZXNzb3JpZXMgc3VjaCBhcyBjaGFybSBicmFjZWxldHMsIGphY2tldHMsIGFuZCBldmVuIG5lY2tsYWNlcyB0aGF0IGNhcnJ5IGEgY2FzaW5vIHRoZW1lLiAKSSBubyBuZXdiaWUsIGhhdmUgYXQgbGVhc3QgMTAwIGxpdmUgTVRUIHVuZGVyIG15IGJlbHQuIFdoYXQuIApJbmRlZWQsIER1a2FzIC4gCkkgYW0gYSBncmFkdWF0ZSB0ZWFjaGVyLCBsYW5ndWFnZSBzdHVkZW50LCBhbmQgd29ybGQgdHJhdmVsbGVyLiAKSGUgcGxheWVkIGluIHRoZSBvcGVuaW5nIGdhbWUgYXQgdGhlIG5ldyBhcmVuYSBpbiAxOTQ5LiAKU29tZSBvZiB0aGVzZSBiZW5lZml0cyBtaWdodCBiZSByZWxhdGVkIHRvIHRoZSBmYWN0IHRoYXQsIG9uIHRoZSAnUGFsZW8nIGRpZXQsIGluZGl2aWR1YWxzIGF0ZSBsZXNzLiBCdXQgYXRlIGxlc3Mgb2Ygd2hhdD8gRGFpbHkgY29uc3VtcHRpb24gKGluIGdyYW1zKSBvZiBwcm90ZWluLCBjYXJib2h5ZHJhdGUgYW5kIGZhdCBpbiB0aGUgcGFsZW8gZGlldCBhbmQgY2FyYm9oeWRyYXRlIGRpZXQgd2VyZToKVG8gYmV0dGVyIHByZXBhcmUgZm9yIGFub3RoZXJldmVudCwgcmVzZWFyY2hlcnMgaGF2ZSBqb2luZWQgd2l0aCB0aGUgQnVyZWF1IG9mIE1ldGVvcm9sb2d5IHRvIGRldmVsb3AgYSBmb3JlY2FzdGluZyBzeXN0ZW0sIHdoaWNoIGlzc3VlZCBpdHMgZmlyc3QgYWR2aWNlIGxhc3Qgd2Vla2VuZCwgZGVjbGFyaW5nIGEnbW9kZXJhdGUgcmlzaycgZm9yIHRoZSBOb3J0aCBFYXN0LiBBc3NvY2lhdGUgUHJvZmVzc29yRWQgTmV3YmlnaW4sIHBhcnQgb2YgdGhlIE1lbGJvdXJuZSBVbml2ZXJzaXR5IHRlYW0gd2hvIHByb3ZpZGVkYXRhLHNhaWQgYWR2aWNlIHdvdWxkIGJlY29tZSBtb3JlIGFjY3VyYXRlYXMgdGltZSBwcm9ncmVzc2VzLiAKTGlrZSBhbnlvbmUgY2FuIGhlYXIgaGVyIG91dCB0aGVyZS4gCkl0IGlzIGFsbCB0b28gZWFzeSB0byBpbWFnaW5lIGEgd29ybGQgd2hlcmUgYSBnb3Zlcm5tZW50IHNwb25zb3JlZCBmb3JtIG9mICJpZGVudGlmaWNhdGlvbiIgd291bGQgYmUgcmVxdWlyZWQgdG8gdXNlIGFueSBmb3JtIG9mIGVsZWN0cm9uaWMgcGF5bWVudC4gClRoZSBUYXNrZm9yY2UgaXMgYWxzbyBwdXNoaW5nIGZvciB0aGUgbWF4aW11bSBBVE0gY2FzaCB3aXRoZHJhd2FsIHBlcm1pdHRlZCBpbiBwb2tpZXMgdmVudWVzIHRvIGJlIGN1dCBmcm9tICQ1MDAgdG8gJDIwMCBhIGRheSBhbmQgYSByZWR1Y3Rpb24gaW50aGUgbnVtYmVyIG9mIHBva2VyIG1hY2hpbmVzYWNyb3NzIHRoZSBzdGF0ZS4gClRoZSBnYW1pbmcgZmxvb3IgaXMsIGFzIGlzIHRoZSBub3JtLCBhbGwgcGx1c2ggY2FycGV0LCBmbGFzaGluZyBsaWdodHMsIGFuZCBhIGh1c2ggb2YgYnVzeSBjb25jZW50cmF0aW9uIG9jY2FzaW9uYWxseSBkaXNydXB0ZWQgYnkgdGhlIGV4Y2l0ZW1lbnQgb2Ygc29tZW9uZSBlbmpveWluZyBhIHRlbXBvcmFyeSB1cHN3aW5nIGluIGZvcnR1bmVzLiBJdCBpcyBkZXNpZ25lZCB0byBiZSBleGNpdGluZyBhbmQgaXQgaXMuLiAKVGhlIHJlYXNvbiBJIGRlY2lkZWQgdGhpcyB3YXMgYmVjYXVzZSBJIGxvb2tlZCBhdCBIIHJldHVybiBwb2xpY3ksIGFuZCBpdCBubyBoYXNzbGUgcmV0dXJuIHdpdGhpbiAzMCAgOTAgZGF5cywgc29tZXRoaW5nIGxpa2UgdGhhdC4gSXQgYSByZWFzb25hYmxlIHRpbWUgZm9yIG1lIHRvIGRlY2lkZSBpZiB0aGUgY2hhaXIgaXMgbm90IGdvaW5nIHRvIHdvcmsuIFNpbXBseSByZXR1cm4gdGhlIG1lcmNoYW5kaXNlLiBBcyBmYXIgYXMgdGhlIGNoYWlyIGxhc3RpbmcgZm9yZXZlciwgYnV5IGl0IGZvciBsaWZlIHR5cGUgcGVvcGxlIGdpdmluZyB5b3UgYWR2aWNlIG9ubGluZS4gQmUgc2tlcHRpY2FsIHBsZWFzZSwgSSBzdXJlIHRoZXJlIGFyZSBzb21lIGNvbWZvcnRhYmxlIGdhbWluZyBjaGFpcnMsIGFuZCB0aGUgSCBjaGFpcnMgSSBvd25lZCBiZWZvcmUgYnJva2UgYWZ0ZXIgdGhlIHdhcnJhbnR5IGV4cGlyZWQ7IG15IHByZXZpb3VzIEFlcm9uIGNoYWlyIChib3VnaHQgaW4gdGhlIGxhdGUgMTk5MCBsYXN0ZWQgYWJvdXQgMTIgeWVhcnMuIHdoaWNoIGlzIGNvaW5jaWRlbnRhbGx5IHRoZSBzYW1lIGFtb3VudCBhcyB0aGVpciB3YXJyYW50eS4gQnV0IGNvbXBhcmVkIHRvIG1vc3QgY2hlYXBlciBleGVjdXRpdmUgb2ZmaWNlIGNoYWlycywgb3IgZ2FtaW5nIGNoYWlycyAod2hpY2ggYXJlIHRoZSBzYW1lIHRoaW5nLCBqdXN0IGRpZmZlcmVudCBzdHlsaW5nKSwgSSBzYXkgdGhlIEVtYm9keSBvciBBZXJvbiBhcmUgc3VmZmljaWVudGx5IG1vcmUgZXhwZW5zaXZlIHRvIG1ha2UgaXQgYSBtaXhlZCBiYWcsIHlvdSBjYW4gYWZmb3JkIHRvIHJlcGxhY2Ugc2V2ZXJhbCBnYW1pbmcgY2hhaXJzIHdpdGggdGhlIGNvc3Qgb2Ygb25lIEVtYm9keSwgc28gb25lIGNvdWxkIHRoZW9yZXRpY2FsbHkgcmVwbGFjZSB0aGVtIGFzIHNvb24gYXMgdGhlIGN1c2hpb24gY29sbGFwc2VzLCBhcyB0aGV5IGFsd2F5cyBkbyBhZnRlciBhYm91dCAxOCBtb250aHMuIChub3Qgc3VyZSBhYm91dCBwb3N0dXJlIGlzc3VlcyB0aG91Z2gpU3lzYWRtaW4gaGFzIGp1bXBlZCBvbiBhIHN5c3RlbSwgYXBwbGllZCBhIGJ1bmNoIG9mIGNoYW5nZXMgdXBkYXRlcywgYW5kIGFmdGVyIHRoZSByZWJvb3QgdGhlIHN5c3RlbSBuZXZlciBjb21lcyBiYWNrLgpPciBwbGF5IGNvbXB1dGVyIGdhbWVzIG9uIGEgbm90ZWJvb2sgY29tcHV0ZXIuIFRha2UgYW4gb25saW5lIGNsYXNzLCB2aWRlbyB0dXRvcmlhbCwgb3IgaG9tZSBjb3JyZXNwb25kZW5jZSBjb3Vyc2UuIFRoZXNlIGFsbG93IHlvdSB0byBnbyBhdCB5b3VyIG93biBwYWNlLCBhbmQgeW91IGRvbid0IGhhdmUgdG8gZ2V0IG91dCBvZiBiZWQgdG8gZ28gdG8gY2xhc3MuIApJIGhhdmUgdG8gZ2V0IGEgc2NyZWVuIG9mIG15IHN0b21hY2ggdGhpcyBtb3JuaW5nIHRvIG1ha2Ugc3VyZSB0aGVyZSBhcmUgbm8gbGVha3MgICBwcmV0dHkgc3VyZSBJIGhhdmUgdG8gZHJpbmsgc29tZSBzb2x1dGlvbiB0aGF0IHRhc3RlcyBsaWtlIGxpY29yaWNlICAgSSBhbSBub3QgYSBmYW4gb2YgYW5pc2VlZCBmbGF2b3VyIGF0IGFsbC4KVGhpcyBpcyBzb21ldGhpbmcgdGhhdCBjYW4gYWRkIGEgY2hhcm1pbmcgdG91Y2ggb2YgcmVhbGlzbSBhbmQgY2xhc3MgdG8geW91ciBnYW1pbmcgZXhwZXJpZW5jZS4gCkFzIGEgZmVsbG93IGluZmogZ3V5LCBpdCBhbHdheXMgYmVlbiBkaWZmaWN1bHQgdG8gcmVjZWl2ZSBzYXRpc2ZhY3RvcnkgYWR2aWNlLCBvciBkaWFsb2d1ZSBmcm9tIG90aGVyIG1hbGVzIGFzIEkgcGVyY2VpdmUgYW5kIGtub3cgbXlzZWxmIHRvIGxpdGVyYWxseSBiZSBhIGRpZmZlcmVudCBraW5kIG9mIGJyZWVkLiAKIldoZW4geW91IHNlZSB1bmlxdWUgaW5ncmVkaWVudHMgbGlrZSAyNCBrYXJhdCBnb2xkIG9yIHNuYWlsIHNsaW1lIG9yIGRvbmtleSBtaWxrLCBvciBHbGFtIEdsb3cncyBkaXNjbyBraXQgbWFzayB3aXRoIHNoaW1tZXIgaW4gaXQsIGl0IG1ha2VzIHRoZSBwcm9kdWN0IGludGVyZXN0aW5nLCIgR2FpdGhlciBzYWlkLi4gCkJ1dCBhcyBodW1hbnMgaGF2ZSBsZWFybmVkIHRvIGJlYXQgaWxsbmVzcyBhbmQgaW5qdXJ5LCB0aGF0IGF2ZXJhZ2UgaGFzIGdvbmUgdXAuLiAKUmVzdWx0czogSHlwZXJreXBob3RpYyBwb3N0dXJlLCBkZWZpbmVkIGFzIHJlcXVpcmluZyBvbmUgb3IgbW9yZSBibG9ja3MgdW5kZXIgdGhlIG9jY2lwdXQgdG8gYWNoaWV2ZSBhIG5ldXRyYWwgaGVhZCBwb3NpdGlvbiB3aGlsZSBseWluZyBzdXBpbmUsIHdhcyBtb3JlIGNvbW1vbiBpbiBtZW4gdGhhbiB3b21lbiAoNDQlIGluIG1lbiwgMjIlIG9mIHdvbWVuKS4KWmllbCBkZXIgU2VuZHVuZyBpc3QgZXMsIGRlbiBadXNjaGF1ZXJuIGFtIFNvbm50YWdhYmVuZCBlaW5lIGVjaHRlIEFsdGVybmF0aXZlIHp1IGJpZXRlbiwgZGllIEhlcnogdW5kIFZlcnN0YW5kIGFuc3ByaWNodC4uIApGaXJzdCB2aWRlbyB3YXMgYXdlc29tZS4gSSBvbmx5IHBsYXkgTkxIIGJ1dCBJIHJlYWxseSBlbmpveWVkIGhlYXJpbmcgeW91IHRhbGsgYWJvdXQgdGhlIG90aGVyIGdhbWVzLCBlc3BlY2lhbGx5IGxpa2VkIHlvdXIgYnJlYWtkb3duIG9mIHRoZSBQTE8gaGFuZCB2cyBWb2xwZS4gVGhlIGhhbmQgaGlzdG9yeSBncmFwaGljcyBoYWQgYSBzbWFsbCBmb250LCBzbyBpdCB3YXMgdG91Z2ggdG8gc2VlIHRoZSBzdGFjayBzaXplcyB3aGVuIHdhdGNoaW5nIHRoZSB2aWQgb24gbXkgcGhvbmUuIApMZXMgY2FtcGluZyBjYXJzIHBldXZlbnQgdXRpbGlzZXIgZGVzIGVtcGxhY2VtZW50cyBzdXIgc29sIGQgciwgcG91cnZ1cyBkJ3VuIGJyYW5jaGVtZW50IGxlY3RyaXF1ZSAoIDEwIGFtcC4gClRoaXMgbWV0aG9kIHByZXZlbnRzIHBlb3BsZSBmcm9tIHBpY2tpbmcgdXAgeW91ciB0ZWxscy4gCiJEYW0gSSB3YXMgcGxheWluZyBpbiBhIHBva2VyIHRvdXJuYW1lbnQgbGFzdCBuaWdodCBhbmQgc29tZXRoaW5nIGNyYXp5IGhhcHBlbmVkIHRvIG15IGZpbmdlciB0aGF0IEkgc2hvdCBvZmYgYW5kIHRoZXkgcHV0IGJhY2sgb24sIiBoZSB0d2VldGVkIG9uIEZyaWRheS4gIkkga25ldyBzb21ldGhpbmcgY3Jhenkgd2FzIGdvaW5nIHRvIGhhcHBlbiB3aXRoIHRoaXMgZGFtIGZpbmdlciBjYXVzZSBpdCBmZWx0IGxpa2UgaXQgd2FzIGZhbGxpbmcgb2ZmLiAoc2ljKSIKT3VyIHNldmVuIHllYXIgb2xkIGxvdmVzIGdhbWVzLiBTaGUgY3VycmVudGx5IHBsYXlzIChlZmZlY3RpdmVseSBlbm91Z2ggdG8gYmVhdCB1cyBzb21ldGltZXMpIERvbWluaW9uLCBMZWdlbmRhcnksIEF6dWwsIFRha2Vub2tvLCBldGMuCkkgZG9uJ3QgZmVlbCBmYXRpZ3VlZCBmcm9tIGl0Li4gCkFuZCB3aGVuIHRoaW5ncyBkaWRuJ3QgZ28gcmlnaHQgYXMgdGhleSBnYW1ibGVkLCBzaG9vdGluZ3MgcmVzdWx0ZWQgdGhhdCBsZWZ0IG9ubHkgdGhlIGJ1bGxldCBob2xlcyBpbiBvbGQgYnVpbGRpbmdzIGZvciBwZW9wbGUgdG8gbG9vayBiYWNrIG9uIG9uZSBkYXkgYW5kIHJlbWVtYmVyIHRvIHJlbWVtYmVyIGEgdGltZSB3aGVuIHRoZSBXZXN0IHRydWx5IFdBUyAid2lsZC4iLiAKSWYgeW91IGRvbiBjb25zaWRlciBpdCBjaGVhdGluZywgb3IgYXQgbGVhc3Qgc2hlIGRpZG4gYnJlYWsgYW55IGFncmVlZCBydWxlcywgdGhlbiBnZXR0aW5nIGJhY2sgdG9nZXRoZXIgaXMgYSBsb3QgZWFzaWVyIHRvIHB1dCBiYWNrIG9udG8gdGhlIHRhYmxlIGJlY2F1c2UgdGhlcmUgYXJlbiBhbnkgdmlvbGF0aW9ucyB5b3UgY2FuIGJlZ2luIHRvIGZpZ3VyZSBvdXQgaWYgd2hhdCB5b3UgZmVlbGluZyBpcyBiYXNlZCBvbiBhIHByb2plY3Rpb24gb2YgeW91ciBhbmdlciBvciBhY3R1YWxpdGllcy4KT25lIG9mIHRoZSBkdW1iYXNzZXMgYWN0dWFsbHkgcHV0IHRoZSBkcnVnIG1vbmV5IGluIHRoZSByZWdpc3RlciB3aXRoIHRoZSByZXN0IG9mIHRoZSByZXN0YXVyYW50IGJ1c2luZXNzIGZvciB0aGUgZGF5LCBhbmQgdGhlbiBkaXRjaGVkIGNsZWFudXAgYW5kIHNraXBwZWQuIApUaGlzIGFsbG93cyB0aGUgdGhpZWYgdG8gaGlkZSBoaXMgaW52b2x2ZW1lbnQgaW4gYnV5aW5nIGV4cGVuc2l2ZSBtZXJjaGFuZGlzZSB3aXRoIGEgc3RvbGVuIGNyZWRpdCBjYXJkLi4gCkJ1dCBhbiBob3VyIGxhdGVyIEkgd291bGQgc3RhcmUgaW4gYW4gYWR1bHQgbWFuIG9yIHdvbWFuJ3MgZXllcyBhbmQgdGFrZSB0aGVpciByZW50IG1vbmV5LiBIb3cgZG9lcyBhbnlvbmUgZ28gZnJvbSBiZWluZyBhIGhhcHB5LCBsb3ZpbmcgZGFkIHRvIGJlaW5nIERlYXRoLCBEZXN0cm95ZXIgb2YgTGlmZSBTYXZpbmdzIGFuZCBQcm9iYWJseSBNYXJyaWFnZXM/Ii4gCk5vbmUgb2YgdGhlbSBpcyBJbmRpYW4uIFJlY2VudGx5IG9uIHRoaXMgZXBpc29kZSBhdCAyMTowMCBtaW5zIHRoZXkgaGFkIGEgc2hvdCB3aXRoIHRvbnMgb2YgaG9zcGl0YWwgc3RhZmYuIE1hc3NpdmVseSBtdWx0aSBldGhuaWMuIEFnYWluIG5vbmUgb2YgdGhlbSBpcyBJbmRpYW4uCkJvbnVzIE9mZmVyc1RoZSBvbmxpbmUgcG9rZXIgYnVzaW5lc3MgaXMgaGlnaGx5IGNvbXBldGl0aXZlLiBBcyBtZW50aW9uZWQgYWJvdmUsIHBva2VyIHJvb21zIG1ha2UgbW9uZXkgZnJvbSBwbGF5ZXJzIGluIHRoZSBmb3JtIG9mIHJha2VzICh0aGUgYW1vdW50IG9mIG1vbmV5IGEgY2FyZCByb29tIHRha2VzIGZyb20gZWFjaCBwb3QpIGFuZCBlbnRyeSBmZWVzLiAKUGxlYXNlIGFja25vd2xlZGdlIHRoZXJlIGxvdHMgb2YgYm91cmJvbiBiZWZvcmUgc2FpZCBwb3N0LCBpZiBpdCBtYWtlcyBubyBzZW5zZS4gSSBibGFtZSB0aGUgZG9nLiBPbiB0aGUgcG9wcGVyLiBBbmQgdG8gdGhvc2UgdGhhdCBhc2tlZCBmb3IgcGljcywgd2hlbiBJIGdldCB0byB3b3JrIEkgc25hcCBhIGZldyBwaWN0dXJlcyBhbmQgdHJ5IHRvIGdldCB0aGVtIHBvc3RlZCBwcm9iYWJseSB0b21vcnJvdyBpZiBJIGNhbiBmaW5pc2ggdG9kYXkuClRoYXQgaXMgcGVyZmVjdGx5IGxlZ2FsLiBKdXN0IGFzIGl0J3MgcGVyZmVjdGx5IGxlZ2FsIGZvciBjb21wYW55J3MgdG8gbWFrZSBmdW4gb2YgdHJ1bXAgYW5kIGhpcyBzdXBwb3J0ZXJzLiBXaGF0IHRoZXkgZG9uJ3QgaGF2ZSB0aGUgcmlnaHQgdG8gZG8gaXMgZGVueSBwZW9wbGUgdGhlaXIgcmlnaHRzLiAKSXQgdHJ1ZSB0aGF0IHRoZSBHaWFudHMgaGF2ZSBmb2N1c2VkIHByaW1hcmlseSBvbiBwaXRjaGluZyBpbiB0aGUgZWFybHkgcm91bmRzIG9mIHRoZSBkcmFmdC4gQnV0IHNvbWUgeWVhcnMgdGhleSBsb29rZWQgZm9yIGhpdHRlcnMsIGFuZCBzbyBmYXIgdGhleSB3aGlmZmVkIGNvbXBsZXRlbHkuIApJIGRvbiB0aGluayBzaGUgaGF0ZXMgaHVtYW5zLCBidXQgaW1hZ2luZSBhIGNoaWxkIG9mIGhlciBhbmQgSGF3a2UuIEkgZG9uIHRoaW5rIHNoZSB3aWxsIGJlIHRydWx5IHNhdGlzZmllZCB3aXRoIGEgaHVtYW4gY2hpbGQgKG9mIGNvdXJzZSBub3QgYWxsIHJvbWFudGljYWwgcmVsYXRpb25zaGlwcyBuZWVkIGEgY2hpbGQsIGJ1dCBpdCBqdXN0IGFuIGV4YW1wbGUpLiAKQ2hpbmhhaXJzIGFyZSBhY3R1YWxseSBmYWxsZW4gZXllYnJvd3MuIFRoZXkncmUgYSBzb3J0IG9mIHNlY3VsYXIgdmVyc2lvbiBvZiBmYWxsZW4gYW5nZWxzLCBhbmQgaGF2aW5nIHRoZW0gaXMgYSBzeW1wdG9tIG9mIHRoaW5raW5nIGRpcnR5IHRob3VnaHRzLiBUaGF0J3Mgd2h5IG1lbiBnZXQgJ2VtIHdoZW4gdGhleSdyZSB5b3VuZyBhbmQgdGVzdG9zdGVyb25lIHJpZGRsZWQgYW5kIHdvbWVuIGdldCAnZW0gd2hlbiB0aGV5J3JlIG9sZGVyIGFuZCB0ZXN0b3N0ZXJvbmUgcmlkZGxlZC4gCklmIHRoZSB0YWJsZSBtYXhpbXVtIGlzICQyNSwwMDAgYW5kIHlvdSBsb3NlIDEyIGluIGEgcm93LCB5b3UgY2FudCBjb3ZlciB5b3VyIGxvc3NlcyB3aXRoIGJldCAxMy4gCkNob2ljZXMgeW91IG1ha2UgYXJlIGJvdGggYnJvd3NlciBhbmQgZGV2aWNlIHNwZWNpZmljLiBTb21lIHdlYiBicm93c2VycywgbW9iaWxlIGRldmljZXMsIGFuZCBwbHVnIGlucyBoYXZlIGEgIkRvIE5vdCBUcmFjayIgZmVhdHVyZS4gVGhpcyBmZWF0dXJlIGxldHMgeW91IHRlbGwgd2Vic2l0ZXMgeW91IHZpc2l0IHRoYXQgeW91IGRvIG5vdCB3YW50IHRvIGhhdmUgeW91ciBvbmxpbmUgYWN0aXZpdHkgdHJhY2tlZC4gVGhlc2UgZmVhdHVyZXMgYXJlIG5vdCB5ZXQgdW5pZm9ybSBhY3Jvc3MgYnJvd3NlcnMuIE91ciBTZXJ2aWNlcyBhcmUgbm90IGN1cnJlbnRseSBzZXQgdXAgdG8gcmVzcG9uZCB0byB0aG9zZSBzaWduYWxzLgpBdXRoIHNheXMgdGhlIG1vc3QgY29tbW9uIHByb2JsZW0gaXMgdGhlIGNyb3cncyBmZWV0IHRoYXQgY29tZSBmcm9tIHRpZ2h0ZW5pbmcgeW91ciBleWUgbXVzY2xlcyB3aGlsZSBwZWVyaW5nIGludG8gYSBzY3JlZW4uIApZb3Ugd2VyZSB3cm9uZyBpbiB5b3VyIGFwcHJvYWNoLiAKRWluIEJsaWNrIFJpY2h0dW5nIEFscGVuaGF1cHRrYW1tIGxzc3Qgbm9jaCB3YXJlIFNjaG5lZW1hc3NlbiBlcmFobmVuIHVuZCBzbyBibGVpYmVuIHdlaXRlcmhpbiBkaWUgVm9yYWxwZW5naXBmZWwgYWxzIEJlcmdsYXVmemllbCBkaWUgZWluemlnZSBBbHRlcm5hdGl2ZS4gU2VsYnN0IGFuIGRlbiBTb25uZW5iZXJnZ3JhdCwgZGVyIHNpY2ggdm9uIDEuMzAwIGJpcyAxLjYwMEhtIGJld2VndCwgaXN0IG1pdCBzZWluZW0gYmVyd2llZ2VuZCBub3Jkc2VpdGlnZW4gVHJhaWwgZGVyemVpdCBub2NoIG5pY2h0IHp1IGRlbmtlbiBnYW56IHp1IHNjaHdlaWdlbiB2b24gSWhyZXIgTWFqZXN0dCwgZGVyIFp1Z3NwaXR6ZS4uIApXYXMgZXhjZXB0aW9uYWwgYW5kIHByb2xpZmljIGFuZCBwcm9kdWNlZCAoSSBndWVzcykgaHVuZHJlZHMgb2YgZHJhd2luZ3MgbGlrZSB0aGlzIG9uZSwgYmVsb3cuIAoiV2Ugc3RhcnQgd2l0aCBhIGZhbWlseSBsb29raW5nIGZvciBhIGhvbWUgaW4gdGhlaXIgaWRlYWwgbmVpZ2hib3VyaG9vZC4gV2UgaGVscCB0aGVtIGZpbmQgdGhhdCBkaWFtb25kIGluIHRoZSByb3VnaCBhbmQgdGhlbiB0dXJuIGl0IGludG8gdGhlIGhvbWUgb2YgdGhlaXIgZHJlYW1zLiBXZSBzZWUgdGhlIHBvdGVudGlhbCBpbiBzb21lIG9mIHRoZSB3b3JzdCBsb29raW5nIGhvbWVzLgpJIGFsc28gYmVsaWV2ZSBpbiBzb2NjZXIgYXMgYSB3aG9sZSB0aGUgdHdvIGxlZyBzeXN0ZW0gd2FzIGJyb3VnaHQgaW4gYWNyb3NzIGNvbXBldGl0aW9ucyBmb3IgdGhlIHRyYXZlbCBhc3BlY3QgYW5kIGFnYWluLCBpdCdzIHdob2xseSBkaWZmZXJlbnQgdG8gdHJhdmVsIHRvIHNheSwgQmFyY2Vsb25hIGZyb20gUG9ydHVnYWwgb3IgUm9tZSwgdGhhbiBOWUMgdG8gQVRMLiAKSSBsZWdpdGltYXRlbHkganVzdCBzbG93bHkgZmVsbCBvdmVyIHRvIG15IGxlZnQgc2lkZSBsaWtlIGEgdHVydGxlIGFuZCByb2xsZWQgb250byBteSBiYWNrIHdpdGggdGhlIGJpa2Ugc3RpbGwgaG9va2VkIHRvIG15IGZlZXQuIFRoZXJlIHdhcyBhIGNhciBhdCB0aGUgbGlnaHQgYW5kIHRoZSBhYnNvbHV0ZSBST0FSIG9mIGxhdWdodGVyIGZyb20gaW5zaWRlIHdhcyB2ZXJ5IG5vdGljZWFibGUuLiAKQnV0IHRoZXJlIHdhcyBhbHdheXMgc29tZXRoaW5nIGEgYml0IHVuc2V0dGxpbmcgYWJvdXQgVWxsaW90dCwgd2hvIGhhZCBzcGVudCB0aW1lIGluIGphaWwgZm9yIHJvYmJlcnkgYW5kIGFmZnJheSBhbmQgd2hvIGFkbWl0dGVkIHRoYXQgbW9zdCBvZiBoaXMgb3Bwb25lbnRzIHdlcmUgcHJvYmFibHkgc2NhcmVkIG9mIGhpbS4gRWFybHkgZGF5cyB3ZXJlIHRvdWdoLCBoZSBjb25jZWRlZCwgSSB3b3VsZG4gd2FudCBteSBraWRzIHRvIGdvIGRvd24gdGhlIHNhbWUgcm91dGUgYXMgbWUuLiAKTWFncml0dGUgZGllZCBpbiAxOTY3LCBidXQgZm9yIHRoZSBiZXN0IHBhcnQgb2YgYSBoYWxmIGNlbnR1cnkgaGlzIGltYWdlcyAgIG9yIHZhcmlhbnRzIG9uIHRoZW0gICBoYXZlIGJlZW4gdXNlZCB0byBhZHZlcnRpc2UgZXZlcnl0aGluZyBmcm9tIHRoZSBGcmVuY2ggc3RhdGUgcmFpbHJvYWQgc3lzdGVtIGFuZCBjaG9jb2xhdGVzIHRvIHdhbGxwYXBlciwgY2FycyBhbmQgcG9saXRpY2FsIGNhbmRpZGF0ZXMuLiAKTm8sIHRoZXkgZG8gbm90IGFzayB0byBnbyBvdXQsIGluIGZhY3QsIHRoZXkgYXJlIGEgbGl0dGxlIGFmcmFpZCBvZiB0aGUgZ3JlYXQgImJpZyByb29tIiB0aGF0IGhhcyBubyBjZWlsaW5nIGZvciBzZWN1cml0eS4uIApXaGF0IEkgZG8ga25vdyBpcyB0aGF0IEdlcmFjaW90aSBhZGRyZXNzZWQgZWFjaCBsaW1iIGluZGl2aWR1YWxseSwgYW5kIHRlbmRlZCB0byBrbmVhZCBhbmQgZ2xpZGUgcmF0aGVyIHRoYW4gZGlnIG9yIHR3aXN0LiBJIGRpZCBhbHNvIHN1bW1vbiB0aGUgd2lsbCB0byBhc2sgZm9yIGRldGFpbHMgYSBmZXcgdGltZXMsIHdoZW4gYSBtb3ZlIHN0cnVjayBtZSBhcyBwYXJ0aWN1bGFybHkgaW50ZXJlc3Rpbmcgb3IgZ29vZCBmZWVsaW5nLCBzbyBhcyB0byBnYXRoZXIgYXQgbGVhc3QgYSBmZXcgc3BlY2lmaWNzLi4gCk1vc3Qgc3RhdGVzIHJlcXVpcmUgbWFzc2FnZSB0aGVyYXBpc3RzIHRvIG1haW50YWluIGEgY3VycmVudCBsaWNlbnNlLCB3aGljaCBmcmVlcyB0aGUgdGhlcmFwaXN0IGZyb20gc2Vla2luZyBjb3VudHkgb3IgY2l0eSBsaWNlbnNlcy4gU3RhdGVzIHR5cGljYWxseSByZXF1aXJlIG5ldyBsaWNlbnNlZXMgdG8gaGF2ZSBhIGNlcnRpZmljYXRlIG9mIGNvbXBsZXRpb24gZnJvbSBhbiBhY2NyZWRpdGVkIG1hc3NhZ2UgdGhlcmFweSB0cmFpbmluZyBpbnN0aXR1dGUgYW5kIGEgbWluaW11bSBudW1iZXIgb2YgbWFzc2FnZSBob3VycyBwZXJmb3JtZWQgdW5kZXIgdGhlIHN1cGVydmlzaW9uIG9mIGEgbGljZW5zZWQgdGhlcmFwaXN0LiAKVGhlIHdvbmRlcmZ1bCB0aGluZyBhYm91dCBvbmxpbmUgcG9rZXIgaXMgYSBwbGF5ZXIgY2FuIHBsYXkgbW9yZSBoYW5kcywgYW5kIHlvdSBrbm93IHdoYXQgdGhhdCBtZWFucyBmb3IgcG9rZXIgd2lubmVycyBtb3JlIHdpbm5pbmdzISBBbHNvLCB0aGUgYWJpbGl0eSBvZiBiZWluZyBhYmxlIHRvIHBsYXkgbXVsdGlwbGUgdGFibGVzIGlzIGEgcGx1cy4gClRoZSBGdWVsIHdhcyBqdXN0IGEgbWVzcywgYW5kIGl0IG1hZGUgZXZlcnlvbmUgbG9vayBsaWtlIHNoaXQuIApKdXN0IGJlY2F1c2UgYSBmYW4gaXMgcXVpZXQgaW4gYSBnaWFudCBib3ggd2l0aCAzMCBoaWdoIGNlaWxpbmdzIGRvZXMgbm90IG5lY2Vzc2FyaWx5IG1lYW4gaXQgd2lsbCBiZSBxdWlldCBpbiB5b3VyIHRpbnkgYmF0aHJvb20uIAogMiBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnb0kgcXVpdCBJUU9TIG9uIG15IHF1aXQgZGF0ZS4gSSBoYWQgYWN0dWFsbHkgcXVpdCBjaWdhcmV0dGVzIG92ZXIgYSB5ZWFyIHByaW9yLiBJUU9TIGlzIGV4YWN0bHkgYXMgYWRkaWN0aXZlIGFzIGNpZ2FyZXR0ZXMgYW5kIG1heWJlIG5vdCBhcyBwb2lzb25vdXMgYnV0IGNlcnRhaW5seSBzdGlsbCBwb2lzb25vdXMuIApUaG9zZSBvdGhlciBnYW1lcyBkbyBub3QgaGF2ZSB0aGUgbW9uZXkgb3IgcG9wdWxhdGlvbiBpbnZvbHZlZCBiZWNhdXNlIG9mIGhvdyBlYXN5IGl0IGlzIHRvIGdyYXNwIGJhc2ljIHN0cmF0ZWd5IGluIHBva2VyLiBCYWQgcGxheSBpbiB0aG9zZSBvdGhlciBnYW1lcyBhcmUgZWFzaWx5IGRlZmVhdGVkLiBCdXQgYmFkIHBsYXkgaW4gcG9rZXIgd2lucyBoYW5kcyBzb21ldGltZXMsIG5vIG1hdHRlciBob3cgZ29vZCB0aGUgb3Bwb25lbnQuCklmIHRoZXkgbWFrZSB5b3UgZmVlbCB1bmNvbWZvcnRhYmxlIGluIHlvdXIgb3duIGhvbWUsIHlvdSBhbmQgU08gbmVlZCB0byBkZWNpZGUgd2hhdCB5b3UgYXJlIGNvbWZvcnRhYmxlIHdpdGggYW5kIHRoZW4gdGVsbCB0aGVtIHRoYXQuIApBIGZyaWVuZCBvZiBtaW5lIGFuZCBoZXIgbG9uZyB0aW1lIGxpdmUgaW4gYm95ZnJpZW5kLCB3aXRoIHdob20gc2hlIGFscmVhZHkgaGFzIG9uZSBjaGlsZCwgd2FudGVkIHRvIGhhdmUgYW5vdGhlci4gQmVjYXVzZSBvZiBhIGNocm9uaWMgaWxsbmVzcyBzaGUgaGFzLCB0aGUgZmV0dXMgd2FzbiBwcm9wZXJseSBmb3JtZWQsIGFuZCBhYm9ydGlvbiB3YXMgZGVlbWVkIHRoZSBzYWZlc3Qgcm91dGUgdG8gZ28gZm9yIHRoZSBtb3RoZXIuIEl0IHdhcyBhIHZlcnkgZGlmZmljdWx0IHRpbWUgZm9yIHRoZSB3aG9sZSBmYW1pbHksIGJ1dCBhdCBsZWFzdCB0aGV5IGNhbiBoYXZlIGFub3RoZXIgZ28gYXQgaXQuIApUbyBrbm93IGhlIHNhdyBpdCBhcyBwb2ludGxlc3MgYW5kIG5vdyAoYSB5ZWFyIGFuZCBhIGhhbGYgaW4pIHRvIHNlZSBwcm9vZiBvZiB0aGF0IHdhcyBzdWNoIGEgcmVsaWVmIGFmdGVyIDUgeWVhcnMgb2YgYWxtb3N0IGNvbnN0YW50IHN0cmVzcy4uIApTb2xsdGVuIFNpZSB0cm90emRlbSBhdWYgZWluZSBzdmVybGV0enVuZyBhdWZtZXJrc2FtIHdlcmRlbiwgYml0dGVuIHdpciB1bSBlaW5lbiBlbnRzcHJlY2hlbmRlbiBIaW53ZWlzLiAKVGhleSB3ZXJlLiBFYXJseSBtZW1iZXJzIGhhZCBpbmNsdWRlZCBNYXR0aGV3IFdoaXRlaGVhZCwgZm9ybWVyIHByZXNpZGVudCBvZiBNaW5lciBUZWFjaGVycyBDb2xsZWdlIGluIHRoZSBEaXN0cmljdCB3aG8gd2FzIGFsc28gYSBjb25zdWx0YW50IG9uIEJyb3duIHZzLiAKT3IgaXQgY291bGQganVzdCBtZWFuIHRoYXQgd2hhdCBoYXBwZW5lZCBpbiB0aGlzIGRyZWFtIHdhcyBtZWFudCB0byBiZS4gCllvdSBjYW4gdGFrZSBhIHBob3RvIG9mIHlvdXIgY29sbGVhZ3VlcyBhbmQgYW5vdGhlciBvbmUgb2YgeW91ciBidWRkaWVzIGFuZCB0aGFuIHRhZyBlYWNoIGZhY2UgdG8gaXRzIHJlc3BlY3RpdmUgcGhvbmVib29rIGVudHJ5LiAKTGUgMTUgc2VwdGVtYnJlLCBlbGxlIHNlIGZhaXQgcmFjaGV0ZXIgcGFyIEJhbmsgb2YgQW1lcmljYSBwb3VyIDUwIG1pbGxpYXJkcyBkZSBkb2xsYXJzLi4gCkl0IGhhcyBpdHMgb3duIHJlYWdlbnQsIGJ1dCBpdCBnaXZlcyB5b3Ugc29tZSBtdWNoIG5lZWRlZCBBb0UuIEl0IG1pZ2h0IG5vdCBiZSBhIGJhZCBpZGVhIHRvIGxlYXJuIEZpcmViYWxsIGF0IDQsIGJ1dCBJIHVuc3VyZSBvZiBpdHMgZWZmZWN0aXZlbmVzcy4gCkkgYWxtb3N0IGJsYWNrZWQgb3V0IGZyb20gbGFjayBvZiBveHlnZW4gc2V2ZXJhbCB0aW1lcy4gClNlZW1zIHRlcnJvcmlzdCB0byBtZS4gTWFueSBxdWVzdGlvbiBub3QgZXZlbiBtZW50aW9uZWQgYnkgdGhlIHB1YmxpYy4uIApUaGUgaGVhbGluZyBwcm9jZXNzIGlzIHNsb3csIGFuZCBJIGRvbnQgdGhpbmsgZXZlciB3aWxsIGJlIGNvbXBsZXRlLiBBIHBhcnQgb2YgdXMgaXMgbWlzc2luZyBmb3JldmVyLiBGb3IgYSBsb25nIHRpbWUgSSB0cmVhdGVkIGhlciB1cm4gYXMgaWYgaXQgd2FzIGhlciAgY2hlY2tpbmcgb24gaGVyIGluIHRoZSBtaWRkbGUgb2YgdGhlIG5pZ2h0LCBicmluZ2luZyBoZXIgZm9yIGVycmFuZHMsIHRhbGtpbmcgYW5kIHJlYWRpbmcgdG8gaGVyLiBUb29rIG1lIGEgbG9uZyB0aW1lIHRvIGxldCBnbyBvZiB0aGF0IGFuZCB0aGVyZSBhcmUgbW9tZW50cyBJIGZlZWwgZ3VpbHR5IG9yIGxpa2UgYSBiYWQgbW9tIGZvciBub3QgZG9pbmcgaXQuClRoZW4gdGhpcyBwb3N0ZXIgYnJvdWdodCB1cCB0aGUgZmFjdCB0aGF0IFNLIGFwb2xvZ2l6ZWQgdG8gVmlldG5hbSBmb3IgdGhlIGF0cm9jaXRpZXMgY29tbWl0dGVkIGJ5IFNLLiBUbyByZWl0ZXJhdGUgbXkgcG9pbnQgSSBvbmx5IGhhdmUgdG8gYXBwbHkgdGhlIEtvcmVhbiBsb2dpYyB0byB0aGlzIHBvc3Rlci4gVGhlIGNvbnZlcnNhdGlvbiBnb2VzIGxpa2UgdGhpcy4uIApPbmx5IGdvdCB0aGUgYmFuIGFmdGVyIEkgY2FsbGVkIG91dCBvbmUgbW9kZXJhdG9yIHdob20gSSBkb24gZXZlbiBrbm93IHRoYXQgZ290IGFnaXRhdGVkIG92ZXIgcmVnaW9uYWwgcG9sZW1pY2tzLi4gClRoZWVuZGlzbmVhcm9ybm90IHUKRmluZCBwYXRpZW50IG1lZGljYWwgaW5mb3JtYXRpb24gZm9yIGJyb21mZWQgc3lydXAgdnMgcHJvbWV0aGF6aW5lIFByb21ldGhhemluZSBWQyBDb2RlaW5lIE9yYWwgb24gV2ViTUQgaW5jbHVkaW5nIGl0cyB1c2VzLCBzaWRlIGVmZmVjdHMgYW5kIHNhZmV0eSwgaW50ZXJhY3Rpb25zLCBwaWN0dXJlcywgd2FybmluZ3MgYW5kIHVzZXIgcmF0aW5ncy4KMSBwb2ludCAgc3VibWl0dGVkIDkgZGF5cyBhZ28KVGhlIHN1c3BlY3Qgd2FzIGFycmVzdGVkIGZvciB0aGVmdCBvZiBkb21lc3RpYyBhbmltYWwgYW5kIGRpc29yZGVybHkgY29uZHVjdC4gCk5vdyB0aGUgc2hhbGUgcmV2b2x1dGlvbiBoYXMgdHJhbnNmb3JtZWQgaXQgZnJvbSBhbiBlbmVyZ3kgaW1wb3J0ZXIgdG8gZXhwb3J0ZXIsIGFuZCB0aGUgSW50ZXJuYXRpb25hbCBFbmVyZ3kgQWdlbmN5IHByb2plY3RzIHRoYXQgTm9ydGggQW1lcmljYSBtYXkgYmUgc2VsZiBzdWZmaWNpZW50IGluIHRoZSBjb21pbmcgZGVjYWRlLiAKVGFudCBwcmNpcyBxdSdpbCBuJ2V4aXN0ZSBkZSB0b3V0ZSBmYW9uIGF1Y3VuIHRlc3QgcGFyZmFpdGVtZW50IGZpYWJsZSBldCBxdWUgbGUgZGlhZ25vc3RpYyBkb2l0IHRlbmlyIGNvbXB0ZSBhdmFudCB0b3V0IGRlcyBzeW1wdG1lcywgY2UgcXVpIHN1cHBvc2UgZGUgbGVzIGNvbm5hdHJlLCBjaG9zZSByYXJpc3NpbWUgY2hleiBsZXMgbWRlY2lucyBmcmFuYWlzLi4gCkhhcyByaWRkZW4gb25lIGd1eSBiZWZvcmUgYW5kIGl0IGJhY2tmaXJlZC4gCkl0IGlzIGxpa2VseSB0aGF0IHRoZSBmdWxsIDMwMCB3YXMgYWxyZWFkeSBwYWlkIHRvIEpuYW5kZXogYmVmb3JlIHRoZSByZXNpZ25hdGlvbi4KTWFyc2hhbGwuIENodXJjaCB0byBPYnNlcnZlIExveWFsdHkgU3VuZGF5IEZPUlQgQVRLSU5TT04gIFRoZSBUcmluaWZ5IEx1dGhlcmFuIENodXJjaCB3aWxsIGNlbGVicmF0ZSBMb3lhbGZ5IFN1bmRheSB3aXRoIGEgZnVsbCBkYXkgcGxhbm5lZCBmb3IgY2h1cmNoIG1lbWJlcnMgYW5kIGZyaWVuZHMgU3VuZGF5LiAKRXIgdW5zdWl0YWJsZS4uIApKb3JkYW4xMzkwIHUKTXMgS2FobGVydCBhY2NlcHRlZCBPZmFoZW5nYXVlIHdyaXR0ZW4gcGxlYSBhbmQgaGlzIGV4cGxhbmF0aW9uIGFuZCBzYWlkIGhlIGhhZCBsZWZ0IHRoZSBjYXNpbm8gYXMgc29vbiBhcyBoZSB3YXMgYXNrZWQgdG8gZG8gc28uCk1lZ2EgVHlwaG9uIHdvdWxkIGJlIGdvb2QsIGVzcGVjaWFsbHkgaWYgdXNpbmcgbWFueSBkcmFnb24gc3Vicy4gWW9taSBmb3IgVEUgaXMgYWx3YXlzIGFuIGdvb2QgY2hvaWNlLiAKSW4gTW9udGUgQ2FybG8sIHRoZXJlIHdhcyBhIGd1eSB3aG8gY29uZ3JhdHVsYXRlZCBtZSBvbiB3aW5uaW5nIHRoZSBuYXRpb25hbCBQQ0EgYW5kIHRoZW4gdHJpZWQgdG8gYmx1ZmYgbWUgb2ZmIGV2ZXJ5IHNpbmdsZSBoYW5kLiBOb3QgYWxsIG9mIHRoZW0gYXJlIGJ1bGxpZXMgYnV0IHlvdSBoYXZlIHRvIGZpZ3VyZSBvdXQgd2hvIHRoZXkgYXJlLi4gCkJ5IHNwZW5kaW5nIDQgcG9pbnRzLCB5b3UgY2FuIHJlZ2VuIDEgYW5kIHJlZGlyZWN0IDIsIG9yIHJlZGlyZWN0IDQuIApUaGUgYW1vdW50IG9mIG5hdHVyYWwgbGlnaHQgaWxsdW1pbmF0aW5nIHRoZSBnYW1pbmcgZmxvb3JzIHNlbmRzIGFuIGltbWVkaWF0ZSBtZXNzYWdlIHRoYXQgZ29uZSBhcmUgdGhlIGRheXMgb2YgdGhlIGRhcmssIHNtb2t5IGNhc2lubyBob3RlbHMgdGhhdCBtYWtlIHVwIG11Y2ggb2YgdGhlIHBvcHVsYXIgZ2FtYmxpbmcgaG90IHNwb3QgTGFzIFZlZ2FzLCBOZXZhZGEuIApBcyBDcm9zc0ZpdCBncmV3LCBzbyBkaWQgdGhlIHBhbGVvIHBhcmFkaWdtLCBhbmQgYnkgdGhlIHRpbWUgV29sZiBwdWJsaXNoZWQgaGlzIG93biBib29rLCBUaGUgUGFsZW8gU29sdXRpb24sIGluIDIwMTAsIGNhdmVtYW4gaW5zcGlyZWQgY3Vpc2luZSBoYWQgYmVjb21lIHRoZSBkZSBmYWN0byBDcm9zc0ZpdCBtZWFsIHBsYW4uIApTb21lIHRlYWNoZXJzIHdvbid0IGxldCB5b3UgaGF2ZSB0aGVtIG91dCBqdXN0IGJlY2F1c2UgdGhleSBhcmUgc3RyaWN0LiBJIGJyb3VnaHQgc29tZSB0byBzY2hvb2wganVzdCB0byBzdGFjayBhbmQgbm9uZSBvZiBteSB0ZWFjaGVycyBzYWlkIGFueXRoaW5nLiBJIGFsc28gZG9uJ3QgZ28gdG8gYSBjaHJpc3RpYW4gc2Nob29sIChpdCBzZWVtcyBsaWtlIHNvbWUgY2hyaXN0aWFucyB0aGluayBwb2tlciBhbmQgZ2FtYmxpbmcgaXMgZnJvbSB0aGUgZGV2aWwpLiAKSURLIHdoYXQgdGhlIHZhbHVlIGlzLCBidXQgSSBsb3ZlIEVhcmx5IEFjY2VzcyArIEhhcmR3YXJlIHByaW9yaXR5ICsgVW5saW1pdGVkIFNDICsgc29tZSB1bmlxdWUgZXhwZXJpZW5jZSBhY2Nlc3MgdG8gVGVzbGEsIFNwYWNlWCwgYW5kL29yIEJvcmluZyBDb21wYW55LiBUaHJvdyBpbiBzb21lIGxpbWl0ZWQgbWVyY2ggKEJvcmluZyBDb21wYW55IGhhdCwgZXRjKSBhbmQgSSBzaW5nIHRoZSBwcmFpc2UgYXMgbXVjaCBhcyBJIGVuY291cmFnZWQgcHVyY2hhc2VzLiAxMyBwb2ludHMgIHN1Ym1pdHRlZCA0IGRheXMgYWdvLiAKSGFycnkgQnVya2hhcnQgd2FzIGJlaW5nIGhlbGQgd2l0aG91dCBiYWlsIGFmdGVyIGJlaW5nIGFycmVzdGVkIGluIHRoZSBhcnNvbiBjYXNlIE1vbmRheS4KR3Jvd2luZyBpbiBhIGNvbnRyb2xsZWQgZW52aXJvbm1lbnQgYWxsb3dzIHVzIHRvIHByb2R1Y2UgY3JvcHMgYWxsIHllYXIgcm91bmQsIGNsb3NlciB0byB3aGVyZSBwZW9wbGUgbGl2ZSwgaW4gYSBzdXN0YWluYWJsZSB3YXkuIApOb3cgYSBzaGFmdCB3aXRoIGEgZ2VhciBvZiBkaWZmZXJlbnQgc2l6ZXMgb24gZWFjaCBlbmQuIFRoZXNlIGdlYXJzIHdvdWxkIGhhdmUgdGhlIHNhbWUgcm90YXRpb25hbCB2ZWxvY2l0eS4gClNhbXVlbCBPdmVyICBob2x0emVyLCBuZWFyIEVtbWl0c2J1cmcuIApIdXJ0bGV5IGlzIHBhcnRpYWwgdG8gdXNpbmcgdmFsYW5jZXMsIHRvbywgYW5kIHBhcnRpY3VsYXJseSBsaWtlcyB0aGVtIG9uIGtpdGNoZW4gd2luZG93cy4gCkJlY2F1c2UgdGhleSBjb3N0IGVmZmVjdGl2ZSBhbmQgZm9yIHNtYWxsIGludmVzdG1lbnQgeW91IGNhbiBlYXJuIGh1Z2UgYW1vdW50IG9mIG1vbmV5LiAKSW4gQXVndXN0IDIwMDMsIHBva2VyIHN0YWtlcyBpbmNyZWFzZWQgdG8gJDIgdW5kZXIgc3RhdGUgcG9rZXIgcnVsZXMsIHJpc2luZyBhZ2FpbiBpbiBKdWx5IDIwMDcgdG8gJDUgZm9yIGxpY2Vuc2VkIHBhcmkgbXV0dWVsIGZhY2lsaXRpZXMuIEFzIGEgcmVzdWx0LCBkZWFsZXJzIG9mdGVuIG1hZGUgbW9yZSB0aGFuIG1hbmFnZXJzLiBJbnN0ZWFkIG9mIGluY3JlYXNpbmcgbWFuYWdlcnMnIHdhZ2VzLCBMZXZ5IHNhaWQsIHRoZSBkZWFsZXJzJyBzdXJwbHVzIHRpcHMgd2VyZSB1c2VkIHRvIHBheSBtYW5hZ2VycywgZXZlbiB0aG91Z2ggZGVhbGVycyBkaWQgYWxsIHRoZSB3b3JrLiAKSW4gYSB3b3JsZCBvdmVyZmxvd2luZyB3aXRoIGRpc3RyYWN0aW9uIGFuZCBkaWx1dGVkIHdpdGggY29tcGV0aXRpb24sIGl0J3MgYmVjb21pbmcgaGFyZGVyIGFuZCBoYXJkZXIgZm9yIGJ1c2luZXNzZXMgdG8gY29ubmVjdCB3aXRoIGN1c3RvbWVycyBvbmxpbmUuIFRvZGF5IG1vcmUgdGhhbiBldmVyLCBicmFuZHMgbmVlZCB0byBzdGVwIG91dHNpZGUgdGhlIGRpZ2l0YWwgYm94IGFuZCBmaW5kIGZyZXNoIHdheXMgdG8gc3VycHJpc2UgYW5kIGRlbGlnaHQgY29uc3VtZXJzIGluIHJlYWwsIGF1dGhlbnRpYyB3YXlzLiBFeHBlcmllbnRpYWwgbWFya2V0aW5nIGhhcyBiZWVuIGNsaW1iaW5nIHRvIHRoZSB0b3Agb2YgdGhlIGJyYW5kIHdvcmxkIHRvdGVtIHBvbGUgZm9yIGEgZmV3IHllYXJzIG5vdyBhbmQgc2hvd3Mgbm8gc2lnbnMgb2Ygc2xvd2luZyBkb3duLiAKSGUgc2FpZCB3aGVuIGhlIGdvdCBvZmYgdGhlIGJ1cyBvbiBGcmlkYXlzIGhlIHdvdWxkIHN0YXNoIHRoZSBiYWNrcGFjayBhbmQgaXQgY29udGVudHMgdW5kZXIgaGlzIHBvcmNoLiAKRG9lcyBzaGUgbG9vayBiZXR0ZXIgd2l0aCBtYWtldXAsIHN1cmUuIFRoYXQgdGhlIHdob2xlIHBvaW50IG9mIG1ha2V1cC4gRG8gSSBleHBlY3QgaGVyIHRvIHdlYXIgaXQgYXQgYWxsIHRpbWVzLCBubyBvZiBjb3Vyc2Ugbm90LCBidXQgaXQgbmljZSB3aGVuIHNoZSBkZWNpZGVzIHRvLiAKQW5kIHRoYXQncyB3aGVuIEkgcmVtZW1iZXJlZCBJIHdhc250IGF0IHdvcmsuLiAKVGhyZWUgd29tZW4gd2VyZSBhcnJlc3RlZCBhdCBhIEhlbGxlcnRvd24gbWFzc2FnZSBwYXJsb3IgV2VkbmVzZGF5IGFuZCBjaGFyZ2VkIHdpdGggcHJvc3RpdHV0aW9uLCB0aGUgcmVzdWx0IG9mIGFuIHVuZGVyY292ZXIgaW52ZXN0aWdhdGlvbiB0aGF0IGxhc3RlZCBtb3JlIHRoYW4gbmluZSBtb250aHMsIHN0YXRlIGFuZCBib3JvdWdoIHBvbGljZSBzYWlkLiBKb2FubmUgTW9ycmlzIFJ1aGYsIDM2LCBvZiA2MjggTWFpbiBTdC4sIEhlbGxlcnRvd24sIGFuZCBLZWxseSBBLiBIYW5ub24sIGFnZSB1bmF2YWlsYWJsZSwgb2YgUmVhZGluZyB3ZXJlIGNoYXJnZWQgd2l0aCBwcm9zdGl0dXRpb24gaW4gY29ubmVjdGlvbiB3aXRoIGEgcG9saWNlIGludmVzdGlnYXRpb24gb2YgVGhlIEJvZHkgQmFuaywgYSBtYXNzYWdlIHBhcmxvciBhdCBNb3JyaXMgUnVoZidzIGFkZHJlc3MsIHBvbGljZSBzYWlkLiBBIHNlY29uZCBjaGFyZ2Ugb2YgcHJvc3RpdHV0aW9uIGFuZCByZWxhdGVkIG9mZmVuc2VzIGFnYWluc3QgU3VzYW4gS21ldHosIDI2LCBvZiBXaWxrZXMgQmFycmUgd2FzIHdpdGhkcmF3biBieSBBc3Npc3RhbnQgRGlzdHJpY3QgQXR0b3JuZXkgRXJpYyBEb3dkbGUgZHVyaW5nIGEgcHJlbGltaW5hcnkgaGVhcmluZyBiZWZvcmUgRGlzdHJpY3QgSnVzdGljZSBFbGl6YWJldGggUm9taWcuIERvd2RsZSB0b2xkIFJvbWlnIGhlIGRpZCBub3QgYmVsaWV2ZSB0aGUgc3RhdGUgaGFkIGVub3VnaCBldmlkZW5jZSBvbiB0aGUgc2Vjb25kIGNoYXJnZS4KRGVzcGl0ZSB0aGlzLCB1c2luZyBzb2x2ZXJzIHRvIGNyYWZ0IHlvdXIgc3RyYXRlZ3kgaXMgYSB3b3J0aHdoaWxlIGVuZGVhdm9yLiAKWW91IG11c3QgaGF2ZSBhIHNwb25zb3IgZnJvbSB0aGUgcHJvamVjdCAocHJlZmVyYWJseSB0aGUgcG9pbnQgb2YgY29udGFjdCBsaXN0ZWQpIHNpZ24gb2ZmIG9uIGFsbCBkZXRhaWxzLiBIZS9TaGUgd2lsbCBjaGVjayBlaXRoZXIgIlllcyIgb3IgIk5vIiBvbiB0aGVpciBhZ3JlZW1lbnQgd2l0aCB0aGUgZGV0YWlscyB5b3UgZW50ZXJlZC4gClN1cHBsZW1lbnQgeW91ciBzcGEgdHJlYXRtZW50cyB3aXRoIENoaW5lc2UgaGVyYmFsIGFuZCBudXRyaXRpb25hbCBjb25zdWx0YXRpb24uIEdldCBhIGZvb3QgYmF0aCBpbiB0aGUgU2FuZ2hhIFJvb20gd2l0aCBhIGdyb3VwIG9mIGZyaWVuZHMuIApJZiB5b3UgZG9uIG1vdmUgbXVjaCBpbiB5b3VyIHNsZWVwLCB5b3UganVzdCB3YW50IHRvIG1ha2Ugc3VyZSBpZiB5b3Ugc2l0dGluZyB1cCB5b3VyIGxlZ3MgYXJlIHJhaXNlZCAoZXh0cmEgc3VwcG9ydCkgYW5kIGlmIHlvdSBsYXlpbmcgdGhhdCBiYWJ5IGhhcyBhIGJ1YmJsZSBvZiBub24gc2hhcmVkIGFpci4gClNoYXJvbiBKdWR5LCBzYWlkIGhlIG9uY2Ugc2hvd2VkIGhlciBhIHBpY3R1cmUgb2YgaGltc2VsZiB3aW5uaW5nIGEgJDIwLDAwMCBzbG90IG1hY2hpbmUgamFja3BvdC4KRGVzcGl0ZSB0aGUgc3Ryb25nIHN1cHBvcnQgb2YgR292ZXJub3IgUGF0dGVyc29uLCB0aGUgc2FtZSBzZXggbWFycmlhZ2UgYmlsbCB3YXMgdm90ZWQgZG93biB5ZXN0ZXJkYXkgaW4gdGhlIE5ldyBZb3JrIFNlbmF0ZS4gSW50ZXJlc3RpbmcgcGllY2VzIG9mIHRoZSBkZWJhdGUgaW5jbHVkZWQgdGhlIGNsYWltIHRoYXQgTmV3IFlvcmsgc2hvdWxkIG5vdCBsZWdhbGl6ZSBnYXkgbWFycmlhZ2UgYmVjYXVzZSAzMSBzdGF0ZXMgYWxyZWFkeSBiYW4gaXQuIFRvIHdoaWNoIEVyaWMgQWRhbXMsIGEgQnJvb2tseW4gRGVtLCByZXBsaWVkIHRoZXNlIHdlcmUgdGhlIHNhbWUgc3RhdGVzIHRoYXQgImF0IG9uZSB0aW1lIG9yIGFub3RoZXIgc29sZCBibGFja3MgaW50byBzbGF2ZXJ5LiIuIApUaGlzIGlzIHlvdXIgcGlsb3QuIApPbmUga2lsbGVkIGhlcnNlbGYuIApNeSBwZXJzb25hbCBvcGluaW9uIGlzIHRoYXQgbWFwcyBhcmUgcG90ZW50aWFsbHkgYW4gJ2Vhc3knIHdheSB0byAncG9saWNlJy4gTWFwIGhhcyB0byBiZSBkZWxpdmVyZWQgdG8gUmVnaXN0ZXIgVGVjaG5pY2FsIGF0IHN0YXJ0IG9mIHllYXIgYW5kIGlmIC8gd2hlbiBjaGFuZ2VkIGF0IGFueSB0aW1lIGFuZCBpZiB5b3UgYXJlIGxhdGVyIGZvdW5kIGZvdW5kIHVzaW5nIGEgZGlmZmVyZW50IG1hcCB0byB0aGF0IHJlZ2lzdGVyZWQgKG9yIG1heSBiZSB0byB0aG9zZSByZWdpc3RlcmVkKSB0aGVuIGl0J3MgYnllIGJ5ZS4gCkh1bWFub3ZhbiB1ClRoZSBQYXJrIEh5YXR0IEhvdGVsIGlzIG9uZSBvZiB0aGUgYmVzdCBob3RlbHMgd2hlbiBpdCBjb21lcyB0byBvZmZlcmluZyB0aGUga2luZCBvZiBsdXh1cnkgdGhhdCB5b3UgZGVzZXJ2ZS4gCkJpZyAyIGlzIGEgZ2FtZSB0aGF0IG15IGZyaWVuZHMgYW5kIEkgbGlrZSB0byBwbGF5IHdoZW4gd2UgaGF2ZSBhIGRlY2sgb2YgY2FyZHMgaGFuZHkuIApPbiB0aGUgZmlyc3QgZGF5IGJhY2sgYXQgc2Nob29sIGFmdGVyIGhhdmluZyBTY29saW9zaXMgY29ycmVjdGlvbiBzdXJnZXJ5IHdoZW4gSSB3YXMgMTUsIG15IGZpcnN0IGNsYXNzIHdhcyBNYXRocy4gVGhlIHRlYWNoZXIgd2FzIGF3ZnVsIGFuZCBkaWRuJ3QgcmVhbGx5IG11Y2ggY2FyZSBmb3Igb25seSBhIHNwZWNpYWwgZmV3IHdobyB3ZXJlIGdvaW5nIHRvIGdldCB0aGUgaGlnaGVzdCBtYXJrcy4gClRoaW5rIGFib3V0IGhvdyBtdWNoIGZ1biB5b3UgaGF2ZSB3aGVuIGl0IGNvbWVzIHJpZ2h0IGRvd24gdG8gaXQuIFdoZW4geW91IGFyZSBhZnRlciBmdW4sIGp1c3Qgc2hlZXIgdW5hZHVsdGVyYXRlZCBnb29kIGZ1biwgd2h5IGdvIHRvIHRoZSBjcmFwcyB0YWJsZXMsIG9yIHRoZSBwb2tlciB0YWJsZXMsIHdoZW4gZXZlcnlvbmUgaXMgc28gZGVhZGx5IHNlcmlvdXMgd2hlbiB5b3UgY2FuIHZpc2l0IHRoZSBDYXNpbm8gU2xvdCBNYWNoaW5lcz8gV2h5IGRlYWwgd2l0aCBwZW9wbGUgd2hvIHRha2UgdGhpbmdzIHRvbyBzZXJpb3VzbHkgYW5kIGhhdmUgdG8gd29ycnkgYWJvdXQgd2hhdCB0aGV5IHRoaW5rIG9mIHlvdT8gWW91J2xsIGZpbmQgdGhhdCB3aGVuIHlvdSB3YW50IHRvIGJldCBwcml2YXRlbHkgYnV0IHdpbiBiaWcgaW4gYSB2ZXJ5IHNob3d5IHdheSB0aGF0IHlvdSBzaG91bGQgdGFrZSBhIGxvb2sgYXQgd2hhdCB0aGlzIGNvdXJzZSBjYW4gaGVscCB5b3UuCiAzIHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ29JIHVzdWFsbHkgYWdhaW5zdCBhbnkga2luZCBvZiBjZW5zb3JzaGlwIGJ1dCB0aGlzIGFjY291bnQuIElzIHRoZXJlIGEgd2F5IHRvIGZsYWcgYWNjb3VudHMgdG8gYnJpbmcgdGhlbSB0byB0aGUgYXR0ZW50aW9uIG9mIHRoZSBhZG1pbnMgaWYgdGhleSBhcmUgc3VzcGVjdGVkIG9mIGJlaW5nIHNvY2lhbCBtZWRpYSBib3RzPyBUaGlzIGFjY291bnQgaXMgZ29pbmcgc3ViIHRvIHN1YiBhbmQgcHJvcG9zaW5nIG91dGxhbmRpc2ggY29uc3BpcmFjeSB0aGVvcmllcyBhbmQgYWJzb2x1dGUgYnVsbHNoaXQgZXZlcnl3aGVyZSBpdCBnb2VzLiAKSSBsaWtlIGl0IGZpbmUsIGJ1dCBJIGZlZWwgemVybyBsb3lhbHR5IHRvIHRoZSBjb21wYW5pZXMgSSB3b3JrIGZvciBhbmQgSSdtIGluIGl0IG9ubHkgZm9yIGFzIGxvbmcgYXMgSSdtIGRvaW5nIGludGVyZXN0aW5nIGVub3VnaCB3b3JrIHdpdGhvdXQgcG9saXRpY2FsIG5vbnNlbnNlLiBHb29kIGx1Y2shIEkgZG91YnQgeW91J2xsIHJlZ3JldCBpdC4uIApIdW1hbnMgYXJlIGZhc2NpbmF0aW5nLi4gCkkgZ2V0IHRoYXQgbm90IGV2ZXJ5b25lIGxpa2VzIGdhbWJpdCBidXQgYnV0IG1hbnkgcGVvcGxlIGVuam95IGl0IGFuZCB5b3UgY2FuIGZhdWx0IEJ1bmdpZSBmb3IgdHJ5aW5nIHRvIGdldCBtb3JlIHBlb3BsZSB0byBwbGF5IHdoYXQgaXMgYWN0dWFsbHkgYSBwcmV0dHkgZnVuIGdhbWUgbW9kZS4gClRoZSBzb2NpYWwgbWVkaWEgc2VydmljZXMnIHVzZSBvZiB0aGUgc2hhcmVkIGluZm9ybWF0aW9uIHdpbGwgYmUgZ292ZXJuZWQgYnkgdGhlIHNvY2lhbCBtZWRpYSBzZXJ2aWNlcycgcHJpdmFjeSBwb2xpY3kgYW5kIHlvdXIgc29jaWFsIG1lZGlhIGFjY291bnQgc2V0dGluZ3MuIApOZXZlciBtaW5kIHRoZSBzY2llbmNlIGJlaGluZCBpdC4gCkluIHBva2VyIG91ciB0aWdodCBwbGF5ZXIgZ2V0cyBkZWFsdCBhIHBhaXIgb2YgYWNlcy4gVGhpcyBpcyB3aGF0IGhlIGhhcyBiZWVuIHdhaXRpbmcgZm9yIGFuZCBoZSBjb21lcyBvdXQgZ3VucyBibGF6aW5nLiBPbiB0aGUgZmxvcCB0aGVyZSBtaWdodCBiZSBzb21lIGRhbmdlcm91cyBjYXJkcyAgIHN1Y2ggYXMgMiBvZiB0aGUgc2FtZSBzdWl0ICAgaW5kaWNhdGluZyB0aGF0IGFub3RoZXIgcGxheWVyIGNvdWxkIGhhdmUgYSBmbHVzaCBkcmF3LiBBbm90aGVyIGNhcmQgd2l0aCB0aGUgc2FtZSBzdWl0IGNvbWVzIG9uIHRoZSB0dXJuLiBCdXQgaGUgaWdub3JlcyB0aGlzIGFuZCBjb250aW51ZXMgdG8gYmV0LiBBdCB0aGUgcml2ZXIgdGhlIG9wcG9uZW50IHR1cm5zIG92ZXIgYSAyLDMgc3VpdGVkIHRvIHRoZSAzIHRhYmxlIGNhcmRzIGFuZCB3aW5zIHdpdGggYSBsb3cgZmx1c2guIE91ciBBQ0VTIG1hbiBpcyBkZXZhc3RlZC4gSGUgaGFkIHRoZSBtdWNoIGhpZ2hlciBoYW5kIGJlZm9yZSB0aGUgZmxvcCAgaXQgZG9lc24gc2VlbSBmYWlyISBCdXQgcG9rZXIgaXMgYWJvdXQgdGhlIGNhcmRzIGJvdGggbm93IGFuZCBpbiB0aGUgZnV0dXJlLgpQb2FzaWUgb3ZwbHl2biB2IHBva2xhZCBwb292bmN0dm8uIER2b2R1LCBlIGplIGRrbGFkbmUgbmFzaWFrbnV0LCBwbyBkYWRpIGFsZWJvIGphciB0YXZlbmlueSBqZSBqZWRub2R1Y2hpZSB2eWtvcGEgbmUgc2xua28gcGVpZSBoYXJkIHBhY2suIE1va3JlaiB2b3pvdmtlIG0gdGllIHZpYWMgdm9kaXZvcyBhIGJ1ZGV0ZSBtYyBuanMgcHJlZG1ldHksIGt0b3IgcyBobGJpZSBha28ga2VieSB6ZW0gYm9saSBzdWNoLiAKVGhlIGNoYW5jZSB0aGF0IGFsbCAzIGFyZSBnaXJscyBpcyAwLjUgIDAuMjUgPSAwLjEyNSA0MTUgcG9pbnRzICBzdWJtaXR0ZWQgMjQgZGF5cyBhZ29Tb3JyeSwgYnV0IEkgZ29pbmcgdG8gdHJ1c3QgdGhlIEFtZXJpY2FuIEZhcm0gQnVyZWF1IEZlZGVyYXRpb24gb3ZlciB5b3U7IHdoaWNoIGNpdGVzIGEgMjAxMSBhcnRpY2xlIChsaW5rIGF0IHRoZSBlbmQpIHNheWluZyB0aGUgdG90YWwgd2F0ZXIgdXNlIHBlciBwb3VuZCBvZiBiZWVmIGlzIDQ0MSBnYWxsb25zIHBlciBwb3VuZCBpbiB0aGUgVVMuIFRoZXkgaW5jbHVkZSBpbiBvbiB0aGlzIHRoZSBhbW91bnQgb2Ygd2F0ZXIgdXNlZCBmb3IgY3JvcHMsIGZlZWRpbmcsIGRhaXJ5IGZvciB5b3VuZyBjYXR0bGUsIGFuZCBtYWNoaW5lcnkgdXNlZCBpbiB0aGUgcHJvY2Vzcy55b3VyIDIgZ2FsbG9ucy9taW51dGUsIHRoYXQgYW1vdW50cyB0byBhYm91dCAyMjAgbWludXRlcywgb3IgYWJvdXQgNCBob3VycyBvZiBzaG93ZXJpbmcuIApBZnRlciB0aGUgYWxsZWdlZCBpbmNpZGVudCwgdGhlIHdvbWFuIGV4cGVyaWVuY2VkIGRlcHJlc3Npb24gYW5kIGFueGlldHksIGZvciB3aGljaCBzaGUgd2FzIGRpYWdub3NlZCwgYXMgd2VsbCBhcyBzaGFtZSBhbmQgbG93IHNlbGYgZXN0ZWVtLgpEdXJpbmcgRWRnYXIncyByZWlnbiwgYSBsb3Qgb2YgbGFuZCB0aGF0IHRoZSBDaHVyY2ggaGFkIGxvc3QgdG8gbWFueSBub2JsZSBsYW5kb3duZXJzIHdhcyByZXR1cm5lZCB0byB0aGUgQ2h1cmNoLiAKU28gYWdhaW4gd2UgZ28gdG8gdGhlIGNvcHMsIGFuZCB0aGV5IHN0aWxsIHJlZnVzaW5nIGFueXRoaW5nLiBBdCB0aGlzIHBvaW50IEkgbm90IGdvaW5nIHRvIHNjaG9vbCBhbnltb3JlLCBhbmQgdGhlbiBMIGhhcyB0aGUgYXVkYWNpdHkgdG8gYWN0dWFsbHkgZmlsZSBhIHJlc3RyYWluaW5nIG9yZGVyIGFnYWluc3QgbWUhIFNvIHdlIGdvdCBhbiBleHRyZW1lbHkgZ29vZCBsYXd5ZXIgd2hvIHVzZWQgdG8gYmUgYSBjb3AsIG9uZSBvZiB0aGUgYmVzdCBpbiBDbGV2ZWxhbmQsIGFuZCBoZSBsYWlkIGludG8gdGhlIHBvbGljZSBjaGllZiAob2Ygd2hvbSBoZSB1c2VkIHRvIHdvcmsgd2l0aCkgYW5kIGJhc2ljYWxseSB0b2xkIHRoYXQgaWYgdGhleSB3YW50IHRvIGNvbnRpbnVlIGhhcmFzc2luZyBtZSwgd2UgaGF2ZSBzb21lIGxhd3N1aXRzIGZvciB0aGVtLiAKSSByZWFsbHkgZW5qb3kgbG9va2luZyBhdCBvbGQgcGhvdG9zIHdpdGggYSBtYWduaWZ5aW5nIGdsYXNzLCBmaW5kaW5nIHRoZSBwaWN0dXJlcyB3aXRoaW4gdGhlIHBpY3R1cmUsIHVudGlsIGl0IGlzIG1pY3JvIGltYWdlcyBhbGwgdGhlIHdheSBkb3duLiAKIkV2ZXJ5IGNpdHkgd2FudHMgdG8gYmUgc21hcnQsIGJ1dCB0aGUgY2hhbGxlbmdlIGlzIGl0J3MgdmVyeSBleHBlbnNpdmUgdG8gZGVwbG95IHRoZSBpbmZyYXN0cnVjdHVyZSwgdGhlIGZpYmVyIGFuZCB0aGUgSW9UIGRldmljZXMgdG8gbWFrZSBpdCBhbGwgaGFwcGVuLCIgc2F5cyBBcmkgQnVjaGFsdGVyLCBDRU8gYXQgSW50ZXJzZWN0aW9uLiAiTWFya2V0aW5nIGJlY29tZXMgYSB3YXkgdG8gY3JlYXRlIGEgdmlydHVvdXMgY3ljbGUgYXJvdW5kIHRoYXQgYmVjYXVzZSByYXRoZXIgdGhhbiB1c2luZyB0YXhwYXllciBkb2xsYXJzLCB5b3UgY2FuIHRpZSBpdCB0byBhbiBhZHZlcnRpc2luZyBjb25jZXNzaW9uLiIuIApUaGUgdGhpcmQgZ2FtZSB0aGF0IGNhbiBiZSBmb3VuZCBpbiBQYWNpZmljIFBva2VyIGlzIHRoZSBTZXZlbiBDYXJkIFN0dWQgUG9rZXIgR2FtZS4gVGhlcmUgYXJlIGZpdmUgYmV0dGluZyByb3VuZHMgZm9yIGVhY2ggZ2FtZSBvZiB0aGlzIGFuZCBhIG1heGltdW0gb2YgOCBwbGF5ZXJzIGNhbiBwbGF5IHRoaXMgZ2FtZS4gVGhlIGdhbWUgc3RhcnRzIHdpdGggdGhlIGRlYWxlciBkZWFsaW5nIDIgY2FyZHMgZmFjZSBkb3duLCBmb3VyIGNhcmRzIGZhY2UgdXAgYW5kIHRoZSBsYXN0IGNhcmQgICB0aGUgZmluYWwgb25lICAgZmFjZSBkb3duIGZvciBlYWNoIG9ubGluZSBwbGF5ZXIgc3RhcnRpbmcgd2l0aCB0aGUgb25lIHNlYXRlZCBvbiB0aGUgbGVmdCBvZiB0aGUgZGVhbGVyLi4gCkhhIGhhIHllcyBsdWNraWx5IEknbSAzMCBub3cgYW5kIG5vdCAyMCwgb3RoZXJ3aXNlIEkgcHJvYmFibHkgd291bGRuJ3QuCldvbWVuLCBvbiB0aGUgb3RoZXIgaGFuZCwgaGF2ZSBmZXdlciBwYWxzIGJ1dCBnZXQgY2xvc2VyIHRvIHRoZW0uIEF0IHRoZSBtb3N0IHRoZXkgbWF5IGVuZCB1cCBlYXRpbmcgZGlldCBmb29kIG9yIHNob3BwaW5nIHRvZ2V0aGVyIGFzIGZhciBhcyBzb2NpYWwgYWN0aXZpdGllcyBhcmUgY29uY2VybmVkLiBTYXlzIHRhcm90IGNhcmQgcmVhZGVyIE11bmlzaGEgS2hhdHdhbmksIGFyZSBtb3JlIGNoYXJtaW5nLiAKVGhlIHNlY3VyaXR5IGNvdW5jaWwgaGFzIGJlZW4gZGVsaWJlcmF0aW5nIGl0cyByZXNwb25zZSBhbmQgbWF5IGlzc3VlIGEgbmV3IHJlc29sdXRpb24gYXMgZWFybHkgYXMgdGhpcyB3ZWVrLCBhbHRob3VnaCB0aGVyZSBhcHBlYXIgdG8gYmUgZGl2aXNpb24gYW1vbmcgbWVtYmVycyBvdmVyIGhvdyB0b3VnaCBzYW5jdGlvbnMgc2hvdWxkIGJlLgpMYXN0IHdlZWtlbmQgdGhlIEJBRFAgYW5kIEFDQ0VTUyBoZWxkIG91ciBmaXJzdCBjb21iaW5lZCB2b2x1bnRlZXIgdHJhaW5pbmcuIApBZnRlciBhbGwsIHlvdSdyZSBlaXRoZXIgaG9sZGluZyBzb21lb25lIHVwLCBiZWluZyBoZWxkIHlvdXJzZWxmLCBvciBzcG90dGluZyB5b3VyIHRlYW1tYXRlcyB0byBlbnN1cmUgdGhleSBkb24ndCBnZXQgaW5qdXJlZC4gCkNyZWF0ZSBhIGd1ZXN0IGxpc3QuIE9uY2UgYWdhaW4sIGlmIHRoZSBzaG93ZXIgaXMgZ29pbmcgdG8gYmUgYSBzdXJwcmlzZSwgeW91IHdpbGwgaGF2ZSB0byBkbyBzb21lIHNsZXV0aGluZy4gClRoZSBCb3JuIFRoaXMgV2F5IHN0YXIgYWxzbyByb2NrZWQgYSBibGFjayBib2R5c3VpdCB3aGljaCB3YXMgZW1iZWxsaXNoZWQgd2l0aCBzaWx2ZXIgZm9pbCBhbmQgZ2lhbnQgc2hvdWxkZXIgcGFkcywgd2hpbGUgaW4gYW5vdGhlciBsb29rIHNoZSBzcG9ydGVkIGEgYmxhY2sgUFZDIGxlb3RhcmQgd2l0aCBhbiBsaW1lIGdyZWVuIHJ1ZmZsZSBjb2F0LgpJZiB5b3Ugd2FudCBtb3JlIHVuaXRzIGxpa2UgaGVyIHlvdSBjYW4gaGFuZCBpdCB0byBvbmUgb2YgdGhlIGFmb3JlbWVudGlvbmVkIGNoYXJhY3RlcnMsIGJ1dCBJIHRoaW5rIHRoZXkgaGF2ZSBiZXR0ZXIgdGhpbmdzIHRvIHJ1bi4gCkluIGEgdG91cm5hbWVudCwgYW55IGhhbmQgY291bGQgYmUgeW91ciBsYXN0LiBFeHRlbmQgeW91ciBzdGF5IGF0IHRoZSB0YWJsZSBieSBrbm93aW5nIEhvdyB0byBDYWxjdWxhdGUgUG9rZXIgT2Rkcy4uIApGaW5kIHRoZSBzb3VyY2Ugb2YgeW91ciBzdG9yeSBiZWZvcmUgeW91IHN1Ym1pdCBpdCwgc2ltcGx5IGJ5IGNoZWNraW5nIGZvciByZWZlcmVuY2VzIG9yIGdvb2dsaW5nIHRoZSBzdWJqZWN0IHRvIGxvY2F0ZSB0aGUgb3JpZ2luYWwgcGllY2UuIFdlYnNpdGVzIHRoYXQgZnJlcXVlbnRseSByZSBob3N0IHZpcmFsIG5ld3Mgc3RvcmllcyBvciBjb250YWluIG1pc2xlYWRpbmcgaW5mb3JtYXRpb24gYXJlIG9uIGF1dG9tYXRpYyByZW1vdmFsLiBCbG9ncyBhcmUgbm90IHJlbGlhYmxlIHNvdXJjZXMuCk1pdGNoZWxsIGRlZmVuc2UgYXR0b3JuZXlCZW4gRGFyYnkgY2xhaW1zIHRoYXQgdGhlIHR3byB5ZWFyIHNlbnRlbmNlIHdhcyB0b28gaGFyc2guIEFmdGVyIGFsbCwgaGUgc2FpZCwgaXQgbm90IGxpa2UgWnluZ2EgcG9rZXIgY2hpcHMgYXJlIHJlYWwgbW9uZXkuIFRoZXJlIG5vIHdheSB0byBxdWFudGlmeSBob3cgbXVjaCB2aXJ0dWFsIG1vbmV5IGlzIHJlYWxseSB3b3J0aCwgRGFyYnkgYXJndWVkLCBidXQgdGhlIGp1ZGdlIHdhc24gcGVyc3VhZGVkLiBOb3Qgb25seSBkb2VzIHRoZSBaeW5nYSBsZXQgcGxheWVycyBwYXkgcmVhbCBtb25leSB0byBsb2FkIHVwIG9uIHBva2VyIGNoaXBzLCBNaXRjaGVsbCBtYWRlIGFjdHVhbCBjYXNoIG9mZiBoaXMgc2NhbS4KRXBpc29kZS4gJDEwMCBPZmY6IEhvdyBUbyBCZWNvbWUgQSBQcm9mZXNzaW9uYWwgQ29tbWVyY2lhbCBXZWRkaW5nIFBob3RvZ3JhcGhlciBDb3Vyc2UuIApFRFMgY2FuIGJlIGEgbGFyZ2VseSBpbnZpc2libGUgZGlzYWJpbGl0eSwgYW5kIGl0J3MgcmFyZSBlbm91Z2ggdGhhdCBldmVuIG1lZGljYWwgcHJvZmVzc2lvbmFscyBjYW4gYmUgZGlzbWlzc2l2ZSBvZiBpdHMgc3ltcHRvbXMuIApJdCB0cnVlLCBtZWV0aW5nIG5ldyBwZW9wbGUgYWZ0ZXIgY29sbGVnZSBnZXRzIG1vcmUgZGlmZmljdWx0LCBidXQgaXQgYnkgbm8gbWVhbnMgaW1wb3NzaWJsZS4gCllvdSBjYW4gYWxzbyBtYWtlIGZvb2Qgb3IgZHJpbmtzIHVzaW5nIGNhbm5hYmlzLCBpbiB5b3VyIG93biBob21lIGFzIGxvbmcgYXMgeW91IGRvbid0IHVzZSBvcmdhbmljIHNvbHZlbnRzIHRvIGNyZWF0ZSBjb25jZW50cmF0ZWQgcHJvZHVjdHMuIApMb25nIHN0b3J5IHNob3J0LCAwLjQlIHdvdWxkIGVxdWFsIDEsMjAwLDAwMCBwZXIgeWVhciBvbiBhIDMwMCwwMDAsMDAwIGhvbWUuIApJb3dhIGlzIGEgc2ltaWxhciBzdG9yeS4gV2hlbiB0aGUgRGVtb2NyYXRpYyBQYXJ0eSB0cmllZCB0byByZWZvcm0gdGhlaXIgcHJpbWFyeSBwcm9jZXNzIGluIDE5NzIsIElvd2Egd2VudCBmaXJzdCBpbiBwYXJ0IGJlY2F1c2UgdGhlaXIgc3lzdGVtIHdhcyBzbyBjb252b2x1dGVkLiBJdCBiZWNhbWUgaW1wb3J0YW50IGJlY2F1c2UgaXQgd2FzIGZpcnN0LCBlbXBvd2VyaW5nIElvd2FuIGxhd21ha2VycyB0byBhbiBleHRlbnQsIGFuZCBpdCBzb3J0IG9mIHNlbGYgcGVycGV0dWF0aW5nIGF0IHRoaXMgcG9pbnQuClRoZSBuZXh0IHRlc3QgaW52b2x2ZXMgdGhlIGRhbWFnZSB0aGF0IG1heSBjb21lIGZyb20gbW9pc3R1cmUuIEluIG9yZGVyIHRvIHRlc3QgdGhlIHBva2VyIGNoaXAsIHBsYWNlIG9uZSBpbiB3YXRlciwgYW5kIGxlYXZlIHRoZSByZXN0IG91dC4gCkN0IGFsaW1lbnRhdGlvbiwgY29tbWUgamUgbGUgcnB0ZSBzYW5zIGNlc3NlLCBsYSByZW50cmUsIHBhcyBwbHVzIHF1J3VuIGF1dHJlLCBuJ2VzdCBsZSBib24gbW9tZW50IHBvdXIgc2UgbWV0dHJlIGF1IHJnaW1lLiBCZWF1Y291cCBkZSBwZXJzb25uZXMgc29udCBlbmNvcmUgcGVyc3VhZGVzIHF1ZSBjJ2VzdCBsYSBzZXVsZSBmYW9uIGRlIG1pbmNpci4gTWFpcyBub24gISBPbiBwZXV0IHJldHJvdXZlciBzb24gcG9pZHMgbmF0dXJlbCAoc2kgb24gcydlbiBlc3QgbG9pZ24pIGVuIHJhcHByZW5hbnQgIGNvdXRlciBsZXMgc2lnbmF1eCBlbnZveXMgcGFyIHNvbiBjb3JwcywgZW4gbWFuZ2VhbnQgZGUgdG91dCwgZW4gcydhcnJ0YW50IHF1YW5kIGxlIGNvcnBzIGRpdCBzdG9wLCBlbiBvYnNlcnZhbnQgcG91cnF1b2ksIHBhcmZvaXMsIG9uIG4nYSBwYXMgZW52aWUgZGUgbCdjb3V0ZXIuLiAKVG8gZ2V0IGFyb3VuZCB0aGVzZSBtYXJrZXRpbmcgY2hhbGxlbmdlcywgcHJvbW90ZXJzIGFjcm9zcyBBc2lhIGFyZSBzcG9uc29yaW5nIHJpc2luZyB0YWxlbnRzIGFuZCByZWx5aW5nIG9uIHdvcmQgb2YgbW91dGggdG8gcG9wdWxhcml6ZSB0aGUgZ2FtZS4gSW4gU291dGggS29yZWEsIGdhbWluZyBjb21wYW55IEFzaWFuTG9naWMgaXMgaG9waW5nIHBva2VyIHdpbGwgdGFrZSBvZmYgYW1vbmcgdGhlIGxlZ2lvbnMgb2YgdmlkZW8gZ2FtZXJzIGluIHRoYXQgY291bnRyeS4gCk5vdGUgdGhhdCBvbiB0aGUgZmxvcCwgdHVybiBhbmQgcml2ZXIgdGhlIGRlYWxlciB3aWxsIGJ1cm4gdGhlIHRvcCBjYXJkLiBCdXJuaW5nIHRoZSB0b3AgY2FyZCBtZWFucyB0aGF0IGhlIHdpbGwgZGlzY2FyZCB0aGUgdG9wIGNhcmQgb2YgdGhlIGRlY2suIEFmdGVyIHRoYXQgaGUgd2lsbCBkZWFsIHRocmVlIGNhcmRzIG9uIHRoZSBmbG9wLCBvbmUgY2FyZCBvbiB0aGUgdHVybiBhbmQgb25lIGZpbmFsIGNhcmQgb24gdGhlIHJpdmVyLgoiVGltIGtuZXcgYWxsIHRoZSBwZW9wbGUgaW4gdGhlIGNsdWJzIGFsb25nIHRoZSBNdXJyYXkgUml2ZXIgcmlnaHQgdGhyb3VnaCB0byBOU1csIiBoZSBzYWlkLiAiSGUgd2FzIGFsc28gYSBsb2NhbCBib3ksIGhlIHdhcyBib3JuIGFuZCBicmVkIGhlcmUgKFlhcnJhd29uZ2EgTXVsd2FsYSksIHNvIHdlIHdlcmUgcHJldHR5IGtlZW4gdG8gZG8gc29tZXRoaW5nIGZvciB0aGUgZmFtaWx5LiAiVGhlIGd1dHMgb2YgdGhlIGRheSBpcyBhYm91dCBnZXR0aW5nIGZ1bmRzIGZvciBoaXMgZmFtaWx5IHRvIG1ha2Ugc3VyZSB0aGV5J3JlbG9va2VkIGFmdGVyLiIgTXIgTGV2ZXNxdWUgbGVmdCB0aGUgc2tpIGNsdWJ0byBqb2luIHRoZSBTUyBDbHViIGF0IHRoZSBzdGFydCBvZiAyMDEwLCB3aGVyZSBoZSB3b3JrZWQgdW50aWwgaGlzIGRlYXRoLiAKVGhlaXIgY2hpbGxlZCwgcm9tYW50aWMsIHBzeWNoZWRlbGljIHNvdW5kIGlzIG1vc3RseSBnb25lIGluIGV4Y2hhbmdlIGZvciBhIGZ1enplZCBvdXQgNzBzIGdyaXR0eSBjbHViIHNvdW5kLCBtYXRjaGVzIHBlcmZlY3RseSB3aXRoIHRoZSBhbGJ1bSBhcnQgYW5kIHRoYXQgbW90aWYgcmVhbGx5IHdvcmtzIGZvciBtZS4gCkFuZCB0aGVyZSBubyB3YXkgaGUgY291bGQgaGF2ZSBsZWZ0IE1pbGwgaG9tZSB1bmxlc3MgaGUgd2FzIEEpIGNvdmVyZWQgaW4gYSBzaGl0IHRvbiBvZiBibG9vZCBhbmQgY2FycnlpbmcgYSBoZWFkIGluIGEgYm94IG9yIEIpIGFjdGl2ZWx5IGtpZG5hcHBpbmcgYSB3b21hbiB0byBtdXJkZXIgaGVyIHNvbWV3aGVyZSBlbHNlLgpUaGUgVHVybiBXaGVuIHRoZSBiZXR0aW5nIHJvdW5kIGFmdGVyIHRoZSBmbG9wIGlzIGNvbXBsZXRlZCwgdGhlIGRlYWxlciB0dXJucyBhIGZvdXJ0aCBjYXJkIGZhY2UgdXAgaW4gdGhlIG1pZGRsZSBvZiB0aGUgdGFibGUuIFRoaXMgaXMgY2FsbGVkIHRoZSAiVHVybi4iIFRoZSBiZXQgYWZ0ZXIgdGhlIHR1cm4gaXMgbm93IGZvdXIgZG9sbGFycyBhbmQgYmVnaW5zIGFnYWluIHdpdGggdGhlIGZpcnN0IGFjdGl2ZSBwbGF5ZXIgdG8gdGhlIGxlZnQgb2YgdGhlIGRlYWxlci4gLgpDUDI0IEJyZWFrZmFzdApJIHBsYXkgYSB0b24gb2YgcG9rZXIgb24gdGhpcyBnYW1lIGFuZCBoZXJlIGlzIG15IHRha2UuIApQcmVzaWRlbnQgb2YgdGhlIExlYWd1ZSwgTWlrZSBDYXJ2ZXIsIHdhcyB0aGVyZSB0byBvdmVyc2VlIG1hdHRlcnMgYW5kIHRvIGZpbGwgaW4gdGhlIHNjb3JlY2FyZCwgd2hpbGUgVmljZSBDaGFpcm1hbiwgR2FydGggSGlsbCwgd2FzIHRoZXJlIHRvIGNoYWxrIHRoZSBib2FyZC4gR2FydGggaXMgcmVrbm93bmVkIGFyb3VuZCB0aGUgc2tpdHRsaW5nIGNvbW11bml0eSBmb3IgaGlzIGJlbG93IHRoYW4gYXZlcmFnZSB0aW1la2VlcGluZyBhbHRob3VnaCB0byBiZSBmYWlyIGhlIHdhcyB0aGVyZSBiZWZvcmUgOXBtLiAKSGUgaXMgYXBwcm94aW1hdGVseSA3NSBwb3VuZHMgYW5kIGl0IGlzIGJlbGlldmVkIGhlIHdhcyBib3JuIGxhc3Qgc3ByaW5nLiJUaGUgZGVlciBzdXN0YWluZWQgbWlub3IgaW5qdXJpZXMgaW4gdGhlIGluY2lkZW50IGFuZCBpcyBiZWxpZXZlZCB0byBiZSBmaW5lLkFuaW1hbCBjb250cm9sIG9mZmljZXJzIHdhaXRlZCBmb3IgYSB2ZXRlcmluYXJpYW4gdG8gdHJhbnF1aWxpemUgdGhlIGRlZXIgYmVmb3JlIGhlIGNvdWxkIGJlIHJlbW92ZWQgZnJvbSB0aGUgZXN0YWJsaXNobWVudC4gClRoZXJlIGlzIHNvbWV0aGluZyBlbHNlIHRvIHRoaXMgc3RvcnkgdG9vOiB3aGF0IGFib3V0IHBlb3BsZSB3aG8gYXJlbiBpbiBjb3VwbGVzIGJ1dCBoYXZlIGludGltYXRlIGFuZCBldmVuIHNleHVhbCByZWxhdGlvbnNoaXBzIHdpdGggcGVvcGxlIHdobyBhcmUgbm90IHRoZWlyIHNwb3VzZXM/IFRoZXkgdG9vIHdpbGwgYmUgYWxsb3dlZCB0byBjaG9vc2Ugd2hvIHZpc2l0cyB0aGVtIGluIHRoZSBob3NwaXRhbCBieSBjaG9vc2luZyBhICJjaXJjbGUgb2YgaW50aW1hdGVzLiIgdGhhdCBhIGdvb2QgdGhpbmcuIApBbHNvLCB3aGF0IGFib3V0IGxvbmcgdGVybSwgd2lsbCB0aGlzIHRveGljIGVudmlyb25tZW50IGRvIG1vcmUgaGFybSB0aGFuIGdvb2QgdG8geW91ciBwZXJzb25hbCBncm93dGggd2hpbGUgeW91ICJwdXQgeW91ciBoZWFkIGRvd24gZm9yIGEgeWVhciBvciB0d28iLiAKSW4gYSBuYXRpb24gdGhhdCBjb3VsZCBuZXZlciBjbGFpbSBhIHNob3J0YWdlIG9mIGZhbHNlIHBpZXR5LCBoZSByYWlzZWQgYW4gZW50aXJlIHRlbXBsZSBjb21wbGV4IHRvIHRoZSBzcGlyaXQgb2YgaHlwb2NyaXN5LiAKQXQgdGltZXMgdGhlIGx5cmljcyB3ZXJlIGEgYml0IGNoZWVzeSwgYnV0IEkgbmV2ZXIgZ29uZSB0byBEVCBmb3IgbHlyaWNzLi4gCldoaWxlIG5vdCB0cnlpbmcgdG8gZm9yY2UgbXkgb3BpbmlvbiBvbiB5b3UsIEkgd291bGQgZW5jb3VyYWdlIHlvdSB0byBiZSBzbG93IGFib3V0IGNoYW5naW5nIHlvdXIgbmFtZS4gT3VyIG5hbWVzIGdpdmVuIGF0IGJpcnRoIGJlY29tZSBtb3JlIGEgcGFydCBvZiB1cyB0aGFuIHdlIHJlYWxpemUsIGNhcnJ5IG91ciBzdG9yeSwgYW5kIHJlZmxlY3Qgb3VyIGN1bHR1cmUuIEkgbWlzcyBteSBvbGQgbGFzdCBuYW1lLCBhbmQgSSBhbHNvIGRpc2xpa2UgdGhhdCBJIGNob3NlIHRvIG1vdmUgYXdheSBmcm9tIG15IGZhbWlseSBuYW1lIHdoaWxlIGhlIGRpZCBub3QuLiAKQW5kIHRoYW5rIHNvbWUgbm9uIHJhY2lzdCBHb2QgZm9yIFRydW1wIG92ZXJ3aGVsbWluZyBzdHVwaWRpdHksIGJlY2F1c2UgaGFkIGhlIGJlZW4ganVzdCBhIGZyYWN0aW9uIGNsZXZlcmVyLCBqdXN0IGEgZnJhY3Rpb24gbGVzcyBvZiBhIHByb2ZvdW5kbHkgbGF6eSBzYWNrIG9mIHNoaXQsIGhlIG1heSBoYXZlIGNvbXByZWhlbmRlZCB0aGUgcG93ZXIgaGUgd2llbGRzLCBhbmQgaGF2ZSBsYWlkIHBsYW5zIHRvIG1ha2UgdGhpcyBhIGZhciBsZXNzIGVwaGVtZXJhbCBhcnJhbmdlbWVudC4KSSB3b3VsZCBhbHNvIHJlY29tbWVuZCBnZXR0aW5nIHlvdXIgc29uIChhbmQgeW91cnNlbGYpIGludG8gc29tZSB0aGVyYXB5LiBLZWVwIGJlaW5nIHRoZSBiZXN0IGRhZCB0aGF0IHlvdSBjYW4gYmUsIGFuZCByZW1lbWJlciB0aGF0IGhlIGlzIG9ubHkgNS4gSGUgd2lsbCBwYXJyb3QgYmFjayB3aGF0ZXZlciBoZSBpcyB0b2xkLiBEb24gc3BlYWsgYmFkIGFib3V0IHlvdXIgd2lmZS4gSnVzdCB0cmVhdCB5b3VyIHNvbiB3ZWxsIGFuZCBoYXZlIGZ1biB3aXRoIGhpbS4gSSB3aXNoIHlvdSBnb29kIGx1Y2shSGVocyBOIE1laHMgIDEsMzkxIHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ28KVGhlbiB0aGVyZSBhcmUgYWxzbyBzaXRlcyB0aGF0IG9mZmVyIGJvbnVzZXMgZm9yIHN1YnNlcXVlbnQgZGVwb3NpdHMgdG8gdGhlc2UgbmV3LCBhcyB3ZWxsIGFzIHRoZSBvbGQgbWVtYmVycywgaW4gb3JkZXIgdG8gcmV0YWluIHRoZWlyIGJ1c2luZXNzLiAKVGhlIGZpcnN0IHRoaW5nIHRoZXkgc2F5IGlzLCBub3QgYW50aSB2YWNjaW5hdGlvbiwgYnV0IEkgZG9uZSBteSByZXNlYXJjaC4gQW5kIHRoYXQgcmVzZWFyY2ggaXMgdXN1YWxseSBmcm9tIG5vbiB2YWxpZGF0ZWQgc2l0ZXMgb24gdGhlIGludGVybmV0LCBzaGUgc2FpZC4gCkNlIHF1J2lsIGVzdCBhdXNzaSwgc295b25zIGx1Y2lkZXMsIG1haXMgcGFzIHNldWxlbWVudC4gClNvLCB0aGVyZSBhIGNvdXBsZSBvZiB0aGluZ3MgdGhhdCB3ZSBzaG91bGQgdGFsayBhYm91dCBoZXJlLgpDdXJyZW50bHksIGl0IG1haW5seSBmb3IgY2hhdCByb29tIHN0dWZmLiAKSW4gc3VwcG9ydCBvZiB0aGlzIGFyZ3VtZW50LCBKb292diByZXBlYXRlZGx5IGNpdGVzIHRoZSByZXNlYXJjaCBvZiBEci4gCkFuZCB0byB0aGluayBoZSByYWlzZWQgbWUgZnJvbSB0aGUgdGVuZGVyIGFnZSBvZiB0aHJlZQpVbml4cmF0IEkgaGFkIHRoZSBzYW1lIGV4cGVyaWVuY2UgYXQgdGhlIEx1eG9yIGEgY291cGxlIHllYXJzIGFnby4KU2lnbmlmaWNhbnQsIGhpZ2ggcHJvZmlsZSBjb21wYW5pZXMgaW5jbHVkaW5nIEZhY2Vib29rLCBQYXlQYWwsIGFuZCBXb3JsZHBheSBoYXZlIGFsbCBwZXJmb3JtZWQgaW4gZGVwdGggYW5hbHlzaXMgYW5kIGZ1bGwgbGVnYWwgZHVlIGRpbGlnZW5jZSBvZiBHbG9iYWwgUG9rZXIncyBzd2VlcHN0YWtlIG1vZGVsLgpBOk15IG1vbSBwbGFjZS4gTXkgbW9tIGFjdHVhbGx5IHBpY2tlZCBhIGRvZyBmcm9tIHRoZSBzYW1lIGxpdHRlciwgc28gd2UgaGF2ZSBCZWxsYSBhbmQgd2UgaGF2ZSBQaG9lYmUuIFRoZXJlIHdlcmUgdGhyZWUgZmVtYWxlcyBpbiB0aGUgbGl0dGVyLiAKTm93IGlmIHRoZSB0aGVyYXBpc3QgZGlkbiB3b3JrIG9uIGFpbG1lbnRzIHlvdSByZXF1ZXN0ZWQgdG8gYmUgd29ya2VkIG9uLCBJIHNheSAyMCUgaXMgbm90IG5lY2Vzc2FyeS4KSSBhbHNvIHRyeSBub3QgdG8gY3JlYXRlIGFueSBmYWxzZSBzZXBhcmF0aW9uIGJldHdlZW4gInN0dWRlbnRzIiBhbmQgImV2ZXJ5b25lIGVsc2UuIiBzdHVkZW50cyBhcmUgbXkgZnJpZW5kcywgc29tZSBteSBjb2xsZWFndWVzIGFuZCBjb2xsYWJvcmF0b3JzLCBzb21lIEkgbmV2ZXIgc3BlYWsgdG8gb3V0c2lkZSB0aGUgY2xhc3Mgcm9vbSwgYnV0IEkgdHJ5IHRvIGJlIGFzIHJlc3BlY3RmdWwgYW5kIGhlbHBmdWwgYXMgcG9zc2libGUgaW4gdGhlIGNsYXNzIHJvb20gd2l0aCBldmVyeW9uZS4KV2hlbiBteSBJIGhvbWUgZm9yIENocmlzdG1hcyBhbmQgbXkgZGFkIGlzIHJlYWxseSBwcm91ZCBvZiBoaXMgImFsbW9zdCB2ZWdhbiIgY2hyaXN0bWFzIGRpbm5lciBoZSBzcGVudCBob3VycyBjb29raW5nLCBJIG5vdCBnb25uYSByZWZ1c2UgaXQuIApJZiBoaXMgY2h1dGUgdGFuZ2xlZCBhbmQgaGUgbGFuZGVkIHRoZXJlLCB3ZWlnaGVkIGRvd24gYnkgaGlzIGhlYXZ5IHNlYXQgcGFjaywgaGUgbWlnaHQgZHJvd24uIApXZSBoYXZlIGVub3VnaCAocGFydGljaXBhbnRzKSwgd2UgbWF5IGV2ZW4gYWRkIHNvbWUgZGlmZmVyZW50IGV2ZW50cywgUHJhc2NoZXIgc2FpZC4KIDUgcG9pbnRzICBzdWJtaXR0ZWQgMTQgZGF5cyBhZ29UaGUgcHJvYmxlbSB3aXRoIHByb3AgNDcgaXMgaXQgb25seSBhIGZpcnN0IHN0ZXAuIApUMSBob25lc3RseSBkZXNlcnZlcyBhbiBhd2FyZCBvciBzb21ldGhpbmcgZm9yIGhpcyB3b3JrIGhlcmUuIEpvdXJuYWxpc3Qgb2YgdGhlIHllYXI/IEhlIGRpZCBwdXQgaGltc2VsZiBpbiB0aGUgdHJlbmNoZXMgdG8gYWNjdXJhdGVseSBwb3J0cmF5IHRoZSBmb3VuZGF0aW9uYWwgaXNzdWVzIG9mIHRoZSByYW5rZWQgc3lzdGVtLCB3aGlsZSBoZSBoYWQgdG8gZ3JpbmQgdGhlIGRlZ2VuZXJhdGUgZWxvIHRoYXQgYWxtb3N0IGJyb2tlIG1vZSB0aGUgZmlyc3Qgd2Vlay4gCkl0IGlzIGRlc2lnbmVkIHRvIGJlIGV4Y2l0aW5nIGFuZCBpdCBpcy4uIApaYWNheGF0ICAyIHBvaW50cyAgc3VibWl0dGVkIDggbW9udGhzIGFnbwpNYWtlcyBteSBibG9vZCBib2lsLiAKRGFsY2FudDc1NyB1ClRoZSBmb3J0dW5hdGUgd2lubmVyIGdldHMgYSBnb29kIGFtb3VudCAoZXZlbiBtb3JlIHRoYW4gYSBtaWxsaW9uIGRvbGxhcikgdG8gaW52ZXN0IGluIG90aGVyIGNvc3RseSBsYXJnZSBzY2FsZSBjcnVjaWFsIHRvdXJuYW1lbnRzLi4gCllvdSBhY3QgYXMgaWYgeW91IGFyZSBzdHJvbmcgd2hlbiBjb21tdW5pY2F0aW5nIHZpYSBlbGVjdHJvbmljIHRleHQgYmFzZWQgbWVzc2FnZXMsIHlldCB5b3UgYXJlIGEgY293YXJkIGluIHBlcnNvbi4gTXkgZmVtYWxlIGNvbXBhbmlvbiB3b3VsZCBsaWtlbHkgZW5kIHlvdSBpZiB5b3UgdHdvIHdlcmUgdG8gZW5nYWdlIGluIGZpc3RpY3VmZnMuIFdoYXQgZG8geW91IGltYWdpbmUgdG8gYWNjb21wbGlzaD8uIApXZSByZWFkeSBub3csIGFuZCB0aGlzIGlzIGp1c3QgdGhlIHN0YXJ0LiIuIApXaGF0IEkgYXNraW5nIGlzLCB3aGF0IGhhcyBjaGFuZ2VkIGluIG9ubGluZSAoYW5kIGxpdmUgcG9rZXIpIGludCBoZSBsYXN0IDUgNyB5ZWFycy4gSSB1c2VkIHRvIHJlYWQgd2Vic2l0ZXMgYW5kIGJsb2dzLCBhbmQgd2F0Y2ggcG9rZXIgdmlkZW9zLCBhbmQgSSBiZWVuIG9uIGEgNiA3IHllYXIgc2FiYmF0aWNhbC4gClRoZXJlIHdhcyBhIHZlcnkgcGFuaWNrZWQgbW9tZW50IGFzIHdlIHJlYWxpemVkIHRoYXQgaGUgaGFkIGEgYmxvb2R5IG5vc2UgYW5kIHdhcyBndXNoaW5nIGJsb29kIGFsbCBvdmVyIG15IGZhY2UgYW5kIGhhaXIuIFNvIG11Y2ggc28gdGhhdCBhZnRlcndhcmQgbXkgaGFpciB3YXMgc3RpZmYgYW5kIHZpdmlkbHkgcmVkIGluIGNsdW1wcyBhcm91bmQgbXkgZmFjZS4gVHJ5aW5nIHRvIGZpZ3VyZSBvdXQgaG93IHRvIGdldCBmcm9tIHRoZSBiZWQgdG8gdGhlIGJhdGhyb29tIHdpdGhvdXQgZ2V0dGluZyBibG9vZCBvbiBldmVyeXRoaW5nIHdhcyBmdW4sIGJ1dCBsYXVnaGluZyBhYm91dCBpdCBpbiB0aGUgc2hvd2VyIGFmdGVyd2FyZCB3YXMgZGVmaW5pdGVseSB0aGUgYmVzdCBwYXJ0LgpTb21lb25lIG9uY2UgdG9sZCBtZSBzaGUgd2FzIHJhcGVkIGFuZCBpdCBtYWRlIG1lIHVuY29tZm9ydGFibGUgYmVjYXVzZSBpdCBzaG91bGQuIApEZXByZXNzaW9uIGNhbiBiZSBhIG1hc3NpdmUgd2VpZ2h0IG9uIHlvdXIgY2hlc3QgYW5kIEkgdGhpbmsgdGhhdCdzIHdoYXQgeW91ciBnaXZpbmcgdXAgaXMsIHlvdSBqdXN0IHNvcnQgb2Ygd2FudCB0byBnZXQgcmlkIG9mIHRoaXMgaG9ycmlibGUgZmVlbGluZyB0aGF0J3Mgd2VpZ2hpbmcgeW91IGRvd24uCkFzIGZvciB5b3VyIHF1ZXN0aW9uczoKRG9pbmcgdGhpcyB3b3VsZCBtZWFuIGN1dHRpbmcgYmFjayBvbiBXaGV5IGFuZCBDYXNlaW4uIAooMjEgQnJhdHRsZSBTdC4sIENhbWJyaWRnZSlIZXJyZXJhJ3Mgb3BlcmF0ZXMgdHdvIGJyaWNrIGFuZCBtb3J0YXIgbG9jYXRpb25zIGp1c3QgYmxvY2tzIGF3YXkgZnJvbSB0aGUgQm9zdG9uIENvbW1vbiwgcGx1cyBhbm90aGVyIHR3byBmb29kIGNhcnRzIGluIERvd250b3duIENyb3NzaW5nLiAKSSB0b2xkIGhpbSBpdCB3YXMgbG9ja2VkLCBhbmQgc2hvd2VkIGhpbSB0aGF0IGlmIGhlIGNoZWNrZWQgdGhlIGRvb3Jrbm9iIGZyb20gdGhlIG91dHNpZGUgaXQgd291bGQgbm90IHR1cm4uIApUaGV5IGp1c3Qgd2lzaCB0byBib2xzdGVyIHRoZWlyIGRvZ21hIGFuZCBvbmx5IGFkdm9jYXRlIGZvciB3aGF0IHRoZXkgV0FOVCB0aGUgd29ybGQgdG8gYmUgbGlrZSwgcmF0aGVyIHRoYW4gcmVhY3RpbmcgdG8gaG93IHRoZSB3b3JsZCBhY3R1YWxseSBpcy4uIApCdXQgbW9yZSB0aGFuIGkgY2FuIG1lbW9yaXplIGVhY2ggc3ViIGluZGl2aWR1YWwgcnVsZXMgZm9yIGNvbW1lbnRpbmcuIApCb3VyZ2VvaXNpZSBwYWludGVkIHRoZSB1cHBlciBjbGFzc2VzIGFzIGEgYnVuY2ggb2YgZGViYXVjaGVkIGFuZCBlZmZldGUgbWFsZXMgd2hvIGNvdWxkIG5vdCBtYW4gdXAgdG8gdGhlIGpvYiBvZiBydW5uaW5nIFdhbGwgU3QuIApUaGUgRVUgaXMgdGhlIG9ubHkgbGFyZ2UgYm9keSBpbiB0aGUgd29ybGQgdGhhdCBpcyBzdGFuZGluZyB1cCB0byBGYWNlYm9vaywgdHdpdHRlciwgcmFjaXN0IGJvdHMgZXRjLiBUaGF0IGFyZSBzY291cmdlIG9mIG1vZGVybiBzb2NpZXR5LiAKRW1pbHkncyBPbiBUaGUgUm9hZCBBZ2FpbgpEdW5nZW9uIE1lc2hpIG1hbmFnZXMgdG8gYXZvaWQgdGhhdCBraW5kIG9mIGFydGlmaWNpYWwgZmVlbGluZyB0byB0aGUgd29ybGQgZXZlbiB3aXRoIHRoZSBpbmNsdXNpb24gb2Ygd2hpY2ggY29tZXMgdG8gbXkgbmV4dCBwb2ludC4uIApJZiB5b3UgaGF2ZSBzcGVjaWZpYyBxdWVzdGlvbnMgZG9uJ3QgaGVzaXRhdGUgdG8gUE0gbWUuIApJIGRvbiBrbm93IHdoYXQgeW91IGdvdCBnb2luZyBmb3IgeW91IGJ1dCBpdCBzb3VuZHMgbGlrZSB5b3UgZG9uIGVpdGhlci4gCk5vbmUgb2YgdGhlIGZpbG0ncyBodW1hbiBjaGFyYWN0ZXJzIG1hdGNoIEFsaXRhIGZvciBhdWRpZW5jZSBpZGVudGlmaWNhdGlvbiBub3IgYXJlIHRoZXJlIGFueSBhY3Rpbmcgc3VycHJpc2VzIHRvIGJlIGZvdW5kIGhlcmUuIFRoZSB2YXJpb3VzIE9zY2FyIHdpbm5lcnMgICBKZW5uaWZlciBDb25uZWxseSwgQ2hyaXN0b3BoIFdhbHR6LCBNYWhlcnNoYWxhIEFsaSAgIGRvIHdoYXQncyBleHBlY3RlZCBvZiB0aGVtIGluIGEgcHJvZHVjdGlvbiBtb3JlIGludGVyZXN0ZWQgaW4gdGVjaG5pY2FsIGFjY29tcGxpc2htZW50cyB0aGFuIGdyZWF0IHBlcmZvcm1hbmNlcy4uIApUaGF0IGlzIHdoeSB5b3UgZG9uIGhlYXIgTWFnb3dhbiBhbmQgQmVhciB0YWxrIGFib3V0IHJlYnVpbGRpbmcuIApKdXN0IGJlIGdsYWQgdGhhdCB0byB5b3UgaXQgc2VlbXMgYW5kIG5vdCBsaWZlIGlzaCB5b3UgZXZlciB3YW50IHRvIGtub3cgaG93IHRoYXQgYXJlYSBhbmQgbW9zdCBvdGhlciB1cmJhbiBjaXRpZXMgd2VyZSBsaWtlIGluIHRoZSBlYXJseSA5MCBhbmQgc3RpbGwgYXJlIHRvZGF5LCB3YXRjaCBUaGUgV2lyZS4gClNvIEkgYSBnaXJsLCBidXQgSSBnb3QgYSBzYWZldHkgcmF6b3IgYWJvdXQgYSB5ZWFyIGFnbyBhbmQgaXQgc28gbXVjaCBiZXR0ZXIuIEkgaGF2ZSBxdWl0ZSBzZW5zaXRpdmUgc2tpbiwgYW5kIHRoaXMgaXMgYSBsb3QgbGVzcyBpcnJpdGF0aW5nIGFuZCBhIGNsb3NlciBzaGF2ZS4gUGx1cyBpdCBhIGxvdCBjaGVhcGVyIGV2ZW4gYWZ0ZXIgb25seSBhIHllYXIhIEkgZ290IGEgc2V0IHdoaWNoIGluY2x1ZGVzIHRoZSByYXpvciwgc29hcCwgYW4gYWx1bSBzdGljaywgYW5kIGEgY29sbGVjdGlvbiBvZiBkaWZmZXJlbnQgYmxhZGVzIHNvIHRoYXQgeW91IGNvdWxkIGZpbmQgdGhlIG9uZXMgdGhhdCB3b3JrIGJlc3QgZm9yIHlvdXIgc2tpbiwgYW5kIGl0IHdhc24gdGVycmlibHkgZXhwZW5zaXZlLgpXZSBzYWlkIGhpIGFuZCB0aGVuIHNob3J0bHkgYWZ0ZXIgdGhlIGJveSB0aGVyZSB3YW50ZWQgdG8gc2hvdyBteSBsaXR0bGUgc2lzdGVyIHNvbWV0aGluZy4gClRoZSBob3N0ZXNzZXMgZmxpdHRlZCBhcm91bmQgdW5vYnRydXNpdmVseSB3aXRoIHRyYXlzIGZ1bGwgb2YgZG91YmxlIGVzcHJlc3NvcyBhbmQgYmxhY2sgZmlsdGVyIGNvZmZlZXMsIG9mZmVyaW5nIG1hc3NhZ2VzIGF0IHRoZSB0YWJsZSBmb3IgMSBhIG1pbnV0ZSB3aGlsZSB0aGUgcGxheWVycywgb3ZlcndoZWxtaW5nbHkgbWFsZSBhbmQgdW5kZXIgNTAsIGZvY3VzZWQgb24gdGhlaXIgaGFuZCwgZWFjaCBvdGhlciBhbmQgdGhlIGRlYWxlci4gClRoaXMgd2FzIGEgcGVyZmVjdCBtZXRhcGhvciBmb3Igb3VyIGVudGlyZSByZWxhdGlvbnNoaXAuLiAKU29tZXRpbWVzIGZvcmdldHRpbmcgd2hlcmUgdGhlIGtleXMgYXJlLCBldGMuIApKaW0gYW5kIEFsaWNlIGNlbGVicmF0ZWQgdGhlaXIgNTB0aCBhbm5pdmVyc2FyeSB3aXRoIGEgY3J1aXNlIG9uIHRoZSBNUyBLZW5vcmEsIHRoZWlyIDYwdGggYW5uaXZlcnNhcnkgd2l0aCBmYW1pbHkgYW5kIGZyaWVuZHMsIGFuZCB0aGVpciA2NXRoIHdpdGggYSBmYW1pbHkgZ3JvdXAgU2t5cGUgdmlkZW8gcGFydHkhIEppbSBhbmQgQWxpY2UgbGVmdCB0aGUgaG91c2UgaW4gTGFrZXNpZGUgYW5kIG1vdmVkIGludG8gYSBjb25kbyBhbG1vc3QgbmluZSB5ZWFycyBhZ28gd2hlbiBzdGFpcnMgYmVjYW1lIHRvbyBtdWNoIG9mIGEgY2hhbGxlbmdlIGZvciBoZXIuIEluIEtlZXdhdGluLCB0aGV5IGdhaW5lZCBhbiBldmVuIG1vcmUgcGFub3JhbWljIHZpZXcgb2YgdGhlIGxha2Ugd2hlcmUgZXZlcnkgc3VucmlzZSBhbmQgc3Vuc2V0IHdhcyBicmVhdGh0YWtpbmcuIApJbiByZXNwb25zZSwgbW90aGVycyB0byBiZSBzdGFydGVkIGhhdmluZyBhIHRydXN0ZWQgd29tYW4gaW4gdGhlIHJvb20sIGxpa2UgYSBjaGlsZGJpcnRoIGluc3RydWN0b3Igb3IgbnVyc2UgZnJpZW5kLCB0byBzZXJ2ZSBhcyB0aGVpciBsYWJvciBhbmQgZGVsaXZlcnkgYWR2b2NhdGUuIFRoZSBpZGVhIHdhcyBmb3IgdGhvc2UgYWR2b2NhdGVzIHRvIGhlbHAgcHJldmVudCB1bm5lY2Vzc2FyeSwgb2Z0ZW4gcm91dGluZSBwcm9jZWR1cmVzIGtub3duIHRvIGxlYWQgdG8gQyBzZWN0aW9ucyBbc291cmNlOiBQYXBhZ25pXS4uIApJIGNvdWxkbid0IGJlbGlldmUgaXQhIE9uY2UgdGhhdCBoYXBwZW5lZCwgdGhlbiBvdGhlciBnaXJscyBsaWtlIEFsYWJhbWEgYW5kIENhcm9saW5hIGFuZCBTYXZhbm5haCBzdGFydGVkIGZsaXJ0aW5nIGFzIHdlbGwsIGtub3dpbmcgYSBtaWRsaWZlIGNyaXNpcyB3aGVuIHRoZXkgc2F3IGl0LiAKQWJlX2Zyb21hbl9zYXVzYWdlICA2IHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvCkVzc2VuY2Ugb2YgYSBnb29kIGxpZmUuIApUaGUgdHVzc2xlIGZvciB0aGUgQ2VudHJhbCBEaXZpc2lvbiBjcm93biBpcyBnb2luZyBkb3duIHRvIHRoZSB3aXJlIGFuZCB0aGlzIGlzIHRoZSBsYXN0IG1lZXRpbmcgYmV0d2VlbiB0aGUgdGVhbXMgdG8gZGVjaWRlIGl0LiBUaGVyZSdzIGFkZGVkIGluY2VudGl2ZSwgdG9vLCBzaW5jZSB0aGUgT3NoYXdhIEdlbmVyYWxzIGNvdWxkIGxlYXBmcm9nIG9uZSBvZiB0aGVtIGZvciB0aGlyZCBwbGFjZS4gRm91cnRoIGluIHRoZSBFYXN0ZXJuIENvbmZlcmVuY2UgbGlrZWx5IHdpbGwgbWVhbiBtZWV0aW5nIHVwIHdpdGggT3R0YXdhIGEgbGl0dGxlIGVhcmxpZXIgdGhhbiBuZWNlc3NhcnkuIEFuZCBkZXNwaXRlIGFsbCB0aGUgam9ja2V5aW5nIGZvciBwb3NpdGlvbiwgaXQncyBzdGlsbCBpbnRlcmVzdGluZyB0byBzZWUgaG93IHRoZSBJY2VEb2dzIG9mZmVuY2UgbWF0Y2hlcyB1cCBhZ2FpbnN0IFN1ZGJ1cnkncyBzdGVsbGFyIG5ldG1pbmRpbmcuCkltYWdpbmUgYmVpbmcgaW4gc28gbXVjaCBwYWluLCBsaWtlIGFmdGVyIGEgbWFqb3Igc3VyZ2VyeSwgYnV0IGl0IGp1c3QgZ29lcyBvbiBhbmQgb24gZm9yZXZlciB3aXRob3V0IGxldHRpbmcgdXAuIE5vdGhpbmcgaGVscHMgZXZlbiB3aGVuIHlvdSB0cmllZCBldmVyeXRoaW5nLiBBbmQgdGhlbiBzb21lb25lIHRlbGxzIHlvdSB0aGF0IHlvdSBzaG91bGQganVzdCBkbyBwaHlzaWNhbCB0aGVyYXB5IG9yIHRyeSBzb21ldGhpbmcgbmV3LiBJdHMgYmV5b25kIGZydXN0cmF0aW5nLiBXb3VsZCB5b3UgdGVsbCBhIGNhbmNlciBwYXRpZW50IHRvIGp1c3QgdGFrZSBzb21lIG1vdHJpbiBhbmQgc3RyZXRjaCBzbyB0aGF0IHRoZXkgZG9udCBoYXZlIHRvIHRha2UgYW55IG5hcmNvdGljcyB3aGlsZSB0aGV5IGVuZHVyZSB0aGVpciBzaWNrbmVzcz8KU2VsZWN0aW9uIGlzIGh1Z2UsIHdoYXRldmVyIHlvdSB3YW50OiBlZGlibGVzLCBwcmVyb2xscywgZGlzcG9zYWJsZSB2YXBlcywgZ2Vhci4gCllvdSBoZXJlIHRvIHRhbGsgdG8gTWljaGFlbCBhZ2FpbiBvciBhY3R1YWxseSBnZXQgc29tZSB3b3JrIGRvbmU/IFlvdSB3b3VsZCBiZSBhIGxvdCBwcmV0dGllciBpZiB5b3UgZGlkIHlvdXIgaGFpci4gV2VsbCBkaWcgbWUgYSBncmF2ZSB3b24gY2hhLiAKU2FsZXMgb2YgZ2x1dGVuIGZyZWUgcHJvZHVjdHMgaW5jcmVhc2VkIDE2IHBlcmNlbnQgaW4gMjAxMCwgYWNjb3JkaW5nIHRvIHRoZSBOaWVsc2VuIENvbXBhbnkuCk91ciBuYW1lcyBnaXZlbiBhdCBiaXJ0aCBiZWNvbWUgbW9yZSBhIHBhcnQgb2YgdXMgdGhhbiB3ZSByZWFsaXplLCBjYXJyeSBvdXIgc3RvcnksIGFuZCByZWZsZWN0IG91ciBjdWx0dXJlLiAKQm9ybiBpbiBBdWJ1cm4sIE5ZLCBoZSBncmV3IHVwIG9uIHRoZSBzb3V0aCBzaWRlIG9mIFN5cmFjdXNlLiBSb24gZ3JhZHVhdGVkIGZyb20gU3QuIEFudGhvbnkgb2YgUGFkdWEgU2Nob29sIGFuZCBFYXN0IFRleGFzIFN0YXRlIENvbGxlZ2UuIApHYW1lIGRldmVsb3BlcnMgYXJlbiBjaG9vc2luZyB0byBkbyB0aGVzZSB0aGluZ3MgYnV0IGluc3RlYWQgdGhleSBoYXZlIHRvIGluIG9yZGVyIHRvIHN1cHBvcnQgdGhlaXIgbGl2ZXMvZmFtaWxpZXMvZXRjLi4gCk1jQ3JhcnkgYWZmaWRhdml0IHN0YXRlcyB0aGF0IHRoYXQgYSBudW1iZXIgb2YgaW1hZ2VzIHdlcmUgZGVsZXRlZCBkdXJpbmcgdGhlIG11bHRpcGxlIHRpbWUgZnJhbWVzIHRoYXQgVEggd2VudCB0byB0aGUgc2FsdmFnZSB5YXJkIGluY2x1ZGluZyBoZXIgbGFzdCB2aXNpdC4gU2VlbXMgdG8gbWUgdGhlIGltcGxpY2F0aW9uIGlzIHBob3RvcyB3ZXJlIHBvc3NpYmx5IHRha2VuIGJ5IEJvRCBvZiBUSCAodW5rbm93aW5nbHkpIGR1cmluZyBwcmV2aW91cyB2aXNpdHMuIFNlZW1zIGxpa2UgbXVjaCBtb3JlIHRoYW4gYSBjb2luY2lkZW5jZSB0aGF0IGRlbGV0aW9ucyB3ZXJlIG1hZGUgZHVyaW5nIGV4YWN0IHRpbWUgZnJhbWVzIFRIIHdhcyBhdCBzYWx2YWdlIHlhcmQuIApXaGlsZSBUcnVtcCBoYXMgYmVlbiB1bnJlbGlhYmxlIGxhdGVseSBkdWUgdG8gaGlzIHN0dW50IHdpdGggYnVtcCBzdG9ja3MsIEkgdGhpbmsgaXQgaXMgc2FmZSB0byBzYXksIGhvd2V2ZXIsIHRoYXQgaGUgd291bGQgcHJvYmFibHkgdmV0byB0aGlzIGxlZ2lzbGF0aW9uIGFzIGl0IHdvdWxkIG5vdCBoYXZlIGVub3VnaCBzdXBwb3J0IHRvIGdhcm5lciAyLzNyZHMgaW4gYm90aCBob3VzZXMgdG8gb3ZlcnJpZGUgYSB2ZXRvLiBJIHRoaW5rIHRoZSBvbmx5IHdheSB0aGF0IHdvdWxkIGdldCBoaW0gdG8gY29uc2lkZXIgc3VjaCBhIG1lYXN1cmUgaXMgaWYgaXQgaGFkIHNvbWV0aGluZyB0aGF0IGhlIHNhbGl2YXRlcyBmb3IsIHN1Y2ggYXMgYXBwcm92YWwgb2YgZnVuZGluZyBmb3IgaGlzIHdhbGwuCkxvb2sgYXQgc29tZSBvZiB0aGUgeW91bmcgZmVtYWxlIHByb3RhZ29uaXN0cyBpbiBBU09JQUY7IEFyeWEgU3RhcmsgdHJhdmVscyB0aHJvdWdoIGEgd2FyIHRvcm4gYXJlYSBvZiB0aGUgY291bnRyeSBhcm91bmQgYWdlIDkgMTEsIE1hcmdhZXJ5IFR5cmVsbCBpcyBza2lsbGVkIGFuZCBjdW5uaW5nIGF0IHBvbGl0aWNhbCBpbnRyaWd1ZXMgYXQgMTcgeXIgb2xkLCBhbmQgRGFlbmFlcnlzIFRhcmdhcnllbiBiZWNvbWVzIGEgY29ucXVlcmluZyBRdWVlbiBiZXR3ZWVuIHRoZSBhZ2VzIG9mIDEzIDE2Lkhvd2V2ZXIsIHNvbWUgcmVhZGVycyB0aGF0IGxpa2UgS3ZvdGhlIHdvdWxkIG5vdCBsaWtlIEt2b3RoZXR0ZSBiZWNhdXNlIHRoZXkgYWxyZWFkeSBzdHJvbmdseSBkaXNsaWtlIERlbm5hLCB3aG8gYmFzaWNhbGx5IGlzIHRoZSBmZW1hbGUgdmVyc2lvbiBvZiBoaXMgY2hhcmFjdGVyLiBTaGUgaXMgYmVhdXRpZnVsLCBjaGFybWluZywgYW5kIGdvb2Qgd2l0aCBtZW4gYnV0IGdldHMgYXdrd2FyZCBhcm91bmQgS3ZvdGhlLiAKWW91IHBpY2sgaGVyIGFzIHRoZSBsZWFzdCBuZXVyb3RpYyB0ZWFjaGVyIGluIHRoZSBzY2hvb2wuIApUaGUgUXVlZW4gRmFjZXMgUG9rZXIgQ2FyZCBQcm90ZWN0b3IgUmV2aWV3CkZvciBleGFtcGxlLCB5b3Ugd2lsbCBoYXZlIHNlbnNhdGlvbiBvZiBzaGFsbG93IGJyZWF0aGluZyB3aGVuIHlvdSBpbmhhbGUsIHNvbWUgZGlhcGhyYWdtIHBhaW4gd2hlbiBicmVhdGhpbmcsIHN0YWJiaW5nIHBhaW4gaW4gdGhlIGNlbnRlciBvZiB0aGUgY2hlc3Qgb3IgZXZlbiBvbmUgc2lkZWQgY2hlc3QgcGFpbiBhbmQgdGlnaHRuZXNzLiAKQWxzbyBpZiB5b3UgZXZlciBiZWVuIHRvIEJlcmxpbiwgdGhhdCBub3QgY291bnQgYXMgcnVkZSwgYnV0IGFzIGEgaGVscGZ1bCBwaWVjZSBvZiBpbmZvcm1hdGlvbi4gTm9ybWFsIGFuc3dlciB3b3VsZCBoYXZlIGJlZW4gc29tZXRoaW5nIGxpa2UgImFyZSB5YSBoZXJlIHRvIGRyaW5rIG9yIHRvIHdhc2ggeW91ciBoYW5kcy9hcnNlL1tpbnNlcnQgYm9keXBhcnRdPyIKRG9uIHRoaW5rIG9mIGl0IGFzIGFwcGx5aW5nIGFuaW1hbCBjb25jZXB0cyB0byBodW1hbnMuIFRoaW5rIG9mIGl0IGFzIGFja25vd2xlZGdpbmcgaHVtYW5zIGhhdmUgZGlmZmVyZW50IGNoYXJhY3RlcnMuRGVzcGl0ZSB0aGF0LCBob3cgKGlmIHRoZSBjb25jZXB0cyB3ZXJlIHRydWUpIHdvdWxkIHRoYXQgYmUgdXNlZnVsP0lmIHlvdSBrbm93IHdoYXQgdHJhaXRzIGFyZSBzZWxlY3RlZCBmb3IgaW4gcG9zaXRpdmUgc29jaWFsIGVuY291bnRlcnMgeW91IGNhbiBjdWx0aXZhdGUgdGhlbS4gCklmIHlvdSBhcmUgYSBwb3RlbnRpYWxseSBuZXcgcGxheWVyIGFuZCB5b3Ugc2VhcmNoIGZvciBBdXN0cmlhbiBvbmxpbmUgY2FzaW5vcyB5b3Ugd2lsbCBnZXQgYSBsb25nIGxpc3Qgb2YgSW50ZXJuZXQgc2l0ZXMgd2hlcmUgeW91IGNhbiB3YWdlci4gWW91IGhhdmUgdG8gY2hvb3NlIHdlbGwgYmVjYXVzZSBhIGxvdCBpcyBhdCBzdGFrZS4gWW91IHdpbGwgYmUgbWFraW5nIHJlYWwgbW9uZXkgZGVwb3NpdHMgYXQgeW91ciBjaG9zZW4gb25saW5lIGNhc2lubyBhbmQgd2lsbCBiZSBpbnZlc3RpbmcgeW91ciBwcmVjaW91cyB0aW1lIGFzIHdlbGwuIApUaGV5IGFsc28gaG9sZCB1cCB0byB0aGUgcm91Z2ggdHJlYXRtZW50IGNoaWxkcmVuIGNhbiBnaXZlIHRoZW0uIApJdCBqdXN0IHRoYXQgd2hlbiBhIHNtYXJ0IGFuZCBjcml0aWNhbCBwcm9kdWNlciBsaWtlIE11cnBoeSBtYW5hZ2VzIHRvIHRlYWNoIHVzIHdoYXQgd2UgYWxyZWFkeSBrbm93LCB0aGF0IGFnaW5nIGZlbWFsZSBib2RpZXMgYXJlIHNvIGV4dHJhb3JkaW5hcmlseSB1Z2x5IHRoZXkgcmVxdWlyZSBoZXJvaWMgbWVkaWNhbCBpbnRlcnZlbnRpb24sIGFuZCBkb2VzIGl0IGluIGEgd2F5IHRoYXQgc2VkdWNlcyB1cyB3aXRoIGNsZXZlcm5lc3MsIGl0IGlzIGEgcmVsaWVmIHRvIGtub3cgdGhhdCBpdCB3aWxsIGV2ZW50dWFsbHkgYmUgb2ZmIHRoZSBhaXIuLiAKSSBhbSBmYWlybHkgYWdyZXNzaXZlIGluIHRoZSB3YXRlciwgYnV0IHZlcnkgZnJpZW5kbHkuIApDb2tlIGhhcyByZWxpZWQgb24gbXVsdGlwbGUgYWdlbmNpZXMgZm9yIHRoZSBjYW1wYWlnbiwgcmF0aGVyIHRoYW4gdXNpbmcgYW4gYWdlbmN5IG9mIHJlY29yZC4gVGhlIG5ldyB3YXZlIG9mIGFkcyBpcyBubyBkaWZmZXJlbnQuIFNjaHVsdHogaXMgdGhlIENoaWNhZ28gQnVyZWF1IENoaWVmIGF0IEFkIEFnZSBhbmQgY292ZXJzIGJldmVyYWdlLCBhdXRvbW90aXZlIGFuZCBzcG9ydHMgbWFya2V0aW5nLiBIZSBpcyBhIGZvcm1lciByZXBvcnRlciBmb3IgTWNDbGF0Y2h5IG5ld3NwYXBlcnMsIGluY2x1ZGluZyB0aGUgRnJlc25vIEJlZSwgd2hlcmUgaGUgY292ZXJlZCBidXNpbmVzcyBhbmQgc3RhdGUgZ292ZXJubWVudCBhbmQgcG9saXRpY3MsIGFuZCB0aGUgSXNsYW5kIFBhY2tldCBpbiBTb3V0aCBDYXJvbGluYS4gTmVhbCBBd2FyZHMsIHRoZSBBc3NvY2lhdGlvbiBvZiBDYXBpdG9sIFJlcG9ydGVycyBhbmQgRWRpdG9ycywgdGhlIENhbGlmb3JuaWEgTmV3c3BhcGVyIFB1Ymxpc2hlcnMgQXNzb2NpYXRpb24sIHRoZSBTb3V0aCBDYXJvbGluYSBQcmVzcyBBc3NvY2lhdGlvbiBhbmQgSW52ZXN0aWdhdGl2ZSBSZXBvcnRlcnMgYW5kIEVkaXRvcnMuIEEgbmF0aXZlIG9mIENpbmNpbm5hdGksIFNjaHVsdHogaGFzIGFuIGVjb25vbWljcyBkZWdyZWUgZnJvbSBYYXZpZXIgVW5pdmVyc2l0eSBhbmQgYSBtYXN0ZXJzIGluIGpvdXJuYWxpc20gZnJvbSBOb3J0aHdlc3Rlcm4gVW5pdmVyc2l0eS4KQ3VycnksIHdobyBnb3QgaGVyIHN0YXJ0IGFzIGFuIGVudHJlcHJlbmV1ciB3aXRoIGEgZm9vZCBibG9nIGFuZCBZb3VUdWJlIGNoYW5uZWwsIG5vdyBob3N0cyBjb29raW5nIHNob3dzIG9uIEZvb2QgTmV0d29yayBhbmQgQUJDOyBvd25zIGEgcmVzdGF1cmFudDsgaGFzIGhlciBvd24gbGluZSBvZiBjb29rd2FyZTsgd3JvdGUgYSBiZXN0IHNlbGxpbmcgY29va2Jvb2s7IGFuZCBib2FzdHMgbW9yZSB0aGFuIDcgbWlsbGlvbiBmb2xsb3dlcnMgb24gc29jaWFsIG1lZGlhLiAKTmV3IG9uZSBleHBlY3RlZCB0byBiZSBhIHN1YnN0YW50aWFsIGltcHJvdmVtZW50IGluIGV2ZXJ5IHdheSwgYW5kIG1heWJlIGEgbGl0dGxlIG1vcmUgbGlmZXN0eWxlIG9yaWVudGVkLiAKRXZlbiBpZiB5b3UncmUgZ2V0dGluZyBzY3Jld2VkIG9uIHByb3BlcnR5IHRheGVzLCBtYWludGVuYW5jZSwgSE9BIGZlZXMsIGV0Yy4gWW91J3JlIHN0aWxsIGRvaW5nIGJldHRlciB0aGVuIHJlbnRpbmcgYXMgZXZlcnkgbW9udGhseSBwYXltZW50IHlvdSBtYWtlIGlzIGdhaW5pbmcgKGV2ZW4gaXQncyBhIHNtYWxsIGFtb3VudCkgaW50ZXJlc3QuIApPbmxpbmUgcG9rZXIgaGFzIGJlY29tZSBhIHZlcnkgcG9wdWxhciBnYW1lIG9uIHRoZSBJbnRlcm5ldCwgc2luY2UgbGFzdCBmZXcgeWVhcnMuIFRoZSBiZXN0IHBhcnQgb2Ygb25saW5lIHBva2VyIGlzIHRoYXQgdGhlIHBsYXllcnMgd2hvIHdhbnQgdG8gcGxheSBpdCBqdXN0IGZvciBmdW4gY2FuIGRvIHNvIHdpdGhvdXQgaW52ZXN0aW5nIGFueSByZWFsIG1vbmV5LiAKSXQgd2FzIG5vdCBsaWtlIHRoaXMgaW4gYmV0YS4gClBva2VyIGNhcmRzIGhhdmUgYmVlbiB0aGUgYmVzdCBjb2xsZWN0aWJsZXMgZm9yIHRoZSBwbGF5ZXJzIGFyb3VuZC4gQXBhcnQgZnJvbSB0aGUgcG9rZXIgZXhwZXJ0cyB0aGUgZmFucyBhbHdheXMga2VlcGluZyB0b3VjaGVkIHdpdGggcG9rZXIgaGF2ZSBnb3Qgc29tZSBpbnRlcmVzdCBpbiBwb2tlciBhcyB3ZWxsLiAKVW5sZXNzIGl0IGEgbGljZW5zZWQgYnJlZWRlciwgRE8gTk9UIGxldCBhIHN0cmFuZ2VyIGluc3BlY3QgeW91ciBob3VzZS4uIApNb3N0IGltcG9ydGFudCwgaGUgYmUgYXBwYWxsZWQgYXQgdGhlIGxhY2sgb2YgbGVhZGVyc2hpcCBldmlkZW50IGluIE9iYW1hIGJ1ZGdldCBubyBwbGFuIHRvIGFkZHJlc3MgdGhlIGxvb21pbmcgZmlzY2FsIGNyaXNpcyBhbmQgdHJpbGxpb24gZG9sbGFyIGRlZmljaXRzIGludG8gb2JsaXZpb24uLiAKRm9yIGV4YW1wbGUsIG1hc3NhZ2UgaXMgZ2VuZXJhbGx5IGdyZWVuIGxpZ2h0ZWQsIGFsdGhvdWdoIHNvbWUgZXhwZXJ0cyBkaXNhZ3JlZSBhYm91dCB3aGV0aGVyIGl0J3Mgd2lzZSB0byByZWNlaXZlIG1hc3NhZ2VzIGluIHRoZSBmaXJzdCB0cmltZXN0ZXIuIApTaGUgd291bGQgY29tZSBpbiB0byBzZWUgaGVyIHBhcmVudHMgYW5kIHNoZSBhbHdheXMgbWFkZSBzdXJlIHNoZSBjb25uZWN0ZWQgd2l0aCBoZXIgZnJpZW5kcywiIFBlYXJsIEJlbGwgc2FpZC4gClF1YWxpZmllZCBsb2NhbCBjb3Vuc2VsIGlzIHRoZSBvbmx5IGNvbXBldGVudCByZXNvdXJjZSB0byBkaXJlY3RseSBhbmQgcmVsaWFibHkgYW5zd2VyIGFueSBzcGVjaWZpYyBsZWdhbCBxdWVzdGlvbiBvciB0byBwcm92aWRlIHlvdSB3aXRoIGxlZ2FsIGFkdmljZS4gWW91IGRvIG5vdCBuZWVkIHRvIHB1dCB0aGlzIGRpc2NsYWltZXIgaW4geW91ciBjb21tZW50czsgYWxsIHBvc3RzIGFuZCBjb21tZW50cyBpbiB0aGlzIHN1YnJlZGRpdCBzaGFsbCBiZSBjb25zdHJ1ZWQgYXMgYmVhcmluZyB0aGlzIGRpc2NsYWltZXIuLiAKSWRrIGJ1dCBzb21ldGhpbmcgaGFzIHRvIGdpdmUuIApTbyBBa2F0c3VraSBpcyB0aGUgZmlyc3QgbGlnaHQgYWZ0ZXIgdGhlIGRhcmtuZXNzIG9mIGV2ZXJ5dGhpbmcgdGhhdCB0b29rIHBsYWNlIGR1cmluZyB0aGUgc2VyaWVzLCBhbmQgaGUgYWxzbyB0aGUgZnVsbCBtb29uOyBtYWRlIGNvbXBsZXRlIGJ5IHRoZSB0aGluZ3MgVGVra2FkYW4gc2FjcmlmaWNlZCBpbiBvcmRlciB0byBldmVudHVhbGx5IGFsbG93IGhpbSB0byBleGlzdCBhbmQgY2Fycnlpbmcgb24gTWlrYSdzIGxlZ2FjeS4uIApQbGF0eiBiZWkgZWluZW0gJDUgVHVybmllciBtaXQgMTgxNiBTcGllbGVybi4gTWFsIHNlaGVuLCBvYiBkZXIgRmluYWwgVGFibGUgZWluIHdlbmlnIE1vdGl2YXRpb24gYnJpbmd0Li4gClN0cmFpZ2h0IG1lbiBkb24gaGF2ZSB0byAiY29tZSBvdXQiIGJlY2F1c2Ugd2UgYWxsIGtub3cgdGhhdCB0aGV5IGRvbiByZWFsbHkgaGF2ZSBob21vZXJvdGljIGRlc2lyZXMgb3IgZmluZCB0aGUgYW51cyBwbGVhc3VyYWJsZSBvciBoYXZlIHNleHVhbCBlbmNvdW50ZXJzIHdpdGggb3RoZXIgbWVuIChldmVuIGlmIHRoZXkgZG8pLiBBcyBhIGdyb3VwLCBzdHJhaWdodCBwZW9wbGUgZXhpc3Qgd2l0aG91dCBvdXRpbmcsIGJ1dCBhbHNvIHdpdGhvdXQgYSBsb3Qgb2YgY3JpdGljYWwgYW5hbHlzaXMgb2Ygd2hhdCB0aGV5IHJlYWxseSBkbyBhbmQgcmVhbGx5IGRlc2lyZS4gCkkga25vdyB0aGlzIGtpbmRzIG9mIHRoaW5ncyBhcmUgaGFyZCB0byB1bmRlcnN0YW5kIGFuZCBldmVuIGhhcmRlciB0byBiZWxpZXZlIHdoZW4geW91IGhhdmUgbmV2ZXIgZXhwZXJpZW5jZWQgc29tZXRoaW5nIGxpa2UgaXQsIGFuZCBhbHNvIEkgYW0gbm90IHN0YXRpbmcgdGhhdCB0aGV5IGFyZSB0cnVlIG9yIHRoYXQgeW91IHNob3VsZCBiZWxpZXZlIGluIHRoZW0gZWl0aGVyLiAKTG9uZ2p1bXBpbmdGbG93ZXIgdQpXaGF0IE9uVGhpbmdzIHRvIGRvRm9vZCBhbmQgRHJpbmtUaGVhdHJlIGFuZCBBcnRzVFYgR3VpZGVEaWdpdGFsIFByaW50IEVkaXRpb25BbiBBdXN0cmFsaWFuIHBva2VyIG1hY2hpbmUgZ2lhbnQgaGFzIGRvYmJlZCBpdHNlbGYgaW50byByZWd1bGF0b3JzIGFmdGVyIGl0cyBzdGFmZiB3ZXJlIGFjY3VzZWQgb2YgcHJvZmlsaW5nIHB1bnRlcnMgdG8gZW5jb3VyYWdlIHRoZW0gdG8gc3RheSBsb25nZXIgYW5kIGdhbWJsZSBtb3JlLiBGZWRlcmFsIE1QIGFuZCBhbnRpIHBva2llcyBjYW1wYWlnbmVyIEFuZHJldyBXaWxraWUgaGFzIG9idGFpbmVkIHNjcmVlbnNob3RzIG9mIGRhdGEgYmVpbmcga2VwdCBvbiBnYW1ibGVycyBhdCBXb29sd29ydGhzIG93bmVkIHB1YnMsIHdoaWNoIGlzIGJlaW5nIHNoYXJlZCBhbW9uZyB0aGUgc3VwZXJtYXJrZXQgZ2lhbnQgNDAwIHB1YnMuIApJdCByZWFsbHkgaXMgZXZlcnl3aGVyZS4iLiAKVGhlIFNlbmF0ZSBnYW1ibGluZyBiaWxsIHdvdWxkIGFsc28gYWxsb3cgdGhlIFNlbWlub2xlIFRyaWJlIHRvIG9mZmVyIGNyYXBzIGFuZCByb3VsZXR0ZSBhdCBpdHMgY2FzaW5vcyBhbmQgaXQgd291bGQgYWxsb3cgU291dGggRmxvcmlkYSB0cmFja3MgdG8gYWRkIGJsYWNramFjay4gSXQgYWxzbyB3b3VsZCBjcmVhdGUgYSBwYXRod2F5IGZvciBhbiBhZGRpdGlvbmFsIGNhc2lubyBpbiBCcm93YXJkIGFuZCBNaWFtaSBEYWRlIGNvdW50aWVzLi4gClRoZSBwYXJ0IHRoYXQga2lsbHMgbWUgaXMgaW4gdGhlc2UgdGhyZWFkcyB0aGVyZSBpcyBvZnRlbiB0aW1lcyBzb21lb25lIHdobyBzYXlzICJpdCB0aGUgbGVhc3Qgc2hlIGNvdWxkIGRvIiBvciAiaXQgYSBzbWFsbCBhY3QgdG8gc2hvdyBoZXIgY29uc2lkZXJhdGlvbi4iIEhhdmluZyBkb25lIHdoYXQgdGhpcyBsYWR5IGRpZCA0IHRpbWVzIG5vdywgSSBjYW4gdGVsbCB5b3UgaXQgaXMgbm90IGVhc3kgb3IgZnVuIHRvIG1ha2UgdGhlc2UuIApCeSB1c2luZyBSZWlraSwgdGhlIGJsYWNrIGdvb3B5IHN0dWZmIGlzIHJlbW92ZWQuIFRoZSBib2R5J3MgZW5lcmd5IGNhbiBmb2N1cyBvbiB0aGUgYm9keSBhbmQgbm90IGZlZWRpbmcgdGhlIGR5aW5nIGxlYWYuIApUaGUgdGF4cGF5ZXIgYXJndW1lbnRzIHRoYXQgdGhlIHRpcHMgc2hvdWxkIGJlIHRheCBleGVtcHQgYmVjYXVzZSB0aGV5IHdlcmUgZ2FtYmxpbmcgcHJvY2VlZHMsIHRoZSBqdWRnZSBkaXN0aW5ndWlzaGVkIGJldHdlZW4gdGhlIG1vbmV5IHdvbiBpbiB0aGUgaGFuZHMgb2YgdGhlIGdhbWJsZXIgYW5kIHRoZSBtb25leSB0dXJuZWQgb3ZlciB0byB0aGUgYXR0ZW5kYW50LiAKRGlkIExhd2xlciBnbyBvdXQgZm9yIGEgc3BsaXQgc2Vjb25kPyBJdCBwb3NzaWJsZS4gQW55b25lIHNheWluZyBoZSBhYnNvbHV0ZWx5IGRpZCBkb2VzbiBrbm93IHdoYXQgdGhleSB0YWxraW5nIGFib3V0LiBUaGUgb25seSBpcyBoaW0gZHJvcHBpbmcgaGlzIGFybS4gTGlrZSBzb21lb25lIGVsc2Ugc2FpZCwgZmlsbSB5b3Vyc2VsZiBncmFwcGxpbmcgYW5kIHlvdSBkbyBzb21lIHdlaXJkIHNoaXQgc29tZXRpbWVzLiBJIHNlZW4gYSBsb3Qgb2YgcGVvcGxlIGdvIG91dC4gSSBnb25lIG91dCBteXNlbGYuIEV2ZW4gZ29pbmcgdW5jb25zY2lvdXMgYSBsaXR0bGUgYml0IGlzIHByZXR0eSBub3RpY2VhYmxlIGlmIHlvdSBsb29rIGF0IHRoZWlyIGZhY2UuIEhlIGxvb2tlZCBhd2Z1bCBsdWNpZCB0aGUgc2Vjb25kIGhlIGxvb2tlZCB1cC4gRXZlbiBIZXJiIGZhY2UgKHRvIG1lKSBsb29rZWQgc3VycHJpc2VkIHdoaWNoIHNheXMgaGUgcmVhbGl6ZWQgaGUgbWlnaHQgaGF2ZSBtYWRlIGEgbWlzdGFrZS4KTWEgbCdBbW9yZSAocXVlbGxvIGNvbiBsYSBBIG1haXVzY29sYSkgbm9uIGhhIGNoZSB1biB1bmljbyBkZXNpZGVyaW86IHF1ZWxsbyBkaSBkYXJzaSwgc2VuemEgYXNwZXR0YXRpdmUuIApJZiB5b3UgY2FuIHByb3ZpZGUgcHJvb2YgaXQgZGlkbiB3b3JrIGl0IHByb2JhYmx5IHdvdWxkbiBtYXR0ZXIuIEkgdGhpbmsgdGhlIGdvdmVybm1lbnQgaXMgc21hcnQgZW5vdWdoIHRvIHJlYWxpemUgdGhhdCBub3QgZXZlcnkgaHVtYW4gYm9keSBpcyB0aGUgc2FtZSBhbmQgcmVhY3RzIHRvIHZhY2NpbmUgYW5kIG1lZGljaW5lIHRoZSBzYW1lLgpCZWluZyBhYmxlIHRvIGRpc2d1aXNlIHlvdXIgcGxheSBtYXkgYmUgdGhlIG1vc3QgdmFsdWFibGUgcG9rZXIgc3RyYXRlZ3kgeW91IGNvdWxkIGhhdmUgYnV0IHRoZW4geW91IG11c3QgcmVtZW1iZXIgdG8gYXBwbHkgdGhlbSBhcyB2YXJpZWQgYXMgcG9zc2libGUuIAoxOiBXaGVuIHRoZSBkZWFsZXIgaXMgaGFzIGdhdGhlcmVkIHRoZSBwaWxlIG9mIGNhcmRzIGluIGZyb250IG9mIGhpbSwgd2FpdCB1bnRpbCBoZSBwdWxscyB0aGUgc3RhY2sgdG93YXJkcyBoaW1zZWxmLCB0aGVuIHR5cGUgcG9rZXJ0ZW4uIElmIHlvdSBnZXQgYSBLIGFuZCBBIG9mIGNsdWJzIHlvdSdyZSBnb29kLgpBIG1heGltdW0gb2YgMTAgcGxheWVycyBjYW4gcGxheSB0aGlzIGdhbWUgb2YgdGhlIHN0YW5kYXJkIDUyIGRlY2sgY2FyZC4gCk15IHRlZXRoIGxvb2tlZCBsaWtlIG9uZSBnaWFudCAic2N1bSB0b290aCIgdGhlIGRheSB0aGV5IGdvdCB0aGUgd2lyZXMgb2ZmLiBJIHNvbWV0aW1lcyBsYW1lbnQgdGhhdCB0aGlzIHdhcyBiZWZvcmUgc21hcnRwaG9uZXMgYW5kIEkgZG9uIGhhdmUgYW55IGdvb2QgcGhvdG9zIG9mIGFueSBvZiB0aGlzIHNoaXQuCkhvdyB0byBQdXJjaGFzZSBSZWFsIEVzdGF0ZSBXaXRoIE5vIChvciBMb3cpIE1vbmV5IQpNZWQgYWxsYSBkZXNzYSB1dG0gcmt0YSBwdW5rdGVyIHNvbSBmcmFtZiByZGVzIGVmZmVrdGl2dCBzIHR0IGF0dCBnZSBlbiBteWNrZXQgYmVoIHZzIEYgUktPTVBSSU1FUkEgaSBldHQgayBtcGFuZGUgZWtvbm9taXNrdCBrbGltYXQuIERlbm5hIG9ubGluZSB3ZWJicGxhdHMgZXJianVkZXIgc2luYSBrdW5kZXIgZW4gdmVya2xpZyBzcGVsdXBwbGV2ZWxzZSwgbWVkIEJlbGl6ZSwgVHVya3MgQ2FpY29zIG4sIFN0b3Jicml0YW5uaWVuIG9jaCBLYW5hZGEuIApQb2tlciBNb2NrdW1lbnRhcnkgJ1RoZSBHcmFuZCcgV2lucyB0aGUgUG90IFdpdGggSGlsYXJpb3VzbHkgQmVsaWV2YWJsZSBDaGFyYWN0ZXJzCkkgcGxheWVkIHRoZSBsaW1pdCBIRSBnYW1lcyBmb3IgeWVhcnMgYXQgTHVja3kgQ2hhbmNlcyBpbiBDb2xtYSBpbiB0aGUgbGF0ZSAxOTkwcy9lYXJseSAyMDAwcy4gClNvIHNvbWUgbWF5IGJlIHNrZWxldG9ucyBhbmQgb3RoZXJzIG1heSBiZSBwcmVzZXJ2ZWQgY29ycHNlcyBidXQgd2UgZG9uIHJlYWxseSBrbm93IGZvciBzdXJlLlNpcmVuT2ZTY2llbmNlQUtBIGl0IGNhbGxlZCB3aGlza2V5IDYwIHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ29TaGUgd2FzIHNvIGhhcmQgb24gdGhlIHNlcmllcyBpbiB0aGUgcGFzdCBidXQgcmVhbGl6ZWQgVHdpbGlnaHQgaXMgYW5vdGhlciBleGFtcGxlIG9mIGhvdyBzb2NpZXR5IGhhdGUgb24gdGVlbmFnZSBnaXJscyBhbmQgbW9jayB0aGluZ3MgdGhhdCB0aGV5IGxpa2UgZGVzcGl0ZSB0ZWVuYWdlIGJveXMgbGlraW5nIGp1c3QgYXMgc2lsbHkgb3Igc3R1cGlkIGZyYW5jaGlzZXMuIApHYW1ibGluZyBoYXMgcHJvbGlmZXJhdGVkIGFjcm9zcyB0aGUgTm9ydGhlYXN0LCB5b3UgZ29pbmcgdG8gY29udGludWUgdG8gc2VlIHRoYXQsIHNhaWQgQ2x5ZGUgVy4gQmFycm93LCBkaXJlY3RvciBvZiB0aGUgQ2VudGVyIGZvciBQb2xpY3kgQW5hbHlzaXMgYXQgdGhlIFVuaXZlcnNpdHkgb2YgTWFzc2FjaHVzZXR0cyBEYXJ0bW91dGguIExpa2UgYSBnYW1ibGluZyBhcm1zIHJhY2UuIApDaGFxdWUgYW5uZSwgYXUgam91ciBvIGwgc29sYWlyZSBlc3Qgcm9pLCBkZSBncmFuZHMgZmV1eCBzb250IGFpbnNpIHJpZ3MsIGNsYWlyYW50IGxlIGNpZWwgbm9jdHVybmUgbGUgcGx1cyBjb3VydCBkZSBub3RyZSBjYWxlbmRyaWVyLiBEZXMgaGVyYmVzIHkgc29udCB0cmFkaXRpb25uZWxsZW1lbnQgamV0ZXMuIApBbmQgaGFzIHN0b3BwZWQgZG9pbmcgaXQgZm9yIGhpcyBwYXRpZW50cy4gClRoYXQncyBvbmUgb2YgbWFueSBwcm9ibGVtcyBJIGhhZC4gSXQganVzdCBkb2Vzbid0IHdvcmsgZm9yIG1lLiAKWW91IGdvdCB0aGUgc2Vuc2UgdGhhdCBpZiB5b3Ugc2FpZCBzb21ldGhpbmcgc3R1cGlkIGhlIHdvdWxkIGxldCB5b3Uga25vdyBpdCAobGF1Z2hzKS4gQnV0IGZyb20gdGhlIG1pbnV0ZSBJIG1ldCBoaW0gSSBhZG9yZWQgaGltLi4gCkl0IGdldHMgc3VwZXIgY3Jvd2RlZCBoZXJlLCBzbyB3ZSBzdWdnZXN0IGdyYWJiaW5nIGEgc2VhdCBhdCBHaGlyYXJkZWxsaSBTcXVhcmUgb3IgVHJlYXN1cmUgSXNsYW5kIGZvciB0aGUgc2hvdy4gCllvdXIgYW5hbG9neSB0byBUZXMgQnVuZHkgbWFrZXMgbm8gc2Vuc2UuIEl0IHdvdWxkIHdvcmsgYmV0dGVyIGlmIHlvdSBzYWlkICJpdCdzIGxpdGVyYWxseSBpbXBvc3NpYmxlIGZvciBhIHNlcmlhbCBraWxsZXIgdG8gYmUgY2hhcmlzbWF0aWMiIGFuZCBJIHJlcGx5ICJubywgdGVkIGJ1bmR5IHdhcyByZXBvcnRlZGx5IGNoYXJpc21hdGljIiB0byBkaXNwdXRlIHlvdXIgZmFsc2Ugc3RhdGVtZW50LgpXaGF0IHRoZXJlZm9yZSBHb2QgaGFzIGpvaW5lZCB0b2dldGhlciwgbGV0IG5vIG1hbiBzZXBhcmF0ZSIgKHZ2LiAKWWVhaCwgb24gdGhlIHN1cmZhY2UgaXQgaGFzIGEgc2lsbHkgdGl0bGUgYW5kIHByZW1pc2UsIGJ1dCB0aGlzIGlzIGEgc3RyYW5nZSwgd29ydGh5IG1vdmllIHN0YXJyaW5nIHNvbWUgdmVyeSB0YWxlbnRlZCBhY3RvcnMuIApIZSBpcyBvbmUgb2YgMjAgY2hpbGRyZW4uIApBbHNvIGRpc3NvbHZlZCBpbiBwbGFzbWEgYXJlIGVsZWN0cm9seXRlcywgbnV0cmllbnRzIGFuZCB2aXRhbWlucyAoYWJzb3JiZWQgZnJvbSB0aGUgaW50ZXN0aW5lcyBvciBwcm9kdWNlZCBieSB0aGUgYm9keSksIGhvcm1vbmVzLCBjbG90dGluZyBmYWN0b3JzLCBhbmQgcHJvdGVpbnMgc3VjaCBhcyBhbGJ1bWluIGFuZCBpbW11bm9nbG9idWxpbnMgKGFudGlib2RpZXMgdG8gZmlnaHQgaW5mZWN0aW9uKS4gCkluIGdhbWVzIHdoZXJlIG91dGNvbWVzIGFyZSBub3QgdGllZCBkaXJlY3RseSB0byBkZWNpc2lvbnMgKHRyYWRpbmcsIHBva2VyLCB2aWRlbyBnYW1lcywgYnVzaW5lc3MpLCBkZWNvdXBsaW5nIHlvdXIgZWdvIGFuZCBzZWxmIHdvcnRoIGZyb20gdGhlIHJlc3VsdHMgeW91IGFjaGlldmUgYW5kIGluc3RlYWQgaW52ZXN0aW5nIHRoZW0gaW4gdGhlIGRlY2lzaW9ucyB5b3UgbWFrZSBpcyBhIGdvb2Qgd2F5IHRvIHRpbHQgcHJvb2YgeW91cnNlbGYuLiAKVGhlIGdvdmVybm1lbnQgaXMgbm90IGdvaW5nIHRvIGNhcmUgZm9yIHlvdSAoZG9uJ3QgYmVsaWV2ZSBnb3Zlcm5tZW50IGhlYWx0aCBjYXJlIHdpbGwgc29sdmUgeW91ciBwcm9ibGVtcykuIFlvdSBhcmUganVzdCBhbm90aGVyIG51bWJlciB0byB0aGVtIHdpdGggYSB0YXggaWQgdG8gZW5zdXJlIHRoZXkgcGFydCB5b3VyIG1vbmV5IGZyb20geW91LiAKQW5kIGFib3V0IHRob3NlIG1hbmdvIHRyZWVzIE1hcnRpbiBoYWQgcGxhbnRlZD8gWWVhaCwgdGhleSdyZSBwcmV0dHkgbXVjaCBhbGwgZGVhZC4KUGFua2FqIEJoYWxsYSwgTm9ydGggQW1lcmljYSBicmFuZCBkaXJlY3RvciBvbiBHaWxsZXR0ZSBzYXlzIHRoZSBjb250cm92ZXJzeSB3YXMgbm90IHRoZSBpbnRlbmRlZCBnb2FsIG9mIHRoZSBhZCwgd2hpY2ggaXMgcGFydCBvZiBhIGxhcmdlciBjYW1wYWlnbiB0aGF0IHRha2VzIGEgbG9vayBhdCByZWRlZmluaW5nIEdpbGxldHRlJ3MgbG9uZ3RpbWUgdGFnbGluZSAiVGhlIEJlc3QgYSBNYW4gQ2FuIEdldCwiIGluIGRpZmZlcmVudCB3YXlzLiBBbm90aGVyIG9ubGluZSBhZCBmZWF0dXJlcyBvbmUgaGFuZGVkIE5GTCByb29raWUgU2hhcXVlbSBHcmlmZmluLgpTbG93bHkgYnV0IHN1cmVseSBJIHdvdWxkIG1ha2UgYSBjb21lYmFjayBmcm9tIGJlaW5nIGRvd24gdG8gJDIuMDAgb2YgY2hpcHMgY29tcGFyZWQgdG8gaGlzICQyNC4wMC4gCk9uZSByZWFzb24gaXMgZHVlIHRvIHRoZSBzdHlsZSBvZiBsZWFybmluZy4gV2hpbGUgdGhlIEtpbmRlcnBsZXggZm9jdXNlZCBvbiBwbGF5IGJhc2VkIGxlYXJuaW5nLCB0aGUgbmV3IGNoaWxkIGNhcmUgcHJvZ3JhbSBmb2xsb3dzIHRoZSBSZWdnaW8gRW1pbGlhIHBoaWxvc29waHkuIEZvdW5kZWQgYnkgTG9yaXMgTWFsYWd1enppLCB0aGlzIGFwcHJvYWNoIGRlcGVuZHMgdXBvbiBlYWNoIGluZGl2aWR1YWwgY2hpbGQuIApSYWdmbGFuICA1IHBvaW50cyAgc3VibWl0dGVkIDQgeWVhcnMgYWdvCltTYV0gQ29ycmVnaWRvciwgbWdhIDQwIG1pbnV0ZXMsIiBoZSBzYWlkLlRoZSBzYW1lIHF1YWtlIGNvdWxkIHNlbmQgYSB0c3VuYW1pIHRocm91Z2ggTWFuaWxhIEJheSB0byBoaXQgTWFsYWJvbiwgTmF2b3RhcywgTWFuaWxhIGFuZCBMYXMgUGlhcywgU29saWR1bSBzYWlkLiJNYWhpZ2l0IGlzYW5nIG9yYXMgcGEgYW5nIGRhdGluZyBuaXlhbi4gCktub3cgWW91ciBNb3ZlbWVudCBNYXNzYWdlIHRoZXJhcHkgc3R1ZGVudHMgbGVhcm4ga2luZXNpb2xvZ3ksIHRoZSBzdHVkeSBvZiBob3cgdGhlIGh1bWFuIGJvZHkgbW92ZXMuIE1hc3NhZ2UgdGhlcmFweSBzdHVkZW50cyBsZWFybiBhYm91dCBwaHlzaWNhbCBhY3Rpdml0eSBhbmQgaXRzIGVmZmVjdHMgb24gYSBwZXJzb24ncyBoZWFsdGggYW5kIHF1YWxpdHkgb2YgbGlmZS4gU3R1ZGVudHMgZXhwbG9yZSB0aGUgdmFyaW91cyBtdXNjbGUgZ3JvdXBzIGluIGNsYXNzZXMgYW5kIGxlYXJuIGFib3V0IHdoZXJlIGVhY2ggbXVzY2xlIGlzIGZvdW5kIGFuZCBob3cgaXQgZnVuY3Rpb25zIHdpdGhpbiB0aGUgYm9keS4gU3R1ZGVudHMgYXJlIGFsc28gdGF1Z2h0IGFib3V0IGpvaW50cyBhbmQgdGhlaXIgY29udHJpYnV0aW9uIHRvIGJvZHkgbW92ZW1lbnQuIFN0dWRlbnRzIHNob3VsZCBiZSBhYmxlIHRvIGRpc3Rpbmd1aXNoIGJldHdlZW4gZGlmZmVyZW50IHR5cGVzIG9mIGpvaW50cyBhbmQgdGhlIGZvcmNlcyB0aGF0IGtlZXAgdGhlbSBmcm9tIHdvcmtpbmcgcHJvcGVybHkuIFRlYWNoZXJzIGFsc28gZ2l2ZSBpbnN0cnVjdGlvbiBvbiB0aGUgbmVydm91cyBzeXN0ZW0gYW5kIGl0cyByb2xlIGluIGJvZHkgbW92ZW1lbnQuCkV2ZW4gdHJpcHMgYXJlIG9mdGVuIGJlYXQgYnkgYSBzdHJhaWdodCwgZmx1c2gsIG9yIGZ1bGwgaG91c2UuIEhvbGQnZW0gcGxheWVycyB3aG8gc3RhcnQgdG8gcGxheSBPbWFoYSBvZnRlbiBub3Qgb25seSBwbGF5IGEgaGFuZCBsaWtlIEEgQSA3IDggYnV0IGFsc28gd2lsbCByYWlzZSB3aXRoIGl0IGJlZm9yZSB0aGUgZmxvcC4gVGhpcyBoYW5kIGlzIHVucGxheWFibGUgYmVjYXVzZSBpdCB3aWxsIG5vdCB3aW4gdGhlIGxvdyBldmVuIGlmIGEgbG93IGlzIG1hZGUgYW5kIHdpbGwgcmFyZWx5IHdpbiBldmVuIGlmIGFuIGFjZSBjb21lcyBvbiB0aGUgYm9hcmQgdW5sZXNzIHRoZSBib2FyZCBwYWlycyAobWFraW5nIGEgZnVsbCBob3VzZSksIGFuZCB0aGUgNyBhbmQgOCBhcmUgYWxtb3N0IHdvcnRobGVzcy4gCkEgRGF5IHRvLiAKTGlrZSBjb2luIGZsaXBzLCB0aGUgcmVzdWx0IGdldHMgbW9yZSBhY2N1cmF0ZSB0aGUgbW9yZSB5b3UgZG8gaXQsIGFzIHNoZWVyIHBlcnNpc3RlbmNlIGlyb25zIG91dCBzdGF0aXN0aWNhbCBhYmVycmF0aW9ucy4gV2hpbGUgeW91ciBjb2luIGZsaXBzIGdldCBjbG9zZXIgdG8gNTAgNTAgdGhlIG1vcmUgdGltZXMgeW91IGZsaXAsIHlvdXIgcGFwZXIgY2xpcHMgZ2V0IGNsb3NlciB0byBwaSB0aGUgbW9yZSB0aW1lcyB5b3UgZHJvcC4gSWYgeW91IGRvbid0IGhhdmUgdGhlIHRpbWUgb3IgdGhlIHBhcGVyIGNsaXBzIHRvIGRvIGl0IHlvdXJzZWxmLCB0aGVyZSBhcmUgb25saW5lIHNpbXVsYXRpb25zIHRoYXQgd2lsbCBkbyBpdCBmb3IgeW91LCBiZWNhdXNlIG9mIGNvdXJzZSB0aGVyZSBhcmUuIkhleSBNb20gLiB5ZWFoLCB0aGV5IGhhdmUgbWUgZG9pbmcgYSByZWFsbHkgaW1wb3J0YW50IHByb2plY3QgYXQgd29yay4iCldoZW4gaXQgd2FzIHRpbWUgdG8gb3BlbiBwcmVzZW50cywgdGhlIGRhZCBhbmQgZ3V5cyBjYW1lIG92ZXIgc28gZGFkIGNvdWxkIGJlIGEgcGFydCBvZiBpdC4gSSB0aG91Z2h0IHRoaXMgd2FzIGEgY29vbCBpZGVhLiBGb3Igb3VyIHNob3dlciwgaHViYnkgaXMgZ29pbmcgdG8gY3JlYXRlIGEgbWFuIGNhdmUgZm9yIHRoZSBndXlzIGluIHRoZSBnYXJhZ2Ugc28gdGhleSBjYW4gaGF2ZSB0aGVpciBtYW4gdGltZSBidXQgc3RpbGwgYmUgYXJvdW5kIHRvIGVuam95IGluIGZvb2QsIGNvbXBhbnkgYW5kIHNvY2lhbGl6ZS4uIApJIGhhdmUgcHJldmlvdXNseSBtZW50aW9uZWQgdGhhdCBteSBmaWVsZCBvZiBzdHVkeSBpcyBhbnRocm9wb2xvZ3kgd2hpbGUgbXkgZmllbGQgb2Ygd29yayBpcyBzcG9ydHMgcmVsYXRlZC4gCkhvd2V2ZXIsIGl0IGlzIGNvbW1vbmx5IHByb3ZlbiB0aGF0IGEgZGVjZW50IGFuZCBvcmlnaW5hbCBjaGlwIHNldCBjYW4gcmVhbGx5IG1ha2UgYSBnYW1lIGNvbWUgYWxpdmUuIFRoaXMgaXMgd2h5IHRoZSBXb3JsZCBQb2tlciBUb3VyIFBva2VyIENoaXAgU2V0IGlzIHNvIHdvcnRoIGxvb2tpbmcgaW50by4gVGhpcyBpcyBhIHBva2VyIGNoaXAgc2V0IHRoYXQgZGVjaWRlZGx5IHN0YW5kcyBvdXQgZnJvbSB0aGUgY3Jvd2QgdGhhbmtzIHRvIHRoZSB1bmlxdWUgbG9vayB0aGF0IGl0IGVtYm9kaWVzLiBBcmUgbG9va3MgaW1wb3J0YW50IHRvIHBva2VyIHBsYXk/IFdlbGwsIHRoZXJlIGlzIGEgcHN5Y2hvbG9naWNhbCBmYWN0b3IgYXQgd29yayBhcyBxdWFsaXR5IGNoaXBzIGNhbiBtYWtlIGEgZ2FtZSBhIGxvdCBtb3JlIGV4Y2l0aW5nLiBBbmQsIHdpdGhvdXQgYSBkb3VidCwgbm8gY2hpcCBzZXQgZW1ib2RpZXMgcXVhbGl0eSBtb3JlIHRoYW4gdGhlIFdvcmxkIFBva2VyIFRvdXIgUG9rZXIgU2V0LgpXZW5uIG1hbiBzY2hvbiBpbmtsdXNpdiBzZWluIHdpbGwgdW5kIG1laHIgRnJhdWVuIGluIGRlbSBTcG9ydCB2ZXJ0cmV0ZW4gc2VoZW4gd2lsbCwgc29sbHRlIG1hbiBuaWNodCBhdXNnZXJlY2huZXQgZGVyIEthdGVnb3JpZSB2b24gU3BpZWxlbiB1bnRlciBkZW5lbiBGcmF1ZW4gYmVzc2VyIHZlcnRyZXRlbiBzaW5kIGlocmUgQmVkZXV0dW5nIGFic3ByZWNoZW4uIApWaWRlbyBQb2tlciBHYW1lIElzIE5lZWQgdG8gRm9yIE9ubGluZSBPbmxpbmUgZ2FtZSBMb3ZlcnMKVW5sZXNzIHlvdSBhcmUgYSBub24gcHJvZml0LCB5b3UgbXVzdCBoYXZlIGEgT3JlZ29uIEdhbWluZyBsaWNlbnNlIHRvIHJ1biBtb25leSBnYW1lcy4gSG9tZSBnYW1lcyBhcmUgcHJpdmF0ZSBhbmQgbm90IHN1YmplY3QgdG8gYSBsaWNlbnNlLiBGcmVlIHBva2VyIGxlYWd1ZXMgYXJlIGV2ZXJ5d2hlcmUgaW4gUG9ydGxhbmQuIEdhbWVzIG91dHNpZGUgb2YgaG9tZXMgZm9yIGFueSB0eXBlIG9mIG1vbmV0YXJ5IG9yIGNhc2ggdmFsdWUgYXJlIGlsbGVnYWwgdW5kZXIgT3JlZ29uIGxhdyB1bmxlc3MgeW91IGhhdmUgYXBwbGllZCBmb3IgYSBub24gcHJvZml0IE1vbnRlIENhcmxvIGxpY2Vuc2UgZnJvbSB0aGUgZGVwYXJ0bWVudCBvZiBqdXN0aWNlIGFuZCBhcmUgZ3JhbnRlZCB0aGUgbGljZW5zZSB0byBob2xkIGFuIGV2ZW50IGZvciBmdW5kIHJhaXNpbmcgZm9yIHRoZSBub24gcHJvZml0IG9yZ2FuaXphdGlvbi4gSXQgYWxzbyByZXF1aXJlcyB0aGF0IG11c3QgdXNlIHN0YWZmIGZyb20gdGhhdCBub24gcHJvZml0IHRvIHJ1biB0aGUgZXZlbnQsIG5vdCB2b2x1bnRlZXJzIG9yIGhpcmUgYSBsaWNlbnNlZCBNb250ZSBDYXJsbyBjb250cmFjdG9yIHRoYXQgaXMgYWxzbyByZWdpc3RlcmVkIHdpdGggdGhlIFN0YXRlIG9mIE9yZWdvbiB0byBydW4gdGhlIGV2ZW50LiBUaGVyZSBhcmUgdmVyeSBzcGVjaWZpYyBsYXdzLCBsaW1pdHMgYW5kIHJ1bGVzIHRoYXQgbXVzdCBiZSBhZGhlcmVkIHRvIHVuZGVyIHRoZXNlIGxpY2Vuc2VzIGFuZCBmYWlsdXJlIHRvIG9idGFpbiB0aGUgcGVybWl0cyBvciBmb2xsb3cgdGhlc2UgcnVsZXMgbWF5IHJlc3VsdCBpbiBhIGZlbG9uaW91cyBhY3QgZm9yIHRob3NlIGludm9sdmVkLiBPcmVnb24gR2FtaW5nIGxpY2Vuc2VzIGFyZSBvbmx5IGdyYW50ZWQgdG8gY2FzaW5vcyBpbiB0aGUgc3RhdGUuICJTb2NpYWwgZ2FtaW5nIiBhbGxvd3MgZm9yIGEgdmVyeSBsaW1pdGVkIHJhbmdlIG9mIHBva2VyIGFuZCBwb2tlciB0b3VybmFtZW50cyBpbiBhIHBsYWNlIG9mIHB1YmxpYyBhY2Nlc3Mgb3IgYnVzaW5lc3MgT05MWSBJRiBhIGxvY2FsIGVuYWJsaW5nIGNpdHkgb3IgY291bnR5IG9yZGluYW5jZSBpcyBpbiBwbGFjZSBhbGxvd2luZyBmb3IgInNvY2lhbCBnYW1pbmciIFRoZSBDaXR5IG9mIFBvcnRsYW5kIGRvZXMgaGF2ZSBhbiBvcmRpbmFuY2UgZm9yICJzb2NpYWwgZ2FtaW5nIiBhbmQgaGFzIGxpY2Vuc2VkIGEgc21hbGwgaGFuZGZ1bCBvZiAic29jaWFsIGdhbWluZyIgY2x1YnMgd2l0aGluIHRoZSBjaXR5IGxpbWl0cy4gSUYgTk8gZW5hYmxpbmcgb3JkaW5hbmNlIGlzIGluIHBsYWNlIHRoZW4gc3RhdGUgbGF3IGFwcGxpZXMgd2hpY2ggcHJvaGliaXRzIGdhbWJsaW5nLCBwb2tlciwgcG9rZXIgZ2FtZXMgb3IgcG9rZXIgdG91cm5hbWVudHMuIChGdWxsIEFuc3dlcikKTm90IG9ubHkgZG8geW91IHdhbnQgYSBmYWJyaWMgdGhhdCB3aWxsIGFsbG93IHNlcnVtcyBhbmQgbG90aW9ucyB0byBzdGF5IG9uIHlvdXIgc2tpbiwgUml2YXMgdGVsbHMgVGhlIFBvc3QsIGJ1dCBzbW9vdGhlciBmYWJyaWNzICAgdGhpbmsgc2lsayAgIGNhbiByZWxpZXZlIHRoZSB0ZW5zaW9uIHRoYXQgY2F1c2VzIHByZW1hdHVyZSB3cmlua2xpbmcuCk1pbGxpb25zIG9mIHBlb3BsZSB0cnVzdCBXZWJub2RlLiBJIHdvcmtlZCB3aXRoIFdlYm5vZGUgaW4gdGhlIHBhc3QgYW5kIGxvdmVkIGhvdyB1c2VyIGZyaWVuZGx5IGl0IHdhcy4gSSBrbmV3IHdoZW4gaXQgd2FzIHRpbWUgdG8gYnVpbGQgbXkgd2Vic2l0ZSwgV2Vibm9kZSB3b3VsZCBiZSBwZXJmZWN0ISBCZWluZyBhIHlvdW5nIGVudHJlcHJlbmV1ciwgSSB3YXMgaGVzaXRhbnQgdG8gYnVpbGQgYSBzaXRlIG9uIG15IG93bi4gClRoZSBuZXh0IGRheSwgeW91IHJlYWxpemUgdGhhdCB5b3UgbWVyZWx5IGFkanVzdGVkIHlvdXIgc2NoZWR1bGUgdG8gaGFuZGxlIGFuIHVuZm9yZXNlZW4gY3Jpc2lzLiAKTGF3cmVuY2UgVGF5bG9yOiBUaGVyZSdzIGp1c3Qgc29tZXRoaW5nIGFib3V0IHdhdGNoaW5nIHRoZXNlIGZvb3RiYWxsIHBsYXllcnMgc2hha2UgaXQgc2FtYmEgc3R5bGUuIFRoZSByZXRpcmVkIGxpbmViYWNrZXIgcHVsbGVkIG9mZiBoaXMgYmVzdCBkYW5jZSB5ZXQsIHRob3VnaCBoZSBzdGlsbCBzZWVtZWQgdG8gYmUgaG9sZGluZyBiYWNrIGEgYml0IGhlIGNhbid0IHF1aXRlIGNvbWUgdG8gdGVybXMgd2l0aCB0aGUgZ3JhY2VmdWwgdHdpc3QgaGlzIGdyaWRpcm9uIGNhcmVlciBoYXMgdGFrZW4uICJUaGVyZSdzIGEgdHdpbmtsZSBpbiB5b3VyIGV5ZSwiIENhcnJpZSBBbm4gbm90ZWQgaGFwcGlseSwgd2hpbGUgVG9tIEJlcmdlcm9uIHByb21pc2VkIHRoYXQgRWR5dGEgU2xpd2luc2thIHdvdWxkIHdlYXIgdGhlIG90aGVyIGhhbGYgb2YgdG9uaWdodCdzIG91dGZpdCBuZXh0IHdlZWsuClRoaXMgaW5mb3JtYXRpb24gaXMgc29sZWx5IGZvciBpbmZvcm1hdGlvbmFsIHB1cnBvc2VzLiBJVCBJUyBOT1QgSU5URU5ERUQgVE8gUFJPVklERSBNRURJQ0FMIEFEVklDRS4gVGhlIHB1YmxpY2F0aW9uIG9mIHRoaXMgaW5mb3JtYXRpb24gZG9lcyBub3QgY29uc3RpdHV0ZSB0aGUgcHJhY3RpY2Ugb2YgbWVkaWNpbmUsIGFuZCB0aGlzIGluZm9ybWF0aW9uIGRvZXMgbm90IHJlcGxhY2UgdGhlIGFkdmljZSBvZiB5b3VyIHBoeXNpY2lhbiBvciBvdGhlciBoZWFsdGggY2FyZSBwcm92aWRlci4gClJpZ2h0ZW91cyBhbmdlciBvZiB0aGUgd2hpdGUgbWFzc2VzIGlzIG5vdCBhdCB0aGUgYmFua2VycyBhbmQgcG9saXRpY2lhbnMgd2hvIHB1dCB1cyBpbiB0aGlzIG1lc3MsIGJ1dCBhdCBNZXhpY2FuIGltbWlncmFudHMuIGlmIEkgY291bGQgaGF2ZSBwcmVkaWN0ZWQgdGhhdCBhIGh1Z2UgcG9ydGlvbiBvZiBhbmdyeSB3aGl0ZSBBbWVyaWNhbnMgd291bGQgaGF2ZSB0aGVpciByYWdlIG1pc2RpcmVjdGVkLCBwZXJoYXBzIEkgY291bGQgaGF2ZSBhbHNvIGtub3duIHRoYXQgdGhlIE9iYW1hIGFkbWluaXN0cmF0aW9uIHdvdWxkIG5vdCBiZSBhYmxlIHRvIHJlc2lzdCB0aGUgbHVyZSBvZiBtaWxpdGFyeSAic29sdXRpb25zIiB0byBwb2xpdGljYWwgYW5kIGVjb25vbWljIHByb2JsZW1zLiAKSGV0ZXJvc2V4dWFsIGZlbWFsZTogU2FtZSwgdGhvdWdoIGl0IHdvcnRoIG5vdGluZyB0aGF0IHRoZXJlIGFyZSBhIGxvdCBvZiBkaWZmZXJlbnQgZHluYW1pY3MgaW4gdGhlIHJlbGF0aW9uc2hpcHMgdGhhdCBhcmUgc2hvd24uIEZvciBleGFtcGxlIHRoZSB0aXR1bGFyIGNoYXJhY3RlciBTdGV2ZW4gYW5kIGhpcyBsb3ZlIGludGVyZXN0IENvbm5pZSBib3RoIG5lZWQgdG8gZmlnaHQgYW5kIGRlZmVuZCB0aGVtc2VsdmVzLCBidXQgU3RldmVuIGlzIGJldHRlciBhdCBoZWFsaW5nIGFuZCBwcm90ZWN0aW5nLCBhbmQgQ29ubmllIGlzIGJldHRlciBhdCBhdHRhY2tpbmcgYW5kIHN0cmF0ZWd5LiBUaGlzIGZsb3dzIG5hdHVyYWxseS4uIApMZW5ueSBUaW1tb25zIGN1dCB0aGUgZW5naW5lIGFuZCB0aGUgbGlnaHRzIG9mIGhpcyBjYXIuIEdlbmUgV2hlbGNoZWwgZGlkIHRoZSBzYW1lIGluIGhpcyBwaWNrdXAuIFRoZSBuaWdodCB3YXMgZGFyayBhbHJlYWR5OyB0aGUgYXJlYSBhcm91bmQgdGhlIHR3byBnYXMgcHVtcHMgaW4gZnJvbnQgb2YgdGhlIHN0b3JlIHdhcyBpbGx1bWluYXRlZCBieSBmbHVvcmVzY2VudCBsaWdodHMuIAoiVGhlIGJlc3QgQUkncyBhYmlsaXR5IHRvIGRvIHN0cmF0ZWdpYyByZWFzb25pbmcgd2l0aCBpbXBlcmZlY3QgaW5mb3JtYXRpb24gaGFzIG5vdyBzdXJwYXNzZWQgdGhhdCBvZiB0aGUgYmVzdCBodW1hbnMsIiBzYWlkIFR1b21hcyBTYW5kaG9sbSwgcHJvZmVzc29yIG9mIGNvbXB1dGVyIHNjaWVuY2UgYXQgQ01VIHdobyBjcmVhdGVkIExpYnJhdHVzIHdpdGggYSBQaEQgc3R1ZGVudCwgTm9hbSBCcm93bi4KUGVvcGxlIGFyZSBub3Qgc2hhcGVkIGxpa2UgYm9tYnMgW0NpdGF0aW9uIE5lZWRlZF0gYW5kIHdvdWxkbiBhcHByZWNpYXRlIGJlaW5nIHN0dWZmZWQgaW50byB0aGUgbWF4aW11bSBwYWNraW5nIGNvbmZpZ3VyYXRpb24uIApEaWVzZSBTZWlkZSBnaWx0IGFscyBtaW5kZXJ3ZXJ0aWcuIApGdWNrIHRoYXQgZGlhbW9uZHMgYXJlIGZvcmV2ZXIgc2hpdC4gCkplIGx1aSBkaXQgaWwgeSBhIHVuIHRydWMgcXVpIGNsb2NoZSwgY29tbWVudCB2b3VzIG5vdXJyaXNzZXogdm91cy4gRWxsZSBtZSBkaXQgRGUgbGEgdmlhbmRlIHRvdXQgbGVzIGpvdXJzLCBldCBhdXRyZXMgcHRlcyAgbGEgY2Fib25hcmEgZXRjLCBndGVhdXggYXUgZ291dGVyLCBldCBkZXMgYm9uYm9ucy4gCkFncmVlZC4gSSByZWFsbHkgZmVlbCB1L3N0cmlrZXRocmVlaXN0YWtlbiB3YXMgYmVpbmcgb3Zlcmx5IHNlbWFudGljLiAKSSd2ZSBjb25uZWN0ZWQgd2l0aCBhIHNwaXJpdCBndWlkZSwgUGFwYSBMZWdiYSwgR3JlZWsgZ29kZGVzcyBIZWJlLCBhbmQgSGluZHUgZ29kZGVzcyBMYWtzaG1pLiBNeSBzcGlyaXQgZ3VpZGUgYW5kIFBhcGEgTGVnYmEgYXJlIG1vcmUgbGlrZSAnYnVkZGllcycuIApNaXJhY3Vsb3VzbHksIEkgZGlkbiBsb3NlIGEgYmFsbCB0aGUgd2hvbGUgZGF5LiBJIGNvbnNpZGVyIGl0IGFzIHNpZ25pZmljYW50IGFzIGEgaG9sZSBpbiBvbmUuLiAKRmxvcmlkYSBCZXR0aW5nIG9uIENhc2lub3Mgd2l0aCBObwpDZSBzb250IGRvbmMgZGVzIGNoYXBwZXMgZHUgamFyZGluLCBkZXMgdHJhbnNmdWdlcywgcXVlIG5vdXMgcmV0cm91dm9ucyBhdWpvdXJkIGVuIHBsZWluZSBuYXR1cmUsIGV4Y2VsbGVudGUgcmFpc29uIHBvdXIgY3JpZXIgaGFybyBjb250cmUsIGNvbW1lIHNpIGRlcyBtb25zdHJlcyBzYXV2YWdlcyBzIHZhZHMgZCB6b28uIE5vbiwgc3JpZXVzZW1lbnQ/IFRhbnQgZXQgc2kgYmllbiBxdSBsIGVuIGNlIGNhcywgZHUgc3Vybm9tIGRlIHBlc3RlLCBkb250IGJuZmljaWUgZ2FsZW1lbnQgbGEgcGh5dG9sYXF1ZSBxdSBmb3J0IGRlIEZvbnRhaW5lYmxlYXUgZGVzIGdhbmdzIGRlIGZvdXMgZnVyaWV1eCB0cmFxdWVudCAgbGEgbW9pbmRyZSBvY2Nhc2lvbiBjb21tZSBzIHMgZCBnaWJpZXIgZGUgcG90ZW5jZS4gCkZJTEU6IFRhbWFyYSBFY2NsZXN0b25lIGlzIHJlcG9ydGVkbHkgY29uc2lkZXJpbmcgcHVyY2hhc2luZyB0aGUgc2Vjb25kIG1vc3QgZXhwZW5zaXZlIGhvbWUgaW4gQW1lcmljYSAgIHRoZSBGbGV1ciBkZSBMeXMgZXN0YXRlIGluIEhvbG1ieSBIaWxscyBmb3IgJDEyNSBtaWxsaW9uLiAKT24gdGhlIG90aGVyIGhhbmQsIGZyZWUgcm9sbCBpcyBzdWNoIGEgY29tcGV0aXRpb24gd2hlcmUgeW91IGNhbiBqb2luIHdpdGhvdXQgYW4gZW50cnkgZmVlLiBIb3dldmVyLCBzb21lIHdlYnNpdGUgcmVxdWlyZXMgbW9uZXkgdG8gZ2V0IGVudHJhbmNlIHRvIHRoZSBnYW1lLiBGcmVlIHJvbGxzIGFyZSBkaWZmZXJlbnQgZnJvbSBzdGFuZGFyZCBwb2tlciB0b3VybmFtZW50LiAKVGhpcyBpcyB0aGUgZmlyc3QgdGltZSBhbiBJbmRpYW4gcG9rZXIgbGVhZ3VlLyB0b3VybmFtZW50IHdpbGwgYmUgdGVsZXZpc2VkIG9uIG5hdGlvbmFsIHRlbGV2aXNpb24uIApUaGlzIHdlZWtlbmQsIHNlZWsgb3V0IHRoaXMgdmljdGltIGltcGFjdCBzdGF0ZW1lbnQsIHJlYWQgaXQsIGFuZCB0aGVuIGRlY2lkZSBuZXZlciB0byB0YWtlIHRoYXQgY2hhbmNlIGFnYWluLiAKIk15IGhvcnNlcy4iIFdoZW5ldmVyIHdlIHdlcmUgb24gYSByb2FkIHRyaXAsIG9yIGhvbmVzdGx5IG9uIGFueSBzb3J0IG9mIGRyaXZlLCBteSBmYW1pbHkgd291bGQgdHJ5IGFuZCBzcG90IGhvcnNlcyBiZWZvcmUgYW55b25lIGVsc2UgZGlkLiBZb3UgaGFkIHRvIHNob3V0ICJNWSBIT1JTRVMhIiBhbmQgdGhlbiBjb3VudCB0aGVtLiAKUmlnb24gY29uZmlybWUgYmllbiBsZSBub3V2ZWF1IHByaW10cmUgZGUgbGEgWlNQLCAiIGxlIGJhc3NpbiAiIHBvdXIgcmVwcmVuZHJlIHNlcyB0ZXJtZXMuIApIYXMgZGVmaW5pdGVseSBsZWFkIHRvIHJlc3VsdHMgc3RyZW5ndGggd2lzZSwgd2hpY2ggSSBhbSB2ZXJ5IGhhcHB5IHdpdGguIEkgYW0gYSBsb3Qgc3Ryb25nZXIgdGhhbiBJIHdhcyBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSB5ZWFyLiBIb3dldmVyLCBJIGhhdmVuIG5vdCBsb3N0IG11Y2ggd2VpZ2h0LCBJIGhhdmUgbG9zdCBhcHByb3hpbWF0ZWx5IDJrZyBzaW5jZSBJIHN0YXJ0ZWQuIEkgd2VpZ2h0IDYya2cgbm93LCBhbmQgSSAxNTkgdGFsbCwgYW5kIEkgZG9uIGhhdmUgdGhhdCBtdWNoIHRvIGxvc2UuIEJ1dCBJIHN0YXJ0aW5nIHRvIHdvbmRlciB3aGV0aGVyIG15IGVmZm9ydHMgYXJlIGRvaW5nIG11Y2guIEFzIGZhciBhcyBJIGNhbiBzZWUgbXkgYm9keSBwcmV0dHkgbXVjaCBsb29rcyB0aGUgc2FtZS4KS0gzIGRyb3BwZWQgYW5kIEkgY29tcGxhaW4gYWJvdXQgaXQgYSBsb3QgYnV0IG5vdCBiZWNhdXNlIG9mIGhvdyBsb25nIGl0IHRvb2sgYnV0IGJlY2F1c2Ugb24gdG9wIG9mIHRoYXQgaXQgc3RpbGwgbHVrZXdhcm0gZ2FyYmFnZS4gSSBmaW5lIHdpdGggd2FpdGluZyBmb3Igd2hhdGV2ZXIgdGhlIFNDIG1tbyB3aWxsIGJlIG9yIG5vdCBiZSB3aGVuZXZlciBpdCBjb21lcyBvdXQgYmVjYXVzZSBJIHJlYWxpemUgaXQgbm90IHF1aXRlIGZvbGxvd2luZyB3aGF0IEkgY29tZSB0byBleHBlY3QgZnJvbSBhIHR5cGljYWwgZGV2ZWxvcG1lbnQgY3ljbGUuLiAKSWYgYW55dGhpbmcsIEZlZCBpcyB0aGUgYmFkIGZyaWVuZCBmb3IgcHV0dGluZyBldmVyeW9uZSBlbHNlIGluIGEgcHJlY2FyaW91cyBzaXR1YXRpb24gd2l0aCBoaXMgb3V0bGFuZGlzaCBzdGF0ZW1lbnQKQmVjYXVzZSB0aGUgYmxpbmRzIHJpc2UgcXVpY2tseSwgYXQgc29tZSBwb2ludCBpbiB0aGUgU05HIHRvdXJuYW1lbnQgeW91IG5lZWQgdG8gYWNjdW11bGF0ZSBjaGlwcy4gCkVWIGlzIHRoZSBwb3J0aW9uIG9mIHRoZSBwb3QgeW91IHdpbiBvbiBhdmVyYWdlIHdoZW4geW91IGFsc28gY29uc2lkZXIgYmV0dGluZyBhbmQgZm9sZGluZy4gU28gaWYgeW91IGhvbGQgdGhlIG51dCBmbHVzaCBvbiB0aGUgcml2ZXIsIGV2ZW4gdGhvdWdoIHlvdXIgZXF1aXR5IGlzIDEwMCUsIHlvdXIgRVYgaXMgbXVjaCBtb3JlIHRoYW4gMTAwJSBpZiB5b3UgaGF2ZSBtb3JlIG1vbmV5IGxlZnQgaW4geW91ciBzdGFja3MgYmVjYXVzZSB5b3Ugd2lsbCB3aW4gd2hhdGV2ZXIgZWxzZSB5b3VyIG9wcG9uZW50IHB1dHMgaW4gdGhlIHBvdC4gQW5kIGlmIHlvdSBoYXZlIGEgdmVyeSB3ZWFrIGhhbmQsIGV2ZW4gdGhvdWdoIHlvdXIgZXF1aXR5IG1pZ2h0IGJlIDUlLCB5b3VyIEVWIG1pZ2h0IGJlIGxvd2VyIHRoYW4gdGhhdCBvciBldmVuIDAlIGFzIHdoZW5ldmVyIHlvdXIgb3Bwb25lbnQgYmV0cywgeW91IGhhdmUgdG8gZm9sZCwgYW5kIGlmIHlvdXIgb3Bwb25lbnQgZG9lc24gYmV0IGFuZCBsZXRzIHlvdSBzaG93IGRvd24sIHlvdSBoYWQgdGhlIHdvcnN0IGhhbmQgYW55d2F5LiAKV2FpdGluZyBhdCB0aGUgZ2F0ZSwgaXQgYmVjYW1lIGNsZWFyIHRoYXQgb3VyIHBsYW5lIHdhcyBtb3N0bHkgZmlsbGVkIHdpdGggT3J0aG9kb3ggSmV3aXNoIGZhbWlsaWVzIGhlYWRpbmcgdG8gSXNyYWVsLiBPbmUgZmFtaWx5IHdhcyBsaXRlcmFsbHkgMzUgcGVvcGxlLiBJIHdhcyBtZXNtZXJpemVkIGJ5IHRoZSBtZW4gaW4gdGhlaXIgc3VpdHMgYW5kIHRvcGhhdHMsIGFuZCB0aGUgeW91bmcgd2l2ZXMgd2l0aCB0aGVpciB3aWdzIGFuZCBjaGlsZHJlbi4gQm9hcmRpbmcgdGhlIHBsYW5lLCBXZW5kaSBhbmQgSSB3ZXJlIHNhdCBpbiB0aGUgbWlkc3Qgb2YgdGhlbSBhbGwuIEEgdmlkZW8gd291bGQgZHJvd24gdGhlbSBvdXQsIHlvdSBzYXk/IFdlbGwgeWVzLCBpZiB0aGUgaW4gZmxpZ2h0IGVudGVydGFpbm1lbnQgd2FzIHdvcmtpbmcsIHdoaWNoIGl0IHdhcyBOT1QuIFdlbmRpIHNhdCBuZXh0IHRvIGEgbWFuIHdobyBhbHRlcm5hdGVseSBsb29rZWQgb3V0IHRoZSB3aW5kb3cgd2hpbGUgY292ZXJpbmcgaGlzIGhlYWQgd2l0aCBhIGJsYW5rZXQgYW5kIHBsYXllZCB0aGUgZHJ1bXMgb24gaGlzIGlQb2QgdG91Y2ggd2l0aCBoaXMgdGh1bWJzLiBTdHJhbmdlbHksIGFsdGhvdWdoIHRoZSBtZW51IHByb21pc2VkIGRpbm5lciB0byBiZSB2ZWdldGFyaWFuIGNhbm5lbG9uaSwgaXQgd2FzIGNvdmVyZWQgaW4gbWVhdCBzYXVjZS4gQW5kIGJyZWFrZmFzdCBpbmNsdWRlZCBwb3JrIHNhdXNhZ2UhIFNlcnZpbmcgcG9yayB0byBhIHBsYW5lIGZ1bGwgb2YgSmV3cyBvbiB0aGVpciB3YXkgdG8gdGhlIE1pZGRsZSBFYXN0IGlzIGEgYml0IG9kZCwgdG8gc2F5IHRoZSBsZWFzdC4gSXQgd2FzIG9mZiB0byBhIHJvY2t5IHN0YXJ0LgpTbyB3aGVuIHdlIGFsbCBnZXQgdG9nZXRoZXIgYW5kIHBsYXllZCBhdCBob21lIHdlIGFsbW9zdCBhbHdheXMgdXNlZCBldmVuIG51bWJlcnMgZm9yIGV2ZXJ5dGhpbmcuIFVuZm9ydHVuYXRlbHksIGl0IHN0aWxsIGNyZWF0ZWQgcXVhcnJlbHMgYW5kIGJpY2tlcmluZyBzbyB3ZSBob3BlZCBtYWtpbmcgdGhpcyBwdXJjaGFzZSB3b3VsZCBoZWxwLi4gClRoZSBvc2NpbGxhdGlvbnMgbWFrZSB5b3VyIGJvZHkgZmVlbCBsaWtlIGl0IHdlaWdocyBtb3JlIGxpa2Ugd2hlbiB5b3UncmUgaW4gYW4gZWxldmF0b3IgYW5kIGl0IHF1aWNrbHkgcmlzZXMgY3JlYXRpbmcgYSBncmVhdGVyIGdyYXZpdGF0aW9uYWwgZm9yY2UgYW5kIHRoZXJlZm9yZSBtb3JlIHdvcmsgZm9yIHRoZSBtdXNjbGVzLCBDb2VsaG8gc2F5cy4gCk5vdCBqdXN0IG9uY2UsIHR3aWNlLiBPbmUgd2FzIGluIERhbGxhcyB3aGVyZSBoZSBsZXQgS2FyaSBMZWh0b25lbiB3YXRjaCBCZW4gQmlzaG9wIGZvciB0b28gbG9uZywgdGhlbiBCaXNob3Agd2VudCBkb3duIGFuZCBpdCBjb3N0IHRoZSBTdGFycyB0aGUgcGxheW9mZnMuLiAKQnV0IG9uIGluY29tZSwgbm90IHRoZWlyIHdlYWx0aENvdW5jaWwgdGF4IG9uIGEgMTdtIGx1eHVyeSBtYW5zaW9uIGluIEJlbGdyYXZpYSwgTG9uZG9uPyAxLDM3Ni4gUGhvdG9ncmFwaDogVG9sZ2EgQWttZW4vQUZQL0dldHR5IEltYWdlc1dlIGtub3cgdGhhdCBnaWFudCBtdWx0aW5hdGlvbmFscyBhcmUgZW5nYWdlZCBpbiBpbmR1c3RyaWFsIHNjYWxlIHRheCBhdm9pZGFuY2UuIFdlIGtub3cgZnJvbSB0aGUgUGFuYW1hIGFuZCBQYXJhZGlzZSBwYXBlcnMgaG93IHNvbWUgaW5kaXZpZHVhbHMgd2lsbCB1c2UgZXZlcnkgb2Zmc2hvcmUgdHJpY2sgdG8gZG9kZ2UgdGF4ZXMuIApVbmRlcnN0YW5kYWJseSwgZXZlcnkgcHVudGVyIGdvZXMgdG8gb25saW5lIGNhc2lub3MgaW4gb3JkZXIgdG8gcGxheSBjYXNpbm8gZ2FtZXM7IGhlbmNlLCBhbHdheXMgc2VlayBjYXNpbm9zIHRoYXQgb2ZmZXIgcmljaCBnYW1lIHNlbGVjdGlvbi4gTW9zdCBvZiB0aGUgcG9wdWxhciBhbmQgd2VsbCBlc3RhYmxpc2hlZCBjYXNpbm9zIGZlYXR1cmUgYXQgbGVhc3QgMTAwIGdhbWVzIHdoaWNoIGFyZSB1c3VhbGx5IHNlcGFyYXRlZCBpbiBzbG90cywgdGFibGUgZ2FtZXMgYW5kIHZpZGVvIHBva2VyIGNhdGVnb3JpZXMuClRoZSBmaXJzdCBwbGF5ZXIgdXNlcyB0aGUgdGhyZWUgb2YgY2x1YnMgaW4gdGhlaXIgZmlyc3QgaGFuZC4gQWZ0ZXIgdGhhdCwgdGhlIG5leHQgcGxheWVyIGNhbiBwbGF5IGFueXRoaW5nIHJhbmtlZCBoaWdoZXIgdGhhbiB0aGUgbGFzdCBoYW5kLiBJZiB0aGUgcGxheWVyIHB1dCBhIHNpbmdsZSBjYXJkLCB0aGUgZm9sbG93aW5nIHBsYXllcnMgbXVzdCBwbGF5IHNpbmdsZSBjYXJkcyB1bnRpbCB0aGUgcm91bmQgaXMgb3Zlci4gCllvdSBtYXkgaGF2ZSBqb2luZWQgaW4gaWdub3JhbmNlIGJ1dCBJIGRvbiB0aGluayB5b3Ugc2hvdWxkIHF1aXQgaW4gaWdub3JhbmNlIGVpdGhlci4gR2l2ZSBpdCBzb21lIHRob3VnaHQsIGFuZCBsaXN0ZW4gdG8gdGhlIHRlYWNoZXIgeW91IHNwb2tlIHdpdGguIApJIGFtIHRoZSBvbGRlc3Qgb2YgdGhlIHNlY29uZCBiYXRjaCAoMTYgeWVhcnMgZnJvbSBmaXJzdCB0byBsYXN0IGJ1dCAxMCB5ZWFycyBiZXR3ZWVuIG1lIGFuZCB0aGUgbmV4dCBvbGRlc3QsIDUga2lkcyB0b3RhbCkgV2UgTE9WRUQgb3VyIGJpZyBzaXN0ZXJzIHdoZW4gd2Ugd2VyZSBsaXR0bGUuIApJdCdzIHRyeWluZyB0byBiZSBnb29kLCBpdCBoYXMgcG90ZW50aWFsLCBidXQgaXQncyBub3QuLiAKV2hhdCBpdCB3aWxsIGRvIGlzIG1ha2UgeW91IGNvbWZvcnRhYmxlIHdpdGggdGhlIGdhbWUgaXRzZWxmLiBJZiB5b3Ugc3BlbmQgeW91ciB0aW1lIGluIHJlYWwgZ2FtZXMgYXNraW5nICdjYW4gSSByYWlzZScgb3IgJ2hvdyBtdWNoIGNhbiBJIGJldCcsIHlvdSdyZSBub3QgZ29pbmcgdG8gc3VjY2VlZC4gCkkgYmVjYW1lIHZlcnkgZGlzY2lwbGluZWQgYXMgSSBzYXcgcHJvZ3Jlc3Npb24gICBsaWZ0aW5nIG1vcmUgd2VpZ2h0LCBwcm9ncmVzc2luZyBpbiBkaXN0YW5jZS9pbnRlbnNpdHkgaW4gY2FyZGlvLCBhbmQgb2YgY291cnNlIHdlaWdodCBsb3NzLkZyb20gdGhlcmUgZmluZCB3aGF0IGVsc2UgeW91IGxpa2UgYW5kIHdvcmtzLCBmb3IgZXhhbXBsZSBJIGJvdWdodCBhIGZpdG5lc3MgdHJhY2tlciBhbmQgdHJhY2sgbXkgc3RlcCBjb3VudCBhbmQgd29ya291dCBpbnRlbnNpdHkgdG8gZ2V0IGFuIGlkZWEgb2YgaG93IG1hbnkgY2Fsb3JpZXMgSSBhY3R1YWxseSBidXJuaW5nLiBJIGFsc28gYmVnYW4gdHJhY2tpbmcgbWFjcm8gbnV0cmllbnRzIGluIG15Zml0bmVzc3BhbCwgbWFraW5nIHN1cmUgdGhhdCBJIGdldHRpbmcgYWxsIG9mIHRoZSBwcm90ZWluIEkgbmVlZCBhbmQgY29uc3VtaW5nIGNhcmJzIGFyb3VuZCBteSB3b3Jrb3V0cy4gSSBhbHNvIHN0YXJ0ZWQgZG9pbmcgaW50ZXJtaXR0ZW50IGZhc3RpbmcgYW5kIHdpbGwgZ28gZm9yIGEgbG9uZyBmYXN0ZWQgd2FsayBkdXJpbmcgdGhlIGRheSwgZXNwZWNpYWxseSBvbiBkYXlzIEkgbm90IHdvcmtpbmcgb3V0LkluIG9yZGVyIHRvIG1ha2UgYSBiaWcgZGlmZmVyZW5jZSBpbiB5b3VyIHdlaWdodCBhbmQgYXBwZWFyYW5jZSB5b3UgbmVlZCB0byBwdXQgYSBsb3Qgb2YgZWZmb3J0IGludG8gY2hhbmdpbmcgeW91ciBsaWZlc3R5bGUgYW5kIGhhYml0cyBhbmQgYWZ0ZXIgeW91IGdldCBvdmVyIHRoZSBpbml0aWFsIGh1bXAsIG1hbnkgcGVvcGxlIGVuam95IGxpdmluZyBhIGhlYWx0aGllciBsaWZlc3R5bGUgYW5kIHNlZSByZWFsIHJlc3VsdHMuLiAKSXQgYSBncmVhdCBpZGVhLCBhbmQgdGhlIG90aGVyIGhhbGYgb2YgdGhlIHRpbWUgdGhlIGdhbWVzIGRvIGp1c3Qgd29yayB3aXRob3V0IGFueSBmaWRkbGluZyBvZiBzZXR0aW5ncyBvciBkb3dubG9hZGluZyBkcml2ZXJzIG9yIHdoYXRldmVyLCBzbyBpdCBnb29kIHRoZW4uIEp1c3Qgd2lzaCB0aGV5IGFsbCBkaWQuIApBbHlzc2EgZW5qb3lzIGJsZW5kaW5nIGhlciBtYWdpY2sgaW50byB0aGUgcG90aW9ucywgbG90aW9ucyBhbmQgaGVhbGluZyBwcm9kdWN0cyB0aGF0IHdlIHNlbGwgYXQgdGhlIEFwb3RoZWNhcnkuRGF3biBoYXMgYmVlbiBhIG1hc3NhZ2UgYW5kIG5hdHVyYWwgdGhlcmFwaWVzIHByYWN0aXRpb25lciBzaW5jZSAyMDEwLiBXaXRoIHF1YWxpZmljYXRpb25zIGluY2x1ZGluZ0NlcmlmaWNhdGUgaW4gUmVsYXhhdGlvbiBNYXNzYWdlQ2VydGlmaWNhdGUgSW5kaWFuIEhlYWQgTWFzc2FnZUNlcnRpZmljYXRlIGluIFRpa2FuZ2EgTWFvcmlEYXduIGlzIGFsc28gdHJhaW5lZCBpbiBBcm9tYXRoZXJhcHksIEhlcmJhbCBNZWRpY2luZSwgLCBDcnlzdGFsLCBTb3VuZCBhbmQgQ29sb3VyIFRoZXJhcGllcy5EYXduIGlzIG91ciByZXNpZGVudCBUYXJvdCByZWFkZXIuIApBdCBUcmlidXRlIENvbW11bml0aWVzLCB3ZSB1bmRlcnN0YW5kIHRoYXQ7IHdoaWNoIGlzIHdoeSB3ZSBkbyBldmVyeXRoaW5nIHBvc3NpYmxlIHRvIG1ha2UgdGhpcyBpbXBvcnRhbnQgc3RlcCB0aGUgcmlnaHQgb25lIGZvciBvdXIgY3VzdG9tZXJzLiBXaXRoIGdyb3VuZGJyZWFraW5nIGlubm92YXRpb24sIG91dHN0YW5kaW5nIGRlc2lnbiBhbmQgYXdhcmQgd2lubmluZyBzZXJ2aWNlLCB3ZSBjYW4gY3JlYXRlIGxhbmRtYXJrIGNvbW11bml0aWVzIHRoYXQgZmFtaWxpZXMgYXJlIHByb3VkIHRvIGNhbGwgaG9tZS4gRXZlcnkgZGF5LCBuZXcgY3VzdG9tZXJzIGFyZSBqb2luaW5nIG91ciBncm93aW5nIGZhbWlseSBvZiBUcmlidXRlIGhvbWVvd25lcnMuIApUaGVyZSBhcmUgcmVhbGx5IG9ubHkgYSBmZXcgb3B0aW9ucywgaWYgeW91IGtub3cgeW91IGhhdmUgYSBnb29kIG9mZmVyIG9uIHRoZSBwcm9wZXJ0eSwgeW91IHB1dCBhIHNob3J0IHRpbWUgZnJhbWUgZm9yIHRoZW0gdG8gcmV2aWV3IGFuZCBpZiB5b3UgaGF2ZSBhbiBhZ2VudCByZXByZXNlbnRpbmcgeW91LCB5b3UgY2FuIGhhdmUgdGhlbSB0ZWxsIHRoZSBvdGhlciBhZ2VudCB5b3UgbGlrZSB0aGUgaG91c2UgYnV0IGFyZSBsb29raW5nIGF0IG90aGVycyBhbmQgeW91IHdlcmUgdGhpbmtpbmcgb2YgcHV0dGluZyBhbiBvZmZlciBvbiBhbm90aGVyIGhvdXNlIGluc3RlYWQgc2luY2UgeW91IGFyZSBlYWdlciB0byBidXkgYSBwcm9wZXJ0eS4KTWVsIEdpYnNvbiB3YXMgd29ydGggJDgwMCBtaWxsaW9uIGJlZm9yZSBoaXMgZGl2b3JjZSBzZXR0bGVtZW50LCB3aGljaCBjdXQgaXQgaW4gaGFsZi4gQW4gYWN0b3IgZnJvbSBJbmRpYSwgU2hhaHJ1a2ggS2hhbiwgd2hvIGhhcyBoaXMgb3duIHByb2R1Y3Rpb24gY29tcGFueSwgaXMgd29ydGggJDYwMCBtaWxsaW9uLiAKQ3VycmVudGx5IHlvdSBhbHJlYWR5IGdldCBzY3Jld2VkIGJ5IHRoZSBhbW91bnQgb2YgZ29sZCB5b3UgZ2l2ZSB1cCBhbmQgbm93IGl0IGJlIGV2ZW4gbW9yZT8gV2h5IGlzIGl0IHRoYXQgd2hlbiB5b3UgZnVsbHkgc3RvbXBpbmcgYSBnYW1lLCB0aGV5IHRyeWluZyB0byBtYWtlIGl0IHRoYXQgbXVjaCBlYXNpZXIgZm9yIGl0IHRvIHN3aW5nIGJhY2suIFlvdSBzaG91bGQgYmUgYWxsb3dlZCB0byBoYXJkIHN0b21wIGlmIHlvdSBqdXN0IHRoYXQgbXVjaCBiZXR0ZXIgYW5kIHRoZXNlIGJvdW50eSBjaGFuZ2VzIGp1c3QgbWFrZXMgaXQgdGhhdCBtdWNoIG1vcmUgZXhlY3V0aW9uIHJlbGlhbnQuIFRoZSBib3VudHkgc3lzdGVtIHdhcyBtZWFudCB0byBiZSBhIHdheSB0byBwcmV2ZW50IHRoZSBmYXN0LCBlYXJseSBzbm93YmFsbHMgd2hpY2ggYmVjb21lIHVuY2F0Y2hhYmxlLCBub3QganVzdCBhIGhhcmQgbmVyZiB0byB0ZWFtcyB0aGF0IGFyZSBzbWFzaGluZy4uIApBc3BlcmdlciBmYWxscyBhbG9uZyB0aGUgQXV0aXN0aWMgc3BlY3RydW0uIFllcywgdGhhdCB3b3VsZCBpbnZvbHZlIHF1YWxpdGllcyBsaWtlIGEgbGFjayBvZiBzb2NpYWwgYXdhcmVuZXNzIG9yIGludGVyZXN0IGluIHRoZSB0aG91Z2h0cyBvciBmZWVsaW5ncyBvZiBvdGhlcnMgdGhhdCB0aGUgYnJvdGhlciBleGhpYml0cy4gCkkgdGhpbmsgdGhlIHNvY2lhbCBwdXNoIHRvIGdldCBtb3JlIHdvbWVuIGludG8gU1RFTSBjb3Vyc2VzIGFuZCBjYXJlZXJzIGlzIGZhbnRhc3RpYyAgIHJpZ2h0aW5nIGEgaGlzdG9yaWMgc29jaWFsIHdyb25nLiBJIGdldCBhbm5veWVkIHdoZW4gdGhlIGltcGxpY2F0aW9uIGlzIHRoYXQgbWFqb3JpbmcgaW4gYW55dGhpbmcgb3RoZXIgdGhhbiBTVEVNIGlzIGEgd2FzdGUgb2YgdGltZSBhbmQgbW9uZXkuIApBZ2luZyBpcyBub3QgYSBkaXNlYXNlLCBpdCBpcyBhIHByb2dyZXNzaXZlIGJpb2xvZ2ljYWwgY2hhbmdlIGFuZCB0aGVyZSBtYXkgYmUgdmFzdCBkaWZmZXJlbmNlcyBpbiB0aGUgaGVhbHRoIG9mIHBlb3BsZSB3aG8gYXJlIGFnZWQgNjUgYW5kIG92ZXIuIE9uZSBvbGRlciBwYXRpZW50IG1heSBub3QgYmUgYWJsZSB0byB0b2xlcmF0ZSBhIG1lZGljYWwgdHJlYXRtZW50IGJlY2F1c2Ugb2YgYWNjdW11bGF0ZWQgY29tb3JiaWRpdGllcywgYnV0IGFub3RoZXIgb2YgdGhlIHNhbWUgYWdlIHdpdGhvdXQgY29tb3JiaWRpdGllcyBtYXkgZWFzaWx5IGRvIHNvLiBEZXNwaXRlIHRoaXMsIEkndmUgb2Z0ZW4gY29tZSBhY3Jvc3MgaW52ZXN0aWdhdG9ycyBpbiBtZWRpY2FsIHJlc2VhcmNoIHdobyd2ZSBhcmJpdHJhcmlseSBsdW1wZWQgZXZlcnlvbmUgYWdlZCA2NSBhbmQgYWJvdmUgaW4gb25lIGdyb3VwLCBpbnN0ZWFkIG9mIHVzaW5nIHRoZSBzYW1lIHNlcXVlbnRpYWwgcGVyaW9kIGFzIHlvdW5nZXIgYWdlIGdyb3Vwcy4gVGhpcyBhdmVyYWdpbmcgY2FuIHJlc3VsdCBpbiB0cmVhdGluZyBhIHJlbGF0aXZlbHkgaGVhbHRoeSA2NSB5ZWFyIG9sZCBwYXRpZW50IGlkZW50aWNhbGx5IHRvIG9uZSBtdWNoIG9sZGVyIG9yIGxlc3MgaGVhbHRoeS4KQ29vbmV5IHNhaWQuLiAKVGhlbiB0aGUgZmx1c2ggZHJhdyBjb21wbGV0ZXMuIApUaGUgZGVhbGVyIGJlZ2lucyB0byBkZWFsIGNhcmRzIHN0YXJ0aW5nIHdpdGggdGhlIHBsYXllciBvbiBoaXMgbGVmdC4gT25lIGNhcmQgaXMgZGVhbHQgdG8gZWFjaCBwbGF5ZXIgaW4gYSBjbG9ja3dpc2UgbW90aW9uLCB3aXRoIHRoZSBkZWFsZXIgbGFzdCBpZiBoZSdzIHBsYXlpbmcsIHVudGlsIGFsbCBwbGF5ZXJzIGhhdmUgNSBjYXJkcyBpbiB0aGVpciBoYW5kcy4gVGhlIGRlY2sgaXMgc2V0IGluIHRoZSBtaWRkbGUgb2YgdGhlIHRhYmxlIHdoZXJlIGV2ZXJ5b25lIGNhbiBzZWUgaXQgc28gdGhhdCBubyBvbmUgcHVsbHMgYSBzaXggZ3VuIGFuZCBzdGFydHMgYWNjdXNpbmcgc29tZW9uZSBvZiBjaGVhdGluZy4uIApMJ2FsZ2VjbyBzaXR1IHNvdXMgbGUgdmlhZHVjIGF1IG5pdmVhdSBkZSBsYSBydWUgUGhpbGlwcGUgZGUgR2lyYXJkIG4nZXN0IHRvdWpvdXJzIHBhcyBlbmxldiwgbWFsZ3IgbGVzIHByb21lc3NlcyBkZSBsYSBtYWlyaWUsIGlsIGducmUgZGVzIG51aXNhbmNlcyBvbGZhY3RpdmVzIChvbiBzZSBkb3V0ZSBwb3VycXVvaSkgZXQgZW5jb3VyYWdlIGxlcyBkcHRzIGRlIHRvdXRlIG5hdHVyZS4gCkJlY2F1c2UgaXQganVtcGVkIG9udG8gYSBib2F0LiAKQW5kIGV2ZXJ5b25lIHRoaW5rcyB0aGF0IGhhbmRsaW5nIGEgcm9tYW5jZSB3aXRob3V0IHJ1aW5pbmcgY2hhcmFjdGVycyBvciB0aGUgc3RvcnkgaXMgc28gZWFzeS4gbmFoLCB0aGF0IHNoaXQgaXMgc3VwZXIgaGFyZCB0byBkbyByaWdodCwgYW5kIHBlb3BsZSBzdGlsbCB3b250IGJlIGhhcHB5IGJlY2F1c2UgaXQgZG9lc250IGZpdCBpbiB3aXRoIHRoZWlyIGlkZWFzIG9mIGhvdyBhIHJvbWFuY2Ugc2hvdWxkIGdvLCBvciB3aGF0IHRoZXl2ZSBzZWVuIGJlZm9yZS4gdGhlcmUgd2lsbCBhbHdheXMgYmUgYSBjcm93ZCBzYXlpbmcgdGhhdCB0aGlzIG9yIHRoYXQgc2hvdWxkIGhhdmUgYmVlbiBkb25lIGJldHRlciwgb3Igc2hvd24gYmV0dGVyIG9yIG9uIGFuZCBvbiBhbmQgb24uCk5vdyB3ZSBuZWVkIHRvIG1ha2Ugc3VyZSB0aGF0LCBldmVuIHRob3VnaCBubyBvbmUga25vd3Mgb25lIGFub3RoZXIsIHRoZXkgY2FuIGF0IGxlYXN0IGNoZWNrIHdoZXRoZXIgc29tZW9uZSBpcyB0ZWxsaW5nIHRoZSB0cnV0aC4gCkFzIHlvdSBjYW4gc2VlLCB3aGVuIHlvdSBsZWF2ZSB5b3VyIGdhbWUgeW91IHdpbGwgYmUgY3JlYXRpbmcgbG90cyBvZiBwcm9ibGVtcyBmb3IgZGlmZmVyZW50IGR1ZGVzIGFuZCB0aGF0IHdpbGwgZGlyZWN0bHkgYWZmZWN0IHRoZSByZWxhdGlvbnNoaXAgb2YgeW91ciB3aXRoIHRoZSByZXN0IG9mIHRoZSBmaXNoIGFyb3VuZCB0aGUgdGFibGUuIFRoZSBiZXN0IHRoaW5nIGlzIHRvIGFic3RhaW4geW91cnNlbGYgKGlmIHlvdSBjYW4pIGFuZCBub3QgZGlzdHVyYiBvdGhlciBwZW9wbGUgZ2FtZS4gVGhleSBhcmUgYWxsIGVudGl0bGVkIHRvIGEgZmFpciBhbmQgaG9uZXN0IGdhbWUgYXMgeW91IGFyZS4gVGhpbmsgYWJvdXQgdGhpcyBiZWZvcmUgbWFraW5nIHlvdXIgbW92ZS4KSSByZWFkaW5nIHRoaXMgd3JvbmcgYnV0LCB0byBtZSwgaXQgbG9va3MgbGlrZSBOQiBMaXF1b3IgcHV0IDE2ME0gYmFjayBpbnRvIGdvdmVybm1lbnQgcG9ja2V0cyBmcm9tIGdlbmVyYXRpbmcgNDI4TS4KQSBjb3VydCBoZWFyZCB5ZXN0ZXJkYXkgdGhhdCBhIHdpdG5lc3Mgc2F3IGhpbSB0YWtlIHRoZSBwdXJzZSBhbmQgdGhlIHRoZWZ0IHdhcyBjYXVnaHQgb24gdGhlIGNsdWIncyBjbG9zZWQgY2lyY3VpdCBmb290YWdlLiAKVGhlIHNlY3VyaXR5IGNvdW5jaWwgaGFzIGJlZW4gZGVsaWJlcmF0aW5nIGl0cyByZXNwb25zZSBhbmQgbWF5IGlzc3VlIGEgbmV3IHJlc29sdXRpb24gYXMgZWFybHkgYXMgdGhpcyB3ZWVrLCBhbHRob3VnaCB0aGVyZSBhcHBlYXIgdG8gYmUgZGl2aXNpb24gYW1vbmcgbWVtYmVycyBvdmVyIGhvdyB0b3VnaCBzYW5jdGlvbnMgc2hvdWxkIGJlLgpJdCBzaG91bGQgbGFzdCBzZXZlcmFsIG1vbnRocywgYnV0IGlmIHRoZSBtaXh0dXJlIHN0YXJ0cyB0byBkcnkgb3V0LCBhZGQgYSBsaXR0bGUgZGlzdGlsbGVkIHdhdGVyIHRvIHJlY29uc3RpdHV0ZSBpdC4gCk92ZXIgdGltZSB5b3UgbWlnaHQgZmluZCB5b3Vyc2VsZiB3YW50aW5nIHRvIGxlYXJuIG1vcmUgYWJvdXQgdGhlIG5hdHVyYWwgd29ybGQgYXJvdW5kIHlvdS4gUGxhbnQsIGFuaW1hbCB0cmFja3MsIGJpcmQgaWRlbnRpZmljYXRpb24gYWxsIGxlYWQgdG8gYSBncmVhdCB1bmRlcnN0YW5kaW5nIG9mIHlvdXIgd29ybGQgYW5kIG9mdGVuIGxlYWRzIHRvIGdhc3AsIGZ1cnRoZXIga25vd2xlZGdlLgpNdWNrLCBUdWxhbGlwIGFuZCBMaXR0bGUgQ3JlZWsgd2lsbCBhbHNvIHNwcmVhZCBiaWdnZXIgZ2FtZXMgb24gRnJpZGF5IGFuZCBTYXR1cmRheXMuIApCYWtpbmcgSW5ncmVkaWVudHNBcyBzb21lIG9mIHlvdSB3aG8gaGF2ZSBzZWVuIG1lIGFyb3VuZCBtYXkga25vdyBJIGxpa2UgYmFraW5nIGFuZCBjb29raW5nLiBXZWxsLCBJIGRvbid0LiBJIGxvdmUgY29va2luZyBhbmQgYmFraW5nIQpEbyB5b3UgdGhpbmsgdGhhdCBhbGwgcHVibGljbHkgdHJhZGVkIE5aIGNvbXBhbmllcyBwdXQgdG9nZXRoZXIgb25seSBwYXkgJDEzME0gaW4gdGF4ZXM/IE9mIGNvdXJzZSBub3QuIElmIHRoZXkgZGlkLCBOWiB3b3VsZCBiZSB1bmFibGUgdG8gb2ZmZXIgZXNzZW50aWFsIHNlcnZpY2VzLiAKRXZlbiBpbiBlYWNoIGdlbnJlLCB0aGVyZSBhcmUgYSBmZXcgb3B0aW9ucyBvZiB3aGF0IGtpbmQgb2YgZ2FtZSB0byBwbGF5LiBJZiB5b3UgaGF2ZSB0aGUgdGltZSB0byBkZXZvdGUgdG8gbGV2ZWxpbmcgdXAgYSBjaGFyYWN0ZXIsIHRoZW4gY2hvb3NlIGEgZ2FtZSB0aGF0IGhhcyBhIGxvd2VyIFhQIGdhaW4gKEV4cGVyaWVuY2UgUG9pbnQpLiAKQnV0IHRoZW4gdGhleSBkZWNpZGVkIHRvIG9wZW4gaXQgdG8gbWFsZSBwb3B1bGF0aW9uLiBidXQgZ3Vlc3Mgd2hhdD8gdGhlIG5hdGlvbiBvZiAiZmVtaW5pc20iIHN0cm9rZSBkb3duLCBhbmQgdGhlIHdob2xlIHNjaG9vbCB0dXJuZWQgYWxsIHRoZWlyIG1hbGUgc3R1ZGVudHMgaW50byBmZW1hbGVzIGJveXMgaW4gb3JkZXIgdG8gbWFrZSB0aGUgZ2lybHMgZmVlbCAic2FmZSIuIApJIGhhdmUgbGl0ZXJhbGx5IGJlZW4gY2FzdWFsbHkgYnJhaW5zdG9ybWluZyB0aGlzIGV4YWN0IGNvbmNlcHQganVzdCB3aXRoaW4gbXkgb3duIGltYWdpbmF0aW9uIGZvciAxNSsgeWVhcnMgYnV0IEkgZGlkbid0IGV2ZXIgYWN0dWFsbHkgZG8gYW55IHJlc2VhcmNoIGludG8gaG93IG90aGVycyBoYXZlIG91dGxpbmVzIGVsZW1lbnQgc3lzdGVtcy4gRm9yIHNvIGxvbmcgSSBjb3VsZG4ndCBxdWl0ZSBmaWd1cmUgb3V0IGV4YWN0bHkgaG93IHRoZSBzZWNvbmRhcnkgZWxlbWVudHMgc2hvdWxkIGZpdCBpbiwgb3Igd2hlcmUgbGlnaHQgYW5kIGRhcmsgd291bGQgZ28uIExvb2tpbmcgYXQgeW91cnMsIGl0J3MgbGlrZSB5b3UndmUgdW5sb2NrZWQgdGhlIHJlc3Qgb2YgdGhlIHBpY3R1cmUgSSBjb3VsZG4ndCBmaWd1cmUgb3V0IG9uIG15IG93bi4gCkxhc3QgeWVhciB3ZSByYWlzZWQgJDIwOCwwMDAgZm9yIG91ciBsb2NhbCBDaGlsZHJlbnMgaG9zcGl0YWwuIApJIGtub3cgdGhpcyBzb3VuZHMgZnVubnksIGJ1dCB0aGluayBhYm91dCBpdCBhIG1pbnV0ZS4gClJlZmxlY3RpbmcgdGhlIHZhcmllZCBsZWlzdXJlIGFuZCB3ZWxsbmVzcyBuZWVkcyBvZiB0aGUgVW5pdmVyc2l0eSBjb21tdW5pdHksIFVDTEEgUmVjcmVhdGlvbiBwcm92aWRlcyBleHRlbnNpdmUgYWNjZXNzIHRvIGEgYnJvYWQgcmFuZ2Ugb2YgcmVjcmVhdGlvbmFsIGFjdGl2aXRpZXMgYW5kIHNlcnZpY2VzLiBUaGUgRGVwYXJ0bWVudCBvZmZlcnMgcHJvZ3JhbW1pbmcgd2hpY2ggZW5jb21wYXNzZXMgdGhlIGNvbXBldGl0aXZlLCBwYXNzaXZlLCBzb2NpYWwsIGN1bHR1cmFsLCBhbmQgaW5zdHJ1Y3Rpb25hbCBhc3BlY3RzIG9mIHJlY3JlYXRpb25hbCBhY3Rpdml0eS4gSW4gYWRkaXRpb24sIFVDTEEgUmVjcmVhdGlvbiBtYW5hZ2VzIDE0IG9mIHRoZSBVbml2ZXJzaXR5J3MgcmVjcmVhdGlvbmFsIGFuZCBhdGhsZXRpYyBmYWNpbGl0aWVzIG9mZmVyaW5nIHJlY3JlYXRpb24sIHNwb3J0LCBhbmQgbnVtZXJvdXMgbXVsdGkgdXNlIG9wdGlvbnMgZm9yIHN0dWRlbnQgYW5kIHVuaXZlcnNpdHkgZXZlbnRzLgpUaGV5IGFyZSBvZnRlbiBlbGRlcmx5LCBtaWRkbGUgY2xhc3MsIHJ1cmFsIG9yIHN1YnVyYmFuLCBhbmQgZ2VuZXJhbGx5IHdhbnQgYSBzbWFsbGVyIGdvdmVybm1lbnQgcHJlc2VuY2UgaW4gdGhlaXIgb3duIGxpdmVzICh0aGV5IGZhbGwgZm9yIHRoZSAiYnJhbmRpbmciIG9mIHRoZSBHT1ApLiAKWWVzLCAiY29lcmNlZCIuIEFuIGVtcGxveWVyIGhhcyBhIGxvdCBvZiBwb3dlciBvdmVyIHlvdSwgYW5kIGhpcyBlbXBsb3llZXMgd2lsbCBkbyB0aGluZ3MgbGlrZSB0aGlzIHRvIG1ha2Ugc3VyZSB0aGV5IHN0YXkgaW4gdGhlIE9QIGdvb2QgZ3JhY2VzLCBzbyB0aGV5IGtlZXAgZ2V0dGluZyBjYWxsZWQgaW4gdG8gd29yay4KQWxtb3N0IGV2ZXJ5IGNvbXBhbnkgaXMgdGFsa2luZyBhYm91dCB0aGVtLiAKVGhlIG9uZXMgaXZlIHZpc2l0ZWQgdGhvdWdoIHdlcmUgYWxsIHZlcnkgcHJvZmVzc2lvbmFsIGFuZCBub3Qgc2hhZHkgYXQgYWxsLiAKSSBzYXcgaGltIHJlZ3VsYXJseSBmb3IgYWJvdXQgYSB5ZWFyIGFuZCBhIGhhbGYuIApBbmQgSSBzYWlkIE9mZmljaWFsIFRyYWNrcywgdGhhdCBkb2VzbnQgbWVhbiBub3QgdXNpbmcgUmVhbCBXb3JsZCBwbGFjZXMuIEdUIFNwb3J0IGlzIG5vdCBvbiBYYm94LCB5ZXMsIGJ1dCBpdHMgc3RpbGwgYSBUaXRhbiBiZWNhdXNlIG9mIGl0cyBtYXNzaXZlIGhpc3RvcnkgYW5kIHNsb3dseSBncm93aW5nIHBsYXllcmJhc2UuIE5GUyBpcyBvbmx5IGEgdGl0YW4gYmVjYXVzZSBvZiBpdHMgSGlzdG9yeSBhbmQgdGhlIGFudGljaXBhdGlvbiB0aGUgbmV4dCByZWxlYXNlIHdpbGwgYmUgbGlrZSB0aGUgZ29vZCBvbGQgZGF5cywgZXZlcnkgc2luZ2xlIHRpbWUuIApUaGUgYXRtb3NwaGVyZSBhbmQgYXJjaGl0ZWN0dXJlIGlzIHByZXR0eSBzbyB5b3UgY2FuIGZvY3VzIG9uIHRoYXQgYSBsb3Qgb2YgdGhlIHRpbWUgaWYgeW91IHdhbnQuRG9uIGhvZyBqYWN1enppIGpldHMgb3IgdGhlIGZhbmNpZXN0IHNob3dlciBmb3IgYSBsb25nIHRpbWUuIApEaWUgTGV1dGUgd29sbGVuIGpldHp0IGF1Y2ggbWlyIEdlbGQgenVzdGVja2VuIHdlaWwgc2llIEFrdGlvbiBndXQgZmFuZGVuIGdsYXViIGljaC4gRWluIG1vZGlzY2hlciBHZXNjaGVmdHNtYW5uIGF1cyBCYWQgVGx6IHN0ZWNrdCBtaXIgYmVpbGV1ZmlnIDEgSHVubmkgenUgdW5kIG1laW50IHZlcnNjaG1pdHp0ICJJY2gga2FubiBtaXIgZ25uZW4gaWNoIGhhYiAxIFN0YXJ0dXAgdm9uIHZlZ2FuZXIgS3NlIGVzIGJvb210IiBBbiBFbmRlIGhhYmUgaWNoIDQ2MCBFdXJvIHBsdXMuIERhIHNpZWh0IG1hbiBkYXNzIGVzIHNpY2ggYXVzemFobHQgd2VubiBtYW4gU29saWRhcml0dCB1bmQgWml2aWxjb3VydGFnZSB6ZWlndC4gCkJ1dCwganVzdCBmb3IgZGlzY3Vzc2lvbiBwdXJwb3NlcywgbGV0J3Mgc2F5IHdlIGNhbiBpZGVudGlmeSBhIHNsb3QgbWFjaGluZSB0aGF0IGhhcyBhIGxvbmcgdGVybSByZXR1cm4gb2YgOTclIChhIDMlIGNhc2lubyBlZGdlKSBhbmQgaXQgcmVxdWlyZXMgMyBxdWFydGVycyBwZXIgc3Bpbi4gCk9mZmVyaW5nIGEgYnJvYWRlciByYW5nZSBvZiBnb29kcyBhbmQgc2VydmljZXMgaXMgdGhlIG5hbWUgb2YgdGhlIGdhbWUgaW4gcmV0YWlsIGFzIGNvbnN1bWVycyBkZW1hbmQgbW9yZSBleHBlcmllbmNlcyBhcyB0aGV5IHNob3AuIApJIGhhdmUgbXkgc3VzcGljaW9ucyB0aGF0IHRoZSBzdGFmZiBjb3VsZCBwb3NzaWJseSBoYXZlIGJlZW4gaW52b2x2ZWQgaW4gYm90aCBjYXNlcywgZXNwZWNpYWxseSB3aXRoIHRoZSBzY2FuZGFsIHN1cnJvdW5kaW5nIFNldW5ncmkgY2x1YiBpbiBHYW5nbmFtIGhhcHBlbmluZyByaWdodCBub3cuLiAKSSdtIGFyZ3Vpbmcgc2F5aW5nIEkgZG9uJ3QgTkVFRCBpdCBmb3IgcGl6emEgSSBqdXN0IGxpa2UgaXQgd2l0aCBwaXp6YS4gV2UgZ2V0IHRvIHRoZSBwYXJ0eSBhIGxpdHRsZSBsYXRlIGFuZCBoZXIgaHVzYmFuZCBpcyB3YWxraW5nIGluIHdpdGggcmFuY2ggYW5kIEkgc2VlIGEgdGFibGUgZnVsbCBvZiBwaXp6YXMuIApPbWVnYSAzIEZpc2ggb2lsIHJlZHVjZXMgdHJhdW1hdGljIGJyYWluIGluanVyeSB0cmF1bWEKV2l0aCBvdmVyIDE4LDAwMCBlc3RpbWF0ZWQgbmV3IGNhc2VzIG9mIHByb3N0YXRlIGNhbmNlciB0byBiZSBkaWFnbm9zZWQgaW4gMjAxNiwgaXQgaGFzIG5ldmVyIGJlZW4gbW9yZSBpbXBvcnRhbnQgZm9yIG1hbGVzIHRvIGtlZXAgdGhpcyBzeW1wdG9tbGVzcyBkaXNlYXNlIGZyb250IG9mIG1pbmQuLiAKSGUgd2FzIG15IGJlc3QgZnJpZW5kLiBJIHNob3VsZCBoYWQgYW5vdGhlciAxMCB5ZWFycyB0byBiZSB3aXRoIGhpbS4uIApIb3cgZG8geW91IGdldCBhIEFDIFRyYW5zaXQgWW91dGggQ2xpcHBlciBDYXJkCiA3IHBvaW50cyAgc3VibWl0dGVkIDE3IGhvdXJzIGFnb015IHdpZmUgd2FzIGFsd2F5cyBhIGdvb2QgR2VybWFuIGEgZGlkbid0IHJlYWxseSBjb21wbGFpbiBhYm91dCBpdCBhbmQgbWUgYXMgYSBmb3JlaWduZXIgYml0Y2hlZCBhYm91dCBpdCBzaW5jZSBkYXkgb25lLiAKUG9rZXIgZG9lc24gcmVhbGx5IHdvcmsgdGhhdCB3YXkuIApXaGF0IHdlIGFyZSBmYWNpbmcgaXMgYSBiYW5rcnVwdGN5IG9mIGlkZWFzLCBhIGdvdmVybmluZyBjbGFzcyBjb3ZlcmluZyB0aGUgcG9saXRpY2FsIGFuZCBtaWxpdGFyeSBzcGVjdHJ1bSB0aGF0IGNhbid0IGFzayB0aGUgcmlnaHQgcXVlc3Rpb25zIGFuZCB0aGVyZWZvcmUgaXMgaW4gbm8gcG9zaXRpb24gdG8gZ2V0IHRoZSByaWdodCBhbnN3ZXJzLi4gCkl0IGlzIGltcG9zc2libGUgdG8gbGl2ZSB3aXRob3V0IHRha2luZyB0aGUgbGlmZSBvZiBzb21ldGhpbmcgZWxzZSwgd2hldGhlciBwbGFudCBvciBhbmltYWwuIApMZWFybmluZyB0byBlc3RpbWF0ZSBhbmQgYW50aWNpcGF0ZSB0aGUgb3Bwb25lbnQgb3B0aW9ucyB1c2luZyBhbGwgYXZhaWxhYmxlIGluZm9ybWF0aW9uIChkZWNrIGNvbXBvc2l0aW9uLCB1bnRhcHBlZCBtYW5hLCBib2FyZCBzdGF0ZSwgZXRjKSBhbmQgdXNpbmcgdGhhdCBrbm93bGVkZ2UgdG8gcmVkdWNlIChidXQgbmV2ZXIgZWxpbWluYXRlKSB1bmNlcnRhaW50eS4gClRoZSB2aWRlbywgd2hpY2ggbGF1bmNoZWQgdG8gaGVyIFlvdVR1YmUsIFR3aXR0ZXIsIEluc3RhZ3JhbSBhbmQgRmFjZWJvb2sgY2hhbm5lbHMsIGZlYXR1cmluZyBhbiBhbmltYXRlZCBjaGFyYWN0ZXIgdW5kZXJnb2luZyBhIHRyYW5zZm9ybWF0aW9uIG9mIHNvbWUgc29ydC4KVGhpcyBjb25qdW5jdGlvbiBvZiBhbiBpbW1lbnNlIG1pbGl0YXJ5IGVzdGFibGlzaG1lbnQgYW5kIGEgbGFyZ2UgYXJtcyBpbmR1c3RyeSBpcyBuZXcgaW4gdGhlIEFtZXJpY2FuIGV4cGVyaWVuY2UuIFRoZSB0b3RhbCBpbmZsdWVuY2UgICBlY29ub21pYywgcG9saXRpY2FsLCBldmVuIHNwaXJpdHVhbCAgIGlzIGZlbHQgaW4gZXZlcnkgY2l0eSwgZXZlcnkgU3RhdGVob3VzZSwgZXZlcnkgb2ZmaWNlIG9mIHRoZSBGZWRlcmFsIGdvdmVybm1lbnQuIApPdXIgc3RhZmYgaXMgZnJpZW5kbHkgYW5kIGtub3dsZWRnZWFibGUgYWJvdXQgdGhlIGdhbWVzIHdlIGRlYWwgc28gZXZlbiB0aGUgbm92aWNlIHBsYXllciBjYW4gaGF2ZSBhIGdyZWF0IHRpbWUgYXQgb3VyIGV2ZW50cy4gV2UgaGF2ZSB3b3JrZWQgY2FzaW5vIHBhcnRpZXMgZm9yIENNVyBSZWFsIEVzdGF0ZSwgQ29vayBHTSBTdXBlcnN0b3JlLCB0aGUgU2FnaW5hdyBDaGFtYmVyIG9mIENvbW1lcmNlLCB0aGUgQmF2YXJpYW4gSW5uLCBETUwgTWFuYWdlbWVudCwgdGhlIFZhc3NhciBjbGFzcyBvZiA4NCBjbGFzcyByZXVuaW9uLCB0aGUgRnJhbmtlbm11dGggVGVhY2hlcnMgUHJvZmVzc2lvbmFsIE9yZ2FuaXphdGlvbiwgYXMgd2VsbCBhcyBtYW55IGJpcnRoZGF5IGFuZCBncmFkdWF0aW9uIHBhcnRpZXMuIApEZW1vY3JhdHMgYmVjYW1lIHVuY29tZm9ydGFibGUgYWJvdXQgdGhlIG5vdGlvbiBvZiBhIGNvIHByZXNpZGVuY3kgYW5kIE1yIENsaW50b24ncyB0cnVtcGV0aW5nIG9mIGhpcyBvd24gYWNoaWV2ZW1lbnRzIHVuZGVyY3V0IGhpcyB3aWZlJ3MgY2xhaW1zIG9mIGRlZXAgZm9yZWlnbiBwb2xpY3kgZXhwZXJpZW5jZSBnYWluZWQgaW4gdGhlIFdoaXRlIEhvdXNlLgpIZWxsbywgbXkgTG9yZC4gICBJIHByb25vdW5jZS4KQ29uZHVjdCB5b3VyIGJ1c2luZXNzIGluIG9uZSBvZiBvdXIgd2VsbCBhcHBvaW50ZWQgQ29uZmVyZW5jZSBNZWV0aW5nIFJvb21zIGFuZCBlbmpveSBvdXIgY29tcGxpbWVudGFyeSAyNC83IEJ1c2luZXNzIENlbnRyZSBhbG9uZyB3aXRoIGEgaGlnaCBzcGVlZCBXaSBGaSB0aHJvdWdob3V0IHRoZSBlbnRpcmUgaG90ZWwuIFNhbXBsZSBhIGxhcmdlIHZhcmlldHkgb2YgZmxhdm9ycyBldmVyeSBtb3JuaW5nIGF0IFRoZSBBZGphcmEgUmVzdGF1cmFudCBicmVha2Zhc3QgYnVmZmV0IGhvc3RlZCBieSBvdXIgZXhjZXB0aW9uYWwgRXhlY3V0aXZlIENoZWYgSXJha2xpIEFzYXRpYW5pLiBEb24gZ28gYmFjayB0byB5b3VyIHJvb20gd2l0aG91dCBzYXZvcmluZyBhbiBhZnRlciB3b3JrIGNvY2t0YWlsIHByZXBhcmVkIGJ5IG91ciBxdWFsaWZpZWQgbWl4b2xvZ2lzdHMgYXQgVGhlIEJpc2N1aXQgQmFyLiAKVGhpcyB3ZWVrLCB3aGVuIHBlb3BsZSBpbiBjaHVyY2ggYXNrLCAiQXJlIHlvdSBnb2luZyB0byB2b3RlPyIgd2UgbXVzdCBub3QgcmVwbHksICJObywgYnV0IEkgYW0gaGVyZS4iIEJlaW5nIGhlcmUgYW5kIGJlaW5nIGluIGEgcm91dGluZSBhbmQgYSBydXQgZG9lcyBub3QgbWVhbiB5b3UgYXJlIGZhaXRoZnVsLCBub3IgZG9lcyBhY3Rpb24gZm9yIHRoZSBzYWtlIG9mIGFjdGlvbiBtYWtlIHlvdSBvbiBmaXJlIGZvciBHb2QuClByb3ZpZGUgeW91IC4gQ2hhb3MgVGhlb3J5IGluIHRoaW5nLiBXaGVuIGFwcGxpZWQgdG8gUm91bGV0dGUsIFNib2JldCBDYXNpbm8gYSBwZXJzb24gc2ltaWxhciBmaW5kaW5ncy4gCkQgQ2FyYiBCYWxhbmNlIGlzIGEgcGVsbGV0LCBhcyB5b3Uga25vdywgYW5kIHBlcmhhcHMgdGhhdCBjb3VsZCBoYXZlIGNvbnRyaWJ1dGVkIHRvd2FyZCB0aGUgcHJvYmxlbS4gCkkgY2FuIHRlbGwgeW91IG9uZSB0aGluZywgeW91IG1pZ2h0IGhhdmUgYSBodWdlIG51bWJlciBvZiBjaG9pY2VzIHdhaXRpbmcgZm9yIHlvdS4gQnV0IHlvdSBtaWdodCBiZSB2ZXJ5IGNvbmZ1c2VkIGFib3V0IHRoZSByaWdodCBwaWNrcy4gQmFkIEJlYXQgUG9rZXIgQ2FyZCBQcm90ZWN0b3IgaXMgb25lIG9mIHRoZSBiZXN0IHBvc3NpYmxlIHByb2R1Y3RzIGF2YWlsYWJsZSBmb3IgdGhlIHBva2VyIHBsYXllcnMgYXJvdW5kLiAKSXQncyBhIG11Y2ggbmVlZGVkIGJyZWFrIGFzIFBhY3F1aWFvIGh1cnJpZWQgYmFjayB0byB0aGUgUGhpbGlwcGluZXMgYWZ0ZXIgaGlzIGZpZ2h0IGFuZCBwb3N0cG9uZWQgaGlzIGhvbGlkYXkuIEhpcyBob21lIHRvd24gd2FzIGhpdCByaWdvcm91c2x5IGJ5IHN0b3JtcyBhbmQgZmxvb2RzLiBIaXMgTW90aGVyIHdhcyBhbHNvIHRha2VuIHRvIGhvc3BpdGFsIGFmdGVyIGZhaW50aW5nIGF0IHRoZSBuZXdzIG9mIGhlciBzb25zIGxvc3MuIApBQ0NVRUlMIGV0IFBMQU4gRFUgU0lURSAxLiBJbnN0aXR1dCBkZSBEdmVsb3BwZW1lbnQgZW4gQ3JhdGl2aXQgZXQgZW4gUCAxLiAKV2hlbiB5b3VyIG1pbmQgaXMgc3Bpbm5pbmcgYmVmb3JlIHlvdSBnbyB0byBzbGVlcCwgdHJ5IHVzaW5nIHRoZSB0ZWNobmlxdWVzIHlvdSB1c2VkIHRvIG1lZGl0YXRlIHRvIGZhbGwgYXNsZWVwLiBJdCB3b3Jrcy4KRWl0aGVyIG11cmRlcmVkIG9yIGl0IGEgY2FzZSBvZiBvbmUgb2YgdGhlIG1lbiBnYXZlIGhlciBoZXJvaW4gdGhhdCwgdW5iZWtub3duc3QgdGhlbSB0aGVtLCB3YXMgbGFjZWQgd2l0aCBGZW50YW55bCBhbmQgc2hlIGRpZWQuIApCZSBwbGVhc2VkIHRoYXQgeW91IGhhdmUgeWV0IGFub3RoZXIgb3Bwb3J0dW5pdHkgdG8gaW1wcm92ZSB5b3Vyc2VsZi4gRWFjaCB0aW1lIHlvdSBkbyB0aGlzLCB5b3Ugc3RhcnQgdG8gZmlyc3QgZGV2ZWxvcCB0aGUgbWluZHNldCB0aGF0IGl0IHRoZSBsb25nIHRlcm0gY2hhbmdlIGluIHlvdXJzZWxmIHRoYXQgaXMgaW1wb3J0YW50OyBzb21lIGNhbGwgdGhhdCB0aGUgZ3Jvd3RoIG1pbmRzZXQuIApGb3IgeWVhcnMsIEFtYXpvbidzIGFkIG9mZmVyaW5ncyB3ZXJlIGEganVtYmxlIG9mIHNlcnZpY2VzIHdpdGggZGlmZmVyZW50IGFjcm9ueW1zIGFuZCBydW4gYnkgc2VwYXJhdGUgdGVhbXMuIApbQnkgdGhlIHdheSBhIHZlcnkgc2tpbGxlZCBtZWNoYW5pY2FsIGVuZ2luZWVyIG1pZ2h0IG1ha2UgJDVrL3lyIGluIDE5MTA7IGEgZGVudGlzdCwgYWJvdXQgJDIuNWssIGFuZCB0aGUgYXZlcmFnZSB3b3JrZXIgYWJvdXQgJDQwMCBhIHllYXIuIApTdGVwIG91dHNpZGUgdG8gMTUgTVBIIHdpbmQsIHNub3csIGFuZCA0MCUgaHVtaWRpdHkgYW5kIHlvdSB3aWxsIGJlIENPTERFUiB0aGFuIHdpdGhvdXQgdGhhdCBzd2VhdGVyLiAKQnkgcmVnaXN0ZXJpbmcgeW91ciB0cmF2ZWwgd2l0aCBTdHVkeSBPdmVyc2VhcyB5b3UgYmVjb21lIHBhcnQgb2YgYW4gaW50ZWdyYXRlZCBzdXBwb3J0IGZyYW1ld29yayB0aGF0IGFzc2lzdHMgd2l0aCBmYWN1bHR5IGFwcHJvdmFscywgZnVuZGluZyBvcHRpb25zIHN1Y2ggYXMgc2Nob2xhcnNoaXBzIGFuZCBPUyBIZWxwIGxvYW5zLCBhbmQgaW5jcmVhc2VzIHlvdXIgc2FmZXR5IG92ZXJzZWFzIGJ5IGxldHRpbmcgdGhlIFVuaXZlcnNpdHkgb2YgQWRlbGFpZGUga25vdyB3aGVyZSB5b3UgYXJlIGFuZCB3aGF0IHlvdSdyZSBkb2luZy5OZXcgQ29sb21ibyBQbGFuIFNjaG9sYXJzaGlwIFJlY2lwaWVudHNUaGUgQ29tbW9ud2VhbHRoIEdvdmVybm1lbnQgcHJvdmlkZXMgdHJhdmVsIGluc3VyYW5jZSBmb3IgcmVjaXBpZW50cyBvZiB0aGUgTmV3IENvbG9tYm8gUGxhbiBTY2hvbGFyc2hpcCBmb3IgdGhlIGR1cmF0aW9uIG9mIHRoZSBwcm9ncmFtLiBDb3ZlciBjYW4gYmUgYXJyYW5nZWQgdGhyb3VnaCB0aGUgUHJvZ3JhbSB0cmF2ZWwgcHJvdmlkZXIgZm9yIG90aGVyIHRyYXZlbCBpbiBjb25qdW5jdGlvbiB3aXRoIHRoZSBwcm9ncmFtLiAKJydJIGNvdWxkIG5ldmVyIGF0IHRoaXMgdGltZSB0ZWxsIGFueW9uZSB0aGF0IHRoaXMgaGFkIGhhcHBlbmVkLCcnIE1yIFBhcm1ldGVyIHRvbGQgcG9saWNlIGFib3V0IHNlcmlvdXMgYW5kIGh1bWlsaWF0aW5nIHNleHVhbCBpbmNpZGVudHMgYXQgdGhlIHByZXNieXRlcnkuIApUZWxsaW5nIHNvbWVvbmUgdGhhdCB0aGV5IG1lc3NlZCB1cCBpc24gaW5hcHByb3ByaWF0ZSwgaXQgYXR0ZW1wdGluZyB0byB0ZWFjaCBvciByZWluZm9yY2UgYSBsZXNzb24uLiAKTG9iYnlpc3RzPyBzYXlzIFNlbmF0b3IgUnVzcyBGZWluZ29sZCAoRCBXSSksIHRoZSBvbmx5IERlbW9jcmF0aWMgU2VuYXRvciB0byBub3Qgc3VwcG9ydCB0aGUgYmlsbCBhbmQgdGhlIHJlYXNvbj8gaXQgd2lsbCBkbyBub3RoaW5nIHRvIHByb3RlY3QgdXMgZnJvbSB0aGUgc29ydCBvZiBXYWxsIFN0LiBQcmFjdGljZXMgIGxpa2UgYnVuZGxlZCBkZXJpdmF0aXZlcyBhbmQgZXhjZXNzIGludGVyZXN0IHJhdGVzIG9uIG1vcnRnYWdlcyBhbmQgY3JlZGl0IGNhcmRzICB0aGF0IGJyb3VnaHQgYWJvdXQgdGhlIEdyZWF0IFJlY2Vzc2lvbi4gCldoZW4gYXNzZXNzaW5nIHRoZSBhcHBsaWNhYmlsaXR5IG9mIHJlc3VsdHMgYmFzZWQgb24gZ3JvdXAgYXZlcmFnZXMgdG8gaW5kaXZpZHVhbCBhdGhsZXRlcywgbm9uZSBvZiB0aGUgc2FtcGxlIHNob3dlZCBhbiAiYXZlcmFnZSIgcmVzcG9uc2UgKHdpdGhpbiAxIFNEIG9mIHRoZSBtZWFuKSB0byBwcmVzc3VyZSBhY3Jvc3MgYWxsIHRocmVlIGRlY2lzaW9uIG1ha2luZyB0YXNrcy5Db25jbHVzaW9uOiBUaGVyZSBhcmUgdGhyZWUgcG9pbnRzIG9mIGNvbmNsdXNpb24uIEZpcnN0LCBhbiBpbW1lZGlhdGUgc2NpZW50aWZpYyBwb2ludCB0aGF0IGhpZ2hsaWdodHMgYSBmYWlsdXJlIG9mIHRyYW5zZmVyIG9mIHdvcmsgcmVwb3J0ZWQgZnJvbSBub25lbGl0ZSBhdGhsZXRlcyB0byBlbGl0ZSBhdGhsZXRlcyBpbiB0aGUgYXJlYSBvZiBkZWNpc2lvbiBtYWtpbmcgdW5kZXIgcHJlc3N1cmUuIAoxMDAlLiBZb3UgaGFkIHRvIGJlIGJvcm4gaW50byB0aGUgcmlnaHQgdW5pdmVyc2UgYXQgdGhlIHJpZ2h0IHRpbWUgaW4gdGhlIHJpZ2h0IGxvY2F0aW9uYWwgYW5kIGdyb3cgdXAgaW4gdGhlIHJpZ2h0IGhvdXNlaG9sZCBhbmQgcGFydGljaXBhdGUgaW4gdGhlIHJpZ2h0IGFjdGl2aXRpZXMgdGhhdCBsZWQgeW91IHRvIHNpdCBhdCB0aGUgcmlnaHQgdGFibGUgYXQgdGhlIHJpZ2h0IHRpbWUgYW5kIGdldCBkZWFsdCB0aGUgcmlnaHQgY2FyZHMgd2l0aCB5b3VyIG9wcG9uZW50KHMpIGFsc28gZ2V0dGluZyBkZWFsdCB0aGUgcmlnaHQgY2FyZHMuIEFsbCBvZiB0aGUgIm5vbiBsdWNrIiBjaG9pY2VzIHlvdSBwdXQgaW50byBtYWtpbmcgdGhlIGNvcnJlY3QgZGVjaXNpb24gdG8gZXh0cmFjdCBtYXhpbXVtIHZhbHVlIG9yIGxvc2UgbWluaW1hbGx5IHdhcyBhIHByb2R1Y3Qgb2YgeW91ciBiaXJ0aCwgZ2VuZXMsIHBhcmVudHMsIGVudmlyb25tZW50LCBhbmQgc3ViY29uc2Npb3VzOyAieW91IiBoYXZlIGFsbW9zdCBubyBwYXJ0IGluIGFueSBvZiB0aGF0LiAKMTUwNTUsIEJFTCBBSVIsIENBTElGT1JOSUEgICBUdWVzZGF5IERlY2VtYmVyIDQsIDIwMTIuIEZJTEUgUEhPVE8gZGF0ZWQgQXByaWwgMjAwNy4gRklMRTogVGFtYXJhIEVjY2xlc3RvbmUgaXMgcmVwb3J0ZWRseSBjb25zaWRlcmluZyBwdXJjaGFzaW5nIHRoZSBzZWNvbmQgbW9zdCBleHBlbnNpdmUgaG9tZSBpbiBBbWVyaWNhICAgdGhlIEZsZXVyIGRlIEx5cyBlc3RhdGUgaW4gSG9sbWJ5IEhpbGxzIGZvciAkMTI1IG1pbGxpb24uIFRoZSBoZWlyZXNzIGRhdWdodGVyIG9mIEZvcm11bGEgdHR5Y29vbiBCb24gQmVybmllIEVjY2xlc3RvbmUgc2VlbXMgdG8gYmUgcGFydGljaXBhdGluZyBpbiBzb21lIHNpYmxpbmcgcml2YWxyeSBhZnRlciBoZXIgeW91bmdlciBzaXN0ZXIgYm91Z2h0IHRoZSBtb3N0IGV4cGVuc2l2ZSBob21lIGluIEFtZXJpY2EsIFRoZSBNYW5vciwgZm9yICQ4NSBtaWxsaW9uLiBPUklHSU5BTCBDQVBUSU9OOiBNZXRybyBOZXR3b3JrcyBmb3VuZGVyICBhbmQgaGlzIGZvcm1lciB3aWZlIFN1emFubmUgaGF2ZSBqdXN0IGxpc3RlZCB0aGVpciBCZWwgQWlyIG1hbnNpb24gZm9yIHNhbGUgYXQgJDEyNSBtaWxsaW9uLiBUaGUgbWFuc2lvbiBpcyBvbiB0aGUgbWFya2V0IGJlY2F1c2UgU2FwZXJzdGVpbiwgbm93IGEgbGFyZ2Ugc2hhcmVob2xkZXIgb2YgV2VzdHdvb2QgT25lIHN0b2NrLCBhbmQgaGlzIHdpZmUgcmVjZW50bHkgZGl2b3JjZWQuIFN1emFubmUgU2FwZXJzdGVpbiBnb3QgdGhlIGhvdXNlIGluIHRoZSBkaXZvcmNlLCBhbmQgbm93IGhhcyBwdXQgaXQgb24gdGhlIG1hcmtldC4gTW9kZWxlZCBhZnRlciBWZXJzYWlsbGVzIGFuZCBvdGhlciBGcmVuY2ggcGFsYWNlcywgdGhlIG1hbnNpb24gbWVhc3VyZXMgZWl0aGVyIDM1LDA0NiBzcXVhcmUgZmVldCAoYWNjb3JkaW5nIHRvIHRoZSBMb3MgQW5nZWxlcyBDb3VudHkgQXNzZXNzb3JzIG9mZmljZSkgb3IgNDUsMDAwIHNxdWFyZSBmZWV0IChhY2NvcmRpbmcgdG8gdGhlIFdhbGwgU3RyZWV0IEpvdXJuYWwuKSBGZWF0dXJlcyBpbiB0aGUgbWFuc2lvbiBpbmNsdWRlIEl0YWxpYW4gbWFyYmxlIHdhbGxzLCBGcmVuY2ggbGltZXN0b25lIGZsb29ycywgZ29sZCBlbWJvc3NlZCBsZWF0aGVyIHdhbGwgY292ZXJpbmdzLCBnb2xkIGxlYWYgY3Jvd24gbW9sZGluZ3MsIGEgYmFsbHJvb20gd2l0aCBjZWlsaW5nIGZyZXNjb2VzLCBhIGxpYnJhcnkgd2l0aCBhIGZpcnN0IGVkaXRpb24gYm9vayBjb2xsZWN0aW9uLCB0d28ga2l0Y2hlbnMsIGFuZCBhIDUwIHNlYXQgc2NyZWVuaW5nIHJvb20sIHRoZSBKb3VybmFsIHJlcG9ydGVkLgoiSW4gdGhlIGNvbnRleHQgb2YgdGhlIFBsZWRnZSwgdGhlIHN0YXRlbWVudCB0aGF0IHRoZSBVbml0ZWQgU3RhdGVzIGlzIGEgbmF0aW9uICJ1bmRlciBHb2QiIGlzIGFuIGVuZG9yc2VtZW50IG9mIHJlbGlnaW9uLiBJdCBpcyBhIHByb2Zlc3Npb24gb2YgYSByZWxpZ2lvdXMgYmVsaWVmLCBuYW1lbHksIGEgYmVsaWVmIGluIG1vbm90aGVpc20uIAo5IE1hciBOZWlsIFN0cmF1c3MgRGllIFBlcmZla3RlIE1hc2NoZSBFYm9vay4gClRoaXMgcGVyc29uIGhhZCB0byBjb21lIHVwIHdpdGggdGhhdCBtb25leSBzaW5jZSB0aGUgaW5zdXJhbmNlIGRpZG4ga2ljayBpbi4gSWYgeW91IGhhdmUgdGhlICQxMDAwIGluIGFuIGVtZXJnZW5jeSBmb3VuZCBJIHdvdWxkIGdvIGFoZWFkIGFuZCBkbyB0aGF0IGJ1dCBpZiB5b3UgZG9uIFNUSUNLIFRPIFdIQVQgWU9VIEhBVkUuLiAKSGlzdG9yaWNhbCBpbmVydGlhLiAKQ2hvb3Npbmcgc2lkZXMgd2lsbCBvcGVuIHRoZSBkb29ycyB0byB0aGUga2luZCBvZiBicmlnYWRpbmcgYW5kIGhhcmFzc21lbnQgeW91IGRvbiB3YW50Li4gClNvIGZvciB0aGUgZnVja2VkIHBhcnQgb2YgdGhlIGFuc3dlci4KSSBkb24gcmVhbGx5IGtub3cgaG93IHRvIGV4cGxhaW4gaXQgYW5kIEkgZG9uIHRoaW5rIGFueWJvZHkgZWxzZSBkb2VzIGVpdGhlci4gClRvcHBlZCBvZmYgdGhlIGdhcyB0YW5rIGJ1dCB3aGVuIHdlIHJldHVybmVkIHRoZSBjYXIsIHRoZSBtYW4gY2hlY2tlZCB0aGF0IGx0dGxlIHRhbmsgbiB0aGUgdHJ1bmsgYW5kIHNhZCB0IHdhcyBlbXB0eS4gV2Ugd2VyZSBzbyBjb25mdXNlZC4gV2UgYXJndWVkIGJhY2sgYW5kIGZvcnRoIGFuZCBldmVudHVhbGx5IHdlIGRldGVybW5lZCB0aGF0IHRoZSBQYWxvIHJ1bnMgb24gZ2FzIChiZW56bikgYnV0IGFsc28gc29tZSBnYXMgY2FsbGVkIGxwZyB0aGF0IHMgY2hlYXBlci4gClRvIGJyZWFrIGluIHlvdXIgYmFzZWJhbGwgZ2xvdmVzLiAKU28sIG15IGZyaWVuZCB3ZW50IHdpdGggbWUgYW5kIHdlIGJlZ2dlZCBhbmQgYmVnZ2VkIHdoZW4gc2hlIGZpbmFsbHkgZGlkLiBIb3BlIHRoYXQgZ2F2ZSB5b3UgbW9yZSBpbmZvcm1hdGlvbi4gCk1heWJlIHRoZXkgZGlkbiBtYWtlIGl0IHdvbWVuIG9ubHkgZnJvbSB0aGUgc3RhcnQgYmVjYXVzZSB0aGV5IGRpZG4gZXhwZWN0IHdvbWVuIHRvIGpvaW4gYXMgcG9rZXIgaXMgZ2VuZXJhbGx5IHBsYXllZCBtb3JlIGJ5IG1lbiBhbmQgdGhvdWdodCBwb2tlciBuaWdodCB3YXMgZ2VuZXJhbGx5IGEgbWVuIG5pZ2h0IG91dCBhbmQgdGhhdCB3aGF0IGF0IGxlYXN0IHNvbWUgb2YgdGhlbSBleHBlY3RlZC4gT25jZSB0aGV5IGZpbmQgb3V0IHdvbWVuIGFyZSBnb2luZyB0byBiZSB0aGVyZSBzb21lIGd1eXMgbWF5IGRlY2lkZSB0aGV5IGRvbiB3YW50IHRvIGdvLCBpZiB0aGlzIGlzIHBhcnQgb2YgdGhlIGNvcmUgZ3JvdXAgdGhlbiBpdCBjb3VsZCBraWxsIHBva2VyIG5pZ2h0LgpCdXQgSSBhbSBoZXJlIHBsYXlpbmcgd2l0aCB0aGUgZ3V5cywgbXkgdGVhbSwgc28gdGhhdCdzIHRoZSBtb3N0IGltcG9ydGFudCB0aGluZy4gClRoZSBzdG9yZW93bmVycyBrbm93IHZlcnkgd2VsbCB0aGF0IHBlb3BsZSBhcmUgZGVmaW5pdGVseSBnb2luZyB0byBjb21lIGVhY2ggc2luZ2xlIGRheSBhbmQgbWFrZSBwdXJjaGFzZXMgd2l0aG91dCBldmVuIGFueSBhZHZlcnRpc2VtZW50cyBmb3IgdGhlc2UgcHJvZHVjdHMuIFRoYXQncyB3aHkgc3RvcmluZyB0aGVzZSBwcm9kdWN0cyBhcmUgZGVmaW5pdGVseSBzYWZlciB0aGFuIHRoZSBvdGhlcnMuIApXb3JrIHRpcmVsZXNzbHkgYWdhaW5zdCBnYXkgcmlnaHRzLiAKRm9yIGJldCBzaXppbmcgc3BlY2lmaWNhbGx5IGNoZWNrIG91dCB0aGUgcG9zdGZsb3Agc2hvcnRjdXRzIHdoaWNoIGNvdmVyIDI4NCBkaWZmZXJlbnQgZmxvcHMgZWFjaCBhbmQgZ2l2ZXMgeW91IEdUTyBmcmVxdWVuY2llcyBmb3IgZWFjaCBmbG9wIChpbmNsdWRpbmcgYmV0IHNpemluZykuIFRoZXJlIGFyZSBjdXJyZW50bHkgZm9yOiBCVE4gdnMgQkIgU1JQLCBTQiB2cyBCVE4gM2JldCBwb3QsIGFuZCBCVE4gdnMgQ08gM2JldCBwb3QuLiAKWW91IGNhbiBkb3dubG9hZCBhbiBleGVjdXRhYmxlIGZvciB5b3VyIE9TLCBhbmQgdGhlIHByZW1pc2UgaXMgYWxyZWFkeSB0aGF0IGl0IGNvbXBpbGVkIGZvciB0aGF0IHN5c3RlbSBmb3IgYSBzZXQgbnVtYmVyIG9mIHZlcnNpb25zLiBZb3VyIHdlYiBwYWdlIG1pZ2h0IGJlIHNlcnZlZCB0byBDaHJvbWUgQ2FuYXJ5IG9yIElFNiwgYW5kIHRoZSBmdW5kYW1lbnRhbCBydWxlcyBvZiB0aGUgbGFuZ3VhZ2UgbXVzdCBiZSBpZGVudGljYWwgb3IgZWxzZSBkb2VzIHlvdXIgYXBwIGluIElFIG5vdCBvbmx5IGJyZWFrIGJlY2F1c2UgeW91IGNvdWdoZWQgYXQgaXQsIGJ1dCB0aGUgY29udHJvbCBmbG93IG1pZ2h0IGJlIHdpbGRseSBkaWZmZXJlbnQuCldoZW4gYXNrZWQgd2hhdCBoZSB0aG91Z2h0IGhpcyBmYXZvcml0ZSBvciBiZXN0IG1vbWVudCBvZiAiU2VzYW1lIFN0cmVldCIgd2FzLCBoZSBpbW1lZGlhdGVseSBwb2ludGVkIHRvIHRoZSBkZWF0aCBvZiBNci4gSG9vcGVyLiAiV2UgZGVhbHQgd2l0aCB0aGF0IGRlYXRoIG9uICdTZXNhbWUgU3RyZWV0LCcgYnV0IGluIGEgc3dlZXQgd2F5LiBJIGFsd2F5cyB0aG91Z2h0IHdoZW4gd2Ugd2VyZSBtYWtpbmcgaXQgaXQgd291bGQgYmUgZ29vZCB0byBoYXZlIHBlb3BsZSB1bmRlcnN0YW5kIHdobyBCaWcgQmlyZCBpcyBhbmQgaG93IGhlJ2QgdHJ5IHRvIHVuZGVyc3RhbmQgd2hhdCBkZWF0aCB3YXMuIiBGb3IgdGhlIGZpcnN0IHRpbWUgZHVyaW5nIHRoZSBpbnRlcnZpZXcgaGUgc2xpcHBlZCBpbnRvIHRoZSBCaWcgQmlyZCB2b2ljZSwgZmxhd2xlc3NseSB0YWxraW5nIGFib3V0IHRoZSBkZWF0aCBvZiBNci4gSG9vcGVyLCBzYXlpbmcgIldobydzIGdvaW5nIHRvIHJlYWQgbWUgbXkgc3Rvcmllcz8gT3IgZml4IG15IGJpcmQgc2VlZCBtaWxrc2hha2VzPyIgV2l0aCB0aG9zZSB0d28gc2ltcGxlIHN0YXRlbWVudHMsIFNwaW5uZXkgaGFkIGNvbXBsZXRlIGNvbW1hbmQgb2YgdGhlIGVtb3Rpb25zIGluIHRoZSByb29tLgpDQVBTIHByb21vdGVzIHRoZSB3ZWxsIGJlaW5nIG9mIHRoZSBkaXZlcnNlIGNhbXB1cyBjb21tdW5pdHkgYnkgYmFsYW5jaW5nIGhpZ2ggcXVhbGl0eSBtZW50YWwgaGVhbHRoIHNlcnZpY2VzIGFuZCBjbGluaWNhbCB0cmFpbmluZyB3aXRoIGFjY2Vzc2liaWxpdHkgdG8gZm9zdGVyIHN0dWRlbnQgc3VjY2VzcyB0aHJvdWdoIHNlbGYgZGlzY292ZXJ5LCBsZWFybmluZyBhbmQgaW50ZXJwZXJzb25hbCBlbmdhZ2VtZW50LkNBUFMgZW1icmFjZXMgdGhlIGJlbGllZiB0aGF0IHN0dWRlbnRzJyBtZW50YWwgaGVhbHRoIGlzIGEgdml0YWwgY29tcG9uZW50IG9mIHRoZWlyIGFjYWRlbWljLCBwcm9mZXNzaW9uYWwsIGFuZCBwZXJzb25hbCBzdWNjZXNzLiBDQVBTIHdpbGwgZXhwYW5kIGF3YXJlbmVzcyBvZiBhbmQgYWNjZXNzIHRvIG1lbnRhbCBoZWFsdGggc2VydmljZXMgaW4gb3JkZXIgdG8gcG9zaXRpdmVseSBpbXBhY3QgdGhlIGVtb3Rpb25hbCB3ZWxsIGJlaW5nIG9mIHRoZSBjYW1wdXMgY29tbXVuaXR5LCBlbmhhbmNlIGhlbHAgc2Vla2luZyBiZWhhdmlvcnMsIGFuZCBlZmZlY3RpdmVseSBhc3Npc3Qgc3R1ZGVudHMgdG8gYmVjb21lIGVuZ2FnZWQgZ2xvYmFsIGNpdGl6ZW5zLkNBUFMgUGxlZGdlIG9mIFN1cHBvcnRDQVBTIGpvaW5zIHRoZSBVSCBjb21tdW5pdHkgYW5kIHdvcmxkIGluIGV4cHJlc3NpbmcgaG93IGRlZXBseSBzYWRkZW5lZCB3ZSBhcmUgYnkgdGhlIGRvbWVzdGljIGFuZCBpbnRlcm5hdGlvbmFsIGluY2lkZW50cyBvZiB2aW9sZW5jZSB0aGF0IGhhdmUgb2NjdXJyZWQgZHVyaW5nIHJlY2VudCB3ZWVrcy4gClRoZSBsb3dlciBzdGFrZXMgZG9uJ3QgYWxhcm0gdGhlIGJyYWluIHF1aXRlIHNvIG11Y2gsIGFuZCB0aGUgcG9rZXIgcGxheWVyIGlzIGFibGUgdG8gZm9jdXMgYW5kIG1ha2UgYmV0dGVyIGRlY2lzaW9ucy4uIApIb3dldmVyLCB0aGUgVG9yb250byBSZWdpb24gQm9hcmQgb2YgVHJhZGUsIHdoaWNoIGhhcyBzdWdnZXN0ZWQgdGhlIFRvcm9udG8gbGlicmFyeSBoYW5kbGUgZGF0YSBnb3Zlcm5hbmNlIGZvciBwcm9qZWN0cyBpbmNsdWRpbmcgUXVheXNpZGUsIHN1cHBvcnRzIHRoZSBwcm9qZWN0IGFzIHdlbGwgYXMgdGhlIG11bmljaXBhbCBhbmQgcHJvdmluY2lhbCBleGFtaW5hdGlvbnMgb2YgYSBwb3RlbnRpYWwgZGF0YSBwb2xpY3kuClRoaXMgaXMgbm90ICJwcm92aW5nIGhvdyBtb3JhbCBJIGFtIi4gCkhlIGEga25vd24gY29tbW9kaXR5IG5vdywgaXMgdmVyeSBvdmVycGFpZCwgYW5kIHRlYW1zIGFyZSBob2FyZGluZyBjYXAgc3BhY2UgZm9yIHRoaXMgc3VtbWVyLiBNYXliZSBoZSBjYW4gYmUgb2ZmbG9hZGVkIG9udG8gYSB0ZWFtIHRoYXQgaGFzIHN0cnVjayBvdXQgaW4gZnJlZSBhZ2VuY3ksIGFuZCBtYXliZSBmb3IgYSBtb2Rlc3QgcmV0dXJuLCBidXQgdGhhdCB3aWxsIGNvbWUgYWZ0ZXIgdGhlIGNob2ljZSBmcmVlIGFnZW50cyBhcmUgYWxyZWFkeSB0YWtlbi4uIApBIG1vcmUgZGV0YWlsZWQgYnVzIHRpbWV0YWJsZSBzdGF0aW5nIGV4YWN0bHkgd2hpY2ggYnVzIGlzIGR1ZSB0byBiZSBvcGVyYXRpbmcgd2hpY2ggcm91dGVzIGlzIHByb3ZpZGVkIGluIHRoZSBWZWhpY2xlIFN1cHBsZW1lbnQuLiAKUGVvcGxlIGdldCBiYW5uZWQuIApXZWxsLCB5b3UncmUgcmlnaHQuIApJbSBwcmV0dHkgc3VyZSB0aGF0IHNoZSBzaG91bGQgYmUgZG9pbmcgZXhhY3RseSB0aGlzLCBzbyBJIGhvcGUgc28uClJlbGF0aW9uc2hpcHMgYmV0d2VlbiBoZWFsdGggcmVzZWFyY2hlcnMgZnJvbSBhY3Jvc3Mgb3VyIHJlZ2lvbiBoYXZlIGJlZ3VuIGFzIGdyYXNzcm9vdHMgZWZmb3J0cyB0byBhZGRyZXNzIHByZXNzaW5nIHJlc2VhcmNoIHF1ZXN0aW9ucy4gCihJZiB5b3UgbG9vayBjbG9zZWx5IHlvdSBjYW4gc2VlIHRoZSBkcnVtIG1ham9yIGlzIGNhcnJ5aW5nIGFuIGFudGVubmEsIGFuZCB0aGUgc291c2FwaG9uaXN0IGlzIGFjdHVhbGx5IGNhcnJ5aW5nIGEgbG91ZHNwZWFrZXIsIGFuZCBzb21ld2hlcmUgaW4gdGhlcmUgYXJlIGZvbGtzIGNhcnJ5aW5nIHRoZSBiYXR0ZXJ5IHNldCwgYW5kIHNvIG9uLiAKTWF5YmUgTGl2ZSBBaWQgd291bGQgaGF2ZSBjb2F4ZWQgYSBtaW5pIHJldW5pb24gb3V0IG9mIHRoZW0sIGEgbGEgWmVwcGVsaW4uIApCZXR3ZWVuIHNreSBhbmQgc2VhLiBTaXR1YXRlZCBpbiB0aGUgUGxheWEgZCBCb3NzYSBhcmVhLCBvbmUgb2YgdGhlIG1vc3QgcG9wdWxhciB0b3VyaXN0IHJlc29ydHMgb24gdGhlIGlzbGFuZCwgeW91IHdpbGwgbG92ZSB0aGUgU2lyZW5pcyBIb3RlbCBHb2xldGEgU3BhIFRoZSBob3RlbCwgdG9nZXRoZXIgd2l0aCB0aGUgU2lyZW5pcyBIb3RlbCBUcmVzIENhcmFiZWxhcyBTcGEsIGZvcm1zIGEgY29tcGxleCB3aGVyZSB5b3Ugd2lsbCBiZSBhYmxlIHRvIGVuam95IGZhbnRhc3RpYyBmcm9udGFsIHZpZXdzIG9mIHRoZSBNZWRpdGVycmFuZWFuIGZyb20gdGhlIGJhbGNvbmllcy4gWW91IHdpbGwgYWxzbyBiZSBhYmxlIHRvIGRpc2NvdmVyIHRoZSBiZWF1dHkgb2YgRGFsdCBWaWxhLCB0aGUgb2xkIHRvd24gb2YgSWJpemEsIGRlY2xhcmVkIHdvcmxkIGhlcml0YWdlIGJ5IHRoZSBVTkVTQ08sIGFuZCBlbmpveSBhbGwgdGhlIGFjdGl2aXRpZXMgYW5kIHNlcnZpY2VzIGluIHRoZSBhcmVhLCB3aGljaCByYW5nZSBmcm9tIHNwb3J0cyB0byBiZWFjaCBjbHVicyBhbmQgcG9wdWxhciBzaG9wcy4gVGhlIGNvbWZvcnQsIHJlbGF4YXRpb24gYW5kIGZ1biBpbiB0aGlzIGNvbXBsZXggd2lsbCBndWFyYW50ZWUgYW4gdW5mb3JnZXR0YWJsZSBzdGF5LiBUaGUgYnVmZmV0IHJlc3RhdXJhbnQgb2ZmZXJzIGEgd2lkZSByYW5nZSBvZiBTcGFuaXNoIGFuZCBpbnRlcm5hdGlvbmFsIGRpc2hlcyBjb29rZWQgb24gdGhlIHNwb3QgYnkgb3VyIGNoZWZzIHVzaW5nIHF1YWxpdHkgaW5ncmVkaWVudHMuIFRoZSBTaXJlbmlzIEhvdGVsIEdvbGV0YSBTcGEgb2ZmZXJzIGEgc2VsZWN0LCBpbnRlcm5hdGlvbmFsIGF0bW9zcGhlcmUgYW5kIGFkam9pbmluZyBpcyB0aGUgU2lyZW5pcyBWSVRBTCBTcGEsIG9mZmVyaW5nIGEgc3BhY2UgZm9yIHJlbGF4YXRpb24sIHBhbXBlcmluZyBhbmQgbWFzc2FnZXMuIEFsc28sIGlmIHlvdSBlbmpveSB3b3JraW5nIG91dCBkdXJpbmcgeW91ciBzdGF5LCB5b3Ugd2lsbCBiZSBhYmxlIHRvIHZpc2l0IHRoZSBob3RlbCBneW0gYW5kIHNwb3J0cyBhcmVhLiBUaGUgZm91ciBtZWV0aW5nIHJvb21zIHNpdHVhdGVkIGluIHRoZSBob3RlbCBhcmUgZXF1aXBwZWQgd2l0aCBhbGwgdGhlIG5lY2Vzc2FyeSB0ZWNobm9sb2d5IGZvciBtZWV0aW5ncyBhbmQgY29uZmVyZW5jZXMuIFdlIHRha2UgY2FyZSBvZiBldmVyeSBkZXRhaWwgc28gdGhhdCB5b3VyIHNwZWNpZmljIHJlcXVpcmVtZW50cyBhcmUgbWV0LgpNeSBxdWVzdGlvbiB3YXMsIGlzIHRoZXJlIGFueSByZWFzb24gdGhpcyB3YXkgb2YgcGVyY2VpdmluZyB0aGUgdHJhdmVsIG9mIGxpZ2h0IHdvdWxkbiBiZSBwb3NzaWJsZT8gRG8gdGhlIHBoeXNpY3Mgb2YgbGlnaHQgc3RpbGwganVzdCBzb21laG93IG5vdCB3b3JrIHRoaXMgd2F5PyBBbSBJIGZvcmdldHRpbmcgYW55dGhpbmcgaGF2aW5nIHRvIGRvIHdpdGggcmVsYXRpdml0eT8KTWF1cmljZSBMaWdodG5lciBhbmQgc2hvdWxkOyBGb3IgeW91ciBhdHRpdHVkZSB1bnRvIHRoZSBzcG9ydCB5b3UgaSBkYXVnaHRlcnMsIE1hZGFsZW5lIGFuZCBSdXRoLCBzcGVudCBJIFN1bmRheSBhdCB0aGUgaG9tZSBvZiBNcnMuIApBIDM5IGhvdXIgd2VlayBpcyBub3QgYWx3YXlzIDN4MTJociBzaGlmdHMgICBzb21ldGltZXMgaXQgYSBtaXggb2YgMTIsIDEwLCBvciA2IGhvdXIgc2hpZnRzLCBzb21ldGltZXMgYSBtaXggb2YgZGF5cyBhbmQgbmlnaHRzLCBpdCBkZXBlbmRzIG9uIGhvdyB0aGUgaW5kaXZpZHVhbCByb3N0ZXIgaXMgbWFkZSBpbiBlYWNoIHdvcmtwbGFjZS4uIApGaXJzdCBvZiBhbGwsIG1hdGVyaWFscyB3ZXJlIHNjYXJjZS4gUGFwZXIsIHBlbmNpbHMsIGluayB0aGVzZSB3ZXJlIG5vdCBjb21tb24gdGhpbmdzIGZvciBraWRzIHRvIG93biBpbiB0aGUgMTl0aCBjZW50dXJ5LCBlc3BlY2lhbGx5IG1vcmUgaW4gdGhlIG1pZGRsZSBhbmQgZWFybHkgcGFydHMgb2YgdGhlIGNlbnR1cnkuIFRoZXNlIGl0ZW1zIHdlcmUgZXhwZW5zaXZlLCBlc3BlY2lhbGx5IGlmIHlvdSB3ZXJlIGEga2lkIGluIGEgd29ya2luZyBjbGFzcyBmYW1pbHkgd2hvIGRpZG4gaGF2ZSBtdWNoIG9mIGFueXRoaW5nIGF0IGFsbCwgYW55d2F5LiBJbiBhZGRpdGlvbiB0byBhIHJlYWwgY3J1bmNoLCBhIHNldmVyaXR5IG9mIGFic2VuY2UsIG9mIHRoZSBiYXNpYyBtYXRlcmlhbHMsIHRoZSBhcnQgdGhhdCB3YXMgbWFkZSBoYWQgdG8gc3Vydml2ZSB0aGUgYXJ0aXN0IG93biBoYW5kcy4gQW5kIHRoZW4gaXQgbmVlZGVkIHRvIHN1cnZpdmUgYmVpbmcgY3VsbGVkIGZyb20gZmFtaWx5IGNsdXR0ZXIgZm9yIGEgZ2VuZXJhdGlvbi4gQW5kIGFub3RoZXIuIEFuZCBhbm90aGVyLiBBbmQgYW5vdGhlci4gQW5kIGZvdXIgbW9yZS4gMTUwIHllYXJzIG9mIHBhcmVudHMgY2xlYXJpbmcgb3V0IHRoZSBjbHV0dGVyIGlzIGEgbG90IHRvIHN1cnZpdmUuIHNvIHRoZXJlIGRvZXNuIHNlZW0gdG8gYmUgbXVjaCBsZWZ0LgpBZnRlciBjbG9zaW5nLCBUaGUgR29sZGVuIE51Z2dldCBCaWxveGkgd2lsbCBob25vciBhbGwgSXNsZSBCaWxveGkgY3VzdG9tZXIgcG9pbnRzIGFuZCByZXdhcmRzIG5vdCBvbmx5IGluIEJpbG94aSwgYnV0IGFsc28gaW4gR29sZGVuIE51Z2dldCBwcm9wZXJ0aWVzIGluIExhcyBWZWdhcywgTGF1Z2hsaW4gYW5kIEF0bGFudGljIENpdHkuCkpvbmF0aGFuIEh1YmVyZGVhdSBoYWQgYSBnb2FsIGFuZCB0aHJlZSBhc3Npc3RzLCBNaWtlIEhvZmZtYW4gYWxzbyBzY29yZWQgYW5kIEV2Z2VuaWkgRGFkb25vdiBhZGRlZCB0aHJlZSBhc3Npc3RzLiAKV2UsIGFzIGNpdGl6ZW5zLCB3ZXJlIHNvbGQgYSBiYWQgYmlsbCBvZiBnb29kcy4gVHJ1bXAgY2FtcGFpZ25lZCBvbiBkcmFpbmluZyB0aGUgc3dhbXAsIHlldCBoZSBmaWxsZWQgaXQgd2l0aCBwZW9wbGUgb2YgcXVlc3Rpb25hYmxlIGp1ZGdlbWVudC4gCiAxIHBvaW50ICBzdWJtaXR0ZWQgMSBkYXkgYWdvIkFmdGVyIHRoZSBpbmp1cmVkIHBhcnRpZXMgaGFkIGJlZW4gdGFrZW4gdG8gaG9zcGl0YWwsIHRoZSBtYW4gd2hvIGhhZCBhZG1pbmlzdGVyZWQgdGhlIEFFRCBnYXZlIGhpcyBhY2NvdW50IG9mIHRoZSBpbmNpZGVudCB0byBwb2xpY2UuIApBbHNvLCBtb3N0IHBva2VyIHJvb21zIGhhdmUgYSBwbGFjZSB0byBzaWduIGEgd2FpdGluZyBsaXN0IGZvciBhIHBhcnRpY3VsYXIgZ2FtZS4gU29tZSBoYXZlIGEgd2hpdGUgYm9hcmQgd2l0aCB0aGUgZ2FtZXMgYW5kIGxpbWl0cyBhdmFpbGFibGUgYWxvbmcgd2l0aCB0aGUgd2FpdGluZyBwbGF5ZXJzJyBpbml0aWFscy4gT3RoZXJzIHdpbGwganVzdCBoYXZlIHNvbWVvbmUgd2hvIHdyaXRlcyBpbml0aWFscyBvciBuYW1lcyBvbiBhIHNoZWV0IG9mIHBhcGVyLiBUaGUgY2FyZCByb29tIGNhbGxzIHRoZSBuZXh0IHBlcnNvbiBvbiB0aGUgbGlzdCB3aGVuIGEgc2VhdCBiZWNvbWVzIGF2YWlsYWJsZS4gU2ltcGx5IGFzayB3aG9ldmVyIGlzIGluIGNoYXJnZSBvZiB0aGUgYm9hcmQgICBvciBhIHN0YWZmIG1lbWJlciAgIHRvIHBsYWNlIHlvdSBvbiB0aGUgbGlzdCBmb3IgYWxsIG9mIHRoZSBnYW1lcyB5b3UgYXJlIHdpbGxpbmcgdG8gcGxheS4gSWYgeW91IGFyZSBpbiBhIHNtYWxsIHBva2VyIHJvb20gd2l0aCBubyB2aXNpYmxlIHNpZ24gdXAgYXJlYSwgYXNrIGEgZGVhbGVyIGhvdyB0byBlbnRlciBhIGdhbWUuClNvIG1hbnkgcGVvcGxlIG1pc3NpbmcgdGhlIHBvaW50LiBUaGlzIGlzIG5vdCBtZWFudCB0byBiZSBzb21lIHByaXN0aW5lIHBlcmZvcm1hbmNlLiBNb3JlIGxpa2VseSBpdCB3YXMganVzdCBhIG9uZSBvZmYgYXQgYSBjb25mZXJlbmNlLiBFaXRoZXIgdG8gc3RhcnQgb3IgZW5kIHRoZSBkYXkgb24gYSBuaWNlIG5vdGUgKHB1biBpbnRlbmRlZCkuIFNvIHJlbGF4IGFuZCBlbmpveSBpdCBmb3Igd2hhdCBpdCBpcyAgIGEgYnVuY2ggb2Ygdm9jYWwgZW50aHVzaWFzdHMgc2hvd2luZyB3aGF0IGNhbiBiZSBkb25lIHdpdGggYSBjb2xsZWN0aXZlIGh1bWFuIHZvaWNlLiBTdXJlLCBJIHByZWZlciBhIGJldHRlciByZWNvcmRpbmcgYW5kIEkgcmVhbGx5IHdpc2ggYWxsIHRob3NlIHBlb3BsZSB3aXRoIHRoZWlyIHBob25lcyB3b3VsZG4gZG8gdGhhdCwgYnV0IGRhbW4gSSB1c2VkIHRvIGxpdmUgZm9yIGNob3JhbCBtb21lbnRzIGxpa2UgdGhhdC4gVGhleSB3ZXJlIHJhcmUgYW5kIGFtYXppbmcgZXhwZXJpZW5jZXMuCldpdGggdGhlIGNpdHkgc3RpbGwgb24gZWRnZSBmb2xsb3dpbmcgTW9uZGF5J3MgaW5jaWRlbnQsIG1hbnkgc29jaWFsIG1lZGlhIHVzZXJzIGhhdmUgaGFpbGVkIHRoZSBvZmZpY2VyIGFzIGEgcGFyYWdvbiBvZiByZXN0cmFpbnQgYmFzZWQgb24gZm9vdGFnZSBvZiBoaXMgdGVuc2Ugc3RhbmRvZmYgd2l0aCB0aGUgYWxsZWdlZCB2YW4gZHJpdmVyLiBJdCBoYXBwZW5lZCBub3QgZmFyIGZyb20gdGhlIHN0cmV0Y2ggb2YgWW9uZ2UgU3RyZWV0IHdoZXJlIGEgdmFuIG1vdW50ZWQgYSBzaWRld2FsayBhbmQgcmFtbWVkIGludG8gcGVkZXN0cmlhbnMsIGtpbGxpbmcgMTAgYW5kIGluanVyaW5nIDE0Li4gCkkgYmVsaWV2ZSBpbiB5b3UuIApDaGFybGVzIEhhcm1vbiBhbmQgc29uLCBQYXVsLCBvZiBIYW1wdG9uLCB2aXNpdGVkIE1ycy4gTGVvbmFyZCBBbGxlbiBhbmQgZGF1Z2h0ZXIsIENlY2lsaWEsIG9mIENsZXZlbGFuZCwgT2hpbywgc3BlbnQgU3VuZGF5IHdpdGggTXIuIEFuZCBNcnMuIAoiRGVhbGluJyBmb3IgRG9ncyBpcyBvdXIgbGFyZ2VzdCBmdW5kcmFpc2VyLCIgc2FpZCBUaW0gSGFycmluZ3RvbiwgZXhlY3V0aXZlIGRpcmVjdG9yIG9mIFRoZSBBYmlsaXR5IENlbnRlci4gIlRoaXMgcGFydHkgaGFzIGEgcmVwdXRhdGlvbiBmb3IgYmVpbmcgYSBsb3Qgb2YgZnVuIGFzIHdlbGwgYXMgYnJpbmdpbmcgdG9nZXRoZXIgb3VyIGdyYWR1YXRlcyBhbmQgdGhlaXIgZG9ncywgdm9sdW50ZWVycywgc3VwcG9ydGVycywgYW5kIHRob3NlIG5ldyB0byBBc3Npc3RhbmNlIERvZ3MgdG8gbWVldCBlYWNoIG90aGVyIGFuZCBsZWFybiBtb3JlIGFib3V0IHRoZSBwcm9ncmFtLiAKSG93ZXZlciwgdGhvdWdoIGEgc2Nob2xhcnNoaXAgaXNuJ3QgYSBsb2FuLCBpdCdzIG5vdCBqdXN0IGZyZWUgbW9uZXkgZWl0aGVyLiBNb3N0IG9yZ2FuaXphdGlvbnMgdGhhdCBvZmZlciB0aGVtIGNvbnNpZGVyIHRoZW0gYW4gaW52ZXN0bWVudCByYXRoZXIgdGhhbiBhIGdpZnQuIEZvciB0aGF0IHJlYXNvbiwgc2Nob2xhcnNoaXBzIHVzdWFsbHkgaGF2ZSBzdHJpbmdzIGF0dGFjaGVkLiAKQW5kIGhhdmluZyB0aGUgMm5kIHN0cmVhbSBhdmFpbGFibGUgdG8gc2VlIHRoZSBtYXAgZnJvbSB2YXJpb3VzIGRpZmZlcmVudCBhbmdsZXMgd2FzIHZlcnkgZW5qb3lhYmxlLlRoZSBxdWFsaXR5IG9mIHRoZSBzdHJlYW0gd2FzIGV4Y2VsbGVudCwgdGhlcmUgd2VyZSBubyBub3RpY2VhYmxlIHRlY2huaWNhbCBpc3N1ZXMuIEF1ZGlvIGFuZCB2aWRlbyB3ZXJlIG9uIHBvaW50LiBUaGUgZ3JhcGhpY3MsIHRoZSBhcnQsIGFuZCB0aGUgaW50byB3ZXJlIGFsbCB2ZXJ5IHdlbGwgbWFkZS5UaGUgZmVlbCBvZiB0aGUgc3RyZWFtLiAKVGhlIG51cnNlIGFuZCBJIGZlZWwgdGhhdCB0aGUgcmVzaWRlbnQgbWF5IGhhdmUgYWNjaWRlbnRhbGx5IHRhcHBlZCB0aGUgVFYgQnV0dG9uIG9uIGhlciBiZWRzaWRlIGNhbGwgbGlnaHQvc3dpdGNoIGJveCwgYnV0IGNlcnRhaW5seSBhZGRlZCB0byB0aGUgdW5uZXJ2aW5nIGV4cGVyaWVuY2UuIApBdm9pZGVkIHVzaW5nIHZhY2F0aW9uIHRpbWUgYWZ0ZXIgYSBmYW1pbHkgbWVtYmVyIGRpZWQgd2hlbiB0aGV5IHdlcmUgYWxsb3dlZCBhIGZ1bGwgd2VlayBvZiBwYWlkIGJlcmVhdmVtZW50LgpCdXQgb24gaW5jb21lLCBub3QgdGhlaXIgd2VhbHRoQ291bmNpbCB0YXggb24gYSAxN20gbHV4dXJ5IG1hbnNpb24gaW4gQmVsZ3JhdmlhLCBMb25kb24/IDEsMzc2LiBQaG90b2dyYXBoOiBUb2xnYSBBa21lbi9BRlAvR2V0dHkgSW1hZ2VzV2Uga25vdyB0aGF0IGdpYW50IG11bHRpbmF0aW9uYWxzIGFyZSBlbmdhZ2VkIGluIGluZHVzdHJpYWwgc2NhbGUgdGF4IGF2b2lkYW5jZS4gV2Uga25vdyBmcm9tIHRoZSBQYW5hbWEgYW5kIFBhcmFkaXNlIHBhcGVycyBob3cgc29tZSBpbmRpdmlkdWFscyB3aWxsIHVzZSBldmVyeSBvZmZzaG9yZSB0cmljayB0byBkb2RnZSB0YXhlcy4gCkZhbWEgcmVzcG9uZGVkOi4gCkkgY291bGRuJ3QgdGVsbCB5b3Ugd2hhdCBhIGZ1Y2tpbiBhdG9tIGlzLCBJIGNvdWxkbid0IHRlbGwgeW91IHdoYXQgYSBmdWNraW4gbWljcm9iZSBpcy4gCkMpIHlvdXJlIGdvaW5nIHRvIG5lZWQgdG8gcGljayB1cCBib29rcywga2V5Ym9hcmRzLCBhbmQgcmFuZG9tIGRldmljZXMgdG8gdGVzdCB5b3VyIHNraWxsIGxldmVscy4gVGFrZSBub3RlcyByZWxpZ2lvdXNseSBiZWNhdXNlIGl0IGJhZCB3aGVuIHlvdSBoYXZlIHRvIEdvb2dsZSB0aGUgc2FtZSBjcmFwIGEgZG96ZW4gdGltZXMgYmVjYXVzZSB3aG8gY2FuIHJlbWVtYmVyIGV2ZXJ5dGhpbmcgcmlnaHQgYXdheT8/IE5vdCBtYW55LiBBbHNvIGRhdGEgcmV0ZW50aW9uIGR1ZSB0byBub3RlcyBibGFoIGJsYWguIApFdmVuIG5vdywgaGUgc2F5cyB0aG9zZSBBcmFiIGd1eXMgYXJlIHByZXR0eSBkYW1uIHNtYXJ0LiBUaGV5IHRvdGFsbHkgcmUgaW52ZW50ZWQgamFja2luZyBvZmYuIEZsYXQgb24gaGlzIGJhY2sgaW4gYmVkLCB0aGluZ3MgYXJlIGdldHRpbmcgc28gZ29vZCwgdGhpcyBraWQgY2FuIGtlZXAgdHJhY2sgb2YgdGhlIHdheC4gSGUgb25lIGdvb2Qgc3F1ZWV6ZSBmcm9tIHNob290aW5nIGhpcyB3YWQgd2hlbiB0aGUgd2F4IGlzbiBzdGlja2luZyBvdXQgYW55bW9yZS4KVGhlIHByaWNlIGlzIGRpcnR5IGxvdywgY29uc2lkZXJpbmcgdGhlIGFtb3VudCBvZiB0cmVhc3VyZSBpbnNpZGUgdGhpcyBib29rIGF2YWlsYWJsZSBmb3IgaHVudGluZ3MuIApXZWxsLCBvbiBhIGhpZ2ggbGV2ZWwsIEkgYXNzdW1lIGV2ZXJ5IGRyaW5rIGlzIHByZW1pdW0gbGlxdW9yIGFuZCBjb3ZlcnMgZXZlcnl0aGluZyB1cCB0byAkMjIsMDAwIGNvZ25hYyAoTG91aWUgWElJSSBSYXJlIGNhc2spLiBJdCBhbHNvIHNlZW1lZCBsaWtlIHRoZXkgd2VyZSBhYmxlIHRvIHRha2UgZW50aXJlIGJvdHRsZXMgb2Ygd2hpc2tleS9zY290Y2ggd2l0aCB0aGVtLgpTbywgdWx0aW1hdGVseSwgeW91IGhhdmUgc2hvd24gbWUgdG8gYmUgd3JvbmcgYW5kIEkgY29uY2VlZCB0aGF0LiBJIHdpbGwgbm90IGNvbmNlZWQgbXkgcmV2aXNlZCBzdGF0ZW1lbnQgb3IgdGhlIHNlbnRpbWVudCBJIGdhdmUgdG8gdGhlIHJlcGxpZXIgdGhhdCBzZWVtZWQgdG8gdGhpbmsgZXZlcnl0aGluZyB3YXMgaHVua3kgZG9vcnkgaW4gdGhlIGJyZWVkaW5nIHdvcmxkLiBpdCBpc24gYW4gdXB2b3RlLgpaaWVnZW5taXN0IHp1bSBFaW5zYXR6Li4gCkNvbnN1bHQgeW91ciBsb2NhbCBsYXdzIHRvIG1ha2Ugc3VyZSB5b3UncmUgZG9pbmcgdGhpcyBsZWdhbGx5LiBDaGFyaXR5IHRvdXJuYW1lbnRzIGFyZSBsZWdhbCBpbiBtYW55IG11bmljaXBhbGl0aWVzLCBhcyBsb25nIGFzIHRoZSBvbmx5IHJlY2lwaWVudHMgb2YgdGhlIHRha2UgYXJlIHRoZSBjaGFyaXR5IGFuZCB0aGUgcGxheWVycy4KVGFrZSB0aGUgd29yZCBXZXNwZSBmb3IgaW5zdGFuY2UgKG1lYW5pbmcgIndhc3AiKS4gCkZpcnN0LCBsZXQgbWUgc2F5IGhvdyBtdWNoIEkgbG92ZSB0aGUgdGVsZXZpc2lvbiBzaG93IFNlaW5mZWxkLiBJdCBpcyBhIHNob3cgYWJvdXQgbm90aGluZyBidXQgZGFpbHkgbGlmZSBhbmQgZ29zc2lwLiBJIGNhbiBoZWxwIHNlZWluZyB5ZXN0ZXJkYXkgYXMgYSBwb3NzaWJsZSBzaG93ISBBbm90aGVyIHNpZGUgbm90ZSBvbiBNYXJjaCAxMCwgMjAxNywgSSBib3VnaHQgYSBmYWludGluZyBnb2F0LiBIZXIgbmFtZSBpcyBNb2xseS4KSWYgeW91IGFncmVlIHdpdGggZXZlcnkgb3RoZXIgaXNzdWUgdGhhdCBEZW1vY3JhdHMgYmVsaWV2ZSBpbiBhc2lkZSBmcm9tIHRoaXMgb25lLCB3aHkgbm90IGp1c3Qgc3VwcG9ydCBhIERlbW9jcmF0IHdpdGggZ3VuIHZpZXdzIG1vcmUgYWxpZ25lZCB3aXRoIHlvdXJzPyBFdmVuIGlmIHNvbWUgRGVtb2NyYXRzIGRpZCBiZWxpZXZlIGluIHRha2luZyBhbGwgdGhlIGd1bnMgYXdheSwgaXQgbm90IGxpa2UgYWxsIG9mIHRoZW0gZG8uLiAKKFlvdSBrbm93IG5vdGhpbmcgSm9uIFNub3cpIFN0YXRlIHJhbiBpbmR1c3RyaWVzIGRvIG5vdCBoYXZlIG11Y2ggb2YgYW4gYWR2YW50YWdlIGluIHNlY3RvcnMgdGhhdCBhcmVuIHZpdGFsLiBZb3UgbXVzdCBiZSB0aGlua2luZyBvZiBDaGluYSAxNSsgeWVhcnMgYWdvPyBJIGFzc3VtaW5nIHlvdSB3ZW50IHRvIGNvbGxlZ2Ugc2luY2UgeW91IGFyZSBhbiBFbmdsaXNoIHRlYWNoZXIuIApBYmVyIGF1Y2ggZGVuIEFTUEkgVmVydHJhZyBoYWJlbiBub2NoIG5pY2h0IGFsbGUgVmVyc2ljaGVyZXIgdW50ZXJ6ZWljaG5ldC4gCklmIHlvdSB3YW50IHRvIGJ1eSBhIGZpbmUgcHJvcGVydHkgaW4gT21haGEgYXQgcm9jayBib3R0b20gcHJpY2UgdGhlbiB5b3UgaGF2ZSB0byBwZXJ1c2UgdGhlIGZyZWUgT21haGEgZm9yZWNsb3N1cmUgbGlzdGluZ3MgaW4gZGV0YWlsLiAKUHJlZW1pbmVudCBwbGFpbnRpZmYncyBsYXd5ZXIgTWlrZSBQYXBhbnRvbmlvIChvZiBMZXZpbiwgUGFwYW50b25pbywgVGhvbWFzLCBNaXRjaGVsbCwgUmFmZmVydHkgUHJvY3RvciksIHdobyBpcyBmaWdodGluZyBmb3IgbWFueSBvZiB0aGUgdmljdGltcyBvZiB0aGlzIGNvcnBvcmF0aW9uIChvciBwZXJzb24gb3Igd2hhdGV2ZXIgc3RhdHVzIHdlJ3JlIGdyYW50aW5nIHRoZW0gdGhpcyB3ZWVrKSBwb2ludGVkIG91dCB0byBtZSB0aGF0IFlheiBzcGVudCAiMTAgdGltZXMgdGhlIGFtb3VudCBtYXJrZXRpbmcgdGhpcyBwaWxsIHRoYW4gdGhleSBkaWQgdGVzdGluZyB3aGV0aGVyIGl0IHdvdWxkIGtpbGwgcGVvcGxlLCBhbmQgZXZlbiBjb21taXR0ZWQgc3VjaCBtYXJrZXRpbmcgZnJhdWQgaW4gdGhlIHByb2Nlc3MgdGhhdCB0aGUgdG9vdGhsZXNzIEZEQSBvcmRlcmVkIHRoZW0gdG8gc3RvcCBseWluZyBpbiB0aGVpciBhZHMuIgpXZSBhbGwgZmVsdCB0aGUgcGFsYWNlIHdhcyBmYXIgdG9vIGJpZzogSSB3YXMgc2VwYXJhdGVkIGZyb20gdGhlIGdpcmxzIGJ5IGludGVybWluYWJsZSBjb3JyaWRvcnMsIGFuZCBpdCB3YXMgYSBmaXZlIG1pbnV0ZSB3YWxrIHRvIHRoZSBnYXJkZW5zLiBGb29kIGhhZCB0byBjb21lIHRoZSBiZXR0ZXIgcGFydCBvZiBoYWxmIGEgbWlsZSBmcm9tIHRoZSBraXRjaGVucyBhdCB0aGUgQnVja2luZ2hhbSBQYWxhY2UgUm9hZCBlbmQgdG8gdGhlIGRpbmluZyByb29tIGF0IHRoZSBDb25zdGl0dXRpb24gSGlsbCBlbmQuIFdlIGFsc28gbmVlZGVkIHRoZSB2ZXJtaW4gbWFuLCB3aG8gZm91Z2h0IGFuIGVuZGxlc3MgYmF0dGxlIGFnYWluc3QgdGhlIG1pY2Ugd2l0aCBjYXJkYm9hcmQgdHJhcHMgdGhhdCBoYWQgYSBsdW1wIG9mIGFuaXNlZWQgaW4gdGhlIG1pZGRsZSBhbmQgdHJlYWNsZSBhbGwgYXJvdW5kLgpUaGUgZmlyc3QgZHV0eSBvZiB0aGUgcG9saWNlIGlzIHN1cHBvc2VkIHRvIGJlIHRoZSBwcm90ZWN0aW9uIG9mIHRoZSBwdWJsaWMgaW50ZXJlc3QsIGFuZCB0aGVyZSBhIGNlcnRhaW4gbGV2ZWwgb2YgcGVyc29uYWwgcmlzayB0aGF0IG11c3QgYmUgYWNjZXB0ZWQgdG8gbWVldCB0aGlzIG9ibGlnYXRpb24uIApJIGEga2luZGVyZ2FydGVuIHRlYWNoZXIgaW4gYSBwcml2YXRlIGludGVybmF0aW9uYWwgc2Nob29sIGluIEJhbmdrb2suIEkgbGlrZSBteSBqb2IgYmVjYXVzZSBpdCByZWxhdGl2ZWx5IGVhc3kgYW5kIHN0cmVzcyBmcmVlLCBhbmQgaXQgYWZmb3JkcyBtZSB0aGUgbGlmZXN0eWxlIHRoYXQgSSB3YW50LiBJIGdldCB0byBsaXZlIGluIGEgZm9yZWlnbiBjb3VudHJ5IChJIGZyb20gdGhlIFVLKSBhbmQgZW5qb3kgdGhlIHNlbnNlIG9mIGFkdmVudHVyZSB0aGF0IGNvbWVzIHdpdGggdGhhdC4gSSBnZXQgYWJvdXQgMTMgMTQgd2Vla3Mgb2YgaG9saWRheSBhIHllYXIgc28gSSBjYW4gdHJhdmVsIGFyb3VuZCBTRSBBc2lhIGEgbG90IGR1cmluZyBteSB0aW1lIG9mZi4gVGhlIG1vbmV5IGlzIGFsc28gcHJldHR5IGdvb2QgYW5kIGl0IGdvZXMgYSBsb25nIHdheSBpbiB0aGlzIHBhcnQgb2YgdGhlIHdvcmxkLCBzbyBJIGNhbiBhZmZvcmQgYSBob3VzZSBhbmQgYSBnZW5lcmFsIGxpZmVzdHlsZSB0aGF0IGlzbiByZWFsbHkgYXR0YWluYWJsZSBmb3IgbWUgaW4gdGhlIFVLLgokMTYuOTkgIDg5LzEwMFdoYXQgZG9lcyBvbmUgc2F5IGFib3V0IHRoZSAyMDE2IHZpbnRhZ2UgaW4gR2VybWFueT8gQmFsYW5jZSwgYmFsYW5jZSwgYmFsYW5jZSBwZXJoYXBzIGJlc3QgZXhwcmVzc2VkIGJ5IHdlbGwga25vd24gVVMgY29tbWVudGF0b3IgYW5kIGltcG9ydGVyIFRoaWVycnkgVGhlaXNlLCB3aG8gc2F5cyB0aGUgdmludGFnZSBpcyBhIGZydWl0IGRyaXZlbiwgbm9yIGZsb3JhbCBkcml2ZW4sIG5vciBtaW5lcmFsIGRyaXZlbiwgbm9yIGFjaWQgZHJpdmVuIHZpbnRhZ2UgaXQgaXMgYWxsIG9mIHRoZXNlLiBJbiB0aGUgY2FzZSBvZiB0aGlzIGZyaWVuZGx5IFNlbGJhY2ggYmxlbmQgb2YgTW9zZWwgc2l0ZXMsIHRoZXJlIGlzIHRvdWNoIGxlc3MgZWxlY3RyaWNpdHkgb3IgYnJpZ2h0IGFjaWRpdHkgaW4gMjAxNiBidXQgdGhlcmUgaXMgbW9yZSB3ZWlnaHQgYW5kIGZsYXZvdXIuIApJIHNlZW4gZmVtYWxlIHBsYXllcnMgYmUgImZvcmNlZCIgdG8gbGVhdmUgYSB0YWJsZSB2cyBodWdlIGFzc2hvbGVzIHdobyBhcmUgc3RpbGwgdGVjaG5pY2FsbHkgbm90IGJyZWFraW5nIGFueSBydWxlcyB3aXRoIHRoZWlyIHRhbGtpbmcuLiAKVG9wIHBvc3QgYWJvdXQgbG92aW5nIHlvdXIgam9iIGJlaW5nIGEgbWVtZSBpcyBzcG90IG9uLiAKT3BlbmluZyBhbmQgY2xlYW5pbmcgb3V0IG5ldXJhbCBwYXRod2F5cyBjYW4gaGVscCBpbXByb3ZlIGZ1bmN0aW9uYWxpdHkgYW5kIGZsZXhpYmlsaXR5IG9mIG1hbnkgYXJlYXMgYXJvdW5kIHRoZSBib2R5LiAKTm92ZW1iZXI6IEVwc3RlaW4gbXVzdCByZWdpc3RlciBpbiBOZXcgWW9yayBhcyB0aGUgaGlnaGVzdCBhbmQgbW9zdCBkYW5nZXJvdXMgbGV2ZWwgb2Ygc2V4IG9mZmVuZGVyLCBkZXNwaXRlIGVmZm9ydHMgYnkgaGltIGFuZCB0aGUgTmV3IFlvcmsgRGlzdHJpY3QgQXR0b3JuZXkncyBvZmZpY2UgdG8gbG93ZXIgdGhlIGNsYXNzaWZpY2F0aW9uLiBBIExldmVsIDMgc3RhdHVzIG1lYW5zICJoaWdoIHJpc2sgb2YgcmVwZWF0IG9mZmVuc2UgYW5kIGEgdGhyZWF0IHRvIHB1YmxpYyBzYWZldHkgZXhpc3RzLCIgYWNjb3JkaW5nIHRvIHRoZSBzdGF0ZSdzIGd1aWRlbGluZXMuCkVkZW45ODcgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMyBkYXlzIGFnbwpKb3lzdGlja3MgYXJlIHNvbWV3aGF0IG1vcmUgdW5pbnR1aXRpdmUgZm9yIGNhbWVyYSBtb3ZlbWVudCwgdGhvdWdoLiBUaGV5IHJhdGUvdmVsb2NpdHkgaW5wdXRzLCB3aGljaCBhcmUgZ3JlYXQgZm9yIG1vdmVtZW50IChwdXNoIGEgbGl0dGxlIHRvIHdhbGssIHB1c2ggbW9yZSB0byBydW4sIGV0YykuIEJ1dCBmb3IgbG9va2luZyBhcm91bmQsIHlvdXIgbmF0dXJhbCBwcm9ncmVzc2lvbiBpczogSSB3YW50IHRvIGxvb2sgYXQgdGhhdCAgPiBwb2ludCBoZWFkIGF0IGl0LiBGb3IgYSBtb3VzZSB0aGlzIGlzIHZlcnkgaW50dWl0aXZlLCBhcyB5b3VyIG1vdXNlIG1vdmVtZW50IG1hcHMgd2VsbCB0byBoZWFkIG1vdmVtZW50LiBXaXRoIGEgam95c3RpY2ssIHlvdSBub3Qgc2F5aW5nICJwb2ludCBteSBoZWFkIGF0IHRoaXMgdGhpbmciLCB5b3Ugc2F5aW5nICJ0dXJuIG15IGhlYWQgaW4gdGhpcyBkaXJlY3Rpb24gYXQgWCBkZWdyZWVzL3NlYywgdGhlbiBzdG9wIi4gV2l0aCBwcmFjdGljZSB5b3UgY2FuIGdldCBnb29kIGF0IGl0LCBhbmQgbWF5YmUgd2l0aCBsb25nIGVub3VnaCBiZSBlcXVhbGx5IGdvb2Qgd2l0aCBib3RoLCBidXQgaXQgYSBtdWNoIG1vcmUgZGlmZmljdWx0IHRpbWUgbGVhcm5pbmcgdG8gZG8gdGhhdCB3aXRoIGEgam95c3RpY2suClRoZSBpZGVhcyBzaGUgZ2F2ZSB5b3Ugd2lsbCBnZXQgeW91IGZhciwgYnV0IHlvdSBoYXZlIHRvIHN0YXkgb24gdGhlIHBhcnQgZm9yIG1vbnRocywgYW5kIG1heSBuZXZlciBnZXQgdG8gcHV0IHRoZSBwbHVnIGluLiBXaGF0IHNoZSBkb25lIGlzIGNvbnZpbmNlZCB5b3UgdG8gZ2l2ZSB5b3VyIGdmIG9yIHdpZmUgYSBiZXR0ZXIgb3JnYXNtLCB3aXRoIG5vIHJldHVybi4gUHV0IHlvdXIgZmluZ2VyIGluIGhlciBidXR0LiAKWW91IHNob3VsZCBhbHNvIGJlIHRha2luZyBzdGVwcyB0byBmaWd1cmUgb3V0IGhvdyB0byBzdGlsbCBnZXQgdGhpbmdzIGRvbmUgd2l0aGluIGEgZnJhbWV3b3JrIHRoYXQgc3VpdHMgeW91LCBvdGhlcndpc2UgaXQgYmVjb21lcyB5b3VyIHBhcnRuZXIgcmVzcG9uc2liaWxpdHkgdG8ga2VlcCB5b3UgIm9uIHRhc2siIGFuZCB0aGF0IGlzIGEgb25lIHdheSB0aWNrZXQgdG8gcmVzZW50bWVudHZpbGxlLiAKTGVlIHNheXMgaGUgZG9lcyBtb3JlIHRoYW4gNzAgcGVyY2VudCBvZiBoaXMgYnVzaW5lc3MgZHVyaW5nIHRob3NlIGhvdXJzICAgY2FzaW5vIHdvcmtlcnMsIGZpcmVmaWdodGVycywgYWlycG9ydCBiYWdnYWdlIGhhbmRsZXJzLCBldmVuIHBvbGljZSBvZmZpY2Vycy4gT25lIHdhcyBhIHdvbWFuIHdobyBoYWQganVzdCBmaW5pc2hlZCBwbGF5aW5nIHNsb3RzIGFmdGVyIGEgZGlubmVyIGF0IENvY28ncy4gQW5vdGhlciBzYWlkIGhlIHdhcyBhIExhcyBWZWdhcyBidXNpbmVzc21hbiBmcmVzaCBvZmYgYSBsYXRlIGZsaWdodCBob21lIGZyb20gQ2hpY2Fnby4gCiJOb3cgYWxsIHRoZSB0YXggY29sbGVjdG9ycyBhbmQgdGhlIHNpbm5lcnMgd2VyZSBjb21pbmcgbmVhciBIaW0gdG8gbGlzdGVuIHRvIEhpbS4gQm90aCB0aGUgUGhhcmlzZWVzIGFuZCB0aGUgc2NyaWJlcyBiZWdhbiB0byBncnVtYmxlLCBzYXlpbmcsICJUaGlzIG1hbiByZWNlaXZlcyBzaW5uZXJzIGFuZCBlYXRzIHdpdGggdGhlbS4iIFNvIEhlIHRvbGQgdGhlbSB0aGlzIHBhcmFibGUsIHNheWluZywgIldoYXQgbWFuIGFtb25nIHlvdSwgaWYgaGUgaGFzIGEgaHVuZHJlZCBzaGVlcCBhbmQgaGFzIGxvc3Qgb25lIG9mIHRoZW0sIGRvZXMgbm90IGxlYXZlIHRoZSBuaW5ldHkgbmluZSBpbiB0aGUgb3BlbiBwYXN0dXJlIGFuZCBnbyBhZnRlciB0aGUgb25lIHdoaWNoIGlzIGxvc3QgdW50aWwgaGUgZmluZHMgaXQ/IFdoZW4gaGUgaGFzIGZvdW5kIGl0LCBoZSBsYXlzIGl0IG9uIGhpcyBzaG91bGRlcnMsIHJlam9pY2luZy4gClNlZSBUcnVtcCBoZSBzYXlpbmcgaGUgd2FzbiBzZXJpb3VzICAgZG9uIGxldCB0aGUgcHJvc2VjdXRpb24gbWFrZSB5b3UgcmVhZCBiZXR3ZWVuIHRoZSBsaW5lcyBzZWUgaXQgZm9yIHlvdXJzZWxmLiAKIkhlIHdhcyBhIHdlYWx0aHkgZ3V5IHBsYXlpbmcgdmlkZW8gcG9rZXIuIG9uIGNydWlzZXMsIiBoaXMgYnJvdGhlciBzYWlkLCBhZGRpbmcgdGhhdCBTdGVwaGVuIGNvdWxkIGFmZm9yZCBhbnl0aGluZyBoZSB3YW50ZWQgYW5kIHBsYXllZCAkMTAwIGEgaGFuZCBwb2tlci4gVGhleSBkaXZvcmNlZCAyNyB5ZWFycyBhZ28gYWZ0ZXIgc2l4IHllYXJzIG9mIG1hcnJpYWdlLiBFcmljIFBhZGRvY2sgc2FpZCBoZSBoZWxwZWQgU3RlcGhlbiBtb3ZlIHRvIE1lc3F1aXRlIGFib3V0IGEgeWVhciBhZ28uCkEgc2FpbGluZyBmcm9tIE1vc2tlbmVzIHdoaWNoIGlzIG9ubHkgNWttIGZyb20gUmVpbmUgaXMgY29uc2lkZXJhYmx5IG1vcmUgYXR0cmFjdGl2ZSB0aGFuIHNsb2dnaW5nIHVwIHRvIFN2b2x2YWVyIGZvciBhbiAwMjAwIGRlcGFydHVyZSBhbmQgYSBzaW5ndWxhcmx5IHVuYXR0cmFjdGl2ZSAwNDAwIGFycml2YWwgYXQgQm9kby4KRmluZCBtdXNpYyB0aGF0IG1ha2VzIHlvdSB3YW50IHRvIGdldCB1cCBhbmQgZGFuY2Ugb3IgbXVzaWMgdGhhdCB3aWxsIGhlbHAgcGFzcyB0aW1lIHdoaWxlIGRvaW5nIGhvdXNlaG9sZCBjaG9yZXMgb3Igd2hpbGUgd2Fsa2luZyBmcm9tIHBsYWNlIHRvIHBsYWNlLiAKSGFuZCBSYW5raW5ncyBpbiBUZXhhcyBIb2xkZW0gUG9rZXIKSFJDIEJ1aWxkaW5nIFZhbmRhbGl6ZWQgICBMZXogR2V0IFJlYWwuCkgyRzIxIHdhcyBpbnRlbmRlZCB0byBiZSB0aGUgRWFydGggZWRpdGlvbiBvZiBUaGUgSGl0Y2hoaWtlcidzIEd1aWRlIHRvIHRoZSBHYWxheHksIHRoZSBmaWN0aW9uYWwgdG9tZSBhdCB0aGUgaGVhcnQgb2YgRG91Z2xhcyBBZGFtcycgZ2FsYWN0aWNhbGx5IHN1Y2Nlc3NmdWwgcmFkaW8gc2VyaWVzIGFuZCBib29rcy4gQmVmb3JlIHRoZSBzaXRlIGJlY2FtZSBhIHJlYWxpdHksIERvdWdsYXMgc2FpZCB0aGF0IGhpcyBvcmlnaW5hbCBpZGVhIHdhcyBmb3IgImEgY29sbGFib3JhdGl2ZSBndWlkZSwgb25lIHRoYXQgd2FzIHdyaXR0ZW4gYW5kIGtlcHQgdXAgdG8gZGF0ZSBieSB0aGUgcGVvcGxlIHdobyB1c2UgaXQsIGluIHJlYWwgdGltZSIuIEhlIHJlbWFya2VkIHRoYXQgYXQgdGhlIHRpbWUgaGUgZGlkbid0IHJlYWxpc2UgdGhhdCBzdWNoIGEgdGhpbmcgY291bGQgYmUgcG9zc2libGUsIG9yIGhvdyBwb3dlcmZ1bCBhIG5ldHdvcmtlZCBjb21tdW5pdHkgd29ya2luZyB0b2dldGhlciB0byB0aGUgc2FtZSBlbmQgY291bGQgYmUuIApGciBkaWUgRW50d2lja2x1bmcgbmV1ZXIgTWVkaWthbWVudGUgZ2lidCBlaW5lIGdyb2UgRmlybWEgamhybGljaCBiaXMgenUgOSBNaWxsaW9uZW4gRG9sbGFyIGF1cyEgV296dSBzb2xsIG1hbiBzaWNoIGFsc28gZGFtaXQgYXJyYW5naWVyZW4sIGRhc3MgaXJnZW5kZWluIFBmZW5uaWcgIEFydGlrZWwgbWdsaWNoZXJ3ZWlzZSB3ZXNlbnRsaWNoIGVmZmVrdGl2ZXIgaXN0LCBhbHMgZXh0cmVtIHRldXJlIFBycGFyYXRlP1p1bSBWYXRlciBkZXIgaW5uZXJlbiBBbndlbmR1bmcgZGVzIFdhc3NlcnN0b2ZmcGVyb3hpZHMgSDJPMiBpbiBSdXNzbGFuZCB3dXJkZSBQcm9mLiBJd2FuIFBhd2xvdml0c2NoIE5ldW1pd2FraW4sIE1lbnNjaCBkZXMgSmFocmVzIDIwMDIuIApNYW55IG9mIHRoZSBhcHBsaWNhbnRzIGhhZCBub3Qgc2V0IGZvb3QgaW4gYSBzY2hvb2wgc2luY2UgdGhleSBhdHRlbmRlZCBvbmUgdGhlbXNlbHZlcyAzMCBvciA0MCB5ZWFycyBlYXJsaWVyLCBhbmQgc28gd2VyZSBzZW50IG9mZiBmb3IgYSB3ZWVrIGltbWVyc2lvbi4gCldlaXRlciBzY2hyZWlidCBkaWUgRkFaLCBkYXNzIFNpZSBhdWNoIHdlaXRlcmhpbiBrb250cm92ZXJzZSBNZWludW5nZW4gdmVyZmZlbnRsaWNoZW4gd29sbGVuLCBhdWNoIHdlbm4gZGllc2UgZGF6dSBmaHJlbiwgZGFzcyBMZXV0ZSBzaWNoIGFuZ2VncmlmZmVuIGZobGVuLiBEYXMgWmllbCBpc3QgYWxzbyBlcmtscnRlcm1hc3NlbiBuaWNodCwgTGV1dGUgYW56dWdyZWlmZW4sIHNvbmRlcm4gZGFzIFJlY2h0IGF1ZiBNZWludW5nc2ZyZWloZWl0IHNvd2VpdCB3aWUgbWdsaWNoIHdhaHJ6dW5laG1lbiBiencuIApBbHNvIHRyeSBwcm92aWRpbmcgcHJpdmF0ZSB0dXRvcmluZyBpbiB0aGUgY2xhc3NlcyB5b3UgcGFzc2VkLCB5b3UgY2FuIGNoYXJnZSBhIGRlY2VudCBhbW91bnQgbW9zdCB0aW1lcyAodGF4IGZyZWUpIGFuZCB5b3UgY2FuIGhhdmUgdGhlbSBtZWV0IHlvdSBhdCB0aGUgbGlicmFyeSBhdCB0aW1lcyBtb3N0IGNvbnZlbmllbnQgZm9yIHlvdS4uIApEdXJpbmcgdGhlIGFnb25pc2luZyBkZW5vdWVtZW50IG9mIHRoZSBwYXN0IHRocmVlIG1vbnRocywgc2hlIGhhcyBiZWVuIHRoZSBpbmV2aXRhYmxlIHJ1bm5lciB1cC4gU2hlJ3Mgc3RpbGwgaW4gaXQsIHNoZSBwcm90ZXN0cywgZXZlbiBub3cuIEJ1dCBzaGUgaGFzIGxvc3QuClN0cm9udGl1bSBhbmQgY2VzaXVtIGxlYWNoZWQgb3IgZGlzc29sdmVkIGZyb20gc2ltdWxhdGVkIGZhbGxvdXQgYmVoYXZlZCBpbiB0aGUgc2FtZSB3YXksIG1ldGFib2xpY2FsbHksIGFmdGVyIGFic29ycHRpb24gYXMgdGhleSBkaWQgd2hlbiB0aGUgdHJhY2VyIHdhcyBzd2FsbG93ZWQgaW4gYSBzb2x1dGlvbiBvciBpbmplY3RlZCBpbnRyYXZlbm91c2x5LiAKRmlyc3QsIGFzIG5vdGVkLCBhIHJldmlldyBvZiBjb21wZW5zYXRpb24gd2lsbCBvY2N1ci4gCklmIHlvdSBnZXQgYSBiYWQgYmVhdCBvciBhbmQgZ2V0IGJ1c3RlZCBvbmNlIG9yIHR3aWNlIHdhaXQgYSBmZXcgcGF5Y2hlY2tzIHdoaWxlIHJlYWRpbmcgdXAgb24gbG93IHN0YWtlcyBsaXZlIGRpZmZlcmVuY2VzIGNvbXBhcmVkIHRvIG9ubGluZSBhbmQga2VlcCBwbGF5aW5nIHlvdXIgb25saW5lIGdhbWUgdG8gc3RheSBzaGFycC4uIApXaG8ncyB0byBibGFtZSBmb3IgYWxsIHRoZSBwcm9ibGVtcyB0aGF0IGFsbW9zdCBpbW1lZGlhdGVseSBiZXNldCBSYWpuZWVzaHB1cmFtLCB0aGUgY29tbXVuZSAgIHllcywgc29tZSBjYWxsIGl0IGEgY3VsdCAgIHRoYXQgcm9zZSBvdXRzaWRlIG9mIHRpbnkgQW50ZWxvcGUsIGluIG5vcnRoIGNlbnRyYWwgT3JlZ29uPyBXZXJlIHRoZSBoaXBwaWUgbGlrZSwgbWFyb29uIGNsYWQgUmFqbmVlc2hlZXMsIHdobyBwcmFjdGljZWQgb3BlbiBzZXggYW5kIGhlbGQgd2lsZCBjZXJlbW9uaWVzIGF0ICJSYW5jaG8gUmFqbmVlc2gsIiB0cmFtcGxpbmcgb24gdGhlIHJpZ2h0cyBvZiB0aG9zZSBhbHJlYWR5IHRoZXJlIGluIHRyeWluZyB0byBidWlsZCB0aGVpciBjaXR5PyBEaWQgdGhleSB0aHJlYXRlbiB0aGUgbG9jYWwgZm9sa3MnIHdheSBvZiBsaWZlPyBPciBjb3VsZCB0aGUgdG93bnNwZW9wbGUgb2YgQW50ZWxvcGUgaGF2ZSBiZWVuIGEgbGl0dGxlIG1vcmUgYWNjb21tb2RhdGluZywgYSBsaXR0bGUgbGVzcyB3YXJ5LCBhIHRhZCBtb3JlIGFjY2VwdGluZz8KRm9yIGV4YW1wbGUsIGlmIHRoZWlyIGlubmVyIHZvaWNlIHRlbGxzIHRoZW0sICJJIG1lc3MgdXAgZXZlcnkgYXR0ZW1wdCBhdCBhIHJlbGF0aW9uc2hpcCwiIHRoYXQgc3VwcG9zZXMgdGhhdCBvbmUgaXMgY29zbWljYWxseSBkb29tZWQgdG8gYmUgc2luZ2xlIGJhc2VkIG9uIG9uZSByZWxhdGlvbnNoaXAuIEl0IGFsc28gc3VnZ2VzdHMgdGhhdCB0aGVyZSBpcyBub3RoaW5nIG9uZSBjYW4gbGVhcm4gZnJvbSBhIGZhaWx1cmUsIG9yIHNraWxscyB0byBpbXByb3ZlIG9uLiAKQmFuZHMgRGFubm8gaGFzIGJlZW4gaW50byBsYXRlbHk6Ck15IG1vbSBsaXZlZCBpbiB0aGUgc2FtZSBhcGFydG1lbnQgY29tcGxleCBhdCB0aGUgdGltZSBhbmQgd2FzIDIwMCBmZWV0IGF3YXkgYW5kIGhhZCBubyBjbHVlLiBTaGUgZm91bmQgaGltIGFsb25lIGVhdGluZyByYXcgcmFtZW4gbm9vZGxlcyBvbmUgZGF5LiAKTW9yZSBpbXBvcnRhbnRseSwgYXMgYSBwdWJsaWMgZmlndXJlIHNoZSBzaG91bGQga25vdyB0aGF0IHdoYXQgc2hlIHNheXMgaGFzIGVmZmVjdHMgb24gYSBicm9hZCBhdWRpZW5jZS4gSWYgc2hlIGJlbGlldmVzIGhhdmluZyBhIFBoRCBtYWtlcyBoZXIgbW9yZSBxdWFsaWZpZWQgdG8gbWFrZSBwb29yIG1lZGljYWwgZGVjaXNpb25zLCB0aGVuIHNoZSBzaG91bGQgYWxzbyBiZWxpZXZlIHRoYXQgaGVyIFBoRCBjb21lcyB3aXRoIHRoZSBzb2NpYWwgb2JsaWdhdGlvbiBvZiBub3QgZGlzc2VtaW5hdGluZyBpbmNvbXBsZXRlIGluZm9ybWF0aW9uIChpZSBpZiB5b3Ugbm90IHNvbGQgb24gdmFjY2luZXMgb25lIHdheSBvciB0aGUgb3RoZXIsIGtlZXAgeW91ciBtb3V0aCBzaHV0KS4gCkFtZXJpY2EgRm9yZXZlcgpDaXR5IE9mIEZvcnQgTGF1ZGVyZGFsZSBTaHV0cyBEb3duIFJvYWRzaWRlIEZpcmV3b3JrcyBTdGFuZCwgU2VpemVzIEludmVudG9yeSBXb3J0aCAkMTAwSyJJdCB3YXMgcHJvYmFibHkgb3ZlciAkMTAwLDAwMCB3b3J0aCBvZiBtZXJjaGFuZGlzZSwiIHNhaWQgRmlyZSBNYXJzaGFsIEplZmYgTHVjYXMuCkJ1dCBpZiB5b3UgdGhpbmsgdGhhdCBub3QgdGlwcGluZyB5b3VyIHNlcnZlciBiZWNhdXNlIGl0ICJ3ZWlyZCIgdG8geW91IG9yIHRoaW5rIGl0IGFuIHVuZmFpciBwcmFjdGljZSB0byB0aGUgY29uc3VtZXIsIHRoZW4gdGhhdCBpc24gZ29pbmcgdG8gZG8gYW55dGhpbmcgb3RoZXIgdGhhbiBodXJ0IHRoZSBzZXJ2ZXIgd2hvIHRocm91Z2ggbm8gZmF1bHQgb2YgdGhlaXIgb3duIGV4aXN0cyBhbmQgd29ya3MgaW4gdGhpcyB0eXBlIG9mIGVjb25vbXkuIApMaXZpbmcgaW4gSG91c3RvbiwgVFgsIGFjcm9zcyB0b3duIGlzIGxpa2UgYSA0MCBtaW51dGUgZHJpdmUuIApPc3Rlb3BhdGhpYyBzY2hvb2xzIGFyZSBnZW5lcmFsbHkgbGVzcyBzZWxlY3RpdmUsIHNvIHRoZSBhdmVyYWdlIHNjb3JlcyB3aWxsIGJlIGFmZmVjdGVkIGJ5IHRoaXMuVGhpcyBpcyBubyB3YXkgaW5kaWNhdGVzIHRoZSBkaWZmZXJlbmNlcyBpbiB0cmVhdG1lbnQgcXVhbGl0eSBvZiBpbmRpdmlkdWFsIE1EcyBhbmQgRE9zLCBob3dldmVyLiBOb3Qgb25seSBhcmUgdHJlbmRzIGlycmVzcGVjdGl2ZSB0byBpbmRpdmlkdWFscywgYnV0IGJvb2sgYW5kIHBlbmNpbCB0ZXN0IHNjb3JlcyBhcmUgbm90IGEgZ3JlYXQgaW5kaWNhdG9yIG9mIHJlYWwgd29ybGQgcHJhY3RpY2UuSWYgeW91IGluIHRoZSBtZWRpY2FsIGZpZWxkLCB5b3UgYmVzdCBlZHVjYXRlIHlvdXJzZWxmIGFuZCBnZXQgdXNlZCB0byBET3MuIEluIDIwMjAsIGFsbCByZXNpZGVuY2llcyBiZXR3ZWVuIERPIGFuZCBNRCBhcmUgbWVyZ2luZyBpbnRvIG9uZSBwb29sIGFuZCBvc3Rlb3BhdGhpYyBzY2hvb2xzIGFyZSBnYWluaW5nIG1vcmUgcmVjb2duaXRpb24uTWFydGlhblJhcHRvciAgMiBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvU2VlbXMgbGlrZSB5b3UgZHJvcHBpbmcgYSB0b24gb2YgaGludHMsIGFuZCBzaGUgaXNuIHBpY2tpbmcgdXAgb24gdGhlbSBiZWNhdXNlIHNoZSBkb2VzbiB3YWFhYWFhbnQgdG8uIApBY2NvcmRpbmcgdG8gUGx1dGFyY2gsIHRoZXJlIHdhcyBhIGRlY3JlcGl0IG9sZCBTcGFydGFuIG5vYmxlIG5hbWVkIENsZW9ueW11cywgd2hvLCB0aHJvdWdoIGx1Y2sgYW5kIHByb2JhYmx5IGEgbG90IG9mIG1vbmV5LCBtYXJyaWVkIHRoZSBtdWNoIHlvdW5nZXIgQ2hlbGlkb25pcyAod2hvIHdhcyBhIGxhZHksIGluIGNhc2Ugd2UgaGFkIHRvIG1ha2UgdGhhdCBjbGVhcikuIEl0IHNob3VsZCBhbHNvIGJlIG5vdGVkIHRoYXQgQ2xlb255bXVzIHdhcyBhIGJpdCBvZiBhIC4gQXMgb2Z0ZW4gaGFwcGVucyBpbiB0aGVzZSBjYXNlcywgQ2xlb255bXVzIGVuZGVkIHVwIGN1Y2tvbGRlZCB3aGVuIENoZWxpZG9uaXMgZmVsbCBpbiBsb3ZlIHdpdGggaGVyIGdyZWF0IG5lcGhldy4gClRvIHRydWx5IHNldCB5b3VyIHNldCBvZiBjaGlwcyBhc2lkZSB5b3UgY2FuIGVuZ3JhdmUgeW91ciBuYW1lIG9uIHRoZSBicmFzcyBuYW1lcGxhdGUgdGhhdCBzaXRzIGF0b3AgeW91ciBjYXNlLiAK|<---