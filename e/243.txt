<!DOCTYPE html>
<html class="" lang="en-au">
 <head>
  <title>
   [area1][mkey1][keyword1][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="c9VNQvNVe0EbPEFRc5rCgP6NdXqdMh0JaI57fMLRjI4" name="google-site-verification"/>
  <meta content="app-id=524599864" name="apple-itunes-app"/>
  <meta charset="utf-8"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <noscript>
  </noscript>
  <noscript>
  </noscript>
  <meta content="AFR BOSS News" property="og:title">
   <meta content="Read the latest AFR BOSS related news online. Visit the website to find out more." property="og:description">
    <meta content="https://www.afr.com/boss" property="og:url">
     <meta content="https://images.smh.com.au/2014/02/12/5155383/FAIRFAX-logo.jpg" property="og:image"/>
     <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:site_name"/>
     <meta content="en_US" property="og:locale"/>
     <meta content="112905165500100" property="fb:app_id"/>
     <meta content="150910108292573" property="fb:pages"/>
     <meta content="308818925809645" property="fb:pages"/>
     <meta content="237280529652399" property="fb:pages"/>
    </meta>
   </meta>
  </meta>
 </head>
 <body class="no-js desktop subindex " itemscope="itemscope" itemtype="http://schema.org/WebPage">
  <noscript>
   <iframe height="0" src="https://www.googletagmanager.com/ns.html?id=GTM-NN4PPKH" style="display:none;visibility:hidden" width="0">
   </iframe>
  </noscript>
  <a class="skip-link" href="v">
   Skip to navigation
  </a>
  <a class="skip-link" href="t">
   Skip to content
  </a>
  [link]
  
  <a class="skip-link" href="/accessibility">
   Help using this website - Accessibility statement
  </a>
  <header class="header-wrap gel-layout">
   <div class="wrap">
    <div class="header-inner">
     <div class="header__block">
     </div>
     <div class="header__block">
      <div class="logo">
       <a href="m" title="Financial Review - business, finance and investment news | afr.com">
        Financial Review - afrrr.com
       </a>
      </div>
     </div>
     <div class="header__block">
     </div>
    </div>
    <div class="navigation">
     <nav class="nav nav--global gel-layout" role="navigation">
      <button class="btn btn--large-text btn--tertiary btn--slate icon--menu--before" type="button">
       Menu
      </button>
      <ul class="nav__menu--primary">
       <li class="nav__item--primary ">
        [ahref]
        
       </li>
       <li class="nav__item--primary has-subnav ">
        <a href="/news">
         News
        </a>
        <ul class="nav__menu--secondary">
         <li class="">
          [ahref]
          
         </li>
         <li class="">
          [link]
          
         </li>
         <li class="">
          <a href="/news/economy">
           Economy
          </a>
         </li>
         <li class="">
          <a href="/news/world">
           World
          </a>
         </li>
         <li class="">
          [search]
          
         </li>
         <li class="">
          [ahref]
          
         </li>
         <li class="">
          <a href="/news/investigations">
           Investigations
          </a>
         </li>
        </ul>
       </li>
       <li class="nav__item--primary has-subnav ">
        [ahref]
        
        <ul class="nav__menu--secondary">
         <li class="">
          <a href="/business/banking-and-finance">
           Banking &amp; Finance
          </a>
         </li>
         <li class="">
          <a href="/business/mining">
           Mining
          </a>
         </li>
         <li class="">
          [ahref]
          
         </li>
         <li class="">
          <a href="/business/telecommunications">
           Telecommunications
          </a>
         </li>
         <li class="">
          <a href="/business/retail">
           Retail
          </a>
         </li>
         <li class="">
          [ahref]
          
         </li>
         <li class="">
          <a href="/business/media-and-marketing">
           Media &amp; Marketing
          </a>
         </li>
         <li class="">
          [link]
          
         </li>
         <li class="">
          [link]
          
         </li>
         <li class="">
          <a href="/business/small-business">
           Small Business
          </a>
         </li>
         <li class="">
          <a href="/business/insurance">
           Insurance
          </a>
         </li>
         <li class="">
          <a href="/business/infrastructure">
           Infrastructure
          </a>
         </li>
         <li class="">
          <a href="/business/health">
           Health
          </a>
         </li>
         <li class="">
          <a href="/business/construction">
           Construction
          </a>
         </li>
         <li class="">
          [ahref]
          
         </li>
         <li class="">
          <a href="/business/manufacturing">
           Manufacturing
          </a>
         </li>
         <li class="">
          [link]
          
         </li>
         <li class="">
          [link]
          
         </li>
         <li class="">
          [link]
          
         </li>
        </ul>
       </li>
       <li class="nav__item--primary has-subnav ">
        [ahref]
        
        <ul class="nav__menu--secondary">
         <li class="">
          <a href="/markets/equity-markets">
           Equity Markets
          </a>
         </li>
         <li class="">
          <a href="/markets/debt-markets">
           Debt Markets
          </a>
         </li>
         <li class="">
          [ahref]
          
         </li>
         <li class="">
          <a href="/markets/commodities">
           Commodities
          </a>
         </li>
         <li class="">
          [ahref]
          
         </li>
         <li class="">
          [link]
          
         </li>
        </ul>
       </li>
       <li class="nav__item--primary">
        <a href="/street-talk">
         Street Talk
        </a>
       </li>
       <li class="nav__item--primary has-subnav ">
        <a href="/real-estate">
         Real Estate
        </a>
        <ul class="nav__menu--secondary">
         <li class="">
          [ahref]
          
         </li>
         <li class="">
          [ahref]
          
         </li>
        </ul>
       </li>
       <li class="nav__item--primary has-subnav ">
        <a href="/opinion">
         Opinion
        </a>
        <ul class="nav__menu--secondary">
         <li class="">
          <a href="/opinion/editorials">
           Editorials
          </a>
         </li>
         <li class="">
          [ahref]
          
         </li>
         <li class="">
          <a href="/opinion/columnists">
           Columnists
          </a>
         </li>
        </ul>
       </li>
       <li class="nav__item--primary has-subnav ">
        <a href="/technology">
         Technology
        </a>
        <ul class="nav__menu--secondary">
         <li class="">
          <a href="/technology/mobiles-and-tablets">
           Mobiles &amp; Tablets
          </a>
         </li>
         <li class="">
          <a href="/technology/gadgets">
           Gadgets
          </a>
         </li>
         <li class="">
          <a href="/technology/apps">
           Apps
          </a>
         </li>
         <li class="">
          <a href="/technology/web">
           Web
          </a>
         </li>
         <li class="">
          [link]
          
         </li>
         <li class="">
          [ahref]
          
         </li>
         <li class="">
          [ahref]
          
         </li>
         <li class="">
          [link]
          
         </li>
         <li class="">
          [ahref]
          
         </li>
        </ul>
       </li>
       <li class="nav__item--primary has-subnav ">
        [link]
        
        <ul class="nav__menu--secondary">
         <li class="">
          <a href="/personal-finance/shares">
           Shares
          </a>
         </li>
         <li class="">
          <a href="/personal-finance/managed-funds">
           Managed Funds
          </a>
         </li>
         <li class="">
          <a href="/personal-finance/fixed-income">
           Fixed Income
          </a>
         </li>
         <li class="">
          <a href="/personal-finance/trusts">
           Trusts
          </a>
         </li>
         <li class="">
          <a href="/personal-finance/banking">
           Banking
          </a>
         </li>
         <li class="">
          [ahref]
          
         </li>
         <li class="">
          <a href="/personal-finance/tax">
           Tax
          </a>
         </li>
         <li class="">
          <a href="/personal-finance/insurance">
           Insurance
          </a>
         </li>
         <li class="">
          <a href="/personal-finance/specialist-investments">
           Specialist Investments
          </a>
         </li>
         <li class="">
          [link]
          
         </li>
         <li class="">
          <a href="/personal-finance/portfolio-management">
           Portfolio Management
          </a>
         </li>
        </ul>
       </li>
       <li class="nav__item--primary has-subnav is-selected">
        [link]
        
        <ul class="nav__menu--secondary">
         <li class="">
          <a href="/leadership/management">
           Management
          </a>
         </li>
         <li class="">
          <a href="/leadership/careers">
           Careers
          </a>
         </li>
         <li class="">
          [ahref]
          
         </li>
         <li class="">
          [ahref]
          
         </li>
         <li class="">
          <a href="/leadership/workplace">
           Workplace
          </a>
         </li>
         <li class="">
          [link]
          
         </li>
         <li class="is-selected">
          <a href="/boss">
           Boss
          </a>
         </li>
        </ul>
       </li>
       <li class="nav__item--primary has-subnav ">
        [link]
        
        <ul class="nav__menu--secondary">
         <li class="">
          [link]
          
         </li>
         <li class="">
          [link]
          
         </li>
         <li class="">
          [ahref]
          
         </li>
         <li class="">
          [link]
          
         </li>
         <li class="">
          [link]
          
         </li>
         <li class="">
          <a href="/lifestyle/cars-bikes-and-boats">
           Cars Bikes &amp; Boats
          </a>
         </li>
         <li class="">
          [ahref]
          
         </li>
         <li class="">
          [ahref]
          
         </li>
        </ul>
       </li>
       <li class="nav__item--primary has-subnav-sitelist">
        [ahref]
        
        <div class="sitemap">
         <div class="nav--sitelist flex-grid">
          <div class="col-3-units">
           [ahref]
           
           <ul>
            <li>
             <a href="/news/politics">
              Politics
             </a>
            </li>
            <li>
             <a href="/news/policy">
              Policy
             </a>
            </li>
            <li>
             <a href="/news/economy">
              Economy
             </a>
            </li>
            <li>
             <a href="/news/world">
              World
             </a>
            </li>
            <li>
             [link]
             
            </li>
            <li>
             <a href="/rear-window">
              Rear Window
             </a>
            </li>
           </ul>
          </div>
          <div class="col-3-units">
           [link]
           
           <ul>
            <li>
             <a href="/business/banking-and-finance">
              Banking &amp; Finance
             </a>
            </li>
            <li>
             <a href="/business/mining">
              Mining
             </a>
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             <a href="/business/transport">
              Transport
             </a>
            </li>
            <li>
             <a href="/business/media-and-marketing">
              Media &amp; Marketing
             </a>
            </li>
            <li>
             [link]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             <a href="/business/small-business">
              Small Business
             </a>
            </li>
            <li>
             <a href="/business/insurance">
              Insurance
             </a>
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             <a href="/business/agriculture">
              Agriculture
             </a>
            </li>
            <li>
             <a href="/business/environmental-services">
              Environmental Services
             </a>
            </li>
            <li>
             <a href="/business/sport">
              Sport
             </a>
            </li>
            <li>
             <a href="/business/gambling">
              Gambling
             </a>
            </li>
           </ul>
          </div>
          <div class="col-3-units">
           <a href="/markets">
            Markets
           </a>
           <ul>
            <li>
             [ahref]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             <a href="/markets/currencies">
              Currencies
             </a>
            </li>
            <li>
             [link]
             
            </li>
            <li>
             <a href="/markets/derivatives">
              Derivatives
             </a>
            </li>
            <li>
             [link]
             
            </li>
           </ul>
           [ahref]
           
           [link]
           
           <ul>
            <li>
             <a href="/real-estate/commercial">
              Commercial
             </a>
            </li>
            <li>
             <a href="/real-estate/residential">
              Residential
             </a>
            </li>
           </ul>
           <a href="/opinion">
            Opinion
           </a>
           <ul>
            <li>
             [link]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [link]
             
            </li>
           </ul>
          </div>
          <div class="col-3-units">
           <a href="/technology">
            Technology
           </a>
           <ul>
            <li>
             <a href="/technology/mobiles-and-tablets">
              Mobiles &amp; Tablets
             </a>
            </li>
            <li>
             [link]
             
            </li>
            <li>
             <a href="/technology/apps">
              Apps
             </a>
            </li>
            <li>
             [link]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             <a href="/technology/gaming">
              Gaming
             </a>
            </li>
            <li>
             <a href="/technology/cloud-computing">
              Cloud Computing
             </a>
            </li>
            <li>
             [link]
             
            </li>
            <li>
             <a href="/technology/technology-companies">
              Technology Companies
             </a>
            </li>
           </ul>
           [ahref]
           
           <ul>
            <li>
             [link]
             
            </li>
            <li>
             <a href="/personal-finance/managed-funds">
              Managed Funds
             </a>
            </li>
            <li>
             [link]
             
            </li>
            <li>
             [link]
             
            </li>
            <li>
             [link]
             
            </li>
            <li>
             <a href="/personal-finance/budgeting">
              Budgeting
             </a>
            </li>
            <li>
             <a href="/personal-finance/tax">
              Tax
             </a>
            </li>
            <li>
             [link]
             
            </li>
            <li>
             [link]
             
            </li>
            <li>
             [ahref]
             
            </li>
           </ul>
          </div>
          <div class="col-3-units">
           <a href="/leadership">
            Leadership
           </a>
           <ul>
            <li>
             <a href="/leadership/management">
              Management
             </a>
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             <a href="/leadership/company-culture">
              Company Culture
             </a>
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [link]
             
            </li>
            <li>
             <a href="/boss">
              Boss
             </a>
            </li>
           </ul>
           [ahref]
           
           <ul>
            <li>
             <a href="/lifestyle/travel">
              Travel
             </a>
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [link]
             
            </li>
            <li>
             <a href="/lifestyle/watches-and-jewellery">
              Watches &amp; Jewellery
             </a>
            </li>
            <li>
             <a href="/lifestyle/arts-and-entertainment">
              Arts &amp; Entertainment
             </a>
            </li>
            <li>
             <a href="/lifestyle/cars-bikes-and-boats">
              Cars, Bikes &amp; Boats
             </a>
            </li>
            <li>
             [link]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [link]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [ahref]
             
            </li>
           </ul>
          </div>
         </div>
        </div>
       </li>
      </ul>
      <button class="btn btn--secondary btn--slate btn--icon--search" type="button">
       Toggle the AFR search box
      </button>
      <div class="site-search top-search">
       <form action="/search.html" id="searchBarForm" method="get">
        <label class="is-vishidden" for="top-search">
         Search AFR
        </label>
        <label class="is-vishidden" for="top-search-submit">
         Submit your search
        </label>
        <label class="is-vishidden" for="top-search-reset">
         Reset your search
        </label>
       </form>
      </div>
     </nav>
    </div>
   </div>
   <div class="navigation">
    <nav class="nav nav--slideout gel-layout" role="navigation">
     <div class="nav__header">
      <button class="btn btn--secondary btn--slate btn--icon--close" type="button">
       Close menu
      </button>
      <div class="site-search side-search">
       <form action="/search.html" id="searchBarForm" method="get">
        <label class="is-vishidden" for="side-search">
         Search AFR
        </label>
        <label class="is-vishidden" for="side-search-submit">
         Submit your search
        </label>
        <label class="is-vishidden" for="side-search-reset">
         Reset your search
        </label>
       </form>
      </div>
     </div>
     <ul class="nav__menu--primary">
      <li class="nav__item--primary ">
       <a href="/">
        Home
       </a>
      </li>
      <li class="nav__item--primary has-subnav ">
       [ahref]
       
       <span class="icon--chevron-down--before">
       </span>
       <ul class="nav__menu--secondary">
        <li class="">
         <a href="/news/politics">
          Politics
         </a>
        </li>
        <li class="">
         <a href="/news/policy">
          Policy
         </a>
        </li>
        <li class="">
         [link]
         
        </li>
        <li class="">
         [ahref]
         
        </li>
        <li class="">
         [ahref]
         
        </li>
        <li class="">
         [link]
         
        </li>
        <li class="">
         [ahref]
         
        </li>
       </ul>
      </li>
      <li class="nav__item--primary has-subnav ">
       <a href="/business">
        Business
       </a>
       <span class="icon--chevron-down--before">
       </span>
       <ul class="nav__menu--secondary">
        <li class="">
         [ahref]
         
        </li>
        <li class="">
         <a href="/business/mining">
          Mining
         </a>
        </li>
        <li class="">
         <a href="/business/energy">
          Energy
         </a>
        </li>
        <li class="">
         <a href="/business/telecommunications">
          Telecommunications
         </a>
        </li>
        <li class="">
         [ahref]
         
        </li>
        <li class="">
         [ahref]
         
        </li>
        <li class="">
         [link]
         
        </li>
        <li class="">
         [link]
         
        </li>
        <li class="">
         <a href="/business/legal">
          Legal
         </a>
        </li>
        <li class="">
         [link]
         
        </li>
        <li class="">
         <a href="/business/insurance">
          Insurance
         </a>
        </li>
        <li class="">
         [ahref]
         
        </li>
        <li class="">
         <a href="/business/health">
          Health
         </a>
        </li>
        <li class="">
         [ahref]
         
        </li>
        <li class="">
         [ahref]
         
        </li>
        <li class="">
         [ahref]
         
        </li>
        <li class="">
         <a href="/business/agriculture">
          Agriculture
         </a>
        </li>
        <li class="">
         [link]
         
        </li>
        <li class="">
         [ahref]
         
        </li>
       </ul>
      </li>
      <li class="nav__item--primary has-subnav ">
       <a href="/markets">
        Markets
       </a>
       <span class="icon--chevron-down--before">
       </span>
       <ul class="nav__menu--secondary">
        <li class="">
         [link]
         
        </li>
        <li class="">
         <a href="/markets/debt-markets">
          Debt Markets
         </a>
        </li>
        <li class="">
         [link]
         
        </li>
        <li class="">
         [ahref]
         
        </li>
        <li class="">
         [link]
         
        </li>
        <li class="">
         [ahref]
         
        </li>
       </ul>
      </li>
      <li class="nav__item--primary">
       [link]
       
      </li>
      <li class="nav__item--primary has-subnav ">
       <a href="/real-estate">
        Real Estate
       </a>
       <span class="icon--chevron-down--before">
       </span>
       <ul class="nav__menu--secondary">
        <li class="">
         [ahref]
         
        </li>
        <li class="">
         [link]
         
        </li>
       </ul>
      </li>
      <li class="nav__item--primary has-subnav ">
       [ahref]
       
       <span class="icon--chevron-down--before">
        [link][search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>
       </span>
       <ul class="nav__menu--secondary">
        <li class="">
         <a href="/opinion/editorials">
          Editorials
         </a>
        </li>
        <li class="">
         [ahref]
         
        </li>
        <li class="">
         <a href="/opinion/columnists">
          Columnists
         </a>
        </li>
       </ul>
      </li>
      <li class="nav__item--primary has-subnav ">
       <a href="/technology">
        Technology
       </a>
       <span class="icon--chevron-down--before">
       </span>
       <ul class="nav__menu--secondary">
        <li class="">
         [link]
         
        </li>
        <li class="">
         [link]
         
        </li>
        <li class="">
         [link]
         
        </li>
        <li class="">
         <a href="/technology/web">
          Web
         </a>
        </li>
        <li class="">
         [link]
         
        </li>
        <li class="">
         <a href="/technology/gaming">
          Gaming
         </a>
        </li>
        <li class="">
         [link]
         
        </li>
        <li class="">
         [ahref]
         
        </li>
        <li class="">
         <a href="/technology/technology-companies">
          Technology Companies
         </a>
        </li>
       </ul>
      </li>
      <li class="nav__item--primary has-subnav ">
       [ahref]
       
       <span class="icon--chevron-down--before">
        <br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]
       </span>
       <ul class="nav__menu--secondary">
        <li class="">
         <a href="/personal-finance/shares">
          Shares
         </a>
        </li>
        <li class="">
         <a href="/personal-finance/managed-funds">
          Managed Funds
         </a>
        </li>
        <li class="">
         <a href="/personal-finance/fixed-income">
          Fixed Income
         </a>
        </li>
        <li class="">
         [ahref]
         
        </li>
        <li class="">
         [ahref]
         
        </li>
        <li class="">
         <a href="/personal-finance/budgeting">
          Budgeting
         </a>
        </li>
        <li class="">
         [link]
         
        </li>
        <li class="">
         [ahref]
         
        </li>
        <li class="">
         <a href="/personal-finance/specialist-investments">
          Specialist Investments
         </a>
        </li>
        <li class="">
         [link]
         
        </li>
        <li class="">
         <a href="/personal-finance/portfolio-management">
          Portfolio Management
         </a>
        </li>
       </ul>
      </li>
      <li class="nav__item--primary has-subnav is-selected">
       [link]
       
       <span class="icon--chevron-down--before">
       </span>
       <ul class="nav__menu--secondary">
        <li class="">
         [ahref]
         
        </li>
        <li class="">
         [ahref]
         
        </li>
        <li class="">
         [ahref]
         
        </li>
        <li class="">
         [link]
         
        </li>
        <li class="">
         <a href="/leadership/workplace">
          Workplace
         </a>
        </li>
        <li class="">
         [ahref]
         
        </li>
        <li class="is-selected">
         [link]
         
        </li>
       </ul>
      </li>
      <li class="nav__item--primary has-subnav ">
       [link]
       
       <span class="icon--chevron-down--before">
        <p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li><li>[ahref]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][link][search]<li>[search]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
       </span>
       <ul class="nav__menu--secondary">
        <li class="">
         [link]
         
        </li>
        <li class="">
         [ahref]
         
        </li>
        <li class="">
         [link]
         
        </li>
        <li class="">
         [ahref]
         
        </li>
        <li class="">
         [link]
         
        </li>
        <li class="">
         [link]
         
        </li>
        <li class="">
         [ahref]
         
        </li>
        <li class="">
         [link]
         
        </li>
       </ul>
      </li>
      <li class="nav__item--primary">
       [ahref]
       
      </li>
     </ul>
    </nav>
   </div>
   <div data-api-front-graphql-url="https://api.ffx.io/graphql" data-api-member-auth-url="https://api.ffx.io/api/member-auth/v0" data-basic-user-notification-upgrade-tracking-code="iid=other:meter:freetrial-15OMT00034B-ret-consumersubs:inventory-01%2F09%2F2015-afr_freetrial-dom-30free_usnotif-n-afr-o&amp;campaign_code=freetrial&amp;promote_channel=other:meter" data-cq-env="" data-debug-logging-enabled="false" data-device="desktop" data-drm-host="//access.fairfaxapi.com.au" data-ffxhagrid-paywall-asset-options-map='{ "street talk": {"id": "streettalk-index", "types": ["Premium"], "categories": ["Premium"]}, "share tables": {"id": "sharetables-index", "types": ["Premium"], "categories": ["Premium"]},"alerts": {"id": "alerts-index", "types": ["Premium"], "categories": ["Premium"]} }' data-free-trial-ending-prompt-upgrade-tracking-code="iid=other:meter-15omn0703-ret-consumersubs:freetrial-09/01/2015-afr_freetrial-dom-30free_usprompt-nnn-afr-nnn&amp;campaign_code=freetrial&amp;promote_channel=meter" data-hagrid-api-url="https://api.myfairfax.com.au" data-hagrid-base-url="https://login.myfairfax.com.au/" data-hagrid-bundle-id="117" data-hagrid-channel-key="9ME3ACTT4ZYY1fEMfvR2EA" data-hagrid-drm-channel-key="afr::web" data-hagrid-drm-m-channel-key="afr::mobile" data-hagrid-iframe-container-id="loginIframeContainer" data-hagrid-m-channel-key="9ME3ACTT4ZYY1fEMfvR2EA" data-hagrid-member-profile-provider-name="customMemberProfileProvider" data-hagrid-proxy-url="/originstatic/hagridproxy-0.9.37.html" data-hagrid-src-url="https://resources.fairfax.com.au/js/ffx-sdk/ffx-hagrid-drm-0.9.51.min.js" data-hagrid-subscribe-url="https://subscribe.afr.com" data-hagrid-upgrade-url-path="/beta/members/my_account/subscriptions/retail/change_package?" data-meter-prompt-upgrade-tracking-code="iid=other:meter-15omn0716-ret-consumersubs:article-10/10/2015-afr_bau-dom-bau_articles-nnn-afr-nnn&amp;campaign_code=afrbau&amp;promote_channel=meter" data-paywall-upgrade-tracking-code="iid=other:paywall-15omn0704-ret-consumersubs:freetrial-09/01/2015-afr_freetrial-dom-30free_uspwall-nnn-afr-nnn&amp;campaign_code=freetrial&amp;promote_channel=paywall" data-plans-users-map='{ "AfrAllDigital": "premium-subscriber", "Fairfax": "corporate-subscriber", "afr_basicdigital": "basic-subscriber", "AfrBasicDigital": "basic-subscriber", "IP_WebOnly": "corporate-subscriber", "AfrAllDigitalLegacy": "premium-subscriber" }' data-premium-logo-enabled="true" data-prompt-tracking-code="promote_channel=HI_AFR_GNL_PYR&amp;utm_source=afr.com&amp;utm_medium=HouseInventory&amp;utm_campaign=General&amp;utm_content=PWR" data-subscribe-tracking-code="promote_channel=HI_AFR_GNL_PYW&amp;utm_source=afr.com&amp;utm_medium=HouseInventory&amp;utm_campaign=General&amp;utm_content=PWL" id="hagrid-config">
   </div>
  </header>
  <div class="outer-wrap">
   <div class="content wrap" id="content">
    <div class="widget widget--pinboard">
     <header class="widget__header">
      <h2 class="heading">
       <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
      </h2>
     </header>
     <ul class="inline-list widget__controls">
      <li>
       <label class="lbl" for="selectAll">
        Select All
       </label>
      </li>
      <li>
       [link]
       
      </li>
     </ul>
     <section class="results">
      <div class="tabs">
       <ul class="inline-list tab__nav" role="tablist">
        <li class="is-selected">
         <a href="n">
          News
         </a>
        </li>
       </ul>
       <div class="tab__panel is-selected" id="news-pin">
        <ul class="results__list" id="savedpinsboard">
        </ul>
       </div>
      </div>
     </section>
    </div>
    <div class="widget widget--search">
     <header class="widget__header">
      <h2 class="heading">
       [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
      </h2>
     </header>
     <ul class="widget__controls inline-list">
      <li>
       <label class="lbl">
        Select all
       </label>
      </li>
      <li>
       [link]
       
      </li>
     </ul>
     <ul class="saved" id="savedsearchesboard">
     </ul>
    </div>
    <div class="ad-wrap">
     <div class="adWrapper adPageTop">
      <div id="adspot-996x120_970x250_940x250_940x120_728x90-pos1" style="display:none;">
      </div>
     </div>
    </div>
    <div class="nav breadcrumb" itemprop="breadcrumb" itemtype="http://schema.org/Breadcrumb">
     <ol>
      <li class="breadcrumb__item">
       [link]
       
      </li>
      <li class="breadcrumb__item current">
       Boss
      </li>
     </ol>
    </div>
    <div class="inner-wrap">
     <main class="main" role="main">
      <div class="inner-content">
       <div class="brand-logo">
        <header class="header header--brand-boss">
        </header>
       </div>
       <div class="cq-hero">
       </div>
       <div class="parsys parsys-desktop-content-lhr">
        <div class="1sx section">
         <section class="strap strap--1sx ">
          <div class="grid">
           <article class="story story--hero stack story--basic-content">
            <h1 class="story__headline">
             <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
            </h1>
            <figure class="story__lead">
             <a href="/brand/boss/how-steely-determination-drives-gfg-alliance-chief-sanjeev-gupta-20181028-h177xb">
              <noscript>
              </noscript>
             </a>
            </figure>
            <div class="story__wof">
             <ul class="byline">
              <li class="external">
               <a href="/boss">
                Boss
               </a>
              </li>
              <li class="author" itemprop="author creator" itemscope="" itemtype="http://schema.org/Person">
               <a href="l">
                Simon Evans
               </a>
              </li>
             </ul>
             <p>
              Sanjeev Gupta's acquisition spree has created an industrial empire that has led to him being dubbed the man of steel. But can his ambitious expansion program be sustained?
             </p>
             <ul class="meta">
              <li class="is-vishidden">
               Contains:
              </li>
              <li>
               <span class="icon--graph">
                Infographics<li>[link]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>
               </span>
              </li>
             </ul>
            </div>
           </article>
           <article class="story stack story--basic-content">
            <figure class="story__lead">
             <a href="/brand/boss/10-questions-with-gfc-alliance-boss-sanjeev-gupta-20181114-h17vt9">
              <noscript>
              </noscript>
             </a>
            </figure>
            <div class="story__wof">
             <h3 class="story__headline">
              [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
             </h3>
             <ul class="byline">
              <li class="external">
               [ahref]
               
              </li>
             </ul>
             <p>
              GFG Alliance boss Sanjeev Gupta has an unexpected question for those who want to work for him.  [ahref]<li>[search]</li><li>[link]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]
             </p>
            </div>
           </article>
           <article class="story stack story--basic-content">
            <figure class="story__lead">
             [link]
             
            </figure>
            <div class="story__wof">
             <h3 class="story__headline">
              [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
             </h3>
             <ul class="byline">
              <li class="external">
               <a href="/boss">
                Boss
               </a>
              </li>
              <li class="author" itemprop="author creator" itemscope="" itemtype="http://schema.org/Person">
               [link]
               
              </li>
             </ul>
             <p>
              After a slow start, Australian retailers are ramping up their digital capabilities to create seamless online shopping experiences.[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]
             </p>
             <ul class="meta">
              <li class="is-vishidden">
               Contains:
              </li>
              <li>
               <span class="icon--graph">
                Infographics
               </span>
              </li>
             </ul>
            </div>
           </article>
           <article class="story stack story--basic-content">
            <figure class="story__lead">
             <a href="/brand/boss/which-australian-company-has-the-best-business-purpose-20181128-h18gmw">
              <noscript>
              </noscript>
             </a>
            </figure>
            <div class="story__wof">
             <h3 class="story__headline">
              [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
             </h3>
             <ul class="byline">
              <li class="external">
               [link]
               
              </li>
              <li class="author" itemprop="author creator" itemscope="" itemtype="http://schema.org/Person">
               Clare Morgan
              </li>
             </ul>
             <p>
              If 'purpose' is the business buzzword of 2018, what do the top 50 ASX companies have to say about themselves?[ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[ahref]</li>[search]<li>[search]</li>
             </p>
            </div>
           </article>
           <article class="story stack story--basic-content">
            <figure class="story__lead">
             [ahref]
             
            </figure>
            <div class="story__wof">
             <h3 class="story__headline">
              [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
             </h3>
             <ul class="byline">
              <li class="external">
               <a href="/boss">
                Boss
               </a>
              </li>
              <li class="author" itemprop="author creator" itemscope="" itemtype="http://schema.org/Person">
               <a href="l">
                Patrick Durkin
               </a>
              </li>
             </ul>
             <p>
              Companies with a purpose have been shown to outperform their competitors, but it needs to be more than just a statement of the obvious.[search][link][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][ahref][link][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>
             </p>
            </div>
           </article>
           <article class="story stack story--basic-content">
            <figure class="story__lead">
             [ahref]
             
            </figure>
            <div class="story__wof">
             <h3 class="story__headline">
              [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
             </h3>
             <ul class="byline">
              <li class="external">
               [link]
               
              </li>
              <li class="author" itemprop="author creator" itemscope="" itemtype="http://schema.org/Person">
               <a href="l">
                James Eyers
               </a>
              </li>
             </ul>
             <p>
              BPAY's fintech expansion has flown under the radar, even at its four shareholders – the big banks.[search][search][link]<li>[ahref]</li><li>[search]</li>
             </p>
            </div>
           </article>
           <article class="story stack story--basic-content">
            <figure class="story__lead">
             <a href="/brand/boss/why-deloittes-juliet-bourke-has-become-a-zealot-for-the-midlife-gap-year-20181031-h17bob">
              <noscript>
              </noscript>
             </a>
            </figure>
            <div class="story__wof">
             <h3 class="story__headline">
              [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
             </h3>
             <ul class="byline">
              <li class="external">
               [link]
               
              </li>
              <li class="author" itemprop="author creator" itemscope="" itemtype="http://schema.org/Person">
               Juliet Bourke
              </li>
             </ul>
             <p>
              A sabbatical can be the spur for a new appreciation of life and work, but time out needs to be structured and purposeful.[ahref][link]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[ahref]</li><li>[ahref]</li>
             </p>
            </div>
           </article>
           <article class="story stack story--basic-content">
            <figure class="story__lead">
             <a href="/brand/boss/how-will-corporate-australia-deal-with-its-annus-horribilis-20181112-h17tky">
              <noscript>
              </noscript>
             </a>
            </figure>
            <div class="story__wof">
             <h3 class="story__headline">
              [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
             </h3>
             <ul class="byline">
              <li class="external">
               <a href="/boss">
                Boss
               </a>
              </li>
              <li class="author" itemprop="author creator" itemscope="" itemtype="http://schema.org/Person">
               [link]
               
              </li>
             </ul>
             <p>
              How will corporate Australia address the public's anger and loss of trust? The answers depend on who you talk to. <li>[search]</li>[ahref]<li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[ahref][link]<li>[ahref]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][search][link]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>
             </p>
            </div>
           </article>
           <article class="story stack story--basic-content">
            <figure class="story__lead">
             [link]
             
            </figure>
            <div class="story__wof">
             <h3 class="story__headline">
              [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
             </h3>
             <ul class="byline">
              <li class="external">
               [ahref]
               
              </li>
             </ul>
             <p>
              Prominent corporate leaders nominate the business books and podcasts they found most inspiring in 2018.[search]<li>[ahref]</li>[search][ahref]<li>[ahref]</li><li>[ahref]</li><li>[ahref]</li>[link]<li>[link]</li>[search][ahref]<li>[search]</li><li>[search]</li>[search]<li>[search]</li>[search][ahref]<li>[search]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][search][link]
             </p>
            </div>
           </article>
           <article class="story stack story--basic-content">
            <figure class="story__lead">
             [ahref]
             
            </figure>
            <div class="story__wof">
             <h3 class="story__headline">
              [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
             </h3>
             <ul class="byline">
              <li class="external">
               [ahref]
               
              </li>
              <li class="author" itemprop="author creator" itemscope="" itemtype="http://schema.org/Person">
               Emma Dunch
              </li>
             </ul>
             <p>
              Twenty years after leaving the Sydney Symphony Orchestra to forge a career in New York, Emma Dunch returned as the orchestra's CEO.
             </p>
            </div>
           </article>
           <article class="story stack story--basic-content">
            <figure class="story__lead">
             <a href="/brand/boss/how-to-network-when-you-dont-have-the-time-or-skills-20181031-h17bnk">
              <noscript>
              </noscript>
             </a>
            </figure>
            <div class="story__wof">
             <h3 class="story__headline">
              [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
             </h3>
             <ul class="byline">
              <li class="external">
               [ahref]
               
              </li>
              <li class="author" itemprop="author creator" itemscope="" itemtype="http://schema.org/Person">
               Rebekah Campbell
              </li>
             </ul>
             <p>
              Those without the time or inclination for networking should aim for authentic relationships with a small group of well-connected people.<li>[search]</li>[ahref][search]<li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
             </p>
            </div>
           </article>
           <article class="story stack story--basic-content">
            <figure class="story__lead">
             [link]
             
            </figure>
            <div class="story__wof">
             <h3 class="story__headline">
              [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
             </h3>
             <ul class="byline">
              <li class="external">
               [ahref]
               
              </li>
              <li class="author" itemprop="author creator" itemscope="" itemtype="http://schema.org/Person">
               Roger Perry
              </li>
             </ul>
             <p>
              As businesses embrace the idea of agile enterprise, it is increasingly important to be ready to work and deliver at speed.
             </p>
             <ul class="meta">
              <li class="is-vishidden">
               Contains:
              </li>
              <li>
               <span class="icon--graph">
                Infographics<li>[link]</li>[search]<li>[ahref]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>
               </span>
              </li>
             </ul>
            </div>
           </article>
           <article class="story stack story--basic-content">
            <figure class="story__lead">
             <a href="/brand/boss/how-to-hit-the-right-note-with-corporate-team-building-20181031-h17bnp">
              <noscript>
              </noscript>
             </a>
            </figure>
            <div class="story__wof">
             <h3 class="story__headline">
              [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
             </h3>
             <ul class="byline">
              <li class="external">
               [ahref]
               
              </li>
              <li class="author" itemprop="author creator" itemscope="" itemtype="http://schema.org/Person">
               [link]
               
              </li>
             </ul>
             <p>
              From writing a company song to completing an outdoor challenge, the market for corporate team building is growing. But are such activities worth the trouble and expense?[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]<li>[link]</li>[link]<li>[search]</li>[search][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
             </p>
             <ul class="meta">
              <li class="is-vishidden">
               Contains:
              </li>
              <li>
               <span class="icon--graph">
                Infographics<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li>[link][search]<li>[link]</li>[search][ahref]
               </span>
              </li>
             </ul>
            </div>
           </article>
           <article class="story stack story--basic-content">
            <figure class="story__lead">
             [ahref]
             
            </figure>
            <div class="story__wof">
             <h3 class="story__headline">
              [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
             </h3>
             <ul class="byline">
              <li class="external">
               [ahref]
               
              </li>
              <li class="author" itemprop="author creator" itemscope="" itemtype="http://schema.org/Person">
               Peter Bloom and Carl Rhodes
              </li>
             </ul>
             <p>
              The idolisation of the CEO has caused executive values to encroach on more and more dimensions of our lives.
             </p>
            </div>
           </article>
           <article class="story stack story--basic-content">
            <figure class="story__lead">
             [ahref]
             
            </figure>
            <div class="story__wof">
             <h3 class="story__headline">
              [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
             </h3>
             <ul class="byline">
              <li class="external">
               <a href="/boss">
                Boss
               </a>
              </li>
              <li class="author" itemprop="author creator" itemscope="" itemtype="http://schema.org/Person">
               Clare Payne
              </li>
             </ul>
             <p>
              Forget legalities, usual practice and competitor behaviour – ethical leadership comes down to one question. <li>[ahref]</li>[ahref][ahref]<li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search][search][search][ahref][ahref][search]<li>[search]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
             </p>
            </div>
           </article>
           <article class="story stack story--basic-content">
            <figure class="story__lead">
             <a href="/brand/boss/biggest-business-blunders-of-2018-drumstick-awards-for-dubious-achievement-20181113-h17um0">
              <noscript>
              </noscript>
             </a>
            </figure>
            <div class="story__wof">
             <h3 class="story__headline">
              [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
             </h3>
             <ul class="byline">
              <li class="external">
               <a href="/boss">
                Boss
               </a>
              </li>
              <li class="author" itemprop="author creator" itemscope="" itemtype="http://schema.org/Person">
               <a href="l">
                James Thomson
               </a>
              </li>
             </ul>
             <p>
              Chanticleer columnist James Thomson found himself spoilt for choice when picking the lowlights of a year in which corporate Australia played a blinder.<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[ahref]</li>
             </p>
            </div>
           </article>
           <article class="story stack story--basic-content">
            <figure class="story__lead">
             <a href="/brand/boss/jetlag-tips-from-qantas-alan-joyce-don-pjs-eat-light-and-set-the-body-clock-20181121-h185m1">
              <noscript>
              </noscript>
             </a>
            </figure>
            <div class="story__wof">
             <h3 class="story__headline">
              [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
             </h3>
             <ul class="byline">
              <li class="external">
               [link]
               
              </li>
              <li class="author" itemprop="author creator" itemscope="" itemtype="http://schema.org/Person">
               [ahref]
               
              </li>
             </ul>
             <p>
              Qantas CEO Alan Joyce riffs on his favourite aviation topics, especially how to deal with festive-season jet lag.
             </p>
            </div>
           </article>
           <article class="story stack story--basic-content">
            <figure class="story__lead">
             [ahref]
             
            </figure>
            <div class="story__wof">
             <h3 class="story__headline">
              [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
             </h3>
             <ul class="byline">
              <li class="external">
               <a href="/boss">
                Boss
               </a>
              </li>
              <li class="author" itemprop="author creator" itemscope="" itemtype="http://schema.org/Person">
               Zara Tindall and Katie Page-Harvey
              </li>
             </ul>
             <p>
              Harvey Norman's Katie Page-Harvey and Zara Tindall, of royal fame, talk about thoroughbreds, family and girl power.<li>[link]</li>[link][link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref]<li>[link]</li><li>[ahref]</li>[ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]<li>[search]</li><li>[search]</li>[ahref][link]
             </p>
            </div>
           </article>
           <article class="story stack story--basic-content">
            <figure class="story__lead">
             [link]
             
            </figure>
            <div class="story__wof">
             <h3 class="story__headline">
              [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
             </h3>
             <ul class="byline">
              <li class="external">
               [ahref]
               
              </li>
              <li class="author" itemprop="author creator" itemscope="" itemtype="http://schema.org/Person">
               Brett Himbury
              </li>
             </ul>
             <p>
              IFM Investors chief executive Brett Himbury offers his insights on influencing and leading a team.<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li><li>[ahref]</li><li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li><li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
             </p>
            </div>
           </article>
           <article class="story stack story--basic-content">
            <figure class="story__lead">
             <a href="/brand/boss/cities-the-next-stop-for-automated-drones-says-startup-airobotics-20181109-h17pjz">
              <noscript>
              </noscript>
             </a>
            </figure>
            <div class="story__wof">
             <h3 class="story__headline">
              [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
             </h3>
             <ul class="byline">
              <li class="external">
               [ahref]
               
              </li>
              <li class="author" itemprop="author creator" itemscope="" itemtype="http://schema.org/Person">
               [ahref]
               
              </li>
             </ul>
             <p>
              Fully automated drones are already taking over Australia's mining sites but the 'holy grail' is their use in smart cities.<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[ahref]</li>
             </p>
            </div>
           </article>
           <article class="story stack story--basic-content">
            <figure class="story__lead">
             [ahref]
             
            </figure>
            <div class="story__wof">
             <h3 class="story__headline">
              [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
             </h3>
             <ul class="byline">
              <li class="external">
               <a href="/boss">
                Boss
               </a>
              </li>
             </ul>
             <p>
              Elizabeth Gaines will soon mark her first year as chief executive of Fortescue Metals Group. Here she answers our questions.
             </p>
            </div>
           </article>
           <article class="story stack story--basic-content">
            <figure class="story__lead">
             [link]
             
            </figure>
            <div class="story__wof">
             <h3 class="story__headline">
              [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
             </h3>
             <ul class="byline">
              <li class="external">
               [link]
               
              </li>
              <li class="author" itemprop="author creator" itemscope="" itemtype="http://schema.org/Person">
               [link]
               
              </li>
             </ul>
             <p>
              As Fortescue strives to produce higher-grade iron ore and reduce price penalties, chief executive Elizabeth Gaines has her sights set on pushing the mining company beyond its heartland.
             </p>
             <ul class="meta">
              <li class="is-vishidden">
               Contains:
              </li>
              <li>
               <span class="icon--graph">
                Infographics
               </span>
              </li>
             </ul>
            </div>
           </article>
           <article class="story stack story--basic-content">
            <figure class="story__lead">
             [link]
             
            </figure>
            <div class="story__wof">
             <h3 class="story__headline">
              [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
             </h3>
             <ul class="byline">
              <li class="external">
               <a href="/boss">
                Boss
               </a>
              </li>
              <li class="author" itemprop="author creator" itemscope="" itemtype="http://schema.org/Person">
               John Sevior and Matt Williams
              </li>
             </ul>
             <p>
              From the day in 1994 that John Sevior and Matt Williams met at Perpetual Investments, they just clicked. <li>[search]</li><li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[link]</li>[ahref][link]
             </p>
            </div>
           </article>
           <article class="story stack story--basic-content">
            <figure class="story__lead">
             <a href="/brand/boss/amp-chairman-david-murray-scoffs-at-the-idea-of-overpaid-executives-20181008-h16ci1">
              <noscript>
              </noscript>
             </a>
            </figure>
            <div class="story__wof">
             <h3 class="story__headline">
              [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
             </h3>
             <ul class="byline">
              <li class="external">
               [ahref]
               
              </li>
              <li class="author" itemprop="author creator" itemscope="" itemtype="http://schema.org/Person">
               [link]
               
              </li>
             </ul>
             <p>
              David Murray believes in experience and judgment, rather than kowtowing to shareholders on executive pay or targets for women on boards.
             </p>
            </div>
           </article>
           <article class="story stack story--basic-content">
            <figure class="story__lead">
             [link]
             
            </figure>
            <div class="story__wof">
             <h3 class="story__headline">
              [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
             </h3>
             <ul class="byline">
              <li class="external">
               [link]
               
              </li>
              <li class="author" itemprop="author creator" itemscope="" itemtype="http://schema.org/Person">
               [link]
               
              </li>
             </ul>
             <p>
              Cochlear's fully implantable device fits a microphone, battery and sound processor into a single housing that is implanted inside the skull.
             </p>
            </div>
           </article>
          </div>
          <div class="pagination">
           <p class="is-vishidden" id="pagination_label">
            Search pagination
           </p>
           <ul aria-labelledby="pagination_label" class="pagination__list" role="navigation">
            <li class="pagination__item">
             <p class="pagination__current-page">
              <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[ahref]</li>
             </p>
            </li>
            <li class="pagination__item">
             <a href="/boss?p=2" rel="next">
              <span class="pagination__next">
               <span class="pagination__control">
                Next
               </span>
               <span class="icon--chevron-right">
                [ahref][link][search]<li>[search]</li><li>[ahref]</li><li>[search]</li>
               </span>
               <span class="is-vishidden">
                Content Pagination[link][link]<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>
               </span>
              </span>
              2
             </a>
            </li>
            <li class="pagination__item">
             <a href="/boss?p=3">
              <span class="is-vishidden">
               Content Pagination
              </span>
              3
             </a>
            </li>
            <li class="pagination__item">
             [link]
             
            </li>
            <li class="pagination__item">
             [ahref]
             
            </li>
           </ul>
          </div>
         </section>
        </div>
       </div>
      </div>
     </main>
     <aside class="aside" role="complementary">
      <div class="adWrapper ">
       <small style="display:none">
        Advertisement
       </small>
       <div id="adspot-300x600_300x250-pos1" style="display:none;">
       </div>
      </div>
      <div class="parsys-desktop-content-rhr-top parsys">
       <div class="section html-assets">
       </div>
      </div>
      <div class="ad-wrap">
       <div class="adWrapper ">
        <div id="adspot-N-6x2-pos1" style="display:none;">
        </div>
       </div>
      </div>
      <div class="adWrapper ">
       <small style="display:none">
        Advertisement
       </small>
       <div id="adspot-300x250-pos2" style="display:none;">
       </div>
      </div>
      <div class="parsys parsys-desktop-content-rhr-lower">
      </div>
     </aside>
    </div>
   </div>
   <div class="seo-footer">
    <div class="panel panel--pre-footer wrap">
     <div class="flex-grid flex-wrap">
      <div class="col-quarter-width " data-ffx-event-action="afr-magazine" data-ffx-event-category="pre footer">
       <h2>
        <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
       </h2>
       <article class="story basic-content" data-track-data='{"shared_content_type":"ARTICLE","shared_content_name":"Where to go in 2019: Indonesia&amp;#39s Nihi Sumba","shared_content_iterativenumber":"0"}'>
        <div class="story__wof">
         <h3 class="story__headline">
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
        </div>
       </article>
       <article class="story basic-content" data-track-data='{"shared_content_type":"ARTICLE","shared_content_name":"Why demand for dive watches keeps bobbing up, despite most not touching water","shared_content_iterativenumber":"1"}'>
        <div class="story__wof">
         <h3 class="story__headline">
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
        </div>
       </article>
       <article class="story basic-content" data-track-data='{"shared_content_type":"ARTICLE","shared_content_name":"Lexus Australia CEO Scott Thompson became an Ironman on a bet","shared_content_iterativenumber":"2"}'>
        <div class="story__wof">
         <h3 class="story__headline">
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
        </div>
       </article>
       <article class="story basic-content" data-track-data='{"shared_content_type":"ARTICLE","shared_content_name":"Hotels to stay at in 2019: Raffles Singapore","shared_content_iterativenumber":"3"}'>
        <div class="story__wof">
         <h3 class="story__headline">
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
        </div>
       </article>
       <article class="story basic-content" data-track-data='{"shared_content_type":"ARTICLE","shared_content_name":"Where to go in 2019: an Australian&amp;#39s guide to next year&amp;#39s hot spots","shared_content_iterativenumber":"4"}'>
        <div class="story__wof">
         <h3 class="story__headline">
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
        </div>
       </article>
      </div>
      <div class="col-quarter-width " data-ffx-event-action="boss" data-ffx-event-category="pre footer">
       <h2>
        [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
       </h2>
       <article class="story basic-content" data-track-data='{"shared_content_type":"ARTICLE","shared_content_name":"GFG Alliance chief Sanjeev Gupta is driven by steely determination ","shared_content_iterativenumber":"0"}'>
        <div class="story__wof">
         <h3 class="story__headline">
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
        </div>
       </article>
       <article class="story basic-content" data-track-data='{"shared_content_type":"ARTICLE","shared_content_name":"10 questions with GFG Alliance boss Sanjeev Gupta ","shared_content_iterativenumber":"1"}'>
        <div class="story__wof">
         <h3 class="story__headline">
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
        </div>
       </article>
       <article class="story basic-content" data-track-data='{"shared_content_type":"ARTICLE","shared_content_name":"Woolworths, Coles and other retailers boost online shopping investment ","shared_content_iterativenumber":"2"}'>
        <div class="story__wof">
         <h3 class="story__headline">
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
        </div>
       </article>
       <article class="story basic-content" data-track-data='{"shared_content_type":"ARTICLE","shared_content_name":"Which Australian company has the best business purpose? Take a look.","shared_content_iterativenumber":"3"}'>
        <div class="story__wof">
         <h3 class="story__headline">
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
        </div>
       </article>
       <article class="story basic-content" data-track-data='{"shared_content_type":"ARTICLE","shared_content_name":"Purpose might be the business buzzword of 2018, but some purposes beat others","shared_content_iterativenumber":"4"}'>
        <div class="story__wof">
         <h3 class="story__headline">
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
        </div>
       </article>
      </div>
      <div class="col-quarter-width " data-ffx-event-action="life-and-leisure" data-ffx-event-category="pre footer">
       <h2>
        <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
       </h2>
       <article class="story " data-track-data='{"shared_content_type":"ARTICLE","shared_content_name":"Andrew McConnell: still reinventing Melbourne&amp;#39s dining scene after 17 years","shared_content_iterativenumber":"0"}'>
        <div class="story__wof">
         <h3 class="story__headline">
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
        </div>
       </article>
       <article class="story basic-content" data-track-data='{"shared_content_type":"ARTICLE","shared_content_name":"5 of the best executive homes for sale around Australia this week","shared_content_iterativenumber":"1"}'>
        <div class="story__wof">
         <h3 class="story__headline">
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
        </div>
       </article>
       <article class="story " data-track-data='{"shared_content_type":"ARTICLE","shared_content_name":"The latest in luxury treats, including Givenchy and Celine","shared_content_iterativenumber":"2"}'>
        <div class="story__wof">
         <h3 class="story__headline">
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
        </div>
       </article>
       <article class="story " data-track-data='{"shared_content_type":"ARTICLE","shared_content_name":"Sydney&amp;#39s new Architect&amp;#39s Bookshop is itself a paragon of good design ","shared_content_iterativenumber":"3"}'>
        <div class="story__wof">
         <h3 class="story__headline">
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
        </div>
       </article>
       <article class="story " data-track-data='{"shared_content_type":"ARTICLE","shared_content_name":"QT Hotel brings an air of cool to Perth CBD","shared_content_iterativenumber":"4"}'>
        <div class="story__wof">
         <h3 class="story__headline">
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
        </div>
       </article>
      </div>
      <div class="col-quarter-width special-reports " data-ffx-event-action="special-reports" data-ffx-event-category="pre footer">
       <h2>
        [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
       </h2>
       <article class="story " data-track-data='{"shared_content_type":"ARTICLE","shared_content_name":"Tumblr&amp;#39s porn ban raises questions on art and sexuality on prudish platforms  ","shared_content_iterativenumber":"0"}'>
        <div class="story__wof">
         <h3 class="story__headline">
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
        </div>
       </article>
       <article class="story " data-track-data='{"shared_content_type":"ARTICLE","shared_content_name":"Lowy Institute hit by Chinese hackers","shared_content_iterativenumber":"1"}'>
        <div class="story__wof">
         <h3 class="story__headline">
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
        </div>
       </article>
       <article class="story basic-content" data-track-data='{"shared_content_type":"ARTICLE","shared_content_name":"Battlefield decisions: How emerging technology will shape new military threats","shared_content_iterativenumber":"2"}'>
        <div class="story__wof">
         <h3 class="story__headline">
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
        </div>
       </article>
       <article class="story basic-content" data-track-data='{"shared_content_type":"ARTICLE","shared_content_name":"Brightest minds heading to the defence industry","shared_content_iterativenumber":"3"}'>
        <div class="story__wof">
         <h3 class="story__headline">
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
        </div>
       </article>
       <article class="story basic-content" data-track-data='{"shared_content_type":"ARTICLE","shared_content_name":"Preparing for a changing region  ","shared_content_iterativenumber":"4"}'>
        <div class="story__wof">
         <h3 class="story__headline">
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
        </div>
       </article>
      </div>
     </div>
    </div>
   </div>
   <footer class="footer gel-layout" id="footer" role="contentinfo">
    <div class="footer__head">
     <div class="wrap">
      [ahref]
      
      <ul class="footer__social">
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        <a class="btn btn--icon--linkedin btn--tertiary btn--cerulean--negative" href="/company/1628885?trk=tyah&amp;trkInfo=tas%3Afinancial+review%2Cidx%3A1-1-1">
         Linkedin
        </a>
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
      <span class="subscribe">
       [search][ahref][search][link][search]<li>[ahref]</li><li>[link]</li>[search][link][search]
      </span>
     </div>
    </div>
    <div class="wrap">
     <div class="footer__block my-afr">
      <h5 class="footer__heading">
       Subscription Terms
      </h5>
      <ul>
       <li>
        <a href="/digital-subscription-terms">
         Digital Subscription Terms
        </a>
       </li>
       <li>
        <a href="/newspaper-subscription-terms">
         Newspaper Subscription Terms
        </a>
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
     <div class="footer__block contact">
      <h5 class="footer__heading">
       Contact &amp; Feedback
      </h5>
      <ul>
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="/our-events">
         Our Events
        </a>
       </li>
       <li>
        <a href="/faq">
         FAQ
        </a>
       </li>
       <li>
        <a href="/contact-us">
         Contact us
        </a>
       </li>
       <li>
        [link]
        
       </li>
       <li>
        [link]
        
       </li>
       <li>
        <a href="/brands/australian-financial-review/" target="_blank">
         Advertise
        </a>
       </li>
       <li>
        [link]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
     <div class="footer__block markets-data">
      <h5 class="footer__heading">
       Markets Data
      </h5>
      <ul>
       <li class="premium-content">
        <a href="/markets-data">
         Markets Overview
        </a>
       </li>
       <li class="premium-content">
        <a href="/markets-data/world-equities">
         World Equities
        </a>
       </li>
       <li class="premium-content">
        [ahref]
        
       </li>
       <li class="premium-content">
        [ahref]
        
       </li>
       <li class="premium-content">
        <a href="/markets-data/derivatives">
         Derivatives
        </a>
       </li>
       <li class="premium-content">
        <a href="/markets-data/interest-rates">
         Interest Rates
        </a>
       </li>
       <li class="premium-content">
        [ahref]
        
       </li>
      </ul>
     </div>
     <div class="footer__block brands">
      <h5 class="footer__heading">
       Brands
      </h5>
      <ul>
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="/boss">
         BOSS
        </a>
       </li>
       <li>
        [link]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="/luxury">
         Luxury
        </a>
       </li>
       <li>
        <a href="/rear-window">
         Rear Window
        </a>
       </li>
       <li>
        <a href="/sophisticated-traveller">
         The Sophisticated Traveller
        </a>
       </li>
      </ul>
     </div>
     <div class="footer__block network">
      <h5 class="footer__heading">
       Our Network
      </h5>
      <ul>
       <li>
        [link]
        
       </li>
       <li>
        <a href="u">
         The Age
        </a>
       </li>
       <li>
        [link]
        
       </li>
       <li>
        [link]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [link]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="u">
         Weatherzone
        </a>
       </li>
       <li>
        <a href="/">
         Oneflare
        </a>
       </li>
       <li>
        <a href="/">
         The Store
        </a>
       </li>
      </ul>
     </div>
    </div>
    <div class="legal-wrap">
     <ul class="legal">
      <li class="copyright">
       © Copyright 2018 The Australian Financial Review
      </li>
      <li class="reprints">
       [ahref]
       
      </li>
      <li class="privacy">
       [ahref]
       
      </li>
      <li class="t-and-c">
       <a href="/conditions-of-use" target="_blank">
        Terms &amp; Conditions of Use
       </a>
      </li>
     </ul>
    </div>
   </footer>
  </div>
  <div data-api-member-auth-url="https://api.ffx.io/api/member-auth/v0" data-cq-env="" data-device="desktop" id="ink-login-config">
  </div>
  <div class="modal--login ruby-layout gel-layout" tabindex="-1">
   <header class="login__header">
    <span class="logo">
     Financial Review
    </span>
    <button class="btn btn--tertiary btn--cerulean--negative btn--icon--close">
     close
    </button>
   </header>
   <form class="login__form">
    <p class="login__error">
     Sorry, you have entered an incorrect email address or password.
    </p>
    <div class="email__wrap">
     <label class="label" for="loginEmail">
      Email Address
     </label>
     <div class="email__input-wrap">
      <span class="icon icon--warning">
      </span>
      <p class="input__error" id="loginEmailError">
       Please enter your email address[link][link][link]<li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[search]</li><li>[search]</li>[ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]<li>[link]</li><li>[search]</li>
      </p>
     </div>
    </div>
    <div class="submit__wrap">
     <label class="label" for="loginPassword">
      Password
     </label>
     <div class="password__input-wrap">
      <span class="icon icon--warning">
       [search][link][search][search][ahref]
      </span>
      <p class="input__error" id="loginPasswordError">
       Please enter your password[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li>[ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><li>[search]</li>
      </p>
     </div>
     <button class="btn btn--primary btn--cerulean btn--submit--login" type="submit">
      <span>
       Log in
      </span>
      <span class="spinner spinner--smol">
       [ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[search]
      </span>
     </button>
     <a class="login__forgot-pass" href="/members/password/forget_password?callback_uri=https%3A%2F%2Fwww.afr.com%2F&amp;channel_key=9ME3ACTT4ZYY1fEMfvR2EA">
      Forgot Password?
     </a>
    </div>
   </form>
   <footer class="login__footer">
    <p class="login__tagline">
     New to
     <cite>
      The Australian Financial Review
     </cite>
     ?
    </p>
    <a class="login__subscribe-link" href="/?iid=houseinv%3Annn-16omntA0373-acq-MYA-30092016-afr.com-nnn-SUB-nnn-AFR-nnn&amp;campaign_code=afr.com&amp;promote_channel=AFR_A_HI_MYA_SUB">
     Subscribe today
    </a>
   </footer>
  </div>
  <div>
  </div>
  <div class="adWrapper ">
   <div id="adspot-1x11-pos1" style="display:none;">
   </div>
  </div>
  <div id="adspot-interstitial" style="display:none;">
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0246
  </b>
 </body>
 <div class="paywall-panel">
 </div>
 <div class="prompt-panel">
 </div>
 <div class="free-trial-prompt">
  <div class="prompt ">
   <div class="wrap">
    <figure class="prompt__figure">
    </figure>
    <div class="prompt__content">
     <div style="font-size:1.2rem;text-transform:uppercase;">
      Experience the AFR for half the price
     </div>
     <br>
      <li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[link]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
     </br>
     <p>
      Get unlimited access to Australia's best business news and market insights, including our award-winning app.<li>[link]</li><li>[link]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[ahref]</li>
     </p>
    </div>
    <div class="prompt__cta">
     <a class="btn btn--light subscribe_link" href="/?promote_channel=HI_MT_GNL">
      SAVE 50% NOW
     </a>
     <p class="prompt__cta-footnote">
      Already a subscriber?
      <a class="bind-hagrid-login" href="#" title="">
       Log in
      </a>
     </p>
    </div>
    [ahref]
    
   </div>
  </div>
 </div>
 <div class="meter-prompt">
  <div class="prompt prompt--metered">
   <div class="wrap">
    <div class="prompt__content">
     <h1>
      [area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]
     </h1>
    </div>
    <div class="prompt__cta">
     <a class="btn btn--dark" href="" title="">
      Find out more
     </a>
    </div>
    [ahref]
    
   </div>
  </div>
 </div>
</html>