--->|SSB3YXMgZmVlbGluZyBsZXNzIGNvbnZpbmNlZCBhYm91dCB0aGlzIG1hZ2ljYWwgY3VwY2FrZSBtb21lbnQuIApHcmVhdCB3ZWVrZW5kLCBjb3VsZG4gaGF2ZSBwbGFubmVkIGl0IG5lYXIgYXMgc21vb3RobHkgd2l0aG91dCBhbGwgdGhlIGJpdHMgYW5kIHBpZWNlcyBvZiBpbmZvcm1hdGlvbiB5IG9mZmVyZWQhLiAKV2hlcmUgdG8gZ2V0IGNsYXkgcG9rZXIgY2hpcHMgaW4gTWFuaGF0dGFuCkhhcyBmaWxlZCBhIHByb3NwZWN0dXMgZm9yIHRocmVlIEVURnMgaXQgZXhwZWN0cyB0byBiZSBvbiB0aGUgbWFya2V0IGluIE1hcmNoLi4gCkNhc3QgaW5jbHVkZXMgU3RlcGhlbiBHb3JtYW4gYW5kIERlaXJkcmUgSm9uZXMuIApUaGUgc29uIG9mJ0h1Z2ggQy4gSGVtbWluZ3dheSwgUnRlLiAKSSBubyBzY2hvbGFyLCBidXQgaW1vIHRoYXQgc3VnZ2VzdHMgb25lIHNob3VsZCBlbmpveSBsaWZlIHdoaWxlIHRoZXkgaGF2ZSBpdCwgc28gbG9uZyBhcyB0aGV5IHN0cml2ZSB0byBhdm9pZCB0aGluZ3MgdGhhdCBhcmVuIG1vcmFsLiAKVGhlcmUgYXJlIGFsb3Qgb2YgcGVvcGxlIHdobyB3aWxsIHRlbGwgeW91IHRoYXQgaXRzIGhhcmQgdG8gbGVhcm4gZnJvbSBtaXN0YWtlcyBtYWRlIGF0IHRoZSBtaWNybyBsZXZlbHMgYmVjYXVzZSBwZW9wbGUgcGxheSByZWFsbHkgYmFkbHksIGJ1dCBpIHRoaW5rIHRyYWluaW5nIHlvdXJzZWxmIHRvIGdvIGJhY2sgYW5kIGJyZWFrIHRoZSBoYW5kIGRvd24gaXMgYSB2YWx1YWJsZSBza2lsbCB0byBsZWFybiB0aGF0IHdpbGwgc2VydmUgeW91IHdlbGwuLiAKSXQgaXNuIHRoZSAxOTYwIGFueW1vcmUsIGFuZCB3ZSBhcyBhIHNvY2lldHkgc2hvdWxkIGJlIG1vdmluZyBiZXlvbmQgdGhpcyBraW5kIG9mIHRoaW5nLiAKQnRuIHNiIGJiIHdvdWxkIGNhbGwgYW55IFF4cyBKeHMgS3ggd2hpY2ggaXMgcHJldHR5IHByZXR0eSBiYWQgZm9yIHlvdXIgaGFuZCkuIApEdWUgdG8gdGhlIHNlYSBiZWluZyBmb3VyIHRpbWVzIGFzIHNhbHR5IGFzIGEgbm9ybWFsIG9jZWFuLCB0aGVyZSBhcmUgb25seSB0aHJlZSB0eXBlcyBvZiBiYWN0ZXJpYSB0aGF0IGNhbiBzdXJ2aXZlLiAKVGhlIFRvd24gU3F1YXJlIHBsYXphIGFyZWEgb3V0c2lkZSB0aGUgZnJvbnQgb2YgdGhlIEFydHNRdWVzdCBDZW50ZXIgd2FzIGZpbGxlZCB3aXRoIGNoYWlycyBhbmQgc2hhcGluZyB1cCwgYnV0IHRoZSBvY2Nhc2lvbmFsIHBlcnNvbiBvbiBpdCBGcmlkYXkgd2FzIHNpbXBseSBzaWdodHNlZWluZy4KVGhlbiBsdW5jaHRpbWUsIEkgZ28gdG8gb3VyIHJlZ3VsYXIgc3BvdCBqdXN0IGluIHRpbWUgdG8gc2VlIHRoZSBzaGl0ZmVzdC4gRmF0aW1hIGRhZCAgIHdobyB0dXJuZWQgb3V0IHRvIGJlIGEgU2FsYWZpc3QgZnVja2luZyBJbWFtICAgaXMgRFJBR0dJTkcgRmF0aW1hIHRvIGhpcyBjYXIgYnkgdGhlIGhhaXIga2lja2luZyBhbmQgc2NyZWFtaW5nLiAKQ2FuYWRhIFBlbnNpb24gUGxhbiBiZW5lZml0cyB3b3JrIG91dCB0byB0aGUgJDkwMCBwZXIgbW9udGggaGUgY3VycmVudGx5IHJlY2VpdmVzIGFuZCBhIHByb2plY3RlZCAkOTAwIHBlciBtb250aCBmb3IgTG91aXNhLiAKQXNzdW1pbmcgaXQgaXMgYSBzdGFuZGFyZCBwb2tlciBkZWNrIHdpdGggNTIgY2FyZHMgYW5kIDQgYWNlcyBUaGUgcHJvYmFiaWxpdHkgb2YgZ2V0dGluZyB5b3VyIGZpcnN0IGNhcmQgYW4gYWNlIGlzID0gNC81MiBPdmVyIGhlcmUgeW91IG5lZWQgdG8gcmVyZWFkIHlvdXIgcXVlc3Rpb25zLiBUb3RhbCBjYXJkIGlzIG5vdyA1MSB3aXRoIDMgYWNlcyBvbmx5IHNvIHRoZSB0b3RhbCBwcm9iYWJpbGl0eSBvZiBnZXR0aW5nIGJvdGggY2FyZHMgYW4gYWNlIGlzICg0LzUyIHggMy81MSkgaG9wZSBpIGhlbHAuIChGdWxsIEFuc3dlcikuIApJIGhvbmVzdGx5IHdvdWxkIGJlIGp1bXBpbmcgaW4gYmxpbmQgd2l0aG91dCBtb3JlIGhpZ2ggbGV2ZWwgdGhvdWdodCB0aGFuIHRoYXQuCkFuZCBhIGxldHRlciBmcm9tIGhlciBsYXd5ZXIgdG8gaGltIGFza2luZyBmb3IgYSBkaXZvcmNlIGlzIHByZXR0eSBkYW1uIGdvb2QgZXZpZGVuY2Ugb2YgYW4gaW50ZW50IHRvIHNwbGl0LiBBbmQgdGhlIGRhdGUgaXMgbGFyZ2VseSBtZWFuaW5nbGVzcywgZXhjZXB0IGZvciBwZW5zaW9uIHNwbGl0dGluZyBwdXJwb3Nlcy4uIApPciB5b3UgY2FuIGJ1eSBhIHdob2xlIGNoaWNrZW4gYXQgdGhlIGdyb2Nlcnkgc3RvcmUgcHJldHR5IGNoZWFwIHRvbyBqdXN0IGtlZXAgaXQgaW4gdGhlIG1pbmkgZnJpZGdlLiAKV2UgaGFkIHdhcm0gdGVtcGVyYXR1cmVzIGFuZCBhIGxvdCBvZiByYWluIGF0IHRpbWVzLCBidXQgb25seSBvY2Nhc2lvbmFsIGR1c3RpbmdzIHRoYXQgd2VudCBhd2F5IGZhc3QuIApTa2lpbmcgaXMgdGhlIHBlcmZlY3Qgc3BvcnQgZm9yIHRoZSBzb2xvIHRyYXZlbGVyLCB3aGF0IHdpdGggd2lkZSBvcGVuIHBpc3RlcyBhbmQgc3BlY3RhY3VsYXIgbW91bnRhaW4gc2NlbmVyeSBvZmZlcmluZyBjb25zdGFudCBjb21wYW5pb25zaGlwLCBhbmQgdGhlIGFiaWxpdHkgam9pbiB0aGUgInNpbmdsZSdzIGxpbmUiIGZvciBxdWlja2VyIGNoYWlybGlmdCBhY2Nlc3MuIE9mIGNvdXJzZSwgdGhlIHNwb3J0IGlzIGFscmVhZHkgYSBwcmljZXkgZW5kZWF2b3IsIGFuZCBzaW5nbGUgc3VwcGxlbWVudHMgZG9uJ3QgaGVscCBidWRnZXQgY29uc2Npb3VzIHNvbG8gdHJhdmVsZXJzLCBlc3BlY2lhbGx5IGlmIHlvdSdyZSB0cnlpbmcgdG8gYmVkIGRvd24gaW4gdGhlIEhvbGx5d29vZCBvZiB0aGUgUm9ja2llczogQXNwZW4sIENvbG9yYWRvLiBGb3J0dW5hdGVseSwgdGhlIHRvd24gZG9lcyBwcm92aWRlIHdhbGxldCBmcmllbmRseSBvcHRpb25zIGZvciBzaW5nbGUgc2tpZXJzIHdpbGxpbmcgdG8gZm9yZWdvIHNvbWUgZ2xhbSwgaW5jbHVkaW5nIHVwIHRvIDUwIHBlcmNlbnQgb2ZmIGRpbmluZyByb29tIG1lbnVzIHNpbXBseSBmb3IgZWF0aW5nIGF0IHRoZSBiYXIsIGFuZCBhZmZvcmRhYmxlIHNpbmdsZSBidW5rcyBhdCB0aGUgd2VsbCBtYWludGFpbmVkIFN0LiAKT2theSBhIHNpZGUgbm90ZSBmcm9tIG1lIE5PVCBmcm9tIHRoaXMgcGFydGljdWxhciBhcnRpY2xlLiBTb21lIHBlb3BsZSBjYW4ndCBkcmluayBjb2ZmZWUgYmVjYXVzZSBvZiB0aGVpciBpbW11bmUgc3lzdGVtIG1pc3Rha2VzIGNvZmZlZSBmb3IgZ2x1dGVuLCB0cmlnZ2VyaW5nIGEgcmVhY3Rpb24uSXQgaGFzIGJlZW4gcmVwb3J0ZWQgdGhhdCBhIDIwMCBtaWxsaWxpdGVyIGN1cCBvZiByb2FzdGVkIGdyb3VuZCBjb2ZmZWUgc3VwcGxpZXMgYXBwcm94IDIwMCB0byA2NzUgbWlsbGlncmFtcyBvZiBDUFAuVGhlIGRhaWx5IGludGFrZSBvZiBDUFAgYnkgYSBjb2ZmZWUgZHJpbmtlciBpcyBhcyBtdWNoIGFzIGwgZ3JhbS5SZXNlYXJjaGVycyBmZWQgcmF0cyBhIGhpZ2ggZmF0IGRpZXQsIGFuZCBhZG1pbmlzdGVyZWQgdGhlIHJhdHMgY29mZmVlIHBvbHlwaGVub2xzIHRoYXQgd2VyZSB3aXRob3V0IGNhZmZlaW5lLlNvbWV0aGluZyBmYXNjaW5hdGluZyBoYXBwZW5lZCEgVGhlIHN0dWR5IGZvdW5kIHRoYXQgbG9uZyB0ZXJtIGludGFrZSBvZiBDUFAgc2lnbmlmaWNhbnRseSBzdXBwcmVzc2VkIHZpc2NlcmFsIGFuZCBsaXZlciBmYXQgYWNjdW11bGF0aW9uIHRoYXQgd2FzIGluZHVjZWQgYnkgYSBoaWdoIGZhdCBkaWV0LiBDUFAgYWxzbyBoZWxwZWQgdGhlIHBsYXNtYSBnbHVjb3NlLCBpbnN1bGluIGNvbmNlbnRyYXRpb25zLCBhbmQgaW5jcmVhc2VkIGVuZXJneSBleHBlbmRpdHVyZS5WZXJ5IGludGVyZXN0aW5nIGRpc2NvdmVyaWVzIHdlcmUgbWFkZS4gCkluIHJlYWxpdHksIHlvdSBjYW4gYmUgaHVydCB1c2luZyBhbnkgZml0bmVzcyBhbmQgcmVoYWIgZXF1aXBtZW50IGlmIHlvdSBhcmUgbm90IHVzaW5nIGl0IHByb3Blcmx5LgoiV2UndmUgYmVlbiB0YWxraW5nIGFib3V0IHRoZSBpbnRlcm5ldCBvZiB0aGluZ3MgZm9yIGEgd2hpbGUgYW5kIDVHIHdpbGwgYW1wbGlmeSB0aGF0IGR5bmFtaWMgZXhwb25lbnRpYWxseSwiIGhlIHNheXMuICJTbyBpdCdzIG5vIGxvbmdlciBqdXN0IGNvbnN1bWVyIGRldmljZXMsIGJ1dCBjb25uZWN0ZWQgaW5mcmFzdHJ1Y3R1cmUgZnJvbSBzdHJlZXQgbGlnaHRzIHRvIHRyYWZmaWMgc2lnbmFscyBhbmQgd2hlbiB5b3UgaW1hZ2luZSB0aGF0IHlvdSBjYW4gc3RhcnQgdG8gc2VlIHNtYXJ0IGNpdGllcyB0YWtlIHNoYXBlLiAKSW4gdGhlIG1lYW50aW1lLCBteSBsb2NhbCB3YXRlciByZXNvdXJjZXMgaGF2ZSBiZWVuIGNvbXByb21pc2VkIGJ5IHdhc3RlIHJ1bm9mZiBhcyB3ZWxsIGFzIHNpbHQgY2F1c2VkIGJ5IHRoZSBjYXR0bGUgc2hvcnRlbmluZyB0aGUgZ3Jhc3MgdG8gYSBwb2ludCB0aGF0IHRoZSByYWluIGhpdHMgdGhlIGdyb3VuZCB1bmltcGVkZWQgYnkgZ3Jhc3NlcywgdGhhdCBpZiBsZWZ0IHRvIGdyb3csIHdvdWxkIGhhdmUgYWxsb3dlZCBnZW50bGUgcGVuZXRyYXRpb24gaW50byB0aGUgZ3JvdW5kLiAKV2l0aCBsaW5rZWQgc2VydmljZXMuIApJdCBkb2VzbiBoZWxwIGluIHRoaXMgcmVnYXJkIHRoYXQgdGhlIHBlb3BsZSB3aG8gYWN0dWFsbHkgdXNlIHRoaXMgdGVybSBhcmUsIGNlcnRhaW5seSBpbiBteSBvd24gZXhwZXJpZW5jZSwgZWl0aGVyIDEpIGNvbnNlcnZhdGl2ZXMsIHBsYWluIGFuZCBzaW1wbGUsIG9yIDIpIGxvY2F0aW5nIHRoZW1zZWx2ZXMgb24gdGhlIExlZnQgYnV0IGFjdHVhbGx5IGhvbGRpbmcgbWFueSBjb25zZXJ2YXRpdmUgb3BpbmlvbnMuClNhaWQgYm90IGFwcGxpY2F0aW9ucyB3YXRjaCB0aGUgdGFibGVzIGFuZCBkYXRhIG1pbmUgYWxsIGluZm9ybWF0aW9uIHRoYXQgZ2V0cyAicG9zdGVkIiB0byB0aGUgY2hhdCBsb2cuIFRoZXkgZG8gdGhpcyBieSBhbHJlYWR5IGhhdmluZyBhIHRhYmxlIG9mIGltYWdlcyB0aGF0IGNvcnJlc3BvbmQgdG8sIGZvciBleGFtcGxlLCBhbGwgbGV0dGVycyBvZiB0aGUgYWxwaGFiZXQgKHNpbmNlIFBva2VyU3RhcnMgZG9lc24ndCBwb3N0IHRoZWlyIHRleHQgYXMuIApJIGNvdWxkbiBleHBsYWluIGFuZCBpdCBiZSBwb3N0ZWQuIApTaXNjb3ZpY2ssIE1ELCBNUEgyLiAKSWYgd2UgY291bGQgcHV0IGxlZ2VuZGFyaWVzIGluIGd5bXMgdGhlbiB5b3UgaGF2ZSBwZW9wbGUgY3Jvc3NpbmcgdGhlaXIgZmluZ2VycyBob3Bpbmcgc29tZSBndXkgY29tZXMgYWxvbmcgYmVmb3JlIG1pZG5pZ2h0IHRvIHdyZWNrIHRoZWlyIDQ3NSBjcCBaYXBkb3Mgd2l0aCBhIEdlb2R1ZGUgdGhleSBjYXVnaHQgb24gdGhlIHdheSBvdmVyIHNvIHRoYXQgdGhlIGNvaW4gcmV0dXJuIGNvbWVzIGluIHRpbWUuIApJIGhhdmUgYmVlbiBkaWV0aW5nIGZvciBhIHdlZWsgYW5kIGZpbmFsbHkgZ290IG15c2VsZiB0cmFja2luZyBmb29kIGp1c3QgeWVzdGVyZGF5LiBPbiB3aGF0IEkgd2FzIHdvcnJpZWQgd2FzIHR1cm5pbmcgaW50byBhIGJhZCBkYXkgKG15IGdyYW5kbWEgbWFkZSBtZSBjaGlja2VuIGFuZCBtYXNoZWQgcG90YXRvIGxlZnQgb3ZlcnMpLCBJIGNhbWUgaW4gYXQgb25seSAxNTAwIGNhbG9yaWVzIGVhdGVuLCBhbmQgYXBwYXJlbnRseSAzMDAwIGNhbG9yaWVzIGJ1cm5lZCBhbGwgZGF5LiAKT2J2aW91c2x5LCB0aGUgbWFyY2hpbmcgbW9yb25zIHRoYXQgbWFrZSB1cCBoaXMgYmFzZSB3aWxsIG5ldmVyIGJlIG9uIGJvYXJkLiBCdXQgd2UgZG9uIGNhcmUgYWJvdXQgdGhlbS4gV2UgY2FyZSBhYm91dCB0aGUgcGVvcGxlIHdobyBhcmUgc3RpbGwgY2FwYWJsZSBvZiByYXRpb25hbCB0aG91Z2h0LiAKUGxheWluZyB0aGUgZnJlZSBvbmxpbmUgY2FzaW5vIGdhbWVzIG5vdCBqdXN0IGhlbHAgeW91IGRldmVsb3AgdGhlIHNraWxscyBvciBpbXByb3ZlIHRoZSBzYW1lIGJ1dCBhbHNvIGhlbHAgdGhlIGxlYXJuZXJzIGxlYXJuIHRoZSBydWxlcyBhbmQgcmVndWxhdGlvbnMgb2YgdGhlIGdhbWVzIGFuZCBnZXQgdGhlbSB0byBoYXZlIGEgYmV0dGVyIGluc2lnaHQgb2YgdGhlIGRpZmZlcmVudCB0ZWNobmlxdWVzIGFuZCB0aGUgc3RyYXRlZ2llcyB0aGF0IGFyZSB0byBiZSB1c2VkIHdoaWxlIHBsYXlpbmcgdGhlIG9ubGluZSBjYXNpbm9zLiBUaGUgZ2FtZXMgdGhhdCBhcmUgb2ZmZXJlZCBmb3IgdGhlIGZyZWUgb25saW5lIGNhc2lub3MgYXJlIG1vc3RseSBzYW1lLiAKTG92aW5nIGZhdGhlciBvZiBQZXRlciBKci4gCkl0IHJlYWxseSBzYXlzIGFsbCB0aGF0LiBHb2QgY29tbWFuZG1lbnRzIGdldCB0aGUgbW9yYWxpdHkgb2Ygc2xhdmVyeSBjb21wbGV0ZWx5IGJhY2t3YXJkcy4gCkluIHJlYWwgbGlmZSwgZHJ1Z3MgdGVzdHMgcmVxdWlyZSBhIGJpdCBvZiBzcGl0LCBvciBhIGhhaXIuIE5vIHBlZWluZyBpbiBjdXBzIG9yIG5lZWRsZXN0YWJiaW5nIG5lY2Vzc2FyeSwgdGhvc2UgYXJlIHRoZSBhdCBob21lIGRydWdzIHRlc3RzIGFuZCBtb3ZpZSBkcnVnIHRlc3RzLgpBbmQgd2hlbiB0aGV5IGdldCBvbiB0aGUgY2FzaW5vIGZsb29yIHRoZSBzZXJ2aWNlIGxldmVsIHRoYXQgaXMgZ29pbmcgdG8gYmUgcHJvdmlkZWQgZnJvbSB0aGVpciBsb2NhbCBjb21tdW5pdHksIHlhIGtub3csIHRoZSBsb2NhbCBlbXBsb3llZXMgaW4gdGhpcyBjb21tdW5pdHkuIFNvIEkgdGhpbmsgdGhhdCB0aGF0IGlzIHRoZSB3b3cgZmFjdG9yLCIgc2FpZCBHYWxsZS4uIApDYXJsc29uIGNhbiBzZWVtIHRvIHJlaWduIGluIHRoZSBjb252ZXJzYXRpb24gYW5kIHRoZW4gcmVzb3J0cyB0byBuYW1lIGNhbGxpbmcuIEJlcmdtYW4gZG9lc24gcmVwZWF0IHRoZSBwaHJhc2UgZm9yIDcgbWludXRlcy4gClBsYXlpbmcgSFUgd2FzIHRoZSB0dXJuaW5nIHBvaW50IGluIG15IHBva2VyIGNhcmVlci4gCllvdXIgc291cmNlICh3aGljaCB5b3UgZGlkbnQgcmVhbGx5IGdpdmUpIGlzIGZyb20gdGhlIDE3OTAgYW5kIHRoZSBsYXcgSSBjaXRlZCB3YXMgbW9kaWZpZWQgaW4gMTk1Ni4gCkJlYXVjb3VwIGRlIHBlcnNvbm5lcyBlbiBkaWZmaWN1bHQgYXZlYyBsZXVyIHNpbGhvdWV0dGUgc29udCBmcmFnaWxpc3MsIG1hbnF1YW50IGRlIGNvbmZpYW5jZSBlbiBlbGxlcywgc291dmVudCBjb25mcm9udGVzICB1biBlbnZpcm9ubmVtZW50IHF1aSBzb3VsaWduZSBsZXVyIG1hbnF1ZSBkZSB2b2xvbnQuIE1haXMgZXN0IGNlIGxlIHJsZSBkZSBwcm9mZXNzaW9ubmVscyBkZSBzYW50IGQnZW5mb25jZXIgbGUgY2xvdSA/IENlcnRlcywgYmVhdWNvdXAgY3JvaWVudCBzYW5zIGRvdXRlIGJpZW4gZmFpcmUgcG91ciBsYSBzYW50IGRlIGxldXIgcGF0aWVudCBtYWlzIGlscyBtY29ubmFpc3NlbnQgdG90YWxlbWVudCBsYSBjb21wbGV4aXQgZGUgbGEgcmVsYXRpb24gIGxhIG5vdXJyaXR1cmUgZXQgYXUgcG9pZHMuIEJlYXVjb3VwIGNyb2llbnQgcXVlICJ5YWthIiBtYW5nZXIgbW9pbnMsIGZhaXJlIGR1IHNwb3J0LCBzZSBkaXNjaXBsaW5lci4gCjIwMDkuIApLaW5nIENvdW50eSBwcm9zZWN1dG9ycyBoYXZlIHNpbmNlIGNoYXJnZWQgdHdvIG1lbiBhbmQgdGhyZWUgd29tZW4gd2l0aCBtb25leSBsYXVuZGVyaW5nIGFuZCB0aHJlZSB0byBzaXggY291bnRzIGVhY2ggb2Ygc2Vjb25kIGRlZ3JlZSBwcm9tb3RpbmcgcHJvc3RpdHV0aW9uLiAKSXQgd2FzIGJldHRlciB0byBnbyB0byBvbmUgbG9jYXRpb24gYW5kIHdhbGsgdG8gZXZlbnRzISBCZXRobGVoZW0gaGFzIHNob3QgaXRzZWxmIGluIHRoZSBoZWFkLCB3aGF0IHdlcmUgdGhleSB0aGlua2luZz8gRm9yIG15IGZhbWlseSwgd2Ugd2lsbCBnbyB0byB0aGUgb3JpZ2luYWwgbXVzaWtmZXN0IHNpdGVzLCB3YWxrIGFyb3VuZCB0aGVuIGxlYXZlLiBFeHBsYWluIHRvIG1lIGhvdyBNdXNpa2Zlc3QgaXMgZ29pbmcgdG8gY29udHJvbCB0cmFmZmljIGFuZCB0aGUgUGEuIApSZXNwb25zZSBvZiB0aGUgUnVzc2lhbiBnb3Zlcm5tZW50IGluIHRoZSBwYXN0IGhhcyBiZWVuIHRvIGluY3JlYXNlIHRoZSB1c2Ugb2YgZm9yY2UgYW5kIG1pbGl0YXJ5IG1pZ2h0IHRvICJjbGFtcCBkb3duIiBvbiBNdXNsaW0gZXh0cmVtaXNtLiBUaGUgY3VycmVudCBNZWR2ZWRldiByZWdpbWUgaGFzIHNwb2tlbiBvZiBhZGRyZXNzaW5nIHRoZSBzeXN0ZW1pYyBjYXVzZXMgb2YgdGVycm9yaXNtIChsaWtlIHVucmVsZW50aW5nIHBvdmVydHkpLCB0aGUgbWFuIGJlaGluZCB0aGUgY3VydGFpbiwgVmxhZGltaXIgUHV0aW4sIHdhbnRzIHRvIHJ1bGUgd2l0aCBhbiBpcm9uIGZpc3QuLiAKV2hlbiBJIGZpcnN0IGdvdCBoZXJlLCBldmVyeW9uZSB3YXMgdGFsa2luZyBhYm91dCBob3cgU09FIHdlcmUgZ29pbmcgdGhlIHdheSBvZiB0aGUgZGlub3NhdXIsIGJ1dCB0aGVuIGEgZmV3IHllYXJzIGxhdGVyLCBldmVyeXRoaW5nIGdvdCB0dXJuZWQgcmlnaHQgYmFjayBhcm91bmQsIGFuZCB0aGUgU09FIGNhbWUgYW5kIHN0YW1wZWQgb3V0IHByaXZhdGUgZW50ZXJwcmlzZXMgaW4gYSBsb3Qgb2YgZWNvbm9taWMgc2VjdG9ycyB0aGF0IGhhdmUgbm90aGluZyB0byBkbyB3aXRoIHdoYXQgeW91IGNhbGwgInBvc2l0aXZlIGFuZCBuZWdhdGl2ZSBleHRlcm5hbGl0aWVzLiJZb3UgbWluZCB0ZWxsaW5nIG1lIHdoaWNoIGluZHVzdHJ5IHRoaXMgaXM/SSBkaWQgdGFrZSBlY29uLCBidXQgSSBtdXN0IGhhdmUgc2xlcHQgdGhyb3VnaCB0aGUgY2xhc3Mgd2hlcmUgdGhleSBleHBsYWluZWQgd2h5IGl0IHNvdW5kIGVjb25vbWljIHBvbGljeSBmb3IgYSBzYWx0IG1vbm9wb2x5IHRvIGdldCBpbnRvIHRoZSByZWFsIGVzdGF0ZSBkZXZlbG9wbWVudCBnYW1lLCBvciBhIHdlYXBvbnMgZGVhbGVyIHRvIGJlY29tZSBhbiBhcnQgYnJva2VyIChhbmQgcmVhbCBlc3RhdGUgZGV2ZWxvcGVyKS5JbiB2aXRhbCBpbmR1c3RyaWVzPyBSZWFsbHk/IElmIHlvdSBhcmd1aW5nIHdoeSBzdGF0ZSBydW4gY29tcGFuaWVzIHNob3VsZCBub3QgYmUgbWFraW5nIHRoZWlyIG93biBjZWxsIHBob25lcyBvciB5b2dhIG1hdHMgdGhlbiBvay4gCkFsZSBvY3p5d2ljaWUgZSBtb25hIGFydG93YS4gVHlsa28gamVzdCBhcnQgbWRyeSBpIGplc3QgYXJ0eSB3IHN0eWx1ICJ0ZW4ga3JhaiIsICJwb2xhY3R3byBjZWJ1bGFjdHdvIiBldGMgZXRjLiBUZSBkcnVnaWUgcyB3c3pkemllLCBzIGJhcmR6byBwcnpld2lkeXdhbG5lIGkgaWNoIGZ1bmtjaiBqZXN0IGplZHluaWUgcG90d2llcmR6ZW5pZSBwcnp5bmFsZW5vY2kgZ3J1cG93ZWogbXdpY2Vnby4KT2N0LiAxNTogVGhlIE5ldyBZb3JrIFRpbWVzIHJlcG9ydHMgb24gdGhlIGRldmFzdGF0aW5nIHVzZXMgb2YgRmFjZWJvb2sgaW4gTXlhbm1hciwgd2hlcmUgZ292ZXJubWVudCBvZmZpY2lhbHMgcHJvbW90ZWQgcHJvcGFnYW5kYSB0byBlbmNvdXJhZ2UgZXRobmljIGNsZWFuc2luZyBvZiBSb2hpbmd5YSBNdXNsaW1zLiBUaGUgc29jaWFsIG5ldHdvcmsgaGFzIGJlZW4gcmVtb3ZpbmcgaHVuZHJlZHMgb2YgcGFnZXMsIGFuZCBieSBEZWNlbWJlciB3YXMgc3RpbGwgdGFraW5nIGRvd24gbW9yZSBhY2NvdW50cyBydW4gYnkgTXlhbm1hcidzIG1pbGl0YXJ5LCB3aGljaCBpcyBhY2N1c2VkIG9mIGNhcnJ5aW5nIG91dCB0aGUgZXRobmljIGNsZWFuc2luZyBvZiBSb2hpbmd5YSBNdXNsaW1zLi4gCk9uIEZyaWRheSwgU2F1bmRlcnMgcmVwbGllZCBpbiBhIHZpZGVvIG1lbW8gZGlzdHJpYnV0ZWQgdG8gYWxsIHN0YWZmIHRoYXQgdGhlIHNlcnZpY2Ugd2FzIHdvcmtpbmcgdG8gaGlyZSBuZXcgb2ZmaWNlcnMgYW5kIGhhZCByZWNlaXZlZCBtb3JlIHRoYW4gMTAwIGFwcGxpY2F0aW9ucyBmb3IgdGhlIG9wZW4gcG9zaXRpb25zLgpJZiB5b3UgZG9uJ3QgaGF2ZSBleGFjdCBjaGFuZ2UsIGl0IGlzIGJlc3QgdG8gdmVyYmFsbHkgc3RhdGUgeW91ciBhY3Rpb24gd2hlbiB0aHJvd2luZyB0aGF0IGxhcmdlIGNoaXAgaW50byB0aGUgcG90LiBGb3IgZXhhbXBsZSwgc3VwcG9zZSB5b3UgYXJlIHBsYXlpbmcgaW4gYSAkMSAkNSBzcHJlYWQgbGltaXQgZ2FtZSwgdGhlIGJldCBpcyAkMiB0byB5b3UsIGFuZCB5b3UgaGF2ZSBvbmx5ICQ1IGNoaXBzLiBTaWxlbnRseSB0b3NzaW5nIGEgJDUgY2hpcCBvdXQgbWVhbnMgeW91IGNhbGwgdGhlICQyIGJldC4gCldoZW4gdGhpcyBoYXBwZW5zIHRvIG15IHNpc3RlciBoZXIgYnJhaW4gaXMgY29tcGxldGVseSBvdmVybG9hZGVkIHRyeWluZyB0byBkZWFsIHdpdGggaGVyIGVtb3Rpb25zIGFuZCB0aGVyZSBub3RoaW5nIHdlIGNhbiBzYXkgdGhhdCB3aWxsIGNhbG0gaGVyIGRvd24uIApUaGUgYmVzdCB3YXkgdG8gbWVldCBhbmQgZGF0ZSBsb2NhbCBsYWRpZXMgaXMgdHJ5aW5nIG9ubGluZSBkYXRpbmcuIFRoYW5rZnVsbHksIHRoZXJlIGFyZSBtYW55IHBlb3BsZSBpbiBhIHNpbWlsYXIgc2l0dWF0aW9uLCB3aXRoIGxvdHMgb2Ygc2VuaW9ycyBsb29raW5nIHRvIGZpbmQgdGhhdCBzcGVjaWFsIHNvbWVvbmUuIFVubGlrZSB0aGUgd2lsZCBmcm9udGllciBvZiBvbmxpbmUgZGF0aW5nLCBvdXIgZXZlbnRzIGFyZSBkZXNpZ25lZCB0byBsZXQgeW91IGtub3cgZXhhY3RseSB3aGVyZSB0byBnby4gCk1ha2UgYW4gZWZmb3J0IHRvIHNwZW5kIHRpbWUgd2l0aCB5b3VyIGZyaWVuZC4gUGVvcGxlIHdpdGggbG93IHNlbGYgZXN0ZWVtIG9mdGVuIGxhY2sgdGhlIGluaXRpYXRpdmUgdG8gbWFrZSBwbGFucyB3aXRoIHNvbWVvbmUuIFlvdSBtYXkgaGF2ZSB0byBpbml0aWF0ZSBwbGFucyB5b3Vyc2VsZiBhbmQgc3RpY2sgd2l0aCB0aGVtLiAKVHVybiBpcyB0aGUgMiBvZiBoZWFydHMuIFJpdmVyIGlzIHRoZSBhY2VzIG9mIGhlYXJ0cy4gCkkgbmV2ZXIgcmVjZWl2ZWQgYW55ICJhZGRpdGlvbmFsIiBzZXJ2aWNlIGFuZCB0aGUgd2F5IEkgZ290IGFyb3VuZCB0aGlzIHdhcyB0aGF0IEkgcGFpZCB0aGVtIGV4dHJhICJ0aXBzIiB0byBqdXN0IGNoYXR0aW5nIGRpcnR5IHdpdGggbWUgaW5zdGVhZCB3aGlsZSBtYXNzYWdpbmcgbWUuIEkgdG9sZCB0aGVtIChpbiB0aGVpciBuYXRpdmUgbGFuZ3VhZ2UsIEkgc3BlYWsgYm90aCBDYW50b25lc2UgYW5kIE1hbmRhcmluKSB0aGF0IEkgZG9uIGRvIGV4dHJhIHNlcnZpY2VzICJhbnltb3JlIiBkdWUgdG8gYSBtZWRpY2FsIHJlYXNvbiBidXQgdGhhdCBJIHN0aWxsIGVuam95IHNleHVhbCB0YWxrIGR1cmluZyB0aGUgbWFzc2FnZSAoaWUuIApMJ2Fycml2ZSBkZSBKZWFuIENocmlzdG9waGUgQ2hvYmxldCBhLCBzZW1ibGUgdCBpbCwgaW5zdWZmbCB1bmUgbm91dmVsbGUgZHluYW1pcXVlIGF1IHByb2pldCBxdWkgZW4gYXZhaXQgYmllbiBiZXNvaW4uIEVuIGVmZmV0LCBpbCBhIHN1IG1vbnRyZXIgZHVyYW50IGNldHRlIHJ1bmlvbiBxdSdpbCBhIHZyYWltZW50ICJ0cmF2YWlsbCBzb24gZG9zc2llciIsIHF1J2lsIGEgc3UgcydlbiBzYWlzaXIgcGxlaW5lbWVudCBldCBlbiBmYWlzYW50IGRlcyBwcm9wb3NpdGlvbnMgYW1iaXRpZXVzZXMuIEMnZXN0IGFpbnNpIHF1ZSwgcGFyIGV4ZW1wbGUsIGxhIGRpbWVuc2lvbiBhcnRpc3RpcXVlLCBxdWUgbm91cyBhcHBlbGlvbnMgZGUgbm9zIHZ1eCwgZXN0IHJlbWlzZSBhdSBjZW50cmUgZGUgbGEgUHJvbWVuYWRlIFVyYmFpbmUuIFZvaWwgZG9uYyB1bmUgdHJzIGJvbm5lIG5vdXZlbGxlLiBFdCBjZSBuJ2VzdCBwYXMgbGEgc2V1bGUsIG5vdXMgYXZvbnMgZ2FsZW1lbnQgYXBwcmlzIHF1ZSBsZSBmaW5hbmNlbWVudCBkZSBsJ2NsYWlyYWdlIGRlIG1pc2UgZW4gdmFsZXVyIGR1IHZpYWR1YyBlc3QgZmluYWxlbWVudCBhc3N1ci4KSSBoYXZlbnQgdHJpZWQgdGhhdCB0aW1lIHBsYWNlIHNvIGlkayBhYm91dCB0aGF0IGJ1dCBxYnNmIGlzIHdoZXJlIGkgcGVyc29uYWxseSB3b3VsZCBnby4gYSB2aXNpdCB0byB0aGUgdGVhIG1hcmtldCBpcyBhbHNvIGZ1bi4KTllHQmFiZTEzICAyIHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvClRoZXkncmUgRElZIHB1YmxpY2F0aW9ucyB0aGF0IGhhdmUgYSBsb25nIGhpc3RvcnkgaW4gcmFkaWNhbCBzdWJjdWx0dXJlLiBUaGV5IGFyZSB0cmFkaXRpb25hbGx5IGNvcHkgcGFwZXIgZm9sZGVkIGluIGhhbGYgYW5kIHN0YXBsZWQuIEl0J3MgYW4gYWZmaXJtYXRpb24gb2YgdGhlIGFuYXJjaGlzdCBjb25jZXB0IG9mICJkb24ndCBibGFtZSB0aGUgbWVkaWEsIGJlY29tZSB0aGUgbWVkaWEiIGFuZCBpbiBhIHRydWUgc2Vuc2UgY29udHJvbGxpbmcgdGhlIGFnZW5jeSBvZiBvdXIgbmFycmF0aXZlIGJ5IHB1Ymxpc2hpbmcgYW5kIGRpc3RyaWJ1dGluZyBvdXIgb3duIGxpdGVyYXR1cmUuIApUaGUgdmlydWxlbnRseSBmZW1pbmlzdCBzdHVkZW50cyBqdXN0IHNvcnQgb2Ygc2hydWdnZWQsIHNvIG1heWJlIEkgcmVhbGx5IG5vdCBvbnRvIHNvbWV0aGluZyBoZXJlLiAKVGhhbmsgeW91LiBJIGhhdmUgYmVlbiBjb25zaWRlcmluZyBpdC4gTXkga2lkcyBhcmUgc3RpbGwgcXVpdGUgeW91bmcsIG15IHNvbiBkbyBnZXQgb24gZWFjaCBvdGhlciBuZXJ2ZXMgYnV0IG90aGVyIHRoYW4gdGhhdCBhbGwgZ2V0IGFsb25nLCBJIHNheS4gCicnVGhlIGRhbWFnZSBzdWZmZXJlZCBieSB2aWN0aW1zIG9mIHNlcmlvdXMgY2hpbGRob29kIGFidXNlIG1ha2VzIGl0IGV4dHJlbWVseSBkaWZmaWN1bHQgZm9yIHRoZW0gdG8gZ2V0IGNvbnZpY3Rpb25zLCcnIE1yIEVsbGlzIHNhaWQuIApBbGwgb2YgdGhpcyByZXF1aXJlcyB5b3UgdG8gc3RlcCBiYWNrIGFuZCBsb29rIGF0IHRoZSBjb250ZXh0IGhlcmUsIHRoZSBvYmplY3RpdmUgY29udGV4dCBvZiB3aGF0IGlzIGhhcHBlbmluZy4KWW91IGRvbid0IG5lZWQgYW55IHNwZWNpYWwgcHJpdmlsZWdlcyBpbiBvcmRlciB0byBhY2Nlc3MgcG9rZXIgZ2FtZXMgYXZhaWxhYmxlIG9ubGluZS4gClNreXdhbGtlciBmb3VnaHQgaW4gdGhlIENsb25lIFdhcnMgd2l0aCBoaXMgbWFzdGVyIGFuZCBiZWNhbWUgYSBKZWRpIEtuaWdodCBpbiAyMCBCQlkuIFRocm91Z2hvdXQgdGhlIGNvbmZsaWN0LCBTa3l3YWxrZXIgYmVjYW1lIGFuIGljb24gdG8gdGhlIHB1YmxpYywga25vd24gYXMgdGhlICJIZXJvIFdpdGggTm8gRmVhciIuCkV2ZXJ5IHNpbmdsZSB3b21hbiBJIHRhbGtlZCB0byAobXlzZWxmIGFzIHdlbGwpIGhhcyBleHBlcmllbmNlZCBzZXh1YWwgaGFyYXNzbWVudCBhdCB3b3JrLCBhbmQgbW9zdCBvZiB0aGVtIGp1c3QgaGFkIHRvIHN1Y2sgaXQgdXAgaWYgdGhleSB3YW50ZWQgdG8ga2VlcCB0aGVpciBqb2IuIApGb3IgYSB3aGlsZSwgSSBqb2luIGRlYmF0ZXMgd2hlcmUgaXQgd2FzIG1lbnRpb25lZC4gCkkgdGVsbCBteSBndWVzdHMgdGhhdCBJIGRvIGEgc2NhbGUgZnJvbSAxIDUgYXMgZmFyIGFzIHByZXNzdXJlIGdvZXMgYW5kIHdlIHN0YXJ0IGF0IGEgMSBvciBhIDIgYW5kIHdvcmsgb3VyIHdheSB1cC4gCk1lYW53aGlsZSwgdGhlIExlZnQgaGFzIG9mdGVuIHNpbXBseSBrZXB0IHF1aWV0LCBvciBldmVuIGpvaW5lZCB0aGUgcGFyYWRlLi4gCllvdSBzaG91bGQgc2VlIHJlbGllZiBpbiBhIGZldyBob3Vycy4gCiJJIGtub3cgdGhhdCBldmVyeSB5ZWFyIHRoZSBQYXRyaW90cyBhbmQvb3IgdGhlIFJlZCBTb3ggYXJlIGNoYW1waW9ucywgYW5kIHRoYXQgbGVhZHMgdG8gYSBiaWcgYm9vc3QgaW4gZmVlbGluZyBncmVhdCBhYm91dCBiZWluZyBmcm9tIEJvc3RvbiwiIEt1c2huZXIgc2FpZC4gIkJ1dCBpdCdzIG5vdCBhbHdheXMgZ29pbmcgdG8gYmUgdGhhdCB3YXkuIFlvdSBnb3R0YSBoYXZlIHNvbWV0aGluZyB0byByYWxseSBiZWhpbmQgdGhhdCdzIG5vdCBzcG9ydHMuIgpXaGF0IE9uVGhpbmdzIHRvIGRvRm9vZCBhbmQgRHJpbmtGYW1pbHkgYW5kIEtpZHNUViBHdWlkZURpZ2l0YWwgUHJpbnQgRWRpdGlvbkEgU1BFQ0lBTCBtZWV0aW5nIG9uIFR1ZXNkYXkgd2lsbCBkaXNjdXNzIHRoZSBmdXR1cmUgb2YgS2hhbmNvYmFuQ291bnRyeSBDbHViIGFtaWQgY29uY2VybnMgb3ZlciBpdHMgdmlhYmlsaXR5LiBQcmVzaWRlbnQgTGlvbmVsIE1hcnJpbmVyIHNhaWQgdGhlIGZpbmFuY2lhbCBzaXR1YXRpb24gd2FzIHVuc3VzdGFpbmFibGUgYXMgdm9sdW50ZWVycyBhbmQgc3RhZmYgdHJpZWQgdG8gbWFuYWdlIGZhY2lsaXRpZXMgYWZmZWN0ZWQgYnl0aGUgdG93bidzIGRlY2xpbmluZyBwb3B1bGF0aW9uLiBNciBNYXJyaW5lciBzYWlkIHRoZSBuaW5lIGhvbGUgZ29sZiBjb3Vyc2Ugd2FzIGNvbXBsZXRlbHkgcnVuIGJ5IHZvbHVudGVlcnMsIGJ1dCB0aGlzIHdhcyBiZWNvbWluZyBtb3JlIGRpZmZpY3VsdCBvd2luZyB0byB0aGUgYWdlIG9mIHNvbWV3b3JrZXJzLiAKS2xhc3Npc2NoZXMgRml2ZSBDYXJkIERyYXcgUG9rZXIuIApNZWFud2hpbGUsIHRoZSBjaGFuY2VzIG9mIHRoZSBzcG9ydHMgY2x1YiBiZWluZyBzYXZlZCBhcmUgZmFkaW5nIGJ5IHRoZSBkYXkuIApJdCBqdXN0IGNvc21ldGljLiBJIGp1c3Qgd2FudCB0byBzZXQgdGhlIHJlY29yZCBzdHJhaWdodCwgdGhhdCBldmVuIHJlbGlnaW9uIG5vdCBpbmNsdWRlZCwgdGhlcmUgYXJlIGhlYWx0aCBiZW5lZml0cyBhbmQgbmVnbGlnaWJsZSByaXNrcyAod2hpY2ggYXJlIGdyZWF0bHkgb3V0d2VpZ2hlZCBieSB0aGUgYmVuZWZpdHMgYXMgcG9pbnRlZCBvdXQgYnkgb3VyIG5vbiBzZWN1bGFyIENEQykgZm9yIGdldHRpbmcgdGhlIHByb2NlZHVyZSBkb25lLiAKSSBtZWFuLiAKTWFyeWxhbmQgbG9uZSBzbG90cyBmYWNpbGl0eSwgYXQgUGVycnl2aWxsZSBpbiBDZWNpbCBDb3VudHksIHdoaWNoIG9wZW5lZCBpbiBsYXRlIFNlcHRlbWJlciwgaGFzIGdlbmVyYXRlZCBtdWNoIHN0cm9uZ2VyIHByb2ZpdHMgdGhhbiBleHBlY3RlZC4KSXQgc2VlbXMgYSBiaXphcnJlIHN0YXRlbWVudCB0byBtZSB0aGF0IHlvdSBjb25zaWRlciBpdCBob3JyaWJsZSBmb3IgZW1vdGlvbnMgdG8gYmUgaW52b2x2ZWQgaW4gZGV2ZWxvcG1lbnQuIAoiRGVsaXZlcnkgTWFuIiBzdGFycyBWaW5jZSBWYXVnaG4gYXMgRGF2ZSBXb256aWFrLCBhbiBldmVyeWRheSBtYW4gd2hvIGhhcyBoaXMgbGlmZSB0aHJvd24gaW50byBkaXNhcnJheSB3aGVuIGhlIGRpc2NvdmVycyB0aGF0IGhlIGlzIHRoZSBiaW9sb2dpY2FsIGZhdGhlciBvZiA1MzMgY2hpbGRyZW4gYXMgdGhlIHJlc3VsdCBvZiBzcGVybSBkb25hdGlvbnMgaGUgbWFkZSB5ZWFycyBhZ28uIDE0MiBvZiB0aGVtIGZpbGUgYSBsYXdzdWl0IHRvIGZpbmQgb3V0IHdobyB0aGVpciBmYXRoZXIgaXMsIGFuZCBoZSdsbCBoYXZlIHRvIGRlY2lkZSBob3cgdG8gaGFuZGxlIHRoZSBzaXR1YXRpb24uIApUaGV5IGhhdmUgbm90IGJlZW4gdGVzdGVkIGJlY2F1c2UgdGhlIEZCSSBzYWlkIHRoZXkgd2VyZSwgYW5kIGFyZSwgdW50ZXN0YWJsZS4gQWxsIHVudGVzdGVkIGJpb2xvZ2ljYWwgZXZpZGVuY2UgaXMgZXhjdWxwYXRvcnkgaW4gc29tZSBzZW5zZS4gCkFuZCB3aXRoIG9uZSBvdXQgYW5kIHRoZSBiYXNlcyBsb2FkZWQsIEFhcm9uIFJvd2FuZCByaXBwZWQgYSBzaW5nbGUgdG8gcmlnaHQgdGhyb3VnaCB0aGUgZHJhd24gaW4gaW5maWVsZCBmb3IgdGhlIHdpbi4gCk9ubGluZSBwb2tlciB0b3VybmFtZW50IGFyZSBldmVudHMgaW4gd2hpY2ggcGxheWVycyBjb21wZXRlIHRvIHdpbiBhIHBhcnQgb2YgdGhlIHRvdGFsIHByaXplIHBvb2wuIFRoZSBnZW5lcmFsIG9iamVjdGl2ZSBvZiBlYWNoIHBva2VyIGdhbWUgaXMgdG8gY29sbGVjdCBhbGwgb2YgdGhlIGNoaXBzIGluIHBsYXkuIApGbG9wIGJldCBpcyB0b28gbGFyZ2UgZm9yIGEgbm9ybWFsIHNjZW5hcmlvIGJ1dCBzaW5jZSBISiBkb2VzbiBoYXZlIGEgZnVsbCBzdGFjayBpdCBmaW5lIHRvIGNob29zZSBsYXJnZXIgc2l6aW5ncy4gSWYgYSBDQiByYW5nZSBleGlzdHMgdGhpcyB2ZXJzaW9uIG9mIEFRIGlzIGRlZmluaXRlbHkgYSBwYXJ0IG9mIGl0LiBBZ2Fpbiwgbm9ybWFsbHkgbXkgYmV0dGluZyBmcmVxdWVuY3kgaGVyZSB3b3VsZCBiZSAwcGN0IGJ1dCBzaW5jZSBISiBpcyBhIGZpc2ggaXQgZmluZS4uIApCZWFrTWVhdCB1CkNhbiBJIGFzayBhbiBob25lc3QgcXVlc3Rpb24uIEhvdyBkbyB5b3UgZ2V0IGEgc3dlZXQgY2F0PyBJIGhhdmUgb25lIHdobyBpcyBhbG1vc3QgYSB5ZWFyIGFuZCB3aGlsZSBoZSBoYXMgc3dlZXQgbW9tZW50cywgdGhleSBhcmUgb24gaGlzIHRlcm1zIGFuZCBjb25kaXRpb25zLiAKU3RpbGwsIGEgZHlpbmcgbW90aGVyJ3MgYWNjdXNpbmcgZmluZ2VyIGlzIGVub3VnaCB0byByYWlzZSBhIGZldyBleWVicm93cy4gVGhlIGNvcHMgc3RhcnRlZCBjaXJjbGluZyBhcm91bmQgTWNDdWxsb3VnaCwgYnV0IHF1aWNrbHkgZm91bmQgdGhhdCB0aGV5IGNvdWxkbid0IGJyZWFrIGhpcyBhbGliaSwgd2hpY2ggaGFkIGJlZW4gYmFja2VkIGJ5IGhpcyBmYW1pbHkgYW5kLCBvaCB5ZWFoLCBoYWQgaGVsZCB1cCBmb3IgbW9yZSB0aGFuIGZpdmUgZ29kZGFtbmVkIGRlY2FkZXMuIApXZSB3b3JrIHZlcnkgaGFyZCB0byBkbyB0aGF0LCBiZWNhdXNlIG91ciBtb3RpdmF0aW9ucyBhcmUgZGlmZmVyZW50LiBXZSBhcmUgdmVyeSBiaWcgcGxheWVycyBvbiBhbnl0aGluZyB0byBkbyB3aXRoIHJlc3BvbnNpYmxlIGdhbWJsaW5nLiBDb3N0ZWxsbyBzYWlkIHRoZSBRdWVlbnNsYW5kIEdvdmVybm1lbnQgbmVlZGVkIHRvIHJlZHVjZSB0aGUgbWF4aW11bSBiZXQgb24gcG9raWVzIHRvICQxIGFuZCBzaWduaWZpY2FudGx5IHJlZHVjZSB0cmFkaW5nIGhvdXJzLi4gCkkgaGFkIHRvIGxvb2sgdGhpcyB1cCwgc28gYUkgcmVwcm9kdWNlIHRoZSBpbmZvIGZyb20gdGhlIEFtZXJpY2FuIEtlbm5lbCBDbHViOiAiTG9uZywgbG93LCBhbmQgbGV2ZWwsIHRoaXMgdW5pcXVlIGVhcnRoZG9nIGlzIGFtb25nIHRoZSBBS0MncyBtb3N0IGRpc3RpbmN0aXZlIGxvb2tpbmcgYnJlZWRzLiAKT3ZlcmhlYXJzIHlvdSBtaWdodCBsZWF2ZSB0aGUgaG91c2U/PyBHYXNwISBBbmQgZ28gb3V0c2lkZSB3aGVyZSBpdCdzIHVuc2FmZT8gRXhwZWN0IHlvdXIgcGxhbnMgdG8gYmUgb3ZlcnJpZGRlbiB3aXRoIGNvbXBsaWNhdGVkIHJlcXVlc3RzIG9yIHNhZmV0eSB3YXJuaW5ncy4gVXN1YWxseSBzZW5kaW5nIG15IGRhZCB0byBhY2NvbXBhbnkgdXMgKHdlIGFyZSBhbGwgb3ZlciAzNSkgYW5kIHNvIHdlIGRvbid0IGxlYXZlIGJlY2F1c2Ugd2UgZmVlbCBiYWQgaW50ZXJydXB0aW5nIG15IGRhZCdzIHJhcmUgbW9tZW50IG9mIHJlbGF4YXRpb24uCkFsc28gd2hlbiB5b3UgdGFrZSBub3RlcyBkdXJpbmcgdGhlIHRlc3QsIGRvbiB3b3JyeSBhYm91dCB0aGUgcXVlc3Rpb24gYXMgbXVjaCBhcyBwaWNraW5nIHVwIHRoZSBkaWZmZXJlbmNlcyBpbiB0aGUgYW5zd2Vycy4gSSBtZXNzZWQgdXAgYSBjb3VwbGUgYmVjYXVzZSBJIHdhcyBmb2N1c2luZyB0b28gbXVjaCBvbiB0aGUgcXVlc3Rpb24gd2hlbiB0aGUgYW5zd2VyIHdvdWxkIG90aGVyd2lzZSBiZSBvYnZpb3VzICh0aGUgcXVlc3Rpb24gcGxheXMgdHdpY2UgZm9yIHRoZSBtb3N0IHBhcnQpLgpUaGUgbWFuIHdobyBiZWF0IExhcyBWZWdhcyBhdCBibGFja2phY2sKVGhlIFJpZ2h0IEtpbmQgb2YgUHVtcGtpbi4gVG8gaGVscCBnZXQgYSBwdW1wa2luIG9mIHRoZSByaWdodCBzaXplIGFuZCBzaGFwZSwgeW91IHNob3VsZCBhbHJlYWR5IGtub3cgd2hhdCB5b3Ugd2FudCB0aGUgY2FydmluZyB0byBsb29rIGxpa2Ugd2hlbiB5b3UncmUgZG9uZS4gCkdpdmVuIHdoYXQgeW91IGRpc2N1c3NpbmcgaXMgaWxsZWdhbCBpbiBtYW55IHBsYWNlcywgY29udHJhY3RzIG1heSBub3QgZXZlbiBiZSBwb3NzaWJsZS4KMyBnaXJscy4gTXkgc3RpbGwgYmVzdGllLCBNeXNlbGYsIGFuZCBBLiAKSnVzdGluIExhbmdlciBhbHNvIGJvd2VkIG91dCBpbiB0aGF0IGdhbWUsIGFuZCB3aXRoIEFkYW0gR2lsY2hyaXN0IGFuZCBNYXR0aGV3IEhheWRlbiBmb2xsb3dpbmcgc3VpdCBwcmlvciB0byBsYXN0IHN1bW1lcidzIHJlbWF0Y2gsIEF1c3RyYWxpYSdzIGdvbGRlbiBnZW5lcmF0aW9uIGhhdmUgYWxsIGRlcGFydGVkIHRoZSBzY2VuZSwgd2l0aCB0aGUgbm90YWJsZSBleGNlcHRpb24gb2YgdGhlIGN1cnJlbnQgY2FwdGFpbiwgUmlja3kgUG9udGluZy4uIApBTlNXRVIgV2hldGhlciBvciBub3QgdHdvIHBlb3BsZSBhcmUgdHdpbnMsIHRoZXkgY2FuIGhhdmUgZHJlYW1zIHdpdGggdGhlIHNhbWUgdGhlbWUsIG9yIHdpdGggbWF0Y2hpbmcgZGV0YWlscy4gCkhlbGxvIC91L0RhdF9QZXJjeSwgdGhhbmtzIGZvciBwb3N0aW5nIHRvIC9yL0Jvc3NmaWdodC4gVW5mb3J0dW5hdGVseSB5b3VyIHBvc3QgaGFzIGJlZW4gcmVtb3ZlZCBmb3IgdGhlIGZvbGxvd2luZyByZWFzb24ocyk6CkZvciBtb3JlIGluZm9ybWF0aW9uIGFib3V0IHRoZSBGcmVlZG9tIG9mIEluZm9ybWF0aW9uIEFjdCByZWFkIG91ciBzdW1tYXJ5IG9mIHRoZSBGb0kgQWN0IG9yIGxpbmsgdG8gb3VyIEZPSSBwYWdlcy4KSWYgeW91J2QgbGlrZSB0byBicmVhayBpbnRvIHRoZSBpbmR1c3RyeSwgYmUgcHJlcGFyZWQgZm9yIHNvbWUgc3RpZmYgY29tcGV0aXRpb24gICBhZnRlciBhbGwsIHRoZXJlJ3Mgbm8gc2hvcnRhZ2Ugb2YgcGVvcGxlIHdpbGxpbmcgdG8gdGFrZSB0aGUgam9iISBTdGFydCBieSBmYW1pbGlhcml6aW5nIHlvdXJzZWxmIHdpdGggdGhlIHZhcmlvdXMgc291cmNlcyBmb3Igc3BhIHJldmlld3MsIHdoaWNoIGluY2x1ZGUgaW5kdXN0cnkgbWFnYXppbmVzIGFuZCBkaXJlY3RvcmllcyBhcyB3ZWxsIGFzIHRyYXZlbCBhbmQgbGlmZXN0eWxlIHB1YmxpY2F0aW9ucy4gU29tZSBwb3B1bGFyIHNpdGVzIGluY2x1ZGUgU3BhIEZpbmRlciwgU3BhIExpZmUsIE9yZ2FuaWMgU3BhLCBTYXkgU3BhIGFuZCBBbWVyaWNhbiBTcGEsIGVhY2ggb2Ygd2hpY2ggbWFpbnRhaW5zIG9ubGluZSBhbmQgcHJpbnRlZCBsaXN0cyBvZiBzcGEgcmV2aWV3cy4gCkZyb20gYSBzdHJhbmdlcidzIGhhbmQgZ2VzdHVyZXMsIHlvdSBjYW4gZGV0ZXJtaW5lIGFsbCBvZiBoaXMgb3IgaGVyIHBoeXNpY2FsIGluc2VjdXJpdGllcy4gRG9uJ3QgbGV0IHlvdXIgaGFuZHMgcHJvamVjdCB0aGUgd3JvbmcgaW1hZ2UhLiAKV29yZSByZWQsIG9yIGplYW5zIGFuZCB0ZWUgc2hpcnRzLiAKRXQgcXVlIGNlbGEgbmUgcydlc3QgY29tcHJpcyBxdWUgYmVhdWNvdXAgcGx1cyB0YXJkICBDb21tZSBsYSBCaWJsZS4gCldoZW4gcGVyZm9ybWluZyBhIGNvdmVyIG9mIE1hcmxleSdzICJXYXIiIG9uIFNOTCwgcmV3cml0aW5nIGEgZmV3IG9mIHRoZSBseXJpY3MgdG8gYWRkcmVzcyBjaGlsZCBhYnVzZS4gCk5ld3MgYWJvdXQgdGhlIFN1cGVyIEJvd2wKQWxsIHByb2NlZWRzIGZyb20gdGhlIGV2ZW50IGFyZSBkb25hdGVkIHRvIHRoZSBNb3ZlbWJlciBGb3VuZGF0aW9uIGFuZCBpbnZlc3RlZCBpbiBwcm9ncmFtcyBmb2N1c2VkIG9uIHByb3N0YXRlIGNhbmNlciwgdGVzdGljdWxhciBjYW5jZXIsIGFuZCBtZW4gbWVudGFsIGhlYWx0aC4gR2V0IGFyb3VuZCBpdCBhbmQgY2VsZWJyYXRlIG91ciAxMHRoIGFubml2ZXJzYXJ5LiAKVGFrZSB5b3VyIHRpbWUgdG8gZG8gc29tZSByZXNlYXJjaCBhYm91dCB5b3VyIHRvd24gKGFuZCBuZWFyYnkgb25lcyBhcyB3ZWxsKSB0byBnZXQgYWNxdWFpbnRlZCB3aXRoIHRoZSBhdHRyYWN0aW9ucyB0aGF0IHlvdSBuZXZlciBrbmV3IGFib3V0IGJlZm9yZS4gCklmIHlvdSBhY2NlcHQgdGhhdCwgaWYgeW91IGJlbGlldmUgeW91IHNob3VsZCBjYWxsIHRyYW5zIHBlb3BsZSBieSB0aGUgcHJvcGVyIHByb25vdW5zLCBpZiB5b3UgdGhpbmsgdGhhdCBmb3Igbm9uIG1lZGljYWwgcHVycG9zZXMgd2Ugc2hvdWxkIGlkZW50aWZ5IHRyYW5zIHBlb3BsZSBhcyB0aGUgZ2VuZGVyIHRoZXkgaWRlbnRpZnkgd2l0aCwgeW91IHdpbGwgaW5ldml0YWJseSBpbmNsdWRlIHBlb3BsZSBpbiB0aGUgY2F0ZWdvcnkgb2Ygd2hvIGhhdmUgdmFnaW5hcyBhbmQgb3ZhcmllcyBhbmQgcGVvcGxlIGluIHRoZSBjYXRlZ29yeSBvZiB3aG8gaGF2ZSBwZW5pc2VzIGFuZCB0ZXN0aWNsZXMuIApJZiB5b3UgYXJlIHNlZWtpbmcgcGxheWluZyBjYXJkcyBmb3IgdGhlIGdhbWUgb2YgYnJpZGdlLCB5b3UgbWF5IGNvbnNpZGVyIHB1cmNoYXNpbmcgc3RhbmRhcmQgZGVja3MuIEl0IGlzIGltcG9ydGFudCB0byB1bmRlcnN0YW5kIHRoYXQgbWFueSBzdGFuZGFyZCBkZWNrcyBhcmUgY2hlYXBseSBtYWRlLiBIb3dldmVyLCB0aGVyZSBhcmUgc3RhbmRhcmQgZGVja3MgdGhhdCBhcmUgZGVzaWduZWQgd2l0aCBxdWFsaXR5IGFuZCBleHF1aXNpdGUgY3JhZnRzbWFuc2hpcC4gVGhlcmUgYXJlIG1hbnkgcGxhY2VzIHRoYXQgZm9jdXMgb24gc2VsbGluZyBoaWdoIHF1YWxpdHkgcG9rZXIgZGVja3MuIE9uZSBleGFtcGxlIGlzIFBva2VyIFN0YXJzIERpcmVjdC4KSSB1c2UgcGlwZW52IGluIHByb2R1Y3Rpb24gYW5kIHRlc3RpbmcgdG8gc2ltcGxpZnkgZGVwbG95bWVudCBvbiBzeXN0ZW1zIHRoYXQgZG9uIG5hdGl2ZWx5IHN1cHBvcnQgcHl0aG9uIDMuNisuIAogY2VzIHBhbGllcnMsIHF1aSBzb250IGF1IG5vbWJyZSBkZSB0cm9pcywgY29ycmVzcG9uZGVudCB1bmUgdm9sdXRpb24gZGVzIG10aG9kZXMgZGUgY29sbGFib3JhdGlvbiBldCB1bmUgY3JhdGlvbiBkJ2luc3RydW1lbnRzIGluZGl0cyAocGFyIGV4ZW1wbGUgbGEgY3JhdGlvbiBkZSBmaWNoaWVycyBkZSBzY3VyaXQgaW50cmlldXJlIGRlIG5vdXZlbGxlIGducmF0aW9uLCBsYSBwcm9kdWN0aW9uIGRlIGRvY3VtZW50cyB2YWx1YXRpZnMgZGUgbGEgbWVuYWNlIGV0IGxlIGR2ZWxvcHBlbWVudCBkdSBwcmluY2lwZSBkZSBkaXNwb25pYmlsaXQpLiAKSW4gdGhvc2Ugc3RhcnRzLCBoZSB0aHJvd24gMTQgaW5uaW5ncywgZ2l2ZW4gdXAganVzdCB0aHJlZSBydW5zIGFuZCBzdHJ1Y2sgb3V0IDI0IGJhdHRlcnMgYW5kIGhhdmUgbm90aGluZyB0byBzaG93IGZvciBpdC4gCkFuZCB0aGF0J3Mgb25lIHNtYWxsIHN1Z2dlc3Rpb24uIAoiSW4gb3VyIGxhYiwgdGhlIGFtb3VudCBvZiBsb2FkIHRoZSBzcGluZSBjYW4gYmVhciB3aXRob3V0IGluanVyeSB3YXMgZ3JlYXRseSByZWR1Y2VkIHdoZW4gc3ViamVjdHMgcHVsbGVkIGluIHRoZWlyIGJlbGx5IGJ1dHRvbnMiIGR1cmluZyBjcnVuY2hlcyBvdGhlciBleGVyY2lzZXMuClAgQ2hpZWYgQnJhbmQgT2ZmaWNlciBhbmQgQU5BIENoYWlybWFuIE1hcmMgUHJpdGNoYXJkIHdhc24ndCBhdCB0aGUgdGFsaywgYnV0IGhlIGhhZCBzb21lIGNvdW50ZXJwb2ludHMgaW4gYW4gaW50ZXJ2aWV3IGxhdGVyLiBIZSBzYXlzIFAgaGFzIGxhdW5jaGVkIG1vcmUgdGhhbiAxMDAgc2VlZCBzdGFnZSBleHBlcmltZW50cyByZWNlbnRseSBhbmQgZXZlbiB0dXJuZWQgaXRzIGJpZyBlc3RhYmxpc2hlZCBicmFuZHMgbG9vc2UgdG8gZG8gZGlyZWN0IHRvIGNvbnN1bWVyIHNhbGVzIHJlY2VudGx5IHRvIGFjdCBtb3JlIGxpa2Ugc3RhcnR1cHMuLiAKVGhpcyBpcyB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZW9yZXRpY2FsIHByb2JhYmlsaXR5IGFuZCBleHBlcmltZW50YWwgcHJvYmFiaWxpdHkuIFRoZW9yZXRpY2FsIHByb2JhYmlsaXR5IGlzIGJhc2VkIG9uIHB1cmUgc3RhdGlzdGljcyBhbmQgdGhlIGFycmFuZ2VtZW50IG9mIHRoZSB0ZXN0LiAKQ0I6IFlvdSBhcmUgYmVpbmcgaW5jb25zaWRlcmF0ZS4gVGhpcyBpcyBzaW1wbHkgYSB0aHJlZSBkYXkgZW5nYWdlbWVudCBhbmQgeW91IGFyZSByZWZ1c2luZyB0byBhc3Npc3QuIApPbiB0aGUgb3RoZXIgaGFuZC4gUmVhZGluZyBhIGZlbWluaXN0IG9yIGZlbWFsZSBwcmltYXRvbG9naXN0IGFwcHJvYWNoIHRvIHRoaXMgc3ViamVjdCBpcyB2ZXJ5IGRpZmZlcmVudC4gVGhlIFdvbWFuIHRoYXQgTmV2ZXIgRXZvbHZlZCBvciBNb3RoZXIgTmF0dXJlKSBmb3IgYSB2ZXJ5IGRpZmZlcmVudCB2aWV3IG9mIHRoZSBnZW5kZXJlZCB1bmRlcnN0YW5kaW5nIG9mIHByaW1hdGUgYmVoYXZpb3VyLiAKUGl0dHNidXJnaCBzaG9vdGluZyB2aWN0aW0gd2hvIGdyZXcgdXAgaW4gVG9yb250byBkZXNjcmliZWQgYXMgJ3N3ZWV0JyBhbmQgJ2NhcmluZycKSXQgaXMgaW1wb3NzaWJsZSB0byBzYXkgaG93IGRpZmZlcmVudCBDaGluYSB3b3VsZCBiZSB3aXRob3V0IHRoZSBPbmUgQ2hpbGQgcG9saWN5LiAKSXMsIEkgYmVsaWV2ZSwgR29kIGludmVudGVkIHNwb3J0cyB0YXBlQnJva2VuIGhlYXJ0cyBhcmUgZGlmZmVyZW50LiAKV2hlbiB0aGUgdmFjY2luZSBmb3IgY2hpY2tlbnBveCBmaXJzdCBjYW1lIG91dCwgbW9zdCBwZW9wbGUgdGhvdWdodCBpdCB3YXMgdmVyeSBzdHVwaWQuIFNvbWUgcmVzZWFyY2ggd2FzIGRvbmUsIGFuZCB0aGV5IHNhaWQgc29tZXRoaW5nIGxpa2UgOSBvdXQgb2YgMTAgdGVlbmFnZXJzIHdvdWxkIGNob29zZSB0aGUgdmFjY2luZSBvdmVyIGRlYWxpbmcgd2l0aCBjaGlja2VucG94LiAKMTcuIFRoZSBhZXN0aGV0aWMgZmVlbCBvciB0YWN0aWxlIHF1YWxpdHkgb2Ygc29tZXRoaW5nLCBzdWNoIGFzIGEgZmFicmljLCB0ZXh0aWxlLCBvciBjYXJwZXRpbmcsIHRoYXQgaW5kaWNhdGVzIGl0cyBmaW5lbmVzcywgdGV4dHVyZSwgYW5kIGR1cmFiaWxpdHkuCkkgZG9uJ3Qgd2FudCBiZWhhdmlvcnMgdG9sZXJhdGVkIHRoYXQgSSB3b3VsZG4ndCB0b2xlcmF0ZSBpbiBteSBzb24uIEFzayBpZiBoZSB0cmllZCBhbnl0aGluZyB0aGF0IHNlZW1lZCBlZmZlY3RpdmUgb3IgdGhhdCBoZSBldmVuIGxpa2VkIHRoZSBmZWVsaW5nIG9mICh0ZWxsaW5nIG9mZiBvciBjb25mdXNpbmcgYSBidWxseSkuIEFzayBob3cgYnlzdGFuZGVycyByZWFjdCB0byBzZWVpbmcgYnVsbHlpbmcuIApIYXJkYWVrICAyMiBwb2ludHMgIHN1Ym1pdHRlZCA1IG1vbnRocyBhZ28KSSBhbHNvIGhhdmUgc29tZSBvdGhlciBzdHJpbmdzIHNhdmVkOiBhIHRlbXBsYXRlIGZvciBtZWV0aW5nIGFnZW5kYXMvbm90ZXMsIHRlbXBsYXRlcyBmb3IgY2VydGFpbiBtaXN0YWtlcyBJIG9mdGVuIHNlZSBvbiBwYXBlcnMgSSByZXZpZXcsIHNvbWUgY29tbW9uIHRleHQgc3RyaW5ncyBJIG5lZWQgdG8gdXNlIGluIG15IGFkdmlzaW5nIGR1dGllcywgZXRjLi4gClRoZXJlIGlzIGEgbWlsaXRhcnkgYW5kIGZpcnN0IHJlc3BvbmRlciBjdWx0dXJlIG9mICJ0cmFpbiB0aHJvdWdoIHBhaW4sIiBhbmQgbWVtYmVycyBtYXkgZmVlbCBvdXRjYXN0IGlmIHRoZXkgc2l0IG91dCB0cmFpbmluZyBvciBhIG1pc3Npb24uIFBoeXNpY2FsIHRyYWluaW5nIChQVCkgb2Z0ZW4gYmVjb21lcyBhIHByaW1hcnkgbWV0aG9kIG9mIHN0cmVzcyByZWxpZWYsIGFuZCB0aGV5IGNhbiBiZWNvbWUgYWRkaWN0ZWQgdG8gdHJhaW5pbmcgYW5kIHJlZnVzZSB0byBtaXNzIFBULCBldmVuIHdoZW4gaW4gcGFpbi4gCldpdGhob2xkaW5nIHJlbnQgaXMgb25lIG9mIHRoZSBvbmx5IHJlY291cnNlcyBhIHRlbmFudCBoYXMgYWdhaW5zdCBhbiB1bnJlc3BvbnNpdmUgbGFuZGxvcmQgb3V0c2lkZSB0aGUgY291cnQgc3lzdGVtLiBXaHkgd291bGQgdGhleSBvZmZlciwgYWxsIG9uIHRoZWlyIG93biwgdG8gZm9yZWdvIHRoYXQ/LiAKU2VhdHRsZSBwb2xpY2Ugc2V0IHVwIG1hc3NhZ2UgcGFybG9yIGluIHNleApZZXMsIGVzcGVjaWFsbHkgaWYgdGhleSBhcmUgcmVsZXZhbnQgdG8gdGhlIHBvc3QuIEhvd2V2ZXIsIG91ciBydWxlcyBzdGlsbCBhcHBseS4gSWYgeW91ciBzdG9yeSBkZWZlbmRzIG9yIHN1cHBvcnRzIHRoZSBjcmVlcCwgZGVyYWlscyB0aGUgZGlzY3Vzc2lvbiwgb3IgaXNuIGVtcGF0aGV0aWMgdG93YXJkcyB0aGUgcmVjaXBpZW50IG9mIHRoZSBtZXNzYWdlcywgaXQgd2lsbCBiZSByZW1vdmVkLiBRdWVzdGlvbnMgcmVnYXJkaW5nIHdoZXRoZXIgb3Igbm90IHlvdSBjb21lIG9mZiBhcyBjcmVlcHkgc2hvdWxkIGJlIGRpcmVjdGVkIHRvIC9yL3JlbGF0aW9uc2hpcHMuCk5vdyBhbGwgb2YgdGhhdCBiZWluZyBzYWlkLCBqdWRnaW5nIGF0IGZhY2UgdmFsdWUgdGhlIGd1eSBzZWVtcyB0byBraW5kIG9mIGJlIGEgYml0IG9mIGEgZG91Y2hlYmFnIHRoYXQga25ldyB0aGVyZSB3YXMgbm8gcHJlc2VudCB0aHJlYXQsIGJ1dCB0aGF0IHNvbWUgc2VyaW91cyBhcm1jaGFpciBxdWFydGVyYmFja2luZyB3aGljaCBJIGhhdmUgYSB2ZXJ5IGhhcmQgdGltZSBkb2luZy4gClVuZGVyIEFybW91ciBDb2xkIEdlYXIgT2ZmIEZpZWxkIEdsb3ZlcyAgIE1lbidzIFNvbGQgSW4gUGFpcnMuIApXZSBhcmUgaW52b2ljZWQgZXZlcnkgdHdvIHdlZWtzIGFuZCB0aGV5IHRha2UgZSB0cmFuc2ZlciBhcyBwYXltZW50IChhbG9uZyB3aXRoIGNyZWRpdCBjYXJkKS4uIApObywgdGhleSBkb24gVGhhdCBhIGR1dGNoIHRyYWRpdGlvbi4KUHJlc2VudGluZyBteXNlbGYgd2l0aCBzb21lIHJhZGljYWwgc2VsZiBsb3ZlIGlzIHRoZSBwdXJwb3NlIG9mIG15IGRheXMgb24gdGhpcyBwbGFuZXQuIEkgdHJpZWQgc29tZSB3YXlzIGZvciBkZWNhZGVzIGFuZCBub3cgSSB0cnlpbmcgYSB2ZXJ5LCB2ZXJ5IGRpZmZlcmVudCBhcHByb2FjaCBmb3IgYSBiZXR0ZXIgZnV0dXJlIGZvciBtZS4uIAogNyBwb2ludHMgIHN1Ym1pdHRlZCAzIGhvdXJzIGFnb015IHVuZGVyc3RhbmRpbmcgb2YgdGhlIEF1Z21lbnRzIGFuZCB0aGVpciBoaXN0b3J5IGlzIHRoYXQgaXMgd2FzIGEgY29uZmx1ZW5jZSBvZiBmYWN0b3JzLiBBdWdtZW50cyBwb3NzZXNzZWQgc3VwZXJodW1hbiBzdHJlbmd0aCwgYWdpbGl0eSwgaW50ZWxsaWdlbmNlLCBhbmQgKCBJIGhvcGUgSSBub3QgbWlzcXVvdGluZyApIGFtYml0aW9uLiBUaGUgQXVnbWVudHMgd2VyZSBib3JuIGFuZCByYWlzZWQgdG8gYmUgc3VwZXJpb3IgdG8gSG9tbyBTYXBpZW4uIApJIHRoaW5rIHRoZXkgaGF2ZSBoYWQgYSBnYW1lIGdvaW5nIDI0LzcvMzY1IHNpbmNlIHRoZXkgb3BlbmVkLiAKRGVzIHBlcnNvbm5lcyBncm9zc2VzIHJhY29udGVudCBwYXJmb2lzIGwndG9ubmVtZW50IGRlIGxldXIgbWRlY2luIGRldmFudCBkZXMgYW5hbHlzZXMgdG91dCAgZmFpdCBub3JtYWxlcyBzYW5zIGF1Y3VuIHByb2JsbWUgZGUgY2hvbGVzdHJvbCBvdSBkZSBnbHljbWllLiBFbiByZXZhbmNoZSwgbGEgZmFvbiBkb250IGJlYXVjb3VwIGRlIG1kZWNpbnMgKHBhcyB0b3VzIHZpZGVtbWVudCkgYWNjdWVpbGxlbnQgbGVzIHBlcnNvbm5lcyBncm9zc2VzLCBsZXVyIHRlbmRhbmNlICB0b3V0IHJhbWVuZXIgIGxhIG5jZXNzaXQgZGUgcGVyZHJlIGR1IHBvaWRzIHF1ZWwgcXVlIHNvaXQgbGUgbW90aWYgZGUgbGEgdmlzaXRlLCAgcHJlc2NyaXJlIHVuIHJnaW1lIHBsdXR0IHF1J2NvdXRlciBsYSBwZXJzb25uZSwgcGV1dCBjb25kdWlyZSAgcydsb2lnbmVyIGR1IG1vbmRlIG1kaWNhbCBldCBkb25jICBwb3V2b2lyIG1vaW5zIGJpZW4gc2Ugc29pZ25lci4gCkRhcmtUb3JlYWRvclJlZCB1CldoaWxlIGkgd29uIGZ1bGx5IGRlcHJlY2lhdGUgQm9uZHMgYWNoaWV2ZW1lbnQgYXMgYW4gb3V0c3RhbmRpbmcgYmFzZWJhbGwgaG9tZXJ1biBoaXR0ZXIsIGkgd2lsbCB1bmRlcnNjb3JlIGhpcyBjaG9pY2UgaW4gY2hlYXRpbmcgdG8gYWNoaWV2ZSBIYW5rIEFhcm9uIGJvbmEgZmlkZSByZWNvcmQuIFdoZW5ldmVyIEkgdGhpbmsgb2YgQm9uZHMgbm93LCBJIHdpbGwgYWx3YXlzIHRoaW5rIG9mIFJvc2llIFJ1aXogVml2YXMgd2hvIHdvbiB0aGUgODR0aCBCb3N0b24gTWFyYXRob24uIFRoZSBwcm9ibGVtIHdpdGggUm9zaWUgaXMgdGhhdCBzaGUgdXNlZCBhIHBlcmZvcm1hbmNlIGVuaGFuY2luZyBjYXIgcmlkZSB0byBzaGF2ZSBhIGNvdXBsZSBvZiBtaWxlcyBvZmYgb2YgdGhlIHJhY2UgYW5kIHRoZW4gbGF0ZXIganVtcGVkIGluIGZyb20gdGhlIGNyb3dkIGFuZCBzcHJpbnRlZCB0byB0aGUgZmluaXNoLiBTaG91bGQgd2UgYmUgZXF1YWxseSBpbXByZXNzZWQ/IE5vdCBleGFjdGx5IGFuIGFwcGxlIGZvciBhcHBsZSwgaSBhZ3JlZSBidXQgYXMgZmFyIGFzIGNoZWF0aW5nLCB3aGVyZSBkbyB3ZSBkcmF3IHRoZSBsaW5lPyBTaW5jZSB3aGVuIGRpZCBoeXBvZGVybWljIG5lZWRsZXMgYmVjb21lIG9rYXkgaW4gYnJlYWtpbmcgcmVjb3JkcyBvciB3aW5uaW5nPyBJdCBub3QuIEl0IGlzIGZsYXQgb3V0IGNoZWF0aW5nLiBNYXJrIE1jR3VpcmUgaXMgZXF1YWxseSBhIGNoZWF0ISBTdXJlIGhlIGdvdCB0byB0YWtlIGluIHRoZSBhZHVsYXRpb24gb2YgYW4gYWRvcmluZyBwdWJsaWMgZm9yIGhpcyBjaGVhdGluZyB0YWN0aWNzLiBJIGhvcGUgYm90aCBvZiB0aGVzZSBtZW4gY2FuIGxvb2sgdGhlbXNlbHZlcyBpbiB0aGUgbWlycm9yIGFuZCBpbnRvIHRoZSBleWVzIG9mIHRoZWlyIGNoaWxkcmVuIGFuZCBmZWVsIGp1c3RpZmllZCB0aGF0IHRoZWlyIGVzc2VudGlhbGx5IHB1bGxlZCBhIFJvc2llIFJ1aXogd2l0aCB0aGUgQW1lcmljYW4gcHVibGljLiBUaGFua2Z1bGx5LCBhIG1ham9yaXR5IG9mIHBlb3BsZSBkbyBub3QgY29uZG9uZSB0aGlzIHdpbiBhdCBhbnkgbWVhbnMgbWVudGFsaXR5LiBXaGlsZSBpIGRvIHJlYWxpemUgdGhhdCBtb3N0IG9mIGJhc2ViYWxsIGFuZCBmb290YmFsbCBhbmQgdGhlIE9seW1waWNzIG92ZXIgdGhlIHBhc3QgZmV3IGRlY2FkZXMgaGF2ZSBpdCBub3Qgb2theSBpbiBteSBib29rLiBMb29rIGl0IHVwOiBDaGVhdGluZyBjaGFyYWN0ZXJpc3RpY2FsbHkgaXMgZW1wbG95ZWQgdG8gY3JlYXRlIGFuIHVuZmFpciBhZHZhbnRhZ2UsIHVzdWFsbHkgaW4gb25lIG93biBpbnRlcmVzdCwgYW5kIG9mdGVuIGF0IHRoZSBleHBlbnNlIG9mIG90aGVycy4gVG8gYWN0IGRpc2hvbmVzdGx5OyBwcmFjdGljZSBmcmF1ZC4gVG8gdmlvbGF0ZSBydWxlcyBkZWxpYmVyYXRlbHksIGFzIGluIGEgZ2FtZS4KQWJvcnRpb24/IE5vLCBuZXZlci4gCkNsaWNrIG9uIHlvdXIgY2FzaW5vIGNoaXBzIHRvIGNob29zZSBob3cgbXVjaCB0byBiZXQsIGNsaWNrIG9uIHRoZSBBbnRlIGNpcmNsZSB0byBwbGFjZSB5b3VyIGJldCAob3B0aW9uYWxseSB5b3UgY2FuIGFsc28gY2xpY2sgb24gdGhlIEFBIHNpZGUgYmV0KS4gRWFjaCB0aW1lIHlvdSBjbGljaywgeW91ciBiZXQgd2lsbCBpbmNyZWFzZSBhY2NvcmRpbmcgdG8gdGhlIHZhbHVlIG9mIHRoZSBjYXNpbm8gY2hpcHMgeW91IHNlbGVjdGVkLiAKVGhlIGVuZXJneSBpbiBCb3N0b24ncyBpbm5vdmF0aW9uIHNjZW5lIGlzIGF3ZSBpbnNwaXJpbmcuIEV2ZXJ5IGRheSBJIGVudGVyZWQgdGhlIE1hc3NDaGFsbGVuZ2Ugb2ZmaWNlcyBkdXJpbmcgdGhlIGFjY2VsZXJhdG9yLCBubyBtYXR0ZXIgaG93IGxpdHRsZSBzbGVlcCBJIGhhZCwgSSB3YXMgaW5zdGFudGx5IGludmlnb3JhdGVkLiAKT3IgdXNlIGEgUE8gQm94IGlmIHlvdSBoYXZlIG9uZS4gRG9uJ3QgZ2l2ZSB5b3VyIHJlYWwgYWRkcmVzcy4gKEZ1bGwgQW5zd2VyKS4gClNoZSBjYW4gaGF2ZSBhbiBhd2Vzb21lIGxpZmUgYmVjYXVzZSBzaGUgaXMgYW4gYXdlc29tZSBnaXJsIGFuZCBpIHdpbGwgcm90IGF3YXkgYmVjYXVzZSB0aGF0cyB0aGUgbGlmZSBpIGNob3NlLiAKSSBtZWFuLCB5b3UncmUgZnJlZSB0byBkbyB3aGF0ZXZlciB5b3Ugd2FudCwgdGhhdCdzIHlvdXIgcmlnaHQuIApNeSBkZWVwLCBkZWVwIGNvbmNlcm4gaXMgbXkgb3RoZXIgaG91c2VtYXRlLCBMaWxseSBCZWUsIG91ciBvbmUgeWVhciBvbGQgTWFsYWdhc3kgQ290b24gZGUgVHVsZWFyLiBBcyBkb2dzIHRha2Ugb3ZlciB0aGUgY291bnRyeSwgZnJvbSBhaXJsaW5lcyB0byByZXN0YXVyYW50cyB0byBkZXBhcnRtZW50IHN0b3Jlcywgd2UgbmVlZCB0byBob25lIG91ciBnaWZ0IGdpdmluZyBza2lsbHMgdG8gbWVldCBjYW5pbmUgZGVzaXJlcyBhbmQgZmFudGFzaWVzLiBWZXJ5IHNvb24sIG91ciBmb3VyIGxlZ2dlZCBmcmllbmRzIHdpbGwgcnVsZSB0aGUgd29ybGQuIAoyMyAgQW5kIEFicmFoYW0gY2FtZSBuZWFyIGFuZCBzYWlkLCBZb3UgYWxzbyBkZXN0cm95IHRoZSByaWdodGVvdXMgd2l0aCB0aGUgd2lja2VkPwpPZWxhdWdlIHUKTGlrZSBvdXIgbW9vbiwgaXQgd2lsbCByZWZsZWN0IHRoZSBzdW5saWdodCB3aGVuIGlsbHVtaW5hdGVkIGFuZCB0aGF0IHdvdWxkIGxvb2sgZGlmZmVyZW50bHkgdGhyb3VnaG91dCB0aGUgZGF5LCBidXQgdW5saWtlIG91ciBtb29uIHRoZSBsb2NhdGlvbiBpbiB0aGUgc2t5IHdvdWxkIHJlbWFpbiBjb25zdGFudC4gKFRoZSBpbmRpdmlkdWFsIHJvY2tzIGluIHRoZSByaW5nIG1heSBtb3ZlIHJlbGF0aXZlIHRvIHlvdSwgYnV0IHlvdSB3b3VsZCBub3QgbGlrZWx5IG5vdGljZSB3aXRob3V0IGEgdGVsZXNjb3BlLikKVG8gYW55IGhhaXJzdHlsaXN0cyBvdXQgdGhlcmU6IHlvdSBhcmUgYW4gYXJ0aXN0IGFuZCBhIGNyYWZ0c21lbi4gRG8gbm90IHNlbGwgeW91cnNlbGYgc2hvcnQuIFlvdSBhcmUgd29ydGggdGhlIHRpbWUgeW91IGNoYXJnZSBhbmQgdGhlIG1vcmUgZXhwZXJpZW5jZSB5b3UgaGF2ZSBhbmQgYW5kIHRoZSBtb3JlIGVkdWNhdGlvbiB5b3UgaW52ZXN0LCB5b3Ugc2hvdWxkIGFuZCBoYXZlIGV2ZXJ5IHJpZ2h0IHRvIHJhaXNlIHlvdXIgcHJpY2VzLiBHb29kIHdvcmsgaXMgbmV2ZXIgY2hlYXAsIHNvIGRvbnQgbGV0IHlvdXJzZWxmIGJlIGNoZWFwLiAKQmUgYXdhcmUsIGZpcmUgY2FuIGhhcHBlbiBhbnl3aGVyZSwgd2FzIGNyZWF0ZWQgYnkgdGhlIE5hdGlvbmFsIEZpcmUgUHJvdGVjdGlvbiBBc3NvY2lhdGlvbiBhbmQgYWltcyB0byBlZHVjYXRlIHJlc2lkZW50cyBvbiB0aGUgdGhyZWUgYmFzaWMgYnV0IGltcGVyYXRpdmUgc3RlcHMgbmVlZGVkIHRvIHJlZHVjZSB0aGUgbGlrZWxpaG9vZCBvZiBmaXJlICAgYW5kIHRlYWNoIHRoZW0gd2hhdCB0byBkbyBpZiBhIGZpcmUgc2hvdWxkIG9jY3VyLiAKTWFrZSBvbmx5IGZpbmUgdHVuaW5nIHRvIHlvdXIgbG9va3MuIApIYXBweSBIdW50aW5nIS4gClNvIG11Y2ggZm9yIEFBQSBkZXZlbG9wbWVudC4gClNoZSBkaXNjdXNzZWQgb25lIGVwaXNvZGUgaW4gZGV0YWlsOiBhbiBpbmNpZGVudCBmcm9tIHR3byBkZWNhZGVzIGFnbyBpbiB3aGljaCBzaGUgc2FpZCBzaGUgd2FzIGFza2VkIHRvIG1lZXQgV2VpbnN0ZWluIGluIGhpcyBob3RlbCByb29tLiAKMyBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28uIApJZiB5b3UgZ290IGdhbWUsIHNvbWV0aW1lcyB0aGUgZ2lybHMgd2lsbCBtZWV0IHlvdSB3aGVuIHRoZXkgYXJlbiB3b3JraW5nLiBJIGhhdmUgbmV2ZXIgYmVlbiBhYmxlIHRvIHB1bGwgYSB3aGlza2V5IGdpcmwuLiAKTXkgdGFiYnkgZ2lybCBpcyBzd2VldCBhbmQgdmVyeSB2b2NhbC4gVGhlcmUgc29tZSBiZW5nYWwgYmxvb2QgaW4gaGVyIHdoaWNoIGlzIHdoZXJlIGhlciBleHRyZW1lbHkgdm9jYWwgdHJhaXQgY29tZXMgZnJvbSwgYXMgd2VsbCBhcyBoZXIgcHJldHR5IGJpZyBwcmV5IGRyaXZlIGFuZCB3YXRlciBvYnNlc3Npb24uIFNoZSBhY3R1YWxseSBsZWFzaCB0cmFpbmVkIGxvbC4gClNoZSBoYXMgd29ya2VkIHdpdGggTkhTIGNsaWVudHMgYW5kIGNvbW11bml0eSBwcm9qZWN0cyBiZW5lZmljaWFyaWVzLiBTb21lIG9mIHdob20gd2l0aCBzZXZlcmUgaGVhbHRoIHByb2JsZW1zLiAKT2ZmaWNpYWxseSBpdCBwZWFrZWQgYXQgMy4pIChGdWxsIEFuc3dlcikuIApGb2xsb3cgQ29tcGFueSBQcm90b2NvbCBNYW55IGNvbXBhbmllcyBoYXZlIHNwZWNpZmljIHBvbGljaWVzIGFib3V0IGhvdyBmb29kIGJyZWFrcyBhcmUgdG8gYmUgdGFrZW4uIFNvbWUgYnVzaW5lc3NlcyBwcmVmZXIgdGhhdCBlbXBsb3llZXMgZWF0IG9ubHkgaW4gYSBjb21wYW55IGJyZWFrIHJvb20sIHdoaWxlIG90aGVycyBhcmUgY29tZm9ydGFibGUgd2l0aCBkZXNrIHNuYWNraW5nIGFuZCBkaW5pbmcgaWYgdGhlIGZvb2QgaXMgcmVsYXRpdmVseSBlYXN5IHRvIGhhbmRsZS4gU3RpbGwgb3RoZXIgY29tcGFuaWVzIHdhbnQgZW1wbG95ZWVzIHRvIHVzZSBkZXNpZ25hdGVkIGx1bmNoIGhvdXJzIGFuZCBwcmVmZXIgbm8gZm9vZCBhdCB3b3JrIHN0YXRpb25zLiAKVGhlIHN1biBzaGluZXMgYnJpZ2h0bHkgb24gdGhlIGR1bmVzIGFzIHRoZSBsYXJnZSBtYXNzIG9mIHBlb3BsZSB2b3lhZ2Ugb3V0LCB0aGUgTWV1cmlldCBGYXJzZWVyIGxlYWRpbmcgdGhlIHBhdGguLiAKRm9yIHNvbWUgcGVvcGxlLCB0b3BpY2FsIG9pbnRtZW50cyBsaWtlIGJlbnpveWwgcGVyb3hpZGUgYXJlIGFsbCB0aGF0J3MgbmVlZGVkIHRvIGdldCByaWQgb2YgdGhlIHByb2JsZW0uIAooNjAgbWludXRlcykgVGhpcyBtYXNrIGNvbWJpbmVzIHBhcGF5YSwgY2l0cnVzLCBncmVlbiB0ZWEgYW5kIGdlcmFuaXVtIHRvIGJyaWdodGVuIGR1bGwgY29tcGxleGlvbnMuIFRoZXNlIG1vaXN1cml6aW5nIGFudGlveGlkYW50cyB3aWxsIGxlYXZlIHRoZSBza2luIGRld3ksIHN1cHBsZSBhbmQgeW91bmdlciBsb29raW5nLiBHcmVhdCBmb3IgYWxsIHNraW4gdHlwZXMhCklmIHNvbWVvbmUgaXMgc28gc2V4dWFsbHkgb3IgZ2VuZXJhbGx5IGluYXBwcm9wcmlhdGUgdGhhdCB0aGV5IG1ha2UgZnVja2luZyBldmVyeW9uZSB1bmNvbWZvcnRhYmxlIGJ5IHdoYXQgdGhleSBzYXkgYW5kIGRvLCB0aGVuIG5vLCB0aGV5IHNob3VsZG4gaGF2ZSBhIGpvYi4gQW5kIGlmIHRoZXkgY2FuIGV2ZW4gZm9sbG93IHNpbXBsZSBpbnN0cnVjdGlvbnMgb3IgY29tcGxldGUgc29tZXRoaW5nIG9uIHRoZWlyIG93biB0aGV5IHNob3VsZG4gaGF2ZSBhIGpvYiBlaXRoZXIuIFdoZW4gdGhhdCBoYXBwZW5zIGl0IGxpa2Ugd2hlbiBhIDYgeWVhciBvbGQgImhlbHBzIiB5b3UgZG8gc29tZXRoaW5nLiAKIkFuZCBJIGd1ZXNzIEkgaGF2ZSBhIHZlcnkgZGlmZmVyZW50IG1hcmtldCBpbiB0aGUgU3RhdGVzIHRoYW4gYW55d2hlcmUgZWxzZSBpbiB0aGUgd29ybGQuIFRoZSByZXN0IG9mIHRoZSB3b3JsZCwgdGhhdCBzb25nJ3Mgbm90IHRoZSBoaWdobGlnaHQgb2YgdGhlIHNob3cuIApIb3VzZSB3YXMgc28gZnJvemVuIHNvbGlkIGZyb20gdGhlIGZ1cm5hY2UgcGlsb3QgZ29pbmcgb3V0IHRoYXQgdGhlIHRvaWxldCBzaGF0dGVyZWQuIFRoZXJlIGFyZSBsZWFrcyBmcm9tIGluc2lkZSB0aGUgd2FsbHMgd2UgZG9uJ3Qga25vdyB3aGVyZSB0aGV5J3JlIGNvbWluZyBmcm9tLgpJbiB0aGUgZ2VuZXJhdGlvbnMgc2luY2UgdGhlIGludmFzaW9uIGZld2VyIG1hY2hpbmVzIHdvcmsgYXMgbm8gb25lIGhhcyB0aGUga25vd2xlZGdlIHRvIHJlcGFpciBhbnl0aGluZywgbm9uZSBvZiB0aGUgc3BhY2VzaGlwcyBPcnRoaXMgZGVzaWduZWQgcmVtYWluIGFuZCBubyBvbmUgY2FuIGJ1aWxkIGFueSBuZXcgb25lcywgbWVhbmluZyBubyBtb3JlIEthbGthcnMgY2FuIGNvbWUgdG8gRWFydGggYnV0IG5laXRoZXIgY2FuIHRoZXkgbGVhdmUuLiAKVGhlIHN0cnVjdHVyYWwgY2hhbmdlcyBhc3NvY2lhdGVkIHdpdGggZXhlcmNpc2UgYXJlIHJlZmxlY3RlZCBpbiBpbXByb3ZlbWVudHMgaW4gc3luYXB0aWMgcGxhc3RpY2l0eSBpbiByb2RlbnRzIHRoYXQgcnVuLiBMb25nIHRlcm0gcG90ZW50aWF0aW9uIChMVFApIHdhcyBlbmhhbmNlZCBpbiBoaXBwb2NhbXBhbCB0aXNzdWUgc2xpY2VzIGluIHRoZSBkZW50YXRlIGd5cnVzIG9mIHJ1bm5pbmcgdmVyc3VzIHNlZGVudGFyeSBtaWNlIFs2M10gYW5kIGluIHZpdm8gaW4gcmF0cyB0aGF0IGhhZCBiZWVuIGhvdXNlZCB3aXRoIGEgcnVubmluZyB3aGVlbCBbNjRdIG9yIGdpdmVuIGZvcmNlZCB0cmVhZG1pbGwgZXhlcmNpc2UgWzMyXS4gVGhpcyBjaGFuZ2UgaW4gc3luYXB0aWMgcGxhc3RpY2l0eSBzZWVtcyB0byBiZSBzcGVjaWZpYyBmb3IgdGhlIGRlbnRhdGUgZ3lydXMsIGluZGljYXRpbmcgdGhhdCBuZXVyb2dlbmVzaXMgbWlnaHQgYmUgaW1wb3J0YW50IFszMF0uIEluZGVlZCwgYWx0aG91Z2ggdGhlIG5ldyBjZWxscyBhcmUgYSBzbWFsbCBwZXJjZW50YWdlIG9mIHRoZSBncmFudWxlIGNlbGwgbGF5ZXIsIGluZGl2aWR1YWwgbmV3IG5ldXJvbnMgaGF2ZSBhIHRyYW5zaWVudCBpbmNyZWFzZSBpbiBMVFAgYW1wbGl0dWRlIGFuZCBhIGRlY3JlYXNlZCBpbmR1Y3Rpb24gdGhyZXNob2xkIFs2NSw2Nl0uIEEgcHJvcG9zZWQgbWVjaGFuaXNtIGlzIGluY3JlYXNlZCBleHByZXNzaW9uIG9mIE4gbWV0aHlsIEQgYXNwYXJ0aWMgYWNpZCAoTk1EQSkgTlIyQiByZWNlcHRvcnMgaW4gbmV3IG5ldXJvbnMgWzY2XS4gVGh1cywgYW4gZXhlcmNpc2UgaW5kdWNlZCAzIDQgZm9sZCBpbmNyZWFzZSBpbiBoaWdobHkgcGxhc3RpYyBjZWxscyBpbiB0aGUgZGVudGF0ZSBneXJ1cyBtaWdodCBleHBsYWluLCBpbiBwYXJ0LCB0aGUgcHJvZm91bmQgZWZmZWN0IG9mIHBoeXNpY2FsIGFjdGl2aXR5IG9uIG1lbW9yeSBmdW5jdGlvbi4KU28gdGhlIG1vcmUgb2YgaXQgdGhlcmUgaXMsIHRoZSBsZXNzIG9mIGl0IHdpbGwgYmUgbWFkZSBlbHNld2hlcmUuIFRoaXMgY3JlYXRlcyBhcmVhcyB3aGVyZSB0aGVyZSBpcyBhIGxvdCBvZiAiZmluZ2VyIHByb3RlaW4iIGFuZCBhcmVhcyB3aGVyZSB0aGVyZSBpcyBub25lLiAKTXkgcGVyc29uYWwgb3BpbmlvbiBpcyB0aGUgcG93ZXIgbmVlZHMgdG8gYmUgMjAwIDIxMGJocC4gTXkgY2FyIHByb3ZlcyB0aGlzIGlzIHBvc3NpYmxlIHdpdGggdGhlIHNhbWUgZ2VhcmJveCwgYXhsZSxicmFrZXMgZXRjIGFzIGkgdXNlZCBpbiBjdXAuIEkga25vdyBNciBDcm9tYmllIHRoaW5rcyBhbG9uZyB0aGUgc2FtZSBsaW5lcy4gCk15IGNsaWVudCBmZWVscyB0aGF0IGFsbCB5b3VyIGJvdW5jZXJzIGFyZSBsYWNraW5nIG1hbmhvb2QgdG8gYWNjZXB0IG9wZW4gcHVibGljIGNoYWxsZW5nZXMuIApXaXRoIFBva2VyIFN0dWRpbywgeW91IGNhbiBlbnRlciBhbnkgaGFuZCB5b3UgcGxheWVkIGF0IGxpdmUgdGFibGVzLgpUaGUgZmlsaW5nIHNheXMgSnVkZCdzIHNleHVhbCBoYXJhc3NtZW50IGFsbGVnYXRpb25zLCBldmVuIGlmIHRydWUsIGZhbGwgZmFyIHNob3J0IG9mIGJlaW5nICJ1bndlbGNvbWUgYW5kIHBlcnZhc2l2ZSBvciBzZXZlcmUsIiBhcyB0aGUgbGF3IHJlcXVpcmVzIGZvciBhIGZpbmRpbmcgb24gaGVyIGJlaGFsZi4KSW4gbW9zdCBjb3VudHJpZXMgc3VydmV5ZWQsIG1ham9yaXRpZXMgb2YgTXVzbGltIHdvbWVuIGFzIHdlbGwgYXMgbWVuIGFncmVlIHRoYXQgYSB3aWZlIGlzIGFsd2F5cyBvYmxpZ2VkIHRvIG9iZXkgaGVyIGh1c2JhbmQuIEluZGVlZCwgbW9yZSB0aGFuIG5pbmUgaW4gdGVuIE11c2xpbXMgaW4gSXJhcSAoOTIlKSwgTW9yb2NjbyAoOTIlKSwgVHVuaXNpYSAoOTMlKSwgSW5kb25lc2lhICg5MyUpLCBBZmdoYW5pc3RhbiAoOTQlKSBhbmQgTWFsYXlzaWEgKDk2JSkgZXhwcmVzcyB0aGlzIHZpZXcuCjMxIHllYXJzIGFmdGVyIHRoaXMgY2FtZSB0aGUgIkdvZCIgY2hhbmdlLCB3aGljaCBCZWxsYW15IGNlcnRhaW5seSB3b3VsZCBoYXZlIG9iamVjdGVkIHRvOgpJbiBmYWN0IHlvdSBldmVuIHNheWluZyB0aGF0IHBlb3BsZSBjYW4gaGF2ZSBhIGdvb2QgZGlldCBmb3IgbWVudGFsIGhlYWx0aCB1bmxlc3MgdGhleSBzdHVkeSBmb3IgOCB5ZWFycyBpcyBjb21wbGV0ZSBidWxsc2hpdCBhbmQgb25lIGh1bmRyZWQgcGVyY2VudCB3cm9uZywgbWlzbGVhZGluZywgdGVycmlibHkgd29yZGVkLCBhbmQgZGlzcmVzcGVjdGZ1bC4uIApUaGV5IHNob3dlZCBoaW0gdGhlIG9wZW4gYW5kIG5lYXJseSBlbXB0eSBjYXNoIGRyYXdlciwgZGVzY3JpYmVkIHRoZSBsaWdodCBjb2xvcmVkLCBvbGQgbW9kZWwgcGlja3VwIHRoZXkgaGFkIHNlZW4uIApJIGFsd2F5cyBkYXRlZCBTVEVNIGd1eXMsIGV4Y2VwdCBvbmUgd2hvIHdhcyBhbiBhcmNoaXRlY3QuIFRoZXkgd2VyZSBhdCBhYm91dCBteSBpbnRlbGxpZ2VuY2Ugb3IgaGlnaGVyIGluIG51bWVyYWN5LCBzcGF0aWFsIHNraWxscyBldGMsIGJ1dCBub3Qgc28gbXVjaCBpbiB0aGUgdmVyYmFsIHNpZGUuCkkgZmVlbCB5b3UuIApXYXIgdGlsbCBhdCBsZWFzdCAyMDE4PyBJZiB3ZSBjb250aW51ZSB0aGUgd2FycyBmb3IgdGhhdCBsb25nIHRoZW4gbWlsbGlvbnMgb2YgcGVvcGxlLCBtaWxsaW9ucyBvZiBpbm5vY2VudCBjaXZpbGlhbnMgY2hpbGRyZW4sIG9sZCBwZW9wbGUsIHBlb3BsZSB3aG8gd2FudCBub3RoaW5nIHRvIGRvIHdpdGggd2FyIGFuZCBkZWF0aCAgd2lsbCBiZSBkZWFkIGFuZCBtYW55IHRpbWVzIHRoYXQgbnVtYmVyIHNvIHdvdW5kZWQgb3Igc28gcHN5Y2hvbG9naWNhbGx5IHNjYXJyZWQgZnJvbSB0aGUgd2FyIHRoYXQgdGhleSB3aWxsIG5ldmVyIGJlIGZ1bGx5IGFibGUgdG8gZnVuY3Rpb24gYWdhaW4uIApUaGF0IGJlaW5nIHNhaWQsIEkgYSB2ZXJ5IGdyZWVkeSBwbGF5ZXIuIApJIGRlbGliZXJhdGVseSB0cmllZCB0byBtYWtlIHRoZSB3aG9sZSB0aGluZyBmdW4gYW5kIGp1c3Qgc29ydCBvZiBhIGJ1ZGR5IGhhbmcsIGFuZCBnZXQgYSByZWNvcmQgb3V0IG9mIGl0IGFzIGEgYnlwcm9kdWN0LiBBbmQgaXQgd29ya2VkLiAKQmlsbCBXYWxrZXIsIHRoZSBtaW5pc3RlciBvZiBnb3Zlcm5tZW50IGFuZCBjb25zdW1lciBzZXJ2aWNlcywgc2FpZCBoZSBpcyBzZWVraW5nIHB1YmxpYyBpbnB1dCB0byBtb2Rlcm5pemUgbGF3cyBnb3Zlcm5pbmcgcmVhbCBlc3RhdGUgcHJvZmVzc2lvbmFscywgdG8gcmVkdWNlIHJlZCB0YXBlIGFuZCBzdHJlbmd0aGVuIHRyYW5zcGFyZW5jeSBhbmQgY29uc3VtZXIgcHJvdGVjdGlvbi4KRm9yIHNvbWVvbmUgbGlrZSBtZSBkb2luZyBjbGVhbiBidWxraW5nIGlzIGp1c3QgdG9vIG11Y2ggb2YgdGhlIGhhc3NsZS4gSSB3b3VsZCBzdWdnZXN0IHRvIGdvIGZvciByZWd1bGFyLCBsZXNzIG92ZXIgdGhpbmtpbmcuIFBvaW50IGlzIG5vdCB0b28gdGhpbmsgdG9vIG11Y2guIEtub3cgc29tZSBiYXNpYyBmb29kcyB5b3Ugc2hvdWxkIGNvbnN1bWUgbW9yZSBhbmQgdGhhdHMgaXQuIEFsd2F5cyBzZWUgaG93IHlvdSBmZWVsIGFmdGVyIG9uZSBvciBhbm90aGVyIGZvb2QgYW5kIGRvbiBlYXQgYW55bW9yZSBpZiBpdCBtYWtlcyB5b3UgZmVlbCBsYXp5IG9yIHRpcmVkLgpSZWNlaXZlcyB0aHJlZSBob2xlIGNhcmRzIGFuZCBtdXN0IGRpc2NhcmQgb25lIGJlZm9yZSB0aGUgdHVybiBjYXJkIGlzCkNvbnRyYXN0IGlzIGNlcnRhaW5seSB0aGVyZSAoIlRoZXJlIGFyZSBkYXJrIHNoYWRvd3Mgb24gdGhlIGVhcnRoLCBidXQgaXRzIGxpZ2h0cyBhcmUgc3Ryb25nZXIgaW4gdGhlIGNvbnRyYXN0LiIgQ2hhcmxlcyBEaWNrZW5zLCBUaGUgUGlja3dpY2sgUGFwZXJzKSwgZXNwZWNpYWxseSBpbiB0aGUgY29ybmVyIGJpdHMsIHdoZXJlIG9uIGNsb3NlciBpbnNwZWN0aW9uIHRoZSBibGFja25lc3MgaXMgcmVhbGx5IG1vcmUgd2hpdGUgdGhhbiBibGFjay4gCkkgaG9wZSB0aGV5IGRvbid0LiBJdCB3YXMgYW4gZWdyZWdpb3VzIGVycm9yLiAyIHJlZnMgc2F3IGl0IGZyb250IGFuZCBjZW50ZXIgYW5kIGRpZG4ndCBjYWxsIGFueXRoaW5nLiBJJ20gc3RpbGwgc2hvY2tlZCBhdCB0aGUgd2hvbGUgdGhpbmcgdG8gYmUgaG9uZXN0LiBJIHN0b29kIHVwIGZvciB0aGUgTkZMIHdpdGggc28gbWFueSBvZiBteSBwZWVycyBkdXJpbmcgdGhlIHdob2xlIGtuZWVsaW5nIHRoaW5nIGFuZCBJIGhhdmUgZ2l2ZW4gaXQgbXkgdGltZSwgbW9uZXksIGFuZCBwYXRpZW5jZS4gQnV0IEknbSBub3QgZXZlbiBnb25uYSB3YXRjaCB0aGUgU3VwZXIgQm93bC4gSSdtIGFsd2F5cyBnb25uYSBiZSBhIHNhaW50cyBmYW4uIEJ1dCBJIGp1c3QgY2FuJ3QgZmVlbCBsaWtlIHN1cHBvcnRpbmcgdGhlIE5GTCBpbiBhbnkgd2F5IHJpZ2h0IG5vdy4gTWF5YmUgSSdsbCBmZWVsIGJldHRlciBuZXh0IHNlYXNvbi4gTWF5YmUgSSdsbCBuZXZlciBmZWVsIGJldHRlci4gQnV0IGxpZmUgZ29lcyBvbiwgSSdsbCBmaW5kIGEgd2F5IHRvIG1ha2UgcGVhY2Ugd2l0aCB0aGlzLCBldmVuIGlmIGl0J3MganVzdCBnZXR0aW5nIGluIGEgRG9ubnkgYnJvb2sgd2l0aCBzb21lIHJhbXMgZmFuIGRlZ2VucyB0YWxraW5nIHNoaXRlIGFib3V0IHRoZWlyICJ3aW4iLgpNYWduYWJlbGxhIHUKVGhlIEJyYWR5IEJ1bmNoIENocmlzdG9waGVyIEtuaWdodCBpcyBzZWVuIGFzIFBldGVyIEJyYWR5IGFuZCBhdCByaWdodCwgYXR0ZW5kaW5nIHRoZSBEYXZpZCBULiBKb25lcyBNZW1vcmlhbCAvIE1vbmtlZXMgQ29udmVudGlvbiBvbiBNYXJjaCAyLCAyMDEzIGluIEVhc3QgUnV0aGVyZm9yZCwgTmV3IEplcnNleS4gCkRpc2NsYWltZXI6IEV2ZXJ5dGhpbmcgSSBhYm91dCB0byBzYXkgc2hvdWxkIGJlIHJlYWQgYXMgb25lIHBlcnNvbiBhbmQgaGlzIGV4cGVyaWVuY2UgaW4gb25lIHN0b3JlIG92ZXIgdGhlIGNvdXJzZSBvZiB0d28geWVhcnMuIFlvdXIgZXhwZXJpZW5jZSBpbiB0aGUgcGFzdCwgcHJlc2VudCwgb3IgZnV0dXJlIG1heSBub3QgcmVmbGVjdCBtaW5lLiAKUmVwZWF0Li4gClRoZSBzZWNvbmQgYmVkcm9vbSBoYXMgYSBGdWxsIHNpemVkIGJlZCB3aXRoIHN1cGVyYiBvY2VhbiB2aWV3IHRvIHdha2UgdXAgdG9vLiBUaGUgdGhpcmQgYmVkcm9vbSBoYXMgYSB0d2luIGFuZCBmdWxsIHNpemUgYnVua2JlZCBmYWNpbmcgZ29yZ2VvdXMgUmluY29uIGhpbGxzLiBXZSBwcm92aWRlIHF1YWxpdHkgdG93ZWxzLCBiZWFjaCB0b3dlbHMsIGxpbmVucyBhbmQgcGlsbG93cywgaGFpciBkcnllciwgaXJvbmluZyBib2FyZC4uIAoiSm9obm55IERvYyIgRG91Z2hlcnR5LlNvdXJjZXMgc2FpZCB0aGUgaW52ZXN0aWdhdGlvbiBpcyBhIGpvaW50IEZCSS9JUlMgcHJvYmUgaW50byBhbGxlZ2VkIG1pc3VzZSBvZiB1bmlvbiBmdW5kcyBhbmQgaGFzIGJlZW4gdW5kZXJ3YXkgZm9yIG1vcmUgdGhhbiB0d28geWVhcnMuIApCZXZvciBkaWUgQXBva2FseXBzZSBnZXNjaGllaHQgamVkb2NoIGRhcyBjaHJpc3RsaWNoZSBWb2xrIHZvbiBBbWVyaWthIHVuZCBkZXIgbXVzbGltaXNjaGVuIFdlbHQsIGRpZSBhdWNoIGJlaWRlIGZvbGd0IGRlbiBhbHRlbiB1bmQgbmV1ZW4gVGVzdGFtZW50cyBoYWJlbiBkYXMgUmVjaHQgenUgd2lzc2VuLCB3aWUgamVkZXIgR2VsZWhydGUgZGVyIEJpYmVsIGF1ZiBkZXIgRXJkZSBoZXV0ZSwgZGFzcyBkYXMgbmV1ZSBUZXN0YW1lbnQgd3VyZGUgaXN0IGdlc2NocmllYmVuIGluIEdyaWVjaGlzY2ggdm9uIEdyaWVjaGVuLCBkZXIgU2NobGFuZ2UgWmllZ2UgTHdlIFRpZXIsIFRldWZlbCwgQW50aSBDaHJpc3R1cyBkZXIgT2ZmZW5iYXJ1bmcgZWluIFBsYWdpYXQgdm9uIGRlciBteXRoaXNjaGVuIGdyaWVjaGlzY2hlbiBDaGltcmUsIHVuZCBKZXN1cyBPZmZlbmJhcnVuZ2VuIGZsaWVnZW4gbmFjaCB1bnRlbiB2b20gSGltbWVsIGF1ZiBzZWluZW0gZmxpZWdlbmRlbiBQZmVyZCwgQW50aSB6dSB0dGVuIENocmlzdHVzIGlzdCBlaW4gUGxhZ2lhdCBkZXMgZ3JpZWNoaXNjaGVuIE15dGhvcyB2b24gUHJpbnogQmVsbGVyb3Bob24gYXVmIHNlaW5lbSBmbGllZ2VuZGVuIFBmZXJkIFBlZ2FzdXMsIGRpZSBDaGltcmUgenUgdHRlbi4gTWVuc2NoZW4gc2luZCBudW4gbnVrbGVhcmUgV1dJSUkgYmVyIGRhcyBFaW50cmVmZmVuIGVpbmVzIGFudGlrZW4gZ3JpZWNoaXNjaGVuIFplaWNoZW50cmlja2ZpZ3VyZW4gd2llIEVsbW8gYnJpbmdlbiBJaG5lbiBkaWUgV2VsdCB6dSByZXR0ZW4sIEFwb2thbHlwc2UsIGF1c2xzZW4uIEFsbGUgTWVuc2NoZW4gaGFiZW4genUgdHVuLCB1bSBld2lnIGJyaW5nZW4gRnJpZWRlbiBpbiBkZXIgV2VsdCBhdWYgZGllIEVyZGUgaXN0IGZyIDIwMCBQZXJzb25lbiBiZWkgZGVuIFZlcmVpbnRlbiBOYXRpb25lbiB6dXp1c3RpbW1lbiBoZXV0ZSBkYXVlcmhhZnQgYXVmaHJlbiB6dSBrbXBmZW4uIAoiSSB0aGluayBpdCByZWFsbHkgZGlkIGFsbG93IHlvdSB0byBiZWNvbWUgY3JhemlseSBjcmVhdGl2ZSBpbiB5b3VyIG93biByb29tLCBsaWtlLCBmcmVha2luZyBvdXQgeW91ciBmcmllbmRzLCIgc2hlIHNhaWQuIFRoYXQgc2VlbXMgbGlrZSBhIHByZWN1cnNvciB0byBBd2t3YWZpbmEncyBjcmVhdGl2ZSB2aWJlLiBTaGUncyBsaWtlIHlvdXIgZnVubmllc3QgYW5kIG1vc3QgYnJpbGxpYW50IGZyaWVuZCBncm93aW5nIHVwLCB0aGUgZ2lybCBhdCB0aGUgc2xlZXBvdmVyIHdob3NlIGRpcnR5LCBkYXJpbmcgam9rZXMgbWFkZSB5b3UgZ2lkZHkgd2l0aCBsYXVnaHRlci4KSXQncyBhIG11bHRpZ2VuZXJhdGlvbmFsLCBpbnRlcm5hdGlvbmFsIGdyb3VwIHdvcmtpbmcgdG9nZXRoZXIgYXMgZW50cmVwcmVuZXVycywgaW52ZXN0b3JzIGFuZCBtZW50b3JzIHRvIGNyZWF0ZSB0aGUgYnVzaW5lc3Mgc3RhcnMgb2YgdG9tb3Jyb3cuLiAKU3VyIGxlIGNvbW1lcmNlIGp1dGV1eCBkZSBUaGllcnJ5IENhc2Fub3ZhcyByZWdlbmVyZQpUaGlzIGd1eSBub3Qgb25seSBjb21taXR0ZWQgYSB2aW9sYXRpbmcgYWN0LCBoZSBhbHNvIGluc2VydGVkIGVuZXJneSBjb3JkcyB0aGF0IGhhdmUgcmVtYWluZWQgdXAgdG8gYWR1bHRob29kLiBJJ20gdmVyeSByZWxpZXZlZCBhbmQgaGVhcnRlbmVkIHRvIHNlZSB5b3UgZGVjbGFyZSBzb3ZlcmVpZ250eSBhbmQgcHVsbCBiYWNrIHRvIHlvdXIgZW5lcmd5IGZpZWxkIHdoYXQgdGhpcyBjcmVlcCBjYXJlbGVzc2x5IGFuZCB0aG91Z2h0bGVzc2x5IHRvb2sgZnJvbSB5b3UuIFlvdSBhcmUgc29vb29vIHN0cm9uZyBhbmQgc3VjaCBhIGZpZXJjZSBhZHZvY2F0ZSBmb3IgbGlnaHQuIApIZSBlbmpveWVkIGFuZCBrZXB0IGJ1c3kgcmVub3ZhdGluZywgYnVpbGRpbmcsIGhlbHBpbmcgb3RoZXJzLCBtYWtpbmcgd2luZSwgcGxheWluZyBwb2tlciwgc3F1YXJlIGFuZCByb3VuZCBkYW5jaW5nIGFuZCBzbm93bW9iaWxpbmcuIApSZWxhdGlvbnNoaXBzIGJldHdlZW4gaHlwb3ZpdGFtaW5vc2lzIEQgYW5kIG9iZXNpdHksIGRlc2NyaWJlZCBieSBib3RoIEJNSSBhbmQgd2Fpc3QgY2lyY3VtZmVyZW5jZSwgaGF2ZSBiZWVuIG1lbnRpb25lZC4KR2FueiBuZXU6IEVzIGdpYnQgZWluIEZlaWVyYWJlbmQgUHJvZ3JhbW0gbWl0IFlvZ2EsIFNoaWF0c3UsIFRhbnp0ZWUsIE1lZGl0YXRpb24sIFNpbmdlbiB1bmQgQmV3dXNzdHNlaW5zL0JpbGR1bmdzIFZvcnRyZ2UuClRoZW4gb2YgY291cnNlIGl0IGdpdmVzIGV2ZXJ5b25lIGEgbW9yZSBhcHBlYWxpbmcgZmVlbCB0byB0aGUgZXZlbmluZywgZXZlbiBpZiBhbGwgdGhlIHJpbmdpbmcgZnJvbSBzbG90IG1hY2hpbmVzIGFuZCBwbGF5ZXJzIHNjcmVhbWluZyBpc24ndCB0YWtpbmcgcGxhY2UuLiAKTXkgYmVzdCBmcmllbmQgaXMgZXggbW9ybW9uIChvbmUgb2YgdGhlIHJlYXNvbnMgSSBoZXJlKSwgc2hlIFNUSUxMIGJlbGlldmVzIHRoYXQgb3JhbCBzZXggaXMgc2luZnVsLiAKQ2hhdCB3aXRoIHRob3VzYW5kcyBvZiBzaW5nbGVzIG9ubGluZSAgIGNvbXBsZXRlbHkgZm9yIGZyZWUuQ2hhdCB3aXRoIGxvY2FsIHBlb3BsZSBuZWFyIHlvdSEgVGhpcyBwYWdlIGxpc3RzIGFsbCB0aGUgcHVibGljIGNoYXQgcm9vbXMgdGhhdCB5b3UgY2FuIGVudGVyLiBNYXR1cml0eSBpcyBvZiB1dG1vc3QgaW1wb3J0YW5jZSB3aGVuIHVzaW5nIG91ciBmcmVlIHNpbmdsZXMgY2hhdCByb29tLiBDYWxsZXJzIHRvIHRoZSBjaGF0bGluZSBjYW4gbWVzc2FnZSBlYWNoIG90aGVyIG9yIHNraXAgaWYgbm90IGludGVyZXN0ZWQsIHNpbWlsYXIgdG8gaG93IHdvcmsgYnV0IG92ZXIgdGhlIHBob25lLiAKVGhlIHBheSBkZWNpc2lvbiB3YXMgaW5jbHVkZWQgaW4gYW4gU0VDIGZpbGluZyBhaGVhZCBvZiBhbiBhbm51YWwgbWVldGluZyBzbGF0ZWQgZm9yIFRodXJzZGF5IHRoYXQgd2lsbCBsZXQgaW52ZXN0b3JzIHZvdGUgb24gSWdlcidzIGNvbXBlbnNhdGlvbiBvbiBhbiBhZHZpc29yeSBiYXNpcy4KRnJhbmsgWW9kZXIgYW5kIGxpdCAgU3VuZGF5IG1vcm5pbmcsIEp1bmUgMjEsIGF0IDEwIHRpZSBzb24sIE1yLiBBbmQgTXJzLiAKSW4gMjAxNSwgdGhyb3VnaCBTdGVsbCBTb3VuZGNsb3VkLCB0aGUgU2VhdHRsZSBiYXNlZCBlbGVjdHJvbmljIG11c2ljIGR1byBPREVTWkEsIGhhZCBiZWVuIGV4cG9zZWQgdG8gaGlzIG11c2ljIGFuZCBlbmpveWVkIGl0LiAKMSB0aHJvdWdoIEZyaWRheSwgTWF5IDMxLiBBIHNwZWNpYWwgZmVhdHVyZSBvZiBMQU4hIGlzIHRoZSBTcHJpbmcgb2YgTGF0aW5vIEFydCAoU09MQSksIGFuIG91dGdyb3d0aCBvZiBwYXJ0bmVyc2hpcHMgd2l0aCBhcmVhIGFydHMgb3JnYW5pemF0aW9ucyBhbmQgYXJ0aXN0cy4uIApTbyBwcm91ZCBvZiB5b3UgYW5kIGhhcHB5IGZvciB5b3UuIFlvdSBhdCB0aGUgdmVyeSBiZWdpbm5pbmcgb2YgYSBmYWJ1bG91cyBhbmQgZnJlZSBsaWZlIHdoZXJlIHlvdSB3b24gYmUgc2hhbWVkIG9yIGd1aWx0ZWQgZm9yIGJlaGF2aW5nIGxpa2UgYSBub3JtYWwgMTggeWVhciBvbGQgaHVtYW4gYmVpbmcuIApJIHdvdWxkIGJlIGhhcHB5IHRvIGFuc3dlciBhbnkgb3RoZXIgcXVlc3Rpb25zIHlvdSBtYXkgaGF2ZS4gSWYgeW91IHdvbmRlcmluZyB3aGV0aGVyIG9yIG5vdCB5b3Ugc2hvdWxkIGFwcGx5OiBBcHBseSEgV2UgYmUgaGFwcHkgdG8gaGVhciBmcm9tIHlvdSA6KQpCdXQgZnJvbSBhIHByYWN0aWNhbCBzdGFuZHBvaW50LCBHTSBtYXkgaGF2ZSBubyBjaG9pY2UuIFNob3J0bHkgYmVmb3JlIEFtZXJpY2FuIEF4bGUgd29ya2VycyBzdHJ1Y2sgb24gRmViLiAyNiwgdGhlIHN1cHBsaWVyJ3MgZXhlY3V0aXZlcyBhc2tlZCBHTSB0byBhbGxvdyAyLDAwMCBvZiBpdHMgd29ya2VycyB0byB0cmFuc2ZlciB0byBHTSwgc2FpZCBhIHNvdXJjZSBmYW1pbGlhciB3aXRoIHRoZSB0YWxrcy4KV2hpbGUgaXQncyB0cnVlIHRoYXQgaXQgcmVhbGx5IGlzbid0IHdoYXQgeW91IGRvICJvbmNlIGluIGEgd2hpbGUiIHRoYXQgdXN1YWxseSBkZXRlcm1pbmVzIHlvdXIgdWx0aW1hdGUgaGVhbHRoIG9yIHN1Y2Nlc3MgaW4gbGlmZSAob2YgY291cnNlLCB0aGUgZGVmaW5pdGlvbiBvZiAib25jZSBpbiBhIHdoaWxlIiBpcyBhbm90aGVyIGludGVyZXN0aW5nIHRoaW5nIHRvIGNvbnNpZGVyKSBidXQgd2hhdCB5b3UgZG8gY29uc2lzdGVudGx5IHRoYXQgbWF0dGVycyBtb3N0dGhpcyBkb2VzIGhhdmUgaXRzIGV4Y2VwdGlvbnMuCldlaWdodCBnYWluIGFuZCBsb3NzIGFsc28gaGFzIGEgbWFqb3IgaW1wYWN0IG9uIGhvdyBza2luIGhvbGRzIHVwIG92ZXIgdGltZS4gQWNjb3JkaW5nIHRvIFByZXZlbnRpb24gbWFnYXppbmUsIHRoZSBhdmVyYWdlIGFkdWx0IHdvbWFuIGxvc2VzIDUgcG91bmRzICgyLjMga2lsb2dyYW1zKSBvZiBtdXNjbGUgYW5kIHJlcGxhY2VzIGl0IHdpdGggMTUgcG91bmRzICg2Ljgga2lsb2dyYW1zKSBvZiBmYXQgZXZlcnkgZGVjYWRlLiAKUGFydGllcyBhcmUgYW4gYXR0ZW1wdCB0byByZXZlcnNlIHRoYXQgc2hhbWUgYnkgY2VsZWJyYXRpbmcgZmVtYWxlbmVzcy4gR2V0IGl0LiAKTGUgYmxvYyBzYW5pdGFpcmUgZXN0IHNwYWNpZXV4LCBtb2Rlcm5lIGV0IGNoYXVmZiBhdSBjb3VycyBkZSBsJ2F2YW50IGV0IGFycmkgcmUgc2Fpc29uLiBJbCBvZmZyZSB0b3V0ZXMgbGVzIGZhY2lsaXQgcyBldCBsZSBuZXR0b3lhZ2Ugc2UgZmFpdCBhdSBtb2lucyB1bmUgZm9pcyBwYXIgam91ci4gTGVzIGRvdWNoZXMgZXQgbGVzIGxhdmFib3Mgb250IGRlIGwnZWF1IGZyb2lkZSBldCBjaGF1ZGUgcXVpIHNvbnQgY29tcHJpcyBkYW5zIGxlIHRhcmlmLiAKSWYgeW91IGhhdmUgYSBiYW5rIHJvbGwgb2YgYSBodW5kcmVkIGJ1Y2tzIHlvdSBkb24gd2FudCB0byBiZSBwbGF5aW5nIGluIGEgZ2FtZSB3aGVyZSB0aGUgbWluaW11bSBiZXQgaXMgZmlmdHkgb2YgaXQuIApCbGFzdCBmcm9tIHRoZSBwYXN0IHdoZW4gcG9rZXIgd2FzIGZhbnRhc3RpYwpFdmVuIHRob3VnaCAyMDE5IHdpbGwgbWFyayAzNSB5ZWFycyBzaW5jZSB0aGUgZHJvdWdodCwgdGhlIGltYWdlIG9mIGRpc3RlbmRlZCBiZWxsaWVzIGFuZCBkcnkgZ3Jhc3MgaXMgc3RpbGwgc3Ryb25nLi4gCiJJdCB3aWxsIGJlIGhhcmQgdG8gY29tZSBiYWNrIHRvIHZpc2l0IGFuZCBoZWxwIGhlciwiIEp1bGlhIHNhaWQsICJidXQgaWYgd2UgY29tZSBob21lIGZyb20gYnJlYWsgYW5kIHNoZSBoYXMgYSBmdW5kcmFpc2VyLCB3ZSdyZSBvYnZpb3VzbHkgZ29pbmcgdG8gYmUgdGhlcmUgZm9yIGhlbHAuIi4gCkhlIHdhcyB0aGUgYmVsb3ZlZCBmYXRoZXIgYW5kIGZhdGhlciBpbiBsYXcgb2YgU2hlcnJpIGFuZCBEb24gSGVucmljaCBvZiBOZXcgSGFtYnVyZywgUGF1bCBhbmQgRG9yaXMgQmVhbiBvZiBXYXRlcmxvbywgR2Vhbm5hIEJlYW4gQmF0ZXMgYW5kIEpheSBQYXJzb24gb2YgS2l0Y2hlbmVyLCBhbmQgU2NvdHQgQmVhbiBhbmQgTGFuYSBaaW5jb25lIG9mIEtpdGNoZW5lciBhbmQgV2F0ZXJsb28uIApGdWNrIG1hbiwgbW9uZXkgbWVzcyBldmVyeXRoaW5nLiAKWW91IHByb2JhYmx5IHBhaWQgS29yZWFuIHRheGVzLiBUaGUgVVMgYW5kIEtvcmVhIGhhdmUgYSB0cmVhdHkgcHJldmVudGluZyBkb3VibGUgdGF4YXRpb24gZm9yIHNvbWUgcGVyaW9kIG9mIHRpbWUgaWYgeW91IGFwcGx5IGZvciBpdAptaWRuaWdodCBjbHViIDIgY2hlYXRzIHBjIHlvdXR1YmUgZG93bmxvYWRlcgpDb2duaXRpdmUgYWJpbGl0aWVzIGRlY2xpbmUgYXMgcGFydCBvZiB0aGUgbm9ybWFsIGFnaW5nIHByb2Nlc3MuIFZhcmlvdXMgbm9uIHBoYXJtYWNvbG9naWNhbCBpbnRlcnZlbnRpb25zIGFyZSBiZWluZyBzdHVkaWVkIGluIGFuIGVmZm9ydCB0byBhbWVsaW9yYXRlIHRoaXMgY29nbml0aXZlIGRlY2xpbmUuIEEgcHJldmlvdXMgc3R1ZHkgaW4gb3VyIGxhYiBmb3VuZCB0aGF0IG9sZGVyIGFkdWx0cyB3aG8gcGxheWVkIGEgYnJhaW4gdHJhaW5pbmcgZ2FtZSBvciBhIHZpZGVvIHBva2VyIGdhbWUgc2hvd2VkIHNpbWlsYXIgY29nbml0aXZlIGdhaW5zLiAKR2VvcmdlIEhhcnJpc29uJ3Mgd2lkb3csIE9saXZpYSwgaXMgc3RpbGwgaW4gbW91cm5pbmcgZm9yIGhlciBodXNiYW5kLCB0aHJlZSB5ZWFycyBhZnRlciBoaXMgZGVhdGguIFNoZSB0ZWxscyBKYW4gTW9pciBob3cgc2hlIHJlbWVtYmVycyBoaW0KR2FoTWF0YXIgIDMgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnbwpTZXR0aW5nIGFzaWRlIGxlZ2FsaXR5LiBJZiB5b3UgbGl2ZSB5b3VyIGxpZmUgYmVpbmcgb2ZmZW5kZWQgYXQgZXZlcnl0aGluZyB5b3Ugd29udCBiZSBoYXBweS4gQW5kIEkgY2FudCBtYWtlIHlvdSBoYXBweS4gCklmIHlvdSBsb29rIGJhY2sgYXQgdGhlIG51bWJlciBvZiByYW5kb20gc2NyZWVuIG5hbWVzIHlvdSB3b3VsZCBzZWUgcG9wIHVwIGF0IHRoZSAyNS81MCsgZ2FtZXMgaW4gdGhlIGVhcmx5IDIwMDAgaXQgd291bGQgYmxvdyB5b3VyIG1pbmQgaG93IG1hbnkgd291bGQgY29tZSBpbiwgZHVtcCAyMCAzMGsgYW5kIGRpc2FwcGVhciBmb3JldmVyLiAKVExEUjogSGFzaCBpdCBvdXQuIFB1dCBpbiB0aGUgaGFyZCB3b3JrIGZvciB0aGUgaGFwcHkgY291cGxlIHlvdSB0aG91Z2h0IHlvdSB3ZXJlLiAKSWYgeW91IHdlcmUgYm9ybiBwZXJmZWN0bHkgY3VubmluZyBhbmQgcnV0aGxlc3MsIHlvdSBtYXkgYmUgYSBwc3ljaG9wYXRoLiAKSXQgd2lsbCBhbHNvIGhlbHAgeW91IGlzb2xhdGUgdGhlIGFtYXRldXIgcHJvLiBEb24gd29ycnkgdGhhdCB0aGV5IHdvbiBjYWxsIHRoZSByZXN1bHRpbmcgbGFyZ2VyIGJldHMgd2hlbiB5b3UgYmV0IDMvNCBwb3Qgb24gdGhlIGZsb3A7IHRoZXkgcmVhZCB0aGUgc2VjdGlvbiBpbiB0aGUgYm9vayB0aGF0IHNheXMgdGhleSBzaG91bGQgdGhpbmsgaW4gdGVybXMgb2YgZnJhY3Rpb25zIG9mIHRoZSBwb3QsIG5vdCBkb2xsYXIgdmFsdWUuIApUaGlzIGNhbiBvY2N1ciwgc2FpZCB0aGUganVkZ2UsIGlmIHlvdSBtYWtlIGFuZCB0aW1lbHkgZWZmb3J0cyBwcmlvciB0byB0aGUgdGF4IHJldHVybiBkdWUgZGF0ZSB0byBvYnRhaW4gdGhlIGZvcm0gcHJvdmlkZWQgY2lyY3Vtc3RhbmNlcyBhcmUgbm90IGNpcmN1bXN0YW5jZXMgd2hlcmUgdGhlIGVtcGxveWVyIHJlZnVzZWQgdG8gcHJvdmlkZSB0aGUgZm9ybSBmb3IgYSB2YWxpZCByZWFzb24uIApZb3UgZG9uIGxvc2UgbW9uZXkgdGhlcmUuIFRoYXQgYW1hemluZyBvZmZlci4gCkNvbXBlbGxpbmcgcmVzZWFyY2ggc2hvd3MgdGhhdCBtYWduZXNpdW0gY2FuIGhlbHAgcHJvdGVjdCBhZ2FpbnN0IG1ldGFib2xpYyBzeW5kcm9tZSBhbmQgdHlwZSAyIGRpYWJldGVzLiBNYWduZXNpdW0gbWF5IGhlbHAgYWRkcmVzcyBpbmRpdmlkdWFsIGNvbXBvbmVudHMgb2YgbWV0YWJvbGljIHN5bmRyb21lIHN1Y2ggYXMgbG93IEhETCBhbmQgZWxldmF0ZWQgYmxvb2QgcHJlc3N1cmUuCjUgaGFuZGVkIChzaW1pbGFyIHRvIHRoZSBUViBzZXJpZXMpIGFuZCA5IGhhbmRlZCB0YWJsZXMgYXJlIGF2YWlsYWJsZS4pLiAKSXMgdGhlcmUgYSBhY2Ugb2Ygc3BhZGVzIGluIGEgZGVjayBvZiBjYXJkcwpOb3Qgb25seSB0aGlzLCBib29rcyBtYXkgbm93IGJlIHJlYWQgYW5kIGRvd25sb2FkZWQgb25saW5lLiAKU3VkZGVubHkgdGhlIGtpZHMgc3RhcnQgcmlwcGluZyBpbnRvIGhlciBiZWluZyBhYnNvbHV0ZSBzaGl0IGFuZCBzaGUgc25hcHMuLiAKIllvdSB3YW50IHRvIGRlYmF0ZSBmb3VuZGF0aW9ucyBhbmQgY2hhcml0aWVzPyIgT2JhbWEgc2FpZCwgY29tcGFyaW5nIHRoZSBUcnVtcCBGb3VuZGF0aW9uIHRvIHRoZSBDbGludG9uIEZvdW5kYXRpb24sIGFzc29jaWF0ZWQgd2l0aCBEZW1vY3JhdCBIaWxsYXJ5IENsaW50b24gYW5kIGhlciBmYW1pbHkuICJPbmUgY2FuZGlkYXRlJ3MgZmFtaWx5IGZvdW5kYXRpb24gaGFzIHNhdmVkIGNvdW50bGVzcyBsaXZlcyBhcm91bmQgdGhlIHdvcmxkLiBUaGUgb3RoZXIgY2FuZGlkYXRlJ3MgZm91bmRhdGlvbiB0b29rIG1vbmV5IG90aGVyIHBlb3BsZSBnYXZlIHRvIGhpcyBjaGFyaXR5IGFuZCB0aGVuIGJvdWdodCBhIHNpeCBmb290IHRhbGwgcGFpbnRpbmcgb2YgaGltc2VsZi4iLiAKMTIgcG9pbnRzICBzdWJtaXR0ZWQgNyBkYXlzIGFnbwpUaGV5IGNvdWxkbiBjaGFuZ2UgV29uZGVyIFdvbWFuIGNvc3R1bWUgYXMgcGVvcGxlIHdvdWxkIGxvc3QgdGhlaXIgc2hpdCBiZWNhdXNlLCBsaWtlIHlvdSBzYWlkLCBoZXIgY29zdHVtZSBpcyBpY29uaWMuIApUaG91Z2ggc29tZSBvZiB0aGUgZ292ZXJubWVudHMgY29udHJhZGljdGVkIHRoZSBydWxlcnMgb24gdGhpcyBwb2ludCBidXQgZmluYWxseSB0aGVpciBjb250cmFkaWN0aW9uIHdvbiBvdmVyIHRoZSBpbXBvc2l0aW9uIG9mIGJhbiBvbiBnYW1ibGluZyBiZWNhdXNlIG9mIGl0cyBib29taW5nIGVzdGVlbS4gQnV0IHRoZSBsZWdpdGltYXRpbmcgb2YgZ2FtYmxpbmcgZ2F2ZSByaXNlIHRvIGZhciB3aWRlIHNwcmVhZCBuZXR3b3JrcyBhbmQgY2VudGVycyBvZiBnYW1ibGluZyB3aGljaCBhcmUgYnVkZGluZyBsaWtlIGFueXRoaW5nIHRoZXNlIGRheXMuIApCZWNhdXNlIHRoZSB0cmFjayBpbGxlZ2FsbHkgY2xhaW1lZCBhIHRpcCBjcmVkaXQsIHRoZSBsYXdzdWl0IGNvbnRlbmRzIGl0IG11c3QgY29tcGVuc2F0ZSB0aGUgcGxhaW50aWZmcyBhbmQgb3RoZXIgc2ltaWxhciBlbXBsb3llZXMgd2l0aCBhdCBsZWFzdCBtaW5pbXVtIHdhZ2UuLiAKTGl2ZSBpbiBwbGF5IGJldHRpbmcgaXMgdmVyeSBpbXBvcnRhbnQgc2luY2UgaXQgaXMgY29uc2lkZXJlZCBhcyB0aGUgZnV0dXJlIG9mIG9ubGluZSBzcG9ydHMgYmV0dGluZy4gVGhlIGFiaWxpdHkgdG8gYmV0IGxpdmUgaXMgc29tZXRoaW5nIHRoYXQgcGVvcGxlIGxvdmUsIGJlY2F1c2UgaXQgZ2l2ZXMgdGhlbSB0aHJpbGxzIGFuZCBjaGlsbHMuIDg4OCBTcG9ydCBvZmZlcnMgbWFueSB0cmFuc2FjdGlvbiBtZXRob2RzIGFuZCBoZWxwIGFib3V0IHRoZSBmdW5kaW5nIHByb2Nlc3MgdGhyb3VnaCB0aGVpciBjdXN0b21lciBzdXBwb3J0IGRlcGFydG1lbnQuIApJdCBtYXR0ZXJzIGxpdHRsZSB3aGV0aGVyIHlvdXIgaGFuZCBpcyBKSjc1IG9yIEEyMzQsIGFuZCBpbiBmYWN0IHRoZSBzb3J0IG9mIGhhbmRzIHRoYXQgYXJlIGxpa2VseSB0byBjYWxsIHlvdSB3aWxsIGFjdHVhbGx5IGhhdmUgeW91IGluIHdvcnNlIHNoYXBlIGlmIHlvdSBwdXNoIHdpdGggdGhlICJiZXR0ZXIiIEEyMzQgaGFuZC4gVGhlIG1haW4gcG9pbnQgb2YgYWxsIHRoaXMgaXMgdGhhdCB5b3Ugc2hvdWxkIGJlIHB1c2hpbmcgdmVyeSBhZ2dyZXNzaXZlbHkgaW4gbGF0ZSBwb3NpdGlvbiBvbiB0aGUgYnViYmxlIG9mIGFuIE9tYWhhIHNpdCBhbmQgZ28sIGFuZCBjYWxsaW5nIHZlcnkgbGl0dGxlLi4gClRvIGNsYXJpZnksIEkgYW0gbm90IGFuIGV4aXN0aW5nIGN1c3RvbWVyLCBkaWQgbm90IGhhdmUgYSBsZXR0ZXIgb2YgaW50cm9kdWN0aW9uL2EgcGVyc29uYWwgY29udGFjdCwgbm8gSEtJRC9yZXNpZGVuY3kuIEFuZCB3aGlsZSBJIHRvbyBoYWQgdGhvdWdodCBpdCB3YXMgbm90IHBvc3NpYmxlLCB3aGVuIEkgYXNrZWQgSFNCQyBhY2NvdW50cyBvcGVuaW5nIHZpYSBtYWlsLCB0aGV5IGNvbmZpcm1lZCBpbiBhZHZhbmNlIHdoYXQgSSBjb3VsZC9jb3VsZCBub3QgcHJvdmlkZSBmb3IgS1lDLgpDaW5uYW1vbmJyb29rICA1MSBwb2ludHMgIHN1Ym1pdHRlZCAxNCBkYXlzIGFnbwoiVGhlIEhvbGx5d29vZCBDYXNpbm8gbmFtZSBoYXMgYmVlbiB2ZXJ5IHN1Y2Nlc3NmdWwgZm9yIFBlbm4gTmF0aW9uYWwgR2FtaW5nIGluIHRoZSBUdW5pY2EsIE1pc3Npc3NpcHBpIGFuZCBBdXJvcmEsIElsbGlub2lzIG1hcmtldHMsIGFuZCB3ZSBhcmUgYWxzbyB1c2luZyBpdCBpbiBNYWluZSBhbmQgUGVubnN5bHZhbmlhLCIgc2FpZCBLZXZpbiBEZVNhbmN0aXMsIFByZXNpZGVudCBhbmQgQ2hpZWYgT3BlcmF0aW5nIE9mZmljZXIgb2YgUGVubiBOYXRpb25hbCBHYW1pbmcuCkkgd291bGQgYWxzbyB0aGluayB0aGlzIGhhcyBhIHZlcnkgZ29vZCBzaG90IG9mIHBhc3Npbmcgb24gdGhlIGZpcnN0IGdvLkl0IEJhdHRlcnkgcG93ZXJlZCAoY2xlYW4gcG93ZXIgc3VwcGx5KSxubyBjYWJsZXMgYXJlIHVzZWQgZHVyaW5nIG9wZXJhdGlvbiB0aGF0IGNvdWxkIHRyYW5zbWl0IHVud2FudGVkIG5vaXNlLEl0IGZlYXR1cmVzIGEgcmVsYXRpdmVseSBsb3cgcG93ZXJlZCBibHVldG9vdGggYXBwbGljYXRpb24gdXNpbmcgY2hpcHMgdGhhdCBhcmVuIGtub3duIHRvIGJlIG1ham9yIFJGIHByb2JsZW1zSSBjYW4gaW1hZ2luZSB0aGlzIGRvZXNuIHBhc3MgMXN0IGdvIGV2ZW4gd2l0aCBtZWRpb2NyZSBib2FyZCBkZXNpZ24uUG9seVBpbGwgIDIgcG9pbnRzICBzdWJtaXR0ZWQgNyBkYXlzIGFnb0hlYWQgdG8gSG9oZW56b2xsZXJuIHRvIHRoZSBzb3V0aCwgYmV0dGVyIGlmIHlvdSBoYXZlIGEgY2FyIHRvIGRyaXZlIHRoZXJlIGJ1dCBpZiBub3QgSSB0aGluayB5b3UgY2FuIGdldCBhIGJ1cy4gCkFib3V0IEh1bWFuIFJlc291cmNlcyBIUgpEdXJhbnQgY2VzIHByZXNxdWUgcXVpbnplIGFubmVzLCBkZSBtZGVjaW4gZGUgdmlsbGUsIENhemluIGRldmllbnQgbWRlY2luIGRlIGNhbXBhZ25lLiAKQ2F0aHkgTWFwbGVzCkV4ZW1wZWx2aXMgb20gZW4gYW5ub25zIHIgcGxhY2VyYXIgZW4gYW5ub25zIGsgcCBpIGludGVydmFsbGV0IDUgZmlndXIsIGZ1bmdlcmE6ICJkZW4gaGVsYSBzcGVjdHJ1bWVuIGF2IGRlIHVuZGVycyBrYSBvY2ggaGFuZGVsIGdlbWVuc2thcGVuIGZyIG4gbWFtbWEgb2NoIFBvcCBsIG5nc2lrdGlnYSBpbnZlc3RlcmFyZSB0aWxsIGRlbiBteWNrZXQgYWt0aXZhIGhhbmRsYXJlbiBhdiBkZXJpdmF0LkRldCBvY2tzIHN0IGRlciBpbnRlcmFrdGl2IHZlcmYgcmluZyBtZWQgb2xpa2Egc2xvdHMgb2NoIGZyaWcgciBkdSBibGkgeW91dHViZSBwYXJ0bmVyIGRlIGJldGFsYXIgZGlnIGxhZGRhIHVwcCBlbiB2aWRlby5BdHQga2xpY2thIGF2IG1hc2tpbmVucyBpbnNpZGEgb2NoIGhvcHBhcyBhdHQgbCBzZW4gaW5uZSBmIHIgZiByZXRhZyB0aWxsIHBvdGVudGlhbCBsZWRlciBkZXQgZ2Vub20gYXR0IHNwYXJhIHRpZCBvY2gga29zdG5hZGVyLiAKV2F0Y2ggaG93IGNoaXBzIGFyZSBwdXQgZG93bi4gVGhleSBjYW4gYmUgcGxhY2VkIGRvd24gZ2VudGx5LCBjb3VudGVkIGRvd24sIGJhbmdlZCBkb3duLCBzbGlkIGZvcndhcmQsIGV0Yy4gSWYgYSBwbGF5ZXIgYmV0cyBoaXMgY2hpcHMgdmVyeSBzdHJvbmcgYW5kIGZhciBhd2F5IGZyb20gaGltc2VsZiwgaXQgY2FuIG1lYW4gdGhhdCBzdWJjb25zY2lvdXNseSB0aGVpciBjaGlwcyBhcmUgZ29pbmcgYXdheSBmcm9tIHRoZW0sIGxpa2UgdGhleSBtaWdodCBiZSBibHVmZmluZy4gT24gdGhlIG90aGVyIGhhbmQsIGEgcGVyc29uIGJldHRpbmcgY2xvc2VyIHRvIHRoZW1zZWx2ZXMgY2FuIHN1YmNvbnNjaW91c2x5IG1lYW4gdGhhdCB0aGUgbW9uZXkgaXMgZXhwZWN0ZWQgdG8gYmUgY29taW5nIGJhY2sgdG8gdGhlbS4KVGhlbiBzaGUgd2lsbCBmaWxlIGhlciBtYXNzaXZlIGJyaWVmLiAKQWRkaXRpb25hbGx5LCB3ZSBvbmx5IGhhdmUgc28gbXVjaCBlbmVyZ3kgaW4gdXMuIApBbmQgTXJzLiBKYW1lcyBVaWNrIHNwZW50IFNhdHVyICBkYXkgZXZlbmluZyBpbiBXYXluZXNib3JvLiAKSW4gZmFjdCwgdGhlIGZlZWxpbmcgb2YgYmVpbmcgaW4gYSBjYXNpbm8gaW4gSW5kaWEgaXRzZWxmIGlzIHdvcnRoIGl0LiBTYXlzIGFub3RoZXIgZmlyc3QgdGltZXIsIHNvcGhpc3RpY2F0ZWQsIGZ1biwgY29vbC4gCkhlIGhhcyBubyBjcmltaW5hbCByZWNvcmQgYW5kIGhhc24ndCBiZWVuIGFycmVzdGVkIGZvciBhbnkgb2YgdGhpcy4gSGUgaGFzIG90aGVyIHBlb3BsZSBoZSdkIGxpa2UgdG8gZmlnaHQgaWYgaGUgZXZlciBzYXcgdGhlbS4gQW4gZXggY293b3JrZXIgdG9sZCBoaW0gaGUgZGlkIGEgc2hpdHR5IGpvYiBhbmQgbWlsZGx5IGhhcmFzc2VkIGhpbSBhbmQgaGlzIHdvcmsuIApJIHJlbWVtYmVyIGluIG1pZGRsZSBzY2hvb2wgd2UgaGFkIGEgcGl6emEgYm93bCBpdCB3YXMgb25seSBzZXJ2ZWQgb25jZSBhbmQgbXkgZ29kIHdhcyB0aGF0IHNvIGZ1Y2tpbmcgZGVsaWNpb3VzISEhIHRoaW5rIG9mIGEgY2hlZXNlIGJvd2wgd2hlcmUgdGhlIGJvd2wgaXMgYnJlYWQganVzdCBob2xsb3dlZCBvdXQgYW5kIGFsbCB0aGUgdG9wcGluZ3Mgb2YgYSBwaXp6YSBhbmQgdGhlIGNoZWVzZSBhbmQgdG9tYXRvIHNhdWNlIHdhcyBpbiBpdC4gCkxpbWl0IG15IHNlYXJjaCB0byByL2Jvb2tzdXNlIHRoZSBmb2xsb3dpbmcgc2VhcmNoIHBhcmFtZXRlcnMgdG8gbmFycm93IHlvdXIgcmVzdWx0czpzZWUgdGhlIHNlYXJjaCBmYXEgZm9yIGRldGFpbHMuCkdva3UgdnMgS3JpbGxlbiBoYWQgbm8gc3RhY2tzIGl0IHdhcyBhIGdhZyBmaWdodCBzbyB0aGVyZSB3YXMgbmV2ZXIgYW55IHRlbnNpb24gZm9yIGZhbnMgdG8gY29tcGxhaW4gYWJvdXQgaXQgbGlrZSBpZiBOYXJ1dG8gZm91Z2h0IEtpYmEgYW5kIEtpYmEgd29uIHRoZXJlIGFyZSBubyBkaXJlY3QgY29uc2VxdWVuY2VzIGFuZCBhdCBmYWNlIHZhbHVlIGl0IGNvdWxkIGJlIGluc2lzdGVkIHRoYXQgTmFydXRvIG9ubHkgdXNlZCAyMCBQZXJjZW50IG9mIGhpcyBwb3dlci4gRGlmZmVyZW5jZSBpcyB3ZSBrbm93IHdoYXQgS2liYSBpcyBjYXBhYmxlIG9mIHdlIGtub3cgbm90aGluZyBhYm91dCBEZWx0YS4KVGhlIG9yaWdpbmFsIFBHQSBzeXN0ZW0gcmVjb3ZlcnkgZGlzY3MgZG9uIHJ1biBvbiB0aGUgbWFjaGluZSBvbiBzdGFydHVwLiBUaGV5IHNwaW4gaW4gdGhlIGRpc2MgZHJpdmUgYnV0IHRoZSBib290IHByb2Nlc3Mgc2F5cyB0aGVyZSBpc24gYW55dGhpbmcgaW4gdGhlIGRyaXZlLiBJdCBnaXZlcyBhbiBlcnJvciBtZXNzYWdlIHNheWluZyAiTk8gRFJJVkVTIEFSRSBBVFRBQ0hFRCwgT1IgRFJJVkVTIEFSRSBQT1dFUkVEIERPV04uIFRIRSBERVZJQ0UgRFJJVkVSIElTIE5PVCBJTlNUQUxMRUQuIgpXaXRoIHRoZSBkZXZlbG9wbWVudCBvZiBFdXJvcGVhbiBVbmlvbiBmcmVlIHRyYWRlIGFncmVlbWVudHMsIFBNVSBzYXcgaXRzIG1vbm9wb2x5IHN0YXR1cyB0byBvcGVyYXRlIGhvcnNlIHJhY2UgYmV0dGluZyBiZWNvbWUgYSBiYXJyaWVyIHRvIGJvdGggaW50ZXJuYXRpb25hbCBleHBhbnNpb24gYW5kIGNvbXBldGl0aXZlbmVzcyBhdCBob21lLiBHYW1pbmcgY29tcGFueSBMYWRicm9rZSBCZWxnaWFuIHN1YnNpZGlhcnkuIExhZGJyb2tlIGxvZGdlZCBhIGNvbXBsYWludCB3aXRoIHRoZSBDb3VydCBvZiB0aGUgRXVyb3BlYW4gQ29tbXVuaXRpZXMsIHdoaWNoIGxldmllZCBhIGZpbmUgYWdhaW5zdCBQTVUgZm9yIHJlY2VpdmluZyBGcmVuY2ggZ292ZXJubWVudCBzdXBwb3J0LiAKSWYgeW91IG5lZWQgc29tZSBwb2ludGVycywgdGhlIG1vZCB0ZWFtIGlzIGFsd2F5cyBoYXBweSB0byBhc3Npc3QgaWYgeW91IGNvbnRhY3QgdXMgaW4gbW9kbWFpbCwgYnV0IGFsc28gYmUgc3VyZSB0byBjaGVjayBvdXQgdGhpcyBndWlkZSBvbiBhc2tpbmcgYmV0dGVyIHF1ZXN0aW9ucy4uIApJZiBhbnlvbmUgdGVsbHMgeW91IHRoYXQgYmVpbmcgZ2F5IGlzIGEgY2hvaWNlLCBhc2sgdGhlbSB0byBiZSBnYXkgZm9yIGEgc2Vjb25kIHRoZW4uIElmIGl0J3MgYSBjaG9pY2UsIHRoZXknZCBiZSBhYmxlIHRvIGJlIGdheSBmb3IgNW1pbiBhbmQgdGhlbiBzd2l0Y2ggYmFjayB0byBiZWluZyBzdHJhaWdodC4gSWYgdGhleSBzYXkgIkkgZG9uJ3Qgd2FudCB0byIsIHlvdSBjYW4gc2F5ICJub3QgeWV0LCBidXQgb25jZSB5b3UgbWFrZSB0aGUgY2hvaWNlIHRvIHN3aXRjaCB5b3Ugd2lsbCwgYnV0IHlvdSBjYW4gYWx3YXlzIHN3aXRjaCBiYWNrISIKMikgQ2F0YWxpbmE6IDE2MDUgMTc1MCAoZXhjbHVkaW5nIDE1IG1pbiBhcyB0aXApLCAyMDBFLCB0aGUgZmlyc3QgdGltZSBpbiB0aGUgcGFzdCBzaXggbW9udGhzLiBJbiBhIHJvb20gMTUgbWluIERBVFkgd2l0aCBoZXIgYmlnIE8sIDI1IG1pbiBtaXNzaW9uYXJ5IHdpdGggaGVyIGludGVuc2UgZW5qb3ltZW50LCA1IG1pbiBCSiwgMTAgbWluIHBpbGxvdyB0YWxrLCBteSAyNSBtaW4gbWFzc2FnZSBvbiBoZXIsIDIwIG1pbiBtaXNzaW9uYXJ5IHdpdGggaGVyIHNlY29uZCBPLCA1IG1pbiBwaWxsb3cgdGFsay4gTXVzdCByZXBlYXQgYW5kIGFjdHVhbGx5IEkgYm9va2VkIGhlciBmb3IgdG9tb3Jyb3cuLiAKRm9yIGV4YW1wbGUgaGUgbWlnaHQgbGlrZSB0aGUgbGV2ZWwgb2YgZGlydHkgdGFsayBpbiBzdG9yeSBBLCB0aGUgb3V0Zml0IGRlc2NyaWJlZCBpbiBzdG9yeSBCLCB0aGUgYXR0aXR1ZGUgaW4gc3RvcnkgQywgZXRjLi4gCldpdGggdGhlIFNpdGluZyBQcm9ncmFtIFN0dWR5IG5vdyBuYXJyb3dlZCB0byBhIGZpZWxkIG9mIHR3byBwb3RlbnRpYWwgdHJhY3RzIGluIFdhc2hpbmd0b24gQ291bnR5IGFuZCB0aGUgdHJhY3QgbmVhciBQb2ludCBvZiBSb2NrcywgdGhlIFN1Z2FybG9hZiBjaXRpemVucyBnb3QgdGhlaXIgZmlyc3QgZm9ybWFsIHByZXNlbnRhdGlvbiBvZiB0aGUgcGxhbnMgYW5kIHRoZSBzaXRlIHNlYXJjaCBhbmQgdGhlIGNoYW5jZSB0byBleHByZXNzIGRpc2JlbGllZiB0aGF0IHRoZSB2aXN0YSBmcm9tIFN1Z2FybG9hZiBtYXkgYmUgbWFycmVkIGJ5IGFuIGFkZGl0aW9uYWwgcGxhbnQgdG8gdGhlIFBFUENPIGZhY2lsaXR5IGF0IERpY2tlcnNvbi4gCkdhZGdldHMgR2l6bW9zIEdhbG9yZSBBdCBDRVMgMjAxMzIwMTMgQ29uc3VtZXIgRWxlY3Ryb25pY3MgU2hvdyBIaWdobGlnaHRzIE5ld2VzdCBUZWNobm9sb2d5IEEgbmV3IGdlbmVyYXRpb24gQ2FzaW8gRyBTaG9jayB3YXRjaCBpcyBzaG93biBhdCB0aGUgMjAxMyBJbnRlcm5hdGlvbmFsIENFUyBhdCB0aGUgTGFzIFZlZ2FzIENvbnZlbnRpb24gQ2VudGVyIG9uIEphbnVhcnkgOCwgMjAxMyBpbiBMYXMgVmVnYXMsIE5ldmFkYS4gVGhlIFVTRCAxODAgd2F0Y2ggaXMgY3VycmVudGx5IGF2YWlsYWJsZSBhbmQgaXMgQmx1ZXRvb3RoIGVuYWJsZSB3aGljaCBhbGxvd3MgdGhlIHVzZXIgdG8gbGluayBpdCB0byBhbiBpUGhvbmUuIENFUywgdGhlIHdvcmxkJ3MgbGFyZ2VzdCBhbm51YWwgY29uc3VtZXIgdGVjaG5vbG9neSB0cmFkZSBzaG93LCBydW5zIHRocm91Z2ggSmFudWFyeSAxMSBhbmQgaXMgZXhwZWN0ZWQgdG8gZmVhdHVyZSAzLDEwMCBleGhpYml0b3JzIHNob3dpbmcgb2ZmIHRoZWlyIGxhdGVzdCBwcm9kdWN0cyBhbmQgc2VydmljZXMgdG8gYWJvdXQgMTUwLDAwMCBhdHRlbmRlZXMuLiAKVGVzdCBvdXQgZGlmZmVyZW50IGFycmFuZ2VtZW50cywgcGF0dGVybnMsIGFuZCBjb2xvciBzY2hlbWVzLiAKVGhlcmUncyB0b25zIG9mIHR1dG9yaWFscyBvdXQgdGhlcmUsIGFuZCBpZiB5b3UgZ2V0IGFueSBnb29kIGF0IGl0LCB5b3UgY2FuIGFsd2F5cyB0cnkgdG8gc2VsbCB3aGF0IHlvdSBtYWtlIG9yIGdpdmUgdGhlbSBhcyBnaWZ0cywgdGhlcmVieSBzYXZpbmcgYSBsaXR0bGUgbW9uZXkgZnJvbSB0aW1lIHRvIHRpbWUuIApIZWluemUgYW5kIGhlciBjb2xsZWFndWVzIGhhdmUgc3R1ZGllZCB0aGUgbnV0cml0aW9uYWwgbmVlZHMgb2YgZG9ncyBmb3IgeWVhcnMsIGFuZCBoYXZlIGNvbmNsdWRlZCB0aGF0IHJlYWRpbmcgdGhlIGluZ3JlZGllbnQgbGlzdCBpcyBwcmV0dHkgdXNlbGVzcy4gCkFsbCBhc2lhbnMuIApGb3IgZXhhbXBsZSwgbXkgZnJpZW5kcyBib3lmcmllbmQgaGF0ZXMgdGhhdCBoZSBwbGF5cyBwb2tlciwgc2luY2UgdGhleSBhcmUgY3VycmVudGx5IHNhdmluZyB1cCB0byBidXkgYSBob3VzZS4gVGhlbiBoZSBvdXQgcGxheWluZyBnYW1lcyBhbmQgdGFraW5nIGJpZyBsb3NzZXMgb2YgbW9uZXkgdGhleSBzaG91bGQgcHV0IHRvIHNhdmUgdG8gc2FpZCBob3VzZS4gSGUgd29ya2VkIG91dCB0aGF0IHdpdGggcHV0dGluZyB1cCBhIGxpbWl0ZWQgYnVkZ2V0IHdpdGggd2hpY2ggaGUgImFsbG93ZWQiIHRvIHBsYXkgd2l0aC4gQW5kIHRoZW4gaGUgc3RpY2tzIHRvIHRoYXQgYW5kIGFsbCBpcyB3ZWxsIGJldHdlZW4gdGhlbS4KRXZlbiB0aGVuIGl0IHdvdWxkIGp1c3QgYmUgZ2xvc3NlZCBvdmVyIGF0IHRoZSBuZXh0IGFubnVhbCBiZW5lZml0cyBtZWV0aW5nIHdoZXJlIHRoZSBJbnN1cmFuY2Ugc2FsZXNtYW4gd291bGQgcHJvbWlzZSAiaXQgdG90YWxseSB3b24gaGFwcGVuIGFnYWluIiBvciAiVGhlIG90aGVyIGd1eXMgZG8gaXQgdG9vLCBidXQgd29yc2UiLgpPdmVydmlldyBmb3IgTWFncGllMzIKVG9sZCBoaW0gSSB3YXMgZ2F5IGFuZCBoZSBzYWlkIGhlIGhhZCBtZW4gdG9vLiBJIGNvbmZpcm1lZCB1cCBmcm9udCB0aGF0IHRoZSBwcmljZSB3b3VsZCBiZSAkMTAwIFVTRC4gCkl0J3MgYWxzbyBjdXN0b21pemFibGUgICB0aGF0IHdheSwgeW91J3JlIHJlY2VpdmluZyBoZWFkbGluZXMgZnJvbSBzdWJqZWN0cyB0aGF0IGludGVyZXN0IHlvdS4gWW91IGNhbiBzZWUgYWxsIG9mIG91ciBSU1MgZmVlZHMgb24gZWFjaCBvZiB0aGUgcGFnZXMgYmVsb3cuCkltYWdpbmUgdGhlIGxpdGVyYXR1cmUgdGhhdCB3aWxsIGNvbWUgb3V0IHdoZW4vaWYgdGhlIHBlb3BsZSBhcmUgZXZlciBmcmVlIHRvIGV4cHJlc3MgdGhlbXNlbHZlcy4gUGx1cyB0aGF0IHNpbGx5IG1vbnN0ZXIgbW92aWUgb2YgdGhlaXJzIGlzIGNyeWluZyBvdXQgZm9yIHNvbWUgbW9kZXJuIHNwZWNpYWwgZWZmZWN0IHNlcXVlbHMhLiAKRmxpcCBvbiB0aGUgbGlnaHRzLCB1cCBwb3BzIGEgdG9wbGVzcywgYmlraW5pIGJvdHRvbSBvbmx5IHdlYXJpbmcgZ2lybCwgcHJvYmFibHkgbWlkIHR3ZW50aWVzLCB2ZXJ5IG5pY2UgYXNzZXRzIGxvb2tzIGF0IG1lIGFuZCBqdXN0IGtpbmRhIHBvaW50cyB0byB0aGUgZXF1aXBtZW50IHJhY2suIApDJ3RhaXQgcXVlbHF1J3VuIGRlIHBsdXR0IHN5bXBhICBsJ3BvcXVlLiBKZSBjb25zdGF0ZSBsZSBjaGFuZ2VtZW50IGRlIHBlcnNvbm5hbGl0IGRlcHVpcyBsb25ndGVtcHMuIFZvdXMgdGVzLCAgbW9uIGh1bWJsZSBhdmlzLCB0b3V0ICBmYWl0IGRhbnMgbGUganVzdGUgIHNvbiBzdWpldCBldCBqZSB2b3VzIHJlbWVyY2llIGRlIGRvbm5lciB2b3RyZSB0bW9pZ25hZ2UgIHNvbiBlbmRyb2l0LCBjZSBxdWUgamUgZmFpcyBnYWxlbWVudCAgY2hhcXVlIGZvaXMgcXVlIGplIGxlIHBldXguUXVhbmQgamUgcGFybGFpcyBkJ3VuIHJlY3ljbGFnZSBkJ2FpcnMgY29ubnVzLiAKTG90IG9mIHBhcmVudHMgdmlldyBnZW5ldGljcyBhcyBhIGxvbmcgdGVybSBzb2x1dGlvbi5UaGV5IGFyZSBnb2luZyB0byB3YW50IHRvIGtub3cgaG93IHdlIGNhbiBhY2NlbGVyYXRlIHRoZSBwYWNlIG9mIHJlc2VhcmNoIHN1Y2ggdGhhdCB3ZSBjYW4gZmluZCBhbnN3ZXJzIG5vdy4gCkp1c3QgaGFkIHRoaXMgZ3V0IGZlZWxpbmcgdGhhdCBJIGhhZCB0byBnZXQgb3V0IG9mIHRoZSB3YXRlciB3aGljaCBpcyBxdWl0ZSB1bnVzdWFsIGZvciBhIHlvdW5nIHN3aW1tZXIuIApMZWFreSBHdXQgU3luZHJvbWUgKExHUykgaXMgYSBtYWpvciBjYXVzZSBvZiBkaXNlYXNlIGFuZCBkeXNmdW5jdGlvbiBpbiBtb2Rlcm4gc29jaWV0eSwgYWNjb3VudHMgZm9yIGF0IGxlYXN0IDUwJSBvZiBjaHJvbmljIGNvbXBsYWludHMsIGFzIGNvbmZpcm1lZCBieSBsYWJvcmF0b3J5IHRlc3RzLkluIExHUywgdGhlIGVwaXRoZWxpdW0gb24gdGhlIHZpbGxpIG9mIHRoZSBzbWFsbCBpbnRlc3RpbmUgYmVjb21lcyBpbmZsYW1lZCBhbmQgaXJyaXRhdGVkLCB3aGljaCBhbGxvd3MgbWV0YWJvbGljIGFuZCBtaWNyb2JpYWwgdG94aW5zIG9mIHRoZSBzbWFsbCBpbnRlc3RpbmVzIHRvIGZsb29kIGludG8gdGhlIGJsb29kIHN0cmVhbS4gCkluIHRoaXMgc3BlY2lmaWMgY2FzZSwgdGhlIGNyaXRpY2FsIGRhbWFnZSBvY2N1cnJlZCBvdmVyIGEgbWludXRlIGFmdGVyIGxpZnRvZmYsIGFuZCB0aGV5IGRpZG4gZXZlbiBzdXNwZWN0IGl0IHVudGlsIHR3byBkYXlzIGxhdGVyLiAKRG9uIGtub3cgd2hhdCB0aGUgc3Bhcmsgd2lsbCBiZSwgYnV0IHdlIGRvIGtub3cgYmVjYXVzZSBoaXN0b3J5IGhhcyBhIHdheSBvZiByZXBlYXRpbmcgaXRzZWxmIHRoYXQgYXQgc29tZSBwb2ludCB0aGVyZSB3aWxsIGJlIGEgc3BhcmssIHNhaWQgU2VsZmUsIHdobyB3YXMgY28gaGVhZCBvZiBnbG9iYWwgdGVjaG5vbG9neSwgbWVkaWEgYW5kIHRlbGVjb20gYmFua2luZyBhdCBSb3lhbCBCYW5rIG9mIENhbmFkYSB1bnRpbCAyMDA0LCBkdXJpbmcgYW4gaW50ZXJ2aWV3IGF0IGhpcyBvZmZpY2UgaW4gVG9yb250by4gTG9hbnMsIGhpZ2ggbGV2ZXJhZ2UgYW5kIGFuIGFidW5kYW5jZSBvZiBjYXBpdGFsIHJlYWxseSBmb3IgdGhlIGxhc3QgZGVjYWRlIGlzIHRoZSBnYXNvbGluZS4gVG9yb250byBEb21pbmlvbiBCYW5rIGFuZCBDYW5hZGlhbiBJbXBlcmlhbCBCYW5rIG9mIENvbW1lcmNlLCB0aGUgY291bnRyeSBzZWNvbmQgYW5kIGZpZnRoIGxhcmdlc3QgYmFua3MsIGJvbHN0ZXJlZCBwcm92aXNpb25zIGluIHRoZSBsYXN0IGZpc2NhbCBxdWFydGVyLCBjaXRpbmcgYSByaXNlIGluIGNvcnBvcmF0ZSBhcnJlYXJzIGFtb25nIHRoZSByZWFzb25zLi4gCkh1Z2UgY29uZ3JhdHMuIApBZnRlciBwdXJjaGFzaW5nIHRoZSBjb21wdXRlciwgbXkgZGFkIHJlYWxpemUgdGhlcmUgd2FzbiBlbm91Z2ggcm9vbSBpbiBvdXIgdGlueSBjYXIgZm9yIHRocmVlIGNoaWxkcmVuLCBjYXIgc2VhdHMsIGFuZCB0aGUgZ2lhbnQgYXNzIDE5OTcgY29tcHV0ZXIuIApUaGUgR2VybWFuIHBsYXlzIHNvbWUgb2YgdGhlIGJpZ2dlc3QgYnV5IGluIGdhbWVzIGluIHRoZSB3b3JsZC4gCkhhZ3VlIHZzIENJTyBpcyBhYm91dCB0aGUgcmlnaHQgb2YgYWNjZXNzIHRvIHB1YmxpYyBwbGFjZXMgdG8gZW5nYWdlIGluIGZyZWUgc3BlZWNoIGFuZCBmcmVlIGFzc2VtYmx5LiBBbmQgdGhpcyByaWdodCBjdXJyZW50bHkgb25seSBleGlzdHMgaW4gdGhlIHBoeXNpY2FsIHdvcmxkLiBZb3VyIGludGVycHJldGF0aW9uIGlzIHVubmVjZXNzYXJpbHkgZXhjbHVzaXZlClByaW9yIHRvIEdldHRpbmcgQSBUaGVyYXBldXRpYyBtYXNzYWdlCkZvciB0aGUgbW9zdCBwYXJ0LCBkZWFsaW5nIGRhbWFnZSBpcyBkb25lIGluIHRoZSBzYW1lIGNhcmQgZHJhdyBhcyBkZXRlcm1pbmluZyBpZiBhbiBhdHRhY2sgbGFuZHMuIFRoZSBzdWl0IG9mIHRoZSBjYXJkcyBjb21lIGludG8gcGxheSBoZXJlOiBwdW5jaGVzIG9ubHkgZGVhbCBhY3R1YWwgZGFtYWdlIHdpdGggY2x1YnMgd2hpbGUgYSBncmVuYWRlIGRvZXMgZGFtYWdlIG9uIGNsdWJzLCBzcGFkZXMsIGFuZCBoZWFydHMsIHBsdXMgdHdvIGV4dHJhIHBvaW50cy4KU28gaWYgeW91IHdhbnQgdG8gcmVhY2ggdGhlIHRvcCBpdCBnb2luZyB0byBiZSBwYWluZnVsLCBidXQgeW91IGNhbiBzaXQgY29tZm9ydGFibHkgYXQgdGllcnMgMTkxNyBhcyBhIEYyUCBhbmQgbm90IG1pc3MgbXVjaCBvbiB0aGUgcmV3YXJkcy5BcyBmb3IgQWV0aGVyIFJhaWRzLCByaWdodCBub3cgaXQgaXMgYSBiaXQgdG94aWMuIApObywgdGhlICUgb2YgYmFkIGJlYXRzIGEgcGxheWVyIHRha2VzIG9uIGEgaGFuZCBieSBoYW5kIGJhc2lzIGhhcyBhYnNvbHV0ZWx5IG5vdGhpbmcgdG8gZG8gd2l0aCBmZXdlciBoYW5kcyBwZXIgaG91ci4gVGhlIGZhY3QgdGhhdCB0aGlzIGhhcyB0byBiZSBleHBsYWluZWQgb24gYSBwb2tlciBmb3J1bSBpcyBtaW5kIGJvZ2dsaW5nLgo3IGF0IE1vdG9yQ2l0eSBDYXNpbm8gSG90ZWwsIHRoZSBjaGFyaXR5IHBva2VyIHRvdXJuYW1lbnQgd2lsbCBnaXZlIGZhbnMgYW4gb3Bwb3J0dW5pdHkgdG8gZ28gaGVhZCB0byBoZWFkIHdpdGggUmVkIFdpbmdzIHBsYXllcnMgYW5kIGFsdW1uaSBpbiBhIGdhbWUgb2YgVGV4YXMgSG9sZCAnRW0gd2l0aCBhIGdyYW5kIHByaXplIG9mICQ1LDAwMCBjYXNoIHRvIHRoZSB0b3VybmFtZW50IHdpbm5lci4gCkkgbmV2ZXIgaGFkIGEgU3RhcmJ1Y2tzIGZyYXAsIGJ1dCBJIGhlYXIgaXQgYWxsIHBvd2RlciBhbmQgaGFzIG5vIGNvZmZlZSBpbiBpdC4gCkhlIGhhcyBkZW1vbnN0cmF0ZWQgaGUgY2FuIGRvIGl0IGFsbCB3aXRob3V0IGEgd2luY2Ugb2YgcGFpbiBpbiBoaXMgZmFjZSBpbiB0aGUgdG91Z2hlc3Qgb2YgY2xpbWJzIG9yIGFueSBzaWduIGZlYXIgaW4gZGFuZ2Vyb3VzIGRlc2NlbnRzLi4gCkhvdyBtdWNoIGRvZXMgYSBwcm9mZXNzaW9uYWwgcG9rZXIgcGxheWVyIGVhcm4/CllvdSBzYXcgYSBzdG9yeSBhYm91dCB5b3VyIHBlcnNvbmFsIGJvb2dleW1hbiBhbmQgY291bGRudCByZXNpc3QgZGVyYWlsaW5nIHRoZSBjb252ZXJzYXRpb24gYnkgdGFraW5nIHlvdXIgb3duIHBlcnNvbmFsIGNoZWFwIHNob3QgYXQgaGVyLiBUaGlzIHN0b3J5IGlzbnQgYWJvdXQgSXJhcS4gCkhlIGhhZCB0aGUgd2hvbGUgdGltZSB0aGUgZ3V5IHdhcyBzaG9vdGluZyBBZHJpYW4gYW5kIHRoZW4gcGl2b3Rpbmcgc2xvdyBhcyBtb2xhc3NlcyB0aGF0IGhlIGNvdWxkIGhhdmUgc2hvdCB0aGUgYmFkIGd1eS4gSG9va2VyIGNhbGxzIHRoZSBndXkgY29wIHRvIHRoZSBzdGFuZCBhbmQgdGhlIGd1eSBpcyBub3RpY2VhYmx5IGZsdXN0ZXJlZC4gCkFiZXIgc28gbGVybnQgZGVyIG5vY2ggZXR3YXMgbGVpY2h0IEZlcm5yZWlzZW5kZSB3ZW5pZ3N0ZW5zIHNjaG9uIG1hbCBkaWUgZXJzdGUgTGVrdGlvbiBpbSBFbnRzY2hsZXVuaWdlbi4gCldoaWxlIHdvcmtpbmcgMTUgaG91cnMgYSBkYXkgICA3IGRheXMgYSB3ZWVrLCBhbGwgeWVhci4gClN3ZWV0cG90ZnJpZXMgIDYgcG9pbnRzICBzdWJtaXR0ZWQgMTUgZGF5cyBhZ28KQmUgd2lsbGluZyB0byB0YWtlIGEgcmlzay4gClJhdGhlciwgdGhleSB3ZXJlIGEgZGlyZWN0IG1lYXN1cmUgb2YgaG93IGVhY2ggcGVyc29uIHBlcmNlaXZlZCB0aGUgY29tcGV0aXRpb24uIApJbiB0aGUgZnJvbnQgcm93LCBOaWNraSBNaW5haiBlbnN1cmVkIHNoZSBzdG9sZSB0aGUgYXR0ZW50aW9uIGZyb20gdGhlIGNhdHdhbGsgd2hlbiBoZXIgamF3IGRyb3BwaW5nIGNsZWF2YWdlIHRocmVhdGVuZWQgdG8gc3BpbGwgb3V0IG9mIGhlciBzdHJhcGxlc3MgY29yc2V0LgpUaGUgZW5kIG9mIHRoZSBkYXksIEkgZG9uIGNhcmUgaWYgdGhleSBhZGQgYSBtaWxsaW9uIGN1c3RvbWl6YXRpb24gb3B0aW9ucyBvciBpZiB0aGV5IHRha2UgdGhlbSBhbGwgYXdheSwgdGhlIGdhbWUgd2lsbCBiZSBleGFjdGx5IGVxdWFsbHkgYXMgbXVjaCBmdW4gYXMgaXQgaXMgdG9kYXkuIEkgbm90IGFyZ3VpbmcgYWdhaW5zdCB0aGUgYWRkaXRpb24gb2YgY29udGVudCwgSSBtb3JlIGFyZ3VpbmcgYWdhaW5zdCB0aGUgcGVyY2VpdmVkIG5lZWQgZm9yIG1vcmUgY29udGVudC4KRGlkIGl0cyBmZW1hbGUgcGFybGlhbWVudGFyaWFucyBtYWtlIGEgRmF1c3RpYW4gYmFyZ2Fpbj8gWW91IHNhbmN0aWZ5IG91ciB3b3JrcGxhY2VzIHdlJ2xsIHRvbGVyYXRlIHlvdXIgd2lsZHM/LiAKIEF1am91cmQnaHVpLCB1bmUgZmVtbWUgZm1pbmluZSBzZHVpdCBwb3VyIGNyZXIgZGUgbGEgcmVsYXRpb24gYXZlYyBsJ2F1dHJlLCBldCBub24gZGFucyBsZSBzZXVsIGJ1dCBkZSBzZSBzZW50aXIgZHNpcmFibGUgZGFucyBsZXMgeWV1eCBkZXMgaG9tbWVzLCBhdmFuY2UgbGEgcHN5Y2hhbmFseXN0ZSBJc2FiZWwgS29yb2xpdHNraS4gClRoZSB3aG9sZSBzdHJhdGVneSBvZiBpbXBsZW1lbnRpbmcgcG9rZXIgdmlkZW8gZ2FtZXMgd2lsbCBub3QgYmUgdHJpY2t5IGJ1dCBub25ldGhlbGVzcyBmb3IgdGhvc2Ugd2hvIGFyZSBuZXcgdG8gcG9rZXIgc29jaWV0eSBtb3JlIGJlbmVmaWNpYWwgY291bGQgYmUgdG8gY2hlcmlzaCBjb21wbGV0ZWx5IGZyZWUgb25saW5lIGdhbWVzLiBGb3IgYnJhbmQgbmV3IGdhbWVycyBpdCB3aWxsIGJlY29tZSBpbXBlcmF0aXZlIHRoYXQgeW91IGdldCBwcml2eSB0byB0aGUgZm91bmRhdGlvbnMgYW5kIGdhaW4ga25vd2xlZGdlIG9mIHdheXMgd2hpY2ggbWlnaHQgZW5kIHVwIGluIGlkZWFsbHkgc3VpdGVkIHJlc3VsdHMuIElmIHlvdSBzaG91bGQga2VlcCBvbiBlbmpveWluZyBwb2tlciB2aWRlbyBnYW1lcyB3aXRob3V0IGhhdmluZyBhY2N1cmF0ZSB0YWN0aWNzLCB5b3UgY2FuIGNvbnRpbnVlIHRvIGtlZXAgZ2V0dGluZyByaWQgb2YgcmV2ZW51ZS4gCkdvb2QgZ29kIHRoZSBhZHZpY2UgaW4gdGhlc2UgdGhyZWFkcyBhcmUgYWx3YXlzIHNvIGZ1Y2tpbmcgZHVtYi4gSnVzdCBnbyB3aGVyZXZlciB5b3Ugd2FudCBkdWRlLiBFdmVyeSBzaW5nbGUgMS8yIG9yIDEvMyBnYW1lIGlzIGdvaW5nIHRvIGJlIHByZXR0eSBzb2Z0LiBJZiB5b3Ugd2FudCBteSBhZHZpY2UgZ28gdG8gdGhlIEJlbGxhZ2lvIG9yIHRoZSBBcmlhIGJlY2F1c2UgdGhlcmUgYXJlIHVzdWFsbHkgYXQgbGVhc3QgYSBmZXcgZ2FtZXMgZ29pbmcgc28geW91IGNhbiBnZXQgYSB0YWJsZSBjaGFuZ2UgaWYgeW91ciB0YWJsZSBzdWNrcy4gQW5kIHRoZSBwb2tlciByb29tcyB0aGVyZSBhcmUgbmljZSBhcyBmdWNrLiBBbmQgdGhlIEFyaWEgaGFzIEZpdmU1MCBwaXp6YSAod2hpY2ggaXMgZG9wZSBhc3MgcGl6emEpIHNvIHlvdSBjYW4gZ2V0IGEgZnJlZSBzbGljZSBhZnRlciAzIGhvdXJzIG9mIHBsYXkgd2l0aCBhIHBsYXllcnMgY2FyZC4gSW4gbXkgZXhwZXJpZW5jZSB0aGUgZ2FtZXMgaGF2ZSBhIGJpdCBiZXR0ZXIgYWN0aW9uIGF0IHRoZSBCZWxsYWdpbyBidXQgSSB0aGluayB0aGUgQXJpYSBpcyBuaWNlciBvdmVyYWxsLiBJZiB5b3Ugd2FudCB0byBnbyBvZmYgc3RyaXAgdG8gcGxheSB0aGVuIGdvIHRvIHRoZSBHb2xkIE51Z2dldCBvciB0aGUgUmVkIFJvY2suIEdvbGQgTnVnZ2V0IGhhcyB1bmNhcHBlZCAxLzIgYW5kIFJlZCBSb2NrIGFsd2F5cyBoYXMgYSBjb3VwbGUgb2YgZ2FtZXMgZ29pbmcgYnV0IGl0J3Mgbm90IGFsd2F5cyBnb29kLgpUaGUgdGluY3R1cmUgaXMgYXJvdW5kIDc1JCBmb3IgNDgwbWcsIHdoZXJlYXMgb3RoZXIgZWRpYmxlcyBhcmUgMjUkIGZvciAxMDBtZywgZG9lcyB0aGlzIG1lYW4gdGhlIHRpbmN0dXJlIGlzIHdlYWs/PyBJIGdvaW5nIHRvIGJ1eSBidWQgYXMgd2VsbCwganVzdCBkaWRuIGtub3cgaWYgSSBzaG91bGQgZ2V0IGEgdmFwZSBjYXJ0cmlkZ2Ugb3IgZWRpYmxlcyBhcyB3ZWxsLiAKVGhlcmUgYXJlIHRob3VzYW5kcyBvZiByaW5nIGdhbWVzIGF0IHZpcnR1YWxseSBhbnkgbGV2ZWwgYXMgd2VsbCBhcyB0aG91c2FuZHMgb2YgdG91cm5hbWVudHMgcmFuZ2luZyBpbiBzaXplIGZyb20gdGVuIGVudHJhbnRzIHVwIHRvIHRob3VzYW5kcyB3aXRoIGJ1eSBpbnMgcmFuZ2luZyBmcm9tIGZyZWUgdXAgdG8gdGhvdXNhbmRzIG9mIGRvbGxhcnMuIFRoaXMgYXJ0aWNsZSB3aWxsIHByb3ZpZGUgYW4gaW50cm9kdWN0aW9uIHRvIHRoZSBmdW4gYW5kIHBvc3NpYmx5IHByb2ZpdGFibGUgd29ybGQgb2Ygb25saW5lIHBva2VyLiBMZXQncyBiZWdpbiB3aXRoIHNvbWUgZ2VuZXJhbCBpbmZvcm1hdGlvbiBhYm91dCBwbGF5aW5nIHBva2VyIG9ubGluZS4uIApTaGUgZ2V0cyByZWFsbHkgaHlwZWQgdXAuIFRoZXJlIGEgcGxhbm5pbmcvZW5naW5lZXJpbmcgYXNwZWN0IHRvIHRoaXMgYXMgeW91IGluZXZpdGFibHkgd2lsbCBmYWlsIGEgbGV2ZWwsIHdoaWNoIGlzIGZ1bi4gU2hlIGEgbXVjaCBtb3JlIG9yZ2FuaXplZCBwbGFubmluZyBvcmllbnRlZCBwZXJzb25hbGl0eS4gCkJ1dCBub3cgR2FnYSBpcyBwYXJ0IG9mIHRoZSAianVzdCBzYXkgbm8gdG8gc2V4IiByYXRoZXIgdGhhbiAianVzdCBwdXQgYSBjb25kb20gb24gaXQiIHdvcmxkIC4gCkkgaGF0ZSB3aGF0IHdyZXN0bGluZyBoYXMgYmVjb21lLiAKRnJvbSBhIHNwZWN0YXRvciBwb2ludCBvZiB2aWV3IG1hbnkgZ2FtZXMgbGFzdCBzZWFzb24gd2VyZSB0eXBpY2FsIG9mIHRlYW1zIGJlaW5nIHdyb25nbHkgImNvYWNoZWQiLiBQb3J0IE1hY3F1YXJpZSBiYWNrcyBzb29uIGhhZCB0aGVpciBvcHBvbmVudHMgcmF0dGxlZCwgYW5kIHdlcmUgbG9va2luZyB0aGUgYmVzdCBzZXQuIApUcmFpbmluZyBydW5zIGhhcHBlbiBtb3N0IG1vcm5pbmdzIGFmdGVyIHRoZXkgZHJvcHBlZCB0aGVpciBraWRzIG9mZiBhdCBzY2hvb2wgSGVucmlrIGhhcyB0d28gYm95cywgVmFsdGVyLCAxMiwgYW5kIEhhcnJ5LCA3OyBEYW5pZWwgaGFzIHR3byBkYXVnaHRlcnMsIFJvbmphLCAxMyBhbmQgQW5uYSwgNywgcGx1cyBhIDEwIHllYXIgb2xkIHNvbiwgRXJpayB0aGVuIGl0IHRpbWUgZm9yIGx1bmNoLiBBZnRlcm5vb25zIGFyZSBob3VzZXdvcmsgb3IgZXJyYW5kcyBiZWZvcmUgcGlja2luZyB0aGUga2lkcyBiYWNrIHVwIGZyb20gc2Nob29sLnVwIGluIGEgc21hbGwgY2l0eSBpbiBTd2VkZW4sIHRoZW4gdG8gZ2V0IHRvIHBsYXkgb3ZlciBoZXJlIGFuZCB0byBnZXQgaW5kdWN0ZWQsIGVzcGVjaWFsbHkgd2l0aCB0aGUgdGVhbW1hdGVzIHdobyBhcmUgaW4gdGhlcmUgYWxyZWFkeSBpdCBhIGdyZWF0IGhvbm91ciwgaGUgc2FpZC4gCk9yIFRpbSBIb3J0b25zLlVsdGltYXRlbHksIHBvbGl0aWNzIG1heSBiZSBtb3JlIGhvbmVzdCBhbmQgdHJhbnNwYXJlbnQgc29tZWRheSB3aGVuIG9ubHkgaWRlYWxpc3RpYywgcHJpbmNpcGxlZCBwZW9wbGUgbGlrZSBXaWxzb24gUmF5Ym91bGQgYW5kIEphbmUgUGhpbHBvdHQgaG9sZCBoaWdoIGdvdmVybm1lbnQgcG9zdHMuSWYgeW91IHRoaW5rIHByaW5jaXBsZSBpcyBhbHdheXMgbW9yZSBpbXBvcnRhbnQgdGhhbiBwcmFjdGljZSwgd2hhdGV2ZXIgdGhlIGNhdXNlIG9yIGNvc3QsIHRoYXQgaG9ub3VyYWJsZS4gSWYgeW91IG5ldmVyIGNvbnRlbXBsYXRlIGpheXdhbGtpbmcgdGhhdCB5b3VyIGNhbGwgdG9vIChpZiB5b3UgZG9uIGdsYXJlIGF0IG1lKS4gCkFsc28sIGhvdyBpcyB0aGlzICJjb21wYW55IiBnZW5lcmF0aW5nIG1vbmV5PyBZb3UgbWVudGlvbiB5b3UnZCBjaGFyZ2UgMTAlLCBidXQgd2hhdCBpcyB0aGF0IGEgcGVyY2VudGFnZSBvZiBleGFjdGx5PyBUaGVyZSdzIG5vIGNhc2ggaW52b2x2ZWQgYnkgeW91ciBvd24gYWRtaXNzaW9uLiBXaG8ncyBnZXR0aW5nIHBhaWQgd2l0aCB3aGF0IG1vbmV5PyBIb3cgd291bGQgWU9VIGV2ZW4gcGF5IHRvIHN1c3RhaW4gdGhlIHBsYXRmb3JtPwpZb3UgbXVzdCBjbGVhbiBvdXQgeW91ciBjYXQncyBlYXJzIGV2ZXJ5IGRheSBhbmQgdXNlIHRoZSBtaXRpY2lkZSBleGFjdGx5IGFzIGRpcmVjdGVkICh3aGljaCBtYXkgdGFrZSBhIGZldyB3ZWVrcyBkZXBlbmRpbmcgb24gdGhlIHByb2R1Y3QpLi4gCktlZXAgdXAgdGhlIExDICBpdCBzbyBoZWxwZnVsIS4gCkp1c3QgdGFsayB0byB0aGVtIGFib3V0IGl0LiBBIG5ldyBlcmFzZXIgY2FuIGJlIGEgZm91bnRhaW4gb2YgZ29vZmluZXNzLiAiSXMgdGhhdCBjYW5keT8iICwgIk5vPyIgIldoYXQgaXMgaXQ/IiAiRXJhc2VyPyIsICJPaCwgZm9yIG1lPyIgLCBldGMuLiAKSXMgTWFuemllbCB0aGUgbWFuPyBIZSBpcyBhbHJlYWR5IHRoZSBtb3N0IGZhbW91cyAob3IgaW5mYW1vdXMpIHBsYXllciBpbiB0aGUgQ0ZMIGFuZCBoZSBoYXMgYmFyZWx5IHNlZW4gYWN0aW9uLiAKT3RoZXJ3aXNlLCBTcGlkZXkgcmVjb2duaXplcyBEZWt1IHB1bmNoIGlzIGEgbWFzc2l2ZSBkYW5nZXIgYW5kIGp1c3Qgd2VicyBoaW0gZnJvbSBhZmFyLiAKQnV0IEkgaGF2ZSByZWFzb24gdG8gdGhpbmsgdGhhdCB1bmxpa2UgdGhlIEJ1c2hpZXMsIHRoZXkgZG9uJ3QgcmVhbGx5IGJlbGlldmUgaXQ7IGl0J3MganVzdCBwb2xpdGljcy4gQnV0IHRvbyBtYW55IGNvbW1lbnRhdG9ycyBvbiB0aGUgbGVmdCBhbmQgdGhlIHJpZ2h0IGhhdmUgYWNjZXB0ZWQgdGhlIHJpZGljdWxvdXMgaWRlYSB0aGF0IHRoZSBPYmFtYSBhZG1pbmlzdHJhdGlvbiBpcyBhY3R1YWxseSBzb2NpYWxpc3QuIFRpbWUgdG8gZG8gb3VyIGhvbWV3b3JrIGFuZCBzaG93IHRoYXQgdGhlIEVtcG9yZXIgTmV3IENsb3RoZXMgbWF5IGp1c3QgYmUgdGhlIHNhbWUgb2wgbmVvbGliZXJhbCBjb24gam9iIG9mIG1ha2luZyB0aGUgcmljaCByaWNoZXIgZ3Vzc2llZCB1cCBhcyBwb3B1bGlzdCBwb2xpY3kuV2hhdCBpZiB0aGUgcmVzdWx0IG9mIGFsbCB0aGlzIGNvbnNvbGlkYXRpb24gb2YgZmluYW5jaWFsIHBvd2VyIGluIHRoZSBoYW5kcyBvZiBhIGZldyBpcyB0aGF0IHRoZSByaWNoIGdldCByaWNoZXI/IFRoZXJlIGlzIG5vIGd1YXJhbnRlZSB0aGF0IHRoZSBlY29ub21pYyBjb2xsYXBzZSBpcyBnb2luZyB0byByZXN1bHQgaW4gYSByZWRpc3RyaWJ1dGlvbiBvZiB3ZWFsdGgsIGRlc3BpdGUgdGhlIHNjcmVhbXMgb2Ygc29jaWFsaXNtIGNvbWluZyBmcm9tIEZveCBOZXdzIGNvbW1lbnRhdG9ycy5JbiBmYWN0LCBzb21lIGV4cGVydHMgYXJlIHN1Z2dlc3RpbmcgdGhhdCB3aGF0IGlzIHJlYWxseSBnb2luZyBvbiBpcyB0aGF0IGNsYXNzIGludGVyZXN0cyBhcmUgYmVpbmcgcHJvdGVjdGVkIGJ5IFNlY3JldGFyeSBHZWl0aG5lciBhbmQgaGlzIGdhbmcuIApBbmQgaXQgaXMgd29ya2luZy4gSW5kZWVkLCB0aGlzIGVudGlyZSB3ZWVrIGhhcyBiZWVuIGEgYmx1ciBvZiBpbGwgZml0dGluZyBzdWl0cywgaGFpciBkeWUsIGdvbGQgY2hhaW5zLCBwbGFzdGljIHN1cmdlcnksIGJ1bSBiYWdzIGFuZCBtYW55LCBtYW55IHdvcmRzLCBhbGwgb2YgaXQgYnVpbGRpbmcgaHlwZSBhcm91bmQgdGhlIHVubGlrZWx5IGZpZ2h0IGJldHdlZW4gYW4gYWdlaW5nIGxlZ2VuZCBhbmQgYSBxdWlldGx5IHNwb2tlbiB0ZWFjaGVyIHdobyB0b29rIHVwIGJveGluZyBhcyBhIHRlZW5hZ2VyIGJlY2F1c2UgaGUgd2FzIGdldHRpbmcgYnVsbGllZC4gCkkgdmV0b2VkIDEgY2hvaWNlLCBhbmQgUGVybWEgZ290IHBpc3N5IGFuZCBkZWNpZGVkIG5vIG9uZSBnZXRzIHZldG9lcyBub3cuIEV4Y2VwdCBoaXMgdmV0byBpcyBzdGlsbCBhbGxvd2VkLiAKT25lIG1pc3Rha2UgdGhhdCBuZXcgY29tZXJzIG1ha2UgaXMgcGxheSB0b28gbWFueSBoYW5kcy4gClMnYWdpc3NhbnQgZGUgbCdhcnRpY2xlIDY2IGRlIGxhIENvbnN0aXR1dGlvbiwgIE51bCBuZSBwZXV0IHRyZSBhcmJpdHJhaXJlbWVudCBkdGVudS4gCk9ubHkgMSB0cmlhbCBmb3IgZWFjaCBpbnRlcnZlbnRpb24pIHBhcnRpY2lwYW50cyByZWNlaXZlZCBlaXRoZXI6MS4gSW5oYWxhdGlvbiBvZiB2YXBvcmlzZWQgYXJvbWF0aWMgbWl4dHVyZSBvciB3YXRlciwyLiAKV2UgZGlkIGVuY291bnRlciBvbmUgdHlwaG9vbiB3aGVuIHdlIHdlcmUgdGhlcmUsIGJ1dCBsdWNraWx5IGEgV09OREVSRlVMIGZhbWlseSB0b29rIHVzIGluIGFuZCB3ZSBzdGF5ZWQgd2l0aCB0aGVtIGZvciBhIGNvdXBsZSBkYXlzLiAodGhhdCB0aW1lIHdhcyBhY3R1YWxseSBhIGhpZ2hsaWdodCBvZiB0aGUgdHJpcCwganVzdCBoYW5naW5nIG91dCB3aXRoIHRoaXMgZmFtaWx5IHNhZmUgZnJvbSB0aGUgcmFpbiAodGhleSBhbHNvIGZlZCB1cyBhIFRPTikpLiAKQ2xhaXJlIGlzIG5vdCBoZXIgZ2l2ZW4gbmFtZSwgb2YgY291cnNlLiAKUmVhbGl0eSB1c3VhbGx5IGhhZCBhIHdheSBvZiBpbnRlcnZlbmluZy4gQnV0SSBrbmV3IG9uZSBzZW5pb3IgcmVwb3J0ZXIgd2hvIHdvdWxkIHBsYXkgc29saXRhaXJlIG9uIGhpcyBjb21wdXRlciBpbiB0aGUgbW9ybmluZ3MsIHdhaXRpbmcgZm9yIGhpcyBlZGl0b3JzIHRvIGNvbWUgdGhyb3VnaCB3aXRoIG1hcmNoaW5nIG9yZGVycy4gCkkga25vdyB3aGF0IHlvdSB0YWxraW5nIGFib3V0IHdpdGggdGhlbSBtb3ZpbmcgZHVyaW5nIHlvZ2EuIApQYXVsIEVyZG9zIGlzIHF1aXRlIGEgY2hhcmFjdGVyLiBIZSBuZXZlciByZWFsbHkgc3RheWVkIHB1dCBhbmQgY29sbGFib3JhdGVkIHdpdGggaHVuZHJlZHMgb2YgbWF0aGVtYXRpY2lhbnMgYXMgYSByZXN1bHQuIElmIHlvdSBmYW1pbGlhciB3aXRoIHRoZSBCYWNvbiBOdW1iZXIgKHRoZSBudW1iZXIgb2YgZmlsbXMgcmVtb3ZlZCBhbiBhY3RvciBpcyBmcm9tIEtldmluIEJhY29uKSwgdGhlbiB0aGUgRXJkb3MgTnVtYmVyIGlzIHRoZSBzYW1lIHRoaW5nIGJ1dCBmb3IgbWF0aCAoYW5kIHRoZSBCYWNvbiBOdW1iZXIgd2FzIGluc3BpcmVkIGJ5IHRoZSBFcmRvcyBOdW1iZXJzKS4uIApJIHRyaWVkIGFkZGluZyBpbiBibHVmZnMgYnV0IGFwcGFyYW50bHkgSSBnaXZpbmcgb2ZmIHRlbGxzIGJlY2F1c2UgdGhleSBoYXJkbHkgaG9sZCB1cC4KSSB0aHJldyBoaW0gb3V0IG9mIG15IGhvdXNlIGFuZCBiZWF0IGhpbSBpbiBteSBkcml2ZXdheS4gClRoZSB3b21lbidzIHRlYW0gcmVjZWl2ZWQgYSBib251cyBvZiAkMS43MiBtaWxsaW9uIGFmdGVyIHdpbm5pbmcgdGhlIDIwMTUgV29ybGQgQ3VwIGluIENhbmFkYS4gCkNyZWF0ZSBkYWlseSBnb2FscyB0byBmaWxsIHlvdXIgbGlmZSB3aXRoIGhhcHBpbmVzcy4gCkJ1dCBpZiBpdCBpcyB0aGUgcmlnaHQgdGltZSwgYmFkIGhhbmRzIGNhbiB0dXJuIG91dCB0byBiZSBzdHJvbmcgYWZ0ZXIgYWxsLi4gClRoYXQgYmVpbmcgc2FpZCwgd2hpbGUgaXQgc2VlbXMgbGlrZSB5b3VyIGNvb3BlcmF0aW5nIHRlYWNoZXJzIGlzbid0IHBlcmhhcHMgdGhlIG5pY2VzdCBodW1hbiBpbiB0aGUgcGxhbmV0LCBpdCBkb2Vzbid0IHNlZW0gbGlrZWx5IHNoZSdzIGRvbmUgYW55dGhpbmcgZWdyZWdpb3VzIG9yIHdvcnRoIGxvc2luZyBzbGVlcCBvdmVyLiAKNS4gSi4gTG8gaGFzIGEgIm5pY2UiIGJ1dHQuCkZpcnN0IHRoaW5nIHlvdSBuZWVkIHRvIGRvIGlzIGdldCBwcmVhcHByb3ZlZC4gVW5sZXNzIHRoZSByZWFsdG9yIHlvdSBhcmUgd29ya2luZyB3aXRoIGlzIGEgZnJpZW5kL2ZhbWlseSBtZW1iZXIsIHJlYWx0b3JzIHR5cGljYWxseSBkb24gbGlrZSBwdXR0aW5nIHRvbyBtdWNoIGVmZm9ydCBpbiB3aXRoIHNvbWVvbmUgd2hvIGhhc24gYmVlbiBwcmVhcHByb3ZlZC4gCkkgZmVlbCBsaWtlIHRoZXkgYXJlIGEgbG90IGxlc3MgdHJvdWJsZXNvbWUgdGhhbiB0aGV5IHdlcmUgYXQgZmlyc3QuIEkgZGlkbiBsaWtlIHRoZW0gaW5pdGlhbGx5LiBJIHN0aWxsIHN3ZWFyIGF0IHRoZW0gc29tZXRpbWVzLiAKVGhlIHRocmVlIGxhcmdlIGNpcmNsZXMgc2hvdyB0aGUgZWFzdGVybiBwcm9ncmVzcyBvZiB0aGUgc3Rvcm0gb3ZlciB0aGUgdGhyZWUgZGF5cy4gUmVhZGluZ3Mgb2YgYmFyb21ldHJpYyBwcmVzc3VyZSwgYXJyb3dzIGZvciB3aW5kIGRpcmVjdGlvbiBhbmQgcmVsYXRpdmUgc3RyZW5ndGgsIGFuZCBkZXNjcmlwdGl2ZSB3b3JkcyBmb3IgcHJlY2lwaXRhdGlvbi9za3kgKHJhaW4vc2xlZXQvaGFpbC9zbm93LCBjbGVhci9mYWlyL2Nsb3VkeS9oZWF2eSkgYXJlIHByb3ZpZGVkIGluIHRoZSBjZWxscyBvZiBzbWFsbCB0YWJsZXMgKHRocmVlIG9yIGZvdXIgcm93cyBieSB0d28gb3IgdGhyZWUgY29sdW1ucykgcHJpbnRlZCBuZXh0IHRvIGVhY2ggc3RhdGlvbiBudW1iZXIuIApJIGtub3cgYSBjb3VwbGUgcGVvcGxlIHdobyBoYXZlIHJ1biBpbnRvIGRpZmZpY3VsdHkgZHVlIHRvIHRoaXMuSW4gdGVybXMgb2YgcmVhY2hpbmcgb3V0LCBtZWV0IHdpdGggeW91ciB1bmRlcmdyYWQgYWR2aXNvciBmaXJzdCBhbmQgZGlzY3VzcyB5b3VyIGludGVyZXN0LiBUaGV5IHNob3VsZCBoZWxwIHlvdSBnZXQgc3RhcnRlZC9wb2ludCB5b3UgdG93YXJkIG90aGVyIHByb2Zlc3NvcnMuIEZvciB0aGlzLCBqdXN0IHNlbmRpbmcgYW4gZW1haWwgZXhwcmVzc2luZyB5b3VyIGludGVyZXN0IGFuZCBhc2tpbmcgZm9yIGEgcXVpY2sgbWVldGluZyBzaG91bGQgYmUgZmluZS4gCkl0J3MgdGFrZW4gbWUgYSB3aGlsZSwgYnV0IEkgcmVhbGl6ZWQgTW9uaXF1ZSBIZWFydCdzIHZvaWNlIGFuZCBpbmZsZWN0aW9ucyBzb3VuZCB2ZXJ5IG11Y2ggbGlrZSBXZXNsZXkgU25pcGVzIGluIFdvbmcgRm9vLkkgdGhpbmsgdGhlIHByb2JsZW0gaXMgdGhhdCB0aGV5KHRoZSBwcm9kdWNlcnMpIGRvbiBwdXQgZW5vdWdoIGFjdHVhbCB0aG91Z2h0IGFuZCBwcmVwYXJhdGlvbiBpbnRvIHRoZSBhY3RpbmcgY2hhbGxlbmdlcyB0byBwdWxsIHRoZW0gb2ZmLiBUaGV5IHByb2JhYmx5IGhhZCBhbiBpZGVhIGZvciBhIFNleCBhbmQgVGhlIENpdHkgYWN0aW5nIGNoYWxsZW5nZSBhbmQgZXhwZWN0ZWQgaXQgdG8gYWxsIGZhbGwgaW50byBwbGFjZSBpbnN0ZWFkIG9mIHJlbWVtYmVyaW5nIHRoYXQgaWYgeW91IGhhdmUgYSBzaXQgZG93biBhY3Rpbmcgc2NlbmUgdGhhdCBzY3JpcHQgbmVlZHMgdG8gYmUgd2l0dHkgQUYgdG8gdHJhbnNsYXRlLiAKVGhpcyB3aWxsIG9ubHkgcGxheSB0aGUgc3Vycm91bmRjaGFubmVscyBvZiB0aGUgc2lnbmFsLiAKSSBzYXkgaW4gdGVybXMgb2YgdGhlIGNvZmZlZSAid2hvIGNhcmVzIGlmIHlvdSBsaWtlIGl0IGRyaW5rIGl0IGlmIHlvdSBkb24gZG9uIGFuZCBpdCBiZWNvbWVzICJ0aGlzIHdvbWFuIGlzIGltbXVuZSB0byBjcml0aWNpc20gYW5kIHlvdSBoYXZlIHRvIGRyaW5rIGhlciBjb2ZmZWUgaWYgeW91IGRyYW5rIFN0YXJidWNrcyB3aGlsZSBTaHVsdHogcmFuIGl0Ii4gTm8gb25lIHNlZW1zIHRvIHdhbnQgdG8gYWN0dWFsbHkgdW5kZXJzdGFuZCBhIHBvaW50IG9mIHZpZXcgdGhleSBkaXNhZ3JlZSB3aXRoIHRoZXkganVzdCB3YW50IHRvIGNvbnN0cnVjdCBhIHdheSB0byBtYWtlIHRoZSBwZXJzb24gdGhleSBkaXNhZ3JlZSB3aXRoIGludG8gYW4gb3RoZXIgb3Igc29tZW9uZSB0aGF0IGp1c3QgZG9lc24ga25vdy4uIApZZWFoLCB0aGF0IHJvdWdoLiBUaGUgZ2FtZSBhbHdheXMgc3VnZ2VzdHMgbG93IHBvcCByZWFsbXMgYW5kIEkgd2lzaCB0aGV5IGRpZG4gZG8gdGhhdCB0aG91Z2gsIHRoZXkgZGlkIGl0IHdpdGggRGFsYXJhbiBmb3IgbGl0ZXJhbCB5ZWFycyBhbmQgaXQgbm93IGEgaGlnaCBwb3AgcmVhbG0gSSB0aGluaywgc28gaXQgY2FuIHBpY2sgdXAgc3BlZWQgd2l0aCB0aW1lLiAKSSB0aGluayBpdCBpbXBvcnRhbnQgdG8gYmVhciBpbiBtaW5kIHRoYXQgdGhlc2UgYXJlICJicm9rZW4iIG9yICJ3b3JrZXIiIGVsZXBoYW50cy4gClRoZSBjaXR5IGhhcyA0LjIgbWlsbGlvbiBpbmNvbWUgdGF4IHBheWVycywgYnV0IGp1c3QgODcsMDAwIGluZGl2aWR1YWxzIGVhcm5pbmcgb3ZlciAyMDAsMDAwIGEgeWVhciBwYWlkIG5lYXJseSBoYWxmIHRoZSA0My44Ym4gaW5jb21lIHRheCByYWlzZWQgaW4gdGhlIGNhcGl0YWwuIApTb2xkaWVycyBkdWJiZWQgaXQgIkVhdSBkZSBDb2xvZ25lLCIgbWVhbmluZyBDb2xvZ25lIHdhdGVyLCBhZnRlciB0aGUgdG93biwgYW5kIHRoZSBuYW1lIGNvbG9nbmUgc3R1Y2sgdG8gYWxsIHBlcmZ1bWVkIHdhdGVycyBzaW5jZSB0aGVuLiAKU3Rha2Vob2xkZXJzLCB3cml0ZXMgc3RvcmllcyBhbmQgQUMsIGFuZCBhdHRlbmRzIGRlbW9zIGFuZCBhY2NlcHRzIHN0b3JpZXMuClRoZSBsYW5kIHdhcyB1bnNjYXRoZWQsIGJ1dCB0aGUgcGVvcGxlIGhhZCBzZWVuIGZpcnN0aGFuZCB3aGF0IHdhciBtZWFudCwgYW5kIHRoaXMgc2F5cyBub3RoaW5nIG9mIFRoZSBCb21iLiBGb3IgbWFueSBBbWVyaWNhbnMgdGhlIHF1ZXN0aW9uIG9mIHdoZW4gdGhlIGhvcnJvcnMgb2Ygd2FyIHdvdWxkIGNvbWUgdG8gQW1lcmljYW4gc29pbCB3YXMgbm90IGEgcXVlc3Rpb24gb2YgaWYsIGJ1dCB3aGVuLCBhbmQgd291bGQgdGhleSBiZSBhYmxlIHRvIGNvbmZyb250IGl0IHdoZW4gaXQgZGlkLiAKTGFkeSBHYWdhIGNhbiBzaW5nd2VsbCwgZG9uJ3QgZ2V0IG1lIHdyb25nIGJ1dCBCcml0bmV5IGRvZXMgaGF2ZSBzdHJvbmcgdm9jYWxzIChzaGUnc3NpbmdpbmcgbGl2ZSBub3cpIGFuZCBpcyBhIHdheSBiZXR0ZXIgZGFuY2VyLiBXaGVyZSBhcyBCcml0bmV5IGlzIGxpa2UgTWFkb25uYSB3aGVyZSBzaGUgY2FuIHN0YXlvbiB0b3AgZm9yIHllYXJzIGFuZCB5ZWFycy4gClBhbnRoZXJzIFNwb3J0cyBDbHViIHNvbGQKT25jZSB5b3UgZ28gdG8gYSBjYXNpbm8geW91IG1heSBoYXZlIHRvIGFjcXVpcmUgZHJlc3NlZCwgc2hvd2VyIChhdCBsZWFzdCB5b3UnbGwgd2FudCB0byBkbyBzbyksIGFuZCBjb3BlIHdpdGggdGhlIHB1YmxpYy4gCkFsbCB0aGUgV29ybGQncyBBIFN0YWdlSW4gTWF5IDE4ODcgVGhvbWFzIFJ1c3NlbGwgU3VsbGl2YW4ncyBoaWdobHkgaW5mbHVlbnRpYWwgc3RhZ2UgYWRhcHRhdGlvbiBvZiBEciBKZWt5bGwgYW5kIE1yIEh5ZGUgb3BlbmVkIGluIEJvc3Rvbi4gClNvbWUgcGVvcGxlIGxvdmVzIGl0LCB3aGlsZSBzb21lIG90aGVycyBoYXRlIGl0LiAKSSdkIGFyZ3VlIHRoZXkgYXJlIGVxdWFsbHkgaW1wb3J0YW50LiBPbmUgb2YgbXkgYnVkZGllcyBpcyBhIGZvcm1lciBPbHltcGljIHRyaWFscyBsZXZlbCBzd2ltbWVyIGJ1dCBoZSdzIHB1dCBvbiBzb21lIHdlaWdodCBhbmQgZG9lc24ndCBzd2ltIGFueW1vcmUuIEkgZ3VhcmFudGVlIHlvdSBpZiB3ZSB3ZW50IHRvIHRoZSBwb29sIHRvbW9ycm93IGhlIGNvdWxkIHNtb2tlIG1lIGluIGEgMTAwbSByYWNlLiAKSm9pbiB0aGUgaHVuZHJlZHMgb2YgT2tsYWhvbWEgRGl2b3JjZWQgU2luZ2xlcyBhbHJlYWR5IG9ubGluZSBmaW5kaW5nIGxvdmUgYW5kIGZyaWVuZHNoaXAgd2l0aCBzaW5nbGVzIGluIE5lYXIgTWUhIE1vdW50YWluIFNpbmdsZXMgaGFzIHNodXQgZG93biwgYXMgb2YgU2VwdGVtYmVyIDIwMTgsIGFmdGVyIGFwcHJvYWNoaW5nIGRvbWluaWNhbiBzZXh5IHdvbWVuIDEwIHllYXJzIG9mIHN1Y2Nlc3NmdWwgb3BlcmF0aW9uLiBBZHVsdEZyaWVuZEZpbmRlciBpcyB0aGUgcGxhY2UgdG8gYmUgZm9yIGZyZWUgc2V4IGFuZCBob29rdXBzIHdpdGggbG9jYWwgbWlsZiBpbmRpYW5hcG9saXMgZnVjayBidWRkaWVzIExvb2tpbmcgZm9yIG92ZXIgNTAgZGF0aW5nPyBSZWFkIDU2IEJvb2tzIFJldmlld3MgICBBbWF6b24uIFRvIGpvaW4gTWVldGluZyBBc2lhbnMsIGp1c3QgZmlsbCBvdXQgdGhlIHNob3J0IHN1Ym1pc3Npb24gZm9ybSBvbiB0aGUgaG9tZXBhZ2UgYW5kIHN1Ym1pdC4gCkkgc28gc29ycnkgdG8gaGVhciBhYm91dCB0aGUgbG9zcyBvZiB5b3VyIGRhdWdodGVyLiAKVGhlcmUgYXJlIHNwZWNpYWxpc2VkIGNoYXJpdGllcyBmb3IgUE5EIHN1ZmZlcmVyczEuIApXaGF0IHRoZSBmdWNrIGV2ZXIgaGFwcGVuZWQgdG8gaW50ZWdyaXR5PyBEZWF0aCBiZWZvcmUgZGlzaG9ub3IgZm9yIHRoaXMgZ3V5LgpGb3IgaHlwZXJ0ZW5zaXZlIGNsaWVudHMsIHlvdSBoYXZlIHRvIGJlIHZlcnkgY2FyZWZ1bC4gClBldGVyIEtyb3BvdGtpbiwgVGhlIENvbnF1ZXN0IG9mIEJyZWFkCkxlcyBmaWJyZXMgYWxpbWVudGFpcmVzLCBlbiBwYXJ0aWN1bGllciBsZXMgZmlicmVzIHNvbHVibGVzIHByc2VudGVzIGRhbnMgbGVzIGxndW1pbmV1c2VzLCBsZXMgZnJ1aXRzIGV0IGxlcyBsZ3VtZXMgcGVybWV0dGVudCBkZSByZHVpcmUgZWZmaWNhY2VtZW50IGxlIHRhdXggZGUgY2hvbGVzdHJvbC5MaW1pdGV6IHZvdHJlIGNvbnNvbW1hdGlvbiBkZSBnbHVjaWRlcyByYWZmaW5zIChzdWNyZSBldCBncmFpbnMgcmFmZmlucykgY2FyIGNlcyBkZXJuaWVycyBzb250IHVuIGZhY3RldXIgcGFydGljdWxpcmVtZW50IGFnZ3JhdmFudCBkYW5zIGxlIGR2ZWxvcHBlbWVudCBkZSBsJ2F0aHJvc2Nscm9zZSwgZGUgbCdpbmZsYW1tYXRpb24gZXQgZGUgbGEgcnNpc3RhbmNlICBsJ2luc3VsaW5lLkZhY3RldXJzIGRlIHJpc3F1ZXMgcG91ciBsYSBzYW50IGNhcmRpYXF1ZSAoYXRocm9zY2xyb3NlIGVuIHBhcnRpY3VsaWVyKUxlIHRhYmFnaXNtZVVuIHRhdXggZGUgY2hvbGVzdHJvbCBkYW5zIGxlIHNhbmcgdHJvcCBsZXYgKGVuIHBhcnRpY3VsaWVyIGRlIGNob2xlc3Ryb2wgTERMKSA/P1VuZSB0ZW5zaW9uIGFydHJpZWxsZSBsZXZlTGEgcnNpc3RhbmNlICBsJ2luc3VsaW5lVW5lIGluc3VmZmlzYW5jZSBkZSBsYSBmb25jdGlvbiB0aHlyb2RpZW5uZVVuIHN0YXR1dCBhbnRpb3h5ZGFudCBmYWlibGVVbiBmYWlibGUgdGF1eCBkJ2FjaWRlIGdyYXMgb21lZ2EgM0wnYXVnbWVudGF0aW9uIGRlIGxhIGZvcm1hdGlvbiBkZSBmaWJyaW5vZ25lVW4gZmFpYmxlIHRhdXggZGUgbWFnbnNpdW0gb3UgcG90YXNzaXVtVW4gdGF1eCBsZXYgZCdob21vY3lzdGluZUxlcyBhbmFseXNlcyBiaW9sb2dpcXVlc1Byb3RpbmUgQyByYWN0aXZlLCBIYkExYywgVFNILCBpb25vZ3JhbW1lIGV0Yy5MJ0VBTCAoZXhwbG9yYXRpb24gZCd1bmUgYW5vbWFsaWUgbGlwaWRpcXVlKSBjb21wcmVuZCBsZSBjaG9sZXN0cm9sIHRvdGFsLCBsZSBkb3NhZ2UgZHUgSERMLCBsZSBjYWxjdWwgZHUgTERMIChtYXV2YWlzKSBldCBsZXMgdHJpZ2x5Y3JpZGVzLi4gCk9mIGNvdXJzZSwgSSB3YXMgaGVhcnRicm9rZW4sIGFuZCBpdCB3b3VsZCBvbmx5IGJlIG1vcmUgaGlsYXJpb3VzIGlmIHRoYXQgd2lyeSwgc2tpbm55LCB2YWd1ZWx5IGFuZ3J5IFZpc3VhbCBCYXNpYyBwcm9ncmFtbWVyL0JCUyBvd25lci9mYXRoZXIgb2YgMyBoYWQgcHV0IG1lIGluIGEgaGVhZGxvY2sgb3IgYXJtYmFyIG9yIHNvbWV0aGluZy4gSSB3YXMgYmlnZ2VyIHRoYW4gaGltLCBidXQsIGRhbW5pdCwgaGUgc2hvdWxkIGhhdmUuCkkgZmVlbCBjb21wbGV0ZWx5IHVzZWxlc3Mgb3V0c2lkZSBvZiB0aGUgc2tpbGxzIGkgaGF2ZSBmcm9tIG15IHByZXZpb3VzIHdvcmsgZXhwZXJpZW5jZS4gVGhlcmUgbXVzdCBiZSByZXNvdXJjZXMgdG8gaGVscCB3aXRoIGZ1bmRpbmcgaWYgeW91IHdhbnQgdG8gZ28gYmFjayB0byBzY2hvb2wgKGkgaGF2ZW4gZ290dGVuIHRvIHJlc2VhcmNoaW5nIHRoYXQgYml0IHlldCkuLiAKS25hdmVuICAyIHBvaW50cyAgc3VibWl0dGVkIDIgeWVhcnMgYWdvClBlcmx1IGtpcmFueWEga2l0YS4gCkkgd2FzIGEgc2VydmVyIG9uY2UgdXBvbiBhIHRpbWUgYW5kIHRoZSBob3N0ZXNzIHNlYXRlZCBhIHNpbmdsZSBwcm9iYWJseSBob21lbGVzcyBsYWR5IGluIG15IHNlY3Rpb24uIFNoZSBvcmRlcmVkIGxhbWIgY2hvcHMgYW5kIGxlZnQgYWZ0ZXIgZWF0aW5nIGhhbGYgb2YgaXQuIEkgbmV2ZXIgc2F3IGhlciBsZWF2ZSwganVzdCBhc3N1bWVkIHNoZSB3YXMgaW4gdGhlIGxhZGllcyByb29tIHdoZW4gSSBkaWRuIHNlZSBoZXIgdGhlcmUgYW55bW9yZSB1bnRpbCBpdCBiZWNhbWUgYXBwYXJlbnQuIApJdCBhcHBlYXJzIHRoZSBoaWdoIHN0YWtlcyBnYW1lIGlzIHdvcmtpbmcuCkluIG15IG9waW5pb24gdGhlIGVkdWNhdGlvbiBzeXN0ZW0gYXMgYSB3aG9sZSBtYXkgYmVuZWZpdCBmcm9tIGdvaW5nIGRpZ2l0YWwgd2hpbGUgc3RpbGwgbWFpbnRhaW5pbmcgdGhlIGltcG9ydGFuY2Ugb2YgYXR0ZW5kaW5nIHdoaWNoIGNvdmVyIGV4cGVyaWVuY2VkIGxlYXJuaW5nLi4gClRodXMgbGF1bmNoZWQgYSBkZWJhdGUgYWJvdXQgZ2F5cyBpbiB0aGUgbWlsaXRhcnkgdGhhdCBwcmV0dHkgbXVjaCBlbmRlZCB3aGVuIHRoZSBib290aCBhdHRlbmRlZSB0b2xkIGhlciB0aGF0IGhvbW9zZXh1YWxpdHkgaXMgYSBzaW4gYW5kIHNoZSdzIGdvaW5nIHRvIGhlbGwuLiAKQW5kIGhlcmUgd2UncmUgdGFsa2luZyBhYm91dCBmYWN0b3JzIHN1Y2ggYXMgdGhlc3BlZWQgb2YgdGhlIGdhbWUsIHRoZSBlbnZpcm9ubWVudCwgdGhlIGRpc3RyYWN0aW9ucyBvciB0aGVjb252ZW5pZW5jZS4gCkFuZCB0aGVuIGFsbCBvZiB5b3Ugc2hvdWxkIGdvIGFzIGEgZ3JvdXAgYW5kIHRhbGsgd2l0aCB0aGlzIGd1eSwgYW5kIHRlbGwgaGltIHRoYXQgaGUgbmVlZHMgdG8gc3RvcCBkcmlua2luZywgZ2V0IHNvbWUgcmVhbCBoZWxwLCBvciB5b3UgYWxsIGFyZSBkb25lIHdpdGggaGltLiBBbmQgbWVhbiBpdC4uIAp0aGVuIGRyYWdnZWQgZnJvbSBzdXNwZWN0J3MgY2FyClByZWZsb3A6IEJCIGlzICQxMC4gUGxheWVyIEEgcmFpc2VzIHRvICQyNS4gTWluaW11bSByYWlzZSBmb3IgdGhlIG5leHQgcGxheWVyIGlzIGEgdG90YWwgb2YgJDQwOyB0aGUgZmlyc3QgcGxheWVyIHJhaXNlZCAkMTUgbW9yZSwgc28gdGhlIG5leHQgcGxheWVyIG11c3QgcmFpc2UgYXQgbGVhc3QgJDE1IG1vcmUuIApUaGlzIGhhcyBvY2N1cnJlZCBkZXNwaXRlIHRoZSB1c2Ugb2YgQ29kZW50aWZ5IGluLCBhY2NvcmRpbmcgdG8gaW5kdXN0cnkgY2xhaW1zLCBvdmVyIDEwMCBjb3VudHJpZXMgd29ybGR3aWRlIChvbmxpbmUgc3VwcGxlbWVudGFyeSBhcHBlbmRpeCAxKS4yMy4gCk91ciBTcGEgcGFja2FnZSBpbmNsdWRlcyB0aGUgaGlnaGVzdCBxdWFsaXR5LCBGZXJtaSBNdWQgYmVpbmcgYnJ1c2hlZCBvbiB5b3UgZm9ybSBoZWFkIHRvIHRvZSBhZnRlciB3ZSBleGZvbGlhdGUgeW91IHdpdGggeW91ciBjaG9pY2Ugb2YgYSBzdWdhciBzY3J1Yiwgc2FsdCBzY3J1YiBvciBkcnkgYnJ1c2guIEFsbCB3aGlsZSBlbmpveWluZyBZb3VuZyBMaXZpbmcgRXNzZW50aWFsIE9pbHMsIExhdmVuZGVyIE9pbCBhbmQgZmluaXNoaW5nIG9mZiB3aXRoIGhvdCB0b3dlbHMgYW5kIGEgd29uZGVyZnVsIG1hc3NhZ2Ugb2YgY3JhbmlhbCBzYWNyYWwgYW5kIHJlZmxleG9sb2d5LiBUaGlzIHBhY2thZ2Ugd2lsbCBwcm90ZWN0IGFuZCByZWd1bGF0ZSBmcm9tIG1vaXN0dXJlIGNoYW5nZXMsIHJlYmFsYW5jZSBhbmQgcmVzdG9yZSBoeWRyYXRpb24gYW5kIHByZXZlbnQgZnV0dXJlIHNraW4gZGFtYWdlLiBHaXZpbmcgeW91IHRoYXQgc21vb3RoIGxvb2suCkp1c3QgYXMgdGhleSBzaG91bGQgYmUgYXQgTWFydmVsIHdoZW4gdGhleSBpbmplY3QgdG9vIG11Y2ggY29tZWR5IGludG8gc3RvcmllcyB0aGF0IHdvdWxkIGJlZW4gbXVjaCBtb3JlIGVmZmVjdGl2ZSBpZiB0aGV5IGhhZCBmb2N1c2VkIG9uIGRyYW1hdGljIHRlbnNpb24gYW5kIGFjdGlvbiwgZXNwZWNpYWxseSB0aGlzIG9uZSBhbmQgUmFnbmFyb2suLiAKVGhlIGFjdGlvbiBjb250aW51ZXMgd2l0aCBUYWcgVGVhbXMgRXZlbnQgb24gMjNyZCBBcHJpbCB3aGVyZWluIGVhY2ggdGVhbSBjb21wcmlzZXMgb2YgdHdvIG1lbWJlcnMsIHBheXMgb25lIGJ1eSBpbiBhbmQgc2hhcmVzIG9uZSBjaGlwIGJhbmsuIEl0IHdpbGwgYmUgYSBmcmVlemVvdXQgdG91cm5hbWVudCBmZWF0dXJpbmcgYSBidXkgaW4gb2YgUnMuIApKRiBQdGFrIFNjaWVuY2UgQm9va3MgUXVpY2sgUG9zdCByZWFjaGluZyBpbWFnZSBhcHBlYXJlZCBhcyBhbiBhZCBmb3IgYSBsaWZlIGluc3VyYW5jZSBjb21wYW55ICg/KSBpbiB0aGUgcGFnZXMgb2YgTGlmZSBtYWdhemluZSBmb3IgMTk0Mi4gV2hhdCB0aGUgY29tcGFueSBsYXRjaGVkIG9uIHdhcyB0aGUgdXJhbml1bSBpc290b3BlIDIzNVUgKHVyYW5pdW0gZGlzY292ZXJlZCBpbiAxNzg5IGJ5IEtsYXByb3RoIGFuZCBpdHMgcmFkaW9hY3RpdmUgc3RhdGUgZm91bmQgYnkgSGVucmkgQmVjcXVlcmVsIGluIDE4OTYsIDIzNVUgZGlzY292ZXJlZCBieSB0aGUgbWFzcyBzcGVjdHJvbWV0ZXIgZ3V5IERlbXBzdGVyIGluIDE5MzUsIGFuZCBzb29uIGZvbGxvd2VkIGJ5IHRoZSBudWNsZWFyIGZpc3Npb24gcGFwZXIgb2YgMTkzOCBieSBIYWhuL1N0cmFzc21hbm4vTGVpdG5lcikgYW5kIGhvdyBpdCB3b3VsZCBlZmZlY3RpdmVseSBiZSB0aGUgcG93ZXIgc291cmNlICgiY2hlYXAgYW5kIHBsZW50aWZ1bCkgZm9yLCB3ZWxsLCBhIGxvdCwgaW5jbHVkaW5nIGNhcnMgYW5kIHNwYWNlZmxpZ2h0LiBBbnl3YXksIHRoZSBkcmF3aW5nIGlzIG5lYXQgZXZlbiBpZiB0aGUgRWFydGggaXMgd2F5IG91dCBvZiBwcm9wb3J0aW9uLCBhbmQgc28gb246LiAKVGhlIFR1cm4gV2hlbiB0aGUgYmV0dGluZyByb3VuZCBhZnRlciB0aGUgZmxvcCBpcyBjb21wbGV0ZWQsIHRoZSBkZWFsZXIgdHVybnMgYSBmb3VydGggY2FyZCBmYWNlIHVwIGluIHRoZSBtaWRkbGUgb2YgdGhlIHRhYmxlLiBUaGlzIGlzIGNhbGxlZCB0aGUgIlR1cm4uIiBUaGUgYmV0IGFmdGVyIHRoZSB0dXJuIGlzIG5vdyBmb3VyIGRvbGxhcnMgYW5kIGJlZ2lucyBhZ2FpbiB3aXRoIHRoZSBmaXJzdCBhY3RpdmUgcGxheWVyIHRvIHRoZSBsZWZ0IG9mIHRoZSBkZWFsZXIuIC4KSGUgYW5kIGEgZ3JvdXAgb2YgZnJpZW5kcyBjYW1lIHVwIHdpdGggdGhlIFBva2VyIFJ1biwgd2hpY2gganVzdCBoYWQgaXRzIDEydGggYW5uaXZlcnNhcnkgb24gSnVuZSA0LCAyMDE3Li4gCkkganVzdCBmaW5pc2hlZCBsaXN0ZW5pbmcgdG8gdGhlIGFsYnVtLiAKVGhlcmUgYXJlIGEgdG9uIG9mIGxhd3Mgb24gdGhlIGJvb2tzIHRoYXQgYXJlIHJhcmVseSBlbmZvcmNlZC4gUm91bmRpbmcgdXAgYW5kIGRlcG9ydGluZyBldmVyeW9uZSB3aG8gaXNuJ3QgaGVyZSB3aXRoIGZ1bGwgYW5kIHByb3BlciBkb2N1bWVudGF0aW9uICh3aGljaCB3b3VsZCBpbmNsdWRlIGEgdG9uIG9mIHBlb3BsZSB3aG8gbWFkZSBhIHBhcGVyd29yayBtaXN0YWtlIG9yIHN0YXllZCBhIGxpdHRsZSBsb25nZXIgdGhhbiB0aGV5IHdlcmUgc3VwcG9zZWQgdG8gb3IgZXRjKSB3b3VsZCBjb3N0IG1vbmV5LCBjb21lIHdpdGggYSByYWZ0IG9mIHVuYXZvaWRhYmxlIGV4Y2Vzc2VzIGxpa2Ugb3ZlcmJlYXJpbmcgIllPVVIgUEFQRVJTIFBMRUFTRSBDT01SQURFIiBlbmZvcmNlbWVudCBhY3Rpdml0aWVzLCBhbmQgd291bGRuJ3QgbWFrZSB0aGUgY291bnRyeSBzYWZlciwgcmljaGVyLCBvciBtb3JlIHNlY3VyZS4uIApZZXMsIGl0J3MgYSBwcm9maXQsIGJ1dCB0dXJuaW5nIHRoaXMgc3BvdCBpbnRvIHdpbiBtb25leSBpcyBhIGNydWNpYWwgc2tpbGwgZm9yIG1ha2luZyB5b3VyIG92ZXJhbGwgcHJvZml0IHJhdGUgb2Ygc2l0IGFuZCBnb3MgcmVhbGx5IHRha2Ugb2ZmLiAKQ2hpbGRyZW4ncyByb2NraW5nIGNoYWlyLiBUaGUgY2hpbGRyZW4ncyBzdXBwbGllcyBtYXJrZXQgaXMgYSBiaWcgaW5kdXN0cnkuIE9uZSBvZiB0aGUgbW9zdCBwb3B1bGFyIGNoaWxkcmVuJ3MgY2hhaXJzIG9uIHRoZSBtYXJrZXQgaXMgdGhlIHJvY2tpbmcgY2hhaXIuIENoaWxkcmVuJ3MgYmVkcm9vbXMsIGRheWNhcmUgY2VudGVycywgYW5kIG90aGVyIGNoaWxkIGNhcmUgZmFjaWxpdGllcyBhbG1vc3QgYWx3YXlzIGhhdmUgYXQgbGVhc3Qgb25lIHJvY2tpbmcgY2hhaXIuIFVzdWFsbHksIGEgY2hpbGRyZW4ncyByb2NraW5nIGNoYWlyIGlzIG1hZGUgZnJvbSBwbGFzdGljIHRvIGF2b2lkIHVuZm9ydHVuYXRlIGFjY2lkZW50cy4gV29vZGVuIHJvY2tpbmcgY2hhaXJzIGFyZSBtb3JlIGFwcGxpY2FibGUgZm9yIG9sZGVyIGNoaWxkcmVuLgpVbmxpa2UgdGhlIGFmb3JlbWVudGlvbmVkIHBlcmZvcm1lcnMsIEppbSBCYWxsIG9mIE9ha2xleSwgS2Fuc2FzLCBzYXlzIGhlIGhhcyBhdm9pZGVkIGxpZmUgdGhyZWF0ZW5pbmcgaW5qdXJpZXMgYnkgc3RpY2tpbmcgdG8gYSBvZiBjb25zZXJ2YXRpdmUgcm91dGluZSwgc3dhbGxvd2luZyBhIEphcGFuZXNlIHNhbXVyYWkgc3dvcmQgYWJvdXQgb25jZSBhIG1vbnRoICh0aG91Z2ggdGhyb3VnaG91dCBoaXMgbGlmZSwgaGUgaGFzIHN3YWxsb3dlZCBiYXlvbmV0cywgY2F2YWxyeSBzYWJlcnMsIGFuZCBhIHN0b3ZlIHBva2VyKS4gUmFpc2VkIGJ5IHBhcmVudHMgd2hvIHdlcmUgcHJvZmVzc2lvbmFsIHN3b3JkIHN3YWxsb3dlcnMsIGhlIGVudGVydGFpbmVkIGZlbGxvdyBBcm15IHNvbGRpZXJzIGJ5IHN3YWxsb3dpbmcgcmlmbGUgY2xlYW5pbmcgcm9kcy4gCkVpbiBXb2NoZW5lbmRlIHp1bSBOYWNoZnJhZ2VuLCBOYWNoZ3Vja2VuIHVuZCBDb25uZWN0ZW4gbWl0IGRlbiByZWdpb25hbGVuIEVyemV1Z2Vybi4uIApTdWRkZW5seSBhbGwgbXkgcGxhbnMgd2VyZSBydWluZWQuIEkgaGFkIG5vdCBiZWVuIHN0dWR5aW5nIGZvciBteSBNQ0FUcywgYW5kIGhhZCBubyBwbGFuIGZvciB3aGF0IHRvIGRvLiAKSSBnZXQgaXQuLiAKV2hpY2gsIGJ5IHRoZSB3YXksIHNoZSBjbGVhcmx5IGRpZCB0byB0cnkgYW5kIGRhbWFnZSB0aGUgcmVsYXRpb25zaGlwIGJldHdlZW4gYSBtb3RoZXIgYW5kIGhlciBjaGlsZHJlbiBmb3IgZ2V0IG93biBzZWxmaXNoIHJlYXNvbnMuIApUaGVzZSAxMDAgcGxhc3RpYyBwbGF5aW5nIGNhcmRzIGRvbid0IG9ubHkgbWFrZSBncmVhdCBnaWZ0cyBmb3IgeW91ciBjaGlsZHJlbiBhbmQgZnJpZW5kcywgdGhleSBhcmUgYWxzbyBhIGdyZWF0IGdpZnQgdG8gZ2l2ZSB5b3Vyc2VsZi4gVGhleSBhcmUgc3R5bGlzaCwgdW5pcXVlLCBkdXJhYmxlIGFuZCBnaXZlIHlvdXIgY2FyZCBnYW1lcyBhbiBlbnRpcmUgbmV3IGxvb2sgYW5kIGZlZWwuIApBbG1vc3Qgc2l4dHkgUmVzZWFyY2hlcnMsIGdpdmUgb3IgdGFrZSwgYXJlIHJlcHJlc2VudGVkIGhlcmUuIAoiV2UndmUgYWx3YXlzIGhhZCBnb29kIHRpZXMgd2l0aCB0aGUgY29tbXVuaXR5IGFuZCBhbGwgb2Ygb3VyIGZhbnMgaGVyZSBpbiBOYXNodmlsbGUuIFRoaXMgZXZlbnQgaXMgYWx3YXlzIGdyZWF0IGV2ZXJ5IHllYXIsIGl0J3MgYSBsb3Qgb2YgZ3JlYXQgcGVvcGxlIGFuZCBpdCdzIGp1c3QgaGFuZ2luZyBvdXQsIHNheWluZyBoaSBhbmQgdGFraW5nIGEgZmV3IHBpY3R1cmVzIGFuZCBpdCdzIGFsbCBmb3IgYSBncmVhdCBjYXVzZSwiIFNpc3NvbnMgc2FpZC4gIldoYXRldmVyIGltcGFjdCB3ZSBjYW4gaGF2ZSBwb3NpdGl2ZWx5LCB3ZSdsbCBnbGFkbHkgZG8gaXQuIi4gClVzZSB5b3VyIGJhY2tzdG9yeSB0byBpbmZvcm0gaG93IHlvdXIgY2hhcmFjdGVyIGZlZWxzIGFuZCByZWFjdHMgYWJvdXQgdGhpbmdzIE5PVywgYW5kIG9ubHkgdGVsbCBhIHN0b3J5IGFib3V0IHlvdXJzZWxmIHdoZW4gaXQncyBwYXJ0aWN1bGFybHkgcGVydGluZW50LiAKRWxzZXdoZXJlIGluIENhbGlmb3JuaWEsIGFuIDE4IHllYXIgb2xkIHByb3N0aXR1dGUgaXMgYXQgdGhlIGNlbnRlciBvZiBhbiBhbG1vc3QgdW5iZWxpZXZhYmxlIHBvbGljZSBzZXggc2NhbmRhbC4KTXVmZmluRmVhdHVyZXMgIDIgcG9pbnRzICBzdWJtaXR0ZWQgNSBtb250aHMgYWdvClNvIGdvIGNyeSBpbiB5b3VyIG92ZXJwcmljZWQgbGF0dGUgYW5kIGtlZXAgeW91ciB1biBpbnRlbGxpZ2VudCBvcGluaW9ucyB0byB5b3Vyc2VsZi4gTm93LCBsZXRzIGdldCBvbiB3aXRoIHR1cm5pbmcgdGhpcyB0ZWFtIGFyb3VuZCwgd2hpY2ggbWVhbnMsIHNhZGx5LCBlbGltaW5hdGluZyBCYXJyeSBhbmQgaGlzIG92ZXJwcmljZWQgc2FsYXJ5IGFuZCBnZXR0aW5nIHlvdW5nLCBlYWdlciBwbGF5ZXJzIHdobyBhY3QgbGlrZSB0aGV5IHdhbnQgdG8gd2luLiAKU3Rhcndvb2QgSG90ZWxzIFJlc29ydHMgV29ybGR3aWRlIGFuZCBpdHMgZGVzdGluYXRpb24gc2Vuc2F0aW9uIGJyYW5kLCBBbG9mdCBIb3RlbHMsIGFubm91bmNlZCBhbHNvIHRoZSBzaWduaW5nIG9mIEFsb2Z0IFN0LiAKQSBwcm9wZXJ0eSBsYXcgd2FzIHBhc3NlZCB0aGF0IGZvcmJhZGUgb3duZXJzaGlwIG9mIG1vcmUgdGhhbiBvbmUgcHJpdmF0ZSBkd2VsbGluZywgYW5kIExpYnlhbiB3b3JrZXJzIHRvb2sgY29udHJvbCBvZiBhIGxhcmdlIG51bWJlciBvZiBjb21wYW5pZXMsIHR1cm5pbmcgdGhlbSBpbnRvIHN0YXRlIHJ1biBlbnRlcnByaXNlcy4gUmV0YWlsIGFuZCB3aG9sZXNhbGUgdHJhZGluZyBvcGVyYXRpb25zIHdlcmUgcmVwbGFjZWQgYnkgc3RhdGUgb3duZWQgInBlb3BsZSBzdXBlcm1hcmtldHMiLCB3aGVyZSBMaWJ5YW5zIGluIHRoZW9yeSBjb3VsZCBwdXJjaGFzZSB3aGF0ZXZlciB0aGV5IG5lZWRlZCBhdCBsb3cgcHJpY2VzLiBCeSAxOTgxIHRoZSBzdGF0ZSBoYWQgYWxzbyByZXN0cmljdGVkIGFjY2VzcyB0byBpbmRpdmlkdWFsIGJhbmsgYWNjb3VudHMgdG8gZHJhdyB1cG9uIHByaXZhdGVseSBoZWxkIGZ1bmRzIGZvciBnb3Zlcm5tZW50IHByb2plY3RzLiBUaGUgbWVhc3VyZXMgY3JlYXRlZCByZXNlbnRtZW50IGFuZCBvcHBvc2l0aW9uIGFtb25nIHRoZSBuZXdseSBkaXNwb3NzZXNzZWQuCkhlIGRpZG4ndCBoYXZlIHRvIHdvcnJ5LiBObyBvbmUgYm90aGVyZWQgbWUsIGFuZCBubyBvbmUgYmVoYXZlZCBpbmFwcHJvcHJpYXRlbHkuIEluc3RlYWQsIEkgbWV0IGEgc2VyaWVzIG9mIHBvbGl0ZSBhbmQgZnJpZW5kbHkgbWVuLCB3aG8gY2FtZSB0byB0aGUgUmVkIFJvb3N0ZXIgYmVjYXVzZSBpdCB3YXNuJ3QgbGlrZSBvdGhlciBwbGFjZXMgaW4gVmVnYXM6IG5vIHByZXRlbnNlIGFuZCBubyBidWxsc2h0LCB3aXRoIHdlbGwgZGVmaW5lZCBydWxlcy4gU2V4IGNvdWxkIGhhcHBlbiAob3Igbm90KSBhbmQgeW91IGNvdWxkIHdhdGNoIChvciBub3QpLCBidXQgeW91IGNvdWxkIGFsc28ganVzdCBoYW5nIG91dCBxdWl0ZSBsaXRlcmFsbHksIGlmIHlvdSB3YW50ZWQgaW4gYSBwbGFjZSB3aGVyZSBwZW9wbGUgd2VyZSBkb2luZyB0aGVpciBvd24gdGhpbmcgd2l0aG91dCBqdWRnbWVudC4KSW4gdGhhdCBjYXNlLCB0aGUgbGltaXRpbmcgZmFjdG9yIGlzIG5vdCB5b3VyIGNvbm5lY3Rpb24gc3BlZWQsIGJ1dCByYXRoZXIgdGhlIHRpbWUgYW5kIG90aGVyIGxvc3NlcyB0aGF0IGFyZSBpbnZvbHZlZCBpbiBjb21tdW5pY2F0aW5nIGhhbGZ3YXkgYXJvdW5kIHRoZSBnbG9iZS4gCkhvdyBpdCBXb3Jrc1doZW4gd2UgZXhlcmNpc2UsIG91ciBtdXNjbGVzIGh1cnQuIFRoZXkgbGl0ZXJhbGx5IHRlYXIgdGhlbXNlbHZlcyBhcGFydCBhbmQgcmVidWlsZCBzdHJvbmdlciBjb25uZWN0aW9ucyBjZWxsIGJ5IGNlbGwuIApXYXNoaW5ndG9uIEF2ZSByZWdhcmRpbmcgYSB3YW50ZWQgc3ViamVjdCBvbiBzaXRlLiAKVGhlIHdheSBib3RoIGRvZ3MgcGFzc2VkIHdhcyBzbyBzaW1pbGFyIHRob3VnaCwgcGFyYWx5c2lzIHN0YXJ0aW5nIGluIHRoZSBiYWNrIGFuZCBwcm9ncmVzc2luZyB0byB0aGUgZnJvbnQsIGJyZWF0aGluZyBoZWF2eSB0aGVuIGp1c3Qgc3RvcHBpbmcgbWFrZXMgbWUgd29ycmllZCBteSBBIGhvbGUgbmVpZ2hib3IgbWF5IGhhdmUgcHV0IHNvbWV0aGluZyBpbiB0aGVpciBkcnkgZm9vZC4gCiJGb3Igb3VyIGNodXJjaCB3ZSBhcmUgaGFwcHkgdG8gZmluYWxseSBjb21wbGV0ZSB0aGlzIHN0ZXAgZm9yIHRoZSBvZmZpY2lhbCBjYWxsLiBPdGhlciB0aGFuIHRoYXQgd2UgZXhwZWN0IHJlYWxseSBub3RoaW5nIHRvIGNoYW5nZS4KV2UgbWlnaHQgaGF2ZSB0byB0cmFkZSBhIHBpdGNoaW5nIHByb3NwZWN0IHRvIGdldCBzb21lb25lLCBidXQgaXQgaXMgYmFkbHkgbmVlZGVkLiAKSSBoYXZlIGEgZmV3IHNpbWlsYXIgc3RvcmllcyBidXQgdGhlIG9uZSBpZCBsaWtlIHRvIHRlbGwgaXMgYWN0dWFsbHkgaG93IHNvbWVvbmUgaGVscGVkIG15IGZhbWlseS4gV2Ugd2VyZSBhIGZhbWlseSBvZiBmb3VyIChwbHVzIG9uZSBvbiB0aGUgd2F5KSBsaXZpbmcgc29sZWx5IG9mZiBteSBwZXR0eSBpbmNvbWUuIEkgaGFkIHJlY2VudGx5IGxvc3QgbXkgam9iIGluIGZpbmFuY2UgYW5kIHdhcyB3b3JraW5nIGFzIGEgd2FyZWhvdXNlIHdvcmtlci4gV2UgaGFkIGp1c3QgbG9zdCBvdXIgdmVoaWNsZSBhbmQgZGlkIG5vdCBoYXZlIHRoZSBtZWFucyBhdCB0aGUgdGltZSB0byBnZXQgYW5vdGhlciBvbmUuIEkgbGlzdGVkIHdoYXQgYmVsb25naW5ncyBJIGhhZCBvbiBjcmFpZ3NsaXN0LCB3aGljaCB3YXNuJ3QgbXVjaCBidXQgaG9wZWZ1bGx5IGVub3VnaCB0byBtYWtlIGEgZG93biBwYXltZW50IGF0IGEgYnV5IGhlcmUgcGF5IGhlcmUgbG90LiBJIGhhZCB0aGlzIHRyZWsgYmljeWNsZSB3aGljaCB3YXMgaW4gcHJldHR5IGdvb2Qgc2hhcGUgYnV0IG5vdCB3b3J0aCBtb3JlIHRoYW4gbWF5YmUgJDMwMC4gQmVpbmcgZmFpcmx5IGRlc3BlcmF0ZSBhdCB0aGUgdGltZSwgSSBwb3N0ZWQgaXQgZm9yICQyODAgdGhlbiBkcm9wcGVkIHRvICQyNjAuIEkgb25seSBoYWQgb25lIGJpdGUsIGEgZ2VudGxlbWFuIG9mZmVyaW5nICQyMDAgZmxhdC4gV2l0aCB2ZXJ5IGxpbWl0ZWQgb3B0aW9ucyBhdCB0aGUgdGltZSwgSSBhY2NlcHRlZCB0aGUgb2ZmZXIgYW5kIHByb3ZpZGVkIG15IGFkZHJlc3MuCkFsb25lIGRlc2VydmVzIGEgd29yZCBvZiBwcmFpc2UuIApFYXRpbmcgRXRpcXVldHRlIGZvciB0aGUgV29ya3BsYWNlCkl0J3MgTGl2ZSBMb3VuZ2UgTW9udGghIFRoaXJ0eSBkYXlzIG9mIGxpdmUgcGVyZm9ybWFuY2VzIGZyb20gdGhlIGdyZWF0IGFuZCBnb29kIG9mIHJvY2sgYW5kIHBvcCwgaW5jbHVkaW5nIEphbWVzIEJheSwgTXVzZSwgQ2h2cmNoZXMsIGFuZCBUaGUgV2Vla25kLiBBbmQgdGhhdCBnb3QgdXMgdGhpbmtpbmc6IHdobyBpbiB0aGUgaGlzdG9yeSBvZiB0aGUgTGl2ZSBMb3VuZ2UgaGFzIGJlZW4gY292ZXJlZCB0aGUgbW9zdD8gU28gd2Ugd2VudCB0aHJvdWdoIHRoZSBhcmNoaXZlcyBhbmQgY3J1bmNoZWQgc29tZSBudW1iZXJzLiBXZSByZWNrb24gdGhpcyBsaXN0J3MgcHJldHR5IGFjY3VyYXRlIChhbmQgaXQncyBpbiBvcmRlcikuIApFdmVyeSByb3VuZCB5b3UgZ2V0IGEgbmV3IHNldCBvZiBjYXJkcyBhbmQgeW91IGhhdmUgdG8gZGVjaWRlIGhvdyB0byBwbGF5IHRoZW0uIApUaGF0IGlzIHdoZW4gSSBrbm93IG15IGNhbG1pbmcgdGltZSBpcyBvdmVyLiAKRHUgaGl0dGFyIGRvbSBnZW5vbSBhdHQgdmFyYSBvdHJvbGlndCB0eWRsaWcgbWVkIG9tc3RuZGlnaGV0ZXIsIGhhbmRpa2FwcCwgdGpuc3RlciwgZnJ2bnRuaW5nYXIgb2NoIGkgcHJpbmNpcCBhbGxhIHRhbmthciBrcmluZyBkZXRhbGplci4gU2tpY2thIGRldCB0aWxsIHZhcmVuZGEgZXNjb3J0IG9jaCBpbiBob3VzZSBpIERhbm1hcmsvU3ZlcmlnZSBpIHN0b3J0IHNldHQuIEphZyBoYXIgdHJmZmF0IGVuIG9jaCBhbm5hbiBkciBuZXJlIHNvbSBmYWt0aXNrdCBhcmJldGFyIHNvbSBza3RlcnNrYS9sZHJldnJkL2Fzc2lzdGFucywgcyBkZXQgciBpbnRlIG9tamxpZ3QgYXR0IGZha3Rpc2t0IGxhbmRhIHAgZHViYmVsa29tcGV0ZW5zLiAKU2hlaWtoIFJhc2hpZCB3YXMgaGVhcmQgc2F5aW5nIGJlZm9yZSBUViBjYW1lcmFzIHRoYXQgdGhleSB3b3VsZCBub3QgdGFsayB0byB0aGUgZ292ZXJubWVudCB1bnRpbCBkb2cgd2FzIHRha2VuIG91dCBvZiB0aGUgd2VsbC4gSW1yYW4gS2hhbiBjYWxsZWQgS2h1cnNoZWVkIFNoYWgsIHdobyBpcyBrbm93biB0byBiZSB0aGUgbW9zdCBwb2xpdGUgbGVhZGVyIG9mIHRoZSBvcHBvc2l0aW9uIGV2ZXIsIHBlcnNvbmFsIHNlY3JldGFyeSBvZiBOYXdheiBTaGFyaWYuIApBbGwgdGhlIGJyZWF0aGluZyBhbmQgbWVkaXRhdGlvbiB0ZWNobmlxdWVzIEkgbGVhcm5lZCB3bnQgb3V0IHRoZSB3aW5kb3cuIApETyBOT1QgTEVUIFRIRU0gVEhJTksgVEhBVCBUSEVZIENBTiBVU0UgQk9USCBTVEFGRiBCQVRIUk9PTVMgSlVTVCBCRUNBVVNFIFRIRSBXT01FTiBCQVRIUk9PTSBIQVMgTE9OR0VSIExJTkVTLiBBbHNvLCBzdG9jayB1cCBvbiB2aXRhbWluIEMuRG8geW91IGtub3cgd2hpY2ggZ3JhZGUgeW91IHdvdWxkIGxpa2UgdG8gdGVhY2g/IEkgdGFrZSBpdCB5b3UgYXJlIHNvbWUgaG91cnMgaW50byBhIGZldyBwcmFjdGljdW1zLiAKMi8gTWFzc2FnZSBkYW5zIGxlIHNvaW46RGFucyBsJ2Vuc2VtYmxlIGRlcyBzZWN0ZXVycyBkZSBzb2lucywgY2V0dGUgcHJhdGlxdWUgcmVudHJlIGRhbnMgbGUgY2FkcmUgZCd1bmUgZG1hcmNoZSBkZSBxdWFsaXQsIGQndW4gcHJlbmRyZSBzb2luIGNlbnRyIHN1ciBsYSBwZXJzb25uZSBwbHV0dCBxdWUgc3VyIHNhIHBhdGhvbG9naWUsIGVsbGUgdHJvdXZlIHNhIGxnaXRpbWl0IGRhbnMgbGVzIHJlY29tbWFuZGF0aW9ucyBkZSBsYSBIYXV0ZSBBdXRvcml0IGRlIFNhbnQgKEhBUykgc3VyIGxlcyBzb2lucyBkJ2FjY29tcGFnbmVtZW50IGZpbiBkZSB2aWUgZXQgbGUgc291bGFnZW1lbnQgZGUgbGEgZG91bGV1ciBwYXIgZGVzIHByYXRpcXVlcyBub24gbWRpY2FtZW50ZXVzZXMuIChKb2wgU2F2YXRvZnNraSlJbCBlc3QgcGFydGljdWxpcmVtZW50YWRhcHQgYXV4IHBlcnNvbm5lcyBmcmFnaWxlcyBldCBkcGVuZGFudGVzLlF1ZWxxdWVzIGV4ZW1wbGVzIGRlIG1hc3NhZ2VzIHByb2RpZ3VzOj0+IG1hc3NhZ2Ugc3VyIGxlIGN0PT4gbWFzc2FnZSBkdSBkb3MgYXNzaXM9PiBtYXNzYWdlIGR0ZW50ZSBkZXMgbWFpbnM9PiBtYXNzYWdlIGR0ZW50ZSBkZXMgcGllZHM9PiBtYXNzYWdlIGJpZW4gdHJlIGR1IHZlbnRyZUEgZG9taWNpbGUgb3UgZW4gaW5zdGl0dXRpb25uZWwgKG1haXNvbnMgZGUgcmV0cmFpdGUsIGNlbnRyZXMgZGUgY29udmFsZXNjZW5jZSwgc3RydWN0dXJlcyBkIHNwY2lhbGlzZXMsIEhBRCwgZXRjIHBvc3NpYmlsaXRzIGRlIHByc2VuY2UgaGViZG9tYWRhaXJlICBsYSBqb3VybmUgb3UgZGVtaSBqb3VybmU7IGRldmlzIHN1ciBkZW1hbmRlIGVuIGZvbmN0aW9uIGR1IG5vbWJyZSBkZSBwYXRpZW50cy5MZXMgcHJlc3RhdGlvbnMgcHJvcG9zZXMsIGF5YW50IGNvbW1lIGludGVudGlvbiBldCBmaW5hbGl0IGxlIGJpZW4gdHJlIGRlIGxhIHBlcnNvbm5lOyBwcmF0aXF1ZXMgZW4gZGVob3JzIGRlIHRvdXQgZGlhZ25vc3RpYywgZWxsZXMgbmUgcydhcHBhcmVudGVudCBlbiByaWVuLCBuaSBkYW5zIGxlcyBjb250ZW51cywgbmkgZGFucyBsZXMgb2JqZWN0aWZzLCAgbGEgcHJhdGlxdWUgZGVzIGtpbnNpdGhyYXBldXRlcyByZHVjYXRldXJzLCBhaW5zaSBxdScgdG91dGUgcHJhdGlxdWUgbWRpY2FsZSBvdSBwYXJhbWRpY2FsZS4gRWxsZXMgc29udCBlZmZlY3R1ZXMgZGFucyBsZSByZXNwZWN0IGRlIGwnaW50Z3JpdCBwaHlzaXF1ZSBldCBtb3JhbGUuLiAKUGxheWVkIGl0IHdpdGggYSBwcmludGVkIG91dCBtYXAgYW5kIHdhbGt0aHJvdWdoLiAKVGhlIHByb3ZpbmNlLCBvbiB0aGUgb3RoZXIgaGFuZCwgaGFkIGEgdmVyeSBzdHJvbmcgc2hvd2luZyBmb3IgdGhlIHNlY29uZCBtb250aCBpbiBhIHJvdywgYWRkaW5nIDM3LDAwMCBuZXcgam9icyBpbiBGZWJydWFyeS4KSWYgeW91IGRvbid0IGxpa2UgdG8gYnJ1c2ggeW91ciBndW1zLCBvciBpZiBpdCdzIHBhaW5mdWwsIHlvdSBjYW4gYWxzbyB1c2UgeW91ciBmaW5nZXJzIHRvIG1hc3NhZ2UgdGhlbS4gCkZvdW5kYXRpb24/IFRoZSBjb25jcmV0ZSBwaWxsYXJzIG9uIHRoZSByaWdodCBhcmUgdGhlIG9sZCBzdGlsdHMuIFRoZSBob3VzZSBzYXQgb24gdGhvc2UuIFRoZSBuZXcgZm91bmRhdGlvbiBoYXMgYWxyZWFkeSBiZWVuIHBvdXJlZCwgdGhleSBoYXZlIHlldCB0byBzZXQgdGhlIHN0aWx0cyB0aG91Z2guIFNURUFMVEggRURJVC4gICBNb3N0IGhvdXNlcyBpbiB0aGlzIGFyZWEgYXJlIHJlcXVpcmVkIHRvIGJlIG9uIHN0aWx0cyBub3csIHNpbmNlIEh1cnJpY2FuZSBIdWdvIGNhbWUgdGhydSBpdCdzIGJlZW4gcG9wdWxhci4gQW55dGhpbmcgdGhhdCBpcyBhIHNsYWIgaG91c2UvZ3JvdW5kIGxldmVsIGlzIGVpdGhlciBhYm92ZSBmb29kIHRhYmxlLCBvciBpdCdzIG9sZCBhbmQgZ3JhbmRmYXRoZXJlZCBpbi4gTXkgcGxhY2Ugd2FzIGJ1aWx0IGluIDE5MTUuCklmIGZsZXhpYmxlIGhvdXJzIGFuZCBwZXJrcyBsaWtlIGdpdmluZyBzdGlwZW5kcyBmb3Igc2V0dGluZyB1cCB3b3Jrc3BhY2VzIHRvIHRlYW0gbWVtYmVycyB3aG8gbGl2ZSBtb3JlIHRoYW4gNTAgbWlsZXMgZnJvbSBhbiBvZmZpY2Ugd2VyZW4ndCBlbm91Z2gsIE5ldyBZb3JrIENpdHkgYmFzZWQgRWxpdGUgU0VNIG9mZmVycyBpdHMgc3RhZmYgdW5saW1pdGVkIHBhaWQgdmFjYXRpb24uIEVtcGxveWVlcyBhbHNvIGxhdWQgdGhlIDE2MyBwZXJzb24gZGlnaXRhbCBtYXJrZXRpbmcgc2hvcCwgd2hpY2ggaXMgbW9yZSB0aGFuIGhhbGYgKDUzIHBlcmNlbnQpIHdvbWVuLCBmb3IgaGF2aW5nIGEgImZyaWVuZGx5IGFuZCByZWxheGVkIHdvcmsgZW52aXJvbm1lbnQiIGFuZCBhbiBhcHByb2FjaGFibGUgbGVhZGVyc2hpcCB0ZWFtLiBQbHVzLCB0aGlzIGNyZXcgc3ByZWFkcyBpdHMgaGFwcGluZXNzLCBzdXBwb3J0aW5nIGNvbW11bml0eSBzZXJ2aWNlIHByb2plY3RzIHdpdGggaXRzIEdldCBVcCBMaXZlIGNvbW1pdHRlZSBhbmQgd29ya2luZyB3aXRoIHRoZSBsaWtlcyBvZiBIYWJpdGF0IGZvciBIdW1hbml0eSBhbmQgUm9uYWxkIE1jRG9uYWxkIEhvdXNlLgpUaGV5IHZvdGVkIGZvciBHb2xkd2F0ZXIgYmVjYXVzZSBvZiBoaXMgSmVmZmVyc29uaWFuIHN0YXRlIHJpZ2h0cyBzdGFuY2UsIG5vdCBhbiBhbnRpIGJsYWNrIHN0YW5jZS4gR29sZHdhdGVyIHdhcyBpbiBubyB3YXkgZXZlciBhIHJhY2lzdC4gCk5vdyB5b3Ugd29uJ3QnIGhhdmUgdG8gd29ycnkgYWJvdXQgdGhhdC4gCkFsdGhvdWdoIGJvdGggY29uZGl0aW9ucyBoYXZlIHRoZSBzYW1lIHN5bXB0b21zLCBhIFlvcmtpZSBleHBlcmllbmNpbmcgdHJhY2hlYWwgY29sbGFwc2Ugd2lsbCBtYW5pZmVzdCBtb3JlIGRhbmdlcm91cyBzeW1wdG9tcyB3aGlsZSBvbmUgc3VmZmVyaW5nIGZyb20gcmV2ZXJzZSBzbmVlemluZyB3aWxsIG5vdC4gCkkgd2lsbCBuZXZlciBnaXZlIHVwIGluIHRoZSBmYWNlIG9mIGFkdmVyc2l0eSwgd2hlbiB3aGF0IHdlIGtub3cgYXMgZ29vZCBhbmQgbW9yYWwgaXMgdW5kZXIgYXNzYXVsdC4uIApUaGUgUG9zdCdzIFN0ZXZlIEN1b3p6byByZXBvcnRlZCB0aGF0IHRoZSBuZWlnaGJvcmluZyBLUEYgZGVzaWduZWQgNTUgSHVkc29uIFlhcmRzLCB3aGljaCBpcyBtYWpvcml0eSBvd25lZCBieSBNaXRzdWkgRnVkb3NhbiwgbWF5IHNvb24gaG9zdCBBcHBsZSdzIG9mZmljZXMuIApJJ20gc3VwZXJpb3IhV2hhdCBZb25hZ2kgaXMgYWN0dWFsbHkgdGhpbmtpbmc6IEhvdyBjYW4gSSBiZWNvbWUgZnJpZW5kcyB3aXRoIHRoZW0/SSB1bmRlcnN0YW5kIHdoeSBZb25hZ2kgbmVlZHMgYSBzZW5zZSBvZiBub3JtYWxpdHkgYWZ0ZXIgYWxsIHRoZSB0aGluZ3MgdGhhdCBoYXBwZW5lZCBidXQgc2hlIHN1cmUgZG9lc24ndCBrbm93IGhvdyB0byBtYWtlIGZyaWVuZHMsIGJldHRlciBzYXksIHNoZSdzIGNvbXBsZXRlbHkgdW5hd2FyZSBvZiBob3cgaGVyIG5ldyBzdGF0dXMgYWZmZWN0IGhlciBhYmlsaXR5IHRvIG1ha2UgZnJpZW5kcy4gCkFNRCBhYmFuZG9uZWQgdGhlIFBDIGdhbWluZyBHUFUgbWFya2V0IGZvciBjb25zb2xlcywgYmVjYXVzZSBpdCB3YXMgY2xlYXIgdGhhdCBQQyBnYW1lcnMgYXQgbGFyZ2UgaGFzIGRlY2lkZWQgdG8gYmV0IG9uIE52aWRpYSBubyBtYXR0ZXIgd2hhdC4gQ29uc29sZXMgZ2F2ZSB0aGVtIGEgcHJlZGljdGFibGUgeW95IHJldmVudWUgc3RyZWFtIHRoYXQga2VwdCB0aGUgY29tcGFueSBhZmxvYXQgZm9yIFplbi4gVGhpcyBzdWJyZWRkaXQgaXMgYSBtaW5vcml0eS4gVGhlIHdvcmxkIGF0IGxhcmdlIHRoaW5rcyBBTUQgaXMgc2Vjb25kIHJhdGUgYW5kIHRoZWlyIHByb2R1Y3RzIGFyZSBob3QsIHBvd2VyIGh1bmdyeSwgdGVycmlibGUgb3V0IG9mIHRoZSBib3ggYW5kIHRha2UgdG9vIGxvbmcgdG8gcmVhY2ggcGFyaXR5IHRvIHRoZWlyIGNvbXBldGl0b3JzIG9mZmVyaW5ncy4gVW5mb3J0dW5hdGVseSwgZGVzcGl0ZSBhbGwgdGhlaXIgY2hhbmdlcywgdGhpcyBpcyBtb3N0bHkgdHJ1ZS4KVGhleSBoYXZlIGEgdG93ZWwgY2FyZCBzeXN0ZW0gdGhlcmUgYnV0IHlvdSBjYW4gdGFrZSB0d28gdG93ZWxzIGVhY2guIFRoZSB3YWxrIHRvIHRoZSBib2F0IGZvciBSZW5haXNzYW5jZSBJc2xhbmQgaXMgbGl0ZXJhbGx5IGZpdmUgbWludXRlcyBvciBsZXNzLiBJZiB5b3UgYXJlIGZhY2luZyB0aGUgb2NlYW4gZ28gcmlnaHQgYWxvbmcgdGhlIHBhdmVkIHBhdGggYW5kIHlvdSB3aWxsIHNlZSBhIHNtYWxsIGJvYXQgbGF1bmNoIGFyZWEgd2l0aCBzb21lIGNvdmVyZWQgc2VhdGluZy4gClRoaXMgY291cGxlZCB3aXRoIGhpcyBjb25mcm9udGF0aW9uIHdoZXJlIGhlIHJlbWluZHMgQWRvcmEgaGUgbG9zdCBhIGRhdWdodGVyIHRvbyBqdXN0IGFkZHMgdG8gdGhlIGVlcmluZXNzIG9mIHRoYXQgd2hvbGUgcG93ZXIgZHluYW1pYy4uIApMaWtlIHJveWFsIHNpYmxpbmdzIHdhcnJpbmcgb3ZlciBhIGJpcnRocmlnaHQsIExvbmdtb250IGFuZCBMZXdpcyBQYWxtZXIgYm90aCByb3NlIHVuYmVhdGVuIHRvIHRoZSB0b3Agb2YgdGhlIDRBIGNsYXNzaWZpY2F0aW9uIGFuZCB0aHJldyBldmVyeXRoaW5nIHRoZXkgaGFkIGF0IGV2ZXJ5b25lIHdoaWxlIHByZXAgYmFza2V0YmFsbCBmYW5zIHdhdGNoZWQgZnJvbSBhYm92ZSBpbiB0aGUgRGVudmVyIENvbGlzZXVtIHN0YW5kcywgYXMgd2VsbCBhcyBmcm9tIGFsbCBjb3JuZXJzIG9mIENvbG9yYWRvLiAKV2VsbCwgb25lIG9mIHRoZSBkYXVnaHRlcnMgZGVjaWRlZCB0byBmaWd1cmUgb3V0IHdoYXQgd2FzIGdvaW5nIG9uIGFuZCBzaGUgc2VudCB1cCB0aGUgZWxldmF0b3IuIE5vYm9keSB3YXMgaW4gaXQgdG8gc3RvcCBpdCwgYW5kIHlvdSBjYW4gc3RvcCBpdCBmcm9tIHRoZSBvdXRzaWRlLiAKVGhlIGZpcnN0IHRpbWUgSSBoYWQgc2V4LCBldmVyeXRoaW5nIHN1cnByaXNlZCBtZSwgYnV0IHR3byB0aGluZ3MgaW4gcGFydGljdWxhcjogT25lIHdhcyB0aGF0IGNvbmRvbXMsIGlmIG9wZW5lZCBxdWlja2x5LCBjYW4gc2hvb3QgYXQgeW91ciBmYWNlIGxpa2UgYSB0YXV0IHJ1YmJlciBiYW5kLCBhbmQgdGhlIG90aGVyIHdhcyB0aGF0IHRob3NlIGVyb3RpYyBtb2FueSBzb3VuZHMgdGhhdCBJIGFzc3VtZWQgY2FtZSBvdXQgb2YgYWxsIHdvbWVuIG1vdXRocyBkdXJpbmcgc2V4IHdlcmUsIGZvciBzb21lIHJlYXNvbiwgbm90IGNvbWluZyBvdXQgb2YgbWluZS4KSSBzdWdnZXN0IGp1c3QgZ29pbmcgYWxsIGluIHJpZ2h0IGF3YXksIGFsbCB5b3UgaGF2ZSB0byBkbyBpcyBqdXN0IGdldCBvbmUgb3Bwb25lbnQgb3V0IGluIGVhY2ggbG9jYXRpb24uIFRoaXMgaXMgZG9uZSBieSBtYWtpbmcgYW4gb3Bwb25lbnQgZ28gYWxsIGluIGFuZCB5b3Ugd2luaW5nIHRoZSBiaWcgcG90IG9mIGNoaXBzLiBOb3QgbXVjaCBvZiBhIHB1bmlzaG1lbnQgaWYgeW91IGxvb3NlIHRoZSByb3VuZC4gCkxvd2UncyBjbG9zaW5nIDMxIENhbmFkaWFuIHN0b3JlcwpOb3QgYWxsIHRoZSByZWNvcmRzIGhhZCBiZWVuIHByZXNlcnZlZC4gVGhlIEZCSSBiZWdhbiBwdWJsaXNoaW5nIHRoZSBjYXNlIGZpbGUgb24gaXRzIHdlYnNpdGUgaW4gbGF0ZSAyMDE3ICAgYnV0IG1vc3Qgb2YgdGhlIGRvY3VtZW50cyBhcmUgaGVhdmlseSByZWRhY3RlZC4gVGhlIGZpbGVzIGRpZCwgaG93ZXZlciwgeWllbGQgc29tZSBmcmVzaCByZXZlbGF0aW9ucy4KQnkgbmF0dXJlLi4gCjEgPiBmZVdpICBSZWxhdGVkIG5ld3MgcGFnZSAyNSB0ZiA6dGhlIGNvdXJ0LCB0aGUganVyeSBhbmQgdGhlIHByb3NlY3V0aW5nIGF0dG9ybmV5LiIgU3R1YXJ0LCBjaGFyZ2VkIHdpdGggZmlyc3QgZGVncmVlIG11cmRlciwgd2FzIGZvdW5kICdndWlsdHkgbGFzdCBGcmlkYXkgb2Ygc2Vjb25kIGRlZ3JlZSBtdXJkZXIgb2YgTGFycnkgUm9kZyAgZXJzLCAzMCwgb2YgNjUwIExvZGkgU3QuLCBFbHlyaWEsIG9uIE9jdCA2IGF0IDQxNDkgQmVsbGUgQXZlLiwgU2hlZmZpZWxkIExha2UsIHRoZSBob21lIG9mIFN0dWFydCdzIGVzdHJhbmdlZCB3aWZlLCBCZXYgIC4nZXJseS4gCiJJIHdvdWxkIG5ldmVyIGdvLiAKV2UgYmUgZm9yZXZlciBncmF0ZWZ1bCwgYnV0IEZvbGVzIGlzIHZlcnkgc3RyZWFreS4gCiJJIGJlbGlldmUgaGUgY291bGQgaGF2ZSBkb25lIHRoZSBmaWZ0aCByb3VuZC4gCkZsb3AgcmFpc2UgaXMgZ3JlYXQuIG5vcm1hbGx5IHlvdSB3YW50IHRvIGNhbGwgd2l0aCBtaWQvYm90dG9tIHBhaXIgKyBmZCBoYW5kcywgYnV0IHRoaXMgY2FzZSBpcyBtdWNoIGRpZmZlcmVudCwgeW91IGhhdmUgbm8gc2hvd2Rvd24gdmFsdWUgaGVyZSAzIHdheXMsIHlvdSBibG9jayBtaWQgc2V0ICwgaXRzIHRoZSBib3R0b20gRkQsIHNvIGl0cyBiZXR0ZXIgdGhlbiBzYXkgdGhlIG1pZGRsZSBGRHMgdG8gYmx1ZmYgd2l0aC4gKFlvdSBkb250IHJlYWxseSBibG9jayB0aGVyZSBmbHVzaGRyYXdzIHRoYXQgbWlnaHQgZm9sZCksIFlvdSBjYW4gdHVybiBzb21lIHN0cmFpZ2h0IGRyYXdzLzJwL3RyaXBzCkluIGdlbmVyYWwsIHlvdSBjYW4gY2hvb3NlIGZyb20gcGxhc3RpYywgY2xheSwgY2VyYW1pYywgYW5kIGV2ZW4gd29vZC4gClBhZ2Ugd2FzICJNaXNzIEphbnVhcnkgMTk1NSIsIG9uZSBvZiB0aGUgZWFybGllc3QgUGxheW1hdGVzIG9mIHRoZSBNb250aCBmb3IgUGxheWJveSBtYWdhemluZS4gIkkgdGhpbmsgdGhhdCBzaGUgd2FzIGEgcmVtYXJrYWJsZSBsYWR5LCBhbiBpY29uaWMgZmlndXJlIGluIHBvcCBjdWx0dXJlIHdobyBpbmZsdWVuY2VkIHNleHVhbGl0eSwgdGFzdGUgaW4gZmFzaGlvbiwgc29tZW9uZSB3aG8gaGFkIGEgdHJlbWVuZG91cyBpbXBhY3Qgb24gb3VyIHNvY2lldHksIiBzYWlkIFBsYXlib3kgZm91bmRlciBIdWdoIEhlZm5lciB0byB0aGUgQXNzb2NpYXRlZCBQcmVzcyBpbiAyMDA4Li4gClNIRUxCWSBDTy4sIEFMIChXU0ZBKSAgIEl0IG1heSBiZSBldmVyeSBsaXR0bGUgZ2lybCdzIGRyZWFtIHRvIGhhdmUgYSBmYWlyeXRhbGUgd2VkZGluZyBidXQgaW4gU2hlbGJ5IENvdW50eSBBbGFiYW1hLCBvbmUgaHVzYmFuZCBhbmQgd2lmZSB0ZWFtIGlzIG1ha2luZyB0aGF0IHBvc3NpYmxlLgpNYXJzIGhhcyBhYm91dCAzOCUgb2YgRWFydGggZ3Jhdml0eS4gV2hpY2ggbWVhbnMgdGhhdCBzaW5jZSB0aGUgTW9kZWwgMyBjYW4gZG8gNjA2IG1pbGVzIG9uIGEgc2luZ2xlIGNoYXJnZSwgd2hpbGUgZGVhbGluZyB3aXRoIDEgR3Jhdml0eSBhbmQgYWlyIHJlc2lzdGFuY2UuIApPcmFsIGFuYWwgbG92ZW1ha2luZyBpcyBwb3B1bGFybHkga25vd24gYXMgcmltbWluZy4gW1NlZSBteSBwb3N0IEFuYWxpbmd1czogVGhlIERhcmsgS2lzcy5dIFRoZSB2ZXJ5IGlkZWEgZGlzZ3VzdHMgc29tZSBwZW9wbGUuIApDciBKb2huIE11cnJheSBzYWlkIGFjcXVpcmluZyB0aGUgbWFjaGluZXMgd2FzICcnYSBjb21wbGV4IGlzc3VlJycgYW5kIGEgdGVuZGVyIHByb2Nlc3Mgd291bGQgd29yayBhZ2FpbnN0IHRoZSBjb3VuY2lsIGFuZCBjb3N0IGl0IG1vcmUgbW9uZXkuIApIYXJ2ZXkgUmVudHplbC4gTXIuIGFuZCBNcnMuIEpvaG4gVy4gQmxhY2sgYW5kIGRhdWdodGVyLCBEb3JvdGh5LCBhbmQgR2xlbm4gSmVmZiAgY29hdCBhdHRlbmRlZCB0aGUgQ2hpbGRyZW4ncyBEYXkgc2VydiAgaWNlcyBoZWxkIGF0IE10LiBKb3kgY2h1cmNoIG9uIFN1bmRheSBtb3JuaW5nLiBNci4gYW5kIE1ycy4gQ2hhcmxlcyBKLiBNaWxsZXIgYW5kIG1lcidzIG1vdGhlciwgTXJzLiBTaW1vbiBGdW50LiBNci4gYW5kIE1ycy4gQ2hhcmxlcyBIYXJtb24gYW5kIHNvbiwgUGF1bCwgb2YgSGFtcHRvbiwgdmlzaXRlZCBNcnMuIApUaGUgZGlmZmVyZW5jZSBpbiBzcGVlZCBpcyBtb3N0IHByb25vdW5jZWQgbGF0ZSBpbiB0aGUgdHJpYWxzLCB3aGVuIHRoZSBjeWNsaXN0cyBhcmUgaW4gdGhlIG1vc3QgcGFpbi5NYW55IGhhdmUgYmVlbiB0dW5pbmcgaW4gdG8gdGhlIFdpbnRlciBPbHltcGljIEdhbWVzIGFuZCBkdXJpbmcgdGhlIGV2ZW50cywgd2UgdW5kb3VidGVkbHkgd2lsbCBzZWUgbm90IG9ubHkgZWZmb3J0cyBvZiBhdGhsZXRpY2lzbSBhbmQgdmFsb3IsIGJ1dCBhbHNvIHBvdGVudGlhbGx5IHBhaW5mdWwgY3Jhc2hlcyBhbmQgaW5qdXJpZXMuIApQbGVhc2UgcmV2aWV3IHRoZSBUZXJtcyBvZiBVc2UgYmVmb3JlIHVzaW5nIHRoaXMgc2l0ZS4gClRha2luZyBhZHZhbnRhZ2Ugb2YgdGhlIHNpdHVhdGlvbiwgTW9kaSByZXBvcnRlZGx5IHByb3Bvc2VkIHRvIE5hd2F6IFNoYXJpZiAid2h5IGNhbid0IHdlIGJlIGxpa2UgbGVhZGVycyBpbiBFdXJvcGUsIHdobyBtZWV0IGVhY2ggb3RoZXIgZm9yIGNhc3VhbCBnZXQgdG9nZXRoZXJzIGFuZCBjaGF0cz8iIFRoZSBKYXRpIFVtcmEgJ3RhbGsnIHdhcyB0aGUgYmVnaW5uaW5nIG9mIHRoZSBmcmllbmRseSBlbmdhZ2VtZW50LiAKRmxpZ2h0LCBidXQgdGhleSBoYXZlIHRvIHB1dCBlZmZvcnQgaW50byBpdCBlZyB0aGV5IGh1ZmYgYW5kIHB1ZmYgbGlrZSB0aGV5IHJ1bm5pbmcgYW5kIGFycml2ZSBzd2VhdHkgYW5kIG91dCBvZiBicmVhdGguIEhlYXQgY29udHJvbCwgYnV0IHlvdSBjYW4gY3JlYXRlIGZpcmUgb3IgaWNlLCB5b3UgY2FuIG9ubHkgbW92ZSBoZWF0IGFyb3VuZCBlZyB5b3UgY2FuIGJ1cm4gYSB0cmVlIGJ1dCBoYXZlIHRvIGZyZWV6ZSBhIHBvbmQgdG8gZG8gc28uIApZb3UgcHJldHR5IG11Y2gganVzdCBhc2tpbmcgdG8gb25seSBnZXQgY2FsbGVkIGJ5IGJldHRlciBoYW5kcyBvciwgYXQgYmVzdCwgaGFuZHMgd2l0aCB2ZXJ5IGhpZ2ggZXF1aXR5LCBsaWtlIHBhaXIgKyBmbHVzaCBkcmF3LiAKRXhwZXJpZW5jZSB0aGUgYmVzdCBoYXBwaW5lc3MgYW5kIGVuam95IGxpZmUgdG8gdGhlIGZ1bGxlc3QuIApUaGUgdGhyZWUgbWFudWZhY3R1cmVycyB0aGF0IGFyZSBnZW5lcmFsbHkgdXNlZCBieSBMYXMgVmVnYXMgY2FzaW5vcyBhcmUgUGF1bCBTb24sIENoaXBjbywgYW5kIEJ1ZCBKb25lcy4gVGhleSBhbGwgdXNlIGRpZmZlcmVudCBtYW51ZmFjdHVyaW5nIHByb2Nlc3Nlcy4gVGhlIHRlY2huaXF1ZSB1c2VkIGJ5IFBhdWwgc29uIGlzIGEgY29tcHJlc3Npb24gbW9sZCBzeXN0ZW0sIHVzaW5nIGV4dHJlbWUgcHJlc3N1cmUgdG8gZnVzZSB0aGUgY29sb3JzIGludG8gYSBzb2xpZCBwaWVjZS4gd2l0aCB1bmV2ZW4gc3RyaXBlcyBvZiBjb2xvciBvbiB0aGUgdmVyeSBlZGdlIG9mIGVhY2ggY2hpcCAoaWYgeW91IHBsYXkgcG9rZXIgaW4gVmVnYXMsIHlvdSBoYXZlLCBubyBkb3VidCwgc2VlbiBwbGF5ZXJzIHRyeWluZyB0byBzdGFjayB0aGVpciBjaGlwcyBieSBldmVuaW5nIG91dCB0aGUgc3RyaXBlcyBvbiB0aGUgZWRnZXMgb2YgZWFjaCBjaGlwISkuClJlbmV3IFNhbG9uClRob3NlIHdobyB0cmVhdCB3aXRoIEVDVCBhcmUgdGhlIHZlcnkgb25lcyB0cnlpbmcgdG8gY29tZSB1cCB3aXRoIG5ldyB0cmVhdG1lbnQgb3B0aW9ucyB0aGF0IGRvbid0IGNhcnJ5IHRoZSBzYW1lIHJpc2tzLi4gCkFwcGxpY2F0aW9uIFByb2Nlc3MgSWYgeW91J3JlIGFwcGx5aW5nIGZvciBjZXJ0aWZpY2F0aW9uIHZpYSB0aGUgT2hpbyBFUEEgZXhhbSBwcm9ncmFtLCB5b3Ugc3VibWl0IHlvdXIgYXBwbGljYXRpb24gdG8gdGhlIEVQQSwgY2hvb3NpbmcgeW91ciBwcmVmZXJyZWQgZXhhbSBkYXRlLiAKQW5kIENoaW5hIGFyZSBtYWtpbmcgcHJvZ3Jlc3Mgb24gZW5kaW5nIHRoZWlyIGxlbmd0aHkgdHJhZGUgZGlzcHV0ZS4gClRoZW4gc2hlIHdpbGwgZmlsZSBoZXIgbWFzc2l2ZSBicmllZi4gQW5kIGJlY2F1c2UgaXQgd2lsbCBiZSBtYXNzaXZlLCB3aXRoIGRvemVucyBvZiBhcmd1bWVudHMsIHRoZSBTdGF0ZSB3aWxsIGFzayBmb3IgYW5kIGdldCBtdWx0aXBsZSBleHRlbnNpb25zIG9mIHRpbWUuIEFmdGVyIHdoaWNoIHRoZSBDT0Egd2lsbCBwcm9iYWJseSB0YWtlIGF0IGxlYXN0IGEgeWVhciBtYWtpbmcgYSBkZWNpc2lvbi4uIApCdXQgaXMgaGVyIGFja25vd2xlZGdpbmcgaGVyIGxvdmUgZm9yIGhlciBjaGlsZHJlbiByZWFsbHkgYSBiYWQgdGhpbmc/SSdtIG5vdCBDYXRlJ3MgYmlnZ2VzdCBmYW4uIApCdXQgaGlzIGV5ZXMsIGRpbW1lZCBhIGxpdHRsZSBieSBtYW55IHBhaW50bGVzcyBkYXlzLCB1bmRlciBzdW4gYW5kIHJhaW4sIGJyb29kIG9uIG92ZXIgdGhlIHNvbGVtbiBkdW1waW5nIGdyb3VuZC4uIApPbmx5IGluIFZlZ2FzIEkKVXNlRGFTY2h3YXJ0eiAgMywzMjYgcG9pbnRzICBzdWJtaXR0ZWQgMjIgZGF5cyBhZ28KIlNoZSBsb3ZlcyB3b3JraW5nIG91dCB3aXRoIGhlciBzaXN0ZXJzIGFuZCB0aGV5IG1vdGl2YXRlIGhlciBhIGxvdCwiIHNheXMgdGhlIHNvdXJjZS4gCkNvZHkgZmFpbGVkIHRvIGdyYXNwIHRoZSBzdHJhdGVnaWMgc2l0dWF0aW9uLCBhcyB0aGUgSmVkaSBNYXN0ZXIgZWxldmF0aW9uIHdhcyBzdXBlcmlvciB0byBoaXMgYnkgaHVuZHJlZHMgb2YgbWV0ZXJzLCBtYWtpbmcgaGltIHZpcnR1YWxseSB1bmtpbGxhYmxlIChZb3Ugbm90aWNlIHRoYXQgYWxsIHRoZSBKZWRpIGtpbGxlZCBpbiBPcmRlciA2NiB3ZXJlIG9uIGxldmVsIGdyb3VuZCB3aXRoIHRoZSBjbG9uZXMsIHRoZXJlYnkgYXNzdXJpbmcgdGhlaXIgZGVtaXNlKS4gSGFkIENvZHkgdGFrZW4gaGlzIHRpbWUgYW5kIGVuZ2FnZWQgdGhlIEplZGkgb24gZXZlbiB0ZXJyYWluLCBoZSB3b3VsZCBoYXZlIHN1Y2NlZWRlZC4gCkFzIGFuIGFzaWRlLCB0aGVyZSBhcmUgYSBudW1iZXIgb2YgYXBwbGljYXRpb25zICggY291Z2gsIE1TVkMrKyBydW50aW1lcywgY291Z2gpIHRoYXQgaW5jbHVkZSB0aGVpciB2ZXJzaW9uIGF0IHRoZSBlbmQgb2YgdGhlaXIgbmFtZS4gV2UgY2FuIHRyaW0gdGhvc2Ugb3V0IHdpdGggYSByZWd1bGFyIGV4cHJlc3Npb24gaW4gYSBGb3JFYWNoIE9iamVjdCBzY3JpcHQsIG9yIGJ5IGltcHJvdmluZyBvdXIgU2VsZWN0IE9iamVjdC4gCkFwcHJlY2lhdGVkIHBsYXlpbmcgdGhpcyByaWdodCBhZnRlciBaTSBmb3IgY29tcGFyaXNvbidzIHNha2UuIEl0IHJlYWxseSBkb2VzIHNob3cgaXRzIGFnZSB0aG91Z2ggICB2ZXJ5IGFyY2hhaWMuIFdoaWxlIEkgZGlkIGhhdmUgYSBnb29kIHRpbWUgd2l0aCBpdCwgaXQncyByZWFsbHkgbW9yZSBvZiBhbiBpbnRlcmVzdGluZyBoaXN0b3JpY2FsIGFydGlmYWN0IHRoYW4gYW4gYWN0dWFsbHkgZ29vZCBnYW1lIHRoZXNlIGRheXMuIFBsYXllZCBpdCB3aXRoIGEgcHJpbnRlZCBvdXQgbWFwIGFuZCB3YWxrdGhyb3VnaC4gQWJzb2x1dGVseSBjYW5ub3QgaW1hZ2luZSBwbGF5aW5nIGl0IGJsaW5kIGluIHRoaXMgZGF5IGFuZCBhZ2UsIHdpdGggZXZlcnkgY29ycmlkb3IgbG9va2luZyB0aGUgc2FtZS4KVGhlbiBvbmNlIHNvbWVib2R5IGJyaW5ncyBpdCB1cCwgeW91J3JlIGxpa2UsIG9oIG15IGdvZCwgb2YgY291cnNlIHRoZXkgc2hvdWxkIHRvdGFsbHkgYmUgZG9pbmcgdGhhdC4uIApKZW9uanUgdG8gR3llb25nanU6IExvb2tpbmcgYXQgdGhlIG1hcCBJIGxpbmtlZCBhYm92ZSwgZG8gSSBqdXN0IHRha2UgdHJhaW4gZnJvbSBKZW9uanUgdG8gT3NvbmcsIE9zb25nIHRvIFNpbmd5ZW9uZ2p1PyBUaGVuIHRha2UgYnVzIHRvIEd5ZW9uZ2p1PyAoSSBoZWFyZCB0aGF0IGJ1cyB3b3VsZCB0YWtlIDE1IG1pbnV0ZXM/KQpTb2xlaWwgdHJhZGVzIG9uIGFuIHVuYmVhdGFibGUgbG9jYXRpb24KSW1hZ2luZSB0aGF0LiBEZXNwaXRlIGJlaW5nIG9uZSBvZiB0aGUgYmlnIHdpbm5lcnMgYXQgdGhlIHRyYWRlIGRlYWRsaW5lLCBDb2x1bWJ1cyBjb3VsZCBlbmQgdXAgYXMgaXRzIGJpZ2dlc3QgbG9zZXIuIApBbmQgQ2FuYWRhIGhhdmUgZ3Jvd24gbW9yZSB0aGFuIGZpdmUgZm9sZCBmcm9tICQ1MyBiaWxsaW9uIHRvICQzMTkgYmlsbGlvbiBpbiAyMDE1LiBGb3JlaWduIERpcmVjdCBJbnZlc3RtZW50IGluIE1leGljbyBoYXMgYWxzbyBpbmNyZWFzZWQsIGZyb20gYSBjdW11bGF0aXZlIHRvdGFsIG9mICQxNyBiaWxsaW9uIGluIDE5OTQgdG8gJDEwMS41IGJpbGxpb24gaW4gMjAxMywgYW4gYWxtb3N0IHNpeCBmb2xkIGluY3JlYXNlLCBiZWNhdXNlIG9mIHRoZSBOQUZUQSByZWxhdGVkIGxpYmVyYWxpemF0aW9uIG9mIE1leGljbydzIHJlc3RyaWN0aW9ucyBvbiBmb3JlaWduIGludmVzdG1lbnQgaW4gdGhlIGxhdGUgMTk4MHMgYW5kIHRoZSBlYXJseSAxOTkwcy4gT3ZlciB0aGUgc2FtZSBwZXJpb2QsIHRoZSBjdW11bGF0aXZlIHN0b2NrIG9mIE1leGljYW4gRkRJIGluIHRoZSBVbml0ZWQgU3RhdGVzIGluY3JlYXNlZCBlaWdodCBmb2xkLCBmcm9tIGEgbWVyZSAkMi4wNjkgYmlsbGlvbiBpbiAxOTk0IHRvICQxNy42IGJpbGxpb24gaW4gMjAxMy4gCkxvZmk3NiAgIDEgcG9pbnRzICBzdWJtaXR0ZWQgMSBob3VyIGFnbwpXaHkgSSBUaGluayBCZWluZyBhIE1pbGxpb25haXJlIE1pZ2h0IEJlIE92ZXJyYXRlZApXb21hbiBzY2FtbWVkIGJ1c2luZXNzZXMKQW5kIHlvdSBjYW4gc2F5IHRoYXQgdGhlIFBhbGVzdGluaWFuIHRlcnJvcmlzdCBhdHRhY2tzIHdlcmUgYSByZXN1bHQgb2YgbWFyZ2luYWxpemF0aW9uIGV0YyBldGMgZXRjIGV0Yy4gClN1Y2ggZmFjdG9ycyBpbmNyZWFzZSB0aGUgY29nbml0aXZlIGRlbWFuZHMgb2YgdGhlIGF0aGxldGVzLCBpbmR1Y2luZyBkaXN0cmFjdGluZyBhbnhpZXR5IHJlbGF0ZWQgdGhvdWdodHMga25vd24gYXMgcnVtaW5hdGlvbiAoQmVpbG9jayBhbmQgR3JheSwgMjAwNykuIE1lbnRhbCBwcmVzc3VyZSBoYXMgYmVlbiBzaG93biB0byByZWR1Y2UgcGVyZm9ybWFuY2Ugb2YgZGVjaXNpb24gbWFraW5nIHRhc2tzIHdoZXJlIHJld2FyZCBhbmQgbG9zcyBjb250aW5nZW5jaWVzIGFyZSBleHBsaWNpdCwgd2l0aCBhIHNoaWZ0IHRvd2FyZCBpbmNyZWFzZWQgcmlzayB0YWtpbmcgKFBhYnN0IGV0IGFsLiwgMjAxMzsgU3RhcmNrZSBldCBhbC4sIDIwMTEpLiAKQW0gSnIgQ2xpbiBOdXRyaXRpb24gMjAxMwpZb3UgbWFkZSBudW1lcm91cyBmYWxzZSBjbGFpbXMgcmVnYXJkaW5nIFplbmthaXMgYW5kIHBvd2VybGV2ZWxzIHRoYXQgSSBwcmV0dHkgZWFzaWx5IGRpc3Byb3ZlZC4gVGhlbiB5b3Ugc2F5IEkgbHlpbmcgYWdhaW4gYWZ0ZXIgY29uY2VkaW5nIEkgd2FzIHJpZ2h0IGp1c3QgYmVmb3JlIHJlZ2FyZGluZyB0aGUgc2FtZSB0b3BpYy4gVGVsbCBtZSB3aHkgYW5pbWUgQmxhY2sga2VwdCBwb3dlcmluZyB1cCBhZnRlciBiZWluZyBoZWFsZWQgYnV0IEdva3UgYW5kIFZlZ2V0YSBkaWRuIEdvIGFoZWFkLiAKVGhleSBvZnRlbiByZWdyZXQgZm9yIHRoZWlyIGRlZWRzIGxhdGVyIG9uLiBIb3dldmVyLCB0aGVpciByZWdyZXRzIGRvbid0IGJyaW5nIHRoZWlyIGNhcmRzIGJhY2suIApSZXR1cm50aGVib21iMSAgMSBwb2ludCAgc3VibWl0dGVkIDExIGRheXMgYWdvCllvdSBpbmNyZWFzZSBhbmQgZGVjcmVhc2Ugc3RpdGNoZXMgYW5kIG1ha2Ugc2hhcGVzLiAKTm9jaCBuaWUgd2FzIHZvbiBDaGVuZ2R1IGdlaCBNYWNodCBuaWNodHMuIEluIENoaW5hIHdpbW1lbHQgZXMgbnVyIHNvIHZvbiBTdCB3aWUgQ2hlbmdkdTogbWluZGVzdGVucyAxMCBNaWxsaW9uZW4gRWlud29obmVyIHVuZCBrYXVtIGVpbiBFdXJvcCB2b24gVVMgQW1lcmlrYW5lcm4gZ2FueiB6dSBzY2h3ZWlnZW4gaGF0IGF1Y2ggbnVyIGVpbmVuIEhhdWNoIHZvbiBBaG51bmcsIGRhc3Mgc2llIGV4aXN0aWVyZW4uIApUaGUgaW1wcmVzc2lvbiBsZWZ0IGlzIG9mIGEgbWFzcyBzd2FybWluZyBvZiB0aGUgYXR0b3JuZXkgZ2VuZXJhbCBvZmZpY2UgYW5kIHRoYXQgb2YgdGhlIFBQU0MuIElmIHNvIGl0IHdvdWxkIG1pcnJvciBTTkMgTGF2YWxpbiBzd2FybWluZyBvZiB0aGUgdXBwZXIgcmVhY2hlcyBvZiBnb3Zlcm5tZW50LiBXZSBoYXZlIGhlYXJkIG11Y2gsIGFnYWluLCBvZiB0aGUgbWFueSB2aXNpdHMgYnkgbG9iYnlpc3RzIHRvIHZhcmlvdXMgbWluaXN0ZXJzIGFuZCBvdGhlciBvZmZpY2lhbHMsIGFsbCBvZiB0aGVtIHJlY29yZGVkIGluIHRoZSBsb2JieWlzdCByZWdpc3RyeS4gV2UgYXJlIG9ubHkgbGF0ZWx5IGhlYXJpbmcgYWJvdXQgcmF0aGVyIG1vcmUgZGlyZWN0LCBhbmQgdW5yZWdpc3RlcmVkIGludGVydmVudGlvbnMuCkluIHBvbGl0ZSBzb2NpZXR5IGluIHRoZSBQZWcsIG5vIG9uZSB3b3VsZCBkYXJlIHNwZWFrIGlsbCBvZiBnYXlzLCBKZXdzIG9yIGJsYWNrcy4gCklzIGl0IGJlY2F1c2UgSSBhIFBDIGdhbWVyPyBJIG1lYW4gSSBuZXZlciBzZWVuIGFuIGlzc3VlIHdpdGggdGhlIGdyYXBoaWNzIGNhcGFiaWxpdGllcyBvciBoYWQgZXZlbiBvbmUgYnVnLiBUaGUgU3RhcmZpZWxkIHRhbGsgaGFzIG1hZGUgbWUgdW5kZXJzdGFuZCB0aGluZ3MgYSBsaXR0bGUgZGlmZmVyZW50bHkgbm93LiAKRm9yIGV4YW1wbGUsIGlmIEphciBKYXIgd2FzIGEgU2l0aCwgd2hhdCBpcyB0aGUgZXZpbCBzdHJhdGVnaWMgYWR2YW50YWdlIHRvIHphcHBpbmcgeW91ciB0b25ndWUgYnkgYSBwb2QgcmFjZXI/IFdoeSBkb2VzIGhlIHN0ZXAgaW4gYmFudGhhIHBvb2Rvbz8gR2V0IGhpcyBoYW5kIHN0dWNrIGluIGEgcG9kIGVuZ2luZSB3aGlsZSB0aGUgeW91bmcgY2hpbGQgYXQgdGhlIGNvbnRyb2xzIGlzIGhpdHRpbmcgdGhlIGlnbml0aW9uPwpHb25uYSBhbHNvIGFncmVlLiBIZWFkcGhvbmVzIGFyZSBncmVhdCBmb3Igd2hlbiB5b3UgYXJlIGF0IHRoZSBsZXZlbCB3aGVyZSB5b3Uga25vdyB5b3VyIGdhbWUgYW5kIGFyZSByZWFkeSB0byBncmluZC4gVW5saWtlIG1vc3QgaG9iYmllcywgcG9rZXIgcGxheWVycyBhcmUgYWN0dWFsbHkgcXVpdGUgbmljZSB0byBuZXdiaWVzIGJlY2F1c2UgdGhleSBrbm93IHlvdSBhcmUgcmVsYXRpdmVseSBlYXN5IG1vbmV5LiAKWWVzLCB0aGF0IGxpdHRsZSBib3R0bGUgY29zdHMgdGhhdCBtdWNoLCBhbmQgdGhleSBwcm91ZCBvZiBpdC4gVGhlaXIgbW90dG8gaXMgIndoZW4gaW4gZG91YnQsIHB1bGwgRnJhbmsgb3V0LiIgSSBhY3R1YWxseSBzZWVuIHBlb3BsZSBjbGFpbSBmcmFua2luY2Vuc2UgY3VyZWQgc2tpbiBjYW5jZXIuIApXaGVuIGEgZmFtb3VzIGhvbW9waG9iZSBnZXRzIG91dGVkIGZvciBiZWluZyBhIGJpZyBmYWcsIGEgbG90IG9mIHN0cmFpZ2h0IHBlb3BsZSB3aWxsIHNheSwgIlNlZSwgaG9tb3Bob2JlcyBhcmUgYWx3YXlzIGNsb3NldCBjYXNlcy4iIHRoZW4gaGVhdmUgYSBodWdlIHNpZ2ggb2YgcmVsaWVmIHRoYXQgdGhleSB0aGVtc2VsdmVzIGFyZSBzdHJhaWdodCBhbmQgdGhlcmVmb3JlIG5vdCBob21vcGhvYmljLiBBbmQgYXMgZnVubnkgYXMgaXQgaXMgdGhhdCBEci4gR2VvcmdlIGlzIGEgYmlnIGZhZywgYmxhbWluZyBob21vcGhvYmlhIG9uIHF1ZWVycyBpcyBqdXN0IG5vdCBmdW5ueS4KTWFydGEgUC4sIFZhbmNvdXZlcgpNeSBmYWN0cyBhcmUgcmlnaHQgeW91IGhhdmUgdG8gZGlzcHJvdmUgdGhlbSkuIEJ1dC4gCkJ1dCBJIHdhc24ndCBzdXJlIGhvdyB0byBkbyBpdCBhbmQgbm93IEkgaGFkIHRoaXMgaWRlYSB0aGF0IGNvdWxkIHdvcmssIHNvIEkgd291bGQgbG92ZSB0byBoZWFyIHlvdXIgaWRlYSBhYm91dCBpdC4gCkEgZml4dHVyZSBvZiBNYXZlcmljayBTcXVhcmUgaW4gRWFzdCBCb3N0b24sIENhY3R1cyBHcmlsbCBoYXMgYSB3aWRlIHNlbGVjdGlvbiBvZiBDZW50cmFsIEFtZXJpY2FuIGRpc2hlcyBpbiBhIGJ1c3RsaW5nLCBubyBmcmlsbHMgY2FmZXRlcmlhIHN0eWxlIHNldHRpbmcuIEl0cyBvdmVyc3R1ZmZlZCB0YWNvcywgd2hpY2ggY2xvY2sgaW4gYXQgJDIuNTAgdG8gJDMgYSBwb3AsIGFyZSBhdmFpbGFibGUgd2l0aCB0aGUgY2xhc3NpYyBmaWxsaW5nIGNob2ljZXMgb2YgY2hpY2tlbiwgc3RlYWssIHBvcmssIGJlZWYgdG9uZ3VlLCBhbmQgYSBzdXJwcmlzaW5nbHkgc3Ryb25nIHZlZ2V0YXJpYW4gb3B0aW9uIHRoYXQgY29tZXMgd2l0aCBncmlsbGVkIGNhdWxpZmxvd2VyIGFuZCBicm9jY29saS4gVGhlIHF1aWNrIHBhY2Ugb2Ygb3JkZXJpbmcgYW5kIFN0eXJvZm9hbSBib3hlcyBtYWtlIGl0IGFuIGlkZWFsIGdyYWIgYW5kIGdvIGNob2ljZSB3aGVuIHByZXNzZWQgZm9yIHRpbWUuIApDb21wbGV0ZWx5IGluIGhlciBlbGVtZW50IGFzIHNoZSBidXJzdCBvbnRvIHRoZSBmYXNoaW9uYWJsZSBzY2VuZSwgUm9zaWUgbG9va2VkIGFzdG9uaXNoaW5nIHdoZW4gc2hlIHBvd2VyIGRyZXNzZWQgaW4gdGhlIGV5ZSBjYXRjaGluZyB0d28gcGllY2UuCkFsdGhvdWdoIHR3byBwZXJzb25zIG1pZ2h0IGRlc2NyaWJlIHNpbWlsYXIgZHJlYW1zIGluIGdyZWF0IGRldGFpbCwgZHJlYW1zIHRha2UgcGxhY2Ugd2l0aGluIHRoZSBtaW5kLiAKV2Ugc2V0IHVwIG91ciBtYXNzYWdlIGNoYWlycyBvciBhIHRoZXJhcHkgdGFibGUgbmVhciBvciBhcm91bmQgeW91ciBvZmZpY2UsIGV2ZW50LCBvciBwYXJ0eS4KIkkgYW0gZGlzYXBwb2ludGVkIGluIHRoZSBDaXR5IENvdW5jaWwsIiBOb3J2ZWxsIHNhaWQuICJUaGV5IGFyZSBob2xkaW5nIG15IGNsaWVudCByZXNwb25zaWJsZSBmb3IgdGhlIHNpbnMgb2YgYSBwcmV2aW91cyBvd25lci4gVGhhdCB3aWxsIGhhdmUgYSBjaGlsbGluZyBlZmZlY3Qgb24gYnVzaW5lc3NlcyB0aGF0IHdhbnQgdG8gbG9jYXRlIGhlcmUuIEkgZmVlbCBzb3JyeSBmb3IgSGVuZGVyc29uLiIKVGhpcyBoYXBwZW5zIGJlY2F1c2UgdGhlIGNvbGQgdGVtcGVyYXR1cmUgd2lsbCBjb25zdHJpY3QgdGhlIGNhcGlsbGFyaWVzIGFuZCBibG9vZCB2ZXNzZWxzLCB0aHVzIHJlc3RyaWN0aW5nIHRoZSBibGVlZGluZy4gUGxhY2UgdGhlIGNvbGQgY29tcHJlc3Mgb24gdGhlIGFmZmVjdGVkIGFyZWEgZm9yIGF0IGxlYXN0IDIwIG1pbnV0ZXMuLiAKQnkgdGhlIGVuZCBvZiB0aGUgbmlnaHQgd2UgaGFkIHBsYXllZCBmaXZlIGRpZmZlcmVudCAid2lubmVyIHRha2UgYWxsIiB0b3VybmFtZW50cyBhbmQgSm9yZGFuIHdhcyB1c3VhbGx5IHRoZSBmaXJzdCBvciBzZWNvbmQgcGVyc29uIG91dC4gCkhhdmluZyBoYWQgYSBzbGVldmUgYXMgd2VsbCBkaWQgdGhleSBjaGVjayB5b3VyIHRoaWFtaW4/IEkgaGlnaGx5IHN1Z2dlc3QgeW91IGdldCBhIGZ1bGwgbGFiIHdvcmsgdXAgdG8gbG9vayBhdCB5b3VyIHZpdGFtaW4gYW5kIG1pbmVyYWwgbGV2ZWxzLiBJIHdhcyBkaWFnbm9zZWQgd2l0aCBiZXJpYmVyaSBhZnRlciBoYXZpbmcgdGhlIHNsZWV2ZSBhbmQgaGF2ZSB0byB0YWtlIEIxIG5vdy4gVGhlIGhpZ2ggcG90ZW50Y3kgbXVsdGl2aXRhbWlucyB3ZXJlbid0IGVub3VnaC4gSSd2ZSBhbHNvIGhhZCB0byByb3VuZHMgb2YgRCB2aXRhbWlucywgQjEyLCBmb2xhdGUsIGV0YyB0byBicmluZyBjZXJ0YWluIG90aGVyIGxldmVscyBiYWNrIGluIGxpbmUuIEkgbm93IHdvcmsgd2l0aCBhbiBpbnRlcm5pc3Qgd2hvIGV2YWx1YXRlcyBhbGwgdGhpcyBmb3IgbWUuCktub3dpbmcgdGhpcyBpbmZvcm1hdGlvbiBpcyBrZXkgdG8gYmVnaW5uaW5nIGEgcG9rZXIgY2FyZWVyIHN1Y2Nlc3NmdWxseS4gCkVhc3kgY2FsbCB3aGVuIHlvdSBzdGFydCBlbGltaW5hdGluZyB0aGVzZSBmcm9tIHRoZSByYW5nZSwgYWx0aG91Z2gsIHlvdSBzdGlsbCBvdXQga2lja2VkIHNvbWV0aW1lcyBJIGRvbiBleHBlY3QgeW91IHJ1bm5pbmcgaW50byBBSyBvciBhdCBsZWFzdCB0aGUgc3VpdGVkIGNvbWJvcyBvZiBBVC9BSiB2ZXJ5IG9mdGVuLCBzbyB5b3UgaGF2ZSBsb3RzIG9mIGxpdmUgb3V0cyBpZiB5b3UgYXJlIG91dGtpY2tlZC4uIApQYWxlIGJ5IEtpbSBIYXJncmVhdmVzIFBhdHRlcm4gQm9vayAyMSBwYXR0ZXJucyBSUlAgJDI4LjkwIFByaWNlOiAkMjguODAuIApNYWxoZXVyZXVzZW1lbnQsIGplIG1lIGRlbWFuZGUgcydpbCBuJ3kgYXVyYWl0IHBhcyBsaWV1IGRlIHBhcmxlciBkZSBjZXMgZGlzdGluY3Rpb25zIGF1IHBhc3MgISBKZSBuZSBkbmlncmVyYWkgcGFzIGxhIHByZXNzZSBwZW9wbGUsIHF1ZSBqZSBuJ2FpIHBhcyBwb3VyIGhhYml0dWRlIGRlIGxpcmUuIApDaHJpc3RvcGhlciBNY0NhcnR5J3MgZXhpc3RlbmNlIGlzIHRvcm4gYXBhcnQgd2hlbiBoaXMgZmF0aGVyIGlzIGtpbGxlZCBkdXJpbmcgdGhlIGF0dGFjayBvbiB0aGUgV29ybGQgVHJhZGUgQ2VudGVyLCBhIHRyYXVtYSB3aGljaCBkcml2ZXMgaGltIHRvIG1pbGl0YXJ5IGludGVsbGlnZW5jZS4gV2hpbGUgYXR0ZW5kaW5nIHRoZSBOYXZhbCBBY2FkZW15IGF0IEFubmFwb2xpcywgaGUgbWVldHMgTWF1cmVlbi4gClRoZXJlIGFsc28gc29tZSB3b3JrIHRvIGJlIGRvbmUga2VlcGluZyB0aGluZ3Mgb24gdG9waWMuIE5lYXJseSBhbGwgcGVvcGxlIHRlbmQgdG8gZ2V0IGRpc3RyYWN0ZWQgYnkgY2VydGFpbiB0aGluZ3MgICBqb2tlcywgc2V4IHRhbGssIGFuZCB3YXRlciBjb29sZXIgY2hpdCBjaGF0LiBUaGVzZSBhcmUgdGhlIHNhbWUgdGhpbmdzIHRoYXQgc2Fib3RhZ2UgYW55IGtpbmQgb2YgaW4gcGVyc29uIGNvbmZlcmVuY2Ugcm9vbSBtZWV0aW5nIGFuZCBkcmFnIGl0IG9mZiB0b3BpYy4gVGhhdCBjb250ZW50IGhhcyB0byBiZSBkZSBlbXBoYXNpemVkIG9yIGdpdmVuIGl0cyBvd24gc2VwYXJhdGUgcGxheWdyb3VuZHMgYW5kIG1vZGVyYXRpb24gdG9vbHMuClRlbGxpbmcgYSB5b3VuZyBraWQgdGhhdCB0aGV5IHNob3VsZCBuZXZlciBiZSBzYWQgaXMganVzdCB3cm9uZyB0aG91Z2guIApUaGF0IGFsb25lIHNob3VsZCBzYXkgc29tZXRoaW5nLi4gCkxlb25hcmQgQWxsZW4gYW5kIGRhdWdodGVyLCBDZWNpbGlhLCBvZiBDbGV2ZWxhbmQsIE9oaW8sIHNwZW50IFN1bmRheSB3aXRoIE1yLiBhbmQgTXJzLiBKb2huIFcgR3JpbSBhbmQgYW5kIGZmbG1pbCByZWNlbnRsIGRhdWdodGVyLCBSdXRoLCBMb25nIExldmVsLCB3ZXJlIHZpc2l0b3JzIGhlcmUsIEZyaWRheSBhbmQgU2F0dXJkYXkuIE1pc3MgUnV0aCBLaW5uZW1hbi4gd2hvIHNwZW50IExJVFRMRVNUT1dOIExpdHRsZXN0b3duLiBNaXNzIExpbGxpYW4gTGVtbXBuLCBTdW5kYXkgIEpvaG4gTWlsbGVyLCBzb24gb2YgTXIuIGFuZCBNcnMgaSBkYXYuIApKdXN0IG1vcmUgb2YgdGhlIHNhbWUsIHRoZSBwYXN0IHJlY3ljbGVkIHRvIHJlcHJlc2VudCB0aGUgZnV0dXJlLiBUaGlzIGlzIGEgZ3JlYXRlciBjcmlzaXMgdGhhbiBhbnl0aGluZyBvbiB0aGUgZWNvbm9taWMgaG9yaXpvbi4uIApJIHdhcyBpbnRlcnZpZXdpbmcgZm9yIGEgam9iIGF0IG9uZSBvZiB0aGUgY29tcGFuaWVzIHdob3NlIHByb2R1Y3RzIHdlIHJlc2VsbC4gVGhleSB3ZXJlIG9mZmVyaW5nIGEgbXVjaCBtb3JlIGludGVyZXN0aW5nIHBvc2l0aW9uIGRlYWxpbmcgd2l0aCB0aGluZ3MgSSBhbHJlYWR5IGhhZCBwcmlvciBrbm93bGVkZ2Ugb2YuIFRoZSBpbnRlcnZpZXcgZ2VuZXJhbGx5IHdlbnQgd2VsbCwgYnV0IGl0IGxhc3RlZCBmb3IgY2xvc2UgdG8gdGhyZWUgaG91cnMgYW5kIEkgd2FzIHRvbGQgb2Ygc28gbWFueSB0aGluZ3MgdGhhdCBoYWQgbm90aGluZyB0byBkbyB3aXRoIHRoZSBwb3NpdGlvbi4gCklmIHlvdSBoYXZlIHNvbWUgd2VpcmQgZmxlc2ggZWF0aW5nIGJhY3RlcmlhIGFuZCB0aGV5IHRvbGQgeW91IGl0IHdhcyBhIHNraW4gcmFzaCBhbmQgc2VudCB5b3UgaG9tZSB3aXRoIGEgY3JlYW0gYW5kIHRoZW4geW91IGRpZWQgYmVjYXVzZSB0aGV5IG5ldmVyIGJvdGhlcmVkIHRvIHJlZmVyIHRvIGRlcm1hdG9sb2d5IHRoZW4gdGhhdCB0aGVpciBhc3MuIApUaGluZ3MgbGlrZSBjdXN0YXJkLCBjcmVhbSwgY2hhbXBhaWduIGN1Y3VtYmVyIGFuZCBzdWNobGlrZSBhbGwgd29yayB3ZWxsIGVub3VnaCB3aXRob3V0IGFueSBvZiB0aGUgbG9uZyBsYXN0aW5nIHBhaW4gaW5kdWNpbmcgZWZmZWN0cyBvZiBzb21ldGhpbmcgbGlrZSBjaGlsbGllcy4gClN1YnJlZGRpdCBSdWxlcyAgMC4gQWxsIHBvc3RzIG11c3QgYmUgcmVsZXZhbnQgdG8gdGhlIFdhcnJpb3JzLjEuIElmIHlvdSB3YW50IHRvIG1ha2UgYSAiTWV0YSIgcG9zdCwgeW91IG5lZWQgdG8gbWVzc2FnZSBtb2RtYWlsIGZpcnN0IGFza2luZyBmb3IgcGVybWlzc2lvbi4gCkl0IHdhcyBzdWNoIGFuIGlnbm9yYW50IGNvbW1lbnQuIApPbiBwYWdlIDQ5LCB0aGVyZSdzIGEgZGlzYnVyc2VtZW50IG9mICQyNSwyNTUgdG8gTG9yZSdzIENob2NvbGF0ZXMgaW4gQ2VudGVyIENpdHkgbGFiZWxlZCAiZ2lmdHMgZm9yIHRoZSBnb29kd2lsbCBvZiB0aGUgdW5pb24uIiBQYWdlIDQ2IGhvbGRzIHRoZSBpdGVtIGZyb20gQ2FuYWwncyBEaXNjb3VudCBMaXF1b3JzIGluIFBlbm5zYXVrZW4gICAkMTAsMjU1LCBpbmNsdWRpbmcgJDYsMTk0IGluIGhvbGlkYXkgZ2lmdHMuIFRoZSBvdGhlciAkNCwwMzEgaXMgdW5leHBsYWluZWQuIlRoaXMgZG9jdW1lbnQgaXMgY2hvY2sgZnVsbCBvZiBxdWVzdGlvbmFibGUgZXhwZW5zZXMsIHRoYXQgc3VnZ2VzdCBhIHRhc3RlIGZvciB0aGUgZmluZXIgdGhpbmdzIGluIGxpZmUgICBtb3JlIHNvIHRoYW4gYW55dGhpbmcgd2UndmUgZXZlciBsb29rZWQgYXQsIiBzYWlkIE1pY2hhZWwgU2FsdHNtYW4sIHJlc2VhcmNoIGRpcmVjdG9yIHdpdGggdGhlIEVjb25vbWljIFBvbGljaWVzIEluc3RpdHV0ZS4gCk1ham9yIHBvbGljZSBmb3JjZXMgd29ya2luZyB1bmRlciBjbG91ZCBvZiBzdXNwaWNpb24gYWZ0ZXIgc3VzcGVuc2lvbnMKS2F0aHkgU2NobGVyZXRoIHNlcnZlcyBvbiB0aGUgY29tbWl0dGVlIGFzIGFuIGFsdGVybmF0ZSBhbmQgYSBzZWNyZXRhcnkuIFNoZSBzYWlkIHRoZSBwcm9jZXNzIHN0YXJ0ZWQgd2VsbCwgYnV0IHBhdGllbmNlIGFtb25nIHNvbWUgcmVzaWRlbnRzIGhhcyB3YW5lZCBhcyB0aGUgcHJvamVjdCBoYXMgcHJvZ3Jlc3NlZCBhbmQgY2hhbmdlcyBoYXZlIGJlZW4gbWFkZS4KVGhlIHR5cGljYWwgcmVwcmVzZW50YXRpdmUgb2YgVmlkZW8gUG9rZXIgOS82IG1hY2hpbmUgd291bGQgYmUgSmFja3Mgb3IgQmV0dGVyLiAKU2hlIG5vdCBzdWNjZXNzZnVsLCBiZWNhdXNlIHNoZSBpcyBwb29yIGFuZCBvbmx5IGEgY29uZ3Jlc3N3b21hbiBhdCBhIHlvdW5nIGFnZS4gQmVhdGluZyBhIGxvbmcgdGVybSBpbmN1bWJlbnQgYW5kIHByb3ZpZGluZyBtdWNoIG5lZWRlZCBkaXZlcnNpdHkgYXMgcmVwcmVzZW50YXRpb24gZm9yIHRoZSB1bmRlciByZXByZXNlbnRlZCBpbiBoZXIgZGlzdHJpY3QgYW5kIHRoZSBuYXRpb24gYXQgbGFyZ2UuIEdvb2QgZm9yIGhlciEKSSBzdGFydGVkIHBsYXlpbmcgcG9rZXIgYXMgYSB0ZWVuYWdlciBpbiAyMDAyLiAKSSBldmVuIG9mZmVyZWQgdG8gZ2l2ZSB0aGVtIG15IGdhbWUgYW5kIHRocm93IGFsbCBmdXR1cmUgY29tcGV0aXRpb25zIGJlY2F1c2UgSSBqdXN0IHdhbnRlZCB0byBiZSB0aGVyZSB0byBwbGF5LiBJdCB3YXMgbXkgSGFpbHkgTWFyeSBldmVuIHRob3VnaCBJIGRpZG4gd2FudCB0byBkbyB0aGF0IGJ1dCBub3RoaW5nIHdvcmtlZC4gCk1zUHV6emxlY3VudCAgMiBwb2ludHMgIHN1Ym1pdHRlZCAyMiBob3VycyBhZ28KTWFueSBmYW1pbGllcyBoYWQgbGl2ZWQgaW4gdGhlc2UgcmVnaW9ucyBmb3IgZ2VuZXJhdGlvbnMgYW5kIHRoZW4gdGhleSBzdWRkZW5seSBoYWQgdG8gbGVhdmUgdGhlaXIgaG9tZXMgd2l0aCBiYXJlbHkgbm90aGluZy4gCkFsc28sIHRoaXMgbGlzdCB1c2VzIHRoZSB0ZXJtICJpVHVuZXMiIHRvIHJlcHJlc2VudGRpZ2l0YWwgc3RvcmVzLiBZZXQgaXQgbW9zdCBsaWtlbHkgcG9zc2libGUgYW55dGhpbmcgb24gImlUdW5lcyJjYW4gYmUgZm91bmQgb24gVmlueWwvQ0QgZm9yIGhpZ2hlciBxdWFsaXR5LiBJbiBhZGRpdGlvbiwgdGhlIHRlcm0ieW91dHViZSIgdGhyb3VnaG91dCB0aGUgbGlzdCBpcyB1c2VkIGhlcmUgdG8gbWVhbiB5b3V0dWJlIGl0c2VsZixidXQgYWxzbyAidGhlIGludGVybmV0IiBpbiBnZW5lcmFsLiAKVW50aWwgdGhhdCB2ZXJ5IHNlY29uZCBJIHNhdyBoZXIuIApJZiB5b3UgYXJlIGluIGEgY2l0eSB5b3UgbWlnaHQgYmUgc3VycHJpc2VkIGF0IGhvdyBtYW55IG9wdGlvbnMgYXJlIGF2YWlsYWJsZSBvbmNlIHlvdSBzZWVrIHRoZW0gb3V0IGFuZCBsZWFybiB0aGVtLiAKWW91IGFyZSBjb25mbGF0aW5nIGhlYWx0aGNhcmUgY29zdHMgd2l0aCBpbnN1cmFuY2UgcHJlbWl1bXMuIApJIHRoaW5rIHRoZSBuZXh0IHRoaW5nIHRvIGxvb2sgYXQgaXMgd2hhdCBQbGFuIEIgaWYgcG9rZXIgZG9lc24gd29yayBvdXQ/IElzIHlvdXIgaW5kdXN0cnkgb25lIHRoYXQgaXMgZ3Jvd2luZyBhbmQgaGlyaW5nPyBXb3VsZCB5b3UgYmUgYWJsZSB0byBnZXQgYmFjayBpbiB3aXRob3V0IG11Y2ggaGFzc2xlIG9yIHdvcnJ5IG9mIGZpbmRpbmcgYSBqb2I/IEZvciBtZSwgSSB3YXMgaW4gYXZpYXRpb24gbWFpbnRhaW5hbmNlIHdpdGggYSBjb25jZW50cmF0aW9uIGluIGF2aW9uaWNzLiBUaGlzIGZpZWxkIGlzIGdyb3dpbmcgYW5kIGluIGEgY29uc3RhbnQgaGlyaW5nIHByb2Nlc3MsIEkgaGF2ZW4gbG9nZ2VkIGludG8gTGlua2VkSW4gaW4gb3ZlciBhIHllYXIsIGJ1dCBJIHdlZWtseSBnZXQgZW1haWxzIGZyb20gZW1wbG95ZXJzIHdobyBmaW5kIG15IHJlc3VtZSBhbmQgc2VuZCBtZSBqb2IgcG9zdGluZ3MuIElmIEkgbmVlZCB0byBpdCBhIGZhaXJseSBlYXN5IHN3aXRjaCBiYWNrIGludG8gdGhhdCB3aXRoIG1hbnkgb3B0aW9ucy4uIApBcnRpY2xlcyBieSBLcml0aWthIEphaXN3YWwgUmVzdWx0cyAxCkFuZCwgYXMgdGhlIHNheWluZyBnb2VzLCBsb29rcyBhcmUgbm90IGV2ZXJ5dGhpbmcgYW5kIHRoZSBtYWhvZ2FueSBjYXNlIG9mIHRoZSAxMDAgUGF1bHNvbiBQaGFyb2FocyBDbHViIFBva2VyIFNldCBpcyBhbHNvIGRlc2lnbmVkIHRvIG1ha2Ugc3VyZSB0aGUgY2hpcHMgYXJlIHByb3RlY3RlZCBhbmQga2VwdCBzYWZlIGZyb20gaGFybS4gV2h5IHdvdWxkIHlvdSBwdXJjaGFzZSBzdWNoIGFuIGV4cXVpc2l0ZSBzZXQgb25seSB0byBkaXNjb3ZlciB0aGUgY2hpcHMgZW5kIHVwIGJlaW5nIGRlZ3JhZGVkIGJlY2F1c2UgdGhleSBydWIgdG9nZXRoZXIgYW5kIGVuZCB1cCBzY3JhdGNoZWQ/IFB1cmNoYXNpbmcgdGhpcyBzZXQgd2lsbCBjZXJ0YWlubHkgcHJldmVudCBhbnkgZGFtYWdlIGZyb20gb2NjdXJyaW5nLi4gClN0aWxsIG5lZWQgdG8gZmluYWxpc2UgdGhlIGxpc3Qgb2YgJ2Zvb2QnIHRvIHVzZSBpbiB0aGUgZXhwZXJpbWVudGF0aW9uIHRvbW1vcnJvdy4gV2VsbCBhdCBsZWFzdCBJJ3ZlIG5vdyBydWxlcyBvdXQgY2hpbGllcywgdGhhdCB3YXMgb25lIGJhZCBpZGVhLiBCdXQsIHRoZW4gYWdhaW4sIGluIHRydWUgc2NpZW50aWZpYyBpbnZlc3RpZ2F0aW9uLCBJJ2Qgbm90IGhhdmUga25vd24gaGFkIEkgbm90IGV4cGVyaW1lbnRlZCB3aXRoIGl0SSByZWZ1c2UgdG8gZXZlciBjb25zaWRlci4gd2VsbC4gaG1tbS4gdGhlcmUgd2FzIGEgY2VydGFpbiBwb2ludCBvbiB0aGUgJ2NvbWUgZG93bicgZnJvbSB0aGUgc2hlZXIgJ3BhaW4nIG9mIHRoZSBjaGlsaWUgcGVwcGVycywgd2hpY2ggd2FzIGEga2luZGEgcGxlYXN1cmlhYmxlIHBhaW4uIGJ1dCBpdCB0b29rIGEgbG9nbiB3aGlsZSB0byBnZXQgJ2Rvd24nIHRvIHRoYXQgcG9pbnQuIHRoZSBwYWluIHJlYWxseSB3YXMgdmVyeSByZXNpYW50IHRvIGdvIGF3YXkgb29vIG1heWJlIEkgY291bGQgdXNlIGNoaWxsaSBvaWwuIG9yIGplcmsgY2hpbGxpIHNlYXNvbmluZy4gb3IgLiBobW1tLiBXYWh0ZXZlciBJIGRlY2lkZSBpc24ndCBnb2luZyB0byB3b3JrIG91dCB3ZWxsIGlzIGl0PwpTb21ldGhpbmcgaGFzIGdvdCB0byBjaGFuZ2UuLiAKRm9yIGluY3JlYXNpbmcgbnVtYmVycyBvZiBwZW9wbGUsIGhlIHNheXMsIGEgbWlkZGxlIGNsYXNzIGV4aXN0ZW5jZSBpcyBubyBsb25nZXIgZXZlbiBhbiBhc3BpcmF0aW9uLiAKSXQgc2VlbXMgUmVwdWJsaWNhbnMgaGF2ZSBhbGxpZWQgdGhlbXNlbHZlcyB3aXRoIFJ1c3NpYSBvdXQgb2YgYSBzaGFyZWQgYmVsaWVmIHRoYXQgdGhlIHdlYWx0aHkgc2hvdWxkIGNvbnRyb2wgdGhlIHdvcmxkLCBhbmQgbm8gb25lIHNob3VsZCBiZSBhbGxvd2VkIHRvIGRvIGEgZnVja2luZyB0aGluZyBhYm91dCBpdC4gSG93IHRoZSBoZWxsIGFyZSB3ZSBnb2luZyB0byBiZSBhYmxlIHRvIGZpeCB0aGlzIHdoZW4gc28gbWFueSBwZW9wbGUgYXJlIHNvIGJsYXRhbnRseSBldmlsPyA4IHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnby4gCkluIHRoZSBjYXNlIG9mIGx5bXBoZWRlbWEsIGx5bXBoYXRpYyB2ZXNzZWxzIGxvc2UgdGhlaXIgdG9uZSBhbmQgYmVjb21lIGxlc3MgZWZmaWNpZW50IGF0IHRyYW5zcG9ydGluZyBseW1waCwgd2hpY2ggY2F1c2VzIHRoZSBmbHVpZCB0byBhY2N1bXVsYXRlIGluIHRpc3N1ZSAodGhhdCBpcywgZWRlbWEpLiBNTEQgc3RpbXVsYXRlcyBseW1waCBmbG93LCBhbGxvd2luZyB0aGlzIGZsdWlkIHRvIGJlIG1vdmVkIGFsb25nIHRoZSBseW1waGF0aWMgdmVzc2VscyBhbmQgaW50byB0aGUgbHltcGhhdGljIGR1Y3RzLiAKSWYgeW91IGFyZSBnb2luZyB0byBiZSBwbGF5aW5nIGNhc2ggZ2FtZXMsIHRoZW4ganVzdCBrZWVwIHRoZSBjaGlwcyB1bnRpbCB5b3UgbGVhdmUgdG93bi4gCkFsdGhvdWdoIHRoaXMgaXMgdGhlIGZpcnN0IHRpbWUgaW4gT2tsYWhvbWEgZm9yIHRoZSBXUFQsIHRvdXIgc3RvcHMgaW4gTWlzc2lzc2lwcGksIHR3byBzdGF0ZXMgZWFzdCx3ZXJlIG9uIHRoZSBXUFQgc2NoZWR1bGUgaW4gdGhlIGZpcnN0IGZldyB5ZWFycyBvZiB0aGUgdG91cidzIGV4aXN0ZW5jZS4gSW4gWWVhciAxIG9mIHRoZSBXUFQsIHRoZSBsYXRlRGF2ZSAiRGV2aWxmaXNoIiBVbGxpb3R0ZGVmZWF0ZWQgcG9rZXIgaWNvbiBQaGlsIEl2ZXkgaGVhZHMgdXAgZm9yIHRoZSB0aXRsZSBhdCB0aGUgSmFjayBCaW5pb24gV29ybGQgUG9rZXIgQ2xhc3NpY2luIFR1bmljYS4KRWRpdDogdGhlIHZpY3RpbSBvbmx5IHJlc3BvbnNpYmlsaXR5IGlzIHRvIGhlYWwgdGhlbXNlbHZlcyB0aGUgYmVzdCB0aGV5IGNhbiB3aGV0aGVyIHRoYXQgbWVhbnMgbW92aW5nIG9uIHByaXZhdGVseSBvciBhY2N1c2luZyB0aGVpciBhdHRhY2tlcgpBcyBzb29uIGFzIHdlIGRyb3ZlIGludG8gRmFnZWx2aWtzIEhvamRlbiBJIHNlbnNlZCBhIHZpbGxhZ2UgbGlrZSBhdG1vc3BoZXJlIHRoYXQgZGVmaW5pdGVseSBpcyBkaWZmZXJlbnQgZnJvbSBzdWJkaXZpc2lvbnMgYXJvdW5kIE90dGF3YS4gQ2FuIHlvdSB0byBwdXQgaW50byB3b3JkcyB3aGF0IHlvdSB0aGluayB0aGUgZGlmZmVyZW5jZXMgYXJlPy4gCkkgbWVhbiBpdCdzIGtpbmQgb2YgYSBuZXJkeSBzY2hvb2wgYW5kIHlvdSBrbm93LCB3ZSBmb3VuZCB3YXlzLCB3ZSBzdGlsbCBmaW5kIHdheXMgdG8gaGF2ZSBmdW4uIEFuZCBhY3R1YWxseSwgeW91IGtub3cgd2l0aCBhIGxvdCBvZiBwZW9wbGUgdGFsa2luZyBhYm91dCBzaWRlIGh1c3RsZXMgdG9kYXksIGJhY2sgdGhlbiBpbiBjb2xsZWdlLCB5b3UgaGF2ZSBtb3JlIHRpbWUgcmVhbGx5LCB0aGFuIGFueXRoaW5nIGVsc2UuIApUaGV5IGRvbid0IGhhdmUgdGhlIG1lYW5zLCB0aGUgc3VwcG9ydCBuZXR3b3JrIG9yIHRoZSBhYmlsaXR5LiAKSSdsbCBwbHVnIG15IGNpdHksIHRha2UgdGhlIFMxIHRvIHRoZSBlbmQgdG8gSGVycmVuYmVyZyBhbmQgdGhlcmUncyBhIGxvdCBvZiB3YWxraW5nIHRyYWlscyB0aHJvdWdoIGRvbmUgb3JjaGFyZHMuIApCdXQgdGhlIHRyZWJsZSBjbGVmIGlzIHN0aWxsIHRoZXJlIGlmIHlvdSBsb29rIGNsb3NlbHkuIChGdWxsIEFuc3dlcikuIApJdCdzIGNhbGxlZCBlbmNvcHJlc2lzLiAKS3lsZWdldHNzcGFtICA4IHBvaW50cyAgc3VibWl0dGVkIDYgZGF5cyBhZ28KT25lIG9idmlvdXMgZGlmZmVyZW5jZSBpcyB0aGF0IHBsYXllcnMgZG8gbm90IHNpdCByaWdodCBhY3Jvc3MgZnJvbSBlYWNoIG90aGVyLCByZW1vdmluZyBhbnkgYWJpbGl0eSB0byBvYnNlcnZlIG90aGVycyByZWFjdGlvbnMgYW5kIGJvZHkgbGFuZ3VhZ2UuIEluc3RlYWQsIG9ubGluZSBwb2tlciBwbGF5ZXJzIGxlYXJuIHRvIGZvY3VzIG1vcmUga2Vlbmx5IG9uIGJldHRpbmcgcGF0dGVybnMsIHJlYWN0aW9uIHRpbWUgYW5kIG90aGVyIGJlaGF2aW9yIHRlbGxzIHRoYXQgYXJlIG5vdCBwaHlzaWNhbCBpbiBuYXR1cmUuIFNpbmNlIHBva2VyIGlzIGEgZ2FtZSB0aGF0IHJlcXVpcmVzIGFkYXB0YWJpbGl0eSwgc3VjY2Vzc2Z1bCBvbmxpbmUgcGxheWVycyBsZWFybiB0byBtYXN0ZXIgdGhlIG5ldyBmcm9udGllcnMgb2YgdGhlaXIgc3Vycm91bmRpbmdzLi4gCkxlYWRzIGZvciAkMjUgb24gYSBibGFuaz8gT2ssIEkgc3RpbGwgdGhpbmsgbXkgMTBzIGFyZSBiZXR0ZXIgdGhhbiB5b3VyIGhpZ2ggY2FyZHMgb3IgYmFieSBwYWlyLiAKSXQganVzdCBhIGdhbWUuIEkgcHJvYmFibHkgd29uIGdvIGJhY2sgdG8gZ3JpbmRpbmcgaXNrIGJlY2F1c2UgSSBjYW4gc3RhbmQgaW5jdXJzaW9uIGNvbW1zLiAKSSdkIGFyZ3VlIHRoZXkgYXJlIGVxdWFsbHkgaW1wb3J0YW50LiBPbmUgb2YgbXkgYnVkZGllcyBpcyBhIGZvcm1lciBPbHltcGljIHRyaWFscyBsZXZlbCBzd2ltbWVyIGJ1dCBoZSdzIHB1dCBvbiBzb21lIHdlaWdodCBhbmQgZG9lc24ndCBzd2ltIGFueW1vcmUuIEkgZ3VhcmFudGVlIHlvdSBpZiB3ZSB3ZW50IHRvIHRoZSBwb29sIHRvbW9ycm93IGhlIGNvdWxkIHNtb2tlIG1lIGluIGEgMTAwbSByYWNlLiAKQXMgYmFua3J1cHRjaWVzIHJpc2UsIEJvQydzIFBvbG96IHNheXMgaGUncyBsaXN0ZW5pbmcgdG8gcGVvcGxlJ3MgY29uY2VybnMgYWJvdXQgaGlnaGVyIGludGVyZXN0IHJhdGVzSWYgbW9uZXkgZG9lc24ndCBidXkgaGFwcGluZXNzLCB3aHkgYXJlIHdlIHNvIG9ic2Vzc2VkIHdpdGggZ2V0dGluZyBtb3JlIG9mIGl0P1BvbGljeSBkZWNpc2lvbnMsIGludGVyZXN0IHJhdGVzIHNsb3dlZCB0aGUgcmVhbCBlc3RhdGUgbWFya2V0LCBhbmQgdGhleSdyZSBuZWVkZWQgZm9yIGEgcmVib3VuZFRoZSBhdmVyYWdlIEhFTE9DIGhvbGRlciBhdCBhIGZlZGVyYWxseSByZWd1bGF0ZWQgYmFuayBvd2VzICQ2NSwwMDAuIFRoZSBzdXJ2ZXkgYnkgdGhlIE90dGF3YSBiYXNlZCBjb25zdW1lciBwcm90ZWN0aW9uIGFnZW5jeSB3YXMgZGVzaWduZWQgdG8gdHJhY2sgaG93IGhvbWUgZXF1aXR5IGxpbmVzIG9mIGNyZWRpdCBhcmUgYmVpbmcgdXNlZCwgYW5kIGhvdyBtdWNoIGNvbnN1bWVycyBrbm93IGFib3V0IHRoZW0uClRoZSBzYW1lIHByZXNzIHJlbGVhc2UsIFdQVCBFeGVjdXRpdmUgVG91ciBEaXJlY3RvciBNYXR0IFNhdmFnZSBhZGRlZCwgaGF2ZSBhbHdheXMgYmVsaWV2ZWQgdGhhdCBiZWluZyBhIG1lbWJlciBvZiB0aGUgV1BUIENoYW1waW9ucyBDbHViIGlzIGFuIGluY3JlZGlibGUgaG9ub3IuIApGb3JnZXQgdGhlIGJhc2ljcywgc3VjaCBhcyBwYXRjaCBtYW5hZ2VtZW50LiAKWW91IGNhbiB0YWtlIGEgcGhvdG8gb2YgeW91ciBjb2xsZWFndWVzIGFuZCBhbm90aGVyIG9uZSBvZiB5b3VyIGJ1ZGRpZXMgYW5kIHRoYW4gdGFnIGVhY2ggZmFjZSB0byBpdHMgcmVzcGVjdGl2ZSBwaG9uZWJvb2sgZW50cnkuIFRoZW4geW91IGFyZSBvbmUgcGhvdG8gYXdheSBmcm9tIGNhbGxpbmcgZXZlcnlvbmUgaW4gZm9yIGEgcG9rZXIgbmlnaHQgYXQgeW91cnMuLiAKQSBwcmUgcHJpbnRlZCwgZWFzaWx5IGxlZ2libGUsIGFuZCB0b3RhbGx5IGNvbnZlbmllbnQgbWV0aG9kIG9mIGNhcnBldGJvbWJpbmcgcGVvcGxlIHdpdGggcmFuZG9tIGNvbWUgb25zLiBKdXN0IGxpa2UgbW9kZXJuIGNyZWVweSB0ZXh0cywgdGhpcyBtZXRob2QgcmFyZWx5IHJlc3VsdGVkIGluIHN1Y2Nlc3MsIGJ1dCB0aGF0IG5ldmVyIHN0b3BwZWQgYW55b25lIHRydWx5IGRldGVybWluZWQgdG8gYWN0IGxpa2UgYSBmb29sLi4gCldlbGwgaWYgdGhleSBjbG9zZXN0IGNvdXNpbnMgKGl0IHNob3VsZCBpbmRpY2F0ZSB3aGV0aGVyIEZURE5BIGNvbnNpZGVycyB0aGVtIHJlbW90ZSBvciBub3QpLCB0aGVuIHRoZXkgYXJlIGdvaW5nIHRvIGJlIHlvdXIgcmVsYXRpdmVzLiAKKHRpY2tldHMgYXJlICQxMCkuIEZyZWUuIApZb3UgZG8gbm90IGhhdmUgdG8gYmUgZmFjaW5nIGEgYmV0IGxpa2Ugd2l0aCBwb3Qgb2RkcyBmb3IgaXQgdG8gYmUgYSBjcml0aWNhbCBjb25zaWRlcmF0aW9uLiAKVGhlcmUgYXJlIG1ldGFwaG9yaWNhbCBlbmNsYXZlcyB3aXRoaW4gZW5jbGF2ZXMgd2l0aGluIGVuY2xhdmVzLCBhbmQgbW9zdCBvZiB0aGUgY2l0aWVzIGluaGFiaXRhbnRzIG9ubHkga25vdyBvZiB0aGUgaGFuZGZ1bCB0aGF0IHRoZWlyIG93biBsaXZlcyBwYXNzIHRocm91Z2gsIHVuYXdhcmUgdGhhdCB0aGUgcmVzdCBleGlzdHMuLiAKVG8gZmluZCB0b25zIG9mIGdyZWF0IHBsYWNlcyB0byBwbGF5IG9ubGluZSBwb2tlci4gCjEzIHJlYXNvbnMgd2UgbG92ZSBXYXJ3aWNrIENhc3RsZSBhcyBpdCBjZWxlYnJhdGVzIDEKT3VyIGZyaWVuZHMgd2VyZW4gYXMgc3VwcG9ydGl2ZSBhcyB0aGV5IGhhZCBhbHdheXMgdGhvdWdodCBpdCB3YXMgdG94aWMgdGhhdCB3ZSB3b3VsZCBkbyAiY291cGxlIHRoaW5ncyIuIE5vbmV0aGVsZXNzLCB3ZSByZW1haW5lZCBiZXN0IGZyaWVuZHMsIG9ubHkgc2xvd2x5IGxvc2luZyB0b3VjaCB3aGlsc3Qgd2Ugd2VudCBvdXIgc2VwYXJhdGUgd2F5cyBmb3IgY29sbGVnZS4gCk1lYW53aGlsZSwgbXkgcmVzcGVjdCBmb3IgZmlyZWZpZ2h0ZXJzIGlzIHNvYXJpbmcuIEkgYWxyZWFkeSBsb29rZWQgdXAgdG8gdGhlbSBmb3IgdGhlaXIgdmFsb3IgYW5kIHNlcnZpY2UgdG8gdGhlIGNvbW11bml0eS4gTm93IEkgYWxzbyBzZWUgdGhlbSBhcyBtb2RlbHMgb2YgZml0bmVzcy4KIldlJ3JlIGhlYWRpbmcgc3RyYWlnaHQgaW50byB0aGUgY2FzaW5vLiBXZSdyZSB3YWxraW5nIHRocm91Z2ggdGhlIHBpdCBhcmVhIHJpZ2h0IG5vdy4gClRoZSAkMSwwMDAuMDAgY2FzaW5vIHBva2VyIGNoaXAgaXMgbm9ybWFsbHkgYSBiaXQgbGFyZ2VyIHRoYW4gdGhhdCBvZiBzdGFuZGFyZCBwb2tlciBjaGlwcy4uIApTaWduaW5nIHVwIHdpdGggdGhlIGNsdWIgaXMgb2Z0ZW4gcmVxdWlyZWQsIGJ1dCB0aGlzIGlzIHR5cGljYWxseSBmcmVlLi4gClRoZSBVSSBvZiB0aGUgZGVza3RvcCBicm93c2VyIGhhZCBtb3ZlZCBmcm9tIGEgZmxhc2ggYmFzZWQgc29mdHdhcmUgdG8gSFRNTCBpbiAyMDE1IGFuZCBub3csIHRoZSBzaXRlIGlzIG9uY2UgYWdhaW4gaW1wcm92aW5nIHRoZSBzb2Z0d2FyZSBieSBtaWdyYXRpbmcgdG8gQW5ndWxhciBKUy4gQWRkYTUyIDMuMCBicmluZ3MgbWFueSBiZW5lZml0cyB0byB0aGUgcGxheWVycyBmcm9tIHRoZSBsb2JieSBpdHNlbGYgYW5kIGhlcmUgYXJlIHNvbWUgb2YgdGhlIGtleSBmZWF0dXJlcy4KIkkgaGF2ZSBub3cgb2NjdXBpZWQgYmVhY2hmcm9udCByZWFsIGVzdGF0ZSBpbiBteSBjb21wZXRpdG9yJ3MgaGVhZCwgYW5kIHRoYXQgbWFrZXMgbWUgc21pbGUsIiBEb25vdmFuIHNhaWQgb24gc3RhZ2UuICJFdmVyeSBjb21wYW55IGlzIGd1aWx0eSBpbiBidWlsZGluZyBhIG5hcnJhdGl2ZSBpbiBob3cgdGhleSB3YW50IHRoZSB3b3JsZCB0byB3b3JrIGFuZCBJIGxvdmUgdGhlIGZhY3Qgd2UgYnJva2Ugb3VyIGluZHVzdHJpZXMgbmFycmF0aXZlIHR3byBkYXlzIGFnby4gVGhleSdyZSBmcnVzdHJhdGVkLiIKNSBwb2ludHMgIHN1Ym1pdHRlZCAxMCBob3VycyBhZ29Ob3QgaW4gdGhlIHNsaWdodGVzdC4gCldlIGRvbid0IG5lZWQgbm8gKG1pcyllZHVjYXRpb24KV3JpdGUgc2FtZSBlc3NheSB3LyBncm91cCBvZiBwZW9wbGUgd3JpdGluZyBlc3NheXMgID4gc3Ryb25nIGhhcm1vbmljcywgYW1wbGlmaWVkIGVmZmVjdCwgc3VzdGFpbmVkLgpBZnRlciBjaG9vc2luZyB5b3VyIGFjY29tcGxpY2VzIGluIHlvdXIgbWVuYWdlIGEgdHJvaXMsIHlvdSB0YWtlIGEgbGlmdCB0byB0aGUgcm9vbS4gWWVzLCBpdCBqdXN0IGEgc2hvcGhvdXNlIGJ1dCBpdCBoYXMgYW4gZWxldmF0b3IuIFRoZSByb29tIGlzIGRpZmZlcmVudCB0byBhbnkgb3RoZXJzIEkgaGF2ZSBzZWVuLiAKVHJpZWQgYSBsb3Qgb2YgZGlmZmVyZW50IHRoaW5ncywgYnV0IHRoZSBvbmx5IG9uZSB0aGF0IEkgY29uZmlkZW50IGhlbHBlZCAodmVyc3VzICJJIHRoaW5rIHRoaXMgbWlnaHQgYmUgaGVscGluZz8iKSB3YXMgVGhlIE9yZGluYXJ5IE5pYWNpbmFtaWRlIFppbmMuClNvIHlvdSBjb3VsZG4ndCBiZSBibGluZHNpZGVkIGJ1dCB3b3VsZCBoYXZlIGFuIGF1ZGlvIGJ1ZmZlciBpZiBoZSBhcHByb2FjaGVzLiBJZiBoZSBkb2VzIGFwcHJvYWNoLCB5b3UgY2FuIGdldCB1cCBhbmQgd2FsayBzb21ld2hlcmUuIApUaGFua2Z1bGx5IG15IGNoZW1pc3Qgd2FzIHVuZGVyc3RhbmRpbmcgYW5kIGxldCBteSBoYXZlIG15IG5vcm1hbCBwcmljZSBmb3IgdGhvc2UgdHdvIG1vbnRocyBhbmQgdGhlbiBqdXN0IHVwZGF0ZWQgdGhlIHN5c3RlbSB3aGVuIG15IG5ldyBjYXJkIGNhbWUgdGhyb3VnaC4KTmV3c1BsYXlpbmcgU29tZSBTdHVwaWQgU2hvdHMsIFAgS2FzaHlhcCB0byBXaWZlIFNhaW5hIE5laHdhbCBEdXJpbmcgQWxsIEVuZ2xhbmQgQ2hhbXBpb25zaGlwcyAyMDE5IE1hdGNoS2FzaHlhcCByZXByaW1hbmQgZGlkIHdvcmsgZm9yIFNhaW5hIHNvbWV3aGF0IGFzIGhlIG1hbmFnZWQgdG8gcmVkdWNlZCB0aGUgZ2FwIHRvIDEyIDE0IGFmdGVyIHRoZSBicmVhay4gCkZ1bmN0aW9uaW5nIHRpZ2h0IGFuZCB3ZWFrIG11c2NsZSBncm91cHMgY2FuIG1ha2UgdGhlbSBmZWVsIHZpdmlkIG9uY2Ugb25jZSBtb3JlLiAKSXQgZG9lc24gYW55dGhpbmcgZnJvbSB0aGUgb3V0c2lkZS4gClRoZSBtb3N0IGNvbW1vbiBkZXRlY3Rpb24gdGhlbWUgaW4gYmlvbG9neSwgaXMgbGlnaHQuIFdlIHRha2UgYWR2YW50YWdlIG9mIG91ciBhYmlsaXR5IHRvIHVzZSBkaWZmZXJlbnQgd2F2ZWxlbmd0aHMgb2YgbGlnaHQgYm90aCBpbiBhbmQgb3V0IG9mIHRoZSB2aXNpYmxlIHJhbmdlLCBhbmQgdGhlIGZhY3QgdGhhdCBtYW55IGFzcGVjdHMgb2YgYmlvbG9neSBjYW4gYmUgb2JzZXJ2ZWQgYnkgZGV0ZWN0aW5nIGVpdGhlciB0aGUgd2F2ZWxlbmd0aHMgb2YgbGlnaHQgdGhhdCB0aGUgYWJzb3JiLCBvciB0cmFuc21pdC4gCkkgY2FuIHNlZSB0aGUgY29sb3IgeW91IHVzZWQsIGFuZCBpdCBsb29rcyBsaWtlIGEgZ3JlYXQgY29sb3IgY2hvaWNlLCBidXQgaXQgd291bGQgdGllIHlvdXIgbG9vayB0b2dldGhlciBtb3JlIGlmIGl0IHdhcyBtb3JlIGJsZW5kZWQvYmlnZ2VyLiBJdCBkb2VzIGxvb2sgbGlrZSB5b3VyIGZvdW5kYXRpb24gaXMgYnJlYWtpbmcgdXAgYSBsaXR0bGUgb24geW91ciBub3NlLiAKQXMgZmFyIGFzIHRoZSBtb20gc3BsYWluaW5nIHN0dWZmIGdvZXMsIGp1c3Qga2VlcCBzYXlpbmcgdGhhdCB5b3UsIHlvdXIgT0IgYW5kIHdoZW4gaGUgdGltZSBjb21lcyB5b3VyIHBlZGlhdHJpY2lhbiBoYXZlIGRlY2lkZWQgdGhhdCB0aGlzIGlzIHRoZSBiZXN0IHdheSB0byBkbyB0aGluZ3MuICJNb20sIGJlc3QgcHJhY3RpY2VzIGhhdmUgY2hhbmdlZCBzaW5jZSB5b3Ugd2VyZSByYWlzaW5nIGJhYmllcy4gCkZseW5uIGFsc28gc2FpZCBzaGUgZGlkbiBrbm93IHdobyB0aGUga2lsbGVyIHdvdWxkIGJlIHdoZW4gc2hlIHN0YXJ0ZWQgdGhlIGJvb2suIAo4MDAga2cgVGVycmEgUHJldGEgYXVzIGRlbiBnZXNhbW1lbHRlbiBGa2FsaWVuLApNaWNoYWVsIExld2lzIHZlcnN1cyAnVGhlIEh1bWFuIFBpcmFuaGEnIGluIEFzcGVuClNvb24gd2Ugd2lsbCBoYXZlIHRlbGVwYXRoeSBidXQgdW50aWwgdGhlbiwgSSdkIHJlY29tbWVuZCBqdXN0IGJlaW5nIGEgc2VsZiBhY3R1YWxpemVkIHNlbGYgYW5kIGxldHRpbmcgdGhlIGhvbG9ncmFtIGFyb3VuZCB5b3UgYnJpbmcgaW4gdGhlIHJpZ2h0IHBlb3BsZSBhbmQgbGV0dGluZyB0aGUgd3JvbmcgcGVvcGxlIGZhbGwgYXdheS4uIApCZXQgc2l6aW5nIGlzIGEga2V5IGFzcGVjdCB0byB5b3VyIGdhbWUsIHNvIHlvdSBuZWVkIHRvIGdpdmUgaXQgYSBsb3Qgb2YgdGhvdWdodC4gCkkgZmluYWxseSBxdWl0IGFib3V0IGhhbGYgYSB5ZWFyIGFnbyBvciBzby4gClRoZSBNYXNzYWdlIFN0b3JlLCA0NjM1IEJyb2Fkd2F5LCBhZGRlZCBwcm9kdWN0cyBzdWNoIGFzIHNoZWV0cywgbG90aW9ucywgb2lscywgbXVzaWMgYW5kIGNhbmRsZXM7IGJ1dCBpdCB3YXMgZGl2ZXJzaWZpY2F0aW9uIHRoYXQgUmV5bm9sZHMgY3JlZGl0cyBmb3IgdGhlIGxvbmdldml0eSBvZiB0aGUgYnVzaW5lc3MuClRoZSBkZXBvc2l0IGJlaW5nIHJldHVybmVkIHRvIHRoZSBhZ2VudCBpcyByYXRoZXIgb2RkIGltby4gRXNwIGJlY2F1c2UgaW4gdGhhdCBzaXR1YXRpb24gdGhleSBiZSBlbnRpdGxlZCB0byBjb21taXNzaW9uIHJlZ2FyZGxlc3Mgb2YgaWYgdGhlIGRlYWwgY2xvc2VzLiAKIkknbSBub3cgcmVhbGx5IGF3YXJlIG9mIHdoYXQgSSdtIHB1dHRpbmcgb3V0IGludG8gdGhlIHdvcmxkLCIgQ2hhc3RhaW4gc2FpZCBhdCB0aGUgcHJlc3MgY29uZmVyZW5jZS4gIldoYXQgYW0gSSBkb2luZyB0byBjb250cmlidXRlIHRvIHRoZSBpbmR1c3RyeSBpbiBhIHBvc2l0aXZlIHdheT8gVG8gbWUgdGhhdCBtZWFucyBwbGF5aW5nIHdvbWVuIHdobyBhcmUgY29tcGxpY2F0ZWQsIHdobyBhcmVuJ3QgYW5nZWxpYyBvciBhIHNleHkgb2JqZWN0IG9mIGRlc2lyZS4gSSdtIGludGVyZXN0ZWQgaW4gcGxheWluZyBhdXRoZW50aWMgd29tZW4gd2hvIG1ha2UgYSBsb3Qgb2YgbWlzdGFrZXMgYW5kIHdobyBjYW4gZ2V0IHF1aXRlIG1lc3N5IHNvbWV0aW1lcy4iLiAKU29ycnkgdG8gaGVhciBhYm91dCB5b3VyIGRpc2FwcG9pbnRpbmcgZXhwZXJpZW5jZS4gSSB3YXMgYXQgYSBzaG93IHdoZXJlIEdvZHNtYWNrIG9wZW5lZCBmb3IgTWV0YWxsaWNhLiBTb21lb25lIG15IGV4IGluIGxhd3Mga25ldyB3YXMgYW4gZXF1aXBtZW50IHRydWNrIGRyaXZlciBmb3IgdGhlIHRvdXIgYW5kIGdvdCBmcm9udCByb3cgaW4gdGhlIHN0YW5kcyB0aWNrZXRzIGZvciB1cy4gCjIwMTMgSUVFRSAuIFBwLiAyMDEzLiAKSW4gb25lIGRvY3VtZW50LCBoZSBzaG93ZWQgYSB0ZWxlZ3JhbSBiZXR3ZWVuIFRhbGF0IFBhc2EgYW5kIGFuIEFybXkgZ2VuZXJhbCB3aGVyZSBoZSB0YWxrcyBhYm91dCBob3cgQXJtZW5pYW5zIHNob3VsZCBiZSByZW1vdmVkIGZyb20gdGhlaXIgdmlsbGFnZXMgYnV0IHRoZSByaWdodCB0aW1lIGhhcyBub3QgYXJyaXZlZCB5ZXQuIEhlIGludGVycHJldHMgdGhpcyBhcyBhbiBjb25maXJtYXRpb24gb2YgVGFsYXQgaGF0cmVkIG9uIEFybWVuaWFucyBhbmQgdGhhdCBoZSB3YW50cyBkZXN0cnVjdGlvbiBvZiB0aGUgQXJtZW5pYW5zLiAKVGhlc2UgbG9vdCBib3hlcywgYWxzbyBjYWxsZWQgY2FyZHMsIG9yIHBhY2tzIGhhdmUgcmFuZG9tIHByaXplcyBhbmQgdGllcmVkIHN0cnVjdHVyZWQgcGF5IHN5c3RlbXMsIHNvIHRoYXQgdXNlcnMgY2FuIHBheSBtb3JlIGZvciB0aGUgY2hhbmNlIGF0IHdpbm5pbmcgYmlnZ2VyIHByaXplcy4uIApCdXQgbW9tZW50cyBsYXRlciBoZSBjaGFuZ2VkIGhpcyBtaW5kLgpIZSByZWNvbW1lbmRzIG5vdCBoYXZpbmcgdG9vIG1hbnkgaG9sZXMgYWxsIHRvZ2V0aGVyLCBhbmQgdG8gcHJvdmlkZSBzbWFsbCA0bW0gYW5kIG1lZGl1bSA2bW0gaG9sZXMgZm9yIHRoZSB0aW55IG1hc29uIGJlZXMgdGhhdCBsaXZlIHRocm91Z2hvdXQgdGhlIHNwcmluZyBhbmQgc3VtbWVyLiAKWW91IHVzZSByZWRkaXQgZ2VuZXJhbGx5IGZpbmQgaXQgdG8gYmUgYSBnb29kIHRydXN0d29ydGh5IHNvdXJjZSBvZiBpbmZvcm1hdGlvbi4gClJleW5vbGRzIHdpbGwgcmVqb2luIEZveCBhcm0gb2YgdGhlIE1hcnZlbCBlbXBpcmUgaW4gRGVhZHBvb2wsIGEgZnVsbCByZWJvb3Qgb2YgdGhlIGNoYXJhY3RlciBoZSBwb3J0cmF5ZWQgaW4gMjAwOSB1bnNhdGlzZnlpbmcgWCBNZW4gT3JpZ2luczogV29sdmVyaW5lLiBJZiB0aGUgbW92aWUgaXMgc3VjY2Vzc2Z1bCwgaXQgYSBnaXZlbiB0aGF0IERlYWRwb29sIHdpbGwgYmUgYW4gb25nb2luZyBwcmVzZW5jZSBpbiBGb3ggTWFydmVsIHVuaXZlcnNlLCBsaWtlbHkgaW50ZXJhY3Rpbmcgd2l0aCB0aGUgWCBNZW4uCk5ldyByZXNvcnRzIG9mdGVuIGRhbmdsZSBzcGEgZGVhbHMgdG8gaGVscCBnZXQgdGhlIHdvcmQgb3V0LiAKSSBoYWQgdGhpcyB3ZWRkaW5nIGZlYXR1cmUgc3VibWl0dGVkIHRvIG1lIGEgd2hpbGUgYmFjayBhbmQgbGlrZSBJIGRvIHdpdGggYW55IHdlZGRpbmcgSSBpbnRlcmVzdGVkIGluIGZlYXR1cmluZywgSSBzZW50IHRoZSBwaG90b2dyYXBoZXIgYSBjb3B5IG9mIG15IEJyaWRlIHF1ZXN0aW9ubmFpcmUgZm9yIHRoZSBicmlkZSB0byBjb21wbGV0ZS4KTGEgcHJnbmFuY2UgZGUgc2VzIHVzYWdlcyBhbmNpZW5zIGVzdCBhdHRlc3RlIHBhciBkaWZmcmVudHMgbm9tczogbGUgbW90IGFuZ2xhaXMgZmV2ZXJmZXcgdG1vaWduZSBkZXMgcHJvcHJpdHMgZmJyaWZ1Z2VzIGRlIGxhIGdyYW5kZSBjYW1vbWlsbGUsIGFsb3JzIHF1ZSBtdXR0ZXJrcmF1dCAoaGVyYmUgZGVzIG1yZXMsIGVuIGFsbGVtYW5kKSByZW5kIGNvbXB0ZSBkZSBzZXMgcHJvcHJpdHMgZW1tbmFnb2d1ZXMgcXVpIG4gcGFzIGNoYXBwIGF1IG1kZWNpbiBhbmdsYWlzIE5pY29sYXMgQ3VscGVwZXIgcXVpIGNyaXZhaXQgYXUgWFZJSSBtZSBzaWNsZSBxdWUgbGEgZ3JhbmRlIGNhbW9taWxsZSBlc3QgdW4gZm9ydGlmaWFudCBuYXR1cmVsIGRlIGxhIG1hdHJpY2UgW10gRWxsZSBuZXR0b2llIGNlbGxlIGNpIGVuIGV4cHVsc2FudCBsZXMgcmVzdGVzIGR1IHBsYWNlbnRhIGFwcnMgbCBbY2hvc2UgaW1wb3J0YW50ZSBzYW5zIHF1b2kgZGVzIGluZmVjdGlvbnMgcGV1dmVudCBzZSBkY2xhcmVyXS4gRWxsZSBwcm9kaWd1ZSB0b3V0IGxlIGJpZW4gcXUgZmVtbWUgcGV1dCBhdHRlbmRyZSBkIHBsYW50ZS4uIApJdCBzb3VuZHMgbGlrZSB5b3UgYXJlIHVuZGVyIHJvbGxlZCBmb3IgdGhlIGdhbWUgYXQgdGhlIGNhc2luby4gSWYgeW91IGFyZSB1bmFibGUgdG8gY29udHJpYnV0ZSB0byBhIHBva2VyIGJhbmtyb2xsIGJ5IHlvdXIgbm9ybWFsIGpvYiwgdGhlbiB0aGUgYmVzdCBzdHJhdGVneSBpcyB0byBwbGF5IG1pY3Jvc3Rha2VzLiAKUmVzdHRvICAxIHBvaW50ICBzdWJtaXR0ZWQgMTEgbW9udGhzIGFnbwpUaGVuIGEgcmV2b2x1dGlvbmFyeSBlbmdpbmUgaXMgZGV2ZWxvcGVkIGJ5IGEgYnJpbGxpYW50IGJ1dCB1bnN0YWJsZSBzY2llbnRpc3QsIExpZXV0ZW5hbnQgQ29tbWFuZGVyIE9ydGhpcyBvZiB0aGUgSW50ZXJuYXRpb25hbCBQZWFjZSBGbGVldC4gCktoYWxpZmEgaXMgcHJvdWQgb2YgYm90aCB0aGUgd29yayBzaGUncyBkb25lIG9uIFR3aXRjaCBhbmQgaGVyIG5ldyBzaG93IG9uIENvbXBsZXguIEhvd2V2ZXIsIHRoZXJlJ3Mgb25lIHBhcnQgb2YgaGVyIG1pbmkgbWVkaWEgYnVzaW5lc3Mgc2hlIGRvZXNuJ3QgcmVhbGx5IHRhbGsgYWJvdXQ6IGhlciBhcHAuCiBsYSBtaSBzZXNzaW9uLCBsYSBjbGFzc2UgcXVpIHByYXRpcXVhaXQgbGUgcHJvZ3JhbW1lIGRlIG1hc3NhZ2Ugcydlc3Qgc291ZGFpbmVtZW50IHRyYW5zZm9ybWUuIApBbmQgSSdtIG5vdCBzdXJlIGFib3V0IHRoZSBvdGhlciBvbmUsIGJ1dCBJIHRoaW5rIGl0J3Mgb24gaGVyIGxvd2VyIGJhY2suIApBcyBmb3IgbWVtb3JpZXMgcmVzdXJmYWNpbmcgICBpdCBmZWVscyBsaWtlIHNoaXQgYW5kIGl0J2xsIHByb2JhYmx5IG1ha2UgeW91IHNpY2sgYnV0IEkgcmVjb21tZW5kIHlvdSB3b3JrIHRocm91Z2ggdGhlbSBieSBhY2tub3dsZWRnaW5nIHRoYXQgaXQgd2FzIHdyb25nIG9mIGhlciwgYW5kIHN0YXJ0IHRvIHVuZGVyc3RhbmQgd2hhdCBkYW1hZ2Ugc2hlJ3MgZG9uZSBhbmQgYWxzbyBob3cgdG8gbW92ZSBmb3J3YXJkIHBvc2l0aXZlbHkuIEl0J3MgdG91Z2ggYnV0IHdpdGggdGhlIHN1cHBvcnQgb2YgcGVvcGxlIHdobyB0cnVseSBsb3ZlIHlvdSwgeW91IHdpbGwgY29tZSB0aHJvdWdoIHRoZSBvdGhlciBzaWRlLiBCZSBzdHJvbmcuIApJIGtub3cgaXQgYSBoaWdobHkgZGViYXRlZCBob3QgdG9waWMgYW5kIGJvdGggYXJlIGEgbG90IG9mIGZ1biwgYnV0IDQgd29ybGQgaGFzIG11Y2ggbW9yZSB0byBleHBsb3JlIGFuZCBpcyBtb3JlIGRlbnNlbHkgcG9wdWxhdGVkIHdpdGggc29tZSB2ZXJ5IGZ1biBxdWVzdHMuIApJdCBydW4gYnkgYSBndXkgbmFtZWQgSWJyYWhpbSB3aG8gc3BlYWtzIHBlcmZlY3QgRW5nbGlzaCBhbmQgaXMgYSBncmVhdCBidXNpbmVzc21hbi4gCkkgYWxzbyByZWFsbHkgaG9wZWQgdGhlIGJvb2sgd291bGQgc3BlYWsgdG8gUGtlaCBhYm91dCB0aGUgbmVlZCB0byBvd24gdGhlaXIgaGlzdG9yeSBhbmQgYWdhaW4gdGhlIHJlY2VwdGlvbiBoYXMgYmVlbiByZW1hcmthYmxlLiBBdCB0aW1lcyBpdCBoYXMgZmVsdCBsZXNzIGxpa2UgYSBib29rIGFuZCBtb3JlIGxpa2UgSSdtIHBhcnQgb2Ygc29tZSBraW5kIG9mIHNvY2lhbCBtb3ZlbWVudC4gQW5kIG15IG1lc3NhZ2UgaXMgYWx3YXlzIHRoYXQgdGhlIE5ldyBaZWFsYW5kIFdhcnMgd2VyZSBkZWZpbmluZyBjb25mbGljdHMgaW4gb3VyIGhpc3RvcnkuIApObyB0aW1lLCBoZSB3YXMgc29hcmluZyBvdmVyIDYwLDAwMCBmZWV0LiBVcCBoZXJlLCB3aXRob3V0IGEgcHJlc3N1cml6ZWQgZmxpZ2h0IHN1aXQgb3IgY29ja3BpdCwgYmxvb2Qgd291bGQgYm9pbCBhbmQgaW50ZXN0aW5lcyBidXJzdC4gCk5vIGxpbWl0IHJpbmcgZ2FtZXMgbGlrZSB0aGVzZSBjYW4gYmUgcHJvZml0YWJsZSBmb3IgdGhlIGJldHRlciBwbGF5ZXJzLiBBIHN0cm9uZyByZWNvbW1lbmRhdGlvbiBpcyB0byBwbGF5IGV4dHJlbWVseSB0aWdodCB3aGVuIHlvdSBmaXJzdCBzaXQgYXQgYSB0YWJsZSB1bnRpbCB5b3UgZ2V0IGEgZmVlbCBmb3IgeW91ciBvcHBvbmVudHMuIFRoZXNlIGdhbWVzIGFsbG93IHNvbGlkIHBsYXllcnMgdG8gdXNlIGFsbCBvZiB0aGVpciB0b29scyBpbiBhcmVhcyBzdWNoIGFzIGJsdWZmaW5nLCBwb3Qgb2RkcywgcHN5Y2hvbG9neSwgYW5kIHNvbGlkIGdhbWUgc2tpbGxzLiBEcmF3aW5nIGhhbmRzIGdvIGRvd24gaW4gdmFsdWUgYW5kIG1hZGUgaGFuZHMgKHN1Y2ggYXMgcG9ja2V0IHBhaXJzKSBnbyB1cC4KV2hhdCBJIGRvbiBnZXQgaXMgcGVvcGxlIHdobyB0aGluayBjcmFzaGluZyBvdXQgaW50byBhIE5vIERlYWwgZWxpbWluYXRlcyB1bmNlcnRhaW50eS4gSWYgd2UgY3Jhc2ggb3V0IEkgZ3Vlc3MgaXQgd2lsbCBhbnN3ZXIgdGhlIHF1ZXN0aW9uICJBcmUgd2UgZnVja2VkIHlldD8iIGJlY2F1c2UgdGhlIGFuc3dlciB3aWxsIGJlIEJ1dCBpdCBkb2VzbiBhbnN3ZXIgYW55IHF1ZXN0aW9ucyBhYm91dCBhcnJhbmdlbWVudHMgb3IgYWdyZWVtZW50cy4gV2Ugd2lsbCBiZSBzdHVjayBvbiB0aGUgd29yc3QgcG9zc2libGUgdHJhZGUgdGVybXMgd2l0aCB0aGUgaG9wZSBiZWluZyB0aGF0IHdlIHdpbGwgaW1wcm92ZSB0aGVtIG92ZXIgdGhlIGNvbWluZyBtb250aHMveWVhcnMvZGVjYWRlcy4gCkV2ZW50dWFsbHkgZHJvdmUgVG9ueSBIYXdrIGludG8gdGhlIGdyb3VuZCwgdGhlbiBHdWl0YXIgSGVybywgRGVzdGlueSAobm90IHN1cmUgaWYgQWN0aXZpc2lvbiBvciBCdW5naWUpLCBhbmQgaW5ldml0YWJsZSBDYWxsIG9mIER1dHksIHVubGVzcyB0aGV5IGZpbmQgYSB3YXkgdG8gcGl2b3QgYW5kIGNvbXBldGUgbG9uZyB0ZXJtIGFnYWluc3QgdGhlIGZyZWUgdG8gcGxheSBCYXR0bGUgUm95YWxlIGdhbWVzLiAKSXQgZG9lc24gbWF0dGVyIGlmIHlvdSBoYXZlIGJlZW4gYSBwaW91cyBjaHVyY2ggY2FtcCBnaXJsIHlvdXIgZW50aXJlIGxpZmUgc3Byb3V0IGEgcGFpciBvZiB3ZWxsIHNoYXBlZCBib29icywgb3IganVzdCBhIHZlcnkgcHJldHR5IGZhY2UsIGFuZCB5b3UgYXJlIGEgc2lubmVyIGRlc3RpbmVkIGZvciBoZWxsLCBub3QgbWFycmlhZ2UuIEkgc3VyZSB0aGV5IHdhbnQgYSAicHJldHR5IiBnaXJsIGZvciB0aGVpciBib3ksIGJ1dCBub3Qgc29tZSBKZXplYmVsIG9mIGNvdXJzZSwgd2hpY2ggYWN0dWFsbHkgbWVhbnMgbm8gb25lIG5vbiBpbWFnaW5hcnkgcXVhbGlmaWVzLCB3aGljaCBtZWFucyB0aGV5IGdldCB0byBrZWVwIGhpbSBmb3JldmVyLCB3aGljaCBpcyBleGFjdGx5IHdoYXQgY29udHJvbGxpbmcgcGFyZW50cyB3YW50LiBPciBtYXliZSBpdHMgYSByYWNpc3QgdGhpbmcuIApZb3UganVzdCBuZWVkIHRvIHJlbWVtYmVyIHdoYXQgY29tZXMgYXJvdW5kIGlzIGFsbCBhcm91bmQsIGFuZCB3aGVuIHN1cHBseSBhbmQgY29tbWFuZCBmYWlscyB5b3Ugd2lsbCBiZSB0aGUgZmlyc3QgdG8gZ28uIE1ha2UgbXkgd29yZHMsIHdoZW4geW91IGdldCBkb3duIHRvIGJyYXNzIHN0YWNrcyBpdCBkb2VzbiB0YWtlIHJvY2tldCBhcHBsaWFuY2VzIHRvIGdldCB0d28gYmlyZHMgc3RvbmVkIGF0IG9uY2UuIEl0IGNsZWFyIHdobyBtYWtlcyB0aGUgcGFudHMgaW4gdGhpcyByZWxhdGlvbnNoaXAsIGFuZCBzb21ldGltZXMgeW91IGp1c3QgaGF2ZSB0byBzd2FsbG93IHlvdXIgcHJpemUgYW5kIGFjY2VwdCB0aGUgZmFjdHMuIApMdWRkZW4gcmVwb3J0ZWRseSBwcm9wb3NlZCB0byBXaGl0ZSBzZXZlcmFsIHRpbWVzIGJlZm9yZSBzaGUgYWN0dWFsbHkgYWNjZXB0ZWQsIGFjY29yZGluZyB0byBEYWlseSBNYWlsLiBXaGl0ZSBuZXZlciByZW1hcnJpZWQgYWZ0ZXIgTHVkZGVuIGFuZCBvbmNlIHRvbGQgTGFycnkgS2luZywgeW91IGhhZCB0aGUgYmVzdCwgd2hvIG5lZWRzIHRoZSByZXN0PyBXaGl0ZSBoYXMgYWxzbyBzYWlkLCBoYWQgbG92ZWx5IHJlbGF0aW9uc2hpcHMsIGJ1dCBub3QgYW55dGhpbmcgaW4gdGhlIGxlYWd1ZSBvZiBBbGxlbi4gTm8sIEkgd29uIE5vLCBJIHdvbiBsZWF2ZSBDYWxpZm9ybmlhLiAKV2hlbiBzaGUgd2FzIGVuZ2FnZWQsIHNoZSBhc2tlZCBtZSB0byBiZSBoZXIgTU9ILiBJIHdhbnRlZCB0byByZWZ1c2Ugc28gYmFkIGJ1dCBteSBtb3RoZXIgcHJldHR5IG11Y2ggZGVtYW5kZWQgSSBkbyBpdC4gClRoZSBvbmUgd2FzIGFsc28gYW4gYXZpZCBwb2tlciBhbmQgYmxhY2tqYWNrIHBsYXllci4gClZhcG9yaG93ZXMgIDEgcG9pbnQgIHN1Ym1pdHRlZCAzIGRheXMgYWdvCk1hc3NhZ2UgcHJvdmVzIHRvIGJlIGhlbHBmdWwgZm9yIHdvbWVuIGluIGxhYm91ciwgYmVjYXVzZSBpdCBwcm92aWRlcyB0aGVtIHBhaW4gcmVsaWVmLiAKVGlwcyBmb3IgbmVnb3RpYXRpbmcgdGhlIGJlc3QgcHJpY2Ugb24geW91ciBuZXcgaG9tZQpObyBDR1QgZXZlbnQgaGFzIG9jY3VycmVkIGFzIHRoZSBpdGVtIGhhc24gYmVlbiBzb2xkLCBzbyBpdCBhbiB1bnJlYWxpemVkIGxvc3MuIApBbm90aGVyIEZyZW5jaCBzdGFydHVwIGlzIGFuZ2xpbmcgdG8gZ2V0IGludG8geW91ciBtb3V0aC4gWSBCcnVzaCBoYXMgaW50cm9kdWNlZCBhIG5ldyB0b290aCBicnVzaGluZyBzeXN0ZW0gdGhhdCBpdCBjbGFpbXMgd2lsbCBjbGVhbiB5b3VyIHBlYXJseSB3aGl0ZXMgaW4gMTAgc2Vjb25kcyBmbGF0ICAgaW5zdGVhZCBvZiB0aGUgdHdvIG1pbnV0ZXMgcmVjb21tZW5kZWQgZm9yIGFuIG9sZCBmYXNoaW9uZWQgdG9vdGhicnVzaC4KWW91IGRvbid0IG5lZWQgdG8gY29uZHVjdCBicmFpbiBpbWFnaW5nIHRvIHJlYWxpemUgdGhhdCBlbW90aW9uIGNhbiBleGFjZXJiYXRlIHBhaW4gICB0aGVyZSdzIGEgcmVhc29uIHdoeSB3ZSB0cnkgdG8gZGlzdHJhY3QgYmFiaWVzIHdpdGggb3VyIGNhciBrZXlzIHdoZW4gdGhleSBmYWxsLiBXaGVuIHdlJ3JlIGFueGlvdXMgb3IgZGVwcmVzc2VkIGFib3V0IHBhaW4sIHRoZSBwYWluIGRvZXNuJ3QgZ28gYXdheS4gClNvbWUgdGhpbmsgdGhhdCB0aGUgU2Vjb25kIEFtZW5kbWVudCBpcyBvdXRtb2RlZCBpbiBhIHNvY2lldHkgd2hlcmUgb3VyIHN0YW5kaW5nIGFybXkgaXMgdGhlIHByaWRlIG9mIG91ciBOYXRpb24sIHdoZXJlIHdlbGwgdHJhaW5lZCBwb2xpY2UgZm9yY2VzIHByb3ZpZGUgcGVyc29uYWwgc2VjdXJpdHksIGFuZCB3aGVyZSBndW4gdmlvbGVuY2UgaXMgYSBzZXJpb3VzIHByb2JsZW0uIApGb3IgY29uc3RlbGxhdGlvbnMgLyBwYXR0ZXJucyB5b3UgZG9uIGhhdmUgdGhlIHdob2xlIG9wZW5pbmdzLiAKVGhlIHRoaW5ncyB5b3UgYXJlIHNheWluZyBhcmUgbm90IHRoaW5ncyB3aW5uaW5nIHBva2VyIHBsYXllcnMgc2F5LiBTdWNjZXNzZnVsIHBva2VyIHBsYXllcnMgYXJlIGFsd2F5cyB0YWxraW5nIGFib3V0IGFkanVzdGluZyBhbmQgYmFsYW5jaW5nIHlvdXIgcmFuZ2UuIApJY2ggd3JkZSBlcyB2aWVsbGVpY2h0IG1pdCA2MCBnciBTaGVhIHVuZCAzNSBnciBLYWthbyB2ZXJzdWNoZW4sIHZpZWxsZWljaHQgc29nYXIgbnVyIDI1IDMwIGdyIEtha2FvLiAKSXQgd291bGQgYmUgYSBub24gdGl0bGUgYm91dCwgYW5kIHRoZSBvbmx5IHBlcnNvbiB0aGF0IGJlbmVmaXRzIGZyb20gdGhpcyBmaWdodCBpcywgeW91IGd1ZXNzZWQgaXQsIEJvYiBBcnVtLi4gCk92ZXJ2aWV3IGZvciBrdXJhZ2VzaGlpCiJUaGUgRmlyc3QgTWF0ZSBhbmQgSSB3aWxsIGhhdmUgbm90aGluZyB0byBkbyB0aWxsIHNwcmluZyBleGNlcHQga2VlcCB3YXJtIGFuZCBhbXVzZSBvdXJzZWx2ZXMuIFRoZSBsYXN0IGxpZ2h0aG91c2Uga2VlcGVyIHVzZWQgYWx3YXlzIHRvIG1vdmUgdXAgdG8gdGhlIEdsZW4gaW4gd2ludGVyOyBidXQgSSdkIHJhdGhlciBzdGF5IGF0IHRoZSBQb2ludC4gCkVzcGVjaWFsbHkgb2xkZXIgcGVvcGxlIHdvbiBrbm93LyB3b24gY2FyZSBhYm91dCB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIENoaW5lc2UsIEtvcmVhbiwgSmFwYW5lc2UuIFByZXBhcmUgeW91cnNlbGYgZm9yIHNvbWUgcmVhbGx5IGR1bWIgcXVlc3Rpb25zIGFuZCBjb21tZW50cyBpbiB0aGF0IHJlZ2FyZC4KV2hlbiBkaWQgdGhlIGRvZyBzdHJvbGxlciBiZWNvbWUgdWJpcXVpdG91cz8gV2h5IGRvIHdlIHNlZSB3YXRlciBib3dscyBmb3IgZG9ncyBvdXRzaWRlIHJlc3RhdXJhbnRzIHdoZW4gaG9tZWxlc3MgcGVvcGxlIGhhdmUgdG8gc2Nyb3VuZ2UgdG8gZ2V0IGEgZHJpbms/IEFuZCBhaXJsaW5lcz8gVGhlIHJ1bGVzIHN0YXRlIHRoYXQgc3VwcG9ydCBkb2dzIHRha2UgcHJpb3JpdHkgb3ZlciBodW1hbnMgd2l0aCBhbGxlcmdpZXMgb3IgYXZlcnNpb25zIHRvIHRoZSBzbWVsbHMgYW5kIHBvdHR5IHByb2JsZW1zIHRoYXQgc29tZXRpbWVzIGNvbWUgd2l0aCBhIGNhbmluZSBwYXNzZW5nZXIuIERvZ3MgYXJlIGJvcm4gd2l0aCBhbGwgdGhlIGNsb3RoZXMgdGhleSBuZWVkIG9uIHRoZWlyIGJhY2tzLCB5ZXQgdGhlIGRvZyBjbG90aGluZyBpbmR1c3RyeSBpcyBhIG11bHRpIGJpbGxpb24gZG9sbGFyIGJ1c2luZXNzLi4gCkkgaGF2ZSB0aGlzIG9uZSwgd2hpY2ggSSBzdXNwZWN0IGlzIHNvbWV3aGF0IHNpbWlsYXIuIEkgbGlrZSBpdCBhIGxvdDsgaXQgbmljZSBhbmQgaGFzIChmb3IgRW5nbGlzaCBib29rcykgdmVyeSBnb29kIHBhcGVyIChmb3Igc29tZSByZWFzb24sIEVuZ2xpc2ggYm9va3MgdXNlIHBhcGVyIHRoYXQgYSBsb3Qgcm91Z2hlciB0aGFuIGJvb2tzIGluIG15IGhvbWUgY291bnRyeSBkbykuIEFuIGltcG9ydGFudCB0aGluZyB0byBsb29rIG91dCBmb3IgaXMgdGhhdCBhbnkgTE9UUiBlZGl0aW9uIHNob3VsZCBoYXZlIHRoZSBmb3Jld29yZCwgcHJvbG9ndWUgYW5kIGFwcGVuZGljZXMsIHdoaWNoIHRoZSBvbmUgeW91IHRoaW5raW5nIGFib3V0IGFwcGVhcnMgdG8gZG8uCldoYXQgY2FuIGJlIG9ic2VydmVkIGlzIHRoYXQgdGhlIHRoZXJlIGlzIGluZGVlZCBhIHNoYXJwIHBlYWsgaW4gdGhlIHBvc3RlcmlvciBhdCB0aGUgJ3RydWUnIHZhbHVlcyBvZiBrMyBhbmQgazQgaG93ZXZlciB0aGVyZQpFZGl0OiBzZWVtcyBsaWtlIGEgYml0IG9mIGEgbWl4ZWQgYmFnIHRvIGJlIGhvbmVzdC4gQWJvdXQgdGhlIHJlYXIgbmFrZWQsIHRoYXQgd2FzIGp1c3QgdGhlIGZpcnN0IGV4YW1wbGUgdGhhdCBjYW1lIHRvIG1pbmQuIElmIHNvbWVvbmUgZXhlY3V0ZWQgaXQgcG9vcmx5IHRoZW4gdGhlaXIgb3Bwb25lbnQgd2lsbCBoYXZlIHdpZ2dsZSByb29tLCB3aGVyZWFzIGlmIHRoZXkgZXhlY3V0ZSBpdCBwcm9wZXJseSwgdGhlaXIgb3Bwb25lbnQgaXNuJ3QgZ29ubmEgYmUgYWJsZSB0byBoZWFkYnV0dCBiYWNrd2FyZHMuCklmIHlvdSBnZW50bHksIHNvZnRseSwgYW5kIHNsb3dseSBtYXNzYWdlIHRoZSBicnVpc2VkIGFyZWEsIHlvdSBoZWxwIHN0aW11bGF0ZSBibG9vZCBjaXJjdWxhdGlvbiBmdXJ0aGVyLiAKSSBnb3Qgc29tZSByZW1vdmFsIHBhZHMgcmVjZW50bHkgdG8gdHJ5IHRvIGZpbmQgb3V0IGFnYWluIGlmIHRoZXkgd2VyZSBzdGlsbCBhbm5veWluZywgYW5kIGZhcmVkIGEgbG90IGJldHRlci4gVGhlIHNtZWxsIHdhcyBhbG1vc3QgcGxlYXNhbnQsIGFuZCB0aGUgcGFkcyB3ZXJlIGJldHRlciBhcyB0aGV5IHdlcmUgc21hbGxlciwgc28gYWx0aG91Z2ggdGhleSBwcm9iYWJseSB3ZXJlIGFzIHNhdHVyYXRlZCB3aXRoIHJlbW92ZXIgYXMgdGhlIGxhc3QgdGltZSBJIHRyaWVkIHRoZXJlIHdhc24ndCBzbyBtdWNoIHRvIGdvIG9uIG1lLCBhbmQgb25lIHBhZCB3YXMgZW5vdWdoIGZvciBhbGwgbXkgbmFpbHMuIFVudG91Y2hlZCwgbW9zdCBwb2xpc2hlcyBsYXN0IHVudGlsIHRoZXkndmUgZ3JhZHVhbGx5IHdvcm4gb2ZmIHdpdGggdGhlIG5haWwgd2hpY2ggZm9yIHNvbWUgcG9saXNoZXMgY2FuIHRha2Ugd2Vla3MuIApQdWJTcHkgcmV2aWV3cyBUaGUgQW5jaG9yClRoaXMgeWVhcidzIHByb2dyYW0gJ2hhcyBvbmUgZGVjaWRlZCBhZHZhbnRhZ2UgZm9yIHRoZSByZWNydWl0aW5nIGNvbXBhbnkgd2hpY2ggd2FzIGxhY2tpbmcgaW4gdGhlIGZpcnN0IGF0dGVtcHQgdG8gaW50ZXJlc3QgY29sbGVnZSBzdHVkZW50cyBpbiBqb2JzICJhdCBob21lLiIgSG9tZXRvd24gQ2FyZWVycyBpcyBub3cgb3BlbiB0byBzdHVkZW50cyBncmFkdWF0aW5nIGluIDE5MDggZnJvbSBlaXRoZXIgdHdvIG9yIGZvdXIgeWVhciBpbnN0aXR1dGlvbnMuIFRoaXMnd2lsbCBhcyAgc3VyZSB0aGUgcmVjcnVpdGVyIG9mIGltbWVkaSAgYXRlbHkgZW1wbG95YWJsZSBwZXJzb25uZWwuIApSZWdhcmRpbmcgd2hhdCBzb21lb25lIHNhaWQgdGhhdCB5b3UgY2FuIGFsc28gYnV5IHRoZW0gZnJvbSBzb21lIHdlYnNpdGVzLCB5ZXMgaXQncyB0cnVlIGJ1dCB0aGVyZSBhcmUgc29tZSBwcm9zIGFuZCBjb25zIHRvIHRoaXMuIApUaGUgZW5kIHRvIGxlZ2FsLCByZWd1bGF0ZWQgb25saW5lIHBva2VyIGxhc3RlZCBvbmx5IGVpZ2h0IG1vbnRocy4gSW4gbGF0ZSAyMDExLCB0aGUgSnVzdGljZSBEZXBhcnRtZW50IHJ1bGVkIHRoYXQgYSAxOTYxIGxhdywgdGhlIEludGVyc3RhdGUgV2lyZSBBY3QgICBlbmFjdGVkIHRvIGJhbiBiZXR0aW5nIG92ZXIgdGhlIHBob25lICAgYXBwbGllZCBvbmx5IHRvIHNwb3J0aW5nIGV2ZW50cy4gVGhhdCBvcGVuZWQgdGhlIGRvb3IgZm9yIHN0YXRlcyB0byBkZWNpZGUgd2hldGhlciB0byBhbGxvdyBvbmxpbmUgcG9rZXIsIGEgbW92ZSB0aGF0IGhhcyBpcmtlZCBsYXdtYWtlcnMgaW4gYm90aCBwYXJ0aWVzIGV2ZXIgc2luY2UuLiAKVGFsZW50IGlzIGV2ZXJ5dGhpbmcgaW4gdGhlIG5ldyBlY29ub215LiBUaGVyZSBpcyBubyBndWFyYW50ZWUgdGhhdCB0aGUgYmVzdCBhbmQgdGhlIGJyaWdodGVzdCAgIGxpa2UgdGhlIGV4ZWN1dGl2ZXMgd2hvIHNwb2tlIGF0IHRoZSBDb25ncmVzcyAgIHdpbGwgZW50ZXIgdGhlIGF1dG8gaW5kdXN0cnkgaW4gdGhlIGZ1dHVyZS4gQ29tcHV0ZXIgc2NpZW50aXN0cyBiZWluZyB0cmFpbmVkIHRvZGF5IGhhdmUgb3RoZXIgb3B0aW9ucy4KU29mdHdhcmUgZXN0aW1hdGlvbiBpcyBkaWZmaWN1bHQgYmVjYXVzZSB0aGVyZSBpcyBubyBwcmFjdGljYWwgdW5pdCBvZiBzaXplIGZvciBzb2Z0d2FyZS4gQWdpbGUgc3RvcnkgcG9pbnRzIGlzIGEgaGV1cmlzdGljIHRoYXQgYWxsb3dzIHVzIHRvIHNpbXBsaWZ5IGVzdGltYXRpb24gYnkgc2VwYXJhdGluZyBvdXIgZXN0aW1hdGUgb2Ygd29yayBzaXplIGZyb20gd29yayBkdXJhdGlvbi4gCjYuIEhlIGRpZG4ndCB3YW50IGtpZHMuIEV2ZW4gdGhvdWdoIEknbSBzdXBlciB5b3VuZyBhbmQgbm90IHJlYWR5IGFueSB0aW1lIHNvb24sIEkgYWx3YXlzIGtuZXcgaW4gdGhlIGJhY2sgb2YgbXkgaGVhZCB0aGF0IHdlIHdvdWxkbid0IHdvcmsgb3V0IGluIHRoZSBsb25nIHJ1biBiZWNhdXNlIEkndmUgYWx3YXlzIGRyZWFtZWQgYWJvdXQgYmVpbmcgYSBtb3RoZXIsIGFuZCBoZSB3b3VsZG4ndCBiZSBhYmxlIHRvIGRvIHRoYXQgZm9yIG1lLi4gCkJvYXJkIHdhcyBraW5nIDcgNywgc29tZSBsYWR5IGJldCBhbmQgZ290IHJhaXNlZC4gU2hlIHRob3VnaHQgZm9yIGEgd2hpbGUgYW5kIHRoZW4gbWFkZSBoZSBjYWxsLCBidXQgYWNjaWRlbnRhbGx5IGV4cG9zZWQgYm90aCBoZXIgY2FyZHMgaW4gZG9pbmcgc28uIFRoZSBkZWFsZXIgc2FpZCBzaGUgaGFkIHRvIGxlYXZlIHRoZW0gZmFjZXVwIGluIHRoZSBtaWRkbGUuClVuIE1hbGFpc2llbiBjb25kYW1uICBwbHVzIGRlIDEwIGFucyBkZSBwcmlzb24gcG91ciBibGFzcGhtZUtVQUxBIExVTVBVUiAoKSAgIFVuIE1hbGFpc2llbiBhIHQgY29uZGFtbiAgdW5lIHBlaW5lIHN1cHJpZXVyZSAgZGl4IGFucyBkZSBwcmlzb24gcG91ciBhdm9pciBpbnN1bHQgbCBldCBsZSBwcm9waHRlIE1haG9tZXQgc3VyIGRlcyByc2VhdXggc29jaWF1eCwgYSB0IG9uIGFwcHJpcyBzYW1lZGkgYXVwcnMgZGVzIGF1dG9yaXRzLgpOZWFsb24gY3VycmVudGx5IHN0YXJzIGFzIHNtYWxsIHRvd24gcG9saXRpY28gYW5kIHBvdGhlYWQgRG91ZyBXaWxzb24gb24gdGhlIGNyaXRpY2FsbHkgYWNjbGFpbWVkIFNob3d0aW1lIHNlcmllcyBXZWVkcy4gClllYWgsIHRoZSBTbWl0aHMgaGF2ZSBtb25leSBzbyB0aGVpciBraWRzIGhhdmUgYW4gYWR2YW50YWdlIG92ZXIgdGhlIHJlc3Qgb2YgdXMuIFdoZW4gdGhlaXIga2lkcyBoYXZlIGtpZHMgb2YgdGhlaXIgb3duLCB0aGV5IHdpbGwgYmVuZWZpdCBmcm9tIGJvdGggdGhlIGdyYW5kcGFyZW50cyBhbmQgcGFyZW50cyBhbmQgYWdhaW4gaGF2ZSBhbiBhZHZhbnRhZ2Ugb3ZlciB0aGUgcmVzdCBvZiB1cy4gVGhhdCBpcyB0b3RhbGx5IGNvcnJlY3QgYW5kIG9idmlvdXMuCkRhZGUgQ291bnR5IFRvIENvbmR1Y3QgRmlyZXdvcmtzIFN3ZWVwIFRoZSBXZWVrRm91cnRoIG9mIEp1bHkgY29uanVyZXMgaW1hZ2VzIG9mIGJhcmJlY3VlcywgSm9obiBQaGlsbGlwIFNvdXNhIG11c2ljIGFuZCwgb2YgY291cnNlLCBmaXJld29ya3MuIFdoaWxlIGNpdGllcyBzcG9uc29yIHByb2Zlc3Npb25hbCBmaXJld29ya3Mgc2hvd3MsIG1hbnkgcGVvcGxlIGxpa2UgdGhlIERJWSBhcHByb2FjaCBpbiBmcm9udCBvZiB0aGVpciBob21lcy4KQm90aCB0aW1lcyBJIHdhcyBvbiBhZHJlbmFsaW4gYmVzZXJrZXIgbW9kZS4gClNoZSBoYXMgbmV2ZXIgaGFkIGhlciBsaWNlbnNlIGR1ZSB0byBiZWluZyBhIHZlcnkgcGFzc2lvbmF0ZSBjeWNsaXN0IGFuZCBoYXMgbWFuYWdlZCB0byBjb250aW51ZSBjeWNsaW5nIHdoZW5ldmVyIHNoZSBjYW4gYWxsIHRocm91Z2ggaGVyIGlsbG5lc3MuIFRvZGF5IGlzIGhlciA1M3JkIGJpcnRoZGF5IGFuZCB0aGlzIG1vbnRoIHNoZSBpcyBnaXZpbmcgbWUgaGVyIGJpa2UuIFNoZSBmaW5hbGx5IGdldHRpbmcgdG8gdGhlIHBvaW50IHdoZXJlIHNoZSBjYW4gcmlkZSB3aXRob3V0IGdldHRpbmcgc3R1Y2sgc29tZXdoZXJlIGZyb20gaGVyIGxlZnQgc2lkZSBjcmFtcGluZyB1cCBhbmQgcHJldmVudGluZyBoZXIgZnJvbSBtb3ZpbmcuIAoiSG93IGNvbWUgcGVvcGxlIHdobyBkb24ndCBoYXZlIG1vbmV5IGdldCBzZW50IHRvIGphaWwgICBhbmQgY2FuJ3QgZXZlbiBtYWtlIGJhaWwgICBhbmQgdGhleSBoYXZlIHRvIGRvIHRoZWlyIHRpbWUgYW5kIHNpdCB0aGVyZSBhbmQgdGhpbmsgYWJvdXQgd2hhdCB0aGV5IGRpZCB3cm9uZz8gSGUgaGFkIG5vIHJlcGVyY3Vzc2lvbnMgYW5kIGRvZXNuJ3QgZXZlbiBiZWxpZXZlIGhlIGRpZCBhbnl0aGluZyB3cm9uZywnJyBzYWlkIExpY2F0YSwgbm93IDMwLiBBdHRvcm5leSdzIE9mZmljZSBhcyB2aWN0aW1zIG9mIEVwc3RlaW4sIG5vdyA2NS4gCkl0IGdvZXMgdXAgd2l0aCBzdGFrZXMoMS8zICQ2aGgsIDIvNSAkN2hoLCA1LzEwICQ4aGggZXRjKS4gCk9uIFdlZG5lc2RheSwgb25lIEthcnRhciBTaW5naCAobmFtZSBjaGFuZ2VkKSBhcHByb2FjaGVkIE5hdnJhbmdwdXJhIHBvbGljZSBhbmQgZmlsZWQgYW4gYXBwbGljYXRpb24uIApIb3cgUGFja2FnaW5nIENvbnZleXMgYSBCcmFuZCdzIE1lc3NhZ2UKTWFueSBoYXZlIG1hZGUgdGhpcyBzYW1lIG1pc3Rha2UgYW5kIHRoZXkgbm93IHJlZ3JldCB0aGF0IGRlY2lzaW9uLiAKSSB3YXMgc28gZGFtbiBwcm91ZCBpbiB0aGF0IG1vbWVudCEgSSB0cnkgbm90IHRvIGZpc2ggZm9yIGNvbXBsaW1lbnRzIHNvIGl0IGZlbHQgZ3JlYXQgdGhhdCBteSBtYW4gaXMgaW1wcmVzc2VkIHdpdGggbWUuIApNY2tlZWhlbiBiZWNhbWUgdGhlIHZpbGFpbiBhdCBvbmUgcG9pbnQgZHVyaW5nIHBsYXkgb24gVHVlc2RheSBhcyBoZSBlbGltaW5hdGVkIGV2ZXJ5b25lJ3MgZmF2b3JpdGUgcG9rZXIgaGVybyBEYW5pZWwgTmVncmVhbnUgKEdQSSBOby4gMTcpIGFzIHRoZSBidXp6IHN1cnJvdW5kaW5nIE5lZ3JlYW51J3MgcG9zc2libGUgcGFydGljaXBhdGlvbiBpbiB0aGUgTm92ZW1iZXIgTmluZSBncmV3IGFuZCBncmV3IGFuZCBncmV3LiBTYWRseSwgTmVncmVhbnUgd2FzIGVsaW1pbmF0ZWQgaW4gMTF0aCBwb3NpdGlvbiwgc2FtZSBwbGFjZSBoZSBmaW5pc2hlZCBpbiB0aGUgMjAwMSBXU09QIE1haW4gRXZlbnQuCkp1c3QgcHJpb3IgdG8gdGhlIFRyaWJ1bGF0aW9uLCB0aGUgUmFwdHVyZSB0YWtlcyBwbGFjZS4gCkluIExvbmdoYW5kIExpbWl0IEhvbGQgdGhlIG1vc3QgaW1wb3J0YW50IGFkdmFudGFnZSBvZiBhIHBva2VyIHBsYXllciBpcyBoaXMgdGVjaG5pY2FsIHNraWxscy4gVGhlIHdpbm5pbmcgcGxheWVyIG11c3QgYmUgcGF0aWVudCBhbmQgdW5kZXJzdGFuZHMgaGFuZCB2YWx1ZS4gWW91ciBwZW9wbGUgc2tpbGxzIHdvbiBjb250cmlidXRlIG11Y2ggdG8geW91ciB3aW5uaW5ncy4gCkxldCB0aGUgZ2xhemUgc2V0IHRob3JvdWdobHksIGFib3V0IDEgaG91ciwgYmVmb3JlIHN0b3JpbmcgaW4gY29udGFpbmVycyB3aXRoIHRpZ2h0IGZpdHRpbmcgbGlkcy4gTUFHSUMgNyBMQVlFUiBCQVJTIGFteWx6MSBzdGljayBidXR0ZXIxIGMuIAogMSBwb2ludCAgc3VibWl0dGVkIDEgZGF5IGFnb0ludGVybmF0aW9uYWwgbGVhZ3VlIHBhc3MgaXMgc28gZ29vZCwgSSB0cnVseSB0aGluZyB0aGV5IHJlYWxpemUgaXQgd2lsbCBiZSBiZW5lZmljaWFsIHRvIGJyaW5nIHRoaXMgb3ZlciB0byB0aGUgVVMgYXMgd2VsbCBhbmQgaGFuZGxlIGl0IG1vcmUgbGlrZSBmb290YmFsbCAoc29jY2VyKWRvZXMgd2hlcmUgcmlnaHRzIGFyZSBvZnRlbiBzb2xkIHRvIG11bHRpcGxlIHBhcnRuZXJzIHdpdGhvdXQgZXhjbHVzaXZlbmVzcyBvciBibGFja291dHMuU28gbGVhZ3VlIHBhc3MgbGlrZSBJTFAgd2l0aCBhbGwgZ2FtZXMgcHJvZHVjZWQgYW5kIGNvbW1lbnRlZCBieSB0aGUgTkJBIGFzIHdlbGwgYXMgdGhlIGN1cnJlbnQgb3B0aW9ucy4gSGUgZG9lc24gaGF2ZSB0aGUgc2hvdCBhbmQgaGlzIHBsYXkgbWFraW5nIHdhc24gTkJBIGVsaXRlIGJ1dCBoZSB3YXMgYW4gZWxpdGUgc2NvcmVyIGFuZCBwbGF5bWFrZSBpbiBjb2xsZWdlLlNvIGV2ZW4gb2Ygb2ZmZW5zZSBpc24gU21hcnRzIHN0cmVuZ3RoIEJydWNlIHN0aWxsIGhhcyBhIGxvdCB0byBjYXRjaCB1cCBvbiBoaW0gdGhlcmUuIEFsc28gU21hcnQgaXMganVzdCBiaWdnZXIgYW5kIHN0cm9uZ2VyIHRoYW4gQnJ1Y2Ugd2hpY2ggaGVscHMgb24gZGVmZW5zZS5JIHRoaW5rIEJydWNlIGlzIG1vcmUgb2YgYSB3aXJ5LCBhbm5veWluZyBkZWZlbnNpdmUgc3BlY2lhbGlzdC4gCkknbSBmaW5lIHdpdGggcmV3YXJkaW5nIGFnZ3Jlc3NpdmVuZXNzIGFuZCBoZWFsdGggb24ga2lsbHMgYW5kIHdoYXQgZWxzZSwgYnV0IHRoYXQgb25seSBtYWtlcyB0aGUgZ29vZCBwZW9wbGUgYmV0dGVyIGFuZCBtYWtlcyBJdCBoYXJkZXIgZm9yIGxlc3Mgc2tpbGxlZCBwZW9wbGUgdG8gd2luLiBJIHRoaW5rIGEgbG90IG9mIHRoZSBwZW9wbGUgYXJlIGxlYXZpbmcgYmVjYXVzZSB0aGUgc2tpbGwgZ2FwIGlzIGp1c3QgdG9vIG11Y2ggdG8gaGFuZGxlIGFuZCB0aGV5IGFyZW4ndCBlbmpveWluZyB0aGUgZ2FtZSBhcyBtdWNoIHdoZW4gdGhleSBnZXQgZGVzdHJveWVkIGV2ZXJ5IHRpbWUgYnkgdGhlIFRUViBndXkgd2l0aCAxNSBraWxscy4uIApUaGUgZGF5IHN0aWxsIGVuZGVkIHVwIGJlaW5nIGJlYXV0aWZ1bCBhbmQgZnVsbCBvZiBqb3ksIGV2ZW4gaWYgaXQgd2FzIGJpdHRlcnN3ZWV0IGluIHNvbWUgbW9tZW50cy4gCkhvdyBUbyBNYWtlIFZhbGVudGluZSdzIERheSBTcGVjaWFsIFdJVEhPVVQgYSBTcGVjaWFsIEd1eQpFdmVuIGlmIHRoaW5ncyBnbyB3cm9uZyBhbmQgYWZ0ZXIgMjAgeWVhcnMgeW91IHNlbGwgeW91ciBob3VzZSBmb3Igd2hhdCB5b3UgYm91Z2h0IGl0IGZvciB5b3UncmUgc3RpbGwgZG9pbmcgYmV0dGVyIGJlY2F1c2UgeW91IGdldCB5b3VyIG1vbmV5IGJhY2suIApUaGlzIGlzIG5vdCBzb21ldGhpbmcgdGhhdCBzaG91bGQgYmUgdGFrZW4gdmVyeSBsaWdodGx5LiAKU28gZG9lcyBhbnlvbmUgZXZlciBhc2sgd2h5IHRoZXkgYXJlIGRvaW5nIHRoaXM/IExpa2UgSSB3ZW50IHRvIGEgbG9jYWwgRFNBIG1lZXRpbmcgYW5kIGV2ZXJ5b25lIHdhcyB0YWxraW5nIGFib3V0IHRoZWlyIGtpZHMgYW5kIG1vdmllIG5pZ2h0IGF0IHRoZSBuZXcgc3VwcG9ydCBncm91cCBmb3IgbGdidHEgcGx1cyBhbmQgZ29pbmcgdG8gaGFwcHkgaG91ciBhbmQgbGF1Z2hpbmcgYW5kIGhhdmluZyBiZWVycyBhZnRlci4gQW5kIEkganVzdCBjb3VsZG4gaGVscCBidXQgdGhpbmssIHRoZSByZWFzb24gdGhhdCB3ZSB3YW50IGFsbCB0aGVzZSB0aGluZ3MgdG8gY2hhbmdlIGlzIGJlY2F1c2Ugd2UgbG92ZSBwZW9wbGUgYW5kIGtub3cgdGhlIGdvb2QgYW5kIHRoZSBiZWF1dHkgdGhhdCBodW1hbnMgYXJlIGNhcGFibGUgb2YsIGlmIGV2ZXJ5IGh1bWFuIHRyZWF0cyBldmVyeSBvdGhlciBodW1hbiB3aXRoIHJlc3BlY3QsIGRpZ25pdHksIGFuZCBjb21wYXNzaW9uLiB3aGF0IHN1Y2tzIGlzIHRoYXQgdGhhdCBpcyBzdWNoIGEgZGlzdGFudCBkcmVhbSwgYW5kIHdlIGJlZW4gdHJhaW5lZCB0byB0aGluayB0aGF0IGh1bWFuIG5hdHVyZSBpcyB3aGF0IGNhcGl0YWxpc20gaGFzIGZlZCB1cyBhcyAicmVhbGl0eSIgYnV0IHRoZSBmYWN0IHRoYXQgc29tZSBvZiB1cyBoYXZlICwgdGhhdCBkcmVhbSBtZWFucyB0aGUgaHVtYW4gcmFjZSBpcyBldm9sdmluZyBhbmQgaXQgZGVwZW5kaW5nIG9uIHVzIHRvIGtlZXAgdGhhdCBzdHJhaW4gZ29pbmcuIFNvIHllcyBnZXR0aW5nIG91dCB0aGVyZSBhbmQgYmVpbmcgd2l0aCBwZW9wbGUgYW5kIHNoYXJpbmcgdGhlIHN0cnVnZ2xlIGlzIGltcG9ydGFudCwgYnV0IGl0IGFsc28gaW1wb3J0YW50IHRvIGp1c3QgYmUgb3V0IHRoZXJlIHJlbGlldmluZyBzdWZmZXJpbmcgZXZlbiBpZiB0aGUgcG9saXRpY2FsIG1lc3NhZ2VzIGZhbGwgb24gZGVhZiBlYXJzLgpJIGdvdCBpbnRvIHRoZSBtZWRpb2NyZSB1bml2ZXJzaXR5LCBvbiB0aGUgc2Vjb25kIHJvdW5kLiAKSWYgaXQgaW4gZ29vZCBjb25kaXRpb24gYWZ0ZXIgYSB0cmlwLCBpdCBnb2VzIGJhY2sgaW4gdGhlIHN0b3JhZ2UgYm94L3NoZWxmL3doYXRldmVyLiAKTm9uZSBvZiB0aG9zZSB0aGluZ3MgY2FuIGJlIHJlbGllZCBvbiBpbiB0aGUgbG9uZyB0ZXJtLiBZb3VyIGRlc2lyZSB0byBpbXByb3ZlIHlvdXIgUnVzc2lhbiBpcyBhbGwgdGhlIG1vdGl2YXRpb24gdGhhdCB5b3UgbmVlZC4gQ29uc3RydWN0IHlvdXIgaGFiaXRzIHNvIHRoYXQgeW91IGFjY29tcGxpc2ggdGhpbmdzIHRoYXQgaW1wcm92ZSB5b3VyIHNraWxscy4gCk9yIHBvcCBpbnRvIGEgdHJhdmVsIGJhZy4gCkNhdGNoIGhlciBub3cgaW4gdGhlIGp1c3QgcmVsZWFzZWQgQXN0ZXJvaWQ6IEZpbmFsIEltcGFjdCwgYW5kIGhlciB1cGNvbWluZyBtb3ZpZSBXQVJDUkFGVCBkdWUgb3V0IGxhdGVyIHRoaXMgeWVhckFubmEgVmFuIEhvb2Z0IHBsYXlzIEF1cmEgaW4gdGhlIFNjaSBGaSBDaGFubmVsIG1vZGVybiBkYXkgcmVtYWtlIG9mIHRoZSBjbGFzc2ljIGNvbWljIHNlcmllcyBGbGFzaCBHb3Jkb24uIFNoZSBpcyB0aGUgc3Ryb25nIHdpbGxlZCBkYXVnaHRlciBvZiB0aGUgZXZpbCBkZXNwb3QgTWluZywgYW5kIGhlciBiZWF1dHkgb2Z0ZW4gbGVhZHMgb3RoZXJzIHRvIHVuZGVyZXN0aW1hdGUgaGVyLiAKSWYgeW91IGhhdmUgZXZlcnkgaGFuZGxlZCBwb2tlciBjaGlwcyBpdCBhIGNhc2lubyBiZWZvcmUsIGVzcGVjaWFsbHkgaWYgeW91IGhhdmUgZ290dGVuIHRvIHB1c2ggdGhlIGNoaXBzIGFyb3VuZCwgeW91IGtub3cgdGhhdCB0aGUgY2hpcCB0aGF0IGFyZSB1c2VkIGJ5IHRoZSBwcm9mZXNzaW9uYWwgY2FzaW5vcyBhcmUgbXVjaCBoZWF2aWVyLiBUaGV5IGFyZSB0eXBpY2FsbHkgbWFkZSBvdXQgb2YgY2xheSwgYW5kIG9uZSB5b3UgaGF2ZSB1c2UgY2hpcHMgbWFkZSBvdXQgb2YgY2xheSwgeW91IHdpbGwgZmluZCB0aGF0IHVzaW5nIG9uZXMgdGhhdCBhcmUgbWFkZSBvdXQgb2YgcGxhc3RpYyBpcyBqdXN0IG5vdCB0aGUgc2FtZS4KIldoYXRldmVyIHNjaWVudGlmaWMgdGVzdHMgd2VyZSBjb25kdWN0ZWQgbGVnYWxseSB3aXRoaW4gdGhlIElBQUYgcmVndWxhdGlvbnMgd2lsbCBiZSB0cmVhdGVkIGFzIGEgY29uZmlkZW50aWFsIG1hdHRlciBiZXR3ZWVuIHBhdGllbnQgYW5kIGRvY3RvciwiIHRoZSBzcG9ydHMgbWluaXN0cnkgc2FpZC4gCkkgYW0gYSBsaWNlbnNlZCBhdHRvcm5leS4gCldoaWNoIG1lYW5zICQ1IG9mIHRoZSBkb2xsYXJzIHlvdSBzcGVudCBvbiB0aGUgYm9vayB3YXMgdG8gc2VlIHRoaXMgc3R1cGlkIGZ1Y2tpbmcgbGlzdC4gCkxhc3QgbGVmdCB5b3UsIEkgYmVsaWV2ZSBJIHN0aWxsIGhhZCB0aGUgQnVib25pYyBQbGFndWUgYW5kIHdhcyBjaGlsbGluZyBvdXQgb24KU2hlIGJyYWdnaW5nIGFib3V0IGhlciBidWRnZXQgYW5kIGhvdyBzaGUgbGlrZSB0byBzYXZlIG1vbmV5IGxvbC4gCkFyb3VuZCBteSB0b3duLCBzb21lIGludGVybmV0IGNhZmUgY2FzaW5vIHBsYWNlcyBoYXZlIHBvcHBlZCB1cCBhbmQsIGFyZSBydW4gdW5kZXIgYSBWZXRlcmFucyBBZG1pbmlzdHJhdGlvbiBvZiBzb21lIHNvcnQuIApZb3UgZG8gaGF2ZSB0byBsZWFybiBzb21lIHN0dWZmIHRvIG1ha2UgaXQgYWxsIHdvcmsgYnV0IGl0IGdvb2Qgc2tpbGxzIHRvIGtub3csIGhvbmVzdGx5LiBXaXRoIHRoaXMgdGVjaCB5b3UgY2FuIGF1dG9tYXRlIGEgbG90IG1vcmUgb2YgeW91ciBsaWZlIHRoYW4ganVzdCB5b3VyIHBsYW50cy4KQXR0aXR1ZGUgb24gZ2FtaW5nL25ldGZsaXggYmluZ2luZy9tZWRpYSBjb25zdW1wdGlvbiBpcyB0aGlzOiBUaW1lIHNwZW50IGJvcmVkIGlzIHRpbWUgd2hlbiBJIHJlYWxseSB0aGluayBhbmQgZXZvbHZlIGFuZCBjaGFuZ2UgbXlzZWxmIGZvciB0aGUgYmV0dGVyICAgaWYgSSBmaWxsIGFsbCB0aGF0IGJvcmVkIHRpbWUgd2l0aCBmYW1pbGlhciB2aWRlbyBnYW1lcy9zaG93cy9tZW1lcyBiZWNhdXNlIHRoZXkgYXJlIGNvbWZvcnRpbmcgdGhlbiBJIGRvbiBwcm9ncmVzcyBhbmQgSSBkb24gaGF2ZSBhIGRyaXZlIHRvIGV4cGVyaWVuY2UgYW55dGhpbmcgbmV3LgpIb3cgbWFueSByYWNlcyBpbnRvIHRoZSBzZWFzb24gdGhleSBkbyB0aGF0IGZvciBhbmQgaG93IHRoZXkgZ28gYWJvdXQgaXQgaXMgdG8gYmUgc2VlbiwgYnV0IHRoZSBudW1iZXIgb2YgZmFjdG9ycyB0aGF0IG5lZWQgdG8gYmUgYWRkcmVzc2VkIHRvIGV4cGxhaW4gdGhlIHRpcmUgc3lzdGVtIGZvciB0aGlzIHllYXIgZG8gbWFrZSBpdCBtb3JlIGNvbXBsZXggdG8gZXhwbGFpbi4gCkZpcnN0IGFuZCBmb3JlbW9zdCBoZSByZWZ1c2VkIHBvaW50IGJsYW5rIHRvIGdldCBwdXNoZWQgYXJvdW5kIGJ5IE1heXdlYXRoZXIuIApBbmQgaWYgdGhpcyBtb3ZlIGJyaW5ncyBpbiBhIGZldyBtb3JlIG1hbGVzIGFzIHdlbGwsIHRoYXQncyBldmVuIGJldHRlci4uIApGb3IgeW91ciBzaXR1YXRpb24gaSB3b3VsZCBhZHZpc2UsIGp1c3QgcGxheSBpdCBjb29sLiBHbyBhbG9uZy4gRm9jdXMgb24geW91ciBnaXJsLiAKQWxzIFBlbmRsZXJpbiB6d2lzY2hlbiBkZW4gb2ZmZW5iYXIgdmVyZmVpbmRldGVuIFdlbHRlbiBkZXIgcmVnaW9uYWxlbiBWZXJrZWhyc3ZlcmIgVlJTIHVuZCBkZXMgVlJSIGtlbm5lIGljaCB2b24gQm9ubiBudXIgZGVuIEhhdXB0YmFobmhvZiB1bmQgZGVuIFBvc3QgVG93ZXIuCk9uIFRodXJzZGF5LCB0aGUgT1BDIHdpbGwgYXNrIHRoZSBGbG9yaWRhIFB1YmxpYyBTZXJ2aWNlIENvbW1pc3Npb24gdG8gbWFrZSBoZWRnaW5nIGxvc3NlcyBhIGNlbnRyYWwgaXNzdWUgZHVyaW5nIHRoZWlyIGFubnVhbCBkZWJhdGUgb3ZlciB1dGlsaXR5IGVsZWN0cmljIHJhdGVzLiBBbmQgdGhlIGNvdW5zZWwncyBvZmZpY2UsIHdoaWNoIHJlcHJlc2VudHMgcmF0ZXBheWVycyBiZWZvcmUgdGhlIFBTQywgc2FpZCBsb3NzZXMgc2hvdWxkIGJlIG5vdGVkIGluIHRoZSBhZ2VuY3kncyBhbm51YWwgb3JkZXIgdGhhdCBzZXRzIHRob3NlIHJhdGVzLiBUaGF0IHdheSwgaXQgc2F5cywgY29uc3VtZXJzIHdpbGwgc2VlIHRoZSByaXNrLi4gCkknbSBub3QgdGhlIHBlcnNvbiB3aG8gb3JpZ2luYWxseSBwb3N0ZWQgdGhlIGFib3ZlIGFuc3dlciwgYnV0IEkgYW0gbW9kaWZ5aW5nIGl0LiBJdCdzIG5vdCByaWdodCBvciBmYWlyIHRvIGV4cG9zZSBtYWdpYyB0cmlja3MgaW4gYSBwdWJsaWMgZm9ydW0gYWNjZXNzaWJsZSB0byBldmVyeW9uZSwgYXMgdGhpcyBydWlucyB0aGUgbWFnaWMgYW5kIGxpdmxpaG9vZHMgb2YgdGhvc2Ugd2hvIGVhcm4gYSBsaXZpbmcgcGVyZm9ybWluZyBpbGx1c2lvbnMgc3VjaCBhcyB0aGlzIG9uZS4KUm9zcyBjYWxscyBpdCAidGhlIGZpbmFsIGRvbWluby4iLiAKQmVjYXVzZSBpZiBoZSBhY3R1YWxseSB0aGlua3MgaGUgY2FuIGdldCBhIHNldHRsZW1lbnQgb3V0IG9mIFRoZSBQb3N0LiAKV2VsbCBJIGxpa2UgYSBzb3VyY2Ugb24gdGhhdC4gQmVjYXVzZSBJIGRvbiBiZWxpZXZlIGl0LgpXZWxsLCBMTyAyIGFycml2ZWQgbGFzdCB3ZWVrISBTdXBlciBmYXN0IGxhYm9yLCBjb21wYXJlZCB0byBteSBmaXJzdC4gVGhlIHdob2xlIGV4cGVyaWVuY2Ugd2FzIGFjdHVhbGx5IHJlYWxseSBlbmpveWFibGUgKG1pbnVzIHRoZSBzdXBlciBwYWluZnVsIGNvbnRyYWN0aW9ucykuIE5vdyB3ZSBqdXN0IHRyeWluZyB0byBhZGp1c3QgdG8gYmVpbmcgYSBmYW1pbHkgb2YgNC4gVGhpcyBiYWJ5IGlzIHN1cGVyIGNsaW5neSwgYW5kIGhlIGhhcyBoaXMgZGF5cyBhbmQgbmlnaHRzIG1peGVkIHVwLiBJdCAxYW0gYW5kIGhlIHBsYXlpbmcgd2l0aCBteSBib29iIGluIGEgaGFsZiBhc2xlZXAgc3RhdGUuIEkga2VlcCB0cnlpbmcgdG8gcHV0IGhpbSBpbiBoaXMgYmFzc2luZXQsIGJ1dCBoZSBzdGFydHMgZnVzc2luZyBhIGZldyBtaW51dGVzIGxhdGVyLiBIZSBtaWdodCBlbmQgdXAgaW4gdGhlIGJlZCBhZ2FpbiB3aXRoIHVzIApUb3VyIGFuZCBzaXQgaW4gYSBjbGFzcyBhdCB0aGUgYmVhdXR5IHNjaG9vbCBhbmQgYXQgbGVhc3Qgb25lIG1hc3NhZ2Ugc2Nob29sLiBDdWx0dXJlIG1hdHRlcnMgdG9vLCBwYXkgYXR0ZW50aW9uIHRvIGl0LiAKTmFjaGRlbSBkdSBqZXR6dCBkaWUgV2VydGlna2VpdCBkZWluZXIgSGFuZCBrZW5uc3QsIHdpZSBzcGllbHN0IGR1IGRhcyBTcGllbD8gVGphLCBmciBBbmZuZ2VyLCBkdSB2ZXJzdWNoc3QgZGllIGJlc3RlIiBIYW5kIHp1IGJla29tbWVuLiAKMi4gClRoaXMgd2FzIGEgZGVzdHJ1Y3RpdmUgY3ljbGUsIGJ1dCBJIHdhcyBmb3J0dW5hdGUgbm90IHRvIGVuY291bnRlciBkZXBlcnNvbmFsaXphdGlvbiB1bnRpbCBsYXRlciBvbiAocG9zc2libHkgYmVjYXVzZSB0aGlzIHN0aW50IG9ubHkgbGFzdGVkIHRocmVlIG9yIGZvdXIgbW9udGhzLikgR2V0dGluZyBvdXQgbW9yZSBhbmQgaW52b2x2ZWQgaW4gbmljaGUgY29tbXVuaXRpZXMgaGVscGVkLiAKSSBob2xkIGEgbG90IG9mIGhhbmRzIGFuZCBsaXN0ZW4gdG8gbXkgcGF0aWVudHMvZmFtaWx5cyB0YWxrIGJlY2F1c2Ugc29tZXRpbWVzIHRoYXQgdGhlIG9ubHkgdGhpbmcgSSBoYXZlIHRvIG1ha2UgdGhlbSBmZWVsIGJldHRlci4gCkl0IHRoZSBlcXVpdmFsZW50IG9mIGNvbWluZyBob21lIGFmdGVyIDggaG91cnMgYXQgeW91ciBkZXNrIGpvYiBhbmQgYXNraW5nIHlvdXIgU08gZm9yIGEgc2hvdWxkZXIgcnViIHRvIHRha2Ugb2ZmIHRoZSB0ZW5zaW9uLiAKVG8gc2F5IHRoaXMgbW92aWUgbG9va3MgZGFyayB3b3VsZCBiZSBhbiB1bmRlcnN0YXRlbWVudC4gVGhlIHF1ZXN0aW9uIGl0IGFza3MgaXMgb25lIHRoYXQgdGhhbmtmdWxseSBtb3N0IHBhcmVudHMgbmV2ZXIgaGF2ZSB0byBmYWNlOiBIb3cgZmFyIHdvdWxkIHlvdSBnbyBmb3IgeW91ciBjaGlsZHJlbj8gV2hlbiB0aGUgZGF1Z2h0ZXIgb2YgS2VsbGVyIERvdmVyIChKYWNrbWFuKSBhbmQgaGVyIGZyaWVuZCBnbyBtaXNzaW5nLCBoZSB0dXJucyB0byBEZXRlY3RpdmUgTG9raSAoR3lsbGVuaGFhbCkgdG8gZmluZCBoZXIuIFRoYXQgZW5kZWF2b3IgdHVybnMgb3V0IHRvIGJlIGEgZGVhZCBlbmQsIGFuZCB3aXRoIHRpbWUgcnVubmluZyBvdXQsIGhlIHRha2VzIG1hdHRlcnMgaW50byBoaXMgb3duIGhhbmRzIGFuZCBraWRuYXBzIHRoZSBvbmx5IHN1c3BlY3QgaW4gdGhlIGNhc2UuIApJIHRoaW5rIDUgMjBtZyBpcyBhIGdvb2QgZmlyc3QgdGltZSBkb3NlLiBJZiBJIGNhbGN1bGF0ZWQgY29ycmVjdGx5LCB0aGUgZWRpYmxlcyBJIG1ha2UgYXJlIGJldHdlZW4gMzAgNDBtZyBlYWNoIGFuZCBpbml0aWFsbHkgSSB3b3VsZCBoYXZlIGhhbGYuIEEgZnVsbCBicm93bmllL2Nvb2tpZSB3aWxsIGdldCBtZSBwcmV0dHkgbXVjaCB3aGVyZSBJIGdvb2QgdGhlc2UgZGF5cywgYnV0IGluIHRoZSBiZWdpbm5pbmcsIGEgZnVsbCBvbmUgd2FzIHRvbyBtdWNoLgpVcGRhdGU6IHNlZW1zIHRoZSBpbmNpZGVudCB3YXMgbm90IGhlYXJ0IHJlbGF0ZWQuIFBvc3NpYmx5IGZvb2QgcG9pc29uaW5nIHdpdGggc3VkZGVuIG9uc2V0IG9mIHZpcnVsZW50IHN5bXB0b21zLiBHcmVhdCBjYXJlIGhlcmUgaW4gTFYuClNhdGluIGRvZXMgbm90IGZ1Y2tpbmcgYnJlYXRoZSwgaXQgY2FuIGdldCBob3QgYW5kIGJlIHVuY29tZm9ydGFibGUgZm9yIHBlb3BsZSB3aG8gbGl2ZSBpbiB3YXJtZXIgY2xpbWF0ZXMsIHNpbGsgd2lsbCBiZSBiZXR0ZXIgaW4gdGhpcyBjYXNlIGJlY2F1c2UgaXQgYnJlYXRoZXMsIGJ1dCB1bHRpbWF0ZWx5IGJvdGggd2lsbCBnbGlkZSB5b3VyIHNraW4gYW5kIGhhaXIgdGhyb3VnaCB3aGljaCBpcyB0aGUgcG9pbnQgb2YgdGhpcyBwb3N0IGZpcnN0IG9mIGFsbC4KRGV0IGZpbm5zIGRlc3N1dG9tIGtyYXYgcCBodXIgbG5nZSBrdW5kZXIgbWF4IGZyIHZudGEgaSBrLCBzIGlibGFuZCByIGRldCBoZ3QgdHJ5Y2sgcCBhdHQgdGEgYmVzdGxsbmluZ2FyIG9jaCBobXRhIHZhcm9ybmEgU05BQkJULiBIZWx0IGVua2VsdCAgIGRldCBibGlyIGVuIGRlbCBzcHJpbmdhbmRlLkR1IHN0ciBvY2tzIHVwcCBvY2ggam9iYmFyIHVuZGVyIGRpbmEgcGFzcy4gCkl0IGNyaXRpY2FsIHRvIGhhdmUgYSBzaXRlLCBhIHBsYWNlIHdoZXJlIHZpZXdlcnMgYW5kIHJlYWRlcnMgY2FuIGdldCBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIGFuZCBwYXJ0aWNpcGF0ZSBpbiB0aGUgY29udmVyc2F0aW9uLCBzYWlkIE1hdGlzaWMuIGhhZCBvbmUgZm9yIG1hbnkgeWVhcnMsIGJ1dCBmb3IgYSB3aGlsZSBub3cgd2Ugd2FudGVkIHRvIHRha2UgaXQgdXAgYSBub3RjaC4gSXQgZnJlc2gsIGNsZWFuIGFuZCBtb2Rlcm4uClZvZGthIGFuZCBjYXllbm5lIGlzIGFub3RoZXIgcmVtZWR5ICAgbWl4IG9uZSBqaWdnZXIgb2Ygdm9ka2Egd2l0aCBhIDEvMiB0ZWFzcG9vbiBvZiBjYXllbm5lIHBlcHBlciAodGVzdCBvbiBza2luIGZpcnN0IGZvciBzZW5zaXRpdml0eSkgYW5kIHJ1YiBpdCBvbiB0aGUgc2NhbHA7IGJsb29kIHJ1c2hlcyB0byB0aGUgaGFpciBmb2xsaWNsZXMgc3RpbXVsYXRlZCBieSB0aGUgdm9ka2EgYW5kIGNheWVubmUgcGVwcGVyICAgYnV0IGJlIGNhcmVmdWwgaWYgeW91IHRyeSBpdC4uIApBbHRob3VnaCBpdCBoYXMgYmVlbiBzaG93biB0aW1lIGFuZCB0aW1lIGFnYWluIHdpdGggdGhlIHNhY3JpZmljZSBvZiBpbm5vY2VudCBsaXZlcyB0aGF0IHRoZXkgY2FuIGFuZCBkbywgd2hlbiB5b3UgZW50ZXIgYSBjb3VydCBvZiBsYXcgYXMgdGhlIGFjY3VzZWQgeW91IGNhbiByZXN0IGFzc3VyZWQgICB0aGUgbGl0dGxlIFZpcmdpbiBpc24gbHlpbmcuIApJIHdvcmsgaW4gTWFzc2FjaHVzZXR0cyB3aGVyZSBjaGFydGVycyBhbmQgcHJpdmF0ZSBzY2hvb2xzIGFyZSBtYW5hZ2VkIGFuZCBwYWlkIGZvciBvdXQgb2YgdGhlIHB1YmxpYyBlZHVjYXRpb24gYnVkZ2V0LiBUaGVyZSB2ZXJ5IGxpbWl0ZWQgb3ZlcnNpZ2h0IGFuZCB0aGV5IHN3ZWVwIGEgbG90IHVuZGVyIHRoZSBydWcgYmVjYXVzZSB0aGV5IGNhbi4gU2Nob29scyBhYnNvbHV0ZWx5IHNob3VsZCBiZSBtYW5hZ2VkIGJ5IGEgaGlnaGVyIGdvdmVybmluZyBib2FyZCwgYmVjYXVzZSBpZiB0aGV5IGFyZW50LCBhYnVzZXMgcnVuIHJhbXBhbnQuIApUaGVyZSBhcmUgb3RoZXIgYXRvbWljIGNvbmpvaW5lZCB0ZXJtcyBpbiB0aGlzIGJvb2sgYmVzaWRlcyAiYm9tYiIsIGFuZCB0aGV5IGFyZSBzb21ld2hhdCB0ZWxsaW5nIG9mIHRoZSBwZXJpb2QuIFdlbGxzIGRvZXMgbWFrZSBhIGdvb2Qgc3RyaWtlIHdpdGggImF0b21pYyBib21iIiwgImF0b21pYyBhbW11bml0aW9uIiwgYW5kICJhdG9taWMgcG93ZXIiLCBhbmQgdGhlbiBnb2VzIG9uIHRvIGRlc2NyaWJlIHRoZSBvdGhlciBiaXRzIHRoYXQgY291bGQgYmVuZWZpdCBmcm9tIHRoaXMgYXRvbWljaXR5LCBpbmNsdWRpbmcgImF0b21pYyBhZXJvcGxhbmVzIiwgImF0b21pYyBoYXkgbG9ycmllcyIsICJhdG9taWMgdHJhY3Rpb24gZW5naW5lcyIsICJhdG9taWMgcml2ZXRlcnMiIChyaXZldGluZyBhdCB0d2ljZSB0aGUgcGFjZSBvZiBhIGh1bWFuKSwgYW5kICJhdG9taWMgc21lbHRlcnMiLiAKQ21vblRvdWNoSXQgIDAgcG9pbnRzICBzdWJtaXR0ZWQgMTggaG91cnMgYWdvCkRyIEplbm5pZmVyIEJheHRlciBBR1JDIG1hbmFnZXIgc2FpZCB0aGVyZSB3ZXJlIGEgbG90IG9mIHJldGlyZWVzIHdobyBsaXZlZCBhbG9uZSBvciB3aXRoIG9uZSBvdGhlciBwZXJzb24sIHdobyBkcmV3IG9uIHdlbGZhcmUgb3IgbGl2ZWQgb3V0c2lkZSBhIG1ham9yIGNpdHksIGFtb25nIHRoZSByZWd1bGFyIGdhbWJsZXJzIGdyb3VwLgpTdGlmZiBmaW5nZXIgZXhlcmNpc2VzIGNhbiBhbHNvIGhlbHAgeW91IGdldCByaWQgb2YgdGhhdCBoZWF2eSBhbmQgbGltaXRlZCBmZWVsaW5nIHdoZW4gbW92aW5nIHlvdXIgZmluZ2VycyBhbmQgaGFuZHMuIEdlbnRseSBtYXNzYWdlIHRoZSBzdGlmZiBmaW5nZXJzIGluIHRoZSB0b2VzIGFuZCBoYW5kcyBhbmQgdGhlbiByb3RhdGUgdGhlbSBvbmUgYXQgYSB0aW1lLiBJdCBpcyBhZHZpc2FibGUgdG8gc2VlayBtZWRpY2FsIGhlbHAgYW5kIHRyZWF0bWVudCBpZiB5b3Ugc3VzcGVjdCB5b3UgaGF2ZSBSaGV1bWF0b2lkIEFydGhyaXRpcy4uIApZb3UgaGF2ZSBtb21lbnRzIG9mIGJlaW5nIG5vdCB0aGF0IGludG8gaXQgYnV0IGRvaW5nIGl0IGJlY2F1c2UgeW91IGxvdmUgeW91ciBTTy4gClRoZSBMZWFmcywgd2hvIHdlbnQgaW50byB0aGUgbmlnaHQgaW4gdGhpcmQgcGxhY2UgaW4gdGhlIEF0bGFudGljIERpdmlzaW9uLCB3ZXJlIG1pc3NpbmcgZGVmZW5jZW1lbiBUcmF2aXMgRGVybW90dCBhbmQgSmFrZSBHYXJkaW5lci4gR2FyZGluZXIgd2FzIGFscmVhZHkgb3V0IHdpdGggYSBzb3JlIGJhY2sgYmVmb3JlIERlcm1vdHQgaW5qdXJlZCBoaXMgc2hvdWxkZXIgd2hlbiBoZSB3YXMgY2hlY2tlZCBpbnRvIHRoZSBib2FyZHMgaW4gV2VkbmVzZGF5J3MgNiAyIHdpbiBvdmVyIEVkbW9udG9uLiBEZXJtb3R0IGlzIGV4cGVjdGVkIHRvIG1pc3MgZm91ciB3ZWVrcy4KQnV0IHRvZGF5LCBwZW9wbGUgbmVlZCBvbmx5IHRvIGxvZyBvbiB0aGVpciBjb21wdXRlcnMgYW5kIHNpZ24gdXAgaW4gb25saW5lIHBva2VyIHNpdGVzIHRvIHBsYXkgcG9rZXIuIApTZSBpbnZlY2Ugc3Bvc2kgcGllbmFtZW50ZSBpbCBub3N0cm8gcHJvZ2V0dG8sbG8gc2VudGkgdHVvIGFsIDEwMCUgZSBkZXNpZGVyaSBtZXR0ZXJ0aSBhbCBzZXJ2aXppbyBkaSBxdWVzdGEgZ3JhbmRlIGNhdXNhLCB0cmFtaXRlIGlsIGxpbmsgaW4gYmFzc28gcHVvaSByaWNoaWVkZXJlIGRpIGVudHJhcmUgYSBmYXIgcGFydGUgZGVsIENvbnNpZ2xpbyBEaXJldHRpdm8gZGkgQVJUIGVsZXZlbi4gKCBVbmljYSBjb25kaXppb25lOiB1biBhbW9yZSBhc3NvbHV0byB2ZXJzbyBEaW8gZSB2ZXJzbyBpbCB0dW8gcHJvc3NpbW8pCkFzIGZhciBhcyBJIGNhbiB0ZWxsIHRoZSBvbmUgYWRkaXRpb25hbCBpdGVtIG9mIGluZm9ybWF0aW9uIExCSCBuZWVkcyB0byBjaGFyZ2UgbWUgZm9yIHRoZSBuZXh0IHllYXIgaXMgdGhhdCBteSBjYXIgaXMgcmF0ZWQgYXQgMTExIGdyYW1zIHBlciBraWxvbWV0cmUuIEF0IHRoZSBtb21lbnQgdGhleSBrbm93IGl0IGlzIGJldHdlZW4gMTAwIGFuZCAxNTAuIApJbiBhZGRpdGlvbiwgd2hhdGV2ZXIgeW91ciBmYWl0aCBvciBiZWxpZWZzIGFyZSwgSSBhbSBzdXJlIHlvdXIgbW90aGVyIGlzIGxvb2tpbmcgZG93biBvbiB5b3Uvd291bGQgYmUgZXh0cmVtZWx5IHByb3VkIG9mIHdoZXJlIHlvdSBhcmUgYW5kIGhvdyBmYXIgeW91IGhhdmUgY29tZSwgYW5kIEkgd291bGQgZXZlbiBnbyBzbyBmYXIgYXMgdG8gc2F5IHRoYXQgdGhlIGJlc3QgdHJpYnV0ZSB5b3UgY2FuIGdpdmUgaGVyIGlzIGtlZXAgZHJhd2luZy4gS2VlcCBwcmFjdGljaW5nIGZvciBoZXIuLiAKSSBub3QgYSBjYXIgYnVmZiBieSBhbnkgbWVhbnMsIGJ1dCBoZXJlIG15IHN0b3J5LiAKVGhlIHZpZGVvIHNob3dzIHRoZSBiZWFtaW5nIGNoaWxkcmVuIGV4Y2xhaW1pbmcgaW4gZGVsaWdodCBhbmQganVtcGluZyBhcm91bmQgdGhlIHNtYWxsIHlhcmQgYXMgdGhlIHNub3cgZmFsbHMuIFRoZSBnaXJsIGlzIHNlZW4gc3Bpbm5pbmcgYXJvdW5kIHdpdGggaGVyIGZhY2UgcmFpc2VkIHVwIHRvIHRoZSBza3kgYXMgaGVyIGJyb3RoZXIgamlncyB1cCBhbmQgZG93bi4gQXQgb25lIHBvaW50LCBib3RoIHB1dCB0aGVpciBoYW5kcyBvdXQgYW5kIHdhdGNoIHRoZSBmbGFrZXMgbGFuZCBvbiB0aGVpciB1cHR1cm5lZCBwYWxtcy4uIApOb3cgQmFyYmllIGhlcnNlbGYgaXMgdGhyZWF0ZW5lZCBhbmQgaGVyIGRlbWlzZSBtYXkgc2lnbmFsIHRoZSBlbmQgb2YgdGhlIEFtZXJpY2EgRW1waXJlLiBBY2NvcmRpbmcgdG8gYW4gYXJ0aWNsZSBpbiB0aGUgTmV3IFlvcmsgVGltZXMsIEJhcmJpZSBpcyBmYWNpbmcsIGZvciB0aGUgZmlyc3QgdGltZSwgc29tZSByZWFsIGNvbXBldGl0aW9uLiBBbHRob3VnaCB0aGUgQmFyYmllIEVtcGlyZSBpcyBzdGlsbCB3b3J0aCAkMyBiaWxsaW9uIGEgeWVhciwgdGhlIExpdiBhbmQgTW94aWUgZG9sbHMgd2lsbCBiZSB3b3J0aCBhYm91dCAkMzAgNDAgbWlsbGlvbiB0aGlzIHllYXIuCkluZGl2aWR1YWxzIHdobyBleGVyY2lzZWQgYXQgdGhpcyBsZXZlbCBmb3IgbW9yZSB0aGFuIDE1IHdlZWtzIHNob3dlZCBubyBzaWduaWZpY2FudCBiZW5lZml0cyBvdmVyIHRob3NlIHdobyBleGVyY2lzZWQgZm9yIGxlc3MgdGhhbiAxNSB3ZWVrcywgc3VnZ2VzdGluZyB0aGF0IGltcHJvdmVtZW50cyBjYW4gYmUgbWFkZSBpbiBsZXNzIHRoYW4gNCBtb250aHMgYW5kIHRoZW4gbWFpbnRhaW5lZCBhZnRlciB0aGF0IHBvaW50LiBBIG5ldyBzdHVkeSBvdXQgb2YgQ2FuYWRhIHN1Z2dlc3RzIHRoYXQgZXhlcmNpc2UgY3V0cyB0aGUgcmlzayBvZiBBbHpoZWltZXIgYW5kIGxlc3MgZGV2YXN0YXRpbmcgbWVudGFsIGxvc3NlcywgcGFydGljdWxhcmx5IGluIHdvbWVuLi4gCkNsYXNzIEEgY2VydGlmaWNhdGlvbiByZXF1aXJlcyAxLDA0MCBob3VycyBvZiBleHBlcmllbmNlOyBjbGFzc2VzIEkgYW5kIElJIHJlcXVpcmUgMTIgYW5kIDM2IG1vbnRocywgcmVzcGVjdGl2ZWx5LiBUbyB0YWtlIHRoZSBjbGFzcyBJSUkgZXhhbSwgeW91IG11c3QgaGF2ZSA2MCBtb250aHMgb2YgZXhwZXJpZW5jZSBpbmNsdWRpbmcgMTIgbW9udGhzIGFzIGEgY2xhc3MgSUkgb3BlcmF0b3IuIApTaGUgaGFzIGEgYnVuY2ggb2YgY2F0ZWdvcmllcyB5b3UgY2FuIHB1dCB5b3Vyc2VsZiBpbnRvIGZvciB0aGUgcHVycG9zZSBvZiB1bmRlcnN0YW5kaW5nIGJldHRlciBob3cgdG8gc2V0IHlvdXJzZWxmIHVwIHRvIG1lZXQgeW91ciBnb2FscyBpbnN0ZWFkIG9mIHdvcmtpbmcgYWdhaW5zdCB5b3Vyc2VsZi4KSG93IHRvIFVzZSB0aGUgU3RyYXRlZ3kgQ2hhcnQ/Ckp1c3QgdG8gYmUgb24gdGhlIG90aGVyIHNpZGUsIEZTRCBpc24gb3V0IHlldCwgc28gdGhlIHByaWNlIGNvdWxkIHN0aWxsIHJhaXNlIGV2ZW4gbW9yZSBvbmNlIGl0IGNvbXBsZXRlLiBUaGV5IGFyZSBhIGJ1c2luZXNzIGFuZCBuZWVkIGNhc2gsIHRoZXkgcHJvYmFibHkgZGlkIHRoZSBzdXJ2ZXlzIHRvIHNlZSB3aGF0IHRoZSBiZXN0IHByaWNlIHRvIG1heGltaXplIGluY29tZS4KRmxvcCBpcyB0aGUgbmFtZSBjYWxsZWQgZm9yIHRoZSBzZXJpZXMgb2YgdGhyZWUgY2FyZHMgd2hpbGUgdGhlIHR3byBhZGRpdGlvbmFsIGNhcmRzIGFyZSBjYWxsZWQgdGhlICJ0dXJuIiBhbmQgdGhlICJyaXZlci4iIEVhY2ggdGltZSB0aGUgY2FyZHMgYXJlIGRlYWx0LCB0aGUgcG9rZXIgcGxheWVyIGhhcyB0aGUgb3B0aW9uIHRvIGVpdGhlciBjaGVjaywgZm9sZCBvciBiZXQuIApFbmpveSB0aGUgR2FtZSBieSBVc2luZyBPdXIgV2lubmluZyBQb2tlciBUaXBzCiJBIGZpbG0gbGlrZSBEcm9uYSBsZW5kcyBpdHNlbGYgbmF0dXJhbGx5IHRvIGEgbWVyY2hhbmRpc2luZyBvcHBvcnR1bml0eS4gVW5saWtlIGluIEhvbGx5d29vZCwgd2hlcmUgcG9wdWxhciBjb21pYyBib29rcyBhcmUgdHJhbnNmb3JtZWQgaW50byBmZWF0dXJlIGZpbG1zLCBpdCdzIHRoZSBvdGhlciB3YXkgcm91bmQgaGVyZS4gV2UgaGF2ZSBjb21lIG91dCB3aXRoIHRoZSBtZXJjaGFuZGlzZSBiZWNhdXNlIHdlIHBsYW4gdG8gY29udGludWUgdGhlIERyb25hIHNlcmllcyB3aXRoIG1vcmUgZmlsbXMgYmFzZWQgb24gdGhlIGNoYXJhY3RlciwiIHNheXMgU2hyaXNodGkgQXJ5YSwgcHJvZHVjZXIgb2YgRHJvbmEuLiAKVGhpcyBtYXkgY2F1c2UgYW5vdGhlciBwbGF5ZXIgdG8gZm9sZCB0aGUgd2lubmluZyBoYW5kLiAKU0FHSU5BVyBUT1dOU0hJUCwgTUkgICBBIHN1c3BlY3RlZCByb2JiZXIgd2FzIHNob3QgYW5kIGtpbGxlZCBhdCBhIHBva2VyIGdhbWUgaW4gU2FnaW5hdyBUb3duc2hpcCBpbiBhIHNob290aW5nIGluIHdoaWNoIGEgc2Vjb25kIHBlcnNvbiBhbHNvIHdhcyBpbmp1cmVkLCBhY2NvcmRpbmcgdG8gQ2hpZWYgb2YgUG9saWNlIERvbiBQdXNzZWhsIEpyLgpCdXQgbG9vayBhdCBCYWxseSdzIEZsYW1pbmcgN3MgbWFjaGluZSwgYW5kIHlvdSB3aWxsIHNlZSB0aGUgYmFycyBsaXN0ZWQgZm9yIG9uZSBjb2luIGFuZCB0aGUgN3MgbGlzdGVkIGZvciB0d28gY29pbnMuIApQcm9ibGVtIGdhbWJsaW5nIGlzIGFueSBnYW1ibGluZyBiZWhhdmlvciB0aGF0IGRpc3J1cHRzIHlvdXIgbGlmZS4gSWYgeW91IHByZW9jY3VwaWVkIHdpdGggZ2FtYmxpbmcsIHNwZW5kaW5nIG1vcmUgYW5kIG1vcmUgdGltZSBhbmQgbW9uZXkgb24gaXQsIGNoYXNpbmcgbG9zc2VzLCBvciBnYW1ibGluZyBkZXNwaXRlIHNlcmlvdXMgY29uc2VxdWVuY2VzIGluIHlvdXIgbGlmZSwgeW91IGhhdmUgYSBnYW1ibGluZyBwcm9ibGVtLkEgZ2FtYmxpbmcgYWRkaWN0aW9uIG9yIHByb2JsZW0gaXMgb2Z0ZW4gYXNzb2NpYXRlZCB3aXRoIG90aGVyIGJlaGF2aW9yIG9yIG1vb2QgZGlzb3JkZXJzLiAKVGhlc2UgbWVuIHJlYWxseS4gRXMgYmVzY2hyZWlidCB3aWUgc2Nob24gZ2VzYWd0IGRlbiBXZWcgdm9uIE5laWwgU3RyYXVzcyBhbGlhcyBTdHlsZSB3aWUgZXIgenVtIC4gCkhvcGUgdGhpcyBpc24gdG9vIGFic3RyYWN0IGFuZCBoZWxwcyBzb21lLiA6KQpFeHBlcmltZW50IHdpdGggbGFyZ2VyIHNpemluZyBwcmUgd2l0aCBhIGhhbmQgbGlrZSBRUS4gUmVhZCB0aGUgZ2FtZSBhbmQgc2l6ZSBpdCB1cC4gWW91IGRvbid0IHdhbnQgUVEgNSB3YXlzIHRvIHRoZSBmbG9wIG9vcC4gUGxheSBkZWVwZXIgaWYgeW91IGNhbi4gR2l2ZSB5b3Vyc2VsZiBhbiBvcHBvcnR1bml0eSBmb3IgcmFpc2VzIGFuZCBjaGVjay9yYWlzZXMuIFlvdSdyZSBnb2luZyB0byBnZXQgZHJhd24gb3V0IG9uIGEgbG90IHdpdGggdGhpcyBzdGFjayBzaXplIGJlY2F1c2UgdGhlIHZpbGxhaW5zIHdpbGwgZ2V0IHRvIHNlZSBhbGwgNSBjYXJkcyBhZ2FpbnN0IHlvdSBvZnRlbi4KTXkgZGVzaXJlIGluIHNlcnZpY2UgdG8geW91IGhhcyBhbHdheXMgYmVlbiB0byBibGVzcyB5b3UgYXMgeW91IG1ha2UgaW1wb3J0YW50IGRlY2lzaW9ucyBmb3IgdGhlIEFtZXJpY2FuIHBlb3BsZS4gSSBiZWxpZXZlIHlvdSBhcmUgc2VydmluZyBhcyBQcmVzaWRlbnQgdG9kYXkgYmVjYXVzZSBvZiBHb2QncyBwcm92aWRlbmNlLiBJIGJlbGlldmUgdGhhdCBzYW1lIHByb3ZpZGVuY2UgYnJvdWdodCBtZSBpbnRvIHlvdXIgc2VydmljZS4gSSBwcmF5IGFzIEkgaGF2ZSBzZXJ2ZWQgeW91IHRoYXQgSSBoYXZlIGJsZXNzZWQgeW91IGFuZCBlbmFibGVkIHlvdSB0byBlZmZlY3RpdmVseSBsZWFkIHRoZSBBbWVyaWNhbiBwZW9wbGUuIFRoYW5rIHlvdSBhZ2FpbiBNci4gUHJlc2lkZW50IGZvciB0aGUgaG9ub3Igb2Ygc2VydmluZyB5b3UgYW5kIEkgd2lzaCB5b3UgR29kc3BlZWQgaW4gYWxsIHRoYXQgeW91IHB1dCB5b3VyIGhhbmQgdG8uCkxhc3Qgd2VlaywgRmFjZWJvb2sgQ0VPIE1hcmsgWnVja2VyYmVyZyB0cmllZCB0byByZWFzc3VyZSBDYXBpdG9sIEhpbGwgdGhhdCBoaXMgc29jaWFsIG5ldHdvcmsgaXMgY2xhbXBpbmcgZG93biBvbiBvdXRmaXRzIGxpa2UgQ2FtYnJpZGdlIEFuYWx5dGljYSwgd2hpY2ggb2J0YWluZWQgdGhlIHByaXZhdGUgaW5mb3JtYXRpb24gb2YgYXMgbWFueSBhcyA4NyBtaWxsaW9uIHVzZXJzIHdoaWxlIHdvcmtpbmcgZm9yIFByZXNpZGVudCBUcnVtcCdzIDIwMTYgY2FtcGFpZ24uCk9uIHRoZSBvdGhlciBoYW5kLCBteSBnaXJsZnJpZW5kcyBjb21wbGltZW50IG1lIGFsbCB0aGUgdGltZS4gSXQgYmVjYXVzZSB0aGV5IHdvbWVuIGFuZCB0aGV5IGtub3cgdGhhdCBvdGhlciB3b21lbiBhcHByZWNpYXRlIHRoYXQuIApTZW5lY2EgYW5kIENheXVnYSwgZm9yIGV4YW1wbGUsIGFyZSB2ZXJ5IGNsb3NlbHkgcmVsYXRlZCwgYXMgYXJlIENob2N0YXcgYW5kIENoaWNrYXNhdy4uIApJIGtub3cgdGhhdCBoYXBwZW5zIHRvIHBlb3BsZSBidXQgSSBjb250aW51ZWQgdG8gbWFrZSBleGN1c2VzIGZvciBmb3VyIHllYXJzLiBJIHdlbnQgb3V0IGxlc3MgYW5kIGxlc3MgYW5kIHdhcyByYXJlbHkgcGh5c2ljYWxseSBhY3RpdmUuIApUaGlydGVlbiBHT1Agc2VuYXRvcnMgaGF2ZSBzaWduYWxlZCB0aGV5IGRvbid0IHN1cHBvcnQgVHJ1bXAncyBtb3ZlLCBidXQgbWFueSBvdGhlcnMgc2F5IHRoZXkgYXJlbid0IGluY2xpbmVkIHRvIHVuZG8gaXQuU2VuYXRlIERlbW9jcmF0aWMgbGVhZGVyIENodWNrIFNjaHVtZXIgb2YgTmV3IFlvcmsgY2FsbGVkIFRydW1wJ3MgZW1lcmdlbmN5IGRlY2xhcmF0aW9uIGEgImRlZmFjZW1lbnQgb2Ygb3VyIGNvbnN0aXR1dGlvbmFsIGJhbGFuY2Ugb2YgcG93ZXJzIGZvciB3aGF0IGl0IHNlZW1zIGlzIGxhcmdlbHkgcG9saXRpY2FsIHB1cnBvc2VzLiJUaGUgY2FsbCBieSBQZWxvc2kgYW5kIFNjaHVtZXIgZm9yIGEgYmlwYXJ0aXNhbiByZWplY3Rpb24gb2YgVHJ1bXAncyBib3JkZXIgd2FsbCBlZmZvcnQgaXMgYSB0b3VnaCBzZWxsIGZvciBtYW55IFJlcHVibGljYW5zIHdobyByZXByZXNlbnQgc3RhdGVzIGFuZCBkaXN0cmljdHMgd2hlcmUgY3JhY2tpbmcgZG93biBvbiBpbGxlZ2FsIGltbWlncmF0aW9uIGlzIHBvbGl0aWNhbGx5IHBvcHVsYXIuIApVbmUgZGFtZSBxdWUgbm91cyBhcHBlbGxlcm9ucyBNSCBlc3QgdmVudWUgbWUgcmFwcGVsZXIgc3VyIG1hIHBhZ2UgRmFjZWJvb2sgcXVlIGogZW5jb3JlIGRlcyBjcm8gbWFuZ2VyIGF2YW50IGQgdW4gY2l0b3llbiBtb2QgYXZlYyBjZXMgbW90cyBsYXBpZGFpcmVzIDogRW4gcmVnYXJkYW50IERldXhpIENoYW5jZSBjZSBzb2lyLCBqIHN1cnByaXNlIChkID8pIGRlIGNvbnN0YXRlciBxdWUgdm91cyBwb3J0ZXogdW4gbWFudGVhdSBDYW5hZGEgR29vc2UgQXJrLiBNZSBsZSBzdWlzIHRlbnUgcG91ciBkaXQuLiAKVGhlIHJlc3Qgb2YgdGhlIG1hdGVyaWFsIGhlIHByb3ZpZGVzIGlzIHNuYXBzaG90cyBzaG93aW5nIGhpcyB3aW4gYW1vdW50cyBhbnl3aGVyZSBmcm9tIG1pbnV0ZXMgdG8gYSBjb3VwbGUgaG91cnMuIFRoZXJlIGlzIGEgc2VjdGlvbiB0aGF0IHByb3ZpZGVzIGEgcXVpY2sgdGFibGUgb2YgY29udGVudHMgb2Ygd2hhdCB5b3Ugd2lsbCBsZWFybiBmcm9tIGhpcyBlQm9vayBhcyB3ZWxsLiAKSSBmb3VuZCB0aGlzIGZhbnRhc3RpYyBwaG90b2dyYXBoIG9mIHRoZSBhdHRlbmRlZXMgb2YgdGhlIG1lZXRpbmcgb2YgdGhlIEFzdHJvbm9taXNjaGUgR2VzZWxsc2NoYWZ0IGF0IEhhbWJ1cmcsIEF1Z3VzdCAxOTEzIGluIHRoZSBEZWNlbWJlciBpc3N1ZSAxOTEzIGlzc3VlIG9mIFBvcHVsYXIgQXN0cm9ub215LiBUaGlzIGlzIGFuIGF1Z3VzdCBncm91cCwgYW5kIG9mIGNvdXJzZSB0aGV5IG5vdCAiYmxhbmsiIG9yICJtaXNzaW5nIiBpdHMganVzdCBhIGZ1bmN0aW9uIG9mIHNvbWUgb3V0IG9mIGNvbnRleHQgb2JzZXJ2YXRpb25zIG9uIHRoZSBvcGFxdWUgb3ZlcmxheSB0aGF0IHNlcnZlcyB0byBpZGVudGlmeSBhbGwgb2YgdGhlIGZvbGtzIGluIHRoZSBtYXNzaXZlIGdyb3VwIHBob3RvLiAoSSBlbmNvdW50ZXJlZCB0aGVzZSBudW1lcm91cyB0aW1lcyBvdmVyIHRoZSB5ZWFycyBhbmQgYWx3YXlzIGhhdmUgZm91bmQgdGhlIEZvdW5kIEFydCBhc3BlY3Qgb2YgdGhlbSBpbnRlcmVzdGluZyBhbmQgYW11c2luZy4pIFRoZSBmYWN0IG9mIHRoZSBtYXR0ZXIsIHRob3VnaCwgaXMgdGhhdCB0aGVyZSB3ZXJlIHNvbWUgdmVyeSBoaWdoIHBvd2VyZWQgcGVvcGxlIGF0IHRoaXMgbWVldGluZy4gT2ZmaGFuZCBJIGlkZW50aWZ5IE1hZGVyLCBFZGRpbmd0b24sIEFiYm90dCwgTXVlbGxlciwgUGxhc3NtYW4sIFN0cnV2ZSwgUGxhc2tldHQsIENhbXBiZWxsLCBSZXBzb2xkKHMpLCBKYW5zZW4sIFNjaHdhcnpjaGlsZCwgQmFja2x1bmQsIFNlZWxpZ2VyLCBhbmQgbnVtZXJvdXMgb3RoZXJzLiBUaGlzIGlzIHByb2JhYmx5IGEgZ2VuZXJhbCB0cnV0aCwgdGhvdWdoIGl0IGlzIHBhcnRpY3VsYXJseSBzbyB3aXRoIGpvdXJuYWxzIHRoYXQgY3V0IGEgYnJvYWQgcGF0aCBpbiB0aGUgY29tbXVuaWNhdGlvbiBvZiBpZGVhcywgYW5kIHRoaXMgaXMgY2VydGFpbmx5IHRoZSBzdG9yeSB3aXRoIHRoZSBsYXRlIDE3dGggY2VudHVyeSBqb3VybmFsL21hZ2F6aW5lLCBCaWJsaW90aGVxdWUgVW5pdmVyc2VsbGUuIEl0IHJhbiBmcm9tIDE2NzIgdG8gMTcyNiwgYW5kIHRoZSBpbnRlbGxlY3R1YWxseSB0aGlyc3R5IGVkaXRvcnMgcmFuIGEga2luZCBvZiByZXZpZXcvYWJzdHJhY3Qgc2VydmljZSBmb3IgdGhlaXIgcmVhZGVycyB0aGV5IGZvdW5kIChtb3N0bHkpIG5ld2x5IHB1Ymxpc2hlZCBib29rcyBpbiBhIHdpZGUgdmFyaWV0eSBvZiBhcmVhcywgYW5kIHdyb3RlIHN1bW1hcmllcyBhbmQgc3RhdGVtZW50cyBvbiB0aGVtLCB3aXRoIGJhY2tncm91bmQgaGlzdG9yeSwgYW5kIHRoZSBvY2Nhc2lvbmFsIGVkaXRvcmlhbCBjb21tZW50LiBTb21lIG9mIHRoZSBhcnRpY2xlcyB3ZXJlIG9uIHNpZ25pZmljYW50IHdvcmtzIGJ5IEpvaG4gTG9ja2UgYW5kIEFudG9pbmUgdmFuIExlZXV3ZW5ob2VrLCBidXQgbWFueSBhbmQgcHJvYmFibHkgbW9zdCB3ZXJlIG9uIG9ic2N1cmUgdG9waWNzIGluIG5pdHR5IHRoZW9sb2dpY2FsIGhpc3RvcnkgYW5kIG1vc3RseSBpbnZpc2libGUgcGhpbG9zb3BoaWNhbCBpc3N1ZXMsIG9yIGF0IGF0IGxlYXN0IHRoYXQgaXMgaG93IHRoZSBsYXR0ZXIgc2VlbXMgdG8gbWUgdG9kYXkuIFRoZSBCaWJsaW90aGVxdWUgYnJvdWdodCBuZXcgaWRlYXMgdG8gdGhlIGNvbnRpbmVudCwgYW5kIGJyb3VnaHQgdGhlbSBpbiB0aGUgTGluZ3VhIEZyYW5jYSwgd2hpY2ggYWxzbyBoYXBwZW5lZCB0byBiZSBGcmVuY2guClRoYXQgaXMgZHVlIHRvIGEgam9pbnQgdmVudHVyZSBiZXR3ZWVuIENhbmFkaWFuIGNvbXBhbnkgU2hlcnJpdHQgSW50ZXJuYXRpb25hbCBhbmQgc3RhdGUgbmlja2VsIG1vbm9wb2x5IEN1YmFuaXF1ZWwsIHdoaWNoIHByb2R1Y2VzIGFyb3VuZCA2MCBwZXJjZW50IG9mIHRoZSBpc2xhbmQncyBuaWNrZWwgcGx1cyBjb2JhbHQsIHdoaWNoIGlzIHRoZW4gc2hpcHBlZCB0byBhIGpvaW50IHZlbnR1cmUgaW4gQ2FuYWRhIGZvciByZWZpbmluZy4KQXMgaGVyIGJlbGx5IGdldHMgYmlnZ2VyLCB0cnkgZGlmZmVyZW50IHBvc2l0aW9ucy4gCllhbGl0emEgQXBhcmljaW8sIHdobyBzaGluZWQgYXMgQ2xlbyBpbiAiUm9tYSwiIHdhbGtlZCBpbiBhIG9uZSBzaG91bGRlciwgbWludCBncmVlbiBnb3duIHdpdGggYW4gZW1iZWxsaXNoZWQgb3ZlcmxheS4gU2hlIHdvcmUgaGVyIGxvbmcgZGFyayBoYWlyIGRvd24gaW4gYSBtaWRkbGUgcGFydCBhcyBzaGUgcG9zZWQgb24gdGhlIGNhcnBldCBpbiBoZXIgcHJpbmNlc3MgbG9vay4KU2hlIGFza2VkIHNlcnZpY2VtZW1iZXJzIHRvIG5vdCB3ZWFyIHRoZWlyIGRyZXNzIHVuaWZvcm1zIHRvIHRoZSBXaGl0ZSBIb3VzZSAoYW5kIGluc3RlYWQgdG8gZHJlc3MgaW4gY2l2aWxpYW4gY2xvdGhpbmcpLCBhbmQgdmFyaW91cyBhZ2VudHMgYW5kIHBlcnNvbm5lbCB3ZXJlIGRpcmVjdGVkIHRvIGhpZGUgYmVoaW5kIGRyYXBlcnkgb3Igc3RlcCBpbnRvIGEgbmVhcmJ5IG9mZmljZSBzbyBzaGUgZGlkbiBoYXZlIHRvIGxvb2sgYXQgdGhlbSBhcyBzaGUgd2Fsa2VkIGJ5Li4gCkhlLCBhbmQgbWFueSBvdGhlcnMgYXMgaGltLCBwZXJwZXRyYXRlZCBhdHJvY2lvdXMsIGhlaW5vdXMsIHRlcnJpYmxlIGFjdHMsIGJ1dCBub3cgaGF2ZSAibWVhbmluZ2Z1bCBsaXZlcyIgaW4gd2hpY2ggdGhleSAiY29udHJpYnV0ZSB0byBzb2NpZXR5Ii4gCkFzIHBhcnQgb2YgYSBsYXJnZXIgc3RyYXRlZ3kgSSBkb250IHRoaW5rIGl0cyBnb29kIHRvIGhhdmUgcmFpc2VzIGhlcmUgd2hlbiBoaXMgcmFuZ2UgaXMgc28gdW5jYXBwZWQgYW5kIG1pbmUgaXMgSkogYXQgYmVzdC4gClRoaXMgcmVtaW5kcyBtZSBvZiB0aGUgdGltZSBJIHdhcyBzZWxsaW5nIGEgY2FyIGFuZCBhIDMwIGlzaCBtYW4gY2FtZSB0byBzZWUgaXQgYW5kIGFza2VkIHRvIHRlc3QgZHJpdmUgaXQuIEkgd2VudCB3aXRoIGhpbSBvZiBjb3Vyc2UgYnV0IGhlIHByb2NlZWRlZCB0byB0YWtlIGl0IG9mZiBSb2FkIGludG8gYSBwb3QgaG9sZSBmaWxsZWQgZGlydCBwYXJraW5nIGxvdCBhbmQgZHJvdmUgd2F5IHRvbyBmYXN0IGRvaW5nIGRvbnV0cyBhbmQgZmlndXJlIGVpZ2h0cyBvdmVyIGFuZCBvdmVyLCBpdCB3YXMgbmVydmUgd3JhY2tpbmcuIEkgcmVhbGx5IHdhbnRlZCB0byB0ZWxsIGhpbSBpdCB3YXMgaGlnaGx5IGluYXBwcm9wcmlhdGUgYW5kIHRvbyByb3VnaCBvbiBhIGNhciBoZSBkaWQgbm90IHlldCBvd24gYnV0IGRpZG4ndC4gSGUgZGlkIG5vdCBidXkgdGhlIGNhciBlaXRoZXIuIElmIHRoYXQgc2NlbmFyaW8gZXZlciBjb21lcyB1cCBhZ2FpbiB5b3UgY2FuIGJldCBJJ2xsIHB1dCBhbiBpbW1lZGlhdGUgc3RvcCB0byBpdC4gQXQgdGhlIHRpbWUgaXQgd2FzIHRvdGFsbHkgdW5leHBlY3RlZCBhbmQgSSBjb3VsZG4ndCB0aGluayBvZiB3aGF0IHRvIGRvLCBJIG1lYW4gd2hvIGRvZXMgdGhhdD8KTG9vayBhdCB3aGF0IHRoZSBlcXVpbGlicml1bSByZXNwb25zZSBpcyB0byBhIHNpbXBsaWZpZWQgc3RyYXRlZ3kKVGhlcmUncyBhIHNtYWxsIGJ1dCBub24gemVybyBjaGFuY2UgdGhhdCBoZSdzIGFycm9nYW50IGVub3VnaCB0byB0aGluayBoZSdsbCB3aW4gYW5kIHdpbGwgcHJvY2VlZCBvbndhcmRzIHRvIGFuIGVsZWN0aW9uLiBXZSd2ZSBzZWVuIGl0IGJlZm9yZSB3aXRoIGhpcyBsZWFkZXJzaGlwIHNwaWxsICAgaGUgd2FzIGJlYXRlbiB0d2ljZSBiZWNhdXNlIGhlIGZhaWxlZCB0byBhZGVxdWF0ZWx5IGFzc2VzcyB0aGUgY29tcGV0aXRpb24gYW5kIHBsb3VnaGVkIG9uIGFoZWFkLiBSZW1lbWJlciB0aGF0IGhlIG11c3QgaGF2ZSB0aG91Z2h0LCBkZXNwaXRlIGFsbCBldmlkZW5jZSB0byB0aGUgY29udHJhcnksIHRoYXQgYW5vdGhlciBsZWFkZXJzaGlwIHNwaWxsIHdvdWxkIGJlIHRvbGVyYXRlZCBieSB0aGUgY29tbXVuaXR5IGlmIG9ubHkgaGUgY291bGQgZ2V0IHRoZSBsZWFkZXJzaGlwLiAKQW5kIEkgYWdyZWUgdGhhdCB0aGUgcGFwZXIgaGFzIG11Y2ggZm9yIHdoaWNoIHRvIGFuc3dlcjsgbmFtZSBvbmUgdGhhdCBkb2Vzbid0LiBCdXQgdGhlIE5ldyBZb3JrIFBvc3QgaGFzbid0IGJlZW4gdW5kZXIgZmVkZXJhbCwgc3RhdGUgYW5kIGxvY2FsIGNyaW1pbmFsIGludmVzdGlnYXRpb24gZm9yIHRoZSBwYXN0IHR3byBwbHVzIHllYXJzLCBlaXRoZXIgICB3aGljaCwgYWhlbSwgaXMgbW9yZSB0aGFuIGNhbiBiZSBzYWlkIG9mIEJpbGwgZGUgQmxhc2lvLgpJZiB0aGUgY2hhcmdlIGZvciBmdWxmaWxsaW5nIGEgcmVxdWVzdCBleGNlZWRzICQ0MC4wMCwgdGhlIHJlcXVlc3RvciB3aWxsIGJlIHByb3ZpZGVkIGFuIGl0ZW1pemVkIHdyaXR0ZW4gZXN0aW1hdGUgb2YgdGhlIGNoYXJnZXMgYW5kIHdpbGwgYmUgaW5mb3JtZWQgaWYgYSBsZXNzIGNvc3RseSBhbHRlcm5hdGl2ZSBpcyBhdmFpbGFibGUuIElmIHRoZSBlc3RpbWF0ZWQgY2hhcmdlIGlzIG1vcmUgdGhhbiAkMTAwLjAwLCB0aGUgVW5pdmVyc2l0eSB3aWxsIHJlcXVpcmUgYSBwcmVwYWlkIGRlcG9zaXQgb3IgYm9uZCAoYXBwcm94aW1hdGVseSA1MCUgb2YgdGhlIGVzdGltYXRlZCBjaGFyZ2UpIGJlZm9yZSBjb21waWxpbmcgdGhlIGluZm9ybWF0aW9uLiBub3RlIHRoYXQgdGhlIDEwIGJ1c2luZXNzIGRheSBkZWFkbGluZSBzdGFydHMgb3ZlciB3aGVuIHRoZSBVbml2ZXJzaXR5IHJlY2VpdmVzIHlvdXIgZGVwb3NpdC4gdGhlIGNvc3QgYXNzb2NpYXRlZCB3aXRoIHByb2R1Y2luZyBwdWJsaWMgaW5mb3JtYXRpb24gZXhjZWVkcyAkMTAuMDAsIHRoZSBPR0Mgd2lsbCByZXF1aXJlIHRoZSByZXF1ZXN0b3IgdG8gc3VibWl0IHBheW1lbnQgaW4gZnVsbCBwcmlvciB0byByZWxlYXNpbmcgYW55IGluZm9ybWF0aW9uIHRvIHRoZSByZXF1ZXN0b3IuCk5vdyBpZiBJIHR5cGUgYSBsb2NhdGlvbiBsaWtlICVBcHBEYXRhJSBhbmQgd2FudCB0byBjb250aW51ZSB0byB0aGUgbmV4dCBzdWIgZGlyIEkgaGF2ZSB0byB0eXBlIGl0LCBwcmVzcyB1cCB0byBoaWdobGlnaHQgaXQgYW5kIHByZXNzIGRvd24gdG8gZm9jdXMgdGhlIHRleHQgYm94IGFnYWluIHRvIGNvbnRpbnVlIHdpdGggdGhlIG5leHQgc3ViIGRpciBpbnN0ZWFkIG9mIGp1c3QgImF1dG8gY29tcGxldGluZyIgcHJvcGVybHkuClRoZSBDaWVsIGlzIHBhcmtlZCBpbiB0aGUgZ2FyYWdlIGFuZCBTYW0gaXMgZHJhZ2dlZCBmcm9tIGhpcyB0cnVuayB1cCB0byB0aGUgZm91cnRoIGZsb29yIG9mIHRoZSBvZmZpY2UgYnVpbGRpbmcuIApJbiBPY3RvYmVyIDIwMTcsIEd1eSBPdWVsbGV0dGUsIGEgTGliZXJhbCBtZW1iZXIgb2YgdGhlIGxlZ2lzbGF0dXJlIGF0IHRoZSB0aW1lLCB3YXMgYXJyZXN0ZWQgYnkgVVBBQyBvbiBzdXNwaWNpb24gaGUgd2FzIGludm9sdmVkIGluIGxlYWtpbmcgdGhlIGluZm9ybWF0aW9uIGFib3V0IENoYXJlc3QgYW5kIEJpYmVhdS4gT3VlbGxldHRlLCBhIGZvcm1lciBwcm92aW5jaWFsIHBvbGljZSBvZmZpY2VyLCBkZW5pZWQgdGhlIGNsYWltcyBhbmQgd2FzIG5ldmVyIGNoYXJnZWQuCk1lbWVudG9tb3JpMTYwNiAgMyBwb2ludHMgIHN1Ym1pdHRlZCAyMCBkYXlzIGFnbwpCdXQgUG9sYW5za2kgaXMgYSBQb2xpc2ggSmV3IGxpdmluZyBpbiBGcmFuY2UuIApJIHB1dCB0aGUgb2ZmZXIgaW4gdGhlIGRheSBpdCBjYW1lIG9uIHRoZSBNYXJrZXQuIEkgd2FzIGFib3V0ICQzayBsb3cuIAoiVGhlIHVuZGVybHlpbmcgY2F1c2Ugb2YgY2hyb25pYyBkaXNlYXNlIGNvbWVzIGZyb20gaW5jcmVhc2VkIHByb2R1Y3Rpb24gb2YgYSBuYXR1cmFsIGZhdHR5IGFjaWQgY2FsbGVkIGFyYWNoaWRvbmljIGFjaWQgKEFBKSwgd2hpY2ggY2FuIGJlIGluY3JlZGlibHkgdG94aWMgYXQgaGlnaCBjb25jZW50cmF0aW9ucy4gVGhpcyBpcyB0aGUgdG94aWMgZmF0IHRoYXQgaXMga2V5IHRvIG5vdCBvbmx5IHVuZGVyc3RhbmRpbmcgb3VyIG9iZXNpdHkgZXBpZGVtaWMgYnV0IGFsc28gcHJvdmlkaW5nIHRoZSBsaW5rYWdlIGJldHdlZW4gb2Jlc2l0eSBhbmQgY2hyb25pYyBkaXNlYXNlLiIgUC4gMi4gCkkgaGF2ZSB0YWxrZWQgYWJvdXQgdGhpcyBhdCBncmVhdCBsZW5ndGggaW4gb3RoZXIgcG9zdHMuIApNYW5uaW5nIHNhaWQgb24gVGh1cnNkYXkgdGhhdCBwcm9zZWN1dG9ycyBvbiBXZWRuZXNkYXkgaGFkIGFza2VkIGhlciBhIHNlcmllcyBvZiBxdWVzdGlvbnMgYWJvdXQgV2lraUxlYWtzIGJlZm9yZSB0aGUgZ3JhbmQganVyeSwgYnV0IHNoZSBoYWQgcmVzcG9uZGVkIHRvIGV2ZXJ5IHF1ZXN0aW9uIGJ5IHNheWluZyBpdCB2aW9sYXRlZCBoZXIgY29uc3RpdHV0aW9uYWwgcmlnaHRzLi4gCkFteWFib2kgIDcgcG9pbnRzICBzdWJtaXR0ZWQgMjggZGF5cyBhZ28KV2UgaGF2ZSBwZW9wbGUgaW4gdGhhdCBzcGFjZS4gClRoZW4gd2UgZGlkIHRoZSBIYWxsb3dlZW4gbW92aWVzLiBBbmQgTmlnaHRtYXJlIG9uIEVsbSBTdHJlZXQuClRvIGdldCBiYWNrIG9uIHRvcGljLiBIaWxhcnkgaXMgYSBoeXBvY3JpdGUuIFNoZSBiYXNpY2FsbHkgaXMgZm9yIGluY3JlYXNlZCBzdXJ2ZWlsbGFuY2UuIApSYWFyIGhvb3IuIE9uemUgR1BTIHN0dXVyZGUgb25zIGluIGRlIG9tZ2V2aW5nIG9vayBub2cgcm9uZCBvdmVyIGdld29uZSB3ZWdlbiBvbSBlZW4gYW5kZXJlIGZpbGUgdGUgdmVybWlqZGVuLi4gCkhvdyB0byBicmlnaHRlbiB5b3VyIGhvbWUgd2l0aCBsaWdodGluZyBkZXNpZ25zCjgpIFdoZW4gdGhlIGNoaWNrZW5zIGhhdmUgYnJvd25lZCBvbiB0aGUgYm90dG9tLCBhYm91dCAxNSBtaW51dGVzLCByZW1vdmUgdGhlbSBmcm9tIHRoZSBvdmVuIGFuZCB0dXJuIHRoZW0gYmFjayBvdmVyLiBSZXR1cm4gdGhlIGNoaWNrZW5zIHRvIHRoZSBvdmVuIGZvciB0aGUgZmluYWwgMTUgbWludXRlcyBvZiBjb29raW5nLiBEdXJpbmcgdGhpcyB0aW1lIHRoZSBza2luIG9uIHRoZSBjaGlja2VucyBzaG91bGQgYmUgdmVyeSBicm93biBhbmQgY3Jpc3B5LgpBcyB3ZSBtb3ZlIHRvIGEgbW9iaWxlLCBzb2NpYWwgYW5kIHBlcnZhc2l2ZSBJbnRlcm5ldCwgd2UgbWF5IHNlZSBvdXIgcHJpdmF0ZSBpbmZvcm1hdGlvbiBiZWNvbWUgcGFydCBvZiB0aGUgcHVibGljIHJlY29yZC4gCkkgbG92ZSBtYWtpbmcgdGhlc2UgZmFuY3kgcmFiYml0cy4gSSBzZWxsIHRoZW0gZm9yICQ1LgpZb3Ugc2hvdWxkIGJlIGFibGUgdG8gYm9vayB0aGlzIG9ubGluZSwgYnV0IG9ubHkgYWZ0ZXIgeW91IGhhdmUgcmVjZWl2ZWQgYSBkZWNpc2lvbiBmcm9tIHRoZSBTY3JlZW5pbmcgT2ZmaWNlci4gWW91IGNhbiBza2lwIHN0cmFpZ2h0IHRvIGEgZnVsbCBoZWFyaW5nIHdpdGhvdXQgZ29pbmcgdGhyb3VnaCB0aGUgc2NyZWVuaW5nIHByb2Nlc3MgZmlyc3QuLiAKSW4gY29sbGVnZSwgSSB3YXMgd29ya2luZyBpbiBhIGdyb3VwIHByb2plY3Qgd2l0aCBhbiBpbnRlcm5hdGlvbmFsIHN0dWRlbnQgZnJvbSBDaGluYS4gSSB3YXMgdmFndWVseSBhd2FyZSB0aGF0IHNoZSB3YXMgc3VwZXIgcmljaCAodGhlIENoaW5lc2Ugc3R1ZGVudHMgd2VyZSBhbG1vc3QgYWx3YXlzIHByZXR0eSByaWNoLCBhcyB0aGVpciBwYXJlbnRzIGhhZCBwYWlkIHRvIG1vdmUgdGhlbSB0byB0aGUgVVNBLCBidXkgdGhlbSBuaWNlIGNhcnMvYXBhcnRtZW50cywgYW5kIHBheSBmb3IgYW4gYWxyZWFkeSB2ZXJ5IGV4cGVuc2l2ZSBwcml2YXRlIGNvbGxlZ2UpIGJ1dCBpdCBuZXZlciBvY2N1cnJlZCB0byBtZSBqdXN0IGhvdyBkaWZmZXJlbnQgb3VyIGNvbmNlcHRzIG9mIG1vbmV5IHdlcmUgdW50aWwgc2hlLCB3aGlsZSBmbGlwcGluZyB0aHJvdWdoIGhlciBwaG9uZSBhdCB0aGUgZW5kIG9mIGEgbWVldGluZywgc2FpZCAiSGV5IGFuaW1hbGN1bGUsIEkgd2FzIHRoaW5raW5nIG9mIGJ1eWluZyBzb21ldGhpbmcgdG8gY2VsZWJyYXRlIGZpbmlzaGluZyB0aGlzIHByb2plY3QuIERvZXMgdGhpcyBwdXJzZSBsb29rIGJldHRlciBpbiBibHVlIG9yIHdoaXRlPyIKUGVyc29uYWxseSBnaXZlbiB0aGUgbmV3IGJ1ZGdldCB5b3Ugb24sIEkgcmVjb21tZW5kIHRoZSAyMjAwRyBvciB0aGUgMjQwMEcgb24gYSBCNDUwIG1vdGhlcmJvYXJkLCBidXQgdGhhdCBhbHNvIHJlcXVpcmVzIGRkcjQgcmFtLCBzbyBJIGRvbiBrbm93IGlmIHRoYXQgaW4gdGhlIGJ1ZGdldCB5ZXQuIFRoZSBpbnRlZ3JhdGVkIGdyYXBoaWNzIG9uIHRob3NlIHdpbGwgYmUgYmV0dGVyIHRoYW4gdGhlIGd0NzMwIGJ5IG1pbGVzLiBTYXZlIHRoZSBhY3R1YWwgR1BVIHVwZ3JhZGUgZm9yIGxhc3QsIGFuZCBhcyB5b3UgcmVwbGFjZSBwYXJ0cywgdHJ5IHRvIHNlZSBpZiB5b3UgY2FuIGdldCBhbnkgbW9uZXkgb2ZmIHRoZW0gYnkgZWl0aGVyIHNlbGxpbmcgdGhlbSB0byBwZW9wbGUgd2hvIGFjdHVhbGx5IHdhbnQgdGhlbSBmb3Igc29tZSByZWFzb24gb3IgYnkgc2VsbGluZyBpdCB0byBzb21lb25lL3NvbWUgY29tcGFueSBmb3IgdGhlIHJhdyBtZXRhbC4gClRoZSBUZXRyaXMgZ3JvdXAgaW1wcm92ZWQgb24gYSBtYXRoIGZsdWVuY3kgdGFzaywgYW5kIGJvdGggZ3JvdXBzIGltcHJvdmVkIG9uIHRoZSBkZWxheWVkIHJlY2FsbCBvZiBhIHN0b3J5IG1lbW9yeSB0YXNrLiBIb3dldmVyLCB0aGUgQXJ0IEFjYWRlbXkgZ3JvdXAgYWxzbyBlbmdhZ2VkIGluIHRoZSBpbnRlcnZlbnRpb24gZm9yIHNpZ25pZmljYW50bHkgbW9yZSBtaW51dGVzIG9mIG92ZXJhbGwgcGxheSB0aW1lIHRoYW4gdGhlIFRldHJpcyBncm91cCwgcG90ZW50aWFsbHkgY29uZm91bmRpbmcgdGhlIHJlc3VsdHMuIFR3byBncm91cHMgd2VyZSBjcmVhdGVkIHZpYSBhIG1lZGlhbiBzcGxpdCBiYXNlZCBvbiB0aGUgZHVyYXRpb24gb2YgZ2FtZXBsYXk6IEhpZ2ggR2FtZXBsYXkgYW5kIExvdyBHYW1lcGxheS4gClRoZSBDbG91ZCBRIEkgaGFkIGEgbG90IG9mIGRpc2FwcG9pbnRlZCBwYXJlbnRzIHRoYXQgaXQgZG9lc24gd29yayBvciBmZWVsIGhvdyB0aGV5IHdlcmUgZXhwZWN0aW5nLiBTYW1lIHdpdGggbW9zdCBvZiB0aGUgQ3liZXggcmVhciBmYWNpbmcgb25seSBzZWF0cy4gVGhlIEF0b25zIGFyZSBzdXBlciBjb21wYWN0LCBidXQgbW9yZSBhbm5veWluZyB0byBpbnN0YWxsIHRoYW4gb3RoZXJzIGFuZCBtdWNoIG11Y2ggc2hvcnRlciBsYXN0aW5nLgpUaGF0IGJlaW5nIHNhaWQsIHRoZSBwcm9jZXNzIGlzIGRpZmZlcmVudCBmb3IgZXZlcnlvbmUuIApHb2QgY29tbXVuaWNhdGVkIHdpdGggbWUgYWZ0ZXIgeWVhcnM7IHdoZW4gR29kIG9mIEFicmFoYW0sIElzYWFjIEphY29iICAgY3JlYXRvciBvZiB0aGUgd2hvbGUgdW5pdmVyc2UsIGFwcG9pbnRlZCBtZSBIaXMgc2VydmFudC4gY2FuIEdvZCdzIGNhbGxpbmcgZm9yIG15IGxpZmUgdW5kZXIgdGhlIHRhYiBvZiBQaG90b3MgYWJvdXQgbWUuIEdvZCBnYXZlIG1lIGFuIGluY3JlZGlibGUgdmlzaW9uIGFib3V0IG5hdHVyYWwgZGlzYXN0ZXIgdGhhdCBvdXIgZWFydGggd2lsbCBmYWNlLiBUaGlzIGlzIGEgVmlzaW9uIHRoYXQgbmVlZHMgdG8gYmUgc2hhcmVkIHdpdGggdGhlIHdob2xlIHdvcmxkLgpUaGUgZHJhZnQgcnVsZSBpcyBhcHBhcmVudGx5IGFpbWVkIGF0IHF1ZWxsaW5nIGEgZmlnaHQgb3ZlciBqYWkgYWxhaSBnYW1lcyBhdCBPY2FsYSBQb2tlciBhbmQgSmFpIEFsYWksIHdoaWNoIGJlZ2FuIGl0cyAyMDEyIHNlYXNvbiB3aXRoIGp1c3QgdHdvIHBsYXllcnMsIGRyYXdpbmcgY29tcGxhaW50cyBmcm9tIHByb2Zlc3Npb25hbCBqYWkgYWxhaSBwbGF5ZXJzLi4gClllcyBzb21lIG90aGVyIGNvaW5zIGFyZSBmYXN0IGFuZCBzY2FsYWJsZS4gClRoZSBhZ2Ugb2YgdGhlIHBlcnNvbiwgdGhlIGxlbmd0aCBvZiB0aW1lIHRoZXkgaGF2ZSBoYWQgdGhlIGNvbmRpdGlvbiBhbmQgd2hhdCBjb25kaXRpb24gdGhlIHBlcnNvbiBpcyBzdWZmZXJpbmcgZnJvbS4gVGhlIG9sZGVyIHRoZSBwZXJzb24gYW5kIHRoZSBsb25nZXIgdGhleSBoYXZlIGhhZCB0aGUgY29uZGl0aW9uIHRoZSBtb3JlIHRyZWF0bWVudHMgdGhhdCB3aWxsIGJlIG5lZWRlZCBiZWZvcmUgdGhlcmUgaXMgYSBub3RpY2VhYmxlIGltcHJvdmVtZW50LCBhbmQgc29tZSBjb25kaXRpb25zIGFyZSBtdWNoIG1vcmUgdHJlYXRhYmxlIHRoYW4gb3RoZXJzLCB0aGVyZWZvcmUgZmV3ZXIgdHJlYXRtZW50cyBhcmUgbmVlZGVkIGZvciBwb3NpdGl2ZSByZXN1bHRzIHRvIGJlIGFjaGlldmVkIC4uIApIZXkgRHVkZQpFaW4gdXJhbHRlciBTcHJ1Y2ggICBhYmVyIGltbWVyIG5vY2ggYWt0dWVsbCEgV2FubiBpbW1lciBTaWUgb25saW5lIFBva2VybiB3b2xsZW4sIHNlaSBlcyBrb3N0ZW5sb3Mgb2RlciB1bSBJaHIgaGFydCB2ZXJkaWVudGVzIEdlbGQgICBtYWNoZW4gU2llIHNpY2ggYmV3dXNzdCwgZGFzcyBTaWUgZGVyIEt1bmRlIHNpbmQuIApJZiB3ZSB3ZXJlIG1vcmUgY29tcGFjdCBhbmQgd2UgYnVpbHQgdXB3YXJkcywgYWxsIHdoaWxlIGltcGxlbWVudGluZyBhIGdyZWF0ZXIgdHJhbnNwb3J0YXRpb24gc3lzdGVtLCB0aGVuIHdlIHdvdWxkIGJlIG1vcmUgc3VzdGFpbmFibGUuIAoiQ291bmNpbCBoYXMgYXBwb2ludGVkIHRocmVlIGJyb2tlcnMgdG8gYWN0IG9uIG91ciBiZWhhbGYuIFdlIGhhdmUgc2VjdXJlZCB0d28gbGljZW5jZXMgYW5kIHdpbGwgY29udGludWUgdG8gcHVyc3VlIG90aGVyIGxpY2VuY2VzIGFzIHRoZXkgYmVjb21lIGF2YWlsYWJsZS4iIERlcHV0eSBtYXlvciBQYXVsIFJhbmtpbiwgd2hvIGlzIG9uIHRoZSBwcm9qZWN0IGNvbnRyb2wgZ3JvdXAgZm9yIHRoZSByZWRldmVsb3BtZW50IHdvcmtzLCBzYWlkIHRoZSBkaWZmaWN1bHR5IGluIG9idGFpbmluZyBtYWNoaW5lcyB3YXMgdGhlIG5lZWQgdG8gYnV5IG1hY2hpbmVzIGluIGJsb2Nrcy4gClRoZWlyIGRlZmluaXRpb24gb2YgZml0bmVzcyBleHBlcmllbmNlIGlzIGEgY29tYmluYXRpb24gb2YgdGhlIGJlc3QgYW1lbml0aWVzIGFuZCBwZXJzb25hbCB0cmFpbmluZy4gCkZyb20gdGhlIGNlbnRlciBvZiB5b3VyIGNoZXN0LCBydWIgYWdhaW4gdG93YXJkIHRoZSBhcm1waXQsIGFuZCB0aGVuIGRvd24geW91ciBuZWNrLiBNYXNzYWdlIHlvdXIgbGVncyBmcm9tIHlvdXIgZmVldCB1cCB0byB0aGUgZ3JvaW4uIApNb3ZpbmcgY3J1ZGUgb2lsIHRvIGEgcmVmaW5lcnksIHRocm91Z2ggYSBwaXBlbGluZSBvciBhY3Jvc3MgYW4gb2NlYW4sIGFuZCBvbiBhIHRydWNrIHRvIHN1cHBseSB0aGUgc3RhdGlvbiBhZGRzIHVwLiAKQSBmcmllbmQgb2YgbWluZSBpcyBmcm9tIEVsIFNhbHZhZG9yICggSSBsaXZlIGluIFN3ZWRlbikgYW5kIGhlIGhhcyBxdWl0ZSBhIHJlbWFya2FibGUgc3RvcnkuIEhlIHdhYXMgbGl2aW5nIHdpdGggaGlzIHBvb3IgZmFtaWx5IGluIGVsIHNhbHZhZG9yIGJ1dCBoZSB3YXMgcmVhbGx5IGdvb2QgYXQgcG9rZXIsIHNvIG9uZSBuaWdodCBoZSBoaXRzIHRoZSBiaWcgbG9jYWwgdG91cm5hbWVudCBhbmQgd2lucyBhIGNvdXBsZSB0aG91c2FuZCBkb2xsYXJzLiBIZSB1c2VzIHRoZSBtb25leSB0byBidXkgYSByZXN0YXVyYW50IGFuZCBlbXBsb3lzIGhpcyB3aG9sZSBmYW1pbHkuIFRoZW4gaGUgbWVldHMgYSBzd2VkaXNoIG1vZGVsIG9uIHZhY2F0aW9uIG9uIHRoZSBiZWFjaCwgdGhleSBmYWxsIGluIGxvdmUgYW5kIGhlIGNvbWVzIHdpdGggaGVyIHRvIFN3ZWRlbi4KUG9pc29uaW5nLiBCaW9mcmVlemUgaXMgbm90IG1lYW50IHRvIGJlIGluZ2VzdGVkIGJ1dCB0byBiZSBhcHBsaWVkIG9uIGFyZWFzIG9mIHRoZSBib2R5IHRoYXQgYXJlIGV4cGVyaWVuY2luZyBwYWluLiBUaGUgbW9zdCBhY3RpdmUgY29tcG9uZW50IG9mIHRoZSBwcm9kdWN0IGlzIG1lbnRob2wsIHdoaWNoIGlzIHRveGljIGVzcGVjaWFsbHkgd2hlbiBzd2FsbG93ZWQgaW4gbGFyZ2UgYW1vdW50cy4gCkF0IHRoZSBsZWFzdCwgdGhpcyBpcyBib3RoIHBhcnR5IGZhdWx0LiBCaW93YXJlIGlzIG5vdCBhYmxlIHRvIGtlZXAgYSBkZXZlbG9wbWVudCBzY2hlZHVsZSB0aGF0IGlzIGNvbXBldGl0aXZlIHdpdGggb3RoZXIgc3R1ZGlvcy4gCkl0IHVuY2xlYXIgd2hlbiB0aGUgbmV3IENoaWVmIG9mIHNhZmV0eSB3aWxsIGhhdmUgc2FmZXR5IHBsYW5zIGNvbXBsZXRlZCBmb3IgZWFjaCBzY2hvb2wgYW5kIHRoZSBkaXN0cmljdCBvZiBhIGNvbmNyZXRlIHBsYW4uIApJZiB0aGF0IHdhc24gZW5vdWdoLCB3ZSBoYXZlIGJvdGggdGhlIFNlbmF0ZSBQcmVzaWRlbnQgUHJvIFRlbSBQaGlsIEJlcmdlciBhbmQgSG91c2UgU3BlYWtlciBUaG9tIFRpbGxpcyBpbiBzdHVkaW8hIFR5cGljYWxseSwgSSBsaWtlIHRvIGhhdmUgYSByZXB1YmxpY2FuIGFuZCBkZW1vY3JhdCB0byBldmVuIG91dCwgaG93ZXZlciB3aXRoIGJyYW5kIG5ldyBsZWFkZXJzaGlwIEkgZmVsdCBpdCB3YXMgaW1wb3J0YW50IHRvIGdldCB0aGUgdG9wIHR3byBsZWFkZXJzIGluIHN0dWRpbyBhcyBzb29uIGFzIHBvc3NpYmxlLiBCZWxpZXZlIG1lLCB3ZSB3aWxsIGhhdmUgcGxlbnR5IG9mIHJlc3BvbnNlIGZyb20gZGVtb2NyYXRzIHRocm91Z2ggdGhlIHNlc3Npb24uIEkgZG9uIHdhbnQgdG8gZ2l2ZSBhd2F5IGFsbCB0aGUgZ29vZCBzdHVmZiBidXQgbGV0IGp1c3Qgc2F5IFNwZWFrZXIgVGlsbGlzIGlzIHZlcnkgY2FuZGlkLiAKTW92aWVzIGFyZSBmdWxsIG9uIHNlbnNvcnkgb3ZlcmxvYWQgYW5kIHRoYXQncyBjb29sLCBidXQgbm90IGFsbCB0aGUgdGltZS4uIApNeSBtb20sIGJsZXNzIGhlciwgb25seSBzYXZlZCAzIDQgdGhpbmdzIGZyb20gd2hlbiBJIHdhcyBhIGJhYnkuIApKYWNvYnMgdQpBcyBhIHJlc3VsdCwgdGhlcmUgaXMgdmVyeSBsaXR0bGUgcG9rZXIgaW4gaXQuIApBbHdheXMgc3BsaXQgOCdzIGFuZCBBY2VzLiAKV2hpbGUgdGhleSBhcmUgY2VydGFpbmx5IGFuIGFkZGljdGl2ZSBzdWJzdGFuY2UsIGhhdmluZyBwaHlzaWNhbCB3aXRoZHJhd2FscyBmcm9tIGNvbWluZyBvZmYgb2YgYSBsb25nIHRlcm0gbWVkaWNhdGlvbiBkb2VzIE5PVCBtZWFuIHRoYXQgYSBwZXJzb24gaXMvd2FzIGFkZGljdGVkLiBJdCBvbmx5IG1lYW5zIHRoYXQgdGhlcmUgd2FzIGEgcGh5c2ljYWwgZGVwZW5kZW5jeSwgd2hpY2ggaGFwcGVucyB3aXRoIGFueSB0eXBlIG9mIGxvbmcgdGVybSBtZWRpY2F0aW9uIGZvciBwcmV0dHkgbXVjaCBhbnkgaWxsbmVzcy4uIApUaGlzIGlzIG5vdCBteSBmaXJzdCByb2RlbyAgIHRoaXMgaXMgbXkgc2Vjb25kIGNhciB0byBnZXQgY2xvc2UgdG8gMjAwayBtaWxlcy4gQnV0LCBJIHdpbGwgc2F5IHRoYXQgdGhlIGxldmVsIG9mIHNlcnZpY2UgSSBoYXZlIGJlZW4gcmVjZWl2aW5nIGhhcyBnb25lIGRvd24gaGlsbCBpbiB0aGUgcGFzdCA1IHllYXJzLiAKTG9vayBhdCBpdCB0aGlzIHdheTogSWYgeW91IHVzZWQgc29tZSB1bnVzdWFsIGphcmdvbiB0aGF0IG5vIG9uZSB1bmRlciAzNSB1c2VzIGluIG5vcm1hbCBjb252ZXJzYXRpb24gYW5kIEkgYWN0ZWQgc2xpZ2h0bHkgZmxhYmJlcmdhc3RlZCBieSBpbml0aWFsIHJlc3BvbnNlLCBzaG91bGQgSSBhc3N1bWUgeW91IGFza2luZyBtZSBpZiBJIGtub3cgd2hhdCB0aGF0IG1lYW5zIHRvIGJlIHNleGlzdCBvciBjb25kZXNjZW5kaW5nPyBPZiBjb3Vyc2Ugbm90LiBNeSByZWFjdGlvbiBpbmZlcnJlZCBJIGhhZG4gYSBjbHVlIHdoYXQgaXQgbWVhbnQuCk5ldmVyIGhhcHBlbmVkIHRvIG1lIHRoby4uIApCdXQgaGUgc29vbiB3b24gZW5vdWdoIHRvIHBheSBjYXNoIGZvciBoaXMgaG91c2UgYW5kIG1hbmFnZWQgdG8gcmVjb25jaWxlIHdpdGggTW9tIGFuZCBEYWQsIHdobyB3ZXJlIGluIExhcyBWZWdhcyB0byBjaGVlciBoaW0gb24uIApKUlBHcyBoYXZlIGFsd2F5cyBiZWVuIG1vcmUgc3RvcnkgZHJpdmVuLCBhbmQgdXN1YWxseSBpbmNsdWRlIHNvbWUgZGVncmVlIG9mIHJvbWFuY2UuIApBIHN0dWR5IGNvbmR1Y3RlZCBieSB0aGUgTWVkaWNhbCBDb2xsZWdlIG9mIEtvcmVhIGluIDIwMTUgcmV2ZWFsZWQgdGhhdCBhbG1vc3QgYSBxdWFydGVyIDIzLiAKVGhpcyBpcyB0cnVlIGV2ZW4gZm9yIHBlb3BsZSB3aG8gaGF2ZSBwYXJ0aWNpcGF0ZWQgaW4gb3RoZXIgdG91cm5hbWVudHMgYmVmb3JlLiAKWW91IHNob3VsZG4ndCBoYXZlIHRvIGNvbnZpbmNlIGhpbSB0byB0cmVhdCB5b3UgcmlnaHQsIGl0IHNob3VsZCBjb21lIG5hdHVyYWxseSB0byBoaW0uCkRvZXMgaGUgdXNlIHRoZSBjb21wdXRlciBsYXRlIGF0IG5pZ2h0IG9yIGZvciBhbiB1bnVzdWFsIGFtb3VudCBvZiB0aW1lPyBDaGVhdGluZyBodXNiYW5kcyBmcmVxdWVudGx5IHV0aWxpemUgZnJlZSBlbWFpbCBzZXJ2aWNlcyBzdWNoIGFzIGhvdG1haWwsIG1zbiwgeWFob28sIGdtYWlsLCBodXNobWFpbCwgZXRjIENoZWNrIGhpcyBpbnRlcm5ldCB3ZWIgYnJvd3NlciBoaXN0b3J5IGZvciB3YXJuaW5nIHNpZ25zLiBJZiB5b3Ugc3VzcGVjdCB5b3VyIGh1c2JhbmQgaXMgY2hlYXRpbmcsIHlvdSBjYW4gaW5zdGFsbCBhIGtleXN0cm9rZSBsb2dnZXIgd2hpY2ggd2lsbCBsb2cgZXZlcnkga2V5c3Ryb2tlIHlvdXIgaHVzYmFuZCB0eXBlcywgaW5jbHVkaW5nIGhpcyBwYXNzd29yZHMuIApBIGxvdCBvZiBvaWwgZmllbGQgY2hlbWljYWxzIGFyZSBidXQgbm90IGFsbCwgYW5kIGEgbG90IG9mIHRoZSBvbmVzIHRoYXQgYXJlIGFyZSBvbmx5IHNhZmUgYmVjYXVzZSB0aGV5IGFzc3VtZSB5b3Ugbm90IGRyZW5jaGVkIGluIHRoZW0uIApJIGp1c3Qgd2FudGVkIHRvIGxldCB5b3Uga25vdyBhYm91dCB0aGlzIHJlY2VudCBvZmZpY2lhbCBwb3N0LiBCYXNpY2FsbHkgdGhleSdyZSB0cnlpbmcgdG8gdGFrZSBzaXR1YXRpb25zIGxpa2UgeW91cnMgbW9yZSBzZXJpb3VzbHkuIEkgd291bGQgcmVwb3J0IGFnYWluIGFuZCBtYWtlIHJlZmVyZW5jZSB0byB0aGlzIGluIGhvcGVzIHNvbWUgcmVhbCBhY3Rpb24gaGFwcGVucy4gClRoZXkgc2VudCB1cyBob21lIGZvciB0aGUgbmlnaHQgYW5kIHNhaWQgdGhleSB0cnkgYW5vdGhlciBtZXRob2QgdGhlIG5leHQgZGF5LiAKT3RoZXJzIGVuam95IHBlcmZvcm1pbmcgaXQgb3IgYWxsb3dpbmcgdGhlbXNlbHZlcyB0byBiZSBwcm9iZWQgaW4gdGhpcyBzcGVjaWFsIHdheS4gCk51bWJlciBhbmQgZHVyYXRpb24gb2YgdHJlYXRtZW50IHNlc3Npb25zIHZhcmllZCBiZXR3ZWVuIHN0dWRpZXMuIApUaGV5IGFyZS4gCkl0IG5vdCBhYm91dCB0aGUgbmF0aW9uYWwgaW50ZXJlc3QgYXQgYWxsLiBVbmxpa2UgU2hhdWthdCBBeml6IHdobyB3aWxsIHByb2JhYmx5IGxhbmQgdXAgaW4gTmV3IFlvcmsgdG8gc2V0IHVwIGEgcHJpdmF0ZSBlcXVpdHkgZnVuZCBvciB3b3JrIGZvciB0aGUgQ2FybHlsZSBHcm91cCBpZiB0aGlzIGRvZXNuIGdvIHdlbGwsIEdlbmVyYWwgTXVzaGFycmFmIGhhcyBubyByZWFsIG1hcmtldGFibGUgc2tpbGxzIGluIHRoZSByZWFsIHdvcmxkLiBUaGUgc3BlY3RyZSBvZiByZXRpcmVtZW50IGNvdWxkbiBiZSB0ZXJyaWJseSBleGNpdGluZyBmb3IgYSBtYW4gd2hvIGhhcyBydWxlZCBhIGNvdW50cnkgb2YgMTYwIG1pbGxpb24gYXMgaGlzIHBlcnNvbmFsIGVzdGF0ZSBmb3IgdGhlIGxhc3QgbmluZSB5ZWFycy4uIApJIG5ldmVyIGJlZW4gdG8gV2lzY29uc2luIGJ1dCBJIGhlYXJkIGdyZWF0IHRoaW5ncywgcGxlYXNlIHRlbGwgbWUgYWxsIHRoZSBiZXN0IHBsYWNlcyB0byBnZXQgY2hlZXNlIGN1cmRzIGFuZCBiZWVyISBBbmQgYW55dGhpbmcgZWxzZSBmdW4geW91IGNhbiB0aGluayBvZiBmb3IgdXMgdG8gZG8gYW5kIHNlZSwgSSBsb3ZlIHRvIGhlYXIgaXQhIFRoYW5rcyBldmVyeW9uZS4KVHdvIG9yIG1vcmUgcGxheWVycyBjb3VsZCBhY3R1YWxseSBiZSBzaGFyaW5nIGluZm9ybWF0aW9uIHdpdGggZWFjaCBvdGhlciBkdXJpbmcgdGhlIGdhbWUgdmlhIHRlbGVwaG9uZSBvciBpbnN0YW50IG1lc3NhZ2luZywgdHJpY2tpbmcgb3RoZXIgcGxheWVycyBpbiB0aGUgaGFuZCB0byBnaXZlIHRoZW1zZWx2ZXMgYW4gdW5mYWlyIGxlYWQgaW4gdGhlIGdhbWUuLiAKRmFjdCBOdW1iZXIgODogQXVzdHJhbGlhJ3MgbGFyZ2VzdCBsYWtlLCBMYWtlIEV5cmUgaXMgbG9jYXRlZCBpbiB0aGUgbWlkZGxlIG9mIHRoZSBkZXNlcnQgYW5kIHJhcmVseSBoYXMgYW55IHdhdGVyIGluIGl0IGF0IGFsbC4KV2hlbiB0aGUgdHdvIG1lbiBhcnJpdmVkIGF0IFRyYXZvbHRhIGhvdGVsIGJ1bmdhbG93LCB0aGUgc3VpdCBhbGxlZ2VzIHRoZSBhY3RvciBiZWdhbiBjYXJlc3NpbmcgdGhlIG1hc3NldXIgbGVnLCBzY3JvdHVtLCBhbmQgcGVuaXMuIFRoZSBzdWl0IHRoZW4gY2xhaW1zIHRoYXQgVHJhdm9sdGEgbWFzdHVyYmF0ZWQgYW5kIG9mZmVyZWQgdG8gZG8gdGhlIHNhbWUgZm9yIHRoZSBtYXNzZXVyLgpJZiB5b3UgZmluZCB0aGF0IHlvdSBub3QgbG9zaW5nIHRoYXQgbXVjaCB3ZWlnaHQsIGhhdmUgeW91IGNvbnNpZGVyZWQgY2FsY3VsYXRpbmcgeW91ciBuZXcgVERFRT8gQXMgd2UgbG9zZSB3ZWlnaHQgYW5kIGdyb3cgZml0dGVyLCBvdXIgYm9kaWVzIHJlcXVpcmUgbGVzcyBhbmQgbGVzcyBjYWxvcmllcyBmb3IgbWFpbnRlbmFuY2UuIFlvdXIgZGlldCBtYXkgaGF2ZSBoZWxwZWQgeW91IHJlYWNoIDIyMCwgYnV0IHlvdSBtYXkgcmVxdWlyZSBhbiB1cGRhdGVkIFRERUUgaW4gb3JkZXIgdG8gZ2V0IHRoZSBuZXcgbnVtYmVyIGFuZCB0aGVuIGdldCB0aGF0ICAyMCUsIG9yICAyNSUgdG8gY29udGludWUgd2VpZ2h0IGxvc3MgYXQgdGhlIHJhdGUgeW91IHdpc2ggdG8gc2VlLiAKV2UganVzdCBnbyBhaGVhZCBhbmQgY2VsZWJyYXRlIGdvb2Qgb2xlIENocmlzIHdobyBhcnJpdmVkIHNvbWV3aGVyZSBpbiB0aGUgQ2FyaWJiZWFuIGFuZCBlbnNsYXZlZCB0aGUgbmF0aXZlcy4uIApUaGVzZSBib29rcyBzaG91bGQgZ2l2ZSB5b3UgYW4gaWRlYSBvZiB0aGUgY29yZSBwcmluY2lwbGVzIGluIHBva2VyLiAKVG8gcmVnaXN0ZXIgbWFrZSBhbiBFU1BOIGFjY291bnQgdGhhbiBnbyB0byB0aGUgaG9tZXBhZ2UgZm9yIEVTUE4gUG9rZXIgQ2x1Yi4gCkFuZCBhIFdldGEgaXMgYSBncmFzc2hvcHBlcj8gICBPZiBjb3Vyc2UgaXQgaXMhISBNeSBvbmx5IHF1aWJibGUgd2FzIHRoZSBjaGVhdCBvZiBkZXNjcmliaW5nIHRoZSBtZXRhbW9ycGhvc2lzIG9mIGEgYnV0dGVyZmx5IGFzIGEgJ21hZ2ljYWwnIHRyYW5zZm9ybWF0aW9uLiAKIDU5IHBvaW50cyAgc3VibWl0dGVkIDIgbW9udGhzIGFnb0J1dCBoZSBpcyB0aGUgUHJlc2lkZW50LiBObyBvbmUgZWxzZSBpcy4gV2hhdCBnb3QgdXMgaW50byB0aGlzIG1lc3Mgd2FzIHRoZSBwcmVzcyB0cmVhdGluZyBoaXMgY2FtcGFpZ24gbGlrZSBhIGJpZyBzcGVjdGFjbGUgc2luY2UgdGhleSBiZWxpZXZlZCBoZSBuZXZlciBoYWQgYSByZWFsIHNob3QgYXQgd2lubmluZy4gKE5vdCB0byBtZW50aW9uIHRoZSByYW1wYW50IHRyZWFzb24gYW5kIGZhaWx1cmUgb2Ygc29jaWFsIG1lZGlhIGNvbXBhbmllcyB0byBmaWx0ZXIvY29tYmF0IGZha2UgbmV3cykuIApGdXJ0aGVyLCB0aGUgInZlcnkgc3RhYmxlIHRlYW0iIGFzc3VtcHRpb24gaXMgcmFyZWx5IHNhdGlzZmllZCBpbiBwcmFjdGljZS4gSXQgaXNuIGNsZWFyIHdoYXQgdGhlICJ2ZWxvY2l0eSIgZXN0aW1hdGlvbiBpcy4gClRha2UgdGhlaXIgbm90aW9uIG9mIHRoZSBGaXJzdCBBbWVuZG1lbnQuIApJZiB0aGF0IGlzIHRoZSBjYXNlIHRoZW4gTHVrYSB3aWxsIGdldCBiZXR0ZXIgaW4gYSBmZXcgYXJlYXMgbmV4dCB5ZWFyIChGVCUsIHNob3Qgc2VsZWN0aW9uLCAzcHQlLCBkZWZlbnNlLCBsb3dlcmluZyBUT3MgYW5kIGZpbmlzaGluZyBhcm91bmQgdGhlIHJpbSBiZWluZyB0aGUgYXJlYXMgSSBjYW4gc2VlIG9mZiB0aGUgdG9wIG9mIG15IGhlYWQpLiAKVGhlc2Ugc29uZ3MgYXJlIGF2YWlsYWJsZSBvbiAiVGhlIEZhbWUsIkdhR2EncyBmaXJzdCBhbGJ1bS4gClN1cmUsIHRvc3NpbmcgYW4gaVBob25lIGluIGEgZ2xhc3Mgd2FzIGZpbmUgaW4gY29sbGVnZSwgYnV0IHRoaXMgcGhvbmUgYW1wIGtpY2tzIGl0IHVwIHNldmVyYWwgbm90Y2hlcy4gVG90YWxseSBjb3JkbGVzcyBhbmQgYmF0dGVyeSBsZXNzLCB0aGUgVGltYnJlZm9uZSBjaGFubmVscyBzb3VuZCB0aHJvdWdoIGEgc3BlY2lhbGx5IGRlc2lnbmVkIGFjb3VzdGljIGNvbmUsIG1lYW5pbmcgaXQgd2lsbCB3b3JrIGp1c3QgYXMgd2VsbCAoYW5kIGxvb2sganVzdCBhcyBnb29kKSBhdCBhIHJ1c3RpYyBjYWJpbiBpbiB0aGUgd29vZHMsIGEgYmVhY2ggYnVuZ2Fsb3csIG9yIGluIHlvdXIgb3duIGhvbWUuIEFscmVhZHkgaGF2ZSBhIHBob25lIGFtcD8gTm8gcHJvYmxlbSEgWW91IGNhbiBuZXZlciBoYXZlIHRvbyBtYW55LCBhbmQgd2UncmUgZ3Vlc3NpbmcgdGhlIG90aGVycyBwcm9iYWJseSBkb24ndCBsb29rIGxpa2UgdGhpcy4uIApPdGhlcndpc2UsIGlmIHRoZSBtb25leSB3YXMgZ29pbmcgdG8gZnVuZCBhbnkgb3ZlcmhlYWQgdGhhdCB3b3VsZCBlYXQgaW50byB0aGUgcmV0dXJuLiAKVGhlIGZlYXIgb2YgbG9zaW5nIHlvdXIgc3RhY2sgY2FuIG1ha2UgaXQgaGFyZCB0byBjb21taXQgd2hlbiB5b3Ugb3VnaHQgdG8sIGJlY2F1c2Ugb2YgdGhlIGZlYXIgb2YgbG9zcy4uIAoiWW91IGRvIGdldCBpbiB0cm91YmxlIGlmIHlvdSBhcmUgYSB3aGl0ZSBwZXJzb24gd2hvIHB1dHMgb24gYmxhY2tmYWNlIGZvciBIYWxsb3dlZW4sIG9yIGEgYmxhY2sgcGVyc29uIHdobyBwdXRzIG9uIHdoaXRlZmFjZSBmb3IgSGFsbG93ZWVuLiAKVGhlcmUgaXMgbm8gc3VjaCB0aGluZyBhcyBhIHN0dXBpZCBxdWVzdGlvbiwgb25seSBzdHVwaWQgYW5zd2Vycy4gCkkgZmxhdCBvdXQgYXNrZWQgaGVyIGlmIGl0IHdhcyBhIGZldGlzaC4gSXQgaXMgbm90IGEgZmV0aXNoLiBTaGUgY29uZmVzc2VkIHRvIHVzaW5nIHRoZSBzb2NrcyBhZnRlciBnb2luZyB0byB0aGUgYmF0aHJvb20uIApXZSBhcmUgZ29kcyBhbmQgc2FjcmlmaWNlcywgYmxlc3NpbmdzLCBhbmQgd2FycyBhcmUgYWxsIGRvbmUgaW4gb3VyIG5hbWVzIGJ5IG1vcnRhbHMgdG8gYXBwZWFzZSB1cy4uIApIYXIgRGlsIEpvIFB5YXIgS2FyZWdhIChIRCkgU2FsbWFuIEtoYW4gLiAKSXRzIHRoZXNlIHR5cGUgb2YgbWljcm8gZXhwcmVzc2lvbnMgYW5kIHN0cmVzc29ycyB3aGljaCBjYW4gaGVscCB5b3UgZGV0ZXJtaW5lIGlmIHNvbWVvbmUgaXMgYmVpbmcgaG9uZXN0IG9yIG5vdC4idG8gZmluZCB0aGF0IGhlIHJlY29yZGVkIGFzIHNheWluZyAiSSBub3QgYSBjcm9vayIgYWZ0ZXIgd2Ugc3BlbnQgYW4gZW50aXJlIGhvdXIgZ29pbmcgb3ZlciB0aGUgYXVkaW8gcmVjb3JkaW5nIGxpc3RlbmluZyB0byB0aGUgdmFyaW91cyBzdHJlc3NvcnMgYW5kIHRoZW4gd2F0Y2hpbmcgdGhlIHZpZGVvIGNsaXAgb2YgaXQ7IHRoZSB2YXJpb3VzIHdheXMgaGUgdXNlcyAiSSBhbmQgIkkgaGF2ZSIgd2hlbiBoZSB0YWxrcyBhYm91dCBwcm9maXRpbmcsIGFuZCB0aGVuIG9ic3RydWN0aW5nIGp1c3RpY2UsIHdlIHNwZW50IGEgbG90IG9mIHRpbWUgaWRlbnRpZnlpbmcgdGhlIHN0cmVzc29ycyBvZiBOaXhvbiBiZWNhdXNlIHRoYXQgc3BlZWNoIHdhcyBhIGdyZWF0IG9uZSB0byBzZWUgdGhlbS4gV2l0aCB0aGF0IHdlIG1vdmVkIG9uIHRvIG90aGVyIHBlb3BsZSB3aXRoIHdoYXQgd2UgbGVhcm5lZC4gSSBnb25uYSBoYXZlIHRvIGdvIGNoZWNrIHRoZSBjbGlwIGJlY2F1c2UgSSBzd2VhciB0byBnb2QgeW91ciB3cm9uZy4gClRoYXQgaXMgdGhlIGV4cGxhbmF0aW9uIHdpdGggdGhlIEdyZWVrIHBvcHVsYXRpb24gYXMgZm9yIGV4YW1wbGUgMS8zIG9mIE1vcmEgd2FzIFR1cmtpc2ggYmFjayBpbiB0aGUgdGltZSBidXQgdG9kYXk/IFNhbWUgZ29lcyBmb3IgQmFsa2Fucywgd2hlcmUgZGlkIHRoZSBUdXJrcyBkaXNhcHBlYXJlZCB0bz8gVXNrdXAsIG9uZSBvZiB0aGUgY2l0aWVzIHByb3ZpZGVkIG1vc3Qgc29sZGllcnMgZm9yIHRoZSBhbmFra2FsZSwgd2hlcmUgaXMgaXQgbm93PyBBcyB5b3Ugc2VlLCB0aGlzIGlzIGEgZ2VuZXJhbCB0cmVuZCBvZiB0aGF0IHRpbWUuIApWZXMgZXQgbWFjaGluZQpBVFRFTlRJT046IGluIHRoaXMgc3RlcCBpcyBpbXBvcnRhbnQgdGhhdCB5b3UgZG93bmxvYWQgYWxsIHRoZSB3YW50ZWQgcHJvZHVjdHMgKGFsbCBhdCBvbmNlLCBnYW1lIGFuZC9vciBETEMsIG1hbnkgZnVsbCBnYW1lcyBhcmUgY29tcG9zZWQgb2Ygc2V2ZXJhbCBmaWxlcyksIGdlbmVyYXRlIGEgImRvd25sb2FkIHF1ZXVlIi4gVGhpcyB3YXkgeW91IHdvbid0IG5lZWQgdG8gYWNjZXNzIHRvIHRoZSBhY2NvdW50IGFnYWluIGluIHRoZSBmdXR1cmUuIApKdXN0IHRvIGdpdmUgeW91IGFuIGlkZWEgb2Ygc29tZSB2YXJpYW5jZXMgaW4gdGhhdCB0aG91Z2ggICBIdW1hbnMgYXJlIGRlc2lnbmVkIHRvIG5vdCBmaW5kIHNoaXQgYXR0cmFjdGl2ZSBiZWNhdXNlIGl0IGlzIGJhZCBmb3IgdXMgdG8gYmUgYXJvdW5kLCBidXQgdGhhdCBkb2VzbiBzdG9wIHBlb3BsZSBmcm9tIGxpa2luZyBiZSBzaGl0IG9uIGR1cmluZyBzZXguIEJ1dCwgZmVjZXMgYXJlIE9CSkVDVElWRUxZIHVuYXR0cmFjdGl2ZSBhbmQgcmVwdWxzaXZlIHJlZ2FyZGxlc3Mgb2Ygb3V0bGllcnMuClNoZSBzdGlsbCBoYXMgbWFueSB5ZWFycyBhaGVhZCBvZiBoZXIgb24gdGhlIGJlbmNoLiAKVGhlIG51bWJlciBvZiBpbmNsdWRlZCBzdHVkaWVzIGRpZmZlcmVkIGJldHdlZW4gdGFibGVzIGFuZCB0ZXh0OyBvbmUgc3R1ZHkgd2FzIGRlc2NyaWJlZCBhcyBib3RoIGEgc2luZ2xlIGFybSBzdHVkeSBhbmQgYW4gUkNULiAKIldlIG5lZWQgYWJvdXQgMjAwIGJ1dCB0aGUgd2F5IGl0IGlzIHNoYXBpbmcgdXAgSSdkIHNheSB3ZSBtaWdodCBiZSBleHRlbmRpbmcgaXQuIFRoZSBwbGFuIHdhcyB0byBoYXZlIDEwMCBtZW4gYW5kIDEwMCB3b21lbi4gQnV0IEknZCBzYXkgd2UgbWlnaHQgaGF2ZSB0byBtYWtlIGl0IGEgYml0IGJpZ2dlciwiIFBvd2VyIHNhaWQuClByZXNpZGVudCwgaXQgaXMgdGltZSB0byBicmluZyBvdXIgdHJvb3BzIGhvbWUuIApBc2lhbiBNYXNzYWdlJ3MgYXBwbGljYXRpb24gZm9yIHRoZSBwZXJtaXQgaW5pdGlhbGx5IGNhbGxlZCB0aGUgYnVzaW5lc3MgVGFpIE1hc3NhZ2Ugd2l0aCBNaWNoYWVsIFNoZXJtYW4gYXMgdGhlIG93bmVyLCBidXQgdGhvc2UgbmFtZXMgbGF0ZXIgd2VyZSBjcm9zc2VkIG91dC4KSWRrIHBlcnNvbmFsbHkgSSB0aGluayBGYWhyZW5oZWl0IG1ha2VzIHdheSBtb3JlIHNlbnNlIGZvciBkYXkgdG8gZGF5IGxpZmUgYW5kIGVzcGVjaWFsbHkgdGFsa2luZyBhYm91dCB0aGUgd2VhdGhlci4gVGhpbmsgYWJvdXQgaXQuIApUaGUgcGVyc29uIHdobyBtYWRlIHRoZSBsYXN0IGJldCAodGhlIG9uZSB3aG8gd2VudCBhbGwgaW4pIGhhcyB0byBzaG93IGhpcyBjYXJkcyBmaXJzdC4gCkFuZCB0aGF0IHdhcyB0ZXJyaWZ5aW5nLiAKZ2FtZSBwb2tlciBwbGF5ZXIgd2hvIHdvbgpSZWQgcmVib290IGluIHBhcnRpY3VsYXIgaXMgZ3Jvc3MgZm9yIHRoaXMgc3RyYXRlZ3kgYmVjYXVzZSBpZiB5b3UgaGl0IHRoZW0gd2l0aCBpdCB5b3Ugb25seSBuZWVkIHRvIHdvcnJ5IGFib3V0IHNwZWxscyBhbmQgbW9uc3RlciBlZmZlY3RzIHdoaWNoIGZlZWwgbGVzcyBkYW5nZXJvdXMgdG8gbWUgcmlnaHQgbm93Li4gCkphbWVzIHdpbGwgYmUgZXNwZWNpYWxseSBtaXNzZWQgYnkgaGlzIHdpZmUsIGZvdXIgY2hpbGRyZW4sIGFuZCB0ZW4gZ3JhbmRjaGlsZHJlbi4gQSBtZW1vcmlhbCBzZXJ2aWNlIGZvciBKYW1lcyBLbm93bGVzIHNoYWxsIGJlIGhlbGQgb24gU2F0dXJkYXksIEp1bHkgMTZ0aCwgMjAxMSBhdCBLbm94IFByZXNieXRlcmlhbiBDaHVyY2gsIDU5MSBTdC4gCllvdSBhbG9uZSBzaGFsbCBiZSBhYmxlIHRvIGRldGVybWluZSB3aGV0aGVyIHlvdXIgY2FyZHMgd291bGQgYmUgYmV0dGVyIG9mZiB3aXRoIGFuIGFjZSB3b3J0aCBvbmUgcG9pbnQgb3IgZWxldmVuLi4gCkxldCBtZSBzcGVsbCB0aGlzIG91dCBmb3IgYW55b25lIHRvbyBkZW5zZSB0byBnZXQgdGhpczogV2l0aGluIHRoZSBzcGFuIG9mIDUgZ2VuZXJhdGlvbnMsIGhlciBmYW1pbHkgd2VudCBmcm9tIGJlaW5nIHNsYXZlcyB0byBoYXZpbmcgTWljaGVsbGUgT2JhbWEgYmVjb21lIHRoZSBGTE9UVVMuIENhbiB5b3UgaW1hZ2luZSwgaGVyIGFuY2VzdG9ycyBsaXZpbmcgaW4gYSB0aW1lIHdoZW4gdGhleSBoYWQgbm8gcmlnaHRzLCBhbmQgd2VyZSB0cmVhdGVkIGhvcnJpZmljYWxseSBiZWluZyB0b2xkIHRoYXQgb25lIGRheSB0aGVpciBncmVhdCwgZ3JlYXQsIGdyZWF0IGdyYW5kZGF1Z2h0ZXIgd291bGQgb25lIGRheSBiZWNvbWUgdGhlIEZpcnN0IExhZHk/Ckxpa2UgRCBkYXkgb3IgbGFuZGluZyBvbiBzb21lIEphcGFuZXNlIGlzbGFuZHMuIApJUEMgcG9wdWxhcml0eSBjYW4gYmUgZ2F1Z2VkIGZyb20gdGhlIGZhY3QgdGhhdCB0aGVyZSB3ZXJlIDI4OSBwbGF5ZXJzIGF0IHRoZSA1SyBXYXJtVXAgKDVLIHN0YW5kaW5nIGZvciB0aGUgUnM1LDAwMCBidXkgaW4gZm9yIHBhcnRpY2lwYW50cykgYXQgdGhlIHRvdXJuYW1lbnQgaGVsZCBpbiBKYW51YXJ5IHRoaXMgeWVhciBhbmQgdGhlIG9yZ2FuaXNlcnMgYXBwYXJlbnRseSBoYWQgdG8gdHVybiBhd2F5IGF0IGxlYXN0IDQwIHBsYXllcnMgZXZlbiB0aGUgMzBLIEJpZyBHYW1lIGF0dHJhY3RlZCBhcyBtYW55IGFzIDIxMiBwbGF5ZXJzLiAiSSBmZWVsIGEgaHVnZSBwb2tlciBib29tIGlzIGNvbWluZyB0byBJbmRpYSwiIHNheXMgQWRpdHlhLCBlY2hvaW5nIGFsbW9zdCBldmVyeW9uZSB3aG8gcGxheXMgdGhlIGdhbWUsIG9yIGZvbGxvd3MgaXQgaW4gSW5kaWEuClRoaXMgd2lsbCB3aW4geW91IGEgbG90IG9mIG1vbmV5LCBob3dldmVyLCB0aGUgc3RyYXRlZ3kgaXMgZXhwbG9pdGFibGUuIFlvdXIgb3Bwb25lbnQgY2FuIGNoYW5nZSBoaXMgbWluZCBhbmQgbm93IGhlIGNob3NlcyBhbHNvIHRvIGZvbGQsIGNhbGwgYW5kIHJhaXNlIGFuZCBub3cgaGUgd2FudHMgdG8gYW5kIGlzIGFibGUgdG8gZXhwbG9pdCB5b3UgYmFjay4gSW4gdGhlIHNob3J0IHJ1biwgd2hpbHN0IHlvdXIgb3Bwb25lbnQgaXNuIGF3YXJlIG9mIGhpcyBob3JyaWJsZSBwbGF5LCBpdCBpcyBtb3JlICtFViB0byBhZG9wdCBhIHN0cmF0ZWd5IHRoYXQgY2FuIGJlIGV4cGxvaXRlZCBpbiB0aGUgZnV0dXJlLiAKVGhlIFVTIGFscmVhZHkgaGFzIGFsbCB0aGUgd2VhcG9ucnkgdGhhdCB0aGUgSU5GIHdvdWxkIGJhbiB0aGUgZGV2ZWxvcG1lbnQgb2YsIHNvIHRoaXMgb2ZmZXJzIHVzIGxpdGVyYWxseSBub3RoaW5nLCB3aGlsZSBhbGxvd2luZyBSdXNzaWEgdG8gZGV2ZWxvcCBwb3dlcmZ1bCBuZXcgd2VhcG9ucyB0byBjaGFsbGVuZ2Ugb3VyIGFsbGllcy4uIApXZW5uIGlociBhbGxlcmRpbmdzIGFsbGUgVm9sbHplaXQgYXJiZWl0ZW4gZ2VodCB1bmQgZGVpbmUgTXV0dGVyIHZpZWxsZWljaHQgbmljaHQgZ2VudWcgYmVpdHJhZ2VuIGthbm4sIGlzdCBlaW4gSGVpbSBpbiBkZXIgTmhlIGJlc3RpbW10IGVpbmUgZ3V0ZSBMc3VuZy4KT24gdGhlIG90aGVyIGhhbmQgYWxwaGEgaW5kaXZpZHVhbHMgYXJlIG9mdGVuIHZlcnkgZWFzaWx5ICJzdWNjZXNzZnVsIiBidXQgdGhleSBnZXQgbG9zdCBpbiB0aGVpciBsaXZlcyBiZWNhdXNlIHRoZXkgZ2V0IHBvc3Nlc3NlZCBieSBzb21lIGV2aWwgc3Bpcml0LiBTbyB0aGV5IGF0dGFpbiBhIHZlcnkgbG93IGxldmVsIG9mIHNlbGYgY29uc2Npb3VzbmVzcy4gIlN1Y2Nlc3NmdWwiIHBlb3BsZSBhcmUgdXN1YWxseSB2ZXJ5IHNlbGYgY2VudGVyZWQgYW5kIGJvcmluZyB0byBiZSB3aXRoLCBwZW9wbGUgd2l0aCBkaXNhYmlsaXRpZXMgY2FuIHRlYWNoIHlvdSBhIGxvdC4uIApUaGUgZmlyc3Qgb25lIGNhbWUgdG8gZGlubmVyIGZvciB5ZWFycyBzdGFydGluZyB3aGVuIEkgd2FzIDE2IGFuZCBzaGUgcmFuZG9tbHkgbWV0IGhpbSBpbiBhIGhvc3BpdGFsIGFmdGVyIG9uZSBvZiBteSBkYWQgc3Ryb2tlcy4gCkluIGEgcmVjZW50IGNsaW5pY2FsIHJldmlldyBvbiBhdXRpc20gYW5kIHZpdGFtaW4gRCwgRHIuIEV2YSBLb2NvdnNrYSBhbmQgY29sbGVhZ3VlcyBmcm9tIHRoZSBVbml2ZXJzaXR5IG9mIEdsYXNnb3cgY2FsbGVkIGZvciAidXJnZW50IHJlc2VhcmNoIiBvbiB2aXRhbWluIEQncyByb2xlIGluIGF1dGlzbS4KU2FnaW5hdyBDb3VudHkgRGlzdHJpY3QgSnVkZ2UgTS4gUmFuZGFsbCBKdXJyZW5zIG1hZGUgdGhhdCBkZWNpc2lvbiBhdCB0aGUgY29uY2x1c2lvbiBvZiBNY0dvd2FuJ3MgcHJlbGltaW5hcnkgaGVhcmluZy4gTWNHb3dhbiwgMjcsIHdhaXZlZCBoaXMgcmlnaHQgdG8gdGhhdCBoZWFyaW5nIGluIEp1bmUsIGJ1dCBhZnRlciByZWNlaXZpbmcgYSBuZXcgYXR0b3JuZXksIGhlIGFza2VkIGluIERlY2VtYmVyIHRvIGhhdmUgaGlzIGNhc2UgcmVtYW5kZWQgZnJvbSBDaXJjdWl0IENvdXJ0IHRvIERpc3RyaWN0IENvdXJ0IGZvciB0aGUgaGVhcmluZy4KQW5kIHRoZSBub3RlIGlzIHdyaXR0ZW4gaW4gc3VjaCBzbWFsbCBsZXR0ZXJzIHRoYXQgdGhleSBjYW4gd3JpdGUgdm9sdW1lcy4gCkluIHRoYXQgbWFubmVyLCBpdCBtYXkgYmUgcG9zc2libGUgZm9yIHRoZW0gdG8gd2luIG92ZXIgc29tZSBoYW5kcyBhbmQgdGhhdCBtaWdodCBvbmx5IGVuZCB1cCBpbiB0dXJuaW5nIHRoZW0gaW50byBsb3NlcnMgb2YgdGhlIGdhbWUuIApJZiBJIGNhbiBzZWUgaXQgY29taW5nIGEgbWlsZSBhd2F5IHRoZSBmaXJzdCB0aW1lIEkgcmVhZCBpdCwgeW91IGRvbmUgc29tZXRoaW5nIHdyb25nLi4gCkkgZG9uIGxpa2UgdGhlIGlkZWEgb2YgYW4gYWR1bHQgaGl0dGluZyBhIGNoaWxkLCBidXQgSSBmZWVsIGxpa2Ugc2hlIHdhcyBqdXN0aWZpZWQgaW4gdGhhdCBtb21lbnQuLiAKQ2F0dG8gaXMgYW4gb3JnYW5pYyBvdXRncm93dGggb2YgRlBMJ3Mgb3ZlcndoZWxtaW5nIHRhY3RpY2FsIGNob2ljZXMuIFNoZSBpcyBhIHBzeWNob2xvZ2ljYWwgYmFsbSB0aGF0IGFsbG93cyBjb25mdXNlZCBwbGF5ZXJzIHRvIG9mZmxvYWQgdGhlIHN0cmVzcyBvZiBzdHJhdGVnaWMgZGVjaXNpb24gbWFraW5nLgpTbWFydCBwZW9wbGUgY2FuLCBhbmQgZG8sIGVudGlyZSBqb2JzIGZpZ3VyaW5nIG91dCAiY2xlYW5pbmcgc29sdXRpb25zIiBhbmQgd2hhdG5vdC4gRXZlbiAicmVndWxhciIgbW9wIGJ1Y2tldHMgYXJlIG1vbGRlZCB3aXRoICJ3YXZlIGJyYWtlcyIgdG8gcHJldmVudCBzbG9wb3Zlciwgc3VnZ2VzdGluZyBhIG5vdGFibGUgbGV2ZWwgb2YgcHJvZHVjdCByZWZpbmVtZW50Li4gClRoZSB2YXN0IG1ham9yaXR5IG9mIGNvbXBldGl0b3JzIGFyZSByYXcgb25seSBsaWZ0ZXJzLCBzbyBJIHN1cmUgdGhleSBjb21wZXRlIHJhdy4gRm9yIHRoZSBmZXcgdGhhdCBhcmUgZXF1aXBwZWQgbGlmdGVycywgSSBoaWdobHkgZG91YnQgdGhleSBiZSB1c2luZyB0aGVpciBmdWxsIGNvbXBldGl0aW9uIHRpZ2h0IGdlYXIuIFRoZXkgZWl0aGVyIGdvIHdpdGggYSBsb29zZXIgc3VpdCB0aGF0IGxldHMgdGhlbSBoaXQgZGVwdGggZWFzaWVyIG9yIGp1c3Qga25lZSB3cmFwcyB0byBnaXZlIHRoZW0gYSBzbGlnaHQgYm9vc3QuIExpZnRlcnMgbGlrZSBMYXJhIFN0dXJtIGFuZCBNaWtlIEt1aG5zIGFyZSB3b3JsZCBjaGFtcGlvbnMgaW4gZ2VhcjsgSSBzdXJlIHRoZXkgZmlndXJlZCBvdXQgd2hhdCB0aGV5IGNhbiBwdXQgb24gdG8gaGl0IGRlcHRoIGluIHRoZSBnZWFyIHRoZXkgZ29pbmcgdG8gdXNlLgpCdXQgdHJ1c3Qgb25lIG1hbiB0byBleGN1c2UgYW5vdGhlci4gClRoZSBJbmRpYW5hcG9saXMgYmFzZWQgaW5kZXBlbmRlbnQgY3JlYXRpdmUgc2hvcCBrZWVwcyB0aGUgbWluZHMgYW5kIGJvZGllcyBvZiBpdHMgc3RhZmYgaGVhbHRoeSB3aXRoIHNob3dlciBhbmQgbG9ja2VyIGZhY2lsaXRpZXMsIGJpa2UgcmFja3MsIHlvZ2EgY2xhc3NlcyBhbmQgZXZlbiBhICJxdWlldCByb29tIiBmb3IgbWVkaXRhdGlvbiwgcHJheWVyIG9yIGp1c3QgYSBtZW50YWwgYnJlYWsuIEF0IGEgdGltZSB3aGVuIHdvbWVuIGFyZSB1bmRlcnJlcHJlc2VudGVkIGluIHRoZSBpbmR1c3RyeSwgaGFsZiBvZiBZb3VuZyBMYXJhbW9yZSdzIDUwIHN0YWZmZXJzIGFyZSBmZW1hbGUuIFRvIGtlZXAgZW1wbG95ZWVzIGluc3BpcmVkLCB0aGUgc2hvcCBvZmZlcnMgZXZlcnkgc3RhZmZlciAkMTAwIHBlciB5ZWFyIGZvciBhbiBhY3Rpdml0eSBvciBwdXJjaGFzZSB0aGF0IHNwYXJrcyBoaXMgb3IgaGVyIGNyZWF0aXZpdHkuIE9uICJCZWVyIFRodXJzZGF5cywiIHRoZSBzdGFmZiBjb21lcyB0b2dldGhlciB0byByZXZpZXcgcmVjZW50IHdvcmsgYW5kIGRyaW5rIHNvbWUgc3Vkcy4gVGhlIGNvbXBhbnkncyBvcmdhbmljIG9mZmljZSBnYXJkZW4gYW5kIGdyZWVuIHdhbGwgY292ZXJlZCB3aXRoIHBvdHRlZCBwbGFudHMgYXJlbid0IGJhZCB0b3VjaGVzIGVpdGhlci4KU3Rhcm9zc2kgICAyIHBvaW50cyAgc3VibWl0dGVkIDE0IGhvdXJzIGFnbwpBbHNvIG1ldCBzb21lIHJlYWxseSBncmVhdCBvbmVzIGJlY2F1c2UgdGhleSBkaWQgdGVhbSBhY3Rpdml0aWVzIGFuZCB0aGUgbGlrZS4uIApNZWRpY2FsIG1hbmV1dmVycyBhcmUgdXN1YWxseSByZXNlcnZlZCBmb3IgdGhvc2Ugd2l0aCBwZXJzaXN0ZW50IG9yIGludHJhY3RhYmxlIGhpY2N1cHMuIFRhcHBpbmcgb3IgcnViYmluZyB0aGUgYmFjayBvZiB0aGUgbmVjaywgbWFzc2FnaW5nIHRoZSBjYXJvdGlkIHNpbnVzIChhbiBhcnRlcnkgaW4gdGhlIG5lY2spLCBhbmQgYXBwbHlpbmcgcHJlc3N1cmUgdG8gdGhlIGV5ZWJhbGwgY2FuIHN0aW11bGF0ZSB0aGUgbmVydmVzIG9mIHRoZSBkaWFwaHJhZ20uIApQcm8gcG9rZXIgaXMgbm90IHdoYXQgeW91IHRoaW5rIGl0IGlzLiBJdCBub3QgbW9uZXksIGZhbWUsIGV0Yy4gSXQgZ3JpbmRpbmcuIEl0IHRvbnMgb2YgaG91cnMuIElmIHlvdSBzdGFydCBmcm9tIGp1c3QgYSBiYXNlbGluZSBsZXZlbCBvZiBwb2tlciBrbm93bGVkZ2UsIG9yIHBsYXllZCBpbiB0aGUgcGFzdCwgaG93IG11Y2ggdGltZSB3b3VsZCBpdCB0YWtlIHN0dWR5aW5nIHRvIGdldCB0byB0aGUgcG9pbnQgb2YgcHJvZml0YWJpbGl0eSBhbmQgdGhlbiBwbGF5aW5nIHRvIG1ha2UgYXMgbXVjaCBtb25leSBpZiB5b3UgaGFkIGp1c3QgYmVlbiB3b3JraW5nIGF0IE1jRG9uYWxkcyB0aGUgd2hvbGUgdGltZT8gT2J2aW91c2x5IGhhcmQgdG8ga25vdyBleGFjdGx5IGJ1dCBJIGd1ZXNzIGFib3V0IHRocmVlIHllYXJzIHdvdWxkIGJlIGEgZ29vZCBvdXRjb21lLiBJdCBjb3VsZCBwb3NzaWJseSBiZSB0d28sIGJ1dCBhbnlvbmUgd2hvIHNheXMgYW55dGhpbmcgbGVzcyBpcyBjZXJ0YWlubHkgd3JvbmcgaW1vLiBBbmQgSSBmaW5kIHR3byBwcmV0dHkgaGFyZCB0byBiZWxpZXZlLiBUaGlzIGFsc28gcmVsaWVzIG9uIHRoZSBpbXBsaWNpdCBhc3N1bXB0aW9uIHRoYXQgdHJ1bHkgdW5iZWF0YWJsZSBib3RzIHdvbiBiZSBjcmVhdGVkIGluIHRoYXQgdGltZSBkZXN0cm95aW5nIHRoZSBlY29zeXN0ZW0sIHdoaWNoIG5vIG9uZSBjYW4ga25vdyBmb3Igc3VyZS4gQW5kIHRoaXMgY29tcGFyaXNvbiBnZXRzIGV2ZW4gd29yc2UgaWYgeW91IHJlcGxhY2UgTWNEb25hbGRzIGpvYiB3aXRoIGEgam9iIGVhcm5pbmcgJDIwIG9yIGV2ZW4gJDE1IGFuIGhvdXIuClRoaXMgc3VicmVkZGl0IGlzIGFjdGl2ZWx5IG1vZGVyYXRlZC4gQ2FsbHMgcmVnYXJkaW5nIHJ1bGVzIGVuZm9yY2VtZW50LCBwb3N0IHJlbW92YWwgYW5kIGludGVycHJldGF0aW9uIG9mIHRoZSBydWxlcyB1bHRpbWF0ZWx5IGNvbWUgZG93biB0byBtb2RlcmF0b3IgZGlzY3JldGlvbi4gRGlzYWdyZWVtZW50cyBzaG91bGQgYmUgYnJvdWdodCB0byB0aGUgdGVhbSB2aWEgbW9kbWFpbC4gVGhpcyBzaWRlYmFyIGV4aXN0cyBhcyBhIHBvaW50IG9mIHJlZmVyZW5jZSBmb3IgdGhlIGV4cGVjdGF0aW9ucyBvZiBjb25kdWN0IGZvciB0aG9zZSBwYXJ0aWNpcGF0aW5nIGluIHRoaXMgY29tbXVuaXR5LCBidXQgdGhlIG1vZGVyYXRpb24gdGVhbSBoYXZlIHRoZSBmaW5hbCB3b3JkIG9uIGVuZm9yY2VtZW50IG9yIGltcGxlbWVudGF0aW9uIG9mIHRoZSBwb2xpY2llcyBhbmQgZ3VpZGVsaW5lcyBwcmVzZW50ZWQgaGVyZS4KTWFuLCBJIHdvdWxkbiBiZSBzbyB3b3JyaWVkIGFib3V0IGl0LiBOaW50ZW5kbyB3aWxsIGJlIGZpbmUsIGV2ZW4gaWYgdGhlIFdpaVUgZG9lc24gcGFuIG91dC4gClRoaXMgaXMgbm90IGV2ZW4gY2xvc2UgdG8gY29ycmVjdCwgd2hvZXZlciB0eXBlZCB0aGlzIGlzIG5vdCBzbWFydCBvciBzaW1wbHkgZG9lcyBub3Qga25vdyBwb2tlciBydWxlcy4gVGhpcyBpcyB0aGUgaGFuZCBXaWxkIEJpbGwgSGlja29rIHdhcyBob2xkaW5nIGF0IHRoZSB0aW1lIG9mIGhpcyBtdXJkZXIgb24gOC8yLzE4NzYuLiAKSGVyZSB0aGUgZmVlZGJhY2sgdGhyZWFkIHdlIHJhbiBmb3IgdGhpcyByb3VuZCB2b3RlIHRoZSBvcHRpb25zIGZvciB0aGUgcG9sbCBjYW1lIGZyb20gdGhhdCB0aHJlYWQhSSBmZWx0IGxpa2UgdGhpcyB2b3Rpbmcgc2hvdWxkIGhhdmUgYmVlbiBoZWxkIGFmdGVyIHRoZSBHZW5lcmF0aW9uIDggZ2FtZXMgd2VyZSBhbm5vdW5jZWQgd2hlbiBtb3JlIHBlb3BsZSBhcmUgdmlzaXRpbmcgYW5kIHBheWluZyBhdHRlbnRpb24uIFJpZ2h0IG5vdyB3ZSBpbiBhIGRyb3VnaHQgYW5kIHRoZSBzdWIgdmlzaXRzIHZzIHN1YnNjcmliZXJzIG51bWJlcnMgc2hvdyB0aGF0LlRoZSByZWFzb24gd2UgZGlkIGl0IHdoZW4gd2UgZGlkIHdhcyB0byB0cnkgYW5kIGVzdGFibGlzaCBhIHBhdHRlcm4gd2l0aCBwcmV2aW91cyB5ZWFycywgd2hlbiB3ZSBoZWxkIHZvdGVzIGluIG1pZHdpbnRlci4gCk15IG1vdGhlciB3YXMgdGFrZW4gaW4gYnkgYSBNb3Jtb24gZmFtaWx5LiAKV2hpbGUgZWFjaCBob2xkIHRoZWlyIG93biBpbiB0aGUgY2FzaW5vIHdvcmxkLCB3ZSBmb3VuZCBzb21ldGhpbmcgd2l0aCBhIGxpdHRsZSBtb3JlIHN0eWxlLiAKU28gd2UgZ2V0IHRvIHRoaXMgb25lIGtpZCBhbmQgaGUncyBhc2tlZCBmb3IgYW4gZXhhbXBsZSBvZiBhbiBlbW90aW9uLiAKTXkgbW90aGVyIHRha2VzIGluc2FuZSBvZmZlbmNlIHRvIG1lIGRvaW5nIGFueXRoaW5nIGRpZmZlcmVudCB0byBob3cgc2hlIGRpZCBpdC4gCkhhdWxlcnMgaGF2ZSBhIG1peCBvZiBib251c2VzLiBJZiB5b3UgYXJlIHdpbGluZyB0byBnaXZlIHVwIGNhcmdvIHNwYWNlIHRoZXkgY2FuIGJlIHZlcnkgdmVyc2F0aWxlLCBidXQgbWFueSBwbGF5ZXJzIHdhbnQgdGhlbSBmb3IgdGhlaXIgY2FycnlpbmcgY2FwYWNpdHksIGFuZCB0aGF0IG1lYW5zIGtlZXBpbmcgb3BlbiBzbG90cy4gClRVQkJCICA2IHBvaW50cyAgc3VibWl0dGVkIDYgbW9udGhzIGFnbwoiV2UgcHJvbWlzZWQgdGhhdCB3ZSB3b3VsZCBwdXQgbW9yZSBwZW9wbGUgb24gdGhlIGZyb250IGxpbmUgaW4gaGVhbHRoIGNhcmUgc2VydmljZXMsIGFuZCB0aGF0J3Mgd2hhdCB3ZSBpbnRlbmQgdG8gZG8gc28gdGhhdCB0aGVyZSBhcmUgcGVvcGxlIHdobyBhcmUgd29ya2luZyBpbiB0aGUgTEhJTnMsIGZvciBleGFtcGxlLCByaWdodCBub3cgd2hvIHByb3ZpZGUgd29uZGVyZnVsIGhvbWUgY2FyZSwiIEVsbGlvdHQgc2FpZC4gIldlIHdpbGwgc3RpbGwgbmVlZCB0aGVtLiAKVGhlcmUgaXMgYSByZWFzb24gdGhleSBJQ08gZnJvbSBTaW5nYXBvcmUgYW5kIG5vdCBpbiBDaGluYSBhbmQgYmxhY2tsaXN0ZWQgVVNBL0NoaW5hL1NpbmdhcG9yZS4gCkkgc2F5IHRoaXMgYmVjYXVzZSB5b3UgYXJlIHJpZGluZyBhYm91dCBhcnQgbG93IHNwZWVkcyBhbmQgZmFtaWxpYXJpemluZyB5b3Vyc2VsZiB3aXRoIHRoZSBiaWdnZXIgYmlrZXMgZXJnb25vbWljcy4gClRoZXJlIGFyZSBvdGhlcnMgbGlrZSB5b3UgYW5kIHlvdSBuZWVkIHRvIGdvIGdldCBwcm9mZXNzaW9uYWwgaGVscC4gCk1pbmVycyBmbG9vZGluZyBpbnRvIGEgdG93biBpbiBob3BlcyBvZiBzdHJpa2luZyBpdCByaWNoLCBhbmQgZ2FtYmxlcnMgdGFraW5nIGNoYW5jZXMgYWx3YXlzIGZvciBtb25leS4gCkkgd3JpdHRlbiBoZXJlIGJlZm9yZSBhYm91dCB0aGUgZWFybHkgaW5jdXJzaW9uIG9mIHRlY2hub2xvZ3kgaW50byB0aGUgc3BoZXJlcyBvZiBodW1hbiBjcmVhdGl2aXR5IGFuZCBpbWFnaW5hdGlvbi4gTm93LCBzb21lIG9mIHRob3NlIGJpdHMgaGF2ZSBzdHJldGNoZWQgdGhlIGlkZWEgYSBsaXR0bGUsIGJ1dCB3aGVuIHBlb3BsZSAob3IgT3VyIEZ1dHVyZSBSb2JvdCBPdmVybG9yZHMpIGxvb2sgYmFjayBpbnRvIHRoZSBkaW0gZHVzdCB0aGV5IG1heSBiZSBtb3JlIHByZXBhcmVkIHRvIGFjY2VwdCBzb21lIG9mIHByb3Bvc2l0aW9ucyBvZiB0aGVzZSBwb3N0cyBhcyBwcmUgaGlzdG9yeSBpbXBsaWNhdGlvbnMgb2YgdGhlIGZ1dHVyZSBkb21pbmF0aW9uIG9mIHNvbWV0aGluZyBhbG9uZyB0aGUgbGluZXMgb2YgQUkgb3IgdW5pdmVyc2FsIGludGVsbGlnZW5jZS4gCkluc2lkZSB0aGUgd2Fja3kgd29ybGQgb2YgVGhvbWFzIEdyYXZlc2VuCldoaWNoIGRvZXMgbm90aGluZyBwcm9kdWN0aXZlLi4gCkNyb2NrZm9yZCB3YXNuIGVpdGhlci4gCkltYWdpbmUgd2Fsa2luZyBpbnRvIEJlc3QgQnV5IGFuZCBzZWUgYSAkMzAwIGVsZWN0cm9uaWMgZnJvbSBhIGJyYW5kIGxpa2UgU29ueSAsIFNhbXN1bmcoIGJlZW4gYXJvdW5kIGZvcmV2ZXIgKSBhbmQgZm9yIGFyZ3VtZW50cyBzYWtlIHRoZXkgaGF2ZSBtYXliZSA1MDAgcmV2aWV3cyAuIApJdCBhbGwgc3RhcnRlZCBsYXN0IGF1dHVtbiB3aGVuIEthdGllIFdhbGRlZ3JhdmUsIGEgc29jaWFsIGVudHJlcHJlbmV1ciwgYW5kIEkgc2V0IHVwIE5vdyBUZWFjaC4gCjEpIEEgZnVsbCBtYXJhdGhvbiBpc24ganVzdCB0d2ljZSB0aGUgZGlzdGFuY2Ugb2YgYSBoYWxmIG1hcmF0aG9uLiBJdCBmYXIgaGFyZGVyIHRoYW4gYSBoYWxmIG1hcmF0aG9uLiBPbiByYWNlIGRheSwgdGhlIGZpcnN0IDIwIG1pbGVzIHdpbGwgYmUgImVhc3kuIiBUaGUgbGFzdCA2LjIgbWlsZXMgd2lsbCBiZSBoYXJkLgpEaXJ0eVByYW5jaW4gIFtzY29yZSBoaWRkZW5dICBzdWJtaXR0ZWQgMjQgbWludXRlcyBhZ28KV2l0aCBhbiBleWUgd2F0ZXJpbmcgJDMwLDAwMCBwcmljZSB0YWcsIHRoZSBMQkYgNzUwIG9vemVzIGx1eHVyeS4gVHVybmluZyBpdCBvbiwgeW91IGFyZSBncmVldGVkIHdpdGggdGhlIHJvYXIgb2YgYW4gZW5naW5lLiAKVGhhdCBhIHByZXR0eSByb3VuZGFib3V0IHdheSBvZiBtYWtpbmcgeW91ciBwb2ludC4gQXMgZmFyIGFzIGVmZmljYWN5IGdvZXMsIHRoZSBFTEYgaGFzbiBtYWRlIG11Y2ggaGVhZHdheSBhZnRlciBvdmVyIGEgZGVjYWRlIG9mIGFyc29uIGFuZCBib21iaW5ncywgYW5kIEkgZG9uIHRoaW5rIGFueW9uZSBzaWduZWQgb250byB0aGUgVW5hbWJvbWJlciBtYW5pZmVzdG8uCkRlciBFZGVuIFBhbGFzdCBpc3QgZWluIHNlaHIga2xlaW5lcywga3VzY2hlbGlnZXMgd29obGZobCBLaW5vICA+IGFsc28gZXZ0bC4gR2VyYWRlIGZyIE5ldWFua29tbWVyIHRvbGwuIEljaCB3ZWkgamEgbmljaHQgd29mciBkZWluZSBGcmV1bmRpbiBuYWNoIGhpZXIgemllaHQsIGFiZXIgZmFsbHMgc2llIGhpZXIgc3R1ZGllcmVuIHdpcmQ6IGRhcyBBcG9sbG8gaXN0IG1pdHRlbiBpbSBTdHVkZW50ZW52aWVydGVsIHVuZCBzb21pdCBkYXMgIlN0dWRlbnRlbiBLaW5vIi4gCjIgZGF5cyBhZ28gLiAKVmVyeSByZWxheGluZy4gClRoZW4gdGhlIG9ubHkgY29tbW9uIGRlbm9taW5hdG9yIGhlcmUgaXMgeW91ciBkYXRpbmcsIGZsaXJ0aW5nLCBhbmQgcmVsYXRpb25zaGlwIHNraWxscy4gSnVzdCBsaWtlIGxlYXJuaW5nIHRvIGZseSBhbiBhaXJwbGFuZSwgeW91IG5lZWQgdG8gbGVhcm4gaG93IHRvIGRvIGl0LiBObyB3b21hbiB3aWxsIGRhdGUgeW91IGJlY2F1c2UgaXQgb2J2aW91cyB5b3UgZG9uZSBub3RoaW5nIHRvIGltcHJvdmUgeW91ciByZWxhdGlvbnNoaXAgc2tpbGxzLiBBbmQgdG8gdGhhdCBwb2ludCwgeW91IG5lZWQgdG8gZW1icmFjZSB0aGUgZmFjdCB0aGF0IGV2ZXJ5dGhpbmcgeW91IGFyZSBkb2luZyBpcyB3cm9uZyBhbmQgeW91IG11c3QgZW1icmFjZSBuZXcgaWRlYXMgdGhhdCBjaGFsbGVuZ2UgeW91ciBjb3JlIGJlbGllZnMsIHRoYXQgc2VlbSBiYWNrd2FyZHMsIHRoYXQgc2VlbSBjcmF6eS4KV2hlbiB0aGVzZSBzdGF0ZW1lbnRzIGFyZSBtYWRlIGluIG5ld3NwYXBlciByZXBvcnRzLCBpdCBpcyB1c3VhbGx5IGltcGxpZWQgdGhhdCB0aGVyZSBvdWdodCB0byBiZSBzb21lIHdheSBpbiB3aGljaCBhbGwgdGhlIG1hc3Mgb2YgYSBudWNsZXVzIGNvdWxkIGJlIGNvbnZlcnRlZCBpbnRvIGVuZXJneSwgYW5kIHRoYXQgd2UgYXJlIG1lcmVseSB3YWl0aW5nIGZvciB0ZWNobmljYWwgZGV2ZWxvcG1lbnRzIHRvIG1ha2UgdGhpcyBwcmFjdGljYWwuIApHaXp6bGVkb3MgIDQgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KSSB0aGVuIGhhZCB0byB3YXRjaCBhcyB0aGV5IHNsb3dseSByZXZpdmVkIGJvdGggdGhlaXIgdGVhbW1hdGVzIGFuZCBoZWFsIHVwIHdoaWxlIG15IHNxdWFkIHJlZnVzZWQgdG8gdHJ5IGFuZCBydXNoIHRoZW0gd2hpbGUgdGhleSB3ZXJlIHZ1bG5lcmFibGUuIApBbm90aGVyIHBvcHVsYXIgY2hvaWNlIGlzIHRoZSBRdWVlbiBvZiBIZWFydHMuIFRoaXMgdGF0dG9vIGlzIHBvcHVsYXIgYW1vbmcgd29tZW4gYW5kIGNhbiByZXByZXNlbnQgYSBmZXcgZGlmZmVyZW50IHRoaW5ncy4gVGhlIFF1ZWVuIG9mIEhlYXJ0cyBpcyBvZnRlbiBhc3NvY2lhdGVkIHdpdGggQWxpY2UgaW4gV29uZGVybGFuZC4gSWYgeW91IGhhdmUgZXZlciB3YXRjaGVkIHRoZSBtb3ZpZSwgeW91IG1heSByZWNhbGwgc2VlaW5nIHRoaXMgY2FyZC4gRHVlIHRvIHRoaXMsIHRoZSBRdWVlbiBvZiBIZWFydHMgdGF0dG9vIGNhbiBzeW1ib2xpemUgZGV0ZXJtaW5hdGlvbiwgcGVyc2V2ZXJhbmNlLCBhbmQgdGhlIHdpbGwgdG8gc3Vydml2ZS4gU29tZSBwZW9wbGUgbGluayB0aGUgUXVlZW4gb2YgSGVhcnRzIHRvIGxvdmUuCiJUaGUgTUdDQiB3YW50cyBjaGFyaXRpZXMgdG8gcmVjZWl2ZSBhIGZhaXIgZGVhbCB3aGVuIHRoZXkgc3BvbnNvciBhIG1pbGxpb25haXJlIHBhcnR5IGF0IGEgcG9rZXIgcm9vbSwiIEJlYW4gc2FpZC4gCkkgbWFzdHVyYmF0ZWQgYnV0IGl0IGVuZGVkIGJhZGx5IGFuZCBJIGRpZG4ndCBlbmpveSBpdC4gSSBmZWx0IHNoYW1lZnVsLCBJIGZlbHQgZGlydHksIEkgZmVsdCBldmVyeXRoaW5nIHRlcnJpYmxlIGFuZCBpbW1lZGlhdGVseSB0aWVkIHRoaXMgdG8gbXkgc2VsZiB3b3J0aC4gSXQgdG9vayBteSBodXNiYW5kIHllYXJzIG9mIHBhdGllbmNlIHRvIGdldCBtZSB0byBmaW5hbGx5IG1hc3R1cmJhdGUuIApEZWVwIHRpc3N1ZSBtYXNzYWdlIGNhbiBiZSBlbmpveWVkIGJ5IGFueW9uZSB3aXNoaW5nIHRvIGxvb3NlbiB0aWdodCBtdXNjbGUgdGlzc3VlcywgaW1wcm92ZSBwb3N0dXJlIGFuZCBpbmNyZWFzZSBlbmVyZ3kgbGV2ZWxzLgpQdWlzLCBub3VzIGF2aW9ucyBwYXJ0aWNpcCAgbGEgcnVuaW9uIHNjdXJpdCBlbiBtYWlyaWUgZHUgMThlIGVuIHByc2VuY2UgZHUgcHJmZXQgbGUgMTggZGNlbWJyZS4gTGUgMjAsIGlsIHMnYWdpc3NhaXQgZGUgZmFpcmUgdW4gZGVybmllciBwb2ludCBhdmFudCAyMDE4IGF2ZWMgbGVzIGFzc29jaWF0aW9ucyBBY3Rpb24gQmFyYnMsIFNvcyBMYSBDaGFwZWxsZSwgRGVtYWluIExhIENoYXBlbGxlLCBMYSBWaWUgRGVqZWFuIGV0IGxlIGNvbGxlY3RpZiBkdSBib3VsZXZhcmQgQmFyYnMuLiAKU28gZm9yIGEgYnJpZWYgc2Vjb25kIGFzIEkgbGF5IG9uIHRoZSBiZWFjaCBvbiBNYXJ0aGEgVmluZXlhcmQgYW5kIGxpc3RlbmVkIHRvIE5ldyBZb3JrIGFuZCBMQSBlbGl0ZXMgZGlzY3VzcyBDaGVsc2VhIENsaW50b24gd2VkZGluZyBwbGFucywgSSBmZWx0IGEgcGFuZyBvZiBjbGFzcyBzb2xpZGFyaXR5IHdpdGggUGFsaW4uIEkgaGFkIGJlZW4gbHVja3kgZW5vdWdoIHRvIGdvIHRvIHRoZSByaWdodCBzY2hvb2xzIHdoaWNoIGxlZCB0byBrbm93aW5nIHRoZSByaWdodCBwZW9wbGUgd2hpY2ggbGVkIHRvIGEgbGlmZSB3aGVyZSBnb2luZyB0byB0aGUgVmluZXlhcmQgYW5kIGhhbmdpbmcgb3V0IHdpdGggdGhlIHBlb3BsZSB3aG8gY29udHJvbCBzdGF0ZSBhbmQgY3VsdHVyZSBpcyBub3QgdGhhdCB1bnVzdWFsLiAKTWFkIE1lbiBzdGFuZCBkb3duOiBUaGUgbGF3IHByb2hpYml0cyBhZHZlcnRpc2luZyBtYXJpanVhbmEgb3IgZG9pbmcgYW55dGhpbmcgdG8gZW50aWNlIG9yIHByb21vdGUgaXRzIHVzZSBhbW9uZyB5b3VuZyBwZW9wbGUuIApJIGRvbiBoYXRlIGEgc2hvdmUgb24gdGhlIHJpdmVyICAgdGhhdCBsaW5lIGFsbW9zdCBsb29rcyBsaWtlIHlvdSB3ZXJlIHdhaXRpbmcgZm9yIGhpbSB0byBnZXQgYSBoYW5kIGFuZCBnb2luZyBmb3IgdmFsdWUsIG9yIGV2ZW4ganVzdCBzcGlraW5nIGEgZm91ciBmbHVzaCB3aXRoIHRoZSBLcy4gCkJ1dCBjcml0aWNzIG9mIHRoZSBBYmVub21pY3Mgc3RyYXRlZ3kgcXVlc3Rpb24gd2hldGhlciBjb25zdW1lcnMsIHdob3NlIHB1cmNoYXNpbmcgcG93ZXIgYW5kIHJlYWwgd2FnZXMgYWxzbyBoYXZlIGJlZW4gZGVjbGluaW5nIGZvciBtb3JlIHRoYW4gdHdvIGRlY2FkZXMsIGFyZSByZWFsbHkgd2lsbGluZyBvciBldmVuIGFibGUgdG8gY2hhbmdlIHRoZWlyIGJlaGF2aW9yIGFuZCBiZWdpbiBzcGVuZGluZyBtb3JlLiAKVGhlICJtYWluc3RyZWFtIG1lZGlhIiBpbiB0aGUgVVMgaXMgaHVnZSBhbmQgdGhlIG9wcG9zaXRlIG9mIG1vbm9saXRoaWMuIApNciBBbGVyZ2ljdG90aGVDb2xkICAyIHBvaW50cyAgc3VibWl0dGVkIDUgZGF5cyBhZ28KSSd2ZSBhc2tlZCB0aGlzIGJlZm9yZSBhbmQgSSdsbCBhc2sgaXQgYWdhaW4uIE91dHNpZGUgb2YgYm9keWJ1aWxkaW5nLCBzY2hvb2wsIHdvcmssIHdoYXQgZWxzZSBkbyB5b3UgZG8gZm9yIGhvYmJpZXM/CkknZCBzdWdnZXN0IGxvdHMgb2YgdHJlYXRzIHRvIGNvdW50ZXIgY29uZGl0aW9uIGhlciB0byBub3QgcGFuaWMgd2hlbiBzaGUgc2VlcyBkb2dzLCBhbmQgbWF5YmUgYSBnZW50bGUgbGVhZGVyLiBNeSBwaXQgd2lsbCBwdWxsIGxpa2UgY3JhenkgYW5kIHNoZSdzIDQ1IGxicyBvZiBhbGwgbXVzY2xlLiAKU29tZSB0aXBzIGJlZm9yZSBnb2luZyAgIG1vc3Qgb2YgdGhlIHJvb21zIGFyZSBwcmV0dHkgc2ltaWxhciBpbiB0ZXJtcyBvZiBxdWFsaXR5LCBtb3N0bHkgdG91cmlzdHMvb2xkIG1lbiB3aXRoIG9uZSBvciB0d28gZGVjZW50IHlvdW5nIHBsYXllcnMuIEVhY2ggcm9vbSB3aWxsIHJ1biBkaWZmZXJlbnQgcHJvbW9zIG9mIHNvbWUga2luZCBvciBhbm90aGVyLCBJIHdvdWxkIHJlY29tbWVuZCBkb3dubG9hZGluZyB0aGUgUG9rZXIgTGl2ZSBhcHAgYW5kIHNwZW5kaW5nIDE1IG1pbnV0ZXMgb3Igc28gaGF2aW5nIGEgZmxpY2sgdGhyb3VnaCB0aGUgcG9rZXIgcm9vbXMgICB5b3UgY2FuIHN0YXIgdGhlIG9uZXMgeW91IGFyZSBpbnRlcmVzdGVkIGluIHBsdXMga2VlcCBhbiBleWUgb3V0IGZvciBvdGhlciBnYW1lcyB5b3UgbWlnaHQgd2FudCB0byBwbGF5IChmZXcgcm9vbXMgcmFuIDEvMSBQTE8gZm9yIGV4YW1wbGUpLiAKSXQgc2VlbXMgbW9yZSBsaWtlIHRoZXkgbGlrZSB0aGUgY29udHJvbCBhc3BlY3QuIApJIHBsYW5uaW5nIHRvIHRha2Ugd2lkZSBhbmdsZSBzaG90cyBhbmQgcHJvbGx5IGxvbmcgZXhwb3N1cmUgb25lcy4gCkFyY2hpZSBkb2VzIG1ha2UgdGhlIG1vcmUgbGlrZWx5IGNob2ljZTogdGhlIHJpY2ggb25lLiBBZnRlciBhbGwsIHBlb3BsZSB0ZW5kIHRvIG1hcnJ5IGF0IHRoZSBoaWdoZXN0IGVjb25vbWljIGFuZCBlZHVjYXRpb25hbCBsZXZlbCBwb3NzaWJsZSwgbm90IHRoZSBsb3dlc3QuCkFzIGZvciB0aGUgZmlhbmNlLCBoaXMgcmVzcG9uc2Ugd2FzIHNvIGJpemFycmUsIGl0IGFsbW9zdCBtYWtlcyBtZSB0aGluayB0aGUgc3Rvcnkgc3RydWNrIGEgbmVydmUgd2l0aCBoaW0uIExpa2UgaGUgZ290IGluIHRyb3VibGUgZm9yIHNleHVhbCBoYXJhc3NtZW50IGluIHRoZSBwYXN0IGJ1dCBoZSB0aG91Z2h0IGl0IHdhcyBubyBiaWcgZGVhbCwgc28gaGUgaG9sZGluZyBhIGdydWRnZSBhZ2FpbnN0IGV2ZXJ5b25lIHdobyBkb2VzbiB0b2xlcmF0ZSBzaW1pbGFyIGluZnJhY3Rpb25zLgpCdW5jb21iZSBDb3VudHkgU2hlcmlmZiBWYW4gRHVuY2FuIHNhaWQgbGF3IGVuZm9yY2VtZW50IGhhcyBiZWVuIGZvcmNlZCB0byB0YWtlIGEgYnJlYWsgZnJvbSB0aGlzIG9uZ29pbmcgYmF0dGxlIHNpbmNlIHRoZSBjb3VydHMgaGF2ZSByZWNlbnRseSBjb21lIGRvd24gb24gdGhlIHNpZGUgb2YgdmlkZW8gZ2FtZSBvcGVyYXRvcnMuCkl0IGlzIHNpbXBseSBhIG51dCB0aGF0IGNhbid0IGJlIGNyYWNrZWQgZHVlIHRvIGluc3VmZmljaWVudCBkYXRhLiAKU21va2luR2VvUm9ja3MgIDEgcG9pbnQgIHN1Ym1pdHRlZCA0IGRheXMgYWdvCkhvd2V2ZXIsIGl0IGlzIGNvbW1vbmx5IHByb3ZlbiB0aGF0IGEgZGVjZW50IGFuZCBvcmlnaW5hbCBjaGlwIHNldCBjYW4gcmVhbGx5IG1ha2UgYSBnYW1lIGNvbWUgYWxpdmUuIFRoaXMgaXMgd2h5IHRoZSBXb3JsZCBQb2tlciBUb3VyIFBva2VyIENoaXAgU2V0IGlzIHNvIHdvcnRoIGxvb2tpbmcgaW50by4gCjYgQ2xpbmljYWwgcHJhY3RpY2UgZ3VpZGVsaW5lcyBkaXNjdXNzZWQgYWN1dGUgTG93IEJhY2sgUGFpbiwgNiBjaHJvbmljIExvdyBCYWNrIFBhaW4sIGFuZCA2IExvdyBCYWNrIFBhaW4gd2l0aCBuZXVyb2xvZ2ljIGludm9sdmVtZW50LgpIZXkgICBJJ20gc29ycnkgeW91J3JlIGdvaW5nIHRocm91Z2ggdGhpcy4gWW91ciBNb20ncyBhY3Rpb25zIGRvbid0IHJlZmxlY3Qgb24geW91LCB0aGV5IGFyZSBhYm91dCBoZXIuCkFub3RoZXIgYmlnIG9uZSwgZm9yIG1lLCBpcyBhbHdheXMgYmVpbmcgcmVhZHkgdG8gaGVscC4gCldoZW4gUGF0dGluc29uIGNoYXR0ZWQgd2l0aCBTdGV3YXJ0IGluIDIwMTAsIHRoZSBjb21lZGlhbiBpbnZpdGVkIGhpbSB0byByZXR1cm4sIHNheWluZywgIllvdSBhcmUgbWFraW5nIG1lIGNvb2xlci4iCkZhY3QsIGJlY2F1c2Ugb2YgdGhlIG1lc3NpbmVzcyBvZiBodW1hbiBib2RpZXMsIDIgNSUgb2YgeW91bmcgZ2lybHMgYXJlIGludGVyc2V4ZWQgYW5kIG1heSBvciBtYXkgbm90IG1lbnN0cnVhdGUuLiAKQW5kIHBlcmhhcHMgdGhlIHNoaWZ0IGluIHRoZSB1c2Ugb2YgbGFuZ3VhZ2UsIHRoZSBlbmQgb2Ygc3ltYm9saWMgdmlvbGVuY2UgYWdhaW5zdCB3b21lbiB3aG8gaGF2ZSBhYm9ydGlvbnMgYW5kIGFib3J0aW9uIGFkdm9jYXRlcywgc3ltYm9saXplcyBhIHNsaWdodGx5IGRpZmZlcmVudCBvcmRlciBvZiB0aGluZ3M/IFdlIG1heSBub3cgaGF2ZSBhIHBvbGl0aWNhbCBvcmRlciB3aGVyZSBtb3N0IG9mIHRoZSBwZW9wbGUgaW4gY2hhcmdlIGFyZSBubyBsb25nZXIgc2xhdmVzIHRvIGEgcmFkaWNhbCByZWxpZ2lvdXMgbW92ZW1lbnQuIChBY2NvcmRpbmcgdG8gQ0RDIHN0YXRpc3RpY3MgQmxhY2sgd29tZW4gYXJlIHRocmVlIHRpbWVzIGFzIGxpa2VseSBhcyB3aGl0ZSB3b21lbiB0byBnZXQgYW4gYWJvcnRpb24pLi4gCk15IG1vbSB3ZW50IHRvIGEgbHVuY2ggd2l0aCBhIGxhcmdlIGdyb3VwIG9mIGNvdXNpbnMgYW5kIHNhdCBiZXNpZGUgb25lIHNoZSBiYXJlbHkga25ldy4gQm90aCBvZiB0aGVtIHN0YXJ0ZWQgdGFsa2luZyBhYm91dCB0aGVpciBraWRzIGFuZCBob3cgdGhleSBoYWQgYmVlbiBoZWxwaW5nIG91dCBkdXJpbmcgdGhlIGZsb29kLiBUaGV5IGNsdWVkIGluIHdlIG11c3QgYmUgaW4gdGhlIHNhbWUgY2xhc3MuIApJIG5ldmVyIGdyZXcgdXAgcmVmZXJyaW5nIHRvIHBlb3BsZSBhcyBibGFjay4gCkkgc3RpbGwgc3VwZXIgc2FkIGFib3V0IERUUi4gVGhlIHNlcnZpY2UgaGFzIGJlZW4gZ29pbmcgZG93biBmb3IgdGhlIDEwIHllYXJzIEkgYmVlbiBnb2luZyB0aGVyZS4gSW4gZmFjdCB0aGlzIHllYXIgd2UgZGlkbiBldmVuIGdvLiBUaGUgVGFiZXJuYXNoIFRhdmVybiBub3cgd2F5IG91dHNoaW5lcyB0aGUgRFRSIHJhbmNoIGhvdXNlIGZvciBmb29kLiBIb3BlZnVsbHkgdGhlIEZhbmNoZXMgZmlndXJlIG91dCB0aGF0IGhpcmluZyBsb25nIHRlcm0gc3RhZmYgaXMgcGFpbmZ1bCBidXQgbmVjZXNzYXJ5LiB5b3Ugbm90IHRoZXJlIGxvbmcgYW5kIGFyZSBkcnVuayBtb3N0IG9mIHRoZSB0aW1lKSB5b3Ugd29uIG5vdGljZSB0aGUgc2VydmljZSBvciBxdWFsaXR5IGlzc3VlcyB3aXRoIHRoZSBzdGFmZiB0aGV5IHNoaXAgaW4gZXZlcnkgNiBtb250aHMuIFRoYXQgaXMsIEkgc3VzcGVjdCwgd2h5IHRoZXkgc3RpbGwgYWxpdmUgICB0aGUgZXZlbnRzIGJ1c2luZXNzLgpGb290IGZsYXNoIGhhcyBiZWVuIGEgdHJhZGVtYXJrIGFzIGhlIG1hZGUgaGlzIHdheSB0aHJvdWdoIHRoZSBhd2FyZHMgY2lyY3VpdCBmb3IgaGlzICJCbGFjS2tLbGFuc21hbi4iLiAKVGhhdCBpcyB3aHkgdGhpcyBvbGQgZW5ncmF2aW5nIHNlZW1zICJ5ZWxsb3ciIHRvIG1lIChhbmQgdGhpcyB3aXRob3V0IGFueSBiZW5lZml0IG9mIHN5bmVzdGhlc2lhKS4uIApJZiB5b3UgdGhpbmsgdGhlIG1hcmtldCBpcyB1bmRlcnZhbHVpbmcgdGhlIGFzc2V0IHBvdGVudGlhbCByZXZlbnVlIHN0cmVhbSwgeW91IG1pZ2h0IGhhdmUgZm91bmQgYSB3aW5uZXIuLiAKQ2FtcGJlbGwgc2FpZCB0aGUgdGVub3Igb2YgQmxhaXIgbGV0dGVycyB3YXM6ICJXZSBzaGFyZSB0aGUgYW5hbHlzaXMsIHdlIHNoYXJlIHRoZSBjb25jZXJuLCB3ZSBhcmUgZ29pbmcgdG8gYmUgd2l0aCB5b3UgaW4gbWFraW5nIHN1cmUgdGhhdCBTYWRkYW0gSHVzc2VpbiBpcyBmYWNlZCB1cCB0byBoaXMgb2JsaWdhdGlvbnMgYW5kIHRoYXQgSXJhcSBpcyBkaXNhcm1lZCAuIGlmIHRoYXQgY2Fubm90IGJlIGRvbmUgZGlwbG9tYXRpY2FsbHkgYW5kIGl0IGlzIHRvIGJlIGRvbmUgbWlsaXRhcmlseSwgQnJpdGFpbiB3aWxsIGJlIHRoZXJlLiIKVGhlIHJhdGlvbmFsZSB0byByZWNhbGwgTWFjRXdlbiBvbiBTdW5kYXkgd2FzIGJhc2VkIHVwb24gaGlzIGltcG9zaW5nIHNpemUsIGltcHJlc3NpdmUgcHJvZHVjdGl2aXR5LCByYXBpZCBpbXByb3ZlbWVudCBhbmQgY3VyaW9zaXR5IGFib3V0IGhvdyBhbGwgdGhhdCB0cmFuc2xhdGVzIHRvIHRoZSB0b3VnaGVzdCBsZXZlbC4gbmF0aXZlIHBsYXlzIGhpcyBmaXJzdCByZWd1bGFyIHNlYXNvbiBnYW1lLgpHbHV0ZW4gaXMgYWxzbyBsaW5rZWQgdG8gbWFueSBwc3ljaGlhdHJpYyAodmkpIGFuZCBuZXVyb2xvZ2ljYWwgZGlzZWFzZXMsIGluY2x1ZGluZyBhbnhpZXR5LCBkZXByZXNzaW9uLCAodmlpKSBzY2hpem9waHJlbmlhLCAodmlpaSkgZGVtZW50aWEsIChpeCkgbWlncmFpbmVzLCBlcGlsZXBzeSwgYW5kIG5ldXJvcGF0aHkgKG5lcnZlIGRhbWFnZSkuICh4KSBJdCBoYXMgYWxzbyBiZWVuIGxpbmtlZCB0byBhdXRpc20uKGl4KS4gClRoZW4gbGF0ZXIgb24geW91IGNhbiBwb3NzaWJseSBicmluZyB1cCBhIHRvcGljIGxpa2Ugc2VsZiBkcml2aW5nIGNhcnMgd2hlbiBpdCBub3QgaW4gdGhlIG1pZGRsZSBvZiBhIGRpc2N1c3Npb24gYWJvdXQgc29tZW9uZSBsaWZlLi4gClQgU3BsaW5lIDMgZm9yIHJoaW5vIDUuMCA2NCBiaXQgc2VyaWFsIG51bWJlcnMsIGNyYWNrcyBhbmQga2V5Z2VucyBhcmUuIDI4IE1hciAyMDE4IC4gVXNlcnMgd2hvIHB1cmNoYXNlZCBUIFNwbGluZXMgZm9yIFJoaW5vIGJlZm9yZSAzIEp1bHkgMjAxMyAuIApObyBmdWxsIHJpbmcgdGFibGVzIGlsbHVzdHJhdGVzIG15IHBvaW50LiBJIHJlZmVycmluZyB0byAic21hbGwiIHN0YWtlcyBiZWNhdXNlIHRob3NlIGFyZSB0aGUgZmlyc3Qgc3Rha2VzIHdoZXJlIHlvdSBjYW4gbWFrZSBzb21lIG1vbmV5IHRoYXQgd29ydGggeW91ciB0aW1lLiAKQ2hyaXN0aW5lIExhZ2FyZGUKU2NhdHRlciB0aGUgdmVnZXRhYmxlcyBhbmQgaGFsdmVkIGdhcmxpYyBhcm91bmQgdGhlIG1lYXQgYW5kIGRyaXp6bGUgdGhlbSB3aXRoIGEgMiBjb3VudCBvZiBvaWwuIApIZSB3aWxsIGFsc28gYmUgbWlzc2VkIGJ5IG1hbnkgbmllY2VzLCBuZXBoZXdzLCBjb3VzaW5zIGFuZCBmcmllbmRzLiAKSSB0aG91Z2h0IHRoZSBkcml2aW5nIHBoeXNpY3Mgd2VyZSBmdW4gYW5kIGFjdHVhbGx5IG1hZGUgZ2V0dGluZyBhd2F5IGZyb20gY29wcyBmZWVsIHJld2FyZGluZywgaSB0aG91Z2h0IHRoZSBFdXBob3JpYSBlbmdpbmUgd2FzIG9uZSBvZiB0aGUgbW9zdCByaWRpY3Vsb3VzbHkgYWRkaWN0aXZlIGluY2x1c2lvbnMgaW4gYW55IGdhbWUgaSBldmVyIHBsYXllZCBhbmQgaSBoYXRlZCB0aGUgd2F5IHRoZXkgbmVyZmVkIGl0IGluIFYsIGFuZCBpIHRob3VnaHQgdGhlIHN0b3J5IHdhcyBubyBtb3JlIGludHJ1c2l2ZSB0aGFuIGFueSBvZiBSb2Nrc3RhciBnYW1lcy4gdGhlIHN0b3JpZXMgaW4gYm90aCBHVEEgYW5kIFJEUiBoYXZlIGFsd2F5cyBtaXNtYXRjaGVkIHdpdGggdGhlIGdhbWVwbGF5LCBpdCBhbHdheXMgYmVlbiBlaXRoZXIgImZ1Y2sgYXJvdW5kIGFuZCBoYXZlIGZ1biIgb3IgInBsYXkgYSBzZXJpb3VzIHN0b3J5IG1pc3Npb24gYW5kIGhhdmUgYWxsIHlvdXIgZnJlZWRvbSB0YWtlbiBmcm9tIHlvdSIsIEdUQSBJViBqdXN0IGdldHMgYSBiYWQgd3JhcCBiZWNhdXNlIHRoZXJlIGFzIG1hbnkgZHJhbWF0aWMgc2NlbmVzIGFzIHRoZXJlIGFyZSBmdW5ueSBvbmVzLCBidXQgaXQgc3RpbGwgZnVubnkgd2hlbiBpdCB3YW50cyB0byBiZSwgYW5kIGJvdGggd29yayBiZXR0ZXIgSU1PIGJlY2F1c2UgdGhleSBjb250cmFzdCB3aXRoIGVhY2hvdGhlciBzbyBuaWNlbHkuIG9uZSBtaW51dGUgeW91IGZ1Y2tpbmcgYXJvdW5kIGFuZCBoYXZpbmcgZnVuIHdpdGggYSBjaGFyYWN0ZXIsIHRoZSBuZXh0IHRoZXkgaW4gbW9ydGFsIGRhbmdlciBhbmQgeW91IHdhbnQgdG8gaGVscCBiZWNhdXNlIHRoZXkgc3BlbnQgdGltZSBnZXR0aW5nIHlvdSB0byBsaWtlIHRoZW0uCk15IGJpZ2dlc3QgaGVhcnRicmVhayB3YXMgYWxzbyB0aGUgYmVnaW5uaW5nIG9mIG1lIGxpdmluZyBteSB0cnV0aCBhbmQgYmVjb21pbmcgdGhlIHBlcnNvbiBJIHdhbnRlZCB0byBiZSBoZWFsdGh5LCBoYXBweSwgY29uZmlkZW50LCBhbmQgbm93LCBkZWVwbHkgaW4gbG92ZSB3aXRoIHNvbWVvbmUgd2hvIGxvdmVzIGFuZCB0cmVhdHMgbWUgd2VsbC4gCkkgdGhpbmsgd2hlbiBvdXIgYmFiaWVzIHdlcmUgYWxsIGFyb3VuZCA2aXNoIG1vbnRocyB0aGUgZ3JvdXAgaW1wbG9kZWQuIFRoZXJlIGFyZSBzdGlsbCBhIGdvb2QgbnVtYmVyIG9mIHVzIHdobyBzdHVjayBhcm91bmQsIGFuZCBpdCBiZWVuIGFic29sdXRlbHkgYW1hemluZy4gCkJ1dCBiZWNhdXNlIG91ciBjb3VudHJ5IGlzIHNvIGVtYmVkZGVkIGluIHRoZSBpZGVhIHRoYXQgZ29vZCBwZW9wbGUgYXJlIHRob3NlIHRoYXQgZGlzY2lwbGluZSB0aGVpciBzZXh1YWwgaW1wdWxzZXMgYW5kIGNvbmZpbmUgdGhlbSB0byBtYXJyaWFnZSwgd2UgYXJlIHVuYWJsZSB0byBhY3R1YWxseSBjb25zaWRlciB3aGF0IHBvbGl0aWNpYW5zIHN0YW5kIGZvciB1bnRpbCB3ZSBoYXZlIGZvcmNlZCB0aGVtIHRvIHByb3ZlIHRoZW1zZWx2ZXMgImdvb2QgaHVzYmFuZHMiIChhbmQgc29tZXRpbWVzICJnb29kIHdpdmVzIikuIFdlIGNhbiBzdG9wIGJlbGlldmluZyB0aGUgRGlzbmV5IGZhaXJ5dGFsZSB0aGF0IG1hcnJpYWdlIGlzIHRoZSBvbmx5IGdvYWwsIHRoZSBvbmUgcGF0aCB0byBhIGdvb2QgYW5kIGhhcHB5IGxpZmUsIHdlIHdpbGwgY29udGludWUgdG8gZWxlY3QgbGVhZGVycyB3aG8gYXJlIGFjdHVhbGx5IHNleCBjcmF6ZWQgcG9vZGxlcyBidXQgc3RhbmQgYXJvdW5kIHdhdmluZyB3aXRoIHRoZWlyIHdpdmVzIHRpZ2h0bHkgYnkgdGhlaXIgc2lkZXMuLiAKKEZ1bGwgQW5zd2VyKS4gCltkZWxldGVkXSAgIDggcG9pbnRzICBzdWJtaXR0ZWQgMiB5ZWFycyBhZ28KQSBnb29kIHdheSB0byB0ZWxsIGlzIGlmIHRoZSBwZXJzb24gaGFzIGRvbmUgYW55IHJlc2VhcmNoIG9yIGF0dGVtcHRlZCB0byBsZWFybiBhbnl0aGluZyBhYm91dCBiZWluZyBzdWJtaXNzaXZlLiAKTG9uZG9uLCBBdWcgMjA6IFVwIHRvIDIwMCBzdHJpcCBwb2tlciBwbGF5ZXJzIHdpbGwgY29tcGV0ZSBTYXR1cmRheSB0byBzZWUgd2hvIHdpbGwgbG9zZSB0aGVpciBzaGlydHMgICBhbmQgbW9yZSAgIGFuZCB3aG8gd2lsbCBzY29vcCAxMCwwMDAgcG91bmRzIGJ5IHJldGFpbmluZyB0aGVpciBjbG90aGVzIGFuZCBtb2Rlc3R5LgoiV2UgYXJlIGdldHRpbmcgc29tZXdoZXJlIG5vdywgYnV0IGlmIHdlIGhhdmUgdG8gcGF5ICQ1MDAsMDAwIGZvciBubyByZXR1cm4gb24gaW52ZXN0bWVudCBpdCBwdXRzIGl0IGJhY2sgYW5vdGhlciB0aHJlZSB0byBmaXZlIHllYXJzLiJKdWx5IDMwIDIwMTMgICAxMjowMEFNLiAKSW4gaXRzIHNlY29uZCBxdWFydGVyLCBpdCBoYWQgJDE3NiBtaWxsaW9uIGluIGdyb3NzIHJldmVudWUsIGluY2x1ZGluZyAkMTIyIG1pbGxpb24gZnJvbSBnYW1ibGluZy4gSXRzIGdhbWluZyB0YWtlIHdhcyB0aGUgc2Vjb25kIGhpZ2hlc3QgaW4gQXRsYW50aWMgQ2l0eSwgYmVoaW5kIG9ubHkgQmFsbHkncyBQYXJrIFBsYWNlLCB3aGljaCBpcyBsYXJnZXIuIEJvdWdobmVyIGlzIGFscmVhZHkgcG9uZGVyaW5nIGEgJDIwMCBtaWxsaW9uIGV4cGFuc2lvbiBvZiBoaXMgMTI1LDAwMCBzcXVhcmUgZm9vdCBjYXNpbm8sIHdoaWNoIGVtcGxveXMgNCw4MDAgcGVvcGxlLi4gCjI1JSBvZiBvdXIgYm9keSBjaG9sZXN0ZXJvbCBpcyBmb3VuZCBpbiB0aGUgYnJhaW4sIGFuZCBzeW5hcHNlcyBuZWVkIGNob2xlc3Rlcm9sIHRvIGRvIHRoZWlyIHdob2xlIHRoaW5nLgpUaGUgZ29vZCBuZXdzIGlzIHRoYXQgVFYgcHJvdmlkZXMgbW9yZSBwcml2YWN5IGNvbXBsaWFudCB3YXlzIHRvIHJlYWNoIHRhcmdldCBhdWRpZW5jZXMgbm93IGFuZCBmb3IgYSBsb25nIHRpbWUgdG8gY29tZS4KSSBjb25zaWRlciBteXNlbGYgYSBEZW1vY3JhdCwgSSBhZ3JlZSB3aXRoIGhlciBvcGluaW9uIG9uIHRoaXMgcGFydGljdWxhciBtYXR0ZXIuIEJ1dCBJIGhhdGVkIGhvdyBzaGUgaGFuZGxlZCBoZXJzZWxmLCB5b3UgZG9uIGhhdmUgdG8gc2NyZWFtIGFuZCBiZSBpbnRlbnRpb25hbGx5IGFudGFnb25pc3RpYyB0byBnZXQgeW91ciBwb2ludCBhY3Jvc3MuIApJdCdzIGEgY2hhaW4gc3RvcmUgc28gaXQncyBub3QgbGlrZSBsb3NpbmcgdGhpcyBtZXJjaGFuZGlzZSBpcyBzdWNoIGEgYmlnIGRlYWwgSSBzdXBwb3NlCkJvbnVzOiBIZSBhbHNvIG1haW50YWlucyB0aGUgc2FtZSB0aGVvbG9naWNhbCBwb3NpdGlvbiBJIGRvOiAiVGhlIG9ubHkgd2F5IEkga25vdyB0byBkcml2ZSBvdXQgZXZpbCBmcm9tIHRoZSBjb3VudHJ5IGlzIGJ5IHRoZSBjb25zdHJ1Y3RpdmUgbWV0aG9kIG9mIGZpbGxpbmcgaXQgd2l0aCBnb29kLiIKSSBoYWQgbGFzaWsgYWJvdXQgMTQgeWVhcnMgYWdvLiBCZXN0IG1vbmV5IEkgZXZlciBzcGVudC4gClRoZSBkZXRhaWxzIG9mIHRob3NlIGFycmFuZ2VtZW50cyBhcmVuIHB1YmxpYyBhbmQgY291bGQgYWx0ZXIgdGhlIHZhbHVhdGlvbi4uIApJdCdzIGEgcmVsYXRpb25zaGlwIGJldHdlZW4gdHdvIHRoaW5ncyB3aXRoIG5vIHJlYWwgbWVhbmluZy4gVGhlIHJpZ2h0IG1heSBjYWxsIG1lYW5pbmcgYmVjYXVzZSBpdCdzIGEgY29udmVuaWVudCBkaWFib2xpY2FsIHJlbGF0aW9uc2hpcCBidXQgaXQgZG9lc24ndCBtZWFuIGFueXRoaW5nLiBBbHNvLCBpdCdzIGJhc2ljYWxseSB0eXBpY2FsIHJlYWRpbmcgbWF0ZXJpYWwgZm9yIGFsbCBwb2xpdGljYWwgc2NpZW5jZS4gCkEgY2hpZWYgY2F1c2Ugb2YgdGhlIHByb2JsZW0sIGNvbXBhbmllcyBwdWJsaWNpemVkLCB3YXMgYSBsYWNrIG9mIGx1bWJhciBzdXBwb3J0LiAKQnkgTWFyeSBNYW5uaW5nCldoaWxlIHRoZSBzdGFuZGFyZCBzaHVmZmxlIGdyaXAgd29ya3MgZm9yIGJvdGggcmlnaHQgIGFuZCBsZWZ0IGhhbmRlZCBwZW9wbGUsIGl0IG1heSBub3Qgd29yayBiZXN0IGZvciBldmVyeW9uZS5bN10gWW91IGNhbiBwbGFjZSB5b3VyIGZpbmdlcnMgaG93ZXZlciB5b3UgbGlrZSwgYXMgbG9uZyBhcyB0aGUgcG9zaXRpb24gZnVsZmlsbHMgdHdvIG1ham9yIHJlcXVpcmVtZW50czogWW91IG11c3QgaGF2ZSBhdCBsZWFzdCBvbmUgZGlnaXQgb24gdGhlIGZhciBvdXRzaWRlIGVkZ2Ugb2YgZWFjaCBzdGFjayBzbyB0aGF0IHRoZXkgY2FuIGJlIHB1c2hlZCB0b2dldGhlci4gCkhlIGtub3dzIHdoZW4gdG8gbW92ZSBoaXMgY2hlc3MgcGllY2VzIGFuZCB3aGVuIHRvIHJlYWRqdXN0IHRoZW0uIEhlIGFsc28ga25vd3Mgd2hlbiB0byBjaGVja21hdGUgYW5kIGhvdyB0byByZXBvc2l0aW9uIGhpcyBwaWVjZSB3aXRob3V0IGV2ZW4gYmVpbmcgc2VlbiBkb2luZyBzby4uIApObywgSSB3b3VsZCBub3QgY29uc2lkZXIgc3RyaXAgcG9rZXIgYXMgY2hlYXRpbmcuLiAKIlRoZXkgZG9uIHJlaW4gaW4gcHJlZGF0b3J5IGJlaGF2aW91ciBmcm9tIGNsdWJzIGFuZCBob3RlbHMgdG8gbWF4aW1pc2UgcHJvZml0cyBhbmQgdGhleSBkb24ga2VlcCBwZW9wbGUgYW5kIGNvbW11bml0aWVzIHNhZmUsIiBHcmVlbnMgTVAgSnVzdGluIEZpZWxkIHNhaWQgaW4gYSBzdGF0ZW1lbnQgb24gVHVlc2RheS4gCklmIGl0IGNvbmZ1c2luZyBmb3IgbWUgaXQgcHJvYmFibHkgY29uZnVzaW5nIGZvciBhIGxvdCBvZiBwZW9wbGUuIApEaWQgbm90IHBhaWQgYXR0ZW50aW9uIEdvZCdzIHNlcnZhbnRzIGFsbCB0aGVzZSB5ZWFycyBhbGxvdGVkIEdvZCBmb3IgZ29zcGVsIG9mIHNhbHZhdGlvbiAgIFRoZXkgd2lsbCBHb2QncyBKdWRnZW1lbnQgb2YgZGVhdGguLiAKU2F2aW5nIGEgaGFsZiBiZXQgd2lsbCBwYXkgZm9yIHlvdXIgbmV4dCBzbWFsbCBibGluZC4gCklmIGEgd29tYW4gd2FudHMgdG8gZHJpdmUgYSBjYXIsIHNoZSBzaG91bGQgbm90IGhhdmUgYSBCdXJrYSBvdmVyIGhlciBoZWFkIHNvIHRoYXQgc2hlIGNhbiBtYWludGFpbiBnb29kIHBlcmlwaGVyYWwgdmlzaW9uLiAKSW4gcHVyZWx5IGVjb25vbWljIHRlcm1zLCB0aGVyZSBhcmUgcmVhc29ucyB0byBqb2luIHRoZSBtaWxpdGFyeSwgZ2V0IG1hcnJpZWQgYW5kIHNlbmQgb3VyIGNoaWxkcmVuIHRvIHBhcm9jaGlhbCBzY2hvb2xzIHRoYXQgYXJlIG11Y2ggbGVzcyBleHBlbnNpdmUgYmVjYXVzZSB0aGV5IGFyZSByZWxpZ2lvdXMuIEluIGEgY291bnRyeSB3aGVyZSBpbmNvbWUgZGlzdHJpYnV0aW9uIGlzIGJ5IGZhciB0aGUgbW9zdCB1bmVxdWFsIGluIHRoZSBpbmR1c3RyaWFsaXplZCB3b3JsZCwgd2hlcmUgYWNjZXNzIHRvIGhpZ2hlciBlZHVjYXRpb24gaW52b2x2ZXMgaHVnZSBhbW91bnRzIG9mIGRlYnQgZm9yIHRoZSBtYWpvcml0eSBvZiBBbWVyaWNhbnMsIGFuZCB3aGVyZSBqb2JzIHRoYXQgcGF5IGEgbGl2YWJsZSB3YWdlIGFyZSBmZXcgYW5kIGZhciBiZXR3ZWVuIHdpdGhvdXQgYSB1bml2ZXJzaXR5IGRlZ3JlZSwgdGhlIG1pbGl0YXJ5IGlzIG9uZSBvZiB0aGUgZmV3IHByb21pc2VkIHBhdGhzIHRvIGZ1dHVyZSBmaW5hbmNpYWwgd2VsbCBiZWluZy4gT2YgY291cnNlLCBpdCdzIGEgcHJvbWlzZSB0aGF0IGlzIHJhcmVseSByZWFsaXplZCAgYnV0IG5vbmV0aGVsZXNzLCBpdCBpcyBhIHByb21pc2UuIFRoZSBzYW1lIGhvbGRzIGZvciB0aGUgYmVuZWZpdHMgb2YgbWFycmlhZ2UgIGhlYWx0aCBpbnN1cmFuY2UsIHByb3BlcnR5IHRyYW5zZmVyLCBldGMuIEFzIGZvciBDYXRob2xpYyBzY2hvb2xzLCB0aGV5J3JlIGNoZWFwZXIgdGhhbiBtb3N0IHByaXZhdGUgc2Nob29scyBhbmQgdGhlIGxldmVsIG9mIGVkdWNhdGlvbiBjYW4gYmUgcXVpdGUgYSBiaXQgYmV0dGVyIHRoYW4gb3VyIHVuZGVyZnVuZGVkIHB1YmxpYyBzY2hvb2xzLgo=|<---