--->|SWYgeW91IGhhdmUgYSBzaGl0IHBlcnNvbmFsaXR5IG5vIG9uZSB3aWxsIHdhbnQgdG8gYmUgZnJpZW5kcyB3aXRoIHlvdS4gV29yayBvbiBiZWluZyBhIG1vcmUgaW50ZXJlc3RpbmcgcGVyc29uIGFuZCB0aGVuIHlvdSBmaW5kIGl0IGlzIGEgbG90IGVhc2llciB0byBjcmVhdGUgcmVsYXRpb25zaGlwcy4uIApJIE1vcm1vbiBhcyB3ZWxsLCBzbyBJIGNhbiBhbnN3ZXIgdGhpcy4gVGhlcmUgbm8gb2ZmaWNpYWwgY2h1cmNoIHBvc2l0aW9uIG9uIFIgcmF0ZWQgbW92aWVzLCBidXQgdGhlcmUgaXMgYSBjdWx0dXJhbCB0cmFkaXRpb24gb2Ygbm90IHdhdGNoaW5nIHRoZW0uIAoxIERTR1ZPIGVyZm9sZ3QsIHp1IHdpZGVyc3ByZWNoZW4uIApFZ2xpIGVudGVyZWQgdGhlIERlbi4gClRoZXJlIGFyZSBzZXZlcmFsIHN0dWRpZXMgbW9uaXRvcmluZyBIUlYgZHVyaW5nIHNsZWVwLCBhcyBmYXIgYXMgSSBrbm93IHRoZXJlIGlzIG5vIHJlcG9ydCBkZXNjcmliaW5nIHRoZSBlZmZlY3RzIG9mIGFsY29ob2wgb24gYXV0b25vbWljIG5lcnZvdXMgc3lzdGVtIGR1cmluZyBzbGVlcCB1c2luZyB0aGlzIHBhcmFtZXRlci4gCllvdSBiYXNpY2FsbHkgbGV0IGhpbSBpbiBhbmQgeW91ciBmaW5hbCBiZXQgd2FzIGdvaW5nIHRvIGdldCBjYWxsZWQgbm8gbWF0dGVyIHdoYXQgc2luY2UgaGUgaGFkIGEgZmx1c2ggYW5kIHN1bmsgY29zdCBmYWxsYWN5LiBZb3UgaGFkIHRvIGdvIGFsbCBpbiBiYXNpY2FsbHkgb3IgY2hlY2suIApGb3VuZGVkIGluIDE5NzAsIHRoZSBBc3NvY2lhdGlvbiBvZiBDb21tdW5pdHkgT3JnYW5pemF0aW9ucyBmb3IgUmVmb3JtIE5vdywgb3IgQUNPUk4sIGlzIGZpbmFsbHkgc2h1dHRpbmcgaXRzIGRvb3JzIGFuZCB0aGUgZmFyIHJpZ2h0IHdpbmdudXRzIGFyZSBjZWxlYnJhdGluZy4gClRoZSBpbmZsdWVuY2UgdGhhdCBwaHlzaWNhbCBwcmVzc3VyZSBoYXMgb24gZGVjaXNpb24gbWFraW5nIHdhcyBkaWZmZXJlbnQgdG8gdGhhdCBvYnNlcnZlZCBpbiB3b3JsZCBjbGFzcyBlbGl0ZSBhdGhsZXRlczsgdGhpcyBoaWdobGlnaHRzIHRoZSBpbXBvcnRhbmNlIG9mIGRpc3Rpbmd1aXNoaW5nIGJldHdlZW4gYXRobGV0ZXMgYXQgdGhlIGVsaXRlIGxldmVsIChTd2FubiBldCBhbC4sIDIwMTUpLiBhbmQgV2Fsc2gsIFYuIDIwMTguIFRoZSBwaHlzaW9sb2dpY2FsIGVmZmVjdHMgb2YgVHJhbnNjcmFuaWFsIEVsZWN0cmljYWwgU3RpbXVsYXRpb24gZG8gbm90IGFwcGx5IHRvIHBhcmFtZXRlcnMgY29tbW9ubHkgdXNlZCBpbiBzdHVkaWVzIG9mIENvZ25pdGl2ZSBOZXVyb21vZHVsYXRpb24uIAo2MCBtaW51dGUgc2Vzc2lvbiBmb3IgJDY1CkhlIGJlY2FtZSBhIGZ1bGwgcHJvZmVzc29yIGF0IHRoZSB1bml2ZXJzaXR5IGluIDE5ODMsIHNwZWNpYWxpemluZyBpbiBuZXVyb2xvZ3kgYW5kIHBoeXNpY2FsIG1lZGljaW5lIGFuZCByZWhhYmlsaXRhdGlvbi4gCk1hc2NpYSBvcmlnaW5hbGx5IHN1Z2dlc3RlZCB0aGUgdHJpYWwgd291bGQgYmVnaW4gaW4gYWJvdXQgYSBtb250aCwgYnV0IGFmdGVyIGhlYXJpbmcgZnJvbSB0aGUgdHdvIHNpZGVzIGluZGljYXRlZCB0aGF0IGEgZGVsYXkgbWF5IGJlIHJlcXVpcmVkIHRvIHNvcnQgb3V0IHRoZXNlIGRpc2Nsb3N1cmUgaXNzdWVzLgpOdXJzaW5nIGRlcGVuZHMgd2hlcmUgeW91IGxpdmUuIApNdWNoIHdhcyBsZWFybnQgZnJvbSB0aGUgZXhwZXJpZW5jZSBvZiBIb3dhcmQgRGVhbidzIGNhbXBhaWduIGluIDIwMDQsIHRoZSBmaXJzdCB0byBhdHRlbXB0IHRvIGhhcm5lc3MgdGhlIGludGVybmV0LgpTbyBqdXN0IHRha2luZyB3ZWlnaHQgb2ZmIGFuZCBjb250aW51aW5nIGRvZXNuIHJlYWxseSB3b3JrLCBteSBib2R5IGlzIGJhc2ljYWxseSBkb25lIGFmdGVyIGEgZmV3IHJlcHMgLiAKV2hhdCBZb3UnbGwgTmVlZE9uZSBhYnJhc2l2ZSBsaXR0bGUgc3BvbmdlLCB0aGUgc29ydCBvZiB0aGluZyBvbmUgbWlnaHQgdXNlIHRvIHdhc2ggdGhlIGRpc2hlcy4KU3Bva2UgdG8gR29kIGFib3V0IENpYXJhbiBmYXZvdXJpdGUgdG95cywgZm9vZCwgY29sb3VyIGFuZCBhbGwgdGhlIHRoaW5ncyB0aGF0IG1hZGUgaGltIHVuaXF1ZS4gTXkgaW5qdXJpZXMgd2VyZSB0d28gZnJhY3R1cmVkIGFua2xlcywgYSBjb21wb3VuZCBmcmFjdHVyZSB0byBteSBsZWZ0IGxlZywgYSBmcmFjdHVyZWQgcGVsdmlzIGFuZCBoaXAsIGEgZnJhY3R1cmVkIGVsYm93IGFuZCBzdGVybnVtLCBidXQgdGhlIHdvcnN0IGluanVyeSB3YXMgdGhlIHBhaW4gd2hpY2ggY2FtZSBmcm9tIG15IGJyb2tlbiBoZWFydC4gc28gb2Z0ZW4gYW4gYXJ0aWNsZSBvciBhIHBhc3NhZ2Ugb3IgYSB2aWRlbyBjb21lcyBhbG9uZyB0aGF0IHdlIGFyZSBhbGwgZW5jb3VyYWdlZCB0byBjb25zdW1lLiBUbyByZWFkLCB0byB3YXRjaCwgdG8gaGVhci4gRXZlcnkgc28gb2Z0ZW4sIHdlIGFyZSBlbmNvdXJhZ2VkIHRvIG9wZW4gb3VyIGVhcnMgc28gdGhhdCBvdXIgaGVhcnRzIGFuZCBvdXIgaGVhZHMgbWF5IGhlYXIuIEV2ZXJ5IHNvIG9mdGVuIHdlIGhhdmUgdG8sIGZvciBvdXIgb3duIHNha2VzLgpBYmVyIGlociBQdWxzIG1hY2h0IG1pciBldHdhcyBTb3JnZW4uIEljaCBkZW5rZSwgU2llIHNpbmQgZXR3YXMgYXVmZ2VyZWd0Ii4gIldpZSByZWNodCBlciBoYXQiLCBkYWNodGUgSGVsZW4sIGRlbm4gZGllIGdhbnplIFplaXQgc3BydGUgc2llIHNjaG9uLCB3aWUgaWhyIEhlcnogcmFzdGUsIGtsYXIsIGVzIHdhciBkaWUgQXVmcmVndW5nLCBkaWUgU3Bhbm51bmcsIHNpZSB3dXNzdGUsIGdsZWljaCB3cmRlIGRpZSBBdWZmb3JkZXJ1bmcga29tbWVuLCBhdWNoIFJvY2sgdW5kIEhzY2hlbiBhYnp1bGVnZW4sIHVuZCBkYW5uIHdyZGUgc2llIHZvciBTY2hhbSBpbiBkZW4gQm9kZW4gdmVyc2lua2VuIS4gCk5vdyBJIGluIHRoZWlyIGNob2ljZSBzaGFyZSBvZmZlcmluZywgd2hpY2ggbWVhbnMgdGhhdCBldmVyeSB3ZWVrIEkgZ2V0IHRvIHBpY2sgd2hhdCBjb21lcyBpbiBteSBib3guIApLZW5uZWR5TWFyaWx5biBNb25yb2UgYW5kIEpvaG4gRi5UaGUgc2FtZSBjYW4ndCBiZSBzYWlkIGZvciB0aGUgZGFsbGlhbmNlcyBvZiBQcmVzaWRlbnQgSm9obiBLZW5uZWR5LkZpcnN0IGxhZHkgSmFja2llIEtlbm5lZHkgc3BlbnQgbG9uZyBnZXRhd2F5cyBhdCB0aGUgY291cGxlJ3MgVmlyZ2luaWEgZmFybSwgYW5kIHdoZW4gdGhlIHdpZmUgd2FzIGF3YXksIHRoZSBwcmVzaWRlbnQgcGxheWVkLCBzd2ltbWluZyBpbiB0aGUgbnVkZSBpbiB0aGUgV2hpdGUgSG91c2UgcG9vbCAid2l0aCBoaXMgZmVtYWxlIHBhcmFtb3Vycywgc29tZSBvZiB3aG9tIHdvcmtlZCBhcyBzZWNyZXRhcmllcyBpbiB0aGUgV2hpdGUgSG91c2UuIk9uZSBzdGFmZmVyIHdobyBjYW1lIGJ5IHRvIHdvcmsgb24gdGhlIHBvb2wgZ290IGFuIHVuZXhwZWN0ZWQgZXllZnVsLiJXaGVuIGhlIG9wZW5lZCB0aGUgcG9vbCBkb29yLCBoZSB3YXMgc2hvY2tlZCB0byBzZWUgS2VubmVkeSBhZHZpc2VyIGFuZCBjbG9zZSBmcmllbmQgRGF2ZSBQb3dlcnMgc2l0dGluZyBieSB0aGUgcG9vbCAgIG5ha2VkICAgd2l0aCB0d28gb2YgS2VubmVkeSdzIHNlY3JldGFyaWVzLiIgVGhlIHN0YWZmZXIgcmFuIG91dCwgYW5kIHRoZSBpbmNpZGVudCB3YXMgbmV2ZXIgbWVudGlvbmVkLkl0IHdhcyB3ZWxsIGtub3duIGFtb25nIHN0YWZmZXJzIHRoYXQgd2hlbmV2ZXIgSmFja2llIHdhcyBhd2F5LCB0aGV5IHdlcmUgdG8gYXZvaWQgdGhlIHNlY29uZCBmbG9vciBvZiB0aGUgV2hpdGUgSG91c2UuIApPbmUgb2YgdGhlIGdyZWF0ZXN0IGluc2lnaHRzIGV2ZXIsIGNvbmNlaXZlZCBieSBzb21lIGFuY2llbnQgR3JlZWtzIGJ1dCBlc3RhYmxpc2hlZCBvbmx5IHR3byBtaWxsZW5uaWEgbGF0ZXI6IHRoZSBFYXJ0aCByZXZvbHZlcyBhcm91bmQgdGhlIHN1biAoYXMgZG8gb3RoZXIgcGxhbmV0cykuIEl0J3MgTnVtYmVyIDEgYmVjYXVzZSBpdCB3YXMgdGhlIGZpcnN0LgpGb3VuZCBvdXQgYWJvdXQgdGhlIGxhdyB5b3UgYXJlIGNsYWltaW5nIGV4aXN0cyAyIHllYXJzIGFmdGVyIG15IGNvbnZpY3Rpb24uIApUaGVyZSBhcmUgYWxzbyBhIG51bWJlciBvZiB3ZWJzaXRlcyBhbmQgam9iIGJvYXJkcyB0aGF0IHlvdSBjYW4gdXNlIHRvIGFpZCBpbiB5b3VyIGpvYiBzZWFyY2guIApJZiB5b3Ugd2FudCB0byBzdHJldGNoIGl0LCBCYXJvIEtpIFRlZXIgaGFzIGEgY2hhbmNlIHRvIHNlbGwgMiBkaWZmZXJlbnQgY29sb3VyIHBhbGV0dGVzIG9uIGhpcyB2aXNpdHMuIApUaGVyZSBnYXlzIHdobyBwdXJwb3NlZnVsbHkgYWN0IGEgY2VydGFpbiB3YXkgYnV0IGJlaW5nIGdheSBpdHNlbGYgZG9lc24gYXV0b21hdGljYWxseSBtYWtlIHlvdSBsaWtlIHRoYXQgYW5kIG5vciBpcyB0aGUgbWFqb3JpdHkgb2YgdGhlbSBpa2UgdGhhdC4uIApTcGFjZWJpcmRsYWR5ZmVtYWxlIDMwICAgMzUKUG9saWNlIHNhaWQgbmluZSBvdGhlciBzZWFyY2ggd2FycmFudHMgd2VyZSBleGVjdXRlZCBhcyBmYXIgYXdheSBhcyBMb25kb24sIE9udC4gYW5kIHNpeCBwZW9wbGUgd2VyZSBhcnJlc3RlZC4gVGhlaXIgYnVzaW5lc3NlcyBhbmQgaG9tZXMgd2VyZSBhbHNvIHNlYXJjaGVkIGFuZCBhIG51bWJlciBvZiBoaWdoIHZhbHVlIGl0ZW1zIHdlcmUgc2VpemVkLCBpbmNsdWRpbmcgYSBzYWZlIHRoYXQgcG9saWNlIHNheSBpcyB0aGUgc2l6ZSBvZiBhIGNhci4gVGhlIHNhZmUsIHdoaWNoIHdhcyBzZWl6ZWQgYXQgYSBsb2NhdGlvbiBub3QgZmFyIGZyb20gdGhlIGhhbGwsIGhhZCB0byBiZSByZW1vdmVkIG9uIGEgZmxhdGJlZCB0cnVjay4KQmlsbCB3YXMgYSBwcmFnbWF0aWMga2luZCBvZiBndXkgYW5kIHdvdWxkIHdpc2ggdGhhdCBpbiBsaWV1IG9mIGZsb3dlcnMsIGFueSB0cmlidXRlcyBiZSBhcyBhIGRvbmF0aW9uIHRvIFJveWFsIFZpY3RvcmlhIEhvc3BpdGFsIGFuZCB0aGUgQ29sbGluZ3dvb2QgR2VuZXJhbCBhbmQgTWFyaW5lIEhvc3BpdGFsIHdoZXJlIGhlIHJlY2VpdmVkIHN0ZWxsYXIgY2FyZSBvciB0byBIb3NwaWNlIEdlb3JnaWFuIFRyaWFuZ2xlLi4gCkkgaGF0ZWQgVEogSG9va2VyIGJhY2sgaW4gdGhlIGRheSwgYnV0IG5vdyBpdCdzIGp1c3QgZGFtbiBmdW5ueSwgYWxsIGx1ZGljcm91cyBjYW1weSBnb29kbmVzcy4gOikgVGhhbmtzIGZvciBpbmR1bGdpbmcgbXkgYXR0ZW1wdCBhdCBUVldQIG5lc3MuIDopLiAKTWFueSBhbHNvIHVzZWQgdGVudHMgb3Igc2xlcHQgdW5kZXIgYnJpZGdlcy4uIApUaGUgc3RhdHMgZG9uIGxpZS4gCkkgY2FuIGFwcHJlY2lhdGUgdGhhdC4gSSBhIGJpdCB0b3VjaHkgYWJvdXQgdGhlIHVzZSBvZiB0aGUgd29yZCBiZWNhdXNlIGl0IGhhcyBhIHZlcnkgc3BlY2lmaWMgdXNlIGFuZCBtZWFuaW5nIGluIGEgbW9kZXJuIGNvbnRleHQuIElzbGFtaXN0IG1vdmVtZW50cyBhcmUgaW52YXJpYWJseSBzdWJ2ZXJzaXZlLiAKT2ZmaWNlcnMgc2FpZCBpbiBib3RoIGNhc2VzIHRoYXQgdGhleSB3ZXJlIHJlc3BvbmRpbmcgdG8gY29tcGxhaW50cy4gCkFuZCBqdXN0IGxpa2UgcGVvcGxlIHdpdGggYXN0aG1hLCBjYXRzIGNhbiBhbHNvIHN1ZmZlciBhc3RobWEgYXR0YWNrcy4gRHVyaW5nIGFuIGF0dGFjayB5b3UgY2F0IHdpbGwgaGF2ZSB0cm91YmxlIGJyZWF0aGluZyBhbmQgd2lsbCBiZSBjbGVhcmx5IHN0cnVnZ2xpbmcgdG8gY2F0Y2ggaGVyIGJyZWF0aC4gSWYgYW4gYXR0YWNrIGlzIHNlcmlvdXMgZW5vdWdoLCBpdCBjb3VsZCBiZSBmYXRhbCBmb3IgeW91ciBjYXQuIApUaGVyZSB3YXMgdGhlIHRpbWUgSSB3YXMgaW4gYSBidXMgYWNjaWRlbnQgYW5kIG15IGFybSB3ZW50IHRocm91Z2ggdGhlIHdpbmRvdywgd2hlbiBhIHZpc2l0aW5nIGNoaWxkIGdyYWJiZWQgdGhlIHJlZCBob3QgcG9rZXIgZnJvbSB0aGUgZmlyZXBsYWNlIGFuZCBqYW1tZWQgaXQgaW50byB0aGUgYmFjayBvZiBteSBsZWcgYW5kIHdoZW4gSSBoYWQgdG8gc3RhbmQgc2lsZW50bHkgd2hpbGUgdGhlIGRvY3RvcidzIHdpZmUgc3Bvb25lZCBhIGhvcnJpYmxlIGNvbmNvY3Rpb24gb2Ygc29ha2VkIGJyZWFkIGluIG1pbGsgYW5kIG9pbCBpbnRvIG15IG1vdXRoIGFzIGEgd2F5IHRvIGVudGljZSBoZXIgZGF1Z2h0ZXIgdG8gZWF0LiBBbmQgdGhlcmUgd2VyZSB0aGUgdmlzaXRzIHRvIGZyaWVuZCdzIGhvbWVzIHRvIHZpZXcgdGhlIGRlYWQgYXMgd2FzIHRoZSBjdXN0b20uLiAKSGUgZGlkIGlzc3VlIGEgd3JpdHRlbiBzdGF0ZW1lbnQsIHNheWluZyAiV2UgYXJlIGNlcnRhaW5seSBkaXNhcHBvaW50ZWQgaW4gdGhlIHJ1bGluZy4iIFRoZSBzdGF0ZW1lbnQgd2VudCBvbiB0byBzYXksICJUaGUgb3BlcmF0b3JzIGFuZCBzb2Z0d2FyZSBjb21wYW5pZXMgd2lsbCBub3cgbG9vayBhdCB0aGUgbGF3IGFuZCBvdXIgb3BlcmF0aW5nIHN5c3RlbXMgdG8gc2VlIGhvdyB3ZSBjYW4gYWRqdXN0IG91ciBjb21wdXRlciBwcm9ncmFtcyBhbmQgYnVzaW5lc3MgbW9kZWxzIHRvIGNvbnRpbnVlIG9wZXJhdGlvbnMuIFdlIHdpbGwgbG9vayBhdCBtb3JwaGluZyBpbnRvIHdoYXRldmVyIHdlIG5lZWQgdG8gYmUgdW5kZXIgdGhlIHJ1bGUgb2YgbGF3IHRvIGNvbnRpbnVlIG91ciBidXNpbmVzcy4iLiAKKSBCdXQgdGhlbiBJIGpva2VkIHRoYXQgSSB3YXMgZ2xhZCBJIGRpZG4gZ2V0IGdhcyB3aGVuIEkgbm90aWNlZCBpdCB3YXMgb24gZW1wdHkgYW5kIHRoZSBjb3BzIHRvbGQgbWUgdGhhdCB0aGUgdGhpZWYgcHJvYmFibHkgY3Jhc2hlZCBpdCBCRUNBVVNFIGl0IHdhcyBlbXB0eS4gClRvdXQgY2VsYSBuJ3RhaXQgcXVlIHBsYWNlYm8sIHBvdXIgcmVzdGVyIGRhbnMgbGUgZG9tYWluZSBkZSBsYSBwaGFybWFjb2xvZ2llOk5hdGhhbGllIFBldHJvd3NraSBhIGV4cG9zIGhpZXIgZGFucyBMYSBQcmVzc2UgbGVzIG1pcmFnZXMgcGxhbmFudCBzdXIgbCdoaXN0b2lyZSBkZSBsYSBtaWxsaW9ubmFpcmUuCkl0IHdhcyBhIGNvbmNlcm4gZm9yIG1lIGF0IHRoZSB0aW1lLkFzIEkgd2FsayBpbiB0aGUgY2F2ZSwgSSBzZWUgaXQgYmVlbiBmdXJuaXNoZWQsIHZlcnkgcHJpbWl0aXZlIGJ1dCBpdCBuaWNlIGVub3VnaCwgdGFibGVzIGFyZSBxdWl0ZSBsb3cgYW5kIHNtYWxsLCBlaXRoZXIgYSBraWRkaWUgdGFibGUgb3IgYSBmb3JlaWduIHBpZWNlLiBNaWdodCBuZWVkIHRvIGFwcHJhaXNlZC5JIHdhbGsgZGVlcGVyLCBhZG1pcmVkIHRoZSBhcnQgb24gdGhlIHdhbGxzLCBpbnRlcmVzdGluZyBzdHVmZiwgc29tZSBjcnVkZSBwYWludGluZ3Mgb2Ygd29sdmVzLCBweXJhbWlkcywgZ3JlZW4gbWVuIGFuZCBsaWdodCBiZWFtcy4gClRoZSB3aWRvdyBvZiB0aGUgbGF0ZSBwcmVzaWRlbnQgaGFkIGp1c3Qgd2Fsa2VkIG9udG8gYSAgUGFyYW1vdW50IFN0dWRpbyBzZXQgd2hlbiB0aGUgMSwwMDAgd2F0dCBsaWdodCBleHBsb2RlZCB3aXRoIGEgcm9hciBkdXJpbmcgdGhlIG1ha2luZyBvZiB0aGUgZmlsbSAiVGhlIERlc3BlcmF0ZSBIb3Vycy4iIEh1bXBocmV5IEJvZ2FydCwgb25lIG9mIHRoZSBzdGFycyBpbiB0aGUgcGljdHVyZSwgd2FzIGN1dCBieSBmbHlpbmcgZ2xhc3MsIGFzIHdlcmUgdGhyZWUgY3JldyBtZW1iZXJzLiAKMyBwb2ludHMgIHN1Ym1pdHRlZCAzIG1vbnRocyBhZ28KQWx0aG91Z2ggbWFueSBkaWZmZXJlbnQgY3VsdHVyZXMgaGF2ZSB1c2VkIG1hc3NhZ2UgYXMgYSBmb3JtIG9mIHRoZXJhcHkgZm9yIHRob3VzYW5kcyBvZiB5ZWFycywgaXQncyBwb3NzaWJsZSB0byB0cmFjZSB0aGUgaGlzdG9yeSBvZiB0aGUgaGVhZCBhbmQgc2NhbHAgbWFzc2FnZSB0byBJbmRpYS4gVGhlIHBlb3BsZSBvZiBJbmRpYSBoYXZlIGluY29ycG9yYXRlZCBoZWFkIG1hc3NhZ2UgaW50byB0aGVyYXBldXRpYyBwcmFjdGljZSBmb3IgYWJvdXQgNSwwMDAgeWVhcnMgYXMgcGFydCBvZiBheXVydmVkYSwgYSBob2xpc3RpYyBtZWRpY2luZS4gCkFsc28sIHRoZSBmb3J1bSBvYnNlcnZlZCB0aGF0IGV2ZW4gaWYgdGhlIGNhciB3YXMgdXNlZCBmb3Igb24gaGlyZSBhbmQgcmV3YXJkIGJhc2lzLCB0aGF0IHdhcyBub3QgdGhlIHJlYXNvbiBmb3IgdGhlZnQgYW5kIGl0IHdhcyBzdG9sZW4gd2hlbiBpdCB3YXMgcGFya2VkIGF0IGhpcyByZXNpZGVuY2UuCkJ1dCBIdWF3ZWkgd2FzIHRob3VnaHQgdG8gYmUgY2xvc2UgdG8gdGhlIGdvdmVybm1lbnQgYW5kIHRoZSBQTEEgYW5kIE1yIFphZmlyb3Zza2kgc2FpZCBNb3Rvcm9sYSwgd2hvc2UgYmlnZ2VzdCBjdXN0b21lcnMgd2VyZSB0aGUgVVMgbmV0d29ya3MgQVQgYW5kIFZlcml6b24sIHNwZW50IG1vbnRocyBlbnN1cmluZyB0aGVyZSB3ZXJlIHNhZmVndWFyZHMuIEhlIHNhaWQgaGUgc3Bva2Ugd2l0aCBleGVjdXRpdmVzIGF0IEVtZXJzb24gRWxlY3RyaWMgd2hvIGFzc3VyZWQgaGltIG9mIHRoZSBxdWFsaXR5IG9mIEh1YXdlaSdzIHBlb3BsZSwgcHJvZHVjdHMgYW5kIGNvbnRyb2xzLiAKSGUgaXMgd29ycnlpbmcgZm9yIGFsbCBoaXMgbG9zdCBzaGVlcC4gCkxlYXZlcyBiZWhpbmQgYSAxLzQgb3Igc21hbGxlciBiZXQgT1RULiBJbXBvc3NpYmxlIHRvIGJhbGFuY2UuIApTb21lIGdyZWF0IHBva2VyIHN0b3JpZXMgd2VyZSBjcmVhdGVkIHdoZW5ldmVyIERvdWcgaGl0IHRoZSB0YWJsZXMuIApXaGF0IHRvIHdlYXI6IFlvZ2EgY2xvdGhlcy4gQnJpbmcgd2F0ZXIuIERvbid0IHlvdSBkYXJlIHdlYXIgc2hvZXMgYW5kIHNvY2tzLCBvciB5b3UnbGwgbWlzcyB0aGUgZmVlbGluZyBvZiBkZXcgb24gdGhlIGdyYXNzLgpUaGlzIHNvcnQgb2Ygc3R1ZHkgdXNlcyB0aGUgZXhpc3RlbmNlIG9mIGEgc3RhdGlzdGljYWwgY29ycmVsYXRpb24gdG8gYXJndWUgY2F1c2F0aW9uLiBDZXJ0YWluIHNvcnRzIG9mIGhhbmRzIG1heSBiZSBtb3JlIGxpa2VseSB0byBhcHBlYXIgb24gdGhlIGJvZGllcyBvZiB3b21lbiB3aG8gaWRlbnRpZnkgYXMgbGVzYmlhbnMgKG9yIG1lbiB3aG8gY2hlYXQpLCBidXQgaXNuIHRoYXQgYSBhcyBvcHBvc2VkIHRvIGEgY2F1c2U/IFBlb3BsZSB3aXRoIGdyZWVuIGV5ZXMgbWlnaHQgYmUgbW9yZSBsaWtlbHkgdG8gYmUgYWNjb3VudGFudHMsIGJ1dCBpdCBpcyBoaWdobHkgdW5saWtlbHkgdGhhdCB0aGVyZSBpcyBhIGNhdXNhbCByZWxhdGlvbnNoaXAgYmV0d2VlbiB0aGUgdHdvLiIKUHVlcyBzLCBlbiBsYXMgV1NPUCBodWJvIHRvcm5lb3MgY29uIHJlY29tcHJhcyBpbGltaXRhZGFzLiAKVGhlIDEvMiBwbGF5ZXJzIGFyZSB0cnlpbmcgdG8gcGxheSB0aWdodCBzbyB0aGV5IGRvbid0IGdvIGJ1c3QsIHRoZSBwbG8gcGxheWVycyBhcmUgZnVuIGJlY2F1c2UgdGhleSBhcmUgcmVhZHkgdG8gZ2FtYmxlIGFuZCB0aGUgZ3V5cyB3aXRoIG1vbmV5IGFyZSB1c3VhbGx5IGFycm9nYW50IGVub3VnaCB0byB0aGluayB0aGV5IGhhdmUgYW4gZWRnZSBpbiB0aGUgZ2FtZSBvciBhcmUganVzdCB0aGVyZSB0byBoYXZlIGZ1bi4uIApXaGF0IGdhbWUgYXJlIHlvdSBnb2luZyB0byBwbGF5P1doaWxlIHRoZXJlIGFyZSBhIGdyZWF0IG51bWJlciBvZiBkaWZmZXJlbnQgcG9rZXIgZ2FtZXMsIHRoZSBtb3N0IHBvcHVsYXIgdmVyc2lvbiB0aGVzZSBkYXlzIGlzIE5vIExpbWl0IFRleGFzIEhvbGQgJ2VtLiBUaGlzIGlzIHdoYXQgZXZlcnlib2R5IHdhdGNoZXMgb24gVFYgYW5kIHdpbGwgbGlrZWx5IGJlIGZhbWlsaWFyIHRvIGV2ZXJ5Ym9keSB5b3UgaW52aXRlLgpJbmNyZWFzZXMgb3h5Z2VuIGZsb3cgICBNYXNzYWdlIGhlbHBzIGluIHB1cmdpbmcgdGhlIGJvZHkgb2YgdG94aWNzIGFjY3VtdWxhdGVkIGR1ZSB0byBsb25nIHBlcmlvZHMgb2Ygc3RyZXNzIGFuZCB0ZW5zaW9uLiBJdCBjYXVzZXMgbW9yZSBveHlnZW4gdG8gZmxvdyBpbiB0aGUgYm9keSwgd2hpY2ggaGVscHMgdGhlIGJvZHkgdG8gcmV2aXZlIGFuZCByZSBidWlsZCBpdHNlbGYuCkEgbG90IG9mIHBlb3BsZSBrbm93IHRoYXQgYmVpbmcgYWJsZSB0byBwbGF5IHBva2VyIHByb2Zlc3Npb25hbGx5IHRha2VzIGEgbG90IG9mIHRpbWUgYW5kIHNraWxsIGFuZCBhIHdlYWx0aCBvZiBrbm93bGVkZ2Ugb2YgdGhlIGdhbWUsIHdoaWNoIGlzIHdoeSBhIGxvdCBvZiB0aGUgc2FtZSBwZW9wbGUgc2hvdyB1cCBpbiB0aGUgZmluYWwgdGFibGVzIGEgbG90LgpXZSBkb24ndCBrbm93IGFib3V0IHlvdSwgYnV0IHRoZXJlIGhhdmUgZGVmaW5pdGVseSBiZWVuIHRpbWVzIHdoZW4gb25lIHNoZWV0IG9mIHRvaWxldCBwYXBlciBqdXN0IGlzbid0IGVub3VnaC4gQW5kIHRoYXQncyBldmVyeSB0aW1lLgpQbGF5aW5nIHBva2VyIGF0IGhvbWUgY29zdCBhIHBlcnNvbiBsZXNzIG1vbmV5IHRoYW4gcGxheWluZyBhdCBhIGNhc2luby4uIApJIGFtIGV4dHJlbWVseSBzb3JyeSBmb3IgdGhlIHBhaW4gdGhhdCB5b3UsIHlvdXIgZmlhbmNlLCBhbmQgaGVyIGZyaWVuZCBhcmUgZXhwZXJpZW5jaW5nLiBZb3UgYW5kIHRoZXkgYW5kIGV2ZXJ5b25lIGRlc2VydmVzIGhhcHBpbmVzcy4gUHJvYmxlbXMgY2FuIGJlIHRvdWdoIHRvIHNvbHZlLCBidXQga25vdyB0aGF0IG90aGVyIHBlb3BsZSBjYXJlIGFuZCBhcmUgd2lsbGluZyB0byBoZWxwLiBZb3Ugc2hvdWxkIGtub3cgdGhhdCB5b3UncmUgYSBnb29kIHBlcnNvbiBmb3Igd2FudGluZyB0byBoZWxwIHlvdXIgZmlhbmNlIGFuZCBoZXIgZnJpZW5kLiBTb21ldGltZXMgbGlzdGVuaW5nIGFuZCBzYXlpbmcgIkkgbG92ZSB5b3UuIEkgY2FyZSBhYm91dCB5b3UiIGNhbiBiZSB0aGUgYmVzdCB3YXkgd2UgY2FuIGhlbHAgd2hlbiBwcm9ibGVtcyBzZWVtIGxpa2UgdGhleSBjYW4ndCBiZSBmaXhlZC4gQ291bGQgeW91IHN1Z2dlc3QgdGhhdCB0aGV5IHNoYXJlIHdoYXQncyB3cm9uZywgZWl0aGVyIHdpdGggeW91IG9yIHdpdGggYSBjb25maWRlbnRpYWwgY291bnNlbG9yPwpPdGhlciB0aGFuIHRoYXQsIG5vIG90aGVyIGNvbXBsYWludHMuRGF0ZSBvZiBleHBlcmllbmNlOiBEZWNlbWJlciAyMDEzQXNrIENhc2lub2d1cnU3NyBhYm91dCBSZXZpZXdlZCBOb3ZlbWJlciAyMSwgMjAxMyBUb28gc21va3kgYW5kIHNoYWR5IHBlb3BsZSBhbmQgYXJyb2dhbnQgc3RhZmZUaGlzIGlzIHByb2JhYmx5IHRoZSB3b3JzdCBjYXNpbm8gSSBoYXZlIGV2ZXIgYmVlbiB0by4gV2hlbiBmaXJzdCB3YWxraW5nIGluLCBJIHNhdyBzb21lb25lIHdpdGggb2xkIGNsb3RoZXMgYW5kIHNsZWVwaW5nIGluIGEgd2hlZWxjaGFpciByaWdodCBhd2F5IGJsb2NraW5nIGEgd2Fsa3dheS4gCkJ1dCB3aGF0IGlmIGl0IGNvc3RzICQxIHRvIHNoaXAgb3JhbmdlcyBmcm9tIEZsb3JpZGEgdG8gQ2FsaWZvcm5pYT8gUHJpY2VzIGFyZSBkZWNpZGVkbHkgbm90IGNvcnJlY3QgdGhlIGZ1bmRhbWVudGFsIHZhbHVlIG9mIGFuIG9yYW5nZSBpcyAkMS4gQnV0IHRoZXJlIGlzIG5vIGZyZWUgbHVuY2ggc2luY2UgdGhlIGZyaWN0aW9uYWwgY29zdHMgYXJlIGEgbGltaXQgdG8gYXJiaXRyYWdlLiBJbiBzaG9ydCwgdGhlIHNtYXJ0LCBzYXZ2eSBhcmJpdHJhZ2V1cnMgYXJlIHByZXZlbnRlZCBmcm9tIGV4cGxvaXRpbmcgdGhlIG9wcG9ydHVuaXR5IChpbiB0aGlzIGNhc2UsIGR1ZSB0byBmcmljdGlvbmFsIGNvc3RzKS4KSWwgeSBhIHBsdXMgZGUgMjAwIHNhbG9ucyBkZSBtYXNzYWdlIHJvdGlxdWUgIE1vbnRyYWwuIApJdCBkZXNlcnZlcyB0byBidXJuIGluIGhlbGwuIApUaGVzZSBzaXRlcyBhbGxvdyB5b3UgdG8gd2F0Y2ggcHJvcyBwbGF5LCB2aWV3IHR1dG9yaWFscyBvbiBldmVyeSBhc3BlY3Qgb2YgdGhlIGdhbWUsIGFuZCBoZWFyIGJyZWFrZG93bnMgb2YgaG93IHBsYXllcnMgKGdvb2QgcGxheWVycyEpIHRoaW5rIHRocm91Z2ggaGFuZHMuIApJbiBmYWN0LCBoYWxmIHRoZSB0aW1lIFJlaW4gaXNuIGV2ZW4gb24geW91ciBzY3JlZW4vaW4geW91ciBzYW1lIGxvY2F0aW9uLiAKWW91IGNhbiBnZXQgYXdheSB3aXRoIHRydXRocywgdmFndWUgbGFuZ3VhZ2UgYXQgd29yayB3aXRob3V0IHRoZSBzdW4uU3BlYWsgdHJ1dGggdG8gcG93ZXIgYWJvdXQgdGhlIG1vdmVtZW50LiBJIHdvdWxkIGFsc28gbGlrZSB0byBrbm93IHRoZSBjaG9pciwgZm9yIG15IGRpY3RhdG9yc2hpcCBzcHJpbmdzIG9udG8gYSB0YXN0ZWxlc3MgcHJvamVjdCB3aXRoaW4gdGhlIHdpc2RvbS4gCkdyYWhhbSBzdG9wcGVkIHJ1bm5pbmcsIGdyYWJiaW5nIGhpcyBoZWFkIGFuZCBjYXJlZW5pbmcgaW4gdGhlIHJvYWQuVGhlIHdvcmxkIGhhZCBnb25lIGJsYWNrLiAKSWRlYWxseSwgeW91IHdhbnQgdG8gc2xlZXAgaW4gYSBuZXV0cmFsIHBvc2l0aW9uLCB3aXRoIGV2ZXJ5IGpvaW50IG5laXRoZXIgc3RyZXRjaGVkIG5vciBjdXJsZWQuSWYgeW91IGNhbiwgbGVhcm4gdG8gc2xlZXAgb24geW91ciBiYWNrISBJdCBpcyB0aGUgbW9zdCBuZXV0cmFsIHBvc2l0aW9uIChsZWFzdCBzdHJhaW4gb24gbXVzY2xlcyksIGFuZCBrZWVwcyB5b3UgaW4gZ29vZCBwb3N0dXJlIChjaGluIHR1Y2tlZCwgc2hvdWxkZXJzIGJhY2ssIGJhY2sgc3RyYWlnaHQpLiBZb3Ugd2FudCB0aGUgYmFjayBvZiB5b3VyIGhlYWQgdG8gY29tZSBhcyBjbG9zZSB0byB0aGUgYmVkIGFzIHBvc3NpYmxlIHNvIHlvdXIgaGVhZCBpcyBub3QgYmVudCBmb3J3YXJkOyBzb21ldGltZXMsIGEgdGhpbiByb2xsIHVuZGVyIHlvdXIgbmVjayAob3Igbm8gaGVhZCBwaWxsb3cgYXQgYWxsKSB3aWxsIGJlIGNvbWZvcnRhYmxlLiBQbGFjaW5nIGEgdGhpbiBwaWxsb3cgdW5kZXIgeW91ciBrbmVlcyBjYW4gaGVscC4gClBva2VyIGNhcmQgcHJvdGVjdG9ycyBhcmUgdmVyeSBpbXBvcnRhbnQgbm93YWRheXMuIApXaXRoIHRoZSAkMi41IGJpbGxpb24gV3lubiBSZXNvcnRzIGNhc2lubyBpbiBFdmVyZXR0IG5vdCBzY2hlZHVsZWQgdG8gb3BlbiB1bnRpbCBuZXh0IEp1bmUsIE1HTSBTcHJpbmdmaWVsZCB3aWxsIGhhdmUgYSBoZWFkIHN0YXJ0IG9uIGVzdGFibGlzaGluZyBhIGN1c3RvbWVyIGJhc2UgaW4gTWFzc2FjaHVzZXR0cywgYW5kIHByb3ZpZGUgYSBmaXJzdCBsb29rIGF0IHRoZSBpbXBhY3Qgb2YgYSBmdWxsIGZsZWRnZWQgY2FzaW5vIG9uIHRoZSBhcmVhLgpHZXQgdGhlIGVnZyBvdXQsIHRoZW4gbGV0IGl0IGNvb2wgb2ZmIGEgYml0IGJ1dCBtYWtlIHN1cmUgaXQncyBzdGlsbCB3YXJtLi4gCldlIG1ldCBzbyBtYW55IHBlb3BsZSBkdXJpbmcgb3VyIGV4cGVyaWVuY2Ugd2hvIHdlcmUgc3RydWdnbGluZyBzbyB2ZXJ5IG11Y2guIApBIHF1aWNrIGV4YW1wbGUgb2YgYSBnb29kIHN0dWR5IHBvaW50IG9uIHRoZSBzdWJqZWN0IHdvdWxkIGJlIFNrZWV0IG1lbnRpb25pbmcgdGhlIHN0cmVuZ3RoIG9mIGRvbmtpbmcgaW4gbXVsdGkgd2F5IHBvdHMuSSBkb24gY29uc2lkZXIgbXlzZWxmIHRvIGtub3cgZXZlcnl0aGluZyBhYm91dCBwb2tlciBhdCBhbGwgYW5kIEkgYXBwcmVjaWF0ZSB3aGVuIG90aGVyIHBsYXllcnMgc2hhcmUgdGhpbmdzLCB5b3UgbmV2ZXIga25vdyB3aGF0IHdpbGwgaGVscCB5b3UgaW4gdGhlIGZ1dHVyZS5JIHRoaW5rIHRoZSBjb25jZXB0IGhhcyBsZWdzIGFuZCBJIHdhbnRlZCB0byBoZWxwIHNvbWVvbmUgd2hvIHdhcyB0cnlpbmcgdG8gZG8gc29tZXRoaW5nIG5ldy4gClRoaXMgaW5jbHVkZXMgbGlua3MgdG8gdW5vZmZpY2lhbCB0cmFuc2xhdGlvbnMvc2NhbmxhdGlvbnMgb2YgbGlnaHQgbm92ZWxzLCB2aXN1YWwgbm92ZWxzLCBhbmQgbWFuZ2EsIHVub2ZmaWNpYWwgYW5pbWUgc3RyZWFtcywgdG9ycmVudCBzaXRlcywgdW5vZmZpY2lhbGx5IHVwbG9hZGVkIGZ1bGwgT1NUcywgYW5kIGltYWdlcyBhbmQgdmlkZW8gY29udGFpbmluZyB3YXRlcm1hcmtzIGZyb20gYW55IG9mIHRoZSBwcmV2aW91c2x5IG1lbnRpb25lZCB3ZWJzaXRlcy4gClRoZSBzZWNvbmQgZWlnaHQgY291bnRzIGFyZSBtb3JlIGV4cGxvc2l2ZSBiZWNhdXNlIHRoZXkgaW5jbHVkZSB0d28gdGhpbmdzIHRoYXQgaGVscGVkIHByb3BlbCB0aGUgaW5jaWRlbnQgaW50byBhbiBpbnRlcm5hdGlvbmFsIHNlbnNhdGlvbi4gVGhlIGZpcnN0IGlzIHRoYXQgYnkgdGhlIHRpbWUgaGUgdGFsa2VkIHRvIHRoZSBkZXRlY3RpdmUsIFNtb2xsZXR0IHNhaWQgaGUgY291bGQgc2VlIHRocm91Z2ggdGhlIGV5ZSBob2xlcyBvZiBvbmUgYXR0YWNrZXIgbWFzayB0aGF0IGhlIHdhcyBhIHdoaXRlIG1hbi4gClRoYXRzc29yaWdodCAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ28KTm90IHRoYXQgYW55IG9mIHRoZW0gYXJlIHVwIHRvIGFueSBnb29kLiBBbWVyaWNhbiBDaHJpc3RpYW5zIGVxdWFscyBKZXN1cyBhcyBub3Qgb25seSB3aGl0ZSBidXQgYWxzbyBzb3V0aGVybiwgYmxvbmRlLCBjb25zZXJ2YXRpdmUsIHBybyBndW5zLCBhZ2FpbnN0IHRoZSBwb29yLCBhZ2FpbnN0IHRoZSBodW5ncnksIGFnYWluc3QgdGhlIHBlcnNlY3V0ZWQsIHBybyB3YWxsLCB1bmJyaWRsZWQgY2FwaXRhbGlzdCwgcHJvIG1pbGl0YXJ5LCBzZXhpc3QsIGlzbGFtb3Bob2JpYywgYWdhaW5zdCBDYXRob2xpY3MsIHBybyBndW5zLCBicm93bi9ibGFjayBoYXRpbmcsIG1hZ2Evd2hpdGUgcm9iZSB3ZWFyaW5nIGFuZCBtb3JlIHRoYW4gYSBsaXR0bGUgTmF6aS4gQnV0IHRoZWlyIGxlYWRlciB3YXMgYW5vaW50ZWQgYnkgdGhlIGFsbWlnaHR5LiAKT3VyIHByb3BlcnR5IG1hbmFnZXIgYWR2aXNlZCB0aGUgc3RyYXRhIGNvcnBvcmF0aW9uIGl0IGhhcyBubyBjaG9pY2UgYnV0IHRvIGFwcGx5IHRoZSBzY2hlZHVsZSBvZiB1bml0IGVudGl0bGVtZW50IHJlZ2lzdGVyZWQgaW4gdGhlIExhbmQgVGl0bGUgUmVnaXN0cnkuIFNoZSBoYXMgcmVzcG9uZGVkIGFuZCBhZHZpc2VkIHNoZSBiZWxpZXZlcyB0aGUgc2NoZWR1bGUgdGhlIHN0cmF0YSBjb3Jwb3JhdGlvbiBhbmQgbWFuYWdlbWVudCBjb21wYW5pZXMgaGF2ZSBiZWVuIHVzaW5nIGFyZSBtaXhlZCB1cCBiZWNhdXNlIGEgZHVwbGljYXRlIHVuaXQgaW4gdGhlIG5leHQgYnVpbGRpbmcgaGFzIGEgMTIgcGVyIGNlbnQgbG93ZXIgdW5pdCBlbnRpdGxlbWVudC4gCkRhdmlkIFVsbGlvdHQgaXMgb25lIG9mIHRob3NlIHJhcmUga2luZHMgb2YgUG9rZXIgUGxheWVycyB3aG8gYXJlIGhpZ2hseSBpbnZvbHZlZCBpbiB0aGUgcmVzZWFyY2ggdG8gbWFrZSB0aGUgbmF0dXJlIG9mIHBva2VyIGdhbWVzIGZhciBtb3JlIGludGVyZXN0aW5nIGFuZCBlYXN5IHRvIHdpbiBhbGwgdGhlIHRpbWUuIFRoaXMgYXJ0aWNsZSBwcm92LgpBdCB0aGUgbG93ZXIgbGltaXRzLCBwb3NpdGlvbiBpcyBub3QgbmVhcmx5IGFzIGltcG9ydGFudCBpbiBPbWFoYS84IGFzIGl0IGlzIGluIEhvbGQnZW0uIFdoaWxlIGl0IGlzIG5pY2UgdG8gYWN0IGxhc3QsIGl0IGNhbiBiZSBhbG1vc3QgYXMgZ29vZCB0byBhY3QgZmlyc3QsIGFuZCBldmVuIGFjdGluZyBiZXR3ZWVuIHBsYXllcnMgaXMgbm90IGFzIGJhZCBhcyBkb2luZyBzbyBpbiBIb2xkJ2VtLiBEdWUgdG8gdGhlIG1vcmUgc3RyYWlnaHRmb3J3YXJkIHdheSBPbWFoYS84IHBsYXlzIGFuZCB0aGUgZmFjdCB0aGF0IHlvdSBzaG91bGQgaGF2ZSBhIHZlcnkgZ29vZCBpZGVhIG9mIHlvdXIgY2hhbmNlcyB0byB3aW4gYWZ0ZXIgdGhlIGZsb3AsIHlvdSBzaG91bGQgYmUgYWJsZSB0byBwbGF5IGFsbW9zdCBhbnkgaGFuZCB5b3UgZGVjaWRlIHRvIHBsYXkgaW4gYW55IHBvc2l0aW9uLiBBcyB5b3UgYmVjb21lIG1vcmUgZXhwZXJpZW5jZWQgYW5kIG1vdmUgdXAgaW4gbGltaXRzLCBwb3NpdGlvbiBwbGF5cyBhIG1vcmUgaW1wb3J0YW50IHJvbGUuClRoZSB3YXIgYWdhaW5zdCB0ZXJyb3Jpc20gaXMgZ29pbmcgZ2FuZ2J1c3RlcnMuIApFYWNoIGVwaXNvZGUgaW5jbHVkZXMgYSBzZWdtZW50IGNhbGxlZCAiRGlkIFlvdSBLbm93PyIgc3RhcnJpbmcgcG9rZXIgcHJvIERhbmllbCBOZWdyZWFudSBnaXZpbmcgYSBicmllZiBsZXNzb24gYWJvdXQgdGhlIGdhbWUsIFJhbHN0b24gc2FpZC4gVGhlIHNlZ21lbnQgcGxhbm5lZCBmb3IgdGhlIG9wZW5pbmcgc2hvdyBpcyB0aGUgc3RvcnkgYmVoaW5kIHRoZSB0ZXJtIGRlYWQgbWFuJ3MgaGFuZC4KVGhhdCdzIHdoeSBzbyBtYW55IHBlb3BsZSBpbnZvbHZlZCBpbiB0aGUgaXNzdWUgaW4gQ2FsaWZvcm5pYSBhcmUgd2F0Y2hpbmcgd2hhdCBpcyBoYXBwZW5pbmcgaW4gTmV3IEplcnNleS4gVGhhdCBpcyB0aGUgbW9zdCByZWNlbnQgc3RhdGUgdG8gbGVnYWxpemUgb25saW5lIHBva2VyLCBhbmQgYWxzbyB0aGUgYmlnZ2VzdC4gCklzIGl0IHRydWUgdGhhdCBvdmVyIDIwIG1pbGxpb24gcGVvcGxlIHdlcmUga2lsbGVkIGluIHRoaXMgY29uZmxpY3Q/IFdobyB0cnVseSB3YXMgdGhlIGxlYWRlciBvZiB0aGUgVGFpcGluZz8gVGhpcywgYW5kIG11Y2ggbW9yZSwgaW4gdGhpcyBmYXNjaW5hdGluZyBlcGlzb2RlLkkgZGlkbiBtYW5hZ2UgdG8gaW5jbHVkZSBpdCBpbiB0aGUgZXBpc29kZSBpdHNlbGYsIGJ1dCB0aGUgbHVja3kgd2lubmVyIG9mIHRoaXMgbW9udGhzIGJvb2sgZ2l2ZSBhd2F5IHdpbGwgZ2V0IHRvIGNob29zZSBiZXR3ZWVuIHRoZSB0d28gbm9uIGZpY3Rpb24gYm9va3MsIFN0ZXZlbiBSLiBQbGF0dCBBdXR1bW4gaW4gdGhlIEhlYXZlbmx5IEtpbmdkb206IENoaW5hLCB0aGUgV2VzdCwgYW5kIHRoZSBFcGljIFN0b3J5IG9mIHRoZSBUYWlwaW5nIENpdmlsIFdhciAoYXMgcmVjb21tZW5kZWQgaW4gdGhlIHBvZGNhc3QhKSBhbmQgTWlyYW5kYSBLYXVmbWFubiBCbGFjayBUdWRvcnM6IFRoZSBVbnRvbGQgU3RvcnkgKGZpbmQgb3V0IGFib3V0IHBlb3BsZSBvZiBBZnJpY2FuIGFuY2VzdHJ5IGluIDE2dGggY2VudHVyeSBFbmdsYW5kISksIGFzIHdlbGwgYXMgdGhlIHRoZSBoaXN0b3JpY2FsIGZpY3Rpb24gYm9vaywgQnVybWEgQm95IGJ5IEJpeWkgQmFuZGVsZSAoYSBub3ZlbCBhYm91dCBhIE5pZ2VyaWFuIHlvdXRoIGZpZ2h0aW5nIGluIHRoZSBJbXBlcmlhbCBCcml0aXNoIEFybXkgYWdhaW5zdCB0aGUgSmFwYW5lc2UgZHVyaW5nIFdXSUkpLiBZb3UgY2FuIHN1YnNjcmliZSB0byB1cyB2aWEgU3RpdGNoZXIsIG9yIFJTUywgYW5kIG5vdyBvbiBZb3VUdWJlIGFuZCAuIAphbnlvbmUgaGF2ZSBhbiBlY3RvcGljIHByZWduYW5jeQpNYW5pbGEgaGFzIGEgaHVnZSB2YXJpZXR5IG9mIHNtYWxsIG1pZCBzdGFrZXMgZ2FtZXMgcnVubmluZyBjb25zdGFudGx5LiBIaWdoZXIgc3Rha2VzIGFsc28gcnVuIGF0IHRpbWVzLiBJIGFsd2F5cyBmZWVsIGxpa2UgIkkgc2hvdWxkIGp1c3QgZ29uZSB0byBCYW5na29rIiB3aGVuIGluIE1hbmlsYS4gCkxvb2ssIGxldCBzYXkgSSBjcmVhdGUgYSBwb2tlciBzaXRlLCBhbmQgSSBoYXZlIGluIGhvdXNlIHNoaWxsIGJvdHMgdGhhdCBrbm93IHRoZSBkZWFsIGFuZCB3aWxsIG1ha2Ugc3R1cGlkIGNhbGxzIGxpa2UgdGhpcyBhbmQgc3VjayBvdXQgZXZlcnkgdGltZS4gQW5kIHRoZXkgZG9uIGtlZXAgdGhlIHNhbWUgdXNlcm5hbWUuIFRoZXkgcGxheSBvbmUgdG91cm5hbWVudCBhbmQgc29hayB1cCBzb21lIG9mIHRoZSBwcml6ZSBwb29sLCB0aGVuIGNoYW5nZSB0aGVpciB1c2VybmFtZXMuIAoiVGhlIHNpeCBtb250aCB0aW1lIGZyYW1lIGlzIGEgZ29vZCB0aW1lIGZyYW1lIC4gCkhhdmVuIHNlZW4gYW55IGdhbWUgcmVjZW50bHkgdGhhdCBjYXB0dXJlcyB0aGUgbXVsdGlwbGF5ZXIgc3RvcnkgYW5kIHBhY2luZyB3ZSBzYXcgaW4gc29tZSBvZiB0aG9zZSBvbGRlciBnYW1lcy4gUGVyaGFwcyB0aGV5IGRpZG4gc2VsbCB3ZWxsLiAKRm9yIGV4YW1wbGUgcmlkaW5nIGJpa2VzIHVuc2FmZWx5LCBjbGltYmluZyB0aGluZ3MgdGhleSBzaG91bGRuIGV0Yy4gQXQgbW9zdCBhbGwgd2UgaGF2ZSB0byBkbyBpcyBjYWxsIHRoZSBhbWJ1bGFuY2UgYW5kIHN0YW5kIGFyb3VuZCBhbmQgd2FpdCBmb3IgaXQgdG8gc2hvdyB1cC4gVGhlcmUgaXMgbm8gZGFuZ2VyIGluIHRoYXQgdG8gYW55b25lIGV4Y2VwdCB0aGVtLiAKRmVhdHVyZXMgQmlsb3hpJ3MgY2FzaW5vcyBmZWF0dXJlIG5vdCBvbmx5IExhcyBWZWdhcyBzdHlsZSBnYW1pbmcsIGJ1dCBhbHNvIExhcyBWZWdhcyBzdHlsZSBkaW5pbmcgYW5kIHNob3BwaW5nLiAKQSBwYXNzaW9uIG1hcmsgaXMgYWN0dWFsbHkgYSBldXBoZW1pc20gZm9yIHRoZSBza2luIGRpc2NvbG9yYXRpb24gY2F1c2VkIGJ5IGV4dHJlbWUgc3Vja2luZyBvbiB0aGUgc2tpbiwgdXN1YWxseSBpbiB0aGUgbmVjayBhbmQgY2hlc3QgYXJlYXMuIFRoZSBtb3JlIHBvcHVsYXIgdGVybSwgaG93ZXZlciwgaXMgbm90IHBhc3Npb24gbWFyayBidXQga2lzcyBtYXJrIGFsc28gaW5mb3JtYWxseSBjYWxsZWQgYSBoaWNreSAoYWx0ZXJuYXRlbHkgc3BlbGxlZCBoaWNrZXkpLiBPZnRlbiwgYXQgdGhlIGhlaWdodCBvZiBleHRyZW1lIGx1c3Qgb3Igc2V4dWFsIHBhc3Npb24sIHR3byBwZW9wbGUgY2FuIGFjY2lkZW50YWxseSBjYXVzZSBraXNzIG1hcmtzIG9uIGVhY2ggb3RoZXIncyBza2luLi4gClBsdXMsIHRoZXJlIGFsd2F5cyBvbmUgT01DIHdobyBoYXMgdGhlIHNhbWUgZnVja2luZyBzdG9yeSBhYm91dCAidGhhdCBvbmUgZ3V5IHdobyBkaWRuIHdhbnQgdG8gY2hvcCAob3IgcGF5IGEgYnViYmxlKSBhbmQgaGUgd2FzIHRoZSBuZXh0IG9uZSBvdXQpLiBJZiBJIHBsYXlpbmcgZm9yIGZ1biwgSSBkb24gd2FudCBmcnVzdHJhdGlvbi4gCkZvciBjdXN0b20gY2hpcHMsIHVzZSBjZXJhbWljIGNoaXBzLCB0aGV5IGZlZWwgZ29vZCwgZHVyYWJsZSBhbmQgbGFzdCBhIGxpZmV0aW1lLiAKVGhlIHVzZSBvZiBmaW5nZXIgcHJpbnRzIGluIGlkZW50aWZpY2F0aW9uIGlzIGZhaXJseSBvbGQsIHVzZWQgaW4gQXNpYSBhbmQgSW5kaWEgbG9uZyBiZWZvcmUgaXQgYmVjYW1lIGEgcG9wdWxhciBwcmFjdGljZSBpbiB0aGUgV2VzdC4gSXQgc2VlbXMgdGhhdCBmaW5nZXIgcHJpbnRzIGFzIGZvcmVuc2ljIGluc3RydW1lbnRzIG9jY3VycyBpbiBsaXRlcmF0dXJlIGJlZm9yZSBpdCBvY2N1cnJlZCBpbiBhY3R1YWwgcG9saWNlIHdvcmsuIApFbGsgbGlrZSBsYW5kIHdpdGggZGVjZW50IGVsZXZhdGlvbiBjaGFuZ2VzLiBJIG5vdCBzdXJlIHdoeSwgYnV0IHlvdSB3aWxsIHNlZSB0aGlzIGZhY3QgcmVwZWF0ZWQgaWYgeW91IHJlc2VhcmNoIHRoZWlyIGhhYml0YXQuClRlbXVqaW5fMTIzICAxIHBvaW50ICBzdWJtaXR0ZWQgMSBkYXkgYWdvCldvdWxkIHlvdSBub3QgaGFydmVzdCBhbGwgdGhlIHBvc3NpYmxlIHJlc291cmNlcyB0byBnYWluIGFuIGFkdmFudGFnZSBpZiB5b3VyIG9wcG9uZW50IGRvZXMgaXQgYXMgd2VsbCBvciB3b3VsZCB5b3Ugd2lsbGluZ2x5IGhhbmRpY2FwIHlvdXJzZWxmIGJ5IG5vdCB1c2luZyB0aGlzIHJlc291cmNlPy4gClNoZXMgbm90IGFmcmFpZCBvZiBhbnl0aGluZy4gClRoNTczOCB1Ck5ldmVyIHlvdSBtaW5kIHRoZSBldmVyIGZhaWxpbmcgcGlzdG9ucy4gTmV2ZXIgeW91IG1pbmQgdGhhdCB0aGUgY2FycnlpbmcgY2FwYWNpdHkgb2YgdGhlIGVuZ2luZSBtdXN0IHBlcnBldHVhbGx5IGluY3JlYXNlLCB0byBjYXJyeSB0aGUgd2VpZ2h0IG9mIGFsbCB0aGUgbmVlZGxlc3NseSB1bmRlcnBlcmZvcm1pbmcsIGZhaWxlZCBhbmQgZmFpbGluZyBwaXN0b25zIHRoYXQgYXJlIHNhYm90YWdlZCBpbiBkZWZlcmVuY2UgdG8gdGhlIGdyZWVkaWVzdCBvZiBwaXN0b25zLiAKUHJvcm9nZWFudCBsJ2FwcGxpY2F0aW9uIGRlIGxhIGxvaSBuIDU1IDM4NSBkdSAzIGF2cmlsIDE5NTUsClRoZSBiYXR0YWxpb24gdHJ5aW5nIHRvIGNyb3NzIGludG8gVGhhaWxhbmQgdG90YWxzIHNvbWUgNjAwIG1lbiBhbmQgaW5jbHVkZXMgVGhhaSBpbnN1ciAgZ2VudHMgZHJpbGxlZCBpbiBOb3J0aCBWaWV0ICBuYW0sIG1lbiBvZiB0aGUgQ29tbXVuaXN0IFBhdGhjdCBMYW8gbW92ZW1lbnQgaW4gTGFvcyBhbmQgTWNvIHRyaWJlc21lbiwgc2FpZCBHZW4uIFByYXBoYXMgQ2hhcnVzYXRoaWNuLCB3aG8gaXMgZGVwdXR5IHByZW1pZXIgYXMgd2VsbCBhcyBjb21tYW5kZXIgaW4gY2hpZWYgb2YgdGhlIFRvIGNoZWNrIHRoZSB0aHJlYXQsIHBoYXMgc2FpZCwgaGVsaWNvcHRlcnMgd2hpcnJlZCBpbnRvIE5hbiBwcm92aW5jZSBjYXJyeWluZyBnb3Zlcm5tZW50IHRyb29wcyBmcm9tIENobGNuZ3JhaSwgaW4gbm9ydGhlcm4gVGhhaSAgbGFuZCBhbmQgdW5pdHMgZnJvbSB0aGUgM3JkIEFybXkgSGVhZHF1YXJ0ZXJzLiBUaGMgYXJlYSB3aGVyZSBUaGFpIHRyb29wcyBhbmQgdGhlIENvbW11bmlzdHMgd2VyZSByZXBvcnRlZCBmYWNpbmcgZWFjaCBvdGhlciBpcyAzNTAgbWlsZXMgbm9ydGhlYXN0IG9mIEJhbmdrb2suIApUaGF0IHNvbWUgaGlnaCBzdGFrZXMgc2hpdCB5b3UgZGlkLCBhbmQgaXQgY29zdCB0aGVtLiAKV2UgZmlndXJlZCB3ZSBmaW5kIHNvbWUgZGlubmVyLiAKIkFtIEkgaGFwcHkgd2UgZGlkbid0IGhvbGQgb3VyIGxlYWQ/IE5vIG9mIGNvdXJzZSBub3QsIiBMb25kb24gY29hY2ggRWxsaW90dCBFdGhlcmluZ3RvbiBzYWlkLiAiV2hlbiB5b3UgZ2V0IHVwIDI0IHlvdSB3YW50IHRvIGZpbmlzaCB0aGUgZ2FtZSB0aGF0IHdheS4gQnV0IGl0J3MgaW1wb3J0YW50IHdlIGdvdCB0aGlzIGRvbmUuIApOb3csIHRoZSB0cmljayBpcywgeW91IGhhdmUgdG8gcGxhY2UgeW91ciBiZXQgYmVmb3JlIHlvdSBzZWUgYW55IG9mIHRoZSBmaXZlIGNhcmRzIHRoYXQgeW91J2xsIG5leHQgcmVjZWl2ZS4gVGhlIGJldCB5b3UgcGxhY2UgaXMgc3VidHJhY3RlZCBmcm9tIHlvdXIgYWNjb3VudCB3aGVuIHlvdXIgY2FyZHMgY29tZXMsIGFuZCB5b3UgY2FuIGNoYW5nZSB5b3VyIGJldCBhbW91bnQgd2l0aCBldmVyeSBuZXcgaGFuZCBpZiB5b3Ugd2FudCB0by4gCkhlIHdhcyBkZWZpbml0ZWx5IHZlcnkgZmxhd2VkIGFuZCBraW5kIG9mIGFuIGFzc2hvbGUsIGJ1dCBoZSB3YXMgbmV2ZXIgYSBjb21wbGV0ZSBhc3Nob2xlLgpUaGUgZGVjaXNpb24gYnkgSnVkZ2UgSmFjayBXZWluc3RlaW4gaW4gQnJvb2tseW4gd2FzIGVtYnJhY2VkIGJ5IGFkdm9jYXRlcyBvZiBjYXJkIGdhbWVzIHB1c2hpbmcgdG8gbGVnYWxpemUgSW50ZXJuZXQgcG9rZXIgaW4gdGhlIFVuaXRlZCBTdGF0ZXMuIFRoZSBqdWRnZSByZWxpZWQgZXh0ZW5zaXZlbHkgb24gdGhlIGZpbmRpbmdzIG9mIGEgZGVmZW5zZSBleHBlcnQgd2hvIGFuYWx5emVkIG9ubGluZSBwb2tlciBnYW1lcy4KU2xvd2x5IGJ1dCBzdXJlbHksIHRoaW5ncyBzdGFydGVkIHRvIHVud3JhdmVsIGZvciB0aGUgV2FuZGVyZXJzLiBBIGZvdXJ0aCBoYW5kIDU4IGxvc3QgMyBwaW5zLCBBIDYyIGZpZnRoIGhhbmQgbG9zdCA1IHBpbnMgYW5kIGEgZGlzYXN0ZXIgb2YgYSBzaXh0aCBoYW5kIDU2IHdoaWNoIGluY2x1ZGVkIGZpdmUgc2NvcmVzIG9mIDYgYW5kIHVuZGVyIGxvc3QgMTEgcGlucy4gCk9yYW5nZSBpcyBhIHJlYWxseSB0b3VnaCBjb2xvciBzbyB5b3VkIGxpa2VseSB3YW50IHRvIGJ1aWxkIGl0IHVwIGZyb20gYSBsaWdodCBicm93biBmaXJzdC4gCkhvcGVmdWxseSB0aGF0IG1hZGUgc2Vuc2UuIApFdmVuIE1pY3Jvc29mdCBoYWQgdG8gYWRtaXQgdGhhdCB0aGVyZSB3YXMgYSBwcm9ibGVtIGFuZCBpbiBKdWx5IG9mIDIwMDcgYWRtaXR0ZWQgdGhhdCBmaXZlIHBlcmNlbnQgb2YgYWxsIFhib3ggMzYwIGNvbnNvbGVzIGFyZSBmcmVlemluZyB1cCBhbmQgaXQgaXMgcHJvYmFibGUgdGhhdCB0aGUgcmVzdCBtYXkgZm9sbG93IHN1aXQuIApUaGUgSm9obiBTbWl0aCdzIFN0YWRpdW0gaGFzIGJlZW4gd29uZGVyZnVsbHkgYXRtb3NwaGVyaWMgZm9yIHRoZSBwYXN0IHR3byBzZWFzb25zLCBhIHBsYWNlIHlvdSBrbmV3IHRoYXQgZXZlcnlvbmUgd2FzIGhhdmluZyBhIGdvb2QgdGltZSByZWdhcmRsZXNzIG9mIHRoZSByZXN1bHQsIGJ1dCBpdCB3YXMgdW51c3VhbGx5IGZsYXQgaGVyZS4uIApXaXphcmRyeUF3YWl0cyAgMzYgcG9pbnRzICBzdWJtaXR0ZWQgMTAgZGF5cyBhZ28KT25lIG5pZ2h0IHdoZW4gSSB3YXMgYWJvdXQgMTggKGRyaW5raW5nIGFnZSBpbiBBdXN0cmFsaWEpLCBJIHdhcyB3YWxraW5nIGJhY2sgZHJ1bmsgZnJvbSB0aGUgcHViLCB0aHJvdWdoIHRoZSBzdWJ1cmJzIHdpdGggYW4gZXF1YWxseSBkcnVuayBmcmllbmQuIEFzIHdlIHdhbGsgcGFzdCBhIGhvdXNlIHdpdGggdGhlIGxpZ2h0cyBvbiBpbiB0aGUgYmVkcm9vbSwgYSBiZWF1dGlmdWwgZ2lybCB3YWxrcyBpbiwgdGFrZXMgaGVyIHRvcCBvZmYsIHdhbGtzIGFyb3VuZCBhIGJpdCwgdGhlbiBwdXRzIGhlciBweWphbWFzIG9uIGFuZCBnb2VzIHRvIGJlZC4gSXQgd2FzIGVwaWMgZm9yIG91ciBob3JueSAxOHlvIG1pbmRzLgoyMDEwIGFuZCAyMDE3IHRoZXJlIHdhcyBhbiBlcGlkZW1pYyBvZiBDLiBkaWZmLCBtYWtpbmcgdGhlc2UgbmV3IGd1aWRlbGluZXMgc29tZSBvZiB0aGUgbW9yZSBoaWdobHkgYW50aWNpcGF0ZWQgaW4gcmVjZW50IG1lbW9yeSwgc2FpZCBHYXJleS4gVGhlIHJldmlzZWQgZ3VpZGVsaW5lcyBkZSBlbXBoYXNpemVkIG1ldHJvbmlkYXpvbGUgaW4gZmF2b3Igb2YgdHdvIG90aGVyIGRydWdzIHRoYXQgcGVyZm9ybWVkIGJldHRlcjogdmFuY29teWNpbiBhbmQgZmlkYXhvbWljaW4sIGJ1dCB0aG9zZSBkcnVncyBjYW4gYmUgZXhwZW5zaXZlIG9yIGhhcmQgdG8gY29tZSBieS4KVGhhbmsgeW91IGZvciB0aGUgYWR2aWNlLCBJIHJlYWxseSBhcHByZWNpYXRlIGl0IQpTYWlkIHdvcmtpbmcgd2l0aCBLbGVpbiB3YXMgbGlrZSBhIGNsYXNzIGluIHRoZSBzdHVkaW8uLiAKWmxhdGFuLCBmcm9tIHRoZSBpc2xhbmQgb2YgSHZhciwgaXMgYSBnb29kIFBsYXZhYyBwcm9kdWNlciB0aGF0IHlvdSBzaG91bGQgYmUgYWJsZSB0byBmaW5kIG1vc3QgcGxhY2VzLCBhcyBhcmUgU2thcmFtdWNhIGFuZCBCdXJhIGZyb20gdGhlIERhbG1hdGlhbiBjb2FzdC4gVGhlIGJlc3QgUGxhdmFjIE1hbGkgYXBwZWxsYXRpb25zIGFyZSBEaW5nYWMgb3IgUG9zdHVwLCBzbyB3aGVuIGluIGRvdWJ0IGxvb2sgZm9yIGVpdGhlciBvbmUgYW5kIHlvdXIgY2hhbmNlcyBhcmUgYmV0dGVyLiAKSWYgeW91IGxpa2VkIGNsaW1iaW5nIG91dHNpZGUsIEkgc3VnZ2VzdCB0cnlpbmcgdG8gZm9jdXMgb24gdGhhdC4gWW91IGNhbiBsb29rIHVwIGVhc3kgcm91dGVzIG5lYXIgeW91LCBhbmQgZWFjaCByb3V0ZSBpcyBhbiBhY2NvbXBsaXNobWVudCBvZiB3aGF0IHlvdXIgYnJhaW4gYm9keSB0b2dldGhlciBjYW4gZG8uIApKciBvZiBPY2N1cGF0aW9uYWwgYW5kIEVudmlybyBNZWQKWWVhaCBJIGtub3cgbW9zdCBvZiB0aGVtIGRvbiB3YW50IHRvLCBJIGp1c3Qgc2F5aW5nIHRoYXQgaW4gdW5kaXZpZGVkIEluZGlhIHdoZXJlIGl0IHdhcyBwb3NzaWJsZSB0byBmb3JtIHRoZWlyIG93biBjb3VudHJ5LCBQdW5qYWIgYW5kIEJlbmdhbCwgdGhleSBkaWQuIFJpZ2h0IG5vdyBpbiBJbmRpYSB0aGVyZSBhcmUgb25seSAyIHJlZ2lvbnMgd2hlcmUgTXVzbGltcyBhcmUgaW4gYSBtYWpvcml0eSwgSmFtbXUgYW5kIEthc2htaXIgYW5kIExha3NoYWR3ZWVwIElzbGFuZHMuIApMaWtlIGFuIGFsbGlnYXRvcidzIG1vdXRoLCB0aGUgUjggY29uc2lzdHMgb2YgdHdvIHNwcmluZyBsb2FkZWQsIGhlYXZ5IGR1dHkgcGxhc3RpYyBqYXdzIGFib3V0IDE4IGluY2hlcyBhcGFydCB0aGF0IHdhbnQgbm90aGluZyBtb3JlIHRoYW4gdG8gc25hcCBzaHV0LiBPbmx5IGluc3RlYWQgb2Ygc2hhcnAgdGVldGgsIGVhY2ggc2lkZSBvZiB0aGUgUjgsIGRlc2lnbmVkIGJ5IGFuIGVuZ2luZWVyIHdpdGggYSBsb3ZlIGZvciBlbmR1cmFuY2Ugc3BvcnRzLCBpcyBsaW5lZCB3aXRoIGZvdXIgc21vb3RoIHdoZWVscywgdGhlIGtpbmQgZm91bmQgb24gaW5saW5lIHNrYXRlcy4KVGhvc2UgcmVnaXN0ZXJlZCB0byB1c2UgYW4gRkMySUQgKEhlcmVieSByZWZlcnJlZCB0byBhcyBvciAiTWVtYmVyKHMpIiksIG9yIGFsbCB0aG9zZSAoaW5jbHVkaW5nIE1lbWJlcnMpIHdobyBwb3RlbnRpYWxseSB1c2UgYW55IG9mIE91ciBTZXJ2aWNlcyAoSGVyZWJ5IHJlZmVycmVkIHRvIGFzICJVc2VyKHMpIikgY29uc2VudCB0byBob2xkaW5nIGZ1bGwgbGlhYmlsaXR5Li4gCkZvciBwcmVmb2xkcywgSSBsb3ZlIGNvdHRvbiBhbmQgYmFtYm9vLiAxMDAlIGNvdHRvbiBpcyBhYnNvcmJlbnQgYW5kIHRoZSBtb3N0IGVjb25vbWljYWxseSBmcmllbmRseS4gSWYgeW91IG9rIHdpdGggc3BlbmRpbmcgYSBsaXR0bGUgbW9yZSwgYmFtYm9vIGlzIHRoZSB3YXkgdG8gZ28uIEl0IGFjdHVhbGx5IGEgYmxlbmQgb2YgcmF5b24gbWFkZSBmcm9tIGJhbWJvbyAoNDUlKSBhbmQgY290dG9uICg1NSUpLiBJdCBhYnNvcmJzIG1vcmUgdGhhbiAxMDAlIGNvdHRvbiwgY2FuIGhvbGQgYSBzbmFwcGkgb3IgYm9pbmdvIGp1c3QgbGlrZSBjb3R0b24gKHNpbmNlIGl0IHdvdmVuKSBhbmQgY2xlYW5zIGp1c3QgYXMgZWFzaWx5LgpJIHRoaW5rIHdlIGhpdCB0aGUgZmlyc3Qgc2VydmljZSBzdGF0aW9uIHdoZW4gd2UgZ290IGludG8gR2VybWFueS4gCldlIGFsbW9zdCB3ZW50LCBidXQgUG9wcyB3YXMgc3RheWluZyB0aGVyZSAoY3JlZGl0IGZvciBhbiBhYnNvbHV0ZWx5IEJFQVVUSUZVTCByb29tLCBjb21wbGV0ZSB3aXRoIGRpbW1lciBsaWdodHMsIGphY3V6emkgdHViLCBzbWFydCBldmVyeXRoaW5nLCBldGMpIGFuZCBoYWRuIGV2ZXIgY2hlY2tlZCBvdXQgdGhlIHJvb2Z0b3AuIApCdXQgdGhlIG1vc3QgZXllIHBvcHBpbmcgcmlzZXMgaGF2ZSBjb21lIGluIHJlY2VudCBkZWNhZGVzIGFtaWQgYW4gZXJhIG9mIG1lZ2EgY2FzaW5vIHJlc29ydHMgdGhhdCBiZWdhbiB3aGVuIFN0ZXZlIFd5bm4gb3BlbmVkIHRoZSBNaXJhZ2UgaW4gMTk4OS4gCkl0IHR1cm5zIG91dCB0aGF0IGl0J3Mgbm90IGVuIHZvZ3VlIHRvIGRpc2N1c3MgeW91ciBzdHJ1Z2dsZXMgd2l0aCBzb21lb25lIHN1ZmZlcmluZyBmcm9tIGFueSBtZW50YWwgaWxsbmVzcywgZXZlbiB3aGVuIGl0IHNrZXdzIHRvd2FyZCBvciBqdXN0IGZsYXQgb3V0IGlzIGFidXNpdmUuIEkgYW0gc28gZ2xhZCBJIGZvdW5kIHRoaXMgc3BhY2UgZXZlbiBpZiBqdXN0IHRvIGNhc3VhbGx5IHNjcm9sbCB0aHJvdWdoIHRoZSBwb3N0cy9jb21tZW50cyB0byBmZWVsIGxlc3MgYWxvbmUuIApNYWx0YW11ciB1CldoZW4gYSBMYXMgVmVnYXMgd29tYW4ncyBkYXVnaHRlciBiZWZyaWVuZGVkIGEgbWFsZSBjbGFzc21hdGUgYXQgYSBMYXMgVmVnYXMgaGlnaCBzY2hvb2wsIHRoZSBtb3RoZXIgd2FzIHRocmlsbGVkIHRoZSB0ZWVuIHdhcyBtYWtpbmcgZnJpZW5kcy4KQWxsIGNhc2VzIGZvciBjb25zaWRlcmF0aW9uIHNob3VsZCBiZSBtYWlsZWQgKHRvIHRoZSBhZGRyZXNzIGFib3ZlKSB3aXRoIGEgYnJpZWYgZmFjdHVhbCBzdW1tYXJ5IG9mIHRoZSBjYXNlLCBpbmNsdWRpbmcgdGhlIHNwZWNpZmljIGNoYXJnZXMgYW5kIGNvbnZpY3Rpb25zIGFuZCBhIGxpc3Qgb2YgdGhlIGV2aWRlbmNlIHVzZWQgYWdhaW5zdCB0aGUgZGVmZW5kYW50LiAKVGhleSB3b3VsZCBiZSBkZWFkIGFuZCBJIHdvdWxkIGRpc3Bvc2Ugb2YgdGhlbSBhY2NvcmRpbmdseS4uIApPdXIgcXVlc3Rpb25zIGNvbnRpbnVlIHRvIGdyb3cgbGlrZSwgY2FuIExvbmRvbiBtb3ZlIGludG8gYSBwcm9zcGVyb3VzIGZ1dHVyZSB3aGVuIGhhbGYgb2YgaXRzIHdvcmtmb3JjZSAoNDggcGVyIGNlbnQpIGlzIGluIHZ1bG5lcmFibGUgb3IgcHJlY2FyaW91cyBlbXBsb3ltZW50PyBUaGF0IGEgc2VyaW91cyBzdGF0aXN0aWMsIG9uZSB3ZSBhcmUgdG9sZCB3aWxsIGNvbnRpbnVlIHRvIGNsaW1iLCBsZWF2aW5nIHRob3NlIHN0aWxsIGFibGUgdG8gZmluZCB3b3JrIHdpdGggbWluaW11bSB3YWdlcyBhbmQgbm8gYmVuZWZpdHMuLiAKUGxlYXNlIHZpZXcgb3VyIHdpa2kgZm9yIHN1Z2dlc3Rpb25zIG9mIHdoZXJlIHRoZXNlIHN1Ym1pc3Npb25zIGNhbiBiZSBvZmZlcmVkLiBGdW5uaWVzdCBzaGl0IEkgc2F3IHdhcyBvbiB0aGUgUmVkIGxpbmUgbGF0ZSBvbmUgbmlnaHQuIFRoaXMgZHVkZSB3aG8gcHJvYmFibHkgaGFkIGEgbWVudGFsIGlsbG5lc3MgYW5kIG1heSBoYXZlIGJlZW4gaG9tZWxlc3Mga2VwdCBzYXlpbmcgcmFjaXN0IHRoaW5ncyB3aGlsZSBlYXRpbmcgc29tZSBGcmVuY2ggZnJpZXMgaGUgcHJvYmFibHkgZm91bmQgb24gdGhlIHRyYWluLiAKTWl0IHNlaW5lciBhdXNnZWdsaWNoZW5lbiBQZXJzbmxpY2hrZWl0IGlzdCBlciBmciB2aWVsZSBkZXIgRmVscyBpbiBkZXIgQnJhbmR1bmciLiAKUHJpbmNpcGFsIGFtb25nc3QgdGhlc2UgaXMgdGhhdCB1c2Ugb2Ygc3Vuc2NyZWVucyBzaG91bGQgYmUgb25lIHBhcnQgb2YgYSBjb21wcmVoZW5zaXZlIHN1biBhdm9pZGFuY2Ugc3RyYXRlZ3kgdGhhdCBpbmNsdWRlcyBtb3ZpbmcgaW50byBzaGFkZSB3aGVuIHRoZSBzdW4gaXMgbmVhciB6ZW5pdGggYW5kIHRoZSB1c2Ugb2YgcHJvdGVjdGl2ZSBjbG90aGluZy4KQXQganVzdCB1bmRlciAzMDAgc2VhdHMgICBwbHVzIHBhdGlvIHNlYXRpbmcgdGhhdCB3aWxsIGhvc3QgODggZ3Vlc3RzIG9uY2UgdGhlIHdlYXRoZXIgd2FybXMgdXAgICB0aGUgTG92ZWpveSBicmV3ZXJ5IGlzIE5pZ2h0IFNoaWZ0J3MgbGFyZ2VzdCBsb2NhdGlvbiB0byBkYXRlLiAKVGhlIHNpdHVhdGlvbiB0aGF0IHJlc3VsdGVkIGluIEN1YmEsIG9mIGNvdXJzZSwgd2l0aCBpbnNwaXJlZCByZXZvbHV0aW9uLCBhbHNvIHBvaW50cyB0byB0aGUgZmluZSBsaW5lIHRoZSBVbml0ZWQgU3RhdGVzIG9jY2FzaW9uYWxseSBoYWQgdG8gd2Fsay4gVGhlIGdlbmVyYWwgaW5zdGFiaWxpdHkgb2YgYSBudW1iZXIgb2YgY291bnRyaWVzIGluIExhdGluIEFtZXJpY2Egd2FzIGFuIGF3a3dhcmQgcHJvYmxlbSwgd2l0aCBzZXZlcmFsIG9mIHRoZW0gaGF2aW5nIHJlY2VudGx5IGdvbmUgdGhyb3VnaCByZXZvbHV0aW9uLCBpZiBub3QgdGhlbiBjYXVnaHQgaW4gdGhlIG1pZGRsZSBvZiBjaXZpbCB3YXIgdGhlbXNlbHZlcy4gVmVuZXp1ZWxhLCBDb2xvbWJpYSwgYW5kIEJvbGl2aWEgd2VyZSBhbGwgaW4gdGhlIG1pZHN0IG9mIHBvbGl0aWNhbCBpbnN0YWJpbGl0eSwgd2l0aCBnb3Zlcm5tZW50cyBlbGV2YXRlZCBieSBjb3VwIG9yIHJldm9sdXRpb24sIGFuZCB3aGlsZSBoYXZpbmcgbm8gZGVzaXJlIHRvIGFsaWVuYXRlIHRoZW0sIGZvciB0aGUgVVMgdG8gcmVjb2duaXplIHRoZW0gbWlnaHQgZ2l2ZSB1bmludGVuZGVkIG1vcmFsIGFpZCB0byB0aGUgQ29uZmVkZXJhY3kuIFRoZSBiaWdnZXN0IGV4YW1wbGUgaXMgaW4gQ2FyYWNhcy4gV2hlbiB0aGUgQW1lcmljYW4gQ29uc3VsIEhlbnJ5IFQuIEJsb3csIGFycml2ZWQgaW4gVmVuZXp1ZWxhIGluIE5vdmVtYmVyIDE4NjEsIGFzIGluc3RydWN0ZWQgaGUgZGVjbGluZWQgdG8gcHJlc2VudCBoaXMgY3JlZGVudGlhbHMgdG8gR2VuLiBQYWV6LCB3aG8gcmVjZW50bHkgaGFkIG92ZXJ0aHJvd24gdGhlIGxlZ2FsbHkgZWxlY3RlZCBQcmVzaWRlbnQsIGJ1dCBkaWQgaGlzIGJlc3QgdG8gbWFpbnRhaW4gZ29vZCBzb2NpYWwgcmVsYXRpb25zLiBBIHllYXIgbGF0ZXIsIGhpcyByZXBsYWNlbWVudCwgRXJhc3R1cyBELiBDdWx2ZXIsIGhvd2V2ZXIgaGFkIG5vIGluc3RydWN0aW9ucyBhbmQgY2hvc2UgdG8gcmVjb2duaXplIHRoZSBQYWV6IGdvdmVybm1lbnQsIHdoaWNoIGZvcmNlZCBTZXdhcmQgdG8gcmVwdWRpYXRlIGhpcyBhY3Rpb25zIGluIGEgdGlwIHRvZWluZyBjb21tdW5pY2F0aW9uIGFib3V0IHRoZSBVbml0ZWQgU3RhdGVzIG5vdCBpbiBkb21lc3RpYyBkaXNwdXRlcyBhbmQgY3JlYXRpbmcgYSBmYWlybHkgdGVuc2Ugc2l0dWF0aW9uIGJldHdlZW4gdGhlIENvbnN1bCBhbmQgdGhlIGdvdmVybm1lbnQsIG9ubHkgZmluYWxseSByZXNvbHZlZCBhZnRlciBhIHBlYWNlIHRyZWF0eSwgYW5kIGV2ZW50dWFsIG5ldyBjb25zdGl0dXRpb24sIHdhcyBzaWduZWQgaW4gMTg2NCwgYWxsb3dpbmcgY3JlZGVudGlhbHMgdG8gYmUgKGFnYWluKSBwcmVzZW50ZWQgd2l0aCBXYXNoaW5ndG9uIGJsZXNzaW5nLgpOSUtLSSBXSUxTT04gU01JVEg6IFRoZW4ganVzdCBhcyBxdWlja2x5LCB0aGUgcGxhbiB3YXMgc2N1dHRsZWQgYnkgdGhlIHRlYW0ncyBtZW1iZXJzLCB2b3RpbmcgdG8gbGV0IHRoZW0gc3RheS4KQnV0IGluIG5vIHdheSBpcyBpdCBoZWxwZnVsIHdoZW4gaW50ZXJhY3Rpbmcgd2l0aCB5b3VyIHRlYW0gbWF0ZXMuIEluIGZhY3QsIHdoZW4gaW50ZXJhY3Rpbmcgd2l0aCBnb2xkIHBsYXllcnMgaXQgaXMgbW9yZSBoYXJtZnVsIHRvICJwdXNoIiBhIG1ldGEgcGljay5Tb21ldGhpbmcgZGlmZmVyZW50IGlzICJiZWluZyBhIGdvbGQgbGV2ZWwgc3RyYXRlZ2ljIHRoaW5rZXIiLCB3aGljaCBtZWFucyB5b3UgY2FuIGluc2lzdGVudCBvbiBhIG1haW4gaGVhbGVyL3Rhbmsgb3IgZ28gYSBwb3B1bGFyIGNvbWJvIGxpa2UgdGhlIHRhbmsgZHVvcywgcGhhcm1hY3ksIHphcnpvIGV0Yy5Lbm9ja2JhY2sgZGlzdGFuY2UgaXMgbm93IG1vcmUgY29uc2lzdGVudEhlcm9lcyB0aGF0IGFyZSBmbHlpbmcgY2FuIG5vdyBiZSBrbm9ja2VkIGJhY2sgYW5kIHNsb3dlZERldmVsb3BlciBDb21tZW50czogS25vY2tiYWNrcyBhcmUgbm93IGxlc3MgYWZmZWN0ZWQgYnkgaG93IHRoZSBlbmVteSB3YXMgbW92aW5nIHdoZW4gdGhleSB3ZXJlIGhpdC4gCjEuIApJdCBpcyBhIHNtYWxsIG5ldHdvcmsgd2hpY2ggc2hhcmVzIGF1ZGllbmNlIGJhc2UgaW4gdGhlIG1pZGRsZSBvZiB0aGUgcGFja29mIG9ubGluZSBzaXRlcy4gCldvcmtpbmcgd2l0aCBub24gcHJvZml0IGdyb3Vwcywgd2UgcmVmb3JtZWQgcmVwb3J0aW5nIHJlcXVpcmVtZW50cyBzbyBub24gZ292ZXJubWVudCBvcmdhbml6YXRpb25zIGNhbiBzcGVuZCBtb3JlIHRpbWUgcHJvdmlkaW5nIHZhbHVlZCBzZXJ2aWNlcyB0byB0aGVpciBjbGllbnRzIHJhdGhlciB0aGFuIHByZXBhcmluZyBnb3Zlcm5tZW50IGZvcm1zLiBFbGltaW5hdGluZyB0aGUgbmVlZCB0byBjb2xsZWN0IGFuZCByZXBvcnQgaW5mb3JtYXRpb24gZ292ZXJubWVudCBkb2VzbiB1c2Ugc2F2ZXMgdGltZS4gV2UgYWxzbyByaWdodCBzaXplZCBmaW5hbmNpYWwgcmVwb3J0aW5nIHdoZW4gb3JnYW5pemF0aW9ucyByZWNlaXZlIHNtYWxsIGdyYW50czsgaW4gc29tZSBjYXNlcywgbm9uIHByb2ZpdHMgd2VyZSByZXF1aXJlZCB0byBzcGVuZCB1cCB0byBoYWxmIG9mIHRoZWlyIGdyYW50IG9uIGF1ZGl0aW5nIGZlZXMhClRoZXkncmUgdXN1YWxseSBwbGF5aW5nIHZlcnkgZWFybHksIHZlcnkgYnJva2VuLCB2ZXJzaW9ucyBvZiBzb2Z0d2FyZSB0aGF0IGJhcmVseSBxdWFsaWZpZXMgYXMgYSBnYW1lIHlldC4uIApIYXZlIHlvdSBjb25zaWRlcmVkIHRoZSBza2kgcGF0cm9sIGFzIGEgdm9sdW50ZWVyPyBJIGFtIGFzc3VtaW5nIHlvdSBhcmUgbmVhciBhIHNraSBoaWxsLiBUaGlzIGlzIGEgZ3JlYXQgd2F5IHRvIGdldCBvdXQgYW5kIGJlIGFjdGl2ZSB3aGlsZSBsZWFybmluZyBhIHRvbi4KRW50ZXJ0YWlubWVudCBBcnRpY2xlcyAgQXVndXN0IDIyLCAyMDA5aGFzIGFsd2F5cyBiZSBvbmUgb2YgdGhlIG1vc3QgcG9wdWxhciBnYW1lcyB0byBwbGF5LiBJdCdzIGEgZ3JlYXQgd2F5CkRyaW5raW5nIGlzIHRoZSB1bmRlcmx5aW5nIGNvbmNlcHQgYmVoaW5kIG1hbnkgbWFuIGNhdmVzLCBzbyB3aHkgbm90IGJlIHVwZnJvbnQgYWJvdXQgaXQgd2l0aCBhIGZ1bGwgb24gYmFyIHRoZW1lPyBUaGlzIGxhaXIgY2FuIHRha2UgbWFueSBmb3Jtcy4gWW91IG1heSB3YW50IHRvIGdvIHVwc2NhbGUgICBhbiBJcmlzaCBwdWIgdGhlbWUgd2l0aCBwb2xpc2hlZCB3b29kIGFuZCBHdWlubmVzcyBvbiB0YXAsIG9yIG1heWJlIGEgd2luZSBjZWxsYXIgYW5kIGEgaHVtaWRvci4gT3IgeW91IG1heSBiZSB0aGUgdHlwZSB0byBwcmVmZXIgb3ZlciB0aGUgdG9wIGNoZWVzeSBkY29yICAgdGhpbmsgRGF5dG9uYSBCZWFjaCBzcHJpbmcgYnJlYWssIGNvbXBsZXRlIHdpdGggbmVvbiBzaWducywgQnVkd2Vpc2VyIGFuZCBTd2VkaXNoIEJpa2luaSBUZWFtIHBvc3RlcnMuIApTa3l3YWxrZXIgd2FzIGJlbGlldmVkIHRvIGJlIHRoZSBDaG9zZW4gT25lIG9mIEplZGkgcHJvcGhlY3ksIG9uZSB3aG8gd291bGQgYnJpbmcgYmFsYW5jZSB0byBUaGUgRm9yY2UgYnkgZGVzdHJveWluZyB0aGUgU2l0aCwgd2hpY2ggd2FzIHdoeSB0aGUgSmVkaSBDb3VuY2lsIGNob3NlIHRvIGJlbmQgdGhlIEplZGkgQ29kZSBhbmQgcGVybWl0IGhpcyB0cmFpbmluZy4uIApJdCBnZXR0aW5nIGNsb3NlIHRvIHRoZSBob2xpZGF5cyBhbmQgc2hlIGFza3MgbWUgd2hhdCBJIGRvaW5nIGZvciB0aGUgaG9saWRheXMuIApUaGUgZnJpZW5kbHkgYW5kIHRhbGVudGVkIHN0YWZmIGdyZWV0cyBwYXRyb25zIGF0IHRoZSBkb29yIGFuZCBpbW1lZGlhdGVseSBiZWdpbnMgdGhlIHBhbXBlcmluZyBwcm9jZXNzLiAKSXMgdXBzZXR0aW5nIGl0IGhhcyBxdWl0ZSBsaXRlcmFsbHkgZGVzdHJveWVkIGhlciBsaWZlLCBTdXBlcmlvciBDb3VydCBKdXN0aWNlIEtpcmsgTXVucm9lIHNhaWQuClBsYXllcnMgYXJlIHN1cmUgdG8gZW5qb3kgYWN0aW9uIHBhY2tlZCBnYW1pbmcsIHRhYmxlc2lkZSBkaW5pbmcgYW5kIGEgc2VsZiBzZXJ2aWNlIGJldmVyYWdlIGJhci4gCk5vdCBvbmx5IGlzIHRoZSBkaXN0YW5jZSBncnVlbGluZywgdGhlcmUncyBhIHRpbWUgbGltaXQgZm9yIGVhY2ggc2VnbWVudC4gClBlcmNlaXZlZFNsaWdodCB1CkJsb25kZSBoYWlyc3R5bGVzIGxvb2sgZ3JlYXQgd2l0aCBhYnNvbHV0ZSBwb2tlciBzdHJhaWdodCBoYWlyIGFuZCBwYXJ0aW5ncyBjYW4gYnJpbmcgYWJvdXQgYSBkaWZmZXJlbnQgbG9vay4gTWFrZSBzdXJlIHRvIGtlZXAgYXJyYW5naW5nIHlvdXIgaGFpciB3aXRoIHRoZSBmaW5nZXJzIGV2ZXJ5IHRpbWUgaXQgZ2V0cyBhd3J5LiAKTCAzIFcxNTogRHVkZSAgIEkgaGl0dGluZyBhZ2UgNDUgaW4gTWF5ICAgSSBoaXQgdGhlIGd5bSB0aHJlZSBkYXlzIGEgd2VlaywgbGlmdCB3ZWlnaHRzLCBydW4gYSBsb3QsIGFuZCBoYXZlIHdoYXQgSSB0aGluayBpcyBhIGRlY2VudCAiY3V0IGJvZHkiIHNvIEkgZmVlbCB0aGF0IEkgYW0gaW4gcmVhc29uYWJseSBnb29kIHNoYXBlIGZvciBteSBhZ2UuIFdpdGggdGhhdCBzdGF0ZWQsIGl0IGFsd2F5cyBnZXRzIG1lIG1vdGl2YXRlZCBhbmQgcHVtcGVkIHdoZW4gSSBzZWUgYSBwZXJzb24gKG1hbGUgb3IgZmVtYWxlKSBvZiBhbnkgYWdlIHdobyBpcyAidmlzdWFsbHkiIG91dCBvZiBzaGFwZS9vdmVyd2VpZ2h0L25vdCBtdXNjbGVkIHdvcmtpbmcgb3V0IGFuZCBicmVha2luZyBhIHN3ZWF0LiBGb3IgZm9sa3MgbGlrZSB5b3UsIEkgc2F5IGp1c3QgImRvIGl0IiBhbmQgZ2l2ZSB0aG9zZSB3aG8gImRvIGl0IiB0aGUgc3VwcG9ydCEhISBCZSBzdHJvbmchISEuIApJIHN0b3BwZWQgYnkgYSA3LzExIG9uIHRoZSB3YXkgaG9tZSB5ZXN0ZXJkYXkgYXJvdW5kIG1pZG5pZ2h0IGluIGEga2luZGEgc2tldGNoeSBhcmVhIDIwIG1pbnV0ZXMgZnJvbSBteSBob3VzZSwgc28gSSBhbHJlYWR5IHdhc24ndCBjb21mb3J0YWJsZS4gClNpZ25pbmcgYSBwZXRpdGlvbiBpcyBuaWNlLCBidXQgaXQgYWxzbyBwb2ludGxlc3MuIEkgZ3JldyB1cCBDYXRob2xpYyBhbmQgd2VudCB0byB0aGVpciBzY2hvb2xzIGZyb20ga2luZGVyZ2FydGVuIHRocm91Z2ggdW5pdmVyc2l0eSwgYW5kIHF1aXR0aW5nIHRoYXQgd2hvbGUgc2NlbmUgd2FzIHRoZSBlYXNpZXN0IGRlY2lzaW9uIEkgZXZlciBtYWRlLiBJIHdvdWxkbiBsZWF2ZSBvbmUgb2YgbXkga2lkcyBpbiB0aGUgY2FyZSBvZiBhIGNhdGhvbGljIHByaWVzdCBmb3IgMzAgc2Vjb25kcy4KSGlzIHNvbnMgYW5kIGhpcyBkYXVnaHRlciB3ZXJlIHF1ZXN0aW9uZWQgYnkgdGhlIEpJVCBhbmQgbWFueSB0aGluZ3MgY2FtZSB0byBsaWdodC4gCkJDIGhhcyBnb3QgYW1hemluZyB3aW5lLiBNeSB3aW5lIHRhc3RlIGlzIHRoZSBleGFjdCBvcHBvc2l0ZSBvZiB5b3VycyAgIEkgbGlrZSBzaGFycCBhY2lkaWMgU2F1dmlnbm9uIEJsYW5jIGFuZCByaWNoIE1hbGJlY3MgYW5kIGNhYiBzYXZzIHRoYXQgYXJlIGhlYXZ5IG9uIHRoZSB0YW5uaW5zLiBCdXQgdGhlcmUgaXMgc29tZXRoaW5nIGZvciBldmVyeW9uZSBpbiBCQy4gSSBoaWdobHkgcmVjb21tZW5kIFVuc3dvcnRoIFZpbmV5YXJkIGFuZCBDaGVycnkgUG9pbnQgVmluZXlhcmQgaW4gdGhlIENvd2ljaGFuIFZhbGxleS4gTWlzc2lvbiBIaWxsIGlzIHByb2JhYmx5IG15IGZhdmUgQkMgd2luZSB0aG91Z2ggYW5kIEkgYmVsaWV2ZSB0aGF0IGNvbWVzIGZyb20gdGhlIE9rYW5hZ2FuLiBJIG1vdmVkIHRvIEFsYmVydGEgYWJvdXQgYSB5ZWFyIGFnbyBhbmQgdGhlIEJDIHdpbmUgc2VsZWN0aW9uIGhlcmUgaXMgdmVyeSBwb29yIGFuZCBJIG1pc3MgaXQgYSBsb3QuIGlmIHlvdSdyZSBvbiB0aGUgaXNsYW5kLCB5b3Ugc2hvdWxkIGRlZmluaXRlbHkgZ28gZm9yIGx1bmNoIGF0IFVuc3dvcnRoLiBUaGV5IGhhdmUgYSBmYW50YXN0aWMgbGl0dGxlIHJlc3RhdXJhbnQgdGhlcmUuIEFuZCB3aGlsZSB5b3UncmUgdGhlcmUsIGNoZWNrIG91dCBNZXJyaWRhbGUgQ2lkZXJ5IHdoaWNoIGlzIGFib3V0IDEwIG1pbnMgYXdheS4KU2hvcnRseSBiZWZvcmUgbXkgcmVtb3ZhbCB0aGVyZSB3YXMgYW5vdGhlciBkaXNjdXNzaW9uIHN0YXJ0aW5nIGFib3V0IHZpZ2lsYW50ZSBqdXN0aWNlIGFuZCBkcmFnZ2luZyBwZW9wbGUgYmVoaW5kIHRydWNrcyB0byBnZXQganVzdGljZSBmb3IgdGhlIGRvZy4gCkp1bXAgdG8gY29udGVudG15IHN1YnJlZGRpdHMKRm9yZ290IHdoeSBEci4gUGVwcGVyIGNyZWF0ZWQgaGlzIGRyaW5rLiBBbGwgSSBjYW4gcmVtZW1iZXIgd2FzIHdoYXQgd2UgdG9sZCB0aGUgQmF5bG9yIEdpcmxzIGJhY2sgaW4gdGhlIG1pZCA4MHMsIGFuZCB0aGF0IHdhcyBEci4gUGVwcGVyIHdhcyBhIFZldCBhbmQgdGhlIGNvbGEgd2FzIHRvIGN1cmUgdGhlIGFjaGUgaW4gYSBjb3cgdGhpcmQgc3RvbWFjaC4gSSBhbSB0b28gbGF6ZSB0byBsb29rIGl0IHVwIHJlYWwgcmVhc29uIGhlIG1hZGUgaXQuCklucXVlc3Qgd2lsbCBzaGVkIG1vcmUgbGlnaHQgb24gZmF0YWwgc2hvb3RpbmcKU29tZXRpbWVzIG1vcmUgaWYgYmlnIHRvdXJuYW1lbnRzIGFyZSBnb2luZyBvbiBhbmQgc29tZXRpbWVzIGxlc3MgaWYgSSBtYWtlIGRlY2VudCBtb25leSBmYXN0ZXIuIApBbiBvZmZpY2lhbCBkaXJlY3RseSBmYW1pbGlhciB3aXRoIHRoZSBwcm9jZXNzIGluIHJlY2VudCB5ZWFycywgc2F5cyBvbmUgcHJldmlvdXMgSm9pbnQgQ2hpZWZzIENoYWlybWFuIHJlZ3VsYXJseSBsb29rZWQgb3ZlciBhdCB0aGUgQ2hpZWYgSnVzdGljZSBhdCB0aGUgdGltZS4gSWYgaGUgYW5kIHRoZSByZXN0IG9mIHRoZSBjb3VydCBzdG9vZCwgaXQgbXVzdCBiZSBjb25zaWRlcmVkIHN1ZmZpY2llbnRseSBwb2xpdGljYWxseSBuZXV0cmFsLCBhbmQgdGhlIG1pbGl0YXJ5IGNoaWVmcyB3b3VsZCB0aGVuIHN0YW5kLi4gCkFsbCBvZiBob2NrZXkgYXJvdW5kIHRoZSB3b3JsZCB3aWxsIG1pc3MgVGVkIExpbmRzYXkuIEkgY2FuIHRlbGwgeW91IGlzIGhlIHdhcyBhIGdyZWF0IHBsYXllci4gQSBzY3JhcHB5IGd1eSB3aG8gd291bGRuIHRha2Ugbm8gZ3J1ZmYgZnJvbSBub2JvZHkuIApJZiB5b3UgY2FuIHNlZSB5b3Vyc2VsZiBnb2luZyBpbnRvIGEgImZ1bGwgcmVsYXBzZSIgdGhlbiB3aGF0IHZhbHVlcyBkaWQgeW91IHJlYWxseSBob2xkIG9uIHRoZSB0b3BpYz8gSW1hZ2luZSB5b3Vyc2VsZiBzYXlpbmcgdGhlIHNhbWUgdGhpbmcgYWJvdXQgcmFjZSBoYXRyZWQuCkFueSBhdHRlbXB0IHRvIGV2ZXIgYm9pbCB0aGVzZSB0aGluZ3MgZG93biBpbmV2aXRhYmx5IGxlYWRzIHRvIHBhcmFkb3hlcyBhbmQgY29udHJhZGljdG9yeSBzdGF0ZW1lbnRzLiBJIHRoaW5rIHRoYXQgd2h5IGtvYW5zIGFuZCByaWRkbGUgbGlrZSBwYXNzYWdlcyBhcmUgc28gY29tbW9uIGluIHRoaXMgdHJhZGl0aW9uLiBUaGVpciBsaWtlIGpva2VzIGluIGEgd2F5IHlvdSBqdXN0ICJnZXQgaXQiIHJlZmxleGl2ZWx5IHdpdGhvdXQgdHJ5aW5nIHRvIGVuZGxlc3NseSBleHBvdW5kIG9uIGl0Li4gCkEgbGlzdCBvZiBmaWx0ZXJzIHdpbGwgYXBwZWFyLCBzY3JvbGwgZG93biB0byAiUmVzaXplIiBhbmQgY2xpY2sgT0suIApUT0tZTyAgIEEgMTE2IHllYXIgb2xkIEphcGFuZXNlIHdvbWFuIHdobyBsb3ZlcyBwbGF5aW5nIHRoZSBib2FyZCBnYW1lIE90aGVsbG8gd2FzIGhvbm91cmVkIFNhdHVyZGF5IGFzIHRoZSB3b3JsZCdzIG9sZGVzdCBsaXZpbmcgcGVyc29uIGJ5IEd1aW5uZXNzIFdvcmxkIFJlY29yZHMuIEhlciBmYW1pbHkgYW5kIHRoZSBtYXlvciB3ZXJlIHByZXNlbnQgdG8gY2VsZWJyYXRlLgpHb2luZyBmcm9tIDIgdG8gMSB3aWxsIGRlZmluaXRlbHkgYmUgYSBiaWcgY2hhbmdlIGJ1dCBob25lc3RseSwgdGhlIGZpcnN0IGdhbWUgc3RpbGwgaG9sZHMgdXAgc3VycHJpc2luZ2x5IHdlbGwgaW4gdGVybXMgb2YgZ2FtZXBsYXkgYW5kIHN0b3J5IChhbmQgZ3JhcGhpY3Mgb24gdGhlIE9uZSBYIGFyZSBva2F5aXNoKS4gCk5vIHF1ZXN0aW9uIHRoZSBzY291dGluZyBzdGFmZiBhbHdheXMgZ2V0cyBleGNpdGVkIHdpdGggdGhlIG1vcmUgcGlja3MgdGhleSBoYXZlLCBhbmQgSSBrbm93IHRoZSBvcmdhbml6YXRpb24gZGlkIGEgZ3JlYXQgam9iIG9mIGFjcXVpcmluZyB0aGUgcGlja3MgdGhhdCB3ZSBkbyBoYXZlIHRoaXMgeWVhciwgTGFtb3JpZWxsbyBzYWlkLiAKTW9zdCBvZiB1cyBhcmUganVzdCBub3QgdGhlIHNhbWUgcGVvcGxlIHdlIHdlcmUgaW4gb3VyIGVhcmx5IDIwIFRoZSBmYWN0IHRoYXQgaGUgaGFzIGEgbW9yZSByZWNlbnQgY2hhcmdlIGFuZCBoZSBoYXMgbm90IGJyb3VnaHQgaXQgdXAgdG8geW91IGluZGljYXRlIGhlIGlzIHNoYWR5Li4gCkhSIGNyZWF0ZXMgaW5lZmZpY2llbmNpZXMgYnkgaW52b2x2aW5nIHRoZW1zZWx2ZXMgaW4gYSBkZWNpc2lvbiBtYWtpbmcgcHJvY2VzcyB0aGF0IHRoZXkgb2ZmZXIgbm8gdmFsdWUgdG8gYW5kIHdoaWNoIHRoZXkgaGF2ZSBubyBwb3dlciBpbi4gV2hhdCB0aGUgbWFuYWdlcnMgYXQgeW91ciBjb21wYW55IGFyZSBzYXlpbmcgaGVyZSBpcyBlcXVpdmFsZW50IHRvIG1lIGdldHRpbmcgdXBzZXQgdGhhdCBJIGhhdmUgdG8gZHJpdmUgdGhlIGNhciB0byBNY0RvbmFsZHMgYmVjYXVzZSB0aGUgZ292ZXJubWVudCB3b24gbGV0IG15IDggeWVhciBvbGQgc29uIGRvIGl0LiBMaWtlIGNtb24gVHJ1bXAgaGUgZG9lcyBncmVhdCBvbiB0aGUgYnVtcGVyIGNhcnMsIGp1c3QgbGV0IGhpbSBkbyB0aGUgZHJpdmluZyBJIHRvbyBidXN5IS4gCk1ldGFzdGFzZW4gc2luZCBGcnVjaHRrcnBlciB3aWUgZWluIFBpbHoiLCBqZWRvY2ggYmVyZWl0cyBlaW4gdm9sbHN0bmRpZ2VzIE15emVsIi4gUmVpZmUgTWV0YXN0YXNlbiByZWllbiBzaWNoIGxvcyB1bmQgdmVydGVpbGVuIHNpY2ggaW0gZ2VzYW10ZW4gS3JwZXIsIHdvIHNpZSBzaWNoIGFuIGVpbmVyIFNjaHdhY2hzdGVsbGUgbmllZGVybGFzc2VuIHVuZCB3ZWl0ZXIgd2FjaHNlbi4gCkJ1dCB0aGF0IGp1c3QgcHJvdmlkZSBhbm90aGVyIGNoYXB0ZXIgZm9yIG9uZSBvZiB0aGUgbWFueSBzdG9yaWVzIEd1dGhlaW56IHRlbGxzIGFib3V0IG1vb24gcm9jayBzYW1wbGVzLiBIZSBzYXlzIGhpcyBzdHVkZW50cyBoYXZlIGhlbHBlZCBmaW5kIHRoZSA3OSBkaXNwbGF5cyBzaW5jZSAyMDAyLgoiVGhhdCdzIHRoZSBiZWdpbm5pbmcsIiBoZSBhbm5vdW5jZWQgdHJpdW1waGFudGx5LiIgQW5kIEknbSBnb2luZyB0byBzdG9wIGluIHRoZSBwb3JjaCBhbmQgdGFsayBhcyBsb25nIGFzIHRoZXJlJ3MgYW55Ym9keSB0aGVyZSB0byB0YWxrIHRvLiBJJ20gZ29pbmcgdG8gc3F1aXJtIGFuZCB3cmlnZ2xlIGFuZCB3aGlzcGVyLCBhbmQgSSdtIGdvaW5nIHRvIHNheSBJIGRvbid0IGtub3cgdGhlIEdvbGRlbiBUZXh0LiBBbmQgSSdtIGdvaW5nIHRvIHRocm93IGF3YXkgYm90aCBvZiBteSBjb2xsZWN0aW9ucyBSSUdIVCBOT1cuIgpUaGFua3MgZm9yIHRoaXMgY29tbWVudC4gVGhlIHRoaW5nIGlzLCBmcm9tIHBhc3QgZXhwZXJpZW5jZXMgKGFsdGhvdWdoIHdpdGggZ2lybHMgSSBtYWlubHkgZmVsdCBzZXh1YWwgYXR0cmFjdGlvbnMgdG8pLCBnb2luZyBmcm9tIGZyaWVuZHNoaXAgdG8gcmVsYXRpb25zaGlwIHRvIGJyZWFrdXAgYWx3YXlzIGVuZGVkIHdpdGggZWl0aGVyIGJyZWFraW5nIGNvbnRhY3QsIG9yIHRoZSBmcmllbmRzaGlwIGJlaW5nIGRlZXBseSB3ZWFrZW5lZCwgZXZlbiB0aGUgb25lcyB0aGF0IGVuZGVkIG9uIGEgZ29vZCBub3RlLgpJIHdvcmsgd2l0aCBlbmdpbmVlcnMgKG1lY2hzLCBzdHJ1Y3R1cmFsLCBjaXZpbHMsIGVsZWN0KS4gCkknZCBqdXN0IGNhbGwuIApXZSB0cnkgdG8gbW9kZXJhdGUgdGhlc2UgbW9zdGx5IGJhc2VkIG9uIHVzZXIgcmVwb3J0cyAgbmF0dXJhbGx5LCB3ZSBzZWUgcmVwb3N0cyBhdCBhIG11Y2ggaGlnaGVyIGZyZXF1ZW5jeSB0aGFuIHRoZSBhdmVyYWdlIHVzZXIsIGFuZCB3ZSBkb24gd2FudCB0byBrZWVwIG1vc3Qgb2YgdGhlIHN1YnJlZGRpdCBmcm9tIHNlZWluZyBhIHBvc3QgdGhhdCBvbmx5IDQwMCBwZW9wbGUgc2F3IGJlY2F1c2UgaXQgd2FzIHNpbXBseSBwb3N0ZWQgYXQgdGhlIHdyb25nIHRpbWUuCkFuZCB0byBmdXJ0aGVyIHRoYXQgcG9pbnQsIGhlIG5ldmVyIGNhbWUgYmFjay4gCkkgb25jZSB0b29rIEFtdHJhayBmcm9tIFdJIHRvIFRYLiAKRm9yIGV4YW1wbGUsIG1vc3QgcGVvcGxlIHRlbmQgdG8gYmUgZWl0aGVyIGEgbW9kZXJhdG9yIG9yIGFuIGFic3RhaW5lci4gTW9kZXJhdG9ycyBhcmUgdGhlIG9uZXMgd2hvIGNhbiBzYXkgIm9oLCBqdXN0IG9uZSBwaWVjZSBvZiBjaG9jb2xhdGUuIiBBbmQgYWN0dWFsbHkgc3RpY2sgd2l0aCB0aGF0IGFuZCBiZSBmaW5lLiBCdXQgaWYgeW91IHRlbGwgdGhlbSB0byBuZXZlciBlYXQgY2hvY29sYXRlIGV2ZXIgYWdhaW4gdGhleSBmYWxsIGFwYXJ0LiBJJ20gYW4gYWJzdGFpbmVyLiBJIHdvbid0IGVhdCB0aGUgb25lIHBpZWNlLCBJJ2xsIGVhdCBhcyBtdWNoIGNob2NvbGF0ZSBhcyBJIHdhbnQgKHdoaWNoIGlzIGFsbCBvZiBpdCkuIEJ1dCBpZiBJIHRlbGwgbXlzZWxmICJvaCwgSSBkb24ndCBlYXQgc3VnYXIgYW55bW9yZSwgSSdtIG5ldmVyIGVhdGluZyBTJ01vcmVzIGFnYWluLiIgSSdtIGFjdHVhbGx5IGJldHRlciBvZmYgYW5kIGNhbiByZWd1bGF0ZSBteXNlbGYganVzdCBmaW5lLiBJJ20gYW4gYWxsIG9yIG5vdGhpbmcga2luZCBvZiBwZXJzb25hbGl0eS4gRmlndXJpbmcgdGhhdCBvdXQgd2FzIHN1cGVyIGhlbHBmdWwuCk1hbnkgY2xpZW50cyBjbGFpbSBzZXggYWJ1c2UgYXQgTWFzc2FnZSBFbnZ5IHNwYXMKQnkgJ2dvb2QnLCBJIG1lYW4gYSBnYW1lIGxpa2UgZnVsbCBwYXkgSmFja3Mgb3IgQmV0dGVyLCB3aGljaCBpcyB3aWRlbHkgYXZhaWxhYmxlIG9uIHRoZSBJbnRlcm5ldC4gClRoZXNlIHdlcmUgYmFzaWNhbGx5IHVuc2VlbiBkdXJpbmcgdGhlaXIgbG9uZyBpbnRlcmFjdGlvbnMgd2l0aCBodW1hbiBiZWluZ3MsIHVudGlsLCBzdWRkZW5seSwgTXIuLCBIb29rZSBtYWRlIGhpcyBpbnZlc3RpZ2F0aW9ucyBhbmQgcHV0IGEgZmFjZSBvbiB0aGUgdW5zZWVuIG1pY3Jvd29ybGQgYW5kIHNoYXJlZCBpdCB3aXRoIHRoZSBHZW5lcmFsIFB1YmxpYy4gSXMgbXkgaG9wZSwgYXMgd2VsbCBhcyBiZWxpZWYsIHRoYXQgdGhlc2UgbXkgTGFib3VycyB3aWxsIGJlIG5vIG1vcmUgY29tcGFyYWJsZSB0byB0aGUgUHJvZHVjdGlvbnMgb2YgbWFueSBvdGhlciBOYXR1cmFsIFBoaWxvc29waGVycywgd2hvIGFyZSBub3cgZXZlcnkgd2hlcmUgYnVzaWUgYWJvdXQgZ3JlYXRlciB0aGluZ3M7IHRoZW4gbXkgbGl0dGxlIE9iamVjdHMgYXJlIHRvIGJlIGNvbXBhciB0byB0aGUgZ3JlYXRlciBhbmQgbW9yZSBiZWF1dGlmdWwgV29ya3Mgb2YgTmF0dXJlLCBBIEZsZWEsIGEgTWl0ZSwgYSBHbmF0LCB0byBhbiBIb3JzZSwgYW4gRWxlcGhhbnQsIG9yIGEgTHlvbiIgc2FpZCBNci4gSG9va2UgYXQgdGhlIGVuZCBvZiBoaXMgMjggcGFnZSBwcmVmYWNlIHRvIE1pY3JvZ3JhcGhpYSBpbiAxNjY1Li4gCkhhbGYgdGhlIHBvcHVsYXRpb24gaXMgZmVtYWxlLiAKVGhlcmUgYWxzbyBzb21lIHJlY29nbml0aW9uIG9mIGFuIGF1dG9tYXRpYyBncm9jZXJ5IHdoaWNoIHdhcyAiZGV2b2lkIG9mIHRpbWUgd2FzdGluZyBjb252ZXJzYXRpb24iIHdpdGggc3RvcmUgY2xlcmtzLCB0aGUgbWFjaGluZSBhbHNvIGJlaW5nIGVxdWlwcGVkIHdpdGggYSAibWVjaGFuaWNhbCBicmFpbiIgdG8gbWFrZSBjaGFuZ2UgYXMgeW91ciBkcm9wcGVkIGluIHlvdXIgZGltZSBmb3Igc29tZSA1IGNlbnQgY2FubmVkIGNvcm4uIEFsc28gYW1vbmcgdGhlIG1vZGVybnMgaGVyZSB3ZXJlICJwaW4iIChwaW5iYWxsIG1hY2hpbmVzIG9mIGEgc29ydCkgZ2FtZXMsIGF1dG9tYXRpYyBzY2FsZXMsIGFuZCBhIHZlcnkgb2RkIHBocmVub2xvZ2ljYWwgZGV2aWNlLiBJZiB5b3UgZHJvcHBlZCB0d28gYml0cyBpbnRvIHRoZSBhdXRvbWF0ZWQgcm9vbSBvcGVuZXIgeW91IHdlcmUgYWxsb3dlZCBpbnRvIGEgInRpbnkgcm9vbSIgd2hlcmUgdGhlIHJlbnRlciB3YXMgYWxsb3dlZCBhICJjb3QsIGhvb2tzLCBoYW5nZXJzLCBhIGNoYWlyLCBhIG1pcnJvciwgd2FzaCBiYXNpbiwgc29hcCwgYSB0b3dlbCwgYW5kIHByaXZhY3kgZm9yIHRoZSBuaWdodCIuLiAKVGhlIHN0b3J5IGhhcyBnaXZlbiBhIHJhcmUgYW5kIGNvbG9yZnVsIGdsaW1wc2UgaW50byB0aGUgdmFzdCB1bmRlcndvcmxkIGluIHRoZSBjaGFvdGljIG1ldHJvcG9saXMgb2YgMTggbWlsbGlvbiBwZW9wbGUuVGhlIHNwcmF3bGluZyBjaXR5IGhhcyBiZWNvbWUgbm90b3Jpb3VzIGZvciB2aW9sZW5jZSwgZnJvbSBnYW5nbGFuZCBzdHlsZSBraWxsaW5ncyBhbmQga2lkbmFwcGluZ3MgdG8gbWlsaXRhbnQgYm9tYmluZ3MgYW5kIHNlY3RhcmlhbiBzbGF5aW5ncy5Gb3IgbW9udGhzLCB0aGUgU3VwcmVtZSBDb3VydCdzIENoaWVmIEp1c3RpY2UgSWZ0aWtoYXIgQ2hhdWRocnkgaGFzIGJlZW4gbGVhZGluZyBzcGVjaWFsIGhlYXJpbmdzIG9uICdzIGNyaW1lLCBiZXJhdGluZyB0aGUgY2l0eSdzIHRvcCBwb2xpY2Ugb2ZmaWNlcnMgZm9yIGZhaWxpbmcgdG8gYWN0LiAKTWlhbWkgRG9scGhpbnMgQW5ub3VuY2UgQnJpYW4gRmxvcmVzIEFzIE5ldyBIZWFkIENvYWNoTm93IHRoYXQgdGhlIFN1cGVyIEJvd2wgaXMgb3ZlciwgYW5kIE5ldyBFbmdsYW5kIGhhcyBub3RjaGVkIGFub3RoZXIgdmljdG9yeSwgdGhlIE1pYW1pIERvbHBoaW5zIGNhbiBhbm5vdW5jZSB0aGVpciBuZXcgaGVhZCBjb2FjaC4KRGVhbiBhbmQgWm9tYmllIFNhbSB0aGVuIGdvIHRvIGZpZ2h0IHRoZSBZZWxsb3cgRXllZCBEZW1vbiwgdXNpbmcgdGhlIGFuY2llbnQgZmlnaHRpbmcgdGVjaG5pcXVlIG9mIEhvcGluZyBUaGUgRXZpbCBEdWRlIEdldHMgUmVhbGx5IEJhZCBBdCBGaWdodGluZyBBbGwgT2YgQSBTdWRkZW4gVG8gQWR2YW5jZSBUaGUgUGxvdC4gCk5vdyB0aGUgQ08geW91IGRvIHdvbmRlci4gCk1hbnkgYXV0aXN0aWMgY2hpbGRyZW4gaGF2ZSBlbGV2YXRlZCBsZXZlbHMgb2YgYW50aWJvZGllcyB0byB0aGUgbWVhc2xlcyB2aXJ1cyBidXQgbm90IHRvIG90aGVyIHZpcnVzZXMuICJBbiBpbmFwcHJvcHJpYXRlIGFudGlib2R5IHJlc3BvbnNlIHRvIE1NUiwgc3BlY2lmaWNhbGx5IHRoZSBtZWFzbGVzIGNvbXBvbmVudCB0aGVyZW9mLCBtaWdodCBiZSByZWxhdGVkIHRvIHBhdGhvZ2VuZXNpcyBvZiBhdXRpc20uIiBBcyBhIHJlc3VsdCwgYSBsYXJnZSBudW1iZXIgb2YgYXV0aXNtIGNhc2VzIG1heSBzdGVtIGZyb20gbmV1cm9sb2dpY2FsIHN5bXB0b21zIGR1ZSB0byBhbiBhdHlwaWNhbCBtZWFzbGVzIHZpcnVzIGluZmVjdGlvbnMgZm9sbG93aW5nIE1NUiB2YWNjaW5hdGlvbi4uIApNeSBleWVzIHdlcmUgY2xvc2VkIHRocm91Z2hvdXQsIGFuZCB0aG91Z2ggbXkgZmFjZSByZW1haW5lZCBhYm92ZSB3YXRlciwgbXkgZWFycyB3ZXJlIHN1Ym1lcmdlZC4gClllYWgsIDVzIGFuZCAxMHMgb25seSBmcm9tIGhlcmUgb24gb3V0LiBOZXh0IHN0ZXAgaXMgdG8gaGlkZSBpbiBwbGFpbiBzaWdodC4gCkJvdGgga25vdyB0aGVtIGFuZCBoYXZlIGFtcGxlIGFzc2lzdGFuY2UgdG8gaiBhc2NlcnRhaW4gdHJ1dGhzIGJlZm9yZSBnaXZpbmcgdGhlbSBuYXRpb25hbCBkaXN0cmlidXRpb24uIApMaWtlIG1hbnkgcGVvcGxlLCBJIGhhZCBhbHdheXMgdGhvdWdodCB0aGF0IHBva2VyIHdhcyBtb3N0bHkgYWJvdXQgbHVjaywgYmVpbmcgYWJsZSB0byBibHVmZiwgYW5kIHJlYWRpbmcgcGVvcGxlLiAKVGhlIGZhbWlseSBkZWNpZGVkIHRvIGJ1aWxkIGEgc2hyaW5lIHRvIEpvaG4gUGF1bCBvdXRzaWRlIHRoZWlyIGhvbWU6IGEgY29sb3JmdWwgYWx0YXIgd2l0aCBhIHBob3RvIG9mIHRoZSBsYXRlIHBvcGUgbmV4dCB0byBhIHN0YXR1ZSBvZiB0aGUgTWFkb25uYSBhbmQgc3Vycm91bmRlZCBieSBmbG93ZXJzLCBjYW5kbGVzIGFuZCBDaHJpc3RtYXMgbGlnaHRzLi4gClRoZXJlIGFyZSBtYW55IHdheXMgdGhhdCBhIGNhc2lubyBtYXkgbWFyayB0aGVzZSBwYXJ0aWN1bGFyIGNoaXBzLiBTbWFsbCBob2xlcyBtYXkgYmUgZHJpbGxlZCBpbnRvIHRoZSBhY3R1YWwgY2hpcCwgb3IgdGhleSBtYXkgaW1wbGVtZW50IHRoZSB1c2Ugb2Ygc29tZSB0eXBlIG9mIHN0YW1wIG9uIHRoZSBjaGlwLiBJbiBzb21lIGluc3RhbmNlcywgYSBsaXR0bGUgY2hpcCBvciBub3RjaCBtYXkgZXZlbiBiZSBwbGFjZWQgc29tZXdoZXJlIGFsb25nIHRoZSBlZGdlIG9mIHRoZSBjaGlwLiBNYW55IGJlbGlldmUgdGhhdCB0aGVzZSBjaGlwcyBjYW4gYmUgdHJhc2hlZCBhbmQgYWN0dWFsbHkgY2Fycnkgbm8gd29ydGggd2hhdHNvZXZlciwgYnV0IGluIGZhY3QsIGl0IGlzIGp1c3QgdGhlIG9wcG9zaXRlLiBUaGV5IGRvIGhhdmUgdmFsdWUhCklmIG5vdCwgdGhlbiBJIGFtIGFmcmFpZCB0aGF0IHlvdSBhcmUgc2ltcGx5IGlnbm9yYW50IGFuZCB1bmJlbGlldmFibHkgYXJyb2dhbnQuIEZhbGxvdXQgNCBleHBlcmltZW50ZWQgd2l0aCBzb21lIG5ldyBzeXN0ZW1zIGFuZCB3YXMgbm90IHdoYXQgc29tZSBwZW9wbGUgZXhwZWN0ZWQsIGJ1dCBpbiBubyB3YXkgd2FzIGl0IGEgYmFkIGdhbWUuIApBcyBmb3IgZm9vZCAgIGJ1eWluZyBmb29kIGF0IGFueSBjb24gaXMgYSByaWRpY3Vsb3VzIHNoYW0uIApSZWFsbHk/IEFyZW4gTXMuIEFtZXJpY2EgYW5kIE1zLiAKTGF5IG9mZiB0aGUgYmxvdyBkcnllciBhbmQgaXJvbnMgZm9yIGEgd2hpbGUhIEZpbmQgYSBnb29kIHRvd2VsIGFuZCBhaXIgZHJ5IGluc3RlYWQsIGlmIHlvdSBoYXZlIHRoZSB0aW1lLiBJZiB5b3UgbmVlZCB0byB1c2UgYSBibG93IGRyaWVyLCB0cnkgYWRqdXN0aW5nIHRvIGEgbG93ZXIgaGVhdCBzZXR0aW5nIGFuZCByZWR1Y2UgdGhlIGxlbmd0aCBvZiB0aW1lIHlvdSBibG93IGRyeS4KQ2VsYSBzZW1ibGUgbG9pbiBkZSBsYSB2aWUgcXVvdGlkaWVubmUsIG1haXMgc2kgdm91cyB2YWx1ZXogdm90cmUgc2FudCAoZXN0IGVsbGUgZXhjZWxsZW50ZSwgYm9ubmUsIG1veWVubmUsIG1hdXZhaXNlLCB0cnMgbWF1dmFpc2U/KSBldCBsJ3RhdCBkZXMgZHRlcm1pbmFudHMgZGUgbGEgc2FudCBkYW5zIHZvdHJlIHZpZSwgdm91cyBwb3VycmV6IHByb2JhYmxlbWVudCBmYWlyZSB1biBsaWVuIGVudHJlIGxlcyBkZXV4LiBJbCBlc3QgYmllbiBjb25udSBxdWUgY2hhY3VuIGRlIG5vdXMgZXN0IHVuIGFzc2V6IGJvbiBqdWdlIGRlIHNvbiB0YXQgZGUgc2FudCBldCBxdWUgbm90cmUgdmFsdWF0aW9uIGEgdW5lIGZvcnRlIHZhbGV1ciBwcmRpY3RpdmUuCkhlbmNlIEVTTyBnb2luZyBvbiBhbmQgaGF2aW5nIEVTOlZJIGNvbWluZyBvdXQgYW5kIEZhbGxvdXQgNSB3aWxsIGV2ZW50dWFsbHkgY29tZSBvdXQgc29tZSBwb2ludCBpbiBhIHllYXIgb3IgdHdvLi4gClRoZSBwcm9ibGVtIHdpdGggY2hpbGRyZW4gaXMgdGhhdCBhdCBjZXJ0YWluIGFnZXMgdGhleSB2YXJ5IGRyYXN0aWNhbGx5IGluIHNpemUuIEJlY2F1c2Ugb2YgdGhpcywgaW4gb3JkZXIgdG8gYWRtaW5pc3RlciBkcnVncyBzYWZlbHkgeW91IG5lZWQgdG8gd29yayBvdXQgdGhlaXIgc3VyZmFjZSBhcmVhIChXZWlnaHQgaW4gS0cgeCBIZWlnaHQgaW4gQ00gLyAzNjAwKS4gCkl0IHdhcyBub3RpY2VhYmxlIHRoYXQgdGhpcyB5ZWFyIEl2ZXkgc2tpcHBlZCB0aGUgbWFpbiBldmVudCBpbiB0aGUgV29ybGQgU2VyaWVzIG9mIFBva2VyICAgdGhlIGVxdWl2YWxlbnQgb2YgUm9nZXIgRmVkZXJlciB0YWtpbmcgYSBmb3J0bmlnaHQgb2ZmIGR1cmluZyBXaW1ibGVkb24gICBhbmQgYWxzbyBtb3RoYmFsbGVkIGhpcyBzbGljayBJdmV5IExlYWd1ZSBwb2tlciBzY2hvb2wgd2Vic2l0ZS4KSSB3YXRjaGVkIGEgYmVoZWFkaW5nIGluIGEgTWlkZGxlIEVhc3Rlcm4gY291bnRyeS4gSSBrbmV3IGFuIGV4ZWN1dGlvbiBieSBiZWhlYWRpbmcgd2FzIHRvIGJlIHBlcmZvcm1lZCBhbmQgSSB3YW50ZWQgdG8gc2VlIHdoYXQgdGhlIGF0bW9zcGhlcmUgd291bGQgYmUgbGlrZSBhbmQgd2hhdCByaXR1YWxzLCBpZiBhbnksIHdvdWxkIGJlIGZvbGxvd2VkLiBUaGUgcHJpc29uZXIgd2FzIGJyb3VnaHQgdG8gdGhlIGV4ZWN1dGlvbiBzaXRlIGluIGEgdmFuLiAKQW5vdGhlciBob2xpZGF5IGFjdGl2YXRpb24gVGhlIENvbmNpZXJnZSBDbHViIHNwZWFyaGVhZGVkIHdhcyB0aGUgR2lmdCBXcmFwIFZhbGV0IHByb2dyYW0sIG5vdyBpbiBpdHMgc2Vjb25kIHllYXIsIGZvciBDYW5hZGlhbiBjb21tZXJjaWFsIHJlYWwgZXN0YXRlIGdpYW50IENhZGlsbGFjIEZhaXJ2aWV3LiBUaGUgcmVhc29uIHRoZSBpbml0aWF0aXZlIGhhcyBiZWVuIHNvIGVmZmVjdGl2ZSBpcyB0d29mb2xkOiBOb3Qgb25seSBhcmUgc2hvcHBlcnMgZ2l2ZW4gdGhlIGx1eHVyeSBvZiBiZWluZyBhYmxlIHRvIGRyb3Agb2ZmIHRoZWlyIGdpZnRzIGFuZCBzaWRlc3RlcCB0aGUgbWVzcyBvZiB3cmFwcGluZyBwYXBlciBhbmQgcmliYm9uLCB0aGV5J3JlIGFibGUgdG8gc3RheSBjb25uZWN0ZWQgdGhyb3VnaCB0aGUgZW50aXJlIHByb2Nlc3MgYW5kIGFyZSB1cGRhdGVkIGFzIHNvb24gYXMgdGhlaXIgZ2lmdHMgYXJlIHJlYWR5LiAKVHdvIG1lbiwgaW5jbHVkaW5nIE5ld2Nhc3RsZSBkZW50aXN0IEFzaGxlaWdoIEphcnJvbGQsIGxhdGVyIHBsZWFkZWQgZ3VpbHR5IHRvIGNoaWxkIGFidXNlIGNoYXJnZXMuIEphcnJvbGQgd2FzIGphaWxlZCBmb3IgbW9yZSB0aGFuIHNldmVuIHllYXJzIGZvciBjaGlsZCBzZXggYW5kIGNoaWxkIHBvcm5vZ3JhcGh5IG9mZmVuY2VzLiAKSSB3YW50IHRvIGEgc2hvcCB3aGVyZSB0aGV5IHdlcmUgNDAgODAgZWFjaCwga2VwdCBkcml2aW5nIGZvciBhbm90aGVyIDEwIG1pbnV0ZXMgdG8gdGhlIG5leHQgaGVhZHNoaXAgd2hlcmUgSSBnb3QgYSBkb3duc3RlbSBvZiBlcXVhbCBvciBiZXR0ZXIgcXVhbGl0eSBmb3IgbGVzcyB0aGFuIDIwLiAKSSBoZWFyZCBoZXIgd2Fsa2luZyBkb3duIHRoZSBzdGFpcnMgYW5kIHRhbGtpbmcgdG8gbXkgYmFiaWVzLiAKU29tZXRpbWVzIEkgZ3JpbmQgb25saW5lIHJlYWxseSBoYXJkIGZvciBhIGZldyBtb250aHMgYW5kIG90aGVycyBJIGp1c3QgbGV0IG15c2VsZiBmYWxsIGJlaGluZCB0aGUgc2tpbGwgY3VydmUgYW5kIHBsYXkgbGl2ZSBmb3IgYSB3aGlsZSBiZWNhdXNlIGl0cyBlYXN5IG1vbmV5ICh0aG91Z2ggSSBlbmpveSBpdCBtdWNoIGxlc3MpLiAKQW5kIHJlYWR5IGFjY2VzcyB0byB3ZWJwYWdlcywgYWdncmVzc2l2ZWx5IGFzc2VydGluZyB0aGUgc2hvcnRjb21pbmdzIG9mIHRoZSBPdGhlciwKVGhhbmtzIHRvIG1vZGVybiB0ZWNobm9sb2d5LCB3ZSBjYW4gcGVyc29uYWxseSBjb250cmlidXRlIHRvIHRoaXMgZXZvbHV0aW9uIGJ5IGNob29zaW5nIHRvIGN1c3RvbWl6ZSBvdXIgb3duIGNhcmQgZGVja3MuIFRoZXJlIGFyZSBhIGxvdCBvZiBwcm9mZXNzaW9uYWwgY2FyZCBtYW51ZmFjdHVyZXJzIHdobywgZm9yIHRoZSByaWdodCBwcmljZSwgd291bGQgbWFrZSB0aGUgY2FyZCBhY2NvcmRpbmcgdG8geW91ciBzcGVjaWZpY2F0aW9ucy4gCkkgZmVlbCBsaWtlIGl0IHdvdWxkIGhhdmUgYmVlbiB0cml2aWFsIGZvciB0aGVtIHRvIGFkZCBhbiBvdXQgYW5kIGJhY2sgdGFpbCBzZWN0aW9uIHNvbWV3aGVyZSBhbmQgc29tZW9uZSBjb3VsZCBoYXZlIGdvbmUgb3V0IGFuZCB3YWxrZWQgdGhlIGNvdXJzZSBhbmQgc2V0IHRoZSBkaXN0YW5jZS4gSSBtZWFuIEkgcGF5aW5nIGdvb2QgbW9uZXkgdG8gZW50ZXIgdGhpcyByYWNlIGFuZCB0aGV5IGFkdmVydGlzZSBpdCBhcyBhIGhhbGYgbWFyYXRob24sIHdoYXQgYXJlIHRoZXkgZXZlbiBkb2luZyB3aXRoIGFsbCB0aGlzIGNhc2g/IFRoZXkgc2hvdWxkIGp1c3QgYWR2ZXJ0aXNlIGl0IGFzIGEgIjEyIG1pbGUgaXNoIGZ1biBydW4iLCBidXQgdGhlbiBhZ2FpbiB0aGF0IHdvdWxkbiBzZWxsIHRvbyB3ZWxsLiBJIHByb2JhYmx5IGdldHRpbmcgYmVudCBvdXQgb2Ygc2hhcGUgb3ZlciBpdCwgYW5kIEkgc3RpbGwgZW5qb3kgdGhlIHJhY2UsIGJ1dCBJIHdhbnQgYSBmdWxsIGhhbGYsIHRoZXNlIHJhY2VzIGFyZSBmdWNraW5nIGV4cGVuc2l2ZS4gVHJhaWwgcmFjZXMgYXJlIHJhcmVseSBldmVyIHRoZSBleGFjdCBkaXN0YW5jZS4gWW91IGNhbiBjZXJ0aWZ5IHRoZW0gdG8gVVNBVEYgc3RhbmRhcmRzIGR1ZSB0byB0aGUgdGVycmFpbiB1c3VhbGx5LCBhbmQgdHJ5aW5nIHRvIGdhdWdlIGRpc3RhbmNlIHVzaW5nIEdQUyB3YXRjaGVzIHdpbGwgYmUgZmFpcmx5IGluYWNjdXJhdGUgZHVlIHRvIHRyZWVzIGFuZCBzdWNoLiBXaGVuIEkgc2lnbiB1cCBmb3IgYSB0cmFpbCByYWNlLCBJIGtub3cgaW4gbXkgaGVhZCB0aGF0IGl0IG9ubHkgZ29pbmcgdG8gYmUgYW4gYXBwcm94aW1hdGlvbiBvZiB0aGF0IGRpc3RhbmNlLCBtYXliZSBtb3JlLCBtYXliZSBsZXNzLgpUaGVyZSBhcmUgYWxzbyBuZXR3b3JrcyBvZiBwc3ljaGlhdHJpc3RzIGFuZCBwc3ljaG9sb2dpc3RzIHdobyB0cmVhdCBnYW1ibGluZyBwcm9ibGVtcyBhbmQgdGhlIG1lbnRhbCBkaXNvcmRlcnMgY2xvc2VseSBhc3NvY2lhdGVkIHdpdGggdGhlbSwgdXNpbmcgcHN5Y2hvdGhlcmFweSB0ZWNobmlxdWVzIGxpa2UgY29nbml0aXZlIGJlaGF2aW91cmFsIHRoZXJhcHksIGFuZCBkcnVnIHRyZWF0bWVudHMgbGlrZSBhbnRpZGVwcmVzc2FudHMgd2hlcmUgcmVxdWlyZWQuLiAKU3VuIHJlcG9ydGVyIEVyaW4gRG9zdGFsIGNvbnRyaWJ1dGVkIHRvIHRoaXMgcmVwb3J0LgpJZiB5b3UgZW5kIHVwIHN1cHBsZW1lbnRpbmcgd2l0aCBtZWxlZSAobm90IGEgYmFkIGlkZWEsIGFzIGEgZ2lhbnQpLCB0aGUgU3RyZW5ndGggc3BlbGwgZnJvbSBFYXJ0aCBpcyBnb2luZyB0byBiZSBhbiBpbnZhbHVhYmxlIGJvb3N0IHRvIHlvdXIgZGFtYWdlIG91dHB1dCBvbiB0aGF0IGZyb250LgpGdWxsIG1vdmllcyBjb3ZlcmFnZUF1c3RyYWxpYW5zIGhhdmUga25vd24gZm9yIGEgd2hpbGUgYWJvdXQgQmVuIE1lbmRlbHNvaG4gZ2lmdHMgYXMgYSBjaGFyYWN0ZXIgYWN0b3IsIGJ1dCBvbmUgb2YgdGhlIHBsZWFzdXJlcyBvZiByZWNlbnQgbW92aWVnb2luZyBoYXMgYmVlbiB3YXRjaGluZyB0aGUgcmVzdCBvZiB0aGUgd29ybGQgc3RhcnQgdG8gY2F0Y2ggb24uV3JpdHRlbiBhbmQgZGlyZWN0ZWQgYnkgQW5uYSBCb2RlbiBhbmQgUnlhbiBGbGVjaywgTWlzc2lzc2lwcGkgR3JpbmQgaXMgYSBiZWF1dGlmdWwgbG9zZXIgc3RvcnkgaW4gYSB0cmFkaXRpb25hbCBBbWVyaWNhbiB2ZWluLCB3aXRoIE1lbmRlbHNvaG4gYW5kIFJ5YW4gUmV5bm9sZHMgYXMgYSBjb3VwbGUgb2YgZ2FtYmxpbmcgYWRkaWN0cyB3aG8gYm9uZCBvdmVyIGFuIElvd2EgcG9rZXIgdGFibGUgYW5kIGhlYWQgdG8gTmV3IE9ybGVhbnMgaW4gc2VhcmNoIG9mIGJldHRlciBsdWNrLkl0IGEgc2tldGNoIG9mIGEgZmlsbSwgYnV0IG1vcmUgdGhhbiB3b3JrYWJsZSBhcyBhIHZlaGljbGUgZm9yIE1lbmRlbHNvaG4gYXQgaGlzIGRlbGljYXRlLCB0cmFnaWNvbWljIGJlc3QuIApMJ2Fzc29jaWF0aW9uIFNPUyBMYSBDaGFwZWxsZSBkZW1hbmRlIGRvbmMgdW5lIHZpZ2lsYW5jZSBhY2NydWUgbGUgc29pciBldCBsZXMgd2VlayBlbmRzLiBMJ2FsZ2VjbyBzaXR1IHNvdXMgbGUgdmlhZHVjIGF1IG5pdmVhdSBkZSBsYSBydWUgUGhpbGlwcGUgZGUgR2lyYXJkIG4nZXN0IHRvdWpvdXJzIHBhcyBlbmxldiwgbWFsZ3IgbGVzIHByb21lc3NlcyBkZSBsYSBtYWlyaWUsIGlsIGducmUgZGVzIG51aXNhbmNlcyBvbGZhY3RpdmVzIChvbiBzZSBkb3V0ZSBwb3VycXVvaSkgZXQgZW5jb3VyYWdlIGxlcyBkcHRzIGRlIHRvdXRlIG5hdHVyZS4gTGUgcHJvYmxtZSBkZXMgZGlzdHJpYnV0aW9ucyBhbGltZW50YWlyZXMgcnVlIFBham9sIG4nZXN0IHRvdWpvdXJzIHBhcyByZ2wgOyBpbCBmYXV0IHByY2lzZXIgcXVlIGNlcnRhaW5lcyBhc3NvY2lhdGlvbnMgcmVmdXNlbnQgZCdlbnRyZXIgZGFucyBsZSBkaXNwb3NpdGlmIG1pcyBlbiBwbGFjZSBwYXIgbGEgVmlsbGUuIApNb29zaGltYW54ICAzIHBvaW50cyAgc3VibWl0dGVkIDExIGRheXMgYWdvCkVsbGUgbGUgdHJhbnNmb3JtZXJhIGdhbGVtZW50IGVuIGFldGhlciwgb3UgdGhyaXF1ZSAuOy4gQyB1biBjaW5xdWltZSBsbWVudCwgbGEgUXVpbnRlc3NlbmNlIHF1aSBzIGF1eCBxdWF0cmUgbG1lbnRzIHRyYWRpdGlvbm5lbHMuIENldCBsbWVudCBtZW50aW9ubiBkYW5zIGxlIEJyaWhhZGFyYW55YWthIFVwYW5pc2hhZDMgZXN0ICBuZSBwYXMgY29uZm9uZHJlIGF2ZWMgcHJha3JpdGkgcXVpIGwgZW5nZW5kciBldCBxdWkgYXVyYWl0IHNlbG9uIFJlbiBHdW5vbiBkZXMgcHJvcHJpdHMgY29tcGFyYWJsZXMgIGNlbGxlcyBkIFlvZ2kgYXlhbnQgYXR0ZWludCBsYSBkbGl2cmFuY2U6LiAKT2Z0ZW4gZ2l2aW5nIHVwIGNhcmVlcnMgb3IgaG9wZXMgb2Ygb25lIHRvIHN0YXkgYXQgaG9tZSBhbGwgZGF5LCB0aGV5J3JlIGxvb2tpbmcgZm9yIGEgcHVycG9zZSBvdXRzaWRlIG9mIGJlaW5nIGEgcGFyZW50L2hvbWVtYWtlciwgdGhleSBjYW4gZmVlbCBpc29sYXRlZCwgYW5kIG9uZSBpbmNvbWUgY2FuIG1ha2UgdGltZXMgdG91Z2guIApJIHRoaW5rIHRoaXMgaXMgYmVjYXVzZSB0aGVyZSBpcyBhIHNpbHZlciBsaW5pbmcgd2hlcmUgaGUncyBzdGVybiB3aGVuIGhlIG5lZWRzIHRvIGJlIGFuZCB1bmRlcnN0YW5kaW5nIHdoZW4gaGUgZG9lc24ndC4gUGx1cyB0aGVyZSdzIHNlcmlvdXMgY29tbWl0bWVudCB0byB0aGUgam9iIGFuZCBzbyBtdWNoIGV4dHJhIGNsYXNzZXMgYW5kIHN0dWR5IHRpbWUgaGUgb2ZmZXJzIHVzLiAKSW4gbXkgdmlldywgdGhlIE11c2xpbSBicm90aGVyaG9vZCBpcyBFZ3lwdCB2ZXJzaW9uIG9mIHRoZSBLS0suIElmIEkgY2FuIHByZXNzIGEgYnV0dG9uIGFuZCBoYXZlIHRoZW0gYWxsIGRlbGV0ZWQgZnJvbSB0aGlzIGxpZmUsIEkgd291bGQuCkZhY3RvcnMgc3VjaCBhcyBkZWNyZWFzZWQgbW9iaWxpdHksIGNvZ25pdGl2ZSBvciBwaHlzaWNhbCBjaGFuZ2VzIG9yIG90aGVyIGhlYWx0aCBjb25kaXRpb25zIHNob3VsZCBub3QgaGluZGVyIGEgc29jaWFsIGxpZmVzdHlsZS4gCkkgbGlrZSBMb25nbGVhZiBQb2xpdGljcywgd2hpY2ggcHJvdmlkZXMgZmFpcmx5IG1vZGVyYXRlIGFuYWx5c2lzIHdpdGggYSBzbGlnaHQgbGVhbiB0byB0aGUgcmlnaHQuIEFzIEkgbWVudGlvbmVkIGluIGEgcHJldmlvdXMgY29tbWVudCwgdGhlIE4gd2lsbCBsaWtlbHkgcHVibGlzaCBjYW5kaWRhdGUgY292ZXJhZ2UgYW5kIHF1ZXN0aW9ubmFpcmVzIGNsb3NlciB0byB0aGUgZWxlY3Rpb24uLiAKT2x5bXBpYW4gTWljaGFlbCBQaGVscHMgY3JlYXRlZCBhIHN0aXIgYnkgZnJlcXVlbnRpbmcsIGFuZCBhY2hpZXZpbmcgc29tZSBzdWNjZXNzIGluLCB0aGUgcG9rZXIgcm9vbSBhdCBDYWVzYXJzIFBhbGFjZSBzaG9ydGx5IGFmdGVyIGhlIHdvbiBhIHJlY29yZCBlaWdodCBnb2xkIG1lZGFscyBpbiBCZWlqaW5nLiBUaGF0IGRpZG4ndCBzdG9wIHRoZSBndXkgdG8gbXkgaW1tZWRpYXRlIHJpZ2h0IGF0IGEgcG9rZXIgdGFibGUgYXQgQ2Flc2FycyBmcm9tIGNyaXRpY2l6aW5nIFBoZWxwcy4gQWNjb3JkaW5nIHRvIHRoaXMgZ2VuaXVzJ3MgcmFudCwgUGhlbHBzICJyZWFsbHkgZGlkbid0IHdpbiB0aGF0IHJhY2Ugd2hlcmUgaGUgc3R1Y2sgaGlzIGhhbmQgb3V0IGF0IHRoZSBsYXN0IHNlY29uZCwiIGFuZCBoaXMgdGVhbW1hdGVzIGRpZCBtb3N0IG9mIHRoZSB3b3JrIGluIHRoZSByZWxheXMuIApUaGlzIGd1eSBtYXkgbm90IGJlIGxpY2Vuc2VkIHRoZSBzYW1lIHdheSBhcyBhIG1hc3NhZ2UgdGhlcmFwaXN0IHNob3VsZCBiZSBpZiBhdCBhbGwoZGVwZW5kaW5nIG9uIHRoZSBzdGF0ZSkuIE11Y2ggb2YgdGhlIHN0YWZmIGFyZSBmb3JlaWduZXJzIHdobyBzcGVhayBsaXR0bGUgRW5nbGlzaC4gCkhhdmluZyBhIHByb3BlciBiYW5rcm9sbCBoZWxwcyBhbGxldmlhdGUgd2hhdCBJIHRoaW5rIGlzIHRoZSBiaWdnZXN0IHRoaW5nIHN0b3BwaW5nIHBva2VyIHBsYXllcnMgZnJvbSBiZWNvbWluZyBzdWNjZXNzZnVsLiAKVGhlIHNsaWRlIGl0c2VsZiBpcyBzdGFtcGVkIGFzIGEgLjM1NywgaW5kaWNhdGluZyB0aGF0IGl0IG1vc3QgbGlrZWx5IGNhbm5vdCBiZSBjaGFuZ2VkIHRvIG90aGVyIGNhbGliZXJzLiAKRm9yZ2l2ZSBtZSBpZiB0aGlzIHNvdW5kcyBoYXJzaCwgYnV0IHRoZSB3cml0aW5ncyBvbiB0aGUgd2FsbCBhbmQgdGhlcmUgbm90aGluZyBhbnlvbmUgY2FuIGRvIHRvIHN0b3AgaXQuIFRoZXJlIHdpbGwgYWx3YXlzIGJlIGEgcGFwZXIgbWFnaWMgc2NlbmUsIGJ1dCB0aGUgZm9yZWNhc3QgbG9va3MgZ3JpbSBmb3IgY29tcGV0aXRpdmUgcGxheWVycy4gWW91IGdvaW5nIHRvIGhhdmUgdG8gYWRhcHQgdG8gZGlnaXRhbCBtYWdpYyBpZiB5b3Ugd2FudCB0byBwbGF5IGNvbXBldGl0aXZlbHksIG5vIG1hdHRlciBob3cgbXVjaCB5b3Ugd2lzaCBvdGhlcndpc2UuIFRoYXQganVzdCB0aGUgbmF0dXJlIG9mIGhvdyB0aGluZ3MgYXJlLCBhbmQgeW91IGNhbiBnbyBkb3duIGtpY2tpbmcgYW5kIHNjcmVhbWluZyBidXQgbm90aGluZyB3aWxsIGNoYW5nZS4gSSBrbm93IHNheWluZyB0aGlzIGlzIGJsYXNwaGVteSBvbiB0aGlzIHN1YiwgYnV0IGl0IGRvZXNuIGNoYW5nZSByZWFsaXR5LgoiSWYgb3BlcmF0b3JzIG9wZW4gYW5kIGNsb3NlIHRoZSBtYWNoaW5lcyBhbiBob3VyIGxhdGVyIG9yIGVhcmxpZXIgdGhlbiB0aGF0IGlzIGEgbGl0dGxlIHRoaW5nIHRoZXkgY2FuIGRvIHRvIGhlbHAgcGVvcGxlIHdobyBuZWVkIGhlbHAuCllvdSBtaWdodCBuZWVkIHRvIHByYWN0aWNlIGl0IGEgYml0IHRvIGdldCBpdCBkb3duLi4gClNvIHVsdGltYXRlbHkgaXQgYSBtYXR0ZXIgb2YgdGhlIHN1YiBoYXZpbmcgYmVjb21lIHNvIHBvcHVsYXIgdGhhdCBpdCBzdGFydGVkIHRvIGVhdCBpdHNlbGYgd2l0aCBmaWN0aW9uLiBUbyB3aGljaCB0aGVyZSBpcyBubyBnb29kIHNvbHV0aW9uLiAKSW4gc3BpdGUgb2YgdGhlc2UgZ3JheSBhcmVhcywgbWlsbGlvbnMgaW4gdGhlIFUuIFMuIGFuZCBhcm91bmQgdGhlIHdvcmxkIHJlZ3VsYXJseSBlbmpveSBwYXJ0aWNpcGF0aW5nIGluIG9ubGluZSBwb2tlciBnYW1lcyBmcm9tIHRoZSBjb21mb3J0IG9mIHRoZWlyIG93biBob21lcy4gSnVzdCB0byBnaXZlIHRoaXMgc29tZSBwZXJzcGVjdGl2ZSwgaW4gMjAwNSwgdGhlIHJldmVudWUgZnJvbSBvbmxpbmUgcG9rZXIgd2FzIHJlcG9ydGVkIHRvIGJlIGluIHRoZSB2aWNpbml0eSBvZiAkMjAwIG1pbGxpb24uCkZyZWUgUm9sbCBUb3VybmFtZW50cyBmb3IgTmV3IFBsYXllcnMgYW5kIFByb2Zlc3Npb25hbHMKVGhleSBvZnRlbiBvZmZlciB0dXRvcmlhbHMuIFRoZSBnYW1lcyBwbGF5IHRoZSBzYW1lIGluIGEgYnJpY2sgYW5kIG1vcnRhciB3b3JsZCBhcyBvbmxpbmUgc28gZm9yIHRoZSBzYWtlIG9mIGVkdWNhdGluZyB5b3Vyc2VsZiBhIHNpdGUgbGlrZSBQb2tlcnN0YXJzICxGdWxsdGlsdCBvciBVbHRpbWF0ZSBCZXQgaXMgYSBnb29kIG1vdmUuIApSb21hbnRpYyBSZWNyZWF0aW9uWW91IGNhbiBzdGFydCB5b3VyIHJvbWFudGljIGdldGF3YXkgYnkgZXhwbG9yaW5nIGNoYXJtaW5nIGRvd250b3duIEhpZ2hsYW5kcywgd2hpY2ggaXMgYSBzaG9ydCB3YWxrIGZyb20gdGhlIHJlc29ydC4gCk92ZXIgaGlzIGhlYWQgTGV2aW4gbWFkZSBvdXQgdGhlIHN0YXJzIG9mIHRoZSBHcmVhdCBCZWFyIGFuZCBsb3N0IHRoZW0gYWdhaW4uIApCdXQgeWVhaCwgc28gd2Ugd2VyZSB0YWxraW5nIGFib3V0IG1lZGljaW5lISBXaGljaCwgb2YgY291cnNlLCByZW1pbmRlZCBtZSBvZiBhIGZ1biBsaXR0bGUgYml0IGFib3V0IEdhbGVuLCBvbmUgb2YgdGhlIG1vc3QgZmFtb3VzIGRvY3RvcnMgb2YgdGhlIGFuY2llbnQgUm9tYW4gd29ybGQuIApDb3Jwb3JhdGUgdGF4IGN1dHMgaW4gdGhlIFVuaXRlZCBTdGF0ZXMgaGF2ZSBzYXZlZCBzb21lIG9mIENhbmFkYSBiaWcgYmFua3MgaHVuZHJlZHMgb2YgbWlsbGlvbnMgb2YgZG9sbGFycyBpbiB0aGUgZmlyc3QgZnVsbCB5ZWFyIHNpbmNlIHRoZXkgd2VyZSBpbnRyb2R1Y2VkLiB0YXhlcyBoYWQgYmVlbiB0aGUgem9uZSBvZiBVUyQxMDAgbWlsbGlvbiBpbiBpbmNyZW1lbnRhbCBpbmNvbWUgZm9yIGl0cyBmaXNjYWwgMjAxOCwgd2hpY2ggZW5kZWQgT2N0LiAzMSwgMjAxOCwgYXMgd2VsbCBhcyBsaXR0bGUgdW5kZXIgVVMkMzAgbWlsbGlvbiBmb3IgdGhlIGJhbmsgZmlyc3QgcXVhcnRlciBvZiAyMDE5LCB3aGljaCBjb3ZlcmVkIHRoZSB0aHJlZSBtb250aHMgZW5kZWQgSmFuLiAzMS4gdGF4IHJlZm9ybS4gZG9sbGFycywgc2FpZCBSaWF6IEFobWVkLCBURCBjaGllZiBmaW5hbmNpYWwgb2ZmaWNlciwgaW4gYSBwaG9uZSBpbnRlcnZpZXcuCihDb2xvcmFkbyBTcHJpbmdzIFBvbGljZSBEZXB0LikuIApBVVNUSU4sIFRleGFzIE1PTlRSRUFMICAgRm9yYml1cywgYSBjbGluaWNhbCBzdGFnZSBjb21wYW55IHRoYXQgZGV2ZWxvcHMgbm92ZWwgYmlvbG9naWNzIGZvciB0aGUgdHJlYXRtZW50IG9mIGZpYnJvc2lzIGFuZCBjYW5jZXIsIGFubm91bmNlZCB0b2RheSB0aGF0IHRoZSBmaXJzdCBwYXRpZW50IGhhcyBiZWVuIGRvc2VkIGluIGEgUGhhc2UgMmEgc3F1YW1vdXMgY2VsbCBjYXJjaW5vbWEgb2YgdGhlIGhlYWQgYW5kIG5lY2sgKFNDQ0hOKSBjbGluaWNhbCB0cmlhbC4KVGhlIGJvbGQgbW92ZSBhbHNvIGhlbHBzIFN3aWZ0IHBvY2tldCBhIGxhcmdlciBwcm9maXQgZnJvbSBmYWNlIHZhbHVlIHRpY2tldHMgYnkgYXR0ZW1wdGluZyB0byBlbGltaW5hdGUgYSBtaWRkbGVtYW4gdGhhdCBsZWdpc2xhdG9ycyBoYXZlIHN0cnVnZ2xlZCB0byBlcmFzZS4KVGhlIDIgUG9ja2V0IENhcmRzIGFyZSB0aGUgb25lcyB5b3UgbmVlZCB0byBwYXkgYXR0ZW50aW9uIHRvLCB0aGVzZSBhcmUgdGhlIGNhcmRzIHRoYXQgd2lsbCBtYWtlIG9yIGJyZWFrIHlvdSBpbiB0aGlzIGdhbWUuIEZvciBleGFtcGxlIDIgQWNlcyBoYXZlIGEgbXVjaCBoaWdoZXIgdmFsdWUgdGhhbiBhIHBhaXIgb2YgNCdzLiBJZiB5b3UgaGF2ZSBhIGJhZCBzdGFydGluZyBoYW5kIGl0J3MgdXN1YWxseSBiZXR0ZXIgdG8gZm9sZCBhbmQgdG8gZ28gZm9yd2FyZCB3aXRoIHlvdXIgaGFuZCBpZiBpdCdzIGEgc3Ryb25nIGhhbmQuCkkgZ2l2ZSB0aGVtIHByb2plY3RzIHRoYXQgYXJlIHRvbyBiaWcgZm9yIHRoZW0sIGxldCB0aGVtIGZhaWwsIGFuZCBoZWxwIHRoZW0gdGhyb3VnaCBpdC4gSSBnaXZlIHRoZW0gYWxzbyBzbWFsbCBlYXN5IHRvIGNoZXcgb24gcHJvamVjdHMuIApJIG5ldmVyIGdvdCBvbiBjb21tcyBpbiBIb3JkZSBiZWNhdXNlIG15IHBsYW4gd2FzIGp1c3QgdG8gdXNlIGhvcmRlIHNwYWNlIHRvIGdyaW5kIGZvciBhbiBpc2sgY3VzaGlvbiB0byBmdW5kIHNvbG8gcHZwIGFuZCBtYXliZSBhIHRpdGFuLiBCdXQgdGJoIGkgcHJvYmFibHkgZ2l2ZSB1cCBvbiB0aGUgdGl0YW4gZ3JpbmQuLiAKVGhlcmUgYXJlIG11bHRpcGxlIHdheXMgdG8gd2luIG9uIHRoZSByb3VsZXR0ZSBiZXNpZGVzIHdoZXJlIHRoZSBiYWxsIGxhbmRzLiBQbGF5ZXJzIGNhbiBiZXQgb24gdGhlIGJhbGwgbGFuZGluZyBvbiBhbiBldmVuIG9yIG9kZCBudW1iZXIuIFRoZXkgY2FuIHBpY2sgb24gYmxhY2sgb3IgcmVkICh0aGUgb25seSBjb2xvcnMgcGFpbnRlZCBvbiB0aGUgbnVtYmVycykgb3Igd2hldGhlciB0aGUgYmFsbCBsYW5kcyBpbiB0aGUgZmlyc3QgMTkgbnVtYmVycyBvciBmcm9tIDIwIDM2Li4gCkFuZCBzbyB3aGF0IHRoZSBsZXNzb24gb2YgdGhpcz8gV2hhdCB0aGlzIGhpZ2ggc2Nob29sIGluIEFsYWJhbWEgd2FudHMgaXMgdG8gZmlnaHQgdGhlIG5vcm1hbGl6YXRpb24gb2YgcGVvcGxlIGJlaW5nIHRoZW1zZWx2ZXMgdG8gc3VjaCBhbiBleHRlbnQsIHRoZXkgcHV0IHRoZWlyIGVtYmFycmFzc2luZyBhc3NlcyByaWdodCBvbiB0aGUgZnJvbnQgcGFnZSBvZiB0aGUgbmV3cy4gVGhleSBDT1VMRCBiZSBjcmVhdGluZyBhIHdlbGNvbWluZyBlbnZpcm9ubWVudCB3aGVyZSBnb29kIGNvbWVzIG9mIGl0OiBJdCBjb3N0IG1lIGFib3V0IDEwIG1pbnV0ZXMgb2YgY2xhc3MgdGltZSwgYW5kIGVhcm5lZCBtZSBqb3ksIGEgZ3JlYXQgc3RvcnksIHRoZSByZXNwZWN0IG9mIG15IHN0dWRlbnRzLCBhbmQgdGhlIGdyYXRpdHVkZSBmb3IgYSBzYWZlIHNwYWNlIGZyb20gYm90aCBvZiB0aG9zZSB0d28gZ2lybHMuIApBbmQgV2Fsc2gsIFYuIApGaXNoZXIgd29ya2VkIG91dCB3aXRoIGEgcGVyc29uYWwgdHJhaW5lciB0byBoZWxwIGdldCBpbnRvIHNoYXBlLiBQaWN0dXJlOiBKb2huIENoYXBwbGUKTWFyIDY6Qm91bGRlciBwb2xpY2Ugb2ZmaWNlciB3aG8gY29uZnJvbnRlZCBibGFjayBtYW4gcGlja2luZyB1cCB0cmFzaCBvbiBwYWlkIGxlYXZlTWFyIDQ6Qm91bGRlciBwb2xpY2UgbGF1bmNoIGludmVzdGlnYXRpb24gaW50byBjb250YWN0IHdpdGggbWFuIHBpY2tpbmcgdXAgdHJhc2hBdWRpZW5jZSBtZW1iZXJzIGF0IHRoZSBCb3VsZGVyIENpdHkgQ291bmNpbCBtZWV0aW5nIFR1ZXNkYXkgaGVsZCBhbG9mdCB0cmFzaCBncmFiYmVycyBhbmQgY2xhY2tlZCB0aGVtIGFzIFBvbGljZSBDaGllZiBHcmVnIFRlc3RhIGJyaWVmZWQgY291bmNpbCBtZW1iZXJzIGFib3V0IGFuIGluY2lkZW50IGluIHdoaWNoIG9mZmljZXJzIGNvbmZyb250ZWQgYSBibGFjayBtYW4gd2hvIHdhcyBwaWNraW5nIHVwIHRyYXNoIGF0IGhpcyBvd24gaG91c2UuT24gRnJpZGF5IG1vcm5pbmcsIGEgQm91bGRlciBwb2xpY2Ugb2ZmaWNlciBhc2tlZCB0aGUgbWFuLCB3aG8gd2FzIHNpdHRpbmcgaW4gYSBwYXJ0aWFsbHkgZW5jbG9zZWQgcGF0aW8gYXJlYSwgaWYgaGUgd2FzIGFsbG93ZWQgdG8gYmUgdGhlcmUuIFRoZSBtYW4gdG9sZCB0aGUgb2ZmaWNlciBoZSBsaXZlZCBhbmQgd29ya2VkIGluIHRoZSBidWlsZGluZy4gCllvdXIgbW9tIGlzIGRlZmluaXRlbHkgZmFpbGluZyBhcyBhIG1vbS4gSGVyIGpvYiBpcyB0byBsb3ZlIHlvdSBhbmQgcHJvdGVjdCB5b3UuIApJbiBhbiBpZGVhbCB3b3JsZCB0aGV5IHdvdWxkIGtlZXAgdGhlaXIgZm9sZGVycyBvcmdhbml6ZWQgYnkgaGlnaCBzY2hvb2wgbGlrZSBJIGRpZCwgYnV0IEkgZm91bmQgbW9zdCBraWRzIGp1c3Qgd2VyZW4gU28gSSB0ZWxsIHRoZW0gdGhleSBjYW5ub3QgdGFrZSBpdCBmcm9tIHRoZSByb29tLiAKRnJlaXRhZyBoYXR0ZSBlbmRsaWNoIG1hbCB3aWVkZXIgbHVzdCBlaW4gcGFhciBvbmxpbmUgVHVybmllcmUgenUgc3BpZWxlbi4gCjIgd2Vla3MgYWdvICsgQnkgTWljaGFlbCBLLiAKUm9idXN0YSBhbmQgRi4gUnVmYSBhcmUgdmVyeSBjb2xkIHRvbGVyYW50LiAKIkluIHRoZSB3aW50ZXIgYW5kIHNwcmluZyBvZiAxOTQ0IGFmdGVyIGEgcmFpbHdheSBzdHJpa2UsIHRoZSBHZXJtYW4gb2NjdXBhdGlvbiBsaW1pdGVkIHJhdGlvbnMgc3VjaCB0aGF0IHBlb3BsZSwgaW5jbHVkaW5nIHByZWduYW50IHdvbWVuLCBpbiB0aGUgd2VzdGVybiByZWdpb24gb2YgVGhlIE5ldGhlcmxhbmRzLCBpbmNsdWRpbmcgQW1zdGVyZGFtLCByZWNlaXZlZCBhcyBsaXR0bGUgYXMgNDAwIDgwMCBjYWxvcmllcy9kLiBUaGUgZmFtaW5lIGFmZmVjdGVkIHBlb3BsZSBvZiBhbGwgc29jaWFsIGNsYXNzZXMgYW5kIHdhcyBmb2xsb3dlZCBieSBncm93aW5nIHByb3NwZXJpdHkgaW4gdGhlIHBvc3R3YXIgcGVyaW9kLiBUaHVzLCB0aGUgRHV0Y2ggSHVuZ2VyIFdpbnRlciBzdHVkeSwgZnJvbSB3aGljaCByZXN1bHRzIHdlcmUgZmlyc3QgcHVibGlzaGVkIGluIDE5NzYsIHByb3ZpZGVzIGFuIGFsbW9zdCBwZXJmZWN0bHkgZGVzaWduZWQsIGFsdGhvdWdoIHRyYWdpYywgaHVtYW4gZXhwZXJpbWVudCBpbiB0aGUgZWZmZWN0cyBvZiBpbnRyYXV0ZXJpbmUgZGVwcml2YXRpb24gb24gc3Vic2VxdWVudCBhZHVsdCBoZWFsdGguIFRoaXMgc3R1ZHkgaGFzIHByb3ZpZGVkIGNydWNpYWwgc3VwcG9ydCBhbmQgZnVuZGFtZW50YWwgaW5zaWdodHMgZm9yIHRoZSBncm93aW5nIGZpZWxkIG9mIHRoZSBkZXZlbG9wbWVudGFsIG9yaWdpbnMgb2YgaGVhbHRoIGFuZCBkaXNlYXNlIChET0hhRCkuCkJ0dEYgb24gTkVTIHdhcyBvbmUgb2YgdGhvc2UgcGllY2Ugb2Ygc2hpdCBnYW1lcyB3aGVyZSB5b3UgaGFkIGxpa2UgMyBsaXZlcyB0byBnZXQgdGhyb3VnaCB0aGUgZW50aXJlIGdhbWUsIHdpdGggbm8gc2F2ZXMsIG5vIHNraXAgY29kZXMsIG5vIG5vdGhpbmcuIApBbHdheXMgZG8gYSBkb3VibGUgdGFrZSBiZWZvcmUgc2V3aW5nLiAKTm8gY2hlbWljYWwgcGVlbHMgYWxsb3dlZC4gClN1cGVybWFya2V0cyB0b2RheSBjb250YWluIHdhbGxzIG9mIHdoZWF0IGFuZCBjb3JuIGRpc2d1aXNlZCBpbiBsaXRlcmFsbHkgaHVuZHJlZHMgb2YgdGhvdXNhbmRzIG9mIGRpZmZlcmVudCBmb29kICBsaWtlIHByb2R1Y3RzLCBvciBGcmFua2VuRm9vZHMuIApQaG90b3Mgb2YgYm90aCBvZiB0aGVtLCByZWZlcmVuY2UgdG8gdGhlIGNhc2UgYmVpbmcgYnVyaWVkIGluc3RlYWQgb2YgYW55IGZvbGxvd3VwLCBpbXBseWluZyBzb21lb25lIHdhbnRlZCBpdCB0byBnbyBhd2F5Li4gCkhpLiAKVGhhdCBiZWluZyBzYWlkLCBJIGZlZWwgbGlrZSBJIHRyaWVkIHRvIEtvbiBNYXJpIHdpdGhvdXQgc3VjY2VzcyBzZXZlcmFsIHRpbWVzIGJlZm9yZSBmaW5hbGx5IGFjdHVhbGx5IGJpdGluZyB0aGUgYnVsbGV0IGFuZCBtYWtpbmcgc29tZSByZWFsIHRvdWdoIGRlY2lzaW9ucyBhYm91dCB0aGUgYXNwaXJhdGlvbmFsIGludGVsbGVjdHVhbCBib29rc2hlbGYgdGhhdCBJIHdhcyBjYXJpbmcgYXJvdW5kIHdpdGggbWUgZnJvbSBhcGFydG1lbnQgdG8gYXBhcnRtZW50LiAKIkRpZmZlcmVudC4gRmVlbHMgdmVyeSBkaWZmZXJlbnQsIiBDeW5uIHNhaWQsIHdoZW4gYXNrZWQgYWJvdXQgaGlzIDIwMTYgYW5kIDIwMTggbWFpbiBldmVudCByZXN1bHRzLiAKV2VyZSBsb29raW5nIGZvciBhIHJldGFpbCBwYXJ0bmVyIHRvIGhlbHAgdXMgZ2V0IGludG8gYmlnZ2VyLCBuYXRpb25hbCByZXRhaWxlcnMsIE1yLiAKV2hlbiB5b3UgbG9vayBhdCBJdmFua2EgcGFzdCwgaGVyICJwcm9qZWN0cyIgaGF2ZSBhbHdheXMgYmVlbiB2ZXJ5IG11Y2ggYWJvdXQgaGVyIG93biBmaW5hbmNpYWwgc2VsZiBpbnRlcmVzdHMsIHdoaWNoIGluIHR1cm4gbWVhbnMgaGVyIGZhdGhlciB3aWxsIGFnYWluIGJlIGdldHRpbmcgYSBjdXQgb2YgdGhlIHByb2ZpdHMgdG9vLiAKQSAxMiB3ZWVrIGhpZ2ggaW50ZW5zaXR5IGludGVydmFsIHRyYWluaW5nIHByb2dyYW0gcHJvZHVjZWQgYSAxNyBwZXJjZW50IGRlY3JlYXNlIGluIGJlbGx5IGZhdCBpbiBvdmVyd2VpZ2h0IHlvdW5nIG1lbi4gU3ViamVjdHMgbG9zdCAxLjUga2cgb2YgYmVsbHkgZmF0IGFuZCAyIGtnIG9mIHRvdGFsIGZhdCwgd2hpbGUgYnVpbGRpbmcgMSBrZyBvZiBtdXNjbGUuIEZhdCBidXJuaW5nIHdhcyBpbmNyZWFzZWQgYnkgMTMgcGVyY2VudCBkdWUgdG8gdGhlIDMgZGF5IGEgd2VlayBwcm9ncmFtIG9mIDIwIG1pbnV0ZXMgb2YgY3ljbGluZyBpbiB3aGljaCB0aGUgc3ViamVjdHMgc3ByaW50ZWQgZm9yIDggc2Vjb25kcyBhbmQgdGhlbiBkaWQgMTIgc2Vjb25kcyBvZiByZWNvdmVyeSwgcmVwZWF0aW5nIHRoZXNlIGludGVydmFscyBmb3IgYSB0b3RhbCBvZiA2MCBzcHJpbnRzLgpXaGVuIHZvdGUgZW5kcywgdGhlIG1hcCBpcyBsb2FkZWQgaW1tZWRpYXRlbHkgYW5kIHdhcm0gdXAgc3RhcnRzIGFuZCBsYXN0cyB1bnRpbCB0aGUgc2VydmVyIGZpbmQgcmVwbGFjZW1lbnRzIGZvciB0aGUgcGxheWVycyB0aGF0IGxlZnQgKGlmIGFueSBsZWZ0IGFmdGVyIHRoZSBmaXJzdCBtYXApLiAKSXQgd2Fzbid0IGp1c3Qgb25lIHBlcnNvbiBzYXlpbmcgc29tZXRoaW5nIGFib3V0IGl0IGJlaW5nIGEgcG9zc2liaWxpdHkgaXQgd2FzIGluIGEgZmV3IGNvbW1lbnRzIHRoYXQgc291bmRlZCBsaWtlIGl0IHdhcyBhY3R1YWxseSBnb2luZyB0byBiZSBoYXBwZW5pbmcuIApZb3Ugc2hvdWxkIGJlIHBsYXlpbmcgaW4gZnJlZXJvbGwgdG91cm5hbWVudHMgYW5kIHBsYXkgbW9uZXkgdG91cm5hbWVudHMgdG8gZ2V0IHRoZSBmZWVsIG9mIGEgdG91cm5hbWVudCBzdHJ1Y3R1cmUuIFlvdSBzaG91bGQgc3RpY2sgdG8gcGxheWluZyBvbmUgd2hlcmUgdSBrbm93IGhvdyBtYW55IHBlb3BsZSBlbnRlciBlYWNoIHRpbWUgYW5kIHdoYXQgYmxpbmQgc3RydWN0dXJlIChibGluZCB0aW1lIGxpbWl0cykgeW91IGZlZWwgY29tZm9ydGFibGUgcGxheWluZyB3aXRoIHlvdXIgc3R5bGUuIElmIHlvdSBmZWVsIHRoZXJlIGFyZSBhbG90IG9mIGRvbmtleXMgZ29pbmcgYWxsIGluIGJlY2F1c2UgaXRzIGEgZnJlZSB0b3VybmFtZW50IHJlbWVtYmVyIGl0IGhhcHBlbnMuIApZb3UganVzdCBjYW4ndCBkdXBsaWNhdGUgdGhhdCBvbmxpbmUsIiBTY2h3b2xzIHNheXMuICJZb3UgY2FuJ3Qgc2l0IGFyb3VuZCBhbmQgdGFsayBhYm91dCBhIG1vdmllIGFuZCB0aGVuIHBsYXkgYSBnYW1lLiJBbmQgdGhhdCdzIHdoeSwgZ2FtZXJzIHNheSwgb2ZmbGluZSBnYW1pbmcgcmVtYWlucyBzdWNoIGEgcG9wdWxhciBwYXN0aW1lLiJHYW1pbmcgaXMgZ29vZCwgY2xlYW4gZnVuLCIgQnJld2VyIHNheXMuICJJdCB1c2VzIHRoZSBpbWFnaW5hdGlvbiBiZWNhdXNlIHlvdSBoYXZlIHRvIGNyZWF0ZSB5b3VyIG93biBzdHJhdGVnaWVzLiAKQ1BQIHByZW1pdW1zIGhhdmUgb25seSBiZWVuIHJhaXNlZCBvbmNlIGluIHRoZSBsYXN0IDIwIHllYXJzLiAKVG9vIG11Y2ggZmx1b3JpZGUgZm9yIGtpZHMgY2FuIGxlYWQgdG8gYSBjb25kaXRpb24gY2FsbGVkIGVuYW1lbCBmbHVvcm9zaXMsIHdoZW4gdGhlIHRvb3RoIGVuYW1lbCBiZWNvbWVzIGRpc2NvbG9yZWQuIEl0J3MgcmVjb21tZW5kZWQgdGhhdCBjaGlsZHJlbiBhZ2VzIDIgYW5kIHVuZGVyIG5vdCB1c2UgZmx1b3JpZGUgdG9vdGhwYXN0ZSBhdCBhbGwuIApNb3N0IHN1ZmZlcmVycyB3aWxsIGNvbnN1bHQgdGhlaXIgbWVkaWNhbCBkb2N0b3IsIHJlY2VpdmluZyBtdXNjbGUgcmVsYXhhbnQsIGFudGkgaW5mbGFtbWF0b3J5IG9yIHBhaW4gbWVkaWNhdGlvbnMsIG9yIGlmIHRoYXQgZmFpbHMsIGEgcmVmZXJyYWwgZm9yIHBoeXNpY2FsIHRoZXJhcHkgb3IgdHJhY3Rpb24uCkl0IHdhcyBhbHNvIGZlYXR1cmVkIGluIHRoZSBtb3ZpZS4gCkxpa2UgeW91IHNhaWQsIGFzIHNvb24gYXMgbXkgZG9nIGdvZXMgZnJvbSByZWxheGVkLCB0byAid2hhdCB0aGUgaGVsbCBpcyB0aGF0IEkgc2VlIHVwIGFoZWFkLCIgSSBtYWtlIHN1cmUgdG8gZ2V0IGhpcyBhdHRlbnRpb24gYmFjayB0byBtZSBhbmQgZXZhbHVhdGUgdGhlIHNpdHVhdGlvbiB0byBtYWtlIGEgZGVjaXNpb24gd2hldGhlciB0byBwdXQgaGltIG9uIGxlYXNoIG9yIG5vdC4gCkZvciBqZXdlbHJ5LCBub3RoaW5nIGlzIHNleGllciB0aGFuIGRpYW1vbmRzLi4gCldoaWxlIHRoZXkgbWF5IGJlIG1pbm9yIGlzc3VlcyBhbmQgb25lcyB5b3UgYWxyZWFkeSBrbm93LCBlYWNoIG9uZSBsZWFkcyB1cCB0byB0aGUgdWx0aW1hdGUgc2VjcmV0LiBKdXN0IHRha2UgYSBmZXcgbWludXRlcyBhbmQgcmVhZCBpdCB0aHJvdWdoLiAKQU9MIGF0dGVtcHRlZCB0byBiZSB0aGlzIHNxdWFyZSwgZmFtaWx5IGZyaWVuZGx5ICJlbnRpcmUgaW50ZXJuZXQgaW4gb25lIGFwcGxpY2F0aW9uIiwgYnV0LCBzZWV0aGluZyBiZW5lYXRoIHRoZSBzdXJmYWNlIHdhcyBjaGFvcyBhbmQgaWxsZWdhbGl0eS4gVGhlIGtpZHMgdXNpbmcgZmFrZSBhY2NvdW50cyB0byBkb3dubG9hZCBwb3JuIGFuZCB3YXJleiAoY3JhY2tlZCBhbmQvb3IgcGlyYXRlZCBzb2Z0d2FyZSkgd2FzIGRlZmluaXRlbHkgdGhlIGxlYXN0IG9mIHRoZSBpbGxlZ2FsIHRoaW5ncyB0byB3b3JyeSBhYm91dC4gSSByZW1lbWJlciB0aGUgZmlyc3QgdGltZSBhIDQwIHllYXIgb2xkIHdvbWFuIGxlZCBtZSBvbiBmb3IgYSB3ZWVrIG9yIHR3byB0aGF0IHNoZSB3YXMgb25seSBpbiBoZXIgZWFybHkgMjAgWWVhaC4gLiAuIGFzIGZhciBhcyBJIGtub3csIEFPTCBpcyB0aGUgb3JpZ2luIG9mIHRoZSB0ZXJtcyAiY3liZXIiLCBhcyBpbiBjeWJlcnNleCwgYW5kICJBU0wiIChBL1MvTCksIGFzIGluLCBhZ2UsIHNleCwgbG9jYXRpb24uCkJ1dCByZW5ld2VkIHRhbGsgb2YgYSBzdGF0ZSBiYWlsb3V0IGZvciB0aGUgdHdvIEZpcnN0RW5lcmd5IFNvbHV0aW9ucyBudWNsZWFyIHBsYW50cyBoYXMgamVvcGFyZGl6ZWQgZnVuZGluZyBmb3IgdGhlIG5ldyBwbGFudHMsIGhlIHNhaWQuIAoiT2ggSSBvbmx5IGhlcmUgZm9yIGEgdHJpbSBhbmQgbm90IGEgY3V0IHNvIGRvbnQgY2hhcmdlIG1lIGZvciBhIGN1dCIuIApBcyB5b3UgbWF5IGhhdmUgc3VzcGVjdGVkLCB0aGVyZSByZWFsbHkgaXMgYSBzY2llbmNlIHRvIHBpY2tpbmcgd2hpY2ggc2xvdCBtYWNoaW5lcyB0byB1c2UsIHdoZW4gdG8gY3V0IHlvdXIgbG9zc2VzIGFuZCB3aGVuIHRvIG1ha2Ugc3VyZSB0aGF0IHlvdSBhcmUgZ29pbmcgdG8gYmUgZ2V0dGluZyB0aGUgcmlnaHQga2luZCBvZiBtb25leSBpbnZvbHZlZCwgYW5kIHRoaXMgY291cnNlIHdpbGwgdGVsbCB5b3UgYWxsIG9mIGl0Li4gCidNb29yZSdzIGxhdycgc2F5cyB0aGF0IHRoZSBudW1iZXIgb2YgdHJhbnNpc3RvcnMgb24gYSBjaGlwIHdpbGwgYXBwcm94aW1hdGVseSBkb3VibGUgZXZlcnkgMTggbW9udGhzLiBUaGlzIGhhcyBiZWVuIHRoZSBjYXNlIGZvciBtYW55IHllYXJzLCBidXQgdGhpcyBsYXcgaXMgbm93IHN0YXRlZCBtb3JlIGdlbmVyYWxseSBhcyB0aGUgcHJvY2Vzc2luZyBwb3dlciBvZiBjb21wdXRlciBpbnRlZ3JhdGVkIGNpcmN1aXRzIChDUFVzKSBkb3VibGVzIGV2ZXJ5IDE4IG1vbnRocy4gVGhpcyBjYW4gYmUgc2VlbiBhcyBtdWx0aXBsZSBjb3JlcyBhcmUgYWRkZWQgdG8gQ1BVcywgYW5kIHRoZSBjYXBhYmlsaXR5IG9mIHN1cHBvcnRpbmcgY2lyY3VpdHJ5IChzdWNoIGFzIG1lbW9yeSBhbmQgYnVzIHNwZWVkKSBpbmNyZWFzZXMuIChGdWxsIEFuc3dlcikKOCApIFBhaW4gaW50ZW5zaXR5IHdhcyBtZWFzdXJlZCB3aXRoIHZpc3VhbCBhbmFsb2cgc2NhbGUgKFZBUykuCkhlcmUsIE1vbGx5IHN0cml2ZXMgdG8gd2luIHRoZSByZXNwZWN0IG9mIGhlciBlc3RyYW5nZWQgZmF0aGVyIChLZXZpbiBDb3N0bmVyKSB3aGlsZSBzaG92aW5nIGhlciBzdWNjZXNzIGluIGhpcyBmYWNlLiBUaGUgYnVpbGQgdXAgdG8gd2F0ZXJzaGVkIHNjZW5lcyBiZXR3ZWVuIHRoZSBjaGFyYWN0ZXJzIG1ha2VzIHRoZSBwYXlvZmYgYW4gZW1vdGlvbmFsIHJvbGxlcmNvYXN0ZXIsIHdpdGggbW90aGVyIGFuZCBmYXRoZXIgYmFya2luZyBhdCBlYWNoIG90aGVyLCByaXBwaW5nIG9wZW4gb2xkIHdvdW5kcywgYmVmb3JlIGdyYWR1YWxseSBsZXR0aW5nIGRvd24gdGhlaXIgZ3VhcmRzIGZvciB0aGUgcHN5Y2hvbG9naWNhbCBzYWx2YXRpb24gYm90aCBzZWVrLklkcmlzIEVsYmEgc21vbGRlcnMgYXMgQmxvb20ncyByZWx1Y3RhbnQgbGF3eWVyLCB3aG8gYWdyZWVzIHRvIHRha2UgaGVyIGRpZmZpY3VsdCBjYXNlLCBodXJsaW5nIGhpcyBwcm9mZXNzaW9uYWwgcmVwdXRhdGlvbiBiZXR3ZWVuIHRoZSBjYXJlZXIgYW5kIGZpbmFuY2lhbCBvYmxpdmlvbiB0aGF0IGNvdWxkIGF3YWl0IGhpcyBjYWdleSBjbGllbnQuIAoxNSBhbmQgU3VuZGF5LCBEZWMuIApOb3cgSSBhbSB1cGdyYWRpbmcgdG8gTG9naWMgUHJvIDkgYW5kIHdoZW4gSSBlbnRlciB0aGUgbmV3IHNlcmlhbCBudW1iZXIgaXQgYXNrcyBmb3IuIApUaGUgb3RoZXIgbWFqb3Igc3BvcnRzIGxlYWd1ZXMgZG9uJ3QgcmVhbGx5IGhhdmUgY29tcGV0aXRpb24gb24gdGhlIG5hdGlvbmFsIHNjYWxlLiBUaGUgTkZMcyB0YWxlbnQgaXMgc3RheWluZyBpbiB0aGUgTkZMIGN1eiBldmVyeXRoaW5nIGVsc2UgaXMgYSBkb3duZ3JhZGUuIApLdmFrdnMgdQpJIHdvcmtlZCBuZWFyIE15ZW9uZ2RvbmcgZm9yIGEgY291cGxlIHllYXJzLCBhbmQgc3RpbGwgZ28gdGhlcmUgb25jZSBpbiBhIHdoaWxlLiAKQ2xpY2sgdGhlIHRvcHR1dG9yaWFsIGNhbGxlZCB0dXRvcmlhbCwuIEFuZCB3aGVudGhleSBhcmUsLiAKVGhpcyB0aW1lIGlzIGdvbm5hIGJlIGRpZmZlcmVudCBJIHNvcnJ5LCBJIGRvbiBsaWtlLiBUaGUgd2F5LiAKTW9uc29vbiB3aW5kcyBjYXJyaWVkIGRvdWJsZSBvdXRyaWdnZXIgY2Fub2VzIGFsb25nIHRoZSBjaW5uYW1vbiByb3V0ZSB0aHJvdWdoIHRoZSBTb3V0aCBTZWFzLiBMYXRlciwgRWd5cHRpYW4gYW5kIGV2ZW50dWFsbHkgUm9tYW4gdHJhZGVycyB0b29rIGFkdmFudGFnZSBvZiB0aGVzZSBzYW1lIHdpbmRzIHRvIHRha2UgdGhlbSB0byBJbmRpYSBpbiB0aGUgc3VtbWVyIGFuZCBob21lIGFnYWluIGluIHRoZSB3aW50ZXIuLiAKRW1haWwgY29tbXVuaWNhdGlvbnMgY291bGQgcmVzdWx0IGluIHdpcmUgZnJhdWQgY2hhcmdlcy4gIklmIG1vcmUgdGhhbiB0d28gcGVvcGxlIGF0IGFuIGFnZW5jeSB0YWxrZWQgdG9nZXRoZXIgYW5kIGRlY2lkZWQgdG8gZG8gaXQsIHRoYXQncyBwb3RlbnRpYWxseSBjb25zcGlyYWN5LCIgaGUgc2FpZC4gIklmIHRoZXkgZGlkIGl0IG1vcmUgdGhhbiBmaXZlIHRpbWVzLCB0aGF0J3MgcG90ZW50aWFsbHkgcmFja2V0ZWVyaW5nLiIuIApUaGUgY29tcGFueSBkZWNsaW5lZCB0byBhbnN3ZXIgZnVydGhlciBxdWVzdGlvbnMgYWJvdXQgaG93IG1hbnkgZW1wbG95ZWVzIHdvdWxkIGJlIGhvdXNlZCBpbiB0aGUgc3BhY2Ugb3Igd2hhdCB3b3JrIHRoZXkgd291bGQgYmUgZG9pbmcgdGhlcmUuCk11Y2ggbGlrZSBob3cgZXZlbiB0aG91Z2ggQXJpYW5hIEdyYW5kZSBoYXMgbWFkZSBoZXJzZWxmIGxvb2sgcmFjaWFsbHkgYW1iaWd1b3VzIGJlY2F1c2Ugb2YgaGVyIGRlZXAgZmFrZSB0YW4gYW5kIGhlciBsaXAgaW5qZWN0aW9ucyBhbmQgbmV3IGFlc3RoZXRpYywgc2hlIHN0aWxsIGEgd2hpdGUgSXRhbGlhbiB3b21hbiBiZWNhdXNlIHNoZSBldGhuaWNhbGx5IENhdWNhc2lhbi4gSSBzZWVuIHNvIG1hbnkgcGVvcGxlIG1pc3Rha2UgaGVyIGZvciBub24gd2hpdGUgTGF0aW5hIG9yIGJpcmFjaWFsLCBidXQgdGhhdCBkb2VzbiBtYWtlIGhlciBhbnkgbGVzcyBDYXVjYXNpYW4uLiAKUGF0aWVudHMgd2VyZSBydXNoaW5nIGluIGZyb20gdGhlIGVtZXJnZW5jeSByb29tLiAKQnV0IGluIHRoZSB3YWtlIG9mIG5lZ2F0aXZlIHB1YmxpY2l0eSBmb2xsb3dpbmcgYSBTdW5kYXkgQWdlaW52ZXN0aWdhdGlvbiBpbnRvIGl0cyBhY3Rpdml0aWVzLCB0aGUgZm91bmRhdGlvbiBkcm9wcGVkIGl0cyBzZWNyZWN5IGJpZCBsYXN0IHdlZWsuCkluIHRoZSBBcmVvcGFnaXRpY2EgSm9obiBNaWx0b24gcmVhY2hlcyBpbnRvIHRoZSBoZWF2ZW5zIHRvIGNvbmRlbW4gdGhlIGRlc3Ryb3llciBvZiBhbGwgYm9va3MsIGZpbmRpbmcgdGhlbSBzb3VsbGVzcyBtb25zdGVycyB3aG8gd291bGQgZGVzdHJveSBSZWFzb24gaXRzZWxmLiBXZWxsLCB0aGVyZSBhcmUgbW9uc3RlcnMgbGlrZSB0aGlzIHRoYXQgbWF5IGJlIGRlbW9ucywgYW5kIG1vbnN0ZXJzIHRoYXQgbWF5IGJlIGFub2ludGVkIGF2ZW5nZXJzLCB0dW5uZWxpbmcgTWlsdG9uIG9yIG5vdC4KQW5kIHRoYXQgaG93IHBvcm4gdHVybmVkIG1lIHN0cmFpZ2h0LiBJIHdhdGNoZWQgdG9vIG11Y2gsIGZhbnRhc2l6ZWQgbXlzZWxmIGludG8gaXQgb25jZSB0b28gb2Z0ZW4gYW5kIHBvb2YsIGFsbCBkZXNpcmVzIG91dHNpZGUgb2YgdGhlIGhldGVyb3NleHVhbCBtYXRyaXggZGlzYXBwZWFyZWQuLiAKUG9rZXIgQnJhY2VsZXQgUG9rZXIgQ2FyZCBQcm90ZWN0b3IgaXMgb25lIG9mIHRoZSBiZXN0IHBpZWNlcyBhdmFpbGFibGUgZm9yIHlvdSBpbiB0aGUgY3VycmVudCBwb2tlciBtYXJrZXQuIApUaGUgR29vZCB0aGUgQmFkIHRoZSBVZ2x5IGlzIHByb2JhYmx5IHRoZSBlYXNpZXN0IHN0YXJ0aW5nIHBvaW50LCBidXQgRm9yIGEgRmV3IERvbGxhcnMgTW9yZSBhbmQgcmVhbGx5IE9uY2UgVXBvbiBhIFRpbWUgaW4gdGhlIFdlc3QgYXJlIGVxdWFsbHkgZ3JlYXQsIHRoZSBsYXR0ZXIgYmVpbmcgbXkgZmF2b3JpdGUgb2YgTGVvbmUuIApTdXJlLCB2aXJnaW4gc2hhbWluZyBpcyByZWxldmFudCBubyBtYXR0ZXIgeW91ciBzZXh1YWwgb3JpZW50YXRpb24sIGJ1dCB0aGF0IGRvZXNuIG1lYW4gdGhhdCB0aGUgZXhwZXJpZW5jZSBpcyB0aGUgc2FtZSBmb3IgZXZlcnlvbmUuSSB0b3RhbGx5IGRpc2FncmVlIHRoYXQgaGF2aW5nIHRoaXMgdmlld3BvaW50IHNoYXJlZCB3aWxsIG1lYW4gdGhhdCBubyBvbmUgaXMgZ29pbmcgdG8gdGFsayBhYm91dCB0aGUgZWZmZWN0cyB2aXJnaW4gc2hhbWluZyBoYXMgb24gbm9uIGFzZXh1YWwgbWVuLkJhc2ljYWxseSwgaWYgeW91IHdhbnQgdG8gaGF2ZSBhIG5vbiBhc2V4dWFsaXR5IGZvY3VzZWQgZGlzY3Vzc2lvbiBvZiB2aXJnaW4gc2hhbWluZywgcGxlYXNlIGVpdGhlciBmaW5kIGEgcmVsZXZhbnQgYXJ0aWNsZSBhbmQgcG9zdCBpdCwgb3IgY3JlYXRlIGEgc2VsZiBwb3N0IHRvIGdhcm5lciBkaXNjdXNzaW9uLiAKU28gd2VpZ2h0eSwgc28gaW1wb3J0YW50LCBzbyBjZW50cmFsIHRvIG91ciBwcmVzZW50YXRpb24gb2Ygc2VsZiBpbiB0aGUgbW9kZXJuIHdvcmxkLiAKVGhpcyBzaWduaWZpY2FudGx5IGluY3JlYXNlcyB0aGUgY2hhbmNlcyBhbmQgdGhlIGFtb3VudCBvZiB3aW5uaW5ncy4gCkZlZGVyYWwgaW52ZXN0aWdhdG9ycyBhbHNvIHNvdWdodCBkb2N1bWVudHMgYW5kIGVtYWlscyByZWxhdGluZyB0byB1bmlvbiBwaWNrZXRpbmcgYW5kIG90aGVyIGpvYiBhY3Rpb25zIGFnYWluc3Qgbm9udW5pb24gY29udHJhY3RvcnMgYXMgd2VsbCBhcyByZXBvcnRzIGJ5IExvY2FsIDk4IG9mZmljaWFscyBvbiBub251bmlvbiBqb2Igc2l0ZXMuClRoZXkgd2VyZSB0aGUgb25seSBvbmVzIHdpdGggbG9ja3Mgb24gdGhlaXIgZG9vcnMuIApJIHNheSBpbiB0ZXJtcyBvZiB0aGUgY29mZmVlICJ3aG8gY2FyZXMgaWYgeW91IGxpa2UgaXQgZHJpbmsgaXQgaWYgeW91IGRvbiBkb24gYW5kIGl0IGJlY29tZXMgInRoaXMgd29tYW4gaXMgaW1tdW5lIHRvIGNyaXRpY2lzbSBhbmQgeW91IGhhdmUgdG8gZHJpbmsgaGVyIGNvZmZlZSBpZiB5b3UgZHJhbmsgU3RhcmJ1Y2tzIHdoaWxlIFNodWx0eiByYW4gaXQiLiBObyBvbmUgc2VlbXMgdG8gd2FudCB0byBhY3R1YWxseSB1bmRlcnN0YW5kIGEgcG9pbnQgb2YgdmlldyB0aGV5IGRpc2FncmVlIHdpdGggdGhleSBqdXN0IHdhbnQgdG8gY29uc3RydWN0IGEgd2F5IHRvIG1ha2UgdGhlIHBlcnNvbiB0aGV5IGRpc2FncmVlIHdpdGggaW50byBhbiBvdGhlciBvciBzb21lb25lIHRoYXQganVzdCBkb2VzbiBrbm93LgpQdXNoZXMgc2hvdWxkIGJlIG1hZGUgZm9yIGZhaWwgc2FmZSBudWNsZWFyIHJlYWN0b3JzIHdpdGggYXR0YWNoZWQgYnJlZWRlciByZWFjdG9ycy4gV2UgY291bGQgaGF2ZSBhIG1pbmQgYmxvd2luZyBhbW91bnQgb2YgZW5lcmd5IHByb2R1Y3Rpb24gYW5kIGEgbWluaW1hbCBhbW91bnQgb2Ygd2FzdGUuIFRob3NlIHdvcnJpZWQgYWJvdXQgdGhlIHNhZmV0eSBvZiBudWNsZWFyIG5lZWQgdG8gY29udGVuZCB3aXRoIHRoZSBmYWN0IHRoYXQgV0hPIHJlcG9ydHMgNyBtaWxsaW9uIHByZW1hdHVyZSBkZWF0aHMgZnJvbSBhaXIgcG9sbHV0aW9uIGFuZCB0aGUgZmFjdCB0aGF0IHNvbGFyIHBhbmVscyBhcmUgZGlzcG9zYWJsZSwgY29uc3VtZSBoZWF2eSBtZXRhbHMsIGFuZCBkZXN0cm95IG1hc3NpdmUgZWNvc3lzdGVtcyBiZWNhdXNlIG9mIHRoZWlyIHNjYWxlLi4gClBvbG96IHNlZXMgaGltc2VsZiBhcyBhIHJpc2sgbWFuYWdlcjsgaGUgYWx3YXlzIGlzIGhlZGdpbmcgYWdhaW5zdCB0aGUgcG9zc2liaWxpdHkgdGhhdCB0aGUgbW9zdCBvYnZpb3VzIHNjZW5hcmlvIGNvdWxkIGJlIHdyb25nLiAKVGhlIG1pY3Jvc2NvcGljIG1hbGFzc2V6aWEgZnVuZ3VzLCBhIG5vcm1hbCBpbmhhYml0YW50IG9uIGEgaGVhbHRoeSBodW1hbiBoZWFkLCBmZWVkcyBvbiB0aGUgZmF0dHkgb2lscyBzZWNyZXRlZCBieSBoYWlyIGZvbGxpY2xlcyBpbiB0aGUgc2NhbHAuIApVL3R3aXN0ZWRsb2dpY3ggZGlkIGluIHRoaXMgY29tbWVudCB3aGF0IHRoZSBtb2RzIHNob3VsZCd2ZSBkb25lIG9uIHRoZSBvcmlnaW5hbCB0aHJlYWQsIGFuZCB0aGF0J3MgY2xhcmlmeWluZyB0aGUgaXNzdWUuIApNYWlzIHBvdXIgdml0ZXIgZGUgc29tYnJlciBkYW5zIHVuIGNoYW9zIHRvdGFsLCBsYSBGZWQgYSB0IG9ibGlnZSBkJ2FsbGVyIHBsdXMgbG9pbi4gRW4gbW9pbnMgZGUgZGV1eCBzZW1haW5lcywgbGUgZ291dmVybmVtZW50IGFtcmljYWluIGEgZCBuYXRpb25hbGlzZXIgcGFzIG1vaW5zIGRlIHRyb2lzIGdhbnRzIGRlIGxhIGZpbmFuY2UsIHVuIGNvbWJsZSBwb3VyIHVuZSBjb25vbWllIHF1aSBwcm5lIGwndWx0cmFsaWJyYWxpc21lLgpJZiB3ZSBmb2xkIEpKIGhlcmUgdGhlbiB3aGF0IGRvIHdlIGV2ZXIgY2FsbCB3aXRoPyBPbmx5IEFBL0tLIHdpdGggbm8gZGlhbW9uZHM/IFdoaWxlIEpKIGlzIHByZXR0eSB0b3VnaCB0byBnZXQgcmFpc2VkIG9uLCBmZWVscyBsaWtlIGEgZ29vZCBzcG90IHRvIHN0YWNrIG9mZiB3aXRoLiBXZSBiZWhpbmQgdmVyeSBmZXcgaGFuZHMgYW5kIHZpbGxhaW4gaXMgY2xlYXJseSBhY3RpdmUgZW5vdWdoIHRoYXQgd2Ugc2hvdWxkbiBiZSBUSEFUIG5pdHR5Li4gClRvIHRoaXMgZGF5IG15IHBhcmVudHMgYXJlIG5vdCBvayB3aXRoIGl0IG5vciBwcm91ZCBvZiBpdCwgdGhleSBsaWUgdG8gZmFtaWx5IGFuZCBmcmllbmRzIHNvIHRoZXkgZG9uIGhhdmUgdG8gYmUgZW1iYXJyYXNzZWQuIFlvdSBib3RoIGdldCB0byBhIHBvaW50IHdoZXJlIHlvdSBqdXN0IGhhdmUgdG8gYWNjZXB0IHRoZSBvbmVzIHlvdSBsb3ZlIG1pZ2h0IG5ldmVyIGNoYW5nZSBhbmQgeW91IGhhdmUgdG8gbG92ZSB0aGVtIGFueXdheXMuIEkgbm90IHNheWluZyB0aGlzIHRvIGJlIGEgcGl0eSBwYXJ0eSBvciBhd2t3YXJkIGJ1dCBqdXN0IHRvIGVtcGhhc2l6ZSB0aGF0IHlvdSBuZXZlciBrbm93IHdoYXQgc29tZW9uZSBpcyBnb2luZyB0aHJvdWdoIGFuZCB3aHkgaXQgc28gaW1wb3J0YW50IHRvIGJlIGJldHRlciBhbmQgdGVhY2ggeW91ciBraWRzIGJldHRlci4gCk9mIGNvdXJzZSwgZmluYWxseSBmaW5kaW5nIGEgZ29vZCBkb2N0b3IgYW5kIGdldHRpbmcgb24gYSBtZWRpY2F0aW9uIHRoYXQgYWN0dWFsbHkgd29ya2VkIChIdW1pcmEpIGhhcyBiZWVuIGxpZmUgY2hhbmdpbmcgYXMgd2VsbC4gQW5kIGl0IHRvb2sgYSBsb25nIHRpbWUgb2YgbGVhcm5pbmcgcHJvcGVyIGZvcm0gYW5kIGxpZnRpbmcgbGlnaHRlciB3ZWlnaHRzIHRvIGdldCB3aGVyZSBJIGF0IG5vdy4gCk1hbiBjb252aWN0ZWQgb2YgdHJ5aW5nIHRvIGtpbGwgdHJvb3BlciBCeSBHRU9SR0UgRE9SU0VZIE5ld3MgUG9zdCBTdGFmZiBBIEZyZWRlcmljayBtYW4gd2FzIGNvbnZpY3RlZCBXZWRuZXNkYXkgaW4gRnJlZGVyaWNrIENvdW50eSBDaXJjdWl0IENvdXJ0IG9mIGF0dGVtcHRlZCBtdXJkZXIgd2hlbiBoZSBmaXJlZCAxNCBzaG90cyBpbnRvIGFuIG9mdGVuIGJ1cmdsYXJpemVkIEplZmZlcnNvbiB0YXZlcm4gd2hlcmUgYSBwb2xpY2Ugc3Rha2UgIG91dCB0ZWFtIHdhcyBoaWRkZW4uIApJIGJlZW4gZ2VudWluZWx5IHNjYXJlZCBiZWluZyBhcm91bmQgdGhhdCB0cmFuc2llbnQgcG9wdWxhdGlvbiBhdCBuaWdodC4gClRva2VrY293Ym95IHUKVGhpcyBpcyB0aGUgc2hpdCB0aGF0IGNhbiBnZXQgeW91IGluIHRoZSBuZXdzLCBnZXQgaGltIGFuZCBvdGhlciBwZW9wbGUga2lsbGVkLCBhbmQgZ2V0IHlvdXIgY2hhcHRlciBzaHV0IGRvd24uIApIaXMgaW5jb21lIGNvbWVzIGZyb20gd2lubmluZywgaGUgc2FpZCwgYW5kIGFidXNlZCBkb2dzIGFyZSBzbG93IGRvZ3MuLiAKSW4gcmVnYXJkcyB0byB5b3VyIHNvdXJjZSwgSSBhcHByZWNpYXRlIHlvdSBsaW5raW5nIGl0IGJ1dCBpdCBkb2VzbiBpbmNsdWRlIGFueSBkYXRhIG9yIGFuYWx5c2lzIHNvIGl0IGlzIGhhcmQgdG8gbWFrZSBoZWFkcyBvciB0YWlscyBvZiB3aGF0IGlzIGJlaW5nIHNhaWQuLiAKV2lsbCB0aGUgZmlyc3QgbWlsZSBhbHdheXMgc3Vjaz8hIEkgdW5kZXJzdGFuZCBteSBib2R5IG5lZWRzIHRvIGdldCB1c2VkIHRvIHJ1bm5pbmcgc28gaXQgdGFrZSBhIHdoaWxlIHRvIGdldCBpbnRvIHRoaW5ncyBidXQgdGhlcmUgc2VlbXMgc3VjaCBhIG1hcmtlZCBkaWZmZXJlbmNlIGJldHdlZW4gbXkgZmlyc3QgbWlsZSBhbmQgc3Vic2VxdWVudCBtaWxlcyEKTmV3IFlvcmsgQ2l0eQpDb25zaWRlciB0aGUgbnVtYmVyczogdGhlIGN1cnJlbnQgdmFjYW5jeSByYXRlIGluIG9uY2UgY292ZXRlZCBNaWR0b3duIHN0YW5kcyBhdCAxNS40IHBlcmNlbnQsIHVwIGZyb20gOC43IHBlcmNlbnQgYSB5ZWFyIGFnby4gCkkgd29ya2VkIGF0IGEgam9iIHdoZXJlIHRoZSBJVCBkZXBhcnRtZW50IHdlcmUgdGhlIHVub2ZmaWNpYWwgaGFuZGlwZXJzb25zLiBUaGUgb3duZXJzIHdlcmUgb2xkIGFuZCBsZWdpdGltYXRlbHkgdGhvdWdodCB0aGlzIHdhcyBub3JtYWwsIGJlY2F1c2UgdGhleSBtYWtlIHN0dWZmIHdvcmsgdGhleSBtdXN0IG1ha2UgZXZlcnl0aGluZyB3b3JrLiAKTGl0aGUgYW5kIGVmZm9ydGxlc3NseSBlY29ub21pY2FsIGluIGhpcyBydW4gdXAsIFJvYmVydHMgZGlkIG5vdCBiZW5lZml0IGZyb20gY29taW5nIGludG8gYSBncmVhdCBXZXN0IEluZGllcyBzaWRlIChvbmx5IG9uZSBvZiBoaXMgZmlyc3Qgc2V2ZW4gZml2ZSBmb3JzIGNhbWUgaW4gdmljdG9yeSkuIEhlIGZhbW91c2x5IGJsZXcgSW5kaWEgYXdheSBpbiBKYW1haWNhIGluIDE5ODIgODMgd2l0aCB0aHJlZSB3aWNrZXRzIGluIGFuIG92ZXIgdG8gYWxsb3cgVml2IFJpY2hhcmRzIHRvIGhhbW1lciBXZXN0IEluZGllcyB0byBhIHZpY3RvcnkgdGFyZ2V0IG9mIDE3MyBpbnNpZGUgMjYgb3ZlcnMuLiAKV2hpbGUgbWFnbmVzaXVtIGlzIHZlcnkgc2FmZSwgaGlnaGVyIGRvc2VzIGhhdmUgYmVlbiBhc3NvY2lhdGVkIHdpdGggZ2FzdHJvaW50ZXN0aW5hbCBkaXN0cmVzcy4KTW9zdCBvZiB0aGUgdGltZSB0aGlzIGlzbiBnb2luZyB0byBkbyBhbnl0aGluZyBiZXNpZGVzIHdhc3RlIHRpbWUuIEZ1Y2sgSmFja2llIGFuZCBmdWNrIHlvdSBmb3IgZW5jb3VyYWdpbmcgdGhpcy4uIApUaGFuayBnb29kbmVzcyBodWJzIHNlZXMgdGhyb3VnaCBoZXIgY29tcGxldGVseSBzbyBoZXIgcGxhbiB3b24ndCB3b3JrLiBIdWJzIGlzIGp1c3Qgd29ycmllZCBhYm91dCB3aGF0IHRvIHNheSB3aGVuIGFuZCBpZiBteSBKTk1vbSBhc2tzIGhpbSB3aGF0IGhlIHRob3VnaHQgb2YgdGhlIGJvb2shIEhlIGlzIHRoaW5raW5nIGhlJ3MgZ29pbmcgdG8gc2F5IGhlIGRpZG4ndCBmaW5kIGl0IHJlbGV2YW50IHNvIGhlIGRpZG4ndCByZWFkIGl0IGFuZCB3YXMgY3VyaW91cyB3aGF0IG1hZGUgaGVyIHRoaW5rIG9mIGhpbSBmb3IgdGhpcyBib29rLiBCdXQgaGUncyBhbHNvIGFmcmFpZCBvZiBoZXIgcmVhY3Rpb24gaGFoYS4uIApJIHU7ZSB0aGVUaGF0IHdoaWNoIGlzIG1lYXN1cmFibGUgaXMgbm90IGluY29uY2VpdmFibGUsIGFuZCB0aGVyZSAuIApQZW9wbGUgdGVuZCB0byByZWFkIGNvbW1lbnRzIG9ubGluZSBpbiBhIG5lZ2F0aXZlIHRvbmUgYW5kIEkgZG9uJ3QgdGhpbmsgdGhhdCdzIGhlYWx0aHkuLiAKSGVsbG8hIEknbSBsb29raW5nIGZvciBhIHNpbXBsZSBzb2x1dGlvbiB0byB0dXJuIG15IDY0R0IgVVNCIFRodW1iIERyaXZlIGludG8gYSBwb3J0YWJsZSBNUDMgcGxheWVyLiBOb3RoaW5nIGZhbmN5LCBzaW1wbGUgZGlzcGxheSwgY29udHJvbHMsIGFuZCBzbWFsbCBzY3JlZW4uIApUaGlzIGhvdXNlIGluIFBhcGFtb2Egd2FzIGEgcGxhY2UgdG8gd29yayBhbmQgcGxheS4KQmV0dGVyIHRvIGJlIHNhZmUgdGhhbiBzb3JyeSB3aXRoIHRoZSBoaWdoIGxldmVsIG9mIHVuY2VydGFpbnR5IGFjcm9zcyB0aGUgQ2FwaXRvbCByaWdodCBub3csIG11bHRpcGxlIGFpZGVzIGFja25vd2xlZGdlZC4uIApQb2tlciBpcyBpbnZhcmlhYmx5IGEgcm9sbGVyIGNvYXN0ZXIgcmlkZSBvbmUgbWludXRlIHlvdSB1cCwgdGhlIG5leHQgeW91IGRvd24uIEl0IGEgZ2FtZSBmb3IgbmlnaHQgb3dscyB0b28gcGxheSB3ZW50IG9uIHRpbCAzLjMwYW0uIE1jSHVnaCBzdXJ2aXZlZCBkYXkgb25lLCBhbmQgZm91Z2h0IGhpcyB3YXkgaW50byB0aGUgdG9wIDcwLCB0aHVzIGd1YXJhbnRlZWluZyBoaW1zZWxmIGEgY2FzaCBwcml6ZS4gCkkgdGhpbmsgeW91IGNvdWxkIHJlYWxseSBiZW5lZml0IGZyb20gZ2V0dGluZyBhIGdvb2QgbGlicmFyeSBvZiBzYW1wbGVzLiBJIHVzZSBTcGxpY2UgKGl0IGEgc3Vic2NyaXB0aW9uIHNlcnZpY2UpIGZvciBteSBzYW1wbGVzLCBhcyB3ZWxsIGFzIEN5bWF0aWNzIGFuZCBWZW5nZWFuY2UsIGJ1dCB5b3Ugb25seSByZWFsbHkgbmVlZCBvbmUgb2YgdGhvc2UgdG8gZ2V0IGJ5LiBJIHdvdWxkIGhhdmUgZ29uZSB3aXRoIFNwbGljZSBhdCB0aGlzIHBvaW50LgpXaGVuIHlvdSBidXkgdGhlIDIwMCBUZXhhcyBIb2xkZW0gUG9rZXIgQ2hpcCBTZXQgd2l0aCBBbHVtaW51bSBDYXNlIHlvdSBub3Qgb25seSBnZXQgdGhpcyBzdHVyZHkgYW5kIGF0dHJhY3RpdmUgY2FzZSBhbmQgdGhlIHNwZWNpYWwgY2hpcHMgYnV0IGFsc28gNSBkaWNlIGFuZCB0d28gZGVja3Mgb2YgY2FyZHMuIFRoZSBkaWNlIGFuZCBjYXJkcyBhcmUgYXJyYW5nZWQgaW4gdGhlIG1pZGRsZSBvZiB0aGUgY2FzZSB3aXRoIDEwMCBjaGlwcyBvbiBlaXRoZXIgc2lkZSBtYWtpbmcgZm9yIGFuIGF0dHJhY3RpdmUgZGlzcGxheS4KSSBiZSBpbnRlcmVzdGVkIHRvIHNlZSB0aGUgdG90YWwgUkVNIHRpbWUgY2hhbmdlIGFzIHdlbGwsIGRvIHlvdSBoYXZlIHRoYXQgZGF0YT8gMiBwb2ludHMgIHN1Ym1pdHRlZCAzIGRheXMgYWdvRmlyc3Qgc2VudGVuY2Ugd2FzIGEgam9rZSA7KUkgZG9uIGtub3cgaG93IGFjY3VyYXRlIHRoZSBmaXRiaXQgaXMgZm9yIHRyYWNraW5nIGl0LiBPbiBhbiBhdmVyYWdlIDYgaG91ciBuaWdodDogMiBwb2ludHMgIHN1Ym1pdHRlZCAzIGRheXMgYWdvSnVzdCBzdGFydGVkIGxpZnRpbmcgbGl0ZXJhbGx5IDMgd2Vla3MgYWdvIChGZWJydWFyeSAxNikuIApBbGwgYXZhaWxhYmxlIG9ueW91dHViZS4gKFNlYXJjaGluZyBvbmxpbmVmb3IgbW9yZSBpZiB5b3UgYXJlIHNvIGludGVyZXN0ZWQgc2hvdWxkIHlpZWxkIG1vcmUpLiBBbHNvLCBtYW55dmVyc2lvbnMgb2YgR2FHYSdzIHNvbmdzLCBzdWNoIGFzIHBpYW5vIHNvbG9zIGFuZCBtb3JlIG1lZGxleXMgb2ZoZXIgc29uZ3MgYXJlIHVzdWFsbHkgcGVyZm9ybWVkIGF0IGhlciBzaG93cywgYW5kIHNlYXJjaGluZyB5b3V0dWJlZm9yIHRoZW0gaWYgeW91IGFyZSBzbyBpbnRlcmVzdGVkIG1heSB5aWVsZCBtb3JlIHNvbmdzLiBQbGVhc2UgcHV0IHRoZSBzdWJqZWN0IGFzICJJTG92ZSBHYUdhIi4gClRoaXMgaXMgYSBkcmVhbSBwb3J0cmF5aW5nIHRoZSBwYXNzaW9uYXRlIGludGltYWN5IG9mIEdvZCB3aXRoIEhpcyBicmlkZSwgYW5kIGEgd2FybmluZyBvZiBncmVhdGVyIGZ1dHVyZSBjYXRhc3Ryb3BoaWMgdHJvdWJsZXMgYWhlYWQgb2YgdXMuIApVbmxlc3MgeW91IGFyZSBpbiB0aGUgaGFuZCwgeW91IGFyZSB0aGUgZGVhbGVyLCBvciB5b3UgYXJlIHRoZSBmbG9vciwgeW91IHNob3VsZCBub3QgYmUgY2FsbGluZyB0aGUgY2xvY2sgb24gcGVvcGxlLCBldmVyIGluIGEgY2FzaCBnYW1lLiBBIHBsYXllciB3aG8gaXMgb3V0IHNob3VsZG4gYmUgaW5mbHVlbmNpbmcgb3RoZXIgcGVvcGxlIGFjdGlvbi4gCkkgdGhvdWdodCwgSSAyNCwgbGl2aW5nIGluIGEgYmFzZW1lbnQgYW5kIGFsbCBJIGhhdmUgaXMgYSBjYXIgd29ydGggJDUwMC4gClRoZWlyIHJhY2luZyBkYXlzIGFyZSBvdmVyIGJ5IGFnZSA0LiAKSSB3b3VsZCBsb3ZlIHRvIHNlZSB0aGUgdmlkZW8gZm9vdGFnZSBoYSBoYS4gClN0cmlwIHBva2VyIGhhcyBiZWVuIHdpdGggdXMgZm9yIGFnZXMsIGFuZCBjb250cmFyeSB0byBwb3B1bGFyIGJlbGllZiwgc3RyaXAgcG9rZXIgaXMgb3JpZ2luYWxseSBub3QgYSBzZW5zdWFsLCBlcm90aWMgZ2FtZS4gClBsZWFzZSBleHBsYWluIHRvIG1lIGhvdyAxNCUgb2YgdGhlIHRvdGFsIGVtaXNzaW9ucyBiZWluZyByZWR1Y2VkIHRvIDAlIHNvbWVob3cgPSAxMDAlIHJlZHVjZWQgZW1pc3Npb25zLiAKSWYgdGhlIGV4cGlyYXRpb24gZW5kcywgYW5kIHRoZW4gc29tZW9uZSBlbHNlIHNob3dzIHVwIHdpdGggYSBoaWdoZXIgb2ZmZXIgdGhlbiBtb3ZlIG9uLiBJZiBJJ20gdGhlIHNlbGxlcidzIGFnZW50LCBJIGNhbiBzZWUgeW91ciBwb2tlciBmYWNlIGEgbWlsZSBhd2F5Li4gCkNodSwgc2hlIHNheXMsIGFyZSBBc2lhbiBBbWVyaWNhbiBwaW9uZWVycy4gQXJlIG5vdCBzdXBwb3J0aW5nIHJvbGVzLCBXdSBzYXlzLiAKIkkgdGhpbmsgaXQgc3RhcnRzIHdpdGggbGlzdGVuaW5nIGFuZCBJIHRoaW5rIHRoZSBub24gYmxhY2sgYW5kIG5vbiBpbmRpZ2Vub3VzIGNvbW11bml0aWVzIGluIENhbmFkYSBuZWVkIHRvIHJlYWxseSB0YWtlIGEgc3RlcCBiYWNrIGFuZCBsaXN0ZW4gdG8gc3RvcmllcywiIGhlIHNhaWQuICJJIGtub3cgaXQgY2FuIGJlIHJlYWxseSBoYXJkIHRvIGJlIGxpa2UgJ3doYXQgeW91IGRpZCByZWFsbHkgaHVydCBtZSBhbmQgSSB0aGluayB5b3UgZGlkIGl0IGJlY2F1c2Ugb2YgdGhlIGNvbG91ciBvZiBteSBza2luLicgVW5kZXJzdGFuZCB0aGF0IHRoZSBjb3VyYWdlIGl0IHRvb2sgZm9yIHVzIHRvIGNhbGwgeW91IG91dCBvbiBzb21ldGhpbmcgYW5kIHByb2JhYmx5IHRoZSBuZXh0IHRpbWUgdGhpcyBoYXBwZW5zIHRha2UgYSBzdGVwIGJhY2sgYW5kIHJlYWxseSBsaXN0ZW4uIgpUb3dhcmRzIHRoZSBlbmQgb2YgdGhlIHdlZWssIHRoZSBDZW50ZXIgYW5kIHRoZSBGZWxsb3dzIGNlbGVicmF0ZWQgdm9sdW50ZWVycyBhbmQgdGhvc2Ugd2hvIGFjdGl2ZWx5IHBhcnRpY2lwYXRlZCBpbiBjYW1wdXMgc2VydmljZSBvcmdhbml6YXRpb25zIHdpdGggYW4gZXhjaXRpbmcgcGljbmljIGluIHRoZSBjZW50ZXIgb2YgY2FtcHVzIGF0IFdpbHNvbiBQbGF6YS4gR3Vlc3RzIHdlcmUgaW52aXRlZCB0byBqdW1wIGFyb3VuZCBpbiBhbiBlbm9ybW91cyBpbmZsYXRhYmxlIG9ic3RhY2xlIGNvdXJzZSwgY3JhZGxlIHRoZXJhcHkgcHVwcGllcywgZWF0IGRlbGljaW91cyBwaXp6YSwgYW5kIGdyYWIgZnJlZSBVQ0xBIFZvbHVudGVlciBDZW50ZXIgYXBwcmVjaWF0aW9uIHN0aWNrZXJzIS4gCk9ubGluZSBHYW1ibGluZyBUdXJub3ZlciBSaXNlczoKTWFzc2FnZSBpcyBhIFdvbmRlcmZ1bCB0aGluZwpFeGNoYW5nZSBzZXJ2aWNlcyBiZXR3ZWVuIHRoZSBkaWZmZXJlbnQgY29tcGFuaWVzIGFuZCBsb29raW5nIGZvciB3YXlzIHRvIGltcHJvdmUgYm90aCBjb21wYW5pZXMnIGJyYW5kcy4gCklmIHlvdSB3YW50IHRvIGluZHVsZ2UgaW4gYSBjYXJlZXIgaW4gc2VsbGluZyBQcm9mZXNzaW9uYWwgQ2xheSBQb2tlciBDaGlwcywgaXQgaXMgYWJzb2x1dGVseSBlc3NlbnRpYWwgdG8gbGVhcm4gdGhlIGJhc2ljcyBvZiB3cml0aW5nIGEgYnVzaW5lc3MgcGxhbi4gCkxlIG1hdHJlIG1vdCBlc3QgbGUgcmVzcGVjdCBkZXMgcHJpbmNpcGVzIGRlIDE3ODkgZXQgZGUgcnRhYmxpciBsYSBwYWl4LgpCeSBtaWxpdGFyeSBvZiBZYXppZCB0aGV5IGNvdWxkIG5vdCBkcmluayB3YXRlciBmcm9tIHRoZSBGb3JhdCByaXZlci4gCkJ1dCBmb3IgYWxsIGl0cyB2YXVudGVkIG5vYmxlIGFpbXMsIHRoZSBsYXcgaGFzIGRyYXduIGhlYXZ5IGNyaXRpY2lzbS4gV2l0aCBwcmVzaWRlbnRpYWwgZWxlY3Rpb25zIHNjaGVkdWxlZCBmb3IgSmFudWFyeSwgVHltb3NoZW5rbydzIG9wcG9uZW50cyBhbmQgdGhlIGNvdW50cnkncyBjYXNpbm8gd29ya2VycyBhY2N1c2UgdGhlIFByaW1lIE1pbmlzdGVyIG9mIHVzaW5nIHRoZSBnYW1ibGluZyBiYW4gdG8gZW5oYW5jZSBoZXIgaGFyZCBlYXJuZWQgcmVwdXRhdGlvbiBhcyBhIHN1cHBvcnRlciBvZiB3b3JraW5nIGNsYXNzIHZvdGVycyBhIHBvbGwgYnkgdGhlIEtpZXYgYmFzZWQgSG9yc2hlbmluIEluc3RpdHV0ZSBpbiBNYXkgc2hvd2VkIHRoYXQgODIlIGFyZSBpbiBmYXZvciBvZiB0aGUgbGF3LiAKQWZ0ZXIgaG91cnMsIGFsbCB0cmlhZ2UgY2FsbHMgcm9sbCBvdmVyIHRvIGFuIG91dHNpZGUgTnVyc2VMaW5lIHNvIHlvdXIgc3R1ZGVudCBjYW4gc3BlYWsgd2l0aCBhIHJlZ2lzdGVyZWQgbnVyc2UgYXQgYW55IHRpbWUgb2YgdGhlIGRheSBvciBuaWdodCB0byBtYWtlIG1vcmUgaW5mb3JtZWQgZGVjaXNpb25zIGFib3V0IHRoZWlyIGhlYWx0aC5JbiB0aGUgY2FzZSBvZiBhIGxpZmUgdGhyZWF0ZW5pbmcgZW1lcmdlbmN5LCB5b3VyIHN0dWRlbnQgc2hvdWxkIGdvIHRvIHRoZSBuZWFyZXN0IGhvc3BpdGFsIGVtZXJnZW5jeSBkZXBhcnRtZW50OlJvbmFsZCBSZWFnYW4gVUNMQSBNZWRpY2FsIENlbnRlciBFbWVyZ2VuY3kgUm9vbSAoMzEwIDgyNSAyMTExKS5JZiBhbiBhbWJ1bGFuY2UgaXMgbmVlZGVkOiBDYWxsIDkxMSBvciBjYW1wdXMgVUNQRCBhdCAoMzEwKSA4MjUgMTQ5MVNvY2lhbCBNZWRpYVlvdSBjYW4gbG9jYXRlIHRoZSBBcnRodXIgQXNoZSBTdHVkZW50IEhlYWx0aCBXZWxsbmVzcyBDZW50ZXIgb24gRmFjZWJvb2sgYnkgY2xpY2tpbmcgaGVyZS4gRm9sbG93IHRoZWlyIHBhZ2UgZm9yIHVwZGF0ZXMgb24gZnJlZSBmbHUgZmFpcnMgYW5kIG90aGVyIG91dHJlYWNoIGV2ZW50cyBvbiBjYW1wdXMsIGNvbnRlc3RzIGFuZCBnaXZlYXdheXMgZm9yIHlvdXIgc3R1ZGVudCBhbmQgaW1wb3J0YW50IGhlYWx0aCBhbm5vdW5jZW1lbnRzIGZyb20gVGhlIEFzaGUgQ2VudGVyLlByaW1hcnkgQ2FyZVRoZSBBc2hlIENlbnRlciBvZmZlcnMgZGlhZ25vc2lzIGFuZCB0cmVhdG1lbnQgb2YgaWxsbmVzcywgaW5qdXJ5LCBhbmQgb25nb2luZyBjb25kaXRpb25zOyBzY3JlZW5pbmcgZm9yIHNleHVhbGx5IHRyYW5zbWl0dGVkIGluZmVjdGlvbnMgYW5kOyBwcmV2ZW50YXRpdmUgaGVhbHRoIGNvdW5zZWxpbmcgYW5kIGVkdWNhdGlvbi5SYXRoZXIgdGhhbiB3YWl0IGZvciBhbiBhcHBvaW50bWVudCB3aXRoIGFuIEFzaGUgY2xpbmljaWFuLCBhbGwgc3R1ZGVudHMgbm93IGhhdmUgdGhlIG9wdGlvbiBvZiBzcGVha2luZyB3aXRoIGEgcmVnaXN0ZXJlZCBjb25zdWx0IG51cnNlLiAKVGhlIFVTIHVuZGVyd2VudCBhIHJhZGljYWwgcmVkaXN0cmlidXRpb24gb2Ygd2VhbHRoIHNpbmNlIDE5ODAgd2l0aCB0aGUgdmFzdCBtYWpvcml0eSBvZiBBbWVyaWNhbnMgZW5kaW5nIHVwIHdvcnNlIG9mZiBpbiAyMDAwIGFuZCB0aGUgcGVvcGxlIGF0IHRoZSB0b3AgbXVjaCBtdWNoIHdlYWx0aGllci4gCllvdSBjYW4gYXNrIG1hbmFnZW1lbnQgdG8gbWF5YmUgbWFrZSBldmVyeW9uZSBjb21lIHRvIHRoZW0gd2l0aCBhIGRlcG9zaXQgdG8gdXNlIGEgdmVudCB0cmFwIGZvciB0aGUgZHJ5ZXIuIFRoZXkgY291bGQgaG9sZCBvbnRvIHlvdXIgbGljZW5zZSBvciBzb21lIG1vbmV5IGxpa2UgJDEwMCBhbmQgd2hlbiB5b3UgYnJpbmcgYmFjayB0aGUgdmVudCwgY2xlYW4gb2YgY291cnNlLCB5b3UgZ2V0IHlvdXIgbW9uZXkgb3IgaXRlbSBiYWNrIGZyb20gdGhlbS4gClBoeXNpY3MgaXMgc3VmZmljaWVudGx5IGZhciBkZXZlbG9wZWQgdG8gc3RhdGUgdGhhdCB0aGVyZSB3aWxsIG5ldmVyIGJlIGEgd2F5IHRvIG1ha2UgYSBwcm90b24gb3IgYSBuZXV0cm9uIG9yIGFueSBvdGhlciBudWNsZXVzIHNpbXBseSBkaXNhcHBlYXIgYW5kIGNvbnZlcnQgaXRzIGVudGlyZSBtYXNzIGludG8gZW5lcmd5LiAKSXQgd2FzIHNwZWNpYWwgYmVjYXVzZSBhcyB5b3UgZ3JvdyB1cCB0aG9zZSBvdGhlciBraWRzIGFyZW4ganVzdCBmcmllbmRzLCB0aGV5IGJlY29tZSBhIHNlY29uZCBmYW1pbHkuIEl0IG5vdCBsaWtlIHB1YmxpYyBzY2hvb2wgd2hlcmUgeW91IGhhdmUgOSBkaWZmZXJlbnQgY2xhc3NlcyB3aXRoIDMwIGRpZmZlcmVudCBzdHVkZW50cyBpbiBlYWNoIG9mIHRoZW0uIFlvdSB3aXRoIHlvdXIgY2xhc3NtYXRlcyBMSVRFUkFMTFkgbW9yZSB0aGFuIHlvdXIgb3duIGZhbWlseSwgYW5kIHRoaXMgaXMgYWxzbyB3aGVyZSB5b3UgcnVuIGludG8gQklHIHByb2JsZW1zLi4gClRoZXJlIGlzIHN0aWxsIHNvIG11Y2ggdG8gbGVhcm4gYWJvdXQgdGhpcyBjYXJkIGdhbWUgYW5kIHlvdSBoYXZlIHRvIGJlIHBhdGllbnQgaW4gbGVhcm5pbmcgdGhpcy4gCkp1c3QgdGhlbiwgaGlzIHdpZmUgY2FtZSBzY3JhbWJsaW5nIG91dCBhZnRlciBoaW0sIGFic29sdXRlbHkgd2lnZ2luZyBvdXQuIFBsZWFkaW5nLCBob25lc3RseS4gQW4gaW5jcmVkaWJseSBsb3VkLCBzaGFycCwgcGllcmNpbmc/IGJhbmcgcmFuZyBvdXQsIGl0IHdhcyBhIG1pbGxpc2Vjb25kIGxvbmcsIGJ1dCBJIHN3ZWFyIHRoYXQgZWNobyB3ZW50IG9uIGZvcmV2ZXIuIEl0IGN1dCB0aHJvdWdoIHRoZSBjYWxtLCB3YXJtLCBlYXN5IGdvZXMgaXQgc3VtbWVyIGFpci4gUmVhbGx5IHNsaWNlZCB0aGUgZGF5LCB0aGUgbm9pc2Ugd2FzIHNvIG91dCBvZiBwbGFjZS4gCkZlYXIgaXMgYSBoaWdobHkgZWZmZWN0aXZlIHN0YXRlIHRvIGtlZXAgYSBwb3B1bGF0aW9uIGluLiAKUGVvcGxlIERPLiBJIGhhZCBhIGZyaWVuZCB3aG8gcmFnZWQgdG8gbWUgb25lIGRheSB3aGVuIHdlIGxlYXJuZWQgdGhhdCBhIG11dHVhbCBmcmllbmQgbmFtZWQgaGVyIGRhdWdodGVyIHRoZSBzYW1lIG5hbWUgYXMgbXkgZnJpZW5kJ3MgZGF1Z2h0ZXIsIHdobyB3YXMgYm9ybiA2IG1vbnRocyBlYXJsaWVyLiBJIHdhcyBjb21wbGV0ZWx5IGJhZmZsZWQuIApOcyBzb21vcyB0b2RvcyBvcyBwZWVzIGVtIHVtIGpvZ28gZGUgaGlnaCBzdGFrZXMgcG9rZXIgY29tIGRvaXMgdGVyb3MgZG8gcGV0cmxlbyBkbyBtdW5kbyBwYXJhIGdhbmhhci4gCldhaGVlZCBSYWZpcSBtYWRlIGEgdG90YWwgb2Ygb3ZlciBmcm9tIGEgYm9ndXMgaW5zdXJhbmNlIGZyYXVkIGhlIHNldCB1cCBpbiAyMDExLCBhIGNvbmZpc2NhdGlvbiBoZWFyaW5nIGF0IFdvcmNlc3RlciBDcm93biBDb3VydCBoZWFyZC4KV2l0aG91dCBwcm9wZXIgdHJhaW5pbmcsIGFuIGluZGl2aWR1YWwgY291bGQgbGl0ZXJhbGx5IGtpbGwgYW5vdGhlciBwZXJzb24gYnkgZ2l2aW5nIGFuIGltcHJvcGVyIG1hc3NhZ2UuIApPZiBjb3Vyc2UsIGlmIGFuIG9mZiBzaG9yZSBjYXNpbm8gZGVjaWRlcyB0byBjaGVhdCBhIHBsYXllciBvdXQgb2Ygd2lubmluZ3MsIGFuZCBvbmxpbmUgZ2FtYmxpbmcgaXMgaWxsZWdhbCBpbiB0aGF0IHBsYXllcidzIGxvY2FsaXR5LCB0aGUgcGxheWVyIHdpbGwgaGF2ZSBhIGRpZmZpY3VsdCB0aW1lIHN1aW5nIHRoZSBjYXNpbm8uLiAKTWFyayBNZWFkb3dzIG9mIE5vcnRoIENhcm9saW5hLCBhIFRydW1wIGFsbHkgd2hvIGhhcyBiZWVuIGludm9sdmVkIGluIHRoZSB0YWxrcywgc2FpZCB0aGUgcHJlc2lkZW50ICJpcyB2ZXJ5IGZpcm0gaW4gaGlzIHJlc29sdmUgdGhhdCB3ZSBuZWVkIHRvIHNlY3VyZSBvdXIgYm9yZGVyLiIgSGUgdG9sZCBDTk4sICJJZiB0aGV5IGJlbGlldmUgdGhhdCB0aGlzIHByZXNpZGVudCBpcyBnb2luZyB0byB5aWVsZCBvbiB0aGlzIHBhcnRpY3VsYXIgaXNzdWUsIHRoZXkncmUgbWlzcmVhZGluZyBoaW0uIi4gCkEgZ3JvdXAgb2YgcGxheWVycyBmaWxlZCBhIGNvbXBsYWludCBpbiAyMDE2IHdpdGggdGhlIGZlZGVyYWwgRXF1YWwgRW1wbG95bWVudCBPcHBvcnR1bml0eSBDb21taXNzaW9uIHRoYXQgYWxsZWdlZCB3YWdlIGRpc2NyaW1pbmF0aW9uIGJ5IHRoZSBmZWRlcmF0aW9uLiBUaGUgbmV3IGxhd3N1aXQgZWZmZWN0aXZlbHkgZW5kcyB0aGF0IEVFT0MgY29tcGxhaW50LCBicm91Z2h0IGJ5IE1vcmdhbiwgUmFwaW5vZSwgQmVja3kgU2F1ZXJicnVubiwgQ2FybGkgTGxveWQgYW5kIGZvcm1lciBnb2Fsa2VlcGVyIEhvcGUgU29sby4gVGhlIHBsYXllcnMgcmVjZWl2ZWQgYSByaWdodCB0byBzdWUgbGV0dGVyIGZyb20gdGhlIEVFT0MgbGFzdCBtb250aC4KR3JjZSAgY2V0IGNoYW5nZSBkJ2luZm9ybWF0aW9ucyBlbnJlZ2lzdHJlcyBsb3JzIGRlIHZvcyBkaWZmcmVudHMgcGFzc2FnZXMgc3VyIGxlIHNpdGUgd2ViIGVuIHF1ZXN0aW9uLCBpbCByZWNvbm5hdCBxdWUgdm91cyB1dGlsaXNleiBsZXMgbW1lcyBuYXZpZ2F0ZXVyIGV0IGRpc3Bvc2l0aWYuIE5vdXMgdXRpbGlzb25zIGNlcyBpbmZvcm1hdGlvbnMgcG91ciBwb3V2b2lyIGNvbmNldm9pciBldCBhZmZpY2hlciBsZSBzaXRlIHdlYiBkZSBtYW5pcmUgb3B0aW1hbGUgZXQgZW4gZm9uY3Rpb24gZGUgdm9zIHByZnJlbmNlcy4KUGVvcGxlIG1ha2UgZnVuIG9mIGdpbmdlcnMgYmVjYXVzZSBpdCBkb2VzbiBmdWNraW5nIG1hdHRlci4gUGVvcGxlIGFsd2F5cyB0aGluayBnaW5nZXJzIGFyZSBiZXR0ZXIgdGhhbiBvdGhlcnMgYmVjYXVzZSBldmVyeW9uZSBlbHNlIGdldHMgZ2xvc3NlZCBvdmVyLiBTdGFuZGluZyBvdXQgaW4gdGhlIGNyb3dkIGlzIGJhZD8gYmVpbmcgaWdub3JlZCBhcyBvbmUgb2YgdGhlIGNyb3dkIGlzIHdvcnNlLiBBdCBsZWFzdCB5b3UgY2FuIHB1dCB1bmlxdWVuZXNzIHRvIHVzZS4gQ2hpY2tzIGR5ZSB0aGVpciBoYWlyIHJlZCBzbyB0aGF0IG1lbiBsaWtlIHRoZW0gbW9yZS4gUGVvcGxlIHdhbnQgdG8gYmUgcmVkIGhlYWRlZCBhbmQgdGhleSBtYWtlIGZ1biBvZiBuYXR1cmFsIHJlZGhlYWRzLCBiZWNhdXNlIHRoZXkgZW5qb3kgdGhhdCBhdXRvbWF0aWMgaGFuZG91dCBvZiBwb3B1bGFyaXR5IHRoYXQgbm9ib2R5IGVsc2Ugc2VlbXMgdG8gZ2V0LiBQYXJ0IG9mIG1lIHRoaW5rcyBpdCBtYXkgYmUgamVhbG91c3ksIGFuZCB0aGF0IHByb2JhYmx5IGEgYmlnIGVsZW1lbnQgb2YgaXQuIEl0IGxpa2Ugc29tZW9uZSBnb2luZywgIm9oIG5vLCB0aGVzZSBqZXdlbHMgYW5kIGdvbGRlbiBiYXJzIGh1cnQgd2hlbiBJIHNsZWVwIG9uIHRoZW0iLgpUaGVuIGhlIHNob3VsZCBzdG9wIGltbWVkaWF0ZWx5LCB0aGluayBhYm91dCB0aGUgSmFzb24gR2lhbWJpIHN0ZXJvaWQgc2NhbmRhbCwgYW5kIGNsZW5jaCBoaXMgUEMgbXVzY2xlIGFzIGhhcmQgYXMgaGUgY2FuLiAoVGhpcyByb3VnaGx5IGR1cGxpY2F0ZXMgdGhlIGVmZmVjdCBvZiB0aGUgTWFzdGVycyBhbmQgSm9obnNvbiB0ZWNobmlxdWUsIG9ubHkgaW50ZXJuYWxseS4gQnkgdGhlIHdheSwgYSBtaW5vcml0eSBzY2hvb2wgb2YgdGhvdWdodCBzdWdnZXN0cyB0aGF0IHNvbWUgbWVuIHByZWZlciB0byByZWxheCB0aGUgUEMgbXVzY2xlIGF0IGhpcyBwb2ludC4pLiAKVGhlIHByaWNlIGluY2x1ZGVzIHRocmVlIHN1cGVyYiBzcGEgY3Vpc2luZSBtZWFscyBhbmQgb25lIG1hc3NhZ2UgZWFjaCBkYXksIGFuZCBhbGwgdmlzaXRzIGJlZ2luIHdpdGggYSB3ZWxsbmVzcyBjb25zdWx0YXRpb24uIENoaSBOZWkgVHNhbmcgKCQ5OCksIGFuIGFiZG9taW5hbCBtYXNzYWdlLCB3YXMgNDUgbWludXRlcyBvZiBwcm9iaW5nIHRoYXQgbWFkZSBtZSBmZWVsIGxpZ2h0ZXIgYW5kIHB1cmVyLiBBbHNvIHJlY29tbWVuZGVkOiBUaGFpIGhlcmJhbCBtYXNzYWdlICgkNjEpLCB3aGljaCBjb21iaW5lcyBUaGFpIG1hc3NhZ2Ugd2l0aCBoZWF0ZWQgaGVyYmFsIHBhY2tzIHRvIGRldG94aWZ5IGFuZCByZWxpZXZlIGFjaGVzLiAKR2FtYmxpbmcgb25saW5lIGZhbGxzIGludG8gYSBsZWdhbCBncmV5IGFyZWEuIFdoaWxlIGl0IGlzIHRlY2huaWNhbGx5IGlsbGVnYWwgaW4gbW9zdCBvZiB0aGUgVW5pdGVkIFN0YXRlcywgdGhlIHByb3NlY3V0aW9uIGFuZCBjb252aWN0aW9uIG9mIGluZGl2aWR1YWwgcGxheWVycyBpcyB2ZXJ5IGRpZmZpY3VsdCBiZWNhdXNlIHRoZXkncmUgZ2FtYmxpbmcgZnJvbSBob21lLiBJdCBpcyBhbHNvIGlsbGVnYWwgZm9yIGEgZ2FtYmxpbmcgV2ViIHNpdGUgdG8gb3BlcmF0ZSB3aXRoaW4gdGhlIFVuaXRlZCBTdGF0ZXMsIHdoaWNoIGlzIHdoeSB0aGUgb2ZmaWNlcyBhbmQgc2VydmVycyBvZiBtb3N0IG9ubGluZSBjYXNpbm9zIGFyZSBsb2NhdGVkIGluIG90aGVyIGNvdW50cmllcy4gVGhlcmUgYXJlIGFib3V0IDcwIGNvdW50cmllcyB0aGF0IGFsbG93IG9ubGluZSBnYW1ibGluZyBzaXRlcyB0byBzZXQgdXAgc2hvcCwgaW5jbHVkaW5nIEF1c3RyYWxpYSwgTmV3IFplYWxhbmQsIFNvdXRoIEtvcmVhLCBEZW5tYXJrLCBGaW5sYW5kLCBGcmFuY2UsIEdlcm1hbnksIGFuZCBzb21lIHByb3ZpbmNlcyBvZiBDYW5hZGEuCkhvd2V2ZXIgaXQgY2FuIGNhdXNlIHNpZGUgZWZmZWN0cywgdGhlIG1vc3QgY29tbW9uIG9mIHdoaWNoIGlzIHZlcnkgaGVhdnkgc3dlYXRpbmcsIHdoaWNoIGNhbiBjYXVzZSBkaXNjb21mb3J0IGFuZCBlbWJhcnJhc3NtZW50IHRvIHRoZSBtb3RoZXIuIApBcmNhZGVzOiB0d28gdHlwZXMgb2YgYXJjYWRlcywgb25lIHZlcnkgTWVsYm91cm5lLCBvbmUgbm9ybWFsLiBUaGUgZmlyc3Q6IGlmIHlvdSBoZWFkIGRvd24gdG8gQm91cmtlIHN0IG1hbGwsIGluIGJldHdlZW4gc3dhbnN0b24gYW5kIEVsaXphYmV0aCBzdCB5b3Ugd2lsbCBiZSBpbiBhIGdyZWF0IGFyZWEgdG8gZXhwbG9yZSwgdGhlIG1pZCBjaXR5IGFyY2FkZSBhbmQgdGhlIGJsb2NrIGFyY2FkZSBhcmUgcmVhbGx5IGNvb2wgdG8gaGF2ZSBhIGdhbmRlciBpbi4gVGhlbiB5b3UgY2FuIGdvIHRvIHRoZSBHUE8sIHdhbmRlciB0aHJvdWdoIHNvbWUgc2hvcHMgYXJvdW5kIG1lbGJvdXJuZSBjZW50cmFsIGFuZCBlbXBvcml1bS4gCkl0IGhhcyBiZWVuIHN1Z2dlc3RlZCB0aGF0IGJlY2F1c2UgZXhlcmNpc2UgaGVscHMgbWFpbnRhaW4gaGVhbHRoeSBibG9vZCBmbG93IGFuZCBsb3dlcnMgaGlnaCBibG9vZCBwcmVzc3VyZSBhbmQgY2hvbGVzdGVyb2wsIGl0IG1heSBwcm90ZWN0IHRoZSBicmFpbiBqdXN0IGFzIGl0IGRvZXMgdGhlIGhlYXJ0IGFuZCBvdGhlciBvcmdhbnMuIFRoZSBpbnZlc3RpZ2F0b3JzIGZvdW5kIHRoYXQgdGhlIG1vcmUgYWN0aXZpdHkgdGhlIG5lYXJseSA1LDAwMCBzdHVkeSBwYXJ0aWNpcGFudHMgcmVwb3J0ZWQgYXQgdGhlIHN0dWR5IHN0YXJ0LCB0aGUgbGVzcyBsaWtlbHkgdGhleSB3ZXJlIHRvIHN1ZmZlciBtZW50YWwgZGVjbGluZS4uIApUaHJlZSB5ZWFycyBhZnRlciB0aGF0IHByb2ZpbGUgcmFuLCBQYWxtIEJlYWNoIFBvbGljZSBPZmZpY2VyIE1pY2hlbGUgUGFnYW4gZ290IGEgZGlzdHVyYmluZyBtZXNzYWdlLiBBIHdvbWFuIHJlcG9ydGVkIHRoYXQgaGVyIDE0IHllYXIgb2xkIHN0ZXBkYXVnaHRlciBjb25maWRlZCB0byBhIGZyaWVuZCB0aGF0IHNoZSdkIGhhZCBzZXggd2l0aCBhbiBvbGRlciBtYW4gZm9yIG1vbmV5LiBUaGUgbWFuJ3MgbmFtZSB3YXMgSmVmZiwgYW5kIGhlIGxpdmVkIGluIGEgbWFuc2lvbiBvbiBhIGN1bCBkZSBzYWMuCkpvaG4gTWNDYWluIChSICAgQVopIlRoYXQgdGhlIFVuaXRlZCBTdGF0ZXMgc2hvdWxkIG1ha2UgY2xlYXIgdGhhdCBpdCBiYWNrcyBhbnRpIE1haG1vdWQgQWhtYWRpbmVqYWQgZGVtb25zdHJhdG9ycyBpbiB0aGVpciBiYXR0bGUgYWdhaW5zdCAnYW4gb3BwcmVzc2l2ZSwgcmVwcmVzc2l2ZSByZWdpbWUuJyJXSFk6IENhbGwgbWUgc2tlcHRpY2FsLCBidXQgd2h5IHdvdWxkIHRoZSB2ZXJ5IHNhbWUgUmVwdWJsaWNhbnMgd2hvIHNvIHRob3JvdWdobHkgbWlzaGFuZGxlZCBhbiBlbGVjdGlvbiBoZXJlIGluIDIwMDAsIGJlIHNvIG91dHJhZ2VkIGJ5IHRoZSBtaXNoYW5kbGluZyBvZiB0aGUgZWxlY3Rpb24gaW4gSXJhbj8gVG8gdGFrZSBhIGxvbmdlciBoaXN0b3JpY2FsIHZpZXcsIHdoeSB3b3VsZCB0aGUgdmVyeSBzYW1lIGNvbnNlcnZhdGl2ZSBtb3ZlbWVudCB0aGF0IG92ZXJ0aHJldyAiaG9tZWdyb3duIGRlbW9jcmFjeSIgaW4gdGhlIE1pZGRsZSBFYXN0IHdoZW4gdGhlIENJQSBhbmQgQnJpdGlhbiBNMTYgaWxsZWdhbGx5IGFuZCBmb3JjaWJseSBpbnN0YWxsaW5nIHRoZSBTaGFoIGluIGluIDE5NTMsIHBvc3NpYmx5IGdpdmUgYSBmaWcgYWJvdXQgZGVtb2NyYWN5IGluIElyYW4/VGhlIENvbnNlcnZhdGl2ZSBzdXBwb3J0IGZvciB0aGUgcHJvIE1vdXNzYXZpIGRlbW9uc3RyYXRvcnMgaXMgcGFydGljdWxhcmx5IHB1enpsaW5nIGdpdmVuIHRoYXQgaXQgd2lsbCBoYXZlIHRoZSBleGFjdCBvcHBvc2l0ZSByZXN1bHQuIE1vc3QgbmF0aW9uYWwgc2VjdXJpdHkgZXhwZXJ0cyBhcmUgc2F5aW5nIHRoYXQgYW55IEFtZXJpY2FuIHNob3cgb2Ygc3VwcG9ydCBmb3IgTW91c3NhdmkgY2FtcCB3aWxsIGxlYWQgdG8gYSBtdWNoIG1vcmUgdmlvbGVudCByZXNwb25zZSBhZ2FpbnN0IHRoZW0sIG5vdCBqdXN0IGJ5IHRoZSBzdGF0ZSwgYnV0IGJ5IHRoZSBwcm8gQWhtYWRpbmVqYWQgZGVtb25zdHJhdG9ycy4gCklmIHNoZSBjYW4ndCBzaXQgb24gdGhlIHRocm9uZSwgbm8gb25lIHdpbGwuLiAKTE9TIEFOR0VMRVMgKEFQKSAgICJIb3cgVG8gVHJhaW4gWW91ciBEcmFnb246IFRoZSBIaWRkZW4gV29ybGQiIHRvcHBlZCB0aGUgTm9ydGggQW1lcmljYW4gYm94IG9mZmljZSBmb3IgYSBzZWNvbmQgd2VlaywgYnV0IGNsb3NlIG9uIGl0cyB0YWlsIHdhcyBUeWxlciBQZXJyeSdzIGZpbmFsIGluc3RhbGxtZW50IG9mIHRoZSAiTWFkZWEiIGZyYW5jaGlzZS4gRHJpdmVuIGJ5IGEgbGFyZ2VseSBmZW1hbGUgYXVkaWVuY2UsICJBIE1hZGVhIEZhbWlseSBGdW5lcmFsIiBoYWQgYSBiZXR0ZXIgdGhhbiBleHBlY3RlZCBkZWJ1dC4uIApUaG9zZSBhcmUgbWFraW5nIHVzZSBvZiwgb3IgYXJlIGluZmx1ZW5jaW5nIHRoZSBzYW1lIGVuZXJneSBhbmQgdXNlIHRoZSBtYXRyaXggdG8gdGhlaXIgYWR2YW50YWdlLiAKQnV0IHRoZSBwZW9wbGUgd2hvIHdlcmUgbm90IHN1cnByaXNlZCwgdGhlIHBlb3BsZSB3aG8gYmVsaWV2ZSB0aGF0IGV2ZXJ5dGhpbmcgdGhhdCBpcyBoYXBwZW5pbmcgaW4gdGhlIHdvcmxkIGFuZCBpbiB0aGUgVVMgaXMgYSAidGhyZWF0IHRvIHRoaXMgY291bnRyeSBncmVhdG5lc3MiIGFyZSB3b3J0aCB0YWtpbmcgYSBsb29rIGF0LiBOb3QgYmVjYXVzZSB0aGVpciB3b3JsZCB2aWV3IGlzIHN1cnByaXNpbmcsIGJ1dCBqdXN0IGJlY2F1c2UgdGhlIFVTIGhhcyBhbnl0aGluZyBidXQgcGVhY2Ugb24gaXRzIGhhbmRzLiBJbiBmYWN0IHRoZSBVUyBpcyBhcyBjbG9zZSB0byBhIENpdmlsIFdhciBhcyBpdCBoYXMgYmVlbiBmb3IgYSBsb25nIHRpbWUuIApIZSB3b24gRVZFUlkgaGFuZCBhbmQgSSB3YXMgY2FyZCBkZWFkLiAKRG8gdGhleSBpbWFnaW5lIHNoZSBzdWRkZW5seSBiZWNvbWUgdGhlIEh1bGs/IFNoZSB0aGUgc2FtZSBwZXJzb24gc2hlIHdhcyBlYXJsaWVyLiAKVGhlcmUgd2FzIHNvIG11Y2ggc2hpdCBvbiBzY3JlZW4gSSBoYWQgbm8gaWRlYSB3aGljaCBidWxsZXRzIHdlcmUgbWluZSBhbmQgd2hpY2ggd2VyZSB0aGVpcnMsIGVzcGVjaWFsbHkgdGhlIHRpbnkgcGl0Y2hmb3JrIGJ1bGxldHMgaW4gYnVsbGV0IGhlbGwuIApNaWNoYWVsIENvaGVuIHBvaW50ZWQgb3V0IGluIGhpcyB0ZXN0aW1vbnkgdGhhdCB0aGUgcmVhc29uIGhlIHRoaW5rcyBUcnVtcCBkb2VzbiB3YW50IGhpcyB0YXggcmV0dXJucyBpbiB0aGUgcHVibGljIGlzIHRoYXQgaXQgd291bGQgZ2l2ZSB0YXggZXhwZXJ0cyBhIGNoYW5jZSB0byBnbyBvdmVyIHRoZW0gd2l0aCBhIGZpbmUgdG9vdGhlZCBjb21iIGFuZCBmaW5kIG91dCBhbGwgb2YgdGhlIHNoYWR5IHRheCBkb2RnZSBzY2hlbWVzIGhlIGJlZW4gaW52b2x2ZWQgaW4uIApUaGlzIGlzIGEgY2xhc3NpYyBzeW1wdG9tIG9mIEdFUkQgb3IgYWNpZCByZWZsdXguIApUaGV5IGVhdCBhIHJhbmdlIG9mIGNyZWF0dXJlcywgZnJvbSBpbnNlY3RzIHRvIHJhYmJpdHMuIApKdXN0IHNvIGV2ZXJ5b25lIGtub3dzLCB5b3UgZG9uIGhhdmUgdG8gYmUgbWVudGFsbHkgaWxsIHRvIGJlIHByZXNjcmliZWQgU2Vyb3F1ZWwuIEkgd2FzIHByZXNjcmliZWQgaXQgc29sZWx5IHRvIHRyZWF0IG15IGluc29tbmlhLCBhbmQgSSBrbm93IGEgZmV3IG90aGVyIHBlb3BsZSB3aG8gd2VyZSBwcmVzY3JpYmVkIGl0IGZvciB0aGUgc2FtZSByZWFzb24uIEl0IGlzbiBsaXN0ZWQgYXMgc29tZXRoaW5nIHRoaXMgbWVkaWNhdGlvbiB0cmVhdHMsIGJ1dCwgYmVjYXVzZSBpdCBzbyBzZWRhdGluZywgU2Vyb3F1ZWwgaXMgY29tbW9ubHkgdXNlZCBmb3IgaXQuLiAKV2UgbmVlZCBub3Qgb25seSBwcmV2ZW50IGRpc2Vhc2UgYnV0IGFsc28gcHJldmVudCB0aGUgd3JvbmcgdHlwZSBvZiBjYXJlLi4gCkxvc2luZyB0aGF0IGNyZWRpdCBsaW5lIGh1cnRzIHlvdXIgdXRpbGl6YXRpb24gcmF0aW8sIHdoaWNoIGNhbiBodXJ0IHlvdXIgY3JlZGl0IHNjb3JlLiBMb2hyZW56IHN1Z2dlc3RzIGNoYXJnaW5nIGEgc21hbGwgYW1vdW50IHJlZ3VsYXJseSAgIG1heWJlIGEgcmVjdXJyaW5nIGJpbGwgbGlrZSBhIGd5bSBtZW1iZXJzaGlwIG9yIE5ldGZsaXggc3Vic2NyaXB0aW9uICAgYW5kIHBheWluZyBpdCBvZmYgZXZlcnkgbW9udGguIFNvbWUgaXNzdWVycyB3aWxsIGxldCB5b3Ugc2V0IHVwIGF1dG9tYXRpYyBwYXltZW50cyBmcm9tIHlvdXIgY2hlY2tpbmcgYWNjb3VudCwgc28geW91IHdvbid0IGZvcmdldCB0byBtYWtlIHRob3NlIHBheW1lbnRzLi4gCkRvc3lhIEJveXV0dSA6IDI2NyBNQi4gQ3JhY2sgOiBlcmlzaW5kZSBNZXZjdXR0dXIuIE95dW4gRGlsaSA6IC4gClRoZSBhYm92ZSBsaW5rcyByZWx5IG1vcmUgb24gdGhlIHRoZSAiYXZlcmFnZSBBbWVyaWNhbiIgYXMgYW4gaW5kaWNhdG9yLCB3aGljaCBpc24gY29uY2x1c2l2ZSBldmlkZW5jZSBvZiBjb3Vyc2UuIEluIGEgbG90IG9mIGNvdW50cmllcywgaWYgeW91IG1ha2UgJDEwIFVTIGFuIGhvdXIgeW91IGJlIGNvbnNpZGVyZWQgd2VsbCBvZmYuCk15IG90aGVyIHRob3VnaHQgaXMgYWxsIHRoaXMgaXMgZ29pbmcgdG8gZG8gaXMgZW5jb3VyYWdlIHBlb3BsZSB0byBkcml2ZSB0byB0aGUgbmV4dCBzdGF0ZSBvdmVyIGFuZCBidXkgdGhlbSB0aGVyZSBvciBmb3JjZSB0aGUgY3JlYXRpb24gb2YgYSBibGFjayBtYXJrZXQuCkkgaW5zaXN0ZWQsIGJ1dCBhZ2FpbiwgaGUgYmxldyBtZSBvZmYuIApXYXMgYmlnIG9uIFRWLCBhbmQgaXQgc2VlbWVkIGxpa2UgYSBmdW4gdGhpbmcgdG8gZG8sIHNhaWQgSm9obiBNYXN0ZXJzLCBleGVjdXRpdmUgZGlyZWN0b3IgYXQgR3Jhc3NSb290cy4gCkFib3V0IHRlbiBvZiBteSBodXNiYW5kJ3MgZnJpZW5kcyBoYXZlIHNvbWUgc29ydCBvZiBhcnRocml0aXMgb3Igb3RoZXIgaXNzdWVzIHRoYXQgdGFrZSBhd2F5IGZyb20gdGhlaXIgc2h1ZmZsaW5nIGFiaWxpdGllcy4gCkkgd2FzIHNpY2sgdG8gbXkgc3RvbWFjaCBhbmQgY291bGRuJ3Qgc3RvcCBjcnlpbmcgYmVjYXVzZSB0aGUgcGFpbiB3YXMgYWxtb3N0IHVuYmVhcmFibGUuIApXYXNoaW5ndG9uIGFsc28gaGFzIG5vIHdheSB0byBrbm93IGFib3V0IG90aGVyIHRlc3Qgc2l0ZXMgb3Igc2VjcmV0IHN0b3JhZ2UgZmFjaWxpdGllcyB0aHJvdWdob3V0IE5vcnRoIEtvcmVhLiBBbmQgUHlvbmd5YW5nIGlzIHVubGlrZWx5IHRvIGFncmVlIHRvIG9wZW4gdXAgd2l0aG91dCB0aGUgc3Vic3RhbnRpYWwgZWNvbm9taWMgY29uY2Vzc2lvbnMgdGhhdCB0aGUgUHJlc2lkZW50J3MgdGVhbSBzYXlzIGFyZSBub3Qgb24gdGhlIHRhYmxlLgpNYXNzYWdlIHRoZXJhcHkgYW5kIHRoZXJhcGV1dGljIHRvdWNoIGluIGNoaWxkcmVuClRoZSBwbGF5ZXJzIHdlcmUgcGxhY2VkIGluIGEgcm9vbSB3aXRoIGEgdGVtcGVyYXR1cmUgb2YgNjAgZGVncmVlcyBGYWhyZW5oZWl0IGJlbG93ICggNTEgZGVncmVlcyBDZWxzaXVzKSBmb3Igb25lIG1pbnV0ZS4gQWZ0ZXIgdGhhdCwgdGhleSB3YWxrZWQgaW50byBhbiBhZGphY2VudCByb29tIHRoYXQgaGFkIGEgdGVtcGVyYXR1cmUgb2YgMjAwIGRlZ3JlZXMgYmVsb3cgKCAxMjkgQ2Vsc2l1cykgZm9yIHRocmVlIG1pbnV0ZXMuIApBbHNvLCBpbXBsYW50cyBjYW4gcmVhbGx5IGFmZmVjdCB0aGUgaW1hZ2UgeW91IGdldCB3aGVuIHRha2luZyBkaWdpdGFsIHJhZHMsIHNvIHRoZSBlZGl0aW5nIGNhbiByZXN1bHQgaW4gdGhlIGltYWdlIGxvb2tpbmcgbGlrZSBpdCB3YXMgdGFrZW4gd2l0aCBhIGhpZ2hlciBleHBvc3VyZSB0aGFuIGl0IGFjdHVhbGx5IHdhcy4gCiJOb3RoaW5nIGNvdWxkIGJlIGZ1cnRoZXIgZnJvbSB0aGUgc2FpZCBKb2huIENoYXBvdG9uLCBhc3Npc3RhbnQgdHJlYXN1cnkgc2VjcmV0YXJ5IGZvciB0YXggcG9saWN5LiAKSW4gNWUgYSBuYXQgMSBpcyBpbmRlZWQgYW4gYXV0byBmYWlsIGZvciBhbiBhdHRhY2sgcm9sbC4gSXQgYWxzbyBjb3VudHMgYXMgdHdvIGZhaWx1cmVzIG9uIGEgZGVhdGggc2F2aW5nIHRocm93LiAKUGV0ZXIgd2FzIGEgd2VsY29taW5nIHBlcnNvbiwgYWx3YXlzIHJlYWR5IHRvIGhlbHAgb3RoZXJzLiBIZSBlbmpveWVkIHBsYXlpbmcgcG9rZXIgd2l0aCBoaXMgZnJpZW5kcyBhbmQga2VwdCBhIHNwZWNpYWwgcGxhY2UgaW4gaGlzIGhlYXJ0IGZvciAiU3VuZGF5IFNwYWdoZXR0aSBMdW5jaGVzIi4gUGV0ZXIncyBncmVhdGVzdCBsb3ZlIHdhcyBmb3IgaGlzIGZhbWlseSwgZXNwZWNpYWxseSBoaXMgZ3JhbmRjaGlsZHJlbi4gRnVuZXJhbCBTZXJ2aWNlIGluIHRoZSBSLiBKLiBCYXJuYXJkIENoYXBlbCwgSkFDS1NPTiBBTkQgQkFSTkFSRCBGVU5FUkFMIEhPTUUgLCAyMzMgTGFyY2ggU3QuLCBTdWRidXJ5LCBGcmlkYXksIERlY2VtYmVyIDIwdGgsIDIwMTMgYXQgMTE6MzBhbS4gClNvbWVvbmUgaW4gdGhlIHBhc3QgaGFzIG1peGVkIHVwIHRoZSBzdHJhdGEgbG90cyBhbmQgdGhlIHVuaXQgbnVtYmVycy4gCkl0IHdhcyBhbiBhbWF6aW5nIGFjaGlldmVtZW50IHRvIGdldCB0byB0aGUgZmluYWwgd2l0aCB0aGF0IHNxdWFkLiBJdCB3YXMgbm90IGFuIGFtYXppbmcgYWNoaWV2ZW1lbnQgdG8gZ2V0IHRvIHRoZSBzZW1pcyB3aXRoIHBsYXllcnMgbGlrZSBOZXVlciwgTGFobSwgTWxsZXIsIFNjaHdlaW5zdGVpZ2VyLCBLcm9vcywgQm9hdGVuZywgSHVtbWVscywgS2hlZGlyYSwgemlsIGFuZCBzbyBvbi4uIApUaGUgZ2VuZXJhbCBydWxlIGlzIHRoYXQgd2Vha25lc3MgdXN1YWxseSBtZWFucyBzdHJlbmd0aCwgYW5kIHN0cmVuZ3RoIHVzdWFsbHkgbWVhbnMgd2Vha25lc3MuIApUaHJvdWdob3V0IHRoZSBjb3Vyc2Ugb2YgYSBoYW5kLCB0aGUgcGxheWVycyB3aWxsIHJlY2VpdmUgc2V2ZW4gY2FyZHMgZWFjaCwgd2hpbGUgdGhlIGJlc3QgNSBjYXJkIGNvbWJpbmF0aW9uIGlzIHN0aWxsIGNvbnNpZGVyZWQgdGhlIHdpbm5lci4gQW5vdGhlciBleGNpdGluZyBwb2tlciBnYW1lIGlzIE9tYWhhIG9ubGluZSBwb2tlci4gVGhpcyB2ZXJzaW9uIHdhcyBkZXJpdmVkIGZyb20gVGV4YXMgSG9sZCdlbSBhbmQgZmVhdHVyZXMgaXRzIG93biBzdWIgdmVyc2lvbnMgbGlrZSBPbWFoYSBIaS9MbyBhbmQgNSBDYXJkIE9tYWhhLiAKQWRvcHRlZCBmYXRoZXIgb2YgRGVyZWsgKFBlbm55KS4gQmlsbCB3YXMgdGhlIGJpZyBicm90aGVyIG9mIFJvc2VtYXJ5IChBbmR5KSwgVGVyZXNhIChCb2IpLCBKb2huIChMYXVyaWUpLCBQZWdneSAoRG91ZyksIHRoZSBsYXRlIEppbSAoU3VlKSwgQW5uIChSb2IpIGFuZCAiVW5jbGUgQmlsbCIgdG8gdGhlaXIgbG92aW5nIGZhbWlsaWVzLiAKQ29tZSB1cCB3aXRoIGEgY3JlYXRpdmUgdGl0bGUgZm9yIHRoZSBzcGEgcGFja2FnZS4gClRoZSBvZmZpY2VycycgdGVzdGltb255IGNhbWUgb24gdGhlIHNhbWUgZGF5IHRoYXQgYSBKdXN0aWNlIG9mIHRoZSBQZWFjZSBydWxlZCB0aGF0IGEgc2VwYXJhdGUgQ2xhcmsgQ291bnR5IG9yZGluYW5jZSB0YXJnZXRpbmcgcHJvc3RpdHV0aW9uIGlzIHRvbyB2YWd1ZSBhbmQgaXMgdGhlcmVmb3JlIHVuY29uc3RpdHV0aW9uYWwuCkRlc3BpdGUgdGhlIHZhcmlldGllcyBpbiB0aGUgZ2FtZXMsIHRoZXkgc2hhcmUgY29tbW9uIHJ1bGVzIGFzaWRlIGZyb20gdGhlIGNvbW1vbiBnb2FsLCB3aGljaCBpcyB0byB3aW4gbW9uZXkgZnJvbSB0aGUgb3RoZXIgcGxheWVycyBieSBwbGFjaW5nIHN0cmF0ZWdpYyBiZXRzIHdpdGggeW91ciBkZWFsdCBjYXJkcy4uIApJIGhvbmVzdGx5IGZlZWwgbGlrZSBiZWluZyBDRiBhbmQgcmVsaWdpb3VzIGhhcyBhbm90aGVyIG1hc3NpdmUgcmFuZ2Ugb2YgaXNzdWVzLiAKTG9uZWx5NjkgdQpLbm93aW5nIHRoZSBkaXNhZHZhbnRhZ2VzIGFuZCBhZHZhbnRhZ2VzIHdoZW4geW91IHBsYXkgcG9rZXIgZ2FtZXMgYXQgY2FzaW5vcyBhbmQgaW4gb25saW5lIHdlYnNpdGVzIHdpbGwgaGVscCB5b3UgZGVjaWRlIG1vcmUgZWFzaWx5IHdoZXJlIHlvdSBzaG91bGQgcGxheS4uIApXaXRob3V0IG1pbGxpb24gZG9sbGFyIG1hcmtldGluZyBidWRnZXRzIHRoYXQgZHJ1ZyBjb21wYW5pZXMgaGF2ZSBmb3IgdGhlaXIgbGF0ZXN0IGRydWdzLCBudXRyaWVudCByZXNlYXJjaCBwbG9kcyBhbG9uZyBvdmVyIGFuZCBvdmVyIGFnYWluIHRoZWlyIHdvcnRoIGJ1dCBuZXZlciBiZWluZyBhYmxlIHRvIGdldCB0aGF0IGluZm9ybWF0aW9uIG91dCB0byB0aGUgcHVibGljLgpRdWl0ZSBhIGxvdCBvZiB0YWJsZXMgaW4gYSB0aWdodCByb29tIGFuZCBpdCB0aGUgb25seSBwb2tlciByb29tIG9uIERvd250b3duIChJIHRoaW5rPyBCaW5pb25zIG9ubHkgaGFkIHRvdXJuZXlzIHJ1bm5pbmcgSUlSQykgc28geW91IGdldCBhIGxvdCBvZiBkcnVuayB0b3VyaXN0cyB3YW5kZXJpbmcgaW4gb2ZmIG9mIHRoZSBGcmVlbW9udCBzdHJlZXQgc2hvdy4gCkxlZ2FsIEFjdGlvbldvcmtpbmcgaW4gc3VjaCBhIGhhbmRzIG9uIGpvYiB0aGF0IGludm9sdmVzIHJlZ3VsYXIsIGludGltYXRlIGNvbnRhY3Qgd2l0aCBjbGllbnRzIGNvdWxkIGxlYXZlIG1hc3NhZ2UgdGhlcmFwaXN0cyBvcGVuIHRvIGZhbHNlIGFjY3VzYXRpb25zIG9mIGluZGVjZW50IGFzc2F1bHQuIAoxMyBlYXN5IHdheXMgdG8gbWFrZSB5b3VyIE1hYyBydW4gZmFzdGVyVGhpcyBuZXcgaVBob25lIGFwcCB0dXJucyB3YXRjaGluZyBOZXRmbGl4IGludG8gYSBiYXR0bGUgb2Ygd2l0c0hvdyB0byBzZXQgdXAgYSBsb25nIGRpc3RhbmNlIE5ldGZsaXggZGF0ZSBzbyB3aGF0IHlvdSBib3RoIHdhdGNoaW5nIG5ldmVyIGdldHMgb3V0IG9mIHN5bmMKU2hvdWxkIEkganVzdCBkcm9wIG91dD8gTm8gd2F5IHdpbGwgSSBnZXQgYSAyMCBtaWxlIHJ1biBpbiB0b21vcnJvdyBhcyBwbGFubmVkIGFuZCBJIGZlZWwgbGlrZSBhbGwgbXkgdHJhaW5pbmcgd2lsbCB0YWtlIGEgaHVnZSBoaXQuIFNvIGZhciBteSBmdXJ0aGVzdCBkaXN0YW5jZSBpcyAxNyBtaWxlcy4gCkkgZG9uIHRoaW5rIHRoZSBiaWxsIHNob3VsZCBwYXNzIGlmIGl0IGRvZXNuIG1ha2UgcGVvcGxlIHNhZmVyLiBUaGF0IHdvdWxkIGJlIGR1bWIuCkZvciBhbGwgdGhhdCBoaXMgY3JpdGljcyB3aWxsIHRlbGwgeW91IHRoYXQgTGV3aXMgSGFtaWx0b24gaGVhZCBpcyBhbGwgc2NyZXdlZCB1cCB0aGVzZSBkYXlzLCBoZSBsb29rcyBwZXJmZWN0bHkgcmVsYXhlZCBhcyBoZSBzdGVwcyBhYm9hcmQgSE1TIEhhdmVuZ29yZSBhdCBTdCBLYXRoZXJpbmUgUGllciBvbiB0aGUgVGhhbWVzLiAKTGFzdCBOYW1lPSBJbmZvLiBFbWFpbCAgSW5mb0tleXNjaXR5LiBKdW4gMTksIDIwMTUgLiAKMTcgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KVGhhdCdzIGFmdGVyIHRoZSB0cmFzaCB0YWxrLCBhZnRlciB0aGUgaHlwZSwgd2l0aCBldmVuIG1vcmUgYWRyZW5hbGluZSBnb2luZyBhbmQgZXZlbiBtb3JlIHJlYXNvbiB0byB3YW50IHRvIHN3aW5nLiBJdCdzIHRoZSBiZXN0IHByb29mIHRoYXQgd2UgZG9uJ3QgbmVlZCByZWQgdmVzdGVkLCBkdW1iIGZhY2VkIHVuZGVybGluZ3MgdG8gcHJlc2VydmUgb3JkZXIuLiAKSG93ZXZlciAibnV0cyIgaXMgdGVjaG5pY2FsbHkgdmFndWUgdG9vIGFuZCB0aGlzIGlzIGRpZmZlcmVudCBmcm9tIHNheWluZyBJJ3ZlIGdvdCBhIHN0cmFpZ2h0LCBJJ3ZlIGdvdCBKOSBldGMgaW4geW91ciBkZWZlbnNlLiAKU3VwZXJzbmFwcyB1ClRoZSBjdXJyZW50IGNvbmZsaWN0IGluIFVrcmFpbmUgaXMganVzdCBhbm90aGVyIHJlYXNvbiBmb3IgRXVyb3BlYW4gY291bnRyaWVzIHRvIGRldmVsb3AgdGhlaXIgb3duIHNoYWxlIGdhcyBpbmR1c3RyaWVzLCBNb2xjaGFub3Ygc2F5cy4gClNoZSBnZXRzIGhlciBzaG90Z3VuIG91dCBvZiB0aGUgY2xvc2V0IGFuZCB0aHJvd3Mgb3BlbiBoZXIgZG9vciwgb25seSB0byBjaG9rZSBhZ2FpbiBhdCB0aGUgc2lnaHQgb2YgdGhlIGRlYWQgY2hpY2tlbiBoYW5naW5nIGZyb20gdGhlIHBvcmNoIGNlaWxpbmcgaW4gZnJvbnQgb2YgaGVyIGRvb3IuIEhvb2tlciBhcnJpdmVzIGFuZCB0aGUgZ3V5cyBydW4gb2ZmICAgd2hvJ3MgdGhlIGNoaWNrZW4gbm93LCBiaXRjaGVzICAgYW5kIHRoZSBjaGljayBjb3AgZXhjbGFpbXMgIkhvb2thaXIhIiBhbmQgY29sbGFwc2VzIGludG8gaGlzIGFybXMgaW4gcmVsaWVmLiAKQW5kIChDb21pbmcgZnJvbSBhIG1hYyBvd25lcikgdGhlIGdhbWUgZnJvemUgcmVwZWF0ZWRseS4gCkVkaXQ6IElmIHlvdSBsb29rIGF0IEVhcnRoIGFzIGEgd2hvbGUgYW5kIGFsbCBpdHMgc3lzdGVtcyB5b3Ugd2lsbCBzZWUgdGhhdCB0aGUgb3h5Z2VuIGlzIGF2YWlsYWJsZSBpcyB2ZXJ5IHNtYWxsIGluIGNvbXBhcmlzb24gdG8gdGhlIG9jZWFucyBhbmQgdGhlIG1vdW50YWlucy4KU2hhbGxvd2JsdWUgIDE2LDY4OCBwb2ludHMgIHN1Ym1pdHRlZCA1IGRheXMgYWdvCiJVbiBnaW9ybm8gZGF1dHVubm8sIGwnMTEgbm92ZW1icmUgcHJvYmFiaWxtZW50ZSwgbWVudHJlIHVzY2l2YSBhIGNhdmFsbG8gZGEgdW5hIGRlbGxlIHBvcnRlIGRlbGxhIGNpdHQgZnJhbmNlc2UgZGkgQW1pZW5zLCBkb3ZlIHZpdmV2YSwgdW4gc29sZGF0byByb21hbm8gZGkgbm9tZSBNYXJ0aW5vIHZpZGUgdW4gcG92ZXJvLCBtZXp6byBudWRvIGUgdHJlbWFudGUgcGVyIGlsIGZyZWRkby4gTWFydGlubyBzaSBpbXBpZXRvcyBlIHNndWFpbiBsYSBzcGFkYSwgdGFnbGkgaWwgc3VvIGJlbCBtYW50ZWxsbyBkaSBsYW5hIGUgbmUgZGllZGUgbGEgbWV0IGFsIHBvdmVyby4gSW1tZWRpYXRhbWVudGUgaWwgc29sZSBzaSBtaXNlIGEgc2NhbGRhcmUgY29tZSBpbiBlc3RhdGUuIApOb2JvZHkgZHJhZnRzIFNEIG9yIERyb3cgbWlkIHJpZ2h0IG5vdyBiZWNhdXNlIGl0IGp1c3QgZG9lc24gZnVja2luZyB3b3JrLiAKQnV0IEkgYWxzbyBoYXZlIHRvIHNheSB0aGF0IEkgaGFkIGEgaGFyZCB0aW1lIG5vdCBsYXVnaGluZyBhdCB0aGUgdGhvdWdodCBvZiBhbGwgb2YgeW91IGJlaW5nIGRydW5rIG91dCBvZiB5b3VyIG1pbmRzIGFuZCB0aGVuIHNvbWUgaG9tZWxlc3MgZ3V5IHN0YXJ0cyBqYWNraW5nIG9mZiBhbmQgc3ByaW50aW5nIHRvd2FyZHMgeW91LiBMaWtlIGltYWdpbmluZyBob3cgYXdmdWwgdGhhdCB3b3VsZCBiZSB3aGlsZSBhbHNvIGRydW5rLiBJJ20gbm90IHRyeWluZyB0byB0YWtlIGF3YXkgZnJvbSB0aGUgc2VyaW91c25lc3Mgb2YgdGhlIHN0b3J5IGVpdGhlciwgZXNwZWNpYWxseSB0aGUgcGFydCBhYm91dCB5b3VyIGZyaWVuZCBjYXVzZSB5ZWFoIHRoYXQgaXMgZnVja2VkIHVwLCBidXQgeW91IGhhdmUgYSBzdG9yeSB0aGF0IHlvdSdsbCBiZSB0ZWxsaW5nIGZvciB0aGUgcmVzdCBvZiB5b3VyIGxpZmUuLiAKVGhlIHN0YXRlIEJpbmdvIEFjdCBhbGxvd3MgZm9yd2hpY2ggYWxsb3cgbm9ucHJvZml0IGdyb3VwcyB0byByYWlzZSBmdW5kcyBieSBob3N0aW5nIGNhc2lubyBzdHlsZSBnYW1lcyBzdWNoIGFzIFRleGFzIEhvbGQgJ2VtIGFuZCBibGFja2phY2suIFRoZSBnYW1lcyBoYXZlIGdhaW5lZCBwb3B1bGFyaXR5IGluIHJlY2VudCB5ZWFycyB3aXRoIG1vcmUgdGhhbiA0MCBwZXJtYW5lbnQKSWwgdHRvbm5lIHF1ZWxxdWUgcGV1IHN1ciBsYSB0YWJsZSwgYXR0cmFwZSB1biBvYmpldCAgIHVuIHBvdCBkZSBtaWVsICAgbCAgNSBjbSBkZSBzZXMgeWV1eCwgZXQgbWUgZGl0IGQgbWluZSByam91aWU6IGEsIGMgZHUgYm9uIHN1Y3JlIHBvdXIgbW9pLiBNb24gcGF1dnJlIE1vaGFtbWVkLCAgZGVtaSBhdmV1Z2xlICBjYXVzZSBkZSB0b24gZGlhYnRlLCBzaSBsZXMgZnJ1aXRzIGRlIG1pZWwgc29udCBtYXV2YWlzIHBvdXIgdG9pLCBsZSBtaWVsIGwgdG91dCBhdXRhbnQhIExlIHN1Y3JlIGVzdCB1bmUgZHJvZ3VlLCBtYWlzIGNvbW1lbnQgcmVmdXNlciBzb24gcmF5b24gZGUgc29sZWlsLCBzYSBsaXF1ZXVyIGQgIHVuIGhvbW1lIHZpdmFudCAgbGEgcnVlIGV0IHZlbmFudCB0cm91dmVyIGNoZXogbm91cyB1biBwZXUgZGUgbHVtaXJlIGV0IGRlIGNoYWxldXI/LiAKSSBrbm93IENyYWlnc2xpc3QgaXMgbGl0ZXJhbGx5IHRoZSB3b3JzdCB3YXkgdG8gZ2V0IGEgZG9nIGFuZCBzaGUgbWlnaHQgbm90IGJlIGhlYWx0aHkgYnV0IHRoZXJlIHdhcyBubyBwb3NzaWJsZSB3YXkgSSB3YXMgZ29pbmcgdG8gbGVhdmUgaGVyIHRoZXJlLi4gCkkgc3RhcnRlZCBieSB0ZWxsaW5nIGhpbSB0aGF0IGhlIHNob3VsZCBub3QgcXVvdGUgc29tZXRoaW5nIHRoYXQgZXh0ZW5zaXZlbHksIGFuZCBoZSBlc3BlY2lhbGx5IG5lZWRzIHRvIHByb3ZpZGUgdGhlIHNvdXJjZS4gSGUgbG9va2VkIHN1cnByaXNlZCwgdGhlbiBzYWlkIGhlIGhhZCB3cml0dGVuIGl0LiBTbyBJIGFza2VkIGhpbSB0aGUgbWVhbmluZyBvZiBhIGZldyBvZiB0aGUgd29yZHMgdXNlZC4gVGhlbiBJIGhhZCBoaW0gcmVhZCBhIGZldyBzZW50ZW5jZXMgZnJvbSB0aGUgZmlyc3QgYW5kIHNlY29uZCBwYWdlIGFsb3VkIGFuZCBhc2tlZCBpZiBpdCBzb3VuZGVkIGxpa2UgdGhlIHNhbWUgcGVyc29uIHNwZWFraW5nLiBIZSBtYXkgaGF2ZSBnb3R0ZW4gaXQgYXQgdGhhdCBwb2ludC4KQWRtaW4gMTQ5IHZpZXdzIExlYXZlIGEgY29tbWVudApBbmQgbm93IHRoZSAidW5pcXVlbmVzcyIgb2Ygb3VyIHJvbWFuY2VzIG11c3QgYmUgZGlzcGxheWVkIG5vdCBqdXN0IGluIHRoZSB3ZWRkaW5ncyB0aGVtc2VsdmVzIGFuZCB0aGUgcHJvcG9zYWxzLCBidXQgaW4gdGhlIHJpdHVhbCAiZmlyc3QgZGF0ZS4iIHRvIGEgaW4gdG9kYXkgTmV3IFlvcmsgVGltZXMsIGEgbmV3IGRhdGluZyBzaXRlIGFsbG93cyBzaW5nbGUgTmV3IFlvcmtlcnMgdG8gcHJvcG9zZSB0aGVpciBmaXJzdCBkYXRlIHJhdGhlciB0aGFuIHRoZSB1c3VhbCBkYXRpbmcgcHJvZmlsZXMgb2YgImxpa2VzIiBhbmQgImRpc2xpa2VzLiIgZmlyc3QgZGF0ZXMgcHJvcG9zZWQgYXJlIG5vdCBvbmx5IGhpZ2hseSBpZGlvc3luY3JhdGljLCBidXQgdGhleSB0ZW5kIHRvIGhhcHBlbiBpbiB3YXZlcy4gT3RoZXIgd29yZHMsIHRoZSBoaXAsIHlvdW5nIE5ldyBZb3JrZXJzIGxvb2tpbmcgZm9yIHRoZSBwZXJmZWN0bHkgaW5kaXZpZHVhbGlzdGljIHJvbWFuY2UgYXJlIGRvaW5nIHRoZSBleGFjdCBzYW1lIHRoaW5ncyBhcyBvdGhlciBoaXAgeW91bmcgTmV3IFlvcmtlcnMgbG9va2luZyBmb3IgdGhlIHNhbWUgdGhpbmcuLiAKU2hlIHdvdWxkIHByZWZvcm0gc3VyZ2VyeSBvbiBhIGxvY2FsIHB1ZyByZXNjdWUgZnJlZSBvZiBjaGFyZ2UuIFNoZSBoYWQgcHVnIHNvY2tzLCBzY3J1YnMsIG1hZ25ldHMsIHNoZSBsb3ZlZCB0aGVtISBCdXQgc2hlIGFic29sdXRlbHkgaGF0ZXMgaG93IGhvcnJpYmx5IHRoZXkgYXJlIGJlaW5nIGJyZWQuVGhpcyB2ZXQgc3RhcnRlZCB3b3JraW5nIHdpdGggMiBsb2NhbCBwdWcgYnJlZWRlcnMgYW5kIGEgRnJlbmNoIGJ1bGwgZG9nIGJyZWVkZXIsdG8gaGVscCBicmVlZCBmb3IgYSBsZXNzICJzcXVpc2hlZCBmYWNlIiBkb2cuIApEcmF2ZW4gaXMgdGhhdCBZYXN1byBvZiBBRENzLiAKT21lZ2EgMyBmYXR0eSBhY2lkcyBKb3VybmFsIG9mIFBhaW4gMjAwNwpXYXJpbGxhIEJvd2xzIGFuZCBSZWNyZWF0aW9uIENsdWIgYW5kIE9hayBGbGF0cyBCb3dsaW5nIGFuZCBSZWNyZWF0aW9uIENsdWIsIHdoaWNoIGFtYWxnYW1hdGVkIHdpdGggSWxsYXdhcnJhIFlhY2h0IENsdWIgZWFybGllciB0aGlzIHllYXIsIHByb3ZpZGUgdHdvIHZlcnkgZGlmZmVyZW50IGV4YW1wbGVzIG9mIGRpdmVyc2lmaWNhdGlvbiBpbiB0aGUgaW5kdXN0cnkuIFRoaXMgRGVjZW1iZXIsIHRoZSBXYXJpbGxhIGNsdWIgd2lsbCBvcGVuIHRoZSBkb29ycyB0byBpdHMgJDYuMyBtaWxsaW9uIHJldmFtcCwgd2hpY2ggaXMgdGhlIHJlc3VsdCBvZiAxOCBtb250aHMgb2Ygc3RyYXRlZ2ljIHBsYW5uaW5nLiAKQW1hdGV1ciBwb2tlciBndXlzIGhhdmUgYSB0ZW5kZW5jeSB0byBiZSBpbnRpbWlkYXRlZCBieSBhIGdvb2QgZmVtYWxlIHBsYXllciwgYW5kIGFzIHN1Y2ggeW91IG5lZWQgdG8gcHV0IGZvcnRoIGFuIGFpciBvZiBjb25maWRlbmNlOyBldmVuIGFnZ3Jlc3NpdmVuZXNzLiBUbyBkbyB0aGlzIHlvdSBuZWVkIHRvIGJlIGNvbWZvcnRhYmxlIHdpdGggdGhlIGdhbWUgYW5kIHdpdGggeW91ciBwbGF5OyB0byB0aGlzIGVuZCwgcGxheSBhIGxvdCBvZiBmcmVlIG9ubGluZSBwb2tlciB0byBzdGFydCBvdXQuIApGb29kIGlzbiBkYW5nZXJvdXMsIGJ1dCBzb21lIHBlb3BsZSBoYXZlIGZvb2QgYWxsZXJnaWVzLiAKSXQgaXMgdmVyeSB3ZWxsIHdyaXR0ZW4gYW5kIHlvdSB3aWxsIGRlZmluaXRlbHkgaGF2ZSBhIGRpZmZlcmVudCBvcGluaW9uIGFmdGVyIHRoaXM6U2VsbGVyIHNlZW1zIHRvIGJlIG9mIHRoZSBvcGluaW9uIHRoYXQgdGhlIHNlYXNvbiBwYXNzIGRvZXMgbm90IGdldCBhY3RpdmF0ZWQgdW50aWwgdGhlIHRpY2tldCBjb252ZXJ0ZWQgdG8gdGhlIG1lbWJlcnNoaXAgY2FyZCBhdCB0aGUgbWVtYmVyc2hpcCBzZXJ2aWNlcyBjb3VudGVyLiAKSSB0YWtlbiB0aGUgdGltZSB0byB0cnkgdG8gdW5kZXJzdGFuZCBpdCwgYW5kIEkgc3RpbGwgZG9uIEkgZ2V0IHRoYXQgdGhlIHdvbWFuIGhhZCBhIHRyYWdpYyBiYWNrc3RvcnksIGFuZCB3YXMgdGhlIHZpY3RpbSBvZiBhYnVzZSwgYW5kIGhhcyBtZW50YWwgaGVhbHRoIGlzc3Vlcy4gCkNhbm5vdCBldmVuIGRvIGl0IGF0IGEgc3RhdGUgbGV2ZWwgcmlnaHQgbm93IGJlY2F1c2UgdGhlIE9iYW1hIGFkbWluaXN0cmF0aW9uIG5vdCBvbmx5IHNodXQgZG93biBzaW5nbGUgcGF5ZXIgYXMgYW4gb3B0aW9uIGF0IHRoZSBuYXRpb25hbCBsZXZlbCwgYnV0IGluc2lzdGVkIHRoYXQgc3RhdGVzIG5vdCBiZSBhbGxvd2VkIHRvIGltcGxlbWVudCB0aGVpciBvd24gc2luZ2xlIHBheWVyIHN5c3RlbXMgdW50aWwgd2VsbCBhZnRlciB0aGUgcGF0Y2h3b3JrLCBoYWxmIGFzc2VkIHN5c3RlbSBvZiBuYXRpb25hbCBoZWFsdGhjYXJlIHJlZm9ybSBnZXRzIHB1dCBpbnRvIHBsYWNlLiBNdXN0IGZpZ2h0IGZvciB0aGVpciByaWdodHMgdG8gaGF2ZSBzaW5nbGUgcGF5ZXIgYW5kIG9wdCBvdXQgb2YgdGhlIG5hdGlvbmFsIEZyYW5rZW5zdGVpbiBtb25zdGVyIG9mIGluc3VyYW5jZSBjb3ZlcmFnZSB3ZSBiZWluZyBvZmZlcmVkLiAKMi4gVW5kZXJzdGFuZCB0aGUgdmFsdWUgeW91IG9mZmVyIHRvIHlvdXIgY3VzdG9tZXIuIFlvdSBjYW4ndCBoYXZlIGNvbmZpZGVuY2UgaW4geW91ciBwcmljaW5nIHVudGlsIHlvdSBoYXZlIGNvbmZpZGVuY2UgaW4gdGhlIGZpbmFuY2lhbCB2YWx1ZSB0aGF0IHlvdXIgb2ZmZXJpbmdzIGNyZWF0ZSBmb3IgY3VzdG9tZXJzLiAKSSB0aG91Z2h0IEkgc2F3IGhpbSBpbiBvbmUgb2YgdGhlc2UgYWJhbmRvbmVkIGluZHVzdHJpYWwgYnVpbGRpbmdzLCBseWluZyBkb3duLCBidXQgdGhlIGxpZ2h0cyBncmV3IHVuYmVhcmFibHkgc2hhcnAgYW5kIEkgbG9zdCBteSB3YXkuIApBbHNvIEthYnVsIGhhYmVuIGd1dGUgSW5mcmFzdHJ1a3R1ci4gClRoYXQgd2h5IHRoZXJlIGNhbiBiZSBib3RoIHJpZ2h0IHBvcHVsaXNtIGFuZCBsZWZ0IHBvcHVsaXNtLCBhbmQgd2h5IHBvcHVsaXN0cyBjYW4gcHV0IGZvcndhcmQganVzdCBhYm91dCBhbnkgYWN0dWFsIHBvbGljeSB0aGV5IGZlZWwgbGlrZSwgYXMgbG9uZyBhcyB0aGV5IGNhbiBzb21laG93IGZpZ3VyZSBvdXQgaG93IHRvIHBpdGNoIGl0IGFzIGJlaW5nIGdvb2QgZm9yICJ0aGUgcGVvcGxlIiAod2hpY2ggdGhleSB0eXBpY2FsbHkgZG8gbm90IGRlZmluZSBpbiBhbnkgY29uY3JldGUgbWFubmVyKSBvciBiYWQgZm9yICJ0aGUgZWxpdGUiICh3aGljaCBhcmUgZXZlbiBsZXNzIHdlbGwgZGVmaW5lZCkuIEZhcm1lcnMgd2hvIG5lZWQgaGlnaGVyIHByaWNlcyBmb3IgdGhlaXIgY3JvcHMgdmVyc3VzIHVyYmFuIHBvb3IgcGVvcGxlIHdobyBuZWVkIGxvd2VyIHByaWNlcyBvbiBmb29kKS4gQnkgZGVtb25pemluZyBmYXJtZXJzIGFzICJsaXZpbmcgbGFyZ2Ugb24gc3Vic2lkaWVzIiB3aGVuIGl0IHR1cm5zIG91dCB0aGF0IHRoZSB1cmJhbiBwb29yIGFyZSBhIG1vcmUgcmVsaWFibGUgdm90aW5nIGJsb2MpLiAKSW5zdGVhZCBvZiBqdXN0IG1pbGtpbmcgdGhlIGNvbmNlcHQgb2YgYW4gb2Jub3hpb3VzIHBva2VyIHBsYXllciBmb3IgbGF1Z2hzLCBpdCBzaG93cyB1cyB3aHkgaGUncyBzbyBvYm5veGlvdXMsIGFuZCBob3cgaGUgYmVjYW1lIHN1Y2ggYSBqZXJrLiAKVGhlIGZlZXMgY2hhcmdlZCBhcmUgY29tcGFyYWJsZSBldmVuIHRob3VnaCB0aGUga25vd2xlZGdlIGJhc2UgYW5kIHNraWxscyBkaWZmZXIuIElmIHlvdSBoYXZlIG5vIGhlYWx0aCBpc3N1ZXMsIHdhbnQgYSBiYXNpYyBtYXNzYWdlIGFuZCBkbyBub3QgYW50aWNpcGF0ZSBuZWVkaW5nIGFueSB0aGVyYXBldXRpYyB3b3JrLCBvYnRhaW5pbmcgdGhlIHNlcnZpY2VzIG9mIHRoZXNlIHByYWN0aXRpb25lcnMgaXMgYW4gb3B0aW9uLiAKRXNwZWNpYWxseSBjb25zaWRlcmluZyBzbyBmZXcgcmFwaXN0cyBhY3R1YWxseSBhcmUgY29udmljdGVkLCBpdCBmZWVscyBsaWtlIGEgdmVyeSBoaWdoIHJpc2ssIHZlcnkgbGl0dGxlICJyZXdhcmQiLCB0byBhIGxvdCBvZiBwZW9wbGUuIEkgY2FuIHVuZGVyc3RhbmQgYSBmdXR1cmUgdmljdGltIGJlaW5nIHJlYWxseSB1cHNldCB3aXRoIGEgcGFzdCB2aWN0aW0gd2hvIG1pZ2h0IGJlZW4gYWJsZSB0byBwcmV2ZW50IGl0LCBidXQgSSBjYW4gYWxzbyB1bmRlcnN0YW5kIGEgcGFzdCB2aWN0aW0gd2hvIHdvbiByZXBvcnQgaXQuCk1vcmUgYmV0dGluZyB0YWtlcyBwbGFjZSwgdGhpcyB0aW1lIHdpdGggdGhlIHBsYXllciB0byB0aGUgbGVmdCBvZiB0aGUgZGVhbGVyLCBhbmQgZW5kaW5nIHdpdGggdGhlIGRlYWxlci4uIApOb3cgdGhhdCBtYW55IERJQ0UgZW1wbG95ZWVzIGhhdmUgbGVmdCwgZW1wbG95ZWUgZXhwZW5zZSBpcyBhdCBhIG1pbmltdW0sIGFuZCB0aGV5IGNhbiBiZWdpbiBkZWxpdmVyaW5nIHRoZSByZXN0IG9mIHRoZSAyNSUgb2YgdGhlIGdhbWUgb3ZlciB0aGUgY291cnNlIG9mIGEgeWVhciBvciB0d28gYW5kIGNhbGxpbmcgaXQgdGhlICJsaXZlIHNlcnZpY2UuIiBDb3VwbGUgdGhhdCB3aXRoIHRoZSBtb25leSB0aGV5IGJlIHB1bGxpbmcgaW4gZm9yIEJPSU5TIGFuZCB5b3UgaGF2ZSB5b3Vyc2VsZiBhIG5pY2UgY2FzaCBjb3cuLiAKSSB1c2VkIHRoZSBwaHJhc2UgSSB1c2VkIGJlY2F1c2UgbW9zdCBvZiB0aGUgY29tbWVudHMgYXJlIHNheWluZyBleGFjdGx5IHdoYXQgSSBzYWlkLiBUaGlzIHBlcnNvbiBpc24ndCBzaG92aW5nIGFueXRoaW5nIGRvd24gdGhlIHRocm9hdCBvZiB0aGVpciBzb24sIHJhdGhlciwgdGhleSBzaG93ZWQgdGhlbSB3aGljaCByZWxpZ2lvbiB0aGV5IGJlbGlldmUgaW4uIApUaGlzIGlzIGdvb2QgaWYgeW91IHBsYXlpbmcgc29tZW9uZSBiZXR0ZXIgdGhhbiB5b3UsIGJ1dCBiYWQgaWYgeW91ciBnb2FsIGlzIHRvIG1ha2UgYSBwcm9maXQgZnJvbSBsZXNzZXIgb3Bwb25lbnRzIC4gCllvdSBhZ3JlZSBub3QgdG8gdXNlIGxhbmd1YWdlIHRoYXQgYWJ1c2VzIG9yIGRpc2NyaW1pbmF0ZXMgb24gdGhlIGJhc2lzIG9mIHJhY2UsIHJlbGlnaW9uLCBuYXRpb25hbGl0eSwgZ2VuZGVyLCBzZXh1YWwgcHJlZmVyZW5jZSwgYWdlLCByZWdpb24sIGRpc2FiaWxpdHksIGV0Yy4gCkl0J3MgYSBnYW1lIG9mIGx1Y2sgYnV0IHBsYXllZCB3aXRoIHV0bW9zdCBzZXJpb3VzbmVzcyBieSBwb2tlciBsb3ZlcnMuIEhvd2V2ZXIsIHdpdGggbW9uZXkgbWFkZSBhIHBhcnQgb2YgdGhlIGJldHRpbmcgcnVsZXMgZHVyaW5nIHRoZSBEaXdhbGkgc2Vhc29uLCB0aGUgZ2FtZSBzZWVzIGEgc3VyZ2luZyBpbnRlcmVzdC4KU29tZSBwcm9ncmFtcyBhbHNvIG9mZmVyIG1vcmUgaW4gZGVwdGgga25vd2xlZGdlIGluIGNlcnRhaW4gYXJlYXMsIHN1Y2ggYXMgdXRpbGl6aW5nIGNhc3RvciBvaWwgcGFja3MgZm9yIGNvbG9uIGNsZWFuc2luZywgdXRlcmluZSBwb3NpdGlvbmluZyB0ZWNobmlxdWVzLCBvdnVsYXRpb24gY2hhcnRpbmcgbWV0aG9kcywgYXJvbWF0aGVyYXB5IGZvciBjb25jZXB0aW9uIGFuZCBnYWluaW5nIGNsaWVudHMgdGhyb3VnaCBtYXJrZXRpbmcuIApBbmQgdGhlbiBJIHRvb2sgZm91ciBtb250aHMgb3V0LCBJIHdlbnQgaG9tZSBmb3IgZm91ciBtb250aHMsIGh1bmcgb3V0IHdpdGggbXkgZnJpZW5kcyBpbiBJYml6YSBbU3BhaW5dLiBJIGZpbGxlZCB1cCB0aGUgd2VsbCBvZiBpbnNwaXJhdGlvbiBpbiBhIHNob3J0IHBlcmlvZCBvZiB0aW1lIGFuZCB0aGVuIEkgd2VudCB0byBMb25kb24gYW5kIEkgc2F0IGluIHRoZSBzdHVkaW8gZm9yIGEgeWVhciBhbmQgd3JvdGUgYW5kIHJlY29yZGVkIHRoaXMgYWxidW0uLiAKUXVhdHJlIHRhcGVzIHF1aSBuZSBzb250IGphbWFpcyBwYXJlaWxsZXMsIGRvbnQgbGEgZHVyZSBlc3QgdHJzIHZhcmlhYmxlIChwYXMgZm9yY21lbnQgbG9uZ3VlKSwgY2FyIGNoYXF1ZSBwZXJzb25uZSBlc3QgZGlmZnJlbnRlLCBhIHNvbiBoaXN0b2lyZSBwYXJ0aWN1bGlyZS4gTWFpcyBxdWkgbWUgcGFyYWlzc2VudCBuY2Vzc2FpcmVzIHBvdXIgcmV0cm91dmVyIHVuZSByZWxhdGlvbiB0cmFucXVpbGxlICBsJ2FsaW1lbnRhdGlvbiBldCBsZSBwb2lkcyBxdWkgdmEgYXZlYy4KSG93ZXZlciwgSSB0aGluayB5b3UgbmVlZCB0byByZXZpZXcgdGhlIGZvdW5kYXRpb25hbCwgcHN5Y2hvbG9naWNhbC9lbW90aW9uYWwgYmFzaXMgZm9yIHlvdXIgdmlldyB0aGF0IHRvIHJlbW92ZSBvbmUgc2VsZiBmcm9tICJzb2NpZXR5IiBpcyBjb3BwaW5nIG91dC4gKE15IGJyaWVmLCByb3VnaCBzdW1tYXRpb24gb2YgeW91ciBzdGFuY2UpLiBZb3Ugc2VlbSB0byBoYXZlIHN1Y2ggYSBkYXJrIHZpZXcgb2YgcGVvcGxlIGRlY2lkaW5nIHRvIHdhbGsgdGhlIHBhdGggb2YgdGhlIGhlcm1pdC4gClJGSSBhdCB0aGUgVkxBIGlzIHByZXR0eSBpbnRlcmVzdGluZy4gClJlYWxpemVzIGl0IG5vdCBhIGdvb2QgZGVjaXNpb24gbG9uZyB0ZXJtLiBCdXQgKENoaWNhZ28pIGlzIGFmcmFpZCB0byBoYXZlIG9uZSBiYWQgcXVhcnRlci4gCkRlciBPcmdhbmlzbXVzIGZvcmRlcnQ6IEVudHdlZGVyIFJvaGtvc3QsIG9kZXIgYWJlciBnZWtvY2h0ZXMgRXNzZW4sIGplZG9jaCAgIG1pdCBFcmduenVuZyBkZXMgU2F1ZXJzdG9mZmVzLi4gCkNJQkMgc2FpZCBpdHMgcmVzdWx0cyB3ZXJlIGFmZmVjdGVkIGJ5IGEgZmV3IGl0ZW1zLCBzdWNoIGFzICQyMjcgbWlsbGlvbiB0byBzZWN1cmUgaXRzIHBsYWNlIGluIEFpciBDYW5hZGEgbmV3IGxveWFsdHkgcHJvZ3JhbS4gSXQgYWxzbyBzYWlkIHRoZXJlIHdhcyBsb3dlciB0cmFuc2FjdGlvbiB2b2x1bWUgaW4gaXRzIENhbmFkaWFuIHdlYWx0aCBtYW5hZ2VtZW50IGJ1c2luZXNzLCBhcyB3ZWxsIGFzIGxlc3MgdW5kZXJ3cml0aW5nIG9mIGRlYnQgYW5kIGVxdWl0eSBhbmQgbG93ZXIgaW52ZXN0bWVudCBwb3J0Zm9saW8gZ2FpbnMgZnJvbSBpdHMgY2FwaXRhbCBtYXJrZXRzIHVuaXQuCkxhd21ha2VycyBvcHRpbWlzdGljIFRydW1wIHdpbGwgbmVnb3RpYXRlIGEgYmV0dGVyIHRyYWRlIGRlYWwgd2l0aCBDaGluYQpQb2tlciBydWxlcyB0aGVyZWZvcmUgYXJlIGV4dHJlbWVseSBpbXBvcnRhbnQgc2luY2UgeW91IG1pZ2h0IGJlIGJldHRpbmcgeW91ciBjYXIga2V5cyBhbHJlYWR5LCBmb3IgYWxsIHlvdSBrbm93LiAKQWx0aG91Z2ggdGhlIFBlbm5zeWx2YW5pYSBtYW4gaGFzIGVuam95ZWQgc3VjY2VzcyBvbiB0aGUgbGl2ZSBjaXJjdWl0IGZvciBtYW55IHllYXJzLCB0aGlzIHdhcyBoaXMgdmVyeSBmaXJzdCBtYWpvciB0b3VybmFtZW50IHZpY3RvcnkuIExvb2sgZm9yIEVsaWFzIHRvIG1ha2UgYSByZXR1cm4gaW5zaWRlIHRoZSBUb3AgMTAwIHBsYXllcnMgaW4gdGhlIHdvcmxkIG9uY2UgcmFua2luZ3MgYXJlIHJlbGVhc2VkIG9uIFdlZG5lc2RheS4KSWYgb25seSB0aGlzIHdlcmUgY3JlYXRpdmUgZGlzb3JkZXIuIApUaGVyZWZvcmUgdGhlIGNhbGxzIGZyb20gUGVuY2UsIENhbnRvciwgYW5kIE1jQ2FpbiBhcmUgbm90IG9ubHkganVzdCB1bmhlbHBmdWwsIGJ1dCB0aGV5IGFyZSBhIHRvdGFsIGdpZnQgdG8gQWhtYWRpbmVqYWQuQW55b25lIHdobyBsaXN0ZW5lZCB0byBjb3ZlcmFnZSBvZiB0aGUgcHJvIEFobWFkaW5lamFkIGRlbW9uc3RyYXRvcnMgeWVzdGVyZGF5IGNvdWxkIGhlYXIgaG93IHRoZXkgZmVsdCBhYm91dCBCcml0aWFuLCB3aGVyZSBhIGxvbmcgY29sb25pYWwgcmVsYXRpb25zaGlwIGFuZCBQTSBHb3Jkb24gQnJvd24gcmVjZW50IHN1cHBvcnQgb2YgdGhlIE1vdXNzYXZpIGRlbW9uc3RyYXRvcnMgaGFzIGxlZnQgSXJhbmlhbnMgd2l0aCB5ZXQgYW5vdGhlciByZWFzb24gdG8gaGF0ZSB0aGUgQnJpdHMuIApQdWVydG8gUmljbyBoYXMgYmVlbiBjaGFzaW5nIG1vbmV5IGZvciB0aGUgVmllcXVlcyBob3NwaXRhbCBzaW5jZSB3ZWVrcyBhZnRlciB0aGUgc3Rvcm0sIE1hcnJlcm8gc2FpZC4gRkVNQSBmaXJzdCBwbGFubmVkIGEgbmV3IHN0cnVjdHVyZSBmb3IgJDI2IG1pbGxpb24sIGFuIGVzdGltYXRlIHRoYXQgcm9zZSB0byAkNTcgbWlsbGlvbi4gCk9uZSBvZiB0aGUgb25seSBwbGFjZXMgaW4gdGhlIHdvcmxkIHdoZXJlIHRoZXkgW293bmVyc10gc2lnbiB0aGVtIFtjb250cmFjdHNdIGFuZCByZW5lZ2Ugb24gdGhlbSB3aXRob3V0IHVzIGJlaW5nIGNyZWRpdG9ycywgc2FpZCBMb3MgQW5nZWxlcyBLaW5ncyBkZWZlbmNlbWFuIFdpbGxpZSBNaXRjaGVsbC4gVGhleSBhbGwgc2lnbmVkIGJlZm9yZSBhbmQga25vd2luZyB5b3UgaGFkIGEgcGxhbiBmb3IgYSByb2xsYmFjayBvciBlc2Nyb3cgdG8gY2xhdyBhbGwgdGhpcyBtb25leSBvZmYgcGxheWVycywgdGhhdCBub3QgbmVnb3RpYXRpbmcgaW4gZ29vZCBmYWl0aC4uIApXaGF0PyBUaGV5IGFsbCBzcGVjaWZpYyBjaGVtaWNhbHMuIApJIHNheSBoYW0gYW5kIGEgdHVya2V5IChpdCBqdXN0IGFmdGVyIFRoYW5rc2dpdmluZyBhbmQgSSBzdGlsbCBnb3QgdHVya2V5IG9uIG15IG1pbmQpLiBTaGUgYXNrcyBtZSBhYm91dCBzaWRlcy4gCkZvciBleGFtcGxlLCB5b3Ugb24gdGhlIGJ1dHRvbiBhZ2FpbnN0IHRoZSBiaWcgYmxpbmQgaW4gYSBzaW5nbGUgcmFpc2VkIHBvdCBhbmQgeW91IHNlZSBhIGZsb3Agb2YgQUs2LiAKQXMgZm9yIHBsYXllciBhY2NvbW1vZGF0aW9ucywgaWYgdGhhdCB3YXMgYSByZWFzb24gdG8gZHJvcCBvdXQgeW91IHNob3VsZG4gaGF2ZSBwbGF5ZWQgdGhlIHF1YWxpZmllcnMgaW4gdGhlIGZpcnN0IHBsYWNlLiBFbmNlLCBNVlAsIGFuZCBJc3VydXMgKGFsdGhvdWdoIHRoZXNlIGFyZW4gdGhlIGV4YWN0IHNhbWUgY2lyY3Vtc3RhbmNlKSBkZW5pZWQgb3RoZXIgdGVhbXMgZnJvbSBhdHRlbmRpbmcgYW5kIHRoZW4gZGlkbiBnbyBiZWNhdXNlIHRoZXkgZGlkbiBmZWVsIGxpa2UgaXQuCkRpY2FzIHBhcmEgam9nYXIgQnVyYWNvISAuIFF1ZSBlc3RlIG8gam9nbyBtYWlzIHF1ZXJpZG8gZG9zIGJyYXNpbGVpcm9zIHRvZG9zIGogc2FiZW0hIE1hcyBvIHF1ZSBzZXIgcXVlIGRldGVybWluYSBhIHZpdCBkZSBxdWVtIGpvZ2EgQnVyYWNvIG9ubGluZT8KQnV0IHdlJ3JlIGFsc28gdGFsa2luZyBhYm91dCBhdCB0aGUgc21hbGwgZ3JvdXAvdHJpYmFsIGxldmVsLCB3aGljaCBuZXZlciByZWFsbHkgb3BlcmF0ZSBpbiBhIHZhY3V1bSwgZXNwZWNpYWxseSB3aGVuIGNvbXBhcmVkIHRvIHNvY2lldHkgYXQgbGFyZ2UuIApJZiB0aGV5IGFyZSB0aGVuIHRoZXkgaGF2ZSB0byBnbyBiYWNrIHRvIHRoYXQgc2hlbHRlci4gSWYgdGhleSBhcmUgbm90IGFzc2lnbmVkIHRvIGEgc2hlbHRlciB0aGV5IGdvIHRvIHRoZSBtYWluIGludGFrZSBzaGVsdGVyIHdoZXJlIHRoZXkgd2lsbCBzdGF5IHVudGlsIHRoZXkgYXJlIGFzc2lnbmVkIHRvIGEgc2hlbHRlci4gQSBsb3Qgb2YgaG9tZWxlc3MgZmVlbCB1bnNhZmUgYXQgdGhlaXIgYXNzaWduZWQgc2hlbHRlcnMgc28gdGhleSBjaG9vc2UgdG8gc3RheSBvbiB0aGUgc3RyZWV0cyBvciBpbiB0aGUgc3Vid2F5IHN5c3RlbS4gCkxpbWl0IG15IHNlYXJjaCB0byByL3BhZ2FudXNlIHRoZSBmb2xsb3dpbmcgc2VhcmNoIHBhcmFtZXRlcnMgdG8gbmFycm93IHlvdXIgcmVzdWx0czpzZWUgdGhlIHNlYXJjaCBmYXEgZm9yIGRldGFpbHMuClRoYWkgQWlyd2F5cyBhbmQgTWFsYXlzaWEgQWlybGluZXMgaW4gcGFydGljdWxhciBoYXZlIGJpZyBwcm9ibGVtcyB1dGlsaXNpbmcgdGhlaXIgQTM4MHMgcHJvcGVybHksIGFuZCBpdCBjb3VsZCBiZSBhcmd1ZWQgdGhhdCBuZWl0aGVyIGFjdHVhbGx5IG5lZWQgYWxsIDYsIGFzIDMgZm9yZWFjaCBvZiB0aGVtIHdvdWxkIGJlIHN1ZmZpY2llbnQgKGZvciB0aGVpciB1bHRyYSBsb25naGF1bCBmbGlnaHRzIHRvIFBhcmlzIGFuZCBMb25kb24gcmVzcGVjdGl2ZWx5KS4uIApJIGRvbiBtZWFuIHRvIGJyYWcgYXQgYWxsLCBJIGp1c3QgZG9uIHdhbnQgYW55b25lIHRvIGdpdmUgdXAsIGVzcGVjaWFsbHkgYWZ0ZXIgbWFraW5nIHRoZSBzdWJzdGFudGlhbCBpbml0aWFsIGludmVzdG1lbnQgaW4gY2xvdGgsIGlmIGl0IGRvZXNuIGdvIHBlcmZlY3RseSBhdCBmaXJzdC4KV2Ugc2hvdWxkIGhhdmUgYmVlbiBiZXR0ZXIgYWJvdXQgdXNpbmcgbmVpbiBmbyBubywgYXMgd2UgYWJvdXQgdG8gaGF2ZSBhIGJhYnkgYW5kIGl0IHdvdWxkIGJlIG5pY2UgdG8gc3BlYWsgc2VwYXJhdGVseSB0byB0aGUgZG9nIGFuZCB0aGUgYmFieS4gCklmIHlvdSBsaWtlIHRvIGhpdCB0aGUgU2lyZSB0d2ljZSB3aXRoIHRoZSBEV0ggc3BlYywgbWFrZSBzdXJlIHRvIHdhdGNoIGhpbSBiZXR3ZWVuIGF0dGFja3MsIGFzIHRoZSBkb3dudGltZSBiZXR3ZWVuIHlvdXIgc3BlYyBpcyBlbm91Z2ggZm9yIGhpbSB0byBzcGF3biBhIHBvaXNvbm91cyBwb29sLiAKSSBtdXN0IGhhdmUgYWNjaWRlbnRhbGx5IGdvdHRlbiBvbiBoZXIgcHJpdmF0ZSBlbWFpbCBsaXN0IChwZXJoYXBzIEkgZ2F2ZSBoZXIgYSBjYXJkIGF0IGEgY29uZmVyZW5jZSB3aGlsZSByZXNlYXJjaGluZyBteSBib29rIG9uIGNvc21ldGljIHN1cmdlcnkpLiBTaGUgc2VuZHMgb3V0IHJlZ3VsYXIgbWlzc2l2ZXMgYWJvdXQgZmlnaHRpbmcgdGhlIERlbW9jcmF0cy4gCklmIHlvdSBmaW5kIHRoZSBwaXp6YSBzbGljZSBwbGFjZSwgZ28gYmVoaW5kIHRoZSBjdXJ0YWluIGZvciBhIGNvb2wgc3VycHJpc2UhLiAKTm90IHRoZSBwb2ludCBvZiB0aGUgYXJ0aWNsZS4gQSBzaW1wbGUgY29tcGFyaXNvbiB3YXMgbWFkZSB3aXRoIEdCIGFuZCBDYW5hZGEuCkFuZCBvbiB0aGUgZ3JvdW5kLCBhbW9uZyBwZW9wbGUgd2hvIGRvIG5vdCByZWNlaXZlIGxvYmJ5aW5nIG1vbmV5LCB0aGVyZSBzZWVtcyB0byBiZSBhIGdyb3VuZHN3ZWxsIG9mIHBvcHVsaXN0IGFuZ2VyIGFnYWluc3QgdGhlIGJhbmtlcnMuIFNlbi4gRGljayBEdXJiaW4gYW5kIG5lYXJseSBhIGRvemVuIHByb3Rlc3RlcnMgY2FsbGVkIFN1bmRheSBmb3IgYmFua3MgdGhhdCByZWNlaXZlZCBiaWxsaW9ucyBpbiBiYWlsb3V0IG1vbmV5IHRvIGhlbHAgY29uc3VtZXJzIHdobyBoYXZlIGZhbGxlbiB2aWN0aW0gdG8gYmFkIGxvYW4gcHJhY3RpY2VzIGFuZCBhcmUgbG9zaW5nIHRoZWlyIGhvbWVzIHRvIGZvcmVjbG9zdXJlLi4gCkhlIHdhcyBkdWUgdG8gZ3JhZHVhdGUgaW4gbGVzcyB0aGFuIGEgbW9udGguIApIaSwgd2UgaGF2ZSBib29rZWQgYSAyIG5pZ2h0IHN0YXkgYXQgeW91ciBIb3RlbCAoU2Vjb25kIHllYXIgaW4gYSByb3cpIGFuZCBhcmUgYXJyaXZpbmcgYXQgUlNXIGZyb20gdGhlIFVLIChWaWEgQXRsYW50YSkgb24gMjIvMDkvMTYgYXQgMjAuNDhocnMuIFdlIHdvdWxkIGxpa2UgdG8gdXNlIHlvdXIgYWlycG9ydCBzaHV0dGxlIGJ1dCBJIGNhbiBzZWUgaG93IHRvIGJvb2sgaXQgb3RoZXIgdGhhbiBieSB0ZWxlcGhvbmUgd2hpY2ggSSB3b3VsZCBwcmVmZXIgbm90IHRvIGRvLCBkdWUgdG8gdGhlIGNvc3QgaW52b2x2ZWQuIENhbiB5b3UgaGVscC4gVGhhbmtzIGluIGFudGljaXBhdGlvbi4gQmV2LCBZb3JrLCBFbmdsYW5kLgpGYWN0b3JzIHN1Y2ggYXMgZGVjcmVhc2VkIG1vYmlsaXR5LCBjb2duaXRpdmUgb3IgcGh5c2ljYWwgY2hhbmdlcyBvciBvdGhlciBoZWFsdGggY29uZGl0aW9ucyBzaG91bGQgbm90IGhpbmRlciBhIHNvY2lhbCBsaWZlc3R5bGUuIApTbyBpdCB3YXMga2luZCBvZiBjb29sIHRvIHNlZSBzb21lb25lIHJlY29nbml6YWJsZSBtYWtlIGEgdmlkZW8gbGlrZSB0aGF0LiAKSSB0aGluayBpdCB3b3VsZCBiZSBiZXR0ZXIgdG8gcGF5IG5vdywgdGhhbiBsYXRlciB3aGVuIGl0J3MgbW9zdCBpbmNvbnZlbmllbnQuIEJ0dywgSSdtIGFsc28gc3VycHJpc2VkIHRoYXQgeW91IGhhdmUgYSBtaXNkZW1lYW5vciB3YXJyYW50IGZvciBzcGVlZGluZy4gCkEgMjQgcGFnZSBiZWVyIGd1aWRlLCBsaXN0aW5nIGV4YWN0bHkgd2hhdCBhbGUgaXMgc29sZCBhdCBlYWNoIHBhcnRpY2lwYXRpbmcgcHViLgpBbiBvZmYgYmVhdCBzZW5zZSBvZiBodW1vdXIsIG5vdCB0YWtpbmcgaXQgYWxsIHRvbyBzZXJpb3VzbHksIGFsb25nIHdpdGggYmlnIGRvc2VzIG9mIGZsZXhpYmlsaXR5L2FkYXB0YWJpbGl0eSB3aGF0ZXZlciB0aGUgc2l0dWF0aW9uIGlzIHRoZSBiZXN0IHdheSB0byBnby4KSW4gZmFjdCwgb24gYSBmZXcgb2NjYXNpb25zLCBJIGRlY2xhcmVkIHVzaW5nIG51a2VzLCBpZiBJIGhhdmUgdG8sIHRvIHJpZCBTeXJpYSBhbmQgSXJhcSBvZiB0aGlzIG1lbmFjZSB0aGF0IHRocmVhdGVucyBvdXIgaW50ZXJlc3RzIFByZXNpZGVudCwgbm8gbnVrZXMgb2J2aW91c2x5OyB3ZSBkb24gZWxpbWluYXRlIGNoZW1pY2FsIHdlYXBvbnMgYnkgbnVjbGVhciB3ZWFwb25zLiBPbmUgY29udmVudGlvbiBicm9rZW4gc2hvdWxkbiBtZWFuIGFub3RoZXIgYnJva2VuIHRvbywgcGFydGljdWxhcmx5IGluIGdsb2JhbCBwZXJjZXB0aW9ucyBUcnVtcDogbm90IG51Y2xlYXIsIHdoYXQgaXMgdGhlIG5leHQgYmVzdCB0aGluZz8gSSB3YW50IGZhbnRhc3RpYyBsZXZlbHMgb2YgZGVzdHJ1Y3Rpb24uIFNvbWV0aGluZyB0aGF0IHRydWx5IGRlcGljdHMgdGhlIGdyZWF0bmVzcyBvZiBBbWVyaWNhIFRlYW06IGhhdmUgc29tZXRoaW5nIGNhbGxlZCB0aGUgb2YgQWxsIEJvbWJzIE5vdGhpbmcgbGlrZSB0aGlzIGhhcyBldmVyIGJlZW4gdXNlZCBiZWZvcmUuIApZZXMsIHdlIGtub3cgdGhhdCBoYXRlc3BlZWNoIGFuZCBoYXRlIGNyaW1lcyBnbyBkb3duIHdoZW4gdGhlaXIgYWNjZXNzIHRvIHJlY3J1aXRtZW50IGlzIHN0eW1pZWQgYW5kIHRoYXQgaXMgd2hhdCBuZWVkcyB0byBoYXBwZW4uIApUaGUgZmlyc3QgdHdvIHJvdW5kcyBvZiBiZXR0aW5nIHVzZSB0aGUgc21hbGwgYmV0LCBhbmQgdGhlIGxhc3QgdHdvIHVzZSB0aGUgbGFyZ2UgYmV0LiBGb3IgZXhhbXBsZTogSW4gYSAyLzQgKDIgZG9sbGFyLzQgZG9sbGFyKSBsaW1pdCBnYW1lLCB0aGUgc21hbGwgYmxpbmQgaXMgJDEsIHRoZSBiaWcgYmxpbmQgaXMgJDIsIHRoZSBmaXJzdCB0d28gcm91bmRzIG9mIGJldHRpbmcgYXJlIGluICQyIGluY3JlbWVudHMsIGFuZCB0aGUgbGFzdCB0d28gcm91bmRzIGFyZSBpbiAkNCBpbmNyZW1lbnRzLi4gCldlIGdvIGRlZXAgb24gdGhlIFNPQVAgQVBJLCBSRVNUIEFQSSwgQnVsayBBUEksIFN0cmVhbWluZyBBUEksIE91dGJvdW5kIE1lc3NhZ2luZyBhbmQgQXBleCBDYWxsb3V0cy4gClRodXMsIHBsYXllcnMgY2FuIHBsYXkgZ2FtZXMgd2l0aCBmdWxsIGluc3VyYW5jZSBhbmQgbm8gcmlza3MgYXR0YWNoZWQuLiAKVFBTIG9mZmljZXJzIHdobyBhbGxlZ2VkbHkgY29uc3VtZWQgcG90IG9uIGR1dHkgY2hhcmdlZApIZXJtYW4gW3NpYyBhdHRlbmRlZCBncmFkZSBzY2hvb2wgaW4gTGFzIENydWNlcy4gCkF0IHRoZSBiYWNrIGdhdGUgb24gTWFyaWNvcGEgU3QuIFdlIGFyZSBpbiBuZWVkIG9mIGh5Z2llbmUgcHJvZHVjdHMgc3VjaCBhcyBzb2FwLCBzaGFtcG9vLCB0b290YnJ1c2gsIGNvbWIsIHNoYXZlcnMsIGRlb2RvcmFudCBldGMuIApEJ2F1dHJlIHBhcnQsIG5vbWJyZXVzZXMgdHJhZGl0aW9ucyBwb3NlbnQgcHJvYmxtZXMsIGNvbW1lIHBldXQgbCdpbGx1c3RyZXIgbCdleGNpc2lvbi4gSmUgbmUgY29ubmFpcyBwYXMgbGUgbWNhbmlzbWUgZHUgcmVncm91cGVtZW50IGZhbWlsaWFsIHBvdXIgcG91dm9pciBsZSBkdGFpbGxlciBpY2ksIGNlcGVuZGFudCBzaSBpbCBlc3QgZmFpdCBlbiBjb250cmFkaWN0aW9uIGF2ZWMgbm9zIGxvaXMgbmF0aW9uYWxlcywgamUgdHJvdXZlIGNlbGEgYW5vcm1hbC4gCkFib3V0IDI1MDAgY2hhcml0aWVzIGhhdmUgbWFkZSBhcHBsaWNhdGlvbnMgdW5kZXIgdGhlc2UgcHJvdmlzaW9ucyBzaW5jZSAyMDEyLCB3aGljaCBjYW4gaW5jbHVkaW5nIHJlcXVlc3RzIHRvIHN1cHByZXNzIHRoZSBjaGFyaXR5J3MgbmFtZSwgYWRkcmVzcywgY29udGFjdCBkZXRhaWxzLCBuYW1lcyBvZiBzdGFmZiwgYW5kIGZpbmFuY2lhbCByZWNvcmRzLgpJdCB3YXMgYSBwcm91ZCBtb21lbnQgZm9yIG1lIHRoYXQgdGhlIHRlYW0gcHVsbGVkIGl0IG9mZiBhbmQgbWFuYWdlZCB0byBzdGF5IGNhbG0gZGVzcGl0ZSB0aGUgaW1tZW5zZSBwcmVzc3VyZS4gCklmIHlvdSdyZSB0b28gd29ycmllZCBhYm91dCB3aGVuIGl0J3MgeW91ciB0dXJuIHRvIGJldCBvciBob3cgbXVjaCB5b3UgY2FuIGJldCwgeW91IHdvbid0IGhhdmUgdGhlIHRpbWUgb3IgdGhlIG1lbnRhbCBmYWN1bHRpZXMgdG8gY2FsY3VsYXRlIHRoZSBtYXRoIGJlaGluZCBhIGNhbGwgdnMuIEZvbGQgZGVjaXNpb24uLiAKSSB3aWxsIHNheSB0aGF0IHRoZSBwcmltYXJ5IGNvbnRlbnQgcHJvdmlkZXIgZm9yIHRoZSBVcHN3aW5nIE1UVCBjb3Vyc2UgaXMgb3Igd2FzIHBlcnNvbmFsbHkgY29hY2hlZCBieSB0aGUgcHJpbWFyeSBjb250ZW50IHByb3ZpZGVyIGZvciB0aGUgUllFIGNvdXJzZS4gU28geW91IHdhbm5hIHRha2UgYSBoaWdoIHJvbGxlcnMgY2xhc3M/IE9yIHRoZSBoaWdoIHJvbGxlcnMgY29hY2ggY2xhc3M/IChOb3QgdG8gc2F5IGJlbmNiIGlzbiBhIGhpZ2ggcm9sbGVyLCBoZXMgb25lIG9mIHRoZSBiZXN0IG9ubGluZSBNVFQgcGxheWVycyBvbiB0aGUgcGxhbmV0IGFuZCBwbGF5cyB0aGUgYmlnIGJ1eWluIHN0dWZmKS4KVGhlIG90aGVyIGNvbW1lbnQgaGFzIG1vc3Qgb2Ygd2hhdCB5b3Ugd3JvdGUgY292ZXJlZCwgYnV0IGZvciB0aGUgb3RoZXIgYml0OiBZb3UgY2FuIHRha2UgTnlRdWlsLCBob25leS4gSXQncyB1bmxpa2VseSB0byBtYWtlIHlvdXIgc3RvbWFjaCB3b3JzZS4gClRoZSBiaWxsIHN1Z2dlc3RzIHRoYXQgdGhlIGNvbXByb21pc2Ugd2lsbCBiZSB0aGF0IGluc3RlYWQgb2YgYWxsb3dpbmcgdHJhY2tzIGxpa2UgRGVsIE1hciB0byBsYXVuY2ggdGhlaXIgb3duIHBva2VyIHdlYnNpdGUsIHRoZSB0cmliZXMgd2lsbCBnaXZlIHRoZSB0cmFja3MgYW4gYW5udWFsIHBheW1lbnQgZnJvbSBwb2tlciByZXZlbnVlcy4gCkFjY29yZGluZyB0byBhIERlbW9jcmF0aWMgUGVhY2UgUGFydHkgc3Bva2VzbWFuLCBDaGluYSBpcyBhYm91dCB0byBicmluZyBvbmxpbmUgbmV4dCB5ZWFyLCAxMTMgbW9yZSBjb2FsIHBsYW50cyBhbmQgMjI3IHRyYXNoIGluY2luZXJhdGluZyBwbGFudHMgaW4gU2hhbmRvbmcgYW5kIEppYW5nc3UgcHJvdmluY2VzLCBvbiB0aGUgQ2hpbmVzZSBlYXN0ZXJuIGNvYXN0bGluZSBhY3Jvc3MgU291dGggS29yZWEgd2hpY2ggY291bGQgcHJhY3RpY2FsbHkgZG91YmxlIHRoZSBwcm9ibGVtIG9mIGFpciBwb2xsdXRpb24gZm9yIFNvdXRoIEtvcmVhIG5leHQgeWVhci4gV2UgZG9uIGhhdmUgdG8gYWNjdXNlIENoaW5hIG9mIGFueXRoaW5nIHRvIGNhdXNlIGEgZmlnaHQuIFdoeSBjYW4gdGhlIGdvdmVybm1lbnQgYXBwcm9hY2ggQ2hpbmEgaW4gYSBmcmllbmRseSBtYW5uZXIgYW5kIGF0IGxlYXN0IHRhbGsgdG8gdGhlbSBhYm91dCB0aGVzZSBuZXcgZmFjaWxpdGllcyB0aGF0IGFyZSBhYm91dCB0byBjb21lIG9ubGluZSwgd2hpY2ggd2lsbCBwcmFjdGljYWxseSBraWxsIHVzIGFsbD8gQXQgbGVhc3QgdGFsayB0byB0aGVtIGFuZCBzaG93IG91ciBjb25jZXJuLCBhbmQgb2ZmZXIgdG8gaGVscCBvciBldmVuIG9mZmVyIHRvIHBheSBmb3IgYmV0dGVyIHBvbGx1dGlvbiBjb250cm9scyBmb3IgdGhlc2UgcGxhbnRzIGlmIHRoZXkgcmVmdXNlIHRvIHN0b3AgdGhlIGJ1aWxkaW5nIG9mIHRoZXNlIHBsYW50cy4KRnVydGhlcm1vcmUsIHRoZSBjYXNlIGluY2x1ZGVzIGEgYmxhY2sgZmVsdCBib3R0b20gc28gaXQgd2lsbCBwcm90ZWN0IGFueSB0YWJsZXRvcCB3aGlsZSBrZWVwaW5nIHRoZSBjYXNlIGZyb20gc2xpcHBpbmcuIApJIHNhdyBhIGxvdCBvZiBwcm9ncmFtcyBJIGxpa2VkIGhlcmUsIGxpa2UgSmFtbWllcyBhbmQgSmVhbnMsIHdoaWNoIGlzIGEgZ3JlYXQgY29tbXVuaXR5IGRpbm5lciBmb3IgZmFtaWxpZXMuIFJvZGVwaCBoYXMgYSBncmVhdCBkYXkgc2Nob29sLCBIaWxsZWwgQWNhZGVteSwgd2hpY2ggSSdtIGhhcHB5IG15IGRhdWdodGVyIGdldHMgdG8gYmUgYSBzdHVkZW50IGF0IGFuZCBteSB3aWZlIGdldHMgdG8gdGVhY2ggYXQuIFJvZGVwaCBoYXMgYSBncmVhdCBhbmQgaW52b2x2ZWQgd29tZW4ncyBsZWFndWUsIHdoaWNoIHdhcyB2ZXJ5IGltcG9ydGFudCB0byBtZS4KMjEpIEh1bWFuIG1pbGsgY29udGFpbnMgY29uc2lkZXJhYmxlIGNvbmNlbnRyYXRpb25zIG9mIGJvdGggREhBIGFuZCBBTEEgW2ZsYXhzZWVkIG9pbCwgZXRjLl0uCk9uZSBnaXJsIHVzZWQgYW4gZXh0cmEgZG9vciBoZXIgZmFtaWx5IGhhZC4gSSBrbmV3IGEgZ3V5IHdobyBoYWQgYSBib29rIG9yIGV2ZW4gdGhlIGNyYXppZXN0IGd1eSB0aGF0IGdvdCBpdCBwYWludGVkIG9uIHRoZSBzaWRlIG9mIGhpcyBob3VzZS4uIApDb25ncmF0cyBhZ2FpbiwgeW91IHNob3VsZCBiZSBzdXBlciBwcm91ZCBvZiB5b3Vyc2VsZiEhCjQuKSBObyBSYWNpc20uIE5vIGhhdGUgc3BlZWNoLiBObyBob21vcGhvYmlhL3RyYW5zcGhvYmlhLiBObyBzZXhpc20vbWlzb2d5bnkuIE5vIGJsYWNrIGZhdGhlcnMgcG9zdHMgYW5kIHNpbWlsYXIgbWVhbiBzcGlyaXRlZCB0aGluZ3MuCkRyLiAKVGhlIGF2ZXJhZ2UgY2hhbmdlIGluIGhhYml0dWFsIHByb3RlaW4gaW50YWtlIGluIHN0dWRpZXMgc2hvd2luZyBoaWdoZXIgcHJvdGVpbiB0byBiZSBtb3JlIGVmZmVjdGl2ZSB0aGFuIGNvbnRyb2wgd2FzICs1OS41JSBjb21wYXJlZCB0byArNi41JSB3aGVuIGFkZGl0aW9uYWwgcHJvdGVpbiB3YXMgbm8gbW9yZSBlZmZlY3RpdmUgdGhhbiBjb250cm9sLgpJIGFtIHF1aWNrIHRvIHRoaW5rIGNyaXRpY2FsbHkgYWJvdXQgY2hhbGxlbmdlcywgYW5kIHNwZWNpZmljYWxseSBjb25zaWRlcmluZyBwb3NzaWJsZSBleHBsYW5hdGlvbnMgZm9yIHdoeSBvdGhlciBodW1hbnMgcmVzcG9uZC9yZWFjdC9iZWhhdmUgdGhlIHdheSB0aGV5IGRvLiAKSSB3YW50IHRvIGJlbGlldmUgdGhlc2UgdGhpbmdzLiBJZiB3ZSByZWFsbHkganVzdCBkZWFsaW5nIHdpdGggYSBidW5jaCBvZiBudXRjYXNlcywgdGhlbiBhbGwgd2UgbmVlZCB0byBkbyBpcyBjb252aW5jZSByZWFzb25hYmxlIEdPUCBsZWFkZXJzIHRvIHN0b3AgbW9iaWxpemluZyB0aGVzZSBwZW9wbGUgdG8gd2luIGVsZWN0aW9ucy4gQSBiaWcgdGFzaywgSSBhZG1pdCwgYnV0IHN0aWxsLCBHT1AgbGVhZGVycyBhcmUgbW90aXZhdGVkIGJ5ICJyZWFzb25hYmxlIiB0aGluZ3MsIGxpa2UgcG93ZXIgYW5kIG1vbmV5LCByaWdodD8gQW5kIHVsdGltYXRlbHksIGlmIGJpZyBtb25leSBpbiB0aGUgZm9ybSBvZiBjb3Jwb3JhdGUgaW50ZXJlc3RzIGRyaWVzIHVwIGZvciB0aG9zZSBHT1AgbGVhZGVycyB3aG8gd2hpcCB1cCB0aGUgdmlsbGFnZSBpZGlvdHMsIHRoZW4gdGhleSBzdG9wLi4gCkhlIHdhcyB0aGUgcHJvdWQgR3JhbmRwYSBvZiBTaGFubm9uIEtleXMgKEdhcmV0aCBTaW1vbnMpIG9mIEVuZ2xhbmQsIEx5bmRzYXkgKExDRFIgQ2hyaXMpIEJvbHRvbiBvZiBDb2xvcmFkbywgVVNBOyBMYXVyZW4gS2V5cyBvZiBKYXBhbjsgQWltZWUgTGFuZ21haWQgQ2FsaWZvcm5pYSwgVVNBOyBhbmQgU2FyYWggKERhbikgR2xpY2ttYW4gb2YgT047IGFuZCBHcmVhdCBHcmFuZHBhIG9mIEV2aWUgQm9sdG9uIGFuZCBBbm5hYmVsIEdsaWNrbWFuLiBFbGRlc3Qgc29uIG9mIHRoZSBsYXRlIFdlc2xleSBhbmQgQ2FycmllIExvdWlzZSBMYW5nbWFpZCwgYW5kIGJyb3RoZXIgb2YgSmFjayAoUnV0aCkgTGFuZ21haWQgb2YgT3NoYXdhIGFuZCBSb3NzIChMeW5uKSBMYW5nbWFpZCBvZiBLZWxvd25hLCBCQy4gCkphbiBoZWVmdCBkZSBwZXJmZWN0ZSBtZW5zZW4gcm9uZCB6aWNoIGhlZW4uIEllZGVyZWVuIGhlZWZ0IHppam4gc3BlY2lhbGl0ZWl0ZW4gZW4gaGVlZnQgZGllIG9vayB0ZW4gdm9sbGUgZ2VicnVpa3Qgb20gbWFhciAxIGRpbmcgdGUgYmVyZWlrZW4uIApUaGlzIGlzbiBwcm9wYWdhbmRhLCBzaGUgbGl0ZXJhbGx5IHNhaWQgdGhhdCwgSSBzYWlkIG5vdGhpbmcgYWJvdXQgV1dJSUkgb3Igd2hhdCBoZXIgcGxhbnMgYXJlLCBvciBhbnl0aGluZyBhYm91dCB0aGUgbWVkaWEsIGp1c3QgdGhhdCBzaGUgc3RhdGVkIGhlcnNlbGYgdGhhdCBzaGUgd2FudHMgdG8gZ28gdG8gd2FyIHdpdGggUnVzc2lhLiAKWWV0IGhlIGFwcGFyZW50bHkgcHVsbHMgb2ZmIFVTIHRyb29wcyBiZWZvcmUgSXJhbiBkb2VzIGl0LiBIZSB3b3VsZCBoYXZlIGdyZWF0ZXIgbGV2ZXJhZ2UgaW4gZmF2b3Igb2YgSXNyYWVsIGFuZCBhZ2FpbnN0IElyYW4gaWYgaGUgc3RheWVkIGxvbmdlciBhbmQgc3Ryb25nZXIgaW4gU3lyaWEuIFRoYXQgd291bGQgYmUgbW9yZSBwb3B1bGFyIGRlY2lzaW9uIGFtb25nIGludGVybmF0aW9uYWwgYXVkaWVuY2UgdGhhbiBwcm92b2NhdGl2ZSBhbmQgdW5wb3B1bGFyIGFjdHMgb2YgSmVydXNhbGVtIHJlY29nbml0aW9uIGFuZCBzYW5jdGlvbnMuIApEYWlseSBkb3dubG9hZHMgaGF2ZSBkb3VibGVkIGFuZCBhbiBBbmRyb2lkIHZlcnNpb24gaGFzIGJlZW4gcmVsZWFzZWQuIFByb2R1Y3QgaXMgYSBsb3QgYmV0dGVyLiAKVGhpcyBpcyBhbHNvIGEgc2lnbiB0aGF0IHRoZSBjaGlja2VuIGlzIGNvb2tlZCBwcm9wZXJseS4gCllvdSB0d28gd2FudCB2ZXJ5IGRpZmZlcmVudCB0aGluZ3MsIGl0J3MgdW5mYWlyIHRvIGFzayBoaW0gdG8gZ2l2ZSB1cCBoaXMgZHJlYW0gdG8gaGF2ZSBjaGlsZHJlbiBqdXN0IGxpa2UgaXQncyB1bmZhaXIgZm9yIGhpbSB0byBhc2sgdGhhdCBvZiB5b3Ugd2hlbiB5b3UgZG9uJ3Qgd2FudCB0by4gSXQncyBoYXJkLCBidXQgaXQncyB0aGUgb25seSB3YXkgeW91IHdpbGwgYmUgaGFwcHkuIApJdCBjbGVhcmx5IHNheXMgdGhlIGV4YWN0IG9wcG9zaXRlLkJUVywgaW4gdGhlIHN0dWR5IHRoZXkgdXNlZCBJIGxhdWdoIGVhc2lseSBhbmQgSSBhbSBhIGNoZWVyZnVsLCBoaWdoIHNwaXJpdGVkIHBlcnNvbiBhcyBzdXJ2ZXkgaXRlbXMgdG8gbWVhc3VyZSBwb3NpdGl2ZSBhZmZlY3QsIHdoaWNoIHdhcyBpbnZlcnNlbHkgcmVsYXRlZCB0byBkZXByZXNzaW9uIGFuZCBzb2NpYWwgYW54aWV0eS5JZiB5b3Ugd2FudCB0byBQTSBtZSB5b3VyIGVtYWlsIEkgY2FuIHNlbmQgeW91IHRoZSBQREYuRzBMRExVNVQgIDEgcG9pbnQgIHN1Ym1pdHRlZCA1IG1vbnRocyBhZ29JIGFncmVlIHRoYXQgaXQgdmVyeSBzZW5zaWJsZSB0byBzZWVrIGNvdW5zZWxpbmcuIApEak91cm9ib3JvcyB1CkVkaXQ6IG9uIGEgc2lkZSBub3RlIEkgdXNlZCB0byB3YXRjaCBCb2IgbGl2ZSB3aGVuIEkgd2FzIGEgeW91bmcgYWR1bHQgKHllcywgSSBhbSBvbGQgYW5kIEkgc2F3IGhpcyB2ZXJ5IGZpcnN0IHNob3cpIEkgYm91Z2h0IGEgY2FudmFzLCBzb21lIHBhaW50cyAobm90IGhpcywgaGUgZGlkbiBoYXZlIHRoZW0gdGhlbikgYW5kIGEgZmFuIGFuZCBhIGJpZyBwYWludCBicnVzaC4gCkF1Y2ggbmljaHQgd2lya2xpY2ggYmVnZWhydCBzaW5kIEJsdW1lbiBiZWkgZGVuIG1laXN0ZW4gSGVycmVuLiAKVGhleSBhcmUgYWxsIGZyb20gQmFsa2FucywgdGhleSBsb3N0IHRoZWlyIGhvbWVzLCB0aGVpciBmYW1pbGllcyBhcmUgZXhwZWxsZWQsIHRoZWlyIHNpc3RlcnMgYXJlIHJhcGVkIGFuZCB0aGVpciBmcmllbmRzIGFyZSBraWxsZWQuIApJZiB5b3Ugd2FudCB0byB0cmFpbiB5b3Vyc2VsZiBmb3IgZnJpZW5kbHkgaG9tZSBnYW1lcywgdGhlbiBnbyBmb3IgaXQuIApJIGFtIG5vdCBhIHRheCBwcm9mZXNzaW9uYWwgYWx0aG91Z2ggSSBkbyB3b3JrIGluIGFjY291bnRpbmcgc28gSSBhbSBub3Qgc3VyZSBob3cgZGlzYWJpbGl0eSBpcyB0cmVhdGVkLCBidXQgSSBkbyBub3QgYmVsaWV2ZSBpdCBpcyB0cmVhdGVkIGFzIGluY29tZS4gU28gbGlrZWx5IHlvdSB3aWxsIGJlIGluIHRoZSBsb3dlciBjYXBpdGFsIGdhaW5zIGJyYWNrZXQgaWYgeW91IGhhdmUgbm8gb3RoZXIgaW5jb21lLi4gCkFsdGhvdWdoIHdlIHdpbGwgYXV0b21hdGljYWxseSBwZXJtIGJhbiBpZiB3ZSBmZWVsIHRoZSBuZWVkLi4gCk15IGtpZHMgYXJlIHN0aWxsIGxpdHRsZSBhbmQgdGhpbmsgSSdtIHRoZSBjb29sZXN0LCBidXQgSSdtIGRyZWFkaW5nIHRoZSBkYXkgdGhleSdyZSB5b3VyIGFnZSBhbmQgbm8gbG9uZ2VyIHRoaW5rIEknbSBjb29sLiAKV2hlcmVhcyB0aGUgZmVkZXJhbCB0YXggcmVmdW5kIGlzIGxpdGVyYWxseSBhIGd1YXJhbnRlZWQgZG9sbGFyIHNpZ24uLiAKTG93ZSdzIGNsb3NpbmcgMzEgQ2FuYWRpYW4gc3RvcmVzClRoZSBBbWVyaWNhbiBUYXhwYXllciBSZWxpZWYgQWN0IG9mIDIwMTIsIHBhc3NlZCBhdCB0aGUgMTF0aGhvdXIgKGluIGZhY3QsIGl0IHdhcyBwYXNzZWQgYWZ0ZXIgdGhlIG9mZmljaWFsIGRlYWRsaW5lIG9mIERlY2VtYmVyIDMxLCAyMDEyICAgbmVhciBtaWRuaWdodCBvbiBKYW51YXJ5IDEsIDIwMTMpLCBpcyBhIHNob3J0IHRlcm0gZml4IHRvIHRoZSBzZWxmIGltcG9zZWQgZmlzY2FsIGNyaXNpcy4gVGhlIGxhc3QgbWludXRlIGFncmVlbWVudCBzaW1wbHkgcG9zdHBvbmVkIHRoZSBkYXkocykgb2YgcmVja29uaW5nIGZvciBzZXZlcmFsIG1vbnRocy4gTm9yIHdhcyB0aGUgcmVjZW50IGNsaWZmaGFuZ2VyIHVucHJlY2VkZW50ZWQuIApGdWxsIFN0b3J5LiAKQmVzaWRlcywgdGhlIDUgZm9vdCAxMCByZWFsaXR5IHN0YXIgaGFzIGxvbmcgc2luY2UgYnJva2VuIHRoZSB5byB5byBjeWNsaW5nIG9mIGhlciB5b3V0aC4gCkl0IGRlcGVuZHMgb24gYSBsb3Qgb2YgdGhpbmdzLiBDZXJ0YWluIHRvdXJuYW1lbnRzIGZvciBleGFtcGxlIGdpdmUgYSBzZXQgYW1vdW50IHRvIGVhY2ggcGxheWVyIChpbiBzb21lIGl0J3Mgb25seSBsaWtlICQxMDAwLCB3aGlsZSBpbiBzb21lIG90aGVyIGl0IGNhbiBnbyB1cCB0byAkMTAuMDAwIGluIGNoaXBzKS4gSW4gY2FzaCBnYW1lcyB5b3UgY2FuIGRldGVybWluZSBob3cgbWFueSBjaGlwcyBkbyB5b3Ugd2FudCB0byBidXkgaW4gYmVmb3JlIHN0YXJ0aW5nIHRvIHBsYXkgZXRjLiBJbiBzb21lIHRhYmxlcyB5b3UgY291bGQgc3RhcnQgd2l0aCBsaWtlIDVrNDBrIHdoaWxlIHNvbWUgb3RoZXJzIGFsbG93IGJpZ2dlciBidXkgaW5zIHJhbmdpbmcgZnJvbSBsaWtlIDEwMGsxbWlsIChqdXN0IHRocm93aW5nIHJhbmRvbSBleGFtcGxlcykuIFNvIHllYWgsIHRoZXJlJ3Mgbm8gc2V0IGFtb3VudC4gSXQgZGVwZW5kcyBvbiB0aGUgdHlwZSBvZiBwb2tlciB5b3UncmUgcGxheWluZyBhbmQgaXQncyBjdXJyZW50IHJ1bGVzLiAoRnVsbCBBbnN3ZXIpCllldCwgdGhlcmUgYXJlIGEgbnVtYmVyIG9mIG1ham9yIHJlc2VhcmNoIHN0dWRpZXMgd2hpY2ggdXNlIGhvcnJpYmx5IHBvb3IgbWV0aG9kcyBvZiBkaWFnbm9zaXMuIApOaWNob2xhcyBCb3VyYmFraSBpc24gb25lIG1hdGhlbWF0aWNpYW4sIGJ1dCBhbiB1bmRlcmdyb3VuZCBzZWNyZXQgc29jaWV0eSBvZiBwcm9taW5lbnQgbWF0aGVtYXRpY2lhbnMgd2hvIHB1Ymxpc2hlZCB1bmRlciB0aGlzIHBzZXVkb255bSwgd2hvIGhhZCByYWRpY2FsIHZpZXdzIGFib3V0IG1hdGggYW5kIHdlcmUgYSBtYWpvciByZWFzb24gd2h5IG1hdGggaXMgYSBmb3JtYWwvcmlnb3JvdXMgYXMgaXQgaXMgdG9kYXkuCjIgKSBUaGUgbWlsaXRhcnkgaGlzdG9yeSBvZiB0aGUgd2FyLCBtb3JlIHBhcnRpY3VsYXJseSB0aGUgYnVuZ2xpbmcgYnkgZ2VuZXJhbGx5IGluZXB0IGdlbmVyYWxzIHdob3NlIGV2ZXJ5IGVycm9yIGNvc3QgdGhvdXNhbmRzIG9mIG1pbGl0YXJ5IGFuZCBodW1hbiBsaXZlcywgYSBmYWN0IHRoYXQgYXBwZWFyZWQgbm90IHRvIGNvbmNlcm4gdGhlbSB0b28gbXVjaC4KNykgU3Vic3RhbmNlIFAgaXMgYSBub2NpY2VwdGl2ZSAocGFpbikgbmV1cm90cmFuc21pdHRlciBhbmQgcGFpbiBtZWRpYXRvci4gVGhlcmUgaXMgYW4gYXNzb2NpYXRpb24gYmV0d2VlbiBzdWJzdGFuY2UgUCBhbmQgZGlzYyBkZWdlbmVyYXRpb24uICJJdCBpcyBub3Rld29ydGh5IHRoYXQgdGhlc2UgbmV1cmFsIGVsZW1lbnRzIGRpZCBub3Qgb2NjdXIgaW4gYW55IG9mIHRoZSBjb250cm9sIGRpc2NzIGJ1dCB3ZXJlIGZvdW5kIGNvbW1vbmx5IGluIGludGVydmVydGVicmFsIGRpc2NzIGZyb20gcGFpbiBsZXZlbHMuIiAod293KQpCaWVuIGRhdmFudGFnZSBkZXB1aXMgcXVlIGonYWkgY2hhbmcgZGUgdm9pZS4gCldoaWNoIEkgZmVsdCBvZGQgYmVjYXVzZSB0aGUgc3RhbmRhcmQgb2YgbGl2aW5nIGlzbiB2ZXJ5IGhpZ2ggaW4gbXkgY2l0eS4gCjIpIEkgVFBLZWQgdGhlIGVudGlyZSBwYXJ0eSB3aXRoIHRoZSBmaXJzdCBkdW5nZW9uIEkgZGVzaWduZWQuIEFwcGFyZW50bHkgR2lhbnRzIGFyZSBub3Qgc29tZXRoaW5nIHlvdSB0aHJvdyBhdCAxc3QgbGV2ZWwgY2hhcmFjdGVycy4gU28sIHN0YXJ0IHdpdGggd2Vha2VyIGNvbWJhdHMgdW50aWwgeW91IGdldCBhIGZlZWwgZm9yIGhvdyB0b3VnaCB0aGUgcGFydHkgaXMsIGFuZCB0aGVuIHlvdSBjYW4gbWFrZSB0aGUgY29tYmF0cyBoYXJkZXIgb25jZSB5b3UgbW9yZSBjb21mb3J0YWJsZSB3aXRoIHdoYXQgdGhlIHBhcnR5IGNhbiBoYW5kbGUuLiAKWW91IGp1c3QgaGF2ZSB0byB1bmRlcnN0YW5kIHRoYXQgd2hlbiBpdCBjb21lcyB0byBpbnRlcnBlcnNvbmFsIHJlbGF0aW9uc2hpcHMgYW5kIChwdWJsaWMgYW5kIHByaXZhdGUpIHNvY2lhbCBpbnRlcmFjdGlvbnMsIEtvcmVhbnMgQVJFIGRpZmZlcmVudCB0aGFuIHlvdSwgZXNwZWNpYWxseSBvbGRlciBmb2xrcy4gVGhleSBnb29kIHBlb3BsZSB3aXRoIGEgZGVlcCwgZHluYW1pYyBjdWx0dXJlIGFuZCBiZWF1dGlmdWwgbGFuZ3VhZ2UgdGhhdCBoYXMgYSBsb3QgdG8gdGVhY2ggeW91IGFib3V0IHRoZSB3b3JsZCwgYnV0IHRoZXkgZG9uIHVuZGVyc3RhbmQgeW91ciBwZXJzcGVjdGl2ZSBhdCBhbGwuIFRoZSBjb250ZXh0IHRoZXkgZXhpc3QgaW4gaXMgZGlmZmVyZW50IHRoYW4geW91cnMuIEl0IGlzIG5vdCBncmVhdGVyIG9yIGxlc3NlciB0aGFuIHlvdXIgd2VzdGVybiBwZXJzcGVjdGl2ZSwgaXQgaXMgc2ltcGx5IGRpZmZlcmVudC4KIkNsaW5pY2FsIHN0dWRpZXMgb24gZGlldGFyeSBzdXBwbGVtZW50YXRpb24gd2l0aCBuIDMgKG9tZWdhIDMpIHBvbHl1bnNhdHVyYXRlZCBmYXR0eSBhY2lkcyAoUFVGQXMpLCBzdWNoIGFzIHRob3NlIHByZXNlbnQgaW4gZmlzaCBvaWxzLCBoYXZlIGRlbW9uc3RyYXRlZCBtb2R1bGF0aW9uIG9mIGluZmxhbW1hdG9yeSBzeW1wdG9tcyBpbnZvbHZlZCBpbiB0aGUgcGF0aG9nZW5lc2lzIG9mIGFydGhyaXRpcyAuIk4gMyBQVUZBcyAoYnV0IG5vdCBvdGhlciBjbGFzc2VzIG9mIGZhdHR5IGFjaWRzKSBjYXVzZXMgYW4gYWJyb2dhdGlvbiBvZiBjeXRva2luZSBpbmR1Y2VkIGluZmxhbW1hdGlvbiBtZWRpYXRvcnMgYW5kIGRlZ3JhZGF0aXZlIGVuenltZXMuCkVtcGxveWVycyBhcmUgdGFraW5nIGFkdmFudGFnZSBvZiBvbGRlciB3b3JrZXJzIGJlY2F1c2UgdGhleSBjYW4uIFdoeSBnaXZlIHRoZSBqb2IgdG8gdGhlIHBlcnNvbiB3aXRoIG5vIGV4cGVyaWVuY2Ugd2hlbiB0aGV5IGNhbiBoaXJlIHNvbWUgZGVzcGVyYXRlIHBlcnNvbiB3aG8gY2FuIGhpdCB0aGUgZ3JvdW5kIHJ1bm5pbmcgZm9yIHRoZSBzYW1lIHByaWNlPwpUaGVuIHdlbnQgYSBzdGVwIGZ1cnRoZXIgYW5kIHNhaWQgeW91IGdvdCBkcnVuayBhbmQgZGlkIGl0IGFzIHJldmVuZ2UgYmVjYXVzZSBzaGUgZ290IGRydW5rIHRoYXQgb25lIHRpbWUuLiAKQWxzbyBpZiB5b3UncmUgaW50byB0aGUgaW50ZXJuZXQgdGhpbmcsIHlvdSBjYW4gcnVuIGEgQmFubmVyIEFkIGFkdmVydGlzZW1lbnQgb24gcmVsZXZhbnQgd2Vic2l0ZXMuIEtlZXAgaW4gbWluZCB5b3VyIG1hcmtldGluZyBlZmZvcnRzIHNob3VsZCBiZSBsb2NhbGl6ZWQsIG1vc3QgYmlrZXJzIGFyZSBvbmx5IGxvb2tpbmcgZm9yIGEgZGF5IGV2ZW50IGFuZCB3aWxsIG5vdCB0cmF2ZWwgZmFyIGZvciBhIHBva2VyIHJ1bi4uIApBbmQgZHVlIHRvIHRoZSBoYXJhc3NpbmcgbmF0dXJlIG9mIHRoZSBiYW5uZWQgc3VicmVkZGl0cywgaXQgY291bGQgYmUgcmVhc29uYWJseSBhcmd1ZWQgdGhhdCB0aGV5IGNyb3NzZWQgdGhpcyBsaW5lLi4gCkhvdyBkbyB5b3UgZGVsZXRlIHBsYXllcnMgaW4gZ292ZXJub3Igb2YgcG9rZXIgMiBwcmVtaXVtIGVkaXRpb24KVGhlU2lsZW50V2F5IHUKRGVwZW5kcyB3aGF0IHlvdSBtZWFuIGJ5ICJiYWNrdXAiIGFuZCB3aGVyZSB5b3VyIHRocmVzaG9sZCBvZiBzYWZldHkgaXMuClRoZSBuZW9uYXRhbCBpbnRlbnNpdmUgY2FyZSB1bml0IGF0IEFsbCBDaGlsZHJlbidzIEhvc3BpdGFsIHdhcyBhIHdvcmxkIG91dCBvZiBzY2llbmNlIGZpY3Rpb24uIEJlZm9yZSwgdGhlcmUgaGFkIGJlZW4gb25seSBteSBiYWJ5IGluIG15IGJvZHkuIE5vdyB3ZSBmb3VuZCBvdXJzZWx2ZXMgaW4gYSBtdWx0aW1pbGxpb24gZG9sbGFyIGFydGlmaWNpYWwgd29tYi4gCklmIHlvdSBkb24gbWluZCwgZG8geW91IGhhdmUgdGhvdWdodHMgaWYgd2Ugd2VyZSBkZWVwZXIgc3RhY2tlZCAgIGxldCBzYXkgSSBoYWQgZG91YmxlIHRoYXQgJDgwMCBhdCB0aGUgc3RhcnQgb2YgdGhlIGhhbmQuIEFmdGVyIEkgY2FsbCBoaXMgJDc1IGxlYWQsIEkgd291bGQgaGF2ZSAkNzAwIGxlZnQgYW5kIEkgcmFpc2UgdG8gJDIwMCBsZXQgc2F5LiBUaGF0IGxlYXZlcyBtZSAkNTAwIHdpdGggYSBwb3Qgc2l6ZSBvZiAkNDgwIGJlZm9yZSBoZSBjYWxscy4gClNvIGlmIHlvdSBjYW4ndCBkbyBpdCBmb3IgeW91cnNlbGYsIHRyeSBhbmQgZG8gaXQgZm9yIHlvdXIgZmFtaWx5LiBHZXQgaGVhbHRoaWVyIGZvciB0aGVtIGZvciBlbW90aW9uYWwgYW5kIGZpbmFuY2lhbCByZWFzb25zIGZvciB0aGUgbG9uZyBoYXVsLiAKU2l0dGluZyBhdCBteSBzaGl0dHkgZGVzayBjaGFpciwgSSBncmFiYmVkIG15IGFuZCBpbnN0ZWFkIG9mIHBpY2tpbmcgdXAgd2hlcmUgSSBsZWZ0IG9mZiwgSSB3YXMganVzdCBmbGlwcGluZyB0aHJvdWdoIHRoZSBwYWdlcy4gTW9zdCBiYWJpZXMuIEFuZCBhIG51bWJlci4gSSByZW1lbWJlciBub3Qgc2VlaW5nIHRoZSBudW1iZXIgYXMgSSByZWFkIGl0IGJlY2F1c2UgZXZlcnl0aGluZyB3ZW50IGRhcmsgYXQgdGhlIHRpbWUuIEkgZG9uIHJlbWVtYmVyIHdoYXQgdGhlIHJlY29yZCB3YXMgZm9yICAgbW9zdCBiYWJpZXMgc29tZXRoaW5nLiBJIHJlbWVtYmVyIGl0IHNvIHdlbGwgdXAgdG8gdGhhdCBtb21lbnQgICBJIGNhbiBzbWVsbCBhbmQgdGFzdGUgdGhlIG1pbnV0ZXMgbGVhZGluZyB1cCB0byBpdC4gSSBjb3VsZCBpbW1lcnNlIHlvdSBpbiB0aGF0IG1vbWVudCBhbmQgeW91IHdvdWxkbiBrbm93IHRoYXQgeW91IHN3aXRjaGVkIHBsYWNlcywgd2l0aCBob3cgZnVja2luZyBzdHJvbmcgdGhpcyBtb21lbnQgaXMuIEkgd2FzIHNvIHBzeWNoZWQgdGhhdCBub3Qgb25seSB3YXMgSSBnb2luZyB0byBiZSBhIHJlY29yZCBob2xkZXIsIGJ1dCBJIGdldCB0byBkbyBpdCBtYWtpbmcgYmFiaWVzLiBCdXQgSSBjYW4gdGVsbCB5b3Ugd2hhdCBpdCB3YXMuIEkgYmVlbiBmbGlwcGluZyB0aHJvdWdoIHRoZSBib29rIHdoaWxlIGxpc3RlbmluZyB0byBteSB2b2ljZW1haWwuIEEgcmVhbGx5IGNsb3NlIGZyaWVuZCBoYWQganVzdCBiZWVuIGtpbGxlZCBieSBhIGRydW5rIGRyaXZlciwgYW5kIG1lICAgcmVhZHkgdG8gZnVjayBteSB3YXkgdG8gYSB3b3JsZCByZWNvcmQgSSBsaXN0ZW5pbmcgdG8gaXQgb25jZSwgbGlrZSBJIGhhdmUgdG8gcmVwbGF5IHRoaXMgSSBtdXN0IGJlIGNyYXp5IGhlIG11c3QgaGF2ZSBzYWlkIHNoZSBOT1QgZGVhZCBhbmQgdGhlIHNlY29uZCB0aW1lIGFyb3VuZCwgYWxsIEkgaGVhciBpcyB0aGUga2lkIHdhaWxpbmcgaW4gdGhlIGJhY2tncm91bmQuIEFuZCBhIHNjcmVhbWluZyBiYWJ5LiBIZXIgYnJvdGhlci4gSGVyIHNpc3Rlci4gRlVDSyBTSFVUIFVQIEkgTkVFRCBUTyBIRUFSIGRlYWQgV2hlZWVld3d3d3d3d3cuIEkgc3BpcmFsZWQgcmVhbGx5IGZhc3QsIHJlYWxseSBmYXIuIFJlYWwsIGFjdXRlLCBlbW90aW9uYWwgdHJhdW1hLCBhbmQgbm90IHRoZSBiZWNhdXNlIHdlIGJyb2tlIHVwIHNoaXQgSSBzcGVudCBNWSBXSE9MRSBMSUZFIHRoaW5raW5nIHdhcyBteSB0cmFpbmluZyBmb3Igd2hhdCBJIGhhdmUgdG8gZ28gb3V0IGludG8gdGhlIHdvcmxkIGFuZCBmYWNlIEVWRVJZIEZVQ0tJTkcgREFZLgpBZ2FpbiwgaGUgcmVxdWVzdGVkIHRoZSBjb25zdHJ1Y3Rpb24gb2YgYW4gYXJlbmEgaW4gZG93bnRvd24gT3R0YXdhIHdpdGggZnJlZSByZW50IGZvciAzMCB5ZWFycy4gSW50ZXJlc3RpbmcgY2hvaWNlIG9mIHdvcmQgZm9yIHBhcnRuZXJzIHdobyBoYXZlbiBnb3R0ZW4gYWxvbmcgZm9yIHR3byB5ZWFycywgYnkgbW9zdCBhY2NvdW50cyBkb24gcGFydGljdWxhcmx5IGxpa2UgZWFjaCBvdGhlciBhbmQgYXJlIGRlbW9uc3RyYXRpbmcgdGhlaXIgZGlzcGxlYXN1cmUgd2l0aCAkMS43IGJpbGxpb24gaW4gY2xhaW1zLiBNZWxueWsgYWxsZWdlZCBsZXR0ZXIgZG9lcyBoYXZlIHRoYXQga2lkZGluZyEgYW5kIGdldCBkb25lIGtpbmQgb2YgZmVlbCwgYXMgdGhvdWdoIGhpcyAkNzAwIG1pbGxpb24gbGF3c3VpdCB3YXMganVzdCBhIG5lZ290aWF0aW5nIHBsb3kuIApJIHdhcyB3b3JzaGlwaW5nIHByYWlzaW5nIExvcmQgQWxtaWdodHkgR29kIG9uIFNhdHVyZGF5IG5pZ2h0LCBEZWNlbWJlciAxOXRoIDIwMTAuIEFtLCB3aGVuIEkgd2FzIGNvbXBsZXRlbHkgc29ha2VkIGluIHRoZSBwcmFpc2VzIHRvIEplaG92YWggc2F3IGEgdmlzaW9uIGZ1dHVyZSBjYXRhc3Ryb3BoZSBkZXZhc3RhdGlvbiB0aGF0IG91ciB3aWxsIGZhY2UuIEkgbGlmdGVkIHRoZSB0b3AgaGFsZiBvZiB0aGUgYnJlYWQsIGl0IGlzIHdpdGggYmxhY2sgc3BvdHMgZnVuZ3VzLiAKMSkgSSBkb24gdGhpbmsgYSBzY3JpcHQgZm9yIFZJSUkgd2FzIGV2ZXIgd3JpdHRlbiwganVzdCBhIHN0b3J5IGRyYWZ0IHByb2JhYmx5LiBSaWRsZXkgc2F5cyAiSSBiZWxpZXZlIHRoZXJlIHdhcyBzb21lIHNvcnQgb2YgZ2VuZXJhbCBjb25zZW5zdXMgb24gdGhlIG1haW4gbGluZXMgb2YgdGhlIHRyaWxvZ3kiIG1lYW5pbmcgdGhlIGJyb2FkIHN0b3J5IHdhcyB0aGVyZSBhbmQgdGhlcmUgd2FzIGNvbnNlbnN1cyBvbiB3aGF0IHRoYXQgYnJvYWQgc3Rvcnkgc2hvdWxkIGJlLiAKQW5kIGZvciB0aG9zZSB3aG8gZG9uJ3QgZG8gd2VsbCBpbiBzY2hvb2wsIHRoZXkgYXJlbid0IHdhbGxvd2luZyBpbiBzZWxmIHBpdHkgdGhpbmtpbmcgIm9oIG1hbi4gSSBlbmRlZCB1cCBJIGdhbmcuIEkgd2lzaCBJIHdlbnQgdG8gY29sbGVnZS4iIEJ5IHRoZSB0aW1lIHRoZXkncmUgaW4gdGhlcmUgbG9uZyBlbm91Z2ggdGhleSdyZSB0aGlua2luZyAiSSdtIGluIGEgZ2FuZyEgSSdtIHdpdGggdGhlbSEgSSdtIHNvbWVib2R5IG5vdyEiIFRoZXkgZ2V0IG1vcmUgcmVzcGVjdCBmcm9tIGJlaW5nIGluIGEgZ2FuZyB0aGFuIGlmIHRoZXkgd29ya2VkIGEgOSA1IGpvYi4gTm93IHRoZXkganVzdCBzZWUgdGhpcyBhcyBob3cgdGhlIHdvcmxkIHdvcmtzLiBEb2Vzbid0IG1hdHRlciBpZiB0aGV5IGNvdWxkIGdldCBzaG90IGFuZCBraWxsZWQuIFRoZXknbGwganVzdCBjYXJyeSBhIGd1biB0aGVtc2VsdmVzLCBidXQgbm93IHRoZXkgaGF2ZSB0aGVpciBib3lzIHdhdGNoaW5nIHRoZWlyIGJhY2suCklmIHlvdSBhcm91bmQgMzAsIHNvIGFtIEksIGFuZCBhdCB0aGlzIHBvaW50IGluIG15IGxpZmUgb3IgYW55IG9mIG15IGZyaWVuZHMgbGl2ZXMsIGRhdGluZyBzb21lb25lIHdobyBoYWQgbmV2ZXIgYmVlbiBpbiBhIHNlcmlvdXMgcmVsYXRpb25zaGlwIHdvdWxkIGJlIGEgZGVhbCBicmVha2VyLiAKTWFsZ3IgdG91dGVzIGNlcyBycHJvYmF0aW9ucywgbGEgcHJhdGlxdWUgY29uc2lzdGFudCAgamV0ZXIgZGVzIGhlcmJlcyBwYXIgZGVzc3VzIGxlIGZldSwgZW4gY3VlaWxsaXIgbGUgbWlkaSwgb3UgIGpldW4sIGVuIHBvcnRlciBzdXIgc29pICg2KSBuZSBjZXNzYSBwYXMsIGJpZW4gYXUgY29udHJhaXJlLCBlbGxlIHJlZG91YmxhLCBjZSBxdWkgYW1lbmEgbCBkICBvcmRvbm5lciBlbiAxNjU2IHF1ZSBjZXMgZmV1eCBzb2llbnQgZHNvcm1haXMgZW1icmFzcyBwYXIgZGVzIGRpZ25pdGFpcmVzIGVjY2xzaWFzdGlxdWVzLiBDZXBlbmRhbnQsIG1hbGdyIGNldCBlbmNhZHJlbWVudCBkdSByaXRlIHBhciBsJ2dsaXNlLCBjZXMgcHJhdGlxdWVzIGxpZXMgYXUgZmV1IG5lIGZ1cmVudCBwYXMgYWJhbmRvbm5lcyBuaSBtbWUgY2VsbGVzIGNvbnNpc3RhbnQgIHNlIHJlbmRyZSBhdXggc291cmNlcyBtaXJhY3VsZXVzZXMgZHVyYW50IGxhIG51aXQgZGUgbGEgU2FpbnQgSmVhbi4uIApBbHNvLCBpdCB3YXMgbW9yZSB0aGUgd2F5IGhvdyBoZSByZXNwb25kZWQgdG8gdGhlIHBlb3BsZSByZXBseWluZyB0byBoaW0gYW5kIGFjdGluZyBsaWtlIGFuIGVsaXRpc3QgZG91Y2hlLiBJZiBoZSBkb2VzbiBsaWtlIHRoZSB3YXkgL3IvYW5pbWUgd29ya3MgdGhlbiBoZSBjYW4gbWFrZSBhIHRocmVhZCBhdCAvci9tZXRhYW5pbWUuIEhlY2ssIGhlIGEgbW9kLCBoZSBjYW4gdGFsayB3aXRoIHRoZSBtb2QgdGVhbSBhYm91dCBlbmZvcmNpbmcgY2VydGFpbiBydWxlcy4uIApIb3dldmVyLCBtb3N0IG9mIHVzIGRvIG5vdCBoYXZlIHRoaXMgc2tpbGwgb2YgY29udHJvbGxpbmcgb3VyIHJlYWN0aW9ucyB0byBldmVudHMgYW5kIHRoaW5ncyBzYWlkLiBUaHVzLCBrbm93aW5nIGhvdyB0byByZWFkIGEgcGVyc29uJ3MgZW1vdGlvbnMgYmFzZWQgb24gaGlzIG9yIGhlciBib2R5IGxhbmd1YWdlIGFuZCBnZXN0dXJlcyBpcyBpbXBvcnRhbnQgZm9yIGVmZmVjdGl2ZSBjb21tdW5pY2F0aW9ucy4gCldlIGFyZSB1bmFibGUgdG8gbWFrZSBldmVuIGEgd2lsZCBndWVzcyBhYm91dCB0aGUgSU1GIGRlZmluaXRpb24gb2YgZmlzY2FsIGFuZCBtb25ldGFyeSBwb2xpY2llcy4gCllvdSB0b29rIHRoZSB0aW1lIHRvIHdyaXRlIHRoaXMgbGV0dGVyLCB3aGljaCBtZWFucyB5b3UncmUgcmVhZHkgdG8gY29uZnJvbnQgdGhpcyBtYW4gYWJvdXQgd2hhdCdzIGhhcHBlbmluZy4gUmVhbGx5LCB0aGUgbGV0dGVyIHNheXMgaXQgYWxsLiBZb3Ugd2FudCBoaW0gZm9yIHlvdXJzZWxmLCBidXQgeW91IG5lZWQgdG8gZ2V0IHNvbWUgYW5zd2VycyAgIGFuZCB0byBjb25zaWRlciB0aGUgbGllcy4gCldoYXQgaGFwcGVuZWQgd2FzIHRoZSBzZWN0b3BvZCB3ZW50IGFoZWFkIGFuZCBkZXN0cm95ZWQgbXkgYWxsb3kgc2hpdiAod2l0aCAyOSBocCkgaW4gMiBvdmVyd2F0Y2ggc2hvdHMsIHdoaWNoIGhhcHBlbmVkIG9uIHRoZSBzYW1lIHR1cm4uIEFmdGVyIHRoYXQsIEkgcG9zaXRpb25lZCBteSBnb2xpYXRoIGNsb3NlciB0byBteSB0ZWFtIGFuZCB0b3NzZWQgc21va2Ugb250byBpdCwgaG9waW5nIGhlIHdvdWxkIHRhbmsgbW9zdCBvZiB0aGUgc2hvdHMuIEkgY291bGRuIHVzZSBhIGZsYW1ldGhyb3dlciBiZWNhdXNlIG1vc3Qgb2YgdGhlIGVuZW1pZXMgd2VyZSBpbiByYXRoZXIgZ29vZCBkZWZlbnNpdmUgcG9zaXRpb25zLiBJIHRoZW4gdXNlZCBteSBzbmlwZXIgdG8gdGFrZSBvdXQgdHdvIG9mIHRoZSBmbGFua2luZyBtdXRvbnMsIHdoaWNoIGhhZCBubyBhdmFpbCBiZWNhdXNlIGFub3RoZXIgcG9kIGRlY2lkZWQgdG8gY2hlY2sgb3V0IHRoZSBhY3Rpb24uClRoaXMgcGFydGljdWxhciBmb29kIHRydWNrIHRlbmRzIHRvIG1ha2UgaXRzIHJvdW5kcyBhdCBhIG1hbnkgbG9jYWwgYnJld2VyaWVzLCBpbmNsdWRpbmcgVXBzbG9wZSBpbiBCb3VsZGVyIGFuZCBCb290c3RyYXAgaW4gTG9uZ21vbnQuIApUaGVpciB0cmVtZW5kb3VzIGxpdmUgaW4gcGxheSBiZXR0aW5nIGlzIHdoZXJlIHRoZXkgZXhjZWwgd2l0aCB0aGUgZXhvdGljcyBvbiBzZWxlY3RlZCBldmVudHMuVW5pYmV0IGFsc28gZmVhdHVyZXMgU3VwZXJUb3RvIGJldHRpbmcgd2hlcmUgcHVudGVycyBoYXZlIHRvIHByZWRpY3QgdGhlIHJlc3VsdCBvZiAxMCBzZWxlY3RlZCBldmVudHMuIApUaGFuayB5b3UgZm9yIHN1Y2ggYSBkZXRhaWxlZCBhbnN3ZXIuIEkgYW0gd2lsbGluZyB0byBwdXJjaGFzZSBtaWxlcyB0byBwdXNoIG1lIHNvIEkgY2FuIHJlZGVlbSB0aGVtIGlmIG5lZWRlZC4KQW4gdW5wb3B1bGFyIG9ic2VydmF0aW9uLCBwZXJoYXBzLCBidXQgaXQgd2FzIGFuIG9idmlvdXMgdHVybmluZyBwb2ludC4gV291bGQgQWRhbXMgaGF2ZSBwcm90ZWN0ZWQgYSBsb25nIHRlcm0gb2NjdXBhdGlvbiBieSBzb2NpYWwgY29uc2VydmF0aXZlIGdyb3Vwcz8gQW4gYW50aSBnYXkgcmlnaHRzIGVuY2FtcG1lbnQsIGZvciBleGFtcGxlLCB0aGF0IGNsYWltZWQgYSBmcmVlIHNwZWVjaCBiYXNpcyBmb3IgbGl2aW5nIGFuZCBwb29waW5nIGluIHB1YmxpYyBwYXJrcz8gTWV0aGlua3Mgbm90LiBXb3JzdCBtYXlvciBldmVyLi4gCkFzIGEgcmVzdWx0IG9mIGNoYW5naW5nIGJ1c2luZXNzIG1vZGVscywgbWFueSBBbWVyaWNhbnMgbG9va2VkIHRvIHRoZSBlcXVpdHkgaW4gdGhlaXIgaG9tZSBhcyB0aGVpciA0MDFLIHBsYW5zIGFuZCB0aGUgZm91bmRhdGlvbiBmb3IgcmV0aXJlbWVudC4gRm9yIG1hbnkgaG9tZW93bmVycywgZXF1aXR5IGVxdWFsbGVkIG5ldCB3b3J0aC4gV2l0aCB0aGF0IGVxdWl0eSBldmFwb3JhdGluZywgYW5kIGFuIGluYWJpbGl0eSB0byBzZWxsIGEgaG9tZSBldmVuIGF0IGRyYXN0aWNhbGx5IHJlZHVjZWQgcHJpY2VzLCBsaXZlcyBoYXZlIGJlZW4gc28gZHJhbWF0aWNhbGx5IGltcGFjdGVkIGZpbmFuY2lhbGx5LCB0aGF0IGEgaG91c2luZyByZWNvdmVyeSwgaWYgYW5kIHdoZW4gaXQgaGFwcGVucywgbWF5IG5vdCByZWFsbHkgbWF0dGVyLi4gClRoZSBtb3N0IHBvcHVsYXIgaGlzdG9yeSBhc3N1bXB0aW9uIG9mIHBva2VyIGlzIHRoYXQgaXQgd2FzIG9yaWdpbmF0ZWQgYnkgQ2hpbmVzZSBhcm91bmQgOTUwQUQgd2hpY2ggdGhleSBjYWxsZWQgImRvbWlubyBjYXJkcyIuIApXaGF0IE9uVGhpbmdzIHRvIGRvRm9vZCBhbmQgRHJpbmtGYW1pbHkgYW5kIEtpZHNUViBHdWlkZVNIRUxMSEFSQk9VUiBXb3JrZXJzIENsdWIgY2hpZWYgZXhlY3V0aXZlIERlYmJpZSBDb3Ntb3MgaGFzIGhpdCBiYWNrIGF0IGNsYWltcyB0aGF0IGNoaWxkY2FyZSBhdCBjbHVicyB3b3VsZCBub3JtYWxpc2UgZ2FtYmxpbmcgZm9yIHlvdW5nc3RlcnMuIFRoZSBjbHViIGJvYXJkIG9mIGRpcmVjdG9ycyBsYXN0IHdlZWsgdW52ZWlsZWQgYSAkNjQgbWlsbGlvbiBtYXN0ZXIgcGxhbiBmb3IgdGhlIHNpdGUgb3ZlciB0aGUgbmV4dCAyMCB5ZWFycyAgIHdoaWNoIGluY2x1ZGVkIGEgbG9uZyBkYXkgY2FyZSBjZW50cmUuIApBcyBwbGF5ZWQsIEkgdGhpbmsgZmxvcCBpcyBhbiBlYXN5IGZvbGQsIHlvdSByZWFsbHkgb25seSBob3BpbmcgdG8gaGl0IGFuIEEgb3IgNyBhbmQgZXZlbiB0aGVuIGFueSBleHRyYSBlcXVpdHkgeW91IHBpY2sgdXAgb24gdGhlIHR1cm4gaXMgZ29ubmEgZW5kIHVwIGdldHRpbmcgeW91IGluIHRyb3VibGUgbW9yZSBvZnRlbiB0aGFuIG5vdC4gClRoYXQgd2Uga25vdyBvZi4iIG9mIGNvdXJzZSB0aGV5IG11c3QsIGJlY2F1c2Ugbm8gb25lIGlzIGFsbG93ZWQgdG8gYmUgb3Blbmx5IGdheSB1bmRlciB0aGUgREFEVCBwb2xpY3kuLiAKRm9ydCBNb3JnYW4gcmVzaWRlbnQgTGFycnkgS2FnZSBicm91Z2h0IGFsb25nIGhpcyAxOTQ4IFN1cGVyIEQgMiBjeWxpbmRlciBHaWJzb24gdGhhdCBoZSBoYXMgb3duZWQgc2luY2UgMTk4NC4gClNtYWxsIGludGVzdGluYWwgaGlzdG9wYXRob2xvZ3kgYW5kIG1vcnRhbGl0eSByaXNrIGluIGNlbGlhYyBkaXNlYXNlLiBKQU1BLiAyMDA5IFNlcCAxNjszMDIoMTEpOjExNzEgOC4uIApEbyB0aGUgQnJva2VuIFNob3JlIGludHJvIHNjZW5hcmlvIHRvIHVubG9jayB0aGUgc3R1ZmYgdGhlcmUgYW5kIG9uY2UgeW91IGhhdmUgQUsyNSB5b3UgY2FuIHVubG9jayAyNiB0aGVyZSBhbmQgdGhlbiBjb250aW51ZSBmdXJ0aGVyIHRvIEFLNDAuCkFuZCBXYWxzaCwgVi4gMjAxNy4gR3Vuc2xpbmdlcnMsIHBva2VyIHBsYXllcnMsIGFuZCBjaGlja2VucyAxOiBEZWNpc2lvbiBtYWtpbmcgdW5kZXIgcGh5c2ljYWwgcGVyZm9ybWFuY2UgcHJlc3N1cmUgaW4gZWxpdGUgYXRobGV0ZXMuIEluOiBXaWxzb24sIE0uLCBXYWxzaCwgVi4gCkZmbmVuIFNpZSBJaHJlbiBHZWlzdC4gV2VubiBkZXIgVmVyc3RhbmQgZXR3YXMgaHJ0IGRpZSBzY2hlaW50IHdpZSBhYnNvbHV0ZXIgUXVhdHNjaCBhdXNzY2hhbHRldCB1bmQgbmljaHQgaHJlbi4gRGVyIFdlZywgdW0gSWhyZW4gR2Vpc3QgenUgZmZuZW4sIGlzdCB6dSBzYWdlbiwgc2VsYnN0IHdlbm4gZGllIFBlcnNvbiBpbSBHZXNwcmNoIG1pdCBJaG5lbiwgImRhcyBpc3QgcmljaHRpZywgZGFzIGlzdCB3YWhyIiwgaW1tZXIgdW5kIGltbWVyIHdpZWRlci4gClNsZXB0IGluIG15IGNhciBvciBpbiBhIHRlbnQgd2l0aCBhIGNhbXBmaXJlIGFuZCBsYW50ZXJuICtzdG92ZS4gQm91Z2h0IGZvb2QgZnJvbSBXYWxtYXJ0LCBrZXB0IGl0IGluIGFuIGljZSBjaGVzdCwgc3RvbGUgd2F0ZXIgZnJvbSB0aGVpciBwcmltbyBtYWNoaW5lLCBhbmQgYWN0dWFsbHkgZ2FpbmVkIGFsb3Qgb2YgaGVhbHRoeSB3ZWlnaHQgKHNraW5ueSB0byBtdXNjdWxhcikuLiAKU29tZSBwZW9wbGUgd291bGQgY2FsbCB0aGlzIHNoaXR0eSwgSSBjYWxsIGl0IGRhdGluZy4gCkl0IGhhcmQgdG8gc2F5IGZyb20gdGhlIHBpY3R1cmVzIGhvdyBtdWNoIHdvbiBoYXMgYmVlbiBkb25lIG9uIHRoZSBuZWNrLCBzbyBpdCBhIGJpdCBoYXJkIHRvIHNheSBob3cgZGlmZmljdWx0IGl0IHdpbGwgYmUuIElmIHRoZSBuZWNrIGlzIHJlYWR5IHRvIGdsdWUsIGl0IHNob3VsZCBiZSBtYW5hZ2VhYmxlLCBidXQgaWYgeW91IGhhdmUgdG8gZG8gdGhlIHdob2xlIG5lY2sgc2V0LiBXZWxsLCBnZXQgcmVhZHkgZm9yIGFuIGFkdmVudHVyZS4uIApUaGUgc3R1ZmYgcGV0YSBpcyBvbiBhYm91dCBnb3QgYSBsb3Qgb2YgZmxhaywgZXZlbiBhdCB0aGUgdGltZSwgZnJvbSBsb2FkcyBvZiBwZW9wbGUuIApUaGUgInZhcmlhbmNlIiBpcyBkZWZpbml0ZWx5IGhpZ2hlciBpbiBiaWdnZXIgZmllbGQgTVRUcyBidXQgdGhlcmUgd2F5IG1vcmUgd29yc2UgcGxheWVycyBpbiB0aGVzZSBmaWVsZHMgYW5kIHRoYXQgd2hlcmUgYWxsIHRoZSBtb25leSBjb21lcyBmcm9tIGF0IHRoZSBlbmQgb2YgdGhlIGRheS4gTW9yZSBjYXVzdWFscyA9IG1vcmUgbW9uZXkuIApUaGUgaWRlYSB3YXMgdG8ganVzdCBoYXZlIGZ1biBhbmQgc2VlIHdoZXJlIGl0IHdlbnQuIEEgd2VlayBhZ28sIGhlIGFkdmFuY2VkIHRvIHRoZSBmaW5hbCB0YWJsZSwgd2l0aCBlaWdodCBvdGhlciBwbGF5ZXJzIHZ5aW5nIGZvciB0aGUgbWlsbGlvbiBncmFuZCBwcml6ZS4gSnVzdCBnZXR0aW5nIHRoZXJlIGd1YXJhbnRlZWQgaGltIGF0IGxlYXN0IGEgbWlsbGlvbiBwYXlkYXkgZm9yIG5pbnRoIHBsYWNlIHdpdGggdGhlIHBvc3NpYmlsaXR5IG9mIHdpbm5pbmcgbW9yZSBpZiBvdGhlcnMgd2VyZSBlbGltaW5hdGVkIGJlZm9yZSBoaW0uLiAKTWFsZSBCeWxldGggaXMgYW4gYXZhdGFyIGZvciBtYWxlIHBsYXllcnMsIGFuZCB3aGlsZSBoZSBjZXJ0YWlubHkgcHJldHR5IGF0dHJhY3RpdmUgdG8gbWFueSB3b21lbiAoYW5kIG1lbiwgb2YgY291cnNlKSwgaGUgYWxzbyBub3Qgb2ZmIHB1dHRpbmcgdG8gdGhlIG1hbGUgcGxheWVycyB3aG8gaGUgaXMgZm9yZW1vc3QgZ2VhcmVkIHRvd2FyZC4gCldoYXQgQ29uc3RhbnRpbm8gb2ZmZXJzIHdpdGggaGVyIHNvYXAgaXMgdGhlIG9wcG9ydHVuaXR5IHRvIGNvbnN1bWUgbm90IGp1c3QgaGVyIGltYWdlLCBidXQgaGVyIGFjdHVhbCBib2R5Li4gCk91ciBzdHJhdGEgbG90cyBvbiB0aGUgc3RyYXRhIHBsYW4gYXJlIG51bWJlcmVkIG9uZSB0byAzMDAgYW5kIHRoZSB1bml0IGVudGl0bGVtZW50IGlzIGJhc2VkIG9uIHRoZSBtZWFzdXJlZCBhcmVhcyBzaG93biBvbiB0aGUgcGxhbi4gClRoZSBpZGVhIHRoYXQgdGhleSBhcmUgbGVzcyBjb3JydXB0LlNvIHllYWgsIERlbW9jcmFjaWVzIGFyZSBsZXNzIGNvcnJ1cHQgYnkgZGVmaW5pdGlvbiwgYW5kIGV2ZW4gd2l0aCB0aGUgbW9zdCBleHRyZW1lIGNhc2VzIHlvdSB3aWxsIGhhdmUgdHJvdWJsZSBldmVyIGZpbmRpbmcgYW4gYXV0b2NyYWN5IHRoYXQgaXMgbGVzcyBjb3JydXB0IHRoYW4gYSBkZW1vY3JhY3kuUGVvcGxlIGZvcmVtb3N0IGxvb2sgYXQgZWNvbm9teSB0byBqdWRnZSBhIGdvdmVybm1lbnQgaW4gc3VjaCBwYXJ0cyBvZiB0aGUgd29ybGQuIApEbyB5b3Ugd2FudCB0byBoYXZlIGFuYWwgc2V4IHdpdGggeW91ciB3aWZlIG9yIGdpcmxmcmllbmQsIGJ1dCBhcmUgdW5jZXJ0YWluIGFib3V0IGhlciByZWFjdGlvbj8gTWFueSB3b21lbiBhcmUgY3VyaW91cyBhYm91dCBhbmFsIHNleCwgYnV0IGFyZSBzY2FyZWQgYWJvdXQgY29tZm9ydCBhbmQgc2FmZXR5IGlzc3Vlcy4gU29tZSB3b21lbiB3aG8gYXJlIHVud2lsbGluZyB0byB0cnkgYW5hbCBzZXggd2l0aCB0aGVpciBjdXJyZW50IHBhcnRuZXIgbWF5IGhhdmUgaGFkIGEgYmFkIGV4cGVyaWVuY2Ugd2l0aCBhbiBpbXBhdGllbnQgb3IgaWdub3JhbnQgbG92ZXIgaW4gdGhlIHBhc3QuIFRoYXQgd2h5IEkgZG9uIHJlY29tbWVuZCBhc2tpbmcgYSB3b21hbiBmb3IgYW5hbCBzZXggd2l0aG91dCBzb21lIGNhcmVmdWwgcHJlcGFyYXRpb24uIEluc3RlYWQgb2YgYXNraW5nIGhlciB0byB0cnkgYW5hbCBzZXgsIGl0IGJldHRlciB0byBtYWtlIGhlciB3YW50IGFuYWwgc2V4LgpJIGdvdCB0aGUgcmVtb3RlIHRvIHR1cm4gaXQgb24gYWdhaW4sIGFuZCB0aGVuIGEgcHJvcGVyIGNoYW5uZWwgd2FzIHNob3duLCBzbyBubyBzdGF0aWMgaW1hZ2UgYW55bW9yZS4gCllvdSBjYW4ndCBzYXkgdGhhdCAxMjBnIHBlciBkYXkgaXMgdG9vIG11Y2guIEl0J3MgdGhlIHBlcmNlbnRhZ2Ugb2YgdGhlIHRvdGFsIGludGFrZSB0aGF0IG1hdHRlcnMuIEFuZCBmb3IgYnVpbGRpbmcgbXVzY2xlLCByZWFsbHkgbmVlZCBhcm91bmQgMjAlIHByb3RlaW4sIGFuZCBtYXliZSBhIGJpdCBtb3JlLCBmb3Igb3B0aW1hbCBnYWluLiBTdHVkaWVzIGJhY2sgdGhpcyB1cC4gQ2hlY2sgb3V0IHBsYW50IHByb29mcyBzZWN0aW9uIG9uIHByb3RlaW4gZm9yIG1vcmUgYWJvdXQgdGhpcy4KVGhlbiB3ZSBoYXZlIHBva2VyIENoZWF0IENvbnRhY3QgTGVucyB0aGUgY29udGFjdCBsZW5zIGVuYWJsZXMgdXMgdG8gc2VlIHRoZSBtYXJrIGF0IHRoZSBiYWNrIG9mIHRoZSBwbGF5aW5nIGNhcmRzIGFzIHRoZXNlIGFyZSBwcmludGVkIHdpdGggYW4gaW52aXNpYmxlIGluayB3aGljaCBjYW5ub3QgYmUgc2VlbiB3aXRoIG5ha2VkIGV5ZSBhbmQgcmVxdWlyZSB0aGVzZSBjb250YWN0IGxlbnNlcyBpbiBvcmRlciB0byBzZWUgdGhlIG1hcmsgb24gdGhlIGNhcmRzIHNpbmNlIG9ubHkgeW91IHdpbGwgYmUgd2VhcmluZyB0aGVzZSBjb250YWN0IGxlbnNlcyBzbyBhcGFydCBmcm9tIHlvdSBubyBvbmUgd291bGQgYmUgYWJsZSB0byBzZWUgdGhlIGNvbmNlYWxlZCBtYXJrIHlvdSBjYW4gYmUgYWJsZSB0byBzZWUgdGhlIG1hcmsgZnJvbSB0aGUgcmFuZ2Ugb2YgMzAgNDAgY20gd2l0aG91dCBhbnkgZGlmZmljdWx0eS4gVGhlIGNvZGUgd2lsbCBoZWxwIHlvdSB0byBkZWNpZGUgeW91ciBuZXh0IG1vdmUsIHdoaWNoIHdpbGwgZnVydGhlciBoZWxwIHlvdSB0byB3aW4gdGhlIHJlc3BlY3RpdmUgZ2FtZSBpdCBubyBsb25nZXIgYW55IGNsaWNoIHRoYXQgd2UgY2Fubm90IGNoZWF0IGluIGNhcmQgZ2FtZXMgYXMgZXZlcnl0aGluZyBpcyBmYWlyIGluIGxvdmUgYW5kIHdhciBhbmQgcGxheWluZyBjYXJkcyBpcyBub25ldGhlbGVzcyB0aGFuIGEgd2FyIGJlY2F1c2UgeW91ciBtb25leSBpcyBhdCBzdGFrZS4gCjM0KSBBZ2FpbiwgQWdhaW4gLiAKVGhlIGZvdW5kYXRpb24gbG9kZ2VkIGEgY29tcGxhaW50IGFnYWluc3QgQ0FWIGxhc3Qgd2VlayBhZnRlciB0aGUgd2F0Y2hkb2cgY29uZmlybWVkIHRvIFRoZSBTdW5kYXkgQWdlIGl0IHdhcyAibG9va2luZyBpbnRvIiB0aGUgZm91bmRhdGlvbiBmaW5hbmNpYWwgYWZmYWlycy4gSXQgY2FuIGFsc28gYmUgcmV2ZWFsZWQgdGhlIGZvdW5kYXRpb24gY3VycmVudCBoZWFkcXVhcnRlcnMgYXJlIGluIGEgYnVpbGRpbmcgb3duZWQgYnlTaGFuZSBXYXJuZSBwYXJlbnRzLCB3aG8gcHVyY2hhc2VkIHRoZSBCcmlnaHRvbiBwcm9wZXJ0eSBpbiBKdWx5LiBJdCBpcyB1bmtub3duIGhvdyBtdWNoIGluIHJlbnQgdGhleSBhcmUgcmVjZWl2aW5nLiAKSSBiYXNpY2FsbHkgc3RvcHBlZCBvbmNlIEkgaGFkIGEgbmV3IGpvYiBhbmQgc2Nob29sLiBJIHdhdGNoZWQgdmlkZW9zIGFuZCByZWFkIGJvb2tzIGJ1dCBtYWlubHkgdmlkZW9zIG9uIFlvdVR1YmUuIApTYXkgSSBvcGVuIDUxJSBvbiB0aGUgYnV0dG9uLCBzYiBzaG91bGQgYWRhcHQgaGlzIDNiIHN0cmF0ZWd5IHRvIG15IG9wZW4sIGFzIGJiIGluY3JlYXNlcyBoaXMgJSBpbiBjb2xkNGJldHRpbmcuIE5MSCBpc24gc29sdmVkICh5ZXQpIHNvIHByZWZsb3Agc29sdXRpb25zLCBlc3BlY2lhbGx5IGJ5IHNub3dpZSB3aGljaCBhZHZvY2F0ZXMgY29sZCBjYWxsaW5nIDNiZXRzIHdoaWNoIGlzIHJpZGljdWxvdXMgaW4gcHJhY3RpY2UsIGFyZSB2ZXJ5IHN1c2NlcHRpYmxlIHRvIGNoYW5nZXMgaW4gdGhlIG1ldGFnYW1lLiAKQmVsaWV2ZSBpdCBvciBub3QgdGhhdCBhY3R1YWxseSBhIHByZXR0eSBlYXN5IHByb2JsZW0gdG8gc29sdmUgZm9yIGFueSBmaXJzdCByZXNwb25kZXIsIG9yIHNvbWVvbmUgd2hvIGlzIHRyYWluZWQgaW4gaG93IHRvIGRlbGl2ZXIgbW91dGggdG8gbW91dGguLiAKVGhlbiBjbGljayBleGl0IGdhbWVhZ2FpbiwuIGJhY2sgdG8gdGhlIG1haW4gbWVudSwuIG9ubHkgbm93IGFsbCB0aGVpciBjYXJkc2FyZSBzaG93bi4gR29vZCBsdWNrIGl0IHdvcmtzIGZvciBtZS4gKEZ1bGwgQW5zd2VyKS4gCkRlcHJlc3Npb24gaXMga2luZCBvZiBsaWtlIGEgd2FybSBibGFua2V0LiBJdHMgcmVhbGx5IGNvbWZvcnRpbmcgYW5kIHlvdSBqdXN0IHdhbnQgdG8ga2VlcCBuYXBwaW5nIHNvIGl0J3MgaGFyZCB0byBnZXQgdXAgYW5kIGRvIHRoZSB0aGluZ3MgeW91IHdhbnQgdG8gZG8uIEl0J3MgcmVhbGx5IGVhc3kgdG8ganVzdCBjdXJsIHVwIGFuZCBzdGF5IGluIGl0IHNvIHlvdSBoYXZlIHRvIGZvcmNlIHlvdXJzZWxmIHRvIGp1c3QgcmlwIGl0IG9mZiBhbmQgc3RhcnQgdGhlIGRheS4gVGhlbiB5b3UgZ2V0IHRvIGEgcG9pbnQgd2hlcmUgeW91J3JlIG5vdCBmb3JjaW5nIHlvdXJzZWxmIGFueW1vcmUuIE9yIHlvdSBtYXkgb25seSBoYXZlIHRvIGZvcmNlIHlvdXJzZWxmIHNvbWUgb2YgdGhlIGRheXMuIEFzIGNsaWNoIGFzIGl0IGlzLCBpdCBkb2VzIGdldCBiZXR0ZXIuClByYWN0aWNpbmcgdGhlc2UgZml2ZSBtZXRob2RzIGlzIGEgZ3JlYXQgc3RhcnQuCkp1c3QgbGlrZSBUb255YSBIYXJkaW5nLCBNb2xseSBCbG9vbSBpcyBub3QgZXhhY3RseSByb2xlIG1vZGVsIG1hdGVyaWFsLiBBcyBzaGUgZnJlZWx5IGFkbWl0cyBpbiB0aGUgZmlsbSwgc2hlIHRvb2sgYWR2YW50YWdlIG9mIGdhbWJsaW5nIGFkZGljdHMuIEJ1dCBsaWtlIEhhcmRpbmcsIGhlciBwdW5pc2htZW50IGFyZ3VhYmx5IGRpZCBub3QgZml0IGhlciBjcmltZS4gCkhlIHJhbiBhcm91bmQgdGhlIHNpZGUgb2YgdGhlIGhvdXNlIHRvIG15IGxlZnQgYW5kIHBlZWtlZCBvdmVyIHRvIHNlZSBpZiBJIHdhcyBzdGlsbCB0aGVyZS4gCjMgYmV0IEo5IHNwYWRlcyBpbiBhIGxpdmUgZ2FtZS4gWW91IGtub3cgeW91IHdpbGwgc2VlIGEgdG9uIG9mIEF4LCBLUSBzdWl0ZWQsIFFKIHN1aXRlZCwgYW5kIGFueSBwb2NrZXQgcGFpciB3aWxsIGNhbGwgaW4gYSBsaXZlIGdhbWUuIFRoZSBwb2ludCBvZiB0aGUgMyBiZXQgaXMgdG8gZm9sZCBvdXQgaGFuZHMgKHNxdWVlemluZywgcmFyZWx5IGhhcHBlbnMgaW4gbGl2ZSBwb2tlciksIGxpbWl0IHlvdXIgb3Bwb25lbnRzIHJhbmdlIChsaXZlIHBva2VyIGlzbnQgaGFwcGVuaW5nKSwgbWFrZSB0aGUgcG90IGJpZ2dlciBzbyBpZiB5b3UgaGl0IHlvdXIgaGFuZCBvbiB0aGUgZmxvcCB5b3UgY2FuIGdldCBtYXggdmFsdWUsIGFuZCBtYWtlIHRoZSBwb3QgYmlnZ2VyIHRvIGdvIGFsbCBpbiB3aXRoIHRoZSBiZXN0IGhhbmQgcHJlZmxvcC4gCkl0IGEgc2lkZSBkb29yIGRvd24gYSBzbWFsbCBhbGxleS4gSGUgYXNrZWQgZm9yIGEgZ2xhc3Mgb2Ygd2F0ZXIgYW5kIEkgdG9sZCBoaW0gdG8gZ2V0IG91dCBvciBJIGJyZWFrIGhpcyBhcm0uLiAKVGhlIG1hbGUgc3VzcGVjdCwgd2hvIHRoZSB2aWN0aW0gc2FpZCBtaWdodCBnbyBieSB0aGUgbmlja25hbWUgd2FzIGRlc2NyaWJlZCB0byBwb2xpY2UgYXMgYmVpbmcgYWJvdXQgNiBmZWV0IHRhbGwsIHRoaW4gYW5kIHdoaXRlLCB3aXRoIGxvbmcgYnJvd24gaGFpciBwdWxsZWQgdXAgaW5zaWRlIGEgYmVhbmllIGNhcC4gCkkgd2FzIGxlYXJuaW5nIHByb2dyYW1taW5nIGF0IGFyb3VuZCAyMywgd2hpbGUgcGxheWluZyBvbiBhIGZyaWVuZHMgc3Rha2UgdG8gbWFrZSBlbmRzIG1lZXQuIFRoYW5rZnVsbHkgSSBkb24ndCBoYXZlIHRvIGdyaW5kIGZvciBhIGxpdmluZyBhbnltb3JlLCBidXQgSSBhbHdheXMgZmVsdCBoZSB3YXMgcHJvdWQgdGhhdCBJIGJlY2FtZSBkZWNlbnQgYXQgYSBnYW1lIGhlIHRhdWdodCBtZS4uIApBbmQgSSBoYXZlIGJlZW4gdXNpbmcgVlIgc2luY2UgMXN0IHdlZWsgb2YgYm90aCBWaXZlIGFuZCBSaWZ0IGxhdW5jaC4gVlIgY2FuIHN0aWxsIGNhdXNlIHlvdSB0byBkcm9wIHlvdXIgamF3IGV2ZW4gaWYgeW91IGhhdmUgdXNlZCBpdCBmb3IgYSBmZXcgeWVhcnMuLiAKSXQgc2FkIGJ1dCBzb21ldGhpbmcgSSBhY2NlcHQuLiAKQmx1ZmZpbmcgaXMgYWxsIGFib3V0IGFjdGluZyBhbmQgYmV0dGluZyBpbnNpZGUgYSB3YXkgd2hpY2ggY2FuIGJlIHRvdGFsbHkgdW5yZWxhdGVkIGZvciB0aGUgYWN0dWFsIHBvc2l0aW9uIG9mIGNvbmRpdGlvbiBpbiB0aGUgcGxheWVyLiBGb3IgaW5zdGFuY2UsIGlmIGEgcGxheWVyIGhhcyBuZWdhdGl2ZSBoYW5kLCBidXQgaGUgbmV2ZXJ0aGVsZXNzIHdhZ2VyIHdpdGhpbiBhIHdheSBhcyBpZiBzaGUgb3IgaGUgaW5jbHVkZXMgYSBnb29kIGEgc2luZ2xlLCB0aGVuIGl0IG1lYW5zIHRoYXQgaGUgb3Igc2hlIGlzIGJsdWZmaW5nLiBBIHBsYXllciB3aXRoIHBvd2VyZnVsIGhhbmRzIHByZXRlbmRpbmcgdG8gYmUgYSB3ZWFrZXIgb3Bwb25lbnQgY2FuIGFsc28gYmUgYSBhcHByb2FjaCB0byBibHVmZi4gQmVjb21pbmcgdW5wcmVkaWN0YWJsZSBpcyBhbW9uZ3N0IHRoZSBmaW5lc3QgbWV0aG9kcyB0byBiZWF0IHlvdXIgb3Bwb25lbnRzIGluIHRoZSBnYW1lLiBUaGUgbW9tZW50IHlvdSBsZXQgdGhlbSB5b3UgYW5hbHl6ZSB5b3VyIGdhbWUgcGxheSwgeW91ciBmaW5pc2ggY291bGQgYmUgbmVhciBzb29uLgpBbGxlbiBwdXRzIHRoZSBsaWtlbGlob29kIG9mIHN1Y2Nlc3MgZm9yIEFiZSBwcm9ncmFtIGF0IGFib3V0IDMwJS4gCllvdSBnb25lIGZyb20gd2lubmluZyAwLzEwMCBnYW1lcyB0byB3aWxsaW5nIDY1LzEwMCBnYW1lcywgd2l0aG91dCBnZXR0aW5nIGJldHRlciBhdCB0ZW5uaXMgYXQgYWxsLi4gCkdvdCBteXNlbGYgdXAgdG8gMTFtaSBydW4gYXQgb25lIHBvaW50IGFuZCB0aGFuIHRoaXMgc2hpdCBzdGFydGVkIGhpdHRpbmcgbWUuIApUaGUgaXNsYW5kIGlzIHRoZSBtb3RvcmluZyBwdWJsaWMgcG9ydGlvbiBvZiB0aGUgcm9hZCB0eXBpY2FsbHkgMTIwIDE1MCBmZWV0IGluIGxlbmd0aCBhbmQgaXMgZGVzaWduZWQgdG8gYmUgZmFpbCBzYWZlLiAKSW4gdGhlIGNvdXJzZSBvZiB5b3VyIHVzZSBvZiB0aGUgU2VydmljZXMsIHlvdSBtYXkgYmUgYXNrZWQgdG8gcHJvdmlkZSBjZXJ0YWluIHBlcnNvbmFsIGluZm9ybWF0aW9uIHRvIHVzLiBPdXIgaW5mb3JtYXRpb24gY29sbGVjdGlvbiBhbmQgdXNlIHBvbGljaWVzIHdpdGggcmVzcGVjdCB0byB0aGUgcHJpdmFjeSBvZiBzdWNoIHBlcnNvbmFsIGluZm9ybWF0aW9uIGFyZSBzZXQgZm9ydGggaW4gdGhlIFByaXZhY3kgUG9saWN5LiBXZSBlbmNvdXJhZ2UgeW91IHRvIHJlYWQgdGhlIFByaXZhY3kgUG9saWN5LCBhbmQgdG8gdXNlIGl0IHRvIGhlbHAgbWFrZSBpbmZvcm1lZCBkZWNpc2lvbnMuIAoxMDAsMDAwIENhbG9yaWUgQmFyc01lcmkgKE15Q2Fyb2xpbmFCYWJpZXMpMSBwYWNrYWdlIEdlcm1hbiBjaG9jb2xhdGUgY2FrZSBtaXgzLzQgY3VwIGJ1dHRlciwgbWVsdGVkMS8zIGN1cCBldmFwb3JhdGVkIG1pbGs2IG91bmNlcyBjaG9jb2xhdGUgY2hpcHMxIGN1cCBjaG9wcGVkIG51dHM1MCBjYXJhbWVsczEvMyBjdXAgZXZhcG9yYXRlZCBtaWxrTWl4IHRvZ2V0aGVyIHRoZSBjYWtlIG1peCwgYnV0dGVyIGFuZCAxLzMgY3VwIGV2YXBvcmF0ZWQgbWlsay4gU3ByZWFkIGhhbGYgb2YgdGhpcyBtaXh0dXJlIGluIGEgMTN4OSBpbmNoIHBhbi4gQmFrZSBmb3IgNiBtaW51dGVzIGF0IDM1MEYuIApObywgeW91IG9ubHkgY3V0IGEgY29yZCBvbmNlLCBhbmQgd2hlbiB5b3UgZG8gaXQgcHJvcGVybHksIGl0IG5ldmVyIGNvbWVzIGJhY2suCkNJQkMgaGFzIHJlY29nbml6ZWQgdGhhdCBzb21lIGNsaWVudHMgd2FudCB0aGVpciBiYW5rIHRvIGNvbnNpZGVyIGVudmlyb25tZW50YWwgYW5kIHNvY2lhbCBpc3N1ZXMsIGFuZCBCYXJrZXIgaXMgcGFydCBvZiBhIHRlYW0gdGhhdCBoYXMgaGVscGVkIHRoZSBiYW5rIHRvIGFkb3B0IHRoZSBVbml0ZWQgTmF0aW9ucyBQcmluY2lwbGVzIGZvciBSZXNwb25zaWJsZSBJbnZlc3RtZW50LiAiQWN0aW5nIHJlc3BvbnNpYmx5IGV4dGVuZHMgaW50byBvdXIgY29tbXVuaXRpZXMgdGhyb3VnaCBvdXIgcmVsYXRpb25zaGlwIHdpdGggY2xpZW50cywiIEJhcmtlciBzYXlzLiAKT2JqZWN0aXZlIG1lYXN1cmVtZW50cyBvZiBhZXJvYmljIGZpdG5lc3MgYW5kIGV4ZXJjaXNlIGludGVuc2l0eSwgc3VjaCBhcyBWTzIgbWF4LCB3b3VsZCBvcHRpbWl6ZSByZXNlYXJjaCB2YWxpZGl0eS4gCkJ1dCB0aGUgcmF0aW9uYWxlIEkgc2VlbiBpbiB0aGlzIHRocmVhZCBmb3IgYmV0dGluZyAxNSBpcyBtb3JlIHNpbXBsaXN0aWMgdGhhbiB0aGUgcmF0aW9uYWxlIEkgb3V0bGluZWQgZm9yIGJldHRpbmcgMTAgMTIsIGJlY2F1c2UgaXQgb25seSBsb29rcyBhdCB0aGUgYWR2YW50YWdlIG9mIGJldHRpbmcgMTV2czEwIDEyIHdoaWxlIHNlZW1pbmdseSBpZ25vcmluZyB0aGUgb2J2aW91cyBkb3duc2lkZS4gCldoZXJldmVyIHlvdSBhcmUsIGNvb2wgZ3V5IHdpdGggdGhlIGdpYW50IHNjYXIgb24geW91ciBmYWNlLCB5b3Ugd2VyZSByZWFsbHkgbmljZSBhbmQgSSB3b3VsZCBoYXZlIHRvdGFsbHkgYm91Z2h0IHlvdSBhIGRyaW5rIGlmIEkgaGFkbiBiZWVuIGF0dGFjaGVkIHRvIHRoYXQgZGluZ3VzIGF0IHRoZSB0aW1lLgpGb3IgbWUsIGZvciBjb29raW5nISBzaGUgc2F5cyBvZiB0aGUgbGF0dGVyLiAKVGhlc2UgZ3VpZGVzIGFyZSBvbiB0aGUgZm9sbG93aW5nIHRvcGljczouIApZb3Ugc2hvdWxkIChhbmQgc28gc2hvdWxkIGFueWJvZHkgZWxzZSB0aGF0IHBsYXlzIGV2ZW4gcm9tb3RlbHkgc2VyaW91c2x5KSByZWFkIG1lbnRhbCBnYW1lIG9mIHBva2VyIG9uZSBhbmQgdHdvLiBTZXJpb3VzbHkgSSB1c2VkIHRvIHRoaW5rIEkgcmVhbGx5IGRpZG50IHRpbHQsIGJ1dCB0aGVuIEkgc3RhcnRlZCByZWFkaW5nIGFuZCBub3RpY2VkIHRoYXQgSSBkbyBoYXZlIGZvcm1zIG9mIHRpbHQgdGhhdCBwaWxlIHVwIGludG8gcHJvYmxlbXMgdGhhdCBhZmZlY3QgbXkgYm90dG9tIGxpbmUgbWFqb3JseS4gSWYgdGhlcmUgaXMgb25lIHRoaW5nIHRvIHRha2UgYXdheSBmcm9tIGl0IHRoZSBlbW90aW9ucyB0aGF0IHlvdSBmZWVsIGFyZSBhIHN5bXB0b20gb2YgYSBsYXJnZXIgcHJvYmxlbSBhZmZlY3RpbmcgeW91ciBnYW1lLiBUYWtlIGEgYnJlYXRoIGFuZCBtZW50YWxseSBpbmplY3QgbG9naWMgaW50byB5b3VyIGJyYWluLCBmb3IgbWUgYmVjYXVzZSBJIGhhdGUgbG9zaW5nIGFuZCB3aWxsIHRpbHQgb2ZmIGFuZCBnbyBpbnRvIGRlc3BlcmF0aW9uIG1vZGUgYSBsaXR0bGUgd2hlbiB0aGUgYmx1ZmYgSSBydW4gZ2V0cyBjYXVnaHQgSSBqdXN0IHRha2UgYSBicmVhdGggYW5kIHRlbGwgbXlzZWxmIGJhZCBwbGF5ZXJzIHdpbiB0b28gYW5kIEkgY2FudCB3aW4gZXZlcnkgaGFuZCBoZWxwZWQgbWUgb3V0IHRvbnMuCldpdGhpbiB0ZW4geWVhcnMuLiAKRnJhbmNpcyBtYWRlIGFuIGVzdGltYXRlIHRoYXQgcmFuIHNvbWV0aGluZyBsaWtlIHRoaXM6IFN1cHBvc2UgSSBjYW4gcGxheSBhIG5ldyBnYW1lIGV2ZXJ5IHRocmVlIG1pbnV0ZXMgbm90IGFuIHVucmVhc29uYWJsZSBhc3N1bXB0aW9uIGZvciBjYXNpbm8gYmxhY2tqYWNrIGFuZCBzdXBwb3NlIEkgcGxheSBmb3IgYW4gaG91ci4gCkFsbCByZW50ZXJzIG11c3QgaGF2ZSBhIGN1cnJlbnQgcmVsZWFzZSBhZ3JlZW1lbnQgb24gZmlsZS4KSXQgc291bmRzIGxpa2UgeW91IGRvbid0IGtub3cgaG93IHRvIHN0YW5kIG9uIHlvdXIgb3duIHR3byBmZWV0IGFuZCBiZSBhbiBpbmRlcGVuZGVudCBhZHVsdC4gWW91IGp1bXBlZCBvdXQgb2Ygb25lIHJlbGF0aW9uc2hpcCAoc291bmRzIGxpa2UgeW91IHdlcmUgYW4gZW1vdGlvbmFsIGNoZWF0ZXIpIGFuZCByaWdodCBvbiBpbnRvIHRoZSBuZXh0IG9uZSB3aXRob3V0IGFueSB0aW1lIGZvciBzZWxmIHJlZmxlY3Rpb24gb3IgcGVyc29uYWwgZ3Jvd3RoLiBOb3csIGxlc3MgdGhhbiBhIHllYXIgaW4geW91J3JlIGdvaW5nIHRvIG1vdmUgaW4gd2l0aCBhIGd1eSB5b3UgYXJlbid0IDEwMCUgaGFwcHkgd2l0aC4gCkFzIHNvbWVvbmUgd2hvIGFsc28gd2V0IHRoZW1zZWx2ZXMgYmVjYXVzZSBhIHRlYWNoZXIgZGVuaWVkIHRoZW0gdGhlIGJhdGhyb29tIChhbmQgSSB3YXMgdGhlIG1vc3QgbWVlaywgdGltaWQsIHNoeSBraWQgZXZlciBzbyBJIHdhc24ndCBhIHByb2JsZW0ga2lkKSwgSSBmZWVsIHRlcnJpYmxlIGZvciB0aGF0IGdpcmwuIApEaXNhYmlsaXR5IGFmZmVjdHMgbW9yZSB0aGFuIDU2IG1pbGxpb24gQW1lcmljYW5zLiAKQ2VwZW5kYW50LCBsZSBwcnN1bSBhYnNlbnQgZXN0IGF1c3NpIHByc3VtIHZpdmFudCwgZG9uYyBpbCBjb250aW51ZSAgZGV2b2lyIHJlbXBsaXIgc2VzIG9ibGlnYXRpb25zICBsJ2dhcmQgZGUgc29uIGNvbmpvaW50IGV0IGRlIHNlcyBlbmZhbnRzIGVuIGNlIHF1aSBjb25jZXJuZSBsJ2VudHJldGllbiBkZSBsYSBmYW1pbGxlIGV0IGxlcyBjaGFyZ2VzIGR1IG1hcmlhZ2UsIGxhIHJtdW5yYXRpb24gZHUgcmVwcnNlbnRhbnQgKGFydC4gClRoZSBzaXRlIHN1cGVyaW50ZW5kZW50IHNhdyBtZSwgZmxldyBvdXQgb2YgaGlzIG9mZmljZSBhbmQgdG9sZCBtZSB0aGF0IGlmIGhlIGNhdWdodCBtZSBydW5uaW5nIG9uIGhpcyBqb2Igc2l0ZSBhZ2FpbiBoZSBmaXJlIG1lIG9uIHRoZSBzcG90LiBBbm90aGVyIHRpbWUgSSB3YXMgc2VudCBob21lIGZvciBub3QgaGF2aW5nIHRoZSBwcm9wZXIgZm9vdCB3ZWFyLiBJdCB3YXMgYSBwYWluIGluIHRoZSBhc3MgYnV0IEkgbmV2ZXIgYmVlbiBpbiBhbiB1bnNhZmUgb3IgY29tcHJvbWlzZWQgcG9zaXRpb24gYW5kIGNlcnRhaW5seSBub2JvZHkgd2FzIHNjb29wZWQgdXAgaW4gYSBmcm9udCBlbmQgbG9hZGVyIG9yIGNydXNoZWQgYnkgYSBnaWFudCBkcmlsbC4uIApEYXkgd2FzIG91ciAiYmVhY2ggZGF5Ii4gV2UgaGVhZGVkIG91dCBvZiB0b3duIGFuZCBwaWNrZWQgdXAgdHdvIGhpdGNoaGlrZXJzIChiYWNrcGFja2Vycykgd2hvIG5lZWRlZCB0byBnbyB0byB0aGUgYmVhY2ggdG9vLiBXZSBkcm9wcGVkIHRoZW0gb2ZmIGF0IGEgaG9zdGVsIHdpdGggaGFtbW9ja3MgYW5kIGFsbCBJIGNvdWxkIHRoaW5rIHdhcyB0aGF0IEkgYW0gZGVmaW5pdGVseSB0b28gb2xkIHRvIHN0YXkgaW4gcGxhY2VzIHRoYXQgYXJlICQ0IGEgbmlnaHQhIE91ciBob3RlbCBoYWQgcmVjb21tZW5kZWQgd2UgZ28gdG8gUGxheWEgUm9jYSBpbiBMYXMgUGVuaXRhcy4gCldoYXQgYXJlIHRoZSBkaXNlbmdhZ2VtZW50IHJlcG9ydHMgYW55aG93PyBXaGF0IGFyZSB0aGV5IHN1cHBvc2VkIHRvIGRvPyBJdCB0aGVhdHJlLiAKQnV0IG1vc3Qgb2YgdGhlIHNvbGRpZXJzIEkgZW5jb3VudGVyZWQgam9pbmVkIHRoZSBtaWxpdGFyeSBiZWNhdXNlIHRoZXkgbG92ZSB0aGVpciBjb3VudHJ5IGFuZCB3YW50ZWQgdG8gZG8gd2hhdCB3YXMgcmlnaHQuIFRoZXkgYWxzbyBqb2luZWQgdG8gZ2V0IGEgY29sbGVnZSBkZWdyZWUgYW5kIGEgYmV0dGVyIGxpZmUgZG93biB0aGUgcm9hZC4gV2hhdCB0aGV5IGVuY291bnRlcmVkIGluIElyYXEgKGFuZCBmb3Igc29tZSByZWFzb24gdGhleSBoYWQgYWxsIHNlcnZlZCBpbiBJcmFxKSB3YXMgcmFjaXNtIGFnYWluc3QgdGhlIElyYXFpIHBlb3BsZSwgcmVsaWdpb3VzIGJpZ290cnksIGFuZCBldmVuIHJhY2lzbSBhbmQgcmVsaWdpb3VzIGJpZ290cnkgd2l0aGluIHRoZSBtaWxpdGFyeSBpdHNlbGYuIFRoZXkgYWxzbyBlbmNvdW50ZXJlZCB0aGUgdHJ1dGggdGhhdCBBbWVyaWNhIGhhZCBiZWVuICJtaXNsZWQiIChsaWVkIHRvKSBhYm91dCB0aGUgcmVhc29ucyBmb3IgYmVpbmcgaW4gSXJhcS4gQW5kIGZpbmFsbHksIHRoZXkgZW5jb3VudGVyZWQgdGhlIGF3ZnVsIHRydXRoIHRoYXQgdGhleSBjb3VsZCBiZSBzZW50IGJhY2sgaW5kZWZpbml0ZWx5LCB0aGF0IG1ha2luZyBpdCB0aHJvdWdoIG9uZSBvciBldmVuIHR3byB0b3VycyBvZiBkdXR5IGRpZCBub3QgZ3VhcmFudGVlIHRoZW0gZnJlZWRvbS4KQXQgd2hhdCBwb2ludCBjYW4geW91IHdyaXRlIHRoYXQgbGlhYmlsaXR5IG9mZiBhbmQgY29uc2lkZXIgdGhlIG1vbmV5IHlvdSBicm91Z2h0IGluIGFzIHByb2ZpdD8gSW4gc29tZSBzdGF0ZXMgbGlhYmlsaXRpZXMgbGlrZSB0aGlzIGFyZSB0dXJuZWQgb3ZlciB0byB0aGUgc3RhdGUgYWZ0ZXIgc28gbWFueSB5ZWFycy4gClN0YXJ0IHdpdGggc2hvb3RpbmcgZm9yIDMwIHNlYyBnb2FscyBhbmQgd29yayB1cC4gWW91IHdvbid0IGJlIGFibGUgdG8sIGJ1dCB0aGF0IGlzIG9rYXkuIEl0IHdpbGwgZ2V0IGJldHRlci4uIApJIGhhZCBhIGNvdXNpbiB3aG8gaGFkIGFuIElRIG9mIDE1MCsgYW5kIHdhcyB0b3Agc2NvcmVyIGluIGhpcyBjb2hvcnQgd2hpbGUgYXQgYSBwcmVzdGlnaW91cyBmb3JlaWduIHVuaXZlcnNpdHkuIApUaGUgZ3JhbmRtb3RoZXIga25ldyB0aGUgdHdpbiB3YXMgYWxsZXJnaWMsIGJ1dCBzaGUgaGFkIG5ldmVyIHRha2VuIGl0IHNlcmlvdXNseSBiZWNhdXNlIHRoZWlyIGN1bHR1cmUgdXNlZCBpdCBzbyBtdWNoLiAKQWxzbywgYSByZXB1dGFibGVvbmxpbmUgcG9rZXJzaXRlIGhhcyB0aGUgb3B0aW9uIG9mIHBsYXlpbmcgZm9yIGZyZWUuIFRoaXMgbWVhbnMgYSBsb3Qgb2Ygcm9va2llIHBsYXllcnMgY2FuIHRyYWluIHRoZW1zZWx2ZXMgd2l0aG91dCByaXNraW5nIGEgZG9sbGFyLiBXaGVuIG9uZSBpcyBjb25maWRlbnQgZW5vdWdoIHRoZW4gaGUgb3Igc2hlIGNhbiBlYXNpbHkgc2lnbiB1cCBhbmQgcGxheSB3aXRoIHJlYWwgbW9uZXkgdG8gd2luLgpHcm9zc1Bva2VyICA0IHBvaW50cyAgc3VibWl0dGVkIDEgeWVhciBhZ28KTm8gYW1vdW50IG9mIG91dGNyeSBvbiBSZWRkaXQgb3IgdGhlaXIgb3duIGZvcnVtcyBhcmUgZ29pbmcgdG8gY2hhbmdlIGFueXRoaW5nLiAKSGVyamF2ZWMgc2hhcmVzIGluIGhpcyBwcml2YXRlIGNvbXBhbnkuIApUaGUgaXMgdG8gbGF1bmNoIGEgdGhyZWUgcHJvbmdlZCB0aHJ1c3QgdG8gcmV0YWluIHBvd2VyLCBhbmQgdGFsayB0byBqdXN0IGFib3V0IGV2ZXJ5Ym9keSB0byBzZWUgd2hvIGN1dCB0aGUgYmVzdCBkZWFsLiAKRXZlcnkgdm90ZSB3b3VsZCBub3cgY291bnQgc28geW91IGNvdWxkIHNlZSBhIFJlcHVibGljYW4gY2FtcGFpZ25pbmcgaW4gUmhvZGUgSXNsYW5kIGJlY2F1c2UgdGhlIHJlcHVibGljYW5zIHRoZXJlIHdpbGwgbm8gbG9uZ2VyIGJlIGVzc2VudGlhbGx5IGRpc2VuZnJhbmNoaXNlZCBieSB0aGUgZWxlY3RvcmFsIGNvbGxlZ2UuIApJIGNhbiB0ZWxsIHlvdSBpcyBoZSB3YXMgYSBncmVhdCBwbGF5ZXIuIApDYXJlIG9mIHRoZWlyIGZlZXQgaXMgb25lIG9mIHRoZSBtb3N0IGltcG9ydGFudCB0aGluZ3MgdGhlc2UgZ3V5cyBjYW4gZG8sIE9zdGVybWFuIHNhaWQuIHdhcyBhIHN0aWdtYSBmb3IgYSBsb25nIHRpbWUgd2hlcmUgZ3V5cyBkaWRuIGdvIGdldCBwZWRpY3VyZXMsIGFuZCB0aGVuIGd1eXMgbGlrZSBTaGFxIGFuZCBEd3lhbmUgV2FkZSBhbmQgTGVCcm9uLCB0aGV5IG1hZGUgaXQgcG9wdWxhci4gQW5kIHlvdSBrbm93IHdoYXQ/IElmIHRoZSBzdGFycyBjYW4gZG8gaXQsIHRoZW4gaXQgT0suIFNvLCBpdCByZWFsbHkgZ290dGVuIGJldHRlci4gQWNyb3NzIHRoZSBsZWFndWUsIHNldmVyYWwgdGVhbXMgaGF2ZSBhbHNvIHByb21vdGVkIGJldHRlciBmb290IGNhcmUuClNvIGZhciwgdGhlcmUgYXJlIHRocmVlIHNwaGVyZXMsIHdoZXJlIHlvdSBjYW4gZmluZCBhIGxvbmcgdGVybSB3aW4sIGFyZSBwb2tlciB0YWJsZSwgc3BvcnRzIGJldHMsIGFuZCBibGFja2phY2suIFdoZW4geW91IHBsYXkgcG9rZXIsIHlvdSBwbGF5IHdpdGggb3RoZXIgcGxheWVycywgbm90IGFnYWluc3QgdGhlIGNhc2luby4gCk1hcnF1ZXR0ZSBCYW5rIERlY2lzaW9uCkluIGEgMjAxMiBjYXNlLCBKYW1lcyB2IHRoZSBDaXR5IG9mIENvc3RhIE1lc2EsIHRoZSBOaW50aCBDaXJjdWl0IHJ1bGVkIHdpdGggcmVzcGVjdCB0byBUaXRsZSBJSSBvZiB0aGUgQURBIChjb25jZXJuaW5nIGRpc2NyaW1pbmF0aW9uIGluIHRoZSBwcm92aXNpb24gb2YgcHVibGljIHNlcnZpY2VzKSB0aGF0IHRoZSBBY3QgZG9lcyBub3QgcHJvdGVjdCBpbmRpdmlkdWFscyB3aG8gY2xhaW0gZGlzY3JpbWluYXRpb24gYmFzZWQgb24gdGhlaXIgbWVkaWNhbCB1c2Ugb2YgbWFyaWp1YW5hLiAKSSBub3QgaGVyZSB0byBkcmFnIG9uIHRoZSBndXkgcGllY2Ugb3IgYW55dGhpbmcsIGJ1dCBJIHdvdWxkIGxpa2UgdG8gY2xhcmlmeSBzb21lIHRoaW5ncyBhYm91dCBzb21lIG9mIHRoZSBkaXNjb3Vyc2UgSSBzZWVpbmcgYXJvdW5kIHRoZXNlIGhlcmUgaW50ZXJ3ZWJzLiAKSGUgd2FzIGFsd2F5cyBmaWdodGluZyBmb3Igd2hhdCB3YXMgcmlnaHQsIHdoYXQgd2FzIGdvb2QgZm9yIHRoZSBwZW9wbGUuIGhpcyBvbmx5IGNyaW1lIHdhcyB0aGF0IGhlIHdhc24gdGhlIHVuZGVyZG9nLCBzbyB2aWV3ZXJzIGNoZWVyZWQgZm9yIHRoZSAicmViZWxzIiwgd2hpbGUgdGhlIGdhbGF4eSBoYWQgdG8gc3VmZmVyIGZvciB0aGVpciBmb29saXNobmVzcy4gaGUgd2FzIHBvc3NpYmxlIHRoZSBvbmx5IHJlYWwgaGVybyBvZiB0aGUgU3RhciBXYXJzIHNhZ2EsIGFuZCBpdCBzaGFtZWZ1bCBhbmQgZGlzYXBwb2ludGluZyBhbnlvbmUgd291bGQgdGFsayBhYm91dCBoaW0gbGlrZSB0aGF0LgpTb3JyeSBpZiB0aGF0IGFkdmljZSBpcyBhIGxvdCBtb3JlIGdlbmVyYWwgdGhhbiB5b3Ugd2FudGVkLCBidXQgZnJvbSB3aGVyZSBpdCBsb29rcyBsaWtlIHlvdSdyZSBhdCwgZG9pbmcgYmFzaWNhbGx5IGFueXRoaW5nIGNvbnNpc3RlbnRseSB3aXRoIGEgbG90IG9mIGZvb2Qgd2lsbCBnZXQgeW91IGdvb2QgcmVzdWx0cyBmb3IgcXVpdGUgYXdoaWxlLiBMYXN0bHksIG1heWJlIHRoaXMgaXMgdGhlIHBvd2VybGlmdGVyIGluIG1lLCBidXQgSSB3b3VsZG4ndCB3YXN0ZSB0byBtdWNoIHRpbWUgb24gYSBsb3Qgb2YgYXNzaXN0YW5jZSBleGVyY2lzZXMgZm9yIG5vdy4gClRoZSBUdXJuIFdoZW4gdGhlIGJldHRpbmcgcm91bmQgYWZ0ZXIgdGhlIGZsb3AgaXMgY29tcGxldGVkLCB0aGUgZGVhbGVyIHR1cm5zIGEgZm91cnRoIGNhcmQgZmFjZSB1cCBpbiB0aGUgbWlkZGxlIG9mIHRoZSB0YWJsZS4gClVzZSB0aGUgdGF4aSBpZiB5b3UgaGF2ZSBsb3RzIG9mIHNob3BwaW5nIGFuZCB0b28gdGlyZWQgdG8gdXNlIHRoZSBNZXRybyBvciB5b3UgbG9va2luZyBmb3IgYSBkZXN0aW5hdGlvbiB0aGF0IGlzIG5vdCBvbiB0aGUgTWV0cm8gc3lzdGVtLjIgdm90ZXMuIApFeHRyYW5lb3VzIG1vdmVtZW50cyBzdWNoIGFzIGppZ2dsaW5nIHlvdXIga25lZSwgYm9iYmluZyB5b3VyIGhlYWQsIG9yIHNoaWZ0aW5nIHlvdXIgd2VpZ2h0IHdlYWtlbiB5b3VyIHBlcnNvbmFsIHBvd2VyLiBZb3UgbWlnaHQgc2F5LCAiSSBjYW4ndCBoZWxwIG15c2VsZi4gSSBqdXN0IGNhbid0IGJlIHN0aWxsLiIgVHJ1dGggaXMsIGV4Y2Vzc2l2ZSBmaWRnZXRpbmcgaXMgYSBzZWxmIGNvbWZvcnRpbmcgYmVoYXZpb3IuIFN0aWxsbmVzcyBzZW5kcyBhIG1lc3NhZ2UgdGhhdCB5b3UncmUgY2FsbSBhbmQgY29uZmlkZW50LgpVcHBkYXRlcmluZ2FyIHAgc25hYmJhIHByb2R1a3RlciBmIHIgQ2FzaW5vQm9udXMgc2xvdHMgciBkZSBzb20gZXJianVkZXIgZW4gYm9udXMgc3BlbGV0IGZ1bmt0aW9uZW4gYXR0IG1vZGVsbCB0IGcgbiByIGRlbiBmIHJzdGEga29tbWVyc2llbGxhIGtvcnRwbGF0cyBiaWxlbiBnam9yZGVzIGF2IExpb25lbCBvY2ggaSBkZXJhcyAxOTEyIGthdGFsb2cuIApBaGhoLiAKQSBiaXQgdGlnaHQgb24gY2FzaCwgSSBzb3VnaHQgb3V0IGEgcGFydG5lciB0byBzcGxpdCB0aGUgcHVyY2hhc2Ugb2YgYSBkaXN0cmVzc2VkIHNpeCB1bml0IGJ1aWxkaW5nLi4gCkFuZCB3aG8gdG8gc2F5IGl0IHdvdWxkbiBiZSBmb3JjZWQgb24gdGhvc2Ugd2hvIGFyZSAiaGlnaCBmdW5jdGlvbmluZyI/IFdoYXQgZGV0ZXJtaW5lcyAiaGlnaCBmdW5jdGlvbmluZyI/IFRoZXJlIGp1c3QgdG9vIG1hbnkgdmFyaWFibGVzIGZvciBpdCB0byBiZSBldGhpY2FsIGltby4uIApBcyBmb3IgdGhlIGZpbmFsIHRoaXJkLCB0aGUgYWN0IGlzIGZpbmFuY2luZyB0aGUgbGFyZ2VzdCBpbnZlc3RtZW50IGluIHJvYWRzIHNpbmNlIHRoZSBjcmVhdGlvbiBvZiB0aGUgSW50ZXJzdGF0ZSBoaWdod2F5IHN5c3RlbTsgY29uc3RydWN0aW9uIHByb2plY3RzIGF0IG1pbGl0YXJ5IGJhc2VzLCBwb3J0cywgYnJpZGdlcyBhbmQgdHVubmVsczsgbG9uZyBvdmVyZHVlIFN1cGVyZnVuZCBjbGVhbnVwczsgdGhlIGNyZWF0aW9uIG9mIGNsZWFuIGVuZXJneSBqb2JzIG9mIHRoZSBmdXR1cmU7IGltcHJvdmVtZW50cyBpbiBiYWRseSBvdXRkYXRlZCBydXJhbCB3YXRlciBzeXN0ZW1zOyB1cGdyYWRlcyB0byBvdmVydGF4ZWQgbWFzcyB0cmFuc2l0IGFuZCByYWlsIHN5c3RlbXM7IGFuZCBtdWNoIG1vcmUuIFRoZXNlIGludmVzdG1lbnRzIGNyZWF0ZSBqb2JzIHRvZGF5ICAgYW5kIHN1cHBvcnQgZWNvbm9taWMgZ3Jvd3RoIGZvciB5ZWFycyB0byBjb21lLiBGYXIgZnJvbSBiZWluZyBhIG5lZ2F0aXZlLCB0aGUgd2lkZSBhcnJheSBvZiB0aGVzZSBpbnZlc3RtZW50cyBpcyBuZWVkZWQgZ2l2ZW4gdGhlIGluY3JlZGlibGUgZGl2ZXJzaXR5IG9mIHRoZSBBbWVyaWNhbiBlY29ub215Li4gCkppbmRhYnluZSBpcyBhIG5pY2Ugc3RvcCBvdmVyIGZvciB0aGUgbmlnaHQuIEtheWFraW5nIHRoZSBsYWtlIGlzIGZ1bi4gVGhlcmUgaXMgbW91bnRhaW4gYmlraW5nIGFuZCBmaXNoaW5nIGlmIHlvdSBhcmUga2Vlbi4gU29tZSBkZWNlbnQgcGxhY2VzIHRvIGVhdCBhcyB3ZWxsLgpUZXJtaW51c19lc3QyMyAgIDggcG9pbnRzICBzdWJtaXR0ZWQgMiBtb250aHMgYWdvCkkgaGFkIG5vIGlkZWEgd2hhdCB0byBkby4gCkhhdmUgYSB0cmVtZW5kb3VzIGJlbGllZiBpbiBBbGV4IGFuZCB3aGF0IGhlIGhhcyBhY2NvbXBsaXNoZWQgd2l0aCBtZSwgQnJhZHkgc2FpZCBpbiBPY3RvYmVyIG9uIFdFRUkuIApEZXNoYXVuIFdhdHNvbiBpcyBoZWFsdGh5LiBXYXR0IGlzIGhlYWx0aHkuIFRoZSBUZXhhbnMgc3RpbGwgaGF2ZSBvZmZlbnNpdmUgbGluZSBhbmQgZGVmZW5zaXZlIGJhY2tmaWVsZCBpc3N1ZXMsIGJ1dCB0aG9zZSB0d28gZ3V5cyBjYW4gbWFrZSB1cCBmb3IgdGhlIGRlZmljaWVuY2llcyBhbmQgZ2V0IEhvdXN0b24gYmFjayBpbnRvIHRoZSB3aWxkIGNhcmQgaHVudC4KRGlkIHlvdSBrbm93IHRoYXQgOTUgcGVyY2VudCBvZiBhbGwgcmV0YWlsIHNhbGVzIGluIFN3ZWRlbiBhcmUgY2FzaGxlc3M/IEFuZCBkaWQgeW91IGtub3cgdGhhdCB0aGUgZ292ZXJubWVudCBvZiBEZW5tYXJrIGhhcyBhIHN0YXRlZCBnb2FsIG9mICJlcmFkaWNhdGluZyBjYXNoIiBieSB0aGUgeWVhciAyMDMwPyBBbGwgb3ZlciB0aGUgd29ybGQsIHdlIGFyZSBzZWVpbmcgYSByZWxlbnRsZXNzIG1hcmNoIHRvd2FyZCBhIGNhc2hsZXNzIHNvY2lldHksIGFuZCBub3doZXJlIGlzIHRoaXMgdHJ1ZXIgdGhhbiBpbiBub3J0aGVybiBFdXJvcGUuIEluIFN3ZWRlbiwgaHVuZHJlZHMgb2YgYmFuayBicmFuY2hlcyBubyBsb25nZXIgYWNjZXB0IG9yIGRpc3BlbnNlIGNhc2gsIGFuZCB0aG91c2FuZHMgb2YgQVRNIG1hY2hpbmVzIGhhdmUgYmVlbiBwZXJtYW5lbnRseSByZW1vdmVkLiAKKGFzIGEgc2lkZSBub3RlLCByYW50aW5nIGlzbiByZWFsbHkgYWxsb3dlZCB0aGVyZSlmb3IgdGhlIHJlY29yZCBJIGZ1Y2tpbmcgbG9vb29vb29vb29vb292ZSB0byBDTyBteSBNSUwuVGhpcyBjYW4gYmUgYSBwbGFjZSB0byB2ZW50IG9yIGFzayBmb3IgY29uc3RydWN0aXZlIGFkdmljZSBhcyB0byBob3cgcHJvY2VlZCB3aXRoIGEgamVyayBNSUwuIEFuZCBzb21lIHBlb3BsZSBhcmUgbmF0dXJhbGx5IG1vcmUgYWxwaGEgYW5kIGdvIHN0cmFpZ2h0IHRvIFQvTyAodGltZSBvdXQpIEMvTyAoY3V0IG9mZikgb3IgRGl2b3JjZS4gVGhleSBnb25uYSBkbyB0aGVtIGFuZCBob25lc3RseSwgc29tZSBvZiB0aG9zZSBjb21tZW50cyBhcmUgd2hhdCBwdXNoZWQgbWUgdG8gdGFrZSBhIGNvdXJzZSBvZiBhY3Rpb24gdG8gdGVsbCBteSBNSUwgaXQgd2FzIHRpbWUgZm9yIGhlciB0byB0YWtlIGEgYmFjayBzZWF0IGluIG15IGxpZmUuIApSaWRlIGZvciBIZXJvZXMgUG9rZXIgUnVuCk1vc3QgUGFraXN0YW5pcyBzaW1wbHkgZG9uIGJlbGlldmUgdGhhdCB0aGUgUGFraXN0YW5pIHN0YXRlIGlzIGNhcGFibGUgb3Igd2lsbGluZyB0byB0YWtlIG9uIHRoZSBjcmltaW5hbCBtYWZpYSwgdGhlIGV4dG9ydGlvbmlzdHMgYW5kIHRob3NlIGNhcnJ5aW5nIG91dCB0YXJnZXRlZCBraWxsaW5ncyB3aG8gYXJlIG1hcmtpbmcgdGhlaXIgZXRobmljIHRlcnJpdG9yeSB3aXRoIGJsb29kLiBNb3N0IFBha2lzdGFuaXMgYWxzbyBkb24gYmVsaWV2ZSB0aGF0IHRoZSBNUU0gaGFzIGEgbWFqb3IgcHJvYmxlbSB3aXRoIHRoaXMgbWFmaWEsIHRoZXNlIGV4dG9ydGlvbmlzdHMgYW5kIHRoZXNlIGtpbGxlcnMuIApZb3UgYXJlIGp1c3QgZW1vdGlvbmFsbHkgb3ZlcndoZWxtZWQuIFlvdSB3YW50IHRvIHJlbGVhc2UgYSBncmVhdCBkZWFsIG9mIGludGVybmFsaXplZCBhbmd1aXNoLCB0aGF0IGhhcyBwcm9iYWJseSBhY2NydWVkIG92ZXIgYSBsb25nIHRpbWUuIFRoaXMgaXMgdmVyeSBoYXJkLiBCdXQgdGhpcyBpcyBhbHNvIGJlYXV0aWZ1bC4gSWYgeW91IGNhbiBvdmVyY29tZSB0aGlzIGNoYWxsZW5nZSwgaXQgd2lsbCBjZXJ0YWlubHkgcHV0IGEgbG90IG9mIHBlcnNwZWN0aXZlIG9udG8gYW55IGNoYWxsZW5nZXMgeW91IGZhY2UgaW4gdGhlIGZ1dHVyZS4gCldlIGFyZSB2ZXJ5IG11Y2ggbG9va2luZyBmb3J3YXJkIHRvIHlvdXIgbmV4dCB2aXNpdCEgWW91ciBCMiBHdWVzdCBBbWJhc3NhZG9yIEFyaWFuZSBEcm9zc1Jlc3BvbnNlIGZyb20gQjJCb3V0aXF1ZUhvdGVsLCBEaXJlY3RvciBvZiBTYWxlcyBhdCBCMiBCb3V0aXF1ZSBIb3RlbCArIFNwYVJlc3BvbmRlZCBKYW4gMzAsIDIwMTlEZWFyIE9keXNzZXk0OTA0NjQ1NjgwMCBNYW55IHRoYW5rcyBmb3IgdGhpcyBhbWF6aW5nIHJldmlldy4gCkFmdGVyIGEgbG9uZyBoaWF0dXMgZHVyaW5nIHRoZSBtaWRkbGUgb2YgdGhlIGRlY2FkZSwgYmV0d2VlbiAyMDA0IGFuZCAyMDA3LCBzaGUgY2FtZSBiYWNrIHN0cm9uZ2VyIHRoYW4gZXZlciBpbiAyMDA4IHdpdGggaGVyIGZpcnN0IG51bWJlciBvbmUgaGl0ICJXb21hbml6ZXIiIGFuZCB3ZW50IG9uIHRvIGhhdmUgYW5vdGhlciBudW1iZXIgb25lIHdpdGggIjMiIGluIDIwMDkuIApQZXQgaGltLCBmZWVsIGhpcyBzb2Z0IGZ1ciBhbmQgaGlzIHdhcm10aC4gQ2xvc2UgeW91ciBleWVzIGFuZCBidXJ5IHlvdXIgbm9zZSBpbiB0aGUgc2NydWZmIG9mIGhpcyBuZWNrIGFuZCByZW1lbWJlciB0aGUgc2NlbnQgb2YgeW91ciBtb3N0IGRldm90ZWQgZnJpZW5kLiBHaXZlIGhpbSBhbGwgdGhlIHBldHMgeW91IGNhbiBhbmQgY29tbWl0IHRoZSBmZWVsIG9mIGhpcyBzaWxreSBmdXIgaW4geW91ciBoZWFydCBhbmQgbWluZC4KV2hlbiBkZWFsaW5nIHdpdGggeW91ciBvd24gY29tcGFueSwgcmVnYXJkbGVzcyBvZiB3aGF0IHlvdSBzZWxsLCBpdCBpcyBhYnNvbHV0ZWx5IGVzc2VudGlhbCB0byBrZWVwIGFjY3VyYXRlIGFuZCBkdXBsaWNhdGUgcmVjb3Jkcy4gVGhpcyBpcyBlc3BlY2lhbGx5IHRydWUgd2hlbiBpdCBjb21lcyB0byBjb250ZW5kaW5nIHdpdGggcmVjZWlwdHMgZm9yIHRoYXQgYnVzaW5lc3MuLiAKRm9yZWdvIHRoZSBTbWVsbHkgRm9vZCBKdXN0IGJlY2F1c2UgZ2FybGljIHNhdWVya3JhdXQgaXMgeW91ciBmYXZvcml0ZSBmb29kIGRvZXNuJ3QgbWVhbiB0aGF0IGV2ZXJ5b25lIGluIHRoZSBvZmZpY2Ugd2lsbCBhZ3JlZS4gTGVhdmUgcHVuZ2VudCBzbWVsbGluZyBmb29kIGF0IGhvbWUgYW5kIGlmIHNvbWV0aGluZyB5b3UgY29vayBnaXZlcyBvZmYgYSBzdHJvbmdlciB0aGFuIGV4cGVjdGVkIG9kb3IsIGFpciBvdXQgdGhlIHJvb20gYnkgb3BlbmluZyBhIHdpbmRvdyBvciBzcHJheSB0aGUgcm9vbSB3aXRoIGFpciBmcmVzaGVuZXIuCkVhdCBoZWFsdGh5LiBLZWVwaW5nIGEgaGVhbHRoeSBib2R5IGlzIHZlcnkgaW1wb3J0YW50IGluIGJlaW5nIGEgZ29vZCB3aWZlLiBOYXR1cmFsbHksIGl0IHdpbGwgZG8gd29uZGVycyB0byB5b3VyIHNlZHVjdGl2ZSBwbGFuLiBBIGdyZWF0IGZhY3RvciBpbiBrZWVwaW5nIHlvdXIgYm9keSBpbiBwZXJmZWN0IGZpdCBpcyBieSBlYXRpbmcgdGhlIHJpZ2h0IGtpbmQgb2YgZm9vZC4gSGF2aW5nIGEgcHJvcGVyIGRpZXQgbWVhbnMga2VlcGluZyBhd2F5IGZyb20gZmF0dHkgZnJpZWQgZm9vZCBzZWxlY3Rpb25zLiBSZWZpbmVkIHN1Z2FyIGFuZCBsb3RzIG9mIGNhcmJvaHlkcmF0ZXMgYXJlIGp1c3QgYXMgZGVzdHJ1Y3RpdmUgdG8gYm90aCB5b3VyIGhlYWx0aCBhbmQgYm9keSBmaWd1cmUuIElkZWFsIHNlbGVjdGlvbnMgd291bGQgYmUgZnJlc2ggdmVnZXRhYmxlcywgZnJ1aXRzLCB3aGl0ZSBtZWF0IGFuZCBmaXNoLiBFeGNoYW5nZSB5b3VyIGFsY29ob2xpYyBhbmQgY2FyYm9uaWMgZHJpbmtzIHdpdGggd2F0ZXIgYW5kIHRlYS4gQmUgZnVsbHkgaHlkcmF0ZWQgYWxsIHRoZSB0aW1lLiBEcmluayBhdCBsZWFzdCBlaWdodCBnbGFzc2VzIG9mIHdhdGVyLiBUaGlzIGRpZXQgaXMgZ3VhcmFudGVlZCB0byBtYWtlIHlvdSBmZWVsIGJldHRlciBhYm91dCB5b3Vyc2VsZi4gWW91IHdpbGwgZmVlbCBsZXNzIGJsb2F0ZWQgYW5kIHRodXMgc2V4aWVyLiBJdCBpcyBub3QgaG93ZXZlciwgYSBvbmUgbmlnaHQgYWZmYWlyLiBSYXRoZXIgaXQgaXMgYSBwcm9jZXNzIHRoYXQgdGFrZXMgdGltZS4gSnVzdCByZW1lbWJlciB0byBub3Qgc3RvcCB5b3VyIGJlYXV0eSBhbmQgaGVhbHRoIHJlZ2ltZW5zLgpJIHVzZWQgdGhlIHBocmFzZSBJIHVzZWQgYmVjYXVzZSBtb3N0IG9mIHRoZSBjb21tZW50cyBhcmUgc2F5aW5nIGV4YWN0bHkgd2hhdCBJIHNhaWQuIFRoaXMgcGVyc29uIGlzbid0IHNob3ZpbmcgYW55dGhpbmcgZG93biB0aGUgdGhyb2F0IG9mIHRoZWlyIHNvbiwgcmF0aGVyLCB0aGV5IHNob3dlZCB0aGVtIHdoaWNoIHJlbGlnaW9uIHRoZXkgYmVsaWV2ZSBpbi4gClJlc2lzdGFuY2U6IDcwJSByZXMgaXMgdGhlIGFic29sdXRlIG1pbmltdW0sIGFsdGhvdWdoIGZvciBQdlAgSSByZWFsbHkgdGhpbmsgbWF4IHJlcyBpcyBtYW5kYXRvcnkgZXNwZWNpYWxseSBmb3IgYSBTa29ndWwgc2xvd2VyIHRoYW4gbGlrZSAxODAuIFRoZSByZWFzb24gZm9yIHRoaXMgaXMgdGhhdCBoZSBpcyBnb2luZyB0byBnZXQgaGl0LiBJbiBmYWN0LCBpbiBvZmZlbnNlLCB5b3Ugb2Z0ZW4gZW5kIHVwIGRlc2lnbmluZyB0ZWFtcyBhcm91bmQgaGltIGdldHRpbmcgaGl0LiAKVGhpcyBpc24ndCBsaWtlIENvRCB3aGVyZSB0aGUgbXVsdGlwbGF5ZXIgaXMgdGhlIG1haW4gZHJhdyBvZiB0aGUgZ2FtZSBiZWNhdXNlIGlmIGl0IHdhcyB0aGV5IHdvdWxkJ3ZlIHJlbGVhc2VkIGl0IHRoZSBzYW1lIGRheSBhcyB0aGUgbWFpbiBnYW1lLi4gCllvdSdyZSBnb2luZyB0byBzZWUgaGVhZGxpbmUgYWZ0ZXIgaGVhZGxpbmUgYWJvdXQgaG93IGxpdHRsZSBhbGwgdGhlc2UgdGVjaCBzdGFydHVwcyBhcmUgcGF5aW5nIGluIHRheGVzIG9uY2UgdGhleSB0dXJuIHByb2ZpdGFibGUsIGJlY2F1c2UgcGxlbnR5IG9mIHRoZW0gaGF2ZSBiZWVuIGJ1cm5pbmcgY2FzaCBmb3IgeWVhcnMuIElmIHRoZXkgbG9zdCB0aGUgZGVkdWN0aWJpbGl0eSBvZiB0aGVpciBzdGFydHVwIGV4cGVuc2VzIGJlY2F1c2UgdGhleSBkaWRuJ3QgbWFrZSBlbm91Z2ggcHJvZml0IGluIHRoZSB5ZWFyIHRoZSBleHBlbnNlcyB3ZXJlIGFjY3J1ZWQsIHRoZXJlIHdvdWxkIGJlIGEgbWFzc2l2ZSBkaXNpbmNlbnRpdmUgdG8gc3RhcnQgdXAgbmV3IGJ1c2luZXNzZXMgYW5kIGEgSFVHRSBhZHZhbnRhZ2UgdG8gYWxyZWFkeSBiaWcgYnVzaW5lc3Mgd2hpY2ggd291bGQgaGF2ZSB0aGUgcHJvZml0cyB0byB1c2UgdGhlIGRlZHVjdGlvbnMgdGhhdCB5ZWFyLgpJZiB5b3UgaGF2ZSB0aGUgbW9uZXkgdG8gd2FzdGUsIGdvIGZvciBpdC4gVGhlIHBvaW50IG9mIGxheWVyaW5nIGl0IGlzIHRoaXM6IHRoZSByYW1wIHdpbGwgc2thdGUgZmFzdGVyIHdoZW4geW91IGFyZSByaWRpbmcgd2l0aCB0aGUgZ3JhaW4gYW5kIHNsb3dlciB3aGVuIHlvdSBhcmUgcmlkaW5nIGFjcm9zcyB0aGUgZ3JhaW4uIERpYWdvbmFsIGxheWVyaW5nIG1heSBwcm92aWRlIHRoZSBiZXN0IGNvbXByb21pc2UsIGJ1dCBpdCB0ZW5kcyB0byBiZSBhIGJpZyBwYWluIGluIHRoZSBhc3MgYW5kIGEgd2FzdGUgb2YgcGx5d29vZC4gSSBzdWdnZXN0IHB1dHRpbmcgdGhlIHN1cmZhY2Ugb24gc28gdGhhdCB0aGUgZ3JhaW4gcnVucyBsZW5ndGh3aXNlIG9uIHRoZSByYW1wLiBZb3UgY292ZXIgbW9yZSBncm91bmQgZ29pbmcgYmFjayBhbmQgZm9ydGggdGhhbiB5b3UgZG8gYWxvbmcgdGhlIGNvcGluZywgc28gdGhpcyBzaG91bGQgbWFrZSBpdCBuaWNlIGFuZCBmYXN0LgpTbWl0aCwgYSAyNSB5ZWFyIG9sZCBjb2xsZWdlIGRyb3BvdXQgd2hvIGZhY2VzIHVwIHRvIGEgeWVhciBpbiBwcmlzb24sIGxpdmVzIGluIEhvbGx5d29vZCwgQ2FsaWYuLCBoYXMgZGFiYmxlZCBpbiBmaWxtbWFraW5nIGFuZCBoYXMgYSBzaXplYWJsZSBmb2xsb3dpbmcgb24gVHdpdHRlci4gSGUgYSBsaXZpbmcgYnkgbGF3ZnVsIHBva2VyIHBsYXlpbmcgYW5kIHBva2VyIHRvdXJuYW1lbnRzIGFuZCBzdXBwb3J0cyBtZW1iZXJzIG9mIGhpcyBmYW1pbHkgdGhhdCB3YXksIGhpcyBsYXd5ZXIsIE1hcmsgTWFjRG91Z2FsbCwgdG9sZCB0aGUganVkZ2UuCk1vcmVvdmVyLCB0aGV5IGhhdmUgbWFzc2l2ZSBjb21tYW5kIG9mIHRoZSBpbmZvcm1hdGlvbiBtYXJrZXQuV2UgaGF2ZSBnb3QgdG8gZmluZCBhIHdheSB0byBoYW1wZXIgdGhlaXIgaW5mbHVlbmNlIG92ZXIgcHVibGljIG9waW5pb24sIGFuZCB0aGUgZWZmb3J0cyBvZiBhbGwgc2xlYXplIG1hY2hpbmVzIGxpa2UgdGhlbSAgIHdoaWxlIHByZXNlcnZpbmcgZnJlZSBzcGVlY2guVGhhdCB3aWxsIGJlIHRvdWdoLCBidXQgaXQncyBzaW1wbHkgbm90IG5lZ290aWFibGUuIApBbHdheXMgc29tZW9uZSB3aXRoIHNvbWV0aGluZyB0byBzYXksIHJpZ2h0PyBXZWxsLCBpdCB3YXMgbmV2ZXIgYW55dGhpbmcgYmFkLCBidXQgdW5mb3J0dW5hdGVseSB0aGUgY2xlYW5saW5lc3MgYW5kIG5ldyBsb29rIGR3aW5kbGUgaW4gYSBibGluayBvZiBhbiBleWUuIFdlIHdlcmUgaGF2aW5nIGEgaG91c2Ugd2FybWluZyBwYXJ0eSBmb3Igb3VyIHNvbiBSeWFuIGFuZCBoaXMgd2lmZSBTdGFjeSB3aGVuIHdlIGJyb3VnaHQgdGhlIGNha2UgaW4gYW5kIHdlbGwgaXQgZW5kZWQgdXAgb24gdG9wIG9mIG91ciBCbHVlIFBva2VyIFRhYmxlIEZlbHQgQ2xvdGguIElmIHdlIGNvdWxkIG9ubHkgc2hvdyB5b3UgdGhlIHBpY3R1cmVzIGJlY2F1c2UgdGhleSB3ZXJlIGFic29sdXRlbHkgaGlsYXJpb3VzLgpUd28gaW5kZXBlbmRlbnQgcmV2aWV3ZXJzIGV2YWx1YXRlZCB0cmlhbHMgZm9yIG1ldGhvZG9sb2dpY2FsIHF1YWxpdHkgYWNjb3JkaW5nIHRvIHRoZSBKYWRhZCBzY2FsZSwgd2hpY2ggYXdhcmRzIHBvaW50cyBmb3IgcmFuZG9taXNhdGlvbiwgYmxpbmRpbmcgYW5kIGZvbGxvdyB1cC4gCkkgZG9uIHRoaW5rIGl0IG91dCBvZiB0aGUgcmVhbG0gb2YgcG9zc2liaWxpdHkgdGhhdCBzaGUgd291bGQgc2hpcmsgdHJhZGl0aW9uIGFuZCBwaWNrIHVwIHJpZ2h0IHdoZXJlIHNoZSBhbmQgR2VuZHJ5IGxlZnQgb2ZmLkFuZCBJIHdpbGwgY2FycnkgdGhpcyB0b3JjaCB0byBteSBncmF2ZSBfKClfL1NvbXByYSAgMiBwb2ludHMgIHN1Ym1pdHRlZCA5IG1vbnRocyBhZ29BcyBhIHNwZWNpYWxpc3QgbWFpbiwgSSBvbmx5IHJlY2VudGx5IGZpbmlzaGVkIHVubG9ja2luZyBhbGwgdGhlIG90aGVyIGNsYXNzIHdlYXBvbnMgYW5kIGF0dGFjaG1lbnRzLCBhbmQgbGVhcm5lZCB0aGF0IHRoZSBzcGVjaWFsaXN0IGlzIHRoZSBvbmx5IGNsYXNzIHdpdGhvdXQgYSBuaWdodCB2aXNpb24gc2NvcGUgZm9yIGFueSB3ZWFwb24uIApUaGlzIGNyZWF0ZXMgdGhlIHZpc3VhbCBkaXNzb25hbmNlIHRoYXQgY2F1c2VzIHRoZSBwIHRvIGFwcGVhciBsb3dlciB0aGFuIHRoZSBvLi4gCkluIE9tYWhhLCBpdCdzIGhhcmRlciB0byByZXNvbHZlIHdoaWNoIGhhbmQgeW91ciBhZHZlcnNhcnkgaGFzIG9uIHRoZSBncm91bmRzLiAKTW9zdCBhdGhlcm9zY2xlcm90aWMgcGxhcXVlcyBhcmUgZmlybWx5IGJvbmRlZCB0byB0aGUgYXJ0ZXJ5IHdhbGwuIApCbG9jaCBzYXlzIHBva2VyIGFuZCBibGFja2phY2sgZ2l2ZSBoaW0gImRpZmZlcmVudCBraWNrcyIuIFdoaWxlIGhlIGhhcyB3b24gbW9yZSBtb25leSBhdCBwb2tlciwgYmxhY2tqYWNrIG1heSBiZSBoYXJkZXIuICJJJ3ZlIG5ldmVyIGJlZW4gYXJyZXN0ZWQgb3IgaGFkIHRvIHdvcnJ5IGFib3V0IHdobyBJIGFtIHBsYXlpbmcgcG9rZXIuIFlvdSBoYXZlIHRvIGhpZGUgd2hhdCB5b3UgaGF2ZSBpbiB5b3VyIGhhbmQgICBidXQgaW4gYmxhY2tqYWNrIHlvdSBoYXZlIHRvIGJlIGFjdGluZyB0aGUgZW50aXJlIHRpbWUgeW91J3JlIHBsYXlpbmcuIgpIaXMgY3VycmVudCBjb250cmFjdCBjYXJyaWVzIGhpbSB0aHJvdWdoIGhpcyBhZ2UgMzUgc2Vhc29uLCB0aGVuIGhlJ3MgYW4gdW5yZXN0cmljdGVkIGZyZWUgYWdlbnQuIApUb28gZmF0IHRvIHJ1biBhIDEwIG1pbnV0ZSBtaWxlPyBObyBkaXBsb21hIHVudGlsIHlvdSBjYW4uIAoxMi8zMS8yMDE1IDA1OjIwIFBNIE1TVCAgIEVhc3Qgb2YgTG9uZ21vbnQgb24gSGlnaHdheSAxMTksIHN1cnJvdW5kZWQgYnkgY2FyIGRlYWxlcnNoaXBzIGFuZCBhdXRvIHNob3BzLCB0d28gYnJvdGhlcnMgYXJlIHB1dHRpbmcgdGhlIGZpbmlzaGluZyB0b3VjaGVzIG9uIHdoYXQgdGhleSBob3BlIHdpbGwgYmVjb21lIHRoZSBuZXcgZXBpY2VudGVyIG9mIG5hdHVyYWwgZm9vZHMgaW4gQm91bGRlciBDb3VudHkuIEZ1bGwgU3RvcnkKQWxzbyBzcGVjaWFsIHRoYW5rcyB0byBhbGwgdGhlIGZyaWVuZHMgdGhhdCBoZWxwZWQgdG8gZmluaXNoIHRoZSBob3VzZSByZW5vdmF0aW9ucyB3aGlsZSBMb3Ugd2FzIHNpY2s7IERlYW4sIEJyYWQsIEtldmluIEIuLCBLZXZpbiBMLiwgR2FyeSwgUmljaywgSmVmZiwgUmF5LCBFdWdlbmUgYW5kIERvbm55LiAKVmFsZW50aW5lIERheSBpcyBqdXN0IGFyb3VuZCB0aGUgY29ybmVyIGFuZCB0aGlzIHllYXIsIHNob3cgc29tZW9uZSB5b3UgbG92ZSB0aGVtIGJ5IHBsYW5uaW5nIGEgcm9tYW50aWMgZ2V0YXdheSBmb3IgdHdvLiBXaGV0aGVyIHlvdSBqZXQgc2V0dGluZyB3aXRoIHlvdXIgc2lnbmlmaWNhbnQgb3RoZXIgb3IgbG9va2luZyB0byB0cmVhdCB5b3Vyc2VsZiwgdGhlc2UgY2l0aWVzIGFyZSBndWFyYW50ZWVkIHRvIHN3ZWVwIHlvdSBvZmYgeW91ciBmZWV0LiAKSSBoYWQgdG8ga25vdyBleGFjdGx5IHdoeSBEci4gCkl0IG1ha2VzIG1lIHJlYWxseSwgcmVhbGx5LCByZWFsbHksIHJlYWxseSwgcmVhbGx5IGNyYW5reS4gCkZhdCBjYXRzIHRha2Ugb3VyIG1vbmV5IHR3byB3YXlzOiBmaW5hbmNpYWxpemF0aW9uIGFuZCBnb3Zlcm5tZW50IGNvcnBvcmF0ZSB3ZWxmYXJlIGZpbmFuY2VkIHdpdGggb3VyIHRheCBkb2xsYXJzLi4gCiJUbyBteSB5b3VuZ2VyIHNlbGYgSSBzYXksICdEb24ndCBiZSB3b3JyaWVkIGFsbCB0aGUgdGltZS4gRG9uJ3QgYmUgc2NhcmVkLCciIHNoZSB0b2xkIHRoZSBUb2RheSBzaG93IHRoaXMgeWVhci4gIidUaGluZ3Mgd2lsbCBiZSBPSy4gYW5kIElyZWxhbmQuCldpY2toYW0gc2FpZCAicmVhbGx5IGxpc3RlbmluZyIgY2FuIGFkZHJlc3MgdGhpcyBraW5kIG9mIHByb2JsZW0gZ29pbmcgZm9yd2FyZC4KWW91IGNhbiBzdGlsbCBrZWVwIGNvc3RzIGxvdyBieSBnb2luZyB0aGUgcm91dGUuIApBIGNvbXBsaWNhdGVkIHRpbWVsaW5lIG9mIHRoZWlyIHJlbGF0aW9uc2hpcCBpcyBpbnRlcnR3aW5lZCB3aXRoIGEgcHJldmlvdXMgcmVsYXRpb25zaGlwIGZvciBoZXIgYW5kIGEgcHJldmlvdXMgbWFycmlhZ2UgZm9yIGhpbS4gCkNoZW1pY2FsbHkgdGhlcmUgcmVhbGx5IGlzbiBhIHdheSB0byBjb3VudGVyIGl0LiBUaGUgd2F5IGl0IGlzIGRhbmdlcm91cyBpcyB0aGF0IGl0IGFsc28gcGFyYWx5emVzIHRoZSBtdXNjbGVzIHRoYXQgYWxsb3cgeW91IHRvIGJyZWF0aGUuIApJIGJldCB5b3UgYmVlbiBpbiBhIG1hdGNoIHdoZXJlIHlvdSBkb25lIDJrIGRtZyBlYWNoLCBnb3QgY291cGxlIG9mIGtpbGxzIGFuZCBkaWRuIHdpbi4gClNoYW5lIFNhZmludWsgd2FzIGFtYXppbmcgaW4gbmV0IGJvdGggZ2FtZXMuIApSYXphdGlnZXIgICAxIHBvaW50cyAgc3VibWl0dGVkIDExIGRheXMgYWdvCkFsc28sIHRoZSBjb2VyY2lvbiBwYXJ0IG9mIGl0LiBUaGF0IGp1c3QgYnJvdWdodCBiYWNrIGEgaHVnZSBmbG9vZCBvZiBtZW1vcmllcyBvZiBteSBtb20gYXNraW5nIG1lIHRvIGxpZSB0byBteSBkYWQgYWJvdXQgc3R1ZmYgc2hlIGJvdWdodC4gU2hlIHN0b3BwZWQgZG9pbmcgdGhhdCBsb25nIGFnbywgYnV0IEkga25vdyBzaGUgaGFzIHNldmVyYWwgInNlY3JldCIgc3RvcmFnZSB1bml0cyB0aGF0IHNoZSB0aGlua3MgbXkgZGFkIGRvZXNuIGtub3cgYWJvdXQuIEl0IGluc2FuZSB0byBtZS4KQW5kIHlvdSBkaWQgdGhlIHNhbWUgdGhpbmcgYnV0IHBvaW50aW5nIG91dCBhYnVzZSBhcyBpZiBJIGFzIGEgbWFuIGNvbXBsZXRlbHkgZGlzcmVnYXJkIHRoYXQgYXMgdHJ1dGggb3Igc3VwcG9ydCBpdC4gCktub3cgdGhhdCBhIHdpbiB3aW4gd2luIGFncmVlbWVudCBpcyB3aXRoaW4gcmVhY2gsIHNhaWQgRnJlZWxhbmQuIFRoYXQgd2hhdCB3ZSB3b3JraW5nIHRvd2FyZHMuIApUaGUgSW5keSBFbGV2ZW4gd2FudHMgdGhlIGNpdHkgdG8gZmxvYXQgYm9uZHMgZmluYW5jZWQgYnkgdGF4ZXMgY29sbGVjdGVkIGF0IGEgMjAsMDAwIHNlYXQgc3RhZGl1bS4gVGVhbSBvd25lciBFcnNhbCBPemRlbWlyIHdvdWxkIGZpbmFuY2UgYW5kIGJ1aWxkIGEgaG90ZWwsIG9mZmljZSBhbmQgcmV0YWlsIGRldmVsb3BtZW50IGFyb3VuZCBpdC4gVGhlIHRlYW0gaGFzbid0IHNhaWQgd2hlcmUgdGhlIHN0YWRpdW0gd291bGQgYmUsIGJ1dCBIb3VzZSBTcGVha2VyIEJyaWFuIEJvc21hKFIgSW5kaWFuYXBvbGlzKXNheXMgaGUncyBoZWFyZCBmcm9tIHBlb3BsZSBxdWVzdGlvbmluZyB0aGUgd2lzZG9tIG9mIGFub3RoZXIgMjAwIHJvb20gaG90ZWwgZG93bnRvd24uCkluIGRpZXNlbSBBcnRpa2VsOkRpZSBHcnVuZGxhZ2VuU3RyaXAgUG9rZXIgVmFyaWFudGVuRGllIFN0cmlwIFBva2VyIEV0aXF1ZXR0ZQpUaGUgcmlzaW5nIGNvc3Qgb2YgaGVhbHRoY2FyZSBoYXMgZXZlbiBwcmV2aW91c2x5IGxlZCBzb21lIHB1YmxpYyBmaWd1cmVzLCBsaWtlIHBoaWxvc29waGVyIERhbmllbCBDYWxsYWhhblsyXWFuZCBDb2xvcmFkbyBHb3Zlcm5vciBMYW1tLFszXSB0byBhZHZvY2F0ZSBoZWFsdGhjYXJlIHJhdGlvbmluZyBhZ2FpbnN0IG9sZGVyIHBhdGllbnRzLiAKT25lIGlkZWEgaXMgdGhhdCAiYnVjayIgaXMganVzdCBhIHNob3J0ZW5lZCBmb3JtIG9mIHRoZSB3b3JkICJzYXdidWNrLCIgd2hpY2ggaXMgc2xhbmcgZm9yIGEgJDEwIGJpbGwuIFRoaXMgaXMgdGhvdWdodCB0byBiZSBiZWNhdXNlIG9uZSBvZiB0aGUgZWFybGllc3QgJDEwIGJpbGxzIGZlYXR1cmVkIHRoZSBSb21hbiBudW1lcmFsIFgsd2hpY2ggcmVzZW1ibGVzIGEgInNhd2J1Y2siICBhIGZyYW1lIGZvciBob2xkaW5nIHdvb2QgdG8gYmUgY2hvcHBlZCBhbmQgc2F3ZWQuIFBhcGVyIGN1cnJlbmN5IGludHJvZHVjZWQgaW4gdGhlIDE4NjBzIGFuZCBsYXRlciBjYW1lIHRvIHNwZWNpZnkgb25lIGRvbGxhciwgYWNjb3JkaW5nIHRvIFJ1c3NlbGwgQS4gCk9uIHRoZSByb2FkLCBvdXIga2lkcyBhcmUgb24gdGhlIHJvYWQsIG91ciBzcG91c2VzLiAKVGhlIEhlbmRvbiBNb2IsIGFsc28gZmFtaWxpYXIgdG8gcG9rZXIgd2F0Y2hlcnMsIGhhdmUgYWxzbyB0cmF2ZWxsZWQgYWNyb3NzIHRoZSBJcmlzaCBTZWEsIGluY2x1ZGluZyBvbmUgb2YgdGhlIHByZSB0b3VybmFtZW50IGZhdm91cml0ZXMgUmFtIFZhc3dhbmkuCkdldHRpbmcgSW5mb3JtYXRpb25PZnRlbiBzb2NpYWwgd29ya2VycyBoYXZlIHRvIGdhaW4gaW5mb3JtYXRpb24gZnJvbSBwZW9wbGUgd2hvIGFyZSBub3Qgd2lsbGluZyB0byBwYXJ0IHdpdGggdGhhdCBpbmZvcm1hdGlvbiBvciB3aG8gbWF5IGJlIGRpZmZpY3VsdCB0byB1bmRlcnN0YW5kLiAKVGhlIG9uZSBmZWF0dXJlIEkgbG92ZSBhYm91dCBteSBjb29rZXIgaXMgdGhlIHRpbWVyLCBJIGNhbiBoYXZlIGZyZXNoIHJpY2UgcmVhZHkgd2hlbiBJIG5lZWQgaXQuIEkgZ2V0IHRoZSBpZGVhIG1hbnkgcGVvcGxlIG1ha2UgYSBmdWxsIHBvdCBhbmQga2VlcCBpdCB3YXJtIGZvciBkYXlzLiAKV2UgbmVlZCBtb3JlIG9mIHRoYXQuLiAKSWYgc2hlIG1vYW5zIGEgbGl0dGxlIGxvdWRlciwgc3F1aXJtcyBhIGxpdHRsZSBiaXQgbW9yZSwgb3IgcHJvdmlkZXMgc29tZSBvdGhlciBwb3NpdGl2ZSBmZWVkYmFjaywgdGhlbiBnbyBvbiB0byB0aGUgbmV4dCBzdGVwLiAKICAxIHBvaW50cyAgc3VibWl0dGVkIDI4IG1pbnV0ZXMgYWdvVHJhbnMgcGVvcGxlIGNhbm5vdCBiZSBiaW9sb2dpY2FsIHdvbWVuL21lbiwgaXQgZG9lc24gd29yayB0aGF0IHdheSBpbiBiaW9sb2d5LiBNZW4gaGF2ZSBvZXN0cm9nZW4sIHlvdXIgbGV2ZWxzIGFyZSBqdXN0IGhpZ2hlciwgbWVuIGhhdmUgYnJlYXN0IHRpc3N1ZSwgeW91cnMgaXMganVzdCBkaWZmZXJlbnQuIFlvdSBoYXZlbiByZWFsbHkgY2hhbmdlZCB5b3VyIGluaGVyZW50IGJpb2xvZ3kgZXhjZXB0IGFsdGVyIHRoZSBsZXZlbHMgb2YgaG9ybW9uZXMgYW5kIHBvdGVudGlhbGx5IGhhZCBzdXJnZXJ5Lkl0IHVsdGltYXRlbHkgY29tZXMgZG93biB0byBmdW5jdGlvbmluZyBnZW5pdGFscywgbGlrZSBpdCBvciBub3QsIGFuZCBwcmUgb3AgeW91IGFyZSBzdGlsbCB0aGUgc2V4IHlvdSB3ZXJlIGJvcm4gYW5kIHBvc3Qgb3AsIGJlc3Qgc3VyZ2VvbnMgaW4gdGhlIHdvcmxkIHlvdSBoYXZlIGFuIGltaXRhdGlvbiBvZiBnZW5pdGFsaWEgdGhhdCBkb2VzbiBmdW5jdGlvbiB0aGUgc2FtZSB3YXksIG5ldmVyIHdpbGwgYW5kIHJlcXVpcmVzIHNwZWNpZmljIGFjdGlvbnMgdG8gYmUgbWFpbnRhaW5lZC5JIG5vdCBhdHRhY2tpbmcgeW91LCBJIGtub3cgeW91IG1heSB0aGluayBpdCBodXJ0ZnVsLCBidXQgSSBiZWluZyBzY2llbnRpZmljYWxseSBmYWN0dWFsLm1lZ2FvYm9pZCAgW3Njb3JlIGhpZGRlbl0gIHN1Ym1pdHRlZCAxOSBtaW51dGVzIGFnb3RoaXMgaXMgYnVsbHNoaXQsIHRoaXMgaXMgdHJhbnNwaG9iaWMsIGFuZCBubyB0cmFucyBwZXJzb24gYXNrZWQgZm9yIG9yIHdhbnRzIHlvdXIgdW5lZHVjYXRlZCwgaWdub3JhbnQsIGFuZCBmdWxseSBpZGlvdGljIG9waW5pb24uIApUaGV5IG5ldmVyIHN0YXkgd2l0aCBvbmUgd29tYW4uIFRoZSBzb29uZXIgeW91IHJlYWxpemUgdGhpcywgdGhlIGJldHRlciB5b3VyIGxpZmUgd2lsbCBiZS4gCkkgdGhpbmsgdGhlIGRldmVsb3BlZCB3b3JsZCBzaG91bGQgY2hhbmdlIG91ciBjdWx0dXJlIHRvIGVuY291cmFnZSBwZW9wbGUgdG8gbG9vayBhZnRlciB0aGVpciBwYXJlbnRzIHdoZW4gdGhleSBiZWNvbWUgb2xkIGFuZCBkZWNyZXBpdC4gCkFmdGVyIFNjaG9vbCBUdXRvciBKb2IgRGVzY3JpcHRpb24KSG91c2luZyBpcyBleHBlbnNpdmUgaW4gdGhlIGNpdHkgYW5kIHRyYWZmaWMgaXMgcmVhbGx5IGJhZC4gT3VyIHB1YmxpYyB0cmFuc2l0IHN5c3RlbSBpc24ndCBncmVhdCBzbyBlaXRoZXIgeW91IHN1Y2sgaXQgdXAgYW5kIGJ5IGFuIGFwYXJ0bWVudCBkb3dudG93biBvciB5b3Ugc3BlbmQgYWJvdXQgYW4gaG91ciBjb21tdXRpbmcgZWFjaCB3YXkuIElmIHlvdSdyZSBhYmxlIHRvIHdvcmsgZnJvbSBob21lIHRoZW4geW91J3JlIHNldCEKVHJpZWQgYSBsb3Qgb2YgZGlmZmVyZW50IHRoaW5ncywgYnV0IHRoZSBvbmx5IG9uZSB0aGF0IEkgY29uZmlkZW50IGhlbHBlZCAodmVyc3VzICJJIHRoaW5rIHRoaXMgbWlnaHQgYmUgaGVscGluZz8iKSB3YXMgVGhlIE9yZGluYXJ5IE5pYWNpbmFtaWRlIFppbmMuClRoZW4geW91IHBsdWNrIHdpdGhlaXRoZXIgeW91ciB0aHVtYiBvciB5b3VyIHBvaW50ZXIgZmluZ2VyLCB3aGF0ZXZlciB5b3UgZmVlbGNvbWZvcnRhYmxlIHdpdGguIApZZXMsIGlmIHlvdSBsaWtlZCBNb25zdGVyIHlvdSBiZSBmaW5lLgpGb3IgVHJ1ZGVhdSwgaXQgdGhlIHdvcnN0IHBvc3NpYmxlIHNjZW5hcmlvICAgaWYgaGUgZGlkbiB0cnkgdG8gaGVscCwgaGUgZ2V0IGhhbW1lcmVkIGluIFF1ZWJlYyBmb3IgdGhlIGpvYiBsb3NzZXMgdGhhdCB3b3VsZCBpbmV2aXRhYmx5IGZvbGxvdyBhIGNvbnZpY3Rpb24gKG9uIHRoZSBoZWVscyBvZiB0aGUgcHJvYmxlbXMgd2l0aCBCb21iYXJkaWVyLCBhbm90aGVyIG1ham9yIFF1ZWJlYyBlbXBsb3llcikuIApTbyBpZiB0aGV5IGFyZSBhIGxvdCB0YWxsZXIgdGhhbiB5b3UsIG1ha2UgaXQgYSBsaXR0bGUgaGlnaGVyIChpdCBpcyBlYXNpZXIgdG8gZ2V0IGEgYm94IHRvIHN0ZXAgdXAgb24gdG8gZ2V0IHRvIHRoZSBiYXIgaWYgdG8gaGlnaCByYXRoZXIgdGhlbiBzdGFydGluZyB0byBkaWcgYSBob2xlIGlmIGl0IGlzIHRvIHNob3J0KS4uIApBZ2FpbjogSSBsb29rIGZvcndhcmQgdG8geW91IGZvcm11bGF0aW5nIGFuIGV4YW1wbGUgY3JpdGljaXNtIG9mIHRoaXMgZ3JvdXAgdGhhdCB5b3Ugd291bGQgbm90IGRlZW0gYW50aXNlbWl0aWMuIEJlY2F1c2UgZ2l2ZW4gdGhlIHN0YW5kYXJkcyB5b3Ugc2V0LCBJIGRvbiB0aGluayBpdCBldmVuIHBvc3NpYmxlLgpVbnRpbCB0aGUgIjIuNSIgdGllciAoQVE0MCksIGFsbCB0aGUgd2FycmlvciBzdHVmZiB3YXMgZGVzaWduZWQgZm9yIHRhbmtzLCBzbyBnZXR0aW5nIHRoZSBkYW1hZ2Ugb3JpZW50ZWQgUFZQIHN0dWZmIGZvciBQVkUgd2FzIGEgdmVyeSBlZmZlY3RpdmUgd2F5IHRvIGdldCBhIHNwb3QgcHJldHR5IG11Y2ggYW55d2hlcmUgc2luY2Ugd2FycmlvciBkcHMgd2VyZSBzbyBmZXcgKG5vdCBhIGxvdCBvZiBwZW9wbGUgZ290IHRvIFIxNCkuCkljZXNrYXRpbmdoZWRnZWhvZyAgMyBwb2ludHMgIHN1Ym1pdHRlZCA0IGRheXMgYWdvCkkgd2FzIHRoZXJlIGluIDIwMDkgYW5kIHRoZXJlIHdhcyBzb21lIGhvc3RpbGl0eSBpbiB0aGUgS2FzaG1pciByZWdpb24gYXQgdGhlIHRpbWUuIEkgd2FzbiB3b3JyaWVkIGFib3V0IGl0LCBidXQgdGhlcmUgd2FzIGEgbmVydm91c25lc3MuIEkgc2F0IGluIGEgY29mZmVlIHNob3AgaW4gU3JpbmFnYXIgbmVhciB0aGUgVU4gY29tcG91bmQgYW5kIEkgZGlkbiBzZWUgYW55IG90aGVyIGZvcmVpZ25lcnMgaW4gdGhlIDIgaG91cnMgdGhhdCBJIGhhZCBlc3ByZXNzbyBhbmQgcmVhZCBteSBib29rLiBTdGlsbCBsb3RzIG9mIHNtYWxsIHRhbmtzIGFuZCBtaWxpdGFyeSBpbiB0aGUgc3RyZWV0cyBhbmQgY2hlY2twb2ludHMgYXQgdGhhdCB0aW1lIHRvby4KQnV0IEkgYWxzbyB1c2UgaXQgZm9yIG15IHByb2Zlc3Npb25hbCBzdHVmZi4uIApJIGhhdmUgaGFkIGJ1cnNpdGlzIHByb2JsZW1zIGluIG15IHNob3VsZGVycyBmb3Igc29tZSB3aGlsZSwgaW5qdXJlZCB3aXRoIGEgbWlzcyBwb2xlIHBsYW50IHNraWluZyBhbmQgYSBjb3VwbGUgb2Ygc2hvdWxkZXIgZGlzbG9jYXRpb25zLiBBcyB3ZWxsIGFzIGN5Y2xpbmcgd2hlcmUgSSBoYXZlIGhhZCByZWFsIHBhaW4gb24gbG9uZ2VyIHJ1bnMuIApORFAgZGVuaWVzIHBpcGVsaW5lIHdhciBpcyBkaXN0cmFjdGluZyBpdCBmcm9tIG1ham9yIGxlZ2lzbGF0aW9uVHJhbnMgTW91bnRhaW4gdGFsa3MgdG8gYmUgaGVsZCBiZWhpbmQgY2xvc2VkIGRvb3JzLCBNb3JuZWF1IGluc2lzdHNBbHRhLiAKSSBvbmNlIGdvdCBzcG90dGVkIGhhdmluZyBhIG5vcm1hbCBtZWFsIG9uIGEgcmVzdGF1cmFudCBwYXRpbyBhdHRhY2hlZCB0byBhIG1hbGwgdGhhdCBoYWQgYSBidWlsdCBpbiBob3RlbCB3aXRoIGEgcHJldHR5IGZyaWVuZCwgYW5kIHN1ZGRlbmx5IHRoZSBydW1vciB3YXMgdGhhdCBzaGUgd2FzIGFuIGVzY29ydCBhbmQgSSB3YXMgc2VlbiBlbnRlcmluZyBhIGhvdGVsIHdpdGggaGVyLiAKQXQgZmlyc3QsIHNoZSBzaW1wbHkgd2F0Y2hlZCB0aGUgcGxheWVycy4gQmVmb3JlIGxvbmcsIHNoZSB3YXMgam9pbmluZyB0aGUgZ2FtZXMgYW5kIGJlY29taW5nIGFuIGV4cGVydCBwb2tlciBhbmQgZmFybyBwbGF5ZXIuIApPaCwgeW91IGNhbiB0YWtlIGNoaXBzIG9mZiB0aGUgdGFibGUuIApJc2luZGVuIHphdGVuIG9sbXVzLiAKSSBib3VnaHQgbmV3IGplYW5zIGEgZmV3IHRpbWVzIHRocm91Z2hvdXQgdGhlIHByb2Nlc3MgYnV0IG9ubHkgd2hlbiB0aGV5IHdlcmUgb24gc2FsZS4gCkFueXdheXMsIEkgaGF2ZSBubyBpZGVhIGlmIGhlIGlzIGJlaW5nIHNlcmlvdXMgYnV0IGhlIHNlZW1lZCBwcmV0dHkgaGVsbCBiZW50IG9uIHRoZSBleHBlcmllbmNlIGhhaGFoYWhoYQpJIHJlYWxseSByZWdyZXQgbm90IHNheWluZyAibm8iIHRvIGFueXRoaW5nIGFuZCBqdXN0IGdvaW5nIGFsb25nIHdpdGggZXZlcnl0aGluZywgbWFraW5nIGhpbSB0aGluayBJIHdhcyBva2F5IHdpdGggYWxsIG9mIHRoYXQsIGJ1dCBhcyBJIHNhaWQgSSB3YXMgcGFuaWNraW5nIGFuZCBmcm96ZSB1cC4gCkkgdGhpbmsgeW91IGxvb2sgZ29vZCB3aXRoIHNob3J0IG9yIGxvbmcgaGFpciBzbyBqdXN0IGRvIHdoYXQgeW91IGZlZWwgYmVzdCBpbi4gCklfTG92ZV9NY1JpYnMgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnbwpJIGZlZWwgbGlrZSBvbiBSUCByZWFsbXMgcGVvcGxlIGhhdmUgZ2VuZXJhbGx5IGNvbGxlY3RlZCB0aGVpciBmYXZvcml0ZXMgYnkgbm93IGFscmVhZHkgKGFuZCBkb24gbmVjZXNzYXJpbHkgaW52ZXN0IG1vbmV5IGludG8gYnV5aW5nIG5ldyBvbmVzIHdpdGggZ3VzdG8pLCBhbmQgb24gc21hbGwgcmVhbG1zIHBlb3BsZSBhcmVuIG1ha2luZyB0aGUgY2FwaXRhbCB0byBqdXN0aWZ5IGJ1eWluZyB0aGVtICh2ZXJzdXMganVzdCB1c2luZyB3aGF0IHNlbGVjdGlvbiB0aGV5IGFscmVhZHkgaGF2ZSBhdmFpbGFibGUgdG8gdGhlbSkuLiAKUG9rZXJTdGFycyBpcyBvbmx5IGdvb2QgZm9yIHRoZXJlIE1UVCBQbGF5aW5nIGNhc2ggdGhlcmUgaXMgYm9ndXMsIG5vIHJha2ViYWNrIGFuZCB0aGUgdG91Z2hlc3QgcG9vbHMgb2YgcGxheWVycy4gVGhleSB3aWxsIGV2ZW50dWFsbHkgYmUgYmVhdGVuIGJ5IDg4OCBvciBwYXJ0eSBwb2tlciwgbXkgYmV0IHdvdWxkIGJlIFBQLiAKSG9sZGluZyBtb3N0IG9mIHRoZXNlIGhhbmRzIHlvdXIgcG9rZXIgY2FsY3VsYXRvciBpcyBnb2luZyB0byBiZSB0ZWxsaW5nIHlvdSB0byBmb2xkLiBZb3VyIHN0cmF0ZWd5IGhlcmUgc2hvdWxkIGJlIHRvIHJlIHJhaXNlIHRoZSBtYW5pYWMgYW5kIGdldCBoaW0gaGVhZHMgdXAuIENhbGwgZG93biBpZiB5b3UgaGF2ZSB0byBidXQgbGV0IGhpbSBrbm93IHlvdSB3b24ndCBwbGF5IGRlYWQsIHdoaWNoIGlzIHdoYXQgeW91ciBzb2Z0d2FyZSB3aWxsIGJlIHN1Z2dlc3RpbmcuLiAKSSB0aGluayB0aGF0IGEgZmFpciBwb2ludC4gRG8gdGhleSB1bmRlcm1pbmUgeW91ciBwYXJlbnRpbmcgcmVndWxhcmx5LCBvciB3YXMgdGhpcyBhIG9uZSB0aW1lIHRoaW5nPyBJZiB0aGV5IGdlbmVyYWxseSBzdXBwb3J0aXZlIGFuZCBqdXN0IG1hZGUgYW4gdW5kZXJzdGFuZGFibGUgbWlzdGFrZSB0aGlzIHRpbWUgd2hlbiBoZSBmbGF0IG91dCBhc2tlZCBmb3IgZm9vZCwgSSB0aGluayBpdCBmb3JnaXZhYmxlLiBUZWxsIHRoZW0gdGhhdCB5b3UgbGlrZSB0aGVtIHRvIHRleHQgaW4gdGhlIGZ1dHVyZSBpZiB0aGV5IHdhbnQgdG8gbWFrZSBhbiBleGNlcHRpb24gdG8geW91ciBydWxlcy4uIApJZiB5b3Ugd2FudCBhIG1vcmUgcmVsaWFibGUgc29sdXRpb24gbG9vayBpbnRvIEFyZHVpbm8uIEkgaGF2ZSBhbiBBcmR1aW5vIGFuZCBhIHNtYWxsIGFxdWFyaXVtIHB1bXAuIEkgYWxzbyB3ZW50IG91dCBhbmQgYm91Z2h0IGEgY2hlYXAgc29pbCBtb2lzdHVyZSBzZW5zb3IgZm9yIGEgZmV3IGJ1Y2tzIG9mZiBBbWF6b24uIApMaWtlLCB2aXN1YWxseSBpdCB3YXMgZ3JlYXQuIERlc2VydmVzIGFsbCBzb3J0cyBvZiBhd2FyZHMuIEh1Z2Ugc2V0IHBpZWNlcyB0aGF0IHdlcmUgcmVhbGx5IGltcHJlc3NpdmUgb24gdGhlIGJpZyBzY3JlZW4uIAoiQnVybmluZyBTdW4iIHdvdWxkIGFscmVhZHkgYmUgYSByZWFsbHkgZ29vZCBuYW1lIGZvciBpdC4gVGhlcmUgYmUgYSBsb3Qgb2YgaGlkZGVuIG1lYW5pbmdzIGluIGl0LiBPYnZpb3VzbHkgdGhlIG5hbWUgb2YgdGhlIGNsdWIsIGJ1dCBhbHNvIGhvdyBTdW4gPSBTdGFyLCBTZXVuZ3JpIGlzIHRoZSBzdGFyIHRoYXQgZ29pbmcgb3V0IGluIGEgYmxhemUgb2YgY29udHJvdmVyc3kuIApJbiBmYWN0LCB3aGVuIGludGVyYWN0aW5nIHdpdGggZ29sZCBwbGF5ZXJzIGl0IGlzIG1vcmUgaGFybWZ1bCB0byAicHVzaCIgYSBtZXRhIHBpY2suU29tZXRoaW5nIGRpZmZlcmVudCBpcyAiYmVpbmcgYSBnb2xkIGxldmVsIHN0cmF0ZWdpYyB0aGlua2VyIiwgd2hpY2ggbWVhbnMgeW91IGNhbiBpbnNpc3RlbnQgb24gYSBtYWluIGhlYWxlci90YW5rIG9yIGdvIGEgcG9wdWxhciBjb21ibyBsaWtlIHRoZSB0YW5rIGR1b3MsIHBoYXJtYWN5LCB6YXJ6byBldGMuS25vY2tiYWNrIGRpc3RhbmNlIGlzIG5vdyBtb3JlIGNvbnNpc3RlbnRIZXJvZXMgdGhhdCBhcmUgZmx5aW5nIGNhbiBub3cgYmUga25vY2tlZCBiYWNrIGFuZCBzbG93ZWREZXZlbG9wZXIgQ29tbWVudHM6IEtub2NrYmFja3MgYXJlIG5vdyBsZXNzIGFmZmVjdGVkIGJ5IGhvdyB0aGUgZW5lbXkgd2FzIG1vdmluZyB3aGVuIHRoZXkgd2VyZSBoaXQuIEluc3RlYWQgb2YgaGF2aW5nIHNtYWxsIG9yIGxhcmdlIGtub2NrYmFja3MgdGhhdCBkZXBlbmQgb24gY2hhbmNlLCBrbm9ja2JhY2tzIHdpbGwgZmVlbCBzaW1pbGFyIHJlZ2FyZGxlc3Mgb2YgdGhlIGVuZW15J3MgbW92ZW1lbnQgbGVhZGluZyB1cCB0byB0aGUga25vY2tiYWNrLkNvcnJlY3QgbWUgaWYgSSB3cm9uZywgYnV0IHRoaXMgd2lsbCBiZSBodWdlIGZvciB0aG9zZSBMdWNpbyBtYWluIHdhbm5hYmVzLkNvcnNvVGhlV29sZiAgOCBwb2ludHMgIHN1Ym1pdHRlZCAxMyBkYXlzIGFnb1RoaXMgc291bmRzIGV4YWN0bHkgbGlrZSBteSBleHBlcmllbmNlIHBsYXlpbmcgb24gZWFzeS4gSSBhbHdheXMgZmVsdCBsaWtlIHVzaW5nIGNvb2wgbW92ZXMgdG8ga2lsbCBlbmVtaWVzIHdhcyB3b3J0aHdoaWxlIGJlY2F1c2UgdGhlIHRocmVhdCBvZiBkZWF0aCBzYXQganVzdCBiZWhpbmQgIndoYXQgaWYgdGhpcyB3ZW50IHdyb25nIi4gCihTZWFyY2hpbmcgb25saW5lZm9yIG1vcmUgaWYgeW91IGFyZSBzbyBpbnRlcmVzdGVkIHNob3VsZCB5aWVsZCBtb3JlKS4gQWxzbywgbWFueXZlcnNpb25zIG9mIEdhR2EncyBzb25ncywgc3VjaCBhcyBwaWFubyBzb2xvcyBhbmQgbW9yZSBtZWRsZXlzIG9maGVyIHNvbmdzIGFyZSB1c3VhbGx5IHBlcmZvcm1lZCBhdCBoZXIgc2hvd3MsIGFuZCBzZWFyY2hpbmcgeW91dHViZWZvciB0aGVtIGlmIHlvdSBhcmUgc28gaW50ZXJlc3RlZCBtYXkgeWllbGQgbW9yZSBzb25ncy4gUGxlYXNlIHB1dCB0aGUgc3ViamVjdCBhcyAiSUxvdmUgR2FHYSIuIApJIG1vc3RseSBtYWtpbmcgYSBqb2tlIGFuZCB5b3UgYnJpbmcgdXAgZ29vZCBwb2ludHMsIGl0IG1vcmUgbnVhbmNlZCB0aGF0IG15IGNvbW1lbnQgbWFrZXMgaXQgc2VlbS4gR2FtZSBwdWJsaXNoaW5nIGhhcyBjaGFuZ2VkIGFuZCBpcyBkb21pbmF0ZWQgYnkgY29tcGFuaWVzIHdobyBwdXNoIG91dCBuZWFybHkgaWRlbnRpY2FsIGl0ZXJhdGlvbnMgb2YgdGhlIHNhbWUgZ2FtZSBldmVyeSB5ZWFyLgpJIHRoaW5rIHRoZSBjb25uZWN0aW9uIGJldHdlZW4gQmFyYmllIGFuZCB0aGUgZmFsbCBvZiB0aGUgU292aWV0IEVtcGlyZSBpcyBjbGVhci4gCkxpdmVsaW5rcyBpcyB0aGUgbGFyZ2VzdCBjaGF0bGluZSBpbiBOb3J0aCBBbWVyaWNhLiBXaXRoIHNvIG1hbnkgcGVvcGxlIHR1cm5pbmcgdG8gdGhlIGZyZWUgY2hhdCByb29tcywgeW91IG1pZ2h0IGJlIGEgbGl0dGxlIG5lcnZvdXMgdG8gdGFrZSB0aGUgcGx1bmdlIHlvdXJzZWxmLiBNb3N0IG9mIHRoZSB0aW1lIHlvdSB3aWxsIGVuZCB1cCB3YWl0aW5nIGhvdXJzIG9yIGV2ZW4gZGF5cyBiZWZvcmUgZ2V0dGluZyBhIHJlc3BvbnNlIGZyb20gdGhhdCBwZXJzb24uZnJlZSBPbmxpbmUgc2luZ2xlcyBNb2JpbGUgYW5kIERlc2t0b3AgY2hhdCwgbm8gcmVnaXN0cmF0aW9uIG5lZWRlZCBvciBpcyByZXF1aXJlZEp1c3QgbGlrZSB0YWxraW5nIHdpdGggcGVvcGxlIGF0IHRoZSBiYXIsIHRoZXJlIGlzIGEgY29kZSBvZiBjb25kdWN0IHlvdSBzaG91bGQgZm9sbG93IGluIGRhdGluZyBzaXRlIGNoYXQgcm9vbXMuIApTbyBJIHRlbmQgdG8gYmUgb3Zlcmx5IGd1bGxpYmxlIHdpdGggdGhpbmdzIGluIGdlbmVyYWwgc28gdGFrZSBteSBvcGluaW9uIHdpdGggYSBncmFpbiBvZiBzYWx0IGJ1dCBJIGJlbGlldmUgdGhhdCB0aGlzIGlzIGEgc29sdmFibGUgaXNzdWUuIFNoZSBiYXNpY2FsbHkgaW5zdGFudGx5IHJlY29nbml6ZWQgdGhhdCB3aGF0IHNoZSB3YXMgZG9pbmcgaXMgd3JvbmcgYW5kIGNvbmZlc3NlZCBldmVyeXRoaW5nLCBldmVuIGRldGFpbHMgc2hlIGRpZG4ndCBuZWVkIHRvIHNoYXJlIHRoYXQgY291bGQgbWFrZSB0aGluZ3Mgd29yc2UgZm9yIGhlci4gSSB0aGluayB0aGF0J3MgZ2VudWluZSBlbm91Z2ggdG8gdHJ5IGNvbnRpbnVpbmcgdGhpbmdzLiBIb3dldmVyIGlmIHlvdSBmaW5kIHlvdXJzZWxmIGJlY29taW5nIGplYWxvdXMgb3Igc3VzcGljaW91cyBhbGwgdGhlIHRpbWUgdGhlbiB0aGVyZSdzIG9idmlvdXNseSBubyBwb2ludC4gQnV0IGlmIHlvdSBmZWVsIGxpa2UgeW91IGNhbiByZWJ1aWxkIHRoZSB0cnVzdCwgSSB0aGluayB5b3UgY2FuIGNvbnRpbnVlIHRoZSByZWxhdGlvbnNoaXAuIEFsc28gSSBkaXNhZ3JlZSB3aXRoICBhbGNvaG9sIGRvZXNuJ3QgbWFrZSB5b3UgZG8gdGhpbmdzIHlvdSBkb24ndCB3YW5uYSBkbyIKV2l0aCB0aGUgcmVsYXRpdmVseSBxdWljayB0aW1lIHRvIGtpbGwgYW5kIHRoZSBzY2FyY2l0eSBvZiBoZWFsdGggYW5kIGFtbW8gdGVhbXMgbmVlZCB0byB3b3JrIGEgbG90IGhhcmRlciB0byBmb3J0aWZ5IHBvc2l0aW9ucy4gRGVmZW5kZXJzIGFkdmFudGFnZSBmZWVscyBuZXJmZWQgaW4gYSBnb29kIHdheS5DYXN0YXRpdmUgIDEgcG9pbnQgIHN1Ym1pdHRlZCA1IG1vbnRocyBhZ29UQkggSSBmYWlybHkgZW5qb3llZCB0aGUgZ2FtZS4gUGxheWluZyB3aXRoIGZyaWVuZHMgaW4gYSBzcXVhZCBpcyBtb3JlIHJld2FyZGluZyB0aGFuIGV2ZXIgd2l0aCB0aGUgbmV3IGF0dHJpdGlvbiBzeXN0ZW0gYXMgd2VsbCBhcyBzcXVhZCByZXZpdmVzLiAKRm9yIHN0dWRpZXMgaW4gbmVvbmF0ZXMsIGRhdGEgd2VyZSBhbHNvIGV4dHJhY3RlZCBvbiB3aGVuIHRoZSB0cmVhdG1lbnQgd2FzIHN0YXJ0ZWQgKG51bWJlciBvZiBob3VycyBwZXIgZGF5cyBhZnRlciBiaXJ0aCkgYW5kIGdlc3RhdGlvbmFsIGFnZS4gRm9yIHN0dWRpZXMgaW4gY2hpbGRyZW4sIGRhdGEgd2VyZSBhbHNvIGV4dHJhY3RlZCBvbiBjb25kaXRpb24gYW5kIGFnZS5NZXRob2RzIG9mIHN5bnRoZXNpc0hvdyB3ZXJlIHRoZSBzdHVkaWVzIGNvbWJpbmVkP1RoZSByZXN1bHRzIG9mIHRoZSBzdHVkaWVzIHdlcmUgcmVwb3J0ZWQgc2VwYXJhdGVseSBmb3IgbmVvbmF0ZXMgYW5kIG9sZGVyIGNoaWxkcmVuLiAKRm9yIGV4YW1wbGU6UmVwbGFjZSAiaXBhZGRyZXNzaGVyZSIgb3IgImNvbXB1dGVybmFtZWhlcmUiIGFuZCAidXNlcm5hbWVoZXJlIiB3aXRoIHRoZSBhY3R1YWwgSVAgYWRkcmVzcyBvciBjb21wdXRlciBuYW1lL3VzZXIgbmFtZS4gClRoZXJlIGlzIGEgdmVyeSBnb29kIHJlYXNvbiB3aHkgUGFjcXVpYW8gYW5kIFJvYWNoIGdldCBhbG9uZyBzbyB3ZWxsLiAKMy4gQW55IHNlZW1pbmdseSBkaXNndXN0ZWQgb3IgcmVsdWN0YW50IHdhZ2VyIG1lYW5zIGEgc3Ryb25nIGhhbmQuIFRoZSBwbGF5ZXIgaXMgdHJ5aW5nIHRvIGNvbnZleSB1bmNlcnRhaW50eSBhYm91dCB0aGUgYmV0LiAKUmV2aWV3ZWQgYnkgSm9obiBDYXJzdGVuc2VuCk1pc3R5UmVnaW9ucyAgNSBwb2ludHMgIHN1Ym1pdHRlZCAyMSBkYXlzIGFnbwpJIHRob3VnaHQgd2Ugd2VyZSBpbiBmb3IgbGlrZSAyMCB5ZWFycyBvZiBkZWZpY2l0IHdpdGggdGhlIExpYmVyYWxzIGF0IDIwIGJpbGxpb24gYSB5ZWFyLiAKVGhlIGFjY2xhaW1lZCBtdXNldW0gcG9zc2Vzc2VzIHRoZSB3b3JsZCBsYXJnZXN0IGNvbGxlY3Rpb24gb2YgaGVyIHdvcmtzIGFuZCBpbmNsdWRlcyAxNDAgb2lsIHBhaW50aW5ncywgbW9yZSB0aGFuIDEwMCB3YXRlcmNvbG9ycywgc2V2ZXJhbCBwaG90b2dyYXBocywgYW5kIHBlcnNvbmFsIHByb3BlcnR5IGxpa2Ugd2F0ZXJjb2xvciBhcnQga2l0cyBhbmQgcGVyc29uYWwgbWVtb3JhYmlsaWEuIEFtb25nIHRoZSBub3RhYmxlIHdvcmtzIG9uIGFydCBvbiBkaXNwbGF5IGF0IHRoZSBtdXNldW0gYXJlIEhlYWQsIERvbm5hIEJsdWUgTW9ybmluZyBHbG9yeSBhbmQgQmx1ZSBGbG93ZXIgU2hhcGVzIEFsc28gd2lkZWx5IGtub3duIGFzIHRoZSBDaXR5IERpZmZlcmVudCwgU2FudGEgRmUgaXMgaG9tZSB0byBzZXZlcmFsIHBoZW5vbWVuYWwgcGxhY2VzIHRvIHN0YXksIGxpa2UgdGhlIElubiBvZiB0aGUgR292ZXJub3JzLCBFbCBEb3JhZG8gSG90ZWwgYW5kIFNwYSwgSG90ZWwgU2FudGEgRmUgYW5kIHRoZSBGb3VyIFNlYXNvbnMgUmFuY2hvIEVuY2FudGFkby4uIApUbyBoYXZlIGNvbmZpZGVuY2UgaW4gbmVnb3RpYXRpb24sIHNhbGVzcGVvcGxlIGFuZCBtYW5hZ2VycyBuZWVkIGNvbmZpZGVuY2UgaW4gcHJpY2luZy4gQ29uZmlkZW5jZSBpbiBwcmljaW5nIGNvbWVzIGZyb20ga25vd2luZyB0aGUgdmFsdWUgb2YgeW91ciBwcm9kdWN0cyBvciBzZXJ2aWNlcy4gCk1pdCBkZW0gQXJiZWl0ZW4gc2NoaWVuIGVzIGtlaW5lciB3aXJrbGljaCBlaWxpZyB6dSBoYWJlbi4gRWlnZW50bGljaCB3YXIgaWNoIGphIG5hY2ggQ2hlbmdkdSBnZWtvbW1lbiwgdW0gZWluaWdlbiBWZXJ0cmV0ZXJuIGRlciBXaXJ0c2NoYWZ0c2YgU2ljaHVhbiBkaWUga3VsdHVyZWxsZW4gdW5kIGtvbW11bmlrYXRpdmVuIEJlc29uZGVyaGVpdGVuIHZvbiBFdXJvcCBuYWhlIHp1IGJyaW5nZW4uIApUaGF0IGluY2x1ZGVzIHdoYXQgcGVvcGxlIGNhbiBhZmZvcmQgdG8gcmVudCBvciBidXkuIFdvdWxkIHlvdSBzdXBwb3J0IHdlYWx0aCBhbmQgaW5jb21lIHJlZGlzdHJpYnV0aW9uIG9mIHRoZSBnbG9iYWwgd2VhbHRoeSB0byB0aGUgZ2xvYmFsIHBvb3I/IEF2ZXJhZ2UgaW5jb21lIHdoZW4gYWRqdXN0ZWQgaXMgYWJvdXQgJDExayBpaXJjLCB3aGljaCB3b3VsZCBtZWFuIGFueW9uZSBhYm92ZSB0aGF0IHN0YXJ0cyBnZXR0aW5nIGhlYXZpbHkgdGF4ZWQgdG8gc3VwcG9ydCB0aGUgcG9vci4uIApDb29rcyBhcmUgaGVsZCBpbiB2ZXJ5IGxvdyByZWdhcmQgYW5kIChmcmFua2x5KSB0aGVyZSBub3QgYSBsb3Qgb2YgdmFyaWV0eS9jaG9pY2UgKHBhcnRseSBkdWUgdG8gcG9pbnQgMSBhbmQgMikuIApJZiB5b3Ugb3duIGFuZCBvcGVyYXRlIGEgMTNnIENsYXkgUG9rZXIgQ2hpcHMgYnVzaW5lc3MsIGl0IGlzIGltcG9ydGFudCB0byBrbm93IGFuZCB1bmRlcnN0YW5kIGhvdyB0byBpZGVudGlmeSB0YXggY3JlZGl0cyB0aGF0IHlvdSBhcmUgYWJsZSB0byBleHBlcmllbmNlIGVhY2ggeWVhci4gVGF4IGNyZWRpdHMgbWF5IGJlIGRpZmZpY3VsdCBmb3Igc29tZSB0byB1bmRlcnN0YW5kLiAKRXZlbiB0cmlwcyBhcmUgb2Z0ZW4gYmVhdCBieSBhIHN0cmFpZ2h0LCBmbHVzaCwgb3IgZnVsbCBob3VzZS4gSG9sZCdlbSBwbGF5ZXJzIHdobyBzdGFydCB0byBwbGF5IE9tYWhhIG9mdGVuIG5vdCBvbmx5IHBsYXkgYSBoYW5kIGxpa2UgQSBBIDcgOCBidXQgYWxzbyB3aWxsIHJhaXNlIHdpdGggaXQgYmVmb3JlIHRoZSBmbG9wLiBUaGlzIGhhbmQgaXMgdW5wbGF5YWJsZSBiZWNhdXNlIGl0IHdpbGwgbm90IHdpbiB0aGUgbG93IGV2ZW4gaWYgYSBsb3cgaXMgbWFkZSBhbmQgd2lsbCByYXJlbHkgd2luIGV2ZW4gaWYgYW4gYWNlIGNvbWVzIG9uIHRoZSBib2FyZCB1bmxlc3MgdGhlIGJvYXJkIHBhaXJzIChtYWtpbmcgYSBmdWxsIGhvdXNlKSwgYW5kIHRoZSA3IGFuZCA4IGFyZSBhbG1vc3Qgd29ydGhsZXNzLiAKR3JlZ2FyaW91cyBPa2VybHVuZCBmb3IgZGVjYWRlcyBkcm9wcGVkIG1hbnkgbmFtZXMgb2YgcGVvcGxlIGhlIGlkb2xpemVkICAgYnV0IG1vc3QgbGlrZWx5IGhhZCBuZXZlciBtZXQgICB3aGVuIGhlIHByb21vdGUgdG93bnMgZm9yIHVwY29taW5nIHNob3dzLCBzaG93biBsb2NhbGx5IGhlcmUgZXZlcnkgU2F0dXJkYXkgbW9ybmluZyBvbiBLT0ZZIFRWIDIwLiAKQnJvd24gYW5kIHZpc3VhbCBqb3VybmFsaXN0IEVtaWx5IE1pY2hvdCBpbnRlcnZpZXdlZCBmb3VyIG9mIHRoZSB3b21lbiBmb3IgYSBkb2N1bWVudGFyeSwgd2hpY2ggZmVhdHVyZWQga2V5IHBlb3BsZSBpbnZvbHZlZCBpbiB0aGUgY2FzZS4gQnJvd24gYWxzbyByZWFjaGVkIG91dCB0byBmb3JtZXIgYW5kIGN1cnJlbnQgRkJJIGFnZW50cywgZmVkZXJhbCBwcm9zZWN1dG9ycywganVkZ2VzLCBzdGF0ZSBwcm9zZWN1dG9ycywgZGVmZW5zZSBhdHRvcm5leXMsIHZpY3RpbXMnIGF0dG9ybmV5cyBhbmQgcG9saWNlIGZvciB0aGlzIHN0b3J5LiBTb21lIG9mIHRoZXNlIHNvdXJjZXMgc3Bva2Ugb2ZmIHRoZSByZWNvcmQuIApQU1U6IFRoZSBHMyBpcyBuaWNlLCBidXQgdGhlIEZvY3VzIEdvbGQgdW5pdHMgYXJlIG9uIHNhbGUgcmlnaHQgbm93LCBhbmQgdGhleSBhcmUgZmFudGFzdGljIHVuaXRzLiBUaGUgNjUwIFcgd2lsbCBiZSBwbGVudHksIGJ1dCB5b3UgY291bGQgZ3JhYiBhIDc1MCBXIHVuaXQgZm9yIGp1c3QgNSBtb3JlLgpTbyBhcHBhcmVudGx5IHlvdSBwZW9wbGUgYXJlIGFjdHVhbGx5IHVwc2V0IHdpdGggbXkgY29tbWVudCBzbyBpIHdhbnRlZCB0byBjbGFyaWZ5LiBZZXMsIGl0IHdhc24gZnVubnkuIEJ1dCBpbiBubyB3YXkgZGlkIGkgaW50ZW5kIHRvIG9mZmVuZCBhbnlvbmUgKCB3aGljaCwgY29uc2lkZXJpbmcgeW91ciByZXNwb25zZXMsIGkgc3RpbGwgc29tZWhvdyBtYW5hZ2VkIHRvIGFjaGlldmUpLCBpbiBmYWN0LCBpIHN0aWxsIGRvbnQgcmVhbGx5IHVuZGVyc3RhbmQgd2hhdCB3YXMgc28gd3Jvbmcgd2l0aCBteSBjb21tZW50LiAKS2F1ZmVuIFNpZSBrZWluZSB0ZXVyZW4gV2VpY2htYWNoZXIgZnIgRmxlaXNjaCAgIGRhcyBpc3QgZGFzIGdsZWljaGUgd2llIHVuc2VyZSBTb2RhLCBpbiBlaW5lciBzY2huZW4gVmVycGFja3VuZy4gU2llIG1jaHRlbiwgZGFzcyBGbGVpc2NoIHNjaG5lbGwgZHVyY2hicnQgIGR1cmNoZ2FydCwgdW5kIGltbWVyIG5vY2ggd2VpY2ggYmxlaWJ0PyBSZWliZW4gU2llIGRhcyBGbGVpc2NoIG1pdCBTb2RhIGVpbiB1bmQgc3RlbGxlbiBTaWUgZXMgZWluIHBhYXIgU3R1bmRlbiBpbiBkZW4gS2hsc2NocmFuay4gU3BsZW4gU2llIGRhcyBGbGVpc2NoIHZvciBkZW0gS29jaGVuIGFiLCBlbnRmZXJuZW4gU2llIGRhcyBCYWNrcHVsdmVyLiBBdWNoIGVpbmUgYWx0ZSBTY2h3YXJ0ZSB2ZXJ3YW5kZWx0IG1hbiBhdWYgZGllc2UgV2Vpc2UgaW4gZWluIGp1bmdlcyBLYWxiLgpGdXp6eSBCYWxscyBoZWhlIHB1dHMgc25vdXQgb24gYmFsbHMgYW5kIGluaGFsZXMgZGVlcGx5IG9oIGdvZCBpbSBzbyBoYXJkIGxpY2tzIGJhbGxzIHB1bmlzaCBtZSBkYWRkeSBueWVhIHNxdWlybXMgbW9yZSBhbmQgd2lnZ2xlcyBidXR0IEkgbG92ZSB5b3VyIG11c2t5IGdvb2RuZXNzIGJpdGVzIGxpcCBwbGVhc2UgcHVuaXNoIG1lIGxpY2tzIGxpcHMgbnllYSBzdWNrbGVzIG9uIHlvdXIgdGlwIHNvIGdvb2QgbGlja3MgcHJlIG9mIHlvdXIgY29jayBzYWx0eSBnb29kbmVzcyBleWVzIHJvbGUgYmFjayBhbmQgZ29lcyBiYWxscyBkZWVwIG1tbW0gbW9hbnMgYW5kIHN1Y2tsZXMgbzNvRm9yIGFzICJnb29kIG9mIGEgZGVmZW5zaXZlIGdhbWUiIGFzIHRoYXQgd2FzLiBXZSdsbCBzdXJlIGFsbCBiZSBxdWljayB0byBmb3JnZXQgaXQuIEdyZWF0IGRlZmVuc2l2ZSBTdXBlciBCb3dscyBhcmUgcmVtZW1iZXJlZCBiZWNhdXNlIG9mIG91dHJpZ2h0IGRvbWluYXRpb24uIApZb3UnbGwgd2FudCB0byBhdm9pZCBhIHNpdHVhdGlvbiBpbiB3aGljaCB0aGVyZSBhcmVuJ3QgZW5vdWdoIHNlYXRzIGZvciBhbGwgdGhlIHBva2VyIHBsYXllcnMuIFNvIG1ha2Ugc3VyZSB0aGF0IHRoZSB0YWJsZSB5b3UgaGF2ZSBjb250YWlucyBlbm91Z2ggc2VhdHMuIApIZSBzYWlkIGhlIHdhcyBmaW5lIChoZSB3YXNuIGluIG9uIGl0KS4gSSB3YXMgbGlrZSwgIldURj8iIGJlY2F1c2Ugd2hvIHdvdWxkIGxpa2UgYWJvdXQgeW91ciBkYWQgZHlpbmc/IE15IG1vbSwgdGhhdCB3aG8uIE15IG1vbSBkaXN0cmFjdGVkIG1lIGZyb20gdGFsa2luZyB0byBoaW0gZnVydGhlciBhbmQgc2FpZCBzaGUgYm91Z2h0IG1lIG5ldyBjbG90aGVzIGFuZCBtYWtldXAgYW5kIEkgc2hvdWxkIHB1dCB0aGVtIG9uIGJlY2F1c2Ugc29tZSBmcmllbmRzIG9mIGhlcnMgd2VyZSB1bmV4cGVjdGVkbHkgZHJvcHBpbmcgYnkuIAoiV2UgYXJlIHNhZGRlbmVkIHRvIHNoYXJlIHRoZSBwYXNzaW5nIG9mIE1pa2UgS2FtaW8sIG93bmVyIGFuZCBmb3VuZGVyIG9mIEFubmEncyBUYXF1ZXJpYS4gTWlrZSB3YXMgZGVmaW5lZCBieSBoaXMgZGVlcCBsb3ZlIG9mIGZhbWlseSBhbmQgZnJpZW5kcywgaGlzIHNlbGZsZXNzbmVzcywgbmV2ZXIgZW5kaW5nIHRob3VnaHRmdWxuZXNzLCBhbmQgd2lsbGluZ25lc3MgdG8gYmUgb2Ygc2VydmljZSB0byBhbGwgd2hvIG5lZWRlZCBoaXMgaGVscC4gQWxsIGxvY2F0aW9ucyBvZiBBbm5hJ3MgVGFxdWVyaWEgd2lsbCBiZSBjbG9zZWQgb24gRnJpZGF5LCBGZWJydWFyeSAxNXRoIGFzIHRoZSB0ZWFtIGNvbWVzIHRvZ2V0aGVyIHRvIGhvbm9yIE1pa2UncyBtZW1vcnk7IG9uIFNhdHVyZGF5IGFsbCBsb2NhdGlvbnMgd2lsbCBvcGVuIHdpdGggcmVndWxhciBidXNpbmVzcyBob3Vycy4gVW5kZXIgdGhlIGxlYWRlcnNoaXAgb2YgTWlrZSdzIHdpZmUgYW5kIGxvbmd0aW1lIGJ1c2luZXNzIHBhcnRuZXIsIEJldHN5IEthbWlvLCB0aGUgdGVhbSBiZWhpbmQgQW5uYSdzIGxvb2tzIGZvcndhcmQgdG8gYSBsb25nIGZ1dHVyZSBhcyBhIGJlbG92ZWQgQm9zdG9uIGluc3RpdHV0aW9uIGZvciB5ZWFycyB0byBjb21lLiIKU2hlIGV2ZW4gY2l0ZWQgYSBjb21wbGFpbnQgZnJvbSBhIHdvbWFuIGluIEZlYnJ1YXJ5IHdobyBhbGxlZ2VkIGhlciBodXNiYW5kIHdhcyBhIHBhdHJvbiBvZiBwcm9zdGl0dXRpb24gYXQgdGhlIGJ1c2luZXNzLiAKRmlyc3Qgc3RhcnRlZCBwbGF5aW5nIHBva2VyIGZpdmUgeWVhcnMgYWdvLCBhZnRlciBoZSBnYXZlIHVwIG9uIGhpcyBkcmVhbSBvZiBiZWNvbWluZyBhIHByb2Zlc3Npb25hbCBnb2xmZXIuIEluIGEgc2Vuc2UsIGhpcyBmYXNjaW5hdGlvbiB3aXRoIHRoZSBnYW1lIGNhbiBiZSB0cmFjZWQgYmFjayB0byBzaWJsaW5nIHJpdmFscnksIGEgYmF0dGxlIHdpdGggaGlzIHlvdW5nZXIgYnJvdGhlciBNYXR0IHRvIHNlZSBob3cgbWFueSBwbGF5IG1vbmV5IGNoaXBzIHRoZXkgY291bGQgZWFjaCBlYXJuLi4gCklzIG91ciBnb2FsIHRvIGVsZXZhdGUgdGhlIFdQVCBUb3VybmFtZW50IG9mIENoYW1waW9ucywgY3JlYXRpbmcgYW4gZXh0cmFvcmRpbmFyeSBzZWFzb24gZW5kaW5nIGV2ZW50IHRvIGNlbGVicmF0ZSB0aGUgbWVtYmVycyBvZiB0aGUgV1BUIENoYW1waW9ucyBDbHViIGFuZCB0aGUgcmljaCBsZWdhY3kgb2YgdGhlIFdvcmxkIFBva2VyIFRvdXIsIFdQVCBQcmVzaWRlbnQgYW5kIENFTyBBZGFtIFBsaXNrYSBzdGF0ZWQgaW4gYSBwcmVzcyByZWxlYXNlLiBBIHNpZ25pZmljYW50IG92ZXJsYXkgb2YgY2FzaCBhbmQgcHJpemVzIHRoZSBXUFQgaGFzIGltbWVkaWF0ZWx5IGluY3JlYXNlZCB0aGUgdmFsdWUgb2YgYmVpbmcgYSBXUFQgQ2hhbXBpb25zIENsdWIgbWVtYmVyLCBhbmQgd2Ugd2lsbCBjcm93biB0d28gbW9yZSB3aW5uZXJzIHByaW9yIHRvIHRoZSBXUFQgVG91cm5hbWVudCBvZiBDaGFtcGlvbnMgZHVyaW5nIHRoZSBTZW1pbm9sZSBIYXJkIFJvY2sgUG9rZXIgU2hvd2Rvd24gZmVzdGl2YWwuIApBIHJlY2VudCBkYXRhYmFzZSByZXZpZXcgY29uY2x1ZGVkIHRoYXQgZXhlcmNpc2UgaW50ZXJ2ZW50aW9ucyBkbyByZWR1Y2UgdGhlIHJpc2sgYW5kIHJhdGUgb2YgZmFsbHMuNyA4CjEwIDE1IHNlY29uZHMgbGF0ZXIgSSBkaWQgaXQgYWdhaW4gYW5kIHNoZSBmbGlwcGVkIG1lIG9mZi4gCkJlcmVpdHMgYWIgZWluZW0gRWluc2F0eiB2b24gMjIgQ2VudCAgIGltIFJhaG1lbiBkZXIgIFRvdXJuYW1lbnRzIGZvciB0aGUgUGVvcGxlIiEKU2Vjb25kLCBldmVuIGlmIHlvdXIgb3Bwb25lbnRzIGhhdmUgMTBzIG9mIG1pbGxpb25zIGluIHRoZWlyIGFjY291bnQsIG9ubHkgdGhlIGFtb3VudCB0aGF0IGlzIG9uIHRoZSB0YWJsZSBjYW4gYmUgYmV0IGluIGEgc2luZ2xlIGhhbmQsIHdoaWNoIHdpbGwgbGlrZWx5IGJlIHRoZSB0YWJsZSBjYXAuIEkgdG9vayBhIGxvb2sgYXQgV1NPUCBhbmQgaXQgbG9va3MgbGlrZSB0aGVpciBsb3dlc3Qgc3Rha2UgaXMgbm93IDVrLzEwaywgd2hpY2ggaXMga2luZCBvZiB1bmZvcnR1bmF0ZTsgSSBrbm93IHRoZXkgdXNlZCB0byBoYXZlIG11Y2ggbG93ZXIgc3Rha2VzLiAKUnVzaGluZyBhIGZvZSB0byB0YWtlIHRoZW0gZG93biB3aXRoIGEgbWVsZWUgYXR0YWNrIGlzIHVud2lzZSwgZXNwZWNpYWxseSBpZiB0aGUgZ2FuZ3N0ZXIgaGFzIGJhY2t1cC4gCk5vIG1vbmV5IHdpbGwgY2hhbmdlIGhhbmRzIGF0IHRoZSBDaHJpc3RtYXMgZXZlbnQsIGJ1dCB0aGUgcGxheWVycywgYWdlZCBiZXR3ZWVuIDE1IGFuZCAxOSB5ZWFycyBvbGQsIGFyZSBiZWluZyBpbnZpdGVkIHRvIHBsYXkgd2l0aCBjaGlwcyBhbmQgdGhpbmsgbGlrZSAiSmFtZXMgQm9uZCIgd2l0aCB0aGVpciAicG9rZXIgZmFjZXMgYW5kIGx1Y2t5IGNoYXJtcyBhdCB0aGUgcmVhZHkiLgpXYXMgdGhlIGxpZ2h0bmluZyBpbiBhIGJvdHRsZSBmb3IgbWUsIGJlY2F1c2UgSSB3YW50ZWQgdG8gYmUgbGlrZSBoaW0uIi4gCk1vc3QgbWFjaGluZXMgdGFrZSAkNSwgJDEwLCAkMjAsICQ1MCwgJDEwMCBkb2xsYXIgYmlsbHMsIHRob3VnaCBzb21lIGFsc28gdGFrZSAkMSwgdG9vLiBUaGVzZSBhcmVhcyB3aWxsIGJlIGxpdCB1cCBhbmQgdW5taXNzYWJsZS4gCkFmdGVyIHRoZSBpbnRyb2R1Y3Rpb24gb2YgdGhlIGxhd3MsIHRoZSBhcm15IHNldmVyZWQgdGllcyB3aXRoIFN0ZXZlLiBIZSBpcyBiYW5uZWQgZnJvbSBlbnRlcmluZyBhcm15IGJhcnJhY2tzLCBoZSB3YXMgcmVtb3ZlZCBhcyBwcmVzaWRlbnQgb2YgYSB2ZXRlcmFucyBhc3NvY2lhdGlvbiBhbmQgbGFzdCB5ZWFyLCBoZSBzYXlzLCB0aGUgYW50aSBhc3NvY2lhdGlvbiBsYXdzIHByZXZlbnRlZCBoaW0gZnJvbSBtYXJjaGluZyBvbiBBbnphYyBEYXkuClNvIGxldCBtZSBzdW0gdXAgeW91ciBhcmd1bWVudC4gIk15IGhlbHAgaXNuIHBlcmZlY3Qgc28gSSBzaG91bGRuIGRvIGl0IGF0IGFsbC4iCkZyb20gdGhlIG1pZGRsZSBvZiBteSBjaGVzdCB0byB0aGUgdG9wIG9mIG15IGhlYWQgd291bGQgdHVybiBzbyByZWQsIGl0IGxvb2tlZCBhbG1vc3QgYXMgaWYgSSBwYWludGVkIG15c2VsZi4gCkVybmllIGJyb3VnaHQgaGlzIGZyaWVuZCwgcGlhbm8gcGxheWVyIEJpbGx5IEtyYXVzcywgdG8gaGVscC4gCk1lbGxhbm9yICAxNSBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpTbyB3aGVuIEkgc2VlIHN0dWZmIGxpa2UgdGhlc2UgbGlnaHRzLCBpdCBtYWtlcyBtZSBsYXVnaC4gQnV0IGl0IGFsc28gbWFrZXMgbWUgYSBsaXR0bGUgYW5ncnkuIApPbiB0aGUgcHJldmlvdXMgb2NjYXNpb24gdGhlIGhhZCBlYmJlZCByYXBpZGx5IGRvd24gdGhlIGJlYWNoIGFzIG90aGVyIE1QcyB3aXRoZHJldyB0aGVpciBsZXR0ZXJzLi4gCkl0IGJyZWFrcyBSdWxlIDk6IERvIG5vdCBpbmNsdWRlIGxpbmtzIHRvIGJsb2dzLCBzb2NpYWwgbWVkaWEsIG9yIHN0b3Jlcy4gL3IvYXJ0IGlzIG5vdCBhIHBsYWNlIHRvIHNlbGwgeW91ciB3b3JrIG9yIGdyb3cgeW91ciBmb2xsb3dpbmcuIENvbnNpZGVyIC9yL2FydHN0b3JlLiAKSnVzdCB0cnkgdG8gaGFuZyBvbiEgUmVtZW1iZXIgdG8gYnJlYXRoIS4gVGhhdCdzIHdoYXQgaXQncyBsaWtlIHRvIHJpZGUgYmFyZWJhY2sgb24gZnJlZSBiZWFzdCEuIApEdWRlIGxpdGVyYWxseSB3cm90ZSB0aGUgYm9vayBvbiBuYXBhbG0uLiAKIFJlbmRleiB2b3VzIGNvbXB0ZSA6IG9uIGVuIGF2YWl0IGRldXggcmllbiBxdWUgcnVlIEJsb25kZWwgISBhdWpvdXJkJ2h1aSwgenJvLiAKVGFsayBhYm91dCB5b3VyIGdhdGV3YXkgZHJ1Z3MgICBJIGVuZGVkIHVwIHN3aXRjaGluZyBmcm9tIFdpbmRvd3MgUENzIHRvIHRoZSBNYWNCb29rIFBybywgYW5kIG5vdyBhbHNvIGhhdmUgQXBwbGUgVFYsIGlQYWRzLCBIb21lUG9kcywgQWlyUG9kcywgYW5kIFdhdGNoCktyaXN0aWFuIEtlcnIsIGEgY29udHJhY3Qgd29ya2VyIGluIHRoZSB0ZWNoIGluZHVzdHJ5LCBzYWlkIGhlIHdhc24ndCBpbXByZXNzZWQgYnkgdGhlIHRlY2ggY29tcGFueSdzIHdvcmRzIG9yIGFjdGlvbnMuCkFzIHN1Y2gsIGhlciBlbnRpcmUgcGVyc29uYSBzZWVtcyBzaWduaWZpY2FudGx5IGxlc3MgZ2VudWluZSB0aGFuIEJlY2t5IGVudGlyZSBzdG9yeSBsZWFkaW5nIHVwIHRvIGhlciBoZWVsIHR1cm4uIE11Y2ggb2YgdGhlIHJlYXNvbiB3aHkgdGhlcmUgaXNuIHdoaXRlIHZzLiAKV3JpdGUgYSBwcm9wb3NhbCBqdXN0IGxpa2UgeW91IHdvdWxkIGZvciBhbnlvbmUgZWxzZSB0aGF0IGRldGFpbHMgYW4gb3ZlcnZpZXcgb2YgdGhlIHByb2plY3QsIHRoZSBzY29wZSAob3IgYSBicmllZiBzdW1tYXJ5IHdpdGggdGhlIGFjdHVhbCBzY29wZSBhdHRhY2hlZCksIHRpbWVsaW5lLCBhbmQgY29zdHMuIFRoaXMgaXMgYWxzbyBoZWxwZnVsIHRvIGhhdmUgYXMgYSByZWZlcmVuY2UgaWYgdGhlcmUgYXJlIGV2ZXIgYW55IGRpc2FncmVlbWVudHMgbGF0ZXIgb24gYXMgd2VsbC4KSSdkIHJhdGhlciBnbyB0aHJvdWdoIHRoaXMgc3R1ZmYgbm93IHRoYW4gYSBwb3J0aW9uIG9mIHlvdXIgY2FyZWVyIHdoZXJlIHlvdSdyZSBiZWluZyByZWxpZWQgb24gYXMgYSBzdGFydGVyLi4gCkNvbnNpZGVyIHRoZSBudW1iZXJzOiB0aGUgY3VycmVudCB2YWNhbmN5IHJhdGUgaW4gb25jZSBjb3ZldGVkIE1pZHRvd24gc3RhbmRzIGF0IDE1LjQgcGVyY2VudCwgdXAgZnJvbSA4LjcgcGVyY2VudCBhIHllYXIgYWdvLiAKU3RhcnQgd2l0aCB0aGUgYmFzaWMuIFNwYXMgYXJlIGV4cGVjdGVkIHRvIG9mZmVyIHRoZSBiYXNpYyBzcGEgc2VydmljZXMuIFRoZSBiYXNpYyBzcGEgbWVudSBkZXBlbmRzIG9uIHlvdXIgbG9jYXRpb24gYnV0IHdpbGwgdHlwaWNhbGx5IGluY2x1ZGUgYSBmYWNpYWwsIG1hc3NhZ2UsIG1hbmljdXJlLCBhbmQgcGVkaWN1cmUuIApEdXJpbmcgdGhpcyB5ZWFycyBXb3JsZCBTZXJpZXMgT2YgUG9rZXIsIG15IGRpYXJ5IGRvY3VtZW50ZWQgd2hhdCBJIHRob3VnaHQgd2FzIGEgc2xpZ2h0bHkgaGlnaGVyIHRoYW4gYXZlcmFnZSBhbW91bnQgb2YgdGltZXMsIHRoYXQgSSByYW4gaW50byBBY2VzIHdoaWxzdCBob2xkaW5nIEtpbmdzLiBUeXBpY2FsbHksIGhhdmluZyB3YWl0ZWQgNSBob3VycyBmb3IgYSBtYWpvciBoYW5kIHRvIGNvbWUgYWxvbmcsIHRoaXMgY2FuIGJlIG9uZSBvZiB0aGUgbW9zdCBkZW1vcmFsaXNpbmcgc2l0dWF0aW9ucyBpbiBOTEggdG91cm5hbWVudHMuClRoZSBSZXYuIFRob21hcyBSZWVzZSwgYSBWYXRpY2FuIGFuYWx5c3QsIHNhaWQgdGhlIGRlY2lzaW9uIHRvIGNhbm9uaXplIGJvdGggcG9wZXMgd2FzIGEgImJyaWxsaWFudCBtb3ZlIHRvIHVuaWZ5IHRoZSBjaHVyY2gsIiBnaXZlbiB0aGF0IGVhY2ggcG9wZSBoYXMgaGlzIG93biBhZG1pcmVycyBhbmQgY3JpdGljcy4KV2hvIGV2ZXIgaXQgaXMgc2hvdWxkIG1ha2UgbGlmZSBjb21wbGljYXRlZCBmb3IgR3VpbGxpbWFuLiBMaW9uIHdha2luZyB1cCBvciBSdXNzIHNob3dpbmcgdXAgd291bGQgaGF2ZSB0aGVpciBvd24gaWRlYXMgb2YgaG93IHRvIGZpeCB0aGUgSW1wZXJpdW0gaG9ycm9yIHNob3cgYW5kIHNjb2ZmIGF0IFJvYm91dGUgY29tcHJvbWlzZXMuIChUaGVyZSBpcyBubyBiZXR0ZXIgd2F5LCBqdXN0IGxlYXN0IHRlcnJpYmxlIG9wdGlvbnMpLgpBIGhhbmQgYmVnaW5zIHdoZW4gb25lIG9yIG1vcmUgcGxheWVycyB0byB0aGUgbGVmdCBvZiB0aGUgZGVhbGVyIHBvc3QgYSAiYmxpbmQiIGJldHMuIEEgYmxpbmQgYmV0IGlzIHRoZSBzYW1lIGFzIGFuIGFudGUgaW4gb3RoZXIgZ2FtZXMuCkkgdG9vayB0byBjb2xsZWdlIGJlY2F1c2UgSSB3YXMgYSBtZXNzLiAKSGUgc2hvdWxkIGhhdmUgdGFsa2VkIHRvIHlvdSBvbmUgb24gb25lIHdoZW4gaXQgaGFwcGVuZWQsIGdvdCB0aGUgZnVsbCBzdG9yeSBmcm9tIHlvdSwgYW5kIGJlZW4gd2lsbGluZyB0byBoZWFyIHRoYXQgaGlzIGdpcmxmcmllbmQgZGlkIHNvbWV0aGluZyB1bmZvcmdpdmFibGUuLiAKWW91IG5ldmVyIGhhdmUgdG8gZ3Vlc3Mgd2hhdCBXYWxseSBCdW9ubyB3b3VsZCBiZSBsaWtlIGlmIGhlIHdhcyBzaXR0aW5nIGFjcm9zcyBmcm9tIHlvdSBwbGF5aW5nIHBva2VyIGluIExhcyBWZWdhcy4gVGhlIG1hbiBhIG5hdHVyYWwgZ2FtYmxlci4KKEZ1bGwgQW5zd2VyKS4gCkd1eSB1c2VkIHRvIGhhdmUgc2V4IHdpdGggMTYgeWVhciBvbGRzIHRoYXQncyBhbm90aGVyIHN0b3J5LiAKRG9uJ3QgcnVzaCB0aHJvdWdoIGxpZmUgYW5kIGluc3RlYWQgdGFrZSBpdCBvbmUgZGF5IGF0IGEgdGltZS4gSWYgeW91IHdvcmsgeW91cnNlbGYgdG8gdGhlIGdyb3VuZCwgeW91J2xsIGVuZCB1cCBnZXR0aW5nIG92ZXJ3b3JrZWQgYW5kIGZlZWwgYnVybmVkIG91dC4gWW91IGhhdmUgdG8gdW5kZXJzdGFuZCB0aGF0IHRoZSB3b3JsZCBkb2Vzbid0IHJldm9sdmUgb24geW91IGFsb25lLiBUYWtlIGEgc3RlcCBiYWNrIGFuZCBoYXZlIHRoZSB0aW1lIHRvICJzbWVsbCB0aGUgcm9zZXMiLiBMaWZlIGlzIG5vdCBzdXBwb3NlZCB0byBiZSBhIHJ1bm5pbmcgY29udGVzdC4KUG9rZXIgc3R5bGUgZ2FtZXMgY2FuIGJlIHRyYWNrZWQgYmFjayBhcyBmYXIgYXMgdGVuIGNlbnR1cmllcyBmcm9tIHNpbWlsYXIgZ2FtZXMgd2hpY2ggY29udGFpbmVkIHBva2VyIGxpa2UgcnVsZXMgYW5kIHRoZSB1c2Ugb2YgYmx1ZmZpbmcgYXMgcGFydCBvZiBhIG1ldGhvZCBmb3Igc3VjY2Vzcy4gCklmIHRoZSBVUyBoYXMgaGFkIG1vcmUgcmVzb3VyY2VzLCBhbmQgaGFzIHB1dCBtb3JlIGludmVzdGlnYXRpdmUgcG93ZXIgaW50byBzZXJpYWwga2lsbGVycyB0aGFuIG90aGVyIGNvdW50cmllcyBmb3IgYSBsb25nZXIgdGltZSB0aGVuIHRoZXkgYWxyZWFkeSBoYWQgYSBsZWcgdXAuIApXZSBoYWQgYSBnb29kIHRoaW5nIGdvaW5nIGZvciBhIGNvdXBsZSB5ZWFycywgYnV0IGl0IGdvdCB0byBtZSBldmVudHVhbGx5Li4gClRoZSBzZW50ZW5jZSBzY2hlZHVsZXMgR3JhbmRpc29uIHRvIGRpZSBpbiB0aGUgZ2FzIGNoYW1iZXIgb24gSnVseSBIb3dldmVyLCBNYXJ5bGFuZCBsYXcgYWxsb3dzIGZvciBhbiBhdXRvbWF0aWMgYXBwZWFsIG9mIHRoZSBzZW50ZW5jZSwgc28gdGhlIGV4ZWN1dGlvbiBkYXRlIHdpbGwgYmUgZGVsYXllZC4gT24gTWF5IDIyIHRoZSBzYW1lIGp1cnkgY29udmljdGVkIEdyYW5kaXNvbiwgMzEsIHdhcyBjb252aWN0ZWQgb2YgbXVyZGVyIGluIGNvbm5lY3Rpb24gd2l0aCB0d28gY29udHJhY3Qgc2xheWluZ3Mgb2YgU2NvdHQgUGllY2hvd2ljeiBhbmQgU3VzYW4gS2VubmVkeS4gVGhlIGp1cnkgZm91bmQgdGhhdCBHcmFuZGlzb24gaGlyZWQgVmVybm9uIEV2YW5zIHRvIGtpbGwgdGhlIHBhaXIgYSBmZXcgZGF5cyBiZWZvcmUgUGllY2hvd2ljeiB3YXMgdG8gdGVzdGlmeSBhZ2FpbnN0IEdyYW5kaXNvbiBpbiBhIGZlZGVyYWwgZHJ1ZyBjYXNlLiAKWW91IHdvdWxkIHRoaW5rIHRoaXMgd291bGQgbWVhbiBJIHJlc3BvbmQgd2VsbCB0byBzdWIgbWF4IHRyYWluaW5nIGxpa2UgU2hlaWtvLiAKSW4gbGFyZ2UgYm93bCwgYmVhdCBlZ2dzIHdpdGggd2lyZSB3aGlzayBvciBmb3JrIHVudGlsIHdlbGwgYmxlbmRlZC4gCiJXZSBkbyB0aGlzIGV2ZXJ5IHNlbWVzdGVyLCIgSmFja3NvbiBzYWlkLiAiTm93IHRoYXQgdGhleSd2ZSByZW5vdmF0ZWQgaXQsIGl0IGxvb2tzIGZhbnRhc3RpYy4gVGhleSBkaWQgYSBncmVhdCBqb2IuIgpIZSBoaXQgbWUgaW4gdGhlIGZhY2UgYW5kIGtpY2tlZCBtZSBpbiB0aGUgcmlicyBhbmQgdGhlbiBqdXN0IHNhaWQsIHlvdSBrbm93LCAiSSB0aGluayB5b3UnbGwgZmVlbCBkaWZmZXJlbnRseSB0aGUgbmV4dCB0aW1lLCB5b3Uga25vdywgd2UgaGF2ZSB0aGlzIGNvbnZlcnNhdGlvbi4iIFdobyBkaWQgeW91IGNhbGw/IEkgZGlkbid0IGNhbGwgYW55Ym9keS4gClN0dWRlbnRzIGFyYyBhc2tlZCB0byBjaGVjayBpbiBhdCB0aGUgbWFpbiBsb2JieSBvZiB0aGMgYWQgIG1pbmlzdHJhdGlvbiBidWlsZGluZy4gQ29tcGEgIG55IGluZm9ybWF0aW9uIGluIHRoZSBmb3JtIG9mIGEgcGFtcGhsZXQgd2lsbCBiZSBtYWRlIGF2YWlsYWJsZSB0byBzdHVkZW50cywgYXQgdGhhdCB0aW1lLiAKR2lvbmFsIGQnYW5pbWF0aW9uIGJpYmxpcXVlCk5vIHF1ZXN0aW9uIHRoZSBzY291dGluZyBzdGFmZiBhbHdheXMgZ2V0cyBleGNpdGVkIHdpdGggdGhlIG1vcmUgcGlja3MgdGhleSBoYXZlLCBhbmQgSSBrbm93IHRoZSBvcmdhbml6YXRpb24gZGlkIGEgZ3JlYXQgam9iIG9mIGFjcXVpcmluZyB0aGUgcGlja3MgdGhhdCB3ZSBkbyBoYXZlIHRoaXMgeWVhciwgTGFtb3JpZWxsbyBzYWlkLiBNb3JlIHBpY2tzIHlvdSBoYXZlIEkgaGF2ZW4gc2VlbiBhcyBtYW55IChwaWNrcykgaGVyZSBhcyB3ZSBoYXZlIGluIGEgbG9uZyB0aW1lLi4gCk5lZWRsZXNzIHRvIHNheSwgSSB3YXMgcXVpdGUgYW5ub3llZCBieSB0aGUgZW5kIG9mIG15IHN0YXkuLiAKVGhlIENhcmwgUy4gU29sb21vbiBsb3VuZ2Ugd2FzIGRlZGljYXRlZCB0byBDYXJsIG9uIGhpcyA1MHRoIHdlZGRpbmcgYW5uaXZlcnNhcnkgY2VsZWJyYXRpb24gYXMgdGhhbmtzIGZvciBhbGwgaGlzIGhhcmQgd29yayBpbiBvdmVyc2VlaW5nIHRoZSBoYWxsIGNvbnN0cnVjdGlvbiwgc2VydmluZyBhcyB0aGUgaGFsbCBtYW5hZ2VyLCBhbmQgZm9yIGhpcyBmdW5kcmFpc2luZyBlZmZvcnRzICAgdGhlIHByb2NlZWRzIG9mIHdoaWNoIGJlbmVmaXRlZCBsb2NhbCBjaGFyaXRpZXMsIGFzIHdlbGwgYXMgcmVub3ZhdGlvbnMgdG8sIGFuZCBtYWludGVuYW5jZSBvZiwgdGhlIGhhbGwuIENhcmwgdGhvcm91Z2hseSBlbmpveWVkIGhpcyBwb2tlciBuaWdodHMgd2l0aCB0aGUgSyBvZiBDIGdhbmcsIEV1Y2hyZSB3aXRoIGZyaWVuZHMgYW5kIG9jY2FzaW9uYWwgdmlzaXRzIHRvIHRoZSBjYXNpbm8gd2l0aCBNYXJsZW5lLiAKVGhlIG1lcmdpbmcgb25lLCB5b3VyZSBjdXR0aW5nIHRoZSBsYW5lcyBpbiB0aGUgcm91bmRhYm91dCwgYmFkIGhhYml0LiAKSSBmb3VuZCB0aGF0IEV4aXN0ZW50aWFsaXNtIG1ha2VzIGEgbG90IG9mIHZpZXcgcG9pbnRzIHZhbGlkIGFuZCBJIHdhbnRlZCB0byBwbGFjZSB0aGVtIGFsbCB0b2dldGhlciB0byBzZWUgaG93IHRoZXkgY2xhc2ggYW5kIGJlbmQgb2ZmIG9mIGVhY2ggb3RoZXIuIApJbiB0aGF0IGNhc2UsIG5vdGhpbmcgaXMgcmVhbGx5IG11bmRhbmUgYXQgYWxsLi4gCllvdXJlIGxvb2tpbmcgdG8gZ2V0IHZhbHVlIGZyb20gYSB0ZW4gd2hlbiB5b3UgYmV0LiAKQWx0aG91Z2ggdHJlYXRpbmcgbWVudGFsbHkgaWxsIGFuZCBhZGRpY3RlZCBwYXRpZW50cyBpcyBkaWZmaWN1bHQgYW5kIGRhbmdlcm91cywgdGhlIFN0LiBQYXVsJ3MgZG9jdG9ycyBhbmQgbnVyc2VzIGRvIHRoZSBqb2IgYmVjYXVzZSB0aGV5IHdhbnQgdG8sIE5hemlmIHNheXMuICJBdCB0aGlzIGhvc3BpdGFsIHlvdSBoYXZlIHdvbmRlcmZ1bCBwZW9wbGUgd2hvIGhhdmUgY2hvc2VuIHRvIHdvcmsgd2l0aCB0aGlzIHBvcHVsYXRpb24sIGFuZCB3aG8gbGlrZSB0aGUgcGVvcGxlLCIgc2hlIHNheXMuICJNZW50YWwgaWxsbmVzcyBhbmQgYWRkaWN0aW9ucyBhcmUgY2hyb25pYyBpbGxuZXNzZXMsIGJ1dCB0aGV5J3JlIHRyZWF0YWJsZS4gVGhlIHN0aWdtYSBvZiBtZW50YWwgaWxsbmVzcyBzdGFydHMgd2l0aCB0aGUgdW5kZXJmdW5kaW5nIG9mIHRyZWF0aW5nIGl0LiIKSW4gdGhpcyBjYXNlLCB0aGUgdGVuZG9uIGluIHF1ZXN0aW9uIGlzIHRoZSBxdWFkcmljZXBzIHRlbmRvbiB0aGF0IGNvbm5lY3RzIHRoZSBxdWFkcmljZXBzIG11c2NsZSB0byB0aGUga25lZWNhcC4gRXZlbiBpZiB0aGUgcGFpbiBmcm9tIHRoZSB0ZW5kaW5vc2lzIGlzIGJlaW5nIG1hbmFnZWQsIHRoZSBtYWluIHByb2JsZW0gYXNzb2NpYXRlZCB3aXRoIHRoaXMgdGVuZGlub3BhdGh5IGlzIHRoZSB0ZW5kb24gYmVpbmcgY29tcHJvbWlzZWQuIApUaGV5IGhhdmVuJ3QgcmVsZWFzZWQgdGhlaXIgZmluZGluZ3MgYW5kIHlldCB5b3UgZXhwZWN0IG1lIHRvIG1hZ2ljYWxseSBrbm93IHdoYXQgbGF3cyBSdXNzaWEgbWF5IG9yIG1heSBub3QgaGF2ZSBicm9rZW4uIApBbiB1bmZsYXBwYWJsZSB0ZW1wZXJhbWVudCBpcyBvYnZpb3VzbHkgd2hhdCBhIGdvb2QgcG9rZXIgcGxheWVyIGFuZCBhIGdyZWF0IE9ESSBmaW5pc2hlciBoYXZlIGluIGNvbW1vbi4gQnV0IHRoZXJlIGlzIHN0cmF0ZWd5IGludm9sdmVkLCB0b28sIGFuZCBEaG9uaSBncmFzcCBvdmVyIGEgb25lIGRheSBnYW1lIGlzIGNsZWFybHkgb24gbXVjaCBmaXJtZXIgZ3JvdW5kIHRoYW4gaGlzIFRlc3QgYmF0dGluZyBhbmQgY2FwdGFpbmN5LiBUbyB1bmRlcnN0YW5kIHdoYXQgRGhvbmkgaXMgZG9pbmcgcmlnaHQgYXMgYSBmaW5pc2hlciB3ZSBoYXZlIHRvIGxvb2sgYXQgdGhlIGR5bmFtaWNzIG9mIHRoZSBsaW1pdGVkIG92ZXJzIGZvcm1hdC4uIApXaXRoIEFubmEgQ2hhcG1hbgpUaGlzIGlzIGFsc28gYSBjb21wYW55IHRoYXQgYWxzbyBtYWRlIGl0IGEgcmVndWxhciBlbm91Z2ggcHJhY3RpY2UgdG8gb25seSBoaXJlIGF0dHJhY3RpdmUgdGVlbmFnZSBnaXJscyB0byBjYXJob3AuIApBZnRlciBlc2NhcGluZyBhIFNrcnVsbCB0cmFwLCBDYXJvbCBjb21lcyB0byBFYXJ0aCwgd2hlcmUgc2hlIG1lZXRzIE5pY2sgRnVyeSwgcmVkaXNjb3ZlcnMgdGhpbmdzIGFib3V0IHRoZSBwZXJzb24gc2hlIHdhcywgbGVhcm5zIGNsdWVzIGFib3V0IGhlciBkZXN0aW55LCBhbmQgdW5jb3ZlcnMgaGlkZGVuIHRydXRocyBhYm91dCB0aGUgd2FyIGluIHdoaWNoIHNoZSBoYXMgYmVlbiBlbWJyb2lsZWQuIApUaGUgVmlldG5hbSBXYXIgb3ZlcnNoYWRvd2VkIGl0IGFsbCBidXQgdGhlcmUgaXMgbm8gd2F5IGhlIHNob3VsZCBiZSBsaXN0ZWQgYW55d2hlcmUgbmVhciBUcnVtcC4gQW5kIGhlIHByb2JhYmx5IHdvdWxkIGhhdmUgYmVlbiByZW1lbWJlcmVkIGZvciBvdXIgd2l0aGRyYXdhbCBmcm9tIFZpZXRuYW0gaGFkIE5peG9uIG5vdCBzYWJvdGFnZWQgdGhlIFBhcmlzIFBlYWNlIFRhbGtzIG9ubHkgdG8gYWdyZWUgdG8gc2ltaWxhciB0ZXJtcyA0IHllYXJzIGFuZCB0aG91c2FuZHMgb2YgQW1lcmljYW4gKGFsb25nIHdpdGggaHVuZHJlZHMgb2YgdGhvdXNhbmQgVmlldG5hbWVzZSwgQ2FtYm9kaWFuIGFuZCBMYW90aWFuIHZpY3RpbXMpLi4gCkkgaGFkIGZsaW5ncyBhbmQgc2hvcnQgcmVsYXRpb25zaGlwcyBhbmQgYSBmZXcgb25lIG5pZ2h0IHN0YW5kcy4gClRoaXMgaXMgYSBjb3JlIG1hcmtldCBmb3IgYWxsIGFpcnBvcnQgaG90ZWxzIHdpdGggdGhlIGZsb29yIHNwYWNlIHRvIGFjY29tbW9kYXRlIGNvbmZlcmVuY2VzLiAKR2lvbiBPZG9yaSAyMDE5IHNob3VsZCBydW4gdGhlIGZpcnN0IDEwIG9yIHNvIGRheXMgb2YgTm92ZW1iZXIuIEFnYWluLCAzcmQgcGFydHkgc2l0ZXMgc2hvdWxkIGhhdmUgdGlja2V0cywgYnV0IG90aGVycyBvbiB0aGlzIHN1YiBoYXZlIHNlZW4gdGhlIHNob3cgYW5kIG1heSBiZSBhYmxlIHRvIHBvaW50IHlvdSBpbiB0aGUgcmlnaHQgZGlyZWN0aW9uLiBTdW1tZXIgaXMgY29uc2lkZXJlZCB2ZXJ5IGhvdCBhbmQgaHVtaWQsIGFuZCB3aW50ZXIgaXMsIHdlbGwsIGNvbGQgKHRob3VnaCwgbW9zdCBvZiBKYXBhbiBpcyBxdWl0ZSBhIGJpdCB3YXJtZXIgdGhhbiB3aGVyZSBJIGxpdmUsIHNvIEkgYWN0dWFsbHkgbGlrZSBKYXBhbiBpbiB3aW50ZXIsIGhhaGEpLi4gClRoZSByb3V0ZSBjb25zaXN0cyBvZiA1IDYgZGlmZmVyZW50IGxvY2F0aW9ucyBsb2NhdGVkIGluIENhbHZlcnQsIENoYXJsZXMsIGFuZCBTdC4gTWFyeSBjb3VudGllcy4gCklmIHlvdSBob2xkIHRoZW0gZm9yIHR3byB5ZWFycyBvciBtb3JlLCB5b3UgY2FuIHRha2UgYWR2YW50YWdlIG9mIHlvdXIgJDc1MGsgbGlmZXRpbWUgY2FwaXRhbCBnYWlucyB0YXggZXhlbXB0aW9uLi4gClNwb2tlbiBieSBzb21lb25lIHdobyBoYXMgTk8gSURFQSB3aGF0IHRoZXkgdGFsa2luZyBhYm91dC4KSXQncyBhbHdheXMgYm90aGVyZWQgbWUgdGhhdCBHYW5kYWxmIGNvbWVzIGJhY2sgZnJvbSB0aGUgZGVhZC4gVGhlIFJlZCBXZWRkaW5nIGZvciBtZSBpbkxvcmQgb2YgdGhlIFJpbmdzaXMgdGhlIG1pbmVzIG9mIE1vcmlhLCBhbmQgd2hlbiBHYW5kYWxmIGZhbGxzICAgaXQncyBhIGRldmFzdGF0aW5nIG1vbWVudCEgSSBkaWRuJ3Qgc2VlIGl0IGNvbWluZyBhdCAxMyB5ZWFycyBvbGQsIGl0IGp1c3QgdG90YWxseSB0b29rIG1lIGJ5IHN1cnByaXNlLiAKSSBsaWtlIGhlci4uIApTd2VkZW4gaXMgaW4gbXkgb3BpbmlvbiBhIHBlcmZlY3QgY291bnRyeSBmb3IgTEdCVFEgcGVvcGxlIHRvIGxpdmUgaW4uLiAKRWRpdDogc29tZSBvdGhlcnMgc2F5IGlzaWxkdXIgaXMgY2FwcGVkIGFuZCB0aGlzIGlzIHZlcnkgd3JvbmcuIEhlIGlzIHVuY2FwcGVkIGFuZCBoYXMgZmFyIG1vcmUgZmx1c2hlcyB0aGVuIGN1dG9mZi4gCkFuZCB0aGVuIGxvb2sgYXQgTUlMLCB3aG8gaXMgc28gc25pdmVsaW5nIGFuZCBiaXR0ZXIgdGhhdCBzaGUgY291bGRuIGJlIGhhcHB5IGZvciBoZXIgb3duIHNvbiBhbmQgZGF1Z2h0ZXIgaW4gbGF3IG9uIHRoZWlyIHdlZGRpbmcgZGF5LiAKQnV0IGNyaW1lIGZpZ2h0aW5nIGlzIGp1c3QgdGhlIGJlZ2lubmluZywgd2UncmUgdGhpbmtpbmcgdGhlcmUncyByZWFsbHkgYW4gaW5jcmVkaWJsZSBudW1iZXIgb2YgdXNlcyBmb3IgeW91ciBsZWdpb25zIG9mIHVuZGVhZCBoZW5jaG1hbi4uIApJbCBhIHZvcXUgcXVlbHF1ZXMgZG9ubmVzIGNoaWZmcmVzIGNvbW1lIHVuZSBhdWdtZW50YXRpb24gZGUgNCUgZGVzIGF0dGVpbnRlcyBhdXggYmllbnMgZXQgIGwnaW50Z3JpdCBwaHlzaXF1ZSBkZXMgcGVyc29ubmVzIGV0IHVuZSBiYWlzc2UgZGVzIHZvbHMgIGxhIHRpcmUgZGUgMjIlIChzYW5zIGRvdXRlIHBhcyBkYW5zIGxlIDE4ZS4pLiBOb3VzIG5lIHJlcHJlbmRyb25zIHBhcyBsZXMgY2hpZmZyZXMgY29uY2VybmFudCBsZXMgdmVudGVzIHNhdXZldHRlLCBub3VzIGVuIHBhcmxpb25zIGRqIGRhbnMgbm90cmUgYXJ0aWNsZSBkdSAyMiBub3ZlbWJyZS4gCiJJbiBjb250cmFzdCB0byB3aGF0IHdhcyBzdGF0ZWQgaW4gdGhlIHZpZGVvIHRoYXQgaXMgb24gc29jaWFsIG1lZGlhLCBib2R5IHdvcm4gY2FtZXJhIHZpZGVvIGluZGljYXRlcyB0aGF0IG9ubHkgb25lIG9mZmljZXIgaGFkIGEgaGFuZGd1biBvdXQsIGFuZCBpdCB3YXMgcG9pbnRlZCBhdCB0aGUgZ3JvdW5kLCIgaGUgc2FpZC4gCllvdSByaWdodCBpbiB0aGF0IGhlIGVzcGVjaWFsbHkgdmlzaWJsZSBiZWNhdXNlIGhlIFR1cmtpc2gsIGJ1dCBpdCBkaXNpbmdlbnVvdXMgdG8gcHJldGVuZCBoZSB0aGUgZXhjZXB0aW9uIHJhdGhlciB0aGFuIHRoZSBydWxlIGluIHJlZ2FyZHMgdG8gaGlzIHZpZXdwb2ludC5JIGtub3cgYnV0IGl0IGp1c3QgdGhhdCBtb2Rlcm4gYXJndW1lbnRzIGZvciBhY2NlcHRhbmNlIG9mIHRoZSB0ZXJtIGdlbm9jaWRlIHJlZ2FyZGluZyB0aGUgZXZlbnRzIGFsbW9zdCBhbHdheXMgdXNlIFRhbmVyIEFrY2FtIGFzIGFuIHN1cHBvcnQgdG8gYmFjayB1cCB0aGVpciBjbGFpbXMuIApUaGUgc3RlYW0gcmVjaXBlIGdpdmVuIGhlcmUgdXNlcyBldWNhbHlwdHVzLCB3aGljaCBpcyBzaW1wbGUgYW5kIGVmZmVjdGl2ZSwgYnV0IHlvdSBjYW4gcmVwbGFjZSBpdCB3aXRoIGFueSBvZiB0aGUgZXNzZW50aWFsIG9pbHMgbGlzdGVkIGV4Y2VwdCBjbG92ZSBhbmQgdGh5bWUsIHdoaWNoIGNhbiBiZSB0b28gaGFyc2ggd2hlbiBpbmhhbGVkLiAKSG9wZSB0aGlzIHZvbHVtZSB3aWxsIGJlIG9uZSB5b3UnbGwga2VlcCBvbiBhIGJlZHNpZGUgdGFibGUuIApGb3IgbWUsIGkgd2FzIGFib3V0IHRvIGhpdCB5b3Ugd2hlbiBJIHN1ZGRlbmx5IGZvdW5kIG15c2VsZiBpbiBmcm9udCBvZiB5b3UsIGEgZmV3IG1ldGVycyBhd2F5LlNvIG9mIGNvdXJzZSBJIGJlIGRlc29yaWVudGVkIGFuZCB1bmFibGUgdG8gZG9kZ2UgeW91ciBzdHJpa2UsIGdhbWUgb3ZlciBmb3IgbWUuIEFuZCB0aGlzIGFsc28gZXhwbGFpbiB3aHkgeW91IHdvdWxkbiBkbyBBTllUSElORyBleGNlcHQgZG9kZ2UgbXkgZmlzdCwgbGlrZSBraWxsaW5nIG1lLiAKIkknbSBub3QgYSBzZWFzb25lZCBwbGF5ZXIgcGxheWluZyBmb3VyIG9yIGZpdmUgdGltZXMgYSB3ZWVrICAgaXQgd2FzIG9uY2UgYSBtb250aCBhdCBteSBsb2NhbCBjYXNpbm8gaW4gSHVsbCBvbiBhIDEwIGJ1eSBpbi4gU28gdG8gcHJvZ3Jlc3MgdG8gMm0gYW5kIGludGVybmF0aW9uYWwgcG9rZXIgc3VwZXJzdGFyZG9tIGFsbW9zdCBvdmVybmlnaHQgaGFzIGJlZW4gYSBwcm9wZXIgZmFpcnkgdGFsZS4iCk1pc3RlciBNYWtlciBoYXMgcGFja2VkIHRoZSBNYWtlcm1vYmlsZSB3aXRoIGV2ZXJ5dGhpbmcgaGUgbmVlZHMsIGFzIHdlbGwgYXMgaGlzIGtpdGNoZW4gZnJpZGdlIHdoaWNoIHdpbGwgYmUgYWRvcm5lZCB3aXRoIGZhbiBwaWN0dXJlcy4KUG9zdGVkIGJ5IGJlZGhlYWQgYXQgMjo0NSBQTSBvbiBBdWd1c3QgNywgMjAwNgpBbHNvLCBwbGVhc2UgbGVhdmUgYSBkZWNlbnQgdGlwIGJhc2VkIG9uIHRoZSBmdWxsIHByaWNlIG9mIHRoZSBzZXJ2aWNlIGJlZm9yZSBhbnkgZGlzY291bnRzIGFyZSB0YWtlbi4gCkwnaW5zdHJ1Y3Rpb24sIG1lbmUgcGFyIGxhIGp1cmlkaWN0aW9uIGludGVyIHJnaW9uYWxlIHNwY2lhbGlzZSAicG9ydGUgcHJpbmNpcGFsZW1lbnQgc3VyIGRlcyBhYnVzIGRlIGJpZW5zIHNvY2lhdXgsIGV0IGRlcyBjb21wbGljaXRzIGRlIHJlY2VsIGQnYWJ1cyBkZSBiaWVucyBzb2NpYXV4IiwgYSBwcmNpcyAgbCdBRlAgbGUgcHJvY3VyZXVyIGRlIGxhIFJwdWJsaXF1ZSBkZSBNYXJzZWlsbGUsIFhhdmllciBUYXJhYmV1eC4gClRoYXQgYW4gaW50ZXJlc3RpbmcgcXVlc3Rpb24sIHRvby4gSWYgc2hlIG5hcHBpbmcgYnkgaGVyc2VsZiBpbiBoZXIgcm9vbSwgc2hlIGdvIGRvd24gZm9yIGFuIGhvdXIgYW5kIHRoZW4gcG9wIGJhY2sgdXAuIEF0IGRheWNhcmUgb24gaGVyIG1hdCBvciBpZiBzaGUgb24gbXkgYmVkIGFuZCBJIHRoZXJlLCBzaGUgZG8gMiAzIGhvdXJzLiBGb3IgbG9uZyBuYXBzLCBzaGUgd2FrZSB1cCwgbG9vayBhcm91bmQsIGFuZCBnbyBiYWNrIHNsZWVwLiBJIGFzc3VtaW5nIHRoYXQgd2hlbiBzaGUgaW4gaGVyIHJvb20sIHNoZSB3YWtlcyB1cCwgbG9va3MgYXJvdW5kLCByZWFsaXplcyBubyBvbmUgaXMgdGhlcmUgYW5kIGdldHMgdXBzZXQuCkxldCBzZWUgdGhlIHBvaW50cyB0aGF0IHlvdSBib3RoIGdvdCB0aWxsIG1vdmUgNzMsIGJlZm9yZSBhbm90aGVyIGZpZ2h0IHN0YXJ0ZWQuIChNYXliZSBJIG5vdCBwcmV0dHkgY29uY2lzZSBoZXJlKSBXaGl0ZSBoYXMgMTMgcG9pbnRzIGluIHRoZSByaWdodCBib3R0b20sIDEwIHBvaW50cyBpbiB0aGUgcmlnaHQgdG9wLCA5IHBvaW50cyBpbiB0aGUgbGVmdCB0b3AsIDIyIHBvaW50cyBpbiB0aGUgbGVmdCBib3R0b20uIFRvdGFsbHksIHdoaXRlIGhhcyA1NCBwb2ludHMuIEJsYWNrIGhhcyA5IHBvaW50cyBpbiB0aGUgbGVmdCBib3R0b20sIDQgcG9pbnRzIGluIHRoZSBsZWZ0IHRvcCwgMTUgcG9pbnRzIGluIHRoZSB0b3AsIDIxIHBvaW50cyBpbiB0aGUgcmlnaHQsIGFuZCAzIGNhcHR1cmVzLiBTbywgeW91IGhhdmUgdG90YWxseSA1MiBwb2ludHMuIE5vdGUgdGhhdCBvbmx5IHRoZSBncm91cHMgb24gdGhlIHRvcCBhbmQgb24gbGVmdCB1cCBzaWRlIGlzIHNhdmUsIGFuZCBhbGwgb2YgeW91ciBvdGhlciBncm91cHMgYXJlIHByZXR0eSB1bnN0YWJsZWQsIHdoaWxlIHdoaXRlIGdyb3VwcyBhcmUgYWxsIHNldHRsZWQuIE1vcmVvdmVyLCB3aGl0ZSBoYXMgYSBzZW50ZSwgd2hpY2ggaGFzIGEgdmFsdWUgb2YgYXBwcm94aW1hdGVseSAxMCBwb2ludHMuIFNvLCB5b3UgYXJlIGFscmVhZHkgbG9zaW5nIHRoZSBnYW1lIGF0IHRoaXMgcG9pbnQuCkFueXdheSwgaGUgY2FsbHMgbWUgdXAgb25lIG5pZ2h0IHRvIGFzayBmb3IgYSByaWRlLiBTb21lIG90aGVyICJmcmllbmRzIiBoYWQgZGl0Y2hlZCBoaW0gaW4gYSBnYXMgc3RhdGlvbiBwYXJraW5nIGxvdCwgbGlrZWx5IGZvciBub3QgcGF5aW5nIGZvciBnYXMuIApUaGUgdmFyaWV0eSBpcyBhbWF6aW5nLiAKQW4gZWx1c2l2ZSBkcmVhbQpJZiB5b3UgYXJlIDE1IG1pbnV0ZXMgbGF0ZSBvciBtb3JlLCBwbGVhc2UgYmUgYXdhcmUgdGhhdCB5b3Ugd2lsbCBiZSBhc2tlZCB0byByZXNjaGVkdWxlIHlvdXIgYXBwb2ludG1lbnQgZm9yIGEgZGlmZmVyZW50IHRpbWUgb3IgZGF5LiBJZiB5b3UgYXJlIHVuZGVyIDE1IG1pbnV0ZXMgbGF0ZSB5b3Ugd2lsbCBvbmx5IHJlY2VpdmUgdGhlIHRpbWUgbGVmdCByZW1haW5pbmcgb24geW91ciBzZXJ2aWNlLgpUaGUgbnVtYmVyIG9mIG1hcnJpZWQgcGVvcGxlIHdobyB3aXNoIHRoZXkgd2VyZSBoYXZpbmcgYW4gYWZmYWlyIGlzIHByb2JhYmx5IG11Y2ggaGlnaGVyIHN0aWxsLi4gCkNhbiBJIHBsZWFzZSBoYXZlIGFkdmljZS9yZWNvbW1lbmRhdGlvbnMgb24gYnV5aW5nIGEgcG9ydGFibGUgbWVkaWEgcGxheWVyPyAocHJlZmVyYWJseSBub24gIG5hbWUgYnJhbmQpLiBNeSBtYWluIHVzYWdlcyB3aWxsIGJlIHdhdGNoaW5nIHBva2VyIHRyYWluaW5nIHZpZGVvcyAoYXZhaWxhYmxlIGluIG1wNCBhbmQgV01WIGZvcm1hdHMpLCBhbmQgcmV2aWV3aW5nIHBva2VyIGhhbmQgaGlzdG9yaWVzIHdoaWNoIGFyZSBpbiBhIHR4dCBmb3JtYXQuIFByZXN1bWFibHkgSSB3YW50IGEgcGxheWVyIHdpdGggYSBsb25nIGJhdHRlcnkgbGlmZSAoaXMgOCBob3VycyB0b28gbXVjaCB0byBhc2s/KSBTbyBJJ20gbG9va2luZyBmb3Igc29tZXRoaW5nIHRoYXQgZG9lcyB0aGVzZSB0aGluZ3MsIGJ1dCBJIGRvbid0IG5lZWQgaXQgZm9yIGFueXRoaW5nIGVsc2UsIChubyB3aSBmaSwgM0cgZXRjKS4gU29tZXRoaW5nIHRoYXQgd2lsbCBzdWl0IG15IG5lZWRzIGJ1dCB3b24ndCBjb3N0IGEgd2hvbGUgbG90LgoiVGhlIFJldm9sdXRpb24iIGluIFJ1c3NpYSB3YXMgcHJldHR5IG11Y2ggcmVkdWNlZCB0byBhY3Rpb25zIGJ5IGFuZ3J5IGJvbWJlcnMgYSBoYWxmIGNlbnR1cnkgbGF0ZXIgaW4gdGhlIGxhdGUgMTgwMHMgd2l0aCB0aGUgZW1lcmdlbmNlIG9mIHRoZSBOYXJvZG5heWEgVm9seWEsIHRoZSBmaXJzdCBhbnRpIGdvdmVybm1lbnQgZ3JvdXAgKGlmIG1lbW9yeSBzZXJ2ZXMgbWUgY29ycmVjdGx5KSB0byBiZSBjYWxsZWQgInRlcnJvcmlzdCIgYnkgdGhlIGdvdmVybm1lbnQgaXQgd2FzIHRhcmdldGluZyAoSW1wZXJpYWwgUnVzc2lhKS4uIApIb3dldmVyLCB0aGUgaHVtYW4gTEZDcyBhcmUgY29tcGxleDsgdGhleSBob3VzZSBtdWx0aXBsZSBkaXMgIHRpbmN0IHN1YiByZWdpb25zLCBlYWNoIG9mIHdoaWNoIGNvIGFjdGl2YXRlcyB3aXRoIGEgZGlmZmVyZW50IGZ1bmN0aW9uYWwgbmV0d29yay4gSXQgcmVtYWlucyB1bmNsZWFyIGhvdyB0aGVzZSBMRkMgbmV0d29ya3MgZGlmZmVyIGluIHRoZWlyIGZ1bmN0aW9ucyBhbmQgaG93IHRoZXkgY29vcmRpbmF0ZSB3aXRoIGVhY2ggb3RoZXIsIGFuZCB0aGUgdmVudHJhbCBzdHJpYXR1bSwgdG8gc3VwcG9ydCBpbnRlbnRpb25hbCBsZWFybmluZy4gCkF0IHRoZSBYIGdhbWVzIGVhcmxpZXIgdGhpcyB5ZWFyLCBIaXJhbm8gaGFkIGEgcnVuIHRoYXQgd2FzIHByZXR0eSBtdWNoIHBlcmZlY3QsIGJ1dCByZWNlaXZlZCBhIHNjb3JlIG9mIDk5LiAKQWxzbyBhIGxvdCBtb3JlIG9wZW4gYW5kIGhvbmVzdCB3aGVuIGl0IGNvbWVzIHRvIHRoZWlyIHBlcnNvbmFsIGxpdmVzIGFuZCBiZWluZyBtb3JlIHZ1bG5lcmFibGUuIApSZXRvdXIgc3VyIHF1YXRyZSBtb2lzIG1haWxscyBkZSBsYSBzaWduYXR1cmUgZGUgcGx1c2lldXJzIGFjY29yZHMgc29jaWF1eCwgZGUgZGNpc2lvbnMgZm9ydGVzIGV0IGRlIHByZW1pZXJzIHJzdWx0YXRzIGVuY291cmFnZWFudHMuIApJdHMgc3R1ZGVudHMgYWxzbyBjb25zaXN0ZW50bHkgc2NvcmUgaGlnaGx5IG9uIG51bWVyb3VzIG5hdGlvbmFsIGFuZCBpbnRlcm5hdGlvbmFsIG1hdGggYW5kIHNjaWVuY2UgY29udGVzdHMuLiAKQXMgeW91IHNlZSwgeW91IG5vdCBvbmx5IGxvc2UgdGhlIGNhc2lubyBib251cyBidXQgYWxzbyB0YWtlIG91dCBvZiB5b3VyIHBvY2tldCAkNTAsIGluIHRoaXMgY2FzZSBpdCBpcyBiZXR0ZXIgdG8gcmVmdXNlIHRoZSBib251cy4gClRoZSBldmVuaW5nIHdvcmtzaG9wIGFsc28gaW5jbHVkZXMgYSByZXN0b3JhdGl2ZSBmbG93IHlvZ2Egc2Vzc2lvbiwgaW5jb3Jwb3JhdGluZyBwb3NlcyB0aGF0IGludml0ZSB5b3UgdG8gY29ubmVjdCB3aXRoIHlvdXIgZGF0ZSBpbiBib2R5IGFuZCBtaW5kLiAKTWF0dGhldyBNY2NvbmF1Z2hleSBzYXlzIGhlIHdhbnRzIHRvIHBsYXkgUnVzdCBhZ2FpbiwgRG9yZmYgaXMgc2F5aW5nIE5pYyB0aGlua3MgaXQgYmUgY29vbCB0byBicmluZyB0aGUgY2hhcmFjdGVycyBmcm9tIGRpZmZlcmVudCBzZWFzb25zIHRvZ2V0aGVyIGluIHRoZSBmdXR1cmUsIGFuZCBOaWMgc2FpZCBoZSB3YXMgZ29pbmcgdG8gZG8gYSBtb3ZpZSBhbmQgc29tZSBvdGhlciBwcm9qZWN0cyBhZnRlciBzZWFzb24gMywgYnV0IHNheXMgbm93IGhlIG1pZ2h0IGNoYW5nZSBoaXMgbWluZCBiZWNhdXNlIGhlIGhhcyBhIGNyYXp5IGlkZWEgZm9yIHNlYXNvbiA0LiBJIHRoaW5rIGZpbmRpbmcgdGhlIHRhcGUgb3IgYSBzaW1pbGFyIG9uZSBpbiB0aGUgcG9zc2Vzc2lvbiBvZiBIb3l0IChwbGF5ZWQgYnkgTWljaGFlbCBSb29rZXIsIHdobyB0ZW5kcyB0byBiZSB0eXBlY2FzdCBhcyBhIHJlZG5lY2sgcHN5Y2hvKSwgd291bGQgYmUgYSBnb29kIHdheSB0byBoaW50IGF0IGl0LiAKRm9yd2FyZCB0aGlua2luZy4gRGl2ZSBkZWVwIGludG8gdGhlIGFnZW5kYXMgZHJpdmluZyB1cyB0b3dhcmRzIHRoZSBmdXR1cmUuIEFzIGEgY2FzZSBpbiBwb2ludCwgSSBjdXJyZW50bHkgd29yayBpbiBhIGNhdGVnb3J5IHdoZXJlIHRoZSBmdXR1cmUgaXMgYmVpbmcgcmFwaWRseSByZSBkZWZpbmVkIGluIHRlcm1zIG9mIG1vYmlsaXR5IHNvbHV0aW9ucy4gU21hcnQgY2l0aWVzIGFyZSBubyBsb25nZXIgYSBjb25jZXB0IG9uIHRoZSBkcmF3aW5nIGJvYXJkLiBIb3cgY2FuIGJyYW5kcyBmdXR1cmUgcHJvb2YgYW5kIGJlc3QgaW50ZXJ2ZW5lLCByaWRpbmcgb24gZGF0YSwgdGVjaCwgY3VsdHVyZSBhbmQgY3JlYXRpdmUgc29sdXRpb25zIHRvIGNyZWF0ZSBhbiBvcHRpbWFsIGNvbnN1bWVyIG9yIHVzZXIgZXhwZXJpZW5jZT8gQSBjaGFsbGVuZ2UsIGFuZCwgaW4gdGhhdCwgYSBzdHJvbmcgb3Bwb3J0dW5pdHkuCkkganVzdCB0b2xlcmF0aW5nIHRoZSBldmVuaW5nLCBpbiBkaXNiZWxpZWYgdGhhdCBteSBtb20gc2FpZCBteSBkYWQgd2FzIGZ1Y2tpbmcgZHlpbmcgdG8gZ2V0IG1lIHRvIGNvbWUgaG9tZSBhbmQgSSBjYW4gY29uZnJvbnQgaGVyIGFib3V0IGl0IGJlY2F1c2Ugd2UgaGF2ZSBkaW5uZXIgZ3Vlc3RzLiAKQnV0IHRocmVlIHllYXJzIGFnbywgb24gQXVnLiAxNCwgYWZ0ZXIgYSB0d28gd2VlayBzaWVnZSwgSVNJUyBvcmRlcmVkIHRoZSBlbnRpcmUgcG9wdWxhdGlvbiBvZiBLb2NobyB0byBhIHNjaG9vbHlhcmQsIHdoZXJlIHRoZXkgYXNrZWQgdGhlIGxvY2FsIGxlYWRlciBpZiB0aGUgdmlsbGFnZXJzIHdvdWxkIGNvbnZlcnQgdG8gSXNsYW0uIFlhemlkaXNtIGlzIG9uZSBvZiB0aGUgb2xkZXN0IGZhaXRocyBpbiBNZXNvcG90YW1pYSwgZGF0aW5nIGJhY2sgNiwwMDAgeWVhcnMsIGFuZCBoYXMgZWxlbWVudHMgaW4gY29tbW9uIHdpdGggbWFueSByZWxpZ2lvbnMgb2YgdGhlIE1pZGRsZSBFYXN0OiBab3JvYXN0cmlhbmlzbSwgSXNsYW0sIEp1ZGFpc20uIApIZSB3b24gdGhlIGdhbWUncyBiaWdnZXN0IHByaXplLCB0aGUgV29ybGQgU2VyaWVzIE1haW4gRXZlbnQsIGluIDE5ODkgYW5kIGlzIGFtb25nIHRoZSB0b3AgbGlmZXRpbWUgbW9uZXkgd2lubmVycywgd2l0aCBtb3JlIHRoYW4gJDYgbWlsbGlvbiBpbiBXb3JsZCBTZXJpZXMgZXZlbnQgcHJpemVzLiBCdXQgbGFzdCB5ZWFyIGl0IGFsbCBiZWdhbiB0byBmYWxsIGFwYXJ0LiAKRXZlbnRzIGtpY2sgb2ZmIHdpdGggbXVjaCBjaGVlcmluZyBhcyB0aGUgV2Fzc2FpbCBRdWVlbiwgZGFyayBhbmQgcHJldHR5IEthcmVuIEplbnNlbiwgd2hvIHdvcmtzIGluIHRoZSBHYXltZXJzIG9mZmljZSwgaXMgY3Jvd25lZCB3aXRoIGEgd3JlYXRoIG9mIGJlcnJpZXMuIFNoZSBpcyBjYXJyaWVkIGludG8gdGhlIG9yY2hhcmQgb24gdGhlIHNob3VsZGVycyBvZiB0aGUgTW9ycmlzIG1lbiwgd2hvIGFyZSwgU3VtbWVyZmllbGQgdGVsbHMgbWUsIGEgbW9kZXJuIGFkZGl0aW9uIGFkZCBjb2xvdXIgVGhlIHJlc3Qgb2YgdXMgdHJvb3AgYmVoaW5kIHdpdGggd29vZGVuIHN0YWZmcyBsaWtlIGEgR2FuZGFsZiBjb252ZW50aW9uLgpQbGFjZSB0aGUgcGV0IGJpcmQgaW4gc3RlYW15IHJvb20uIFRoZSB0ZW1wZXJhdHVyZSBzaG91bGQgYmUgYmV0d2VlbiA4NW9GIHRvIDkwb0Ygd2l0aCBhYm91dCA2MCUgaHVtaWRpdHkuIEFjaGlldmUgdGhpcyB0ZW1wZXJhdHVyZSBhbmQgaHVtaWRpdHkgYnkgdHVybmluZyBvbiB0aGUgc2hvd2VyIHVudGlsIHRoZSBiYXRocm9vbSBnbGFzc2VzIGFyZSBzdGVhbWVkIHVwLiAKVGhlIHJlc3QgdHJpZWQgdG8gZmxlZSBidXQgcmFuJyBoZWFkb24gaW50byBBbWVyaWNhbiBNYSAgcmluZXMgd0tvIGhhZCBsYW5kZWQgb25seSBmb3VyIG1pbGVzIGF3YXkuIE5lYXIgdGhlIGNvYXN0YWwgY2l0eSBvZiBRdWFuZyBUcmkuIE1ycy4gCkluIHRoZSAyMDAxIGNhc2Ugb2YgdGhlIFVuaXRlZCBTdGF0ZXMgdi4gUHJvc2VjdXRlZCBhbiBBbWVyaWNhbiB3aG8gc2V0IHVwIGFuIG9ubGluZSBzcG9ydHMgYmV0dGluZyBvcGVyYXRpb24gaW4gQW50aWd1YS4gQ29oZW4gdG9vayBncmVhdCBjYXJlIHRvIGNvbnN1bHQgd2l0aCBsYXd5ZXJzIGFuZCBhY2NvdW50YW50cyBhaGVhZCBvZiB0aW1lIHRvIG1ha2Ugc3VyZSB0aGF0IGhpcyBvcGVyYXRpb24gd2FzIGxlZ2FsLiAKSGUgd2FzIGFsd2F5cyBmaWdodGluZyBmb3Igd2hhdCB3YXMgcmlnaHQsIHdoYXQgd2FzIGdvb2QgZm9yIHRoZSBwZW9wbGUuIAoiSSBkaWRuJ3QgdGhpbmsgaXQgd291bGQgbGVhZCB0byBhbnl0aGluZyBncmVhdC4gCk15IHdpZmUgMzJmIGJvdWdodCBtZSAzMW0gYSBtYXNzYWdlIGZvciBteSBiaXJ0aGRheQpJZiB5b3Ugd2F0Y2ggZGV2ZWxvcGVyIHRhbGtzIGFib3V0IERPT00sIHRoZXkgZW1waGFzaXplIG1vdmluZyBmYXN0IGFuZCBob3cgdGhleSBjcmVhdGVkIGFuZCBjaGFuZ2VkIGdhbWVwbGF5IG1lY2hhbmljcyB0byBhbHdheXMgaGF2ZSB0aGUgcGxheWVyIG1vdmluZyBhcm91bmQgYW5kIGtpbGxpbmcgZW5lbWllcy4KTXlzdGljX2J1cnJpdG8gIDYgcG9pbnRzICBzdWJtaXR0ZWQgMTYgZGF5cyBhZ28KQWx0ZXJuYXRpdmVseSBsb2NhdGlvbiB0aGUgb2lsIGZpcnN0IGluIHlvdXIgYXJtcyBhbmQgaGVhdCB0aGUgb2lsIHVwIGJ5IHJ1YmJpbmcgeW91ciBmaW5nZXJzIHdpdGggZWFjaCBvdGhlci4gClRoZSBtb3N0IHByZWZlcmFibGUgcG9zaXRpb24gd2hlbiB5b3UgcGxheSBwb2tlciBpcyB0aGUgImxhdGUgcG9zaXRpb24iICAgdGhlIHBvc2l0aW9uIHdobyBiZXRzIGxhc3QgZnJvbSBhbW9uZyB0aGUgZ3JvdXAuIFRoaXMgaXMgYW4gYWR2YW50YWdlIHdoZW4geW91IHBsYXkgcG9rZXIgYmVjYXVzZSB5b3UgY2FuLCBtb3JlIG9yIGxlc3MsIGdhdWdlIHRoZSBzdHJlbmd0aCBvZiB0aGUgY2FyZHMgb2YgdGhlIG90aGVyIHBsYXllcnMuIFRvIGVuc3VyZSB0aGF0IGVhY2ggcGxheWVyIGdldHMgdGhpcyBhZHZhbnRhZ2UsIHRoZSBkZWFsZXIgYnV0dG9uIHdpbGwgcm90YXRlIGVhY2ggaGFuZC4uIApBbW9uZyBtYW55IG90aGVyIHRoaW5ncyB0aGUgV2hpdGUgUGFwZXIgbGltaXRlZCBKZXdpc2ggaW1taWdyYXRpb24gdG8gNzUsMDAwIGZvciA1IHllYXJzICgxOTM5IDE5NDQpIHdpdGggbGltaXRzIG9mIGZ1cnRoZXIgaW1taWdyYXRpb24gdG8gYmUgZGV0ZXJtaW5lZCBieSB0aGUgQXJhYiBtYWpvcml0eS4gClJhaXNlIHlvdXIgYXJteSwgc2VuZCBpdCBpbiB0byBraWxsIGFzIG1hbnkgb2YgaGlzIGV2ZW50IHRyb29wcyBhcyBwb3NzaWJsZSwgdGhlbiB1biByYWlzZSB5b3VyIGFybXkuIApBIGZyb3N0aW5nLiAKV2lsc29uIHJldmVhbHMgbGlmZSBhcyBhIHBva2VyIGxlZ2VuZApOZXcgY2l0aXplbnMgYXJlIHJlcXVpcmVkIHRvIHBsZWRnZSBhbGxlZ2lhbmNlIHRvIHRoZSBRdWVlbiBidXQgd2hhdCBhYm91dCB0byB0aGUgVHJlYXR5IG9mIFdhaXRhbmdpPyBLYXRlIE1hY21pbGxhbiwgZnJvbSBWaWN0b3JpYSBVbml2ZXJzaXR5IFBvbGl0aWNzIGRlcGFydG1lbnQsIGFja25vd2xlZGdlcyB0aGVyZSBhcmUgaW5oZXJlbnQgY29udHJhZGljdGlvbnMgYmV0d2VlbiB3aGF0IGlzIGZhaXIgdG8gdGhlIHdvdWxkIGJlIGFycml2YWxzIGFuZCB0byB0aG9zZSBhbHJlYWR5IGhlcmUuIE5ldyBaZWFsYW5kIGhhcyBvbmUgb2YgdGhlIHdvcmxkJ3MgbW9zdCBsaWJlcmFsIHJlZ2ltZXMgd2l0aCByZWdhcmQgdG8gdm90aW5nIHJpZ2h0cywgaW50cm9kdWNlZCBpbiAxOTc1IHdoZW4gbW9zdCBpbW1pZ3JhbnRzIHdlcmUgZnJvbSBCcml0YWluLiAKVG9tb3Jyb3cgSSBjb3VsZCBoYXZlIDYwIHBlb3BsZSwgSSB0YWtlIHRoZW0gcmlnaHQgYXQgdGhlIGRyb3Agb2YgYSBoYXQsIHNhaWQgUm9iZXJ0c29uLCB3aG8gc2FpZCBhIGJpZyBwYXJ0IG9mIHRoZSBjaGFsbGVuZ2UgaXMgY29udmluY2luZyBwZW9wbGUgd2hvIGtub3cgbm90aGluZyBhYm91dCBXaW5kc29yIHRoZSBiZW5lZml0cyBvZiBsaXZpbmcgaGVyZS4gSGUgYWxzbyBzZWxscyB0aGVtIG9uIHRoZWlyIHBvdGVudGlhbCBlbXBsb3llci4gCkl0IHdpbGwgYmUgYSBiaXQgaG90dGVyLCBlc3BlY2lhbGx5IG5lYXIgdGhlIGVuZCBvZiBTb2NhbC4gQnkgdGhhdCBwb2ludCB5b3Ugd2lsbCBhbHNvIGJlIG1vcmUgaGVhdCBhZGFwdGVkLiBZb3Ugd2lsbCBuZWVkIHRvIHRha2UgYnJlYWtzIGR1cmluZyB0aGUgaG90IHBhcnQgb2YgdGhlIGRheSBhbmQgdGFrZSBhZHZhbnRhZ2Ugb2YgZXZlcnkgaG91ciBvZiBjb29sIGRheWxpZ2h0IHlvdSBnZXQuIApDYXBzYSBzdXN1biBUaGUgY29ycmVjdCBhbnN3ZXIgaXMgaW4gbWFraW5nIHVzZSBvZiB0aGUgcmVndWxhdGlvbnMgYW5kIHRlY2huaXF1ZXMgdG8geW91ciBhZHZhbnRhZ2UgdGhlbiB0YWtpbmcgcGFydCBpbiB0aGUgcG9rZXIgaGFuZHMgYW5kIHdyaXN0cyB5b3UgbWlnaHQgYmUgZGVhbHQgYmFzZWQgb24gdGhhdCBzdHlsZSBhbmQgbm90IHdoaWxlIHlvdSB3b3VsZCB3aXRoaW4gYSBzdGF5IG9ubGluZSBnYW1lLi4gClNoZSBsYXRlciBjbGFpbWVkIHNoZSB3YXMgbWlzcXVvdGVkICAgMjAgcGVyY2VudCByZWZlcnJlZCB0byBhdmFpbGFiaWxpdHksIG5vdCB2YWNhbmN5LCBzaGUgc2FpZCwgYW5kIGV2ZW4gdGhhdCB3YXMgYmFzZWQgb24gYW4gdW5vZmZpY2lhbCBzdXJ2ZXksIG5vdCBhIGZvcm1hbCByZXBvcnQuLiAKU2tpZGRvb3NoICAyIHBvaW50cyAgc3VibWl0dGVkIDExIG1vbnRocyBhZ28KVGhlbiBzaGUgc2FpZCBzaGUgaGFuZGVkIFRlZ2FuIHRvIHRoZSBiYWJ5IGZhdGhlciwgYSBtYW4gbmFtZWQgQW5kcmV3IE1vcnJpcy4gCkkgcmVhbGl6ZSB0aGlzIGlzIHRoZSBhZ2VuY3kgdGhhdCBpcyBmYW1vdXMgZm9yIGtpbGxpbmcgb3IgYXR0ZW1wdGluZyB0byBraWxsIHBvcHVsYXIgbGVhZGVycywgcHV0dGluZyBkaWN0YXRvcnMgaW4gdGhlaXIgcGxhY2UsIGFuZCBnZW5lcmFsbHkgc3ByZWFkaW5nIG1pc2VyeSBhcm91bmQgdGhlIHdvcmxkLiAKT3ZlcnRocmV3IGlyYXEgYnV0IG5ldmVyIHNlY3VyZWQgdGhlIGFtbW8gZHVtcHMuIERpc2JhbmRlZCB0aGUgbWlsaXRhcnkgYWdhaW5zdCBhZHZpY2Ugb2YgcHJvZmVzc2lvbmFscyBhbmQgdGhhdCBtaWxpdGFyeSBlbmRlZCB1cCBiZWNvbWluZyBpc2lzLiBBbmQgd2F0Y2hlZCBhcyB0aGUgZWNvbm9teSBidXJuZWQgd2hpbGUgaGlzIHBlb3BsZSBjb21wbGFpbmVkIHJlY2Vzc2lvbiB3YXMgb25seSBpbiB0aGUgaW1hZ2luYXRpb24gb2ZmIHRoZSBtaWRkbGUgY2xhc3MuLiAKSWYgeW91IHdhbnQgdG8gd29yayBvbiB0aGluZ3MgdG8gaW5jcmVhc2UgeW91ciB3aW5yYXRlIGF0IDEvMiwgbG9vayBhdCB0aGluIHZhbHVlIGJldHMgYW5kIDNiZXR0aW5nIG1vcmUgb2Z0ZW4uIApHbyB0byBXaGl0ZSBSb2NrIGxha2UgYW5kIGtheWFrLiBJIGFsd2F5cyBlbmpveSB0aGUgUGVyb3QgTXVzZXVtLiAKTm8gbmV3IGZ1bGx5IGF1dG9zIG9yIGJ1cnN0IGNhbm5vdCBiZSBib3VnaHQgYW55d2hlcmUgaW4gdGhlIHVzIHVubGVzcyB5b3UncmUgbGF3IGVuZm9yY2VtZW50IG9yIGhhdmUgYSBjbGFzcyA3IGZpcmVhcm1zIGxpY2Vuc2Ugd2hpY2ggaXMgdG8gbWFrZSB0aGVtIHRvIHNlbGwgdG8gbWlsaXRhcnkgb3IgbGF3IGVuZm9yY2VtZW50LiBUaGUgZmVkZXJhbCBsYXcgaXMgcHJlIDE5ODYgd2l0aCB0aGUgNm1vbnRoKyB3YWl0LCBmaW5nZXJwcmludHMgYW5kICQyMDAgdGF4IHN0YW1wLiBTb21lIHN0YXRlcyBnbyBmdXJ0aGVyIGFuZCBqdXN0IG91dHJpZ2h0IGJhbiB0aGUgcHJlIDE5ODYgb25lcy4gCk9oIHllYWggdGhhdCBub3RjaC4gClR3byBvbGRlciBtZW4gc21va2luZyBvdXRzaWRlIHRlbGwgYSB2ZXJ5IGRpZmZlcmVudCBzdG9yeS4gIlRoZXkncmUga2lsbGluZyB0aGVtLCIgc2F5cyBHZW9yZ2UsIDYwLCB3aG8gbW92ZWQgaGVyZSBmcm9tIFNlcmJpYSBpbiAxOTU1LiAiWW91IHdhbGsgaW4gdGhlcmUsIHlvdSBjYW4ndCB3aW4uIApPbmUgdGhpbmcgSSBiZWVuIHRyeWluZyB0byBmaWd1cmUgb3V0IGxpa2UgeW91IG1lbnRpb25lZCBpcyB0aGUgVDcgcmFyZSBkcm9wcy4gCk9ubHkgd2Vla3MgYWZ0ZXIgRGVzamFyZGlucywgTmF0aW9uYWwgQmFuayBsYXVuY2hlZCBhbiBFVEYsIHdoaWxlIEFjY2VsZXJhdGUgRmluYW5jaWFsIFRlY2hub2xvZ2llcyBJbmMuIApZYW5rcyB0cmFwIDIwMCBtb3JlIEJ5IEVVR0VORSBWLiBIZWxpY29wdGVyIGd1bnNoaXBzIGtpbGxlZCAyMDMnIENvbW11bmlzdHMgaW4gYSBiaXR0ZXIgZGF5bG9uZyBiYXR0bGUgInllc3RlcmRheSBqdXN0IiBzb3V0aCBvZiB0aGUgRGVtaWxpdGFyaXplZCBab25lLiBVLiAKVGhleSBzb3VyY2VkIHRoZSBsb3dlc3QgY29zdCBtYW51ZmFjdHVyZXIgaW4gT250YXJpbywgYnV0IHRoZXkgbWF5IGhhdmUgdG8gZ28gb3V0c2lkZSBPbnRhcmlvIHRvIHRyeSBhbmQgcHJvZHVjZSBpdCBjaGVhcGVyIHRvIGdldCBhIGJldHRlciBtYXJnaW4uIFRoaXMgd2lsbCBiZSB2ZXJ5IGltcG9ydGFudCBhcyB0aGV5IHRyeSB0byBtb3ZlIGludG8gbWFqb3IgcmV0YWlsZXJzIHN1Y2ggYXMgQ2FuYWRpYW4gVGlyZSBhbmQgSG9tZSBEZXBvdC4gCkkgZG9uIGtub3cgZXhhY3RseSBob3cgbWFueSB0aGVyZSB3ZXJlIChjb3VsZG4gaGF2ZSBiZWVuIG1vcmUgdGhhbiA0MCA1MCkgYnV0LiAKQmUgZnJpZW5kbHkgYW5kIHNheSBIaSBhbmQgYXNrIGZvciB0aGVpciBuYW1lLiAKQ2FyYm9uIGhhcyBiZXR0ZXIgaGlnaCB0ZW1wZXJhdHVyZSBjaGFyYWN0ZXJpc3RpY3MgdGhhbiBzaWxpY29uLCBidXQgaXRzIG94aWRlcyBhcmUgZ2Fzc2VzLiBHYWxsaXVtIEFyc2VuaWRlKS4gClRoZSBhY3RvcnMgcmVmdXNlIHRvIGJlIGRlZmVhdGVkIGJlY2F1c2UgdGhleSBoYXZlIGEgInJhaW5ib3cgY29hbGl0aW9uIiBvZiBwZW9wbGUgd2hvIGFyZSB3aWxsaW5nIHRvIGZpZ2h0IHRoZSB0aHJlYXQgb2Ygc2FtZSBzZXggbWFycmlhZ2UuLiAKSG93ZXZlciwgdGhlIHN0cm9uZ2VzdCB0aGVvcnkgcmVnYXJkaW5nIHRoZSBvcmlnaW4gb2YgcG9rZXIgZGF0ZXMgYmFjayB0byB0aGUgMTV0aCBDZW50dXJ5IGluIEZyYW5jZSwgd2hlcmUgYSBnYW1lIG5hbWVkIFBvcXVlIHN0YXJ0ZWQgdG8gYmUgdmVyeSBwb3B1bGFyLiBJbiB0aGlzIGdhbWUgYSBkZWNrIG9mIGZvdXIgc3VpdHMgd2FzIGFsc28gdXNlZDogaGVhcnRzLCBkaWFtb25kcywgc3BhZGVzIGFuZCBjbHVicy4gCk15IGRheSBqb2IgaXMgYSB1bmlxdWUgb25lLiBJIHJlcGFpbnQgZG9sbHMgYW5kIEkgYWx3YXlzIGRvIGV4dGVuc2l2ZSByZXNlYXJjaCBvbiBuYW1lcyBmb3IgdGhlbSBiZWNhdXNlIEkgd2FudCB0aGVtIHRvIGJlIHVuaXF1ZSBhbmQgc2lnbmlmaWNhbnQuIEkgZGVjaWRlZCB0byBnbyB0aHJvdWdoIGFsbCB0aGUgbmFtZXMgaWYgdXNlZCBmb3IgbXkgZG9sbHMgdG8gc2VlIGlmIGFueSBzcGFya2VkIGFuIGludGVyZXN0LiAKSW50ZXJlc3RpbmcgY2FyZC4gCihOb3QgZ29pbmcgdG8gZGVzY3JpYmUgaXQgYW55IGZ1cnRoZXIgY2F1c2UgSSB3YW50IHRvIGF2b2lkIHNwb2lsZXJzLCB5b3Uga25vdyBpdCB3aGVuIHlvdSBzZWUgaXQpIGhhdmUgdGhlIGxhdyBzcG90IHlvdSBhbmQgdGhlbiByaWRlIHRvIEJsYWNrd2F0ZXIgd2hpbGUgc3RpbGwgaW4gbWlzc2lvbiBhbmQgdGhlIGxhdyB3b24gY29tZSBhZnRlciB5b3UsIHNvIHlvdSBjYW4gZmluaXNoIHRoZSBjaGFsbGVuZ2VzIHRoZW4uSSBuZXZlciBnb3Qgd2h5IHlvdSBjb3VsZG4gZ2V0IHRoZSBsZWdlbmQgb2YgdGhlIGVhc3Qgb3V0Zml0IHdoaWxlIHBsYXlpbmcgYXMgQXJ0aHVyLCBjYXVzZSBzdG9yeSB3aXNlLCBBcnRodXIgaXMgdGhlIGxlZ2VuZCBvZiB0aGUgZWFzdCwgYW5kIEpvaG4gaXMgdGhlIGxlZ2VuZCBvZiB0aGUgd2VzdC5yaXZlanUgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ29QbGF5IGF0IEVtZXJhbGQgU3RhdGlvbi4gQmFzaWNhbGx5IHRvIHdpbiwgeW91IGp1c3QgaGF2ZSB0byBiZSBmaXJzdCB0byBnbyBvdXQuIApMZSBkaWN0aW9ubmFpcmUgZW5yZWdpc3RyZSBlbiBlZmZldCBsZXMgdXNhZ2VzIGQndW4gbW90IGV0IHByY2lzZSBsZXMgY29udGV4dGVzIG8gaWwgZXN0IGludGVydmVudSwgYydlc3QgdW5lIG1tb2lyZSwgdW4gdGFibGVhdSBudWFuYyBkZSBzZXMgY2FwYWNpdHMgIHNpZ25pZmllciwgdW5lIHJzZXJ2ZSBwb3VyIGRlcyBlbXBydW50cyBmdXR1cnMuIApCZWZvcmUgdGhleSBjbG9zZWQgdGhlaXIgZG9vcnMsIHRoZSBhZGRlZCBhbiBvdXRkb29yIGF4ZSB0aHJvd2luZyBzZXR1cCBpbiB0aGUgcGFya2luZyBsb3QsIHdoaWNoIHNlZW1lZCBsaWtlIGEgcmVhbGx5IGRhbmdlcm91cyBpZGVhIChkcmlua2luZyBhbmQgYXhlIHRocm93aW5nIGluIHRoZSBkYXJrPykuIFRoZSBlbnRpcmUgYnVzaW5lc3Mgd2FzIHNvIHF1ZXN0aW9uYWJsZSAgIGZyb20gdGhlIG5hbWUsIHRvIHRoZSBza2V0Y2h5IHNwcmF5IHBhaW50ZWQgc2lnbiwgdG8gdGhlIHRoZW1lICh0aGluayAgIG9sZCB0aGFpIHJlc3RhdXJhbnQgbWVldHMgZHVuZ2VvbnMgYW5kIGRyYWdvbnMsIGJ1dCB3aXRoIGFuIGVzcHJlc3NvIGJhciwgYXhlIHRocm93aW5nLCBhbmQgYW4gb2ZmIGxlYXNoIGRvZyBkZWNrKSB0aGF0IG15IFNPIGFuZCBJIGhhZCBhIHRoZW9yeSB0aGF0IHNvbWUgZ3V5IHdpbiB0aGUgbG90dGVyeSBhbmQganVzdCBkZWNpZGVkIHRvIHNheSAiZnVjayBpdCwgSSBhbHdheXMgd2FudGVkIHRvIG9wZW4gYSBiYXIsIGxldCBqdXN0IHNlZSB3aGF0IGhhcHBlbnMiLiBOb3cgaXQgc291bmRzIGxpa2Ugc29tZW9uZSBzcGVudCBhIGJ1bmNoIG9mIG1vbmV5IGhlIGRpZG4gaGF2ZSB0byBtYWtlIHRoYXQgc2hpdCBzaG93IGV2ZXJ5dGhpbmcgaXQgdHVybmVkIG91dCB0byBiZS4gCkJhY2sgaW4gdGhlIGRheSwgTkFTQSB3YXMgbGlrZSB3aGF0IG91dCB0aGVyZSB3aGVyZSB3ZSBjYW4gc2VlIGFueXRoaW5nPyBZb3Uga25vdywgYmV0d2VlbiB0aGUgc3RhcnM/IHRoZSBnb3QgdGhlIGh1YmJsZSB0ZWxlc2NvcGUgdG8gcG9pbnQgYXQgYSByZWdpb24gb2Ygc3BhY2Ugd2hlcmUgdGhlcmUgYXJlIG5vIHN0YXJzLiBUaGV5IHBpY2tlZCBhIHNwb3QgbmVhciB0aGUgbW9vbiwgcmVwcmVzZW50aW5nIG9uZSB0d2VudHkgZm91ciBtaWxsaW9udGggb2YgdGhlIG5pZ2h0IHNreS4gCkEgcmliYm9uIGN1dHRpbmcgY2VyZW1vbnkgdG9vayBwbGFjZSBhdCB0aGUgY2FzaW5vIGp1c3QgYmVmb3JlIHRoZSBvcGVuaW5nLiAKSSBjb3VsZCBiYXJlbHkgbW92ZS4gQSBmZXcgZGF5cyBiZWZvcmUgdGhhdCwgSSBmZWx0IHBhaW4gb24gdGhlIHNhbWUgc2lkZSBzaW1pbGFyIHRvIHdoZW4gSSd2ZSBoYWQgcGFpbmZ1bCBvdmFyaWFuIGN5c3RzLiAKVGhlIGZpcnN0IG9wdGlvbiB3aWxsIGhhdmUgbXVjaCBtb3JlIGZsZXhpYmlsaXR5IG92ZXJhbGwgYW5kIGxlc3MgcmlzaywgZXNwZWNpYWxseSBpbiB0aGUgc2hvcnQgdGVybS4gQlBDIGNvdWxkIGJlIHZhc3RseSBzdXBlcmlvciBpZiBpdCB3b3VsZCB0YWtlIGEgbG90IG9mIHRpbWUgYW5kIGVmZm9ydCB0byBnZXQgb3V0IG9mIHRoZSBtaWNyb3M7IGl0IHdvdWxkIGFsc28gY2FwIHlvdXIgbW9uZXRhcnkgaW52ZXN0bWVudCBpbnRvIHBva2VyIHNraWxsIGFzc3VtaW5nIHlvdSBjb3VsZCBmb2xsb3cgdGhlIHByb2dyYW0gcmVxdWlyZW1lbnRzLiBUaGVyZSBhbHNvIHRoZSBjb21tdW5pdHkgYXNwZWN0IG9mIGJlaW5nIGdyb3VwZWQgd2l0aCBsaWtlIG1pbmRlZCBpbmRpdmlkdWFscy4uIAo4KSBFeGNlc3NpdmUgU3BhbS4gClRoaXMgc2FtZSB0aGluZyBoYXBwZW5lZCB0byBtZS4gCkdyb3dpbmcgdXAgc29tZSBvZiB0aGUgYmFzaGluZyBpcyBjYWxsaW5nIHlvdSBzdHVwaWQgZm9yIG5vdCBiZWluZyBhYmxlIHRvIGRvIG1hdGggY2FsY3VsYXRpb25zIGFzIGEgam9rZS4gR2FtYmxpbmcgaXMgcHJvYmFibHkgdGhlIG9ubHkgdGltZSB3aGVyZSB0aGV5IGNhbiBsZXQgbG9vc2UgYW5kIHRoZXJhcGV1dGljYWxseSByZWxheCBhcyBhbiBlc2NhcGlzdCBvdXRsZXQsIHdoaWNoIGlzIGlyb25pYyB0byB0aGVpciBodXN0bGUgYW5kIGh1c3RsZS4gV29yayBidXNpbmVzcyBzYXZ2eSBoYXJkIGJ1dCB0aGVuIGdhbWJsaW5nIGF3YXkgdGhlaXIgaGFyZCBlYXJuZWQgbW9uZXkuIApQcmVzdGUgbXVpdGEgYXRlbm8gYW9zIHBlcXVlbm9zIGRldGFsaGVzIGUgdXNhciB0b2RvcyBvcyBzZXVzIHNlbnRpZG9zLCBwYXJhIHF1ZSB2b2Mgbm8gcGVyY2EgbyBzaW5hbCBkZSB1bSBtYXJpZG8gdHJhaWRvci4gQ2VydGlmaWNhciBzZSBkZSBxdWUgdm9jIG1hbnRlbmhhIHVtIGRpcmlvIGRlIGJvcmRvIGRlIGRlc2NyaWVzLCBkYXRhcyBlIGhvcnJpb3MgZGUgdG9kYXMgYXMgcGlzdGFzIHF1ZSB2b2MgZGVzY29icmlyLiBTZSB2b2MgZW5jb250cmFyIHVtYSBwaXN0YSwgZmFhIHVtYSBjcGlhIGRlbGUgc2UgcG9zc3ZlbC4gTlVOQ0EgYWN1cyBsbyBkZSB1bSBjYXNvLCBzZSBubyB0aXZlciBwcm92YXMgY29uY3JldGFzIHF1ZSBlbGUgZXN0YXZhIHRyYWluZG8sIHBvcnF1ZSB2b2MgcG9kZSB0ZXIgcXVlIHVzYXIgZXN0YSBwcm92YSBlbSB1bSBUcmlidW5hbCBkZSBKdXN0aWEgdm9jIGRldmUgYnVzY2FyIG8gZGl2cmNpby4gU2Ugdm9jIG5vIHRlbSBwcm92YSBzbGlkYSwgbXVpdG9zIGhvbWVucyBtZW50aXJhIGVuZ2FubyBlIHRvcm5hciBzZSBoaXN0cmlhcyBvdSB2YWkgY2hhbSBsbyBsb3Vjby4gUGxhbmVqZSBzZXUgY29uZnJvbnRvIGZvcmEgZW0gc3VhIG1lbnRlIGFzc2ltIHZvYyBlc3RhciBwcmVwYXJhZG8gZSBhcm1hZG8gY29tIGZhdG9zIGUgZXZpZG5jaWFzLiBTZSB2b2MgdGVtIGZpbGhvcywgY2VydGlmaWNhciBzZSBkZSBxdWUgZWxlcyBlc3RvIGVtIHVtIGx1Z2FyIHNlZ3VybyBlIHByb3RlZ2lkby4gQWxtIGRpc3NvLCBubyBzZSB0b3JuZSB1bWEgZXNwb3NhIHRyYWluZG8gc2UgdmluZ2FyLiBTIGNhdXNhIG1haXMgcHJvYmxlbWFzIGUgc2VyIHVzYWRvIGNvbnRyYSB2b2MuCiJJdCBpcyB2ZXJ5IHRyb3VibGluZyB3aGVuIHBvbGljZSBhY3QgaW4gYSB3YXkgdGhhdCBpbmRpY2F0ZXMgdGhleSBkb24ndCB3YW50IHRvIGhhdmUgcHVibGljIHNjcnV0aW55IG9yIHRyYW5zcGFyZW5jeSByZWdhcmRpbmcgdGhlaXIgYWN0aW9ucywiIGhlIHNhaWQuCkNhbmFkYSdzIGpvYiBtYXJrZXQgb2ZmIHRvIGl0cyBiZXN0IHN0YXJ0IGluIGFsbW9zdCA0MCB5ZWFycwpPdGhlciBwaHlzaWNpYW5zIHRob3VnaHQgaXQgYmVzdCB0byBzbGFwIHRoZSBzY2FscCB3aXRoIHRoZSBiYWNrIG9mIGEgaGFpcmJydXNoLCBpcnJpdGF0aW5nIHRoZSBza2luIHRvIHRyZWF0IHRoZSB0aGlubmluZyBhcmVhLiAKQXMgZm9yIHRoZSB0aW1lIHRyYXZlbCBsb2dpc3RpY3MgKG9yIGxhY2sgb2YpIEkgdXN1YWxseSBhYmxlIHRvIHN1c3BlbmQgbXkgZGlzYmVsaWVmIGZvciBzdWNoIHRoaW5ncyBhbmQganVzdCBnbyBhbG9uZyB3aXRoIGl0LiAKUmVhbGx5LCBHamxsYXJob3JuIGdvdCBkZWFsdCBzdWNoIGEgYmxvb2R5IG5vc2UgYnkgVGVra2VkYW4gdGhhdCBpbiBzcGl0ZSBvZiBhbnl0aGluZyBSdXN0YWwgaGFkIHRvIGdpdmUgdXAgcG93ZXIgYW5kIHJlZm9ybS4gQW4gZXh0cmEgZXBpc29kZSBmb3IgYW4gZXBpbG9ndWUgd291bGQgaGF2ZSBoZWxwZWQgaW1tZW5zZWx5IGhlcmUuIFRob3VnaCwgaSBzdGlsbCBob2xkIHRoYXQgZ2l2ZW4gaGlzIGNoYXJhY3RlciBhcmMsIGlmIEdhbGlsZW8gaGFkIGdvdHRlbiBSdXN0YWwgYXJyZXN0ZWQgZm9yIHdhciBjcmltZXMgYW5kIHRoZW4gYmVlbiB0aGUgb25lIHRvIHJlZm9ybSB0aGluZ3MgaXQgd291bGQgaGF2ZSBtYWRlIHRoZSBtb3N0IHNlbnNlLiAKTWlubmVhcG9saXMgcG9saWNlIFNlcmdlYW50IEdyYW50IFNueWRlciwgd2hvIHNwZWNpYWxpemVzIGluIGh1bWFuIGFuZCBzZXggdHJhZmZpY2tpbmcsIHdvcmtlZCB3aXRoIEFtYmVyIGxhc3Qgc3VtbWVyLCBoZWxwaW5nIGhlciBnZXQgc3RhYmlsaXplZC4gClRoZSBteXRoIHRoYXQgYSBsb3cgZXhjaGFuZ2UgcmF0ZSBlbmNvdXJhZ2VzIGVjb25vbWljIGdyb3d0aCB0b29rIGhvbGQgaW4gQ2FuYWRhIGluIHRoZSAxOTkwcy4gQ2FuYWRhIG1hbnVmYWN0dXJpbmcgZ3Jvd3RoIHdhcyBsZWQgYnkgbG93IHdhZ2UgaW5kdXN0cmllcyBzdWNoIGFzIGNsb3RoaW5nLCB0ZXh0aWxlcyBhbmQgZnVybml0dXJlLCB3aGVyZSBlbXBsb3ltZW50IHJvc2UgMjkuNyUgZnJvbSAxOTkyIHRvIDIwMDAuIFRoZSBmbGltc3kgYmFzaXMgZm9yIHRoaXMgYWxsb2NhdGlvbiBvZiByZXNvdXJjZXMgd2FzIGZ1bGx5IHJldmVhbGVkLCB3aGVuIGEgcmlzaW5nIGRvbGxhciBhbmQgQ2hpbmEgZXhwb3J0cyBkZXZhc3RhdGVkIHRoZXNlIGluZHVzdHJpZXMuIEluIHJldHJvc3BlY3QsIG9uZSBjYW4gb25seSBsb29rIGJhY2sgd2l0aCB3b25kZXIgYW5kIGFzdG9uaXNobWVudCB0aGF0Q2FuYWRhIGFjdGVkIGFzIGlmIG91ciBmdXR1cmUgbGF5IGluIGludmVzdGluZyBpbiBsb3cgd2FnZSBpbmR1c3RyaWVzIHByZWRpY2F0ZWQgb24gYSBjaHJvbmljYWxseSBsb3cgZXhjaGFuZ2UgcmF0ZS4gZG9sbGFycy4gSXQgd2FzIGEgYnVzaW5lc3MgbW9kZWwgZG9vbWVkIHRvIGZhaWwgd2hlbiB0aGUgZXhjaGFuZ2UgcmF0ZSBzdGFydGVkIHRvIGFwcHJlY2lhdGUuCkJlY2F1c2UgaXQncyBhIHB1c2ggcm91Z2hseSBoYWxmIG9mIHRoZSB0aW1lLCB0aGlzIGlzIGEgZ2FtZSB5b3UgY2FuIHBsYXkgZm9yIGEgbG9uZyB0aW1lIHdpdGhvdXQgd2lubmluZyBvciBsb3NpbmcgdmVyeSBtdWNoIGF0IGFsbC4gVGhlcmUncyBhIHZlcnkgc2xpZ2h0IGxldmVsIG9mIHNraWxsIGluIHNldHRpbmcgdXAgaGFuZHMgYnV0IG5vdCBtdWNoIGVsc2UuIApBY3R1YWxseSBJIGhhdmUgdG8gZGlzYWdyZWUuIEl0IGlzIG11Y2ggbW9yZSBpbXBvcnRhbnQgZm9yIHNvZnR3YXJlIGNvbXBhbmllcyB0aGF0IHN0dWRlbnRzIGxlYXJuIHRvIHVzZSB0aGVpciBzb2Z0d2FyZSBpbnN0ZWFkIG9mIHBheWluZyBmb3IgaXQgdGhvc2UgZmV3IHllYXJzLiBUaGV5IG1ha2UgaXQgZWFzaWx5IGV4cGxvaXRhYmxlIChzb21ldGltZXMgZXZlbiB0b3JyZW50YWJsZSkgb24gcHVycG9zZSBzbyB3aGVuIHN0dWRlbnRzIHN0YXJ0IHRvIHdvcmsgY29tbWVyY2lhbGx5IHRoZXkgYXJlICJmb3JjZWQiIHRvIGludmVzdCBpbiB0aGUgc29mdHdhcmUgdGhleSBrbm93IHRvIHVzZS4KTXkgY3VycmVudCBnZiBpcyAiY3V0ZSIgYnV0IG5vdCBsaWtlIHRoaXMuIApZb3UgYXJlIHJpZ2h0LCB0aGVyZSBpcyBub3QgYSBjaGluZXNlIHRlYSBjZXJlbW9ueSwgaXMgYSBiaXQgb2YgYW4gb3JpZW50YWxpc3RpYyBtaXNjb25jZXB0aW9uLCBpdHMgYSBqYXBhbmVzZSB0aGluZyB0aGUgdGVhIGNlcmVtb255IHN1cmUgYnV0IGluIGNoaW5hIHBlb3BsZSBqdXN0IGJyZXcgdGVhIGFuZCBkcmluayBpdCBmb2xsb3dpbmcgdXN1YWxseSBhIGZldyBzdGVwcyBmdW5jdGlvbmFsIHRvIHRoZSB0ZWEgYnJld2luZy4gVGhlIG9ubHkgdGhpbmcgdGhhdCBjb21lcyBjbG9zZSBpcyB0aGUgc28gY2FsbGVkIGdvbmdmdSBjaGEgc3R5bGUgb2YgZHJpbmtpbmcgYnV0IHRoYXQgZG9uZSBpbiBjaGFvemhvdSwgZ3Vhbmdkb25nIHdpdGggMyBjdXBzIG9uIGEgcGxhdGUgZXRjIGV0Yy4gCkJ1dCBhZnRlciBFcm5pZSBsZWZ0IE5ldyBPcmxlYW5zLCB0aGlzIHdvbWFuIGRlY2lkZWQgdG8gR29vZ2xlIGhpcyBuYW1lLiAKRXRjP1RoZSBzaW1wbGUgZmllbGQgdGVzdHMgSSBtZW50aW9uZWQsIGFuZCB0aGVybWFsIGltYWdpbmcgYXJlIHByb2JhYmx5IGJlc3QgICB0aGVybWFsIGltYWdpbmcgaGFzIHRoZSBwb3RlbnRpYWwgdG8gZXhwb3NlIGEgcHJvYmxlbSAob3IgbW9yZSBhY2N1cmF0ZWx5IGFuIGFyZWEgb2YgaW5qdXJ5KSB3aGljaCBoYXNuIGJlZW4gY29uc2lkZXJlZCBvciB3aGljaCB3YXMgZXJyb25lb3VzbHkgcnVsZWQgb3V0LiAKSSBsb3ZlIHRoZSBlZ28gc3Ryb2tpbmcgSSBnZXQgYXQgdGhlIG1hc3NhZ2UgcGFybG9yLCB0aGUgd2F5IHRoZXkgY2FsbCB5b3UgImJpZyBib3kuIiBZb3UgYWxtb3N0IHRyaWNrIHlvdXJzZWxmIGludG8gdGhpbmtpbmcgdGhhdCB0aGUgbWFzc2V1c2UgaXMgaW50byB5b3UuIFRoZXJlJ3MgYWxzbyB0aGUgaWxsaWNpdCB0aHJpbGwgb2YgZ2V0dGluZyBhd2F5IHdpdGggaXQuIE9uZSB0aW1lIHRoZSBtYXNzZXVzZSBnYXZlIG1lIG9yYWwgc2V4IHdpdGggYSBjb25kb20gb24uIApCZSBvcGVuIGFuZCBob25lc3Qgd2l0aCB5b3VyIHdpZmUuIApTcGVuZGluZyBicmVha2Rvd24gaW4gdGhlIDIwMTkgQ2l0eSBvZiBXaW5kc29yIHJlY29tbWVuZGVkIG11bmljaXBhbCB0YXggbGV2eSBwcm9wb3NlZCBieSBhZG1pbmlzdHJhdGlvbi4gSGFuZG91dDogQ2l0eSBvZiBXaW5kc29yCkJ5IHN0YXlpbmcgd2l0aCBoaW0gbm8gbWF0dGVyIHdoYXQgaGUgcHVsbHMsIHlvdSdyZSB0ZWxsaW5nIGhpbSB0aGF0IGFsdGhvdWdoIHlvdSBtaWdodCBnZXQgaHVydCBhbmQgYmUgYW5ncnkgYWJvdXQgdGhlIGNvbnN0YW50IHBhcmFkZSBvZiBvdGhlciB3b21lbiwgeW91J3JlIG5vdCBnb2luZyB0byByZWFsbHkgZG8gYW55dGhpbmcgYWJvdXQgaXQuIApBbHNvLCBpdCB0cmVtZW5kb3VzIGV4cGVuc2UgdG8gbWFya2V0IGEgc3BlY2lhbHR5IHRyaW0uIElmIHRoZXkgYXJlbiBleHBlY3RpbmcgbWFzc2l2ZSBudW1iZXJzIGFuZCBpdCBub3QgYSBmbGFnc2hpcCBwZXJmb3JtYW5jZSBidWlsZCAoRm9yZCBSYXB0b3IpLCB0aGV5IGFyZW4gZ29pbmcgdG8gaW52ZXN0IGluIGEgY2FtcGFpZ24gdGhhdCBnb2VzIGhlYWQgdG8gaGVhZCB3aXRoIEplZXAgYW5kIFRhY29zLiAKSG93IFRvIE5pcCBIYW5nbmFpbHMgRHVyaW5nIGEgTWFuaWN1cmUKR29vZCBjYXJkIGRpc3RyaWJ1dGlvbiwgcnVubmluZyBpbnRvIHRoZSBib3R0b20gb2YgeW91ciBvcHBvbmVudHMgcmFuZ2UgZHVyaW5nIGJsdWZmcyBhbmQgZ2V0dGluZyB0aGVtIHRocm91Z2gsIGhpdHRpbmcgeW91ciBkcmF3cyBkdXJpbmcgbm9uIGFsbCBpbiBzaXR1YXRpb25zIGV0YyBldGMuLiAKKFdlZWtlbmRzIGFyZSBhIGZyZWUgZm9yIGFsbC4pIFdoYXQgdGhpcyBhbGxvd3MgbWUgaXMgbXVjaCBtb3JlIGZsZXhpYmlsaXR5IGFuZCBhbHNvIG1vcmUgcmlnaWRpdHkgYXQgdGhlIHNhbWUgdGltZSwgYnV0IGluIGEgd2F5IHRoYXQgZmVlbHMgYm90aCBmcmVlaW5nIGFuZCBzYWZlLiAKV2lubmVyIG9mIEtoZWxQbGF5IEZpZXN0YSBhdCBCb21iYXkgQ29ubmVjdCwgUmF2aSBhZGRlZCA/ID9JIGFtIHRocmlsbGVkIGF0IHdpbm5pbmcgaW4gS2hlbFBsYXkgRmllc3RhLiBQb2tlciBpcyBhIHZlcnkgcG9wdWxhciBjYXJkIGdhbWUsIGFuZCBNdW1iYWlrYXJzIGFyZSBzZWVuIHRvIGJlIGluY3JlYXNpbmdseSB0YWtpbmcgdG8gb25saW5lIFBva2VyIGluIEluZGlhLiBXZT9kIGxpa2UgdG8gc2VlIE1ham9yIFBva2VyIFRvdXJuZXlzIHN1Y2ggYXMgV1BULCBXb3JsZCBTZXJpZXMgb2YgUG9rZXIsIGV0Yy4sIGJlaW5nIGhlbGQgaW4gTXVtYmFpIGFzIHdlbGwuIApJZiBJIGZlZWwgbXkgYmFjayB0d2luZ2luZyBvbiBETHMsIEkgbG93ZXIgdGhlIHdlaWdodCBhdXRvbWF0aWNhbGx5LiIgd2hpbGUgcmVzaXN0YW5jZSB0cmFpbmluZyBtYXkgYmUgZGV0cmltZW50IGlmIHJlc2lzdGFuY2UgbG9hZHMgYXJlIGV4Y2Vzc2l2ZWx5IGhlYXZ5LCBsaWdodCBsb2FkIGJlbmVmaXRzIGFyZSB0b28gZ3JlYXQgdG8gcmVzaXN0YW5jZSB0cmFpbmluZyBhbGwgdG9nZXRoZXIuU28sIHRoZSBHb2xkIFN0YW5kYXJkIG9mIG1lYXN1cmluZyBSZXNpc3RhbmNlIEZpdG5lc3MgaW4gaW5kaXZpZHVhbHMgaXMsIDEgUmVwZXRpdGlvbiBNYXhpbXVtIFsxUk1dIChhcyB5b3UgbWF5IGtub3cuKSBBIDFSTSBpcyB0aGUgbWF4IGEgcGVyc29uIGNhbiBsaWZ0LCBpdCBpcyBhbiBhbGwgb3V0IGVmZm9ydC5Db25zaWRlciB0aGlzIGFydGljbGUgZnJvbSAxOTkxIHdoaWNoIHJlcG9ydGVkLCAiVGhlIHJlYWN0aW9uIG1vbWVudHMgYXQgdGhlIGtuZWUsIGhpcCwgYW5kIEw0L0w1IGpvaW50cywgYW5kIHRoZSBjb21wcmVzc2l2ZSBhbmQgc2hlYXJpbmcgZm9yY2VzIG9uIEw0L0w1IGFyZSBkb2N1bWVudGVkIGluIHBvd2VybGlmdGVycyBjb21wZXRpbmcgaW4gYSBuYXRpb25hbCBwb3dlcmxpZnRpbmcgY2hhbXBpb25zaGlwIC4gClRoZXNlIGNoYXJhY3RlcnMgdXN1YWxseSBhcmUgYSBiaWcgZ3JvdXAgb2YgZnJpZW5kcyB3aG8gZG8gYSB0b24gb2Ygc2lsbHkgc3R1ZmYgd2l0aCBzb21lIGdvYWwgaW4gdGhlcmUgZm9yIDMgaG91cnMuIFlvdSB3b24gcmVhbGx5IHNlZSB0aGF0IHNob3J0IGhlcm8gZm9jdXNlZCBzdG9yeSBhcyB5b3Ugc2VlIGZyb20gSG9sbHl3b29kLiAKVGhleSBjaG9vc2Ugd2hhdCBtb3N0IHBlb3BsZSB3b3VsZCBjb25zaWRlciB3b3J0aGxlc3MgY3JhcCBvdmVyIHRoZWlyIGZyaWVuZHMgYW5kIGZhbWlseS4gClNtb2xsZXR0IHRyaWVkIHRvIGV4cGxvaXQgdGhlIHRyYWdpY2FsbHkgaGlnaCBsZXZlbCBvZiBtaXN0cnVzdCBhbmQgaWxsIHdpbGwgd2UgYWxsIHNlZW0gdG8gYmVhciBlYWNoIG90aGVyIGFuZCBhZGRlZCBxdWl0ZSBhIGJpdCB0byB0aGUgbGV2ZWwgb2YgZnJpY3Rpb24gaGVhdCBpbiBvdXIgbmF0aW9uYWwgZGlzY291cnNlLiBIaXMgb3JpZ2luYWwgYWN0IHdhcyBpbnRlbmRlZCB0byBiZSwgaW4gc2NvcGUgb2YgZWZmZWN0LCB0aGUgZXF1aXZhbGVudCBvZiB5ZWxsaW5nICJGaXJlISIgaW4gYSBjcm93ZGVkIHRoZWF0cmUganVzdCBmb3IgdGhlIHNha2Ugb2YgcHVibGljaXR5LiAKTHltcGhhdGljIHN5c3RlbSBjbGVhbnNlcy4gQSBzcGVjaWFsIGRpZXQuIE9uZSBvbiBvbmUgY291bnNlbGluZy4uIApNT0RFUkFUT1IgT0Z3aGF0J3MgdGhpcz9UUk9QSFkgQ0FTRUFscGhhIFRlc3RlclRoYXQgdHJ1ZSB0b287IEkgZ3Vlc3MgdGhlIG5hbWUgb2YgdGhlIGdhbWUgYmVjb21lcyB0aGUgY29tcGFueSB0aGF0IGNhbGxlZCB5b3UgVGhlcmUgYXJlIGEgbG90IG9mIHNrZXRjaHkgZm9sa3Mgb3V0IHRoZXJlOyBidXQgcGVvcGxlIHNheWluZyB0aGF0ICJyZWFsIGVtcGxveWVycyBkb24gZ28gdGhyb3VnaCBzaXRlcyBsaWtlIHRoYXQiIGFyZSBhYnNvbHV0ZWx5IGluY29ycmVjdC4gSSB1c2VkIHRvIGJlIGFuIElUIFJlY3J1aXRlciB3aXRoIEdvb2dsZTsgYW5kIHdlIGFic29sdXRlbHkgdXNlZCB0aGVtLiAKT25lIG9mIHRoZSBiZXN0IGFubml2ZXJzYXJ5IGRlc3RpbmF0aW9ucyBpcyBOZXcgWW9yaywgdGhlIGNpdHkgdGhhdCBuZXZlciBzbGVlcHMuIApBbm90aGVyIGJveSB3aG8gcGxheXMgdGhlIGdhbWUgYnV0IGRvZXNuIG1ha2UgaXQgYSBzZWNyZXQgdGhhdCBoZSBrbm93cyBzY2hvb2wganVzdCBhIGdhbWUgYW5kIGhlIG9ubHkgZG9pbmcgdGhlIHJpZ2h0IHRoaW5nIGJlY2F1c2UgaXQgc21hcnRlciB0aGFuIGdldHRpbmcgcHVuaXNoZWQgYSBsb3QgaXMgaGF0ZWQgYnkgdGhlIGZhY3VsdHkgYmVjYXVzZSBvZiBpdC4gQSBmZXcgb3RoZXIgdGVhY2hlcnMgYW5kIEkgd2VyZSB0YWxraW5nIGFib3V0IHdobyB3ZSBtb3N0IGlkZW50aWZ5IHdpdGggaW4gdGhlIGNsYXNzIGFuZCB0aGV5IHdlcmUgc2hvY2tlZCB0aGF0IEkgcGlja2VkIHRoZSBib3kgYmVjYXVzZSBJIGFsd2F5cyBkb2luZyB0aGUgcmlnaHQgdGhpbmcgYW5kIHN0YXlpbmcgaW4gbXkgbGFuZS4gCk9mIGNvdXJzZSwgZ2V0dGluZyB0cmVhdGVkIGJ5IGFuIGluZGl2aWR1YWwgd2hvIGhhcyBub3QgZ29uZSB0aHJvdWdoIExlYWh5J3MgdHJhaW5pbmcgY291cnNlcyBjb3VsZCBjYXVzZSBtb3JlIGhhcm0gdGhhbiBnb29kLgpUaGVzZSB0aGV5IHB1dCBvbiBib2FyZCB0aGUgU2hpcCBiZWZvcmUgdGhleSB3b3VsZCB2ZW50dXJlIHRoZW1zZWx2ZXMuIFRoZXkgYnJvdWdodCB1cyBhIHByZXNlbnQgb2YgMiBIb2dzIChhbiBBcnRpY2xlIHdlIGZpbmQgaGVyZSB2ZXJ5IFNjYXJjZSkgYW5kIHNvbWUgQnJlYWQgRnJ1aXQ7IGZvciB0aGVzZSB0aGV5IGhhZCBIYXRjaGV0cyBhbmQgb3RoZXIgdGhpbmdzLiAK|<---