--->|VGhlIGxlZ2lzbGF0dXJlIHRoZXJlIGhhcyBkZWNyZWVkIHRoYXQgYSBtaXNjYXJyaWFnZSBvZiBhIGZlcnRpbGl6ZWQgZWdnIGNhbiBiZSBjb25zdHJ1ZWQgYXMgbXVyZGVyLiAKSGUgbGV0IG1lIGtub3cgaXQgd2FzIGFscmVhZHkgb24gb3JkZXIgYW5kIHdhcyBnb2luZyB0byBiZSBpbnN0YWxsZWQgdGhlIGZvbGxvd2luZyB3ZWVrLiAKQW5kIGhvbmVzdGx5LCB5b3Uga25vdyB0aGF0IHRoZXJlIGlzIG5vIG9uZSBJIGxvdmUgbW9yZSB0aGFuIHlvdS5TaGUgaHVnZ2VkIG1lIHRpZ2h0LiAKSSB0aG91Z2h0LCB3ZWxsLCBJIG5vdCBzdXJlIHdoYXQgSSB3YXMgZXhwZWN0aW5nIHBvc3NpYmx5IGl0IHdvdWxkIGFjdHVhbGx5IGJlIG9uIHNxdWVlemluZyB0aGluZ3MuIChJIHNlZW4gbWFueSBleGFtcGxlcyBvZiB0aGlzIHNvcnQgb2YgYml6YXJyZSB0aXRsZS9jb250ZW50IGNvbnRpbnVpdHksIHNvIEkgdGhvdWdodCBpdCBhIHBvc3NpYmlsaXR5LikgQnV0IHRoZSBzdG9yeSBoZXJlIGlzIGRlbGl2ZXJlZCBieSB0aGUgU3RhbmRhcmQgT2lsIENvbXBhbnkgb2YgTmV3IEplcnNleSBhbmQgZGV0YWlscyB0aGVpciBwcm9wZXJ0aWVzIGJlaW5nIG5hdGlvbmFsaXplZCBzcXVlZXplZCBieSB0aGUgZ292ZXJubWVudCBvZiBNZXhpY28gaW4gMTkzOC4gCkFuZCB0aGlzIHdhcyBhbiBvY2N1cmFuY2UgYWJvdXQgb25jZSBhIHdlZWsgc28gc29tZW9uZSBoYWQgdGhlIG5hbWUgUGhhbnRvbSBTaGl0dGVyIGR1YmJlZCBvbiB0aGVtIGNhdXNlIG5vIG9uZSBrbmV3IHdobyBpdCB3YXMuCkpldGxpZmV2aWMgdQpXZWVrZW5kIGJydW5jaCBpcyB0aGUgbmV3IGRpbm5lciBwYXJ0eQpJdCBsZWFkcywgYXQgdGhlIHZlcnkgbWluaW11bSwgdG8gbW9yZSB0ZXN0aW5nIGFuZCBtYXkgbGVhZCB1cyB0byB0cmVhdGluZyBhYm5vcm1hbGl0aWVzIHRoYXQgbWF5IG5ldmVyIHJlc3VsdCBpbiBkaXNlYXNlIHRoYXQgYWZmZWN0cyB0aGUgcGF0aWVudCwgd2hpY2ggYXQgdGhlIHZlcnkgbWluaW11bSBsZWFkcyB0byBwYXRpZW50IGFueGlldHkgYW5kIGF0IHRoZSB2ZXJ5IHdvcnN0IGxlYWRzIHRvIHRyZWF0bWVudHMgdGhhdCBwdXQgdGhlIHBhdGllbnQgYXQgcmlzayBvZiBjb21wbGljYXRpb25zIGFuZCBkbyB0aGUgcGF0aWVudCBubyBnb29kLiAKQSBkZWVwIGtpbmQgb2Ygc2hhbWUgdGhhdCB0aGV5IG1heSBoYXZlIG5ldmVyIGZlbHQgYmVmb3JlIGluIHRoZWlyIGxpdmVzIGJlY2F1c2UgdGhleSBhcmUgc28gZHVtYiB0aGV5IGhhdmUgbmV2ZXIgYmVlbiBpbiBhIHNpdHVhdGlvbiB3aGVyZSB0aGV5IGhhZCBzb21lIGtpbmQgb2Ygc2VsZiByZWFsaXphdGlvbiB0aGF0IHRoZXkgYXJlIHRoZSBiYWQgZ3V5cy4gVGhlbiB0aGV5IHJlYWN0IHRoZSBvbmx5IHdheSB0aGV5IGtub3cgaG93ICAgR0VUIE1BRCAgIEdFVCBBTkdSWSAgIElUUyBOT1QgTVkgRkFVTFQgSSBGRUVMIFRISVMgV0FZIElUIFRIRSAoSW5zZXJ0IGdyb3VwIElEIGhlcmUpIGJlY2F1c2UgdGhhdCB3aGF0IHRoZWlyIGxlYWRlcnMgdGVsbCB0aGVtICAgaXQgbm90IHlvdXIgZmF1bHQgeW91ciBhIHJhY2lzdCB3b3J0aGxlc3MgcGVpY2Ugb2Ygd2hpdGUgdHJhc2ggZ2FyYmFnZSAgIGl0IHNvbWVvbmUgZWxzZSBmYXVsdCAgIElUIFRIRSBERU1PQ1JBVFMgVEhBVCBBUkUgTUFLSU5HIFlPVSBGRUVMIFRISVMgV0FZISEhISBET05UIExFVCBUSEVNIENBTEwgWU9VIERVTUIgQU5EIFJBQ0lTVCEhIQpTb21ldGltZXMgdGhleSBtYXRjaCBmb3IgbWUgYW5kIHNvbWV0aW1lcyB0aGV5IGRvbid0LiBSaWdodCBub3csIGR1ZSB0byBnZXR0aW5nIGEgbGFyZ2VyIHRoYW4gSSdtIHVzZWQgdG8gcmVmdW5kLCBteSBkYXlzIG9mIGJ1ZmZlcmluZyBpcyBoaWdoZXIgdGhhbiBteSBBb00gYnkgYWJvdXQgYSB3ZWVrLiBFdmVyeW9uZSBpcyBjb3JyZWN0IHRoYXQgeW91ciBBb00gd2lsbCBnZXQgYmFjayB1cCB0aGVyZSBpZiB5b3Uga2VlcCBnb2luZyB0aGUgd2F5IHlvdSBhcmUgYW5kIHRoaXMgaXMganVzdCBhIHRlbXBvcmFyeSB0aGluZy4uIApFdmVuIHRob3VnaCAyMDE5IHdpbGwgbWFyayAzNSB5ZWFycyBzaW5jZSB0aGUgZHJvdWdodCwgdGhlIGltYWdlIG9mIGRpc3RlbmRlZCBiZWxsaWVzIGFuZCBkcnkgZ3Jhc3MgaXMgc3RpbGwgc3Ryb25nLi4gCkNvbG91ciBpcyBtdWNoIHNwYWNpZXIsIHF1aWV0ZXIuIFRoZSBzb25nd3JpdGluZyBpcyBhbHNvIGtpbmQgb2YgcHJlZGljdGFibGU6IHdlIHN0YXJ0IGluIGEgc3BhcnNlIGVjaG9leSBwbGFjZSB3aXRoIGhpcyB2b2ljZSwgc29tZSBkcnVtcywgcHJvYmFibHkgYSBwaWFubywgYW5kIHRoZW4gYnVpbGQgdXAgdG8gYW4gdW5kZXJ3aGVsbWluZyBjcmVzY2VuZG8uIApGcm9tIHRoZSB0b3dlcmluZywgcGluZWFwcGxlIHNoYXBlZCBHcmFuZCBMaXNib2EgdG8gdGhlIHZhc3QgY2FtcHVzIG9mIHRoZSBWZW5ldGlhbiwgdGhlcmUncyBubyBzaG9ydGFnZSBvZiBjYXNpbm9zIHRvIGNob29zZSBmcm9tIGluIE1hY2F1LiBUaGUgb25seSBwbGFjZSBpbiBDaGluYSB3aGVyZSBjYXNpbm9zIGFyZSBsZWdhbCwgTWFjYXUgb3BlbmVkIHVwIGl0cyBnYW1ibGluZyBpbmR1c3RyeSBpbiAyMDA0LCBzcHVycmluZyB0aGUgbnVtYmVyIG9mIGNhc2lub3MgdG8ganVtcCBmcm9tIDExIHRvIDMyLiBXaGlsZSB0aGVyZSBtYXkgYmUgYSBxdWVzdGlvbiBvZiB3aGVyZSB0aGlzIGNpdHkncyBnYW1ibGVycyBsaWtlIHRvIHBsYXksIHRoZXJlJ3Mgbm8gZGViYXRpbmcgd2hpY2ggZ2FtZSBpcyBraW5nLiAKSWYgeW91J3JlIG1ha2luZyBhIGNhcmVlciBjaGFuZ2UgaW50byBwcm9qZWN0IG1hbmFnZW1lbnQsIGZvY3VzIG9uIHlvdXIgc2tpbGxzLCBpbmNsdWRpbmcgY29tbXVuaWNhdGlvbiwgcGxhbm5pbmcsIG5lZ290aWF0aW5nIGFuZCBidXNpbmVzcyBhY3VtZW4uIApXaGVuIGEgd29tYW4gaXMgYmVhdXRpZnVsLCBoYXMgYSBmbGF0IGJlbGx5LCB0aGluIGxlZ3MsIGEgY3V0ZSBidXR0IGFuZCBhIGdyZWF0IHB1c3N5LCB0aGVuIHdoYXQgaWYgc2hlIGhhcyBzbWFsbCBicmVhc3RzLiAKVGhlcmUgaXMgYSB2ZXJ5IHdpZGUgZ3VsZiBiZXR3ZWVuIHdoYXQgZ2V0cyBjaGFubmVsbGVkIGludG8gdGhlIGZvcm1hbCByZWZlcnJhbCBwYXRod2F5cyB2cyB3aGF0IGdldHMgdGhyb3duIGludG8gdGhlIGRvbiBrbm93LCBJIG5vdCBwYWlkIGVub3VnaCBmb3IgdGhpcywgSSBqdXN0IHdhbnQgdG8gZ28gaG9tZSBhdCA0cG0gd2l0aG91dCB0cmlnZ2VyaW5nIGEgZGlzY2lwbGluYXJ5IG1lZXRpbmcgdG9tb3Jyb3cgZHVtcGluZyBncm91bmRzIG9mIGZvcmdvdHRlbiBjYWxscy4gV2hpY2ggaXMgYWdhaW4sIHdoeSBJIHRoaW5rIHByb2Zlc3Npb25hbCwgd2VsbCBwYWlkIHB1YmxpYyBzZXJ2YW50cyBhcmUgYSBiZXR0ZXIgaWRlYSB0aGFuIG91dHNvdXJjaW5nIHRvIHdoYXR2ZXIgZW50aXR5IGlzIHRlbmRlcmluZyB0aGUgbWluaW11bSBjb3N0IHNlcnZpY2UuIEV2ZW4gaWYgdGhhdCBjb3N0cyBtZSBteSBvd24gam9iLCBpdCBiZXR0ZXIgdG8gc2VlIHBlb3BsZSBhY3R1YWxseSBnZXQgbWVhbmluZ2Z1bCBzdXBwb3J0LCBpbnN0ZWFkIG9mIHRoZSBrYWZrYSBlc3F1ZSBtaW5pdW0gY29zdCBuaWdodG1hcmUgZXZlcnlvbmUgaXMgbGl2aW5nIGF0bS4KUXVlIGxldXIgbWFucXVlIHQgaWwgYXVqb3VyZCdodWkgIHBhcnQgbGEgcm9iZSBkZSBtYXJpZSA/IEF1IG5vbSBkZSBsJ3ZvbHV0aW9uIGRlcyBtdXJzLCBub3RyZSBzb2NpdCwgZG9udCBsZXMgZm9uZGVtZW50cyBsYXF1ZXMgZXQgcnB1YmxpY2FpbnMgc29udCB0YWJsaXMgZGVwdWlzIGRlcyBzaWNsZXMsIGRldnJhIHQgZWxsZSBwcmVuZHJlIGVuIGNvbXB0ZSwgY29tbWUgbCdhIGRpdCBtb24gY29sbGd1ZSwgZCdhdXRyZXMgcHJhdGlxdWVzIHNleHVlbGxlcyAgIGV0IHBvdXJxdW9pIHBhcyBsZSBtYXJpYWdlIGF2ZWMgbGVzIGFuaW1hdXggb3UgbGEgcG9seWdhbWllLCBzaSBkJ2F1dHJlcyByZWxpZ2lvbnMgcHJlbm5lbnQgbGUgcGFzIHN1ciBub3RyZSB0cmFkaXRpb24ganVkbyBjaHJ0aWVubmUgPy4gCkh5cG5vc2lzIGZvciBTcG9ydHMgSW1wcm92ZW1lbnQKT25lIFllYXIgTGF0ZXIKV2FsIE1hcnQgZXhwZWN0cyB0byBhZGQgMjIsMDAwIGpvYnMgYXQgbmV3IHN0b3JlcyBpbiAgIEp1bi4gNCwgMjAwOS4KSSBzdGF5ZWQgdGhlcmUsIGl0IGluY3JlZGlibGUuIApBbmQgdGhleSBhcmUgZnJ1c3RyYXRpbmcgdG8gcGxheSBhZ2luc3QuIApJIHdpbGwgYWdhaW4gc2F5IEkgcmVhbGx5IGhvcGUgd2UgaGF2ZSBzb21lIGtpbmQgb2YgcG93ZXJzIHdlIGNhbiB1c2UuIEkgbG92ZWQgdGhlIE1FIHRyaWxvZ3ksIGJ1dCB0aGVyZSBpcyBubyB3YXkgSSB3b3VsZCBoYXZlIHBsYXllZCBpdCBhcyBtYW55IGRpZmZlcmVudCB0aW1lcyBhcyBJIGRpZCBpZiBhbGwgeW91IGNvdWxkIGVzc2VudGlhbGx5IGJlIHdhcyB0aGUgc29saWRlciBjbGFzcy4gVGhhdCB3b3VsZCBqdXN0IG1ha2UgdGhlIGdhbWUgYSBGUFMgd2l0aCBhIHNjaSBmaSBwYWludCBjb2F0aW5nIGFuZCBJIGRvbiB0aGluayB0aGF0IHdvdWxkIGJlIGEgQkdTIGdhbWUgYW55bW9yZS4gCjcgb2YgbXkgcmVhbCBsaWZlIGZyaWVuZHMgaGF2ZSBxdWl0IGFzIG9mIHRoaXMgbW9ybmluZyBiZWNhdXNlIG9mIERQUyBxdWV1ZXMuIE5vdCBleGFnZ2VyYXRpbmcuIEFuZCBJJ20gdXBzZXQuIApBc2sgZm9yIG1vcmUgbW9uZXksIHRpbWUsIGV0Yy4gCkZvciBhIHByb2plY3QgdG8gYmUgc3VjY2Vzc2Z1bCBpdCByZXF1aXJlcyBzZXZlcmFsIGtleSBzdGFrZWhvbGRlcnMgdG8gYmUgZW5nYWdlZCBvdmVyIGEgcGVyaW9kIG9mIHRpbWUuIApIZSBhIHBybyBwcm8uIFdoYXQgd2Uga25vdyBhYm91dCBLb3NraW5lbi4gCkkgc3VwcG9zZSB5b3UgbWVhbiwgYXQgbGVhc3Qgb25lIG9mIHRob3NlIG51bWJlcnMuIEp1c3QgY2FsY3VsYXRlIHRoZSBwcm9iYWJpbGl0eSBvZiBOT1QgZ2V0dGluZyBhbnkgb2YgdGhvc2UsIGFuZCB0YWtlIHRoZSBjb21wbGVtZW50LiAKU28gSSBoYXZlIHRvIHN3aXRjaCBpdCB0byBhbGwgY2F0ZWdvcmllcyBhbmQgYWxsIHNpemVzIHRvIHNlZSBteSBjbG9zZXQuIEkgaGF2ZSBjaGVjayBhbGwgbXkgZGV2aWNlcyB0byBtYWtlIHN1cmUgdGhleSBhbGwgc2hvdyBhbGwgY2F0ZWdvcmllcyBhbmQgc2l6ZXMgYnV0IHN0aWxsIGl0IHN3aXRjaGVzIGJhY2sgZXZlcnkgdGltZS4uIApQSVg6IE1pYW1pIE9yYW5nZSBCb3dsIFBsYXllZCBIb3N0IFRvIDUgU3VwZXIgQm93bHNMb21iYXJkaSBLcmFtZXJHcmVlbiBCYXkgUGFja2VycyBjb2FjaCBWaW5jZSBMb21iYXJkaSBpcyBjYXJyaWVkIG9mZiB0aGUgZmllbGQgYWZ0ZXIgaGlzIHRlYW0gZGVmZWF0ZWQgdGhlIE9ha2xhbmQgUmFpZGVycyAzMyB0byAxNCBpbiB0aGUgU3VwZXIgQm93bCBJSSBnYW1lIGluIE1pYW1pLCBGbGEuIE9uIEphbi4gClJheW1vbmQsIDI3LCBoYWQgMTAgZ29hbHMgYW5kIDIyIHBvaW50cyBpbiA0NiBnYW1lcyB0aGlzIHNlYXNvbiBhbmQgaGFzIGVpZ2h0IGdvYWxzIGluIDU1IGNhcmVlciBTdGFubGV5IEN1cCBwbGF5b2ZmIGdhbWVzLiBUaGUgQ29jaHJhbmUsIEFsdGEuIApTaGUgYW5kIHRoZSBtYW55LCBtYW55IHNraWxsZWQgd29tZW4gZmlnaHRlcnMgYXJlIHRyeWluZyB0byBsZWdpdGltaXplIHdvbWVuIE1NQSwgbm90IHR1cm4gaXQgaW50byBhIGZyZWFrIHNob3cuU2hlIGlzIHNwb25zb3JlZCBieSBSZWVib2sgYW5kIE1ldHJvIFBDUy4gQWdhaW4sIHRoZXJlIGlzIE5PIGNoYW5jZSBpbiBoZWxsIHRoYXQgZWl0aGVyIG9uZSBvZiB0aGVzZSBzcG9uc29ycyB3b3VsZCBoYW5nIGFyb3VuZCBpZiB0aGVyZSB3YXMgdGhlIHNsaWdodGVzdCBjaGFuY2Ugc2hlIGdldCBpbnRvIGEgY2FnZSB3aXRoIGEgbWFuLi4gClRoaXMgb2ZmZXIgaXMgYXZhaWxhYmxlIG9ubHkgdG8gdGhvc2UgY29taW5nIGZyb20gdGhlIFVuaXRlZCBLaW5nZG9tIGFuZCBJcmVsYW5kIGFuZCBjYW5ub3QgYmUgY2xhaW1lZCBieSBvdGhlcnMuIApIZSBvcGVuZWQgdXAgaGlzIGhpcHMsIGdlbmVyYXRlZCBwb3dlciB3aXRoIGhpcyBib3R0b20gaGFuZCwgYW5kIG5haWxlZCBpdCBvdmVyIHRoZSBzaWdodHNjcmVlbi4gClNpIHNpZ3VlcyBjb25kdWNpZW5kbyBhcyB1biBkYSB0ZSB2YXMgYSBtYXRhciAgIGlmIHlvdSBrZWVwIGRyaXZpbmcgbGlrZSB0aGF0IHlvdSBnb2luZyB0byBnZXQgeW91cnNlbGYga2lsbGVkClRoZSB3b3JzZSB0aGV5IGFyZSwgdGhlIGJldHRlciB0aGUgY2FsbCBpcywgaG93ZXZlciBhZ2FpbnN0IGRlY2VudCBwbGF5ZXJzIGl0cyBwcm9iYWJseSBhIGZvbGQuIApIZSBhbHNvIGFsd2F5cyBoYWQgYSBjb3VwbGUgYmxhbmtldHMgYW5kIHRob3NlIGVtZXJnZW5jeSBmb2lsIGJsYW5rZXRzIGluIHRoZSBiYWNrIGF0IGFsbCB0aW1lcyBhcyB3ZWxsLi4gClRoaXMgaXMgaG93IGl0IHdvcmtzOiBJbWFnaW5lIHRoYXQgZWFjaCBwYXJ0eSBpcyBzaXR0aW5nIGF0IGEgdGFibGUsIGFuZCB0aGV5IGVhY2ggaGF2ZSBhIHN0YWNrIG9mIHBva2VyIGNoaXBzLCBvbmUgZm9yIGVhY2ggcGVyc29uIHdobyB2b3RlZCBmb3IgdGhlbS4gUGFydHkgQSwgd2l0aCB0aGUgbGFyZ2VzdCBzdGFjaywgaGFzIHRoZSBtb3N0IHZvdGVzLCBzbyBnZXRzIHRoZSBmaXJzdCBzZWF0IGluIHRoZSBhc3NlbWJseS4gVGhpcyBwYXJ0eSB0aGVuIHNwbGl0cyB0aGVpciBzdGFjayBpbnRvIHR3byBlcXVhbCBwaWxlcyBhbmQgd2UgbG9vayBhdCB3aG8gaGFzIHRoZSBoaWdoZXN0IHN0YWNrIGFnYWluLiBJdCBjb3VsZCBiZSB0aGF0IFBhcnR5IEEgbm93IGhhcyB0aGUgdHdvIGxhcmdlc3Qgc3RhY2tzLCBhbmQgc28gaXQgZ2V0cyBhbm90aGVyIHNlYXQgaW4gdGhlIGFzc2VtYmx5LCBhbmQgaXQgc3BsaXRzIGl0cyBjaGlwcyBpbnRvIHRocmVlIGVxdWFsIHBpbGVzLCBvciBQYXJ0eSBCIG5vdyBoYXMgdGhlIGhpZ2hlc3Qgc3RhY2sgaW4gd2hpY2ggY2FzZSBpdCBnZXRzIHRoZSBuZXh0IHNlYXQgYW5kIGl0cyBwaWxlIGlzIHNwbGl0IGludG8gdHdvLiBUaGlzIGNvbnRpbnVlcyB1bnRpbCBhbGwgdGhlIHNlYXRzIGFyZSBmaWxsZWQuCklmIHlvdSdkIGxpa2UgdG8ga25vdyB3aGF0IG5vdGVzIGFyZSBvbiB0aGUgdmlvbGluLCBhc2sgeW91ciBpbnN0cnVjdG9yIG9yIHNvbWVvbmUgeW91IGtub3cgd2hvIHBsYXlzLiAKSXQgc2VlbXMgbGlrZSBpdCdzIG1vcmUgdG8gY29udmluY2UgdGhlbXNlbHZlcyBhbmQgdGhlaXIgZWdvcyB0aGF0IHRoZXkncmUgcmlnaHQgcmF0aGVyIHRoYW4gYWN0dWFsbHkgdG8gcmVzcG9uZCB0byBtZS4gCkogZG9uYyByZW5vbmMsIHBvdXJzdWl0IGlsLCBkYW5zIG1hIHByYXRpcXVlIHJ1cmFsZSwgYXV4IG1kaWNhbWVudHMgZCBwcml4IHBsdXMgb3UgbW9pbnMgbGV2LCBldCBhdXggcHJwYXJhdGlvbnMgcGhhcm1hY2V1dGlxdWVzIGRvbnQgbGUgbHV4ZSBuZSBwZXV0IHRyZSBwYXkgcXVlIHBhciBsZSByaWNoZS4uIApTZW5pb3IgZGlyZWN0b3Igb2YgaW5zaWdodHMgYW5kIGFkdm9jYWN5LCBXYWxtYXJ0CkxhYm9yIG9ubHkgaGVsZCBzZXZlbiBvZiAyNSBzZWF0cyBpbiB0aGUgVGFzbWFuaWFuIGxvd2VyIGhvdXNlIGdvaW5nIGludG8gU2F0dXJkYXkgcG9sbCBhZnRlciBhIGRydWJiaW5nIGluIDIwMTQsIHNvIG5lZWRlZCB0byBhbG1vc3QgZG91YmxlIGl0cyBudW1iZXJzIHRvIHdpbiBtYWpvcml0eSBnb3Zlcm5tZW50LiAKV2lsa2llIHByYWlzZXMgTWFja2xpbiBmb3IgaGVyIGNvbnRyaWJ1dGlvbiB0byBwb2tpZSByZWZvcm0KV2VpZ2h0IGRyaXZlcyB5b3VyIGhlYWQgZnVydGhlciBpbnRvIHRoZSBzbm93LCBmcnVzdHJhdGVkIGFidXNlIG11ZmZsZWQgYnkgZnJvemVuIGdyYXNzLiBCYWJ5IG9zdHJpY2ggbGVncyBhdHRlbXB0IHRvIHN0YW5kIHdoaWxlIHNraXMgYXJlIGVhZ2VyIHRvIGNvbnRpbnVlIHdpdGhvdXQgeW91LiBUZW50YXRpdmVseSwgeW91IHNldCBvZmYgYWdhaW4sIGtub3dpbmcgdGhhdCB0aGUgZXhwZXJpZW5jZSB3aWxsIGJlIHJlcGVhdGVkIGFzIHNvb24gYXMgeW91IGhpdCBhbnl0aGluZyB0aGF0IGNvdWxkIGJlIGRpc21pc3NlZCBhcyAiYSBidW1wIi4gCldoZW4gdGhlIHdlYXRoZXIgd2FybXMgdXAsIHRoZSBwYXJ0eSBtb3ZlcyBvdXRzaWRlIHRvIFRoZSBEZWNrIEJheWZyb250IEJhciBhbmQgUmVzdGF1cmFudCBhbmQgSDJPIEJhciBHcmlsbGUgZmVhdHVyaW5nIGFuIG91dGRvb3IgcG9vbCwgcHJpdmF0ZSBwYXJ0eSBjYWJhbmFzLCBob3QgdHVicyBhbmQgZmlyZSBwaXRzLiAKT2J2aW91c2x5LCB0aGVyZSBpcyBubyBzdWNoIHRoaW5nIGFzIHRoZSAid29ya2luZyBwb29yLiIgVGhlcmUgYXJlLCBob3dldmVyLCBwZW9wbGUgd2hvIHRocm91Z2ggc29tZSBmYXVsdCBvZiB0aGVpciBvd24gKHRlZW5hZ2UgcHJlZ25hbmN5LCBoaWdoIHNjaG9vbCB0cnVhbmN5LCBvcnBoYW5ob29kKSB3b3JrIHR3byBqb2JzIGF0IG1pbmltdW0gd2FnZSBhbmQgY2Fubm90IGFmZm9yZCBib3RoIGZvb2QgYW5kIFR5bGVub2wuIFNpbmNlIHRoZXkgYXJlIGFsbCBpcnJlc3BvbnNpYmxlIGRydWcgYWRkaWN0cywgdGhleSBjYXNoIHRoZWlyIHBheWNoZWNrcyBhdCB0aGUgcG9rZXIgdGFibGUuIFRoaXMgaXMgYW4gZXhwbG9pdGFibGUgY2hhcmFjdGVyIGZsYXcsIGFzIGEgYmx1ZmYgdGhhdCBtaWdodCByZXF1aXJlIGEgJDEwMCBiZXQgZm9yIG5vbiBkZWdlbmVyYXRlcyBjYW4gYmUgcmVkdWNlZCB0byAkNTAsIGJlY2F1c2UgdG8gdGhlIHNvY2lhbCByaWZmIHJhZmYga25vd24gdG8gbWVkZGxpbmcgYWNhZGVtaWNzIGFzICJ0aGUgd29ya2luZyBwb29yIiB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuICQ1MCBhbmQgJDEwMCBpcyBzaW1wbHkgZmlmdHkgZmV3ZXIgc2NyYXRjaCBhbmQgd2lucyBhdCBhIHByZWRvbWluYW50bHkgTWV4aWNhbiBjb252ZW5pZW5jZSBzdG9yZS4KQW5vdGhlciBvcHRpb24gaXMgdG8gaGF2ZSBzb21lIHNvcnQgb2Ygbm9uIGluc3VyYWJsZSBzaWRlIGJ1c2luZXNzLiBTZXBhcmF0ZSBvZmZlcmluZ3Mgd2l0aG91dCB0aGUgZHViaW91cyBldGhpY3Mgb2YgU09QIGFydGlzdHJ5LiBNYXNzYWdlIGF0IGEgY2xpbmljLCBhbmQgaGF2ZSB5b3VyIGJhY2t5YXJkIHl1cnQgZm9yIG1lZGl0YXRpb24gbGVzc29ucyBhbmQgZHJ1bSBqb3VybmV5cyBvciB3aGF0ZXZlci4gSWYgeW91IGhhdmUgYSBjYXJlZXIgZm9yIG1vbmV5IHRoZW4geW91ciBoZWFsaW5nIGhvYmJ5IGNhbiBncm93IHdpdGhvdXQgcHJlc3N1cmUuClBsYXllcnMgYXJyYW5nZSB0aGVpciBjYXJkcyBvbiB0aGUgdGFibGUgaW4gdGhyZWUgcm93cyBvZiB0d28gY2FyZHMgZWFjaC4gClRvIGRldGVybWluZSBpZiB5b3UgbmVlZCBhIHN0YXRlIGlzc3VlZCBsaWNlbnNlLCBjb250YWN0IHlvdXIgc3RhdGUncyBib2FyZCBvZiBtYXNzYWdlIHRoZXJhcHkuIEhlciBkb3NzaWVyIGluY2x1ZGVzIEphWmFNTSBXZWJEZXNpZ25zLCBhc3Npc3RhbnQgaGlnaCBzY2hvb2wgYmFuZCBkaXJlY3RvciwgZGlzdHJpY3QgbWFuYWdlciBmb3IgdGhlIENsYXJpb24gTGVkZ2VyIGFuZCBldmVudCBjb29yZGluYXRvciBmb3IgdGhlIFZpY2tzYnVyZyBDb252ZW50aW9uIENlbnRlci4uIApJdCBoYXMgbm90IGNvbWUgdG8gYmUuIE90aGVyIG5hbWVzIGhhdmUgZW1lcmdlZCAgIFNjaGVmdGVyIHdhcyBxdWljayB0byBjaXRlIGEgZm9ybWVyIENpdGlncm91cCBwcmVzaWRlbnQgd2hvIHdhcyBlbm1lc2hlZCBpbiB0aGUgc2NhbmRhbCAgIGJ1dCB0aGUgcmVwb3J0LCBhdCBsZWFzdCBzbyBmYXIsIG9ubHkgaGFzIGhlbHBlZCBkaXN0cmFjdCBmcm9tIGF0dGVudGlvbiBoZWFwZWQgb24gS3JhZnQuIApLZWVwIGl0IHRvIGp1c3QgdGhlIHdlZWtlbmQgaGFuZ292ZXIgY3VyZSB0aG91Z2ggYW5kIHllYWgsIHlvdSB3aWxsIGN1cmUgeW91ciBoYW5nb3ZlciBhbmQgZmVlbCBkYW1uIGZpbmUgZG9pbmcgaXQuIEJhc2ljYWxseSB5b3Ugd2lsbCBmZWVsIGJldHRlciB3aXRoIHlvdXIgaGFuZ292ZXIgdGhhbiB3aGVuIHlvdSB3ZXJlIGRyaW5raW5nIGxvbC4gCkhvbmVzdGx5LCBJIGd1ZXNzIEkganVzdCBkb24gaGF2ZSBnb29kIGFpbSAgIEkgY2FuIHVzZSB0aGUgd2luZ21hbiBiZXR0ZXIgdGhhbiBtb3N0IG90aGVyIGd1bnMgZXZlbiB0aG91Z2ggSSBjb25zdGFudGx5IHNlZSBwZW9wbGUgc2F5aW5nIGl0IHRoZSBiZXN0IGd1biBpbiB0aGUgZ2FtZS4gSSBmaW5kIHRoYXQgaXQgcmVjb2lsIGlzIHByZXR0eSBiYWQsIGFuZCB0aGUgd2F5IGl0IHpvb21zIGV2ZW4gd2l0aCBhIHNpZ2h0IHNlZW1zIGRpZmZlcmVudCBmcm9tIG90aGVyIGd1bnMsIHNvIEkganVzdCBjYW4gbGluZSB1cCB0YXJnZXRzIHdlbGwgd2l0aCBpdC4gQmVpbmcgb24gY29uc29sZSBwcm9iYWJseSBhbHNvIGNvbnRyaWJ1dGVzIHRvIHRoaXMsIGJ1dCBJIGtub3cgcGVvcGxlIGRvIHdlbGwgd2l0aCBpdCBvbiBjb25zb2xlIHRvby4uIApDKSBSYWlzZSAgIGRvdWJsZSB0aGUgQmlnIEJsaW5kIGFtb3VudApUaGUgQkJzIHdlcmUgYSBtb21lbnQgYXMgbXVjaCBhcyBhIHNvdW5kIGEgbW9tZW50IEkgcmVjYWxsIGZvbmRseSBldmVuIHRob3VnaCBJIHdhcyBzYWRseSB0b28gaGFwbGVzc2x5IGhldGVybyBtYWxlIGFuZCBwb3N0IHRlZW4gZm9yIGl0IHRvIGJlIG1pbmUuIEJ1dCB0aGV5IHdlcmUgYWxzbyBhIHZpYmUgYXMgbXVjaCBhcyBhIG1vbWVudDogdGhlaXIgaGFybW9uaWVzLCBiYWxhbmNlZCBwZXJmZWN0bHkgYmV0d2VlbiBhY3RpdmUgYW5kIHBhc3NpdmUsIGVtYm9kaWVkIGEgc3Bpcml0IG9mIHllYXJuaW5nLCBhIGxlc3MgZGVtYW5kaW5nIHN0cmFpbiBvZiBzZXh1YWwgZXhwcmVzc2lvbiB0aGFuIFIgcGxlYWRpbmcuIEFuZCB0aGF0IHZpYmUgdGhleSByZWNhcHR1cmUgaGVyZSwgZXZlbiB3aGVuIHRoZXkgZ2V0IGFnZ3Jlc3NpdmUgb24gIlBhc3Npb25hdGUsIiBldmVuIHdoZW4gdGhleSdyZSBmaWd1cmF0aXZlbHkgb24gdGhlaXIga25lZXMgaG9waW5nIHlvdSdsbCB0YWtlIHRoZW0gYmFjaywgZXZlbiB3aGVuIGVtYnJhY2luZyBtYXRlcmlhbCBNYXggTWFydGluIHdvdWxkbid0IGV2ZW4gaGF2ZSBzaWduZWQgb2ZmIG9uIGZvciBmaWxsZXIgMjAgeWVhcnMgYWdvLiAKSSdtIHRoZSB0cmVhc3VyZXIgb2YgdGhlIGNvbW11bml0eSBhc3NvY2lhdGlvbiB0aGF0IG9wZXJhdGVzIGluIGEgc2ltaWxhciB3YXkgdG8gY29uZG8gYXNzb2NpYXRpb25zIGJhY2sgaG9tZS4gVGhlIGVsZWN0ZWQgYm9hcmQgaXMgcmVzcG9uc2libGUgZm9yIDE3OCBob3VzZWhvbGRzLiBXZSBwYXkgYSBtaW5pbWFsIHllYXJseSBmZWUgdGhhdCBjb3ZlcnMgc25vdyBjbGVhcmluZywgZ3Jhc3MgY3V0dGluZywgc3RyZWV0IGxpZ2h0cywgZmlyZSBoeWRyYW50cyBhbmQsIG9uY2UgYSB5ZWFyLCB3ZSBoYXZlIGEgY2xlYW51cCBkYXkgaW52b2x2aW5nIHRoZSBlbnRpcmUgY29tbXVuaXR5LiBNZW1iZXJzIGZpeCBmZW5jZXMsIHJha2UsIHBhaW50LCB0aGVuIHdlIGhhdmUgYSBiaWcgZ3JpbGwgcGFydHkgd2l0aCBob3Rkb2dzIGFuZCBiYWxsb29ucyBmb3IgdGhlIGtpZHMuCiJQYWxhY2UgUG9rZXIgUm9vbSBpcyBvbmUgb2YgTWljaGlnYW4ncyB0b3AgZ3Jvc3NpbmcgcG9rZXIgcm9vbXMsIHdpdGggb3ZlciAkMiBtaWxsaW9uIGluIHJlcG9ydGVkIGdhbWJsaW5nIHByb2ZpdHMgZnJvbSAyMDEwIDIwMTIsIiByZWFkcyB0aGUgcmVsZWFzZS4uIApBbm90aGVyIGNvbW1vbiBvY2N1cnJlbmNlIGluIHRoZSBob21lIGdhbWUgaXMgZ2V0dGluZyBjYWxsZWQgYnkgbXVsdGlwbGUgcGxheWVycywgbm8gbWF0dGVyIHdoYXQgdGhlIGJldC4gUGxheWVycyBpbiBhIGhvbWUgZ2FtZSBvZiB2YXJpZWQgc2tpbGwgd2lsbCBjYWxsIGFuZCBjb250aW51ZSB0byBjYWxsIHdoZW4gdGhleSdyZSBob2xkaW5nIG1pZCBwYWlyLCBsb3cgcGFpciwgb3IgbmVlZCB0d28gY2x1YnMgdG8gbWFrZSB0aGVpciBmbHVzaC4gClRoZSBvbmxpbmUgZ2FtaW5nIG9mIHBva2VyIGFsbG93cyB5b3UgdG8gZXZlbiBwbGFjZSBsb3cgc3Rha2VzIGFuZCBwcm9jZWVkIHdpdGggcGxheWluZyB0aGUgZ2FtZS4gVGhpcyBwcm92ZXMgYXMgYW4gYWRkZWQgYWR2YW50YWdlLiBPbmxpbmUgZ2FtaW5nIGFsc28gb2ZmZXIgb3RoZXIgaW50ZXJlc3RpbmcgdGhpbmdzIHN1Y2ggYXMgZnJlZSByb2xsIHBva2VyIHRvdXJuYW1lbnRzIHRoYXQgYXJlIG9mIGdyZWF0IGludGVyZXN0IGFtb25nIHRoZW9ubGluZSBwb2tlciBwbGF5ZXJzLiBUaGVyZSBpcyBubyBlbnRyeSBmcmVlIGNoYXJnZWQgaW4gc3VjaCB0b3VybmFtZW50cyB0aGF0IGF0dHJhY3QgbW9yZSBhbmQgbW9yZSBwZW9wbGUgdG8gY29tZSBhbmQgcGFydGljaXBhdGUgYW5kIHRyeSB0aGVpciBsdWNrIGF0IHdpbm5pbmcuIFRoZSBjbGllbnRlbGUgdGhhdCBpcyBub3QgdGhhdCB3ZWxsIHRvIGRvIGFuZCB0aGUgcGxheWVycyB3aG8gYXJlIGJlZ2lubmVycyBpbiB0aGlzIGZpZWxkIGFjdGl2ZWx5IGNvbWUgZm9yd2FyZCBhbmQgcGFydGljaXBhdGUgaW4gdGhlc2Uga2luZCBvZiB0b3VybmFtZW50cy4gU3VjaCB0b3VybmFtZW50cyBjYXNoIGluIGEgaHVnZSBhbW91bnQgb2YgSW50ZXJuZXQgdHJhZmZpYy4KVGFjb2xpa2Vzd2VlZCAgMSBwb2ludCAgc3VibWl0dGVkIDcgZGF5cyBhZ28KQ2xhc3Mgd2FyZmFyZSBpcyBidWxsc2hpdC4gCkthYXJ0amVzIHZvb3IgZGUgbWV0cm8gYmVzdGVsbGVuIHdhcyBzaW1wZWw6IGlrIGhpZWxkIDEwIHZpbmdlcnMgaW4gZGUgbHVjaHQgYmlqIGRlIGthc3NhICgxMSByaXR0ZW4gdm9vciBkZSBwcmlqcyB2YW4gMTAga3JpamcgamUgZGFuKS4gRW4gZGFuIGRlIHRyYXBwZW4gYWYgbmFhciBkZSBtZXRybzsgZGl0IGlzIGVlbiB2cmlqIGtsZWluIHN0YXRpb24sIG1ldCBicm9uemVuIGJlZWxkZW4gZW4gdmVlbCBtYXJtZXIuIEhldCBSdXNzaXNjaGUgbWV0cm9uZXR3ZXJrIGlzIGJla2VuZCB2b29yIGRlIHNqaWVrZSBzdGF0aW9ucywgbm9nIHVpdCBkZSB0aWpkIHZhbiBTdGFsaW4uIApGaXJzdCBoYW5kIHByZSBhbmQgZmxvcCBhcmUgZmluZSBJIHRoaW5rIHlvdSBjYW4gZGlzY291bnQgS0sgSkogY2F1c2UgYSBkZWNlbnQgcGxheWVyIHdpbGwgYWN0dWFsbHkgQ0JldCBhbiBhY2UgaGlnaCBmbG9wIHdpdGggdGhvc2UgaGFuZHMgSVAgZXNwIHdpdGggYSByYW5nZSBhZHZhbnRhZ2UgZXhhY3RseSBmb3IgdGhlIHJlYXNvbiB0aGF0IGhlIGNhbiBjaGFyZ2UgTkZEIGFuZCBndXR0ZXJzIGFuZCBkZW55IGVxdWl0eSBhbmQgc2hvdWxkIGJlIGNiZXR0aW5nIHRoaXMgZmxvcCB3aXRoIGEgaGlnaGVyIGZyZXF1ZW5jeS4gSGUgY2hlY2tzIHNvIGlkIHB1dCBoaW0gd2Vha2VyIGFjZXMgd2l0aCBub3QgYSBsb3Qgb2YgYmFja2Rvb3IgcG9zc2liaWxpdGllcyBvciBzb21lIG9mZnN1aXQgYWNlcy4gVHVybiBjb21lcyBhIDcgd2hpY2ggaXMgcmVhbGx5IGEgYnJpY2sgSU1PIHdpdGggdGhlIHJhbmdlcyBJIGRvbnQgc2VlIHZpbGxpYW4gMyBiZXR0aW5nIDg5cyBhbmQgZ2V0dGluZyBlcXVpdHkgaGVyZSBhbmQgSSB0aGluayBoZSBpcyBqdXN0IHN0YWJiaW5nIHdpdGggYSB3ZWFrIGFjZSBhbmQgc3VpdGVkIGJyb2Fkd2F5cyB0aGF0IGhpdCB0aGlzIGJvYXJkLiAKVmlzaXRlZCBEcmVhbSBIZWF2ZW4gTWFzc2FnZSwgU29pIDMzIG9uIDE0J3RoIE9jdC4gYXQgYXJvdW5kIDcuMzAgcG0uIEFzIEkgZW50ZXJlZCBpbnNpZGUsIGEgbmljZSBsYWR5IG9uIGNvdW50ZXIgZ3JlZXRlZCBtZSBhbmQgYXNrIHdoZXRoZXIgSSBuZWVkIG1hc3NhZ2UsIEkgc2FpZCB5ZXMhIFNoZSBhc2tlZCBtZSB0byBzaXQgaW4gY29tZm9ydGFibGUgY2hhaXIsIG9mZmVyZWQgbWUgY2hpbGxlZCB3YXRlciwgZmlyc3QgSSBhc2tlZCBoZXIgYWJvdXQgYXZhaWxhYmlsaXR5IG9mICdNbycsIGFzIEkgaGFkIHJlYWQgc29tZSBuaWNlIHJldmlldyBhYm91dCBoZXIsIGJ1dCBzaGUgdG9sZCBtZSB0aGF0ICdNbycgaXMgb24gaG9saWRheSBhbmQgbWlnaHQgd29uJ3QgcmV0dXJuIHRpbGwgbmV4dCB5ZWFyLCBidXQgc2hlIGFzc3VyZWQgbWUgdGhhdCB0aGV5IGhhdmUgb3RoZXIgZmluZSBsYWRpZXMgZm9yIG15IG1hc3NhZ2UsCkZyYW5rbHksICJvayIgd291bGQgaGF2ZSBiZWVuIGEgbW9yZSBwcm9taXNpbmcgcmVzcG9uc2UuSSBhbHNvIGRvbiBrbm93IGFib3V0IGVxdWF0aW5nIGxvdmUgeW91IHdpdGggYW4gZXhwZWN0YXRpb24gb2YgbWFycmlhZ2UuIERvIG1lbiByZWFsbHkgYmVsaWV2ZSB0aGF0IHdlIHRoaW5rIHRoYXQgd2F5PyBzbWguIFN1Z2dlc3RpbmcgdGhhdCB0aGV5IG1vdmUgaW4gdG9nZXRoZXIgd291bGQgcHV0IG1hcnJpYWdlIGluIG15IG1pbmQgbXVjaCBtb3JlIHRoYW4gSUxZLkkgZGlkIG5vdCB3YW50IGEgbWFuIHdpdGggYSBsb3cgbiBjb3VudC4gCkkgZm9sbG93IHVwLCBhbmQgZml2ZSBzYXkgdGhleSBpbnRlcmVzdGVkLiBUaGVuIHR3byBvZiB0aGVtIGFjdHVhbGx5IGFncmVlIHRvIHNlZSB0aGUgaXRlbSwgYW5kIG5vYm9keSBzaG93cyB1cC4gSXQgc3VjaCBhIGhhc3NsZS4uIApMZWFybiB0byBwbGF5IGFuIGluc3RydW1lbnQgdG8gZ2l2ZSB5b3Ugc29tZXRoaW5nIHRvIHByYWN0aWNlLiBHZXQgaW52b2x2ZWQgd2l0aCBzb21lIGxvY2FsIGluc3RydW1lbnQgY2xhc3NlcyBhdCBhIHJlY3JlYXRpb24gY2VudGVyLCBvciBmaW5kIHR1dG9yaWFscyBvbmxpbmUgdGhhdCB3aWxsIHRlYWNoIHlvdSB0aGUgYmFzaWNzIGFuZCBob3cgdG8gcmVhZCBzaGVldCBtdXNpYy4gUGljayBhbiBpbnN0cnVtZW50IHRoYXQgZXhjaXRlcyB5b3UgbGlrZSB0aGUgZ3VpdGFyLCBiYXNzLCBvciBldmVuIHRoZSB0dWJhLgpUaGV5IGFyZSBub3QgaW1tdW5lIGZyb20gdGhlIGdsb2JhbCBwaGVub21lbm9uIG9mIGluY3JlYXNpbmcgZm9vZCBwcmljZXMuIApCdXQgaXQgYWxsIEkgZXZlciB1c2UgYW55bW9yZSB3aGVuIEkgcGljayB1cCBncm9jZXJpZXMgb24gdGhlIHdheSBob21lIGZyb20gd29yay4gV2FhYXkgc2hvcnRlciBsaW5lcyBhbmQgSSBub3QgZnJhbnRpY2FsbHkgdHJ5aW5nIHRvIGJhZyBteSBzdHVmZiBwcm9wZXJseSB3aGlsZSBrZWVwaW5nIHVwIHdpdGggdGhlIGNsZXJrIHJ1bm5pbmcgZXZlcnl0aGluZyB0aHJvdWdoIGluIHdoYXRldmVyIHJhbmRvbSBvcmRlciB0aGV5IGZlZWwgbGlrZS4gVGhlIHdvcnN0IGlzIHdoZXJlIHRoZSBzdG9yZSBvbmx5IGdpdmVzIGJhZ3MgdXAgZnJvbnQgaW5zdGVhZCBvZiBnZXR0aW5nIGEgY291bnQgYWZ0ZXJ3YXJkcyAgIHlvdSBjYW4gdXNlIG9uZSBiYWcgYXQgYSB0aW1lIGZyb20gdGhlIG5pY2UgZGlzcGVuc2VyLCBubyB5b3UgaGF2ZSB0byB0ZWxsIHRoZW0gaG93IG1hbnkgYmFncyB5b3UgZ29pbmcgdG8gbmVlZCBhaGVhZCBvZiB0aW1lLCBhcyBpZiB5b3Uga25vdyBob3cgaXQgcmVhbGx5IGdvaW5nIHRvIGdvLCBhbmQgdGhleSBwZWVsIG9mZiBhIGJ1bmNoIGFsbCBzdHVjayB0b2dldGhlciBhbmQgZHVtcCB0aGVtIGluIGEgbHVtcCBpbiBmcm9udCBvZiB5b3UgYW5kIHN0YXJ0IGJpb25pYyBzY2FubmluZyB5b3VyIHNoaXQgaW50byBhIHBpbGUgYmVmb3JlIHlvdSBjYW4gZXZlbiBnZXQgdGhlIGZpcnN0IGJhZyB1bmZ1Y2tlZCBlbm91Z2ggdG8gc3RhcnQgYmFnZ2luZy4gCkFueW9uZSB3aG8gdm90ZXMgZm9yIEpvaG5zb24gb3IgU3RlaW4gY2xhaW1pbmcgImNvbnNjaWVuY2UiIGNhbm5vdCBwb3NzaWJseSBzYXkgdGhlaXIgY29uc2NpZW5jZSBpcyBjbGVhciBpZiB0aGUgU3VwcmVtZSBDb3VydCBpcyBmaWxsZWQgd2l0aCB1bHRyYWNvbnNlcnZhdGl2ZXMgYmVjYXVzZSB5b3Ugc3Rvb2QgYnkgYW5kIGxldCBpdCBoYXBwZW4sIHBhdCB5b3VyIHNlbGYgcmlnaHRlb3VzIHNlbGYgb24gdGhlIGJhY2ssIGxvb2sgZG93biBvbiB0aG9zZSB3aG8gY291bGQgaGF2ZSBzdG9wcGVkIGl0LCBhbmQgZGVueSByZXNwb25zaWJpbGl0eSBzbyB5b3UgY2FuIHRyYXNoIHRhbGsgd2hvZXZlciBnZXRzIGVsZWN0ZWQuIE1pZ2h0IGZlZWwgZ29vZCBpbiB0aGUgYm9vdGguIApUaGluZ3MgbGlrZSBjdXN0YXJkLCBjcmVhbSwgY2hhbXBhaWduIGN1Y3VtYmVyIGFuZCBzdWNobGlrZSBhbGwgd29yayB3ZWxsIGVub3VnaCB3aXRob3V0IGFueSBvZiB0aGUgbG9uZyBsYXN0aW5nIHBhaW4gaW5kdWNpbmcgZWZmZWN0cyBvZiBzb21ldGhpbmcgbGlrZSBjaGlsbGllcy4gCkp1c3Qgbm90b3Jpb3VzIGZvciB0aHJvd2luZyBkb3duIHRoZSBzaWNrLCBuZXZlciBoZWFyZCBvZiBsaW5lLCBhZGRlZCBEYXZlbnBvcnQsIGhlIGRpZCBleGFjdGx5IHRoYXQgdG9kYXkuIFRoYXQgd2h5IEplc3NlIHRoZSBtYW4gYXQgdGhlc2UgY29tcHMsIGhlIGp1c3QgdGhyb3dzIGl0IGRvd24uIEkgaGF2ZSBhIGxvdCBvZiByZXNwZWN0IGZvciB0aGF0IGl0IG5vdCBhbiB1bmNhbGN1bGF0ZWQgcmlzazogSGUgY29tbWl0dGVkIHRvIGl0LCBoZSBrbm93cyB3aGF0IGhlIHdhbnRzIHRvIGRvIGFuZCBoZSBzZW5kcyBpdC4gCkFkYW0gQ3Jvc3Nub2Ugc2FpZCB0aGUgc2l0ZSBob3N0ZWQgdGhyZWUgY2hhcml0aWVzIGEgbmlnaHQgcHJpb3IgdG8gaXRzIGNsb3N1cmUsIHdpdGggbW9yZSB0aGFuIDMwMCBjaGFyaXRpZXMgaGF2aW5nIGhlbGQgZXZlbnRzIHRoZXJlIGJlZm9yZSB0aGUgc3VzcGVuc2lvbi4KT3ZlcnZpZXcgZm9yIGNvbm5vcm14eQpMZSByYWxpc21lIDogY2VzIGhvbW1lcyBvbnQgYmVhdSB0cmUgZGVzIGNyYXRldXJzLCBpbHMgZ2FyZGVudCBuYW5tb2lucyBsZXMgcGllZHMgc3VyIHRlcnJlLiAKV2UgYWxsIGh1bWFucyBwbGF5aW5nIGEgdmlkZW8gZ2FtZSB0byBoYXZlIGZ1bi4gWWVzLCBpdCBwYXJ0IG9mIHRoZSBnYW1lIHRvIGtpbGwgZWFjaCBvdGhlciBhbmQgc3RlYWwgZWFjaCBvdGhlcnMgbG9vdC4gQnV0IGp1c3QgYmVjYXVzZSB0aGUgZ2FtZSBpcyBhYm91dCBwaXJhdGVzLCBkb2VzbiBtZWFuIHdlIGhhdmUgdG8gYWN0IGxpa2UgcGlyYXRlcyBhbmQgYWJzb2x1dGx5IGh1bWlsaWF0ZSBlYWNoIG90aGVyLiBGdW4gImdhaW5lZCIgYXQgdGhlIGV4cGVuc2Ugb2Ygb3RoZXJzLCBpcyBub3QgcmVhbGx5IGZ1bi4gQW5kIGlmIHNvbWVvbmUgYW4gYXNzaG9sZSwgaXQgZG9lc24gcmVhbGx5IGp1c3RpZnkgeW91IGJlaW5nIGFuIGFzc2hvbGUgYXMgd2VsbC4KVGhlc2UgcGVvcGxlIHdobyByZWFjdCB0byB3ZWVkIHRoaXMgd2F5LCBnZXQgcHN5Y2hvc2lzIGFuZCBwYXJhbm9pYSB0byB0aGUgcG9pbnQgdGhleSBiZWxpZXZlIGZyaWVuZHMgYW5kIGZhbWlseSBhcmUgcGxvdHRpbmcgdG8ga2lsbCB0aGVtIChhbiBleGFtcGxlIHRha2VuIHN0cmFpZ2h0IGZyb20gdGhlIHBvZGNhc3QpIC4gUGVvcGxlIHdpdGggcHN5Y2hvc2lzIGFuZCBzY2hpem9waHJlbmlhIGluIHRoZSBmYW1pbHkgc2hvdWxkIGFsc28gYXZvaWQgd2VlZCBhbmQgb3RoZXIgZHJ1Z3MgZXNwZWNpYWxseSBoYWxsdWNpbm9nZW5pY3MuIApIb3cgbWFueSB5ZWFycyBkaWQgaXQgdGFrZSBmb3IgYml0Y29pbiB0byBnbyBmcm9tIDUwIHRvIDEwaz8gNC41IHllYXJzLiAKTm9wZS4gSWNlIFQgd2FzIHRoZXJlLiAKU3VwZXIgaGVyb2VzLCBhcGFydCBmcm9tIHRoZSBjYXBlZCBjcnVzYWRlciBhbmQgaGlzIHNpZGVraWNrLCBsaWtlIFN1cGVybWFuLCBTcGlkZXJtYW4sIEZsYXNoIEdvcmRvbiwgUGhhbnRvbSwgRmFudGFzdGljIEZvdXIsIFdvbmRlcndvbWFuLCBDYXB0YWluIEFtZXJpY2EgY291bGQgYWxsIG1ha2UgYW4gYXBwZWFyYW5jZSBvbiB0aGUgbmlnaHQgaWYgdGhlcmUgaXMgZW5vdWdoIHRpZ2h0cyBhbmQgbHljcmEgdG8gZ28gYXJvdW5kLiAKSWYgbW9yZSB0aGFuIG9uZSBjYXJkIGlzIGRyYXduLCB0aGVuIHdoZXRoZXIgb3Igbm90IGl0IGlzIHJlcGxhY2VkIGJlZm9yZSBkcmF3aW5nIHRoZSBuZXh0IGNhcmQuIFRoZXJlIGlzIG5vIGluZm9ybWF0aW9uIG9uIGFueSBvZiB0aGVzZSBhc3BlY3RzIGFuZCBzbyBhIHByb3BlciBhbnN3ZXIgdG8gdGhlIHF1ZXN0aW9uIGlzIG5vdCBwb3NzaWJsZS4gKEZ1bGwgQW5zd2VyKQpBT0wgYXR0ZW1wdGVkIHRvIGJlIHRoaXMgc3F1YXJlLCBmYW1pbHkgZnJpZW5kbHkgImVudGlyZSBpbnRlcm5ldCBpbiBvbmUgYXBwbGljYXRpb24iLCBidXQsIHNlZXRoaW5nIGJlbmVhdGggdGhlIHN1cmZhY2Ugd2FzIGNoYW9zIGFuZCBpbGxlZ2FsaXR5LiBUaGUga2lkcyB1c2luZyBmYWtlIGFjY291bnRzIHRvIGRvd25sb2FkIHBvcm4gYW5kIHdhcmV6IChjcmFja2VkIGFuZC9vciBwaXJhdGVkIHNvZnR3YXJlKSB3YXMgZGVmaW5pdGVseSB0aGUgbGVhc3Qgb2YgdGhlIGlsbGVnYWwgdGhpbmdzIHRvIHdvcnJ5IGFib3V0LiAKSSBzdGlsbCBhdGUgZW50aXJlIHBpenphcyBieSBteXNlbGYgYnV0IG9wdGVkIGZvciB0aGluIGNydXN0LCBsaWdodCBjaGVlc2UsIGFuZCBsb3dlciBjYWxvcmllIHRvcHBpbmdzLiBJIHN0aWxsIGF0ZSBmYXN0IGZvb2QuIFN0aWxsIHdlbnQgdG8gcmVzdGF1cmFudHMuIAoxLiBQcmVwYXJlIGFuZCBSZWZpbmUgeW91ciBCYXR0bGUgUGxhbiAgIHdoZW4geW91IGVudGVyIGEgdG91cm5hbWVudCwgeW91J3JlIGdvaW5nIHRvIGJlIGZpZ2h0aW5nIGEgImJhdHRsZSIgZm9yIHN1cnZpdmFsICAgYWdhaW5zdCB0aGUgYmxpbmRzLCB0aGUgYW50ZXMsIGZhdGlndWUsIGFzIHdlbGwgYXMgYWdhaW5zdCB0aGUgb3RoZXIgcGxheWVycy4gV291bGQgYW55IGdvb2QgbWlsaXRhcnkgY29tbWFuZGVyIGdvIGludG8gYmF0dGxlIHdpdGhvdXQgaGF2aW5nIGZpcnN0IHN1cnZleWVkIHRoZSBiYXR0bGUgZmllbGQsIHVuZGVyc3Rvb2QgdGhlIGVuZW15IGFuZCBpdHMgdGFjdGljcywgYW5kIHdpdGhvdXQgaGF2aW5nIGEgd2VsbCBjb25jZWl2ZWQgYmF0dGxlIHBsYW4gd2hpY2ggdGFrZXMgdGhlc2UgZmFjdHMgaW50byBhY2NvdW50IGFuZCBlbnN1cmVzIHN1Y2Nlc3M/IE9mIGNvdXJzZSBub3QhIElmIHRoZXkgZGlkLCB0aGV5IHByb2JhYmx5IHdvdWxkbid0IGxpdmUgdG8gdGVsbCBhYm91dCBpdC4uIApMb3diYWxsIEJhc2ljYWxseSwgaXQncyBmaXZlIGNhcmQgZHJhdyBhbmQgdGhlIGxvdyBoYW5kIHdpbnMgIFRoZSBwb2ludCBvZiB0aGUgZ2FtZSBpcyB0byBoYXZlIHRoZSBsb3dlc3QgaGFuZCBwb3NzaWJsZS4gClNwZW5kaW5nIGEgbG90IG9uIGEgd2VkZGluZyByaW5nIGlzIGEgYmlnIGRlY2lzaW9uIGFzIGEgbG90IG9mIG1hcnJpYWdlcyBlbmQgYmVjYXVzZSBvZiBmaW5hbmNpYWwgZGlmZmljdWx0aWVzIHRoYXQgc25vd2JhbGwgaW50byBvdGhlciBwcm9ibGVtcy4gSSBzdWdnZXN0IHRoaW5raW5nIGFib3V0IGJ1eWluZyBhbiBhZmZvcmRhYmxlIHJpbmcgYW5kIHRocm93aW5nIHRoYXQgZXh0cmEgbW9uZXkgaW50byBzYXZpbmdzLiBXaGVuIHlvdSBmZWVsIG1vcmUgZmluYW5jaWFsbHkgc3RhYmxlIGluIHRoZSBmdXR1cmUgLyBoYXZlIGRpc3Bvc2FibGUgaW5jb21lLCB0aGVuIHlvdSBjYW4gc3VycHJpc2UgaGVyIHdpdGggYSBuaWNlciByaW5nIGZvciBhbiBhbm5pdmVyc2FyeSBvciBzb21ldGhpbmcuLiAKTWFsaSBCYWxpZSBhcyB0YXZlcm4gb3duZXIgKFJha3NoYXNhKQpUaGF0J3MgdG9vIGJhZC4gCiJUaGUgcGFzc2l2ZSBoZWFkIG1vdmVtZW50IFNFUCBleHBlcmltZW50IGRlbW9uc3RyYXRlZCB0aGF0IG5vIHNpZ25pZmljYW50IGNoYW5nZXMgb2NjdXJyZWQgZm9sbG93aW5nIGEgc2ltcGxlIG1vdmVtZW50IG9mIHRoZSBzdWJqZWN0J3MgaGVhZC4gCldha2VmaWVsZCBoYWQgc2FpZCBlYXJsaWVyIHRoaXMgd2VlayBoZXJlIHRoYXQgaGVyIExpbmtvcGluZyB0ZWFtbWF0ZXMgc3VwcG9ydGVkIGhlciBhbmQgdW5kZXJzdG9vZCBoZXIgbmF0aW9uYWwgdGVhbSBtYXR0ZXJzIHRha2luZyBwcmVjZWRlbmNlLiBTaGUgYWxzbyBzYWlkIHRoYXQgc2hlIHRob3VnaHQgaGVyIHRlYW0sIHdoaWNoIGFsc28gZmVhdHVyZXMgc3RhciBTd2lzcyBnb2FsdGVuZGVyIEZsb3JlbmNlIFNjaGVsbGluZywgY291bGQgcHVsbCBvdXQgdGhlIHNlcmllcyB3aXRob3V0IGhlci4KTmV4dCB0aGluZyBJIGtub3cgSSBoZWFyIHNvYmJpbmcuIApQZXRlIEZlbGRtYW4gd2FzIHBsYXlpbmcgdG8gbXkgbGVmdCBhbmQgY2F1c2luZyBwcm9ibGVtcy4gCk5pY2UgZXhhbXBsZXMgbGlrZSBGbGludCBpbiB0aGUgVVMuIApGZWVsIGxpa2Ugd2UganVzdCBvZmYgdGhlIGxlYWQgY2FycyBidXQgd2UgY2FuIGNvbXBldGUuIApUaGUgd29ya2luZyBwb2ludCByb29tIGlzIGEgYm94IGRlc2lnbmVkIHRvIGhvdXNlIHRoZSBudWNsZWFyIGRldmljZS4gCkRvbiBjb21wYXJlIHlvdXJzZWxmIHRvIG90aGVycyBmb3Igc3RhcnRlcnMuIApEZXZhbnQgbGUgcHJlbWllciwgb24gZHBvc2UgZGVzIG9mZnJhbmRlcyByaXR1ZWxsZXMsIGFsb3JzIHF1ZSBsZSBkZXV4aW1lIHNlIHZvaXQgcGFyIGQgY2xvY2hlIGV0IGRlIGxhIHBlYXUgZCBjaGV2YWwgYmxhbmMgcXUgYXVyYSBzYWNyaWZpIHBvdXIgbCBBdSB0cm9pc2ltZSBpbmNvbWJlcmEgbGUgcmxlIGQgZGUgcG9udCwgZG9udCBsZSBjYW5kaWRhdCBjaGFtYW4gc2Ugc2VydmlyYSBsb3JzIGRlIHNvbiBhc2NlbnNpb24gaW5pdGlhdGlxdWUuIApUaGUgcHJvYmxlbSB3aXRoIGEgb25lIHN0YXRlIHNvbHV0aW9uIGFyZSB0aGUgZGVtb2dyYXBoaWNzLiAKRGVDaWNjbyBhbHNvIG9yZ2FuaXplcyBkb25hdGlvbiBiYXNlZCwgbW9udGhseSBzbnVnZ2xlIHBhcnRpZXMuIEZpZnR5IG9yIHNvIHBlb3BsZSAgIG1vc3Qgc3RyYW5nZXJzICAgY29tZSB0b2dldGhlciB0byBsaWUgb24gdGhlIGdyb3VuZCBpbiBiaWcgZ3JvdXAgcGlsZXMsIG9yIGV4cGxvcmUgc2FmZSBhbmQgY29uc2Vuc3VhbCBwaHlzaWNhbCBjb250YWN0IHdpdGggZWFjaCBvdGhlci4gQWdlLCBnZW5kZXIsIHNleHVhbCBvcmllbnRhdGlvbiwgcGh5c2ljYWwgYXBwZWFyYW5jZSwgYmFja2dyb3VuZCAgIG5vbmUgb2YgaXQgaXMgc3VwcG9zZWQgdG8gbWF0dGVyLgpUaGUgcG9pbnQgb2YgdGhpcyBmYXJtaW5nIG1ldGhvZCBpcyB0aGF0IHlvdSBtb3N0bHkgbmVlZCB0byBqdXN0IGludmVzdCBpbiBSdW5lIGFuZCBub3QgRXF1aXBzIHRoYXQgYXJlIG5vdCByZWxldmFudCB0byBhY2hpZXZpbmcgaW5zdGFudCBjYXN0IE1TIChTdGFmZiBvZiBFbGVtZW50YWwsIEZsb3JhIENhcmQsIEhvY2tleSBNYXNrLFNwaWtlZCBTY2FyZiwgZXRjKS4uIApNcyBTdGVybiB0b2xkIHRoZSB0aHJlZSBwZXJzb24gcGFuZWwgdGhhdCB0aGV5IHdvdWxkIGNvbnNpZGVyIHRoZSBjb21wbGFpbnRzIHRvIGZvcm0gYW4gb3BpbmlvbiBvbiB3aGV0aGVyIHRoZSBtYXR0ZXIgY291bGQganVzdGlmeSB0aGUgTlNXIHBhcmxpYW1lbnQgY29uc2lkZXJpbmcgaGVyIHJlbW92YWwgZnJvbSBvZmZpY2Ugb3IsIGlmIG5vdCwgYSByZWZlcnJhbCBiYWNrIHRvIHRoZSBDaGllZiBNYWdpc3RyYXRlLiAKQ2hlY2sgZmlyc3QsIHRob3VnaCwgYmVjYXVzZSBzb21lIHByb3RvdHlwZSBwbGFjZXMgbWlnaHQgbm90IGRvIGludGVybmFsIHJvdXRpbmcsIGp1c3QgdGhlIG91dHNpZGUgZWRnZS5BcyBvdGhlcnMgaGF2ZSBzYWlkLCB5b3UgYWJzb2x1dGVseSBnb2luZyB0byBiZSBkZXNpZ25pbmcgd2l0aCBFREEgY29tcG9uZW50cywgdGhleSBqdXN0IGJlIGNvbm5lY3RvcnMgZm9yIG1vZHVsZXMgaW5zdGVhZCBvZiBpbmRpdmlkdWFsIHBhc3NpdmVzIG9yIElDcy4gU3RpbGwgd29ya3MganVzdCB0aGUgc2FtZS4uIAoxMCkgV2hhdCBmaXZlIHllYXIgb2xkIGdpcmwgd291bGRuIHQgbG92ZSB0byBoYXZlIGJyYWNlbGV0cyBtYWRlIHdpdGggamVsbHkgYmVhbnMgc3RydW5nIHdpdGggbnlsb24gdGhyZWFkIGFzIHBhcnR5IGZhdm9ycyBmb3IgaGVyIGJpcnRoZGF5IHBhcnR5LiBDbGFzcHMgY2FuIGJlIHB1cmNoYXNlZCB2ZXJ5IHJlYXNvbmFibHkgYXQgY3JhZnQgc3RvcmVzLgpTaGUgd2FzIG5ldmVyIGRpc3RyYWN0ZWQgYnkgdHJ5aW5nIHRvIGZpbmQgYSBub24gZXhpc3RlbnQgY3VyZSBvciBhbnl0aGluZy4gQnV0IHRoZSByZXN0IG9mIHRoZSBob3NwaWNlIHdhcyBmdWxsIG9mIHN1Y2ggcGVvcGxlLiAKQ29tcGxlbWVudGFyeSBhbmQgYWx0ZXJuYXRpdmUgdGhlcmFwaWVzIGZvciB0cmVhdGluZyBtdWx0aXBsZSBzY2xlcm9zaXMgc3ltcHRvbXMKSXQgZWFzeSB0byBmb3JnZXQgdGhhdC4uIApQb2xpY2Ugc2FpZCBDQ1RWIGZvb3RhZ2Ugc2hvd2VkIE5pY2hvbHMgYW5kIGEgZnJpZW5kLiAKVG8gdGhpcyBkYXksIGhpcyBwYXJlbnRzIHN0cnVnZ2xlIHdpdGggaXQsIGhpcyBncmFuZHBhcmVudHMgc3RydWdnbGUgd2l0aCBpdCwgaGlzIHVuY2xlIHN0cnVnZ2xlcyB3aXRoIGl0LCBhbmQgaGUgc3RydWdnbGVzIHdpdGggaXQgYSBsaXR0bGUgYml0LCB0b28uIAoiSWYgeW91IGhhdmUgdGhhdCBmZWVsaW5nIG9mIGRpc2FwcG9pbnRtZW50LCByZXNlbnRmdWxuZXNzIGFuZCBkaXNndXN0IHRoZW4geW91IGhhdmUgYW4gaXNzdWUuIiBIaW5kbWFyc2ggaXMgbm90IHRyeWluZyB0byBzdG9wIHBlb3BsZSBnYW1ibGluZyAgIGhlIGp1c3Qgd2FudHMgdGhlbSB0byBsZWFybiB0byBkbyBpdCByZXNwb25zaWJseS4gIkl0J3MgYWJvdXQgZWR1Y2F0aW9uLCIgaGUgc2FpZC4gCkkgYmVlbiBlbmpveWluZyBDcmFja2Rvd24gYXQgdGhlIGxvdyBsb3cgcHJpY2Ugb2YgSW5jbHVkZWQgbXkgJDIgR2FtZXBhc3MgVHJpYWwsIGFuZCBob25lc3RseSB0aGF0IHdoYXQgaXQgd29ydGguCkVzIGthbSBkaWUgV2VuZGUgICB1bmQgZWluIHByb21pbmVudGVyIEludmVzdG9yIGF1cyBkZW0gV2VzdGVuOiBXYWx0ZXIgQnJ1bmUuIApDb25jZXJucyBoYWQgYmVlbiByYWlzZWQgYWJvdXQgaXRzIGV4cGVuc2VzLCBsZXZlbCBvZiBkb25hdGlvbnMgdG8gYmVuZWZpY2lhcmllcywgYW5kIHRoZSBhbW91bnQgb2YgbW9uZXkgaXQgd2FzIGhvbGRpbmcgaW4gcmVzZXJ2ZSwgYWNjb3JkaW5nIHRvIGEgQ0FWIHN0YXRlbWVudC4gUmVjb2duaXNpbmcgdGhlIGZvdW5kYXRpb24gd2FzIGluIHRyb3VibGUsIFdhcm5lIGhpcmVkIEVtbWEgQ29sZW1hbiwgYSAiY2hhbmdlIG1hbmFnZW1lbnQgYW5kIHN0cmF0ZWd5IHNwZWNpYWxpc3QiLCBhcyB0aGUgbmV3IGNoaWVmIGV4ZWN1dGl2ZSBvZmZpY2VyIGluIFNlcHRlbWJlci4gCkkgc2FpZCBtaWdodCAuIEFzIEkgbXkgc2VsZiBmcm9tIGFsbCBteSBzY2llbnRpZmljIHVuZGVyc3RhbmRpbmcgICBzdXNwZWN0IGZvciBpdCB0byBiZSBzYWZlIChidXQgYXQgc3VjaCBwcm94aW1pdHkgYW5kIGNvbnN0YW50IGV4cG9zdXJlKSBjYW4gbm90IGJlIGNlcnRhaW4gICBhbmQgSSB3b3VsZCBub3Qgd2FudCB0byBiZSBhIGd1aW5lYSBwaWcuIApDb3Vyc2VyYSBjb3Vyc2UgaXMgd2hlcmUgSSBsZWFybmVkIGFib3V0IHRoaXMsIGFuZCBtYW55IG90aGVyIGhlbHBmdWwsIGluc3BpcmluZyBpbnNpZ2h0cy4gSXQgd29ydGggY2hlY2tpbmcgb3V0LCBhbmQgaXMgZnJlZSwgSSBiZWxpZXZlLiBUaGUgdGhpbmdzIGluIHRoaXMgYm9vayBjb250aW51ZSB0byBiZSB1c2VmdWwgZXZlbiBpbiB0aGlzIGRheSBhbmQgYWdlLCBidXQgaXQgbGlrZSB0aGUgdG9vbHMgYSB0b29sYm94LiAKU28gc295IGFsb25lIHdvdWxkIG5vdCBzdWZmaWNlLCBhbmQgbW9yZSBzb3VyY2VzIG9mIHBsYW50IHByb3RlaW4gd291bGQgbmVlZCB0byBiZSBjb25zdW1lZCB0byBtYWtlIHVwIGZvciB0aGUgbGFjayBvZiBhbWlubyBhY2lkcyBvbmUgZmluZHMgaW4gcHJvdGVpbiByaWNoIG1lYXQuIApJdCBzYXlzIHdoZW4gaGUgd2FzIHdpdGggdGhlIFRpQ2F0cywgaGUgbWlzc2VkIGEgbWVldGluZy4gCkkganVzdCB0aWVkIGEgYm93bGluZSBvbiBvbmUgZW5kIGFuZCBmZWQgdGhlIG90aGVyIGVuZCB0aHJvdWdoIHRoZSBMaW5lIExvayBhZGp1c3Rvci4gSSBhbSBhY3R1YWxseSBnb2luZyB0byB0cnkgdGhlc2UgcmVndWxhciBMaW5lIExvY3MgYXMgdGhleSBzZWVtIGxpa2UgdGhleSB3b3VsZCBiZSBlYXNpZXIgYW5kIHJlcXVpcmUgYSBiaXQgbGVzcyBsaW5lIG5leHQgd2Vlay4gSSB3aWxsIHJlcG9ydCBiYWNrIHdoaWNoIG9uZXMgSSBsaWtlIGJldHRlciBvbiB0aGUgR2F0ZXdvb2QuIApBZHJpYW4gaGFzIGEgZmxhc2hiYWNrIGFuZCByZW1lbWJlcnMgdGhlIG1hbGUgY29wIHdhcyBoaWRpbmcgYmVoaW5kIGEgdHJ1Y2sgaW4gdGhlIHBhcmtpbmcgbG90LCBub3QgcmVhbGx5IGFjdGluZyBhbGwgcHJvcGVybHkgY29wbGlrZS4gClRISVMgRVhBQ1RMWS4gQW5kIGl0IHNvIGhhcmQgaW4gdGhhdCBzaXR1YXRpb24gdG8gYmUgbGlrZSAiSSBkb24gd2FudCB0byBoZWFyIHRoaXMiIHdpdGhvdXQgaXQgY29taW5nIGFjcm9zcyBhcyAiSSBkb24gY2FyZSBhYm91dCB5b3VyIG1lbnRhbCBoZWFsdGgiIChldmVuIHRob3VnaC4gCkkgY2FuIGp1c3QgbGF5IHRoZXJlIGFuZCByZWxheC4iIE5vdCBzby4gClNvIEkndmUgYmVlbiBpbnRyb2R1Y2VkIHRvIGludGVybmF0aW9uYWwgZG9yaXRvcyBhbmQgcmFuIGFjcm9zcyB0aGlzIG9uZQpOb3RoaW5nIHJlYWxseSBtb3JlIHRvIHNheSBvbiB0aGlzLi4gClNvaG4sIDE5MjYuIApHb29kIGx1Y2sgd2l0aCB1ciBjb3VzaW4sIGlmIHlvdSBjaG9vc2UgdG8gcmVtYWluIGNsb3NlIHdpdGggaGltLCBJIHdvdWxkIGRlZmluaXRlbHkgaGF2ZSBhIHNpdCBkb3duIGNvbnZlcnNhdGlvbiB3aXRoIGhpbSEhLiAKTGFzdCBKdW5lLCB0aGUgcHJvdmluY2lhbCBnb3Zlcm5tZW50IGFubm91bmNlZCB0aGF0IGJlY2F1c2Ugb2YgZWFydGhxdWFrZSBjb25jZXJucywgaXQgd2lsbCByZXBsYWNlIHRoZSBleGlzdGluZyBzY2hvb2wgd2l0aCBhIG5ldyBvbmUgYXQgYSBjb3N0IG9mICQ3OS4zIG1pbGxpb24gYnkgMjAyMi4uIApXaGVuIGl0IGZpcnN0IGNhbWUgb3V0IEkgd2FzIHBsYXlpbmcgb24gYW4gb2xkIHdpbmRvd3MgWFAgbWFjaGluZSB3aXRoIDEyOG1iIG9mIFJBTS4gClRoZSBzb3VyY2luZyBwcm9ncmFtIGlzIHRoZSBsYXRlc3QgYXR0ZW1wdCBieSBUaWZmYW55IHRvIHRhcCBpbnRvIHRoZSBtdWNoIHNvdWdodCBhZnRlciBtaWxsZW5uaWFsIG1hcmtldCBhZnRlciB5ZWFycyBvZiBzYWdnaW5nIHNhbGVzLiBSZXRhaWwgZXhwZXJ0cyBoYXZlIHNhaWQgdGhhdCB5b3VuZ2VyLCBldGhpY2FsbHkgbWluZGVkIGNvbnN1bWVycyBhcmUgbGVzcyBkcmF3biB0byBsZWdhY3kgYnJhbmRzIGZvciBqZXdlbHJ5IGluIHBhcnRpY3VsYXIsIGJlY2F1c2Ugc3VjaCBicmFuZHMgaGF2ZSBub3QgdHJhZGl0aW9uYWxseSBiZWVuIGFzIHRyYW5zcGFyZW50IGFzIHRoZXkgY291bGQgYmUgYWJvdXQgdGhlIHNvdXJjaW5nIG9mIHRoZSBkaWFtb25kcy4gClVuZSBmb2lzIGxhIGdyb3NzZXNzZSBlbiByb3V0ZSwgaWwgZmF1dCBnYXJkZXIgIGwnZXNwcml0IHF1J2VsbGUgcHJzZW50ZSBjZXJ0YWlucyByaXNxdWVzIGNvbW1lIGQnYXV0cmVzIGdyb3NzZXNzZXMsIG9udCBkaXQgbGVzIHNwY2lhbGlzdGVzLiAKRXllIGNvbG9yIGlzIGEgcmVhbCBiaW9sb2dpY2FsIHRoaW5nIHRvbywgYW5kIHlvdSBjb3VsZCBncm91cCBwZW9wbGUgYnkgZXllIGNvbG9yLiBCdXQgdGhlIGdyb3VwaW5nIHlvdSB3b3VsZCBwcm9kdWNlIHRoYXQgd2F5IGlzIGV2ZXJ5IGJpdCBhcyBtZWFuaW5nbGVzcyBhcyAicmFjZS4iCldpdGggb25saW5lIHBva2VyIHJvb21zIHlvdSBjYW4gcXVhbGlmeSByaXNrIGZyZWUgdGhyb3VnaCBmcmVlIHJvbGwgcXVhbGlmaWVycy4uIApHcGF0IEJvb2tzIEZyZWUgRG93bmxvYWQgUGRmCklmIHlvdSBhcmUgcGxhY2VkIGluIGEgIkxhdGUgUG9zaXRpb24iIHlvdSBoYXZlIGEgcmVhbCBnb29kIGNoYW5jZSBvZiB3aW5uaW5nLiBBIENhcmQgUGxheWVycyBQbGFjZSBhbmQgUG9zaXRpb24gaXMgYSBmb3JtaWRhYmxlIGFkdmFudGFnZSBpbiB0aGlzIGdhbWUsIGJlY2F1c2UgaWYgeW91IGhhdmUgb25lIHlvdSdsbCBiZSBhYmxlIHRvIGFudGljaXBhdGUgdGhpZXIgZnV0dXJlIG1vdmVzLiBNYWtlIHN1cmUgeW91IHRha2UgYWR2YW50YWdlIG9mIGEgIkxhdGUgUG9zaXRpb24iIGlmIHlvdSBhcmUgcHJlc2VudGVkIHdpdGggdGhlIG9wcG9ydHVuaXR5Li4gCjEpIFZpY3RpbXMgc2hvdWxkIG5vdCBiZSBzaGFtZWQuIFRoZXkgc2hvdWxkIHNwZWFrIHVwIGFuZCB0aGVpciBhY2N1c2F0aW9ucyBzaG91bGQgYmUgdGFrZW4gc2VyaW91c2x5LgpCKSBJIGNhbiBwcm92aWRlIG15IG1hbnVmYWN0dXJlcmluZyBiZWFuIGNvdW50ZXIgb3BpbmlvbiBhcyB0byB3aHkuIFRoZSBtb3JlIG9wdGlvbmFsIGVxdWlwbWVudCBhIG1hbnVmYWN0dXJlciBvZmZlcnMsIHRoZSBsZXNzIGVmZmljaWVudCB0aGV5IGFyZSBvbiB0aGUgbWFudWZhY3R1cmluZyBsaW5lLCB3aGljaCB3b3VsZCBhZGQgY29zdCAobW9yZSBsYWJvciBob3VycyByZXF1aXJlZCBwZXIgdW5pdHMgYnVpbHQpLiAKTWFueSBwbGF5ZXJzIHNheSBpdCdzIHRvbyByZWR1Y2UgdmFyaWFuY2UsIHdoaWNoIGlzIG1hdGhlbWF0aWNhbGx5IGNvcnJlY3QgaW4gYW4gYWxsIGluIHNpdHVhdGlvbi4uIApUaGUgYW5zd2VyIHRvIEthZ2FuIHByb2JsZW1zIGFuZCB0aGUgbWlsaXRhcnkgIkRvbiBBc2ssIERvbiBUZWxsIiBmaWFzY28gd291bGQgYmUgYSBuZXcgcG9saWN5IG9mICJObyBIb21vLiIgaG9tbyBpcyB3aGF0IHlvdSBzYXkgYWZ0ZXIgeW91IGRvIHNvbWV0aGluZyByZWFsbHkgZ2F5IHRvIHN0b3AgYW55b25lIGZyb20gdGhpbmtpbmcgdGhhdCB5b3UgYXJlIGluIGZhY3QgZ2F5LiAKUHJlIEJsYWNrIEZyaWRheSBJIHdhcyBlc3NlbnRpYWxseSBhIHJha2ViYWNrIHByby4gTWFkZSB0b25zIG9mIG1vbmV5IGdyaW5kaW5nIHJha2ViYWNrIG9uIFJ1c2ggdGFibGVzIGFuZCAxNiB0YWJsaW5nIFN1cGVyIFR1cmJvcy4gCkxldCBzYXkgeW91IHNldCBhIGdvYWwgb2YgbGF1bmNoaW5nIGEgbW9iaWxlIHZlcnNpb24gb2YgeW91ciB3ZWIgYXBwIGluIG9uZSB5ZWFyIGFuZCB5b3UgbmVlZCB0byBsZWFybiBob3cgdG8gYnVpbGQgYW4gaU9TIGFwcC4gSGFuZyBhIGJpZyBjYWxlbmRhciBvbiB5b3VyIHdhbGwgYW5kIGdldCBhIGJpZyByZWQgbWFnaWMgbWFya2VyLiBTcGVuZCBhIGNlcnRhaW4gYW1vdW50IG9mIHRpbWUgZWFjaCBkYXkgcmVhZGluZyBhbmQgbGVhcm5pbmcgYWJvdXQgT2JqZWN0aXZlIEMsIHRoZW4gcHV0IGEgYmlnIHJlZCBYIG92ZXIgdGhhdCBkYXkuIEFmdGVyIGEgZmV3IGRheXMsIHlvdSBoYXZlIGEgY2hhaW4sIGFuZCBldmVyeSBkYXkgaXQgd2lsbCBncm93IGxvbmdlci4gWW91IGxpa2Ugc2VlaW5nIHRoZSBjaGFpbi4gWW91ciBvbmx5IGpvYiBuZXh0IGlzIHRvIG5vdCBicmVhayB0aGUgY2hhaW4uCkkgY291bGQgbm90IGRvIHRoYXQuIApEaWUgZ3J0ZW4gR2VnbmVyIGVpbmVyIENhcmJvbnRheCBpbiBsZXR6dGVyIFplaXQgc2luZCBkaWUgTGlua2VuIHVtIFNhbmRlcnMgdW5kIEFPQy4gCkRVTkVESU4sIEZsYS4gICBBYXJvbiBTYW5jaGV6IHBpdGNoZWQgdHdvIG5vIGhpdCBpbm5pbmdzIGFzIGEgVG9yb250byBCbHVlIEpheXMgc3BsaXQgc3F1YWQgYmF0dGxlZCB0byBhIDEgMSB0aWUgd2l0aCBhIFBpdHRzYnVyZ2ggUGlyYXRlcyBzcGxpdCBzcXVhZCBpbiBwcmUgc2Vhc29uIGJhc2ViYWxsIGFjdGlvbiBGcmlkYXkuClRoZXkgZXZlbiBnbyBhcyBmYXIgdG8gY29tcGFyZSB1cyB0byBlYWNoIG90aGVyLiAKSGUgd2FzIHRyYW5zcG9ydGVkIHRvIExha2VsYW5kIEhvc3BpdGFsIHRvIGJlIGV2YWx1YXRlZCBhbmQgbGF0ZXIgbG9kZ2VkIGF0IHRoZSBCZXJyaWVuIENvdW50eSBKYWlsIG9uIGNoYXJnZXMgb2YgZmxlZWluZyBhbmQgZWx1ZGluZywgZHJpdmluZyB3aGlsZSBsaWNlbnNlIHN1c3BlbmRlZCBhbmQgcmVzaXN0aW5nIGFuZCBvYnN0cnVjdGluZyBwb2xpY2UsIHBvbGljZSBzYWlkLgoiU3RvcCEiIHNoZSB5ZWxsZWQsIGFuZCBwcmVzc2VkIHRoZSBlbWVyZ2VuY3kgYnJha2UgYmVoaW5kIGhlciB3aGVlbC4gVGhlIHJvdmVyIHNraWRkZWQgdG8gYSBoYWx0LCBwb3VuZGluZyB0aGVtIHdpdGggc3RvbmVzIGFuZCBjb3ZlcmluZyB0aGVtIGluIGEgcmVkIG1pc3Qgb2YgZGlydC4gClJvbGxpbmdSb2xsaW5nIGlzIGxpa2UgdGFwcGluZyBpbiB0aGF0IGl0IGFwcGxpZXMgZG93bndhcmQgcHJlc3N1cmUuIEhvd2V2ZXIsIHRoYXQgaXMgd2hlcmUgdGhlIHNpbWlsYXJpdHkgZW5kcy4gCkhhdmUgYSBzaXQgZm9yIGEgbWludXRlLiAKT3IsIGlmIHlvdSBkb24ndCBoYXZlIGFueSBwYWlycywgdGhyZWUgb2YgYSBraW5kcywgb3IgaGlnaCBmYWNlIGNhcmRzLCBqdXN0IGRpc2NhcmQgeW91ciBlbnRpcmUgaGFuZCBzbyB5b3UgbWlnaHQgZ2V0IGEgYmV0dGVyIGhhbmQgb24gdGhlIHNlY29uZCBkZWFsLiAKSXQgbm90IHN1cnByaXNpbmcsIGJ1dCBpdCBpcyBkaXNhcHBvaW50aW5nIHRvIGFsd2F5cyBrbm93IHlvdSBnb2luZyB0byBiZSB0aGUgYnV0dCBvZiB0aGUgam9rZS4gCjMuIFRob3NlIHRoYXQgcnVuIDUgc2Vjb25kcyBsb25nIGFyZSBjb3ZlcmVkIGluIHRoaXMgYW5udWFsIHNob3djYXNlIGZyb20gVGl0bW91c2UsIGFuIGF3YXJkIHdpbm5pbmcgYXJ0aXN0IHJ1biBhbmltYXRpb24gaG91c2Ugd2l0aCBsb2NhdGlvbnMgaW4gVmFuY291dmVyLCBMb3MgQW5nZWxlcyBhbmQgTmV3IFlvcmsuIENvbWUgc2VlIHdoYXQgdGhlIGFydGlzdHMgZnJvbSB0aGUgc3R1ZGlvIHRoYXQgZ2F2ZSB1cyBNZXRhbG9jYWx5cHNlLCBCaWcgTW91dGggYW5kIE5lcmRsYW5kIGNhbiBkbyB3aGVuIHRoZXkgbWFrZSB0aGVpciBvd24gNSBzZWNvbmQgY2FydG9vbi4gCkkgMyBvZiA0IHdpdGggMjRiYiwgaXRzIHRlcnJpYmx5IGxhdGUgaW4gdGhlIG5pZ2h0IGFuZCB3ZSBoYWQgYmVlbiBwbGF5aW5nIGZvciAxMytocnMgYXQgdGhpcyBwb2ludC4gCkthbnRhcmtyaXMgIDUgcG9pbnRzICBzdWJtaXR0ZWQgMTYgZGF5cyBhZ28KMjMgRmViIDIwMTUgICAyIG1pbkhvcGVmdWxseSB0aGVyZSBjYW4gYmUgYW4gaWNlIHBhY2sgaW4gdGhlIE1hbmFnZUVuZ2luZSBBRE1hbmFnZXIgUGx1cyAoNjQgIEJpdCkgRG93bmxvYWQgLiAKRGllIE9tZXIgZGFua3QgYWxsZW0gdW5kIHN0enQgc2ljaCB2ZXJsZWdlbiBoaW4uIApOb3cgaG93IGFib3V0IHRoZSBmYWN0IHRoYXQgbWFueSBvZiB0aGUgc3RyaWtpbmcgbnVyc2VzIGFyZSBhbHNvIGVtcGxveWVkIGFzIGFnZW5jeSBudXJzZXMgb24gdGhlaXIgZGF5cyBvZmYgKGFzIHRoZXkgaGF2ZSBzbyBtYW55IG9mIHRoZW0gZHVlIHRvIHRoZWlyIDM4aHIgd29yayB3ZWVrKS4KQWZ0ZXIgYnJlYWtpbmcgb3V0IHdpbmRvd3MsIFBhZGRvY2sgZmlyZWQgMSwwNTcgc2hvdHMgaW4gMTEgbWludXRlcywgcG9saWNlIGhhdmUgc2FpZC4KVW5kZXJzdGFuZCB0aGF0IHBlb3BsZSBhcmUgY29uY2VybmVkIGFib3V0IHByb3RlY3RpbmcgdGhlaXIgcHJvZHVjdHMsIGJ1dCByZWFsbHksIHdoZW4gYSBjdXN0b21lciBvciBhIGhvbWVvd25lciBpcyBkZWNpZGluZyBvbiBhIG5hdHVyYWwgbWF0ZXJpYWwgYW5kIHRoZXkgY2hvb3NlIHdvb2QsIHRoZXkgc2hvdWxkIHJlYWxseSBiZSBhYmxlIHRvIGVtYnJhY2Ugd29vZC4KQW5kIG1vcmUgaW1wb3J0YW50bHksIHRoZXJlIHdhcyBhIHNoaXQgdG9uIG9mIEJsb2F0IGluc3RhbGxlZCB0aGF0IEkgY291bGQgbm90IGdldCByaWQgb2YuIEkgY291bGQgbm90IGdvIGJhY2sgdG8gdGhlIGRlZmF1bHQgQW5kcm9pZCBsYXVuY2hlciAodGhlIFNhbXN1bmcgbGF1bmNoZXIvdG9wIGJhciBpcyBldmVuIHdvcnN0IHRoYW4gTWlVSSBJTU8pLi4gCkkgd291bGRuIHRyeSBtYWtpbmcgaGltIHN0YXkgdXAsIHlvdSBqdXN0IGdvbm5hIGhhdmUgYSBiYW5hbmFzIGFzcyBvdmVydGlyZWQga2lkIHdobyBpcyBhIHRvdGFsIG1vbnN0ZXIuIEkgbWVhbiwgaXQgY291bGQgd29yaywgSSBzdXBwb3NlLiBCdXQgaXQgc2VlbXMgbGlrZSBpdCBqdXN0IGEgc2hpdCB0b24gb2YgaGVhcnRhY2hlIGFuZCBoZSBiZSBtb3JlIGxpa2VseSB0byBjb2xsYXBzZSBpbiBhbiBleGhhdXN0ZWQgaGVhcCBhbmQgYmUgb3JuZXJ5IGFuZCBhd2Z1bCBmb3IgdHdvIGRheXMgYmVmb3JlIGhlIGNvdWxkIHNldHRsZSBpbnRvIGEgcm91dGluZS4uIApPYnZpb3VzbHksIHRhbGsgdG8geW91ciBkb2N0b3IgYW5kIGRvbiBkbyBhbnl0aGluZyB0aGF0IGh1cnRzLCBidXQgZXhlcmNpc2luZyBzaG91bGRuIHB1dCB5b3UgaW50byBhIGZsYWlyLiBQdXJlbHkgYW5lY2RvdGFsLCBidXQgd2hlbiBJIGFtIGh1cnRpbmcgZXhlcmNpc2luZyBtYWtlcyBtZSBmZWVsIGJldHRlciA5MCUgb2YgdGhlIHRpbWUuIApMb3JzIGRlIGNldHRlIGZvcm1hdGlvbiBsZXMgcGFydGljaXBhbnRzIGFwcHJlbmRyb250IGxhIHJvdXRpbmUgY29tcGx0ZSBkZXMgbW91dmVtZW50cyBwcmF0aXF1cyBkaiBwYXIgZGVzIG1pbGxpZXJzIGQnZW5mYW50cyBkYW5zIHBsdXNpZXVycyBwYXlzLCBkZSBsJ0FuZ2xldGVycmUgIGwnQWZyaXF1ZSBkdSBTdWQsIGVuIHBhc3NhbnQgcGFyIGxlIEphcG9uLCBsYSBTdWRlIGV0IGxlIENhbmFkYS4gQ2UgcHJvZ3JhbW1lIGF2YW50IGdhcmRpc3RlIGNvbnRyaWJ1ZSAgbGEgYmFpc3NlIGRlIHZpb2xlbmNlIGRhbnMgbGVzIGNvbGVzIGV0IGF1IG1pZXV4IHRyZSBkZXMgZW5mYW50cy4gTGUgY2VydGlmaWNhdCByZXUgIGxhIGZpbiBkZSBsYSBmb3JtYXRpb24gcGVybWV0ICBsJ2luc3RydWN0ZXVyIGQnaW1wbGFudGVyIGxhIHJvdXRpbmUgZGFucyBsZXMgY2xhc3NlcyBkJ2VuZmFudHMgZGUgNCAgMTIgYW5zIChvdSBlbiBleHRyYSBzY29sYWlyZSksIGV0IGF1c3NpIGRlIHNlbnNpYmlsaXNlciBsZXMgZW5zZWlnbmFudHMgZXQgbGVzIHBhcmVudHMgIGwnaW1wb3J0YW5jZSBkdSBtb3V2ZW1lbnQgZXQgZHUgdG91Y2hlciBwb3VyIGwnYXBwcmVudGlzc2FnZSBkZSB0b3V0ZXMgbGVzIG1hdGlyZXMgc2NvbGFpcmVzLiAKQmVjYXVzZSBsYW5vbGluIGNvbnNpc3RzIG9mIGFib3V0IDUlIHRvIDI1JSBvZiB0aGUgdG90YWwgd2VpZ2h0IG9mIHdvb2wsIGl0J3MgbmF0dXJhbCBhbmQgcGVyZmVjdGx5IHNhZmUgdG8gdXNlLiAKSSBkb24gbWluZCBwbGF5aW5nIHNvbWV0aGluZyB0aGF0IGlzbiBicmFuZCBuZXcsIGJ1dCB0YWtpbmcgYSBsb29rIGF0IEJGViB0aGUgcHJvZ3Jlc3Npb24gc2VlbXMgYSBsaXR0bGUgYmFyZSBib25lcy4gRGlkIEJGMSBoYXZlIGEgZ29vZCBwcm9ncmVzc2lvbiBzeXN0ZW0/ClBhcGFEdWNrRCB1CllvdSBoYXZlIHRvIHNwZW5kIHRoZSByZXN0IG9mIHlvdXIgbGlmZSB0cnlpbmcgdG8ganVzdGlmeSB0aGlzIG9idmlvdXMgZmFyY2UgdG8geW91cnNlbGYuIApQb2tlciBTb2Z0d2FyZQpNeSBhZHZpY2UsIGlmIHRoZXkgdGhpbmsgeW91IGNhcGFibGUgb2YgbHlpbmcgYWJvdXQgdGhpcyB0aGVuIHRoZXkgdGhpbmsgeW91IGFyZW4gd29ydGggdGhlIHRyb3VibGUuIApUaGUgdGl0bGUgaXMgbWlzbGVhZGluZy4gVGhlcmUgd2VyZSAxODUwIHBhdGllbnRzIHdpdGggVEIgaW4gdG90YWw7IG9ubHkgNTUgaGFkIE1EUiBUQiwgYW5kIHRoZSBoZWFkbGluZSBhbmFseXNpcyB3YXMgYWN0dWFsbHkgcGVyZm9ybWVkIG9uIHRoZSA1NSBwZW9wbGUsIHJhdGhlciB0aGFuIHRoZSAxODUwIHBlb3BsZS4gU2Vjb25kbHksIHRoZSBmaW5kaW5nIHdhcyBvbmUgb2YgbXVsdGlwbGUgc3ViIGdyb3VwIGFuYWx5c2VzIHRoYXQgd2VyZSBjb25kdWN0ZWQuIFRoaXJkLCBhYm91dCAzMCUgb2YgdGhlIHBhdGllbnRzIHdpdGggTURSIFRCIGRpZG4gYWN0dWFsbHkgaGF2ZSB0aGVpciBhbnRpYmlvdGljIHJlZ2ltZW4gY2hhbmdlZCB0byByZWZsZWN0IHRoZSByZXNpc3RhbmNlIHBhdHRlcm4uIEkgY2FuIHNlZSB3aGVyZSB0aGV5IHJlcG9ydGVkIGRpZmZlcmVuY2VzIGluIHRoaXMgbWVhc3VyZSBiZXR3ZWVuIHRoZSBWaXRhbWluIEQgYW5kIHBsYWNlYm8gZ3JvdXBzLCBidXQgaXQgbWVhbnMgdGhhdCB3ZSBkb24ga25vdyB3aGV0aGVyIHRoaXMgZWZmZWN0IGhlbGQgdHJ1ZSBmb3IgcGVvcGxlIG9uIG9wdGltYWwgdHJlYXRtZW50LCBhbmQgd2UgZG9uIGtub3cgaWYgdGhlIHBsYWNlYm8gZ3JvdXAgaGFkIG1vcmUgcGF0aWVudHMgdGhhdCBkaWRuIGhhdmUgdGhlaXIgYW50aWJpb3RpYyBjaGFuZ2VkLgpIZSBhbHNvIGVuam95ZWQgcGxheWluZyBwb29sLCBwb2tlciwgZGFydHMsIGJhc2ViYWxsLCBodW50aW5nLCBjb25jZXJ0cyBhbmQgbXVzaWMuIExvdSB3YXMgdmVyeSB3ZWxsIGtub3duIGZvciBoaXMgdHJlbWVuZG91cyBzZW5zZSBvZiBodW1vdXIgYW5kIGhpcyBqb2tlcy4gTG91IGxvdmVkIGhpc3RvcnksIGVzcGVjaWFsbHkgd2F0Y2hpbmcgU2Vjb25kIFdvcmxkIFdhciBkb2N1bWVudGFyaWVzIGFuZCBzcGVuZGluZyB0aW1lIHdpdGggaGlzIGZyaWVuZHMgd2FzIG9uZSBvZiBoaXMgZ3JlYXRlc3QgcGxlYXN1cmVzIGluIGxpZmUuIENhcHRhaW4gTG91IHdpbGwgYWxzbyBiZSBncmVhdGx5IG1pc3NlZCBieSBoaXMgZG9nIEFuZ2VsIGFuZCBoaXMgY291bnRsZXNzIGZyaWVuZHMgdGhhdCBhbHdheXMgc3Vycm91bmRlZCBoaW0uIApFdmVuIGlmIFppemVrIGlzIGNvbnNjaW91cyBpbiB0aGUgbW9tZW50IG9mIHRoZXNlIGxpbWl0cyAoaW5jbHVkaW5nIGRlY29ydW0pIHBsYWNlZCBvbiBoaW0sIGl0IGlzIGhhcmQgdG8gZmF1bHQgaGltIGZvciBub3QgYmVpbmcgYWJsZSB0byBicmVhayB0aGVtLiBJZiBoZSBicmVha3MgZGVjb3J1bSBkdXJpbmcgY29udmVyc2F0aW9uIGJ5IGF0dGVtcHRpbmcgZmFjdCBjaGVja2luZyBvciBjYWxsaW5nIFBldGV5IGEgbmVvIGZhc2Npc3QgKGFzIGhlIGhhcyBpbiB0aGUgcGFzdCksIHRoZSBkZWJhdGUgbGlrZWx5IHRvIGRldm9sdmUgZWl0aGVyIGludG8gYSBzaG91dGluZyBtYXRjaCBvciBhYm91dCAib2gsIGhhdmUgeW91IHJlYWQgdGhpcyBzdHVkeT8gIm5vLCBJIGhhdmUgbm90LiAKQXMgYSBjb21tdW5pdHkgd2UgbmVlZCB0byBkZW1hbmQgdXJnZW50IHJlZm9ybXMuIApUIHJheXMgb3IgdGVyYWhlcnR6IGlzIGFuIGV4Y2l0aW5nIG5ldyBhcmVhIG9mIHBob3RvbmljcyByZXNlYXJjaCwgb3BlbmluZyB1cCBhIG5ldyByZWdpb24gb2YgdGhlIGVsZWN0cm9tYWduZXRpYyBzcGVjdHJ1bSwgdXN1YWxseSBiYXNlZCBvbiBhZHZhbmNlZCBsYXNlciB0ZWNobm9sb2d5LiBTcGFubmluZyAwLjEgMTAgVEh6LCB0aGUgcmFkaWF0aW9uIHByb21pc2VzIG1hbnkgZmFzY2luYXRpbmcgYXBwbGljYXRpb25zIGZyb20gc2VjdXJpdHkgc2NyZWVuaW5nIHRvIHJhcGlkIHF1YWxpdHkgY29udHJvbCB0byBzaG9ydCByYW5nZSB1bHRyYSBmYXN0IGNvbW11bmljYXRpb25zLiBUaGUgQWRlbGFpZGUgVCByYXkgZ3JvdXAgcmVwcmVzZW50cyB0aGUgbGFyZ2VzdCB0ZXJhaGVydHogKFQgcmF5KSBmYWNpbGl0eSBuYXRpb25hbGx5LiAKSSB3b25kZXIgaWYgdGhpcyBpcyBhIGdlbmVyYXRpb25hbCBzaGlmdC4gSW4gdGhlIDkwcy8wMHMsIGl0IHNlZW1lZCBsaWtlIGEgcHJldHR5IGJpZyBkZWFsIHRoYXQgd2hpdGUgcGVvcGxlIHNob3VsZG4gZXZlciBzaW5nIGFsb25nIHdpdGggdGhlIG4gd29yZCBpbiBtdXNpYy4gClRoZSBhd2FyZCBpcyBjcmVhdGVkIGFuZCBtYWludGFpbmVkIGJ5IHRoZSBVQ0xBIFZvbHVudGVlciBDZW50ZXIgRmVsbG93cy4gCkFsd2F5cyB0cnkgdG8gbWFrZSB0aGUgZGVjaXNpb24gdGhhdCB3aWxsIGdldCB5b3UgdGhlIG1vc3QgbW9uZXkuLiAKVGhlIGNvbGxlY3Rpb24gdHJhY2tzIHByb2dyZXNzIG9uIHRoZSBjb3JlIGhlYWx0aCBpc3N1ZXMgb2YgbWF0ZXJuYWwgYW5kIGNoaWxkIGhlYWx0aCwgaW5mZWN0aW91cyBkaXNlYXNlcywgYW5kIGFjY2VzcyB0byBoZWFsdGguIFRoZSByZWdpb24gaGFzIHdpdG5lc3NlZCByYXBpZCB1cmJhbmlzYXRpb24gd2l0aCBhIGNvbmN1cnJlbnQgcmlzZSBpbiBub24gY29tbXVuaWNhYmxlIGRpc2Vhc2VzLCBzbW9raW5nLCBtZW50YWwgaWxsbmVzc2VzLCBhbmQgaW5qdXJpZXMuIENvbmZsaWN0cywgbmF0dXJhbCBkaXNhc3RlcnMsIGFuZCBpbmZlY3Rpb3VzIGRpc2Vhc2Ugb3V0YnJlYWtzIHBlcmlvZGljYWxseSBzdGFsbCBwcm9ncmVzcyBvbiBoZWFsdGggaW5kaWNhdG9ycywgbGVhdmluZyB0aGUgcG9wdWxhdGlvbnMgaW4gdGhpcyByZWdpb24gdnVsbmVyYWJsZSB0byB0aGVpciBpbXBhY3QuIApBIGZhaXJseSBlYXN5IGdhbWUsIHBva2VyIGNhbiBrZWVwIHlvdSBvY2N1cGllZCBmb3IgcXVpdGUgYSBsb25nIHRpbWUuIApIYXZlIHBsYXllZCBob21lIGdhbWVzIHdpdGggZnJpZW5kcyBhbmQga2lkcyBhdCBzY2hvb2wsIGJ1dCBjYXNpbm8gcG9rZXIgaXMgYSBkaWZmZXJlbnQgYW5pbWFsIGZvciBzb21lIHJlYXNvbi4gSSB0aGluayBteSBnYW1lIGlzIGZpbmFsbHkgc3RhcnRpbmcgdG8gY29tZSB0b2dldGhlci4gClRodXMgd2UgY2FuIG9ubHkgc2F5IHRoYXQgdGhlIHdob2xlIHBhY2thZ2Ugb2YgcmVsZXZhbnQgdGhlb3JpZXMgaGFzIGJlZW4gY29sbGVjdGl2ZWx5IGZhbHNpZmllZCwgYnV0IGNhbm5vdCBjb25jbHVzaXZlbHkgc2F5IHdoaWNoIGVsZW1lbnQgb2YgdGhlIHBhY2thZ2UgbXVzdCBiZSByZXBsYWNlZC4iIHRoZSBRdWluZSBEdWhlbSB0aGVzaXMuIAoiTHVrZSB3YXMgbm90IG9ubHkgYSBzdGFyLCBoZSB3YXMgYW4gaW5jcmVkaWJseSBicmlnaHQgbGlnaHQgdGhhdCB3YXMgZXh0aW5ndWlzaGVkIGZhciB0b28gc29vbiAuIEFuZCB0aGF0IGlzIHdoeSBJLCBhbmQgc28gbWFueSBvdGhlcnMsIGFyZSBpbiBzbyBtdWNoIHBhaW4gdG9kYXkgLiAKVGhhdCBpcyAxNSB5ZWFycyBvZiBiZWluZyB0aGUgYmVzdCEgTm90IGEgc2xpZ2h0IGZlYXQgaW5kZWVkIVNpbmNlIG91ciBpbmNlcHRpb24gaW4gMjAwMiwgb3VyIGxlZ2FjeSBoYXMgYmVlbiBjYXJ2ZWQgd2l0aCBvbmUgYXdhcmQgd2lubmluZyBzdHJlYWsgYWZ0ZXIgdGhlIG90aGVyLiBUaGlzLCBjb3VwbGVkIHdpdGggb3VyIGV0aG9zIG9mIGNvbnRpbnVpbmcgdG8gc3RyaXZlIGZvciBleGNlbGxlbmNlIGluIHNlcnZpY2UgYW5kIHByb2R1Y3Qgb2ZmZXJpbmcsIGNvbnRpbnVlcyB0byBwYXZlIG91ciB3YXkgdG8gZ3JlYXRuZXNzIGluIHRoZSBpZ2FtaW5nIHdvcmxkLiAKVGhlcmUgYXJlIGxvdHMgb2YgZGlmZmVyZW5jZXMgYmV0d2VlbiB0aGUgdHdvIGVkaXRpb25zLiBKYXZhIGlzIGxlc3MgYnVnZ3ksIGFuZCBtb3N0IHBlb3BsZSBwcmVmZXIgdGhlIHJlZHN0b25lIG9uIEphdmEuIEphdmEgaGFzIHRoZSBzbmFwc2hvdHMgb2YgdGhlIG5leHQgdmVyc2lvbiwgc28geW91IGNhbiBoYXZlIGEgZ2FtZSB3aXRoIHRoZSBuZXcgZm94ZXMsIGZvciBpbnN0YW5jZS4gCk11Y2ggaW4gdGhlIHNhbWUgd2F5IG5vdyB0aGF0IEVwaWMgd29ya2VkIG9uIGhhdmluZyBwbGF0Zm9ybSBleGNsdXNpdmVzLCBGYWNlYm9vayAvIE9jdWx1cyBkaWQgdGhlIHNhbWUuIFN0ZWFtIGRpZCBub3QgYmFuIGRldmVsb3BlcnMgZnJvbSB3b3JraW5nIG9uIGJvdGggcGxhdGZvcm1zLCB3aGljaCBpcyByaWdodCBpbiBsaW5lIHdpdGggdGhlaXIgdmFsdWVzIGFuZCB3aGF0IGlzIGJlc3QgZm9yIGNvbnN1bWVycy4KVGhlIHN0YWZmIG1lbWJlciBnYXZlIGNoYXNlLCBhcHByZWhlbmRlZCBEYWxlIGF0IHRoZSBEYXZpZCBTdHJlZXQgZW50cmFuY2UgYW5kIGhlIHNhaWQ6ICJJIGRpZG4ndCB0YWtlIHRoZSBwdXJzZS4iIFdoZW4gdGhlIHN0YWZmIG1lbWJlciB5ZWxsZWQgZm9yIHNvbWVvbmUgdG8gY2FsbCB0aGUgcG9saWNlLCBEYWxlIGJlY2FtZSBhZ2dyZXNzaXZlLCBicm9rZSBmcmVlIGFuZCB3YXMgbGFzdCBzZWVuIHJ1bm5pbmcgYWNyb3NzIHRoZSBjYXIgcGFyay4gUG9saWNlIGNvbnRhY3RlZCBEYWxlIGJ5IG1vYmlsZSBwaG9uZSBhZnRlciB0aGV5IGhhZCB3YXRjaGVkIGNsb3NlZCBjaXJjdWl0IGZvb3RhZ2UgYW5kIGhlIHNhaWQgaGUgZm91bmQgdGhlIHB1cnNlIG9uIHRoZSBmbG9vci4gClRoZSBjcmF6eSBzdGF0aWMgd29tYW4gd2FzIHN0YW5kaW5nIGZhY2luZyB0aGUgc2VhdHMgd2l0aCBhIG1hbiBiZWhpbmQgaGVyLiBBZnRlciBhIGZldyBzdG9wcyB0aGUgY2FycmlhZ2UgZW1wdGllZCBvdXQgc2xpZ2h0bHkgYW5kIHNoZSB0dXJuZWQgYXJvdW5kIGFuZCBhc2tlZCB0aGUgbWFuIGlmIGhlIGNvdWxkIHN0YW5kIG5leHQgdG8gaGVyIGluc3RlYWQgb2YgYmVoaW5kIGhlci4gSSBrbm93IG90aGVyIHBlb3BsZSBjb3VsZCBoYXZlIHRob3VnaHQgbWF5YmUgaGUgd2FzIGJlaW5nIGEgY3JlZXAgYnV0IEkga25ldy4gCjUuIEFubnVpdGllcyAgIFRoZXNlIGFyZSBlc3NlbnRpYWxseSBsaWZldGltZSBHSUNzIHdpdGggYSBsb2NrZWQgaW4gcmF0ZSB0aGF0IGJlY29tZXMgYSBtb250aGx5IHNvdXJjZSBvZiBjYXNoIGZsb3cuIApUaGlzIGlzIHF1aXRlIGFuIG9sZCB0aGVvcnksIGFuZCBoYXMgYmVlbiBzaG93biB0byBiZSBpbmNvcnJlY3QuIApab29taWVzIGFuZCBoZSBwbGF5cyBhbmQgaGFzIG5vIGlzc3VlcyBnZXR0aW5nIHRvIHdoZXJlIGhlIG5lZWRzIHRvIGJlLiAKSSBqdXN0IHdhbnQgdG8gZG8gdGhlIHJpZ2h0IHRoaW5nLCBhbmQgaGVscCBpZiBpdCB3aXRoaW4gbXkgbWVhbnMgdG8gZG8gc28uTXIgR29uYmFyIGlzIG5vdCB0aGUgb25seSBvbmUgYmVpbmcgb2ZmZXJlZCBzb21lIHJlc3BpdGUgZnJvbSB0aGUgcmVjZXNzaW9uLCB0aGFua3MgdG8gdGhlIGFydGlzdCB3aXRoIGEgc29mdCBzcG90IGZvciB0aGUgZWxkZXJseSwgdGhlIHBvb3IgYW5kIHRoZSBtYXJnaW5hbGlzZWQuTXIgSGFuIHJlY2tvbnMgdGhhdCBsaWZlLCBhbHJlYWR5IHRvdWdoIGZvciB0aGVzZSBmb2xrcyBpbiBvcmRpbmFyeSB0aW1lcywgd2lsbCBiZSBlc3BlY2lhbGx5IHJvdWdoIGR1cmluZyBhIGRvd250dXJuLlRoYXQgZXhwbGFpbnMgd2h5LCBpbiB0aGUgbGFzdCAxMiBtb250aHMsIGhlIGhhcyB3b3JrZWQgd2l0aCB2YXJpb3VzIGFnZW5jaWVzIGluY2x1ZGluZyBjb21tdW5pdHkgZGV2ZWxvcG1lbnQgY291bmNpbHMsIHRvIGVtcGxveSBtb3JlIHRoYW4gYSBkb3plbiBsb3cgaW5jb21lIGhvdXNld2l2ZXMsIGZvcm1lciBjb252aWN0cywgYXMgd2VsbCBhcyBzZW5pb3IgY2l0aXplbnMgYW5kIHJldGlyZWVzIHdobyBjb3VsZCBub3QgZmluZCBqb2JzLiAKRkxBU0ggRUZGRUNUIG9mIGEgaHlkcm9nZW4gYm9tYiAxLDAwMCB0aW1lcyBtb3JlIHBvd2VyZnVsIHRoYW4gcHJlc2VudCBib21icyB3b3VsZCBiZSByZWxhdGl2ZWx5IGdyZWF0ZXIgdGhhbiBpdHMgYmxhc3QgZWZmZWN0LiBUaGUgSGlyb3NoaW1hIGJvbWIgY2F1c2VkIGZhdGFsIGJ1cm5zIGF0IGRpc3RhbmNlcyB1cCB0byA0LDAwMCB0byA1LDAwMCBmZWV0IChzbWFsbCBjaXJjbGUpLiAKSWYgdGhlIFJSU1BzIGdyb3cgYXQgMyBwZXIgY2VudCBhIHllYXIgYWZ0ZXIgaW5mbGF0aW9uLCB0aGV5IHdvdWxkIHJpc2UgdG8gJDQyNSw2MDAgaW4gMjkgeWVhcnMgd2hlbiBQaGlsIGlzIDYyLiBUaGUgVEZTQXMgd291bGQgcmlzZSB0byAkMjgwLDkwMC4gVGhlICQxNSwwMDAgaW52ZXN0bWVudCBhY2NvdW50IHdpdGggbm8gZnVydGhlciBjb250cmlidXRpb25zIGJ1dCB0aGUgc2FtZSBncm93dGggYXNzdW1wdGlvbnMgd291bGQgYmVjb21lICQzNSwzNDguIApJZiBtYXJyaWFnZSBpcyBvbiB5b3VyIGJ1Y2tldCBsaXN0LCBDaHJpc3RpYW5DYWZlLiAKTGV0IHN0YW5kIDEwIG1pbnV0ZXMgdG8gY29vbC4gCkFsdGhvdWdoIGl0IHJlYWxseSB3YXNuJ3QgaGFyZCBvciBjb21wbGljYXRlZCBwZXIgc2UsIEkgZGlkIGxlYXJuIGEgY291cGxlIHRoaW5nczogZmlyc3QsIHJlZnJpZ2VyYXRvciBtYWduZXRzIChldmVuIHRoZSBzdHJvbmcgb25lcykgZG9uJ3Qgd29yay4gSSBmb3Jnb3QgdG8gb3JkZXIgYSBtYWduZXRpYyB3YW5kIHRoYXQgYWRkcyB0aGUgc3RyaXBlIGluIHRoZSBwb2xpc2gsIHNvIEkgcmFuIHRvIHRoZSBjcmFmdCBzdG9yZSBhbmQgcGlja2VkIHVwIHRoZXNlIG5lb2R5bWl1bSBtYWduZXRpY3MuIApTdGV2ZW5BcnZpdiAgMSBwb2ludCAgc3VibWl0dGVkIDMgZGF5cyBhZ28KUGxlYXNlLiAKVGhlIG9uZSBydWVsIHdpdGggc2hpcnRzIGFuZCB0aWVzIGlzIHRoYXQgdGllcyBuZWVkIHRvIGhhdmUgb25lIGNvbG9yIHRoYXQgaW4gdGhlIHNoaXJ0LCBzbyBhIG1hcmNoaW5nIHNoYWRlIG9mIGJsdWUgb3IgYSB3aGl0ZSBzcG90LiAKVGhlIG15dGggbWFraW5nIGFiaWxpdGllcyBvZiB0aGUgV29ybGQgU2VyaWVzIG9mIFBva2VyIGhhdmUgb25seSBncm93biBpbiBzdGF0dXJlIGluIHJlY2VudCB0aW1lIHdpdGggdGhlIGxhc3QgZmV3IGNoYW1waW9ucyBiZWluZyBwcmV2aW91c2x5IHVua25vd24gb25saW5lIHBsYXllcnMgd2hvIG92ZXJuaWdodCBiZWNhbWUgY2VsZWJyaXRpZXMuIEF1c3RyYWxpYSBKb3NlcGggSGFjaGVtIHdhcyBhIG5vYm9keSBzaXggbW9udGhzIGFnbyBidXQgbm93IGhlIGlzIGZhbW91cyBhcyB0aGUgJDcuNSBtaWxsaW9uIHdpbm5lciBvZiB0aGUgMjAwNSBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgbWFpbiBldmVudC4gCklmIHRoZSBjb3JkZWUgaXMgc3RpbGwgYWxpdmUsIHRoZW4geW91ciByZWxhdGlvbnNoaXAgY2FuIGltcHJvdmUgYXMgYSByZXN1bHQuIApJIGFncmVlLiBCb2JieSBvYnNlc3Npb24gd2FzIGFuIGluZGljYXRpb24gb2YgYSBzZXh1YWxseSBkZXZpYW50IHBzeWNob3BhdGggaW4gdGhlIG1ha2luZy4gSXQgbm90IG11Y2ggb2YgYSBzdHJldGNoIHRvIHNlZSBob3cgc29tZW9uZSBsaWtlIHRoYXQgbWlnaHQgZmFudGFzaXplIGFib3V0IGl0IGZvciB5ZWFycyBiZWZvcmUgY29tbWl0dGluZyB0aGVpciBmaXJzdCBraWxsLCB3aGljaCB0aGV5IHNheSBmZWVscyBsaWtlIGFuIGVtb3Rpb25hbCByZWxlYXNlIG9yIGEgImhpZ2giIGR1cmluZyB0aGUgY3JpbWUuIApObyBtYXR0ZXIgd2hhdCB5b3UgZG8gaW4geW91ciBsaWZlIHlvdSB3aWxsIHByb2JhYmx5IG9mZmVuZCBhIGxvdCBvZiBwZW9wbGUgaWYgeW91IHdhbnQgdG8gYmUgdHJ1ZSB0byB5b3Vyc2VsZi4gClRoZSBvbmx5IHdheSBvdXQgZm9yIGhpbSBpcyB0byBnYW1ibGUgYW5kIGdhbWJsZSBiaWcsIGFuZCBpdCB0dXJucyBvdXQgZ2FtYmxpbmcgYW5kIHN0cmF0ZWd5IGFyZSB0aGUgb25seSB0aGluZ3MgS2FpamkgYWN0dWFsbHkgaGFzIHRhbGVudCBmb3IsIGFuZCBteSBHb2QgaXMgaGUgdGFsZW50ZWQuIApJdCBpcyB3b3J0aCBiZWFyaW5nIHRoZSBmb2xsb3dpbmcgaW4gbWluZC4gCkhvcGVmdWxseSB0aGV5IGRvIHNvbWV0aGluZyB0byBrZWVwIHBsYXllcnMgbGlrZSB1cyBpbiB0aGUgZ2FtZS4gCkkgdHVybiB0byBzZWUgYSB3b21hbiBsb29raW5nIGF0IG1lLiBIYXZpbmcganVzdCBmaW5pc2hlZCB3b3JrLCBJIHN0aWxsIGhhZCBjdXN0b21lciBzZXJ2aWNlIG1vZGUgb24gYW5kIEkgYXNrLCAiSG93IGNhbiBJIGhlbHAgeW91PyIgaW4gYSBwb2xpdGUgdm9pY2UuClNoZSBoYWQgY2hhbmdlZCBoZXIgZHJlc3MgdG8gYSBicm93biBmaWd1cmVkIG11c2xpbiwgd2hpY2ggc3RyZXRjaGVkIHRpZ2h0IG92ZXIgaGVyIHJhdGhlciB3aWRlIGhpcHMgYXMgVG9tIGhlbHBlZCBoZXIgdG8gdGhlIHBsYXRmb3JtIGluIE5ldyBZb3JrLiBBdCB0aGUgbmV3cyBzdGFuZCBzaGUgYm91Z2h0IGEgY29weSBvZiBUb3duIFRhdHRsZSBhbmQgYSBtb3ZpbmcgcGljdHVyZSBtYWdhemluZSwgYW5kIGluIHRoZSBzdGF0aW9uIGRydWcgc3RvcmUgc29tZSBjb2xkIGNyZWFtIGFuZCBhIHNtYWxsIGZsYXNrIG9mIHBlcmZ1bWUuIFVwIHN0YWlycywgaW4gdGhlIHNvbGVtbiBlY2hvaW5nIGRyaXZlIHNoZSBsZXQgZm91ciB0YXhpY2FicyBkcml2ZSBhd2F5IGJlZm9yZSBzaGUgc2VsZWN0ZWQgYSBuZXcgb25lLCBsYXZlbmRlciBjb2xvcmVkIHdpdGggZ3JheSB1cGhvbHN0ZXJ5LCBhbmQgaW4gdGhpcyB3ZSBzbGlkIG91dCBmcm9tIHRoZSBtYXNzIG9mIHRoZSBzdGF0aW9uIGludG8gdGhlIGdsb3dpbmcgc3Vuc2hpbmUuIApUaGlzIGlzbiBhIHBva2VyIGhhbmQgYW55bW9yZS4gRmFsbG9uIGhhcyBzaG93biBoaXMgaGFuZC4gQXMgbXVjaCBhcyBpdCBzZWVtcyBGbG93ZXJzIGhhcyBiZWVuIG9uIHRoZWlyIHNpZGUgYW5kIGl0IHNlZW1zIHNoZSB3b3VsZCBsb3ZlIHRvIHN0aWNrIGl0IHRvIFplbGxuZXIgYWdhaW4sIGV2ZW4gRmxvd2VycyB3aWxsIGhhdmUgYSBoYXJkIHRpbWUgc2lkaW5nIHdpdGggRmFsbG9uIG9uIHRoaXMgb25lIHdpdGhvdXQgamVvcGFyZGl6aW5nIGhlciBvd24gY2FyZWVyLiAKVGhlcmUgd2FzIG9uZSBwbGF5ZXIgd2hvIHJlYWxseSBzdG9vZCBvdXQgdG8gbWUuIEl0IHdhcyBhIHlvdW5nIGd1eSBhbmQgaGUgaGFyZGx5IHBsYXllZCBhIGhhbmQuIEhlIHNhdCB0aGVyZSBhbmQgYXMgdGhpcyBhcnRpY2xlIHdhcyBjcmVhdGVkIGluIG15IG1pbmQgdGhhdCBuaWdodCwgc28gd2FzIGFuIHVsdGltYXRlIHN0cmF0ZWd5IGFnYWluc3Qgcm9jayBwbGF5ZXJzLiAKIkl0IGlzIHRoZSBtb3N0IGF3ZnVsIG1pc3Rha2UsIHdoaWNoIGhhcHBlbmVkIGJlY2F1c2UgSSBtYWRlIG5vdGVzIGZyb20gdmFyaW91cyBib29rcyBhcyBJIHdlbnQgYWxvbmcgYW5kIHRoZW4gbG9zdCB0aGUgbm90ZWJvb2sgdGVsbGluZyB3aGVyZSB0aGV5IGNhbWUgZnJvbSwiIGhlIGV4cGxhaW5lZCB0byBhIHJlcG9ydGVyIGF0IHRoZSB0aW1lLiAKSWYgdGhlcmUgaXNuIGJhY2tncm91bmQgbm9pc2UsIEkgc2xvd2x5IGJlZ2luIHRvIGZvY3VzIG9uIGhlYXJpbmcgbXkgaGVhcnRiZWF0LCBvciBteSBicmVhdGhpbmcsIG9yIHNvbWUgc3RhdGljIGxhbXAgbm9pc2UgaW4gdGhlIHJvb20uIEl0IGZlZWxzIGxpa2UgZXZlcnl0aGluZyBhcm91bmQgbWUgc2xvd3MgZG93biwgYW5kIHRoZSBhZHJlbmFsaW5lIGp1c3QgcmlzZXMuIApIZXIgZmFtaWx5IGhhZCBsZWZ0IGhlciBhcyBhbiBpbmZhbnQgaW4gdGhlIHdvb2RzIGluIHZpZXRuYW0gdG8gZWl0aGVyIGdldCBhZG9wdGVkIG9yIGRpZS4gQSBmYW1pbHkgZGlkIGNvbWUgYWxvbmcgYW5kIHRha2UgaGVyIGluLiBIb3dldmVyLCBoZXIgYWRvcHRpdmUgdW5jbGUgYmVnYW4gbW9sZXN0aW5nIGhlciBhbmQgb25lIG5pZ2h0IHNoZSBtdXJkZXJlZCBoaW0gaW4gaGlzIHNsZWVwLiAKSXQgdHJ1ZSwgaWYgeW91IGRvbiBoYXZlIGl0IHlvdSBjYW4gbWlzcyBpdC4gCkRlciBzcGFuaXNjaGUgVW50ZXJ0aXRlbCBDaGlsYWppdG9zIGtvbW10IHZvbiBjaGlsYWpvcyB1bmQgZGFzIHNpbmQgZGllIGtsZWluc3RlbiBXZXJ0ZSBiZWltIEthcnRlbnNwaWVsIGxpdGVyYXJpc2NoZSBNaW5hdHVyZW4gYmVpIE1hcmEgR3V0aXJyZXouIApBIGxvdCBvZiBwbGFjZXMgd2lsbCBnZXQgdGhlIGJ1aWxkaW5nIG1haW50ZW5hbmNlIGd1eSB0byBwcnkgb3BlbiB0aGUgZG9vcnMgYW5kIHB1bGwgcGVvcGxlIG91dCBiZWNhdXNlIHRoZSBmaXJlIGRlcGFydG1lbnQgd2lsbCByZXBvcnQgdGhlIGVsZXZhdG9yIGZhaWx1cmUgdG8gdGhlIHNhZmV0eSBjb21taXNzaW9uLiBJZiB0aGlzIGhhcHBlbnMgdG8geW91IERPIE5PVCBFWElUIFRIRSBFTEVWQVRPUi4gClRPUk9OVE8gICAoVGVycmlibGUpIFRlZCBMaW5kc2F5LCBhIGhhcmQgbm9zZWQgc3RhciB3aW5nZXIgd2hvIGZvcm1lZCBEZXRyb2l0J3MgZmFtZWQgUHJvZHVjdGlvbiBMaW5lIHdpdGggR29yZGllIEhvd2UgYW5kIFNpZCBBYmVsLCBoYXMgZGllZC4gSGUgd2FzIDkzLgowMyBNYXkuIApBbmQgdGhlIHNoaXAgY29tYmF0IGlzIHJlYWxseSB3ZWxsIGRvbmUsIHdpdGggZnVsbHkgZGVzdHJ1Y3RpYmxlIHNoaXAgbW9kZWxzLiBJIGxvdmUgdG8gc2VlIGEgcmVtYXN0ZXJlZCB2ZXJzaW9uIG9mIHRoZSBnYW1lIHBvcCB1cCBvbiBTdGVhbSBzb21ldGltZS4uIApJdCBkb2Vzbid0IG1hdHRlciBob3cgb2xkIHlvdSBhcmUsIGlmIHlvdSdyZSAxIG9yIDEwMSBvciBzb21ld2hlcmUgaW4gYmV0d2VlbiBldmVyeW9uZSBsb3ZlcyBtYWtpbmcgdGhpbmdzLCIgR2FsbGFnaGVyIHNheXMuIApHb29nbGUgYmltb2RhbCBzYWxhcnkgZGlzdHJpYnV0aW9uIG9mIGxhd3llcnMuIApNYXNzYWdlIFRoZXJhcHkgUmVxdWlyZW1lbnRzClRoZW4gaGUgd2FudGVkIHRvIHNlZSBhbGwgb3VyIHNhZmV0eSBwcm9ncmFtcyBsaWtlIGxvY2sgb3V0LCB0YWcgb3V0IGFuZCBwcm9ncmFtcyBsaWtlIHRoYXQuIEhlIHRoZW4gZm9sbG93ZWQgdXAgd2l0aCBhIHdhbGsgdGhyb3VnaCBvZiBvdXIgZmFjaWxpdHkgYnV0IHdlIHdvbiBrbm93IHdoYXQgaGUgZm91bmQgdW50aWwgaGUgZ2l2ZXMgdXMgYSByZXBvcnQuIApUaGUgY291cnNlIGludm9sdmVzIHRyYWluaW5nIGluIHNhaWxpbmcgdGhlb3J5LCBzYWZldHkgYW5kIHByYWN0aWNlIG9uIHRoZSB3YXRlci4gUmVjZW50IGFuZCBleHBlcmllbmNlZCBzYWlsb3JzIGluIEdhbHdheSBCYXkgU2FpbGluZyBDbHViIHdpbGwgYmUgcHJlc2VudCBhdCBhbGwgdHJhaW5pbmcgZGF5cyB0byBicmllZiBhbmQgd2VsY29tZSBwcm9zcGVjdGl2ZSBzYWlsb3JzLiAKVGhhdCBiZWluZyBzYWlkLCBJIGhhdmUgcmluc2VkIGl0IG9mZiBiZWZvcmUgd2hlbiBJIGZvcmdvdCB0byBncmFiIGEgY2xvdGggYmVmb3JlIGdldHRpbmcgaW4gdGhlIHNob3dlciBhbmQgaXQgaXMgbm90IHRoZSBzYW1lIGFuZCBkZWZpbml0ZWx5IGxlYXZlcyBhIHJlc2lkdWUgdGhhdCB3YXkuIApQb2tlciBlYXJucyB0aGUgY2FzaW5vIGFib3V0ICQxMDAgcGVyIHNlYXQgcGVyIGRheSwgQm91Z2huZXIgbm90ZXMuIFRoYXQncyBsZXNzIHRoYW4gc2xvdCBtYWNoaW5lcyAgIHdoaWNoIGVhcm4gYWJvdXQgJDI1MCBhIGRheSAgIGJ1dCB0aGUgZ2FtZSBkcmF3cyBjdXN0b21lcnMgd2hvIGFyZSBlYWdlciB0byBzcGVuZCBtb25leSBpbiB0aGUgQm9yZ2F0YSdzIHJlc3RhdXJhbnRzIGFuZCBiYXJzLCB3aGljaCBjaGFyZ2UgbW9yZSBhbmQsIEJvdWdobmVyIHNheXMsIHByb3ZpZGUgYmV0dGVyIGZhcmUgdGhhbiBvdGhlcnMgaW4gQXRsYW50aWMgQ2l0eS4gCllvdSBwdWxsIHN0YXRzIG91dCBvZiB5b3VyIGFzcyBhbmQgeW91IHRoaW5rIHlvdSBxdWFsaWZpZWQgdG8gdGFsayBhYm91dCB0aGlzIHN0dWR5IGluIGFueXdheT8KSXMgYSBncmVhdCBvcHBvcnR1bml0eSBmb3IgcGVvcGxlIHdobyBsaXZlIGluIGFwYXJ0bWVudHMgdG8gc2VlIHNvbWV0aGluZyByZWxhdGFibGUgYW5kIGhvdyB0aGV5IGNhbiBtYWtlIGJlc3QgdXNlIG9mIHRoZWlyIG91dHNpZGUgc3BhY2UsIHdoYXRldmVyIHNpemUgaXQgaXMsIHNheXMgYXNzaXN0YW50IHNob3cgbWFuYWdlciBTdGVwaGFuaWUgR2F0emlvbmlzLlRoZSBCdWRkaW5nIEJhbGNvbmllcyBkaXNwbGF5cyB3aWxsIGVhY2ggYmUgMTAgYnkgMTUgZmVldCBhbmQgd2lsbCBpbmNsdWRlIGEgcmFuZ2Ugb2YgY3JlYXRpdmUgaWRlYXMgc3VjaCBhcyBvcHRpb25zIGZvciByYWlsaW5ncywgZ3JvdXBpbmcgcG90cyBhbmQgY29udGFpbmVycyBmb3IgdGhlIG1vc3QgaW1wYWN0LCBhbmQgbWF4aW1pemluZyB2ZXJ0aWNhbCBzcGFjZSB3aXRoIHRyZWxsaXNlcyBhbmQgd2FsbCBnYXJkZW5zLndhbnQgdG8gc2hvdyB0aGF0IHRoZSBleHRyYSBzcXVhcmUgZm9vdGFnZSBvbiBiYWxjb25pZXMgY2FuIGJlIHVzZWQgdG8gZ3JvdyBmbG93ZXJpbmcgcGxhbnRzIG9yIHZlZ2V0YWJsZXMgYW5kIGhlcmJzIHRoYXQgcGVvcGxlIGNhbiBhZGQgdG8gdGhlaXIgb3duIG1lYWxzLCBzYXlzIEdhdHppb25pcy5MZWFubmUgSm9obnNvbiwgcHJlc2lkZW50IG9mIEdhcmRlbldvcmtzLCBzYXlzIHRoZSBuZXcgc2Vhc29uIHByb3ZpZGVzIGEgZnJlc2ggb3Bwb3J0dW5pdHkgdG8gY3JlYXRlIGFuIG91dGRvb3Igc3BhY2UgdG8gZW5qb3kgaW4gdGhlIGNvbWluZyBtb250aHMuIApTY29wZUNyZWVwYSAgMyBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KSGFuZ3VsLCB0aGUgS29yZWFuIGFscGhhYmV0ICAgYW5kICJhbHBoYWJldCIgaXMgYW4gaW1wcmVjaXNlIHRlcm0gZm9yIHRoZSBtb3N0IHByZWNpc2Ugd3JpdGluZyBzeXN0ZW0ga25vd24gdG8gbWFuICAgdXNlZCB0aGUgYmxvY2sgc2hhcGVzIG9mIENoaW5lc2UgY2hhcmFjdGVycyBhcyBpdHMgc3RhcnRpbmcgcG9pbnQgYnV0IGluc3RlYWQgdXNlcyBkaXN0aW5jdCBsZXR0ZXIgc3Ryb2tlcyBhcnJhbmdlZCB3aXRoaW4gdGhlIGJsb2NrIHRvIGNyZWF0ZSBhIHN5bGxhYmxlLi4gCllvdSBqdXN0IG1hZGUgbXVsdGlwbGUgZmFsc2UgYWNjdXNhdGlvbnMgYW5kIGJsYXRhbnRseSBsaWVkLiBMaWVzIGxpa2UgdGhlIGNsYWltIHRoYXQgYWJ1c2UgaXMgaW5ncmFpbmVkIGFuZCBob3cgdGhlIHNvY2lhbCByZXNwb25zaWJpbGl0eSB0byB1c2UgaG9ub3JpZmljcyBpcyBhIGZvcm0gb2YgYWJ1c2UuIApIb3dldmVyLCBpdCBpcyBub3QgbmVjZXNzYXJ5IHRvIGRlbW9uc3RyYXRlIGZvcmNlLCBmcmF1ZCwgb3IgY29lcmNpb24gaW4gc2V4IHRyYWZmaWNraW5nIGNhc2VzIGludm9sdmluZyBjaGlsZHJlbiB1bmRlciB0aGUgYWdlIG9mIDE4LiAKV2l0aCB0aGF0IGJlaW5nIHNhaWQsIEkgc3BlbnQgYSBsb3Qgb2YgdGltZSB3aXRoIEtvcmVhbiBkZXYgYWdlbmNpZXMgZGV2cy4KSGUgd2FzIGF0IFJlcHRvbiB3aGVuIGEgYm95LCB3aGVyZSBhdCBjcmlja2V0IGhlIGpvaW5lZCB0aGUgcmVtYXJrYWJsZSBhbmQgZW5kdXJpbmcgcm9sbCBvZiBzdXBlcmIgeW91bmcgcGxheWVycyBlbWFuYXRpbmcgZnJvbSB0aGUgc2Nob29sICAgRnJ5LCBQYWxhaXJldCwgRm9yZCwgSk4gQ3Jhd2ZvcmQsIHRvIG5hbWUgYSBmZXcuIEF0IE94Zm9yZCBoZSB3b24gZmlyc3QgY2xhc3MgaG9ub3VycyBpbiBDbGFzc2ljYWwgTW9kZXJhdGlvbnMgYXQgV2FkaGFtLCBhbmQgaXQgaXMgYSB0cmlidXRlIHRvIGhpcyBjYWxpYnJlIGFzIGEgc2Nob2xhciBhbmQgcGVyc29uYWwgZm9yY2UgdGhhdCBtb3N0IG9mIHRoZSBvYml0dWFyeSBhcnRpY2xlcyB3cml0dGVuIGFmdGVyIHRoZSBkZWF0aCBvZiBWaXNjb3VudCBTaW1vbiBuYW1lZCBGcnkgaW4gYSBXYWRoYW0gdHJpbml0eSB3aXRoIEJpcmtlbmhlYWQuIE5vdCB0aGUgbGVhc3QgZG91Z2h0eSBhbmQgaWRlYWxpc3RpYyBvZiBoaXMgbWFueSBzaWRlZCBhY2hpZXZlbWVudHMgd2FzIGFzIGEgTGliZXJhbCBjYW5kaWRhdGUgZm9yIEJyaWdodG9uLCB3aGVyZSBoZSBhY3R1YWxseSBwb2xsZWQgMjAsMDAwIHZvdGVzIGxvbmcgYWZ0ZXIgaGUgaGFkIGNlYXNlZCB0byBsaXZlIGluIFN1c3NleCBhbmQgZG9taW5hdGUgdGhlIGNyaWNrZXQgZmllbGQuCkZvciB0aGUgZmlyc3QgdGltZSBpbiBpdHMgZm91cnRlZW4geWVhciBoaXN0b3J5LCB0aGUgY3VycmVudCBzZWFzb24gb2YgdGhlIFdvcmxkIFBva2VyIFRvdXIgd2lsbCBub3QgY29tZSB0byBhIGNsb3NlIHdpdGggYSBDaGFtcGlvbnNoaXAgZXZlbnQuIEJ1dCBTZWFzb24gWElWIG9mIHRoZSBXUFQgd2lsbCBjbG9zZSB3aXRoIGEgc2lnbmF0dXJlIHRvdXJuYW1lbnQsIHRoZSBUb3VybmFtZW50IG9mIENoYW1waW9ucy4KSSBhIGtpbmRlcmdhcnRlbiB0ZWFjaGVyIGluIGEgcHJpdmF0ZSBpbnRlcm5hdGlvbmFsIHNjaG9vbCBpbiBCYW5na29rLiBJIGxpa2UgbXkgam9iIGJlY2F1c2UgaXQgcmVsYXRpdmVseSBlYXN5IGFuZCBzdHJlc3MgZnJlZSwgYW5kIGl0IGFmZm9yZHMgbWUgdGhlIGxpZmVzdHlsZSB0aGF0IEkgd2FudC4gSSBnZXQgdG8gbGl2ZSBpbiBhIGZvcmVpZ24gY291bnRyeSAoSSBmcm9tIHRoZSBVSykgYW5kIGVuam95IHRoZSBzZW5zZSBvZiBhZHZlbnR1cmUgdGhhdCBjb21lcyB3aXRoIHRoYXQuIEkgZ2V0IGFib3V0IDEzIDE0IHdlZWtzIG9mIGhvbGlkYXkgYSB5ZWFyIHNvIEkgY2FuIHRyYXZlbCBhcm91bmQgU0UgQXNpYSBhIGxvdCBkdXJpbmcgbXkgdGltZSBvZmYuIFRoZSBtb25leSBpcyBhbHNvIHByZXR0eSBnb29kIGFuZCBpdCBnb2VzIGEgbG9uZyB3YXkgaW4gdGhpcyBwYXJ0IG9mIHRoZSB3b3JsZCwgc28gSSBjYW4gYWZmb3JkIGEgaG91c2UgYW5kIGEgZ2VuZXJhbCBsaWZlc3R5bGUgdGhhdCBpc24gcmVhbGx5IGF0dGFpbmFibGUgZm9yIG1lIGluIHRoZSBVSy4KVGhhdCBqdXN0IHNlZW1lZCBsaWtlIGEgbm8gYnJhaW5lciB0byBtZSwgYnV0IHRoYXQgY291bGQgYmUgYmVjYXVzZSBJIHdhcyBiaWFzZWQgaGF2aW5nIGxpc3RlbmVkIHRvIEtlcnIgY2FsbCBnYW1lcyBhcyB3ZWxsIGFzIGFueW9uZSBlbHNlIG9uIFRWIGZvciB0aGUgYmV0dGVyIHBhcnQgb2YgYSBkZWNhZGUuIApIZSBtYWtpbmcgc28gbXVjaCBmcm9tIHBva2VyIHRoYXQgaGUgYWJsZSB0byBoaXJlIGhpcyBicm90aGVyIGFzIGEgcGVyc29uYWwgYXNzaXN0YW50LiBBYm91dCBzZXZlbiBtb250aHMgYWdvLCBoZSBkZWNpZGVkIHRvIHRha2UgYSBicmVhayBmcm9tIGhpcyBzdHVkaWVzIGF0IHRoZSBVbml2ZXJzaXR5IG9mIExldGhicmlkZ2UgdG8gcGxheSBwb2tlciBmdWxsIHRpbWUsIGFuZCBzdHJlYW0gaGlzIGdhbWVzIGxpdmUuLiAKSXQgbGlrZSB5b3VyIGFjY291bnQgaXMgZnJvemVuLiBTbyBhbGwgdGhhdCByZW1haW5pbmcgbW9uZXkgZnJvbSBlYWNoIGFjY291bnQgaXMgdGhlaXJzLi4gClRoZXJlZm9yZSwgZnJlZSBwb2tlciBpcyB0aGUgb25saW5lIHBva2VyIGZvciBtb3N0IHBsYXllcnMuIEhvdyBkb2VzIHRoaXMgZGlmZmVyIGZyb20gdGhlIG90aGVyIHBva2VycyBiZWluZyBwbGF5ZWQgZXZlcnl3aGVyZSBlbHNlPyBPbmUgZmFjdG9yIGlzIHRoYXQgaW4gZnJlZSBwb2tlciwgeW91IGRvbid0IGtub3cgd2hvIHlvdXIgb3Bwb25lbnRzIGFyZS4gWW91IHdvbid0IGJlIGFibGUgdG8gcmVhZCB0aGVpciBleWVzIG9yIGFudGljaXBhdGUgdGhlaXIgYm9keSBtb3ZlbWVudHMgc2luY2UgdGhpcyBpcyBiZWluZyBwbGF5ZWQgdmlydHVhbGx5LiBPZiBjb3Vyc2UsIGlmIHlvdSBjYW5ub3Qgc2VlIHRoZW0sIHRoZXkgY2FuIG5vdCBhbHNvIHNlZSB5b3UuIFRodXMsIHRoZXJlIGlzIG1vcmUgZnJlZWRvbSB0byByZWFjdC4gQW5vdGhlciBmZWF0dXJlIG9mIGZyZWUgcG9rZXIgaW4gdGhlIGludGVybmV0IHNldHRpbmcgaXMgdGhhdCBydWxlcyBhcmUgbW9yZSBzdHJpY3Qgc2luY2Ugbm9ib2R5IGlzIHNlZWluZyBhbnlib2R5LCB0aGUgb2JqZWN0aXZpdHkgb2YgdGhlIGRlYWxlciBvciBkZWFsZXIvcGxheWVyIGlzIG1vcmUgb3IgbGVzcyBub3QgY29tcHJvbWlzZWQgdGhhdCBtdWNoLgpZZXMsIHNoZSdzIHdvcmtpbmcsIHNoZSBzYXlzLCBhbmQgYWdyZWVzIHRvIHRhbGsuIEJ1dCBzaGUgYmVjb21lcyByZXRpY2VudCB3aGVuIGEgbWFuIGFwcHJvYWNoZXMsIGxvb2tpbmcgbWVuYWNpbmdseSBvdmVyIGhlciBzaG91bGRlci4gSGUgc2VlbXMgdG8gZ2l2ZSB0aGUgb2theSB2aWEgYSBzaHJ1ZywgYnV0IGNvbnRpbnVlcyB0byBob3Zlci4KT24gZGl0IGRlcyBoZXJiZXMgcXUgdGFpZW50IHRycyBzb3V2ZW50IHNhY3JlcywgcGFydGljdWxpcmVtZW50IGdyY2UgIGxldXJzIHByb3ByaXRzIGN1cmF0aXZlcyBxdWkgYXVyYWllbnQgdCBkY291dmVydGVzIHBhciBsZXMgZGlldXguIEFpbnNpLCByZW5kcmUgaG9tbWFnZSBhdXggcGxhbnRlcyBmdXQgaWwgdW4gYm9uIG1veWVuIGRlIHJlY29ubmF0cmUgYXV4IGRpdmluaXRzIGxldXJzIGdyYW5kZXVycy4gClRoaXMgaGFwcGVuZWQgd2hlbiBJIHdhcyBhIG5haXZlIDE4LzE5eW8uIEkgaGFkIGEgY3J1c2ggb24gYSBnaXJsIGFuZCB3b3VsZCBtZWV0IGhlciBhZnRlciBoZXIgZGFuY2UgY2xhc3Mgd2l0aCBhIGJpZyBjb2xkIGRyaW5rIGZvciBhIGZldyBtb250aHMuIApVbiBwcm92ZXJiZSBsYXRpbiBsJ2V4cHJpbWUgYXZlYyBzYWdlc3NlIDogImxlIHNlbCBxdWUgbCdvbiBqZXR0ZSBzdXIgdG9pIG5lIHBldXQgdGUgZmFpcmUgbWFsIHF1ZSBsIG8gdHUgYXMgZGVzIHBsYWllcyBvdXZlcnRlcy4iIEFpbnNpLCBsYSBkb3VsZXVyIG5vdXMgaW52aXRlIHQgZWxsZSAgcmVnYXJkZXIgImJla2hhIiwgZW4gbm91cy4gRWxsZSBub3VzIGludml0ZSAgdGlyZXIgdW4gZW5zZWlnbmVtZW50ICgiYWxlcGggc2lnbmlmaWUgYXVzc2kgYXBwcmVuZHJlKSBxdWkgZXN0ICByZWNoZXJjaGVyIGVuIG5vdXMgYWZpbiBkZSBndXJpciBsYSBibGVzc3VyZSByZXNzZW50aWUuLiAKS2FsbGEgbiB0dGVyIGRyYXIgaSwga2FuIGRldCB2YXJhIGYgciBteWNrZXQgc3BlbCBzb20gZHUgaGFyIGggcnQgdGFsYXMgb20gbWVuIGRldCBmaW5ucyBzIG0gbmdhIGZsZXIuIApBbnRob255IERhbGUsIHRoZSBDRU8gb2YgdGhlIE9udGFyaW8gSG9zcGl0YWwgQXNzb2NpYXRpb24sIHNhaWQgYSBicm9hZGVyIHZpZXcgb2YgdGhlIGhlYWx0aCBjYXJlIHN5c3RlbSB3aWxsIGhlbHAgYWRkcmVzcyBvdmVyY3Jvd2RpbmcgYW5kIGhlbHAgYnJlYWsgZG93biBiYXJyaWVycyB0aGF0IGV4aXN0IGJldHdlZW4gY2FyZSBwcm92aWRlcnMgaW4gdGhlIGhlYWx0aCBjYXJlIHN5c3RlbS4KSWNoIGhhYmUgbWljaCBhbiBkaWUga2xlaW5lbiBCdXkgaW5zIGdlaGFsdGVuLCB3ZWlsIGljaCBkaWUgbGV0enRlbiBNYWxlIHNvIHZpZWwgZHJlc2NoZSBiZWtvbW1lbiBoYWJlLCBkYXNzIGljaCBrZWluZSBsdXN0IGhhdHRlIG1laHIgR2VsZCBpbiBkZW4gV2luZCB6dSBzY2hpZWVuLiAKRGVhbCAxOiBHSVZFOiBUb2RkIEd1cmxleSBhbmQgS2VlbmFuIEFsbGVuIFJFQ0VJVkU6IEV6ZWtpZWwgRWxsaW90dCBhbmQgRW1tYW51ZWwgU2FuZGVycwpBIGdyZWF0IGRvZyBzY29ybnMgdGhlIHNuYXJsaW5nIG9mIGEgbGl0dGxlIGRvZywgYW5kIHRoaXMgbWF5IGJlIGNhbGxlZCBtYWduYW5pbWl0eS4gCkkgdW5kZXJzdGFuZCB3aGVyZSB5b3UgYXJlIGNvbWluZyBmcm9tLCBidXQgY29uc2lkZXJpbmcgdGhhdCB0aGUgaHVzYmFuZCBrbmV3IGhlIHdpbGwgZGllIChJIGFzc3VtZSBhIHRlcm1pbmFsIGlsbG5lc3MpLCBpZiB0aGVyZSBpcyBldmVyIGEgdGltZSBmb3IgbG9uZyBvdmVyZHVlIGFwb2xvZ2llcyBvciByZW1vcnNlLCB0aGF0IHdoYXQgZGVhdGggYmVkcyBhcmUgZm9yLiBJZiBldmVuIGluIGhpcyBmaW5hbCBtb21lbnRzIGhlIHdpc2hlZCBoaXMgc29uIE5PVCB0byBoYXZlIGFueSBvZiBoaXMgdGhpbmdzLCBJIGJlbGlldmUgdGhlIHdpZmUgbWFkZSB0aGUgY29ycmVjdCBjYWxsIGhlcmUuIApFbmpveSB0aGUgZGVmaW5pdGl2ZSBEeWluZyBMaWdodCBleHBlcmllbmNlIHdpdGggdGhlIGJyYW5kIG5ldyBMZWdlbmQgLiAxLiBGcmVlIERvd25sb2FkIER5aW5nIExpZ2h0OiBUaGUgRm9sbG93aW5nIEVuaGFuY2VkIEVkaXRpb24gUEMgR2FtZSBIZXJlOiAuIApJdCBiZWVuIHllYXJzIGFuZCBJIGNhbiByZW1lbWJlciBpZiBoZSBnb3Qgc3Vja2VkIG91dCBvbiBvciBpZiBpdCB3YXMganVzdCBhIGNvb2xlciBsaWtlIHNldCBvdmVyIHNldCBvciB3aGF0ZXZlci4gSSBqdXN0IGtub3cgaGUgbG9zdCBhZ2FpbiBpbiBhIGJpZyBwb3Qgd2l0aCBhIGdvb2QgaGFuZC4gClRVTFNBLCBPa2xhLiBJdCB3YXMgYSBnb29kIGRheSB0byB3YXNoIGEgZmV3IGNhcnMsIGhhdmUgYSBmZXcgbGF1Z2hzLCBlYXQgc29tZSBnb29kIGZvb2QgYW5kIGhlbHAgb3V0IG1pbGl0YXJ5IHZldGVyYW5zIGF0IHRoZSBzYW1lIHRpbWUuCkEgcmVnaXN0cmF0aW9uIGZlZSBvZiAkMjAgZ2V0cyByaWRlcnMgYSBwb2tlciBjYXJkLCBhIGdyYWIgYmFnIG9mIGdvb2RpZXMgYW5kIGEgY2hhbmNlIHRvIHdpbiBkb29yIHByaXplcy4KSXQgd2FzIGEgMyBjYXIgcGlsZSB1cC4gCktBSkEgS0FMTEFTLCBhIGZvcm1lciBjb21wZXRpdGlvbiBsYXd5ZXIgYW5kIG1lbWJlciBvZiB0aGUgRXVyb3BlYW4gUGFybGlhbWVudCwgaXMganVzdCB0aGUgc29ydCBvZiBidXNpbmVzc2xpa2UgcG9saXRpY2lhbiBvbmUgZXhwZWN0cyBpbiBFc3RvbmlhLiBTaGUgdG9vayBvdmVyIGFzIGxlYWRlciBvZiBFc3RvbmlhJ3MgbGliZXJhbCBSZWZvcm0gUGFydHkgbGFzdCB5ZWFyOyBwb2xscyBzaG93IGl0IGluIGEgZGVhZCBoZWF0IHdpdGggdGhlIHJ1bGluZyBDZW50cmUgUGFydHkuIApXZSBjYW5ub3QgYWNjZXB0IENoaW5lc2UgaGVnZW1vbnkgaW4gRWFzdCBBc2lhLiBSaWdodCBub3cgdGhlIFVuaXRlZCBTdGF0ZXMgaXMgdGhlIG9ubHkgY291bnRyeSBpbiB0aGUgd29ybGQgdGhhdCBpcyBhIHJlZ2lvbmFsIGhlZ2Vtb25pYyBwb3dlci4gRXZlcnkgb3RoZXIgbmF0aW9uIGNhbiBiZSBjb250YWluZWQgYnkgYmFsYW5jaW5nIGNvYWxpdGlvbnMgb2YgbG9jYWwgc3RhdGVzLiAKIkl0IGlzIHZlcnkgZnJ1c3RyYXRpbmcgdGhhdCB0aGUgVUsganVkZ2VzIGhhdmUgbm8gZXhwZXJpZW5jZSBvciB1bmRlcnN0YW5kaW5nIG9mIGNhc2lub3MgYW5kIEFkdmFudGFnZSBQbGF5LCBvciB0aGUgb25nb2luZyBiYXR0bGUgYmV0d2VlbiBjYXNpbm9zIGFuZCBwcm9mZXNzaW9uYWwgZ2FtYmxlcnMgYXR0ZW1wdGluZyB0byBsZXZlbCB0aGUgcGxheWluZyBmaWVsZC4iCkZsZXhpYmxlIHdvcmsgaXMgaGFyZCB0byBjb21lIGJ5IHNvIHdlIGdlbmVyYWxseSB3YW50IHRvIGJlIHNlZW4gdG8gYmUgZG9pbmcgYSBnb29kIGpvYi4gClZvc290cm9zIGlzIGp1c3QgYSBjb25zdHJ1Y3Rpb24gb2Ygdm9zICJ5b3UiICsgb3Ryb3MgIm90aGVycyIsIGZvbGxvd2luZyB0aGUgcGF0dGVybiBvZiBub3NvdHJvcy4uIApMZWhpZ2ggVmFsbGV5IE11c2ljOiBZb3UncmUgZ29pbmcgdG8gYmUgY29taW5nIHRvIFBoaWxhZGVscGhpYSBhdCB0aGUgZW5kIG9mIEFwcmlsCkZsb3lkIGZvdWdodCAiVmljaW91cyIgVmljdG9yIE9ydGl6LCBidXQgaGUgZmlndXJlZCBoZSdkIHJhdGhlciBmYWNlIHRoZSBzdGlmZiBjb21wZXRpdGlvbiBvbiBEYW5jaW5nIHdpdGggdGhlIFN0YXJzLiAKSSB3YXMgbGF5aW5nIGRvd24gb24gdGhlIGdyb3VuZCBmb3Igd2hhdCBzZWVtZWQgbGlrZSBtb250aHMuIFNraW4sIG5haWxzLCB0ZWV0aCwgbGltYnMsIHNjYXR0ZXJlZCBhY3Jvc3MgdGhlIGZsb29yIG9mIG15IG93biBwZXJzb25hbCBoZWxsLiAKRW4gU2licmllLCBvbiBtYW5nZSBsZXMgdGlnZXMgZW4gY29tcGFnbmllIGRlIHBhaW4gZXQgZGUgYmV1cnJlLiBQYXIgYWlsbGV1cnMsIGxlcyB1c2FnZXMgc29udCBtdWx0aXBsZXMuIApJZGsuIEkganVzdCBob3BlIHlvdSBkb24gcmVncmV0IGl0IHNvbWVkYXkuIApBbHRob3VnaCBJIHN1cmUgdGhpcyBmbHVjdHVhdGVzLCBJIHJlY29tbWVuZCBnZXR0aW5nIG9uIHRoZSB3YWl0aW5nIGxpc3Qgbm93LCBldmVuIGlmIHlvdSB1bmNlcnRhaW4gYXMgdG8gd2hldGhlciB5b3UgZm9sbG93IHRocm91Z2ggb3Igbm90LCBiZWNhdXNlIGl0IHRvb2sgc2l4IG9yIHNldmVuIG1vbnRocyB0byBnZXQgaW4uIEFsbCB0aGVpciB0aGVyYXBpc3RzIGFyZSB0cmFpbmVkIHNwZWNpZmljYWxseSBpbiBoZWxwaW5nIHBlb3BsZSByZWNvdmVyIGZyb20gY3JpbWUgYmFzZWQgdHJhdW1hLCBzbyB0aGV5IHNlZSBhIGxvdCBvZiBzZXh1YWwgYXNzYXVsdCB2aWN0aW1zLiBTZWNvbmRseSwgaWYgeW91IGRvIHJlcG9ydCwgeW91IGFsbG93ZWQgdG8gYWNjZXNzIGFuIGFkdm9jYXRlIHRocm91Z2ggdGhlIGNvdXJ0cyB0aGF0IGNhbiBoZWxwIHlvdSBuYXZpZ2F0ZSB0aGUgc3lzdGVtLCBhbmQgY2FuIGdpdmUgeW91IHNvbWUgaWRlYSBvZiB3aGF0IHRvIGV4cGVjdC4uIApQb3N0ZXJzOiBQbGVhc2UgdGFnIHlvdXIgZ2l2ZWF3YXlzIGFzIGVpdGhlciBPUEVOIG9yIENMT1NFRCB3aGVuIG5lY2Vzc2FyeS4gVW5kZXIgeW91ciBwb3N0IHRoZXJlIGlzIGEgIkZsYWlyIiBidXR0b24gdGhhdCBhbGxvd3MgeW91IHRvIHNldCB0aGVzZS4KQ3Ixc3BpZV9DcnVuY2ggIDAgcG9pbnRzICBzdWJtaXR0ZWQgMjIgZGF5cyBhZ28KSXQgdGhlIHNhbWUgY3JpbWUsIGFuZCBqdXN0IGJlY2F1c2Ugc29tZSBib3lzIHRoaW5rIHRoZWlyIHRlYWNoZXIgaXMgaG90LCBkb2VzbiBtZWFuIHRoYXQgZmVtYWxlIHRlYWNoZXJzIHdobyBoYXZlIHNleCB3aXRoIG1hbGUgc3R1ZGVudHMgc2hvdWxkIGdldCBsZXNzIHRpbWUgdGhhbiBtYWxlIHRlYWNoZXJzIGhhdmluZyBzZXggd2l0aCBmZW1hbGUgc3R1ZGVudHMuLiAKRGFobCdzIGVkaXRvcnMgInNhdyB0aGUgc3RvcnkgYXMgZXNzZW50aWFsbHkgVmljdG9yaWFuIGluIGNoYXJhY3RlciAgIGEgJ3ZlcnkgRW5nbGlzaCBmYW50YXN5IHNvIHRoZXkgZGlzcmVnYXJkZWQgYW55IHJhY2lzdCBtaXNnaXZpbmdzIGFib3V0IHRoZSBzdG9yeS4gSW5kZWVkLCB3aGVuIHRoZSBib29rIGZpcnN0IGFwcGVhcmVkIGluIHRoZSBVbml0ZWQgU3RhdGVzIGluIDE5NjQgaXQgd2FzIHJlZ2FyZGVkIHdpdGggb25seSBhY2NsYWltIGFuZCBlbnRodXNpYXNtLgpUaGUgT2FrIEZsYXRzIGNsdWIgaXMgbW92aW5nIGZvcndhcmQgYnkgZ29pbmcgYmFjayB0byB0aGUgc2ltcGxlIHRoaW5ncywgd2l0aCBpdHMgc3VzdGFpbmFiaWxpdHkgaW5pdGlhdGl2ZXMgbGVhZGluZyB0byBzaWduaWZpY2FudCBmaW5hbmNpYWwgc2F2aW5ncy4gCllvdSBrbm93IG5vcm1hbCBzdHVmZi4uIApJdCBjbGVhcmx5IGlzIHN0b3BwaW5nIGluIEFtZXJpY2FuIHBvbGl0aWNzIGFuZCBtYXliZSBkYWlseSBsaWZlIG1vcmUgZ2VuZXJhbGx5LiAKTHVrZSB0byBjb3VydCBpbiBhbiB1Z2x5IGFuZCBzdGlsbCBvbiBnb2luZyBsZWdhbCBmaWdodCB0byBiZSByZWxlYXNlZCBmcm9tIGhlciBjb250cmFjdCBvbiBoaXMgU29ueSBiYWNrZWQgS2Vtb3NhYmUgUmVjb3JkcyBhZnRlciBhIGRlY2FkZSBvZiB3aGF0IGhlciBsYXd5ZXIgY2FsbGVkICJtZW50YWwgbWFuaXB1bGF0aW9uIFthbmRdIGVtb3Rpb25hbCBhYnVzZSwiIHN1aW5nIHRoZSBwcm9kdWNlciAod2hvc2UgcmVhbCBuYW1lIGlzIEx1a2FzeiBHb3R0d2FsZCkgZm9yIHNleHVhbCBhc3NhdWx0IGFuZCBiYXR0ZXJ5Li4gCkhlIHdhcyBhIHJlZ3VsYXIgYW5kIHdvdWxkIGNvbnRpbnVhbGx5IGJ1eSBpbiBmb3IgJDEwMC4gCllvdSBrbm93IHdoYXQ/IEkgbmV2ZXIgdGhvdWdodCBJIGRvIHRoaXMsIGJ1dCBJIGdvdHRhIHJlc2NpbmQgbXkgcmVjb21tZW5kYXRpb24gb2YgQkJUUy4gTXkgU08gaGFzIGJlZW4gb3JkZXJpbmcgZnJvbSB0aGVtIHNpbmNlIGl0IHN0YXJ0ZWQgd2l0aCB0aGUgb3duZXIgSm9lbCBpbiAyMDAyKD8pLiBXZSBhbHdheXMgaGFkIGdyZWF0IGN1c3RvbWVyIHNlcnZpY2UgdW50aWwgbm93LiAKT25lIHRoaW5nIEkgbm90aWNlZCBoZXJlIGlzIHlvdSdyZSBub3QgdGFraW5nIGluIHRvIGFjY291bnQgeW91ciB0cnVlIGV4cGVuc2VzLiBCeSB0aGlzIEkgbWVhbiB0aGUgZXhwZW5zZXMgdGhhdCBhcmUgcmVvY2N1cnJpbmcgYnV0IGlycmVndWxhci4gSGVyZSdzIHNvbWUgZXhhbXBsZXM6CkFuZCB0aGUgcmVhbCBwYWluIGlzIHdoZW4geW91IG5lZWQgYSBjYXAgb24geW91ciB0b290aCBhbmQgdGhlIGFuZXN0aGVzaWEgd2VhcnMgb2ZmIHdoaWxlIGhlIGlzIGRyaWxsaW5nLCBub3cgdGhhdCBwYWluLiBCdXQgYSBjYXIgYWNjaWRlbnQgaGFwcGVuZWQgZHVyaW5nIHRoZSBwcm9jZWR1cmUgYW5kIHRoZSBkb2MgZGlkbiBub3RpY2UgdGhhdCB0aGUgYW5lc3RoZXNpYSBoYXMgcGFzc2VkLiBZb3UgZmluZS4gClVuZm9ydHVuYXRlbHksIHlvdSBnZW5lcmFsbHkgYXJlbiBnb2luZyB0byBrbm93IGhvdyBhIGNhbWVyYSB3YXMgc3RvcmVkLiBZb3UgY291bGQgZ2V0IGl0IGFuZCBpdCBtaWdodCBiZSBkZWFkIGluIDYgbW9udGhzLiBPciBpdCBjb3VsZCBzdGlsbCBiZSB3b3JraW5nIHdoZW4geW91IHBhc3MgaXQgZG93biB0byB5b3VyIGNoaWxkcmVuLiAKVHJ1ZSwgb24gaXRzIGZhY2UgcHJlIENpdmlsIFdhciB0byBUaGUgU291dGhlcm4gU3RyYXRlZ3ksIGFzIGl0IGFwcGxpZXMgdG8gdGhlIFNvdXRoLCBidXQgbm90IG5lY2Vzc2FyaWx5IHRoZSBOb3J0aC4gVGhleSByZWZ1c2UgdG8gYWNrbm93bGVkZ2UgaG93IGFuZCB3aHkgYWxsIG9mIHRoZSByYWNpc3QgRGl4aWNyYXRzIHN3aXRjaGVkIHBhcnRpZXMgYW5kIG5vdyByZXByZXNlbnQgdGhlIGxpa2VzIG9mIHRoZSBwZW9wbGUgd2hvIHdlbnQgdG8gQ2hhcmxvdHRlc3ZpbGxlIHRvIHNwcmVhZCB0aGVpciBoYXRyZWQgKGFuZCBydW4gcGVvcGxlIG92ZXIpLiAKQmVpIEJla2FubnR3ZXJkZW4gdm9uIFJlY2h0c3ZlcmxldHp1bmdlbiB3ZXJkZSBpY2ggZGVyYXJ0aWdlIEluaGFsdGUgdW1nZWhlbmQgZW50ZmVybmVuLi4gCkFmdGVyIGFsbCwgc21hbGxlciBmaWdodGVycyByb3V0aW5lbHkgYmVhdCBsYXJnZXIgb25lcyAgaGVsbCwgbW9zdCBvZiB0aGUgZGl2aXNpb24gY2hhbXBzIGFyZW4gdGhlIGJpZ2dlc3QgZ3V5IGluIHNhaWQgZGl2aXNpb24uIFNpemUgaXMganVzdCBhIGZhY2V0IGluIHRoZSBmaWdodCBnYW1lLm1lbnRhbGhhcnZlc3RlciAgMyBwb2ludHMgIHN1Ym1pdHRlZCAxMyBkYXlzIGFnb0Fic29sdXRlbHkgY29ycmVjdC4gCkZyYW5rbHksIGEgd2VsbCBydW4gcm9vbSB3b3VsZG4gdG9sZXJhdGUgdGhlIGFidXNlIG9mIHRoZWlyIGRlYWxlcnMsIHBlcmlvZCwgbGV0IGFsb25lIGFsbG93IHRoZW0gdG8gcnVuIHJvdWdoc2hvZCBvdmVyIHRoZSBvd25lciBvZiB0aGUgZ2FtZS4uIApHZXQgdG8gS25vdyB0aGUgQ2FzdCBCZWZvcmUgdGhlIFByZW1pZXJlClNvbWUgb2YgdGhlbSB1c2VkIHRvIGJlbmQgdGhlIGNhcmRzIGluIHRoZWlyIGhhbmRzIGFuZCB0aHVzIHJ1aW5lZCB0aGVtIGFsbC4gCihUaGUgbGVucyBpcyBtb3JlIGltcG9ydGFudCBhbnl3YXkpLiAKQnV0IHRoZSBmYWN0IHJlbWFpbnMgdGhhdCBhIHNtYWxsIGRlYmF0ZSBpbiB0aGUgTmF0aW9uYWwgQXNzZW1ibHkgY2xlYXJlZCB0aGUgbWlzdCBmb3Igd2hpY2ggdGhlIGdvdmVybm1lbnQgd2FzIHJlY2VpdmluZyBmbGFrIGZvciBhbG1vc3QgYSB3ZWVrLiAKQXMgZm9yIHRoZSBtYXRjaCwgQXVzdHJhbGlhIHdlcmUgY29tZm9ydGFibGUgdGVuIHdpY2tldCB3aW5uZXJzLCB3aXRoIERvbiBCcmFkbWFuIGxlZnQgc3RyYW5kZWQgb24gMjk5LiAKSmUgbGUgY29uc3VsdGUgc3VpdGUgIHVuIHJnaW1lIGh5cGVyIHByb3RpbiwgamUgdm9pcyBiaWVuIHF1ZSBhIG4nYSByaWVuIHJzb2x1ICBtZXMgcXVlc3Rpb25zIGFsaW1lbnRhaXJlcy4gClNtYWxsIEJ1c2luZXNzIFNvbHV0aW9ucyBmb3IgVG91Z2ggVGltZXMKQyBjZWx1aSBkZSBNYXNjb3VjaGUsIGRhbnMgbGEgY291cm9ubmUgbm9yZC4gCkJlZm9yZSB5b3UgcHV0IHlvdXIgaG9tZSBpbiB0aGUgbWFya2V0LCBwcmVwIGl0LCBlbXB0eSBvdXQgZHJhd2Vycywgc3RhZ2UgY2xvc2V0cyBhbmQgcGFjayB1cCBhbnl0aGluZyByZW1vdGVseSBwZXJzb25hbCBpbmNsdWRpbmcgbWVkaWNhdGlvbnMuIERpc2Fzc29jaWF0ZSB5b3Vyc2VsZiB3aXRoIHlvdXIgaG9tZSAgIHJlbWluZCB5b3Vyc2VsZiB0aGF0IGl0IGlzIGEgaG91c2UgICBhIHByb2R1Y3QgdG8gYmUgc29sZCBvbiBhbiBvcGVuIG1hcmtldCB0aGF0IGlzIGJvdW5kIHRvIHNlZSBwbGVudHkgb2YgbmV3IGZhY2VzIHRocm91Z2hvdXQgdGhlIHRlcm0gb2YgdGhlIHNlbGxpbmcgcHJvY2Vzcy4uIApXZSB3ZXJlIGEgZmV3IG9mIHRoZSBmaXJzdCBwZW9wbGUgdG8gc2lnbiB1cCBmb3IgYmx1ZWZpcmUgYXQgdGhlIHRpbWUgYW5kIHlvdSB0b29rIHRoZSB0aW1lIHRvIGFuc3dlciBzb21lIGYgbXkgcXVlc3Rpb25zLiAKRXZlbiBEaWNrIENoZW5leSBjYW1lIG91dCBhbmQgc2F5cyBoZSBzdXBwb3J0cyB1cy4gCkkgaGF2ZSByZWFzb24gdG8gYmVsaWV2ZSB0aGF0IHNldmVyYWwgcGVvcGxlIGluIHRoZSBmYW1pbHkgaGF2ZSBQVFNEIGZyb20gdGhhdCBzZXJpZXMgb2YgZXZlbnRzIHRoYXQgaGFzIGdvbmUgdW5kaWFnbm9zZWQgZm9yIG1hbnkgeWVhcnMuIApXZSBhIHByZXR0eSBvcGVuIGZyaWVuZCBncm91cCwgYW5kIHRpcHN5IG1lIGhhZCBiZWVuIGNvbXBsYWluaW5nIGFib3V0IGhvdyBJIGhhZG4gZ290dGVuIGxhaWQgaW4gbW9udGhzLiBGYXN0IGZvcndhcmQgdG8gd2hlbiBldmVyeW9uZSBsZWF2ZXMsIEkgYXNrIGlmIEkgY2FuIHNsZWVwIG92ZXIgb24gaGlzIGZ1dG9uIGJlY2F1c2UgSSBkb24gd2FudCB0byBkcml2ZSBob21lLCBoZSBzYXlzIG5vIHByb2JsZW0uIEkgbGV0IGhpbSBrbm93IEkgY2FuIHNsZWVwIGluIGplYW5zIGFuZCB0YWtlIHRoZW0gb2ZmLiBIZSB0dXJucyBhcm91bmQgdG8gc2l0IGF0IGhpcyBkZXNrIGFuZCBkbyBzb21ldGhpbmcgZWxzZS4gSSBnbyB0byBzbGVlcC4KKFByaXZhY3kgUG9saWN5KUZlYXR1cmVzR29vZ2xlIEN1c3RvbSBTZWFyY2hUaGlzIGlzIGZlYXR1cmUgYWxsb3dzIHlvdSB0byBzZWFyY2ggdGhlIHNpdGUuIChQcml2YWN5IFBvbGljeSlHb29nbGUgTWFwc1NvbWUgYXJ0aWNsZXMgaGF2ZSBHb29nbGUgTWFwcyBlbWJlZGRlZCBpbiB0aGVtLiAoUHJpdmFjeSBQb2xpY3kpR29vZ2xlIEFkU2Vuc2UgSG9zdCBBUElUaGlzIHNlcnZpY2UgYWxsb3dzIHlvdSB0byBzaWduIHVwIGZvciBvciBhc3NvY2lhdGUgYSBHb29nbGUgQWRTZW5zZSBhY2NvdW50IHdpdGggSHViUGFnZXMsIHNvIHRoYXQgeW91IGNhbiBlYXJuIG1vbmV5IGZyb20gYWRzIG9uIHlvdXIgYXJ0aWNsZXMuIApXaGF0IGNhdWdodCBteSBhdHRlbnRpb24gd2l0aCB0aGUgdGhpbmcgd2FzIHRoYXQgdGhlcmUgd2FzIGZvb2QgYW5kIGRyaW5rIGVub3VnaCBpbiBpdCBmb3IgYSBwZXJzb24gdG8gbGl2ZSBhIG1vbnRoIG5lZWQgYmUsIGluIHNhZmV0eSBhbmQgY29tZm9ydCIpLiAKWW91J3JlIGluIGEgcmVsYXRpb25zaGlwIHRvZ2V0aGVyLiAKRURJVDogSSBkb24ndCBjYXJlIGZvciBoZXIgYnV0IGJlZm9yZSB5b3UgZ3V5cyBjb21lIGZvciBtZSBhYm91dCBlZGl0aW5nICAgbGV0IG1lIHJlbWluZCB5b3Ugb2YgdGhpcyBmZWxsYSBuYW1lZCBKQVguIFRoZXkncmUgZGVmaW5pdGVseSBmcmFtaW5nIGhpbSBpbiBhIGxlc3MgaGF0ZWZ1bCB3YXkgaW4gaG9wZXMgd2UgbWF5IGJlIGludGVyZXN0ZWQgaW4gdGhhdCBrYXkgc3VsIHdlZGRpbmcuIApTY29yZTogMjcuIER1aC4KSG93ZXZlciwgdGhlIFBlb3BsZSdzIENvbmdyZXNzZXMgd2FudGVkIHRvIG1haW50YWluIHRoZSBkZWF0aCBwZW5hbHR5IGFuZCBjbGFzc2ljIHNjaG9vbHMsIGFuZCB1bHRpbWF0ZWx5IHRoZSB3aWxsIG9mIHRoZSBQZW9wbGUncyBDb25ncmVzc2VzIHByZXZhaWxlZC4gU2ltaWxhcmx5LCBpbiAyMDA5LCBDb2xvbmVsIEdhZGRhZmkgcHV0IGZvcndhcmQgYSBwcm9wb3NhbCB0byBlc3NlbnRpYWxseSBhYm9saXNoIHRoZSBjZW50cmFsIGdvdmVybm1lbnQgYWx0b2dldGhlciBhbmQgZ2l2ZSBhbGwgdGhlIG9pbCBwcm9jZWVkcyBkaXJlY3RseSB0byBlYWNoIGZhbWlseS4gClNvIHNheXMgYSAyMDA2IHN0dWR5IG9mIDQ2IHN3b3JkIHN3YWxsb3dlcnMgKDQwIG1lbikgcHVibGlzaGVkIGluIHRoZSBCcml0aXNoIE1lZGljYWwgSm91cm5hbCwgd2hpY2ggZm91bmQgZGlyZSBpbmp1cmllcyBsaWtlIGludGVzdGluYWwgYmxlZWRpbmcsIHBlcmZvcmF0aW9ucyB0byB0aGUgcGhhcnlueCBhbmQgZXNvcGhhZ2VhbCBsYWNlcmF0aW9ucyBhcmUgbW9yZSBsaWtlbHkgdG8gcGxhZ3VlIHBlcmZvcm1lcnMgd2l0aCBlbGFib3JhdGUgcm91dGluZXMsIHRvbyBtYW55IGNvbnNlY3V0aXZlIHNob3dzIG9yIHdobyB1c2UgbXVsdGlwbGUgc3dvcmRzLCBlc3BlY2lhbGx5IHVudXN1YWxseSBzaGFwZWQgb25lcy4gQ28gd3JpdHRlbiBieSBNZXllciBhbmQgQnJpdGlzaCByYWRpb2xvZ2lzdCBCcmlhbiBXaGl0Y29tYmUsIGl0IHdvbiBhbiBJZyBOb2JlbCBQcml6ZSwgYXdhcmRlZCBhbm51YWxseSBieSB0aGUgQW5uYWxzIG9mIEltcHJvYmFibGUgUmVzZWFyY2ggbWFnYXppbmUgYXQgSGFydmFyZCBVbml2ZXJzaXR5IGZvciBlc3BlY2lhbGx5IGltYWdpbmF0aXZlIHNjaWVudGlmaWMgYWNoaWV2ZW1lbnRzLiAoTWV5ZXIgYWNjZXB0ZWQgdGhlIGF3YXJkIGF0IHRoZSB1bml2ZXJzaXR5IFNhbmRlcnMgVGhlYXRyZSBhbmQgdGhlbiBzd2FsbG93ZWQgYSBzd29yZCBvbiBzdGFnZS4pLiAKSW4gYSBmaXJzdCBzY2VuZSwgSSBhbSBzaXR0aW5nIHdpdGggbXkgZGF1Z2h0ZXIgaW4gZnJvbnQgb2YgbXkgaG91c2UuIFdpbmRzIGZyb20gd2VzdCBzdGFydGVkIHRvIGJsb3cgc28gc3Ryb25nIHRoYXQgaXQgcHVzaGVkIGEgdHJ1bmsgb2YgYWJvdXQgMTUwIHRvIDIwMCBmb290IHBpbmUgdHJlZSBhdCBhYm91dCA0NSBkZWdyZWUgdG8gNTAgZGVncmVlIGFuZ2xlLiBXaW5kcyB3ZXJlIGFib3V0IDgwIHRvIDEwMCBtcGggb3IgbW9yZSB0aGV5IHdlcmUgYmxvd2luZyBpbiBhIGRpcmVjdGlvbiBvZiB3ZXN0IHRvIGVhc3QuLiAKU2VyaW91c2x5Li4gCkxpdGVyYWxseSBvbiBoaXMgd2F5IHRvIHRoZSBob3VzZSBoZSBhbmQgbXkgNCB5ZWFyIG9sZCBkYXVnaHRlciB3ZXJlIGluIGEgY2FyIGNyYXNoLiAKU29ycnkgZHVkZS4uIApJIHdyaXR0ZW4gb24gZXhhY3RseSB0aGF0IHRoZW9yeSBiZWZvcmUsIGJ1dCBJIGRvbiByZWFsbHkgdHJhY2sgbXkgdGhvdWdodHMgYmVjYXVzZSBpdCB1c3VhbGx5IG9mZiB0aGUgY3VmZiBzcGl0YmFsbGluZy4gQW55d2F5LCB0aGlzIHBhcnRpY3VsYXIgb25lIG1hcnJpZXMgaW4gd2l0aCB3aGF0IEkgaGFkIGFib3ZlLCB3aXRoIEtLQyBzaG93aW5nIHNpZ25zIG9mIGFjdHVhbGx5IGJlaW5nIGRvbmUgYXMgYSBjbGFzc2ljYWwgR3JlZWsgdHJhZ2VkeSwgd2hlcmUgdGhlIFRyYWdpYyBIZXJvIGhhcyBhIGZhdGFsIGZsYXcgb3IgaGFtYXJ0aWEgKHVzdWFsbHkgcHJpZGUpIHdoaWNoIGxlYWRzIHRvIGhpcyBkb3duZmFsbCwgYW5kIGluIHdoaWNoIHRoZSBtb21lbnQgb2YgcGVyaXBldGVpYSAob3IgcmV2ZXJzYWwpIGxlYWRzIHRoZSBhdWRpZW5jZSB0byBjYXRoYXJzaXMgKHdoaWNoIGhhcyBsaXR0bGUgdG8gZG8gd2l0aCBvdXIgc2Vuc2Ugb2YgY2F0aGFyc2lzKS4gU28gdGhlcmUsIEkgdGhpbmsgdGhhdCBLdm90aGUgd2lsbCBnbyBmb3J3YXJkIHNlZWluZyBoaW1zZWxmIGZ1bGx5IGp1c3RpZmllZCBpbiBraWxsaW5nIHRoZSBDaGFuZHJpYW4gZXZlbiB3aGlsZSBoaXMgaWRlYWxzIGluY3JlYXNpbmdseSBhbGlnbiB3aXRoIHRoZWlycyBhbmQsIGFmdGVyIGhlIHN1Y2NlZWRzLCBoZSB3aWxsIGxlYXJuIHRoYXQgaGlzIHN1Y2Nlc3Mgd2FzIHRoZSBhY3R1YWwgYWJzb2x1dGUgd29yc3QgdGhpbmcgaGUgY291bGQgZG8gYW5kIGhlIGhhcyBkYW1uZWQgaGltc2VsZiAob3Igd2hhdGV2ZXIgdGhlIGZvdXIgY29ybmVycyB2ZXJzaW9uIG9mIGRhbW5hdGlvbiBpcykuLiAKWW91IGNhbiB0YXN0ZSBpdCBpbiB5b3VyIG1vdXRoLCBmZWVsIGl0IGluIHlvdXIgZXllcyBhbmQgdXAgeW91ciBub3NlIGFuZCBpdCdzIG5vdCBwbGVhc2FudC4gClRoZXJlIHdhcyBzZXJpb3VzIHJvdCBvciBhIG1ham9yIGNyaXNpcyBpbiB0aGUgcG9saWNlLCB0aGVuIEkgbm90IHN1cmUgaWYgd2Ugd291bGQgZXZlbiBrbm93IGFib3V0IGl0LCBiZWNhdXNlIGl0IHdvdWxkIGJlIGVuZGVtaWMsIGFuZCB0aGVyZSB3b3VsZCBiZSBhIGNvZGUgb2Ygc2lsZW5jZSBhbmQgaXQgd291bGQgY29udGludWUuIApCdXQgSSBydW5uaW5nIExpbnV4LCBhbmQgdXNlIGEgZGlmZmVyZW50IERBVyAoSGFycmlzb24gTWl4YnVzKSwgc28gaXQgdmVyeSBkaWZmZXJlbnQgc2l0dWF0aW9uLiBGb3IgZXhhbXBsZSBpbiBMaW51eCBJIGNhbm5vdCB1c2UgdGhlIG9wdGljYWwgUy9QRElGIG91dHB1dCwgYmVjYXVzZSBjdXJyZW50bHkgdGhhdCBwb3J0aW9uIG9mIHRoZSBhdWRpbyBkcml2ZXIgaXMgdW5maW5pc2hlZCBpbiBMaW51eCwgYnV0IHRoYXQgc2hvdWxkIHdvcmsgZmluZSBpbiBXaW5kb3dzLiBBbm90aGVyIGlzc3VlLCBhbmQgdGhpcyBtYXkgaW1wYWN0IHdpbmRvd3MsIGlzIHRoZSBncm91bmQgbG9vcCBub2lzZSBlZmZlY3QgZnJvbSB0aGUgYW5hbG9nIG91dC4gClRoZXNlIGFyZSB0aGUgc2hhbGxvd3Mgd2hlcmUgZmlzaCBjb21lIHRvIGxheSBlZ2dzIGFuZCBtdWx0aXBseS4gCk1vcmUsIEkgZmVlbCB0aGF0IEkgaGF2ZSBub3cgbW92ZWQgb24gZnJvbSB0aGVzZSBjYXNlcy4KQ29tYmluZSB0aGUgZmF0IGFuZCBiZWVzd2F4IGluIGEgc21hbGxlciBib3dsClRoaXMgY2FuIGJlIGV4dHJlbWVseSBiZW5lZmljaWFsIGlmIHlvdSBoYXZlIG9uZSBhcmVhIGZvciB5b3VyIENsYXkgUG9rZXIgQ2hpcHMsIGFuZCBhbm90aGVyIGFyZWEgZm9yIGFkbWluaXN0cmF0aXZlIGR1dGllcy4uIApXaGVuIHRoZSBwcmluY2lwYWwgcmVwYXltZW50IGlzIG5ldHRlZCBvdXQsIHRoZSBjb3N0IG9mIG93bmVyc2hpcCBpcyBsZXNzIHRoYW4gcmVudGluZyBpbiBtb3N0IGNvbWJpbmF0aW9ucyBvZiBob3VzaW5nIHR5cGVzIGFuZCBsb2NhdGlvbnMuCk15IGV4cGVyaWVuY2Ugd2l0aCBzdWNoIHRoaW5ncyBpcyBsaW1pdGVkIHRvIGludGVycHJldGluZyByZWRkaXQgY29tbWVudHMsIGJ1dCBJIHRoaW5rIGEgd2hpbGUgYWdvIHBlb3BsZSB3ZXJlIGdvaW5nIHRocm91Z2ggYSBwaGFzZSB3aGVyZSBldmVyeW9uZSB3YXMgdGFsa2luZyBhYm91dCBhbmFsIHNleCAobWFuIHRvIHdvbWFuKSBhbmQgdGhlbiB0aGUgbmV4dCAibmV3IG5vcm1hbCIgd2FzIG1lbiBnZXR0aW5nIHBlbmV0cmF0ZWQgd2l0aCBkaWxkb3MuIEFsdGhvdWdoIEkgbm90IHJlYWxseSBzdXJlIGhvdyB0aGF0IHdvdWxkIG1ha2UgTWFsbG9yeSBsdWNreS4gClBvaW50LCBmYXIgbW9yZSBzdWJ0bGUgdGhhbiBJIGFtIG1ha2luZyBpdCBoZXJlLCBpcyB0aGF0IHNvbWVob3cgY2FwaXRhbGlzbSBzdWNrZWQgcm9tYW5jZSBpbnRvIGl0IGFuZCBtYWRlIG91ciBpbnRpbWF0ZSByZWxhdGlvbnNoaXBzIGFib3V0ICJ3b3JrIiBhbmQgZXZlbiAic3VydmVpbGxhbmNlLiIuIApMZXMgY29uc2VydmF0ZXVycyBvbnQgcHJvZml0IGR1IHJldG91ciBkZSBNYXJjIEVtZXJ5IGF1Q2FuYWRhIHBvdXIgbGFuY2VyIHVuZSBmbGNoZSBhdXggbGlicmF1eC4gTGUgbWluaXN0cmUgZmRyYWwgZGUgbGEgU2N1cml0IHB1YmxpcXVlLCBTdGV2ZW4gQmxhbmV5LCBhIHB1YmxpIHVuIGNvbW11bmlxdSBkYW5zIGxlcXVlbCBpbCBhZmZpcm1lIHF1ZSBsZXMgRW1lcnkgc29udCBkZSBmZXJ2ZW50cyBwYXJ0aXNhbnMgZGUgbGEgdmlzaW9uIGRlIEp1c3RpbiBUcnVkZWF1IGRlIGxnYWxpc2VyIGxhIG1hcmlqdWFuYSwgcXVpIGF1cmFpdCBwb3VyIGVmZmV0IGRlIGZhY2lsaXRlciBzb24gYWNjcyBhdXggamV1bmVzLCBkcGxvcmUgdCBpbC4KV2hlbiAodGhlIHBlcmNlcHRpb24gb2YpIFJ1cGEgZGlzc29sdmVzLCB0aGVuIHNvIGRvIHRoZSBib3VuZGFyaWVzIG9mIG9iamVjdHMsIGluY2x1ZGluZyBvdXIgc2VsdmVzLiBUaGF0IHdoZXJlIHRoZSBzYXlpbmcgb2YgImJlY29taW5nIG9uZSB3aXRoIGV2ZXJ5dGhpbmciIGNvbWVzIGZyb20uIEluIHJlYWxpdHkgaXQgbm90ICJvbmUiIGJlY2F1c2UgZXZlbiB0byBzYXkgIm9uZSIgcmVxdWlyZXMgYSBwZXJjZXB0aW9uIG9mIHJ1cGEuCllvdSBjYW4gYWx3YXlzIGNhbmNlbCB0aGUgdHJpYWwgYW5kIHJldHVybiBiYWNrIHRvIHlvdXIgQmFzaWMgc3RhdHVzLiAKV2l0aCBoZXIgcGVuY2hhbnQgZm9yIG91dHJhZ2VvdXMgY29zdHVtZXMsIGxlc2JpYW4gbGVhbmluZ3MsIGZldGlzaCBmb3IgYm9uZGFnZSBhbmQgYSBwb3R0eSBtb3V0aCB3aGljaCB3b3VsZCBtYWtlIEdvcmRvbiBSYW1zYXkgYmx1c2gsIHRoZSBQb2tlciBGYWNlIHNpbmdlciBoYXMgYWxsIHRoZSBoYWxsbWFya3Mgb2YgYSBwb3Agcm95YWwuCkEgc2VyaWVzIG9mIHdlbGwgb3JjaGVzdHJhdGVkLCByZWxlbnRsZXNzLCB3ZWxsIGZ1bmRlZCwgcmlnaHQgd2luZyBhdHRhY2tzIHRoYXQgYXJlIHVucHJlY2VkZW50ZWQgc2luY2UgdGhlIE1jQ2FydGh5IGVyYS4gT3VyIGVmZmVjdGl2ZSB3b3JrIGVtcG93ZXJpbmcgQWZyaWNhbiBBbWVyaWNhbiBhbmQgbG93IGluY29tZSB2b3RlcnMgbWFkZSB1cyBhIHRhcmdldC4gVGhlIHZpZGVvcyB3ZXJlIGEgbWFudWZhY3R1cmVkLCBzZW5zYXRpb25hbCBzdG9yeSB0aGF0IGxlZCB0byBydXNoIHRvIGp1ZGdtZW50IGFuZCBhbiB1bmNvbnN0aXR1dGlvbmFsIGFjdCBieSBDb25ncmVzcy4KR2VudGx5IHJvbGwgdGhpcyBlZ2cgb3ZlciB0aGUgYnJ1aXNlIHVudGlsIHRoZSBlZ2cgd2FybXMgdXAuIApIb3cgbWFueSBoaXQgc29uZ3MgZG9lcyBMYWR5IEdhZ2EgaGF2ZT8KSXQga2luZCBvZiBwcmVzdXBwb3NlcyB0aGUgZXhpc3RhbmNlIG9mIGdvZCBhbmQgaW50ZXJwcmV0cyB0aGUgcmVsaWdpb3VzIHNjcmlwdHVyZSBldGMuIFRvIGxlYXJuIGFib3V0IHRoZSBkaXZpbmUuIApJIHN0aWxsIG9ubHkgc2xlZXAgNiA3IHVucmVzdGZ1bCBob3VycywgYnV0IEkgZ2F2ZSB1cCBuaWdodCBsaWZlIGFmdGVyIG1hcnJpYWdlLiBJdCBqdXN0IG5vdCByZWFsbHkgcmVzcGVjdGZ1bCwgYW5kIGxhdGUgbmlnaHQgcHJvd2xpbmcgYWJvdXQgY29tZXMgd2l0aCBjb25ub3RhdGlvbnMuIE15IG5pZ2h0IGFjdGl2aXRpZXMgcmFyZWx5IGludm9sdmVkIGdpcmxzLCBidXQgZXZlbiBzbywgSSB3b3VsZG4gZmVlbCBjb21mb3J0YWJsZSB3aXRoIGhlciBiZWluZyBvdXQgYXQgYWxsIGhvdXJzLCBzbyBJIG9mZmVyIHRoZSBzYW1lLgpLcnVnbWFuIGlzIHNrZXB0aWNhbCBvZiB0aGUgcHJvIG1hcmtldCBjaGVlcmxlYWRpbmcgb2YgdGhlIE9iYW1hIGFkbWluaXN0cmF0aW9uLkl0J3MgYSBiaXQgZGlzYXBwb2ludGluZyB0byBzZWUgdGhlIE9iYW1hIGFkbWluaXN0cmF0aW9uIGVuZ2FnaW5nIGluIHRoaXMgc29ydCBvZiBtYXJrZXQgd29yc2hpcCAgIGhhaWxpbmcgbWFya2V0cyBhcyBhIEdvb2QgVGhpbmcgaW4gdGhlbXNlbHZlcywgcmF0aGVyIHRoYW4gYXMgYW4gb2Z0ZW4gYnV0IG5vdCBhbHdheXMgdXNlZnVsIG1lYW5zIHRvIGFuIGVuZC4gClRoZSBSZWNyZWF0aW9uIGFuZCBXZWxsbmVzcyBDZW50ZXIgZW5jb3VyYWdlcyBzdHVkZW50cywgZmFjdWx0eSwgYW5kIHN0YWZmIHRvIHB1cnN1ZSBsaWZlbG9uZyBoZWFsdGggYW5kIHdlbGxuZXNzLiAKNy4gSW5jb3Jwb3JhdGUgZ3Jvd3RoIHRoaW5raW5nIGludG8gZXZlcnl0aGluZyB5b3UgZG8sIGV2ZXJ5IGFjdGlvbiB5b3UgdGFrZSwgZXZlcnkgaW52ZXN0bWVudCB5b3UgbWFrZSwgZXZlcnkgY29udGFjdCB5b3UgZm9yZ2Ugd2l0aCB5b3VyIGJ1eWVyIG9yIG1hcmtldHBsYWNlLiBMZXQncyB0YWtlIEtldmluIFRydWRlYXUgYXMgYW4gZXhhbXBsZS4gCklmIHdlIGFsbCBtb3ZlZCBhd2F5IGZyb20gY2l0aWVzIHRvIHJ1cmFsIHByb3BlcnR5IHdlIHF1aWNrbHkgbG9zZSB0aGUgYWJpbGl0eSB0byBtYWtlIG1ham9yIHBvc2l0aXZlIGlubm92YXRpb25zIHRvIG91ciBzb2NpZXR5LiAKSXQgbWFrZXMgZ3JpbmRpbmcgaW5jcmVkaWJseSBzdHJlc3NmdWwgYmVjYXVzZSBhbGwgdGhyZWUgdHlwZXMgd2lsbCBwbGF5IGNvbXBsZXRlbHkgZGlmZmVyZW50bHkgc28geW91IGhhdmUgbm8gaWRlYSBob3cgY2F1dGlvdXMgeW91IG5lZWQgdG8gYmUgYXQgc2V2ZXJhbCBzdGFnZXMgb2YgdGhlIGdhbWUuIFlvdSBuZWVkIGEgd2F5IHRvIGF0IGxlYXN0IGdhdWdlIHRoZSBiYXNpYyB0ZW1wbyBvZiB0aGUgcGxheWVyIGJlY2F1c2UgbG93IHRvIG1pZCBkaWFtb25kIHZzIGhpZ2ggZGlhbW9uZCBhcmUgdHdvIGNvbXBsZXRlbHkgZGlmZmVyZW50IGxlYWd1ZXMuT29ncmF5SmluIEFpciBHcmVlbiBXaW5ncyAxIHBvaW50ICBzdWJtaXR0ZWQgMyB5ZWFycyBhZ29TZXJpb3VzbHksIEJ5dWwgaXMgbm90IHRoZSBiZXN0IGluIHRoZSB3b3JsZC4gCkFueSBkaXZpZGVuZHMgYmV5b25kIDgwMSBhIHllYXIgbm8gbG9uZ2VyIGdldCB5b3UgYmVuZWZpdHMgICB0aGVuIGl0IG5vIGxvbmdlciBtYXR0ZXJzIHdoZXRoZXIgeW91ciBpbnZlc3QgZnVydGhlciBpbiBkaXN0cmlidXRpbmcgb3IgYWNjdW11bGF0aW5nIGZ1bmRzLgpNb25ldGFyeSBwb2xpY3kgbmVlZGVkIG1vcmUgaGVscCBmcm9tIGZpc2NhbCBwb2xpY3kgYXQgdGhlIHN0YXJ0IG9mIGxhc3QgeWVhciwgYnV0IHRoZSBnb3Zlcm5tZW50IGRpZG4ndCBwcm92aWRlIGFueS4gVGhlIE9wcG9zaXRpb24gbWlnaHQgc2VlayB0byBleHBsb2l0IHRoYXQgZmFpbHVyZSwgYnV0IGlmIGl0IGRvZXMsIGl0IHdvdWxkIGhhdmUgdG8gZXhwbGFpbiBob3cgaXRzIGNvbnN0YW50IG5hZ2dpbmcgYWJvdXQgYnVkZ2V0IGRlZmljaXRzIGlzIGhlbHBpbmcgbWF0dGVyczogVGhlIGxhdGVzdCBHRFAgZmlndXJlcyBzaG93IHRoYXQgYXVzdGVyaXR5IHdvdWxkIG9ubHkgaHVydCB0aGUgZWNvbm9teSBub3cuLiAKVGhlIGJhc2ljIHBvaW50IG9mIHRoZXNlIHRoZW9yaXN0cyBpcyB0aGF0IGlkZW50aXR5IHBvbGl0aWNzIGFyZSBhIHRyYXAgIHdoZXRoZXIgaXQgYWJvdXQgbGliZXJhdGluZyBnYXlzIG9yIHdvbWVuIG9yIEJsYWNrcy4gSWRlbnRpdHkgcG9saXRpY3MgcHJvbWlzZSBsaWJlcmF0aW9uLCBidXQgaW4gZmFjdCBvZnRlbiBqdXN0IG1ha2UgbW9yZSAicmVhbCIgdGhlIHZlcnkgY2F0ZWdvcmllcyBvZiBvcHByZXNzaW9uIHVwb24gd2hpY2ggdGhleSBiYXNlZC4gSW4gb3RoZXIgd29yZHMsIGJ5IG1ha2luZyAiZ2F5cyIgcmVhbCwgTWlsayBoZWxwZWQgbWFrZSAic3RyYWlnaHRzIiBzYWZlLiBPbmUgaXMgZWl0aGVyIGdheSBvciBzdHJhaWdodC4gU3RyYWlnaHQgbWVuIGRvbiBoYXZlIHRvICJjb21lIG91dCIgYmVjYXVzZSB3ZSBhbGwga25vdyB0aGF0IHRoZXkgZG9uIHJlYWxseSBoYXZlIGhvbW9lcm90aWMgZGVzaXJlcyBvciBmaW5kIHRoZSBhbnVzIHBsZWFzdXJhYmxlIG9yIGhhdmUgc2V4dWFsIGVuY291bnRlcnMgd2l0aCBvdGhlciBtZW4gKGV2ZW4gaWYgdGhleSBkbykuIEFzIGEgZ3JvdXAsIHN0cmFpZ2h0IHBlb3BsZSBleGlzdCB3aXRob3V0IG91dGluZywgYnV0IGFsc28gd2l0aG91dCBhIGxvdCBvZiBjcml0aWNhbCBhbmFseXNpcyBvZiB3aGF0IHRoZXkgcmVhbGx5IGRvIGFuZCByZWFsbHkgZGVzaXJlLiBGb3IgdGhlIG1vc3QgcGFydHMsIHN0cmFpZ2h0cyBhcmUgYW4gdW5tYXJrZWQgY2F0ZWdvcnkgIGhhcmRseSB3b3J0aHkgb2Ygb2JzZXJ2YXRpb24uIFRoYXQgd2h5IHdoZW4gSSBmaXJzdCBzdGFydGVkIHRlYWNoaW5nICJTb2Npb2xvZ3kgb2YgSGV0b2Vyc2V4dWFsaXR5IiBpdCB3YXMgY29uc2lkZXJlZCBvbmUgb2YgdGhlIDEwIHN0dXBpZGVzdCBjb3Vyc2VzIGluIEFtZXJpY2EgYnkgdGhlIHVsdHJhIGNvbnNlcnZhdGl2ZSBOYXRpb25hbCBSZXZpZXcuIEhvdyBzdHVwaWQ/IFRoZXJlIG5vIHNvY2lvbG9neSB0byBoZXRlcm9zZXh1YWxpdHkuIEl0ICJuYXR1cmFsIiBhbmQgbm90IHdvcnRoeSBvZiBpbnZlc3RpZ2F0aW5nLgpTY29yaW5nTWFueSBtYXRjaGVzIGluIGxhd24gdGVubmlzIGFyZSByZW1lbWJlcmVkIGZvciB0aGVpciBuYWlsIGJpdGluZyBwb2ludHMuIEhlcmUsIGl0IGlzIHBvc3NpYmxlIHRvIHNjb3JlIG9uIHlvdXIgb3Bwb25lbnQncyBzZXJ2ZSwgc28gcG9pbnRzIGZseSBhcm91bmQgdmVyeSBxdWlja2x5IG9uIGJvdGggc2lkZXMuCkJ1dCBpdCBpcyBhIHBoeXNpY2FsbHkgc3RyZW51b3VzIHNlcnZpY2Ugam9iLCB3aGVyZSB0aGUgbGFib3IgaW52b2x2ZXMgcXVpdGUgaW50ZW5zaXZlIGZvY3VzZWQgbWVudGFsLCBlbW90aW9uYWwsIGFuZCBwaHlzaWNhbCBhdHRlbnRpb24gdG8geW91LCB0aGUgY2xpZW50LCBmb3IgYW4gaG91ciBvciBtb3JlLiBNeSBzcGEgYmlsbHMgJDY1L2hyIGFuZCBJIG1ha2UgYXQgYmVzdCAkMTcgZnJvbSB0aGF0LiAKVGhlIHNwb3J0cyBjbHViIGlzIHRoZSBwYXJlbnQgYm9keSBvZiB0aGUgZm9vdGJhbGwgbmV0YmFsbCBjbHViIGluIGEgdW5pcXVlIGFycmFuZ2VtZW50IGluIHRoZSBPdmVucyBhbmQgTXVycmF5IGxlYWd1ZS4gCkkgZ2V0IGJhY2sgYW5kIHNlY3VyaXR5IGlzIHdhaXRpbmcgZm9yIG1lLiAKSWYgeW91IGxvb2sgdXAgZnJvbSBzdHJlZXQgbGV2ZWwgeW91IHdpbGwgYWxzbyBzZWUgc2lnbnMgYWR2ZXJ0aXNpbmcgdGhlIGJ1c2luZXNzZXMgaW4gdGhlIHNpZGUgc3RyZWV0LCBpbmNsdWRpbmcgb25lIGZvciBQaW5rIE1hc3NhZ2UsIHdoaWNoIGlzIHVubWlzc2FibGUgZHVlIHRvIGl0cyBicmlnaHQgY29sb3VycyBhbmQgaGVhcnQgc2hhcGVzLiAKUHJvZ3Jlc3NpdmUgdmlkZW8gcG9rZXIgZ2FtZXMgZG8gbm90IG5vcm1hbGx5IHJlcXVpcmUgcGxheWVycyB0byBwdXQgYSBzaWRlIGJldC4gUHJvZ3Jlc3NpdmUgamFja3BvdHMgaW4gdmlkZW8gcG9rZXIgYXJlIHRyaWdnZXJlZCB3aGVuZXZlciB5b3UgaXMgZGVhbHQgdGhlIHF1YWxpZnlpbmcgaGFuZDogYSBSb3lhbCBGbHVzaC4gT3V0IG9mIHRoZSBib3ggdGhlIHNpdHVhdGlvbiB3aXRoIENhcmliYmVhbiBTdHVkIFBva2VyLCBwbGF5ZXJzIGNhbiBlYXJuIHVwIHRvIDEwJSB3aXRoIHRoZSBwcm9ncmVzc2l2ZSBwb29sIGZvciBxdWFkcyBhbmQgc3RyYWlnaHQgZmx1c2hlcy4KV2hlcmVhcyB3aXRoIENvbG9yYWRvL0NhbnlvbnMsIHRoZXJlIGlzbiBhIGxvbmcgaGlzdG9yeSBvZiB0aGVzZSBiZWluZyBvZmYgcm9hZCBtb25zdGVycyBhbmQgdHJhaWwgYmVhc3RzLiBXaGlsZSBvZmYgcm9hZCBwYWNrYWdlcyBhcmUgb2ZmZXJlZCwgdGhlIG1ham9yaXR5IG9mIHVuaXRzIHNvbGQgd2lsbCBiZSBub3JtYWwgdHJpbXMgYW5kIHdpbGwgYmUga2VwdCBzdG9jay4KVHlydW5ub3NhdXJ1cyB1ClRoaXMgaW5jbHVkZXMgc2V0dGluZyBhbmQgYWNoaWV2aW5nIHN1Y2ggZ29hbHMgYXMgbmV0d29ya2luZyB3aXRoIG90aGVyIG1hc3NhZ2UgcHJvZmVzc2lvbmFscywgbGVhcm5pbmcgbmV3IG1hc3NhZ2UgdGVjaG5pcXVlcywgZGV2ZWxvcGluZyBvbmUncyBidXNpbmVzcyBhY3VtZW4gYW5kIHRha2luZyBnb29kIHBoeXNpY2FsIGNhcmUgb2Ygb25lJ3MgaGVhbHRoLiBUaGVzZSBnb2FscyBzaG91bGQgYmUgaW5jb3Jwb3JhdGVkIGludG8gYSBwcm9mZXNzaW9uYWwgZGV2ZWxvcG1lbnQgcGxhbi4gClRoZXkgd2lsbCBzbGVlcCBpbiB0aGUgc2FtZSByb29tIHdoZXJlIHRoZXkgd29yayB0byBzYXZlIG1vbmV5IChhcyB0aGUgcm9vbXMgYXJlIHJlbnRlZCBieSB0aGUgZGF5KSwgYW5kIHRoZXkgZm9jdXMgb24gd29ya2luZyBhcyBtdWNoIGFzIHBvc3NpYmxlIHRvIG1heGltaXplIHdoYXQgdGhleSB0YWtlIGhvbWUuIFRoZXkgdXN1YWxseSBtYWtlIG1lIGZlZWwgd2VsY29tZSBhcyBhIGN1c3RvbWVyLCBoYXZlIGVtcGF0aHkgZm9yIG15IG1vdGl2YXRpb25zIGZvciBiZWluZyB0aGVyZSwgYW5kIHRyeSBnZW51aW5lbHkgaGFyZCB0byBtYWtlIHRoZSBleHBlcmllbmNlIHNhdGlzZnlpbmcuIEkgdHJ5IHRvIGJlIHRoZSBuaWNlc3QsIG1vc3QgcmVzcGVjdGZ1bCBjdXN0b21lciB0aGV5IHNlZSB0aGF0IGRheSwgYW5kIEkgYWx3YXlzIHBheSBtb3JlIHRoYW4gdGhleSBhc2sgZm9yLiAKU3VwZXJhZ2dyb2RvdWNoZSAgMCBwb2ludHMgIHN1Ym1pdHRlZCA4IG1vbnRocyBhZ28KV2hlbiB5b3UgbXVsdGl3YXkgeW91IGhhdmUgdG8gd29ycnkgbGVzcyBhYm91dCBiZWluZyBleHBsb2l0YWJsZSBhbmQgbW9yZSBhYm91dCB5b3VyIG92ZXJhbGwgaGFuZCBzdHJlbmd0aC4gQ2hlY2sgcmFpc2luZyA0IGhhbmRlZCBpcyBzdXBlciBzdHJvbmcuIEFueSBvbmUgb2YgdGhvc2UgcGxheWVycyBjb3VsZCBoYXZlIGhpdCBhIGJpZyBoYW5kLiAKQi4gQW4gaW5mbHVlbmNlIG9yIGVmZmVjdDogVGhlIG1hbmFnZXIgaGFkIGEgaGFuZCBpbiBhbGwgbWFqb3IgZGVjaXNpb25zLgpZb3UgY2FuIHRlbGwgbWUgYWJvdXQgaGlzIHdpdGhkcmF3YWxzIGZ1cnRoZXIgaWYgeW91IHdvdWxkIGxpa2UgYW5kIGkgYmUgaGFwcHkgdG8gdGVsbCB5b3UgYWJvdXQgd2hhdCBhbiBvcGlhdGUgYWRkaWN0cyB3aXRoZHJhd2FscyBhcmUgbGlrZS4gV2hhdCB0byBleHBlY3QgaW4gdGhlIGZ1dHVyZSBpZiB5b3Ugc3RheWluZyBhcm91bmQuIApIb3JzZXJhZGlzaCBhbmQgZ2FybGljIHByaW1lIHJpYgpUaGUgTWVycml0dCBSQ01QIGFyZSBjb250aW51aW5nIHRoZWlyIGludmVzdGlnYXRpb24gaW50byBhbGxlZ2F0aW9ucyBvZiBzZXh1YWwgYXNzYXVsdHMgb2NjdXJyaW5nIGF0IGEgbG9jYWwgbWFzc2FnZSB0aGVyYXB5IGJ1c2luZXNzLCBhZnRlciBtdWx0aXBsZSB2aWN0aW1zIGNhbWUgZm9yd2FyZC4gSW52ZXN0aWdhdG9ycyBhcmUgc2Vla2luZyB0byBjb25maXJtIHdoZXRoZXIgb3RoZXIgdmljdGltcyBleGlzdC4KQWxzbyBpZiBoZSBoYXMgYSB2YWx1ZSBoYW5kIGxpa2UgYSBzZXQgb3IgbWF5YmVlIG92ZXJwYWlyIGhlIHdpbGwgbGlrZWx5IHNob3ZlIGhpbXNlbGYuIApJdCB3YXMgbGlrZSBEdXN0aW4gQnlmdWdsaWVuIHdhcyBpbiBoaXMgY3JlYXNlIGFzIHRoZSBjYXJkcyBzaW1wbHkgc2hvdmVkIEx1b25nbyBvdXQgb2YgdGhlIHdheSB0byBlbmQgaGlzIGRheS4uIApSL0Fza0dhbWVzOiBIYXZlIGEgbW9yZSBnZW5lcmFsIHF1ZXN0aW9uIGFib3V0IGdhbWluZz8gVGhpcyBpcyB0aGUgc3VicmVkZGl0IGZvciB5b3UhIEl0IGxpa2UgQXNrUmVkZGl0IGJ1dCBmb3IgZ2FtZXMuCkhhbW1Tb2xvIHUKV2hvIHdpbGwgcHJldmFpbD8gT25seSB0aW1lIHdpbGwgdGVsbC4uIApUaGlzIGhlbHBzIHRoZSBnb2xmZXIgbW9yZSBxdWlja2x5IGRldmVsb3AgZmx1aWQsIHdlbGwgY29vcmRpbmF0ZWQgbW92ZW1lbnRzLi4gCkFuZCBsaWtlIEkgc2FpZCB0aGlzIHJlc3BvbnNlIGlzIGZvciB0aG9zZSBtb3JlIHN5bXBhdGhldGljIHRvIHRoZSBHYXVkaXlhIGNhdXNlIHJhdGhlciB0aGFuIGEgZGlyZWN0IHNoYXN0cmljIHJlc3BvbnNlLiBNb3N0IG9mIEdhdWRpeWEgcGhpbG9zb3BoeSByZXN0cyB1cG9uIHRoZSBkaXZpbml0eSBvZiBNYWhhcHJhYmh1LCBhbmQgaWYgcGVvcGxlIGFyZW4gd2lsbGluZyB0byBhY2NlcHQgdGhlIHNoYXN0cmljIHByYW1hbiBicm91Z2h0IGluIHN1cHBvcnQgb2YgdGhhdCwgaXRzIGltcG9zc2libGUgdG8gaGF2ZSBhbnkgZm9ybSBvZiBkZWJhdGUgcmVnYXJkaW5nIGl0LkJ1dCBJIGRvbid0IGZpbmQgaXQgc3VycHJpc2luZyB0aGF0IHBlb3BsZSBhdHRhY2sgUHJhYmh1cGFkYSdzIGNoYXJhY3RlciBzaW5jZSBoZSBoaW1zZWxmIHdhcyB2ZXJ5IGRpc3Jlc3BlY3RmdWwgdG93YXJkcyBtYW55IHRlYWNoZXJzIGFuZCBldmVuIEdvZHMuIApIZSBoYWQgJDEsNjAwIGluIGJvbnVzZXMsIGJhY2sgcGF5IGFuZCB0cmF2ZWwgZXhwZW5zZXMgaW4gaGlzIHBvY2tldC4gCkRlYXIgMjlraW5kZXJnYXJ0ZW5jdXRpZXMsIFRoZSBuZXcgRGlnaXRhbCBLZXkgYXBwIGhhcyBkb25lIHdvbmRlcnMgZm9yIHRyYXZlbGVycyBpbiB0aGlzIGdlbmVyYXRpb24uIEl0IGlzIGlubm92YXRpdmUgYW5kIGNvbnZlbmllbnQgYW5kIEkgYW0gZ2xhZCB0aGF0IHlvdSBhcmUgdGFraW5nIGFkdmFudGFnZSBvZiB0aGlzIG5ldyBwcm9ncmFtIEhpbHRvbiBoYXMgZm9yIEhpbHRvbiBob25vcnMgbWVtYmVycy4gSSBhbHNvIHdpc2ggdG8gdGhhbmsgeW91IGZvciB5b3VyIHdvbmRlcmZ1bCBjb21tZW50cyByZWdhcmRpbmcgeW91ciByZWNlbnQgc3RheSB3aXRoIHVzIGFuZCB0aGUgZXhwZXJpZW5jZSB5b3UgaGFkIHdoaWxlIHlvdSBhcmUgaGVyZS4gCkkgY2FuJ3Qgc2F2ZSBvciBwcmVwYXJlIGZvciBhbnl0aGluZyBpbiBjYXNlIG9mIGFuIGVtZXJnZW5jeS4gSSBmaW5kIG91dCB0aGF0IG15IGdyYW5kbW90aGVyIG9uIHNvY2lhbCBzZWN1cml0eSBtYWtlcyBtb3JlIG1vbmV5IHRoYW4gSSBkby4gSSB3YXMgdG9sZCB0byB0YWtlIGEgbG9hbiBvdXQgYW5kIGZpZ2h0IHRoaXMgYnV0IEkganVzdCBkb24ndCBrbm93IHdoYXQgbXkgb2RkcyBhcmUgb2YgZXZlbiBjb21pbmcgb3V0IG9uIHRvcC4gCkphY2sgaGFzIGZvdXIgc2V2ZW5zIGFjZSBoaWdoLCBUb20gaGFzIGZvdXIgc2V2ZW5zIGtpbmcgaGlnaC4gSmFjaydzIGFjZSBpcyBoaWdoZXIgdGhhbiB0aGUgS2luZyBzbyBoZSB3aW5zLiAoRnVsbCBBbnN3ZXIpCkV2ZXJ5b25lIGlzIHdlbGNvbWUuIFRoZSBTaXRrYSBDaGFtYmVyIG90IENvbW1lcmNlIG1ldCBUaHVyc2RheSBub29uIGF0IHRoZSBTaXRrbiBJbm4gZm9yIGEgZGlubmVyIG1lZXRpbmcuIFRoZXkgZGVjaWRlZCB0byB3ZWxjb21lIHRoZSBsZWdpc2xhdHVyZSA6biBhcHByb3ByaWF0ZSBzdHlsZSBhbmQgUHJlc2lkZW50IFRlZCBLZXR0bGVzb24gYXBwb2ludGVkIE1heW9yIFRob21hcyBUaWxzb24sIExlc2xpZSBZYXcsIE8uIApUaGUgYmVoYXZpb3VyIG9mIHRoZSBzdXBwb3NlZGx5IGFic3RlbWlvdXMgbW9ua3MgaGFzIGxlZCB0byBLb3JlYW4gbWVkaWEgc3BlY3VsYXRpb24gb2YgYSBwb3dlciBzcGxpdCB3aXRoaW4gdGhlIG9yZGVyLgpUaGUgY2FybWFrZXJzIGFsc28gaW5jb3Jwb3JhdGVkIGhlYXRpbmcgdW5pdHMgdW5kZXIgdGhhdCBwZXJmb3JhdGVkIGxlYXRoZXIgZm9yIHRob3NlIGNvbGQgZGF5cyBhcyB3ZWxsLi4gCkFuZCB0aGlzIGZlZWxzIGxpa2UgYSBidWxsc2hpdCBhcnRpY2xlIHBsYW50ZWQgdG8gbWFrZSAvci9lc2lzdCBsb29rIHN0dXBpZCBhcyBwZW9wbGUganVzdCByZWFkIHRoZSBoZWFkbGluZSBhbmQgbm90aGluZyBlbHNlLiBFdmVyeXRoaW5nIGFib3V0IHRoZSB0aXRsZSBpcyBidWxsc2hpdC4gCldoZW4gRGVjZW1iZXIgY2FtZSwgd2UganVzdCBhYm91dCBmcm96ZS4gU28gSSB0b29rIGFsbCB0aGUga2lkcyBhbmQgd2Ugd2Fsa2VkIGFuZCB3YWxrZWQgdW50aWwgd2UgZm91bmQgYSBzdG9yZS4gVGhlIG93bmVyIHRvb2sgcGl0eSBhbmQgZ2F2ZSB1cyBzb21lIGJyZWFkIGFuZCBtaWxrLiAKVGhlIHBsYXllcnMgYXJlIHR5cGljYWxseSB0aGUgb25lcyB3aWxsaW5nIHRvIHBsYXkgbG90cyBvZiBvdGhlciBjYXNpbm8gZ2FtZXMgdG9vLgpQcm9tb3Rpb25hbCBTcGVjaWFscyBhbmQgRGlzY291bnRzIG1heSBub3QgYmUgY29tYmluZWQgb3Igc3Vic3RpdHV0ZWQgYW5kIG11c3QgYmUgc3VycmVuZGVyZWQgdGhlIGRheSBvZiB5b3VyIGFwcG9pbnRtZW50IGJlZm9yZSB0aGUgc2VydmljZSB0YWtlcyBwbGFjZS4KQWxpY2UgZXhjZWxsZWQgaW4gYWxsIHRoZSB0cmFkaXRpb25hbCBob21lbWFrZXIgc2tpbGxzICAgYmFraW5nLCBzZXdpbmcgYW5kIGVzcGVjaWFsbHkga25pdHRpbmcuIApIaXMgZmF0aGVyIGhhZCBhbHNvIGRlYWx0IHdpdGggc3Vic3RhbmNlIGFidXNlIGFuZCBhYmFuZG9uZWQgdGhlIGZhbWlseS5XaGlsZSB0aGUgcGFyb2xlIGlzIGNvbnNpZGVyZWQgdW5lc2NvcnRlZCwgUmljaGFyZCB3aWxsIGJlIHRyYW5zcG9ydGVkIGJldHdlZW4gaGlzIGluc3RpdHV0aW9uIGFuZCB0aGUgdHJlYXRtZW50IHByb2dyYW0gYnkgQ29ycmVjdGlvbmFsIFNlcnZpY2Ugb2YgQ2FuYWRhIHZlaGljbGVzIHdoaWxlIGFjY29tcGFuaWVkIGJ5IGEgc3RhZmYgbWVtYmVyIG9yIHRyZWF0bWVudCBlbXBsb3llZS4gSGUgd2lsbCBiZSBwZXJtaXR0ZWQgdG8gbGVhdmUgZm9yIHVwIHRvIGVpZ2h0IGhvdXJzIGVhY2ggdGltZSwgdHdpY2UgYSB3ZWVrIGZvciAxNSB3ZWVrcy5SaWNoYXJkIG11c3QgYWJpZGUgYnkgc3BlY2lmaWMgY29uZGl0aW9ucyB3aGlsZSBvbiBwYXJvbGUuIEhlIGlzbiB0byBjb250YWN0IHRoZSB2aWN0aW1zIG9yIGFueSBvZiB0aGVpciBmYW1pbHkgbWVtYmVycyB3aGV0aGVyIGluIHBlcnNvbiBvciBieSBzb2NpYWwgbWVkaWEsIGFuZCBoZSBpc24gdG8gYmUgaW4gdGhlIHByZXNlbmNlIG9mIGNoaWxkcmVuIHVuZGVyIGFnZSAxOC4uIApEZWNpZGUgaWYgeW91IHdhbnQgdG8gZ28gbW9zdGx5IHJhdmVud2luZywgbW9zdGx5IGRlYXRod2luZywgbW9zdGx5IGdyZWVud2luZywgcmF2ZW4vZGVhdGgsIHJhdmVuL2dyZWVuLCBkZWF0aC9ncmVlbiwgb3IgcmF2ZW4vZGVhdGgvZ3JlZW4uIEFuZCBnbyBmcm9tIHRoZXJlLgpCdXQgaXQgdG94aWMgYmVjYXVzZSB3ZSBkb24gdGVhY2ggcGVvcGxlIGhvdyB0byBkbyBpdCBpbiBhIHdheSB0aGF0IG1heGltaXplcyBnb29kIHJlc3VsdHMgKGl0IGZ1bm55KSBhcyB3ZWxsIGFzIG1pbmltaXppbmcgaGFybS4gCklmIEkgY2FuIHJlbWVtYmVyIHRoZW0gYnkgdGhlbiwgSSB0cnkgdG8gdGhpbmsgb2YgdGhlIG1vc3QgZWZmZWN0aXZlIHdheSB0byBicmluZyBpdCB1cCwgYmVmb3JlIGJyaW5naW5nIGl0IHVwLlNvbWV0aW1lcyBob25lc3R5IGlzIG5vdCB0aGUgYmVzdCBwb2xpY3kuIE15IGh1c2JhbmQgdXNlZCB0byBhbHdheXMgY29tZSBob21lIHN0cmVzc2VkIG91dCBhcyBoZWxsIGZyb20gd29yay4gSXQgc3Vja2VkLiAKR2V0IHJpZ2h0IG9uIGl0LCB0aGUgQ2FudWNrcyBnZW5lcmFsIG1hbmFnZXIgc2FpZCBGcmlkYXkgbW9ybmluZy4gV2FudCBoaW0gdG8gY29uY2VudHJhdGUgb24gdGhlIHdlZWtlbmQgYW5kIGhpcyB0ZWFtIGFuZCBhcyBzb29uIGFzIGhlIG91dCwgd2UgY29udGFjdCB0aGUgYWdlbnQgYW5kIGZhbWlseSBhbmQgc2VlIHdoYXQgdGhlaXIgaW50ZW50aW9ucyBhcmUgYW5kIGdvIGZyb20gdGhlcmUuIApCYXNpbmcgeW91ciB2aWV3IG9uIHdoYXQgeW91ciBmcmllbmRzIG9yIGZhbWlseSB0aGlua3MgaXMgYmVzdCBpc24gZ29pbmcgdG8gZ2V0IHlvdSBhbnl3aGVyZSBnb29kLCBnb3R0YSBmaWd1cmUgaXQgb3V0IG9uIHlvdXIgb3duLiAyIHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ28uIApEZWFyIGJyb3RoZXIgdG8gUGF0cmljaWEgU2F1bmRlcnMgKE1pa2UpLiAKTWFraW5nIHN1cmUgeW91IGdldCB2YWx1ZSBhbmQgbm90IHBheWluZyBvZmYsIGVzcGVjaWFsbHkgdnMgbXVsdGlwbGUgc3RyZWV0cyBvZiBhZ2dyZXNzaW9uIGlzIGNyaXRpY2FsIHRvIHByb2R1Y2luZyBnb29kIHJlc3VsdHMudGhlcmUgaXMgcGxlbnR5IG9mIHJvb20gZm9yIHdvcmtpbmcgaW50ZXJlc3RpbmcgbGluZXMgaW50byB5b3VyIGdhbWUgdGhhdCB3aWxsIGhlbHAgc3RpbXVsYXRlIHRoZSBvbGQgZ3JleSBtYXR0ZXIuIEFsc28sIGdhbWUgc2VsZWN0aW9uIGlzIGltcG9ydGFudCBhdCBhbGwgbGltaXRzLiAKSHlwYXRpYW5hdGEgdQpJIHJlYWxseSB0aGluayBhbGwgb2YgdGhvc2UgZm9sa3Mgb3V0IHRoZXJlIGxpa2UgeW91ciBtb21zIGNvd29ya2VyIGVuZCB1cCBzZXR0aW5nIHVucmVhc29uYWJsZSBleHBlY3RhdGlvbnMgYW5kIGdpdmUgYSBmYWxzZSBzZW5zZSBvZiB0aGUgYWN0dWFsIGNvc3Qgb2YgbGFib3IuIApMb2NhdGlvbiBpbmZvcm1hdGlvbiAgc3VjaCBhcyB5b3VyIGNvbXB1dGVyJ3MgSVAgYWRkcmVzcywgeW91ciBtb2JpbGUgZGV2aWNlJ3MgR1BTIHNpZ25hbCBvciBpbmZvcm1hdGlvbiBhYm91dCBuZWFyYnkgV2lGaSBhY2Nlc3MgcG9pbnRzIGFuZCBjZWxsIHRvd2VycyB0aGF0IG1heSBiZSB0cmFuc21pdHRlZCB0byB1cyB3aGVuIHlvdSB1c2UgY2VydGFpbiBTZXJ2aWNlcy4gCkhlIGlzIGEgYnJvb2RpbmcgZ3V5IHdobyB3aWxsIGdsYWRseSB0ZWxsIHlvdSBhYm91dCBhbnl0aGluZyB0aGF0IGJvdGhlcnMgaGltLCBhbmQgaG93IG11Y2ggaXQgYm90aGVycyBoaW0uIApQb3B1bGFyIFJKIE1hbGxpc2hrYSB3aWxsIGZhbWlsaWFyaXNlIGxpc3RlbmVycyB3aXRoIHRoZSBjb25jZXB0IG9mIHRoZSBnYW1lIHNob3cgYnkgcGxheWluZyB0aGUgcGFydG5lciBpbiBjcmltZS4gCk9uIG9uZSBoYW5kLCBpdCBncmVhdCB0byBoYXZlIGEgc2luZ2xlIFdPRCB0aGF0IGNhbiB0ZXN0IHlvdXIgZml0bmVzcyBhbmQgcHJvdmlkZSBhIGJlbmNobWFyayBmb3IgdGhlIGZ1dHVyZTsgd2hpbGUgYWxzbyBzaG93aW5nIHlvdXIgc3RhbmRpbmcgYW1vbmcgdGhlIGJveCBwb3B1bGF0aW9uLiAKSSBhZ3JlZSwgeW91IGNhbiBkcmFnIGEgc3R1ZGVudCB1bndpbGxpbmcsIGJ1dCBtb3N0IG9mIHRoZSB0aW1lLCBpZiB5b3UgdGFrZSB0aGUgdGltZSB0byBpbnRvIHlvdXIgc3R1ZGVudHMgZXllcyB0cmVhdCB0aGVtIGxpa2UgYSBwZXJzb24sIGFuZCBhY3R1YWxseSBmaW5kIG91dCB3aGF0IHRoZWlyIHByaW9yaXRpZXMgYXJlLCB5b3UgYmUgc3VycHJpc2VkIGhvdyBvZnRlbiB5b3UgY2FuIGVuZ2FnZSBzb21lb25lIG9yIGdpdmUgdGhlbSBzb21ldGhpbmcgcmVsZXZhbnQgdG8gd29yayBvbi4KQSBicmllZiBoaXN0b3J5IG9mIHRoZSBidWxsZG9nIGNob2tlLiBUaGVyZSBoYXZlIGJlZW4gd2F5IG1vcmUgb2YgdGhlbSB0aGFuIHlvdSB3b3VsZCB0aGluay4gSSd2ZSBzZWVuIHNldmVyYWwgYnJlYWtkb3ducywgbW9zdCBub3RhYmx5IHRoZSBHcmFjaWUgYnJlYWtkb3duLCBidXQgSSBjYW4ndCByZWNhbGwgdGhlIGxhc3QgdGltZSBzb21lb25lIGFjdHVhbGx5IHdlbnQgb3V0IGZyb20gYSBjaG9rZSBhcHBsaWVkIHRvIHRoZSBjaGluLiAKTm8gZmx1c2ggZHJhdywgbm8gc3RyYWlnaHQgZHJhdywgaGUgbmVlZHMgYSA1IG9yIEsuIFR1cm4gY29tZXMgb3V0IGEgNSwgcml2ZXIgY29tZXMgb3V0IGEgSy4gRnVsbCBib2F0IHdpbnMsIGRlYWxlciB0YWtlcyBhbGwgbXkgY2hpcHMgYW5kIGZsb2F0cyB0aGVtIG92ZXIuIApPbiBlZGl0OiBJIGFsc28gYXNzaW1pbGF0ZWQgYSBjb3VwbGUgb2YgYXJ0aWNsZXMgZnJvbSBibGFja3JhaW43OSwgaGVyZUkgZGlkIHRoZSBzYW1lIHRoaW5nIGEgY291cGxlIGRheXMgYWdvIGFuZCBzZWxmIGJhbm5lZCBteXNlbGYgZm9yIGEgeWVhci4gSXRzIG5vdCBzbyBtdWNoIHRoYXQgaSB3YXMgYSBsb3NpbmcgcGxheWVyIGJ1dCBJIGZvdW5kIG15c2VsZiBwbGF5aW5nIHBva2VyIGV2ZW4gd2hlbiBJIGRpZG4gd2FudCB0byBidXQgYmVjYXVzZSBJIGZlbHQgbGlrZSBJIGhhZCBub3RoaW5nIHRvIGRvLiBXaGVuIEkgd2FzIHBsYXlpbmcgSSB3b3VsZCBwbGF5IGltcGF0aWVudCBhbmQgZWFzaWx5IHNwZXdlZCBvZmYgMTBrKyB0aGlzIHllYXIgLiAKVGhlIGhhbmRzIHRvIGxvb2sgZm9yIGFyZSBhbnkgaGFuZCBjb250YWluaW5nIGFuIGFjZSBhbmQgYXQgbGVhc3Qgb25lIGxvdyBjYXJkICAgdGhlc2UgYWN0dWFsbHkgYWxsIHJ1biB2ZXJ5IGNsb3NlIGluIHZhbHVlLCBoYW5kcyB3aXRoIGJvdGggbG93IGFuZCBzdHJhaWdodCBwb3NzaWJpbGl0aWVzLCBkb3VibGUgc3VpdGVkIGhhbmRzLCBhbmQgaGFuZHMgd2l0aCBib3RoIGEgcGFpciBhbmQgdGhlIGFiaWxpdHkgdG8gbWFrZSBhIGxvdy4gClRoZSBmaXJzdCBpbXByb3ZlbWVudCB0byB0aGUgcmVwcm9kdWNlciBvZiB0aGUgJ1BlcmZlY3RlZCcgcGhvbm9ncmFwaCBvZiAxODg4IHdhcyAuIFdpdGggdGhlIGludHJvZHVjdGlvbiBvZiB0aGUgQW1iZXJvbGEgMzAsIDUwIDc1IGluIDE5MTUgdGhlIERpYW1vbmQgQyB3YXMgZGV2ZWxvcGVkLiAKVG8gZ2V0IGl0IGhhcmQsIHlvdSBoZWF0IHRyZWF0IGl0IChzb21lb25lIHNtYXJ0ZXIgdGhhbiBtZSBjYW4gdGVsbCB5b3UgZXhhY3RseSB3aHkgaXQgd29ya3MpLiAKSSBkb24gdGhpbmsgRUEgY2FyZXMgcGFzdCB0aGUgbW9uZXksIGJ1dCB0aGUgZGV2cyBoYXZlIHNhaWQgdGhpbmdzIG9uIHR3aXR0ZXIgYWJvdXQgdGhlIGNvbW1lbnRzLCBzbyBJIGtub3cgaXQgZWZmZWN0cyB0aGVtIHdoZW4gcGVvcGxlIGNvbWUgdG8gdGhlaXIgdHdpdHRlcnMgc2hvdXRpbmcgYXQgdGhlbSBvciBiZWluZyByZWFsbHkgcnVkZS4KU2hlIGJlIGEgaGVscGZ1bCBmb3JjZSBmb3IgdGhlIHBsYXllcnMsIGd1aWRpbmcgdGhlbSBhbmQgZ2l2aW5nIHRoZW0gaGludHMgKGFuZCBhbHNvIGFwcGVhcmluZyB0byBvbmUgb2YgdGhlbSBpbiBoaXMgZHJlYW1zKS4gCkRlc2lnbmVkIHdpdGggcGxheWVyIGNvbWZvcnQgaW4gbWluZCwgdGhlIGNhc2lubyBpcyBlcXVpcHBlZCB3aXRoIGEgc3RhdGUgb2YgdGhlIGFydCBhaXIgZmlsdHJhdGlvbiBzeXN0ZW0gYW5kIG9mZmVycyBleHRlbnNpdmUgbm9uIHNtb2tpbmcgYXJlYXMuIApJIHdpbGwgbmV2ZXIgdW5kZXJzdGFuZCBNaWNoYWVsIGFuZCBKZXJlbXkgb2JqZWN0aW9uIHRvIEFsd2F5cyBPcGVuLiAKVGhhdCB0aGUgcmVhc29uIGkgZ2VuZXJhbGx5IHdvdWxkIHNheSBpIHByZWZlciBSVEQuIEZvciBtZSBoaXMgZW5kaW5ncywgaW4gZ2VuZXJhbCB3ZXJlIG1vcmUgc2F0aXNmeWluZy4uIApIZXJtYW4gd29ya2VkIGZvciBPdGlzIFByZXNzdXJlIENvbnRyb2wgaW4gSG9iYnMsIE5NLCBPaWwgQ2l0eSwgTEEgYW5kIFZpdmlhbiwgTEEuIEx1bnksIENpZCBXaGl0ZSBhbmQgRnJhbmsgQm9vbmUgZm9ybWVkIEJvb25lIENvbXBhbnkuIApXaGljaCBzaWRlPyBJIGhvbmVzdGx5IG5vdCBzdXJlIHdoYXQgeW91IGFyZ3Vpbmcgbm93LiAKUGFuY29tcHV0YXRpb25hbGlzdCAgMSBwb2ludCAgc3VibWl0dGVkIDEwIGRheXMgYWdvCkl0IGdldHMgaW50cm9kdWNlZCBhZnRlciB0aGUgZmlyc3QgYXJjLCBhbmQgaXMgZXhhY3RseSB0aGUgc29ydCBvZiBvdmVyY29tcGxpY2F0ZWQgbmVyZCBiYWl0IHN0b3Agd2hpbGUgSSBleHBsYWluIGV4YWN0bHkgd2hhdCBteSBwb3dlcnMgYXJlIHRoaW5nIHlvdSBsb29raW5nIGZvci4gClRoZXJlIGFyZSB0d28gbWFpbiBtZXRob2RzOiB0aGVvcmV0aWNhbCBhbmQgZW1waXJpY2FsLiBUaGUgZmlyc3Qgb2YgdGhlc2UgaXMgdXNlZCB3aGVuIHRoZXJlIGlzIGEgcmVsYXRpdmVseSBzaW1wbGUgbW9kZWxmb3IgdGhlIHBvc3NpYmxlIG91dGNvbWVzIG9mIGEgdHJpYWwuIApVdGFoIHdhcyBqdXN0IGFzIGdvb2QgaW4gdGhlaXIgbGFzdCB5ZWFyIHdpdGggSGF5d2FyZCBhcyB0aGV5IGhhdmUgYmVlbiB3aXRoIE1pdGNoZWxsLiAKTXIgQmFsbCBlY2hvZXMgY2x1YiBvcGVyYXRvcnMgaW4gc2F5aW5nIHRoZSBvbmx5IHdheSBjbHVicyBjYW4gc3Vydml2ZSBhbmQgdGhyaXZlIGlzIGJ5IGVtYnJhY2luZyBjaGFuZ2UgYW5kIG1haW50YWluaW5nIGNvbW11bml0eSBmb2N1cy4gIlRoZSBjbHVicyB0aGF0IGFyZSBzdGVhbWluZyBhaGVhZCBhcmUgdGhvc2UgdGhhdCBhcmUgdGhvcm91Z2hseSBtb2Rlcm4sIGluIHRvdWNoIHdpdGggdGhlaXIgbWVtYmVycyBhbmQgYXJlIGRpdmVyc2lmeWluZyB0byBhIGdyZWF0ZXIgZXh0ZW50LCIgTXIgQmFsbCBzYWlkLiAKTWFueSBvZiB0aGUgYXBwbGljYW50cyBoYWQgbm90IHNldCBmb290IGluIGEgc2Nob29sIHNpbmNlIHRoZXkgYXR0ZW5kZWQgb25lIHRoZW1zZWx2ZXMgMzAgb3IgNDAgeWVhcnMgZWFybGllciwgYW5kIHNvIHdlcmUgc2VudCBvZmYgZm9yIGEgd2VlayBpbW1lcnNpb24uIApJIGRvdWJ0IEkgY2hhbmdlIHlvdXIgbWluZCwgYnV0IEkgdGhpbmsgeW91IGJsb3dpbmcgYSBsb3Qgb2YgdGhpbmdzIG91dCBvZiBwcm9wb3J0aW9uLiBCcmllIExhcnNvbiBpc24gZ29pbmcgYXJvdW5kIGluc3VsdGluZyB3aGl0ZSBtZW4sIHNoZSBjYWxsaW5nIGZvciBtb3JlIGNyaXRpY3MuIFRoZSBtb3ZpZSBpc24gZXZlbiBvdXQsIHNvIEkgZG9uIGtub3cgd2hlcmUgeW91IGdldHRpbmcgdGhlIHRlcm0gIm1hcnkgc3VlIiBmcm9tLiBJIGRvbiBrbm93IHdoeSB5b3VyIG9waW5pb24gb24gd2hldGhlciBvciBub3QgQnJpZSBMYXJzb24gaXMgYXR0cmFjdGl2ZSBvciBub3QgbWF0dGVycyB0byB0aGUgZmlsbS4gVGhlIG9ubHkgdGhpbmcgeW91IHNhaWQgd2hpY2ggbWFrZXMgYSBkaWZmZXJlbmNlIHRvIHRoZSBmaWxtIGFuZCBpcyBncm91bmRlZCBpbiBmYWN0IGlzIHRoYXQgeW91IG9mZmVuZGVkIG92ZXIgdGhlIHBocmFzZSAiTGV0IHNob3cgdGhlIGJveXMgaG93IGl0IGRvbmUsIiBhbmQgZXZlbiB0aGF0IGZyb20gYSB0cmFpbGVyLiBJdCBtaWdodCBub3QgYmUgaW4gdGhlIG1vdmllLCBvciBpdCBtaWdodCBiZSBjb250ZXh0dWFsaXplZCBpbiBhIGZ1bm55IG9yIGhhcm1sZXNzIHdheS4KU29tZSBtaWdodCBraWNrIGhlciBvdXQuIFNvbWUgY2FsbCB0aGUgY29wcywgc29sdmluZyBpdCBieSBkaXNjdXNzaW9uLCBmaW5lcyBhbmQgYXJyZXN0LCBpbiBlc2NhbGF0aW5nIG9yZGVyLiBTb21lIHVzZSBzY3JlYW0gc2hhbWluZywgc29tZSBjaXRlIHRoZSBydWxlcyBiZWNhdXNlIHRoZXkgcnVsZXMsIHNvbWUgdHJ5IHRvIHJlYXNvbi4gVGhhdCB3aGVyZSB0aGUgY3VsdHVyYWwgY29tZXMgaW4sIG1pbGVzIGJlZm9yZSB0aGUganVzdGljZSBzeXN0ZW0uClBhdWwgRm9zdGVyOiBSaWNrIFBlcnJ5LgpJbiBmYWN0LCB1bnRpbCBub3csIGFsbCBwcmVzaWRlbnRzIG92ZXIgdGhlIHBhc3QgNzUgeWVhcnMgaGF2ZSBwZXJmb3JtZWQgYmV0dGVyLiAKIllvdSBzaG91bGRuIGN1dCB3ZWlnaHQgd2hlbiB5b3UgMTUuIiAgIFdobyBzYWlkIHRoaXMgYW5kIHdoYXQgaXMgdGhlaXIgZXhwZXJpZW5jZSBpbiB0cmFpbmluZyB0ZWVuYWdlcnM/IFRoZXJlIGxvdCBvZiB2b2ljZXMgb25saW5lIHNheWluZyBzdHVmZiBhYm91dCBmaXRuZXNzLiBZb3UgaGF2ZSB0byBoYXZlIHNvbWUgc3RhbmRhcmRzIGZvciB3aG8geW91IGdvaW5nIHRvIGxpc3RlbiB0byBzbyB0aGF0IHlvdSBkb24gZ2V0IGxvc3QuCklmIHlvdSBmb2xkIHlvdSBjYW4gc2F5IHlvdSBmb2xkIGFuZCB0aHJvdyB5b3VyIGNhcmRzIGF3YXkuIE1vc3QgcG9rZXIgcm9vbXMgcmVxdWlyZSB0aGF0IHlvdSB0aHJvdyB5b3VyIGhhbmQgYXdheSByYXRoZXIgdGhlbiBhbm5vdW5jaW5nIHRoZSBmb2xkIGJlY2F1c2UgdGhpcyBjYW4gbGVhZCB0byBjb25mdXNpb24gYXQgdGhlIHRhYmxlLiAKQ2FuY2VyIGlzIGp1c3Qgc3VjaCBhbiBlYXN5IHRoaW5nIGZvciBhIG1hbmlwdWxhdGl2ZSBwZXJzb24gdG8gY2FzaCBpbiBvbi4gSXQgYSBob3JyaWJsZSBkaXNlYXNlIHRvIGhhdmUsIGFuZCBzbyBtYW55IG9mIHVzIGtub3cgc29tZW9uZSB3aG8gZWl0aGVyIGRpZWQgYSBwYWluZnVsIGRlYXRoIG9yIGF0IGxlYXN0IHN1ZmZlcmVkIGdyZWF0bHkgaW4gZmlnaHRpbmcgaXQsIHNvIHBlb3BsZSBzZWVtIGxpa2UgdGhleSBxdWVzdGlvbiBsZXNzIHdoZW4gaXQgY29tZXMgaW4gdG8gcGxheS4gCkkgcmVhbGx5IHNtYXJ0LCBidXQgcmVhbGxsbGxsbGxseSBsYXp5LiBTbyBjb2xsZWdlIHdhcyBwcmV0dHkgc3dlZXQuIEkgbGlraW5nIGZyZXNobWFuIHllYXIuIApTYXkgbm8gbW9yZSwgSSBvcmRlcmVkIGhpbSBzb21lIG9mZiBhIGJpbGxpb25haXJlcyB3ZWJzaXRlIHRoYXQgYXJyaXZlZCB0d28gZGF5cyBsYXRlci4gCk9mZiB0aGUgdG9wIG9mIG15IGhlYWQgYW1vbmcgdGhlIHN1cGVyIGhpZ2ggcm9sbGVyIGNyb3dkIHRoZXNlIGRheXMsIHRoZXJlIGp1c3QuIEphc29uIEtvb24/IENoYXJsaWUgQ2FycmVsIHBsYXlzIHdpdGggYSBsb3Qgb2YgaGVhcnQgYnV0IGhlIG5vdCByZWFsbHkgZ29vZCBlbm91Z2ggdG8gcGxheSBzdXBlciBoaWdoIHJvbGxlcnMuIEl0IHNvIGJvcmluZyB0byB3YXRjaCBwb2tlciB0aGVzZSBkYXlzIGV2ZW4gdGhvdWdoIHRoZSB0ZWNobmljYWwgc2lkZSB0byB0aGUgZ2FtZSBpcyBiZXR0ZXIgdGhhbiBldmVyLiAKVGhlIG1heGltdW0gcmFpc2UgaXMgdGhlIHNpemUgb2YgdGhlIHBvdCwgZXF1YWwgdG86IFRoZSBhY3RpdmUgcG90ICsgQWxsIGJldHMgb24gdGhlIHRhYmxlICsgVGhlIGFtb3VudCB0aGUgYWN0aXZlIHBsYXllciBtdXN0IGZpcnN0IGNhbGwgYmVmb3JlIHJhaXNpbmcuIFRoZXJlIGlzIG5vICdjYXAnIG9uIHRoZSBudW1iZXIgb2YgcmFpc2VzIGFsbG93ZWQuIE1peGVkIEhvbGRlbSBUaGUgZ2FtZSBzd2l0Y2hlcyBiZXR3ZWVuIHJvdW5kcyBvZiBMaW1pdCBIb2xkZW0gYW5kIE5vIExpbWl0IEhvbGRlbS4gClB1YmxpY2F0aW9uIG5vdGVkIGluIHRoZSBCaWJsaW9ncmFwaGllIGRlIGxhIEZyYW5jZSAyZSBzcmllLCA2N2UgYW5uZSwgTiA0NCwgLiAKV2UgbG9zdCB0aGF0IGdhbWUgYnkgb25lIHBvaW50LiAKVGhlIHNoYXJrIG9uIHRoZSByaWdodCBjbGVhcmx5IGtuZXcgYWxsIHRoZSBkYW5jZSBtb3Zlcy4gCkdhbWUgTGF0ZXN0IFRvcCBCcmVha2luZyBOZXdzCkxlb3BhcmRzdG93biBEYXkgNApJdCBicmlja2VkIGFuZCBJIG5vdCBnb2luZyB0byByaXNrIGl0IGZ1Y2tpbmcgdXAgbXkgUFM0LkVESVQvVVBEQVRFOiBZdXAsIHdvcmtlZCBlYXNpbHkuIApXaGVuIHNvbWVvbmUgMyBiZXRzIGFub3RoZXIsIHRoZXkgY2FuIHB1dCB0aGUgMyBiZXR0ZXIgaGFuZCByYW5nZSBpbnRvIHNvbWV0aGluZyBhbG9uZyBBQSwgQUssIEFRLCBLSywgUVEuIFRoaXMgaXMgd2hhdCBoZWxwZWQgdGhlIGdpcmwgbWFrZSBoZXIgZGVjaXNpb24uIApObyBqdW5rIG9uIHRoZSBuaWdodHN0YW5kLCBubyBzdHVmZiB0YWtlbiBvdXQgb2YgdGhlIHN1aXRjYXNlIHRoYXQgeW91IGRlY2lkZWQgeW91IGRpZG4gbmVlZCwgYW5kIGxlZnQgaXQgb24gdGhlIGJlZC4gQSBjbGVhbiBzdXJmYWNlLi4gClN1cGVyIG9ic2N1cmUsIGJ1dCBJIGFic29sdXRlbHkgbG92ZSB0aGlzIHByb2plY3QuIApJIGZlbHQgZWxhdGVkIGFuZCBhIG5ldyBmb3VuZCBzZWxmIGNvbmZpZGVuY2UgdGhhdCBpIGNvdWxkIHJ1biAyMCBtaWxlcyBpbiBhbnkgZGlyZWN0aW9uIGlmIGkgbmVlZGVkIHRvLiBUaGF0IGpveSB3YXMgc3Ryb25nZXIgdGhhbiB0aGUgcGFpbiBpbiBteSBmZWV0IGFuZCBoZWF2eSBsZWdzLCBpZiBhbnl0aGluZyB0aGUgcGFpbiByZW1pbmRlZCBtZSBvZiBteSByZWNlbnQgaW52aW5jaWJpbGl0eS4gSW50ZXJlc3RpbmdseSBhdCB0aGF0IHRpbWUgSSBuZXZlciB3YW50ZWQgdG8gZWF0IGEgdG9uIG9mIGZvb2QgYWZ0ZXIgYSBsb25nIHJ1biBidXQgdGhlIG5leHQgZGF5IEkgd2FzIGZhbWlzaGVkLiAKUHJldHR5IGFtYXppbmcgaG93IHF1aWNrIHlvdSBtb3ZlZCB1cCBpbiBzdGFrZXMuIDYgbW9udGhzIGFnbyB5b3Ugd2VyZSBkaXN0cmF1Z2h0IG92ZXIgc29tZSBtaWNyb3N0YWtlcyBQTE8gbG9zZXMuIApXaXRoaG9sZGluZyByZW50IGlzIG9uZSBvZiB0aGUgb25seSByZWNvdXJzZXMgYSB0ZW5hbnQgaGFzIGFnYWluc3QgYW4gdW5yZXNwb25zaXZlIGxhbmRsb3JkIG91dHNpZGUgdGhlIGNvdXJ0IHN5c3RlbS4gCldob2xlIHRlYW1zIG1heSBiZSBhc3NpZ25lZCB0byB0aGlzIHNvcnQgb2YgcHJvamVjdCwgYXMgd2VsbCBhcyB2YXJpb3VzIGtpbmRzIG9mIGVsZWN0cm9uaWMgc3VydmVpbGxhbmNlIGRldmljZXMuIApJIGFjdHVhbGx5IG1vc3RseSBhZ3JlZSB3aXRoIHlvdS4gVGhhdCB0aGUgaGFyZCBwYXJ0LiBJdCBkaXNndXN0aW5nLiBCdXQsIHRoZSBDb25zdGl0dXRpb24gYW5kIGl0IHByb3RlY3Rpb25zIGVuZCBhdCB0aGUgYm9yZGVycyBvZiB0aGUgdXMgZm9yIGFsbCBpbnRlbnRzIGFuZCBwdXJwb3NlcyB3aGVuIHJlZ2FyZGluZyBpbmRpdmlkdWFsIHJpZ2h0cy4gQXMgZmFyIGFzIHRoZSBraWxsaW5nIG9mIGNpdmlsaWFucywgSSBob3dldmVyIG11c3QgZGVmZXIgdGhhdCBpdCBpcyBhIHRlcnJpYmxlIGFuZCBuZWNlc3NhcnkgcGFydCBvZiB3YXIuClRoaXMgaXMgYW4gdXBzZXR0aW5nIG1vbWVudCBpbiBtYW55IHBlb3BsZSBsaXZlcy4gSXQgd2FzbiBmb3IgbWUgYmVjYXVzZSBJIG5ldmVyIGJlbGlldmVkIHRoYXQgYW55IHZvaWNlIGluIG15IGhlYWQgd2FzIHRoZSB2b2ljZSBvZiBHb2QgYXMgSSB3YXMgbm90IHJhaXNlZCB0byBoYXJib3Igc3VjaCBub3Rpb25zLiAKVG90YWxseS4gCk1hZ25lc2l1bSBhbHNvIGhlbHBzIHJlZ3VsYXRlIGJsb29kIHN1Z2FyIGxldmVscywgcHJvbW90ZXMgbm9ybWFsIGJsb29kIHByZXNzdXJlLCBhbmQgaXMga25vd24gdG8gYmUgaW52b2x2ZWQgaW4gZW5lcmd5IG1ldGFib2xpc20gYW5kIHByb3RlaW4gc3ludGhlc2lzLiBUaGVyZSBpcyBhbiBpbmNyZWFzZWQgaW50ZXJlc3QgaW4gdGhlIHJvbGUgb2YgbWFnbmVzaXVtIGluIHByZXZlbnRpbmcgYW5kIG1hbmFnaW5nIGRpc29yZGVycyBzdWNoIGFzIGh5cGVydGVuc2lvbiwgY2FyZGlvdmFzY3VsYXIgZGlzZWFzZSwgYW5kIGRpYWJldGVzLiIxLiAKSSB3b3VsZCBzYXkgY2xvc2UgdG8gNWsgd29ydGggb2YgY29wcGVyIHNvbGQgYXQgc2NyYXAuIApZb3UgZG8gbm90IG5lZWQgdG8gam9pbiB0aGlzIHNpdGUsIGJ1dCB5b3UgbXVzdCBiZSBhIFdpa2lkb3QgcGxhdGZvcm0gbWVtYmVyLlBsZWFzZSBub3RlIHRoYXQgc2FuZGJveCBwYWdlcyBhcmUgYXV0b21hdGljYWxseSBlZGl0IGxvY2tlZC4gCkRhdmlkIGhhcyBiZWVuIGEgbWVtYmVyIG9mIGJvdGggdGhlIE9udGFyaW8gYW5kIEsgVyBIb21lIEJ1aWxkZXJzIEFzc29jaWF0aW9ucyBmb3IgbWFueSB5ZWFycyBhbmQgd2FzIGVsZWN0ZWQgdG8gdGhlIEJvYXJkIG9mIERpcmVjdG9ycyB3aGVyZSBoZSBzdWJzZXF1ZW50bHkgc2VydmVkIGFzIFByZXNpZGVudCBpbiAxOTgzIGFuZCAxOTg1LiAKVGhlIHBvaW50IGlzIHRoYXQgdGhlIGJ1cnFhIGFuZCBib29iIGpvYnMgYW5kIEJsYWhuaWtzIGFyZSBhbGwgc3ltYm9saWMgc2l0ZXMgb2YgZ2VuZGVyIG9wcHJlc3Npb24gYW5kIHRoZSBwaHlzaWNhbCBtYW5pZmVzdGF0aW9uIG9mIHBhdHJpYXJjaHkuIEFyZSBhbHNvIHNpdGVzIG9mIHdvbWVuIHBvd2VyICB0aGUgcG93ZXIgdG8gc2VkdWNlIHRoZSBwcmVzaWRlbnQgb2YgRnJhbmNlIG9yIHRoZSBwb3dlciB0byBzZWR1Y2UgYSBwbGFzdGljIHN1cmdlb24gaW4gUGFyaXMgb3IgVGVocmFuLCBub3QgdG8gbWVudGlvbiB0aGUgcG93ZXIgdG8gZ2FpbiBwb2xpdGljYWwgcG93ZXIsIGZvciBpbnN0YW5jZS4gSXMgYSBjb21wbGljYXRlZCBhbmQgaGlnaGx5IHBvbGl0aWNpemVkIGZpZWxkLiAKTWFkbmVzc29mS2luZ0hpcHBvICAxMyBwb2ludHMgIHN1Ym1pdHRlZCAxNyBob3VycyBhZ28KQW5zd2VyIFdhcnJlbiBIYXJkaW5nIGRpZCwgYW5kIHBvc3NpYmx5IG90aGVycy4gUG9rZVJ1cyBpcyBhIHN0YXR1cyBtb3ZlIHdoaWNoIGNhbiBiZSBnYWluZWQgYnkgYSBQb2tlbW9uIGZyb20gUnVieSBhbmQgU2FwcGhpcmUgdmVyc2lvbnMgb253YXJkLiBJbiBubyB3YXkgaXMgaXQgZGV0cmVtZW50YWwgdG8gdGhlIFBva2Vtb24sIGluIGZhY3QsIGl0IGlzIGNvbXBsZXRlbHkgYmVuZWZpY2lhbC4gUG9rZVJ1cyByYWlzZXMgdGhlIHBvaW50IGF2ZXJhZ2Ugb2YgdGhlIHN0YXQgaW5jcmVhc2VzIG9mIGEgUG9rZW1vbiBsZXZlbGxpbmcgdXAuIEZvciBleGFtcGxlLCBhIFJoeWhvcm4gd2hvIGhhcyBQb2tlUnVzLCBnYWlucyAzIFNwZWVkIHBvaW50cyBpbnN0ZWFkIG9mIDEgKHVwb24gbGV2ZWxsaW5nIHVwKS4gUG9rZVJ1cyBjYW4gYmUgY3VyZWQgYnV0IG5vdCBsaWtlIG90aGVyIHN0YXR1cyBhZmZsaWN0aW5nIGNvbmRpdGlvbnMuIEJ5IGxlYXZpbmcgdGhlIGluZmVjdGVkIFBva2Vtb24gaW4gdGhlIHRyYWluZXIncyBwYXJ0eSwgUG9rZVJ1cyBldmVudHVhbHkgZGlzc2FwZWFycyBvdmVyIGEgcGVyaW9kIG9mIDI0IGhvdXJzLiBUaGUgUG9rZW1vbiB0aGVtIGJlY29tZXMgaW1tdW5lIHRvIHRoZSB2aXJ1cy4gT25jZSBhIFBva2Vtb24gaXMgaW5mZWN0ZWQsIGl0IG1heSBzcHJlYWQgaXQgdG8gb3RoZXIgUG9rZW1vbiAgIGJ1dCBvbmx5IGluIHRoZSBwYXJ0eSwgYW5kIG9ubHkgdG8gUG9rZW1vbiB0aGF0IGFyZW4ndCBpbW11bmUuIChGdWxsIEFuc3dlcikKVGhleSBjYW4gYmUgaGVhcmluZyB2b2ljZXMsIHNlZWluZyBoYWxsdWNpbmF0aW9ucy4gCk1hc3NhZ2UgVGhlcmFwaXN0IHRvIFBoeXNpY2FsIFRoZXJhcGlzdCBNYXNzYWdlIHRoZXJhcHkgcHJvZ3JhbXMgdmFyeSBpbiBsZW5ndGgsIGZyb20gY2VydGlmaWNhdGUgcHJvZ3JhbXMgb2Ygb25lIHllYXIgb3IgbGVzcyB0byBmdWxsIGJhY2hlbG9yJ3MgZGVncmVlcy4gTW9zdCBzdGF0ZXMgcmVxdWlyZSB0aGVpciBtYXNzYWdlIHRoZXJhcGlzdHMgdG8gaGF2ZSBhdCBsZWFzdCA1MDAgaG91cnMgb2YgaW4gY2xhc3MgaW5zdHJ1Y3Rpb24sIHVwIHRvIDEsMDAwIGhvdXJzLiBUbyBiZSBlbGlnaWJsZSBmb3IgYSBwaHlzaWNhbCB0aGVyYXB5IHByb2dyYW0sIHRoZSBtYXNzYWdlIHRoZXJhcGlzdCBtdXN0IGhhdmUgYSBiYWNoZWxvcidzIGRlZ3JlZS4gCk5vIGRvdWJ0IHRoZSBlYXJseSBvYnNlc3Npb24gd2l0aCBtYXJraW5nIHByaXZhdGUgZnJvbSBwdWJsaWMgc3RlbW1lZCBmcm9tIHVyYmFuaXphdGlvbiBhbmQgaW1taWdyYXRpb24uIFRoZXJlIHdhcyBhIGxvdCBvZiBjcm9zc2luZyBvZiBib3VuZGFyaWVzLiAKTXkgbW9tIGFuZCBzdGVwIG1vbSBkb24gZ2V0IGFsb25nIChyZWFzb25zIHdvbiBtYWtlIHRoaXMgc2hvcnQsIG15IHN0ZXAgbW9tIGlzIHJpZ2h0KS4gU3RlcCBtb20gZG9lc24gY29tZSB0byB0aGUgcGFydHkgc28gbXkgbW9tIGNhbiBnbyBhbmQgaXQgbm90IGF3a3dhcmQgZm9yIGFueW9uZS4gV2UgZ28gdG8gbXkgZGFkcyB0byBjZWxlYnJhdGUgd2l0aCBzdGVwIG1vbSB0aGUgbmV4dCBkYXkgc28gc2hlIGluY2x1ZGVkLiAKQXJjaGl2ZSBKdWlsbGV0IDIwMTgKV2VpcmRseSBlbm91Z2gsIE9yZGVsbCBkaWRuIGV2ZW4gcGxheSBhbiBpbnN0cnVtZW50IGJ1dCBoZSBuZXZlcnRoZWxlc3MgaGVscGVkIGJyZWFrIHRoZSBnZXJuZSBvZiBNdXRlIEphenogdG8gYSB3aWRlciBhdWRpZW5jZSwgZXZlbiB0aG91Z2ggaGUgbmV2ZXIgcmVsZWFzZWQgYW4gYWxidW0uIApEdXJpbmcgdGhlIEJ1c2ggcmVnaW1lLCBhIHNtYWxsLCBzZWNyZXQgYWN0aXZpc3QgZ3JvdXAgaW4gQnVybGluZ3RvbiwgVmVybW9udCBtYWRlIHVwIGh1bmRyZWRzIG9mIHN0aWNrZXJzIHRoYXQgc2FpZCAiQ2hlbmV5IEdpdmVzIERpY2sgYSBCYWQgTmFtZSIgYW5kIHN0dWNrIHRoZW0gb24gbGlnaHQgcG9sZXMgYXJvdW5kIHRvd24uIEF0IHNvbWUgcG9pbnQsIHRoZSBsb2NhbCBlbGVjdHJpYyBjb21wYW55IGdvdCB0byBvbmUgb2YgdGhlIGFjdGl2aXN0cyBhbmQgc2FpZCAiV2Uga25vdyB3aG8geW91IGFyZS4gCkhvd2V2ZXIsIHRoZXJlIGlzIGdlbmVyYWxseSBhIGxvdCBvZiBjb21tb25hbGl0eSBvbiB3aGF0IGdyb3VwcyBhbGlnbiB0aGVtc2VsdmVzIHdpdGggdGhlIGxlZnQgYW5kIHJpZ2h0LiAKU2hlIGtlcHQgcmVwZWF0aW5nIHRvIG1lIGFzIHdlIHdhaXRlZCB1bmRlciB0aGUgYnJpZ2h0IHN1biwgIm15IGJvc3MgaXMgZ29pbmcgdG8ga2lsbCBtZSwiIGV4cGxhaW5pbmcgdGhhdCBzaGUnZCBkdWNrZWQgb3V0IG9mIHdvcmsgdG8gc3RhbmQgaW4gbGluZSB0byBzZWUgdGhlIGZvcm1lciBTb3V0aCBBZnJpY2FuIHByZXNpZGVudCdzIGJvZHkgbHlpbmcgaW4gc3RhdGUgYXQgdGhlIFVuaW9uIEJ1aWxkaW5ncyBpbiBQcmV0b3JpYSwgd2hlcmUgaGUgd2FzIHN3b3JuIGFzIHRoZSBmaXJzdCBkZW1vY3JhdGljYWxseSBlbGVjdGVkIHByZXNpZGVudCBvZiBTb3V0aCBBZnJpY2EgaW4gMTk5NC4KSEFHIENhcGlzY28gRXJnb25vbWljIENoYWlyIE1vZGVscwpJdCBpcyBub3QgZXF1YWxpdHkgaW4gYW55IHNoYXBlIG9yIGZvcm0uIApXaGVuIHlvdSBhcmUgcGxheWluZyBpbiBpdCwgeW91IHdpbGwgbmVlZCB0byBtYWtlIHN1cmUgdGhhdCB5b3UgaGF2ZSBnb3QgdGhlIGF0dHJhY3Rpb24gaW4geW91ciBwbGF5aW5nIGVxdWlwbWVudCBhbmQgcGxheWluZyBzdHlsZSBhdCB0aGUgc2FtZSB0aW1lLiAKVGhlIHBhaW4gaXMgYmV5b25kIGFueXRoaW5nIEkgZmVsdC4gSSBob25lc3RseSBkb24gYmVsaWV2ZSBpdC4gSWRrIGhvdyBJIGV2ZXIgaGVhbCBmcm9tIHRoaXMuLiAKVGlwOiBCcmluZyBhIHNhbXBsZSBob21lIGFuZCBsaXZlIHdpdGggaXQgYXdoaWxlIGJlZm9yZSB5b3UgZGVjaWRlLiAKRm9yIHRoZSBtb3N0IHBhcnQga2VlcCB0aGVtIGFyb3VuZCBiZWNhdXNlIHlvdSBhbHNvIHVzZSB0aGVtIGluIHN1cHBvcnQgc2xvdHMgdG8gZ2l2ZSB5b3VyIG1haW4gaGVybyBleHRyYSBhYmlsaXRpZXMsIGFuZCBhbHNvIHRvIHNlbmQgdGhlbSBvbiBleHBlZGl0aW9ucyB0byBnYWluIHJld2FyZHMuIElmIHlvdSBoYXZlIG1vcmUgdGhhbiAyIG9mIGFuIGlkZW50aWNhbCBoZXJvIHlvdSBtYXkgd2FudCB0byBwdXQgdGhlbSBpbiB0aGUgY29sbGVjdGlvbiBib29rIG9yIHJldGlyZSB0aGVtIGZvciBIZXJvIFhQL1RyYWluaW5nIG1hbnVhbHMuLiAKTXkgZGFkIGRpZCBzb21ldGhpbmcgbGlrZSB0aGlzLCBidXQgdGhlIGlkaW90cyBvbiBvdXIgc3RyZWV0IGRpZG4gcnVuIGRvd24gdGhlIG1haWxib3hlcywgdGhleSBqdXN0IGhpdCB0aGVtIHdpdGggYSBiYXNlYmFsbCBiYXQuIEFmdGVyIGZhbGxpbmcgdmljdGltIHRvIHRoYXQsIG15IGRhZCBmaXJzdCB0cmllZCBhIHBzeWNob2xvZ2ljYWwgdHJpY2suIEp1c3QgYXMgdGhlIGlkaW90cyBjYW1lIHVwIHRoZSBtYWlsYm94IGFuZCB3ZXJlIGFib3V0IHRvIG1ha2UgYSBzd2luZyB3aXRoIHRoZWlyIGJhdCwgZGFkIGZsaWNrZWQgb24gdGhlIGxpZ2h0IG92ZXIgdGhlIHBpY3R1cmUgd2luZG93IGdpdmluZyB0aGVtIGEgbmljZSB2aWV3IG9mIGhpbSB3YXRjaGluZyB0aGVtIHdoaWxlIGhlIHBvbGlzaGVkIGhpcyByaWZsZS4gCkxvdCBvZiBtb25leSBpcyBzcGVudCBvbiBoZWFsdGhjYXJlIGFkdmVydGlzaW5nLCBCb2x0b24gc2F5cywgY29tcGFuaWVzIGNhbiBkbyBhIGJldHRlciBqb2IgbWFya2V0aW5nIHRoZWlyIHByb2R1Y3RzLi4gCkJ1dCB0aGUgc2VnbWVudCBpcyBkdWUgZm9yIGEgZG9tZXN0aWMgcmViaXJ0aC4uIApFdmVyeXRoaW5nIHlvdSBqdXN0IHNhaWQgYWJvdXQgc2hvd3MsIGlzIGV4YWN0bHkgd2hhdCBwZW9wbGUgdGhhdCBmYXN0IGZvd2FyZCBpbmRpdmlkdWFsIGVwaXNvZGVzIGFyZSBkb2luZy4KSWYgYW55b25lIGNhbiwgSSByZW1lbWJlciBpdCBiZWluZyBhbiBpbnRlcmVzdGluZyByZWFkLiAyIHBvaW50cyAgc3VibWl0dGVkIDEgeWVhciBhZ28uIApIZSBuZXZlciByZXR1cm5lZCBhbmQsIGFmdGVyIHRoZSBiYW5kLCByZWNvcmQgcHJvZHVjZXJzLCBhbmQgdGhlIHBvbGljZSBzZWFyY2hlZCBmb3IgaGltIGZvciBzZXZlcmFsIGRheXMsIGl0IHdhcyBkaXNjb3ZlcmVkIHRoYXQgaGUgaGFkIGpvaW5lZCBhIGN1bHQgY2FsbGVkIFRoZSBDaGlsZHJlbiBvZiBHb2QuIApTYXlpbmcgdGhlcmUncyB0aGlzIGNpdHkgbGF3IHRoYXQgbWFrZXMgc29jaWFsIGNhcmQgZ2FtZXMgaWxsZWdhbC4gRXZlbiB0aGUgb25lcyB0aGUgc2VuaW9ycyBwbGF5IGZvciBwZXR0eSBjYXNoIGl0IHdhcy4gClNoZXJpZmYgR2FtaW5nIGdpdmVzIHBsYXllcnMgd2l0aCAzIEQgYWR2ZW50dXJlcyBjcmVhdGVkIGJ5IGFuIGV4cGVyaWVuY2VkIGdyb3VwIG9mIHByb2Zlc3Npb25hbCBwcm9ncmFtbWVycyBhbmQgYnVzaW5lc3MgcHJvZmVzc2lvbmFscyBpbiBvcmRlciB0byB1cGRhdGUgYXMgd2VsbCBhcyBmb3JtdWxhdGUgbmV3IG1hdGNoZXMuIApGb3IgdGhlIHJlY29yZCBJIGFncmVlIHdpdGggdGhlIHRpdGxlIG9mIHRoZSBwb3N0LiBXb3VsZCBsb3ZlIGZvciB0aGlzIHN1YiB0byBiZSBtb2RlcmF0ZWQgc3VjaCB0aGF0IGNvbXBsYWludHMgYXJlIGJhbm5lZC4gVGhlcmUgYXJlIHJlYWwgY29uY2VybnMgd2l0aCB0aGUgYmFsYW5jaW5nIGF0bSBhbmQgc3BlYWtpbmcgb3V0IGlzIG5lY2Vzc2FyeSBmb3IgdmFsdmUgdG8gYWRkcmVzcyBpdCwgYnV0IGhhdmluZyBhIHN1YiBkZWRpY2F0ZWQgZXhjbHVzaXZlbHkgdG8gZ2FtZSBwbGF5IHdvdWxkIGJlIG5pY2UuCk5vcmllbHVrYXMgIDIsMTk2IHBvaW50cyAgc3VibWl0dGVkIDcgbW9udGhzIGFnbwpJbiBQb2xhbmQsIHRoZSBjaGlwcyBmbGF2b3VycyBhcmU6IENoZWVzZSwgR3JlZW4gT25pb24sIENoaWNrZW4gd2l0aCBTcGljZXMsIFNhbHRlZCwgUGFwcmlrYSwgSG90IGdyZWVuIHBlcHBlcnMsIEZyb21hZ2UsIEN1Y3VtYmVyIGFuZCBHdWFjYW1vbGUuIFRoZXJlIGlzIGFsc28gdGhlIExheXMgQXBldHRpdGUgZmxhdm9yIG9mIENoZWVzZSBhbmQgT25pb24sIENsYXNzaWMgc2FsdGVkLCBIYW0gYW5kIGNoZWVzZSwgS2V0Y2h1cCBhbmQgY2hlZXNlLiBMYXkncyBTdHJvbmc6IENoaWxsaSBhbmQgS251Y2tsZSBvZiBwb3JrIGFuZCBob3JzZXJhZGlzaC4gCkxlcyBheWFudHMgZHJvaXQgcG91cnJvbnQgZG9uYyBhZ2lyIGVuIGp1c3RpY2UgcG91ciBkZmVuZHJlIGwnYXR0ZWludGUgIGwnaW1hZ2Ugb3UgIGxhIG1tb2lyZSBkdSBkZnVudC4gCkkgYmVlbiBhIFlhbmtlZSBmYW4gc2luY2UgSSB3YXMgYSBraWQgYW5kIG5vdGhpbmcgd2lsbCBjaGFuZ2UgdGhhdCwgSSBhdCB0aGUgYWdlIG5vdyB0aGF0IHByZXR0eSBzb29uIEkgaGF2ZSBraWRzIG9mIG15IG93biB0byB0YWtlIHRvIFlhbmtlZSBzdGFkaXVtLiBUaWNrZXRzIGFyZSBnb2luZyB0byBjb3N0IGV2ZW4gbW9yZSB3aGVuIHRoYXQgdGltZSBjb21lcyBidXQgdGhhdCBpc24gZ29pbmcgdG8gc3RvcCBtZSwgdGhlIG1lbW9yaWVzIGFsb25lIHdpbGwgYmUgcHJpY2VsZXNzLi4gClJpZ2h0IG5vdywgaXQgYnVpbHQgZm9yIGludHJhIHRlYW0gY29tcGFyaXNvbnMgb25seSwgYnV0IEkgaGF2ZSBhIHJlYXNvbmFibGUgdGhlb3J5IGZvciBob3cgdG8gdXNlIEZUUyBkYXRhIHRvIGNvbnZlcnQgcGxheWVyIHJhdGluZ3MgdG8gYSBnbG9iYWwgc2NhbGUuIEl0IHByb2JhYmx5IGJlIG15IG5leHQgcHJvamVjdCBhZnRlciBJIGZpbmlzaCB3aXRoIHRoZSBwbGF5b2ZmIGJ1c3kgc2Vhc29uLlJ1Ymlja2sgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMTEgbW9udGhzIGFnb0kgcmVhbGx5IGVuam95ZWQgaXQuIApJIGdldCBhIHJ1c2ggd2hlbiBJIGJ1eSBzb21ldGhpbmcgYW5kIHNlbGwgaXQgZm9yIDEwMDAlIFJPSShyZXR1cm4gb24gaW52ZXN0bWVudCkuIApJdCB3YXMgbGl0ZXJhbGx5IGEgMjAgbWV0cmUgd2Fsay4gClBsdXMgcGFydGljdWxhcmx5IGEgeW91bmcgY2hpbGQgaXMgZ2V0dGluZyBtb3N0IG9mIGhpcyBtb25leSBhbmQgc3R1ZmYgZnJvbSB0aGUgcGFyZW50cywgYW5kIGl0IGEgY2FzZSBvZiBub3QgYmVpbmcgc28gd2VhayB3aWxsZWQgKGFzIGZhciB0b28gbWFueSBwYXJlbnRzIGFyZSkgYW5kIGdpdmluZyBpbnRvIGRlbWFuZHMgYnV0IGFnYWluIHNldHRpbmcgYm91bmRhcmllcy4gWW91IGFzIHRoZSBwYXJlbnRzIGFyZSB0aGUgb25lcyBnaXZpbmcgdGhlbSB0aGUgZm9vZCwgY2xvdGhlcywgYnV5aW5nIHRoZW0gdGhlIGJvb2tzIGFuZCBDRHMsIHRoZSBnYWRnZXRzIGFuZCBhbGwgdGhlIG90aGVyIHN0dWZmIGxpa2UgYmFsbGV0IGxlc3NvbnMgb3Igc2Nob29sIHRyaXBzLiBJdCB1cCB0byB5b3UgYXMgdGhlIG9uZSB3aXRoIHRoZSB3YWxsZXQvcHVyc2UgaW4gaGFuZCB0byBkZWNpZGUgaG93IHlvdSBzcGVuZCB5b3VyIG1vbmV5IG9uIHlvdXIgY2hpbGQuIEZhaXIgZW5vdWdoIHlvdSBjYW4gYXQgbGVhc3QgYWNrbm93bGVkZ2UgdGhlaXIgb3duIGNob2ljZXMgKEkgbm90IEFteSBDaHVhKSBidXQgdGhhdCBkb2VzbiBtZWFuIHRoZXkgZ2V0IHRvIHJ1biB0aGluZ3MuIFNvIGlmIHlvdXIgOCB5ZWFyIG9sZCBjaGlsZCBpcyB3YXRjaGluZyBSIHJhdGVkIG1vdmllcywgb3IgbGlzdGVuaW5nIHRvIGV4dHJlbWVseSB2dWxnYXIgcmFwIG11c2ljLCBvciBhY2Nlc3NpbmcgcG9ybiwgY2hhbmNlcyBhcmUgaXQgYmVjYXVzZSBhbiBhZHVsdCBzb21ld2hlcmUgaGFzIGJlZW4gbGF6eS4gMTYgcG9pbnRzICBzdWJtaXR0ZWQgNyBtb250aHMgYWdvCkVpZ2h0IG1pbmRmdWwgc3RlcHMgdG8gaGFwcGluZXNzIDogd2Fsa2luZyB0aGUgcGF0aCBvZiB0aGUuIApBY3RpdmF0aW9uIGRvZXMgbm90IHJlcXVpcmUgdXNlciBpbnRlcnZlbnRpb24sIHRoZSBlbnRpcmUgYWN0aXZhdGlvbiAuIAoiSGUgd2FzIHRoZSBvbmUgdGhhdCB3YXMgYWx3YXlzIHRoZSBvbmUgdGhhdCB2b3RlZCBhZ2FpbnN0LiAiIEVybmVzdCdzIGNvbmZyb250YXRpb25hbCBzdHlsZSBldmVudHVhbGx5IGdvdCBoaW0gb3VzdGVkIGZyb20gdGhlIGJvYXJkICAgYW4gZXZlbnQgdGhhdCBsZWQgaGltIHRvIGNhcnJ5IGEgZ3J1ZGdlIGFnYWluc3QgaGlzIG9wcG9uZW50cyBmb3IgYWxtb3N0IDIwIHllYXJzLiAKV2hhdCB3YXMgdGhlIGZpcnN0IE5ldyBZZWFyJ3MgcmVzb2x1dGlvbj9XaGF0IHdhcyB0aGUgZmlyc3QgTmV3IFllYXIncyByZXNvbHV0aW9uP1doYXQgd2FzIHRoZSBmaXJzdCBOZXcgWWVhciByZXNvbHV0aW9uIGV2ZXIgbWFkZT8KQW5vdGhlciBncmVhdCB0b29sIGZvciBsZWFybmluZyBpcyBhbiBvbmxpbmUgdHJhaW5pbmcgc2l0ZS4gVGhlc2Ugc2l0ZXMgYWxsb3cgeW91IHRvIHdhdGNoIHByb3MgcGxheSwgdmlldyB0dXRvcmlhbHMgb24gZXZlcnkgYXNwZWN0IG9mIHRoZSBnYW1lLCBhbmQgaGVhciBicmVha2Rvd25zIG9mIGhvdyBwbGF5ZXJzIChnb29kIHBsYXllcnMhKSB0aGluayB0aHJvdWdoIGhhbmRzLiAKTG92aW5nbHkgcmVtZW1iZXJlZCBieSAxOSBncmVhdCBncmFuZGNoaWxkcmVuLiBQcmVkZWNlYXNlZCBieSBoaXMgcGFyZW50cyBKZWFubmllIGFuZCBHZW9yZ2UsIGhpcyBzaWJsaW5ncyBKZWFuIGFuZCBHZW9yZ2UsIHdpZmUsIE5vcmVlbiBIYW1seSBQeXplciBhbmQgZm9ybWVyIHNwb3VzZSBhbmQgbW90aGVyIG9mIGhpcyBjaGlsZHJlbiwgUnV0aCBCaXJuaWUgS29zYWxsZS4gRG91ZyBzZXJ2ZWQgaW4gdGhlIFJveWFsIENhbmFkaWFuIEFpciBGb3JjZSwgYW5kLCBhcyBtYW55IHlvdW5nIHNvbGRpZXJzIGRpZCBhdCB0aGUgdGltZSwgbGllZCBhYm91dCBoaXMgYWdlIHNvIGhlIGNvdWxkIHNlcnZlIGhpcyBjb3VudHJ5IGFzIGl0IGVudGVyZWQgaW4gdG8gV29ybGQgV2FyIElJLiAKWW91IGtpbmQgb2YgbWFrZSBpdCBzZWVtIGxpa2UgaXQncyB0aGlzIHZpbmRpY3RpdmUgYXR0cmlidXRlLCB3aGVuIHJlYWxseSBpdCdzIGp1c3QgcGxhaW4gb2wnIGlnbm9yYW5jZS9zaG9ydCBzaWdodGVkbmVzcy4gCk92ZXJ2aWV3IGZvciBwcGs4MApUaGUgbWFueSBmcmVlYmllcyBhdCB0aGUgaGVhdGVkIG91dGRvb3IgcG9vbCBzbW9vdGhpZSBzaG90cywgbWVsb24gYmFsbHMsIGFuZCBmcm96ZW4gZ3JhcGVzIGRlbGl2ZXJlZCBob3VybHkgdG8geW91ciBjaGFpc2Ugd2lsbCBoZWxwIHlvdSBmb3JnZXQgKG1vbWVudGFyaWx5KSB0aGF0IHlvdSdsbCBiZSBwaWNraW5nIHVwIHRoZSB0YWIgZm9yIG1lYWxzIGF0IFNhbmQgSGlsbCdzIHByaWNleSBydXN0aWMgQW1lcmljYW4gcmVzdGF1cmFudCAoZW50cmVzIHN0YXJ0IGF0ICQyMikuIApNYXliZSB5b3UgY2hlY2sgY2FsbCBidXQgbm90IHN1cmUgdGhlIGJldCBzaXppbmcgaXMgZGlmZmVyZW50LiBBbmQgYmV0dGluZyBzYXkgaGFsZiBwb3QgdGhlbiBmb2xkaW5nIGlzIG5vdCBoYXBwZW5pbmcgd2hlbiB0aGF0IHdvdWxkIG9ubHkgYmUgYW5vdGhlciA0MCB0byBjYWxsLiBKdXN0IGdvdCBkcmF3biBvdXQgb24uLiAKQW5vbl9NY0Zha2VuYW1lICA1IHBvaW50cyAgc3VibWl0dGVkIDkgZGF5cyBhZ28KTm8gZGVsdXNpb25zIG9mIGdyYW5kZXVyLCBqdXN0IGtpbGxpbmcgYSBXZWRuZXNkYXkgYWZ0ZXJub29uIHBsYXlpbmcgYSAzMCs4IHNoYWxsb3cgc3RhY2tlZCBsaXZlYW1lbnQuIApIb2JiaWVzIEFydGljbGVzICBKdW5lIDIzLCAyMDA4ClZvdXMgYXZpZXogcHUgZGNvdXZyaXIgZGVzIGFydGljbGVzIGRlIGwnYXV0ZXVyIHN1ciBjZSBibG9nLiAKR3JhbnRlZCwgSSBoYXZlIG15IG93biByZXNlcnZhdGlvbnMgYWJvdXQgc29tZSBvZiB0aGUgbW9yZSBmYXIgb3V0IGdlb2VuZ2luZWVyaW5nIGlkZWFzLCBidXQgdGhleSBhbHNvIGhlYXZpbHkgZG93bnBsYXkgbW9zdCByZW5ld2FibGVzIGFzIG5vdCB2aWFibGUgaWRlYXMuIE9yIHRoYXQgc29tZSBvZiB0aGUgY2FyYm9uIGNhcHR1cmUgdmVudHVyZXMgYXJlIGp1c3QgYSB3YXN0ZSBvZiB0aW1lLiBBbmQgdGhlbiB0aGV5IG5ldmVyIHNlZW0gdG8gcHJvcG9zZSB3b3JrYWJsZSBzb2x1dGlvbnMgb2YgdGhlaXIgb3duIGFuZCBqdXN0IGluc2lzdCB3ZSBhbGwgbmVlZCB0byBidW5rZXIgZG93biBhbmQgYmFzaWNhbGx5IHByYXkgdGhhdCBvdXIgcG9saXRpY2lhbnMgc2VlIHRoZSBsaWdodC4uIApOaW50ZW5kbyBpcyBvZmZlcmluZyBhcyBhbiBhZGRlZCAiYm9udXMiIHRoZSBhYmlsaXR5IHRvIHBsYXkgYSBzaW5nbGUgTkVTIG9yIFNORVMgZ2FtZSBmb3Igb25lIG1vbnRoIGJ1dCBhZnRlciB5b3UgaGF2ZSB0byBwYXkgc2VwYXJhdGVseSBmb3IgdGhhdC4gVGhpcyBjb21wYXJlcyB0byB0aGUgWGJveCBPbmUgYW5kIFBTNCBvZmZlcmluZyBhIGZyZWUgb2xkZXIgb3IgQUFBIHRpdGxlIHRoYXQgeW91IGNhbiBrZWVwIGVhY2ggbW9udGggZm9yIHRoZWlyIHN1YnNjcmlwdGlvbi4KSSBzdXBwb3NlIEkgZ290IGEgZGF0ZSBvciB0d28gdGhhdCB3YXkgYnV0IGl0IHdhcyBvbmx5IHRvIGdldCB0aGVtIHRvIHRhbGsgdG8gbWUuIEkgbmV2ZXIgdG9vayBpdCBmdXJ0aGVyIHRoYW4gdGhhdC4gTmV2ZXIgY291bGQgYnJpbmcgbXlzZWxmIHRvLiAKV29ya2VkIGluIGEgZmFjdG9yeSBmb3IgZm9ydHkgeWVhcnMuIApXaGVuIEdvdmVybm9yIEN1b21vIHByb21pc2VkIGNhc2lub3MgaW4gdXBzdGF0ZSBOWSBJIGhvcGUgaGUgbWVhbnQgV2hpdGUgUGxhaW5zIGFuZCBub3QgUm9jaGVzdGVyLiAKQmlyIGV5bGVyaSBrYW50bGFtLCBnZXJla3RlbiB5ZXRlbmVrbGkga2lpbGVyaW4gZ2l0bWVzaSBsYXptIG8gbmVkZW5sZXIgMTAwIHRhbmUgRmVuIExpc2VzaSBhbGFtYXogdGFiaSBraS4gRmVuIExpc2VzaSBuYWRpciB2ZSB6ZWwgYmlyIGV5IG9sbWFsLCBiaXIgYW5sYW0gb2xtYWwsIEZlbiBMaXNlc2kga2F6YW5tIG9jdWsgaXlpIGJpciBuaXZlcnNpdGV5aSBnYXJhbnRpbGVtaSBkemV5ZGUgemVraSBvY3VrIG9sbWFsLiAKVGhlIHJlYXNvbiBpcyBwb2tlciBpcyBhIGdhbWUgb2YgcmlzayBhbmQgcmV3YXJkIGFuZCBpZiB5b3UgcGxheSBvcHRpbWFsIHN0cmF0ZWd5IGV2ZXJ5IHRpbWUgeW91IHdpbGwgYnJlYWtlIGV2YW4gZXZlcnkgdGltZSB5b3UgcGxheS4gCkkgZG8gYWdyZWUgd2l0aCBoaW0gdGhhdCBtYXNzYWdlIGFuZCBtb3ZlbWVudCB0aGVyYXB5IGRvZXNuIGFsd2F5cyBhZGRyZXNzIHRoZSByb290IGNvcmUgb2YgdGhlIHBhaW4gcHJvYmxlbS4gU29tZSBMTVQgYXJlIG1vc3RseSBpbXByb3ZpbmcgY2lyY3VsYXRpb24gb3IgcHJvdmlkaW5nIHRlbXBvcmFyeSByZWxpZWYgb2YgdGhlIHRlbnNpb24vcGFpbi4gWWV0IHRoZXJlIGFyZSBtYW55IG1hc3NhZ2UgdGhlcmFwaXN0cyB3aG8gZG8gdHJlYXQgdGhlIHJvb3QgY2F1c2UuIEluIG15IG9waW5pb24sIHRoZXNlIHByYWN0aXRpb25lcnMgYXJlIGhlbHBpbmcgY2xpZW50cyBoZWFsIGZyb20gb2xkIGVtb3Rpb25hbCB3b3VuZHMuIFdoZXRoZXIgdGhlIExNVCB3b3VsZCBleHBsYWluIGl0IHRoYXQgd2F5IG9yIG5vdCwgdGhhdCBpcyBob3cgSSBzZWUgaXQuIEl0IG5vdCBwc3ljaG90aGVyYXB5ICAgYnV0IGl0IGlzIHRvdWNoaW5nIHBlb3BsZSBpbiBzdWNoIGEgd2F5IHRoYXQgdGhleSBmZWVsICJ0b3VjaGVkIiBvciAic2VlbiIgYW5kIHRoZXkgYXJlIHRoZW4gYWJsZSB0byBsZXQgZ28gb2YgdGhlIHBoeXNpY2FsIHRlbnNpb24gdGhhdCBoYXMgYmVlbiBob2xkaW5nIGluIHRoZWlyIGVtb3Rpb25hbCBwYWluLiBTb21ldGltZXMgdGVhcnMgb2Ygam95LCBzYWRuZXNzLCBncmllZiwgZXRjIGNvbWUgdGhyb3VnaCBhbmQgc29tZXRpbWVzIG5vdC4gVGhlIGxhY2sgb2YgdGVhcnMgYXJlIG5vdCBhIHNpZ24gdGhhdCBlbW90aW9uYWwgaGVhbGluZyBoYXMgbm90IG9jY3VycmVkLgpZb24gUm9nZyBldmVuIHRyaWVkIHRvIGV4cGxvaXQgdGhpcyBpbiB0aGUgZmluYWwgYmF0dGxlLiBWZXJ5IG11Y2ggbGlrZSBXb25kZXIgV29tYW4gd2hvIGlzIGFsc28gYSBNYXJ5IFN1ZSBiZWNhdXNlIGRlc3BpdGUgaGVyIG5haXZldHksIHNoZSBzaW5nbGUgaGFuZGlseSB0dXJucyB0aGUgdGlkZSBvZiB0aGUgR3JlYXQgV2FyLiAKT3VyIGlkZWEgb2YgYSBnb29kIHRpbWUgd2FzICJyaWRpbmcgdGhlIHN0cmlwIiB3aGljaCBtZWFudCBkcml2aW5nIHVwIGFuZCBkb3duIHRoZSBzYW1lIHN0cmVldCBmcm9tIHRoZSBEYWlyeSBRdWVlbiB0byB0aGUgYmJxIGpvaW50LiAKVGhpcyBjb25zdHJ1Y3Rpb24gbWFrZXMgaXQgaW1wb3NzaWJsZSBmb3IgYW55b25lIHRvIHJlbW92ZSB0aGUgbG9nbyB3aXRob3V0IHJ1aW5pbmcgdGhlIGNoaXAuLiAKQ29tcGxldGVseSBvdXQgb2YgbGVmdCBmaWVsZC4gT3VyIHNleCBsaWZlIEhBUyB0YXBlcmVkIGluIHRoZSBsYXN0IGZldyBtb250aHMsIGJ1dCBpc24ndCB0aGF0IGFsbG93ZWQ/IFdlIGFyZSBhZHVsdHMgbGVhZGluZyBidXN5LCBzdHJlc3NmdWwgbGl2ZXMuIApUaGV5IG11Y2ggc3RlYWx0aGllciB0aGFuIHRoZSBkZXRhaWxzIHN1cnJvdW5kaW5nIFNTIGNhc2UuIFRoZSBmYWN0IHRoYXQgc2hlIG1ldCB0aGUgbWVuIGluIGEgcHVibGljIHBsYWNlLCBmb2xsb3dlZCB0aGVtIHRvIGEgdmVoaWNsZSBwYXJrZWQgaW4gYSBwdWJsaWMgZ2FyYWdlLCB3YXMgY2F1Z2h0IG9uIHZpZGVvLCBjYWxsZWQgZnJvbSBvbmUgb2YgdGhlIGd1eSBjYXJzLCBldGMuIFdvdWxkIG1ha2UgaGVyIGFuIGF3ZnVsIHRhcmdldC4gClRoZXJlIGFyZSBvdGhlciBiZXR0ZXIgcG9rZXIgYm90cyBhdmFpbGFibGUgdG91Z2guIEkgdXNlIHRoaXMgUG9rZXIgQm90LCB5b3UgY2FuIGdldCBhIEZyZWUgVHJpYWwgdGhlcmUgYXMgd2VsbC4gVGhpcyBib3QgY2FuIGJlIGN1c3RvbWl6ZWQuIFlvdSBjYW4gbWFrZSBpdCBwbGF5IGhvd2V2ZXIgeW91IHdhbnQuIEl0IHVzZXMgUHJvZmlsZXMgKHNjcmlwdHMpIGZvciB0aGUgZGVjaXNpb24gbWFraW5nLiBZb3UgY2FuIG1ha2UgYSBQcm9maWxlIHlvdXJzZWxmIG9yIHB1cmNoYXNlIG9uZXMgbWFkZSBieSBwcm9mZXNzaW9uYWwgcGxheWVycy4KQW5kIEkgdW5kZXJzdG9vZCB3aHkgSSBtdXN0IGRvIHRoaXMuIApDdW50cy5HaXptb3RlY2ggbW9iaWxlICAzIHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ29MYXRlIGxhc3QgeWVhciB3ZW50IGZvciBhIGlwaG9uZSB4cyB1cGdyYWRlLkJlZW4gd2l0aCB0aGVtIDggeWVhcnMgbm93LiBOZXZlciBjaGVhcGVkIG91dCBvbiBjb250cmFjdHMsIGhhZCBhIDQsIDUsIDYsIDcsIGlwYWQgMyBhbmQgaXBhZCBwcm8gMTIuIEFsbCBvbiBjb250cmFjdCB3aXRoIGVtIChJIGhhZCBzb21lIGJhZCBsdWNrIHdpdGggcGhvbmVzLCBhbGwgZW50aXJlbHkgbXkgZmF1bHQpLkFjY291bnQgY29ubmVjdGVkIHRvIG15IGJhbmsgYWNjb3VudCBmb3IgeWVhcnMuUmVhc29uIGFmdGVyIHJlYXNvbiB0aGV5IHdvdWxkbiBsZXQgbWUgcHVyY2hhc2UgbXkgcGhvbmUgb24gY29udHJhY3QuIAoiV2UgaGFkIGEgaGFyZCBqb2Iga2VlcGluZyB1cCwganVzdCBiZWNhdXNlIG9mIHRoZSB2b2x1bWUgb2YgY29tcGxhaW50cyBmcm9tIHBsYXllcnMgW2Fib3V0IHN1c3BlY3RlZCBjaGVhdGluZ10sIiBoZSBzYWlkLgpObyBvbmUga25ldyBmb3Igc3VyZSBqdXN0IHdoYXQgaXQgd2FzIGFib3V0LCBidXQgdGhlIHdvcmQgZ29pbmcgYXJvdW5kIHdhcyB0aGF0IE1pa2V5IEV2YW5zIGhhZCBiZWVuIGNoZWF0aW5nIHNvbWUgb2YgdGhlIGd1eXMgcGxheWluZyBjYXJkcyBpbiB0aGUgY2x1YiwgYW5kIHdvcnNlICAgaGFkIGJlZW4gc2lwaG9uaW5nIG9mZiBtb25leSBjb2xsZWN0ZWQgYnkgdGhlIGNsdWIncyBwb2tlciBtYWNoaW5lcy4gCkkgZm9yZ290IHRvIG1lbnRpb24gSSB3YXMgZnVja2luZyBhY2VzIGF0IG1pbmVzd2VlcGVyIHdoaWxlIEkgd2FzIGluIG15IGRvd253YXJkIHNwaXJhbC4gClN0aGV0aWMgIDE1NyBwb2ludHMgIHN1Ym1pdHRlZCA0IGRheXMgYWdvCldoZW4geW91IHJhaXNlIGhpcyBmbG9wIGxlYWQsIHlvdSdyZSByZXBwaW5nIG9uZSBvZiB0aG9zZSBmaXZlIGhhbmRzIGJhc2VkIG9uIHByZWZsb3AgYWN0aW9uLiAKSSBrbm93IGV2ZXJ5b25lJ3MgbWFkIGFib3V0IHRoZSBubyBjYWxsIGF0IHRoZSBlbmQgYnV0IHRoYXQncyBub3QgdGhlIGZpcnN0IHRpbWUgaXQncyBoYXBwZW5lZCBhdCB0aGUgZW5kIG9mIGFueSBnYW1lLiBIb3cgbWFueSB0aW1lcyBoYXZlIHdlIHNlZW4gb2ZmaWNpYWxzIHN3YWxsb3cgdGhlaXIgd2hpc3RsZXMgaW4gdGhlIGxhc3Qgc2Vjb25kcyBvZiBOQkEgZ2FtZXM/IEkndmUgc2VlbiBMaWxsYXJkIGdvIGZvciB0aGlzIHNhbWUgcGxheSBtYW55IHRpbWVzIGJlZm9yZSBhbmQgbm90IGdldCBjYWxsZWQgYXQgdGhlIHJpbSwgaGUncyBnb3R0YSBzdGFydCByZWFkaW5nIHRoZSBkZWZlbnNlIGFmdGVyIHRob3NlIGJyZWFrZG93bnMgYW5kIGhpdCB0aGUgb3BlbiBtYW4sIEhvb2Qgd2FzIG9wZW4gaW4gdGhlIGNvcm5lciB3aXRoIGxpa2UgNCBzZWNvbmRzIGxlZnQuIEkgYWdyZWUgaXQgd2FzIGEgdGVycmlibGUgY2FsbCwgYnV0IHBsYXllcnMgbmVlZCB0byBsZWFybiBub3QgdG8gbGVhdmUgdGhlIGdhbWUgaW4gdGhlIGhhbmRzIG9mIHRoZSBvZmZpY2lhbHMgbGlrZSB0aGF0LCB0aGV5IGFyZW4ndCBnb2luZyB0byBnZXQgdGhlIGNhbGwuIDIgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KSXQgaXMgYWx3YXlzIGJldHRlciB0byBicmFrZSB0aGFuIHN3ZXJ2ZSBhbmQgY2F1c2UgbW9yZSBjaGFvcy4gCk15IHNxdWF0cyBJIGZpbmlzaGluZyB0aGUgd29ya291dCBidXQgaXQgdmVyeSB2YXJpYWJsZSB3aGF0IEkgY2FuIGRvIG9uIEFNUkFQLiBJdCBhbnl0aGluZyBmb21yIDEwIDE1IHVzdWFsbHkgKG90aGVyIHRoYW4gMjAgdGhlbiAxOCB0aGUgZmlyc3Qgd2VlaykgYnV0IGl0IG5vdCBhbHdheXMgaW4gYW4gaW5jcmVhc2luZyBmYXNoaW9uIChmb3IgZXhhbXBsZSBJIGRpZCAxMyBsYXN0IHdvcmtvdXQgYW5kIDEwIHRoaXMgd29ya291dCBidXQgaXQgYXQgdGhlIHNhbWUgd2VpZ2h0KS4gQW55IGFkdmljZT8gSSBvbmx5IGRvaW5nIG15IEFNUkFQIDErIHNldCBhdCAxMDAgbGJzIHNvIEkgZmVlbCBsaWtlIEkgc2hvdWxkIGJlIGF0IHRoZSBwb2ludCB3aGVyZSBJIGNhbiBzdGlsbCBtYWtlIGEgbG90IG9mIHByb2dyZXNzIGF0IGEgZGVjZW50IHdlaWdodC4gCkJhY2twYWdlLCBpbiBteSBvcGluaW9uLCB3aGljaCBpcyBrbm93biBmb3IgbG90cyBvZiBpc3N1ZXMgd2l0aCBodW1hbiB0cmFmZmlja2luZywgYW1vbmcgb3RoZXJzLiAKSSBkb24ndCBrbm93IHdoYXQgdGhleSBhcmUgcGxhbm5pbmcuIApXaGlsZSBpbiB0aGUgZWFybHkgZGF5cywgSHVhd2VpIHNvbGQgZXF1aXBtZW50IGJvdGggdG8gdGhlIGdvdmVybm1lbnQgYW5kIHRoZSBQTEEsIHRoaXMgYnVzaW5lc3MgaGFkIGJlY29tZSAibW9kZXN0IiBieSAyMDA1LCBhY2NvcmRpbmcgdG8gTXIgWmFmaXJvdnNraS4gIkNoaW5hIE1vYmlsZSB3YXMgdGhlaXIgYmlnZ2VzdCBjdXN0b21lciwiIGhlIHNhaWQuCkhpLCBJIGhhdmUgYSBuZXcgQ293b24gaUFVRElPIDkgcG9ydGFibGUuIFRoZSBsb3NzbGVzcyBmaWxlcyBJIHJpcCBmcm9tIFdpbmRvd3MgTWVkaWEgUGxheWVyIGVuZCB1cCB0aGUgc2FtZSBzaXplIG9uIHRoZSBkZXZpY2UgYWZ0ZXIgc3luY2VkLiBIb3dldmVyLCB0aGUgZGV2aWNlIGRvZXNuJ3QgaGF2ZSBhIHdheSB0byBjaGVjayB0aGUgYml0cmF0ZSBvZiBhbnkgc29uZy4gCkNoZWNrIG91dCBwaW5zIGZyb20gQ2hlcnJ5IE1vb24gUHJlc3MsIGpvaW4gdGhlIEZlbWluaXN0IEJvb2sgQ2x1YiwgYW5kIHNob3AgZm9yIGNsb3RoaW5nIGZyb20gVGFuZGVtIFZpbnRhZ2UsIENBS0UgUGx1cyBTaXplIFJldGFpbCwgYW5kIFRyYWNrR2lybHouIApUd28gaW5kZXBlbmRlbnQgcmV2aWV3ZXJzIGV2YWx1YXRlZCB0cmlhbHMgZm9yIG1ldGhvZG9sb2dpY2FsIHF1YWxpdHkgYWNjb3JkaW5nIHRvIHRoZSBKYWRhZCBzY2FsZSwgd2hpY2ggYXdhcmRzIHBvaW50cyBmb3IgcmFuZG9taXNhdGlvbiwgYmxpbmRpbmcgYW5kIGZvbGxvdyB1cC4gVGhlIG1vc3QgcmVjZW50IHRyaWFsLCB3aGljaCB3YXMgYWxzbyB0aGUgbGFyZ2VzdCBhbmQgbW9zdCByaWdvcm91cywgc2hvd2VkIHRoYXQgdGhvc2Ugd2hvIHJlY2VpdmVkIG1hc3NhZ2UgZXhwZXJpZW5jZWQgbW9yZSBiZW5lZml0IHRoYW4gdGhvc2Ugd2hvIHJlY2VpdmVkIGxpZ2h0IHRvdWNoLiBUaGUgZGlmZmVyZW5jZXMgd2VyZSBzdGF0aXN0aWNhbGx5IHNpZ25pZmljYW50IGZvciBpbW1lZGlhdGUgZWZmZWN0cyBvbiBwYWluIGFuZCBzaG93ZWQgYSB0cmVuZCwgYnV0IHdlcmUgbm90IHN0YXRpc3RpY2FsbHkgc2lnbmlmaWNhbnQgZm9yIHN1c3RhaW5lZCBlZmZlY3RzLiBNb3N0IHRyaWFscyBmb3VuZCB0aGF0IG1hc3NhZ2UgaGFkIGEgcG9zaXRpdmUgZWZmZWN0IGF0IGxlYXN0IG9uIGNlcnRhaW4gb3V0Y29tZXMuIFRoZSBpbnRlcnZlbnRpb24gd2FzIGxhcmdlbHkgZGVmaW5lZCBieSBleGNsdXNpb24gY3JpdGVyaWEuICBlbmNvbXBhc3NlZCBhIHJhbmdlIG9mIGRhdGFiYXNlcyB3aXRoIG5vIGxhbmd1YWdlIHJlc3RyaWN0aW9ucy4gU3R1ZHkgdmFsaWRpdHkgd2FzIGFzc2Vzc2VkLCBidXQgdGhlIHNjYWxlIHVzZWQgd2FzIGxpbWl0ZWQsIHBhcnRpY3VsYXJseSB3aGVuIGRlYWxpbmcgd2l0aCB0cmlhbHMgb2YgY29tcGxleCBpbnRlcnZlbnRpb25zIHN1Y2ggYXMgbWFzc2FnZS4gVHJpYWxzIHNob3dlZCB2YXJpYXRpb24gaW4gcG9wdWxhdGlvbiwgaW50ZXJ2ZW50aW9uLCBjb21wYXJhdG9yIGFuZCBvdXRjb21lcywgc28gYSBuYXJyYXRpdmUgc3ludGhlc2lzIHdhcyBhcHByb3ByaWF0ZS4gVGhlIG92ZXJhbGwgY29uY2x1c2lvbnMgYXBwZWFyIHJlbGlhYmxlLCBhbHRob3VnaCB2YXJpYXRpb24gYmV0d2VlbiB0eXBlcyBvZiBpbnRlcnZlbnRpb24gZGlkIG5vdCBhcHBlYXIgdG8gaGF2ZSBiZWVuIGNvbnNpZGVyZWQgZnVsbHkuCk1vcmUgdGhhbiBvbmNlIEkgZ2F2ZSB1cC4gRm9yIHNvbWVvbmUgd2hvIGFscmVhZHkgaGFzIHNvY2lhbCBhbnhpZXR5LCB0byBiZSB0b2xkICJnZXQgaGVscCwgZm9yIHJlYWwiIHJpbmdzIHdpdGggdGhlIHNhbWUgaW5zaW5jZXJpdHkgYXMgdGVsbGluZyBkZXByZXNzZWQgcGVvcGxlIHRvICJzdG9wIGJlaW5nIHNhZCIuIApFdmVuIHRob3VnaCB0aGUgbGVzc29uIHNvbWVob3cgZW5kZWQgdXAgYmVpbmcgdGhhdCB5b3UgYXJlIHN1cHBvc2VkIHRvIGRlY2FwaXRhdGUgeW91ciBzbGFpbiBlbmVtaWVzLiAKVGhlcmUgd2FzIGVhcmxpZXIgd29yayBpbiAxODAyIGJ5IFZhc2lseSBQZXRyb3YgKGQuIApTaGUgZGlkIG5vdCBjb21tZW50IG9uIHRoZSBjaGFyZ2VzIG9yIHRha2UgcXVlc3Rpb25zLiAKSXQgc291bmRzIGxpa2UgeW91IG5vdCBhZGRyZXNzaW5nIHRoZSBuZWVkcyBvZiB0aGUgcG9zaXRpb24uIEluZGljYXRvcnMgZXhpc3QgaW4gZXZlcnkgcG9zaXRpb24gdGhhdCBjYW4gaGVscCB5b3VyIGZvcm11bGF0ZSBhIHBsYW4uIFRoZSBmaXJzdCBwb3NpdGlvbiBibGFjayBpcyBjcmFtcGVkIHdpdGggdmVyeSBwb29yIHBpZWNlIHBsYWNlbWVudC4gClNlcmlvdXMgam91cm5hbGlzbSBkZW1hbmRzIHRoYXQgd2UgYXNrIHRoZXNlIHF1ZXN0aW9ucy5TaG91bGQgcG9saXRpY2lhbnMgd2hvIHB1cnBvc2VmdWxseSBsaWUgdG8gc3RhcnQgd2FycyBvZiBhZ2dyZXNzaW9uIGJlIGV4ZWN1dGVkIHdpdGhvdXQgdHJpYWw/IEFmdGVyIGEgdHJpYWw/IFllcyBvciBuby5TaG91bGQgYmFua2VycyB3aG8gcHJvZml0IG9mZiB0aGUgbWlzZXJ5IG9mIG1pbGxpb25zIG9mIHBlb3BsZSBhbmQgdGhlbiBwYXkgdGhlbXNlbHZlcyByZWNvcmQgc2FsYXJpZXMgYmUgZXhlY3V0ZWQ/IFllcyBvciBuby5TaG91bGQgdGhlc2Ugc2FtZSBiYW5rZXJzIGJlIHRvcnR1cmVkPyBZZXMgb3Igbm8uU2hvdWxkIFRpZ2VyIFdvb2RzIGJlIGV4ZWN1dGVkPyBPciBqdXN0IHRvcnR1cmVkPyBQbGVhc2UgY2hvb3NlIG9uZS5TaG91bGQgdGhlIGpvdXJuYWxpc3RzIHdobyB0aG91Z2h0IGRlYmF0aW5nIHRoZSBleGVjdXRpb24gb2YgaG9tb3NleHVhbHMgd2FzIGdvb2Qgam91cm5hbGlzbSBiZSBmb3JjZWQgdG8gY29tcGxldGUgYW4gaW50ZW5zaXZlIHNlbWluYXIgaW4gZXRoaWNzPyBPciBzaG91bGQgdGhleSBqdXN0IGJlIGZpcmVkPyBPciBzaG91bGQgdGhlc2Ugam91cm5hbGlzdHMgYmUgZXhlY3V0ZWQ/IFBsZWFzZSBjaG9vc2Ugb25lLlRoZSBwcm9ibGVtIHdpdGggb2xkIHNjaG9vbCwgQkJDIHN0eWxlIHJlcG9ydGluZyBpcyB0aGF0IGl0cyByaWRpY3Vsb3VzIGNsYWltcyB0byAib2JqZWN0aXZpdHkiIGFuZCAibmV1dHJhbGl0eSIgbGVhdmUgaXQgb3BlbiB0byBqdXN0IHRoZXNlIGtpbmRzIG9mIG1pc3Rha2VzLiBUaGUgY2xhaW0gdG8gb2JqZWN0aXZpdHksIGluIGpvdXJuYWxpc20gYXMgd2VsbCBhcyBpbiBvdGhlciBmaWVsZHMgb2YgaW5xdWlyeSwgaXMgYmFzZWQgb24gdGhlIGJlbGllZiB0aGF0IGEgYm9keSBjYW4gcmlzZSBhYm92ZSBpdHMgcG9zaXRpb24gaW4gdGhlIHNvY2lhbCB3b3JsZCBhbmQgdmlldyBsaWZlIGZyb20gYWJvdmUsIGFuIEFyY2hpbWVkZWFuIHZpZXdwb2ludC5CdXQgdGhpcyBjbGFpbSB0byBvYmplY3Rpdml0eSBpcyBhIGZhbnRhc3kuIEV2ZXJ5b25lIGhhcyBhIHBhcnRpY3VsYXIgcG9pbnQgb2YgdmlldyBmb3JnZWQgZnJvbSBwYXJ0aWN1bGFyIHBvc2l0aW9ucyBpbiB0aGUgd29ybGQgIHJhY2UsIGdlbmRlciwgY2xhc3MsIG5hdGlvbmFsaXR5LCBhbmQgeWVzLCBzZXh1YWxpdHkuIApJdCB3YXMgd2l0aCB0aGlzIGF0dGFjayBiZWhpbmQgaGltIHRoYXQgVHJ1bXAgc2VudCBoaXMgVVMgU2VjcmV0YXJ5IG9mIFN0YXRlIFJleCBUaWxsZXJzb24gdG8gTW9zY293IGZvciB0aGVpciBmaXJzdCBkaXJlY3QgaW50ZXJhY3Rpb24gdW5kZXIgVHJ1bXAgd2l0aCB0aGUgUnVzc2lhbnMuLiAKVGhlc2UgZGFuY2VycyBjYW4ndCBzaXQvc2xlZXAgZm9yIDQ2IGhvdXJzIGFzIFRob24gaXMgZ29pbmcgb24uIApJbWFnaW5lIHlvdSBhcmUgd2hlcmUgSSBhbS4gCllvdSBkb24ndCBnZXQgdG8gYmUgcHJvdGVjdGVkIHdoaWxlIGV2ZXJ5b25lIGVsc2UgYWJzb3JicyB0aGUgY29zdCBvZiB5b3VyIHN1YnNpZHkgdmlhIHRoZWlyIHJlbnQgcHJpY2VzIG9yIG1ha2UgaXQgaW1wb3NzaWJsZSBmb3IgbmV3IHBlb3BsZSB0byBnYWluIGFjY2VzcyB0byB5b3VyIGFyZWEganVzdCBiZWNhdXNlIHlvdSBmZWVsIGxpa2UgaXQgb3IgeW91IGdvdCB0aGVyZSBmaXJzdC4uIApPdGhlciB0aGFuIHRoYXQsIEkgYWx3YXlzIG1ha2UgYSBnb29kIGZhaXRoIGVmZm9ydCB0byBwbGF5IHRocm91Z2ggYSBnYW1lIGZhaXIgYW5kIHNxdWFyZSB0aGUgZmlyc3QgY291cGxlIG9mIHRpbWVzIGJlZm9yZSBJIHVzZSBhbnkgY2hlYXRzLiBBbmQgd2hlbiBJIGRvIHVzZSB0aGVtLCBpdCByZWFsbHkgdG8ganVzdCBzY3JldyBhcm91bmQgYW5kIHRyeSB0aGluZ3Mgb3V0IHRoYXQgYXJlbiBmZWFzaWJsZSBvbiBhbiBob25lc3QgcGxheXRocm91Z2guIApBbiBpbnF1ZXN0IGlzIHVuZGVyIHdheS4gCkZvciBtZSB0byBnYWluIHdlaWdodCwgSSBwcmV0dHkgbXVjaCBoYXZlIHRvIGVhdCB1bnRpbCBJIHN0dWZmZWQgdG8gdGhlIGJyaW0gICB1bmNvbWZvcnRhYmx5IGZ1bGwgICBBTEwgZGF5LiAKVGhleSBhcmUgcGFydCBvZiBvdXIgc3RvcnkgYW5kIHdlIG5lZWQgdG8ga25vdyB0aGlzIGhpc3RvcnksIGFuZCBlbnN1cmUgb3VyIHJhbmdhdGFoaSBsZWFybiBpdCBhdCBzY2hvb2wuIEkgaGF2ZSBkb25lIGxvdHMgb2Ygc2Nob29sIHZpc2l0cyBteXNlbGYgaW4gdGhpcyB0aW1lIGFuZCBJIGtub3cgeW91bmcgcGVvcGxlIHJlYWxseSBnZXQgd2h5IHRoaXMgaGlzdG9yeSBtYXR0ZXJzIHRvIHRoZW0gYW5kIHRoZWlyIGNvbW11bml0aWVzLiBJbiBzb21lIHJlc3BlY3RzIHRoZXkgYXJlIGxlYWRpbmcgdGhlIHdheSBmb3IgdGhlaXIgZWxkZXJzLiAKR2FyeSBoZWxkIGEgMTUsNDYwLDAwMCB0byAxMSw4MDUsMDAwIGNoaXAgYWR2YW50YWdlIG92ZXIgaGlzIG9wcG9uZW50IGFuZCBoZSBuZXZlciByZWxpbnF1aXNoZWQgdGhlIGxlYWQuIFRoZSBmaW5hbCBoYW5kIHNhdyBHZW5ldCBwdXQgYWxsIGhpcyBjaGlwcyBpbnRvIHRoZSBwb3Qgd2l0aCBLaW5nIFRlbiBhbmQgR2FyeSBjYWxsZWQgd2l0aCBhIHBhaXIgb2Ygc2V2ZW5zLiBHZW5ldCB3ZW50IGFoZWFkIHdoZW4gYSAxMCBjYW1lIGRvd24gYXMgb25lIG9mIHRoZSBmaXJzdCB0aHJlZSBjb21tdW5pdHkgY2FyZHMuIEJ1dCB3aXRoIHR3byBjYXJkcyB0byBjb21lLCBHYXJ5IGhpdCBhbm90aGVyIDcgdG8gZ2l2ZSBoaW0gdGhlIHdpbm5pbmcgaGFuZC4KVGhlcmUgYXJlIG5vIHBvaXNvbm91cyBzbmFrZXMgaW4gTWFpbmUuClRoZXkgd2VyZSBvbmUgb2Ygb3VyIGNsaWVudHMgdGhhdCByZWplY3RlZCBhbGwgcmVjb21tZW5kYXRpb25zIGZvciBtb3JlIHNvcGhpc3RpY2F0ZWQgc2VjdXJpdHkgc29sdXRpb25zLCBhbmQgaXQgZmluYWxseSBjYXVnaHQgdXAgd2l0aCB0aGVtLiBPbmUgb2YgdGhlIHJlYXNvbnMgd2h5IEkgbGVmdCB0aGUgTVNQIHNwYWNlLiBOb2JvZHkgdW5kZXJzdG9vZCBzZWN1cml0eSBhbmQgc21hbGwgYnVzaW5lc3Mgb3duZXJzIG9ubHkgc2F3IHRoZSBib3R0b20gbGluZS4uIApUaGV5IGp1c3QgYmVsaWV2ZSB0aGF0IGJlaW5nIHJhY2lzdCBpbmNsdWRlcyBvbmx5IHRoZSBtb3N0IHZpcnVsZW50IGZlZWxpbmdzIG9mIGhhdHJlZCBvZiBibGFjayBwZW9wbGUgIGxpa2UgImx5bmNoaW5ncyBhcmUgY29vbCIgdHlwZSBmZWVsaW5ncy4gCkluIGhpcyBzaG9ydCBzdG9yeSAiUXVhbnR1bSBvZiBTb2xhY2UiIGhvd2V2ZXIsIElhbiBGbGVtaW5nIHVzZXMgdGhlIHRlcm0gYXMgYSByZXBsYWNlbWVudCBmb3IgdGhlIHdvcmQgbWluaW11bS4gSXQgcmVsYXRlcyB0byB0aGUgaWRlYSB0aGF0IHR3byBwZW9wbGUgaW4gYSByZWxhdGlvbnNoaXAgaGF2ZSB0byBiZSBhYmxlIHRvIGdpdmUgYSBtaW5pbXVtIG9mIHNvbGFjZSB0byBlYWNoIG90aGVyIHdoZW4gdGhlIHNpdHVhdGlvbiByZXF1aXJlcyBpdDsgaWYgdGhleSBkb24gdGhlcmUgaXMgbm8gcmVzcGVjdCBsZWZ0IGFuZCB0aGUgcmVsYXRpb25zaGlwIGlzIG92ZXIuCk92ZXJ2aWV3IGZvciB3bGVhCklmIHlvdSBjb21lIGZyb20gYSBiYWNrZ3JvdW5kIHRoYXQgZ29vZCBhdCBpbXBsZW1lbnRpbmcgSUVQcywgeW91IGJlIHNvIG11Y2ggYmV0dGVyIG9mZiB0aGFuIG1vc3QuVGVhY2hpbmcgd2lsbCBzdXJlbHkgaW5jcmVhc2UgeW91ciBpbXBhY3Qgb24gdGhlIHN0dWRlbnRzIGxpdmVzLiAKVGhleSdyZSBmZW1pbml6ZWQgc2VlZHMsIGJ1dCB3aXRoIGFueSBmZW0gc2VlZCB0aGV5IHdpbGwgc3RpbGwgaGF2ZSB0aGUgY2hhbmNlIG9mIGhlcm1pbmcgYWdhaW4uIApTdGV2ZW5BcnZpdiAgMSBwb2ludCAgc3VibWl0dGVkIDEgZGF5IGFnbwoiU2NoY2h0ZXJuLCBTaW5nbGUsIGZydXN0cmllcnQgZGFzIHdhciBnZXN0ZXJuLiBNZWlzdGVyIFZlcmZocmVyIE5laWwgU3RyYXVzcyB6ZWlndCwgd2llIE1hbm4gaW4gbnVyIDMwIFRhZ2VuIGxlcm50LCBqZWRlIEZyYXUgenUgZXJvYmVybi4gCkkgdGhpbmsgaXQgc2hvdWxkIGdvIHdpdGhvdXQgc2F5aW5nIHRoYXQgaHVtYW5zIGFyZW4ndCBob3JzZXMuIE91ciBzcGVjaWVzJyBhYmlsaXR5IHRvIGxlYXJuIGFuZCBhZGFwdCBpcyBxdWl0ZSBsaXRlcmFsbHkgb3VyIGNlbnRyYWwgZXZvbHV0aW9uYXJ5IGFkdmFudGFnZS4gWW91IGFyZSBsaWtlbHkgY29ycmVjdCB0aGF0IHNvbWUgb2YgdGhvc2Ugd2hvc2UgY2FyZWVycyBhcmUgbWFkZSBvYnNvbGV0ZSB3aWxsIG5vdCBiZSB3aWxsaW5nIG9yIGFibGUgdG8gcmV0cmFpbiBpbnRvIGEgbmV3IGNhcmVlci4gClRob3NlIGtpZHMgbmVlZCB0aGVyYXB5KGFidXNpdmUsIGFkZGljdCBmYXRoZXIgd2hvIGFiYW5kb25lZCB0aGVtLCBtZXNzeSBwYXJlbnRhbCBzcGxpdCwgbW92ZWQgYXJvdW5kIGEgbG90ICAgbG9vayB1cCBBQ0UgdGVzdHMsIHRoZXkgYXJlbiBldmVyeXRoaW5nIGJ1dCBoaWdoZXIgc2NvcmVzIHRlbmQgdG8gYmUgYSBzaWduIG9mIG1vcmUgdHJhdW1hKS4gVW50aWwgdGhhdCBjYW4gaGFwcGVuIHRoZXkgbmVlZCBhcyBtYW55IGdvb2QgcGVvcGxlIGFyb3VuZCB0aGVtIGFzIHRoZXkgY2FuLiBUaGUgZWFzaWVzdCB3YXkgdG8gZXhwbGFpbiBhYm91dCB0YWxraW5nIHRvIHNvbWUgYWR1bHRzIGFuZCBub3Qgb3RoZXJzIGlzIGxldCBoZXIga25vdyB0aGF0IGl0IGlzbiBHcmFuZG1hIENyYXp5IGJ1c2luZXNzLiAKSSBtYWRlIHRoaXMgbWlzdGFrZSBhcyB3ZWxsIGFuZCB3YXMgdW5kZXIgZWF0aW5nIG15IHByb3RlaW4gbGV2ZWxzIGZvciB5ZWFycyB1bnRpbCBJIGxlYXJuZWQgYWJvdXQgcGVyY2VudCB5aWVsZHMgaW4gbXkgZGlldGV0aWMgZmllbGQgKGFtIGN1cnJlbnRseSBpbiBzY2hvb2wgZm9yIG51dHJpdGlvbikuLiAKSSBqdXN0IGxlYXJuZWQgdG9kYXkgdGhhdCB0aGV5IHJlZ2VuZXJhdGUuIElmIGEgcGxheWVyIHVzZWQgZmlyZSBiZWNhdXNlIHRoZXkganVzdCAia25ldyIgdGhhdCwgSSB3b3VsZCBiZSBpcnJpdGF0ZWQuIEhvd2V2ZXIsIGlmIHRoZXkgd2VyZSBhIHdpemFyZCBhbmQgdGhleSBkaWQgaXQgaW4gY2hhcmFjdGVyPyAiVHJvbGxzIHJlZ2VuZXJhdGUhIEkgbGVhcm5lZCBpdCBpbiBteSBzdHVkaWVzISIgSSBob25lc3RseSB0aGluayBJIGJlIG9rYXkgd2l0aCBpdC4gClRoZSBhbnRpIHRheGF0aW9uIGFwcHJvYWNoIGNvbWVzIGZyb20gdGhlIHJlamVjdGlvbiBvZiBjb2VyY2lvbi4gWW91IGRvbiBnZXQgdG8gY2xhaW0ga2luZG5lc3MgYnkgbWFraW5nIHNvbWVvbmUgZWxzZSBwYXkgdXAuIFRoZXJlIG5vIGpveSBpbiBnaXZpbmcgd2hlbiBpdCBkb25lIHVuZGVyIHRocmVhdCBvZiBwdW5pc2htZW50LiAKVGhhdCBhY3R1YWxseSB3aGVyZSBteSBoYW5kbGUgY2FtZSBmcm9tOiBpZiB0aGUgc29jcmF0aWMgbWV0aG9kIGlzIHRvIHF1ZXN0aW9uIGVhY2ggcG9pbnQgbWV0aG9kaWNhbGx5IHVudGlsIHlvdSBhcnJpdmVkIGF0IGEgZmluYWwgYXJndW1lbnQsIHRoZSBwbGF0b25pYyBtZXRob2QgaXMgdG8gZG8gc28gaW4gYSBraW5kIG9mIGRvdWNoZXkgd2F5IHRvIG1ha2UgeW91cnNlbGYgZmVlbCBjb29sIDpECk1hbnkgY29tbWVudGF0b3JzIGFydWdldGhhdCBpbiBjb21wYXJpc29uIHdpdGggbW9zdCBvdGhlciBkZXZlbG9wZWQgY291bnRyaWVzIG91ciB0YXggcmF0ZXMgb24gdGhlIHBvb3IgYXJlIGhlYXZ5IGFuZCB0aGUgdGF4IHJhdGVzIG9uIHRoZSBoaWdoIGluY29tZS93ZWFsdGh5IGFyZSBsaWdodC4gVG4ga29lIG0gdHUgWy4gClRoZXJlIGFyZSBwcm9zLCBmb3Igc3VyZS4gQWxzbyBnb3QgbXkgdmlvbGVudCBhbmQgbW9zdGx5IHVuc2tpbGxlZCBsZW8gaW4gYSBzaWVnZSBkZWYgd2l0aCBhIHBvc2l0aXZlIHdpbnJhdGUgcmlnaHQgbm93IHRvbyA6cC4gCk90aGVyIGNvbXBsYWluYW50cyBzb29uIGNhbWUgZm9yd2FyZCwgYW5kIEtpc3NuZXIgbm93IGZhY2VzIDE3IGNyaW1pbmFsIGNvdW50cyAxMSBmb3Igc2V4dWFsIGFzc2F1bHQsIGZpdmUgZm9yIHNleHVhbCBleHBsb2l0YXRpb24gYW5kIG9uZSBmb3Igc2V4dWFsIGludGVyZmVyZW5jZSBpbnZvbHZpbmcgZWlnaHQgYWxsZWdlZCBtYWxlIHZpY3RpbXMgYXMgeW91bmcgYXMgMTYuLiAKSWYgaXQgcmVhbGx5IHNvIGJhZCwgbm8gb25lIHdvdWxkIGRlY2lkZSB0byBnaXZlIGJpcnRoIHR3aWNlLiBUaGlzIHdhcyBzYWlkIGJ5IG9uZSBvZiBteSBiZXN0IGZyaWVuZHMgd2hvIGhhZCBhIHRlcnJpYmxlIGRlbGl2ZXJ5IHdpdGggaGVyIGZpcnN0IGNoaWxkICAgZmFpbGVkIGluZHVjdGlvbiwgZW1lcmdlbmN5IGMgc2VjdGlvbiwgbG9zcyBvZiB0b28gbXVjaCBibG9vZCwgZGlmZmljdWx0IGhlYWxpbmcsIGV0Yy4gU2hlIHNpbmNlIGhhZCBhIHNlY29uZCBjaGlsZCBhbmQgaXMgbm93IHRoaW5raW5nIGFib3V0IGEgdGhpcmQuLiAKSmVzdXMgY2hyaXN0IHlvdSBoYXZlIG5vIGlkZWEgd2hhdCB5b3UgYXJlIHRhbGtpbmcgYWJvdXQuIE1hbnkgcGVvcGxlIGhhdmUgYmVlbiBwYXJhbHl6ZWQgb3Igc28gaW5qdXJlZCB0aGV5IGNvdWxkIG5ldmVyIHdyZXN0bGUgYWdhaW4uIEhhdmUgeW91IG5vdCBzZWVuIG1pYyBmb2xleSBnZXQgdGhyb3duIG9mZiB0aGUgY2FnZSBhdCBoZWxsIGluIGEgY2VsbD8KRGVubiBudXIgZGFubiBrYW5uIG1hbiBzaWNoIGVudHNwYW5udCB2b20gU3VtbWVuIGRlciBhdXNnZXNjaGxvc3NlbmVuIFBsYWdlZ2Vpc3RlciBpbiBkZW4gU2NobGFmIHNpbmdlbiBsYXNzZW4uLiAKSWwgbidlbXBjaGUgcXVlIGplIHN1aXMgdHJzIHNlbnNpYmlsaXMgYXV4IGFidXMgcXVpIHNlIHByYXRpcXVlbnQgZGFucyBsZSBkb21haW5lIGRlIGxhIHBzeWNoaWF0cmllIGF2ZWMgbGEgcHJvYmxtZSBkZXMgaW50ZXJuZW1lbnRzIGRpdHMgZCdvZmZpY2Ugb3UgIGxhIGRlbWFuZGUgZGUgdGllcnMsIGNvbW1lIHBhciBleGVtcGxlIHVuIG1lbWJyZSBkZSBsYSBmYW1pbGxlLlVuIGNhcyB0eXBpcXVlIGQnYWJ1c0onYWkgIGdyZXIgZW4gY2UgbW9tZW50IGxlIGNhcyBkJ3VuIHBhcnRpY3VsaWVyIHBsdXMgb3UgbW9pbnMgInBzeWNob3RpcXVlIiBxdWUgc2Egc29ldXIgZmFpdCBlbmZlcm1lciByZ3VsaXJlbWVudCBkYW5zIHVuIGhwaXRhbCBwc3ljaGlhdHJpcXVlLCBmb3J0IHBldSBycHVibGljYWluLCBjYXIgaWwgZXN0IHRvdWpvdXJzIGRkaSAgbGEgbXJlIGQndW4gY2VydGFpbiBKc3VzLkNlcyBpbnRlcm5lbWVudHMgbmUgc29udCB0cnMgc291dmVudHogYWJ1c2lmcyBjYXIgZGFucyBsZSBjYXMgcXVlIGonYWkgZW4gdnVlIGwnaW50cmVzcyBuZSBtZXQgZW4gZGFuZ2VyIHBlcnNvbm5lIG1haXMgaWwgeSBhIGRlcnJpcmUgdW5lIHNvbWJyZSBoaXN0b2lyZSBkJ2ludHJ0ICBsYSBmb2lzIHBzeWNob3BhdGhvbG9naXF1ZSwgdm9pcmUgZmluYW5jaWVyLkxhIHNvZXVyIGVuIHF1ZXN0aW9uIGEgcHJpcyBsZSBjb21tYW5kZSBkdSBjb21wdGUgYmFuY2FpcmUgZGUgc29uIGZycmUgZGVwdWlzIDUgYW5zIGVudmlyb24uIApDYW5hZGEgaGFzIGFscmVhZHkgbGVmdC4gClRoZXkgaGFkIGEgY2hvaWNlIG9mIGhvcnNlcyBmcm9tIGEgZmluZSBzdGFibGUsIGVuam95ZWQgZm9ybWFsIGNhbmRsZWxpdCBkaW5uZXJzICh1c3VhbGx5IGEgTGltZXJpY2sgaGFtIHdhcyBpbiBldmlkZW5jZSApLCBhbmQgdGhleSB3ZW50IG9uIHdpbGQgY2FyIGpvdXJuZXlzIGludG8gQ29ubmVtYXJhIHJldHVybmluZyB0byBQYWRkeSBCdXJrZSBpbiBDbGFyZW5icmlkZ2UsIGZvciBveXN0ZXJzLCBHdWlubmVzcyBhbmQgc2luZ3NvbmdzLi4gCklmIHlvdXIgc3RvcmFnZSBhcmVhIGlzIGh1bWlkIHRoZXJlIGEgY2hhbmNlIGEgYml0IG9mIHJ1c3QgY291bGQgaGF2ZSBmb3JtZWQgaW4gdGhlIGNoYW1iZXIuIEl0IGVhc3kgdG8gY2xlYW4gdXAgdGhvdWdoQmVmb3JlIHNwZW5kaW5nIG1vbmV5IG9uIGEgZ3Vuc21pdGggZ2l2ZSB0aGUgY292ZXIgYSBnb29kIGNsZWFuaW5nLiBXcmFwIGEgMjAgZ2F1Z2UgYnJ1c2ggd2l0aCBzdGVlbCB3b29sLCBzcHJheSBhIGxpdHRsZSBvaWwgb24gaXQuIApIYXZpbmcgYmVlbiBpbiBjdXN0b2R5IHNpbmNlIEp1bmUgNiwgTmljaG9scycgdGVybSB3aWxsIGV4cGlyZSBvbiBTZXB0ZW1iZXIgNS4gUG9saWNlIHNhaWQgTmljaG9scyBlbnRlcmVkIHRoZSBwdWIgYXJvdW5kIGx1bmNoIHRpbWUgYW5kIGJlZ2FuIHBsYXlpbmcgdGhlICJRdWVlbiBvZiB0aGUgTmlsZSIgbWFjaGluZSwga25vd24gYXMgTm8uMTguIApBLGsscSBIaWdoIGNvbWJvcyB0aGF0IGhhdmUgdXMgYmVhdCgyIG92ZXIgY2FyZHMgaGF2ZSBhcm91bmQgMjQlIGVxdWl0eSBpZiB0aGV5IGdldCB0byBzZWUgdHVybiBhbmQgcml2ZXIgc28gZm9sZGluZyBvdXQgdGhhdCB0eXBlIG9mIGVxdWl0eSBpcyBIVUdFKS4gClRyeSBzdHJhaWdodCBkb3duIGhhaXIgcmF0aGVyIHRoYW4gcGlndGFpbHMgYW5kIG1ha2Ugc3VyZSB0aGF0IHlvdXIgaGFpciBkb2VzIG5vdCBjb3ZlciBlaXRoZXIgZXllcy4gWW91ciBleWVzIGhhdmUgYSBiZWF1dGlmdWwgZ2xvdyB0byB0aGVtOyBzaG93IHRoZW0gaW5zdGVhZCBvZiBoaWRpbmcgdGhlbSBiZWhpbmQgaGFpci5BY25lIHdpbGwgY29tZSBhbmQgZ28uIFRyeSB0byBjb3ZlciB0aGVtIGxpZ2h0bHkgYnV0IHRoZXJlIG5vIHJlYXNvbiB0byBjb3ZlciB0aGVtIGVudGlyZWx5IHdpdGggbWFrZXVwIGNyYXppbmVzcy4gCllvdSBrbm93LCB0aGUgb25lIHRoaW5nIHRoYXQgZXZlcnkgZmlzaCBoYXMgdG8gbWFrZSBzdXJlIGl0IGRvZXNuIGp1c3Qgc2luayB0byB0aGUgYm90dG9tIG9mIHRoZSBvY2VhbiB3aGVuIHRoZXkgc3RvcCBtb3ZpbmcgYW5kIGNhbiBzdGF5IHRoZSByaWdodCBzaWRlIHVwLiBUaGlzIGNyZWF0dXJlLiAKRm9yIG9uZSwgYWxjb2hvbCBpcyBub3QgcGFydCBvZiB0aGUgY3VsdHVyZSBpbiBRYXRhciwgd2hlcmUgaXQgaXMgaWxsZWdhbCB0byBkcmluayBpbiBwdWJsaWMuIApBc2tlZCBhYm91dCBhZGRpdGlvbmFsIGdyb3d0aCBpbiB0aGUgcmVnaW9uIGZvciBUaGUgUml0eiBDYXJsdG9uLCBIdW1sZXIgYWRkZWQsICJXZSBjb250aW51ZSB0byBleHBsb3JlIG90aGVyIG9wcG9ydHVuaXRpZXMgYW5kIGRlc3RpbmF0aW9ucyBpbiB0aGUgTWlkZGxlIEVhc3QgYW5kIEFmcmljYS4gV2l0aCB0aGUgcmlnaHQgaG90ZWxzIGluIHRoZSByaWdodCBsb2NhdGlvbnMsIEkgYmVsaWV2ZSBleHBhbnNpb24gaW4gdGhpcyByZWdpb24gaXMgYW4gZXNzZW50aWFsIHBhcnQgb2Ygb3VyIGZ1dHVyZSBzdHJhdGVneS4iCklscyBhaW1lbnQgbGV1ciB2aWxsZSwgSWxzIHkgc29udCBhdHRhY2hzLCBtYWlzIGlscyBzJ2FjY29yZGVudCBzb3V2ZW50ICBkaXJlIHF1J29uIHkgcmVzcGlyZSBtYWwsIHF1J29uIHkgY2lyY3VsZSBtYWwsIHF1J29uIHkgZXN0IHNvdXZlbnQgbWFsIGxvZyBldCBxdSdvbiB5IG1hbmdlIHBhcyB0b3Vqb3VycyB0cnMgYmllbi4gQnJlZiwgaWxzIGFpbWVyYWllbnQgcXVlIGxldXIgcXVhbGl0IGRlIHZpZSBzb2l0IG1laWxsZXVyZS4gQWxvcnMsIGlscyBydmVudCBkZSBjYW1wYWduZSwgZCdhbGltZW50YXRpb24gYmlvLCBkZSBsb2dlbWVudCBkdXJhYmxlLCBkZSBiaW9kaXZlcnNpdCBJbHMgdm9pZW50IGR1IGJpbyBwYXJ0b3V0LgpPdGhlciB0aGFuIHRoYXQsIEkgYWx3YXlzIG1ha2UgYSBnb29kIGZhaXRoIGVmZm9ydCB0byBwbGF5IHRocm91Z2ggYSBnYW1lIGZhaXIgYW5kIHNxdWFyZSB0aGUgZmlyc3QgY291cGxlIG9mIHRpbWVzIGJlZm9yZSBJIHVzZSBhbnkgY2hlYXRzLiBBbmQgd2hlbiBJIGRvIHVzZSB0aGVtLCBpdCByZWFsbHkgdG8ganVzdCBzY3JldyBhcm91bmQgYW5kIHRyeSB0aGluZ3Mgb3V0IHRoYXQgYXJlbiBmZWFzaWJsZSBvbiBhbiBob25lc3QgcGxheXRocm91Z2guIFRoZXkganVzdCBlbnN1cmUgdGhhdCB0aGUga2V5cyB0byB0aGUga2luZ2RvbSBhcmUgdGhlaXJzIG5vIG1hdHRlciB3aGF0IGFuZCB0aGVuIHJ1biBhbW9rLgpBbmQgc2hlIHJld2FyZHMgdGhhdCBjYXQgd2l0aCBhIGJpdCBtb3JlIGFmZmVjdGlvbiBhbmQgZXh0cmEgZm9vZC4gCjUuIFRoZSBXaG9sZSBQYWNrYWdlOiBMYXN0bHksIGxvb2sgZm9yIG1vdmVtZW50IHdhcm5pbmcgc2lnbnMsIG5lcnZvdXMgdHdpdGNoZXMgdGhhdCBzaWduYWwgdGhhdCB0aGUgcGVyc29uIGlzIGFib3V0IHRvIGFjdC4gVHdvIGNvbW1vbiBzaWducyBvZiBpbXBlbmRpbmcgYWN0aW9uIGFyZSBwYWNpbmcgYW5kIHN0YW5kaW5nIG9uIHRoZSBiYWxscyBvZiB0aGVpciBmZWV0LiBNYW55IGF0dGFja3MgYmVnaW4gd2l0aCBhIHBlcnNvbiBwYWNpbmcgYmFjayBhbmQgZm9ydGggYW5kIHRoZW4gbGF1bmNoaW5nIGFuIGF0dGFjayBhdCBhYm91dCB0aGUgbWlkcG9pbnQ7IG1hbnkgZmxpZ2h0cyBvciBlc2NhcGVzIGJlZ2luIHdpdGggdGhlIHBlcnNvbiBnZXR0aW5nIHVwIG9uIHRoZSBiYWxscyBvZiB0aGVpciBmZWV0LCBtdWNoIGFzIGEgcnVubmVyIHdvdWxkIGJlZm9yZSB0aGUgc3RhcnRpbmcgZ3VuIGdvZXMgb2ZmLgpJbCBzZW5zbyBkaSBVbml0IGNoZSBjb25zZW50ZSBkaSB2ZWRlcmUgZ2xpIGFsdHJpIGNvbWUgc2Ugc3Rlc3NpIGluIHF1YW50byBpbnRlcmNvbm5lc3NpIGluIHVuIHR1dHRvIGluIGN1aSBub24gc3Vzc2lzdGUgc2VwYXJhemlvbmUgYWxjdW5hLCAgbGEgdmlhIGNoZSBoYSBzY2VsdG8gZGkgaW50cmFwcmVuZGVyZSBsIEFSVCBlbGV2ZW4sIGxhIHZpYSBkZWxsJ2VycmFuemEgY29tZSBhdHRpdHVkaW5lIGVzaXN0ZW56aWFsZSwgZGkgc2VudGlyc2kgc2VtcHJlIGEgY2FzYSBpbiBvZ25pIGx1b2dvIGUsIG5lbGxvIHN0ZXNzbyB0ZW1wbywgaW4gbmVzc3VuIGx1b2dvLCBjb25zYXBldm9saSBkZWxsJ2ltcGVybWFuZW56YSBkaSB1biBldGVybm8gZmx1aXJlLgpUaGUgcXVlc3Rpb24gcXVpY2tseSBhcm9zZSwgb24gRUFSVEggZGlkIHRoZXkgZ2V0IHNvIGdvb2Q/IFRoZXJlIHdlcmUgYSBjb3VwbGUgb2YgYW5zd2Vycy4gRmlyc3Qgb2YgYWxsLCB0aGV5IGxpdmVkLCBhdGUsIGFuZCBicmVhdGhlZCBwb2tlci4gCk9NRyB0b28gcGVyZmVjdCBhbmQgdG9vIHRpbWVseSEgSSBoYXZlIGEgY291cGxlIG9mIGlzc3VlcyBhbmQgYSBjb3VwbGUgb2YgdGhpbmdzIGZyb20gbXkgcGFzdCB0aGF0IGNvbWUgdXAgYW5kIHRha2UgT1ZFUiBteSB0aG91Z2h0IHByb2Nlc3MuIApUaGlzIGJyZWF0aGFibGUgbWF0ZXJpYWwgZmxldyBpbiB0aGUgZmFjZSBvZiB0aGUgdHlwaWNhbCBmb2FtIHBhZGRlZCBzZWF0IGN1c2hpb25zLCBhbmQgd2FzIHNwZWNpYWxseSBkZXZlbG9wZWQgdG8gcmVkdWNlIGhlYXQgYnVpbGR1cC4gCldoZW4gc3VjaCBub3RpY2VzIGFyZSBzZW50IGJ5IGVtYWlsIG9yIG92ZXIgb3VyIHdlYnNpdGUsIHRoZXkgbWF5IGNvbWUgaW50byBlZmZlY3QgZnJvbSB0aGUgcG9pbnQgdGhleSB3ZXJlIHNlbnQuIAoidGhlcmUgd2FzbiBlbm91Z2ggZXZpZGVuY2UgdG8gbGVnYWxseSBjb252aWN0IiBhbmQgImlmIHRoZXJlIHdhcyBlbm91Z2ggZXZpZGVuY2UsIGl0IHN0aWxsIHdhc24gZW5vdWdoIHRvIG1lZXQgdGhlIGJleW9uZCBhIHJlYXNvbmFibGUgZG91YnQgc3RhbmRhcmQiKS4gCklmIHlvdSBoYXZlIHN0cmV0Y2ggbWFya3MgeW91J2QgbGlrZSB0byBlbGltaW5hdGUsIHRhbGsgdG8geW91ciBkZXJtYXRvbG9naXN0IGFib3V0IHlvdXIgb3B0aW9ucyBbc291cmNlOiBXZWJNRF0uLiAKVGhlIFJ1c3NpYW5zIGV2ZXIgc2FpZCBpcyB0aGV5IHdvdWxkIHV0aWxpemUgb3RoZXIgaWRlb2xvZ2llcyAgIGxpa2UgbmVvbGliZXJhbCBlY29ub21pY3MgYW5kIENocmlzdGlhbiBPcnRob2RveHkgICB0byBtb3ZlIHRoZSBwZW9wbGUgdG8gZG8gdGhlIHN0YXRlIGJpZGRpbmcuLiAKUHJvZmVzc29yIEJydWNlIEhvbGxpcyBvZiB0aGUgTWVkaWNhbCBVbml2ZXJzaXR5IG9mIFNvdXRoIENhcm9saW5hIGhhcyBzaG93biBwcmVnbmFudCBhbmQgbGFjdGF0aW5nIHdvbWVuIG5lZWQgYXQgbGVhc3QgNSwwMDAgSVUvZGF5LCBub3QgNjAwLgpZb3UgZG9uIG5lZWQgYSBjbGVhbnNlLiBZb3Ugb2Z0ZW4gdGltZXMgcXVpY2tseSBsb3NlIHdlaWdodCB3aGVuIHlvdSBlbnRlciBhIGNhbG9yaWUgZGVmaWNpdCB0aGF0IGlzIG1vc3RseSB3YXRlciB3ZWlnaHQsIHRoZW4gdGhlIHJhdGUgYXQgd2hpY2ggeW91IGxvc2Ugd2VpZ2h0IHNsb3dzIGRvd24uClNIQVJFUy4gCk9ubGluZSBnYW1ibGluZyBzZWVtcyB0byBiZSBvbmUgb2YgdGhlIGZldyBpbmR1c3RyaWVzIHRoYXQgYXJlIG5vdCBhZmZlY3RlZCBieSB0aGUgY3VycmVudCBnbG9iYWwgZWNvbm9taWMgY3Jpc2lzLiBXaXRoIHdlbGwgZXN0YWJsaXNoZWQgb25saW5lIGdhbWJsaW5nIGNvbXBhbmllcyByZXBvcnRpbmcgaW5jcmVhc2VkIHByb2ZpdHMsIHRoZSBvbmxpbmUgZ2FtYmxpbmcgaW5kdXN0cnkgY3VycmVudGx5IHNlZW1zIHRvIGJlIGluIGEgc3RhdGUgb2YgZ3Jvd3RoLgpCdXQsIHRoZSBNb25hcmNoIGRvZXMuIFlvdSBjYW4gYmFhYWFyZWx5IHNlZSB0aGUgc2xpdmVyIG9mIGl0IGF0IHRoZSB0b3AgaW4gdGhpcyBpbWFnZSwgYW5kIGluIHRoZSBtYWpvciBiYW5uZXIgeW91IGNhbiBzZWUgdGhlIGhhbmRsZSBmb3IgaXQgYmVoaW5kIHRoZSBQaWxvdCBzaXR0aW5nIG9uIHRvcC4uIApJIGNhbGxlZCBHb29nbGUgdG8gc2VlIGlmIHRoZXkgY291bGQgaG9ub3IgdGhlICQyMDAgY3JlZGl0LCB0aGV5IHNhaWQgdGhleSBjb3VsZG4gU28gdGhleSB0cmllZCBjYW5jZWxsaW5nIG15IG9yZGVyIGJ1dCBpdCBoYWQgYWxyZWFkeSBzaGlwcGVkIGFuZCBhZHZpc2VkIEkgcmVmdXNlIHRoZSBkZWxpdmVyeSBhbmQgcmVvcmRlciB0aGUgcGhvbmUgdG8gZ2V0IHRoZSBhZGRpdGlvbmFsIGNyZWRpdC4gCllvdSBtYXkgaGF2ZSB0byB1c2Ugc2VydmljZXMgdGhhdCB5b3UgbmV2ZXIgdGhvdWdodCB5b3UgdXNlLiAKSSBiZWVuIGRlYmF0aW5nIGVpdGhlciBzbGVlcGluZyBpbiBoZXIgcm9vbSBmb3IgYSBjb3VwbGUgb2Ygd2Vla3Mgb3IgcHV0dGluZyBhIGNvdCBmb3IgaGVyIGluIG91ciByb29tIGJ1dCBoYXZlbiBkb25lIGVpdGhlciB5ZXQuCkkgYXNzdW1lIGJ5ICJmZW1pbmluZSBtYW4sIiB5b3UgbWVhbiBhIG1hbiB3aG8gaGFzIHNvbWUgdHJhaXRzIHRoYXQgcGVvcGxlIHRyYWRpdGlvbmFsbHkgYXNzb2NpYXRlIHdpdGggd29tZW4uIFNvIGluIHRoYXQgY2FzZSB5b3UgYXJlIHJlZmVycmluZyB0byBzb21lb25lJ3MgZ2VuZGVyIHByZXNlbnRhdGlvbi9leHByZXNzaW9uL2NvbmZvcm1pdHkgIGhvdyBtdWNoIHRoZWlyIGFwcGVhcmFuY2Ugb3IgYmVoYXZpb3IgYWxpZ25zIHdpdGggd2hhdCB3ZSBzdGVyZW90eXBpY2FsbHkgYXNzb2NpYXRlIHdpdGggb25lIGdlbmRlciBvciBhbm90aGVyLiBCZWluZyBtYXNjdWxpbmUgdnMuIGZlbWluaW5lIGlzIGEgdmVyeSBzdWJqZWN0aXZlIG1lYXN1cmUgYmFzZWQgb24gc29jaWFsIHN0YW5kYXJkcyBhYm91dCBhcHBlYXJhbmNlLiBJbiB0aGlzIGNhc2UsIHJlZ2FyZGxlc3Mgb2YgaG93IGZlbWluaW5lIG9yIG5vdCB5b3UgdGhpbmsgdGhpcyBwZXJzb24gYXBwZWFycywgdGhleSBpZGVudGlmeSBhcyBhIG1hbi4gZ2l2ZW4gYXMgdGhlaXIgc2V4IG9uIHRoZWlyIGJpcnRoIGNlcnRpZmljYXRlKSAibWFsZSIgYXQgYmlydGgsIGJ1dCBpZGVudGlmaWVzIGFzIGEgd29tYW4uIEJlaW5nIHRyYW5zZ2VuZGVyIHZzLiBjaXNnZW5kZXIgaXMgYW4gaW5kaWNhdG9yIG9mIHdoZXRoZXIgb3Igbm90IHNvbWVvbmUncyBzZXggYXNzaWduZWQgYXQgYmlydGggYWxpZ25zIHdpdGggdGhlaXIgZ2VuZGVyIGlkZW50aXR5LgpUaGF0IGNhcGl0YWwgY291bGQgZ2VuZXJhdGUgJDE4LDI2NSBpbmNvbWUgYXNzdW1pbmcgYSAzIHBlciBjZW50IGFubnVhbCByZXR1cm4gYWZ0ZXIgaW5mbGF0aW9uIGZvciB0aGUgbmV4dCA0MCB5ZWFycyB0byBoZXIgYWdlIDk0LiBLYXRlIGhhcyBhIGRlZmluZWQgY29udHJpYnV0aW9uIHBlbnNpb24gcGxhbiBhdCBoZXIgd29yayB0aGF0IG1hdGNoZXMgMSBwZXIgY2VudCBvZiBoZXIgaW5jb21lIHdpdGggYW4gZXF1YWwgc3VtIGZyb20gdGhlIGVtcGxveWVyLiBJbiAxNiB5ZWFycywgdGhlIHBsYW4gd2l0aCAkMSw0NDAgYW5udWFsIGNvbnRyaWJ1dGlvbnMgd2lsbCBncm93IHRvICQyOSw5MDAgYW5kIHdvdWxkIGJlIGFibGUgdG8gc3VwcG9ydCBwYXlvdXRzIG9mICQxLDI1NiBwZXIgeWVhciBmcm9tIGhlciBhZ2UgNTMgZm9yIHRoZSBuZXh0IDQwIHllYXJzLgpUaGUgT2FrIEJsYWNrIEphY2sgVGFibGUgVHJheSBpcyBhbHNvIGNyYWZ0ZWQgZnJvbSBzdHVyZHkgdG9wIHF1YWxpdHkgb2FrLiBJdHMgY3JhZnRzbWFuc2hpcCBzdGFuZHMgYWxvbmUsIGFuZCBpdCBpcyBhIHN0eWxpc2ggYWRkaXRpb24gdG8gYW55IGJsYWNrIGphY2sgdGFibGUgdGhhdCB3aWxsIG1ha2UgaXQgYmUgZXZlbiBtb3JlIHJlZmluZWQgYW5kIGxvdmVseSBpbiB5b3VyIGhvbWUuIFRoaXMgZmFudGFzdGljIHRyYXkgYWxzbyBoYXMgYSBmbGF0IGJvdHRvbSB0byBpdC4gClRoZXkgb2ZmZXIgZGV0YWlsZWQgaG9yc2UgcmFjaW5nIHN0YXRpc3RpY3MgYW5kIHJlc3VsdHMgc2VydmljZSB0aGF0IGNvbWVzIGFsb25nIHdpdGggYSBiZXR0aW5nIG5ld3Mgc2VjdGlvbiB3aGVyZSBhbGwgdGhlIGxhdGVzdCBiZXR0aW5nIG5ld3MgYXJlIGF2YWlsYWJsZS4gCklmIGFueSBkZXZpY2UgaGFkIGEgcHVycG9zZSwgdGhlbiBhIHNwZWMgbnVtYmVyIGRlZmluZXMgaXQuIE5vIG51bWJlcnMgbWVhbnMgYmVzdCBwcm90ZWN0aW9uIHdhcyBhbHJlYWR5IGluc2lkZSB0aGUgVFYuIFNvbWUgbWFnaWMgYm94IChwbHVnIGluKSBkZXZpY2VzIGhhdmUgZXZlbiBjb21wcm9taXNlZCBzdXBlcmlvciBwcm90ZWN0aW9uIGluc2lkZSBhcHBsaWFuY2VzLiBZZXMsIHdlIGRlbW9uc3RyYXRlZCB0aGF0IG1hbnkgdGltZXMgYW5kIHN1Ym1pdHRlZCB0aG9zZSBjb25jbHVzaW9ucyB0byBkZXNpZ24gcmV2aWV3cy4KVGhlIHRvcCAxMCBmaW5pc2hlcnMgd2lsbCBiZSBhd2FyZGVkIHByaXplcywgaW5jbHVkaW5nICQ1LDAwMCBjYXNoIGZvciB0aGUgZ3JhbmQgcHJpemUgd2lubmVyIGFuZCAkMiw1MDAgY2FzaCBmb3IgdGhlIHNlY29uZCBwbGFjZSBmaW5pc2hlci4gCkhlIGp1c3QgaGFwcGVuZWQgdG8gaGF2ZSB0aGUgYmlnZ2VzdCBwb3RlbnRpYWwgdm90ZXIgYmFzZSBhbmQgdGhlIGJlc3QgY2FwYWJpbGl0eSB0byBtYXhpbWl6ZSBpdC5JIHBlcnNvbmFsbHkgdGhpbmsgdGhlICQxMG0gcHJpY2V0YWcgYW5kIHRoZSBzbGV3IG9mIGNvdW50ZXJzdWl0cyBjb25maXJtcyBUTEYgaXMganVzdCB0cnlpbmcgdG8gaW50aW1pZGF0ZSBIYXJpdGggaW50byBiYWNraW5nIGRvd24uIFRoZXkga25vdyB0aGV5IG5vdCBnb2luZyB0byBob2xkIHdhdGVyIGluIGNvdXJ0LCBidXQgdGhleSBsaWtlbHkgaG9waW5nIHRoZSBsZWdhbCBob29wcyBIYXJpdGggbm93IGhhcyB0byBnbyB0aHJvdWdoIGFuZCB0aGUgYmFkIHByZXNzIGhlIGdvaW5nIHRvIGdldCBpbiB0aGUgcHJvY2VzcyAoYSBOYWppYiBuYW1lZHJvcCBpc24gZXhhY3RseSBwcmV0dHkgaG90IHJpZ2h0IG5vdykgaXMgZW5vdWdoIHRvIGdldCBoaW0gdG8gc2l0IGRvd24uIApDb3ZlciBvZiBBZGRpY3Rpb24gU29sdXRpb24gYnkgTGxveWQgU2VkZXJlciwgTUQgKENvdXJ0ZXN5IG9mIFNpbW9uIFNjaHVzdGVyKQpKdWxpYW4gM3JkIG5hcnJhdGVzIHRoZSBib29rZW5kIHNlY3Rpb25zIG9mIHRoZSBmaXJzdCB0d28gc3Rvcmllcy4gClRoYXQgbWVhbnMgdGhlIGNvbXBhbnkncyBxdWFsaXR5IGNvbnRyb2wgaXMgcG9vci4gIkEgcmVjYWxsIGJ5IGl0c2VsZiBpcyBOT1QgYSBnb29kIHJlYXNvbiB0byBhdm9pZCBhIGZvb2QsIiBIZWluemUgc2F5cy4gCldpdGggdGhlIE9seW1waWNzIGp1c3QgYXJvdW5kIHRoZSBjb3JuZXIsIGZhc3QgZ3Jvd2luZyBDaGluYSBpcyBidXJzdGluZyBvbiB0aGUgd29ybGQgc2NlbmUuIApJbnZlc3RpZ2F0aW9uIGNvbnRpbnVpbmcuIApJdCdzIGNhbGxlZCB0aGUgdW5keWluZyBsYW5kcy4gVGhlcmUgbW9zdCBsaWtlbHkgdHJ5aW5nIHRvIHNheSB0aGF0IHRoZXkgd2FudCB0byBnZXQgb3V0IG9mIHRoZSB3b3JsZCBhbmQgZ28gdG8gaGVhdmVuLiAKQWZ0ZXIgU21pdGggb3BlbmVkIHRoZSBzY29yaW5nLCB0aGUgZ2FtZSByZW1haW5lZCAxIDAgdW50aWwgbWlkd2F5IHRocm91Z2ggdGhlIHNlY29uZCBwZXJpb2QuCldlIHBhcnRpY3VsYXJseSBhcHByZWNpYXRlIHRoZSB1bmRlcnN0YW5kaW5nIG9mIG91ciBndWVzdHMgYW5kIHdpbGwgY29udGludWUgdG8gc2VlayBvcHBvcnR1bml0aWVzIHRvIGZ1cnRoZXIgZW5oYW5jZSB0aGUgcG9rZXIgZXhwZXJpZW5jZSBhdCBIb3JzZXNob2UgQ2xldmVsYW5kLiAKV2FzIGEgc2VhIG9mIHdoaXRlIGZhY2VzIHRoYXQgY2FtZSBvdXQuIFRvIHNlZSB0aGF0IGxldmVsIG9mIGludGVyZXN0IGp1c3Qgc3BlYWtzIHRvIHRoZSB1bml2ZXJzYWxpdHkgb2YgdGhlIHN0b3J5LiBUaGUgZmlsbSBpcyBiZWluZyByZWxlYXNlZCBpbiBtaWQgQXVndXN0LCB0cmFkaXRpb25hbGx5IGEgdGltZSB3aGVuIHN0dWRpb3MgZHVtcCBhY3Rpb24gZmlsbXMgYW5kIG1lZGlvY3JlIGNvbWVkaWVzLiAKSSBNci4gClNheXMgd2FzIHRoZSBTeXJpYW4gZ292ZXJubWVudCdzIHVzZSBvZiBjaGVtaWNhbCB3ZWFwb25zIGFnYWluc3QgY2l2aWxpYW5zLiBKb2huIE1jQ2FpbiAoUiBBWikgdGVzdGlmaWVzIGJlZm9yZSBhIFNlbmF0ZSBDb21tZXJjZSwgU2NpZW5jZSBhbmQgVHJhbnNwb3J0YXRpb24gQ29tbWl0dGVlIGhlYXJpbmcgb24gdGhlIHN0YXRlIG9mIHZpZGVvLCBvbiBDYXBpdG9sIEhpbGwgTWF5IDE0LCAyMDEzIGluIFdhc2hpbmd0b24sIERDLiBUaGUgY29tbWl0dGVlIGRpc2N1c3NlZCB1bmJ1bmRsaW5nIGNhYmxlIHNlcnZpY2VzIGFuZCB0aGUgaW1wYWN0IG9mIGNoYW5naW5nIHRlY2hub2xvZ3ksIGFtb25nIG90aGVyIHRvcGljcy4gClRoaXMgaW5jbHVkZXMgbm9uIHJlbGV2YW50IHBvc3RzIHRvIHBva2VyLCBwdXNoaW5nIHlvdXIgbmV3cyBzaXRlLCBzaGlsbGluZyB5b3VyIGNyeXB0b2N1cnJlbmN5IHNwZWN1bGF0aW9ucywgZXhjZXNzaXZlIHNoaXQgcG9zdGluZywgYW5kIGNvbnRpbnVpbmcgdG8gcG9zdCBjb250ZW50IGFmdGVyIHlvdSBiZWVuIHNwZWNpZmljYWxseSB3YXJuZWQgbm90IHRvIGJ5IHRoZSBtb2QgdGVhbS4gSSBhIEJFIG1pY3JvIHN0YWtlcyBkb25rIHdobyBwbGF5cyBvbmxpbmUgZm9yIGZ1biB3aXRoIHNvbWUgY2FzaW5vIGV4cGVyaWVuY2UgaW4gTG9uZG9uLCBVSywgZGVjaWRlZCB0byBoZWFkIG91dCB0byBWZWdhcyB0byBzZWUgdGhlIHNpZ2h0cyBhbmQgYmxvdyBzb21lIG1vbmV5IG9uIGxpdmUgcG9rZXIgZm9yIHRoZSBleHBlcmllbmNlLiAKVXN1YWxseSBhIGJpeiB3aWxsIGhhdmUgc29tZSAiZXZlbnQiIGxpa2Ugc2F5IGFuIGV4ZWMgd2lsbCBkbyBzb21ldGhpbmcgZXZpbCBhbmQgZ2V0IGNhdWdodCBvbiBjYW1lcmEsIHRoZXkgcmVsZWFzZSBhIHByb2R1Y3QgdGhhdCBodXJ0cyBwZW9wbGUsIG9yIHRoZXkgYmUgcmV2ZWFsZWQgdG8gaGF2ZSB1c2VkIHNsYXZlIGxhYm9yLiBCdXQgSSBkb24gc2VlIHRoZSBjbGFzc2ljIHBhdHRlcm5zIGhlcmUgdG8gbWVyaXQgdGhpcyBwb3B1bGFyIDE4MCBvdmVyIHRoaXMgYnJhbmQuLiAKQXMgc2hlIHdhbGtzIGRvd24gV2FzaGluZ3RvbiBBdmVudWUsIHNoZSBzdG9wcyBhcyB0aGUgY2FyIGFwcHJvYWNoZXMuIEhlciBmZWxsb3cgY2xhc3NtYXRlcyBhcmUgaW4gYSBjYXIgYW5kIHN0YXJ0IHRocm93aW5nIGFwcGxlcyBhdCBoZXIgaGVhZC4gU2hlIGVuZHMgdXAgd2l0aCBvbmUgcmlnaHQgaW4gaGVyIGV5ZSBhcyBzaGUgdHJpZXMgdG8gZGVmZW5kIGhlcnNlbGYgYWdhaW5zdCB0aGUgYXNzYXVsdC4gSGVyIGNsYXNzbWF0ZXMganVzdCBkb24gc2VlIGhlciBhcyBhIGh1bWFuLiBUaGV5IHNlZSBoZXIgZGlzYWJpbGl0eSBhcyBhbiBpc3N1ZSB0byBiZSBlcmFkaWNhdGVkLiBUaGV5IHNlZSBoZXIgQXNwZXJnZXIgU3luZHJvbWUgYXMgc29tZXRoaW5nIHRvIGZlYXIuIFRoZXkgcmVhbGx5IGRvbiB1bmRlcnN0YW5kIHdoeSBzaGUgY2FuIGdldCB0aGUgd2hvbGUgc29jaWFsIHRoaW5nIGFuZCBzaW5jZSBzaGUgbW92ZWQgaGVyZSBmcm9tIHNvbWV3aGVyZSBlbHNlLCBzaGUgbWFrZXMgYSBncmVhdCB0YXJnZXQuCkluIGdlbmVyYWwsIHRoZSBzdGFrZXMgb2ZmZXJlZCBhdCBhIGNhc2lubyBhcmUgcHJvcG9ydGlvbmFsIHRvIGhvdyAibmljZSIgKGV4cGVuc2l2ZSkgdGhlIHBsYWNlIGlzLiAKUGx1cywgZXZlcnkgc2luZ2xlIHByZWduYW5jeSBib29rIGFuZCBjbGFzcyBzYWlkIHRvIGV4cGVjdCBmaXJzdCBsYWJvcnMgdG8gYmUgY2xvc2UgdG8gMjQgNDggaG91cnMuIApXZSBhcmUgc3RpbGwgZXhwbG9yaW5nIG9wdGlvbnMsIGl0IG5vdyBhcHBlYXJzIHRoYXQgb3VyIGJlc3QgbG9uZyB0ZXJtIHNvbHV0aW9uIGlzIG1lbWJlciBpbnZlc3RtZW50IGFsb25lIG9yIGEgY29tYmluYXRpb24gb2YgbWVtYmVyIGludmVzdG1lbnQgYW5kIGJhbmsgZGVidCBzZWN1cmVkIGJ5IHRoZSB2YWx1ZSBvZiBvdXIgcHJvcGVydHksIHdoaWNoIGlzIHdlbGwgaW4gZXhjZXNzIG9mIG91ciBjdXJyZW50IGRlYnQsIGJvYXJkIFByZXNpZGVudCBBbGFuIEZlbGRtYW4gd3JvdGUuIHRoYXQgd2UgZG9uZSB0aGUgbmVjZXNzYXJ5IGR1ZSBkaWxpZ2VuY2UgcmVnYXJkaW5nIHRoZSB0cnVlIHZhbHVlIG9mIGJvdGggb3VyIGNsdWIgYW5kIGl0cyBwcm9wZXJ0eSwgd2UgaGF2ZSBwcmVwYXJlZCBhIG1lbWJlciBpbnZlc3RtZW50IHByb3Bvc2FsIG91dGxpbmluZyB0aGUgc3RydWN0dXJlIG9mIHRoZSBvcHBvcnR1bml0eSBiZWluZyBvZmZlcmVkLiBjbHViIGlzIGFsc28gcGxhbm5pbmcgdG8gc2VsbCBvZmYgc21hbGwgcGFyY2VscyBvZiBsYW5kIGZvciByZXNpZGVudGlhbCBkZXZlbG9wbWVudCwgYm9hcmQgbWVtYmVyIExhcnJ5IENvaGVuIHNhaWQsIG5vdGluZyB0aGF0IG9uZSBhcmVhLCBiZWhpbmQgdGhlIDEzdGggZ3JlZW4gYW5kIHRoZSAxNHRoIHRlZSBib3gsIHdoaWNoIGFidXRzIGEgY3VsIGRlIHNhYywgaGFzIHJvb20gZm9yIGEgaG91c2Ugb24gYSBoYWxmIGFjcmUgbG90LCBhbmQgdHdvIG90aGVyIHBhcmNlbHMsIGJ5IHRoZSB0ZW5uaXMgY291cnRzLCBhcmUgc3VpdGFibGUgZm9yIHNpbmdsZSBmYW1pbHkgaG9tZXMuCkV2ZXJ5dGhpbmcgY2FzY2FkZXMgb3V0IGZyb20gdGhlcmUuIApTaW5jZSB0aGVuLCAgQ29sbGlucyByZXNpZ25lZCBhbmQgdGhlbiByZXR1cm5lZCB0byBQYXJsaWFtZW50IGFzIHRoZSBNUCBmb3IgUGFrdXJhbmdhLiBKb2huIEtleSBjb250aW51ZXMgdG8gZG9kZ2UgcXVlc3Rpb25zIGZyb20gdGhlIG9wcG9zaXRpb24gd2hpbGUgY29uc2lzdGVudGx5IG1pc3Byb25vdW5jaW5nICBIYWdlciBhcyAgSGF5IGdlciAoSGFnZXIgcmh5bWVzIHdpdGggbGFnZXIuIG9yIHNhZ2EpLiBIYWdlcidzIGhvdXNlIHdhcyByYWlkZWQgYnkgcG9saWNlLCB3aG8gd2VyZSBzZWVraW5nIGluZm9ybWF0aW9uIG9uIHRoZSBoYWNrZXIgUmF3c2hhcmsuIApUaGF0IGRlcGVuZHMgb24gd2hpY2ggbWFzdGVycyBwcm9ncmFtcyB5b3Ugd2FudCB0byBhcHBseSB0by4gU29tZSBwcm9ncmFtcyBhZG1pdCBhbGwgcXVhbGlmaWVkIGFwcGxpY2FudHMgYW5kIHNvbWUgaGF2ZSB0b25zIG9mIGFwcGxpY2FudHMgc28gaXQgdmVyeSBkaWZmaWN1bHQgdG8gZ2V0IGluLgpOb3QgYW4gaW1taWdyYW50IGJ1dCBmaWdodCBmb3IgaW1taWdyYW50IHJpZ2h0cy4gTm9yIGFtIEkgZ2F5IGJ1dCBiZWxpZXZlIGZ1bGx5IGluIGdheSByaWdodHMuIE5vdyBJIGRvIGhhdmUgZ2F5IHBlb3BsZSBhbmQgaW1taWdyYW50cyBpbiBteSBzb2NpYWwgY2lyY2xlIGFzIHdlbGwgYXMgc29tZSBsb3dlciBpbmNvbWUgcGVvcGxlLgoxMi4gdHJhZGl0aW9uYWwgbWVkaWNpbmUgQ2hpbmVzZSBwYXRlbnQgZHJ1Z3MsIHBsYXN0ZXJzLCBzZWNyZXQgcHJlc2NyaXB0aW9uIG1lZGljaW5lIGZvciBleHRlcm5hbCBhcHBsaWNhdGlvbiwgZXNwZWNpYWxseSBmb3IgcmVsaWV2aW5nIHBhaW4gYW5kIHN1YnNpZGVuY2Ugb2Ygc3dlbGxpbmcsIGdpbnNlbmcgcG93ZGVyLCBldGMuCkl0IG5vdCByZWFsbHkgYW4gYW5zd2VyYWJsZSBxdWVzdGlvbiBlaXRoZXIgd2F5ICAgZmlyc3QsIGlmIGl0IHdhcyBwYXRlbnRlZCBpdCBjb3VsZCBoYXZlIGVudGlyZWx5IHByZXZlbnRlZCBpdCBmcm9tIGJlaW5nIHVzZWQgaW4gdGhlIHdheSBpdCB3YXMsIGFuZCBzb21lIG90aGVyIHRlY2hub2xvZ3kgY291bGQgaGF2ZSBjb21lIGFib3V0IGluc3RlYWQgdGhhdCB3YXMgZnJlZSB0byB1c2UuClRoZWlyIGxhc3QgdHVybi4gQ2FzaW5vcyBhY3Jvc3MgUnVzc2lhIGNsb3NlZCB0aGVpciBkb29ycyBXZWRuZXNkYXkgYXMgYSBzd2VlcGluZyBiYW4gb24gZ2FtYmxpbmcgd2VudCBpbnRvIGVmZmVjdCwgbGVzcyB0aGFuIGEgd2VlayBhZnRlciBhIHNpbWlsYXIgYmFuIGhpdCBuZWlnaGJvcmluZyBVa3JhaW5lLiBMYXdtYWtlcnMgaW4gYm90aCBjb3VudHJpZXMgc2F5IHRoZSBhY3Rpb25zIHdlcmUgbmVjZXNzYXJ5IHRvIGJyaW5nIHVuZGVyIGNvbnRyb2wgc3BpcmFsaW5nIGFkZGljdGlvbiBhbmQgYSBub3RvcmlvdXNseSBzaGFkeSBidXNpbmVzcy4gQnV0IGNyaXRpY3Mgc2F5IHRoZSBtb3ZlcyB3aWxsIGxlYXZlIGh1bmRyZWRzIG9mIHRob3VzYW5kcyBvdXQgb2Ygd29yayBhbmQgZm9yY2UgdGhlIGluZHVzdHJ5IHVuZGVyZ3JvdW5kLgpBbiBpbmNyZWRpYmx5IGNoYXJtaW5nIG1hbiwgQmlsbCBsb3ZlZCBnb2xmLCBwb2tlciwgbG9va2luZyBzaGFycCwgZGF0ZSBzcXVhcmVzLCBIb25leSBIYXJib3VyLCBmaXNoaW5nLCBCbHVlcyBtdXNpYywgQ2FkaWxsYWNzLCBhIGdvb2QgbGF1Z2gsIHNweSBub3ZlbHMsIG5vdCBsb29raW5nIGFmdGVyIHRoZSB5YXJkLCBXb3JsZCBvZiBXYXJjcmFmdCwgYmFsYW5jaW5nIGhpcyBjaGVxdWVib29rLCBDcm93biBSb3lhbCwgZGFuY2luZywgYW5kIGFib3ZlIGFsbCwgaGlzIGZhbWlseS4gRnJpZW5kcyBhcmUgaW52aXRlZCB0byBzaGFyZSB0aGVpciBtZW1vcmllcyBvZiBCaWxsIHdpdGggaGlzIGZhbWlseSBkdXJpbmcgdmlzaXRhdGlvbiBhdCB0aGUgRXJiIEdvb2QgRmFtaWx5IEZ1bmVyYWwgSG9tZSAsIDE3MSBLaW5nIFN0LiAKV2hhdGV2ZXIgeW91IGNhbGwgdGhhdCBxdWFsaXR5LCBpdCBzZWVtcyBoYXJkd2lyZWQgaW50byBob3cgZWFjaCBvZiB0aGUgYmFuZCBtZW1iZXJzIHdyaXRlIG11c2ljLCBhcyBpdCAobW9zdGx5KSBmb2xsb3dzIHRoZW0gdGhyb3VnaG91dCB0aGVpciBzb2xvIGNhcmVlcnMuIApFdCBjZWxhIG1lIGRvbm5lIGJpZW4gZW52aWUgZGUgbGVzIGdvdGVyLCB2dSBsJ2V4aWdlbmNlIGRlIHF1YWxpdCBxdWUgamUgbHVpIGNvbm5haXMuLiAKU28sIGZvciBpbnN0YW5jZSwgc29tZW9uZSBsaWtlIG1lLiBJIG5vdCBibGFjay4gCkkndmUgc2VlbiBpdCBtYW55IHRpbWVzIHdoZXJlIGEgZG9nIHdpbGwgYmUgYmFya2luZyBpdCdzIGJ1dHQgb2ZmIGF0IG1lLCB0aGVuIHRoZSBvd25lciB3aWxsIGFwcGVhciwgYW5kIHRoZSBkb2cgc3RhcnRzIHdhZ2dpbmcgaXQncyB0YWlsIGFuZCAic2hvd2luZyBvZmYiIGhvdyBjdXRlIGl0IGlzLgpPa2F5LCBpZiB5b3UgYXJlIHNvIGN5bmljYWwgdGhhdCBuZWl0aGVyIHRoZSBVUyBtaWxpdGFyeSBub3IgdGhlIGJpZ2dlc3QgYmxvY2tidXN0ZXIgbW92aWUgRVZFUiB5b3UgdG8gZ28gZ3JlZW4sIGhvdyBhYm91dCBXYWwgTWFydCBFYXJ0aCBEYXkgY2FtcGFpZ24uIEFib3V0IHRoZSBmdXR1cmUuIApOb3Qgb25seSBkb2VzIHRoZSBwYXNzcG9ydCByZXF1aXJlbWVudCBtYWtlIG1vdmVtZW50IGJhY2sgYW5kIGZvcnRoIGFjcm9zcyB0aGUgYm9yZGVyIG1vcmUgZGlmZmljdWx0LCBidXQgaXQgY2hhbmdlcyB0aGUgc3ltYm9saWMgd2VpZ2h0IG9mIHRoZSBib3JkZXIgaXRzZWxmLiBBcyBnZW9ncmFwaGVyIEdsZW4gRWxkZXIgZXhwbGFpbmVkIGl0LCBib3JkZXJzIG11c3QgYmUgcGVyZm9ybWVkLiAKV2hhdCBkbyB5b3UgbWVhbiBJIHByb3ZpZGVkIG5vdGhpbmc/IFdhbnQgbW9yZSBzdHVkaWVzIHRoYXQgY29udHJhZGljdCB5b3VyIGFuZWNkb3RhbCAiZXZpZGVuY2UiPyBBbHJpZ2h0LCBoZXJlIGFub3RoZXIgb25lOkkgaGF2ZW4gYmVlbiBkZWZsZWN0aW5nIGFueXRoaW5nLCBub3Qgc3VyZSB5b3Uga25vdyB3aGF0IHRoYXQgd29yZCBtZWFucyBpbiBhIHJoZXRvcmljYWwgc2Vuc2UuIEkgbWV0IGFsbCB5b3VyIHBvaW50cyB0aGF0IHlvdSB0cnkgdG8gbWFrZSwgYW5kIHRoZSBzaW5nbGUgcG9pbnQgdGhhdCB5b3UgYmVlbiBhYmxlIHRvIGZvbGxvdyB0aHJvdWdoIG9uICAgdGhyb3VnaCB0aGVzZSBtZW50YWwgZ3ltbmFzdGljcyAgIHRyeWluZyB0byBjb252aW5jZSBtZSB0aGF0IGEgbGl0dGxlIGJpdCBvZiBoZWxwIGlzIHdvcnNlIHRoYW4gbm8gaGVscC4gV2hpY2ggSSBqdXN0IGRvbiBhZ3JlZSB3aXRoLCBzaW1wbGUgYXMgdGhhdC4gQW5kIG5vLCBJIHdvbiBjaGFuZ2UgdGhhdCBiZWxpZWYgYmVjYXVzZSAgIHdoYXQgICBhIHZvY2FsIG1pbm9yaXR5IG9mIGFib3V0IDEwIHBlb3BsZSBvbiByZWRkaXQgdGhpbmsgaXQgYW5ub3lpbmc/CkZpZ3VyYXJ0cyBmcm9tIHRoZW0gYW5kIHdlIHdlcmUgZ29uZyB0byBiZSBnZXR0aW5nIHNldmVyYWwgbW9yZSB2aXRydXZpYW4gZmlndXJlcywgYnV0IG5vdCBmcm9tIHRoZW0gYW55bW9yZSA6KC4gClR1cm4gaGVyIG9uIGxpa2Ugd2hlbiBfX19fXyBpcyBoYXBwZW5pbmcgaW4gYSBtb3ZpZSBhbmQgc2hlIGdldHMgdGluZ2x5IHdoYXQncyBpbiB0aGF0IGJsYW5rPyBUaGVuIGxvb2sgZm9yIHNvbWUgZXJvdGljYSAobm90IHBvcm4sIGJ1dCB3cml0dGVuIG1hdGVyaWFsIGJvb2tzIG9yIGZhbmZpYykgd2l0aCB0aG9zZSB0aGVtZXMsIHNwZW5kIHNvbWUgcmVsYXhlZCwgbG93IHByZXNzdXJlIHRpbWUgYnkgaGVyc2VsZiByZWFkaW5nLCBhbmQgc2VlIGlmIG1hc3R1cmJhdGlvbiBoYXBwZW5zIGZyb20gdGhlcmUuIFNoZSBjb3VsZCB2ZXJ5IGxpa2VseSB0aGVuIGFjY2lkZW50YWxseSBsZWFybiB3aGF0IGtpbmRzIG9mIHRvdWNoZXMsIHByZXNzdXJlcywgbW92ZW1lbnRzLCBldGMuIApUaGUgc21hbGwgbm90aWNlIG9mIGhlciBhY2hpZXZlbWVudCBhcHBlYXJzIGluIHRoZSAxNCBKdW5lIDE4ODMgaXNzdWUgb2YgTmF0dXJlLCBqdXN0IGEgZmV3IHdlZWtzIGFmdGVyIFRoZSBCcmlkZ2Ugd2FzIG9wZW5lZCwgd2l0aCBFbWlseSBSb2VibGluZyBiZWluZyB0aGUgZmlyc3QgdG8gY3Jvc3MuIApNZWFud2hpbGUgSSdtIG1hcnJpZWQsIGNvbWluZyB1cCBvbiBvdXIgc2Vjb25kIGFubml2ZXJzYXJ5LCB0byBhIGd1eSB3aG8gaXNuJ3QgYW4gYWJ1c2l2ZSBkaWNraGVhZCBhbmQgYWN0dWFsbHkgcmVzcGVjdHMgbWUuIEkgdGhpbmsgSSdtIHRoZSBvYnZpb3VzIHdpbm5lciBoZXJlLgpUaGFua3MgZm9yIHRoZSBjb21tZW50cyBndXlzLiAKSXQgbWF5IGJlIGEgYml0IGhhcmQgdG8gdW5kZXJzdGFuZCBhdCBmaXJzdCAvIGJ1dCBpdCBpcyBhIGVhc3kgdHJpY2sgbWFkZSBieSBEYXZpZCBCbGFpbmUgICBhIGNhcmRpc3RyeSBwZXJzb24gLyA2LiAKU2FtIGdvZXMgdG8gdGhlIGJhciBoZSBjcmVhdGVkIGluIGhpcyBsaXZpbmcgcm9vbSwgdGhlbiBzZXRzIGhpcyBhd2FyZCB1cG9uIGl0LiBIZSBwb3VycyBoaW1zZWxmIGEgYnJhbmR5IGFuZCBzaXRzIGluIGhpcyBjb21meSByZWNsaW5lci4gSGUgcHV0IGhpcyB0cm9waHkgZG93biBvbiB0aGUgZW5kIHRhYmxlIHNvIGhlIGNvdWxkIGFkbWlyZSBpdC4gCkV0IHJlcG9ydGVzIHZvdXMgIGxhIGZpY2hlIG51dHJpdGlvbm5lbGxlcyBkb250IHZvaWNpIHVuIGFwZXJ1IHBvdXIgbGEgcGFydGllIHZpdGFtaW5lIGR1IGdyb3VwZSBCIDpDdCBhbXJpY2FpbiBsYSBCMSBjJ2VzdCAxMjUgbWcsIHByZXNxdWUgMTAwIGZvaXMgcGx1cy4gU2kgb24gdHJvdXZlIHF1ZSBjJ2VzdCBleGFnciBvbiBwZXV0IHByZW5kcmUgMiBvdSAzIGNvbXByaXMgY2UgcXVpIHJkdWlyYWl0IGxlIGNvdCAgdW4gb3JkcmUgZGUgMTUgIDIwIHBhciBtb2lzLiBQb3VyIGp1c3RpZmllciBsZSBjb3QgZmFyYW1pbmV1eCBkZSBzb24gcHJvZHVpdCBWZW5lc3NvbiBwcnRlbmQgcXVlIHNvbiBtdWx0aXZpdGFtaW5lICJsaXRpc3RlIiBncm91cGVyYWl0IGVuIGZhaXQgcGx1c2lldXJzIGNvbXBsbWVudHMgc3BjaWFsaXNzLiAKVGhlIHN0YWNrZWQgbGVhdGhlciBzb2xlIGlzIGNvbWZvcnRhYmxlIGFuZCBsaWdodCwgYnV0IGhhcyB3b3JuIGRvd24gcHJldHR5IHF1aWNrbHkgaW4gdGhlIGhlZWwgZm9yIG1lLiAKQ2hvaWNlcyB5b3UgbWFrZSBhcmUgYm90aCBicm93c2VyIGFuZCBkZXZpY2Ugc3BlY2lmaWMuIFNvbWUgd2ViIGJyb3dzZXJzLCBtb2JpbGUgZGV2aWNlcywgYW5kIHBsdWcgaW5zIGhhdmUgYSAiRG8gTm90IFRyYWNrIiBmZWF0dXJlLiAKQSBsaW5pbWVudCBoZWF0cyB0aGUgc2tpbiBhbmQgdW5kZXJseWluZyBtdXNjbGVzIGFuZCBqb2ludHMgdG8gcmVsaWV2ZSBwYWluLiBUaGUgYmFzZSBvZiBhIGxpbmltZW50IG1heSBiZSBlaXRoZXIgcnViYmluZyBhbGNvaG9sIG9yIGFuIGVkaWJsZSBhbGNvaG9sIHN1Y2ggYXMgdm9ka2EuIElmIHlvdSBkbyB1c2UgcnViYmluZyBhbGNvaG9sLCByZW1lbWJlciB0aGF0IGl0IGlzIHRveGljIHRvIGRyaW5rLCBzbyBsYWJlbCBpdCBhY2NvcmRpbmdseS4gCkhlIHNhaWQsICdNci4gTWNNYWhvbiwnIGhlIHNhaWQsICdoYXMgdGhlcmUgZXZlciBiZWVuIGEgdW5pb24gaW4gd3Jlc3RsaW5nPycgVmluY2UgW3JlcGxpZXNdLCAnbm8uJyBbVGhlIGxhd3llciBhc2tzXSAnQW55b25lIGV2ZXIgdHJ5IHRvIGZvcm0gb25lPycgVmluY2Ugc2F0IGEgbWludXRlLCBoZSBzYXlzLCAnd2VsbCwgeWVhaCwgYXMgYSBtYXR0ZXIgb2YgZmFjdCwgSmVzc2UgVmVudHVyYSBzcG91dGVkIGhpcyBtb3V0aCBvZmYgYWJvdXQgaXQgb25jZSB5ZWFycyBhZ28uJyBBbmQgbXkgYXR0b3JuZXkgZ29lcywgJ3dlbGwsIGhvdyBkbyB5b3Uga25vdyB0aGF0PyBEaWQgeW91IGhlYXIgaGltPyBObz8gV2VsbCwgaG93IGRpZCB5b3Uga25vdyBoZSBzcG91dGVkIGhpcyBtb3V0aCBvZmY/JyBIZSBkaWRuJ3QgZXZlbiBoZXNpdGF0ZS4gClVwZGF0ZTogZ290IHR3byByZXNwb25zZXMgZnJvbSB0aGVtIGFmdGVyIEkgcG9zdGVkIGluIHRoaXMgdGhyZWFkIHllc3RlcmRheS4gClNoZSB3b3VsZCBub3QgaGF2ZSBiZWVuIHdvcnRoeSBvZiBhIGhhcHBpbHkgZXZlciBhZnRlci4gCkhlIGhhcyBubyByZWFzb24gdG8gY2hhbmdlLiBBbHNvIHRoZXJlIGFyZSBubyBjaGVja3Mgb24gaGltLiBIZSBvd2VzIGhpcyBwYXJ0eSBub3RoaW5nIChzaW5jZSBhbG1vc3QgYWxsIG9mIGl0IHdhcyB3b3JraW5nIHRvIHVuZGVybWluZSBoaW0pIGFuZCB5ZXQgaGUgd2lsbCBiZW5lZml0IGZyb20gdGhlIGRvbWluYW5jZSBvZiBDb25ncmVzcyBhbmQgdGhlIFN1cHJlbWUgQ291cnQgYnkgdGhlIFJlcHVibGljYW5zLiAKVEhFU0UgVEVSTVMgQ09OVEFJTiBBIE1BTkRBVE9SWSBBUkJJVFJBVElPTiBDTEFVU0UgQU5EIEEgV0FJVkVSIE9GIENMQVNTIEFDVElPTiBDTEFVU0UuIFBMRUFTRSBSRUZFUiBUTyBBTkQgUkVBRCBTRUNUSU9OIDE5IE9GIFRIRVNFIFRFUk1TLgpUaGV5IGFsc28gbWFrZSBhIGdyZWF0IGdhZyBnaWZ0IGZvciB0aGF0IGNhcmQgZmFuYXRpYyB5b3Uga25vdyBhbmQgY2FuIGJlIGdpdmVuIGFzIGEgYmlydGhkYXkgcHJlc2VudCBvciBqb2tlIENocmlzdG1hcyBnaWZ0LiAKVGhleSBzb21ldGltZXMgc2VlbSBPUCBhZ2FpbnN0IGJhZCBwbGF5ZXJzIGJ1dCBnb29kIHBsYXllcnMgd2lsbCBraWxsIHlvdSBldmVyeSB0aW1lLCBzbyBpdCBkZXBlbmRzIG9uIHdobyB5b3UgcnVuIGludG8uIE1pbmlndW5zIGhhdmUgY3JhenkgcmFuZ2UgYnV0IGFyZSBlYXN5IHRvIGRlZmVuZCBhZ2FpbnN0IGFuZCB0YWtlIGZvcmV2ZXIgdG8gcmVsb2FkLiBCYXNpY2FsbHkgeW91IGFsd2F5cyB3YW50IGEgbG9uZywgbWVkaXVtIGFuZCBzaG9ydCByYW5nZSB3ZWFwb24gYW5kIDEgMiBoZWFscy4uIApIb3BlZnVsbHkgdGhpbmdzIGFyZSBiZXR0ZXIgbm93LiBUaGlzIHBvc3QgaXMgbWVhbnQgdG8gZWR1Y2F0ZSBhbmQgdG8gY29uc2lkZXJnZXR0aW5nIDJuZCBhbmQgM3JkIG9waW5pb25zIChvbiB5b3VyIHBhcnRpY3VsYXIgY29uZGl0aW9ucykgd2l0aCB3aGF0ZXZlciB0eXBlIGhlYWx0aCBjYXJlIHByb3ZpZGVyIHlvdSBtYXkgYmUgY29uc3VsdGluZy4gCkhvd2V2ZXIsIEkgbGlrZSBnaXZpbmcgYW5kIHJlY2VpdmluZyB0aG91Z2h0ZnVsIGdpZnRzICh3aGV0aGVyIGl0IGxpdHRsZSB0aGluZ3MsIGhhbmRtYWRlIHN0dWZmLCBvciBib3VnaHQgZ2lmdHMgICBpZiB5b3UgZmFtaWxpYXIgd2l0aCBsb3ZlIGxhbmd1YWdlcywgZ2lmdCBnaXZpbmcgaXMgZGVmaW5pdGVseSBvbmUgb2YgbWluZSkuIFNvIEkgYmUgdmVyeSBoYXBweSBhYm91dCBnZXR0aW5nIGpld2VscnkgdG9vLCBzaW1wbHkgYmVjYXVzZSBzb21lb25lIHRoaW5raW5nIG9mIG1lIGFuZCBwaWNraW5nIHNvbWV0aGluZyBvdXQgZm9yIG1lIHdvdWxkIG1ha2UgbWUgaGFwcHkuLiAKMTApIERpc2MgaXJyaXRhdGlvbiBwcm9kdWNlcyBiaWxhdGVyYWwgY29udHJhY3Rpb24gb2YgdGhlIGx1bWJhciBtdWx0aWZpZHVzLiBUaGUgTXVsdGlmaWR1cyBpcyB0aGUgbW9zdCBtZWRpYWwgKGRlZXBlc3QgdG8gdGhlIHNwaW5lKSBtdXNjbGUuIEl0IGlzIGRlZXBlciBhbmQgYmVuZWF0aCB0aGUgRXJlY3RvciBTcGluYWUuClF1ZXN0YSBvcGVyYXppb25lIHB1IGVzc2VyZSByaXBldHV0YSBwaSB2b2x0ZS4uIApQbGF5ZXJzIGdhaW4gYWR2YW50YWdlIGlmIHRoZXkgb2JzZXJ2ZSBhbmQgdW5kZXJzdGFuZCB0aGUgbWVhbmluZyBvZiB0aGUgb3RoZXIgcGxheWVycyB0ZWxsLCBwYXJ0aWN1bGFybHkgaWYgaXQgaXMgdW5jb25zY2lvdXMuLiAKVGhlIGJhZCBiZWF0IGlzIGJhY2sgYXQgdGhlIHdvb2RzIGJ1dCBzbWFsbGVyLCBpdCB1c2VkIHRvIGdldCB1cCBvdmVyIDUwMGsgbm93IGl0IHN0YXlzIHVuZGVyIHNpeCBmaWd1cmVzLi4gClRoZSBodWdlbHkgcG9wdWxhciBpbmR1c3RyeSBvZiBvbmxpbmUgcG9rZXIgaGFzIGJlZW4gY29udHJvdmVyc2lhbCBmb3Igc29tZSB0aW1lIG5vdy4gRGVzcGl0ZSBlZmZvcnRzIHRvIGN1cmIgdGhlIGluZHVzdHJ5LCBtb3N0IG5vdGFibHkgdGhlIDIwMDYgVW5sYXdmdWwgSW50ZXJuZXQgR2FtYmxpbmcgRW5mb3JjZW1lbnQgQWN0LCBzdGlsbCB1cHdhcmRzIG9mIDEwIG1pbGxpb24gQW1lcmljYW5zIHBsYXkgcG9rZXIgb25saW5lIGZvciBtb25leS4gSnVzdCBsYXN0IG1vbnRoLCB0aHJlZSBwb3B1bGFyIG9ubGluZSBwb2tlciBzaXRlcyAgIEZ1bGwgVGlsdCBQb2tlciwgUG9rZXJTdGFycyBhbmQgQWJzb2x1dGUgUG9rZXIgICB3ZXJlIHNodXRkb3duIGJ5IHRoZSBGQkksIGFuZCB0aGUgZmVkZXJhbCBnb3Zlcm5tZW50IGFubm91bmNlZCBwbGFucyB0byByZWNvdmVyICQzIGJpbGxpb24gZnJvbSB0aGVtLCBhY2NvcmRpbmcgdG8gdGhlIExvcyBBbmdlbGVzIFRpbWVzLgpUaGUgZmlyc3QgbG9hZHMgb2YgZGlydCBhcmUgYmVpbmcgaGF1bGVkIGF3YXkuIApXZSBoYXZlIHNlZW4gaG93IHNoZSB3YXMgd2hlbiBMZWFoIHdhcyBhIGJhYnkuIApKb2JzIHRha2Ugb24gdGhlIHJvbGUgdGhvc2UgcHJvZ3JhbXMgd291bGQgb3RoZXJ3aXNlIGhhdmUsIHdoZXJlIGlmIHBlb3BsZSBkb24gaGF2ZSB0aGVtIHRoZXkgbGl0ZXJhbGx5IHN0YXJ2ZSBhbmQgbG9zZSB0aGVpciBob21lcy4gClRoZXkgaGF2ZSB0aGUgYmVzdCBiYXNlIGF0dGFjayBib251cyAoaW4gTldOKSBhbmQgdGhleSBnZXQgdGhlIG1vc3Qgd2VhcG9uIHByb2RpY2llbmNpZXMgaW4gQkcuIApBdCBsZWFzdCB0aGF0J3MgdGhlIHdheSBpdCBzZWVtZWQgb24gVGhlIENlbGVicml0eSBBcHByZW50aWNlJ3Mgc2Vhc29uIHR3byBmaW5hbGUuIEFmdGVyIHRocmVlIGdydWVsaW5nIGhvdXJzIG9mIFRydW1wJ3MgcHJvbWlzZXMgb2YgInZpY2lvdXMiIGNvbXBldGl0aW9uIGJldHdlZW4gdGhlIGZpbmFsaXN0cywgZW50ZXJ0YWlubWVudCBpY29uIEpvYW4gUml2ZXJzIHdhcyBoaXJlZCBhbmQgd29ybGQgcG9rZXIgcHJvIEFubmllIER1a2UgZ290IHRoZSBib290LgpNb3N0IGRvbiBsaWtlIGl0IGRpcmVjdGx5IG9uIHRoZSBjbGl0LiAKU28gSSdkIGxpa2UgdG8gcG9zc2libHkgdHVybiB5b3Ugb250byB0byBzb21ldGhpbmcgSSd2ZSBiZWVuIGRvaW5nIGFuZCBnZXQgeW91ciBpbnNpZ2h0LiBJJ20gc3VyZSB5b3UgYXJlIGZhbWlsaWFyIHdpdGggRU1EUi4gCk1vbmV5IG1hbmFnZW1lbnQgaXMgYSBjb21wbGV0ZWx5IHNwdXJpb3VzIGlkZWEgYXMgZmFyIGFzIHdoZW4geW91IHF1aXQgb3Igd2hlbiB5b3UgZG9uJ3QgcXVpdC4gVGhlIG9ubHkgdGhpbmcgdGhhdCBtYXR0ZXJzIHdoZW4geW91IGFyZSBnYW1ibGluZyBpcyB0byBnYW1ibGUgd2hlbiB0aGUgb2RkcyBhcmUgaW4geW91ciBmYXZvciwgd2hlbiB5b3UgYXJlIHRoZSBiZXN0IHBsYXllci4gQW5kIHdoZW4geW91IGFyZSBpbiB0aGF0IHNpdHVhdGlvbiBwbGF5IGFzIGxvbmcgYXMgeW91IGNhbi4gCkJ1dCB0aGVyZSBtYXkgYmUgc3Vic2V0IG9mIHBhdGllbnRzIHdobyBhcmUgZ2VuZXRpY2FsbHkgcHJlZGlzcG9zZWQgdG8gdGhpcyBlZmZlY3QgYnkgbWVjaGFuaXNtcyB3ZSBkb24geWV0IHVuZGVyc3RhbmQgeWV0LiAKVGhpcyB3YXMgdGhlIGZpcnN0IHRoaW5nIHRoYXQgSSB0aG91Z2h0IG9mLCB0b28uIApJIHRoaW5rIHlvdSBsb29raW5nIGF0IHRoZSBwcm9kdWN0IGluIGEgZGlmZmVyZW50IG1hbm5lciB0aGFuIGhvdyBJIHNlZSBpdC4gVGhlIGJvb3N0IGV4dGVuZHMgYmV5b25kIGp1c3QgdGhlIFhQIGFuZCBnb2xkIGluY3JlYXNlcy4gCkl0IGlzIG5hdHVyYWwgZm9yIGVhY2ggcGVyc29uIHRvIGxvc2UgYSBmZXcgaGFpciBzdHJhbmRzIGEgZGF5LCBhcyB0aGUgaGFpciBjb250aW51ZXMgdG8gZm9sbG93IGEgY3ljbGUgb2YgZ3Jvd3RoIGFuZCBmYWxsaW5nIG9mZi4gCllvdSBtYXkgYXNrIHdoYXQgIlBsYXllcnMgT25seSBQb2tlciIgaXM/IFdlbGwsIFBsYXllcnMgT25seSBQb2tlciBpcyBhIG5ldyB0cmVuZCBpbiB0aGVvbmxpbmUgcG9rZXIgc2NlbmUuIApQYXMgZGUgbWFudGVhdSBNYWRlIGluIENoaW5hLgpJZiBzbywgY29uc2lkZXIgc29tZSBsYXN0IG1pbnV0ZSB0YXggbG9zcyBzZWxsaW5nLCB3aGljaCBpbnZvbHZlcyBzZWxsaW5nIGludmVzdG1lbnRzIHdpdGggYWNjcnVlZCBsb3NzZXMgYXQsIG9yIGNsb3NlIHRvLCB5ZWFyIGVuZCB0byBvZmZzZXQgY2FwaXRhbCBnYWlucyByZWFsaXplZCBlbHNld2hlcmUgaW4geW91ciBwb3J0Zm9saW8uIApZb3Ugd29uJ3QgcmVncmV0IGl0LiAKSWYgeW91IHRyaXAgb3ZlciBhIHdvcmQsIHlvdSBtaWdodCBhcG9sb2dpemUgKCJTb3JyeSEiKSwgbWFrZSBhIGpva2UgKCJObyBtb3JlIGNvZmZlZSBmb3IgbWUiKSwgb3IgcmVzb3J0IHRvIG5vbnZlcmJhbCByZWZsZXhlcywgbGlrZSBzaGFraW5nIHlvdXIgaGVhZCBvciBzaHJ1Z2dpbmcgeW91ciBzaG91bGRlcnMuIApGYWl0ZXMgZW4gbCdleHByaWVuY2UgZXQgdm91cyBqb3VycyBzZSBkcm91bGVyb250IGJpZW4gZGlmZnJlbW1lbnQuIApVZ2ggSSBwbGF5ZWQgd2l0aCBhIGd1eSBhIGZldyB3ZWVrcyBhZ28gdGhhdCBORVZFUiBPTkNFIGZvbGxvd2VkIHRoZSBhY3Rpb24gZW5vdWdoIHRvIGtub3cgaXQgd2FzIGhpcyB0dXJuLiAKVGhlIGxlYWd1ZSBpcyBhIG5vbiBwcm9maXQgb3JnYW5pemF0aW9uLCBvcGVyYXRlcyB1bmRlciB0aGUgZ3VpZGVsaW5lcyBvZiB0aGUgV29tZW4ncyBGbGF0IFRyYWNrIFJvbGxlciBEZXJieSBBc3NvY2lhdGlvbiAoV0ZUREEpIGFuZCBpcyBydW4gY29tcGxldGVseSBieSB2b2x1bnRlZXJzLkFib3V0IFJvbGxlciBEZXJieVJvbGxlciBEZXJieSBpcyBhbiBBbWVyaWNhbiBtYWRlIGNvbnRhY3Qgc3BvcnQgdGhhdCBvcmlnaW5hdGVkIGluIHRoZSBlYXJseSAxOTAwcy4gClRoZSBUb3AgMTAgT25saW5lIFBva2VyIENhc2lubyAgMyBQYXJ0eSBQb2tlciBUaGlzIG9ubGluZSBjYXNpbm8gdXNlZCB0byBmYWNlIGFudGkgVVMgZ2FtYmxpbmcgcHJvYmxlbXMgYnV0IHRvZGF5IGl0IGhhcyBzdGF5ZWQgc3Ryb25nIGFuZCByZW1haW5zIG9uZSBvZiB0aGUgYmlnZ2VzdCBvbmxpbmUgcG9rZXIgc2l0ZSBpbiB0aGUgaW50ZXJuZXQuIFRoZXJlIGlzIHRlcnJpZmljIGFjdGlvbiB0byBiZSBmb3VuZCwgYSBnYXRoZXJpbmcgb2YgdmFyaWV0eSBvZiBwbGF5ZXJzLiAKRXNwZWNpYWxseSBpZiB0aGlzIGlzIHlvdXIgZmlyc3QgdHJpcCB0byBWZWdhcywgcGxlYXNlIGRvbid0IHNwZW5kIGFsbCB5b3VyIHRpbWUgYXQgdGhlIHBva2VyIHRhYmxlcy4gCkkgdGhpbmsgSSBhY3R1YWxseSBtYWtpbmcgc29tZSBtaXN0YWtlcyBvbiB0aGUgdHVybiBieSBub3QgYmFycmVsaW5nIGNvbWJvcyB0aGF0IHdvdWxkIGJlIGdvb2Qgcml2ZXIgYmx1ZmYgY2FuZGlkYXRlcyBvbiB0aGlzIGNhcmQgc3BlY2lmaWNhbGx5LiAKSSBib2x0ZWQgdG8gbXkgY2FyIGFuZCBsb2NrZWQgdGhlIGRvb3IsIGNvbXBsZXRlbHkgaWdub3JlaW5nIHRoZSBwbGF5IGRlYWQgcnVsZS4gQSBmZXcgb3RoZXJzIGhpZCBpbiBwb3J0YSBwb3R0eXMgYW5kIGNhbGxlZCB0aGUgY29wcy4gCkluIGFkZGl0aW9uIHRvIGdldHRpbmcgUm9ja3kgR2FwIG9mZiB0aGUgc3RhdGUgbGVkZ2VyLCBjcmVhdGluZyBqb2JzIGFuZCBlY29ub21pYyBkZXZlbG9wbWVudCBpbiB0aGUgd2VzdGVybiBwYXJ0IG9mIHRoZSBzdGF0ZSB3aGVyZSB0aGV5IGFyZSBkZXNwZXJhdGUgZm9yIGpvYnMgYW5kIHdlIHN0YXJ0IGJyaW5naW5nIHJldmVudWUgaW50byB0aGUgc3RhdGUgY29mZmVycywgS3JhbWVyIHNhaWQuClN1cGVyIGZpc2h5LiBJIHN0aWxsIGZlZWwgbGlrZSB0aGUgZ2FtZXMgaW4gTGFrZSBDaGFybGVzIGFyZSBiZXR0ZXIgYW5kIHZlcnkgYmVhdGFibGUgaW4gY29tcGFyaXNvbiwgYnV0IGl0J3MgZmFyIGFuZCBhIGxvdCBvZiBwZW9wbGUgZG9uJ3QgdGhpbmsgaXQncyB3b3J0aCBpdC4gClRoYW5rIHlvdSBmb3IgdGhlIGdvbGQgYW5kIHNpbHZlcnMgYnV0IHBsZWFzZSwgc3BlbmQgdGhlIG1vbmV5IG9uIHRyZWF0cyBmb3IgeW91ciBkb2csIHN3ZWV0cyBmb3IgeW91ciBraWRzIG9yIHJ1bSBmb3IgeW91cnNlbGYuIEVpdGhlciB0aGF0IG9yIGdpdmUgaXQgdG8geW91ciBmYXZvdXJpdGUgY2hhcml0eSwgaWYgeW91IGRvbiBoYXZlIGEgZmF2b3VyaXRlIG1pbmUgaXMgdGhlIFJOTEkuIApUaGUgbWludXRpYWUgb2YgdGhlIFVTIFBha2lzdGFuIHN0cmF0ZWdpYyBkaWFsb2d1ZSBhbG1vc3QgY29tcGxldGVseSBpZ25vcmVzIHRoZSBoYXJzaCByZWFsaXRpZXMgb2YgdGhlIFVTIFBha2lzdGFuIHJlbGF0aW9uc2hpcCAgIHRoZSB0aGluZ3MgdGhhdCBhcmUgb3ZlcmFyY2hpbmcsIG9uIGEgbWFjcm8gbGV2ZWwgYW5kIHZpc2libGUgdG8gdGhlIG5ha2VkIGV5ZSBmcm9tIDMwLDAwMCBmZWV0IGluIHRoZSBhaXIuIEluc3RlYWQsIHRoZSBkaWFsb2d1ZSBmb2N1c2VzIG9uIHJlYWwsIGFuZCBjb21wZWxsaW5nIGV4YW1wbGVzIG9mIGdlbnVpbmUgbXV0dWFsIGludGVyZXN0ICAgYnV0IGFsbW9zdCBhbGwgb2YgdGhvc2UgZXhhbXBsZXMgYXJlIG1pY3JvIGxldmVsLCB0aGV5IGFyZSB0byBkbyB3aXRoIG51YW5jZXMsIGFuZCB0aGV5IGFyZSBpbnZpc2libGUgdW5sZXNzIHlvdSBhcmUgdXNpbmcgYW4gZWxlY3Ryb24gbWljcm9zY29wZSB0byBleGFtaW5lIHRoZSBzeW5hcHNlIGJldHdlZW4gV2FzaGluZ3RvbiBEQyBhbmQgSXNsYW1hYmFkLi4gCiJNb20sIGJlc3QgcHJhY3RpY2VzIGhhdmUgY2hhbmdlZCBzaW5jZSB5b3Ugd2VyZSByYWlzaW5nIGJhYmllcy4gCkFzIGFuIElOVFAsIGlmIGl0IHdhc24gZm9yIG15IHF1aWV0IG1lZWtuZXNzLCBJIGRvIHdvbmRlciBpZiBpdCB3b3VsZCBiZSBwb3NzaWJsZSBmb3IgbWUgdG8gZml0IGludG8gdGhlIFJQVyBib3guIApUaGUgZ29vZCBuZXdzPyBSb2JlcnRvIG1hZGUgaXQgdG8gdGhlIG1vbmV5IHJvdW5kLCBhbmQgaGlzIGJyb3RoZXIgaXMgc3RpbGwgYWxpdmUgYW5kIHN0aWxsIGhhcyBhIGNoYW5jZSB0byB3aW4gaXQgYWxsLgpJZiB5b3UgYXJlIG5vdCBjb250ZW50IHdpdGggb25lIHdlYiBzaXRlLCB5b3UgY291bGQgYWx3YXlzIGpvaW4gYSBkaWZmZXJlbnQgb25lIG9uIHRoZSBsaXN0aW5nLiAKVGhlIHJlcG9ydCBmdXJ0aGVyIHN0YXRlcyB0aGF0IEluZGlhIHByb2R1Y2VzIGFwcHJveGltYXRlbHkgJDEwIGJpbGxpb24gYSB5ZWFyIGluIGdyb3NzIGdhbWluZyByZXZlbnVlLCB3aGljaCBpbmNsdWRlcyBib3RoIGxlZ2FsIGFuZCBpbGxlZ2FsIGdhbWJsaW5nIGNvbWluZyBmcm9tIGNhc2lubyBhbmQgbm9uIGNhc2lubyBnYW1pbmcuIEluIGFkZGl0aW9uLCBtb3N0IG1pZGRsZSBjbGFzcyBwZW9wbGUgaW4gSW5kaWEgYXJlIGZhbWlsaWFyIHdpdGggc2V2ZXJhbCBmb3JtcyBvZiBnYW1ibGluZyBidXQgZG9uIGhhdmUgcGxhY2VzIHRvIHBsYXkgaW4uIEFub3RoZXIgcG9zaXRpdmUgc2lnbiBpcyB0aGF0IE5lcGFsIGNhc2lub3MgYXJlIGFsbG93ZWQgdG8gYWNjZXB0IGJldHMgaW4gSW5kaWFuIHJ1cGVlcy4uIApUaGV5IGFyZSBjdXJyZW50bHkgWU9VUiBub3JtYWwsIGJ1dCB0aGV5IGFyZW4ndCB0aGUgaGVhcnQgb2YgeW91LiBUaGV5IGNhbiBnbyBhd2F5LkkgbGVhcm5lZCB0byByZWNvZ25pemUgdGhlIHN5bXB0b21zICAgSSdtIG92ZXJlYXRpbmcsIG92ZXJzbGVlcGluZywgSSBoYXZlbid0IHRha2VuIGEgc2hvd2VyIGluIHdlZWtzLCBJIGNhbid0IGdldCBvdXQgb2YgYmVkLCBwZXR0aW5nIG15IGNhdCBzZWVtcyBsaWtlIGEgdGVycmlibGUgY2hvcmUgICBhbmQgSSBrbm93IHRoYXQncyB3aGVuIEkgbmVlZCB0byBnZXQgaGVscCBhbmQgbWFrZSBhbiBhcHBvaW50bWVudCB3aXRoIGEgY291bnNlbG9yLiBMaWtlIHNlZWluZyBhIGRlbnRpc3Qgd2hlbiB5b3VyIHRvb3RoIGh1cnRzLCB5YSBnb3R0YSB0YWtlIGNhcmUgb2YgeW91cnNlbGYuS3ZhbTIwMTcgIDExIHBvaW50cyAgc3VibWl0dGVkIDIwIGRheXMgYWdvSXQgd2FzIGEgSGFycnkgUG90dGVyIHdhbmQuIApEdWUgdG8gcG90IG9kZHMgYW5kIGltcGxpZWQgb2RkcyB5b3UgYmFzaWNhbGx5IGFyZSBnZXR0aW5nIGEgZnJlZSByb2xsIGZvciBzdHJvbmcgbnV0IHBvdGVudGlhbCBoYW5kcyB0aGF0IGNhbiBzZW1pIGJsdWZmIHN0cm9uZ2x5IG9uIHRoZSBmbG9wIHZlcnkgcHJvZml0YWJseS4gSG93ZXZlciB0byBtZSBhICJnb29kIiBPTUMgc3R5bGUgaXMganVzdCBhIHZhcmlhbnQgb2YgZXh0cmEgdGlnaHQgcG9rZXIgd2hpY2ggSSBiZWxpZXZlIGNhbiBiZSBwcm9maXRhYmxlIGF0IHRoZSBsb3dlciBzdGFrZXMuIApZb3UgbWVhbiBkaWQgSSBzbGVlcCB3aXRoIGFueW9uZSBiZWZvcmUgaGVyPyBTdXJlLCBJIHdhcyB3aXRoIG15IGZhaXIgc2hhcmUgb2Ygd29tZW4gYmVmb3JlIEkgbWV0IGhlci4gCllvdSBzaG91bGQgYWxzbyBjb25zaWRlciBsaW1pdGluZyB0aGUgc2VydmljZXMgeW91IG9mZmVyIGluIHRoZSBiZWdpbm5pbmcsIHN1Y2ggYXMgaHlkcm90aGVyYXB5LiBBY2NvcmRpbmcgdG8gRW50cmVwcmVuZXVyLCBoeWRyb3RoZXJhcHkgZXF1aXBtZW50IGlzIGV4dHJlbWVseSBjb3N0bHkgYW5kIG1heSBub3QgYmUgZmVhc2libGUuIEFub3RoZXIgd2Vha25lc3MgaXMgdGhhdCBtYW55IHBlb3BsZSBzZWUgYSBkYXkgc3BhIGFzIGEgbHV4dXJ5IHRoYXQgaXMgb3V0IG9mIHRoZWlyIGJ1ZGdldCBvciBjYW4gb25seSBiZSBpbmR1bGdlZCBpbiBvbiBzcGVjaWFsIG9jY2FzaW9ucywgbWVhbmluZyB0aGUgY2xpZW50IGJhc2UgbWlnaHQgYmUgdGhpbiwgZXNwZWNpYWxseSBhcyB0aGUgYnVzaW5lc3MgaXMganVzdCBiZWNvbWluZyBlc3RhYmxpc2hlZC4gCldlIHNob3VsZCBiZSBhZHZvY2F0aW5nIGZvciBzdHJvbmdlciByYXRpbmdzIGFuZCB1bHRpbWF0ZWx5IGEgYmFuIG9uIGxvb3QgYm94ZXMuLiAKSXQgaXMgbm90IHRvbyBkZW1hbmRpbmcgYW5kIHF1aXRlIHNhdGlzZnlpbmcuLiAKRnV0dXJlIHJlc2VhcmNoIHNob3VsZCB0ZXN0IHdoZXRoZXIgdGhlc2UgZWZmZWN0cyBjb250cmlidXRlIHRvIHRoZSB0aGVyYXBldXRpYyBlZmZlY3RzIGluIGNsaW5pY2FsIHBvcHVsYXRpb25zLi4gClRhdHRsZSB0YWlsaW5nIHRvIGEgdGhpcmQgcGFydHkgaXMgd2VhayBhbmQgdW5kZXJoYW5kZWQgYW5kIHNob3VsZCBvbmx5IGJlIGEgbGFzdCByZXNvcnQgaWYgdGhleSBjb250aW51ZSB0byBiZSB1bnJlYXNvbmFibGUgbGlrZSBub3QgZ2l2aW5nIHlvdSBhbiBob25lc3QgYW5zd2VyLiAKVGhlIG5leHQgY29sb3IgdGhhdCB5b3Ugc2hvdWxkIGJlIGZhbWlsaWFyIHdpdGggd2hlbiBpdCBjb21lcyB0byBDbGF5IENhc2lubyBQb2tlciBDaGlwcyBpcyByZWQuIFRoZXNlIHN0YW5kIGZvciB0aGUgbW9uZXkgYW1vdW50IG9mICQ1LjAwLiBUaGVzZSBhcmUgcmVhbGx5IGNvbW1vbiB3aGVuIGl0IGNvbWVzIHRvIGdhbWVzIG9mIGNoYW5jZS4gCihQcml2YWN5IFBvbGljeSlGZWF0dXJlc0dvb2dsZSBDdXN0b20gU2VhcmNoVGhpcyBpcyBmZWF0dXJlIGFsbG93cyB5b3UgdG8gc2VhcmNoIHRoZSBzaXRlLiAKSWYgSSBtZWV0IHNvbWVvbmUgYW5kIHRoZXJlIGEgY29ubmVjdGlvbiwgZmluZS4uIApCdXQgdGhhdCBub3QgZ29pbmcgdG8gaGFwcGVuLiAKVW5mb3J0dW5hdGVseSwgYXZvaWRpbmcgaW1tdW5pdHkgYm9vc3RlcnMgaXMgcmVhbGx5IHRoZSBvbmx5IHRoaW5nIHRoYXQgY2FuIHNhdmUgdGhlIHBlb3BsZSB3aG8gYXJlIHN1c2NlcHRpYmxlIHRvIGNvbGRzLCBvdGhlciB0aGFuIHRlbGxpbmcgdGhlbSB0byB0cnkgdG8gYXZvaWQgYWxsIDIwMCBvZiB0aGUgdmlydXNlcyB0aGF0IG9mZmljZSB3b3JrZXJzIGFuZCBzY2hvb2xjaGlsZHJlbiBhcmUgYmFzaWNhbGx5IHN0ZXdpbmcgaW4gZHVyaW5nIHRoZSB3aW50ZXIgbW9udGhzLiBJZiB5b3UgZG9uJ3Qgd2FudCB0byB3YWxrIGFyb3VuZCBpbiBhIGhhem1hdCBzdWl0LCB5b3VyIG9ubHkgb3RoZXIgb3B0aW9uIGlzIHRvIGdldCBzaWNrIDIwMCB0aW1lcy4gSnVzdCBsaWtlIHdpdGggY2hpY2tlbnBveCwgZXZlcnkgdGltZSB5b3VyIGJvZHkgZ2V0cyBhIGNvbGQsIGl0IGNvb2tzIHVwIGEgc3BlY2lhbGx5IGRlc2lnbmVkIGRlZmVuc2UgZm9yIHRoZSBuZXh0IHRpbWUgaXQgaW52YWRlcy4gQnV0IHNpbmNlIHRoZXJlIGFyZSAyMDAgZGlmZmVyZW50IHZpcnVzZXMgdGhhdCBvdXIgYm9kaWVzIGZyZWFrIG91dCBhYm91dCwgeW91J2xsIG5lZWQgdG8gZ2V0IG92ZXIgMjAwIGNvbGRzIGJlZm9yZSB5b3VyIGJvZHkgbGVhcm5zIGl0J3MgdGltZSBmb3IgZXZlcnlib2R5IHRvIHN0YXJ0IGFjdGluZyBsaWtlIGEgY291cGxlIG9mIEZvbnppZXMgYW5kIGNoaWxsLgpUcnkgbG9va2luZyBmb3IgZGlmZmVyZW50IFBva2VyIFRhYmxlIEZlbHRzIHRoYXQgbWF0Y2ggeW91ciBwZXJzb25hbGl0eSBhbmQgc2VlIHdoYXQgeW91IGNhbiBmaW5kLiAKV2lsbCB5b3UgYmUgcHJvdmlkaW5nIHJlZnJlc2htZW50cz9KdXN0IGJlY2F1c2UgeW91IGFyZSBob3N0aW5nIHRoZSB0b3VybmFtZW50LCBkb2Vzbid0IG1lYW4gaXQncyB5b3VyIGpvYiB0byBmZWVkIHRoZSBncm91cC4gVGhlcmUgaXMgbm90aGluZyB3cm9uZyB3aXRoIGxldHRpbmcgeW91ciBndWVzdHMga25vdyBhaGVhZCBvZiB0aW1lIHRoYXQgeW91IHdpbGwgcHJvdmlkZSBjaGlwcyBhbmQgc29kYXMgYW5kIHRoYXQgdGhleSBhcmUgd2VsY29tZSB0byBicmluZyBmb29kIGl0ZW1zIG9yIGJldmVyYWdlcyBvZiB0aGVpciBjaG9vc2luZy4gT3IsIGFzayBldmVyeWJvZHkgdG8gcGl0Y2ggaW4gJDUgb3IgJDEwIGZvciBmb29kIGFuZCB0aGVuIHBsYW4gdG8gb3JkZXIgcGl6emEgYW5kIHN0b2NrIHlvdXIgZnJpZGdlIHdpdGggc29kYXMgYW5kIGJlZXIuLiAKV2VhcmluZyBwaW5rIGhhcyBub3cgYmVjb21lIHN5bm9ueW1vdXMgd2l0aCBicmVhc3QgY2FuY2VyIGF3YXJlbmVzcy4gCiJBbmQgdGhlIG1vcmUgSSByZWFkLCB0aGUgbW9yZSBJIHJlc2VhcmNoZWQsIGxpdGVyYWxseSwgcGh5c2ljYWxseSwgdGhlIHNpY2tlciBJIGdvdC4gCklzdCBBcnRpa2VsIHNjaHJlaWJlbiBlaW4ga3JlYXRpdmVyIFByb3plc3M/IFdlbm4gZHUgQnV6emZlZWQgb2RlciBXU0ogbGllc3QsIGhhc3QgZHUgbWl0IFNpY2hlcmhlaXQgc2Nob24gZWluZW4gdm9uIEFJIGdlc2NocmllYmVuZW4gQXJ0aWtlbCBnZWxlc2VuLCBvaG5lIGVzIHVuYmVkaW5ndCB6dSBtZXJrZW4uCk1hbnkgcGxheWVycyBjb250aW51b3VzbHkgbW92ZSBmcm9tIHNpdGUgdG8gc2l0ZSBjb2xsZWN0aW5nIHRoZXNlIGJvbnVzZXMgKG9mdGVuIGNhbGxlZCBib251cyBodW50aW5nKSwgd2hpY2ggY2FuIGJlIGEgZ29vZCB3YXkgdG8gaW5jcmVhc2UgYSBwbGF5ZXIncyBwcm9maXQgcGVyIGhvdXIgb2YgcG9rZXIgcGxheS4gClRoZSBzY2VuZSBzbWFsbCBlbm91Z2ggYXMgaXMgYW5kIHRocmlsbCByaWRlcnMgYXJlIGZhciBhbmQgZmV3IGJldHdlZW4gYW55bW9yZSwgYmUgc2FmZSBmb3IgbXkgc2FrZSB5ZWFoPyBJIGhhdGUgc2VlaW5nIG5hbWVzIGFkZGVkIHRvIHRoZSBib29rIG9mIGJyb2tlbiBkZWNrcy4gWW91IGxhZHMgYXJlIGxlZ2VuZHMsIEkgcm9vdGluZyBmb3IgYSBsb25nIGFuZCBoYXBweSBydW4gb2YgaXQgZm9yIHlvdSBhbGwuCkkgbGl0ZXJhbGx5IGp1c3QgcmVhZCBhbiBhbWF6aW5nIHF1b3RlIGluIGEgYm9vayBhYm91dCBleGFjdGx5IHRoaXMgdG9waWMuIFRvIHBhcmFwaHJhc2UgImEgbG90IG9mIHRoZSBiZWhhdmlvciB5b3UncmUgc2VlaW5nIG5vdywgaXQncyBsaWtlIHRoZXNlIHBlb3BsZSBDT1VMRE4nVCBXQUlUIHRvIGdldCBwZXJtaXNzaW9uIHRvIGFjdCBsaWtlIHRoaXMuIgpMYW5kZWQgYSBzeXNhZG1pbiBwcm9tb3Rpb24gdGhlcmUgYWZ0ZXIgMTIgbW9udGhzIGhhdmluZyBkZW1vbnN0cmF0ZWQgbXkgY2FwYWJpbGl0eSB3aXRoIHRoaXMgcGllY2Ugb2Ygc29mdHdhcmUgYW5kIHNvbWUgb3RoZXIgdGhpbmdzLiBUaGV5IGRpZG4ndCBnaXZlIG1lIG11Y2ggb2YgYSBwYXkgcmlzZSB3aXRoIHRoZSBuZXcgcHJvbW90aW9uLiAKSG93ZXZlciwgaXQgaXMgbm90IHJlcXVpcmVkIHRoYXQgdGhlIHRocmVhdCBhY3R1YWxseSBwcmV2ZW50IHRoZSB3aXRuZXNzIGZyb20gdGVzdGlmeWluZy4gVi4gCkVhc2lseSB0aGUgbW9zdCB1c2VsZXNzIGJpdCBvZiBpbmZvIGZyb20gdGhhdCBjbGFzcywgYnV0IEkgc3RpbGwgZW5qb3kgaXQuIApXaGF0IGtpbmRzIG9mIHRhdHRvb3MgZG8gTGFkeSBHYWdhIGhhdmU/CkkgZG91YnQgeW91IGxpdmluZyBvZmYgeW91ciAxME5MIHdhZ2VzIHNvIGlmIHlvdSBoYXZlIHRvIGJvdW5jZSBiZXR3ZWVuIDEwTkwgYW5kIDI1TkwgMzAgdGltZXMgaXQgd29udCByZWFsbHkgbWFrZSBhIGRpZmZlcmVuY2UgdG8geW91ciBsaWZlLiAKVS4gUy4gCkNhciBpbHMgb250ICBjb2V1ciBkZSBwYXJ0YWdlciBjZSBxdSdpbHMgbWV0dGVudCB0YW50IGRlIHNvaW4gIHByb2R1aXJlLiAKVGhlIGdhbWUgYm9hcmQgaXMgYW5vdGhlciBkaWZmZXJlbmNlIGJldHdlZW4gYmluZ28gYW5kIFBvIEtlIE5vLiAKT25jZSBhIGd1eSBncmFiYmVkIGhpcyBzdGFjayBvZiBjaGlwcyAoJDVzIG9uIHRoZSBib3R0b20sIHNvbWUgJDI1cyBvbiB0b3ApIGFuZCBzdHJldGNoZWQgaXQgb3V0IGFuZCB0cmllZCB0byBjb3VudCBvdXQgYSBjYWxsLiBIZSBkaWQgdGFrZSBoaXMgaGFuZHMgb2ZmIHRoZSBzdGFjayB0byBjdXQgaXQgYXQgYSBjYWxsIChJIHRoaW5rIGl0IHdhcyBhcm91bmQgYSAkMjAgY2FsbCwgc28gaGUgcGlja2VkIGl0IHVwIGFnYWluIGFmdGVyIHRoZSA0dGggY2hpcCkuIEd1eSB0aGF0IG9yaWdpbmFsbHkgYmV0IGhhZCBhIGJpZyBoYW5kIGFuZCB3YW50ZWQgdG8gZmxvb3IgdG8gY2hlY2sgdGhlIHRhcGUgdG8gc2VlIGlmIGhpcyBoYW5kIGRpZCBjb21lIG9mZiwgdGh1cyBwdXR0aW5nIGFsbCB0aGUgY2hpcHMgaW4gcGxheS4gQ2FsbGVyIHN3b3JlIGhlIGRpZG4gYnV0IHRoZSB0YXBlIHNob3dzIGhlIGxldCB0aGVtIGdvLiBIZSB3YXMgdG9sZCB0aGF0IGtpbmQgb2YgcGxheSBpcyBsZWdhbCB0byBjYWxsIChncmFiYmluZyBhIHN0YWNrIGFuZCBjb3VudGluZyB0aGVtIGluIGZyb250KSwgYnV0IGFueSB0aGF0IHRvdWNoIHRoZSBmZWx0IG9yIGFyZSBvbiB0aGUgdGFibGUgd2hlbiB0aGUgaGFuZCBpcyByZW1vdmVkIHN0YXkuIEkgdGhpbmsgdGhpcyBpcyBhY3R1YWxseSB0ZXJyaWJsZSBwcmFjdGljZS4gSXQgY2FuIGRlZmluaXRlbHkgYmUgZXhwbG9pdGVkLCBhbmQgSSBldmVyeSBvbmNlIGluIGF3aGlsZSBkbyBzZWUgaXQgZXhwbG9pdGVkLiBTbyBpZiB2aWxsYWluIGFubm91bmNlcyBjYWxsIGFzIGhlcm8gaXMgY3V0dGluZyBoaXMgY2hpcHMsIGhlcm8gY2FuIGltbWVkaWF0ZWx5IHB1bGwgYmFjayBhbnkgY2hpcHMgdGhhdCBoYXZlbnQgdG91Y2hlZCB0aGUgdGFibGUgeWV0IGlmIGhlIGlzIGJsdWZmaW5nLCBvciBpZiBoZSBoYXMgbWFqb3IgdmFsdWUgaGUgY2FuIGJldCBhcyBtYW55IGNoaXBzIGFzIGhlIGJyb3VnaHQgb3V0LiBUaGlzIHNob3VsZCBub3QgYmUgYWJsZSB0byBoYXBwZW4uIEl0IGlzIGEgcmVhbGx5IGVhc3kgcnVsZSB0byBlbmZvcmNlIHRvIChhbnkgY2hpcHMgY3Jvc3NpbmcgdGhlIGxpbmUgbXVzdCByZW1haW4gaW4gcG90KSwgdW5mb3J0dW5hdGVseSBzb29vbyBtYW55IHBlb3BsZSBkbyBpdCBuZWFyIG1lLCB0aGF0IGNoYW5naW5nIHRoaXMgcnVsZSB3b3VsZCBjYXVzZSBhIHRvbiBvZiBpc3N1ZXMuCklmIGFueXRoaW5nLCBkdWUgdG8gdGhlIHNpZGVib2FyZCBidWxsZXRzIHRoYXQgaGF2ZSByZWNlbnRseSBiZWVuIHJlbGVhc2VkIGFzIHdlbGwgYXMgdGhlIGdlbmVyYWwgc3RhdGUgb2YgdGhlIG1ldGEsIEkgcGVyc29uYWxseSBwdXNoIHBlb3BsZSBhd2F5IGZyb20gVHJvbiBmcm9tIGEgIndhbnQgdG8gd2luIiBwZXJzcGVjdGl2ZS4gQnV0IGlmIHlvdSBlbmpveSB0aGUgZGVjayBhbmQgd2FudCB0byBidWlsZCBhbmQgcGxheSBpdCBJIGNlcnRhaW5seSBub3QgZ29pbmcgdG8gdGVsbCB5b3UgdG8gZG8gc28uIApUaGV5IHVzZWQgYSBiaWcgdGlnaHQgZW5kLCB3aG8gbG9va3MgbGlrZSBhIGxpbmVtYW4gc28gdGhhdCB0aGUgZGVmZW5zZSB3b3VsZG4gbm90aWNlIHRoYXQgdGhlIHRhY2tsZSBpcyBhY3R1YWxseSBhbiBlbGlnaWJsZSByZWNlaXZlciBhbmQgd291bGQgbGVhdmUgaGltIHVuY292ZXJlZC4gClRoZSBHSSB3YXMgb25lIG9mIHRoZSA0MHRoIERpdmlzaW9uIG1lbiB3aG8gZG9ja2VkIGF0IFNlYXR0bGUgb3ZlciB0aGUgd2VlayBlbmQuIApJIGFsbW9zdCBzdHJva2VkIG91dC4gCldoZW4gTWljaGlnYW4gc2Vhc29uIGVuZHMsIEh1Z2hlcyBjYW4gc2lnbiB3aXRoIHRoZSBDYW51Y2tzIG11Y2ggbGlrZSBib3RoIEJyb2NrIEJvZXNlciBhbmQgQWRhbSBHYXVkZXR0ZSBkaWQgYmVmb3JlIGhpbS4gSXQgd291bGQgYnVybiBvZmYgdGhlIGZpcnN0IHllYXIgb2YgaGlzIGVudHJ5IGxldmVsIGNvbnRyYWN0LCBidXQgdGhhdCBhIHByZXR0eSBjb21tb24gcGVyayBOSEwgdGVhbXMgYXJlIGdpdmluZyB0b3AgcHJvc3BlY3RzIHdobyBhcmUgY29taW5nIG91dCBvZiBjb2xsZWdlLgpJIHJhbiBldmVuIGZhc3RlciBhbmQgZmluaXNoZWQgc3Ryb25nLiAKMEhpIGFsbCEgSSBhbiBBbWVyaWNhbiB0cmF2ZWxpbmcgdG8gR2VybWFueSBpbiBhIGZldyB3ZWVrcyB3aXRoIHNvbWUgZnJpZW5kcy4gV2Ugd2lsbCBiZSB0aGVyZSBmb3IgdHdvIHdlZWtzIGFuZCBoYXZlIGEgbG90IHBsYW5uZWQuIApCdXJuaW5nIHBlb3BsZSBpbiBlZmZpZ3kgaXMgcmVwdWxzaXZlLiBDYW4gd2Ugc3RvcCBkb2luZyB0aGlzPyBJdCBvZmZlbnNpdmUgdG8gbWUgdG8gYnVybiBhIHJlcHJlc2VudGF0aW9uIG9mIHNvbWVvbmUgYm9keS4gCk1hbnVmYWN0dXJpbmcgdGVjaG5pcXVlcyBhbHNvIGluY2x1ZGUgdGhlIHVzZSBvZiBhIHBvd2VyZnVsIG1hZ2ljIG1hZ25ldCB0aGF0IGlzIHNtYWxsIGVub3VnaCB0byBiZSBvYnRydXNpdmUgYnV0IHN0cm9uZyBlbm91Z2ggdG8gaG9sZCB0aGUgY292ZXIgc2h1dC4gCllvdSBrbm93IGhvdyBhYnNlbnQgbWluZGVkbHkgYml0ZSB5b3VyIG5haWxzPyBDSVAgc3VmZmVyZXJzIHdpbGwgYml0ZSB0aGUgaW5zaWRlcyBvZiB0aGVpciBtb3V0aHMgd2l0aG91dCByZWFsaXppbmcgaXQgYmVjYXVzZSB0aGV5IGRvbiBmZWVsIHBhaW4gZnJvbSBpdC4gVGhleSBnZXQgc2NhcnMgYWxsIG92ZXIgdGhlaXIgY2hlZWtzIGFuZCBndW1zLiBUaGUgZ3V5IG9uIHRoZSB3aWtpcGVkaWEgcGFnZSBjaGV3ZWQgb2ZmIGhhbGYgaGlzIHRvbmd1ZSBiZWZvcmUgaGlzIHBhcmVudHMgcmVhbGl6ZWQgaGUgaGFkIENJUC4uIApBZnRlciBTY2hvb2wgVHV0b3IgSm9iIERlc2NyaXB0aW9uCkl0IHdhcyBmdW4uIApXaGVuIHRoaXMgaGFwcGVucyB0aGUgYWxpZW4gd2lsbCBoYXZlIG5vIFRVIGZvciB0aGF0IFhlbm9uYXV0IHR1cm4gKG1lYW5pbmcgdGhleSBjYW4gZmlyZSByZWFjdGlvbiBzaG90cyksIGFuZCB0aGV5IHdpbGwgb25seSBoYXZlIGhhbGYgVFVzIG5leHQgYWxpZW4gdHVybi4gCkJpc3QgZHUgbm9jaCBrZWluZSAyMSwgZGFubiBzdWNoZSBpbiBkZWluZXIgR2VnZW5kIG5hY2ggZWluZXIgTWdsaWNoa2VpdCwgd28gZHUgbWl0IGFuZGVyZW4gc3BpZWxlbiBkYXJmc3QsIGRpZSBkYXMgU3BpZWwgZ2VuYXVzbyBlcm5zdCBuZWhtZW4gd2llIGR1Li4gCk15IGdvIHRvIGhhcyBiZWVuIERITCwgdGhleSBtb3ZlIHF1aWNrISBBbmQgaWYgdGhlcmUgd2FzIGV2ZXIgYW55IGlzc3VlIChyYXJlbHkpLCB0aGV5J3ZlIGFsd2F5cyBjb250YWN0ZWQgbWUgZGlyZWN0bHkgYW5kIHdlJ3ZlIGJlZW4gYWJsZSB0byByZXNvbHZlIGl0IG92ZXIgZW1haWwuIEl0IGlzIGEgYml0IGV4cGVuc2l2ZSB0aG91Z2gsIGJ1dCB0aGV5IGdpdmUgbWUgcGVhY2Ugb2YgbWluZC4KVGhhdCB1cCBmcm9tICQyNiwwMTAgaW4gMjAxNywgYW5kIHRoZSBsaW1pdCByaXNlcyB0byAkMjYsNTAwIGluIDIwMTkgYW5kIHRvICQyNywyMzAgaW4gdGhlIDIwMjAgdGF4IHllYXIsIHNheXMgTWFzdHJhY2NpLi4gCk11Y2ggYW5nZXIgYW5kIGh5c3RlcmlhIGlzIGZvY3VzZWQgb24gSHVzYWluIEhhcXFhbmkgYnV0IHRoZSBhbWJhc3NhZG9yLCBkZXNwaXRlIGhpcyBjb25zaWRlcmFibGUgc3VwZXJuYXR1cmFsIHBvd2VycywgaXMgbm90IHRoZSBjYXVzZSBvZiB0aGUgUFBQJ3MgYWRkaWN0aW9uIHRvIG90aGVyIHBlb3BsZSdzIG1vbmV5LiBPdGhlciBwZW9wbGUncyBtb25leSBpcyBwYXJ0IG9mIHRoZSB2ZXJ5IEROQSBvZiBmZXVkYWwgcG9saXRpY3MgaW4gdGhpcyBjb3VudHJ5LiAKVGhpcyBpbmNyZWFzZXMgYmxvb2QgY2lyY3VsYXRpb24gdG8gb3RoZXIgbGltYnMgd2hpY2ggYWlkcyBseW1waGF0aWMgZHJhaW5hZ2UuIApHdWVzc3RpbWF0ZSB0aGUgcmlza3Mgb24geW91ciBzdGFydGluZyBoYW5kIGluIFRleGFzIEhvbGQnZW0uIFdoZW4geW91IHN0YXJ0IHRoZSBpbml0aWFsIHJvdW5kIG9mIGJldHRpbmcsIGl0J3MgaW1wb3J0YW50IHRvIGtub3cgd2hldGhlciBvciBub3QgdGhlIGhhbmQgeW91IGhhdmUgaXMgd29ydGggcGxheWluZyBhbmQgdG8gc2VlIHdoYXQgY2FuIGJlIGFkZGVkIHRvIHRoZW0gZnJvbSB0aGUgY29tbXVuaXR5IGNhcmRzLiBJbiBUZXhhcyBIb2xkJ2VtLCB5b3UgaGF2ZSAyIGNhcmRzIHRvIHN0YXJ0LCBhbmQgeW91IGhhdmUgdG8gZGVjaWRlIHdoZXRoZXIgdG8gcGxheSB0aGVtIG9yIGZvbGQuLiAKSGF2ZSB5b3UgdHJpZWQgQmlyY2hlciBNdWVzZWxpPyBJdCBvYXRzLCBJIGtub3csIGJ1dCB3aXRoIGVub3VnaCBvdGhlciBzdHVmZiBpdCBtaWdodCBrZWVwIHlvdSBmdWxsIGxvbmdlci4gMS8yIGMgZWFjaCBvZiB1bmNvb2tlZCByb2xsZWQgb2F0cyBhbmQgbWlsaywgMS80IGMgR3JlZWsgeW9ndXJ0LCAxLzQgY3VwIHRvdGFsIG9mIGRyaWVkIGZydWl0IGFuZCBudXRzKEkgbGlrZSBzbGljZWQgYWxtb25kcyBhbmQgY3JhbmJlcnJpZXMpLCBhbmQgMS8yIG9mIGEgc21hbGwgYXBwbGUgZ3JhdGVkLiBNaXggaXQgdXAgYW5kIGxlYXZlIG92ZXJuaWdodCBpbiB0aGUgZnJpZGdlLiAKVGhlbiBvbmUgZGF5IEkgYWNjaWRlbnRhbGx5IGRyb3BwZWQgaXQgaW4gdGhlIHNub3cgb3V0c2lkZSBteSBob3VzZSBhbmQgaXQgd2FzIG91dCB0aGVyZSBmb3Igb3ZlciAyIGhvdXJzLCBJIHdlbnQgb3V0IGFuZCBmb3VuZCBpdC4gSXQgaGFkIGJlZW4gaW4gcmVzdCBtb2RlLCBzbyBJIG9wZW5lZCBpdCBhbmQgdGhlIHRvcCBzY3JlZW4gd2FzbiB3b3JraW5nIG5vIG1hdHRlciB3aGF0IEkgZGlkLCBzbyBJIGxldCBpdCBkcnkgZm9yIGEgd2hpbGUgaW4gY2FzZSBpdCB3YXMgd2F0ZXIgaW4gdGhlIHNjcmVlbiBvciBzb21ldGhpbmcsIGFuZCB0aGVuIHR1cm5lZCBpdCBvbiBsYXRlciB0aGF0IG5pZ2h0IGFuZCBpdCB3YXMgd29ya2luZyBhZ2FpbiEKVGhlIHRyYWl0cyBuZWVkZWQgZm9yIGEgc3VjY2Vzc2Z1bCBzYWxlcyBjYXJlZXIgICBwZXJzb25hbGl0eSwgaW50ZXJuYWwgbW90aXZhdGlvbiBhbmQgYW4gdW53aWxsaW5nbmVzcyB0byBlYXNpbHkgYWNjZXB0IGRlZmVhdCAgIGFyZSBpbXBsaWVkIGJ5IGEgY29sbGVnZSBkZWdyZWUgYnV0IG5vdCBvZnRlbiB0YXVnaHQuIApNYWtlIGEgYmx1ZmYgd2hlbiBjYXJkcyBhcmUgZGVhbHQgdGhhdCB3aWxsIHBvc3NpYmx5IGhhdmUgd2Vha2VuZWQgeW91ciBvcHBvbmVudHMgaGFuZC4gCkFuZCBJIGZlbHQgbGlrZSBJIHdhcyByZWFsbHksIHJlYWxseSBnb29kIGF0IHNvbWV0aGluZy4gCktub3cgdGhlbSBhbmQgZXhwbG9pdCB0aGVtLi4gCk15IHBhcmVudHMgaGFkIHR3byBwaG9uZSBsaW5lcywgYW5kIEkgZGlzY292ZXJlZCBJIGNvdWxkIGNhbGwgb25lIHBlcnNvbiwgcHJlc3MgdGhlIGNvbmZlcmVuY2UgYnV0dG9uLCBkaWFsIGEgc2Vjb25kIG51bWJlciwgYW5kIHRoZW4gbXV0ZSB0aGUgcGhvbmUuIFRoZSB0d28gcGVvcGxlIHdlcmUgYm90aCBwcmFuayBjYWxsZWQsIGJ1dCBJIHdhcyBtdXRlZCwgc28gdGhleSB3ZXJlIGRvaW5nIGl0IGFsbCBmb3IgbWUgd2hpbGUgSSB3YXMgbGF1Z2hpbmcgbGlrZSBhbiBpZGlvdC4gSSByZWFsbHkgY291bGQgaGF2ZSBkb25lIGJldHRlciB3aXRoIHRoaXMgb25lLCBidXQgaXQgd2FzIHN0aWxsIGZ1bi4gCkkibSBqdXN0IHNheWluZyB0aGF0IHlvdXIgcmVwcyB3ZXJlbiBpbiBhIHBsYWNlIEkgd291bGQgZnJlYWsgb3V0IGFib3V0LiAKSXQgbWlnaHQgYmUgdmVyeSBoYXJkIHRvIHRoaW5rIGFib3V0IHRoaXMsIGJ1dCB0cnkgdG8gcmVtZW1iZXIgdGhhdCBzaGUgaGFkIG5vIGlkZWEgd2hhdCBoYXBwZW5lZCBiZXR3ZWVuIHRoZSB0d28gb2YgeW91LiBUaGVyZSB3YXMgbm8gd2F5IGZvciBoZXIgdG8ga25vdy4gVGhlIHBlb3BsZSB3aG8gY29tbWl0IHRoZXNlIHR5cGVzIG9mIGNyaW1lcywgc28gb2Z0ZW4gdGhleSdyZSBjaGFybWluZywgYXR0cmFjdGl2ZSwgYW5kIHNlZHVjdGl2ZS4gCkhvd2V2ZXIsIEkgdGhpbmsgeW91IHRvb2sgZXZlcnl0aGluZyBJIHNhaWQgYW5kIHBsYWNlZCBpdCB1cHNpZGUgZG93bi4gSSB0aGluayB3ZSBkb24gY3VsdHVyYWxseSBkaXNtaXNzIHRob3NlIHBlb3BsZSBlbm91Z2guIEkgdGhpbmsgd2UgZW1icmFjZSB0aGVtIHRvbyBtdWNoLiAKMm5kLCBkb24ndCBsZXQgdGhlIHNoYXJrcyB0aGluayB5b3VyIGludGltaWRhdGVkLiAKV2hlbiB0aGUgY2hhaXIgZGV0ZWN0cyBhbiBpbmNyZWFzZSBpbiB0aGVzZSBtZXRyaWNzLCBpdCBpbnRlcnByZXRzIHRoZSBkYXRhIHRvIG1lYW4gdGhhdCB0aGUgYXJlYSBjdXJyZW50bHkgYmVpbmcgbWFzc2FnZWQgaXMgcGFydGljdWxhcmx5IHRlbnNlIG9yIHN0aWZmLiBUaGUgY2hhaXIncyBtaWNyb3Byb2Nlc3NvciBhbHRlcnMgdGhlIG5vcm1hbCBwYXR0ZXJuIHRvIHNwZW5kIG1vcmUgdGltZSBvbiB0aGF0IGFyZWEgW3NvdXJjZTogU2FueW9dLi4gCkkga2VwdCB3b25kZXJpbmcgd2h5IHRoZXkgZXZlbiBib3RoZXJlZCB0byBoYXZlIHRoZSBjZXBoYWxpZCBpbiB0aGUgc3Rvcnkgd2hlbiB0aGV5IGJhcmVseSBpbXBhY3RlZCBpdCBhdCBhbGwsIGFuZCB0aGUgb25seSBwbGF5ZXJzIHdobyByZWFsbHkgaGFkIGFuIGltcGFjdCB3ZXJlIExhcXVhdHVzLCBWZXphLCBhbmQgYSBsaXR0bGUgdGlueSBiaXQgTGxhd2FuLiBBYm9zaGFuIHRpZGFsIHdhdmUgY291bGQgYmVlbiBhIG5hdHVyYWwgZGlzYXN0ZXIsIGFuZCBpdCB3b3VsZG4gaGF2ZSBjaGFuZ2VkIGEgdGhpbmcuLiAKVGhlIFVyb0xpZnQgRGV2aWNlIGlzIHBsYWNlZCB0aHJvdWdoIHRoZSBvYnN0cnVjdGVkIHVyZXRocmEgdG8gYWNjZXNzIHRoZSBlbmxhcmdlZCBwcm9zdGF0ZS4KSSBndWVzcyB0aG9zZSBhcmUgYSBzY2F0dGVyaW5nIG9mIHRob3VnaHRzLiAKWW91IHN0aWxsIGhhdmUgdG8gYW50ZSB1cCBhbmQgc3RheSBpbiB0aGUgZ2FtZS4gQnV0IGlmIHlvdSdyZSB0aGUgdHlwZSBvZiBwbGF5ZXIgd2hvIHRha2VzIHRoZSBnb29kIHdpdGggdGhlIGJhZCBhbmQgdGhlIHdpbnMgd2l0aCB0aGUgbG9zc2VzLCB0aGVuIGFueSBsaXR0bGUgZXh0cmEgdGhhdCB5b3UgZ2V0IHdpbGwgYWx3YXlzIHBsYXkgdG8geW91ciBhZHZhbnRhZ2UuIEFuZCB0aGF0IGNhbiBtYWtlIHlvdSBhIHdpbm5lciBldmVyeSB0aW1lLi4gCiJUaGUgR3JhbmQiIGZvbGxvd3MgYSB2YXJpZXR5IG9mIGNvbG9yZnVsIGNoYXJhY3RlcnMsIGFsbCBjb250ZXN0YW50cyBpbiBhICQxMCBtaWxsaW9uIHBva2VyIHRvdXJuYW1lbnQuIApOb3Qgb25seSBkaWQgeW91IGxhY2sgZXhwZXJpZW5jZSwgeW91IGhlbGQgYWR2ZXJ0aXNpbmcgaW4gZGlzZGFpbiBiZWNhdXNlIHlvdSB3ZXJlIHNtYXJ0ZXIgdGhhbiBhZHZlcnRpc2luZyBwZW9wbGUuIFlvdSBhY3R1YWxseSB0b2xkIHlvdXIgcGVvcGxlIHRoaXMsIG5vdCBjYXJpbmcgdGhhdCBtb3N0IG9mIHRoZW0gd2VyZSBpbiBmYWN0IGFkdmVydGlzaW5nIHBlb3BsZS4uIApUaGUgc3BlY2lmaWMgd29ya291dCByZWdpbWUgZGVwZW5kcyBvbiB0aGUgZGF5IGFuZCB0aGUgd2VlaywgYnV0IGV4cGVjdCBhIG1peCBvZiB3ZWlnaHRzLCBqb2dnaW5nLCBhbmQgbW92ZXMgbGlrZSBwdXNoIHVwcywgYnVycGVlcyBhbmQgd2FsbCBzaXRzLiBLYWlhIGhhcyBpdCdzIG93biB0YWtlIG9uIHN1Y2ggY2xhc3NpY3MsIHdoaWNoIG1ha2VzIGl0IGZlZWwgbGlrZSBhIGZhbWlsaWFyIGNhcmRpbyBhbmQgc3RyZW5ndGggdHJhaW5pbmcgd29ya291dC4gCkNhciAgbCdwb3F1ZSBqZSBtZSBjcm95YWlzIGVuY29yZSBjb21tdW5pc3RlLiAKT3RoZXIgdGhhbiB0aGF0LCBJIGFsd2F5cyB3YW50ZWQgdGhlIGFiaWxpdHkgdG8gbGF5ZXIgY2xvdGhlcyBkaWZmZXJlbnRseSBhbmQgd2VhciBtb3JlIHRoYW4gb25lIGl0ZW0gZnJvbSBlYWNoIGNhdGVnb3J5LiBUaGVyZSBhcmUgc28gbWFueSBvdXRmaXRzIHJ1aW5lZCBieSBob3cgc29tZXRoaW5nIGRvZXNuIHNpdCB3ZWxsIG9uIHRvcCBvZiBvciB1bmRlciBhbm90aGVyIGl0ZW0uIApQaG9uZSA2OTYgNDEgUy4gCkdvZCBtYW4sIEkgYW0gcmVhZHkgZm9yIFJlZCBEZWFkLgpPbiBkYXkgMiBNZXhpY28gd2lsbCBpbW1lZGlhdGVseSBwcm90ZXN0LiAKOSBvZiA1OCBwcm9wZXJ0aWVzIGFyZSBhdmFpbGFibGUgYW5kIG1hdGNoIHlvdXIgZmlsdGVycy4KTG9vayBmb3IgbW9kZWxzIHRoYXQgY29tZSBpbiBkaWZmZXJlbnQgY29sb3JzIHRvbywgc28geW91IGNhbiBoYXZlIG9uZSB0aGF0IGdvZXMgd2l0aCB5b3VyIGFjdGl2ZXdlYXIsIGNhc3VhbCwgYW5kIHdvcmsgb3V0Zml0cy4uIApJZiB5b3Ugd2FubmEgbG9vayBmb3Igc29tZSBjbG90aGVzIG9uIHRoZSBjaGVhcGVyIHNpZGUsIHRyeSBPbGQgTmF2eS4gVGhlaXIgcmVndWxhciBsaW5lIGdvZXMgdXAgdG8gMjAgYW5kIHRoZXkgYWxzbyBoYXZlIGEgcGx1cyBzaXplIHNlbGVjdGlvbiBmb3Igc2l6ZXMgMTYgMzAgc28geW91IGJlIGFibGUgdG8gc2hvcCBib3RoIHNlY3Rpb25zISBUaGVpciBjbG90aGVzIGFyZW4gdGhlIGdyZWF0ZXN0IHF1YWxpdHkgdGhvdWdoIGJ1dCBJIGRvIGxvdmUgdGhlaXIgamVhbnMuIFRoZXkgY2hlYXAgc28gaXQgd2h5IEkgc3RpbGwgc2hvcCB0aGVyZS4uIApOZWl0aGVyIGxpa2VkIGl0LCBib3RoIHdhbnRlZCB0byBiZSBqdXN0IEdyYW5kbWEsIGJ1dCBJIHRvbGQgdGhlbSBpdCB3YXMgc28gc2hlIHdvdWxkIGtub3cgdGhlaXIgdm9pY2VzIGFwYXJ0IChERCBtb3N0bHkgc3Bva2UgdG8gdGhlbSBvbiB0aGUgcGhvbmUgc28gYm90aCBiZWluZyBqdXN0IEdyYW5kbWEgd291bGQgaGF2ZSBub3QgbWFkZSBhIGNsZWFuIGxpbmUgYmV0d2VlbiB0aGVtKS4uIApBcmUgdGhlcmUgb3RoZXIgdW5pdmVyc2l0aWVzIHdoZXJlIHBva2VyIGlzIHRhdWdodD8gUG9rZXIgaXMgdXNlZCBhcyBhIHBlZGFnb2dpY2FsIHRvb2wgaW4gYSBsb3Qgb2YgdW5pdmVyc2l0aWVzIGFyb3VuZCB0aGUgd29ybGQsIHRvIHRlYWNoIGV2ZXJ5dGhpbmcgZnJvbSBwcm9iYWJpbGl0eSB0byBnYW1lIHRoZW9yeSB0byBsYXcuIApJbiBkZW4gbGV0enRlbiBKYWhyZW4gaGF0IHNpY2ggSGVja21hbm4gbWl0IGRlciBjb21wdXRlcmdlc3R0enRlbiBLcmVhdGlvbiB2b24gR3JhZmlrZW4gYmVzY2hmdGlndC4gCkkgd291bGQgc2F5IHRoYXQgTW9mZmF0IGRvZXMgbWFrZSBhbiBlZmZvcnQgdG8gdGlkeSB1cC4gVXN1YWxseSBpdCBvbmUgb3IgdHdvIHNtYWxsIGxpbmVzIGRyb3BwZWQgaW4gc29tZXdoZXJlIHRvIGV4cGxhaW4gb3IganVzdGlmeSBzb21ldGhpbmcgaW4gbGluZSB3aXRoICJ0aGUgcnVsZXMiLiBDb250aW51aXR5IGlzIG1vcmUgb3IgbGVzcyB3ZWxsIGxvb2tlZCBhZnRlciB1bmRlciBNb2ZmYXQsIHdoaWNoIEkgYXBwcmVjaWF0ZWQuClRoaXMgYXV0b21hdGljIGNhcmQgc2h1ZmZsZXIgY2FuIGhhbmRsZSB1cCB0byAyIGZ1bGwgZGVja3Mgb2YgY2FyZHMuIFRoZXJlIGFyZSBmZWVkZXIgdHJheXMgb24gZWFjaCBzaWRlIG9mIHRoZSBjYXJkIHNodWZmbGVyLiBZb3UgY2FuIGxheSB0aGUgY2FyZHMgaGVyZSBhbmQgcHJlc3MgdGhlIGJ1dHRvbiBzaXR1YXRlZCBvbiB0aGUgYm90dG9tIGNlbnRlciBvZiB0aGUgbWFjaGluZS4gCk1vc3QgU2Fpc29uIHllYXN0IGZhbGwgaW50byB0aGF0IGNhdGVnb3J5LiBNb3N0IGRpYXN0YXRpYyBzdHJhaW5zIGFsc28gcHJvZHVjZSBwaGVub2xzIHdoaWNoIGlzIHdoeSB0aGlzIHN0cmFpbiBpcyBzbyBpbnRlcmVzdGluZy4gClRoZSBHSSB3YXMgb25lIG9mIHRoZSA0MHRoIERpdmlzaW9uIG1lbiB3aG8gZG9ja2VkIGF0IFNlYXR0bGUgb3ZlciB0aGUgd2VlayBlbmQuIFN0b3J5IG9uIFBhZ2UgMi4gTk8gQ0hVTVAgQ2hpbXAgb24gU3ByZWUgTE9TIEFOR0VMRVMsIEFwci4gVmljIHRoZSBjaGltcCBwcm92ZWQgaGltc2VsZiBhIGNoYW1wIGFuZCBubyBjaHVtcCB0b2RheSB3aGVuIGhlIGVzY2FwZWQgZnJvbSB0aGUgR3JpZmZpdGggUGFyayBab28uIHNwYXQgb3V0IGEgYm90dGxlIG9mICJkb3BlZCIgY29rZSwgYW5kIGJvd2xlZCBvdmVyIHNldmVyYWwgd291bGQgYmUgaHVtYW4gY2FwdG9ycy4gClNlY29uZCBtb3ZlOiBTZWxsIGJvdGggdW5wcm9maXRhYmxlIHJlbnRhbCBwcm9wZXJ0aWVzLiBDb25kbyAxIGhhcyBhbiBlc3RpbWF0ZWQgdmFsdWUgb2YgJDYyNSwwMDAgYW5kIGEgJDM2OCwwMDAgY29zdC4gVGhleSBjb3VsZCBnZXQgJDU5Myw3NTAgYWZ0ZXIgZml2ZSBwZXIgY2VudCBzZWxsaW5nIGNvc3RzLiAKQWZ0ZXIgc2hlIHB1c2hlZCB0aGUgdHJvb3BzIG91dCBhbmQgbG9ja2VkIHRoZSBkb29yLCB0aGUgbWVuIGRlY2lkZWQgdG8gcmV0YWxpYXRlIGJ5IGN1dHRpbmcgYm90aCB0aGUgcGhvbmUgYW5kIGVsZWN0cmljaXR5IGxpbmVzIGluIHRoZSBob3VzZS4gCkhlIGRyb3AgZXZlcnl0aGluZyB0byB0YWtlIGEgYnJlYWsgYW5kIHBsYXksIG5vIG1hdHRlciBob3cgaW1wb3J0YW50Li4gCkkgaGF2ZW50IHN0YXJ0ZWQgb24gdGhlIGhhcmQgY2xhc3NlcyB5ZXQsIGltIGp1c3QgZG9pbmcgbXkgZ2VuZXJhbCBjb3Vyc2VzIHJpZ2h0IG5vdy5IYWhhIEkgZGVmaW5pdGVseSBub3QgZ29pbmcgdG8gYmUgbWFzc2FnaW5nIHBlb3BsZSBmb3IgZnJlZSEgTXkgZmFtaWx5IGNhbiBmb3JrIHVwIHRoZSBkb2UgOilBdCBNY0Nhbm4gdGhleSBoYXZlIGJ1c2luZXNzIGNsYXNzZXMgYW5kIHRlYWNoIHlvdSBqdXN0IGFib3V0IGV2ZXJ5dGhpbmcgaW4gdGhlIGJ1c2luZXNzLiBhbmQgZXZlcnkgZW5kIG9mIE1hc3NhZ2UgdGhlcmFweS4gCkkgaGF2ZSBiZWVuIGNyb2NoZXRpbmcgdGhlc2UgbGl0dGxlIGFtaWd1cnVtaSBjaGFyYWN0ZXJzIGluc3RlYWQgb2YgZm9jdXNpbmcgb24gd2hhdCBJIHNob3VsZCBiZSBkb2luZy4gClVzaW5nIG5ldywgbXVsdGkgcGxhdGZvcm0gcHJvZHVjdGlvbiBhbmQgZGVsaXZlcnkgY2FwYWJpbGl0aWVzLCB3ZSB3aWxsIG1lZXQgb3VyIG5ld3MgY29uc3VtZXJzIHdoZXJlIHRoZXkgYXJlIGFuZCBwcm92aWRlIG91ciBhZHZlcnRpc2luZyBwYXJ0bmVycyB3aXRoIHJlYWwgdmFsdWUuIApJZiB0aGUgcGxheWVyIHB1dCBhIHNpbmdsZSBjYXJkLCB0aGUgZm9sbG93aW5nIHBsYXllcnMgbXVzdCBwbGF5IHNpbmdsZSBjYXJkcyB1bnRpbCB0aGUgcm91bmQgaXMgb3Zlci4gSWYgdGhleSBwdXQgcGFpcnMsIGV2ZXJ5b25lIGhhcyB0byBwbGF5IHBhaXJzIHVudGlsIHRoZSByb3VuZCBpcyBvdmVyLiAKTGV0dGVycyBvZiBUaGFua3MgdG8gRHIuIFdvbmRlcmZ1bCAgIGxlYXZlIHRoZW0gaGVyZSBPcGVuIExldHRlciB0byB0aGUgTmFzdHkgTnVyc2UgRmFjZSBQcmVzZW50YXRpb24gQmlydGggUmFuZG9tIERlY2VtYmVyIExpZ2h0cyBBbm90aGVyIEZlZWxpbmcgU3VyZ2VyeSBQb3N0IEEgR2VuZXJhbCBBbmVzdGhldGljIFN0b3J5IChmb3IgVG9rb3Bob2JpY3MpIEJlZm9yZSAiRmxvcmVzIiBGbG9yZXMgRmlyZXkgU3Vuc2V0IEhlbGVuIE1pcnJlbiBUb2tvcGhvYmlhIEJyZWF0aGluZyBBc2ggU2FuIERpZWdvIEFibGF6ZSBDb3phLCBXaGVyZSBhcmUgWW91PyAiVGhlIEJ1c2luZXNzIG9mIEJlaW5nIEJvcm4iOiBUaGUgSW1wYWN0IG9uIE1lIFRoaWdocyBMb3dzIEhvdyAiVGhlIEJ1c2luZXNzIG9mIEJlaW5nIEJvcm4iIElzIEdvaW5nIE15IFNvbiBJIFJvb3N0ZXJzPyBUaGUgVmlldyBPdXQgb2YgT3VyIFJvb20gR29yZ2VvdXMgV29tZW4gb2YgSGF3YWknaSBQb2kgQmFsbHMgU3RyZW5ndGggUmVxdWlzaXRlIEx1YXUgUGljdHVyZSBMYWJvciBCYWxsZXQgUmVmbGVjdGlvbiBUTWluZyBDb250aW51YXRpb24gU3RpbGwgb24gUmFjZSBNaWR3aWZlcnkgUmFjZSBCaXJ0aCBJc3N1ZXMgKFBpZ2d5QmFjayBmcm9tIFNhZ2VGZW1tZSkgV2UncmUgU2hvd2luZyAiVGhlIEJ1c2luZXNzIG9mIEJlaW5nIEJvcm4hIiBUaGUgTmV4dCBUaW1lIFlvdSdyZSBOdXJzaW5nLiAKSXQgY291bGQgd29yayBpZiB0aGV5IGNvbWUgdXAgd2l0aCBzY2llbmNlIGZvciB0aGUgc3BlY2lhbCBwb3dlcnMgKGxpa2Ugd2l0aCBCaW90aWNzIGluIE1FKSwgYnV0IG1vc3QgcGVvcGxlIHRhbGtpbmcgYWJvdXQgZ3JvdW5kaW5nIGl0IHByb2JhYmx5IG1lYW4gdGhleSB3YW50IGl0IHRvIGJlIGhhcmQgc2NpZW5jZSwgZXZlbiBpZiBpdCBpcyBzdGlsbCBzY2kgZmkuIApUaGVyZSBpcyBubyBzaW5nbGUgImNvcnJlY3QiIGFuc3dlciB0byB0aGlzIHF1ZXN0aW9uLCBiZWNhdXNlIHRoZSBzcGVjaWZpY3Mgb2YgdG91cm5hbWVudHMgdmFyeSBxdWl0ZSBhIGJpdC4gVGhlIHB1cnBvc2Ugb2YgdGhpcyByZXNwb25zZSB3aWxsIGJlIHRvIHByb3ZpZGUgc29tZSBmb3VuZGF0aW9uYWwgaW5mb3JtYXRpb24gZm9yIHBlb3BsZSBqdXN0IGJlZ2lubmluZyB0byBwbGF5IHRoZXNlIHR5cGVzIG9mIHRvdXJuYW1lbnRzLiBBcyBhIHF1aWNrIHJldmlldywgdGhvdWdoLCBhbGwgcGxheWVycyBhcmUgZGVhbHQgdHdvIGNhcmRzIGRvd24sIGFuZCB0aGVyZSBpcyBhIHJvdW5kIG9mIGJldHRpbmcuIApEZXIgU3RhYXQgaGx0IHNpY2ggc2NoZWluaGVpbGlnIG1pdCBBcmd1bWVudGVuIHdpZSAiSW5kaWdlbmUgTmF0dXJ2bGtlciBpbnJ1aGUgbGFzc2VuIiByYXVzIHVuZCBiaWV0ZXQga2VpbmUgbWVkaXppbmlzY2hlIEdydW5kdmVyc29yZ3VuZy4gSW4gS3ViYSBrb21tdCBlcyB0ZWlsd2Vpc2UgenUgU3Ryb21hYnNjaGFsdHVuZ2VuLCB3ZW5uIGVzIGF1ZmdydW5kIGRlciBCbG9ja2FkZSBhbiBLb2hsZSBtYW5nZWx0LiAKSWYgeW91IGhhdmUgYmVlbiB0YWtpbmcgY2FmZmVpbmUgZXZlcnkgZGF5IGFuZCB5b3Ugc3RvcCwgeW91IGNhbiBnZXQgYW4gaW5jcmVkaWJsZSBoZWFkYWNoZSBiZWNhdXNlIG9mIHRoZSBpbmNyZWFzZWQgYmxvb2QgZmxvdyBpbiB5b3VyIGJyYWluLiAKRG9ybml0aCB1CkZvciB0aGUgZWFybHkvbWlkIGdhbWUgeW91IHNob3VsZG4gZ28gYWxsIGluIG9uIG9uZSBzeW5lcmd5IGJlY2F1c2UgeW91IHByb2JhYmx5IGdvaW5nIHRvIGxvc2UgKFVubGVzcyBpdCBUcm9sbCBzeW5lcmd5KS4gWW91IHNob3VsZCBiZSBnb2luZyBmb3IgYSBtaXggb2Ygb2ZmZW5zaXZlIGFuZCBkZWZlbnNpdmUgc3luZXJnaWVzLiAKVGhlIGNvYXN0IGd1YXJkIGR1ZGU/IFllYSwgd2hpbGUgaGUgYWNjdXNlZCBvZiBwbGFubmluZyBzb21lIGhlaW5vdXMgc2hpdCwgaGFkbiBhY3R1YWxseSBnb25lIHRocm91Z2ggd2l0aCBhbnkgb2YgaXQuIFRoZSBjaGFyZ2UgaGUgYmVpbmcgaGVsZCBvbiwgZm9yIG5vdywgaXMgImEgbWlzZGVtZWFub3IgZHJ1ZyBjaGFyZ2UgYW5kIGEgZmVsb255IHdlYXBvbnMgcG9zc2Vzc2lvbiBjaGFyZ2UgcmVsYXRlZCB0byBpbGxlZ2FsIGRydWcgdXNlLiIgQW55b25lIHdobyBoYXMgc21va2VkIHdlZWQgd2hpbGUgb3duaW5nIGEgZmlyZWFybSBpcyBndWlsdHkgb2YgdGhpcy4gCkxvYmJ5aXN0cz8gc2F5cyBTZW5hdG9yIFJ1c3MgRmVpbmdvbGQgKEQgV0kpLCB0aGUgb25seSBEZW1vY3JhdGljIFNlbmF0b3IgdG8gbm90IHN1cHBvcnQgdGhlIGJpbGwgYW5kIHRoZSByZWFzb24/IGl0IHdpbGwgZG8gbm90aGluZyB0byBwcm90ZWN0IHVzIGZyb20gdGhlIHNvcnQgb2YgV2FsbCBTdC4gCkpvaG4gQmFydG9zLCBXaWxzb24gU2Nob29sLCBJcyBjaGFpcm1hbiBvZiB0aGUgSkVBIHB1YmxpYyByZWxhdGlvbnMgY29tbWl0dGVlIHdoaWNoIGhhcyBhcnJhbmdlZCBmb3IgdGhlIHNlcmllcyBvZiBhcnRpY2xlcy4gCkFzIGEgcmVzdWx0LCB0aGUgbm9ybWFsIHByb2Nlc3Mgb2YgY2VsbCB0dXJub3Zlciwgd2hpY2ggdXN1YWxseSB0YWtlcyBhIG1vbnRoLCBtYXkgdGFrZSBsZXNzIHRoYW4gdHdvIHdlZWtzIHdoZW4gb3V0IG9mIGNvbnRyb2wgbWFsYXNzZXppYSBoYXMgaXJyaXRhdGVkIHRoZSBzY2FscC4gU28gbWFueSBkZWFkIGNlbGxzIGFyZSBzaGVkIGF0IHRoZSBzYW1lIHRpbWUgdGhhdCwgd2hlbiB0aGV5IG1peCB3aXRoIHRoZSBvaWwgZnJvbSB0aGUgaGFpciBmb2xsaWNsZXMsIHRoZXkgdGVuZCB0byBmb3JtIGdyZWFzeSBjbHVtcHMgYmlnIGVub3VnaCB0byBiZSBjbGVhcmx5IHZpc2libGUgdG8gdGhlIG5ha2VkIGV5ZS4gVGhlIG9pbCBhbHNvIG1ha2VzIHRoZSBjbHVtcHMgbW9yZSBsaWtlbHkgdG8gZ2V0IHN0dWNrIGluIHlvdXIgaGFpciAoYW5kIG9uIHlvdXIgc2hvdWxkZXJzKSwgcmF0aGVyIHRoYW4gZmxvYXRpbmcgcXVpY2tseSBhd2F5Li4gCkkgZG9udCBnZXQgaXQsIGJ1dCBpdCB0cnVlLi4gCkkgaGF2ZSBhIGZyaWVuZCB0aGF0IHdvcmtzIGZvciBhIGNvbXBhbnkgdGhhdCBtYWtlcyBoYW5kbWFkZSBuZWFyIGluZnJhcmVkIGxpZ2h0cyBhbmQgc2F1bmFzIGluIE1pc3NvdXJpLiBJIGNhbiBjb250YWN0IGhpbSBhbmQgc2VlIHdoYXQgdGhlIGNvbXBhbnkgc2F5cywgSSBhY3R1YWxseSBlbWFpbGVkIHRoZW0gYSB3ZWVrIGFnbyB0byBhc2sgYWJvdXQgaG93IGJlbmVmaWNpYWwgdGhlaXIgbGlnaHRzIGFyZSBmb3IgZm9yZXNraW4gcmVzdG9yYXRpb24gYW5kIHRoZXkgaGF2ZW4gZ290IGJhY2sgdG8gbWUgeWV0LiBJIGhhdmUgb25lIG9mIHRoZWlyIG5lYXIgaW5mcmFyZWQgc2F1bmFzIHRoYXQgSSB1c2Ugb24gYW4gYWxtb3N0IGRhaWx5IGJhc2lzIGFuZCB0aGF0IHdoZXJlIEkgZG8gbW9zdCBvZiBteSBzdHJldGNoaW5nLgpUaGVuIHRoZSBjYWtlc2VsbGVyIHdpdGggaGlzIHZhcmllZCBjcmllcywgdGhlIHNhdXNhZ2VtYW4sIHRoZSBjb25mZWN0aW9uZXIsIGFuZCBhbGwgdGhlIHZlbmRvcnMgb2YgZm9vZCBoYXdraW5nIHRoZWlyIHdhcmVzLCBlYWNoIHdpdGggaGlzIG93biBkaXN0aW5jdGl2ZSBpbnRvbmF0aW9uLi4gClBvdXIgbCdhcmdpbmluZSB2b3VzIGF2ZXogZW4gcGhhcm1hY2llIGwnQXJnaW5pbmUgVmV5cm9uLiBFbGxlIHRhaXQgcmVtYm91cnNlIGV0IG5lIGRvaXQgcGx1cyBsJ3RyZS5CcmVmLCBqZSB2ZXV4IGJpZW4gZHZlbG9wcGVyIGNlIHN1amV0ICh0cnMgcGFzc2lvbm5hbnQgcG91ciBiZWF1Y291cCksIGonYWkgdHVkaSBsYSBzZXhvbG9naWUgZW4gbGlzYW50IGJlYXVjb3VwIGRlcHVpcyBtb24gYWRvbGVzY2VuY2UsIGMndGFpdCBsYSBncmFuZGUgcG9xdWUgZGUgbCdpbmZsdWVuY2UgZnJhbmFpc2UgZGVzIE1hc3RlcnMgZXQgSm9obnNvbiBldCBhdXRyZXMgQWxmcmVkIEtpbnNleS4gCk5vbiBBc2lhbiBtZW4gYXJlIHNwZWNpZmljYWxseSB0YXJnZXRlZCBieSB0aGUgQ2hpbmVzZSBwaW1wcywgd29ya2luZyBnaXJscyBhbmQgc3BvdHRlcnMgd2hvIHN0ZWVyIGN1c3RvbWVycyBpbnRvIHN0b3JlZnJvbnQgc3BhY2VzIG9yIHNlY29uZCBmbG9vciAic3BhcyIgZm9yIGhvdXIgbG9uZyBlbmNvdW50ZXJzLgpUaGUgY2l0eSBpcyBhbHNvIG9uZSBvZiB0aGUgbGFyZ2VzdCBwb3J0cyBpbiB0aGUgd29ybGQsIGNhcGFibGUgb2YgaGFuZGxpbmcgb3ZlciAxMyBtaWxsaW9uIGNvbnRhaW5lcnMgaW4gYSB5ZWFyLiAKSSB3b3VsZCBsaWtlIHRvIHRyeSBpdCwgaG9uZXN0bHksIGJ1dCBJIHdvdWxkIGhhdmUgcmF0aGVyIHNlZW4gc29tZW9uZSBmcm9tIEhvbWVyb29tIG9yIEhhcmxlbSBQdWJsaWMgKHBsYWNlcyBmYW1vdXMgZm9yIG1hYyBhbmQgY2hlZXNlKS4gClJlY2VudCByZXNlYXJjaCBmcm9tIE9mY29tLCB0aGUgYnJvYWRjYXN0IHJlZ3VsYXRvciwgZm91bmQgdGhhdCBjaGlsZHJlbiBhZ2VkIGZvdXIgdG8gMTUgcG90ZW50aWFsbHkgd2F0Y2hlZCBUViBnYW1ibGluZyBhZHZlcnRzIDQ3MyB0aW1lcyBpbiBqdXN0IDEyIG1vbnRocy4gSXQgZm9sbG93cyBhIGRlY2lzaW9uIGJ5IHRoZSBsYXN0IExhYm91ciBnb3Zlcm5tZW50IHRvIGFsbG93IGFkdmVydHMgdG8gYmUgYnJvYWRjYXN0IGJlZm9yZSB0aGUgOXBtIHdhdGVyc2hlZC4KT2YgY291cnNlIGxhdGVyIHdlIGxlYXJuIGl0IHdhcyBsZXNzIHRoZSBmYWN0IHRoYXQgS2lyayBibHVmZmVkLCBhbmQgbW9yZSB0aGF0IHRoZSBhbGllbnMgaGFkbid0IHJlYWxseSBpbnRlbmRlZCB0byBkZXN0cm95IHRoZSBFbnRlcnByaXNlLiAKT3IgbGlrZSBpZGssIGNsYXNzaWNhbCBtdXNpYywgc28geW91IGRvbiBzZW5kIG1lIHRvIGNvdmVyIHRoYXQgY29uY2VydCwgeW91IHNlbmQgdGhlIHBvc2ggdHdhdCB3aG8ga25vd3Mgd2hhdCBzaGUgdGFsa2luZyBhYm91dC5mdXp6eWJ1bm4gIDMgcG9pbnRzICBzdWJtaXR0ZWQgNyBkYXlzIGFnb0kgbG92ZSBob3cgZXZlcnlvbmUgaGVyZSBpcyBqdXN0IGp1bXBpbmcgb24gdGhlICJJVCBMSVRFUkFMTFkgMTk4NCEhISIgYmFuZHdhZ29uLiAKSXNyYWVsIHdpbGwgb2YgY291cnNlIHdpdGhkcmF3IGNvbXBsZXRlbHkgKG9yIHdpdGggbGFuZCBleGNoYW5nZSkgZnJvbSB0aGUgV2VzdCBCYW5rLi4gCk1vcmVvdmVyLCB0aGUgcGVyZm9ybWFuY2UgY3JpdGVyaWEgdGhhdCB3ZXJlIGRlY2xhcmVkIHRvIGhhdmUgYmVlbiBtZXQgd2VyZSBtb3N0bHkgYmFzZWQgb24gZmFrZSBzdGF0aXN0aWNzIGJsaW5kbHkgYWNjZXB0ZWQgYnkgdGhlIElNRi4uIApJZiB0aGV5IGRvbiBzdXBwb3J0IGEgc29sbyBSYW5rZWQgcXVldWUgaXQgd2lsbCByZWFsbHkgc3VjayBmb3IgbWUsIG5vbiBvZiBteSBmcmllbmRzIGFyZSBnb2luZyB0byBwbGF5IG92ZXJ3YXRjaCBzaW5jZSB0aGV5IGFyZSBhbGwgY2hlYXBza2F0ZXMgYW5kIG9ubHkgcGxheSBmMnAgZ2FtZXMuIEFsdG91Z2ggaSBkZWZpbml0bHkgZ2V0IGhpcyBjb25jZXJucyBpIGhvcGUgdGhleSBjYW4gZmluZCBhIHdheSBhcm91bmQgaXQuIFBlcnNvbm5hbGx5IGVzcGVjaWFsbHkgdGhlIHRlYW0gY29tcCBzZWVtcyBsaWtlIGEgY29uY2VybiB0byBtZSwgaG93IHdpbGwgdGhleSBtYWtlIHN1cmUgdGhlcmUgYXJlIDIgaGVhbGVycyAyIHRhbmtzIGFuZCAyIGRwcyBvbiBlYWNoIHRlYW0/IFRoZXkgY291bGQgbWFrZSBsaWtlIGEgV29XIHF1ZXVlIHN5c3RlbSB3aGVyZSBwZW9wbGUgd2lsbCBoYXZlIHRvIGNoZWNrIHdoaWNoIHJvbGVzIHRoZXkgcGxheSwgYnV0IHRoZW4geW91IHdpbGwgZ2V0IHNrZXdlZCBxdWV1ZSB0aW1lcy4uIApUaGF0IHNhaWQsIGtub3dpbmcgdGhlIG1hdGggbWVhbnMgeW91IGNhbiBhY3F1aXJlIHRoaXMga2luZCBvZiBrbm93bGVkZ2UgbXVjaCBtb3JlIHF1aWNrbHksIGFuZCB0aG9zZSBza2lsbHMgY2FuIGdpdmUgYW4gZWRnZSBpbiB2ZXJ5IHJhcmUgc2l0dWF0aW9ucyB0aGF0IGRvbid0IG9mdGVuIG9jY3VyIGluIGEgcG9rZXIgZ2FtZS4gIlRvIGJlIGEgZ3JlYXQgcGxheWVyLCB5b3UgbmVlZCBib3RoISIgVm9uayBpbnNpc3RlZC4gQ2hyaXMgIkplc3VzIiBGZXJndXNvbiBpcyBvbmUgb2YgdGhlIGJlc3QgcGxheWVycyBpbiB0aGUgd29ybGQsIGFuZCBkZWZpbml0ZWx5IHJlbGllcyBvbiBtYXRoIGFuZCBnYW1lIHRoZW9yeSB3aGVuIGhlIHBsYXlzIChoaXMgZmF0aGVyIGlzIGEgVUNMQSBtYXRoZW1hdGljaWFuLCBhbmQgdGhlIHR3byBtZW4gaGF2ZSB3cml0dGVuIHNldmVyYWwgcGFwZXJzIHRvZ2V0aGVyKTouIApBIGxvdCBvZiB0aGUgcGVvcGxlIGxpdmluZyBpbiBrb25zdGFueiBjb21wbGFpbiBhYm91dCB0aGUgZm9nIHRoYXQgYW5vdGhlciByZWRkaXRvciBtZW50aW9uZWQsIGJ1dCBpdCBqdXN0IHRoZSBkb3duc2lkZSBvZiBsaXZpbmcgbmV4dCB0byB0aGUgbGFrZSwgbGlrZSBtb3NxdWl0b2VzLiBCdXQgdGhlIHN1bW1lciBpcyB3b3J0aCBpdCwgYW5kIEkgZG9uIHRoaW5rIGl0IHRoYXQgYmFkLiAKQXVlcmRlbSBzdGVsbHQgZGFzICBhbGxlbiBOZXVrdW5kZW4gJCA1MDAgaW4gVm91Y2hlcnMgenVtICBiZXJlaXQgdW5kIGJpZXRldCBlaW5lIHZvbGxlIFN0dW5kZSBaZWl0IHJlaW5lbiBDYXNpbm8gR2FtZXMgVmVyZ25nZW5zLCBpbiB3ZWxjaGVyIGRlciBuZXVlICBLdW5kZSBzbyB2aWVsIEdlbGQgd2llIG51ciBtZ2xpY2ggZ2V3aW5uZW4ga2FubiEgRWluZSB3YWhyaGFmdCBndXRlIFBlcnNwZWt0aXZlIWhhdCBhdXNnZWZocnQsIGRhc3MgZGVyIEZpbm5pc2NoZSAgS3VuZGUgbmFtZW5zIGRlbiBhbnNlaG5saWNoZW4gQ2FzaW5vIEphY2twb3QgQmV0cmFnIHZvbiAkIDgzLjgyNSBkdXJjaCBzZWluZW4gU2llZyBhbiBkZXIgcHJvZ3Jlc3NpdmVuIEJsYWNramFjayAgbWl0bmVobWVuIGtvbm50ZS4gRGVyIGZyYW56c2lzY2hlIE1pdGJld2VyYmVyIGltICBuYW1lbnMgdmVyYnVjaHRlIGVpbmVuIEphY2twb3QgU2llZyB2b24gYmVhY2h0bGljaGVuICQgODAuNTU1IGFtIE5pbGUgT25saW5lICBTcGllbC4gCkNoZXNzIGlzIHRoZSBzYW1lLiAKRlRGWS4gCkF0IGxlYXN0IDE4IGFuZCBhcyBtYW55IGFzIDI4IGNvdW50eSByZXNpZGVudHMgZGllZCBmcm9tIG92ZXJkb3NlcyBsYXN0IHllYXIsIEJvb25lIENvdW50eSBTaGVyaWZmIE1pa2UgTmllbHNlbiBzYWlkLgpDbG9zZSBieSB0aGUgSG91c2Ugd2hlcmVpbiBoZSByZXNpZGVkIHdoZW4gbGl2aW5nIHdhcyBidWlsdCBhIHNtYWxsIHNoZWQsIGJ1dCB3aGV0aGVyIGZvciB0aGUgcHVycG9zZSBvciBubyBJIGNhbm5vdCBzYXksIGZvciBpdCB3YXMgaW4gYWxsIHJlc3BlY3RzIGxpa2Ugc29tZSBvZiB0aGUgU2hlZHMgb3IgSG91c2VzIHRoZXkgbGl2ZSBpbi4gVGhpcyBzaGVkIHdhcyBhYm91dCAxNCBvciAxNiBmZWV0IGxvbmcsIDEwIG9yIDEyIGJyb2FkLCBhbmQgb2YgYSBwcm9wb3J0aW9uYWJsZSBoZWlnaHQuIApCbGluZHMgYW5kIEFudGVzOiBHaXZlbiB0aGF0IHRoZSBibGluZHMgaW5jcmVhc2UgYXMgdGhlIGdhbWUgcHJvY2VlZHMsIG9uZSBtdXN0IGtlZXAgaW4gbWluZCB0aGF0IGl0IGNoYW5nZXMgdGhlIGZyYWN0aW9uIGJldHdlZW4gd2hhdCBpcyBlYWNoIHJvdW5kIGFuZCB0aGUgYXZlcmFnZSBzdGFjayBzaXplLiBUaGVyZWZvcmUsIHRoaXMgbWVhbnMgdGhhdCBmb3Igb25lIHRvIGJlIHN1Y2Nlc3NmdWwsIGhlIG9yIHNoZSBtdXN0IGJlIGFoZWFkIG9mIHRoZSBibGluZHMuIFRoaXMgd2F5IGl0IGlzIGVhc2llciB0byBhdm9pZCBzdGFjayBmYWxsaW5nIGF3YXkgd2l0aG91dCBjYXVzaW5nIG9wcG9uZW50cyBhbnkgZGFtYWdlIG9yIHJlYWNoaW5nIHRoYXQgZmluYWwgdGFibGUuCkxldXJzIGNvbnRlbnVzLCBxdWkgY291dnJlbnQgbGVzIGRvbWFpbmVzIGRlIGwnYXN0cm9ub21pZSwgZGUgbGEgbXVzaXF1ZSwgZGUgbGEgYm90YW5pcXVlLCBkdSBkcm9pdCwgZGVzIHNjaWVuY2VzLCBkZSBsJ2hpc3RvaXJlLCBkZSBsYSByZWxpZ2lvbiwgZHUgY29tbWVyY2UsIHRtb2lnbmVudCBkJ3VuZSBBZnJpcXVlIHF1aSBjcml0IHNhIHByb3ByZSBoaXN0b2lyZS4gCldoaWxlIHJlZ2lzdGVyaW5nIHRvIGFueSB3ZWJzaXRlIHVzZXJzIHdpbGwgZ2V0IHRoZSBNYWMncyBwb2tlciBib251c2VzJyBjb2RlLCB3aGljaCBtdXN0IGdldCB0aGUgb2ZmZXJlZCBiZW5lZml0cy4gVGhlcmUgaXMgb25lIHRoaW5nIHVzZXJzIG11c3QgY2hlY2sgYW5kIHRoYXQgaXMgZXZhbHVhdGluZyB0aGUgYm9udXMgb2ZmZXJlZCBieSBvdGhlciBjb21wYW5pZXMuIFRoaXMgY29tcGFyaXNvbiB3aWxsIGhlbHAgdGhlbSB0byBzZWxlY3QgdGhlIGJlc3Qgc2VydmljZSdzIHByb3ZpZGVyIHdpdGggYW1wbGUgb2YgYmVuZWZpdHMuIApUYWxsZXIgYW5kIHdlbGwgYnVpbHQuIEEgc3RvY2t5IGZlbGxvdyB3aXRoIGEga2luZCBzbWlsZSBoaWRkZW4gcGFydGlhbGx5IGJlaGluZCBhIGJ1c2h5IG1vdXN0YWNoZS4gClRoZXkgaGF2ZSBncmVhdCB0b3VybmFtZW50cyB0aGF0IHJ1biBlYWNoIHdlZWsgYW5kIGVhY2ggbW9udGguIApUaGVyZSBpcyBhIHNwZWNpZmljIGlzc3VlIHdpdGggdGhlIEZhY2Vib29rIGluIGFwcCBicm93c2VyIGludGVybWl0dGVudGx5IG1ha2luZyByZXF1ZXN0cyB0byB3ZWJzaXRlcyB3aXRob3V0IGNvb2tpZXMgdGhhdCBoYWQgcHJldmlvdXNseSBiZWVuIHNldC4gVGhpcyBhcHBlYXJzIHRvIGJlIGEgZGVmZWN0IGluIHRoZSBicm93c2VyIHdoaWNoIHNob3VsZCBiZSBhZGRyZXNzZWQgc29vbi4gVGhlIHNpbXBsZXN0IGFwcHJvYWNoIHRvIGF2b2lkIHRoaXMgcHJvYmxlbSBpcyB0byBjb250aW51ZSB0byB1c2UgdGhlIEZhY2Vib29rIGFwcCBidXQgbm90IHVzZSB0aGUgaW4gYXBwIGJyb3dzZXIuIFRoaXMgY2FuIGJlIGRvbmUgdGhyb3VnaCB0aGUgZm9sbG93aW5nIHN0ZXBzOgpJIHN1Z2dlc3QgbG9va2luZyBmb3IgYSBsaXN0IG9mIHF1ZXN0aW9ucyB0byBhc2sgeW91cnNlbGYgYWJvdXQgeW91ciBzdG9yeS4gVGhpcyBleGVyY2lzZSB3aWxsIGhlbHAgcGFpbnQgdGhlIHBpY3R1cmUgYW5kIGhlbHAgZmlsbCBpbiBhbGwgb2YgdGhlIGNyYWNrcyB5b3UgbWF5IG5vdCBoYXZlIGNvbnNpZGVyZWQgaW4geW91ciBjb25jZXB0LgpTYWRhIGFkZGVkIG5vbiBtZW1iZXIgUnVzc2lhIGhhcyBjb21taXR0ZWQgdG8gcmVkdWNpbmcgaXRzIG91dHB1dCBieSAzMDAsMDAwIGJhcnJlbHMgcGVyIGRheSwgaGFsZiBvZiBhIGhvcGVkIGZvciA2MDAsMDAwIGJhcnJlbHMgcGVyIGRheSBmcm9tIG91dHNpZGUgdGhlIGNhcnRlbC4KSXQgd291bGQgZGVwZW5kIHVwb24gYSBudW1iZXIgb2YgZmFjdG9yczogMS4gCkl2ZXkgbGVhcm50IHRoZSBnYW1lIGluIEF0bGFudGljIENpdHkgaW4gdGhlIDE5OTBzLiBBbmNob3JlZCB0byBoaXMgc2VhdCBpbiB0aGUgVGFqIE1haGFsIGNhcmQgcm9vbSBmb3IgZGF5cyBvbiBlbmQsIGhlIHdhcyBzb29uIGdpdmVuIHRoZSBuaWNrbmFtZSAiTm8gSG9tZSBKZXJvbWUiLCB0aGFua3MgaW4gcGFydCB0byBoaXMgZmFrZSBJRCB3aGljaCBib3JlIHRoZSBuYW1lIEplcm9tZS4gTGlrZSBtYW55IGJ1ZGRpbmcgbGVnZW5kcywgIk5vIEhvbWUgSmVyb21lIiBsb3N0IG1vbmV5IHRvIHRoZSBiZXN0IHBva2VyIHBsYXllcnMgYW5kIGNhcmQgc2hhcmtzIG9mIEF0bGFudGljIENpdHkgaW4gdGhvc2UgdmVyeSBlYXJseSBkYXlzIGJ1dCBpbXByb3ZlZCBoaXMgZ2FtZSBpbW1lYXN1cmFibHkgYW5kIHRvb2sgaXQgdG8gVmVnYXMgd2hlcmUgaGUgd29uIGhpcyBmaXJzdCBXU09QIGJyYWNlbGV0IGluIDIwMDAuIApZZWFoIG1hbiBxdWl0ISBTbyBsb25nIGFzIHlvdSBhbmQgeW91ciB3aWZlIGFncmVlLCB3aHkgbm90PyBJJ20gc2ltaWxhciB0byB5b3UgICBkaWZmZXJlbnQgZmllbGQsIGJ1dCBJIGhhdmUgcXVpdCBtb3N0IG9mIG15IGpvYnMgYWZ0ZXIgMiAzIHllYXJzIHdoZW4gaXQgZ290IHRvbyBtdWNoLiBJJ3ZlIHRoZW4gbW92ZWQgb24gdG8gYSBoaWdoZXIgcGF5aW5nLCBoaWdoZXIgcmFua2luZyBqb2IuIEkgaGF2ZSBubyBxdWFsbXMgd2hhdHNvZXZlciBhYm91dCBkb2luZyB0aGlzLiBUaGlzIHdvcmsgaXNuJ3QgbXkgdm9jYXRpb24gb3IgbXkgcGFzc2lvbi4gSSBsaWtlIGl0IGZpbmUsIGJ1dCBJIGZlZWwgemVybyBsb3lhbHR5IHRvIHRoZSBjb21wYW5pZXMgSSB3b3JrIGZvciBhbmQgSSdtIGluIGl0IG9ubHkgZm9yIGFzIGxvbmcgYXMgSSdtIGRvaW5nIGludGVyZXN0aW5nIGVub3VnaCB3b3JrIHdpdGhvdXQgcG9saXRpY2FsIG5vbnNlbnNlLiBHb29kIGx1Y2shIEkgZG91YnQgeW91J2xsIHJlZ3JldCBpdC4KV2h5IGRpZCBHb3Zlcm5vciBMYSBUcm9iZSBpbnRyb2R1Y2UgbWluZXJzJyBsaWNlbmNlcz8KQ29uc2VxdWVudGx5IGJvdGggdGhlc2Ugc3VicmVkZGl0cyBhcmUgZWFzeSB0byBhYnVzZSB3aXRoIG5vbiBmdW5ueSBjb250ZW50IHRoYXQgeW91IGtub3cgd2lsbCBnZXQgdm90ZXMuIElmIGl0IGdldHMgdm90ZXMsIHRoZSBjb21tdW5pdHkgbXVzdCBiZSBzYXlpbmcgdGhpcyBpcyBmdW5ueSBhbmQgb24gdG9waWMsIHJpZ2h0PwpJbiBQZXJ0aCB0aGVyZSBpcyBhbHNvIGEgcmVhbGx5IGdvb2QgcHViIHBva2VyIHNjZW5lLCB3aXRoIHNldmVyYWwgcHJvdmlkZXJzIChwZXJ0aCBwb2tlciBsZWF1Z2UsIEF1c3RyYWxpYW4gUG9rZXIgTGVhdWdlLCBXb3JsZCBQb2tlciBUb3VyLCBTaGFyayBQb2tlciwgV2VzdGVybiBBdXN0cmFsaWEgUG9rZXIgTGVhdWdlIGFuZCBXeW5uZXJzIFBva2VyKS4gQWxsIG9mIHRoZXNlIHByb3ZpZGVycyBydW4gYSBmZXcgZ2FtZXMgZXZlcnkgd2Vlaywgd2l0aCB0b3VybmFtZW50cyAoc2VsZiBkZWFsdCwgZGVhbGVycyBvbmx5IG9uIGNhc2ggdGFibGUpIHJhbmdpbmcgZnJvbSAkNDAgJDYwIGVudHJ5ICh1bmxlc3Mgc3BlY2lhbCBvY2Nhc2lvbiksIGFuZCBjYXNoIGdhbWVzIG9mICQxLyQzICgkMzAwIG1heCkuLiAKV2hlbiB3ZSB3ZXJlIGFza2VkIHRvIHdyaXRlIGEgbGl0dGxlIHN0b3J5IHRoYXQgaW5jbHVkZWQgdGhlIDgzIEluY2ggUGVkZXN0YWwgUG9rZXIgVGFibGUgd2l0aCBEZWFsZXIgU3BvdCwgdGhlIGZpcnN0IHRoaW5nIHdlIHRob3VnaHQgYWJvdXQgd2FzIEpvcmRhbidzIGdyYWR1YXRpb24uIAogMjggcG9pbnRzICBzdWJtaXR0ZWQgMjQgZGF5cyBhZ29BdCB0aGUgY3VycmVudCBsZXZlbD8gTm8gYnV0IFNDMiBpcyBhbG9uZSB3aXRoIG9ubHkgQ1M6R08gYXMgZ2FtZXMgdGhhdCBnZXQgYSBzaWduaWZpY2FudCBwb3J0aW9ucyBvZiB0aGVpciBwcml6ZSBtb25leSBmcm9tIGNvbW11bml0eSB0b3VybmFtZW50cy4gSSB3cm90ZSBpbiB0d28gZGlmZmVyZW50IHBpZWNlcyB0aGF0IFNDMiBnZXRzIGFib3V0IDEvMyBvZiBwcml6ZSBtb25leSBmcm9tIHRvdXJuYW1lbnRzIHRoYXQgYXJlbiBzcG9uc29yZWQgb3Igc3VwcG9ydGVkIGJ5IEJsaXp6YXJkLiAKSSB3YW50ZWQgdGhhdCBwZXJzb24gYmFjayB0aGF0IEkgd2FzIGJlZm9yZSBteSBzdXJnZXJ5LiAKQ3VycmVudGx5LCBJIHdvcmtpbmcgdGhyb3VnaCB0d28gZ3JhbW1hcnMuIApUaGUgbmVpZ2hib3Job29kIG5lZWRzIHRvIGNvbnRpbnVlIHRvIGRlbnNpZnkgaWYgaXQgd2FudHMgdG8gbWFpbnRhaW4gYSBzZW1ibGFuY2Ugb2YgYWZmb3JkYWJsZSBob3VzaW5nIHN0b2NrLCBhbmQgdGhhdCBtZWFucyBhZGRyZXNzaW5nIHRoZSBzaW5nbGUgZmFtaWx5IGhvbWVzIGluIHRoZSBuZWlnaGJvcmhvb2QgbmV4dC4uIApEZXNwaXRlIGFsbCB0aG9zZSBjZW50dXJpZXMgbGF0Y2hlZCBvbnRvIHRoZSBpZGVhIG9mIHByb2dyZXNzIGV2ZW4gdGhvc2Ugd2hvIHNlZSB0aGVtc2VsdmVzIGFzICJwaW9uZWVycyIgc3RpbGwgY2xpbmcgb250byB0aGVpciBjb21mb3J0YWJsZSByZWdyZXNpdmUgd2F5cwpCdXQgd2h5IHdvdWxkIEkgbm90IHdhbnQgdG8gd2F0Y2ggdGhlIEZDQyAiZGV0ZXJtaW5lIHdoZXRoZXIgdGhlIHByaWNlIGNoYXJnZWQgYnkgYnJvYWRiYW5kIHByb3ZpZGVycyBhcmUgb3IgdW5yZWFzb25hYmxlLiAKSW4gYW4gaW50ZXJ2aWV3IHdpdGggdGhlIE9jYWxhIChGbGEuKSBTdGFyIEJhbm5lciBsYXN0IHllYXIsIGhlIGRlc2NyaWJlZCBob3cgaGUgaGFzIGZsb3duIDI1MCB0eXBlcyBvZiBwbGFuZXMgYW5kIGhhcyBhIHBhcnRpY3VsYXIgZm9uZG5lc3MgZm9yIHRoZSBQIDUxLCB3aGljaCBjYW1lIGludG8gdGhlIHdhciByZWxhdGl2ZWx5IGxhdGUgYW5kIHdhcyB1c2VkIGFzIGEgbG9uZyByYW5nZSBib21iZXIgZXNjb3J0IG92ZXIgRXVyb3BlLiBBbW9uZyB0aGUgZmFtb3VzIHBpbG90cyBvZiB0aGUgaG90IG5ldyBmaWdodGVyIHdhcyBXV0lJIGRvdWJsZSBhY2UgQ2h1Y2sgWWVhZ2VyLgpUaGUgYmlnZ2VyIHByb2JsZW0gaXMgdGhhdCB0d28gbWludXRlcyBvZiBicnVzaGluZyBpbiB0aGUgc2hvd2VyIHVzZXMgYWJvdXQgZml2ZSBnYWxsb25zIG9mIHdhdGVyLCB3aGVyZSB0d28gbWludXRlcyBvZiBtb2Rlc3QgZmF1Y2V0IHVzYWdlIChldmVuIGlmIHlvdSdyZSB0aGUgdHlwZSB3aG8gbGVhdmVzIGl0IHJ1bm5pbmcgdGhlIHdob2xlIHRpbWUpIG9ubHkgdXNlcyBhYm91dCB0d28gZ2FsbG9ucy4gWW91IGRvbid0IG5lZWQgYSBzcHJlYWRzaGVldCB0byB0ZWxsIHlvdSB3aGljaCBvbmUgc2F2ZXMgdGhlIG1vc3Qgd2F0ZXIuIApNdXNsaW0gYXR0YWNrZXJzIS4gClRlY2hub2xvZ3kgR29uZSBhcmUgdGhlIGRheXMgd2hlbiBsYXd5ZXJzIGFuZCBwYXJhbGVnYWxzIGNvbmR1Y3RlZCBsZWdhbCByZXNlYXJjaCBhdCBhIGJyaWNrIGFuZCBtb3J0YXIgbGF3IGxpYnJhcnkuIExlZ2FsIHNlY3JldGFyaWVzLCBsYXcgbGlicmFyaWFucyBhbmQgYWRtaW5pc3RyYXRpdmUgZW1wbG95ZWVzIG11c3QgYmUgcXVhbGlmaWVkIHRvIHVzZSB0ZWNobm9sb2d5IGZvciBwcm9jZXNzaW5nIGxlZ2FsIGRvY3VtZW50cywgY29uZHVjdGluZyByZXNlYXJjaCBhbmQgbWFuYWdpbmcgdGhlIGxhdyBmaXJtJ3Mgb3BlcmF0aW9ucy4gCkludGVybmF0aW9uYWwgV29tZW4ncyBEYXkgaXMgY2VsZWJyYXRlZCBpbiBtYW55IGNvdW50cmllcyBhcm91bmQgdGhlIHdvcmxkLiBJdCBpcyBhIGRheSB3aGVuIHdvbWVuIGFyZSByZWNvZ25pemVkIGZvciB0aGVpciBhY2hpZXZlbWVudHMgd2l0aG91dCByZWdhcmQgdG8gZGl2aXNpb25zLCB3aGV0aGVyIG5hdGlvbmFsLCBldGhuaWMsIGxpbmd1aXN0aWMsIGN1bHR1cmFsLCBlY29ub21pYyBvciBwb2xpdGljYWwuIApBbmQgdGhleSBiZWVuIHNpdHRpbmcgaW4geW91ciBjbG9zZXQgZm9yIGFib3V0IGFzIGxvbmcuIApBbmQgbm93LCBwcm9tb3Rpb25zIHRocm91Z2ggZSBtYWdhemluZXMsIHRlbGV2aXNpb24gYW5kIG90aGVyIGZvcm1zIG9mIGVsZWN0cm9uaWMgbWVkaWEgaGF2ZSBtYWRlIG9ubGluZSBwb2tlciBhIGhpZ2hseSBhY2NsYWltZWQgc3BvcnQgZ2xvYmFsbHkuLiAKV2hhdGV2ZXIsIHRoYXQncyBiZXNpZGVzIHRoZSBwb2ludC4gVGhpcyBnaXJsIHRoZW4gc3RhcnRzIHRhbGtpbmcgYWJvdXQgZ2V0dGluZyBpbnRvIGEgY2FyIGFjY2lkZW50IGFuZCAiaHVydGluZyBoZXIgdmFnaW5hIiBhbmQgaGVyICJ2YWdpbmEgd2FzIHNvIGJydWlzZWQgc2hlIGRpZG4ndCBldmVuIHJlY29nbml6ZSIgaGVyIG93biB2YWdpbmEgYWZ0ZXIgdGhlIGFjY2lkZW50LiAKV2hlbiB5b3UgaG9sZCB0aGVtIGluIGxvdmluZyBraW5kbmVzcyB5b3UgbWF5IHdhbnQgdG8gaW1hZ2luZSB3aG8gdGhleSBhcmUsIHdoZXJlIHRoZXkgYXJlIGZyb20sIHdoYXQgdGhlaXIgbGl2ZXMgbWlnaHQgYmUgbGlrZS4gVXNlIHdoaWNoZXZlciBtZXRob2Qgd29ya3MgYmVzdCBmb3IgeW91LiBJbWFnZXMsIHdvcmRzICgnbWF5IGhlIGJlIHdlbGwsIG1heSBoZSBiZSBoYXBweSwgbWF5IGhlIGxpdmUgaW4gcGVhY2UnKSBvciBmZWVsaW5ncy4gTGV0IGRpc3RyYWN0aW9ucyBldmFwb3JhdGUgYXdheSBsaWtlIHNpbGVudCBtaXN0LgpUaGUgSFJFIGlzIGp1c3QgR2VybWFueS4gCkxvdHRlcnkgcmVzdWx0cyBmb3IgQ29sb3JhZG8gbG90dGVyeSBnYW1lczogTWVnYSBNaWxsaW9ucywgUG93ZXJiYWxsLCBMb3R0bywgQ2FzaCA1IGFuZCAuICBUYXAgb24gSW5mbyBpY29uIHRvIHZpZXcgcGF5b3V0L3ByaXplIC4gQ2FsY3VsYXRvcig0NykgRG9jdW1lbnQoNjIpIFNjaGVkdWxlKDEyOCkgVG9vbCgyNzYpCk15IHBhaW4gd2VudCBmcm9tIGEgd2VpcmQgcGluY2hpbmcgZmVlbGluZyB0byBtZSBub3QgYmVpbmcgYWJsZSB0byBzaXQgaW4gdGhlIG1hdHRlciBvZiBhIGZldyBob3Vycy4gSSBrbmV3IHNvbWV0aGluZyB3YXNuJ3QgcmlnaHQuIApSYXRoZXIsIEkgc3VnZ2VzdCB0YWtpbmcgYSBidWxsZXQgdHJhaW4gdG8gQnVzYW4uIE9yIGJldHRlciB5ZXQsIHRha2Ugb25lIG9mIHRoZWlyIGNoZWFwIGZsaWdodHMgdG8gSmVqdSBJc2xhbmQuIEl0IG9uZSBvZiB0aGUgbW9zdCBicmVhdGggdGFraW5nIHBsYWNlIEkgYmVlbiB0byBpbiBteSBsaWZlIGFuZCB0aGVpciBncmVlbiB0ZWEgaWNlIGNyZWFtIGlzIG5vIGpva2UuIApUaGUgaW50ZW5zZSBzZXNzaW9ucyBtZWFudCBzaGUgY291bGRuJ3QgcG9zc2libHkgc3RhcnZlIGhlciB3YXkgdGhpbiBhcyBzb21lIHJlcG9ydHMgc3VnZ2VzdC4gQmVzaWRlcywgdGhlIDUgZm9vdCAxMCByZWFsaXR5IHN0YXIgaGFzIGxvbmcgc2luY2UgYnJva2VuIHRoZSB5byB5byBjeWNsaW5nIG9mIGhlciB5b3V0aC4gIkRpZXRpbmcgaXMgZ3JlYXQgYnV0IGRpZXRpbmcgZG9lc24ndCB0eXBpY2FsbHkgY3JlYXRlIGxvbmcgbGFzdGluZyByZXN1bHRzLCIgc2hlJ3MgZXhwbGFpbmVkLiBJbnN0ZWFkLCBzaGUgcmVsaWVkIG9uIGEgcHJvdGVpbiBoZWF2eSBtZW51IG9mIGVnZ3MsIG9hdG1lYWwsIGdyaWxsZWQgY2hpY2tlbiwgZmlzaCBhbmQgdmVnZXRhYmxlcyB0byBrZWVwIGhlciBmdWVsZWQgZm9yIHRoZSBneW0sIGEgcGxhY2Ugc2hlJ3MgY2FsbGVkIGhlciAic2FuY3R1YXJ5LiIKU2lnbiB1cCBhbmQgc3RhcnQgYmV0dGluZyB3aXRoIFRpdGFuIEJldCBhbmQgeW91IHdpbGwgYmUgbWFraW5nIHlvdXIgZmlyc3Qgc3RlcCB0b3dhcmRzIGdldHRpbmcgeW91ciBmcmVlIGJldC4gQWZ0ZXJ3YXJkcyB5b3Ugd2lsbCBuZWVkIHRvIHBsYWNlIDUgYmV0cyBhdCBvZGRzIG9mIDIuMCBvciBtb3JlIGluIHRoZSBhbW91bnQgb2YgMTAgZWFjaCBhbmQgeW91IHdpbGwgYmUgZ2l2ZW4gMTAgaW4gdGhlIGZvcm0gb2YgYSBmcmVlIGJldC4gWW91IGNhbiB1c2UgdGhlIGZyZWUgYmV0IGhvd2V2ZXIgeW91IHdhbnQuCkRyb3BobGl4IHUKRnJhbmtsaW4gYW5kIE1hcnNoYWxsIHRoZSBjb21wYW55IHdhcyBmb3VuZGVkIGJ5IGEgcGFpciBvZiBlbnRyZXByZW5ldXJzIGluIFZlcm9uYSBpbiAxOTk5LCBtb3JlIHRoYW4gMjAwIHllYXJzIGFmdGVyIEZyYW5rbGluIE1hcnNoYWxsIHRoZSBjb2xsZWdlIHdhcyBmb3VuZGVkIGluIExhbmNhc3RlciBieSBhIGdpZnQgZnJvbSBCZW5qYW1pbiBGcmFua2xpbi4KVGhlIHRlY2hub2xvZ3kgYWNxdWlyZXMgYnJhaW4gc2lnbmFscyB0aHJvdWdoIGFuIGltcGxhbnRlZCwgOTYgY2hhbm5lbCBlbGVjdHJvZGUgYXJyYXkuIEVhY2ggY2hhbm5lbCBkZXRlY3RzIHZvbHRhZ2UgdGhhdCBpcyBjb250aW51b3VzbHkgZ2VuZXJhdGVkIGZyb20gYWN0aXZlIG5ldXJvbnMgaW4gaXRzIG5laWdoYm9yaG9vZC4gVGhlIHNhbXBsaW5nIHJhdGUgaXMgMzBrSHo7IHRoaXMgbWVhbnMgdGhhdCB0aGUgbnVtYmVyIG9mIHZvbHRhZ2UgbWVhc3VyZW1lbnRzIHRoYXQgd2UgY29sbGVjdCBpcyAzMCwwMDAgcGVyIHNlY29uZCBhbmQgdGhpcyBzdHJlYW1zIGNvbnRpbnVvdXNseSBpbiByZWFsIHRpbWUgd2hpbGUgSWFuIHVzZXMgdGhlIHN5c3RlbS4gV2UgaGF2ZSB0byB1c2Ugc2lnbmFsIHByb2Nlc3NpbmcgbWV0aG9kcyB0byBtYXRoZW1hdGljYWxseSB0cmFuc2xhdGUgdGhlICJyYXciIHZvbHRhZ2UgZGF0YSBpbnRvIG5vcm1hbGl6ZWQgcmVzcG9uc2UgaW50ZW5zaXR5IHRoYXQgd2UgY2FuIHVzZSBhcyBuZXVyYWwgZmVhdHVyZXMgZm9yIG91ciBtYWNoaW5lIGxlYXJuaW5nIGRlY29kZXIgYWxnb3JpdGhtcy4gQW5kIHRoZSBldmVudHVhbCBpbnRlbnQgaXMgdG8gcmVtb3ZlIGl0IHdoZW4gaXQgaXMgbm8gbG9uZ2VyIGZ1bmN0aW9uYWwgKG9yIHNvbWV0aGluZyBiZXR0ZXIgY29tZXMgYWxvbmcpLiBJdCBhY3RzIGFzIGEgbWljcm9waG9uZSB0byBsaXN0ZW4gdG8gbG9jYWwgbmV1cmFsIGFjdGl2aXR5LiBJdCBkb2Vzbid0IGNhcnJ5IHNpZ25hbHMgZnJvbSBvbmUgbmV1cm9uIHRvIGFub3RoZXIsIGFsdGhvdWdoIG90aGVycyBhcmUgd29ya2luZyBvbiBuZXcgdGVjaG5vbG9neSB0byBkbyB0aGF0IChwYXJ0aWN1bGFybHkgZm9yIG1lbW9yeSBlbmhhbmNlbWVudCkuClVudGlsIG5vdywgaXQgd2FzIGFsd2F5cyBqdXN0IGluIHRoZSBiYWNrZ3JvdW5kLiAKTWF5IEkgaGF2ZSB0aGUgbG90dGVyeSBudW1iZXIgZm9yIG5leHQgd2VlaywgcGxlYXNlPyBZb3Ugc2VlbSB0byBiZSBzb21lIHNvcnQgb2YgY2xhaXJ2b3lhbnQuCkZvciBleGFtcGxlLCBtZW4gYXJlIHRvbGQgImRvbid0IHN0aWNrIHlvdXIgZGljayBpbiBjcmF6eSIuIExpa2Ugb2sgaXQncyBmdW5ueSBhbmQga2luZGEgZ29vZCBhZHZpY2UgYnV0IHRoaW5rIGFib3V0IGl0LiBZb3Ugd291bGRuJ3QgdGVsbCBhIHdvbWFuICJkb24ndCBkYXRlIGFnZ3Jlc3NpdmUgZ3V5cyIgYmVjYXVzZSB0aGF0J3MgYmFzaWNhbGx5IHZpY3RpbSBibGFtaW5nLiAKWW91IGNhbiBhbHdheXMgYXNrIGZvciBhIGJsYW5rZXQgb3IgdG8gdHVybiBvdmVyIChiZSBmYWNlIGRvd24pIGlmIHlvdSBlbWJhcnJhc3NlZCBhbmQgd2FudCB0byBoaWRlIGl0LiBZb3UgY2FuIGFsc28gYXNrIHRoZSB0aGVyYXBpc3QgdG8gbW92ZSB0byBhbm90aGVyIGFyZWEgKGlmIHRoYXQgcGFydCBvZiB0aGUgcHJvYmxlbSkgb3IgdG8gdGFrZSB0aGVpciBoYW5kcyBvZmYgZm9yIGEgbWludXRlLgpFcmlrYSBCZW5uZXR0LCAzNywgaXMgcGFzc2lvbmF0ZSBhYm91dCB0aGUgYXV0aGVudGljIHJlcHJlc2VudGF0aW9uIG9mIHBlb3BsZSBvZiBjb2xvciBpbiBmaWxtIGFuZCBUVi4gT3ZlciB0aGUgcGFzdCBzaXggeWVhcnMsIEJlbm5ldHQgaGFzIGJlZW4gaGVscGluZyBkaXZlcnNpZnkgdGhhdCBwb29sIGluIHZhcmlvdXMgd2F5cy4gCldFU1RHUk9WRSBIT1RFTCBBTkQgQ09ORkVSRU5DRSBDRU5UUkUgQ2xhbmUKV2l0aCBpdHMgdmlicmFudCBuaWdodGxpZmUsIGZpbmUgZGluaW5nIGFuZCBsdXh1cnkgYmVhY2hmcm9udCBob3RlbHMsIE1pYW1pIGlzIGVhc2lseSBhbW9uZyB0aGUgYmVzdCBhbmQgbW9zdCBwb3B1bGFyIHZhY2F0aW9uIGRlc3RpbmF0aW9ucyBhbG9uZyB0aGUgQXRsYW50aWMgQ29hc3QuIApBbGxtYW4gd2FzIGFic2VudCBNb25kYXkgZnJvbSBoaXMgc2hvdyBvbiBLRlRLIEZNLiBBbiBFbW1pcyBDb21tdW5pY2F0aW9ucyBzcG9rZXN3b21hbiBzYWlkIGluIGFuIGVtYWlsIHRoYXQgaXQgY2xvc2VkIGxhc3QgbW9udGggb24gdGhlIHNhbGUgb2YgdGhlIHN0YXRpb24gdG8gRW50ZXJjb20uCihXZSBrbm93IGl0J3MgcHJpY2V5LCBidXQgbG9vayBhdCB0aGUgcXVhbGl0eSEpIiBhcmUgYXdhcmUgdGhhdCBpdCBpc24ndCBhIGNoZWFwIGJvb2suIApTaGUganVzdCBzYWlkIHBheSBpdCBvZmYgYW5kIHRoZSBob3VzZSBpcyB5b3Vycy4gCkFuZCB0aGF0IHdhcyBpbGxlZ2FsLiBJIGNyb3NzZWQgdGhlIGxpbmUgYXQgdGhhdCBwb2ludCwgd2hpY2ggd2FzIGEgdGVycmlibGUgZGVjaXNpb24uIApBbmQgYXMgbXVjaCBhcyBJIGhvcGUgZm9yIGEgdmlhYmxlIHRoaXJkIHBhcnR5IHNvbWUgZGF5IGl0IGp1c3QgZG9lc24ndCBleGlzdCByaWdodCBub3csIGFuZCB2b3RpbmcgZ3JlZW4gb3IgbGliZXJ0YXJpYW4gb3Igd2hhdGV2ZXIgd3JpdGUgaW4gY2FuZGlkYXRlIGluIDIwMjAgd2lsbCBub3QgY2hhbmdlIHRoYXQuIFRoZSBudW1iZXJzIGFyZW4ndCB0aGVyZS4gSWYgdGhleSBhcmUgY29tZSAyMDIwIG1heWJlIEknZCBjaGFuZ2UgbXkgdHVuZS4gCldoaWNoIGlzIHN0aWxsIGEgam9rZSBmb3IgZXNzZW50aWFsbHkgbm90aGluZywgYnV0IGkgY2FuIHN3YWxsb3cgdGhhdC4gVGhleSBmdWNraW5nIHRlc3RlZCBtZSBmb3Igcmlja2V0cyBiZWZvcmUgbW9uby4gRnVja2luZyByaWNrZXRzPz8/PyBOZXZlciBnb2luZyBiYWNrIHRvIHRoYXQgaG9zcGl0YWwuLiAKR3JlZW4gc2FpZCB0aGUgZnVuZCwgd2hpY2ggY2hhcmdlcyBhIDAuOSBwZXIgY2VudCBmZWUsIGlzIG1lYW50IHRvIGRhbXBlbiB2b2xhdGlsaXR5IHdoZW4gY29tYmluZWQgd2l0aCB0cmFkaXRpb25hbCBwb3J0Zm9saW9zLCBidXQgd291bGRuIGdvIGFzIGZhciBhcyBjYWxsaW5nIGl0IGxvdyByaXNrLiBUaGUgZnVuZCBpc24gbWVhbnQgdG8gYmUgaW52ZXN0ZWQgaW4gYWxvbmUsIGhlIHNhaWQuIEluc3RlYWQsIGxpa2UgbWFueSBsaXF1aWQgYWx0cywgaXQgc3VwcG9zZWQgdG8gb25lIHBpZWNlIG9mIHRoZSBwdXp6bGUuCkkgd2FzIG5ldmVyIGtpY2tlZCBpbiB0aGUgbGFkeSBqZXdlbHMsIGJ1dCBJIGRpZCBzbGlwIG9mZiB0aGUgYm9hdCBkaXZpbmcgaW50byB0aGUgd2F0ZXIgYW5kIGN1dCBteSBsYWJpYSB1cCBwcmV0dHkgYmFkIG9uY2UuIEFuZCBJIGxhbmRlZCBvbiBpdCBzZXZlcmFsIHRpbWVzIGp1c3QgaG9yc2luZyBhcm91bmQgKG5vdCBldmVuIHNleHkgdGltZXMsIGp1c3QgbGlrZSBwbGF5aW5nIG9uIHRoZSBwbGF5Z3JvdW5kIGFzIGEga2lkKSBIdXJ0cyBsaWtlIGEgYml0Y2guIEkgdGhpbmsgd29tZW4gdW5kZXJlc3RpbWF0ZSBob3cgbXVjaCBpdCBodXJ0cywgYW5kIHRoZW4gd2hlbiB0aGV5IGRvIHRoZSBzaG9jayB0aGF0IGl0IGFjdHVhbGx5IGh1cnRzIHByb2JhYmx5IGp1c3QgYXMgbXVjaCBhcyBhIGd1eSBnZXR0aW5nIGtpY2tlZCBpbiB0aGUgbnV0cyBpcyBlbm91Z2ggdG8gdGFrZSB5b3UgZG93bi4gCkZpcnN0LCB0aGV5IGFjdHVhbGx5IGdvdCBhIGd1eSB0byBkbyBTaGF0bmVyJ3Mgdm9pY2Ugd2hvIGFjdHVhbGx5IHNvdW5kcyBhIGdvb2QgZGVhbCBsaWtlIGhpbS4gRXhjZXB0LCB5b3Uga25vdywgZnJlbmNoLiAKT29kYWxvbGx5T29kYWxvbGx5IE5UQSB0aGVyZSBpcyBzb21ldGhpbmcgZGVlcGx5IHdyb25nIHdpdGggeW91ciBleC4gV2hhdCB0aGUgMTcgeWVhciBvbGQgZGlkIGFuZCB3aGF0IHRoZSA2IHllYXIgb2xkIGRpZCBhcmUgbm90IGV2ZW4gY2xvc2UgdG8gYmVpbmcgdGhlIHNhbWUgdGhpbmcgQVQgQUxMLiBBbmQgaXQncyB3ZWlyZGx5IHNleHVhbGl6aW5nIGNoaWxkcmVuIGlmIHlvdSB0aGluayBpdCBpcy4gCkJ1dCB0aGUgcGljdHVyZSBhbmQgZGlzY3Vzc2lvbiB3YXMgYWJvdXQgcGVvcGxlIHdobyByZWZlciB0byB0aGVtc2VsdmVzIGFzIHBybyBsaWZlcnMuIApUaGUgZGVhbGVyIGJlZ2lucyB0byBkZWFsIGNhcmRzIHN0YXJ0aW5nIHdpdGggdGhlIHBsYXllciBvbiBoaXMgbGVmdC4gCkkgd2FzIGluIGEgbWV0YSBnYW1lIHJhaXNpbmcgd2FyIHdpdGggc29tZSBkcnVuayBtb3JvbiB5ZWFycyBhZ28gYXQgYSAkMS8yIHRhYmxlIHdpdGggZWZmZWN0aXZlIHN0YWNrcyBhdCBhcm91bmQgJDI1MCAgIEhlIHdhcyBtaW4gMyBiZXR0aW5nIGFuZCB0aGVuIGZvbGRpbmcgdG8gamFtcy4gSGUgb3BlbnMgVVRHIHRvICQ3IGFuZCBJIHJhaXNlZCB3aXRoIDEwcyB0byAkMjQgYW5kIGhlIG1pbiByYWlzZWQgdG8gJDUwIGFuZCBJIHNoaXAgaXQgaW4gZXhwZWN0IHNhbWUgcmVzdWx0LiAKUm9iaWxsYXJkMTE1MiAgNyBwb2ludHMgIHN1Ym1pdHRlZCA4IGRheXMgYWdvCk15IGdpcmxmcmllbmQgbGl2ZXMgZG93biB0aGVyZSAoaG9wZWZ1bGx5IGkgd2lsbCB0b28sIHNvb24pIGFuZCBzaGUgdHJpZWQgZm9yIGRheXMgYW5kIGRheXMgdG8gZ2V0IGhlciBtb20gdG8gbGVhdmUuIApUaGUgZmlyc3Qgc3BlbGwgTWVybGUgY2FzdCBpbiB0aGUgU3VmZmVyaW5nIEdhbWUgYXJjIHdhcyBtaW5vcmx5IHdlYWtlbmVkIChoZWFsIG9mIDIxIHdlYWtlbmVkIHRvIDE5IG91dCBpbiB0aGUgRmVsaWNpdHkgV2lsZHMpLiBJdCB3YXNuIHVudGlsIHRoZSBlbmQgb2YgdGhlIGFyYyBhbmQgdGhlIGJlZ2lubmluZyBvZiB0aGUgcmV1bmlvbiB0b3VyIHRoYXQgaGlzIHBvd2VycyB3ZXJlIHRlbXBvcmFyaWx5IGN1dCBvZmYudXJ1dGFwdSAgNSBwb2ludHMgIHN1Ym1pdHRlZCAxMCBkYXlzIGFnb0kgcmVhbGx5IGFtIGVuam95aW5nIHRoZSBzdG9yeSwgYnV0IGluIGFjdGlvbiBzY2VuZXMgdGhlcmUgbm8gbW9tZW50dW0gYXQgYWxsLiAKVGltbW9ucywgbmVlZGluZyBvbmx5IGNoYW5nZSwgc2F3IHRoZSBjYXNoIHJlZ2lzdGVyIGFuZCB0aGUgY2hlY2tvdXQgY291bnRlciB0byBoaXMgbGVmdC4gSGUgYXBwcm9hY2hlZCB0aGUgY291bnRlciBhbmQgd2FpdGVkIGZvciB0aGUgY2xlcmsuIFRoZXJlIHdhcyBub25lIGluIHNpZ2h0LiAKRG93bmxvYWQgdGhlIGxhdGVzdCB2ZXJzaW9uIG9mIHRoZSB0b3Agc29mdHdhcmUsIGdhbWVzLCBwcm9ncmFtcyBhbmQgYXBwcyBpbiAyMDE4LiA1LjkgKDc4MzcpLiBNaWNyb3NvZnQgV29yZCAyMDEwIGlzIGEgZG9jdW1lbnQgZWRpdGluZyBzb2Z0d2FyZSwgaWRlYWwgZm9yIHN0dWRlbnRzIGFuZCAuIApUYWtlbiBvdXQgYSBEZW0gUHJlc2lkZW50IHdpdGggUmVwdWJsaWNhbiBDb25ncmVzcy4gSXQncyBzaWNrZW5pbmcgeW91IGNhbid0IHNlZSBpdCBldmVuIGEgbGl0dGxlLi4gClBsYW4geW91ciBjZWxlYnJhdGlvbi4gQSBmZXcgd2Vla3Mgb3IgZGF5cyBiZWZvcmUgeW91ciBhbm5pdmVyc2FyeSwgaXQgd2lsbCByZWFsbHkgYmUgaGVscGZ1bCBmb3IgeW91IGlmIHlvdSBnbyBhbmQgcGxhbiB3aGF0IHlvdSBhcmUgZ29pbmcgdG8gZG8gYWhlYWQgb2YgdGltZS4gUmVzZXJ2ZSBzb21lIHRpY2tldHMgdG8gdGhlIGV2ZW50cyB0aGF0IHlvdSB3b3VsZCBsaWtlIHRvIGF0dGVuZCwgY2FsbCBpbiBhbmQgcmVzZXJ2ZSBzZWF0cyBhdCB5b3VyIGZhdm9yaXRlIHJlc3RhdXJhbnQsIGV0Yy4gTWFrZSBhIGRyYWZ0IG9mIHRoZSB0aGluZ3MgdGhhdCB5b3UgcGxhbiB0byBkbyB3aGVuIHRoZSBkYXkgY29tZXMuCkhlcmUgdGhlIGZlZWRiYWNrIHRocmVhZCB3ZSByYW4gZm9yIHRoaXMgcm91bmQgdm90ZSB0aGUgb3B0aW9ucyBmb3IgdGhlIHBvbGwgY2FtZSBmcm9tIHRoYXQgdGhyZWFkIUkgZmVsdCBsaWtlIHRoaXMgdm90aW5nIHNob3VsZCBoYXZlIGJlZW4gaGVsZCBhZnRlciB0aGUgR2VuZXJhdGlvbiA4IGdhbWVzIHdlcmUgYW5ub3VuY2VkIHdoZW4gbW9yZSBwZW9wbGUgYXJlIHZpc2l0aW5nIGFuZCBwYXlpbmcgYXR0ZW50aW9uLiBSaWdodCBub3cgd2UgaW4gYSBkcm91Z2h0IGFuZCB0aGUgc3ViIHZpc2l0cyB2cyBzdWJzY3JpYmVycyBudW1iZXJzIHNob3cgdGhhdC5UaGUgcmVhc29uIHdlIGRpZCBpdCB3aGVuIHdlIGRpZCB3YXMgdG8gdHJ5IGFuZCBlc3RhYmxpc2ggYSBwYXR0ZXJuIHdpdGggcHJldmlvdXMgeWVhcnMsIHdoZW4gd2UgaGVsZCB2b3RlcyBpbiBtaWR3aW50ZXIuIApJdCdzIHRha2VuIG1lIGEgY291cGxlIG9mIGRheXMgdG8gZmlndXJlIG91dCBob3cgdG8gd3JpdGUgdGhpcy4gTXkgZGVhciBmcmllbmQgb2YgMjkgeWVhcnMsIEx1a2UgUGVycnksIHdhcyBvbmUgb2YgdGhvc2UgdHJ1bHkgc3BlY2lhbCBwZW9wbGUgd2hvIHJlYWxseSBjYXJlZC4gTHVrZSB3YXMgbm90IG9ubHkgYSBzdGFyLCBoZSB3YXMgYW4gaW5jcmVkaWJseSBicmlnaHQgbGlnaHQgdGhhdCB3YXMgZXh0aW5ndWlzaGVkIGZhciB0b28gc29vbi4gYW5kIHRoYXQgaXMgd2h5IEksIGFuZCBzbyBtYW55IG90aGVycywgYXJlIGluIHNvIG11Y2ggcGFpbiB0b2RheS4gSWYgeW91IGhhZCB0aGUgZ29vZCBmb3J0dW5lIHRvIGtub3cgTHVrZSwgb3IgdG8gaGF2ZSBldmVyIGNyb3NzZWQgaGlzIHBhdGgsIEkga25vdyB5b3UgYXJlIHNhZCB0b2RheSBhcyB3ZWxsLiB0aGUgY2FuZGxlIHRoYXQgYnVybnMgdHdpY2UgYXMgYnJpZ2h0IG9ubHkgYnVybnMgZm9yIGhhbGYgYXMgbG9uZy4geW91IGJ1cm5lZCBvaCwgc28gYnJpZ2h0bHkgTHVrZS4gR29vZG5pZ2h0IFN3ZWV0IFByaW5jZS4KWW91IGNhbiBleHBlY3QgeW91ciBodXNiYW5kIHRvIGtub3cgYW5kIGRvIGV2ZXJ5dGhpbmcgZm9yIHlvdS4gSSB0aG91Z2h0IHlvdSB3b3VsZCBoYXZlIGxlYXJuZWQgdG8gdXNlIHlvdXIgd29yZHMuIApNYWtlIHN1cmUgdGhhdCB5b3UgaG9sZCB0aGUgcmF6b3IgaW4gYSB2ZXJ0aWNhbCBwb3NpdGlvbiwgYWRqYWNlbnQgdG8geW91ciBmYWNlLiBUcmltIHdpdGggYSBkb3dud2FyZCBtb3Rpb24sIHN0YXJ0aW5nIGZyb20gdGhlIHRvcC4uIApBZnRlciB0aGUgZmxvcCwgdGhlcmUgaXMgJDUwIGluIHRoZSBwb3QuIFRoZSBmaXJzdCBwbGF5ZXIgcmFpc2VzICQxMC4KV2UgZHJpbmsgbW9yZSBhbmQgc29tZXRpbWVzIGRvIGl0IGluIHB1YmxpYywgcHJldGVuZGluZyBpdCBsZWdhbCwgd2hpbGUgY29wcyBwcmV0ZW5kIG5vdCB0byBzZWUuV2UgZHJpdmUgY2hhb3RpY2FsbHksIG1ha2luZyBVIHR1cm5zIGluc3RlYWQgb2YgcmlnaHQgdHVybnMgb24gcmVkcy4gV2UgYXJlIGZhciBmcm9tIHB1cml0YW5pY2FsIHdoZW4gaXQgY29tZXMgdG8gYmVoYXZpb3VyLkFzIHdlbGwsIGFjY29yZGluZyB0byBDcmFja2luZyB0aGUgUXVlYmVjIENvZGUgYnkgcG9sbHN0ZXIgSmVhbiBNYXJjIEwgb25lIG9mIFF1ZWJlYyBkaXN0aW5jdCB0cmFpdHMgaXMgdGhhdCB3ZSBhcmUgbm9uIGNvbW1pdHRhbCwgaW5kZWNpc2l2ZSBhbmQgYXZlcnNlIHRvIHN0cm9uZyBwb3NpdGlvbnMgYW5kIGFsbCBJIGNhbiBzYXkgdG8gdGhhdCBpcyB1aCBtYXliZSBpdCB0cnVlLlNvIGl0IHVuc3VycHJpc2luZyBtb3N0IFF1ZWJlY2VycyB0aGluayBUcnVkZWF1IGFuZCBjb21wYW55IG1heSBoYXZlIHN0ZXBwZWQgc2V2ZXJhbCBjZW50aW1ldHJlcyBvdmVyIHRoZSBsaW5lIGluIHRhbGtpbmcgdG8gV2lsc29uIFJheWJvdWxkLCB5ZXQgYWxzbyB0aGluayB0aGF0IGEgbWlub3IgcG9saXRpY2FsIG9mZmVuY2UsIG5vdCBhIGhhbmdpbmcgb25lLlNpbWlsYXJseSwgd2hpbGUgbWFqb3IgY29sdW1uaXN0cyBpbiBPbnRhcmlvIHNheSBUcnVkZWF1IGFuZCBoaXMgc3RhZmYgcmVjZW50IGV4cGxhbmF0aW9ucyBhcmUgZmxpbXN5LCBvciBjcm9jaywgd2hpbGUgV2lsc29uIFJheWJvdWxkIGlzIHRoZSBvbmx5IHRydXRoIHRlbGxlciwgbW9zdCBjb2x1bW5pc3RzIGhlcmUgc2F5IGl0IHBvc3NpYmxlIGJvdGggc2lkZXMgYmVsaWV2ZSB0aGVpciBvd24gdmVyc2lvbi5JZiB5b3UgZXZlciBiZWVuIG1hcnJpZWQgZXIsIHNvcnJ5LCBRdWViZWNlcnMsIGxpdmVkIGNvbW1vbiBsYXcgeW91IGtub3cgeW91IGNhbiBoYXZlIHRoZSBzYW1lIGNvbnZlcnNhdGlvbiBhbmQgcmVtZW1iZXIgdGhpbmdzIHZlcnkgZGlmZmVyZW50bHkuV2FpdCBhIG1pbnV0ZSwgdGhhdCBub3Qgd2hhdCBJIHNhaWQgbGFzdCBtb250aCwgdGhhdCB3aGF0IFlPVSBzYWlkIUhhaCEgVGhhdCBleGFjdGx5IHdoYXQgeW91IGFsd2F5cyBzYXkgd2hlbiBJIHNheSB0aGF0IHdoYXQgeW91IHNhaWQuSSBuZXZlciB0aG91Z2h0IFRydWRlYXUgd2FzIHRoZSBHb2xkZW4gQm95IG11Y2ggb2YgQ2FuYWRhIGFuZCB0aGUgd29ybGQgZGlkIHdoZW4gaXQgY2FtZSB0byB0cmFuc3BhcmVuY3kgYW5kIHJldm9sdXRpb25pemluZyBwb2xpdGljcywgc28gSSBub3QgYW5ncnkgb3IgaHVydCB0byBzZWUgaGUganVzdCBhIHBvbGl0aWNpYW4uU2ltaWxhcmx5LCBJIGJlbGlldmUgV2lsc29uIFJheWJvdWxkIGlzIGEgaGlnaGx5IGNhcGFibGUsIGhvbm91cmFibGUgcGVyc29uIHdobyBxdWl0IGEgcG93ZXJmdWwgam9iIG91dCBvZiBwcmluY2lwbGUuIEkgaGF2ZSBncmVhdCByZXNwZWN0IGZvciBoZXIgaW4gYSB3b3JsZCB3aGVyZSBwZW9wbGUgcm91dGluZWx5IHNhY3JpZmljZSBwcmluY2lwbGVzIHRvIGNsaW5nIHRvIGNhcmVlcnMuQnV0IEkgZG9uIG5lY2Vzc2FyaWx5IHNoYXJlIHRoZSBwdXJpdHkgb2YgaGVyIHByaW5jaXBsZXMuIApHdXRzeSBwb2tlciBwbGF5ZXIgd2lucyAxNjIgbWlsbGlvbiBjaGlwcyB3aXRoIHRoZSBtb3N0IGNyYXp5ClRoZSBrYWJ1a2kgcGxheSBvbiBDYXBpdG9sIEhpbGwKSGFtaWx0b24gaW5zaXN0cyBhbGwgdGhhdCBkb2VzbiBodXJ0LiBkb2VzbiBhZmZlY3QgbWUsIHRvIGJlIGhvbmVzdCwgYnV0IGlmIEF5cnRvbiB3YXMgYXJvdW5kIGFuZCBoZSBzYWlkIGl0LCB0aGVuIEkgYmUgZGVlcGx5IGFmZmVjdGVkLiBXaGF0IGhlIGRpZCBhbmQgc2FpZCBoYXMgaHVnZSBtZWFuaW5nIGZvciBtZS4gUGVvcGxlIGRvIGZvcmdldCB0aGUgZ29vZCB0aGluZ3MgeW91IGRvLiBJIGRpZCBnb29kIHRoaW5ncyBpbiAyMDA3IGFnYWluc3QgRmVybmFuZG8uIEl0IGVhc3kgdG8gZm9yZ2V0LgpJZiB5b3UnZCByYXRoZXIgbGVhcm4gdGhlIGdhbWUgd2l0aG91dCBpbnZlc3RpbmcgaW4geW91ciBvd24gc2V0IG9mIHRpbGVzLCBkb3dubG9hZCBhIHBhaSBnb3cgYXBwIG9yIHBsYXkgb25saW5lIGluc3RlYWQuIFlvdSBjYW4gYWxzbyBjaGVjayBpZiB5b3VyIGxvY2FsIGNhc2lubyBoYXMgcGFpIGdvdyB0YWJsZXMgeW91IGNhbiBwbGF5IGF0LgpCb2tlcCBkaSB3YXJuZXQgMzYuIGJva2VwIHdhcm5ldCAzNy4gZG93bmxvYWQgYm9rZXAgbWVzdW0gd2FybmV0IDM4LiBTZWFyY2ggOiBib2tlcCBvbmxpbmUgbmdlbnRvdCBkaSBzdW5nYWksIGJva2VwIGFuaXMgb25saW5lLCBpbnRpcCAzZ3AsIGJva2VwIC4gYm9rZXAgbWFsYXkgdHVkdW5nIG1hc3R1cmJhc2ksIGRvd25sb3QgdmlkZW8gYm9rZXAgZGl3YXJuZXQsIGJva2VwIGFuaXMgbmFkdXJhLCAuIExvb2sgQ2V3ZWsgS2V0YWh1YW4gTWFzdHVyYmFzaSBEaSBXYXJuZXQgaGFyZCBwb3JuIENld2VrIEtldGFodWFuIE1hc3R1cmJhc2kgLiAKSSBrbm93IHlvdSBwb3N0ZWQgYXdoaWxlIGFnbyBzbyBJIGRvbiBrbm93IGlmIHlvdSBldmVuIHNlZSB0aGlzLCBidXQgSSB3YW50ZWQgdG8gc2hhcmUgYSBmZXcgY29udGV4dHVhbCB0aGluZ3MgdGhhdCBjb3VsZCBiZSBoZWxwZnVsOgpCdXQgYXMgbG9uZyBhcyB5b3UgZ290IHNvbWUgdGltZXMgdGhhdCBnbyB0b2dldGhlciB5b3UgYmUgZ29sZGVuLiBXaGF0IEkgdXNlIHRvIHRlbGwgbXkgY2xpZW50cyBpcyB0aGF0IHRoZXkgbmVlZCB0byBnZXQgdHdvIHdoaXRlIHNoaXJ0cyBhbmQgb25lIGJsdWUgc2hpcnQuIEdldCBhIGNvdXBsZSB0aWVzIHRoYXQgbWF0Y2ggYW5kIGEgcG9ja2V0IHNxdWFyZS4gCkV2ZW4ganVkZ2VzIHdlcmUga25vd24gdG8gYXQgdGltZXMgb3BpbmUgdG8gdGhlIGp1cnkgdGhhdCB0aGV5IGJlbGlldmVkIHRoZSBkdWVsIGhhZCBiZWVuIGZhaXIgYW5kIHByb3Blcmx5IGNvbmR1Y3RlZCwgZXZlbiB0aG91Z2ggaWxsZWdhbC4gCkkgaW4gbXkgbGF0ZSAyMHMgbm93LCBhbmQgSSBjYW5ub3Qgb3ZlcnN0YXRlIGhvdyBiYWRseSBncm93aW5nIHVwIGluIGEgaG91c2Vob2xkIHdoZXJlIGV2ZXJ5dGhpbmcgSSBkaWQgd2FzIHNjcnV0aW5pemVkLCB0b3JuIGFwYXJ0LCBhbmQgZm9yYmlkZGVuIGhhcyBmdWNrZWQgdXAgbXkgc2Vuc2Ugb2YgYm91bmRhcmllcy4gSSBkb24gc3BlYWsgdG8gbXkgbW90aGVyIGZvciBhbnl0aGluZyBtb3JlIHNpZ25pZmljYW50IHRoYW4gYSBoYXBweSBob2xpZGF5cyB0ZXh0LiBTaGUgZG9lc24gZ2V0IGFjY2VzcyB0byBteSBzb2NpYWwgbWVkaWEgYWNjb3VudHMgICBteSBwdWJsaWMgYWNjb3VudHMgYXJlIDEwMCUgcHJvZmVzc2lvbmFsIGFuZCBpbmZvcm1hdGlvbmFsLCBhbmQgYW55dGhpbmcgcGVyc29uYWwgaXMgbG9ja2VkIGF3YXkgd2hlcmUgc2hlIGhhcyBubyBjaGFuY2Ugb2Ygc2VlaW5nIGl0LiBBcyBmYXIgYXMgc2hlIGtub3dzLCBJIGhhdmUgbm8gcGVyc29uYWxpdHkuIE15IGxpa2VzLCBkaXNsaWtlcywgcGFzc2lvbnMsIGNsb3NlIGZyaWVuZHNoaXBzLCByZWxhdGlvbnNoaXBzICAgc2hlIGhhcyBubyBjb25jZXB0IG9mIGFueSBvZiBpdCwgYmVjYXVzZSBrbm93aW5nIG1lIGFzIGEgcGVyc29uIHdhcyBhIHByaXZpbGVnZSBzaGUgdGhyZXcgYXdheS4KSnVzdGljZSBIb3JraW5zIGZvdW5kIGZvciBzZXZlcmFsIHJlYXNvbnMsIHRoYXQgbm9uIGRpc2Nsb3N1cmUgb2YgdGhlIGNvbXBhbmllcyBkdXJpbmcgbWVkaWF0aW9uIHdhcyBub3Qgc2lnbmlmaWNhbnQsIGluY2x1ZGluZyBiZWNhdXNlIHRoZSBodXNiYW5kIGZhdGhlciwgYW5kIG5vdCB0aGUgaHVzYmFuZCwgY29udHJvbGxlZCB0aGUgY29tcGFuaWVzLiBEZXNwaXRlIHRoZSBzaXplIG9mIHRoZSBjYXBpdGFsIGRpdmlkZW5kLCBhcyBpdCB3YXMgYSBvbmUgdGltZSBwYXltZW50IHJlbGV2YW50IHRvIHN1cHBvcnQsIG1hZGUgd2hlbiB0aGUgaHVzYmFuZCB3YXMgYmVpbmcgc3VwcG9ydGVkIGJ5IGhpcyBmYW1pbHksIEhlciBIb25vdXIgYWxzbyBoZWxkIHRoYXQgdGhlIGRpdmlkZW5kIHdhcyBub3Qgc2lnbmlmaWNhbnQuLiAKSSBnb3QgYSBjaGFuY2UgdG8gY2F0Y2ggdGhlIEdlbmdhciB3aXRoIGEgd2hpdGUgcG9rZSBiYWxsLiBJdCBoYWQgMTQwMGlzaCBDUCwgbm90IGxpa2UgdGhlIHJlYWxseSBoaWdoIENQIG9uZSBJIGp1c3QgZm91Z2h0LiAKVGhlcmUgYSBzcGVjdHJ1bS4gCkRlbnNlIFJhbmRvbSBTY2FycmluZyBvZiBDb25uZWN0aXZlIFRpc3N1ZQpOb3RoaW5nIFN0b3BzIEhhdmVyaGlsbCBNYW4gRnJvbSBCdWlsZGluZyBQYXRyaW90cyBTaHJpbmUgSW4gSGlzIEdhcmFnZQpJdCdzIGZyb20gdGhlIGZpbG0gc291bmR0cmFjayBjYWxsZWQiQ29uZmVzc2lvbnMgb2YgYSBTaG9wYWhvbGljLiIgMjAgMzMpIEp1c3QgRGFuY2UvTG92ZWdhbWUvUGFwYXJhenppL1Bva2VyIEZhY2UvIEVoLEVoIChOb3RoaW5nIEVsc2UgSSBDYW4gRGF5KS9CZWF1dGlmdWwsIERpcnR5LCBSaWNoL1RoZSBGYW1lLyBNb25leUhvbmV5L1N0YXJzdHJ1Y2svQm95cyBCb3lzIEJveXMvUGFwZXIgR2FuZ3N0YS9Ccm93biBFeWVzL0kgTGlrZSBJdFJvdWdoL1N1bW1lcmJveSAuIFRoZXNlIHNvbmdzIGFyZSBhdmFpbGFibGUgb24gIlRoZSBGYW1lLCJHYUdhJ3MgZmlyc3QgYWxidW0uIApJIHVuZGVyc3RhbmQgcmVsaWdpb24gaGVscHMgc29tZSBwZW9wbGUgYW5kIHRoYXQncyBmaW5lLiAKVGhlbiwgcGVvcGxlIHdpbGwgYmUgYWJsZSB0byBnaXZlIHlvdSBtdWNoIG1vcmUgYWNjdXJhdGUgYWR2aWNlLiBSaWdodCBub3cgeW91ciBwb3N0IGNvbWVzIGFjcm9zcyBhcyBhIGJpdCBzaWxseSwgYmVjYXVzZSBpdCBzZWVtcyBsaWtlIHlvdSBhcmUgYW5ncnkgYnV0IG5vdCBnaXZpbmcgYW55b25lIHRoZSBpbmZvcm1hdGlvbiBuZWVkZWQgdG8gaGVscCB5b3UuIE5vdCB0cnlpbmcgdG8gYmUgbWVhbiwganVzdCBsZXR0aW5nIHlvdSBrbm93IHdoeSB5b3UgaGF2ZW4gZ290dGVuIHRoZSB3YXJtZXN0IG9mIHJlcGxpZXMuLiAKSW4gZmFjdCwgdGhpcyBzbGl2ZXIgb2YgbGFuZCBvZmYgQnJhZGVudG9uIG9uIEZsb3JpZGEncyB3ZXN0IGNvYXN0IHNlZW1zIGxpZnRlZCBmcm9tIGFuIG9sZCB0aW1lIHBvc3RjYXJkLCB3aGVuIGJpY3ljbGlzdHMgb3duZWQgdGhlIG1haW4gc3RyZWV0IGFuZCBsYWRpZXMgd2l0aCBwYXJhc29scyBzdHJvbGxlZCB0aGUgcGllciBpbiB0aGUgZWFybHkgZXZlbmluZyB0byB3YXRjaCB0aGUgc3VuIGRyb3AgaW50byB0aGUgb2NlYW4uLiAKQXQgdGhlIHRpbWUgaXQgd2FzIG92ZXIgaGFsZiBteSBiYW5rcm9sbCBhbmQgSSB3YXMgY29uc2lkZXJpbmcgcXVpdHRpbmcgYW5kIHRocm93aW5nIGluIHRoZSB0b3dlbC4gRW5kZWQgdXAgZ2V0dGluZyBiYWNrIG9uIGEgc3Rha2UgYW5kIHBsYXllZCBmdWxsIHRpbWUgZm9yIHRoZSBuZXh0IDYgbW9udGhzIGFuZCBtYWRlIGl0IGFsbCBiYWNrIHBsdXMgbGlrZSA1MGsgYnkgdGhlIGVuZCBvZiB0aGUgeWVhci4gClRoZSBwYXJ0IHRoYXQgdHVybnMgcmVkIGFuZCBzcGlucyBpcyBjYWxsZWQgYSBzcHJvY2tldC4gCkhTUzogQ0FSWU4sIFdITyBJUyBZT1VSIElERUFMIENMSUVOVD9Nb3N0IG9mIG15IGNsaWVudHMgYXJlIGZhbWlsaWFyIHdpdGggZW5lcmd5IHdvcmsgYW5kIGhvdyBpdCBoZWxwcyBhbGxldmlhdGUgcGh5c2ljYWwgYW5kIGVtb3Rpb25hbCBwYWluIGFuZCBzdHJlc3MuIENhbiBiZSBlZmZlY3RpdmUgd2hlbiB5b3VyIG93biBjdXAgaXMgZW1wdHkuIExhY2sgb2Ygc2VsZiBjYXJlIG9mdGVuIGJyZWVkcyBhbmdlciBhbmQgcmVzZW50bWVudC4gClRoZSByaWRlIHdpbGwgZm9sbG93IHRyYWlscyB0aHJvdWdoIHRoZSBEaXhpZSBOYXRpb25hbCBGb3Jlc3QgYW5kIENlZGFyIEJyZWFrcyBOYXRpb25hbCBNb251bWVudCBhbmQgd2lsbCBpbmNsdWRlIGZpdmUgc3RvcHMgdG8gcGljayB1cCBhbm90aGVyIHBva2VyIGNhcmQuIEJlIHN1cmUgdG8gc25hcCBiZWF1dGlmdWwgcGhvdG9zIGFsb25nIHRoZSByaWRlLiBCcmlhbiBIZWFkIHdpbGwgcG9zdCBwaG90b3Mgb2YgdGhlIGRheSBvbiB0aGVpciB3ZWJzaXRlIGFuZCBGYWNlYm9vayBwYWdlLiBhdCBDZWRhciBCcmVha3MgTG9kZ2UgYmFyIGluIEJyaWFuIEhlYWQgd2hlcmUgcmlkZXJzIHdpbGwgdHVybiBpbiB0aGVpciBjYXJkcyBhbmQgd2lubmVycyBvZiB0aGUgcG9rZXIgaGFuZCBkcmF3IHdpbGwgYmUgYW5ub3VuY2VkLiBQcml6ZXMgZnJvbSBzcG9uc29ycyB3aWxsIGJlIGdpdmVuIHRvIHRob3NlIHdpdGggdGhlIGJlc3QgaGFuZCwgd29yc3QgaGFuZCBhbmQgbWFueSBtb3JlLiBUaGVncmFuZCBwcml6ZSBpcyBjYXNoIGZvciB5b3UgdG8gc3BlbmQgb24geW91ciBsb3ZlZCBvbmUgZm9yIFZhbGVudGluZSdzIERheSB0aGUgbmV4dCBkYXkuClJlcG9ydGVyOiBNYXR0IERhbW9uLCBzaGUgc2F5cywgd2FzIG5vdGhpbmcgbGlrZSB0aGUgcG9rZXIgYWRkaWN0IHdobyBnYW1ibGVkIGV2ZXJ5dGhpbmcgaW4gdGhlIGZpbG0gIlJvdW5kZXJzLiIgSGUgd2FzIGxvdmVseSwgbW9kZXN0LCBkb3duIHRvIGVhcnRoLCBhIG5pY2UsIHNtYXJ0IGd1eS4gQW5kIHRvIGZ1cnRoZXIgdGhhdCBwb2ludCwgaGUgbmV2ZXIgY2FtZSBiYWNrLiAKVGhlIG1pc3NpbmcgY2FtcGFpZ24gZmluYW5jZSByZXBvcnRzSW4gMjAxNiwgQ2FyYXdheSByYW4gZm9yIGNvdW50eSBjb21taXNzaW9uIGFnYWluc3QgaGlzIGxvbmd0aW1lIHJpdmFsLCBKb2huIFdpbGV5IFByaWNlLiBUaGUgdHdvIGhhdmUgLiAKIldlIGRlY2lkZWQgdmVyeSBlYXJseSBvbiB0aGF0IHdlIGNob3NlIHRvIHdvcmsgd2l0aG91dCB0aGUgbGFyZ2VzdCB0cmFmZmljIG1hY2hpbmUgb24gdGhlIGludGVybmV0LCB0aGUgYWZmaWxpYXRlcy4gCkl0IGhvbGRzIGEgbG90IG9mIGxpcXVpZCBhbmQgY2xlYW5zIGZhaXJseSBlYXNpbHksIGJ1dCBpdCBkb2VzbiBob2xkIG9udG8gbGlxdWlkIHRoZSB3YXkgYW55IG5hdHVyYWwgZmliZXIgZG9lcy4uIApIaXN0b3JpcXVlbWVudCwgbCdoZXVyZSBkZSBnbG9pcmUgZGVzIHBpY2VzIHNlIHNpdHVlIGF1IE1veWVuIGdlLCBxdWFuZCBiaWVuIG1tZSBsYSBmYW1ldXNlIHJvdXRlIGRlcyBwaWNlcyB2b2l0IHBhc3NlciBkZXB1aXMgbCdBbnRpcXVpdCBkZXMgcHJvZHVpdHMgZW4gcHJvdmVuYW5jZSBkJ0FyYWJpZSBldCBkJ0luZGUsIHBhciBleGVtcGxlICggbCdleGNlcHRpb24gZGUgcXVlbHF1ZXMgcGxhbnRlcywgbGEgcGx1cGFydCBkZXMgcGljZXMgZXN0IG91IHRhaXQgb3JpZ2luYWlyZSBkJ09yaWVudCBldCBkJ0V4dHJtZSBPcmllbnQpLiBQb3VycXVvaSBjZXQgZW5nb3VlbWVudCBtZGl2YWwgcG91ciBsZXMgcGljZXMgPyBTYW5zIGRvdXRlLCBjb21tZSBvbiBsJ2EgbG9uZ3RlbXBzIHBlbnMsIHBvdXIgbWFzcXVlciBsYSByZWxhdGl2ZSBhYnNlbmNlIGRlIGZyYWNoZXVyIGRlcyBwcm9kdWl0cyBwYXIgbGEgcHVpc3NhbmNlIGRlIGxldXJzIGFybWVzIER1IHRvdXQuIElsIG4nZW4gZXN0IHJpZW4gZXQgYydlc3QgcnNvbHVtZW50IGZhdXggISBDZXQgZW5nb3VlbWVudCBlc3QgdG91dCBkJ2Fib3JkIGFmZmFpcmUgZGUgZ290LCBtYWlzIGF1c3NpIGRlIGx1eGUgZXQgZGUgcHJlc3RpZ2UsIGV1IGdhcmQgYXUgcHJpeCBsZXYgZGVzIHBpY2VzLiBBdSBNb3llbiBnZSwgb24gY29uc29tbWUgbGUgcG9pdnJlLCBsZSBzYWZyYW4sIGxlIGdpbmdlbWJyZSwgbGEgY2FubmVsbGUsIGxlIGNsb3UgZGUgZ2lyb2ZsZSBldCwgc3VydG91dCwgbCdwaWNlIGRlIHByZGlsZWN0aW9uLCBsYSBmYW1ldXNlIG1hbmlndWV0dGUgKGdyYWluZSBkZSBwYXJhZGlzKSBhdWpvdXJkJ2h1aSB0b21iZSBkYW5zIHVuIHJlbGF0aWYgb3VibGksIGNvbW1lIGNlbGEgYSB0IGxlIGNhcyBkZSBjZXJ0YWluZXMgYXV0cmVzIHBsYW50ZXMgdGVsbGVzIHF1J2h5c29wZSBldCBsaXZjaGUuCkFzIHN0cmluZ2VudCBhcyBLb3VydG5leSBpcyAoS2hsb2Ugc2F5cyBhZmZlY3Rpb25hdGVseSwgIlNoZSdzIGJ5IGZhciB0aGUgbW9zdCBjcmF5IGFib3V0IGhlciBkaWV0ISIpLCBLeWxpZSBoYXMgbG9uZyBiZWVuIHRoZSBvcHBvc2l0ZS4gV2l0aCBhIHBlbmNoYW50IGZvciBJbiBOIE91dCBidXJnZXJzLCAiU2hlIGVhdHMgbGlrZSBhIHR5cGljYWwgdGVlbmFnZXIsIiBLaGxvZSBvbmNlIHRvbGQgQ29zbW9wb2xpdGFuLiBBbmQgd2hpbGUgc2hlIHBvcHBlZCBpbiBmb3Igb25lIGpvaW50IERvbiBBIE1hdHJpeCBzZXNzaW9uIHdpdGggaGVyIHNpc3RlcnMsIGluc2lzdHMgS2hsb2UsIHNoZSAiZG9lc24ndCByZWFsbHkgd29yayBvdXQuIiAoQnkgY29udHJhc3QgZXZlbiBjYXJkaW8gaGF0aW5nIEtlbmRhbGwsIDIyLCB3aWxsIGNvbW1pdCB0byBhIHdlaWdodHMgc2Vzc2lvbiwgc2F5cyB0aGUgR29vZCBBbWVyaWNhbiBkZW5pbSBjbyBmb3VuZGVyIGFuZCBzaW5jZSBzaGUgaW5oZXJpdGVkIGRhZCBDYWl0bHluIEplbm5lcidzIGdlbmV0aWNzLCAiSXQgZG9lc24ndCB0YWtlIGEgbG90IGZvciBoZXIgdG8gZ2V0IGluIHNoYXBlLiIpCkl0IGlzIHVubGlrZWx5IHlvdSBoYXZlIGV2ZXIgZmVsdCB0aGUgZXh0cmVtZSBwbGVhc3VyZSB0aGF0IHRoaXMgdHlwZSBvZiBzdGltdWxhdGlvbiBwcm92aWRlcy4gCklmIG5vdCwgeW91IHdpbGwgYmUgZWl0aGVyIG9uIGEgdG91cmlzdCB2aXNhIG9yIGEgc29jaWFsIGN1bHR1cmFsIHZpc2EuLiAKV2hpY2ggZXZlciBvbmUgeW91IGdldCwgaWYgaXQgaGFzIGEgZGlhbCBnYXVnZSBhbmQgYSBtdXNocm9vbSBsb29raW5nIHdlaWdodCByZWd1bGF0b3IsIGdldCBhIHRocmVlIHBpZWNlIHdlaWdodCByZWd1bGF0b3IgdG8gcmVwbGFjZSB0aGUgbXVzaHJvb20gbG9va2luZyBvbmUuIERpYWwgcmVndWxhdG9ycyBoYXZlIHRvIGJlIHJlIGNhbGlicmF0ZWQgZXZlcnkgeWVhciAoYW5kIHNvbWV0aW1lcyBvdXQgb2YgdGhlIGJveCksIGFuZCB5b3UgbmVlZCB0byBzdGF5IHdpdGhpbiBzaWdodCBvZiB0aGUgY2FubmVyIHRvIG1ha2Ugc3VyZSBpdCBkb2VzbiBkcm9wIGJlbG93IHByZXNzdXJlLiBUaGUgdGhyZWUgcGllY2UgeW91IGNhbiBoZWFyIHJvY2sgKHVubGVzcyB5b3VyIGhvdXNlIGlzIHJlYWxseSBiaWcpIGFuZCBtYWtlcyBpdCBzbyBtdWNoIGVhc2llci4gRWFjaCBzZWN0aW9uIGlzIHdvcnRoIDUgbGIgb2YgcHJlc3N1cmUuCkxhdGVseSBJJ3ZlIGJlZW4gcGxheWluZyBhIGNhc3VhbCB2aWRlbyBnYW1lIG9uIHRoZSBpUGFkIGNhbGxlZCwgQ2xhc2ggb2YgQ2xhbnMuIEkgZ290IGludG8gaXQgYmVjYXVzZSBNciAxMCB3YW50ZWQgdG8gcGxheSBpdCBiZWNhdXNlIGFsbCBvZiBoaXMgZnJpZW5kcyBkaWQuIEkga2luZGEgdG9vayBvdmVyLiAKSSB3YXMgaW4gdGhlIG1pZGRsZSBvZiBlYXRpbmcgYXQgYSByZXN0YXVyYW50IHdoZW4gSSBhbnN3ZXJlZCBhbmQgdGhlIHNlbGxlciB3YXMgYWxzbyBidXN5IHNvIEknbSBzdXBwb3NlZCB0byBjYWxsIGhpbSBiYWNrIHRoaXMgYWZ0ZXJub29uLi4gCjEuIEVhcm4gRlJFRSBNYXNzYWdlIGZvciBSZWZlcnJhbHMKVGhleSBoYXZlIHRoZSBsb3dlc3QgcG9zc2libGUgcG93ZXIgb2YgMS4gQWJzb2x0dWVseSB1c2VsZXNzLiAKT24gYSBzY2FsZSBmcm9tIDAgMTAwLCB5b3VyIHNuYXAgd2FzIGEgMTAuIAoiVGhleSB3YW50ZWQgdGhlIGRhdGEgYW5kIHRoZXkgd2FudGVkIHRvIHNodXQgaGltIGRvd24uIApFeGNlcHRpb25zIGFyZSBtYWRlIGZvciBleGNsdXNpdmUgcmVsZWFzZXMgb3IgdHJhY2tzIG5vdCBhdmFpbGFibGUgb24gYW4gYXJ0aXN0IG9mZmljaWFsIGNoYW5uZWwuIEFydGljbGVzIGRpc2N1c3NpbmcgZXZlbnRzIGluIG11c2ljaWFuIGxpdmVzIGFyZSBzdWJqZWN0IHRvIG1vZCBkaXNjcmV0aW9uLiBCeSB0aGUgbGF0ZSAxOTYwcywgaGUgd2FzIGFscmVhZHkgYSBtYWpvciBmaWd1cmUgaW4gVHVya2lzaCBwc3ljaGVkZWxpYyBtdXNpYyAoYWxzbyBjYWxsZWQgYXMgQW5hdG9saWFuIFJvY2spLCBiZWdpbm5pbmcgd2l0aCBoaXMgZmlyc3QgcHN5Y2hlZGVsaWMgc2luZ2xlICJBbm1hIEFya2FkYSIgaW4gMTk2Ny4gSW4gdGhlIGVhcmx5IDE5NzBzLCBoZSBmb3JtZWQgdGhlIGdyb3VwIFRlciB3aXRoIHRoZSBmb3JtZXIgbWVtYmVycyBvZiBHcnVwIEJ1bmFsbSAoYWxzbyBrbm93biBhcyBCdW5hbG1sYXIpLiBBbHRob3VnaCB0aGV5IG9ubHkgcmVjb3JkZWQgb25lIHNpbmdsZSBiZWZvcmUgYnJlYWtpbmcgdXAsICJIb3IgR3JtZSBHYXJpYmkiIChhIGNvdmVyIG9mIHRoZSBtYWpvciBhcmFiZXNxdWUgaGl0IGJ5IE9yaGFuIEdlbmNlYmF5KSB3YXMgYSBzbWFzaCBoaXQsIGZ1cnRoZXJpbmcgS29yYXkgY2FyZWVyLgpUaGUgZ29sZiBiYWxscyBhcmUgdGhlIGltcG9ydGFudCB0aGluZ3MgeW91ciBmYW1pbHksIHlvdXIgY2hpbGRyZW4sIHlvdXIgaGVhbHRoLCB5b3VyIGZyaWVuZHMgYW5kIHlvdXIgZmF2b3JpdGUgcGFzc2lvbnMgYW5kIGlmIGV2ZXJ5dGhpbmcgZWxzZSB3YXMgbG9zdCBhbmQgb25seSB0aGV5IHJlbWFpbmVkLCB5b3VyIGxpZmUgd291bGQgc3RpbGwgYmUgZnVsbC4uIApPdXIgc2NoZWR1bGVzIGFyZSBhbHNvIGNvb2tvby4gdGhlIE5vIG9mIHllYXJzIGluIGEgUGhhc2UgZm9yIHNvbWUgbGVhcm5lcnMgaXMgYmVpbmcgcHJpbnRlZCBhcyA2IGluc3RlYWQgb2YgMyBmb3IgdGhlIGdyYWRlIDYgc2NoZWR1bGVzLiBJIHRoaW5rIGl0IGhhcyBzb21ldGhpbmcgdG8gZG8gd2l0aCB0aGUgZmFjdCB0aGF0IHRob3NlIGxlYXJuZXJzIG1heSBoYXZlIHJlcGVhdGVkIGF0IHNvbWUgc3RhZ2UuCkkgZ28gdG8gYSBkaWZmZXJlbnQgZ3ltIG5vdyBhbmQgdXNlZCB0byBmZWVsIHRoZSB3YXkgeW91IGRvIGJ1dCBhZnRlciBnb2luZyB0aGVyZSBmb3IgYSB3aGlsZSwgSSByZWFsaXplIG5vYm9keSByZWFsbHkgY2FyZXMuIElmIHRoZXkgdGhpbmtpbmcgYW55dGhpbmcgaXQgcHJvYmFibHkgIkdvb2QgZm9yIGhlciBmb3IgZ2V0dGluZyBoZWFsdGhpZXIuIiBJIGtub3cgaXQgaGFyZCBidXQganVzdCB0cnkgbm90IHRvIGZvY3VzIG9uIHdoYXQgeW91IHRoaW5rIHBlb3BsZSBhcmUgdGhpbmtpbmcgYWJvdXQgeW91IGF0IHRoZSBneW0uLiAKSGV5IEV2ZXJ5b25lISBXZSdsbCBiZSBob3N0aW5nIGEgRGlhcGVyIGFuZCBQb2tlciBQYXJ0eSBNYXJjaCAybmQsIFN1bmRheSwgYXQgMXBtLiBCcmluZyBhbiBpdGVtIGZyb20gb3VyIHJlZ2lzdHJ5IChwcmVmZXJhYmx5IGEgY2xvdGggZGlhcGVyKSBvciAkMTAgaWYgeW91IGFyZSB1bmFibGUgdG8gZG8gc28sIGFuZCBoZWxwIHlvdXJzZWxmIHRvIHBpenphLCBjaGlwcywgYW5kIHNvZGEuIApIZXIgcmhldG9yaWMgY29uY2VybnMgbWUgZGVlcGx5LiBZb3UgY2FuIGFuZCBzaG91bGQgYWJzb2x1dGVseSBjcml0aWNpemUgdGhlIElzcmFlbGkgZ292ZXJubWVudCAoSSBjYW4gd2FpdCBmb3IgQmliaSB0byBiZSBpbmRpY3RlZCksIGJ1dCB0byBxdWVzdGlvbiBpdHMgcmlnaHQgdG8gZXhpc3QsIHRvIGFjY3VzZSBkaWFzcG9yYSBKZXdzIG9mIGEgImR1YWwgYWxsZWdpYW5jZSIuIHRoYXQgYW50aXNlbWl0aWMsIG5vIHR3byB3YXlzIGFib3V0IGl0LgpBIGxvbmcgdGVybSByZWxhdGlvbnNoaXAgY2FuIHN0aWxsIGJlIGZ1biBpZiB5b3Ugd29yayBvbiBpdC4gSWYgeW91IGhhdmUgZGlmZmVyZW5jZXMgKHdoaWNoIGFyZSBpbmV2aXRhYmxlKSwgc2V0dGxlIHRoZW0gYXMgc29vbiBhcyB5b3UgY2FuLiBEb24ndCBzbGVlcCBvbiBhIG1hcml0YWwgYXJndW1lbnQuIApOb3Qgb25seSBsaWdodGVyLCBidXQgeW91IGNhbiBiZSB3YXkgbGVzcyBjYXJlZnVsIGFib3V0IGZpbmRpbmcgc3BvdHMgdG8gc2V0IHVwIGluIGFuZCBub3Qgd29ycnkgYWJvdXQgcHVuY3R1cmluZyB5b3VyIHBhZC4gCjIyNyAyNyBldCAyMjIgMjkgbm91dmVhdSBjb2RlIHBuYWwpLCBjYXMgcGFyIGV4ZW1wbGUgZCd1bmUgYWdyZXNzaW9uIGZhaXRlIHBhciB1biBwYXJlbnQsIHVuIGJlYXUgcGFyZW50IG91IHVuIHByb2Zlc3NldXIuIApBbmQgc28gdGhlIFBlb3BsZSBhcmUgYWxvbmUgaW4gYSB3b3JsZCB0aGF0IGxvb2tzIGluY3JlYXNpbmdseSBibGFjayBhbmQgd2hpdGUgd2l0aCBzbGlnaHRseSBzY3JhdGNoeSBzb3VuZC4gUGVyaGFwcyB3ZSBzaG91bGQgY29tZm9ydCBvdXJzZWx2ZXMgd2l0aCB0aGUgbWV0YXBoeXNpY2FsPyBHb2Qgd2lsbCBzdXJlbHkgc21pdGUgdGhlbSIgT3Iga2FybWEgd2lsbCBzdXJlbHkgYml0ZSB0aGUgZ3JlZWR5IGJhbmtlcnMgaW4gdGhlaXIgZmF0IGNhdCBhc3Nlcz8gSSBnb2luZyB0byBsb29rIHVwIGluIHRoZSBza3kgYWxsIGRheS4gCkhvdyBkbyB5b3UgZGVsZXRlIGEgc2ltIG9uIFRoZSBTaW1zIDI/CldoaWxlIDEgaGFkIG1pbmltYWwgc3RvcnksIGV2ZW4gc3RhcnRpbmcgaW4gMiAodXMsIDQgaW4gamFwYW4pIHRoZXJlIHdlcmUgYWxyZWFkeSByb21hbmNlIHN0b3J5IGVsZW1lbnRzIChFZGdlL1J5ZGlhIGdldCBtYXJyaWVkIGluIHRoZSBlbmRpbmcsIGNlY2lsIGFuZCByb3NhIGFyZSBhbHJlYWR5IG1hcnJpZWQsIGV0YykuIE5vdyBJIGdvaW5nIHRvIGhhdmUgdG8gZmluZCBzb21lIHdheSB0byBlbXVsYXRlIHRoZSBtb3JlIHJlY2VudCBnYW1lcy4uIApGb2xkcywgVVRHICsxIChhY3RpdmUgcGxheWVyKSBtYWtlcyBpdCAkMTIsIFVURysyIChsb29zZSBmaXNoKSBmbGF0cywgNCBvdGhlciBwbGF5ZXJzIGNhbGwgYW5kIGhlcm8gbG9va3MgZG93biBhdCB0d28gYmxhY2sgS2luZ3MgaW4gdGhlIEJCLiBJIHJhaXNlIHRvICQ0NSB3aGlsZSBrZWVwaW5nIHRoZSAibGV0IGxvb3NlbiBpdCB1cCIgYml0IGdvaW5nLiBPcmlnaW5hbCByYWlzZXIsIGxvb3NlIGZpc2gsIGFuZCAzIG90aGVycyBjYWxsICgxIGlzIGFsbCBpbiBmb3IgbGVzcykuCkFuZCBJIGRyZXcgbXkgaWRlYS4gSGVyIGNyZWF0aXZpdHkgaW5zcGlyZWQgbXkgb3duLi4gCldlIGtub3cgdGhlIGNyZWVweXBhc3RhIGlzIGZha2UgYW5kIHNvIHRoZXJlIGlzIG5vIGJyb2FkZXIgbWVhbmluZyB0byBiZSB0YWtlbiBmcm9tIGl0LiAKSW4gMjAwOSwgWnluZ2EgbG9zdCAkNTIuOCBtaWxsaW9uIG9uIHJldmVudWUgb2YgJDEyMS41IG1pbGxpb24uIApJIGFsc28gYXR0ZW5kZWQgYSB2aWRlbyBnYW1pbmcgZXZlbnQgaW4gdGhlIGNpdHkgYW5kIGhhZCBhIGxvdCBvZiBmdW4gSSBqdXN0IGJyb3VnaHQgbXkgbHVuY2ggaW5zdGVhZCBvZiBidXlpbmcgaXQgdGhlcmUgb3IgdGFraW5nIGFkdmFudGFnZSBvZiB0aGUgZnJlZSBmb29kIHRydWNrcyBvdXRzaWRlIHRoZSB2ZW51ZS4gSSB0dXJuZWQgZG93biBhIGNvdXBsZSBvZiBoYXBweSBob3VycywgYW5kIHF1aXRlIGEgZmV3IHdvcmsgbHVuY2hlcy4uIApUcmFuc2dlbmRlciBkZXNjcmliZXMgc29tZW9uZSB3aG8ncyBnZW5kZXIgaWRlbnRpdHkgICB5b3UncmUgaW5uZXIgc2Vuc2Ugb2YgYmVpbmcgYSBtYW4sIHdvbWFuLCBvciBhbm90aGVyIGdlbmRlciAgIGRpZmZlcnMgZnJvbSB0aGVpciBzZXggYXNzaWduZWQgYXQgYmlydGguCkF3ZnVsIG1lYW5pbmcgeW91IGFyZSBhIG1vbmtleS4gCkkgbG92ZSBtYWtpbmcgdGhlc2UgZmFuY3kgcmFiYml0cy4gSSBzZWxsIHRoZW0gZm9yICQ1LgpXaGVuIHRoZSBVUyBmZWRlcmFsIGdvdmVybm1lbnQgZmluYWxseSBzdWNjZWVkZWQgaW4gc2h1dHRpbmcgZG93biB0aGUgbnVtYmVyIGdhbWVzIHJ1biBieSB0aGUgbW9iLCBpdCB3YXNuIG11Y2ggbG9uZ2VyIHVudGlsIGluZGl2aWR1YWwgc3RhdGVzIGhhZCB0aGVpciBvd24gbG90dGVyaWVzLiAKV2VubiBldHdhcyB2b24gZWluZW0gVmVybGFnIHZlcmZmZW50bGljaHQgd2lyZCwgbXVzcyBtYW4gZGFzIEJ1Y2gga2F1ZmVuLCBkZW4gSW5oYWx0IHVucmVmbGVrdGllcnQgbGFzc2VuIHVuZCBkZW4gVW5zaW5uIGFtIGJlc3RlbiBub2NoIGJld2VyYmVuLCBzbyB3aWUgZGFtYWxzIGltIGJlc3RlbnMgcmVjaGVyY2hpZXJ0ZW4gU3RjayB3b2xsZW4gbnVyIGRlaW5lIFNlZWxlLiBIYXJkcm9jazogRGF0ZW4gRmFrdGVuIEhpbnRlcmdybmRlLiAKT2ZmaWNpYWxzIGZyb20gdGhlIHRyYWNrcywgd2hpY2ggb2ZmZXIgdmlkZW8gcG9rZXIsIGJsYWNramFjayBhbmQgb3RoZXIgZWxlY3Ryb25pYyAiZ2FtZXMgb2Ygc2tpbGwsIiBzYWlkIHRoZXkgb3Bwb3NlZCB0aGUgbWVhc3VyZSBldmVuIHRob3VnaCBpdCB3b3VsZG4ndCBhZmZlY3QgYnVzaW5lc3MgYXQgdGhlaXIgZmFjaWxpdGllcy4KVGhpcyBlbGVnYW50IHNwYSwgaW4gYSB0dXJuIG9mIHRoZSBjZW50dXJ5IGNvbG9uaWFsIGhvdXNlIHN1cnJvdW5kZWQgYnkgdHJvcGljYWwgZ2FyZGVucywgaGFzIGEgZ3JlYXQgbG9jYXRpb24gb24gdGhlIENoYW8gUGhyYXlhIFJpdmVyLCBub3QgZmFyIGZyb20gQmFuZ2tvaydzIEdyYW5kIFBhbGFjZSBhbmQgV2F0IFBoby4gSXRzIHRlbiB0cmVhdG1lbnQgcm9vbXMgYW5kIGZvdXIgc3VpdGVzICh3aXRoIGRheWJlZHMgZm9yIGNvdXBsZXMgYW5kIGhlcmJhbCBzdGVhbSByb29tcykgZmlsbCB0aGUgc2Vjb25kIGZsb29yLiBJbiB0aGUgdHJlYXRtZW50IHJvb21zLCBmbG9vciB0byBjZWlsaW5nIHdpbmRvd3MgcmV2ZWFsIGFuIG9yY2hpZCBnYXJkZW4sIGFuZCB0aGUgc3RvbmUgY2VpbGluZ3MgYXJlIGNhcnZlZCB3aXRoIG9yY2hpZCBibG9zc29tcy4gCidQYXRhdGplIEpvcHBpZScgYmVjYW1lIHRoZSB3aW5uZXIgb2YgdGhlIGNvbXBldGl0aW9uIGFuZCBpcyBub3cgYmVpbmcgc29sZCBhcyBsaW1pdGVkIGVkaXRpb24uICdQYXRhdGplIEpvcHBpZScgbWVhbiBGcmVuY2ggRnJpZXMgd2l0aCBKb3BwaWVzYXVzIC4gSW4gQmVsZ2l1bSwgdGhlIHNhbWUgY29udGVzdCB3YXMgaGVsZCBhbmQgdGhlaXIgY2hvaWNlcyB3ZXJlICdCaWNreSBDcmlzcCcgYW5kICdJbmRpYW4gQ3VycnkgU3R5bGUnLiAKUXVhbmRvIGNhbWJpYSBsYSBtdXNpY2EsIHNhbHRhIHN1bCBwb3N0byBjb24gbGUgbWFuaSBhbHphdGUsIGUgdXJsYSBhIGdyYW4gdm9jZSBpbCBtYW50cmE6ICJIdSEgSHUhIEh1ISIgZSBzdGFpIGF0dGVudG8gYSByaWNhZGVyZSBhIHRlcnJhIHN1bGwnaW50ZXJhIHBpYW50YSBkZWwgcGllZGUuIEVzcGlyYSBtZW50cmUgZW1ldHRpIGlsIHN1b25vLCBpbiBtb2RvIHRhbGUgY2hlIHR1dHRvIGlsIHR1byByZXNwaXJvIGZ1b3JpZXNjYS4gCklmIHlvdXIgc3VibWlzc2lvbiBoYXMgbG90cyBvZiB0ZXh0LCBpdCBpcyBhIHN1YmplY3QgdG8gcmVtb3ZhbCBhdCB0aGUgbW9kZXJhdG9yIGRpc2NyZXRpb24uIE5vIHRleHQgcG9zdHMgICBzaG9vdCB1cyBhIG1vZG1haWwgaWYgeW91IGhhdmUgYW55IHF1ZXN0aW9ucyBvciBzdWdnZXN0aW9ucyEuIApOb3BlIHlvdSBrZWVwIHRob3NlIHRob3VnaHRzIGFuZCBlbW90aW9ucy4gCkJ1dCBpZiB5b3UgdW5kZXJzdGFuZCB0aGUgY3VsdHVyYWwgZm9yY2VzIHRoYXQgYXJlIGF0IHBsYXkgdW5kZXJzZXJ2ZWQgYXVkaWVuY2UsIHRoZSByYXBpZGx5IGV4cGFuZGluZyBpbmZsdWVuY2Ugb2YgQXNpYW4gY3VsdHVyZSBhbmQgdGhlIHBvd2VyIG9mIHRoZSBnbG9iYWwgYm94IG9mZmljZSwgdGhpcyAkMzAgbWlsbGlvbiBtb3ZpZSBkb2VzbiBzZWVtIGxpa2UgbXVjaCBvZiBhIGdhbWJsZSBhdCBhbGwuIEluIGZhY3QsIGl0IHNlZW1zIGRlc3RpbmVkIHRvIGJlIGEgaGl0LiBDcmF6eSBSaWNoIEFzaWFucyBpcyBwdXJlIGVzY2FwaXN0IGZhbnRhc3ksIGEgQ2luZGVyZWxsYSBzdG9yeSBhYm91dCBhbiBBc2lhbiBBbWVyaWNhbiB3b21hbiBtZWV0aW5nIGhlciBib3kgY29sb3JmdWwgYW5kLCB5ZXMsIGNyYXp5IHJpY2ggZmFtaWx5IGluIFNpbmdhcG9yZS4gCkJlbmVmaXQgaG9ub3JzIHR3byBUaG9tYXN2aWxsZSBicm90aGVycwpEaWUgVGllcmUgc2luZCB3aWUgc2VpbmUgRnJldW5kZSwgdm9uIGRlbmVuIGVyIGF1Y2ggbGVybnQuIApHb29kIGx1Y2sgYW55d2F5IChGdWxsIEFuc3dlcikuIApNYXliZSBhbiBFYXN0ZXJuIFdoaXRlIENlZGFyIGluIHRoZSBwZXJmZWN0IGVudmlyb25tZW50LiAKVGhlIGdvb2Qgb25lcyBoYXZlIHZlcnkgc3RyaWN0IHJ1bGVzIGFib3V0IHdoYXQgY2FuIGJlIGRvbmUgd2hlcmUsIHdobyBjYW4gcGFydGljaXBhdGUgb3Igd2hvIGNhbiBqdXN0IHdhdGNoLCBvciB3aG8gaGFzIG5vIGFjY2VzcyBhdCBhbGwgdG8gc29tZW9uZSBwbGF5IGJ1dCBhcmUgc3RpbGwgY2xvc2UgYnkuIApHcm91bmRicmVha2luZz8gRGVmaW5pdGVseS4gQnV0IGZvciBtb3N0IHZpc2l0b3JzLCB3aGF0IHJlYWxseSBtYXR0ZXJzIGlzIHRoYXQgaXQgYWxsIG1ha2VzIGZvciBhbiBpbnZpdGluZyBhbmQgcmVsYXhpbmcgb2xkIEZsb3JpZGEgZXhwZXJpZW5jZS4KVGhlIHJlYXNvbiBBcGV4IGlzIHNvIGdvb2QgaXMgYmVjYXVzZSBFQSBkaWRuIGhhdmUgbXVjaCBpbmZsdWVuY2Ugb3ZlciBSZXNwYXduLiBUaGV5IGRpZG4gcHV0IGFueSBkZWFkbGluZXMgb24gdGhlbSBvciBnaXZlIHRoZW0gbXVjaCByZXN0cmljdGlvbnMgb24gd2hhdCBBcGV4IGNhbiBiZS4gCkxlZ2FsIGhlYXZ5d2VpZ2h0cyBzcXVhcmUgb2ZmIG9uIGNhc2lubyBhbWVuZG1lbnQKWWV0IGl0IG1vc3QgbGlrZWx5IHBvc3NpYmxlIGFueXRoaW5nIG9uICJpVHVuZXMiY2FuIGJlIGZvdW5kIG9uIFZpbnlsL0NEIGZvciBoaWdoZXIgcXVhbGl0eS4gCiJBIHdlZWsgb3IgdHdvIGFmdGVyIHNoZSBnb3QgYmFjaywgc2hlIHN0YXJ0ZWQgdGFsa2luZyBhYm91dCBob3cgbmljZSBpdCB3b3VsZCBiZSB0byBxdWl0IGFuZCB3cml0ZSBhIGJvb2sgb3IgZG8gYSBzaG93IGFuZCBtYWtlIHRoZSBtb25leS4gClByb2Zlc3Npb25hbCBtYW5hZ2VtZW50LCBpbmRleGF0aW9uIGZvciBtb3N0IG9mIHRoZSBpbmNvbWUsIGFuZCBzcG91c2FsIGJlbmVmaXRzIHN1Z2dlc3QgdGhhdCBpdCBpcyB3aXNlIHRvIGxlYXZlIHRoZSBwZW5zaW9ucyBpbiBwbGFjZS4gClRoaXMgTllUIGFydGljbGUgaGFzIGEgcXVpY2sgcnVuZG93bi4gCiJSZXZlc2J5IFdvcmtlcnMgQ2x1YiwgYXMgcGFydCBvZiB0aGVpciBkZXZlbG9wbWVudCwgcHV0IGluIGEgbG9uZyBkYXkgY2FyZSBjZW50cmUgYXJvdW5kIDE4IG1vbnRocyBhZ28sIiBNciBOZXdlbGwgc2FpZC4gClRvcCAxMCB0aXBzIGZvciBncm93aW5nIHNlZWRzIGZvciBzcHJpbmcKQXQgaXRzIGxhc3QgbWVldGluZywgdGhlIGJhbmsgc2FpZCB0aGUgaW50ZXJlc3QgcmF0ZSB3aWxsIG5lZWQgdG8gcmlzZSBvdmVyIHRpbWUsIHdpdGggYSBwYWNlIGRlcGVuZGVudCBvbiBkZXZlbG9wbWVudHMgaW4gb2lsIGFuZCBob3VzaW5nIG1hcmtldHMgYW5kIGdsb2JhbCB0cmFkZSBwb2xpY3ksIGFjY29yZGluZyB0byBhIEphbi4gClRvIHByb3Rlc3QgYSBwcm90ZXN0IHZvdGUsIG9uZSBuZWVkcyB0byBnbyB3aXRoIHRoZSBsYXJnZXN0IHBhcnRpZXMuIApBcyBJIGFjY2VwdGVkIHRoZSBpbnZpdGF0aW9uIGFuZCBmbGV3LCBJIHNwZW50IG15IHRpbWUgb24gdGhlIHBsYW5lIHJlYWRpbmcgdGhlIHRlcnJpdG9yeSdzIGhpc3RvcnkgYW5kIG15dGhvbG9neS4gVGhlIGFpcmhvc3Rlc3Mgb2ZmZXJlZCBtYW55IGFubm90YXRpb25zIHRvIHRoZSBib29rIEkgd2FzIHJlYWRpbmcgYW5kIHVyZ2VkIG1lIHRvICdsZWF2ZSBldmVyeXRoaW5nIGFuZCBmaW5kIGZ1biBpbiBmb3J0dW5lJy4gSSB3b3VsZCBoYXZlIGRpc21pc3NlZCB0aGF0IHR1cmdpZCBwYWxhdmVyLCBidXQgbXkgaW5uYXRlIGdhbWJsaW5nIHB1bXAgaGFkIGJlZW4gdGhvcm91Z2hseSBwcmltZWQuIApQYXJmdW1zIHNhY3JzIGVzdCBkZSByZXRvdXIgc3VyIGxlIHNpdGUgISA6KSBFdCBwb3VyIGZ0ZXIgY2VsYSwgbGEgam9saWUgZmUgcXVpIGVuIGlsbHVzdHJlIGxhIGNvdXZlcnR1cmUgYSBkY2lkIGRlIGdyYW5kaXIgOiBjZSBuIHBsdXMgc3VyIHVuIHBldGl0IGZvcm1hdCBxdSBzIG1haW50ZW5hbnQsIG1haXMgc3VyIHVuIGdyYW5kICgyMSB4IDE1KS4gRGUgZmFpdCwgZWxsZSBhIGF1c3NpIHByaXMgdW4gcGV0aXQgcGV1IGQgZWxsZSBhIG1yaSBwb3V2b25zIG5vdXMgZGlyZSA6KS4gClRoYXQgbm90IHRvIHNheSBJIGRvbiB2YWx1ZSBteSB0aW1lIHdpdGggaGltIG9yIEkgZG9uIHdhbnQgdG8gc2VlIGhpbSwgYnV0IEkgZ290IGEgZ29hbCBpbiBtaW5kIGFuZCBpZiBJIGRvbiBoYXZlIHRoZSB0aW1lLCB0aGVuIEkgZG9uIFRoYXQgbXkgY2hvaWNlIGFuZCB3aGlsZSBJIHN1cmUgdGhhdCBJIGRvbiBoYXZlIHRoZSBwZXJmZWN0IGJhbGFuY2UgYmV0d2VlbiBldmVyeXRoaW5nIEkganVnZ2xpbmcsIEkgd2lsbCBzYXkgSSBpbiB0aGUgYmVzdCBwaHlzaWNhbCBzaGFwZSBvZiBteSBsaWZlIChvciBjbG9zZSB0byBpdCkgdGhhdCBJIGV2ZXIgYmVlbiBpbiB5ZWFycy4gQ2hvaWNlcy4gClZhbHVlIHZpbGxhaW4gY2FuIGhhdmUgZmx1c2hlcy9UeC4gClBva2VyIHRvdXJuYW1lbnRzIGNhbiBiZSBvZiBkaWZmZXJlbnQgdHlwZXMuIEZvciBpbnN0YW5jZSAgc2hvb3RvdXQgdG91cm5hbWVudHMgd2hlcmUgdGhlIHRhYmxlcyBhbG9uZyB3aXRoIHBsYXllcnMgYXJlIG5vdCBlbGltaW5hdGVkIGJ1dCBjb250aW51ZSB0byBiZSB0aGVyZSB0aWxsIG9uZSBwbGF5ZXIgZW1lcmdlcyBhcyBhIHdpbm5lci4gVW5saWtlIHRvIHRoaXMgYXJlIHRoZSBlbGltaW5hdGlvbiB0b3VybmFtZW50cyB3ZXJlIHRoZSBnYW1lIGNvbW1lbmNlcyB3aXRoIGFsbCBwbGF5ZXJzIGhhdmluZyBlcXVhbCBhbW91bnQgb2YgY2hpcHMgYW5kIHByb2xvbmdzIHVudGlsIG9uZSBwbGF5ZXIgbWFuYWdlcyB0byBnZXQgYWxsIHRoZSBjaGlwcy4gSGVyZSB0aGUgdGFibGVzIGFyZSByZW1vdmVkIGFuZCBhdCB0aGUgZW5kIGEgc2luZ2xlIHRhYmxlIGlzIGxlZnQuIEFsbCB0aG9zZSB3aG8gc3Vydml2ZSBpbiB0aGUgZ2FtZSB0aWxsIHRoZSBsYXN0IHRhYmxlIGdldCBzb21lIHNvcnQgb2YgcmV3YXJkIHRvIGNoZXJpc2guIFN1Y2ggdG91cm5hbWVudHMgaGF2ZSBubyByZSBidXlzIGJ1dCB0aGUgJ1JlIGJ1eScgdG91cm5hbWVudHMgcHJvdmlkZSB0aGUgY2hhbmNlIHRvIHJlIGJ1eSB0aGUgY2hpcHMgb25jZSB0aGV5IGFyZSBhbGwgZ29uZS4gVGhlIGNoaXBzIGFyZSB0byBiZSBwdXJjaGFzZWQgYnkgcGF5aW5nIGV4dHJhIG1vbmV5LiBTbyB0aGUgZ2FtZSBjb250aW51ZXMgZm9yIGxvbmcgYW5kIHRoZXJlIGFyZSBsaXR0bGUgb2RkcyBvZiBiZWluZyBzZWdyZWdhdGVkIGZyb20gdGhlIGdhbWUuCklmIGEgc3VwcGxpZXIgd2FudHMgdG8gZG8gYnVzaW5lc3Mgd2l0aCBEZWxwaGksIGl0IG11c3QgY29tbWl0IHRvIGxlYW4gbWFudWZhY3R1cmluZywgc2FpZCBEYXZpZCBOZWxzb24sIERlbHBoaSdzIHZpY2UgcHJlc2lkZW50IG9mIGdsb2JhbCBwdXJjaGFzaW5nLgpJIGFtIHN1cmUgdGhlIGN1cnJlbnQgcGxheWVyIGJhc2VkIHdvdWxkIGhhdmUgbW92ZWQgdG8gZGlmZmVyZW50IGdhbWVzIGlmIHRoZXkgd2VyZSBsb29raW5nIGZvciBhIHNoaW55IGdhbWUuIEJ1dCBJIHVuZGVyc3RhbmQgdGhlIGRpZmZpY3VsdGx5IG9mIGJhbGFuY2luZyBhIG5ldyBsb29rIHRoYXQgd291bGQgYXR0cmFjdCBuZXcgcGxheWVycyB3aXRoIGVhc2lseSByZWNvZ25pemFibGUgdmlzdWFscyBhbmQgZnVuY3Rpb25hbGl0eS4gQW5kIHdpbGwgYWxsIHdhbnQgYSBzdWNjZXNzZnVsIGdhbWUgdGhhdCB3b3VsZCBicmluZyBpbiBuZXcgcGxheWVycy4KVGhlIDI5MCwwMDAgc3F1YXJlIGZvb3QgY2FzaW5vIGluY2x1ZGVzIGFwcHJveGltYXRlbHkgMiwwMDAgc2xvdCBtYWNoaW5lcywgNjAgdGFibGUgZ2FtZXMsIGEgcG9rZXIgcm9vbSB3aXRoIDIwIHRhYmxlcywgc3RydWN0dXJlZCBhbmQgc3VyZmFjZSBwYXJraW5nLCBwbHVzIGZvb2QgYW5kIGJldmVyYWdlIGFtZW5pdGllcywgaW5jbHVkaW5nIEVwaWMgQnVmZmV0IGFuZCBhbiBlbnRlcnRhaW5tZW50IGxvdW5nZS4uIApXaGF0IGlzIHRoZSBDb3N0IHRvIFN0YXJ0IGEgTWFzc2FnZSBCdXNpbmVzcwpJIHN1cmUgdGhlIE5ldyBSZXB1YmxpYyBtYWRlIHNvbWUgc29ydCBvZiBtZW1vcmlhbCBmb3IgYWxsIHRoZSBmYWxsZW4gaGVyb2VzIGluIHRoZSB3YXIgYW5kIHNvbWUgbWVtb3JpYWxzIG1heSBldmVuIGJlIGZvY3VzZWQgb24gdGhlIGJpZ2dlciBoZXJvZXMgbGlrZSBSb2d1ZSBPbmUsIGJ1dCBleHBlY3RpbmcgUm9ndWUgT25lIGRlZGljYXRpb25zL21lbW9yaWFscyBldmVyeXdoZXJlIGlzIGEgYml0IG11Y2guIEV2ZW4gaW4gdGhlIFJlYmVsbGlvbiwgbW9zdCBSZWJlbHMgaGFkIG5vIGlkZWEgd2hvIHRoZXkgd2VyZS4gMSBwb2ludCAgc3VibWl0dGVkIDIgZGF5cyBhZ28uIApJdCBpcyB0aGVzZSBzYW1lIGNoYXJhY3RlcmlzdGljcyB0aGF0IG1ha2UgdXAgd2hhdCBpcyBjb21tb25seSBrbm93biBrbm93IGRheXMgYXMgYSBwbGF5ZXIuV2UgaGF2ZSByZWNlaXZlZCBhIGxvdCBvZiBmZWVkYmFjayBhbmQgcXVlc3Rpb25zIGFza2luZyBmb3IgbW9yZSBpbmZvcm1hdGlvbiBhYm91dCBwZW9wbGUgd2hvIGFyZSBjaGFyYWN0ZXIgZGlzb3JkZXJlZCBhbmQgaG93IHRvIHRlbGwgaWYgeW91ciBwYXJ0bmVyIGlzIG9uZSBvZiB0aGVtLiBTbyB3ZSBoYXZlIGNyZWF0ZWQgdGhpcyBhcnRpY2xlIHRvIGdvIG92ZXIgMTAgQ29tbW9uIFNpZ25zIHRoYXQgeW91ciBwYXJ0bmVyIGlzIENoYXJhY3RlciBEaXNvcmRlcmVkLkFzIGEgcHJlYW1ibGUsIG1vc3QgcGVvcGxlIHRvIGEgY2VydGFpbiBkZWdyZWUgYXJlIGxpa2UgdGhlIGZvbGxvd2luZyBleGFtcGxlcywgYnV0IGlzIHdoZW4geW91ciBwYXJ0bmVyIGhhcyB0aGVzZSB0cmFpdHMgZG93biB0byBhIHNjaWVuY2UsIGFuZCBpdCBpcyBuYXR1cmFsIGFuZCBlYXN5LCBmcmVxdWVudCBhbmQgaW50ZW50aW9uYWwgdGhhdCdzIHdoZW4geW91IGtub3cgdGhleSBhcmUgY2hhcmFjdGVyIGRpc29yZGVyZWQuIEkgZ28gb3ZlciBlYWNoIG9uZSBpbiB0dXJuLjEpSVQiUyBZT1VSIEZBVUxULCBOT1QgTVkgRkFVTFQgVEFDVElDMilTVUJDT05TQ0lPVVMgSU5GTFVFTkNJTkcgV09SRFMgTElLRSAiWU9VIiBBTkQiIFNIT1VMRCIzKU9QUE9SVFVOSVRJU1QgIElOVEVOVElBTExZIEtFRVBTIERJU0NVU1NJT05TIE9QRU4gVE8gQkUgQUJMRSBUTyBVU0UgVU5TT0xWRUQgRElTQ1VTU0lPTlMgVE8gVEhFSVIgQURWQU5UQUdFNClZRUFILCBZRUFILCBXRSBXSUxMIERJU0NVU1MgVEhBVCBMQVRFUiBTWU5EUk9NRTUpRkFJVCBEVSBDT01QTEVURSBFWFRST0RBSVJFNilXQVRDSCBUSEVNIFBMQVkgQSBHQU1FIFRPIFNFRSBXSEFUIFRIRVJFIFBBUkFESUdNIEFCT1VUIExJRkUgSVM4KVVTRVMgU09DSUFMIFBSRVNTVVJFIEFHQUlOU1QgWU9VOSlIQVMgTk8gVFJPVUJMRSBPUiBSRUdSRVQgQUJPVVQgTFlJTkcxMCkgQUdSRUUgV0lUSCBZT1VSIFBPSU5UIE9GIFZJRVcgQVQgRklSU1QgU08gWU9VIFdJTEwgTk9UIENBVENIIE9OIEFTIFRIRVkgQ0hBTkdFIFBMQU5TICB0aGUgSEdUViBleGFtcGxlMSlJVFMnIFlPVVIgRkFVTFQuIApOb3Qgd2hlbiB5b3UgaGF2ZSBwbGVudHkgb2Ygd29tZW4gd2FudGluZyB0byBwYXJ0aWNpcGF0ZS4uIApJZiBoZSBob2xkcyBvdXQsIGhpcyBjYXJlZXIgaXMgb3Zlci4gV2hpY2ggbWVhbnMsIGFnYWluLCB0aGF0IGl0IGRvZXNuIG1hdHRlciBob3cgbXVjaCBtb25leSBoZSB3YW50cy4uIApNY0h1Z2ggZm91cnRoIGluIHBva2VyIGV2ZW50Ckkgd2FzIGluIGEgdGVycmlibGUgbW9vZCBhbmQga2VwdCBhcG9sb2dpemluZyBmb3IgaG93IEkgd2FzIGFjdGluZyBhbmQgbXkgZGF1Z2h0ZXIgYmVoYXZpb3IgKHNoZSB3YXMgYmVpbmcgdmVyeSBicmF0dHkgYWxzbykuIEhlIHJlYXNzdXJlZCBtZSwgYnV0IGl0IGRpZG4gaGVscC4gSSBoYXRlZCBteXNlbGYga25vd2luZyB0b25pZ2h0IHdhcyB0aGUgc3BlY2lhbCBuaWdodCBhbmQgSSBjb3VsZG4gZXZlbiBhY3QgYXMgaWYgSSB3YXNuIG1pc2VyYWJsZS4uIApUaGUgcHJvYmxlbSB3aXRoIHlvdXIgcHJvcG9zZWQgc3lzdGVtIGlzIHRoYXQgdGhlcmUgYXJlIHRvbyBtYW55ICJub24gY2FsbHMiIGluIGVzc2VuY2UgICBwbGF5ZXJzIGdldHRpbmcgcXVlc3Rpb25zIHdyb25nICAgZm9yIHlvdSB0byBiZSBhYmxlIHRvIHN0b3AgdGhlIGdhbWUgZW5vdWdoIGFuZCBjaGVjayBvbiBhbGwgb2YgdGhlIHdyb25nIGFuc3dlcnMuIElmIFdpbGwgZGlkbiBjaGFsbGVuZ2UgaGlzIGJ1dGFuZSByZXNwb25zZSBhdCB0aGUgdGltZSwgaXQgc3RhbmRzLCBzbyBwbGF5ZXJzIGNhbiBiZSBjb25maWRlbnQgaW4gdGhlaXIgc2NvcmUgYXQgYW55IHRpbWUuIEFzc3VtaW5nIHNoZSB3YXMgaG9sZGluZyBvZmYgYW5zd2VyaW5nIGF0IHRoZSBlbmQgdG8gcHJvdGVjdCBoZXIgbGVhZCwgc2hlIGNvdWxkIGJlIGNvbmZpZGVudCB0aGF0IHN0cmF0ZWd5IHdhc24gZ29pbmcgdG8gZ2V0IHNjcmV3ZWQgdXAgYnkgYSBsYXRlciBydWxpbmcuClRoaXMgaXMgYmVpbmcgZHJlc3NlZCB1cCBhcyBhbiBhY3Qgb2YgdW5wYXJhbGxlbGVkIGdlbmVyb3NpdHksIHdoaWNoIGlzIHNjYXJjZWx5IHN1cnByaXNpbmcgZ2l2ZW4gdGhhdCB0aG9zZSB3aG8gZ2l2ZSwgZXZlbiBpZiB2ZXJ5IGxpdHRsZSwgYXJlIGFwdCB0byBmbGF0dGVyIHRoZW1zZWx2ZXMgYnkgbWFraW5nIGl0IGFwcGVhciBtb3JlIHRoYW4gaXQgaXMuIApPdmVydmlldyBmb3IgWm9tYmllQmlvbG9naXN0Cjk5JSBvZiBvdGhlciBzdWJzIGhhdmUgbm90aGluZyBsaWtlIHRoaXMgYW5kIHRoZWlyIGNvbW11bml0eSByZWxhdGlvbnMgYXJlIGJldHRlciBmb3IgaXQuIApCdXV1dXV1dXV1dXQsIHdpdGhvdXQgdGhhdCBiaXQgb2YgYmFja2dyb3VuZCBpbmZvcm1hdGlvbiwgdGhlIGFsaWVucyBSRUFMTFkgbG9vayBsaWtlIGJpb2xvZ2ljYWwgaHVtYW4gZmVtYWxlcyBvZiB2YXJ5aW5nIGRlZ3JlZXMgb2YgY2lzIGdlbmRlcm5lc3MsIGFuZCBhcmUgYWx3YXlzIHJlZmVycmVkIHRvIHVzaW5nIHNoZSBwcm9ub3Vucy4gU28gd2hhdCB5b3UgZ2V0IG91dCBvZiBpdCByZWFsbHkgZGVwZW5kcyBvbiB3aGF0IHlvdSBicmluZyB0byB0aGUgdGFibGUuIApIYWQgYSBmZXcgc2Vzc2lvbnMgYXQgNTAvMTAwIGFnYWluc3Qgc29tZSBiaWcgZHJvb2xlcnMsIGJ1dCBJIHNvbGQgYWN0aW9uLiBUaGUgb25seSB3YXkgdG8gZ2V0IGFjdGlvbiB3YXMgdG8gYmUgc3ByZWFkIGFjcm9zcyBtdWx0aXBsZSBuZXR3b3JrcyBiZWNhdXNlIG9uY2UgeW91ciBTTiB3YXMgb3V0ZWQsIG5vIG9uZSB3b3VsZCBwbGF5IHlvdSB1bmxlc3MgdGhleSB3ZXJlIHdheSBiZXR0ZXIgdGhhbiB5b3UuLiAKSXQgaGFzIHNob3duIGl0c2VsZiB0byBiZSBzZWxmIGNvcnJlY3RpbmcuIApXaGlsZSBtb3ZpbmcgeW91IHRocm91Z2ggdGhhdCByYW5nZSBvZiBtb3Rpb24sIHlvdSB3b3VsZCBiZSByZXNpc3RpbmcgaGltIGJ5IHByZXNzaW5nIHlvdXIgZm9vdCBkb3duIHRvd2FyZHMgdGhlIHRhYmxlIHRoZXJlYnkgY29udHJhY3RpbmcgeW91ciBoYW1zdHJpbmdzLiBXaHkgZG8gdGhpcz8gR3JlYXQgcXVlc3Rpb24hTWVyaWRpYW4gc3RyZXRjaGluZyBpcyBiYXNlZCBvbiB0aGUgcHJpbmNpcGFsIHRoYXQgc3RyZXRjaGluZyBhIGNvbnRyYWN0ZWQgbXVzY2xlIHdpbGwgYWN0dWFsbHkgc3RyZW5ndGhlbiBhbmQgZWxvbmdhdGUgdGhlIG11c2NsZSBtb3JlIHRoYW4gc3RyZXRjaGluZyBhIHJlbGF4ZWQgbXVzY2xlLiAKQnJ1Y2UgTGVlIDRrIFVsdHJhIEhEIFJlbWFzdGVyZCBCbHUgUmF5IDQgZGlzYyBCT1hTRVQgRW5nIFN1YiAuIEhPVyBCUlVDRSBMRUUgQ0hBTkdFRCBUSEUgV09STEQgICBORVcgU0VBTEVEIERWRC4gTW9yZSB0aGFuIGp1c3QgYSBiaW9ncmFwaHksIHRoaXMgZmlsbSBleHBsb3JlcyBCcnVjZSBMZWUncyBnbG9iYWwgaW1wYWN0IHRvIHNlZSBob3cgaGUgaGFzIGluZmx1ZW5jZWQgYWxsIGFyZWFzIG9mIHBvcHVsYXIgY3VsdHVyZSBpbmNsdWRpbmcgZml0bmVzcywgY2luZW1hLC4gCk9uZGVyd2VnIHZpZWxlbiBvb2sgZGUgZ3JvdGUgcmVjbGFtZWJvcmRlbiAoem9hbHMgaW4gQW1lcmlrYSEpIG9wIGVuIGRhbiB2b29yYWwgZGllIHZvb3IgSGVpbnoga2V0Y2h1cC4gRW4gaW4gZGUgZG9ycGplcyBpbiBkZSB3ZWlsYW5kZW4gemFnZW4gd2Ugb29rIGFsIGRlIGVlcnN0ZSBvcnRob2RveGUga2Vya2VuIG1ldCBodW4ga2VubWVya2VuZGUgdWllbmJvbGxlbi4gCkl0IG5vdCBqdXN0IFNwcmluZ2ZpZWxkLiBOZXcgY2FzaW5vcyBpbiBOZXcgWW9yaywgc3VjaCBhcyB0aGUgUmVzb3J0cyBXb3JsZCBDYXRza2lsbHMsIGFyZSBhbHNvIHJ1bm5pbmcgc29mdCwgQmFycm93IHNhaWQsIHN1Z2dlc3RpbmcgdGhlIGdhbWJsaW5nIG1hcmtldCBpbiB0aGlzIHBhcnQgb2YgdGhlIGNvdW50cnkgbWF5IGJlIHNhdHVyYXRlZC4gQ29tcGV0aXRpb24gaXMgb25seSBnb2luZyB0byBnZXQgbW9yZSBpbnRlbnNlIHRoZSBncmFuZGRhZGR5IG9mIHRoZSBuZXcgTm9ydGhlYXN0IGdhbWJsaW5nIHByb3BlcnRpZXMsIHRoZSAkMi42IGJpbGxpb24gRW5jb3JlIEJvc3RvbiBIYXJib3IsIGJ5IFd5bm4gUmVzb3J0cywgaXMgc2NoZWR1bGVkIHRvIG9wZW4gaW4gSnVuZS4gSSB0b3VyZWQgdGhhdCBjb25zdHJ1Y3Rpb24gc2l0ZSBzZXZlcmFsIHRpbWVzLiBZb3UgY291bGQgcGFyayA3NDdzIG9uIHRoZSBnYW1ibGluZyBmbG9vciBhdCBFbmNvcmU7IGl0IHdpbGwgYmUgb25lIG9mIHRoZSBiaWdnZXN0IHJvb21zIG9mIGFueSBraW5kIGluIEdyZWF0ZXIgQm9zdG9uLgpQcmV0dHkgdGhlIG9wcG9zaXRlLiAKU2hlIHdvcmtzIHNvIGZyZWFraW5nIGhhcmQgYW5kIHNoZSBjYW4gYmFyZWx5IHBheSBoZXIgc3R1ZGVudCBsb2Fucywgbm9uZXRoZWxlc3MgaGVyIGhlYWx0aCBpbnN1cmFuY2UuIElmIGhlciBoYXJkIHdvcmsgbWVhbnMgc2hlIGhhcyBhIHdheSB0byBzdXBwbGVtZW50IGhlciBpbmNvbWUvZ2V0IGZyZWUgZm9vZCwgYm9keSBwcm9kdWN0cywgYW5kIGNsb3RoaW5nLCBJIHRoaW5rIHRoYXQgZ3JlYXQuIApUaGlzIGlzIGEgc3Ryb25nIGhhbmQsIHBhcnRpY3VsYXJseSBpZiB0aGUgYm9hcmQgZG9lc24ndCBjb21lIHVwIHdpdGggYSBwb3NzaWJsZSBsb3cuW3QgdCB0IHRdIFBsYXkgZm91ciBoaWdoIGNhcmRzLCBldmVuIHdpdGggYSBwYWlyIG9yIHR3byBwYWlycy4gQXMgeW91IGdhaW4gZXhwZXJpZW5jZSBhbmQgbGVhcm4geW91ciBvcHBvbmVudHMnIHBsYXlpbmcgc3R5bGVzIGFuZCBoYW5kIHNlbGVjdGlvbiwgeW91IGNhbiBwbGF5IGEgZmV3IG1vcmUgc3RhcnRpbmcgaGFuZHMuIAozIHBvaW50cyAgc3VibWl0dGVkIDIgeWVhcnMgYWdvLiAKTWlnaHQgYmUgaGFyZCB0byBiZWxpZXZlLCBidXQgc29tZSBwZW9wbGUgd291bGQgcHJlZmVyIHRvIGdldCAyNGcgcHJvdGVpbiBmb3IgMTIwIGNhbG9yaWVzIChhbmQgcHJvYmFibHkgY2hlYXBlciB0aGFuIGVnZ3MpIHRoYW4gaW5jcmVhc2UgdGhlaXIgYWxyZWFkeSBoaWdoIGVnZyBpbnRha2UuCkhlIGVzdGFibGlzaGVkIHRoYXQgSGFycm9kIGhhZCB0YWtlbiBhIGNvbWJpbmVkIHRvdGFsIG9mICQxLDUzNCw2MjMgZnJvbSB0aGUgYWNjb3VudHMuIApBbWFudGVhIGhhdmUgYmVlbiBhdHRlbmRpbmcgdHJhZGUgc2hvd3MgYWNyb3NzIENhbmFkYSBhbmQgdGhlIFVuaXRlZCBTdGF0ZXMgYW5kIHdpbGwgYXR0ZW5kIGEgZm9vZCBleHBvIGluIEphcGFuLiAKRm9yIHBlb3BsZSB3aG8gYXJlbiBwcm9uZSB0byBwYXJhbm9pZCBpZGVhdGlvbiBvbiB0aGUgam9iLCB0aGUgZmluZGluZ3Mgd2lsbCBsaWtlbHkgY29uZmlybSB0aGVpciBleHBlcmllbmNlIGF0IHdvcmsuIFNlbmF0ZSBjbG9ha3Jvb20sIENvbGQgV2FyIGVyYSBFYXN0IEJlcmxpbiBhbmQgdGhlIHBhcmxvciBnYW1lIE1hZmlhLiBUaGUgYmVzdCBzdHJhdGVneSBmb3IgZGVhbGluZyB3aXRoIHN1Y2ggdHlwZXMgaXMgb2Z0ZW4gdG8gYXZvaWQgcHJvbG9uZ2VkIG9yIGluIGRlcHRoIGludGVyYWN0aW9ucyB3aXRoIHRoZW0gd2hlbmV2ZXIgcG9zc2libGUuICguKSBUaGF0IGlzLCB0aGUgdGFrZWF3YXkgZnJvbSB0aGlzIHN0dWR5IGlzIG5vdCBzbyBtdWNoIHRoYXQgeW91IGltYWdpbmluZyBhbGwgdGhvc2UgZXZpbGRvZXJzLCBnb3NzaXBzIGFuZCB0cm91YmxlbWFrZXJzIGF0IHRoZSBvZmZpY2UuIFRoZXkgbWlnaHQsIGluIGZhY3QsIGJlIGdvc3NpcGluZyBhYm91dCB5b3UsIGNyaXRpY2l6aW5nIHlvdXIgd29yayBvciBhdm9pZGluZyB5b3UuIEJ1dCB0aGV5IG1pZ2h0IGJlIGRvaW5nIGFsbCBvciBzb21lIG9mIHRoYXQgYmVjYXVzZSB5b3VyIGluaXRpYWwgYW5kIHVud2FycmFudGVkIGZlZWxpbmdzIG9mIHRocmVhdCBvciBleGNsdXNpb24gICBub3QgdG8gbWVudGlvbiB0aGUgbmVnYXRpdmUgYmVoYXZpb3IgdGhhdCBmb2xsb3dlZCAgIHByb21wdGVkIHRoZWlyIGFjdGlvbnMuCkpKYWNrczYxICA3IHBvaW50cyAgc3VibWl0dGVkIDE4IGhvdXJzIGFnbwogMTkgcG9pbnRzICBzdWJtaXR0ZWQgMTIgZGF5cyBhZ29JIGhhZCBhIHNpbWlsYXIgZXhwZXJpZW5jZS4gTXkgdW5pdmVyc2l0eSBpcyBkaXZpZGVkIGludG8gc2l4IHNjaG9vbHMgZm9yIHVuZGVyZ3JhZHMgKGpvdXJuYWxpc20sIGVkdWNhdGlvbiwgZW5naW5lZXJpbmcsIG11c2ljLCBhcnRzIGFuZCBzY2llbmNlcywgYW5kIGNvbW11bmljYXRpb24vdGhlYXRyZSkuIEkgYW0gaW4gdGhlIHNtYWxsZXN0IGFuZCBtb3N0IG9mdGVuIGZvcmdvdHRlbiBhYm91dCBvZiB0aGUgc2Nob29scy4gCk15IGJlc3QgcGllY2Ugb2YgYWR2aWNlIGlzIHRvIGZvY3VzIG9uIHRoZSB0ZWNobmljYWwgc2tpbGxzLCBidXQgYWxzbyBmaW5kIGEgd2F5IHRvIGRldmVsb3AgeW91ciBpbnRlcnBlcnNvbmFsIHdvcmtpbmcgcmVsYXRpb25zaGlwcy4gVGhlcmUgaXMgYSBodWdlIGRlbWFuZCBjdXJyZW50bHkgZm9yIGFuYWx5c3RzIHdobyBhcmUgc3Ryb25nIHRlY2huaWNhbGx5IGFuZCBzaW11bHRhbmVvdXNseSBhZGVwdCBhdCB3b3JraW5nIHdpdGggYSB3aWRlIHJhbmdlIG9mIHRlYW1zICh0aGluayBzYWxlcywgYWNjb3VudCBtYW5hZ2VtZW50LCBwcm9kdWN0LCBhcyB3ZWxsIGFzIGVuZ2luZWVyaW5nKS4uIApQb3dlcmZ1bCB2aWRlby4gSWYgd2UgZG9uIGFjdCBub3csIHZhcmlvdXMgY2hhaW4gcmVhY3Rpb25zIChzdWNoIGFzIHBlcm1hZnJvc3QgbWVsdGluZykgd2lsbCBtYWtlIGdsb2JhbCB3YXJtaW5nIHVuc3RvcHBhYmxlLiAKSXQgd2FzIG5pZ2h0IGFsbCB0aGUgdGltZSBhbmQgdGhlIGxpdHRsZSBjb2xvcmZ1bCBnbGltbWVycyB3ZXJlIGFsbCB0aGUgbGlnaHQgSSBoYWQsIGFsbCB0aGUgcGxhY2VzIG1lbHRlZCBpbnRvIGVhY2ggb3RoZXIgYW5kIGl0IHdhcyBxdWlldCBleGNlcHQgZm9yIGEgbG93IGh1bSBhbGwgb3Zlci4gSSBoYWQgdGhpcyBkZWVwIGxvdmUgZm9yIFlvb25naSwgSSBrbmV3IGhlIHdhcyBzb21ld2hlcmUgYW5kIGluIHBhaW4sIGJ1dCB0aGVyZSB3YXMgbm8gZGlyZWN0aW9uIG9yIHBvaW50IGluIGFueXRoaW5nIEkgY291bGQgZG8uIEkgdGhvdWdodCBJIHNhdyBoaW0gaW4gb25lIG9mIHRoZXNlIGFiYW5kb25lZCBpbmR1c3RyaWFsIGJ1aWxkaW5ncywgbHlpbmcgZG93biwgYnV0IHRoZSBsaWdodHMgZ3JldyB1bmJlYXJhYmx5IHNoYXJwIGFuZCBJIGxvc3QgbXkgd2F5LiAKQWZ0ZXIgYXNzZXNzaW5nIGFuYWx5dGljYWwgc2tpbGxzIGFuZCBzdHJhdGVnaWMgaW50ZWxsaWdlbmNlLCB3ZSByYW5kb21seSBhc3NpZ25lZCBlYWNoIHRyYWRlciB0byBvbmUgb2Ygb3VyIG1hcmtldHMsIGxldHRpbmcgdGhlbSBjb21wZXRlIGZvciBjYXNoIHByb2ZpdHMuIFRoZSBtYXJrZXRzIHJlc2VtYmxlZCBtb2Rlcm4gc3RvY2sgbWFya2V0cy4gCkEgY291cGxlIHRoaW5ncyB0byB3b3JrIG9uIHRoYXQgSSB0aGluayBhbGwgdGllIGluIHRvZ2V0aGVyLiAKRWRpdDogVGhlcmUncyByZWFsbHkgbm8gbmVlZCB0byBjYWxsIHRoZSBwb2xpY2UsIHRoZXkgc2xlZXAgaW4gdGhlIHBhcmtpbmcgbG90IG5leHQgZG9vciB0byB0aGlzIGJ1aWxkaW5nIGV2ZXJ5ZGF5IGZyb20gMzowMCA0OjMwLiBJIGFsc28gY2FsbGVkIHRvIGhhdmUgdGhlbSBlc2NvcnQgYSBkaXNncnVudGxlZCBleGFtcGxlIGVtcGxveWVlIHdobyBoYWQgc29tZSByYXRoZXIgaGVpbm91cyBjcmltaW5hbCBjaGFyZ2VzIGFuZCBJIGNvdWxkbid0IGV2ZW4gZ2V0IGEgcGhvbmUgYW5zd2VyZWQgYXQgYW55IG9mIHRoZSBmb3VyIHByZWNpbmN0cyBJIGNhbGxlZC4gV2hlbiBJIGNhbGxlZCA5MTEgdGhleSBzYWlkIGl0IHdhc24ndCBhbiBlbWVyZ2VuY3kuLiAKV2UgbWF5IGNvbGxlY3QgcGF5bWVudCBpbmZvcm1hdGlvbiwgc3VjaCBhcyB5b3VyIGNyZWRpdCBjYXJkIG51bWJlciBhbmQgZXhwaXJhdGlvbiBkYXRlLCB3aGVyZSBhcHByb3ByaWF0ZSB0byBwcm9jZXNzIGEgZmluYW5jaWFsIHRyYW5zYWN0aW9uIHlvdSBoYXZlIHJlcXVlc3RlZC4uIApXZSB3ZXJlIHdvcnJpZWQgaGUgbWlnaHQgbm90IGdpdmUgaGVyIGFzIG11Y2ggbG92ZSBhcyBzaGUgdXNlZCB0byBidXQgdGhleSBiZWVuIGdvaW5nIGZvciBoaWtlcyBhbmQgY3VkZGxpbmcgYW5kIGhlIGZpbmFsbHkgcmVhbGl6ZWQgd2hhdCBhbiBhd2Vzb21lIGRvZyBzaGUgaXMuIEhlIG1hZGUgaXQgdGhyZWUgeWVhcnMsIGFuZCBhbHdheXMgc2FpZCBoaXMgZ29hbCB3YXMgdG8gc2VlIG1lIGdldCB0byBLaW5kZXJnYXJ0ZW4uIEhlIG1hZGUgaXQgdGhyb3VnaCBteSB3aG9sZSBLaW5kZXJnYXJ0ZW4geWVhciBhbmQgaGFsZiBvZiBmaXJzdCBncmFkZSAgIEkgc3RpbGwgcmVtZW1iZXIgaGltIG1ha2luZyBtZSBwb3AgdGFydHMgZm9yIGJyZWFrZmFzdCBhbmQgYm9sb2duYS9tdXN0YXJkIHJvbGwgdXBzIGZvciBsdW5jaCwgZXZlbiB3aGVuIHRoZSBjaGVtbyBhbmQgc3VyZ2VyaWVzIGhhZCBoaW0gYXQgaGlzIHdvcnN0LiAKQWZ0ZXIgeW91IGdvdCB0aGVtIGFsbCwgeW91IGdldCBub3RoaW5nIChidXQgY2VydHMgYW5kIElTTyA0KSBmb3IgbG9vc2luZyBhbmQgYmV0dGVyIHN0dWZmIGZvciB3aW5uaW5nIG1vcmUgZnJlcXVlbnRseS5Lb29sYklhZGUgIDEyIHBvaW50cyAgc3VibWl0dGVkIDEyIGRheXMgYWdvR2V0IGEgcmVhdmVyIHdpdGg6IFF1aWNrIHJlY2hhcmdlIGZ1ZWwgdGFuaywgc3RlYWx0aCwgcmFjZXIgMywgdm9ydGVrIHJvdGFyeSwgZmlyZSBzdXByZXNzaW9uLiBUaGVuIGZseSB0byBmbGlnaHQgY2VpbGluZyBhYm92ZSB0aGUgZmlnaHQgd2l0aCB0aGUgQTJHIHNoaXR0ZXJzLiAKTmF0dXJhbGx5LCBBcHBsZSdzIGNvbXBldGl0b3JzIGFyZW4ndCB0b28gaGFwcHkgYWJvdXQgdGhlIHNpdHVhdGlvbiwgYmVjYXVzZSBpZiBzdWNoIGZlYXR1cmVzIGFyZSBjb21tb25wbGFjZSwgaXQgaW1wbGllcyB0aGF0IEFwcGxlJ3MgdGVjaG5vbG9neSBpcyB0aGUgc3RhbmRhcmQgZm9yIHNtYXJ0cGhvbmVzIGFuZCB0YWJsZXRzLCB3aGV0aGVyIG9yIG5vdCBjb25zdW1lcnMgYW5kIHN0YXRpc3RpY3MgYWdyZWUuIEluIG90aGVyIHdvcmRzLCB5b3VyIG5ldyBjYXIgaXMgYWxsIHNldCB1cCB0byBjb21tdW5pY2F0ZSB3aXRoIHRoZSBBcHBsZSBkZXZpY2VzIHRoYXQgdGhlIGF1dG8gbWFudWZhY3R1cmVyIGFzc3VtZXMgbW9zdCBwZW9wbGUgaGF2ZSwgYW5kIGl0IGRvZXNuJ3QgcmVhbGx5IG1hdHRlciB3aGV0aGVyIG9yIG5vdCBzdWNoIGFuIGFzc3VtcHRpb24gaXMgY29ycmVjdC4gClRha2UgY2FyZSBvZiB5b3Vyc2VsZiBpbiB0aGlzIGRpZmZpY3VsdCB0aW1lLiBJIGFtIHNvLCBzbyBzb3JyeSBmb3IgeW91ciBsb3NzZXMuLiAKR2Vvcmdlc29uIEwuICV2aWxsIGNvbnRpbnVlIHRocm91Z2ggTm92LiAKQW5kIFdhbHNoLCBWLiAyMDE3LiBHdW5zbGluZ2VycywgcG9rZXIgcGxheWVycywgYW5kIGNoaWNrZW5zIDI6IERlY2lzaW9uIG1ha2luZyB1bmRlciBwaHlzaWNhbCBwZXJmb3JtYW5jZSBwcmVzc3VyZSBpbiBzdWJlbGl0ZSBhdGhsZXRlcy4gSW46IFdpbHNvbiwgTS4sIFdhbHNoLCBWLiAKSG93ZXZlciBJIGFtIHByZXR0eSB1bmRlcndoZWxtZWQgd2l0aCB3aGF0IHRoZSBwcm9kdWN0IGlzIGxvb2tpbmcgbGlrZSBpdCB0dXJuIG91dCB0byBiZSwgc28gSW0gaG9waW5nIERpY2Ugd2lsbCB1c2UgdGhpcyBuZXcgdGltZSB3aXRoIHRoZSBkZWxheSB0byByZWZvY3VzIHRoZWlyIGVmZm9ydHMgZnJvbSAibWFya2V0aW5nIiB0byBkZXZlbG9waW5nLiBUaGUgZ2FtZSBsYWNrcyBhbnkgc291bCAsIGFuZCBpdCBpc24gYmVjYXVzZSBvZiB0aGUgZmFjdCBpdCBpbiBiZXRhOyB0aGUgQkYzIGJldGEgaGFkIGEgc291bC4gClN0dXBhayB3YXMgYSB3aGVlbGVyLCBkZWFsZXIgYW5kIGdhbWJsZXIgb2YgdGhlIGZpcnN0IG9yZGVyLiBIZSB3b24gYSAkMSBtaWxsaW9uIHdhZ2VyIG9uIFN1cGVyIEJvd2wgWFhJSUkgYW5kIGEgV29ybGQgU2VyaWVzIG9mIFBva2VyIGNoYW1waW9uc2hpcCBicmFjZWxldCwgYm90aCBpbiAxOTg5LCBuZWFybHkgZGllZCBpbiBhIG1vdG9yY3ljbGUgY3Jhc2ggaW4gMTk5NSwgYW5kIGxvc3QgYSBiaWQgaW4gMjAwNiB0byBiZWNvbWUgbGlldXRlbmFudCBnb3Zlcm5vciBvZiBOZXZhZGEuCg==|<---