<!DOCTYPE html>
<html class="no-js" lang="en-US">
 <head>
  <meta charset="utf-8"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <title>
   [area1][mkey1][keyword1][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="width=device-width, initial-scale=1" name="viewport"/>
 </head>
 <body class="page-template page-template-template-custom page-template-template-custom-php page page-id-3788 page-child parent-pageid-814 boss">
  <noscript>
   <iframe height="0" src="//www.googletagmanager.com/ns.html?id=GTM-M6F94N" style="display:none;visibility:hidden" width="0">
   </iframe>
  </noscript>
  <meta content="QiuHPO75GhVOxJmQ7-d0YNYur_QXFlfLN4p4hHzRwRg" name="google-site-verification">
   <header role="banner">
    <div class="navbar navbar-inverse navbar-static-top">
     <div class="container">
      <div class="row">
       <div class="col-sm-3">
        <div class="navbar-header">
         <button class="navbar-toggle" data-target=".navbar-collapse" data-toggle="collapse" type="button">
          <span class="icon-bar">
           [ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[search]
          </span>
          <span class="icon-bar">
           [search][ahref][search][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><li>[ahref]</li>[link][link]<li>[search]</li>[ahref][link]
          </span>
          <span class="icon-bar">
           <li>[ahref]</li><li>[link]</li><li>[search]</li>[ahref][ahref]
          </span>
         </button>
         <div class="hidden-xs">
          [ahref]
          
         </div>
         <div class="visible-xs">
         </div>
        </div>
       </div>
       <div class="col-sm-9">
        <div class="navbar-collapse collapse pull-right" role="navigation">
         <ul class="nav navbar-nav pull-right" id="menu-primary-navigation">
          <li class="menu-data">
           [ahref]
           
          </li>
          <li class="retroactive menu-surveys">
           <a href="/surveys/">
            Surveys
           </a>
          </li>
          <li class="menu-instruments">
           [link]
           
          </li>
          <li class="menu-collaboration">
           <a href="/collaboration/">
            Collaboration
           </a>
          </li>
          <li class="menu-results">
           [ahref]
           
          </li>
          <li class="menu-education">
           [link]
           
          </li>
          <li class="menu-the-future">
           [ahref]
           
          </li>
          <li class="menu-contact">
           <a href="/contact/">
            Contact
           </a>
          </li>
         </ul>
        </div>
       </div>
      </div>
      <div class="row">
       <div class="col-sm-3 text-left">
        <span class="data-release">
         This is Data Release 15.[ahref][search]<li>[link]</li>[link]<li>[link]</li>[ahref][search]
        </span>
       </div>
       <div class="col-sm-9 col-md-4 col-md-offset-5 text-right">
        <form action="/" class="search-form form-inline" method="get" role="search">
         <div class="input-group">
          <label class="hide">
           Search for:
          </label>
          <span class="input-group-btn">
           <button class="search-submit btn btn-default" type="submit">
            Search
           </button>
          </span>
         </div>
        </form>
       </div>
      </div>
     </div>
    </div>
   </header>
   <div class="wrap container" role="document">
    <div class="content row">
     <ul class="nav nav-pills nav-justified" id="menu-surveys">
      <li class="menu-apogee-1">
       [ahref]
       
      </li>
      <li class="menu-apogee-2">
       [ahref]
       
      </li>
      <li class="active current_page_item menu-boss">
       [ahref]
       
      </li>
      <li class="menu-eboss">
       [ahref]
       
      </li>
      <li class="menu-manga">
       [link]
       
      </li>
      <li class="menu-marvels">
       [link]
       
      </li>
      <li class="menu-segue">
       <a href="/surveys/segue/">
        SEGUE
       </a>
      </li>
     </ul>
     <main class="main col-sm-12" role="main">
      <h1 id="overview">
       <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
      </h1>
      <div class="subtitle">
       The Baryon Oscillation Spectroscopic Survey (BOSS)
      </div>
      <div data-context="main" data-extendpage="false" data-scrollto="75" data-selectors="h2,h3" data-showandhide="false" data-showandhideonscroll="false" id="toc-wrapper">
       <div class="tocify-title">
        [ahref]
        
       </div>
       <div class="collapse in " id="toc-body">
        <div data-context="main" data-extendpage="false" data-scrollto="75" data-selectors="h2,h3" data-showandhide="false" data-showandhideonscroll="false" id="toc">
        </div>
       </div>
      </div>
      <div class="sdss-group-wrapper col-md-12 col-xs-12 ">
       <div class="panel panel-default sdss-group ">
        <div class="panel-body">
         <div class="sdss-wrapper sdss-fig-right col-md-4 col-xs-12 ">
          <div class="panel panel-default sdss-figure">
           <div class="panel-body">
           </div>
           <div class="panel-body caption">
            An illustration of the concept of baryon acoustic oscillations, which are imprinted in the early Universe and can still be seen today in galaxy surveys like BOSS.
            <br/>
            (Illustration courtesy of Chris Blake and Sam Moorfield.)
           </div>
          </div>
         </div>
         <p>
          The SDSS's Baryon Oscillation Spectroscopic Survey (BOSS) mapped the spatial distribution of luminous red galaxies (LRGs) and quasars to detect the characteristic scale imprinted by baryon acoustic oscillations in the early Universe. Sound waves that propagate in the early Universe, like spreading ripples in a pond, imprint a characteristic scale on cosmic microwave background fluctuations. These fluctuations have evolved into today's walls and voids of galaxies, meaning this baryon acoustic oscillation (BAO) scale (about 150 Mpc) is visible among galaxies today. This concept is illustrated on the right (some of the relative scales have been exaggerated for illustration purposes).<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[link]</li>[search]<li>[link]</li>[ahref]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[search]</li><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link][ahref]<li>[ahref]</li><li>[link]</li><li>[search]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][search]<li>[ahref]</li>
         </p>
         <div class="sdss-wrapper sdss-fig-left col-md-4 col-xs-12 ">
          <div class="panel panel-default sdss-figure">
           <div class="panel-body">
           </div>
           <div class="panel-body caption">
            Comparison of the power spectrum of SDSS-II LRGs and BOSS DR9 CMASS galaxies. Solid lines show the best-fit models. From
            <a href="/abs/2012MNRAS.427.3435A" target="_blank">
             Anderson et al. (2012)
            </a>
            .
           </div>
          </div>
         </div>
         <p>
          These baryon acoustic oscillations have now been measured in the distribution of galaxies as illustrated on the left, where we show the power spectrum of galaxy fluctuations as a function of scale (shown here as a wave number, k). We have removed the smooth component to more clearly show the oscillations, which are the BAO signal of interest. The two panels show the previous results from SDSS-II DR7 LRGs (top) and the new results from the z = 0.55 BOSS DR9 sample (CMASS, bottom). The reduction in errors and the better fit to the cosmological model (solid line) of the BOSS data compared to the SDSS-II is clearly evident.
         </p>
         <p>
          Using the acoustic scale as a physically calibrated ruler, BOSS has determined the angular diameter distance with a precision of 1% at redshifts z = 0.3 and z = 0.55 using the distribution of galaxies. BOSS has also measured the distribution of quasar absorption lines at z = 2.5, yielding a measurement of the angular diameter distance at that redshift to an accuracy of 1.5%, and measured the cosmic expansion rate H(z) with 1-2% precision at the same redshifts. These measurements provide demanding tests for theories of dark energy and the origin of cosmic acceleration.[ahref]<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[link][search]
         </p>
         <p>
          In addition to constraining cosmological models, BOSS has delivered an outstanding sample of galaxies and quasars ideally suited to probing the formation and evolution of galaxies in the Universe. For example, we show below an example z = 0.56 galaxy spectrum for early BOSS data, which shows the level of spectral detail on these intermediate redshift galaxies. By studying the various key absorption features in this spectrum (labeled and shown with red tickmarks), we can estimate the age and metallicity of the stars in these galaxies, and thus determine how and when they formed. The sheer size of BOSS, coupled with the BOSS spectrograph resolution, is greatly enhancing this area of science.[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
         </p>
         <p>
          <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
         </p>
        </div>
       </div>
      </div>
      <div class="sdss-group-wrapper col-md-12 col-xs-12 ">
       <div class="panel panel-default sdss-group ">
        <div class="panel-body">
         <div class="sdss-wrapper sdss-story-right col-md-6 col-xs-12 ">
          <div class="panel panel-default sdss-story ">
           <div class="panel-heading">
            <h3>
             [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
            </h3>
           </div>
           <div class="panel-body">
            <a href="/data/">
             Data Release 15
            </a>
            is the latest public release of BOSS spectra.
            [link]
            
            was the first public release of BOSS spectra. Prior to that,
            [ahref]
            
            included all BOSS imaging.
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </main>
    </div>
   </div>
  </meta>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0255
  </b>
 </body>
</html>
<p>
 There are some
 [link]
 
 for accessing and viewing SDSS data available on this website.
</p>
<p>
 There are descriptions of the
 [link]
 
 for
 <a href="/data/algorithms/boss_galaxy_ts/">
  galaxies
 </a>
 and
 [ahref]
 
 available on the SDSS website too.
</p>
<div class="sdss-wrapper sdss-fig-right col-md-12 col-xs-12 ">
 <div class="panel panel-default sdss-figure">
  <div class="panel-body">
   [ahref]
   
  </div>
  <div class="panel-body caption">
   A randomly selected spectrum from the BOSS data, showing absorption (red) and emission (blue) lines. Click on the image to go to this object's page on SkyServer.
  </div>
 </div>
</div>
<div class="sdss-wrapper sdss-story-left col-md-6 col-xs-12 ">
 <div class="panel panel-default sdss-story ">
  <div class="panel-heading">
   <h3>
    [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
   </h3>
  </div>
  <div class="panel-body">
   <ul>
    <li>
     Dark time observations
    </li>
    <li>
     Fall 2009 - Spring 2014
    </li>
    <li>
     1,000-fiber spectrograph, resolution R~2000
    </li>
    <li>
     Wavelength: 360-1000 nm
    </li>
    <li>
     10,000 square degrees
    </li>
    <li>
     Redshifts of 1.5 million luminous galaxies to z = 0.7
    </li>
    <li>
     Lyman-α forest spectra of 160,000 quasars at
     <br>
      <li>[ahref]</li><li>[link]</li><li>[search]</li>[search]<li>[ahref]</li><li>[link]</li><li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]
     </br>
     redshifts 2.2 < z < 3
    </li>
   </ul>
  </div>
 </div>
</div>
<div class="sdss-wrapper sdss-story-left col-md-6 col-xs-12 ">
 <div class="panel panel-default sdss-story ">
  <div class="panel-heading">
   <h3 id="vac">
    [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
   </h3>
  </div>
  <div class="panel-body">
   Galaxy and quasar value-added catalogs based on results from DR12 BOSS papers are available to the public on the SDSS website.
  </div>
 </div>
</div>
<ul>
 <li>
  [ahref]
  
  <ul>
   <li>
    <a href="/data/spectro/galaxy_portsmouth/">
     Portsmouth Group
    </a>
   </li>
   <li>
    [link]
    
   </li>
   <li>
    <a href="/data/spectro/galaxy_granada/">
     Granada Group
    </a>
   </li>
   <li>
    [ahref]
    
   </li>
  </ul>
 </li>
 <li>
  [link]
  
 </li>
</ul>
<p>
 <div class="sdss-wrapper sdss-story-right col-md-6 col-xs-12 ">
  <div class="panel panel-default sdss-story ">
   <div class="panel-heading">
    <h3>
     [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
    </h3>
   </div>
   <div class="panel-body">
    <p>
     BOSS has submitted and/or published several papers which are listed on the
     [link]
     
     page.
    </p>
   </div>
  </div>
 </div>
</p>
<div class="clearfix">
</div>
<div class="totop-wrapper">
 <span class="well well-sm">
  [search][search]<li>[search]</li>[ahref]<li>[ahref]</li><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
 </span>
</div>
<div class="clearfix">
</div>
<div class="sitemap">
 <div class="container">
  <div class="row">
   <div class="col-xs-12 col-md-8">
    <div class="widget_text col-xs-12 col-sm-4 col-md-3 col-lg-4 column">
     <h5>
      Explore
     </h5>
     <div class="textwidget custom-html-widget">
      <ul class="nav nav-pills nav-stacked">
       <li>
        <a href="/data/">
         Data Release
        </a>
       </li>
       <li>
        [link]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div class="widget_text col-xs-12 col-sm-4 col-md-3 col-lg-4 column">
     <h5>
      Learn
     </h5>
     <div class="textwidget custom-html-widget">
      <ul class="nav nav-pills nav-stacked">
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="/instruments/">
         Instruments
        </a>
       </li>
       <li>
        <h2>
         [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
        </h2>
        [ahref]
        
       </li>
       <li>
        <a href="/science/">
         Results &amp; Science
        </a>
       </li>
      </ul>
     </div>
    </div>
    <div class="widget_text col-xs-12 col-sm-4 col-md-3 col-lg-4 column">
     <h5>
      About
     </h5>
     <div class="textwidget custom-html-widget">
      <ul class="nav nav-pills nav-stacked">
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="/collaboration/#image-use">
         Image Use Policy
        </a>
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [link]
        
       </li>
      </ul>
     </div>
    </div>
   </div>
   <div class="col-xs-12 col-md-4">
    <h5>
     SDSS is supported by
    </h5>
    <div class="textwidget custom-html-widget">
     <div class="row">
      <div class="col-xs-4 col-lg-4 col-xs-offset-1 col-lg-offset-1 column">
       <a href="/">
       </a>
      </div>
      <div class="col-xs-4 col-lg-4 col-xs-offset-2 col-lg-offset-2 column">
       [link]
       
      </div>
     </div>
     <small>
      Funding for SDSS is provided by the Alfred P. Sloan
Foundation, the Participating Institutions, and the
U.S. Department of Energy Office of Science.
     </small>
    </div>
   </div>
  </div>
 </div>
</div>
<div class="content-info" id="footer" role="contentinfo">
 <div class="social">
  <div class="container">
   <section class="widget_text widget custom_html-2 widget_custom_html">
    <div class="textwidget custom-html-widget">
     <div class="row">
      <div class="col-lg-6">
       <p>
        Copyright 2018 Sloan Digital Sky Survey<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search][ahref]<li>[search]</li><li>[ahref]</li>
       </p>
      </div>
      <div class="col-lg-6">
       <div class="pull-right">
        <p>
         Connect with us:
         [link]
         
         <a href="/sdssurveys">
          <i class="fa fa-twitter-square fa-2x">
          </i>
         </a>
         [ahref]
         
        </p>
       </div>
      </div>
     </div>
    </div>
   </section>
  </div>
 </div>
</div>
