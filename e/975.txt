--->|SSBzZWUgc3RvcmllcyBldmVyeSBkYXkgYWJvdXQgdGVhY2hlcnMgd2hvIGhhdmUgcmVsYXRpb25zaGlwcyB3aXRoIHN0dWRlbnRzICAgaW4gdGhlIG5ld3MsIGluIG1vdmllcy4gCkJ1dGNoMTIzICAxIHBvaW50ICBzdWJtaXR0ZWQgMTEgbW9udGhzIGFnbwpJIG1lYW4gSSBoYWQgc29tZSBuZWlnaGJvcnMgd2l0aCBhIG5ldyBiYWJ5IHdobyB3YXMsIHlvdSBrbm93LCBkb2luIGJhYnkgdGhpbmdzIGNyeWluZyBhdCBhbGwgaG91cnMuIFBvb3IgbGl0dGxlIHRoaW5nIGp1c3QgbG92ZWQgd2FraW5nIHVwIGF0IDMgYW5kIGRpZG4gc2V0dGxlIGRvd24gdW50aWwgOCwgSSBzdGlsbCBoYWQgYSBsaXR0bGUgImJhYnkgc29vdGhpbmciIHRoaW5nIGZyb20gd2hlbiBteSBleCBtb3ZlZCBvdXQgd2l0aCBvdXIgc29uLCBpdCB3YXMgc3VwcG9zZWQgdG8gaGVscCBjYWxtIGJhYmllcyBkb3duLiBPbmUgbW9ybmluZyBhZnRlciBhIHJvdWdoIG5pZ2h0IEkgZHVnIGl0IG91dCBhbmQganVzdCBrbm9ja2VkIG9uIHRoZWlyIGRvb3IsIHRoZSB3aWZlL2dpcmxmcmllbmQgb3BlbmVkIGFuZCByZWNvZ25pemVkIG1lIGZyb20gbmV4dCBkb29yIGFuZCBzdGFydGVkIHRvIGFwb2xvZ2l6ZSwgSSBoZWxkIHVwIGEgaGFuZCwgIk5haCwgYmFiaWVzIGRvIGJhYnkgdGhpbmdzLiAKRW1vLCBwb3AgcHVuaywgYW5kIHBvc3QgaGFyZGNvcmUgdHVuZXMgYXJlIG9uIGRlY2sgZm9yIHRoZSBldmVuaW5nLCB3aGljaCB3aWxsIHN0cmV0Y2ggdGlsbCB0aGUgd2VlIGhvdXJzIG9mIEZyaWRheSBtb3JuaW5nLiAkMyBjb3Zlci4gSWYgeW91J3JlIGx1Y2t5LCB5b3UnbGwgcmVjZWl2ZSBhIGxpdHRsZSBleHRyYSBzdXJwcmlzZTogT25lIGRlbGl2ZXJ5IGN1c3RvbWVyIHdpbGwgZ2V0IGEgc2lsdmVyIExPVkUgbmVja2xhY2UgZnJvbSBTZXJtYW5pYSBKZXdlbHJ5LiAKTWNndWdhbmF0b3IgdQpET1VNQSwgTXIgSmFtZXMgRG9uYWxkIChKaW0pICAgTXIuIEphbWVzIERvbmFsZCAiSmltIiBEb3VtYSBvZiBJbXBlcmlhbCBTdHJlZXQsIERlbGhpLCBwYXNzZWQgYXdheSBzdWRkZW5seSBhdCB0aGUgTm9yZm9sayBHZW5lcmFsIEhvc3BpdGFsLCBTaW1jb2Ugb24gVHVlc2RheSwgQXByaWwgMTIsIDIwMTEgYXQgdGhlIGFnZSBvZiA1MyB5ZWFycy4gSmltIHdhcyBhbiBhdmlkIGZvbGxvd2VyIG9mIE5hc2NhciBBdXRvIFJhY2luZyBhbmQgYWx3YXlzIGVuam95ZWQgYSBnb29kIGdhbWUgb2YgUG9rZXIgd2l0aCBoaXMgZnJpZW5kcy4gTG92aW5nIGh1c2JhbmQgb2YgR2VvcmdpbmEgRG91bWEgKG5lZTogSGFycmluZ3RvbikgZm9yIG92ZXIgMzQgeWVhcnMuIENoZXJpc2hlZCBmYXRoZXIgb2YgVGFtbXkgYW5kIE5lYWwgKEphY2tpZSkuIEJlbG92ZWQgc29uIG9mIE1hcnRoYSBhbmQgdGhlIExhdGUgSGVucnkgRG91bWEuIE11Y2ggbG92ZWQgYnkgc2lzdGVycywgSmVhbmV0dGUgSGF3a2lucyAoVGVkKSwgU3lsdmlhIEhvbHRyb3AgKEdlcnJ5KSwgSm9hbm5lIERvcmEgYW5kIGJ5IGhpcyBicm90aGVyIEdlb3JnZS4gU29uIGluIGxhdyBvZiBFbGl6YWJldGggRG91Y2V0dGUgKEhhcnJpbmd0b24pIGFuZCBicm90aGVyIGluIGxhdyBvZiBLYXRoeSBFd2luZyAoU2NvdHQpLCBMaW5kYSBDb2xlIChGbG95ZCksIE1hcmllIE5pY2tzIChSb2IpLCBUcnVkeSBIYXJyaW5ndG9uLCBTdWUgTG91a3MgKERhcnJlbiksIEVkIEhhcnJpbmd0b24gKEFuaXRhKSBhbmQgUm9iYmllIEhhcnJpbmd0b24uIEFsc28gbG92ZWQgYnkgZG96ZW5zIG9mIG5pZWNlcywgbmVwaGV3cyBhbmQgZ3JlYXQgbmllY2VzIGdyZWF0IG5lcGhld3MuIHdpdGggTFBNLiBDaGVyeWwgRml0Y2ggb2ZmaWNpYXRpbmcuIEludGVybWVudCBpbiBMeW5udmlsbGUgQ2VtZXRlcnkgZm9sbG93ZWQgYnkgYSBnYXRoZXJpbmcgYXQgdGhlIERlbGhpIEh1bmdhcmlhbiBIYWxsLiBJbiBsaWV1IG9mIGZsb3dlcnMsIE1lbW9yaWFsIERvbmF0aW9ucyB0byB0aGUgTm9yZm9sayBHZW5lcmFsIEhvc3BpdGFsIEZvdW5kYXRpb24gb3IgdGhlIENoYXJpdHkgb2YgeW91ciBjaG9pY2Ugd2lsbCBiZSBncmF0ZWZ1bGx5IGFwcHJlY2lhdGVkIGJ5IHRoZSBmYW1pbHkuMTAwMTkxMDYKVGhhbiB3ZSB3b3VsZCBrZWVwIGNvbWluZyBiYWNrIHdpdGggd2hhdCB0aGV5IGFza2VkIGZvci4gCkJ1dCBhbGwgb2YgdGhhdCB0byBzYXksIG5vdyBJIGZlZWwgbGlrZSBJJ3ZlIHN0b2xlbiBmcm9tIG15IGRhdWdodGVyIGJ5IGFsbG93aW5nIHRoZW0gc28gbWFueSB0aGluZ3MuCjE1IHBvaW50cyAgc3VibWl0dGVkIDI1IGRheXMgYWdvSG9uZXN0bHkgd2hpbGUgdGhleSBtb3N0IGxpa2VseSB3b24gZ2V0IGFueSB3aW5zIGdvaW5nIHVwIGFnYWluc3QgQmxhY2twaW5rIHVubGVzcyB0aGUgc29uZyBpcyBhIGZ1Y2tpbmcgaW5zYW5lIG91dCBvZiB0aGlzIHdvcmxkIGxldmVsIGJhbmdlciBhbmQgQmxhY2twaW5rIGRvZXNuIG1lYXN1cmUgdXAgdG8gdGhlaXIgcGFzdCByZWxlYXNlcyAob3IgQlAgc29uZyBjb21lcyBvdXQgYSB3ZWVrIG9yIHR3byBsYXRlciksIEkgdGhpbmsgdGhlaXIgZmFuYmFzZSBpcyBiaWcgZW5vdWdoIHRoYXQgdGhleSBzdGlsbCBwcm9iYWJseSBkbyBtb3JlIG9yIGxlc3MgZmluZS4gTm90IGFtYXppbmcsIGJ1dCBiZXR0ZXIgdGhhbiBhIGxvdCBvZiBvdGhlciBncm91cHMgd291bGQgaW4gdGhhdCBwb3NpdGlvbi5QZW9wbGUgYWxzbyBmaXhhdGUgYSBsb3Qgb24gbXVzaWMgc2hvdyB3aW5zIGJ1dCBwcm9tb3RpbmcgYXQgdGhlIHNhbWUgdGltZSBhcyBhIGh1Z2UgZ3JvdXAgY2FuIG1heWJlIGJlIGEgZ29vZCB0aGluZyBkZXNwaXRlIGhhdmluZyB6ZXJvIGNoYW5jZSBvZiB3aW5uaW5nOiBhIGxvdCBvZiBwZW9wbGUgd2hvIHdhdGNoIGZvciBCbGFja3Bpbmsgb3IgRVhPIG9yIHdoYXRldmVyIHdpbGwgc2l0IHRocm91Z2ggdGhlIHByZWNlZGluZyBhY3RzIGFuZCBtaWdodCBsaWtlIGl0IGVub3VnaCB0byBkb3dubG9hZCB0aGUgc2luZ2xlLiAKVGhhdCByZWFsbHkgd2hlcmUgeW91IGhhdmUgdGhlIHVwcGVyIGhhbmQgaW4gdGhpcyBhcmd1bWVudC4gWW91IHdlbnQgaW50byB0aGlzIHJlbGF0aW9uc2hpcCB3aXRoIHRoZSBiZWxpZWYgdGhhdCB5b3Ugd2VyZSByYWlzaW5nIGtpZHMgYXMgb25lIGNvbnZlbnRpb25hbGx5IGRvZXMuIFRoYXQgc2hlIG5vdyB3YW50cyBzb21ldGhpbmcgZGlmZmVyZW50IGlzIHZpb2xhdGluZyB0aGF0IGltcGxpY2l0IGFncmVlbWVudC4gT2YgY291cnNlLCB0aGlzIGFyZ3VtZW50IGlzbiBnb2luZyB0byB3aW4gbW9zdCBwZW9wbGUgb3Zlciwgc28geW91ciBiZXN0IGNvdXJzZSBvZiBzdHJhdGVneSBpcyB0byB1c2UgdGhhdCBhcyBhIG1lYW5zIG9mIGdlbmVyYXRpbmcgc29tZSBzb3J0IG9mIGNvbXByb21pc2UuCkRpZSBHYXJuZWxlbiB1bmQgZGllIEJsdXR3dXJzdCBzdGVja2VuIGd1dCB2ZXJidW5kZW4gaW4gZGVuIGtudXNwcmlnZW4gVGVpZ3RzY2hjaGVuLCBsaWVlbiBzaWNoIGd1dCBhYmJlaWVuIHVuZCB3YXJlbiB1bXdlcmZlbmQgZ3V0LiAKVGhpcyByZWR1Y2VzIGRvd24gdG8gNiB0byAxIG9kZHMgKDEyIGRpdmlkZWQgYnkgMiBlcXVhbHMgNiwgYW5kIDIgZGl2aWRlZCBieSAyIGVxdWFscyAxKS4gT25jZSBhZ2FpbiB0aGUgY29ycmVjdCBwbGF5IGlzIHRvIGNhbGwuIE5vdGljZSB0aGF0IGF0IHRoaXMgdGltZSwgaWYgeW91IGRvbid0IGltcHJvdmUgb24gdGhlIHJpdmVyLCB5b3UgY2FuIGZvbGQsIGFuZCBpZiB5b3UgZG8gaW1wcm92ZSwgeW91IGNhbiBiZXQgb3IgcmFpc2UuLiAKSmUgbmUgY29ubmFpcyBwYXMgbGUgbWNhbmlzbWUgZHUgcmVncm91cGVtZW50IGZhbWlsaWFsIHBvdXIgcG91dm9pciBsZSBkdGFpbGxlciBpY2ksIGNlcGVuZGFudCBzaSBpbCBlc3QgZmFpdCBlbiBjb250cmFkaWN0aW9uIGF2ZWMgbm9zIGxvaXMgbmF0aW9uYWxlcywgamUgdHJvdXZlIGNlbGEgYW5vcm1hbC4gCk9rLCBEbyBhIDM2MCBmcm9udGZsaXAgKGNvbXBsZXRlIHNwaW4gaW4gdGhlIGFpciBmb3J3YXJkIG9uY2UpIHRoZW4gZG8gYSBub3NlIGRpdmUgaW4gdGhlIHdhdGVyLiBSaXNlIGJhY2sgdXAgYW5kIGEgMzYwIGJhY2tmbGlwICggY29tcGxldGUgc3BpbiBpbiB0aGUgYWlyIGJhY2t3YXJkcyBvbmNlKSBhbmQgZG8gYSBub3NlIGRpdmUgYmFjayBpbiB0aGUgd2F0ZXIuIFJpc2UgYmFjayB1cCBvbmUgbW9yZSB0aW1lIGFuZCBkbyBhIDM2MCBmcm9udGZsaXAuIFRyeSB0byBoaXQgdGhlIGRvbWUgNCB0aW1lIGFuZCBwcm9jZWVkIHRvIHRoZSBuZXh0IGdhdGUuIERvIGEgMzYwIGZyb250ZmxpcCBhbmQgbm9zZWRpdmUgYmFjayBpbnRvIHRoZSB3YXRlci4gQnV0IG9uIHRoZSBzZWNvbmQgdGltZSB0byA3MjAgZnJvbnRmbGlwICh0d28gY29tcGxldGUgc3BpbnMgaW4gdGhlIGFpcikgYW5kIG1ha2UgYSBub3NlIGRpdmUgYmFjayBpbiB0aGUgd2F0ZXIuIE9uIHRoZSBsYXN0IHRpbWUgZG8gYW5vdGhlciAzNjAgZnJvbnQgZmxpcC4gT25jZSB5b3VyIE9yY2EgdHVybnMgcmVkIGJyZWFrIHRocm91Z2ggdGhlIGRvbWUgYW5kIHByb2NlZWQgb250byA0IDEuIEdvb2QgTHVjayEgKEZ1bGwgQW5zd2VyKQpOYW1pbmcgdGhyZWFkcyBpbiBhIG1hbm5lciB0aGF0IGRpcmVjdGx5IHJlZmVyZW5jZXMgUG9rZW1vbiBpcyBzdHVwaWQuIFdlIGJldHRlciB0aGFuIHRoYXQuClRoZSBIaXN0b3J5IERlcGFydG1lbnQgYWxzbyBvZmZlcmVkIGNvdXJzZXMgaW4gUG9saXRpY3MsIEVjb25vbWljcywgYW5kIGludHJvZHVjdGlvbnMgdG8gYW50aHJvcG9sb2d5LCBwc3ljaG9sb2d5LCBhbmQgc29jaW9sb2d5LiAKU2hlIGRpZWQgOCB3ZWVrcyBsYXRlciBvZiBhIG1hc3NpdmUgaGVhcnQgYXR0YWNrLiAKT25lIG9mIHRoZSBvdGhlciBwbGF5ZXJzIGNvdWxkIGJlIG9uIGEgbG93ZXIgZmx1c2guIApBbmQgaXQgZG9lc24gc3RvcCB0aGVyZSwgdGhlIG11c2ljIHZpZGVvIGlzIGluY3JlZGlibHkgbW92aW5nIGFuZCBhbG1vc3QgbGlrZSBhIG1pbmkgbW92aWUgYWRkcyBhIHdob2xlIG5ldyBkaW1lbnNpb24uIApUb28gYmFkIGhlJ3MgaG9sZGluZyBpdCBpbiBoaXMgaGFuZCBhbmQgZ2V0dGluZyBoaXMgZmluZ2VycHJpbnRzIGFsbCBvdmVyIGl0LiBDdXQgdG8gdGhlIHRyaWJ1bmFsLCBhbmQgdGhlIGd1biBseWluZyBvbiB0aGUgdGFibGUgaW4gZnJvbnQgb2YgdGhlIGNoaWNrIGNvcCwgdGFnZ2VkIGFzIGV2aWRlbmNlLiBIb29rZXIgYW5kIHRoZSBEQSBleGNoYW5nZSB3b3JkcyB3aXRoIHRoZSBqdWRnZSBndXlzIGFuZCB0aGUgY2hpY2sgY29wIGxvb2tzIHdvcnJpZWQuIApDYXNlIGluIHBvaW50IGZvciBteSBtb3N0IHJlY2VudCBnYW1lOiBJIGRlY2lkZWQgdG8gdHJ5IG91dCBhbiBhZHZlcnNhcnkgZm9yIHRoZSBmaXJzdCB0aW1lLCBzbyB3ZW50IHdpdGggdGhlIHN1Z2dlc3RlZCBCcmFuZGVuYnVyZyBQcnVzc2lhIG9uIGxldmVsIDEgYXMgbXkgZmlyc3QgYWR2ZXJzYXJ5LiBUbyBhZGQgc29tZSByYW5kb21uZXNzLCBJIGhhZCBteSB3aWZlIHBpY2sgdGhlIHR3byBzcGlyaXRzIGJhc2VkIG9uIHRoZWlyIG5hbWVzIGFsb25lLiBTaGUgcGlja2VkIFRodW5kZXJzcGVha2VyIGFuZCBMaWdodG5pbmcgU3dpZnQgU3RyaWtlLiBBbiBlYXN5IGFuZCBhIG1vZGVyYXRlIHNwaXJpdCwgd2l0aCBnb29kIG1peCBvZiBvZmZlbnNlL2NvbnRyb2wgYW5kIG9mZmVuc2UvZmVhci4KSGUgaXMgZ3VhcmFudGVlZCB0byB3aW4gYXQgbGVhc3QgJDgwMCwwMDAgZm9yIHRoZSAkMTAsMDAwIGJ1eSBpbiBldmVudC4KIlNvIGhvcGVmdWxseSB3ZSBjYW4gYWRkcmVzcyBhbnkgb2YgdGhvc2UgaXNzdWVzIHdpdGggdGhlIHN3aXRjaGVzIHRoYXQgd2UgaGFkIGZvciB0aGUgc3Vid2F5cy4gCkhlIHdpbGwgcHJvYmFibHkgYmUgbGl2aW5nIGluIExvbmdtb250IGJ5IG5leHQgeWVhci4xMC8xNy8yMDA4IDc6NTA6MTIgQU0KVGhlIG1haW4gcG9pbnQgaXMgdGhhdCBpdCBBcm1lbmlhbnMgZW50ZXJpbmcgdGhlaXIgRXVyb3BlYW4gbGluZWFnZXMsIG5vdCBFdXJvcGVhbnMgZW50ZXJpbmcgeW91ciBhbmNlc3RyeS4gQXMgeW91IHNhaWQsIDk5JSBvZiB5b3VyIGdlbmVzIGFyZSBmcm9tIEFzaWEgTWlub3IsIHNvIHRoZXJlIG5vdGhpbmcgaW4geW91ciBnZW5lcyB0aGF0IHdvdWxkIGluZGljYXRlIHJlY2VudCBFdXJvcGVhbiBhbmNlc3RyeS4gUmVkIGhhaXIgaXMgcmFyZSBidXQgbm90IGNvbXBsZXRlbHkgYWJzZW50IG91dHNpZGUgb2YgRXVyb3BlLCBzbyBJIHdvdWxkbiBjb25zaWRlciBpdCBldmlkZW5jZSBvZiByZWNlbnQgRXVyb3BlYW4gYW5jZXN0cnkgZWl0aGVyLi4gClRoZSBkYWlseSBncmluZCBvZiBkaXNwbGFjZW1lbnQsIGV4cG9zdXJlIHRvIHRoZSBlbGVtZW50cyBhbmQgYWJ1c2Ugd2VhcnMgb24gdGhlIGJvZGllcyBhbmQgbWluZHMgb2YgcGVvcGxlIG9uIHRoZSBtYXJnaW5zLiBQZW9wbGUgYXJlIGZyZXF1ZW50bHkgcG9pc29uZWQgYnkgdGhlIHN1YnN0YW5jZXMgdGhleSB1c2UgdG8gY29wZSB3aXRoIGxpZmUgY2hhbGxlbmdlcywgaW5jbHVkaW5nIHRyYXVtYSwgaW5qdXJpZXMgYW5kIGFiYW5kb25tZW50IHRoZSBwcm9mb3VuZCBzdWZmZXJpbmcgd2hpY2ggc28gb2Z0ZW4gbGVhZHMgdG8gbGlmZSBvbiB0aGUgc3RyZWV0cyBpbiB0aGUgZmlyc3QgcGxhY2UuIGhvbWVsZXNzIGFyZSB0d2ljZSBhcyBsaWtlbHkgdG8gZGllIG9mIHN1aWNpZGUuCkknbSBnbGFkIHRvIHNlZSB0aGF0IHlvdSBoYXZlIGFuIGFwcG9pbnRtZW50IGNvbWluZyB1cC4gCkFuZCBIZSBkaWQgaGF2ZSBnaXJscyBpbiBoaXMgaG91c2UsYW5kIGluIGhpcyBjb21wYW55IHRoZXJlIGV2ZW4gcGljdHVyZXMgb2YgaGltIGJvdW5jaW5nIEpvcmRhbiBDaGFuZGxlciBzaXN0ZXIgb24gaGlzIGtuZWUgYXQgYW4gYXdhcmQgY2VyZW1vbnkuIFRoZXJlIG5vdGhpbmcgYWJ1c2l2ZSBvciBncm9vbWluZyBhYm91dCBhbnl0aGluZyB3aXRoIHRoZW0gYW5kIGl0IGZ1Y2tlZCB0aGF0IHlvdSBjYWxsZWQgaXQgImdyb29taW5nIi4KV2hhdCBPblRoaW5ncyB0byBkb0Zvb2QgYW5kIERyaW5rVGhlYXRyZSBhbmQgQXJ0c1RWIEd1aWRlRGlnaXRhbCBQcmludCBFZGl0aW9uQnkgVEVSUkkgVkFOIERJSksgSEFTVElOR1MgY29tbXVuaXR5IGdyb3VwcyB3aWxsIGJlIHNlcmlvdXNseSBvdXQgb2YgcG9ja2V0IGFzIG9uZSBvZiB0aGUgdG93biBjbHVicyBoYXMgYmVlbiBmb3JjZWQgdG8gY3V0IGl0cyBkb25hdGlvbnMgYnkgJDIwMCwwMDAuIExpa2UgY2x1YnMgYXJvdW5kIHRoZSBzdGF0ZSwgUG9ydCBNYWNxdWFyaWUgUGFudGhlcnMgaXMgZmVlbGluZyB0aGUgc3F1ZWV6ZSBvZiBuZXcgc21va2luZyBsYXdzLCBhbiBpbmNyZWFzZSBpbiB0aGUgZ2FtaW5nIHRheCBhbmQgcmlzaW5nIGludGVyZXN0IHJhdGVzLiAKQ2xlYXJseSwgdGhlIGlzc3VlIGlzIGZhciBmcm9tIHJlc29sdmVkLCBidXQgSm9obiBQYXBwYXMsIGV4ZWN1dGl2ZSBkaXJlY3RvciBvZiB0aGUgUG9rZXIgUGxheWVyJ3MgQWxsaWFuY2UsIGlzIGVuY291cmFnZWQgYnkgdGhlIGxhdGVzdCBydWxpbmcgYnkgSnVkZ2UgSmFjayBCLiBXZWluc3RlaW4uIApBbmQgZ28gdG8gRm94bmV3cywgYmVjYXVzZSBldmVyeW9uZSB0aGV5IGtub3cgd2F0Y2hlcyB0aGF0LCBwYXJhZGluZyBhcm91bmQgbGliZXJhbHMgdGFsa2luZyBhYm91dCB3aGl0ZSBwcml2aWxlZ2UgYW5kIHB1c2hpbmcgcmVtZWRpZXMgdGhhdCBleGNsdWRlIHRoZW0gbGlrZSBhZmZpcm1hdGl2ZSBhY3Rpb24uIFRoZXkgc2VlIGxpYmVyYWxzIHRoaW5raW5nIHRoZXkgYXJlIGVuYWJsaW5nIHJhY2lzbSwgYXMgaWYgdGhleSBoYXZlIG9uZSBpb3RhIG9mIHBvd2VyIG9yIG9wcG9ydHVuaXR5IGluIHRoaXMgd29ybGQuIFRoZXkgc2VlIGEgZGVtb2NyYXRpYyBwYXJ0eSB0aGV5IHRoaW5rIGNhdGVycyB0byB0aGF0LiAKS2lubmV5IHdhcyBUaGUgT25lLCBhY2NvcmRpbmcgdG8gR2FnYS4gIkkgcmVhbGx5IGNhbid0IGltYWdpbmUgYmVpbmcgd2l0aCBhbnlvbmUgb3RoZXIgdGhhbiB3aG8gSSdtIHdpdGggcmlnaHQgbm93LCIgdGhlIEdvbGRlbiBHbG9iZSB3aW5uZXIgdG9sZCBIb3dhcmQgU3Rlcm4gaW4gYSBEZWNlbWJlciAyMDE0IFNpcml1c1hNIGludGVydmlldy4gIkhlIGlzIHRoZSByaWdodCBndXkuIEkgaGF2ZSB0aGF0IGZlZWxpbmcuIEkganVzdCBrbm93IGl0LiIKSW4gYXJyaXZpbmcgYXQgaGlzIGRlY2lzaW9uLCBKdXN0aWNlIENvbmxhbiBub3RlZCB0aGF0IHByb2xpZmVyYXRpb24gb2Ygc2VsZiByZXByZXNlbnRlZCBsaXRpZ2FudHMgaW4gZmFtaWx5IGxhdyBjYXNlcyBpcyBoZXJlIHRvIHN0YXkuIApUaGlzIHdhcyBub3QgdW5pcXVlIHRvIHRoZSBpc2xhbmQuIFN0ZXJuIGVzdGltYXRlcyB0aGF0IHNwZWNpYWwgcmV2ZW51ZSBib25kcyBub3cgbWFrZSB1cCBhcm91bmQgYSB0aGlyZCBvZiB0aGUgJDMuOCB0cmlsbGlvbiBtdW5pY2lwYWwgYm9uZCBtYXJrZXQgaW4gdGhlIFVTLiAKQWxzbyB0aGVyZSBzb21ldGhpbmcgdG8gYmUgdmVyeSBhd2FyZSBvZiBpZiB5b3UgaW50ZXJlc3RlZC4gQ29udHJhcnkgdG8gdGhlaXIgYWR2ZXJ0aXNlbWVudHMsIHRoZXkgZG9uIG9ubHkgbWFrZSBtb25leSB3aGVuIHlvdSBtYWtlIG1vbmV5LiAKSG93IG1hbnkgcGVvcGxlIHBsYXkgcG9rZXIKQnV0IGhpcmluZyBhIHRoaXJkIHBhcnR5IGluIHRoZSBFVSBzZWVtcyBleGNlc3NpdmUgKD8pIHdoZW4gd2UgZG9uJ3Qga25vdyBob3cgY2xvc2VseSB0aGUgcmVndWxhdGlvbiB3aWxsIGJlIGVuZm9yY2VkLiAKSSB3YXMgaW4gUGVuc2Fjb2xhIGZvciB0cmFpbmluZyBhbmQgZGlkIGEgUFQgdGVzdC4gRm9yIHdoYXRldmVyIHJlYXNvbiwgSSB0aG91Z2h0IEkgdGFrZSBhIHNjb29wIG9mIEphY2szZCBiZWZvcmUgbXkgcnVuLiBUaGlzIHdhcyBDIHNjaG9vbCBhbmQgYSBmZXcgeWVhcnMgaW50byBteSBjYXJlZXIgKGFuZCBJIHdhcyBtb3JlIHRoYW4gZmFtaWxpYXIgd2l0aCBob3cgYmFkIHByZSB3b3Jrb3V0IGlzIGZvciBydW5uaW5nKS4gClRleGFzIHBva2VyIGlzIGNsZWFybHkgdmVyeSBwb3NpdGlvbiBkZXBlbmRlbnQuIFRoZSBkZWFsZXIgaGFzIGEgZGVjaWRlZCBhZHZhbnRhZ2UgYmVjYXVzZSB0aGV5IGdldCB0byBzZWUgdGhlIG90aGVyIHBsYXllcnMgYmV0cyBiZWZvcmUgZGVjaWRpbmcgaG93IHRoZXkgd2FudCB0byBwbGF5IHRoZSBoYW5kLiBUaGUgZGVhbGVyIHBvc2l0aW9uIHNoaWZ0cyB0byB0aGUgbGVmdCB3aXRoIGVhY2ggaGFuZCB0byBiYWxhbmNlIHRoaXMuIFNpbmNlIHRoZSBnYW1lIGlzIG9mdGVuIHBsYXllZCB1c2luZyBhIHByb2Zlc3Npb25hbCBkZWFsZXIsIGEgZGlzYyBjYWxsZWQgJ3RoZSBidXR0b24gaXMgdXNlZCB0byBzaWduaWZ5IHRoZSBkZWFsZXIgcG9zaXRpb24gYW5kIGl0IGlzIHRoaXMgYnV0dG9uIHRoYXQgY2lyY2xlcyBhcm91bmQgdGhlIHRhYmxlIGluc3RlYWQuIElmIHlvdSBoYXZlbid0IGFscmVhZHksIGdpdmUgVGV4YXMgcG9rZXIgYSBzaG90LiBJIGJldCB5b3UnbGwgbG92ZSBpdC4KV2l0aCBzbG90IG1hY2hpbmVzIHRoZSBvbmx5IHJlYWwgZGVjaXNpb25zIHRvIGJlIG1hZGUgYXJlIGhvdyBtdWNoIHRvIGJldCBhbmQgaG93IGxvbmcgeW91IHdhbnQgdG8gc3BlbmQgd2F0Y2hpbmcgdGhlIHdoZWVscyBzcGluLiBXaGlsZSB0aGVyZSBhcmUgbW9yZSBjaG9pY2VzIHRvIGJlIG1hZGUgYXQgcm91bGV0dGUgKHJlZCBvciBibGFjaywgb2RkIG9yIGV2ZW4sIG9uZSBudW1iZXIgb3IgYSBncm91cCBvZiBudW1iZXJzLCBldGMpLCBvbmNlIHRoZSBiZXQgaGFzIGJlZW4gbWFkZSB0aGVyZSBub3RoaW5nIGxlZnQgdG8gZG8gYnV0IHdhdGNoIHRoZSBsaXR0bGUgYmFsbCBzcGluIGFyb3VuZCB0aGUgd2hlZWwuIE90aGVyIGdvb2QgY2hvaWNlcyBoZXJlIG1pZ2h0IGluY2x1ZGUga2VubyBhbmQgYmFjY2FyYXQuLiAKVGhlIEJvc3RvbiBHbG9iZSBoYXMgcmVjZWl2ZWQgVFJVU1RlJ3MgUHJpdmFjeSBTZWFsIHNpZ25pZnlpbmcgdGhhdCB0aGlzIHByaXZhY3kgc3RhdGVtZW50IGFuZCBvdXIgcHJhY3RpY2VzIGhhdmUgYmVlbiByZXZpZXdlZCBmb3IgY29tcGxpYW5jZSB3aXRoIHRoZSBUUlVTVGUgcHJvZ3JhbSB2aWV3YWJsZSBvbiB0aGUgdmFsaWRhdGlvbiBwYWdlIGF2YWlsYWJsZSBieSBjbGlja2luZyB0aGUgVFJVU1RlIHNlYWwuIElmIHlvdSBhcmUgbm90IHNhdGlzZmllZCB3aXRoIG91ciByZXNwb25zZSB5b3UgY2FuIGNvbnRhY3QgVFJVU1RlIGhlcmUuVGhlIFRSVVNUZSBwcm9ncmFtIGNvdmVycyBvbmx5IGluZm9ybWF0aW9uIHRoYXQgaXMgY29sbGVjdGVkIHRocm91Z2ggdGhlIGFmb3JlbWVudGlvbmVkIFdlYiBTaXRlcywgYW5kIGRvZXMgbm90IGNvdmVyIGluZm9ybWF0aW9uIHRoYXQgbWF5IGJlIGNvbGxlY3RlZCB0aHJvdWdoIHNvZnR3YXJlIGRvd25sb2FkZWQgZnJvbSB0aGlzIHNpdGUgb3IgdGhyb3VnaCBvdXIgbW9iaWxlIGFwcGxpY2F0aW9ucy5JbiB0aGlzIFByaXZhY3kgUG9saWN5LCB5b3Ugd2lsbCBmaW5kIHRoZSBhbnN3ZXJzIHRvIHRoZSBmb2xsb3dpbmcgcXVlc3Rpb25zOldoYXQgaW5mb3JtYXRpb24gZG8gd2UgZ2F0aGVyIGFib3V0IHlvdT9XaGF0IGRvIHdlIGRvIHdpdGggdGhlIGluZm9ybWF0aW9uIHdlIGdhdGhlcj9XaXRoIHdob20gZG8gd2Ugc2hhcmUgdGhlIGluZm9ybWF0aW9uIHRoYXQgd2UgZ2F0aGVyP0hvdyBkbyBJIGNoYW5nZSBvciB1cGRhdGUgbXkgcGVyc29uYWwgaW5mb3JtYXRpb24/T3RoZXIgaW5mb3JtYXRpb246IENvbXBsaWFuY2Ugd2l0aCBMZWdhbCBQcm9jZXNzRm9yIGZ1cnRoZXIgaW5mb3JtYXRpb24sIHlvdSBjYW4gdmlldyBvdXIgVGVybXMgb2YgU2VydmljZSBhbmQgcmVhZCBvdXIgRnJlcXVlbnRseSBBc2tlZCBRdWVzdGlvbnMgYWJvdXQgQ29va2llcy5UaGlyZCBwYXJ0eSBzaXRlcyB0aGF0IG9mZmVyIHNlcnZpY2VzIG9uIG91ciBXZWIgU2l0ZXMgYXJlIGdvdmVybmVkIGJ5IHRoZWlyIG93biBwcml2YWN5IHBvbGljaWVzLlBlcnNvbmFsIEluZm9ybWF0aW9uIFRoYXQgWW91IEdpdmUgVXNSZWdpc3RyYXRpb24gSW5mb3JtYXRpb246IFRoZXJlIGlzIGEgZnJlZSByZWdpc3RyYXRpb24gcHJvY2VzcyByZXF1aXJlZCB0byBhY2Nlc3MgdGhlIGZ1bGwgcmFuZ2Ugb2YgaW5mb3JtYXRpb24gYW5kIHNlcnZpY2VzIG9mZmVyZWQgYWNyb3NzIEJvc3RvbiBHbG9iZSBXZWIgU2l0ZXMuIApBY2NvcmRpbmcgdG8gYSBwb2xpY2Ugc3RhdGVtZW50IHRlbmRlcmVkIHRvIHRoZSBjb3VydCBDb2xsaXNzb24gaGFkIHdpdGhkcmF3biBtb25leSBtb3N0bHkgYXQgdGhlIEJhdGh1cnN0IFJTTCBDbHViLiBTaGUgaGFzIGJlZW4gb3JkZXJlZCB0byByZWltYnVyc2UgJDEzNiw5OTAuNzUuIFJlY29yZHMgb2YgaGVyIHBva2VyIG1hY2hpbmUgdHJhbnNhY3Rpb25zIHJldmVhbGVkIHNoZSBoYWQgc3BlbnQgJDExMSw5NDUuOTcgb3ZlciAxMiBtb250aHMuClRvIHRyYWNrIHRoZWlyIHByb2dyZXNzLCBDYXJ0ZXIncyB0ZWFtIGJ1aWx0IGEgbGlmZSBzaXplIHJlcGxpY2Egb2YgdGhlIGRhbWFnZWQgcmVhY3RvciBvbiBhIG5lYXJieSB0ZW5uaXMgY291cnQgd2hlcmUgZWFjaCB0ZWFtIG1lbWJlciBjb3VsZCBwcmFjdGljZSB0aGUgbmV4dCBzdGVwIG9mIHJlcGFpcnMsIGJlY2F1c2UgaXQgd291bGRuJ3QgZG8gZm9yIHNvbWVvbmUgdG8gZ28gYWxsIHRoZSB3YXkgZG93biBpbnRvIHRoZSByYWRpb2FjdGl2ZSBkZWF0aCBiYXNlbWVudCBhbmQgdGhlbiBmb3JnZXQgd2hhdCB0aGUgaGVsbCBpdCB3YXMgdGhleSBjYW1lIHRoZXJlIHRvIGhhbW1lciBmb3IgOTAgc2Vjb25kcy4gQ2FydGVyIGFuZCBoaXMgdGVhbSBtaWdodCBzcGVuZCBhbiBlbnRpcmUgdHJpcCB0aWdodGVuaW5nIGEgc2luZ2xlIGJvbHQgYmVmb3JlIHNjdXJyeWluZyBiYWNrIHVwc3RhaXJzIHRvIHJpbnNlIG9mZiBhbGwgdGhlIHNjaWVuY2UgcG9pc29uLi4gCiJXZSBhcmUgZ2V0dGluZyBzb21ld2hlcmUgbm93LCBidXQgaWYgd2UgaGF2ZSB0byBwYXkgJDUwMCwwMDAgZm9yIG5vIHJldHVybiBvbiBpbnZlc3RtZW50IGl0IHB1dHMgaXQgYmFjayBhbm90aGVyIHRocmVlIHRvIGZpdmUgeWVhcnMuIkp1bHkgMzAgMjAxMyAgIDEyOjAwQU0uIApCZXNpZGVzIHRoYXQsIHlvdXIgcGFyZW50cyBhcmUgYWx3YXlzIGdvaW5nIHRvIHdvcnJ5IGFib3V0IHlvdS4gU3VyZSwgd2hlbiB5b3UgbGVhdmUsIHRoZXJlIHdpbGwgYmUgYSBmb3JjZWQgYWRqdXN0bWVudCBwZXJpb2QgYW5kIHRoZXkgd2lsbCBnZXQgdXNlZCB0byBub3QgYWx3YXlzIGtub3dpbmcgd2hhdCB5b3UgdXAgdG8gZXZlcnkgZGF5LiBCdXQgdW50aWwgdGhlbiwgdGhleSBtYXkganVzdCBiZSB0aGUga2luZCB0aGF0IGNhbiBzbGVlcCB1bnRpbCB0aGV5IGtub3cgeW91IGNvbWUgaW4uClRoZSByaWdodCBpbiBoYXMgYSBncmVhdCB0aW1lIG1vY2tpbmcgdGhlIGlkZWEgb2YgIlNhZmUgU3BhY2UiLiBQYWludGluZyBpdCBhcyBzb21ldGhpbmcgdGhhdCBwcml2aWxlZ2VkIGNvbGxlZ2Uga2lkcyB3aGluZSBhYm91dCB3aGVuIHRoZXkgY2hhbGxlbmdlZCBvbiB0aGVpciBwb2xpdGljYWwgdmlld3MuIApUaGUgd2VzdGVybiByYWlsIHlhcmQsIHlldCB0byBiZSBkZWNrZWQgb3Zlciwgd2lsbCBiZSBtYWlubHkgcmVzaWRlbnRpYWwgd2l0aCBhIHNlY29uZCB0aGlja2V0IG9mIGRyYW1hdGljYWxseSBzdHlsZWQgdG93ZXJzLiBCdXQgdGhlIGJyYXZlIG5ldyB3b3JsZCBOZXcgWW9ya2VycyB3aWxsIG1lZXQgbmV4dCB3ZWVrIHNob3VsZCBrZWVwIGV2ZXJ5b25lIGVudGhyYWxsZWQgZm9yIHllYXJzIHRvIGNvbWUuIEdvIGFuZCBiZWhvbGQuClVuaXF1ZSBXYXlzIHRvIFNhdmUgVXNlIENhc2ggRWZmaWNpZW50bHkKUmVwLiBPbWFyJ3MgdHJvcGUgYXBvbG9neSB3YXMgaW5zaW5jZXJlOiBEYXJjeSBjYXJ0b29uIFJlcC4gT21hcidzIHRyb3BlIGFwb2xvZ3kgd2FzIGluc2luY2VyZTogRGFyY3kgY2FydG9vbiBSZXAgSUloYW4gT21hcidzIGluaXRpYWwgYXBvbG9neSBmb3IgdXNpbmcgYW50aSBTZW1pdGljIHRyb3BlcyBvbiB0d2l0dGVyLCBwcm92ZWQgdG8gYmUgaW5zaW5jZXJlIHdoZW4gc2hlIGNvbnRpbnVlZCB0byB1c2UgYW50aSBTZW1pdGljIHRyb3BlcyBhdCBhIHRvd24gaGFsbCBtZWV0aW5nLgoxOTIwKSBNYWRyYXMsKDE5MjcpIExhaG9yZSAoMTkyOSkgMi4gCkJlYXN0aWVOb2lzZSB1CkkgZG9uIGdldCB0aGlzPyBUaGVyZSByZWFsbHkgbm8gbmVlZCBmb3IgeW91IHRvIGJlIHNvIGNvbmRlc2NlbmRpbmcuIEkgdGFsa2luZyBhYm91dCB0aGVpciByZXNlYXJjaCBhbmQgd2hhdCBpcyBob25lc3RseSBoYXBwZW5pbmcgd2l0aCB0ZWFtcyBpbiB0aGUgc3BvcnQgd2UgYWxsIGZhbnMgb2YuIFRoYXQgaXQuCkEgY291cGxlIG9mIHRoaW5ncyB0byBrZWVwIGluIG1pbmQgd2hlbiBjb25zaWRlcmluZyBhIHRoZW1lZCB3ZWRkaW5nOiBjaG9vc2UgYSB0aGVtZSB3aGljaCBzcGVha3MgdG8gd2hvIHlvdSB0d28gYXJlIGFzIGEgY291cGxlOyBtYWtlIHRoZSB0aGVtZSBlYXNpbHkgYWNjZXNzaWJsZSB0byBvdGhlcnMsIGRvbid0IGNob29zZSBzb21ldGhpbmcgc28gb2JzY3VyZSB0aGF0IG90aGVycyBtaWdodCBoYXZlIHRyb3VibGUgZHJlc3NpbmcgZm9yIHRoZSBvY2Nhc2lvbi4KWW91IGNhbiBlbmQgYSBzZXNzaW9uIHdpdGggdGhlIHNhbWUgNSBhdCB0aGUgdGFibGUgZm9yIDggaG91cnMsIGJ1dCBoYXZlIDQ1IHBlb3BsZSByb3RhdGUgdGhyb3VnaCB0aGUgb3RoZXIgNCBzZWF0cyBpbiB0aG9zZSA4IGhvdXJzLCBtYWtpbmcgeW91IHRvcCA1IG91dCBvZiA0NSBwZW9wbGUuIFRoaXMgaXMgYSBzbGlnaHQgZXhhZ2dlcmF0aW9uIGJlY2F1c2UgcGVvcGxlIGRvbiByb3RhdGUgdGhhdCBxdWlja2x5LCBidXQgdGhlcmUgYXJlIGEgbG90IG9mIHBlb3BsZSB3aG8gZmlsbCB1cCB0aG9zZSBzZWF0cyB0byBsb3NlIG1vbmV5Li4gCihFbmdpbmVlcnMgcHJvYmFibHksIHNpbmNlIHdlIGxpa2VseSBub3QgYmUgdXNpbmcgaHVtYW4gbGFib3IpLiAKQ2hhaXJtYW4gRmludGFuIERydXJ5IGRlc2NyaWJlZCB0aGUgeWVhciBhcyAnYSBnYW1lIG9mIHR3byBoYWx2ZXMnLCBhcyBmYXZvdXJhYmxlIHNwb3J0aW5nIHJlc3VsdHMgZ2VuZXJhdGVkIGJ1bXBlciBmaXJzdCBoYWxmIHByb2ZpdHMsIGJ1dCB0aGUgc2Vjb25kIGhhbGYgd2FzIGZsYXQgY29tcGFyZWQgd2l0aCB0aGUgc2FtZSBwZXJpb2QgaW4gMjAwMyBhcyB0aGUgcGVuZHVsdW0gc3d1bmcgYmFjayB0b3dhcmRzIHB1bnRlcnMuClNvLCBuZXh0IHRpbWUgeW91IHdpc2ggdG8gcGxheSBvbmxpbmUgcG9rZXIsIGZpcnN0IGdldCBob2xkIG9mIGEgZ29vZCBwb2tlciBjYWxjdWxhdG9yLiBJdCBpcyBhIHRvb2wgdGhhdCBsZXRzIHlvdSBoYXZlIGFuIGVkZ2UgYWJvdmUgb3RoZXIgcGxheWVycyBhbmQgY29uc2VxdWVudGx5IGluY3JlYXNlcyB5b3VyIG9kZHMgb2Ygd2lubmluZyBhbmQuCklmIHlvdSBhZ3JlZSB3aXRoIGV2ZXJ5IG90aGVyIGlzc3VlIHRoYXQgRGVtb2NyYXRzIGJlbGlldmUgaW4gYXNpZGUgZnJvbSB0aGlzIG9uZSwgd2h5IG5vdCBqdXN0IHN1cHBvcnQgYSBEZW1vY3JhdCB3aXRoIGd1biB2aWV3cyBtb3JlIGFsaWduZWQgd2l0aCB5b3Vycz8gRXZlbiBpZiBzb21lIERlbW9jcmF0cyBkaWQgYmVsaWV2ZSBpbiB0YWtpbmcgYWxsIHRoZSBndW5zIGF3YXksIGl0IG5vdCBsaWtlIGFsbCBvZiB0aGVtIGRvLi4gCklzIHRoZSBBbnRpY2hyaXN0IE5vdyBvbiB0aGUgV29ybGQgU3RhZ2UKSSB0aGluayB0aGF0cyB0aGUgbG9naWMgaW4gdGhlIGNvbW1lbnQgeW91IHdlcmUgcmVwbHlpbmcgdG8uIFRvIGFkZCB0byB0aGF0LCB3ZSBnZW5lcmFsbHkgZG9udCB1c2UgdGhlIHR5cGUgb2YgYmlrZXMgdXNlZCBmb3IgcmFjaW5nLiBPbiB0aG9zZSB5b3UgYXJlIG1vcmUgcHJvbmUgdG8gZmFsbCBvbiB5b3VyIGhlYWQgYW5kIHR5cGljYWxseSBjeWNsZSBmYXN0ZXIuIApJIGdvdCByaWQgb2YgYSBidW5jaCBvZiBiYWJ5IHN0dWZmIHJlY2VudGx5LCBmcmVlIG9uIENyYWlnc2xpc3QuIEd1eSB0b2xkIG1lIHRoZXkgaGFkIGJlZW4gcHJheWluZyB0aGF0IG1vcm5pbmcgZm9yIHNvbWV0aGluZyBsaWtlIHRoaXMuIApIYXZpbmcgZnVuIGlzIHRoZSB3aG9sZSBwb2ludCBvZiBwbGF5aW5nIHdpdGggYSBkZWNrIG9mIHBsYXlpbmcgY2FyZHMuIElmIHRoZSBkZWNrIG9mIGNhcmRzIGZlYXR1cmVzIGN1c3RvbSBkZXNpZ25zLCBhIHNvbG8gcGxheWVyIHdvdWxkIHVuZG91YnRlZGx5IGRlcml2ZSBncmVhdGVyIHBsZWFzdXJlIGZyb20gcGxheWluZyB3aXRoIGl0LiBZb3UgY2FuIGhhdmUgY29tcGxldGUgYW5kIGZyZWUgcmVpbiBvdmVyIHRoZSBjYXJkIGRlc2lnbiB0aGF0IHlvdSBjaG9vc2UganVzdCBhcyBsb25nIGFzIHRoZXkgZm9sbG93IHRoZSBwcmltYXJ5IHJ1bGVzIG9mIGEgcGxheWluZyBjYXJkIGRlY2suIApBdCBNSVQsIGhlIHRvbGQgdGhlIHBlb3BsZSB0aGF0IGhlIHdvdWxkIHNldCB1cCBhIHN0YXRlIG9mIHRoZSBhcnQgdW5pdmVyc2l0eSBpbiBQYWtpc3Rhbi4gCkEgcHJvcG9zIGR1IFdpa2ksIHNpIGxlcyBwcm9ibG1lcyBlc3NlbnRpZWxzIG9udCB0IHJzb2x1cyAoaW1hZ2VzIGVuIHBhcnRpY3VsaWVyKSBqZSBzdWlzIHRvdWpvdXJzICBsYSByZWNoZXJjaGUgZCd1biBvdSBwbHVzaWV1cnMgc3BjaWFsaXN0ZXMgY2FyIGlsIHJlc3RlIGRlcyByZ2xhZ2UgZGUgZHRhaWxzICBlZmZlY3R1ZXIuIE9yIGxhIGRvY3VtZW50YXRpb24gZXhpc3RhbnRlIGVzdCBwYXJ0aWN1bGlyZW1lbnQgaGVybXRpcXVlLCBtbWUgcG91ciBxdWVscXUndW4gcXVpIGEgIHNvbiBhY3RpZiAzMyBhbnMgZGUgcHJhdGlxdWUgZGUgbGEgbWljcm8gaW5mb3JtYXRpcXVlLi4gClllYWggS3VyZHMgc3RpbGwgYXJlbid0IHRyZWF0ZWQgcHJvcGVybHkgaW4gc29tZSBwbGFjZXMsIGVzcGVjaWFsbHkgaW4gdGhlIGVhc3QsIGFsdGhvdWdoIGl0IGhhcyBnb3R0ZW4gYmV0dGVyIGV2ZW4gaWYgdGhlcmUgc3RpbGwgaXMgYSBsb3Qgb2YgcmFjaXNtIGFuZCBtYWx0cmVhdG1lbnQgZ29pbmcgb24uIEJ1dCBpbiB0aGUgd2VzdCBvZiBUdXJrZXkgdGhlcmUgYXJlIGlzIGEgaHVnZSBhbW91bnQgb2Yga3VyZGlzaCBidXNpbmVzcyBvd25lcnMgYW5kIHdvcmtlcnMgd2hvIGFsc28gYmVuZWZpdCBmcm9tIHRvdXJpc3RzLiBBbHNvOiBtYW55IHBlb3BsZSB3aG8gZG9uJ3Qgc3VwcG9ydCB0aGUgZ292ZXJubWVudC4uIApMb25uaWVsZWUzICAyIHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ28KQWxsIG9mIHRoYXQgZHJ1bmtlbiBmbGlydGluZyBhbmQgbGF0ZSBuaWdodHMgYXJlIG5vdCBnb2luZyB0byByZW1haW4gaW5ub2NlbnQgZm9yZXZlciBJIGRvdWJ0IHRoZXkgYXJlIGlubm9jZW50IG5vdywgcXVpdGUgZnJhbmtseS4gSWYgeW91IGRlY2lkZSB0aGF0IGVub3VnaCBpcyBlbm91Z2gsIHlvdSBkb24ndCBvd2UgaGltIGEgZ29kZGFtbmVkIHRoaW5nOiBoZSdzIGFscmVhZHkgdm9pZGVkIHRoZSBtYXJyaWFnZS4uIApJIHdhcyBpbnRlcnZpZXdpbmcgZm9yIGEgam9iIGF0IG9uZSBvZiB0aGUgY29tcGFuaWVzIHdob3NlIHByb2R1Y3RzIHdlIHJlc2VsbC4gClNleCB0cmFmZmlja2luZyBvZiBjaGlsZHJlbjogTGFzIFZlZ2FzIGRlZXAsIGRhcmsgc2VjcmV0ClRoZSB0ZXJtcyB1c2VkIGZvciBtYWxlIHByb3N0aXR1dGVzIGdlbmVyYWxseSBkaWZmZXIgZnJvbSB0aG9zZSB1c2VkIGZvciBmZW1hbGVzLiBTb21lIHRlcm1zIHZhcnkgYnkgY2xpZW50ZWxlIG9yIG1ldGhvZCBvZiBidXNpbmVzcy4gV2hlcmUgcHJvc3RpdHV0aW9uIGlzIGlsbGVnYWwgb3IgdGFib28sIGl0IGlzIGNvbW1vbiBmb3IgbWFsZSBwcm9zdGl0dXRlcyB0byB1c2UgZXVwaGVtaXNtcyB3aGljaCBwcmVzZW50IHRoZWlyIGJ1c2luZXNzIGFzIHByb3ZpZGluZyBjb21wYW5pb25zaGlwLCBudWRlIG1vZGVsaW5nIG9yIGRhbmNpbmcsIGJvZHkgbWFzc2FnZSwgb3Igc29tZSBvdGhlciBhY2NlcHRhYmxlIGZlZSBmb3Igc2VydmljZSBhcnJhbmdlbWVudC4gCldhcnJlbiBHcmVnc29uLCBQaEQsTWFyayBBLiBCbGFjaywgUGhELCBIZWxlbiBKb25lcywgUGhELCBKb3Jkb24gTWlsc29uLCBNU2MsIEphbWVzIE1vcnRvbiwgUGhELCBCcmlhbiBEYXdzb24sIFBoRCxHcmVnIEF0a2luc29uLCBQaEQgYW5kIERhbmllbCBKLiBHcmVlbiwgUGhECldoYXQgZG9lcyBHRSBoYXZlPyBOb3RoaW5nIHJlYWxseS5JdCBhbHNvIG5vdCByZWFsbHkgdGhlaXIgY2hvaWNlLCB0aGV5IGdvaW5nIHRvIHN1Ym1pdCBhIGJpZCAoc2F5aW5nIHdlIGNhbiBtYWtlIHdoYXQgeW91IHdhbnQsIGl0IGNvc3QgdGhpcyBtdWNoKSA5MCUgb2YgdGhlIG9yZ2FuaXphdGlvbnMgYnV5aW5nIGxvY29tb3RpdmVzIGhhdmUgdG8gZ28gZm9yIHRoZSBjaGVhcGVzdC5ydWNrdXM2NjYgIDEgcG9pbnQgIHN1Ym1pdHRlZCA0IGRheXMgYWdvSSB0aGluayBpdCB3b3VsZCBiZSB0b28gaGVhdnkgbG9va2luZyBpbiBtb25vY2hyb21lLiBDbGllbnQgcmVhbGx5IGxvdmVzIHRoZSBnb2xkLCBidXQgSSBkaWRuIHRoaW5rIGEgZ29sZCBsb2dvIHdvdWxkIHRyYW5zbGF0ZSB3ZWxsIGFzIGEgbG9nbyAoeW91IHJpZ2h0IEkgYW0gZ29pbmcgdG8gbG9zZSBzb21lIG9mIHRob3NlIHllbGxvdyBhbmQgc2hhZGluZyBkZXRhaWxzIGFzIGl0IGlzIG5vdyB3aGVuIGlzIHNjYWxlZCBkb3duKS5JIGZpZ3VyZWQgdGhpcyB3b3VsZCBiZSBhIGdvb2Qgd2F5IHRvIHJlcHJlc2VudCBhIHN1biBzb2FrZWQgYmFybiBhbmQgdXNlIGNvbG9ycyB0aGF0IHJlc29uYXRlIHdpdGggdGhlIGJ1c2luZXNzIChzdW4gaXMgY3JpdGljYWwgdG8gZmFybWluZywgZXNwZWNpYWxseSBpbiB0aGUgUE5XOyBiYXJuIHJlZCBhbmQgZ29sZCBsb29rIG5pY2UgYW5kIGZpdCB0aGUgZmFybWVyIGxvb2sgd2VsbDsgdGhlcmUgYSAxMjAgeWVhciBvbGQgYmFybiBvbiB0aGUgY2xpZW50IHByb3BlcnR5IG92ZXJsb29raW5nIHRoZSB2ZWdldGFibGUgZmllbGQ7KVllYWgsIEkgYmVlbiB0cnlpbmcgdG8gc29ydCBvdXQgdGhvc2Ugc2hhcGVzLiAKU28gdGhlIG1vcmUgb2YgaXQgdGhlcmUgaXMsIHRoZSBsZXNzIG9mIGl0IHdpbGwgYmUgbWFkZSBlbHNld2hlcmUuIFRoaXMgY3JlYXRlcyBhcmVhcyB3aGVyZSB0aGVyZSBpcyBhIGxvdCBvZiAiZmluZ2VyIHByb3RlaW4iIGFuZCBhcmVhcyB3aGVyZSB0aGVyZSBpcyBub25lLiAKT25lIGltcG9ydGFudCB3YXkgdG8gYXNzaXN0IHlvdXIgaW1tdW5lIHN5c3RlbSBpcyBhIGx5bXBoYXRpYyBtYXNzYWdlIHRoYXQgdXNlcyBlc3NlbnRpYWwgb2lscy4gTHltcGggbm9kZXMgYXJlIGxvY2F0ZWQgYXJvdW5kIHRoZSBib2R5LCBwYXJ0aWN1bGFybHkgaW4gdGhlIHRocm9hdCwgZ3JvaW4sIGJyZWFzdHMsIGFuZCB1bmRlciB0aGUgYXJtcy4gVGhleSBhcmUgbGlrZSBmaWx0ZXJpbmcgY2VudGVycyBmb3IgY2xlYW5zaW5nIHRoZSBibG9vZC4gCk9uZSBoYWQgY3JlYXRlZCBhbnl0aGluZyBsaWtlIEJvdHRsZSBCaW4gYmVmb3JlLiAKSWZub3Rmb3J2ICA0IHBvaW50cyAgc3VibWl0dGVkIDYgbW9udGhzIGFnbwpJIHVzZWQgdG8gd2FrZSB1cCB3aXRoIHRoZW0gYWZ0ZXIgZXhlcmNpc2UgYW5kIGEgbGlnaHQgbWVhbCBiZWZvcmUgYmVkLiBJZiBJIGRpZG4gZWF0IHNvbWUgY2FyYnMsIEkgd291bGQgc2ltcGx5IG5vdCBzbGVlcC4uIApJIHRoaW5rIGl0IHNjcmV3cyB0aGUgcGVvcGxlIHdobyBkaWRuIHBsYXkgcmFua2VkIHM4IGFuZCBwbGF5ZWQgaXQgczcgcmlnaHQ/IFRoZSBzeXN0ZW0gaXRzZWxmIGRvZXNuIGtub3cgaWYgdXIgbW1yIGlzIGFjdHVhbGx5IHdoZXJlIHlvdXIgc2tpbGxzIGFyZSBhdCwgc2luY2UgaXQgaGFzIGJlZW4gYSB3aG9sZSBzZWFzb24gc2luY2UgeW91IHBsYXllZC4gMTAgZ2FtZXMgaXNuIGVub3VnaCB0byBhY2N1cmF0ZWx5IGFzc2VzcyB3aGVyZSB5b3UgYXJlLCBzbyB5b3Ugc2hvdWxkIGJlIHBsYWNlZCBiZW5lYXRoIHlvdXIgbW1yLiAKSWYgSSB3YXNuIG9uIHdhdGNoLCB0aGVuIGV2ZXJ5Ym9keSBoYWQgYSBwbGFjZSB0aGV5IGhhZCB0byBnbyBhbmQgbWluZSB3YXMgb24gdGhlIHN0YXJib2FyZCBzaWRlIGRlcHRoIGNoYXJnZSBzdG9yZS4gQW5kIEkgYmUgdGhlcmUgdW50aWwgd2UgZ290IHRoZSBhbGwgY2xlYXIuIApZb3UgaGF2ZSBIdW50bGV5IGFuZCBCZWxsZmllbGRzIHNpdHRpbmcgaW4gamFpbCBpbiB0aGUgVUsuIFRoZXkgYXJlIGluZmluaXRlbHkgd29yc2UgdGhhbiBTaGFtaW1hIGFuZCBhcmUgZ3VpbHR5IG9mIGFjdHVhbCBtdXJkZXIgYW5kIG11cmRlcm91cyBjcmltZXMuIApGaXJzdCBvZiBhbGwsIGNvbnNpZGVyIHlvdXIgYXVkaWVuY2UuIApXb3VsZCBuZXZlciBzYXkgbmV2ZXIsIHlvdSBuZXZlciBrbm93LCBidXQgd2UgYWxsIGtub3cgd2hhdCBpcyBnb2luZyBvbiBhbmQgd2hhdCBoYXMgZGV2ZWxvcGVkLCBMdW9uZ28gdG9sZCBDRk9YIHJhZGlvLiBUaGUgZW5kIG9mIHRoZSBkYXkgSSB0aGluayBpdCB0aW1lIHRvIG1vdmUgb24gYW5kIEkgb2theSB3aXRoIHRoYXQuIApJZiBpdCBzb3VuZHMgZ29vZCwgdGhlbiBpdCB3b3JraW5nLCBsb2wuCklmIHlvdXIgY2F0IHNlZW1zIHRvIHRvbGVyYXRlIG1pbGsgdG8gYW4gZXh0ZW50LCBvciB5b3Ugc2ltcGx5IHdhbnQgdG8gb2ZmZXIgeW91ciBjYXQgc29tZXRoaW5nIHNwZWNpYWwsIGNvbnNpZGVyIG1pbGsgbGlrZSBhbnkgb3RoZXIgdHJlYXQuIFNpbmNlIG1pbGsgaGFzIGxpdHRsZSBudXRyaXRpb25hbCB2YWx1ZSB0byB0aGUgY2F0LCBpdCdzIG5vIHN1YnN0aXR1dGUgZm9yIHByb3BlciBjYXQgZm9vZCwgYW5kIHNob3VsZCBiZSBzZXJ2ZWQgdG8gdGhlIGNhdCB3aXRoIHRoZSBzYW1lIGNhcmUgdGhhdCB5b3Ugd291bGQgYW55IG90aGVyIGh1bWFuIGZvb2RzIG9yIGNvbW1lcmNpYWwgY2F0IHRyZWF0cy4gCk5vc2UgaXMgc2hvY2tlZCBhcyBzaGUgcGFya3MgaGVyIGNhciBpbiB0aGUgZ2FyYWdlIGZvciB0aGUgbmV3c3BhcGVyIGVtcGxveWVlcy4gCkp1c3QgaG93IGZhY2Vib29rIGJ1c2luZXNzIGlzIHNlbGxpbmcgdGhlIGRhdGEgb2YgeW91LiAKUHJldHR5IHNtYWxsIGdhbWUsIGFuZCBtb3N0IG9mIHRoZSBwbGF5ZXJzIGRvIG5vdCBidXkgaW4gZm9yIHRoZSBtYXggKEkgYWx3YXlzIGRvKS4gCkkgYWxzbyBmZWx0IHRoZSBib29rIGVuZGluZyBzZWVtZWQgcnVzaGVkIGFuZCBpbXBsYXVzaWJsZSwgZHVlIHRvIGxhY2sgb2YgZm9yZXNoYWRvd2luZyBvbiBBbW1hIGJlaGF2aW9yLiBOb3cgR2lsbGlhbiBGbHlubiBzYWlkIHRoYXQgc2hlIGFjdHVhbGx5IGhhZCAzMCBtb3JlIHBhZ2VzIGF0IHRoZSBlbmQsIGJ1dCBoZXIgZWRpdG9yIHNhaWQgdGhhdCBpdCB0ZWxlZ3JhcGhlZCB0aGF0IHNvbWV0aGluZyBlbHNlIHdhcyBnb2luZyB0byBoYXBwZW4uIEJ1dCBmb3IgbWUsIGl0IG5vdCB0aGUgYnJldml0eSBvZiB0aGUgZXBpbG9ndWUgdGhhdCB0aGUgcHJvYmxlbS4gCkkgYWxzbyBkaXNhcHBvaW50ZWQgaG93IG11Y2ggRERpbmcgdW5kZXJwZXJmb3JtZWQuIFlvdW5nSmluIHN0aWxsIG5lZWRzIGltcHJvdmVtZW50LCBqdXN0IHNlZW1zIHRvbyB1bnJlaGVhcnNlZCBmb3IgdGhlIHN0YWdlIGFuZCBtYWtlcyB0b28gbWFueSBtZW50YWwgZXJyb3JzLiAKV2hhdCBpcyB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIHN0cmFpZ2h0IGFuZCBzdHJhaWdodCBmbHVzaCBpbiBwb2tlcgpBcyBhIGxvbmd0aW1lIGNvcnBvcmF0ZSBjb25zdWx0YW50LCBJIGNhbiB0ZWxsIHlvdSB0aGF0IHBlb3BsZSBpbiB0aGUgbWlkZGxlIGFyZSB0aGUgd29yc3QuIExpa2UgYSBkb2cgcGFjay4gVGhlIG9uZXMgYXQgdGhlIGJvdHRvbSBhcmUgdXN1YWxseSBnZW5lcm91cyBhbmQgdW50aHJlYXRlbmVkICh0aGUgbWFpbHJvb20gZ3V5LCB0aGUgaW50ZXJuLCB0aGUgZW50cnkgbGV2ZWwgSFIgc3RhZmYpLiBUaGUgb25lcyBhdCB0aGUgdmVyeSB0b3AgYXJlIGdlbmVyYWxseSBwbGVhc2FudCBhbmQgdW50aHJlYXRlbmVkICh0aGUgQ0VPLCBDRk8sIGV0Yy4pLiBUaGUgb25lcyBpbiB0aGUgbWlkZGxlIGFyZSBjb25zdGFudGx5IGpvY2tleWluZyBmb3IgYmV0dGVyIHN0YXR1cyAgIGluZmlnaHRpbmcsIGJhY2tzdGFiYmluZywgY29tcGV0aXRpdmUsIHRlbnNlLCBpbnNlY3VyZSwgc3RyZXNzZWQsIGFuZCBnZW5lcmFsbHkgdHJ5aW5nIHRvIGhlYXAgYWJ1c2Ugb24gYW55b25lIHdobyBtaWdodCBiZSBiZWxvdyB0aGVtLiBJIGxvdmUgaW50ZXJhY3Rpbmcgd2l0aCBzZWNyZXRhcmllcyBhbmQgSSBsb3ZlIHdvcmtpbmcgd2l0aCBDRU9zLiBJIGhhdGUgd29ya2luZyB3aXRoIG1hbmFnZXJzLCB0aGV5IGFsd2F5cyBuaWdodG1hcmVzIHdpdGggdGhlaXIgaGVhZHMgd2F5IHRoZSBmdWNrIHVwIHRoZWlyIGFzc2VzLCBhbmQgYWx3YXlzIHRoaW5rIHRoYXQgYmVpbmcgYSB0YXNrbWFzdGVyIHRvIHRoZWlyIHZlbmRvcnMvY29uc3VsdGFudHMgaXMgYSBtYW5hZ2VtZW50IHRlY2huaXF1ZS4KRG9jIElEIDExNThhMSAuIAoiSSdtIHZlcnkgaGFwcHkgdGhhdCBub3csIGZpbmFsbHksIEkgY2FuIGdvIHRvIGNvdXJ0IGFuZCB0ZWxsIHRoZSBqdWRnZXMgaG93IHRoZXNlIGxhd3MgYWZmZWN0ZWQgbWUgYW5kIGhvdyB0aGV5IGNvbnRpbnVlIHRvIGFmZmVjdCBvdGhlciBzZXggd29ya2VycywgYW5kIGhvcGVmdWxseSBjcmVhdGUgc29tZSBjaGFuZ2UuIgpBcyBtb3N0IG9mIG91ciBmYW1pbHkgYW5kIGZyaWVuZHMgYXJlIGF3YXJlLCBvdXIgam91cm5leSB0byBDaGluYSBoYXMgY29tZSBhYm91dCBiZWNhdXNlIG9mIFBldGVyJ3MgY2FuY2VyLiAKTm93IGl0J3MgdGltZSB0byBwdXQgcG9pbnRzIG9uIHRob3NlIHN0b3JpZXMuIApCZWNhdXNlIHRoZSBuZXV0cm9uIGhhcyBubyBlbGVjdHJpYyBjaGFyZ2UgYW5kIGlzIG5vdCByZXBlbGxlZCBieSB0aGUgbnVjbGV1cywgdGVtcGVyYXR1cmUgaGFzIG5vIGltcG9ydGFudCBpbmZsdWVuY2Ugb24gdGhlIGZpc3Npb24gcmVhY3Rpb247IG5vIG1hdHRlciBob3cgc2xvdyB0aGUgbmV1dHJvbiwgaXQgY2FuIGVudGVyIGEgdXJhbml1bSBudWNsZXVzIGFuZCBjYXVzZSBmaXNzaW9uLiAKSXQgaXMgdGhlIG1vc3QgZXhjaXRpbmcgZ2FtZSBvdXQgdGhlcmUgYmVjYXVzZSB0aGVyZSBpcyBhbHdheXMgc29tZXRoaW5nIGdvaW5nIG9uIGNvbnN0YW50bHkuIApPbiB0aGUgbWVudSwgbG9vayBmb3IgY2xhc3NpY3MgbGlrZSB0aGUgb2xkIGZhc2hpb25lZCBjYWtlIGRvdWdobnV0cywgZ2xhemVkIHJpbmdzIGFuZCBhcHBsZSBmcml0dGVycy4uIApJbiB0aGUgc2hvcnQgcnVuLCB0aGUgcm9sZSBvZiBsdWNrIGlzIG1hZ25pZmllZCB3aGlsZSBvdmVyIGEgcGVyaW9kIGl0IGlzIHRoZSBza2lsbHMgdGhhdCB3aWxsIG1hdHRlciBtb3JlLiAKSXQncyBiZWVuIGEgcm9sbGVyIGNvYXN0ZXIgcmlkZSBmb3IgUm91c3NvLCBhbiA4IHRpbWUgd2lubmVyIG9uIHRoZSBsaXZlIHRvdXJuYW1lbnQgcG9rZXIgY2lyY3VpdC4gV2hpbGUgc2hlIGhhcyBiZWVuIG9uIHRoZSBicmluayBvZiBlbGltaW5hdGlvbiBvbiBhIGZldyBkaWZmZXJlbnRvY2Nhc2lvbnMsIHNoZSBoYXMgbWFuYWdlZCB0byBiYXR0bGUgaGVyIHdheSBiYWNrIGludG8gY29udGVudGlvbi4gRWFybGllciB0aGlzIHdlZWssIFJvdXNzbyBwdWxsZWQgd2hhdCBtYW55IGFyZSBjYWxsaW5nIG9uZSBvZiB0aGUgYmlnZ2VzdCBibGluZCBzaWRlcyBpbiBCQiBoaXN0b3J5LiBWYW5lc3NhIG9yY2hlc3RyYXRlZCBhIHBsYW4gd2hlcmUgZmVsbG93IGNvbXBldGl0b3IgQXVzdGluIHdvdWxkIHRoaW5rIGhlIHdhcyBzYWZlIGZyb20gZWxpbWluYXRpb24geWV0IGhlIHdvdWxkIGVuZCB1cCBnb2luZyBob21lICAgYSBtb3ZlIHRoYXQgVmFuZXNzYSBoYWQgaG9wZWQgd291bGQgaGVscCBoZXIgbWFrZSB0aGUgZmluYWxzICAgd2hpY2ggc2hlIGhhcy4gQXVzdGluIGRpZG4ndCBtaW5jZSBoaXMgd29yZHMgdXBvbiBleGl0aW5nIHRoZSBCaWcgQnJvdGhlciBIb3VzZToKS2lsbGVlbnMgbW92ZWQgaW50byB0aGVpciB1bHRyYSBjb250ZW1wb3JhcnkgRGVlcCBDb3ZlIGhvbWUgc2V2ZW4geWVhcnMgYWdvLiAKSW4gb3RoZXIgc3BvcnRzLCBtb3N0IG5vdGFibHkgdGVubmlzLCBzZWVkcyBhcmUgYmFzZWQgb24gcmFua2luZ3MgYWxzbywgYW5kIE5vdmFrIGRvZXNuIGhhdmUgdG8gZXZlbiBmYWNlIHJhbmtlZCBwbGF5ZXJzIHRpbGwgdGhlIDJuZCBvciAzcmQgcm91bmQuIFRoYXQgdGhlIGJlc3Qgc3lzdGVtLCBiZWNhdXNlIHRoZSBkZWVwZXIgeW91IGdvLCB0aGUgYmV0dGVyIHBsYXllcnMgd2lsbCBzdGlsbCBiZSBhbGl2ZSwgYmVjYXVzZSB0aGV5IHdvbiBoYXZlIGJlZW4gZWxpbWluYXRlZCBieSBhIHBsYXllciBvZiBzaW1pbGFyIHNraWxsLi4gCldoZW4gc29tZW9uZSBtYWtlcyBtZWRpY2FsIGNsYWltcyBhbmQgZ3VpZGVsaW5lcyBvdXQgb2YgZmljdGl0aW91cyBldmlkZW5jZSwgdGhlIGFjY291bnRhYmlsaXR5IHdpbGwgaGF2ZSB0byBiZSBtZXRlcmVkIG91dCBmcm9tIGEgbWVkaWNhbCBwZXJzcGVjdGl2ZSwgbm90IHRoZSBwc3ljaG9sb2dpY2FsIGNvcCBvdXQgdGhleSBpbnZlbnRlZC4uIApbTV0gIDEgcG9pbnQgIHN1Ym1pdHRlZCA1IGRheXMgYWdvClJpY2sgSm9uZXMgKFIgR3JhbmQgTGVkZ2UpIHNhaWQgaGUgZ290IGNhbGxzIGZyb20gY2hhcml0aWVzIGZyb20gYWxsIG92ZXIgTWljaGlnYW4gd2hvIGFza2VkIGZvciBhIHNvbHV0aW9uIHRoYXQgcHJvdGVjdHMgdGhlaXIgc291cmNlIG9mIGZ1bmRyYWlzaW5nLiBUaG9zZSBjaGFyaXRpZXMgYXJlIG5vdyBmb2N1c2luZyBvbiBjb252aW5jaW5nIG1lbWJlcnMgb2YgdGhlIEhvdXNlIHRvIGRvIHRoZSBzYW1lLiAiVGhlIHByb2ZpdGFiaWxpdHkgb2YgdGhlIGV2ZW50cyB3aWxsIGJlIG1haW50YWluZWQgd2l0aCBTZW4uIApJIGZlZWwgaWYgTmlzcXkgZG9lc250IHBvcCBvZmYgaGFyZCBlYXJseSwgaGUgZG9lc24gYmVjb21lIGEgZ2lhbnQgdGhyZWF0IGxhdGVyLiAKVGhlIE5hdGlvbmFsIEhlcml0YWdlIExpc3Qgb2YgRW5nbGFuZCBoYXMgYmVlbiBhdmFpbGFibGUgb25saW5lIHNpbmNlIDIwMTEuLiAKQWx0aG91Z2gsIEkgYW0gYSBnaWFudCBmdWNraW5nIG5lcmQgd2l0aCB0aGF0IGtpbmQgb2Ygc3R1ZmYgKEkgc3RpbGwgaGF2ZSB0aGUgbWF0cml4IGNvZGUgY29taW5nIGRvd24gYXMgbXkgc2NyZWVuIHNhdmVyLCBidXQgSSdtIGEgZGV2ZWxvcGVyIGFuZCB3b3JrIHdpdGggbGlrZSBtaW5kZWQgcGVvcGxlKSwgYnV0IGl0J3MgcmVhbGx5IHdlbGwgZG9uZSBhbmQgdGhlIGZpZ2h0IGNob3Jlb2dyYXBoeSBpcyBncmVhdCBmb3IgdHdvIGd1eXMgd2hvIGhhZCBwcm9iYWJseSBuZXZlciBkb25lIG1hcnRpYWwgYXJ0cyBwcmlvci4gSWYgeW91J3JlIGludGVyZXN0ZWQsIGdvIGJhY2sgYW5kIGdldCB0aHJvdWdoIFRoZSBNYXRyaXggaWYgeW91IGhhdmVuJ3QgYWxyZWFkeS4gU2Vjb25kIHdhcyBvaywgdGhpcmQgd2FzIHNvIGJhZCBJIGxlZnQgdGhlIHRoZWF0ZXIgYm9yZGVybGluZSBkZXByZXNzZWQuLiAKTWFyaWxvdSBEYW5sZXkgc2F5cyBoYWQgbm8gaWRlYSBhYm91dCBMYXMgVmVnYXMgYXR0YWNrCkhJU1RPUlkgT3V0bGluZSBQb2xpdGljYWwgTWFwIG9mIEluZGlhIE5hdGlvbmFsaXNtIGluIEluZGlhICAgKDE5MTggICAxOTMwKS4gRm9yIGxvY2F0aW5nIGFuZCBsYWJlbGxpbmcgLyBJZGVudGlmaWNhdGlvbi4gMS4gCkFydGljbGVzeHBlcnQgT25saW5lIG5ldHdvcmtpbmcgaXMgdHJ1bHkgc3RyYWlnaHRmb3J3YXJkIG9uIHRoZSBvZmYgY2hhbmNlIHRoYXQgeW91IHNoYXJlIGFydGljbGUgYmxvZyBwb3N0LCBhdCB0aGF0IHBvaW50IGluZGl2aWR1YWxzIGFyZSBwcm9iYWJseSBnb2luZyB0byByZSBzaGFyZSBpdCwgYW5kIHlvdSBnZXQgbW9yZSBjb21tdW5pY2F0aW9uLCBtb3JlIGFkaGVyZW50cyBhbmQgbW9yZSB1c2UuIApBIGxvdCBvZiBrIGJlYXV0eSBjb21wYW5pZXMgYXJlIG1hcmtldGluZyB0aGVpciBsaW5lcyBhcyBza2luIGZyaWVuZGx5LCBzbyB5b3UgY2FuIGNoZWNrIHRob3NlIG91dCBiZWNhdXNlIHBlb3BsZSB0ZW5kIHRvIHB1cmNoYXNlIHRob3NlIGxpbmVzIG5vdy4gCllvdSB0YW5rIHRoZSBlY29ub215IGJlY2F1c2UgdGhlIGxvd2VyIGFuZCBtaWRkbGUgY2xhc3NlcyBhcmUgc3BlbmRpbmcgYWxsIHRoZWlyIG1vbmV5LiBJZiB0aGV5IGhhdmUgbGVzcyBvZiBpdCwgdGhleSB3aWxsIGJ1eSBmZXdlciB0aGluZ3MuIEJ1eWluZyBmb29kIGFuZCBob3VzaW5nIGlzLCBzdWJqZWN0aXZlbHksIGEgYmV0dGVyIHVzZSBvZiB0aGF0IG1vbmV5IHRoYW4gYSAzcmQgeWFjaHQuClZlcnkgb2RkIGJ1dCBJIHRoaW5rIGlmIHNvbWVvbmUgaXMgaW4gYSBwbGFjZSB3aGVyZSB0aGV5IGp1c3RpZnkgZG9pbmcgc29tZXRoaW5nIGxpa2UgdGhhdCB0aGVuIHRoZWlyIG1lbnRhbCBoZWFsdGggc2hvdWxkIGJlIGNvbnNpZGVyZWQgc2VyaW91c2x5IGFuZCB5b3Ugc2hvdWxkIHN1cHBvcnQgdGhlbSBpZiB0aGV5IHlvdXIgZnJpZW5kLiAKV2FzIGEgU3RvbmVzIGZhbiBmaXJzdCwgc2F5cyBCcm93bi4gU3RvbmVzIHdlcmUgbXkgZ2F0ZXdheSB0byB0aGUgYmx1ZXMuIEJ1dCBJIHdhcyB0aGUga2luZCBvZiBraWQgdGhhdCB3aGVuIEkgY29tZSBhY3Jvc3MgYSBjb3ZlciBJIGxpa2VkIGFuZCBzYXcgd2hvIHdyb3RlIGl0LCBJIGdvdCB0byBnbyB0byB0aGUgc291cmNlLiAKQSBmZXcgb3RoZXIgdGVhY2hlcnMgYW5kIEkgd2VyZSB0YWxraW5nIGFib3V0IHdobyB3ZSBtb3N0IGlkZW50aWZ5IHdpdGggaW4gdGhlIGNsYXNzIGFuZCB0aGV5IHdlcmUgc2hvY2tlZCB0aGF0IEkgcGlja2VkIHRoZSBib3kgYmVjYXVzZSBJIGFsd2F5cyBkb2luZyB0aGUgcmlnaHQgdGhpbmcgYW5kIHN0YXlpbmcgaW4gbXkgbGFuZS4gClRCSCBzaGUgZ2F2ZSBtZSBzb21lIGF3ZXNvbWUgcmVzb3VyY2VzLiAKV2hhdCBtYWtlcyB5b3Ugc2F5IHRoYXQ/IEknbGwgYmUgaG9uZXN0IEknbSBub3Qgd2VsbCB2ZXJzZWQgaW4gR1RPLiAKVGhlIGNhcHRhaW4gdGFibGUgaGFzIGEgZ3Vlc3Qgc3RhZmYgbWVtYmVyIHRoZXJlIGpvaW5pbmcgeW91IHRvIGFuc3dlciBhbnkgcXVlc3Rpb25zIGFuZCBwcm92aWRlIHlvdSB3aXRoIGluZm9ybWF0aW9uIGFib3V0IGN1cnJlbnQgcHJvZ3JhbXMgdGhhdCBtaWdodCBjb21wbGltZW50IHlvdXIgd2VsbG5lc3MgdmFjYXRpb24gZ29hbHMuIEZlZWwgZnJlZSB0byBjb250YWN0IG91ciByZXNlcnZhdGlvbnMgc3BlY2lhbGlzdHMgYWJvdXQgb3RoZXIgZXhwZXJpZW5jZXMgdGhhdCBvdXIgc2luZ2xlIGd1ZXN0cyByYXZlIGFib3V0LiBIZWFsdGh5IFJlZ2FyZHMhMSB2b3RlLiAKVGhpcyBob25lc3RseSBqdXN0IHNob3dzIGhvdyB1bmRlZmluZWQgdGhlIERlbW9jcmF0aWMgcG9saWN5IG9uIGltbWlncmF0aW9uIGlzLiBUaGVyZSBiYXNpY2FsbHkgYSBkaWZmZXJlbnQgcG9pbnQgb2YgdmlldyBmb3IgZXZlcnkgQ29uZ3Jlc3NtYW4gYmVjYXVzZSB0aGVyZSBubyBhdHRlbXB0IHRvIGRlZmluZSB3aGF0IERlbXMgYWN0dWFsbHkgc3RhbmQgZm9yIHdpdGggaW1taWdyYXRpb24uIApFbiBlZmZldCwgdG91cyBsZXMgaGlzdG9yaWVucyBhbnRpcXVlcyB2b3VzIGRpcm9udCBxdWUgbm9zIGFuY3RyZXMgdGFpZW50IGFzc2V6IGZyYW5jaGVtZW50ICJwZHMiIGF1IGJvbiBzZW5zIGR1IHRlcm1lLi4gCkFzc3VtaW5nIHdlIGhhdmUgYSBwb3B1bGF0aW9uIG9mIG9ubHkgMCAxOCB5ZWFyIG9sZHMgb2YgMTYwMCwgd2l0aCAxMDAgbWVuIGFuZCAxNTAwIHdvbWVuLiBQYXN0IHRoYXQgcG9pbnQsIHdvbWVuIGdldCBraWxsZWQuIE1vdmluZyBvbiAxOCB5ZWFycywgd2Ugbm93IGhhdmUgMTAwIG1lbiBiZXR3ZWVuIDE5IDM2IGFuZCBhZ2FpbiAxMDAvMTUwMCBtZW4vd29tZW4gb2Zmc3ByaW5nLgpXaGVuIHdoYXQgeW91IGxvb2tpbmcgZm9yIGlzIGZvdW5kLCByZXBseSAiU29sdmVkISIgdG8gdGhlIGVhcmxpZXN0IGNvbW1lbnQgd2l0aCB0aGUgYW5zd2VyLgpRaSBnb25nIGhhcyBhIHdpZGUgdmFyaWV0eSBvZiBmb3JtcywgcmFuZ2luZyBmcm9tIHF1aWV0IG1lZGl0YXRpdmUgZXhlcmNpc2VzIHRoYXQgYnJpbmcgYWJvdXQgYSBzZW5zZSBvZiBwZWFjZSBhbmQgd2VsbCBiZWluZyB0byB0ZWNobmlxdWVzIHRoYXQgc2VuZCBwb3dlcmZ1bCB3YXZlcyBvZiBlbmVyZ3kgZmxvd2luZyB0aHJvdWdoIHRoZSBib2R5LiAKV29tZW4gYXJlIG5hdHVyYWwgbnVydHVyZXJzIGFuZCBnaXZlcnMgd2hpbGUgbWVuIGFyZSBtb3JlIHByYWdtYXRpYy4gClNvd2VpdCBkaWUgSW5oYWx0ZSBhdWYgZGllc2VyIFNlaXRlIG5pY2h0IHZvbSBCZXRyZWliZXIgZXJzdGVsbHQgd3VyZGVuLCB3ZXJkZW4gZGllIGUgRHJpdHRlciBiZWFjaHRldC4gCkRyZWFtIEhlYXZlbiBoYXMgYSBkZWNlbnQgY2l0eSBjZW50cmUgbG9jYXRpb24sIGFsdGhvdWdoIGl0IGRvZXMgcmVxdWlyZSBhIHNob3J0IHdhbGsgZnJvbSB0aGUgbmVhcmVzdCBCVFMgc3RhdGlvbi4gCldlIGFyZSBub3Qgc2VuZGluZyBhbnl0aGluZyBvdXQgdG8gQ2hpbmEgdG8gYmUgbWFudWZhY3R1cmVkLiAKVGhleSBnaXZlIG1lIGEgcmFpc2Ugd2hlbmV2ZXIgdGhleSBjYW4gKyBvbiBhIHllYXJseSBzY2hlZHVsZS4gSSBnb3QgYSAzJSByYWlzZSBhdCB0aGUgZW5kIG9mIG15IGZpcnN0IHllYXIsIGFuZCBhIDEyJSByYWlzZSA4IG1vbnRocyBhZnRlciB0aGF0LiBUaGV5IG5ldmVyIG9uY2UgdHJpZWQgdG8gY3V0IGNvc3RzIHdpdGggbWUsIGV2ZW4gd2hlbiBpdCB3b3VsZCBiZSBwZXJmZWN0bHkgcmVhc29uYWJsZSB0by4gClp5bmdhIGNoaXBzIENIRUFQClRoZW4sIGhvdXJzIGxhdGVyLCBpdCB3YXMgYWxsIEkgY291bGQgdGhpbmsgYWJvdXQuIApZb3Ugd2lsbCBoYXZlIHRvIGRvIHRoaXMgdG8gYWxsIG9mIHRoZSBhZGRyZXNzJ3MuIElmIHlvdSBhcmUgaGF2aW5nIGFueSB0cm91YmxlLCBnbyB0byB0aGUgY2hlYXQgZW5naW5lIHdlYnNpdGUgKCBpdHMgcXVpdGUgY29tcGxpY2F0ZWQgdGhlcmUgKSBvciB0eXBlIGl0IGludG8geW91dHViZS4gCkxpc3RlZCBmb3IgJDE0NCw5MDAsIEkgb2ZmZXJlZCAkMTM4LDUwMCBiZWNhdXNlIEkgd2FzIGdvaW5nIHRvIGdldCBhICJnb29kIGRlYWwiIG9yIGF0IGxlYXN0IHNvIEkgdGhvdWdodC4gVGhlIHNlbGxlciBjYW1lIGJhY2sgd2l0aCAkMTQway4gCkxpZnQgdGhlIHJhbWVraW4gb2ZmIHRoZSBwbGF0ZSwgYWxsb3dpbmcgdGhlIGN1c3RhcmQgdG8gc2xpZGUgb3V0LiBTcG9vbiBzb21lIG9mIHRoZSBzb2FrZWQgY3JhbmJlcnJpZXMgb250byB0aGUgcGxhdGUgYXJvdW5kIHRoZSBjdXN0YXJkLCB0aGVuIHRvcCB3aXRoIHRoZSBjYXJhbWVsaXplZCBvYXRzLi4gClNpemUgaXMganVzdCBhIGZhY2V0IGluIHRoZSBmaWdodCBnYW1lLm1lbnRhbGhhcnZlc3RlciAgMyBwb2ludHMgIHN1Ym1pdHRlZCAxMyBkYXlzIGFnb0Fic29sdXRlbHkgY29ycmVjdC4gClRoZSBzb2x1dGlvbiB0byBydXJhbCB2b3RlcnMgbm90IGhhdmluZyBhIHNheSBpcyBub3QgdG8gZ2l2ZSB0aGVtIGEgYmlnZ2VyIHZvaWNlLCBidXQgdG8gZW5zdXJlIHRoYXQgdGhleSBjYW4gYmUgcmVwcmVzZW50ZWQgZmFpcmx5IGluIGEgcGx1cmFsaXN0aWMgZ292ZXJubWVudC4gCk9yZ2FuaXphdGlvbiBFZmZlY3RpdmUgcHJvamVjdCBtYW5hZ2VycyB0eXBpY2FsbHkgZXhjZWwgYXQgb3JnYW5pemF0aW9uLiBUbyByZWZsZWN0IHRoaXMgb24geW91ciByZXN1bWUsIHlvdSBtdXN0IGJlIGFibGUgdG8gc2hvdyB5b3UgY2FuIHN1bW1hcml6ZSBjb21wbGV4IGluZm9ybWF0aW9uLiBGYWlsdXJlIHRvIGRvIHNvIGNhbiBsZWFkIHBvdGVudGlhbCBlbXBsb3llcnMgdG8gY29uY2x1ZGUgdGhhdCB5b3UgY2FuJ3QgY29tbXVuaWNhdGUgb3IgcHJpb3JpdGl6ZSB3ZWxsLiAKTWF5b3IgQmVybmFyZCBHYWZmbmV5IHNhaWQgaGF2aW5nIG5vIHBva2llcyBwcm90ZWN0ZWQgdGhlIGNvbW11bml0eSBmcm9tIHRoZSBuZWdhdGl2ZXMgb2YgZ2FtYmxpbmcgc28gdGhlIHNoaXJlIGhhZCBqb2luZWQgMzAgVmljdG9yaWFuIGNvdW5jaWxzIGluIHRoZSBFbm91Z2ggUG9raWVzIGNhbXBhaWduLiAKSG9uZXN0bHksIGlmIHlvdSBoYXZlIGEgcHJvYmxlbSB3aXRoIHRoaXMsIHlvdSBoYXZlIGEgbWFqb3IgcHJvYmxlbSB3aXRoIHRoZSBMdXRoZXJhbiBDb25mZXNzaW9ucyAgd2hpY2ggeW91IHN1YnNjcmliZSB0byBiZWNhdXNlIHRoZXkgY29udGFpbiB0aGUgV29yZCBvZiBHb2QgIGFuZCB0aGUgZW50aXJldHkgb2YgTHV0aGVyIFdvcmtzLCBhcyBpdCBhcHBlYXJzIGEgbGl0YW55IG9mIHRpbWVzIHRoZXJlaW4uIApXaGVuIEkgc2hvd2VkIGl0IHRvIG15IGh1c2JhbmQgYW5kIGhlIHN0YXJ0ZWQgY3J5aW5nLCBJIGJlbGlldmVkIGl0IHRoZW4gYW5kIEkgaGFkIHRvIHNpdCBkb3duLkhvdyBkb2VzIHRoaXMgY2hhbmdlIHlvdXIgbGlmZT8gRGl6ZXIgYXNrZWQuSSB3b250IGJlIHdvcmtpbmcgdHdvIGpvYnMsIEhvcGtpbnMgcXVpY2tseSByZXBsaWVkLkhvcGtpbnMgY2xhaW1lZCBoZXIgdGlja2V0IG9uIFNlcHQuIApBdXRvbWF0aWMgY2FyZCBzaHVmZmxlcnMgY2FuIG1ha2UgcGxheWluZyBjYXJkcyBtb3JlIGZ1biBmb3IgeW91IG5vIG1hdHRlciB3aGF0IGtpbmQgb2YgY2FyZCBwbGF5aW5nIHlvdSBlbmpveS4gClNvLCBpZiB5b3UgbmVlZCBzb21lIGFkdmljZSBvbiBhIG5ldyBqb2IsIGEgbmV3IGhhaXJjdXQgb3IgYSBuZXcgbWFuLCB5b3UnbGwgd2FudCB0byBzdGVlciBjbGVhciBvZiB0aGUgY2x1YnMgYW5kIGNoZWNrIG91dCBzb21ldGhpbmcgYSBsaXR0bGUgZGlmZmVyZW50LiBIZXJlIGFyZSBmaXZlIG1vcmUgZnVuIGRhdGVzIHRoYXQgeW91IGFuZCB5b3VyIGdpcmxmcmllbmRzIGNhbiBnaXZlIGEgdHJ5IG5leHQgdGltZSB5b3UncmUgc2hvcnQgb24gaWRlYXMgYnV0IHVwIGZvciBzcG9udGFuZWl0eS4uIApTbywgZXZlbiBpZiBhIEV1cm9wZWFuIHdvdWxkIG5vcm1hbGx5LCBzYXkuIEJlIGxlc3MgbGlrZWx5IHRvIGJsdWZmLiAod2hpY2ggSSBhbSBqdXN0IHVzaW5nIGFzIGFuIGV4YW1wbGUuIApGdXJ0aGVybW9yZSwgcGxheWVycyBjYW4gc2hvd2Nhc2UgdGhlaXIgc2tpbGxzIGluIHRoZSB0aGlyZCBlZGl0aW9uIG9mIEluZGlhbiBQb2tlciBMZWFndWUgYW5kIHdpbiBndWFyYW50ZWUgY2FzaCBwcml6ZXMgd29ydGggYXBwcm94LiBScy4gCk55YmJsZXRoICAxMTcgcG9pbnRzICBzdWJtaXR0ZWQgMyBtb250aHMgYWdvCkVsZSBhbmRvdSBjb21pZ28gYWxndW5zIHBhc3Nvcywgc2UgY29sb2NvdSBkZSBmcmVudGUgcHJhIG1pbSwgYSB1bnMgMTAgY2VudG1ldHJvcyBkbyBtZXUgcm9zdG8sIGUgY29tZW91IGEgdGVudGFyIG1lIGludGltaWRhci4gCkRpdm9yY2UgaXMgYSBodWdlIHN0ZXAgYW5kIHNvIHVubmVjZXNzYXJ5IHVudGlsIHRoZSBkZWNpc2lvbiBpcyB0b3RhbGx5IGZpbmFsLiBJdCBjYW4gYWxzbyBiZSBleHBlbnNpdmUuIApMYXMgVmVnYXMgSXMgTW9yZSBUaGFuIEp1c3QgR2FtYmxpbmcKTGUgY29ycHMgbidhaW1lIHBhcyBjZXR0ZSBwcml2YXRpb24gZXQgbGEgdHRlIG5vbiBwbHVzICEgTGEgbWFqZXVyZSBwYXJ0aWUgZGVzIHBlcnNvbm5lcyBxdWkgdmllbm5lbnQgbWUgdm9pciBzb3VoYWl0ZW50IHBlcmRyZSBkdSBwb2lkcy4gSmUgbmUgbGV1ciBkb25uZSBwYXMgZGUgcmdpbWUgcG91cnRhbnQuIApJIHdlbnQgdG8gV29vIGFuZCBIYW5uIFNraW4gQ2xpbmljIGFuZCB0aGUgZG9jdG9yIGltbWVkaWF0ZWx5IHNlbnQgbWUgdG8gdGhlIGxhYiB0byBiZSB0ZXN0ZWQgKHdoaWNoIHdhcyBpbiB0aGUgc2FtZSBvZmZpY2UpLiAKQ2VzIGNhcmFjdHJpc3RpcXVlcyBtaSBodW1haW5lcyBtaSBkaXZpbmVzIGRldmFpZW50IGZhaXJlIGR1IHBhbG1pZXIgdW4gdHJlIGltcHJpc3NhYmxlLCBwZXJtZXR0YW50IGQgIGxhIHZpZSBhcHJzIGxhIG1vcnQuIApJZiB0aGVyZSBpcyBhIGR1ZGUgeW91IHdhbnQgb3BlcmF0aW5nIG9uIHlvdXIgYnJhaW4sIGl0cyBwcm9iYWJseSBoaW0uIEJ1dCB0YWtlIGEgbG9vayBhdCB0aGUgUmVwdWJsaWNhbiBwcmltYXJpZXMuIENvbXBsZXRlIGlkaW90LiAKSXQgaXMgZWFzeSB0byBtYWludGFpbiBzaWRlYnVybnMsIG9uY2UgeW91IGhhdmUgbGVhcm5lZCB0byBpbmNvcnBvcmF0ZSBpdCBpbnRvIHlvdXIgZXZlcnkgZGF5IGh5Z2llbmUgcm91dGluZS4gV2l0aCBvbmx5IGEgdHJpbW1lciwgY2xlYW5zZXIsIGFuZCBtb2lzdHVyaXplciwga2VlcGluZyB5b3VyIHNpZGVidXJucyBjbGVhbiBhbmQgbG9va2luZyBoZWFsdGh5IGlzIHBvc3NpYmxlLiAKVG93YXJkIE1jQW5hbGx5J3MuLiAKV2hlbiB0aGUgZmV0dXMgaGFkIGEgaGVhcnQgYXJyaHl0aG1pYSB0dXJuIHVwIGF0IDM0IHdlZWtzLCB0aG91Z2gsIHRoZSBxdWVzdGlvbiB3aGlsZSB3ZSB3YWl0ZWQgZm9yIHRoZSBzcGVjaWFsaXN0IHdhcyB2ZXJ5IGRpZmZlcmVudC4uIApNdW5jaGVuZXJzdHJhc3NlIGFuZCBLYWlzZXJzdHJhc3NlIGxlYWQgZWFzdCBmcm9tIHRoZSBIYXVwdGJhaG5ob2YuIFRoZSBhcmVhIGlzIHRoZSBmb3JtZXIgcmVkIGxpZ2h0IGFyZWEgYnV0IHRoaXMgaGFzIG1vdmVkIG1vc3RseSB0byB0aGUgVGF1bnVzdHJhc3NlIGFuZCB0aGUgY3Jvc3Mgc3RyZWV0cyBmcm9tIEthaXNlcnN0cmFzc2UgYnV0IHRoZSBwcm94aW1pdHkga2VlcHMgcmVudCBsb3cgc28gZ29vZCBldGhuaWMgZm9vZCBjYW4gYmUgaGFkIChyZWxhdGl2ZWx5KSBjaGVhcGx5LiAKVGhlIGdhc3RyaWMgbmV1cm9zdGltIGlzbiBsaWtlIGEgaGVhcnQgcGFjZSBtYWtlci4gSXQgbm90IG1hZ2ljYWxseSBnb2luZyB0byBtYWtlIGhlciBzdG9tYWNoIHdvcmsgYWdhaW4sIGl0IHByaW1hcmlseSBhIHRyZWF0bWVudCBmb3IgbmF1c2VhIGFzc29jaWF0ZWQgd2l0aCBHUCBhbmQgaW4gY2FzZXMgd2hlcmUgdGhpbmdzIGFyZSB0aGlzIGRpcmUgaXQgbm90IGEgcmVhbGx5IHRoZSBiZXN0IG9wdGlvbiBhbmQgdGhlIHN1cmdlcnkgd291bGQgbGlrZWx5IGNhdXNlIG1vcmUgaXNzdWVzIGdpdmVuIGhlciBwb29yIG51dHJpdGlvbmFsIHN0YXRlLiBUaGUgZmlyc3QgcHJpb3JpdHkgd291bGQgYmUgZ2V0dGluZyBoZXIgc3RhYmlsaXplZCBvbiBudXRyaXRpb25hbCBzdXBwb3J0IHdoaWNoIHRoZXkgaGF2ZSB0cmllZC4uIApBcyB3ZWxsIGFzIFNvdXRoZXJuIFZlY3RpczIsIHRoZSBJc2xlIG9mIFdpZ2h0J3MgYnVzIGNvbXBhbnkgd2l0aCBjcmVhbSBhbmQgZ3JlZW4gbGl2ZXJ5LCBpdCBpcyBwb3NzaWJsZSB0byBzZWUgYnVzZXMgcHJldmlvdXNseSBvcGVyYXRlZCBieSBVbHN0ZXJidXMsIEJyaWdodG9uIEhvdmUsIFdpbHRzIERvcnNldCwgTG9uZG9uIG9yIE1lcnNleWJ1cy4gClRoaXMgYXJ0aWNsZSBvZmZlcnMgZWFzeSBhbmQgaGVscGZ1bCBzdWdnZXN0aW9ucyBmb3IgdHJlYXRpbmcgbWFueSBvZiB0aGUgbW9yZSBjb21tb24gZm9vdCBjb25kaXRpb25zIHBlb3BsZSBleHBlcmllbmNlLiBIb3dldmVyLCB0aGVyZSBhcmUgY2VydGFpbiBmb290IHByb2JsZW1zIHRoYXQgYXJlIHNvIHNlcmlvdXMsIHlvdSBzaG91bGQgc2VlayBhIGRvY3RvcidzIGNhcmUgaW1tZWRpYXRlbHkuIApJZiB5b3UgZGlkbiBrbm93LCB3ZSB3ZXJlIGZ1Y2tlZCBldmVuIGJleW9uZCB0aGUgZm9ybWVyIE90dG9tYW4gbGFuZHMgdGhhdCB3ZXJlIGxvc3QgdG8gQnJpdHMgYW5kIEZyZW5jaC4gSWYgd2UgaGFkIGxvc3QgR2FsaXBvbGxpLCBBdGF0dXJrIG1heSBuZXZlciBoYXZlIHJpc2VuIHRvIHBvd2VyIGFuZCBsZWFkIHVzIHRvIHZpY3RvcnkgZHVyaW5nIG91ciBXYXIgb2YgSW5kZXBlbmRlbmNlLiBJIG1pZ2h0IGJlIGEgdGFkIGJpYXNlZCBidXQgSSB0aGluayBpdCBhIHZlcnkgaW50ZXJlc3RpbmcgcGllY2Ugb2YgaGlzdG9yeSB0aGF0IG1vc3QgcGVvcGxlIGRvbiBrbm93IGFib3V0Li4gCkJlaW5nIGRlcHJlc3NlZCBvciBub3QgaGF2aW5nIGFuIGVtb3Rpb25hbCBib25kIHRvIHNvbWVvbmUgZG9lcyBub3QgaW52b2tlIHRoZSBkZXNpcmUgdG8gdG9ydHVyZSBhbmQga2lsbCB1bmxlc3MgeW91IGFyZSBhbHJlYWR5IGEgdmVyeSBmdWNrZWQgdXAgcGVyc29uLiBUaGlzIGlzbiBqdXN0IGRlcHJlc3Npb24uCldoZXJlYXMgZm9yIGV2ZXJ5b25lIGVsc2UgdGhpcyB3YXMgdmFjYXRpb24gIGZvciBtZSwgd2FzIGZhciBmcm9tIGl0LiAoQXMgdXN1YWwgZm9yIHVzIG1vbXMgYnV0IGV2ZW4gd29yc2UgYXMgSSdkIG5ldmVyIHZhY2F0aW9uIGhlcmUgdG8gYmVnaW4gd2l0aDsgYW5kIGFueSB0aW1lIHdpdGggTUlMIGlzIG5vdCBmdW4pLiAKQnV0LCBsZXQgc2F5IGl0IGFnYWluIGZvciBkcmFtYXRpYyBlZmZlY3Q6IElmIHlvdSBkb24gaGF2ZSBpdCwgZG9uIHBsYXkgaXQuIFNpbXBsZSBhcyB0aGF0LiAKTXkgRklMIHN1ZmZlcnMgZnJvbSB0aGlzIGFzIHdlbGwgYW5kIG15IHdpZmUgaXMgYSBjYXJyaWVyLiAKSXQgc2hvd3MgYWxsIHRoZSBwbGF5ZXJzIGhhbmRzLiBUaGVuIGNsaWNrIGV4aXQgZ2FtZWFnYWluLC4gCkZ1bGwgZGlzY2xvc3VyZSwgSSBoZWxwIHJ1biB0aGVzZSBjcnVpc2VzLCBidXQgY291bGQgYW5zd2VyIGEgZmV3IG9mIHlvdXIgcXVlc3Rpb25zIGZyb20gV1BUIHBlcnNwZWN0aXZlLiBUaGUgcHJpY2Ugb24gV1BUIENydWlzZSBpbmNsdWRlcyBwb3J0IGZlZXMsIHRheGVzIGdyYXR1aXRpZXMuIEkgYmVsaWV2ZSBhZnRlciB0aGF0IGlzIHNvcnRlZCwgaXRzIHByb2JhYmx5IG9ubHkgc2xpZ2h0bHkgaGlnaGVyIHRoZSBwcmljZSB5b3Ugd2VyZSBxdW90ZWQgZnJvbSBSQ0ksIGFsdGhvdWdoIFJDSSBkb2VzIHJ1biBzb21lIGdyZWF0IHNwZWNpYWxzIGFuZCB5b3UgbWlnaHQgZXZlbiBnZXQgaXQgZm9yIGNoZWFwZXIgZGlyZWN0bHkgaWYgeW91IGp1c3Qgd2FudCB0byBnbyBvbiBhIGNydWlzZS4gV2UgZ2V0IG91ciBjYWJpbiBibG9jayBlYXJseSBhbmQgcHJpY2UgbWlnaHQgYmUgYSBiaXQgaGlnaGVyLiBUaGUgV1BUIHJlbnRzIHRoZSBjb25mZXJlbmNlIGFyZWEgdy9mb29kLCBicmluZ3MgdGhlIHRhYmxlcywgY2hpcHMsIGNhcmRzLCBkZWFsZXJzLCBzd2FnLCB0YWxlbnQsIGluc3RydWN0b3JzLCBldGMsIHNvIHRoZXJlIGlzIHNvbWUgZXh0cmEgY29zdC4gVGhlIHBva2VyIHBhcnRpY2lwYXRpb24gZmVlIGlmICQyNTBwcCwgb24gdG9wIG9mIGNhYmluIGNvc3RzLCB3aGljaCBjb3ZlcnMgYWxsIHRoaXMgc3R1ZmYsIGluY2x1ZGluZyBmcmVlcm9sbHMsIFEgKyBtZWV0IGdyZWV0cyB3aXRoIFdQVCB0YWxlbnQgTGVhcm5XUFQgbWluaSBzZW1pbmFycy4gSWYgeW91IGhhdmUgbm9uIHBsYXlpbmcgZ3Vlc3QsIHRoZXkgZG9uIGhhdmUgdG8gcGF5IHRoaXMuCkhlIHdyb3RlIGJvb2tzLCBwZW9wbGUgYm91Z2h0IHRob3NlIGJvb2tzLiAKV2hpdGUgZ3V5cyBhcmUgbXVjaCBtb3JlIGxhaWQgYmFjayBhbmQgYXJlIGhhcHB5IHRvIGNhcnJ5IG9uIHRoZSBjb252ZXJzYXRpb24gZm9yIGFub3RoZXIgMzAgbWludXRlcyB3aGlsZSB0aGUgY2hlY2sgaXMgbGF5aW5nIG9uIHRoZSB0YWJsZTsgc29tZSBhcmUgZXZlbiB3aWxsaW5nIHRvIGdvIGR1dGNoIHRvIGZ1cnRoZXIgc2hvd2Nhc2UgdGhlaXIgc3VwcG9ydCB0b3dhcmRzIGdlbmRlciBlcXVhbGl0eS4gClRoYXQgYSBIVUdFIGhlYWQgc3RhcnQgaW4gbGlmZSBhbmQgb24gdGhlIHBhdGggdG8gd2VhbHRoLiBUaGV5IGRvbnQgaGF2ZSB0byB3b3JyeSBhYm91dCBhIGhhbGYgYSBtaWxsaW9uIGRvbGxhciBtb3JnYWdlLCBwdXR0aW5nIHRoZW0gaW5zdGFudGx5IGFoZWFkIG9mIDk5JSBvZiBvdGhlciBsYXRlIDIwc29tZXRoaW5nIGNvdXBsZXMuIFRoaXMgbWVhbnMgdGhhdCBhbnkgd2VhbHRoIHRoZXkgYWNjdW11bGF0ZSBpbiB0aGVpciBsaXZlcyBjYW4gYmUgcGFpZCBmb3J3YXJkIHRvIHRoaWVyIGNoaWxkcmVuLCBhbmQgc28gb24uLiAKSWYgdGhlIGZsYWdzaGlwIGhhY2tzIHlvdXIgcGlsb3Rpbmcgb3IgZW5naW5lcywgeW91IG5lZWQgdG8gdGFrZSBvdXQgdGhlIGlvbiBjYW5ub24gZmlyc3QgKEkgc29tZXRpbWVzIGxpa2UgdG8gZG8gdGhpcyBhbnl3YXlzKS4gSWYgdGhlIGZsYWdzaGlwIGhhY2tzIHlvdXIgc2hpZWxkcywgeW91IGhhdmUgdG8gc3VwcHJlc3MgaGFja2luZyAob3IgYWxsIHdlYXBvbnMpLCBhbmQgeW91IGFyZSBwcm9iYWJseSBiZXR0ZXIgb2ZmIGp1c3QgZGVzdHJveWluZyB0aGUgc2hpcC4gCkluIG15IG9waW5pb24sIHRoZXNlIHByYWN0aXRpb25lcnMgYXJlIGhlbHBpbmcgY2xpZW50cyBoZWFsIGZyb20gb2xkIGVtb3Rpb25hbCB3b3VuZHMuIApOb3QgbGlrZSBub3JtYWwgY2F0IGN1ZGRsaW5nIHdoZXJlIHRoZXkgYXJlIGFsbCB1cCBjbG9zZSBhbmQgcGVyc29uYWwuIApOb3QgZXhhY3RseSwgSSB1c2VkIHRvIHN0YXkgdmVyeSBkZXRhY2hlZCBmcm9tIGV2ZXJ5b25lIGJlY2F1c2UgSSB1c2VkIHRvIGJlbGlldmUgdGhhdCBieSBub3QgYmVpbmcgZW1vdGlvbmFsbHkgaW52ZXN0ZWQgaW4gYW55b25lIG5vdGhpbmcgaGFwcGVuaW5nIHRvIHRoZW0gYXJlIGFueXRoaW5nIHRoZXkgZG8gY2FuIG5ldmVyIGh1cnQgeW91IGFuZCB5b3UgY2FuIGZvY3VzIHRoYXQgbWVudGFsIGVuZXJneSBvbiBzY2hvb2wgYW5kIHdvcmsgYW5kIGV0Yy4KTGVzbGV5IGFuZCBEb25ueSBNY0VsaGluZXkncyBob21lIGluIEFwcGxldG9uLCBXaXNjb25zaW4sIHdhc24ndCB0aGUgc2FtZSBhZnRlciB0aGVpciBvbmUgeWVhciBvbGQgdGFiYnkgRW1pbHkgZGlzYXBwZWFyZWQuIEJ1dCBzaGUgZGlkbid0IGp1c3QgZGlzYXBwZWFyLCBzaGUgd2VudCBvbiBhIDQsNTAwIG1pbGUgYWR2ZW50dXJlISBJdCBzZWVtcyBFbWlseSB3YXMgb24gaGVyIGV2ZW5pbmcgcHJvd2wgd2hlbiBzaGUgZm91bmQgaGVyc2VsZiBvbiBhIHRydWNrIHRvIENoaWNhZ28gaW5zaWRlIGEgY29udGFpbmVyIG9mIHBhcGVyIGJhbGVzLiAKSSBhbHdheXMgcmVhZCByZXZpZXdzLiBVc2VyIHJldmlld3MgYW5kIHByb2Zlc3Npb25hbCByZXZpZXdzLiBFdmVuIGZvciBnYW1lcyB0aGF0IEkgYWxyZWFkeSBvd24gYmVjYXVzZSBJIGp1c3QgbGlrZSB0byByZWFkIHRoZW0gYW5kIHNlZSB3aGF0IG9waW5pb24gb3RoZXIgcGVvcGxlIGhhdmUuIFJldmlld3MgYXJlIGFsd2F5cyB2ZXJ5IHN1YmplY3RpdmUsIGV2ZW4gcHJvZmVzc2lvbmFsIHJldmlld3MgYmVjYXVzZSBpdCBqdXN0IGltcG9zc2libGUgdG8gYmUgZW50aXJlbHkgb2JqZWN0aXZlIGFuZCBzb21lIG9mIGl0IGlzIGFsd2F5cyBwZXJzb25hbCBvcGluaW9uLiBTbyBpZiBpdCBhIGdhbWUgSSBhbSB1bmRlY2lkZWQgaWYgSSB3YW50IHRvIGJ1eSBvciBub3QsIEkgc2ltcGx5IGNvbXBhcmUgbWFueSBkaWZmZXJlbnQgcmV2aWV3cyBhbmQgd2hhdCBwb3NpdGl2ZSBhbmQgbmVnYXRpdmUgcG9pbnRzIGdldCBtZW50aW9uZWQgdGhlIG1vc3QgYW5kIGlmIHRoZXkgcmVsYXRlIHRvIG1lLgpTb21ldGltZXMgdGVhcnMgb2Ygam95LCBzYWRuZXNzLCBncmllZiwgZXRjIGNvbWUgdGhyb3VnaCBhbmQgc29tZXRpbWVzIG5vdC4gVGhlIGxhY2sgb2YgdGVhcnMgYXJlIG5vdCBhIHNpZ24gdGhhdCBlbW90aW9uYWwgaGVhbGluZyBoYXMgbm90IG9jY3VycmVkLi4gCkJlY2F1c2Ugb2YgeW91ciBiYWNrc3RvcnksIHRoZSBzdGFrZXMgb2YgdGhlIG1haW4gbmFycmF0aXZlIGp1c3QgZmVsdCBhIGJpdCB0b28gaW50aW1hdGUgSSB0aGluaykgLiAKIlRoYXQgZW5naW5lZXJpbmcgZGVncmVlIGhlbHBlZCBtZSBsZWFybiBob3cgdG8gYmUgdmVyeSBzcGVjaWZpYyBiaW9tZWNoYW5pY2FsbHksIiBzYXlzIExlYWh5LiAiVGhlcmUncyBubyB3YXkgSSBjb3VsZCBoYXZlIGRldmVsb3BlZCBBY3RpdmUgUmVsZWFzZSB3aXRob3V0IGhhdmluZyB0aGF0IGVuZ2luZWVyaW5nIGJhY2tncm91bmQuIgpSaWpkZW5kIGRvb3IgZWVuIGhlZWwgZ3JvZW4gYm9zZ2ViaWVkIGdpbmcgaGV0IHJpY2h0aW5nIHNuZWx3ZWcsIG1hYXIgbmEgZWVuIHBhYXIga2lsb21ldGVyIG1hYWt0ZW4gd2UgYWxzIGVlbiBzdG9wIGJpaiBrdXVyb29yZCBTa2xlbmUgVGVwbGljZTsgYWNodGVyIGRlIG91ZGVyd2V0c2Uga3V1cmdlYm91d2VuICh3YWFyIGFsIGRlIG5vZGlnZSBTbG93YWFrc2Uga3V1cmRlcnMgcm9uZGxpZXBlbikgdm9uZGVuIHdlIGVlbiBrbGVpbiByaXZpZXJ0amUgd2FhcmluIGRyaWUgaGV0ZSBicm9ubmVuIHVpdGt3YW1lbiwgbWV0IGRlIG5vZGlnZSBrYWxrYWZ6ZXR0aW5nZW4gaW4gcm96ZSwgb3JhbmplIGVuIGdyb2VuZSB0aW50ZW4uIApUaGUgYmlnZ2VzdCBjcmltZSB0aG91Z2gsIGlzIHBvY2tldCBRdWVlbnMuIApXaGF0IE9uVGhpbmdzIHRvIGRvRm9vZCBhbmQgRHJpbmtUaGVhdHJlIGFuZCBBcnRzRmFtaWx5IGFuZCBLaWRzTXVzaWMgYW5kIEdpZ3NUViBHdWlkZURpZ2l0YWwgUHJpbnQgRWRpdGlvblRocmVlIElsbGF3YXJyYSBwb2tlciBlbnRodXNpYXN0c3dhbGtlZCBhd2F5IHdpdGggdGhlIHRvcCBwbGFjaW5ncyBpbiB0aGUgTmF0aW9uYWxQb2tlciBMZWFndWUncyBXb2xsb25nb25nIEN1cCBvbiBTYXR1cmRheSwgcG9ja2V0aW5nIHRoZSBsaW9uJ3Mgc2hhcmUgb2YgdGhlJDE5LDAwMCBwcml6ZSBtb25leS4gV29sbG9uZ29uZydzIERlYW4gTGVlIGJlYXQgb3V0IEJlcmtlbGV5IHBsYXllciBCcmFkIE1pY2FsZWYgKDJuZCkgYW5kIEJ1bGxpJ3MgUm9zYSBTcGVuY2VyICgzcmQpIHRvIHdpbiB0aGUgdG91cm5hbWVudCwgd2hpY2ggYmVnYW4gYXQgMTBhbSB3aXRoIDkzIGNvbXBldGl0b3JzIGFuZCBvbmx5IGNvbmNsdWRlZCBzb21lIDEzLjUgaG91cnMgbGF0ZXIganVzdCBiZWZvcmUgbWlkbmlnaHQuIEV2ZW50IG9yZ2FuaXNlciBSeWFuIEZyZWVtYW4gc2FpZCBwbGF5ZXJzIHRyYXZlbGxlZCBmcm9tIGFzIGZhciBhcyBzb3V0aGVybiBOU1dhbmQgVmljdG9yaWEgdG8gdHJ5IHRoZWlyIGx1Y2suIApBcHBhcmVudGx5LCBhbmQgSSBkb24ga25vdyB0aGlzIHRvIGJlIDEwMCUgdHJ1ZSwgdGhlIGd1eSBzb24gd2FzIHN0YW5kaW5nIHJpZ2h0IG5leHQgdG8gaGltLiAKSWYgeW91IGJldCB1c2luZyBzbWFsbCBwaWVjZXMgb2YgY2FuZHksIHlvdSBjYW4gZW5kIHVwIHdpdGggYSBkZWxpY2lvdXMgdHJlYXQgYXQgdGhlIGVuZC4gCi9QaG90byBwcmlzZSBsZSAxNCBvY3RvYnJlIDIwMTgvUkVVVEVSUy9Xb2xmZ2FuZyBSYXR0YXlCRVJMSU4gKFJldXRlcnMpICAgTGEgY29kaXJpZ2VhbnRlIGR1IHBhcnRpIGQnZXh0cm1lIGRyb2l0ZSBhbGxlbWFuZCBBZkQgQWxpY2UgV2VpZGVsIGEgYWNjdXMgdmVuZHJlZGkgbGVzIG1kaWFzIHF1aSBvbnQgZHZvaWwgdW5lIGFmZmFpcmUgZGUgZG9ucyAgc29uIHBhcnRpIGRlIGNoZXJjaGVyICBsYSBkaXNjcmRpdGVyLi4gClRoZXJlIGlzIHZhbHVlIGluIGxlYXJuaW5nIHdoYXQgZG9lc24ndCB3b3JrIGZvciB5b3UsIGp1c3QgYXMgdGhlcmUgaXMgdmFsdWUgaW4gbGVhcm5pbmcgd2hhdCBkb2VzLiAKS2V2aW4gU3BhY2V5IGFuZCBIYXJ2ZXkgV2VpbnN0ZWluIGFyZSB0d28gb3RoZXIgaHVnZSBvbmVzIHRoYXQgZGlyZWN0bHkgY29ubmVjdCB0byB0aGUgQ2xpbnRvbnMuIAozLiBUcnVzdCB5b3VyIG93biBqdWRnZW1lbnQsIGp1c3QgYXMgaW4gYW55IHNpdHVhdGlvbi4gKElmIHNvbWV0aGluZyBkb2VzbnQgc2VlbSByaWdodCwgaXQgcHJvYmFibHkgaXNudC4pCkl0IHZhcmllcyBiYXNlZCBvbiBob3cgaGFyZCBJJ3ZlIHdvcmtlZCBvdXQuIApUaGlzIGV4cGFuc2lvbiBpcyBtYWlubHkgZHVlIHRvIHRoZSBmYWN0IHRoYXQgWWFob28hIGhhcyBhY3F1aXJlZCBtYW55IGNvbXBhbmllcyBzaW5jZSBpdHMgaW5jb3Jwb3JhdGlvbiwgY29tcGFuaWVzIHN1Y2ggYXMgR2VvQ2l0aWVzIChpbiBNYXkgMTk5OSksIHdoaWNoIGJlY2FtZSBwYXJ0IG9mIFlhaG9vISBhbmQgcHJvdmlkZWQgc3BhY2Ugb24gdGhlIHdlYiBmb3IgdGhlIHBlcnNvbmFsIHdlYnNpdGVzIG9mIHRoZSBtZW1iZXJzIG9mIFlhaG9vISwgdW50aWwgaXQgY2xvc2VkIGluIDIwMTAuIApXaGF0IGlzIHRoZSBiZXN0IHdheSB0byByZWFsaXplIHlvdXIgZXF1aXR5Py4gCkV0IHF1aSBkaXQgbGEgcGFpeCBhcHBlbGxlIGxhIGd1ZXJyZTogcGFyZm9pcyBtYXJ0aWVuLCBsZSBjaG5lLCBtb2lucyBxdWUgZ3VlcnJpZXIsIHJlcHJzZW50ZSBzdXJ0b3V0IGxlcyBob25uZXVycyBtaWxpdGFpcmVzOiBjIGRlcyBjb3Vyb25uZXMgZGUgcmFtZWF1eCBkZSBjaG5lIHF1ZSBwb3J0YWllbnQgbGVzIGltcGVyYXRvcmVzIHJlbnRyYW50IHRyaW9tcGhhbnRzIGRhbnMgUm9tZS4gTGUgY2huZSBhbGxhaXQganVzcXUgdHJlIHByb3RlY3RldXIgc3VyIGxlcyBjaGFtcHMgZGUgYmF0YWlsbGU6IG9uIGNyb3lhaXQgbGVzIGZldWlsbGVzIGRlIGNobmUgY2FwYWJsZXMgZGUgcHJvdGdlciBmYWNlIGF1eCBhcm1lcyAgZmV1LiBFdCAgY2VsbGVzIHRyYW5jaGFudGVzLCBvbiByc2VydmFpdCBsYSBndXJpc29uIGRlcyBibGVzc3VyZXMgcXUgb2NjYXNpb25uYWllbnQgIGwgZGUgU2FpbnQgSmVhbi4uIApQZXJoYXBzIGV2ZW4gcmVjbGFpbSBoZXIgbW9ydGFsaXR5Li4gClRoZSByZWFzb24gSSBzdWdnZXN0aW5nIHRvIGdvIERlbHBob2kgb3ZlciBMaXNhIGlzIGZvciBhIGNvdXBsZSBvZiByZWFzb25zLiBEZWxwaG9pIGJhc2Ugc3RhdHMgbWFrZSBpdCBzaWduaWZpY2FudGx5IGVhc2llciB0byBnZXQgaGVyIGZyb250IGxpbmluZyBmb3Igc3RhcnRlcnMsIGFuZCBzaGUgcHJvdmlkZXMgYW4gZXh0cmEgaGVhbCB3aGljaCBpcyBhbHdheXMgbmljZS4gQmV0d2VlbiBoZXIgYW5kIENvbGxlZW4geW91IHNob3VsZCBiZSBzb3J0ZWQgZm9yIGhlYWxpbmcsIGlmIGl0IHN0YXJ0cyBnb2luZyB3cm9uZyB5b3UgY291bGQgbWF4IHRoYXQgTWloeWFuZyBhbmQgc3ViIG91dCBhIGRhbWFnZSBkZWFsZXIgZm9yIGhlci4KTGV0IG1lIHRlbGwgeW91IG1hbiwgSSBoYXZlIHRyaWVkIGV2ZXJ5dGhpbmcgdGhlcmUgd2FzIHRvIHRyeS4gSSBoYXZlIHVzZWQgc3Rlcm9pZHMgYWxsIG9mIG15IGxpZmUsIGFuZCBJIHdhcyBzaWNrIG9mIHVzaW5nIHRoZW0gYXMgd2VsbC4gSSB0cmllZCBEdXBpeGVudCBhcyB3ZWxsIHdpdGggbm8gbHVjayB3aGF0c29ldmVyLiAKRXZlbiBpZiB0aGUgcHV0IHRoYXQgaW4gdGhlcmUsIGNhbGxpbmcgYW4gT1AgYW4gYXNzaG9sZSBpZiB5b3UgZGlzYWdyZWVlIGNvdWxkbid0IGJlIGZ1cnRoZXIgZnJvbSBzdXBwb3J0aXZlLiAKQXVmIGRlciBhbmRlcmVuIFNlaXRlIGhhdHRlIGljaCBtYWwgbmUgSGFuZCwgbWl0IFN0cmFpZ2h0IEZsdXNoIChJY2gpIGdlZ2VuIE51dCBGbHVzaCAoVmlsbGlhbikgdW5kIGRlciBBcnNjaCBjYWxsdCBtZWluZW4gUml2ZXJyYWlzZSBudXIsIGFuc3RlbGxlIHp1IHB1c2hlbiAod2FyIG5pY2h0IG1laHIgdmllbCBpbiBkZW4gU3RhY2tzKSBkYSBiZWtvbW10IG1hbiBlY2h0IG5lIEtyaXNlLiAKQ3JhemVkM3Jhc2VyICAxIHBvaW50ICBzdWJtaXR0ZWQgMyBkYXlzIGFnbwpFbnRzY2hlaWRlc3QgZHUgZGljaCBkYXp1IG1pdCBoaGVyZW4gRWluc3R6ZW4genUgc3BpZWxlbiB1bSBtZWhyIEdlbGQgaW4gd2VuaWdlciBaZWl0IHp1IHZlcmRpZW5lbiwgZGFubiB3ZXJkZW4gZGVpbmUgR2VnbmVyIHZvbiBudW4gYW4gdW5nbGVpY2ggc2Nod2llcmlnZXIgenUgc2NobGFnZW4gc2Vpbi4gCkl0IHdhc24gdGhlIGJlc3QgYnV0IHBlb3BsZSBsb3ZlZCBpdC4gCkluIHRoZSBsYXN0IGZldyB3ZWVrcywgYXMgdGhlIEFtYXpvbiBkZWFsIHdhcyBzb2xpZGlmeWluZywgdGhlIFlhbmtlZXMgdG9sZCBZRVMgaXQgd291bGQgbm90IHJlbmV3IGl0cyBzdHJlYW1pbmcgbGljZW5zZSB3aXRoIHRoZSBzcG9ydHMgbmV0d29yaywgc291cmNlcyBzYWlkLgpNb3Jlb3Zlciwgc2luY2UgY2VsbHVsaXRpcyBjYW4gYWxzbyBiZSBjYXVzZWQgYnkgcG9vciBiYWQgY2lyY3VsYXRpb24sIGEgbWFzc2FnZSBjYW4gb3B0aW1pemUgdGhlIGJsb29kIGZsb3cgaW4gdGhlIGFyZWEgb2YgdGhlIGRpc2Vhc2UuLiAKUGVvcGxlIGJlYXJpbmcgdGhlIGhvcnNlIHNpZ24gc3RyaXZlIHRvd2FyZHMgc2Vla2luZyBmcmVlZG9tIGFuZCBoYXBwaW5lc3MuIEluIGdlbmVyYWwsIDIwMTQgd291bGQgYmUgYSBiZXR0ZXIgeWVhciBmb3IgdGhvc2UgcGVvcGxlIHdobyB3ZXJlIGJvcm4gdW5kZXIgVGhlIFllYXIgb2YgdGhlIEhvcnNlLi4gCldhcyBtYWluc3RyZWFtIG1lZGlhIHRoYXQgY2lyY3VsYXRlZCBPIHdvcmsgYXMgaWYgaXQgd2VyZSBqb3VybmFsaXNtIHdoZW4gdGhleSB3b3VsZCBuZXZlciBjaXJjdWxhdGUgU2FjaGEgQmFyb24gQ29oZW4gd29yayBhcyBpZiBpdCB3ZXJlIGpvdXJuYWxpc20uIApTYWJicmluYSB1ClNlZTogZmluYWwgcmVwb3J0cyBvbiBib3RoIHNodXR0bGUgbG9zc2VzLCBwbHVzIG9uIHByb2JhYmx5IGhhbGYgb2YgYWxsIGxhcmdlIGZhdGFsaXR5IGNpdmlsIGF2aWF0aW9uIGRpc2FzdGVycyBpbiB0aGUgbGFzdCAyNSB5ZWFycyBiYXJlIG1pbmltdW0sIGV0YykuIApXaGVuIHlvdSBhcmUgbG9va2luZyBmb3Igd2F5cyB0byBzYXZlIHJvb20gd2hpbGUgc3RpbGwgZ2V0dGluZyBhIHRhYmxlIHRoYXQgbG9va3MgZ3JlYXQsIHlvdSB3aWxsIGZpbmQgdGhhdCB0aGlzIGlzIHBvc3NpYmxlIGFzIHdlbGwuLiAKVW5kZXJzdGFuZCBjYXJkIGNvdW50aW5nLiAKRGlzYXBwZWFycyBpbnRvIHRoZSBuaWdodCAoZGlkIGhlIGp1c3QgZHJpdmUgYWxsIHRoZSB3YXkganVzdCB0byBwbGF5IDE1IG1pbnMgb2YgcG9rZXI/KS4uIApJIGRpZCBpdCBpbiBBcHJpbCBhbmQgaXQgd2FzIHZlcnkgbmljZS4gVGhlIGNvdW50cnkgc2lkZSBpcyBlc3BlY2lhbGx5IG5pY2UgZHVyaW5nIEFwcmlsIGFzIHlvdSBjYW4gc2VlIGEgbG90IG9mIGNoZXJyeSBibG9zc29tcyByYW5kb21seS4KQW5kIG1hbiwgSSBub3QgaGVyZSB0byBzcG9vbmZlZWQgeW91IHNoaXQuIFdoeSBkbyB5b3UgZ3V5cyBuZWVkIGV2ZXJ5dGhpbmcgbWFkZSBpbnRvIGxpdHRsZSBiaXRlc2l6ZSBjaHVua3MuIFRoZSBwcm9ibGVtIGZyb20gcmlnaHQgd2luZyBzdXByZW1hY2lzdHMgb25saW5lLCBpc24ganVzdCB0aGF0IHlvdSBhcmUgYW5ub3llZCBvbiB0d2l0dGVyLiBUaGV5IGFjdHVhbGx5IGFmZmVjdCB0aGUgbGl2ZXMgb2YgcGVvcGxlLiBUaGV5IHNob3QgdXAgYSB5b2dhIHN0dWRpbyBmdWxsIG9mIHdvbWVuLCB0aGV5IHNob3QgdXAgYSBzeW5hZ29ndWUsIHRoZXkgc2hvdCB1cCB3aGF0ZXZlciByZXN0YXVyYW50IG9yIHNlbmQgYm9tYiB0aHJlYXRzLCB3aGF0ZXZlci4gWW91IHdvdWxkIGxpa2VseSBuZXZlciBiZSB0aGUgdGFyZ2V0IG9mIHRoZWlyIGhhdHJlZCwgc28gaXQgaXNuIHJlYWxseSBhIGxpdGVyYWwsIHJlYWwgd29ybGQgZmVhciBmb3IgeW91IGFwcGFyZW50bHkuCkRpc2NsYWltZXI6IEkgYW0gbm8gcHJvLCBhbmQgbGlrZSBhbGwgb2YgdXMsIGhhdmUgYSBsb3QgdG8gbGVhcm4gYWJvdXQgdGhlIGdhbWUuIEkgdXNlZCB0byBwbGF5IHVwIHRvIDYwME5MIGJhY2sgaW4gdGhlIGRheSBvbmxpbmUgd2hlbiB0aGF0IHdhcyBhcm91bmQgdGhlIHNraWxsIGVxdWl2YWxlbnQgdG8gMjUgNTBOTCB0aGVzZSBkYXlzLiBJIHJlZ3JldCBhbG1vc3QgbW9yZSB0aGFuIGFueXRoaW5nIG5vdCB0YWtpbmcgcG9rZXIgc2VyaW91c2x5IGJhY2sgdGhlbiwgYnV0IGFsYXMsIGhlcmUgd2UgYXJlLiAKSSBhbHNvIHNldCB0aGUgTWF4IE9jY3VycyBvbiB0aGUgVGVtcEN1c3Qgbm9kZSB0byAxLi4gCkdldCByZWRkaXQgcHJlbWl1bVdlbGNvbWUhIFRoZSBpbWFnZXMgaW4gdGhpcyBzdWJyZWRkaXQgaGF2ZSBiZWVuIGRlc2lnbmVkIHRvIGJlIG1vc3RseSB0cnVlIGJsYWNrLiBUaGlzIGNhbiByZWR1Y2UgcG93ZXIgdXNhZ2Ugb24gcGhvbmVzIHdpdGggQU1PTEVEIGRpc3BsYXlzLCBhcyB0aGV5IGFjdHVhbGx5IHN3aXRjaCBvZmYgcGl4ZWxzIHRoYXQgYXJlIG1lYW50IHRvIGRpc3BsYXkgYmxhY2ssIHRoZXJlYnkgc2F2aW5nIHBvd2VyLiBJdCBhbHNvIGxvb2tzIGdvb2QgYW5kIGl0IGVhc2llciBvbiB0aGUgZXllcyBpbiBsb3dlciBsaXQgZW52aXJvbm1lbnRzLi4gCkEgaGVhbHRoeSB0aW1lIChmb3IgY29tbWVyY2lhbCByZW50ZXJzKSB0byBiZSBpbiB0aGUgbWFya2V0LiAKUm9ocm1hbiBjYW4gbWFrZSBkZWFscyBiZWNhdXNlIGhlJ3Mgc2VsZiBmdW5kaW5nIGFuZCBkaWRuJ3QgZGl2ZXJ0IGhpcyBhdXRvIHByb2ZpdHMgaW50byBvdGhlciBsaW5lcyBvZiBidXNpbmVzcy4KV2l0aCBtdWNoIG9mIEluZGlhIGFncmljdWx0dXJhbCBhbmQgbWludXMgbWVjaGFuaXphdGlvbiwgdGhlIGJ1bGwgcHVsbHMgcGxvd3Mgb3IgaGF1bHMgbG9hZHMgdG8gbWFya2V0cy4gRGFpcnkgcHJvZHVjdHMgcHJvdmlkZSBebWlsbGlvbnMgb2YgSW5kaWFuIHZlZ2V0YXJpYW5zIHRoZWlyIG9ubHkgcHJvdGVpbi4gCkRyZXNzZWQgYXBwcm9wcmlhdGVseSBpbiBqZWFucyBhbmQgYSB3aW50ZXIgY29hdCwgQ09CIHdhbGtlZCBvdXR0YSB0aGUgcmVzdGF1cmFudCB3aXRoIGFuIGVxdWFsbHkgdGFsbCBhZ2VudCBsb29raW4nIGFtaWdvLiAKRGVhciAyOWtpbmRlcmdhcnRlbmN1dGllcywgVGhlIG5ldyBEaWdpdGFsIEtleSBhcHAgaGFzIGRvbmUgd29uZGVycyBmb3IgdHJhdmVsZXJzIGluIHRoaXMgZ2VuZXJhdGlvbi4gSXQgaXMgaW5ub3ZhdGl2ZSBhbmQgY29udmVuaWVudCBhbmQgSSBhbSBnbGFkIHRoYXQgeW91IGFyZSB0YWtpbmcgYWR2YW50YWdlIG9mIHRoaXMgbmV3IHByb2dyYW0gSGlsdG9uIGhhcyBmb3IgSGlsdG9uIGhvbm9ycyBtZW1iZXJzLiAKSSBvbmx5IGFkZGVkIG9uIGFib3V0IGFuIGV4dHJhIHNlbWVzdGVyIGJ5IGRvdWJsZSBtYWpvcmluZyB3aXRoIGEgbWlub3IgKGJ1c2luZXNzIHNjaG9vbCByZXF1aXJlZCBhIG1pbm9yIHdoZW4gSSB3YXMgdGhlcmUgICBncmFkdWF0ZWQgaW4gRGVjIDIwMTAuKUJlIHdhcm5lZCAgIHRoZSBmaW5hbmNlIGRlcHQgaXMgaW50ZW5zZS4gClRoaXMgaXMgbm90IHNvbWV0aGluZyBJIGV4cGVyaWVuY2VkIHdpdGggQW5ndWxhciBjb2RlLiAKTmFuY3kgUGVsb3NpIFJFQURTIHRocm91Z2ggVHJ1bXAncyBTdGF0ZSBvZiB0aGUgVW5pb24KVGhlIGJlc3QgZGVmZW5zZSBhZ2FpbnN0IHJhYmllcyBpcyBhIHN0cm9uZyBvZmZlbnNlLiBBbiBpbmRvb3IgY2F0IGhhcyBuZWFybHkgbm8gY2hhbmNlIG9mIGJlaW5nIGV4cG9zZWQgdG8gcmFiaWVzLCBidXQgdGhlIHNhZmVzdCBiZXQgaXMgdG8gZ2l2ZSB5b3VyIGNhdCBhIHJhYmllcyB2YWNjaW5lIGFuZCBrZWVwIGl0IGN1cnJlbnQuIApLaW5nIG9mIEZpZ2h0ZXJzICc5OCBpcyB0aGUgZmlmdGggaW4gdGhlIHNlcmllcywgYW5kIGl0IHNob3dzIG5vIHNpZ24gb2Ygc2xvd2luZyBkb3duIG5vdy4gCkkgd2VudCBvbiBhIHNob3J0IHJ1biB0aGUgb3RoZXIgZGF5LCBhbmQgYWJvdXQgMiBtaWxlcyBpbiBpdCBzaG90IHVwIG91dCBvZiBub3doZXJlIGFnYWluIHNvIEkgaGFkIHRvIHN0b3AgcnVubmluZy5JIGZlZWwgc28gZGVmZWF0ZWQgYW5kIEkgd2FudCB0byBjcnkuIApUaGUgbWFsbCBpbiBHcmVlbiBIaWxscyBoYXMgYSBsb3Qgb2YgaGlnaGVyIGVuZCBjbG90aGluZyBzdG9yZXMgaWYgeW91IGNhbiBnZXQgb3V0IHRoZXJlLiBBcyBmYXIgYXMgdGhyaWZ0cyBJIGFsd2F5cyBoYWQgbHVjayBhdCB0aGUgTXVzaWMgQ2l0eSBUaHJpZnQgb24gR2FsbGF0aW4gYnV0IHRoYXQgYSBsb25nIHdheSBmcm9tIHdoZXJlIHlvdSBiZSBzdGF5aW5nLiAKVW5kIGRhc3MgZGllIHZlcnNwcm9jaGVuZW4gQnVzc2UgZGFubiBhdWNoIHdlZyB3YXJlbiwgd2FyIGRhbm4gZGllIEtybnVuZy4gClRoZSBtb3N0IG9idmlvdXMgY2FuZGlkYXRlIHdvdWxkIGJlIHRoZSBDYWlzc2UgZGUgZCBldCBwbGFjZW1lbnQgZHUgUXUgd2hpY2ggbWFuYWdlcyAkMzA5LjUgYmlsbGlvbiBvbiBiZWhhbGYgb2YgUXVlYmVjIHBlbnNpb24gZnVuZHMgYW5kIGluc3VyYW5jZSBwbGFucyBhbmQgd2hpY2ggaXMgYWxyZWFkeSBTTkMgbGFyZ2VzdCBzaGFyZWhvbGRlci4gCjMlIG9mIG15IHNhbGFyeSBpbiByZW50IGZvciBhIDIgaG91ciBjb21tdXRlIChJIGdvdCByYWlzZXMgYW5kIEkgbW92ZWQgdG8gdGhlIG1pZGRsZSBvZiBhbm90aGVyIHN0YXRlKS4uIAoiQXMgYSByZWFsIHBva2VyIHBsYXllciwgTWFyY2hpb25uZSB3b24ndCBzZXR0bGUgZm9yIHdpbm5pbmcganVzdCBvbmUgaGFuZCBhbmQgZ2V0dGluZyBDaHJ5c2xlcjsgaGUgd2FudHMgdG8gZ28gZm9yIHRoZSBqYWNrcG90IG9mIG1lcmdpbmcgd2l0aCBHTSwiIHNhaWQgVmluY2Vuem8gTG9uZ28sIGEgc3RyYXRlZ2lzdCBhdCBJRyBHcm91cCBpbiBNaWxhbi4gCkkgaGF2ZSB0byBtYWtlIGEgY29uY2VydGVkIGVmZm9ydCB0byBiZXR0ZXIgbXlzZWxmIG9yIEkganVzdCB2ZWcgb3V0IGRvaW5nIG5vdGhpbmcuIEkgZ290IHRvIGEgcG9pbnQgd2hlcmUgSSBjb3VsZCBmZWVsIG15c2VsZiBnZXR0aW5nIHN0dXBpZC4gCk92ZXJ2aWV3IGZvciBESgpJcyBpdCBwb3NzaWJsZSBmb3IgYSBwcmVnbmFudCB3b21hbiB0byBiZSBhbGxlcmdpYyB0byB0aGUgcGxhY2VudGEKIkFsbCBvZiB0aGlzIGlzIGEgc2hpZnQgYXdheSBmcm9tIHRoZSBbbW92aWVdIHN0dWRpbyBzeXN0ZW0gdG8gYSBzeXN0ZW0gY29udHJvbGxlZCBieSBwZXJmb3JtZXJzLCIgTWlrZSBTdGFiaWxlLCBhbiBhZHVsdCBmaWxtIGluZHVzdHJ5IGNvbnN1bHRhbnQsIHRlbGxzIFRoZSBQb3N0LiBTaGUncyBzdG9wcGVkIGZpbG1pbmcgcG9ybiBmb3Igc3R1ZGlvcyBpbiBmYXZvciBvZiBtYXJrZXRpbmcgaGVyc2VsZiBvbiBTbmFwY2hhdCAgIGFuZCBzaGUgdGVsbHMgVGhlIFBvc3QgdGhhdCBzaGUgbWFrZXMgbW9yZSBtb25leSBub3cgdGhhbiBzaGUgZGlkIHdvcmtpbmcgZm9yIHByb2R1Y3Rpb24gY29tcGFuaWVzLgpBbmQgZm91bmQgdGhhdCBwZW9wbGUgd2hvIHNpdCBmb3IgbW9zdCBvZiB0aGUgZGF5IGFyZSA1NCBwZXJjZW50IG1vcmUgbGlrZWx5IHRvIGRpZSBvZiBoZWFydCBhdHRhY2tzLgpQZW9wbGUgYXNzdW1lZCBpdCBkaWQgdW5kZXIgdGhlIGdyZXkgYXJlYSBjcnlwdG8gc2F0LCBhbmQgaW4gMjAxOCBUcnVtcCByZW1vdmVkIHRoZSBsaWtlIGtpbmQgdHJhbnNhY3Rpb24gYXBwbGljYXRpb25zIGZvciBhbGwgYnV0IHZlcnkgZmV3IHBpZWNlcyBvZiBwcm9wZXJ0eSBsaWtlIHJlYWwgZXN0YXRlL2FydC4uIApJZiBJIHdhcyBsZXNzIHRoYW4gYSBkYXkgbGF0ZXIgSSB3b3VsZCBoYXZlIG1lbHRlZCBteSBpbnNpZGVzIGFuZCBkaWVkIGluIHRoZSBuaWdodC4gVGhlIGhlYWQgZG9jdG9yIG9mIHRoZSBob3NwaXRhbCBzYWlkIGluIHRoZSAzNSB5ZWFycyBvZiBiZWluZyBhIGRvY3RvciBoZSBuZXZlciBvbmUgaGVhcmQgb2Ygc3VjaCBhIHRoaW5nIGhhcHBlbmluZyBhbmQgbXkgYXBwZW5kaXggd2FzIHRha2VuIHRvIHRoZSBsYWIgZm9yIGZ1cnRoZXIgdGVzdGluZyBhbmQgcmVzZWFyY2guLiAKQWJvdXQgdGhlIGFsbG93ZWQgZm9vZHMsIGRvbiBiZSB0b28gcmVzdHJpY3RpdmUsIG9yIHlvdSBnb2luZyB0byBmYWlsLiBIdW1hbnMgd2FudCB2YXJpZXR5IGluIGZvb2RzLiBZb3UgZmFsbCBvZmYgdGhlIHRyYWluIHdpdGhpbiBhIHdlZWsgZnJvbSBib3JlZG9tIGlmIHlvdSBvbmx5IGVhdGluZyByaWNlLCBtZWF0LCBhbmQgdmVnZ2llcy4gWW91IGNhbiBzdGFydCB3aXRoIHRoYXQsIGJ1dCB5b3Ugc2hvdWxkIGJlIHJlc2VhcmNoaW5nIGxvdyBjYWxvcmllIG1lYWwgaWRlYXMgc28geW91IGNhbiBzd2l0Y2ggaXQgdXAuIFlvdSBzaG91bGQgbWFrZSBzdXJlIHlvdSBrbm93IGhvdyBtdWNoIDRveiBvZiBtZWF0IGlzIGJlY2F1c2UgeW91IGJlIHN1cnByaXNlZCBhdCBob3cgZWFzaWx5IHlvdSBjYW4gZWF0IGRvdWJsZSB0aGF0IHNlcnZpbmcgd2l0aG91dCBrbm93aW5nIGl0IHdoaWNoIGNhbiBhZGQgQSBMT1Qgb2YgY2Fsb3JpZXMgaWYgeW91IGVhdGluZyBiZWVmLgpBbmQgdGhhdHMgbm90IGRlY2VudHJhbGl6ZWQgcG9rZXIuIFdoYXRldmVyIGlzIHlvdXIgcGVyc29uYWwgd2FsbGV0IHRoZXkgc2hvdWxkIG5vdCBiZSBhYmxlIHRvIHRvdWNoIGFuZCB3aGF0IGlzIGluIHRoZSBwbGF5ZXJzIHdhbGxldHMgc2hvdWxkIGJlbG9uZyB0byB5b3UuIApBZ2Fpbiwgd2UncmUgdGFsa2luZyBhYm91dCBub3JtYWwsIGhlYWx0aHkgcHJlZ25hbmNpZXMgaGVyZS4gQ29tcGxpY2F0ZWQgcHJlZ25hbmNpZXMgY2FuIGJlIGEgZGlmZmVyZW50IHN0b3J5LCBidXQgbm90IGJlY2F1c2UgbWFzc2FnZSBoYXMgYmVlbiBsaW5rZWQgdG8gaW5jcmVhc2VkIHJpc2tzIGluIHRob3NlIGNhc2VzLiAKV2hhdCBkb2VzIGEgVGV4YXMgSG9sZGVtIFBva2VyIFRhYmxlIEZlbHQgTGF5b3V0IGRvIGZvciB5b3U/IEZpcnN0IG9mIGFsbCwgaXQgcmVwbGljYXRlcyB0aGUgZXhhY3QgbGF5b3V0IHRoYXQgeW91J2xsIHNlZSBvbiBUVi4gSW5zdGVhZCBvZiBqdXN0IGhhdmluZyBhIHNpbXBsZSBnYW1lIHRhYmxlIHRvIHRyeSBhbmQgcGxheSBvbiwgdGhlIFRleGFzIEhvbGRlbSBQb2tlciBUYWJsZSBGZWx0IExheW91dCB3aWxsIGhlbHAgZ3VpZGUgeW91LiBZb3UnbGwga25vdyBleGFjdGx5IHdoZXJlIHRvIHBsYWNlIHRoZSBjYXJkcyBhbmQgdGhlIGNoaXBzIGFuZCB5b3Ugd2lsbCBiZSBwbGF5aW5nIGxpa2UgYSBwcm8gaW4gbm8gdGltZS4KMSBFc2NvcnQgU2VydmljZSBpbiBNYW5pbGEsIFBoaWxpcHBpbmVzCkVpbnppZyBtYW5jaGUgRyBzdCBGIG1laW5lbiBHZXNjaG1hY2sgZmFocmVuIGVpbiBwYWFyIENFT3MsIEJhbmtlciB1bmQgSW52ZXN0b3JlbiB6dSB2aWVsIHZvci4gT2RlciBiZXNzZXI6IExhc3NlbiBzaWNoIHZvcmZhaHJlbi4gCkkgdGFrZSB0aGUgdHJhaW4gZnJvbSBzZW91bCBuYXRpb25hbCB1bml2ZXJzaXR5IGF0IGFyb3VuZCA4YW0uIApTbyBzaGUgYW5kIHRoaXMgbWFzc2FnZSB0aGVyYXBpc3QgbGFkeSBlbmQgdXAgZ2V0dGluZyBwcmV0dHkgY2xvc2UsIHRoZXkgc3RyaWtlIHVwIGEgZnJpZW5kc2hpcCBzaW5jZSB0aGV5IHdlcmUgYXJvdW5kIHRoZSBzYW1lIGFnZSBhbmQgZ290IGFsb25nLiAKR2l2ZW4gYXMgdGhlaXIgc2V4IG9uIHRoZWlyIGJpcnRoIGNlcnRpZmljYXRlKSAibWFsZSIgYXQgYmlydGgsIGJ1dCBpZGVudGlmaWVzIGFzIGEgd29tYW4uIApZb3UgYXJlIG5vdCBicm9rZW4uIFlvdSBqdXN0IGRpZmZlcmVudC4KSSBkb24gdGhpbmsgSSBmaXQgdGhlIHN0YW5kYXJkIGVxdWF0aW9uLCB0aGUgZXN0aW1hdGUgdGVuZHMgdG8gYmUgdG9vIGhpZ2guLiAKSXQgaXMgaW1wb3NzaWJsZSB0byBkaXNhZ3JlZSB3aXRoIHRob3NlIGFpbXMsIGhvd2V2ZXIgdGhpcyBkZWx1Z2Ugb2YgYnVyZWF1Y3JhY3kgaXMgaW4gZGFuZ2VyIG9mIGhhdmluZyB0aGUgb3Bwb3NpdGUgZWZmZWN0LiAKV2hpbGUgaXQgZ29vZCB0byBzZWUgdGhhdC4gCkhlIHdhcyBzbyBhZ2dyZXNzaXZlIGR1cmluZyBhIGNvbmZyb250YXRpb24gd2l0aCBDcmFua3NoYXcgdGhhdCBzaGUgY2FsbGVkIHBvbGljZS4gCkJvdGggdGltZXMgaGUgbWFkZSBzb21lIGxhbWUgZXhjdXNlLCBjb3VwbGVkIGl0IHdpdGggYSBsb25nIHN0b3J5LCBhbmQgdGhlbiBibGFtZWQgbWUgZm9yIG5vdCB0cnVzdGluZyBoaW0uLiAKVGhlIEVhcmx5IFN0YWdlcyBpcyB0aGUgc3RhcnRpbmcgc3RhZ2VzIG9mIGFueSB0b3VybmFtZW50IGFuZCBpdCBicmluZ3MgaW4gdmFyaWVkIGNoYWxsZW5nZXMgZm9yIGJvdGggZXhwZXJpZW5jZWQgYW5kIG5vdmljZSBwbGF5ZXJzLiBBcyBhIHJlc3VsdCwgb25lIG11c3QgYmUgd2lsbGluZyB0byBwbGF5IHNvbWUgcG90cyBpbiB0aGlzIGVhcmx5IHN0YWdlIHNvIGFzIHRvIGJlIHZpYWJsZSBpbiB0aGUgbGF0ZXIgc3RhZ2VzLiAKSU5OT0NFTlQ6IEEgbW9tIGdvdCBhIGh1ZyBmcm9tIGhlciBvbmx5IHNvbiAyNSB5ZWFycyBhZnRlciBoZSB3YXMgd3JvbmdseSBjb252aWN0ZWQgb2YgYSBtdXJkZXIgY29tbWl0dGVkIGluIE5ldyBZb3JrIGluIDE5ODkuIEF0IHRoZSB0aW1lIG9mIHRoZSBkZWFkbHkgc2hvb3RpbmcsIEpvbmF0aGFuIEZsZW1pbmcgdG9sZCBwb2xpY2UgaGUgaGFkIGJlZW4gb24gYSB2YWNhdGlvbiBhdCBEaXNuZXkgV29ybGQuIApBYm91dCAzLDcwMCBwZW9wbGUgZW50ZXJlZCBhbmQgSSBtYWRlIHRoZSBmaW5hbCB0YWJsZSB3aXRoIHRoZSBjaGlwIGxlYWRzLiBUbyBkZWNvZGUgTHV0aGVyIGhhZCB0aGUgbW9zdCBjaGlwcyBhbmQgd2FzIG9uZSBvZiAxMCBwbGF5ZXJzIHRvIG1ha2UgaXQgdG8gdGhlIGxhc3Qgc3RhZ2Ugb2YgdGhlIHRvdXJuYW1lbnQsIGNhbGxlZCB0aGUgZmluYWwgdGFibGUuIApJIGtub3cgSSBjYW4gc2VlIHRoZSBsaXN0IG9mIGZpbGVzIHRoYXQgSSBtb2RpZmllZCwgYnV0IHRoYXQgYXQgdGhlIGNvbW1hbmQgcHJvbXB0IGFuZCBub3QgaW4gbXkgSURFIGFuZCwgYXQgbGVhc3Qgd2l0aCBteSBsaW1pdGVkIGtub3dsZWRnZSwgaXQgbm93IGEgYmlnIHBhaW4gdG8gZ28gdGhyb3VnaCB0aG9zZSA3NSBmaWxlcyBhbmQgbW9kaWZ5IHRoZW0gc28gdGhhdCBnaXQvbXkgaWRlIHJlYWxpemUgdGhleSBhcmUgdGhlIGZpbGVzIEkgd2FudCBpbiBteSBXSVAuLiAKSGlzIGFkdmljZSBpcyBzb2xpZD8gTm90IHJlYWxseS4gR2l2aW5nIGFuIGFkZGljdCBtb25leSB0byBkb3BlIHVwIGlzIHN0dXBpZCBhcyBmdWNrLiBUaGVyZSBhIHJlYXNvbiB5b3UgY2FuIG1ha2UgdHJ1c3QgZnVuZHMuIEdpdmUgYSBmYW1pbHkgbW9uZXkgYW5kIFlvdSBsaWFibGUuIEdpdmUgdGhlbSBhIHRydXN0IGFuZCBndWVzcyB3aGF0LCBjbGVhci4gV2h5PyBCZWNhdXNlIGEgdHJ1c3QgbGVnYWxseSBwcm90ZWN0cyB5b3UgZnJvbSB0aGF0IHNoaXQuCkkga25vdyBpdCBjYW4gYmUgaGFyZCB0byBtYWludGFpbiBwbGF5aW5nIHRpZ2h0IGFnZ3Jlc3NpdmUgYnV0IGFsc28gcHV0IGxvb3NlIGFnZ3Jlc3NpdmUgaW50byB0aGUgbWl4IG9mIHRoaW5ncy4gSG93ZXZlciwgdGhpcyBpcyBob3cgeW91IG1ha2UgaXQgdGhyb3VnaCB0aGUgbWlkIHN0YWdlcyBpbnRvIHRoZSBsYXRlIHN0YWdlcy4gT25jZSB5b3UgcmVhY2ggdGhlIGxhdGUgc3RhZ2VzIHlvdSBjYW4gdmFtcCB1cCB0aGUgYmxpbmQgc3RlYWxpbmcgdG8ga2VlcCB5b3VyIGNoaXAgc3RhY2sgZ3Jvd2luZyBvciB5b3UgY2FuIGdvIGJhY2sgdG8gb25seSBwbGF5aW5nIHByZW1pdW0gY2FyZHMuClRoZSBmYW5zIHdlcmUgc3RpbGwgZ29pbmcgYW5kIGV2ZXJ5dGhpbmcgdG9vLiAKSSByZWFkIHdvcmQgZm9yIHdvcmQgIGVhY2ggZGlhZ25vc3RpYyBjcml0ZXJpYSwgaGVscGluZyB0aGVtIHVuZGVyc3RhbmQgaXQgaW4gbGF5bWFucyB0ZXJtcy4gClRoZSBDb2NhIENvbGEgdGVhbSBob3BlZCBpdCB3b3VsZCBiZSAibG92ZSBhdCBmaXJzdCBzaXAiLiBUaGV5IGFsbW9zdCBjZXJ0YWlubHkgZGlkIG5vdCB0aGluayB3ZSB3b3VsZCB3YWxrIGF3YXkgZnJvbSBhIG11bHRpYmlsbGlvbiBkb2xsYXIgcGF5ZGF5LCBwYXJ0aWN1bGFybHkgc2luY2UgdGhleSBoYWQganVzdCBzcGVudCBhcm91bmQgc2l4IG1vbnRocyBkZXZlbG9waW5nIGEgMTAgeWVhciBidXNpbmVzcyBwbGFuIGZvciBvdXIgZnV0dXJlICJqb2ludCIgb3BlcmF0aW9ucy4gQnV0IHdhbGsgaXMgZXhhY3RseSB3aGF0IHdlIGRpZC4gSW4gbXkgZmF0aGVyJ3MgY2FzZSwgaXQgd2FzIHdpdGhvdXQgc28gbXVjaCBhcyBhIGJhY2t3YXJkcyBnbGFuY2UuCkxpdmluZyBpbiBydXJhbCBBbGFiYW1hIG15IHdob2xlIGxpZmUsIEkgaG9uZXN0bHkgZG9uIGJlbGlldmUgeW91IGNhbiByZWFjaCB0aG9zZSBwZW9wbGUuIEhvd2V2ZXIsIHdoYXQgeW91IGNhbiBkbyBpcyBub3QgbHVtcCB0aG9zZSBsaWtlIG1lIGluIHdpdGggdGhlbSBvciB3cml0ZSB1cyBvZmYgYXMgYSBsb3N0IGNhdXNlLiAKRm9sZHMgZmlyc3QgNyA4IGhhbmRzLCBmaW5hbGx5IGphbXMgaW4gd2l0aCBBSywgZ2V0cyBjYWxsZWQgYnkgYW5kIGxvc2VzIHRvIEFBLiAKVGF4IGJyYWNrZXRzLiAKUHN5Y2hvbG9neSByZXNlYXJjaGVycyBhdCBXYXNoaW5ndG9uIFVuaXZlcnNpdHkgaW4gU3QgTG91aXMgZm91bmQgdGhhdCB3aGVuZXZlciBzdHVkeSBwYXJ0aWNpcGFudHMgd2VyZSBzaG93biBhIGRvbGxhciBzaWduLCBhIHByZWRldGVybWluZWQgY3VlIHRoYXQgYSBjb3JyZWN0IGFuc3dlciBvbiB0aGUgdGFzayBhdCBoYW5kIHdvdWxkIHJlc3VsdCBpbiBhIGZpbmFuY2lhbCByZXdhcmQuClNvIHdlIGtub3cgdGhhdCB0aGUgcGxhbm5pbmcgc3ViIGNvbW1pdHRlZSB3YXMgdG8gaGF2ZSBjb25zaWRlcmVkIGEgcGxhbm5pbmcgYXBwbGljYXRpb24sIGJ1dCBub3Qgd2hvIGhhcyBtYWRlIHRoZSBhcHBsaWNhdGlvbiwgYXQgd2hhdCBhZGRyZXNzLCBmb3Igd2hhdCBwdXJwb3NlLiBQcmVzdW1hYmx5IHdlIHdpbGwgb25seSBrbm93IHRoZSBvdXRjb21lIHdoZW4gdGhlIHdhbGwgZGl2aWRpbmcgdXMgZnJvbSBJc2xpbmd0b24gaXMgYnVpbHQsIG9yIHdoZW4gRmluc2J1cnkgUGFyayBpcyByZXBsYWNlZCBieSBhIFdpcmVsZXNzIEZlc3RpdmFsIFRoZW1lIFBhcmssIG9yIExlbmRsZWFzZSBtb3ZlIG9uIGFuZCByZWRldmVsb3AgdGhlIGVudGlyZSBjb3VuY2lsIGVzdGF0ZS4KTWF5YmUgY2FsbC90ZXh0IHRoZSBmYW1pbHkgbWVtYmVycyB0aGF0IGhhdmUgZXhwcmVzc2VkIGludGVyZXN0IGluIGF0dGVuZGluZywgYXBvbG9naXplIGZvciBhbnkgY29uZnVzaW9uICgid2Ugd2lzaCB3ZSBjb3VsZCBpbnZpdGUgZXZlcnlvbmUsIGJ1dCB3ZSdyZSBrZWVwaW5nIGl0IHRvIHBhcmVudHMgYW5kIHNpYmxpbmdzIG9ubHkhIikuLiAKQSBwcm9wZXJ0eSBsYXcgd2FzIHBhc3NlZCB0aGF0IGZvcmJhZGUgb3duZXJzaGlwIG9mIG1vcmUgdGhhbiBvbmUgcHJpdmF0ZSBkd2VsbGluZywgYW5kIExpYnlhbiB3b3JrZXJzIHRvb2sgY29udHJvbCBvZiBhIGxhcmdlIG51bWJlciBvZiBjb21wYW5pZXMsIHR1cm5pbmcgdGhlbSBpbnRvIHN0YXRlIHJ1biBlbnRlcnByaXNlcy4gUmV0YWlsIGFuZCB3aG9sZXNhbGUgdHJhZGluZyBvcGVyYXRpb25zIHdlcmUgcmVwbGFjZWQgYnkgc3RhdGUgb3duZWQgInBlb3BsZSBzdXBlcm1hcmtldHMiLCB3aGVyZSBMaWJ5YW5zIGluIHRoZW9yeSBjb3VsZCBwdXJjaGFzZSB3aGF0ZXZlciB0aGV5IG5lZWRlZCBhdCBsb3cgcHJpY2VzLiAKQXJteSBTcGVjaWFsIFNlcnZpY2VzLiAKTGlrZSwgaXQgYmUgc29tZSBkcnVnIHRoYXQgc3VwcG9zZWQgdG8gZG8gc29tZXRoaW5nIHRvIHlvdXIga2lkbmV5cyBvciB3aGF0ZXZlciBhbmQgaXQgYmUgbGlrZSwgTWF5IGNhdXNlIG5lcnZvdXNuZXNzLCBibGluZG5lc3MsIG1lbW9yeSBsb3NzLCBuaWdodCB0ZXJyb3JzLCBkaXNvcmllbnRhdGlvbiwgbmF1c2VhLCBkaWFycmhlYSwgZGlhYmV0ZXMsIHZlcnRlYnJhbCBtZWx0aW5nLCBjcmFuaWFsIHNocmlua2FnZSwgc3VkZGVuIGRlYXRoLCBvciBraWRuZXkgZmFpbHVyZSBbd2FpdCwga2lkbmV5IGZhaWx1cmU/IV0uIApCeSBhZG9wdGluZyBhIGFwcHJvYWNoIHRoaXMgcnVsaW5nIHBhcnR5IHRydWx5IGhhcyBzb21lIHRyaWNrcyBvZiBpdHMgb3duLi4gCk91dCBvZiBhbGwgdGhlIG1haW4gY2hhcmFjdGVycywgUHJpbmNlc3MgQ2Fyb2x5biBpcyB0aGUgb25lIEkgcmVsYXRlZCB0byBsZWFzdCBiZWZvcmUgdGhpcy4gT3IgcmF0aGVyLCBJIGRpZG4gc2VlIGhlciBtYWtpbmcgdGhlIHNhbWUgbWlzdGFrZXMgSSBkaWQgb3Igd29ya2luZyB0aHJvdWdoIHRoZW0gdGhlIHNhbWUgd2F5LCBzbyBzaGUgd2FzIGFsd2F5cyBhIGJpdCBtb3JlIHN0YWJsZSBpbiBteSBleWVzLiBCdXQgdGhpcyB3YXNuIGhlciBtYWtpbmcgYSBtaXN0YWtlLCB0aGlzIHdhcyBqdXN0IGxpZmUuIApUaGUgUHJlb3BlcmF0aW9uYWwgU3RhZ2VUaGlzIHN0YWdlIHNwYW5zIHRoZSBlYXJseSBjaGlsZGhvb2QgeWVhcnMgb2YgYWJvdXQgMiB0aHJvdWdoIDcuIFRoZSBhYmlsaXR5IGZvciByZXByZXNlbnRhdGlvbiBhbmQgYW4gdW5kZXJzdGFuZGluZyBvZiBzeW1ib2xzIGdyZWF0bHkgaW5jcmVhc2VzIGR1cmluZyB0aGlzIHN0YWdlIGFzIGRvZXMgdGhlIHByb3BlbnNpdHkgZm9yIG1ha2UgYmVsaWV2ZSBwbGF5LiBBIGNoaWxkIHVuZGVyIHR3byB5ZWFycyBvZiBhZ2Ugd2lsbCBvZnRlbiBub3QgdXNlIGFuIG9iamVjdCBpbiBwbGF5IGFuZCBwcmV0ZW5kIGl0IGlzIGFub3RoZXIgb2JqZWN0LiBBZnRlciB0d28geWVhcnMgb2YgYWdlIGNoaWxkIHdpbGwgdXNlIHdoYXRldmVyIGlzIGhhbmR5IHRvIHN0YW5kIGluIGZvciB3aGF0IGV2ZXIgb2JqZWN0IHRoZWlyIG1ha2UgYmVsaWV2ZSBwbGF5IHJlcXVpcmVzLiBGb3IgaW5zdGFuY2UgdG8gYSBjaGlsZCB1bmRlciAyIGEgdG95IHBob25lIGlzIGEgdG95IHBob25lIGFuZCBub3RoaW5nIGVsc2Ugd2hpbGUgY2hpbGRyZW4gb3ZlciB0aGUgYWdlIG9mIDIgbWlnaHQgcHJldGVuZCBhIHRveSB0cnVjayBpcyBhIHRveSBwaG9uZS4gVGhlcmUgaXMgYSBncmVhdCBleHBhbnNlIG9mIGltYWdpbmF0aW9uIGFuZCBhZGFwdGFiaWxpdHkgaW4gcGxheS4gVGhpcyBtYWtlIGJlbGlldmUgaXMgdmVyeSBpbXBvcnRhbnQgaW4gdGhlIHByb2Nlc3Mgb2Ygb3NzaWZ5aW5nIHNjaGVtYXMgYW5kIGluIG9yZ2FuaXppbmcgYSB2YXN0IGFycmF5IG9mIGluZm9ybWF0aW9uIGRyYXduIGZyb20gb2JzZXJ2YXRpb24gYW5kIGV4cGVyaWVuY2UuCkkgc2VlaW5nIGEgbG90IG9mIGNvbnZlcnNhdGlvbnMgYWJvdXQgbm90IHdhbnRpbmcgdG8gYmUgZXhwbG9pdGVkLiAKU2luY2UgdGhlIHRydXN0IGlzIHNldCB1cCB0byBiZSBmdWxseSBkaXNjcmV0aW9uYXJ5IGluIHRoYXQgdGhlcmUgaXMgbm8gZGlyZWN0IGVudGl0bGVtZW50IG9mIHRoZSBiZW5lZmljaWFyeSB0byB0aGUgdHJ1c3QgYXNzZXRzIHRoZSBnZW5lcmFsIHJ1bGUgaW4gbW9zdCBwcm92aW5jZXMgaXMgdGhhdCBmdW5kcyBpbiB0aGVzZSB0cnVzdHMsIHNldCB1cCBieSBhIHBhcmVudCBvciBvdGhlciByZWxhdGl2ZSwgY2FuIGJlIGVzdGFibGlzaGVkIHdpdGhvdXQgYWZmZWN0aW5nIHRoZSBiZW5lZmljaWFyeSBlbnRpdGxlbWVudCB0byBwcm92aW5jaWFsIGdvdmVybm1lbnQgYmVuZWZpdHMuCllvdSBtYXkgYmUgc3VycHJpc2VkIHRvIHNlZSB0aGF0IHlvdSd2ZSBiZWVuIHN0ZWFkaWx5IGNsaW1iaW5nIGFuZCBhcmUgbm93IGFib3V0IDQwbSBhYm92ZSB0aGUgc2VhLiAKICAxIHBvaW50cyAgc3VibWl0dGVkIDI4IGRheXMgYWdvSnVzdCB0aGF0IHRoaXMgaXMgd3JvbmcuIEkgbWVhbiB5ZWFoIGNsaW1hdGUgY2hhbmdlIGlzIGJhZCBhbmQgYWxsLiAKUHJldmlvdXNseSwgaW50ZXJuYXRpb25hbCBvcmdhbml6YXRpb25zIGxpa2UgdGhlIFdvcmxkIEJhbmsgR3JvdXAgYW5kIGl0cyBwcml2YXRlIGxlbmRpbmcgYXJtLCB0aGUgSUZDLCBoYWQgZW5qb3llZCBhYnNvbHV0ZSBpbW11bml0eSwgbWVhbmluZyB0aGF0IHRoZXkgY291bGQgbm90IGJlIHN1ZWQgaW4gVVMgY291cnRzIHVuZGVyIGFueSBjaXJjdW1zdGFuY2VzLiBGb3JlaWduIGdvdmVybm1lbnRzIGhhdmUgb25seSBsaW1pdGVkIGltbXVuaXR5IGluIHRoZSBVUywgc28gdG9kYXkncyBkZWNpc2lvbiBhbGlnbnMgaW50ZXJuYXRpb25hbCBvcmdhbml6YXRpb25zJyBpbW11bml0eSB3aXRoIHRoYXQgb2YgZm9yZWlnbiBnb3Zlcm5tZW50cy4uIApXZWlnaHQgZHJpdmVzIHlvdXIgaGVhZCBmdXJ0aGVyIGludG8gdGhlIHNub3csIGZydXN0cmF0ZWQgYWJ1c2UgbXVmZmxlZCBieSBmcm96ZW4gZ3Jhc3MuIApMZW9wYXJkIGtpbGxzIEluZGlhbiBCdWRkaGlzdCBtb25rIG1lZGl0YXRpbmcgaW4gZm9yZXN0CiJJZiBJIGV2ZXIgZmluZCBteXNlbGYgdGVhY2hpbmcgYSBwb2tlciBjbGFzcyBmb3IgdGhlIG1hdGhlbWF0aWNzIGRlcGFydG1lbnQgYXQgVUNMQSwgdGhpcyB3aWxsIGJlIHRoZSBvbmx5IGJvb2sgb24gdGhlIHN5bGxhYnVzLiIgICBDaHJpcyAiSmVzdXMiIEZlcmd1c29uLCAyMDAwIFdvcmxkIFNlcmllcyBvZiBQb2tlciBDaGFtcGlvbi4gIkluIHRoZSBzYW1lIHdheSB0aGF0IHF1YW50cyBhbmQgbWF0aGVtYXRpY2lhbnMgdG9vayBvdmVyIFdhbGwgU3RyZWV0IGluIHRoZSBsYXRlIDgwJ3MsIG1hdGhlbWF0aWNhbCBtZXRob2RzIHdpbGwgZG9taW5hdGUgcG9rZXIgaW4geWVhcnMgdG8gY29tZS4gCjIwMTggU2FuZGhpbGxzIFBva2VyIFJ1biBkcmF3cyAxNDAgcmlkZXJzCkRldmVsb3BzIHN1cmZhY2UgbW9kZWxpbmcgc29mdHdhcmUgLiAKRXNzZW50aWFsIFNraWxscyBOZWVkZWQgZm9yIE1hc3NhZ2UgVGhlcmFwaXN0cwpUaGF0IGludGVybmFsIHJhZ2UgaXMgcGFydCBvZiB0aGUgcmVhc29uIGhlIGJlZW4gYWNjdXNlZCBvZiBvdmVyZHJpdmluZyBhdCB0aW1lcyB0aGlzIHNlYXNvbi4gQW5kIHdoeSBoZSBpcyBkZXNwZXJhdGUgdG8gYWRkIGFub3RoZXIgQnJpdGlzaCBHcmFuZCBQcml4IHRyaXVtcGggdG8gaGlzIHRhbGx5IHRoaXMgd2Vla2VuZCBhdCBhIHRpbWUgd2hlbiBTZWJhc3RpYW4gVmV0dGVsIGxhdGVzdCBjYWtld2FsaywgaW4gVmFsZW5jaWEgdHdvIHdlZWtzIGFnbywgdG9vayBoaW0gdG8gb25lIGNhcmVlciB2aWN0b3J5IG1vcmUgdGhhbiBoZSBoYXMsIDE2IHRvIDE1Li4gCldoeSBnaXZlIHRoZW0gYSBmcmVlIGNhcmQgaWYgeW91IGRvbid0IGhhdmUgdG8uIApBbmQgdGhlbiBhZnRlciBhbGwgb2YgdGhhdCwgbXkgcGxhY2VudGEgZGlkbiBkZWxpdmVyIHNvIHRoZXkgd2hlZWxlZCBtZSBpbnRvIHN1cmdlcnkgYWZ0ZXIgdGhlIGJhYnkgd2FzIGJvcm4gYW5kIHRoZXJlIHdhcyBubyBtYWdpY2FsIG1vbWVudC4KU2NvdXJpbmcgdGhlIGNsb3VkIGZvciAiZGFyayBkYXRhIiAgc3RvcmllcywgYW5lY2RvdGVzICBvdmVyIGFnZXMgYW5kIGZpbmRpbmcgbGlua3MgYW5kIHBhcmFsbGVscy4gTWFraW5nIHRyYWNrcywgY3V0dGluZyBhbGJ1bXMuIEdyb3dpbmcgb2ZmIGl0cyBvd24gZGF0YSBmZWVkIHRvIGNyZWF0ZSBhbmQgcmVjcmVhdGUuLiAKVGhlbiBhZ2FpbiwgeW91IGhhdmUgYW5pbWVzIGdsb3JpZnlpbmcgdGhlIEF4aXMgUG93ZXJzLCBzby4gaG1tLgpIaXMgc3R5bGUgb2Ygd2VhcmluZyBzdW5nbGFzcyB3aXRoIHVwc2lkZXMgZG93biBiZWNhbWUgYSB0cmFkZW1hcmsuIAoiSSBkbyBmdWxseSB1bmRlcnN0YW5kIHRoZSBjb25mdXNpb24gYW5kIHRoZSBjb252ZXJzYXRpb25zIHRoYXQgaGF2ZSB0YWtlbiBwbGFjZSwgYW5kIEkgZG9uJ3Qgd2FudCB1cyB0byBldmVyIHNoeSBhd2F5IGZyb20gYmVpbmcgYWJsZSB0byBoYXZlIHRoaXMgY29udmVyc2F0aW9uLCIgWnVja2VyIHNhaWQsIGJlZm9yZSBhZGRpbmcgIkxldCdzIG5vdCBydXNoIHRvIGp1ZGdlbWVudC4gClNpZSBzY2hyZWliZW46IDEuIApXb3VsZCB0aGV5IGdpdmUgdXMgYSBmaWdodCBvbiB0aGVpciBjYXJkPyBXb3VsZCB0aGV5IHByb21vdGUgdXM/IiBzaGUgZXhwbGFpbnMgYXMgaGVyIHRvbmUgcXVpY2tseSBjaGFuZ2VzIHRvIHNlcmlvdXMuIApIYXZpbmcgYSBsb2NhbCBib29rIGlzIGZvciBub3QgbmVlZGluZyB0byByZWdpc3RlciBhbmQganVzdCB3YWxraW5nIGFjcm9zcyB0aGUgbG9iYnksIG5vdCBhYm91dCBwcmljZSwgSSBkb24gdGhpbmsgNXMgcHJlZGF0b3J5IHByaWNlIGZvcmVpZ25lcnMgdGhleSBqdXN0IHByZWRhdG9yeSBwcmljZSBldmVyeW9uZSwgc29ycnkgaWYgdGhhdCB3YXNuIGNsZWFyLgpXYXMgbm8gZXhjZXB0aW9uIVdlIGhhZCBkaW5uZXIgYXQgYSB2ZXJ5IHRyYWRpdGlvbmFsIHJlc3RhdXJhbnQsIHdoZXJlIHRoZSBzZWF0aW5nIGlzIGF0IHBpY25pYyB0YWJsZXMgYW5kIHlvdSBqb2luIHdob2V2ZXIgaGFwcGVucyB0byBiZSB0aGVyZS4gCkphY2toaWdod2hlZWwgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMTEgbW9udGhzIGFnbwpObyBzdG9uZSBoYXMgYmVlbiBsZWZ0IHVuIHR1cm5lZC4gSSBpbnZpdGUgeW91IHRvIHJlc2VhcmNoIG15IHJlc2VhcmNoLiBJdCBpcyBvbmx5IGZhaXIgdG8gc2F5IHRoYXQgbXkgcmVwb3J0cyBhcmUgc3ViamVjdCB0byBjcml0aWNpc20gYnkgdGhlIHBoYXJtYWNldXRpY2FsIGVzdGFibGlzaG1lbnQgb3IgYW55Ym9keSB1bndpbGxpbmcgdG8gcmV2aWV3IG15IHJlZmVyZW5jZXMuLiAKU2VsZiBlbXBsb3llZCBpcyBvZnRlbiBBS0EgVU4gZW1wbG95ZWQhIEF0IHRoZSBlbmQgb2YgdGhlIGRheSwgbG9vayBob3cgb2Z0ZW4gdGhlIHRlbmFudCBtb3Zlcy4gSWYgdGhleSBoYXZlIGJlZW4gYXQgdGhlIHNhbWUgcGxhY2UgZm9yIGEgZmV3IHllYXJzIGFuZCBoYXZlIGEgZ29vZCByZWFzb24gdG8gYmUgbW92aW5nLCB0aGVuIHlvdSBhcmUgc2hvd2luIHNvbWUgc3RhYmlsaXR5LiBJIG5ldmVyIGdldCB0b28gY3Jhenkgb24gdW5kZXJ3cml0aW5nIGEgdGVuYW50LCB5b3Ugd2lsbCBqdXN0IGZpbmQgYSB0b24gb2YgcmVhc29ucyBub3QgdG8gZGVhbCB3aXRoIHRoZW0uCkJhcnlsYSBtb3RoZXIpLCAoTXIuIApZZXN0ZXJkYXksIGFzIG15IGRhdWdodGVycyBhbmQgSSBkcm92ZSB1cCB0byBNb250cmVhbCBmb3Igb3VyIHVzdWFsIGRpbSBzdW0sIEkgY291bGQgbm90IGZpbmQgdGhlaXIgcGFzc3BvcnRzLiAKQXQgdGhlIGVuZCBvZiB0aGUgZGF5LCBpdCBpcyB3aGF0IGl0IGlzIGFuZCBLYW1hcnUgaXMgc3RpbGwgdGhlIFdXIGNoYW1wIGFmdGVyIGEgbGVnaXQgYW5kIGZhaXIgdmljdG9yeS4uIApUaGlzIHllYXIsIGpvaW4gb3ZlciA1MCBsb2NhbCB3b21lbiBhdCBQYXJhbGxlbCdzIEhvbGRlbiBSb29tIGV2ZW50IHNwYWNlIGFuZCBzdXBwb3J0IHRoZXNlIGFtYXppbmcsIHRhbGVudGVkIG1ha2Vycy4gCkluZm8gYWJvdXQgYXJ0IHNraWxscyBhbmQgY2FyZCBwcmVmZXJlbmNlcyBpbnNpZGUuIApJIGFsc28gdHJ5aW5nIHRvIGdldCBhbGwgdGhlIGZsb3dlciBmdXJuaXR1cmUsIHNvIEkgdHJ5IHRvIHNlbWkgcmVndWxhcmx5IGhhdmUgYWxsIG9mIHRoZSBmbG93ZXJzIHRvIGNyb3NzIHBvbGxpbmF0ZSB1cCBpbiBteSBnYXJkZW4sIGlmIEkgbm90IGdyb3dpbmcgbW9yZSBiYXNpY3MgdG8gZG8gc28uCkRyaW5rIGF0IGxlYXN0IGVpZ2h0IGdsYXNzZXMgb2Ygd2F0ZXIuIApMSVZJTkdTVE9OIFBBUklTSCwgTEEgKFdBRkIpICAgVGhvc2Ugb2YgeW91IGluIHRoZSBzb3V0aGVybiBwYXJ0IG9mIExpdmluZ3N0b24gUGFyaXNoIG1heSB3YW50IHRvIHRvcCB5b3VyIGdhcyB0YW5rcyBiZWZvcmUgdGhpcyB3ZWVrZW5kLiBIdW5kcmVkcyBvZiBib2F0ZXJzIGFyZSBleHBlY3RlZCB0aGVyZSB0aGlzIHdlZWsgZm9yIHRoZSBUaWNrZmF3IDIwMCwgYW5kIHRoYXQgbWVhbnMgbWFueSBnYXMgc3RhdGlvbnMgd2lsbCBydW4gb3V0IG9mIGZ1ZWwuClRoZXkgZGlkbiBmb3JjZSB0aGVtIHRvIGRvIGFueXRoaW5nLCB0aGUgZ2FtZSBwbGFuIHdhcyBhbHdheXMgdG8gcmVsZWFzZSB0aGUgdmFuaWxsYSBnYW1lIGFuZCB0aGVuIGFkZCB0byBpdCB3aXRoIGNvbnRlbnQuIFlvdSBjb3VsZCBhcmd1ZSBBY3RpdmlzaW9uIGZvcmNlZCB0aGVtIGludG8gdGhpcyBhdCB0aGUgc3RhcnQgb2YgdGhlIGFncmVlbWVudCBidXQgaXQgd2FzbiBsaWtlIHRoZXkgd2VyZSBjb250aW51YWxseSB3aGlwcGluZyB0aGVtIGFuZCBzYXlpbmcgdGhleSBuZWVkZWQgdG8gZG8gaXQgICBCdW5naWUgYWdyZWVkIHRvIHRoYXQuIApJdCB3YXMgY29vbCB0byBzZWUgdGhhdCBhIG1haW5zdHJlYW0gYmFuZCB3YXMgaGl0dGluZyBiYXJyZWxzIHdpdGggYWx1bWludW0gYmF0cywgd2hpbGUgd2Ugd291bGQgcGxheSBhIGNsYXNzaWNhbCBwaWVjZSBpbiBjb25jZXJ0IGJhbmQgd2hlcmUgd2UgaGl0IGEgbWV0YWwgdGlyZSB3aXRoIGEgY3Jvd2JhciBmb3IgYSBsb3VkIGNsYW5nIHNvdW5kLi4gCkJlY2F1c2UgeW91IGFza2VkIG1lIHRoZSBxdWVzdGlvbiAiV2h5IGRvIHdlIGhhdmUgdG8gc3RhcnQgaW4gcHJpc29uPyIsIHNvIEkgcmVzcG9uZGVkIGJ5IHNheWluZyB0aGF0ICJIb3cgd2lsbCB3ZSBtb3N0IGxpa2VseSBzdGFydD8iIGlzIHRoZSBiZXR0ZXIgcXVlc3Rpb24uCkluIEZvdW5kYXRpb24gUGhhc2UgYSBsZWFybmVyIGlzIGEgTGV2ZWwgNyAoODAgMTAwJSkgc2ltcGx5IGdpdmUgYWxsIGxlYXJuZXJzIHdpdGggYSBsZXZlbCA3IGEgbWFyayBvZiA5MCB0aGUgbWlkIG1hcmsgb2YgYWxsIGxldmVscyBhbmQgYXNzaWduIHRvIGxlYXJuZXJzLgpNeSBhZHZpY2Ugc2luY2UgSSBsZWFybmVkIHRoZSBoYXJkIHdheSB3aGF0IG5vdCB0byBkbyAgIHRha2UgYXMgbXVjaCB0aW1lIGFzIHlvdSBuZWVkIGJlZm9yZSB0YWxraW5nIGFib3V0IGl0IG9yIHRhbGtpbmcgd2l0aCBiaW8gbW9tLiAKVXN1YWxseSBtYWtpbmcgYSBwbGF5IHRoYXQgaXMgY29udHJhcnkgdG8geW91ciBub3JtYWwgcGxheWluZyBzdHlsZSBpcyBvbmx5IG5lY2Vzc2FyeSBhYm91dCA1IHBlcmNlbnQgb2YgdGhlIHRpbWUgdG8ga2VlcCB5b3VyIG9wcG9uZW50cyBndWVzc2luZy4gCkJ1dCB0aGUgYmVzdCBwYXJ0IGlzIGhvdyBpdCBjYW4gcmVtb3ZlIHlvdXIgb3duIGRlYnVmZnMuLiAKV2Fsa2llc1RoZSBJc2xlIG9mIFdpZ2h0IFJhbWJsZXJzNSBhcmUgYWxzbyBpbnZvbHZlZCBpbiB0aGUgZXZlbnQuIApJdCBpcyBtb3JlIGV4cGVuc2l2ZSB0aGFuIGV4Y2VzcyBiYWdnYWdlIChmb3IgbXkgNTAgcG91bmQgZG9nLCBpdCB3YXMgJDEwMDAgdmVyc3VzICQ2MDApIGJ1dCB0aGUgc3RhZmYgYXJlIGV4cGVydHMgaW4gdHJhbnNwb3J0aW5nIHBldHMgYW5kIHRoZXkgYXJyYW5nZSB0aGUgam91cm5leSB0byBtYXhpbWl6ZSB0aGUgY29tZm9ydCBhbmQgaGVhbHRoIG9mIHRoZSBwZXQuIApBbGwgcG9zaXRpdmUgc3VnZ2VzdGlvbnMgYWJvdXQgaG93IHdlIGdyb3cgdGhlIEd1aWRlIGFyZSB3aG9sbHkgd2VsY29tZS4gClF1aXRlIGEgZmV3IHdlYnNpdGVzIG9mZmVyIFBva2VyIEdhbWVzIGFuZCBkb24ndCBjaGFyZ2UgZm9yIHRoaXMgc2VydmljZS4gCkpvaG4ncyBDYXRob2xpYyBDZW1ldGVyeS4gClVuZm9ydHVuYXRlbHksIG1hbnkgdGltZXMgcmVsYXBzZSBvY2N1cnMgZHVlIHRvIHRoZSBzb3VyY2VzIG9mIGpvaW50IG92ZXJzdHJhaW4gaGF2aW5nIGdvbmUgdW5kaWFnbm9zZWQuClRoYXQgZGVwZW5kcyBvbiB0aGUga2luZHMgb2YgcGxheWVycyBpbiB0aGUgYmxpbmQuIEdlbmVyYWxseSwgSSBkb24gc3RlYWwgYWdhaW5zdCB1bmtub3ducywgd2hpY2ggbWVhbnMgaWYgSSBzdGVhbCBJIGV4cGVjdGluZyB0aG9zZSBwbGF5ZXJzIHRvIHVzdWFsbHkgZm9sZCB0byBhIHByZWZsb3AgcmFpc2UuIApJdCBzZXRzIGEgc3RhbmRhcmQgb2YgYmFzZWxpbmUgbW9yYWxpdHkgYXQgdGhlIGdyZWF0ZXN0IHBvc3NpYmxlIHNhY3JpZmljZSBvbmUgY2FuIG1ha2UgYW5kIGp1ZGdlcyBtb3JhbCBmYWlsaW5nIGJ5IHRoZSBleHRlbnQgdGhleSBmYWlsIHRvIGdpdmUsIHJhdGhlciB0aGFuIHRoZSBhY3R1YWwgZGlmZmVyZW5jZSBhIHBlcnNvbiBtYWtlcy4uIApJdCBhbHdheXMgc2VlbXMgYXMgdGhvdWdoIGEgbmV3IGRlY2sgb2YgY2FyZHMgYmVjb21lcyBzdGlja3kgYW5kIG9sZCBmYXIgdG9vIHNvb24uIFRoZSBvaWxzIGZyb20geW91ciBoYW5kcywgZm9vZCBwYXJ0aWNsZXMgYW5kIGp1c3QgdGhlIGNvbnN0YW50IHNodWZmbGluZyBwcm92aWRlcyB3ZWFyIGFuZCB0ZWFyIG9uIHlvdXIgY2FyZHMgY2F1c2luZyB5b3UgdG8gaGF2ZSB0byByZXBsYWNlIHRoZW0gZmFyIHRvbyBvZnRlbi4gV2hhdCB5b3UgbmVlZCBpcyAxMDAgcGxhc3RpYyBwbGF5aW5nIGNhcmRzLiBUaGUgMTAwIHJlYWxseSBtZWFucyAxMDAlIHBsYXN0aWMgd2hpY2ggaXMgcmVhbGx5IGEgZ29vZCB0aGluZyBhcyB5b3Ugd29uJ3QgaGF2ZSB0byByZXBsYWNlIHlvdXIgY2FyZHMgbmVhcmx5IGFzIG9mdGVuLgpJIGludGVycHJldCB0aGVzZSBhcyBhdHRlbXB0cyBieSBnb3Zlcm5tZW50cyB0byBwcm90ZWN0IHdpdGhvdXQgYmVpbmcgc2VlbiBhcyBjb250cmF2ZW5pbmcgV1RPIHJ1bGVzLiIuIApUaGUgYmVlciBmZXN0IGlzIFNhdHVyZGF5LCBNYXJjaCA5LkJlZXIgY2FsZW5kYXI6IEdyZWF0IExha2VzIGhhcyAyIGJhcnJlbCBhZ2VkIHJlbGVhc2VzLCBHcmVlbmhvdXNlIFRhdmVybiBob2xkcyBiZWVyIGRpbm5lciwgbW9yZSBCZWVyIGNhbGVuZGFyOiBHcmVhdCBMYWtlcyBoYXMgMiBiYXJyZWwgYWdlZCByZWxlYXNlcywgR3JlZW5ob3VzZSBUYXZlcm4gaG9sZHMgYmVlciBkaW5uZXIsIG1vcmUgR3JlYXQgTGFrZXMgQnJld2luZyBoYXMgYmFycmVsIGFnZWQgcmVsZWFzZXMgY29taW5nIHVwLCBUaGUgR3JlZW5ob3VzZSBUYXZlcm4gd2lsbCBob2xkIGEgYmVlciBkaW5uZXIgZmVhdHVyaW5nIEphY2tpZSBPJ3MsIGFuZCBtYW55IG90aGVyIGJlZXIgZXZlbnRzLCB0YXN0aW5ncywgZGlzY291bnRzIGFuZCBkaW5uZXJzIGFyZSBzZXQgaW4gTm9ydGhlYXN0IE9oaW8uRWF0IGF0IEpvZSdzOiBOb3J0aGVhc3QgT2hpbydzIGJlc3Qgd2Vla2VuZCBicnVuY2hlcywgYnJlYWtmYXN0cyBFYXQgYXQgSm9lJ3M6IE5vcnRoZWFzdCBPaGlvJ3MgYmVzdCB3ZWVrZW5kIGJydW5jaGVzLCBicmVha2Zhc3RzIE91ciBicnVuY2ggYW5kIGJyZWFrZmFzdCBzZXJpZXMgdGFrZXMgdXMgdG8gRWF0IGF0IEpvZSdzIGluIFNvdXRoIEV1Y2xpZC4gClNuaXBwZWQgdGhlIGVuZHMgb2YgYm90aCBzaWRlcyB3aXRoIHNjaXNzb3JzLgpBbmQgdGhpbmssIHlvdSBrZWVwIHNheWluZywgeW91IHdpc2ggeW91IHdlcmUgYmV0dGVyIGluIFggd2F5cy4gWW91IHRha2Ugc28gbXVjaCByZXNwb25zaWJpbGl0eSBmb3IgaGlzIGxhY2sgb2YgcmVjaXByb2NpdHkgYW5kIGFzc2lnbiB6ZXJvIHJlc3BvbnNpYmlsaXR5IGZvciBoaXMgb2JqZWN0aXZlbHkgaG9ycmlibGUgYmVoYXZpb3IuIApCdXQgd2lsbCB0aGUgYW5ncnkgd2hpdGUgbWVuIChhbmQgYXQgbGVhc3QgYSBmZXcgd29tZW4pIGJlIGFibGUgdG8gcm91c2UgYSBmZXcgYW5ncnkgd2hpdGUgZm9sa3MgdG8gc3RhZ2UgeWV0IGFub3RoZXIgdGVhIHBhcnR5PyBZb3UgZGFybiB0b290aW4gdGhleSB3aWxsLiAKQmVzaWRlcywgdG8gYmUgY29tcGxldGVseSBob25lc3QsIEJsaXp6YXJkIGluY3JlYXNpbmdseSBjYXN1YWwgdG9uZSBqdXN0IGRvZXNuIHJlc29uYXRlIHdpdGggdGhlIGtpbmQgb2YgcGVvcGxlIHdobyBsaWtlIEFSUEdzLiBUaGVyZSB3YXMgYSBMT1Qgb2YgbmVnYXRpdmUgaHlwZSBzdXJyb3VuZGluZyBEMywgYXMgc3VjY2Vzc2Z1bCBhcyBpdCB3YXMuIFRoYXQgaHlwZSBoYXMgZmVzdGVyZWQgYW5kIGl0cyBiZWNvbWUgcXVpdGUgdG94aWMgdGhlc2UgZGF5cyB3aXRoIHRoZSBzdWNjZXNzIG9mIG5vbiBibGl6emFyZCBBUlBHcy4uIApKYXF1ZW1hcnQgdQpZb3UgY2FuIGFmZm9yZCBpdCBnaXZpbmcgaXMgd2hhdCBpdCBpcyBhbGwgYWJvdXQuIEkgdGhpbmsgdGhlcmUgYW4gb2JsaWdhdGlvbiB0byBnaXZlIGJhY2ssIGVzcGVjaWFsbHkgaWYgeW91IGJlZW4gc3VjY2Vzc2Z1bCBmaW5hbmNpYWxseS4gSGUgd2FzIGp1c3Qgc29tZWJvZHkgd2hvIGZlbHQgdGhhdCBoZSB3YXMgZXh0cmVtZWx5IHByaXZpbGVnZWQuIApMYXN0IHdlZWsgSSB3YXMgY29tcGxhaW5pbmcgdG8gUHJpbmNlIER1bWJsZWdzIGZvciB0aGUgMTB0aCB0aW1lIGFib3V0IHRoZSBjdXJzZSBzcHJlYWRpbmcgaW4gdGhlIGxpYnJhcnkuIApJbiBQcmltZXRpbWUgQWR2ZW50dXJlcywgd2Ugc2V0IHN0YWtlcy4gCkdhbmRoaV9wZWFjZW1ha2VyICAxIHBvaW50ICBzdWJtaXR0ZWQgMTYgZGF5cyBhZ28KV2hlbiBhIG1hbiBoYXMgYW4gZXJlY3Rpb24sIGhlIGNhbiB1c2UgdGhlIHNhbWUgbXVzY2xlIHRvIG1ha2UgTXIuIApUaGUgYXJndW1lbnQgaXMgeW91IGdldCBhIHByaXplIGZvciB0aGUgY29tcGV0aXRpb24uIApZb3Uga25vdyB3aGF0IGhhcHBlbmVkIHRoZW4/IEl0IGRpZCBhYnNvbHV0ZWx5IG5vdGhpbmcgYW5kIGFjdHVhbGx5IG1hZGUgdGhpbmdzIHdvcnNlIGJlY2F1c2UgYSBsZWN0dXJlIGZyb20gdGhlIGNvcHMgb25seSBtYWRlIG15IHN0ZXAgZmF0aGVyIGJlYXQgZXZlcnlvbmUgaGFyZGVyLiBTbyB0aGUga2luZGVzdCB0aGluZyB5b3UgY2FuIGRvIGlzIGlnbm9yZSBpdCBvciBtb3ZlLi4gCkl0J3MgcnVtb3JlZCB0aGF0IE1heXdlYXRoZXIgd2lsbCBiZSBmaWdodGluZyBDb3R0by4gTWFycXVleiBpc24ndCBhIGZpZ2h0IHRoYXQgdGhlIHB1YmxpYyB3YW50cyBhcyB0aGV5IGhhdmUgZm91Z2h0IDMgdGltZXMuIEkgdGhpbmsgaGUgc2hvdWxkIGdvIGZvciBCcmFkbGV5LiAKVGhlIHJlYXNvbiBmb3IgbWFraW5nIHRoZSBpIDk0IGVsZWN0cm9uaWMgaXMgbWFpbmx5IHRvIHNhdmUgdGhlIGFpcmxpbmVzIHNvbWUgbW9uZXkgYW5kIHRoZSB0cmF2ZWxlciBzb21lIGhhc3NsZSBieSByZWplY3RpbmcgeW91IGJlZm9yZSB5b3UgdGFsayB0byB0aGUgQ0JQIGd1eS4gQmVmb3JlIHRoZSBFU1RBIHlvdSB3b3VsZCBmbHkgaW4sIGdldCByZWplY3RlZCwgYW5kIHRoZW4gZmx5IGJhY2suIFdoYXQgYSB3YXN0ZS4KWW91IGRvbnQgaGF2ZSB0byBiZSBhIGRvY3RvciB0byB1bmRlcnN0YW5kIHdoYXQgdGhlc2UgcmVwb3J0cyBzYXkuIApXaXRoIGFkZGl0aW9uYWwgZG9uYXRpb25zLCB0aGVpciAkMSwwMDAgdG90YWwgd2FzIG1hdGNoZWQgYnkgdGhlIFJveWFsIE5laWdoYm9ycyBvZiBBbWVyaWNhLiAKRW4gZmV1aWxsZXRhbnQgbGVzIHBldGl0ZXMgYW5ub25jZXMgZGFucyBsZSBxdW90aWRpZW4gcmdpb25hbCwgb24gcmVtYXJxdWUgdW5lIHB1YmxpY2l0IHBvcnRhbnQgbGUgdGl0cmUgTWFzc2FnZSBBc2lhbiBTcGEuIERhbnMgc2EgZGVzY3JpcHRpb24sIG9uIHkgbWVudGlvbm5lIGxlIG1tZSBudW1ybyBkZSB0bHBob25lIHF1ZSBjZWx1aSBpbmRpcXUgZGFucyBsYSB2aXRyaW5lIGR1IGNvbW1lcmNlLiBMJ2FkcmVzc2UgZXN0IGdhbGVtZW50IGxhIG1tZSwgbWFpcyBsZXMgaGV1cmVzIGQnb3V2ZXJ0dXJlIGRpZmZyZW50IDogZGUgOSBoICAyNCBoLCA3IGpvdXJzIHBhciBzZW1haW5lLiAKV2hlbiB0aGVzZSBoYWd3b24gb3duZXJzIHN0YXJ0IHJlYWxpemluZyB0aGF0IG92ZXJ3b3JraW5nIGFuZCB1bmRlcnBheWluZyB3aWxsIG9ubHkgZ2V0IHRoZW0gdGVycmlibGUgdGVhY2hlcnMsIG1heWJlIHdlIHN0b3Agc2VlaW5nIHRoZXNlIGhvcnJpYmxlIGNvbnRyYWN0cy4uIApEdWUgdG8gaXRzIG1vbm9wb2x5IHN0YXR1cyBhdCBob21lLCBQTVUgY291bGQgbm90IHByb3RlY3QgdGhlIEZyZW5jaCBob3JzZSByYWNpbmcgaW5kdXN0cnkgZnJvbSBhbiBvZmZzaG9yZSBjb21wZXRpdG9yIHRoYXQgb2ZmZXJlZCBhIDI4LjQlIGdyZWF0ZXIgYXZlcmFnZSByZXR1cm4gdG8gaXRzIHBsYXllcnMuIApNci4gClRoYXQganVzdCBsYXVnaGFibHkgaW5zdWx0aW5nLi4gCkEgbCdpbnN0YXIgZGUgRG9uYWxkIFRydW1wLCBYaSBKaW5waW5nIGEgZCBmYWlyZSBtaXJvaXRlciAgS2ltIEpvbmcgVW4gbCdhaWRlIGNvbm9taXF1ZSBxdWUgcGV1dCBsdWkgYXBwb3J0ZXIgc29uIHBheXMsIGFsb3JzIHF1ZSBsYSBDb3JlIGR1IE5vcmQgdmllbnQgZGUgZmFpcmUgZHUgZHZlbG9wcGVtZW50IHNhIHByaW9yaXQgc3RyYXRnaXF1ZS4KSSB3cml0dGVuIGVhcmxpZXIgaW4gdGhpcyBibG9nIGFib3V0IHRoZSBtYWduaWZpY2VudCBpc2ggYW5kIG9mdGVuIGRlc2NyaWJlZCBib29rIGJ5IEpvaG4gQ29tZW5pdXMgY2FsbGVkIFZpc2libGUgV29ybGQuMSwgd2hpY2ggYWxzbyBoYXBwZW5zIHRvIGJlIHRoZSBmaXJzdCBpbGx1c3RyYXRlZCBjaGlsZHJlbiBib29rLiBJdCB3YXMgYWxzbyBhIGJvb2sgYWJvdXQgdmlydHVhbGx5IGFueXRoaW5nLCBhbmQgZXZlcnl0aGluZywgYW5kIGNlcnRhaW5seSBub3QgYSBib29rIGFib3V0IG5vdGhpbmcsIGJlY2F1c2Ugc29vbmVyIG9mIGxhdGVyIENvbWVuaXVzIHdvdWxkIGdldCB0byB0aGUgdG9waWMgYW5kIGRlYWwgd2l0aCBpdCwgcmlnaHQgb3Igd3JvbmcuIApBbiBhY3R1YWwgcXVvdGUgd2FzLCAiSG93IGNvdWxkIHRoZXkgZG8gdGhpcz8gSSdtIGEgZGFuY2VyLCBJIHNob3VsZCBnZXQgd2hhdCBJIHdhbnQhIi4gCkkgZm91bmQgNCBwYXZlciBzdG9uZXMgdW5kZXIgbW9yZSBwaW5lIHN0cmF3LiBKdXN0IHRoZSBvdGhlciBkYXksIHdoZW4gSSByZXRyaWV2ZWQgdGhlIGhhbmdpbmcgcGxhbnQgaG9sZGVyLCBJIHdhbGtlZCBiYWNrIGludG8gYW4gYXJlYSBJIG5ldmVyIGV2ZW4gd2Fsa2VkIGludG8gYmVmb3JlLiBJIHR1cm5lZCBhcm91bmQgYW5kIG5vdGljZWQgc29tZXRoaW5nIG9kZC4gCkFtYXpvbiBhbGxvd3MgYW55b25lIHRvIHNldCB1cCBhIHNwZWNpYWx0eSBib29rIHN0b3JlLiAKSGUgZXZlbiBlbnRlcmVkIGNvbmNlbnRyYXRpb24gY2FtcHMgdG8gaXNzdWUgdmlzYXMgYW5kIHRyYXZlbCBkb2N1bWVudHMgdG8gd2hvZXZlciBoZSBjb3VsZCBzYXZlLi4gCkEgbG90IG9mIGhhbmRzIGhhdmUgc3VycHJpc2luZyBhbW91bnQgb2YgZXF1aXR5IGV2ZW4gdnMgYWNlcy4gVGhpcyB3aWxsIGJlIG11Y2ggbW9yZSBmdW4gZm9yIG5ldyBwb2tlciBwbGF5ZXJzIGJlY2F1c2UgdGhleSBnZXQgbHVja3kgd2F5IG1vcmUgb2Z0ZW4gYW5kIHdpbGwgbm90IGJlIHB1bmlzaGVkIHRvbyBtdWNoIGZvciBwbGF5aW5nIHRvbyB3aWRlLiAKRG9uJ3QgZm9yZ2V0IGFib3V0IHRoZSBidWxicy4gCkEgbW92ZWFibGUgZGVzayBsZXRzIGhpbSBkbyB0aGF0OyB3aGVuZXZlciBoaXMgYm9keSB0aHJlYXRlbnMgdG8gc3RpZmZlbiBpbnRvIGEgc2luZ2xlIGFjaGluZyBwb3NlLCBoZSBzd2l0Y2hlcyB0byBhbm90aGVyLiBPbiBhbnkgZ2l2ZW4gZGF5LCBNci4gTWNOdXR0IHNwZW5kcyBhYm91dCAyMCB0byA0MCBwZXJjZW50IG9mIGhpcyB0aW1lIHN0YW5kaW5nIHVwIHRvIHdvcmsuLiAKVGhlIGRldGFpbHMgb2YgdGhvc2UgYXJyYW5nZW1lbnRzIGFyZW4gcHVibGljIGFuZCBjb3VsZCBhbHRlciB0aGUgdmFsdWF0aW9uLi4gClBvc3RtZWRpYSB3YW50cyB0byBpbXByb3ZlIHlvdXIgcmVhZGluZyBleHBlcmllbmNlIGFzIHdlbGwgYXMgc2hhcmUgdGhlIGJlc3QgZGVhbHMgYW5kIHByb21vdGlvbnMgZnJvbSBvdXIgYWR2ZXJ0aXNlcnMgd2l0aCB5b3UuIFRoZSBpbmZvcm1hdGlvbiBiZWxvdyB3aWxsIGJlIHVzZWQgdG8gb3B0aW1pemUgdGhlIGNvbnRlbnQgYW5kIG1ha2UgYWRzIGFjcm9zcyB0aGUgbmV0d29yayBtb3JlIHJlbGV2YW50IHRvIHlvdS4gWW91IGNhbiBhbHdheXMgY2hhbmdlIHRoZSBpbmZvcm1hdGlvbiB5b3Ugc2hhcmUgd2l0aCB1cyBieSBlZGl0aW5nIHlvdXIgcHJvZmlsZS4gZXBhcGVyLCBEaWdpdGFsIEFjY2VzcywgU3Vic2NyaWJlciBSZXdhcmRzKSwgcGxlYXNlIGlucHV0IHlvdXIgUHJpbnQgTmV3c3BhcGVyIHN1YnNjcmlwdGlvbiBwaG9uZSBudW1iZXIgYW5kIHBvc3RhbCBjb2RlLgpTZXZlbnR5IGZpdmUgcGVyY2VudCBvZiB0aGUgJDEuMiB0cmlsbGlvbiBmZWRlcmFsIGRpc2NyZXRpb25hcnkgYnVkZ2V0IGhhcyBiZWVuIGZ1bmRlZCB0aHJvdWdoIHRoZSBTZXB0LiAKNC4gWW91ciBDb3Jwb3JhdGUgSW52ZXN0bWVudCBBY2NvdW50ICAgSWYgeW91IGhhdmUgYSBDb3Jwb3JhdGlvbiwgcHVsbGluZyBtb25leSBmcm9tIGhlcmUgd2lsbCBsaWtlbHkgYmUgY29uc2lkZXJlZCBhcyBpbmVsaWdpYmxlIGRpdmlkZW5kIGluY29tZSwgYnV0IGNvdWxkIHBvc3NpYmx5IGJlIHRheCBmcmVlIGR1ZSB0byB0aGUgc2l6ZSBvZiB5b3VyIGNhcGl0YWwgZGl2aWRlbmQgYWNjb3VudCBvciBzaGFyZWhvbGRlciBsb2Fucy4gCllvdSdsbCBub3cgc2VlIHlvdXIgU3RhcnQgcGFnZS4gLgpSaWdodC4gUmVwb3J0ZXI6IEFuZCBpZiBhIHdoYWxlIHdhc24ndCBkcmF3biBpbiBieSBoZXIgYSBsaXN0IGFjdG9ycywgTW9sbHkgc2F5cyBzaGUgaGFkIGFuIGFjZSBpbiB0aGUgaG9sZSwgQWxleCBSb2RyaWd1ZXouIEFuZCBoZXJlJ3MgYSBzaG9ja2VyLiAKSSB0cnlpbmcgaGFyZCB0byB3b3JrIG9uIG5vdCBmb2N1c2luZyBvbiBvdGhlcnMgd2hpbGUgcnVubmluZy4gSXQgbm90IHRoYXQgZWFzeS4gU3RheSBzdHJvbmcsIG15IGZyaWVuZC4KSSBjYWxsaW5nIENCQy4uIApJIHRoaW5rIHNob3J0IGRlY2sgZWFzaWx5IGhhcyB0aGUgcG90ZW50aWFsIHRvIGJlIG1vcmUgcG9wdWxhciB0aGFuIFBMTyBpbiB0aGUgZnV0dXJlLiBJdCBoYXMgYWxsIHRoZSBhZHZhbnRhZ2VzIHRoYXQgbWFrZXMgTkxIRSBwb3B1bGFyIGFuZCBhbHNvIHJlbW92ZXMgc29tZSBvZiB0aGUgZGlzYWR2YW50YWdlcyAoYSBsb3Qgb2YgcmVhbGx5IGJhZCBoYW5kcyB5b3UgaGF2ZSB0byBmb2xkIHByZWZsb3ApLgpBIHNleCB0b3kgY29tcGFueSBmb3VuZCBpdHNlbGYgbWFraW5nIGhlYWRsaW5lcyBhdCBDRVMgYWZ0ZXIgaXQgd2FzIHJldmVhbGVkIHRoYXQgdGhlIHRyYWRlIHNob3cgaGFkIGluaXRpYWxseSBnaXZlbiBpdCBhbiBpbm5vdmF0aW9uIGF3YXJkLCBiZWZvcmUgdGFraW5nIGl0IGJhY2sgd2hlbiBpdCByZWFsaXplZCBpdCBoYWQgZ2l2ZW4gYSBwcml6ZSB0byBhIGhpZ2ggZW5kIHZpYnJhdG9yLgpJdCBrZWVwcyB5b3UgY29vbCBhbmQgaXQncyB1c3VhbGx5IGFuIGluZGljYXRpb24geW91J3JlIHdvcmtpbmcgaGFyZCB0byBrZWVwIHlvdXIgYm9keSBoZWFsdGh5LiAKSSBib3VnaHQgbmV3IGplYW5zIGEgZmV3IHRpbWVzIHRocm91Z2hvdXQgdGhlIHByb2Nlc3MgYnV0IG9ubHkgd2hlbiB0aGV5IHdlcmUgb24gc2FsZS4gCkkgd2FzIHdvcmtpbmcgYXQgQmlvd2FyZSwgdGhlIHZpZGVvIGdhbWUgY29tcGFueSwgYXMgYSB0ZW1wIFFBIHRlc3RlciBmb3IgYSBiaXQuIFNvbWUgb2YgdGhlIGZ1bGwgdGltZSBlbXBsb3llZXMgd291bGQgcnVuIGEgYmkgbW9udGhseSBwb2tlciBnYW1lIGluIG9uZSBvZiB0aGUgYnJlYWsgcm9vbXMgYWZ0ZXIgaG91cnMuIApJIHN1YmJlZCBmb3IgYSB0ZWFjaGVyIHdobyBoYWQgYSBkZXNrIGluIHRoZSBiYWNrIHdoZXJlIGtpZHMgaGFkIHRvIGdldCBtb3ZlZCB0byBpZiB0aGV5IHdlcmUgbWlzYmVoYXZpbmcuIFRoYXQgcHJldHR5IG5vcm1hbCAgIHNvbWV0aW1lcyBraWRzIGdldCB0b28gd3JhcHBlZCB1cCBpbiBhIGNvbnZlcnNhdGlvbiBvciB3aGF0ZXZlciBhbmQgY2FuIGNvbmNlbnRyYXRlIGFuZCBpZiB5b3Ugc2VwYXJhdGUgdGhlIGtpZHMgYnkgbW92aW5nIG9uZSB0byBhbm90aGVyIHNlYXQgdGhlbiB0aGV5IGNhbiBnZXQgdGhlaXIgd29yayBkb25lIHF1aWNrbHkgd2l0aG91dCBhIGRpc3RyYWN0aW9uICAgdGhlbiBhZnRlciB0aGV5IGRvIHRoZWlyIHdvcmsgaXQgb2sgaWYgdGhleSBnZXQgYmFjayB0byB0YWxraW5nIHRvZ2V0aGVyLgpCb3RoIHNpZGVzIHdlcmUgcGFydGljaXBhdGluZyBpbiB2aW9sZW50IHB1cmdlcyBiZWZvcmVoYW5kIG5vIG9uZSB0b2xkIHRoZW0gdG8gZG8gdGhhdC4gClNoZSBoYXMgYSBodWdlIHNtaWxlIG9uIGhlciBmYWNlIGFuZCBpcyBzaGFraW5nIGhhbmRzIHdpdGggU3RhdGUgb2ZmaWNpYWxzLCBsb2NhbCBuZXdzLCBsb2NhbCBjZWxlYnJpdGllcywgYW5kIHRoZW4gZmluZHMgaGVyc2VsZiBnaXZpbmcgYSBkZWVwIHNpZ2guIApUaGVyZSBpcyBubyBrbm93biBldmlkZW5jZSB0byBzdXBwb3J0IHRoZSBjbGFpbS4uIApBY2NvcmRpbmcgdG8gaGlzIHJlc2VhcmNoLCBhIGNydW5jaCBvciB0cmFkaXRpb25hbCBzaXQgdXAgZ2VuZXJhdGVzIGF0IGxlYXN0IDMsMzUwIG5ld3RvbnMgKHRoZSBlcXVpdmFsZW50IG9mIDM0MCBrZykgb2YgY29tcHJlc3NpdmUgZm9yY2Ugb24gdGhlIHNwaW5lLiBOYXRpb25hbCBJbnN0aXR1dGUgZm9yIE9jY3VwYXRpb25hbCBTYWZldHkgYW5kIEhlYWx0aCBzdGF0ZXMgdGhhdCBhbnl0aGluZyBhYm92ZSAzLDMwMCBuZXd0b25zIGlzIHVuc2FmZS4KSSBsaWtlIG1ha2luZyBtb25leSwgYW5kIEkgcmVhbGx5IGxpa2UgZ2V0dGluZyB0byB0aGUgY29yZSBvZiBzb21lYm9keSdzIG5lZWQsIHJlYWxseSBmaW5kaW5nIG91dCB3aGF0J3MgZ29pbmcgb24gaW5zaWRlIHRoYXQgbGVhZHMgc29tZW9uZSB0byBtZSwiIEplc3Mgc2F5cy4gCklrIGRlbmsgZGF0IGlrIG9wIG5pdmVhdSAyIHppdCBvbWRhdCBpayBpbiBzdGFhdCBiZW4gb20gaW4gbWF0aWcgdG90IGNvbXBsZXhlIHNpdHVhdGllcyB0ZSBoYW5kZWxlbiB2b2xnZW5zIGRlIGNvbXBldGVudGllcyB2YW4gZGl0IGNvbXBldGVudGllZ2ViaWVkLiBWYW4gZGV6ZSBtYXRpZyBjb21wbGV4ZSBzaXR1YXRpZXMgaGViIGlrIGluemljaHQgaW4gZGUgZmVpdGVuLCB0aGVvcmllbiwgcHJpbmNpcGVzIGVuIGRlIHJlZ2VscyBlbiBpayBrYW4gZGFuIG9vayBpbiBkaXZlcnNlIHNpdHVhdGllcyB2YW51aXQgZGUgb3BsZWlkaW5nIG1pam4gc3BlY2lmaWVrZSBrZW5uaXMgZW4gdmFhcmRpZ2hlZGVuIGxhdGVuIHppZW4uIApJbmR1c3RyeSBpcyBzdGlsbCByZWxhdGl2ZWx5IG5ldyBpbiB0aGUgc3RhdGUsIHNvbWV0aGluZyBpcyBvcGVuaW5nIGFsbW9zdCBldmVyeSBvdGhlciBtb250aCwgc2FpZCBBbGFuIFNpbHZlciwgYXNzaXN0YW50IHByb2Zlc3NvciBvZiByZXN0YXVyYW50LCBob3RlbCBhbmQgdG91cmlzbSBhdCBPaGlvIFVuaXZlcnNpdHkgYW5kIGEgZm9ybWVyIGNhc2lubyBleGVjdXRpdmUuIEV2ZXJ5dGhpbmcgb3BlbnMgYXJvdW5kIHRoZSBzdGF0ZSwgdGhlbiB3ZSdsbCBnZXQgYSBnb29kIGluZGljYXRpb24uIApEcmF3aW5nIG9uIG1hbmdhLCBhbmltZSBhbmQgSmFwYW5lc2UgY3VsdHVyZSwgTXVyYWthbWkgdGhyZWUgZGVjYWRlcyBvZiB3b3JrIGhhcyBhbHNvIGRyYXduIHRoZSBhdHRlbnRpb24gb2YgcmV0YWlsZXJzIHN1Y2ggYXMgTG91aXMgVnVpdHRvbiwgTWFyYyBKYWNvYnMgYW5kIFZBTlMgYW5kIGhpcCBob3AgYXJ0aXN0cyBLYW55ZSBXZXN0IGFuZCBQaGFycmVsbCBXaWxsaWFtcy4uIApUaGUgdG9wIHBva2VyIGd1eXMgc3R1ZHkgZWFjaCBvdGhlcidzIGdhbWVzLiBUaGV5IHBsYXkgd2l0aCBlYWNoIG90aGVyIGluIHRvdXJuaWVzIGxpa2UgdGhlc2UuIFRoZXkgaGF2ZSBhIGhhbmQgaGlzdG9yeSB3aXRoIGVhY2ggb3RoZXIuIApPbmxpbmUgU2l0ZVBva2VyIFJhdGluZ3MgMiBUaGUgV2lsbGlhbSBIaWxsIFBva2VyIE9uZSBvZiB0aGUgb2xkZXN0IGdhbWJsaW5nIGNvbXBhbnkgaW4gdGhlIGludGVybmV0LiBUaGV5IGFyZSBmYW1vdXMgZm9yIHRoZWlyIHNwb3J0cyBiZXR0aW5nIGNvbXBhbnkgd2hpY2ggaXMgbGFuZCBiYXNlZCBhbmQgd2hpY2ggaGFzIGJlZW4gdXAgYW5kIHJ1bm5pbmcgc2luY2UgdGhlIDQwcy4gWW91IGNhbiB0cnVzdCB0aGlzIGNvbXBhbnkgbGlrZSB5b3UgdHJ1c3QgYSBiYW5rLiBJdCBpcyBhIFVLIGJhc2VkIGNvbXBhbnkuIFNpbmNlIGl0IGlzIGEgdmVyeSBlc3RhYmxpc2hlZCBvbmxpbmUgZ2FtYmxpbmcgc2l0ZSB0aGVyZSBhcmUgbWFueSBwbGF5ZXJzIGFuZCBzb21lIG9mIHRoZW0gbWF5IGJlIGV2ZW4gbW9yZSBvZiBhIGJlZ2lubmVyIHRoYW4geW91IHNvIHlvdSBoYXZlIHRoZSBvcHRpb24gb2YgcGxheWVycyB3aXRoIHZhcnlpbmcgc2tpbGxzIHRvIGNob29zZSBmcm9tLgpGaXJld29ya3MgRmlyZXdvcmtzIEZpcmV3b3JrcyBGaXJld29ya3MgRmlyZXdvcmtzIENpbmRlcmVsbGEgQ2FzdGxlIFRpbWUgTXkgU2lzdGVyIChhZ2FpbikgU2VsZiBQb3J0cmFpdCBMdWNhcyBTbGVlcGluZyBMdWNhcyBTeWRuZXkgMyBGcmllbmRzIChCZWxhdGVkKSBIYXBweSBWYWxlbnRpbmUncyBEYXkgTVJJIENvbXBsZXRlIEknbSBOYWtlZCBNeSBTaXN0ZXIgSSdtIFdyaXRpbmcuIApTdGFydCBhIGdhbWUgYnkgcGxhY2luZyBhIGJldCBvbiB0aGUgInBhc3MgbGluZSwiIHdoaWNoIGlzIGNsZWFybHkgbWFya2VkIG9uIHRoZSB0YWJsZS4gVGhpcyBpbml0aWFsIGJldCBoYXMgYSBob3VzZSBlZGdlIG9mIGFib3V0IDEuNCUsIGFuZCB5b3UncmUgYmFzaWNhbGx5IGJldHRpbmcgb24gdGhlIHJlc3VsdHMgb2YgdGhlIHNob290ZXIncyBmaXJzdCByb2xsLi4gCkhlIGhhZCByb2xlcyBpbiBhIGhhbmRmdWwgb2YgZmlsbXMsIGluY2x1ZGluZyAiVGhlIEZpZnRoIEVsZW1lbnQsIiAiQnVmZnkgdGhlIFZhbXBpcmUgU2xheWVyLCIgIjggU2Vjb25kcyIgYW5kICJBbWVyaWNhbiBTdHJheXMsIiBhcHBlYXJlZCBpbiBIQk8ncyBwcmlzb24gZHJhbWEgIk96IiBhcyBhIHRlbGV2YW5nZWxpc3QgY29udmljdGVkIG9mIGZyYXVkLCBhbmQgdm9pY2VkIGNhcnRvb25zIGluY2x1ZGluZyAiVGhlIEluY3JlZGlibGUgSHVsayIgYW5kICJNb3J0YWwgS29tYmF0LiIKIEluIHNvbWUgbWluaW5nIGphcmdvbiwgYSBoZWFkaW5nIGlzIGEgY29tbXVuaWNhdGlvbiB0dW5uZWwgd2hpY2ggaXMgYmVpbmcgZXh0ZW5kZWQgaW4gYSBnaXZlbiBkaXJlY3Rpb24uIApGb3J3YXJkLCB5b3Ugd2lsbCBzZWUgdGhhdCBjaGFuZ2UuIFdlIHdhbnQgdG8gbWFrZSBzdXJlIHdlIGFyZSByZWZsZWN0aXZlIG9mIENhbmFkaWFucyBkb2luZyBidXNpbmVzcyBpbiB0aGlzIGNvdW50cnkgYW5kIHdlIGhhdmUgdG8gZG8gYSBiZXR0ZXIgam9iIG9mIHRoYXQuIApPbiB0aGUgdG9waWMgb2YgY2x1YnMgYW5kIGV4cGVyaWVuY2luZyBkaXNjcmltaW5hdGlvbiwgdGhlcmUgaXMgYSBsYXJnZSB1cyBtaWxpdGFyeSBiYXNlIGluIGRhZWd1IGFuZCB0aGUgc29sZGllcnMgd2lsbCBvZnRlbiBnbyBvdXQgb24gd2Vla2VuZHMgYW5kIHBhcnR5LiAKWmFjaCBIaWxsIGRydW1taW5nIHdpdGggSGVsbGEgaXMgYWxzbyBpbXByZXNzaXZlLCBhbmQgZm9yIHNvbWV0aGluZyBhIGJpdCBkaWZmZXJlbnQsIERlYXRoIEdyaXBzIGFsYnVtIE5pZ2dhcyBvbiB0aGUgTW9vbiBpcyBhIGhpcCBob3AgYWxidW0gd2hlcmUgdGhlIGludHJ1bWVudGFscyBhcmUgYWxtb3N0IGVudGlyZWx5IG1hZGUgZnJvbSBaYWNoIHRyaWdnZXJpbmcgc2FtcGxlcyB3aXRoIHYgZHJ1bXMuIApJIGZlbGwgaGVhdnkgaW50byBkZXByZXNzaW9uIGFzIEkgd2FzIGludHJvZHVjZWQgdG8gYSBjb21wbGV0ZWx5IGRpZmZlcmVudCBlbnZpcm9ubWVudCAoc2V0dGluZyBhbmQgcmFjaWFsIHdpc2UpLiAKQmVzdCB0aGluZyB0byBkbyB1c3VhbGx5IGlzIHRvIHBsZWFkIG5vdCBndWlsdHkgYW5kIHJlcXVlc3QgYSBjb3VydCBkYXRlLiBUaGV5IHdpbGwgc2VuZCB5b3UgYSBub3RpY2UgaW4gdGhlIG1haWwgdGVsbGluZyB5b3Ugd2hlbiB0byBjb21lIHRvIGNvdXJ0LiBPbmNlIHlvdSBnZXQgeW91ciBjb3VydCBkYXRlIGluIHRoZSBtYWlsLCBmaWxlIGEgcmVxdWVzdCBmb3IgZGlzY2xvc3VyZS4gCkZldyBwZW9wbGUgcmVjb2duaXplIHRoYXQgdGhlIHNpYmxpbmdzIG9mIGEgY2FuY2VyIHBhdGllbnQgd2lsbCBiZSA1MCBwZXJjZW50IG1vcmUgbGlrZWx5IHRvIHN1ZmZlciB3aXRoIFBUU0QgYmVjYXVzZSBoZSBvciBzaGUgaXMgdG9vIHlvdW5nIHRvIHVuZGVyc3RhbmQgd2h5IHRoZWlyIGJyb3RoZXIgb3Igc2lzdGVyIGlzIGR5aW5nLCB3aHkgbW9tIGFuZCBkYWQgYXJlIGFsd2F5cyBnb25lLCBvciB3aHkgdGhlaXIgbmVlZHMgYXJlIHB1c2hlZCBhc2lkZS4gCldoZW4gYXNrZWQgaWYgdGhlaXIgd2FzIG1vcmUgb3IgbGVzcyB3YXRlciBhZnRlciB0aGUgd2F0ZXIgd2FzIHBvdXJlZCBmcm9tIHRoZSB0YWxsIHRvIHRoZSBzaG9ydCB2ZXNzZWwgcHJlb3BlcmF0aW9uYWwgY2hpbGRyZW4gb2Z0ZW4gc2FpZCB0aGF0IHRoZXJlIHdhcyBsZXNzIHdhdGVyIGluIHRoZSBzdG91dCBnbGFzcy4gClRoaXMgY3JlYXRlcyBhIGRpc3Bhcml0eSBpbiB3YWdlIHdoZXJlIHBlb3BsZSB3aWxsIGxpa2VseSBjaG9vc2UgbG93ZXIgbGV2ZWwgam9icyBpZiB0aGV5IGRvbiBnZXQgcGFpZCBlbm91Z2ggdG8gZGVhbCB3aXRoIHRoZWlyIHBvc2l0aW9ucy4gCktvcmVhIEJ1Y2tldCBMaXN0IGZvciByZXNpZGVudHMKVGhpcyBwYXN0IHdlZWssIGhlIGRlbWFuZGVkIHRoZXkgbW92ZSBpbiB0byBjbGVhbiB1cCBzbyBjYWxsZWQgIm5vIGdvIiBhcmVhcyAgIGVudGlyZSBuZWlnaGJvcmhvb2RzIHdoZXJlIHBvbGljZSBmZWFyIHRvIHRyZWFkICAgYWNjb3JkaW5nIHRvIGxvY2FsIHByZXNzIHJlcG9ydHMuLiAKMS4gRmlndXJlIDE0LjI6IFRyYWNlcyB0aGUgbWlncmF0aW9uIG9mIFNvdXRoIFBvbGUgcG9zaXRpb25zIGR1cmluZyB0aGUgZWFybHkgUGFsZW96b2ljIHdoZW4gR29uZHdhbmEgYW5kIEV1cmFtZXJpY2Egd2VyZSBzZXBhcmF0ZSBhbmQgZWFjaCBoYWQgaXRzIG93biBwb2xhciB0cmFjay4gRHVyaW5nIENhcmJvbmlmZXJvdXMgdGltZSAoQyksIEdvbmR3YW5hbGFuZCBhbmQgTm9ydGggQW1lcmljYSBjb2xsaWRlZCBhbmQgam9pbmVkLiAKRXZlbiB0aG91Z2ggSSBwbGF5ZWQgZmFpcmx5IGxpZ2h0bHksIEkgY2FuIHNvbG8gR1I4NSwgYWxiZWl0IHdpdGggc29tZSBzcGVlZGJ1bXBzLCBidXQgaGF2ZSBkb25lIGdyb3VwcyBvZiB1cCB0byBHUjEwNS4gCldhdGNoIHRoaXMgbW92aWUgYW5kIHNlZSBob3cgcmVhbCByZXBvcnRlcnMgd29yay4uIApXZSdyZSBubyBOaWFnYXJhIG9uY2UgaG9zdGVkIGEgY29udmVudGlvbiBmb3IgdHJhdmVsIGFnZW50cyB3aG8gd2VyZSBnb2luZyB0byBiZSBpbnRyb2R1Y2VkIHRvICBtYW55IHN0ZWxsYXIgYW1lbml0aWVzLiBXaGF0IGEgc3VycHJpc2Ugd2hlbiB0aGV5IGFsbCBjaGFydGVyZWQgYSBidXMgYW5kIGRyb3ZlIHRvIE5pYWdhcmEgRmFsbHMuIFRoZSBmb3JrcyBvZiB0aGUgVGhhbWVzIGlzIGluIHRoZSBwZWUgd2VlIGxlYWd1ZSBhbmQgd2lsbCBvbmx5IHByb3ZpZGUgc2hlbHRlciB0byB0aGUgaG9tZWxlc3MgZm9yY2VkIHRvIGxpdmUgdW5kZXJuZWF0aCB0aGUgcmliYm9ucyBvZiAgZ2xvcnkuLiAKQ2hhbWJlciAicmVwcmVzZW50YXRpdmUiICJIaW5nbyBTZW1icmEiIChBbmR5IEJpY2hsYmF1bSBvZiBUaGUgWWVzIE1lbikgYXNzZXJ0ZWQgdGhhdCB0aGUgQ2hhbWJlciB3b3VsZCBwdXQgaXRzIGZ1bGwgd2VpZ2h0IGJlaGluZCBzdXBwb3J0aW5nIHRoZSBLZXJyeSBCb3hlciBiaWxsLCB3aGlsZSB3b3JraW5nIHdpdGggU2VuYXRvcnMgS2VycnkgYW5kIEJveGVyIHRvIHN0cmVuZ3RoZW4gdGhlIGJpbGwuIApBdCB0aGUgWCBnYW1lcyBlYXJsaWVyIHRoaXMgeWVhciwgSGlyYW5vIGhhZCBhIHJ1biB0aGF0IHdhcyBwcmV0dHkgbXVjaCBwZXJmZWN0LCBidXQgcmVjZWl2ZWQgYSBzY29yZSBvZiA5OS4gClBvc3RpbmcgbXVsdGlwbGUgdGhyZWFkcyBhIGRheSBpbiBleGNlc3NpdmUgdXNlLiAKSSBmb3VuZCBpdCBub3Qgc2F0aXNmeWluZyBhdCBhbGwuIEkgbWlzc2VkIHRoZSBleGNpdGVtZW50IG9mIGEgZmFzdGVyIHBhY2VkIHBsYWNlLiAKVGhlIGRvbWluYW50IHJlbGlnaW9uIGluIHRoZSBhcmVhIHdhcyBwcm90ZXN0YW50LiBJZiBzaGUgd2FzLCBjaGVjayB0aGUgQmlzaG9wcmljIG9mIEZ1bGRhIGFuZCB0aGUgQXJjaGJpc2hvcHJpYyBvZiBQYWRlcmJvcm4gZm9yIHJlY29yZHMucG9zc2libGUgZXhwbGFuYXRpb24gZm9yIGhvdyB0aGV5IG1ldCBjb3VsZCBiZSB0aGF0IE1hcmlhIHdlbnQgdG8gQW1zdGVyZGFtIHRvIHdvcmsgYXMgbWFpZCBvciBzaW1pbGFyIGFuZCBtZXQgRnJpZWRyaWNoIGluIEFtc3RlcmRhbS5GcmVkcmlrIGFuZCBNYXJpYSBtYXJyaWVkIGZvciB0aGUgZmlyc3QgdGltZSBhcyBwcm90ZXN0YW50cy4gCjQuIEdldCBidWlsdCBpbiBjdXAgaG9sZGVycyBhbmQgYXNodHJheXMgd2hlbiBuZWVkZWQuCldhdHNvbiBXZWJiIChTaWRlIG5vdGUsIGhlIGlzIGRlc2NyaWJlZCB3b25kZXJmdWxseSBieSBGZXJyaXMgYXMgIndob3NlIGNoaWVmIGNoYXJhY3RlcmlzdGljcyB3ZXJlIHRoZSBzZXJpb3VzbmVzcyB3aXRoIHdoaWNoIGhlIHRvb2sgaGltc2VsZiBhbmQgaGlzIGFiaWxpdHkgdG8gd3JpdGUgdm9sdW1pbm91cyBub3RlcyBpbiB3aGF0IGhlIGJlbGlldmVkIHRvIGJlIHRoZSBiZXN0IGxlZ2FsaXN0aWMgc3R5bGUuIiksIGJ1dCBub3RoaW5nIHdhcyBhY3R1YWxseSByZXNvbHZlZCwgYW5kIENvbmZlZGVyYXRlIHNoaXBzIHdvdWxkIGNvbnRpbnVlIHRvIGZpbmQgc2FmZSBoYXJib3IgaW4gQnJhemlsaWFuIHBvcnRzLCBkaXBsb21hdGljIGxldHRlciB3cml0aW5nIGFnYWluIGVydXB0aW5nIGluIDE4NjMgYWZ0ZXIgdGhlIENTUyBBbGFiYW1hIHNoZWx0ZXJlZCBpbiBGZXJuYW5kbyBkbyBOb3JvbmhhIGFuZCBjYXB0dXJlZCBzZXZlcmFsIFVuaW9uIG1lcmNoYW50bWVuIHRoYXQgd2VyZSBpbiBCcmF6aWxpYW4gd2F0ZXJzIGF0IHRoZSB0aW1lLiAKSW4gdGhpcyB3YXksIHRoZSB0cmlhbHMgcHJvdmlkZWQgZGlmZmVyZW50IGFtb3VudHMgb2YgaW5mb3JtYXRpb24gYWJvdXQgdGhlIHJpc2tzIGludm9sdmVkOiBmb3IgZXhhbXBsZSwgaW4gc29tZSB0cmlhbHMsIHBhcnRpY2lwYW50cyBjb3VsZCBjaG9vc2UgYmV0d2VlbiB0aGUgJDUgYW5kIGEgY2xlYXIgNTAlIGNoYW5jZSBvZiB3aW5uaW5nICQ1MC4gSW4gb3RoZXJzLCBob3dldmVyLCB0aGV5IGhhZCBhIGNob2ljZSBiZXR3ZWVuICQ1IGFuZCB2YXJ5aW5nIGFtb3VudHMgb2YgbW9uZXksIHVwIHRvICQxMjUsIGJ1dCB0aGUgcHJvYmFiaWxpdHkgb2Ygd2lubmluZyBhcHBlYXJlZCB0byB2YXJ5IGZyb20gMjUlIHRvIDc1JS4gSW4gcmVhbGl0eSwgdGhleSBhbHdheXMgaGFkIGEgNTAlIGNoYW5jZSBvZiB3aW5uaW5nLCBidXQgd2VyZSBsZWQgdG8gYmVsaWV2ZSB0aGVpciBvZGRzIHZhcmllZCwgd2hpY2ggYWxsb3dlZCByZXNlYXJjaGVycyB0byBsb29rIGF0IGhvdyBwYXJ0aWNpcGFudHMgdGhvdWdodCBhYm91dCBhbWJpZ3VpdHkuCkkgbmV2ZXIgdGhvdWdodCBJIHNlZSBhIHBvc3QgbGlrZSB0aGlzIHNvIGhlYXZpbHkgdXB2b3RlZCBvbiByL25ld3MsIGFuZCBJIHNvIGdsYWQgb2YgaXQuIFRoaXMgc3ViIGFuZCB0aGUgcGVvcGxlIHdobyBwb3N0IGluIGl0IGFyZSBmcnVzdHJhdGluZ2x5IHBhcnRpc2FuIHRvIHRoZSBwb2ludCB0aGF0IEFOWVRISU5HIHBlcnRhaW5pbmcgdG8sIHN1Z2dlc3RlZCwgb3Igc3VwcG9ydGVkIGJ5IGFueW9uZSBvbiB0aGF0ICJvdGhlciIgdGVhbSBpcyBsaXRlcmFsIGV2aWwsIHdoaWxlIHRoZWlyIGNob3NlbiB0ZWFtIGlzIHRoZSBlbWJvZGltZW50IG9mIGEgY2hvaXIgb2YgYW5nZWxzIGRlc2NlbmRlZCBmcm9tIGhlYXZlbi4KR29vZCBsdWNrIGluIGV4dHJhZGl0aW5nIHRoZW0uIApPYnZpb3VzbHksIHRoZXJlIGlzIG5vIHN1Y2ggdGhpbmcgYXMgdGhlICJ3b3JraW5nIHBvb3IuIiBUaGVyZSBhcmUsIGhvd2V2ZXIsIHBlb3BsZSB3aG8gdGhyb3VnaCBzb21lIGZhdWx0IG9mIHRoZWlyIG93biAodGVlbmFnZSBwcmVnbmFuY3ksIGhpZ2ggc2Nob29sIHRydWFuY3ksIG9ycGhhbmhvb2QpIHdvcmsgdHdvIGpvYnMgYXQgbWluaW11bSB3YWdlIGFuZCBjYW5ub3QgYWZmb3JkIGJvdGggZm9vZCBhbmQgVHlsZW5vbC4gClRoZXJlIHdhcyBvbmx5IG9uZSBwcm9ibGVtOiBUaGUgIkpvaG4iIGluIHF1ZXN0aW9uICAgdGhlIG9sZCB3b21hbidzIHNvbiwgb25lIEphY2sgRGFuaWVsICJKb2huIFRlc3NpZXIiIE1jQ3VsbG91Z2ggICB3YXMgYSBtb2RlbCBjaXRpemVuIHdpdGggYW4gYWlydGlnaHQgYWxpYmk6IEhlIGhhZCBiZWVuIGluIGFub3RoZXIgdG93biBkdXJpbmcgdGhlIGFiZHVjdGlvbiwgZW5saXN0aW5nIGluIHRoZSBBaXIgRm9yY2UgYW5kIHVuZGVyZ29pbmcgdGhlaXIgcGh5c2ljYWwuIEhlIGhhZCBzaW5jZSBiZWNvbWUgYSBkZWNvcmF0ZWQgQWlyIEZvcmNlIGFuZCBBcm15IHZldGVyYW4gd2hvIGhhZCByaXNlbiB0byB0aGUgcmFuayBvZiBjYXB0YWluIGFuZCB3YXMgYXdhcmRlZCBhIGJyb256ZSBzdGFyIGZvciBoaXMgc2VydmljZSBpbiBWaWV0bmFtLiAKTm90IGFueW1vcmUuIApDZSBub20gcGV1dCBwYXJmb2lzIHMnYWNjb21wYWduZXIgZCd1biB0aXRyZSBkZSBub2JsZXNzZSAocHJpbmNlLCBkdWMsIG1hcnF1aXMsIGNvbXRlLCB2aWNvbXRlLCBiYXJvbiwgY2hldmFsaWVyKS4gCk9uY2UgbW9yZSB3ZSB0aGFuayB5b3UgZm9yIHRha2luZyB0aGUgdGltZSB0byBub3RpZnkgdXMgb2YgeW91ciBwZXJzb25uZWwgZXhwZXJpZW5jZXMuIApXaGVyZSB0aGUgaG91c2UgZG9lc24ndCB0YWtlIGEgY3V0IG9mIHRoZSBwb3QuIFdoZXJlIGV2ZXJ5dGhpbmcncyBhYm92ZWJvYXJkLCBhdCBsZWFzdCBhY2NvcmRpbmcgdG8gb3duZXJzIHdobyBzYXkgdGhleSd2ZSBqdW1wZWQgdGhyb3VnaCBldmVyeSBsb29waG9sZSBpbiBUZXhhcycgZ2FtYmxpbmcgbGF3cyB0aGF0IHByb2hpYml0IHByb2ZpdGluZyBvZmYgZ2FtZXMgb2YgY2hhbmNlIGJ1dCBqdXN0IG1pZ2h0IGFsbG93IGNvbnRlc3RzIG9mIHNraWxsIGNvbmR1Y3RlZCBpbiBwcml2YXRlIHBsYWNlcy4uIApJIGNvbXBsZXRlbHkgYWdyZWUgd2l0aCB5b3UgYWJvdXQgaG93IGl0IGFmZmVjdHMgbXkgcXVhbGl0eSBvZiBsaWZlIGFuZCBJIHdhbnQgdG8gZ2V0IGJldHRlci4gQnV0IGl0IHVzdWFsbHkgZHVyaW5nIG15IGV4YW0gcGVyaW9kLCBvciB3aGVuIEkgdHJ5IHRvIGZpbmQgYW4gaW50ZXJuc2hpcCBpcyB3aGVuIEkgZ2V0IHNvIGRvd24uCk9yIGV2ZW4gcmVhbGx5IGNvbm5lY3Qgd2l0aCB1cyBhdCBhbGwuIApUaGV5IGFyZSBsaWtlIFQgUmV4OiBzdHVwaWQsIHBlcmhhcHMsIGJ1dCBiaWcsIG1lYW4sIGFuZCByZWFsbHkgcG93ZXJmdWwuIFRoZSBHT1AgY2Fubm90IGlnbm9yZSB0aGVtIGFueW1vcmUgdGhhbiBodW1hbnMgY291bGQgaGF2ZSBpZ25vcmVkIFQgUmV4LCBpZiBpbiBmYWN0IHdlIGhhZCBpbmhhYml0ZWQgdGhlIHBsYW5ldCBhdCB0aGUgc2FtZSB0aW1lLCB3aGljaCB3ZSBkaWRuIGxlYWRzIHVzIHRvIHRoZSByZWFsIGlkaW9jeTogdGhlIGlkZWEgdGhhdCBwb2xpdGljcyBjYW4gYmUgcnVuIGJ5IG1vbmV5IGFuZCBub3QgYmUgYSBjb25ncmVzcyBvZiBpZGlvdHMuIApUaGUgbW9zdCBoZWFsdGh5IHBlb3BsZSBpc24ndCBtdXNjdWxhci4gClNvIEkgZmlndXJlLCB0aGF0IGl0LiBJIHN0aWxsIGRvIGVuam95IHN0dWZmLiBHYW1lcywgYm9va3MsIG1vdmllcywgYnV0IEkgcHJldHR5IGRpc2Nlcm5pbmcgbm93YWRheXMuIEkgb25seSBoYXZlIHNvIG1hbnkgaG91cnMgYmV0d2VlbiB3b3JrIHNvIEkganVzdCBkb24gd2FzdGUgYSBsb3Qgb2YgbXkgdGltZSBvbiBjcmFwLiBFdmVuIGlmIGl0IHNvbWV0aGluZyBJIFJFQUxMWSBlbmpveWVkIGEgd2hpbGUgYmFjay4gVGhpcyBhbGwgbWFrZXMgbWUgd29uZGVyLCByZWFkaW5nIGV2ZXJ5dGhpbmcgeW91IGFsbCBzYWlkLCBJIGZlZWwgbGlrZSBpdCBqdXN0IHdvcmsgYW5kIHRpcmVkLCBidXQgZXZlcnlib2R5IGVsc2UgaXMgc2F5aW5nIGl0IHNvbWV0aGluZyBlbHNlLgpJIG1lYW4sIG1heWJlIGlmIFQuIEQuIApQZXJmZWN0IHN5c3RlbSBvZiBwcm9ibGVtIGNyZWF0aW9uIGFuZCBoaWdobHkgcHJvZml0YWJsZSBzb2x1dGlvbi4gCkVsc2V3aGVyZSBvbiB0aGUgT2ZmaWNpYWwgU2luZ2xlcyBDaGFydCwgbGFzdCB3ZWVrIGNoYXJ0IHRvcHBlciBQcm9taXNlcywgYnkgQ2FsdmluIEhhcnJpcyBhbmQgU2FtIFNtaXRoLCBoYXMgc2xpcHBlZCBkb3duIHRvIG51bWJlciB0d28uClBpenphZ2F0ZSByZWFsbHkgZGlzdG9ydGVkIGEgbG90IG9mIHRoZSBwb3N0ZXJzIG9uIHRoaXMgc3VicmVkZGl0LCBtYW4uIFlvdSBndXlzIHdhbnQgc29tZXRoaW5nLCBhbnl0aGluZyB0byBiZSByZWFsIHNvIGZ1Y2tpbmcgYmFkIGJlY2F1c2UgeW91IGp1c3Qgd2FudCB0byBmZWVsIHZpbmRpY2F0ZWQgaW4geW91ciBiZWxpZWZzIHRoYXQgeW91IGJlZW4gbW9ja2VkIGZvci4KdGhlIHJpMHQgZ2dyciBhYXJyZ2cgdQpUaGlzIGlzIGEgbG92aW5nLCBzb290aGluZywgYW5kIGNhcmluZyB3YXkgdG8gdGhhbmsgeW91ciB3aWZlIGZvciBhbGwgdGhlIGVmZm9ydHMgc2hlIGV4ZXJ0ZWQgdG8ga2VlcCB5b3VyIHJlbGF0aW9uc2hpcCB3aXRoIHlvdXIga2lkcyBzbW9vdGggYW5kIGhhcHB5LiAKSWYgeW91IGRvbiB0aGluayBhbnlvbmUgaXMgZ29pbmcgdG8gYmUgY2hhcmdlZCB3aXRoIGFueXRoaW5nIGxpa2UgdGhhdCwgdGhlbiB5b3UgZ2V0IHRvIHNheSB5b3UgdG9sZCBldmVyeW9uZSBzbyBhdCB0aGUgZW5kLCB3aGVuIGV2ZXJ5b25lIGVsc2UgaGFzIGVnZyBvbiB0aGVpciBmYWNlLiBVbmZvcnR1bmF0ZWx5LCB0aGVyZSBubyB0aW1lIHRhYmxlIGFuZCBpdCBjb3VsZCBiZSBhd2hpbGUgYXMgdGhlc2UgaW52ZXN0aWdhdGlvbnMgYXJlIGNvdmVyaW5nIGEgbG90IG9mIGluZm9ybWF0aW9uLCBhbmQgYXMgd2l0aCBldmVyeXRoaW5nIHJlbGF0ZWQgdG8gdGhlIGdvdmVybm1lbnQsIGl0IGdvaW5nIHRvIHRha2UgYSBsb25nIHRpbWUuCkkgbmV2ZXIgcnVuIGFueXRoaW5nIG1vcmUgdGhhbiA3ayB3aXRob3V0IHN0b3BwaW5nLCBiZWZvcmUgSSBqdXN0IGRlY2lkZWQgdG8gZ28gYW5kIHJ1biBhIDIxSy4KQnV0IGhlYXZ5IGdhbWJsZXJzIGFyZSB0aGVzZSBjb21wYW5pZXMnIGJlc3QgY3VzdG9tZXJzLiBBYm91dCA2MCBwZXIgY2VudCBvZiBwb2tlciBtYWNoaW5lIHJldmVudWUgY29tZXMgZnJvbSB0aGUgaGVhdmllc3QgMTUgcGVyIGNlbnQgb2YgdXNlcnMsIGFuZCB0aGUgb25lIG9yIHR3byBwZXIgY2VudCBvZiBwcm9ibGVtIGdhbWJsZXJzIGNvbnRyaWJ1dGUgYSB0aGlyZCBvZiB0aGF0IHJldmVudWUuIEFueSBzZXJpb3VzIG1lYXN1cmVzIHRvIGRpc2NvdXJhZ2UgaGVhdnkgZ2FtYmxpbmcgcmlza3MgYSBzaGFyZWhvbGRlciBiYWNrbGFzaC4KVGhlICJob3cgdHJvdWJsZWQgeW91IHdlcmUiIGFuZCAieW91ciBpc3N1ZXMiIHdlcmUgd2hhdCBzdG9vZCBvdXQgdG8gbWUgbW9zdCBpbiB0aGlzIHdob2xlIHRoaW5nLiAKVGhleSBncmVhdCBwZW9wbGUsIGFuZCB0aGV5IHJhaXNlZCB1cyBhbG9uZ3NpZGUgdGhlaXIgb3duIGZvdXIga2lkcyAodXMgaW5jbHVkZWQsIGl0IHRvdGFsZWQgc2V2ZW4ga2lkcyBpbiB0aGUgaG91c2UpLiAKVW5zZXIgQW5nZWJvdCBlbnRobHQgTGlua3MgenUgZXh0ZXJuZW4gV2Vic2VpdGVuIERyaXR0ZXIsIGF1ZiBkZXJlbiBJbmhhbHRlIHdpciBrZWluZW4gRWluZmx1c3MgaGFiZW4uIERlc2hhbGIga25uZW4gd2lyIGZyIGRpZXNlIGZyZW1kZW4gSW5oYWx0ZSBhdWNoIGtlaW5lIEdld2hyIGJlcm5laG1lbi4gRnIgZGllIEluaGFsdGUgZGVyIHZlcmxpbmt0ZW4gU2VpdGVuIGlzdCBzdGV0cyBkZXIgamV3ZWlsaWdlIEFuYmlldGVyIG9kZXIgQmV0cmVpYmVyIGRlciBTZWl0ZW4gdmVyYW50d29ydGxpY2guIApUaGUgZGVhbGVyIGhhbmQgbXVzdCBiZSBRdWVlbiBoaWdoIG9yIGJldHRlciBmb3IgdGhlIGRlYWxlciBoYW5kIHRvIHBsYXkuIElmIHRoZSBkZWFsZXIgZG9lcyBub3QgcGxheSB0aGVuIHRoZXJlIGlzIG5vIGFjdGlvbiBvbiBQbGF5IHdhZ2VycyBhbmQgQW50ZSB3YWdlcnMgYXJlIHBhaWQgMSB0byAxLiBJZiB0aGUgZGVhbGVyIGRvZXMgcGxheSB0aGUgZGVhbGVyIGFuZCBwbGF5ZXIgaGFuZHMgYXJlIGNvbXBhcmVkLiAKTGF0ZSBvbiB0aGUgZXZlbmluZyBvZiBKdW5lIDEwLCAyMDEzLCBhIGNlbGxwaG9uZSByYW5nIGluIG9uZSBvZiB0aGUgZG96ZW5zIG9mIGRlY3JlcGl0LCBmaWx0aHkgYXBhcnRtZW50IGNvbXBsZXhlcyB0aGF0IGxpbmUgdGhlIHN0cmVldHMgaW4gdGhlIExhaSBDaGkgS29rIGFyZWEgb2YgS293bG9vbi4gU3VwdW4sIGEgMzIgeWVhciBvbGQgbmF0aXZlIG9mIENvbG9tYm8sIFNyaSBMYW5rYSwgd2hvIGhhcyBsYW5ndWlzaGVkIGluIEhvbmcgS29uZydzIHJlZnVnZWUgc3lzdGVtIHNpbmNlIDIwMDUsIHRvb2sgYSBjYWxsIGluIGEgY3JhbXBlZCAxNTAgc3F1YXJlIGZvb3QgYXBhcnRtZW50IGhlIHNoYXJlZCB3aXRoIGhpcyBwYXJ0bmVyIE5hZGVla2EgYW5kIG9uZSB5ZWFyIG9sZCBkYXVnaHRlciBTdXdhc2lzdGlraS4gCkluIHRoZSBVUywgdGhlcmUgaXMgYSBodWdlIG1hcmtldCBpbiBzZWNvbmQgaGFuZCBjbGFyaW5ldHMuIApCdXQgdGhlbiB0aGF0J3MgYW4gYXV0b21hdGljIHRpY2tldCB0byBoZWxsPyBGb3Igb25lICJtaXN0YWtlIi4gCkhvd2V2ZXIgaGUgZGlkIGhhdmUgYSBjaGFuY2UgdG8gbGV0IGhpbSBnbywgbm8gb25lIHdvdWxkIGhhdmUgcHJvYmFibHkgYmVlbiB0aGUgd2lzZXIsYnV0IGl0IHdhcyBzbWFydCBmb3IgaGltIHRvIGtpbGwgV2VybmVyLCBoZSByZWFsbHkgcGxheWluZyB3aXRoIGZpcmUgdG8gZXZlbiBjcm9zcyBHdXMgYSBiaXQuLiAKQmVpbmcgeW91bmcgYW5kIGltbWF0dXJlIHRoYXQgd2FzIGV4YWN0bHkgd2hhdCBJIGRpZC4gCldoZW4gd2UgbWFycmllZCBjb21iaW5pbmcgb3VyIG5hbWVzIHRvIGEgbmV3IG5hbWUgcmVzdWx0ZWQgaW4gc29tZSB0ZXJyaWJsZSBuYW1lcy4gU3BvdXNlIHdhcyBpbiB0aGUgbWlsaXRhcnkgYW5kIGhhZCBzZWVuIHNvIG1hbnkgc2NyZXcgdXBzIHdpdGggcGF5IGFuZCBvdGhlciB0aGluZ3Mgd2hlbiBzb21lb25lIGNoYW5nZWQgYSBuYW1lIHNvIHNwb3VzZSBkaWRuIHdhbnQgdG8gY2hhbmdlIHRoZWlyIG5hbWUgZXZlbiB0aG91Z2ggdGhleSB3ZXJlIGZpbmUgd2l0aCBoeXBoZW5hdGluZyBvciBhIG5ldyBuYW1lLiAKSXQgd2FzbiB1bnRpbCBHcmFuZG1hc3RlciBGbGFzaCB3aGVuIGl0IGV2ZW4gZW50ZXJlZCB0aGUgcGVyaXBoZXJ5IG9mIG15IHdvcmxkIGFuZCBpdCBuZXZlciByZWFsbHkgcmVzb25hdGVkIHdpdGggbWUuIApEZXNpZ25lZCBudW1lcm91cyBzYXRlbGxpdGVzIHRoYXQgd2VyZSBzZW50IGludG8gc3BhY2UKQm90aCBzaWRlcyBmb3VnaHQgdGhlaXIgZGFtbmVkZXN0IGJlc3QsIHdlIHRvZGF5IGtub3cgdGhleSB3ZXJlbiBoZXJlIGZvciBsYW5kLCBwbHVuZGVyLCBvciBtdXJkZXIsIGFuZCBBdXNzaWVzL0tpd2lzIGtub3cgd2UgZGlkbiBmaWdodCBvdXIgZGFtbmVkZXN0IHRvIGtpbGwsIG1haW0sIGNyaXBwbGUgdGhlbSB0byBraWxsIHRoZW0sIHdlIHdlcmUgc2ltcGx5IHByb3RlY3Rpbmcgb3VyIGxhbmQuIEFuZCBJIGRvbiBrbm93IHRoYXQgbXVjaCBhYm91dCB2aWV3cG9pbnQgb2YgYSByZWd1bGFyIEFuemFjIHZvbHVudGVlciBvZiB0aGUgZGF5IHRvIHNheSBvdGhlcndpc2UuIE90aGVyIHRoYW4gYSBzaW5nbGUgbGluZSB0aGF0IGNsYWltcy4gCkdhbWUgZGlmZmljdWx0eSBjb21wYXJpc29uIGJldHdlZW4gb25saW5lIGFuZCBsaXZlIHBsYXkKRGV0cmFjdG9ycyBzYXkgdGhhdCB0cmFpbmluZyBhdCBsb3dlciBpbnRlbnNpdHkgd2hpbGUgYWNjbGltYXRpbmcgdG8gYWx0aXR1ZGUgY2FuY2VscyBvdXQgdGhlIGJlbmVmaXRzIG9mIGluY3JlYXNlZCByZWQgYmxvb2QgY2VsbCBwcm9kdWN0aW9uLiBGdXJ0aGVybW9yZSwgdGhlIGVmZmVjdHMgb2YgYWx0aXR1ZGUgYXJlIHVucHJlZGljdGFibGUuIFdoaWxlIG9uZSBhdGhsZXRlIG1heSBmZWVsIGZpbmUsIGFub3RoZXIgd2lsbCBmZWVsIHNsdWdnaXNoIGFuZCB1bmFibGUgdG8gcGVyZm9ybSBhcyB0aGUgYm9keSBhY2NsaW1hdGVzIHRvIHRoZSB0aGluIGFpciBhdCBoaWdoIGFsdGl0dWRlLi4gCkl0cyByZWFsbHkgcmVhbGx5IGhhcmQgdG8gZGVmZW5kIGF0IHRoZSAyNSUgbWFyayBoZXJlLCBiZWNhdXNlIHRoZSB2aWxsYWlucyByYW5nZXMgYXJlIGNhcHBlZCBoYXJkIGFuZCBoZXJvIGlzIGJsb2NraW5nIDIgY29tYm9zIG9mIHNldHMuIApXZWxsLiAKVGhlIERheWJyZWFrIFJvdGFyeSBSaWJmZXN0IHJldHVybnMgdG8gUml2ZXJzaWRlIFBhcmsgdG9kYXkgaW4gaXRzIGZpZnRoIHllYXIsIHNlcnZpbmcgdXAgaG90LCBncmlsbGVkIHJpYnMgZnJvbSBhbGwgb3ZlciB0aGUgY291bnRyeS4gVGhyb3VnaCBTdW5kYXkgYW5kIGluY2x1ZGVzIGEgd2hvbGUgd2FjayBvZiBlbnRlcnRhaW5tZW50IGZyb20gdHJpYnV0ZSBiYW5kcyB0byBidWJibGUgc29jY2VyIGFuZCB0aGUgUml2ZXJ0b3duIFBsYXllcnMuIApUaGF0IGNvdWxkIGZhaXJseSBiZSBkZXNjcmliZWQgYXMgZGUgZmFjdG8gY3JpbWluYWxpemF0aW9uIG9mIGhvbW9zZXh1YWxpdHkuIApUaGVyZSBhcmUgc3R1ZGVudHMgd2l0aCBwb29yIHdvcmsgZXRoaWMgYW5kIGdyYWRlcyBtYWtpbmcgMTQlIG1vcmUgdGhhbiBvdXIgcHJvZ3JhbSB0b3AgcGVyZm9ybWVycy4gV2hhdCB3b3JzZSwgdGhlc2UgZGlzY3JlcGFuY2llcyBhcHBlYXIgdG8gYmUgcmVsYXRlZCB0byBkZW1vZ3JhcGhpYyB2YXJpYWJsZXMgKGxpa2Ugc2V4LCByYWNlLCBhZ2UpLCBidXQgc2luY2UgZ3JhZCBzdHVkZW50IGFyZW4gImVtcGxveWVlcyIgZXRoaWNhbCBzdGFuZGFyZHMgbmVlZCBub3QgYXBwbHkuLiAKMTE6IFdpbmRzIGFuZCBjb2xkIHB1dCBhIGNoaWxsIG9uIGFyZWEgZmlzaGluZyBGaXNoaW5nIFJlcG9ydCBmb3IgRnJpZGF5LCBKYW4uIApIZWFkIHRyYXVtYSBmcm9tIGNvbnRhY3Qgc3BvcnRzIGFuZCBDVEUgYXJlIHNvcnRhIHRoZSB3YXkgSSB0aGluayBwZW9wbGUgbG9vayBhdCBsb25nIHRlcm0gbWFyaWp1YW5hIHVzZSBidXQgY29tcGFyZSB0aGUgdHdvLiBQZW9wbGUgd2hvIHNtb2tlIGhlcmIgcmVndWxhcmx5IGFyZSBub3QgbWVudGFsbHkgZGVmaWNpZW50LiAKWW91IGhhdmUgYSBjb3VwbGUgb2YgY2hvaWNlcy4gQXMgbG9uZyBhcyB5b3UgZG9uIGJlaGF2ZSBjcmVlcGlseSBhYm91dCBpdCwgeW91IGNhbiBzaW1wbHkgaWdub3JlIGl0ICAgbW9zdCB0aW1lcyBhbnkgZGVjZW50IHRoZXJhcGlzdCB3aWxsIGRvIHRoZSBzYW1lLCBpdCBub3QgdGhlaXIgam9iIHRvIG1ha2UgeW91IGZlZWwgYXdrd2FyZCBhYm91dCBpdC4gT24gdGhlIG90aGVyIGhhbmQgaWYgaXQgbWFrZXMgeW91IGZlZWwgdW5jb21mb3J0YWJsZSB0byBub3QgYWNrbm93bGVkZ2UgaXQsIHlvdSBjYW4gKGlmIHN0aWxsIGZhY2UgZG93bikganVzdCBwb2xpdGVseSBhc2sgdG8gcmVtYWluIHRoYXQgd2F5IGluc3RlYWQgb2YgZmxpcHBpbmcgb3Zlci4gCiJJIGNhbiB0ZWxsIHlvdSByaWdodCBub3cgYW55Ym9keSBpbiB0aGVpciByaWdodCBtaW5kIGtub3dzIGhlIGRpZCBzb21ldGhpbmcgdG8gdGhhdCBib3ksIHRoZSBiYWJ5LiBBbmQgaGlzIHBvb3IgbWFtYSBhbmQgZGFkZHkgaXMgaW4gZGVuaWFsLCIgSmltbWllIEJhcnRvbiBzYWlkLiAiRWJyb24ncyBmYW1pbHkgaXMgaW4gZGVuaWFsLCB0aGV5IHRoaW5rIGhlIGRpZG4ndCBkbyBpdC4gQW5kIGZvciB0aGVtIHRvIHRoaW5rIGhlIGRpZG4ndCBkbyBpdCwgd2hvIGVsc2UgY291bGQgaGF2ZSBkb25lIGl0PyIKTWF5IDE3OkNhc2UgYWdhaW5zdCB0ZWVuIGluIExlZnRoYW5kIENhbnlvbiBhdHRhY2sgd2lsbCByZW1haW4gaW4gYWR1bHQgY291cnRBcHIgNTpKdWRnZSBoZWFycyB0ZXN0aW1vbnkgaW4gQm91bGRlciBDb3VudHkgTGVmdGhhbmQgQ2FueW9uIGF0dGVtcHRlZCBtdXJkZXIgY2FzZU9jdCAyNzpNb3N0IGRvY3VtZW50cyBpbiBCb3VsZGVyIENvdW50eSBhdHRlbXB0ZWQgbXVyZGVyIGNhc2UgdG8gYmUgbWFkZSBwdWJsaWMsIGp1ZGdlIHJ1bGVzT2N0IDE0OkRhaWx5IENhbWVyYSBvcmRlcmVkIHRvIHJlbW92ZSBqdWRnZSdzIHJ1bGluZyBmcm9tIHdlYiwgYnV0IHdvbid0IGJlIGhlbGQgaW4gY29udGVtcHRPY3QgMjpCb3VsZGVyIENvdW50eSBEQTogRmlsaW5nIGFkdWx0IGNoYXJnZXMgZ2l2ZXMgcHJvc2VjdXRvcnMgb3B0aW9uc1NlcCAyODpCb3VsZGVyIGp1ZGdlIGxpZnRzIG9yZGVyIGJsb2NraW5nIERhaWx5IENhbWVyYSBmcm9tIHB1Ymxpc2hpbmcgd2FycmFudCwgYnV0IHB1dHMgcnVsaW5nIG9uIGhvbGRTZXAgMjc6RGFpbHkgQ2FtZXJhIGNoYWxsZW5nZXMgb3JkZXIgYmxvY2tpbmcgcHVibGljYXRpb24gb2Ygd2FycmFudCBhcyB1bmNvbnN0aXR1dGlvbmFsU2VwIDIyOlRlZW4gYWNjdXNlZCBvZiBhdHRlbXB0ZWQgbXVyZGVyIGluIGJydXRhbCBMZWZ0aGFuZCBDYW55b24gYXR0YWNrIGFycmVzdGVkIFNlcCAyMDpUZWVuIHNvdWdodCBpbiBhdHRlbXB0ZWQgbXVyZGVyIG9mIGVsZGVybHkgd29tYW4gaW4gTGVmdGhhbmQgQ2FueW9uVGhlIDE2IHllYXIgb2xkIGJveSBhY2N1c2VkIG9mIHNldmVyZWx5IGJlYXRpbmcgYW4gZWxkZXJseSBMZWZ0aGFuZCBDYW55b24gd29tYW4gbGFzdCBtb250aCBhZG1pdHRlZCB0byBCb3VsZGVyIENvdW50eSBzaGVyaWZmJ3MgaW52ZXN0aWdhdG9ycyB0aGF0IGhlIGFzc2F1bHRlZCBoZXIgYW5kICJ3YW50ZWQgdG8ga25vY2sgaGVyIG91dCwiIGFjY29yZGluZyB0byBjb3VydCByZWNvcmRzIHRoYXQgYSBqdWRnZSBpbml0aWFsbHkgaGFkIHByb2hpYml0ZWQgdGhlIERhaWx5IENhbWVyYSBmcm9tIHB1Ymxpc2hpbmcuSmVmZnJleSBDb2xsaW5zIHRvbGQgZGV0ZWN0aXZlcyB0aGUgYXR0YWNrIG9uIHRoZSA3MSB5ZWFyIG9sZCB3b21hbiB3YXMgYSBmcmllbmQncyBpZGVhLCBhbmQgdGhhdCBoZSB3YXMgZHJ1bmsgYW5kICJzdG9uZWQgYXMgaGVsbCIgYXQgdGhlIHRpbWUsIGFjY29yZGluZyB0byBhbiBhcnJlc3Qgd2FycmFudCBhZmZpZGF2aXQgbWFkZSBwdWJsaWMgTW9uZGF5LkNvbGxpbnMsIHdobyBsaXZlcyBpbiBBcnZhZGEsIHJlcG9ydGVkbHkgbWFkZSB0aG9zZSBzdGF0ZW1lbnRzIHRvIGludmVzdGlnYXRvcnMgc2hvcnRseSBhZnRlciBoZSB3YXMgYXJyZXN0ZWQgaW4gQnJvb21maWVsZCBvbiBTZXB0LiAyMiBvbiBzdXNwaWNpb24gb2YgYXR0ZW1wdGVkIG11cmRlciBhbmQgYXNzYXVsdCBvbiBhbiBhdCByaXNrIGFkdWx0Lk9uIE1vbmRheSwgQmVya2Vua290dGVyIGlzc3VlZCBhbiBvcmRlciBhbGxvd2luZyB0aGUgQ2FtZXJhIHRvIHB1Ymxpc2ggaW5mb3JtYXRpb24gZnJvbSB0aGUgd2FycmFudCwgc2F5aW5nIHRoZSBkZWZlbnNlIGhhZCBvcHRlZCBub3QgdG8gYXBwZWFsLkluIHRoZSBhZmZpZGF2aXQsIHNoZXJpZmYncyBpbnZlc3RpZ2F0b3JzIHNheSBLYXRpZSBLdWxwYSBwaWNrZWQgdXAgQ29sbGlucywgRGFrb3RhIE1vbnRnb21lcnksIDE5LCBhbmQgYW4gdW5uYW1lZCAxNyB5ZWFyIG9sZCBnaXJsIHdoaWxlIHRoZXkgd2VyZSBoaXRjaGhpa2luZyBpbiB0aGUgV2FyZCBhcmVhIG9uIFNlcHQuIApUaGUgTmVlZGxlcy9NYXplIGlzIHdheSBiZXR0ZXIuIElmIHlvdSBjYW4gZ2V0IENhbnlvbmxhbmRzIHBlcm1pdHMsIEkgZ28gdG8gR3JhbmQgZ3VsY2ggb3IgYnVja3NraW4gZ3VsY2guIE1heWJlIENveW90ZSBHdWxjaCBvciBOZW9uIENhbnlvbiBpbiBHcmFuZCBTdGFpcmNhc2UgRXNjYWxhbnRlLiAKSWYgaXQgc3BlbmRzIG1vcmUgc3BhY2UgdHJ5aW5nIHRvIGF0dHJhY3QgZW1wbG95ZWVzIHRoYW4gY2xpZW50cywgaXQgaXMgYSBzYWxlcyBqb2IgdGhhdCBpcyBsaWtlbHkgY29tbWlzc2lvbiBvbmx5Li4gClRoaXMgaXMgd2hlcmUgeW91IGVudGVyIHRoZSBzZXJpYWwgbnVtYmVyLiAKVG8gc3RhcnQgZmFtaWxpYXJpemluZyB5b3Vyc2VsZiB3aXRoIHRoZSBkaWZmZXJlbnQgaGFuZHMsIHByaW50IG91dCBhICJjaGVhdCBzaGVldCIgYW5kIHN0dWR5IGl0LiBLbm93aW5nIHRoZSBkaWZmZXJlbnQgaGFuZHMgd2lsbCBoZWxwIHlvdSBkZXRlcm1pbmUgd2hldGhlciB5b3VyIGhhbmQgaXMgZ29vZCBlbm91Z2ggdG8gYmV0IG9uLCBvciB3aGV0aGVyIGl0J3MgdGltZSB0byBibHVmZiBvciBmb2xkOi4gCkd1bnNsaW5nZXJzLCBwb2tlciBwbGF5ZXJzLCBhbmQgY2hpY2tlbnMgMTogRGVjaXNpb24gbWFraW5nIHVuZGVyIHBoeXNpY2FsIHBlcmZvcm1hbmNlIHByZXNzdXJlIGluIGVsaXRlIGF0aGxldGVzLiAKSXQgaXMgdGhhdCBzZW5zb3Igb24gdGhlIGJsYWNrIHJ1YmJlciBjdXJ2eSB0dWJlIGNvbm5lY3RlZCBiZXR3ZWVuIHRoZSBhaXIgZmlsdGVyIGJveCBhbmQgdGhhdCBibGFjayBmbGF0IGhhcmQgcGxhc3RpYyB0aGluZyB0aGF0IG1vdW50cyBvbiB0aGUgdGhyb3R0bGUgYm9keS4gCkpvaW5pbmcgaXMgZnJlZSBpbiBhbG1vc3QgZXZlcnkgYmV0dGluZyBzaXRlLiBZb3UgY2FuIGJldCBpbiBhbG1vc3QgYW55IHNwb3J0IGFuZCBpbiBhIHZhcmlldHkgb2Ygd2F5cy4gCkNocmlzdG1hcyBzaG9wcGluZyB0aGlzIHllYXIgYXQgZGVwYXJ0bWVudCBzdG9yZXMgKGFsc28gc29tZSBkcmVzc2VzIGZvciBteXNlbGYgZm9yIHBhcnRpZXMhKSBJIGhhdmUgYmVlbiBpbW1lZGlhdGVseSBhdHRlbmRlZCB0byBieSBzdGFmZiwgYW5kIG1ha2V1cCBjb3VudGVycyBnaXZlIG1lIGJpZ2dlciBkaXNjb3VudHMuIEl0IGNyYXp5LCBhbmQgSSBkb24gYmVsaWV2ZSBpdCBjb2luY2lkZW5jZSBzaW5jZSBJIHNob3BwZWQgbmVhcmx5IGV2ZXJ5IHllYXIgc2luY2UgSSBoYWQgbXkgb3duIGpvYi4gSSBiZWVuIHRvIE1BQyBzdG9yZXMgd2hlbiBJIHdhcyBmYXQgd2hlcmUgdGhlIHN0YWZmIHV0dGVybHkgaWdub3JlZCBtZS4gV291bGRuIGV2ZW4gbWFrZSBleWUgY29udGFjdC4gTm93IGFzIHNvb24gdGhleSBzZWUgbWUgYnJvd3NpbmcsIEkgYXBwcm9hY2hlZCB3aXRoLCAiaGV5IGhvbmV5ISEgd2hhdCBjYW4gSSBoZWxwIHlvdSB3aXRoPyBMb3ZpbmcgdGhhdCAiClByb2Zlc3Npb25hbCBwbGF5ZXJzIGFyZSBpbnRlcmVzdGVkIGluIGhvdyBtdWNoIG1vbmV5IHRoZXkgd2luLCBub3QgdGhlIHByb3BvcnRpb24gb2YgaGFuZHMgdGhleSB3aW4uIE1heGltaXppbmcgbW9uZXkgY2FuIGJlIGRvbmUgYnkgbWFueSBzdHJhdGVnaWMgcm91dGVzIGluY2x1ZGluZzogcGxheWluZyBsb3RzIG9mIHNtYWxsIHBvdHM7IHBsYXlpbmcgb25seSBhIGZldyBiaWcgcG90czsgbG9zaW5nIG9ubHkgc21hbGwgcG90cyBidXQgd2lubmluZyBiaWcgcG90czsgd2lubmluZyBhIGZldyBtb3JlIGJpZyBwb3RzIHRoYW4geW91IGxvc2U7IGFuZCBzbyBvbi4gRGlmZmVyZW50IHN0cmF0ZWdpZXMgd2lsbCBwcm9kdWNlIGRpZmZlcmVudCBwZXJjZW50YWdlcyBvZiBzdGFydGluZyBoYW5kcyBhbmQgZGlmZmVyZW50IHBlcmNlbnRhZ2VzIG9mIHdpbm5pbmcgaGFuZHMuClRoYXQgdGluZ2x5IGZlZWxpbmcgSSBwaW5uZWQgdG8gTGlmZSBFbmVyZ3kuIApEbyB5b3Ugd2FudCB0byBkaXZvcmNlIHlvdXIgd2lmZS9raWRzIG9yIGRvIHlvdSB3YW50IHRvIGRpdm9yY2UgeW91ciBwYXJlbnRzL3NpYmxpbmdzLiBXaGljaCBkaXZvcmNlIGlzIGdvaW5nIHRvIGxlYWQgeW91IHRvIHRoZSBmdXR1cmUgeW91IHdhbnQgbW9yZT8iUGVyaWR3ZW4gIDIgcG9pbnRzICBzdWJtaXR0ZWQgMTggZGF5cyBhZ29JIGhhdmUgMyBzbWFsbCAicG9yY2VsYWluIiBkb2xscyB0aGF0IG15IG1vdGhlciBicm91Z2h0IG1lIHdoZW4gc2hlIHdlbnQgdG8gTG9uZG9uIHllYXJzIGFuZCB5ZWFycyBhZ28uIApUaGUgYWN0aW5nIGlzIGEgbGl0dGxlIG92ZXIgdGhlIHRvcCBpbiB0aGF0IG9uZSwgYnV0IEkgc3RpbGwgZm91bmQgaXQgaW50ZXJlc3RpbmcuLiAKSSBkb24gbWVhbiB0byBiZSBhIGRpY2suIEkgcGVyc29uYWxseSBjYXJyeSBiZWFyIHNwcmF5IG9uIGEgbG90IG9mIHRyaXBzLCBkZXNwaXRlIGtub3dpbmcgdGhhdCBpdCB3ZWlnaHMgbmVhcmx5IGEgUE9VTkQgYW5kIGlzIGNvbXBsZXRlbHkgdW5uZWNlc3Nhcnkgd2hlcmUgSSBoaWtlLiAKTGlzdCBvZiBsZWdhbCBzdHJlYW1zIGFuZCBkb3dubG9hZHMuClBva2VyU3RhcnMgaGFzIGJlZW4gdGVzdGluZyBQb3dlciBVcCwgd2hpY2ggZGlzcnVwdHMgdGhlIHRyYWRpdGlvbmFsIGdhbWUgb2YgcG9rZXIgYnkgZ2l2aW5nIHBsYXllcnMgYSB3aWRlIHJhbmdlIG9mIGFiaWxpdGllcyB0byBzZWUgb3IgY2hvb3NlIHNwZWNpZmljIGNhcmRzLiAKSG93ZXZlciwgdGhlIHNpdHVhdGlvbiBoYXMgZHJhc3RpY2FsbHkgY2hhbmdlZCwgdGhhbmtzIHRvIHRoZSBpbnRlcm5ldC4gClRoZW4gdGhlICJjb250cm9sIGlzc3VlcyIgc3RhcnRlZCBzaG93aW5nLiAKQW5kIGlmIHNvbWUgb2YgdXMgZG8sIG90aGVycyB3aWxsIHRha2UgdG8gdGhlIHN0cmVldHMgdG8gZGVmZW5kIHRoZW0uLiAKSSB3b3VsZCB0YWxrIHdpdGggdGhlIGRvY3RvcnMgYWJvdXQgdGhlIFJpc3BlcmRhbCBhbmQgbGFtaWN0YWwgYW5kIGRvbnQgYWxsb3cgaGVyIHRvIGV2ZXIgYmUgcHJlc2NyaWJlZCBwcm96YWMhIEhpcyBtaXN0YWtlIHdhcyB0byBjaGlkIG1lIGluIGZ1bGwgdm9pY2UgYWJvdXQgYSBjYWxsIEkgbWFkZSA3IGZlZXQgYXdheSBmcm9tIGEgdG9wIGNvYWNoLiBNeSBzaXN0ZXIgbWVldHMgc29tZSBndXkgb24gYW4gYWR1bHQgY291cGxlcyBwb3JuIHNpdGUgYW5kIG1vdmVzIG91dCB0byB0aGUgRWFzdCBjb2FzdCB0byBiZSB3aXRoIGhpbS4gSSBzdGF5IGZvciBmZWFyIG9mIGxvc2luZyBteSBzb24uIEkgcmVhbGx5IHRydWx5IHdpc2ggaGUgY291bGQgZ2V0IGJldHRlciBiZWNhdXNlIHdoZW4gd2UgYXJlIGdvb2QsIHdlIGFyZSBncmVhdC4gSWYgeW91IHRoaW5rIHlvdXIgY2hpbGQgY2FuIHRlbGwgdGhhdCB0aGUgbmF1Z2h0aW5lc3MgaW4gdGhlIGJvb2sgaXMgZm9yIGVudGVydGFpbm1lbnQgYW5kIG5vdCB0byBiZSByZWVuYWN0ZWQgaW4gcmVhbCBsaWZlLCB0aGVuIHRoaXMgYm9vayB3b3VsZCBiZSBhIGNoYW5jZSB0byBoYXZlIHNvbWUgbGF1Z2hzLiBXZWxsIHNoZSBpcyB3b3JyaWVkIGFib3V0IG15IGZpbmFuY2VzLiBTaGUgd2FzIHRoZXJlIGZyb20gdGhlIHZlcnkgZmlyc3Qgc2Vjb25kIEkgZW50ZXJlZCB0aGlzIHdvcmxkLgpQcnVkZW5jZSwgaW5kZWVkLCB3aWxsIGRpY3RhdGUgdGhhdCBHb3Zlcm5tZW50cyBsb25nIGVzdGFibGlzaGVkIHNob3VsZCBub3QgYmUgY2hhbmdlZCBmb3IgbGlnaHQgYW5kIHRyYW5zaWVudCBjYXVzZXM7IGFuZCBhY2NvcmRpbmdseSBhbGwgZXhwZXJpZW5jZSBoYXRoIHNob3duLCB0aGF0IG1hbmtpbmQgYXJlIG1vcmUgZGlzcG9zZWQgdG8gc3VmZmVyLCB3aGlsZSBldmlscyBhcmUgc3VmZmVyYWJsZSwgdGhhbiB0byByaWdodCB0aGVtc2VsdmVzIGJ5IGFib2xpc2hpbmcgdGhlIGZvcm1zIHRvIHdoaWNoIHRoZXkgYXJlIGFjY3VzdG9tZWQuIApUaGlzIG1hZGUgc2Vuc2UgYXMgdGhlIHBhc3QgZmV3IHdlZWtzIEkgc2F3IHNvbWUgb2YgaGlzIHdpbmRvd3MgYnJva2VuIGZyb20gYSByb2NrIGFuZCBrZXkgc2NyYXRjaGVzIGFsbCBhbG9uZyB0aGUgY2FyLi4gCkMnZXN0IGluZGlzcGVuc2FibGUgcG91ciBqb3VlciBhdSBwb2tlci4gSW1wcmltZXogdW5lIGZpY2hlIGF2ZWMgY2VzIGNvbWJpbmFpc29ucyBldCB0dWRpZXogbGEuIFNpIHZvdXMgY29ubmFpc3NleiBiaWVuIHRvdXRlcyBsZXMgY29tYmluYWlzb25zIHBvc3NpYmxlcywgdm91cyBwb3VycmV6IGR0ZXJtaW5lciBzaSB2b3RyZSBtYWluIGVzdCBhc3NleiBmb3J0ZSBwb3VyIHF1ZSB2b3VzIG1pc2lleiBvdSBzaSB2b3VzIGRldmV6IHZvdXMgY291Y2hlciBvdSBlc3NheWVyIGRlIGJsdWZmZXIuLiAKSXQgYSBkcnksIGJpdHRlciBraW5kIG9mIGNvbGQgdGhhdCBnb2VzIHN0cmFpZ2h0IHRvIHRoZSBib25lcy4gCkFsc28gYXNrZWQgZm9yIHNvbWUgZGV0YWlscyBvbiByZXNwb25zZSB0aW1lcy4gCkp1bHkgMjksIEtobG9lIEthcmRhc2hpYW4gYW5kIEtlbmRhbGwgSmVubmVyJ3MgYXBwcmFpc2FsIG9mIEtpbSBLYXJkYXNoaWFuJ3MgNSBmb290IDMgZmlndXJlIHdhcyBzbyBlZmZ1c2l2ZSB0aGF0IHRoZSBzb2NpYWwgbWVkaWEgbG92aW5nIHN0YXIgc2ltcGx5IGhhZCB0byBkb2N1bWVudCBpdCBmb3IgaGVyIEluc3RhZ3JhbSBzdG9yaWVzLCBlYXRpbmcgdXAgdGhlaXIgcmVtYXJrcyB3aGlsZSBoYWxmIGhlYXJ0ZWRseSBwcm90ZXN0aW5nIHRoYXQgMTE5IHBvdW5kIHdhcyAibm90IHRoYXQgc2tpbm55LiIgTm8sIG9mIGNvdXJzZSBoZXIgYXJtcyB3ZXJlIG5vdCB0aGUgc2l6ZSBvZiBLaGxvZSdzIHBpbmt5LCBzaGUgZGVtdXJyZWQsIGFuZCBpdCdzIHNpbXBseSByaWRpY3Vsb3VzIHRvIHN1Z2dlc3Qgc2hlIHdhcyB0aGUgc2FtZSBzaXplIGFzIEtlbmRhbGwncyBjYW4gb25seSBmaXQgYSBwaG9uZSBhbmQgbGlwc3RpY2sgcHVyc2UuLiAKSXQncyBmb3JtbGVzcywgbGlrZSBoYW1idXJnZXIuIApTbywgbW9zdCBuaWdodHMgYmVmb3JlIEkgZ28gdG8gYmVkLCBJIHdpbGwgbGF5IC91L01hc3NpdmVHcm93dGg5IG91dCBvbiBteSBHZW9yZ2UgRm9yZW1hbiBHcmlsbC4gVGhlbiBJIGdvIHRvIHNsZWVwLiBXaGVuIEkgd2FrZSB1cCwgSSBwbHVnIGluIHRoZSBncmlsbCwgSSBnbyBiYWNrIHRvIHNsZWVwIGFnYWluLiAKRGF2ZSBSdWJpbiBpcyBhIGxpYmVyYWwuIFNhbSBIYXJyaXMgaXMgYSBsaWJlcmFsLiBCaWxsIE1haGVyIGlzIGEgbGliZXJhbC4gU28gb2J2aW91c2x5IHRoZSB0ZXJtIGRvZXNuIHJlZmVyIHRvIHRoZSAidGhlIExlZnQgYXMgYSB3aG9sZSIuCldoaWxlIHRoZXkgd2VyZSBncmF0ZWZ1bCBhYm91dCB0aGUgcHJpY2luZywgaXQgd2FzIHRoZSBmYWN0IHRoYXQgdGhlIE1ldGFsIDEyIFJvdyBDYXNpbm8gVGFibGUgQ2hpcCBUcmF5IHdpdGggQ292ZXIgYW5kIExvY2sgY2FtZSB3aXRoIGEgbG9jayBhbmQga2V5LiBJIGFjdHVhbGx5IGJvdWdodCBpdCBiZWNhdXNlIG9mIHRoZSBzaXplLCBidXQgaXQgZGlkIG1ha2Ugc2Vuc2UgdGhhdCB0aGV5IHdhbnRlZCB0byBrZWVwIGV2ZXJ5dGhpbmcgc2FmZSBqdXN0IGluIGNhc2Ugc29tZXRoaW5nIHdlcmUgdG8gaGFwcGVuLiAKQWxzbywgdGhlIGFib3ZlIGV4YW1wbGUgaXMgb25seSBvbmUgb2YgbWFueSB0aW1lcyB0aG9zZSBzdGFmZnMgY29tZSBpbiBoYW5keS4gQmVmb3JlIGxvbmcsIE1vc2VzIGFuZCBBYXJvbiB3ZXJlIHVzaW5nIHRoZWlyIG1hZ2ljIHN0YWZmcyB0byB0dXJuIHJpdmVycyBpbnRvIGJsb29kLCBzcHJlYWQgZGlzZWFzZSB0aHJvdWdoIHRoZSBsYW5kIGFuZCBldmVuIHN1bW1vbiBhcm1pZXMgb2YgbG9jdXN0cy4gSXQgd2FzIGJhc2ljYWxseSBsaWtlIEdvZCBkZWNsYXJlZCB0aGVpciBzdGFmZnMgdG8gYmUgd2lsZCBjYXJkcyBpbiBhIGhhbmQgb2YgdGVycmlmeWluZyBzdXBlcnBvd2VyIHBva2VyLgoiSWYgd2Ugc3BlbmQgbW9udGhzLCB5ZWFycywgZXZlbiBkZWNhZGVzIHNpdHRpbmcgYXQgYSBkZXNrIGFuZCB0aGluayB0aGF0IGEgZmV3IGhvdXJzIGluIHRoZSBneW0gcGVyIHdlZWsgYXJlIGdvaW5nIHRvIHVuZG8gYWxsIHRoYXQsIHdlJ3JlIHByb2JhYmx5IGZvb2xpbmcgb3Vyc2VsdmVzLCIgc2F5cyBDYXJleS4gU3RyZXRjaGluZyBhIG11c2NsZSB3aXRoIGJvdW5kIHVwIG9yIHBvb3JseSBhZGFwdGVkIGZhc2NpYSBpcyBhIGJpdCBsaWtlIHRyeWluZyB0byBzdHJldGNoIGEga25vdHRlZCBidW5nZWUgY29yZDogWW91J2xsIGdldCBtdWNoIGJldHRlciByZXN1bHRzIGlmIHlvdSBnZXQgdGhlIGtub3RzIG91dCBmaXJzdC4uIApUaGlzIHJlYWxpemVkLCBmbGlnaHQgd2FzIG5vdCBsb25nIHRvIGZvbGxvdyBmaXZlIHllYXJzIGZyb20gc2lja2JlZCBhbmQgbmVhciBkZWF0aCB0byAxMDAwIGdsaWRlcywgc2V2ZW4gdG8gcG93ZXJlZCBmbGlnaHQsIGFsbCBwYWlkIGZvciBieSB0aGUgYnJvdGhlcnMsIGFuZCBtb3N0bHkgZnVuZGVkIGJ5IHRoZWlyIGJpa2Ugc2hvcC4gQW5kIGJ5IHRoZSB3YXksIGFjY29yZGluZyB0byBEYXZpZCBNY0N1bGxvdWdoIGluIGhpcyBiaW9ncmFwaHkgb2YgdGhlIFdyaWdodHMgdGhlIHdob2xlIGZseWluZyBleGVyY2lzZSBpbmNsdWRpbmcgbWF0ZXJpYWxzLCBib29rcywgbWFjaGluZXJ5LCB0cmF2ZWwsIGZvb2QsIGFuZCBzbyBvbiBmcm9tIDE5MDAgdG8gMTkwMywgY29zdCB0aGUgYnJvdGhlcnMgdW5kZXIgJDEwMDAuICkuIApTaGUgd2FzIGFsc28gc2F5aW5nIHRoYXQgZmFucyBiYXNpY2FsbHkgZG9udCBrbm93IGFueXRoaW5nIGFuZCBiZWNhdXNlIHNoZXMgYmVlbiBvbiB0aGUgc2hvdyBvbmx5IHNoZSBrbm93cyB3aGF0IHRoZSB0cnV0aCBpcywgd2hlbiBhY3R1YWxseSB0aGlzIHRpbWUgYXJvdW5kIHNoZSB3YXNuIG9uIHRoZSBzaG93LCBzaGUgaXMgd2F0Y2hpbmcgaXQgbGlrZSB0aGUgcmVzdCBvZiB1cyBhcmUsIGFuZCBzaGUgaGFzIHRoZSBzYW1lIGluc2lkZXIgaW5mbyB0aGF0IHdlIGRvID8/IHdlIGFsbCBrbm93IGFib3V0IGVkaXRzIGFuZCBwcm9kdWNlciBtYW5pcHVsYXRpb24uIE5vdGhpbmcgYWJvdXQgdGhpcyBzaG93IGlzIGEgc2VjcmV0LCBldmVuIHdpdGggdGhlaXIgbWlsbGlvbiBkb2xsYXIgbmRhcy4gQW55d2F5LCBJIHNvIG92ZXIgYXNobGV5IHNwaXZleSwgaG9uZXN0bHkuIApJZiBzb21lb25lIGhhZCBhIGJpcnRoIGNvbXBsaWNhdGlvbiB0aGF0IHJlc3VsdGVkIGluIG1pc2NhcnJpYWdlLCBidXQgaGFkIHN0aWxsIG5hbWVkIHRoZWlyIGNoaWxkLCBpdCdzIHZlcnkgdW5saWtlbHkgdGhleSB3b3VsZCBuYW1lIGFueSBzdWJzZXF1ZW50IGNoaWxkcmVuIHRoZSBzYW1lIG5hbWUgYmVjYXVzZSBlYWNoIGluZGl2aWR1YWwgaGFzIHRoZWlyIG93biBpZGVudGl0eSBhbmQgcGxhY2UgaW4gYm90aCB0aGUgZmFtaWx5IGFuZCB0aGUgd29ybGQuIEknZCBmaXJtbHkgdGVsbCBoZXIgeW91ciB0aG91Z2h0cyBvbiB0aGlzIHNpdHVhdGlvbiBhbmQgaWYgc2hlIGlzIHVuZGVyc3RhbmRpbmcgdGhlbiBpdCBtaWdodCBiZSBiZXR0ZXIgdG8gc3VnZ2VzdCBwaWNraW5nIGEgbmFtZSB0aGF0IGhhcyBtZWFuaW5nIGJldHdlZW4geW91IGd1eXMuIApBIFZlcnkgQm91bGRlciBNYXJkaSBHcmFzIGFuZCBvdGhlciBCb3VsZGVyCkkgd29uZGVyIGlmIHlvdSBldmVuIGxpdmUgaW4gRWd5cHQuLiAKIkF1Y2ggbmljaHQsIHdlbm4gZGllIEdsZWl0Y3JlbWUgaW4gU2NoZWlkZSBvZGVyIEFmdGVyIGdlc3RyaWNoZW4gd2lyZD8iLiBVaWlpaWlpLCBIZWxlbiBzcHJ0ZSBzY2hvbiBmYXN0LCB3aWUgZGVyIEZpbmdlciBkZXMgRG9jIGlocmVuIEFmdGVyIGJlcmhydGUsIHdpZWRlciBtdXNzdGUgc2llIHNpY2gga29uemVudHJpZXJlbiwgYmlzIHNpZSBzYWdlbiBrb25udGU6ICJOZWluIi4KSW4gTm9ydGggVGV4YXMsIHdoZXJlIEkgbGl2ZSwgdGhlIENodXJjaCBhY3Jvc3Mgc2V2ZXJhbCBkaW9zZXNlcyByZWxlYXNlZCB0aGUgbmFtZXMgb2YgMzAwIGNsZXJneSB3aG8gaGF2ZSBiZWVuIGNyZWRpYmx5IGFjY3VzZWQgb2YgYWJ1c2Ugc2luY2UgMTk1MC4KIldlIHR1cm5lZCBpbiBvdXIgcGV0aXRpb25zIHRvIHRoZSBTZWNyZXRhcnkgb2YgU3RhdGUncyBvZmZpY2Ugb24gSnVseSA2dGguIFNpbmNlIHRoZW4gd2UgaGF2ZSBhZGRlZCBtb3JlIHBlb3BsZSB0byB0aGUgZmllbGQgaGVscGluZyBwZW9wbGUgdG8gZ2V0IHJlZ2lzdGVyZWQgYXMgdm90ZXJzIGFuZCB0byBzaWduIHRoZSBwZXRpdGlvbi4gCkdpdmVuIHRoZXNlIGh1Z2Ugc3Rha2VzLCB3aGF0J3Mgd3Jvbmcgd2l0aCBQYWtpc3RhbiBhc2tpbmcgbm90IHRvIGJlIHRha2VuIGZvciBncmFudGVkPyBUaGUgS2VycnkgTHVnYXIgYmlsbCB3aXRoIGl0cyBhYnN1cmQgY29uZGl0aW9uYWxpdGllcyB3ZSBzaG91bGQgbm90IGFjY2VwdC4gCkFuZCBJIGFzcGlyZSB0byBiZSB3aGVyZSBhbnlvbmUgcmVhZGluZyB0aGlzIGlzIHdpdGggbW9yZSB0aGFuIDIgcmVudGFsIHByb3BlcnRpZXMuIEkga25ldyBJIGhhZCBhbiBpdGNoIGZvciByZWFsIGVzdGF0ZSBidXQgMyB5ZWFycyBhZ28gd2Fzbid0IGV2ZW4gc3VyZSBpZiBJZCBldmVyIHB1bGwgdGhlIHRyaWdnZXIuIAo5KSBPbWVnYSAzIFBVRkFzIGluaGliaXQgdGhlIGFyYWNoaWRvbmljIGFjaWQgY2FzY2FkZSB0byBQR0UyIGJ5IENveCBlbnp5bWVzLgpBcyBhIHZpc2l0b3IsIHlvdSBsaWtlbHkgYWNjZXNzaW5nIHNlcnZpY2VzIHRoYXQgYXJlIGhvc3RlZCBvbiBmb3JlaWduIHNlcnZlcnMuIEluIHRoYXQgY2FzZSwgdGhlIGxpbWl0aW5nIGZhY3RvciBpcyBub3QgeW91ciBjb25uZWN0aW9uIHNwZWVkLCBidXQgcmF0aGVyIHRoZSB0aW1lIGFuZCBvdGhlciBsb3NzZXMgdGhhdCBhcmUgaW52b2x2ZWQgaW4gY29tbXVuaWNhdGluZyBoYWxmd2F5IGFyb3VuZCB0aGUgZ2xvYmUuIFlvdSBzZWUgdGhlIHJldmVyc2UgZWZmZWN0IGlmIHlvdSBnbyBob21lIGFuZCB0cnkgdG8gb3BlbiB1cCBzb21lIEtvcmVhbiBob3N0ZWQgc2l0ZSBsaWtlIEtha2FvIE1hcC4uIApZb3Ugd2lsbCBiZSBwcm9tcHRlZCBmb3IgdGhlIHNlcmlhbCBudW1iZXIgd2hpY2ggaXMgYWxzbyBpbnNpZGUgdGhlIHNlYWxlZCBib3guIApCZWNhdXNlIEkgY2FuJ3QgZG8gaXQsIEkgYXNzdW1lZCBteSBvdGhlciBjb3dvcmtlcnMgd2hvIGFyZSBvZiB0aGUgc2FtZSBzaXplIG9yIHNtYWxsZXIgdGhhbiBtZSB3b3VsZCBub3QgYmUgYWJsZSB0byBhcyB3ZWxsLiBJdCdzIG5vdGhpbmcgbWFsaWNpb3VzIGl0J3MganVzdCBob3cgSSB0aG91Z2h0LiBCdXQgbXkgZnJpZW5kIHdobyBpcyBhYm91dCAxMCBwb3VuZHMgbGlnaHRlciB0aGFuIG1lIGNvdWxkIGRvIGl0IGJlY2F1c2Ugc2hlIGxpZnRzIGFuZCBzdHVmZi4uIApUaGUgTUdNIHdpbnMgZm9yIGFsbCBhcm91bmQgYmVzdCBleHBlcmllbmNlLi4gClRoZSBzdGFuZGFyZCBlcnJvciBjb21lcyBmcm9tIG5vdGljaW5nIHRoYXQgdGhlIHNhbXBsZSBtZWFuIGlzIGl0c2VsZiBhIHJhbmRvbSBxdWFudGl0eTogbmV3IHJhbmRvbSBzYW1wbGUgb2YgNTAgcGVvcGxlLCBuZXcgcmFuZG9tIHNhbXBsZSBtZWFuLiAKVGhleSBhbHNvIGhhZCByZWR1Y2VkICdpbnN1bGluIHNlbnNpdGl2aXR5Jy4KUmVwdWJsaWNhbiBjb25ncmVzc2lvbmFsIGNhbmRpZGF0ZSBleHBsYWlucyBoaXMgcG9rZXIgdG91cm5hbWVudHMKVGhlIG9ubHkgcGFydCBvZiB0aGlzIHJlc3BvbnNlIHRoYXQgSSBkb24ndCBidXkgYXQgYWxsIGlzIHRoYXQgdGhlIHJpZ2h0IGlzICJjYWxtLiIgSWYgeW91J3ZlIHRhbGtlZCB0byBhIFRydW1wIHN1cHBvcnRlciwgeW91J2Qga25vdyBob3cgZnVja2luZyBiYXRzaGl0IGNyYXp5IHRoZXkgYXJlIGJlY2F1c2UgdGhleSBhcmUgY29tcGxldGVseSBkaXZvcmNlZCBmcm9tIHJlYWxpdHkuIApHb2luZyBiYW5rcnVwdCBtZWFucyBpdCBkaWQgbm90IG1hbmFnZSBpdHMgZmluYW5jZXMuIApEYW1uLCBJIHNvcnJ5IGZvciB0aGF0LiBJIGhhZCBwbGVudHkgb2YgcGVvcGxlIHNodXQgdXAgYW5kIGRpc2FwcGVhciB3aGVuIEkgbGluayB0byBhIGZveCBwb3N0IGp1c3QgdG8gYmUgYSBzb3VyY2UgdGhleSBhY2NlcHQsIGJ1dCBoYXZlbiBzZWVuIHNvbWVvbmUgc2F5IHRoYXQgcGVvcGxlIG1hZGUgdXAgYSBmYWtlIGZveCBuZXdzIHNpdGUuIEl0IGxpa2UgdGhleSBiZWxpZXZlIGluIHRoZXNlIEhVR0Ugb3ZlcmFyY2hpbmcgY29uc3BpcmFjaWVzIGludm9sdmluZyBodW5kcmVkcyBvZiB0aG91c2FuZHMgb2YgcGVvcGxlIGFsbCBvdmVyIHRoZSB3b3JsZCBpbiBhIG11bHRpdHVkZSBvZiBpbmR1c3RyaWVzIGFsbCB3b3JraW5nIHRvZ2V0aGVyIHRvIHRha2UgZG93biBvbmUgZ3V5LCBzZWNyZXRseSwgYnV0IGFzayB0aGVtIGlmIG9uZSBndXkgaXMgc3VwZXIgY29ycnVwdCBhbmQgZm91bmQgb3RoZXIgY29ycnVwdCBwZW9wbGUgdG8gZ3JlYXNlIHRoZSB3aGVlbHMgYW5kIHRoZXkgc2F5IHRoYXQganVzdCBhYnN1cmQsIGRvbiBiZSBhbiBpZGlvdC4uIApJIGhhdmUgdG8gd29yayB3aXRoIHRoZSBib2FyZCBhbmQgbWFuYWdlbWVudCBjb21taXR0ZWUuIFRoaW5ncyBhcmUgZGlmZmljdWx0LCBidXQgdGhpbmdzIGFyZW4ganVzdCBkaWZmaWN1bHQgYXQgR2Fsd2F5IFVuaXRlZCwgdGhleSBhcmUgZGlmZmljdWx0IHRocm91Z2hvdXQgdGhlIGNvdW50cnkuIFNheXMgVW5pdGVkIGhhdmUgdG8gYmUgY3JlYXRpdmUgYW5kIHN0aWNrIHRvZ2V0aGVyIHRvIGVuc3VyZSB0aGV5IHJlbWFpbiBpbiB0aGUgcHJlbWllciBkaXZpc2lvbi4uIApMaWtlIGEgbGltYiBJIGFtIGR1ZSB0byBtb3ZlIG5leHQgeWVhciByb3VuZCBhYm91dCBNYXkgdGltZT8gU28gSSBhbSBsb29raW5nIHRvIGRvIGFuIElNIHJhY2UgZWFybHkgc2Vhc29uLiBXaXRoIE5vMSBkYXVnaHRlciBub3cgaW4gTlogZm9yIGhlciBnYXAgeWVhciB3ZSBhcmUgbG9va2luZyB0byBoYXZlIGEgZmFtaWx5IHZpc2l0IHRoZXJlIGVhcmx5IGluIHRoZSB5ZWFyIGFsc28uIEZpbmUgSSBoZXJlIHlvdSBzYXksIGp1c3QgZG8gSU0gTlohIFRoYXQgd2FzIHRoZSBpbml0aWFsIHBsYW4gYnV0IGJlaW5nIG9uIE1hcmNoIDZUSCB0aGUgdGltaW5nIGlzbiBncmVhdCBhcyBFYXN0ZXIgaG9scyBhcmUgbm90IHVudGlsIEFwcmlsIHdoZW4gd2UgY2FuIGFsbCB2aXNpdD8gU28gbXkgY3VycmVudCB0aG91Z2h0cyBhcmUgdGhhdCBJIHdpbGwgZ28gdG8gZG8gdGhlIENvdW50cnkgRW5lcmd5IElNIEF1c3RyYWxpYSBvbiAyOCBNYXJjaC4gCldoZXJlIG90aGVyIGNvbmRpdGlvbnMgZXhpc3QsIGNoaXJvcHJhY3RpYyBjYXJlIG1heSBjb21wbGVtZW50IG9yIHN1cHBvcnQgbWVkaWNhbCBvciBvdGhlciB0cmVhdG1lbnQgYnkgcmVsaWV2aW5nIHRoZSBtdXNjdWxvc2tlbGV0YWwgYXNwZWN0cyBhc3NvY2lhdGVkIHdpdGggdGhlIGNvbmRpdGlvbi5UaGVyZSBhcmUgbWFueSByZWFzb25zIHRvIHNlZWsgY2hpcm9wcmFjdGljIGNhcmU6V2Ugb2ZmZXIgYSB2YXJpZXR5IG9mIHNlcnZpY2VzIGluY2x1ZGluZzpNeW9mYXNjaWFsIFJlbGVhc2UgVGhlcmFweSwgVWx0cmFzb3VuZCBUaGVyYXB5LCBSZWhhYmlsaXRhdGlvbiBTZXJ2aWNlcywgTW90b3IgVmVoaWNsZSBBY2NpZGVudCBDbGFpbXMgYW5kIFdvcmtwbGFjZSBTYWZldHkgSW5zdXJhbmNlIEJvYXJkIENsYWltcyAoV1NJQilQbGVhc2Ugbm90ZSB0aGF0IHlvdSBhcmUgcmVzcG9uc2libGUgZm9yIHBheW1lbnQgYXQgdGhlIHRpbWUgb2YgeW91ciBzZXJ2aWNlcy4gCkkgZmVlbCBLZXZpbiBzbyBtdWNoIGluIHRoaXMgZXBpc29kZS4gSXQgd2FzIHN1Y2ggYSBicmlsbGlhbnQgdG91Y2ggb24gaG93IGhlIHNlZXMgdGhlIGJhcnRlbmRlciBwcmVwcGluZyBhIG1peCBhbmQgaGlzIGV5ZXMgZ2xvc3Mgb3ZlciBhbmQgdGhlbiBzdWRkZW5seSBoZSBseWluZyBoaXMgd2F5IGludG8gZmVlZGluZyBoaXMgYWRkaWN0aW9uLiAKTWFsYWlzZSBhbmQgYmx1cnJlZCB2aXNpb24gbWF5IGFsc28gYmUgcHJlc2VudC4uIApXaGF0cyB1cCB3aXRoIHRoZSBiZWUgbGFkeT8gV2h5IGRpZCBubyBvbmUgbG9vayBhdCBoZXIgd2hlbiB0aGV5IHRvb2sgYXdheSBUaGFsZSBpbiB0aGUgc3RhcnQ/IEhvdyBjYW4gc2hlIHRhbGsgdG8gYmVlcz8gOjo6IFdIQVQgVEhFIEZVQ0sgSVMgVVAgV0lUSCBUSEUgQkVFIExBRFk/ISBXSEFUIElTIEhFUiBKT0IgSEVSRT8hIEkgZmlndXJlZCBzaGUgaGFkIHNvbWUgZnV0dXJlIHRlY2gsIHdoaWNoIGlzIHdoeSBzaGUgY291bGQgYmUgYSBiZWUgd2hpc3BlcmVyLiAKSSB0eXBpY2FsbHkgYnVsayBjb29rIGJyZWFrZmFzdCBmb3IgdGhlIHdvcmsgd2VlayAoMSAyIG9wdGlvbnMgdG8gc3RyZXRjaCBmb3IgMTAgc2VydmluZ3Mgb3ZlciA1IGRheXMpLiAKWW91IHNob3VsZCBsb29rIGZvciBBdXN0cmFsaWFuIG9ubGluZSBjYXNpbm9zIHRoYXQgb2ZmZXIgYm9udXNlcyBzdWl0ZWQgdG8geW91ciBzdHlsZSBvZiB3YWdlcmluZy4gU29tZSBjb21tb24gYm9udXNlcyBhcmUgZ2l2ZW4gYmVsb3cuCkl0J3MgYSBwcmV0dHkgc3RhbmRhcmQgY29uZmxpY3Qgb2YgYSBtb20gYW5kIHBvcCBzaG9wIGdldHRpbmcgYnVsbGllZCBvdXQgb2YgdG93biBieSBhIGJpZyBjb3Jwb3JhdGlvbi4gCkkgc3RpbGwgdGhpbmsgdXBzd2luZyBkaWQgYSBncmVhdCBqb2Igb2YgYWR2YW5jaW5nIG15IGtub3dsZWRnZSwgdGhpbmtpbmcgYWJvdXQgcmFuZ2VzLCBhbmQgZGVmaW5pdGVseSBoZWxwZWQgbWUgdG8gYWR2YW5jZSwgYnV0IGV2ZW50dWFsbHkgcmVhY2hlZCBhIHBsYXRlYXUgd2hlcmUgdG8gbW92ZSBwYXN0IHRoYXQgSSBoYWQgdG8gbGVhcm4gdGhlIGNvbmNlcHRzIGluIGEgInRydWUiIGZvcm0gcmF0aGVyIHRoYW4gYSAic2ltcGxlIiBmb3JtIHRoYXQgdXBzd2luZyB0ZWFjaGVzLiBJZiB5b3UgaGF2ZSBubyBleHBlcmllbmNlLCBJJ2QgcmVjb21tZW5kIFVwc3dpbmcuIApJbjogV2lsc29uLCBNLiwgV2Fsc2gsIFYuIEFuZCBQYXJraW4sIEIuIChlZC4pIFNwb3J0IGFuZCB0aGUgQnJhaW46IFRoZSBTY2llbmNlIG9mIFByZXBhcmluZywgRW5kdXJpbmcgYW5kIFdpbm5pbmcsIFBhcnQgQiBFbHNldmllci4gUHAuIEFuZCBSb3dlLCBKLiAyMDE2LiAKSSBndWVzcywga2luZCBvZi4gCklzIGp1c3Qgc29tZXRoaW5nIGFib3V0IHB1dHRpbmcgb24gdGhlIENhbmFkaWFuIHVuaWZvcm0gYW5kIG1hcmNoaW5nIG91dCBvbnRvIHRoZSBmaWVsZC4gCkRTUEVDIHNob3dlZCBhIGdyZWF0ZXIgcmF0ZSBvZiBpbXByb3ZlbWVudCBpbiBzeW1wdG9tcyBjb21wYXJlZCB3aXRoIE1UIGluIHRoZSBmaXJzdCBtb250aCBvZiB0cmVhdG1lbnQgKHQ9MS43MiwgcD0wLjA0NyBhbmQgZD0wLjcwKSwgYnV0IHRoZXJlIHdhcyBubyBkaWZmZXJlbmNlIGJldHdlZW4gdGhlIHR3byB0cmVhdG1lbnRzIGluIHRoZSBzZWNvbmQgbW9udGguIApJZiB5b3UgaW1hZ2luZSB0aGUgRWFydGggd2FzIHRyYW5zcGFyZW50LCBhbmQgeW91IHdlcmUgc2l0dGluZyBhdCB0aGUgdmVyeSBjZW50cmUgb2YgdGhlIEVhcnRoLiBUaGUgbGF0aXR1ZGUgYW5kIGxvbmdpdHVkZSBsaW5lcyBjcm9zc2luZyB0aGUgRWFydGggc3VyZmFjZSB3b3VsZCBhcHBlYXIgc3VwZXJpbXBvc2VkIG9uIHRoZSBzdGFycywgYW5kIGdpdmVzIHlvdSBhIGNvb3JkaW5hdGUgc3lzdGVtIGZvciB0aGUgc2t5LiBUaGVyZSBhcmUgdHdvIGNvb3JkaW5hdGVzIGZvciB0aGlzLiAKSWYgeW91IGNhbiBnaXZlIHRoYXQsIGlmIHlvdSBjYW4gc3VwcG9ydCB5b3VyIGNoaWxkcmVuIHlvdSBzaG91bGRuIGhhdmUgYW55LiAKSSdtIGp1c3QgaG9waW5nIG15IGV4cGVyaW1lbnQgZ29lcyBhIGxpdHRsZSBzbW9vdGhlci4KVGhhdCBkb2VzbiBtZWFuIGdldHRpbmcgdGhpcyBtb3ZpZSBtYWRlIHdhcyBlYXN5LiBBbiBlYXJseSBwcm9zcGVjdGl2ZSBwcm9kdWNlciBzdWdnZXN0ZWQgY2FzdGluZyBhIHdoaXRlIHdvbWFuIGFzIHRoZSBsZWFkLiBMYXRlciwgdGhlIGZpbG1tYWtlcnMgdHVybmVkIGRvd24gYSBsdWNyYXRpdmUgZGVhbCB3aXRoIE5ldGZsaXggdG8gbWFrZSB0aGUgZmlsbSB3aXRoIFdhcm5lciBCcm9zLiwgd2hpY2ggZ3VhcmFudGVlZCBpdCBhIGhpZ2hlciBwcm9maWxlIHJlbGVhc2UuIApMaWZlIGhhcyByZXR1cm5lZCB0byBhIGZldWRhbCBzeXN0ZW0gcnVsZWQgYnkgdGhlIEthbGthciBvdmVybG9yZHMsIGtub3duIGFzIHRoZSBUZWl2b3Mgb3IgJ2Jyb3RoZXJzJywgYW5kIGVuZm9yY2VkIGJ5IHRoZSBLYXNoIEd1YXJkLiBGb3IgdGhlIGh1bWFuIHJhY2UgbGlmZSBpcyBob3JyaWZpYy4gQW55b25lIGNhbiBiZSBraWxsZWQgYnkgdGhlIEthbGthcnMgZm9yIGFueSByZWFzb24gYXQgYW55IHRpbWUgZm9sbG93aW5nIGEgbWlsaXRhcnkgdHJpYWwgYXQgd2hpY2ggdGhleSBhcmUgbm90IGFsbG93ZWQgdG8gc3BlYWsuIFdvbWVuIGFyZSBjb25zaWRlcmVkIHRoZSBwcm9wZXJ0eSBvZiB0aGUgc3RhdGUgd2hvIGNhbiBiZSBjbGFpbWVkIGJ5IHRoZSBLYXNoIEd1YXJkIGF0IHdpbGwgYW5kIGZvciB0aGlzIHJlYXNvbiBnaXJscyBhcmUgZWl0aGVyIGhpZGRlbiwgZGlzZmlndXJlZCBvciBraWxsZWQgYnkgdGhlaXIgcGFyZW50cyBhdCBiaXJ0aDguIFRheGF0aW9uIGlzIHNvIGhpZ2ggdGhhdCB0aGUgZ2VuZXJhbCBwb3B1bGF0aW9uIGJhcmVseSBzdXJ2aXZlIGFuZCBtYW55IGFyZSBwcmVwYXJlZCB0byBiZXRyYXkgdGhlaXIgbmVpZ2hib3VycyBmb3IgcmV3YXJkcyBhcyBsaXR0bGUgYXMgZXh0cmEgZWdncyB0byBlYXQuIFBvd2VyIHN0cnVnZ2xlcyBiZXR3ZWVuIHRoZSBidXJlYXVjcmF0aWMgVGVpdm9zIGFuZCB0aGUgbWlsaXRhcnkgS2FzaCBHdWFyZCBhcmUgY29tbW9uLiBJbiB0aGUgcnVpbnMgb2YgQ2hpY2FnbyB3aGVyZSBKdWxpYW4gOXRoIGxpdmVzIHRoZSBjb21tYW5kZXIgb2YgdGhlIEthc2ggR3VhcmQgaXMgT3IgdGlzLCBhIGNydWVsIGFuZCBhbWJpdGlvdXMgZGVzY2VuZGFudCBvZiBPcnRoaXMsIHdobyBkcmVhbXMgb2YgYmVpbmcgSmVtYWRhciBvZiB0aGUgVW5pdGVkIFRlaXZvcyBvZiBBbWVyaWNhLgpXaGF0IHNoZSBkaWQgaXMgc3RyYWlnaHQgdXAgYWJ1c2Ugb2YgdGhlIHZlcnkgd29yc3Qga2luZC4gSSdtIGluY3JlZGlibHkgcHJvdWQgb2YgREggZm9yIGhhdmluZyB0aGUgY291cmFnZSB0byBiZSBob25lc3Qgd2l0aCBoaW1zZWxmIGFuZCBhZG1pdCBoaXMgb3duIHByb2JsZW0sIHRoZW4gYXNrIGZvciBoZWxwLiAKSGFoYS4gSSBzdXJlIHdoYXQgSSB0aGlua2luZyBpc24gYSByZWFsaXR5LCBidXQgSSBmZWVsIGxpa2UgT1AgbWlnaHQgaGF2ZSBiZWVuICJmbHlpbmcgbGlrZSBhIGxpdHRsZSBiaXJkaWUiIGEgbG9uZyB3aXRoIG1lIGVhcmxpZXIgdG9kYXkuIEkgbGVhcm5lZCBzb21lIGluZnVyaWF0aW5nIGluZm9ybWF0aW9uIGFib3V0IHRoZSBET0ogYW5kIFNwZWFjaWFsIEFnZW50LCB3aG8gbGlrZWx5IHBsYXllZCB3aXRoICJLYXQiIGF0IGxlYXN0IGFzIGZhciBhcyB0byB0cnkgdG8gaGVscCBoZXIgbWFpbnRhaW4gaGVyIHVucmVhbGlzdGljIGNvdmVyIGF0IEF1dG8gVHJhZGVyLiBZZXAsIEkgYmVpbmcgc3VwZXIgdmFndWUgaGVyZSBidXQgd2hhdC93aG8gSSB3YXMgaW50cm9kdWNlZCB0byB0b2RheSBibGV3IG15IGZyZWFraW5nIG1pbmQhIE1hZGUgdGhlICJ0ZW1wYXJhdHVyZSBvZiBteSBibG9vZCIgbmVhcmx5IGtpbGwgbWUhIEkga25ldyB0aGVyZSB3YXMvaXMgZGlzZ3VzdGluZyBjb3JydXB0aW9uIGFtb25nc3QgdGhlIGVudGlyZSBET0ogc3lzdGVtIGJ1dCBJIHNlcmlvdXNseSBjYW5ub3QgYmVsaWV2ZSB3aGF0IEkgbGVhcm5lZCBpcyBOT1QgYWdhaW5zdCB0aGUgbGF3LiBJbiBvcmRlciB0byB1bmludml0ZSBvZmZlbnNpdmUgY29tbWVudHMsIHdoaWNoIGFyZSBub3QgdmVyeSBjb21tb24gaW4gdGhpcyBzdWIsIEkgdHJ5aW5nIG5vdCB0byBuYW1lIHBsYWNlcyBJIHZpc2l0ZWQgdG9kYXkgYW5kIHRoZSBwZW9wbGUgd2hvIHNoYXJlZCB0aGUgaW5mb3JtYXRpb24uIElmIHlvdSB3ZXJlIHRoZXJlIGFuZCByZWFkIHRoZSBleGNoYW5nZXMsIHlvdSBrbm93IGV4YWN0bHkgd2hhdC93aG8gSSB0YWxraW5nIGFib3V0LiBLVyBhbmQgdGhhdCBTcGVjaWFsIEFnZW50LCBEZWJyYSBTdGF1c3MuIHRoZSBvbmUgd2hvIGNhbGxlZCBNYW5pdG93b2MgU08gYXNraW5nLCBwcmFjdGljYWxseSBCRUdHSU5HLCB0byBiZSBhIHBhcnQgb2YgdGhlIFRlcmVzYSBIYWxiYWNoL1N0ZXZlbiBBdmVyeSBpbnZlc3RpZ2F0aW9uIGJlZm9yZSBpdCB3YXMgZXZlbiBhbiBpbnZlc3RpZ2F0aW9uLiBTaGUgc291bmRlZCBzbyBpbmNyZWRpYmx5IGRlc3BlcmF0ZSB0byBiZSBwYXJ0IG9mIGhhbmdpbmcgU3RldmVuIEF2ZXJ5LiBOYXN0eSEKQSB3b21hbiB3aG8gZ29vZCBhdCB3aGF0IHNoZSBkb2VzIGluIFNURU0gaXMgc29tZXRoaW5nIG9mIGEgZ29sZGVuIGdvb3NlIGZvciBoaXJpbmcgZGVtb2dyYXBoaWNzIGFuZCBwcm9kdWN0aXZpdHkgYWxpa2UuLiAKU28gdGhlaXIgYWR2aWNlIHRvIHRoZWlyIEFmZ2hhbiBwcm94aWVzIGlzIHRvIGNhcnJ5IG91dCBvcGVyYXRpb25zIGRlc2lnbmVkIHRvIGltcGFjdCB0aGUgaG9tZSBhdWRpZW5jZSBpbiBBbWVyaWNhIGFuZCBFdXJvcGUuIApJIGRlZmVuZGVkIGhlciwgY2FsbGluZyBpdCBhIG55IGFjY2VudCBhbmQgdGhhdCBzaGUgcHJvYmFibHkgZ290IGl0IG9yZ2FuaWNhbGx5IHRocm91Z2ggaGVyIGZyaWVuZHMgYW5kIG5laWdoYm9yaG9vZC4gCkkgd2FzIGF0IGEgcGFydHkgYXQgY29sbGVnZSwgd2hvIGhhZCBhIGhhbmQgbGlrZSB0aGF0LiBJIGdvdCBkcnVuayBhbmQgYXNrZWQgaGVyIGFib3V0IGl0LiBTaGUgZXhwbGFpbmVkIHRoYXQgc2hlIHdhcyBvbiB0b3Agb2YgYSBiYW5rIG9mIGxvY2tlciBpbiBoaWdoIHNjaG9vbCBoYW5naW5nIGEgYmFubmVyLiAKRXNvIHMsIHNpIGVzdGFtb3MgZGlzcHV0YW5kbyB1bmEgcGFydGlkYSBjb24gYmViZWRvcmVzIGRlYmVyZW1vcyBwb3IgbG8gbWVub3MgdG9tYXIgYWxndW4gdHJhZ28gcGFyYSBldml0YXIgZGVzY29uZmlhbnphIGRlIGxvcyBtaXNtb3MuLiAKRmVhdHVyZWQgaW4gdGhpcyBsaXN0IGFyZSBmaWxtcyBhcyBlYXJseSBhcyAxOTMzLCByYW5naW5nIHJpZ2h0IHRocm91Z2ggdG8gMjAxOSAoZnVsbCBkaXNjbG9zdXJlLCB0aGUgaW5zdWx0cyBmcm9tIHNvbWUgb2YgdGhlc2UgZmlsbXMgYXJlIGJldHRlciB0aGFuIHRoZSBhY3R1YWwgZmlsbXMgdGhlbXNlbHZlcyksIHNvIGZyb20gQW5jaG9ybWFuIGFuZCBTY2FyZmFjZSB0byBFcmluIEJyb2Nrb3ZpY2ggYW5kIE9zY2FyIHdpbm5pbmcgWW9yZ29zIExhbnRoaW1vcyBmaWxtIFRoZSBGYXZvdXJpdGUsIHRoZXNlIGFyZSB0aGUgNjUgYmVzdCBtb3ZpZSBpbnN1bHRzIG9mIGFsbCB0aW1lLi4gCkEgZG9uayBiZXQgaXMgZGlzcnVwdGl2ZSBhbmQgY2FuIGJlIHBvd2VyZnVsIHRvbyBiZWNhdXNlIHRoYXQgaXMgaW5mb3JtYXRpb24gZm9yIHRoZSBwbGF5ZXIgaW4gcG9zaXRpb24uIEl0IHRocm93cyBwZW9wbGUgb2ZmIGFuZCBpdCB3aWxsIGFsc28gcHJldmVudCB0aGUgcGxheWVyIGluIHBvc2l0aW9uIGZyb20gdGFraW5nIGEgZnJlZSBjYXJkLiBJIHdvdWxkbiBzYXkgbmV2ZXIgZG9uayBiZXQsIGJ1dCB0aGVyZSBhcmUgdXN1YWxseSBtb3JlIGFkdmFudGFnZXMgdG8ganVzdCBjaGVja2luZyBvdXQgb2YgcG9zaXRpb24uLiAKQXNhZCBSZWhtYW4sIGhlYWQgb2YgdGhlIEludGVybmF0aW9uYWwgQ2xpbWF0ZSBwcm9ncmFtIGF0IEZyaWVuZHMgb2YgdGhlIEVhcnRoIEludGVybmF0aW9uYWwsIHNhaWQsIHRoZSByYWNlIHRvIHN0b3AgY2xpbWF0ZSBjaGFuZ2Ugd2hpY2ggd2lsbCBkZXN0cm95IGhvbWVzLCBjcm9wcywgYW5kIGVudGlyZSBsaXZlcyBhY3Jvc3MgdGhlIHdvcmxkLCBpdCBpcyBkZXZlbG9waW5nIGNvdW50cmllcyB0aGF0IGFyZSBmaXJzdCBvdXQgb2YgdGhlIGJsb2Nrcy4gSXQgaXMgZGV2ZWxvcGluZyBjb3VudHJpZXMgdGhhdCBoYXZlIG1hZGUgcGxlZGdlcyB0aGF0IGFkZCB1cCB3aXRoIHRoZSBzY2llbmNlLiBEZXZlbG9wZWQgY291bnRyaWVzIHNlZW0gdG8gYmUgc2t1bGtpbmcgYXdheSwgdHJ5aW5nIHRvIGF2b2lkIHBpY2tpbmcgdXAgdGhlIHRhYiBmb3IgdGhlIHBvbGx1dGlvbiB0aGV5IGNhdXNlZC4KS29yZGVuYnJvY2sgc2FpZCB0aGUgbGVnaXNsYXR1cmUgaGFzIGV2ZXJ5IGFiaWxpdHkgdG8gZml4IHRoaXMgcHJvYmxlbSwgYW5kIHNoZSdkIGJlZW4gd29ya2luZyB3aXRoIGxlZ2lzbGF0b3JzIGxpa2UgU2VuLiBSaWNrIEpvbmVzIG9uIHRoaXMgaXNzdWUuIApFcyB1biBmb3JtYXRvIG11eSBwb3B1bGFyIGVuIGNhc2lub3MgZGUgdG9kbyBlbCBtdW5kbyB5IHRhbWJpbiBlbiBlbCBwb2tlciBvbmxpbmUsIHkgcG9yIHN1cHVlc3RvIHF1ZSB0dXZvIHN1IGh1ZWNvIGVuIGxhIGFnZW5kYSBkZSBsYXMgU2VyaWVzLiAKQWJvdXQgQVZJRDEwMCBhbmQgdGhlIEFWSUQxMDAgMDEgVHJpYWxBIHJlY29tbWVuZGVkIFBoYXNlIDIgZG9zZSAoUlAyRCkgb2YgMjQwIG1nL20yICg2bWcva2cpIHdhcyBlc3RhYmxpc2hlZCBmb3IgQVZJRDEwMCBpbiBhIGNvbXBsZXRlZCBQaGFzZSAxIHN0dWR5LiAKV2hpbGUgc29tZSBvZiBoaXMgdGVhbW1hdGVzIHJlZ3VsYXJseSBncmF2aXRhdGUgdG93YXJkIHRoZSBjYXJkIGdhbWVzLCBNb3JyaXMgc2FpZCBoZSBzdGlja3MgdG8gZGljZSBvbiB0aGUgdGVhbSBwbGFuZS4gQXMgc3VjaCwgaGUgd2Fzbid0IHF1YWxpZmllZCB0byBldmFsdWF0ZSBTbWFydCdzIFVubyBza2lsbHMuClRoZSBpbmxheSB0byB0aGUgMjAwIFBhdWxzb24gVG9waGF0IEFuZCBDYW5lIFBva2VyIENoaXBzIHdpdGggQWx1bWludW0gQ2FzZSBhbHNvIGFkZHMgdG8gdGhlaXIgdW5pcXVlbmVzcyBhbmQgYXBwZWFsLiBTcGVjaWZpY2FsbHksIHRoZSBpbmxheSBvZiB0aGVzZSBjaGlwcyBpcyBub3Qgb25lIHRoYXQgaGFzIGJlZW4gY3JhbmtlZCBvdXQgb24gYW4gYXNzZW1ibHkgbGluZSBmYXNoaW9uLiBUaGVzZSBhcmUgdW5pcXVlIGRlc2lnbmVkIGlubGF5cyB0aGF0IGFjdCBhcyBhIHN0YW1wIG9mIHRoZSBvcmlnaW5hbGl0eSBvZiB0aGUgY2hpcHMuLiAKSG93ZXZlciwgdGhpbmdzIHN0YXJ0IHRvIGdldCBpbnRlcmVzdGluZyB3aGVuIHRoZSB0d28gYnVsYnMgYXJlIG1ha2luZyB0aGUgc3dpdGNoLiAKSG9ybiB0cmFpbmVyLCBHbGVubiBSdXNodG9uLCBoYWQgc25hcHBlZCBhIGNvdXBsZSBvZiBwaG90b3Mgb2YgUGFjcXVpYW8gbGlrZSBhbiBleGNpdGVkIGZhbiB3aGVuIHRoZXkgd2VyZSBvbiBzdGFnZSBmb3IgdGhlIHdlaWdoIGluLiAKVGhpcyBvZnRlbiBtYWtlcyBpdCBpbXBvc3NpYmxlIHRvIGhhdmUgZW5vdWdoIHNlYXRzIGF2YWlsYWJsZSBuZXh0IHRvIGVhY2ggb3RoZXIgZm9yIGV2ZXJ5b25lLiBXaG9ldmVyIGNvbWVzIGZpcnN0IG9yIGhhcyByZXNlcnZlZCBhIHNlYXQgZ2V0cyB0aGVpciBjaG9pY2UuIApJIHRoaW5rIHlvdSBkb2luZyBncmVhdCwgc28ga2VlcCBpdCB1cCA6KQpJJ20gYSB2b2ljZSB0aGF0J3MgYWN0dWFsbHkgdmFsdWVkLiIuIApXaGVuIGl0IGNvbWVzIHRvIHlvdXIgaG9tZSBpbnRlcmlvciwgcGljayBhIHNpbmdsZSBpZGVhIGFuZCBnbyB3aXRoIGl0LCBzYXlzIFZhbmNvdXZlciBpbnRlcmlvciBkZXNpZ25lciBhbmQgYXJjaGl0ZWN0IEFuZHJlYSBNY0xlYW4uCiJIZSBhbmQgSSBhcmUgbGlmZSBtZW1iZXJzICAgaGlzIGdyYW5kZmF0aGVyIG9uIG15IG1vdGhlcidzIHNpZGUgZm91bmRlZCB0aGUgRmFycmVyIExlYWd1ZSBqdW5pb3IgZm9vdGJhbGwsIiBoZSBzYWlkLiAiSWYgaGUgd2Fzbid0IGRvaW5nIHNvbWV0aGluZyBmb3IgdGhlIGZvb3RiYWxsIGNsdWIsIGhlIHdhcyBkb2luZyBzb21ldGhpbmcgZm9yIHRoZSBhbmdsZXJzIGNsdWIgIGhlJ2xsIGxlYXZlIGEgZ3JlYXQgaG9sZSBoZXJlLiIgTXIgUGVydHplbCBsZWF2ZXMgYmVoaW5kIGhpcyBzb25zIFJoeXMgYW5kIEt5bGUsIGRhdWdodGVyIEpvcmRhbiwgYW5kIHRocmVlIGdyYW5kY2hpbGRyZW4gICB0aGUgeW91bmdlc3Qgb25seSBzaXggd2Vla3Mgb2xkLiAKSWYgc29tZW9uZSBib3RoZXJzIHRvIHdyaXRlIGJhY2sgdG8gbWUsIGkgYXQgbGVhc3QgdHJ5IGFuZCBrZWVwIHRoZSBjb252ZXJzYXRpb24gZ29pbmcsIG1heWJlIHRyeWluZyB0byBzdGVlciBpdCBmb3J3YXJkIG9yIG1heWJlIGp1c3QgdG8gZ2V0IHRvIGtub3cgdGhlbSBtb3JlLiBUaGF0IG5vdCB0byBzYXkgaSBiZWdnaW5nIGZvciBhbnkgYXR0ZW50aW9uLCBhbmQgbWFueSBvZiB0aGVzZSBjb25uZWN0aW9ucyB3b24gZ28gYW55d2hlcmUsIGJ1dCBhdCBsZWFzdCBiZSBmcmllbmRseSBhbmQgZ2V0IHRvIGtub3cgdGhlbSBhIGJpdCEgWW91IG1pZ2h0IGVuZCB1cCB3aXRoIGEgZnJpZW5kLCBhdCB0aGUgdmVyeSBsZWFzdC4uIApFeGFtcGxlcyBhcmUgdGFyb3QsIG9tYnJlLCBQaGFzZSAxMCwgYW5kIFVuby4gCllvdSBjYW4gYWxzbyB1c2UgdGhpcyB0byByZW1vdmUgdGhlIHNjcmF0Y2hlcyBvbiB5b3VyIG1pcnJvci4gCkkgaGVyZSwgZ29ubmEgdGFrZSB0aGlzIG9wcG9ydHVuaXR5IHRvIGdldCBvbiBteSBzb2FwIGJveCBhYm91dCB0aGUgd2F5IHNvbWUgY3ljbGlzdHMgcmlkZS4gSSBsb3N0IGNvdW50IG9mIGhvdyBtYW55IHRpbWVzIEkgYmVlbiBhdCBhIHJlZCBsaWdodCBhbmQgSSBzZWUgYSBjeWNsaXN0IHVzZSB0aGUgc3BhY2UgYmV0d2VlbiB0aGUgY2FycyBpbiB0aGUgcmlnaHQgbGFuZSBhbmQgdGhlIGN1cmIgdG8gcGFzcyBhIGxpbmUgb2YgY2FycywganVzdCBmb3IgdGhlIGNhcnMgdG8gaGF2ZSB0byBnbyBzbG93IGJlaGluZCB0aGUgY3ljbGlzdCB3aGVuIHRoZSBsaWdodCB0dXJucyBncmVlbi4gdGhhdCBhbm5veWluZ2x5IHNlbGZpc2ggYXQgYmVzdCBhbmQgSSB3b3VsZCBnbyBhcyBmYXIgdG8gc2F5IGh5cG9jcml0aWNhbC4gaWYgeW91IHdhbnQgdXMgdG8gc2hhcmUgdGhlIHJvYWQsIHRoZW4geW91IGFsc28gaGF2ZSB0byBzaGFyZSB0aGUgdHJhZmZpYyBydWxlcy4gQ3ljbGlzdHMgaW4gaGVyZSwgYmVmb3JlIHlvdSBnZXQgdGhlIHRvcmNoZXMgYW5kIHBpdGNoZm9ya3Mgb3V0IHRvIGNvbWUgYWZ0ZXIgbWUsIGp1c3Qga25vdyBpZiB5b3UgZG9uIGRvIHdoYXQgSSBtZW50aW9uZWQgYWJvdmUgSSBkb24gaGF2ZSBhbiBpc3N1ZSB3aXRoIHkgOikgSSBhbHNvIGxpa2UgdG8gcG9pbnQgb3V0IGl0IHVzdWFsbHkgc2luZ2xlIHJpZGVycyB0aGF0IGRvIHRoaXMsIEkgbmV2ZXIgc2VlbiBhIGxhcmdlIGdyb3VwIGRvIHRoaXMgc28gaXQgcHJvYmFibHkgYSBmYWlybHkgc21hbGwgcGVyY2VudGFnZSBvZiB0aGUgY3ljbGluZyBjb21tdW5pdHkgYnV0IHN0aWxsLiBpdCBhbm5veWluZyBhcyBoZWxsLgpZb3UgY2FuIGFjdHVhbGx5IGNoYW5nZSB0aGUgdG9uZSBieSByYWlzaW5nIGFuZCBsb3dlcmluZyB0aGUgamF3IHRvIHByb2R1Y2UgYSB2aWJyYXRvLiAKVGhlIENocmlzdG1hcyBTZWFscyBjYW1wYWlnbiBkZW1vbnN0cmF0ZWQgdGhlIHBoaWxhbnRocm9waWMgcG93ZXIgb2YgdGhlIGdyYXNzIHJvb3RzLiBJdCBub3Qgb25seSByYWlzZWQgbW9uZXksIGJ1dCBjYWxsZWQgYXR0ZW50aW9uIHRvIHR1YmVyY3Vsb3Npcy4gSW4gYSBmZXcgeWVhcnMsIHRoZSBudW1iZXIgb2Ygdm9sdW50ZWVycyBmb3IgdGhlIE5hdGlvbmFsIEFzc29jaWF0aW9uIGZvciB0aGUgU3R1ZHkgYW5kIFByZXZlbnRpb24gb2YgVHViZXJjdWxvc2lzIHNvYXJlZCB0byA1MDAsMDAwIGZyb20gNSwwMDAuIAozMCBlYXJ0aHF1YWtlIGhhcyBiZWVuIHJldmlzZWQgdG8gNy4xIGZyb20gdGhlIGVhcmxpZXIgbWFnbml0dWRlIDcuMC4gQWxhc2thIEVhcnRocXVha2UgQ2VudGVyIG9mZmljaWFscyBzYXkgaW4gYSBuZXdzIHJlbGVhc2UgdGhhdCB0aGUgY2hhbmdlIGNvbWVzIGFmdGVyIHF1YWtlIGRhdGEgd2FzIHJldmlld2VkIGJ5IG11bHRpcGxlIGFnZW5jaWVzIGFuZCBhY2FkZW1pYyBncm91cHMuIEdlb2xvZ2ljYWwgU3VydmV5IHNwb2tlc21hbiBQYXVsIExhdXN0c2VuIFtUaGlzIHdlZWsncyBwYXNzYWdlc1NBTEVNLCBPcmUuIApUbyBXaW4gdGhlIFBvdApDb21lIG9uIHRoaXMgaXMgYmlnIGV2ZW4gZm9yIGEgQ0VPIG9mIGEgY29tcGFueS4gCk9uIFN1bmRheSBDbGludG9uIHNhaWQgV2FzaGluZ3RvbiB3YXMgbG9va2luZyBpbnRvIHB1dHRpbmcgTm9ydGggS29yZWEgYmFjayBvbiBhIGxpc3Qgb2Ygc3RhdGUgc3BvbnNvcnMgb2YgdGVycm9yaXNtLCBhIGRlc2lnbmF0aW9uIHRoYXQgY291bGQgc3ViamVjdCB0aGUgaW1wb3ZlcmlzaGVkIHN0YXRlIHRvIG1vcmUgZmluYW5jaWFsIHNhbmN0aW9ucy4KV2lzc2FtMjQgIDkgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvCkl0IGFsc28gd291bGRuIGJlIGEgc3VycHJpc2UgdG8gc2VlIE11c3RhZmEgQWxpIG1ha2UgaGlzIHByZXNlbmNlIGtub3duIGFmdGVyIHNhdmluZyBPd2VucyBmcm9tIGEgbG9wc2lkZWQgYmVhdGRvd24gdGhpcyBwYXN0IHdlZWsuIApOZWl0aGVyIGRvIEksIGJ1dCB3aGF0IEkgZGlzbGlrZSBpcyBhIFR3byBDb2xvdXJlZCBzZXQgdGhhdCBmb3JjZXMgbWUgdG8gcGxheSB0aHJlZSBjb2xvdXIgaWYgSSB3YW50IHRoYXQgb25lIGNvbWJpbmF0aW9uIHRvIGJlIGdvb2QuIApJdCBhbiBhbGllbiBzcGlkZXIuIFRoYXQgdGFsa3MuIFRoYXQgaXMgYWxsLiIgSSB3YW50IHNwZWNpZXMgdG8gaGF2ZSBkaWZmZXJlbnQgdHlwZXMgb2YgcmVsaWdpb25zIGZyb20gdGhlIHBhc3QgYW5kIGRpZmZlcmVudCBsaWZlc3R5bGVzIHdlIGNhbiBsZWFybiBhYm91dCBpbiB0aGUgZ2FtZS4gCkhlIHBsYXlzIGEgbWFuIHdobyB1c2VkIHRvIGJlIGEgVFYgbmV3cyBhbmNob3Igd2hvIGxlZnQgdGhlIGJ1c2luZXNzIGJlY2F1c2Ugb2YgaGlzIGlsbG5lc3MsIG9ubHkgdG8gYmUgcHVzaGVkIHRvIHJldHVybiB0byB0aGUgYWlyLkl0IHdhcyBtb3N0bHkgMzAgbWludXRlcyBvZiBQYXJraW5zb24gam9rZXMgd2hpY2ggd2VyZSBhZG1pdHRlZGx5IGZ1bm55LiAKSXQgd2FzIGEgY29vbGVyIGVpdGhlciB3YXksIGJ1dCBoZSB3YXMganVzdCBXQVkgdG9vIHF1aWNrIGFuZCBlYWdlciB0byBnZXQgaXQgaW4gd2l0aCBtZS4gCkhlIG1lYW5zIHRoYXQgaGUgaGFzIGEgbGFyZ2Ugc2VsZWN0aW9uIG9mIGRpZmZlcmVudCBnYW1lIHR5cGVzLCBsaWtlIGZpZ2h0aW5nLCBkcml2aW5nLCBwbGF0Zm9ybSBldGMuLCBQb3NzaWJseSBvbiBtYW55IGRpZmZlcmVudCBraW5kcyBvZiBzeXN0ZW1zLiAKQW55d2F5LCBhZnRlciBhIGxvdCBvZiBjb25mdXNpb24sIENhcm5pdmFsIGhhZCB0aGUgbHVnZ2FnZSBicm91Z2h0IHRvIHRoZSB0ZXJtaW5hbCBhbmQgaXQgYWxsIHR1cm5lZCBvdXQgb2theSAgIEkganVzdCBkb24ndCB1bmRlcnN0YW5kIEhPVyB0aGlzIG9uZSBiYWcgZ290IGFsbCB0aGUgd2F5IGJhY2sgdG8gdGhlIGFpcnBvcnQgYW5kIHRoZW4gYWJhbmRvbmVkIGF0IHRoZSBkZXBhcnR1cmUgZ2F0ZSEKUmVkZGl0IGlzIE9CU0VTU0VEIHdpdGggdGhpcyBpZGVhIHRoYXQgOTUlIG9mIHNleCBvZmZlbmRlcnMgYXJlIGR1ZGVzIHBpc3NpbmcgaW4gcHVibGljIG9yIGdldHRpbmcgc2VudCBwaWN0dXJlcyBvZiB0aGUgYnJlYXN0cyBvZiBhIGhhcHB5IGNvbnNlbnRpbmcgZ2lybCB3aG8gaXMgMTcgeWVhcnMgYW5kIDM2NCBkYXlzIG9sZC4gVGhhdCBpcyBOT1QgdGhlIHJlYWxpdHkuIFRoYXQgaXMgdGhlIHNlbnNhdGlvbmFsaXNtIG9mIG5ld3MgYW5kIHlvdXIgb3duIGNvbmZpcm1hdGlvbiBiaWFzLi4gClNvIG1vc3Qgb2YgdGhlIHRpbWVzIHRoZXkganVzdCBsZXQgeW91IHdhbGsgb3V0IGZ1bGx5IGtub3dpbmcgeW91IHN0b2xlIHNvbWV0aGluZy4gClRoZSBmb2xsb3dpbmcgYXJlIHRoZSB2YXJpb3VzIGhhbmRzIHlvdSBjYW4gbWFrZSBpbiBmcmVlIHBva2VyIGFjY29yZGluZyB0byB0aGVpciByYW5raW5nLiBUaGVzZSBhcmUgdGhlIGZvdXIgb2YgYSBraW5kLCBmdWxsIGhvdXNlLCBhIGZsdXNoLCBzdHJhaWdodCwgdGhyZWUgb2YgYSBraW5kLCB0d28gcGFpciwgb25lIHBhaXIsIGFuZCBoaWdoIGNhcmQuIEZvdXIgb2YgYSBraW5kIGlzIHdoZW4geW91IGhhdmUgdGhlIG9uZSB2YWx1ZSBjYXJkIG9mIHRoZSBkaWZmZXJlbnQgc3VpdHMsIHN1Y2ggYXMgdGhlIGFjZSBvZiBoZWFydHMsIGRpYW1vbmRzLCBzcGFkZXMsIGFuZCBjbHVicy4gQSBmdWxsIGhvdXNlIGlzIHdoZW4geW91IGFyZSBob2xkaW5nIHRocmVlIHN1aXQgY2FyZHMgb2Ygb25lIHZhbHVlIGFuZCBhIHBhaXIsIHN1Y2ggYXMgdGhlIGtpbmcgb2Ygc3BhZGVzLCBoZWFydHMgYW5kIGRpYW1vbmRzIHBsdXMgc2l4IG9mIGhlYXJ0cyBhbmQgZGlhbW9uZHMuIEZsdXNoZXMgaXMgdGhlIGNhcmQgaGFuZCB3aGVuIHlvdSBoYXZlIGZpdmUgY2FyZHMgb2YgdGhlIHNhbWUgc3VpdCBhdCBubyBwYXJ0aWN1bGFyIG9yZGVyLCBzdWNoIGFzIHR3byBvZiBoZWFydHMsIHNpeCBvZiBoZWFydHMsIGFjZSBvZiBoZWFydHMsIG5pbmUgb2YgaGVhcnRzIGFuZCBraW5nIG9mIGhlYXJ0cy4gWW91IGNhbiBhbHNvIGhhdmUgYSByZWd1bGFyIHN0cmFpZ2h0IHdoZW4geW91IGhhdmUgZGlmZmVyZW50IHN1aXRzIHRoYXQgZm9ybSBhIGNvbnNlY3V0aXZlIHJhbmtpbmcgb2YgdGhlIGNhcmRzIChzdWNoIGFzIHNldmVuIG9mIGNsdWJzLCBlaWdodCBvZiBzcGFkZXMsIG5pbmUgb2YgZGlhbW9uZHMsIHRlbiBvZiBkaWFtb25kcywgYW5kIGphY2sgb2YgaGVhcnRzKS4KQm9iIGlzIHN1cnZpdmVkIGJ5IGhpcyBzaXN0ZXIgUm9iZXJ0YSBSYXViYWNoICh0aGUgbGF0ZSBGcmVkKSBhbmQgaGlzIGJyb3RoZXIgQmFycmllIFdpbHNvbiAoU3VzYW4pLiAKU2VlIHRoZSBwcm9ibGVtIGFyZWFzLiAKSXMgYSAxIHBlcmNlbnQgcmVkdWN0aW9uIGluIGEgY2FyZGlvdmFzY3VsYXIgZXZlbnQgd29ydGggYWxsIHRoZSBwb3RlbnRpYWwgc2lkZSBlZmZlY3RzIChUYWJsZSAyIGxpbmVkIG9uIERyLiBTZWFtYW4gbmFtZSBhYm92ZSkgYXNzb2NpYXRlZCB3aXRoIHN0YXRpbiB1c2U/ClRoZSBidXJuIG1hcmsgd2FzIG1hZGUgd2hpbGUgaGUgd2FpdGVkLi4gCk9uZSB3ZWVrIEkgbm90aWNlZCB0aGF0IHRoZSBtb2xlIGxvb2tlZCBhIGxpdHRsZSBiaXQgbGFyZ2VyIGJ1dCBJIGhhZCBtZW50aW9uZWQgaXQgdG8gaGVyIGJlZm9yZSBhbmQgc2hlIGtuZXcgYWJvdXQgaXQsIHNoZSBoYWQgZ290dGVuIGl0IGNoZWNrZWQgb3V0LCBldGMuIApQZXIgUnVkZXJib290IG9kZXIgS2FudSBrYW5uIGRlciBCZXN1Y2hlciBkYXMgV2Fzc2VyIHRyZWliZW4sIFNwb3J0YW5nZWxuIGlzdCBlYmVuZmFsbHMgbSBkZXIgUmVpdHN0YWxsIGxpZWd0IGhpbnRlciBkZW0gSG90ZWwuIE9kZXIgV2VsbG5lc3MuIApUaGUganVkZ2VtZW50cyBvZiB0aGUgdm9sdW50ZWVycyB3ZXJlIG11Y2ggbW9yZSBhY2N1cmF0ZSBiYXNlZCB1cG9uIHRoZSBwbGF5ZXJzJyBhcm0gbW92ZW1lbnRzLgpIb3dldmVyLCB0aGlzIG1heSBkZWVwZW5zIGZyb20gcG9ydGFsIHRvIHBvcnRhbC4gWW91IG1heSBhbHNvIGNvbWUgYWNyb3NzIHNvbWUgcG9ydGFsIHdobyBtYXkgYXNrIGZvciBzaWduaW5nIGFtb3VudCBiZWZvcmUgeW91IHBsYXkgdGhlIGdhbWUuIEl0IGlzIHN1Z2dlc3RlZCB0aGF0IGV2ZW4gYmVmb3JlIHlvdSBzdGFydCBwbGF5aW5nIG9uIHdhZ2VyIHlvdSBzaG91bGQgZ2FpbiBzdWZmaWNpZW50IGtub3dsZWRnZSBhbmQgZXhwZXJpZW5jZSBvZiB0aGUgZ2FtZS4gCkEgbGFyZ2UgcG9ydGlvbiBvZiBSdXNzaWFuIG9pbCBib3VuZCBmb3IgV2VzdGVybiBFdXJvcGUgcGFzc2VzIHRocm91Z2ggVWtyYWluZS4gQW5kIHR3aWNlIGluIHRoZSBwYXN0IGRlY2FkZSwgaW4gMjAwNiBhbmQgMjAwOSwgUnVzc2lhIGhhcyB0dXJuZWQgb2ZmIG5hdHVyYWwgZ2FzIHNoaXBtZW50cyB0byBVa3JhaW5lIGR1cmluZyBkaXNwdXRlcyBvdmVyIGdhcyBwcmljZXMuIApIb3dldmVyIEkgYmUgZGFtbmVkIG9mIEkgY2FuIG1ha2UgbXlzZWxmIGhlYXJkIGl0IHdhcyBzbyBlYXN5IHRvIGJvb20gbXkgd2F5IGludG8gcGVvcGxlIGVhciBkcnVtcyB0aGF0IEkgc29tZXRpbWVzIHRlbXB0ZWQgdG8ganVzdCBEYWQgYmxhc3QgYXQgdGhlbSB3aGVuIHRoZXkgY2FuIGhlYXIgbWUuIApCdXQgc2F5aW5nICJpdCdzIHNvbWUgY3JhenkgdGVjaG5vbG9neSIgd2hlbiB0aGUgZ3V5IGFib3ZlIHlvdSBleHBsYWluZWQgd2hhdCBpdCB3YXMgaXMganVzdCBiZWluZyBkaXNpbmdlbnVvdXMuSSBub3QgY2xvc2VkIG9mZiB0byBhbHRlcm5hdGl2ZSBleHBsYW5hdGlvbnMgdGhhbiBteSBvd24gdGhlb3J5LCBhbnlvbmUgaXMgbW9yZSB0aGFuIHdlbGNvbWUgdG8gYnJpbmcgaW4gaW5mb3JtYXRpb24uIEkgZG9uIGtub3cgd2hhdCB0aGUgZnVjayBpdCB3YXMsIEkganVzdCBzaG93ZWQgaXQgdG8gbXkgYm9zcyBhbmQgaGUgdG9sZCBtZSB3aGF0IGhlIHRob3VnaHQgaXQgd2FzLiAKVGhpcyBsZWFkIHRvIDYgbW9udGhzIG9mIHVuZW1wbG95bWVudCwgdGhlIGVtcHR5aW5nIG9mIG15IHNhdmluZ3MgdG8gc3RheSBhZmxvYXQsIGFuZCBhIHRvdGFsIGNhcmVlciBzaGlmdC4uIApBbG9ycyBtZXNkYW1lcyBldCBtZXNzaWV1cnMgbGVzIGx1cywgb3NleiAhIE9zZXogc291dGVuaXIgbGEgY3JhdGl2aXQgc2FucyByc2VydmUgISBMYWlzc2V6IG5vdXMgbm91cyBlbnRob3VzaWFzbWVyICEgT24gdmV1dCB5IGNyb2lyZSAgY2V0dGUgdXRvcGllIHRvdXRlIHZlcnRlIGNhciBpbCB5IGEgcHJpbCBlbiBsYSBkZW1ldXJlLiAKVGhlIHNraW5ueTogVGhlIHRvcCBuaW5lIG1ha2UgdXAgdGhlIGZpbmFsIHRhYmxlLiBUaGUgdG9wIGZpbmlzaCBieSBhIHdvbWFuIGluIGEgV29ybGQgU2VyaWVzIG1haW4gZXZlbnQgd2FzIGJ5IEJhcmJhcmEgRW5yaWdodCAoZmlmdGggaW4gMTk5NSksIHdoZW4gdGhlIHRvdXJuYW1lbnQgaGFkIDI3MyBlbnRyYW50cy4gU3VzaWUgSXNhYWNzIHBsYWNlZCAxMHRoIGluIDE5OTgsIHdoZW4gdGhlcmUgd2VyZSAzNTAgZW50cmFudHMuIFllcywgcGx1cyAxMTkuIGFuZCBvbmUgZWFjaCBmcm9tIENhbmFkYSwgRGVubWFyaywgSW5kb25lc2lhIGFuZCBSdXNzaWEuIEFyZ2VudGluYSAoODl0aCBwbGFjZSksIEJyYXppbCAoNTV0aCBwbGFjZSksIFJvbWFuaWEgKDIybmQgcGxhY2UpIGFuZCBWZW5lenVlbGEgKDMzcmQgcGxhY2UpIGFsbCBoYWQgdGhlaXIgYmVzdCBtYWluIGV2ZW50IGZpbmlzaGVzIHRvIGRhdGUgaW4gbGFzdCB5ZWFyJ3MgdG91cm5hbWVudC4gWWVzLCBwbHVzIDc2MC4KQWZ0ZXIgc2NvcmluZyBhZ2FpbiBsYXRlIGluIHRoZSBmaXJzdCBvbiBhIGZsdWt5IGNhcm9tLCB0aGUgZm91cnRoIGxpbmUgbGVmdCB3aW5nZXIgY29tcGxldGVkIGhpcyBiaWcgbmlnaHQgMzoxNSBpbnRvIHRoZSB0aGlyZCBwZXJpb2Qgb24gYSBsb25nIHNob3QgZnJvbSB0aGUgc2lkZWJvYXJkcyB0aGF0IHNsaXBwZWQgcGFzdCBEYXZpZCBSaXR0aWNoIGZvciBoaXMgMTJ0aCBnb2FsLiAKU2luY2VyZWx5IEVtaWxpbyBhbmQgQmFyYiBWaWxsYW5pLi4gClRoZSBmZXN0aXZpdGllcyBzdGFydCBUdWVzZGF5IGFzIEZDIEJhcmNlbG9uYSBhbmQgQnJhemlsIG5hdGlvbmFsIGZvb3RiYWxsIHN0YXIgTmV5bWFyIEpyLiwgd2hvIGFsc28gZW5qb3lzIHBsYXlpbmcgY29tcGV0aXRpdmUgcG9rZXIsIHdpbGwgaG9zdCBhIGNoYXJpdHkgZXZlbnQgYWxvbmdzaWRlIFBva2VyU3RhcnMgZm9yIGhpcyBjaGFyaXR5LCB0aGUgTmV5bWFyIEpyLiBQcm9qZWN0IEluc3RpdHV0ZSwgYW4gaW5pdGlhdGl2ZSB0aGF0IHN1cHBvcnRzIHRoZSBlZHVjYXRpb24gb2YgdW5kZXJwcml2aWxlZ2VkIGNoaWxkcmVuLiAKTWF5YmUgY2xvc2VyIHRvIDE5ODAgdGhhbiAxOTY2ICAgbm90IHN1cmUgdGhvdWdoLiBCb3R0bGUgc2hvd3MgRWF1IGRlIFRvaWxldHRlLCBidXQgSSB1biBzdXJlIGlmIGl0IHdhcyBvcmlnaW5hbGx5IGxhYmVsZWQgYXMgRWRUIG9uIHRoZSBib3R0bGUgaW4gdGhlIHZlcnkgYmVnaW5uaW5nLkhvd2V2ZXIsIGFzaWRlIGZyb20gdGhlIGZhY3QgdGFraW5nIGJvdGggc3Vic3RhbmNlcyB3b3VsZCBiZSBzb21ldGhpbmcgSSdkIG5ldmVyIHRoaW5rIG9mIGFuZCBoaWdobHkgdW5saWtlbHkgdG8gYmUgcHJlc2NyaWJlZCBhdCB0aGUgc2FtZSB0aW1lIGluIHRoZSByZXN0cmljdGl2ZSBjb3VudHJ5IEknbSBpbiwgSSdtIGZhbWlsaWFyIHdpdGggdGhlICJjcmFzaCIgZWZmZWN0IG9mIHdoZW4gbXkgUnggQ29uY2VydGEgbGVhdmVzIHRoZSBzeXN0ZW0uSWYgYm90aCBtZWRzIGFyZSBiZWluZyBwcmVzY3JpYmVkLCBpdCdzIGEgbWF0dGVyIHRvIHRha2UgdG8geW91ciBwaHlzaWNpYW4uIApDb25zdW1wdGlvbiBvZiB0aGUgd2F0ZXIgaGFzIG5vdCBiZWVuIGxpbWl0ZWQgdG8gaHVtYW5zOiB0aG9yb3VnaGJyZWRzIHN1Y2ggYXNTZWNyZXRhcmlhdCwgTmFzaHVhLCBLZWxzbywgQm9sZCBSdWxlciwgYW5kIFN1bmRheSBTaWxlbmNlIHdlcmUgdHJhaW5lZCBvbiB0aGlzIHNwcmluZyB3YXRlci4iLiAKQXQgdGhlIGVuZCBvZiBhIENvbmZpcm1hdGlvbiBvZiBFbGVjdGlvbiBjZXJlbW9ueSBhdCBTdC4gUGF1bCdzLCBXZWxieSB0b29rIGFuIG9hdGggb2YgbG95YWx0eSB0byB0aGUgQnJpdGlzaCBtb25hcmNoIHdpdGggdGhlIHdvcmRzLCAiSSwgSnVzdGluIFBvcnRhbCBXZWxieSwgZWxlY3RlZCBBcmNoYmlzaG9wIG9mIENhbnRlcmJ1cnksIGRvIHN3ZWFyIHRoYXQgSSB3aWxsIGJlIGZhaXRoZnVsIGFuZCBiZWFyIHRydWUgYWxsZWdpYW5jZSB0byBIZXIgTWFqZXN0eSBRdWVlbiBFbGl6YWJldGggSUksIGhlciBoZWlycyBhbmQgc3VjY2Vzc29ycyBhY2NvcmRpbmcgdG8gbGF3LiAKSSBsZWFybmVkIHRvIGp1c3QgaWdub3JlIHRoYXQuIApIYWthbGkgaW52b2x2ZXMgdGhlIGFwcGxpY2F0aW9uIG9mIGEgd2FybSBtaXh0dXJlIG9mIGNhY3R1cy4gVGhlIHRyZWF0bWVudCBzdXBwb3NlZGx5IHJlbW92ZXMgdG94aW5zIGFuZCByZWh5ZHJhdGVzIHRoZSBza2luLCBsZWF2aW5nIHlvdSBmZWVsaW5nIHJlanV2ZW5hdGVkLiAKVXN1YWxseSB0aGF0J3Mgc2hvd24gYnkgdGhlIHBlb3BsZSBsaXZpbmcgc2VwYXJhdGUgYW5kIGFwYXJ0IGluIGV4Y2VzcyBvZiBvbmUgeWVhci4gCkkgYWxzbyBub3QgaW52ZXN0ZWQgaW4gYSB3YXIgYmV0d2VlbiBhbGllbnMoPykgYWZ0ZXIgSSBqdXN0IHdhdGNoZWQgaGFsZiB0aGUgVW5pdmVyc2UgdHVybiB0byBkdXN0Li4gCk92ZXJ2aWV3IGZvciBob3JueW51bgpBbmQgdGhlbiBiZXQgYSAlIG9mIHRoZSBwb3QgYmFzZWQgb24gd2hhdCB5b3UgdGhpbmsgdmlsbGlhbiBoYXMuIGZvciBleGFtcGxlLCBpZiBoZSBoYXMgYSBmbHVzaCBhbmQgaSBkb250IGhhdmUgYW55dGhpbmcgZm9sZC4gaWYgaGUgaGFzIGZsdXNoIGFuZCBpIGhhdmUgYSBiZXR0ZXIgZmx1c2ggYmV0IHBvdCBvciBkb3VibGUgcG90IHByb2JhYmx5LiBpZiBoZSBoYXMgMiBwYWlyIG9uIGEgcG9zc2libGUgZmx1c2ggYm9hcmQsIGFuZCBpIGhhdmUgYSBmbHVzaCBtYXliZSBiZXQgaGFsZiBwb3QuCkplIG5lIHN1aXMgcGFzIGR1IHRvdXQgZCBBIG1vbiBhdmlzIGwgImplIG5lIHN1cHBvcnRlcmFpIHBhcyBkIHVuIHRlbCBmYXJkZWF1ICBncmVyIiBlc3QgY29tcGx0ZW1lbnQgaXJyZWNldmFibGUuIEF2b2lyIHVuIGVuZmFudCBkYmlsZSwgb3UgcXVpIHNlIGRyb2d1ZSwgb3UgdW4gcGV1IHRyb3AgcmViZWxsZSwgY2Ugc29udCBhdXNzaSBkZXMgY2hvc2VzIHF1aSBzb250IGxvdXJkZXMgIGdyZXIsIG1haXMgY2UgbiBwYXMgcG91ciBjZXR0ZSByYWlzb24gcXUgdG9scmUgbCBBIHBhcnRpciBkdSBtb21lbnQgbyBvbiBmYWl0IGRlcyBlbmZhbnRzLCBvbiBzICBzIGQgcXVvaXF1IGxldXIgYXJyaXZlLiBFbGxlIHBhcmxlIGRlIGRiYXQgc3VyIGwgbWFpcyBzYW5zIHRyYW5jaGVyIGxlIGRiYXQsIGlsIG1lIHNlbWJsZSBxdWUgbCBzdXBwb3NlIGF1IG1vaW5zIGxlIGNvbnNlbnRlbWVudCBkZSBsYSBwZXJzb25uZSBldXRoYW5hc2llLCBvciB1biBlbmZhbnQgZGUgMyBhbnMgbiBwYXMgZW4gbWVzdXJlIGRlIGNvbnNlbnRpci4gCjMuIFBhcmsgTGFuZSBpcyB0aGUgbG93ZXN0IHZpc2l0ZWQgc3F1YXJlIGR1ZSB0byBpdHMgbG9jYXRpb24gb24gdGhlIGJvYXJkLiAKV2hldGhlciB5b3UgYXJlIGhhcmRjb3JlLCBjYXN1YWwsIHVsdHJhIGNhc3VhbC4gCkkgZ2V0IGZhcnRoZXIgYW5kIGZhcnRoZXIgZG93biBhbmQgSSdtIHRoaW5raW5nLiAKVGhpcyBnaXZlcyB5b3UgYW4gaW5kaWNhdGlvbiBob3cgYXZhbGFuY2hlcyBoYXZlIGdyb3duIGxhcmdlciBhbmQgbGFyZ2VyIHdpdGggZWFjaCBiaWcgbG9hZGluZyBldmVudC4gV2UgYXJlIHNlZWluZyB0aGUgYmlnZ2VzdCBhdmFsYW5jaGVzIG9mIHRoZSBzZWFzb24sIGFuZCBpbiBzb21lIGNhc2VzIHRoZSBhdmFsYW5jaGVzIGFyZSBydW5uaW5nIGFzIGJpZyBhcyB0aGV5IGhhdmUgaW4gZGVjYWRlcy4gU29tZSB2ZXJ5IGJpZyBzbGlkZXMgZnJvbSBKb25lcyBQYXNzLCB0byBCcmVja2VucmlkZ2UsIHRvIEZyZW1vbnQgUGFzcyBpcyBqdXN0IGEgc21hbGwgc2FtcGxlIGlsbHVzdHJhdGluZyB0aGF0IHRoZSBjb25jZXJuIGlzIHdpZGVwcmVhZCBhY3Jvc3MgdGhlIEZyb250IFJhbmdlIGFuZCBWYWlsIFN1bW1pdCB6b25lcy4KVG8gZGlzICBjdXNzIGpvYiBvcHBvcnR1bml0aWVzIGluIExvICBybmluIENvdW50eS4gU3R1ZGVudHMgYXJjIGFza2VkIHRvIGNoZWNrIGluIGF0IHRoZSBtYWluIGxvYmJ5IG9mIHRoZSBhZCAgbWluaXN0cmF0aW9uIGJ1aWxkaW5nLiBDb21wYSAgbnkgaW5mb3JtYXRpb24gaW4gdGhlIGZvcm0gb2YgYSBwYW1waGxldCB3aWxsIGJlIG1hZGUgYXZhaWxhYmxlIHRvIHN0dWRlbnRzIGF0IHRoYXQgdGltZS4gCklmIHRoZXJlIGlzIGEga2lkLCBpdCB3aWxsIGJlIGEgc2l0dWF0aW9uIGxpa2UgeW91ciBmcmllbmQgd2l0aCB0aGUgU3dpc3MgRldCIGhhdmluZyBhIGNoaWxkIHRvZ2V0aGVyLgpUaGluZ3MgZ2V0IGV2ZW4gbW9yZSBkYW5nZXJvdXMgd2l0aCBOZXRhbnlhaHUgbGl0ZXJhbGx5IGFwcHJvYWNoaW5nIEhvbG9jYXVzdCBkZW5pYWwuIEluIDIwMTUgaGUgY2xhaW1lZCB0aGF0IEhpdGxlciBvbmx5IHdhbnRlZCB0byBleHBlbCB0aGUgSmV3cyBmcm9tIEdlcm1hbnksIGJ1dCB0aGF0IGl0IHdhcyB0aGUgUGFsZXN0aW5pYW4gZ3JhbmQgbXVmdGkgKElzbGFtaWMgbGVhZGVyKSBvZiBKZXJ1c2FsZW0gd2hvLCBkdXJpbmcgYSB0cmlwIHRvIEJlcmxpbiwgY29udmluY2VkIEhpdGxlciB0byBraWxsIHRoZW0uIEJpYmkgbGF0ZXIgY2xhcmlmaWVkIGhpcyBzdGF0ZW1lbnRzIGFmdGVyIGNvbmRlbW5hdGlvbiBhbmQgcHJlc3N1cmUuIEkgY2Fubm90IGltYWdpbmUgYW55dGhpbmcgc2ltaWxhciBpbiBBcm1lbmlhbiBwb2xpdGljcywgYW5kIHRoYXQgaXMgYSBnb29kIHRoaW5nLgpUaGlzIGlzIHdoeSBJIGhhdmUgYSBoYXJkIHRpbWUgcmVhZGluZyBBbGV4YW5kZXIgSGFtaWx0b24ncyB3cml0aW5nIGNvbXBhcmVkIHRvIHRoYXQgb2YgaGlzIGNvbnRlbXBvcmFyaWVzLiBIZSBkb2Vzbid0IGp1c3QgdXNlIGJpZyB3b3JkcywgaGUgY29uc3RydWN0cyBzZW50ZW5jZXMgaW4gc3VjaCBhIGZsb3dlcnksIHJvdW5kIGFib3V0IHdheSB0aGF0IEkgY2FuIHVuZGVyc3RhbmQgd2h5IHBlb3BsZSB0aG91Z2h0IGhlIGNhbWUgZnJvbSBhbm90aGVyIHBsYW5ldC4gQ29tcGFyZWQgdG8gdGhlIHdyaXRpbmdzIG9mIEpvaG4gQWRhbXMsIHdobyB3YXMganVzdCBhcyBlZHVjYXRlZCBhcyBIYW1pbHRvbiwgYnV0IHdobyB3cm90ZSBpbiBzdWNoIGEgY2xlYXIgYW5kIHJlbGF0YWJsZSB3YXkgdGhhdCBhIGNoaWxkIGNvdWxkIHJlYWQgdGhlbSB0b2RheSBhbmQga25vdyBleGFjdGx5IHdoYXQgaGUgbWVhbnQsIHdoZXJlYXMgYW55dGhpbmcgd3JpdHRlbiBieSBIYW1pbHRvbiByZXF1aXJlcyBnb2luZyB0aHJvdWdoIGxpbmUgYnkgbGluZSB3aXRoIGZvb3Rub3RlcyBhbmQgYSB0ZWFjaGVyIGV4cGxhaW5pbmcgd2hhdCBldmVyeSB0d2lzdCBvZiBwaHJhc2UgbWVhbnQsIGxpa2Ugd2hlbiB5b3UgcmVhZCBTaGFrZXNwZWFyZSBpbiA5dGggZ3JhZGUuLiAKTWlzcyBDYW1pbGxhIFNoYW5kQ2FtaWxsYSBSb3NlbWFyeSB3YXMgYm9ybiBpbiBMb25kb24sIEVuZ2xhbmQsIG9uIDE3IEp1bHksIDE5NDcuIFNoZSBncmV3IHVwIGluIHJ1cmFsIFN1c3NleCBhbmQgd2FzIGVkdWNhdGVkIGF0IHRoZSBRdWVlbnMgR2F0ZSBTY2hvb2wgaW4gU291dGggS2Vuc2luZ3RvbiwgYmVmb3JlIGZpbmlzaGluZyBzY2hvb2wgaW4gU3dpdHplcmxhbmQgYW5kIEZyYW5jZS4gSGVyIG9ubHkgY2xhaW0gdG8gZmFtZSB3YXMgdGhhdCBzaGUgd2FzIGEgZGVzY2VuZGFudCBvZiBBbGljZSBLZXBwZWwsIHdobyBiZWNhbWUgS2luZyBFZHdhcmQgVklJJ3MgbWlzdHJlc3Mgd2hlbiBoZSB3YXMgUHJpbmNlIG9mIFdhbGVzLiAKU2l6aW5nIDogUmFuY291cnQgcHJvdmlkZXMgc2V2ZXJhbCBnb29kIG9wdGlvbnMgZm9yIGZpZ3VyaW5nIG91dCB5b3VyIGFwcHJvcHJpYXRlIHNpemUgICB0cmlhbCBwcm9ncmFtcywgcHJpbnRhYmxlIGNoYXJ0cywgcmVzcG9uc2l2ZSBjdXN0b21lciBzZXJ2aWNlLCBldGMuICAgb2Ygd2hpY2ggSSB0b29rIGFkdmFudGFnZSBvZiBub25lLiBJJ20gYW4gMTEuNSBpbiBtb3N0IHNob2VzIChtb3N0IEFFIGxhc3RzLCBRdW9kZHksIEdyYW50IFN0b25lIExlbywgc3BlcnJ5KSBhbmQgYW0gYmV0d2VlbiBhIEQgYW5kIEUgdXN1YWxseS4gSSB3ZW50IHdpdGggMTEuNUQgb24gdGhlc2UuIE91dCBvZiB0aGUgYm94IHRoZXkgd2VyZSB1bmNvbWZvcnRhYmx5IHRpZ2h0LCBidXQgdGhleSd2ZSBzdHJldGNoZWQgdG8gdGhlIHBvaW50IHdoZXJlIHRoZXknZCBiZSB0b28gbG9vc2UgdG8gd2VhciB3aXRob3V0IHNvY2tzLiBMdWNraWx5IEkgd2VhciB0aGVtIHdpdGggc29ja3MgYW5kIHRoZXkgZml0IGZpbmUsIGJ1dCBhbnkgbW9yZSBzdHJldGNoaW5nIGFuZCBJJ2xsIGJlIHVwIHNoaXQgY3JlZWsgc2FucyBwYWRkbGUuCihBUCBQaG90by9EYXZpZCBaYWx1Ym93c2tpKS4gClJ1YnkgV2Fsc2gncyB2aWN0b3J5IG9uIEJpZyBCdWNrJ3MgaW4gdGhlIExhZGJyb2tlcyBXb3JsZCBIdXJkbGUgbW92ZWQgaGltIG9uIHRvIGZpdmUgd2lubmVycyBmb3IgdGhlIHdlZWsgYW5kIGhpcyBuZWFyZXN0IHJpdmFsIGlzIEJhcnJ5IEdlcmFnaHR5LCB3aG8gcmVjb3JkZWQgYSBkb3VibGUgb24gdGhlIG9wZW5pbmcgZGF5IG9mIHRoZSBGZXN0aXZhbC4uIApEYXlsaWdodCBTYXZpbmcgMjAxOTogV2hlbiBkbyBjbG9ja3MgZ28gZm9yd2FyZCBpbiB0aGUgVVM/UmVwcmlldmUgZnJvbSB0aGUgbG9uZyBob3VycyBvZiBkYXJrbmVzcyBpcyBqdXN0IGFyb3VuZCB0aGUgY29ybmVyLCB3aGVuIHNwcmluZyBicmluZ3Mgd2l0aCBpdCBEYXlsaWdodCBTYXZpbmcgVGltZSBhbmQgdGhlIHR1cm5pbmcgZm9yd2FyZCBvZiB0aGUgY2xvY2tzLiBUbyBtYWtlIHRoZSB0aW1lIGNoYW5nZSBlYXNpZXIsIHdoaWNoIGNhbiB0YWtlIHlvdXIgYm9keSB1cCB0byBhIHdlZWsgdG8gYWRqdXN0IHRvLCBuZXVyb2xvZ2lzdCBhbmQgc2xlZXAgZXhwZXJ0IG9mIHRoZSBDbGV2ZWxhbmQgQ2xpbmljIFRpbmEgV2F0ZXJzLCBNRCwgc3VnZ2VzdHMgbWFraW5nIHNtYWxsIGNoYW5nZXMgaW4gdGhlIHdlZWtzIGxlYWRpbmcgdXAgdG8gdGhlIHN0YXJ0IG9mIERheWxpZ2h0IFNhdmluZy4gSXQgaXMgYWxzbyBpbXBvcnRhbnQgdG8gcmVtZW1iZXIgdGhhdCBEYXlsaWdodCBTYXZpbmcgVGltZSBpcyBub3QgZm9sbG93ZWQgYnkgc29tZSBzdGF0ZXMgICBzbyB0aGUgZXhpc3RpbmcgdGltZSBkaWZmZXJlbmNlcyBpbmNyZWFzZSBieSBhbiBob3VyIGluIHN0YXRlcyB0aGF0IGRvIG5vdCB0dXJuIGNsb2NrcyBmb3J3YXJkLgpJbCBhIHBlbnMgdHJvdXZlciBsZSBzYWx1dCB2aXMgIHZpcyBkJ3VuZSBmZW1tZSBxdWkgbHVpIHBvdXJyaXQgbGEgdmllIGRhbnMgY2V0dGUgdmlkbyBldCBpbCBtZSBwYXJsZSBkJ3VuZSBhdXRyZSB2aWRvLCB0b3VybmUgYXZlYyBKYWRlIEFsbGdyZSBxdWUgamUgY29ubmFpcyBxdWUgY29tbWUgbCdhdXRldXIgZCd1bmUgdGhzZSBpbnRyZXNzYW50ZSBzdXIgbGVzIGVtcGxvaXMgdGhyYXBldXRpcXVlIGRlIGwnYXJnaWxlLiAKSWwgZXN0IGdhbGVtZW50IGNvbnNpZHIgY29tbWUgdW4gc3BlY3RyZSBhbnRpbWljcm9iaWVuIGNvbnRyZSBsZXMgaW5mZWN0aW9ucyBiYWN0cmllbm5lcyBldCBsZXMgY2hhbXBpZ25vbnMsIGVmZmljYWNlIGNvbnRyZSBsZXMgcGFyYXNpdGVzIGludGVybmVzIGV0IGxlcyB2ZXJzLCBpbCByZ3VsZSBsYSB0ZW5zaW9uIGFydHJpZWxsZSB0cm9wIGxldmUgZXQgZXN0IHVuIGFudGlkcHJlc3NldXIsIHRvdXQgZW4gY29tYmF0dGFudCBsZSBzdHJlc3MgZXQgbGVzIHRyb3VibGVzIG5lcnZldXguIApWaWJyYXRpb24gZXhlcmNpc2UgaXMgYW5vdGhlciB0ZWNobm9sb2d5IHRoYXQgaGFzIG1hZGUgaXRzIHdheSBpbnRvIGJhbGFuY2UsIHByb3ByaW9jZXB0aW9uIGFuZCBzdHJlbmd0aCB0cmFpbmluZyBmb3IgdGhlIGFnaW5nIHBvcHVsYXRpb24uIFlvdXIgZ3ltIG1heSBldmVuIGhhdmUgdGhlc2UgdmlicmF0aW9uIHR5cGUgcGxhdGZvcm1zLiBZb3UgbWF5IGhhdmUgc2VlbiB5b3VyIGZhdm9yaXRlIHByb2Zlc3Npb25hbCBhdGhsZXRpYyB0ZWFtcyB0cmFpbmluZyBvbiB2aWJyYXRpb24gcGxhdGZvcm1zLgpUaGF0IGlzIHRoZSByZWFzb24gd2h5IG1vc3QgZ2FtZXMgd2l0aCBhIHZvaWNlZCBwcm90YWdvbmlzdCB1c3VhbGx5IGhhdmUgdG8gbGltaXQgdGhlaXIgcmVzcG9uc2VzLCB3aGljaCBjYW4gd29yayB3ZWxsIHdpdGggdGhlIHJpZ2h0IGtpbmQgb2YgZ2FtZS4uIApUaG91Z2gsIHRvZGF5LCBvbmxpbmUgY2FzaW5vcyBhcmUgc3RpbGwgdmVyeSBwb3B1bGFyLCB0aGUgZ2FtYmxpbmcgd29ybGQgaXMgc3RpbGwgbm90IGRvbmUgZXZvbHZpbmcuIFZpcnR1YWxseSBhbGwgbmV3IGNhc2lub3MgYmVpbmcgbGF1bmNoZWQgb25saW5lIGFyZSBvZmZlcmluZyBhIHNlcGFyYXRlIGNvbGxlY3Rpb24gb2YgbW9iaWxlIGdhbWVzLiBJbiBmYWN0LCBzb21lIG1vYmlsZSBvbmx5IGNhc2lub3MgaGF2ZSBldmVuIGJlZ2FuIHBvcHBpbmcgdXAsIG1lYW5pbmcgdGhhdCB0aGV5IGFyZSBhY2Nlc3NpYmxlIG9ubHkgd2l0aCB0aGUgdXNlIG9mIGEgbW9iaWxlIGRldmljZS4gTW9iaWxlIGdhbWluZyByZWFsbHkgYmVnYW4gbWFraW5nIHdhdmVzIHdpdGggQXBwbGUncyBpbnRyb2R1Y3Rpb24gb2YgdGhlIGlQaG9uZSBiYWNrIGluIDIwMDcsIGFuZCBHb29nbGUncyBBbmRyb2lkIGluIDIwMDguIE1vc3Qgb2YgdG9kYXkncyBtb2JpbGUgZ2FtZXMgYXJlIGNvbXBhdGlibGUgd2l0aCBBbmRyb2lkIGFuZCBpT1MgZGV2aWNlcywgYXMgbGVhZGluZyBvbmxpbmUgc29mdHdhcmUgcHJvdmlkZXJzIGhhdmUgYmVlbiBkZWRpY2F0aW5nIG11Y2ggb2YgdGhlaXIgdGltZSB0byBkZXZlbG9waW5nIGNvbnRlbnQgdGhhdCBjYW4gYmUgdXNlZCB3aXRoIHN1Y2ggaGFuZGhlbGQgZGV2aWNlcywgZXh0ZW5kaW5nIGZyb20gbW9iaWxlIHBob25lcyB0byB0YWJsZXRzIGFzIHdlbGwuIGdhbWVycyBjYW4gbG9vayBmb3J3YXJkIHRvIG1vYmlsZSB0aXRsZXMgZnJvbSBzb2Z0d2FyZSBnaWFudHMgc3VjaCBhcyBSaXZhbCBHYW1pbmcsIFJlYWx0aW1lLCBhbmQgQmV0c29mdCwgd2hpbGUgb3RoZXJzLCBsaWtlIE1pY3JvZ2FtaW5nLCBQbGF5dGVjaCwgTmV0RW50LCBhbmQgSUdUIGFyZSBjYXRlcmluZyB0byBvdGhlcnMgYWNyb3NzIHRoZSBnbG9iZS4gTXVjaCBsaWtlIHRoZSBhcHBlYWwgdG8gb25saW5lIGNhc2lubyBnYW1pbmcsIHdoYXQgZHJhd3MgcGxheWVycyB0byB0aGUgbW9iaWxlIHNjZW5lIGlzIGNvbnZlbmllbmNlLiBCb3RoIGxhbmQgYmFzZWQsIGFuZCBvbmxpbmUgY2FzaW5vcyBmb3JjZSBwbGF5ZXJzIHRvIGJlIGluIG9uZSBwbGFjZSB3aGVuIHRoZXkgZmVlbCB0aGUgdXJnZSB0byBwbGF5LiBNb2JpbGUgZ2FtaW5nIG9wZW5zIHVwIGEgd2hvbGUgbmV3IHdvcmxkIG9mIG9wcG9ydHVuaXRpZXMsIG5vdyBhbGxvd2luZyBpbmRpdmlkdWFscyB0byBhY2Nlc3MgdGhlaXIgZmF2b3JpdGUgZ2FtZXMgd2hpbGUgb24gdGhlIGdvLiBPbmUgY2FuIGJlIG9uIGEgbHVuY2ggYnJlYWsgYXQgd29yaywgd2FpdGluZyB0byBiZSBjYWxsZWQgYXQgdGhlIGRvY3RvcidzIG9mZmljZSwgb3Igc2l0dGluZyBvbiB0aGUgdG9pbGV0LCBhbmQgYmUgYWJsZSB0byBwdWxsIG91dCB0aGVpciBtb2JpbGUgcGhvbmUgb3IgdGFibGV0LCBhbmQgYmVnaW4gcGxheWluZy4gVGhlIHNhbWUgcnVsZXMgc3RpbGwgYXBwbHk7IHRoZXJlIGlzIG1vbmV5IHRvIGJlIHdvbiwgcHJvbW90aW9ucyB0byB0YWtlIGFkdmFudGFnZSBvZiwgYW5kIHJld2FyZHMgdG8gYmUgYWNjdW11bGF0ZWQuIE1vYmlsZSBnYW1pbmcgbWFrZXMgcGxheSBtb3JlIGNvbnZlbmllbnQsIGFuZCBpbiB0b2RheSdzIGFnZSwgdGhhdCBpcyB3aGF0IGl0J3MgYWxsIGFib3V0LgpEb250IHdhbnQgdG8gYmUgYSBjb2xkIHBlcnNvbiwgYnV0IGxpZmUgZ2F2ZSBtZSBubyBvdGhlciBvcHRpb24uIGJ5IHRoZSB0aW1lIGkgcmVhY2hlZCB0aGUgYWdlIG9mIDE2IGkgYWxyZWFkeSBoYWQgbWFueSBwc3ljaG9sb2dpY2FsIHByb2JsZW1zLiAodGhhbmtzIG1vbSBhbmQgZGFkKQpXb21lbiBjYW4gYmUgZ3Jvc3MgYW5kIHJhdW5jaHkgY29tZWR5IGlzIHRoZSBvbmx5IGNvbWVkeSB0aGF0IHBlb3BsZSB3YW50IHRvIGhlYXIuIEl0IGFuIHVuZXF1YWwgcHJvZmVzc2lvbi4KTWFueSBvZiB0aGUgaGlnaCBlbmQsIGV4cGVuc2l2ZSB0b29scyBhcmUgaW50ZW5kZWQgdG8gYmUgdXNlZCBhbG9uZyB0aGUgaW5zaWRlIG9mIHRoZSBwYW5lbCwgbXVjaCBsaWtlIGEgcHJvIHdvdWxkIGRvLiAoR2FpbmluZyBhY2Nlc3MgdG8gdGhlIGluc2lkZSBvZiBib2R5IHBhbmVscyBjYW4gYmUgYSBjaG9yZSwgdGhvdWdoLCBhbmQgb2Z0ZW4gaW52b2x2ZXMgY2FyZWZ1bCByZW1vdmFsIG9mIG11bHRpcGxlIGludGVyaW9yIHRyaW0gcGllY2VzLikgQWx0ZXJuYXRpdmVzICh3aGljaCB0ZW5kIHRvIGJlIHRoZSBsZXNzIGV4cGVuc2l2ZSBraXRzKSBmbGF1bnQgdGhlIGNvbnZlbnRpb25hbCB3aXNkb20gdGhhdCBzbWFsbCBkZW50cyBzaG91bGQgYmUgbWFzc2FnZWQgYmFjayBvdXQgZnJvbSBiZWhpbmQgdGhlIHBhaW50ZWQgc3VyZmFjZS4gVGhlc2Ugb3B0aW9ucyBpbnN0cnVjdCB0aGUgdXNlciB0byBnbHVlIGEgdG9vbCB0byB0aGUgZGVudGVkIHN1cmZhY2UgYW5kIHRoZW4gdHdpc3Qgb3IgcHVsbCBvbiB0aGUgdG9vbCB0byBwb3AgaXQgb3V0LiAKV2hlbiBhIDUyIHllYXIgb2xkIFNlYW4gQ29ubmVyeSBzdGVwcGVkIGJhY2sgaW50byB0aGUgdHV4ZWRvIGZvciBOZXZlciBTYXkgTmV2ZXIgQWdhaW4sIHRoZSBjaGFyYWN0ZXIgd2FzIHN0aWxsIGtpbGxpbmcsIHdvbWFuaXNpbmcgYW5kIHVwIHRvIGhpcyBvbGQgdHJpY2tzLgpDb25jbHVzaW9uczogQmFjdGVyaWEgY3VsdHVyZWQgZnJvbSB0cmFuc3BlcmluZWFsIHByb3N0YXRpYyBiaW9wc2llcyBkbyBub3QgZGlmZmVyIGJldHdlZW4gbWVuIHdpdGggYW5kIHdpdGhvdXQgY2hyb25pYyBwZWx2aWMgcGFpbiBzeW5kcm9tZS4gCkFuZCB0aGUgbW9uZXkgeW91J3JlIHNhdmluZyBvbiB0aGVyYXB5IHdpbGwgYWxsb3cgeW91IHRvIHRyZWF0IHlvdXJzZWxmIHRvIHRoZSBvY2Nhc2lvbmFsIG5ldyBwYWlyIG9mIHNob2VzIG9yIG91dGZpdCwgd2hpY2ggY2FuIGFsc28gYmUgZ29vZCBmb3IgeW91ciBzZWxmIGVzdGVlbS4gCkl0J3MgdG90YWxseSBkaWZmZXJlbnQgYmVjYXVzZSBzcHJpbnRlcnMgbmVlZCB0byBnZXQgb3V0IHRoZSBtYXhpbXVtIHdvcmsgaW4gYSB2ZXJ5IHNob3J0IHRpbWUsIGFuZCBmb3IgdGhlIGVuZHVyYW5jZSB3b3JrIHdpdGggdGhlIEdDIHJpZGVycyBpdCdzIGEga2luZCBvZiBzb2Z0ZXIgbWFzc2FnZSBpbiBnZXR0aW5nIHRoZSByaWRlcnMgb3ZlciB0aGUgZGF5cy4uIApUaGV5IHdlcmUgYWxyZWFkeSBoYXZpbmcgc29tZSBpc3N1ZXMgc2luY2UgaGUgYmVlbiBkZWFsaW5nIHdpdGggaGlzIGRhZCBkeWluZyBvZiBjYW5jZXIgZm9yIGEgeWVhci4gCkkgdW5kZXJzdGFuZCB0aGF0IGEgcmFwdG9yIGhhcyBncmVhdGVyIGFiaWxpdGllcyBpbiBvdGhlciBhcmVhcyB3aGVuIGNvbXBhcmVkIHdpdGggaHVtYW5zLCBidXQgaWYgdGhlIHBvaW50IGlzIHRvIHN1cnZpdmUgdGhlIGxvbmdlc3QgaXQgZG9lc24ndCBtYXR0ZXIgaG93IGV2b2x2ZWQgdGhlaXIgdmlzdWFsIHN5c3RlbXMgYXJlIGlmIHRoZXkgY2Fubm90IGJ1aWxkIHRvb2xzIGFuZCBpbnZlbnQgdGhpbmdzIHRoYXQgc3VwcGxlbWVudCB0aGVpciBzdXJ2aXZhbCwgcmlnaHQ/LiAKTW9vZHliaWdib290eTk0ICAzIHBvaW50cyAgc3VibWl0dGVkIDEgeWVhciBhZ28KQnV0IHRoYXQganVzdCBwcm92aWRlIGFub3RoZXIgY2hhcHRlciBmb3Igb25lIG9mIHRoZSBtYW55IHN0b3JpZXMgR3V0aGVpbnogdGVsbHMgYWJvdXQgbW9vbiByb2NrIHNhbXBsZXMuIEhlIHNheXMgaGlzIHN0dWRlbnRzIGhhdmUgaGVscGVkIGZpbmQgdGhlIDc5IGRpc3BsYXlzIHNpbmNlIDIwMDIuCkluIGEgc3RyaWN0IGxvcmUgc2Vuc2UsIEt1bCBUaXJhcyBpcyBzaW1wbHkgb25lIG9mIHRoZSBzZXZlbiBodW1hbiBraW5nZG9tcyAocGx1cyB0aGUgbm93IGRlZnVuY3QgY2l0eSBzdGF0ZSBvZiBUaGVyYW1vcmUpIHRoYXQgbWFrZSB1cCB0aGUgcmVtbmFudHMgb2YgdGhlIEVtcGlyZSBvZiBBcmF0aG9yIGFuZCByZXByZXNlbnQgdGhlIG1ham9yaXR5IG9mIGh1bWFuIGNpdmlsaXphdGlvbnMgb24gQXplcm90aC4gUmVndWxhciAodmFuaWxsYSkgaHVtYW5zIGNhbm9uaWNhbGx5IHJlcHJlc2VudCB0aGUgS2luZ2RvbSBvZiBTdG9ybXdpbmQsIGJ1dCBwZW9wbGUgaGF2ZSBiZWVuIHBsYXlpbmcgdGhlbSBhcyBMb3JkYWVyb25pYW5zIGFuZCBEYWxhcmFuaWFucyBhbmQgc28gZm9ydGggc2luY2UgZm9yZXZlciwgc28gSSBkb24gc2VlIGFueSBwcm9ibGVtIHdpdGggdXNpbmcgYSBLdWwgVGlyYW4gYm9keSBtb2RlbCB0byBzdGFuZCBpbiBmb3IgYSBidWxraWVyIGNpdGl6ZW4gb2Ygb25lIG9mIHRoZSBvdGhlciBraW5nZG9tcy4uIApKdWthaSBpcyBhbHNvIHByZWNlZGVkIGJ5IHRoZSBzdHVkZW50IHNld2luZyB0b2dldGhlciB0aGVpciBvd24gcmFrdXN1LCBhbmQgcGFydCBvZiB0aGUgY2VyZW1vbnkgaXMgdGhlIHRlYWNoZXIgcHJlc2VudGluZyB0aGUgcmFrdXN1IGJhY2sgdG8gdGhlIHN0dWRlbnQsIHdpdGggdGhlIHRlYWNoZXIgaW5zY3JpcHRpb24gb24gdGhlIHJha3VzdSBvbiB0aGUgYmFjay4gQW5kLCBqdWthaSBpcyB0aGUgY2VyZW1vbnkgYXQgd2hpY2ggYSBmb3JtYWwgc3R1ZGVudCByZWNlaXZlcyB0aGVpciBkaGFybWEgbmFtZS4KT3ZlcnZpZXcgZm9yIEFzbW9kaWFyCklzIG5vdCBzb21ldGhpbmcgSSBiZWVuIGludm9sdmVkIHdpdGggeWV0LCBzYWlkIFdhcm5lciwgb24gYSB0d28gbW9udGggYnJlYWsgZnJvbSB0aGUgdHJhY2sgc2Vhc29uLCBCdXQgdGhlIG11Y2ggZGVjb3JhdGVkIGRlY2F0aGVsZXRlIGhhZCBoZWFyZCB0aGUgY2hhcml0eSBldmVudCBsYXN0IHllYXIgd2FzIGEgbG90IG9mIGZ1biBmb3IgdGhlIGNlbGVicml0eSBhdGhsZXRlcywgc28gaGUgbWFkZSBhIHBvaW50IHRoaXMgc3VtbWVyIG9mIGNsZWFyaW5nIGEgc3BvdCBpbiBoaXMgc2NoZWR1bGUgdG8gYXR0ZW5kLi4gCkxvdyBpbnRlcmVzdCByYXRlcyBhbmQgbG93IHVuZW1wbG95bWVudCwgYSBzdHJvbmcgZWNvbm9teSwgcGVvcGxlIGFyZSBjb250aW51aW5nIHRvIGJ1eS4gTm8uIDEgYWdlIGdyb3VwIGZvciBidXlpbmcgaG9tZXMgYXJlIHBlb3BsZSAyNSB0byAzNCwgdGhlIENhbmFkYSBNb3J0Z2FnZSBhbmQgSG91c2luZyBDb3JwLiByZXBvcnRlZCByZWNlbnRseS4gQnV0IHRoZSBzZWNvbmQgYmlnZ2VzdCBidXlpbmcgZ3JvdXAgaXMgb2xkZXIgdGhhbiA2NSBhbmQgdGhpcmQgaXMgYWdlcyA1NSB0byA2NC4gVGhhdCBtZWFucyBwZW9wbGUgZG93bnNpemluZyBhcmUgYSBzaWduaWZpY2FudCBmYWN0b3IsIHNhaWQgQ291d2VuYmVyZ2hzLgpVbmRlcnN0YW5kYWJsZSEgU2Vjb25kbHkgaGUgZGlkIG5vdCB3YW50IGhpcyBhbGwgaW1wb3J0YW50IHRyYWluaW5nIHNjaGVkdWxlIGludGVycnVwdGVkIGJ5IHVuYW5ub3VuY2VkLCBpbnZhc2l2ZSBibG9vZCB0YWtlcyB3aGljaCBjb3VsZCBoYXZlIHdlYWtlbmVkIGhpbSBhdCBhIHRpbWUgaGUgbmVlZHMgYWxsIGhpcyBzdHJlbmd0aC4gVGhpcmRseSBoZSBtYXkgYmVsaWV2ZSB0aGF0IE1heXdlYXRoZXIgbmVlZHMgdGhpcyBmaWdodCBtb3JlIHRoYW4gaGUgZG9lcywgYW5kIGlzIHBsYXlpbmcgcG9rZXIgbm90IGJveGluZy4gTWF5d2VhdGhlciBpcyByZXBvcnRlZGx5IGNsb3NlIHRvIGJyb2tlLiAKVXNpbmcgYSBETkEgdGVzdCB0byBsYXkgY2xhaW0gdG8gYW55IGNvbm5lY3Rpb24gdG8gdGhlIENoZXJva2VlIE5hdGlvbiBvciBhbnkgdHJpYmFsIG5hdGlvbiwgZXZlbiB2YWd1ZWx5LCBpcyBpbmFwcHJvcHJpYXRlIGFuZCB3cm9uZy4gSXQgbWFrZXMgYSBtb2NrZXJ5IG91dCBvZiBETkEgdGVzdHMgYW5kIGl0cyBsZWdpdGltYXRlIHVzZXMgd2hpbGUgYWxzbyBkaXNob25vcmluZyBsZWdpdGltYXRlIHRyaWJhbCBnb3Zlcm5tZW50cyBhbmQgdGhlaXIgY2l0aXplbnMsIHdob3NlIGFuY2VzdG9ycyBhcmUgd2VsbCBkb2N1bWVudGVkIGFuZCB3aG9zZSBoZXJpdGFnZSBpcyBwcm92ZS4gU2VuYXRvciBXYXJyZW4gaXMgdW5kZXJtaW5pbmcgdHJpYmFsIGludGVyZXN0cyB3aXRoIGhlciBjb250aW51ZWQgY2xhaW1zIG9mIHRyaWJhbCBoZXJpdGFnZS4uIApMZXQgc2F5IChIVVNORykgeW91IHBsYXlpbmcgYWdhaW5zdCBhIHBsYXllciB3aG8geW91IG5vdGljZSBmb2xkcyBhbGwgb2YgdGhlIHRpbWUgaW4gdGhlIGJpZyBibGluZCB0byBhIHNob3ZlIGZyb20gdGhlIGJ1dHRvbi4gTWF4aW11bSArRVYgd291bGQgYmUgdG8gc2hvdmUgYWxsIG9mIHRoZSB0aW1lIHdpdGggYWxsIG9mIHlvdXIgaG9sZGluZ3MuIApBIHJlY2VudCBvcGVuIGxhYmVsLCByYW5kb21pemVkLCBjcm9zcyBvdmVyIHRyaWFsIHdhcyBjb25kdWN0ZWQgaW4gb3V0cGF0aWVudCBwcmltYXJ5IGNhcmUgY2xpbmljcyBvbiAxMjYgYWR1bHRzIGRpYWdub3NlZCB3aXRoIGRlcHJlc3Npb24gKDI2KS4gRHVyaW5nIHRoZSBpbnRlcnZlbnRpb24sIDI0OCBtZyBvZiBlbGVtZW50YWwgbWFnbmVzaXVtIGNobG9yaWRlIHBlciBkYXksIG9idGFpbmVkIGZyb20gZm91ciA1MDAgbWcgdGFibGV0cywgd2FzIGFkbWluaXN0ZXJlZCBmb3Igc2l4IHdlZWtzIGFuZCBjb21wYXJlZCB0byBzaXggd2Vla3Mgb2Ygbm8gdHJlYXRtZW50LCBhbmQgc3ViamVjdHMgd2VyZSBldmFsdWF0ZWQgZm9yIGNoYW5nZXMgaW4gZGVwcmVzc2l2ZSBzeW1wdG9tcyAoMjYpLgpRdWVlbnNhZ2U3NyB1Ck1vc3QgRXVyb3BlYW4gZ292ZXJubWVudHMgaGF2ZSBoYXJkY29yZSBzb2NpYWxpc3QgaWYgbm90IGNvbW11bmlzdCBwYXJ0aWVzLiBUaGV5IGFsc28gaGF2ZSBoYXJkIHJpZ2h0LCBldmVuIGZhc2Npc3QgcGFydGllcy4KQXQgbGFzdCBJIHJlYWxpemVkIHRoYXQgaXQgd2FzIGF0IHRoZSBjaW5lbWEuIFJldHVybmluZyB0byBGcmFuY2UsIEkgbm90aWNlZCBob3cgY29tbW9uIHRoaXMgZ2FpdCB3YXMsIGVzcGVjaWFsbHkgaW4gUGFyaXM7IHRoZSBnaXJscyB3ZXJlIEZyZW5jaCBhbmQgdGhleSB0b28gd2VyZSB3YWxraW5nIGluIHRoaXMgd2F5LiAKVGhlcmUgYW4gaW50ZXJuYXRpb25hbCBzdHVkZW50IGhvdXNlLCBJIHRoaW5rIGl0IGNhbGxlZCBFdXJvcGEgSGF1cywgd2hpY2ggaXMgdmVyeSBnb29kLCBpdCBpbnRlcm5hdGlvbmFsIGFuZCB2ZXJ5IGxpdmVseS4gCk1hcnRpbiBXZWlnZWx0LCBhIGNocm9uaWMgb2ZmZW5kZXIsIHdhcyBmb3JjZWQgdG8gcG9zZSBmb3IgYSBwaG90byB3aXRoIGZvdXIgVmFuY291dmVyIHBvbGljZSBvZmZpY2VycyBpbiAyMDA2LgpUaGUgdHJpY2sgdG8gd2lubmluZyBhdCBNb25vcG9seSBpcyBub3RpY2luZyB0aGF0IG5vdCBldmVyeSBzcXVhcmUgaXMgY3JlYXRlZCBlcXVhbCAgIHNvbWUgc3F1YXJlcyBhcmUgbXVjaCBtb3JlIGxpa2VseSB0byBiZSBsYW5kZWQgb24gdGhhbiBvdGhlcnMuIFRoZSByZWFzb24gZm9yIHRoYXQgaXMgYmVjYXVzZSBNb25vcG9seSBoYXMgYSBmZXcgY3VydmUgYmFsbHMuIEZvciBleGFtcGxlLCB0aHJvd2luZyB0aHJlZSBkb3VibGVzIGluIGEgcm93IHNlbmRzIHlvdSB0byBqYWlsOyB0aGUgZ28gZGlyZWN0bHkgdG8gamFpbCBzcXVhcmU7IHRoZSBDaGFuY2UgYW5kIENvbW11bml0eSBDaGVzdCBjYXJkcyB0aGF0IHNlbmQgeW91IG9mZiBhcm91bmQgZGlmZmVyZW50IHBsYWNlcyBvbiB0aGUgYm9hcmQsIGFuZCBzbyBvbi4gV2hhdCB0aGlzIGRvZXMgaXMgdHdlYWsgdGhlIHByb2JhYmlsaXR5IG9mIGxhbmRpbmcgb24gZGlmZmVyZW50IHBsYWNlcyBhY3Jvc3MgdGhlIGJvYXJkLiBZb3UgY2FuIHRoZW4gYWRkIGluIHRvIHRoYXQgdGhlIG1hdHRlciBvZiB0aGUgaW5kaXZpZHVhbCB2YWx1ZXMgb2YgZWFjaCBwcm9wZXJ0eSB0byB3b3JrIG91dCB3aGF0IHlvdXIgYmVzdCBwb3NzaWJsZSBzcXVhcmVzIGFyZS4KU2hlIHNhaWQgaGUgdGhlbiBtYWRlIGEgcGhvbmUgY2FsbCwga2lzc2VkIGhlciBvbiB0aGUgY2hlZWsgYW5kIGxlZnQuIApTaGUgcmFpc2VkIGV5ZWJyb3dzIHdoZW4gSnVkZ2UgUGllcnJlIEJlbGlzbGUgYXNrZWQgYWJvdXQgaGVyIGNhcmVlciBhc3BpcmF0aW9ucy4gRHJhd2luZyBjaHVja2xlcyBmcm9tIHRoZSBwdWJsaWMgZ2FsbGVyeSwgc2hlIHNhaWQgc2hlIHdhbnRzIHRvIHB1cnN1ZSBhIGNhcmVlciBpbiBsYXcuCk1hcmNoaW9ubmUgaGFzIHNhaWQgZXhlY3V0aW5nIHRoZSAyMDE4IHBsYW4gd2lsbCBwdXQgRkNBIGluIGJldHRlciBzaGFwZSB0byBuZWdvdGlhdGUgd2l0aCBwb3RlbnRpYWwgcGFydG5lcnMgYW5kIHZvd2VkIHRvIHB1dCBoaXMgbWVyZ2VyIGFtYml0aW9ucyBvbiB0aGUgYmFjayBidXJuZXIgZm9yIG5vdyBhZnRlciBhbiBhdHRlbXB0IHRvIHRpZSB1cCB3aXRoIEdNIGZhaWxlZC4gCkFnYWluLCBJIHRob3VnaHQgSSB3YXMganVzdCBpbWFnaW5pbmcgaXQgYW5kIGRpZG4gd2FudCB0byBhd2t3YXJkbHkgb3BlbiBteSBleWVzIHRvIGNoZWNrIHNpbmNlIGhlIHdhcyByaWdodCBhYm92ZSBtZS4gCkZyIGRpZSBFbnR3aWNrbHVuZyBuZXVlciBNZWRpa2FtZW50ZSBnaWJ0IGVpbmUgZ3JvZSBGaXJtYSBqaHJsaWNoIGJpcyB6dSA5IE1pbGxpb25lbiBEb2xsYXIgYXVzISBXb3p1IHNvbGwgbWFuIHNpY2ggYWxzbyBkYW1pdCBhcnJhbmdpZXJlbiwgZGFzcyBpcmdlbmRlaW4gUGZlbm5pZyAgQXJ0aWtlbCBtZ2xpY2hlcndlaXNlIHdlc2VudGxpY2ggZWZmZWt0aXZlciBpc3QsIGFscyBleHRyZW0gdGV1cmUgUHJwYXJhdGU/WnVtIFZhdGVyIGRlciBpbm5lcmVuIEFud2VuZHVuZyBkZXMgV2Fzc2Vyc3RvZmZwZXJveGlkcyBIMk8yIGluIFJ1c3NsYW5kIHd1cmRlIFByb2YuIEl3YW4gUGF3bG92aXRzY2ggTmV1bWl3YWtpbiwgTWVuc2NoIGRlcyBKYWhyZXMgMjAwMi4gRXIgYmVnYW5uIGJlcmVpdHMgMTk2NiBtaXQgZGVyIEVyZm9yc2NodW5nIHZvbiBIMk8yICwgYWxzIGVyIHNpY2ggYW0gTklJIG1pdCBkZW4gbWVkaXppbmlzY2ggIGJpb2xvZ2lzY2hlbiBQcm9ibGVtZW4gYmVtYW5udGVyIFJhdW1mbGdlIGJlc2NoZnRpZ3RlLi4gClRoaXMuIE15IGNhciB3YXMgZHlpbmcsIEkgdG9vayBpdCB0byB0aGUgZGVhbGVyLCBhbmQgdGhlIFZXIHBsYWNlIDMgYmxvY2tzIGRvd24gYm90aCBvZiB0aGVtIHRvbGQgbWUgaXQgd291bGQgYmUgb3ZlciA2ayB0byBmaXggKGltcG9ydGFudCB0byBub3RlIGJvdGggb2YgVGhlc2UgcGxhY2VzIGhhZCBjYXJzIGZvciBzYWxlKSBhbmQgdGhlbiBhZnRlciBhY2NlcHRpbmcgSSBuZWVkZWQgYSBuZXcgY2FyIChJIG9ubHkgcGFpZCA0SyBmb3IgdGhpcyBjYXIpIEkgZm91bmQgYW5vdGhlciBwbGFjZSBhYm91dCAyMCBtaW51dGUgZHJpdmUgYXdheS4gVGhleSBhZ3JlZWQgdG8gaW5zcGVjdCBhIGNhciBJIHdhcyBsb29raW5nIGF0IGJ1eWluZy4gVGhleSB3ZXJlIHVwZnJvbnQgYW5kIGhvbmVzdCBhYm91dCBub3QgYnV5aW5nIHRoZSBjYXIgYXMgdGhlcmUgd2VyZSB0cmFuc21pc3Npb24gaXNzdWVzIHByZXNlbnQsIHRoZXkgYWdyZWVkIHRvIGxvb2sgYXQgbXkgZXhpc3RpbmcgY2FyIGFuZCBzYWlkIHRoZXkgY291bGQgZml4IGl0IGZvciB1bmRlciAyayBndWFyYW50ZWVkLiBUaGV5IGFyZSB0aGUgYmVzdCBvZiBib3RoIHdvcmxkcywgYWZmb3JkYWJsZSwgaG9uZXN0IGFuZCB0aG9yb3VnaApBbmQgZmluYWxseSwgdGhleSBlbmNvdW50ZXJlZCB0aGUgYXdmdWwgdHJ1dGggdGhhdCB0aGV5IGNvdWxkIGJlIHNlbnQgYmFjayBpbmRlZmluaXRlbHksIHRoYXQgbWFraW5nIGl0IHRocm91Z2ggb25lIG9yIGV2ZW4gdHdvIHRvdXJzIG9mIGR1dHkgZGlkIG5vdCBndWFyYW50ZWUgdGhlbSBmcmVlZG9tLi4gCkluIHRoZSBldmVudCB0aGF0IHRoZSBVbml2ZXJzaXR5IG9mIE1pY2hpZ2FuIGNhbmNlbHMgY2xhc3NlcyBvciBzaHV0cyBkb3duLCBwbGVhc2UgYmUgYWR2aXNlZCB0aGF0IGNsaW5pY2FsIG9wZXJhdGlvbnMgd2lsbCBub3Qgc2h1dCBkb3duLiBBbGwgZXNzZW50aWFsIGVtcGxveWVlcyBpbiB0aGUgaGVhbHRoIHN5c3RlbSBhbmQgbWVkaWNhbCBzY2hvb2wgYXJlIHJlcXVpcmVkIHRvIGNvbWUgdG8gd29yayB1bmxlc3MgcmVsZWFzZWQgYnkgdGhlaXIgbWFuYWdlci9zdXBlcnZpc29yLiAKTSBSZXNvcnRTaXR1YXRlZCBmYXIgc291dGggaW4gdGhlIExhcyBWZWdhcyBWYWxsZXksIHRoZSBNIFJlc29ydCBpcyBhIHBvc2gsIGxhcmdlIGNhc2lubyB0aGF0IG9mZmVycyBhIEhvdCBTbG90cyBUb3VybmFtZW50IGV2ZXJ5IFRodXJzZGF5IHdoZXJlIHBsYXllcnMgY2FuIHdpbiB1cCB0byAkMSw1MDAgaW4gZnJlZSBwbGF5LiBUaGUgY2FzaW5vJ3MgOTIsMDAwIHNxdWFyZSBmZWV0IG9mZmVycyBzbG90IG1hY2hpbmVzLCB2aWRlbyBwb2tlciBtYWNoaW5lcywgYSBzcG9ydHMgYm9vaywgYW5kIHRyYWRpdGlvbmFsIHRhYmxlIGdhbWVzIGxpa2UgY3JhcHMgYW5kIHJvdWxldHRlLiBJdCBvZmZlcnMgbG9jYWxzIGEgMjUgcGVyY2VudCBkaXNjb3VudCBhdCBpdHMgc3BhLCB3aGljaCBtYWtlcyBpdCBwb3B1bGFyIGFtb25nIG5vbiBnYW1lcnMsIHRvby4uIApOb3csIGlmIG9uZSB3ZXJlIHRvIG11bHRpcGx5IDM3NWcgYnkgdGhlIDcuNTNiaWxsaW9uIHBlb3BsZSBvbiB0aGlzIHBsYW5ldCwgb25lIHdvdWxkIGdldCAyLjgyIHRyaWxsaW9uIGdyYW1zIG9mIHNveSBwZXIgZGF5IChhbmQgdGhhdCBtb2Rlc3RseSByb3VuZGluZyBkb3duIHRvIHRoZSBuZWFyZXN0IGh1bmRyZWR0aCBvZiBhIHRyaWxsaW9uKS4gVGhhdCAyLjgyIGJpbGxpb24ga2cgcGVyIGRheSwgb3IgNi4yMmJpbGxpb24gbGJzIHBlciBkYXkuIE11bHRpcGx5IHRoYXQgYnkgMzY1IGRheXMgYW5kIHlvdSBnZXQgYSBsaXR0bGUgb3ZlciBvbmUgdHJpbGxpb24ga2cgcGVyIHllYXIgb3IgMS4wMSBiaWxsaW9uIHRvbnMuIENvbXBhcmF0aXZlbHksIHRoZSB3b3JsZCBjdXJyZW50bHkgb25seSBwcm9kdWNlcyAzNTIgbWlsbGlvbiB0b25zIG9mIHNveSBwZXIgeWVhci4gRGl2aWRlIDEuMDEgYmlsbGlvbiB0b25zIGJ5IDM1MiBtaWxsaW9uIHRvbnMsIGFuZCB5b3Ugd2lsbCBzZWUgdGhhdCB0aGUgY3VycmVudCBwcm9kdWN0aW9uIG9mIHNveSB3b3VsZCBoYXZlIHRvIGluY3JlYXNlIG5lYXJseSB0aHJlZSBmb2xkIHRvIHN1c3RhaW4gdGhlIG5lY2Vzc2FyeSBwcm90ZWluIGludGFrZSBvZiBldmVyeSBodW1hbiBvbiB0aGUgcGxhbmV0ICgyLjcsIHRvIGJlIGV4YWN0KS4gRG9uIGV2ZXIgbWFrZSBtZSBkbyB0aGF0IG11Y2ggbWF0aCBhZ2FpbiEuIApJdCBhIGRhbW5lZCBnb29kIHRoaW5nIEkgbmV2ZXIgd2FudCB0byBoYXZlIGtpZHMsIGJlY2F1c2UgdGhleSBiZSBzbyBmdWNrZWQgZ2VuZXRpY2FsbHkuLiAKVGhleSB1c2VkIGEgYmlnIHRpZ2h0IGVuZCwgd2hvIGxvb2tzIGxpa2UgYSBsaW5lbWFuIHNvIHRoYXQgdGhlIGRlZmVuc2Ugd291bGRuIG5vdGljZSB0aGF0IHRoZSB0YWNrbGUgaXMgYWN0dWFsbHkgYW4gZWxpZ2libGUgcmVjZWl2ZXIgYW5kIHdvdWxkIGxlYXZlIGhpbSB1bmNvdmVyZWQuIApBdCB0aGUgaW50ZXJzZWN0aW9uLCBoZWFkIGxlZnQgYWxvbmcgUGV0Y2hhYnVyaSBSb2FkLiBCYW5na29rIENvenkgaXMgYWJvdXQgYSA1IG1pbnV0ZSB3YWxrIGZyb20gd2hlcmUgdGhlIG1vdG9yYmlrZSBkcm9wcyB5b3UuIEl0IG9mZiB0aGUgbWFpbiByb2FkLCBpbiBhIGxpdHRsZSBlbmNsYXZlLCBidXQga2VlcCBhbiBleWUgb3V0IGZvciB0aGUgYmlnIGJpbGxib2FyZCBzaWduIChyaWdodCkuIFdoZW4geW91IHNlZSB0aGF0LCBoZWFkIGludG8gdGhlIHN1YiBzb2kgYXQgdGhhdCBwb2ludCBhbmQgeW91IHdpbGwgc2VlIHRoZSBwYXJsb3VyLjYvMTBOYXRhcmVlIGlzIG9uZSBvZiBtYW55IHNvYXB5IG1hc3NhZ2Ugam9pbnRzIGFsb25nIFJhdGNoYWRhcGhpc2VrIFJvYWQsIHdoaWNoIGlzIGV2ZXIgc28gc2xpZ2h0bHkgb3V0c2lkZSB0aGUgZG93bnRvd24gYXJlYS4gCk9ubGluZSB0b2RheSwgdGhlcmUgYXJlIHBva2VyIHRvdXJuYW1lbnRzIHRoYXQgbHVyZSBwbGF5ZXJzIG9uIHRoZSBkb3QgY29tIHdpdGggdXAgdG8gb25lIGNyb3JlIGluIHByaXplIG1vbmV5LiBUaGlzIGlzIGEgbGV2ZWwgdXA7IEFtaXQgQnVybWFuLCB2aWNlIGNoYWlybWFuIG9mIEF5dXJ2ZWRpYyBwcm9kdWN0IHNwZWNpYWxpc3RzIERhYnVyIEluZGlhLCBoYXMgaW52ZXN0ZWQgaW4gc3RhcnRpbmcgYSBwb2tlciBsZWFndWUgaW4gSW5kaWEuIFRoZSBQb2tlciBTcG9ydHMgTGVhZ3VlIChQU0wpIHN0YXJ0ZWQgbGFzdCB5ZWFyIGFuZCBpbiBzZWFzb24gdHdvLCB0aGUgb3JnYW5pc2VycyBoYXZlIHVwcGVkIHRoZSBwcml6ZSBtb25leSB0byBScyAzLjYgY3JvcmVzLiAKVGhlbiBjb21lIGluIHRoZSB0aHJlZSBsYXJnZSBtZW4gZGVtYW5kaW5nIEkgcGF5IDRLIHVzZC4gSSB0cnkgdG8gbGVhdmUgYnV0IGFtIHB1c2hlZCBiYWNrLiBUaGUgYXJndW1lbnRzIGNvbnRpbnVlIGZvciB0aGUgbmV4dCB0aHJlZSBob3VycyB3aGVyZSB0aGV5IHNlZSBteSBwYXNzcG9ydCwgd2FsbGV0LCB0YWtlIG15IHBob25lIGV0Yy4gSSBrZWVwIHJlZnVzaW5nIHRvIHBheSBhbmQgdGVsbCB0aGVtIHRvIGNhbGwgdGhlIHBvbGljZS4gVGhleSBzYXkgdGhlIHBvbGljZSB3b24ndCBoZWxwIGFuZCB0aGV5IGhhdmUgbWUgb24gdmlkZW8gcGVyZm9ybWluZyB0aGVzZSBpbGxlZ2FsIGFjdGlvbnMuIEkgc2F5IHdoYXQgdGhleSBhcmUgZG9pbmcgaXMgYWxzbyBpbGxlZ2FsLiBJIHNheSBJIGhhdmUgYW4gYXNzaXN0YW50IChvbiBoZXJlIGZvciBidXNpbmVzcykgYW5kIHRoYXQgc2hlIGNhbiB0cmFuc2xhdGUgZm9yIHRoZSBwb2xpY2UuCkkgZG9uIGtub3cgaG93IGJhZCB5b3VycyBhcmUsIGJ1dCBteSB0cmVtb3JzIGFyZSBub3RpY2VhYmxlIGlmIHlvdSBwYXlpbmcgYXR0ZW50aW9uLCBidXQgbm90IHNvIGJhZCB0aGF0IGl0IGltbWVkaWF0ZWx5IG9idmlvdXMuIEkgZ290dGVuIHNvbWUgY29tbWVudHMgYmVmb3JlLCBidXQgdGhlIGNvbW1lbnRzIGhhdmUgbGl0ZXJhbGx5IG5ldmVyIG9uY2UgYmVlbiBhY2N1cmF0ZSBiYXNlZCBvbiB3aGF0ZXZlciBteSBob2xkaW5ncyB3ZXJlLiAKT3VyIGZyaWVuZHMgd2VyZW4gYXMgc3VwcG9ydGl2ZSBhcyB0aGV5IGhhZCBhbHdheXMgdGhvdWdodCBpdCB3YXMgdG94aWMgdGhhdCB3ZSB3b3VsZCBkbyAiY291cGxlIHRoaW5ncyIuIApTbyB3aGF0IEkgbWVhbnQgd2hhdCB0aGF0IHRoZSBwZXJjZXB0aW9uIG9mIHRoZSBwb3RlbnRpYWwgZm9yIGNvbmZsaWN0IGlzIGluIG15IG1pbmQsIGFuZCBteSBtaW5kIGFsb25lLiBXaGF0IGlmIGl0IGVzY2FsYXRlcz8gV2hhdCBpZiBoZSBhY3R1YWxseSBnZXRzIG1vcmUgYmVsbGlnZXJlbnQsIG9yIGV2ZW4gdmlvbGVudC4gU28gd2hhdCBkaWQgSSBkbz8gSSBhbGxvd2VkIGhpbSB0byBjb250aW51ZSB0byBiZXJhdGUgbXkgd2lmZSBiZWNhdXNlIEkgd2FzIGFmcmFpZCB0byBzYXksICJZb3Uga25vdyB3aGF0LCBsZXQgbm90IGRvIHRoaXMgdG9kYXkuIApUaGUgZ2xvYmFsIGF2ZXJhZ2UgaGFzIGluY3JlYXNlZCwgb3ZlciBhIGxvbmdlciB0aW1lIGZyYW1lLCBzdXJlLiBDb3JlIHN0YXRlbWVudCBmcm9tIGFsbCBvZiB0aGVzZSBpcywgdGhhdCBpbiByZWNlbnQgdGltZXMsIHBhc3QgZmV3IGRlY2FkZXMgb3Igc28sIHBlb3BsZSBhcmUgZ3JhZHVhbGx5IGJlY29taW5nIHN0dXBpZGVyIGFuZCBJIHRoaW5rIGl0IHZlcnkgZXZpZGVudCBhbHNvLgpUbyB3aXJlIG1vbmV5PyBmZWVzR292ZXJubWVudCB3ZWxmYXJlLCBpbiB0aGUgZm9ybSBvZiBUQVJQLCBpcyBzdWNoIGFuIG9idmlvdXMgY29uIGdhbWUgdGhhdCBldmVuIG1pZGRsZSBvZiAgdGhlIHJvYWQsIHBybyBidXNpbmVzcyBzb3J0cyBhcmUgZ2V0dGluZyBhbmdyeS4gCkR1cmluZyB0aGUgZmluYWwgZmV3IHdlZWtzLCBoaXMgZG9jdG9yIGxpbmVkIHVwIHN1cGVyIGludGVuc2l2ZSBjaGVtbyBhbmQgcmFkaWF0aW9uIGZvciBoaW0sIHRlbGxpbmcgdXMgaWYgdGhhdCBkaWRuIHdvcmssIG5vdGhpbmcgd291bGQuIApBbiBhcnRpY2xlIG11c3QgYmUgcHJpbWFyaWx5IHdyaXR0ZW4gaW4gRW5nbGlzaCBmb3IgdXMgdG8gYmUgYWJsZSB0byBtb2RlcmF0ZSBpdCBhbmQgZW5mb3JjZSBvdXIgcnVsZXMgaW4gYSBmYWlyIGFuZCB1bmJpYXNlZCBtYW5uZXIuIE1vcmUgSW5mby4KSW4gdGhlIHN0YXRlbWVudCwgR3JlZW4gTGVhZiBNYXNzYWdlIHNhaWQgaXQgY29vcGVyYXRlZCBmdWxseSB3aXRoIHBvbGljZTogIldlIGFyZSBhcHBhbGxlZCBhbmQgZGlzZ3VzdGVkIGJ5IHRoZXNlIGFjdGlvbnMgYW5kIHRoZXNlIGRvIG5vdCByZWZsZWN0IHRoZSB2YWx1ZXMgYW5kIGludGVncml0eSBvZiBvdXIgY2VudGVyLiBIZSByZXBvcnRlZGx5IGNvbmZlc3NlZCB0byByYXBpbmcgYSB3b21hbiB3aGlsZSBzaGUgd2FzIGRydW5rLCBidXQgdGhlIGNhc2Ugd2FzIGRyb3BwZWQgd2hlbiB0aGUgd29tYW4gZWxlY3RlZCBub3QgdG8gcHVyc3VlIGNoYXJnZXMuLiAKSSB1bmRlcnN0YW5kIHdoYXQgaXQncyBsaWtlIHRvIHdha2UgdXAgYW5kIGZlZWwgbm90aGluZyBidXQgZnV0aWxpdHkuIEJ1dCB0aGF0IGZlZWxpbmcgaXNuJ3QgZXZlcnl0aGluZy4gVGhlcmUgaXMgc28gbXVjaCBvZiBsaWZlIHlvdSBoYXZlbid0IGV4cGVyaWVuY2VkIHlldCwgYW5kIGl0IHRydWx5IGdldHMgYmV0dGVyIGFzIHlvdSBnZXQgb2xkZXIuIEkga25vdyBpdCByZWFsbHkgZG9lc24ndCBmZWVsIHRoYXQgd2F5LCBzbyBpZiB5b3UgbmVlZCB0byB0YWxrIHRvIHNvbWVvbmUgd2hlbiB5b3UgZmVlbCB0aGF0IHdheSwgZmVlbCBmcmVlIHRvIHBtIG1lLgpTZ3QgS2VldmVycyBzYWlkIHRoZSBOU1cgR2FtaW5nIE1hY2hpbmVzIEFjdCBvZiAyMDAxIGVmZmVjdGl2ZWx5IG91dGxhd2VkIG9sZGVyIG1lY2hhbmljYWwgbWFjaGluZXMsIGFuZCByZXN0cmljdGVkIHRoZSBvd25lcnNoaXAgb2YgbmV3ZXIgZWxlY3Ryb25pYyBtYWNoaW5lcyB0byBwdWJzLCBjbHVicyBhbmQgaG90ZWxzLiBPZmZlbmNlcyBjYW4gY2FycnkgMTIgbW9udGhzIGltcHJpc29ubWVudCwgYW4gJDExLDAwMCBmaW5lLCBvciBib3RoLgpJZiB5b3UgZG9uIHdhbnQgdG8gYmUgYXJvdW5kIHN0cmFuZ2VycywgYSBjb3p5IGV2ZW5pbmcgbGlzdGVuaW5nIHRvIGEgcG9kY2FzdCB0aGF0IHlvdSBsaWtlIChoYXZpbmcgYSBmZXcgcGVvcGxlIGNoYXR0aW5nIGFib3V0IGJvb2tzIG9yIGZvb2Qgb3IgY29tZWR5IG1ha2VzIG1lIGZlZWwgbGVzcyBhbG9uZSkgb3Igd2F0Y2hpbmcgeW91ciBmYXZvcml0ZSBsaWdodCBoZWFydGVkIG1vdmllIHdpdGggeW91ciBmYXZlIHNuYWNrcyBtaWdodCBiZSBuaWNlLiAKIlRoZSBCbGF6aW5nIFN0dW1wIGlzIGEgd2VsbCByb3VuZGVkIGJ1c2luZXNzIG9wZXJhdGlvbiB3aXRoIGFuIGV4cGVyaWVuY2VkIGxlc3NlZSBwcm92aWRpbmcgYSBzZWN1cmUgZnV0dXJlIGludmVzdG1lbnQgaW4gV29kb25nYS4KSSBzdG9wcGVkIGF0IFNhbiBBbGJlcnRvIENhZiAodGhleSBoYXZlIDIgMyBvdGhlciBsb2NhdGlvbnMgaW4gdGhlIGNvdW50cnkpICAgSSBoYWQgYSBjb2xkIGJyZXcgZm9yIHRoZSBoZWxsIG9mIGl0IChJIGFsbW9zdCBhbHdheXMgb3JkZXIgbGF0dGVzIG9yIG1vY2hhcyksIGFuZCBpdCB3YXMgaW5jcmVkaWJseSBsaWdodCwgZmxhdm9yZnVsIGFuZCBzbyBzd2VldCB0aGF0IEkgaGFkIHRvIGFzayBpZiB0aGV5J2QgcHV0IGFueSBzdWdhciBpbiBpdCwgd2hpY2ggdGhleSBoYWRuJ3QuIApBbmQgV2Fsc2gsIFYuIDIwMTguIApUZW4gb2YgdGhlc2Ugc3R1ZGllcyB1c2VkIHJhbmRvbWlzYXRpb24gdG8gZGV0ZXJtaW5lIHdoaWNoIGxpbWIgcmVjZWl2ZWQgdGhlIGludGVydmVudGlvbi4gTWV0aG9kb2xvZ2ljYWwgcXVhbGl0eSBpbiB0aGUgUkNUcyB3YXMgcmVwb3J0ZWQgYXMgbW9kZXJhdGUgKERlbHBoaSBzY29yZXMgcmFuZ2luZyBmcm9tIDIgdG8gNikuIApTaWVycmEgQ2l0eSBpcyBhIHJpc2t5IHJlc3VwcGx5IHNwb3Qgd2l0aG91dCBhIGJveC4gWW91IHdpbGwgd2FudCBhIHBhY2thZ2UgdG8gS00gLyBMb25lIFBpbmUgd2l0aCBTaWVycmEgZ2VhciAoYmVhciBjYW5pc3RlciwgbWljcm9zcGlrZXMvaWNlIGF4ZSwgd2FybWVyIGNsb3RoZXMpLi4gClRob3VnaCBub3QgYWR2ZXJ0aXNlZCwgb3IgYWZmaWxpYXRlZCB3aXRoIG91ciAidHlwaWNhbCIgbWFzc2FnZSBwcm9ncmFtLCB3ZSB3ZXJlIGFsbCBtb3JlIHRoYW4gYXdhcmUgdGhhdCBhIG9uZSBvZmZlcmVkICJleHRlbmRlZCBhZGRpdGlvbmFsIHNlcnZpY2VzIi4gQW5kIHllcywgcGVvcGxlIHBhaWQgYSBwcmV0dHkgcGVubnkgZm9yIGRpc2NyZXRpb24uIEFuZCB0aGVyZSB3ZXJlIG1vcmUgdGhhbiBhIGZldyB0aW1lcyBhbiB1bndpdHRpbmcgcGFydG5lciBvciBzcG91c2UgImFycmFuZ2VkIiBhICJkZSBsdXggZGVlcCB0aXNzdWUgd2l0aCBleHRlbmRlZCBhZGRpdGlvbmFsIHNlcnZpY2VzIi4gClJpZ2h0IGFuZCBzaGUgd3JvbmcuIHRydXRoIGlzIHRoYXQgVVMgc29jaWV0eSBpcyBmYXIgZnJvbSAicG9zdCByYWNpYWwuIiByZWx5IG9uIHRoZSAiY29sb3IgbGluZSIgdG8gbWFpbnRhaW4gd2hpdGUgcHJpdmlsZWdlIGluIGRpZmZlcmVudCB3YXlzIHRoYW4gd2UgZGlkIGEgY2VudHVyeSBhZ28sIGJ1dCByZWx5IG9uIGl0IHdlIGRvLiBkYW5nZXJvdXMgKGd1ZXNzIHdoYXQgY29sb3I/KS4gaW5ub2NlbnQgKGd1ZXNzIHdoYXQgY29sb3I/KS4gZmFtaWx5IGlzIHBhdGhvbG9naWNhbCAoZ3Vlc3Mgd2hhdCBjb2xvcj8pLiAKVGhlc2UgbWVuIHdlcmUgd29ya2luZyBpbiBraXRjaGVucyBvbmx5IGJlY2F1c2UgdGhleSB3ZXJlIGZvcmJpZGRlbiBhbmQgcHJvaGliaXRlZCBmcm9tIHdvcmtpbmcgaW4gb3RoZXIgcHJvZmVzc2lvbmFsIGluZHVzdHJpZXMuIApUaGV5IHdlcmUgcGF5aW5nIHRoZXNlIGd1eXMgdG8gcmlwIHRoZW0gb2ZmIGV2ZXJ5IHRpbWUgdGhleSBmbGV3Li4gCkEgY291cnQgYXBwb2ludGVkIGFtaWN1cyBjdXJpYWUsIEluZ3JpZCBHcmFudCwgaGFzIHNhaWQgdGhhdCBEdWdobW9zaCBzaG91bGQgdW5kZXJnbyBhIG1lZGljYWwgYXNzZXNzbWVudCBvZiBoZXIgY3JpbWluYWwgcmVzcG9uc2liaWxpdHksIGFzIHRoZXJlIGFyZSBjb25jZXJucyBhYm91dCBoZXIgbWVudGFsIGhlYWx0aC4KIlByb21pc2N1b3VzIiBtYXkgb3IgbWF5IG5vdCBkZXNjcmliZSBhIHByb2JsZW1hdGljIHNldCBvZiBiZWhhdmlvcnMuIFdoaWxlIG15IGV4cGVyaWVuY2UgaXMgdGhhdCB0aGUgd29yZCBnZXRzIHVzZWQgcHJldHR5IGVxdWFsbHkgZm9yIGJvdGggc2V4ZXMsIHRoZSBhc3N1bXB0aW9uIHNlZW1zIHRvIGJlIHRoYXQgaXQgaXMgbW9yZSBwcm9ibGVtYXRpYyB3aGVuIGRpc2N1c3NpbmcgZmVtYWxlcy4gRnJvbSBteSBleHBlcmllbmNlLCB0aGF0IGlzIHdoZXJlIHRoZSBiaWdnZXN0IHByb2JsZW0gd2l0aCB0aGUgdGVybSBsaWVzLgpUb3VnaCB5b3UgZG8uIFRvZGF5IEkgc3RpbGwgcmVzZW50IG15IG1vbS4gCk1hbnkgcGVvcGxlIGluIHRoaXMgc3VicmVkZGl0IGFuZCB0aGUgcGVvcGxlIGluIHRoaXMgY2l0eSBhcmUgcmlkaWN1bG91cyB3aGVuIGl0IGNvbWVzIHRvIHRoaXMgaXNzdWUuIEl0IGlzIGZ1bGx5IHBvc3NpYmxlIGZvciBhIHBlcnNvbiB0byBtb3ZlIHRvIGFub3RoZXIgYXJlYSBhbmQgdGhyaXZlLgpCYXNlZCBvbiB0aGUgbGl2ZSBjb3ZlcmFnZSBJIHJlbWVtYmVyIGZyb20gdGhhdCBkYXkuIEl0IGRpZG4gb2NjdXIgdG8gYW55b25lIHRoZSB0b3dlcnMgd291bGQgY29sbGFwc2UgdW50aWwgdGhleSBkaWQuIElmIHlvdSBzdXJ2aXZlZCB0aGUgaW5pdGlhbCBpbXBhY3QsIGEgbG90IG9mIHBlb3BsZSB0aG91Z2h0IGl0IHdhcyBsaWtlIGEgbW9yZSBpbnRlbnNlIHZlcnNpb24gb2YgYSBidWlsZGluZyBmaXJlLiBPYnZpb3VzbHkgZ2V0IG91dCBBU0FQIGlmIHRoZXJlIGlzIHRoZSBvcHRpb24uIEJ1dCBpZiB0aGVyZSB3YXNuIGZpbmQgc2FmZXR5LCB3YWl0IGZvciBmaXJlIGZpZ2h0ZXJzIGFuZCBtZWRpY2FsIHRvIGdldCB0byB5b3UuCk91dHNpZGUgeW91IGhhdmUgdGhlIGdvb2Qgb2wgZm9vZCB0cnVja3MgYW5kIGZha2UgbWVyY2hhbmRpc2UsIGFuZCB0aGF0IGl0LiAKWW91IGNhbiBnZXQgaW50byB0aGUgZ2FtZSB3aXRoIGNlcnRhaW4gc2V4dWFsIHBheWJhY2tzIGZvciBjZXJ0YWluIHBsYXlzIHRoZSB0ZWFtcyBtYWtlLiAKRGVuaWFsIGtlZXBzIHByb2JsZW0gZ2FtYmxpbmcgZ29pbmcuIApJZiB5b3UgdGhpbmsgc3VwcG9ydCBpcyByZWFkaWx5IGF2YWlsYWJsZSBmcm9tIHRoZSBoaWdoZXIgdXBzLCB5b3UgYmUgd3JvbmcgYXMgYnJpZ2FkaW5nIGFuZCBoYXJhc3NtZW50IGFyZSBib3RoIHJvdXRpbmVseSByZXBvcnRlZCBhbmQgbWluaW1hbGx5IHJlc3BvbmRlZCB0by4gCk15IGtpZHMgYXJlIGluIG1haW5zdHJlYW0gc2Nob29sIGFuZCB0aGV5IG9mdGVuIHN0cnVnZ2xlLiBUaGVyZSBpcyBhcm91bmQgMzIga2lkcyBpbiBhIGNsYXNzIGFuZCB0aGV5IGNhbiBzbG93IGRvd24gb2J2aW91c2x5LiAKSSBhbSBpbiBubyB3YXkgc2F5aW5nIHRoYXQgaXNuIHRydWUsIHNoZSBhYnNvbHV0ZWx5IGJyZWFrcyB0aGUgZ2FtZSBmcm9tIHdoYXQgSSBjYW4gdGVsbC4gKFNoZSB3YXMgbXkgM3JkIG9yIHNvIDUgc28gbXkgZnJhbWUgb2YgcmVmZXJlbmNlIGlzIGJhc2ljYWxseSBvdGhlciBwZW9wbGVzIHlvdXR1YmUgY2xpcHMuKQpUcmFuc2ZlciB0aGUgZG91Z2ggdG8gYSBsaWdodGx5IGZsb3VyZWQgc3VyZmFjZSBhbmQgcm9sbCBvdXQgdG8gMS84IGluY2ggdGhpY2suIEN1dCBjaXJjbGVzIGZyb20gdGhlIGRvdWdoIHNpemVkIHRvIGZpdCB5b3VyIHRhcnQgcGFucy4gUHJlc3MgdGhlIGNpcmNsZXMgaW50byBlYWNoIHBhbiwgdHJpbW1pbmcgdGhlIGVkZ2VzIGFzIG5lZWRlZC4gUGxhY2UgdGhlIHRhcnQgcGFucyBvbiBhIGJha2luZyBzaGVldCBhbmQgc2V0IGluIHRoZSBmcmVlemVyIHdoaWxlIHlvdSBtYWtlIHRoZSBmaWxsaW5nLgpCZWNhdXNlIG5vdCBvbmUgcHJvbWluZW50IGNvbnNlcnZhdGl2ZSBzcG9rZXNwZXJzb24gb2YgdGhhdCB0aW1lIGRpZCB0aGUgb3Bwb3NpdGUuIE5vdCBvbmUuIFRoYXQgd2hvIHRoZXkgYXJlLiAKSm91cnMgZXQgbnVpdHMsIGlscyBwcm9jbGFtZW50ICJTYWludCBTYWludCBTYWludCBlc3QgWUhXSCIuIERpZXUgZXN0IHNhaW50LCBpbCBlc3QgRGlldSwgaWwgbid5IGEgcGFzIGQnYXV0cmUgZGlldS4gVm9pbCBsYSBsb3VhbmdlLiAKVGhpcyBqdXN0IHByb3ZpZGVzIG9uZSBtb3JlIGRpc2luY2VudGl2ZSBmb3IgcmVjb3JkaW5nIG1hcmtzIGluIHRoZSBzeXN0ZW0uLiAKVGhlYXRyZSBvZiBkaXN0YW50IGRyZWFtcwpUaGlzIHRpbWUgaGUgb3BlbnMgdGhlIGJhY2sgcGFjayBhbmQgSSBjYW4gY2xlYXJseSBzZWUgaGUgaGFzIGEgc2hpdCBsb2FkIG9mIGNhc2ggaW4gdGhlcmUuIApJbiBhIHdheSwgaXQgd29ya3MgYXMgYW4gZXhwbG9yYXRpb24gb2Ygd2h5IFZpY3RvcmlhbiBtb3JlcyB3ZXJlIHNvIGRlZXBseSBmbGF3ZWQsIHdpdGggdGhlIHVuZGVyY3VycmVudCB0aGF0IHdvbWVuIGFyZSBsaXR0bGUgbW9yZSB0aGFuIHRoZSBwcm9wZXJ0eSBvZiB0aGVpciBodXNiYW5kcywgYmFieSBpbmN1YmF0b3JzIGFuZCBtZW50YWxseSBjaGlsZHJlbiB0aGVtc2VsdmVzLiBXZSBzZWUgYW4gb2J2aW91cyB2ZXJzaW9uIG9mIHRoaXMgdGhlbWUgd2l0aCBNb25tb3V0aCBhbmQgdGhlIER1Y2hlc3MgKGhlIGxpdGVyYWxseSBjYWxsZWQgaGVyIHByb3BlcnR5IGluIHRoaXMgZXBpc29kZSkgYnV0IGluIEFsYmVydCBoaXMgdHJhbnNmb3JtYXRpb24gaXMgYWxsIHRoZSBtb3JlIHJlcHVsc2l2ZSBjb25zaWRlcmluZyBoZSdzIHN1cHBvc2VkIHRvIGJlIHRoZSBlbmxpZ2h0ZW5lZCBvbmUgdGhlIGRyZWFtZXIsIG5vdCB0aGUgc29sZGllciwgYXMgVmljdG9yaWEgcmVtaW5kZWQgaGltIGhlcmUuClRoZXJlIGlzbiBhIHdvcmQgc3BlbnQgb24gd2hhdCB0aGUgY29uc2VxdWVuY2VzIG1pZ2h0IGJlIGlmIHRoZSBNYXJ0aWFucyByZXR1cm5lZCB0aGUgZmF2b3IuIApJIGRvIHN0aWxsIHBsYW4gb24gZ29pbmcgYmFjayB0byBzY2hvb2wgZm9yIG9jY3VwYXRpb25hbCB0aGVyYXB5IGFzc2lzdGFudCBidXQgdGhhdCBvbiBob2xkIHRpbGwgeW91bmdlc3QgaXMgYXQgbGVhc3QgaW4gcHJlc2Nob29sIGluIGFub3RoZXIgMyB5ZWFycy4gCihBUCkgICBNb250YW5hIGZvcmVzdHJ5IGFnZW5jeSBpcyB3b3JraW5nIHdpdGggZmVkZXJhbCwgbG9jYWwgYW5kIHByaXZhdGUgb3JnYW5pemF0aW9ucyB0byBpbmNyZWFzZSBsb2dnaW5nIG9uIG5hdGlvbmFsIGZvcmVzdHMgdG8gaW1wcm92ZSBmb3Jlc3QgaGVhbHRoIGFuZCBkZWNyZWFzZSB0aGUgcmlzayBvZiBkaXNlYXNlIGFuZCBjYXRhc3Ryb3BoaWMgZmlyZXMuIApXYXNoaW5ndG9uIFJvZWJsaW5nIHRvb2sgb3ZlciBhcyBjaGllZiBlbmdpbmVlciBmb2xsb3dpbmcgdGhlIGRlYXRoIG9mIGhpcyBmYXRoZXIsIEpvaG4gQS4sIGluIDE4NjksIGZvbGxvd2luZyBhIGZyZWFrIGFjY2lkZW50IGFuZCB0aGUgaWxsIGNvbmNlaXZlZCB0cmVhdG1lbnRzIGZvciBpdCB0aGF0IGJyb3VnaHQgb24gdGhlIHRldGFudXMgdGhhdCB3b3VuZCB1cCBraWxsaW5nIHRoZSBtYW4uIApJIGNhbid0IHNwZWFrIGZvciBldmVyeW9uZSB0aG91Z2guIEkgbWVhbiBJIGRvbid0IHJlYWxseSBzZWUgdGhlIGhhcm0gdGhpcyBtb3N0bHkgc291bmRzIGxpa2UgdGhlIHNhbWUgb2xkICJ5b3UgZG9uJ3QgbGlrZSBnYXkgcGVvcGxlIiBzcGllbC4gSWYgeW91IHdhbm5hIGJlIGdheSB0aGVuIGJlIGdheSBldmVyeW9uZSBkZXNlcnZlcyB0byBiZSB0cmVhdGVkIHJlc3BlY3QganVzdCBkb24ndCBleHBlY3QgbWUgdG8gY29uZG9uZSB5b3VyIGxpZmVzdHlsZSBvciBhZ3JlZSB3aXRoIGl0LgoiRG9uJ3Qgd29ycnkgYWJvdXQgS251Y2tsZSBjcmFja2luZyBpdCBkb2VzIG5vdCBjYXVzZSBhcnRocml0aXMsIGVubGFyZ2VkIGpvaW50cywgb3IgYW55IG90aGVyIGhhcm0uIFRoZSBkaXNjb25jZXJ0aW5nIHBvcHBpbmcgc291bmRzIHJlc3VsdHMgd2hlbiB0aGUgdHdvIG9wcG9zaW5nIGJvbmVzIGluIHRoZSBrbnVja2xlcyBhcmUgcHVsbGVkIGFwYXJ0LCB3aGljaCBjcmVhdGVzIGEgdmFjdXVtIHdpdGggdGhlIGpvaW50LiBBIHNtYWxsIGFtb3VudCBvZiBnYXMgZGlzc29sdmVkIGluIHRoZSBqb2ludCBmbHVpZCBpcyBxdWlja2x5IHJlbGVhc2VkLCBmb3JtaW5nIGEgYnViYmxlIHRoYXQgYWxtb3N0IGluc3RhbnRseSBjb2xsYXBzZXMgYW5kIHByb2R1Y2VzIHRoZSBub2lzZS4iIFVuaXZlcnNpdHkgb2YgQ2FsaWZvcm5pYSBhdCBCZXJrZWxleSBXZWxsbmVzcyBMZXR0ZXIKUmVhbGx5IGZlbHQgbHVja3kgdG8gYmUgdGhlcmUhIFdlCkNvbXBsYWludHMgYXJlIHVwLCBidXQgc2VydmljZSBpcyBkZWZpbml0ZWx5IHdheSwgd2F5LCB3YXkgZG93bi4gSW5kdXN0cmlhbCBhcmVhcyBuZWFyIG1lLCB0aGF0IHdvdWxkIGhhdmUgcHJldmlvdXNseSByZW1haW5lZCB1bnBsb3dlZCBieSB0aGUgY2l0eSBoYXZlIGJlZW4gc3dhcm1pbmcgd2l0aCBzaWRld2FsayBwbG93cy4gClRoZSB0ZWFjaGVycyBoZXJlIGRvIHNlZW0gbGF6eSBmcm9tIG15IHBvaW50IG9mIHZpZXcuIEkgYXNrIGFsbCBteSBzdHVkZW50cyB0aGF0IEkgdHV0b3IgYWJvdXQgdGhlaXIgZGF5cyBpbiBkZXRhaWwuIApRIHdhc24gZ29pbmcgdG8gYmUgZmlyZWQsIHNvIG5vdyBEYWxleSBoYXMgdG8gYmUgZGVhbHQgc2luY2UgUSBhbHNvIHdhc24gZ29pbmcgdG8gcGxheSBoaW0sIGFuZCBTdGFuIGhhcyBubyBsZXZlcmFnZSBiZWNhdXNlIGV2ZXJ5IHRlYW0ga25vd3MgdGhhdCB0aGUgSGF3a3Mgd2VyZW4gaW4gYSBnb29kIGNhcCBzaXR1YXRpb24gYW5kIHRoZXkgaGFkIHRvIHRyYWRlIERhbGV5LiBTbyBTdGFuIHRyYWRlZCBmb3IgYSBwbGF5ZXIgdGhhdCBmaXQgUSBtb2xkIHdoaWxlIGNsZWFyaW5nIGNhcCBzcGFjZS4uIApQb3VuZGxhbmQgc2FpZCB0aGUgZG91YmxlIGVudGVuZHJlcyB1c2VkIHRocm91Z2hvdXQgdGhlIGNhbXBhaWduIHdvdWxkIG5vdCBoYXZlIGJlZW4gdW5kZXJzdG9vZCBieSBjaGlsZHJlbiwgYWRkaW5nIHRoYXQgVHdpdHRlciBhbmQgRmFjZWJvb2sgaGFkIHBvbGljaWVzIHByZXZlbnRpbmcgdW5kZXIgMTNzIGZyb20gY3JlYXRpbmcgYWNjb3VudHMgd2l0aCB0aGVtLgpXZSBnb3QgcmlkIG9mIGl0LCBhbmQgdGhpbmdzIGdvdCB3b3JzZS4gV2UgcHV0IGl0IGJhY2ssIGFuZCB0aGluZ3MgZ290IGJldHRlciBhZ2Fpbi4gCkhhcmQgdG8gY29tcGFyZSB0byB5b3VyIGNhc2UsIGFzIHlvdXJzIHNlZW1zIG11Y2ggbW9yZSBzZXZlcmUgY29uc2lkZXJpbmcgYmlwb2xhci4gQmFzZWQgb24gbXkgYmVoYXZpb3VyIHNvbWV0aW1lcyBJIGd1ZXNzIEkgY291bGQgY2FsbCBteXNlbGYgYSBtaWxkIGJpcG9sYXIuIApJZiB5b3VyIHBhcnR5IGlzIHNtYWxsIHlvdSBjYW4gZWl0aGVyIGJ1eSB5b3VyIG93biBmb29kIG9yIGVubGlzdCB5b3VyIGZyaWVuZHMgYW5kIGFzc29jaWF0ZXMgdG8gaGVscCwgb3IgeW91IGNhbiBoaXJlIGxvY2FsIGNhdGVyaW5nIHNlcnZpY2VzIHRvIGhhbmRsZSBpdCBhbGwuIApUaGVuIHlvdSBoYXZlIGp1ZGdlcy4gVGhhdCBpcyBhIGxlZ2FsIGhlYWRhY2hlIGZvciBXT1RDIG9uIG11bHRpcGxlIGxldmVscywgZnJvbSBjb21wZW5zYXRpb24gdG8gc2VjdXJpdHkgZm9yIHZ1bG5lcmFibGUgbWVtYmVycyBvZiB0aGUgcGxheWVyYmFzZS4gWW91IG5vIGxvbmdlciBuZWVkIGp1ZGdlcyBvbiBhcmVuYSBhcyB0aGUgYXJlbmEgc291cmNlIGNvZGUgaXMgdGhlIGp1ZGdlLgpHZW9mZiBzaWdocyBhbG91ZCwgdGhlbiBzYXlzLCAiRm9yIHRoZSBsYXN0IHRpbWUsIEkgYXNrZWQgdGhlbSBvdXQgaW4gdGhlIG9yZGVyIHRoZXkgd2FpdGVkIG9uIG1lLiBJdCB3YXMganVzdCBsdWNrIG9mIHRoZSBkcmF3LiBPciBpbiB0aGlzIGNhc2UsIGJhZCBsdWNrLiBNaW5lLiIgR2VvZmYgdGhlbiBiZWdpbnMgdG8gZGlnIGludG8gaGlzIHNhbGFkIHdpdGggZ3VzdG8uIFNpbGVudGx5IGhlIGtlZXBzIHBsb3R0aW5nIHdheXMgdG8gY29udmluY2UgQmV0aGFueSB0byBnbyBvdXQgd2l0aCBoaW0sIHRoZW4gcmVhbGl6aW5nIHRoZSBtb3JlIGVhZ2VyIGhlIGFwcGVhcnMsIHRoZSBtb3JlIHNoZSB3aWxsIGlnbm9yZSBoaW0uIHtUaW1lIHRvIHBsYXkgaXQgY29vbCBmb3Igbm93LH0gaGUgZGVjaWRlcywgdGhvdWdoIGhlIHN1c3BlY3RzIGhlIHdpbGwgZm9yZ2V0IHRoYXQgcmVzb2x1dGlvbiBzb29uIGVub3VnaC4KUG9zaXRpbmcgd2hhdCBzZWVtcyBvciBvdGhlcndpc2Ugc3BlY3VsYXRpbmcgd2l0aG91dCBhIGZpcm0gZ3JvdW5kaW5nIGluIHRoZSBjdXJyZW50IGFjYWRlbWljIGxpdGVyYXR1cmUgaXMgbm90IHRoZSBiYXNpcyBmb3IgYW4gYW5zd2VyIGhlcmUsIGFzIGFkZHJlc3NlZCBpbiB0aGlzIFJ1bGVzIFJvdW5kdGFibGUuIApTaGFoIHByZXZpb3VzbHkgdG9sZCBUaGUgV2FzaGluZ3RvbiBQb3N0IHRoYXQgS2F2YW5hdWdoIHdhcyByZWltYnVyc2VkIGZvciB0aG9zZSB0aWNrZXRzIGFuZCBwYWlkIG9mZiBoaXMgZGVidCBhdCB0aGUgZW5kIG9mIDIwMTYuIFdoaXRlaG91c2Ugd2FudHMgdG8ga25vdyB3aGljaCBvZiBoaXMgZnJpZW5kcyByZWltYnVyc2VkIEthdmFuYXVnaCBmb3IgYmFzZWJhbGwgdGlja2V0cywgd2hlbiBhbmQgYXQgd2hhdCBwcmljZS4gSGUgYWxzbyB3YW50cyB0byBrbm93IGhvdyBLYXZhbmF1Z2ggcGFpZCBvZmYgdGhlIHJlc3Qgb2YgaGlzIGRlYnQgdGhhdCB3YXMgbm90IGluY3VycmVkIGZyb20gcHVyY2hhc2luZyBiYXNlYmFsbCB0aWNrZXRzLi4gClRoZSBQYXRzIHdlcmUgcHJvYmFibHkgZXhwZWN0aW5nIGFub3RoZXIgcnVuIGhlcmUsIHdoaWNoIG1lYW5zIGEgcGFzcyBwbGF5IHdvdWxkIGJlIGEgZ3JlYXQgY2FsbC4gCjkgcG9pbnRzICBzdWJtaXR0ZWQgMSB5ZWFyIGFnb1doaWxlIEkgd291bGRuIHB1dCBtdWNoIHZhbHVlIGluIGJvb2tzIEkgc3RpbGwgdGhpbmsgdGhlcmUgYSBsb3Qgb2YgdXNlZnVsIHJlYWRpbmcgaW4gdGhlIG9sZCAyKzIgYXJjaGl2ZXMuIEkgZG9uIGtub3cgd2hhdCBsZXZlbCB5b3UgYXJlIGF0IGJ1dCB0aGVyZSBpcyBhbiBpbmNyZWRpYmxlIHJlc291cmNlIGluIHRoZSBtaWNybyBzdGFrZXMgZm9ydW0gdW5kZXIgdGhlIG5hbWUgb2YgImNvbmNlcHQgb2YgdGhlIHdlZWsgbWVnYXRocmVhZCIgb3Igc29tZXRoaW5nLiAKSSBmb2xsb3dlZCB0aGUgMjMgbWludXRlIHZpZGVvIGJ5IHNlbGVjdGluZyBhIGhhbmQgZnJvbSBhIHJlY2VudCBnYW1lIEkgcGxheWVkIGFnYWluc3QgYSBOSVQgYW5kIHVzZWQgdGhlIHNhbWUgbG9naWMgYXMgaGUgZGlkIGluIGhpcyBkZW1vIGhhbmQsIGJ1dCB3aXRoIGEgaGFuZCBvZiBteSBvd24uIElmIHlvdSB3YW50IHRvIGltcHJvdmUgeW91ciBnYW1lIGFuZCBjYXNoIG1vcmUuCkF0IHRoZSBzYW1lIHRpbWUgYmFjayB0byBzY2hvb2wgc2hvcHBpbmcgd2FzIHByb3BlbGxpbmcgdGhlIEF1Z3VzdCBzYWxlcyBvZiBzb21lIG5hdGlvbmFsIHJldGFpbGVycywgTm9yZHN0cm9tIHJlbGVhc2VkIG51bWJlcnMgbGFzdCB3ZWVrIHNob3dpbmcgYSA3LjEgcGVyY2VudCBzYW1lIHN0b3JlIHNhbGVzIGluY3JlYXNlLCBtb3JlIHRoYW4gZG91YmxlIHRoZSBpbmNyZWFzZSBhbmFseXN0cyBoYWQgcHJlZGljdGVkLgpUaHVidG9wICAgMTEgcG9pbnRzICBzdWJtaXR0ZWQgMTAgZGF5cyBhZ28KVGhlIGJpZyBhbnN3ZXI6IERpbHV0ZSBpdCBpbiBhIGdsYXNzIGNvbnRhaW5lciB3aXRoIHByb3BlciByYXRpb3MsIHdoaWNoIHZhcnkgYWNjb3JkaW5nIHRvIHlvdXIgRU8gKG9yIEVPIGJsZW5kKSBvZiBjaG9pY2UuIEludmVzdCBpbiBhIGZldyBsaXR0bGUgZ2xhc3MgamFycyBvciB2aWFscyBvciByb2xsZXJzIGFuZCBqdXN0IHByZWRpbHV0ZSB5b3VyIHN0dWZmIHNvIGl0IHdpbGwgYmUgcmVhZHkgdG8gZ28gd2hlbmV2ZXIuIDUgcG9pbnRzICBzdWJtaXR0ZWQgOSBkYXlzIGFnby4gCkNodSwgc2hlIHNheXMsIGFyZSBBc2lhbiBBbWVyaWNhbiBwaW9uZWVycy4gQXJlIG5vdCBzdXBwb3J0aW5nIHJvbGVzLCBXdSBzYXlzLiAKQ1NVIEJhdGh1cnN0IHN0dWRlbnRzIGNlbGVicmF0ZSBncmFkdWF0aW9uCkkgYWx3YXlzIGxldCBhZ2dyZXNzaXZlIGRyaXZlcnMgcGFzcyBiZWNhdXNlIEkgZG9uIHdhbnQgdGhlbSBvbiBteSBhc3MsIGJ1dCB0aGV5IHN0aWxsIHBpc3MgbWUgcmlnaHQgdGhlIGhlbGwgb2ZmLiBJIHNwZW5kIDEgMiBob3VycyBhIGRheSBkcml2aW5nLCBzb21ldGltZXMgd2l0aCBteSBraWRzIGluIHRoZSBjYXIuIApEb24gYmUgdG9vIGV4Y2l0ZWQuIE1heWJlIGhlIGdldCBzY3Jld2VkIG92ZXIsIGJ1dCBpdCBub3QgcmVhbGx5IGdvaW5nIHRvIG1lYW4gYW55dGhpbmcgbWVhbmluZ2Z1bGx5IGNoYW5nZXMgaW4gSXNyYWVsaSBwb2xpdGljcyBvdmVyYWxsLiBUaGVzZSB0ZXJyaWJsZSBsZWFkZXJzIGRvbiBleGlzdCBpbiBpc29sYXRpb24sIHRoZXkgYSBwcm9kdWN0IG9mIG1hbnkgb3RoZXIgYXJlYXMgZmFjaWxpdGF0aW5nIGFuZCBlbmNvdXJhZ2luZyB0aGVpciB0ZXJyaWJsZW5lc3MuCklsIGVzdCBiaWVuIHBvc3NpYmxlIHF1ZSBjZXJ0YWlucyBkIHZvdXMgYWllbnQgYXR0cmFwIHVuIHZpbGFpbiByaHVtZSwgY2UgcXUgbGFuZ2FnZSBtZGljYWwgb24gYXBwZWxsZSB1bmUgcmhpbml0ZSBldCBxdWUgbCByZXRyb3V2ZSBwYXJmb2lzIGFzc29jaWUgIGxhIHBoYXJ5bmdpdGUgIHRyYXZlcnMgbGEgY2xicmUgcmhpbm8gcGhhcnluZ2l0ZS4gUGFyZm9pcyBhIHNlIGNvbXBsaXF1ZSBldCBwZXV0IHMgIGwgdW5lIHNpbnVzaXRlLiBDIHVuZSBhZmZlY3Rpb24gcXVpIHBldXQgcGFyYXRyZSBiYW5hbGUgY29tbWUgYSwgbWFpcyAgbG9yc3F1IHZpcnVzLCB1biBjaGFtcGlnbm9uLCB1bmUgYmFjdHJpZSBvdSB1bmUgYWxsZXJnaWUgYWZmZWN0ZSBsZXMgbXVxdWV1c2VzIGR1IG5leiwgY2VsbGVzIGNpIHJhZ2lzc2VudCBlbiBzIGV0IGVuIGVuZmxhbnQsIHByb3ZvcXVhbnQgbCBkZXMgc2ludXMuIApBIHRvdGFsIG9mIG1vcmUgdGhhbiAyMCwxMDAgc3F1YXJlIGZlZXQgKDEsODcwIHNxdWFyZSBtZXRlcnMpIG9mIGZsZXhpYmxlIGZ1bmN0aW9uIHNwYWNlIGF0IEh5YXR0IFJlZ2VuY3kgQ2hvbmdxaW5nIG1ha2VzIHRoZSBob3RlbCBhIGxlYWRpbmcgY2hvaWNlIGZvciBoaWdoIGxldmVsIG1lZXRpbmdzLCBjb25mZXJlbmNlcywgd2VkZGluZ3Mgb3Igc29jaWFsIGdhdGhlcmluZ3MuIFRoZSBwaWxsYXIgbGVzcyA4LDMwMCBzcXVhcmUgZm9vdCAoNzgwIHNxdWFyZSBtZXRlcikgUmVnZW5jeSBCYWxscm9vbSB3aXRoIGEgMjYgZm9vdCBoaWdoIGNlaWxpbmcgYW5kIGEgY29tbWFuZGluZyBwYW5vcmFtaWMgUGFyYWRpc2UgV2FsayB2aWV3IGNhbiBob3N0IHVwIHRvIDQ1MCBndWVzdHMgZm9yIGJhbnF1ZXRzIGFuZCA2NzAgZm9yIGNvY2t0YWlsIHJlY2VwdGlvbnMuIApZb3Ugd2lsbCB0cnkgYW5kIHdpbiBiYWNrIHRoZSBvdGhlciAkNTBrIHRoYXQgbmV2ZXIgZXhpc3RlZCBpbiB0aGUgZmlyc3QgcGxhY2UuIApDb3VsZCB5b3UgcGxlYXNlIHRha2UgY2FyZSBvZiB5b3VyIG1lbnRhbCBhbmQgZW1vdGlvbmFsIGhlYWx0aCBiZWZvcmUgZGVjaWRpbmcgbGVhdmluZyBvciBzdGF5aW5nPyBMaWtlIG9uIGFpcnBsYW5lcywgd2UncmUgYXNrZWQgdG8gcHV0IG91ciBtYXNrcyBvbiBiZWZvcmUgd2UgaGVscCBvdGhlcnMuIFNvIG1ha2Ugc3VyZSB5b3UgaGF2ZSB5b3VyIG1hc2sgb24gYW5kIGFyZSBoZWFsdGh5IGFuZCB3aG9sZSBiZWZvcmUgeW91IGV2ZW4gZGVjaWRlIHRvIHN0aWNrIGFyb3VuZC4KQSBHIHJhZGFyIGlzIHRoZSBvbmUgaHVnZWx5IGNvbXBsZXggc3lzdGVtIGxlZnQuIFRwb2QgYW5kIG5ldyBmbGlyICB3ZSBoYXZlIHRoYXQgdGVjaCwgaXQncyBiZWluZyBpbXByb3ZlZCwgYnV0IGZ1bmRhbWVudGFsbHkgaXQncyBhbHJlYWR5IGluIGdhbWUuIE5vIG90aGVyIG1vZHVsZSBoYXMgRG9wcGxlciBiZWFtIHNjYW5uaW5nLCBncm91bmQgbW92aW5nIHRhcmdldCBhbmQgc2VhIHRyYWNraW5nIG1vZGVzLCBvciBldmVuIHJhbmdpbmcgZm9yIGNjaXAgYWNjdXJhY3kuIApJZiBhbnl0aGluZywgdGhleSBzaG91bGQgYmUgcHJhaXNlZCBmb3IgdHJ5aW5nIHRvIGRpc3N1YWRlIGhhdGVmdWwgc3BlZWNoLCBiZWNhdXNlIGxldCBmYWNlIGl0LCB3aGV0aGVyIG9yIG5vdCB5b3UgYWdyZWUgd2l0aCBzb21lIG9mIHRoZSBvcGluaW9ucyBvbiAvci9mYXRwZW9wbGVoYXRlLCB0aGUgY29tbXVuaXR5IHdhcyBleHRyZW1lbHkgdG94aWMsIGFuZCBiZWdpbm5pbmcgdG8gc3BpbGxvdmVyIGludG8gb3RoZXIgc3Vicy4uIApBcyB0aGUgd29ybGQgaXMgd2lkZSB0aGUgY2hhbm5lbHMgYXJlIGFsc28gYXZhaWxhYmxlIGluIHdpZGUgYXJlYS4gU28gc2VsZWN0aW9uIG9mIGNoYW5uZWwgaXMgZGVwZW5kcyBvbiB0aGUgbWVzc2FnZSBhbmQgcmVjZWl2ZXIuIApBbmQgaXQgYXdmdWwgdG8ga25vdyB0aGF0IGxvdHMgb2YgcGVvcGxlIHdvdWxkIGxvb2sgYXQgbXkgbW9vZCB0aGF0IG5pZ2h0IGFuZCBzYXkgaXQgYmVjYXVzZSBoZSBhbmQgSSBwcm9iYWJseSBhcmVuICJtZWFudCBmb3IgZWFjaCBvdGhlciIgb3IgYXJlbiBhIGdvb2QgbWF0Y2gsIG9yIGl0IHdhcyBteSAiaW50dWl0aW9uIiB0ZWxsaW5nIG1lIHNvbWV0aGluZyB3YXMgd3JvbmcuIEJ1dCBpdCB3YXNuIFdlIHJpZGljdWxvdXNseSBoYXBweSBhbmQgaW4gbG92ZSBhbmQgc3Ryb25nZXIgdGhhbiBldmVyIG5vdyBhIHllYXIgYW5kIGEgaGFsZiBsYXRlciwgdGhyb3VnaCBzbyBtYW55IGhhcmRzaGlwcyBhbmQgc3RydWdnbGVzLiAKSW50ZXJlc3RpbmdseSwgc3lzdGVtaWMgaW5qZWN0aW9uIG9mIHRoZSBwaHl0b2NoZW1pY2FsIGN1cmN1bWluIGVuaGFuY2VzIHRoZSBuZXcgaGlwcG9jYW1wYWwgY2VsbCBzdXJ2aXZhbCBieSBbNTldLiAKVGhlIHR3bywgZml2ZSwgYW5kIGV4dHJhIG5pbmUgYXJlIG5vdCBmYWN0b3JlZCBpbnRvIHRoZSBoYW5kLiAoRnVsbCBBbnN3ZXIpLiAKSGlzIHN1Y2Nlc3Mgc3Bhbm5lZCBzZXZlcmFsIHZhcmlhdGlvbnMgb2YgdGhlIGdhbWUgaW5jbHVkaW5nIGhvbGRlbSwgZHJhdyBhbmQgc3R1ZC4gCk9LLiBTTyBUSElTIE9ORSBUSU1FLCBMSUtFLCBJIERPTiBLTk9XLCBBIFdISUxFIEFHTywgTVkgV0lGRSBXQVMgR0lWSU5HIE1FIEEgQkouIFNIRSBXQVMgR09JTkcgRE9XTiBPTiBNRSBBTkQgSSBBTEwgIk9IIEJBQlkgVEhJUyBJUyBTTyBHT09ELiAKSG93ZXZlciwgbWFueSBvZiB1cyBiZWxpZXZlIHJlc2VhcmNoIGlzIGxlc3Mgc2FmZSB0b2RheSBhcyB0aGUgZGVsdWdlIG9mIHVuaW1wb3J0YW50IGluZm9ybWF0aW9uIHRoYXQgZm9sbG93cyB0aGUgb3BlbmluZyBvZiBhIHRyaWFsIG1lYW5zIHRoYXQgdGhlIHRydWx5IGltcG9ydGFudCBzaWduYWxzIGFyZSBsb3N0IGFuZCB0aGUgbGVuZ3RoIGFuZCBsYW5ndWFnZSB1c2VkIGluIGNvbnNlbnQgZm9ybXMgbWVhbiB0aGF0IHBhdGllbnRzIG5vIGxvbmdlciB0cnVseSB1bmRlcnN0YW5kIHdoYXQgdGhleSBhcmUgZ2V0dGluZyBpbnZvbHZlZCB3aXRoLiAKSSBsaWtlIHRvIGhhbmcgb3V0IHdpdGggZnJpZW5kcyBhbmQgcGxheSB2aWRlbyBnYW1lcyBpbiBteSBmcmVlIHRpbWUuIEFsdGhvdWdoLCBJIHBsYW4gdG8gd29yayBhIGxvdCBkdXJpbmcgc2Nob29sIGFuZCBkdXJpbmcgYnJlYWssIGJ1dCBJIGxpa2UgdG8gbWFrZSBzdXJlIEkgaGF2ZSBlbm91Z2ggdGltZSB0byBkbyBhbGwgdGhyZWUuIFdoZW4gSSBoYW5nIG91dCB3aXRoIG15IGZyaWVuZHMsIHdlIHVzdWFsbHkgcGxheSBwb2tlciBhbmQgd2UgYWx3YXlzIGhhdmUgYSBibGFzdCBhcyBzb21lb25lIG5ldyB3aW5zIGV2ZXJ5IHRpbWUuIApTaGUgZ3JldyB1cCBrbm93aW5nIGJldHRlciBidXQgaGFkIGdvdHRlbiBpbnRvIGRyaW5raW5nIGJlY2F1c2Ugb2YgYSBiYWQvIHNoYWR5IHJlbGF0aW9uc2hpcCBhbmQgZmluYW5jaWFsL2pvYiBpc3N1ZXMuIFRoZSBvdGhlciBsYWRpZXMgd2VyZSBqdXN0IGFwb2xvZ2l6aW5nIGFuZCBpdCBzZWVtZWQgbm9uZSBvZiB0aGVtIGhhZCBhbnkgYWR2aWNlIHRvIG9mZmVyLiAKVGhlcmUgYXJlIHNjaXNzb3IgaGFwcHkgaGFpcmRyZXNzZXJzLCBzbyBtYWtlIHN1cmUgdG8gYXNrIGZvciBhIGNvbnN1bHRhdGlvbiBmaXJzdCwgZXhwcmVzcyB0aGF0IHlvdSd2ZSBoYWQgdG9vIG11Y2ggaGFpciBjdXQgb2ZmIGluIHRoZSBwYXN0IGFuZCB5b3Ugd291bGQgbGlrZSB0byBwcm9jZWVkIHdpdGggY2F1dGlvbi4gCkl0IGlzIHZlcnkgcmFyZSBmcm9tIG15IGV4cGVyaWVuY2UgdGhhdCB0aGUgYWdlbnQgd2l0aGhvbGRzIHNob3dpbmcgeW91ciBvZmZlciB0byB0aGUgc2VsbGVyLiBTbyBhbHdheXMgaGF2ZSBhbiBleHBpcmF0aW9uIGFuZCBjcmVhdGUgYSBzZW5zZSBvZiB1cmdlbmN5IHRoYXQgeW91IGFyZSBub3QgZ29pbmcgdG8gd2FpdCBhcm91bmQuIElmIHRoZSBleHBpcmF0aW9uIGVuZHMsIGFuZCB0aGVuIHNvbWVvbmUgZWxzZSBzaG93cyB1cCB3aXRoIGEgaGlnaGVyIG9mZmVyIHRoZW4gbW92ZSBvbi4gCkludGVybmV0IEFydGljbGVzICBEZWNlbWJlciAxMywgMjAwNFBPS0VSIEZBQ0UgSU4gLiBIaXMgcGFsbXMgYXJlIHN3ZWF0eSBhbmQgaGlzIGhlYXJ0IGlzIHJhY2luZywgYnV0IGhlIHNtaWxlcyB3aGVuIGhlIHNlZXMgaGlzIGNhcmRzLiJJIGNhbid0IGxvc2UgdGhpcyBvbmUiLCBoZSBzYXlzLCB3aXRoIGEgYmlnIGdyaW4gb24gaGlzIGZhY2UuIFBvawpPZiBMb3JhaW8sIGkgbkZXU1BBUEZSSS4gCkFub3RoZXIgdHdpc3Qgb24gYWZmaWxpYXRlIHByb2dyYW1zIGlzIHRoZSBDUEMgTGluayAoQ1BDPUNvc3QgUGVyIENsaWNrKSwgYWxzbyBrbm93biBhcyBhZmZpbGlhdGUgbGlua3Mgb3IgY2xpY2sgdGhydSBsaW5rcy4gWW91IHB1dCBhIGxpbmsgb24geW91ciBzaXRlIGFuZCB0aGUgY29tcGFueSBwYXlzIHlvdSB3aGVuIHNvbWVvbmUgY2xpY2tzIG9uIHRoZSBsaW5rLiAKQXQgdGhlIGVuZCBvZiB0aGUgc2Vjb25kIHllYXIgeW91IGhhdmUgdGhlIG9wcG9ydHVuaXR5IHRvIHVuZGVydGFrZSBhIDQgd2VlayBlbGVjdGl2ZSBleHBlcmllbmNlLCBlaXRoZXIgb3ZlcnNlYXMgb3IgaW4gdGhlIFVuaXRlZCBLaW5nZG9tLiAoVUspIEluIHRoZSBVSyBlbGVjdGl2ZXMgY2FuIGJlIGFycmFuZ2VkIGluIGhvc3BpY2VzLCBwcmlzb25zIGFuZCBvdGhlciBzcGVjaWFsaXN0IHVuaXRzLiBJbnRlcm5hdGlvbmFsIGVsZWN0aXZlcyBjYW4gYmUgaW4gaGVhbHRoIGNhcmUgc2V0dGluZ3MgaW4gYW55IGNvbnRpbmVudCBvZiB0aGUgd29ybGQuIEV4YW1wbGVzIG9mIGNvdW50cmllcyB3aGVyZSBzdHVkZW50cyBoYXZlIHZpc2l0ZWQgcmVjZW50bHkgaW5jbHVkZSBBdXN0cmFsaWEsIFNyaSBMYW5rYSwgVGhlIFBoaWxpcHBpbmVzLCBUaGFpbGFuZCwgVGFuemFuaWEsIEdyZWVjZSwgQ2FuYWRhIGFuZCB0aGUgVVNBLiBUaGUgZWxlY3RpdmUgZW5hYmxlcyB5b3UgdG8gZXhwZXJpZW5jZSBkaWZmZXJlbmNlcyBpbiBjdWx0dXJlLCBjbGluaWNhbCBwcmFjdGljZSwgaGVhbHRoY2FyZSBzeXN0ZW1zIGFuZCBsYW5ndWFnZXMsIHdoaWNoIHdpbGwgYmVuZWZpdCB5b3UgYXMgYSBSZWdpc3RlcmVkIE51cnNlIHdoZW4gY2FyaW5nIGZvciBwZW9wbGUgZnJvbSBkaWZmZXJlbnQgYmFja2dyb3VuZHMuIEl0IGFsc28gZ2l2ZXMgeW91IHRoZSBvcHBvcnR1bml0eSB0byBmdXJ0aGVyIGRldmVsb3AgeW91ciBzZWxmIGNvbmZpZGVuY2UgYW5kIG9yZ2FuaXNhdGlvbmFsIHNraWxscywgdGhyb3VnaCBhcnJhbmdpbmcgeW91ciBvd24gZWxlY3RpdmUgZXhwZXJpZW5jZSB3aXRoIHRoZSBzdXBwb3J0IGFuZCBndWlkYW5jZSBvZiBhY2FkZW1pYyBzdGFmZi4KSGF2ZSB5b3UgZXZlciBuaXBwZWQgb3V0IHRvIEdyZWdncyBmb3IgYSBzYXVzYWdlIHJvbGwgYW5kIHRob3VnaHQgeW91IG5lZWRlZCB0byB0ZWxsIGV2ZXJ5b25lIGFib3V0IGl0IG9uIFRyaXBBZHZpc29yICAgb3IsIGluZGVlZCwgR29vZ2xlPwpBbmQgdGhhdCBwYXR0ZXIgcmF0dGxlcyBhdCBzdWNoIGJyZWFrbmVjayBwYWNpbmcgdGhhdCBpZiBhbnlvbmUgb3RoZXIgdGhhbiBTb3JraW4gd2VyZSBkaXJlY3RpbmcsIHRoaXMgbW92aWUgd291bGQgY2xvY2sgaW4gYXQgb3ZlciBmb3VyIGhvdXJzLiAKUHJvdmlkZW5jZTogTm8uIDExIGluIEVhc3QsIHdpbGwgZmFjZSBOby4gNiBOb3J0aCBDYXJvbGluYQpCYWNrd29vZHNPRyAgNiBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpUaGUgbG9jYXRpb24gaGFzIGFscmVhZHkgYmVlbiBkZXNjcmliZWQgdG8geW91IGFjY3VyYXRlbHksIGJ1dCBJIHdpbGwgY2hpbWUgaW4gdG8gbWFrZSBzdXJlIHlvdSBhcmUgYXdhcmUgdGhhdCB0aGUgRyBzcG90IGlzIG5vdCBhY3R1YWxseSB1bml2ZXJzYWxseSBwbGVhc3VyYWJsZSwgYW5kIGV2ZW4gaWYgaXQgaXMgcGxlYXN1cmFibGUgbW9zdCB3b21lbiBjYW5ub3Qgb3JnYXNtIGZyb20gdGhhdCBleGNsdXNpdmVseS4gSXQgY29tbW9uIGZvciB3b21lbiB0byBnbyBsb29raW5nIGZvciBpdCBhbmQgdGhpbmsgdGhlcmUgaXMgc29tZXRoaW5nIHdyb25nIHdpdGggdGhlbSBvciB0aGV5IGFyZW4gZG9pbmcgaXQgcmlnaHQsIHdoZW4gaW4gZmFjdCBpdCBqdXN0IG5vdCBzb21ldGhpbmcgdGhhdCB3b3JrcyBmb3IgdGhlbS4gClRvZ2V0aGVyIHdlIGZvdWdodCwgd29ya2luZyBvdXQgd2F5IHRocm91Z2ggbWFueSBhZHZlbnR1cmVzLCB1bnRpbCB3ZSBoYWQgdG9wcGxlZCB0aGUgVHlyYW50IEtpbmcgaGltc2VsZiwgYW5kIHNldCB0aGUgd2hvbGUgRW1waXJlIGZyZWUuIE9yIGF0IGxlYXN0IHNvIHdlIGhhZCB0aG91Z2h0LiAKTmllbWFuZCB3ZWV0IGRhdCBoZXQgYmVyaGF1cHQgaWxsZWdhYWwgaXMuIElrIGhlYiBpbiBoZXQgdmVybGVkZW4gZ2Vnb2t0IG9wIG9ubGluZSBjYXNpbm8ncyBkaWUgaW4gaGV0IE5lZGVybGFuZHMgdmVydGFhbGQgemlqbiwgd2FhciBqZSBtZXQgaURlYWwga2FuIGJldGFsZW4gZW4gd2FhciBqZSBqZXplbGYga2FuIGlkZW50aWZpY2VyZW4gbWV0IGVlbiBOZWRlcmxhbmRzIHJpamJld2lqcy4gClRlY2huaWNhbGx5IHRob3VnaCwgdGhlIEJvc3BvcnVzIGlzIG5vdCB0aGUgd2VzdGVybm1vc3QgcGFydCBvZiB0aGUgQXNpYW4gY29udGluZW50LiBUaGVyZSBhY3R1YWxseSBhIGZhaXJseSBzaXphYmxlIGNodW5rIG9mIEFzaWFuIGxhbmRtYXNzIHdlc3Qgb2YgaXQsIHN0cmV0Y2hpbmcgdG8gdGhlIERhcmRhbmVsbGVzLiBXaGlsZSBhbmFra2FsZSwgdGhlIERhcmRhbmVsbGVzIGxhcmdlc3QgY2l0eSwgZG9lcyBub3QgKHN1cnByaXNpbmdseSBlbm91Z2gpIGhhdmUgYW55IHJhaWwgc2VydmljZSB3aGF0c29ldmVyICAgbWFraW5nIGl0IHBvc3NpYmx5IHRoZSBsYXJnZXN0IGNpdHkgaW4gdGhpcyBwYXJ0IG9mIHRoZSB3b3JsZCB3aXRob3V0IGFueSAgIHRoZSBjaXR5IG9mIEl6bWlyIGFsc28gbGllcyB0byB0aGUgd2VzdCBvZiBJc3RhbmJ1bCAoMjcuMTRFIHZzLiAyODU3MThFKSwgYW5kIHRoYXQgbWFrZXMgaXRzIHdlc3Rlcm5tb3N0IHRlcm1pbmFsICAgQmFzbWFuZSBUZXJtaW5hbCAgIHRoZSB3ZXN0ZXJubW9zdCBtYWpvciByYWlsIGh1YiBpbiBBc2lhLiAoVGhlIHdlc3Rlcm5tb3N0IHN0YXRpb24gb3ZlcmFsbCB3b3VsZCBiZSB0aGUgd2VzdGVybm1vc3Qgc3RhdGlvbiBvbiB0aGUgTWVuZW1lbiBjb21tdXRlciByYWlsIGxpbmUgICBidXQgbm90IE1lbmVtZW4gaXRzZWxmLikKWW91IGFyZSBvYnZpb3VzbHkgbGl2aW5nIHlvdXIgYmVzdCBsaWZlLiBJIHRoaW5rIGlmIHlvdSB3YW50IHRvIGNvbnRpbnVlIGRvaW5nIHRoYXQsIGFuZCBjb250aW51ZSBidWlsZGluZyBpdCB1cC4gWW91IHdpbGwgaGF2ZSB0byBjdXQgY29udGFjdC4gCl9CaW5kZXJzRnVsbE9mV29tZW5fIFtNXSAgMCBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ28KUGhvdG9zIGFyZSB0YWtlbiB3aXRoIE1hdGxvdWJpIGVtYnJhY2luZyBhIGh1Z2UgcGlsZSBvZiBjYXNoLCBhbmQgVHVuYSBsb29raW5nIGJlbXVzZWQuIApUaGUgcG9pbnQgb2YgRXpyYSdzIGx5cmljcyBhbmQgc29uZ3MgYXJlIG5ldmVyIGFib3V0IHRoZSByZWZlcmVuY2VzIGhlIG1ha2VzLiBMb29rIGF0IFN0ZXAgZm9yIGV4YW1wbGUgICBoaXMgcmVmZXJlbmNlcyBhcmUgYSBjYWxsYmFjayB0byB3aG8gaGUgd2FzIGR1cmluZyBoaXMgY29sbGVnZSB5ZWFycywgYSBwcmV0ZW50aW91cyBhbmQgaW1tYXR1cmUga2lkLiBUaGUgY2hvcnVzIGNvdW50ZXJzIGJvdGggdmVyc2VzIGJ5IHNoZWRkaW5nIHRoZXNlIHByZXRlbnNlcyBhbmQgc3RhdGluZyBoZSdzIHJlYWR5IHRvIHNldHRsZSBkb3duIGFuZCBncm93IHVwLiAKQnJpZGdlIHdpdGggaGVhZCBhbmQgc2hvdWxkZXJzIG9uIHRoZSBmbG9vciBhbmQgZmVldCBmbGF0IG9uIHRoZSBiYWxsOiBUaGlzIGlzIG1vcmUgZGlmZmljdWx0IGFuZCB0aGUgZm9jdXMgd2lsbCBzaGlmdCBmcm9tIHRoZSBnbHV0ZXMgdG8gdGhlIGhhbXN0cmluZ3MgKGJhY2sgb2YgdGhlIHVwcGVyIGxlZyBtdXNjbGVzKS4gQmFsYW5jZSBpcyBhbHNvIGRpZmZpY3VsdCwgYmVjYXVzZSB5b3VyIGxlZ3MgbXVzdCBwdXNoIG9mZiBvZiBhbiB1bnN0YWJsZSBzdXJmYWNlLiAKTm93IHRoaXMgaXMgbm90IHRvIHNheSwgdGhhdCB0aGlzIGlzIHRoZWlyIEJFU1Qgc29uZy4gCllvdSBkZWZpbml0ZWx5IHNob3VsZCBwb2tlIGludG8gdGhlIHNvcmFuZXQgZXJhLiAKTWFraW5nIG1vcmUgdGhpbmdzIHdpdGggdGFycHMgaXMgd2hhdGV2ZXIgdGhvdWdoIHNpbmNlIEkgd291bGQgcmF0aGVyIGJ1aWxkIGEgaHVuZHJlZCB3YXRlciBzdGlsbHMgdGhhbiBhIHNoZWx0ZXIgd2l0aCB0aGUgdGFycC5JIGFncmVlIHdpdGggdGhlIFJhZGlvLCB0aGF0IGJlIGNvb2wuIApIYXMgbm93LiJDaXZpbFNvY2lldHlXb3JsZCAgNCBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ29EZXBlbmRpbmcgb24gaG93IG9sZCB0aGUgZmFjaWxpdGllcyBhcmUsIExORyBwbGFudHMgY2FuIGFjdHVhbGx5IHByb2R1Y2UgbW9yZSB1bHRyYWZpbmUgZHVzdCB0aGFuIGNvYWwgcG93ZXIgcGxhbnRzLiBJbiAyMDE3LCBhbiBMTkcgcG93ZXIgcGxhbnQgaW4gQnVuZGFuZywgR3llb25nZ2ksIGVtaXR0ZWQgNDYgZ3JhbXMgb2YgZHVzdCBwZXIgbWVnYXdhdHQgaG91ciAgIGFsbW9zdCB0aHJlZSB0aW1lcyB0aGUgMTYgZ3JhbXMgZnJvbSBTYW1jaGVvayBHcmVlbiBQb3dlciwgS29yZWEncyBncmVlbmVzdCBjb2FsIHBvd2VyIHBsYW50IGluIEdhbmd3b24uQSBiaWcgZmFjZSBwYWxtIGFuZCBhIG1vYW4uIApXaGV0aGVyIHRoZXkgcGF5IGZvciBhIGxvYW5lciBjYXIgaXMgdXN1YWxseSBkZXBlbmRlbnQgb24gdGhlIE1hbnVmL0RlYWxlcnNoaXAsIGlzIGl0IG5vdD8gSSBrbm93IExleHVzLCBJbmZpbml0aSBhbmQgTUIgaGF2ZSBhbHdheXMgcHJvdmlkZWQgYSB2ZWhpY2xlIGZvciBtZS4gRm9yZCB0b2xkIHVzIHRvIHBvdW5kIHNhbmQgYW5kIGdhdmUgdXMgYW4gTkZMIGplcnNleSBhZnRlciBrZWVwaW5nIG91ciB5ZWFyIG9sZCBjYXIgZm9yIGEgd2VlayB0byBmaXggdGhlaXIgaW5mb3RhaW5tZW50IHN5c3RlbSB0aGF0IGp1c3Qgc3RvcHBlZCB3b3JraW5nLiBUaGV5IGFsc28gY3JhY2tlZCB0aGUgY2VudGVyIGNvbnNvbGUvZGFzaGJvYXJkIGhvdXNpbmcgd2hlbiB0aGV5IHJlbW92ZWQgdGhlIHNjcmVlbiBhbmQgZGlkbiBmZXNzIHVwIHRvIGl0LiAKSWYgc29tZW9uZSBsZWF2ZXMgYW4gZWdnIHNoZWxsIHdoZXJlIGl0IGRvZXNuIGJlbG9uZywgdGhleSBjYW4gY29tcGxhaW4gd2hlbiBpdCBnZXRzIGJyb2tlbiwganVzdCBsaWtlIG15IGtpZHMgY2FuIGNvbXBsYWluIGlmIEkgZHJpdmUgb3ZlciBhIHRveSB0aGF0IHRoZXkgbGVmdCBpbiB0aGUgZHJpdmV3YXkuIApMaWZlIGlzIHdoYXQgeW91IG1ha2UgaXQuIApPbmUgbW90aGVyIHdobyBoYWQgaGVyIHlvdW5nIHNvbiBIYXJyaXNvbiB0YWtlbiBhd2F5IHdoZW4gc2hlIHRvb2sgaGltIHRvIGhvc3BpdGFsIHdhcyBBbXkgSG93ZWxsLiBYIHJheXMgc2hvd2VkIG11bHRpcGxlIGZyYWN0dXJlcywgd2hpY2ggd2VyZSBiZWxpZXZlZCB0byBiZSBldmlkZW5jZSBvZiBhYnVzZSwgYnV0IHdlcmUgbGF0ZXIgZm91bmQgdG8gYmUgY2F1c2VkIGJ5IGEgZ2VuZXRpYyBib25lIGRpc29yZGVyLgpOb3Qgc3VyZSBob3cgZGlmZmVyZW50IHRoZSBtYXRlcmlhbCBhbmQgdHlwZSBvZiBwYW50cyB0aGV5IGFyZSwgYnV0IG51cnNpbmcgc3RhZmYgaW4gQVUgaGF2ZSBhIGdvb2Qgc3RhbmRhcmQgb2YgcGFudHMvdW5pZm9ybS4gSXQncyBzZWVtcyBsaXRlcmFsbHkgaW1wb3NzaWJsZSB0byBzaG93IGFueSBraW5kIG9mIGZpZ3VyZSB1bmRlcm5lYXRoLiAKSSBmb3VuZCB0aGF0IHVzaW5nIGEgY29tYm8gb2YgYSBSYXplciBOYWdhIG1vdXNlLCBhbmQgYSBSYXplciBUYXJ0YXJ1cyBvciBPcmJ3ZWF2ZXIgd29ya3MgcmVhbGx5IHdlbGwuIApUaGVyZSBhbHNvIHRoZSB2ZXJ5IHJlYWwgcmVhbGl0eSB0aGF0IG1vc3QgcGVvcGxlIHNpbXBseSBkb250IGhhdmUgdGhlIG1lYW5zIHRvIHN0YXJ0IHRoZWlyIG93biBidXNpbmVzcy4gSXQgbm90IGNob2ljZSB0aGF0IHlvdXIgYXZlcmFnZSBwZXJzb24gZG9lc24gdHVybiAxOCBhbmQgc3VkZGVubHkgaGF2ZSBhIGh1bmRyZWQgdGhvdXNhbmQgaW4gdGhlIGJhbmsgb3IgdGhlIGNyZWRpdCB0byBzZWN1cmUgYSBub24gY2F0YXN0cm9waGljIGxvYW4gZm9yIHN0YXJ0aW5nIHRoZWlyIGJ1c2luZXNzLCBldmVuIGlmIHRoZXkgd2FudGVkIHRvLi4gCllvdSBrbm93IGl0IHRoZSBsb3ZlIGZyb20gVHJ1bXAgaGFzIGNoYW5nZWQgdG8gZXNjYWxhdGluZyBkZW1hbmRzLiBJdCB3aWxsIGdldCB0byB0aGUgcG9pbnQgdGhhdCBoZSB0aHJlYXRlbnMgeW91IGlmIHlvdSBoZXNpdGF0ZS4gRG9uIHlvdSBrbm93IHdobyB5b3UgbWVzc2luZyB3aXRoPyBJZiB5b3UgZG9uIGp1bXAgaW4gZnJvbnQgb2YgdGhhdCBidXMgZm9yIG1lIEkgdGFrZSB5b3UgZG93biwgSSBrbm93IGV2ZXJ5dGhpbmcgeW91IGRvbmUgYW5kIHlvdSBtaW5lIG5vdy4gClRoZXJlIG5vIGhhcmQgbnVtYmVyIHNldCBieSB0aGUgY29uc3RpdHV0aW9uLiAKVGhlcmUgbm8gZ2V0dGluZyBhcm91bmQgdGhhdCwgYmVjYXVzZSB0aGVyZSBubyBhdG1vc3BoZXJlIHRvIGhlbHAgc2xvdyB5b3UgZG93bi4gCkhlIGhhZCAyIHByaW9yIGFycmVzdHMgZm9yIG1hcmlqdWFuYSBwb3NzZXNzaW9uLiAKRWQgSGVsbXMgcGxheXMgaGltIHJlYWxseSB3ZWxsLCBoZSBnZW51aW5lbHkgdGFsZW50ZWQgd2hpY2ggSSBsaWtlIChsZXNzZXIgc2hvd3Mgd291bGQgaGF2ZSB0aGUgInNpbmdpbmcgY2hhcmFjdGVyIiBiZSBiYWQgZm9yIGVhc3kgbGF1Z2hzKSBhbmQgaGUgaGFzIHNvbWUgbmljZSBjaGFyYWN0ZXIgZGV2ZWxvcG1lbnQuIApUaGlzIG1vZGlmaWNhdGlvbiBzaG91bGQgYWxzbyBiZSB1c2VkIGluIHRoZSB0aGlyZCB0cmltZXN0ZXIgd2hpbGUgdGhlIHByZWduYW50IGNsaWVudCBpcyBpbiB0aGUgc3VwaW5lIHBvc2l0aW9uLi4gCkRhbW1pdGFubmllICA5IHBvaW50cyAgc3VibWl0dGVkIDIgbW9udGhzIGFnbwpJJ3ZlIGZvdW5kIHRoZSBvbmx5IHdheSB0byB0YWNrbGUgaXQgaXMgdmlhIGEgbGlzdCBhbmQgdGlja2luZyBpdCBvZmYgYW5kIHNsb3dseSB3b3JraW5nIHRob3VnaCBpdC4gbmV4dCBkYXkgeW91IGdldCB0d28gZG9uZSBhbmQgZGF5IGFmdGVyIHRoYXQgb25lIGFnYWluIGJ1dCB0aGVuIHlvdSBnZXQgMjAgZG9uZSBvbiBGcmlkYXkgYXMgaXRzIHJvdXRpbmUuClBhcnR5IHBva2VyIHNpdGVzIGxpbmsgaHVuZHJlZHMsIGFuZCBldmVuIHRob3VzYW5kcyBvZiBwbGF5ZXJzLiAKS2VtYXRpYW4sIGtldGlrYSBtYW51c2lhIG1lbmdhbGFtaSBwcm9zZXMgcGVyYWxpaGFuIGRhcmkga2VoaWR1cGFuIGR1bmlhIG1lbnVqdSBrZWhpZHVwYW4gYWtoaXJhdCB5YW5nIGFiYWRpLiBCZXJiYWdhaSBmZW5vbWVuYSBtdW5jdWwgZGFyaSBwcm9zZXMuIFRla3MgQ2VyYW1haCBMdWN1IGRhcmkgVXN0LiAKSWYgYW4gSUNPIChpbml0aWFsIGNvaW4gb2ZmZXJpbmcpIGZvciBhIGNvbXBhbnkgaGFzIGEgdW5pcXVlIGNvbmNlcHQgdGhhdCBpbnZlc3RvcnMgYXJlIGludGVyZXN0ZWQgaW4sIGl0J3MgaW1wb3J0YW50IHRvIGdldCBwcm9vZiBvZiB0aGF0IGNvbmNlcHQgb3V0IHRvIG1hcmtldCBhcyBxdWlja2x5IGFzIHBvc3NpYmxlLiBCeSBnZXR0aW5nIGluIGVhcmx5LCB5b3UgY2FuIGRldmVsb3AgdGhlIG5lY2Vzc2FyeSBmb3VuZGF0aW9uIHRvIGV4cGFuZCBtYXJrZXQgcGVuZXRyYXRpb24sIGNvdmVyYWdlLCBhbmQgaW52ZXN0bWVudCBvcHBvcnR1bml0aWVzLiAKT2theSwgSSBoYXZlIHR3aWNlIHVzZWQgdGhlIHdvcmQgZmVja2xlc3MgdG8gZGVzY3JpYmUgYm90aCBDb25ncmVzcyBhbmQgdGhlIE9iYW1hIGFkbWluaXN0cmF0aW9uIHJlc3BvbnNlIHRvIEFJRyBjcmltaW5hbCBtaXN1c2Ugb2YgdGF4cGF5ZXIgZG9sbGFycyBmb3IgJDE2NSBtaWxsaWlvbiBpbiBib251c2VzIHRvIHRoZSB2ZXJ5IGVtcGxveWVlcyByZXNwb25zaWJsZSBmb3IgQUlHIGNvbGxhcHNlIChub3QgdG8gbWVudGlvbiB0aGUgYmlsbGlvbnMgb2YgZG9sbGFycyB1c2VkIHRvIGJhaWwgb3V0IGJhbmtzIHRoYXQgZXhwbG9pdGVkIHBvb3IgY29tbXVuaXRpZXMgd2l0aCBzdWJwcmltZSBtb3J0Z2FnZXMpLgpJdCByZWFsbHkgcXVpY2sgdG8gc3dpdGNoIHRoZW0sIGFuZCB5b3UgY291bGQgdXNlIGEgYmF0Y2ggZmlsZSB0byBzd2l0Y2ggdGhlIGNvbmZpZyBmaWxlcyB3aXRoIG5vdGhpbmcgbW9yZSB0aGFuIGEgZG91YmxlIGNsaWNrIGlmIHlvdSB3YW50ZWQuLiAKWW91IGRvIG5vdCBvd2UgdGhpcyBwYXJ0eSBicm8gYW55IGxveWFsdHkgb3IgZW1vdGlvbmFsIGhhcmQgd29yayBvbiBtYWludGFpbmluZyB5b3VyIHJvbGUgYXMgYSAiZ29vZCB3aWZlIi4gCkkgaGF2ZSBubyBpZGVhIHdoYXQgdGhhdCBwZXJzb24gd2FzIHVwIHRvLCBtYXliZSBub3RoaW5nIGJ1dCBJIGNhbid0IHJlYWxseSBhc3N1bWUgdGhhdC4uIApGTEFTSCBFRkZFQ1Qgb2YgYSBoeWRyb2dlbiBib21iIDEsMDAwIHRpbWVzIG1vcmUgcG93ZXJmdWwgdGhhbiBwcmVzZW50IGJvbWJzIHdvdWxkIGJlIHJlbGF0aXZlbHkgZ3JlYXRlciB0aGFuIGl0cyBibGFzdCBlZmZlY3QuIFRoZSBIaXJvc2hpbWEgYm9tYiBjYXVzZWQgZmF0YWwgYnVybnMgYXQgZGlzdGFuY2VzIHVwIHRvIDQsMDAwIHRvIDUsMDAwIGZlZXQgKHNtYWxsIGNpcmNsZSkuIEEgaHlkcm9nZW4gYm9tYiB3b3VsZCBjYXVzZSBmYXRhbCBidXJucyBhdCBkaXN0YW5jZXMgb2YgMjAgbWlsZXMgb3IgbW9yZSAobGFyZ2UgY2lyY2xlKS4gVGhlIGluaGFiaXRhbnRzIG9mIENoaWNhZ28gYW5kIGl0cyBzdWJ1cmJzIGNvdWxkIHRodXMgYmUgd2lwZWQgb3V0LgpNeSBzaXN0ZXIgY2FtZSBkb3duIHdpdGggc29tZSBzaWNrbmVzcyBJIGNhbiByZW1lbWJlciB3aGljaCBhbmQgZW5kZWQgdXAgc3RheWluZyBob21lIGZyb20gc2Nob29sLiBJIHN0aWxsIGhhZCB0byBnby4gU28gdGhlIHNjaG9vbCBiZWxsIHJpbmdzIGFuZCBJIGNhdGNoIHRoZSBidXMgYW5kIGxpdHRsZSBmaXZlIHllYXIgb2xkIG1lIGlzIGp1c3QgdmlicmF0aW5nIGZyb20gZXhjaXRlbWVudCBmb3IgdG9kYXkgYWZ0ZXIgc2Nob29sIGFjdGl2aXR5LiAKUHJldHR5IHN0YW5kYXJkIGZvciB0ZWxldmlzaW9uIGF1ZGllbmNlcy4gWW91IHdhbnQgdGhlIG1vc3QgdmlzaWJsZSBtZW1iZXJzIHRvIG1pcnJvciB0aGUgY29yZSBkZW1vZ3JhcGhpYyBvZiB0aGUgc2hvdywgYmVjYXVzZSB0aGF0IHdoYXQgYWR2ZXJ0aXNlcnMgd2FudC4gCiJJIHBsYXllZCBhIGxvdCBvZiBnYW1lcyBoZXJlLCIgc2FpZCBFbm5pcywgd2hvIHBsYXllZCBmb3VyIHllYXJzIG9mIGp1bmlvciBob2NrZXkgaW4gTWVkaWNpbmUgSGF0LiAiSGFkIHNvbWUgcml2YWxyaWVzIHdpdGggdGhlIChDYWxnYXJ5KSBIaXRtZW4gb3ZlciB0aGUgeWVhcnMuIApUaGVzZSBnYW1lcyBhcmUgcmVsYXRpdmVseSBlYXN5IHRvIHBpY2sgdXAgYW5kIGhhdmUgd29uIG1hbnkgaW50ZXJuYXRpb25hbCBhd2FyZHMuIFRoZXNlIGFyZSB3b25kZXJmdWwgZ2FtZXMgZm9yIGZhbWlsaWVzIG9yIGdyb3VwcyBvZiBob2JieSBnYW1lcnMuIFRoZXkgYXJlIHNpbXBsaXN0aWMsIHlldCBkZWVwLi4gCkkgZ29pbmcgZmlzaGluZywgSSBtYXkgd2FudCBhIHdoYWxlLCBidXQgSSBiZSBoYXBweSB3aXRoIGEgc2VhIGJhc3MuIFRoYXQgaXMgaG93IEkgdmlld2luZyB0aGlzLiBUaGV5IHdpbGwgcHVyc3VlIGxhcmdlIG1hbnVmYWN0dXJpbmcsIHRoYXQgYSBnb29kIHRoaW5nLCBNY0NsaW5jaGV5IHNhaWQuCkdSQU5EIFJBUElEUywgTUkgICBJbiBqdXN0IG9uZSB3ZWVrZW5kLCBKb2UgTWljaGFlbCBLb3N0ZXIgdG9vayBpbiBuZWFybHkgJDEwLDAwMCBwbGF5aW5nIHZpZGVvIHBva2VyIGF0IEtld2FkaW4gQ2FzaW5vIEhvdGVsIFJlc29ydC4gSGlzIGx1Y2sgaGFzIHJ1biBvdXQuIFRoZSBnb3Zlcm5tZW50IHNheXMgS29zdGVyIGNoZWF0ZWQgdGhlIFNhdWx0IFN0ZS4gTWFyaWUgY2FzaW5vIGJ5IHVzaW5nIGEgImxpZ2h0IHdhbmQsIiBhIGRldmljZSB0aGF0IGJsaW5kcyBjb2luIHBheW91dCBzZW5zb3JzIGluIGdhbWluZyBtYWNoaW5lcyAgIGFuZCBjYXVzZXMgbWFjaGluZXMgdG8gcGF5IG91dCB3aW5uaW5ncyBmYXIgaW4gZXhjZXNzIG9mIHdoYXQgd2FzIGFjdHVhbGx5IHdvbi4KSSBkaWRuJ3QgbGlrZSBzb21lIG9mIHRoZSBsYW5ndWFnZSBpbiBteSBsZWFzZSB0aGF0IHdvdWxkIGF1dG9tYXRpY2FsbHkgZm9yZmVpdCBzb21lIG9mIG15IHJpZ2h0cyBpZiBoZSBzYWlkIEkgZGVmYXVsdGVkIG9uIHBheW1lbnQsIGFuZCBEYXZpZCB0aGUgbWFuYWdlciB0b29rIG91dCB0aGF0IHBhcmFncmFwaCB3aXRoIG5vIGlzc3Vlcy4gCkFsbCBnb3Zlcm5tZW50cyBhcmUgb3BwcmVzc2l2ZSBieSBuYXR1cmUsIGJ1dCBzb21lIGFyZSB1bmJlYXJhYmx5IHRvbyBtdWNoLiBIYXZpbmcgbXkgZmluYW5jaWFsIGZyZWVkb20gZnJvbSBnb3Zlcm5tZW50LCBiZWluZyBhYmxlIHRvIG5vdCBmaW5hbmNlIHRoZSBjcmltZXMgb2YgbXkgZ292ZXJubWVudCBpcyBvbmUgb2YgdGhlIG1vc3QgaW1wb3J0YW50IG1vcmFsaXRpZXMgZm9yIG1lLiBDb3JlIGFsbW9zdCBraWxsZWQgdGhhdCBkcmVhbS4gClJlZCBiYXJuIGhhcyBhIGxpbWl0ZWQgcHJvZHVjdCBzZWxlY3Rpb24gYnV0IGl0IGdlbmVyYWxseSB2ZXJ5IGZyZXNoIGFuZCB2ZXJ5IGNvbXBldGl0aXZlbHkgcHJpY2VkLiBJIGZpbmQgdGhlIHF1YWxpdHkgYW5kIHNlbGVjdGlvbiBhdCBTdW5kYW5jZSB0aGUgYmVzdCBidXQgaXQgYWxzbyAkJCQuIEtpdmEgaXMgYSBzdGFwbGUgYnV0IGp1c3QgdG9vIGhlY3RpYyBmb3IgbWUgdG8gc2hvcCBhdC4gCldpdGggdGhlIExvbmRvbiAyMDEyIE9seW1waWNzIG92ZXIsIHRoZSBzcG90bGlnaHQgaGFzIHN0YXJ0ZWQgdG8gc2hpZnQgdG8gQnJhemlsLCB3aGljaCB3aWxsIGJlIGhvc3RpbmcgdGhlIDIwMTQgRklGQSBXb3JsZCBDdXAgYW5kIHRoZSAyMDE2IFN1bW1lciBPbHltcGljIGFuZCBQYXJhbHltcGljIEdhbWVzLiAKVGhpcyB3aWxsIHN0aW11bGF0ZSB0aGUgbmV1cm9ucyBpbiB0aGUgYnJhaW4uIFRoYXQgd2F5LCB0aGV5IGNhbiBlbmpveSB0aGUgYWR2ZW50dXJlIGFuZCBidWlsZCBhIGhlYWx0aHkgYnJhaW4uIEluIDIwMTcsIHJlcG9ydHMgY2xhaW0gdGhhdCB0aGVyZSB3YXMgYSA1MCUgaW1wcm92ZW1lbnQgaW4gY29nbml0aXZlIGZ1bmN0aW9uIGluIHNlbmlvciBjaXRpemVucyB0aGF0IGFyZSBpbnZvbHZlZCBpbiBvbmxpbmUgc3RyYXRlZ3kgZ2FtZXMuLiAKIk5vdyB0aGF0IEkgYW0gcmV0aXJlZCBmcm9tIGludGVybmF0aW9uYWwgY3JpY2tldCAgIGluIGZhY3QgYWxsIGNyaWNrZXQgaW4gQXVzdHJhbGlhICAgSSBhbSBncmFkdWFsbHkgbW92aW5nIGludG8gb3RoZXIgYXJlYXMsIiBXYXJuZSB3cm90ZSBpbiBoaXMgY29sdW1uIGluIHRoZSBUaW1lcy4gIlRoZXJlIGlzIGEgZGVhbCBpbiB0aGUgcGlwZWxpbmUgd2l0aCBhIHBva2VyIGNvbXBhbnkgdGhhdCB3aWxsIGludm9sdmUgcGxheWluZyBpbiBjZXJ0YWluIGV2ZW50cyB0aHJvdWdoIHRoZSB5ZWFyLiBJIGNhbiBmaXQgd2hhdCBJIGRvIGFyb3VuZCB0aGUgY3JpY2tldC4iLiAKQnkgdGhpcyBwb2ludCwgZXZlcnlvbmUga25vd3MgdGhhdCB1bnNjcnVwdWxvdXMgYmFua3MgaGVscGVkIHNldCBvZmYgdGhlIHdvcnN0IGVjb25vbWljIG1lbHRkb3duIHNpbmNlIHRoZSBGaXJzdCBEZXByZXNzaW9uIGJ5IGxlbmRpbmcgbW9uZXkgYXQgY3JpbWluYWxseSBoaWdoIGludGVyZXN0IHJhdGVzIHRvIHBlb3BsZSB3aG8gY291bGQgbm90IHBvc3NpYmx5IGFmZm9yZCB0byBwYXkgdGhlIGxvYW5zIGJhY2suIFRoZSBTdWJwcmltZSBNb3J0Z2FnZSBDcmlzaXMgcHJvYmFibHkgYmVnYW4gYXMgZWFybHkgYXMgMjAwNiBidXQgd2FzIGlnbm9yZWQgc2luY2UgaXQgcHJpbWFyaWx5IG9jY3VycmVkIGluIHVyYmFuIGFyZWFzIGFuZCBpbiBCbGFjayBhbmQgTGF0aW5vIG5laWdoYm9yaG9vZHMuIEl0IHdhcyB0aGUgaW5ldml0YWJsZSBjb2xsYXBzZSBvZiB0aGVzZSBtb3J0Z2FnZXMgdGhhdCB3YXMgdGhlIGdhc29saW5lIG9uIHRoZSBzbG93IGJ1cm5pbmcgZW1iZXJzIG9mIDMwIHllYXJzIG9mIHVucmVndWxhdGVkIGdyZWVkLi4gClRoZSBOYXRpb25hbCBIZXJpdGFnZSBMaXN0IG9mIEVuZ2xhbmQgaGFzIGJlZW4gYXZhaWxhYmxlIG9ubGluZSBzaW5jZSAyMDExLi4gCk1vdWNoZXogdm91cy4gCkhvdyB0byBQbGF5IFBva2VyICAgUG9rZXIgVGFibGUgUG9zaXRpb24KQmxvZyBCbG9nCk1vdW50YWluIFN0YXRlIFNjaG9vbCBPZiBNYXNzYWdlCk91ciBuYWlscyBuZWVkIGNhbGNpdW0gYSBsb3QgYW5kIG1pbGsgc2hvdWxkIGJlIHRoZSBiZXN0IHNvdXJjZSBmb3IgdGhpcy4gCk9uZSB0aGluZyB0byBrZWVwIGluIG1pbmQgaXMgdGhhdCBpZiB5b3UgZG9uJ3QgaGF2ZSBhIHRhYmxlIHNwZWNpZmljYWxseSBmb3IgYSBjZXJ0YWluIGdhbWUsIHN1Y2ggYXMgVGV4YXMgSG9sZCdlbSwgQ3JhcHMgb3IgUGFpIEdvdywgdGhlbiB5b3UgYXJlIGZyZWUgdG8gcGxheSB3aGF0ZXZlciBraW5kcyBvZiBwb2tlciB5b3Ugd2FudC4gT2YgY291cnNlLCBqdXN0IGJlY2F1c2UgeW91ciBQb2tlciBGZWx0IExheW91dCBpcyBkZXNpZ25lZCBmb3IgYSBjZXJ0YWluIGdhbWUgZG9lc24ndCBtZWFuIHlvdSBjYW4gdXNlIHRoZSB0YWJsZSBmb3Igb3RoZXIgdHlwZXMgb2YgcG9rZXIuIEl0IGNhbiBiZSBkaXN0cmFjdGluZywgaG93ZXZlci4uIAo0MzcgNDQxLiAKVGhlIG1vc3Qgc3RpbXVsdXMgdG8gZXhwb3J0cyBmcm9tIGEgbG93ZXIgZG9sbGFyIGlzIGZvciBuYXR1cmFsIHJlc291cmNlcywgd2hpY2ggbmVlZCBpdCB0aGUgbGVhc3QsIGFuZCB0aGUgbGVhc3Qgc3RpbXVsdXMgaXMgZm9yIG1hbnVmYWN0dXJpbmcsIHdoaWNoIG5lZWRzIGl0IHRoZSBtb3N0LiBUaGlzIHJlZmxlY3RzIGhvdyBtYW51ZmFjdHVyZXJzIGFkYXB0ZWQgdG8gdGhlIGhpZ2hlciBkb2xsYXIgb3ZlciB0aGUgcGFzdCBkZWNhZGUuIApGb3IgaW5zdGFuY2UsIGlmIGFuIGFnZW5jeSBtYWlsZWQgYSBsZXR0ZXIgdG8gYSBjbGllbnQgY2xhaW1pbmcgaXQgZGlkIG5vdCBlbmdhZ2UgaW4gaW1wcm9wZXIgbWVkaWEgYnV5aW5nIGJlaGF2aW9yLCBhbmQgdGhlIEZCSSBjYW4gcHJvdmUgaXQgaW5kZWVkIGRpZCwgdGhhdCBjb3VsZCBhbW91bnQgdG8gbWFpbCBmcmF1ZCwgV29vZCBzYWlkLiAKRnJvbSB0aGUgb3V0c2lkZSwgYW5kIGxpa2VseSBmcm9tIHRoZSBwZXJzcGVjdGl2ZSBvZiBtYW55IGxhcmdlciBhbmQgb2xkZXIgZGVtb2NyYWNpZXMgaW4gdGhlIGV1cm96b25lLCBTbG92YWtpYSBhY3Rpb24gaXMgdGhlIG92ZXJkdWUgY29ycmVjdGlvbiBvZiBkYW5nZXJvdXMgYW5kIHdyb25nIGhlYWRlZCBpcnJlc3BvbnNpYmlsaXR5LgpGb3IgaW5zdGFuY2UganVzdCBhcyBkb2dzIGFyZW4gc3VwcG9zZWQgdG8gd2VhciBzdWl0cywgc21va2UgY2lnYXJzIGFuZCBwbGF5IHBva2VyLCBwZW9wbGUgd2hvIGFzcGlyZSB0byBiZSBwcmltZSBtaW5pc3RlciBzaG91bGRuIGZhd24gb3ZlciBDaGluYSwgc2xhbSBBbGJlcnRhIG9yIGdvIHNxdWlzaHkgb24gdGVycm9yaXNtIGluIHRoZSB3YWtlIG9mIHRoZSBCb3N0b24gYm9tYmluZy4gVGhhdCBhIGJhZCBzdXJwcmlzZSBhbmQgaXQgd2h5IHRoZSBDb25zZXJ2YXRpdmVzIHJlbGVudGxlc3NseSBleHBsb2l0IEp1c3RpbiBnYWZmZXMuLiAKRGlzcG9zYWJsZSBkaWFwZXJzIGFyZSBub3QgZXZlbiBuZWNlc3Nhcnkgb3Zlcm5pZ2h0LiBNeSBzb24gd2FzIGEgaGVhdnkgb3Zlcm5pZ2h0IHdldHRlciB3aG8gY291bGQgcnVwdHVyZSBkaXNwb3NhYmxlIGRpYXBlcnMuIEkgZm91bmQgYSBidWxsZXRwcm9vZiBvcHRpb24gZm9yIHVzIGFmdGVyIHRyaWFsIGFuZCBlcnJvci4gQXMgZm9yIG15IGRhdWdodGVyLCBJIGV4Y2x1c2l2ZWx5IGNsb3RoIGRpYXBlcmVkIGhlciwgYnV0IHNoZSB3YXMgc3VwZXIgZWFzeSBiZWNhdXNlIHRoYXQga2lkIHBlZWQgZmFpcnkgc3ByaW5rbGVzLgpIYWxsdWNpbmF0aW9ucyBsaWtlIE9QIGRlc2NyaWJlZCB0eXBpY2FsbHkgY29tZSBmcm9tIHNldmVyZSBhbGNvaG9sIHdpdGhkcmF3YWwsIHdoaWNoIHlvdSBjYW4gZXhwZWN0IGZyb20gaGVhdnkgZGFpbHkgYWxjb2hvbCBpbnRha2UuIEhpdHRpbmcgdGhlIGFsY29ob2wgaGFyZCBvbmx5IG9uICJtb3N0IHdlZWtlbmRzIiBpbiBhbGwgbGlrZWxpaG9vZCBkb2VzIG5vdCBhZGQgdXAgb3ZlciB0aW1lIHRvIHByb2R1Y2UgaGFsbHVjaW5hdGlvbnMuIFdoZW4gc29tZW9uZSBiaW5nZSBkcmlua3Mgb24gd2Vla2VuZHMgdGhleSBtYXkgaGF2ZSBzb21lIHNoYWtpbmVzcyBhbmQgYW54aWV0eSBvbiBNb25kYXkgKEkgc3VyZSBtYW55IG9mIHVzIGhhdmUgZXhwZXJpZW5jZWQgdGhpcyksIGJ1dCB0aGUgYnJhaW4gdHlwaWNhbGx5IGhhcyBlbm91Z2ggdGltZSB0byByZWNhbGlicmF0ZSB0aHJvdWdob3V0IHRoZSB3ZWVrIGFuZCBuZXZlciBmdWxseSBhZGp1c3RzIHRvIHJlbHlpbmcgb24gYWxjb2hvbCB0byBtYWludGFpbiBpdHMgbmV1cm9jaGVtaWNhbCBiYWxhbmNlLgpBbmQgSSdtIHRlbGxpbmcgeW91LCB5b3UgZG8gb25lIG9mIHRoZXNlIHRocmVlLCB5b3UnbGwgZmVlbCBhIGhlbGwgb2YgYSBsb3QgYmV0dGVyIHRoYW4gc2l0dGluZyBob21lIGFsb25lIHdhdGNoaW5nIGEgbmlnaHQgb2YgIlRoZSBXYXkgV2UgV2VyZSIsICJMb3ZlIFN0b3J5IiwgYW5kICJXaGVuIEhhcnJ5IE1ldCBTYWxseSIuLiAKUmVhbGx5PyBJIHRob3VnaHQgVGhlIEhhcHBlbmluZyB3YXMgd2F5IGJldHRlci4gVGhpcyBtb3ZpZSB0b29rIG5vIHRpbWUgdG8gZXhwbGFpbiBhbnl0aGluZy4gVGhleSBzdGFydGVkIGEgc29ydCBvZiBleHBsYW5hdGlvbiB3aXRoIHRoZSBuZXJkeSBibGFjayBkdWRlIGFuZCB0aGUgImRlbW9ucyIgb3Igd2hhdGV2ZXIgdGhhdCBoZSB3YXMgd3JpdGluZyBhYm91dCAod2hpY2ggd2FzIHN0dXBpZCBlbm91Z2ggdGhhdCB0aGV5IGNvbnZlbmllbnRseSBnb3Qgc3R1Y2sgaW4gdGhlIGhvdXNlIHdpdGggYSBndXkgd2hvIGtuZXcgZXZlcnl0aGluZyBhYm91dCB0aGUgYXBvY2FseXBzZSksIGFuZCB0aGVuIGtpbGxlZCB0aGUgZ3V5IG9mZiBhbmQgd2VudCBub3doZXJlIHdpdGggaXQuCjUuIFByaWNlIHRvIGluY3JlYXNlIHByb2ZpdHMuIApNZW4gYXJlIHdlbGNvbWUgdG8gcGFydGljaXBhdGUgYXMgY29hY2hlcywgcmVmZXJlZXMsIGFubm91bmNlcnMgYW5kIGluIHRlYW0gc3VwcG9ydCByb2xlcy4gVGhlIHNwb3J0IGlzIGdvdmVybmVkIGJ5IHRoZSBydWxlcyBvZiB0aGUgV29tZW4ncyBGbGF0IFRyYWNrIERlcmJ5IEFzc29jaWF0aW9uIChXRlREQSksIHdoaWNoIHNldHMgdGhlIHJ1bGVzIGFuZCBkZXRlcm1pbmVzIHRoZSBiYXNlbGluZSBza2lsbHMgcmVxdWlyZWQgb2YgcGFydGljaXBhbnRzLi4gClRoZSBteXRoIG1ha2luZyBhYmlsaXRpZXMgb2YgdGhlIFdvcmxkIFNlcmllcyBvZiBQb2tlciBoYXZlIG9ubHkgZ3Jvd24gaW4gc3RhdHVyZSBpbiByZWNlbnQgdGltZSB3aXRoIHRoZSBsYXN0IGZldyBjaGFtcGlvbnMgYmVpbmcgcHJldmlvdXNseSB1bmtub3duIG9ubGluZSBwbGF5ZXJzIHdobyBvdmVybmlnaHQgYmVjYW1lIGNlbGVicml0aWVzLiBBdXN0cmFsaWEgSm9zZXBoIEhhY2hlbSB3YXMgYSBub2JvZHkgc2l4IG1vbnRocyBhZ28gYnV0IG5vdyBoZSBpcyBmYW1vdXMgYXMgdGhlICQ3LjUgbWlsbGlvbiB3aW5uZXIgb2YgdGhlIDIwMDUgV29ybGQgU2VyaWVzIG9mIFBva2VyIG1haW4gZXZlbnQuIFRoZSB5ZWFyIGJlZm9yZSBpdCB3YXMgR3JlZyAnRm9zc2lsbWFuJyBSYXltZXIgd2hvIGRlZmVhdGVkIDIsNTc2IHBsYXllcnMgb24gaGlzIHdheSB0byB0aGUgdGl0bGUgYW5kIDUgbWlsbGlvbiBkb2xsYXJzIGFmdGVyIHdpbm5pbmcgaGlzIHNlYXQgdmlhIGFuIG9ubGluZSBwb2tlciBzaXRlLCBmb3IgYW4gb3JpZ2luYWwgc3Rha2Ugb2YgJDQwLi4gCkhvd2V2ZXIsIGhpcyB0dXJuIGNoZWNrIGNhcHMgaGlzIHJhbmdlIHRvIG9uZSBwYWlyLiAKQ29mZmVlIHVuZGVyZ3JvdW5kIGlzIGdyZWF0IGJ5IHRoZSB3YXkuIApUaGUga2V5bm90ZSBhZGRyZXNzIHdhcyBkZWxpdmVyZWQgYnkgQnJlc2NpYSBVbml2ZXJzaXR5IENvbGxlZ2UgcHJvZmVzc29yIEp1bGllIFlvdW5nLCB3aG8gc3Bva2UgYWJvdXQgaG93IHRoZSBmYW1pbHkgY291cnQgc3lzdGVtIGNhbiBiZSBhIGNoYWxsZW5naW5nIHBsYWNlIGZvciB3b21lbiB0cnlpbmcgdG8gaGVhbCBmcm9tIGludGltYXRlIHBhcnRuZXIgdmlvbGVuY2UuCk15IGZpcnN0IGxlc3NvbiBJIGxlYXJudCB3YXMgbm90IHRvIHBsYXkgcG9rZXIuIApNeSBkYWQgd2FzIGEgZG91Y2hlIHNvIEkgc3RydWdnbGUgd2l0aCBiZWluZyBhdHRyYWN0ZWQgdG8gYXNzaG9sZXMsIGJlY2F1c2UgdGhhdCB3b3VsZCByZXBsaWNhdGUgdGhlIHBhdHRlcm5zIEkgZmVsdCBhcyBhIGNoaWxkLiAKT24gdGhlIGZpcnN0IGRheSBvZiBjbGFzcyBmb3IgdGhlIGZhbGwgcHJvZ3JhbSwgaXQganVzdCBzbyBoYXBwZW5lZCB0aGF0IGFuIGFjdHVhbCBzcG9ydHMgYmFyICghKSB3YXMgb3BlbmluZyBpbiB0aGUgbG9iYnkgb2YgdGhlIGxvY2FsIGxhbmRtYXJrIGhvdGVsIChUaGUgT3JyaW5ndG9uKSBhIGZldyBibG9ja3MgYXdheS4gCldoZW4gdGhpcyBkYXRhIGlzIGludGVycG9sYXRlZCwgaXQgZ2l2ZXMgdGhlIG5hbWUgRGljayBQYXJrZXIuIEZvciBhbiBJbmRpYW4gb3JwaGFuIHN0cmFuZGVkIGFsb25lIG9uIGEgYm9hdCB3aXRoIG5vIG9uZSBvciBub3RoaW5nIGJ1dCBhIHRpZ2VyLCBkb2VzIGFueW9uZSBlbHNlIHRoaW5rIGl0IGlzIHN0cmFuZ2UgdGhhdCBQaSBuYW1lZCB0aGUgdGlnZXIgRGljayBQYXJrZXI/LiAKSSBob25lc3RseSBiZWxpZXZlIHRoYXQgaWYgZXZpZGVuY2UgZW1lcmdlZCB0aGF0IHNob3dlZCBEb25hbGQgVHJ1bXAgYW5kIFZsYWRpbWlyIFB1dGluIHBlcnNvbmFsbHkgd29ya2luZyB0b2dldGhlciB0byBjaGFuZ2Ugdm90ZXMgaW4gdGhlIDIwMTYgZWxlY3Rpb24sIG15IHBhcmVudHMgd291bGQgc2F5IHRoYXQgaXQgd2FzIGEgZ29vZCB0aGluZyBiZWNhdXNlIGl0IGhlbHBlZCBlbGVjdCBhIFJlcHVibGljYW4gb3ZlciBhIERlbW9jcmF0Li4gClRoZXJlIGFyZSBhbHNvIGdyYXNzICh0dXJmKSBjb3VydHMgYXQgSm9obiBLZW1wIFBhcmssIHdoaWNoIGlzIGFsc28gaW4gRm9sc29tLiBCb3RoIGFyZSBmcmVlLlRoZSBGb2xzb20gQWR1bHQgTGVhZ3VlIGhhcyBhIHNlY3Rpb24gZm9yIGZyZWUgYWdlbnQgb3Igc29sbyBwYXJ0aWNpcGFudHMgd2hlcmUgeW91IGNhbiB0cnkgdG8gZmluZCBhIHRlYW0gdG8gcGxheSB3aXRoLCBidXQgdGhlaXIgZ2FtZXMgYXJlIHNjaGVkdWxlZCBiZXR3ZWVuIDY6MDAgcG0gYW5kIDEwOjAwIHBtIChub3Qgc3VyZSBpZiB0aGF0IHdpbGwgd29yayB3aXRoIHlvdXIgc2NoZWR1bGUpLiBJdCBjb3N0cyBhYm91dCAkNDYgdG8gam9pbiBwZXIgc2Vhc29uLlRoZSB2b2xsZXliYWxsIHNlYXNvbiBpcyBhbG1vc3Qgb3ZlciwgSSBndWVzc2luZyB0aGV5IHN0YXJ0IGEgbmV3IGxlYWd1ZSAvIGRpdmlzaW9uIG9uIHRoZSB3ZWVrIG9mIEhhbGxvd2VlbiAoSSBjdXJyZW50bHkgcGxheWluZyB0aGlzIHNlYXNvbiB3aXRoIHNvbWUgY293b3JrZXJzLCBidXQgd2lsbCBiZSB0YWtpbmcgYSBicmVhayB3aGVuIHRoZSBzZWFzb24gaXMgb3Zlcikuc2NhdHRlcmVkc2hvd2VycyAgMSBwb2ludCAgc3VibWl0dGVkIDUgbW9udGhzIGFnb1dvdywgdGhhbmsgeW91IHNvIHNvIG11Y2guIApQYWluIGFuZCBmdW5jdGlvbmFsIGxpbWl0YXRpb25zIGFyZSBrZXkgZmFjdG9ycyBpbiBhIHBlcnNvbiBhYmlsaXR5IHRvIGVuam95IGxpZmUgYW5kIHBhcnRpY2lwYXRlIGluIGFjdGl2aXRpZXMgdGhhdCBtYWtlIGxpZmUgbW9yZSBmdWxmaWxsaW5nLgpXaGlsZSBtb3N0IGhhdmUgdGhlIGltcHJlc3Npb24gTGFzIFZlZ2FzIGNhc2lub3MgdGFrZSBhbiBPY2VhbidzIDExIHR5cGUgc2NoZW1lIHRvIHJpcCBvZmYsIHRoaWV2ZXMgaGF2ZSBwcm92ZW4gb3RoZXJ3aXNlIGluIHRoZSBsYXN0IHdlZWsuCklmIG5vdyBIYXJyaXMgYW5kIFNhbmRlcnMgYXJlIGZhY2luZyBvZmYgYXQgdGhlIEROQywgdGhlIGZvcm1lciBCZXJuaWUgdm90ZSBmcm9tIENhbGlmb3JuaWEgd291bGQgYmUgaW4gSGFycmlzIHBvY2tldHMgKGJlY2F1c2Ugc2hlIHRvb2sgYWxsIHRoZSBkZWxlZ2F0ZXMgZnJvbSBDQSkuLiAKVGhlIENDUCB3YXMgY3J5aW5nIGZvdWwgd2l0aCB0aGUgZXh0cmFkaXRpb24gY2hhcmdlcy4gClRoZXkgc2VlIHRoZSBzdGF0dWUgb2YgQ2hyaXN0IHRoZSBSZWRlZW1lciBhbmQgc3R1ZHkgdGhlIG1vc2FpYyBzaWRld2Fsa3MgKHBhdmVtZW50cykgYmVmb3JlIHNrZXRjaGluZyBiaXJkcywgcGxhbnRzLCBwZW9wbGUgYW5kIHNjZW5lcnkuIApPciB5b3UganVzdCB0aGluayB0aGF0ICQ1IGlzIGEgYml0IHRvbyBtdWNoIHRvIHJpc2ssIGJlaW5nIGEgY29uc2VydmF0aXZlIGhpZ2ggcm9sbGVyIHdobydzIHdpbGxpbmcgdG8gZ2l2ZSB1cCB0aGUgYW50ZSB5b3UgcHV0IGluIHRoZSBwb3QpLiBZb3Uga2VlcCBnb2luZyBhcm91bmQgdGhlIHRhYmxlIHVudGlsIGV2ZXJ5b25lIGhhcyBhIGNoYW5jZSB0byBzZWUsIHJhaXNlIG9yIGZvbGQsIGFuZCBpZiB0aGVyZSBhcmUgcmFpc2VzIHRoZW4gZWFjaCBwZXJzb24gd2hvIHdhbnRzIHRvIHN0YXkgaW4gbXVzdCBtYXRjaCB0aGUgYmV0cyBtYWRlLi4gCkxpc3RlbiwgdGlwcyBhcmUgZ3JlYXQsIGVzcGVjaWFsbHkgY29uc2lkZXJpbmcgeW91IGRlYWwgYWJvdXQgdGhpcnR5IHRvIHRoaXJ0eSBmaXZlIGhhbmRzIGFuIGhvdXIuIFRoZSBvbmx5IHByb2JsZW0gaXMgcGVvcGxlIGFyZSBnb2luZyB0byBsb3NlLiAKRXNwZWNpYWxseSBjb25zaWRlcmluZyBJIGxpdmUgaW4gYW4gYXBhcnRtZW50IHdpdGggYWxsIGNhcnBldCwgYW5kIGhhdmUgbXkgcmlnIGxlc3MgdGhhbiBhIGZvb3Qgb2ZmIHRoZSBjYXJwZXQuLiAKRGVuIGRlYWwgaW4gbGltYm8gYXMgVHJlbGl2aW5nClRoZSBtb3N0IGNvbW1vbiBmb3JtIG9mIG1vZGVybiBzbGF2ZSB0cmFkZSBpcyBjb21tb25seSByZWZlcnJlZCB0byBhcyBodW1hbiB0cmFmZmlja2luZy4gSW4gb3RoZXIgYXJlYXMsIHNsYXZlcnkgKG9yIHVuZnJlZSBsYWJvdXIpIGNvbnRpbnVlcyB0aHJvdWdoIHByYWN0aWNlcyBzdWNoIGFzIGRlYnQgYm9uZGFnZSwgdGhlIG1vc3Qgd2lkZXNwcmVhZCBmb3JtIG9mIHNsYXZlcnkgdG9kYXksWzJdIHNlcmZkb20sIGRvbWVzdGljIHNlcnZhbnRzIGtlcHQgaW4gY2FwdGl2aXR5LCBjZXJ0YWluIGFkb3B0aW9ucyBpbiB3aGljaCBjaGlsZHJlbiBhcmUgZm9yY2VkIHRvIHdvcmsgYXMgc2xhdmVzLCBjaGlsZCBzb2xkaWVycywgYW5kIGZvcmNlZCBtYXJyaWFnZS5bN10KNSBwb2ludHMgIHN1Ym1pdHRlZCAxMCBkYXlzIGFnbwpHdWVzcyBJIGNhbiBzZWUgdGhlIGZvcmVzdCBmb3IgdGhlIHRyZWVzLiAyIHBvaW50cyAgc3VibWl0dGVkIDE0IGhvdXJzIGFnb0kgdW5kZXJzdGFuZCB5b3UuIApUaGUgcXVlc3Rpb24gaXMsIHNob3VsZCB3ZSBwYW5pYz8gSSByZW1lbWJlciBhIGZldyB5ZWFycyBhZ28gcmVhZGluZyBvbmUgb2YgdGhvc2Ugc3RvcmllcyBpbiBhIGxvY2FsIHBhcGVyIGFib3V0IGhvdyB3ZSBkdWUgZm9yIGEgcGFuZGVtaWMgaW5mbHVlbnphLiAKQnV0IHRoYXQgd2hhdCBvdXIgbGVhZGVycyBhbHdheXMgZG8uIFdlIGFsbCBzYXcgYW5kIG1hbnkgb2YgdXMgd2VyZSBmZWQgdXAgb2YgTmF3YXogU2hhcmlmIGNyb25pZXMgaG9sZGluZyBsZW5ndGh5IHByb3BhZ2FuZGEgc3BlZWNoZXMgZXZlcnkgZGF5LiAKRGF5cyBsYXRlIHRvIHRoaXMgcG9zdCwgYnV0IEkgZG8gaG9wZSB0aGV5IGhhdmUgc29tZSBraW5kIG9mIFNwZWNpYWwgUG93ZXJzLCBidXQgaXQgZG9lc24gaGF2ZSB0byBiZSBmdWxsIG9uIG1hZ2ljLiBJIHdhbnQgc29tZXRoaW5nIG1vcmUgdGhhbiBqdXN0IGNob29zaW5nIGRpZmZlcmVudCB0eXBlcyBvZiBndW5zIGFuZCBtYXliZSBhIHN3b3JkIG9mIHNvbWUga2luZCB3aGVuIGl0IGNvbWVzIHRvIGNvbWJhdC4gSSBkbyB3YW50IHJlcGxheSB2YWx1ZSBmb3IgYSBCR1Mgc3R5bGUgZ2FtZS4gClRoZSBTd2l0Y2ggaXMgYWxzbyBwb3J0YWJsZSB3aGljaCBmb3IgYSBsb3Qgb2YgcGVvcGxlIG1lYW5zIHRoYXQgdGhleSB3b3VsZCByYXRoZXIgYnV5IGEgZ2FtZSBvbiB0aGUgc3lzdGVtIHRoYW4gYW55dGhpbmcgZWxzZS4gCkFub3RoZXIgY2hhbGxlbmdlOiBwcmljaW5nIGl0IHJpZ2h0LiBZb3UgY3JlYXRpbmcgYSBuZXcgY2F0ZWdvcnkgeW91IGhhdmUgdG8gYmUgZmxleGlibGUgYmVjYXVzZSB0aGVyZSBhcmUgbm8gY29tcGFyYWJsZXMuIApPdmVydmlldyBmb3IgYmFyYnN0ZWVsZQpUcnkgYWRkaW5nIGEgY291cGxlIG9mIGRyb3BzIG9mIGZsb3dlciBlc3NlbmNlIChCYWNoIFJlc2N1ZSBSZW1lZHksIGNoZXN0bnV0IGJ1ZCwgdmVydmFpbiwgb3IgdmluZSBhcmUgdHlwaWNhbCBlc3NlbmNlcyB1c2VkIGZvciBzcHJheWluZykgdG8geW91ciBjYXQncyB3YXRlciBlYWNoIGRheSBmb3IgYSBmZXcgd2Vla3MuLiAKV2hhdCBhIHdheSB0byBzdGFydCB0aGUgZGF5ISBJIGFza2VkIGhlciBuaWNlbHkgdG8gdGhpbmsgYWJvdXQgaG93IHNoZSBwcmVzZW50cyAoZGlzdHJlc3NpbmcgbmV3cykgaW4gdGhlIGZ1dHVyZS4gSSBzYWlkLCAiKHZlcmJhdGltIGZyb20gdGV4dCkiIGluIGNhc2UgeW91IHdvbmRlcmluZy4oREgvcGV0cy9mcmllbmRzKSBkaWQgKGZ1bm55L2N1dGUvc3VwcG9ydGl2ZSB0aGluZykgdGhlIG90aGVyIGRheS4gSSB0aG91Z2h0IHlvdSBnZXQgYSBraWNrIG91dCBvZiB0aGF0IUhvdyBoYXMgeW91ciB3ZWVrIGJlZW4/IChPciBhc2sgYWJvdXQgc29tZXRoaW5nIHNwZWNpZmljIHlvdSBrbm93IGFib3V0IHRoYXQgaGUgZGlkIGFuZCB3b3VsZCB3YW50IHRvIHRlbGwgeW91IGFib3V0KUxvdHMgb2YgTG92ZSxZb3VyIGRhdWdodGVyLCBIYWxmUGludE5vdyBsZXQgbWUgYnJlYWsgZG93biB0aGlzIGV4YW1wbGU6UGFyYWdyYXBoIG9uZSBpcyB3aGF0IGlzIGdvaW5nIG9uIHdpdGggeW91IHJpZ2h0IG5vdy4gCjA5LzE4LzIwMTQgMDU6NTYgUE0gTURUICAgQm91bGRlciBCcmFuZHMgSW5jLiwgdGhlIGxvY2FsbHkgYmFzZWQgZmlybSB0aGF0IG9wZXJhdGVzIEV2b2wgRm9vZHMgYW5kIEVhcnRoIEJhbGFuY2UsIHdpbGwgZGlzdHJpYnV0ZSBpdHMgVWRpJ3MgR2x1dGVuIEZyZWUgcGl6emEgY3J1c3QgdG8gbW9yZSB0aGFuIDEsMDAwIFBhcGEgTXVycGh5J3MgbG9jYXRpb25zIG5hdGlvbndpZGUsIG9mZmljaWFscyBhbm5vdW5jZWQgVGh1cnNkYXkuIEZ1bGwgU3RvcnkKU3VyZSwgeW91IGNhbiBkZW55IHRoYXQgdGhlc2UgZGlmZmVyZW5jZXMgZXhpc3QgYW5kIHByZXRlbmQgdGhhdCBodW1hbnMgYXJlIGlkZWFsIHBlcnNvbnMgbW9sZGVkIGJ5IG5vdGhpbmcgYnV0IHRoZSBkZW1hbmRzIG9mIHNvY2lldHksIGJ1dCB0aGF0IGp1c3Qgbm90IHdoYXQgcmVhbGl0eSBpcyBsaWtlLgpUaHVyc2RheSdzIGRyYXdpbmcgYmV0d2VlbiBZYW5jZXkgYW5kIFNpbW9uZHMgd2FzIGRlY2lkZWQgYnkgdGllIGJyZWFraW5nIHByb2NlZHVyZXMgbGFpZCBvdXQgaW4gYSAxNzA1IFZpcmdpbmlhIGxhdy4gCk91ciBsYXRlIG5pZ2h0IGxvdmluJyBleWVzIHN3ZWFyIENvbmllJ3MgImV2ZW4gdGFsbGVyIHRoYW4geW91J2QgaW1hZ2luZSIuIExlbm8ncyByZXBsYWNlbWVudCBpcyBpbiB0b3duIGZvciB0aGUgIkxpbmNvbG4gYXMgSHVtb3Jpc3QiIGV2ZW50IGF0IEZvcmQncyBUaGVhdHJlLiAKVGhlIG90aGVyIG1ham9yIHNwb3J0cyBsZWFndWVzIGRvbid0IHJlYWxseSBoYXZlIGNvbXBldGl0aW9uIG9uIHRoZSBuYXRpb25hbCBzY2FsZS4gVGhlIE5GTHMgdGFsZW50IGlzIHN0YXlpbmcgaW4gdGhlIE5GTCBjdXogZXZlcnl0aGluZyBlbHNlIGlzIGEgZG93bmdyYWRlLiBTYW1lIGZvciB0aGUgTkJBLiAKQSBQaG9lbml4IG1hbiB3YXMgZmluZWQgYW5kIHB1bmlzaGVkIHdpdGggamFpbCB0aW1lIGZvciBob2xkaW5nIEJpYmxlIHN0dWRpZXMgaW4gaGlzIGhvbWUuIEhlIGJlZ2FuIGhpcyA2MCBkYXkgc2VudGVuY2UgTW9uZGF5IG1vcm5pbmcuCkl0IHdhc24gcmVhbGx5IGEgMTBrIHRvdXJuYW1lbnQuIEEgbGFyZ2UgcGFydCBvZiB0aGUgZmllbGQgb25seSBoYWQgdG8gcGxheSBmb3IgNWsuIApQYWNlciBNaWNoYWVsIEthc3Byb3dpY3ogd2FzIGRyb3BwZWQgZnJvbSB0aGUgQXVzdHJhbGlhbiB0ZWFtIGFuZCBoaXMgQ3JpY2tldCBBdXN0cmFsaWEgY29udHJhY3Qgd2FzIG5vdCBleHRlbmRlZCBmb2xsb3dpbmcgdGhlIDIwMDUgQXNoZXMgZGVmZWF0LiBIZSBjb21wbGV0ZWQgYSBNYXN0ZXJzIG9mIEJ1c2luZXNzIEFkbWluaXN0cmF0aW9uIGF0IHRoZSBVbml2ZXJzaXR5IG9mIFF1ZWVuc2xhbmQgQnVzaW5lc3MgU2Nob29sLiAKTm90IHNheWluZyB5b3Ugc2hvdWxkIGZvbGQgZmxvcCwgdGhhdCB3b3VsZCBiZSBudXRzLiBCdXQgeW91IGFyZSBzYXlpbmcgeW91IHJhaXNlZCBmbG9wIGJlY2F1c2UgeW91IHdlcmUgbW9zdCBsaWtlbHkgYWhlYWQuIApZb3UgaGF2ZSB0byByZW1lbWJlciB0aGlzIHdhcyBvbmx5IGFib3V0IDMwIG1pbnV0ZXMgYWZ0ZXIgZXZlcnlvbmUgc2hvd2VkIHVwLiBNeSBicm90aGVyIHRvb2sgYWxsIHRoZSBwaWN0dXJlcyBhbmQgcGVvcGxlJ3MgZmFjZXMgbG9va2VkIGxpa2UgYml0dGVyIHBhaW4uIFRoZSAiTyBmYWNlIiB3YXMgb2J2aW91c2x5IHRoZSBiaWdnZXN0IHN1cHBvcnRlciwgYnV0IGluIHRoZSBlbmQsIG91ciBCbHVlIFBva2VyIFRhYmxlIEZlbHQgQ2xvdGggd2FzIGRlc3Ryb3llZC4gR29vZCB0aGluZyB0aG91Z2ggd2UgYm91Z2h0IGVub3VnaCB1bml0cyBpbiBjYXNlIGlzc3VlcyBsaWtlIHRoaXMgb25lIGFyb3NlLiBXaXRoaW4gMTUgbWludXRlcyBpdCB3YXMgYXMgZ29vZCBhcyBuZXcgYW5kIGV2ZXJ5b25lIGVuam95ZWQgdGhlIHJlc3Qgb2YgdGhlaXIgdGltZS4gRnJvbSB0aGVuIG9uIG91dCwgdGhvdWdoLCB3ZSB3b24ndCBhbGxvdyBmb29kIG9yIGRyaW5rcyBhdCB0aGUgdGFibGUuIFRoYXQgaXMgdW5sZXNzIHBlb3BsZSB1c2UgdGhlIHByb3BlciBjdXBob2xkZXJzIHNpdHVhdGVkIGFyb3VuZC4KU2hlIGhhcyBhIGh1Z2Ugc21pbGUgb24gaGVyIGZhY2UgYW5kIGlzIHNoYWtpbmcgaGFuZHMgd2l0aCBTdGF0ZSBvZmZpY2lhbHMsIGxvY2FsIG5ld3MsIGxvY2FsIGNlbGVicml0aWVzLCBhbmQgdGhlbiBmaW5kcyBoZXJzZWxmIGdpdmluZyBhIGRlZXAgc2lnaC4gCk1hc3NhZ2Ugc3R1ZGVudHMgYXJlIGFkdmlzZWQgb24gbmVjZXNzYXJ5IHByZWNhdXRpb25zIHdoZW4gd29ya2luZyB3aXRoIGNsaWVudHMgd2hvIGFyZSBISVYgcG9zaXRpdmUuIEhlciBhcnRpY2xlcyBoYXZlIGFwcGVhcmVkIGluIHN1Y2ggbWFnYXppbmVzIGFzIEltYXJhLCBDb3Jwb3JhdGUgQ29sb3JzIEUgemluZSBhbmQgRW50ZXJwcmlzZSBWaXJnaW5pYS4gCldoeSB3b250IHp5bmdhIGxldCB5b3UgYnV5IGNoaXBzIGZvciBUZXhhcyBob2xkZW0KSXQgaXMgaW1wb3J0YW50IHRvIGtub3cgdGhhdCB0byBwbGF5IG9ubGluZSBwb2tlciA3IENhcmQgU3R1ZCBIaSBMbywgeW91IGhhdmUgdG8gYmUgOCBvciBiZXR0ZXIgaW4gdGhlIHF1YWxpZmllci4gVGhhdCBtZWFucyB0aGF0IGEgaGFuZCBzaG91bGQgdHVybiBvdXQgKGF0IHRoZSB3b3JzdCBjYXNlKSA4IGZvciBsb3csIHNvIHlvdSBjYW4gYmUgYWJsZSB0byB3aW4gdGhlIGxvdyBzaGFyZSBvZiB0aGUgcG90LiAKU2hvdWxkIHdlIGp1c3QgbW92ZSB0byB3b3JrIHNoYXJpbmcgb3IgYSB0ZWNobm9jcmFjeSB0aGF0IGZpcnN0IGRldGVybWluZXMgdGhlIG5lZWRzIG9mIHNvY2lldHkgYW5kIGFsbG9jYXRlcyB3b3JrIGJhc2VkIG9uIHRoYXQ/CldoYXQgdGhpcyBndXkgZGlkIHdhcyBjb2xkIGJsb29kZWQgbXVyZGVyLiAKUm90aGVvbmUgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KSSBkaWRuIHJlcGVhdCBwcm9wYWdhbmRhLCBJIGp1c3QgdG9vayB3aGF0IEhpbGFyeSBDbGludG9uIGFjdHVhbGx5LCBsaXRlcmFsbHkgc2FpZCwgYXMgeW91IGNhbiBzZWUgaW4gbXkgZWFybGllciByZXBseSwgc2hlIHNhaWQgc2hlIHdhbnRlZCB0byBmb3JjZSBtaWxpdGFyeSBhY3Rpb24gYWdhaW5zdCBSdXNzaWEsIHdpdGggcmVnYXJkcyB0byB0aGUgc2l0dWF0aW9uIGluIEFsZXBwbywgbWFraW5nIFN5cmlhIGEgbm8gZmx5IHpvbmUuIFRoaXMgaXNuIHByb3BhZ2FuZGEsIHNoZSBsaXRlcmFsbHkgc2FpZCB0aGF0LCBJIHNhaWQgbm90aGluZyBhYm91dCBXV0lJSSBvciB3aGF0IGhlciBwbGFucyBhcmUsIG9yIGFueXRoaW5nIGFib3V0IHRoZSBtZWRpYSwganVzdCB0aGF0IHNoZSBzdGF0ZWQgaGVyc2VsZiB0aGF0IHNoZSB3YW50cyB0byBnbyB0byB3YXIgd2l0aCBSdXNzaWEuIEJ1dCBpcyB5b3VyIHBvc2l0aW9uIHRoYXQgd2Ugc2hvdWxkIGFsbG93IFJ1c3NpYSBkbyBkbyB3aGF0IGl0IHdhbnRzPyBTaGFsbCBpdCBjb250aW51ZSB0byBib21iIGNpdmlsaWFucyBpbiBTeXJpYT8gU2hhbGwgaXQgY29udGludWUgdG8gYW5uZXggY291bnRyaWVzPy4gClN3ZWRpc2ggbWFzc2FnZSBpcyBhIHZlcnkgcmVsYXhpbmcgYW5kIHRoZXJhcGV1dGljIHN0eWxlIG9mIGJvZHl3b3JrLiBJdCBjb21iaW5lcyBvaWxzIG9yIGxvdGlvbiB3aXRoIGFuIGFycmF5IG9mIHN0cm9rZXMgc3VjaCBhcyByb2xsaW5nLCBrbmVhZGluZywgYW5kIHBlcmN1c3Npb24gdG8gaGVscCB0aGUgYm9keSBpbXByb3ZlIGl0cyBjaXJjdWxhdGlvbi4gVGhlIGJlbmVmaXRzIG9mIHRoaXMgdHlwZSBvZiBib2R5d29yayBhcmUgd2lkZSByYW5naW5nIGFuZCBpbmNsdWRlIHJlbGllZiBmcm9tIGFjaGVzIGFuZCBwYWlucywgZGVjcmVhc2VkIHN0cmVzcyBsZXZlbHMgaW4gdGhlIGJvZHksIGVuaGFuY2VkIG1lbnRhbCBjbGFyaXR5LCBpbXByb3ZlZCBhcHBlYXJhbmNlLCBhbmQgZ3JlYXRlciBmbGV4aWJpbGl0eS4uIApTaGUganVzdCBzbyBiZWF1dGlmdWwgaW4gZXZlcnkgYXNwZWN0IG9mIHRoZSB3b3JkLiBJIGxvdmUgaGVyIHNvIG11Y2ggYW5kIEkga25vdyBpZiBzaGUga25ldyBzaGUgd291bGQgbG92ZSBtZSBiYWNrLi4gCkl0J3MgcGFydCBvZiBTUEQgYW5kIHdlIHdpbGwgbm90IGNhdXNlIHRoYXQgdHlwZSBvZiBkaXNjb21mb3J0IGZvciBhIHBpY3R1cmUuIkl0IGNhbiBiZSBzY2FyeSB0byBpbmZvcm0gZ3JhbmRwYXJlbnRzIG9mIHRoZSBkaWFnbm9zaXMgd2hlbiB5b3UgYXJlIHVuc3VyZSBvZiB0aGVpciByZWFjdGlvbi4gV2l0aCBoZXIgQXQgc29tZSBwb2ludCAsIGl0IG1heSBiZSBiZXN0IHRvIHRlbGwgaGVyIGFuZCBzZXQgYm91bmRhcmllcy4gIk1JTCwgdGhlcmUgaXMgbm90aGluZyB3cm9uZyB3aXRoIERTLiAKSSB3YXNuIHRyeWluZyB0byBhY3QuIApXaGF0IHdvdWxkIGhhcHBlbiBpZiB5b3UgdHJpZWQgdG8gcGxheSA2IDggaW5uaW5ncyBvZiBiYXNlYmFsbCBvciAzIHNldHMgb2YgbGVnaXQgdGVubmlzPyBQZXJzb25hbGx5LCBJJ2QgcHJvYmFibHkgYmUgdGhyb3dpbmcgdXAgMS41IHNldHMgaW4gd2hlbiBJIHJlYWxpemVkIEkgaGFkIHRvIHBsYXkgdG8gNCBwb2ludHMgNiB0aW1lcyBqdXN0IHRvIHdpbiBhIHNldC4gClRoZSBvdXRzdGFuZGluZyBiYWxhbmNlLCAkMjYyLDYwNiBsZXNzIHRoaXMgcmVzaWR1YWwgY2FzaCB3b3VsZCBsZWF2ZSBhIGJhbGFuY2Ugb2YgYWJvdXQgJDIyNywwMDAuIFRvIHBheSBvZmYgdGhhdCBiYWxhbmNlIGluIHRoZSBkb3plbiB5ZWFycyB0byBMb3JldHRhIGFnZSA2NSwgYXNzdW1pbmcgdGhyZWUgcGVyIGNlbnQgaW50ZXJlc3QsIHdvdWxkIHJlcXVpcmUgbW9udGhseSBwYXltZW50cyBvZiAkMSw4ODAuIFRoYXQgJDQzNSBtb3JlIHRoYW4gdGhlaXIgcHJlc2VudCBtb3J0Z2FnZSBjb3N0IG9mICQxLDQ0NSBwZXIgbW9udGgsIGJ1dCBpdCB3b3VsZCBlbnN1cmUgdGhhdCB0aGV5IGdvIGludG8gcmV0aXJlbWVudCB3aXRoIG5vIG1ham9yIGRlYnQuIApXZXJlIHNjYXJlZCBhbGwgdGhlIHRpbWUsIHNhaWQgQ2hhYm9yZWssIHdobyBoYWQgYSBzZWNvbmQgYnJvdGhlciBXYWx0ZXIgYWxzbyBzZXJ2aW5nIGluIHRoZSBDYW5hZGlhbiBuYXZ5LCBidXQgb24gYSBkaWZmZXJlbnQgc2hpcC4KTm90IHRoZSBzYW1lLCBvciBzY2FyeSwgYnV0IEkgZGlkIHRoZSBzYW1lIHRoaW5nIGFyb3VuZCB0b3duIG9uZSB0aW1lLiBJIHdhcyBkcml2aW5nIG15IGRhZCBGMzUwIGNyZXdjYWIgYW5kIHdhcyBzaG9wcGluZyBmb3IgZ3JvY2VyaWVzLiBJIGNhbWUgYmFjayBvdXQgYW5kIHdhcyBnZXR0aW5nIGJhY2sgaW4gdGhlIHRydWNrIHdoZW4gSSBub3RpY2VkIHRoYXQgdGhlcmUgd2VyZSB3ZWlyZCB0aGluZ3Mgb3V0IG9mIHBsYWNlLiAKSSBzbGVwdCByZWFsbHkgYmFkbHkgdGhlIG5pZ2h0IGJlZm9yZSAoaW4gYmVkIGF0IDExcG0sIHdva2UgdXAgZm9yIGFuIGhvdXIgMmFtIDNhbSkgYnV0IHdva2UgdXAgYXQgNWFtIGZlZWxpbmcgb2suIEEgc3dlZXQgZnJpZW5kIG9mIG1pbmUgdm9sdW50ZWVyZWQgdG8gZHJpdmUgbWUsIHNvIHNoZSBwaWNrZWQgbWUgdXAgYXQgNmFtIGFuZCB3ZSBnb3QgdG8gcGFja2V0IHBpY2sgdXAgYXQgNjozMGFtLiBJdCB3ZW50IHJlYWxseSBxdWlja2x5LCBnb3QgbXkgYmliIGV0YywgdGhlbiBJIGp1c3Qgd2FuZGVyZWQgYXJvdW5kIHdpdGggbXkgZnJpZW5kIGluIHRoZSBmcmVlemluZyBjb2xkIGFtb25nIGFsbCB0aGUgcnVubmVycyB1bnRpbCBhIGJpdCBhZnRlciA3YW0uIEl0IHdhcyByZWFsbHkgY29vbCB0byBzZWUgc28gbWFueSBydW5uZXJzIGFuZCBldmVyeW9uZSB3YXMgcmVhbGx5IGZyaWVuZGx5LiBJIGpvZ2dlZCBmb3IgYWJvdXQgdGVuIG1pbnV0ZXMgdG8gd2FybSB1cCwgZGlkIHNvbWUgc3F1YXRzIGxvbCwgYW5kIHN0cmV0Y2hlZC4gRXZlcnlvbmUgZWxzZSB3YXMgZG9pbmcgdGhlaXIgZnVsbCBvbiB3YXJtIHVwcyBzbyBJIGRpZG4ndCBmZWVsIGF3a3dhcmQgZG9pbmcgbXkgdGhpbmcuIEkgZ290IGludG8gbXkgcGFjZSBncm91cCBhbmQgaGFuZGVkIG15IGZyaWVuZCBteSBqYWNrZXQuCkFyZSB5b3UgbG9va2luZyBmb3IgdGhhdCBwZXJmZWN0IGhvb2t1cCB3aXRoIGEgbG9jYWwgYWR1bHQ/IEFueSBmZWVzIG9yIGNvbXBlbnNhdGlvbiBwYWlkIHRvIG1lIGFyZSBmb3IgbXkgdGltZSBhbmQgY29tcGFuaW9uc2hpcCBvbmx5LiAKSW4gdGhhdCBvcmRlci4gCk5vdyBpdCdzIGEgd2VpcmQgcml0dWFsIG15IHNpc3RlciBhbmQgSSBkbyB3aGVuIHdlIHJlbGF4IHRvZ2V0aGVyIGFzIGFkdWx0czsgd2UgcHV0IG9pbCBpbiBlYWNoIG90aGVyJ3MgaGFpciBhbmQgY29tYiBpdCBhbmQgbWFzc2FnZSBlYWNoIG90aGVyJ3Mgc2NhbHBzLiBJdCdzIHZlcnkgcmVsYXhpbmcgYW5kIG1heWJlIHlvdXIgbGl0dGxlIG9uZSB3aWxsIGV2ZW50dWFsbHkgZW5qb3kgaXQgYXMgd2VsbC4uIApIZSBsZWF2ZXMgaGlzIGRldm90ZWQgd2lmZSBvZiA0MyB5ZWFycywgU3lsdmlhIE1hcnRpbmV6IERhbG9pYTsgdHdvIGRhdWdodGVycywgS3Jpc3RpbmEgKEZyYW5rKSBEZWxpYSwgSmVzc2ljYSAoTWljaGFlbCkgRmF2YTsgaGlzIGJlbG92ZWQgc2lzdGVyLCBSb3Nhbm5lIChEYXZpZCkgQmF0dGFnbGlhOyBuZXBoZXcsIE1pY2hhZWwgYW5kIG5pZWNlLCBNYXJpc3NhIEJhdHRhZ2xpYTsgaGlzIHR3byBhZG9yZWQgZ3JhbmRjaGlsZHJlbiwgTG9yZW56byBKb3NlcGggYW5kIEdpYW5uYSBSb3NlIEZhdmEuIEFsbCB0aG9zZSB3aG8ga25ldyBoaW0sIGtub3cgaGUgaGFkIGEgYmlnIGhlYXJ0LCBmdWxsIG9mIGxhdWdodGVyIGFuZCBqb2tlcy4gClNpIGonYXZhaXMgdGVudSB1biBqb3VybmFsIGonYXVyYWlzIHB1IGNyaXJlIHVuIHZvbHVtZSBhdXRvYmlvZ3JhcGhpcXVlIGFzc2V6IGhhdXQgZW4gY291bGV1ci4uIApJTiBXSVRORVNTIFdIRVJFT0YsIEkgaGF2ZSBoZXJldW50byBzZXQgbXkgaGFuZCB0aGlzIHR3ZW50aWV0aCBkYXkgb2YgTm92ZW1iZXIsIGluIHRoZSB5ZWFyIG9mIG91ciBMb3JkIHR3byB0aG91c2FuZCBlaWdodGVlbiwgYW5kIG9mIHRoZSBJbmRlcGVuZGVuY2Ugb2YgdGhlIFVuaXRlZCBTdGF0ZXMgb2YgQW1lcmljYSB0aGUgdHdvIGh1bmRyZWQgYW5kIGZvcnR5IHRoaXJkLgpJIGd1ZXNzIHlvdXIgbWFpbiBwcm9ibGVtIGlzIGZpbmRpbmcgb3V0IGhvdyB0byBub3QgZ2V0IGRvd25lZCBpbnN0YW50bHkuIApUaGVyZSBhIHJlYWwgZnVuZGFtZW50YWwgZGlmZmVyZW5jZSBpbiBob3cgd2UgYXJlIGVkdWNhdGVkLCBjb21wYXJlZCB0byB0aGVzZSB3b3JrcyB0aGF0IHdlIHN0aWxsIGNhbGwgVGhlIENsYXNzaWNzLCBhbmQgaXQgbm90IGp1c3QgdGhlIHN1YnRsZSBkaWZmZXJlbmNlcyBhbmQgbnVhbmNlcyB0aGF0IG9uZSBjYW4gZ3Jhc3Agd2l0aCBhbiB1bmRlcnN0YW5kaW5nIG9mIHRoZSBsYW5ndWFnZSB0aGF0IHRoZXNlIHdlcmUgd3JpdHRlbiBpbjsgdGhlc2UgbWluZHMgd2VyZSBmb3JnZWQgdW5kZXIgYSB2ZXJ5IGRpZmZlcmVudCB3YXkgdW5kZXJzdGFuZGluZyB0aGFuIHdlIHNlZW0gdG8gaGF2ZSBub3cgKCBvciBwZXJoYXBzLCBzbyB0aGVpciB3b3JrcyB3b3VsZCBpbmRpY2F0ZSBpbiB0aGVpciB0aW1lbGVzc25lc3MgKS4KMiBwb2ludHMgIHN1Ym1pdHRlZCA1IG1vbnRocyBhZ28KSW4gdGhpcyBjYXNlLCBpZiB5b3UgcGFzcyB0aGUgZXhhbSB5b3UgaGF2ZSB1cCB0byA0OCBtb250aHMgdG8gZ2V0IHlvdXIgZXhwZXJpZW5jZSBsZXZlbHMgdXAgdG8gc3BlZWQuLiAKT25lIHZhcmlhdGlvbiBpcyBoYXZpbmcgcnViYmVyIGtub2JzIGFyb3VuZCB0aGUgc3VyZmFjZSwgc28gdGhlIGJhbGwgY2FuIGJlIHVzZWQgdG8gbWFzc2FnZSB5b3VyIG11c2NsZXMuIApTdHJlc3MgYXMgaW4gdGhlIGZsaWdodCBvciBmaWdodCByZXNwb25zZSBpcyB0aG91Z2h0IHRvIGNvdW50ZXJhY3QgdGhlIHBhcmFzeW1wYXRoZXRpYyBzeXN0ZW0sIHdoaWNoIGdlbmVyYWxseSB3b3JrcyB0byBwcm9tb3RlIG1haW50ZW5hbmNlIG9mIHRoZSBib2R5IGF0IHJlc3QuIApJbiAxOTI1LCBQcmVzaWRlbnQgQ2FsdmluIENvb2xpZGdlIHByb2NsYWltZWQgRmlyZSBQcmV2ZW50aW9uIFdlZWsgYSBuYXRpb25hbCBvYnNlcnZhbmNlLCBtYWtpbmcgaXQgdGhlIGxvbmdlc3QgcnVubmluZyBwdWJsaWMgaGVhbHRoIG9ic2VydmFuY2UgaW4gdGhlIGNvdW50cnkuIEEgMjAxMyBncmFkdWF0ZSBvZiBDb2xvcmFkbyBUZWNobmljYWwgVW5pdmVyc2l0eSwgQ29keSBlYXJuZWQgaGVyIGJhY2hlbG9yJ3MgZGVncmVlIGluIGNyaW1pbmFsIGp1c3RpY2Ugd2l0aCBhIG1pbm9yIGluIHBhcmFsZWdhbCBzdHVkaWVzLiBUaHJvdWdoIHRoZSBjb3Vyc2Ugb2YgaGVyIGFjYWRlbWljIHN0dWRpZXMgc2hlIGRpc2NvdmVyZWQgdGhhdCB3cml0aW5nIGlzIGhlciB0cnVlIHBhc3Npb24sIGFuZCBzaGUgaXMgY29tbWl0dGVkIHRvIHByb3ZpZGluZyBjcmVkaWJsZSwgaW50ZWdyYXRlZCBuZXdzIGNvdmVyYWdlLiBDb2R5IGpvaW5lZCBTdC4gR2VvcmdlIE5ld3MgaW4gMjAxNSwgYW5kIHdoZW4gc2hlJ3Mgbm90IGJ1c3kgY2hhc2luZyB0aGUgbmV3cywgc2hlIGNhbiBnZW5lcmFsbHkgYmUgZm91bmQgY2hhc2luZyBoZXIgeW91bmcgZ3JhbmRkYXVnaHRlciwgS2FsaS4KSSBrbm93IHRoZXJlIGEgbmF0dXJhbCBwcm9ncmVzc2lvbiB0byB0aGluZ3MsIGFuZCB0aGF0IHdoYXQgSSBsaWtlIGNvdWxkIGhhdmUgb25seSBleGlzdGVkIGJ5IHJlcGxhY2luZyB3aGF0IGhhZCBiZWVuIHRoZXJlIGJlZm9yZS4gQnV0IEkgd291bGQgYXJndWUgdGhhdCB3ZSBjYW4gbWFrZSBwcm9ncmVzcyB3aGlsZSBob2xkaW5nIGluIHJlc3BlY3QgdGhlIHBoeXNpY2FsIGFuZCBzcGlyaXR1YWwgYmVpbmcgb2YgYSBjaXR5LCBhbmQgaW4gZmFjdCB0aGF0IHRoYXQgaXMgd2hhdCBtYWtlcyBhIGdyZWF0IGNpdHkgZ3JlYXQuIApUaGVpciBmaXJzdCBjb25jZXJuIGlzIGJ1eWluZyBhIGxhcmdlciBob21lLiAKS25vd2luZyB5b3VyIG9wcG9uZW50cycgdGVuZGVuY2llcyBpcyBhIG11c3Qgd2hlbiB1c2luZyBpbXBsaWVkIG9kZHMuLiAKTXkgZGVzaXJlIGlzIHRvIGhlbHAgdGhlbSBiZWNvbWUgd2VsbCBhZGp1c3RlZCBhbmQgbWFuYWdlIGxpZmUncyBkaWZmaWN1bHRpZXMgYmV0dGVyIGFzIHRoZXkgZ3JvdyB1cCBpbnRvIGFkdWx0aG9vZC4uIApJIGluIHRvbyBkZWVwIGFuZCBzdGFydCByYXR0bGluZyBvZmYgcmFuZG9tIHRoaW5ncy4gT3ZlbiwgbWFrZSBteSBvd24gcmVjaXBlcywgZXRjLiBIZXIgaGFuZHMgYXJlIGluIG15IG1vdXRoIGFueXdheSBzbyBpdCBraW5kIG9mIG1ha2VzIHNlbnNlLiAKQnV0IHNvbWVvbmUgd2l0aCBhIGNvbWJpbmF0aW9uIG9mIFRGU0EsIFJSU1AgYW5kIG5vbiByZWdpc3RlcmVkIGFjY291bnRzIGNhbiBpbnN0ZWFkIHB1bGwgbHVtcHkgcGF5bWVudHMgKGZvciBhIG5ldyBjYXIgb3IgaG9tZSByZW5vdmF0aW9uLCBmb3IgZXhhbXBsZSkgZnJvbSBub24gdGF4YWJsZSBhY2NvdW50cy4uIAogTm90aGluZyB3YXMgc2FpZCB0byBtZSBhZnRlciB0aGlzLCBhbmQgSSBzdG9vZCB0aHJ1IGF3YXJkcyBleHBlY3RpbmcgdG8gY2xhaW0gZmlyc3QgaW4gOTBrZyBhbmQgbXkgc3VwZXJjbGFzcyhtb25leSBwcml6ZSkuIEFzIGF3YXJkcyB3ZW50IG9uIG15IG5hbWUgd2FzIG5vdGljZWFibHkgbWlzc2luZy4gT24gdG9wIG9mIHRoaXMsIG11bHRpcGxlIG9mIG91ciBhdGhsZXRlcyB0b3RhbHMgd2VyZSBjYWxsZWQgb3V0IHNpZ25pZmljYW50bHkgbGVzcyB0aGFuIHdoYXQgdGhleSBlYXJuZWQoRWRkaWUgUnlja21hbiBhbmQgTmljayBJc3JlYWwgd2VyZSBib3RoIGNhbGxlZCBvdXQgNjAgNzAgcG91bmRzIGxlc3MgdGhhbiB3aGF0IHRoZXkgaGl0KSBhbmQgUmljaCB3b3VsZCBub3QgbGV0IFRyZXZvciBjbGVhciB0aGlzIGlzc3VlIHVwIHdoZW4gaGUgYXBwcm9hY2hlZCBoaW0uIApUaGVyZSBhcmUgbW9yZSBoYW5kcyB0aGF0IGNhbiBiZSBwbGF5ZWQgYnV0IHRoaXMgY292ZXJzIHRoZSBtYWpvcml0eSB0aGF0IGNhbiBiZSBlYXNpbHkgcmVtZW1iZXJlZC4gClZvbmsgaGFzIGFsd2F5cyBsb3ZlZCBnYW1lcywgYnV0IGhpcyBsb3ZlIGZvciBwb2tlciByZXN0cyBvbiB0aGUgY29tYmluYXRpb24gb2YgIm1hdGggc2tpbGxzIiBhbmQgInBlb3BsZSBza2lsbHMsIiBhcyBoZSBwdXQgaXQuIApMZXQgaGltIGRlc3RyZXNzIGFuZCBJIGJldCBoZSdkIGV2ZW4gYmUgbW9yZSBoZWxwZnVsIHRoZSBuZXh0IGRheSBmcm9tIGhhdmluZyBmdW4vZW5qb3lpbmcgaGltc2VsZi4uIApBIFBBIG11c3QgaGF2ZSBiZWVuIHBsYXlpbmcgYSBwcmFuayBvbiBoaW0uIFRoYXQgcGxhY2UgaXMgZ29vZC4gU29jaWV0eSBoYXMgc3BlbnQgdGhlIGxhc3QgdGVuIHBsdXMgeWVhcnMgaGFpbGluZyB0aGUgZ3JlYXRuZXNzIG9mIHRlY2ggYW5kIGhvdyBkZXZlbG9wZXJzIGFyZSB0aGUgZnV0dXJlIGFuZCBhcmUgZ29pbmcgdG8gbWFrZSBvdXIgbGl2ZXMgc28gZWFzeS4gClRoZXkgY29udGludW91c2x5IG1ha2UgbmV3IGFjY291bnRzIHRvIGF2b2lkIHRoYXQgaXNzdWVzLCBidXQgbm93IHRoZXkgbmV2ZXIgaGF2ZSBhbnkgcHJvcGVyIHN0YXRzIG5vciB3aWxsIHRoZXkgZXZlciBiZSBhYmxlIHRvIGhhdmUgYmF0dGxlIHBhc3MgaXRlbXMgb3IgYW55IGNvc3R1bWVzIGZvciB0aGF0IG1hdHRlciBsb25nZXIgdGhhbiBhIGRheS4KTWVhbndoaWxlIFVua29lIGxvb2tlZCBsaWtlIGhlIHdhcyBmZWVkaW5nIG9uIFZhbGlhbnQgZm9yIHNpbWlsYXIgcmVhc29ucyBhbmQgc3VkZGVubHkgZ2V0cyBwdXQgb24gYSBGdWVsIHRoYXQgaXMgbm93IG1vcmUgY29oZXNpdmUgYW5kIHBlb3BsZSB3ZXJlIHNheWluZyBoZSB3YXMgb25lIG9mIHRoZSB0b3AgMyBaZW4gcGxheWVycy5DYW4gYmUgYSBCbGFkZXNpbmdlciBiZWNhdXNlIHMvaGUgbm90IGFuIGVsZiwgYnV0IEkgY291bGQgcHJvYmFibHkgdXNlIGEgRmFtaWxpYXIgdG8gZGVsaXZlciBtZWxlZSBzcGVsbCBhdHRhY2tzIHdpdGggYWR2YW50YWdlIGZyb20gTW91bnRlZCBDb21iYXRhbnQuIApCdXQgdGhlIG1vcmUgcHJpdmlsZWdlIGEgam91cm5hbGlzdCBoYXMgaW4gdGVybXMgb2YgcmFjZSwgY2xhc3MsIGV0Yy4sIHRoZSBtb3JlIGxpa2VseSB0aGF0IHRoYXQgcHJpdmlsZWdlIHdpbGwgcmVtYWluIGludmlzaWJsZS4gCkZsdXNoOiBBbnkgZml2ZSBjYXJkcyBvZiB0aGUgc2FtZSBzdWl0LCBidXQgbm90IGluIHNlcXVlbmNlLiBEb24ndCBiZSB0cmlja2VkIGludG8gdGhpbmtpbmcgdGhhdCBhbGwgZml2ZSBjYXJkcyBhcmUgdGhlIHNhbWUgY29sb3IuIApUaGlzIGNsdWUgd2FzIGxhc3Qgc2VlbiBvbiBTZXAgMTYgMjAxNyBpbiB0aGUgTmV3c2RheSBjcm9zc3dvcmQgcHV6emxlLiBEb3dubG9hZCB6aXAsIHJhci4gUSAxIFUgSSBOIEMgMiBZIE8gQyAzIEEgTCBIIE8gVSBOIE8gUyBDIDQgRSA1IFQgVCBMIDYsIFRoZS4gClNwaW50aSBkYSBxdWVzdG8gQW1vcmUgLCBkYSBxdWVzdGEgRm9yemEgZSBkYWwgbG9ybyBzb2dubyBkaSBjcmVhcmUgdW5hIGdyYW5kZSBjb211bml0IGluZGlwZW5kZW50ZSBlZCBlY28gcmVzaWRlbnppYWxlIGZvbmRhdGEgc3VsbGEgY29uZGl2aXNpb25lLCBsYSBmcmF0ZWxsYW56YSBlIGwgICBpbml6aWF0YSBsYSBtaXNzaW9uZSBkaSBBUlQgZWxldmVuLgpZb3UgY2FuIGFsc28gZGVzaWduIGFuZCBwcmludCBvbiB2aW55bCwgbWFraW5nIHlvdXIgdmVoaWNsZSBhIHJvbGxpbmcgYmlsbGJvYXJkIGZvciB5b3VyIGJ1c2luZXNzLiAKVGhlIGdyYW5kIG9wZW5pbmcgd2FzIGZpcnN0IHNjaGVkdWxlZCBmb3IgZWFybHkgQXByaWwuIApQYXBheWFidXR0ZXJmbHkgdQpJIGNhbiBiZWxpZXZlIHNvIG1hbnkgcGVvcGxlIGluIHRoaXMgdGhyZWFkIGFyZSBkZWZlbmRpbmcgdGhlIGNvcnBvcmF0aW9ucyBvbiB0aGlzIG9uZS4gClRoaXMgZ2FtZSBoYXMgZmFzY2luYXRlZCB0aGUgcGxheWVycyBzbyBtdWNoIHRoYXQgc29tZSBvZiB0aGVtIGhhdmUgZ2l2ZW4gdGhlaXIgZGF5IHRvIGRheSBqb2JzIGFuZCBwbGF5aW5nIHBva2VyIGluIHRoZSBjYXNpbm9zIGZvciBlYXJuaW5nIHRoZWlyIGxpdmVsaWhvb2QuIApGb3IgaW5zdGFuY2Ugb24gdGhlIFBybyBzaWRlLCB5b3UgZ2V0IGNoaXBzIGEgbG90IG1vcmUgY2hlYXBlciB0aGFuIHlvdSB3b3VsZCBnZXQgdGhlbSBmcm9tIGluIHRoZSBnYW1lLiAKSSBhbHdheXMga25ldyB0aGF0IEkgd2FudGVkIHRvIHNoYXJlIHRoZSBiZWF1dHkgYW5kIHBvd2VyIEkgZm91bmQgaW4gbXkgeW9nYSBwcmFjdGljZSB3aXRoIG90aGVycyBieSB0ZWFjaGluZy4gCkkgaGF2ZSBoZWFyZCBvZiBzb21lIHBlb3BsZSB0aGF0IHRoZSBndXlzIGRvIGEgZGlhcGVyIHBva2VyIHBhcnR5IHdoaWxlIHRoZSBnaXJscyBkbyB0aGUgc2hvd2VyLiAKSXQgaGFzIGEgZm9ybWFsIHZvbHVudGVlcmlzbSBwcm9ncmFtIGluIHdoaWNoIGVtcGxveWVlcyBjYW4gZW5nYWdlIHdpdGggYSBjaGFyaXRhYmxlIG9yZ2FuaXphdGlvbiBvZiB0aGVpciBjaG9pY2UgYW5kIGFyZSBhbGxvd2VkIGEgZGVzaWduYXRlZCBudW1iZXIgb2YgcGFpZCBob3VycyBwZXIgeWVhci4gCkFzIHRoZSBtYW55IHN3ZWV0IHR3ZWV0cyBhYm91dCBsb25nIGFnbyBMdWtlIFBlcnJ5IGNydXNoZXMgcmVtaW5kZWQgbWUgdGhpcyB3ZWVrLCBudXJ0dXJpbmcgYSBmb3JtYXRpdmUgc3RyYWluIG9mIGRlc2lyZSB5b3UndmUgbWF0dXJlZCBwYXN0IGlzbid0IHRoZSBzYW1lIGFzIG5vc3RhbGdpYSBmb3IgYSBteXRoaWMgc3RhdGUgb2YgcHVyaXR5IGF0IGFsbCwgaXQncyBqdXN0IGFja25vd2xlZGdpbmcgdGhlIHNvdXJjZSBvZiB5b3VyIGFkdWx0IHNleHVhbGl0eS4gCkkgYW0gZHJ1bmsuIEFueXdheXMsIGlmIHlvdSBhZGQgZWRnZXMgYmV0d2VlbiBicm90aGVyIGFuZCBzaXN0ZXIgbm9kZXMgYXQgYWxsIG9yIHNvbWUgbGV2ZWxzIGluIGEgdHJlZSwgSSBkb24ga25vdyB3aGF0IHRoZSBncmFwaCB3b3VsZCBiZSBkZXNjcmliZWQgYXMuIApUaGlzIGJlYXV0eSBpcyBhIGJhcmdhaW4gYXQgNC41IGJpbGxpb24gYW5kIEkgc3VyZSBpZiB5b3UgYXJlIHNlcmlvdXMgd2UgY2FuIHRocm93IGluIGEgbmljZSBzZXQgb2Ygd2ludGVyIHRpcmVzLiAKRXNwZWNpYWxseSB0aGF0IHRoZSBzdWJyZWRkaXQgaXMgYWxyZWFkeSBkb21pbmF0ZWQgYnkgYXRoZWlzdHMgd2hpY2ggdGhleSBlbmZvcmNlIHRoZWlyIHdvcmxkdmlldyBhcyBpZiBpdCByZXByZXNlbnRzIG1ham9yaXR5IG9mIEpvcmRhbmlhbiBwZW9wbGUgYnV0IHRoZSBvcHBvc2l0ZSBpcyB0cnVlIHdoaWNoIGlzIG15IHByb2JsZW0gKG5vdCB0aGF0IHRoZXJlIGFyZSBhdGhlaXN0cyBhcyB5b3Ugc3VnZ2VzdGVkKS4gUHV0dGluZyB0aGF0IGlkZW9sb2d5IGluIGNvbnRyb2wgdG90YWxseSBtYWtlcyBubyBzZW5zZSBhbmQgZG9lcyBub3QgcmVwcmVzZW50IHVzIGluIGFueSB3YXkgYnV0IHJhdGhlciByZXByZXNlbnRzIGFuZCBub3JtYWxpemVzIHdpdGggb3VyIGVuZW15IGlkZW9sb2d5LCB0aGlzIGlzIGEgZmFjdCBub3QgbXkgb3Bpbmlvbi4KT21haGEgSGkvTG86IEFzIGluIE9tYWhhIEhpIHRoZSBwbGF5ZXIgc3RhcnRzIHdpdGggNCBob2xlIGNhcmRzIGFuZCBzaW1pbGFybHkgdGhlIHBsYXllciBjYW4gb25seSB1c2UgMiBvZiB0aGVtLiBCdXQgaW4gT21haGEgSGkgTG8gdGhlIGJpZyBkaWZmZXJlbmNlIGlzIHRoYXQgeW91IGNhbiBoYXZlIGEgaGlnaCBhbmQgYSBsb3cgd2lubmVyIGluIGVhY2ggaGFuZC4gCkhlYWx0aCBPcHRpb25zIEluc3RpdHV0ZSBpcyBhIHByb2Zlc3Npb25hbCBtYXNzYWdlIHNjaG9vbCBkZWRpY2F0ZWQgdG8gaGVscGluZyBwZW9wbGUgdG8gY29ubmVjdCB0aHJvdWdoIHRoZSBwb3dlciBvZiB0b3VjaCB0byB0aGUgcHJlc2VuY2Ugb2YgdGhlIExpdmluZyBHb2Qgd2l0aGluIHRoZW1zZWx2ZXMgYW5kIHdpdGhpbiBhbGwgb3RoZXIgbGl2aW5nIGJlaW5ncy4gCkdldHRpbmcgSW5mb3JtYXRpb25PZnRlbiBzb2NpYWwgd29ya2VycyBoYXZlIHRvIGdhaW4gaW5mb3JtYXRpb24gZnJvbSBwZW9wbGUgd2hvIGFyZSBub3Qgd2lsbGluZyB0byBwYXJ0IHdpdGggdGhhdCBpbmZvcm1hdGlvbiBvciB3aG8gbWF5IGJlIGRpZmZpY3VsdCB0byB1bmRlcnN0YW5kLiBBIHNvY2lhbCB3b3JrZXIgbXVzdCBrbm93IGhvdyB0byBhc2sgdGhlIHJpZ2h0IHF1ZXN0aW9ucyB0byBnZXQgdGhlIG5lY2Vzc2FyeSBpbmZvcm1hdGlvbiBvciB0byBhbHRlciB0aGUgbGFuZ3VhZ2Ugb2YgdGhlIHF1ZXN0aW9ucyB0byBoZWxwIGEgY2xpZW50IHVuZGVyc3RhbmQgd2hhdCB3YXMgYmVpbmcgYXNrZWQuIFNvY2lhbCB3b3JrZXJzIG1heSBhbHNvIGJlbmVmaXQgZnJvbSBrbm93aW5nIGhvdyB0byB1c2UgYWx0ZXJuYXRlIHRhY3RpY3MgZm9yIGdldHRpbmcgaW5mb3JtYXRpb24sIHN1Y2ggYXMgcm9sZSBwbGF5aW5nIG9yIHdvcmQgYXNzb2NpYXRpb24uCkkgcGVyc29uYWxseSByZWNvbW1lbmQgZHJ5YnJ1c2hpbmcgd2l0aCBFbHlzaWFuIGdyZWVuIGFmdGVyIHRoZSB3YXNoIHRoZW4gZG9pbmcgZmluZSBoaWdobGlnaHRzIHdpdGggT2dyeW4gQ2Ftby4gWW91IGNhbiBnZXQgYSBzbW9vdGhlciByZXN1bHQgaWYgeW91IG1hbnVhbGx5IGxheWVyIHRoZSBFbHlzaWFuIEdyZWVuIGJ1dCBoZSBhd2FyZSBpdCB0YWtlIHlvdSBtdWNoIGxvbmdlciB0byBkbyB0aGFuIGp1c3QgZHJ5YnJ1c2hpbmcuIEkgc2F2ZSBtYW51YWwgbGF5ZXJpbmcgZm9yIGNlbnRyZXBpZWNlIG1vZGVscyBsaWtlIHZlaGljbGVzIGFuZCBIUXMsIFBNcyBhcmUgZmluZSB3aXRoIGRyeWJydXNoaW5nLi4gClNoZSBoYWQgdG8gZmlnaHQgdGhyb3VnaCBoZXIgZmVhcnMgb2YgYmVjb21pbmcgc2V2ZXJlbHkgZGVwcmVzc2VkIGFnYWluIGxpa2Ugc2hlIGRpZCBhZnRlciBOb3ZhLiBTbyBzaGUgcmVhbGx5IGhhZCB0byBzdGVlbCBoZXJzZWxmIGZvciBpdC4gCldoZW4gaXQgY29tZXMgdG8gaGVscGluZyBvdXQgYWlybGluZXMgaW4gZGVlcCB0cm91YmxlLCBCb2VpbmcgbWF5IG5vdCBoYXZlIG11Y2ggY2hvaWNlLiAKQSBUaGFua3NnaXZpbmcgdHJhZGl0aW9uIGZyb20gR2VvcmdlIFdhc2hpbmd0b24gdG8gVHJ1bXAKVGhlIGpva2UgaXMgc3RpbGwgdWx0aW1hdGVseSB3aGF0IG1ha2VzIHRoZSBqb2tlIGZ1bm55LCBidXQgdGhlIGNvbWVkaWFuIG1ha2VzIHRoZSBqb2tlLCBhbmQgdGhlIGNvbWVkaWFuIGV4cGVyaWVuY2VzIG1ha2UgdGhlIGNvbWVkaWFuLiAKWW91ciBjb21tZW50IHdhcyByZW1vdmVkLCBidXQgZm9yIHlvdXIgZnV0dXJlIGFuZCBpbmZvcm1hdGlvbiAgaXQgaXMgdmVyeSBjb21tb24gZm9yIGFidXNlZCBjaGlsZHJlbiB0byBsaXRlcmFsbHkgd2lwZSBtZW1vcmllcy4gCkJ1dCB0aGUgY29tbWVudCBpdHNlbGYgd2FzIGp1c3QgdGhlIGluc3BpcmF0aW9uIGZvciB0aGUgcG9zdCwgSSBub3Qgd29ycmllZCBhYm91dCBob3cgdGhlIGd1eXMgc2VlIG91ciBwYXJ0IG9mIHRoZSBjb21tdW5pdHkuIApHb29kIHBvaW50IGFib3V0IG5vbiBhcGUgcHJpbWF0ZXMgY29uc3VtaW5nIG1lYXQuIEkgZGlkbid0IG1lYW4gdG8gbGltaXQgaXQgdG8gb25seSBoaWdoZXIgcHJpbWF0ZXMuIApHaXZlbiB0aGUgbGVuZ3RoIG9mIHRoZXNlIHdhcnMgYWxyZWFkeSwgeW91IHdvdWxkIHRoaW5rIHRoZSBhZG1pbmlzdHJhdGlvbiBhbmQgdGhlIG1pbGl0YXJ5IGNvdWxkIGFjdHVhbGx5IGZpZ3VyZSBvdXQgaG93IG11Y2ggdGhleSBuZWVkIHRvIHNwZW5kLiBJbXBvcnRhbnRseSwgZ2l2ZW4gdGhhdCAkNTQ5QklMTElPTiBoYXMgQUxSRUFEWSBiZWVuIGJ1ZGdldGVkIGZvciB0aGVzZSB3YXJzLCB5b3Ugd291bGQgdGhpbmsgdGhlIGFkbWluaXN0cmF0aW9uIHdvdWxkbiBoYXZlIHRvIHJlcXVlc3QgYmlsbGlvbnMgbW9yZSBpbiBlbWVyZ2VuY3kgZnVuZHMgIGJpbGxpb25zIHRoYXQgYXJlIGZ1bmRlZCB0aHJvdWdoIGdyb3dpbmcgZGVmaWNpdHMuIApUaGUgaG90ZWwgY2VudGVycGllY2UgaXMgaXRzIGZpdmUgc3RvcnkgYXRyaXVtIGRlY29yYXRlZCB3aXRoIEFmcmljYW4gYXJ0LiAKR3JlZ3JwOSAgMzcgcG9pbnRzICBzdWJtaXR0ZWQgNiBtb250aHMgYWdvClRoYXQgZm9vbHByb29mIGFnYWluc3QgYmFzaWNhbGx5IGV2ZXJ5IG5vbiBzYW11cmFpIGJvc3MgaW4gdGhlIGdhbWUuIApXaWxsaWFtIEhpbGwgdGhpcyBtb3JuaW5nIHRvbGQgaW52ZXN0b3JzIGl0IHdvdWxkIGNvbnRpbnVlIHRvIGZvY3VzIG9uIGZvdXIgc3RyYXRlZ2ljIHByaW9yaXRpZXMgc2V0IG91dCBlYXJsaWVyIHRoaXMgeWVhciBieSBpbnRlcmltIGNoaWVmIGV4ZWN1dGl2ZSBQaGlsaXAgQm93Y29jayAgIHRoZXkgYXJlYXMgb2YgZm9jdXMgYXJlIG9ubGluZSwgdGVjaG5vbG9neSwgZWZmaWNpZW5jaWVzIGFuZCBpbnRlcm5hdGlvbmFsLgpXZWxsIHllcyBhbmQgbm8uIFlvdSBuZWVkIHRvIGtub3cgd2hlbiBzb21lb25lIGlzIGJsdWZmaW5nIHlvdS4gWW91IGdvdCB0byBoYXZlIHNraWxsIHRvIGtub3cgd2hlbiB0byBjYWxsIGl0LiAKSSBmbGlwcGVkIG91dCEgQXQgdGhlIHRpbWUsIG15IGhvcm1vbmVzIGFuZCBuZXVyb3RyYW5zbWl0dGVycyBoYWQgdGVhbWVkIHVwIHRvIGJlIHJlYWwgamVya3MgdG8gbWUsIGluIHRoZSBmb3JtIG9mIGhlaW5vdXMgYW54aWV0eSBjZW50ZXJlZCBhcm91bmQgdGhlIHBvc3NpYmlsaXR5IG9mIHNvbWVvbmUga2lkbmFwcGluZyBteSBuZXcgYmFieS4gCkkgcmVhZCB0aGUgZW50aXJlIGFydGljbGUsIHNvIG5vIEkgZGlkbiBpZ25vcmUgY29udGV4dC4gV2hhdCBkbyB5b3Ugd2FudCB0aGVtIHRvIGRvLCBjb250aW51ZSBsb3NpbmcgJDIgbWlsbGlvbiBldmVyeSBmb3VyIHllYXJzIHRvIGhvdXNlIDEwMCByZXNpZGVudHMgaW4gYW4gYXJlYSB3aXRoIHByb2JhYmx5IHRoZSBoaWdoZXN0IGNvc3Qgb2YgbGl2aW5nIGluIHRoZSBlbnRpcmUgY2l0eT8gVGhhdCBkb2VzbiBzb3VuZCByZWFzb25hYmxlIGRvZXMgaXQ/IFdoYXQgZG9lcyBzb3VuZCByZWFzb25hYmxlIGlzIHRvIHNlbGwgdGhlIHByb3BlcnR5IHlvdSBhcmUgbG9zaW5nIG1pbGxpb25zIG9uIHRoYXQgaXMgbG9jYXRlZCBpbiBhcmVhIHRoYXQgaXMgbm90IGNvbmR1Y2l2ZSB0byB0aGUgaW5jb21lIG9mIHlvdXIgcmVzaWRlbnRzOyBhbmQgYXMgYSByZXN1bHQgb2YgdGhlIHNhbGUsIGJlIGFibGUgdG8gcmVsb2NhdGUgYWxsIDEwMCByZXNpZGVudHMgYW5kIHByb3ZpZGUgMjAwIE1PUkUgbG93IGluY29tZSBpbmRpdmlkdWFscyBob3VzaW5nLiBXaGF0IHRoZSBob3RlbCBhbmQgdGhlIGNpdHkgd2FudCB0byBkbyB3aXRoIHRoZSBwYXJraW5nIHNpdHVhdGlvbiBpcyBjb21wbGV0ZWx5IGlycmVsZXZhbnQgdG8gdGhlIGZhY3QgdGhhdCBDTUhBIGlzIGRvaW5nIHdoYXQgaXMgcmlnaHQgZmluYW5jaWFsbHkgYW5kIHdoYXQgbWFrZSBjYW4gbWFrZSB0aGUgbW9zdCBpbXBhY3QgdG8gdGhlIHBvcHVsYXRpb24gdGhleSBhcmUgZGVzaWduZWQgdG8gc2VydmUuIDAgcG9pbnRzICBzdWJtaXR0ZWQgMSB5ZWFyIGFnbwpJbiByZWFsaXR5LCB0aGUgZXhpc3RpbmcgbGF3cyBwcm9iYWJseSBhcmVuIHN1ZmZpY2llbnQgYmVjYXVzZSB0aGUgc2l0dWF0aW9uIGlzIHJlYWxseSBhIGdvb2QgYml0IGRpZmZlcmVudC4gSW5zdGVhZCwgaWYgYW55dGhpbmcsIHRoZSBwZW9wbGUgd2hvIHdhbnQgdG8gYnJlYWsgdXAgQVdTIG9yIEZhY2Vib29rIHNob3VsZCBwcm9iYWJseSBiZSBhcmd1aW5nIGZvciBuZXcgbGF3cywgYmVjYXVzZSBhbiBhcmd1bWVudCBjZW50ZXJpbmcgb24gZXhpc3RpbmcgbGF3cyBpcyBwcm9iYWJseSBhIGxvc2VyIGp1c3QgYmVjYXVzZSBvZiBob3cgcG9vcmx5IGZpdHRpbmcgdGhvc2UgbGF3cyBhcmUuLiAKV2l0aCBwb29yIG93bmVyc2hpcCBvZiBjbHVicywgb3duZXJzIGFyZSBtaXNoYW5kbGluZyBmdW5kcywgbG9zaW5nIHRvIG11Y2ggdHJhZGluZyBpbiBjcnlwdG8gb3IganVzdCBmbGF0IGdhbWJsaW5nIGF3YXkgdGhlIHBsYXllcnMgZnVuZHMuIApUaGUgcGFwZXIgbGFpZCBvdXQgYSBjb21wZWxsaW5nIGFyZ3VtZW50IHRoYXQgdGhlIGhlYWx0aGllc3QgaHVtYW4gZGlldCBsb29rcyBhIGxvdCBtb3JlIGxpa2Ugd2hhdCBvdXIgU3RvbmUgQWdlIGFuY2VzdG9ycyBhdGUgdGhhbiB0aGUgc3VnYXIgIGFuZCBmYXQgbGFkZW4gZm9vZCBBbWVyaWNhbnMgbW9zdGx5IHJlbHkgb24uClVuZGVyc3RhbmQgaG93IHRvIHJlYWQgdGhlIHRlbGxzLiAiVGVsbHMiIGFyZSBpbXBvcnRhbnQgICB0aGV5J3JlIHRoZSBhbmFseXppbmcgc2lkZSBvZiBwbGF5aW5nIHBva2VyLiBOb3Qgb25seSBkb2VzIGEgZ29vZCBrbm93bGVkZ2Ugb2YgdGVsbHMgdGVsbCB3aGVuIHNvbWVvbmUgZWxzZSBpcyBibHVmZmluZywgYnV0IGtub3dpbmcgY29tbW9uIHNpZ25zIG9mIGJsdWZmaW5nIHdpbGwgaGVscCB5b3UgdG8gdHJ5IHRvIGF2b2lkIHlvdXIgb3duIHVuY29uc2Npb3VzIGdpdmVhd2F5IHNpZ25zLiAKV2l0aCBMYXJyeSB3YXMgbWFnaWMsIHNhaWQgSm9obnNvbi4gaXQgd2FzIGZpbmFsbHkgbXkgdHVybiwgSSBqdW1wZWQgYXQgdGhlIG9wcG9ydHVuaXR5LiBUaGlzIGlzIGEgcmVjb3JkIEkgaGF2ZSBiZWVuIHdhbnRpbmcgdG8gbWFrZSBmb3IgeWVhcnMuIHRoZXkgbWV0LCBKb2huc29uIHNhaWQgS2xlaW4gYWRtaXR0ZWQgaGVhcmluZyBhYm91dCBoZXIgZm9yIGEgbG9uZyB0aW1lIGFuZCBhc2tlZCwgeWEgYmVlbiBoaWRpbmc/IEkgZmlyc3QgbWV0IExhcnJ5LCBoZSBoYWQgdGhpcyB3aGl0ZSBib2FyZCB3aXRoIGFsbCBteSBhbGJ1bXMgb24gaXQgYW5kIGEgbGlzdCBvZiA1MCAoY292ZXIpIHNvbmdzIGFuZCBhbGwgdGhlc2UgYWxidW1zIGFsbCBvdmVyIHRoZSByb29tIGFuZCB3ZSB0YWxrZWQgYWJvdXQgdGhlbSwgc2FpZCBKb2huc29uLgpUaGVyZSBpcyBhIGdyb3VwIG9mIHZlcnkgaGlnaCBsZXZlbCBibGFjayBiZWx0cyAob25lIGNhbiBnbyB1cCB0byBhIDl0aCBkZWdyZWUpIHdobyB0cmF2ZWwgdGhlIGNvdW50cnkgaW4gUlZzIGdvaW5nIGZyb20gbWlsaXRhcnkgYmFzZSB0byBtaWxpdGFyeSBiYXNlIGRvaW5nIHRoaW5ncyBsaWtlIGJyZWFraW5nIHRocm91Z2ggY2VtZW50IGJsb2NrcyBhbmQgc2F5aW5nICJTZWUgdGhhdD8gVGhhdCB3YXMgdGhlIHBvd2VyIG9mIEplc3VzIENocmlzdC4gRG8geW91IHdhbnQgdG8gaGF2ZSB0aGF0IGtpbmQgb2YgcG93ZXI/IgpBIFBvc3QgcmVwb3J0ZXIsIHBvc2luZyBhcyBhIG1hc3NhZ2UgY3VzdG9tZXIsIGNhbGxlZCB0aGUgbnVtYmVyIGxpc3RlZCBvbmxpbmUgb24gV2VkbmVzZGF5IGFuZCBhc2tlZCBmb3IgYW4gYXBwb2ludG1lbnQuIEEgd29tYW4gd2l0aCBhbiBBc2lhbiBhY2NlbnQgYW5zd2VyZWQgYW5kIHNlbnQgdGhlIGFkZHJlc3MgYW5kIG1hc3NhZ2UgcHJpY2VzICAgJDUwIGZvciBhbiBob3VyLCAkNDAgZm9yIGhhbGYgYW4gaG91ciAgIHZpYSB0ZXh0LiAKSSBhbHNvIG5vdCBwb3N0aW5nIHRoaXMgdG8gcHV0IHlvdSBkb3duLCBidXQgdG8gc2VydmUgYXMgYSB3YXJuaW5nLiBJIGhhdmUgYmVlbiBpbiB5b3VyIG1pbmQgc3RhdGUgc28gbWFueSB0aW1lcy4gSSBoYXZlIGZhaWxlZCBzbyBtYW55IHRpbWVzLiBVbnRpbCBJIGdvdCBpdCByaWdodCwgdW50aWwgSSBkaWRuIHJ1biBvbiBtb3RpdmF0aW9uIGFuZCBiZWxpZWZzLCBidXQgb24gZGlzY2lwbGluZSBhbmQgYWN0aW9uLgpUaGV5IGhhZCB0aGVpciByZWFzb25zLCB0aGV5IHdlbnQgdG8gY291cnQsIHRoZSBjb3VydCBkZWNpZGVkOiAiWW91ciByZWFzb25zIHdlcmUgZmF1bHR5LiBHZXQgdG8gd29yay4iCkR1cmluZyB0aGUgcmVjZW50IGltYnJvZ2xpbyBvdmVyIHRoZSBmaXNjYWwgY2xpZmYsIEhvdXNlIFJlcHVibGljYW4gU3BlYWtlciBKb2huIEEgQm9laG5lciByZWZ1c2VkIHRvIGFsbG93IHRoZSBIb3VzZSB0byB2b3RlIG9uIGEgbWVhc3VyZSBwYXNzZWQgYnkgdGhlIFNlbmF0ZSBhbmQgc3VwcG9ydGVkIGJ5IHRoZSBQcmVzaWRlbnQuLiAKVGhlIFBsYXk6IERlYWwgdHdvIGRvd24gYW5kIG9uZSB1cCB0byBldmVyeSBwbGF5ZXIgYW5kIGxheSB0aHJlZSBjb21tdW5pdHkgY2FyZHMgaW4gdGhlIG1pZGRsZS4gQmV0cyBhcmUgbWFkZSBiZXR3ZWVuIGVhY2ggZGVhbC4gCldvcmtpbmcgd2l0aCBhIG51bWJlciBvZiBwcm9wb3NhbHMgdG8gc2VlIHdoYXQgdGhlIGludGVyZXN0IGlzIGJ5IG1lbWJlcnMgaW4gdGhlIGNsdWIgdG8gcmVkdWNlIHRoZSBkZWJ0IHNlcnZpY2UgYW5kIGNyYWZ0IHJlc2VydmVzLCBzYWlkIENvaGVuLCBhIFNlYXdhbmUgbWVtYmVyIHNpbmNlIDE5NzkuIApCcml0YWluIGxlYXZpbmcgdGhlIEVVLCBBbWVyaWNhbnMgdHVybmluZyBhZ2FpbnN0IGVhY2ggb3RoZXIsIE5BVE8gc3VmZmVyaW5nLCBVTiB1bmRlcm1pbmVkLCBVU0EgcHVsbGluZyBvdXQgb2YgdHJhZGUgZGVhbHMgc28gdGhhdCBDaGluYSBvdGhlcnMgY2FuIHN0ZXAgaW50byB0aGUgdmFjdXVtIG9mIGxlYWRlcnNoaXAgYmVpbmcgbGVmdCBieSB0aGUgVVNBIHVuZGVyIFRydW1wLiAKTGltaXQgSG9sZCdlbSBpcyBwbGF5ZWQgd2l0aCBhIGZpeGVkIGJsaW5kIHN0cnVjdHVyZSBhbmQgZml4ZWQgYmV0dGluZyBsaW1pdHMgb24gZWFjaCByb3VuZC4gVGhlIGJpZyBibGluZCBpcyB1c3VhbGx5IGVxdWFsIHRvIHRoZSBzbWFsbGVzdCBzaXplIGJldCwgYW5kIHRoZSBzbWFsbCBibGluZCBpcyBoYWxmIHRoZSBiaWcgYmxpbmQuIFRoZSBmaXJzdCB0d28gcm91bmRzIG9mIGJldHRpbmcgdXNlIHRoZSBzbWFsbCBiZXQsIGFuZCB0aGUgbGFzdCB0d28gdXNlIHRoZSBsYXJnZSBiZXQuIApBcyBhbiB1cGNvbWluZyBiaW5nbyBzaXRlLCBCaW5nbzNYIHRvbyBoYXMgaXRzIHJhbmdlIG9mIGZ1biBmaWxsZWQgb25saW5lIHNpZGUgZ2FtZXMgd2hpY2ggaW5jbHVkZSBjcm93ZCBmYXZvdXJpdGVzIGxpa2UgMyByZWVsIGFuZCA1IHJlZWwgc2xvdCBnYW1lcywgc2NyYXRjaCBjYXJkIGdhbWVzLCBwb2tlciwgdmlkZW8gcG9rZXIsIGNhc2lubyBnYW1lcywgbG90dG8gYW5kIG1vcmUuIE5vdCBvbmx5IGRvIHRoZXNlIGdhbWVzIHByb21pc2UgcGxheWVycyBhdCBCaW5nbzNYIGEgYnJlYWsgZnJvbSBwbGF5aW5nIGdhbWUgYWZ0ZXIgZ2FtZSBvZiBiaW5nbywgdGhleSBhbHNvIGdpdmUgcGxheWVycyB0aGUgb3Bwb3J0dW5pdHkgdG8gZWFybiBqYWNrcG90cyBhcyBoaWdoIGFzIGJpbmdvIChvciBzb21ldGltZXMgZXZlbiBoaWdoZXIpIGJ1dCBpbiBzaG9ydGVyIHNwYW4gb2YgdGltZS4KSG93IFRvIElkZW50aWZ5IHdoZW4gSG90IFN0b25lIE1hc3NhZ2UgaXMgQ29udHJhaW5kaWNhdGVkCiJUb2RheSwgb3VyIHRlYW1tYXRlIGFuZCBmcmllbmQgV291dGVyIFdleWxhbmR0IHBhc3NlZCBhd2F5IGFmdGVyIGEgY3Jhc2ggb24gdGhlIDNyZCBzdGFnZSBvZiB0aGUgR2lybyBkJ0l0YWxpYSwiIHRoZSBzdGF0ZW1lbnQgc2FpZC4gIlRoZSB0ZWFtIGlzIGxlZnQgaW4gYSBzdGF0ZSBvZiBzaG9jayBhbmQgc2FkbmVzcyBhbmQgd2Ugc2VuZCBhbGwgb3VyIHRob3VnaHRzIGFuZCBkZWVwZXN0IGNvbmRvbGVuY2VzIHRvIHRoZSBmYW1pbHkgYW5kIGZyaWVuZHMgb2YgV291dGVyLgpUaGlzIHN5c3RlbSBpbmhlcmVudGx5IGNhbm5vdCBiZSBmYWlyLCBwZW9wbGUgd2lsbCB0aXAgb3Igbm90IHRpcCBmb3IgdGhlIHNsaWdodGVzdCBvZiByZWFzb25zLgpTbywgd2h5IG5vdCB0cnkgT3J0bWVpZXIgYXQgZmlyc3Q/IEhlIHNob3dlZCBzb21lIHBvcCB3aXRoIHRoZSBHaWFudHMgdGhpcyB5ZWFyLCBoaXR0aW5nIC4yNjkgd2l0aCB0d28gaG9tZSBydW5zIGFuZCB0aHJlZSBkb3VibGVzIGluIDUyIGF0IGJhdHMuIEluIFRyaXBsZSBBIEZyZXNubywgaGUgaGl0dGluZyAuMjY5LCAxMCBIUiwgNTQgUkJJcy4gClRoZSB0cmFuc2F0bGFudGljIGNvbnNlcXVlbmNlcyBtYXkgYmVjb21lIG1vcmUgYXBwYXJlbnQgYWZ0ZXIgdGhlIHdhciBpcyBvdmVyOiB0aGUgRnJlbmNoLCBubyBkb3VidCwgaGF2ZSBlbmpveWVkIHRoZWlyIGxlYWRpbmcgcm9sZSBpbiB0aGUgY3VycmVudCBtZWxvZHJhbWEgYW5kIG1heSBzZWVrIHRvIG1ha2UgaXQgcGVybWFuZW50LiAKQnV0IEkgaGFwcGVuIHRvIHRpbHQgYmVjYXVzZSBvZiBtYXRlcyB0b28sIHdoZW5ldmVyIG9uZSBjYW4gaGl0IGEgc2F2ZSBhZnRlciBhIHRlZGlvdXMgZ2FtZSAoYW5kIHdoZW4gSSBhbHJlYWR5IHN0YXJ0ZWQgdG8gaW50ZXJuYWxseSByYWdlIGJlY2F1c2Ugb2YgdGhlIHdoaWZmcy4pIG9yIHdoZW4gb25lIG9mIHRoZW0gbWlzcyBteSBwYXNzIHRoYXQgd2FzIG9uZSBtZXRlciBhd2F5IGZyb20gdGhlIG5ldC4gCkNpdGllcyBvZnRlbiBvdXRncmV3IHRoZWlyIHdhbGxzIGFuZCBvbmx5IGEgc21hbGwgcGFydCBvZiB0aGUgY2VudGVyIG9mIHRoZSBjaXR5IHdhcyBwcm90ZWN0ZWQsIHVzdWFsbHkgd2l0aCByZXNvdXJjZSBzdG9yYWdlLCB0aGUgZ292ZXJubWVudCwgYW5kIGhvbWVzIG9mIHRoZSB3ZWFsdGh5IGluc2lkZS4gTW9zdCBhcnRpc2FucyBhbmQgd29ya2luZyBjbGFzcyBwZW9wbGUgbGl2ZWQgaW4gYSBzcHJhd2wgb3V0c2lkZSB0aGUgd2FsbHMgYW5kIGluIGFuIGF0dGFjayB3b3VsZCBlaXRoZXIgdGFrZSByZWZ1Z2UgaW5zaWRlIHRoZSB3YWxscyBvciBmbGVlIHRvIG90aGVyIGFyZWFzLiAKWW91IGludmVzdCBpbiB0aGUgcmlnaHQgcXVhbGl0eSBwaWVjZXMgdGhhdCBhcmUgZ29pbmcgdG8gc3RhbmQgdGhlIHRlc3Qgb2YgdGltZSBhbmQgZ3JvdyB3aXRoIHlvdXIgZmFtaWx5LCB5b3UgZG9uIG5lZWQgdG8gdGhyb3cgdGhpbmdzIGF3YXkgaW4gZml2ZSB0byAxMCB5ZWFycywgc2hlIHNheXMuCllvdSBjYW4gZG8gd2hhdCBCaWcgVGluIEZvaWwgd2FudHMgYW5kIGJlbGlldmUgdGhhdCBzaGl0IGZyb20gdGhlIGJvdHRvbSBvZiB5b3VyIGhlYXJ0LiAKTG9uZyBzdG9yeSBzaG9ydCwgc2hlIGV2ZW50dWFsbHkgY29lcmNlZCBtZSBpbnRvIGdldHRpbmcgaXQgY3V0LiBTaGUgY2FtZSB3aXRoIG1lIGJ1dCBsZWZ0IHJpZ2h0IGJlZm9yZSB0aGUgaGFpcmRyZXNzZXIgKG15IG1vbXMgZnJpZW5kKSB3YXMgYWJvdXQgdG8gY3V0LiBUaGUgcGxhbiB3YXMgdG8gbWFrZSBpdCBub3JtYWxseSBzaG9ydC4gCkkgd291bGQgc2F5IGJlaW5nIGFibGUgdG8gcG9rZSBmdW4gYXQgbXkgZnJpZW5kcyBvZGRseSBzaG93cyB3ZSBoYXZlIGEgc3Ryb25nIGZyaWVuZHNoaXAgYW5kIGFyZSBjb21mb3J0YWJsZSB3aXRoIGVhY2ggb3RoZXIuIEl0IGlzIGFsbW9zdCBsaWtlIHRoZSByZWxhdGlvbnNoaXAgZXZvbHZlcyBhdCB0aGF0IHBvaW50LiAKVGhlIHNvdXJjZXMgSSBsb29rIGF0IGFyZSBieSBwZW9wbGUgd2hvIGRvIGtub3cgd2hhdCB0aGV5J3JlIHRhbGtpbmcgYWJvdXQsIGFuZCB0aGUgaWRlYSB0aGF0IHRoZXJlIGlzIHNjaWVudGlmaWMgY29uc2Vuc3VzIG9uIGNsaW1hdGUgY2hhbmdlIGlzIHN1Y2ggYSBoaWxhcmlvdXMgaWRlYSB0aGF0IGl0IGFsbW9zdCBpc24ndCBldmVuIHdvcnRoIGRlYmF0aW5nLkkgd291bGQgc3VnZ2VzdCByZWFkaW5nIG9uZSBvZiB0aGVpciBibG9ncy4gClRoZSBjaGFuY2Ugb2YgeW91ciBkYWQgb25lIG1pbGxpb24gc2VsZWN0aW9ucyBvdXQgb2YgMzc1TSBiZWluZyAxMDAlIGRpZmZlcmVudCBmcm9tIHlvdXIgbW9tIGlzIHJvdWdobHkgMyBpbiAxMDAwLCBpZiByYW5kb20uIEJ1dCBjb25zdHJhaW4gaXQgYnkgZ2VvZ3JhcGh5IGFuZCBwcmVmZXJlbmNlcywgYW5kIGl0IG5lYXIgY2VydGFpbnR5IHRoYXQgdGhlcmUgc29tZSBvdmVybGFwLgpJbiB5b3VyIGNhc2UgSSB3b3VsZCBncmluZCBvbiB0aGUgc2lkZSBhbmQgaW1wcm92ZSB1bnRpbCB5b3UncmUgYSB3aW5uaW5nIDIvNSA1L1QgcGxheWVyLCBoYXZlIGEgbGFyZ2Ugc2FtcGxlIHNpemUgdGhhdCB2ZXJpZmllcyB5b3UncmUgYSB3aW5uZXIuIApEdXJpbmcgdGhlIG1vbnRoIG9mIEp1bmUgaW4gMjAxNywgRGF2aWQgYW5kIExhdXJhIGhhZCB0aGVpciBibGVuZGVkIGZhbWlseSBvZiBzaXggbGl2aW5nIHRvZ2V0aGVyIGluIERyYXBlciB3aGVuIERhdmlkLCBKci4gCkl0IHdhcyB0aGUgZmlyc3QgdGltZSBJIHRoaW5rIEkgaGF2ZSBwcm9wZXJseSBleHBsb2l0ZWQgc29tZW9uZXMgcGxheSBhbmQgcmVhZCB0aGVtIHdlbGwuIApXb3JsZCBtYXJrZXQgZm9yIFRDTSBpcyBlc3RpbWF0ZWQgYXQgb3ZlciAkMjMgYmlsbGlvbiwgd2l0aCBtb3N0IG9mIHRoZSBncm93dGggY29taW5nIGZyb20gRXVyb3BlIGFuZCB0aGUgVVNBLCB0aGUgcmVzZWFyY2hlcnMgbm90ZS4gVGhhdCBpbmNyZWFzZWQgdG8gNjIlIHdoZW4gdXNlIG9mIG1lZ2F2aXRhbWlucyBhbmQgcHJheWVyIChzcGVjaWZpY2FsbHkgZm9yIGhlYWx0aCByZWFzb25zKSB3ZXJlIGFkZGVkIHRvIHRoZSBkZWZpbml0aW9uIG9mIGFsdGVybmF0aXZlIG1lZGljaW5lLiAKSSB1c2VkIHRvIHdvcmsgaW4gYSBzdG9yZSBkaXJlY3RseSBuZXh0IHRvIGl0IGFuZCB3ZSB3b3VsZCBvZnRlbiBnZXQgcGVvcGxlIGNvbWluZyBpbiBhbmQgYXNraW5nIGlmIHRoZXkgY291bGQgcGFyayBpbiBvdXIgbG90IHNpbmNlIEtyaXNweSBLcmVtZSB3YXMgZnVsbC4gCkJlbnJlaCAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxMyBkYXlzIGFnbwpIZWxsIGV2ZW4gdGhlIGd1eSB0aGF0IG9ubHkgd29uIDIzIG91dCBvZiAyNiBpc24gbHVjay4gClBvc2l0aXZlIGFzcGVjdHM6IEkgYmVlbiBhdmVyYWdpbmcgaW4gdGhlIG5laWdoYm9yaG9vZCBvZiA3YmIvaG91ciB3aGljaCBpcyBhIGdvb2QgdGhpbmcgZnJvbSB3aGF0IEkgaGVhci4gVGVjaG5pY2FsbHksIEkgdGhpbmsgSSBhbSBhIHZlcnkgc3Ryb25nIHBsYXllciBhcyBJIHVuZGVyc3RhbmQgdGhlIGZ1bmRhbWVudGFscyBvZiBnb29kIHBsYXkuIEkgdGhpbmsgSSBoYXZlIGltcHJvdmVkIG15IGdhbWUgdHJlbWVuZG91c2x5IGFuZCBjYW4gdGFrZSBhIDUvMTAgc2hvdCBoZXJlIG9yIHRoZXJlIHdoZW4gdGhlIGdhbWUgaXMgZ29vZC4gSSBub3cgcmVhbGl6ZSB0aGF0IHRoZXJlIGlzIGEgaHVnZSBkaWZmZXJlbmNlIGJldHdlZW4gbXkgZ2FtZSBub3cgYW5kIG15IGdhbWUgYXQgdGhlIGJlZ2lubmluZyBvZiB0aGUgeWVhci4gSSBsZWFybmVkIGEgbG90IGFib3V0IHZhbHVlIGJldHRpbmcgdGhpbmx5IGFuZCBib2FyZCB0ZXh0dXJlcy4gSSBhbHNvIGRldmVsb3BlZCBpbnNpZ2h0cyBvbiBzb2xpZCBjb250aW51YXRpb24gYmV0dGluZyBzdHJhdGVnaWVzIGFuZCBHVE8gcGxheS4KUmVhY2ggdXAgd2l0aCBhcm1zIChvciBoYW5kcykgb24gZG9vcndheS4gCkluIHRoZSByaWdodCBjaXJjdW1zdGFuY2VzLCBob3dldmVyLCB0aGUgcGxheWVyIHNvbWV0aW1lcyB3aWxsIGJyZWFrIHVwIGEgZmx1c2gsIGEgc3RyYWlnaHQsIG9yIGEgcGFpciBvZiBqYWNrcyBvciBiZXR0ZXIuIElmIHlvdSBkbyBub3QgaGF2ZSBvbmUgb2YgdGhlICJhbHdheXMga2VlcCIgaGFuZHMsIHVzZSB0aGUgZm9sbG93aW5nIGxpc3QuIApTaG9wcGluZywgYmUgaXQgdGhlIHdlZWtseSBncm9jZXJ5IHNob3Agb3IgZ29pbmcgdG8gdGhlIGxvY2FsIG1hbGwgKGVzcGVjaWFsbHkgd2hlbiBSaWNoYXJkIG5lZWRzIHRvIGJ1eSBhIG5ldyBzdWl0KS4gClRob3NlIHdlbnQgdG8gSG9sbHl3b29kIHdoZXJlIGFsbCBidXQgNDAgd2VyZSBlbGltaW5hdGVkLiAKSXMgd2hhdCBxdWVlciB0aGVvcmlzdCBKdWRpdGggQnV0bGVyIGhhcyBjYWxsZWQgInRoZSBoZXRlcm9zZXh1YWwgbWF0cml4LiIgaXMgbmljZSBhbmQgbmVhdCBhbmQsIGFzIEJ1dGxlciBwb2ludHMgb3V0LCBhIGNvbXBsZXRlIGFuZCB0b3RhbCBmaWN0aW9uLiBJdCBzZXJ2ZXMgdG8gc2hvcmUgdXAgaGV0ZXJvc2V4dWFsIHByaXZpbGVnZSBieSBhY3RpbmcgYXMgaWYgd2UgY2FuIG1ha2UgdGhlc2UgbmljZSwgbmVhdCBsaW5lcyBiZXR3ZWVuIHNleCwgZ2VuZGVyIGFuZCBkZXNpcmUuIEhldGVybyBtZW4gYXJlIGFsd2F5cyAibWFzY3VsaW5lLCIgdGhleSBhcmUgYWx3YXlzIGFibGUgdG8gInByb3RlY3QiIHdvbWVuIGFuZCBjaGlsZHJlbiBhbmQgTmF0aW9uLiAKVGhpcyBhc3NvY2lhdGlvbiBtYXkgYmUgYXR0cmlidXRhYmxlIHRvIHNldmVyYWwgbWVjaGFuaXNtcywgc3VjaCBhcyBhbiBhbnRpIGluZmxhbW1hdG9yeSBlZmZlY3Qgb2Ygb21lZ2EgMyBQVUZBLCBhIGRlY3JlYXNlIGluIHRoZSByaXNrIG9mIGNhcmRpb3Zhc2N1bGFyIGRpc2Vhc2UsIG9yIGFuIGluY3JlYXNlIGluIHRoZSBuZXVyb3BsYXN0aWNpdHkgb2YgbmVydmUgbWVtYnJhbmVzLgoiSSBkaWRuJ3QgcmVhbGl6ZSBJIGhhZCB0byBoYXZlIGFsbCBvZiB0aGF0IHN0dWZmIG9uIGJlZm9yZSBJIHNhdCBkb3duLCIgU2NoZWNodGVyIHNhaWQuICJXaGVuIEkgZm91bmQgb3V0IEkgd2FzIGdvaW5nIHRvIHRoZSBmZWF0dXJlIHRhYmxlLCBJIHdhbnRlZCB0byBwdXQgb24gYSBsb2dvLCBidXQgdGhleSB3b3VsZG4ndCBsZXQgbWUuIFRoYXQgY29zdCBtZSBhYm91dCAkMTAsMDAwLCBzbyB0aGF0IGRlZmluaXRlbHkgc3Vja3MgYSBsb3QuIgpBbmQgcGlueWluIHN5c3RlbSBpcyBmbGF3ZWQsIHRvIHNvbWUgZGVncmVlLiBXaGVuIGFuIEVuZ2xpc2ggc3BlYWtlciBzZWVzIGNoLCBpdCBkb2VzIG1ha2UgeW91IHdhbnQgdG8gcHJvbm91bmNlIGl0IGFzIHEgLgpJIHN1cmUgc29tZW9uZSBsZXNzIGluY2xpbmVkIHRvIHBsYXkgd2l0aCBob3Qgc3R1ZmYgd291bGQgZ2V0IGF3YXkgd2l0aCBKQiB3ZWxkLiAKVXNpbmcgYSBjbGVhbiBvcmFuZ2V3b29kIHN0aWNrLCBzY3JhcGUgdGhlIGFjcnlsaWMgcmlnaHQgb2ZmISBJdCBzaG91bGQgY29tZSBvZmYgZWFzaWx5LCBidXQgaWYgeW91IGZpbmQgc29tZSBzdHViYm9ybiByZXNpZHVlLCBnZW50bHkgYnVmZiBpdCBvZmYgd2l0aCB5b3VyIG5haWwgYnVmZmVyLgpBbHNvIGlzY2ggZXJ6aGwgZXVjaCBtYWwgdm9uIEFua2FyYS4gClNvIFdlbmRpIGFuZCBJIGRlY2lkZWQgdG8gaGVhZCBiYWNrIHRvIFR1cmtleSBmcm9tIENyb2F0aWEuIE1heWJlIHdlIHdlcmUgc3RhcnZlZCBmb3IgdGhlIGZyaWVuZGxpbmVzcyBhbmQgaG9zcGl0YWxpdHksIGFmdGVyIGEgeWVhciB3aXRoIHRoZSBkb3VyIEN6ZWNocy4gClllYXIgYWxvbmUsIHRoZSBQZXJtaWFuIHByb2R1Y3Rpb24gcm9zZSBvbmUgbWlsbGlvbiBiYXJyZWxzIGEgZGF5LCBhbmQgaXQgY291bGQgc3VycGFzcyB0aGUgR2hhd2FyIGZpZWxkIGluIFNhdWRpIEFyYWJpYSwgdGhlIHdvcmxkIGJpZ2dlc3QsIHdpdGhpbiB0aHJlZSB5ZWFycy4gCkdvbnphZ2EgbmFpbGVkIGJ5IE5vcnRoIENhcm9saW5hIG9uIGJvYXJkcwpUaGVzZSB3ZXJlIHVzdWFsbHkgbm90IHRvbyB0aW1lIGNvbnN1bWluZyBvciBkaWZmaWN1bHQuVGhlcmUgd2VyZSBhbHNvIDMgbG9uZ2VyIGhvbWV3b3JrIGFzc2lnbm1lbnRzLiAKU2hlIGRpZG4gcGl2b3Qgb3IgaGF2ZSBhIHN1ZGRlbiByZWFsaXphdGlvbixzaGUgc2ltcGx5IGRvZXMgd2hhdCBwb2xpdGljYWxseSBleHBlZGllbnQuIApJdCBhIHdheSBmb3IgcGVvcGxlIHRvIHByb3RlY3QgdGhlbXNlbHZlcyBiZWNhdXNlIG5vYm9keSB3YW50cyB0byBhZG1pdCB0aGF0IHRoZXkgYXJlIGEgYmFkIHBlcnNvbi4gU2Vjb25kbHksIGhlIG1pZ2h0IGhhdmUgdG9sZCBoZXIgb3V0IG9mIGd1aWx0IChteSBleCBldmVudHVhbGx5IHRvbGQgbWUgYmVjYXVzZSBoZSBmZWx0IGd1aWx0eSwgYnV0IHRoZW4gd2FzIGFuZ3J5IGF0IG1lIGFnYWluIGZvciBub3QgbGV0dGluZyBoaW0gbmFwIGFmdGVyIHRlbGxpbmcgbWUpLgpMZXMgc2Fsb25zIGRlIG1hc3NhZ2UgZm9udCBwYXJ0aWUgaW50Z3JhbnRlIGRlIGwgZHUgc2V4ZS4gT24gZW4gcmV0cm91dmUgZGUgMTAgIDIwIHF1aSBhZmZpY2hlbnQgcmd1bGlyZW1lbnQgbGV1cnMgc2VydmljZXMgZGFucyBsZXMgc2VjdGlvbnMgcG91ciBhZHVsdGUgZCBqb3VybmFsLiAKVG9vIGJhZCBoZSdzIGhvbGRpbmcgaXQgaW4gaGlzIGhhbmQgYW5kIGdldHRpbmcgaGlzIGZpbmdlcnByaW50cyBhbGwgb3ZlciBpdC4gQ3V0IHRvIHRoZSB0cmlidW5hbCwgYW5kIHRoZSBndW4gbHlpbmcgb24gdGhlIHRhYmxlIGluIGZyb250IG9mIHRoZSBjaGljayBjb3AsIHRhZ2dlZCBhcyBldmlkZW5jZS4gSG9va2VyIGFuZCB0aGUgREEgZXhjaGFuZ2Ugd29yZHMgd2l0aCB0aGUganVkZ2UgZ3V5cyBhbmQgdGhlIGNoaWNrIGNvcCBsb29rcyB3b3JyaWVkLiAKWW91IHNhaWQgd2Ugc2hvdWxkIGNvbnRpbnVlIHdpdGggUTIgc3VpdGVkIHBsdXMgYW5kIGZvbGQgb3V0IHRoZSByZXN0Li4gClRoYXQgdGhlIHZhc3QgbWFqb3JpdHkgb2YgQW1lcmljYW5zIGJlbGlldmUgdGhhdCB3ZSBtdXN0IHJlZ3VsYXRlIFdhbGwgU3RyZWV0LiAKSWwgYXZhaXQgZ2FsZW1lbnQgYWZmaXJtLCBlbiBhcnJpdmFudCAgTG9uZHJlcywgcXVlIGxlcyBjYXJ0ZXMgdGFpZW50IHJlZGlzdHJpYnVlcyBhdmVjIGwnYWJzZW5jZSBzdXIgYmxlc3N1cmUgZGUgUnVkaXNoYSwgZG91YmxlIGNoYW1waW9uIG9seW1waXF1ZSBldCBkdSBtb25kZSwgZXQgZHRlbnRldXIgZHUgcmVjb3JkIHBsYW50YWlyZSAoMTo0MC45MSkuCjQgYm91bmNlcnMgaGFkIHRvIGhhbmRsZSAxNSBkcnVuayBhc3Nob2xlcy4gClRPUk9OVE8gTG91IExhbW9yaWVsbG8gaGFkIG5vdGhpbmcgYnV0IGdvb2QgdGhpbmdzIHRvIHNheSBhYm91dCBub3cgZm9ybWVyIE1hcGxlIExlYWYgU2hhd24gTWF0dGhpYXMsIGEgYmlnIGZvcndhcmQgd2l0aCBtb2Rlc3Qgc2NvcmluZyBza2lsbHMuCkplIHNhaXMgbGUgdmlvbG9uIGVzdCBsJ2luc3RydW1lbnQgZHUgZGlhYmxlLiAKICBhbmQgaXQgZXZlbiBoZWxwcyB5b3UgbWFrZSBiZXR0ZXIgZXRoaWNhbCBjaG9pY2VzLCBoYW5kbGUgZW1vdGlvbmFsIHN0cmVzcyBiZXR0ZXIsIGFuZCBhY2hpZXZlIGdvYWxzIGJldHRlciBiZWNhdXNlIGl0IGZvY3VzZXMgeW91ciB3aWxscG93ZXIgYW5kIGFjY3VzdG9tcyB5b3UgdG8gZmFjaW5nIGRpZmZpY3VsdCB0YXNrcyBoZWFkIG9uLiAKSWYgeW91IHdhbnQgdG8gcGxheSBhIHJlYWwgZ2FtZSBvZiBQb2tlciBhdCBhIENhc2lubyB5b3Ugd29uJ3QgYmUgYWJsZSB0byBkbyBpdCBmcmVlLiAKU28gZ28gdG8gZWFjaCBvbmUgb2YgdGhlc2UgbG9jYXRpb25zIGFuZCBiZWF0IHRoZSBmaXJzdCBvcHBvbmV0LiBTdHJhd2JlcnJ5LCBWYWxlbnRpbmUsIFZhbiBIb3JuIFRyYWRpbmcgUG9zdC4gCldoYXQgSSd2ZSBjb21lIHRvIGJlbGlldmUgaXMgdGhhdCBpbiBhIHNvbWV3aGF0IGRpZmZlcmVudCB3YXksIHRoaW5ncyBjYW4gc3RpbGwgYmUgdGhhdCB3YXkuIApGYW1pbHkgRmluYW5jZSBhc2tlZCBFbGlvdHQgRWluYXJzb24sIGEgZmluYW5jaWFsIHBsYW5uZXIgaW4gdGhlIFdpbm5pcGVnIG9mZmljZSBvZiBPdHRhd2EgYmFzZWQgRXhwb25lbnQgSW52ZXN0bWVudCBNYW5hZ2VtZW50IEluYy4sIHRvIHdvcmsgd2l0aCBQaGlsIGFuZCBQZW5ueS4KSSBsaXRlcmFsbHkgc2FpZCBpbiBteSBwcmV2aW91cyBwb3N0IHRoYXQgaGUgd2FzIGdvaW5nIHRvIHJlcXVlc3QgbW9yZSBidXQgbm90IGdvaW5nIHRvIGdldCBpdCwgc28geW91ciBqdXN0IGNvbmZpcm1pbmcgd2hhdCBJIGhhZCBhbHJlYWR5IHNhaWQuCiJZb3UgbWVhbiwiIEJlcmF0aSBhc2tlZCwgd2l0aCBhIGtlZW4gZ2xhbmNlIGZyb20gdW5kZXIgaGlzIGJ1c2h5IGJsYWNrIGV5ZWJyb3dzLCAidGhhdCB5b3VyIGNvdW50cnkgaGFzIG5vIGxvbmdlciBhIFNlY3JldCBTZXJ2aWNlPyIKRGl2aWRlbmQgc3RvY2tzIHBheSB5b3UgdG8gaG9sZCB0aGVtIGV2ZXJ5IG1vbnRoL3F1YXJ0ZXIgb3IgeWVhciBkZXBlbmRpbmcgdXBvbiB0aGVpciBwb2xpY3kuIApNYXliZSB5b3UgY291bGQgZ28gZm9yIGEgY2hlYXBlciBTU0QgdGhhdCBpcyBwcm9iYWJseSAyMCBldXJvIGxlc3MuIEJ1dCBhdCB0aGUgc2FtZSB0aW1lLCBpIGFtIHRyeWluZyB0byBnZXQgeW91dGhlIGJlc3Qgc3R1ZmYgb24gdGhlIG1hcmtldC4gSSB0ZWxsaW5nIHlhLiAKQyB2cmFpLiAKSSBkb24ga25vdyBhbnl0aGluZyBhYm91dCB0aGUgUExPIHZhcmlhbnQgYnV0IEkgY2FuIGltYWdpbmUgaXQgYW55IGZ1biBpbiBwcmFjdGljZSwgaXQgYmUgZXZlbiBtb3JlIG51dCBwZWRkbGluZyB0aGFuIDVjYXJkIFBMTyBidXQgc29tZSBwZW9wbGUgZW5qb3kgdGhhdC4gCkFueXRoaW5nbmljZTIwMTcgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28K|<---