<!DOCTYPE html>
<html class="no-js" data-status-code="200" dir="ltr" lang="ko">
 <head>
  <meta charset="utf-8"/>
  <meta content="user-scalable=no, width=device-width, initial-scale=1, maximum-scale=1" name="viewport"/>
  <meta content="yes" name="apple-mobile-web-app-capable"/>
  <meta content="yes" name="mobile-web-app-capable"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <title>
   [area1][mkey1][keyword1][symbolx][area1][keywordx][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
 </head>
 <body class="layout-master layout-article page-article " itemscope="" itemtype="https://schema.org/WebPage">
  <noscript>
   <iframe height="0" src="//www.googletagmanager.com/ns.html?id=GTM-T3SWNXB&amp;gtm_cookies_win=x&amp;language=ko&amp;environment=production&amp;edition=kr&amp;goalversion=BETA&amp;siteVersion=Responsive&amp;version=3.86.1&amp;pageType=Article&amp;pageSubType=News&amp;adPageName=news_articles&amp;pageTitle=%EC%8A%88%EB%B0%94%EC%9D%B8%EC%8A%88%ED%83%80%EC%9D%B4%EA%B1%B0+%22%EB%A7%A8%EC%9C%A0+%EB%96%A0%EB%82%98%EA%B2%8C+%EB%8F%BC+%EC%8A%AC%ED%94%84%EB%8B%A4%22&amp;contentHeadline=%EC%8A%88%EB%B0%94%EC%9D%B8%EC%8A%88%ED%83%80%EC%9D%B4%EA%B1%B0+%22%EB%A7%A8%EC%9C%A0+%EB%96%A0%EB%82%98%EA%B2%8C+%EB%8F%BC+%EC%8A%AC%ED%94%84%EB%8B%A4%22&amp;articleId=1vmkpj61u7wp41skbpymgxe3ar&amp;primaryTagId=2kwbbcootiqqgmrzs6o5inle5&amp;primaryTag=Premier+League&amp;primaryTagType=Competition&amp;secondaryTagId=6eqit8ye8aomdsrrq0hk3v7gh&amp;secondaryTag=Manchester+United&amp;secondaryTagType=Team&amp;otherContentTagIds=6bd68szdfna6z9ifb0wscln85%2Capsqaaege20za4re5wm6bzq9a%2C287tckirbfj9nb8ar2k9r60vn&amp;otherContentTags=B.+Schweinsteiger%2CChicago+Fire%2CMLS&amp;contextTagId=2kwbbcootiqqgmrzs6o5inle5&amp;contextTag=Premier+League&amp;contextTagType=Competition&amp;hiddenTagIds=xuc1t1s329by15oedi9rwy6l3&amp;hiddenTags=%40Geo%3B+Everywhere&amp;videoEmbed=Embed&amp;videoEmbedType=eP3&amp;paragraphsCount=5&amp;wordsCount=6&amp;articlePublishedDate=2017-03-21T09%3A34%3A09%2B00%3A00" style="display:none;visibility:hidden" width="0">
   </iframe>
  </noscript>
  <div class="out-of-page" data-empty="" data-name="out-of-page" data-role="ad" data-slot-id="/67970281/DISPLAY_OWNED_GBL/goalcom_responsive/news_articles/highimpact">
   <div data-state="unloaded" id="ad-5c1104d0783fa">
   </div>
  </div>
  <div class="widget-rich-media-unit widget-rich-media-unit--is-hidden widget-rich-media-unit--is-static" data-alias="unit-b" data-module="rich-media-unit">
   [link]
   
  </div>
  <a href="#" id="defocus-element">
  </a>
  <div class="widget-sponsorship banner-top" data-sponsorship-type="banner-top">
   <div class="banner" data-sponsorship-slot="banner-top" data-sponsorship-slot-id="image">
   </div>
  </div>
  <div class="widget-ad-masthead" data-module="ad/masthead">
   <div class="ad-masthead" data-empty="" data-name="ad-masthead" data-role="ad" data-slot-id="/67970281/DISPLAY_OWNED_GBL/goalcom_responsive/news_articles/masthead">
    <div data-state="unloaded" id="ad-5c1104d07cab9">
    </div>
   </div>
  </div>
  <header class="widget-header widget-header--top" data-module="header">
   <div class="widget-header__wrapper clearfix">
    <a class="widget-header__logo widget-header__logo--full" href="/kr">
    </a>
    <div class="widget-navigation__specials">
     <div class="widget-navigation__item widget-navigation__item--special widget-navigation__item--toggle">
      <a href="/kr/%EB%9D%BC%EC%9D%B4%EB%B8%8C%EC%8A%A4%EC%BD%94%EC%96%B4">
       <span>
        라이브 스코어
       </span>
      </a>
     </div>
    </div>
    <nav class="widget-navigation" data-module="navigation">
     <ul class="widget-navigation__nav">
      <li class="widget-navigation__item widget-navigation__item--active" data-context="news">
       <a href="/kr">
        <span>
         뉴스<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li>[ahref][link]<li>[link]</li><li>[ahref]</li>[search]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[link]</li><li>[search]</li><li>[ahref]</li>[link][link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]<li>[link]</li>
        </span>
       </a>
      </li>
      <li class="widget-navigation__item widget-navigation__item--special" data-context="matches">
       <a href="/kr/%EB%9D%BC%EC%9D%B4%EB%B8%8C%EC%8A%A4%EC%BD%94%EC%96%B4">
        <span>
         라이브 스코어<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<li>[link]</li>[link]<li>[link]</li>[ahref][link]
        </span>
       </a>
      </li>
      <li class="widget-navigation__item widget-navigation__item--sub-nav" data-context="competitions">
       [link]
       
       <div class="widget-navigation__sub-nav">
        [ahref]
        
        <ul class="widget-navigation__sub-items">
         <li class="widget-navigation__sub-item ">
          <a href="/kr/%ED%94%84%EB%A6%AC%EB%AF%B8%EC%96%B4-%EB%A6%AC%EA%B7%B8/2kwbbcootiqqgmrzs6o5inle5" title="프리미어 리그">
           <span class="widget-navigation__flag">
            프리미어 리그
           </span>
          </a>
         </li>
         <li class="widget-navigation__sub-item ">
          <a href="/kr/%EC%9C%A0%EB%9F%BD-uefa-%EC%B1%94%ED%94%BC%EC%96%B8%EC%8A%A4-%EB%A6%AC%EA%B7%B8/4oogyu6o156iphvdvphwpck10" title="유럽 - UEFA 챔피언스 리그">
           <span class="widget-navigation__flag">
            유럽 - UEFA 챔피언스 리그
           </span>
          </a>
         </li>
         <li class="widget-navigation__sub-item ">
          [ahref]
          
         </li>
         <li class="widget-navigation__sub-item ">
          [link]
          
         </li>
         <li class="widget-navigation__sub-item ">
          [link]
          
         </li>
         <li class="widget-navigation__sub-item ">
          [ahref]
          
         </li>
         <li class="widget-navigation__sub-item ">
          <a href="/kr/%EC%9C%A0%EB%9F%BD-uefa-%EC%9C%A0%EB%A1%9C%ED%8C%8C-%EB%A6%AC%EA%B7%B8/4c1nfi2j1m731hcay25fcgndq" title="유럽 - UEFA 유로파 리그">
           <span class="widget-navigation__flag">
            유럽 - UEFA 유로파 리그
           </span>
          </a>
         </li>
         <li class="widget-navigation__sub-item ">
          [ahref]
          
         </li>
         <li class="widget-navigation__sub-item ">
          <a href="/kr/afc-champions-league/1fedahp0rws09tj451onten8r" title="AFC Champions League">
           <span class="widget-navigation__flag">
            AFC Champions League
           </span>
          </a>
         </li>
         <li class="widget-navigation__sub-item ">
          [link]
          
         </li>
         <li class="widget-navigation__sub-item ">
          [ahref]
          
         </li>
         <li class="widget-navigation__sub-item ">
          [ahref]
          
         </li>
         <li class="widget-navigation__sub-item ">
          [ahref]
          
         </li>
         <li class="widget-navigation__sub-item ">
          [link]
          
         </li>
         <li class="widget-navigation__sub-item ">
          [ahref]
          
         </li>
         <li class="widget-navigation__sub-item ">
          [link]
          
         </li>
        </ul>
       </div>
      </li>
      <li class="widget-navigation__item " data-context="transfers">
       <a href="/kr/%EC%9D%B4%EC%A0%81-%EB%89%B4%EC%8A%A4">
        <span>
         이적
        </span>
       </a>
      </li>
      <li class="widget-navigation__item " data-context="teams">
       [ahref]
       
      </li>
      <li class="widget-navigation__item " data-context="shop">
       [link]
       
      </li>
     </ul>
     <div class="widget-navigation__options">
      <div class="widget-edition-picker widget-edition-picker--no-editions" data-module="edition-picker">
       <div class="widget-edition-picker__button ">
        <span>
        </span>
        한국어
       </div>
       <div class="widget-edition-picker__container widget-edition-picker__container--languages">
        <div class="widget-edition-picker__header">
         <div class="widget-edition-picker__label widget-edition-picker__label--languages">
          언어를 선택하세요
         </div>
         <div class="widget-edition-picker__label widget-edition-picker__label--editions">
          한국어 에디션을 선택하세요
         </div>
         <div class="widget-edition-picker__close widget-edition-picker__close--languages">
          <span>
           뒤로[search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>[search]<li>[ahref]</li>
          </span>
         </div>
        </div>
        <div class="widget-edition-picker__content clearfix">
         <ul class="widget-edition-picker__list widget-edition-picker__list--languages">
          <li class="widget-edition-picker__item">
           [link]
           
          </li>
          <li class="widget-edition-picker__item">
           <a class="widget-edition-picker__link" data-edition="en" href="/en">
            English
           </a>
          </li>
          <li class="widget-edition-picker__item">
           [link]
           
          </li>
          <li class="widget-edition-picker__item">
           <h2>
            <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
           </h2>
           [link]
           
          </li>
          <li class="widget-edition-picker__item">
           <a class="widget-edition-picker__link" data-edition="hr" href="/hr">
            Hrvatski
           </a>
          </li>
          <li class="widget-edition-picker__item">
           [ahref]
           
          </li>
          <li class="widget-edition-picker__item">
           <a class="widget-edition-picker__link" data-edition="it" href="/it">
            Italiano
           </a>
          </li>
          <li class="widget-edition-picker__item">
           [link]
           
          </li>
          <li class="widget-edition-picker__item">
           <a class="widget-edition-picker__link" data-edition="nl" href="/nl">
            Nederlands
           </a>
          </li>
          <li class="widget-edition-picker__item">
           [ahref]
           
          </li>
          <li class="widget-edition-picker__item">
           <a class="widget-edition-picker__link" data-edition="tr" href="/tr">
            Türkçe
           </a>
          </li>
          <li class="widget-edition-picker__item">
           <a class="widget-edition-picker__link" data-edition="vn" href="/vn">
            Việt Nam
           </a>
          </li>
          <li class="widget-edition-picker__item">
           [link]
           
          </li>
          <li class="widget-edition-picker__item">
           <a class="widget-edition-picker__link" data-edition="th" href="/th">
            ไทย
           </a>
          </li>
          <li class="widget-edition-picker__item">
           [ahref]
           
          </li>
          <li class="widget-edition-picker__item">
           [link]
           
          </li>
          <li class="widget-edition-picker__item widget-edition-picker__item--selected">
           [link]
           
          </li>
          <li class="widget-edition-picker__item">
           [link]
           
          </li>
         </ul>
        </div>
       </div>
      </div>
     </div>
    </nav>
    <div class="widget-header__menu">
     <span>
     </span>
    </div>
   </div>
  </header>
  <div class="ad-leaderboard" data-empty="" data-name="ad-leaderboard" data-role="ad" data-slot-id="/67970281/DISPLAY_OWNED_GBL/goalcom_responsive/news_articles/topbanner">
   <div data-state="unloaded" id="ad-5c1104d092ce2">
   </div>
  </div>
  <div class="page-container">
   <div class="widget-ad-skin" data-module="ad/skin">
    <div class="widget-ad-skin__left-gutter">
    </div>
    <div class="widget-ad-skin__right-gutter">
    </div>
   </div>
   <div class="page-container-bg">
    <div class="module-infinite-scroll gutters clearfix" data-module="article/infinite-scroll ad" data-settings="[{&quot;id&quot;:&quot;10a2zgi2qu9h31jktz2w9fg4en&quot;,&quot;description&quot;:&quot;\ud638\ub4e4\uc740 12\uc77c \ubc14\ub974\uc0ac-\ud1a0\ud2b8\ub118\uc804\uc744 \ub9c8\uce58\uace0 \uac1c\uc778 \ud2b8\uc704\ud130\uc5d0 \u201c\ub0b4 \uac74\uac15 \ud68c\ubcf5\uc5d0 \ubcc4\ub85c \uc88b\uc9c0 \uc54a\uc740 \uacbd\uae30\uc600\ub2e4!\u201d\uace0 \uc870\ud06c\ud588\ub2e4.&quot;,&quot;title&quot;:&quot;\uc804 \ud1a0\ud2b8\ub118 \ud638\ub4e4 \u201c\ubc14\ub974\uc0ac\uc804, \ub0b4 \uac74\uac15\uc5d0 \uc88b\uc9c0 \uc54a\uc558\ub2e4!\u201d&quot;,&quot;headline&quot;:&quot;\uc804 \ud1a0\ud2b8\ub118 \ud638\ub4e4 \u201c\ubc14\ub974\uc0ac\uc804, \ub0b4 \uac74\uac15\uc5d0 \uc88b\uc9c0 \uc54a\uc558\ub2e4!\u201d&quot;,&quot;keywords&quot;:[&quot;\ubc14\ub974\uc140\ub85c\ub098 v \ud1a0\ud2b8\ub118 \ud64b\uc2a4\ud37c&quot;,&quot;G. Hoddle&quot;,&quot;\ubc14\ub974\uc140\ub85c\ub098&quot;,&quot;\ud1a0\ud2b8\ub118 \ud64b\uc2a4\ud37c&quot;,&quot;\uc720\ub7fd - UEFA \ucc54\ud53c\uc5b8\uc2a4 \ub9ac\uadf8&quot;],&quot;url&quot;:&quot;\/kr\/%EB%89%B4%EC%8A%A4\/%EC%A0%84-%ED%86%A0%ED%8A%B8%EB%84%98-%ED%98%B8%EB%93%A4-%EB%B0%94%EB%A5%B4%EC%82%AC%EC%A0%84-%EB%82%B4-%EA%B1%B4%EA%B0%95%EC%97%90-%EC%A2%8B%EC%A7%80-%EC%95%8A%EC%95%98%EB%8B%A4\/10a2zgi2qu9h31jktz2w9fg4en&quot;,&quot;requestUrl&quot;:&quot;\/kr\/ajax\/news\/10a2zgi2qu9h31jktz2w9fg4en&quot;},{&quot;id&quot;:&quot;1iv1d6cyqfwvv1io255v6hiu9g&quot;,&quot;description&quot;:&quot;\ub9e8\uc2dc\ud2f0\ub294 \uc774\ubbf8 \ucc54\ud53c\uc5b8\uc2a4\ub9ac\uadf8 \ud1a0\ub108\uba3c\ud2b8 \uc9c4\ucd9c\uad8c\uc744 \ud655\ubcf4\ud55c \uc0c1\ud669\uc774\uc9c0\ub9cc, \ub9c8\uc74c\uaecf \ub85c\ud14c\uc774\uc158\uc744 \uac00\ub3d9\ud560 \uc218 \uc5c6\ub294 \ud615\ud3b8\uc774\ub2e4.&quot;,&quot;title&quot;:&quot;\ubd80\uc0c1 \ub9b4\ub808\uc774 \ub9e8\uc2dc\ud2f0, \u201815\uba85\u2019\uc73c\ub85c \ucc54\uc2a4 \uc870 1\uc704 \uc0ac\uc218 \ub098\uc120\ub2e4&quot;,&quot;headline&quot;:&quot;\ubd80\uc0c1 \ub9b4\ub808\uc774 \ub9e8\uc2dc\ud2f0, \u201815\uba85\u2019\uc73c\ub85c \ucc54\uc2a4 \uc870 1\uc704 \uc0ac\uc218 \ub098\uc120\ub2e4&quot;,&quot;keywords&quot;:[&quot;\ub9e8\uccb4\uc2a4\ud130 \uc2dc\ud2f0 v \ud638\ud39c\ud558\uc784&quot;,&quot;\ub2e4\ube44\ub4dc \uc2e4\ubc14&quot;,&quot;\ub9e8\uccb4\uc2a4\ud130 \uc2dc\ud2f0&quot;,&quot;\ud638\ud39c\ud558\uc784&quot;,&quot;\uc720\ub7fd - UEFA \ucc54\ud53c\uc5b8\uc2a4 \ub9ac\uadf8&quot;],&quot;url&quot;:&quot;\/kr\/%EB%89%B4%EC%8A%A4\/%EB%B6%80%EC%83%81-%EB%A6%B4%EB%A0%88%EC%9D%B4-%EB%A7%A8%EC%8B%9C%ED%8B%B0-15%EB%AA%85%EC%9C%BC%EB%A1%9C-%EC%B1%94%EC%8A%A4-%EC%A1%B0-1%EC%9C%84-%EC%82%AC%EC%88%98-%EB%82%98%EC%84%A0%EB%8B%A4\/1iv1d6cyqfwvv1io255v6hiu9g&quot;,&quot;requestUrl&quot;:&quot;\/kr\/ajax\/news\/1iv1d6cyqfwvv1io255v6hiu9g&quot;},{&quot;id&quot;:&quot;vqxo4d3o8azp16ojuncp8dyg7&quot;,&quot;description&quot;:&quot;\uacb0\uc2b9 1\ucc28\uc804, 2018\ub144 \ucf00\uc774\ube14 \uc2a4\ud3ec\uce20 \ucd5c\uace0 \uc2dc\uccad\ub960 \uae30\ub85d\u2026 \ub3d9\uc2dc\uac04\ub300 \uc9c0\uc0c1\ud30c \ub4dc\ub77c\ub9c8\ub3c4 \uc81c\uccd0&quot;,&quot;title&quot;:&quot;\uc6b0\ub9ac\uac00 \ub3d9\ub0a8\uc544 \ucd95\uad6c\ub97c \ubcfc \uc904\uc774\uc57c\u2026 \ubc15\ud56d\uc11c \uc2a4\ud1a0\ub9ac\uc758 \ub9c8\ubc95&quot;,&quot;headline&quot;:&quot;\uc6b0\ub9ac\uac00 \ub3d9\ub0a8\uc544 \ucd95\uad6c\ub97c \ubcfc \uc904\uc774\uc57c\u2026 \ubc15\ud56d\uc11c \uc2a4\ud1a0\ub9ac\uc758 \ub9c8\ubc95&quot;,&quot;keywords&quot;:[&quot;\ubc15\ud56d\uc11c&quot;,&quot;\ubca0\ud2b8\ub0a8&quot;,&quot;AFF Championship&quot;],&quot;url&quot;:&quot;\/kr\/%EB%89%B4%EC%8A%A4\/%EC%9A%B0%EB%A6%AC%EA%B0%80-%EB%8F%99%EB%82%A8%EC%95%84-%EC%B6%95%EA%B5%AC%EB%A5%BC-%EB%B3%BC-%EC%A4%84%EC%9D%B4%EC%95%BC-%EB%B0%95%ED%95%AD%EC%84%9C-%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%9D%98-%EB%A7%88%EB%B2%95\/vqxo4d3o8azp16ojuncp8dyg7&quot;,&quot;requestUrl&quot;:&quot;\/kr\/ajax\/news\/vqxo4d3o8azp16ojuncp8dyg7&quot;},{&quot;id&quot;:&quot;1vkrpd2xbob9s12feo867f8lsy&quot;,&quot;description&quot;:&quot;\uc6b0\uc2a4\ub9cc \ub380\ubca8\ub808\uac00 \uc288\ud37c\uc2a4\ud0c0 \ub9ac\uc624\ub12c \uba54\uc2dc\uac00 \uc9c0\ucf1c\ubcf4\ub294 \uc55e\uc5d0\uc11c \u2018\uba54\uc2dc\ub180\uc774\u2019\ub97c \ud588\ub2e4.&quot;,&quot;title&quot;:&quot;\uc2e4\uc804\uc5d0\uc120 \u2018\uba54\uc2dc \ube59\uc758\uace8\u2019, \uc560\uc99d\uc758 \ub380\ubca8\ub808&quot;,&quot;headline&quot;:&quot;\uc2e4\uc804\uc5d0\uc120 \u2018\uba54\uc2dc \ube59\uc758\uace8\u2019, \uc560\uc99d\uc758 \ub380\ubca8\ub808&quot;,&quot;keywords&quot;:[&quot;\ubc14\ub974\uc140\ub85c\ub098 v \ud1a0\ud2b8\ub118 \ud64b\uc2a4\ud37c&quot;,&quot;O. Demb\u00e9l\u00e9&quot;,&quot;\ubc14\ub974\uc140\ub85c\ub098&quot;,&quot;\ud1a0\ud2b8\ub118 \ud64b\uc2a4\ud37c&quot;,&quot;\uc720\ub7fd - UEFA \ucc54\ud53c\uc5b8\uc2a4 \ub9ac\uadf8&quot;],&quot;url&quot;:&quot;\/kr\/%EB%89%B4%EC%8A%A4\/%EC%8B%A4%EC%A0%84%EC%97%90%EC%84%A0-%EB%A9%94%EC%8B%9C-%EB%B9%99%EC%9D%98%EA%B3%A8-%EC%95%A0%EC%A6%9D%EC%9D%98-%EB%8E%80%EB%B2%A8%EB%A0%88\/1vkrpd2xbob9s12feo867f8lsy&quot;,&quot;requestUrl&quot;:&quot;\/kr\/ajax\/news\/1vkrpd2xbob9s12feo867f8lsy&quot;},{&quot;id&quot;:&quot;1vtbkrdi2us4g1fyq9hqu6tcnq&quot;,&quot;description&quot;:&quot;\uc120\uc218\uc640 \uac10\ub3c5\uc744 \ubcd1\ud589\ud558\ub294 \ud63c\ub2e4 \ucf00\uc774\uc2a4\ucf00\uac00 \ud638\uc8fc A\ub9ac\uadf8 \uc774\ub2ec\uc758 \uc120\uc218\uc0c1\uc744 \uc218\uc0c1\ud588\ub2e4.&quot;,&quot;title&quot;:&quot;'\ud22c\uc7a1' \ud63c\ub2e4, \uac10\ub3c5 \uccab \uc2b9 \uc774\uc5b4 '\uc774\ub2ec\uc758 \uc120\uc218\uc0c1'&quot;,&quot;headline&quot;:&quot;'\ud22c\uc7a1' \ud63c\ub2e4, \uac10\ub3c5 \uccab \uc2b9 \uc774\uc5b4 '\uc774\ub2ec\uc758 \uc120\uc218\uc0c1' \uc218\uc0c1&quot;,&quot;keywords&quot;:[&quot;K.\ud63c\ub2e4&quot;,&quot;A-League&quot;,&quot;Melbourne Victory&quot;],&quot;url&quot;:&quot;\/kr\/%EB%89%B4%EC%8A%A4\/%ED%88%AC%EC%9E%A1-%ED%98%BC%EB%8B%A4-%EA%B0%90%EB%8F%85-%EC%B2%AB-%EC%8A%B9-%EC%9D%B4%EC%96%B4-%EC%9D%B4%EB%8B%AC%EC%9D%98-%EC%84%A0%EC%88%98%EC%83%81-%EC%88%98%EC%83%81\/1vtbkrdi2us4g1fyq9hqu6tcnq&quot;,&quot;requestUrl&quot;:&quot;\/kr\/ajax\/news\/1vtbkrdi2us4g1fyq9hqu6tcnq&quot;}]">
     <div class="scroll-group clearfix">
      <div class="article-content ">
       <div class="content">
        <article class="widget-article " data-article-id="1vmkpj61u7wp41skbpymgxe3ar" data-module="article" data-role="widget-share-parent" itemscope="" itemtype="https://schema.org/Article" role="article">
         <meta content='{"language":"ko","environment":"production","edition":"kr","goalversion":"BETA","siteVersion":"Responsive","version":"3.86.1","pageType":"Article","pageSubType":"News","adPageName":"news_articles","pageTitle":"\uc288\ubc14\uc778\uc288\ud0c0\uc774\uac70 \"\ub9e8\uc720 \ub5a0\ub098\uac8c \ub3fc \uc2ac\ud504\ub2e4\"","contentHeadline":"\uc288\ubc14\uc778\uc288\ud0c0\uc774\uac70 \"\ub9e8\uc720 \ub5a0\ub098\uac8c \ub3fc \uc2ac\ud504\ub2e4\"","articleId":"1vmkpj61u7wp41skbpymgxe3ar","primaryTagId":"2kwbbcootiqqgmrzs6o5inle5","primaryTag":"Premier League","primaryTagType":"Competition","secondaryTagId":"6eqit8ye8aomdsrrq0hk3v7gh","secondaryTag":"Manchester United","secondaryTagType":"Team","otherContentTagIds":["6bd68szdfna6z9ifb0wscln85","apsqaaege20za4re5wm6bzq9a","287tckirbfj9nb8ar2k9r60vn"],"otherContentTags":["B. Schweinsteiger","Chicago Fire","MLS"],"contextTagId":"2kwbbcootiqqgmrzs6o5inle5","contextTag":"Premier League","contextTagType":"Competition","hiddenTagIds":"xuc1t1s329by15oedi9rwy6l3","hiddenTags":"@Geo; Everywhere","videoEmbed":"Embed","videoEmbedType":"eP3","paragraphsCount":5,"wordsCount":6,"articlePublishedDate":"2017-03-21T09:34:09+00:00"}' itemprop="gtmData">
          <div class="article-container clearfix">
           <div class="tags-bar clearfix">
            <a class="tags-bar-main" href="/kr/%ED%94%84%EB%A6%AC%EB%AF%B8%EC%96%B4-%EB%A6%AC%EA%B7%B8/2kwbbcootiqqgmrzs6o5inle5" itemprop="articleSection">
             프리미어 리그
            </a>
           </div>
           <div class="article-header">
            <header>
             <h1 class="article-headline" itemprop="headline">
              [area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]
             </h1>
            </header>
           </div>
           <div class="widget-article-author author-type-normal " itemprop="author" itemscope="" itemtype="https://schema.org/Person">
            <div class="author-part">
            </div>
            <div class="sponsorship-strip" data-sponsorship-articles="1vmkpj61u7wp41skbpymgxe3ar" data-sponsorship-primary-tag="2kwbbcootiqqgmrzs6o5inle5" data-sponsorship-secondary-tag="6eqit8ye8aomdsrrq0hk3v7gh" data-sponsorship-type="article">
             <span class="text" data-sponsorship-slot="article" data-sponsorship-slot-id="text">
              [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[link]</li><li>[ahref]</li>
             </span>
             <span class="image" data-sponsorship-slot="article" data-sponsorship-slot-id="image">
             </span>
            </div>
           </div>
           <div class="article-update-time">
            <span>
             마지막 업데이트
            </span>
            <time class="article-container__time" data-dateformat="auto" data-utc="1490088852999" datetime="2017-03-21T09:34:12Z" itemprop="dateModified">
             17. 3. 21.
            </time>
           </div>
           <div class="actions-bar">
            <time class="actions-bar__time" datetime="2017-03-21T09:34:09Z" itemprop="datePublished">
             <span data-dateformat="time" data-utc="1490088849000">
              PM 6:34
             </span>
             <span data-dateformat="dateShort" data-utc="1490088849000">
              17. 3. 21.
             </span>
            </time>
            <div class="widget-share" data-module="share" data-settings='{"headline":"\uc288\ubc14\uc778\uc288\ud0c0\uc774\uac70 \"\ub9e8\uc720 \ub5a0\ub098\uac8c \ub3fc \uc2ac\ud504\ub2e4\"","url":"https:\/\/www.goal.com\/kr\/%EB%89%B4%EC%8A%A4\/%EB%B0%94%EC%8A%A4%ED%8B%B0%EC%95%88-%EC%8A%88%EB%B0%94%EC%9D%B8%EC%8A%88%ED%83%80%EC%9D%B4%EA%B1%B0-%EB%A7%A8%EC%B2%B4%EC%8A%A4%ED%84%B0-%EC%9C%A0%EB%82%98%EC%9D%B4%ED%8B%B0%EB%93%9C-%EB%96%A0%EB%82%98%EA%B2%8C-%EB%8F%BC-%EC%8A%AC%ED%94%84%EB%8B%A4\/1vmkpj61u7wp41skbpymgxe3ar","openOnClick":false,"opened":true,"buttonLimit":false,"strategy":"dropdown"}'>
             <div class="widget-share__wrapper">
              <div class="widget-share__counter">
              </div>
              <div class="widget-share__social">
              </div>
             </div>
            </div>
            <span class="actions-bar-comments" data-role="comments-button">
             <li>[link]</li><li>[search]</li><li>[search]</li><li>[ahref]</li><li>[ahref]</li>[link]
            </span>
           </div>
           <div class="actions-container">
            <div class="widget-netseer" data-module="netseer" data-settings='{"netseer_tag_id":"28568","netseer_task":"in-image"}'>
            </div>
            <div class="picture article-image">
             <noscript class="picture__polyfill">
             </noscript>
             <div class="image-source" title="Getty Images">
              <span>
               Getty Images[ahref][link][link]<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]<li>[link]</li><li>[ahref]</li>[link]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[search]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][link]<li>[ahref]</li>
              </span>
             </div>
            </div>
            <div class="widget-comments" data-module="comments" data-settings='{"url":"\/kr\/%EB%89%B4%EC%8A%A4\/%EB%B0%94%EC%8A%A4%ED%8B%B0%EC%95%88-%EC%8A%88%EB%B0%94%EC%9D%B8%EC%8A%88%ED%83%80%EC%9D%B4%EA%B1%B0-%EB%A7%A8%EC%B2%B4%EC%8A%A4%ED%84%B0-%EC%9C%A0%EB%82%98%EC%9D%B4%ED%8B%B0%EB%93%9C-%EB%96%A0%EB%82%98%EA%B2%8C-%EB%8F%BC-%EC%8A%AC%ED%94%84%EB%8B%A4\/1vmkpj61u7wp41skbpymgxe3ar","headline":"\uc288\ubc14\uc778\uc288\ud0c0\uc774\uac70 \"\ub9e8\uc720 \ub5a0\ub098\uac8c \ub3fc \uc2ac\ud504\ub2e4\"","categoryId":"goal-ko","streamId":"article_1vmkpj61u7wp41skbpymgxe3ar","streamTags":"premier-league,manchester-united,b-schweinsteiger,chicago-fire,mls"}'>
            </div>
           </div>
           <div class="tags-list tags-list--dark" data-module="framework/tags-list">
            <span class="tags-list__prev disabled">
             <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[link]<li>[search]</li>[search][search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link][search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[link]</li>
            </span>
            <div class="tags-list__scroller">
             <ul class="tags-list__list clearfix">
              <li class="tags-list__tag">
               [ahref]
               
              </li>
              <li class="tags-list__tag">
               [ahref]
               
              </li>
              <li class="tags-list__tag">
               <a class="tags-list__link" href="/kr/%ED%8C%80/%EC%8B%9C%EC%B9%B4%EA%B3%A0-%ED%8C%8C%EC%9D%B4%EC%96%B4/apsqaaege20za4re5wm6bzq9a">
                시카고 파이어
               </a>
              </li>
              <li class="tags-list__tag">
               <a class="tags-list__link" href="/kr/mls/287tckirbfj9nb8ar2k9r60vn">
                MLS
               </a>
              </li>
             </ul>
            </div>
            <span class="tags-list__next disabled">
            </span>
           </div>
           <div class="teaser" itemprop="description">
            [골닷컴] 이용훈 기자 = 독일 국가대표 출신 미드필더 바스티안 슈바인슈타이거가 시카고 파이어 이적을 발표하며 맨체스터 유나이티드(맨유)와의 작별이 슬프다는 소감을 전했다.
           </div>
           <div class="ad-top-mpu" data-empty="" data-name="ad-top-mpu" data-role="ad" data-slot-id="/67970281/DISPLAY_OWNED_GBL/goalcom_responsive/news_articles/topmpu">
            <div data-label="기사는 아래에 이어집니다" data-state="unloaded" id="ad-5c1104d056789">
            </div>
           </div>
           <div class="body" itemprop="articleBody">
            <p>
             슈바인슈타이거가 유럽 무대를 떠나 미국 메이저 리그 사커(MLS) 소속 시카고 파이어와 계약을 체결했다. 지난 2월 말 생테티엔과의 유로파 리그 맞대결에 출전한 것이 유럽 무대 고별 경기가 됐다.[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>
            </p>
            <p>
             32세의 슈바인슈타이거는 바이에른 뮌헨에서 화려한 선수 경력을 보낸 뒤 2015년 맨유에서 새로운 도전을 선택했다. 그러나 부상과 부진이 겹치며 맨유에서는 존재감을 드러내지 못했고, 2016년 여름 조세 무리뉴 감독이 맨유의 지휘봉을 잡은 이후로는 사실상 전력 외 선수나 다름없었다.
            </p>
            <hr style="color: #00ac77; width: 100%; background: #00ac77; border: 0; height: 2px;"/>
            <span>
             <strong>
              주요 뉴스  |
             </strong>
             [link]
             
            </span>
            <hr style="color: #00ac77; width: 100%; background: #00ac77; border: 0; height: 2px;"/>
            <p>
             그럼에도 슈바인슈타이거는 맨유와의 작별을 아쉬워했다. 그는 맨유 공식 사이트를 통해 "맨유의 많은 친구들을 떠나게 돼 슬프다. 시카고 파이어에서 도전할 기회를 잡도록 허락해준 구단에 감사하다"고 전했다.
             <section class="widget-inline-editors-picks clearfix">
              <h3>
               [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
              </h3>
              <ul itemscope="" itemtype="https://schema.org/WebPage">
               <li>
                [link]
                
               </li>
               <li>
                <a href="/story/goal-50-korean/index.html" itemprop="relatedLink" title="Goal 50 : 2017년 세계 최고의 축구 선수들 TOP 50">
                 Goal 50 : 2017년 세계 최고의 축구 선수들 TOP 50
                </a>
               </li>
              </ul>
             </section>
             <div class="ad-betting-widget" data-empty="" data-name="ad-betting-widget" data-role="ad" data-slot-id="/67970281/DISPLAY_OWNED_GBL/goalcom_responsive/news_articles/bettingwidget">
              <div data-state="unloaded" id="ad-5c1104d072336">
              </div>
             </div>
             <p>
              한편, 미국 지역 언론 '시카고 트리뷴'을 통해서는 "선수 경력 내내 긍정적인 영향을 끼치고 훌륭한 일을 이루도록 도울 기회를 추구해왔다. 시카고 파이어로의 이적도 다르지 않다. 구단의 비전과 철학에 확신을 얻었다"는 이적 소감을 밝혔다.<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[link]</li>[ahref]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[link]</li><li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]
             </p>
             <hr style="color: #00ac77; width: 100%; background: #00ac77; border: 0; height: 2px;"/>
             <span>
              [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][search]<li>[ahref]</li><li>[ahref]</li><li>[link]</li><li>[ahref]</li><li>[link]</li>
             </span>
             <hr style="color: #00ac77; width: 100%; background: #00ac77; border: 0; height: 2px;"/>
             <p>
              이번 시즌 슈바인슈타이거는 맨유 소속으로 모든 대회를 합해 네 경기에 모습을 드러냈지만, 프리미어 리그에서는 한 경기에도 출전하지 못했다. 그는 바이에른 소속으로 분데스리가 8회, 챔피언스 리그 1회, DFB 포칼 7회 우승을 차지하는 화려한 경력을 보내왔다. 독일 국가대표로도 2014 브라질 월드컵 무대에서 정상에 올랐다.
              <p class="article-sponsorship-footer" data-sponsorship-articles="1vmkpj61u7wp41skbpymgxe3ar" data-sponsorship-primary-tag="2kwbbcootiqqgmrzs6o5inle5" data-sponsorship-secondary-tag="6eqit8ye8aomdsrrq0hk3v7gh" data-sponsorship-type="article-footer">
               <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]<li>[search]</li><li>[ahref]</li><li>[ahref]</li>[search][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[ahref]</li>[ahref]<li>[link]</li>
              </p>
             </p>
            </p>
           </div>
          </div>
          <div class="widget-taboola slidelist-below" data-module="taboola" data-settings='{"placement":"slidelist-below","forArticle":null}'>
           <div class="placement">
           </div>
          </div>
          <div class="social-container">
           <div class="share-bar clearfix">
            <div class="widget-share widget-share--opened" data-module="share" data-settings='{"headline":"\uc288\ubc14\uc778\uc288\ud0c0\uc774\uac70 \"\ub9e8\uc720 \ub5a0\ub098\uac8c \ub3fc \uc2ac\ud504\ub2e4\"","url":"https:\/\/www.goal.com\/kr\/%EB%89%B4%EC%8A%A4\/%EB%B0%94%EC%8A%A4%ED%8B%B0%EC%95%88-%EC%8A%88%EB%B0%94%EC%9D%B8%EC%8A%88%ED%83%80%EC%9D%B4%EA%B1%B0-%EB%A7%A8%EC%B2%B4%EC%8A%A4%ED%84%B0-%EC%9C%A0%EB%82%98%EC%9D%B4%ED%8B%B0%EB%93%9C-%EB%96%A0%EB%82%98%EA%B2%8C-%EB%8F%BC-%EC%8A%AC%ED%94%84%EB%8B%A4\/1vmkpj61u7wp41skbpymgxe3ar","openOnClick":false,"opened":true,"buttonLimit":4,"strategy":"row"}'>
             <div class="widget-share__wrapper">
              <div class="widget-share__counter">
              </div>
              <div class="widget-share__social">
              </div>
             </div>
            </div>
           </div>
           <div class="btn btn--comments" data-role="comments-button">
            <span>
             댓글
            </span>
            (
            <span data-role="comments-count">
             [search][link]<li>[search]</li><li>[link]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[ahref]</li>
            </span>
            )
           </div>
          </div>
         </meta>
        </article>
       </div>
       <aside>
        <div class="commercial">
         <div class="ad-top-mpu" data-empty="" data-name="ad-top-mpu" data-role="ad" data-slot-id="/67970281/DISPLAY_OWNED_GBL/goalcom_responsive/news_articles/topmpu">
          <div data-label="광고" data-state="unloaded" id="ad-5c1104d077a93">
          </div>
         </div>
        </div>
       </aside>
      </div>
     </div>
     <div class="panel panel-top clearfix" data-article-id="10a2zgi2qu9h31jktz2w9fg4en">
      <div class="elem-container">
       <div class="next">
       </div>
       <div class="content">
        <div class="label">
         다음 뉴스:
        </div>
        <div class="title">
         전 토트넘 호들 “바르사전, 내 건강에 좋지 않았다!”
        </div>
       </div>
       <div class="close">
       </div>
      </div>
     </div>
     <div class="article-delimiter hidden clearfix" data-article-id="10a2zgi2qu9h31jktz2w9fg4en">
      <div class="panel clearfix">
       <div class="elem-container">
        <div class="next">
        </div>
        <div class="content">
         <div class="label">
          다음 뉴스:
         </div>
         <div class="title">
          전 토트넘 호들 “바르사전, 내 건강에 좋지 않았다!”
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="panel panel-top clearfix" data-article-id="1iv1d6cyqfwvv1io255v6hiu9g">
      <div class="elem-container">
       <div class="next">
       </div>
       <div class="content">
        <div class="label">
         다음 뉴스:
        </div>
        <div class="title">
         부상 릴레이 맨시티, ‘15명’으로 챔스 조 1위 사수 나선다
        </div>
       </div>
       <div class="close">
       </div>
      </div>
     </div>
     <div class="article-delimiter hidden clearfix" data-article-id="1iv1d6cyqfwvv1io255v6hiu9g">
      <div class="panel clearfix">
       <div class="elem-container">
        <div class="next">
        </div>
        <div class="content">
         <div class="label">
          다음 뉴스:
         </div>
         <div class="title">
          부상 릴레이 맨시티, ‘15명’으로 챔스 조 1위 사수 나선다
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="panel panel-top clearfix" data-article-id="vqxo4d3o8azp16ojuncp8dyg7">
      <div class="elem-container">
       <div class="next">
       </div>
       <div class="content">
        <div class="label">
         다음 뉴스:
        </div>
        <div class="title">
         우리가 동남아 축구를 볼 줄이야… 박항서 스토리의 마법
        </div>
       </div>
       <div class="close">
       </div>
      </div>
     </div>
     <div class="article-delimiter hidden clearfix" data-article-id="vqxo4d3o8azp16ojuncp8dyg7">
      <div class="panel clearfix">
       <div class="elem-container">
        <div class="next">
        </div>
        <div class="content">
         <div class="label">
          다음 뉴스:
         </div>
         <div class="title">
          우리가 동남아 축구를 볼 줄이야… 박항서 스토리의 마법
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="panel panel-top clearfix" data-article-id="1vkrpd2xbob9s12feo867f8lsy">
      <div class="elem-container">
       <div class="next">
       </div>
       <div class="content">
        <div class="label">
         다음 뉴스:
        </div>
        <div class="title">
         실전에선 ‘메시 빙의골’, 애증의 뎀벨레
        </div>
       </div>
       <div class="close">
       </div>
      </div>
     </div>
     <div class="article-delimiter hidden clearfix" data-article-id="1vkrpd2xbob9s12feo867f8lsy">
      <div class="panel clearfix">
       <div class="elem-container">
        <div class="next">
        </div>
        <div class="content">
         <div class="label">
          다음 뉴스:
         </div>
         <div class="title">
          실전에선 ‘메시 빙의골’, 애증의 뎀벨레
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="panel panel-top clearfix" data-article-id="1vtbkrdi2us4g1fyq9hqu6tcnq">
      <div class="elem-container">
       <div class="next">
       </div>
       <div class="content">
        <div class="label">
         다음 뉴스:
        </div>
        <div class="title">
         '투잡' 혼다, 감독 첫 승 이어 '이달의 선수상' 수상
        </div>
       </div>
       <div class="close">
       </div>
      </div>
     </div>
     <div class="article-delimiter hidden clearfix" data-article-id="1vtbkrdi2us4g1fyq9hqu6tcnq">
      <div class="panel clearfix">
       <div class="elem-container">
        <div class="next">
        </div>
        <div class="content">
         <div class="label">
          다음 뉴스:
         </div>
         <div class="title">
          '투잡' 혼다, 감독 첫 승 이어 '이달의 선수상' 수상
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
  <div class="drawer">
   <header class="drawer__header">
    <span class="drawer__title">
     [link][search][link]<li>[ahref]</li><li>[ahref]</li>[search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][ahref]
    </span>
    <i class="drawer__close">
    </i>
   </header>
   <div class="drawer__content">
   </div>
  </div>
  <footer class="widget-footer clearfix" itemscope="" itemtype="https://schema.org/WPFooter">
   <meta content="2018" itemprop="copyrightYear">
    <meta content="Goal.com" itemprop="copyrightHolder">
     <div class="page-container">
      [link]
      
      <div class="widget-footer__bottom gutters">
       <ul class="widget-footer__links clearfix">
        <li>
         <a href="/kr/contact" itemprop="relatedLink">
          문의하기
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         <a href="/kr/%EB%B2%95%EB%A5%A0/%EA%B0%9C%EC%9D%B8%EC%A0%95%EB%B3%B4%EB%B3%B4%ED%98%B8%EC%A0%95%EC%B1%85" itemprop="relatedLink">
          개인정보보호정책
         </a>
        </li>
        <li class="android-link">
         [ahref]
         
        </li>
        <li class="ios-link">
         [ahref]
         
        </li>
        <li class="web-link">
         [ahref]
         
        </li>
        <li class="android-link">
         <a href="/2947384588/479c5d2f" itemprop="relatedLink">
          Goal Live
         </a>
        </li>
        <li class="ios-link">
         <a href="/2947384588/479c5d2f" itemprop="relatedLink">
          Goal Live
         </a>
        </li>
        <li class="web-link">
         [ahref]
         
        </li>
        <li class="android-link">
         [ahref]
         
        </li>
        <li class="ios-link">
         [link]
         
        </li>
        <li class="web-link">
         <a href="/en/news/755/europe/2015/07/01/13209142/play-the-new-goal-fantasy-football-game" itemprop="relatedLink" target="_blank">
          Goal 판타지 풋볼
         </a>
        </li>
       </ul>
       <p class="widget-footer__copyright">
        <li>[link]</li><li>[search]</li><li>[ahref]</li>[link]<li>[link]</li><li>[ahref]</li>
       </p>
      </div>
     </div>
    </meta>
   </meta>
  </footer>
  <div class="component-modal">
   <span class="component-modal__close" data-action="@close">
    닫기<li>[link]</li>[ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search][link]<li>[ahref]</li>
   </span>
   <div class="component-modal__content">
   </div>
   <div class="component-modal__actions">
   </div>
  </div>
  <div class="widget-smart-banner" data-module="smart-banner" data-settings='{"ios":{"id":687276446,"url":"https:\/\/appsflyer.onelink.me\/2947384588?af_banner=true&amp;pid=smartbanner_pid&amp;c=smartbanner_c&amp;af_adset=smartbanner_adset&amp;af_adset_id=smartbanner_adset_id&amp;af_ad=smartbanner_ad&amp;af_ad_id=smartbanner_ad_id&amp;af_siteid=smartbanner_site_id&amp;af_sub1=smartbanner_sub1&amp;af_dp=appsflyer%3A%2F%2F","name":"Goal Live Scores","alias":"gls","icon":"\/rebuild-beta-assets\/img\/ios-gls.png","cookie":{"openTTL":2,"closeTTL":2},"author":"By Goal.com","buttonTextInstall":"\uc124\uce58","buttonTextOpen":"\uc5f4\uae30","leading":"\uac00\uc7a5 \ube60\ub978 \ub77c\uc774\ube0c \uc2a4\ucf54\uc5b4 \uc571"},"android":{"id":"com.kokteyl.goal","url":"https:\/\/appsflyer.onelink.me\/2947384588?af_banner=true&amp;pid=smartbanner_pid&amp;c=smartbanner_c&amp;af_adset=smartbanner_adset&amp;af_adset_id=smartbanner_adset_id&amp;af_ad=smartbanner_ad&amp;af_ad_id=smartbanner_ad_id&amp;af_siteid=smartbanner_site_id&amp;af_sub1=smartbanner_sub1&amp;af_dp=appsflyer%3A%2F%2F","name":"Goal Live Scores","alias":"gls","icon":"\/rebuild-beta-assets\/img\/android-gls.png","cookie":{"openTTL":2,"closeTTL":2},"author":"By Goal.com","buttonTextInstall":"\uc124\uce58","buttonTextOpen":"\uc5f4\uae30","leading":"\uac00\uc7a5 \ube60\ub978 \ub77c\uc774\ube0c \uc2a4\ucf54\uc5b4 \uc571"}}'>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0159
  </b>
 </body>
</html>