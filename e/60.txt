<!DOCTYPE html>
<html lang="ko-kr">
 <head>
  <meta charset="utf-8"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no" name="viewport"/>
  <title>
   [area1][mkey1][keyword1][symbolx][area1][keywordx][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description">
   <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords">
    <meta content="telephone=no" name="format-detection"/>
    <meta content="도토리 - CLIP STUDIO ASSETS" property="og:title">
     <meta content="article" property="og:type">
      <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
      <meta content="https://celclipmaterialprod.s3-ap-northeast-1.amazonaws.com/26/78/1727826/thumbnail?1542038115" property="og:image"/>
      <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:site_name"/>
      <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
      <meta content="photo" name="twitter:card"/>
      <meta content="@clip_celsys" name="twitter:site"/>
      <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:url"/>
      <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:title"/>
      <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:description"/>
      <meta content="https://celclipmaterialprod.s3-ap-northeast-1.amazonaws.com/26/78/1727826/thumbnail?1542038115" name="twitter:image"/>
     </meta>
    </meta>
   </meta>
  </meta>
 </head>
 <body id="body">
  <header id="header">
   <div class="header__serviceMenu">
    [link]
    
    <ul class="dropdown-menu" role="menu">
     <li>
      [link]
      
     </li>
     <li class="divider">
     </li>
     <li>
      [link]
      
     </li>
     <li class="divider">
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li class="divider">
     </li>
     <li>
      [link]
      
     </li>
     <li>
      <a href="/kr/support" target="_blank">
       <p>
        서포트<li>[ahref]</li><li>[ahref]</li>[search][ahref]<li>[link]</li><li>[search]</li>[ahref]<li>[ahref]</li>
       </p>
      </a>
     </li>
     <li>
      [ahref]
      
     </li>
    </ul>
   </div>
   <div class="header__panel">
    <a href="/ko-kr/">
     <div class="header__logo">
     </div>
     <div class="header__siteName">
      CLIP STUDIO ASSETS
     </div>
    </a>
    <div class="dropdown header__selectSite">
     <a aria-expanded="false" class="dropdown-toggle" data-toggle="dropdown">
      <i aria-hidden="true" class="fa fa-caret-square-o-down">
      </i>
     </a>
     <ul class="dropdown-menu dropdown-menu-right header__sites" role="menu">
      <li>
       [link]
       
      </li>
      <li>
       [link]
       
      </li>
      <li>
       <a href="/ko-kr">
        <span class="header__site--title">
         ASK[link][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][search]<li>[link]</li>
        </span>
        <span class="header__site--desc">
         질문 &amp; 답변[search][ahref][search]<li>[ahref]</li>[ahref]<li>[search]</li><li>[ahref]</li>[link][search]<li>[ahref]</li>
        </span>
       </a>
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [link]
       
      </li>
     </ul>
    </div>
   </div>
   <div class="header__accountMenu header__accountMenu--logout hidden-xs">
    [link]
    
    [link]
    
    [link]
    
   </div>
   <div class="header__accountMenu header__accountMenu--logout visible-xs">
    [link]
    
    <ul class="dropdown-menu" role="menu">
     <li>
      [ahref]
      
     </li>
     <li>
      <a href="/register?forward=https%3A%2F%2Fassets.clip-studio.com%2Fko-kr%2Fdetail%3Fid%3D1727826&amp;ui_locales=ko-kr">
       계정 등록
      </a>
     </li>
     <li class="divider">
     </li>
     <li>
      [ahref]
      
     </li>
    </ul>
   </div>
  </header>
  <article class=" headerFixed " id="article">
   <div id="detail">
    <div class=" layout__fixedHead headerFixed " data-material-header="">
     <section class="layout__materialHeader">
      <div class="layout__materialHeaderThumbnail">
       <span class="materialHeaderThumbnail--pc">
        <li>[link]</li><li>[ahref]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]
       </span>
       <span class="materialHeaderThumbnail--sm">
       </span>
      </div>
      <div class="layout__materialHeaderContent">
       <h1 class="materialHeaderTitle" data-translation-target="">
        <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
       </h1>
       <div class="clearfix favoriteInfo">
        <ul class="favoriteCount">
         <li>
          <div class="downloadCount">
           <i aria-hidden="true" class="fa fa-download ">
           </i>
           <span class="downloadCount__count">
            95
           </span>
          </div>
         </li>
        </ul>
        <ul class="favoriteButtons">
         <li>
          <button class="btn btn-default operationButton favoriteButton inactive" data-favorite-button="" data-favorite-count="4" data-message-cannot-like='이 소재는 "좋아요!"를 할 수 없습니다' data-message-failed-register='"좋아요!"에 실패했습니다' data-message-failed-unregister='"좋아요!"해제에 실패했습니다' data-message-not-login="로그인해주세요" data-message-own-post="자신의 게시물에는 '좋아요!'를 할 수 없습니다." type="button">
           <i aria-hidden="true" class="favoriteButton__icon fa fa-heart">
           </i>
           <span class="favoriteButton__text">
            좋아요!
                                        <li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]<li>[ahref]</li>[ahref]<li>[ahref]</li>[search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li>[search]
           </span>
           <span class="favoriteButton__count" data-favorite-count-view="">
            4
                                        <li>[ahref]</li><li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][ahref]<li>[search]</li>
           </span>
          </button>
         </li>
         <li>
          <button class="btn btn-default operationButton starButton inactive" data-can-not-add-star="이 소재는 마이 리스트에 추가할 수 없습니다" data-failed-add-star="마이리스트에 추가를 실패했습니다" data-failed-remove-star="마이리스트에서의 제외를 실패했습니다" data-please-login="로그인해주세요" data-star-button="" type="button">
           <i aria-hidden="true" class="fa fa-star">
           </i>
          </button>
         </li>
         <li>
          <button class="btn btn-default operationButton favoriteButton" data-translate-button="" data-translation-failed="번역에 실패했습니다" disabled="disabled" type="button">
           <i aria-hidden="true" class="favoriteButton__icon fa fa-globe" data-translate-button-icon="">
           </i>
           <span class="translateButtonText">
            번역하기
           </span>
          </button>
         </li>
         <li>
          <div class="dropdown text-right">
           <button aria-expanded="true" aria-haspopup="true" class="btn btn-default dropdown-toggle operationButton menuButton" data-toggle="dropdown" id="dropdownMenu1" type="button">
            <i aria-hidden="true" class="fa fa-ellipsis-h">
            </i>
           </button>
           <ul aria-labelledby="dropdownMenu1" class="dropdown-menu dropdown-menu-right">
            <li>
             [link]
             
            </li>
           </ul>
          </div>
         </li>
        </ul>
       </div>
      </div>
      <div class="layout__materialHeaderPurchase">
       <ul class="price">
        <li class="price__free">
         무료
        </li>
       </ul>
       <div class="purchaseButton">
        <div class="purchaseButton__free" data-purchase-free="">
         <button class="btn btn-danger btn-block" data-can-not-download="이 소재는 다운로드할 수 없습니다" data-material-download-free="" data-placement="bottom" data-please-login="로그인해주세요" type="button">
          다운로드
         </button>
        </div>
        <div class="purchaseButton__purchased" data-purchase-process-complete="" style="display:none;">
         <button class="btn btn-block btn-danger" data-can-not-download="이 소재는 다운로드할 수 없습니다" data-material-download-purchased="" data-placement="bottom" data-please-login="로그인해주세요" type="button">
          재다운로드
         </button>
        </div>
        <form action="/ko-kr/detail/download-material" data-communication-error="통신 에러가 발생했습니다" data-material-download-form="" method="post" style="display:none;">
        </form>
       </div>
       <ul class="downloadNote">
        <li>
         [link]
         
        </li>
        <li>
         [link]
         
        </li>
       </ul>
      </div>
     </section>
    </div>
    <div class="hidden-xs layout_fixedMargin" data-material-header-margin="">
    </div>
    <section class="layout__headTags ">
     <ul class="headTags">
      <li class="headTags__item headTags__item--type">
       <a href="/ko-kr/search?type=catalog">
        소재집
       </a>
      </li>
      <li class="headTags__item headTags__item--software">
       [ahref]
       
      </li>
      <li class="headTags__item headTags__item--software">
       [ahref]
       
      </li>
     </ul>
    </section>
    <div class="container-fluid">
     <section class="layout__authorTop">
      <div class="authorTop text-center">
       by
       [ahref]
       
      </div>
     </section>
     <div class="layout__container">
      <div class="layout__materialContent">
       <section>
        <div class="microsoft_logo" data-microsoft-logo="" style="display: none;">
         <a href="/MicrosoftTranslatorAttribution" target="_blank">
          Translated by
         </a>
        </div>
        <div class="materialLead">
         <p data-translation-target="">
          <li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>[search][ahref][link]<li>[link]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][ahref][search]
         </p>
        </div>
        <div class="materialDescription">
         <div class="text-center" data-material-description-loading="">
          <i class="fa fa-spinner fa-spin materialDescriptionLoading">
          </i>
         </div>
         <iframe class="auto-height" data-material-description="" frameborder="0" src="/ko-kr/description/1727826/" style="width:100%;">
         </iframe>
        </div>
       </section>
       <section>
        <p class="sectionTitle" data-translation-target="">
         카테고리 1
                                    <li>[link]</li><li>[ahref]</li>[search]<li>[link]</li><li>[search]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]
        </p>
        <ul class="materialContentItem">
         <li class="materialContentItem__item">
          [link]
          
         </li>
         <li class="materialContentItem__item">
          [link]
          
         </li>
        </ul>
       </section>
       <section>
        <ul class="tags">
        </ul>
        <div class="materialStatus">
         <p>
          콘텐츠 ID：1727826
         </p>
         <p>
          <li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[ahref][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
         </p>
         <p>
          갱신일 :
          <span class="dateDiff">
           <li>[search]</li>[search][ahref]<li>[ahref]</li><li>[search]</li><li>[link]</li><li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref][link][link][search][ahref]<li>[link]</li>[ahref]<li>[link]</li><li>[search]</li>[ahref]<li>[link]</li>[search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][search][search][link]<li>[link]</li>
          </span>
         </p>
        </div>
       </section>
      </div>
      <div class="layout__shareButton">
       <div class=" shareButton__short ">
        <span class="shareButton__text">
         공유하기
                            [ahref]<li>[search]</li>[link]<li>[ahref]</li><li>[link]</li><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><li>[search]</li>[ahref][link]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref][link]<li>[ahref]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]
        </span>
        <ul class="shareButton__icons" data-gift-icons="">
         <li class="shareButton__icon">
          [ahref]
          
         </li>
         <li class="shareButton__icon">
          [link]
          
         </li>
         <li class="shareButton__icon">
          [link]
          
         </li>
        </ul>
       </div>
      </div>
      <div class="author">
       [ahref]
       
       <div class="author__title">
        <span class="author__profileImage">
         [ahref][ahref][search]<li>[ahref]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][ahref]<li>[ahref]</li>[link]
        </span>
        RyuOB 님의 프로필
        <span class="author__moreDetail">
         [ahref]
         
        </span>
       </div>
       <div class="author_profileContent">
        <p class="author__comment" data-translation-target="">
         [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[link]</li>[link]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li><li>[link]</li>
        </p>
        <div class="author__buttons">
         <button class="btn btn-default operationButton author__sendMessageButton" data-target="[data-modal-direct-message]" data-toggle="modal" type="button">
          <i aria-hidden="true" class="fa fa-envelope-o">
          </i>
          다이렉트 메시지
         </button>
         <a class="btn btn-default operationButton author__sendMessageButton" href="/ko-kr/search?user=RyuOB">
          <i aria-hidden="true" class="fa fa-search">
          </i>
          출품 중인 소재를 검색
         </a>
        </div>
       </div>
      </div>
      <div class="favoriteList">
       <button class="btn btn-default operationButton favoriteButton inactive" data-favorite-button="" data-favorite-count="4" data-message-cannot-like='이 소재는 "좋아요!"를 할 수 없습니다' data-message-failed-register='"좋아요!"에 실패했습니다' data-message-failed-unregister='"좋아요!"해제에 실패했습니다' data-message-not-login="로그인해주세요" data-message-own-post="자신의 게시물에는 '좋아요!'를 할 수 없습니다." type="button">
        <i aria-hidden="true" class="favoriteButton__icon fa fa-heart">
        </i>
        <span class="favoriteButton__text">
         좋아요!
        </span>
        <span class="favoriteButton__count" data-favorite-count-view="">
         4
                            [ahref][search][ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link][search][search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<li>[link]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[link]</li><li>[search]</li><li>[link]</li><li>[ahref]</li><li>[ahref]</li><li>[search]</li>
        </span>
       </button>
       <div class="favoriteList__users">
        <span class="favoriteList__user">
         [ahref]
         
        </span>
        <span class="favoriteList__user">
         [link]<li>[search]</li>[link][search][ahref]
        </span>
        <span class="favoriteList__user">
         <li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[search]</li>[link][link][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][search]<li>[search]</li>[search]<li>[link]</li>
        </span>
        <span class="favoriteList__user">
         [ahref]
         
        </span>
       </div>
       [ahref]
       
       <div class="clearfix">
       </div>
      </div>
     </div>
    </div>
    <div class="container-fluid">
     <div class="layout__recommend">
      <h4 class="text-center">
       "RyuOB"님의 다른소재
      </h4>
      <ul class="layput__cardPanel layout__cardPanel--horizontalMax5 layout__cardPanel--horizontalOneLine">
       <li class="materialCard" data-material-card="">
        <div class="materialCard__card">
         <div class="materialCard__thumbmailBlock" data-material-card-thumbnail="">
          [ahref]
          
          <span class="materialCard__catalogItem">
           <li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link][link]<li>[ahref]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
          </span>
         </div>
         <div class="materialCard__cardContent ">
          <div class="materialCard__materialType">
           [link]
           
          </div>
          [link]
          
          <div class="materialCard__cardAuthor ">
           [ahref]
           
          </div>
          <div class="materialCard__cardFooterInfo">
           <div class="materialCard__favoriteCount">
            <i aria-hidden="true" class="fa fa-download">
            </i>
            177
           </div>
           <ul class="materialCard__price">
            <li class="materialCard__priceFree">
             무료
            </li>
           </ul>
          </div>
          <div class="materialCard__cardFooterButton">
           [ahref]
           
          </div>
         </div>
        </div>
       </li>
       <li class="materialCard" data-material-card="">
        <div class="materialCard__card">
         <div class="materialCard__thumbmailBlock" data-material-card-thumbnail="">
          [ahref]
          
          <span class="materialCard__catalogItem">
          </span>
         </div>
         <div class="materialCard__cardContent ">
          <div class="materialCard__materialType">
           <a href="/ko-kr/search?type=brush">
            브러시
           </a>
          </div>
          [ahref]
          
          <div class="materialCard__cardAuthor ">
           [ahref]
           
          </div>
          <div class="materialCard__cardFooterInfo">
           <div class="materialCard__favoriteCount">
            <i aria-hidden="true" class="fa fa-download">
            </i>
            469
           </div>
           <ul class="materialCard__price">
            <li class="materialCard__priceFree">
             무료
            </li>
           </ul>
          </div>
          <div class="materialCard__cardFooterButton">
           <a data-material-card-star="" data-placement="bottom" data-trigger="focus" href=")">
            <span class="materialCard__starRegistered" data-material-card-star-unregister="1729911" style="display:none;">
             <i aria-hidden="true" class="fa fa-star">
             </i>
            </span>
            <span class="" data-material-card-star-register="1729911">
             [search]<li>[link]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]
            </span>
           </a>
          </div>
         </div>
        </div>
       </li>
       <li class="materialCard" data-material-card="">
        <div class="materialCard__card">
         <div class="materialCard__thumbmailBlock" data-material-card-thumbnail="">
          [ahref]
          
          <span class="materialCard__catalogItem">
          </span>
         </div>
         <div class="materialCard__cardContent ">
          <div class="materialCard__materialType">
           <a href="/ko-kr/search?type=brush">
            브러시
           </a>
          </div>
          [ahref]
          
          <div class="materialCard__cardAuthor ">
           [link]
           
          </div>
          <div class="materialCard__cardFooterInfo">
           <div class="materialCard__favoriteCount">
            <i aria-hidden="true" class="fa fa-download">
            </i>
            237
           </div>
           <ul class="materialCard__price">
            <li class="materialCard__priceFree">
             무료
            </li>
           </ul>
          </div>
          <div class="materialCard__cardFooterButton">
           [link]
           
          </div>
         </div>
        </div>
       </li>
       <li class="materialCard" data-material-card="">
        <div class="materialCard__card">
         <div class="materialCard__thumbmailBlock" data-material-card-thumbnail="">
          [link]
          
          <span class="materialCard__catalogItem">
          </span>
         </div>
         <div class="materialCard__cardContent ">
          <div class="materialCard__materialType">
           [ahref]
           
          </div>
          <a class="materialCard__cardContentBlock" data-material-card-title="" href="/ko-kr/detail?id=1729489">
           <h6 title="Rr_pen">
            Rr_pen
           </h6>
          </a>
          <div class="materialCard__cardAuthor ">
           [ahref]
           
          </div>
          <div class="materialCard__cardFooterInfo">
           <div class="materialCard__favoriteCount">
            <i aria-hidden="true" class="fa fa-download">
            </i>
            347
           </div>
           <ul class="materialCard__price">
            <li class="materialCard__priceFree">
             무료
            </li>
           </ul>
          </div>
          <div class="materialCard__cardFooterButton">
           [ahref]
           
          </div>
         </div>
        </div>
       </li>
       <li class="materialCard" data-material-card="">
        <div class="materialCard__card">
         <div class="materialCard__thumbmailBlock" data-material-card-thumbnail="">
          [link]
          
          <span class="materialCard__catalogItem">
           <p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li><li>[link]</li><li>[ahref]</li>
          </span>
         </div>
         <div class="materialCard__cardContent ">
          <div class="materialCard__materialType">
           [link]
           
          </div>
          <a class="materialCard__cardContentBlock" data-material-card-title="" href="/ko-kr/detail?id=1729095">
           <h6 title="먹칠펜">
            먹칠펜
           </h6>
          </a>
          <div class="materialCard__cardAuthor ">
           <a href="/ko-kr/search?user=RyuOB">
            <div>
            </div>
            <p>
             RyuOB<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>[ahref]<li>[link]</li>[link]<li>[search]</li>[link]
            </p>
           </a>
          </div>
          <div class="materialCard__cardFooterInfo">
           <div class="materialCard__favoriteCount">
            <i aria-hidden="true" class="fa fa-download">
            </i>
            596
           </div>
           <ul class="materialCard__price">
            <li class="materialCard__priceFree">
             무료
            </li>
           </ul>
          </div>
          <div class="materialCard__cardFooterButton">
           [ahref]
           
          </div>
         </div>
        </div>
       </li>
      </ul>
      <div class="clearfix">
      </div>
      <div class="materialFooter materialFooter--max5 text-right">
       <small>
        [ahref]
        
       </small>
      </div>
      <h4 class="text-center">
       "소재집"의 인기 소재
      </h4>
      <ul class="layput__cardPanel layout__cardPanel--horizontalMax5 layout__cardPanel--horizontalOneLine">
       <li class="materialCard" data-material-card="">
        <div class="materialCard__card">
         <div class="materialCard__thumbmailBlock" data-material-card-thumbnail="">
          [link]
          
          <span class="materialCard__catalogItem">
           <li>[search]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li><li>[ahref]</li><li>[ahref]</li>
          </span>
         </div>
         <div class="materialCard__cardContent ">
          <div class="materialCard__materialType">
           <a href="/ko-kr/search?type=catalog">
            소재집
           </a>
          </div>
          [link]
          
          <div class="materialCard__cardAuthor ">
           [ahref]
           
          </div>
          <div class="materialCard__cardFooterInfo">
           <div class="materialCard__favoriteCount">
            <i aria-hidden="true" class="fa fa-download">
            </i>
            26,437
           </div>
           <ul class="materialCard__price">
            <li class="materialCard__priceFree">
             무료
            </li>
           </ul>
          </div>
          <div class="materialCard__cardFooterButton">
           [ahref]
           
          </div>
         </div>
        </div>
       </li>
       <li class="materialCard" data-material-card="">
        <div class="materialCard__card">
         <div class="materialCard__thumbmailBlock" data-material-card-thumbnail="">
          <a class="materialCard__cardContentBlock" data-material-card-title="" href="/ko-kr/detail?id=1695306">
          </a>
          <span class="materialCard__catalogItem">
           <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[ahref]<li>[ahref]</li>[search]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[search]</li><li>[ahref]</li><li>[ahref]</li>[search]<li>[ahref]</li><li>[link]</li><li>[link]</li>
          </span>
         </div>
         <div class="materialCard__cardContent ">
          <div class="materialCard__materialType">
           [link]
           
          </div>
          [link]
          
          <div class="materialCard__cardAuthor ">
           [link]
           
          </div>
          <div class="materialCard__cardFooterInfo">
           <div class="materialCard__favoriteCount">
            <i aria-hidden="true" class="fa fa-download">
            </i>
            38,809
           </div>
           <ul class="materialCard__price">
            <li class="materialCard__priceFree">
             무료
            </li>
           </ul>
          </div>
          <div class="materialCard__cardFooterButton">
           [link]
           
          </div>
         </div>
        </div>
       </li>
       <li class="materialCard" data-material-card="">
        <div class="materialCard__card">
         <div class="materialCard__thumbmailBlock" data-material-card-thumbnail="">
          [ahref]
          
          <span class="materialCard__catalogItem">
          </span>
         </div>
         <div class="materialCard__cardContent ">
          <div class="materialCard__materialType">
           [link]
           
          </div>
          [ahref]
          
          <div class="materialCard__cardAuthor ">
           [ahref]
           
          </div>
          <div class="materialCard__cardFooterInfo">
           <div class="materialCard__favoriteCount">
            <i aria-hidden="true" class="fa fa-download">
            </i>
            29,037
           </div>
           <ul class="materialCard__price">
            <li class="materialCard__priceFree">
             무료
            </li>
           </ul>
          </div>
          <div class="materialCard__cardFooterButton">
           [ahref]
           
          </div>
         </div>
        </div>
       </li>
       <li class="materialCard" data-material-card="">
        <div class="materialCard__card">
         <div class="materialCard__thumbmailBlock" data-material-card-thumbnail="">
          [link]
          
          <span class="materialCard__catalogItem">
          </span>
         </div>
         <div class="materialCard__cardContent ">
          <div class="materialCard__materialType">
           [ahref]
           
          </div>
          <a class="materialCard__cardContentBlock" data-material-card-title="" href="/ko-kr/detail?id=1723992">
           <h6 title="雲を描くブラシセット">
            雲を描くブラシセット
           </h6>
          </a>
          <div class="materialCard__cardAuthor ">
           [ahref]
           
          </div>
          <div class="materialCard__cardFooterInfo">
           <div class="materialCard__favoriteCount">
            <i aria-hidden="true" class="fa fa-download">
            </i>
            32,511
           </div>
           <ul class="materialCard__price">
            <li class="materialCard__priceFree">
             무료
            </li>
           </ul>
          </div>
          <div class="materialCard__cardFooterButton">
           [ahref]
           
          </div>
         </div>
        </div>
       </li>
       <li class="materialCard" data-material-card="">
        <div class="materialCard__card">
         <div class="materialCard__thumbmailBlock" data-material-card-thumbnail="">
          [ahref]
          
          <span class="materialCard__catalogItem">
           <li>[link]</li><li>[search]</li><li>[search]</li><li>[link]</li>[search][link]
          </span>
         </div>
         <div class="materialCard__cardContent ">
          <div class="materialCard__materialType">
           [ahref]
           
          </div>
          [ahref]
          
          <div class="materialCard__cardAuthor ">
           [ahref]
           
          </div>
          <div class="materialCard__cardFooterInfo">
           <div class="materialCard__favoriteCount">
            <i aria-hidden="true" class="fa fa-download">
            </i>
            24,996
           </div>
           <ul class="materialCard__price">
            <li class="materialCard__priceFree">
             무료
            </li>
           </ul>
          </div>
          <div class="materialCard__cardFooterButton">
           [ahref]
           
          </div>
         </div>
        </div>
       </li>
      </ul>
      <div class="clearfix">
      </div>
      <div class="materialFooter materialFooter--max5 text-right">
       <small>
        <a href="/ko-kr/search?type=catalog&amp;order=dl">
         더 보기
         <i aria-hidden="true" class="fa fa-chevron-right">
         </i>
        </a>
       </small>
      </div>
      <h4 class="text-center">
       신규 소재
      </h4>
      <ul class="layput__cardPanel layout__cardPanel--horizontalMax5 layout__cardPanel--horizontalOneLine">
       <li class="materialCard" data-material-card="">
        <div class="materialCard__card">
         <div class="materialCard__thumbmailBlock" data-material-card-thumbnail="">
          [ahref]
          
          <span class="materialCard__catalogItem">
          </span>
         </div>
         <div class="materialCard__cardContent ">
          <div class="materialCard__materialType">
           [ahref]
           
          </div>
          [link]
          
          <div class="materialCard__cardAuthor ">
           [link]
           
          </div>
          <div class="materialCard__cardFooterInfo">
           <div class="materialCard__favoriteCount">
            <i aria-hidden="true" class="fa fa-download">
            </i>
            4
           </div>
           <ul class="materialCard__price">
            <li class="materialCard__priceFree">
             무료
            </li>
           </ul>
          </div>
          <div class="materialCard__cardFooterButton">
           [ahref]
           
          </div>
         </div>
        </div>
       </li>
       <li class="materialCard" data-material-card="">
        <div class="materialCard__card">
         <div class="materialCard__thumbmailBlock" data-material-card-thumbnail="">
          [link]
          
          <span class="materialCard__catalogItem">
          </span>
         </div>
         <div class="materialCard__cardContent ">
          <div class="materialCard__materialType">
           [ahref]
           
          </div>
          <a class="materialCard__cardContentBlock" data-material-card-title="" href="/ko-kr/detail?id=1730414">
           <h6 title="6pencil-soft">
            6pencil-soft
           </h6>
          </a>
          <div class="materialCard__cardAuthor ">
           [link]
           
          </div>
          <div class="materialCard__cardFooterInfo">
           <div class="materialCard__favoriteCount">
            <i aria-hidden="true" class="fa fa-download">
            </i>
            72
           </div>
           <ul class="materialCard__price">
            <li class="materialCard__priceFree">
             무료
            </li>
           </ul>
          </div>
          <div class="materialCard__cardFooterButton">
           [link]
           
          </div>
         </div>
        </div>
       </li>
       <li class="materialCard" data-material-card="">
        <div class="materialCard__card">
         <div class="materialCard__thumbmailBlock" data-material-card-thumbnail="">
          [link]
          
          <span class="materialCard__catalogItem">
          </span>
         </div>
         <div class="materialCard__cardContent ">
          <div class="materialCard__materialType">
           [link]
           
          </div>
          [ahref]
          
          <div class="materialCard__cardAuthor ">
           [link]
           
          </div>
          <div class="materialCard__cardFooterInfo">
           <div class="materialCard__favoriteCount">
            <i aria-hidden="true" class="fa fa-download">
            </i>
            27
           </div>
           <ul class="materialCard__price">
            <li class="materialCard__priceFree">
             무료
            </li>
           </ul>
          </div>
          <div class="materialCard__cardFooterButton">
           [ahref]
           
          </div>
         </div>
        </div>
       </li>
       <li class="materialCard" data-material-card="">
        <div class="materialCard__card">
         <div class="materialCard__thumbmailBlock" data-material-card-thumbnail="">
          [link]
          
          <span class="materialCard__catalogItem">
          </span>
         </div>
         <div class="materialCard__cardContent ">
          <div class="materialCard__materialType">
           [ahref]
           
          </div>
          [ahref]
          
          <div class="materialCard__cardAuthor ">
           [link]
           
          </div>
          <div class="materialCard__cardFooterInfo">
           <div class="materialCard__favoriteCount">
            <i aria-hidden="true" class="fa fa-download">
            </i>
            312
           </div>
           <ul class="materialCard__price">
            <li class="materialCard__priceFree">
             무료
            </li>
           </ul>
          </div>
          <div class="materialCard__cardFooterButton">
           [ahref]
           
          </div>
         </div>
        </div>
       </li>
       <li class="materialCard" data-material-card="">
        <div class="materialCard__card">
         <div class="materialCard__thumbmailBlock" data-material-card-thumbnail="">
          [ahref]
          
          <span class="materialCard__catalogItem">
          </span>
         </div>
         <div class="materialCard__cardContent ">
          <div class="materialCard__materialType">
           [ahref]
           
          </div>
          [ahref]
          
          <div class="materialCard__cardAuthor ">
           <a href="/ko-kr/search?user=KiiKo">
            <div>
            </div>
            <p>
             KiiKo
            </p>
           </a>
          </div>
          <div class="materialCard__cardFooterInfo">
           <div class="materialCard__favoriteCount">
            <i aria-hidden="true" class="fa fa-download">
            </i>
            713
           </div>
           <ul class="materialCard__price">
            <li class="materialCard__priceFree">
             무료
            </li>
           </ul>
          </div>
          <div class="materialCard__cardFooterButton">
           [link]
           
          </div>
         </div>
        </div>
       </li>
      </ul>
      <div class="clearfix">
      </div>
      <div class="materialFooter materialFooter--max5 text-right">
       <small>
        [ahref]
        
       </small>
      </div>
     </div>
    </div>
    <div class="modal fade text-left reportModal" data-modal-report="" role="dialog" tabindex="-1">
     <div class="modal-dialog" role="document">
      <div class="modal-content">
       <div class="modal-header">
        <button aria-label="Close" class="close" data-dismiss="modal" type="button">
         <span aria-hidden="true">
          ×<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[ahref]</li><li>[search]</li><li>[ahref]</li><li>[link]</li><li>[link]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[link]
         </span>
        </button>
        <h4 class="modal-title">
         문제가 있는 소재입니다
        </h4>
       </div>
       <form class="reportModal__form" data-report-modal-form="">
        <div class="modal-body reportModal__body">
         문제의 보고에는 로그인이 필요합니다.
         <br/>
         로그인한 다음 다시 화면을 표시하고 이용해주세요.
        </div>
        <div class="modal-footer">
        </div>
       </form>
      </div>
     </div>
    </div>
    <div class="modal fade text-left directMessageModal" data-modal-direct-message="" role="dialog" tabindex="-1">
     <div class="modal-dialog" role="document">
      <div class="modal-content">
       <div class="modal-header">
        <button aria-label="Close" class="close" data-dismiss="modal" type="button">
         <span aria-hidden="true">
          ×[search]<li>[search]</li>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link]
         </span>
        </button>
        <h4 class="modal-title">
         다이렉트 메시지
        </h4>
       </div>
       <form class="directMessageModal__form" data-direct-message-modal-form="">
        <div class="modal-body directMessageModal__body">
         다이렉트 메시지를 송신하려면 로그인이 필요합니다.
         <br>
          <li>[search]</li>[ahref][ahref]<li>[link]</li><li>[search]</li>[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li>
         </br>
         로그인한 뒤 다시 화면을 표시하고 이용해주세요.
        </div>
        <div class="modal-footer">
        </div>
       </form>
      </div>
     </div>
    </div>
    <div class="modal fade text-left" data-modal-purchase-free-complete="" role="dialog" tabindex="-1">
     <div class="modal-dialog" role="document">
      <div class="modal-content">
       <div class="modal-header">
        <button aria-label="Close" class="close" data-dismiss="modal" type="button">
         <span aria-hidden="true">
          ×[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref]<li>[search]</li>
         </span>
        </button>
        <h4 class="modal-title">
         구입/취득하기
        </h4>
       </div>
       <div class="modal-body">
        <div class="purchaseModal__complete">
         <div class="purchaseModal__completeTitle">
          취득이 완료되었습니다.
         </div>
         <div class="purchaseModal__completeDescription">
          * CLIP STUDIO가 설치된 환경에서는 자동으로 다운로드를 시작합니다.
          <br>
           [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[search]</li><li>[ahref]</li><li>[link]</li>[ahref]
          </br>
          * 취득한 소재는 "
          [ahref]
          
          "에서 언제든지 재다운로드 가능합니다.
         </div>
         <div class="howToUse">
          <div class="howToUse__title">
           <span class="howToUse__title--icon">
            [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li><li>[search]</li>[link][search]<li>[search]</li>
           </span>
           <span class="howToUse__title--text">
            다운로드한 소재의 사용법은 여기를 참조하십시오.
           </span>
          </div>
          <ul class="howToUse__list">
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="/ko-kr/search?user=ClipStudioFAQ&amp;tag=素材" target="_blank">
             기타, 소재 FAQ
            </a>
           </li>
          </ul>
          <div class="howToUse__foot">
           ASSETS의 자세한 사용법은
           [ahref]
           
           (을)를 참조하십시오.
          </div>
         </div>
        </div>
        <div class="modal-footer">
         <a href="/ko-kr/information/terms">
          ASSETS규약
         </a>
        </div>
       </div>
      </div>
     </div>
    </div>
    <div class="modal fade" data-animation-thumbnail-modal="" role="dialog" tabindex="-1">
     <div class="modal-dialog" role="document">
      <div class="modal-content">
       <div class="modal-header">
        <button class="close" data-dismiss="modal" type="button">
         <span>
          ×
         </span>
        </button>
       </div>
       <div class="modal-body">
       </div>
      </div>
     </div>
    </div>
    <div class="modal fade" data-faces-modal="" role="dialog" tabindex="-1">
     <div class="modal-dialog" role="document">
      <div class="modal-content">
       <div class="modal-header">
        <button class="close" data-dismiss="modal" type="button">
         <span>
          ×
         </span>
        </button>
       </div>
       <div class="modal-body">
       </div>
      </div>
     </div>
    </div>
    <div class="layout__fixedBanner">
     <div class="fixedBanner" data-fixedbanner="">
      <div class="fixedBanner__closedView" data-fixedbanner-open="" data-fixedbanner-view-closed="" style="display:none;">
       <div class="fixedBanner__head">
        <div class="fixedBanner__title">
         <span class="fixedBanner__title--mark">
          <p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[ahref]</li>
         </span>
         CLIP STUDIO PAINT가 무료
        </div>
       </div>
      </div>
      <div class="fixedbanner__openedView" data-fixedbanner-view-opened="" style="display:none;">
       <div class="fixedBanner__head">
        <div class="fixedBanner__title pull-left">
         CLIP STUDIO PAINT가 무료
        </div>
        <div class="fixedBanner__close pull-right" data-fixedbanner-close="">
         <i aria-hidden="true" class="fa fa-times">
         </i>
        </div>
        <div class="clearfix">
        </div>
       </div>
       <div class="fixedBanner__content">
        [link]
        
       </div>
      </div>
     </div>
    </div>
    <div class="modal fade favoriteModal" data-favorite-modal="">
     <div class="modal-dialog" role="document">
      <div class="modal-content">
       <div class="modal-header">
        최신 100
        <i class="fa fa-heart">
        </i>
        좋아요!
        <button class="close" data-dismiss="modal" type="button">
         <span>
          ×<li>[link]</li>[search]<li>[link]</li><li>[search]</li>[link]<li>[ahref]</li><li>[link]</li>[ahref]<li>[ahref]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[search][search]
         </span>
        </button>
       </div>
       <div class="modal-body">
        <div class="favoriteList">
         <i class="fa fa-spinner fa-spin" data-favorite-load-icon="">
         </i>
         <table class="favoriteTable" data-favorite-table="">
         </table>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
   <div class="modal fade attributeDescriptionModal" data-attribute-icon-description-modal="" role="dialog" tabindex="-1">
    <div class="modal-dialog" role="document">
     <div class="modal-content">
      <div class="modal-header">
       배지
       <button aria-label="Close" class="close" data-dismiss="modal" type="button">
        <span aria-hidden="true">
         ×
        </span>
       </button>
      </div>
      <div class="modal-body">
       <ul class="attributeDescriptionModal__items">
        <li class="attributeDescriptionModal__item">
         <div class="attributeDescriptionModal__column attributeDescriptionModal__column--profile">
          <div class="attributeDescriptionModal__icon">
          </div>
         </div>
         <div class="attributeDescriptionModal__column attributeDescriptionModal__column--description">
          <div class="attributeDescriptionModal__title">
           MVP
           <span class="attributeDescriptionModal__userAttributeIcon attributeDescriptionModal__userAttributeIcon--mvp">
            ◆
           </span>
          </div>
          <div class="attributeDescriptionModal__description">
           질문에 적절한 답변을 많이 게시하고 커뮤니티 운영에 크게 공헌한 사용자입니다. MVP는 3 개월에 한 번, 그 사이에 획득 한 포인트를 바탕으로 결정하고 표창을 실시하고 있습니다.
          </div>
         </div>
        </li>
        <li class="attributeDescriptionModal__item">
         <div class="attributeDescriptionModal__column attributeDescriptionModal__column--profile">
          <div class="attributeDescriptionModal__icon">
          </div>
         </div>
         <div class="attributeDescriptionModal__column attributeDescriptionModal__column--description">
          <div class="attributeDescriptionModal__title">
           NVP(New Valuable Player)
           <span class="attributeDescriptionModal__userAttributeIcon attributeDescriptionModal__userAttributeIcon--nvp">
            ◆
                                <li>[ahref]</li>[ahref]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[search]</li><li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref]<li>[link]</li>
           </span>
          </div>
          <div class="attributeDescriptionModal__description">
           MVP 다음으로 커뮤니티 운영에 공헌한 사용자입니다. 이제까지 MVP 수상 경험이 없는 분 중에서 획득한 포인트를 바탕으로 결정하고 표창을 실시하고 있습니다.
          </div>
         </div>
        </li>
        <li class="attributeDescriptionModal__item">
         <div class="attributeDescriptionModal__column attributeDescriptionModal__column--profile">
          <div class="attributeDescriptionModal__icon">
          </div>
         </div>
         <div class="attributeDescriptionModal__column attributeDescriptionModal__column--description">
          <div class="attributeDescriptionModal__title">
           이밴저리스트
           <span class="attributeDescriptionModal__userAttributeIcon attributeDescriptionModal__userAttributeIcon--evangelist">
            ◆
           </span>
          </div>
          <div class="attributeDescriptionModal__description">
           뛰어난 응답자의 증표인 MVP수상자 중에서 선택된 커뮤니티에서 가장 뛰어난 응답자의 증표입니다. 심사를 거쳐서 저희 회사에서 의뢰할 경우 취임되십니다.
          </div>
         </div>
        </li>
        <li class="attributeDescriptionModal__item">
         <div class="attributeDescriptionModal__column attributeDescriptionModal__column--profile">
          <div class="attributeDescriptionModal__icon">
          </div>
         </div>
         <div class="attributeDescriptionModal__column attributeDescriptionModal__column--description">
          <div class="attributeDescriptionModal__title">
           셀시스 공인 모더레이터
           <span class="attributeDescriptionModal__userAttributeIcon attributeDescriptionModal__userAttributeIcon--moderator">
            ◆
                                [ahref]<li>[search]</li><li>[link]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][ahref]<li>[link]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>
           </span>
          </div>
          <div class="attributeDescriptionModal__description">
           모더레이터는 일본어와 기타 언어를 말할 수 있는 셀시스 공인의 스탭입니다. 소프트웨어나 창작의 전문가가 아니기 때문에 직접 의문을 해결할 수는 없지만 여러분이 순조롭게 소통할 수 있도록 언어나 커뮤니케이션 측면에서 지원합니다.
          </div>
         </div>
        </li>
        <li class="attributeDescriptionModal__item">
         <div class="attributeDescriptionModal__column attributeDescriptionModal__column--profile">
          <div class="attributeDescriptionModal__icon">
          </div>
         </div>
         <div class="attributeDescriptionModal__column attributeDescriptionModal__column--description">
          <div class="attributeDescriptionModal__title">
           셀시스 공식
          </div>
          <div class="attributeDescriptionModal__description">
           운영과 관련한 공식 계정입니다.
          </div>
         </div>
        </li>
       </ul>
      </div>
     </div>
    </div>
   </div>
  </article>
  <footer class="share">
   <div class="container">
    <div class="row">
     <div class="shareButton">
      <span class="shareButton__text">
       공유하기
      </span>
      <ul class="shareButton__icons" data-gift-icons="">
       <li class="shareButton__icon">
        [ahref]
        
       </li>
       <li class="shareButton__icon">
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
   </div>
  </footer>
  <footer id="footer">
   <div class="container">
    <div class="row">
     <div class="col-sm-8">
      <div class="center-block footer-col-left">
       <h4>
        관련 서비스
       </h4>
       <ul class="footer__linkList">
        <li class="footer__linkItem">
         <a href="/ko-kr" target="_blank">
          CLIP STUDIO PROFILE
         </a>
        </li>
        <li class="footer__linkItem">
         [ahref]
         
        </li>
        <li class="footer__linkItem">
         [ahref]
         
        </li>
        <li class="footer__linkItem">
         [ahref]
         
        </li>
        <li class="footer__linkItem">
         [ahref]
         
        </li>
        <li class="footer__linkItem">
         <a href="/kr" target="_blank">
          CLIP STUDIO.net
         </a>
        </li>
        <li class="footer__linkItem">
         [link]
         
        </li>
       </ul>
      </div>
     </div>
     <div class="col-sm-8">
      <div class="center-block footer-col-center">
       <h4>
        공식 SNS
       </h4>
       <ul class="footer__linkList">
        <li class="footer__linkSns">
         <a href="/clipstudiopaint" target="_blank">
         </a>
        </li>
        <li class="footer__linkSns">
         [link]
         
        </li>
        <li class="footer__linkSns">
         [link]
         
        </li>
        <li class="footer__linkSns">
         <h2>
          [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
         </h2>
         [search]
         
        </li>
       </ul>
       <div style="clear: both">
       </div>
       <h4>
        언어
       </h4>
       <div class="dropup header__selectSite localeExchange">
        <div aria-expanded="false" class="localeExchange__button dropdown-toggle" data-toggle="dropdown">
         <i aria-hidden="true" class="fa fa-globe localeExchange__icon">
         </i>
         <span>
          한국어[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]
         </span>
        </div>
        <ul class="dropdown-menu header__sites localeExchange__menu" role="menu">
         <li class="localeExchange__menuItem">
          <a data-locale-exchange="de-de" href="#">
           <span>
            Deutsch<li>[link]</li><li>[search]</li>[ahref]<li>[ahref]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]
           </span>
          </a>
         </li>
         <li class="localeExchange__menuItem">
          [ahref]
          
         </li>
         <li class="localeExchange__menuItem">
          <a data-locale-exchange="es-es" href="#">
           Español
          </a>
         </li>
         <li class="localeExchange__menuItem">
          [ahref]
          
         </li>
         <li class="localeExchange__menuItem">
          [ahref]
          
         </li>
         <li class="localeExchange__menuItem">
          [ahref]
          
         </li>
         <li class="localeExchange__menuItem">
          [ahref]
          
         </li>
        </ul>
       </div>
      </div>
     </div>
     <div class="col-sm-8">
      <div class="center-block footer-col-right">
       <h4>
        서포트
       </h4>
       <ul class="footer__linkList">
        <li class="footer__linkItem">
         [link]
         
        </li>
        <li class="footer__linkItem">
         <h3>
          [area4][keyword4][symbolx][area4][keywordx][symbolx][bracketl8][bracketr8][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
         [ahref]
         
         <br>
          [ahref][search][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][ahref]
         </br>
         [link]
         
        </li>
        <li class="footer__linkItem">
         [ahref]
         
        </li>
        <li class="footer__linkItem">
         <a href="/en/information/legal/" target="_blank">
          저작권과 상표에 대해서
         </a>
        </li>
        <li class="footer__linkItem">
         [ahref]
         
        </li>
       </ul>
       <h4>
        셀시스에 대해서
       </h4>
       <ul class="footer__linkList">
        <li class="footer__linkItem">
         [link]
         
        </li>
        <li class="footer__linkItem">
         [link]
         
        </li>
        <li class="footer__linkItem">
         <a href="/" target="_blank">
          전자책 솔루션
         </a>
        </li>
        <li class="footer__linkItem">
         [ahref]
         
        </li>
       </ul>
      </div>
     </div>
    </div>
   </div>
   <div class="footer__copyright">
    <span>
     © 2018 CELSYS,Inc.
    </span>
    <span>
     <li>[search]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li><li>[search]</li>[search]
    </span>
   </div>
  </footer>
  <div class="scrollToTop">
   [link]
   
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0061
  </b>
 </body>
</html>