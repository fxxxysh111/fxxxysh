--->|Qm90aCBvcmdhbml6YXRpb25zIHN0cm9uZ2x5IGZlZWwgdGhlcmUgaXMgdW50YXBwZWQgcG90ZW50aWFsIGZvciBVQVZzIGluIGNpdmlsaWFuIGFuZCBjb21tZXJjaWFsIGFwcGxpY2F0aW9ucy4gClBhciBleGVtcGxlLCBsZSBjaXRyb25uaWVyIGRlIGxhIGZhbWlsbGUgZGVzIFJ1dGFjZXMgZXQgbGUgcGluIHN5bHZlc3RyZSBkZSBjZWxsZSBkZXMgUGluYWNlcywgYmllbiBxdWUgbmUgcHJzZW50YW50IGF1Y3VuZSBjYXJhY3RyaXN0aXF1ZSBib3RhbmlxdWUgY29tbXVuZSwgcHJvZHVpc2VudCB0b3VzIGRldXggdW5lIGh1aWxlIGVzc2VudGllbGxlIGNvbnRlbmFudCBkZXMgbW9ub3RlcnBuZXMuIE9uIHBldXQgbW1lIHRyb3V2ZXIgbGEgbW1lIG1vbGN1bGUgY2hleiBsIGV0IGwgZGUgY2VzIGh1aWxlcyBlc3NlbnRpZWxsZXMuIApQdWxzZXMsIGVzcGVjaWFsbHkgYnJvYWQgYmVhbnMgYW5kIGxlbnRpbHMuIE11c2h5IHBlYXMgLiAKVGhlbiBLYWxsaXMgYmxvY2tlZCB0d28gZGVsaXZlcmllcyBmcm9tIFJhdmluZHJhIEphZGVqYSBhbmQgd29ya2VkIG9uZSB0byBmaW5lIGxlZywgYW5kIHRoZW4gdG8gc3F1YXJlIHRvIG1vdmUgdG8gOTQuIApUaGF0IGhlIHNob3VsZG4gbWFrZSB5b3VyIHBsZWFzdXJlL29yZ2FzbSBhYm91dCBoaW0uLiAKRmFyIGZyb20gaXQuIFdlIHdhbnQgdmFjY2luZXMsIGJ1dCB3ZSBhbHNvIHdhbnQgdmFjY2luZXMgdG8gYmUgZGlzdHJpYnV0ZWQgcHJvcGVybHkuIApJIGZvdW5kIG91dCBJIHdhcyBhZG9wdGVkIGF0IDQgYnV0IDE3IGZvdW5kIG91dCBldmVyeW9uZSBoYWQgbGllZCBhYm91dCBrbm93aW5nIHdobyBteSBiaXJ0aCBtb20gd2FzIGFuZCBzaGUgaGFkIGJlZW4gYXQgbWFqb3IgbGlmZSBldmVudHMgd2l0aG91dCBtZSBrbm93aW5nLiAKRWFjaCB0cmFkZXIgcmVjZWl2ZWQgcmVhbCBtb25leSBhbmQgc3RvY2sgbGlrZSBmaW5hbmNpYWwgYXNzZXRzLCB3aGljaCBwYWlkIGRpdmlkZW5kcyB3aXRoIGtub3duIHByb2JhYmlsaXR5LiAKSW5zdGVhZCBpdCdzIGEgc29vdGhpbmcgcGxhdGZvcm1lciB3aG9zZSBicnVzaHN0cm9rZSBhcnQgc3R5bGUgYW5kIGdlbnRsZSBzdG9yeSBvZiBtYWdpY2FsIHNlZWRzIGF3YWtlbmluZyBzbHVtYmVyaW5nIHNlYXNvbmFsIHNwaXJpdHMgY29uanVyZXMgYSBib29rIGF0IGJlZHRpbWUgYW1iaWVuY2UuIApBbGwgMjAwIGxvZnQgbGlrZSBndWVzdCByb29tcyB3aWxsIGZlYXR1cmUgdGhlIGJyYW5kJ3Mgc2lnbmF0dXJlIGhpZ2ggY2VpbGluZ3MsIG92ZXJzaXplZCB3aW5kb3dzIGFuZCBhbiB1bHRyYSBjb21mb3J0YWJsZSBwbGF0Zm9ybSBiZWQgYXMgd2VsbCBhcyBsYXJnZSB3YWxrIGluIHNob3dlcnMgd2l0aCBjb21wbGltZW50YXJ5IEJsaXNzIFNwYSBwcm9kdWN0cy4gR3Vlc3RzIHdpbGwgYmUgYWJsZSB0byByZSBlbmVyZ2lzZSBpbiB0aGUgcmU6Y2hhcmdlU00gZml0bmVzcyBjZW50cmUgYW5kIGdyYWIgYSBiaXRlIHRvIGVhdCBhdCByZTpmdWVsIGJ5IEFsb2Z0U00sIGEgb25lIHN0b3AsIDI0IGhvdXIgZ3JhYiBhbmQgZ28gZm9vZCBhbmQgYmV2ZXJhZ2UgYXJlYSwgb2ZmZXJpbmcgc3dlZXQsIHNhdm91cnkgYW5kIGhlYWx0aHkgZm9vZCwgc25hY2tzIGFuZCBkcmlua3MuIEZvciB3b3JrIG1lZXRpbmdzLCB0cmFpbmluZyBjb3Vyc2VzIGFuZCBwcmVzZW50YXRpb25zLCB0aGUgaG90ZWwncyB0d28gYm9hcmQgcm9vbXMgd2lsbCBiZSBlcXVpcHBlZCB3aXRoIHRoZSBsYXRlc3QgZ2VuZXJhdGlvbiBvZiBhdWRpbyB2aXN1YWwgaGFyZHdhcmUuCldoYXQgT25UaGluZ3MgdG8gZG9Gb29kIGFuZCBEcmlua0ZhbWlseSBhbmQgS2lkc1RWIEd1aWRlRGlnaXRhbCBQcmludCBFZGl0aW9uV09ET05HQSBSU0wgQ2x1YiBoYXMgc3BlbnQgJDE1MCwwMDAgb24gYSBtYWpvciByZW5vdmF0aW9uIGl0cyBwcmVzaWRlbnQgcHJvdWRseSBzYXlzIHdpbGwgc3RvcCB0aGUgYnVpbGRpbmcgbG9va2luZyJsaWtlIGEgbG9zdCBuZWlnaGJvdXIiLiBUaGUgY2x1YiBoYXMgbm93IGVtYmFya2VkIG9uIGEgcHJvamVjdCB0byBsZXQgYXMgbWFueSBwZW9wbGUgaW4gdGhlIGNvbW11bml0eSBrbm93IGFib3V0IHdoYXQgaXQgaGFzIHRvIG9mZmVyLiBLZXZ5biBXaWxsaWFtcyBzYWlkIHRoZSBjbHViIHdhcyBleHRyZW1lbHkgcHJvdWQgb2Ygd2hhdCBpdCBoYWQgYWNoaWV2ZWQsIGdpdmVuIGl0IGNoaXBwZWQgaW4gYWJvdXQgJDcwLDAwMCB0byB0aGUgcHJvamVjdC4gCkFuZCBXYWxzaCwgVi4gCkd1YXJkcyBhbHNvIHN1c3BlY3RlZCBEZWwgQmFsc28gb2YgaGF2aW5nIG9yZ2FuaXplZCBwb2tlciBnYW1lcyBhbW9uZyBpbm1hdGVzLiBJbiBEZWNlbWJlciAyMDE3LCBoZSBsb3N0IGhpcyB0ZW1wZXIgd2l0aCBhIG51cnNlIHdoZW4gc2hlIGluZm9ybWVkIGhpbSB0aGF0IGEgZG9jdG9yIGhhZCByZWZ1c2VkIHRvIHJlbmV3IGEgcHJlc2NyaXB0aW9uIGZvciBoaW0uIEFuZCBpbiBKYW51YXJ5LCBndWFyZHMgbGVhcm5lZCBoZSB3YXMgcGF5aW5nIG90aGVyIGlubWF0ZXMgdG8gc3RlYWwgZm9vZCBmb3IgaGltIGZyb20gdGhlIGtpdGNoZW4gb2YgdGhlIHBlbml0ZW50aWFyeS4uIApUaGlzIGlzIG91ciBzZWNvbmQgcHJlZ25hbmN5IGFuZCB3ZSBhcmUgcGxhbm5pbmcgb24gaGF2aW5nIGEgY28gZWQgYmFieSBzaG93ZXIuIEEgZnJpZW5kIGdhdmUgbWUgYW4gaWRlYSBvZiB0aGUgZ3V5cyBwbGF5IHBva2VyIGFuZCBoYXZlIHRvIGJyaW5nIGEgYm94IG9mIGRpYXBlcnMgdG8gcGxheSwgYW5kIHRvIGJlIGhvbmVzdCwgYWxsIEkgd2FudCBpcyBkaWFwZXJzIGFuZCBUYXJnZXQgZ2lmdCBjYXJkcy4gCkNlbGEgdm91cyBwZXJtZXR0cmEgZGUgc2VudGlyIGxlIG1vbWVudCBvIHZvdXMgdGVzIHJhc3Nhc2kgKGUpIGV0IGRlIHZvdXMgYXJydGVyLiAKQnV0IHllYWgsIHNvIHdlIHdlcmUgdGFsa2luZyBhYm91dCBtZWRpY2luZSEgV2hpY2gsIG9mIGNvdXJzZSwgcmVtaW5kZWQgbWUgb2YgYSBmdW4gbGl0dGxlIGJpdCBhYm91dCBHYWxlbiwgb25lIG9mIHRoZSBtb3N0IGZhbW91cyBkb2N0b3JzIG9mIHRoZSBhbmNpZW50IFJvbWFuIHdvcmxkLiBHYWxlbiB3YXMgYSBmYXNjaW5hdGluZyBjaGFyYWN0ZXIsIGFuZCBoaXMgd3JpdGluZyBpcyBhYnNvbHV0ZWx5IGluY3JlZGlibGUgICBhbmQgSSBtZWFuIHRoYXQgaW4gZXZlcnkgd2F5IHRoYXQgaW5jcmVkaWJsZSBjYW4gYmUgdGFrZW4uIEl0IHJlcXVpcmVzIHF1aXRlIGEgc3Ryb25nIHN0b21hY2gsIHRob3VnaCwgYW5kIGl0IGdvZXMgdG8gc2hvdyB0aGUgcmVhZGVyIGV4YWN0bHkgaG93IGZhciBvdXIgZXRoaWNzIGhhdmUgY29tZSBpbiB0aGUgcGFzdCBjb3VwbGUgdGhvdXNhbmQgeWVhcnMuIERPIE5PVCBSRUFEIEJFTE9XIElGIFlPVSBXSUxMIEJFIEFGRkVDVEVEIEJZIEdSQVBISUMgU0hJVC4gV2VsbCwgb25lIHdheSB3YXMgdG8gZGlzcGxheSB5b3VyIGtub3dsZWRnZSBvZiBhbmF0b215IGJ5IGRvaW5nIHNvbWV0aGluZyBjYWxsZWQgInZpdmlzZWN0aW9uLiIgSWYgeW91IGhhdmVuIGhlYXJkIG9mIHRoYXQgd29yZCwgZXhjZWxsZW50LCBhbmQgcGxlYXNlIGRvbiBnb29nbGUgaXQuIEl0IHRoZSBwcm9jZXNzIG9mIGRpc3NlY3Rpb24gICB3aGlsZSBrZWVwaW5nIHRoZSBzdWJqZWN0IGFsaXZlLiBHYWxlbiBkaWQgdGhpcyB3aXRoIHBpZ3MsIGRlbW9uc3RyYXRpbmcgZXhhY3RseSB3aGF0IGhlIGNvdWxkIGN1dCBhbmQgc2V3IGJhY2sgdG9nZXRoZXIgc28gdGhhdCB0aGUgcGlnIHdvdWxkIGJlIGp1c3QgZmluZS4gSGUgZGlkIHRoaXMgd2l0aCBtb25rZXlzLCBwdWxsaW5nIG91dCBiaXRzIGFuZCBwaWVjZXMgdGhhdCBwZW9wbGUgc3dvcmUgd291bGQga2lsbCB0aGUgcG9vciBhbmltYWwgaW1tZWRpYXRlbHkuIEhlIGhhZCBhbiBleHBlcmltZW50IHdoZXJlIGhlIGhhZCBhIGNyb3dkIG9mIHBlb3BsZSBwcmVkaWN0IHdoZXJlIGNlcnRhaW4gb3JnYW5zIHdlcmUgaW4gbW9ua2V5cyAoaGUgbGlrZWQgbW9ua2V5cyBmb3IgdGhpcywgYXMgdGhleSB3ZXJlIHRoZSBjbG9zZXN0IGhlIGNvdWxkIGdldCB0byBodW1hbnMpLCBhbmQgdGhlbiBzaG93aW5nIHRoYXQgdGhleSB3ZXJlIHNsaWdodGx5IGVsc2V3aGVyZS4gSGUgZXZlbiBoYWQgb25lIHdoZXJlIGhlIHBsYXllZCB3aXRoIG5lcnZlIGNvbm5lY3Rpb25zLCBzaG93aW5nIHRoYXQsIHdoZW4gYSBjZXJ0YWluIG9uZSB3YXMgc2V2ZXJlZCwgY2VydGFpbiBtdXNjbGVzIHdvdWxkIG5vIGxvbmdlciB3b3JrLiBEaXNlbWJvd2VsbWVudHMgYW5kIHNraW5uaW5nIHdlcmUgcmVhc29uYWJseSBjb21tb24gICBhbmQgaGUgZXZlbiByZW1hcmtzIG9uIGhvdyBzaW1pbGFyIHRoZWlyIHNjcmVhbXMgYXJlIHRvIGh1bWFucywgYmVmb3JlIGRlbW9uc3RyYXRpbmcgaG93IGhlIGNhbiBzdGFydCBvciBzdG9wIHRoZW0gYnkgc25pcHBpbmcgb25lIGNlcnRhaW4gYml0LiBJIGRpZCBzYXkgdGhhdCB5b3UgbmVlZCBhIHN0cm9uZyBzdG9tYWNoICAgdGhlIFJvbWFucyB3ZXJlIGEgY3J1ZWwgcGVvcGxlLgpFdmVudCBvcmdhbml6ZXJzIGRvbid0IHRyYWNrIGFsbCB0aGUgY29udGVzdGFudHMnIG9jY3VwYXRpb25zLiAKVGhhdCBtb3JlIHRoYW4gc2FkLiBUaGF0IGEgZmlyYWJsZSBvZmZlbnNlLiBUaGF0IHdob2xlIHBpY3R1cmUgaXMgZXhhY3RseSBob3cgeW91IGRyYXcgdXAgYSBmcmFuY2hpc2UgaW4gYSBkZWF0aCBzcGlyYWwuCllvdXIgc2tpbiBpcyBwcm9iYWJseSByZWVsaW5nIGZyb20gdGhlIHNob2NrIG9mIGJlaW5nIGV4cG9zZWQgdG8gYWlyIHRoYXQgaXMgYm90aCBmcmVlemluZyBjb2xkIGFuZCBib25lIGRyeS4gTXkgYWR2aWNlIGlzIHRvIHN0YXJ0IHBhbXBlcmluZy4gClNhcmF0cm9vcGVyICAzIHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ28KVGhhdCBub3QgYW4gZXhwZWN0YXRpb24gdGhhdCBhbnlvbmUgY2FuIGhhdmUgaW4gbGlmZSwgaXQganVzdCB3cm9uZ0RvZXNudCBtYWtlIHNlbnNlLCB0aGVyZSBpcyBubyBuZWVkIGJlY2F1c2Ugb2YgdGhlIHdheSB0aGUgZGV2aWNlcyB5b3UgdXNlIGFuZCB0aGUgd2F5IHRoZSBpbnRlcm5ldCB3b3Jrcy4gSWYgeW91IHRoaW5rIHRoZSBnb3Zlcm5tZW50IG5lZWRzIHRvIGhhdmUgYSBGYWNlYm9vayB0byBpc29sYXRlIHlvdXIgZGF0YSBmcm9tIHlvdXIgbmVpZ2hib3JzIHlvdSBhcmUgbWlzdGFrZW4sIG5vdCB0byBtZW50aW9uIHRoZSBkZXZpY2VzIGluIHlvdXIgaG91c2Ugb3Igb24geW91ciBjZWxsIGNvbm5lY3Rpb24gb3IgdGhlIHdheSBwZW9wbGUgdGFsayBhbmQgdGhlIHBzeWNob2xvZ3kgYmVoaW5kIHVuaXF1ZSBjb21tdW5pY2F0aW9uIHBhdHRlcm5zLiBJdCBpcyBtb3JlIGxpa2VseSB0aGF0IFp1Y2tlcmJlcmcgc3RhcnRlZCBhIHRoaW5nIHdoaWNoIHdhcyBhIGdvb2QgaWRlYShwcm9maXRhYmxlKSBhbmQgc3RhcnRlZCBtaW5pbmcgZXZlcnlvbmUgZGF0YSBsaWtlIEdvb2dsZSBhbmQgYXBwbGUgaGFkIGFueXdheSBiZWVuIGRvaW5nIGFuZCBpdCB0b29rIG9mZi4gCkkgd2FzIGdvaW5nIGhvbWUgYW5kIEkgd2FzIHRoZSBvbmx5IG9uZSB0aGF0IHdhcyBzb21ld2hhdCBob2xkaW5nIGl0IHRvZ2V0aGVyLiAKWW91IGNhbiB1c2UgdGhlICJyZWFybSIgY29uc29sZSBjb21tYW5kIHRvLiAKSnVzdGljZSBDb3VydCBKdWRnZSBOYW5jeSBPZXN0ZXJsZSdzIHJ1bGVkIHRoYXQgdGhlIG9yZGluYW5jZSBhbGxvd2luZyBwb2xpY2UgdG8gY2hhcmdlIHBlb3BsZSB3aXRoICJsb2l0ZXJpbmcgZm9yIHRoZSBwdXJwb3NlIG9mIHByb3N0aXR1dGlvbiIgaXMgdW5jbGVhciBhbmQgZ2l2ZXMgcG9saWNlIHRvbyBtdWNoIGxlZXdheSBpbiBlbmZvcmNpbmcgdGhlIGxhdy4KTCd0eW1vbG9naWUgbmUgcmVwcnNlbnRlIHBhcyBwbHVzIGRlIDEwJSBkZSBsJ2FjdGl2aXQgYXUgY291cnMsIHF1YW5kIGVsbGUgZmF2b3Jpc2UgbGEgY29tcHJoZW5zaW9uIGR1IHNlbnMgZHUgbW90IGFpbnNpIHF1ZSBzYSBtbW9yaXNhdGlvbi4gTGVzIG1vdHMgbmUgbm91cyBpbnRyZXNzZW50IHBhcyBlbiBldXggbW1lcywgbWFpcyBkYW5zIGxldXIgY29udGV4dGUgOiBwaHJhc2UsIHZlcnNldCwgY2hhcGl0cmUsIEV2YW5naWxlIG91IEVwdHJlIC4gCllvdSBjYW4gdGVsbCBtZSB0aGF0IG15IHRoaXJkIHBhcnR5IHZvdGUgd2lsbCBiZSB3YXN0ZWQsIEkgZG9uIGNhcmUsIGl0IG1ha2VzIG1lIHNsZWVwIGF0IG5pZ2h0IGtub3dpbmcgSSB2b3RlZCBmb3Igc29tZW9uZSBJIGNhbiBhY3R1YWxseSBzdXBwb3J0LiAKQ2FycnlpbmcgR2xhRE9TIHdpdGggaGltIEhlIHVzZXMgcG9ydGFscyB0byB0YWtlIHRoZSBmaWdodCB0byB0aGVtLCBpbnN0YWxsaW5nIEdsYURPUyBpbiBDb21iaW5lIHN1YnN5c3RlbXMgYXMgaGUgZ29lcy4gCkhhbGwgYW5kIHdpZmUsIEVsbWEsIEFudHdlcnA7IG9uZSBzaXN0ZXIgaW4gbGF3LCBCZWx2YSBIYWxsLCBDYXJ0aGFnZS4gCk15IHBvaW50IGlzLCBhbiBhcG9sb2d5IGlzIGNvbnNpZGVyZWQgYXMgYSBjb25maXJtYXRpb24gb2Ygc3VwZXJpb3JpdHkgaW4gS29yZWFuIGN1bHR1cmUuIEl0IGlzIG5vdCBhbiBlZmZvcnQgdG8gaW1wcm92ZSBzaXR1YXRpb25zLiBEZW1hbmRpbmcgYW4gYXBvbG9neSBpcyBhIHNvY2lhbCBnZXN0dXJlIHRvIGNvbmZpcm0gdGhlaXIgbW9yYWwgc3VwZXJpb3JpdHkuIFRoZW4gdGhpcyBwb3N0ZXIgYnJvdWdodCB1cCB0aGUgZmFjdCB0aGF0IFNLIGFwb2xvZ2l6ZWQgdG8gVmlldG5hbSBmb3IgdGhlIGF0cm9jaXRpZXMgY29tbWl0dGVkIGJ5IFNLLiBUbyByZWl0ZXJhdGUgbXkgcG9pbnQgSSBvbmx5IGhhdmUgdG8gYXBwbHkgdGhlIEtvcmVhbiBsb2dpYyB0byB0aGlzIHBvc3Rlci4gVGhlIGNvbnZlcnNhdGlvbiBnb2VzIGxpa2UgdGhpcy4KR2Fsd2F5IENvbWVkeSBGZXN0aXZhbCBkYXkKQmFjayB0aGVuIGl0IHdhcyBqdXN0IGEgc2ltcGxlICJyZWFkIHVwIG9uIHdoYXQgY2FyZHMgbm90IHRvIGdldCwgZ2V0IGV2ZXJ5dGhpbmcgZWxzZSwgYWxzbyBrbm93IGFib3V0IEFtZXggMSBwZXIgbGlmZXRpbWUiLiAKQmV0d2VlbiBDaGlsZCBUYXggQ3JlZGl0IHdpcGluZyBvdXQgdGF4IGxpYWJpbGl0eSAoaWYgdGhlIHN0YW5kYXJkIGRlZHVjdGlibGUgZm9yIE9QK2RhdWdodGVyIGRpZG4gYWxyZWFkeSksIEFkZGl0aW9uYWwgQ2hpbGQgVGF4IENyZWRpdCBiZWluZyByZWZ1bmRhYmxlLCBhbmQgRUlDLCB0aGF0IGFkZGl0aW9uYWwgbW9uZXkgb24gdG9wIG9mIHBvdGVudGlhbGx5IHRoZWlyIGVudGlyZSB3aXRoaG9sZGluZyBiZWluZyByZWZ1bmRlZC4gCkF0IGhvbWUsIENhbmFkaWFuIGRhdGEgYXJlIHJlZmxlY3RpbmcgdGhpcyBzbG93ZXIgZ2xvYmFsIG1vbWVudHVtLiAKQWxsIHRoZSBzY2hvb2xzIEkgaGF2ZSB2aXNpdGVkIHdlcmUgZXh0cmVtZWx5IGltcHJlc3NpdmUuIFRoZXkgYWxsIGhhdmUgZ3JlYXQgY2xhc3NlcywgZXh0cmEgY3VycmljdWxhciBhY3Rpdml0aWVzIGFuZCBjYW1wdXMgbGlmZS4gClZvbGtzd2FnZW4gYXR0ZW1wdCB0byBjaGVhdCBhdCB0aGUgZGllc2VsIHBva2VyIHRhYmxlIGlzbiBnb2luZyB0byBlbmQgdGhlIGNhcmQgZ2FtZS4gQnV0IGl0IHdpbGwgbWFrZSB0aGUgb3RoZXIgcGxheWVycyBhdCB0aGF0IHRhYmxlIGEgbGl0dGxlIG1vcmUgd2F0Y2hmdWwgYW5kIGF0dGVudGl2ZSB0byB0aGVpciBjYXJkcy4KQWZ0ZXIgdGhlIEtyaXN0YWxsbmFjaHQgcG9ncm9tIG9mIE5vdmVtYmVyIDE5MzgsIHRoZSBOYXppcyBsZWdhbGl6ZWQgZm9yY2VkIEFyeWFuaXphdGlvbiBhbGxvd2luZyB0aGUgZm9yY2libGUgY29uZmlzY2F0aW9uIG9mIEpld2lzaCBwcm9wZXJ0eS4gCkJvbnVzOiBObyBkaXN0YXN0ZWZ1bCBmYW5zZXZpY2VXaGVuZXZlciBwZW9wbGUgc3BlYWsgb2YgT2thd2EgQmt1YiwgdGhlcmUgZ2VuZXJhbGx5IGEgc2VsZWN0aW9uIG9mIHdvcmtzIHRoYXQgY29tZSB0byBtaW5kLiAKQXMgYSBDYW5hZGlhbiB3b21hbiwgSSB3YW50IHRvIGJlbGlldmUgZm9ybWVyIGF0dG9ybmV5IGdlbmVyYWwgSm9keSBXaWxzb24gUmF5Ym91bGQsIEkgd2FudCB0byBhZG1pcmUgaGVyIHN0cmVuZ3RoLCBoZXIgaG9uZXN0eSBhbmQgaW50ZWdyaXR5LiBJIHdhbnQgdG8gc3VwcG9ydCBMaWJlcmFsIE1QIEphbmUgUGhpbHBvdHQgaW4gaGVyIHJlc2lnbmF0aW9uIGFzIFRyZWFzdXJ5IEJvYXJkIFByZXNpZGVudCBiZWNhdXNlIEkgcmVzcGVjdCB0aGUgd29yayBzaGUgaGFzIGRvbmUgYXMgZm9ybWVyIGhlYWx0aCBhbmQgSW5kaWdlbm91cyBzZXJ2aWNlcyBtaW5pc3RlciBhbmQgdGhlIHN0YW5kIHNoZSBub3cgaXMgdGFraW5nLgpJIGZlbGwgaW4gbG92ZSB3aXRoIGEgZ3V5IGluIGNvbGxlZ2Ugd2Ugd2UgZ3JlYXQgZnJpZW5kcyBhbmQgaGUgaGFkIGEgZ2lybGZyaWVuZC4gCkNoaWNrZW4gYnJlYXN0LCBsZWFuIGJlZWYsIHBvcmsgdGVuZGVybG9pbiBhbmQgbG93IGZhdCBmaXNoZXMgYXJlIGFsbCBoaWdoIGluIHByb3RlaW4gYW5kIGxvdyBpbiBjYWxvcmllcy4gCk1hcmlqYWMgcmVzdGEsIHNhIHZpZSBkdXJhbnQsIG5vc3RhbGdpcXVlIGR1IHN1Y2NzIHF1J2lsIGF2YWl0IHJlbXBvcnQgZ3JjZSAgZGVzIHNjbmFyaW9zIGRlc3RpbnMgIG5vdHJlIGpldW5lc3NlLiBDJ2VzdCBjZSBxdWkgZXhwbGlxdWUgcXUnaWwgZW50cmVwcml0IGF2ZWMgSmVhbiBDaGFwZWxsZSwgYXV0cmUgbm9zdGFsZ2lxdWUgZGVzIGJhbmRlcyBkZXNzaW5lcyBwb3VyIGVuZmFudHMsIGxhIHJkaXRpb24gZGUgU0lUVElORyBCVUxMLCBlbiBhb3QgMTk3MC4gKEludGVybWRlIHBlcnNvbm5lbCA6IGxvcnNxdWUgamUgcmVuY29udHJhaSBKZWFuIENoYXBlbGxlLCBhbm5lIDE5NjYsIGNlbHVpIGNpIHZvdWx1dCAgdG91dCBwcml4IG0nZW5mb25jZXIgZGFucyBsYSB0dGUgbCdpZGUgc2Vsb24gbGFxdWVsbGUgbGEgQkQgZGV2YWl0IHJlc3RlciBjb25maW5lICB1biBwdWJsaWMgZCdnZSBzY29sYWlyZS4gCkkgdGhpbmsgbXkgcGh5c2ljYWwgdGhlcmFwaXN0IGlzIG51dHMgZm9yIHdoYXQgaGUgc3VnZ2VzdGluZyBidXQgSSB0aG91Z2h0IEkgc2VlIGlmIEkgY2FuIGdldCBzb21lIG9mIHlvdXIgb3BpbmlvbnMuIEkgZGlkbiB0aGluayBtdWNoIG9mIGl0IGF0IHRoZSB0aW1lIGJ1dCBpdCBncmFkdWFsbHkgZ290IHdvcnNlIGFuZCBJIGRlY2lkZWQganVzdCB0byB0YWtlIHNvbWUgdGltZSBvZmYgYW5kIHNlZSBhIFBULiBIZSBnb3QgbWUgZG9pbmcgYSBsb3Qgb2Ygc3RyZXRjaGluZyBhbmQgc3RyZW5ndGggZXhlcmNpc2VzIGFuZCBpdCBkZWZpbml0ZWx5IGhhcyBnb3R0ZW4gYmV0dGVyIGJ1dCBpdCBub3QgMTAwJS4gCkl0IHdhcyByZWFsbHkgaW4gTWFjYXUsIHdoZW4gSSBjYW1lIGluIHNlY29uZCBhbmQgSSB0aG91Z2h0IGl0IHdhc24ndCBhIGZsdWtlLi4gCkFuIHVuZGlzY2lwbGluZWQgU2hhbXJvY2tzIHRlYW0gc3BvdHRlZCB0aGUgdmlzaXRvcnMgICBzZXZlbiBwb3dlciBwbGF5IGdvYWxzLiAKQnJpdGlzaCBwb2tlciBzaXRlcyBhcmUgYWxzbyBleHBlY3RlZCB0byBzZWUgYSByZXR1cm4gb2YgYmlnIHNwZW5kaW5nIEV1cm9wZWFuIHBva2VyIHBsYXllcnMsIGtub3duIGFzIHdoYWxlcywgd2hvIGhhZCBiZWVuIGF0dHJhY3RlZCB0byBGdWxsIFRpbHQsIFBva2VyU3RhcnMgYW5kIEFic29sdXRlIGJlY2F1c2UgaXQgZ2F2ZSB0aGVtIHRoZSBjaGFuY2UgdG8gcGxheSBhZ2FpbnN0IEFtZXJpY2EgbW9zdCBmYW1vdXMgcGxheWVycy4gVGhhdCB0aGUgYmlnIEFtZXJpY2FuIHdoYWxlcyB3b24gYmUgdGhlcmUsIEZ1bGwgVGlsdCBhbmQgdGhlIG90aGVycyBoYXZlIGxvc3Qgb25lIG9mIHRoZSBrZXkgYXR0cmFjdGlvbnMsIHNhaWQgYSBnYW1ibGluZyBpbmR1c3RyeSBzb3VyY2UuLiAKVGhlIHRoaW5nIGlzLCB0byBtZSBhbnl3YXksIGl0cyB3b3J0aCBpdC4gVGhleSBtYWtlIG1lIGhhcHB5LCBhbmQgaSBtYWtlIHN1cmUgdGhleSBmZWQgYW5kIGxvdmVkLiAKIkxvb2sgYXQgdGhlIGhlYWx0aCBvZiBoaXMgYWdlbmN5IGJyYW5kcy4gClNpdHRpbmcgaW4gUGFyaXMgdGhpcyB3ZWVrLCB0YWxraW5nIHRvIGEgY29sbGVhZ3VlIHdobyBpcyByZXNlYXJjaGluZyByZWxpZ2lvbiwgY2xhc3MsIGFuZCBlZHVjYXRpb24gaGVyZSwgaGUgbWVudGlvbnMgdGhlIGxhdGVzdCBhdHRlbXB0IGJ5IHRoZSBGcmVuY2ggZ292ZXJubWVudCB0byBiYW4gdGhlIGJ1cnFhLiBUaGUgbmV3ZXN0IGxhdyB3b3VsZCBiYW4gZnVsbCB2ZWlscyB0aGF0IGNvdmVyIGZhY2UgKG5vdCBhbGwgaGVhZCBzY2FydmVzKSBpbiBBTEwgcHVibGljIHNwYWNlcyAgaW5jbHVkaW5nIGhvc3BpdGFscywgcHVibGljIHRyYW5zaXQsIHNjaG9vbHMuIEluIGEgY291bnRyeSB3aXRoIEV1cm9wZSBsYXJnZXN0IE11c2xpbSBwb3B1bGF0aW9uLi4gCk92ZXJ2aWV3IGZvciBzdHV1bmdhcnNjb3VzaW4KQXMgYW4gYWR1bHQgSSBsZWFybmVkIHRoYXQgZWxlbWVudGFyeSB0ZWFjaGVycyBvZnRlbiBqdXN0IHNwb3V0ZWQgc2hpdCB0aGV5IGJlbGlldmVkIHRvIGJlIHRydWUgYnV0IG5ldmVyIGFjdHVhbGx5IGhlYXJkIGZyb20gYSB0ZWFjaGluZyBzb3VyY2UgYXQgYW55IHBvaW50LiAKRXhjZWxsZW50LiAKVGhpcyBpcyB0aGUgb25lIHRoYXQgc2V0IG1lIG9mZiBsYXN0IG5pZ2h0LCBpdCB3YXMgYWN0dWFsbHkgYXQgdGhlIHRvcCBvZiB0aGUgcG9zdHMgeWVzdGVyZGF5LCBiZWNhdXNlIGl0IGdvdCBzbyBtYW55IHVwdm90ZXMuIApUaGUgNC8yIFBva2VyIFJ1bGUgd2FzIGNyZWF0ZWQgdG8gYWxsb3cgcGxheWVycyB0byBxdWlja2x5LCBhbmQgcmVhc29uYWJseSBhY2N1cmF0ZWx5LCBjYWxjdWxhdGUgdGhlaXIgb2RkcyBkdXJpbmcgYSBwb2tlciBoYW5kLiBUaGlzIHdpbGwgYmUgdXNlZCB3aGVuIHlvdSBhcmUgaG9sZGluZyBhIGRyYXdpbmcgaGFuZCwgb3IgZmVlbCB5b3UgYXJlIGJlaGluZCBpbiB0aGUgaGFuZC4gVGhlIDQvMiBydWxlIG9ubHkgY29tZXMgaW50byBlZmZlY3QgYWZ0ZXIgdGhlIGZsb3AuIApJJ3ZlIGNyaWVkIG92ZXIgbXkgcGF0aWVudHMgbWFueSB0aW1lcy4gQmx1ZSwgd2hvIGJlY2FtZSBzZXB0aWMgYWZ0ZXIgc3VyZ2VyeSBhbmQgZm9yIDQgZGF5cyBoaXMgd29uZGVyZnVsIGRhZHMgZm91Z2h0IHdpdGggdXMgdG8ga2VlcCBoaW0gYWxpdmUuIEhlIGNyYXNoZWQgaW4gdGhlIG1pZGRsZSBvZiB0aGUgbmlnaHQgYW5kIEkgY3JpZWQgb24gdGhlIHBob25lIGFzIEkgdG9sZCB0aGUgY2xpZW50cyBJIHdhcyBzdGFydGluZyBDUFIuIApJbiBTaGVsbGhhcmJvdXIsJDU0OSBtaWxsaW9uIHdhcyBwdXNoZWQgdGhyb3VnaCB0aGUgY2l0eSdzIDg2OCBnYW1pbmcgbWFjaGluZXMgIHJvdWdobHkgJDc5MDYgcGVyIHJlc2lkZW50ZWFjaCB5ZWFyLiAKTW9yZSB0aGFuIDMwIHllYXJzIGxhdGVyLCBtYW55IG9mIHRoZSBvbGQgZ3VhcmQgR29vZCBCdWlsZGluZ3MgaGF2ZSBzZWVuIGJldHRlciBkYXlzLiBBZnRlciBmbG91bmRlcmluZyBvbiB0aGUgbWFya2V0IHNpbmNlIDIwMTIsIGEgc3BhY2lvdXMgdHdvIGJlZHJvb20gYXBhcnRtZW50IHNlZWtpbmcgJDIuMyBtaWxsaW9uIGF0IDU1MCBQYXJrIGZhaWxlZCB0byBmaW5kIGEgYnV5ZXIsIGRlc3BpdGUgYSAzNiBwZXJjZW50IHByaWNlIGRlY3JlYXNlLiAKSGVsbG8sd2FudCB0byBjcmFjayB3aW5kb3dzIDcgdWx0aW1hdGUuIFdpbmRvd3MgNyB1bHRpbWF0ZSAzMiBiaXQgYWN0aXZhdGlvbiBrZXkgZnJlZSBkb3dubG9hZC4gQ2FsbDJ0aW50dSBGZWIgNSwgMjAxMywgODowNCBBTS4gCkluIG91ciBuZXdzcmVlbCwgRGVlayBoYXMgY2FwdHVyZWQgYSBib2F0IHJhY2UuIEEgbXVzaWNhbCBpbnRlcmx1ZGUgZm9sbG93cywgYXMgQ2hyaXN0aW5hIFJvc3NldHRpIGhhcyBiZWVuIHBhaXJlZCB3aXRoIHN1aXRhYmxlIG11c2ljLiAKU3RvdXQgZmluZHMgTWNOZWVyJ3MgY2xhc3Mgcml2ZXRpbmcuIFRoZSByZWFzb24gaXMgdGhhdCB0aGUgcHJvZmVzc29yIHRyZWF0cyBoaXMgY2hhcmdlcyBub3QgYXMgc3R1ZGVudHMgYnV0IGFzIGJ1ZGRpbmcgc2VjdXJpdGllcyBhbmFseXN0cy4gCkRvd25sb2FkIFRoZSBDQlM0IEh1cnJpY2FuZSBHdWlkZSAoU3BhbmlzaClEb3dubG9hZCBUaGUgQ0JTNCBIdXJyaWNhbmUgR3VpZGUgKFNwYW5pc2gpClRoaXMgaXMgaW1wb3J0YW50LiBJIGZlZWwgbGlrZSB0aGVyZSBpcyBhIGxvdCBvZiB0cmFzaCB0YWxrIGluIHRoZSBndW4gY29tbXVuaXR5IGFib3V0IHBlb3BsZSByZWFjaGluZyBvdXQgdG8gdGhlIERlbSBzaWRlIGVzcGVjaWFsbHkgd2hlbiBpdCBjb21lcyB0byBtYW51ZmFjdHVyZXIgbG9iYnlpbmcgYW5kIGNvbnRyaWJ1dGlvbiBlZmZvcnRzLiBUaGlzIHNob3VsZCBiZSBhIG5vbiBwYXJ0aXNhbiBpc3N1ZS4gClRoZW4gYWdhaW4sIHdlIGRvIHNlZW0gdG8gaGF2ZSBhIGxvdCBvZiBsZWZ0aGFuZGVycyBpbiBaaXRvLCBMb3dyeSwgU2FuY2hleiBhbmQgTWlzY2guIFNub3cgcmVjZW50bHkgdHV0b3JlZCBUcmlwbGUgQSBvdXRmaWVsZGVyIERhbiBPcnRtZWllciBhdCBmaXJzdCBiYXNlLiBXaGF0IGEgdGVycmlmaWMgaWRlYS4gClRoZXJlIGhhdmUgYmVlbiBhIGZldyBzbWFsbCBwaWVjZXMgYWJvdXQgdGhlc2UgKG1lKSBwZW9wbGUsIGJ1dCBvbmx5IG9uZSByZWNlbnQgY292ZXIgc3RvcnkuLiAKSW4gZWl0aGVyIGNhc2UsIHBvdXIgdGhlIG9pbCBpbnRvIGFzIG1hbnkgZHJvcHBlciBib3R0bGVzIGFzIHlvdSBoYXZlLCBhbmQgdGhlbiBpbnRvIHRoZSBzdG9yYWdlIGJvdHRsZSBpZiB0aGVyZSBpcyBhbnkgb3Zlci4gCkF0aGxldGVzIGNvdWxkIGhhdmUgaW50ZXJhY3Rpb24gaW4gdGhpcyB0cmVhdG1lbnQgbWV0aG9kIGJvdGggaW4gcHJlcGFyYXRpb24gZm9yIGFuIGNlbGVicmF0aW9uIG9yIHRvIHJlY3VwZXJhdGUgZnJvbSAxLiAKVGhlc2Ugc29uZ3MgYXJlIGF2YWlsYWJsZSBvbiAiVGhlIEZhbWUsIkdhR2EncyBmaXJzdCBhbGJ1bS4gVmVyc2lvbi4gWW91IGNhbiBnZXQgaXQvdGhlbSBmcm9tIGlUdW5lcy4gCjMuIE1haSAyMDE4IC4gQW5kcm9pZCB4ODYgKDY0IEJpdCkgdjcuMSBSMiBFbmdsaXNjaDogTWl0IEFuZHJvaWQgeDg2IGtvbW10IGRhcyBtb2JpbGUgQmV0cmllYnNzeXN0ZW0gdm9tIFNtYXJ0cGhvbmUgYXVmIElocmVuIFBDLiBIaWVyIGZpbmRlbiBTaWUgZGllIC4gQW5kcm9pZCBPUyBhdXNwcm9iaWVyZW46IEdhbnogZWluZmFjaCBwZXIgVVNCIFN0aWNrLiBTaWUga25uZW4gQW5kcm9pZC4gSnVsIDIwLCAyMDE4IC4gQW5kcm9pZCBPUyBmb3IgUEMgICBJbnN0YWxsIGEgZnVsbCBBbmRyb2lkIG9uIHlvdXIgY29tcHV0ZXIuIApJZiB5b3Ugc2hvdWxkIGJlZ2luIHRvIGZlZWwgc29tZXRoaW5nIG91dCBvZiB0aGUgb3JkaW5hcnkgd2hlbiBhcHBseWluZyBCaW9mcmVlemUsIGl0IGlzIGFsd2F5cyBiZXN0IHRvIGNvbnN1bHQgeW91ciBwaHlzaWNpYW4gYW5kIGZpbmQgb3V0IGV4YWN0bHkgd2hhdCBpcyB3cm9uZyBhbmQgd2hhdCB5b3UgYXJlIHN1cHBvc2VkIHRvIGRvIGFib3V0IGl0Li4gClRob3NlIHdobyBzZWVrIHRoZSBkaXN0cmFjdGlvbiBvZiBUViBpbiBwdWJsaWMgcHJvYmFibHkgYXJlbiB0aGF0IHNvcGhpc3RpY2F0ZWQuIEluIGEgcmVzdGF1cmFudCBvciBiYXIsIHRoZXJlIGFyZSB0aG9zZSB3aG8gaW50ZXJhY3Qgd2l0aCBvdGhlcnMgYW5kIHRoZXJlIGFyZSB0aG9zZSB3aG8gc3RhcmUgc2xhY2sgamF3ZWQgYXQgYmxvbmRlIHByb3BhZ2FuZGlzdHMuIEl0IG5vIHNlY3JldCB0aGF0IHRoZSBsZXNzIGluZm9ybWVkIGFyZSBkcmF3biB0byBza2V3ZWQgcmlnaHQgd2luZyBtZWRpYSwgc28gdGhhdCB3aGF0IG9uLgpJIGhhZCB0byBzZWUgYSBkZXJtYXRvbG9naXN0IGFuZCBnZXQgYSBwcmVzY3JpcHRpb24gZm9yIGl0IHRvIGdvIGF3YXkuIApHZXQgb2ZmIHlvdXIgaGlnaCBob3JzZSBhbmQgc3RvcCBiZWluZyBzZWxmaXNoLiAKU2VpdCBmYXN0IGRyZWkgSmFocmVuIHZlcmZvbGd0IGVpbmUgR3J1cHBlIHZvbiBMYSBQYWxtYSBGYW5zIGF1cyBzdGVycmVpY2ggdW5kIERldXRzY2hsYW5kIGRpZSBJZGVlLCBlaW4gZ2VtZWluc2NoYWZ0bGljaGVzIFVybGF1YnMgV29obiBQcm9qZWt0IGF1ZiBkZXIgSXNsYSBCb25pdGEgenUgcmVhbGlzaWVyZW4gdW5kIHN0ZWh0IG51biBrdXJ6IHZvciBkZW0gRmluYWxlLiBEaWUgSWRlZSBpc3QsIGVpbmUga2xlaW5lIEZlcmllbmFubGFnZSBhbHMgR3J1cHBlIHp1IGVyd2VyYmVuIHVuZCBnZW1laW5zYW0gYWxzIHN5bXBhdGhpc2NoZXIgRnJldW5kZXNrcmVpcyB6dSBudXR6ZW4gdW5kIHp1IGdlbmllZW4uIFRlaWxlbiBzdGF0dCBiZXNpdHplbiIgaXN0IHVuc2VyIE1vdHRvLgpEZW5uaXMgTGVnYXVsdCwgUHJvY3RlciBHYW1ibGUncyBDaGFybWluIGJyYW5kIG1hbmFnZXIsIHNhaWQgaW4gYSBzdGF0ZW1lbnQgdGhhdCBXaWxzb24gZGVzZXJ2ZXMgbXVjaCBvZiB0aGUgY3JlZGl0IGZvciBDaGFybWluJ3Mgc3VjY2VzcyBpbiB0aGUgbWFya2V0cGxhY2UuClRoYXQgc2FpZCwgaXQgaXMgaW1wb3J0YW50IHRvIHJlbWVtYmVyIHRoYXQgZGVzcGl0ZSBjb25zdGFudCBhY2N1c2F0aW9uIG9mIFBSQyBpbnRlcmZlcmVuY2Ugb2YgSG9uZyBLb25nIGRvbWVzdGljIGFmZmFpcnMsIEhvbmcgS29uZyBqdWRpY2lhbCBhbmQgbGF3IGVuZm9yY2VtZW50IHN5c3RlbSByZW1haW5zIG1vcmUgb3IgbGVzcyBhdXRvbm9tb3VzLCBhbmQgY2FuIG9mdGVuIHBhc3MgZG93biBqdWRnZW1lbnQgdGhhdCB0aGUgY2VudHJhbCBnb3Zlcm5tZW50IHdvdWxkIG5vdCBhcHByb3ZlLiAKT2gsIHRoZXJlIHNvbWUgc2hpdCB0b3JuIHVwLiBPaCwgdGhlcmUgYSB0cmVlIG9uIGEgY2FyLiBBbmQgdGhlbiBvaGhoaGhoIG15eXl5eXl5eXkgR09EIGZvciBhcyBmYXIgYXMgdGhlIGV5ZSBjYW4gc2VlLi4gCldoeSBhcmUgeW91IGFnYWluc3QgQ3VydmVzPyBJIHVzZWQgdG8gZ28gdG8gb25lIGFuZCBsb3ZlZCBpdC4gCldobyB1cG9uIHNlZWluZyB0aGUgbWlzZXJ5IGFuZCBkZWF0aCBpbiB0aGUgd29ybGQsIHNhY3JpZmljZWQgbWF0ZXJpYWxpc3RpYyBwbGVhc3VyZXMgaW4gc2VhcmNoIG9mIGVubGlnaHRlbm1lbnQuIApOb3J0b24gTWlkZGxlIFNjaG9vbCBzdHVkZW50IGFjY3VzZWQgb2YgaW5kdWNpbmcgcGFuaWMgd2l0aCB0aHJlYXRlbmluZyBJbnN0YWdyYW0gcG9zdCwgcG9saWNlIHNheSBOb3J0b24gTWlkZGxlIFNjaG9vbCBzdHVkZW50IGFjY3VzZWQgb2YgaW5kdWNpbmcgcGFuaWMgd2l0aCB0aHJlYXRlbmluZyBJbnN0YWdyYW0gcG9zdCwgcG9saWNlIHNheSBBIDE0IHllYXIgb2xkIE5vcnRvbiBNaWRkbGUgU2Nob29sIHN0dWRlbnQgd2FzIGFycmVzdGVkIEZyaWRheSBhZnRlciB0aHJlYXRlbmluZyBvdGhlciBzdHVkZW50cyBvbiBzb2NpYWwgbWVkaWEsIHBvbGljZSBzYXkuIEltbWlncmF0aW9uIiBvciBvdGhlciBlbnRpdGllcywgdHJ5aW5nIHRvIG9idGFpbiBwZXJzb25hbGx5IGlkZW50aWZpYWJsZSBpbmZvcm1hdGlvbiwgb3IgdGhyZWF0ZW5pbmcgdG8gYXJyZXN0IHZpY3RpbXMgdW5sZXNzIHRoZXkgbWFrZSBwYXltZW50cy4uIApNZWRpYW50ZSBsYSByaXNvbmFuemEgZGVsIHN1b25vIE9NIGFsbCdpbnRlcm5vIGRpIHVuYSBzcGVjaWZpY28gZ3J1cHBvIGRpIHBlcnNvbmUsIHNpIHBvc3Nvbm8gYW1wbGlmaWNhcmUgZGVpIHByb2Nlc3NpIGRpIGd1YXJpZ2lvbmUgdHJhbWl0ZSBsJ2FsbGluZWFtZW50byBkZWxsZSB2aWJyYXppb25pLiAKSXQgYWxzbyBzcGVudCAkMjEwLDAwMCBlbXBsb3lpbmcgU2hhbmUgV2FybmUgYnJvdGhlciBpbiBhbiBleGVjdXRpdmUgcG9zaXRpb24gYXQgdGhlIGZvdW5kYXRpb24uIApXZSB3aWxsIGJlIG91dCBhbGwgd2Vla2VuZCBnZXR0aW5nIHRoZSB0cmFpbHMgdGhlIGJlc3Qgd2UgY2FuIGZvciBvdXIgUG9rZXIgUnVuLCBDaGlja2VuIEJCUSwgU25vd21vYmlsZSBSYWZmbGUgdG9tb3Jyb3cgYXQgdGhlIENoZWVzZSBGYWN0b3J5IGluIFJlZGZpZWxkLi4gCiJUaGUgZmluYWwgYmlsbCB3b24ndCBpbmNsdWRlIGV2ZXJ5dGhpbmcgdGhhdCBldmVyeWJvZHkgd2FudHMsIiBNci4gT2JhbWEgc2FpZC4gIk5vIGJpbGwgY2FuIGRvIHRoYXQuIgpXaGF0IGlzIHRoZSBMb3R0ZXJ5IEFuZCBDYXNpbm8gRWJvb2s/IEl0IGlzIGFjdHVhbGx5IGFuIEVib29rIHRoYXQgY29udGFpbnMgYWxsIHRoZSBzZWNyZXRzIHRoYXQgdGhlIHByb3MgdXNlIHRvIHdpbi4gSXQgdGVhY2hlcyB5b3Ugc2ltcGxlIGZvcm11bGFzIHRvIHVzZSB3aGVuIHlvdSB3YW50IHRvIHBsYWNlIGEgYmV0IHdpdGggYSBzbWFsbCBhbW91bnQgYW5kIGV4cGVjdCB0byB3aW4gYmlnLiAKV2UgR2lhbnRzIGZhbnMgaGF2ZSB0byBjZWxlYnJhdGUgdGhlIHNtYWxsIHZpY3RvcmllcyBpbiB0aGlzIGRpZmZpY3VsdCBzZWFzb24sIHNvIGhvdyBhYm91dCB0aGF0IGZhbnRhc3RpYyBmaW5pc2ggb24gU3VuZGF5PyBMZXQgcmVsaXZlIGl0IGZvciBhIG1vbWVudDogV2l0aCB0d28gb3V0cyBpbiB0aGUgMTF0aCBpbm5pbmcgb2YgYSBzY29yZWxlc3MgZ2FtZSwgQnJhZCBIZW5uZXNzZXksIG9mIGFsbCBwZW9wbGUsIHBpbmNoIHJ1bnMgZm9yIFBhYmxvIFNhbmRvdmFsLCBhbmQgc3RlYWxzIHNlY29uZCBiYXNlIHN0YW5kaW5nIHVwLiAKVGhpcyB0aW1lIEdpbGVzIGFuZCBPIHN1cHBvc2VkbHkgY2F1Z2h0IGEgQ2FsaWZvcm5pYSBlbXBsb3llZSBvZiBBQ09STiwgSnVhbiBDYXJsb3MgVmVyYSwgb24gdGFwZSBoZWxwaW5nIHdpdGggaHVtYW4gc211Z2dsaW5nLiAKT2ggZnVjayBvZmYuIEkgbG9zdCAxMDAgcG91bmRzIGFuZCBuZXZlciByYXRpb25lZCBteSBtZWFscy4gSSBhdGUgc21hbGxlciBwb3J0aW9ucywgc25hY2tlZCBsZXNzIGJldHdlZW4gbWVhbHMsIGFuZCBzdG9wcGVkIGRyaW5raW5nIHBvcCBleGNlcHQgZm9yIHRoZSBvY2Nhc2lvbmFsIG9uZS4gSSBzdGlsbCBhdGUgZW50aXJlIHBpenphcyBieSBteXNlbGYgYnV0IG9wdGVkIGZvciB0aGluIGNydXN0LCBsaWdodCBjaGVlc2UsIGFuZCBsb3dlciBjYWxvcmllIHRvcHBpbmdzLiBJIHN0aWxsIGF0ZSBmYXN0IGZvb2QuIFN0aWxsIHdlbnQgdG8gcmVzdGF1cmFudHMuIERpZG4gc2FjcmlmaWNlIHdvcmsgb3Igc2Nob29sLCBteSBzb2NpYWwgbGlmZSBvciBteSBtYXJyaWFnZSB3aG9sZSBsb3Npbmcgd2VpZ2h0IGVpdGhlci4gSXQgbm90IGFuIGFsbCBvciBub3RoaW5nIGtpbmQgb2YgdGhpbmcuIFdoeSBpcyBpdCBhbHdheXMgYWxsIG9yIG5vdGhpbmcgd2l0aCB0aGVzZSBwZW9wbGU/ISBMb3Npbmcgd2VpZ2h0IG1lYW5zIHNwZW5kaW5nIGEgZmV3IG1pbnV0ZXMgYSBkYXkgdGhpbmtpbmcgYWJvdXQgbWFraW5nIGJldHRlciBmb29kIGNob2ljZXMuIFRoYXRzIGl0LgpUaGF0IHdpbGwgY2F1c2UgYSBiaWcgcmVjZXNzaW9uIGJ1dCBpcyB0aGUgYmVzdCB3YXkgb3V0IGZvciBKYXBhbi4gQnkgYSBkZWVwIHJlY2Vzc2lvbiwgQWxsZW4gbWVhbnMgYSBzaWduaWZpY2FudCBpbmNyZWFzZSBpbiB1bmVtcGxveW1lbnQgYW5kIGJhbmtydXB0Y2llcyBmb3IgdGhlIGxlZ2lvbnMgb2YgSmFwYW5lc2UgY29tcGFuaWVzIHRoYXQgc2hvdWxkIGdvIGJhbmtydXB0LCBidXQgaGF2ZW4gZHVlIHRvIHN1YnNpZGllcyBhbmQgb3RoZXIgZm9ybXMgb2YgcHJvdGVjdGlvbmlzbSBieSBhIGdvdmVybm1lbnQgd2FyeSBvZiBhIHBvc3NpYmxlIGRvbWlubyBlZmZlY3QgYW5kIHN1cmdpbmcgdW5lbXBsb3ltZW50LiAKU2ltcHNvbiwiIGFuZCAic29saWNpdG9ycy4iIEhlIGhhZCBhIG5vb3NlIGhhbmdpbmcgb24gdGhlIGhvdXNlIG5leHQgdG8gdGhlIHBvcmNoIHdpdGggYSBzaWduIHRoYXQgc2FpZCBzb21ldGhpbmcgbGlrZSwgImZvciBzYWxlc21lbiIgb3IgImZvciBzb2xpY2l0b3JzLiIgTXkgYnJvdGhlciBmcmllbmQgZGlkIG5vdCB0dXJuIG91dCBva2F5ID0oLiAKVGhpcyBpc24gc29tZSBzb3J0IG9mIGxvZ2ljIGRlYmF0ZSB0byB3aW4sIHRoaXMgaXMgcGVvcGxlIHNhZmV0eS4gSWYgeW91IGNhbiB1bmRlcnN0YW5kIHRoYXQsIGRlZmVyIHRvIHBlb3BsZSB3aG8gY2FuLiBJcyB0aGF0IGhhcmQgdG8gZG8sIGZvciB5b3U/Ck5vIGNhciBlbGltaW5hdGVzIGxpa2UgdGhyZWUgb2YgdGhlIHRpcHMuIEFuZCB0aGUgY3JlZGl0IGNhcmQgdGhpbmcuIApJZiB0aGUgam9icyBkYXRhIHdlYWtlbiBjb3VsZCBoZSBhZGQgdGhlIG5lZWQgZm9yIGZ1cnRoZXIgc3RpbXVsdXMgdG8gdGhhdCBsaXN0LiBoYXMgYWxyZWFkeSBiZWVuIHNvbWUgYnV6eiBhcm91bmQgd2hhdCBzb3J0IG9mIG1lYXN1cmVzLCBpZiBhbnksIHRoZSBmZWRlcmFsIExpYmVyYWwgZ292ZXJubWVudCBjb3VsZCBoYXZlIHVwIGl0cyBzbGVldmUgb24gTWFyY2ggMTkuClRoZSBIb3VzZSBiaWxsLCB3aGljaCBtb3ZlZCB0aHJvdWdoIGl0cyBmaW5hbCBjb21taXR0ZWUgc3RvcCBvbiBUaHVyc2RheSBhcyB3ZWxsLCBtb3ZlcyBpbiBhbiBvcHBvc2l0ZSBkaXJlY3Rpb24gZnJvbSB0aGUgU2VuYXRlIGxlZ2lzbGF0aW9uLiBJdCB3b3VsZCBhbGxvdyB0aGUgdHJpYmUgdG8ga2VlcCBpdHMgc2xvdCBtYWNoaW5lcyBhbmQgYmxhY2tqYWNrIHRhYmxlcyBmb3IgMjAgeWVhcnMsIGJ1dCBpdCB3b3VsZCBub3QgYWxsb3cgdGhlbSB0byBhZGQgYWRkaXRpb25hbCBnYW1lcy4gVGhlIGxlZ2lzbGF0aW9uIHdvdWxkIGFsc28gbWFrZSBpdCBjbGVhciB0aGF0IHNsb3QgbWFjaGluZXMgd291bGQgYmUgY29uZmluZWQgdG8gdHJpYmFsIHJ1biBjYXNpbm9zIGFuZCB0cmFja3MgaW4gU291dGggRmxvcmlkYS4KRm9yIFR1cmtleSwgQ2hpbmEgb2ZmZXJzIHVuZmV0dGVyZWQgZWNvbm9taWMgZGV2ZWxvcG1lbnQgdG8gdGhlIFR1cmtpYyByZXB1YmxpY3MgaW4gY2VudHJhbCBhc2lhLCB0aGlzIG1ha2VzIFR1cmtleSBzYWxpdmF0ZSBiZWNhdXNlIFR1cmtpc2ggc3RhdGUgaWRlb2xvZ3kgaXMgZXRobm8gY2VudHJpYyBUdXJraXNtIHdpdGggbmV3IElzbGFtaWMgdW5kZXJ0b25lcy4gRXRobm8gY2VudHJpc20gaXMgYWJob3JyZWQgaW4gdGhlIHdlc3QgZHVlIHRvIGxpYmVyYWxpc20uIApJbiBudXIgMTUgSmFocmVuIGFuIGRpZSBXZWx0c3BpdHplOiBKdW1laXJhaCBIb3RlbHMgaXN0IGludGVybmF0aW9uYWwgZWluIEJlZ3JpZmYgdW5kIFN5bm9ueW0gZnIgTHV4dXNob3RlbGxlcmllLiAKVGhlIHNpbXBsZXN0IHdheSB0byBtYWtlIG9uZSBpcyB0byBtYWtlIGEgZ2lhbnQgb3BlbiAgZW5kZWQgc2V3IHZlcnRpY2FsIHF1aWx0aW5nIGxpbmVzLCBmaWxsIGVhY2ggd2l0aCBhIGhhbmRmdWwgb2YgcGVsbGV0cywgdGhlbiBzZXcgYWNyb3NzIHRoZSBsaW5lcyB0byBzZWFsIHRoZW0uIApBbSBhIG51cnNlLCBhbmQgSSB1bmRlcnN0YW5kIHRoZSBwcm9ncmFtcyB0aGF0IGFyZSBiZWluZyBpbXBhY3RlZCBJIGRvbmUgdGhhdCB3b3JrIG15c2VsZiwgTWFyZW50ZXR0ZSBzYWlkLiB3b3JrZWQgd2l0aCBtYW55IG9mIHRoZXNlIG51cnNlcy4gVGhleSBhcmUgYW4gaW1wb3J0YW50IGdyb3VwIHRvIG1lLiBJIGFtIGEgbnVyc2UsIEkgc3VwcG9ydCBudXJzaW5nLCBJIHJlc3BlY3QgbnVyc2luZy4KSGlhdGFsIGhlcm5pYXMgbWF5IG5vdCBiZSBub3RpY2VhYmxlIGVzcGVjaWFsbHkgaWYgdGhleSdyZSBzbWFsbCwgaG93ZXZlciwgbGFyZ2VyIGhlcm5pYXMgbWF5IG5vdCBiZSBlYXN5IHRvIGlnbm9yZS4gClRoZSA0LzIgcnVsZSBzdGF0ZXMgdGhhdCBpZiB5b3Ugd2FudCB0byBrbm93IHdoYXQgY2hhbmNlIHlvdSBoYXZlIHRvIHdpbiBpZiB5b3Ugb25seSBnbyB0byB0aGUgdHVybiwgeW91IG11bHRpcGx5IHlvdXIgb3V0cyBieSAyLiAKQ2VwZW5kYW50LCBjZSBtY2FuaXNtZSBuZSBzZXJhIHBhcyBkY2xlbmNoIGRhbnMgbidpbXBvcnRlIGNhcy4gCk15IHNvbiBpcyA3IGFuZCBoYXMgQURIRCwgc28gaGUgaXMgbGVzcyBhZmZlY3RlZCBiZWNhdXNlIGhlIGRvZXNuIGhhdmUgYSBsb3Qgb2YgdGltZSB0byB0aGluayBhYm91dCBpdCwgYnV0IG15IGRhdWdodGVyIHdhcyBkZWZpbml0ZWx5IGRhZGR5IGdpcmwsIGFuZCBzaGUgaGF2aW5nIGEgdG91Z2ggdGltZSB0aHJvdWdoIGFsbCBvZiB0aGlzLiBNb3N0IGRheXMgYXJlIGdvb2QsIGJ1dCBJIGNhdGNoIGhlciBzdGFyaW5nIG9mZiB3aXRoIGEgc2FkIGV4cHJlc3Npb24gb3IganVzdCBjcnlpbmcgb3V0IG9mIG5vd2hlcmUuIApQT0tFUiBQQUxBQ0UgUFJPTU9URVI6IE5hbmN5IFRvZGQKSVQgU1VSVklWRVMgQkVDQVVTRSBJVCBXT1VMRCBCRSBTVEFUSVNUSUNBTExZIElNUFJPQkFCTEUsIERBUkUgSSBTQVkgSU1QT1NTSUJMRSwgVEhBVCBUSEVSRSBXT1VMRE5UIEJFIEFUIExFQVNUIE9ORSBPRiBUSE9TRSAzMDAsMDAwLDAwMCAodGhhdCBpcyBFQUNIIHRpbWUgdGhleSBsYXkgZWdncykgTEVGVCBTVVJWSVZJTkcgQVQgVEhFIEVORCBPRiBUSEUgREFZLkFuZCB0aGlzIGNvbmNsdWRlcyB3aHkgSSBoYXRlIHRoZSBmdWNrIG91dCBvZiB0aGlzIGNvbXBsZXRlIGZhaWx1cmUgb2YgZXZvbHV0aW9uLCB0aGUgT2NlYW4gU3VuZmlzaC4gSWYgSSBldmVyIHNlZSBvbmUsIEkgd2lsbCB0aHJvdyByb2NrcyBhdCBpdC5zaWx2ZXJpbmZlcm5vM2F5ZSBNb2lyYSB5ZXIgc3BvdCBvbiBhbSBvYW4gdGhlIGV4cGF5IHNoYWVyISAxMiBwb2ludHMgIHN1Ym1pdHRlZCAyMCBob3VycyBhZ29Tb3VuZHMgYWJvdXQgcmlnaHQsIGl0IHdhcyBhYm91dCBraWRzIGdvaW5nIHRvIGEgc2Nob29sIGZvciBwdXJzdWluZyBjYXJlZXJzIGluIHRoZSBhcnRzLCBsb2NhdGVkIGluIEhvbGx5d29vZCwgYXBwcm9wcmlhdGVseSBuYW1lZCBIb2xseXdvb2QgQXJ0cy4gVGhlaXIgdGVhY2hlciB3YXMgYSBob2JvIGhpcHN0ZXIsIHRoZXkgaGFkIGEgVE1aIGNsdWIsIHRoZXJlIHdhcyBhIHZhZ3VlbHkgZm9yZWlnbiBtYW4gd2l0aCBhIGZvb2QgY2FydCBpbiB0aGVpciBsdW5jaCBhcmVhLCBIZWxlbiBmcm9tIERyYWtlIGFuZCBKb3NoIGJlY2FtZSB0aGVpciBwcmluY2lwYWwgKGxpdGVyYWxseSB0aGUgY2hhcmFjdGVyLCBub3QganVzdCB0aGUgYWN0b3IpLCBhbmQgdGhleSBoYWQgYW4gZW50aXJlIGVwaXNvZGUgcGFyb2R5aW5nIHRoZSBCcmVha2Zhc3QgQ2x1Yi4gCkEgY2VsYSBzIHF1ZSwgcGFyIHNvbiB0cm9uYywgcGFyIHNlcyBsYXJnZXMgYnJhbmNoZXMgcXVpIHJlc3NlbWJsZW50ICBkZXMgYnJhcywgcGFyIHNvbiBmZXVpbGxhZ2UgdG91ZmZ1LCBsZSBjaG5lIGVzdCBlbWJsbWUgZCBldCBqb3VlLCBwYXIgcXVpdmFsZW5jZSwgbGUgcmxlIGRlIHRlbXBsZSBlbiBwbGVpbiBhaXIsIG1haXMgaWwgbiBqYW1haXMgcXUgYWJvcmRzIGRlcyBsaWV1eCBzYWNycyBxdWUgc29udCBsZXMgbmVtZXRvbnMsIHB1aXNxdWUgY2VzIGVzcGFjZXMgc29udCBkZXMgem9uZXMgZGdhZ2VzIGVuIGhhdXRldXIsIGRvbmMgc2FucyBhcmJyZSBzdXIgbGV1ciBzdXJmYWNlIChuZW06IGNpZWwsIGNpZXV4KS4gCjE4LiBNYWxpYyBhY2lkIGlzIG9uZSBvZiB0aGUgbW9zdCBwb3RlbnQgY2hlbGF0b3JzIG9mIGFsdW1pbnVtIGFuZCBpcyBtb3N0IGVmZmVjdGl2ZSBpbiBkZWNyZWFzaW5nIGJyYWluIGFsdW1pbnVtIGxldmVscy4yMC4gTWFsYXRlIGRlZmljaWVuY3kgaXMgdGhlIGNhdXNlIG9mIHRoZSBBVFAgZGVmaWNpZW5jeSBzZWVuIHdpdGggZXhoYXVzdGl2ZSBwaHlzaWNhbCBhY3Rpdml0eS4KVGhlUGh5c2ljaXN0SXNJbiAgIDM4IHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvCkNhbWVyb24gTG92ZXBvc3RlZCA5IHllYXJzIGFnbwpUaGVuIHRoZXJlIHdlcmUgYWN0aXZlIHNlcnZlcnMgdGhhdCB3b3VsZCBsaXRlcmFsbHkga2ljayBwbGF5ZXJzIGlmIHRoZXkgZGlkbiBoYXZlIHRoZSBoYWxvIGluIHRoZSBpbnZlbnRvcnkgb3IgaW4gc29tZSBjYXNlcyBlcXVpcHBlZC4gCkFsd2F5cyBiZWVuIGEgd2luZG93cyB1c2VyIGJ1dCBtYWNPUyBwYXN0IGFkYXB0YXRpb24gdGltZSBpcyBzbyBzaW1wbGUgYW5kIHJlYWR5IHRvIHVzZS4gVGhhdCdzIHdoYXQgSSBsaWtlLCBwbHVzIHBlcmZvcm1hbmNlICggSSBoYXZlIGEgMjAxNSBNYWNCb29rIFBybyBiYXNlIG1vZGVsIGFuZCBvdXRwZXJmb3JtIGFuIEk3ICsgOGdiIHJhbSBBc3VzIFBybyBnYW1pbmcgSSBoYWQgaW4gZGFpbHkgdXNpbmcgKS4gClVzZSB0aGlzIGFzIGEgZ2F1Z2UgZm9yIGhvdyBtdWNoIGZvcmNlIHRvIHVzZSBvbiBhIG5ldyBiYWJ5LiBGb3Igb2xkZXIgYmFiaWVzLCBiZSBxdWl0ZSBmaXJtIGFzIGJhYmllcyBwcmVmZXIgY29uZmlkZW50IGhhbmRsaW5nLiBUaGluayBhYm91dCB3aGF0IHlvdSB3b3VsZCBlbmpveSwgYW5kIHdhdGNoIHlvdXIgYmFieSBmb3IgcmVhY3Rpb25zLi4gCldlIGdhaW4gbm90aGluZyB3aXRoIGEgZmFjZSB0byBmYWNlIG1lZXRpbmcuIApUaGlzIGhhcyBibGVkIG92ZXIgdG8gdGhlIEV4cGFuc2Ugd2hlcmUgdGhleSBtYWRlIEphbWVzIEhvbGRlbiBsb29rIGFuZCBhY3Qgd2F5IHRvbyBtdWNoIGxpa2UgSm9obiBTbm93Li4gClVuaXR5IHdhcyBjcmFwLiBGcm9tIGEgcmliYm9uIHRoYXQgY291bGQgb25seSBiZSBvbiB0aGUgbGVmdCBiZWNhdXNlIHRoYXQgaXMgd2hhdCB0aGV5IHdhbnQgdG8gc28gbWFueSBvdGhlciBjcmFwIHRoaW5ncyBsaWtlIGRlZmF1bHQgYXBwbGljYXRpb24gc3dpdGNoZXIgd2FzIFdpbktleStUYWIgd2hpbGUgQWx0K1RhYiBkaWQgc29tZSBiaXphcnJlIGdyb3VwaW5nIGFuZCBzd2l0Y2hlZCBiZXR3ZWVuIGFwcGxpY2F0aW9ucyBpbnN0ZWFkIG9mIG9wZW4gd2luZG93cyB3aGljaCB3YXMgaWRpb3RpYy4gClNob3cgaGVyIHdoYXQgYmVpbmcgbG92ZWQgZmVlbHMgbGlrZS4gTmV2ZXIgZ290IHRoZSBodWdzIGFuZCBraXNzZXMgZnJvbSBteSBtb20gYW5kIGRhZCBhbmQgdGhleSBoYXZlIG5ldmVyIHNhaWQgIkkgbG92ZSB5b3UiLgoiSGUgaXMgZGVsZWdpdGltaXppbmcgdGhlIEFyYWIgcGFydGllcywgdGhlIEFyYWIgbGF3bWFrZXJzIGFuZCB0aGUgQXJhYiBwdWJsaWMgaW4gZ2VuZXJhbCwiIGhlIHNhaWQuIApJdHMgcmV2ZW51ZSBpbiB0aGUgMTIgbW9udGhzIHRocm91Z2ggSnVuZSAyMDE4IGdyZXcgNTAgcGVyY2VudC4uIAoiSXQgd2FzIGFsbCBhYm91dCBkb2luZyB0aGUgbWF4aW11bSBhbW91bnQgb2YgZGFtYWdlIGFuZCBoaW0gb2J0YWluaW5nIHNvbWUgZm9ybSBvZiBpbmZhbXkuICJIb3dldmVyLCBGQkkgYWdlbnRzIGFuZCBiZWhhdmlvcmFsIHNwZWNpYWxpc3RzIGJlbGlldmUgUGFkZG9jayB3YXMgaW4gcGFydCBpbmZsdWVuY2VkIGJ5IHRoZSBtZW1vcnkgb2YgaGlzIGZhdGhlciwgYSBiYW5rIHJvYmJlciBhbmQgZnVnaXRpdmUgd2hvIGF0IG9uZSBwb2ludCB3YXMgb24gdGhlIEZCSSdzIG1vc3Qgd2FudGVkIGxpc3QuIApGcm9tIEZhY2Vib29rIFRoZSBiZXN0IHdheSB0byBnZXQgbG9hZHMgb2YgcG9rZXIgY2hpcHMgb24gZmFjZWJvb2sgaXMgdG8gYXNrIG90aGVyIHBsYXllcnMgdG8gZG9uYXRlIHRoZWlyIGNoaXBzIHRvIHlvdSBvciBidXkgdGhlbSBmcm9tIHZhcmlvdXMgc2l0ZXMgd2hpY2ggbWF5IGJlIHVudHJ1c3R3b3J0aHkuIE9uZSB3YXkgdG8gZ2V0IGZyZWUgZmFjZWJvb2sgcG9rZXIgY2hpcHMgd291bGQgYmUgdG8uIFdJTiB0aGVtISBZZXMsIHRoZSBnYW1lIG5vdyBnaXZlcyBhIGxvdCBtb3JlIGNoYW5jZXMgdG8gd2luIHBva2VyIGNoaXBzLCBhbmQgYSBsb3QgbW9yZSB0aGFuIGJlZm9yZS4gClR3aWNlIHNoZSB1dHRlcmVkIGhlciB1c3VhbCBjdWNrb28gY2FsbCwgYW5kIHRoZW4gZ2F2ZSBhIGhvYXJzZSwgaHVycmllZCBjYWxsIGFuZCBicm9rZSBkb3duLi4gCkNvcnBvcmF0aW9ucywgYnVyZWF1Y3JhdHMsIGdlbmVyYWxzLCBhbmQgcHJldHR5IG11Y2ggYW55b25lIHdobyBoYXMgZ290dGVuIHVzZWQgdG8gdGhlIGdvb2QgbGlmZSB3aXRob3V0IGhhdmluZyByZWFsbHkgZWFybmVkIGl0LCBPS0IgaGFzIGJlZW4gaW1wbGVtZW50ZWQgYWNyb3NzIHRoZSBib2FyZCBpbiBQYWtpc3RhbidzIDYwIHllYXIgb2xkIGhpc3RvcnkuIFNvIGZvciB0aGUgR2VuZXJhbCB0byBnbyBhaGVhZCBhbmQgZG8gaXQgaXMgbmVpdGhlciBzdXJwcmlzaW5nIG5vciBpcyBpdCB1bnVzdWFsLiBXaGF0J3Mgc2FkIHRvIHNlZSBpcyB0aGF0IHRoZSBnb2F0cyBoZSBoYXMgZmF0dGVuZWQgZm9yIHRoZSBwYXN0IDkgeWVhcnMgYXJlIG5laXRoZXIgd2lsbGluZyB0byBzdGFuZCB1cCBmb3IgdGhlaXIgcGF0cm9uIG5vciBhcmUgdGhleSB3aWxsaW5nIHRvIHRocm93IHRoZWlyIHN1cHBvcnQgYmVoaW5kIGhpbS4gVGhlIG9ubHkgcmVhbCBleGNlcHRpb25zIGJlaW5nIHRoZSBDaGF1ZHJ5cyBvZiBHdWpyYXQgd2hvIGhhdmUgdGhlIG1vc3QgdG8gbG9zZS4gSG93IHdpbGwgdGhleSBuYW1lIHJvYWRzIGluIExhaG9yZSBhZnRlciB0aGVpciBhbmNlc3RvcnMgaWYgdGhlIEdlbmVyYWwgaXMgZ29uZT8gSG93IHdpbGwgdGhleSBkcml2ZSBQb3JjaGVzIHdpdGggQUZSIG51bWJlciBwbGF0ZXMgaW4gTGFob3JlIHdpdGhvdXQgdGhlIEdlbmVyYWw/IExpZmUgaW4gcHJvdmluY2lhbCBHdWpyYXQganVzdCBkb2Vzbid0IHNlZW0gYWxsIHRoYXQgYXBwZWFsaW5nIHRvIHRoZSB3aWx5IENoYXVkcnlzIGFmdGVyIHRoZXkndmUgdGFzdGVkIHRoZSBnb29kIGxpZmUgb2YgTGFob3JlLgpXaGVuIHlvdSBzdWJtaXQgY29udGVudCAoc3VjaCBhcyBhIHBvc3Qgb3IgY29tbWVudCBvciBwdWJsaWMgY2hhdCkgdG8gdGhlIFNlcnZpY2VzLCBhbnkgdmlzaXRvcnMgdG8gYW5kIHVzZXJzIG9mIG91ciBTZXJ2aWNlcyB3aWxsIGJlIGFibGUgdG8gc2VlIHRoYXQgY29udGVudCwgdGhlIHVzZXJuYW1lIGFzc29jaWF0ZWQgd2l0aCB0aGUgY29udGVudCwgYW5kIHRoZSBkYXRlIGFuZCB0aW1lIHlvdSBvcmlnaW5hbGx5IHN1Ym1pdHRlZCB0aGUgY29udGVudC4gUmVkZGl0IGFsbG93cyBvdGhlciB3ZWJzaXRlcyB0byBlbWJlZCBwdWJsaWMgUmVkZGl0IGNvbnRlbnQgdmlhIG91ciBlbWJlZCB0b29scy4gUmVkZGl0IGFsc28gYWxsb3dzIHRoaXJkIHBhcnRpZXMgdG8gYWNjZXNzIHB1YmxpYyBSZWRkaXQgY29udGVudCB2aWEgdGhlIFJlZGRpdCBBUEkgYW5kIHZpYSBvdGhlciBzaW1pbGFyIHRlY2hub2xvZ2llcy4gClNvbWV0aGluZyBsaWtlIHRoYXQuLiAKQmFzaWNhbGx5IHdoYXQgeW91IGp1c3QgcmVndXJnaXRhdGVkIGJhY2sgdG8gbWUuIApGcnVpdHMgYnVpbGQgZmx1aWRzIGFuZCBwdXJnZSB0b3hpbnMsIGFuZCB0aGV5IHRlbmQgdG8gYmUgY29vbGluZyBieSBuYXR1cmUuIApJZiBhIHBvc3QgaXMgY29tcGxldGVseSBvZmYgdG9waWMsIHBsZWFzZSByZXBvcnQgdGhlIHBvc3QgYW5kIG1lc3NhZ2UgdGhlIG1vZHMuCkl0IHRvb2sgYSB0cnVseSBkZWRpY2F0ZWQgYXJ0aXNhbiB0byBsb29rIGFsbCB0aGlzIGNyYXp5IGluIHRoZSBleWUgYW5kIHNheSwgIkkgd2FudCB5b3UgaW5zaWRlIG1lLiIuIApUaGUgdGhyZWUgc3BvcnQgYXRobGV0ZSBpcyBoYXZpbmcgYSBnb29kIHNlbmlvciB5ZWFyIHNvIGZhci4gT24gdGhlIHZvbGxleWJhbGwgY291cnQsIHNoZSBsZWQgdGhlIHRlYW0gd2l0aCA3MyBibG9ja3MgYW5kIHdhcyBzZWNvbmQgd2l0aCAxODcga2lsbHMsIGhlbHBpbmcgTWVhZCByZWFjaCB0aGUgQ2xhc3MgNEEgc3RhdGUgdG91cm5hbWVudC4gRHVyaW5nIHRoZSB3aW50ZXIsIHNoZSB3YXMgdGhlIGxlYWRpbmcgc2NvcmVyIGFuZCByZWJvdW5kZXIgZm9yIHRoZSBnaXJscyBiYXNrZXRiYWxsIHRlYW0sIHdobyBhbHNvIHJlYWNoZWQgdGhlIENsYXNzIDRBIHN0YXRlIHRvdXJuYW1lbnQuLiAKSW4gYW4gdXBjb21pbmcgT3ByYWggaW50ZXJ2aWV3LCBQYWxpbiBzYXlzIHRoYXQgaGVyIGRhdWdodGVyIGJhYnkgZmF0aGVyLCB0aGUgZXZlciBuYWtlZCBMZXZpIEpvaG5zdG9uICh3aG8gd2lsbCBiZSBwb3NpbmcgaW4gUGxheWdpcmwgd2l0aCBub3RoaW5nIGJ1dCBhIGhvY2tleSBzdGljayksIHNob3VsZCBjb21lIGhvbWUgZm9yIFRoYW5rc2dpdmluZyBzaW5jZSB0aGV5IGEgYmlnIGxvdmluZyBmYW1pbHkgYW5kIHdhbnQgdG8gYnJpbmcgaGltIGJhY2sgaW50byB0aGUgZm9sZC5XZSBhbHNvIGxlYXJuLCBmcm9tIE1zLiAKSW4gMjAxNywgdGhlICBtYXJrZXQgaGF2ZSBwcm9maXRlZCBhIHRvdGFsIG9mIDY1NSBtaWxsaW9uIGluIHJldmVudWUuIApGb3IgZXhhbXBsZSwgSSBoYWQgYSBzZXZlcmUgYWN1dGUgaW5mZWN0aW9uIHRoYXQgbGFuZGVkIG1lIGluIHRoZSBFUi4gClBpbmtOaW5qYUtpdHR5IHUKV2hlbiBJIHNhdyB0aGlzIHNlcmllcyBvZiB0YWJsZXMgaW4gYSB2b2x1bWUgb2YgdGhlIEpvdXJuYWwgb2YgdGhlIEZyYW5rbGluIEluc3RpdHV0ZTEgaXQgc3RydWNrIG1lIHRoYXQgSSByZWFsbHkgZGlkbiByZWNhbGwgdmVyeSBtYW55IGluc3RhbmNlIGF0IGFsbCBvZiBzZWVpbmcgY2hyb25vbG9naWNhbCBoaXN0b3J5IG9mIHNjaWVuY2UgKGV0Yy4pIGRpc3BsYXlzIG9mIGluZm8gaW4gYW50aXF1YXJpYW4gc2NpZW50aWZpYyB0ZXh0cy4gVGhpcyBvbmUgd2FzIGEgdGFidWxhciBwcmVzZW50YXRpb24gb2YgMzQgbWV0YWxzLCBsaXN0ZWQgYWxwaGFiZXRpY2FsbHksIGFuZCBsaXN0aW5nIHRoZSB5ZWFyIG9mIGRpc2NvdmVyeSBhbmQgZGlzY292ZXJ5IGZpcnN0IHRoYXQgd2FzIHRoZSB1bnVzdWFsIHBhcnQuIEkgcmVjYWxsIHRoYXQgVGhvbWFzIFlvdW5nICgxNzczIDE4MjkpIEEgY291cnNlIG9mIGxlY3R1cmVzIG9uIG5hdHVyYWwgcGhpbG9zb3BoeSBhbmQgdGhlIG1lY2hhbmljYWwgYXJ0cyBjb250YWluZWQgYSBzZXJpZXMgb2YgdGltZWxpbmVzIGZvciB0aGUgZGlmZmVyZW50IGRpc2NpcGxpbmVzIChhIHNhbXBsZSBvZiB3aGljaCBpcyBiZWxvdykgaW5jbHVkaW5nIGFuIHVuZXhwZWN0ZWQgZW50cnkgZm9yIG9wdGljcy4KV2VpbnN0ZWluJ3MgbGF3eWVyIGFza3MganVkZ2UgdG8gdG9zcyBBc2hsZXkgSnVkZCBsYXdzdWl0CklmIHNvbWVvbmUgaGFzIHZhbGlkIGNpdGl6ZW5zaGlwIHRvIHF1YWxpZnkgZm9yIFByZXNpZGVuY3ksIHRoZW4gbGV0IHRoZW0uIApTbywgc2hlIGFuZCBoZXIgc2lzdGVyIGRpc2N1c3NlZCBpdCBhbmQgZm91bmQgdGhlIHBlcmZlY3QgcGxhY2UuIApJZiB5b3Ugd2VyZSBlbXBsb3llZCBiZWZvcmUsIGFuZCBjYW4gZG8gYW55IHdvcmsgZnJvbSBob21lLCBhcnJhbmdlIHRvIGRvIHNvIChhcyBsb25nIGFzIHlvdXIgcGh5c2ljaWFuIGFwcHJvdmVzKS4gCkFzIHNvbWVvbmUgZWxzZSBzYWlkLCBqdW1waW5nIHdpdGggYXJtcyBieSB5b3VyIHNpZGUgaXMgdW5uYXR1cmFsIDEgcG9pbnQgIHN1Ym1pdHRlZCAyIGRheXMgYWdvS2ltcGVtYmUgbWFrZXMgaGltc2VsZiBiaWdnZXIgc3VyZSwgYnV0IGhpcyBhcm1zIGFyZSBpbiBhIG5hdHVyYWwgcG9zaXRpb24gYW5kIG9idmlvdXNseSBpdCB1bmludGVudGlvbmFsLiBBcyBzb21lb25lIGVsc2Ugc2FpZCwganVtcGluZyB3aXRoIGFybXMgYnkgeW91ciBzaWRlIGlzIHVubmF0dXJhbEkgYWdyZWUgd2l0aCB0aGlzLiAKWW91IHJlYWxseSBhZGRlZCBzb21lIG9mIG9uZXMgb3duIHRpbWUgYW5kIHRoZXJlZm9yZSBrbm93bGVkZ2UgZXZlbiBzbyB0aGUgc3RhcnQgb2ZmIHVwIHJpY2hlc3NlIHdhcyBhIHJlYWwgZ2lmdCBqdXN0IGZvciBhIGxvdywgbG93IHZhY2F0aW9uIHJlbnRhbCBjaGFyZ2Ugb3V0IG9mIDUlLlRoZSBwcm9mZXNzaW9uYWwgcGVyc29uIGNvbnN1bHRhbnQgbWFkZSB1cCBhbiBvZmZpY2Ugd2hlbiBpdCBjb21lcyB0byBhIHNtYWxsIHN1cHBvcnQgYWRtaW5pc3RyYXRvciBpbiB0aGVpciBjb3Jwb3JhdGUgc2VjcmV0IGhlYWRxdWFydGVycyBhbmQgcHJvY2VlZGVkIHRvIHJlYWQgdGhlIHN0YXRlIG9mIGFmZmFpcnMuIEhlIGJhbmRzIHRoZSBvcmNoYXJkcyB0aGF0IG1vdmVkIHRoZSBvbGl2ZXMgYW5kIGNhbnZhc2VkIHRoZSBwbGFudGluZywgY3VsdGl2YXRpbmcgYW5kIGhhcnZlc3RpbmcgdGFjdGljcy4gTmV4dCB5b3VyIHB1cHB5IGV4YW1pbmVkIHNvbWUgc29ydCBvZiBzdG9yYWdlIGFuZCBhZnRlciB0aGF0IHJpcGVuaW5nIGFjdC4gCkNldCBpbXByaWFsaXNtZSBjb25vbWlxdWUgZG91YmwgZGUgdGVycmV1ciBuIHBhcyBzYW5zIHZvcXVlciB1biBjZXJ0YWluIGNvbG9uaWFsaXNtZSBtYXJjaGFuZCBJbCByYXBwZWxsZSB0cnMgdHJhbmdlbWVudCBjZSBxdSBzZSBwYXNzYSBkYW5zIGxlcyBsZXMgTW9sdXF1ZXMgaWwgeSBhIHF1YXRyZSBzaWNsZSBkai4gCk15IGV4cGVyaWVuY2UgaXMgdGhhdCBteSBkZWNsYXdlZCBjYXQgaXMgbGVzcyBjb21mb3J0YWJsZSBvciBhY3RpdmUgdGhhbiBteSBvdGhlcnMgaGF2ZSBiZWVuLiBTaGUgMyBhbmQgYWN0cyBsaWtlIGFuIG9sZCBsYWR5LiBNeSAxMiB5ZWFyIG9sZCBzdGlsbCB3cmVja3MgaGF2b2suIEdyYW50ZWQsIG15IGNhcnBldHMgd291bGQgbG9vayBhIGxvdCBuaWNlciBpZiB0aGUgb2xkZXIgY2F0IGRpZG4gaGF2ZSBjbGF3cywgYnV0IHNoZSBoYXBweSBhbmQgaGVhbHRoeS4KQXRvbWljbWFnbmV0ICAxNyBwb2ludHMgIHN1Ym1pdHRlZCAxMCBob3VycyBhZ28KVGhlIGdhbWUgdXNlZCB0byBiZSBhIGxvdCBtb3JlIGFib3V0IGluc3RpbmN0IGFuZCByZWFkaW5nIHBlb3BsZS4gSW4gdGhlIDgwcyBhbmQgOTBzIHRoZSBnYW1lIHdhcyBoZWFsdGh5IGJlY2F1c2UgdGhlcmUgd2FzIGEgZ29vZCBzaGFyayAoZ29vZCBwbGF5ZXIpIHRvIGZpc2ggKGJhZCBwbGF5ZXIpIHJhdGlvLiBJRSwgbG90cyBvZiBwZW9wbGUgcGxheWVkIGZvciBmdW4sIGFuZCB3ZXJlIG9rIHdpdGggbG9zaW5nIG1vbmV5IGRvaW5nIHNvLiBBbmQgaW4gcmV0dXJuIHRoaXMgYWxsb3dlZCBzb21lIHBybyBwbGF5ZXJzIHRvIGVhcm4gYSBuaWNlIHByb2ZpdCBpZiB0aGV5IHB1dCBpbiB0aGUgdGltZSBhbmQgZWZmb3J0IGludG8gbGVhcm5pbmcgdGhlIGdhbWUuCkNydWlzZSBzdGFmZmVycyByZWd1bGFybHkgZW5nYWdlIGluIHN1YmxpbWluYWwgbWVzc2FnaW5nOiBUaGUgZmlyc3QgdGhpbmcgZ3Vlc3RzIGxpa2VseSBzZWUgaW4gdGhlaXIgY2FiaW5zIGlzIGEgZ2xlZWZ1bCBqaW5nbGUgYWJvdXQgaGFuZHdhc2hpbmcgbG9vcGluZyBvbiB0aGVpciB0ZWxldmlzaW9uIHNjcmVlbi4gSXQncyBhcyBjYXRjaHkgYXMgYSBLYXR5IFBlcnJ5IHNvbmcgYW5kIG1lYW50IHRvIHN0ZWVyIHlvdSB0b3dhcmQgUHVyZWwgcHVtcHMgYXJvdW5kIHRoZSBzaGlwLCBlYWNoIGNhcmVmdWxseSBwb3NpdGlvbmVkIGF0IGhpZ2ggdHJhZmZpYyBqdW5jdGlvbnMgKHRoaW5rIGVudHJhbmNlcyB0byB0aGUgbWFpbiBkaW5pbmcgaGFsbHMgYW5kIHRoZWF0cmVzKSBieSBzZW5pb3Igc3RhZmYuIEFsb25nIHdpdGggdGhlIGVtY2VlcycgYmFudGVyIGF0IGxhcmdlIGdyb3VwIGV2ZW50cyAgICJIYXZlIHlvdSB3YXNoZWQgeW91ciBoYW5kcyA1MCB0aW1lcyB0b2RheT8gSSBoYXZlISIgICB0aGUgamluZ2xlIGlzIHBhcnQgb2YgdGhlIGNyZXcncyB1bndhdmVyaW5nIGVmZm9ydCB0byBzdGF2ZSBvZmYgYSBwb3RlbnRpYWwgTm9yb3ZpcnVzIG91dGJyZWFrLgpTZXJpb3VzbHkgaSB1bmRlcnN0YW5kIHRoZXJlIGEgbG90IG9mIGJpYXMgYWdhaW5zdCBoaW0gYnV0IGxldCBiZSByZWFzb25hYmxlLiBUaGUgbWFuIHBsYXllZCBoaXMgZmlyc3QgZ2FtZSBpbiBtb250aHMgYSBmZXcgZGF5cyBhZ28gYW5kIGhhcyBkb25lIHZlcnkgd2VsbCBjb25zaWRlcmluZy4gClRoZSB3aW5lIGZyaWRnZSBzcGFjZSwgdGhlcmUgaXMgcm9vbSBmb3IgbmV3Y29tZXJzLiAKVGhlIHRydXN0IHdvdWxkIHNldCB0aGUgcnVsZXMgYXJvdW5kIGRhdGEgdXNlLCBtYWtlIGl0IG9wZW4gYW5kIGFjY2Vzc2libGUgdG8gcGVvcGxlIHdoaWxlIG9mZmVyaW5nIHByaXZhY3kgcHJvdGVjdGlvbiBhbmQgZW5zdXJlIHRoYXQgU2lkZXdhbGsgTGFicyBkb2VzIG5vdCByZWNlaXZlIGFueSBzcGVjaWFsIHN0YXR1cyBvciByaWdodHMgd2hlbiBpdCBjb21lcyB0byBkYXRhIGFjY2Vzcy4KIldlJ2xsIHdhaXQgYW5kIHNlZSB3aGF0aGFwcGVucywiIE1yIFNhcmdlbnQgc2FpZCBvZiB0aGUgbmV3IGxlZ2lzbGF0aW9uLiAiV2UgdGhpbmsgdGhlIGdvdmVybm1lbnQncyBhY3Rpb25zIGFyZSBzZW5zaWJsZSBhbmQgbG9naWNhbCBhbmQgd29yayBmb3IgdGhlIGluZHVzdHJ5IGFzIHdlbGwgYXMgcHJvdmlkZSBoYXJtIG1pbmltaXNhdGlvbiBtZWFzdXJlcy4iIE1yIEZlYXJubGV5IGFkZGVkIHRoYXQgdGhlIGluY3JlYXNlIGZyb20gJDIwMDAgdG8gJDUwMDAgY2FzaCBwYXltZW50cyBmb3Igd2lubmluZ3Mgd291bGQgYmUgbW9yZSBjb252ZW5pZW50IGZvciBjdXN0b21lcnMuLiAKSSB3YXMgYSBiaWN5Y2xlIGFzc2VtYmxlciBhdCBXYWxtYXJ0IGZvciA4IG9mIG15IDExIHllYXJzIHRoYXQgSSB3b3JrZWQgdGhlcmUgYW5kIEkgY2FuIGNvbmZpcm0gdGhhdCBBTlkgYmljeWNsZSBhdCBXYWxtYXJ0IGlzIGNoZWFwbHkgbWFudWZhY3R1cmVkIHRyYXNoLiBIZWxsLCBoYWxmIG9mIHRoZSBiaWtlcyBjb21lIG9mZiB0aGUgdHJ1Y2tzIGFscmVhZHkgZGFtYWdlZC4gSSBzcGVudCBtb3JlIHRpbWUgcmVwYWlyaW5nIGJpa2VzIHRoYW4gYWN0dWFsbHkgYXNzZW1ibGluZyBuZXcgb25lcy4uIApIb3dldmVyLCBpdCdzIG5vdCBzb21lIGhpZGRlbiB0aGluZyBvciBzb21lIGZvcmJpZGRlbiB0aGluZyB0byB0YWxrIGFib3V0LiAKRm9yIHRoZSBnYW1lIGl0c2VsZiwgYXMgbG9uZyBhcyBSaW90IGNvbnRpbnVlcyB0byB1cGRhdGUgdGhlIGdhbWUgb24gYSBjb25zdGFudCBiYXNpcyBhbmQgZmluZCB3YXlzIHRvIGZpbmQgbmV3IHBsYXllcnMsIEkgbm90IHdvcnJpZWQuIFRoZXkgYWxyZWFkeSB1cGRhdGVkIHRoZSBncmFwaGljcywgdGhlIGNsaWVudCwgdGhlIFVJLCBtb3N0IGNoYW1wcyAoZ2FtZXBsYXkgb3IgdmlzdWFsKS4gCkhlIHRoZW4gcGxheSB0aGUgZ2FtZSB0byB0aGUgcG9pbnQgdGhhdCBObyBPbmUgaXMgYXR0YWNraW5nIGhpbSBmb3IgaGlzIGhpZ2hseSBhZGRpY3RpdmUgZHJ1Zywgd2UgYXR0YWNrIHRoZSBkb2N0b3JzIHdobyBwcmVzY3JpYmVkIGl0LmhlIHRhbGsgdG8gZXZlcnlvbmUgYWJvdXQgaG93IGl0IGlzIHZpdGFsIHRoYXQgd2UgYWxsIGhlbHAgb3VyIGZlbGxvdyBtYW4uIFRoYXQgd2Ugc2hvdWxkIGFsbCBzaGFyZSB0aGUgc3VubGlnaHQgb2Ygc3VjY2VzcyBhbmQgcHJvc3Blcml0eSB3aXRoIHRob3NlIHdobyBoYXZlIGxlc3MgdGhhbiB3aGF0IHdlIGhhdmUuIApBbHNvLCB3aGF0IHBlb3BsZSBuZXZlciB0YWxrIGFib3V0IHdpdGggdGlwIGJhc2VkIGVtcGxveW1lbnQgaXMgaW5jZW50aXZlLiBJZiBJIGFtIG1ha2luZyB0aGUgc2FtZSBhbW91bnQgb2YgbW9uZXkgYXMgdGhhdCBsYXp5IHNoaXQgb2YgYSBjb3dvcmtlciB0aGF0J3MgYWx3YXlzIG9uIGhpcyBwaG9uZSwgYml0dGVyIHRvIHRhbGsgdG8sIGhhcyBhbG1vc3Qgbm8gY3VzdG9tZXIgc2VydmljZSBza2lsbHMsIHRoZW4gd2h5IHNob3VsZCBJIHRyeSB0byB3b3JrIGFueSBoYXJkZXI/IEFmdGVyIGFsbCwgYSBzZXJ2ZXIgaXMgcGFydCBvZiB0aGUgZXhwZXJpZW5jZSB3aGVuIHlvdSBnbyBvdXQgdG8gZWF0LiBQYXJ0IG9mIHRoZSByZWFzb24gdGhleSdyZSBzbyBjYWxtIHdoZW4geW91IHNheSBzb21lIGNvbmRlc2NlbmRpbmcgc2hpdCBpcyBiZWNhdXNlIHRoZXkncmUgaG9wcGluZyBmb3IgdGhhdCB0aXAuIApJZiBzbywgdGhlIFNvdXRoIEtvcmVhIENhc3VhbCBFbmNvdW50ZXJzIGNhdGVnb3J5IGlzIHRoZSBpZGVhbCBwbGFjZSB0byBzdGFydCB5b3VyIHBhcnRuZXIgc2VhcmNoLiBUaGUgbW9kZXJuIHNleCB0cmFkZSBpbiBCdXNhbiBjYW4gYmUgZGF0ZWQgYmFjayB0byB0aGUgMTg3MHMgd2hlbiB0aGUgcG9ydCB3YXMgb3BlbmVkIGFuZCBhIGRpcGxvbWF0aWMgYWdyZWVtZW50IHdhcyBlbmFjdGVkIHRvIG9mZmVyIGNvbWZvcnQgc2VydmljZXMgdG8gdmlzaXRpbmcgc2FpbG9ycy4gRXJvdGljIE1hc3NhZ2UgUGFybG91cnMgVGhlcmUgYXJlIHBsZW50eSBvZiBwYXJsb3VycyBhcm91bmQgQnVzYW4gdGhhdCBwcm92aWRlIGhhcHB5IGVuZGluZ3MgdGhvdWdoIG5vdCBhbGwgd2lsbCBwcm92aWRlIHNlcnZpY2VzIHRvIGZvcmVpZ25lcnMuIApJIG1hZGUgZWFjaCBzdHVkZW50IGEgZm9sZGVyIHRoYXQgdGhleSBrZWVwIGluIGNsYXNzLiBJbiBhbiBpZGVhbCB3b3JsZCB0aGV5IHdvdWxkIGtlZXAgdGhlaXIgZm9sZGVycyBvcmdhbml6ZWQgYnkgaGlnaCBzY2hvb2wgbGlrZSBJIGRpZCwgYnV0IEkgZm91bmQgbW9zdCBraWRzIGp1c3Qgd2VyZW4gU28gSSB0ZWxsIHRoZW0gdGhleSBjYW5ub3QgdGFrZSBpdCBmcm9tIHRoZSByb29tLiAKTHlyaWMgaXMgc3RpbGwgcmlnaHQgb24gdGhlIG1vbmV5LCBzYWlkIEpvaG5zb24gb2YgR2F5ZXMgSW5uZXIgQ2l0eSBCbHVlcywgdGhlIGZpcnN0IHNpbmdsZSBvZmYgaGVyIGFsYnVtIGFuZCB0aGUgdGhpcmQgcmVsZWFzZSBvZiBHYXllcyBzZW1pbmFsIDE5NzEgYWxidW0sIFdoYXQgR29pbmcgT24uClNlaW5lIExhZ2UgbWFjaHQgZGFzIEhvdGVsIHp1bSBpZGVhbGVuIE9ydCBmciBNZWV0aW5ncywgU2VtaW5hcmUgb2RlciBLb25mZXJlbnplbi4gWnVnbGVpY2ggc3RlaHQgZGVyIE5hbWUgZnIgZWluIFBsdXMnIHp1ciBsb2thbGVuIGt1bGluYXJpc2NoZW4gTGFuZHNjaGFmdC4gCkFnaXRhdGlvbiBmb3IgYSBiYW4gb24gImNvdyBzbGF1Z2h0ZXIiIGlzIGJlaXNpY2FsbHkgcmVsaWdpb3VzLCBmb3IgdGhlIGNvdyBhbmQgdGhlIGJ1bGwgYXJlIHRoZSBtb3N0IHNhY3JlZCBvZiBhbmltYWxzIHRvIHRoZSBIaW5kdS4gVGhlIG1vdmVtZW50IHBvcHVsYXJseSByZWZlcnMgdG8gImNvdyBzbGF1Z2h0ZXIsIiBidXQgaXRzIGFpbSBpcyBwcm90ZWN0aW9uIG9mIGFsbCBjYXR0bGUuIFRoZSBtb3ZlbWVudCBoYXMgd29ya2VkIHVwIHNvIG11Y2ggcG9saXRpY2FsIHN0ZWFtIHRoYXQgUGlpbWUgTWluaXN0ZXIgTmVocnUgaGFzIGJlZW4gZm9yY2VkIHRvIHByb2NlZWQgY2F1dGlvdXNseSBvbiB3aGF0IGhlIGNvbnNpZGVycyBvbmUgb2YgSW5kaWEncyBtb3N0IG5lZWRlZCBDb3JuZXJzdG9uZSBFdmVudCBUdWVzZGF5IEpFRkZFUlNPTiBBIHNob3J0IGNlcmVtb255IG1hcmtpbmcgdGhlIGxheWluZyBvZiB0aGUgY29tZXIgc3RvbmUgZm9yIHRoZSBuZXcgYnVpbGRpbmcgYXQgdGhlIEplZmZlcnNvbiBDb3VudHkgSG9zcGl0YWwgYW5kIEhvbWUgd2lsbCBiZSBoZWxkIFR1ZXNkYXkgYWZ0ZXJub29uLCBpdCB3YXMgYW5ub3VuY2VkIHRvZGF5IGJ5IFN1cHQuIApGb3IgdGhpcyByZWFzb24gaXQgaXMgaW1wb3J0YW50IHRvIHBsYXkgdG8gdGhlIGJlc3Qgb2YgeW91ciBhYmlsaXRpZXMgYXQgYWxsIHRpbWVzLiBZb3UgbXVzdCBsZWFybiBhcyBtdWNoIGFib3V0IHlvdXIgb3Bwb25lbnRzJyBwbGF5IGFzIHBvc3NpYmxlLiAKT3RoZXIgdG9waWNzIGluY2x1ZGUgdW5kZXJzdGFuZGluZyB0aGUgY29uY2VwdGlvbiBwcm9jZXNzLCByZWZsZXhvbG9neSBmb3IgcmVwcm9kdWN0aXZlIG9yZ2FucywgYXNzaXN0ZWQgcmVwcm9kdWN0aXZlIHRlY2hub2xvZ2llcyBsaWtlIGluIHZpdHJvLCBhbmQgZmVtYWxlIGFuZCBtYWxlIGFuYXRvbXkuIApBY3RzICAgd2l0aCBJdGFsaWFuIGFuZCBFbmdsaXNoIFZlcnNpb24gKEFicmlkZ2VkIFZvY2FsIFNjb3JlKSBCMDAyRUVTNUZDIEZCMi4gNCBBcHIgMjAwNiAuIApGYWN1bHR5IGNhbiB2aXNpdCBvdXIgcHJlc2VudGF0aW9uIHBhZ2UgZm9yIHNwZWNpZmljIHRvcGljcyBvciBjaG9vc2Ugb25lIHRoYXQgYmVzdCBmaXRzIHRoZWlyIGNsYXNzIGFuZCByZXF1ZXN0IHRoZSBwcmVzZW50YXRpb24gb3VyIG9ubGluZSBwcm9jZXNzLiAKTXkgdGhvdWdodHMgYW5kIHBvc2l0aXZlIHZpYmVzIGFyZSB3aXRoIHlvdSBhbmQgeW91ciBncm93aW5nIGZhbWlseS4gR29vZCBsdWNrIHdpdGggdGhlIGxhd3llciwgSSBhbHNvIG1ha2Ugc3VyZSBNSUwgbmV2ZXIgbWV0IHRoaXMga2lkIGluIGhlciBsaWZlLiAKSSB3b3VsZCByZWNvbW1lbmQgbnVtYmVyZWQgcG9rZXIgY2hpcHMgVGhleSBoYXZlIGNvbXBldGl0aXZlIHByaWNlcywgYSBncmVhdCBncmFwaGljIGRlc2lnbnMgdGVhbSB3aG8gYXJlIHZlcnkgZnJpZW5kbHkgYW5kIGVhc3kgdG8gd29yayB3aXRoIGJ1dCBtb3N0IGltcG9ydGFudGx5IHRoZWlyIGRlc2lnbnMgYXJlIHRoZSBtb3N0IHVuaXF1ZSBJIGhhdmUgc2VlbiAuIApUaGlzIGlzIHdoYXQgd2FzIGRvbmUgb24gdGhlIERpc2NvcmQgY2hhbm5lbC4gCkkgaGFkIGEgY2xvc2UgZnJpZW5kIChKYW5lKSB3aG9zZSBmaWFuY2VlIChTYW0pIGhhZCBhIHJlYWxseSBjbG9zZSBleGdmL2JmZiB3aG8gaGUga25ldyBzaW5jZSBjaGlsZGhvb2QuIEhpcyBiZmYgd2FzIHZlcnkgc3VwcG9ydGl2ZSBvZiBoaXMgcmVsYXRpb25zaGlwIHdpdGggSmFuZSBhbmQgdGhleSBhbGwgaHVuZyBvdXQgdG9nZXRoZXIsIGJ1dCBTYW0gYWxzbyBodW5nIG91dCB3aXRoIGhpcyBiZmYgYWxvbmUuIEV2ZW50dWFsbHkgSmFuZSBmb3VuZCBvdXQgU2FtIGNoZWF0ZWQsIGJlY2F1c2UgaGltIGFuZCBoaXMgZXggd2VyZSBuZXZlciByZWFsbHkgb3ZlciBlYWNoIG90aGVyLgpMaXR0bGUgZXhjZXB0IHRoZSBvbGQgaWRlYSB0aGF0IHRoZSBVUyBjYW4gYmUgbWFkZSBzZWN1cmUgYnkgY3JlYXRpbmcgZm9yZWlnbiBwb2xpY3kgc3VjY2Vzcy4gQSBzcGVjdGFjdWxhciBzcGVjdGFjbGUgb3V0c2lkZSB0aGUgVVMgY2FuIGdlbmVyYXRlIHRoZSBtdWNoIG5lZWRlZCBib25kIHRvIGNvbm5lY3QgdGhlIHR3byBwb2xlcy4uIApJIGFncmVlIHdpdGggZXZlcnl0aGluZyB5b3Ugc2FpZC4gTm93IHRlbGwgbWUgaG93IGRvIHlvdSBmaXggaXQ/IE5vdCBhIGdlbmVyYWwsICJIb3cgZG9lcyBvbmUgZml4IHRoZSBjdXJyZW50IG1lc3M/IiBidXQgWU9VLCBob3cgZG8gWU9VIGZpeCBpdD8KV2FzIGl0IHRvIGNoYW5uZWwgdGhlIGFuZ2VyIGhlIG1heSBoYXZlIGZlbHQ/IEluc3RlYWQgb2YgZ2V0dGluZyBoaW0gaGVscD8gV2FzIGl0IHRoZSBGQkkgd2hvIGNyZWF0ZWQgdGhpcyBzY2VuYXJpbyBhbmQgaG93IGl0IHdhcyBnb2luZyB0byBwbGF5IG91dD8gV2FzIGl0IGEgRkJJIHRlcnJvcmlzdCBwbG90IHRvIGhhcm0gb3VyIGNpdGl6ZW5zOyBhbHJlYWR5IGRldGVyaW9yYXRpbmcgcHJpdmFjeT8gSXMgdGhpcyBhcnRpY2xlIHByb3BhZ2FuZGE/IFNvIHRoZXkgY2FuIGhhdmUgY29tcGxldGUgY29udHJvbCBvdmVyIHRoZSBsaXZlcyBvZiB0aGVyZSBmZWxsb3cgY291bnRyeSBtZW4uIExldHMgc2VlIHdobyB0aGUgRkJJIHdhbnRzIHRvIG1ha2UgYSBjcmltaW5hbCBuZXh0LiAKIlRoZSByZXN0IGlzIHdoZXRoZXIgeW91IGNhbiBob2xkIHlvdXJzZWxmIHRvZ2V0aGVyIHVuZGVyIHNldmVyZSBwcmVzc3VyZS4gQ2FuIHlvdSBwbGF5IGEgYmx1ZmYgZnJvbSB0aGUgaGVhcnQsIGFzIGlmIHlvdSByZWFsbHkgaGF2ZSBnb3QgdHdvIGFjZXM/IEF0IHRoZSBwb2tlciB0YWJsZSwgaW4gaGlzIGF0dGl0dWRlIHRvIHdpbm5pbmcgYW5kIGxvc2luZywgYSBtYW4gc2hvd3MgaGlzIHRydWUgc2VsZi4iClRoZXJlIGFyZSBwcm9ncmFtcyBwZW9wbGUgY2xhaW0gdG8gYmUgYWJsZSB0byBjaGVhdCB3aXRoIHRoYXQgYXJlIHNhaWQgdG8gZmluZCBwYXR0ZXJucyB0byB0aGUgcmFuZG9tbmVzcywgYnV0IHRoZXkgb2Z0ZW4gZmFpbCBhbmQgbGlrZWx5IG9ubHkgd29yayBpZiBsdWNreS4gSXQgY2F1c2VzIHRoZXNlIHBsYXllcnMgdG8gcGxheSBtdWNoIGJldHRlciB3aGVuIHRoZXkgdXNlIHRoaXMgaW5mb3JtYXRpb24uIEJ1dCB5b3UgY2FuIHVzZSB0aGVzZSB0b29scyBhcyB3ZWxsIGFzIGltcHJvdmUgaW4gZ2VuZXJhbCBhdCBwb2tlci4gClRoaXMgd2lsbCB3aW4geW91IGEgbG90IG9mIG1vbmV5LCBob3dldmVyLCB0aGUgc3RyYXRlZ3kgaXMgZXhwbG9pdGFibGUuIFlvdXIgb3Bwb25lbnQgY2FuIGNoYW5nZSBoaXMgbWluZCBhbmQgbm93IGhlIGNob3NlcyBhbHNvIHRvIGZvbGQsIGNhbGwgYW5kIHJhaXNlIGFuZCBub3cgaGUgd2FudHMgdG8gYW5kIGlzIGFibGUgdG8gZXhwbG9pdCB5b3UgYmFjay4gSW4gdGhlIHNob3J0IHJ1biwgd2hpbHN0IHlvdXIgb3Bwb25lbnQgaXNuIGF3YXJlIG9mIGhpcyBob3JyaWJsZSBwbGF5LCBpdCBpcyBtb3JlICtFViB0byBhZG9wdCBhIHN0cmF0ZWd5IHRoYXQgY2FuIGJlIGV4cGxvaXRlZCBpbiB0aGUgZnV0dXJlLiAKU2ltaWxhcmx5LCB0aGUgd29yZCBtYXJpanVhbmEgZXhpc3RlZCBiZWZvcmUgSGVucnkgSi4gQW5zbGluZ2VyIGJlZ2FuIHVzaW5nIGl0LiBJdCB3YXMgYSBmaW5lIHdvcmQgd2l0aCBubyByYWNpc3QgaW1wbGljYXRpb25zLCBob3dldmVyIGhlIGJlZ2FuIHVzaW5nIGl0IHdpdGggZXhwbGljaXQgcmFjaXN0IGludGVudGlvbnMgYW5kIGhlIGtlcHQgdXNpbmcgaXQgdGhhdCB3YXkgZm9yIHllYXJzLiBCZWZvcmUgaGltIHBvcHVsYXJpemluZyB0aGUgdGVybSwgdmVyeSBmZXcgcGVvcGxlIGluIHRoZSBVUyBrbmV3IHRoYXQgd29yZCwgYW5kIGFmdGVyd2FyZHMgdGhleSBvbmx5IGtuZXcgb2YgaXQgdGhyb3VnaCBBbnNsaW5nZXJzIHJhY2lzdCB1c2FnZSBvZiB0aGUgd29yZCB0aHJvdWdoIGhpcyBwcm9wYWdhbmRhLCBjcmVhdGluZyBhIHN0cm9uZyBhc3NvY2lhdGlvbiB0aGF0IHN0aWxsIGV4aXN0cyB0byB0aGlzIGRheSBhbmQgaGFzIGNvbnRpbnVlZCB0byBiZSBwcm9wYWdhdGVkIHRocm91Z2ggdGhlIHdhciBvbiBkcnVncy4KSG9uZXN0IGFuc3dlcjogSXQgZWZmZWN0aXZlbHkgYSAibm90IHRoaXMgc2hpdCBhZ2FpbiIgcmVhY3Rpb24gYWZ0ZXIgR2hvc3RidXN0ZXJzIDIwMTYgbGl0ZXJhbGx5IHRyaWVkIHRvIG1ha2UgImlmIHlvdSBoYXRlIHRoaXMgbW92aWUsIHlvdSBzZXhpc3QiIHBhcnQgb2YgdGhlaXIgbWFya2V0aW5nIGFuZCBwcm9tb3Rpb24uIEl0IHNlZW4gYXMgYSBjb3ZlciBmb3IgdGhlIG1vdmllIGJlaW5nIGJhZCwgdHJ5aW5nIHRvIHBhaW50IGNyaXRpY3MgYXMgYmlnb3RzIHRvIHNvY2lhbGx5IHNoYW1lIHBlb3BsZSBpbnRvIGxpa2luZyBhIHN1YiBwYXIgZmlsbS4gCk5ld3MgMTIgTmV3IEplcnNleSB3YW50cyB0byBhbm5vdW5jZSB5b3VyIHdlZGRpbmcuIElmIHlvdSB3ZXJlIG1hcnJpZWQgaW4gdGhlIHBhc3QgOTAgZGF5cywgcGxlYXNlIHN1Ym1pdCB5b3VyIHBob3RvcyB2aWEgVHdpdHRlciBvciBJbnN0YWdyYW0gdXNpbmcgSnVzdE1hcnJpZWROSi4KOikuIAo0Ny4gCk9BUCBhdHRhY2tlZCBpbiBvd24gaG9tZSBoaXRzIHJvYmJlciBpbiB0aGUgZmFjZSB3aXRoIHBva2VyIGR1cmluZyBidXJnbGFyeQpCdXQgdGhlc2UgcGxheWVycyBhcmUgc28gYmFkIHRoZXkgYXJlIHN0aWxsIGxvc2luZyB3aGlsZSBhY3RpdmVseSBjb2xsdWRpbmcgaW4gaGFuZHMuIAooMikgVGhhdCBmb3IgdGhlIExvTSBtb2RzIHRvIGZpZ3VyZSBvdXQuIApBIG5ldyBKb2hubnkgaW4gdG93bgpQbGVhc2UgY29udGFjdCB0aGUgbW9kcyBpZiB5b3UgaGF2ZSBhbnkgcXVlc3Rpb247IHRoYW5rcyEKSSBoYWQgYSBwYWlyIG9mIEdUIDIwMDBzIGEgY291cGxlIHllYXJzIGFnbyB0aGF0IHN1Y2tlZCBvbiB0aGUgZmlyc3QgcnVuLCBsaXRlcmFsbHkgaGF0ZWQgdGhlbS4gUmFuIDUgbW9yZSB0aW1lcyBpbiB0aGVtLCBnb3QgYmxpc3RlcnMsIGV0Yy4gCk9sZGVyIGp1c3QgbWVhbnQgbW9yZSByZXNwb25zaWJpbGl0aWVzLCBtb3JlIGNob3JlcywgbW9yZSB3b3JrLiAKSGUgd2FudHMgdG8gbGVhcm4uIEhlIGZpZ3VyZWQgb3V0IHRoYXQgYXNraW5nIHdoeSBxdWVzdGlvbnMgb2Z0ZW4gZ2l2ZXMgaW50ZXJlc3RpbmcgYW5zd2Vycy4gWW91IHNob3VsZCBzdXBwb3J0IHRoaXMgICBsZWFybmluZyBpcyBhIGdvb2QgaGFiaXQuCkkgcmVhbGx5IGRvbid0IGxpa2UgaXQuIApFc3BlY2lhbGx5IHdpdGggYSBjcmltZSBzY2VuZSB0aGF0IHdhcyBjb21wcm9taXNlZCBhcyBiYWRseSBhcyB0aGlzIG9uZSB3YXMuIApUaGUgVmlzYSBtaWdodCBiZSBhY3RpdmUgYnV0IGl0IGRvZXMgbm90IHN0YXJ0IHJ1bm5pbmcgb3V0IHRoZSBtb21lbnQgeW91IHJlY2VpdmUgaXQuIApUaGUgZm9jdXMgaGVyZSBpcyBvbiBhc3Nlc3Npbmcgd2hldGhlciB5b3UgYXJlIGNhcGFibGUgb2YgZG9pbmcgc29tZXRoaW5nIGFuZCBub3Qgd2hldGhlciB5b3Ugd291bGQgbGlrZSB0byBkbyBpdC4gCkdyYW50ZWQuIFNpbWlsYXIgdG8gSW5zaWRlIE91dCwgaXQgZG9lcyBub3QgcG9ydHJheSB0aGUgbWluZHMgb2YgQXV0aXN0aWMgcGVvcGxlIGNvcnJlY3RseSwgYnV0IHJhdGhlciBpbiBhIHNpbXBsaWZpZWQgbWFubmVyIGluIG9yZGVyIHRvIHRlbGwgYSBzdG9yeSB0aGF0IGlzIGFwcGVhbGluZyB0byB0aGUgbWFzc2VzLiAKV2VyZSBiZXR0ZXIgYmVjYXVzZSB0aGV5IHdlcmUgbW9yZSBwdXJlLCBtb3JlIGlubm9jZW50LCBhbmQgc2V4dWFsbHkgYmxhbmsuIApCZXR0ZXIgeWV0LCB5b3UgZG9uJ3QgaGF2ZSB0byB3YWl0IGZvciBhIHRhYmxlIHRvIGJlIGFibGUgdG8gcGxheS4gCkFkdmVydGlzaW5nQXQgYSBtaW5pbXVtLCB5b3Ugd2lsbCB3YW50IHRvIHB1cmNoYXNlIGEgd2Vic2l0ZSBmb3IgeW91ciBidXNpbmVzcywgYSBtb250aGx5IGNvc3Qgb2YgYWJvdXQgJDIwLiBNYW55IG9mIHRoZSBhZHZlcnRpc2luZyBtYXRlcmlhbHMsIHN1Y2ggYXMgYnVzaW5lc3MgY2FyZHMsIGZsaWVycywgZ3JlZXRpbmcgY2FyZHMsIGdpZnQgY2VydGlmaWNhdGVzLCBicm9jaHVyZXMsIGdpZnQgYmFncyBhbmQgYm94ZXMsIHBvc3RjYXJkcyBhbmQgYnJvY2h1cmVzIGNhbiBiZSBtYWRlIGF0IGhvbWUgZm9yIGEgbm9taW5hbCBmZWUuIE90aGVyd2lzZSwgZXhwZWN0IHRvIHNwZW5kIGFib3V0ICQxMDAgdG8gJDEsMDAwIGZvciBhIHllYXIncyBzdXBwbHkgb2YgbWFya2V0aW5nIG1hdGVyaWFscy4gCkxpa2UsIHRoZSBiYXR0ZXJ5IHRlc3QgaXMgZnJlZSBidXQgdGhlIGJhdHRlcnkgY29zdHMgdHdpY2UgYXMgbXVjaCBhcyBvbiBhbWF6b24gKHNhbWUgYmF0dGVyeS4gU2FtZSBtYW51ZmFjdHVyZXIgYW5kIG1vZGVsKSBzbyBJIGxpa2UgdG8gYXZvaWQgZG9pbmcgdGhpcyBqdXN0IGZvciB0aGUgbWVjaGFuaWMgdG8gZmlkZGxlIGFyb3VuZCB3aXRoIGEgbXVsdGkgbWV0ZXIgb25jZSBoZSBmaW5kcyBhIHF1aWV0IDEwIG1pbnV0ZXMgYW5kIHRoZW4gSSBzdGlsbCBoYXZlIHRvIGNoYW5nZSB0aGUgYmF0dGVyeSBteXNlbGYgdG8gc2F2ZSBhIDEwMC4uIApUaGUgTWVkaWNhbCBDbGluaWMgcHJvdmlkZXMgYSBmdWxsIHJhbmdlIG9mIHByaW1hcnksIHByZXZlbnRhdGl2ZSwgYW5kIHVyZ2VudCBtZWRpY2FsIGNhcmUgc2VydmljZXMgZm9yIEF1YnVybiBzdHVkZW50cywgZmFjdWx0eSwgc3RhZmYsIHZpc2l0b3JzLCBhbmQgbWVtYmVycyBvZiB0aGUgc3Vycm91bmRpbmcgY29tbXVuaXR5LiBTZXJ2aWNlcyBhcmUgcHJvdmlkZWQgb24gYW4gYXBwb2ludG1lbnQgYmFzaXMsIGJ1dCB3YWxrIGlucyB3aWxsIGJlIGV2YWx1YXRlZCBhbmQgZ2l2ZW4gYXBwb2ludG1lbnRzIG9yIHNlZW4gaW1tZWRpYXRlbHkgYmFzZWQgb24gdGhlIHVyZ2VuY3kgb2YgdGhlaXIgY29uZGl0aW9uLiBDYXJlIGlzIHByb3ZpZGVkIGJ5IG91ciB0ZWFtIG9mIGZ1bGx5IGxpY2Vuc2VkIGFuZCBCb2FyZCBDZXJ0aWZpZWQvRWxpZ2libGUgUGh5c2ljaWFucyAoTUQsIERPKSwgQ2VydGlmaWVkIFJlZ2lzdGVyZWQgTnVyc2UgUHJhY3RpdGlvbmVycyAoQ1JOUCkgYW5kIENlcnRpZmllZCBQaHlzaWNpYW4gQXNzaXN0YW50cyAoUEEgQyksIGFuZCBzdXBwb3J0aW5nIHN0YWZmLiBBbiBpbnN1cmFuY2UgcGxhbiBvciBpdHMgZXF1aXZhbGVudCBpcyByZXF1aXJlZCBmb3IgYWxsIGludGVybmF0aW9uYWwgc3R1ZGVudHMgYW5kIHJlY29tbWVuZGVkIGZvciBhbGwgc3R1ZGVudHMuClRoZSBoYWlyIGNvdWxkIGhhdmUgYmVuZWZpdHRlZCBmcm9tIHNvbWUgZnVuIHN1bW1lciBzdHlsZXMgc3VjaCBhcyBtZXNzeSBicmFpZHMgaW5zdGVhZCBvZiB0aGUgcG9rZXIgc3RyYWlnaHQgbG9vayB0aGF0IGFsbCB0aGUgbW9kZWxzIHdvcmUgYnV0IGFjY29yZGluZyB0byBNZWhyZWVuLCB0aGUgaWRlYSB3YXMgdG8ga2VlcCBpdCBkZWxpYmVyYXRlbHkgc2ltcGxlLiAiV2UgZGlkIGFib3V0IDIwMCBkaWZmZXJlbnQgbG9va3MsIG5vdCBqdXN0IGZvciB0aGUgdHdvIHNlZ21lbnRzIG9mIHRoZSBmYXNoaW9uIHNob3cgYnV0IGFsc28gZm9yIHNvbWUgb2YgdGhlIGd1ZXN0cyB3aG8gd2VyZSBwYXJ0IG9mIHRoZSBldmVudC4gCklmIGl0IGhhcHBlbnMgdG9vIGZyZXF1ZW50bHksIG9yIHRoZXkgbGFzaCBvdXQgYXQgeW91LCB0aGVuIHlvdSBuZWVkIHRvIGdldCBvdXQgb2YgdGhlIHJlbGF0aW9uc2hpcCByaWdodCBhd2F5LiAKTW90b3JjeWNsZSBWaWxsYWdlIG9uIHRoZSBlYXN0IHNpZGUgb2YgdGhlIGZlc3RpdmFsIGZvb3RwcmludCB3aWxsIGFnYWluIGJlIGluIGZ1bGwgc3dpbmcgd2l0aCBsaXZlIG11c2ljLCBkZW1vcywgc3R1bnQgc2hvd3MsIHRoZSBHeXBzeSBUb3VyIFBva2VyIFJ1biBhbmQgb3RoZXIgbW90b3JjeWNsZSBnZWFyZWQgZW50ZXJ0YWlubWVudCBhbmQgdmVuZG9ycy4KSSBzYXkgdGhlIGJpZ2dlc3QgcHJvYmxlbSB3YXMgdGhlIGRveHhpbmcsIHN0YWxraW5nLCBhbmQgdW5kZXJhZ2UgbWF0ZXJpYWwgKG5vdCBjaGlsZHJlbiwgYnV0IHN0aWxsIHVuZGVyYWdlKS4gCkJ1dCBteSBtb3RoZXJzIHNpZGUsIG5vdCBtYW55IG9mIHRoZW0gbWFkZSBpdCB0byBldmVuIHRoZWlyIG1pZCBzZXZlbnRpZXMgYW5kIHdpdGggbXkgbW9tIGJlaW5nIHNpY2sgaGVyc2VsZiBhbmQgdGhlIGFtb3VudCBvZiB0aGluZ3Mgc2hlIGZvcmdldHMgdGhlc2UgZGF5cyBtYWtlcyBtZSByZWFsbHkgYW54aW91cy4gU2hlIDY0IGFuZCBoZXIgbW9tIG9ubHkgbWFkZSBpdCB0byA3Mi4gSXQgZmVlbHMgbGlrZSBJIGhhdmUgbGVzcyB0aGFuIGEgZGVjYWRlIHdpdGggaGVyIG5vdywgZXZlbiB0aG91Z2ggSSBrbm93IGhlciBwYXJlbnRzIGFnZXMgZG9uIG5lY2Vzc2FyaWx5IGhhdmUgYSBjb3JyZWxhdGlvbiB0byB3aGF0IGFnZSBzaGUgd2lsbCBtYWtlIGl0IHRvLCBzaW1wbHkgYmVjYXVzZSBvZiBiZXR0ZXIgYWNjZXNzIHRvIG1lZGljYWwgY2FyZS4gCkwnaW50cnQgZCdhbGxlciBleHBsb3JlciBub3RyZSBwYXNzLCBldCBlbiBwYXJ0aWN1bGllciBsYSBwcmlvZGUgcHJpbmF0YWxlIChjb25jZXB0aW9uLCBnZXN0YXRpb24sIG5haXNzYW5jZSksIGMnZXN0IGF2YW50IHRvdXQgZGUgcG91dm9pciBpZGVudGlmaWVyIGxlcyBzaXR1YXRpb25zIG1vdGlvbm5lbGxlcyBub24gcnNvbHVlcy4gQ2UgcXVlIG5vdXMgdml2b25zIGF1IHByc2VudCBlbnRyZSBlbiByc29uYW5jZSBhdmVjIGxlIHZjdSBkZSBub3MgcGFyZW50cyBldCBkZSBub3MgYW5jdHJlcy4gCjEyLjM3IExhY3MgYW5kIGluc3RhbnQgYm9udXMgb2Ygb3ZlciBScy4gClRoZSB3b21hbiBzYWlkIHNoZSBwZXJmb3JtZWQgc2V4IHdpdGggb3ZlciA0MCBtZW4gdGhlIGZpcnN0IHR3byB3ZWVrcy5Tb2xpcyB3b3VsZCB0YWtlIHBob3RvcyBvZiB0aGUgd29tZW4gd2VhcmluZyBsaW5nZXJpZSBhbmQgYWR2ZXJ0aXNlIHRoZW0gb24gc2l0ZXMgc3VjaCBhcyBDcmFpZ3NsaXN0IHdpdGggdGhlIGhlYWRlciwgIkxhdGluYXMgbnVldmFzIGVuIChuZXcgbGF0aW5hcyBpbikgTGFzIFZlZ2FzLiIgVGhlIGFkcyB3b3VsZCBsaXN0IHRoZSBsb2NhdGlvbiBvZiBUd2FpbiBBdmVudWUgYW5kIFN3ZW5zb24gU3RyZWV0LkluIGFuIHVuZGVyY292ZXIgb3BlcmF0aW9uLCBvZmZpY2VycyBjYWxsZWQgdGhlIG51bWJlci5UaGV5IHJlY2VpdmVkIGluc3RydWN0aW9ucyBvbiBob3cgdG8gZ2V0IHRvIGEgcmVzaWRlbmNlLCBidXQgd2VyZW4ndCBnaXZlbiB0aGUgZXhhY3QgbG9jYXRpb24gICAiYSB0ZWNobmlxdWUgY29tbW9ubHkgdXNlZCBieSBicm90aGVscyB0byBhdm9pZCBnaXZpbmcgaW5mb3JtYXRpb24gb3ZlciB0aGUgcGhvbmUsIiBhY2NvcmRpbmcgdG8gdGhlIGFycmVzdCByZXBvcnQuQSBtYW4gc3RvcHBlZCBsZWF2aW5nIHRoZSBhcGFydG1lbnQgdG9sZCBvZmZpY2VycyBoZSBoYWQgcGFpZCBmb3Igc2V4LkR1cmluZyBTV0FUIHJhaWRzIGF0IHR3byBsb2NhdGlvbnMsIG9mZmljZXJzIGZvdW5kIGxlZGdlcnMsIGNvbmRvbXMsIGx1YnJpY2FudHMsIGEgdGltZXIsIFdlc3Rlcm4gVW5pb24gcmVjZWlwdHMgYW5kIGEgY29weSBvZiBhIHBhc3Nwb3J0LCBwb2xpY2Ugc2FpZC5TdXNwZWN0cycgc2lkZSBvZiB0aGUgc3RvcnkgOkluIGludGVydmlld3Mgd2l0aCBkZXRlY3RpdmVzLCBQaW5lZGEgYW5kIExvcGV6IGFkbWl0dGVkIHRvIHJ1bm5pbmcgYSBzZXggZm9yIHNhbGUgb3BlcmF0aW9uLCBidXQgZGVuaWVkIHNleHVhbGx5IGFzc2F1bHRpbmcgdGhlIHdvbWFuIG9yIGhvbGRpbmcgaGVyIGFnYWluc3QgaGVyIHdpbGwsIGFjY29yZGluZyB0byB0aGUgcmVwb3J0LiAKVGhlcmUgaXMgc28gbXVjaCBwb3RlbnRpYWwgdG8gYmVjb21lIGEgdG9wIG5vdGNoIHRvdXJpc3QgZGVzdGluYXRpb24sIGJ1dCB0aGUgY2l0eSBsZWFkZXJzIHNlZW0gaGVsbGJlbnQgb24gbm90IG1ha2luZyB0aGF0IGhhcHBlbi4gRG93bnRvd24gaXMgYSBwcmltZSBleGFtcGxlIG9mIHRoZSBsYWNrIG9mIGdpdmUgYSBkYW1uIHRoYXQgcGVybWVhdGVzIHRocm91Z2hvdXQgbW9zdCBvZiB0aGUgY29hc3RhbCBiZW5kLiAKV2Ugd2VyZSBob3BpbmcgZm9yIGEgQ2FudWNrcyBwcm9zcGVjdCBmYWNlb2ZmIGZvciB0aGUgQmVhbnBvdCB0aXRsZS4KUmVnYXJkaW5nIHRoZSBTUEEgdHJlYXRtZW50LCB3ZSBhc2sgZm9yIHlvdXIgdW5kZXJzdGFuZGluZyB0aGF0IHRoZSBsaW5rZWQgVGhlcm1hbGJhdGggU3BhIGlzIGEgcHVibGljIFNQQSBhbmQgaW4gd2ludGVyIHRpbWUgaXQgaXMgaGlnaCBmcmVxdWVudGVkIGFsc28gYnkgbG9jYWxzIHdobyBzcG9pbCB0aGVpciBib2R5IGFuZCBzb3VsIHdpdGggdHJlYXRtZW50cyBhbmQgbWFzc2FnZXMuIEluIG91ciByb29tIGNvbmZpcm1hdGlvbnMgd2UgdGhlcmVmb3JlIGFkdmlzZSBvdXIgZ3Vlc3RzIHRvIGJvb2sgbWFzc2FnZXMgaW4gYWR2YW5jZS4gSSBhbSBhbHNvIGhhcHB5IHRvIGluZm9ybSB5b3UsIHRoYXQgd2Ugc3RhcnQgaW4gdGhlIG5leHQgd2Vla3Mgd2l0aCBhIHByZSBhcnJpdmFsIGxldHRlciB3aGVyZSBndWVzdHMgZ2V0IGEgcHJldmlvdXMgbGluayB0byB0aGUgd2Vic2l0ZSBvZiB0aGUgVGhlcm1hbGJhdGggU3BhIHRvIGhhdmUgdGhlIHBvc3NpYmlsaXR5IHRvIGJvb2sgbWFzc2FnZXMgZXZlbiBvbmxpbmUuIApTb21lIGFyZSBwYXlpbmcgNCw1MDAgZm9yIHRoZSBwcml2aWxlZ2Ugb2YgdGFraW5nIHBhcnQsIG90aGVycyBoYXZlIHdvbiB0aGVpciB3YXkgdGhyb3VnaCB2aWEgdmFyaW91cyBzYXRlbGxpdGUgdG91cm5hbWVudHMgYW5kIG9ubGluZSBxdWFsaWZpZXJzLi4gClRoZSBmaXJzdCB0aGluZyB0aGF0IHlvdSBtdXN0IHVuZGVyc3RhbmQgd2hlbiBpdCBjb21lcyB0byBjbGVhbmluZyBwb2tlciBjaGlwcyBpcyB0aGF0IGNlcnRhaW4gdHlwZXMgYXJlIG1vcmUgcHJvbmUgdG8gYWNjdW11bGF0aW5nIGRpcnQsIGFuZCBncmltZSB0aGFuIG90aGVyIHR5cGVzLiBUaGUgaW5ncmVkaWVudHMgaW4gcG9rZXIgY2hpcHMgcGxheSBhIGxhcmdlIHJvbGUgaW4gdGhpcy4gUG9rZXIgY2hpcHMgdGhhdCBhcmUgY29tcG9zZWQgb2YgY2xheSwgZm9yIGluc3RhbmNlLCBhcmUgbXVjaCBtb3JlIGxpa2VseSB0byBhY2N1bXVsYXRlIGRlYnJpcyBhbmQgZXZlbiBmYWRlIGFzIHRpbWUgcHJvZ3Jlc3Nlcy4gCllvdSByZXBlYXRpbmcgdGhlIHRpcmVkIGFuZCBmYWxzZSBwb2ludCB0aGF0IHRoaXMgaXMgdGhlIHNhbWUgYXMgYSBnZW5lcmFsIGJhbiBvbiBmaXJlYXJtcy4KQnV0IHJlZGxpbmluZyBlZmZlY3RzIGFyZSBkaWx1dGVkIG92ZXIgdGltZS4gCkh1bmRyZWQgZG9sbGFyIGJpbGxzIGFyZSBiYW5kZWQgaW4gc2hlYXZlcyBvZiA1MDsgYW5kIHNoZWF2ZXMgYXJlIHdhZGRlZCBpbiBzdGFja3Mgb2YgdGVuOyBhbmQgYmV0cyBhbmQgcmFpc2VzIGhpdCB0aGUgdGFibGUgaGFyZCwgdGh1ZCB0aHVkIHRodWQuLiAKQ29ub3IgTyBNYW51YWwgb2YgU3R5bGUsIE1vbnJvZXMsIDVwbS4gCklzIHRyeWluZyB0byBzdGF5IHBvc2l0aXZlLCBidXQgeW91IGNhbiB0ZWxsIGl0IGJvdGhlcmluZyBoaW0gYSBiaXQuIApIZXIgYXJ0aWNsZXMgaGF2ZSBhcHBlYXJlZCBpbiBzdWNoIG1hZ2F6aW5lcyBhcyBJbWFyYSwgQ29ycG9yYXRlIENvbG9ycyBFIHppbmUgYW5kIEVudGVycHJpc2UgVmlyZ2luaWEuIApOb3csIEkgY2FuIHNheSBmb3Igc3VyZSB0aGF0IHRoaXMgd2FzIGNhdXNlZCBieSBoZXIgbW90aGVyIHVzZSBvZiBoZXJvaW4gZHVyaW5nIHByZWduYW5jeSwgYnV0IEkgd2lsbCBob2xkIHRoYXQgZ3J1ZGdlIGFnYWluc3QgaGVyIGZvciB0aGUgcmVzdCBvZiBteSBsaWZlLiAKRXZlcnlvbmUgaGVyZSBpcyBzYXlpbmcsICJFdmVyeW9uZSBrbm93cyB0cm9sbHMgcmVnZW5lcmF0ZSwiIHdlbGwgZ3Vlc3Mgd2hhdD8gSSBmdWNraW5nIGRpZG4gQSB5ZWFyIGxhdGVyLCBJIHN0aWxsIGhhdmUgbmV2ZXIgaGFkIHRyb2xscyBpbiBteSBnYW1lcy4gClRoYXQgZmlyc3QgbmlnaHQgaG93IG11Y2ggbW9uZXkgZGlkIHlvdSBtYWtlIGlmIHRpcHMuIEFyb3VuZCAzLDAwMC4gCkZpbmFsbHksIGRhaXJ5IHByb2R1Y3RzIGFyZSBhIGdvb2Qgc291cmNlIG9mIGZhdHMsIGJ1dCB0aGV5IHNob3VsZCBhbHNvIGJlIGVhdGVuIGluIG1vZGVyYXRpb24uIE92ZXJjb25zdW1wdGlvbiBjYW4gcmVzdWx0IGluIGV4Y2VzcyBkYW1wbmVzcyBvciBtdWN1cy4uIApCYWNrIHN0b3J5OiBJbiBzY2hvb2wsIEkgd2FzIGFsd2F5cyBleHRyZW1lbHkgc3R1ZGlvdXMsIGFuZCB0b29rIHVwIGdvaW5nIHRvIGNvbGxlZ2UgYW5kIGhpZ2ggc2Nob29sLCBjb25jdXJyZW50bHkuIFRocm91Z2ggYW4gYWdyZWVtZW50IGJldHdlZW4gbXkgc2Nob29sIGFuZCB0aGUgY29tbXVuaXR5IGNvbGxlZ2UsIEkgYmVnYW4gdGFraW5nIHRydWUgY29sbGVnZSBjbGFzc2VzIGF0IDE0LCBub3QgZHVhbCBjcmVkaXQhIEkgd291bGQgdGFrZSB0aGUgZWFybHkgYmlyZCBjbGFzcyBhdCBteSBjb21tdW5pdHkgY29sbGVnZSwgYmVnaW5uaW5nIGF0IDYgQU0sIHRoZW4gZHJpdmUgb3IgYmljeWNsZSB0byBteSBoaWdoIHNjaG9vbCwgZmluaXNoIG91dCBteSBzY2hvb2wgZGF5IGF0IDMgUE0sIHRoZW4gZHJpdmUgb3IgYmljeWNsZSBiYWNrIHRvIHRoZSBjb21tdW5pdHkgY29sbGVnZSwgYW5kIHRha2UgY2xhc3NlcyB1bnRpbCA5OjMwIFBNLiBNeSBlbnRpcmUgaGlnaCBzY2hvb2wgY2FyZWVyLCBJIHdhcyBleGhhdXN0ZWQuIApCdXQgbWFpbnRhaW5pbmcgcmVjb3ZlcnkgZnJvbSBnYW1ibGluZyBhZGRpY3Rpb24gb3IgcHJvYmxlbSBnYW1ibGluZyBpcyBzdGlsbCBwb3NzaWJsZSBpZiB5b3Ugc3Vycm91bmQgeW91cnNlbGYgd2l0aCBwZW9wbGUgdG8gd2hvbSB5b3UgYWNjb3VudGFibGUsIGF2b2lkIHRlbXB0aW5nIGVudmlyb25tZW50cyBhbmQgd2Vic2l0ZXMsIGdpdmUgdXAgY29udHJvbCBvZiB5b3VyIGZpbmFuY2VzIChhdCBsZWFzdCBhdCBmaXJzdCksIGFuZCBmaW5kIGhlYWx0aGllciBhY3Rpdml0aWVzIHRvIHJlcGxhY2UgZ2FtYmxpbmcgaW4geW91ciBsaWZlLk1ha2luZyBoZWFsdGhpZXIgY2hvaWNlc09uZSB3YXkgdG8gc3RvcCBnYW1ibGluZyBpcyB0byByZW1vdmUgdGhlIGVsZW1lbnRzIG5lY2Vzc2FyeSBmb3IgZ2FtYmxpbmcgdG8gb2NjdXIgaW4geW91ciBsaWZlIGFuZCByZXBsYWNlIHRoZW0gd2l0aCBoZWFsdGhpZXIgY2hvaWNlcy4gVGhlIGZvdXIgZWxlbWVudHMgbmVlZGVkIGZvciBnYW1ibGluZyB0byBjb250aW51ZSBhcmU6QSBkZWNpc2lvbjogRm9yIGdhbWJsaW5nIHRvIGhhcHBlbiwgeW91IG5lZWQgdG8gbWFrZSB0aGUgZGVjaXNpb24gdG8gZ2FtYmxlLiAKUHVua1RvVGhlRnV0dXJlICAyIHBvaW50cyAgc3VibWl0dGVkIDMgaG91cnMgYWdvCkV2ZW4gbW9yZSBzbyBpbiBhIGdhbWUgbGlrZSA1IGNhcmQgZHJhdyB3aGVyZSB5b3VyIG9wcG9uZW50cyBjYW4gc2VlIEFOWSBvZiB5b3VyIGNhcmRzLCBhbmQgdGhlIG9ubHkgZGlyZWN0IGluZm8gdGhleSBoYXZlIGFib3V0IHlvdXIgaGFuZCBpcyBob3cgbWFueSBjYXJkcyB5b3UgdHJhZGVkIGluICh3aGljaCwgYWdhaW4sIGNhbiBiZSB0b3RhbGx5IGRlY2VwdGl2ZSkuLiAKWW91IHNob3VsZCBoYXZlIG1vcmUgY2xhc3MuSXQgbm90IGxpa2UgdGhvc2UgOSB5ZWFycyBpbiBkZXZlbG9wbWVudCB3ZXJlIGFsbCBzcGVudCBvbiBnYW1lIGJhbGFuY2UgKGFuZCBpdCBzaG93cywgdGhpbmsgb2Ygb3JpZ2luYWwgUGlsbHMgYW5kIFN0aWNraWVzKS4gVGhleSBwcm9iYWJseSBoYWQgdG8gZG8gbW9yZSB3aXRoIGdldHRpbmcgdGhlIGFydCBzdHlsZSByaWdodC5UaGUgZ2FtZSBoYXMgY2hhbmdlZC4gClRoZSBnb29kIG5ld3MgaXMgdGhhdCBhIGJhZCBmbGFnIGlzIGFuIGVhc3kgZml4LCBlc3BlY2lhbGx5IGNvbXBhcmVkIHRvIG90aGVyIGxvY2FsIGlzc3VlcyAgIGluZXF1YWxpdHksIHRyYWZmaWMsIGV0Yy4gICB0aGF0IHRoZSBjaXR5IGlzIGZhY2luZy4KWW91IHdvdWxkIGhhdmUgdG8gZXN0YWJsaXNoIHlvdXJzZWxmIGFzIGFuIGVmZmVjdGl2ZSBoZWFsZXIgYmVmb3JlIGFueW9uZSB3b3VsZCB0YWtlIHlvdSBzZXJpb3VzbHkuIFlvdSBjb3VsZG4ndCBqdXN0IGJsaW5rIGludG8gdGhlIHBhc3QgYW5kIHNheSB5b3Uga25vdyBob3cgdGhlIGVuZG9jcmluZSBzeXN0ZW0gd29ya3MuIFlvdSdkIG5lZWQgdG8gZ2F0aGVyIHRoZSByZXNvdXJjZXMgdG8gb3BlbiBhIGNsaW5pYyBzb21ld2hlcmUgYW5kIGRldmVsb3AgYSByZXB1dGF0aW9uIGFzIHNvbWVvbmUgd2hvIGNhbiBoZWFsIHRoZSBzaWNrL2luanVyZWQgbXVjaCBiZXR0ZXIgdGhhbiBjb250ZW1wb3JhcnkgZG9jdG9ycywgc28gdGhhdCB0aGV5IHdvdWxkIHNwZWFrIG91dCB5b3VyIHNwZWNpYWwga25vd2xlZGdlLiBZb3UgbWlnaHQgaGF2ZSBiZXR0ZXIgbHVjayBzYXlpbmcgdGhhdCBrbm93bGVkZ2Ugb3IgaG93IHRoZSBib2R5IHdvcmtzIHdhcyByZXZlYWxlZCB0byB5b3UgaW4gYSBkcmVhbSB0aGFuIHRvIGV4cGxhaW4gdGltZSB0cmF2ZWwuCkkgZG8gbG92ZSBtZSBzb21lIGJhYnkga2lsbGluZ3MsIGJ1dCBvdGhlciB0aGFuayB0aGF0IEkgdGVuZCB0byBjYWxsIG91dCByYWNpc3RzIGFuZCBzZWVrIHRvIGhvbGQgdGhlbSBhY2NvdW50YWJsZSByZWdhcmRsZXNzIG9mIHBhcnR5LiBHZW5lcmFsbHkgc3BlYWtpbmcgdGhlIGRlbW9jcmFjeSdzIGhhdmUgYmVlbiBjb25zaWRlcmFibHkgbW9yZSBlZmZlY3RpdmUgaW4gaG9sZGluZyB0aGVpciBvd24gdG8gYSBoaWdoIHN0YW5kYXJkLCB3aGVyZWFzIHJlcHVibGljYW5zIHRyYWRlIGluIGNvdmVydCBkb2cgd2hpc3RsZXMgYW5kIGxhcmdlbHkgaWdub3JlIHRoZSBvdmVydCByYWNpc20uIApJIG1hZGUgYSBkZWZlbnNpdmUgMjAsMDAwIGJldCBhbmQgRmVsZG1hbiBpbW1lZGlhdGVseSBtb3ZlZCBtZSBhbGwgaW4gZm9yIG15IGxhc3QgODUsMDAwLiAKTGV0IHVzIGFzc3VtZSB0aGF0IHRoZXJlIGFyZSBleGFjdGx5IDM2NSBkYXlzIGluIGEgeWVhciBhbmQgdGhhdCBiaXJ0aGRheXMgYXJlIHVuaWZvcm1seSByYW5kb21seSBkaXN0cmlidXRlZCBhY3Jvc3MgdGhvc2UgZGF5cy4gCkl0IGVuZGVkIGluIGRlYXRocyBhbmQgc3VpY2lkZXMgZm9yIHRoZW0gKG5vdCB0aGVtc2VsdmVzIGJ1dCB0aGVpciBmYW1pbHkgbWVtYmVycykgdGhlIGRlc3RydWN0aW9uIG9mIGEgYnVzaW5lc3MsIHRoZSBsb3NzIG9mIGEgbWFycmlhZ2UsIE5DIHdpdGgga2lkcy4gCkphbWVzIENhcmxldG9uOiBUaGUgYm9va2llcyByb29tIGF0IGFuIEF1c3RyYWxpYW4gaG9yc2VyYWNpbmcgdHJhY2suIEl0J3MgdGhlIGJpcnRocGxhY2Ugb2Ygb3VyIGdhbWJsaW5nIGluZHVzdHJ5IGFuZCB0aGUgYmlydGhwbGFjZSBvZiBwcm9ibGVtIGdhbWJsaW5nIGFzIHdlbGwuIFRoZSBleHBlcnRzIGFyZSBhZ3JlZWQgdGhhdCBBdXN0cmFsaWFucyBsb3ZlIGEgcHVudCwgb3ZlciA4MCBwZXIgY2VudCBvZiB1cyB3aWxsIGdhbWJsZSBhdCBvbmUgc3RhZ2Ugb3IgYW5vdGhlciBhbmQgeWV0IGZvciBhIHNtYWxsIGZyYWN0aW9uIG9mIHVzLCBnYW1ibGluZyBjYW4gaGF2ZSBhIGRldmFzdGF0aW5nIGltcGFjdC4gQW5kIHRoYXQncyB3aGVyZSB0aGUgdW5hbmltaXR5IG9mIG9waW5pb24gZW5kcy4KMUFiIHVyYmUgY29uZGl0YSAgIExhdGluIG1lYW5pbmcgJ2Zyb20gdGhlIGZvdW5kaW5nIG9mIHRoZSBDaXR5JyAob2YgUm9tZSkuMkVneXB0aWFuIHN0YXR1ZXMgYWxzbyBwcmVkb21pbmFudGx5IHN0YW5kIGxlZnQgZm9vdCBpbiBmcm9udCBvZiByaWdodC4gClRob3NlIHdobyBhcmUgYXdhcmUgb2YgYSBzZWN1cml0eSBpbiBvbGQgYWdlIG9yIGRlY2xpbmluZyBhZ2UgdGVuZCB0byBiZSBoYXBwaWVyIHRoYW4gdGhvc2Ugd2hvIGRvbid0Li4gCkluc3RlYWQgb2YgZ2VvbWV0cmljIHBhdHRlcm5zIHZhc2VzIHdlcmUgbm93IGRlY29yYXRlZCB3aXRoIHBpY3R1cmVzIG9mIHBsYW50cyBhbmQgbXl0aG9sb2dpY2FsIGZpZ3VyZXMuIApCQUMgdW5kZXIgMC4wNSwgdGhleSBhcmUgcHJlc3VtZWQgdG8gbm90IGJlIGludG94aWNhdGVkLgoiSSBkbyBzaG93cyBzaXggdG8gc2V2ZW4gZGF5cyBhIHdlZWsuIApDYXJsIEljYWhuLCQyNS44IGJpbGxpb24uIApOZXZlciBiZWxpZXZlIHRoYXQgYW50aVNlbWl0ZXMgYXJlIGNvbXBsZXRlbHkgdW5hd2FyZSBvZiB0aGUgYWJzdXJkaXR5IG9mIHRoZWlyIHJlcGxpZXMuIFRoZXkga25vdyB0aGF0IHRoZWlyIHJlbWFya3MgYXJlIGZyaXZvbG91cywgb3BlbiB0byBjaGFsbGVuZ2UuIApXYXNoIHRoZSBiYWJ5J3MgaGFpci4gV2FzaGluZyB0aGUgdG9wIG9mIHRoZSBoZWFkIHdpdGggdGhlIHdhc2hjbG90aCBjYW4gaGVscCBwcmV2ZW50IGNyYWRsZSBjYXAuIApFZGl0OiBJIGRpZG4ndCBtZWFuIHRoaXMgc3RhdGVtZW50IHRvIGJlIGluc2Vuc2l0aXZlLCBhbmQgSSdtIHNvcnJ5IGlmIEkgb2ZmZW5kZWQgYW55b25lLiBJIHdhcyBtYWtpbmcgdGhhdCBzdGF0ZW1lbnQgdGhpbmtpbmcgb2YgdGhlIDkwJSBvZiB3b21lbiB3aG8gZG9uJ3QgZXhwZXJpZW5jZSBhIHNlcmlvdXMgdGVhciBhbmQgd2hvIGRvIGp1c3QgcmVxdWlyZSBhIGZldyBzdGl0Y2hlcy4gSSBndWVzcyBJIGZlbHQgaXQgd2FzIG9idmlvdXMgdGhhdCBhIHNldmVyZSB0ZWFyIHdvdWxkIGJlIHByZXR0eSB0ZXJyaWJsZSwgYnV0IEkgZGlkbid0IGNsYXJpZnkgbXlzZWxmLCBzbyBJIHNob3VsZG4ndCBoYXZlIGV4cGVjdGVkIHBlb3BsZSB0byBhc3N1bWUgdGhhdCBhcyB3ZWxsLgpUaGUgd29vZCB1c2VkIGluIGEgU3RyYWRpdmFyaXVzIGlzIHF1aXRlIGRpZmZlcmVudCBmcm9tIHRoYXQgb2YgYSBtb2Rlcm4gdmlvbGluIGFsb25nIHdpdGggdW5pcXVlIGFnaW5nIHByb3BlcnRpZXMuIApUaGF0IGRlcGVuZHMgb24gd2hpY2ggbWFzdGVycyBwcm9ncmFtcyB5b3Ugd2FudCB0byBhcHBseSB0by4gU29tZSBwcm9ncmFtcyBhZG1pdCBhbGwgcXVhbGlmaWVkIGFwcGxpY2FudHMgYW5kIHNvbWUgaGF2ZSB0b25zIG9mIGFwcGxpY2FudHMgc28gaXQgdmVyeSBkaWZmaWN1bHQgdG8gZ2V0IGluLgpFYWJtYW5nbyAgNyBwb2ludHMgIHN1Ym1pdHRlZCAyMiBob3VycyBhZ28KJDI1MEpGIFB0YWsgU2NpZW5jZSBCb29rcyBpcyBhIHBob3RvZ3JhcGggb2YgYW4gYWlkIHN0YXRpb24gc29tZXdoZXJlIGFsb25nIHRoZSBXZXN0ZXJuIEZyb250LCAxOTE3LiBHaXZlbiB0aGUgYW1vdW50IG9mIGRpZ2dpbmcgZ29pbmcgb24gdGhyb3VnaG91dCB0aGUgY291cnNlIG9mIHRoZSB3YXIsIHdpdGggdGhlIGNvbnN0cnVjdGlvbiBvZiBodW5kcmVkcyBvZiB0aG91c2FuZHMgb2YgbWlsZXMgb2YgdHJlbmNoZXMsIGFuZCB0aGVuIHRoZSBzYXBwZXIgd2FyIHRvIHR1bm5lbCB1bmRlcm5lYXRoIHRoZSB0dW5uZWxzIGFuZCBzbyBvbiwgaXQgaXMgcXVpdGUgcG9zc2libGUgdGhhdCB0aGlzIHVuZGVyZ3JvdW5kIHNoZWx0ZXIgd2FzIGR1ZyBvdXQgYnkgaGFuZC4gVGhpcyBpcyBhbHNvIGFuIGluc2lnaHQgdG8gdGhlIGR1cmF0aW9uIG9mIHNvbWUgb2YgdGhvc2UgYmF0dGxlcyB0byBjb25zdHJ1Y3Qgc3VjaCBhIHN0YXRpb24gaW1wZXJ2aW91cyB0byBwb3NzaWJseSBzZW1pIGNvbnRpbnVvdXMgYm9tYmFyZG1lbnQgbWVhbnQgdGhhdCB0aGUgbGluZXMgb2YgYmF0dGxlIHdlcmUgc3RhdGljLCB3aXRoIG1hbnkgb2YgdGhlIG1ham9yIGVuZ2FnZW1lbnRzIG9mIGh1bmRyZWRzIG9mIHRob3VzYW5kcyBvZiBzb2xkaWVycyBsYXN0aW5nIGZvciBtb250aHMsIGFuZCBpbiBzb21lIGNhc2VzLCB5ZWFycy4gCkJlZm9yZSBUZXhhcyBIb2xkJ2VtIGdhaW5lZCB3b3JsZHdpZGUgcG9wdWxhcml0eSwgU2V2ZW4gQ2FyZCBTdHVkIFBva2VyIHdhcyBrbm93biBhcyB0aGUgbW9zdCBwb3B1bGFyIHZlcnNpb24uIEl0IGlzIGFsc28gY29uc2lkZXJlZCBvbmUgb2YgdGhlIGNsYXNzaWMgZm9ybXMgb2YgcG9rZXIsIHN0aWxsIGltbWVuc2VseSBzb3VnaHQgb3V0IGF0IGNhc2lubyB3ZWJzaXRlcy4gU2V2ZW4gQ2FyZCBTdHVkIGRpc3BlbnNlcyB3aXRoIGNvbW11bml0eSBjYXJkcyBhbmQgdGhlIGdhbWVwbGF5IHJlbGllcyBvbiBjYXJkcyB0aGF0IHdlcmUgaW5pdGlhbGx5IGRlYWx0LiAKSSdkIG5vcm1hbGx5IGtlZXAgdGhlIGRlYmF0ZSBnb2luZyBpbiBvcmRlciB0byBlZHVjYXRlIGFueW9uZSB3aG8gbWlnaHQgbWFrZSBpdCB0aGlzIGZhciBkb3duIGluIHRoZSB0aHJlYWQsIGJ1dCBub2JvZHkgZWxzZSBpcyBnb2luZyB0byBzZWUgaXQgYXQgdGhpcyBwb2ludC4gQXMgYSBmaW5hbCBub3RlLCB0aG91Z2gsIEknbGwganVzdCBlbmNvdXJhZ2UgeW91IHRvIGtlZXAgZnJvbSByZXBlYXRpbmcgcnVtb3JzIGFuZCBoZWFyc2F5LCBiZWNhdXNlIGlmIHlvdSdyZSBnZW51aW5lbHkgaW50ZXJlc3RlZCBpbiBoaWdobGlnaHRpbmcgdGhlIHJlYWwgcHJvYmxlbXMgICB0aGUgc3BhbW1lcnMsIHNwZWNpZmljYWxseSAgIHRoZW4geW91J2xsIG5lZWQgdG8gc3RhcnQgYnkgY2xlYXJpbmcgYXdheSBhbGwgb2YgdGhlIG1pc2luZm9ybWF0aW9uIGFuZCBteXRoLi4gClhkcm9ubiB1Ck9yZ2FuaXphdGlvbiBoYXMgaXRzIGlzc3Vlcywgc2hlIHNhaWQgaW4gYSByZWNlbnQgaW50ZXJ2aWV3LiBCdXQgdGhhdCBmYWN0IHRoZSBwdWJsaWMgaXMgYXdhcmUgb2YgdGhlIG1hbnkgcHJvYmxlbXMgaXMgYSBzaWduIGRlbW9jcmFjeSBpcyB3b3JraW5nLCBNb3VyYW5pIGFkZGVkLiAKRG9uJ3QgaGF2ZSBmaWJyb2lkcywgYnV0IGV2ZXIgc2luY2UgSSBoYWQgYSBtaXNjYXJyaWFnZSBJJ3ZlIGhhZCB0aGUgYWJzb2x1dGUgd29yc3QgcGVyaW9kcyBvZiBteSBsaWZlLiAKSXQgd2FzIHRoZSB3ZWlyZGVzdCwgbW9zdCBhd2t3YXJkIGVudmlyb25tZW50IEkgZXZlciBiZWVuIGluLCBoZSBleHBsYWluZWQuLiAKUGxheWluZyBtb3JlIHRoYW4gb25lIGZyZWUgcG9rZXIgY2FyZCBnYW1lIGlzIGFsc28gcmVjb21tZW5kZWQgaWYgeW91IHdpc2ggdG8gd2luIGFzIGEgcG9rZXIgcGxheWVyLiBJbiBvdGhlciB3b3JkcywgeW91IHNob3VsZCB0YWtlIHRoZSB0aW1lIHRvIHByYWN0aWNlIG9uIGZyZWUgZ2FtZXMgZmlyc3QgYmVmb3JlIHBsYXlpbmcgaW4gJ2FjdHVhbCBnYW1lcycsIG9yIHBhaWQgZ2FtZXMuIApJdCBpcyBzbyBzdHJhbmdlIHRvIG1lIGJlY2F1c2UgbXkgd2lmZSBzZWVtcyBwZXJmZWN0bHkgbm9ybWFsIHRvIHRoZSBraWRzIHdoZW5ldmVyIEkgYXJvdW5kLiAKVG8gcHJvZ3Jlc3MgaGlzIGV4cGVyaW1lbnRzIHNvIHRoYXQgdGhleSB3b3JrIG9uIGh1bWFucywgSmVreWxsIG5lZWRzIHRvIGhhcnZlc3QgZnJlc2ggZmVtYWxlIGhvcm1vbmVzIGZyb20gZGVhZCB3b21lbi4gQXQgZmlyc3QgaGUgdmlzaXRzIGxvY2FsIG1vcnR1YXJpZXMgYW5kIGxhdGVyIGVtcGxveXMgdGhlIHNlcnZpY2VzIG9mIEJ1cmtlIGFuZCBIYXJlMyB0byBwcm9jdXJlIGhpbSBtb3JlIHlvdW5nLCBkZWNlYXNlZCB3b21lbiBmb3IgaGlzIHJlc2VhcmNoLiAKSSB1c2UgdG8gdGVhY2ggYXQgYSBzY2hvb2wgYW5kIHRoZXkgaGFkIHRvIGRvIHNvbWUgcmVub3ZhdGlvbnMgaW4gYmFjayBvZiB0aGUgYXVkaXRvcml1bS4gVGhlcmUgd2FzIGEgY2xvc2V0IHRoZXJlIGFuZCB0aGV5IGhhZCB0byB0YWtlIGl0IG91dCB0byBkbyBzb21lIHdpcmluZyBhbmQgdGhlIGNsb3NldCB3YXMgYWN0dWFsbHkgY292ZXJpbmcgYSBkb29yLiAKVGhhdCdzIHdoYXQgSSBkby4gCkNvbnNlcXVlbnRseSwgaXQgaXMgc29sZCBmb3IgbGVzcyB0aGFuIGl0IHNob3VsZCBiZS4gVGhlIGNoZWFwZXIgYSBwcm9kdWN0LCB0aGUgbW9yZSBpdCBzZWxscywgZXNwZWNpYWxseSB0byB0aGUgbW9zdCBwcmljZSBzZW5zaXRpdmUgc21va2VycyB0aGUgeW91bmcgYW5kIHRoZSBsZWFzdCB3ZWxsIG9mZi42LiAKWW91IGNhbiBlYXNpbHkganVzdCByZW1vdmUgYWxsIHRoZSBjb21tZW50cyBhbmQgdGhlbiBiYW4gYWxsIHRoZSBvZmZlbmRpbmcgdXNlcnMgYmVmb3JlIHRoZSBkYW1hZ2UgaXMgZG9uZSBldmVuIGlmIHlvdXIgZW50aXJlIHRlYW0gaGFwcGVucyB0byBiZSBvbmxpbmUgYW5kIHJlYWR5IHRvIGhlbHAuIElmIHlvdSB0aGluayBzdXBwb3J0IGlzIHJlYWRpbHkgYXZhaWxhYmxlIGZyb20gdGhlIGhpZ2hlciB1cHMsIHlvdSBiZSB3cm9uZyBhcyBicmlnYWRpbmcgYW5kIGhhcmFzc21lbnQgYXJlIGJvdGggcm91dGluZWx5IHJlcG9ydGVkIGFuZCBtaW5pbWFsbHkgcmVzcG9uZGVkIHRvLiBJdCBhIGxvdCBvZiB3b3JrIGZvciB0aGUgbW9kcyB0byBoYW5kbGUgd2hlbiB0aGF0IGhhcHBlbnMgYW5kIGNhbiB0YWtlIHVzIGF3YXkgZnJvbSBvdXIgZnJpZW5kcyBvciBmYW1pbGllcyBvciB3aGF0ZXZlciBhY3Rpdml0aWVzIHdlIG1pZ2h0IGhhdmUgb3RoZXJ3aXNlIGJlZW4gZG9pbmcgaW4gb3JkZXIgdG8gY2xlYW4gdXAgdGhvc2UgbWVzc2VzIHdoaWNoIHR5cGljYWxseSBnbyB3ZWxsIGJleW9uZCB0aGUgdXN1YWwgYW1vdW50IG9mIGFjdGl2aXR5IG5lZWRlZCB0byBtb2RlcmF0ZS4uIApBbmQgSSBmaW5kIHR3byBwcmV0dHkgaGFyZCB0byBiZWxpZXZlLiBUaGlzIGFsc28gcmVsaWVzIG9uIHRoZSBpbXBsaWNpdCBhc3N1bXB0aW9uIHRoYXQgdHJ1bHkgdW5iZWF0YWJsZSBib3RzIHdvbiBiZSBjcmVhdGVkIGluIHRoYXQgdGltZSBkZXN0cm95aW5nIHRoZSBlY29zeXN0ZW0sIHdoaWNoIG5vIG9uZSBjYW4ga25vdyBmb3Igc3VyZS4gQW5kIHRoaXMgY29tcGFyaXNvbiBnZXRzIGV2ZW4gd29yc2UgaWYgeW91IHJlcGxhY2UgTWNEb25hbGRzIGpvYiB3aXRoIGEgam9iIGVhcm5pbmcgJDIwIG9yIGV2ZW4gJDE1IGFuIGhvdXIuLiAKR2FyYnV0dCBwbGF5ZWQgaGFsZiBhIHNlYXNvbiBhbmQgYWRkZWQgbm8gdmFsdWUuIERhbGV5IGFuZCBoaXMgc3Vic2VxdWVudCB0cmFkZSBhZGRlZCBubyB2YWx1ZS4gCk1vcmUgdGhhbiBhbnkgb3RoZXIgZm9ybSBvZiBwb2tlciwgYWdncmVzc2lvbiBnZXRzIHRoZSBtb25leSBpbiBPbWFoYSBzaXQgYW5kIGdvIHRvdXJuYW1lbnRzLiAKT24gdGhlIE9tbmlidXNPdmVyIDEwMCBidXNlcyB0YWtlIHBhcnQgaW4gdGhlIGV2ZW50IHBlciB5ZWFyLCB0cmFuc3BvcnRpbmcgcGVvcGxlIHRvIGFsbW9zdCAxMDAgcGFydGljaXBhdGluZyBwdWJzIGFjcm9zcyB0aGUgSXNsYW5kLiBEYXRpbmcgZnJvbSB0aGUgMTkzMHMgb253YXJkcywgbW9zdCBvZiB0aGUgYnVzZXMgYXJlIHByaXZhdGVseSBvd25lZCBhbmQgYnJvdWdodCBkb3duIGF0IHRoZSBvd25lcnMnIGV4cGVuc2UsIHNvbWUgZnJvbSBjb25zaWRlcmFibGUgZGlzdGFuY2Ugb24gdGhlIE1haW5sYW5kMSwgdG8gd2hhdCBpcyBiZWNvbWluZyBvbmUgb2YgdGhlIGxhcmdlc3QgcHJlc2VydmVkIGJ1cyBldmVudHMgaW4gdGhlIFVLLi4gCkFuZCB3aGVuIEkgd2FzIGx1Y2t5IGVub3VnaCB0byBnZXQgdGhlIHN1Y2Nlc3NmdWwgaW1tb3J0YWxpdHkgZXZlbnQgb24gbXkgc3RhcnRpbmcgY2hhcmFjdGVyIGluIHRoZSByZWNlbnQgSmlucXVhbiBwbGF5dGhyb3VnaCwgaW4gSXJvbm1hbiBubyBsZXNzLCBJIGtuZXcgdGhhdCB0aGlzIHdhcyBtZWFudCB0byBiZSBpdC4gR29kcyBvZiBSTkcgZ3VpZGVkIG15IHBhdGggdGhlbXNlbHZlcyEuIApMQVNUIDEwIEdBTUVTOiBSYXB0b3JzOiA5IDEsIGF2ZXJhZ2luZyAxMTcuNCBwb2ludHMsIDQ1LjMgcmVib3VuZHMsIDI4LjQgYXNzaXN0cywgOC42IHN0ZWFscyBhbmQgMy45IGJsb2NrcyBwZXIgZ2FtZSB3aGlsZSBzaG9vdGluZyA0Ni43IHBlciBjZW50IGZyb20gdGhlIGZpZWxkLiBUaGVpciBvcHBvbmVudHMgaGF2ZSBhdmVyYWdlZCAxMDkuNyBwb2ludHMgb24gNDUuMiBwZXIgY2VudCBzaG9vdGluZy4KT2JzY3VyZUN1bHR1cmFsTWVtZSB1ClRoZSBQZW9wbGUncyBDb25ncmVzc2VzIHJlamVjdGVkIHRoaXMgaWRlYSB0b28uLiAKVnVvbCBkaXJlIHVuaXJlIGxlIHJpc29yc2UgZSBjb29wZXJhcmUgYXR0aXZhbWVudGUgcGVyIGxhIGRpZmZ1c2lvbmUgZSBsYSBwcm9tb3ppb25lIGRlaSB0YWxlbnRpCkFub3RoZXIgd2Vha25lc3MgaW4gdGhlIGdhbWVzIG9mIG1hbnkgYmVnaW5uaW5nIHBsYXllcnMgaXMgbm90IGZvbGRpbmcgYWZ0ZXIgdGhlIGZsb3Agd2hlbiB0aGUgb25seSBob3BlIHRoZXkgaGF2ZSBpcyBhIHNwbGl0IHBvdCBvciBhIHJ1bm5lciBydW5uZXIgKHRoYXQgaXMsIG5lZWRpbmcgdGhlIHR1cm4gYW5kIHJpdmVyIGNhcmRzIHRvIHdpbiwgd2hpY2ggaXMgYSBzdGF0aXN0aWNhbGx5IHdlYWsgcG9zaXRpb24pIHRvIG1ha2UgdGhlaXIgaGFuZC4gSW4gT21haGEsIGFmdGVyIHRoZSBmbG9wLCB5b3VyIGhhbmQgaXMgd2VsbCBkZWZpbmVkLiBZb3Ugc2VlIDcgb3V0IG9mIHRoZSA5IGNhcmRzIHlvdSB3aWxsIHVzZSAgIGFsbW9zdCA4MCBwZXJjZW50LiAKVGhlIEphcGFuZXNlIHByYWN0aWNlIG9mIFNoaWF0c3UsIHdoaWNoIGxpdGVyYWxseSBtZWFucyAiZmluZ2VyIHByZXNzdXJlLCIgaXMgc2ltaWxhciB0byBhY3VwcmVzc3VyZS4gSW4gYWN1cHJlc3N1cmUgYW5kIFNoaWF0c3UsIHRodW1icyBhcmUgbW9zdCBjb21tb25seSB1c2VkIHRvIGFwcGx5IHByZXNzdXJlLCBhbHRob3VnaCBvdGhlciBmaW5nZXJzLCBrbnVja2xlcywgcGFsbXMsIGVsYm93cyBhbmQgZXZlbiBmZWV0IGNhbiBiZSB1c2VkIGluIHNvbWUgb2YgdGhlIHRoZXJhcGllcy4gVGhlIGRlZ3JlZSBvZiBwcmVzc3VyZSB0aGF0IGlzIGFwcGxpZWQgdmFyaWVzLCBhcyBkb2VzIHRoZSBkdXJhdGlvbi4gQW55dGhpbmcgZnJvbSBtb2RlcmF0ZSB0byBwZW5ldHJhdGluZyBwcmVzc3VyZSBpcyBlbXBsb3llZCBmb3Igc2V2ZXJhbCBzZWNvbmRzIHRvIHNldmVyYWwgbWludXRlcywgYW5kIHRoZSB0cmVhdG1lbnQgY2FuIGJlIHBlcmZvcm1lZCBvbmNlIG9yIHJlcGVhdGVkbHkuCk9uY2UgdGhleSBhbnRpY2lwYXRlIHRoZSB0cmVhdCwgeW91IHN0YXJ0IHdhaXRpbmcgZm9yIHRoZW0gdG8gbG9vayBhdCB5b3UgYW5kIHRoZW4gZ2l2ZSBhIHRyZWF0IChtaWdodCBub3QgYmUgcG9zc2libGUgd2l0aCBNb250eSBpZiBoZSBkb2VzbiBtYWtlIGV5ZSBjb250YWN0KS4gCk15IHByZXZpb3VzIGVtcGxveWVycyA1IHN1YnN0aXR1dGVkIG1kbWEgZm9yIHBjcC4gTXkgZW1wbG95ZXIgcHJldmlvdXMgdG8gdGhhdCBoYWQgYSBkcnVnIG9mIGFidXNlIGZ1bGwgYnV0IHdlaXJkbHkgb21pdHRlZCBzb21lIGNvbW1vbmx5IGFidXNlZCBkcnVncyBhcyB0aGV5IHdlcmUgdG9vIGV4cGVuc2l2ZS4gClRoZSByZWFzb24gaXMgYmVjYXVzZSA5MCUgb2YgdGhlIEVWIGNvbWVzIGZyb20gaGFuZHMgaW4gc29tZXdoYXQgcHJveGltaXR5IHRvIHRoZSBudXRzLiAKRGFwaG5lIEhlcm5hbmRleidzIFJlc2VhcmNoIG9uIEZvb2QgSW5zZWN1cml0eSBpbiBDb2xsZWdlIFN0dWRlbnRzIFdpZGVseSBGZWF0dXJlZCBpbiBOZXdzIE1lZGlhVGhlIFVuaXZlcnNpdHkgb2YgSG91c3RvbiAzODc1IEhvbG1hbiBTdC4gClRvZGF5LCB3YXIgaXMgZGVjaWRlZCBpbiB0aGUgaW5mb3JtYXRpb24gc3BhY2UsIGJlZm9yZSB0aGUgZmlyc3Qgc2hvdCBpcyBmaXJlZC4gRGlwbG9tYWN5IGFuZCB0cmFkaXRpb25hbCBzdGF0ZWNyYWZ0IGFyZSBub3QgZW5vdWdoLiBXZSBuZWVkIGluZm9ybWF0aW9uIGRvbWluYW5jZSBhbmQgc3RyYXRlZ2ljIHN1YnZlcnNpb24gdG8gcHJldmVudCBwcm9ibGVtcyBmcm9tIGJlY29taW5nIGNyaXNlcyBhbmQgY3Jpc2VzIGZyb20gYmVjb21pbmcgY29uZmxpY3RzLi4gClByZXNzIHRoZSAiZGVhbCIgYnV0dG9uIHRvIGJlZ2luIHRoZSBnYW1lLiAKV2UgYXJlIHBsYW5uaW5nIHRvIGJ1aWxkIG9uZSBvZiB0aG9zZSAiQ2F0dGlvcyIgd2hpY2ggSSBoYXZlIHNlZW4gbWFueSBwZW9wbGUgcG9zdHMuIApTbGF2ZXMsIG9iZXkgeW91ciBlYXJ0aGx5IG1hc3RlcnMgd2l0aCBkZWVwIHJlc3BlY3QgYW5kIGZlYXIuIFNlcnZlIHRoZW0gc2luY2VyZWx5IGFzIHlvdSB3b3VsZCBzZXJ2ZSBDaHJpc3QuIChFcGhlc2lhbnMgNjo1IE5MVCkKT2Ygc3VjY2VzcyBmb3IgdGhvc2Ugd2hvIHRha2Ugcmlza3MgYW5kIHdvcmsgaGFyZC4gClNpZSBocnRlIGRlbiBEb2MgaGludGVyIGlocmVtIFJja2VuIGhhbnRpZXJlbiwgZGEgd3VyZGVuIFBsYXN0aWt2ZXJwYWNrdW5nZW4gYXVmZ2VyaXNzZW4sIGRhIHd1cmRlIGV0d2FzIGF1Zmdlc2NocmF1YnQsIGRhIGhydGUgbWFuIFNjaG5hbHplbiB2b24gR3VtbWkuLiAKVGhvc2Ugd2hvIHdhdGNoIHNraW4gZmxpY2tzIGEgZmV3IHRpbWVzIGEgd2VlayBoYXZlIGEgMTkuNzMgcGVyY2VudCBjaGFuY2Ugb2YgYmVpbmcgYmkuIApUaG9zZSB3aG8gaGF2ZSBiZWVuIGludGVncmFsIGluIG1ha2luZyBvdXIgY291bnRyeSBhIHVuaXF1ZSBhbmQgc3BlY2lhbCBwbGFjZSwgd2hldGhlciB0aGV5IGJlIHBvbGl0aWNhbCBsZWFkZXJzLCB3YXIgaGVyb2VzLCBzcG9ydHMgc3RhcnMsIGluZGlnZW5vdXMgaWNvbnMsIGJ1c2luZXNzIGlkZW50aXRpZXMsIGJhdHRsZXJzLCBvciB0aG9zZSB3aXRoIGEgZHJlYW0gd2hvIHJlZnVzZWQgdG8gYmUgZGVuaWVkLgpNb3N0IGV2ZXJ5IHVubG9jaykuWW91IGFic29sdXRlbHkgcmlnaHQsIHRoZXJlIGNlcnRhaW5seSBubyBqdWRnZW1lbnQgaW52b2x2ZWQgaW4gY2FsbGluZyBzb21ldGhpbmcgInN1cGVyaW9yIi4gT2ggd2FpdCwgdGhlcmUgaXMsIGFuZCB0aGF0IHJlcXVpcmVzIGV4dHJhIHNjaWVudGlmaWMgd29yayB0byBqdXN0aWZ5LiAKUmFyZWx5IHdpbGwgeW91IHNlZSBjb3VwbGVzIHBvc3RpbmcgdGhlaXIgaG9tZW1hZGUgc3R1ZmYgd2l0aCBhIHRyYWNlYWJsZSBtb25pa2VyLiAKTWFraW5nIGl0IGNvc3QgNCB3b3VsZCBwcm9iYWJseSBiZSBiZXR0ZXIsIGFzIGl0IHN0aWxsIHdvdWxkIGJlIHBsYXlhYmxlIG9uIHR1cm4gMiBhbmQgZ2l2ZSByZWQgcmVtb3ZhbCwgYnV0IHN0aWxsIHNob3cgdGhhdCwgaGV5LCByZW1vdmFsIGlzbiBSZWQgc3Ryb25nIHN1aXQgYmVjYXVzZSBpdCB3b3JzZSB0aGFuIEdhbmsuIApIYXZpbmcgYW4gZXh0ZXJuYWwgSEREIHdvdWxkIG5vdCBmaXggdGhpcyBpc3N1ZSBlaXRoZXIuIERpc2tzIGdvIGJhZCBhbGwgdGhlIHRpbWUgT1NlcyBnbyBjb3JydXB0IGFsbCB0aGUgdGltZS4gSSBoYXZlIGEgY2FyZWVyIGJlY2F1c2UgY29tcHV0ZXJzIHN1Y2shIEV2ZXJ5IGFwcCB5b3UgaW5zdGFsbCB0aGF0IGhhcyBkYXRhIHRoYXQgaXMgaW1wb3J0YW50IHRvIHlvdSB5b3UgaGF2ZSB0byBsb29rIGFuZCBzZWUgd2hlcmUgaXQgc3RvcmUgdGhlIGRhdGEuIE1ha2Ugc3VyZSB0aGF0IGxvY2F0aW9uIGlzIGJhY2tlZCB1cC4gSXQgYSBQSVRBIGJ1dCBsb29zaW5nIGRhdGEgaXMgbW9yZSBvZiBhIFBJVEEuIENhcmJvbml0ZSB3aWxsIGJhY2sgdXAgYWxsIHdlbGwga25vd24gZm9sZGVycyBidXQgdGhpbmdzIGxpa2UgSE0yIG1pZ2h0IG5vdCBzdG9yZSBpdCBkYXRhIGluIHRoZSB1c3VhbCBwbGFjZXMuIFNvIG1ha2Ugc3VyZSB5b3UgYXJlIGxvb2tpbmcgdXAgb24gdGhlIHdlYiBob3cgdG8gYmFjayB1cCB5b3VyIGRhdGFiYXNlLiBUaGVyZSBpcyBub3JtYWxseSBhIG1lbnUgb3B0aW9uIGZvciB0aGlzIGFuZCB5b3UgY2FuIGJhY2sgaXQgdXAgdG8geW91ciBteSBkb2N1bWVudHMgYW5kIHRoZW4gdGhhdCB3aWxsIGdldCBiYWNrZWQgdXAgdG8gQ2FyYm9uaXRlIGNsb3VkLiBPciBiYWNrIGl0IHVwIHRvIEdvb2dsZSBkcml2ZSBzbyBpdCBub3Qgb24geW91ciBtYWNoaW5lIGl0IGluIHRoZSBjbG91ZC4gUmVtZW1iZXIgZmlyZXMsIGZsb29kcywgdGhlZnQgbWFrZXMgZGF0YSBnbyBhd2F5IGFsc28gYW5kIGlzIHN0b3JlZCBjbG9zZSBvciBpbiB0aGUgc2FtZSBob3VzZS4KQXMgYSBuZXcgbWVtYmVyIHRvIHRoZSB0ZWFtIHRoZXkgaGF2ZSBhbGwgYmVlbiBncmVhdCBzbyBmYXIuCkF0IHRoZSBLYXRhdGhhbmksIHdlIGFpbSB0byBnaXZlIG91ciBndWVzdHMgbWVtb3JhYmxlIGFuZCByZWxheGluZyBzdGF5IHBvc3NpYmxlLiAKVGhlIG5ldywgMTAgd2VlayBjb3Vyc2UgICB3aGljaCB3aWxsIGluY2x1ZGUgdHdvIGluIGRlcHRoIGludGVydmlld3MgYW5kIHdlZWtseSBncm91cCBjb3Vuc2VsaW5nIHNlc3Npb25zICAgd2lsbCBjb3N0IG9mZmVuZGVycyAkOTAwLCB3aXRoIHRoZSBmaXJzdCBtZW4gZXhwZWN0ZWQgdG8gYmVnaW4gdGhlIGNvdW50eXdpZGUgcHJvZ3JhbSBieSB0aGUgZW5kIG9mIHRoZSBtb250aC4KVGhlIHBldGl0aW9uIHNhaWQgdGhlIGNsdWIsIGFsc28gbmFtZV4gYXMgYSBkZWZlbmRhbnQsIGZhaWxlZCB0byBwcm90ZWN0IGl0cyBwYXRyb25zLiBFZGdlcnRvbiBZb3V0aHMgRW5saXN0IGluIE5hdnkgVHdvIEVkZ2VydG9uIG1lbiwgV2VuZGVsbCBEZWFuIEJlZWRsZSwgc29uIG9mIE1ycy4gCkkgbmV2ZXIgc3RvcHBlZCB0cmFpbmluZyBhbHRvZ2V0aGVyLCBidXQgdGhlcmUgd2VyZSBhIGNvdXBsZSB5ZWFycyB3aGVyZSBteSB3YXMgc3BvcmFkaWMgYXQgYmVzdCBhbmQgbXVsdGlwbGUgcGVyaW9kcyBpbiB0aGVyZSB3aGVyZSBJIG1pc3NlZCBhIG1vbnRoIG9yIHR3byBjb21wbGV0ZWx5LiBPbmNlIEkgZ290IGJhY2sgdG8gc2VyaW91c2x5IHRyYWluaW5nIG1vc3Qgb2YgbXkgc3RyZW5ndGggY2FtZSBiYWNrIHdpdGhpbiBhIGNvdXBsZSBtb250aHMgYW5kIEkgd2FzIG1hdGNoaW5nIG9yIGJlYXRpbmcgbXkgb2xkIG51bWJlcnMgd2l0aGluIDYgbW9udGhzLiBJIHN1cHBvc2UgbXkgZnVja2Fyb3VuZCB0cmFpbmluZyBoZWxwZWQgbWUgbWFpbnRhaW4gc29tZSBzZW1ibGFuY2Ugb2Ygc3RyZW5ndGgsIGJ1dCBJIGZlbHQgbGlrZSBJIG1hZGUgYSBsb3Qgb2YgcHJvZ3Jlc3MgcmVhbGx5IHF1aWNrbHkgd2hlbiBJIGNvdWxkIGZvY3VzIG9uIGl0IGFnYWluIHNpbmNlIEkgYWxyZWFkeSBoYWQgYSBiYXNlIG9mIHN0cmVuZ3RoLgpIZW5kZXJzb24gb2ZmaWNpYWxzIHNhaWQgdGhlaXIgaW52ZXN0aWdhdGlvbiBvZiB0aGUgZm91ciBidXNpbmVzc2VzIHNob3dlZCBhIHBhdHRlcm4gYW5kIG5vdCBpc29sYXRlZCBpbmNpZGVudHMuIENvbnJveSBzYWlkIHRoZSByZXZvY2F0aW9ucyB3ZXJlIHdhcnJhbnRlZCB0byBwcmV2ZW50IHByb3N0aXR1dGlvbi4gU2hlIGRlbmllcyB0aGUgY2l0eSBoYXMgdGFyZ2V0ZWQgQXNpYW4gb3duZWQgYnVzaW5lc3NlcyBhbmQgc2FpZCB0aGUgaW52ZXN0aWdhdGlvbiB3YXMgdHJpZ2dlcmVkIGJ5IGNpdGl6ZW4gY29tcGxhaW50cy4KVGFuZGlzIHF1J0lzYWJlbGxlIE1hc3MgeSBlc3QgYWxsZSBkJ3VuIGV4ZXJjaWNlIGQnYXV0b2ZpY3Rpb24sIFJveGFubmUgQm91Y2hhcmQgZXN0IGFsbGUgZGFucyBsYSBmaWN0aW9uIHRvdGFsZS4gIEMnZXN0IHVuZSBmZW1tZSBxdWkgY3JpdCAgc29uIG1hcmkuIENlIG4nZXN0IG1tZSBwYXMgbW9uIGxhbmdhZ2Ugcm90aXF1ZSAgbW9pICwgaW5kaXF1ZSB0IGVsbGUuIApCdXQgdmlnaWxhbnRlIGp1c3RpY2UgaXMgcHJldHR5IG11Y2ggaG93IGp1c3RpY2Ugd29ya2VkIGZvciBodW1hbml0eSBmb3IgYSBsb25nIHRpbWUgYmVmb3JlIG91ciBtb2Rlcm4gZGF5cyBvZiBjb3VydGhvdXNlcywgc28gaXQgZGVmaW5pdGVseSBoYWQgaXRzIHBsYWNlIGluIGhpc3RvcnkgYW5kIGlmIG1vZGVybiBjb3VydGhvdXNlcyBmYWlsIHRvIHByb3ZpZGUgYWRlcXVhdGUganVzdGljZSB0byB0aGVpciBwZW9wbGUgdGhlbiBpdCBpcyBzdGlsbCBhIHJlbWluZGVyIHRoYXQgdGhlcmUgYXJlIGNvbnNlcXVlbmNlcyBmb3IgZnVja2luZyBvdmVyIHBlb3BsZSBldmVuIGlmIHRoZSBwb3dlciBzdHJ1Y3R1cmUgZG9lc24gbG9vayB0aGF0IHdheS4uIApBdCB0aGVzZSBzaXRlcyBwbGF5ZXIgc2FmZXR5IGlzIGFsc28gb25lIG9mIHRoZSB0b3AgcHJpb3JpdGllcyBhbmQgdGhleSBvZmZlciBmYXN0IGFuZCByZWxpYWJsZSBkZXBvc2l0cyBhbmQgY2FzaG91dHMuIFNvIGRvbid0IHdhc3RlIGEgbWludXRlLiBTaWduIHVwIHdpdGggYSByZWNvbW1lbmRlZCBwb2tlciBzaXRlIGFuZCBlbmpveSB0aGUgaG90dGVzdCBwb2tlciBhY3Rpb24uLiAKSSd2ZSBrbm93biBGcmVkIGFzIGxvbmcgYXMgSSBoYXZlIGtub3duIGFsbCBvZiB5b3UuIEhlIHdhcyBhIGdvb2QgbWFuIGFuZCBJIGxpa2VkIGhpbS4gCk1laXN0IGlzdCBlciBlaW4gZ3V0ZXIgUmVkbmVyLiBFaW4gRG9zaGEgVW5nbGVpY2hnZXdpY2h0IGJld2lya3QgYmVpIGlobSB2b3J6ZWl0aWdlcyBFcmdyYXVlbiBvZGVyIEhhYXJhdXNmYWxsLiAKVGhlIGZvbGxvd2luZyBlc3NlbnRpYWxzIG9pbHMgc2hvdWxkIG5ldmVyIGJlIHVzZWQgb24gdGhlIHNraW46IEFsYW4gUm9vdCAoSW51bGEgaGVsZW5pdW0pIEFsbW9uZCBiaXR0ZXIsIGV4cHJlc3NlZCBCaXJjaCBzd2VldCwgQmlyY2ggdGFyLCBCb2xkbyBsZWFmLCBDYWRlLCBDYW1waG9yIChicm93biwgeWVsbG93LCB1bnJlY3RpZmllZCksIENvbG9waG9uLCBDb3N0b3MgUm9vdCwgRmlnIExlYWYgYWJzLCBIb3JzZXJhZGlzaCBNdXN0YXJkICh2b2xhdGlsZSksIE9wb3BvbmF4ICwgUGVydSBiYWxzYW0gLCBSdWUgYWJzICwgU2Fzc2FmcmFzLCBUb2x1LCBUdXJwZW50aW5lIHVucmVjdGlmaWVkLCBWZXJiZW5hIChmcm9tIGNpdHJpb2RvcmEpLi4gCldoYXQncyB3b3JrZWQgZm9yIHlvdXIgZmFtaWx5P29uIEphbiA1LCAyMDE3LiAKUHN5Y2hvbG9neSByZXNlYXJjaGVycyBhdCBXYXNoaW5ndG9uIFVuaXZlcnNpdHkgaW4gU3QgTG91aXMgZm91bmQgdGhhdCB3aGVuZXZlciBzdHVkeSBwYXJ0aWNpcGFudHMgd2VyZSBzaG93biBhIGRvbGxhciBzaWduLCBhIHByZWRldGVybWluZWQgY3VlIHRoYXQgYSBjb3JyZWN0IGFuc3dlciBvbiB0aGUgdGFzayBhdCBoYW5kIHdvdWxkIHJlc3VsdCBpbiBhIGZpbmFuY2lhbCByZXdhcmQuCldoeSBNZW5vcG9kIGxlZnQgQXJsZW5lIERpY2tpbnNvbiBvdXQgaW4gdGhlIGNvbGQgZm9sbG93aW5nIG9uIGFpciBEcmFnb25zJyBEZW4gZGVhbFdoeSBTYWdlIE1peG9sb2d5IHdhc24ndCByZWFkeSBmb3IgZHVlIGRpbGlnZW5jZSB3aXRoIEFybGVuZSBEaWNraW5zb25UaGUgZGVhbCBUaGUgYnVzaW5lc3MgcGFydG5lcnMgYXNrZWQgZm9yICQ1MDAsMDAwIGluIGV4Y2hhbmdlIGZvciBhIDIwJSBlcXVpdHkgc3Rha2UsIGEgJDIuNSBtaWxsaW9uIHZhbHVhdGlvbi4gVGhlIG1vbmV5IHdhcyB0byBiZSB1c2VkIHRvIHN0YXJ0IHByb2R1Y3Rpb24gYW5kIGJ1aWxkIGludmVudG9yeS4gCkl0IGEgbG9vcGhvbGUgc3lzdGVtLCB3aG8ga25vd3MgaG93IGxvbmcgaXQgY291bGQgbGFzdC4gCkFsc28sIHRoZSB0aW1lIGxpbWl0IGhhcyBiZWVuIHJlbW92ZWQgd2hpY2ggbWFrZXMgdGhpcyBtaXNzaW9uIGNvbnNpZGVyYWJseSBlYXNpZXIuIApBbmQgdGhlbiBhZ2FpbiBpbiBBbXN0ZXJkYW0uLiAKSSBrbm93IHlvdSBjYW4gZG8gdGhpcy4gCkNhc3RUaGUgZmlsbSBpcyBuYXJyYXRlZCBieSBGcmVkIFNoaWVsZHMuIEhlIGRlc2NyaWJlcyB0aGUgZXZlbnRzIGRlcGljdGVkIGluIFdhbHQgRGlzbmV5J3Mgc2lsZW50IDE2bW0gaG9saWRheSBmaWxtIGZvb3RhZ2UgYXMgd2VsbCBhcyBuYXJyYXRpbmcgdGhlIHNob3J0IGFuaW1hdGVkIGZpbG1zLiBTb21lIHNjZW5lcyBpbiB3aGljaCBtdXNpYyBhcHBlYXJzIHdlcmUgbGF0ZXIgZHViYmVkIHdpdGggdGhlIGFwcHJvcHJpYXRlIGluc3RydW1lbnRzLiBBbW9uZyB0aGUgRGlzbmV5IGFydGlzdHMgaW4gU291dGggQW1lcmljYSB3ZXJlIExlZSBCbGFpciwgYW4gT2x5bXBpYyBHb2xkIE1lZGFsIHdpbm5pbmcgYXJ0aXN0MyBhbmQgaGlzIHdpZmUgTWFyeSBCbGFpci4gTWFyeSB3YXMgb25lIG9mIERpc25leSdzIG1vc3QgdGFsZW50ZWQgYW5kIGluZmx1ZW50aWFsIGFydGlzdHMgYW5kIEltYWdpbmVlcnMuIFNoZSBub3Qgb25seSBkZXZlbG9wZWQgY29uY2VwdCBhcnQgZm9yIERpc25leSBmaWxtcyBtYWRlIGluIHRoZSAxOTQwcyBhbmQgMTk1MHMsIGJ1dCBhbHNvIGNyZWF0ZWQgdGhlIGxvb2sgb2YgdGhlIEl0J3MgYSBTbWFsbCBXb3JsZCBBZnRlciBBbGwgcmlkZSBpbiBEaXNuZXlsYW5kLgpHYW1lc3RvcCBidXlzIHVzZWQgZ2FtZXMgZm9yIGEgY2VydGFpbiBwcmljZS4gCkhlIGFsc28gYWxsZWdlZGx5IHNlYXJjaGVkIHRoZSBpbnRlcm5ldCBmb3IgYW4gSXNsYW1pYyBTdGF0ZSBtYWdhemluZSBmZWF0dXJpbmcgYW4gYXJ0aWNsZSBhYm91dCB0aGUgYm9tYiBzYWlkIHRvIGhhdmUgYnJvdWdodCBkb3duIGEgUnVzc2lhbiBhaXJsaW5lciBpbiBPY3RvYmVyIDIwMTUuCkVuIEZyYW5jZSwgZW52aXJvbiAxMCUgZGVzIGZlbW1lcyBlbiBnZSBkZSBwcm9jcmVyLCBzb2l0IGVudmlyb24gMSw1IG1pbGxpb25zLCBzZXJhaWVudCB0b3VjaGVzIHBhciBsJ2VuZG9tdHJpb3NlLiBFbGxlIHNlIGNhcmFjdHJpc2UgcGFyIGxhIHByc2VuY2UgYW5vcm1hbGUgZGUgdGlzc3VzIHNlbWJsYWJsZSAgY2VsdWkgZGUgbGEgbXVxdWV1c2UgZGUgbCd1dHJ1cyBlbiBkZWhvcnMgZGUgbGEgY2F2aXQgdXRyaW5lLCBkYW5zIGxlIGNvbG9uLCBsYSB2ZXNzaWUsIGxlcyBvdmFpcmVzLCBsZSByZWN0dW0gZXQgbW1lIGxlcyBwb3Vtb25zLiBDZXMgY2VsbHVsZXMgcmFnaXNzZW50IGFsb3JzIGF1eCBob3Jtb25lcyBsb3JzIGR1IGN5Y2xlIG1lbnN0cnVlbCwgZXQgc2UgZHNhZ3JnZW50LCBjb21tZSBsZSBmYWl0IGxhIG11cXVldXNlIHV0cmluZSBjaGFxdWUgbW9pcyBkdXJhbnQgbGVzIG1lbnN0cnVhdGlvbnMuIApXZSBzaGFyZWQgcmlnaHQgYXdheS4gClRoZXJlJ3MgZXZlbiBhIG1pY3JvcGhvbmUgdGhhdCBwaWNrcyB1cCBvbiB0aGUgbm9pc2UgbGV2ZWwgaW4gdGhlIGNhciBzbyB0aGF0IGl0IGNhbiBhdXRvbWF0aWNhbGx5IGFkanVzdCB0aGUgdm9sdW1lIGxvdWRlciB0byBjb21wZW5zYXRlIGZvciBiYWNrZ3JvdW5kIG5vaXNlIFtzb3VyY2U6IEF1ZGldLiBBbmQsIG5vdCB0byBiZSBvdXRkb25lLCBMaW5jb2xuIGV2ZW4gc3RhcnRlZCBpbmNvcnBvcmF0aW5nIFRIWCBjZXJ0aWZpZWQgKGJhc2ljYWxseSwgbW92aWUgdGhlYXRlciBxdWFsaXR5KSBhdWRpbyBzeXN0ZW1zIGluIHRoZWlyIGx1eHVyeSBjYXJzIFtzb3VyY2U6IENOZXRdLi4gCkdyZXlob3VuZCBhZHZvY2F0ZSBvcmdhbml6YXRpb25zIGhhdmUgcGlsZWQgdXAgZGF0YSBuYXRpb253aWRlIGFib3V0IHBvb3IgbGl2aW5nIGNvbmRpdGlvbnMgaW4gdHJhY2sga2VubmVscyBhbmQgcmFjZSBpbmp1cmllcyBzb21lIHNvIHNldmVyZSB0aGV5IHJlcXVpcmUgdGhlIGRvZ3MgdG8gYmUgcHV0IGRvd24gZm9yIHRoZSBmbGVldCBzcGVjaWVzLiAKQnV0IHdoeSBkbyBzdGF0ZXMgaXNzdWUgdmFuaXR5IHBsYXRlcyBpbiB0aGUgZmlyc3QgcGxhY2U/IFRoZSBleHRyYSByZXZlbnVlIGdlbmVyYXRlZCBieSBzdWNoIHBsYXRlcyBjYW5ub3QgbWFrZSB1cCBmb3IgdGhlIHJpc2sgdGhhdCB0aGV5IHByZXNlbnQgdG8gb3RoZXIgZHJpdmVycy4gQWZ0ZXIgYWxsLCB3aG8gaGFzbiBiZWVuIGRyaXZpbmcgYmVoaW5kIHNvbWVvbmUgd2l0aCAiQk9TU0xEWSIgb3IgIkhJT0ZDRVIiIG9uIHRoZWlyIHBsYXRlcyBhbmQgbm90IGZlbHQgYSBzdWRkZW4gdXJnZSB0byByYW0geW91ciBjYXIgcmlnaHQgaW50byB0aGUgcmVhciBlbmQgb2YgdGhlaXJzLCB0aGVyZWJ5IGRlc3Ryb3lpbmcgdGhlIG9mZmVuZGluZyB2YW5pdHkgcGxhdGUgZm9yIGFsbCB0aW1lLi4gCk15IGZhbWlseSBhbmQgSSBoYXZlIGFsd2F5cyBzdHJ1Z2dsZWQgZmluYW5jaWFsbHksIGFuZCBJIGFtIGNvbnNpZGVyaW5nIHRha2luZyBvdXQgdGhlIGZ1bGwgY29zdCBvZiBsaXZpbmcgaW4gbG9hbnMgYW5kIHVzaW5nIHRoZSBzdGlwZW5kIEkgcmVjZWl2ZWQgdG8gc2VuZCBteSBwYXJlbnRzIG9uIGEgbmljZSB2YWNhdGlvbi4KTXkgaHVzYmFuZCBhbmQgSSBvbmNlIHdhbGtlZCBpbnRvIGEgcGxhY2UgdGhhdCBhZHZlcnRpc2VkIG1hc3NhZ2VzLiBXZSBqdXN0IHdhbGtlZCBpbiBhbmQgaXQgZXhhY3RseSBsaWtlIHlvdSBzYXksIHRoZSB3aW5kb3dzIHdlcmUgYmxhY2tlZCBvdXQgYW5kIEkgc3dlYXIgaXQgd2FzIGxpa2UgYSBwb3JubyByb29tIHdpdGggdGhlIHNpbmdsZSBjb3VjaCBhbmQgdGhlIGRvY3RvciBvZmZpY2UvZGVudGlzdCBvZmZpY2UgY2hlY2sgaW4gd2luZG93IGJ1dCBpbnN0ZWFkIG9mIGdsYXNzIGl0IHdhcyBtZXRhbCBhbmQgaGFkIGEgc2luZ2xlIGNhbWVyYSBwb2ludGVkIGRvd24uIFdlIHdlcmUgZHVtYmFzc2VzIGFuZCBkaWRuIHJlYWxseSBub3RpY2UuIEtub2NrZWQgb24gdGhlIG1ldGFsIGdyYXRlIGFuZCB3YWl0ZWQgYSBiaXQuIFRoZW4gd2Fsa2VkIG91dCB3aGVuIG5vIG9uZSByZXNwb25kZWQuIEl0IGRpZG4gY2xpY2sgdW50aWwgYSBkYXkgb3Igc28gbGF0ZXIgd2hlbiB3ZSB3ZXJlIHRlbGxpbmcgZnJpZW5kcyBhYm91dCB0aGUgZXhwZXJpZW5jZS4gSSBoYXZlIGEgZmVlbGluZyB0aGV5IGRvbiBoYXZlIGEgZ2lmdCBjYXJkIHByb2dyYW0uCkl0J3MgcmVhc29uYWJsZSB0byBhc3N1bWUgdGhhdCBhIHN1YnN0YW50aWFsIG51bWJlciBvZiBMYXMgVmVnYXMgZXNjb3J0cyBlbmdhZ2UgaW4gaWxsZWdhbCBzZXh1YWwgYWN0aXZpdHkgd2l0aCBjbGllbnRzIGF0IGxlYXN0IHNvbWUgb2YgdGhlIHRpbWUuIApJIGVuZGVhdm9yIHRvIG5ldmVyIHVzZSB0aGF0IGxhbmd1YWdlIHRvIGRlc2NyaWJlIGFueW9uZS4gClRydW1wIGlzIGFsc28gc3R1cGlkLiBIaXMgbGF3eWVycyBhcmUgc3R1cGlkLiAKSW5mYWN0LCBoaXMgdW53aWxsaW5nbmVzcyB0byBsZXQgZ28gb2YgdGhlIGhhbmQgb2YgQmVndW0gTnVzcmF0IEJodXR0bywgdXBvbiBhcnJpdmFsIGF0IEJlamluZyBhaXJwb3J0LCBhbG9uZ3NpZGUgaGVyIGh1c2JhbmQsIFp1bGlmcWFyIEFsaSBCaHV0dG8sIGhhZCBiZWNvbWUgdGhlIGJ1dHQgb2YgbWFueSBqb2tlcy4gQnV0IGFsbCBMZWFkZXJzLCBmcm9tIFNvdmlldCBMZW9uaWQgQnJlemhuZXYgdG8gQW1lcmljYW4gUmljaGFyZCBOaXhvbiBhY2tub3dsZWRnZWQgdGhhdCBaaG91J3MgaGFuZHNoYWtlIHdhcyB3YXJtIGFuZCBmcmllbmRseSwgbWFraW5nIGhpbSBhZG1pcmFibGUuLiAKSWYgdGhleSBtYW5hZ2UgdG8gZ2V0IHRyb3VnaCBib3RoIHRoYW4gdGhlcmUgaXMgbm8gd2F5IHRoZXkgd2lsbCBhIHNpZ25pZmljYW50bHkgaW1wZWRpbmcgZWZmZWN0IG9uIGNvbXBldGl0aW9uLldpbGwgaXQgYWZmZWN0IHlvdSBwZXJzb25hbGx5P05haCBpdCBtaWdodCBnaXZlIG1lIHNvbWUgaW50ZXJlc3RpbmcgRVUgY29tcGV0aXRpb24gY2FzZSBsYXcgYnV0IHRoYXQgd291bGQgYmUgaXQuIFBsdXMgYSBTcGlkZXkgYW5kIERlYWRwb29sIG1vdmllIHdvdWxkIGJlIG5pY2UuV291bGQgeW91IGFwcHJvdmUgdGhpcyBhY3F1aXNpdGlvbj9ZZXMgNDAlIGlzIHRoZSBsZWdhbCBiZW5jaG1hcmsgdG8gYXNzdW1lIGEgZG9taW5hbnQgcG9zaXRpb24gYW5kIHRoYXQgaGFzIG5vdCBiZWVuIHJlYWNoZWQuIApUaGUgU2VuYXRlIGV2ZW50dWFsbHkgdm90ZWQgdG8gYmVnaW4gZGViYXRlLCBidXQgYWdyZWVkIHRvIHdhaXQgZm9yIGEgYmlwYXJ0aXNhbiBhZ3JlZW1lbnQgYmVmb3JlIG1vdmluZyBhbnkgZnVydGhlci5Kb2huIENvcm55biBvZiBUZXhhcywgdGhlIE5vLiAKSGUgbm90IHVwbG9hZGluZyBmdWxsIGVwaXNvZGVzLgpJIHRyaWVkIHRoZSBzbWFsbGVyIG9mIEdlZWtEZXNrJ3MgdHdvIGJhc2ljIG1vZGVscyAgIGEgNDUgaW5jaCB3aWRlIGRlc2sgdGhhdCBzZWxscyBmb3IgJDc0OS4gKFRoZSA3OSBpbmNoIG1vZGVsIGdvZXMgZm9yICQ3OTkuIFNoaXBwaW5nIHRvIHRoZSBsb3dlciA0OCBzdGF0ZXMgc3RhcnRzIGF0ICQxMTA7IHRoZSBkZXNrcyBzaGlwIHVuYXNzZW1ibGVkLikgSSdsbCBhZG1pdCBpdCB0b29rIGEgZmV3IGRheXMgdG8gZ2V0IHVzZWQgdG8uIEF0IGZpcnN0LCBJIGNvdWxkbid0IGRlY2lkZSB3aGVuIHRvIHN0YW5kIGFuZCB3aGVuIHRvIHNpdC4gSSBhbHNvIHRlbmRlZCB0byBmb3JnZXQgdGhhdCBJIGNvdWxkIHN3aXRjaCBhdCBhbGw7IG9ubHkgYXQgdGhlIGVuZCBvZiB0aGUgd29ya2RheSB3b3VsZCBJIHJlbWVtYmVyIHRoYXQgbXkgZGVzayB3YXMgbW92ZWFibGUuClBvdXJ0YW50LCBhIG4gcGFzIGwgbCB1dnJlIGRlIGwgSWwgYSBwcm9kdWl0IGJpZW4gZCBvdXZyYWdlcyB0ZWxzIHF1ZSBMZXMgcGljZXMsIExlcyBmcnVpdHMgZGUgRnJhbmNlLCBMZXMgbGd1bWVzIGRlIEZyYW5jZSwgRW4gbWFyZ2UgZHUgQ29kZXgsIGFpbnNpIHF1IGZvdWxlIGQgZXQgZCBkaXNzbWlucyBkYW5zIExhIFByZXNzZSBNZGljYWxlIGV0IExhIFJldnVlIGRlIFBoeXRvdGhyYXBpZSBxdSBmb25kYSBlbiAxOTM3Li4gCkkgd291bGQgc2VlIGFsbCBvZiB0aGVzZSBvdGhlciBjb2lucyBwdW1waW5nIGV2ZXJ5d2hlcmUgYW5kIEkgd291bGQgZGl0Y2ggdGhlIGZldyB0aGF0IEkgcmVhbGx5IGJlbGlldmVkIGluLCBvbmx5IHRvIGhhdmUgdGhlbSBza3lyb2NrZXQgc29vbiBhZnRlci4gTmFubyB3aWxsIGhhdmUgaXQgdHVybiBhZ2Fpbi4gCkJvd2xpbmcgaG93ZXZlciBpcyBhIHRlY2huaXF1ZSBnYW1lLCBJIGJ1aWx0IG15IGdhbWUgYXJvdW5kIHRoZSBtb3N0IHNpbXBsZSBmb3VyIHN0ZXAgYXBwcm9hY2gsIGFsbG93aW5nIGdyYXZpdHkgdG8gY29udHJvbCBteSBiYWxsIHNwZWVkIGFuZCBmb2N1c2luZyBvbiBteSB0aW1pbmcgYW5kIGZvbGxvdyB0aHJvdWdoLiAKQ293Ym95cyBDYXNpbm8gaGFzIGJlZW4gcmVkZWZpbmluZyBob3cgbXVjaCBmdW4gYSBsb2NhbCBjYXNpbm8gY2FuIGJlIGV2ZXIgc2luY2UgaXQgb3BlbmVkIGZvciBidXNpbmVzcyBpbiB0aW1lIGZvciB0aGUgMTAwdGggYW5uaXZlcnNhcnkgb2YgdGhlIENhbGdhcnkgU3RhbXBlZGUuIkl0J3MgYSBuZXcgZXhwZXJpZW5jZSBsaWtlIG5vIG90aGVyIGNhc2lubyBpbiBDYWxnYXJ5LCIgc2F5cyBQYXVsIFZpY2tlcnMsIHByZXNpZGVudCBvZiBQZW5ueSBMYW5lIEVudGVydGFpbm1lbnQgYW5kIHRoZSBtYW4gYmVoaW5kIGxlZ2VuZGFyeSB2ZW51ZXMgc3VjaCBhcyBDb3dib3lzIERhbmNlIEhhbGwuQnJpbmdpbmcgdGhlIENvd2JveXMgYnJhbmQgdG8gYSBjYXNpbm8gaGFzIGdpdmVuIHBlb3BsZSBhIG5ldyBzdHlsZSBvZiBlbnRlcnRhaW5tZW50LCBzYXlzIFZpY2tlcnMuIFBlb3BsZSBjYW4gaGl0IHRoZSBjYXNpbm8gZm9yIGEgYml0IG9mIGdhbWJsaW5nLCBkbyBzb21lIHBlb3BsZSB3YXRjaGluZywgdGhlbiBoZWFkIHRvIENvd2JveXMuIkNvd2JveXMgQ2FzaW5vIGlzIGEgcGxhY2UgdG8gZ28gYW5kIG5vdCBqdXN0IGdhbWJsZSwgYnV0IGdldCBvdXQgYW5kIHNlZSBhbGwgdGhlIGRpZmZlcmVudCBlbnRlcnRhaW5tZW50IG9wdGlvbnMgdW5kZXIgb25lIHJvb2YsIiBzYXlzIFZpY2tlcnMuICJJdCdzIGEgeW91dGhmdWwgYXBwcm9hY2ggdG8gdGhlIGNhc2lubyBidXNpbmVzcy4iVGhlIHJlY2VwdGlvbiBzbyBmYXIgaGFzIGJlZW4gbm90aGluZyBzaG9ydCBvZiBzcGVjdGFjdWxhciwgaGUgYWRkcy4iSXQncyBsaWtlIGEgbmlnaHRjbHViLCIgc2F5cyBWaWNrZXJzLkZvciB0aG9zZSBpbnRlcmVzdGVkIGluIGdhbWJsaW5nLCBDb3dib3lzIENhc2lubyBoYXMgbW9yZSB0aGFuIDQwMCBvZiB0aGUgbmV3ZXN0IGFuZCBtb3N0IGV4Y2l0aW5nIHNsb3QgbWFjaGluZXMsIGluY2x1ZGluZyBzb21lIGV4Y2x1c2l2ZSBnYW1lcyBpbmNsdWRpbmcgVG91Y2ggQmV0IFJvdWxldHRlLkl0IGlzIGFsc28gaG9tZSB0byAxNCB0YWJsZXMgaW4gdGhlIHJlY2VudGx5IGV4cGFuZGVkIHBva2VyIHJvb20sIHdpdGggVGV4YXMgaG9sZCdlbSwgT21haGEsIFBpbmVhcHBsZSwgTGltaXQgb3IgTm8gTGltaXQgcG9rZXIgdG8gZnVsZmlsIHlvdXIgcG9rZXIgbmVlZHMuQ293Ym95cyBDYXNpbm8gYWxzbyBoYXMgQ2FsZ2FyeSdzIG1vc3QgZXhjaXRpbmcgdGFibGUgZ2FtaW5nIGV4cGVyaWVuY2UsIHdpdGggMzQgdGFibGVzIGFuZCBlaWdodCBkaWZmZXJlbnQgZ2FtZXMgdG8gY2hvb3NlIGZyb20sIGluY2x1ZGluZyBibGFja2phY2ssIHJvdWxldHRlLiAKVGhlcmUgYXJlIG1hbmdvIHRyZWVzLCBiYW5hbmEgdHJlZXMsIGxlbW9uIHRyZWVzLCBicmVhZGZydWl0IHRyZWVzLCBwYXNzaW9uIGZydWl0LCBvZiB0aGVtIG9mZmVyIGRpc2NvdW50IHZhY2F0aW9uIHBhY2thZ2VzIGJlY2F1c2UgdGhleSBrbm93IHRoYXQgdGhleSBuZWVkIHRvIGNvbXBldGUgZm9yIHlvdXIgYnVzaW5lc3MuIApXYXJuZSdzIG9uIHN0YWdlIHBlcmZvcm1hbmNlIHdpbGwsIGluIGZhY3QsIGJlIGEgcmVhbCBqYXcgZHJvcHBlci4gCkhlcmUgYSB2aWRlbyBkZWRpY2F0ZWQgdG8gTmVjcm9uIG9yYnMgaSBqdXN0IGZvdW5kLCBieSBJRElDQmVlciB3aGljaCBpcyBvbmUgb2YgdGhlIG1vc3Qgbm90b3Jpb3VzIE5lY3JvbiBwbGF5ZXJzIGFyb3VuZCwgZHVkZSBoYXMgYmVlbiBhdCB0aGVtIGZvciBhIHdoaWxlLiBNV0cgSmF5IGlzIGEgZ29vZCB0ZWFjaGVyLCBhbmQgaGVyZSBoZSB0YWNrbGVzIGdsb3dpbmcgb3Jicy4gCkFuZCBuYXR1cmFsIHZhcmlhdGlvbiB3aWxsIHN3YW1wIHdoYXRldmVyIGNvbnRyaWJ1dGlvbiBDbzIgZG9lcyBoYXZlLiAKSWYgdGhpcyB3YXMgY29tcHJlc3NlZCBpbnRvIGRpYW1vbmQgaXQgd291bGQgc3RpbGwgd2VpZ2h0IDkuOCBiaWxsaW9uIHRvbnNEaWFtb25kIGhhcyBhIGRlbnNpdHkgb2YgMy41MSBnL2NtIHdoaWNoIG1lYW5zIDkuOCBnaWdhdG9ucyBvZiBkaWFtb25kIHdvdWxkIHRha2UgdXAgMi44eDEwMTUgY20zIC4gSG93IGJpZyBpcyB0aGF0PyBQcmV0dHkgZGFtbiBiaWcuIApPbmNlIHlvdSBhbGxvdyBmb3IgdGhlc2UgdHlwZXMgb2YgZXhjZXB0aW9ucywgdGhleSBhbHdheXMgdGFrZSBhIGxpZmUgb2YgdGhlaXIgb3duIGFuZCBub3cgdGhlcmUgaXMgcHJlY2VkZW50IGZvciByZXNlYXJjaCB0aGF0IGRlbGliZXJhdGVseSBpbmZsdWVuY2VzIGl0cyBwYXJ0aWNpcGFudHMgdG8gcmF0ZSB0aGVtc2VsdmVzIGJldHRlciBhbmQgc2xhcHBpbmcgYW4gZXZpZGVuY2UgYmFzZWQgbGFiZWwgb24gc3ViamVjdGl2ZSBxdWVzdGlvbm5haXJlcyBpbiBhbiB1bmJsaW5kZWQgdHJpYWwuLiAKUmVtZW1iZXIsIHdoaWxlIEhvdWdodG9uIGlzIHJpY2ggaGUgYWluIEh1bnQgYW5kIEZvc3RlciByaWNoIHNvIGhlIGhhcyB0byBpbXByZXNzIG1vcmUgc3VjY2Vzc2Z1bCBwZW9wbGUgdGhhbiBoaW0gaW4gb3RoZXJzIHdheS4KTXkgc3RyYXRlZ3kgaGFzIGEgU0IgZmxhdHRpbmcgcmFuZ2UgdnMgVVRHIGFuZCBISiBvcGVucywgYW5kIGEgM2JldCBvciBmb2xkIHN0cmF0IHZzIENPIGFuZCBCVS4gVnMgcmVncyB0aGF0IGlzLCBhbmQgYXNzdW1pbmcgQkIgaXMgYSByZWcgd2hvIGlzIHByZXR0eSBub3JtYWwgYWdncmVzc2lvbiB3aXNlLiAKVGhlaXIgYWN0aW5nIHdvdWxkIGhhdmUgYmVlbiBxdWl0ZSBoaWxhcmlvdXMsIHdlcmUgdGhleSBub3QgaW50ZWdyYWwgdG8gYSBkYW5nZXJvdXMgbGlhaXNvbiBlbmRhbmdlcmluZyBvdXIgZnJhZ2lsZSBsaWZlIG9uIHRoaXMgZW5kYW5nZXJlZCBwbGFuZXQuIApZb3UgY291bGQgbG9vayBpbnRvIG1lZXQgdXAgZ3JvdXBzIG9yIGhvYmJ5IGdyb3Vwcy4gSG9tZXN0ZWFkaW5nIGNsdWJzIG1pZ2h0IGhhdmUgc29tZSBzdGF5IGF0IGhvbWUgc3BvdXNlcywgc2V3aW5nIGNsdWJzLCBjb29raW5nIGNsYXNzZXMsIGJvb2sgY2x1YnMgdGhhdCB0b3VjaCBvbiB0b3BpY3MgeW91IGxpa2UsIHZvbHVudGVlcmluZyBvcHBvcnR1bml0aWVzLiAKQ29mZmVlOiBob25lc3RseSBhbnl3aGVyZSB0aGF0IHNlcnZlcyBwYXJhbGxlbCA0OSBjb2ZmZWUgYmVhbnMgaXMgZ29vZC4gSWYgeW91IHNlZSBhbnkgb2YgdGhlc2UgcGxhY2VzLCB5b3UncmUgZ29vZDogcHJhZG8sIHBhbGxldCwgbWF0Y2hzdGljaywgNDl0aCBwYXJhbGVsbCB0aW1iZXJ0cmFpbi4KVGhpcyBjYW4gZWFzaWx5IHNvb3RoZSB5b3VyIHdpZmUncyBtaW5kIGFzIHdlbGwgYXMgaGVyIGJvZHkuIApJdCBJUyBtZWFuaW5nbGVzcy4gCk9rLiBXaGF0IGFtIEkgYWN0dWFsbHkgbG9va2luZyBmb3IgaGVyZSB0aG91Z2g/IFB1bGxpbmcgZnVzZXMgYW5kIHNlZSB3aGVuIHRoZSByYWRpbyBkaWVzPyBPbiB3aGljaCBmdXNlIHNob3VsZCBpdCBkaWUsIHRob3VnaD8gSSBzaW1wbHkgY29ubmVjdGVkIHRoZSBJU08gKElTTyAxMDQ4NyBpbiBjYXNlIEFtZXJpY2FuIGNhcnMgZG9uIGhhdmUgdGhlIHN0YW5kYXJkaXNlZCBjYXIgcmFkaW8gY29ubmVjdG9yIGFuZCB5b3UgaGF2ZSBubyBpZGVhIHdoYXQgSSB0YWxraW5nIGFib3V0KSB0byB0aGUgSVNPIFNvbnkgY29ubmVjdG9yIGFuZCBwbHVnZ2VkIHRoYXQgaW50byB0aGUgcmFkaW8uIEkgbm90IGFuIGV4cGVydCBidXQgSSBkb24gc2VlIG11Y2ggcm9vbSBmb3IgZXJyb3JzIGhlcmUuIApXZSB3ZW50IGludG8gRHVua2luIERvbnV0cyBhbmQgZ290IGhpbSBhIGhvdCBjaG9jb2xhdGUgYW5kIGEgYnJlYWtmYXN0IHNhbmR3aWNoLiBHbyB0byBnaXZlIGl0IHRvIGhpbSwgd2lzaCBoaW0gaGFwcHkgaG9saWRheXMgYW5kIHdoYXQgbm90IGFuZCB3aGVuIHdlIGhhbmRlZCBpdCB0byBoaW0gaGUganVzdCBzYXlzICJXaGF0IHRoZSBmdWNrIGFtIEkgc3VwcG9zZWQgdG8gZG8gd2l0aCB0aGlzPyIKSSdtIHN1cmUgb3RoZXIgbm9ybWFsIHBlb3BsZSBhcHByZWNpYXRlIHdoYXQgeW91J3JlIGRvaW5nIGFuZCB0aGluayB0aGlzIHdvbWFuIGlzIGJhc2ljYWxseSBpbnNhbmUgZm9yIGJlaW5nIHNvIGRlbWFuZGluZyBvZiB3aGF0IG90aGVyIHBlb3BsZSB2b2x1bnRhcmlseSBvZmZlciBmcm9tIHRoZSBnb29kbmVzcyBvZiB0aGVpciBoZWFydHMuCkFsdGhvdWdoIGl0IG1heSBzZWVtIGEgbGl0dGxlIGV4Y2Vzc2l2ZSwgdGhlcmUgYXJlIGEgY291cGxlIG9mIHJlYXNvbnMgd2h5IHlvdSBtaWdodCBiZW5lZml0IGZyb20gdXNpbmcgc2VwYXJhdGUgY3JlYW1zIGZvciB5b3VyIGhhbmRzIGFuZCBjdXRpY2xlcy4gV2UgbWF5IG5vdCBhbHdheXMgcmVjb2duaXplIHRoZWlyIGltcG9ydGFuY2UsIGJ1dCBjdXRpY2xlcyBhcmUgdW5pcXVlIGFuZCBzZXJ2ZSBhIHNwZWNpZmljIGZ1bmN0aW9uOiBUaGV5IGhlbHAgdG8gcHJvdGVjdCBhbmQgbm91cmlzaCBvdXIgbmFpbHMgYXMgdGhleSBncm93LiAKTm90IHBlcmZvcm0gdGhlaXIgam9iIGR1dGllcwpBbmQgYmVsaWV2ZSBtZSB0aGF0IGFpbid0IG5vIGZ1bi4gCldpdGggbW9yZSB0aGFuIDUwMCBzdHVkZW50cyBwYXJ0aWNpcGF0aW5nIGluIDQgcGVyc29uIHRlYW1zIGZyb20gMjAgTG9zIEFuZ2VsZXMgQ291bnR5IHNjaG9vbCBkaXN0cmljdHMsIE1hdGggRmllbGQgRGF5IGlzIGRlc2lnbmVkIGFzIGFuIGVucmljaG1lbnQgYWN0aXZpdHkgdG8gcHJvbW90ZSBtYXRoZW1hdGljYWwgcmVhc29uaW5nLCB0ZWFtd29yaywgYW5kIGEgYmFsYW5jZWQgbWF0aGVtYXRpY2FsIGN1cnJpY3VsdW0gZm9yIGFsbCBzdHVkZW50cyBpbiB1cHBlciBlbGVtZW50YXJ5IHRocm91Z2ggaGlnaCBzY2hvLi4gCkFjY29yZGluZyB0byBhIGZlZGVyYWwgc3R1ZHkgcmVsZWFzZWQgaW4gMjAwNSwgNDAgcGVyY2VudCBvZiBtZW4gYW5kIDM1IHBlcmNlbnQgb2Ygd29tZW4gc3VydmV5ZWQgaW4gMjAwMiBzYWlkIHRoZXkgaGF2ZSBoYWQgYW5hbCBzZXggd2l0aCBhbiBvcHBvc2l0ZSBzZXggcGFydG5lci4gCk5vdywgdGhpbmdzIGhhdmUgY2hhbmdlZCBkcmFtYXRpY2FsbHkuIEl0IGRvZXNuJ3QgbWF0dGVyIHdoZXJlIHlvdSBhcmUgaW4gdGhlIHdvcmxkLCB5b3UgY2FuIGpvaW4gYSBwb2tlciB0b3VybmFtZW50IGVhc2lseSBqdXN0IGJ5IGdvaW5nIG9ubGluZS4uIApJIGFtIGEgZmlybSBiZWxpZXZlciBpbiBwZW9wbGUgbGl2aW5nIHRoZSBsaWZlIHRoYXQgdGhleSB3YW50ICh0aGV5IG9ubHkgZ2V0IG9uZSkuIElmIGEgcGVyc29uL2NvdXBsZSBkb2Vzbid0IHdhbnQgdG8gaGF2ZSBhIGNoaWxkIChmb3Igd2hhdGV2ZXIgcmVhc29uKSwgSSB3b3VsZCBhZ3JlZSB3aXRoIHRoZW0uClRoaXMgZ3V5IHdhcyBhIG1pbGxpb25haXJlLCBpdCBxdWl0ZSBwb3NzaWJsZSBoZSB3YXMgbm90IGJvdGhlcmVkIGJ5IHRoZSB1cHMgYW5kIGRvd24uIApGb2N1cyBvbiB0aGF0LiBIZSBkb2VzbiBsaWtlIHlvdS4gQWN0aW9ucyBzcGVhayBsb3VkZXIgdGhhbiB3b3JkcyBhbmQgaGlzIGFjdGlvbnMgc2hvdyB0aGF0IGhlIGhvbGRzIHlvdSBpbiB1dHRlciBkaXNkYWluLiAKVGhlICJ2YXJpYW5jZSIgaXMgZGVmaW5pdGVseSBoaWdoZXIgaW4gYmlnZ2VyIGZpZWxkIE1UVHMgYnV0IHRoZXJlIHdheSBtb3JlIHdvcnNlIHBsYXllcnMgaW4gdGhlc2UgZmllbGRzIGFuZCB0aGF0IHdoZXJlIGFsbCB0aGUgbW9uZXkgY29tZXMgZnJvbSBhdCB0aGUgZW5kIG9mIHRoZSBkYXkuIE1vcmUgY2F1c3VhbHMgPSBtb3JlIG1vbmV5LiBWYXJpYW5jZSBpcyBuYXR1cmFsbHkgYSB0aGluZyBpbiBwb2tlciBhbnl3YXkuIApTb3JyeSB0byBoZWFyIHRoZSBzdHJ1Z2dsZSB5b3UncmUgZmFjaW5nLiBUaGVyZSBpcyBhIGxvdCBnb29kIGFkdmljZSBpbiB0aGlzIHRocmVhZCBidXQgaXQgY2FuIGJlIG92ZXJ3aGVsbWluZyB0byBsaXN0ZW4gdG8gYW55IGdvb2QgYWR2aWNlIHdoZW4geW91IGFyZSAnaW5zaWRlJyB0aGUgc2l0dWF0aW9uLiAKV2hhdCBhIGdyZWF0IHJ1bm5pbmcgdGl0bGUgdGhpcyBpczogIlRoZSBFYXJ0aCBhIHZhc3QgYm9tYnNoZWxsIiEgSXQgYXBwZWFycyBpbiBhIHNlY3Rpb24gb24gZWFydGhxdWFrZXMgYW5kIHZvbGNhbm9lcyBpbiBhIHBvcHVsYXIgc2VyaWVzIGJ5IERpb255c2l1cyBMYXJkbmVyIFRoZSBNdXNldW0gb2YgU2NpZW5jZSBhbmQgQXJ0ICh2b2xzIElJSSBJVikuIExhcmRuZXIgcmVhY2hlcyB0aGlzIGNvbmNsdXNpb24gYWZ0ZXIgcmVhc29uaW5nIHRoYXQgaWYgdGhlIGluY3JlYXNlIGluIHRlbXBlcmF0dXJlIG9mIHRoZSBlYXJ0aCBpbmNyZWFzZXMgYXMgaXQgc2VlbXMgdG8gdGhhdCBhdCB0aGUgZGVwdCBvZiA0MCBtaWxlcyB0aGUgRWFydGggd291bGQgaGF2ZSBhIHRlbXBlcmF0dXJlIG9mIDQwMDAwLCBpbmNyZWFzaW5nIDEgZGVncmVlIGZpciBldmVyeSBmaWZ0eSBmZWV0IG9mIGRlcHRoLCAib3IgMTAwMCBwZXIgbWlsZSIuIGlzIG5vIHJoZXRvcmljYWwgZXhhZ2dlcmF0aW9uLCB0aGVuLCB0byBhZmZpcm0gdGhhdCB0aGUgZ2xvYmUgd2UgbGl2ZSBvbiBpcyBhIHN0dXBlbmRvdXMgYnkgdmVyeSB0aGluIGJvbWJzaGVsbCBjaGFyZ2VkIHdpdGggbGlxdWlkIGZpcmUhIgoyMDE4IENhbm5hYmlzIENvbm5vaXNzZXVycyBHaWZ0IEd1aWRlCkRyIExpdmluZ3N0b25lOiBBbmQgYXMgd2Uga25vdyBmcm9tIHRoZSB3b3JrIG9mIFNraW5uZXIgYW5kIG1hbnkgb3RoZXJzLCBpZiB5b3UgcHJvdmlkZSBhIHN5c3RlbSB3aGVyZSBwZW9wbGUgZ2V0IGludGVybWl0dGVudCByZXdhcmRzIGZvciBkb2luZyBzb21ldGhpbmcgdGhleSBhcmUgdmVyeSBsaWtlbHkgdG8gY29udGludWUgZG9pbmcgaXQuIFNvbWV0aW1lcyB0aGV5J2xsIGNvbnRpbnVlIGRvaW5nIGl0IHRvIHRoZSBkaXNyZWdhcmQgb2YgYWxsIG90aGVyIGNvbnNpZGVyYXRpb25zIGFuZCBhdCB0aGF0IHBvaW50IHBlb3BsZSBoYXZlIGNsZWFybHkgZGV2ZWxvcGVkIGEgcHJvYmxlbSB3aXRoIHRoZWlyIGdhbWJsaW5nLi4gCl9oaWltamFzICA1IHBvaW50cyAgc3VibWl0dGVkIDcgbW9udGhzIGFnbwpFdmVuIHNvLCBCaWRlbiBhZHZpc2VyIFN0ZXZlIFJpY2NoZXR0aSBoYXMgYmVlbiBzaWduYWxsaW5nIHRvIHBvdGVudGlhbCBEZW1vY3JhdGljIHJpdmFscyB0aGF0IEJpZGVuIGlzIGV4cGVjdGVkIHRvIHJ1bi4gT3RoZXIgYWR2aXNlcnMgaW5jbHVkaW5nIEdyZWcgU2NodWx0eiBhbmQgUGV0ZXIgS2F2YW5hdWdoIGhhdmUgYmVlbiBpbiByZWd1bGFyIGNvbnRhY3Qgd2l0aCBwb3RlbnRpYWwgc3RhZmYgYWNyb3NzIHRoZSBjb3VudHJ5IHRvIGVuc3VyZSBCaWRlbiBjb3VsZCBxdWlja2x5IHJhbXAgdXAgYSBuYXRpb25hbCBvcmdhbml6YXRpb24uCiJIZSBoYXMgcmVwZWF0ZWRseSBhdHRhY2tlZCBTdG9uZW1hbiBEb3VnbGFzIEhpZ2ggU2Nob29sIGd1biB2aW9sZW5jZSBzdXJ2aXZvcnMgYW5kIFBhcmt3YXkgU2Nob29sIERpc3RyaWN0IGhpZ2ggc2Nob29sIHN0dWRlbnRzIG9uIHNvY2lhbCBtZWRpYSBpbiB0aGUgbW9zdCB2aWxlIG1hbm5lciB5b3UgY2FuIGV2ZW4gaW1hZ2luZSwiIHdyb3RlIHRoZSBEZW1vY3JhdCBpbiBoZXIgcG9zdCwgcmVmZXJyaW5nIHRvIHRoZSBwdWJsaWMgc2Nob29sIGRpc3RyaWN0IGluIFN0LiBMb3VpcyBDb3VudHkuICJXZSBkZW1hbmQgYWR2ZXJ0aXNlcnMgc3RvcCBiZWluZyBjb21wbGljaXQuIFN0b3Agc3VwcG9ydGluZyBhbiBhZHVsdCB3aG8gc3Bld3Mgc3VjaCBoYXRlLiIKQXNzdXJlIHRoZSBjbGllbnQgdGhhdCBhbGwgaW5mb3JtYXRpb24gZGlzY2xvc2VkIGlzIGNvbmZpZGVudGlhbC4gQWN0aXZlIGR1dHkgcGVyc29ubmVsIG1heSBub3Qgd2FudCB0aGVpciBDb21tYW5kZXJzIHRvIGtub3cgdGhhdCB0aGV5IGFyZSBoYXZpbmcgaXNzdWVzLgpUaGUgam9ibGVzcyByYXRlcyBpbiBWYW5jb3V2ZXIgYW5kIE1vbnRyZWFsIGFyZSA0LjcgcGVyIGNlbnQgYW5kIDUuNSBwZXIgY2VudCwgcmVzcGVjdGl2ZWx5LCBjb21wYXJlZCB3aXRoIHRoZSBuYXRpb25hbCByYXRlIG9mIDUuOCBwZXIgY2VudC4gVG90YWwgZW1wbG95bWVudCBpbiBDYWxnYXJ5IHdhcyAxIHBlciBjZW50IGhpZ2hlciBpbiBGZWJydWFyeSB0aGFuIGEgeWVhciBlYXJsaWVyLCBjb21wYXJlZCB3aXRoIGFuIGluY3JlYXNlIG9mIGFsbW9zdCB0d28gcGVyIGNlbnQgaW4gVG9yb250byBvdmVyIHRoZSBzYW1lIHBlcmlvZC4gRW1wbG95bWVudCBpbiBNYW5pdG9iYSBhY3R1YWxseSBkZWNsaW5lZCBsYXN0IG1vbnRoLi4gClllYWggYmF0bWFucyBraW5kIG9mIGEgcGllY2Ugb2Ygc2hpdCBmb3IgZW5mb3JjaW5nIGhpcyB3ZWlyZCBsaXR0bGUgInJ1bGVzIiBvbiBldmVyeW9uZSBoZSBtZWV0cy4gVGhpcyBpcyBhIGR1ZGUgdGhhdCBoYXMga2lsbGVkIG1hbnkgcGVvcGxlLCBlc2NhcGVkIGphaWwgYW5kIGJhdG1hbiBjb3VudGxlc3MgdGltZXMsIGFuZCBoYXMgdm93ZWQgdG8ga2lsbCB5b3VyIGZhbWlseS4gQW5kIHlvdXIgYWJvdXQgdG8gZmluaXNoIGl0LgpMZSBmZXUsIGNsYnIgYXUgc29sc3RpY2UgZCBwcm9jZGUgZGUgbGEgbW1lIGxvZ2lxdWUuIFF1IHF1aSBhIHBvdXNzIGxlcyBob21tZXMgIGFsbHVtZXIgZGUgZ2lnYW50ZXNxdWVzIGZldXggIGNldHRlIGRhdGUgcHJjaXNlIGRlIGwgUXVlbGxlcyBzeW1ib2xpcXVlcyB0b3V0IGNlbGEgdmhpY3VsZSB0IGlsPyBRdSBwYXJhaXNzZW50IGF1am91cmQgcGx1cyBmb2xrbG9yaXF1ZXMgcXVlIHNhY3JzIHNpZ25pZmllIHQgaWwgcXVlIGNlcnRhaW5lcyB2YWxldXJzIHNlIHNvbnQgZGlzc291dGVzIGF1IGZpbCBkdSB0ZW1wcz8uIApUaGluayBhYm91dCB5b3VyIHJ1bGVzLCBzdGljayB0byB0aGVtIGFuZCBtYWtlIHRoZW0gY2xlYXIgdG8geW91ciByZWFkZXIuIApUaGUgNzEgcm9vbXMgYW5kIHN1aXRlcyBoYXZlIHZpZXdzIG9udG8gdGhlIEdyYW4gVmlhLCBDYWxsZSBIb3J0YWxlemEgb3IgdGhlIGlubmVyIGNvdXJ0eWFyZC4gU291bmRwcm9vZmluZyBpcyBleGNlbGxlbnQsIHdoaWNoIGlzIGltcG9ydGFudCBpbiB0aGlzIGxvY2F0aW9uLiAKSGUgd2FzIGF0IFJlcHRvbiB3aGVuIGEgYm95LCB3aGVyZSBhdCBjcmlja2V0IGhlIGpvaW5lZCB0aGUgcmVtYXJrYWJsZSBhbmQgZW5kdXJpbmcgcm9sbCBvZiBzdXBlcmIgeW91bmcgcGxheWVycyBlbWFuYXRpbmcgZnJvbSB0aGUgc2Nob29sICAgRnJ5LCBQYWxhaXJldCwgRm9yZCwgSk4gQ3Jhd2ZvcmQsIHRvIG5hbWUgYSBmZXcuIApQb3VyIGxlcyBzb2xkYXRzIGRlIGxhIGd1ZXJyZSBzYWludGUgaXNsYW1pcXVlLCBsZSBtb25kZSBlc3QgZGl2aXMgZW4gZGV1eCBwYXJ0aWVzIDogaWwgeSBhIGxlcyB0ZXJyaXRvaXJlcyBkZSBsJ0lzbGFtIGV0IGxlIHJlc3RlLiBQb3VyIGNlcyBmb3VzIGRlIERpZXV4LCBpbCB0YWl0IGR1IGRldm9pciBkZXMgbXVzdWxtYW5zIGRlIHNvdW1ldHRyZSBldCBkZSBjb252ZXJ0aXIgdG91cyBjZXV4IHF1aSBuZSBsJ3RhaWVudCBwYXMuIEF1c3NpLCBkZXZhbnQgbGVzIGFzc2F1dHMgcnB0cyBkZXMgIGRqaWhhZGlzdGVzICBhcmFiZXMsIGxlcyBOdWJpZW5zIHByZnJyZW50IG5nb2NpZXIgbGEgcGFpeCBlbiBjb25jbHVhbnQgZW4gNjUyIHVuIHRyYWl0IGNvbm51IHNvdXMgbGUgbm9tIGRlICBCYWtodCAuIApUaGUgb2NjdWx0LCB3aGV0aGVyIGl0IGEgcmVsaWdpb24gb3IgYWNhZGVtaWMsIGlzIG9uZSBvZiB0aG9zZSB0aGluZyB3aGVyZSB5b3UgbmV2ZXIgc3RvcCBzdHVkeWluZyBidXQgbWFueSBkbyBvbmNlIHRoZXkgdGhpbmsgdGhleSB1bmRlcnN0YW5kLiBBbmQgYXMgYSByZXN1bHQgdGhleSBncm9zc2x5IGlnbm9yYW50KSBvciBzaGUgaG9waW5nIHRoYXQgd2l0aCBleHBvc3VyZSBzaGUgIndlaXJkIiB5b3Ugb3V0IGVub3VnaCB0byBzdGFydCBiZWxpZXZpbmcgaW4gaGVyIGhvb2RvbzsgYXQgYSBjZXJ0YWluIHBvaW50IHlvdSwgeWVzIFlvdSBkZWFyIE9QLCBtdXN0IGJlbGlldmUgaXQgY2FuIHdvcmsgaW4gb3JkZXIgZm9yIGl0IHRvIHdvcmsuIApJdCBhbHNvIGhhZCB0aGUgb3Bwb3NpdGUgZWZmZWN0IGZvciBoaW0gaGUgdGhvdWdodCBoZSB3YXMgYmVpbmcgcGF0cmlvdGljLCBidXQgdGhlIEZCSSB3YXMgbW9yZSBpbnRlcmVzdGVkIGluIGhpbSB0aGFuIGhpcyBpbmZvcm1hdGlvbi4gSGUgd291bGQgZ2V0IGVhdGVuIHVwIGJ5IE1jQ2FydGh5aXN0IG9wZXJhdGl2ZXMgYW5kIGRlbmllZCBIVUFDIGFueSBpbmZvcm1hdGlvbiBvbiBhbnkgb2YgdGhlIGZhbW91cyAiSG9sbHl3b29kIFRlbiIuIEhlIGdvdCBhIHllYXIgaW4gamFpbCBhbmQgd2FzIGJsYWNrbGlzdGVkLCBib290ZWQgb3V0IG9mIExBLiAKU2Vsb24gbCBtb25kaWFsZSBkZSBsYSBzYW50IChPTVMpLCBlbnRyZSA0IGV0IDYgbWlsbGlvbnMgZGUgZmVtbWVzIHZpdmVudCBkZSBsYSBwcm9zdGl0dXRpb24gZW4gQ2hpbmUuIFVuIG5vbWJyZSBub3JtZSBldCB1bmUgaW5kdXN0cmllIHNhbnMgcmdsZXMgbmkgbG9pcy4KWW91IHNob3VsZCBzdGlsbCBoYXZlIHJlcG9ydGVkIGhpbSB0byB0aGUgcG9saWNlPyBTbyB3aGF0IGlmIGhlIGRpZG4gYWN0dWFsbHkgaGFybSB5b3UgcGh5c2ljYWxseT8gSGUgcHV0IHlvdSBpbiBhIHBvc2l0aW9uIHdoZXJlIGhlIGNvdWxkIGhhdmUgZWFzaWx5IGhhcm1lZCB5b3UgaW4gdGhpcyBvdXQgb2YgdGhlIHdheSBwbGFjZS4gClRoYXQgZmluZS4gWW91IGhhdmUgdGhlIHJpZ2h0IHRvIHRoaW5rIHRoYXQuIApDUEFDIGhhcyBhbHdheXMgYmVlbiB3b25kZXJmdWwgaW4gaXRzIGp1bWJsZSBvZiBjb21wZXRpbmcgaXNzdWUgZ3JvdXBzIGFsbCBqb3N0bGluZyBmb3IgYXR0ZW50aW9uLiBBbmQgaXQgY2VydGFpbmx5IGhhcyBzZWVuIHNpbWlsYXIgdGVuc2lvbnMgaW4geWVhcnMgcGFzdDogdGhpcyBpcyB0aGUgc2Vjb25kIHllYXIgdGhhdCB0aGUgUG9rZXIgQWxsaWFuY2UgaGFzIHNldCB1cCBzaG9wIGF0IENQQUMuIEJ1dCBpdCB3YXMgc3RyaWtpbmcgdG8gc2VlIGluIHNwZWVjaCBhZnRlciBzcGVlY2ggbWFueSBvZiB0aGUgd2VkZ2UgaXNzdWVzIHRoYXQgc28gcHJlb2NjdXBpZWQgdGhlIG1vc3QgcmVjZW50IEdPUCBtYWpvcml0eSAgIFRlcnJ5IFNjaGlhdm8sIGFib3J0aW9uLCBzdGVtIGNlbGxzLCBnYXlzLCBmYW1pbHkgdmFsdWVzLCByZWxpZ2lvbiBpbiBnb3Zlcm5tZW50ICAgc3VibGltYXRlZCB0byB0aGUgR09QJ3MgbGFzZXIgbGlrZSBmb2N1cyBvbiB0aGUgZWNvbm9teSBhbmQgdG8gc2VlIHRoZSBDUEFDIGF0dGVtcHRzLCBhcyB3aXRoIEdPUHJvdWQsIHRvIHdpZGVuIHRoZWlyIHRlbnQuLiAKUmVnYXJkbGVzcywgSSB3aWxsIG1ha2UgYSBwb2ludCB0byB3b3JrIHdpdGggdGhlbSBvdmVyIHRoZSBjb3Vyc2Ugb2YgdGhlIG5leHQgeWVhciB0byBlaXRoZXIgY29tYmluZSBvdXIgc3VydmV5cyBvciBpbmNyZWFzZSB0aGUgdmlzaWJpbGl0eSBvZiB0aGVpciBzdXJ2ZXkuIEkgZG9uIGV4cGVjdCB0aGF0IHRvIHJlbW92ZSBzZWxlY3Rpb24gYmlhcywgYnV0IGl0IHdpbGwgbGV0IG1lICh1cywgcmVhbGx5KSBzYXk6IFdlIGRvaW5nIHRoaXMgdG9nZXRoZXIgZm9yIHRoZSBiZW5lZml0IG9mIGFsbCBzaWRlcy4gCldpbnN0b24gaGFzIHJlbWFpbmVkIGEga2V5IGZhY3RvciBpbiBNaWNoaWdhbiBTdGF0ZSBjb250aW51ZWQgcmVsZXZhbmNlLCBhZ2FpbiBsZWFkaW5nIHRoZSBCaWcgVGVuIGluIGFzc2lzdHMgKDIzMCkgYW5kIGFzc2lzdCBwZXJjZW50YWdlICg0NC41JSkuIEhlIGFsc28gZ3Jvd24gZXZlbiBtb3JlIGFzIGEgc2NvcmVyLCBrbm9ja2luZyBkb3duIDQ3LjMgcGVyY2VudCBvZiBoaXMgc2hvdHMgZm9yIDE4LjggcG9pbnRzIHBlciBnYW1lLiBCb3RoIHN0YXRzIHBsYWNlIGhpbSBpbiB0aGUgQ29uZmVyZW5jZSB0b3AgMTAuIApXaXRoIHRoZSBjb3Vuc2Vsb3IsIHdlIGRvbiBoYXZlIHNvbGlkIHByb29mIHRoYXQgc2hlIGJyZWFraW5nIGNvbmZpZGVudGlhbGl0eSwgZXZlbiB0aG91Z2ggd2Ugc3Ryb25nbHkgc3VzcGVjdCBpdC4gClJpZ2h0IGhlcmUhIFllYWgsIEkgZ3Vlc3MgeW91IGNvdWxkIHNheSBsb25nIHRlcm0uIApUb3BwZWQgb2ZmIHRoZSBnYXMgdGFuayBidXQgd2hlbiB3ZSByZXR1cm5lZCB0aGUgY2FyLCB0aGUgbWFuIGNoZWNrZWQgdGhhdCBsdHRsZSB0YW5rIG4gdGhlIHRydW5rIGFuZCBzYWQgdCB3YXMgZW1wdHkuIFdlIHdlcmUgc28gY29uZnVzZWQuIFdlIGFyZ3VlZCBiYWNrIGFuZCBmb3J0aCBhbmQgZXZlbnR1YWxseSB3ZSBkZXRlcm1uZWQgdGhhdCB0aGUgUGFsbyBydW5zIG9uIGdhcyAoYmVuem4pIGJ1dCBhbHNvIHNvbWUgZ2FzIGNhbGxlZCBscGcgdGhhdCBzIGNoZWFwZXIuIApGSUxFIFBIT1RPIGRhdGVkIEFwcmlsIDIwMDcuIApCRmx5MzAwMDM2RiA1IFNXOiAyMzAgQ1c6IDE3MSBHVyAxNjAKWWVhaCwgdGhpcyBpcyBhIGdvb2Qgb2JzZXJ2YXRpb24uIApXaGVuIGF3YXkgZnJvbSB0aGUgZmVsdCwgZXhwbG9yZSBNaWx3YXVrZWUuIEl0J3MgYSBncm93aW5nIHRlY2ggaHViLCB3aXRoIGxvdHMgb2YgZW50ZXJ0YWlubWVudC4gTUtFIGlzIG91ciAnZ28gdG8nIGRlc3RpbmF0aW9uIHdoZW4gd2Ugd2FubmEgZ2V0IG91dCBvZiB0b3duIChmb3ggY2l0aWVzIGxpa2UgR3JlZW4gQmF5KSBhbmQgZW5qb3kgb3Vyc2VsdmVzIGJ1dCBzdGF5IGNsb3NlIHRvIGhvbWUuClRoaXMgaXMgbXkgdGhpcmRzdGludCBob21lIGFuZCBJIGp1c3QgbG92ZSB0aGUgY29tbXVuaXR5LiAKQW55dGltZSBpcyBnb29kLiAKSnVzdCBkYWFuY2UgUG9rZXJGYWFjZSBMb3ZlZUdhYW1lcyBQYXBhcmF6aWkgaXQgd2Fzbid0IHJlYWx5IExhZHkgR2FnYSdzIGZpcnN0IHNvbmcgdGhhdCBzaGUgd3JvdGUgaXMgIkJyb3duIEV5ZXMiLiBMYWR5IEdhR2EncyBmaXJzdCBzaW5nbGUgcmVsZWFzZWQgd2FzIEp1c3QgRGFuY2UuISBoZXkgbGFkeSBnYWdhJ3MgZmlyc3QgU0lOR0xFIHdhcyBKdXN0IGRhbmNlIGJ1dCBzaGUgZmlyc3Qgc3RhcmVkIHBlcmZvcm1pbmcgd2hlbiBzaGUgd2FzIDE0IHNoZSBhbHNvIHdyb3RlIHNvbmdzIGZvciBCcml0bmV5IFNwZWFycyBhbmQgdGhlIHB1c3N5Y2F0IGRvbGxzIC4gClNpbWlsYXIgdG8gb2xkIFF1YXZlIENsdWIgQmFuZ2VycyBidXQgYmV0dGVyIFFDIG5vdyBpbW8gYW5kIHRoZSB2MiBhcmUgc29saWQgKDgvMTApLiAKTWFueSBwZW9wbGUgY2FtZSBmcm9tIG90aGVyIHBhcnRzIG9mIHRoZSB3b3JsZCBkdXJpbmcgdGhlIGNvbG9uaWFsIHRpbWVzOyBwZXJoYXBzIGEgbWluaXNjdWxlIGZyYWN0aW9uIG9mIGFsbCB0aG9zZSBtaW5vcml0aWVzIHdobyBjYW1lIG11Y2ggbGF0ZXIsIGJ1dCB0aGF0IHdhcyBhIGxvdCBvZiBwZW9wbGUgbm9uZXRoZWxlc3MuIFRoZSBDaGluZXNlLCBmb3IgZXhhbXBsZS4gCiJTY2hjaHRlcm4sIFNpbmdsZSwgZnJ1c3RyaWVydCBkYXMgd2FyIGdlc3Rlcm4uIE1laXN0ZXIgVmVyZmhyZXIgTmVpbCBTdHJhdXNzIHplaWd0LCB3aWUgTWFubiBpbiBudXIgMzAgVGFnZW4gbGVybnQsIGplZGUgRnJhdSB6dSBlcm9iZXJuLiAxOCBBcHIgMjAxOCAuIApUd28gdHJpYWxzIHNjb3JlZCAxIHBvaW50IG9uIHRoZSBKYWRhZCBzY2FsZSwgb25lIHNjb3JlZCAyIGFuZCBvbmUgc2NvcmVkIDMuIEFsbG9jYXRpb24gY29uY2VhbG1lbnQsIGludGVudGlvbiB0byB0cmVhdCBhbmFseXNpcyBhbmQgcG93ZXIgY2FsY3VsYXRpb25zIHdlcmUgZWl0aGVyIG5vdCBjbGVhciBvciBub3QgdXNlZCBmb3IgYWxsIHRyaWFscy4gVGhyZWUgc3R1ZGllcyB1c2VkIGdyb3VwcyB0aGF0IHdlcmUgc2ltaWxhciBhdCBiYXNlbGluZSBvbiBwcm9nbm9zdGljIGluZGljYXRvcnMuCkxpZmUgaXNuIGEgUm9iaW4gV2lsbGlhbXMgbW92aWUuIFRlYWNoZXJzIGhhdmUgMjAsIDMwLCA0MCArIHN0dWRlbnRzIHRvIHRlYWNoLiAKQ29uZ3JhdHMgb24gc3BlYWtpbmcgU3BhbmlzaCB0byB5b3VyIGNvd29ya2VyISBJdCBncmVhdCB0byBzdGVwIG91dCBvZiB5b3VyIGNvbWZvcnQgem9uZSwgYmVjYXVzZSBub3cgeW91IGtub3cgd2hhdCB5b3UgYWN0dWFsbHkgY2FwYWJsZSBvZi4gWW91IGFyZSBhYmxlIHRvIHNwZWFrIFNwYW5pc2ggaWYgeW91IG5lZWQgdG8sIGFuZCB0aGF0IGFuIGFtYXppbmcgYWNjb21wbGlzaG1lbnQhIElmIHlvdSBzdGljayB3aXRoIGlmLCB5b3Ugb25seSBnZXQgYmV0dGVyIGZyb20gaGVyZSwgYW5kIHlvdSBsZWFybiBob3cgdG8gcmVzcG9uZCBmYXN0ZXIgaW4gY29udmVyc2F0aW9ucyBpZiB5b3UgY3VycmVudGx5IHBhdXNpbmcgdG8gdGhpbmsgb2Ygd2hhdCB0byBzYXkuIEkgd2lzaCB5b3UgZ3JlYXQgdGhpbmdzIHRvIGNvbWUgaW4geW91ciBTcGFuaXNoIHNwZWFraW5nIQoiU29tZSBkYXkgc29vbiwgcGVyaGFwcyBpbiBmb3J0eSB5ZWFycywgdGhlcmUgd2lsbCBiZSBubyBvbmUgYWxpdmUgd2hvIGhhcyBldmVyIGtub3duIG1lLiBUaGF0IHdoZW4gSSB3aWxsIGJlIHRydWx5IGRlYWQgICB3aGVuIEkgZXhpc3QgaW4gbm8gb25lIG1lbW9yeS4gCkFNQyB3aWxsIG5ldmVyIGRvIHNvbWV0aGluZyBhcyAiY29udHJvdmVyc2lhbCIgYXMgdGhpcyBiZWNhdXNlIHRoZXkgYXJlIHN0aWxsIGNvbnNpZGVyZWQgYSBmYW1pbHkgdGhlYXRlciBjaGFpbi5BREggaGFzIE5FVkVSIGNhcmVkIGFib3V0IGh1cnRpbmcgcGVvcGxlcyBmZWVsaW5ncy4gCkl0IGRvZXMgbm90IGFjaGlldmUgYSByZWFsIHJlZHVjdGlvbiBpbiBnYW1pbmcgbWFjaGluZSBudW1iZXJzIGFuZCBpdCBjcmVhdGVzIGFuIHVuY2VydGFpbiBpbnZlc3RtZW50IGVudmlyb25tZW50IHVudGlsIGF0IGxlYXN0IDIwMjMuIiBNcyBEYXdraW5zIHNhaWQgdGhhdCB0aGUgR3JlZW5zIHdlcmUgZGlzYXBwb2ludGVkIHRoYXQgdGhlIGdvdmVybm1lbnQncyB0ZXJtcyBvZiByZWZlcmVuY2UgbWFkZSBubyBtZW50aW9uIG9mIHRoZSBudW1iZXIgb2YgRUdNcyBhbmQgdGhlaXIgbG9jYXRpb24sIHR5cGUgYW5kIGRlc2lnbi4gClRoZSBkb29ycyBvcGVuLCBNb2xseSB3YWxrcyBvdXQgaW50byB0aGUgaGFsbHdheSBhbmQgZG93biB0byBJbGx1c2lvbi4uIApUbyBiZSBmYWlyLCB3b21lbiBicmVhc3RzIGFjdHVhbGx5IHdlcmUgZGVzaWduZWQgZm9yIGF0dHJhY3RpbmcgbWF0ZXMuIApXaGF0IGhhcHBlbmVkIG5leHQgd2FzIGV2ZW4gbW9yZSBzdXJwcmlzaW5nOiBEZXNwaXRlIHRoZSBvdmVybmlnaHQgc3VjY2VzcywgY29tcGV0aXRvcnMgaWdub3JlZCB0aGUgcG9zc2liaWxpdHkgb2Ygb2ZmZXJpbmcgc2ltcGxlciwgY2hlYXBlciBob21lcy4gCkthdGhpIEtldmlsbGUgaXMgZGlyZWN0b3Igb2YgdGhlIEFtZXJpY2FuIEhlcmIgQXNzb2NpYXRpb24gYW5kIGVkaXRvciBvZiB0aGUgQW1lcmljYW4gSGVyYiBBc3NvY2lhdGlvbiBRdWFydGVybHkgbmV3c2xldHRlci4gSVQgSVMgTk9UIElOVEVOREVEIFRPIFBST1ZJREUgTUVESUNBTCBBRFZJQ0UuIFRoZSBwdWJsaWNhdGlvbiBvZiB0aGlzIGluZm9ybWF0aW9uIGRvZXMgbm90IGNvbnN0aXR1dGUgdGhlIHByYWN0aWNlIG9mIG1lZGljaW5lLCBhbmQgdGhpcyBpbmZvcm1hdGlvbiBkb2VzIG5vdCByZXBsYWNlIHRoZSBhZHZpY2Ugb2YgeW91ciBwaHlzaWNpYW4gb3Igb3RoZXIgaGVhbHRoIGNhcmUgcHJvdmlkZXIuIEJlZm9yZSB1bmRlcnRha2luZyBhbnkgY291cnNlIG9mIHRyZWF0bWVudCwgdGhlIHJlYWRlciBtdXN0IHNlZWsgdGhlIGFkdmljZSBvZiB0aGVpciBwaHlzaWNpYW4gb3Igb3RoZXIgaGVhbHRoIGNhcmUgcHJvdmlkZXIuClRoZSB0aHJlZSBndXlzIGluIHRoZSBtaXggZm9yIHRoZSBzZWNvbmQgYmFzZSBqb2IgUnlhbiBNY01haG9uLCBHYXJyZXR0IEhhbXBzb24gYW5kIFBhdCBWYWxhaWthIGhhdmUgYWxsIGltcHJlc3NlZCB3aXRoIHRoZSBiYXQuIFBsdXMsIFJhaW1lbCBUYXBpYSBpcyBsb29raW5nIGxpa2UgYSBsb2NrIHRvIGJlY29tZSB0aGUgdGVhbSdzIGZvdXJ0aCBvdXRmaWVsZGVyLCBhcyBoZSdzIGhpdCB3ZWxsIGFsbCBzcHJpbmcgYW5kIHBsYXllZCBzb2xpZCBkZWZlbnNlIGF0IHRoZSBjb3JuZXIgc3BvdHMuIENvcm5lciBpbmZpZWxkZXIgVHlsZXIgTmV2aW4gaGFzIGxvb2tlZCBnb29kLCBkcmF3aW5nIGNvbW1lbnRhcnkgZnJvbSBtYW5hZ2VyIEJ1ZCBCbGFjayB0aGF0IGhlICJwaWNrZWQgdXAgd2hlcmUgaGUgbGVmdCBvZmYiIGZyb20gaGlzIEFyaXpvbmEgRmFsbCBMZWFndWUgYmF0dGluZyB0aXRsZS4gRmVsbG93IG5vbiByb3N0ZXIgaW52aXRlZXMgQnJldCBCb3N3ZWxsLCBhIHNlY29uZCBiYXNlbWFuLCBhbmQgQnJpYW4gTXVuZGVsbCwgYSBmaXJzdCBiYXNlbWFuLCBoYXZlIGFsc28gZmxhc2hlZCBwcm9taXNlLiBMYXdyZW5jZSwgYSAyNCB5ZWFyIG9sZCBoYXJkIHRocm93aW5nIHNpZGVhcm1lciwgYm9hc3RzIGEgOTggbXBoIGhlYXRlciB0aGF0IGNvdWxkIGV2ZW50dWFsbHkgbWFrZSBoaW0gYSBkb21pbmFudCBidWxscGVuIGZvcmNlIGluIExvRG8gaWYgaGUgY2FuIGltcHJvdmUgaGlzIHNwbGl0cyBhZ2FpbnN0IGxlZnRpZXMgYW5kIGNvbnRpbnVlZCB0byBtYXN0ZXIgaGlzIG9mZnNwZWVkIHBpdGNoZXMuIEFuZCBFc3RldmV6LCB3aG8gbWlzc2VkIGhpcyBjaGFuY2UgYXQgYSBjYWxsIHVwIGxhc3QgeWVhciBkdWUgdG8gYSBwcm9sb25nZWQgZWxib3cgc3RyYWluLCBoYXMgYWxzbyBkZW1vbnN0cmF0ZWQgYSBoaWdoIDkwcyBmYXN0YmFsbCB3aGVuIGhlYWx0aHkuCkkgZm91bmQgYSBsb29zZSBjYXN0IG9mZiBmb3IgdGhlIGV5ZWJyb3dzIChrbml0IDIgdG9nZXRoZXIgdGhyb3VnaCB0aGUgYmFjaykgYW5kIGl0IGN1cmxlZCBhIGxvdCEgSSB0aG91Z2h0IGl0IGxvb2sgcHJldHR5IGZ1biwgc28gSSBrZXB0IGl0LiBJIHBpY2tlZCB1cCB0d28gc3RpdGNoZXMgZnJvbSB0aGUgYnJpZGdlIG9mIHRoZSBub3NlLCBhbmQgZmluaXNoZWQgdGhlIGNhc3Qgb2ZmIChsb29zZSBmb3IgdGhlIGV5ZWJyb3csIHJlZ3VsYXIgZm9yIHVuZGVyIHRoZSBleWUuKS4gCk15c3RpY19idXJyaXRvICA2IHBvaW50cyAgc3VibWl0dGVkIDE2IGRheXMgYWdvClNvIGFmdGVyIDEyIGZ1bGwgd2Vla2VuZHMgb2YgaGFyZCBsYWJvciBpbiB0aGUgcmFpbiBhbmQgc25vdyAoYmVjYXVzZSBpdCB0b29rIHdheSBsb25nZXIgdGhhbiBleHBlY3RlZCksIEkgZmluYWxseSBidWlsdCBhIGNoaWNrZW4gY29vcCBmb3IgJDMwMDAuIEFuZCBsaWtlIEkgc2FpZCBpbiBteSBjb21tZW50LCBmcm9tIHRoZSBiZWdpbm5pbmcgcG9wdWxhciBvcGluaW9uIGhhcyBiZWVuIG9uIGhlciBzaWRlLCBhbmQgc2hlIGRpZCBnZXQgYSBjaGFuY2UgdG8gZXhwbGFpbiAod2hpY2ggd2FzIGdyZWF0KSBhbmQgbm93IGV2ZW4gbW9yZSBwZW9wbGUgYXJlIG9uIGhlciBzaWRlLiBBZ2FpbiwgbXkgcXVlc3Rpb24gaXMgd2hhdCBtb3JlIGlzIHNoZSBsb29raW5nIGZvcj8uIApPbmUgdGltZSBJIHdhcyBkYXRpbmcgYSBzdHVkZW50IG9mIG1pbmUsIGFuZCB3ZSBnb3QgYSBsaXR0bGUgc2VyaW91cywgYW5kIGRlY2lkZWQgdG8gZ28gYXdheSBvbiBzcHJpbmcgYnJlYWsgKFdPT0hPTyEpIHRvZ2V0aGVyIGRvd24gdG8gRmxvcmlkYS4gV2VsbCwgdGhlIGJvb3plIHN0YXJ0ZWQgZmxvd2luZyBhbmQgSSBlbmRlZCB1cCBvbiBNVFYgZGFuY2luZyB3aXRoIGFsbCB0aGUgY29sbGVnZSBkdWRlcyBhbmQgbXkgZ2lybGZyaWVuZCBhdCB0aGUgYmVhY2guIFNvIEkgc3VyZSBpZiBJIGFuc3dlcmVkIGZvciBteSBzdHVkZW50cywgdGhhdCB3b3VsZCBiZSB0aGVpciBhbnN3ZXIuLiAKU28gZmFyIEkgaGF2ZSBiZWVuIGV4cGVyaW1lbnRpbmcgd2l0aCBhIHJpZGljdWxvdXMgQk1PIHNoaXJ0LiBJdCBpcyBwcmV0dHkgc2lsbHkgYW5kIHByb2JhYmx5IG1hcmdpbmFsbHkgK0VWIGJ1dCBJIGZlZWwgbGlrZSBpdCBjb3VsZCBiZSBpbXByb3ZlZCBvbiBxdWl0ZSBhIGJpdC4uIApTdXJlISBqdXN0IHRvIGJlIHRyYW5zcGFyZW50LCBoZXJlIG15IGRpc2NsYWltZXI6IEkgYSBzb2Z0d2FyZSBkZXZlbG9wZXIsIG5vdCBuZWNlc3NhcmlseSBhIHNlcnZlci9uZXR3b3JrIHBlcnNvbi4gU28gdGFrZSBteSBhZHZpY2Ugb24gcm90YXRpbmcgSVBzIHdpdGggYSBncmFpbiBvZiBzYWx0IGFuZCBrbm93IHRoYXQgdGhpcyBwaWVjZSBvZiBpdCBpc24gYSBodWdlIHBvaW50IG9mIGZvY3VzIGZvciBtZS4gVGhhdCBiZWluZyBzYWlkLCB0aG91Z2gsIEkgYWJsZSB0byBzY3JhcGUgdGhlIHdlYnNpdGVzIG9mIHNvbWUgdmVyeSBsYXJnZSBjb21wYW5pZXMgdGhhdCB5b3UgcHJvYmFibHkgaGVhcmQgb2YgYW5kIEkgbmV2ZXIgcmVjZWl2ZWQgYW55IHVud2FudGVkIGF0dGVudGlvbi4KVGhlcmUgYXJlIHBsZW50eSBvZiBkZWNlbnQgbWVuIGluIENvbG9yYWRvLiBJIGhhcHBlbiB0byBiZSBvbmUuIEkgYWxzbyBrbm93IHBsZW50eS4gCkkgZ2V0IGl0LCBOYW50dWNrZXQgaXMgYW4gaXNsYW5kIGFuZCBhdCBmaXJzdCBvbmx5IDkgZmFtaWxpZXMgc2V0dGxlZCB0aGVyZSAuIApSZWFzb24gYmVpbmc6IHRoZXkgY3JlYXRlZCBhIGh1Z2UgbWVzcyB3aXRoIHRoZSBtdWx0aXBsZSBISyBlbmRpbmdzLCBlc3BlY2lhbGx5IGNvbnNpZGVyaW5nIFNlYWxlZCBTaWJsaW5ncy4gSWYgdGhleSBtYWtlIGEgc2VxdWVsLCBTaWxrc29uZyBvciBISzMsIHRoZXJlIGFyZSB0d28gb3B0aW9uczogcmV0Y29uIG9uZSBvZiB0aGUgZW5kaW5ncyB0byBiZSBhIHRydWUgZW5kaW5nLCBvciBpbmplY3QgbW9yZSBiYWNrc3RvcnkgaW50byB0aGUgd29ybGQgdG8gd2VhdmUgYSBiZWxpZXZhYmxlIGNvbnRleHQgYXJvdW5kIGhvdyB0aGUgS25pZ2h0IGJvdGggSXMgYW5kIElzIE5vdCB0aGUgbmV3IEhvbGxvdyBLbmlnaHQsIGhvdyBIb3JuZXQgYm90aCBJcyBhbmQgSXMgTm90IGluIHRoZXJlIHdpdGggaGltLCBob3cgdGhlIGluZmVjdGlvbiBib3RoIERvZXMgYW5kIERvZXMgTm90IHN0aWxsIGV4aXN0LCBhbmQgaG93IHRoZSBWb2lkIEdvZCBib3RoIElzIGFuZCBJcyBOb3QgcmFtcGFnaW5nIGFyb3VuZCB0aGUgc2V3ZXJzLiBSZXRjb25zIGFyZSBuZXZlciBhIGdvb2QgY2hvaWNlLCBzbyBJIHByZWZlciB0byB0aGluayB0aGUgb3RoZXIgb3B0aW9uIGlzIG1vcmUgbGlrZWx5Li4gClRvIHB1dCBpdCBpbiBhIHdheSB0aGF0IGV2ZXJ5IGNocm9uaWMgcGFpbiBzdWZmZXJlciBjYW4gdW5kZXJzdGFuZDsgcGFpbiBpcyBhIHZlcnkgcG93ZXJmdWwgbW90aXZhdG9yLiAKU2FpbG9ycyBhcmUgYSB2ZXJ5IGltcG9ydGFudCB0cmFkZSBvY2N1cGF0aW9uIGFjcm9zcyB0aGUgUHJvdmluY2VzIG9mIFRhbXJpZWwgc3VjaCBhcyBTa3lyaW0sIEhpZ2ggUm9jaywgSGFtbWVyZmVsbCwgYW5kIEN5cm9kaWlsOyBpbiBhZGRpdGlvbiwgQ29yc2FpcnMgaGF2ZSBiZWVuIGEgbWFqb3IgcHJvYmxlbSBhbG9uZyB0aGUgd2VzdGVybiBjb2FzdHMgb2YgVGFtcmllbC4gCklmIHRoZSBjaXR5IHdpbnMsIGl0J3MgbGlrZWx5IHRoYXQgdGhlIHN1bmsgY29zdHMgb2YgdGhlIHRyaWFsIHdpbGwgYmUgcmVjb3VwZWQuIEFzIHBva2VyIHBsYXllcnMgd291bGQgc2F5LCB5b3UgaGF2ZSB0byBrbm93IHdoZW4gdG8gaG9sZCAnZW0gYW5kIHdoZW4gdG8gZm9sZCAnZW0sIGFuZCB0aGlzIGlzIG5vdCB0aGUgdGltZSB0byBmb2xkLgpQcm9oaWJpdGlvbiBkaWRuIHdvcmsuIFBlb3BsZSBicm9rZSB0aGUgbGF3IGFuZCBhIHdob2xlIGluZHVzdHJ5IG9mIGNyaW1lIHJvc2UgdXAganVzdCBiZWNhdXNlIHBlb3BsZSB3YW50ZWQgdG8gZHJpbmsuIApNYXliZSB0aGUgUml0eiBDYXJsdG9uIHNhdyB0aGUgQXJtYW5pIEhvdGVsIER1YmFpIGluIHRoZSBCdXJqIEtoYWxpZmEgdGhlIGN1cnJlbnQgdGFsbGVzdCBidWlsZGluZyBpbiB0aGUgd29ybGQgYXMgYSBjaGFsbGVuZ2UuIApJIGFsc28gd291bGRuIGtlZXAgbW9yZSB0aGFuIGhhbGYgb2YgYW4gZW1lcmdlbmN5IGZ1bmQgaW4gSSBCb25kcywgYXMgdGhlIHRyYW5zZmVyIGZyb20gdGhlIFRyZWFzdXJ5IG1pZ2h0IHRha2UgYSBjb3VwbGUgZGF5cyAoSSBCb25kcyBhcmUgYWxsIGVsZWN0cm9uaWMgYW5kIGFyZSBwdXJjaGFzZWQgYW5kIHJlZGVlbWVkIHZpYSBUcmVhc3VyeURpcmVjdCwgdW5sZXNzIHlvdSB1c2UgeW91ciB0YXggcmV0dXJuIHRvIHB1cmNoYXNlIHBhcGVyIEkgQm9uZHMpLi4gCk1ha2luZyB5b3UgbG9vayBhbmQgZmVlbCB5b3VuZ2VyLi4gCkFmdGVyIGFsbCwgdGhlIDUgcGVyY2VudCBnYWluIGlzIHRoZSBzdHJvbmdlc3Qgc2luY2UgdGhlIHNlY29uZCBxdWFydGVyIG9mIDIwMTcsIHdoZW4gc2FtZSBzdG9yZSBzYWxlcyByb3NlIDguMSBwZXJjZW50Li4gCkhlIGNhbiBhbHNvIHJhaXNlIHdoaWNoIG1ha2VzIHRoZSBiZXQgaGlnaGVyLiBUaGUgcmVtYWluaW5nIHBsYXllciB3aWxsIGNvbGxlY3QgdGhlIHBvdC4gClRoZXkgaGF2ZSB0byBoYXZlIGNsb3RoZXMgYW55d2F5LCBhbmQgc2Nob29sIHVuaWZvcm0gY2xvdGhlcyBhcmVuIGFueSBtb3JlIGV4cGVuc2l2ZSB0aGFuIHJlZ3VsYXIgY2xvdGhlcy4gClZhbiBkZXIgWndhYW4gd2FzIHNlbnRlbmNlZCB0byAzMCBkYXlzIGluIHByaXNvblsxN10gS2lsaW1uaWsgc2VydmVkIGFzIGEgbGlhaXNvbiBiZXR3ZWVuIE1hbmFmb3J0IGFuZCBEZXJpcGFza2EuIApDaGFyYWN0ZXJzIGFsd2F5cyBjaGFuZ2Ugd2hlbiBhbiBlc3RhYmxpc2ggdW5pdmVyc2UgbGFzdHMgdGhpcyBsb25nLiAKUHJldHR5IG11Y2ggc3VtcyBpdCB1cC4gCk9uZSBvZiB0aGUgZWFzaWVzdCB3YXlzIHRvIHBsYXkgbGltaXRsZXNzIGFuZCBmcmVlIHBva2VyIG9ubGluZSBpcyBieSBqb2luaW5nIGEgZnJlZSBvbmxpbmUgcG9rZXIgcm9vbS4gVGhlIGJlc3QgdGhpbmcgYWJvdXQgdGhlc2UgcG9rZXIgcm9vbXMgYXJlIHRoYXQgdGhleSBkbyBub3QgaGF2ZSBhbnkgYnV5IGlucyB3aGljaCBtZWFucyB0aGF0IHlvdSBjYW4gcGxheSBmb3IgYSBzcG9uc29yZWQgcHJpemUgcGxheSBwb29sIGFsbCBmb3IgdGhlIGNvc3Qgb2Ygbm90aGluZy4uIApJbiAyMDEyLCBQYWRkb2NrIHN1ZWQgdGhlIENvc21vcG9saXRhbiBIb3RlbCBSZXNvcnRzIGluIE5ldmFkYSwgc2F5aW5nIGhlIHNsaXBwZWQgYW5kIGZlbGwgb24gYSB3ZXQgZmxvb3IgdGhlcmUuIFRoZSBsYXdzdWl0IHdhcyBldmVudHVhbGx5IGRpc21pc3NlZCBieSBhIGp1ZGdlIGFuZCBzZXR0bGVkIGJ5IGFyYml0cmF0aW9uLgpQYXJ0IG9mIHRoZSBwcm9ibGVtIHdpdGggaW5mbGFtbWF0aW9uIGFuZCBoZWFsdGggaXMgdGhlIG92ZXJ1c2Ugb2YgYW50aSBpbmZsYW1tYXRvcnkgZHJ1Z3MgaW5jbHVkaW5nIGlidXByb2ZlbiwgYXNwaXJpbiwgYW5kIHByZWRuaXNvbmUgdG8gbWFuYWdlIGl0LgpJbiBOb3ZlbWJlciwgSSBzdGFydGVkIGEgbmV3IGpvYiB0aGF0IHdhcyBwYXJ0aWN1bGFybHkgbWVudGFsbHkgY2hhbGxlbmdpbmcgZm9yIG1lLiBJIGZvdW5kIG15c2VsZiBmb3JnZXR0aW5nIGNyaXRpY2FsIHRoaW5ncywgaGF2aW5nIGVycmF0aWMgZW5lcmd5IGFuZCBsaXZpbmcgaW4gYSBwYXJhbm9pZCBmb2cuClJldmlldyB3b3VsZCBiZSBzaG9ydCBidXQgdGhvcm91Z2ggYW5kIGNvdWxkIGJlIHByaW1hcmlseSBpbnRlcnZpZXcgYmFzZWQgd2l0aCBleGNoYW5nZXMgcmVjb3JkZWQsIGNvbnZlcnRlZCB0byB0ZXh0LCBhbmQgcHJvdmlkZWQgaW4gdGhlIHByb3NlY3V0aW9uIGhpc3RvcnkuLiAKQ2FsbCBuZXR3b3JrIHNvbWV0aGluZyBhbmQgbWFrZSBhbGwgR2F0ZXdheXMsIElTUHMgZm9yIHRoZXNlICJzZXJ2ZXJzIi4gCldoZW4geW91IGJldCByaXZlciB3aXRoIGtpbmdzIGZ1bGwgb2YgYWNlcyBvbiAzIGtpbmdzIGFuZCBhbiBhY2Ugb24gdGhlIGJvYXJkLCB5b3UncmUgb25seSBnb2luZyB0byBnZXQgY2FsbGVkIGJ5IGF4IG9yIGt4IGFuZCBiZXN0IGNhc2Ugc2NlbmFyaW8sIHlvdSBjaG9wLiAKVGhlIGZvdXJ0aCBkYW5nZXIgaXMgYWRkaWN0aW9uIHRvIEludGVybmV0IHBva2VyLiBJdCBoYXMgYmVlbiBwcm92ZW4gdGhhdCBzb21lIHBlb3BsZSBkbyBnZXQgYWRkaWN0ZWQgd2l0aCBJbnRlcm5ldCBwb2tlci4gCkEgcGVkZXN0cmlhbiBwYXJhZGlzZSBtZWFzdXJpbmcgb25seSBmb3VyIG1pbGVzIGJ5IG9uZSBtaWxlLCBLZXkgV2VzdCBsYWlkIGJhY2sgYXRtb3NwaGVyZSBpcyBhIHBlcmZlY3QgbWF0Y2ggZm9yIGEgdGFrZSBpdCBlYXN5IEIgYnJlYWsuIApUaGUgdGVhbSB3YXRjaGVkIGFuIEluZGVwZW5kZW5jZSBEYXkgUGFyYWRlLCBzYXcgMzAsMDAwIGNoaWxkcmVuIHNpbmdpbmcgaW4gYSBzdGFkaXVtIGNvbmR1Y3RlZCBieSByZW5vd25lZCBjb21wb3NlciBIZWl0b3IgVmlsbGEgTG9ib3MsIHdlbnQgdG8gU3VnYXJsb2FmIE1vdW50YWluLCB2aXNpdGVkIHRoZSBCb3RhbmljIEdhcmRlbiBhbmQgd2VudCB0byB0aGUgem9vLi4gCk1hbnkgaGlnaCBxdWFsaXR5IHNldHMgaGF2ZSBiZWVuIHByb2R1Y2VkIHVuZGVyIHRoZSBQYXVsc29uIG5hbWUuIApTYW1lIHRhYmxlIGhhZCBhIG1pZGRsZSBhZ2VkIGd1eSBkcmVzc2VkIHZlcnkgd2VsbCwgYnV0IHNvbWVob3cgYWxzbyBsb29raW5nIGNvbXBsZXRlbHkgZGlzaGV2ZWxlZCwgZ3JpbmRpbmcgc2xvdHMgb24gaGlzIHBob25lIHRoZSBlbnRpcmUgdGltZSBhdCB0aGUgdGFibGUuIEhlIHdhcyBub3QgZ29vZCBhdCBwb2tlci4gRGVmaW5pdGVseSBnb3QgYSB2aWJlIG9mIGRlZ2VuZXJhdGUgZ2FtYmxlciBkZXNwZXJhdGVseSB0cnlpbmcgdG8gaG9sZCBvbiB0byB0aGUgYXBwZWFyYW5jZSB0aGF0IGV2ZXJ5dGhpbmcgaXMgb2suCkVsZXZhdG9yIHUKSWNoIGVybXV0aWdlIGplZGVuLCBlaW5lbiBCZWl0cmFnIHp1IGhhbHRlbiB1bmQgcmVnZWxtaWcuIEljaCBrYW5uIGRpZSBUYXRzYWNoZSBiZXpldWdlbiwgZGFzcyBkaWVzZSBTZWl0ZSBiZXJlaXRzIGVpbiBzdGFya2VzIFZlcnplaWNobmlzIGluIGVpbmVtIEZlbGQgdm9uIHZpZWxlbiBpc3QuIApJIGRvbiBoYXZlIG15IGFueW1vcmUuIEkgZGlkbiBsZW5kIGl0IGFuZCBub3QgZ2V0IGl0IGJhY2ssIEkgZGlkbiBmb3JnZXQgaXQgb24gdGhlIHRyYWluLiBJdCBnb3Qgc2h1ZmZsZWQgYXQgc29tZSBwb2ludCBJIHN1cmUuIApBbm90aGVyIGlzIHRoYXQgaXQgaXMgUGlzY2VzLCBhbmQgUGlyYXRlIG5laXRoZXIgd2FudHMgdGhhdCB0byBiZSBhIHN1cnByaXNlIG5vciBhIGNlcnRhaW50eSBmb3IgdXMuIEZvci4gUmVhc29ucz8gVGhpcyBpcyBwb3NzaWJsZSwgYnV0IEkgc3RydWdnbGUgdG8gY29tZSB1cCBmb3IgYSBwb3NzaWJsZSBleHBsYW5hdGlvbiBmb3IgV0hZIHRoYXQgd291bGQgYmUgZGVzaXJhYmxlICAgaWYgeW91IGhhdmUgb25lIEkgbG92ZSB0byBoZWFyIGl0Li4gCkkndmUgdGV4dCBtZSBzdXBlcnZpc29yIG11bHRpcGxlIHRpbWVzIGFzIGp1c3QgYSBoZXkgSSBqdXN0IHRoaW5rIEkgbmVlZCB0byB0ZWxsIHNvbWVvbmUgYWJvdXQgdGhpcyBldmVuIHRob3VnaCBzaGUgY2FuJ3QgZG8gYW55dGhpbmcuLiAKSGVyZSBhbiBhbGJ1bSBJIG1hZGUgd2l0aCBhIGZldyBjb21wYXJpc29ucy4gS2VlcCBpbiBtaW5kIEkgaW4gbm8gd2F5IGEgcHJvZmVzc2lvbmFsIGFuZCB0aGVyZSBhcmUgcXVpdGUgYSBmZXcgZmFjdG9ycyBsaWtlIGltZ3VyIGNvbXByZXNzaW9uIG9yIG1lIG5vdCBob2xkaW5nIHRoZSBwaG9uZSBjb21wbGV0ZWx5IHN0aWxsIGR1cmluZyBzb21lIHNob3RzLiBJIGFsc28gZGlkIG5vdCB0ZXN0IHRoZSBmcm9udCBmYWNpbmcgY2FtZXJhIGJ1dCBJIGltYWdpbmUgcmVzdWx0cyBhcmUgcHJldHR5IHNpbWlsYXIuQ29sZEFzSGVhdmVuICAyNzEgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnb1RoaXMgbWFrZXMgc2Vuc2UuIApDYW4gSG91c2UgUmVwdWJsaWNhbnMgZ2V0IHRoZSB2b3RlcyB0aGV5IG5lZWQgdG8gcGFzcyBhIGZ1bmRpbmcgYmlsbCB3aXRob3V0IERlbW9jcmF0cz9DYW4gU2VuYXRlIFJlcHVibGljYW5zIHBpY2sgb2ZmIGVub3VnaCBEZW1vY3JhdHMgdG8gcGFzcyBhIGZ1bmRpbmcgYmlsbD9JZiB0aGUgYW5zd2VyIHRvIHRob3NlIHF1ZXN0aW9ucyBpcyB5ZXMsIHRoZXJlIHdvbid0IGJlIGEgZ292ZXJubWVudCBzaHV0ZG93bi4gSWYgdGhlIGFuc3dlciB0byBvbmUgb3IgYm90aCBpcyBubywgZG9uJ3QgbWFrZSBwbGFucyBTYXR1cmRheS4KV2FzIHBlc3RlcmluZyBtZSBmb3IgYSBtZWV0IHVwLiAKQXNzdW1lZG91dHRha2UgZnJvbSAiVGhlIEZhbWUgTW9ucyBlci4iIENhbiBiZSBmb3VuZCBvbiBZb3V0dWJlLiAKVGhlcmUgaXMgJDEyNiwwMDAgaW4gUm9iYmllIGNvbXBhbnkgZGVmaW5lZCBjb250cmlidXRpb24gcGVuc2lvbi4gClRvIGNsb3NlIFR1ZXNkYXkgbmlnaHRzLCBhbGwgdGhpcyBpcyB5b3Vycywgd2l0aCAkOCBDb29ycyBMaWdodCBwaXRjaGVycyB0byBtYWtlIGl0IGFsbCB0aGUgbW9yZSBmdW4uIApQbHVzIHdlIHNlZSB0aGUgd29yc3Qgb2YgdGhlIHdvcnN0IHRyb2xsIGluIEhhcnJ5IFBvdHRlciwgSSdtIGZhaXJseSBjZXJ0YWluIHRoZWlyIGdyb3NzbmVzcyBpcyBvbiBhIHNwZWN0cnVtIG9mIHNvcnRzIGFuZCB0aGVyZSBhcmUgYSBmZXcgb3V0IHRoZXJlIHdobyBhcmVuJ3Qgc28gaGlkZW91cyBmb3IgSksgdG8gc3VnZ2VzdCB0aGVyZSBhcmUgaHVtYW5zIHdobydyZSBwYXJ0IHRyb2xsIGluIHRoZSBib29rcy4KVGhpcyB3aWxsIGhlbHAgdG8gZW5zdXJlIGFzIHRvIHdoZXRoZXIgb3Igbm90IHlvdSBhcmUgZGVhbGluZyB3aXRoIHBva2VyIGNoaXBzIHRoYXQgYXJlIGF1dGhlbnRpYy4gCldoZW4geW91IGNyb3NzIHNlYW1zIHlvdSBnb2luZyB0byBiZSB3b3JraW5nIHdpdGggNCBvciBtb3JlIGxheWVycyB1bmRlciB0aGUgbmVlZGxlLiAKV2hhdCBjYW4gSSBkbyB3aXRoIGEgY29saWNreSBiYWJ5P0FjdHVhbGx5LiBZb3UgbWF5IG5vdCBuZWVkIHRvIGRvIGFueXRoaW5nLiAKQW55d2F5cyB0aGUgcm9vbSB3YXMgYm9vbWVkIG9uIGhpcyBnb2xkIGFjY291bnQgc28gYWQgSSdtIGNoZWNraW5nIGluIHRoZSBjbGVyayBnb2VzICJPaCBhbmQgY29uZ3JhdHVsYXRpb25zIHNpciwgeW91IHF1YWxpZmllZCBmb3IgYSBmcmVlIHVwZ3JhZGUuIFlvdSdsbCBiZSB1cCBvbiB0aGUgZm91cnRoIGZsb29yIiB3aGljaCB3YXMgdGhlIHRvcCBmbG9vci4gCllvdSB3YW50IHRvIGtub3cgdGhlIHNlY3JldCB0byBzdWNjZXNzPyBUcnVkZWF1IHN1Y2NlZWRzIGJlY2F1c2UgaGUgZmlyc3QgcnVucyBhZHMgYmVmb3JlIGhlIHNldHMgcHJpY2VzISBIZSB3b3VsZCBzZWUgaG93IG1hbnkgY2FsbHMgcGVyIHRob3VzYW5kIHZpZXdlcnMgYW4gaW5mb21lcmNpYWwgZ2VuZXJhdGVkLCBnaXZpbmcgdGhlIHByaWNlIG9uIGhpcyBwcm9kdWN0YW5kIHRoZW4gaGUgc2V0IGhpcyBwcmljaW5nIGFjY29yZGluZ2x5IHRvIG1heGltaXplIGhpcyBwcm9maXRzLiAKQSB0aXAgZm9yIHVzaW5nIGhhbGZ0b25lczogQXQgc21hbGwgc2l6ZXMsIHRoZSBhbmdsZSBvZiB0aGUgaGFsZnRvbmUgZG90cyBjYW4gY3JlYXRlIGFuIHVuaW50ZW50aW9uYWwgb3B0aWNhbCBpbGx1c2lvbiBvZiBsaW5lcyBhbmQgc3F1YXJlcyBjYWxsZWQgYSBtb2lyIHBhdHRlcm4uIEFuIGVhc3kgd2F5IHRvIG5lZ2F0ZSB0aGlzIGlzIHRvIHNsaWdodGx5IHJvdGF0ZSB0aGUgcGF0dGVybiBzbyB0aGF0IGl0J3Mgbm90IG9uIGEgcGVyZmVjdGx5IHNxdWFyZSBhbmdsZSAoMjIgZGVncmVlcyBpcyB3aGF0IEkgdXN1YWxseSBnbyB3aXRoKS4gSG9wZWZ1bGx5IHRoaXMgdmVyeSBwZWRhbnRpYyBjb21tZW50IGlzIHVzZWZ1bCB0byB5b3UhCk9uY2UgcmVtb3ZlZCB0aGUgYnJpZGdlcywgd2hpY2ggd2VyZSBidWlsdCBpbiAxOTYxLCB3aWxsIGJlIHJlcGxhY2VkIGJ5IGFuIGF0IGdyYWRlIGludGVyc2VjdGlvbiB3aGVyZSBEdW5kYXMgU3RyZWV0LCBCbG9vciBTdHJlZXQgYW5kIEtpcGxpbmcgQXZlbnVlIG1lZXQuCkkgcGxheWVkIGluIGEgZ2FtZSBsaWtlIHRoaXMgcmVndWxhcmx5IGZvciBhIGZldyBtb250aHMuIEkgbmV2ZXIgaGFkIGEgbG9zaW5nIHNlc3Npb24uIEl0IHdhcyBwcmludGluZy4gQWxsIEkgZGlkIHdhcyBiZXQgZXZlcnl0aGluZyBmb3IgdmFsdWUsIGZvbGQgdG8gcml2ZXIgcmFpc2VzIChub3QgdW5pdmVyc2FsbHkgYnV0IG1vcmUgdGhhbiBub3JtYWwpLCBhbmQgY29tcGxldGVseSBhYmFuZG9uZWQgY2hlY2svcmFpc2luZy4KTXVjaCBvZiB0aGlzIGEgbWF0dGVyIG9mIGZ1bGZpbGxpbmcgc29tZSBvZiB5b3VyIGJhc2ljIGJpb2xvZ2ljYWwgbmVlZHMgICB0cnksIGZvciBleGFtcGxlLCB0byBnZXQgYSBnb29kIG5pZ2h0J3MgcmVzdCBiZWZvcmUgaW1wb3J0YW50IGV2ZW50cyBhbmQgdG8gcmlkIHlvdXJzZWxmIG9mIGRpc3RyYWN0aW9ucyBsaWtlIGh1bmdlciwgcmVzdGxlc3NuZXNzIGZyb20gbGFjayBvZiBleGVyY2lzZSwgZXRjLi4gCldoaWxlIEplbiBBbmlzdG9uIGhhcyBiZWVuIGNhbm9vZGxpbmcgb24gYSBNaWFtaSBiZWFjaCB3aXRoIEpvaG4gTWF5ZXIsIFZhdWdobiBjZWxlYnJhdGVkIENpbmNvIGRlIE1heW8gYXQgdGhlIFZlbHZldCBNYXJnYXJpdGEgcGFydHkgaW4gSG9sbHl3b29kIE1vbmRheSBuaWdodC4KTm8gb25lIGNvdWxkLiAKVGhlIEdyYW1teSB3aW5uZXIgY292ZXJlZCBwbGVudHkgb2YgbXVzaWNhbCBncm91bmQgaW4gdGhhdCB0aW1lLCBoaXR0aW5nIGEgaGFuZGZ1bCBvZiBoZXIgdG9wIGhpdHMgbGlrZSAiQmFkIFJvbWFuY2UsIiAiUG9rZXIgRmFjZSIgYW5kICJCb3JuIFRoaXMgV2F5LCIgYW5kIGV2ZW4gdG9vayB0aGUgd2hlZWwgZm9yIHRoZSBmaXJzdCB0aW1lIGluIENhcnBvb2wgS2FyYW9rZSBoaXN0b3J5Li4gClRoZSBwb2xpY2UgdG9vayBzZXZlcmFsIG1vbnRocyBkb2luZyBzdXJ2ZWlsbGFuY2UgYW5kLCBkZXNwaXRlIGFscmVhZHkgaGF2aW5nIG51bWVyb3VzIGNvbmZlc3Npb25zIGZyb20gY3VzdG9tZXJzIHdobyB3ZXJlIHN0b3BwZWQgaW4gdHJhZmZpYyBsZWF2aW5nLCBwbHVzIGV2aWRlbmNlIGZyb20gaW5zcGVjdG9ycyBpbnNpZGUgdGhlIHNwYSwgdGhleSB3ZW50IHRvIGNvdXJ0IHRvIG9idGFpbiB0aGUgd2FycmFudCBmb3IgdGhlIHZpZGVvIHdpcmV0YXAgVGhlIGludmVzdGlnYXRvcnMgc2VlbWVkIG1vcmUgY29uY2VybmVkIGFib3V0IG9idGFpbmluZyBoaWdobHkgZW1iYXJyYXNzaW5nIHZpZGVvIGZvb3RhZ2UgdG8gc2hhbWUgdGhlIGN1c3RvbWVycywgcmF0aGVyIHRoYW4gYWN0aW5nIGZhc3RlciB0byBzdG9wIGFuIGlsbGVnYWwgb3BlcmF0aW9uIGtlZXBpbmcgdnVsbmVyYWJsZSB3b21lbiBpbiBzZXJ2aXR1ZGUuIGF0IHRoZSBjYXNlIGFnYWluc3QgS3JhZnQsIHRoZXJlIGFyZSBhIGxvdCBvZiBiaWcgaG9sZXMuIEZpcnN0IG9mIGFsbCwgdGhlIHdvbWVuIGhlIHdhcyB3aXRoIGFwcGVhciB0byBoYXZlIGJlZW4gb3BlcmF0b3JzIG9mIHRoZSBtYXNzYWdlIHBhcmxvci4gT25lIHdhcyBhcnJlc3RlZCBhbmQgdGhlIG90aGVyIG9uZSBhcHBlYXJzIHRvIGJlIGEgY29vcGVyYXRpbmcgd2l0bmVzcywgd2hpY2ggaXMgd2h5IHNoZSBpcyBuYW1lZCBpbiB0aGUgYWZmaWRhdml0cyBidXQgd2Fzbid0IGFycmVzdGVkLiBQcm9zZWN1dG9ycyBhbmQgcG9saWNlIGRvIG5vdCBsZWF2ZSB2aWN0aW1zIG5hbWUgdW5yZWRhY3RlZCBpbiB0aGUgcmVwb3J0cyB0aGV5IHJlbGVhc2UuCkV2ZXJ5b25lIGxlYXJucyBhdCBhIGRpZmZlcmVudCBwYWNlIGFuZCBzdHJ1Z2dsZXMgd2l0aCBkaWZmZXJlbnQgdGhpbmdzIGFuZCBzYXlpbmcgZ2V0dGluZyB0byB0aGUgdG9wIDIlIGlzIGp1c3QgYSBjYWtlIHdhbGsgaXMgcHJldHR5IGRpc2hvbmVzdC4gTGlrZSBtYW55IHBlb3BsZSB0cnkgcmVhbGx5IGhhcmQgYW5kIG5ldmVyIHJlYWNoIGl0LCBJIGhhZCBmcmllbmRzIGF0IGV2ZXJ5IHJhbmsgYW5kIGFsbCBvZiB0aGVtIGhhZCBhIHNoaXQgdG9uIG9mIGdhbWVzLiAKQXBwcm9wcmlhdGVseSwgdGhlIGFjdHVhbCBnYW1lIG9mIHBva2VyIGlzIGEgZ3JlYXQgcGxhY2UgdG8gcHJhY3RpY2UgeW91ciBwb2tlciBmYWNlLiBJbiBwb2tlciwgaWYgeW91IHdhbnQgdG8gd2luLCB5b3UnbGwgbmVlZCB0byBrZWVwIHlvdXIgZXh0ZXJuYWwgZmFhZGUgY29tcGxldGVseSBjYWxtIHdoZW4geW91IGhhdmUgd2lubmluZyBoYW5kcy4gWW91J2xsIGFsc28gbmVlZCB0byBhcHBlYXIgY29uZmlkZW50IHdoZW4geW91IGhhdmUgYXdmdWwgaGFuZHMuIFByYWN0aWNpbmcgYm90aCBvZiB0aGVzZSBza2lsbHMgd2lsbCBoZWxwIHlvdSBob25lIHlvdXIgY3VubmluZy4KQkVSTElOIEV3YWxkIHZvbiBXZWlzdCwgNzMsIGZvcm1lciBmaWVsZCBtYXJzaGFsIGFuZCBXb3JsZCBXYXIgbiBQYW56ZXIgbGVhZGVyIHdobyB3YXMgc2VydmluZyBhIHdhciBjcmltZXMgdGVybSBpbiBSdXNzaWEuIApNb3N0IGFjdGlvbiBtb3ZpZXMgYXJlIG1vcmUgcmVhbGlzdGljIHRoYW4gcmVhbCBsaWZlIGluIHRoYXQgcmVnYXJkLiBUaGUgYmVzdCB3b21lbiBpbiBhbnkgcGh5c2ljYWwgYWN0aXZpdHkgd2lsbCBub3Qgc3RhbmQgYSBjaGFuY2UgYWdhaW5zdCB0aGUgYmVzdCBtZW4gYnV0IFNlcmVuYSBXaWxsaWFtcyB3aWxsIGJlYXQgc29tZSB2ZXJ5IGdvb2QgbWFsZSBwbGF5ZXJzLiBJZiBzaGUgaGFkIHRoZSBmb3JjZSBvciBzb21lIHN1cGVyIHN0cmVuZ3RoIHNoZSBjb3VsZCBwcm9iYWJseSB0YWtlIE5hZGFsIHRvby4KSW4gdGhlIGVuZCwgd2UgYmVjb21lIHRoZSBhdXRvYmlvZ3JhcGhpY2FsIG5hcnJhdGl2ZXMgYnkgd2hpY2ggd2UgInRlbGwgYWJvdXQiIG91ciBsaXZlcycgKEplcnJ5IEJydW5lcik7ICd3ZSBhcmUgYWxsIHZpcnR1b3NvIG5vdmVsaXN0cy4gCk1hcmMgd2FzIGJvcm4gaW4gTmV3IFlvcmssIHdoZXJlIGhlIHNwZW50IG11Y2ggb2YgaGlzIGxpZmUuIEhlIG93bmVkIGEgc2VhdCBvbiB0aGUgTmV3IFlvcmsgU3RvY2sgRXhjaGFuZ2Ugd2hlcmUgaGUgdHJhZGVkLiBTdWJzZXF1ZW50bHkgaGUgYmVjYW1lIGEgcHJpdmF0ZSBpbnZlc3Rvciwgd2hpY2ggaW4gbGF0ZXIgeWVhcnMgYWxsb3dlZCBoaW0gdG8gbW92ZSB0byBBc3BlbiB3aGVyZSBoZSBjb250aW51ZWQgdG8gdHJhZGUgYW5kIGludmVzdC4KRG9ubmEsIDkyLCBoYXMgYW4gYXBhcnRtZW50IGluIGEgc2hlbHRlcmVkIGxpdmluZyBjb21wbGV4IHNldmVuIG1pbnV0ZXMnIGRyaXZlIGZyb20gQmxvb20ncyBvd24gaG9tZSBhbmQsIHNheXMgdGhlIDM5IHllYXIgb2xkLCBoYXMgbm8gaWRlYSB0aGF0IGEgbW92aWUgYmFzZWQgb24gaGVyIGdyYW5kZGF1Z2h0ZXIncyBsaWZlIGV4aXN0cy4KR290IGEgcXVlc3Rpb24gZm9yIHlvdSBib3lzLiBJIHdlbnQgdG8gdGhlIGRvY3RvciBvbiBNb25kYXkgYW5kIGFmdGVyIHRha2luZyBzb21lIFggUmF5cywgaGUgdG9sZCBtZSB0aGUgY2FydGlsYWdlIGluIG15IGxlZnQga25lZSB3YXMgVkVSWSB3b3JuIGRvd24uIFNvIG11Y2ggc28gdG8gdGhlIHBvaW50IG15IGJvbmVzIGFyZSBncmluZGluZyBhZ2FpbnN0IG9uZSBhbm90aGVyLCB3aGljaCBpcyB3aHkgSSBmZWVsIHBhaW4gcHJldHR5IGNvbnNpc3RlbnRseS4uIApPdmVyIHRoZSB5ZWFyIHRoYXQgdGhleSBsaXZlZCB0aGVyZSwgdGhleSBjcmVhdGVkIGEgc2ltcGxlLCBiZWF1dGlmdWwgYW5kIGZ1bmN0aW9uYWwgc3BhY2UgdGhhdCBzdWl0cyB0aGVpciBsaWZlc3R5bGUsIGFjY29tbW9kYXRlcyB0aGVpciBndWVzdHMsIGFuZCBleHVkZXMgd2FybSBjb25nZW5pYWxpdHkuLiAKTWVyZWx5Z2VudWluZSByZWxpZXZlIGZyb20gcGFpbiwgbm8gbW9yZSBtZWRpY2luZXMgYW5kIG9pbnRtZW50cyBpcyBub3cgcG9zc2libGUgd2l0aCBhIHByb3BlciBtYXNzYWdlciB1c2VkIG9uIGEgcmVndWxhciBiYXNpcy4gCk15IGZhdm9yaXRlIGlzIHdoZW4gaW0gdmFjdXVtaW5nIGFuZCB0aGUgY3VzdG9tZXIgcHJlc3NlcyB0aGVpciBmYWNlIHVwIHRvIHRoZSBnbGFzcyBkb29yIGFuZCBkb2VzIHNldmVyYWwgaGFuZCBnZXN0dXJlcyB1bnRpbCBoZSBmaW5hbGx5IHllbGxzIGFza2luZyBpZiB3ZXJlIG9wZW4uIFlvdXZlIGNvbWUgdG8gdGhpcyBzdG9yZSBiZWZvcmUsIHlvdSBrbm93IHdlIGhhdmUgYW4gb3BlbiBzaWduIHRoYXQgaXNudCBvbiwgeW91IGxpdGVyYWxseSBzZWUgbWUgdmFjdXVtaW5nLgpJdCBpcyBhbHdheXMgZWFzaWVyIHRvIGdldCBhZ2dyZXNzaXZlIHdoZW4geW91IGZlZWwgaW4gY29udHJvbCwgc28gb2JzZXJ2ZSwgc3R1ZHkgYW5kIHBsYXkgaXQgdGlnaHQhLiAKUGVyZXogc2FpZCBvbiBDTk4gdGhhdCBoZSBkb2VzIG5vdCByZXByZXNlbnQgdGhlIGdheSBjb21tdW5pdHkgb3IgdGhlIEN1YmFuIGNvbW11bml0eSBiZWNhdXNlIGhlIGp1c3QgUGVyZXosIG5vIG9uZSBlbHNlLiAKSnVzdCB0aGluaywgaWYgd2UgZGV2ZWxvcCBhIGxldmVsIG9mIGF1dG9tYXRpb24gdGhhdCBmcmVlcyBodW1hbmtpbmQgZnJvbSBiYXNpYyBpc3N1ZXMgbGlrZSBob3VzaW5nLCB0cmFuc3BvcnRhdGlvbiwgYWdyaWN1bHR1cmUsIGhlYWx0aGNhcmUsIGV0Yy4gVGhlbiB3ZSB3aWxsIGhhdmUgbW9yZSByZXNvdXJjZXMgdG8gZGV2b3RlIHRvIHNjaWVuY2UgYW5kIGVuZ2luZWVyaW5nLCB3aGljaCB3aWxsIHVsdGltYXRlbHkgcHJvcGVsIHVzIGZvcndhcmQuU2hpcmxleXRoZXBpcmF0ZSAgMSBwb2ludCAgc3VibWl0dGVkIDQgZGF5cyBhZ29JJ20gc29ycnkgeW91IGZlZWwgdGhhdCB3YXkuIFRoYXQncyBhIHByZXR0eSBibGVhayB2aWV3IG9uIHdoZXJlIG91ciBmdXR1cmUgaXMgaGVhZGluZy4gCllvdSB3aWxsIHNvb24gZGlzY292ZXIgdGhhdCB0aGlzIGlzIGEgZ3JlYXQgd2F5IHRvIHJlYWxseSBmaWd1cmUgb3V0IHdoYXQgeW91ciBvcHRpb25zIGFyZSB3aGVuIHlvdSBhcmUgbG9va2luZyB0byByZWFsbHkgY3JlYXRlIGEgdGVycmlmaWMgZW52aXJvbm1lbnQgdG8gd29yayB3aXRoIHdoZW4geW91IGFyZSBwbGF5aW5nIHBva2VyIGF0IGhvbWUgb3IgcGxhbm5pbmcgYSBzcGVjaWFsIGV2ZW50LiBUaGlzIGlzIGEgdGVycmlmaWMgd2F5IHRvIG1vdmUgZm9yd2FyZCBhbmQgdG8gZ2V0IHRoZSBraW5kIG9mIGdhbWUgdGhhdCB5b3UgYXJlIGludGVyZXN0ZWQgaW4uCkkgbG9zdCBteSBiYWJ5IGJveSBhdCAyMiB3ZWVrcyBhbmQgdGhlIG51cnNlcyAoZXNwZWNpYWxseSBvbmUgb2YgdGhlbSkgYWJzb2x1dGVseSBhcmUgdGhlIG9ubHkgdGhpbmcgdGhhdCBtYWRlIHRoZSBzaXR1YXRpb24gdG9sZXJhYmxlLiBXaGVuIEkgd2FzIGluIHRoZSBsYXRlIHN0YWdlcyBvZiBsYWJvciBzaGUgd2FzIHRoZSBvbmx5IG9uZSBJIGNvdWxkIGV2ZW4gU0VFLiAKVGhlIGZlYXIgaXMgdGhhdCBpbiBjcmVhdGluZyBhIHN1cGVyaW9yIGxpZmUgZm9ybSwgd2UgY3JlYXRlIGEgYmVpbmcgdGhhdCBjYW4gb3ZlcnBvd2VyIHVzLiBJdCBhbiBhY2tub3dsZWRnZW1lbnQgb2Ygc29tZSBvZiBvdXIgYmFzZXN0IG5hdHVyZTogdG8gc2VlayBzb21ldGhpbmcgYmV0dGVyIHRoYW4gb3VyIGN1cnJlbnQgc3RhdGlvbi4gVG8gcmVhY2ggYXMgZmFyIGFzIG91ciBhcm1zIHdpbGwgYWxsb3csIGFuZCB0aGVuIHRvIGF0dGVtcHQgdG8gcHVzaCBldmVuIGZ1cnRoZXIuaHVtYW4gY2FwYWJsZSBvZiBsaWZ0aW5nIGEgY2FyIG92ZXIgaXRzIGhlYWQgd2l0aG91dCBsZWF2aW5nIGhpcyByZXN0aW5nIGhlYXJ0IHJhdGUgd2hpbGUgc2ltdWx0YW5lb3VzbHkgY2FsY3VsYXRpbmcgb3JiaXRhbCB0cmFuc2ZlciB2ZWN0b3JzIHRvIHRoZSBtb29uLCBNYXJzLCBhbmQgYSB0b3VyIG9mIHRoZSBtb29ucyBvZiBKdXBpdGVyIGF0IHRoZSBzYW1lIHRpbWUgd291bGQgbm90IGxpa2VseSBiZSBjb250ZW50IHdpdGggaGVscGluZyBjaGlsZHJlbiB3aG8gY2FuIGJhcmVseSB0aWUgdGhlaXIgc2hvZXMgYXZvaWQgZWF0aW5nIHBhaW50IGNoaXBzLkkgcmVhbGl6ZSB0aGlzIG1heSBzZWVtIGxpa2UgYSBibGVhayBwb3J0cmF5YWwgb2YgaHVtYW5pdHksIGNvbnRyYXJ5IHRvIHRoZSBvdmVyYWxsIGJyaWdodG5lc3Mgb2Ygd2hhdCBodW1hbml0eSBoYXMgYmVjb21lLiAKV2lyIGZyZXVlbiB1bnMsIE1hbmRhcmluIE9yaWVudGFsJ3MgcmVub21taWVydGUgU2VydmljZXF1YWxpdHQgbmFjaCBHdWFuZ3pob3UgenUgYnJpbmdlbiB1bmQgaW5zYmVzb25kZXJlIGRhcmJlciwgVGVpbCBkZXMgbmV1ZW4gVGFpS29vIEh1aSBCYXVwcm9qZWt0ZXMgenUgc2Vpbi4gRGllc2VzIFByb2pla3QgaXN0IGZyIE1hbmRhcmluIE9yaWVudGFsIGRpZSBwZXJmZWt0ZSBHZWxlZ2VuaGVpdCwgZGllIEx1eHVzbWFya2UgaW4gZWluZXIgc2VociB3b2hsaGFiZW5kZW4gdW5kIHNjaG5lbGwgd2FjaHNlbmRlbiBSZWdpb25lbiBDaGluYXMgYXVzenViYXVlbi4iIFNhZ3QgRWRvdWFyZCBFdHRlZGd1aSwgQ0VPIGRlciBNYW5kYXJpbiBPcmllbnRhbCBIb3RlbCBHcm91cC4KSW1hZ2luZSBsb29raW5nIGFyb3VuZCB5b3UgYW5kIGFjdGl2YXRpbmcgYSBkaWdpdGFsIG92ZXJsYXkgdGhhdCBnaXZlcyB5b3Ugdm9sdW1lcyBvZiBpbmZvcm1hdGlvbiBhYm91dCB5b3VyIHN1cnJvdW5kaW5ncy4gWW91IGNvdWxkIHVzZSB0aGlzIGNhcGFiaWxpdHkgdG8gcGVyZm9ybSBtdW5kYW5lIHRhc2tzIHN1Y2ggYXMgZmluZGluZyBhIHBsYWNlIHRvIGdyYWIgYSBiaXRlIHRvIGVhdCBvciBsb29rIHVwIGEgbGFuZGxvcmQncyBjb250YWN0IGluZm9ybWF0aW9uLiBCdXQgdGhhdCdzIGp1c3QgdGhlIGJlZ2lubmluZyEgV2hhdCBpZiB5b3UgY291bGQgc3dhcCBvdXQgdGhlIHZpZXcgc28gdGhhdCB5b3UgY291bGQgc2VlIHdoYXQgeW91ciBzdXJyb3VuZGluZ3MgbG9va2VkIGxpa2UgY2VudHVyaWVzIGFnbz8gSW1hZ2luZSB0b3VyaW5nIGEgY2l0eSBsaWtlIFJvbWUgYW5kIHdpdGggYSBzaW1wbGUgY29tbWFuZCB2aWV3aW5nIGl0IGFzIGlmIHlvdSB3ZXJlIHByZXNlbnQgd2hlbiBKdWxpdXMgQ2Flc2FyIGJlY2FtZSBlbXBlcm9yLiAKV2FybmVyIE1lZGlhLCBLS1IgYW5kIFdlbGxzIEZhcmdvIFNlY3VyaXRpZXMgYXJlIGNvbWluZyB0byAzMCBIdWRzb24gWWFyZHMuIAoiVGhlIHByb2ZpdGFiaWxpdHkgb2YgdGhlIGV2ZW50cyB3aWxsIGJlIG1haW50YWluZWQgd2l0aCBTZW4uIApCZWluZyBtYW1tYWxzLCBrb2FsYXMgcmFpc2UgdGhlaXIgam9leXMgb24gbWlsayAoYWRtaXR0ZWRseSwgb25lIG9mIHRoZSBsb3dlc3QgbWlsayB5aWVsZHMgdG8gYm9keSByYXRpby4gCkhlIHB1dCB0aGVtIGFsbCBkb3duIGluIGRldmFzdGF0aW5nIGZhc2hpb24uIApXaGF0IGlzIHlvdXIgaXNzdWU/IEZmcy4gCkkgdG90YWxseSBhZ3JlZSB3aXRoIHlvdS4gVHJhbnNMaW5rIHNlcnZpY2UgaXMgcmlkaWN1bG91cywgZXNwZWNpYWxseSBpbiB0aGUgc3VidXJicy4gRXZlcnkgYnVzIGF0IFNGVSBydW5zIHBhc3QgbWlkbmlnaHQgZXhjZXB0IGZvciB0aGUgQ29xdWl0bGFtIGJ1cy4gSWYgeW91IHdhbnQgdG8gam9pbiBhIGNsdWIgaW4gdGhlIGV2ZW5pbmcgb3Igc3R1ZHkgbGF0ZSBpbiB0aGUgbGlicmFyeSwgaXQgMiB0cmFuc2ZlciwgaG91ciBhbmQgYSBoYWxmIHRyaXAgaG9tZS4gVGhlcmUgb25seSBvbmUgYnVzIHRoYXQgZ29lcyBkb3dudG93biwgYW5kIGl0IG9ubHkgY29tZXMgb25jZSBldmVyeSBoYWxmIGhvdXIsIGV2ZW4gb24gd2Vla2VuZHMuIEFuZCBpZiB5b3UgZG9uIGdldCBvbiBhdCBDb3F1aXRsYW0gQ2VudHJhbCBTdGF0aW9uLCB0aGVyZSBhbHJlYWR5IG5vIHNlYXRpbmcgc3BhY2UhIEl0IGRvd25yaWdodCB1bmZhaXIgdGhhdCBUcmFuc2xpbmsgY2hhcmdlcyB1cyBuZWFybHkgZG91YmxlIG9mIHdoYXQgVmFuY291dmVyIHJlc2lkZW50cyBoYXZlIHRvIHBheSB0byB1c2UgdGhlIHRyYW5zaXQgc3lzdGVtLCBidXQgd2UgZ2V0IHdvcnNlIHNlcnZpY2UgdGhhbiB0aGVtLgpBbHNvLCB0aGVyZSBhcmUgZXhwZW5zaXZlIGNhcmRzIG91dCB0aGVyZSB0aGF0IGFic29sdXRlbHkgd2lsbCBjbGF3IHlvdSBiYWNrIGludG8gYSBnYW1lIHdoZXJlIHlvdSBvbiB0aGUgYnJpbmsgb2YgbG9zaW5nLiAKSWYgeW91IHdhbnQgc2FmZSwgcXVpZXQsIGFuZCBjbGVhbiwgaGFuZHMgZG93biBJcnZpbmUgaXMgd2hlcmUgeW91IHdhbnQgdG8gbGl2ZS4gSXQgYSBwbGFubmVkIHdpdGggZXZlcnl0aGluZyB5b3UgbmVlZCB3aXRoaW4gYSA1IDEwIG1pbnV0ZSBkcml2ZSByZWdhcmRsZXNzIG9mIHdoYXQgcGFydCBvZiBJcnZpbmUgeW91IGxpdmUgaW4uCk92ZXIgdGhlIHBhc3QgMjAgcnVucyBpdCBoYXMgZ2VuZXJhdGVkICQxMDksNTUzIGFuZCBQYXJ0eSBVbmxpbWl0ZWQncyBDcmFpZyBIYXN0aW5ncyBob3BlcyBhIHNpbWlsYXIgdGFsbHkgdG8gbGFzdCB5ZWFyJ3MgJDkzNTYgd2lsbCBiZSByZWFsaXNlZCBvbiBUdWVzZGF5LiAiSXQgYWxsIGRlcGVuZHMgdXBvbiB0aGUgd2VhdGhlciwgYnV0IHdlJ3JlIGhvcGluZyBmb3IgMjQwIG9kZCBiaWtlcyBvbiB0aGUgZGF5IGFuZCBob3BlZnVsbHkgd2UgY2FuIHN1c3RhaW4gdGhhdCBhbW91bnQsIiBNciBIYXN0aW5ncyBzYWlkLiAKTXJ6IDIwMTAgd2lyZCBkaWVzZXMgd2ljaHRpZ2UgIEV2ZW50LCB3ZWxjaGVzIGZyIGVpbmUgd2VsdHdlaXRlIGJlcnRyYWd1bmcgaW0gRmVybnNlaGVuIGF1ZmdlemVpY2huZXQgd2lyZCwgbmFjaCAyMDA2IHp1bSBlcnN0ZW4gTWFsIHdpZWRlciBhbiBkaWVzZW0gYmVsaWVidGVuIE9ydCBtaXR0ZW4gYXVmIGRlbSBlciBDaGFtcHMgRWx5c2VzIHN0YXR0ZmluZGVuLiAKVGhlIGZvcm1lciBvaWwgZXhlY3V0aXZlIGlzIHByaXZhdGVseSB3ZWFsdGh5IGFuZCBob2xkcyBtZW1iZXJzaGlwIGluIG9uZSBvZiBMb25kb24ncyBtb3N0IGV4Y2x1c2l2ZSBwcml2YXRlIGNsdWJzLiBIZSBhbmQgaGlzIHdpZmUsIENhcm9saW5lLCBoYXZlIGZpdmUgY2hpbGRyZW4gYWdlZCBiZXR3ZWVuIDE2IGFuZCAyNy4KRXNvdGVyaWNzaHkgIDIyIHBvaW50cyAgc3VibWl0dGVkIDI5IGRheXMgYWdvClBsZWluZSBkZSBncmNlLCBldCBzcmUgZGUgc29uIGNoYXJtZSwgZWxsZSBleGhpYmUgYXZlYyBsYW5ndWV1ciBzZXMgdHJzb3JzIGltcHJpc3NhYmxlcy4gCkZvciBtZSBteSBzdGFydGluZyBwb3NpdGlvbiB3aWxsIGhlYXZpbHkgaW5mbHVlbmNlIG15IGxvY2tvdXQsIHdoaWNoIGlzIHRoZSB3ZWFrZXN0IHBhcnQgb2YgbXkgbGlmdC4gSSBub3QgYXMgYWJsZSB0byBlZmZlY3RpdmVseSBhY3RpdmF0ZSBteSBwb3N0ZXJpb3IgY2hhaW4gaW4gYSBiYWQgc3RhcnRpbmcgcG9zaXRpb24gYW5kIHRoZSBsaWZ0IGZhbGxzIGFwYXJ0IGZyb20gdGhlcmUuIERlZmljaXRzIGZvcmNlIG1lIHRvIGxlYXJuIHdoYXQgYSBnb29kIHN0YXJ0aW5nIHBvc2l0aW9uIGZlZWxzIGxpa2UuVG8gdGhlIGtuZWVzIEkgbm90IGFzIGNlcnRhaW4gYWJvdXQsIGJ1dCBpdCBhbHdheXMgZmVsdCBsaWtlIGEgZ29vZCBtb3ZlbWVudCBmb3Igd2hlbiBJIGJlZW4gY29uc2lzdGVudGx5IGluaXRpYXRpbmcgdGhlIHB1bGwgaW4gYSBnb29kIHNwb3QuIApJbml0aWFsZW1lbnQgZml4ICAxMCBzZW1haW5lcywgbGEgZHVyZSBwb3VyIHBvdXZvaXIgaW50ZXJyb21wcmUgbGEgZ3Jvc3Nlc3NlIGVzdCBmaXhlICAxMiBzZW1haW5lcy4gCkZSQU5LRlVSVCwgR2VybWFueSBXaGlsZSBFdXJvcGVhbiBwb2xpdGljYWwgbGVhZGVycyBoYXZlIGRlY2xhcmVkIGFuIG9mZmljaWFsIGVuZCB0byB0aGUgY29udGluZW50IHJlY2Vzc2lvbiwgY2FyIGNvbXBhbmllcyBoZWFkaW5nIHRvIFNlcHRlbWJlciBGcmFua2Z1cnQgQXV0byBTaG93IGtub3cgdGhleSBoYXZlIGEgbG90IG9mIHdvcmsgdG8gZG8gYmVmb3JlIHRoZXkgc3RhcnQgYnJlYWtpbmcgZXZlbiBpbiBhIHZlcnkgY2hhbGxlbmdpbmcgcGFydCBvZiB0aGUgZ2xvYmUuCkFsc28gY29udGFpbnMgYW5kIGNvdmVycyByb3VsZXR0ZSwgd2FnZXIgbWFuYWdlbWVudCBhcyB3ZWxsIGFzIHdvcnN0IGJldHMuIApLb2hsZXIgRnJpZGF5LiAKQXVkaW9ib29rIERvd25sb2FkICQyMC4wMCAuIApXaGF0IEkgbGlrZSBtb3N0IGluIGd1eXMgaXMgd2hlbiB0aGV5IGp1c3QgYWN0LiBDYXN1YWwuIEp1c3QgYmUgeW91cnNlbGYuIApOb3c/IEkgbWFycmllZCBpbiBteSBvd24gaG9tZSBhd2F5IGZyb20gcGFyZW50YWwgZHJhbWEuIApIZSB0ZWxscyBtZSBoZSBnb3QgYSBjYWxsIHRoZSBwcmV2aW91cyBkYXkgZnJvbSBoZWFkIG9mZmljZSBhYm91dCBtZSBhc3NhdWx0aW5nIGEgY3VzdG9tZXIgYXQgYW5vdGhlciBicmFuY2guIApMYXdyZW5jZSBhbmQgaGVyIGh1c2JhbmQsIEZyYW5rLCBvZiBOb3Jmb2xrLCBWaXJnaW5pYSBhbmQgc3BlY2lhbCBuaWVjZXMgYW5kIG5lcGhld3MsIEpheSBHdWl0ZSwgSmVzc2ljYSBHdWl0ZSwgSm9zaCBHdWl0ZSBhbmQgRGVlIExhd3JlbmNlLiBJbiB0aGUgUmljaCBhbmQgVGhvbXBzb24gQ2hhcGVsLiAKSGUgbGVhdmVzIGhpcyBkZXZvdGVkIHdpZmUgb2YgNDMgeWVhcnMsIFN5bHZpYSBNYXJ0aW5leiBEYWxvaWE7IHR3byBkYXVnaHRlcnMsIEtyaXN0aW5hIChGcmFuaykgRGVsaWEsIEplc3NpY2EgKE1pY2hhZWwpIEZhdmE7IGhpcyBiZWxvdmVkIHNpc3RlciwgUm9zYW5uZSAoRGF2aWQpIEJhdHRhZ2xpYTsgbmVwaGV3LCBNaWNoYWVsIGFuZCBuaWVjZSwgTWFyaXNzYSBCYXR0YWdsaWE7IGhpcyB0d28gYWRvcmVkIGdyYW5kY2hpbGRyZW4sIExvcmVuem8gSm9zZXBoIGFuZCBHaWFubmEgUm9zZSBGYXZhLiBBbGwgdGhvc2Ugd2hvIGtuZXcgaGltLCBrbm93IGhlIGhhZCBhIGJpZyBoZWFydCwgZnVsbCBvZiBsYXVnaHRlciBhbmQgam9rZXMuIEhlIGxvdmVkIHRvIHdhdGNoIHNwb3J0cywgcGxheSBwb2tlciBhbmQgcGl0Y2gsIGFuZCB3YXMgYWx3YXlzICJNci4gU29jaWFsIERpcmVjdG9yIi4KSSBoYXZlIHNwZW50IHZlcnkgbGl0dGxlIG9uIHRoaXMgYnVpbGQgICB0aGUgYmlnZ2VzdCBpbnZlc3RtZW50IHdhcyBhIDZMIFF1aWxsIFJhaW4gZm9yIDJleCBzZXZlcmFsIHdlZWtzIGFnby4gT3RoZXJ3aXNlIEkgdGhpbmsgaSBzcGVudCAyZXggdG90YWwgb24gYWxsIG90aGVyIGl0ZW1zIChleGNsdWRpbmcgZnVzZXMgZm9yIHRoZSBjaGVzdCAgIHdoaWNoIHRvb2sgQSBMT1QpLiBTb21lIG9mIHRoaXMgd2FzIHRoZSBuZXcgcGxheWVycyBuZXZlciBwbGF5ZWQgZHVyaW5nIHRoZSBFUyBtZXRhLCBhbmQgd2VyZSByZWFsbHkgYmFkIGF0IHByaWNpbmcgRVMgamV3ZXJseSBhbmQgbm9uIGNoZXN0IGFybW9ycy4gSSB3YXMgYWJsZSB0byBwaWNrIHVwIGRlY2VudCB0byBnb29kIEVTIGdlYXIgZm9yIGxlc3MgdGhhbiAxMGMvZWFjaC4KQW5kIHN1cnByaXNlIHN1cnByaXNlLCB0aGVyZSBhcmUgcGxlbnR5IG9mIHBlb3BsZSByZWFkaW5nIE1lZHV6YSBvciBFY2hvIG9mIE1vc2Nvdy4uIApNeSBicm90aGVyIGFuZCBJIGp1c3QgbG9va2VkIGF0IGVhY2ggb3RoZXIgZm9yIGEgZmV3IG1vbWVudHMgYmVmb3JlIHdlIHR1cm5lZCB0byB0aGVtIHRvIHNheSwgImFyZSB5b3Uga2lkZGluZz8gUmVhZGluZyBvZiB0aGUgd2lsbD8gTGlrZSBhIHNvYXAgb3BlcmE/IFRoZXJlIGlzIG5vIHJlYWRpbmcgb2YgdGhlIHdpbGwuIEV2ZXJ5dGhpbmcgdGhhdCBiZWxvbmdlZCB0byBteSBmYXRoZXIgbm93IGp1c3QgYmVsb25ncyB0byBteSBtb3RoZXIhIgpGaWJlciBjYW1lIHRvIG15IGFyZWEuIApUaGVyZSBpcyBzbyBtdWNoIG9mIGxpZmUgeW91IGhhdmVuJ3QgZXhwZXJpZW5jZWQgeWV0LCBhbmQgaXQgdHJ1bHkgZ2V0cyBiZXR0ZXIgYXMgeW91IGdldCBvbGRlci4gSSBrbm93IGl0IHJlYWxseSBkb2Vzbid0IGZlZWwgdGhhdCB3YXksIHNvIGlmIHlvdSBuZWVkIHRvIHRhbGsgdG8gc29tZW9uZSB3aGVuIHlvdSBmZWVsIHRoYXQgd2F5LCBmZWVsIGZyZWUgdG8gcG0gbWUuLiAKQW5kIG1hbnkgc3RhcnR1cHMgICBpbmNsdWRpbmcgUGljb0JyZXcsIGEgaG9tZWJyZXdpbmcgc3lzdGVtIGZvciBiZWdpbm5lcnMgYW5kIHByb2Zlc3Npb25hbHMgYWxpa2U7IElnbG9vaG9tZSwgYSBzbWFydCBsb2NrYm94IGZvciBzaG9ydCB0ZXJtIHJlbnRhbHM7IGFuZCBGb2xkaU1hdGUsIGEgbWFjaGluZSB0aGF0IHRha2VzIHRoZSB3b3JrIG91dCBvZiBmb2xkaW5nIGNsb3RoZXMgICBoYXZlIGdyYWR1YXRlZCBmcm9tIEV1cmVrYSBQYXJrIGFuZCBub3cgZXhoaWJpdCBvbiB0aGUgbGFyZ2VyIHNob3cgZmxvb3IuLiAKTXkgbW9tIHNhaWQgc2hlIGFsbW9zdCByZWFkIGEgd2hvbGUgYm9vayBpbiB0aGUgbG9iYnkgd2FpdGluZyBmb3IgbWUgdG8gbGFib3VyIGFuZCBwdXNoIGJlZm9yZSBzaGUgc2F3IHRoZW0gd2hlZWxpbmcgbWUgdG8gdGhlIG9wZXJhdGluZyByb29tLiAKQXMgYSBjb3NtZXRpYyBzdXJnZW9uIGZyb20gYSBHdWxmIHN0YXRlIHRvbGQgbWUsIGhlIHVzZWQgdG8gb25seSBzZWUgd29tZW4gZm9yIG5vc2Ugam9icyBiZWNhdXNlIGl0IHdhcyBjb25zaWRlcmVkIHVuSXNsYW1pYyB0byBzaG93IGEgbWFsZSBkb2N0b3IgeW91ciBib2R5IGZvciByZWFzb25zIG9mIHZhbml0eSBhcyBvcHBvc2VkIHRvIGlsbG5lc3MuIEhvd2V2ZXIsIGhlIHNlZXMgbW9yZSBhbmQgbW9yZSAoZnVsbHkgdmVpbGVkKSB3b21lbiBmb3IgYm9vYiBqb2JzIGFuZCBsaXBvLiBJcyBhIHRyZW5kIGhlIGhpbXNlbGYgc2VlcyBhcyBmdWxseSBJc2xhbWljIHNpbmNlIEdvZCBpcyBiZWF1dGlmdWwgYW5kIHRoZXJlZm9yZSB3ZSBtdXN0IGxvdmUgYmVhdXR5Li4gCkl0IGhhcyBubyBiYXNpcyBpbiByZWFsIHNjaWVuY2UgZmFjdCBvciB0ZWNobm9sb2d5LiAoRnVsbCBBbnN3ZXIpLiAKU2ksIHR1dHRpIHF1ZWkgcHJvYmxlbWkgY2hlIGxhIHNvY2lldCBoYSBjcmVhdG8gbmVnbGkgYW5uaSBlIGNoZSB0dSBzdGVzc28gY29udHJpYnVpc2NpIGEgY3JlYXJlIHNlZ3VlbmRvIGxhIGRpcmV6aW9uZSBkZWxsYSBzb2NpZXQuCkZpcnN0IG9mIGFsbCwgYmVpbmcgZ3JlYXQgaW4gYWN0dWFsIHdyZXN0bGluZyBpcyBvbmx5IHBhcnQgb2Ygd2hhdCBtYWtlcyBhIHdyZXN0bGVyIGNvbXBsZXRlLiBJIGZpbmQgaGlzIG92ZXJhbGwgYWN0LCB3aXRoIE1paG8sIHdpdGggaGlzIHBhbnRzLCB3aXRoIHRoZSB0ZXJyaWJsZSBsaXAgc3luY2luZyBhbmQgb3ZlcmFsbCBhdHRpdHVkZSBtb3JlIGVudGVydGFpbmluZyB0aGFuIGFueSBvdGhlciBoZWVsIGluIGFueSBvdGhlciBjb21wYW55IHJpZ2h0IG5vdy4gSGUgaXMgc28gcGVyZmVjdGx5IGFubm95aW5nIHRoYXQgaXQgYmVjb21lcyBlbnRlcnRhaW5pbmcgdG8gc2VlIGlmIGhlIHN1Y2NlZWRzIG9yIGZhaWxzLCBhbmQgaG93LCBpbnN0ZWFkIG9mIGp1c3Qgd2F0Y2hpbmcgQU5PVEhFUiBoaWdoIHdvcmsgcmF0ZSBtYXRjaCBhZnRlciBoaWdoIHdvcmsgcmF0ZSBtYXRjaC4gV3Jlc3RsaW5nIHByb21vdGlvbnMgYXJlIGJlc3Qgd2hlbiB0aGV5IGFyZSBkaXZlcnNlIGFuZCBvZmZlciBhIHZhcmlldHkgb3Igd3Jlc3RsZXJzIGFuZCBtYXRjaCB0eXBlcy4gSSBMT1ZFRCB0aGUgbWF0Y2ggbGFzdCBuaWdodC4gSWYgeW91IGRpZG4ndCwgb2suIEkgY2FuIHdhdGNoIGFuIFlhbm8gbWF0Y2ggYW5kIGhhdmUganVzdCBhcyBtdWNoIGZ1biBhcyB3YXRjaGluZyBhIFNoaWJhdGEgb3IgSXNoaWkgbWF0Y2guClRoZXkgY291bGRudCBnZXQgaG9tZSBmb3IgdGVuIGRheXMsIGFuZCBpIGNvdWxkbnQgZ2V0IGludG8gdG93biB3aXRoIGdyb2NlcmllcyBhbmQgc3R1ZmYgZm9yIHRoZW0gZm9yIGFub3RoZXIgZml2ZSBvciBzbyBiZWNhdXNlIG9mIGZsb29kaW5nLiBJdCB3YXMgY3Jhenkgc2VlaW5nIHRoZSBkcm9uZSBhbmQgaGVsaWNvcHRlciBzaG90cyBvZiB0aGUgaGlnaHdheSBmbG9vZGVkIG91dCBhbmQgYWxsIHRoZSB0cmVlcyBhbmQgZGFtYWdlIGRvbmUuIEkgY2FuIHJlbWVtYmVyIGRyaXZpbmcgaW50byB0b3duIGFuZCB0aGlua2luZyAiaG9seSBzaGl0LCB0aGlzIHdhcyBiYWQiLiAKQ29uZmVzc2lvbjogSXQgcHJvYmFibHkgaGFwcGVuZWQgYmVjYXVzZSBJIGtlcHQgc3B5aW5nIG9uIHRoZSBzcGVlZCBvZiB0aGUgdHJlYWRtaWxsIG5leHQgdG8gbWluZS4gSSBmZWx0IHZlcnkgc3VwZXJpb3Igd2hlbiBNci4gQWlycG9kcyBoYWQgdG8gdGFrZSBhbiBleHRlbmRlZCB3YWxrIGJyZWFrIGFuZCBJIHNhdyBoaW0gbG9va2luZyBhdCBteSB0cmVhZG1pbGwuCkdQQVQgQm9va3MgRnJlZSBEb3dubG9hZCBQREYhISEgR1BBVCBNQ1EuIFRoZSBUb3AgTW9zdCBJbXBvcnRhbnQgUXVlc3Rpb25zIEUgQk9PSyBXaGljaCBpcyBNb3N0IEltcG9ydGFudCBGb3IgVGhlIEdQQVQgMjAxOCBFeGFtLiBUaGlzIElzIENyZWF0ZWQgQnkgTXIuIEFiaGlzaGVrIENob3VoYW4uIEhlIElzIGEgR1BBVC4gMTAgSnVsIDIwMTggLiBQYXJ0aWNpcGFudHMgY2FuIGRvd25sb2FkIEdQQVQgQm9va3MgUERGIE9ubGluZSBGcmVlIGFuZCBzdHVkeSBmcm9tIHNhbWUuIApXaGVyZSBkaWQgdGhlc2UgbnVtYmVycyBjb21lIGZyb20/IFRoZXJlIGFyZSBhIGxvdCBvZiBwb3N0cyB0b2RheSBhYm91dCBNZWRpY2FyZSBmb3IgYWxsIHNvIEkgaGF2ZSBiZWVuIGdvaW5nIGRvd24gYSByZXNlYXJjaCB3b3JtIGhvbGUgYW5kIGFtIGV2ZW4gbW9yZSBjb25mdXNlZCBub3cgdGhlbiBJIHdhcyB0aGlzIG1vcm5pbmcuIE5vYm9keSBrbm93cyBmb3Igc3VyZSB3aGF0IHdvdWxkIGhhcHBlbiBpZiB3ZSBkaWQgaXQuIApBbmQgdGhpcyBpcyB0aGUgbGVhc3QgaGUgY2FuIGRvLiAKSSBtYWRlIHRoaXMgbWlzdGFrZSBhcyB3ZWxsIGFuZCB3YXMgdW5kZXIgZWF0aW5nIG15IHByb3RlaW4gbGV2ZWxzIGZvciB5ZWFycyB1bnRpbCBJIGxlYXJuZWQgYWJvdXQgcGVyY2VudCB5aWVsZHMgaW4gbXkgZGlldGV0aWMgZmllbGQgKGFtIGN1cnJlbnRseSBpbiBzY2hvb2wgZm9yIG51dHJpdGlvbikuLiAKQW5kIHRoZW4geW91IGNhbiBleGNoYW5nZSB0aG9zZSBmYXZvcnMgdG8gb3RoZXIgcGVvcGxlIGluIHRoZSBzZXR0aW5nIGFuZC4gV2VsbCwgaXQgcHJldHR5IG11Y2ggYSBiYXJ0ZXIgc3lzdGVtIGFuZCBhIHdheSB0byBoYXZlIHlvdXIgY2hhcmFjdGVycyBpbmRlYnRlZCB0byBvdGhlcnMgKGFuZCB0byBjYWxsIG9uIG90aGVycyBmb3Igc3VwcG9ydCkuIEkgZG9uIHRoaW5rIGl0IG5lZWRzIHRvIGJlIGluIHRoZSBnYW1lIGF0IGFsbCBhbmQgcmVtb3ZpbmcgaXQgd291bGRuIGNoYW5nZSBhIHRoaW5nLiAKTGUgMjYgb2N0b2JyZSBkZXJuaWVyLCBub3VzIGRwbG9yaW9ucyBsZSBzaWxlbmNlIGRlIGwnSHRlbCBkZSBWaWxsZSAgcHJvcG9zIGRlIGxhIFByb21lbmFkZSBVcmJhaW5lLCBsZSBmYW1ldXggcHJvamV0IGRlIHJlbm91dmVsbGVtZW50IHVyYmFpbiBkdSB0cm9ub24gQmFyYnMgQ2hhcGVsbGUgU3RhbGluZ3JhZC4gRW4gZWZmZXQsIEFjdGlvbiBCYXJicyB0YW50ICBsJ29yaWdpbmUgZGUgbCdpZGUgZGUgUHJvbWVuYWRlIFVyYmFpbmUsIGltYWdpbmUgZHMgMjAxMywgZXQgcHJzZW50ZSBhdXggZGlmZnJlbnRzIGNhbmRpZGF0cyBhdXggTXVuaWNpcGFsZXMgZW4gMjAxNCwgbm91cyBhdm9ucyB0b3Vqb3VycyBzdWl2aSBkZSB0cnMgcHJzIHNhIG1pc2UgZW4gb2V1dnJlLiBFdCBsZXMgYWxhcyBuJ29udCBwYXMgbWFucXUgZGVwdWlzIGNpbnEgYW5zLiAKQXQgdGhlIGJlZ2lubmluZyBvZiB0aGUgZXBpc29kZSwgdGhlIGZseSBwYXNzaW5nIGZyb20gQWxhbidzIGJhdGhyb29tIHRvIHRoZSBiYXRocm9vbSBOYWRpYSBpcyBpbiBhdCB0aGUgcGFydHkgc2hvd3MgdGhleSB3ZXJlIHN0aWxsIGNvbm5lY3RlZC4gVGhlbiBkaXZlcmdlbmNlLgpIaSBhbGwsIG5ld2JpZSB3YXRjaCBlbnRodXNpYXN0IGhlcmUuIApUaGUgUGFwZXJ3b3JrQ29tcGxldGUgdGhlIHJlcXVpcmVkIGFwcGxpY2F0aW9uIG9yIGFwcGxpY2F0aW9ucy4gSW4gc29tZSBwbGFjZXMsIHlvdSBtYXkgaGF2ZSB0byB2aXNpdCB5b3VyIGxvY2FsIHBvbGljZSBzdGF0aW9uIHRvIHVuZGVyZ28gZmluZ2VycHJpbnRpbmcgYW5kIGEgY3JpbWluYWwgYmFja2dyb3VuZCBjaGVjayBhcyBwYXJ0IG9mIHRoZSBhcHBsaWNhdGlvbiBwcm9jZXNzLgpJIHRoaW5rIEkgYSBwcmV0dHkgYmlnIG5pdCBhbmQgcmlzayBhdmVyc2UuIEV2ZXJ5b25lIGVsc2UgdGhpbmtzIEkgaW5zYW5lLiBUaGUgYmlnIGhhbmRzIHlvdSBzaG93IGRvd24gd2l0aCBzdHJhbmdlIGJsdWZmcyBhcmUgb2Z0ZW4gdGhlIG9uZXMgdGhhdCBwZW9wbGUgcmVtZW1iZXIgY2xlYXJseTsgdGhleSBmb3JnZXQgYWxsIHRoZSB0aW1lcyB5b3Ugc2hvdyB1cCBpbiBiaWcgcG90cyB3aXRoIHRoZSBudXRzIGJlY2F1c2UgdGhleSBleHBlY3QgaXQuIEkgY2FuIHNob3cgb25lIGh1Z2UgYmx1ZmYgaW4gYSBzcG90IGFuZCBhbGwgb2YgYSBzdWRkZW4gaXQgYWxsIHRoZXkgcmVtZW1iZXIgZm9yIHRoZSBuZXh0IDMgbW9udGhzLgpPbiB5b3VyIHdheSBiYWNrLCB0aGVyZSBhIGxvY2FsIGNhYmxlIFRWIHNhbGVzcGVyc29uIG9mZmVyaW5nIHlvdSAzIG1vbnRocyBmcmVlIGFuZCBmcmVlIGVxdWlwbWVudCBmb3IgYSB5ZWFyIGlmIHlvdSBzaWduIHVwIHRvZGF5LiBBcyB5b3Ugd2FpdCBpbiBsaW5lIHRvIHBheSwgeW91IGRlY2lkZSB5b3UgY291bGQgZ28gZm9yIGEgc25pY2tlcnMgYmFyLCBhbmQgYSBDb2tlIHNvdW5kcyBncmVhdCwgc28gbGV0IGdyYWIgdGhhdCB0b28uIApXaHkgeW91IHNob3VsZCBkbyBLZWdlbCBleGVyY2lzZXMKR3VuIG93bmVycyBhZHZvY2F0ZSBwdWJsaWNseSB0aGF0IHNwb3J0IHNob290aW5nIGlzIGEgbGVnaXQgaG9iYnkgICB0aGlzIGRvZXNuJ3QgcmVzdHJpY3QgcGFydGljaXBhdGlvbi4gR3VuIG93bmVycyBwb2ludCBvdXQgdGhhdCBodW50aW5nIGlzIGEgbGVnaXQgaG9iYnkgYW5kL29yIHdheSBvZiBsaWZlICAgdGhpcyBkb2Vzbid0IHJlc3RyaWN0IHBhcnRpY2lwYXRpb24sIHlvdSBzaW1wbHkgaGF2ZSB0byBidXkgYnVsbGV0cyBhdCBXYWxtYXJ0IG9uIHRoZSB3YXkgb3V0IHRvIHRoZSB3b29kcy4gCk9iYW1hIGhhcyBub3Qgd29ya2VkIHRvIHJpZCB0aGUgbmF0aW9uIG9mIHRoZSBEZWZlbnNlIG9mIE1hcnJpYWdlIEFjdCBhbmQgaW4gZmFjdCBhZGRlZCBldmVuIG1vcmUgbW9uZXkgdG8gdGhlIGZlZGVyYWwgIkhlYWx0aHkgKFNUUkFJR0hUKSBNYXJyaWFnZSBJbml0aWF0aXZlcyIgIGEgY2FtcGFpZ24gc3RhcnRlZCBieSBEdWJieWEgdG8gc29sdmUgcG92ZXJ0eSBieSB0ZWFjaGluZyBwb29yIHBlb3BsZSB0byBnZXQgbWFycmllZC4gRnVydGhlciwgaGUgaGFzIG5vdCB5ZXQgc2lnbmVkIGFuIGV4ZWN1dGl2ZSBvcmRlciBnZXR0aW5nIHJpZCBvZiAiRG9uIEFzaywgRG9uIFRlbGwiIGluIHRoZSBtaWxpdGFyeS4gQnV0LCBPYmFtYSBpcyB3b3JraW5nIHRvIHByb3RlY3QgdHJhbnNnZW5kZXIgZmVkZXJhbCBlbXBsb3llZXMuLiAKSGUgaXMgZmlyc3QgaWxsdXN0cmF0ZWQgYXMgYSBLYXRyaW5hIHJlbGllZiBoZXJvIGRyaXZpbmcgZnJvbSBUZXhhcyB0byBOZXcgT3JsZWFucyB0byBzYXZlIGhpcyBmcmllbmQuIAoiR29vZCB0byBzZWUgeW91IGFnYWluIiB3YXMgQ29rZSdzIGZpcnN0IGFkdmVydGlzaW5nIGNhbXBhaWduIHVwb24gaXRzIHJldHVybiwgYWx0aG91Z2ggaW4gdHJ1dGggaXQgaGFkIG5ldmVyIHJlYWxseSBsZWZ0LiBJdCBoYWQgYmVlbiBpbGxlZ2FsbHkgc211Z2dsZWQgaW50byB0aGUgY291bnRyeSBmcm9tIG5laWdoYm91cmluZyBjb3VudHJpZXMgdGhyb3VnaG91dCB0aGUgZGlwbG9tYXRpYyBhbmQgdHJhZGUgZW1iYXJnby4gRHJpbmtpbmcgQ29rZSBkdXJpbmcgdGhvc2UgeWVhcnMgYmVjYW1lIHNvbWV0aGluZyBvZiBhIHN0YXR1cyBzeW1ib2wuCldlIGhhdmUgbm8gcHJpdmFjeSBmcm9tIHRoZSBnb3Zlcm5tZW50Li4gCk1ha2UgdGhlIHdvcmQsIGFuZCBpZGVhIG9mLCBpdHNlbGYgc29tZXRoaW5nIHRoYXQgaGFzIG1lYW5pbmcuIElmIHlvdSBjbGFpbSB0byBiZSBpdCwgYW5kIGRvbiBtZWV0IHRoZSBjcml0ZXJpYSB0aGVuIGJlIHRhcnJlZCBhbmQgZmVhdGhlcmVkIHB1YmxpY2x5LiAKRnVubmlseSBlbm91Z2ggd2hhdCBoZSBkaWQgaXMgYWN0dWFsbHkgd2hhdCB0aGlzIGxldmVsIG9mIGZhc2hpb24gaXMgYWJvdXQgICBpdHMgYWJvdXQgbWFraW5nIGEgc3RhdGVtZW50LCBiZWluZyBib2xkLCBhbmQgcHVzaGluZyBmb3J3YXJkLiBTb21ldGltZXMgaXQgbGFuZHMgYW5kIHNvbWV0aW1lcyBpdCB0b3RhbGx5IGZhbGxzIGZsYXQuIEZhc2hpb24gaXNuIGFib3V0IGhvdyBtdWNoIHNvbWV0aGluZyBjb3N0cyBvciB3aGVyZSBpdCBjYW1lIGZyb20sIGl0IGFib3V0IHRoZSB0b3RhbCBsb29rIGJlaGluZCBpdC4uIApJZiBJIHdlcmUgZ29pbmcgdG8gb2ZmZXIgYW55IHJlYWwgY3JpdGlxdWUgaXQgd291bGQganVzdCBiZSB0aGF0IHRoZXkgY291bGQgaGF2ZSB0YWtlbiBhIGJpdCBtb3JlIHRpbWUgYmVmb3JlIGp1c3QgaGV5IGl0IG1vcm5pbmcgd2UgYXQgdGhlIHdpemFyZCB0b3dlci4gSXQgd291bGQgaGF2ZSBiZWVuIGFuIG9wcG9ydHVuaXR5IGZvciBwZW9wbGUgdG8gc2VlIHRoYXQgQ2FsZWIgZGlkIG5vdCB3YW50IHRvIGRvIHRoYXQgc2hpdC4gSXQgbWlnaHQgaGF2ZSBiZWVuIGFuIG9wcG9ydHVuaXR5IGZvciBhIGxvdCBvZiB0aGluZ3MuIEJ1dCB0aGF0IG9rYXkgdG9vLgpCcmFzIGFyZSBhIHBhaW4gaW4gdGhlIGFzcyBhbmQgSSBoYWQgYSBjb3VwbGUgbGFkaWVzIGxlYXZlIHRoZW0gb24uIEkganVzdCBhc2sgdGhlbSBpZiB0aGV5IG9rYXkgd2l0aCBtZSB1bmNsYXNwaW5nIGl0IHRvIHdvcmsgdGhlaXIgYmFjayBhbmQgaWYgdGhleSBhcmVuIEkgYXNrIHRoZW0gaWYgaXQgb2theSBpZiBvaWwgZ2V0cyBvbiBpdC4gClRvIGJldHRlciB1bmRlcnN0YW5kIHRoZSBpbnRlcmVzdHMgb2Ygb3VyIGN1c3RvbWVycyBhbmQgdmlzaXRvcnMgdG8gb3VyIFNlcnZpY2VzLgpGb3IgdGhpcyBlbnRyeSwgd2UgYXNrZWQgZm9yIHRpcHMgb24gaG93IHRvIHN0YXkgY29vbCwgaG93IHRvIGhhbmRsZSBvYm5veGlvdXMgZmVsbG93IGNvbW11dGVycyAod2l0aG91dCBsYW5kaW5nIHlvdXJzZWxmIGluIHRyb3VibGUgb3IgZGFuZ2VyKSBhbmQgZ2VuZXJhbCBhZHZpY2Ugb24gaG93IGJlc3QgdG8gc3RheSBjaGVlcnkgd2hpbGUgeW91ciBmYWNlIGlzIHByZXNzZWQgaW50byB0aGUgc3dlYXR5IGFybXBpdCBvZiB0aGUgcGVyc29uIHN0YW5kaW5nIG5leHQgdG8geW91LiAKVGhpcyBpcyBhY3R1YWwgYWRkaXRpb25hbCBldmlkZW5jZSB0aGF0IFNoZWsgYXJlIGJldHRlciB3YXJyaW9ycyBhbmQgSGl2ZXJzIGFyZSB3b3JzZS4gCllvdSBnZXQgdGhlIHBvaW50LiAKTXkgbmlja25hbWVXZWxsLCBteSBuaWNrbmFtZSBpcyBuZHIuIApUaGUgbGVnYWN5IG9mIHBva2llcyBpcyBub3cgZGVlcGx5IHN0aXRjaGVkIGludG8gdGhlIGZhYnJpYyBvZiBsaWZlIGluIEF1c3RyYWxpYS4gV2UgYXJlIHRoZSB3b3JsZCdzIGJpZ2dlc3QgZ2FtYmxlcnMsIGxvc2luZyBtb3JlIG1vbmV5IHBlciBjYXBpdGEgdGhhbiBhbnlvbmUgaW4gdGhlIHdvcmxkLiBXZSBoYXZlIG1vcmUgbWFjaGluZXMgcGVyIHBlcnNvbiB0aGFuIGFueSBjb3VudHJ5IG9uIGVhcnRoLCBhbmQgcG91ciBhbiBpbmNyZWRpYmxlICQxMzUuNyBiaWxsaW9uIGludG8gdGhlbSBhbm51YWxseSBpbiBwdXJzdWl0IG9mIHRoYXQgZWx1c2l2ZSBoaWdoLi4gCkZ1bGwgZGlzY2xvc3VyZTogSSBoYXZlbiBwbGF5ZWQgbXVjaCBNVEcgaW4gbXkgbGlmZS4gVGhhdCBzYWlkLCBJIGtub3cgaXQgYSBnYW1lIHdoZXJlIGhpZGRlbiBpbmZvcm1hdGlvbiBmZWF0dXJlcyBwcm9taW5lbnRseS4gCkJsdWZmaW5nIGluIExpbWl0IGdhbWVzIGFyZSBub3QgdmVyeSBjb21tb24sIGJlY2F1c2UgaXQncyBub3QgdG9vIGNvc3RseSBmb3IgeW91ciBvcHBvbmVudCB0byBjYWxsIGlmIGhlIHN1c3BlY3RzIHRoYXQgeW91IGFyZSB0cnlpbmcgdG8gYmx1ZmYgaGltLgpOb3Qgb25seSB3YXMgTWFyYyBhIGdyZWF0IHBoaWxhbnRocm9waXN0LCBidXQgaGlzIHBhc3Npb24gZm9yIHNwb3J0cyByYW4gZGVlcC4gCkkgaGF2ZSBhIGNvbGxlY3Rpb24gb2YgYmFieSBhbHBhY2EgeWFybiBwcm9qZWN0cyB0aGF0IEkgZGlkbiBsZWF2ZSB0aGUgcGF0dGVybnMgb3IgaG9vayBzaXplIHdpdGggdGhlbSB3aGVuIEkgcHV0IHRoZW0gYXdheSAocm9va2llIG1pc3Rha2UpIHNvIEkgZnJvZ2dlZCB0aGVtIGFuZCBJIGJlZW4gc3Rhc2ggYnVzdGluZyBtYWtpbmcgaGF0cyBvdXQgb2YuIEkgZGVjaWRlZCBvbiBhIHJpYmJlZCBzcGlyYWwgaGF0IHByb2plY3QgdGhhdCB3b3JrZWQgaW4gdGhlIGJhY2sgbG9vcCBvbmx5IHRvIGJ1c3QgYSBsb3ZlbHkgYmx1ZSB5YXJuLiBUaGUgcGF0dGVybiBpcyB3b3JrZWQgaG9yaXpvbnRhbGx5LCBpdCBhYm91dCAxMCBpbmNoZXMgbG9uZywgYnV0IHRoZSB5YXJuIGlzIGp1c3QgaGVhdnkgZW5vdWdoIHRoYXQgaXQgYSBwYWluIHRvIGhvbGQuIApOZWFyIHRoZSBlbmQgb2YgdGhlIHNlYXNvbiwgdGhlIGRlbW9uIGtpZG5hcHMgYWxsIHRoZSBzcGVjaWFsIGtpZHMgYW5kIGFycmFuZ2VzIGEgZmlnaHQgdG8gdGhlIGRlYXRoIGZvciBubyBmdWNraW5nIHJlYXNvbi4gClRvYmFjY28gdGF4IGZvciBleGFtcGxlLiBUaGV5IG1ha2UgdGhlIHB1cmNoYXNlIG9mIHRvYmFjY28gbGVzcyBhdHRyYWN0aXZlIGluIG9yZGVyIHRvIHByZXZlbnQgcGVvcGxlIGZyb20gc21va2luZy4gVGhhdCBpcyBiYXNpYyBwb2xpdGljYWwgZWNvbm9taWNzLgpJIGZlZWwgcGVvcGxlIGRvbiBldmVyIHJlYWxseSBnZXQgZGVuaWVkIGZyb20gYmVpbmcgYSBwZWFjZSBjb3JwcyB2b2x1bnRlZXIsIGl0IG1vcmUgdGhhdCB0aGV5IGp1c3Qgd2VlZCB0aGVtc2VsdmVzIG91dCBiZWNhdXNlIGl0IHRha2VzIHNvIGxvbmcuLiAKQWxzbywgdGhlIGZvcnVtIG9ic2VydmVkIHRoYXQgZXZlbiBpZiB0aGUgY2FyIHdhcyB1c2VkIGZvciBvbiBoaXJlIGFuZCByZXdhcmQgYmFzaXMsIHRoYXQgd2FzIG5vdCB0aGUgcmVhc29uIGZvciB0aGVmdCBhbmQgaXQgd2FzIHN0b2xlbiB3aGVuIGl0IHdhcyBwYXJrZWQgYXQgaGlzIHJlc2lkZW5jZS4KT24gYSBjbG91ZHkgYW5kIGNvb2wgZGF5LCB0aGUgZGVtb25zdHJhdG9ycyBjYW1lIGZyb20gYWxsIGNvcm5lcnMgb2YgdGhlIGNvdW50cnksIHdhdmluZyBBbWVyaWNhbiBmbGFncyBhbmQgaGFuZHdyaXR0ZW4gc2lnbnMgZXhwbGFpbmluZyB0aGUgcm9vdCBvZiB0aGVpciBmcnVzdHJhdGlvbnMuIFRoZWlyIGFuZ2VyIHN0cmV0Y2hlZCB3ZWxsIGJleW9uZCB0aGUgaGVhbHRoIGNhcmUgbGVnaXNsYXRpb24gbW92aW5nIHRocm91Z2ggQ29uZ3Jlc3MsIHdpdGggc2hvdXRzIG9mIHN1cHBvcnQgZm9yIGd1biByaWdodHMsIGxvd2VyIHRheGVzIGFuZCBhIHNtYWxsZXIgZ292ZXJubWVudC4KTm93IHByb2R1Y2luZyBmb3VyIG1pbGxpb24gYmFycmVscyBhIGRheSwgdGhlIFBlcm1pYW4gZ2VuZXJhdGVzIG1vcmUgb2lsIHRoYW4gYW55IG9mIHRoZSAxNCBtZW1iZXJzIG9mIE9QRUMgZXhjZXB0IFNhdWRpIEFyYWJpYSBhbmQgSXJhcS4gClRoYXQgYXBwIGhhcyBtYW55IGZlYXR1cmVzLCBpbmNsdWRpbmcgbGV0dGluZyBwZW9wbGUgZG8gcm91dGluZSB0aGluZ3MgbGlrZSByZW5ld2luZyB0aGVpciBwYXNzcG9ydCBhbmQgZHJpdmVyJ3MgbGljZW5zZSwgcGF5aW5nIGZvciBwYXJraW5nIGZpbmVzLCBvciBhcHBseSBmb3IgYSB3aWRlIHJhbmdlIG9mIHBlcm1pdHMuIFRoZSBhcmVhIG9mIGRpc3B1dGUgaXMgdGhlIGZ1bmN0aW9uIHdoaWNoIGFsbG93cyBndWFyZGlhbnMgdG8gcHJldmVudCB0aGVpciBkZXBlbmRlbnRzIGZyb20gbGVhdmluZyB0aGUgY291bnRyeSB3aXRob3V0IHBlcm1pc3Npb24uIEl0IGNvdWxkIGJlIHBvc3NpYmxlIHRoYXQgdGhleSBhZ3JlZWQgdG8gcmVtb3ZlIHRoYXQgZnVuY3Rpb25hbGl0eSBpbiBleGNoYW5nZSBmb3IgYWxsb3dpbmcgdGhlIGFwcCB0byByZW1haW4gdXAuIFRoZXJlIGlzIGFsc28gYSBtb2JpbGUgd2Vic2l0ZSB3aGljaCBoYXMgdGhlIGV4YWN0IHNhbWUgZnVuY3Rpb25zIHNvIGl0J3MgcG9zc2libGUgdGhleSBtb3ZlZCBpdCBvdmVyIHRvIHRoZXJlLgpJIG5ldmVyIHJlY2VpdmVkIGFueSAiYWRkaXRpb25hbCIgc2VydmljZSBhbmQgdGhlIHdheSBJIGdvdCBhcm91bmQgdGhpcyB3YXMgdGhhdCBJIHBhaWQgdGhlbSBleHRyYSAidGlwcyIgdG8ganVzdCBjaGF0dGluZyBkaXJ0eSB3aXRoIG1lIGluc3RlYWQgd2hpbGUgbWFzc2FnaW5nIG1lLiBJIHRvbGQgdGhlbSAoaW4gdGhlaXIgbmF0aXZlIGxhbmd1YWdlLCBJIHNwZWFrIGJvdGggQ2FudG9uZXNlIGFuZCBNYW5kYXJpbikgdGhhdCBJIGRvbiBkbyBleHRyYSBzZXJ2aWNlcyAiYW55bW9yZSIgZHVlIHRvIGEgbWVkaWNhbCByZWFzb24gYnV0IHRoYXQgSSBzdGlsbCBlbmpveSBzZXh1YWwgdGFsayBkdXJpbmcgdGhlIG1hc3NhZ2UgKGllLiAKVGhleSBkb24gaGF2ZSBhY2Nlc3MgdG8gcmVwbGF5LCBzdGF0cywgY29tbWVudGFyeSwgdGhleSBjYW5ub3QgY2hlY2sgd2l0aCB0aGVpciBidWRkaWVzLCBhbmQgdGhleSBmZWVsLCB2aXNjZXJhbGx5LCBjcm93ZCBub2lzZSB3aGVuIGEgZmFuIGZhdm9yaXRlIGxhbmRzIGEgcHVuY2guIApJIGFsd2F5cyBjb29rIDQgcG9ydGlvbnMgZm9yIGRpbm5lciwgb3IgNiB3aGVuIEkgbWFrZSBzb3VwIGFuZCBmcmVlemUgMiBmb3Igd2Vla2VuZCBtZWFscy4gCkJ5IGRvaW5nIHRoaXMgbXkgTGludXggc2tpbGxzIHdlbnQgZnJvbSAiSSBoYXZlIHVzZWQgTGludXgiIHRvICJJIG1hbmFnZSBzZXZlcmFsIExpbnV4IGJveGVzIG9uIGEgZGFpbHkgYmFzaXMuIiBJJ3ZlIGdvbmUgZnJvbSBiYXJlbHkgdW5kZXJzdGFuZGluZyB0aGUgY29uY2VwdHMgb2YgdmlydHVhbGl6YXRpb24gdG8gYnVpbGRpbmcgb3V0IGVudGlyZSBpbmZyYXN0cnVjdHVyZXMuIFRoZSBrZXkgaXMgdG8gZmluZCBhIHdheSB0byBmb3JjZSBkaXNjaXBsaW5lIG9uIHlvdXJzZWxmIGFuZCBJIGNhbid0IHN0YW5kIGl0IHdoZW4gc3R1ZmYgZG9lc24ndCB3b3JrIHdoZW4gSSB3YW50IGl0IHRvIHNvIEkgc3RhcnRlZCBsZWFybmluZyB0byBmb2N1cyBhbmQgcmVhbGx5IHRoaW5rIHRoaW5ncyB0aHJvdWdoLi4gClNoZSBob2xkcyBhIGJhY2hlbG9ycyBkZWdyZWUgaW4gSGlzdG9yeWZyb20gdGhlIFVuaXZlcnNpdHkgb2YgRmluZGxheSBhbmQgd2lsbCBiZWJlY29taW5nIGEgc3RlcCBtb20gdGhpcyBNYXkgd2hlbiBzaGVtYXJyaWVzIGhlciBiZXN0IGZyaWVuZC4yOjAwUE0gIEFuIEFnZSBvZiBJbnZlbnRpb24gYW5kIFdvbmRlciAxIGhvdXIgSGF2ZSB5b3UgZXZlciBzdG9wcGVkIHRvIHRoaW5rIG9mIGFsbHRoZSBhZHZhbmNlcyBpbiB0ZWNobm9sb2d5LCB1bmRlcnN0YW5kaW5nIG9mdGhlIHBoeXNpY2FsIHdvcmxkIGFuZCBzdHJpZGVzIGluIG1lZGljaW5lZGV2ZWxvcGVkIGR1cmluZyB0aGUgQ2l2aWwgV2FyIFllYXJzPyBSZXRpcmVkU2NpZW5jZSBUZWFjaGVyIFRlZCBEdWRyYSBhbmQgQ1cgTWVkaWNhbGhpc3RvcmlhbiBWaXJnaWwgS2xpbmUgY28gaG9zdCB0aGlzIHNlc3Npb24gdG9idXN0IGEgZmV3IG15dGhzIGFuZCBzaGFyZSBzb21lIGFtYXppbmdyZXZlbGF0aW9ucyBhYm91dCBtZWRpY2luZSBhbmQgc2NpZW5jZSBpbiB0aGUxODYwIFRlZCBpcyBhIHJldGlyZWQgc2NpZW5jZSB0ZWFjaGVyaGF2aW5nIHRhdWdodCAzNSB5ZWFycyBhdCBUYWZ0IE1pZGRsZSBzY2hvb2xpbiB0aGUgUGxhaW4gTG9jYWwgc2Nob29sIGRpc3RyaWN0IGluIENhbnRvbixPaGlvLiAKT250aGVidXJzdCAgMTE3IHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvCkhpcyBlZmZvcnRzIGhhdmUgbWFkZSBoaW0gYSBmaW5hbGlzdCBmb3IgT250YXJpbyBCdXNpbmVzcyBBY2hpZXZlbWVudCBBd2FyZHMgWW91bmcgRW50cmVwcmVuZXVyIG9mIHRoZSBZZWFyIHRoaXMgTm92ZW1iZXIgYW5kIGhlIGlzIHByZXBhcmluZyB0byByZXByZXNlbnQgQ2FuYWRhIGluIHRoZSBnbG9iYWwgRU5BQ1RVUyBCdXNpbmVzcyBDaGFtcGlvbnNoaXAsIGFzIHdpbm5lciBvZiBpdHMgbmF0aW9uYWwgY29tcGV0aXRpb24gZWFybGllciB0aGlzIHllYXIuLiAKRml2ZSBvZiBBQkJBJ3MgZWlnaHQgc3R1ZGlvIGFsYnVtcyBhbHNvIHBlYWtlZCBhdCBudW1iZXIgb25lIGluIHRoZSBVSyBhcyBkaWQgZm91ciBjb21waWxhdGlvbiBhbGJ1bXMuIApUaGUgd2hvbGUgdGhpbmcgd2l0aCBSb3hhcyBhbmQgTmFtaW5lIGlzIHRoYXQgdGhleSBkaWQgcHV0IHRoZWlyICJkYXRhIiBpbnRvIGEgdmVzc2VsL2R1bW15LiBUaHJvdWdoIEV2ZW4sIHRoZXkgZm91bmQgYSB3YXkgdG8gcmVzdG9yZSB0aGVpciBtZW1vcmllcyBpbnRvIGR1bW1pZXMuIFJveGFzIGZhbGxpbmcgZnJvbSB0aGUgc2t5IHdhcyBhIGRlbGl2ZXJ5LiBEZW15eCBoYWQgZ2F2ZSBJZW56byBhIHZlc3NlbCBmb3IgaGltIHRvIHVzZSBmb3IgUm94YXMgKGlmIHlvdSByZWNhbGwsIE5hbWluJ3MgaXMgdGhlIGR1bW15L3Zlc3NlbCB1c2VkIGJ5IHBhc3QgUmlrdSkuCkV4YW1wbGVzIG9mIHRoaXMgc3RhdGUgb2YgaGVhbGluZyBpbmNsdWRlIHlvdXIgYm9keSBmaWdodGluZyBvZmYgZ2VybXMgYW5kIG5vdCBnZXR0aW5nIGluZmVjdGlvbnMsIHRoZSBlbGltaW5hdGlvbiBvZiBhbGxlcmdpZXMsIGFuZCBjb21pbmcgaW4gY29udGFjdCB3aXRoIGNhcmNpbm9nZW5zIGFuZCBub3QgZGV2ZWxvcGluZyBjYW5jZXIuCkhlYWx0aHkgbmFpbHMgd2lsbCBhbHdheXMgbWFrZSBhIGdvb2QgaW1wcmVzc2lvbi4gQXMgeW91IHVzZSB5b3VyIGhhbmRzIGZvciBuZWFybHkgZXZlcnl0aGluZywgeW91IG11c3QgY29uc2Npb3VzbHkgbWFrZSBhbiBlZmZvcnQgdG8gdGFrZSBjYXJlIG9mIGl0IHRvIG1ha2UgYSB2ZXJ5IGdvb2QgaW1wcmVzc2lvbi4KQW5kIHdoaWxlIHRoaXMgY2FuIGhhdmUgYSBwb3NpdGl2ZSBpbXBhY3Qgb24gdGhlIGxvY2FsIFJvc3Nmb3JkIGJ1c2luZXNzZXMgYW5kIGNpdHkgaG90ZWxzLCB3ZSB3YW50IHRvIGhlbHAgdGhlIGNpdHkgaGFuZGxlIGluY3JlYXNlZCB2b2x1bWUgb24gaXRzIHJvYWRzLCB3aGljaCBpcyB0eXBpY2FsIG9mIGFueSBtYWpvciBuZXcgZWNvbm9taWMgZGV2ZWxvcG1lbnQgcHJvamVjdCwiIFN0LiAKSXQgd2FzIGFtYXppbmcuIApJIHNsaWdodGx5IGxlc3Mgc2tlcHRpY2FsLCBvbmx5IGJlY2F1c2Ugb25lIG9mIGhpcyBiZXN0IHNlYXNvbnMgd2FzIGluIGEgU2hhbmFoYW4gc3R5bGUgb2ZmZW5zZS4gSGUgYWxzbyBkb2VzIHdlbGwgd2l0aCBhIGdyZWF0IGRlZmVuc2UsIGFuZCB3ZSBoYXZlIG9uZS4gClNoZSBzbWlsZWQgc2xvd2x5IGFuZCwgd2Fsa2luZyB0aHJvdWdoIGhlciBodXNiYW5kIGFzIGlmIGhlIHdlcmUgYSBnaG9zdCwgc2hvb2sgaGFuZHMgd2l0aCBUb20sIGxvb2tpbmcgaGltIGZsdXNoIGluIHRoZSBleWUuIApPdmVydmlldyBmb3Igc2hhbm5vbmRvYWgKSW4gdGhlIGZ1dHVyZSB0aGVyZSB3b24ndCBiZSBzb3VyY2VzIHlvdSB0cnVzdCBiZWNhdXNlIHlvdSd2ZSBlbnN1cmVkIHRoZWlyIHJlbGlhYmlsaXR5LCB0aGVyZSdsbCBiZSBzb3VyY2VzIHlvdSB0cnVzdCBiZWNhdXNlIHRoZXkgc2F5IHRoaW5ncyB5b3Ugd2FudCB0byBiZWxpZXZlLiBSZWFsaXR5IHdpbGwgYmUgYSBtYXR0ZXIgb2Ygb3Bpbmlvbi4KVGhlIFdlYm5vZGUncyB3ZWJzaXRlLCBpdHMgY29udGVudHMsIHByb2R1Y3RzIGFuZCBzZXJ2aWNlcyBhcmUgYXZhaWxhYmxlIHRvIGFsbCBpbmRpdmlkdWFscyBvZiBsZWdhbCBhZ2UsIHdobyBhcmUgbGVnYWxseSBjYXBhYmxlIG9mIGVudGVyaW5nIGludG8gY29udHJhY3RzIChiaW5kaW5nIGFncmVlbWVudHMpLiBQcm9vZiBvZgpNZWFud2hpbGUsIGluIG15IDE0IHllYXJzIG9mIG93bmluZyBwaG9uZXMsIEkgaGF2ZSBuZXZlciBvbmNlIGV2ZXIgZHJvcHBlZCBteSBwaG9uZSBpbiB3YXRlci4gCklmIEkgd2VyZSBpbnRlcmVzdGVkIGluIGxlYXJuaW5nIGhvdyB0byBjcmVhdGUgdGhpbmdzIGxpa2UgdGhpcyBmcm9tIHNjcmF0Y2gsIHdoYXQgc3ViamVjdChzKSB3b3VsZCBJIGJlIGludGVyZXN0ZWQgaW4/IFdoYXQgbWFqb3IvY2xhc3NlcyB3b3VsZCB0aGlzIGJlPyBJcyB0aGVyZSBhIGRlZ3JlZT8KT24gdGhlIG90aGVyIGhhbmQsIG15IGdpcmxmcmllbmRzIGNvbXBsaW1lbnQgbWUgYWxsIHRoZSB0aW1lLiBJdCBiZWNhdXNlIHRoZXkgd29tZW4gYW5kIHRoZXkga25vdyB0aGF0IG90aGVyIHdvbWVuIGFwcHJlY2lhdGUgdGhhdC4gU28gdHJ5IHRvIGdldCBzb21lIGdvb2QgY2xvc2UgZmVtYWxlIGZyaWVuZHMgYW5kIHRhbGsgdGhpcyBvdXQgd2l0aCB0aGVtIGJlY2F1c2UgdGhleSB3aWxsIHVuZGVyc3RhbmQgd2hhdCB5b3UgZmVlbGluZy4uIApHZXQgY3JhZnR5IGJ5IG1ha2luZyBkZWNvcmF0aW9ucyB0aGF0IHdpbGwgc2VydmUgYSBwdXJwb3NlIGluIHlvdXIgaG9tZS4gTG9vayBhcm91bmQgZm9yIGFydCBzdXBwbGllcywgc2NyYXBzIG9mIGZhYnJpYywgb3IgYW55IHNtYWxsIG9iamVjdHMgeW91IGNhbiBpbXByb3Zpc2Ugd2l0aCB0byBtYWtlIGFuIGFydCBwcm9qZWN0LiAKVGhlIFN1cHJlbWUgQ291cnQgbXVzdCBkZWNpZGUgd2hldGhlciB0byBrZWVwIENhbmFkYSdzIGN1cnJlbnQgcHJvc3RpdHV0aW9uIGxhd3MsIHRocm93IHRoZW0gb3V0LCBvciBvZmZlciBhbiBhbHRlcm5hdGl2ZS4KRmlndXJpbmcgdGhhdCBvdXQgd2FzIHN1cGVyIGhlbHBmdWwuLiAKSW5kb21pdGFibGUgdnMgRGV2YXN0YXRvciBpcyBvbmUgb2YgdGhlIGJpZ2dlc3QgZXhhbXBsZXMuIERldmFzdGF0b3IgaXNuICJoYW5kcyBkb3duIiBiZXR0ZXIuIApUaGUgQm91cnNlLCB3aGljaCBoYXMgbW9yZSB0aGFuIHR3byBkb3plbiBmb29kIHN0YWxscywgY2xhaW1zIHRocmVlIGJhcnM6IEJsdWViaXJkJ3MgbmV3ZXN0IG91dHBvc3Q7IFBoaWxseSdzIGZpcnN0IGNob2NvbGF0ZSBhbmQgd2luZSBiYXIsIGZyb20gQ2hvY29kaWVtIG9mIEVhc3RvbjsgYW5kIHRoZSBUQVBTIEZpbGwgU3RhdGlvbiwgc3BlY2lhbGl6aW5nIGluIGRyYWZ0IGV2ZXJ5dGhpbmc6IGtvbWJ1Y2hhLCBjb2NrdGFpbHMsIGJlZXIsIGNpZGVyLCBhbmQgbWVhZC4gClRoZSBzbG9nIHRvIGJ1aWxkIGEgY2FyZWVyIGluIHNvbWV0aGluZyB0aGF0IHlvdSBjYXJlIGFib3V0LCB0aGF0IGhlbHBzIHRoZSB3b3JsZCwgYW5kIHRoYXQgcGF5cyBlbm91Z2ggdG8gbGl2ZSwgaXMgdmVyeSByZWFsLgoyLiBBcm1hZ2VkZG9uIGlzIGEgZ29vZCB0aGluZyBzaW5jZSB0aGUgZnVuZGFtZW50YWxpc3QgQ2hyaXN0aWFucyB3aWxsIGdvIHRvIEhlYXZlbiAoYW5kIHRoZSByZXN0IG9mIHVzIHdpbGwgYmUsIGFzIHRoZWlyIGxpdGVyYXJ5IGdlbnJlIHN1Z2dlc3RzLCAiTGVmdCBCZWhpbmQiKQpUbyBiZSBjbGVhciAgIHRoaXMgaXMgYSBqdWRnZSBmaW5kaW5nIHRoYXQgdGhlIHRvcCBUcnVtcCBDYW1wYWlnbiBDaGllZiBsaWVkIHRvIGludmVzdGlnYXRvcnMgYWJvdXQgaGlzIGNvb3JkaW5hdGlvbiB3aXRoIGEgUnVzc2lhbiBvbGlnYXJjaC4KQmVzdCB3ZWRkaW5nIEkndmUgYmVlbiB0by4gCkN1c3RvbSBwbGF5aW5nIGNhcmRzIGFyZSBhbHNvIHBvcHVsYXIgaW4gaW5zdGFuY2VzIHdoZXJlIHRoZSBkZWNrIG9mIGNhcmRzIGlzIHB1cnBvc2VmdWxseSBmb3IgcGFsbWlzdHJ5IGFuZCBvdGhlciBzcGVjaWFsaXplZCB1c2VzLiBJdCBpcyBzYWZlIHRvIHNheSB0aGF0LCBqdXN0IGFzIHBsYXlpbmcgY2FyZHMgaW4gZ2VuZXJhbCBoYXZlIGV2b2x2ZWQgdGhyb3VnaG91dCB0aGUgY2VudHVyaWVzLCBzbyBkaWQgdGhlIGRlc2lnbnMgb2YgdGhlc2UgY2FyZHMuIFRoYW5rcyB0byBtb2Rlcm4gdGVjaG5vbG9neSwgd2UgY2FuIHBlcnNvbmFsbHkgY29udHJpYnV0ZSB0byB0aGlzIGV2b2x1dGlvbiBieSBjaG9vc2luZyB0byBjdXN0b21pemUgb3VyIG93biBjYXJkIGRlY2tzLiAKVGhlIDNyZCBoaWRkZW4gb3B0aW9uIHlvdSBzZWVtIHRvIHRoaW5rIG9ubHkgeW91IHJlY29nbml6ZWQsIGlzIGFsc28gbm90IGFsd2F5cyBhIHBvc3NpYmxlIG91dGNvbWUKUmlnaHQgbm93IHdlIGluIGEgZHJvdWdodCBhbmQgdGhlIHN1YiB2aXNpdHMgdnMgc3Vic2NyaWJlcnMgbnVtYmVycyBzaG93IHRoYXQuVGhlIHJlYXNvbiB3ZSBkaWQgaXQgd2hlbiB3ZSBkaWQgd2FzIHRvIHRyeSBhbmQgZXN0YWJsaXNoIGEgcGF0dGVybiB3aXRoIHByZXZpb3VzIHllYXJzLCB3aGVuIHdlIGhlbGQgdm90ZXMgaW4gbWlkd2ludGVyLiAKVGhlIHRpbWVzIGkgcGxheWVkIHRoZXJlIGkgYWx3YXlzIHdlbnQgZm9yIHRoZSB3ZWVrbHkgdG91cm5hbWVudHMuIApJIG1ldCBoaW0gd2hlbiBraWQgd2FzIDEgeWVhciBvbGQuIFdlIGRhdGVkIGJyaWVmbHkgYW5kIHRoZW4gc3BsaXQsIGFuZCBoZSB3ZW50IGJhY2sgdG8gb2xkIGdmIGFuZCBoYWQgYW5vdGhlciBraWQuIFRoZXkgc3BsaXQgd2hlbiBuZXcga2lkIHdhcyBhbiBpbmZhbnQsIGFuZCBoZSByZWFjaGVkIG91dCB0byBtZSB0byByZWtpbmRsZSB0aGluZ3MuIEJlY2F1c2Ugd2Ugd2VyZSBpZGlvdHMsIHdlIGhhZCBzZXggd2l0aG91dCBwcm90ZWN0aW9uIGFuZCBJIHdhcyBwcmVnbmFudCBhZnRlciBqdXN0IDIgbW9udGhzIG9mIGRhdGluZyBoaW0gYWdhaW4uIApJIGhhdmUgdHJhdmVsZWQgYWNyb3NzIHRoZSBnbG9iZSwgc3R1ZHlpbmcgdGhlIG1vc3QgZW5pZ21hdGljIGFuZCB1bmJyZWFrYWJsZSBjaXBoZXJzIGFuZCBjb2Rlcy4gCkJ1dCBpZiBGcmVkIGlzIHBsYW5uaW5nIGZvciBOaWNrIHRvIGJlIGV4ZWN1dGVkLCBhbGwgRnJlZCBuZWVkcyB0byBzYXkgaXMgdGhhdCBOaWNrIHN0b2xlIHRoZSB2ZWhpY2xlIGFuZCB0b2xkIHRoZSBIYW5kbWFpZCBzaGUgaGFkIGEgZG9jdG9yJ3MgYXBwb2ludG1lbnQgb3IgdWx0cmFzb3VuZCBzY2FuIG9yIGFueSBudW1iZXIgb2YgbGllcyB0byBnZXQgaGVyIGluIHRoZSB2ZWhpY2xlIGFuZCB0aGVuIHdvdWxkbid0IGxldCBoZXIgb3V0LiBGcmVkIGNvdWxkIGFsc28gaW52b2x2ZSBFZGVuIGluIHNwaW5uaW5nIGFub3RoZXIgZmFsc2UgbmFycmF0aXZlLiAKSWYgeW91IHJlYWQgYWxsIHRoaXMsIGdvZCBibGVzcyB5b3UgYW5kLCBhbHNvLCBwbGVhc2UgZ28gb3V0IGFuZCBnZXQgbGFpZC4gMTMgcG9pbnRzICBzdWJtaXR0ZWQgNSBkYXlzIGFnbwpZYW5nIHRhbGtlZCBhYm91dCBnaXZpbmcgJDEwMCB0byBldmVyeW9uZSB0aGF0IHRoZXkgY2FuIG9ubHkgc3BlbmQgb24gcG9saXRpY2FsIGRvbmF0aW9ucywgYW5kIGFsc28gaG93IGxvY2FsIG5ld3NwYXBlcnMgYW5kIGluIGRlcHRoIGpvdXJuYWxpc20gaXMgZ29pbmcgb3V0IG9mIGJ1c2luZXNzLgpHYW1ibGluZyBSdWxlcyBUaGUgYmFzaWMgZnJhbWV3b3JrIG9mIGVhY2ggY2FzaW5vIHRhYmxlIGdhbWUgcmVtYWlucyBlc3NlbnRpYWxseSB0aGUgc2FtZSBmcm9tIG9uZSBpc2xhbmQgdG8gYW5vdGhlciwgYnV0IHRoZSBzcGVjaWZpYyBydWxlcyB2YXJ5IGZyb20gb25lIGNhc2lubyB0byB0aGUgbmV4dC4gCkkgbWVhc3VyZWQgbXkgVERFRSBhbmQgbXkgZ29hbCB3YXMgdG8gbWVldCB0aGF0ICggNTAwIGZvciBhIGxiIGEgd2VlayAsICs1MDAgZm9yIEJGLiBJdCBicmVha3MgZXZlbikuIEFuZCBpIGZvdW5kIGJ5IGZvcmNpbmcgbXlzZWxmIHRvIGVhdCBtb3JlIG9mdGVuLCBpIGF0ZSBsZXNzIGFuZCB3YXMgbm90IEhVTkdSWS4gSSBub3cgbG9zZSAyLjUgbGJzIGEgbW9udGguIFNsb3cgc3RlYWR5LiAKQW5kIHRoZW4sIG9mIGNvdXJzZSwgdGhlcmUncyB5b3UuIENvdWxkIHlvdSBzdXJ2aXZlIGluIGEgdGltZSB3aGVyZSB0aG9zZSBnaWFudCBiZWF2ZXJzIHJvYW1lZCBXaXNjb25zaW4/IEZvciB0aGF0IG1hdHRlciwgY291bGQgeW91IHN1cnZpdmUgYSBuaWdodCBvciB0d28gaWYgeW91IG5lZWRlZCB0byBsaXZlIG9mZiB0aGUgbGFuZD8gSW52ZXN0IGluIHlvdXIgb3duIHdpbGRuZXNzIGJ5IGJvdGggY29uc3VtaW5nIGxlc3MgKHNheSBpdCB3aXRoIG1lOiByZWR1Y2UsIHJldXNlLCByZWN5Y2xlKSwgYW5kIGJ5IGxlYXJuaW5nIGJhc2ljIHdpbGRlcm5lc3Mgc3Vydml2YWwgc2tpbGxzLiAKUmVndWxhciBjYXNpbm8gY2hpcHMgYXJlIG5vdCB1c3VhbGx5IHVzZWQgYXQgYSByb3VsZXR0ZSB0YWJsZS4gSW5zdGVhZCwgd2hlbiB0aGUgcGxheWVyIHBsYWNlcyBtb25leSBvbiB0aGUgbGF5b3V0IGFuZCBhc2tzIGZvciBjaGlwcywgdGhlIGRlYWxlciB3aWxsIGdpdmUgb3V0IHNwZWNpYWwgcm91bGV0dGUgY2hpcHMuIApXaXRoaW4gdGhvc2UsIHN3aW5kbGVzIHRoYXQgdGVsbCBwZW9wbGUgdG8gcGF5IGZvciBzaXRlcyB0aGV5IGRvbiB1c2UgYXJlIGluY3JlYXNpbmcuIApMb29raW5nIGFyb3VuZCwgdGhpcyBndWlkZSBpcyBhIGdyZWF0IGdlbmVyYWwgcGxhY2UgdG8gc3RhcnQgdGhhdCBleHBsYWlucyBhIGxvdCBvZiB0aGluZ3MgdGhhdCBtYW55IG90aGVycyBqdXN0IGFzc3VtZSB5b3UgbWF5IGFscmVhZHkga25vdy4gSXQgaXNuIHNwZWNpZmljIHRvIHlvdXIgaGFyZHdhcmUsIGJ1dCBpdCBzaG91bGQgc3RpbGwgYmUgaGVscGZ1bC4KS2lsbGlubWVsYWFhYXJzIHUKSSBkbyB3YW50IHRvIGFzayBob3cgeW91IGV4cGVjdCBhbnlvbmUgdG8gcG9zc2libHkgY2hhbmdlIHlvdXIgdmlldyBvbiB0aGlzLiBGb3IgZXhhbXBsZSwgYmV0d2VlbiBhIHBlcnNvbiB3aG8gd2FudHMgdG8gc3BsaXQgYSBjYWtlIDUwLzUwIGFuZCBhbm90aGVyIHBlcnNvbiB3aG8gd2FudHMgdGhlIGNha2UgYWxsIHRvIGhpbXNlbGYsIHdvdWxkbiB0aGUgYmUgcmVjb21tZW5kaW5nIGEgMjUvNzUgc3BsaXQ/IEFuZCBpbiB0aGlzIGNhc2UgdGhpcyBpcyBjbGVhcmx5IG5vdCB0aGUgdmFzdCBtYWpvcml0eSBvZiBjb21wbGV4IGlzc3VlcyB3b3J0aCBkZWJhdGluZyBoYXZlIDIgZ2VudWluZWx5IGRlZmVuc2libGUgc3RhbmNlczsgdGhlc2UgaXNzdWVzIHdvdWxkbiBiZSB3b3J0aCBkZWJhdGluZyBvdGhlcndpc2UuIApXaGVuIEkgc2F3IHRoaXMgc2VyaWVzIG9mIHRhYmxlcyBpbiBhIHZvbHVtZSBvZiB0aGUgSm91cm5hbCBvZiB0aGUgRnJhbmtsaW4gSW5zdGl0dXRlMSBpdCBzdHJ1Y2sgbWUgdGhhdCBJIHJlYWxseSBkaWRuIHJlY2FsbCB2ZXJ5IG1hbnkgaW5zdGFuY2UgYXQgYWxsIG9mIHNlZWluZyBjaHJvbm9sb2dpY2FsIGhpc3Rvcnkgb2Ygc2NpZW5jZSAoZXRjLikgZGlzcGxheXMgb2YgaW5mbyBpbiBhbnRpcXVhcmlhbiBzY2llbnRpZmljIHRleHRzLiBUaGlzIG9uZSB3YXMgYSB0YWJ1bGFyIHByZXNlbnRhdGlvbiBvZiAzNCBtZXRhbHMsIGxpc3RlZCBhbHBoYWJldGljYWxseSwgYW5kIGxpc3RpbmcgdGhlIHllYXIgb2YgZGlzY292ZXJ5IGFuZCBkaXNjb3ZlcnkgZmlyc3QgdGhhdCB3YXMgdGhlIHVudXN1YWwgcGFydC4gSSByZWNhbGwgdGhhdCBUaG9tYXMgWW91bmcgKDE3NzMgMTgyOSkgQSBjb3Vyc2Ugb2YgbGVjdHVyZXMgb24gbmF0dXJhbCBwaGlsb3NvcGh5IGFuZCB0aGUgbWVjaGFuaWNhbCBhcnRzIGNvbnRhaW5lZCBhIHNlcmllcyBvZiB0aW1lbGluZXMgZm9yIHRoZSBkaWZmZXJlbnQgZGlzY2lwbGluZXMgKGEgc2FtcGxlIG9mIHdoaWNoIGlzIGJlbG93KSBpbmNsdWRpbmcgYW4gdW5leHBlY3RlZCBlbnRyeSBmb3Igb3B0aWNzLgpKJ2FpIGV1IHVuIGxvbmcgY2hhbmdlIGF2ZWMgbGUgZHVvIGRlcyBFdGhpY3VyaWVucywgcXVpIG9udCBtZW4gdW4gdG91ciBkZSBGcmFuY2UgIGxhIHJlbmNvbnRyZSBkZXMgYWN0ZXVycyBkdSBiaWVuIG1hbmdlciwgbW1lIHMnaWwgbidlbiByZXN0ZSBxdSd1bmUgY291cnRlIHZpZG8gIQpXaGVuIGhlIHRpbHRzLCBoZSBwbGF5cyBoaXMgQiBnYW1lIDcwJSBvZiB0aGUgdGltZSBhbmQgaGlzIEMgZ2FtZSAzMCUgb2YgdGhlIHRpbWUKQnJhY2UgaXQgd2l0aCAyIG9yIDMgY3Jvc3MgcGllY2VzIG9mIHRhcGUuIFRoaXMga2VlcHMgeW91ciBoZWVsIGZyb20gZHJvcHBpbmcgYW5kIHN0cmVzc2luZyB0aGUgdGVuZG9uLiAKSSB3YXMgbW9yZSBpbnRvIHRoZSBoZWF2eSBtZXRhbCBzY2VuZSBzbyBpdCB3ZW50IHdpdGggdGhlIGNyb3dkLiAKQW5kIHlldCBsb29zZW5pbmcgb3VyIHRpZXMgdG8gZ2VuZGVyIG1pZ2h0IG1lYW4gd2UgY2FuIG5vIGxvbmdlciByZXNwb25kIHRvIHBhdHJpYXJjaHkgd2hlbiB3ZSBzZWUgaXQuIApNeSBwb2ludCBpcywgUlQgbmVlZHMgdG8gZG8gc29tZXRoaW5nIHRvIHZhbGlkYXRlIHlvdSBhY3R1YWxseSBzYXcgdGhlIG1vdmllIGluIG9yZGVyIHRvIHNjb3JlIGl0LCBvciBzb21laG93IGJsb2NrIHRoZSBib3RzIHRoZXkgdXNpbmcgdG8gcmV2aWV3IGJvbWIgaXQuClRoZSBmYWN0IHRoYXQgREIgaXMgcHJvYWN0aXZlbHkgcmVzdHJ1Y3R1cmluZyB0aGUgbG9hbiBzaG93cyB0aGF0IHRoZSBsb2FuIHdhcyBub3Qgb25lIHRoYXQgd291bGQgYmUgc2VlbiBhcyBoYXZpbmcgdGhlIHBvdGVudGlhbCB0byBsZXZlcmFnZSBhIHByZXNpZGVudCBpbnRvIGRpdnVsZ2luZyBjbGFzc2lmaWVkIGluZm9ybWF0aW9uLiBEQiBpcyBub3QgdGhlIEtHQjsgdGhleSBoYXZlIGEgcmVwdXRhdGlvbiB0byB1cGhvbGQuLiAKVGhpcyBvbmxpbmUgcG9rZXIgcm91bGV0dGUgaXMgd29uIHdpdGggYSBtaXh0dXJlIG9mIHNraWxsIGFuZCBsYWR5IGx1Y2suLiAKV2VsbCwgTGFkeSBHYUdhIGFuZCBLYW55ZSBXZXN0IHBsYW4gdG8gdG91ciB0b2dldGhlciBzbyB5b3UgY2FuIHRyeSBjaGVja2luZyBvdXQgc29tZSBvZiBLYW55ZSdzIHN0dWZmIChpdCdzIHByZXR0eSBnb29kKS4gCkdpdWxpYW5pIHRvbGQgQ05OJ3MgIk5ldyBEYXkiIG9uIE1vbmRheSB0aGF0IE11ZWxsZXIncyB0ZWFtIGhhZCBiZWVuIHVucmVzcG9uc2l2ZSB0byB0aGVpciByZWNvbW1lbmRhdGlvbnMgZm9yIGFuIGludGVydmlldyBiZXR3ZWVuIE11ZWxsZXIgYW5kIHRoZSBQcmVzaWRlbnQgZm9yIDEwIGRheXMsIGFkZGluZyB0aGF0IGhlIGJlbGlldmVkIHRoZSBNdWVsbGVyIHRlYW0gaXMgImluIGJhZCBmYWl0aCBhYm91dCBhbiBpbnRlcnZpZXcgYXQgdGhpcyBwb2ludC4iCkFjY2VzcyB0byB0aGUgV2Vic2l0ZXMgaXMgZ292ZXJuZWQgYnkgdGhlc2UgVGVybXMgYW5kIENvbmRpdGlvbnMgdW5kZXIgdGhlIGxhd3Mgb2YgVGhlIENheW1hbiBJc2xhbmRzLiAKR3VhbmRhbyB1CkEgcXVpY2sgYmF0aHJvb20gdXBkYXRlLiBJdCBjb21pbmcgYWxvbmcsIGJ1dCBzdGlsbCBub3QgZG9uZS4gClRoaXMgdmVyZGljdCBjb21lcyBmcm9tIHRoZSBiYWNrZ3JvdW5kIG9mIE1hcnRpbiBCZWhhaW0sIHByb2JhYmx5IDI0IHllYXJzIG9sZCBhdCBhIHRpbWUsIHdobyBsYXRlciB0cmF2ZWxlZCBhbmQgc3BlbnQgdGltZSBpbiBQb3J0dWdhbCB3aGVyZSBoZSB3YXMgcG9zc2libHkgaW52b2x2ZWQgaW4gZ2VvZ3JhcGhpY2FsIGFuZCBhc3Ryb25vbWljYWwgcmVzZWFyY2ggZm9yIGtpbmcgSm9hbyBJSS4gCllvdSBtaWdodCBhbHNvIGJlIGludGVyZXN0ZWQgaW4gUG9seXZhZ2FsIHRoZW9yeS4gVGhlIG51dHNoZWxsIHZlcnNpb24gaXMgdGhhdCB0aHJvdWdoIHRoZSBzdHJlc3NlcyBvZiBtb2Rlcm4gbGlmZSAoYmlydGhzLCBkZWF0aHMsIHRyYXVtYSwgcmVwZXRpdGl2ZSAic21hbGwiIHRyYXVtYXMsIGNhciBhY2NpZGVudHMsIHNwb3J0cyBpbmp1cmllcywgcG9vciBjaGlsZGhvb2QgZXhwZXJpZW5jZXMvcmVhcmluZywgZXRjKSB0aGF0IHNvbWUgcGVvcGxlIChJIHdvdWxkIHNheSBMT1RTIG9mIHBlb3BsZSkgc3RheSBpbiBhIHN0YXRlIG9mIGNvbnN0YW50IHRlbnNpb24uIApUaGV5IHdhbnQgdG8gYnVpbGQgdGhlIGJlc3QgcG9zc2libGUgdGVhbSB0byB3aW4gb24gdGhlIHBpdGNoLiBUaGUgbWFuYWdlciBqdXN0IHRlbGxzIHRoZW0gd2hpY2ggcGxheWVycyB0aGV5IHdhbnQuIApEaWFwaHJhZ20gcmVsYXhpbmcgbWVkaWNhdGlvbiBpcyBhbHNvIGFuIG9wdGlvbiBmb3Igc29tZSBwYXRpZW50cy4gTW9yZSBpbnZhc2l2ZSB0cmVhdG1lbnRzIGluY2x1ZGUgc3RpbXVsYXRpb24gb2YgdGhlIHBoYXJ5bnggdXNpbmcgYSB0dWJlIHRocm91Z2ggdGhlIG5vc2Ugb3IgbW91dGgsIGEgZGlnaXRhbCByZWN0YWwgbWFzc2FnZSB0aGF0IG1heSBzdGltdWxhdGUgdGhlIG5lcnZlIGNvbnRyb2xsaW5nIHRoZSBnbG90dGlzLCBlbXB0eWluZyB0aGUgc3RvbWFjaCB0aHJvdWdoIGEgdHViZSBpbiB0aGUgbm9zZSwgYW5kIHN1cmdlcnkgdG8gYmxvY2sgdGhlIG5lcnZlcyB0byB0aGUgZGlhcGhyYWdtLi4gCklycmVzcGVjdGl2ZSBvZiB5b3VyIHBhcmVudHMgZmluYW5jaWFsIHNpdHVhdGlvbiBhbmQgYW5kIHlhZGEgeWFkYSwgaWYgd2hhdCB5b3Ugc2F5aW5nIGlzIHRydWUgaWUuIApCb3ggMTA5MyBNYXJpY29wYSwgQXJpem9uYSA4NTEzOSB3ZSB3b3VsZCBsaWtlIHRvIHRoYW5rIGV2ZXJ5IG9uZSB3aG8gc3VwcG9ydHMgdXMgdG8ga2VlcCBoZWxwaW5nIG90aGVycyBnb2QgYmxlc3MgeW91IGFsbC4gQnVja2V5ZSBSZC4gQXQgdGhlIGJhY2sgZ2F0ZSBvbiBNYXJpY29wYSBTdC4gCldoYXQgaXMgSHVtYW4gVHJhZmZpY2tpbmcKVGhlIFNpdGthIENoYW1iZXIgb3QgQ29tbWVyY2UgbWV0IFRodXJzZGF5IG5vb24gYXQgdGhlIFNpdGtuIElubiBmb3IgYSBkaW5uZXIgbWVldGluZy4gVGhleSBkZWNpZGVkIHRvIHdlbGNvbWUgdGhlIGxlZ2lzbGF0dXJlIDpuIGFwcHJvcHJpYXRlIHN0eWxlIGFuZCBQcmVzaWRlbnQgVGVkIEtldHRsZXNvbiBhcHBvaW50ZWQgTWF5b3IgVGhvbWFzIFRpbHNvbiwgTGVzbGllIFlhdywgTy4gCkV4dWJlcmFudCB3YXMgdGhlIHdvcmQgZm9yIHRoZSB3aWZlL2h1c2JhbmQgcGlhbm8gZHVvIG9mIEVtbWF1cyBuYXRpdmUgYW5kIHByaW5jaXBhbCBrZXlib2FyZGlzdCBvZiB0aGUgTG9zIEFuZ2VsZXMgUGhpbGhhcm1vbmljIEpvYW5uZSBQZWFyY2UgTWFydGluLCBhbmQgaGVyIGh1c2JhbmQgR2F2aW4gTWFydGluLiBUaGVpciBwZXJmb3JtYW5jZSBvZiB0aGUgUG91bGVuYyBjb25jZXJ0byB3YXMgYSBoaWdoIHdpcmUgYWN0IG9mIHBlcmZlY3RseSBzeW5jaHJvbml6ZWQganVtcHMgYW5kIGxlYXBzIHRocm91Z2ggdGhpcyBnaWRkeSByb21wIGJyaW1taW5nIHdpdGggaW5zb3VjaWFuY2UuIApXZSBhbHJlYWR5IGtub3cgZnJvbSBzZXZlcmFsIGRlbnRpc3RzIGFuZCBmcmllbmRzIG9mIGRlbnRpc3RzIGl0J3Mgbm90IGFjdHVhbGx5IHRoYXQgaGFyZCB0byBwdWxsIHRlZXRoLCBzbyBJIGZvciBzdXJlIHRoaW5rIHRoZSBraWxsZXIgaXMgYSB3b21hbi93b21lbi4gCkkgc3VwcG9zZSBpdCBhbiBpbXByb3ZlbWVudCBpbiB0aGUgc2Vuc2UgdGhhdCBpZiB5b3UgZG9uIGhhdmUgYW55IGRlZmF1bHQgZmllbGRzLCB5b3UgZG9uIGhhdmUgdG8gc3BlY2lmeSB0aGUgcmVkdW5kYW50IG5lZ2F0aXZlLiAKSSBwb3N0ZWQgdGhpcyBoZXJlIGJlY2F1c2UgSSB0aGluayB0aGlzIHNob3dzIGEgc2VyaW91cyBwcm9ibGVtIHRoYXQgd2UgYXJlIGhhdmluZyB3aXRoIGludGVncmF0aW9uIGluIENhbmFkYS4gV2UgaGF2ZSBodWdlIGluZmxvd3MgZnJvbSBjZXJ0YWluIGNvdW50cmllcyAoQ2hpbmEsIEluZGlhLCBQaGlsaXBwaW5lcyksIGFuZCB0aGUgbW9yZSBwZW9wbGUgY29tZSBmcm9tIHRoZW0gYW5kIHNlZ3JlZ2F0ZSB0aGVtc2VsdmVzIGludG8gdGhlaXIgb3duIGNvbW11bml0aWVzLCB0aGUgbGVzcyBsaWtlbHkgdGhleSBhcmUgdG8gaW50ZWdyYXRlLgpDYXNlIHlvdSBoYXZlbiBub3RpY2VkLCB0aGUgTmF0aW9uYWwgRW5xdWlyZXIgYWx3YXlzIGhhcyB0aGUgYWJzb2x1dGUganVpY2llc3QgY2VsZWJyaXR5IGdvc3NpcCBpbiBwcmludC4gClNvbWUgcmVjb21tZW5kIHVzaW5nIHRyYW5zbWlzc2lvbiBvaWwgaW5zdGVhZCBvZiBhIGJyYW5kIG9mICdlbmdpbmUgZmx1c2gnLiAuLiAKV2hhdCB0aGlzIHRlbGxzIHlvdSBpcyB0aGF0LCBvbiBhdmVyYWdlLCB5b3Ugd2lsbCB3aW4gJDg0IGV2ZXJ5IHRpbWUgeW91IGFyZSBpbiB0aGlzIHNhbWUgc2l0dWF0aW9uLiBHb29kIHBva2VyIHBsYXllcnMgbWF4aW1pemUgdGhlIHRpbWVzIHRoZXkgaGF2ZSBwb3NpdGl2ZSBFViBhbmQgbWluaW1pemUgdGhlIHRpbWVzIHRoZXkgaGF2ZSBuZWdhdGl2ZSBFVi4uIApTZW5hdG9yIEJveGVyCk1hdHRlcnMgZ2V0IGZhciBtb3JlIGRpcmUgYW5kIGNvbXBsaWNhdGVkIHdoZW4gTmluYSBkaWVzIGF0IHRoZSBzYW1lIHBsYWNlIGFuZCBpbiB0aGUgc2FtZSB3YXkgYXMgVHJ1ZHkgZGlkIHllYXJzIGFnbywgYW5kIFRodW1wcyBoYXMgdG8gZmlndXJlIG91dCBpZiB0aGUgZGVhdGhzIGFyZSBzb21laG93IGNvbm5lY3RlZCwgYW5kIHdobyBtYXkgYmUgcmVzcG9uc2libGUuCkhlbmNlLCBpdCBpcyB3aXNlIHRvIHBsYXkgcG90cyBpbiBwb3NpdGlvbiBhZ2FpbnN0IG1lZGl1bSBzaXplZCBzdGFja3Mgc2luY2UgaXQgbWFrZXMgYSBwbGF5ZXIgY29tZm9ydGFibGUgbm90IHRvIGVuZ2FnZSBpbiBsYXJnZSBwb3RzIHdpdGhvdXQgaGF2aW5nIGEgdmVyeSBzdHJvbmcgaGFuZC4gCklmIHRoZXJlIGlzIGFub3RoZXIgc3RyZXNzIG9uIHlvdXIgaW1tdW5lIHN5c3RlbSBiZSBpdCBhbm90aGVyIGluZmVjdGlvbiBvciBtYXliZSBhIHBhbmljIGF0dGFjaywgdGhlIGJhY3RlcmlhIGNhbiB0YWtlIGFkdmFudGFnZSBvZiB5b3VyIHByZW9jY3VwaWVkIGltbXVuZSBzeXN0ZW0gYW5kIGNvbWUgb3V0IG9mIGl0cyBjeXN0IGZvcm0gYW5kIGJhY2sgaW50byBhbiBhY3RpdmUgaW5mZWN0aW9uLiAKQ2FzaW5vIG1haWxpbmcgaGl0cyBib3hlcyBVUERBVEUKWWVzLCBpdCB0aGUgU3VucyBhbmQgaXQgc3RyYW5nZSB0byBsb3NlIHRvIHRoZSBTdW5zIHR3aWNlLiAKVGhpcyBoYXMgdG8gYmUgdGhlIG1vc3QgYWJzdXJkIG15dGggZXZlciBpZiB5b3UgaGF2ZSBldmVyIHBsYXllZCBwb2tlci4gCkplc3VzIGFuc3dlcmVkLCAiSGF2ZSB5b3Ugbm90IHJlYWQgdGhhdCBIZSB3aG8gY3JlYXRlZCB0aGVtIGZyb20gdGhlIGJlZ2lubmluZyBtYWRlIHRoZW0gbWFsZSBhbmQgZmVtYWxlLCBhbmQgc2FpZCwgJ0ZvciB0aGlzIHJlYXNvbiBhIG1hbiBzaGFsbCBsZWF2ZSBoaXMgZmF0aGVyIGFuZCBtb3RoZXIgYW5kIGJlIGpvaW5lZCB0byBoaXMgd2lmZSwgYW5kIHRoZSB0d28gc2hhbGwgYmVjb21lIG9uZSBmbGVzaCc/IFNvIHRoZXkgYXJlIG5vIGxvbmdlciB0d28sIGJ1dCBvbmUgZmxlc2guIFdoYXQgdGhlcmVmb3JlIEdvZCBoYXMgam9pbmVkIHRvZ2V0aGVyLCBsZXQgbm8gbWFuIHNlcGFyYXRlIiAodnYuIDQgNikuIEplc3VzIHdhcyBzYXlpbmcsICJJZiB5b3Ugd2FudCB0byBrbm93IHRoZSBhbnN3ZXIgdG8gdGhlIGRpdm9yY2UgcXVlc3Rpb24sIHRoZW4gbGV0J3MgbG9vayBhdCBHb2QncyBvcmlnaW5hbCBwbGFuIGZvciBtYXJyaWFnZS4gR2VuZXNpcyBzYXlzIG1hcnJpYWdlIGlzIG9uZSBtYW4gd2l0aCBvbmUgd29tYW4gZm9yIGEgbGlmZXRpbWUuIiBCeSBhZmZpcm1pbmcgR29kJ3Mgc3RhbmRhcmQsIEplc3VzIHdhcyBzYXlpbmcgdGhhdCBhbnkgZGV2aWF0aW9uIGZyb20gdGhhdCBzdGFuZGFyZCBub3QganVzdCBnYXkgbWFycmlhZ2UgYnV0IGFueSBkZXZpYXRpb24sIHN1Y2ggYXMgYWR1bHRlcnksIHByZW1hcml0YWwgc2V4LCBvciB1bmJpYmxpY2FsIGRpdm9yY2UgaXMgc2luIGJlY2F1c2UgaXQgZG9lc24ndCBtZWFzdXJlIHVwIHRvIHRoZSBwZXJmZWN0IHN0YW5kYXJkIG9mIEdvZC4gSmVzdXMgc2FpZCBtYXJyaWFnZSBpcyBvbmUgbWFuIHdpdGggb25lIHdvbWFuIGZvciBhIGxpZmV0aW1lLiAyIHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ28KVGhlIG5leHQgYWZ0ZXJub29uLCBpdCBzYXR1cmRheSBhbmQgc21lbGxzIHNvbWV0aGluZyBpbiB0aGUgZ2FyYWdlLiAKVGhhdCB0aGUgbGVzc29uIENvcmIgTHVuZCBoYXMgbGVhcm5lZCBsYXRlbHkuIEJ1dCByZWFsbHksIGl0IGlzbiBhcyBiYWQgYXMgaXQgc291bmRzLiAKQmVjYXVzZSB0aGUgdHlwZSBvZiB0b3hpbiBpcyBhIHBhcmFseXRpYy4gSXQgc3RvcHMgdGhlIGNoZW1pY2FsIHJlYWN0aW9uIHRoYXQgbWFrZXMgeW91ciBtdXNjbGVzIGNvbnRyYWN0LiBDaGVtaWNhbGx5IHRoZXJlIHJlYWxseSBpc24gYSB3YXkgdG8gY291bnRlciBpdC4gVGhlIHdheSBpdCBpcyBkYW5nZXJvdXMgaXMgdGhhdCBpdCBhbHNvIHBhcmFseXplcyB0aGUgbXVzY2xlcyB0aGF0IGFsbG93IHlvdSB0byBicmVhdGhlLiBCZWxpZXZlIGl0IG9yIG5vdCB0aGF0IGFjdHVhbGx5IGEgcHJldHR5IGVhc3kgcHJvYmxlbSB0byBzb2x2ZSBmb3IgYW55IGZpcnN0IHJlc3BvbmRlciwgb3Igc29tZW9uZSB3aG8gaXMgdHJhaW5lZCBpbiBob3cgdG8gZGVsaXZlciBtb3V0aCB0byBtb3V0aC4KVGhlIHRoZW4gZGlyZWN0b3IsIE5pY2hvbGFzIENvd2RlcnksIHJlamVjdGVkIHRoZSBtZW4ncyBjbGFpbXMgdGhhdCBhIGxhdGUgc3Vic3RpdHV0aW9uIGluIHRoZSBwcm9zZWN1dGlvbiB0ZWFtIGhhZCBhZmZlY3RlZCB0aGUgY2FzZSwgYnV0IGhlIGNvbmNlZGVkIGxhdGUgY2hhbmdlcyBvY2N1cnJlZCAnJ2Zyb20gdGltZSB0byB0aW1lJycgYmVjYXVzZSBvZiBmaW5hbmNpYWwgY29uc3RyYWludHMuIEpvaG4gUGFybWV0ZXIncyBsYXd5ZXIsIEpvaG4gRWxsaXMsIHNhaWQgaXQgd2FzIGRpZmZpY3VsdCB0byBzZWN1cmUgcHJvc2VjdXRpb25zIGluIGhpc3RvcmljIGNoaWxkIHNleCBhYnVzZSBjYXNlcywgYW5kICcndGhpbmdzIHdlbnQgcHJldHR5IGJhZGx5IHdyb25nJycgd2l0aCB0aGUgQnJvY2sgY2FzZS4gCkhvdyBpcyBpdCBoYXJkIHRvIHZpZXcgYW55dGhpbmc/IE1heWJlIGl0J3MgaGFyZCB0byBkZWNvcmF0ZSBidXQgdGhhdCBpc24ndCBhbGwgeW91IGRvIGluIHRoZSBvdmVyd29ybGQuIEl0J3Mgbm90IHRoYXQgaGFyZCB0byB2aWV3IGFueXRoaW5nIGFuZCBhbGwgdGhlIG1lbnUgb3B0aW9ucyBhcmUgc3RpbGwgaW4gY29sb3IuIElmIGFueXRoaW5nIHRoaXMgaXMgd2F5IGJldHRlciB0aGFuIFAyUCBrZXJmdWZmbGVzLiAKVGhlcmUgYXJlIHBlb3BsZSBvbiB0aGUgemMgZm9ydW1zIHRoYXQgYm9hc3QgYWJvdXQgZWF0aW5nIDQwMDAgY2Fsb3JpZXMgaW4gb25lIHNpdHRpbmcgYW5kIG5vdCBnYWluaW5nIChmcm9tIG15IGNhbGN1bGF0aW9ucyB0aGVpciBjYWxvcmllIGVzdGltYXRlcyBhbHdheXMgc2VlbXMgaW5hY2N1cmF0ZWx5IGhpZ2gsIGZvciBpbnN0YW5jZSAzIGxicyBvZiBtZWRpdW0gZ3JvdW5kIGJlZWYgaXMgYWJvdXQgMzQwMCBjYWwuIApTcGFjZSB3b3JrcyB3ZWxsIGFuZCBoYXMgYSBncmVhdCBmbG93Li4gCkxpa2UgNjAgaG91cnMgb2Ygd29yayBpbnRvIG9uZSBzYXZlIGFuZCBpdCBnb25lLi4gClRoZSBjbHViIGhhcyBzcGVudCAkNS4xOCBtaWxsaW9uIG9uIGltcHJvdmluZyBpdHMgQWxidXJ5IGhlYWRxdWFydGVycyBpbiB0aGUgcGFzdCBmaXZlIHllYXJzIGFuZCBvdXRsYWlkICQ0ODIsNzg2IHRvIGNoYXJpdGllcyBhbmQgc3BvcnRpbmcgYm9kaWVzLiBBdCB0aGUgY2x1YidzIHJlY2VudCBhbm51YWwgbWVldGluZyB0aGVyZSB3ZXJlIG5vIGNoYW5nZXMgdG8gdGhlIGJvYXJkIG9mIGRpcmVjdG9ycyB3aXRoIE1yIER1bmxvcCByZW1haW5pbmcgYXMgcHJlc2lkZW50LiBBIGZ1cnRoZXIgMTY5LDEzMCB2aXNpdG9ycyBhdHRlbmRlZCB0aGUgY2x1Yi4uIApRYXRhciBhbmQgU2F1ZGkgQXJhYmlhIGFyZSBjdXJyZW50bHkgZmlnaHRpbmcsIGxpa2UgYSBsb3QsIGFuZCBoYXRlIGVhY2ggb3RoZXIuCk9uZSBvZiBteSB5b3VuZ2VyIHNpc3RlcnMgSSBoYXZlbid0IHNlZW4gc2luY2Ugc2hlIHdhcyB0aHJlZSwgaGVyIGZhdGhlciB0b29rIGhlciBmYXIgYXdheSB0byBhbm90aGVyIHN0YXRlIGFuZCBzaGUgaXMgc2l4dGVlbiBub3csIEkndmUgdHJpZWQgdG8gcmVhY2ggb3V0IGJ1dCBzaGUgaGFzIGJlZW4gdG9sZCBhIGxvdCBvZiBiYWQgdGhpbmdzIGFib3V0IHVzLiBJIGhhdmUgc28gbXVjaCBwYWluIGZlZWxpbmcgbGlrZSBJIGxldCBteSBzaWJsaW5ncyBkb3duIGFuZCBjb3VsZCBub3QgcHJvdGVjdCB0aGVtLiAKWW91IGxvc2Ugc29tZSBtb25leSB0byByYWtlIGJ1dCB0aGF0cyBuZWdsaWdpYmxlLiAKVGhlIEpvdXJuYWwgb2YgSGlnaGVyIEVkdWNhdGlvbiBPdXRyZWFjaCBhbmQgRW5nYWdlbWVudCAoSkhFT0UpIGhhcyBuYW1lZCBBdWJ1cm4gVW5pdmVyc2l0eSdzIENoaXBwZXdhIFRob21hcywgRGlyZWN0b3Igb2YgdGhlIE9mZmljZSBvZiBGYWN1bHR5IEVuZ2FnZW1lbnQsIGFuZCBSYWxwaCBGb3N0ZXIsIEFzc2lzdGFudCBWaWNlIFByZXNpZGVudCBvZiBVbml2ZXJzaXR5IE91dHJlYWNoIFB1YmxpYyBTZXJ2aWNlLCBhcyBndWVzdCBlZGl0b3JzIGZvciBhIFNlcHRlbWJlciAyMDE4IHNwZWNpYWwgZWRpdGlvbiB0aXRsZWQgIlRoaXMgaXMgRW5nYWdlbWVudDogQmVzdCBQcmFjdGljZXMgaW4gQ29tbXVuaXR5IEVuZ2FnZWQgU2Nob2xhcnNoaXAuIiBUaGUgZWRpdGlvbiBmb2N1c2VzIG9uIHRoZSB0aGVtZSBhbmQgcHJvZ3JhbW1hdGljIGVsZW1lbnRzIGZyb20gdGhlIDIwMTcgRW5nYWdlbWVudCBTY2hvbGFyc2hpcCBDb25mZXJlbmNlLCB3aGljaCBBdWJ1cm4gaG9zdGVkIGluIEJpcm1pbmdoYW0gaW4gU2VwdGVtYmVyLiAKQW4gZXhhbXBsZSBvZiB0aGUgdmVyeSBjaGFybWluZyBhbmQgbm90IGVmZmVjdHVhbCBwZWVwIGludG8gdGhlIGZ1dHVyZSBhcHByb2FjaCB0byBtb2RpZnlpbmcgdGhlIE1vbnRnb2xmaWVyIGVmZm9ydCB3YXMgYnkgSmFrb2IgS2Fpc2VyZXIsIHdobyBpbiAxODAxIHB1Ymxpc2hlZCBoaXMgVWViZXIgTWVpbmUgRXJmaW5kdW5nLCBlaW5lbiBMdWZ0YmFsbG9vbiBkdXJjaCBBZGxlciB6dSByZWdpZXJlbi4gCkFtZXJpY2FucyBhbHNvIGJyb3VnaHQgaW4gdGVucyBvZiB0aG91c2FuZHMgb2YgQW1lcmFzaWFucyB0byB0aGUgVVMgd2hpbGUgdGVucyBvZiB0aG91c2FuZHMgb2YgTGFpIERhaSBIYW4gd2VyZSBsZWZ0IGZvciBhIHNoaXR0eSwgb3N0cmFjaXplZCBsaWZlIGluIFZpZXRuYW0gdGhhdCBLb3JlYW5zIG5ldmVyIGJyb3VnaHQgaW50byB0aGVpciBjb3VudHJ5Li4gCkZvYmV0IDg4IGlzIGFuIG9ubGluZSBnYW1ibGluZyB3ZWJzaXRlIHRoYXQgaXMgYmFzZWQgaW4gSW5kb25lc2lhLiBUaGlzIHBsYXRmb3JtIGhhcyBnYWluZWQgcG9wdWxhcml0eSBmb3IgYWxsb3dpbmcgZWFzeSBhbmQgc2FmZSBiZXR0aW5nIG9wcG9ydHVuaXRpZXMgb24gc3BvcnRzIGV2ZW50cywgcG9rZXIsIEp1ZGkgQm9sYSBhbmQgbW9yZSBmb3IgZW50aHVzaWFzdHMgZnJvbSBhbGwgb3ZlciB0aGUgd29ybGQuIFNhbiBGcmFuY2lzY28gaGFzIEZpc2hlcm1hbnMgV2hhcmYuIFN5ZG5leSBoYXMgdGhlIFN5ZG5leSBIYXJib3IuIEFuZCBieSBuZXh0IHllYXIsIEhvbmcgS29uZyB3aWxsIGhhdmUgVmljdG9yaWEgRG9ja3NpZGUuIFNhbiBGcmFuY2lzY28gaGFzIEZpc2hlcm1hbnMgV2hhcmYuIFN5ZG5leSBoYXMgdGhlIFN5ZG5leSBIYXJib3IuIEFuZCBieSBuZXh0IHllYXIsIEhvbmcgS29uZyB3aWxsIGhhdmUgVmljdG9yaWEgRG9ja3NpZGUuClZpdCBEIGZvciBIaWdoZXIgTGV2ZWxzIG9mIEhlYWx0aCAyMDEyClN1cHBseSBhbmQgZGVtYW5kIGlzIGFuIGFjY3VyYXRlIHdheSBvZiBleHBsYWluaW5nIHRoZSBwcmljZSBvZiBhbnkgY29tbW9kaXR5LiBNb3N0IGFyZ3VtZW50cyBJIGhlYXJkIGFyb3VuZCBoZXJlIGFnYWluc3QgaXQgYXJlIGEgbWl4IG9mIHVyYmFuIGxlZ2VuZCBhbmQgeGVub3Bob2JpYSBhdCBiZXN0LiBPbmUgY29tbW9uIGJlbGllZiBpcyBpbXByb3Zpbmcgb25lIGhvdXNlIG1hZ2ljYWxseSBtYWtlcyBhbGwgdGhlIG90aGVyIGhvdXNlcyBhcm91bmQgaXQgbW9yZSBleHBlbnNpdmUsIHRoZXJlZm9yZSB3ZSBuZWVkIGxhd3MgdG8gbWFrZSBuZWlnaGJvcmhvb2RzIHNoaXR0aWVyIHdpdGggd29yc2UgdHJhbnNwb3J0YXRpb24sIG90aGVyd2lzZSB5b3UgaGF0ZSBwb29yIHBlb3BsZS4KSW5uZXNtY2sgIDEwIHBvaW50cyAgc3VibWl0dGVkIDUgZGF5cyBhZ28KVGhlIHdob2xlIHBvaW50IG9mIFRTTSBjb21wb3NpdGlvbiB3YXMgYXZvaWRpbmcgZGlyZWN0IGZpZ2h0cyB3aGlsZSB1c2luZyBwaWNrcyB0byB0cmFuc2l0aW9uIGludG8gYW4gYWR2YW50YWdlb3VzIG1pZCBnYW1lLiAKTW9zdCBzaWduaWZpY2FudGx5IHRvIG1lLCBJIGRvbiB1bmRlcnN0YW5kIHdoeSBhIGp1ZGdlIHdvdWxkIG9yZGVyIDEwIGFwb2xvZ3kgbGV0dGVycy4gQnkgYW55IGFjY291bnQgb2YgY29udHJhY3QgbGF3IGluIE5vcnRoIEFtZXJpY2EgKGV4Y2VwdCBRdWViZWMpLCB0aGVyZSBpcyBubyBjb250cmFjdCBoZXJlLiAKVGhpcyB3aWxsIG5vdyBlbmQsIHBhcnRseS4gCkd1bnNsaW5nZXJzLCBwb2tlciBwbGF5ZXJzLCBhbmQgY2hpY2tlbnMgMjogRGVjaXNpb24gbWFraW5nIHVuZGVyIHBoeXNpY2FsIHBlcmZvcm1hbmNlIHByZXNzdXJlIGluIHN1YmVsaXRlIGF0aGxldGVzLgpFbnRpcmUgYXJndW1lbnQgYmFzaWNhbGx5IGJvaWxzIGRvd24gdG8gIkdlcm1hbnkgY291bGQgaGF2ZSB3b24gdGhlIHdhciBpZiB0aGV5IGhhZG4gYWN0ZWQgbGlrZSBOYXppIHdoaWNoIEkgbGlrZSB0byBmaWxlIGFsb25nIHNpZGUgb3RoZXIgZ3JlYXRzIGxpa2UgIkNvbnN0YW50aW5vcGxlIHdvdWxkbiBoYXZlIGZhbGxlbiBpZiBFdXJvcGVhbiBydWxlcnMgaGFkbiBhY3RlZCBzbyBzZWxmaXNobHkgaW4gYW4gZXJhIGJlZm9yZSBhIHVuaWZ5aW5nIEV1cm9wZWFuIGlkZW50aXR5IGhhZCBldmVuIGJlZ3VuIHRvIGNvYWxlc2NlIiBhbmQgIlRoZSBBbWVyaWNhbiBDaXZpbCBXYXIgd2FzIGZvdWdodCBvdmVyIFN0YXRlcyBSaWdodHMuIgpJZiB5b3Ugb3duIGEgYnVzaW5lc3MgdGhhdCBuZWVkcyByb29tIHRvIGV4cGFuZCBpbiB0aGUgbmVhciBmdXR1cmUsIGl0IGEgZ3JlYXQgdGltZSB0byBiZSBhIHRlbmFudCBpbiBMb25kb24uCkFmdGVyIG1lIGFuZCB0aGUgYmYgYnJva2UgdXAsIGhlIHRvbGQgbWUgdGhhdCB3aGVuIGhlIHRvbGQgaGlzIGJyb3RoZXIgd2UgaGFkIGJyb2tlbiB1cCwgdGhlIGJyb3RoZXIgc2FpZCBoZSBoYWQgYSBjcnVzaCBvbiBtZSBhbmQgdXNlIHRvIHJlbnQgQXNpYW4gcG9ybiBhbmQgcHJldGVuZCBpdCBtZS4gSSB3b3VsZCBuZXZlciBkYXRlIGFuIGV4IGJyb3RoZXIgc28gd2UgbmV2ZXIgdGFsa2VkIGFmdGVyd2FyZHMgYnV0IEkgd2FzIGFsd2F5cyBmbGF0dGVyZWQgYnkgdGhhdC4gCkluIHRyYWluaW5nIHdlIHdlcmUgcHJhY3RpY2luZyBhbiBhdHRhY2sgb2ZmIGEgbGluZW91dCwgSSB3YXMgcnVubmluZyBkdW1teSBhbmQgc3dhcHBpbmcgb3ZlciB0byB0aGUgb3RoZXIgc2lkZSBvZiB0aGUgZmllbGQgYXMgcGFydCBvZiBhIHBvZCwgYnV0IGl0IGFsbCB3ZW50IHRvIGhlbGwgaW4gYSBoYW5kYmFza2V0IGFzIHRoaW5ncyBmbG93ZWQgb3JnYW5pY2FsbHkuClllcywgYXMgaW5kaXZpZHVhbHMsIGFuZCBvbiBhbiBpbmRpdmlkdWFsaXN0aWMgYmFzaXMsIHdlIGNhbiBiZSBiZWF1dGlmdWwgY3JlYXR1cmVzLCBidXQgIm5hdHVyZSIgaXMgZGVzaWduZWQgaW4gYSB3YXkgdG8gbm90IGZhdm9yIG91ciB2aXJ0dWVzLCBpdCBpcyBtYWRlIHRvIHJld2FyZCBvdXIgaW1tb3JhbCBiZWhhdmlvcnMuIApJIHN1cmUgeW91IGJlIGFibGUgdG8gZmluZCBhIGxvdCBvZiBvcHRpb25zLi4gCkluIHRoZSBraW5kZXN0IGFuZCBtb3N0IG5vbiBqdWRnbWVudGFsIHdheSBwb3NzaWJsZSwgSSdtIGRldGVjdGluZyBlbnRpdGxlbWVudCwgZm9yY2VkIGludGVncmF0aW9uLCBhbmQgdGhlIGludmFzaW9uIG9mIHRyYWRpdGlvbmFsbHkgbWFsZSBzcGFjZXMuIEkgdW5kZXJzdGFuZCB0aGF0IHdlIGFyZSBpbiB0aGUgMjFzdCBjZW50dXJ5IGFuZCBhcyBhIHJlc3VsdCBmb3J3YXJkIHByb2dyZXNzIGlzIG5lY2Vzc2FyeS4gTW9kZXJuIHdvbWVuIGNvbnNpc3RlbnRseSBzcGVhayBhYm91dCBzYWZlIHNwYWNlcyBmb3IgZmVtYWxlcy4gCkknbSBwbGFubmluZyB0byBib29rIGEgcm9vbSBpbiB1ciBob3RlbCBmcm9tIHRoZSAyNHRoIHRvIDI4dGggb2Ygb2N0IDIwMTkgYnV0IG5vdyBJJ20gaGF2aW5nIG15IGRvdWJ0cyBhcyBJIHNlZSBpbiBtYW55IHJldmlld3MgdGhlIGd1ZXN0IGFyZW4ndCBoYXBweSBjb3ogb2Ygc3VtIHJlbm92YXRpb25zIGdvaW5nIG9uIGluIHRoZSBob3RlbCAsIGNhbiB1IHBsZWFzZSBsZXQgdXMga25vdyB0aWxsIHdoZW4gd2lsbCB0aGUgcmVub3ZhdGlvbiBnbyBvbiB0aWxsIGFuZCB3aWxsIGl0IGJvdGhlciBvdXIgc3RheWluZyAuIFRoYW5rIHlvdS4gCkVsVmF0b01hc2NhcmFkbyAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxMCBtb250aHMgYWdvClE6IFdoYXQgaXMgYSBUb3AgQ29tbWVudGVyIGFuZCBob3cgZG8gSSBiZWNvbWUgb25lPwpUdXBwZXIsIEhhcm9sZCBWZWF0Y2gsIFJldi4gCllvdSBtYXkgcmVhbGl6ZSB0aGF0IHlvdSBhcmUgbWlzY291bnRpbmcgYW5kIHlvdSBhY3R1YWxseSBqdXN0IG1haW50YWluaW5nIHJpZ2h0IG5vdywgdGhhdCBvayBhbmQgeW91IGNhbiBmaXggaXQuLiAKTW9yZSBvZnRlbiB0aGFuIG5vdCB0aGlzIGxlYWRzIHRvIG1lIE5PVCBkeWluZyBidXQgbm90IGdldHRpbmcgdGhlIGZhcm0gSSB3YW50LCB3aGlsZSBteSB0ZWFtIGFsc28gZ2V0cyByZWt0IGluIG90aGVyIGxhbmVzLiAKUG9zdGVkIGJ5IFhNTGljaW91cyBhdCAyOjE0IFBNIG9uIEp1bHkgMjgsIDIwMDgKKE1vcmUgb24gdGhhdCBiZWxvdy4pIFRoZSBuZXdlc3QgcHJvZ3JhbSBpcyBjYWxsZWQgdGhlICJBTkEgQ2VudGVyIGZvciBCcmFuZCBQdXJwb3NlLCIgd2hpY2ggTGlvZGljZSBzYXlzIHdpbGwgbGF1bmNoIG5leHQgbW9udGguICJQdXJwb3NlIiBpcyBhIHdlbGwgd29ybiBwaHJhc2UgYXQgQU5BIGNvbmZlcmVuY2VzLCByZWZlcnJpbmcgdG8gYnJhbmRzIHRoYXQgdXNlIHRoZWlyIG1hcmtldGluZyB0byBwbHVnIHNvbWUgc29ydCBvZiBzb2NpYWwgaXNzdWUuIApJIHNlZSBpZiBJIGNhbiBmaW5kIGFuIGV4YW1wbGUgb2YgdHdvIGd1eXMgc2lnbmluZyBleGNsdXNpdmUgdGFncyBhdCB0aGUgc2FtZSBwb3NpdGlvbi5FZGl0IDI6IEl0IGRvZXMgbm90IGxvb2sgbGlrZSB0aGVyZSBldmVyIGJlZW4gYSBjYXNlIHdoZXJlIHR3byBwbGF5ZXJzIGF0IHRoZSBzYW1lIHBvc2l0aW9uIGhhdmUgd291bmQgdXAgcGxheWluZyBvbiBleGNsdXNpdmUgdGFncyBpbiB0aGUgc2FtZSB5ZWFyLlRoZSBsYW5ndWFnZSBmb3IgdGhlIGV4Y2x1c2l2ZSB0YWcgc2F5cyB0aGF0IHRoZSBzYWxhcnkgaXMgc2V0IGJhc2VkIG9uIHRoZSB0b3AgNSBzYWxhcmllcyBhIGZldyB3ZWVrcyBpbnRvIGZyZWUgYWdlbmN5IChlYXJseSBhcHJpbCksIGJ1dCB0aGUgdGFnIGhhcyB0byBiZSB0ZW5kZXJlZCBiZWZvcmUgZnJlZSBhZ2VuY3kgc3RhcnRzIChtaWQgbWFyY2gpLiBJIGNhbiBpbWFnaW5lIHRoYXQgdGhlIE5GTCB3b3VsZCBhbGxvdyBmb3IgYSBzaXR1YXRpb24gd2hlcmUgYSBwbGF5ZXIgd291bGQgZ2V0IHBhaWQgbGVzcyB0aGUgZWFybGllciB0aGV5IGNob3NlIHRvIHNpZ24gdGhlaXIgY29udHJhY3QsIHNvIHRoZXJlIG11c3QgYmUgbGFuZ3VhZ2UgdGhhdCBzYXlzIHRhZyBzYWxhcmllcyBhcmVuIGluY2x1ZGVkIGluIHRoZSBjYWxjdWxhdGlvbi4uIApQYXJ0bHkgYmVjYXVzZSBJIGNhbiBtYWtlIHVwIG15IG1pbmQgd2hhdCBuZXcgdG8gd2F0Y2gsIHBhcnRseSBiZWNhdXNlIEkgd291bGQgbGlrZSB0byB3YXRjaCBzb21lIG9mIHRoZSBvbiBhaXIgZHJhbWFzLCBidXQgSSB3YW50IHRvIHdhaXQgdW50aWwgdGhleSBjYW4gYmUgYmluZ2VkLCBwYXJ0bHkgYmVjYXVzZSBWaWtpIGRvZXNuIGhhdmUgd2hhdCBJIHdhbnQgdG8gd2F0Y2gsIGFuZCBvZiBjb3Vyc2U6IEJlY2F1c2UgRmVlbCBnb29kIHRvIGRpZSB3YXMgc28gZnVuIEkgd2FudCB0byBlbmpveSB0aGUgam9rZXMgb25jZSBhZ2Fpbi4uIApUaGVzZSBkZWNvcmF0aW9ucyB3aWxsIGFsc28gZmVlbCB5b3UgbW9yZSByZWFsLCBtb3JlIGF1dGhlbnRpYyBhbmQgYWxsdXJpbmcgdG8geW91ciBlbXBsb3llZXMuIEFuZCByZW1pbmQgb25lIHRoaW5nLCB3aGVuIHlvdSBjYXJlIGZvciB5b3VyIGVtcGxveWVlcywgdGhleSBjYXJlIGZvciB5b3UgYXMgd2VsbC4uIApNaW50IHBva2VyIHJvb20gaW4gV2Vic3RlciB3YXMgY2hhcmdpbmcgYSAxMCBvciAxNSBkb29yIGZlZSB3aXRoIDEwIGRvbGxhciBhbiBob3VyIHNlYXQgcmVudGFsLiAKSGUgd2lsbCBiZSBzdXBwb3J0ZWQgYnkgSGVhbHksIFN0YXJrIE5ha2VkIGFuZCBvdGhlciBESiBqdXN0IHRvIG5hbWUgYSBmZXcuIFRoZXJlIGlzIGZyZWUgZW50cnkgYmVmb3JlIDhwbSB3aXRoIGEgJDIwIGVudHJ5IGZyb20gOHBtIHRvIDNhbS4gCiJUaGFuayB5b3UhIEZvciBraWxsaW5nIHRoZSBwdWJsaWMgb3B0aW9uIGFuZCBibG9ja2luZyBhbnkgaG9wZXMgb2YgaXRzIGFkb3B0aW9uLCB0aGFuayB5b3Ugc2lyLiBXaGVuIE9seW1waWEgU25vd2Ugc2FpZCBubywgaXQgY3JvYWtlZCwgcmlnaHQ/IE5vIHRoZSBvcHRpb24gbm90IGRlYWQsIG9yIHJlZC4gVGhlIG9wdGlvbiwgdGhlIG9wdGlvbiwgdGhlIHB1YmxpYyB3YW50cyBvcHRpb25zISBXaXRob3V0IGl0LCBpdCBhIGNvcnBvcmF0ZSBnaXZlIGF3YXkuIkxpa2UgdGhlIFllcyBNZW4gb3IgQmlsbGlvbmFpcmVzIGZvciBCdXNoIG9yIHRoZSBtYW55IGdyb3VwcyBvZiBhY3RpdmlzdHMgd2hvIGtlZXAgcG9pbnRpbmcgb3V0IHRoZSBhYnN1cmRpdHkgb2YgYSBzeXN0ZW0gdGhhdCBtYWtlcyBtb3N0IG9mIHVzIHdvcnNlIG9mZiBhbmQgYSBzbWFsbCBudW1iZXIgb2YgdXMgbXVjaCBiZXR0ZXIgb2ZmLCB0aGUgQmlsbGlvbmFpcmVzIGZvciBXZWFsdGhjYXJlIGJlbGlldmUgdGhhdCB0b21vcnJvdyByZWFsbHkgY2FuIGJlIGEgYmV0dGVyIGRheS4gCkkgaGFkIGEgZmV2ZXIgYW5kIHRoZSBpbmZlY3Rpb24gaGFkIHNwcmVhZCB0byBteSBseW1waCBub2Rlcy4gCkkgd2FzIGluIGhpZ2ggc2Nob29sIHdoZW4gdGhhdCBtb3ZpZSBjYW1lIG91dCBhbmQgSSBzYXcgaXQuIEkgaGFkbid0IGJlZW4gZXhwb3NlZCB0byBtZW50YWwgaWxsbmVzcyB0b28gbXVjaCBieSB0aGF0IHBvaW50IGluIG15IGxpZmUgYW5kIG15IHBlcmNlcHRpb24gb2Ygd2hhdCB0aGUgbW92aWUgd2FzIGdvaW5nIHRvIGJlIGFib3V0IHdhcyBtb3JlIGFib3V0IGEgZ2VuaXVzIHdobyBlbmRlZCB1cCBkZWFsaW5nIHdpdGggc29tZSBzcHkgc3R1ZmYgYW5kIGdvdCBpbiBvdmVyIGhpcyBoZWFkLiBJIGJlbGlldmUgSSBhbHNvIGtuZXcgdGhhdCB0aGUgbW92aWUgd2FzICJiYXNlZCBvbiBhIHRydWUgc3RvcnkiLiAKSSBoYWQgc3VpY2lkYWwgdGhvdWdodHMgYmVjYXVzZSBJIGp1c3QgY291bGRuIGhhbmRsZSBpdCBhbnkgbW9yZS4gCjEyIHBvaW50cyAgc3VibWl0dGVkIDE4IGRheXMgYWdvCkRyb2l0IGNvbnN0aXR1dGlvbm5lbApBY29zdGEgZ2F2ZSBFcHN0ZWluIHRoZSBwbGVhIGRlYWwgb2YgaGlzIGxpZmU6IEhlIHdhcyBmb3VuZCBndWlsdHkgb2Ygb25lIGNoYXJnZSBvZiBzZXggd2l0aCBhIG1pbm9yKGluIHNwaXRlIG9mIGJlaW5nIGFjY3VzZWQgYnkgZG96ZW5zIG9mIGdpcmxzKSBhbmQgaGFkIHRvIHJlZ2lzdGVyIGFzIGEgc2V4IG9mZmVuZGVyCk1hcmtldCBwcmljZSBjYW4gYmUgaW4gc29jaWFsIGdvb2RzIG9yIGJlaW5nIGdvb2QgbG9va2luZywgbm90IGNhc2ggLiAKQWN0dWFsbHkgYmV0dGVyIHB1dCB0aGUgY2hhbXBhZ25lIGF3YXkgYW5kIGJyZWFrIG91dCB0aGUgd2F0ZXIgICB0aGUgZnJlZSBraW5kIG91dCBvZiB0aGUgdGFwIGJlY2F1c2UgYmVsaWV2ZSBtZSwgb24gYSBXYWwgTWFydCBzYWxhcnksIHdlIGNhbm5vdCBhZmZvcmQgdG8gZHJpbmsgYm90dGxlZCB3YXRlci4gCiJDaGluYSBuZWVkcyB0aGUgYWlycGxhbmVzIGZvciBncm93dGgsIiBoZSBzYWlkLiBqb2JzIGdlbmVyYXRvci4iCllvdSBjYW4gc2tpcCBzdHJhaWdodCB0byBhIGZ1bGwgaGVhcmluZyB3aXRob3V0IGdvaW5nIHRocm91Z2ggdGhlIHNjcmVlbmluZyBwcm9jZXNzIGZpcnN0Li4gCk1haW5seSwgbXkgYnJvdGhlcnMgYmxldyBpdCBvdXQgb2YgcHJvcG9ydGlvbiwgaW4gbXkgaGVhZC4gCkkgY2FuIHByYWN0aWNhbGx5IHR1cm4gbXkgcG9rZXIgY2FsY3VsYXRvciBvZmYgd2hlbiBJIGZpbmQgbXlzZWxmIGluIGEgdG91cm5hbWVudCBzaG9ydCBzdGFja2VkLiBZb3UgYXJlIGp1c3Qgbm90IGdvaW5nIHRvIGdldCBwb3Qgb2RkcyB3aGVuIHlvdSBuZWVkIGl0LCBidXQgeW91IGNhbid0IHdhaXQgdW50aWwgYmVjb21pbmcgc28gc2hvcnQgdGhhdCAzIG90aGVyIHBsYXllcnMgd2lsbCBmaW5kIGl0IGVhc3kgdG8gY2FsbCB5b3UuIFlvdSBuZWVkIHRvIGdldCBoZWFkcyB1cCwgaG9waW5nIHRvIGRvdWJsZSB1cC4gCkdyYWIgc29tZSBmcmllbmRzIG9yIGZhbWlseSBtZW1iZXJzIHRvIHBsYXkgY2xhc3NpYyBib2FyZCBnYW1lcyBsaWtlIE1vbm9wb2x5LCBDYW5keSBMYW5kLCBvciBQaWN0aW9uYXJ5LiBDaGFsbGVuZ2UgcGVvcGxlIHRvIGEgY29tcGxleCBnYW1lIG9mIFNldHRsZXJzIG9mIENhdGFuIG9yIFNjcmFiYmxlLgoyOCBsZXR0ZXIgcHVibGlzaGVkIGJ5IHRoZSBNaW5uZWFwb2xpcyBiYXNlZCB0ZWxldmlzaW9uIHN0YXRpb24uIFBhdHRlcnNvbiB3YXMgY2hhcmdlZCBpbiBGZWJydWFyeSB3aXRoIG11cmRlciBmb3IgdGhlIE9jdC4gVGhleSB3ZXJlIHRoZSBsYXRlc3QgZ3JvdXAgdG8gc3VycmVuZGVyIGZyb20gdGhlIGJlc2llZ2VkIGZpbmFsIHBvY2tldCBvZiBTeXJpYW4gdGVycml0b3J5IGhlbGQgYnkgdGhlIG1pbGl0YW50IGdyb3VwLiBXaWxsaWFtIE1jTGVvZCwgYSA0dGggZ3JhZGUgc3R1ZGVudCBhdCBWYWxsZXkgVmlldyBFbGVtZW50YXJ5IFNjaG9vbCBpbiBCb3VudGlmdWwsIFV0YWgsIHRvbGQgS1NUVSB0aGF0IHdoZW4gaGUgYXJyaXZlZCBhdCBzY2hvb2wgb24gQXNoIFdlZG5lc2RheSwgaGUgd2FzIHRoZSBvbmx5IHN0dWRlbnQgd2VhcmluZyBhbiBhc2ggY3Jvc3MsIGEgc3ltYm9sIHdoaWNoIGRlc2lnbmF0ZXMgdGhlIHN0YXJ0IG9mIHRoZSBMZW50ZW4gc2Vhc29uLCBvbiBoaXMgZm9yZWhlYWQuIApZb3UgYXJlIHJvdWdobHkgMzYlIHRvIGhpdCB5b3VyIGhhbmQgaWYgeW91IHNlZSBib3RoIHRoZSB0dXJuIGFuZCByaXZlci4gCkkgc2ltcGx5IGdvdCBzaWNrIG9mIHBlcmZvcm1pbmcgZm9yIGRydW5rIHBlb3BsZSB3aG8gdGhvdWdodCBqdXN0IGJlY2F1c2UgeW91IHdlcmUgdGhlcmUgYXMgYW4gZW50ZXJ0YWluZXIsIHRoZXkgc29tZWhvdyBoYWQgYSByaWdodCB0byBwdXQgdGhlaXIgaGFuZHMgb24geW91IHRvIHNlZSBob3cgeW91IGRpZCBzb21ldGhpbmcuIApCdXJlYXUgb2YgTGFib3IgU3RhdGlzdGljcyBwcmVkaWN0cyB0aGUgZXZlbnQgaW5kdXN0cnkgd2lsbCBncm93IGJ5IDQ0IHBlcmNlbnQgZnJvbSAyMDEwIHVudGlsIDIwMjAsIGFuZCBmb3IgZ29vZCByZWFzb246IDk4IHBlcmNlbnQgb2YgY29uc3VtZXJzIHNheSB0aGV5J3JlIG1vcmUgbGlrZWx5IHRvIGJ1eSBhIHByb2R1Y3QgYWZ0ZXIgYXR0ZW5kaW5nIGFuIGFjdGl2YXRpb24uIFdoZXRoZXIgYSBjb21wYW55IGxpdmVzIG9ubGluZSwgaW4gYnJpY2sgYW5kIG1vcnRhciBvciBzb21ld2hlcmUgaW4gYmV0d2VlbiwgaW4gcGVyc29uIGV2ZW50cyBjYXJyeSB0aGUgcG90ZW50aWFsIHRvIGxlYXZlIGEgbGFzdGluZyBpbXByZXNzaW9uIG9uIGN1c3RvbWVycywgd2hvc2UgYXR0ZW50aW9uIGhhcyBiZWNvbWUgYSB0cnVlIGNvbW1vZGl0eS4gQnV0IGl0J3Mgbm90IGp1c3QgYWJvdXQgdGhyb3dpbmcgYSBncmVhdCBwYXJ0eSBhbnltb3JlLiAKSSBtZWFuIGhlIGRpZCB0aGlzIHRvIHJlbGl2ZSBoaXMgaGlnaHNjaG9vbCBmYW50YXN5LCBzb21ldGhpbmcgaGUgbmV2ZXIgaGVhZC4gVGhlcmUgc28gbWFueSBtZWFuaW5nZnVsIHRoaW5ncyB0byBiZSBoYWQgaGVyZS4gQnV0LCBubywgdGhleSByYW4gaW50byBzb21lb25lIGFuZCBub3cgaGF2ZSB0byBsaWUgYXdrd2FyZGx5IHRvIGdldCBvdXQgb2YgdGhlIHNpdHVhdGlvbiBhZ2Fpbi4uIApEZXZhc3RhdGVkIGFzIHdlbGwgYXJlIGhpcyBncmFuZHBhcmVudHMuIApBLiBGcmVpdGFnLCBEZWwgeyBiZXJ0IEdyb2RpdmFudCwgR2VvcmdlIFdyaWdodCwgSmFtZXMgS2VzdG9sLCBJdmFyIExlZSwgSmFtZXMgTWNHb3duLiAKWWVzLiBDcmVhdGUgbWFueSBteXNwYWNlIGFjY291bnRzIGFuZCBhdHRhY2sgeW91cnNlbGYgcmVwZWF0ZWRseS4gVGhpcyB3aWxsIGNhdXNlIHlvdXIgZXhwZXJpZW5jZSBwb2ludHMgdG8gcmlzZSBtdWNoIGZhc3Rlci4gCkl0IGFwcGxpZXMgdG8gd2F0ZXJtYXJrcyBvbiBpbWFnZXMgYXMgd2VsbC4gCklmIHRoZSBVbml2ZXJzaXR5IG9mZmVycyB5b3UgYSBwbGFjZSBhbmQgeW91IGRlY2lkZSB0byBhY2NlcHQgdGhpcyBvZmZlciwgYSBjb250cmFjdCB3aWxsIGJlIGZvcm1lZCBiZXR3ZWVuIHlvdSBhbmQgdGhlIFVuaXZlcnNpdHkuIFlvdXIgcmlnaHRzIGFuZCBvYmxpZ2F0aW9ucyB0byB0aGUgVW5pdmVyc2l0eSBhbmQgdGhlIFVuaXZlcnNpdHkgb2JsaWdhdGlvbnMgdG8geW91IGFyaXNpbmcgdW5kZXIgdGhhdCBjb250cmFjdCB3aWxsIGJlIHNldCBvdXQgaW4gdGhlIGRvY3VtZW50cyBsaXN0ZWQgYmVsb3csIGFuZCB0aGVzZSB3aWxsIGZvcm0gdGhlIHRlcm1zIGFuZCBjb25kaXRpb25zIG9mIHlvdXIgc3R1ZGVudCBjb250cmFjdC4gVGhlIGRvY3VtZW50cyBpbmNsdWRlOi4gCkV2ZW4gaWYgaGUgcG90cyBldmVyeSBzdHJlZXQgeW91IG9ubHkgbmVlZCB0byBiZSByaWdodCAzMyUgb2YgdGhlIHRpbWUgZm9yIHRoYXQgdG8gYmUgYSBwcm9maXRhYmxlIGNhbGwuIFNvIGlmIHlvdSBsb3NlIDY2JSB0aGF0IHJlYWxseSBub3QgYmFkIGFuZCA2NiUgaXMgdGhlIG1ham9yaXR5IG9mIHRoZSB0aW1lKHRvIHNpbXBsaWZ5IHdoZW4geW91IGNhbGwgeW91IHN1cHBvc2VkIHRvIGxvc2UgbW9yZSB0aGFuIHlvdSB3aW4pLi4gClRvIHBsYXkgb25saW5lIHBva2VyIDcgQ2FyZCBTdHVkIEhpIExvIHlvdSBoYXZlIHRvIGJlIHRlY2huaWNhbGx5IGdvb2QgYXQgcG9rZXIgYW5kIG51bWJlcnMuIAoxMSkgUHJpb3IgdG8gbGlnYW1lbnQgdmlzaWJsZSBydXB0dXJlIG9yIG1lY2hhbmljYWwgZmFpbHVyZSwgdGhlcmUgaXMgYW4gYW5vbWFsb3VzIGZpYmVyIHJlYWxpZ25tZW50LCB3aGljaCBtYXkgYmUgdXNlZCBhcyBhIG1hcmtlciBmb3Igc3ViZmFpbHVyZSBjYXBzdWxlIGluanVyeS4KV2lsbGlhbSAiQmlsbCIgUmF5bW9uZCBCRUFOClRob3VnaCBiZWdpbm5pbmcgYXQgYSBzbG93ZXIgcGFjZSwgdGhlIHdvcmsgbW92ZXMgYSBsaXR0bGUgZmFzdGVyIGFzIHRoZSBwcmFjdGl0aW9uZXIgcHJvY2VlZHMuIApTaGFuZXIzOCB1CkxhcHRvcHMgdGhhdCBoYXZlIHRoZSBiZXN0IGJhdHRlcnkgbGlmZQpQbGVkZ2UgYWxsZWdpYW5jZSB0byB0aGUgRmxhZyBvZiB0aGUgVW5pdGVkIFN0YXRlcyBvZiBBbWVyaWNhLCBhbmQgdG8gdGhlIFJlcHVibGljIGZvciB3aGljaCBpdCBzdGFuZHMsIG9uZSBuYXRpb24sIHVuZGVyIEdvZCwgaW5kaXZpc2libGUsIHdpdGggbGliZXJ0eSBhbmQganVzdGljZSBmb3IgYWxsLiBXb3JkcyAidW5kZXIgR29kIiB3ZXJlIGFkZGVkIGFmdGVyIGRpbGlnZW50IHByb3NlY3V0aW9uIG9mIHJlbGlnaW91cyBhbmQgcG9saXRpY2FsIGludGVyZXN0cyBieSB0aGUgUm9tYW4gQ2F0aG9saWMgb3JnYW5pemF0aW9uLCB0aGUgS25pZ2h0cyBvZiBDb2x1bWJ1cywgdG8gaGVscCBmaWdodCB0aGUgQ29tbXVuaXN0cy4gVGhlIGNoYW5nZSB3YXMgYXBwcm92ZWQgb24gRmxhZyBEYXksIEp1bmUgMTQsIDE5NTQsIGF0IHdoaWNoIHRpbWUgUHJlc2lkZW50IER3aWdodCBFaXNlbmhvd2VyIHJlbWFya2VkOiAiSW4gdGhpcyB3YXkgd2UgYXJlIHJlYWZmaXJtaW5nIHRoZSB0cmFuc2NlbmRlbmNlIG9mIHJlbGlnaW91cyBmYWl0aCBpbiBBbWVyaWNhIGhlcml0YWdlIGFuZCBmdXR1cmU7IGluIHRoaXMgd2F5IHdlIHNoYWxsIGNvbnN0YW50bHkgc3RyZW5ndGhlbiB0aG9zZSBzcGlyaXR1YWwgd2VhcG9ucyB3aGljaCBmb3JldmVyIHdpbGwgYmUgb3VyIGNvdW50cnkgbW9zdCBwb3dlcmZ1bCByZXNvdXJjZSBpbiBwZWFjZSBhbmQgd2FyLiIuIApJbiBPY3RvYmVyIDIwMTcsIGFzIHRoZSBNZVRvbyBtb3ZlbWVudCBzcHVycmVkIGEgbmF0aW9uYWwgY29udmVyc2F0aW9uIGFib3V0IHRoZSBzZXh1YWwgaGFyYXNzbWVudCBhbmQgYWJ1c2Ugb2Ygd29tZW4sIHRoZSBNaWFtaSBIZXJhbGQgaGFkIGFscmVhZHkgYmVndW4gZXhhbWluaW5nIHRoZSBKZWZmcmV5IEVwc3RlaW4gY2FzZS4gQXR0b3JuZXkgQWxleGFuZGVyIEFjb3N0YSB0byBQcmVzaWRlbnQgVHJ1bXAncyBDYWJpbmV0IGluIEZlYnJ1YXJ5IG9mIHRoYXQgeWVhciwgdGhlIEhlcmFsZCBiZWdhbiB0byB0YWtlIGEgY2xvc2VyIGxvb2sgYXQgd2hhdCByb2xlIEFjb3N0YSBwbGF5ZWQgaW4gaGVscGluZyBvcmNoZXN0cmF0ZSBhIHNlY3JldCBwbGVhIGJhcmdhaW4gdGhhdCBwcm9zZWN1dG9ycyBzdHJ1Y2sgd2l0aCBFcHN0ZWluIGluIDIwMDcsIGFuZCBmaW5hbGl6ZWQgaW4gMjAwOC4KQ29ycG9yYXRlIHRheCBjdXRzIGluIHRoZSBVbml0ZWQgU3RhdGVzIGhhdmUgc2F2ZWQgc29tZSBvZiBDYW5hZGEgYmlnIGJhbmtzIGh1bmRyZWRzIG9mIG1pbGxpb25zIG9mIGRvbGxhcnMgaW4gdGhlIGZpcnN0IGZ1bGwgeWVhciBzaW5jZSB0aGV5IHdlcmUgaW50cm9kdWNlZC4gdGF4ZXMgaGFkIGJlZW4gdGhlIHpvbmUgb2YgVVMkMTAwIG1pbGxpb24gaW4gaW5jcmVtZW50YWwgaW5jb21lIGZvciBpdHMgZmlzY2FsIDIwMTgsIHdoaWNoIGVuZGVkIE9jdC4gMzEsIDIwMTgsIGFzIHdlbGwgYXMgbGl0dGxlIHVuZGVyIFVTJDMwIG1pbGxpb24gZm9yIHRoZSBiYW5rIGZpcnN0IHF1YXJ0ZXIgb2YgMjAxOSwgd2hpY2ggY292ZXJlZCB0aGUgdGhyZWUgbW9udGhzIGVuZGVkIEphbi4gMzEuIHRheCByZWZvcm0uIGRvbGxhcnMsIHNhaWQgUmlheiBBaG1lZCwgVEQgY2hpZWYgZmluYW5jaWFsIG9mZmljZXIsIGluIGEgcGhvbmUgaW50ZXJ2aWV3LgpBdXRyZSBpbGx1c3RyYXRpb24gZGUgbW9uIHByb3Bvcy4gRHMgbCdnZSBsZSBwbHVzIHRlbmRyZSwgbGV2IGNvbW1lIHRvdXMgbGVzIGVuZmFudHMgZCdtaWdycyBydXNzZXMgZGFucyBsZSBjdWx0ZSBkZSBsJ2FtaXRpIGZyYW5jbyBydXNzZSwgaidhaSBjcnUgZHVyIGNvbW1lIGZlciBhdXggbGllbnMgcGFydGljdWxpZXJzIHF1aSB1bmlzc2FpZW50IG1vbiBwYXlzIGV0IGNlbHVpIGRlIG1lcyBhbmN0cmVzLiBKdXNxdScgdW5lIGRhdGUgcmNlbnRlLCBqZSByb21wYWlzIGRlcyBsYW5jZXMgcGFzc2lvbm5lcyBlbiBmYXZldXIgZGUgbCdhbGxpYW5jZSBlbnRyZSBsYSBSdXNzaWUgZXQgbGEgRnJhbmNlLCBsJ0V1cm9wZSBvcmllbnRhbGUgZXQgbCdFdXJvcGUgb2NjaWRlbnRhbGUsIHNpIGluZGlzcGVuc2FibGUgIGwncXVpbGlicmUgZXVyb3BlbiA7IGonZXhhbHRhaXMgbGVzIHRyc29ycyBlc3RodGlxdWVzLCB0aG9sb2dpcXVlcywgc3Bpcml0dWVscyBkb250LCBwYXIgc2EgbHVtaW5ldXNlIHByc2VuY2UsIGwnZ2xpc2Ugb3J0aG9kb3hlIGVucmljaGl0IGxlIHBhdHJpbW9pbmUgcmVsaWdpZXV4IGRlIGxhIEZyYW5jZS4gCktlZXAgaW4gbWluZCB0aGF0IHdlYWx0aCBkaXNwYXJpdGllcyBhcmUgb25seSBnb2luZyB0byBnbyB1cCwgcmVnYXJkbGVzcyBvZiBob3cgcG9wdWxhciBCZXJuaWUgYW5kIHRoZSBTYW5kZXJzaXN0YXMgc2hvdWxkIGJlY29tZS4gVGlua2VyaW5nIHdpdGggdGhlIHRheCBjb2RlIGlzbid0IGdvaW5nIHRvIGNoYW5nZSB0aGUgZWZmZWN0IG9mIHRoZSBjb21pbmcgd2VhbHRoIG11bHRpcGxpZXJzLiBJbnN0ZWFkIG9mIHNwZW5kaW5nIHRoZWlyIG1vbmV5IG1vc3RseSBvbiBzdGF0dXMgc3ltYm9scyBhbmQgcmVhbCBlc3RhdGUsIHRoZSByaWNoIHdpbGwgYmUgYWJsZSB0byBleHBsb2l0IG1lZGljYWwgYWR2YW5jZXMgdG8gYnVpbGQgdGhlbXNlbHZlcyBzdXBlcmlvciBib2RpZXMgYW5kIGdlbml1cyBtaW5kcyB0aGF0IHdpbGwgdmFzdGx5IHdpZGVuIHRoZSBnYXAgd2l0aCB0aGUgbWlkZGxlIGNsYXNzLgpUaGUgU2Nvb3Qgb3B0aW9uIHdhc24ndCBvbmUgdGhhdCBJIGV4cGxvcmVkIHlldC4gCklmIGhlIHJhaXNlcywgSSdkIHN0YXkgaW4gdGhlIHBvdCBvbmx5IGlmIEkgaGFkIGEgcHJlbWl1bSBoYW5kLi4gCiJXZSBkcmV3IHVwIGEgY29uY2VwdCwgcGxhbm5lZCBpdCwgcHJvbW90ZWQgaXQgYW5kIGV4ZWN1dGVkIGl0IHdpdGhpbiBhIHRpZ2h0IHRpbWUgZnJhbWUuIApVbmRlciB0aGVzZSBjaXJjdW1zdGFuY2VzLCB5b3UgbWlnaHQgY29uY2x1ZGUgdGhhdCBpdCB3aWxsIGJlIGEgZ29vZCBpZGVhIHRvIGhhdmUgcGxhc3RpYyBwb2tlciBwbGF5aW5nIGNhcmRzIHdpdGggZmxhZ3Mgb3IgZmlyZXdvcmtzIG9uIHRoZSBiYWNrLi4gClRoaXMgZmxvcmlmZXJvdXMgYW5kIHJvYnVzdCBwb2tlciwgZm91bmQgZ3Jvd2luZyBhdCB0aGUgQXRsYW50YSBIb3RlbCBpbiBUaW50YWdlbCwgQ29ybndhbGwgaW4gMTkyNiwgbG9va2VkIGluY29uZ3J1b3VzIGFtb25nIHRoZSBzb2Z0IGZvbGlhZ2UgYW5kIHN1YnRsZSBmbG93ZXJzIHR5cGljYWwgb2YgbGF0ZSBBcHJpbCBhbmQgTWF5IGFsdGhvdWdoLCBncm93biB3aGVyZSBpdCBjYW4gc2hpbmUsIGl0IGNhbiBiZSBzdHVubmluZy4gT3RoZXIgcG9rZXJzIGZsb3dlciB2ZXJ5IGxhdGUgYW5kIGEgZmV3IHdhaXQgdW50aWwgTm92ZW1iZXIuCiwgd2hpY2ggYWxsb3dzIHBva2VyIHJvb21zIGFuZCBvdGhlciBsb2NhdGlvbnMgdG8gaG9zdCBjaGFyaXR5IHBva2VyIGdhbWVzIHNldmVuIGRheXMgYSB3ZWVrIGFzIGxvbmcgYXMgbm8gbW9yZSB0aGFuIGZvdXIgY2hhcml0aWVzIGhvbGQgZXZlbnRzIGF0IHRoZSBzYW1lIGxvY2F0aW9uIGF0IHRoZSBzYW1lIHRpbWUuIApJbiBzb21lIHRhYmxlcyB5b3UgY291bGQgc3RhcnQgd2l0aCBsaWtlIDVrNDBrIHdoaWxlIHNvbWUgb3RoZXJzIGFsbG93IGJpZ2dlciBidXkgaW5zIHJhbmdpbmcgZnJvbSBsaWtlIDEwMGsxbWlsIChqdXN0IHRocm93aW5nIHJhbmRvbSBleGFtcGxlcykuIFNvIHllYWgsIHRoZXJlJ3Mgbm8gc2V0IGFtb3VudC4gSXQgZGVwZW5kcyBvbiB0aGUgdHlwZSBvZiBwb2tlciB5b3UncmUgcGxheWluZyBhbmQgaXQncyBjdXJyZW50IHJ1bGVzLiAKSSBiZWVuIHVzaW5nIHRoaXMgYWxsIHllYXIgYXMgYSBxdWljayBkaXN0cmFjdGlvbiBmcm9tIGxhcmdlciBwZW9qZWN0cy4gSSBjYW4gZmluaXNoIG9uZSBvZiB0aGUgZ3VhcmRpYW5zIGluIDEgNCBzaXR0aW5ncyB1c3VhbGx5LCBhbmQgd2l0aCBzbyBmZXcgY29sb3JzIGl0IGdpdmVzIHRoYXQgaW5zdGFudCBncmF0aWZpY2F0aW9uIEkgY3JhdmUgc29tZXRpbWVzLgpJIHNheSB0aGF0IGFwcHJvdmFsIHZvdGluZyBpcyBtdWNoIGJldHRlciBjaG9pY2UgdGhhbiByYW5rZWQgY2hvaWNlIHZvdGluZyBmb3IgdGhlIHByaW1hcmllcy4gVGhlIHJlYXNvbiBiZWluZyAgIHRoZSBtb3N0IHdpZGVseSBhY2NlcHRlZCBsZWFzdCBleHRyZW1lIGNhbmRpZGF0ZSBiZWluZyBzZWxlY3RlZCBmb3IgdGhlIGdlbmVyYWwgZWxlY3Rpb24uIElmIFJlcHMgaGFkIGFwcHJvdmFsIHZvdGluZyBpbiB0aGVpciBwcmVzaWRlbnRpYWwgcHJpbWFyaWVzLCB0aGVyZSB3b3VsZCBoYXZlIGJlZW4gbm8gY2hhbmNlcyBmb3IgVHJ1bXAgYmVpbmcgdGhlaXIgY2hvaWNlIGluIDIwMTYuIApUaGUgbW9zdCBoZSBldmVyIGRvbmUgaXMgYWJvdXQgNiB0aW1lcyBpbiBhIHllYXIsIG5ldmVyIG1vcmUgdGhhbiBhbiBob3VyIGF0IGEgdGltZS4gSGUganVzdCBkb2VzbiBjYXJlLiAKMykgTG9yZXR0YTogMTgzMCAxOTMwLCAxMDBFLiAKTWFydGluaXMgYW5kIENvc21vcG9saXRhbnMgYm90aCBoYXZlIHRoYXQgc3BlY2lhbCBWZWdhcyBmZWVsLiAKVGhlIGZpcnN0IHllYXIgSSBkaWQgaXQsIHdlIGNvdWxkbid0IGV2ZW4gZmlsbCBhIHRhYmxlLiAKQnl1dSAgNSBwb2ludHMgIHN1Ym1pdHRlZCAxIHllYXIgYWdvClRoZSBzdWNjZXNzZnVsIGNvbXBhbmllcyBzaW1wbHkgaGFkIGEgYmV0dGVyIG9uIGx1Y2suIApTdGVhbFlvdXJCb25lcyAgNCBwb2ludHMgIHN1Ym1pdHRlZCA2IGRheXMgYWdvCi91L1RpbW90aHlqb2ggbWVudGlvbmVkIHByb3RvdHlwaWNhbCBpbmhlcml0YW5jZS4gTm90IGEgYmFkIHRoaW5nIHRvIGtub3csIGJ1dCBob3cgb2Z0ZW4gaXQgY29tZXMgdXAgaW4gZGF5IHRvIGRheSB3b3JrIG1heSBiZSBjb21wYW55IHNwZWNpZmljLiBXaGlsZSBJIGRvIHRoaW5rIGl0IGltcG9ydGFudCwgbm90IGZvciBhIGp1bmlvciBkZXYuClN1cnZpdmVkIGJ5IGJyb3RoZXJzIE5pY2sgQnVjaHluc2tpLCBKb2huIEJ1Y2hpbnNreSwgc2lzdGVyIE1hcnkgR29saW5za3kgYW5kIGhpcyBuaWVjZXMgQW5uZSAoQnJpYW4pIFBlcnJvLCBKbyBBbm5lIEhpbmQgYW5kIG5lcGhld3MgQ3JhaWcgKERpZGkpIEhpbmQgYW5kIFJpY2hhcmQgSGluZCBKci4gQW5kIG90aGVyIGV4dGVuZGVkIGZhbWlseS4gCkJvdWxkZXIgcG9saWNlIGxhdW5jaCBpbnZlc3RpZ2F0aW9uIGludG8gY29udGFjdCB3aXRoIG1hbiBwaWNraW5nIHVwIHRyYXNoCkkgaGF2ZSB0b25zIG9mIGVtYWlsIHRlbXBsYXRlczogaG93IHRvIGZpbmQgbXkgb2ZmaWNlLCBhbiBleHBsYW5hdGlvbiBmb3IgaG93IHRvIGNhbGN1bGF0ZSBncmFkZXMgaW4gRXhjZWwgKElpa2UgbWFueSBvZiB5b3UsIEkgZ2V0IHRoZSAid2hhdCdzIG15IGdyYWRlIiBhbGwgdGhlIHRpbWUgZHVlIHRvIExNUyB3ZWlyZG5lc3MpLCBzdGFuZGFyZCByZXBsaWVzIGZvciB3aGVuIHN0dWRlbnRzIHdyaXRlIHJlYWxseSBzaGl0dHkgZW1haWxzLCBzdGFuZGFyZCByZXNwb25zZXMgdG8gIkkgd2FzIHNpY2ssIHdoYXQgZGlkIHdlIGRvIGluIGNsYXNzPyIuIApPbmNlLCB3aGVuIEkgd2VudCB0byB0aGUgZ3JvY2VyeSBzdG9yZSwgdGhlcmUgd2VyZSBhIGZldyBvZmZpY2VycyBpbnNpZGUsIGdldHRpbmcgc3RhdGVtZW50cyBmcm9tIHNvbWUgb2YgdGhlIHN0YWZmLiBBcHBhcmVudGx5IHNvbWUgZ3V5IGhhZCBkcm9wcGVkIGEgZ2FsbG9uIHNpemVkIHppcGxvYyBiYWcgZnVsbCBvZiBjcmFjayBvbiB0aGUgZmxvb3Igd2hpbGUgaGUgd2FzIHdhbGtpbmcgb3V0LiAKV2UgdG90YWxseSBhZ3JlZSBvbiB0aGlzLiBJdCBqdXN0IHNvdW5kZWQgbGlrZSB5b3Ugd2VyZSBzYXlpbmcgZmluYW5jZXMgZGlkbiBtYXR0ZXIgaWYgdGhleSB3ZXJlIGJlaW5nIHdlaWdoZWQgaW4gdGhlIGRlY2lzaW9uIGFuZCBJIHRoaW5rIHRoZXkgdG90YWxseSBkby4KRHVyaW5nIG15IHRpbWUgd2l0aCBBcHBsZUNhcmUgSSBoYWQgYSByZWN1cnJpbmcgZ2VudGxlbWFuIHdobyBsaWtlZCB0byBoYXZlIG1lIGhlbHAgaGltIG9yZ2FuaXplIGhpcyBtdXNpYyB3aXRoIEFwcGxlIE11c2ljLiBIaXMgaVBob25lIHdhcyBhbiBlYXJsaWVyIG1vZGVsICg1LCBJIHRoaW5rKSB3aXRoIGxpa2UgOEdCIG9mIHN0b3JhZ2UsIHNvIGhlIGhhZCBsaW1pdGVkIHNwYWNlLiBUaGUgcGhvbmUgd2FzIGRpc2Nvbm5lY3RlZCBmcm9tIGNlbGx1bGFyLCBzbyBoZSBwcmV0dHkgbXVjaCB1c2VkIGl0IGFzIGlQb2Qgb3ZlciB3aSBmaS4gSGUgbmVlZGVkIGhlbHAgZG93bmxvYWRpbmcgYW5kIG1hbmFnaW5nIGhpcyBzb25ncywgYmVjYXVzZSBoZSB3b3VsZCB3b3JrIG91dCBpbiBoaXMgeWFyZCBhIGxvdCBhbmQgbG9zZSBoaXMgd2lmaSBjb25uZWN0aW9uLiBTbyBlYWNoIHRpbWUgaGUgY2FsbGVkIGluIEkgd291bGQgaG9wIGluIHdpdGggU2NyZWVuIFNoYXJpbmcgYW5kIGhlbHAgaGltIG9mZmxvYWQgdGhlIG11c2ljIGhlIHdhcyB0aXJlZCBvZiBhbmQgZG93bmxvYWQgYW55IG5ld2VyIHNvbmdzIGhlIHdhbnRlZC4gRWFjaCBjYWxsIHRvdGFsbHkga2lsbGVkIG15IEFIVCBmb3IgdGhlIGRheSwgYnV0IEkgYWx3YXlzIGxpa2VkIHdvcmtpbmcgd2l0aCBoaW0uIEhlIHdhcyBhbiB1cGJlYXQgZ3V5IGluIGhpcyA1MHMgb3IgNjBzLCBhbmQgd2Ugd291bGQgYWx3YXlzIGhhdmUgYSBnb29kIHRpbWUgdGFsa2luZyBhYm91dCBtdXNpYyB3aGlsZSB3ZSB3ZXJlIG9yZ2FuaXppbmcgaGlzIGxpYnJhcnkuIEVhY2ggY2FsbCB3b3VsZCBlbmQgd2l0aCAiVGhhbmtzLCB1L0dlZXRhckRvb2QsIEkgdGhpbmsgSSBrbm93IGhvdyB0byBkbyBpdCBub3chIiBhbmQgZWFjaCBuZXcgY2FsbCB3b3VsZCBzdGFydCB3aXRoICJIZXkgdS9HZWV0YXJEb29kLCBJIHJlbWVtYmVyIHVzIGRvaW5nIHRoaXMgdGhpbmcgbGFzdCB0aW1lIGFuZCBJIGNhbiBmb3IgdGhlIGxpZmUgb2YgbWUgcmVtZW1iZXIgaG93IHRvIGRvIGl0IGFnYWluLiIKSXQgd2FzIGFsc28gYmVmb3JlIHNvIG1hbnkgaGF2ZSBjb21lIG91dCBzbyBzdHJvbmdseSBhZ2FpbnN0IHRoZSBCdXNoaWVzIGp1c3RpZmljYWl0b25zIGZvciB0aGUgd2FyLiBUaG9zZSBqdXN0aWZpY2F0aW9ucyBpbmNsdWRlICJmaWdodGluZyB0ZXJyb3Jpc20sIHN0b3BwaW5nIGFsIFFhZWRhIGZyb20gaGF2aW5nIGEgYmFzZSBpbiBBZmdoYW5pc3RhbiwgYW5kIHdvbWVuIHJpZ2h0cyIuCkplIGRjaWRlIGRvbmMgZGUgZmFpcmUgdW4gZ3RlYXUgbW9lbGxldXggIGxhIGZhcmluZSBkZSBjaHRhaWduZXMuIEplIHByZnJlIGFzc3VyZXIgbGEgcnVzc2l0ZSBlbiBjaGVyY2hhbnQgdW5lIHJlY2V0dGUgYWQgaG9jLiAKTW9yZSBtb2Rlcm4gZGF5IHBva2VyIGZpcnN0IHN0YXJ0ZWQgYXBwZWFyaW5nIGJhY2sgaW4gdGhlIDE4MDBzIHdoZXJlIGl0IGdyZXcgc3RlYWRpbHkgcG9wdWxhciBkdXJpbmcgQW1lcmljYSdzIGNpdmlsIHdhci4gSXQgd2FzIHdpZGVseSBwb3B1bGFyIHdpdGhpbiBkaWZmZXJlbnQgYnJhbmNoZXMgb2YgdGhlIG1pbGl0YXJ5IGFzIHdlbGwgYXMgd2l0aGluIHNhbG9vbnMuIER1cmluZyB0aGUgIldpbGQgV2VzdCIgcGVyaW9kIHBva2VyIGNvdWxkIGJlIGZvdW5kIGluIG1vc3Qgc2Fsb29ucyB0aHJvdWdob3V0IHRoZSBVU0EuClNvIHJlc3QgYXNzdXJlZCB0aGF0IHdoZW4geW91ciB0aW1lIGluIHRoaXMgY3VycmVudCBtZWF0c3VpdCBpcyBjb21wbGV0ZSwgeW91IHdpbGwgcmV1bml0ZSB3aXRoIG1lbWJlcnMgb2YgeW91ciBzb3VsIGZhbWlseSBpbiBvcmRlciB0byBwbGFuIHlvdXIgbmV4dCBncmFuZCBhZHZlbnR1cmUuIFBlcmhhcHMgeW91IHdpbGwgY2hvb3NlIHRvIGluY2FybmF0ZSBvbiBhIGRpZmZlcmVudCBwbGFuZXQuIFBlcmhhcHMgeW91IHdpbGwgY2hvb3NlIHRvIGluY2FybmF0ZSBpbiBhIHJlYWxtIGluIHdoaWNoIHlvdSByZXRhaW4gbW9yZSBtZW1vcmllcyBvZiB5b3VyIG90aGVyIGluY2FybmF0aW9ucy4gCk9LLCBTdmVuIEJhZXJ0c2NoaSB3YXMgYWNxdWlyZWQgZnJvbSB0aGUgRmxhbWVzIGF0IHRoZSAyMDE1IHRyYWRlIGRlYWRsaW5lIGFuZCBBbGV4IEJpZWdhLCB0aGVuIGFzIG5vdywgd2FzIGEgZGVwdGggZGVmZW5jZW1hbi4gQnV0IHRoYXQgZG9lc24gYWx0ZXIgb3VyIHRoZXNpcy4gCkxvdmF6YSB3aGljaCwgYXQgYXJvdW5kICQ0MDAgcGVyIG1vbnRoLCBjb3N0cyBhdCBsZWFzdCBzaXhmb2xkIG1vcmUgdGhhbiBvdmVyIHRoZSBjb3VudGVyIHBpbGxzIGlzIGEgZGVmaW5lZCBmb3JtdWxhdGlvbiBvZiB0d28gZGlmZmVyZW50IGtpbmRzIG9mIG9tZWdhIDNzLiBJbXBvcnRhbnRseSwgaXRzIG1hbnVmYWN0dXJlcnMgc3RyZXNzLCB0aGUgZHJ1ZyBpcyBmcmVlIG9mIGltcHVyaXRpZXMgc3VjaCBhcyBoZWF2eSBtZXRhbHMgYW5kIG90aGVyIHRveGlucyB0aGF0IGFyZSBzb21ldGltZXMgZm91bmQgaW4gdGhlIG5vbnByZXNjcmlwdGlvbiBzdXBwbGVtZW50cy4gCkFsc28gYnV5aW5nIGEgZGVjZW50IHNpemVkIG5vbiBzdGljayBwYW4uIEkgZm91bmQgdGhhdCBteSBiaWdnZXN0IGV4cGVuc2Ugd2FzIGVhdGluZyBvdXQsIGJ1dCBub3cgSSBmZWVsIHByZXR0eSBsaWJlcmF0ZWQgd2hlbiBJIHJlbWVtYmVyIHRoYXQgSSBjb29rZWQgc3R1ZmYgdG8gZWF0IGFuZCBjYW4gc2F2ZSB0aGUgJDggMTAgYSBkYXkgSSB3b3VsZCBoYXZlIG90aGVyd2lzZSBzcGVudCBvbiBsdW5jaC4gCkkgbWFkZSBvbmUgdXAgdGhhdCBJIHRob3VnaHQgc291bmRlZCBsaWtlIEJ1ZGRoaXN0IGNoYW50aW5nLiAKQnV0IHRoZXkgdmVyeSBzcGVjaWZpYyBhYm91dCBzcGFjZSByZXF1aXJlbWVudHMgcGVyIGFuaW1hbCBldGMgICB0aGUgZWdncyBJIGJ1eSBub3cgYXJlIGFsbCBwYXN0dXJlIHJhaXNlZC4gVGhleSBBUkUgbW9yZSBleHBlbnNpdmUgYnV0IEkgb2theSB3aXRoIHRoZSBleHBlbnNlLi4gCkluIEFwcmlsIDIwMDcsIGhlIHJlcG9ydGVkIGluICJUbyBDYXRjaCBhbiBJRCBUaGllZiwiIGFuIHVucHJlY2VkZW50ZWQgaW52ZXN0aWdhdGlvbiBpbnRvIHRoZSBtYXNzaXZlIGJpbGxpb24gZG9sbGFyIGVwaWRlbWljIG9mIGlkZW50aXR5IHRoZWZ0LiBVc2luZyAiRGF0ZWxpbmUncyIgc2lnbmF0dXJlIGhpZGRlbiBjYW1lcmEgdGVjaG5pcXVlcywgdGhlIHJlcG9ydCBmb2xsb3dlZCB0aGUgdHJhaWxzIG9mIGFuIGludGVybmF0aW9uYWwgaWRlbnRpdHkgdGhlZnQgcmluZywgY2FwdHVyaW5nIGZvciB0aGUgZmlyc3QgdGltZSBvbiBuZXR3b3JrIHRlbGV2aXNpb24gaG93IHRoZSBjcmltZSB3b3JrcyBhbmQgc29tZSBvZiB0aGUgcGVvcGxlIHRoYXQgbWF5IGJlIGJlaGluZCB0aGUgcHJvY2Vzcy4uIApUaGUgc29sZXVzIGlzIHVuZGVyIHRoZSBnYXN0cm9jLCBhbmQgaXMgdGhlIG1vcmUgcG93ZXJmdWwgbXVzY2xlLiBTaW5jZSB0aGUgc29sZXVzIGRvZSBub3QgY3Jvc3MgdGhlIGtuZWUgam9pbnQsIGl0IGlzIHN0cmV0Y2hlZCBtb3N0IGVmZmVjdGl2ZWx5IHdoZW4gdGhlIGtuZWUgaXMgYmVudCB0byBzbGFja2VuIHRoZSBnYXN0cm9jLiAKVGhlc2UgcHJvdmlkZSBsaXN0cyBvZiB0cmFpbmluZyBjb3Vyc2VzIGFuZCBwcm92aWRlIGRldGFpbHMgb2YgdHJhaW5pbmcgcmVxdWlyZW1lbnRzIHRvIGJlIGEgbWVtYmVyIG9mIHRoZSBwcm9mZXNzaW9uYWwgYm9keS4gCkkgYWxsIGZvciB0aGVtIGhpcmluZyBzb21lb25lIGhpZ2ggcXVhbGl0eSBmb3IgZGF0ZSBuaWdodHMsIGJ1dCBtb3JlIG9mdGVuIHRoYW4gbm90IHdlIGFyZSBzZWVpbmcgdGhlbSB3aXRob3V0IEphbWVzIGZvciBubyByZWFzb24gYXQgYWxsLiBFdmVyb25lIG9uIGhlcmUga25vd3MgYW1iZXIgaXMgbGF6eSwgYW5kIHRoaXMgaXMgcHJvdmluZyBpdC4gCkl0IHdpbGwgY3JlYXRlIGFuIGlsbHVzaW9uIHRoYXQgdGhlIHBsYXllciBpcyBhY3R1YWxseSBpbiB0aGUgZ2FtZS4gSW4gdGhlIGZ1dHVyZSwgYSBsb3Qgb2YgY29tYmF0IGFuZCBiYXR0bGVzIHdpbGwgYmUgZG9uZSBpbiB2aXJ0dWFsIHJlYWxpdHkuIApGaWZ0eSBnb29kIHllYXJzLiBUaGUgYmVzdC4gCkhvbWVvcGF0aGljIHRpc3N1ZSBzYWx0cyAgIGFsc28ga25vd24gYXMgaG9tZW9wYXRoaWMgY2VsbCBzYWx0cyAgIGFyZSBhIHNpbXBsZSBzeXN0ZW0gd2l0aGluIHRoZSBsYXJnZXIgZmllbGQgb2YgaG9tZW9wYXRoaWNzLiBUaXNzdWUgc2FsdHMgYXJlIGhvbWVvcGF0aGljYWxseSBwcmVwYXJlZCB3aXRoIHRoZSBiYXNpcyBvZiBvcmdhbmljIHNhbHRzIHRoYXQgYXJlIHBhcnQgb2Ygb3VyIGJvZHkgbmF0dXJhbGx5LiAKTmV2ZXIgd2FudGVkIHRvIGdldCB0aGVtIGRvbmUgYmVjYXVzZSB5b3UgZW1iYXJyYXNzZWQgb2YgeW91ciB0b2VzLCBzYWlkIEJyb29rcywgd2hvIG9ubHkgZW1icmFjZWQgZ2V0dGluZyBwZWRpY3VyZXMgdHdvIHllYXJzIGFnbyB3aXRoIGhpcyB3aWZlLiBNZWFuLCB0aGV5IGEgY29tYmluYXRpb24gb2YgZGVhZCB0b2VuYWlscywgaGFtbWVyIHRvZXMuIEkgd291bGQgaW1hZ2luZSBhbGwgYmFza2V0YmFsbCBwbGF5ZXJzIGhhdmUgYmFkIHRvZW5haWxzLCBqdXN0IGZyb20gdGhlIHNob2VzIGFuZCBhbGwgdGhlIHJ1bm5pbmcgYW5kIHN0b3BwaW5nIGFuZCBzdGFydGluZy4gCkkgdGhpbmsgdGhleSBtaWdodCBldmVuIGhlbHAgdGhlIEZTQiBhZ2VudHMuIFRoYXQgZW5kb3JzZW1lbnQgYWxzbyB0ZWxscyBtZSB0aGF0IHRoZXJlIGlzIG9ubHkgYSBmaW5lIGxpbmUgdG8gY3Jvc3MgYmVmb3JlIHRoZXkgc3RhcnQgZG9pbmcgdGhlIHZpb2xlbmNlIHRoZW1zZWx2ZXMuLiAKQXMgZmFyIGFzIGxpdmUgcG9rZXIgZ2FtZXMgYXJlIGNvbmNlcm5lZCwgbmV3IHBva2VyIHJvb21zIGFyZSBvcGVuaW5nIGNvbnN0YW50bHkgYWxsIG92ZXIgdGhlIHdvcmxkLiAKSWYgeW91IGFyZSB5b3VuZyBhbmQgeW91IGZlZWwgdGhpcyB3YXksIGJlIGNvbnZpY3RlZCBhbmQgbWFrZSBpdCBrbm93biB0aGF0IHRoaXMgaXMgaG93IHlvdSB3YW50IHRvIGxpdmUgeW91ciBsaWZlLiAKSSBzcGVudCBhIGxvdCBvZiB0aW1lIHRoZXJlIHdoaXRlIGtudWNrbGluZyBpdCB0aHJvdWdoIHNldmVyZSBwYWluLi4gCkdpdmluZyBoaXMgb3Bwb25lbnRzIGRpZmZlcmVudCBsb29rcywgTWF5d2VhdGhlciB0YWtlcyBoaXMgb3Bwb25lbnRzIG1pbmRzIGF3YXkgZnJvbSB0aGVtIGFuZCBsZWF2ZXMgdGhlaXIgYm9kaWVzIHV0dGVybHkgZGVmZW5jZWxlc3MgYWdhaW5zdCBoaXMgYWNjdXJhdGUgc3RyaWtlcy4gCkVkaXNvbiBicmFuZCBwaG9ub2dyYXBocyBkZXNpZ25lZCB0byBwbGF5IEFtYmVyb2wgY3lsaW5kZXJzIHdlcmUgbmFtZWQgLiBBbWJlcm9scyBjcmFjayByYXRoZXIgZWFzaWx5IGFuZCBjb3VsZCBicmVhayBkdXJpbmcgcGxheWJhY2suIApWaXN1YWxseSwgbm90aGluZyBjaGFuZ2VzIG9uIGZpbG0uIApIZSBzdGFydGVkIGF0dGVuZGluZyB3ZWVrbHkgdGhlcmFweSBzZXNzaW9ucywgZ2V0dGluZyB0aGUgbWVkcyByaWdodCBhbmQgQWx5c3NhLCBhIGtpbmQgc291bCBhbmQgZnJpZW5kIG9mIGEgZnJpZW5kIGV2ZW4gaGVscGVkIGhpbSBnZXQgYSBqb2IgZGVsaXZlcmluZyBkYWlyeSBwcm9kdWN0cyB0byBsb2NhbCBidXNpbmVzc2VzLiBIZSBmaW5hbGx5IGZlbHQgbGlrZSB0aGluZ3Mgd2VyZSB0dXJuaW5nIGFyb3VuZCBhbmQgdGhhdCBzb21lZGF5LCBzb29uLCBoZSBtaWdodCBiZSBhYmxlIHRvIHByb3ZlIHRvIGhpcyBleCB0aGF0IGhlIHdhcyBub3cgY2FwYWJsZSBvZiBiZWluZyBhIHBhcnQgb2Yga2lkcyBsaXZlcyBpbiB0aGUgd2F5IHNoZSBhbHdheXMgaG9wZWQgaGUgY291bGQuIApJIHdpc2ggaGVyIHRoZSBiZXN0IG9mIGx1Y2suRnVydGhlcm1vcmUsIHJhZGlvZ3JhcGhpYyBldmlkZW5jZSBvZiB5b3VyIHNrZWxldGFsIGFnZSB3b3VsZCBiZSB0YWtlbiBpbnRvIGFjY291bnQgYnkgeW91ciBkb2N0b3IsIHRoaXMgaXMga25vd24gYXMgYSBSaXNzZXIgc2lnbi4gU29tZW9uZSB3aG8gaGFzIHJlYWNoZWQgc2tlbGV0YWwgbWF0dXJpdHkgd2lsbCBoYXZlIGEgUmlzc2VyIHNpZ24gb2YgNS5UaGlzIHdhcyB0YWtlbiBmcm9tIHRoZSBmaXJzdCBwYXJhZ3JhcGggb2YgdGhlIGNpdGVkIHRleHQsICJNYW55IHBhdGllbnRzIHdpdGggQUlTIGhhdmUgbW9yZSBwYWluIGJ1dCBkbyBub3QgZXhoaWJpdCBtb3JlIGRpc2FiaWxpdHkgdGhhbiB0aGUgZ2VuZXJhbCBwb3B1bGF0aW9uLiBEZXByZXNzaW9uIGRvZXMgbm90IHNlZW0gdG8gYmUgbW9yZSBvZiBhIHByb2JsZW0gdGhhbiBpbiB0aGUgZ2VuZXJhbCBwb3B1bGF0aW9uICg3OSkuIApJZiB5b3Ugd2FudCB0byBwbGF5IGZyZWUgcG9rZXIgb25saW5lLCB0aGVuIHNlbGVjdCB0aGUgcmlnaHQgbm8gZGVwb3NpdCBib251cyBwb2tlciBzaXRlcyB3aGVyZSB5b3UgY2FuIHNpZ24gdXAgZm9yIGZyZWUgYW5kIG5lZWQgbm90IG1ha2UgYW55IGNhc2ggZGVwb3NpdCB0byBzdGFydCB0aGUgZ2FtZS4gVGhlcmUgYXJlIHNldmVyYWwgcmVwdXRhYmxlIHNpdGVzIG9ubGluZSBwb2tlciwgbm8gZGVwb3NpdCBwb2tlciwgd2hlcmUgeW91IGNhbiBjaG9vc2UgdGhlIG9ubGluZSBwb2tlciByb29tIGFuZCBjcmVhdGUgYSBmcmVlIGFjY291bnQgb24gdGhlIHNpdGUuIApZb3Ugd2lsbCBub3cga2VlcCB5b3VyIG1lbGVlIHdlYXBvbiBvdXQgYWZ0ZXIgYXR0YWNraW5nIGFuZCB3aWxsIGJ1aWxkIGNvbWJvIGlmIHlvdSBrZWVwIGF0dGFja2luZyB3aXRoIHRoZSAicXVpY2sgbWVsZWUiIGtleS4gCkJ1dCBkaXNhcHBvaW50bWVudCBvbiBhIG11Y2ggaGlnaGVyIGNhbGliZXIgd2FzIG9ubHkgb24gdGhlIHdheS4KIkZvcm1lZCBmcm9tIGEgdGFuZ2VudCBvZiBpZGVhcyByYWlzZWQgZnJvbSB0aGUgc3R1ZHkgb2YgaW50ZXJhY3Rpb25zIG9mIHdhdGVyIGFzIHNwYWNlLCB0aGUgc3dpbmcgaXMgdGhlIGZpcnN0IGluIGEgc2VyaWVzIHRoYXQgcGxheSB3aXRoIGludGVyYWN0aW9uIGluIHJpZGVzIGFuZCBpbnN0YWxsYXRpb25zLiAKVG8gU3lyaWFuIHJlYmVscy4gVGhlIEZvcmVpZ24gT2ZmaWNlIGRlbmllZCB0aGUgcmVwb3J0IGJ1dCB3YXMgcmF0aGVyIHNrZXRjaHkgaW4gZXhwbGFpbmluZyBpdHMgc2lkZSBvZiB0aGUgc3RvcnkuIFRoaXMgaGFkIHRoZSBOYXRpb25hbCBBc3NlbWJseSBmdW1pbmcgb24gTW9uZGF5LiAKU28gd2h5IGlzbiBGcmFuY2lzY28gaW4gSW93YSBhbHJlYWR5PyBHaXZlbiBob3cgc21hbGwgdGhlIHN0YXRlIGlzLCBoZSBjb3VsZCBwcm9iYWJseSB2aXNpdCBldmVyeSBjb3VudHkgdHdpY2UgYnkgVmFsZW50aW5lIGRheS4gdXAsIEZyYW5jaXMgd2UgYWluIGdvdCBhbGwgZGF5ISIKSSB0aGluayBvZiBhbm90aGVyIGdyb3VwIHdlcmUgdG8gdGFrZSBvdXIgbGlvbiBkYW5jZSBhbmQgdHVybiBpdCBpbnRvIHNvbWV0aGluZyB0aGV5IHByb2ZpdCBmcm9tLCBJIGJlIHBpc3NlZC4gSWYgdGhleSBqb2luZWQgYSBsb2NhbCBsaW9uIGRhbmNlIGdyb3VwIG91dCBvZiBjdXJpb3NpdHkgYW5kIGFwcHJlY2lhdGlvbiwgdGhlbiBJIHdlbGNvbWUgdGhlbSB3aXRoIG9wZW4gYXJtcy4gClNpbmNlIHRlZW5zIHdvdWxkIHByb2JhYmx5IGJhbGsgYXQgdGhlIGlkZWEgb2YgYSBtb21teSBtYXNzYWdlLCB0aGV5J3JlIGJlc3QgbGVmdCB0byB0aGUgY2FwYWJsZSBoYW5kcyBvZiBsaWNlbnNlZCBtYXNzYWdlIHRoZXJhcGlzdHMuIApDaHJpc3RvcGhlciBDb21yaWUgc3VibWl0dGVkIGFuIGFwcGxpY2F0aW9uIGxhc3QgbW9udGggdG8gdGhlIEFsY29ob2wgYW5kIEdhbWluZyBDb21taXNzaW9uIG9mIE9udGFyaW8gKEFHQ08pIHRvIG9wZW4gYSByZWNyZWF0aW9uYWwgbWFyaWp1YW5hIHN0b3JlIGluIHRoZSBmb3JtZXIgT2FyaG91c2UgZWF0ZXJ5LCBsb2NhdGVkIGluIGEgY29tbWVyY2lhbCBwbGF6YSBhdCA2NjYgV29uZGVybGFuZCBSZC4KV2lyIGhhbHRlbiBzZWxic3R2ZXJzdG5kbGljaCBhdWNoIHVuc2VyZSBpbnRlcmVzc2llcnRlbiAgIGJlciBhbGxlIGJlZGV1dGVuZGVuIEdlc2NoZWhuaXNzZSBiZWkgZGllc2VtICBFdmVudCBhdWYgZGVtIExhdWZlbmRlbiwgaW5kZW0gd2lyIGhpZXJiZXIgaW4gZGVtIEJsb2cgZGVzICBSb29tcyBiZXJpY2h0ZW4sIiBzbyBlaW5lIFN0ZWxsdW5nbmFobWUgZGVyIEdlc2NoZnRzbGVpdHVuZyBkZXMgcy4gTWFpIDIwMTAgYmVnaW5uZW4gd2lyZCB1bmQgYmVyIHZvbGxlIDIgV29jaGVuIGFuZGF1ZXJuIHdpcmQuIEVzIGdhcmFudGllcnQgZGFiZWkgZWluIFByZWlzZ2VsZCBpbiBIaGUgdm9uICQzNiBNaWxsaW9uZW4uLiAKSXQgd2FzIGEgYmlnIHJvb20gYnV0IG5vdGhpbmcgd2FzIGluIGl0LCBidXQgdGhlcmUgd2FzIGEgZG9vci4gT2YgY291cnNlIEppbSB3YWxrZWQgcmlnaHQgb3ZlciB0byBhbmQgd2VudCB0aHJvdWdoLiAKU2hlIGFsc28gaGFzbid0IGJlZW4gdGV4dGluZyBhbnlib2R5IHRoYXQgbXVjaCBhbmQgc2hlIGhhc24ndCBiZWVuIG9uIHNvY2lhbCBtZWRpYSB0aGF0IG11Y2gsIGkgYXNrZWQgaGVyIGFuZCBzaGUgInNhaWQgWW91J3JlIHRoZSBmaXJzdCBwZXJzb24gdG8gYWN0dWFsbHkgbm90aWNlLiAKSWYgeW91IHdvdWxkIGxpa2UgdG8gc2VsbCBzb21ldGhpbmcgdG8gYSBjdXN0b21lciwgYXQgdGhlIHZlcnkgY29yZSBvZiB0aGUgbWF0dGVyIGlzIHRoZSBzb21ldGhpbmcgaXRzZWxmLiBZb3UgbXVzdCBoYXZlIGEgcHJvZHVjdCBvciBzZXJ2aWNlIHRvIG9mZmVyLiBUaGUgcHJvZHVjdCBjYW4gYmUgYW55dGhpbmcgZnJvbSBiYWxsIGJlYXJpbmdzIHRvIGJhY2sgcnVicy4gUGxhY2UgY2FuIHNvbWV0aW1lcyBiZSB2ZXJ5IGVwaGVtZXJhbCAgIGZvciBleGFtcGxlIGEgcGhvbmUgbnVtYmVyIG1pZ2h0IGJlIHRoZSBwbGFjZS4gClRoaXMgZmVsdCBsYXlvdXQgaXMgcmVhbGx5IGVhc3kgdG8gdXNlIGFuZCBhbGwgeW91IGhhdmUgdG8gZG8gaXMgbGF5IGl0IGFjcm9zcyBhIHRhYmxlIGFuZCBzdGFwbGUgaXQgZG93biBvciBmaW5kIGFub3RoZXIgd2F5IHRvIHNlY3VyZSBpdC4gSXQgaXMgcGVyZmVjdCBmb3IgZm9sZGluZyBibGFja2phY2sgdGFibGVzIHRvby4gVGhpcyBsYXlvdXQgY29tZXMgd2l0aCBnYW1lIGluc3RydWN0aW9ucyBpZiB5b3UgZG8gbm90IGtub3cgaG93IHRvIHBsYXkgdGhlIGdhbWUuLiAKVGhlIFByZWRhdG9ycyBhcmUgbm93IGxvb2tpbmcgZm9yd2FyZCB0byB0aGUgMjAxNyBXaW5lIEZlc3RpdmFsIGFuZCBUYXN0aW5nLCB0YWtpbmcgcGxhY2Ugb24gTWFyY2ggMzEgYXQgQnJpZGdlc3RvbmUgQXJlbmEuIApUaGV5J2Qgc2F5LCB1cCwgd2h5IHdvdWxkIHlvdSBzYXkgdGhhdD8gRXZlbiB0aG91Z2ggSSB3YXMgam9raW5nLCBJIGtuZXcgaWYgdGhhdCBoYXBwZW5lZCwgSSdkIGJlIHBlcmZlY3RseSBmaW5lLiAKV2l0aCBTdXBlcm1hbiwgdGhlIGltYWdlIGFzIHByb3RlY3RvciBvZiBFYXJ0aCBhbmQgYXBwZWFyaW5nIHRvIGJlIHN0cm9uZy9yZWxpYWJsZS9taWdodHkvaW52aW5jaWJsZSBhcyBpbXBvcnRhbnQgYXMgYWN0dWFsbHkgYmVpbmcgdGhvc2UgdGhpbmdzLCBiZWNhdXNlIGNvbWljcywgbW92aWVzLCB2aWRlb2dhbWVzLCBldGMgYXJlIGFzIG11Y2ggYWJvdXQgcHJlc2VudGF0aW9uIGFuZCBpbWFnZSBhcyB0aGV5IGFyZSBhYm91dCBsaWtlLiAKRHlzdG9uaWEgY2FuIGFmZmVjdCBhbnkgcGFydCBvZiB0aGUgYm9keSBuZWNrLCB0b3JzbywgZXZlbiB0aGUgdG9uZ3VlIG9yIGV5ZWxpZHMuIE5QUiByYWRpbyBob3N0IERpYW5lIFJlaG0gaGFzIGEgZm9ybSBvZiB0aGUgZGlzb3JkZXIsIHNwYXNtb2RpYyBkeXNwaG9uaWEsIGluIGhlciB2b2NhbCBjb3JkcywgTWFjayBzYWlkLiBQaWFuaXN0IExlb24gRmxlaXNoZXIgc3RydWdnbGVkIHdpdGggZHlzdG9uaWEgaW4gaGlzIHJpZ2h0IGhhbmQuIAovci92aXZlIGlzbiB5b3VyIGFkdmVydGlzaW5nIHNwYWNlLiBObyBidXlpbmcgLyBzZWxsaW5nIC8gdHJhZGluZyAvIHJlY3J1aXRpbmcgLyB3YW50ZWQgLyBiZWdnaW5nIC8gTm8gQ3JhaWdzbGlzdCBzdHlsZSBwb3N0cyAvIE5vIGFmZmlsaWF0ZSBvciByZWZlcnJhbCBtYXJrZXRpbmcuIFRyeSAvci9oYXJkd2FyZXN3YXAsIC9yL2dhbWVEZXZDbGFzc2lmaWVkcyAsIC9yL3JpZnRmb3JzYWxlICwgL3Ivdml2ZWZvcnNhbGUgLCAvci9HYW1lU2FsZSAsIC9yL1N0ZWFtR2FtZVN3YXAgZXRjLgpOb3RoaW5nIGhhcyBoYXBwZW5lZC4gCkl0J3MgdGhlIGtpbmQgb2YgZGVwdGggdGhhdCBidWlsZHMgaW5uZXIgdGVhbSBjb21wZXRpdGlvbiBiZXR3ZWVuIHRob3NlIGxvb2tpbmcgdG8gaG9sZCBvbiB0byB0aGVpciBzdGFydGluZyBzcG90cyBhbmQgdGhvc2Ugc3RyaXZpbmcgZm9yIG1vcmUgbWludXRlcy4gQW5kIHRoZW9yZXRpY2FsbHksIGl0IG1lYW5zIHRoZSBMaWdodG5pbmcgY291bGQgc2FsdmFnZSBzb21lIHdlYXIgYW5kIHRlYXIgd2l0aCBnYW1lIG1pbnV0ZXMgcG90ZW50aWFsbHkgc3ByZWFkIGFyb3VuZC4KVGhpcyBpcyB0aGUgcGF0aCBJIGNob3NlLiBMaWtlIEkgc3RhdGVkLCBpdCBub3QgZm9yIGV2ZXJ5b25lLiBTbyB3aGVuIEkgc2FpZCBJIGFwb2xvZ2l6ZSBpZiBJIGNhbWUgb2ZmIGFzIGJlaW5nIGlnbm9yYW50LEkgbWVhbnQgaXQuIEkgd291bGQgbm90IHJlY2NvbW1lbmQgdGhpcyBmb3IgZXZlcnlvbmUgYW5kIGl0cyBwZXJmZWN0bHkgZmluZSBmb3IgcGVvcGxlIHRvIHdvcmsgZm9yIG90aGVycywgaXRzIGhvdyB0aGUgd29ybGQgZ29lcyByb3VuZC4KVGhleSB3ZXJlIGRvd24gaW4gMjRocnMuR3dlbkx1cnkgIDMgcG9pbnRzICBzdWJtaXR0ZWQgMTcgZGF5cyBhZ29Ob3JtYWxseSwgSSB0ZWxsIHlvdSB0aGF0IGJpdCB3ZWlyZCBvZiBoZXIgdG8gZG8sIGJ1dCB5b3UgZGlkIHNheSB0aGF0IGlmIE90aGVycyBqdXN0IGNhbGwgaGltICJiYWJ5IiBpdCBkb2VzbiBib3RoZXIgeW91LiBVbmRlciB0aGF0IGNvbnRleHQsIG1heWJlIHlvdSBhcmUganVzdCBvbiB0aGUgc2Vuc2l0aXZlIHNpZGUgd2hlbiBjb21lcyB0byBIZXIgY2FsbGluZyBoaW0gdGhhdC4gCkplc3VzIHdhcyBjYXVnaHQgb2ZmIGd1YXJkIG1vbWVudGFyaWx5LCBidXQgYSBuZXcgZm91bmQgZXhjaXRlbWVudCBjb3Vyc2VkIHRocm91Z2ggaGlzIHZlaW5zIGFuZCBoZSB0dXJuZWQgTW9zZXMgb3ZlciwgcmVhZHkgdG8gc29kb21pemUuClJBWSBXQVJSRU4sIEZPT1RCQUxMIENPTU1FTlRBVE9SOiBJdCB3b24ndCB3b3JrIGFuZCBpdCB3aWxsIGh1cnQuIFRoZXkncmUgMTAwIHBlciBjZW50IHJpZ2h0LiBJJ3ZlIG5ldmVyIHNlZW4gYSBtb3JlIHN0dXBpZCBwb2xpY3kgaW4gYWxsIG15IGxpZmUuCktraSAoYWxzbyBrbm93biBhcyBLdWh1c2hrYSkgaXNuIHRlY2huaWNhbGx5IGEgRmlubmlzaCBmaWxtIChpdCBSdXNzaWFuKSBidXQgaXQgYWJvdXQgYSBGaW5uaXNoIHNvbGRpZXIsIGEgUnVzc2lhbiBzb2xkaWVyLCBhbmQgYSBTYW0gd29tYW4gb24gYSBmYXJtIGluIExhcGxhbmQgZHVyaW5nIFdXMi4gCkJyZWYuIERhbnMgbCBkdSBib24sIGR1IG1vaW5zIGJvbiwgcXVlbHF1ZXMgY29xdWlsbGVzLCBpbmV4YWN0aXR1ZGVzIGV0IGF1dHJlcyBib3VyZGVzLiBRdWVscXVlcyBleGVtcGxlcyA6IGwgZGUgZHJvaXRlLCBwYWdlIDI2LCBuZSByZXByc2VudGUgcGFzIHVuZSBoeXNvcGUgb2ZmaWNpbmFsZSBjb21tZSBpbmRpcXUgZGFucyBsYSBsZ2VuZGUgbWFpcyB1bmUgZXNwY2UgZGUgc2F1Z2UgOyBwbHVzIGxvaW4sIHBhZ2UgMzAsIGwgZHUgY2VudHJlIG4gcGFzIHVuZSBiZXJjZSBkdSBDYXVjYXNlIG1haXMgdW5lIGFuZ2xpcXVlIDsgcGFnZSA0MSwgdW5lIGNvbmZ1c2lvbiBlc3QgZmFpdGUgZW50cmUgbWFjcnQgaHVpbGV1eCBldCBodWlsZSB2Z3RhbGUsIGRlIG1tZSBxdSBsYSBwYWdlIDQzIDsgcGFnZSA0MiwgbGUgam9qb2JhIG4gcGFzIHVuZSBodWlsZSB2Z3RhbGUgbWFpcyB1bmUgY2lyZSB2Z3RhbGUgOyBsIG5lIGRpc3Rpbmd1ZSBwYXMgbGVzIG5vdGlvbnMgZCBldCBkIGVzc2VudGllbGxlLCBldGMuCklmIHlvdSB3YW50IGZpbmdlciBzdHJlbmd0aCBwYWlyIHlvdXIgZmluZ2VydGlwIHB1c2h1cHMgd2l0aCBkZWFkIGhhbmdzLiBDb252aWN0IENvbmRpdGlvbmluZyAyIHBhaXJzIHRoZXNlIHR3byB0byB3b3JrIHRoZSBmcm9udCBhbmQgYmFjayBtdXNjbGVzIG9mIHRoZSBoYW5kLiBJIHRyYWluIGdyaXAgbGlrZSBhIG1heCBzdHJlbmd0aC9jYXB0YWlucyBvZiBjcnVzaCBzb3J0IG9mIHJvdXRpbmUgYnV0IHdpdGggcHJvZ3Jlc3NpdmUgZGVhZCBoYW5ncy4gCkRpZG4gbmVlZCB0aGUgbW9uZXksIGhlIHNheXMuIApBcmUgYSBsb3Qgb2YgY2l0aWVzIHRoYXQgYXJlIGdyZWF0IHRvIHBsYXkgaW4gYW5kIENoaWNhZ28gaXMgZGVmaW5pdGVseSBvbmUgb2YgdGhlbSwgTHVvbmdvIGFkZGVkLiAKVG8gZ2V0IHRoZXNlIFZJUCBtZW1iZXJzaGlwcywgdGhlaXIgb25saW5lIHNpdGUgZ2l2ZXMgb3V0IHByaW50YWJsZSBjb3Vwb25zIHRoYXQgY2FuIGJlIHByZXNlbnRlZCB0byBhbnkgR29sZCdzIEd5bSB3b3JsZHdpZGUuIE9yIGZvciBiZXR0ZXIgYXBwbGljYXRpb25zLCB5b3UgbWF5IHNpZ24gdXAgd2l0aCB0aGUgbmVhcmVzdCBHb2xkJ3MgR3ltIGluIHlvdXIgYXJlYS4gCklwc3dpY2ggQ2xhc3NpZmllZHMgSm9icyBpbiBJcHN3aWNoIENhcnMgZm9yIFNhbGUgaW4gSXBzd2ljaCBQcm9wZXJ0eSBsaXN0aW5ncyBpbiBJcHN3aWNoIEJhcmdhaW5zIGZvciBTYWxlIGluIElwc3dpY2ggT2JpdHVhcmllcyBpbiBJcHN3aWNoIFBlcnNvbmFscyBpbiBJcHN3aWNoIE5vdGljZXMgaW4gSXBzd2ljaCBQcm9wZXJ0eSBmb3IgUmVudCBIb3VzZXMgZm9yIFNhbGUgQ2xhc3NpZmllZHMgR2FyYWdlIFNhbGUgUmVjcnVpdG1lbnQKQUtvcyBpcyBtdWNoIG1vcmUgcG93ZXJmdWwgd2hlbiB5b3UgYXJlIGEgYmlnIHN0YWNrLCBhcyBjb21wYXJlZCB0byB3aGVuIHlvdSBhcmUgYW1vbmdzdCB0aGUgc2hvcnQgc3RhY2tzIGFuZCBwbGF5aW5nIG9uIHRoZSBidWJibGUuIApUSE9OIHJlYWxseSBpcyB0aGUgYmVzdCBhbmQgd29yc3QgcGFydCBvZiBQZW5uIFN0YXRlLiBUaGUgYW1vdW50IG9mIG1vbmV5IGFuZCBnb29kIHRoZXkgZG8gaXMgc3Vic3RhbnRpYWwsIGJ1dCB0aGUgbWVudGFsaXR5IHBlb3BsZSBoYXZlIGFib3V0IGl0IGlzIHNvIHdhcnBlZC4gCkNvaW5jaWRlbnRhbGx5IG15IGZpcnN0IGdvIGF0IHNleC4gUGFydHkgYXQgYSBnb29kIGZyaWVuZHMgaG91c2UsIHRhbGsgdG8gYSBnaXJsIGFsbCBuaWdodCBhbmQgZW5kIHVwIGluIG9uZSBvZiBteSBmcmllbmQgYmVkcm9vbSwgbXkgZnJpZW5kcyB3ZXJlIHNpYmxpbmdzLCB0aGlzIGlzIGltcG9ydGFudCBiZWNhdXNlIG15IGZyaWVuZCBoYWQgZ290dGVuIGluIHRyb3VibGUgZWFybGllciBpbiB0aGUgd2VlayB3aXRoIGhlciBtb3RoZXIgcmVzdWx0aW5nIGluIGhlciBkb29yIGtub2IgYmVpbmcgcmVtb3ZlZCBzbyBzaGUgY291bGRuIGxvY2sgdGhlIGRvb3IuIFRoaW5ncyBhcmUgZ2V0dGluZyBob3QgYW5kIGhlYXZ5LCBjbG90aGVzIGFyZSBvZmYsIGRpY2sgaXMgc2xpZCBpbiwgYW5kIHdlIGdldCA0LCBtYXliZSA1IHRocnVzdHMgaW4gYmVmb3JlIHRoZSBnaXJsIGZyaWVuZCBiYXJnZXMgaW50byB0aGUgcm9vbSBhbmQgc3RhcnRzIHNjcmVhbWluZyBibG9vZHkgbXVyZGVyLCBmb3Igbm8gcmVhc29uIGJleW9uZCBiZWluZyBhIGRydW5rIGhpZ2hzY2hvb2wgZ2lybCBlbmNvdW50ZXJpbmcgYW4gYXdrd2FyZCBpbnRlcmFjdGlvbiwgd2hvbGUgcm9vbSBydXNoZXMgaW4gYXMgdGhlIGdpcmwgc2l0cywgcGV0cmlmaWVkLCBvbiB0b3Agb2YgbXkgc29mdGVuaW5nIGRpY2suaWYgeW91IG1lYW4gdGhlIGxpZ2h0ZXIgY2xpcHBlciwgdGhleSBncmVhdC4gCk1lZ3luIEtlbGx5J3MgIlRvZGF5IiBzaG93IHJ1biBvbiBOQkMgaXMgb2ZmaWNpYWxseSBvdmVyLgpGaW5hbFBlcnNvbmFsaXR5NyAgMCBwb2ludHMgIHN1Ym1pdHRlZCA3IGRheXMgYWdvCk9rIG1heWJlIGkganVzdCBtaXNzaW5nIHNvbWV0aGluZyBoZXJlIGJ1dCBldmVyeXRpbWUgSSBzZWUgc29tZW9uZSBzYXkgbW9yZSBhbmQgYmV0dGVyIHJld2FyZHMsIGl0IHNvdW5kcyBsaWtlIHRoZXkganVzdCBnaXZpbmcgbWUgbW9yZSBvZiBteSBtb25leSBiYWNrLiBBbmQgYW55IHZvbHVtZSBiYXNlZCByZXdhcmRzIHN5c3RlbSBoYXMgYSBjb25zZXF1ZW5jZSBvZiBwZW5hbGl6aW5nIHBsYXllcnMgdGhhdCBkb24gcGxheSBhcyBtdWNoIGFrYSByZWNzIGFrYSB0aGUgcGVvcGxlIHdlIHNob3VsZCBiZSByZXdhcmRpbmcgbm90IHBlbmFsaXppbmcuIFNvIHdoeSB3b3VsZG4gdGhleSBqdXN0IGhhdmUgZXZlbiBsb3dlciAoYWxyZWFkeSBsb3dlcikgcmFrZT8gQmVjYXVzZSBodW1hbnMgcmVzcG9uZCB3ZWxsIHRvIGluY2VudGl2ZXMgYW5kIGl0cyBhIHdheSB0byBkcml2ZSBtb3JlIHRyYWZmaWMuIApUaGUgZmlyc3Qgd2VlayBpcyBvdmVyIHdpdGguIEkgaGFkIG5pZ2h0bWFyZXMgZXZlcnkgbmlnaHQgd2VyZSBJIGV4cGVyaWVuY2UgdGhlIHBhaW4gYW5kIHN1ZmZlcmluZyBub3Qgb2YgbXlzZWxmIGJ1dCBvZiBvdGhlcnMuIEJ1dCBsYXN0IG5pZ2h0IHRoZSBuaWdodG1hcmVzIHN0b3BwZWQuIEkgd2VudCBpbnRvIHRoZSBjYWdlIG9mIGEgdGVlbmFnZSBnaXJsIHRoaXMgdGltZSwgYW5kIHdhdGNoZWQgYXMgdGhlIGRlbW9uIHN0YXJ0ZWQgdGhlIHNlc3Npb24uIEhlIHN0YWJiZWQgYSBrbmlmZSBpbnRvIGhlciBzdG9tYWNoIGFuZCB0d2lzdGVkIGl0LiBUaGUgZ2lybCB3YWlsZWQgYW5kIEkgd2luY2VkLCBidXQgdGhlIHBhaW4gd2FzbiB3aGF0IEkgZXhwZWN0ZWQuIFRoZSBwYWluIHdhcyBkZWZpbml0ZWx5IHRoZXJlLCBidXQgaXQgd2FzbiBwYWluIGxpa2UgSSBoYWQgZXhwZXJpZW5jZWQgYmVmb3JlIHRoaXMgdGltZS4gVGhlIHBhaW4gdGhyb3VnaG91dCB0aGUgZW50aXJlIHNlc3Npb24gaGFkIHN0YXJ0ZWQgdG8gbnVtYiwganVzdCBhIHRpbnkgYml0LCBhbmQgdGhhdCB0aW55IGJpdCB3YXMgcmVwbGFjZWQgd2l0aCBzb21ldGhpbmcgSSBoYWRuIGV4cGVyaWVuY2VkIGluIGEgbG9uZyB0aW1lLCBlbmpveW1lbnQuIEkgZmVsdCBuYXVzZW91cywgaW5mdXJpYXRlZCB3aXRoIG15IG93biBmZWVsaW5ncy4gV2hhdCB3YXMgaGFwcGVuaW5nIHRvIG1lPyBCdXQgdGhhdCB3aGVuIEkgcmVhbGl6ZWQsIHRoYXQgdGhpcywgInB1bmlzaG1lbnQiLCB3YXNuIG1lYW50IHRvIG1ha2UgbWUgZmVlbCBwYWluLiBJIGJlY2FtZSBzbyBkaXNndXN0ZWQgd2l0aCBteXNlbGYgSSB0aHJldyB1cCBpbiB0aGUgY2VsbC4gVGhpcyBkaWRuIGZlZWwgbGlrZSBteSBwdW5pc2htZW50IGJlY2F1c2UgaXQgd2FzbiBteSBwdW5pc2htZW50LiBJdCB3YXMgbXkgdHJhaW5pbmcuCkV0d2EgMjE1MCBIdXNlciBnZWhyZW4genVkZW0genUgZGVyIE1hcmtlLiBJbnNnZXNhbXQgNC42MDAgSG90ZWxzIGhhdCBkaWUgZ2VzYW10ZSBJSEcgR3JvdXAgdW50ZXIgaWhyZW0gRGFjaCB2ZXJlaW5pZ3QuLiAKU3RpbGwsIGRlc3BpdGUgdGhlIGFic3VyZGl0eSBvZiB0aGUgU292aWV0IGVjb25vbWljIHN5c3RlbSwgcGVvcGxlIGhhZCBzdWJzaWRpemVkIGhvdXNpbmcgYW5kIHNvbWUgaGVhbHRoIGNhcmUgYW5kIGZyZWUgZWR1Y2F0aW9uLCBub3QgdG8gbWVudGlvbiBsYW5kIG9uIHdoaWNoIHRvIGdyb3cgdmVnZXRhYmxlcy4gVW5kZXIgdGhlIGVxdWFsbHkgYWJzdXJkIHN5c3RlbSBvZiBjb2xsYXBzaW5nIGNhcGl0YWxpc20sIGZldyBvZiB1cyBoYXZlIGFueSBvZiB0aGlzLiAKVGhhbmsgeW91LCBDYXJvbGluYSBIZXJyZXJhIGNyZWF0aXZlIGRpcmVjdG9yIFdlcyBHb3Jkb24sIGZvciB0aGUgcXVlZW4gd29ydGh5IHBhbGUgZ29sZCBjdXN0b20gbG9vayBjcmVhdGVkIGZvciBub21pbmVlIEdsZW5uIENsb3NlLiBJdCB3YXMgYnkgZmFyIGhlciBzdGFuZG91dCBsb29rIG9mIHRoZSBhd2FyZHMgc2Vhc29uLCB3aXRoIGEgY2FwZSwgaGFuZCBlbWJyb2lkZXJ5IGFuZCBnbGFzcyBidWdsZSBiZWFkcy4gSXQgdG9vayA0MCBjcmFmdHNtYW4gYW5kIDMgbWlsbGlvbiBiZWFkcy4KVGhpcyBzY2hlbWUgYWxsb3dzIHVzIHRvIHRhcmdldCB0aGUgdmVyeSBicmlnaHRlc3Qgc3R1ZGVudHMgaW4gY2VydGFpbiBzdWJqZWN0IGFyZWFzLCB3aG8gZGVtb25zdHJhdGUgZXhjZXB0aW9uYWwgYWNhZGVtaWMgcGVyZm9ybWFuY2UgaW4gdGhlaXIgc2Nob29saW5nIHRvIGRhdGUsIHRha2luZyBpbnRvIGNvbnNpZGVyYXRpb24gdGhlIHZpZXdzIG9mIHRoZWlyIGN1cnJlbnQgaW5zdGl0dXRpb24gYW5kIHRlYWNoZXJzLiBJdCBwcm92aWRlcyB0aGVtIHdpdGggYW4gdW5jb25kaXRpb25hbCBvZmZlciB0byBjb250aW51ZSB0aGVpciBhY2FkZW1pYyBjYXJlZXIgYXQgQmlybWluZ2hhbSwgaWYgdGhleSBtYWtlIEJpcm1pbmdoYW0gdGhlaXIgZmlybSBjaG9pY2UuCk9uIGEgZGlmZmVyZW50IG5vdGUsIEkgdGhpbmsgd2UgaGF2ZSBhIG11Y2ggaGlnaGVyIGNoYW5jZSBvZiB3aW5uaW5nIG9uIFR1ZXNkYXkgZm9yIGEgcmVhc29uIHBvbGxzIGFyZSBub3QgdGFraW5nIGludG8gYWNjb3VudDogdGhpcyBpcyB0aGUgZmlyc3QgdGltZSB0aGUgbmV3IE5DIHZvdGVyIElEIGxhdyBpcyBnb2luZyB0byBiZSBpbiBlZmZlY3QuIFdoaWxlIG1hbnkgc3R1ZGllcyBzaG93IHRoYXQgdGhpcyBhZmZlY3RzIG1pbm9yaXRpZXMsIHRoZSBwb29yLCBhbmQgdGhlIHlvdW5nIHRoZSBtb3N0LCBJIGhhdmUgYSBmZWVsaW5nIGl0IHdpbGwgcmVzdWx0IGluIGxvd2VyIHR1cm5vdXQgZm9yIGJsYWNrcyBhbmQgdGhlIGVsZGVybHksIHdoaWNoIGNvdWxkIGltcHJvdmUgQmVybmllIGNoYW5jZXMgaW4gTkMuIEkgbWlnaHQgYmUgd3JvbmcsIGJ1dCBJIGhhdmUgYSBzdHJhbmdlIGZlZWxpbmcgYWJvdXQgaXQuIEl0IHdpbGwgYmUgaW50ZXJlc3RpbmcgdG8gc2VlIG9uIFR1ZXNkYXkuCkkgYWxzbyBjaGVjayB0aGUgcHJvcGVydHkgdGF4IHJlY29yZHMgYXMgdG8gd2hvIG93bnMgdGhlIHByb3BlcnR5LiBJJ3ZlIGNhdWdodCAyIGFwcGxpY2FudHMgaW4gbGllcyBvbiB0aGF0IG9uZS4uIApESVNDTEFJTUVSLCB0aGlzIGV4YW1wbGUgaXMgdXNlZCB0byBoaWdobGlnaHQgdGhlIGtpbmRzIG9mIHRyaWNrcyBtZWdhIGNvcnBvcmF0aW9ucyB1c2UgdG8gZmxlZWNlIEFtZXJpY2EsIGl0IGlzIGluIG5vIHdheSBhIHN1Z2dlc3Rpb24gdGhhdCBhbnlvbmUgZWxzZSBzaG91bGQgdXNlIHRoZXNlIGxvb3Bob2xlcy4gV2h5IHdvdWxkIHlvdSBuZWVkIHRvIGFueXdheT8/IFlvdSdyZSBhIHJlZCBibG9vZGVkIEFtZXJpY2FuIHRoYXQgYmVsaWV2ZXMgaW4gcGF5aW5nIHRheGVzIHRvIGEgZ292ZXJubWVudCB0aGF0IGlzIGJ5IGFuZCBmb3IgdGhlIHBlb3BsZS4gMTE2IHBvaW50cyAgc3VibWl0dGVkIDkgZGF5cyBhZ28KVGhlIG90aGVyIGlzIHRoYXQgYXJvdW5kIHRoZSBhZ2Ugb2YgMTQgSSBzdGFydGVkIHRvIG5vdGljZSB0aGUgb3V0c2lkZXMgb2YgYm90aCBvZiBteSBmZWV0IHN0YXJ0aW5nIHRvIGdldCBtdWNoIHdpZGVyLiBBZnRlciBhIGNvdXBsZSBvZiB5ZWFycyBvZiBidXlpbmcgZXhwZW5zaXZlIGN1c3RvbSBtYWRlIHNob2VzIHRoZXkgZGVjaWRlZCB0byBwZXJmb3JtIHN1cmdlcnkgb24gbXkgZmVldC4gClRoZSBjb3JyZWN0IHJlc3BvbnNlIHRvIGEgY2FsbCBmb3Igbm9uIGh5c3RlcmljYWwgZGViYXRlIGlzIHRvIHRyeSBhbmQgc2h1dCB0aGUgc3BlYWtlciBkb3duICBhdCBsZWFzdCB1bmRlciBmYXNjaXN0aWMgcmVnaW1lcy4gCkluIHlvdXIgZ3JhZHVhdGlvbiBwaWN0dXJlLCB5b3UgbG9vayBncmVhdCBhbmQgaWYgSSB3YXMgMTggSSB0aGluayB0aGF0IHlvdSB3ZXJlIHRvbyBmb2N1c2VkIG9uIHlvdXIgY2FyZWVyIGFuZCB3b3VsZCBoYXZlIG5vIHRpbWUgZm9yIGEgcmVsYXRpb25zaGlwLiBJIHBlcnNvbmFsbHkgcHJlZmVyIG5vIG1ha2V1cCBidXQgYXMgb3RoZXIgcmVkZGl0b3JzIGhhdmUgbWVudGlvbmVkLCB5b3UgY291bGQgdHJ5IGEgZmV3IHZhcmlhdGlvbnMgb2YgbWFrZXVwIGFuZCBzZWUgd2hhdCBzdWl0cyB5b3UgdGhlIGJlc3QuIApTbyBob3cgeW91IGNvbmZyb250IHRoaXMgY2hhbGxlbmdlIGlzIG11Y2ggbW9yZSBpbXBvcnRhbnQgdGhhbiB0aGUgY2hhbGxlbmdlIGl0c2VsZi4gVGhlcmUgYXJlIHR3byBjb21wb25lbnRzIHRvIHRoaXMuIApBIGxvdCBvZiBvdXIgd29yayBpcyBkb25lIHZlcnkgZmFzdCwgaW4gYSBzaG9ydCBhbW91bnQgb2YgdGltZS4gClRoZSBmaW5kaW5ncyB3ZXJlIGhhcmRseSBzdGF0aWMgYWNyb3NzIHRoZSBib2FyZCwgaG93ZXZlci4gIkluIHRoaXMgc3R1ZHksIHdlIGZvdW5kIHRoYXQgdGhlIGdyb3VwcyBvZiBhdG9waWMgZGVybWF0aXRpcyBhbG9uZSBhbmQgdGhlIGFsbGVyZ2ljIHJoaW5pdGlzICsgYXRvcGljIGRlcm1hdGl0aXMgd2VyZSBhc3NvY2lhdGVkIHdpdGggYSBsb3dlciByaXNrIG9mIHBzeWNoaWF0cmljIGRpc29yZGVycywgYnV0IGFsbCB0aGUgb3RoZXIgZm91ciBncm91cHMsIHN1Y2ggYXMgYnJvbmNoaWFsIGFzdGhtYSBhbG9uZSwgYWxsZXJnaWMgcmhpbml0aXMgYWxvbmUsIGJyb25jaGlhbCBhc3RobWEgKyBhbGxlcmdpYyByaGluaXRpcywgYnJvbmNoaWFsIGFzdGhtYSArIGF0b3BpYyBkZXJtYXRpdGlzLCBhbmQgdGhlIGNvbWJpbmF0aW9uIG9mIGFsbCB0aGVzZSB0aHJlZSBhbGxlcmdpYyBkaXNlYXNlcywgd2VyZSBhc3NvY2lhdGVkIHdpdGggYSBoaWdoZXIgcmlzayBvZiBwc3ljaGlhdHJpYyBkaXNvcmRlcnMsIiB0aGUgcmVzZWFyY2hlcnMgd3JpdGUgaW4gdGhlIHN0dWR5LgpJbCBwbGl0IGdyYWR1ZWxsZW1lbnQgYXVzc2kgYWxvcnMgY2Ugbidlc3QgcGFzIHVuIGNoYW5nZW1lbnQgZHJhc3RpcXVlLi4gCkRvbid0IGxldCBoaW0gZ3JhYiBhbnkgdGhyb3dhYmxlIG9iamVjdHMuIEhlIHdpbGwgdGhyb3cgdGhlbSBhdCB5b3UsIGRlc3Ryb3lpbmcgeW91ciBjb3ZlciBkZXBlbmRpbmcgb24gaG93IGJpZyBpdCBpcy4gClRoZSBlbnRyeSBmZWUgaXMgc3RpZmY6ICQxMCwwMDAuIApCYWx0U3V6IHUKSSB0aGluayB0aGF0IGEgbGl0dGxlIGhhcnNoLiBUaGVyZSBhcmUgcGxlbnR5IG9mIHBlb3BsZSB3aG8gZW5qb3kgdGhlIHJlZmVyZWVpbmcgYXNwZWN0IG9mIHRoaW5ncyBtb3JlIHRoYW4gdGhlIHBsYXkuIApKdXN0IHBsZWFzZSBkb24gbmFtZSB0aGVtLiBUaGUgcmVhc29uIGZvciB0aGUgYmFuIG9uIHBvbGl0aWNzIGlzIHRoYXQgcGVvcGxlIHJlYWxseSBvZnRlbiBzdGFydCBkZWJhdGluZyBwb2xpdGljYWwgYWdlbmRhcywgYW5kIGl0IGRlcmFpbHMgdGhlIE9QIGFuZCBsZWFkcyB0byBhbGwgc29ydHMgb2YgYmlja2VyaW5nLiAKT3ZlciB0aGUgcGFzdCB3ZWVrLCB3ZSBoYXZlIGJlZW4gYWN0aXZlbHkgc2VhcmNoaW5nIGZvciBQTE8gY29hY2hlcy4gVGhpcyBoYXMgbm90IGJlZW4gaWRlYWwgYW5kIHdlIGFyZSBkb2luZyBvdXIgYmVzdC4KR2hvc3RpbnlvdXJwYW50cyAgMyBwb2ludHMgIHN1Ym1pdHRlZCA0IGRheXMgYWdvClRoaXMgdHJpYWwgd2lsbCBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgb2YgQVZJRDEwMCBpbiBTQ0NITiBwYXRpZW50cyB3aXRoIEVHRlIgSUhDIDMrIHR1bW9ycyBBVklEMTAwIGlzIHRoZSBtb3N0IGFkdmFuY2VkLCBicm9hZGx5IGFjdGl2ZSBhbnRpIEVHRlIgQURDIGluIGNsaW5pY2FsIGRldmVsb3BtZW50IDIwJSBvZiBTQ0NITiBwYXRpZW50cyBoaWdobHkgb3ZlcmV4cHJlc3MgRUdGUjsgbm8gdGhlcmFweSBpcyBhcHByb3ZlZCBmb3IgdGhlc2UgcGF0aWVudHMgQVVTVElOLCBUZXhhcyBNT05UUkVBTCAgIEZvcmJpdXMsIGEgY2xpbmljYWwgc3RhZ2UgY29tcGFueSB0aGF0IGRldmVsb3BzIG5vdmVsIGJpb2xvZ2ljcyBmb3IgdGhlIHRyZWF0bWVudCBvZiBmaWJyb3NpcyBhbmQgY2FuY2VyLCBhbm5vdW5jZWQgdG9kYXkgdGhhdCB0aGUgZmlyc3QgcGF0aWVudCBoYXMgYmVlbiBkb3NlZCBpbiBhIFBoYXNlIDJhIHNxdWFtb3VzIGNlbGwgY2FyY2lub21hIG9mIHRoZSBoZWFkIGFuZCBuZWNrIChTQ0NITikgY2xpbmljYWwgdHJpYWwuCk9oIEdvZCwgSSBhbnN3ZXJlZCBhbiBhZCBmb3IgYSByb29tIGZvciByZW50IGluIGEgaG91c2UgaW4gQmVhdmVydG9uLiBUaGUgb3duZXIgb2YgdGhlIGhvdXNlIGRpZG4gaGF2ZSBhIHRvbiBvZiBwaWN0dXJlcyBvZiB0aGUgcm9vbSBpdHNlbGYgYW5kIEkgYXNrZWQgZm9yIHNvbWUgbW9yZSBiZWZvcmUgSSBkcm92ZSBvdXQgdG8gYSBzaG93aW5nLiBUd28gb2YgdGhlIHdhbGxzIHdlcmUgdG90YWxseSB1bmZpbmlzaGVkLiBUaGVyZSB3YXMgbm8gZHJ5d2FsbC4gSXQgd2FzIGNsZWFyIGhlIGhhZCBidWlsdCB0aGlzIHJvb20gYnkgY3V0dGluZyB3aGF0IGxvb2tlZCBsaWtlIGEgbGFyZ2UgZGVuIG9yIGZhbWlseSByb29tIGluIGhhbGYgYnV0IHRoZW4ganVzdCBwdXQgdXAgcGFwZXIvY3VydGFpbnMgb3ZlciB0aGUgIndhbGxzIiAoc3R1ZHMpLgoobGF0ZSByZXBseSwgSSBrbm93LikgQXMgZmFyIGFzIFVTIHN0YXRzIGdvLCBtb3N0IHByb3Rlc3RhbnQgQ2hyaXN0aWFucyBhcmUgU291dGhlcm4gQmFwdGlzdCwgYW5kIGFzIGEgcmVzdWx0LCB5b3UgYXJlIGNvcnJlY3QsIG1vc3QgZG9uIHRlbmQgdG8gYmVsaWV2ZSBpbiB0aGUgZmFsbGliaWxpdHkgb2YgdGhlIEJpYmxlLiAKKEkgZG8gdGhpbmssIGJ1dCBhbSBub3QgMTAwJSkgdGhhdCB0aGV5IGFyZSBldmVuIG1pcnJvcmVkIEwgUi4gCkkgd2FudCB0byBzaXQgZG93biB3aXRoIGNvbmZpZGVuY2UgYW5kIHdpbGwgZW50ZXIgdGhlIHRvdXJuYW1lbnQgdG8gd2luLi4gCkkgd2FzIHdvcnJpZWQgYWJvdXQgYmVpbmcgaGl0IGJ5IGEgTGV4dXMgdGhhbiBiZWluZyBhc3NhdWx0ZWQgYnkgYSBob21lbGVzcyBwZXJzb24uLiAKVGhpcyBpcyB3aHkgZGlzY29yZCBhbmQgc2xhY2sgZXhpc3QgIHNvIHRoYXQgdGhlIG1pbmRzIHdobyBhcmUgb25saW5lIHRoZW4gYW5kIG5vdyB3b3JraW5nIGZvciB0aGUgdGVhbSBhY3QuLiAKR2lsbGllcywgYnkgY29udHJhc3QsIGFwcGVhcnMga2VlbiB0byBoZWxwLiAKRWVyc3QgZWVucyBnYWFuIGtpamtlbiBvcCBkZSB2b2V0Z2FuZ2Vyc2JydWcgQm9nZGFuIEtobWVsbmlzdGt5IGJyaWRnZSB2b29yIGRlIHVpdHppY2h0ZW4gZW4gZGUgZ2VvY2FjaGUuIApCZWZvcmUgeW91IHNpZ24gdXAsIHRob3VnaCwgeW91IHNob3VsZCByZWFkIHRoZSBmaW5lIHByaW50IGFuZCB1bmRlcnN0YW5kIGFsbCB0aGUgZGV0YWlscyBhYm91dCBqb2luaW5nIHRoZSBvbmxpbmUgY2FzaW5vIHNpdGUuIFlvdSBtdXN0IGFsc28gZWR1Y2F0ZSB5b3Vyc2VsZiBvbiB0aGUgZGV0YWlscyBvZiB0aGUgY2FzaW5vIGJvbnVzIG9mZmVycyB5b3UgYXJlIGFib3V0IHRvIHJlY2VpdmUsIHN1Y2ggYXMgaG93IHRvIGF2YWlsIG9mIHRoYXQgb2ZmZXIgb25jZSB5b3Ugc2lnbiBpbi4gVXN1YWxseSwgYSBjYXNpbm8gYm9udXMgb2ZmZXIgaXMgbGlua2VkIHdpdGggd2FnZXJpbmcsIHNvIHlvdSBuZWVkIHRvIGJlIGF3YXJlIG9mIHlvdXIgd2FnZXJpbmcgcmVxdWlyZW1lbnRzLiAKQUkgY2FuIHJlcGxhY2UgYSBsb3Qgb2Ygb3RoZXIgam9icyB0b28uIApBbmQgd2hpbGUgYW5hbHlzdHMgc2F5IHRoZXkgYXJlbid0IHByZWRpY3RpbmcgYW55IG1ham9yIEVVIHNhbmN0aW9ucyBhZ2FpbnN0IE1vc2NvdyBmb3IgdGhlIG9uZ29pbmcgVWtyYWluZSBjcmlzaXMsIHRoZXkgc3VnZ2VzdCBhbnkgc3VjaCBwdW5pdGl2ZSBhY3Rpb25zIG1pZ2h0IGFjdHVhbGx5IGJhY2tmaXJlIG9uIHRoZSBFdXJvcGVhbnMuCkkgaW4gdHdvIG1pbmRzIGFib3V0IGNsb3NpbmcgdGhpcy4gCkFsbCB0aGlzIGZpZ2h0IHJlYWxseSBsZXQgdXMga25vdyBpcyAxKSBoZSBoYXMgYSBmdWNraW5nIEdSQU5JVEUgY2hpbiBhbmQgMikgaGUgdXR0ZXJseSBhbmQgY29tcGxldGVseSBmdWNrZWQgaWYgaGUgY2FuIGdldCBhIHRha2Vkb3duLi4gCkFuZCBiZWNhdXNlIG1hbnkgcGxheWVycyBtYWtlIGJpZyBtaXN0YWtlcyB3aGVuIHBsYXlpbmcgbGl2ZSBwb2tlciwgb25lIHRoaW5nIGlzIGZvciBzdXJlOiBtb3JlIG1pc3Rha2VzIG9mIHlvdXIgY29udGVuZGVycyB3b3VsZCBtZWFuIG1vcmUgbW9uZXkgZm9yIHlvdSEuIApIZSB0aGVuIGhhZCBhbm90aGVyIGJvdW5jZXIgYXBwcm9hY2ggbXkgY2xpZW50IGZyb20gdGhlIGJhY2sgYW5kIHBoeXNpY2FsbHkgdGFrZSBoaW0gb3V0IG9mIHlvdXIgZXN0YWJsaXNobWVudCB3aXRob3V0IGFueSB3YXJuaW5nLiBUaGVyZSB3ZXJlIGF0IGxlYXN0IDQgb3RoZXIgYm91bmNlcnMgb3V0c2lkZSB3aGVyZSBteSBjbGllbnQgY291cmFnZW91c2x5IGRlZmVuZGVkIGhpbXNlbGYgYWdhaW5zdCBhbGwgNCBvZiB0aGVtLiAKSXQgY291bGRuJ3QgYmUgc2ltcGxlciB0byBsZWFybiBhbmQgcGxheSBzaW5jZSB0aGVyZSBhcmUgbm8gY29tcGxpY2F0ZWQgcnVsZXMgb2YgcGxheWluZyBzdHJhdGVnaWVzIHRoYXQgY2FuIGJlIHVzZWQuIFRoZSBnYW1lIGlzIGEgZ2FtZSBvZiBsdWNrIGFuZCBjaGFuY2UuIFRoZSBwbGF5ZXIgd2hvIHdpbnMgZG9lcyBzbyBiZWNhdXNlIG9mIGx1Y2ssIG5vdCBiZWNhdXNlIG9mIHNraWxsLi4gCkFuZCB0aGUgbW9tIHBheWluZyBvZmYgdGhlIHJlbWFpbmRlciBvZiB0aGUgbW9ydGdhZ2Uga2luZCBvZiBzb3VuZHMgbGlrZSBmaXNoaW5nIGZvciB0aGUgaW50ZXJlc3QgdGhhdCBzaGUncyBzZXQuIElmIHRoZXkgaGFkIGl0IGluIGhhbmQsIHRoZXJlIHdhcyBubyBuZWVkIGZvciBoZXIgdG8gZG8gdGhhdCwgb3RoZXIgdGhhbiB0byBtYWtlIGEgYml0IG9mIG1vbmV5IG9mZiBpdC4gV2l0aCA0JSBpbnRlcmVzdCBwZXIgYW5udW0sIHNoZSB3b3VsZCBtYWtlICQxLDgwMCBpbiBpbnRlcmVzdCBvZmYgdGhlIGZpcnN0IHllYXIgYWxvbmUsIGFuZCBhc3N1bWluZyBhbm51YWxseSBjb21wb3VuZGluZyBpbnRlcmVzdCwgc2hlIGNvdWxkIGdldCBhIGZhaXIgYml0IG9mZiB0aGF0LiAKRG9uIHJ1c2ggdG8gR1RPIGJlY2F1c2UgZXZlcnlvbmUgImRvaW5nIGl0Ii4gCkZpbGxhbnplYSAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpUaGUgZ2lmdHMgYXQgdGhpcyBvbmUgd2VyZSBhbGwgdW5kZXIgJDIwLCBub3RoaW5nIHJlYWxseSBmYW5jeS4gQ0IgZW5kcyB1cCB3aXRoIGEgc2NhcmYgYW5kIGxpa2VzIGl0LCBidXQgdGhlbiBhbm90aGVyIGZyaWVuZCwgbGV0J3MgY2FsbCBoaW0gQWRhbSwgZ2V0cyB0aGlzICQyMCBTdGFyYnVja3MgZ2lmdCBjYXJkLiAKRnJvbSB3aGF0IGkgbGVhcm5lZCBmcm9tIHRoaXMgcG9zdCBhbmQgcmVhZGluZyBzdHVmZiBvbiB0aGUgbmV0LApBIHdvbWFuIG1heSBoYXZlIGRlbGF5cyBpbiBoZXIgcGVyaW9kIGV2ZW4gd2hlbiBzaGUgaXNuJ3QgcHJlZ25hbnQuIApUaGF0IHNhaWQgaXQgYWxsIGFkZHMgdG8gdGhlIGNvc3QuIApCdXQgaGVhdnkgZ2FtYmxlcnMgYXJlIHRoZXNlIGNvbXBhbmllcycgYmVzdCBjdXN0b21lcnMuIEFib3V0IDYwIHBlciBjZW50IG9mIHBva2VyIG1hY2hpbmUgcmV2ZW51ZSBjb21lcyBmcm9tIHRoZSBoZWF2aWVzdCAxNSBwZXIgY2VudCBvZiB1c2VycywgYW5kIHRoZSBvbmUgb3IgdHdvIHBlciBjZW50IG9mIHByb2JsZW0gZ2FtYmxlcnMgY29udHJpYnV0ZSBhIHRoaXJkIG9mIHRoYXQgcmV2ZW51ZS4gQW55IHNlcmlvdXMgbWVhc3VyZXMgdG8gZGlzY291cmFnZSBoZWF2eSBnYW1ibGluZyByaXNrcyBhIHNoYXJlaG9sZGVyIGJhY2tsYXNoLi4gCkkgaGF2ZSBjb21iaW5hdGlvbiBza2luLiAKKHZpKSBCYXJkb2xpIChHdWphcmF0KSBubyB0YXggY2FtcGFpZ24gKHZpaSkgRGFuZGkgKEd1amFyYXQgKSBDaXZpbCBEaXNvYmVkaWVuY2UgTW92ZW1lbnQuIEIuIEdFT0dSQVBIWSBPdXRsaW5lIFBvbGl0aWNhbCBNYXAgb2YgSW5kaWEgQ2hhcHRlciA6IDUgTWluZXJhbCBhbmQgRW5lcmd5IFJlc291cmNlcy4gCkhpZ2ggcXVhbGl0eSBDb21wYW55LCB3aGljaCBwcm92aWRlcyBhIGxvdCBvZiBnYW1lcyB0byBjaG9vc2UgZnJvbSBwb3B1bGFyIGdhbWVzIHN1Y2ggYXMgcm91bGV0dGUsIGJsYWNramFjaywgYmFja2dhbW1vbiwga2VubywgcG9rZXIgYW5kIHNsb3QgbWFjaGluZXMsIHN1Y2ggYXMgdGhlc2UgY29tcGFuaWVzLCBieSBjcmVhdGluZyBhIHByb2Zlc3Npb25hbCBmdWxsIHNpemUgdGFibGUgaW4gdGhlIGNhc2lubywgdG8gcHJvdmlkZSBpbnRlcmFjdGl2ZSBnYW1pbmcgZXhwZXJpZW5jZS4gCkkgaGFkIHdhdGNoZWQgSmVzc2ljYSBtaW5kIGRldGVyaW9yYXRlIGZvciBzZXZlbiB5ZWFycy4gCiJZb3UgY2FuIGJlIGEgbWlsbGlvbmFpcmUsIGJ1dCB3aXRob3V0IGNoYXJpdHJhIGFuZCBpenphdCwgeW91IGhhdmUgbm90aGluZywiIGhlIHNhaWQuIEkgZG8gc29tZXRoaW5nIHRvIGJyaW5nIHNoYW1lIHRvIG15IGZhbWlseSBuYW1lLCBteSBkYXVnaHRlcnMgd291bGQgbm90IGJlIGFibGUgdG8gbWFycnkuIgpJIHRoaW5rIHRoYXQgaXQgd291bGQgYmUgZ3JlYXQgaWYgd2UgaGFkIGVmZmljaWVudCBtZWFucyBmb3IgdGhvc2UgZW5lcmdpZXMsIGJ1dCB3ZSBkb250IHlldC4gSXQgd291bGQgbm90IHdvcmsgb24gYSBsYXJnZSBzY2FsZSBhdCB0aGlzIHBvaW50LiAKQXMgcGFydCBvZiBwbGFucyB0byB0dXJuIGFyb3VuZCB0aGUgZm9ydHVuZXMgb2YgdGhlIGNvdW5jaWwgb3duZWQgYW5kIG9wZXJhdGVkIGdvbGYgY291cnNlLCB3aGljaCBoYXMgY29zdCBTaGVsbGhhcmJvdXIgcmF0ZXBheWVycyAkN21pbGxpb24gb3ZlciB0aGUgcGFzdCBkZWNhZGUsIGNvdW5jaWxsb3JzIGxhc3QgeWVhciBhZ3JlZWQgdG8gc3BlbmQgJDFtaWxsaW9uIHRvIGFjcXVpcmUgMTAgcG9rZXIgbWFjaGluZXMgZm9yIHRoZSBmYWNpbGl0eS4KQSBjcm93ZCBvZiBhYm91dCA1MCwwMDAgYnJhdmVkIG1pbnVzIDJDIHRlbXBlcmF0dXJlcyB0byB3YXRjaCB0aGUgMiAxLzIgaG91ciBwcm9jZXNzaW9uIG9mIDMsMDAwIG1hcmNoZXJzIHJlcHJlc2VudGluZyA3MCBlbnRyaWVzLCBmcm9tIGRyYWdvbnMgYW5kIGxpb24gZGFuY2VycyB0byBiYW5kcywgaW5jbHVkaW5nIHR3byBwaXBlIGFuZCBkcnVtIHVuaXRzLiBhdCBNaWxsZW5uaXVtIEdhdGUgdG8gdGhlIHNvdW5kIG9mIGEgdHJhaW4gb2YgZmlyZWNyYWNrZXJzIHB1bGxlZCBiZWhpbmQgdGhlIGxlYWQgdHJ1Y2suIDEwLCAyMDE5LktpZHMgYWxzbyByZWxpc2hlZCB0aGUgY2FuZGllcyBpbnNpZGUgdGhlIHJlZCBlbnZlbG9wZXMgaGFuZGVkIG91dCBieSBkaWduaXRhcmllcywgcG9saXRpY2lhbnMgYW5kIFZhbmNvdXZlciBQb2xpY2UgQ2hpZWYgQWRhbSBQYWxtZXIuaXMgb25lIG9mIHRoZSBtb3N0IGRpdmVyc2UgY2l0aWVzIGluIHRoZSB3b3JsZCBhbmQgdGhlIFZhbmNvdXZlciBQb2xpY2UgRGVwYXJ0bWVudCBpcyBzbyBkaXZlcnNlLCB0b28sIHRoZSBjaGllZiBzYWlkLiBlbmdhZ2VtZW50IGlzIGEgYmlnIHBhcnQgb2Ygd2hhdCB3ZSBkby53ZSB0YWtlIG91ciB1bmlmb3JtcyBvZmYsIHdlIGp1c3QgbGlrZSBldmVyeW9uZSBlbHNlLiBNYXlvciBLZW5uZWR5IFN0ZXdhcnQgbWFyY2hlZCwgYXMgZGlkIGZlZGVyYWwgY2FiaW5ldCBtaW5pc3RlciBKb2R5IFdpbHNvbiBSYXlib3VsZDsgTVAgYW5kIG5ldyBkYWQgVGVycnkgQmVlY2ggKEJ1cm5hYnkgTm9ydGggU2V5bW91cik7IGFuZCBNTEFzLkZlZGVyYWwgTkRQIExlYWRlciBhbmQgQnVybmFieSBTb3V0aCBieWVsZWN0aW9uIGNhbmRpZGF0ZSBKYWdtZWV0IFNpbmdoIHdhcyBhbHNvIG9uIGhhbmQuVmFuY291dmVyIE1heW9yIEtlbm5lZHkgU3Rld2FydCAobCkgYW5kIFN2ZW5kIFJvYmluc29uIGluIGFjdGlvbiBkdXJpbmcgdGhlIDQ2dGggVmFuY291dmVyIENoaW5hdG93biBTcHJpbmcgRmVzdGl2YWwgUGFyYWRlIGluIFZhbmNvdXZlciwgQkMuLCBGZWJydWFyeSAxMCwgMjAxOS5BZnRlciBsZWF2aW5nIE1pbGxlbm5pdW0gR2F0ZSBhbmQgaGVhZGluZyBkb3duIEVhc3QgUGVuZGVyLCB0aGUgcGFyYWRlIHR1cm5lZCBvbnRvIEdvcmUgYW5kIHRoZW4gb250byBLZWVmZXIgc3RyZWV0cy4gTm8gb25lIHNlZW1lZCB0byBjb21wbGFpbiB0b28gbXVjaCBhYm91dCB0aGUgY29sZCwgYSBjb3VwbGUgb2Ygb25sb29rZXJzIHdlcmUgZXZlbiB3ZWFyaW5nIHNob3J0cy5TYWlkIFJheW1vbmQgTHUsIGEgbWVtYmVyIG9mIHRoZSBOb3J0aCBBbWVyaWNhbiBDaGluZXNlIExpb24gRGFuY2UgVGVhbSwgdGFraW5nIHBhcnQgaW4gaGlzIGZpZnRoIENoaW5lc2UgTmV3IFllYXIgcGFyYWRlOiB3ZWF0aGVyIGRvZXNuIGFmZmVjdCB1cywgcmFpbiBvciBzaGluZS5wcmVmZXIgdGhpcyB0byB0aGUgcmFpbiwgTHUgYWRkZWQgYXMgdGhlIGZpcnN0IGZsYWtlcyBvZiB0aGUgY29taW5nIGZsdXJyeSBiZWdhbiB0byBmYWxsLlBlb3BsZSBjYW1lIGZyb20gYWxsIG92ZXIgdGhlIExvd2VyIE1haW5sYW5kIGFuZCwgZ29pbmcgYnkgdGhlIG51bWJlciBvZiBsYW5ndWFnZXMgYmVpbmcgc3Bva2VuLCBhIGxvdCBvZiB0b3VyaXN0cyB3ZXJlIGluIGF0dGVuZGFuY2UgYXMgd2VsbC4KSSdtIGhvcGluZyBpdCdzIGp1c3QgYSBwaGFzZS4gClRoZSBjaGFuY2UgdGhhdCB5b3UnbGwgbmV4dCBkcmF3IGEgc3BhZGUgZnJvbSB0aGUgZGVjayBpcyAxMy81MTogVGhlcmUgYXJlIG5vdyBvbmx5IDUxIGNhcmRzIGluIHRoZSBkZWNrLCBzaW5jZSB5b3UgYWxyZWFkeSB0b29rIGEgaGVhcnQgb3V0LiBOb3cgdGhhdCB3ZSBoYXZlIHRoZSBpbmRpdmlkdWFsIHByb2JhYmlsaXRpZXMsIHdlIGp1c3QgbXVsdGlwbHkgdGhlbS4gMS80ICAxMy81MSA9IDEzLzIwNCBUaGlzIHdvdWxkIGxvb2sgbXVjaCBuaWNlciBhcyBhIHBlcmNlbnRhZ2UsIHNvIHdlJ2xsIG11bHRpcGx5IGJ5IDEwMCBhbmQgcmVwb3J0IHRoZSBhbnN3ZXIgYXMgYSBkZWNpbWFsOiAxMy8yMDQgIDEwMCA9IDYuMzclIFRodXMsIHRoZXJlIGlzIGEgNi4zNyUgY2hhbmNlIHRoYXQgeW91IHdpbGwgZHJhdyBhIGhlYXJ0IGZvbGxvd2VkIGJ5IGEgc3BhZGUgZnJvbSBhIHNodWZmbGVkIGRlY2sgb2YgY2FyZHMuIChGdWxsIEFuc3dlcikKQWxzbyBJIHdvdWxkIGxpa2UgdG8gYWRkcmVzcyBhIGNvbW1lbnQgbWFkZSBlYXJseSBhYm91dCB3aHkgZGlkbid0IG15IHdpZmUgbGVhdmUgbWU6ClRoZSBicmllZmVzdCBiYWNrZ3JvdW5kIGhlcmUgc2hvd3MgdGhhdCB0aGUgbW9zdCBwb3B1bGFyaXppbmcgaWRlYSBvZiBsaWZlIG9uIE1hcnMgY2FtZSBhYm91dCBhcyBhIG1pc3RyYW5zbGF0aW9uL2ludGVycHJldGF0aW9uIG9mIGFzdHJvbm9tZXIgR2lvdmFubmkgU2NoaWFwYXJlbGxpIG9ic2VydmluZyB0ZXJtICJjYW5hbGkiIHRvIGJlICJjYW5hbHMvY2hhbm5lbHMiLCBtZWFuaW5nIGFuIGludGVsbGlnZW50IGxpZmUgZm9ybSBleGlzdGVkIG9uIHRoZSBwbGFuZXQgY2FwYWJsZSBvZiBjb25zdHJ1Y3RpbmcgbGFyZ2UgdGVjaG5vbG9naWNhbCBmb3Jtcy4gV2VsbGVzIFdhciBvZiB0aGUgV29ybGRzLiAKVGhpbmsgRGlzbmV5LiAKSSBjYW4gc2VlIHRoZSB3ZWRkaW5nIHZvd3Mgbm93OiB0d28gYmVhdXRpZnVsIHlvdW5nIHdvbWVuIGluIHdoaXRlIGRyZXNzZXMgbG92aW5nbHkgY29tbWl0dGluZyB0aGVtc2VsdmVzIHRvIGVhY2ggb3RoZXIgaW4gd2VkZGVkIGJsaXNzIGFuZCB0aGVuLCBieSB0aGUgcG93ZXIgdmVzdGVkIGluIHRoZSBvZmZpY2lhbnQgYnkgdGhlIHN0YXRlLCBiZWluZyBmb3JjZWQgdG8gZW5kIHdpdGggdGhlIHdvcmRzICJJIGRvIGFuZCBObyBIb21vLiIuIAoiT25lIFdvcmQgRXh0aW5ndWlzaGVyIiBoYXMgYWx3YXlzIGVtb3Rpb25hbGx5IHJlc29uYXRlZCB3aXRoIG1lIGhlYXZpbHkgICBhbmQgbm8gb3RoZXIgb2YgSGVycmVuIHByb2plY3RzIGhhcy4gWWVzLCBub3QgZXZlbiAiRXh0aW5ndWlzaGVkIi4gQW5kIHRoaXMgRVAuIGl0IGZ1biEgUmVsZWFzZWQgYmV0d2VlbiBoaXMgZmlyc3QgdHdvIGFsYnVtcywgdGhlIGdlbmVyYWwgc3R5bGUgaXMgdmVyeSByZWNvZ25pemFibGUsIGJ1dCBpdCBkb2VzbiBzb3VuZCByZWhhc2hlZCwgdGhhbmtmdWxseS4gVGhlIGxhc3QgdHJhY2sgY291bGQgaGF2ZSBlYXNpbHkgYmVlbiBhIChncmVhdCEpIHBhcnQgb2YgT1dFLCBldmVuIGlmIGl0cyBoZWF2eSBiZWF0IHdvdWxkIGhhdmUgbWFkZSBpdCBzdGFuZCBvdXQuIERlZmluaXRlbHkgdGhlIGhpZ2hsaWdodC4gTm8gaWRlYSB3aGF0IHRoZSBFUCB0aXRsZSByZWZlcnMgdG8uCkkgYW0gMTAwJSBjb252aW5jZWQgdGhhdCBUcnVtcCBjb3VsZCBkZWNsYXJlIG1hcnRpYWwgbGF3IGFuZCBiZWdpbiBsb2NraW5nIHVwIGV2ZXJ5IGRlbW9jcmF0L2xpYmVyYWwvcHJvZ3Jlc3NpdmUgYW5kIHRoZXkgd291bGQgZnJvdGggYXQgdGhlIG1vdXRoIHdpdGggdW5icmlkbGVkIGhhcHBpbmVzcyBjaGFudGluZyAiVVNBIFVTQSBVU0EiIGV2ZXJ5IHN0ZXAgb2YgdGhlIHdheS4KV2l0aCBBcnRpZmFjdCwgZXNwZWNpYWxseSBhZnRlciB0aGlzIGJhbGFuY2UgdXBkYXRlLCB0aGUgZGVjayBidWlsZGluZyBET0VTIGZlZWwgcmVhbGx5IGdvb2QgYnV0IHRoZSBnYW1lIG5ldmVyIGZlZWxzIGxpa2UgYSBkZWNrIGJ1aWxkaW5nIHNpbXVsYXRvci4gClRoZXNlIGluY2x1ZGVkIG1hbnkgYWNjZXNzaWJsZSB3YWxrcyBkZXNpZ25lZCB0byBiZSBzdWl0YWJsZSBmb3Igd2hlZWxjaGFpcnMsIHB1c2hjaGFpcnMgZXRjLiAKUGVvcGxlIG1heSBsYXVnaCBhYm91dCB0aGUgc2V4dWFsaXphdGlvbiBvZiBzcGFzICAgaGFwcHkgZW5kaW5ncyBvciBsb2NrZXIgcm9vbSBvcmdpZXMgdGhlIHZhc3QgbWFqb3JpdHkgb2YgcGVvcGxlIGdvIHRvIHNwYXMgZm9yIGhlYWxpbmcgYW5kIHJlbGF4YXRpb24gICBub3Qgc2V4LCBHb2xkYmVyZyBhZGRlZC4KSSB0aGluayBwZXJoYXBzIGl0IGhhcy4gUGVyaGFwcyBzb21lIHBlb3BsZSB3b3VsZCBqdXN0IGdvLCAnT2gsIGhlJ3MgdGhlIGd1eSB3aG8gZGlkIHRoYXQsIGFuZCBJIGhlYXJkIHRoYXQgdG9vIG11Y2ggb3IgZGlkbid0IGxpa2UgaXQ7IEknbSBub3QgZ29pbmcgdG8gbGlrZSBhbnkgb2YgaGlzIG90aGVyIHN0dWZmLicgUGVyaGFwcyB5b3UncmUgcmlnaHQuIApUaGUgcHVycG9zZSBvZiB0aGlzIHN0dWR5IHdhcyB0byBwcm92aWRlIGRldGFpbHMgb2YgcXVhZHJpY2VwcyBhbmQgaGFtc3RyaW5nIG11c2NsZSBpbmFjdGl2aXR5IGFuZCBhY3Rpdml0eSBkdXJpbmcgbm9ybWFsIGRhaWx5IGxpZmUgb2Ygb3JkaW5hcnkgcGVvcGxlLiAKQnV0IHN0cmFpZ2h0IE1yIGxpc3RlbiB0byBtZSBkaWQgbm90IHJlcXVpcmVtZW50IHRvLCBiZWNhdXNlIEkgYmFzaWNhbGx5IGhhZCBubyByaWdodCB0byB3ZWFyIHVuZGVyd2Vhci4gSGUgc3RvcHBlZCB0aGUgamFsb3B5IGFuZCBzYWlkOiAiRG8gb3V0IG1vZGVkISIuIApTZWxvbiBsZSBsZXhpcXVlIGp1cmlkaXF1ZSBEYWxsb3osIHVuIHRhYmxpc3NlbWVudCBwdWJsaWMgaW5kdXN0cmllbCBldCBjb21tZXJjaWFsIHNlIGRmaW5pdCBjb21tZSB1bmUgY2F0Z29yaWUgY29udHJvdmVyc2UgZCdFUCBncmFudCwgZGFucyBkZXMgY29uZGl0aW9ucyBjb21wYXJhYmxlcyAgY2VsbGVzIGRlcyBlbnRyZXByaXNlcyBwcml2ZXMsIGRlcyBhY3Rpdml0cyBkZSBuYXR1cmUgaW5kdXN0cmllbGxlIG91IGNvbW1lcmNpYWxlLiBMZXVyIGZvbmN0aW9ubmVtZW50IGV0IGxldXIgY29udGVudGlldXggZW1wcnVudGVudCAgbGEgZm9pcyBhdSBkcm9pdCBwdWJsaWMgZXQgYXUgZHJvaXQgcHJpdi4gTGVzIHNlcnZpY2VzIGRlcyBwb3N0ZXMgZXQgZGVzIHRsY29tbXVuaWNhdGlvbnMsIG9udCB0IGV4dHJhaXRzIGRlIGwnYWRtaW5pc3RyYXRpb24gY2VudHJhbGUgcG91ciB0cmUgcmlncyBwYXIgbGEgbG9pIGR1IDIganVpbGxldCAxOTkwICh2b2lyIGRjcmV0IG4gMTExMSBkdSAxMiBkY2VtYnJlIDE5OTApIGVuIHVuIHRhYmxpc3NlbWVudCBwdWJsaWMgaW5kdXN0cmllbCBldCBjb21tZXJjaWFsIChFUElDKS4gCklsIGEgZmFsbHUgZW5jb3JlIGR1IHRlbXBzLiBKZSBsJ2FpIGludGVydmlldyBwb3VyIG1vbiBibG9nICBwcm9wb3MgZHUgZ2x1dGVuLCBqZSBsJ2FpIHJlbmNvbnRyIGF1IHNhbG9uIE9tbml2b3JlLiAKQWxsIHRoZXNlIHBlb3BsZSB3YW50IHRoZSBzYW1lIHRoaW5nLCByZWNvZ25pdGlvbiBhbmQgbW9uZXkuIElmIHRoZXkgY2FuIG1ha2UgbW9uZXkgZnJvbSB0aGlzIGdhbWUsIHRoZXkgd2lsbCBiZSB0aGUgaGFwcGllc3QgcGVyc29uIGluIHRoZSB3b3JsZC4gCkN1cnJlbnRseSwgaGUncyBpbnRlcm5pbmcgYXQgUmlmZidzIFVyYmFuIEZhcmUgYXMgcGFydCBvZiBoaXMgc2Nob29sd29yayBhbmQgcGlja2luZyB1cCBza2lsbHMgdGhhdCB3aWxsIHN0YXkgd2l0aCBoaW0gbG9uZyBhZnRlciBoZSdzIHJlY2VpdmVkIGhpcyBoaWdoIHNjaG9vbCBkaXBsb21hLi4gCkFuIGFtYXppbmdseSBzaW1wbGUgdGVjaG5pcXVlIHRvIGxlYXJuLCB0aGUgYWJpbGl0eSB0byB1c2UgUmVpa2kgaXMgbm90IHRhdWdodCBpbiB0aGUgdXN1YWwgc2Vuc2UsIGJ1dCBpcyB0cmFuc2ZlcnJlZCB0byB0aGUgc3R1ZGVudCBkdXJpbmcgYSBSZWlraSBjbGFzcy4gClRoZSBDYXNlCkFzayB3aGljaCB0aGV5IHNlbGwgdGhlIG1vc3Qgb2YuIApJIHN1c3BlY3Qgc29tZSBvZiB0aGUgdGhpbmdzIHlvdSBoYXZlIGJlZW4gZG9pbmcgdG8gZGVhbCB3aXRoIHRoZSBpc3N1ZSBtYXkgaGF2ZSBiZWVuIG1ha2luZyBpdCB3b3JzZS4gCldlc3RmaWVsZCBTdHJhdGZvcmQgQ2l0eSBpbiBFYXN0IExvbmRvbiBpcyBub3QgTGFzIFZlZ2FzICAgZXZlbiBpZiB0aGUgcGVvcGxlIHdobyBwb3B1bGF0ZSBpdCBzZWVtIHRvIHNoYXJlIHRoZSBzYW1lIGFmZmVjdGlvbiBmb3IgYXRobGVpc3VyZSB3ZWFyLiBJdCBpcywgaG93ZXZlciwgaG9tZSB0byBBc3BlcnMgQ2FzaW5vLCBhIDY1LDAwMCBzcXVhcmUgZm9vdCBnYW1pbmcgc3BhY2Ugd2l0aCB3YWxsIHRvIHdhbGwgc2xvdCBtYWNoaW5lcywgNTUgdGFibGUgYW5kIHBva2VyIGdhbWVzLCBhbmQsIG9uIHRoZSB3ZWVrZW5kIEkgbWFkZSBhbiBpbXByb21wdHUgYXBwZWFyYW5jZSBhdCB0aGUgODg4UG9rZXIgTElWRSBGZXN0aXZhbCBMb25kb24gTWFpbiBFdmVudCBpbiB0aGUgcG9rZXIgcm9vbSBsYXN0IE9jdG9iZXIsIGhlYXZpbmcgd2l0aCBodW1hbml0eSBhbmQgb3V0IHRoZXJlIG9wdGltaXNtLiAKU2Vjb25kLCBJIHdvdWxkIHB1dCAkMTAwIHdvcnRoIG9mICJEZW1vY3JhY3kgRG9sbGFycyIgaW50byB0aGUgaGFuZHMgb2YgdGhlIEFtZXJpY2FuIHBlb3BsZSBlYWNoIHllYXIgdGhhdCBjYW4gb25seSBiZSBjb250cmlidXRlZCB0byBwb2xpdGljYWwgY2FuZGlkYXRlcy4gVGhpcyB3b3VsZCB3YXNoIG91dCB0aGUgaW5mbHVlbmNlIG9mIGNvcnBvcmF0ZSBTdXBlciBQQUMgbW9uZXkgYnkgbWFraW5nIHBvbGl0aWNhbCBsZWFkZXJzIG1vcmUgcmVzcG9uc2l2ZSB0byB0aGUgQW1lcmljYW4gcGVvcGxlLiAKQW5kIHRoZW4gdGhlIGhlYXJ0IGJlZ2lucyBiZWF0aW5nIGZhc3RlciBhbmQgZmFzdGVyIGFuZCBJIHN0YXJ0aW5nIHRvIHF1aWV0bHkgcGFuaWMgaW5zaWRlLiAKV2hlbiB0aGUgc2VhcmNoIGJlZ2FuLCBJIGtuZXcgdmVyeSBsaXR0bGU6IHRoZSBuYW1lICJNaWNrZXkiIGFuZCB0aGUgY2F1c2UgYW5kIGNpcmN1bXN0YW5jZXMgb2YgaGlzIGRlYXRoLiAKQ29weWluZyBhbmQgY29tbWVyY2lhbGl6aW5nIHN0cmVldCBhcnQsIG11c2ljLCBwb2V0cnkgb3IgYW55IGZvcm0gb2YgYXJ0IHJlYWxseSBpcyBiaXRpbmcuIApJdCBiZWdhbiBpbiAxOTk5IHdpdGggb25seSBhIGZldyB2b2x1bnRlZXJzLCBob3JzZXMsIGFuZCByaWRlcnMsIGFuZCBoYXMgZ3Jvd24gaW50byB0aGUgbGFyZ2VzdCBzdWNoIHByb2dyYW0gaW4gU291dGhlcm4gTWFyeWxhbmQuIFNpbmNlIGl0cyBpbmNlcHRpb24gdGhlIHByb2dyYW0gaGFzIHJlYWNoZWQgbW9yZSB0aGFuIDgwMCBwYXJ0aWNpcGFudHMuLiAKVGhpcyB3YXMgdGhlIHJlc3VsdCBvZiBjYWxsb3VzIGRlcmVndWxhdGlvbi4gVGhlIGludGVyZXN0aW5nIHRoaW5nIGlzIHRoYXQgbm8gb25lIG9mIHRoZXNlIHJlZ3VsYXRvcnkgZWZmb3J0cyBicm91Z2h0IGRvd24gdGhlIGhvdXNlLiBJdCBsaWtlIGFza2luZyB3aGljaCB0ZXJtaXRlIGlzIHJlc3BvbnNpYmxlIGZvciBjaGV3aW5nIHRoZSBsYXN0IGJpdCBvZiBhIHN0cnVjdHVyYWwgYmVhbSB0aGF0IGhlbGQgdGhlIGhvdXNlIHRvZ2V0aGVyLiAKSSByZWFkIGNvdW50bGVzcyBhcnRpY2xlcyBhbmQgaGFkIG5vdGVib29rcyBmdWxsIG9mIGluZm8sIGFkZHJlc3NlcywgY29ubmVjdGlvbnMsIGZhbWlseSB0cmVlcy4gCkkgd291bGQgc2F5IHN0dWR5IHdpdGggTWFuaGF0dGFuLCBmaWd1cmUgb3V0IHdlYWtuZXNzZXMgYW5kIHNob3JlIHRoZW0gdXAsIHRoZW4gdGFrZSBvbmUgb2YgdGhlIEdNQUMgQ0FUcyB3aGVuIHlvdSBiYXNpY2FsbHkgZmVlbCBsaWtlIHlvdSByZWFkeSBmb3IgdGhlIHJlYWwgdGhpbmcuLiAKU3lyYWN1c2UgSGVyYWxkIE5ld3NwYXBlciBBcmNoaXZlcwpBIGwnYXBwdWkgZGUgbGEgbWRpYXRpc2F0aW9uIGQnYWZmYWlyZXMgZGUgc3ZpY2VzIHN1ciBsZXMgYW5pbWF1eCBldCBzb3VzIGxhIHByZXNzaW9uIGRlcyBhc3NvY2lhdGlvbnMgZGUgZGZlbnNlIGRlcyBhbmltYXV4LCBsZSBkcm9pdCBkZSBsJ2FuaW1hbCBhcHBhcmF0IGRzb3JtYWlzIGNvbW1lIHVuZSBwcm9jY3VwYXRpb24gc29jaXRhbGUuIApLZWxseSBzdWdnZXN0ZWQgZHVyaW5nIHRoZSBpbnRlcnZpZXcgdGhhdCBoZXIgcGFyZW50cyB3ZXJlIGluIGl0IGZvciB0aGUgbW9uZXkgYW5kIGJsYW1lZCB0aGVtIGZvciBoaXMgcmVsYXRpb25zaGlwIHdpdGggdGhlaXIgZGF1Z2h0ZXIsIHNheWluZyB0aGV5IGJyb3VnaHQgaGVyIHRvIHdhdGNoIGhpbSBwZXJmb3JtIHdoZW4gc2hlIHdhcyBhIHRlZW5hZ2VyLi4gCkEgc3lzdGVtYXRpYyByZXZpZXcgdG8gYXNzZXNzIHRoZSBzY2llbnRpZmljIGxpdGVyYXR1cmUgcmVsYXRlZCB0byB0aGUgZWZmaWNhY3kgb2Ygc3BpbmFsIG1hbmlwdWxhdGlvbiBmb3IgYWN1dGUgbG93IGJhY2sgcGFpbi4KRmVlbGluZyBleHRyYXZhZ2FudD8gVGhlbiBhZGQgMiBkcm9wcyBvZiB5b3VyIGNob2ljZSBvZiBhbiBleHBlbnNpdmUgZXNzZW50aWFsIG9pbCBzdWNoIGFzIGphc21pbmUgb3Igcm9zZS4gClNlZiwgYWJvdmUgYWxsLCBqdXN0IHdhbnRlZCB0byBiZSB3aXRoIHBlb3BsZS4gSXQgZGlkbiBtYXR0ZXIgaWYgeW91IHdlcmUgb3V0IGhpa2luZyBhIHRyYWlsIG9yIGp1c3Qgc2l0dGluZyBvbiB0aGUgY291Y2ggd2F0Y2hpbmcgVFYuIApVbnRpbCBpdCBjYW4gYmUgcHJvdmVuIG90aGVyd2lzZS4gWW91IHByb2JhYmx5IHNob3VsZCB0b28sIHZlcnN1cyBqdXN0IGp1bXBpbmcgdG8gdXAsIHB1c3N5LiAKUGVvcGxlIGV2ZW4gc2FpZCwgSSBtaWdodCB0YWtlIG9mZiB3b3JrIGZvciBhIGZldyBkYXlzIGFuZCBtYWtlIHN1cmUgSSBjYW4gZ2V0IHRvIGEgbG90IG9mIHRoZXNlIGV2ZW50cy4gCkFuIG9mZmljaWFsIGRpcmVjdGx5IGZhbWlsaWFyIHdpdGggdGhlIHByb2Nlc3MgaW4gcmVjZW50IHllYXJzLCBzYXlzIG9uZSBwcmV2aW91cyBKb2ludCBDaGllZnMgQ2hhaXJtYW4gcmVndWxhcmx5IGxvb2tlZCBvdmVyIGF0IHRoZSBDaGllZiBKdXN0aWNlIGF0IHRoZSB0aW1lLiAKQW5vdGhlciB0aGluZyB5b3Ugc2hvdWxkIHVuZGVyc3RhbmQgYmVmb3JlIHlvdSBtYWtlIHRoZSBwdXJjaGFzZSBpcyB0aGF0IGl0IGhhcyBhbiBBQyBwb3dlciBhZGFwdGVyOyBidXQgZm9yIHVzZSBvbiB0aGUgcm9hZCwgeW91J2xsIG5lZWQgM0FBIGJhdHRlcmllcy4gCkluIGFkZGl0aW9uLCBmaW5nZXJuYWlscyBncm93IGF0IGEgZ3JlYXRlciBjbGlwIGluIHRoZSBzdW1tZXIsIGZvciB0aGUgeW91bmcsIGFuZCBzbG93ZXIgZm9yIG9sZGVyIHBlb3BsZSBhbmQgaW4gdGhlIHdpbnRlci4gCklrIHplZyA6ICdHZWxkIHRyZWt0IGFsbGVzIHJlY2h0IHdhdCBrcm9tIGlzJy4gV0lKIFdJTExFTiBOVSEgV0lKIFdJTExFTiBOVSEgV0lKIFdJTExFTiBOVSEgV2F0IHZvb3IgZGUga2FuIG1vZXQgb29rIHZvb3IgZGUgYW5kZXIga3VubmVuIHdhbnQgbWlqbiBraW5kZXJlbiBlbiBtaWpuIGVjaHRnZW5vdGUgemllbiBtaWogb29rIGdyYWFnIGVuIHdpbGxlbiBtZSBldmVubWluIHppZW4gYWZ0YWtlbGxlbiBlbiBzdGVydmVuLiAKSSBoYXZlIGdvdHRlbiBtYW55IGNvbW1pc3Npb25zL2NvbnRyYWN0cyBiZWNhdXNlIHNvbWVvbmUgc2F3IG15IHdvcmsgcG9zdGVkIG9uIHJlZGRpdCBvciB0d2l0dGVyICh3aGljaCBJIGRvbiBldmVuIHVzZSkgYW5kIHRoZXkgbG9va2VkIG1lIHVwLkkgZG9uIGV2ZW4gdGhpbmsgaXQgdXAgZm9yIGRlYmF0ZSBhbnltb3JlIHRoYXQgcGVvcGxlIGFyZSBtb3JlIGxpa2VseSB0byB2aWV3IGEgZGlyZWN0IGltYWdlIGxpbmsgdGhhbiB0byBicm93c2Ugc29tZSB3ZWJzaXRlIHRoYXQgbWlnaHQgcmVxdWlyZSBhIGxvZ2luIChsb29raW5nIGF0IHlvdSBQaXhpdikuIApUaGUgaW1wYWN0IG9mIE1vb3JlJ3MgTGF3IFt0aGUgaWRlYSB0aGF0IGNvbXB1dGluZyBwb3dlciBkb3VibGVzIGV2ZXJ5IHR3byB5ZWFyc10gYmVjb21lcyBtb3JlIHByb25vdW5jZWQuICBOb3Qgb25seSB0aGUgZmFtb3VzIE1vb3JlJ3MgTGF3IGJ1dCBhbGwgdGhlIHZhcmlhdGlvbnMgb2YgaXQsIGluIGFsbCB0aGUgZGlmZmVyZW50IHBhcnRzIG9mIHRoZSBpbmR1c3RyeS4gCk9QLCB5b3UndmUgbWFycmllZCBhICJicm8iLiBBbmQgYnJvcyBtYWtlIHRlcnJpYmxlIGh1c2JhbmRzLCBhbmQgdHJ1bHkgZGlzYXN0cm91cywgZXZlbiBkYW5nZXJvdXMgZmF0aGVycy4gCkJpelRhbGsgZG9lc24gZGlzdGluZ3Vpc2hlZCBmaWVsZHMgd2hlbiBjb25zaWRlcmluZyBob3cgdG8gcm91dGUgYSBtZXNzYWdlLi4gCk92ZXJ2aWV3IGZvciBBcm1hZGlsbG8xOQpJdCBqdXN0IG1ha2VzIHRob3NlIG9mIHVzIHdobyBkbyB1bmRlcnN0YW5kIGxvb2sgbGlrZSB3ZSdyZSBidXlpbmcgaW50byBzb21lIGtpbmRhIHNuYWtlIG9pbCBhbmQgd2UgaGF2ZSBubyBjbHVlIHdoYXQgd2UncmUgdGFsa2luZyBhYm91dCwgd2UncmUganVzdCB0cnlpbmcgdG8gZ2V0IGhpZ2ggYW5kIGJsYW1lIGl0IG9uIHNvbWV0aGluZyBlbHNlLiBJdCdzIGZydXN0cmF0aW5nIGJ1ZGR5IGhhaGEsIGJ1dCBJJ20gc29ycnkgaWYgSSBjYW1lIGFjcm9zcyBsaWtlIEkgd2FzIGF0dGFja2luZyB5b3UsIG5vdCBteSBpbnRlbnRpb24gYXQgYWxsIS4gClRoZSBkYXVnaHRlcnMgZG9uIHNwZWFrIHRvIGVhY2ggb3RoZXIgYW55bW9yZSBhbmQgdGhlIHJlbGF0aW9uc2hpcCB3aXRoIG90aGVyIGRhdWdodGVyIGlzIHN0cmFpbmVkIGF0IGJlc3QuIEJ1dCB3aGVuIHNoZSB0YWxrcyBhYm91dCB0aGVtLCB0aGV5IGFsd2F5cyB0aGUgIkxpdHRsZSBHaXJscyIgKG5vbiBFbmdsaXNoIHNwZWFrZXIpLiAKTWF5YmUgYnkgdGhlIHRpbWUgd2UgZ2V0IGEgS2FtYWxhIEtoYW4gbW92aWUgZ2VuZGVyIHdvdWxkbiBiZSBzb21ldGhpbmcgcGVvcGxlIHdpbGwgb25seSB0YWxrIGFib3V0LiAKTW1lIENvcmlubmUgQy4gZXQgYXV0cmUgW0ludGVyZGljdGlvbiBkdSBtYXJpYWdlIGVudHJlIHBlcnNvbm5lcyBkZSBtbWUgc2V4ZV0KVGhlIHZlcmFjaXR5IG9mIEpvbmVzIGNsYWltcyByZW1haW5lZCBpbiBkb3VidCBGcmlkYXkuIEFmdGVyIGhlIHZvbHVudGFyaWx5IHN1Ym1pdHRlZCB0byBhIHBvbHlncmFwaCB0ZXN0IEZyaWRheSBtb3JuaW5nLCB0aGUgZXhhbWluZXIgc2FpZCBvbiBhIERlbnZlciByYWRpbyB0YWxrIHNob3cgdGhhdCBoZSBzaG93ZWQgd2hlbiBhc2tlZCBhYm91dCB0aGUgc2V4dWFsIGFsbGVnYXRpb25zLiAKTGEgYm91dGlxdWUgZXN0IHVuIHBldSB0cm9wIGx1eHVldXNlIGV0IGwnYWNjdWVpbCB1biBwZXUgdHJvcCBndWluZCAobWFpcyBzcmlldXggZXQgYXR0ZW50aW9ubikgIG1vbiBnb3QsIGNlIG5lIHNvbnQgUVVFICJkZXMgZ3RlYXV4IGV0IGR1IHBhaW4iICEgSmUgY2hvaXNpcyB1bmUgdGFydGUgYXUgY2l0cm9uICgiQWJzb2x1IENpdHJvbiIpIGV0IHVuZSB0YXJ0ZSAgbCdvcmFuZ2UgKCJBYnNvbHUgT3JhbmdlIikgZXQsIGhpc3RvaXJlIGRlIGZhaXJlIHBhbGFjZSwgdW4gY2FrZSBldCB1biBwYWluIGQncGljZXMgKGNlIGRlcm5pZXIgYXlhbnQgdCBmb3J0IHZhbnQgcGFyIEJlYyBTdWNyIFBhcmlnb3QpLiAKSGVyZSBhcmUgdGhlIG90aGVyIG5lY2Vzc2FyeSBpbmdyZWRpZW50cyBtYWtpbmcgdGhlIEtpbmcgdGhlIG5leHQgTWF5d2VhdGhlci4gTGlrZSB0aGUgTW9uZXkgTWFuLCBLaGFuIGlzIGluZGlzcHV0YWJseSBhIGhpZ2hseSB0YWxlbnRlZCBib3hlci4gTGlrZSBGbG95ZCwgS2hhbidzIGZpZ2h0cyBhcmUgZW50ZXJ0YWluaW5nICAgd2luLCBsb3NlIG9yIGRyYXcsIHNvIHlvdSBhbHdheXMgZ2V0IHlvdXIgbW9uZXkncyB3b3J0aC4gCklmIHlvdSBoYXZlIGRyeSwgZnJpenp5IGhhaXIsIGEgc21vb3RoaW5nIHNlcnVtIG9yIGNyZWFtIHdpbGwga2VlcCBoYWlyIGxvb2tpbmcgc2xlZWsuIApBZnRlciBtb3ZpbmcgdG8gQm9zdG9uLCBoZSBvcGVuZWQgdGhlIGZpcnN0IEFubmEncyBsb2NhdGlvbiBpbiBCcm9va2xpbmUgaW4gMTk5NS4gVGhlIGNvbmNlcHQgIGEgZmFzdCBjYXN1YWwgTWV4aWNhbiByZXN0YXVyYW50IHNlbGxpbmcgdGFjb3MsIHF1ZXNhZGlsbGFzLCBib3dscywgYW5kLCBtb3N0IG5vdGFibHksIGdhcmdhbnR1YW4gYnVycml0b3MgIGNhdWdodCBvbiBxdWlja2x5LCBhbmQgbm93IGJvYXN0cyBlaWdodCBsb2NhdGlvbnMgYWNyb3NzIHRoZSBjaXR5OiBDb29saWRnZSBDb3JuZXIsIEpGSyBDb3JuZXIsIFBvcnRlciBTcXVhcmUsIE1JVCwgRGF2aXMgU3F1YXJlLCBCZWFjb24gSGlsbCwgTmV3dG9uIEhpZ2hsYW5kcywgYW5kIHRoZSBQcnVkZW50aWFsIENlbnRlci4uIApUaGUgZ3JhcGhpY3MgYXJlIGJldHRlciwgYW5kIHRoZSBnYW1lcGxheSBpcyBlYXNpZXIuIApJIHdhbnQgdG8gc2VlIG1vcmUgZmFudGFzeSB0aGF0IHRha2VzIGludG8gbG9naWNhbCBjb25zaWRlcmF0aW9uIGhvdyBhY2Nlc3MgdG8gbWFnaWMgYXMgYSB0b29sIHdvdWxkIGhhdmUgYSByZWFsaXN0aWMgaW1wYWN0IG9uIHRoZSBkZXZlbG9wbWVudCBvZiBhIHNvY2lldHkgaXQgaXMgcHJlc2VudCBpbiwgaW4gdGVybXMgb2YgaW5kdXN0cmlhbCwgZWNvbm9taWMsIHBvbGl0aWNhbCwgc29jaWFsLCBjdWx0dXJhbCwgZXRjLiBQcm9ncmVzc2lvbiBhbmQgb3JnYW5pemF0aW9uLiAKVHVybiBpcyBhIGJsYW5rLiBIZSBiZXRzIHNtYWxsIGFnYWluIGFuZCBldmVyeW9uZSBjYWxscy4KT25lIFVMIDIgcGVyc29uIGFuZCBvbmUgVUwgMSBwZXJzb24gdGVudC4gCkNsdWIgZ2VuZXJhbCBtYW5hZ2VyIFBldGVyIFNhcmdlbnQgc2FpZCB0aGUgUlNMIG1hZGUgYSBwcm9maXQgb2YgJDMyOCwwMDAgdGhpcyBmaW5hbmNpYWwgeWVhciwgd2hpY2ggd2FzIG9uIHBhciB3aXRoIHRoZSBwcmV2aW91cyBmaW5hbmNpYWwgeWVhci4gClRoZSByZXN1bHRpbmcgY29kZSBpcyBqdXN0IHNvbWUgRE9NIG1hbmlwdWxhdGlvbnMsIGJ1dCB3aGlsZSB5b3Ugd29yayB3aXRoIGl0IGl0IGp1c3QgbWFya3VwLiAKVGhlIDI4IHllYXIgb2xkIHNob3QgYSBzZXZlbiB1bmRlciA2NSBhdCBFcmluIEhpbGxzIG9uIFRodXJzZGF5LCB0eWluZyB0aGlzIGNoYW1waW9uc2hpcCByZWNvcmQgZm9yIGxvd2VzdCBzY29yZSBpbiByZWxhdGlvbiB0byBwYXIgYWZ0ZXIgdGhlIGZpcnN0IHJvdW5kLCBoZWxkIGJ5IEphY2sgTmlja2xhdXMgYW5kIFRvbSBXZWlza29wZi4gSGUgZGlkIGl0IHdpdGhvdXQgbWFraW5nIGEgYm9nZXkgb3IgYnJlYWtpbmcgbXVjaCBvZiBhIHN3ZWF0IGluIHRoZSBXaXNjb25zaW4gaGVhdCwgYW5kIHNhdmluZyB0aGUgc21pbGVzIGZvciBhZnRlciBoaXMgcm91bmQuIE9wZW4gdGhhdCBhcmUgc3RyZXNzIGZyZWUsIEZvd2xlciBzYWlkIGFmdGVyIGhpcyByb3VuZC4gClNvbWV0aW1lIGFyb3VuZCB0aGUgdHVybiBvZiB0aGUgbGFzdCBjZW50dXJ5LCB0aGVzZSBmZWVsaW5ncyBvZiAiaW4gbG92ZSIgZ290IG9yZ2FuaXplZCBpbnRvIHRoZSBiYXNpcyBvZiBtYXJyaWFnZSwgYSBtYXJyaWFnZSB0aGF0IHdhcyB0byBiZWdpbiB3aXRoIGEgd2VkZGluZyB0aGF0IHdvdWxkIGJlICJwZXJmZWN0LiIuIApIYXZlIHlvdSB0cmllZCBCaXJjaGVyIE11ZXNlbGk/IEl0IG9hdHMsIEkga25vdywgYnV0IHdpdGggZW5vdWdoIG90aGVyIHN0dWZmIGl0IG1pZ2h0IGtlZXAgeW91IGZ1bGwgbG9uZ2VyLiAxLzIgYyBlYWNoIG9mIHVuY29va2VkIHJvbGxlZCBvYXRzIGFuZCBtaWxrLCAxLzQgYyBHcmVlayB5b2d1cnQsIDEvNCBjdXAgdG90YWwgb2YgZHJpZWQgZnJ1aXQgYW5kIG51dHMoSSBsaWtlIHNsaWNlZCBhbG1vbmRzIGFuZCBjcmFuYmVycmllcyksIGFuZCAxLzIgb2YgYSBzbWFsbCBhcHBsZSBncmF0ZWQuIApJdCBkaWZmaWN1bHQgdG8gZXZlbiBrbm93IGhvdyB0byBib3ljb3R0IG1hbnkgbGFyZ2UgY29ycG9yYXRpb25zIHRoZXNlIGRheXMuIE1vc3Qgb2YgdGhlIGdsYXNzZXMgY29tcGFuaWVzIGZvciBleGFtcGxlIGFyZSBvd25lZCBieSB0aGUgc2FtZSBsYXJnZSBjb3Jwb3JhdGlvbiwgYnV0IHRoZXkga2VlcCB0aGUgb3JpZ2luYWwgbmFtZXMgb2YgdGhlaXIgZ2xhc3NlcyBidXNpbmVzc2VzIHRvIG1ha2UgaXQgbG9vayBsaWtlIGNvbXBldGl0aW9uLgpJIGhhZCBhIGNvdXBsZSBvZiByZXRpcmVkIE5GTCBwbGF5ZXJzIGZvbGxvdyBtZSBhbmQgd2hlbiBJIHRoYW5rZWQgb25lIGEgZ3V5IHBvc3RlZCBwcm9vZiB0aGF0IEFudHdhbiBPZGVtcyB3YXMgaGFja2VkLiBIZSBhc2tlZCBoaW0gb24gRmFjZWJvb2sgbWVzc2VuZ2VyIGFuZCBoZSBzYWlkIGl0IHdhc24gaGltLiBGb3IgbW9yZSBwcm9vZiwgaGFzIGFza2VkIGZvciBhIHBpY3R1cmUgb2YgaGltIGhvbGRpbmcgMyBmaW5nZXJzIHVwIGFuZCBoZSBhY3R1YWxseSBkaWQgaXQuIApCdXQgSSBob3BlIHNpbmNlIGFsbCBvZiB0aGUgcGFpbiB0aGF0IGhhcyB0YWtlbiBwbGFjZSBlc3BlY2lhbGx5IGZvciBBbWVyaWNhbiBmYXJtZXJzIGFuZCByYW5jaGVycyBpbiBDYWxpZm9ybmlhIHRoYXQgd2UgZ2V0IGEgZ29vZCBkZWFsLiBUaGUgQ2hpbmVzZSBoYXZlIG9mZmVyZWQgdG8gbWFrZSBzb21lIGNvbmNlc3Npb25zLCBsYXdtYWtlcnMgd2FudCB0byBlbnN1cmUgdGhhdCB3aGF0ZXZlciBkZWFsIGlzIHJlYWNoZWQgYWRkcmVzc2VzIHRoZSB0YWN0aWNzIHRoZXkgc2F5IHRoZSBmb3JlaWduIGdvdmVybm1lbnQgZW5nYWdlcyBpbiB0aGF0IGdpdmVzIHRoZWlyIGFuIGVjb25vbXkgYW4gdW5mYWlyIGFkdmFudGFnZS4uIApEZXBlbmRpbmcgb24gdGhlIGNhc2lubyB5b3UgY2FuIHJhY2sgdXAgcG9pbnRzIGZvciBkaWZmZXJlbnQgdGhpbmdzLiAKR29hbCBvZiB0aGVzZSBleGhpYml0aW9ucyBhbmQgcHJvZ3JhbXMgaXMgdG8gZW5nYWdlIGFydGlzdHMsIHN0dWRlbnRzLCBtdXNldW0gbGVhZGVycyBhbmQgY29tbXVuaXRpZXMgaW4gY29udmVyc2F0aW9ucyBhYm91dCB0aGUgY3JlYXRpb24gYW5kIGRpc3NlbWluYXRpb24gb2YgTGF0aW5vIGFydCwgc2FpZCBQYW1lbGEgUXVpcm96LCBDTUFTIGRpcmVjdG9yIGFuZCBleGVjdXRpdmUgZGlyZWN0b3Igb2YgSVVQTFIuIApJIGFjdHVhbGx5IGp1c3QgcmFuIGEgc2ltIGluIFBJTyBmb3IgdGhpcyBmbG9wIGluIEJVIHZzIEJCIHRoaXMgbW9ybmluZy4gSSBnYXZlIHVzIGEgNzUlIENiZXQgc2l6ZSBvbiB0aGUgZmxvcCBhbmQgd2FzIGJldHRpbmcgb3ZlciBwYWlycyBhdCBhIG5lYXIgcHVyZSBmcmVxLiAKVGhlc2UgYXRobGV0aWMgbWFlc3Ryb3MgY2FuIGluc3BpcmUgYmFsbGFkcyBvbiB0aGUgYmFza2V0YmFsbCBjb3VydC4gCklmIHlvdSBhcmUgbG9va2luZyBmb3Igc29tZSBleHRyYSBkcmFtYSBpbiB5b3VyIGxpZmUsIHRoaXMgaXMgc29tZXRoaW5nIHlvdSBzaG91bGQgZGVmaW5pdGVseSBjb25zaWRlci4uIApQYXVsIEdldHR5IGdyYW5kc29uLCBKb2huIFBhdWwgR2V0dHkgSUlJLi4gCkRlc3BpdGUgZ3Jvd2luZyBjb25zdW1lciBjb25maWRlbmNlLCB0aGUgbG9vc2VuaW5nIG9mIGNyZWRpdCBtYXJrZXRzLCBhbmQgc3ByaW5nIHdlYXRoZXIsIEFtZXJpY2FucyBhcmUgbm90IHRlcnJpYmx5IGhhcHB5LiBkaWRuIGV2ZW4gcmFuayBpbiB0aGUgdG9wIHRlbiBoYXBwaWVzdCBwbGFjZXMgb24gZWFydGguIG5vbiBtaWxpdGFyaXplZDsgbmF0aW9uYWwgaGVhbHRoIGNhcmUgc2VydmljZXM7IGxvdyB1bmVtcGxveW1lbnQpIGFuZCB0aGUgYmVzdCB3b3JrIGxpZmUgYmFsYW5jZS4KVW5hYmxlIHRvIGVtcGF0aGl6ZSwgdW5hYmxlIHRvIGxvdmUgdGhlaXIgZmVsbG93IG1hbiwgYW5kIHVuYWJsZSB0byBleHBlcmllbmNlIGFueXRoaW5nIHJlbW90ZWx5IHJlc2VtYmxpbmcgam95IG9yIGZ1bGZpbGxtZW50LiAKTWFueSBvZiB0aGUgMjYgY3VzdG9tZXJzIGZpcnN0IG5hbWVkIGJ5IHBvbGljZSBhcyBoYXZpbmcgc29saWNpdGVkIHByb3N0aXR1dGlvbiBhbmQgcmVjb3JkZWQgb24gdmlkZW8gc3VydmVpbGxhbmNlIHdlcmUgaWRlbnRpZmllZCBkdXJpbmcgcm91dGluZSB0cmFmZmljIHN0b3BzIGFmdGVyIGxlYXZpbmcgdGhlIEFzaWFuIHNwYSwgdGhlIGFmZmlkYXZpdCBzdGF0ZXMuIApJZiBzbywgd2h5IHdhcyBhIGNvbXByb21pc2Ugbm90IHJlYWNoZWQgYXJvdW5kIHJlZ3VsYXIgZ3ltIHVzZT8gSGUgY291bGQgZ28gb25jZSB3aXRoIHRoZSBjbyB3b3JrZXIgYnV0IGFmdGVyIHRoYXQ/IFdhcyBoZSBuZXZlciBzdXBwb3NlZCB0byB3b3JrIG91dCBhZ2Fpbj8KSSBoYXZlIGFuIGVhcmx5IGZsaWdodCBob21lLCBNb20uIEhhZCBiZWVuIGFib3V0IHR3byB3ZWVrcyBzaW5jZSBNci4gCkkgb25jZSBwbGFubmVkIHRvIHRha2UgYSBtaWRkbGUgb2YgdGhlIG5pZ2h0IGJvYXQgdG8gdGhlIEVtZXJhbGQgSXNsZSwgdGhlIGFsYXJtIHJhbmcsIHRoZSBhbGFybSB3YXMgY2FuY2VsbGVkIGFuZCB0aGUgY29zeSBiZWQgb2NjdXBhbnRzIHdlbnQgYmFjayB0byBzbGVlcCEgU28gd2VsbCBkb25lIG9uIG1ha2luZyB0aGUgMDIwMCBzYWlsaW5nIGV4IFN0YW1zdW5kIChvciBkaWQgeW91IGdvIGZyb20gU3ZvbHZhZXIsIEknbGwgY29uZmVzcyB0byBiZWluZyBjb25mdXNlZCBvbiB0aGlzIHBvaW50KS4gTXkgdGltZXRhYmxlIHN1Z2dlc3RzIGFuIGFycml2YWwgYXQgQm9kbyBhdCAwMjAwLiBJJ20gYWZyYWlkIEkgZG9uJ3QgcmVtZW1iZXIgbXVjaCBhYm91dCBpdCwgbm90IGV2ZW4gdGhlIGRpcmVjdGlvbiBvZiB0cmF2ZWwuIEl0IG11c3QgYmUgaG9ycmlibGUgdG8gYmUgY29udGVtcGxhdGluZyB0aGUgZW5kIG9mIHlvdXIgdG91ci4gWW91IG11c3QgYmUgJ2luIHRoZSBncm92ZScgaWYgeW91IGFyZSBhYmxlIHRvIHNocnVnIG9mZiBydW5zIG9mIDIzMGttLgpHbyBmb3IgaXQuIElmIG5vdC4gCkluIE1heSB3ZSB3aWxsIGhhdmUgb3VyIGZpbmFscyB3aGljaCB3aWxsIGJlIHBsYXllZCBvdmVyIHR3byBkYXlzIGFuZCB0aGF0IGlzIGFib3V0IDMwIGhvdXJzIG9mIHBva2VyLiBXZSBwbGFuIHRvIG1ha2UgYXJvdW5kIDEwIG9uZSBob3VyIGVwaXNvZGVzIGZyb20gdGhlIDMwIGhvdXJzIGFuZCB0ZWxlY2FzdCBpdCBpbiB0aGUgbW9udGggb2YgSnVuZSwiIGluZm9ybXMgQnVybWFuLi4gClRoZXJlIGEgcGxhY2UgZm9yIGl0LCBJIHRoaW5rIHRoZXkganVzdCBub3QgZ29pbmcgYXQgaXQgdGhlIHJpZ2h0IHdheS4gCkkgZ3Vlc3Npbmcgbm9ib2R5IHJlYWQgdGhlIGFydGljbGVzIGNhcmVmdWxseSBiZWNhdXNlIGFzIHRoZSBhdWRpZW5jZSB3ZSB3ZXJlIG9ubHkgc3VwcG9zZWQgdG8gaGF2ZSBlbm91Z2ggdGltZSB0byByZWFkIHRoZSBoZWFkbGluZXMuIAoxNCkgSSBnb3Qgbm8gcHJvYmxlbXMgd2l0aCBpdCB0YmguCkJsYWNrYW53aWRlIHUKSG93IHRoZSBmdWNrIGRvIHlvdSBrbm93IHdoYXQgYSBsZWdhbCBhc3Npc3RhbnQgZG9lcyBvciB3aGF0IHRoZSBqb2IgaXMgbGlrZT8gWW91IG5ldmVyIHdvcmtlZCBpbiB0aGUgbGVnYWwgZmllbGQgYXQgYWxsIGxvbC4gU3VyZSBzZWVtcyBsaWtlIHlvdSB3aXNoIHlvdSBkaWQsIHRob3VnaC4gCkl0IHdhc24gcmVhbGx5IGEgMTBrIHRvdXJuYW1lbnQuIEEgbGFyZ2UgcGFydCBvZiB0aGUgZmllbGQgb25seSBoYWQgdG8gcGxheSBmb3IgNWsuIFRob3NlIHdobyByZWNlaXZlZCBhICJieWUiIGZvciB0aGUgZmlyc3Qgcm91bmQgaGFkIHRvIHBheSAxMGsgd2hlcmVhcyB0aG9zZSB3aG8gaGFkIGFuIG9wcG9uZW50IGZvciB0aGUgZmlyc3Qgcm91bmQgZ290IGEgNWsgcmVmdW5kIG9yIHNvbWV0aGluZy4gCkFuZCB0aGUgcHVwcGllcyBhcmUgY2hpd2Vlbmllcy4gQSBib3kgYW5kIGEgZ2lybC4gQ2lyaSBrZWVwcyBqdW1waW5nIG92ZXIgdGhpbmdzIHRoYXQgaSB0cnkgdG8ga2VlcCBoZXIgY29udGFpbmVkIGluIG9uZSByb29tIHdpdGgsIGFuZCBzaGUgbG92ZXMgdG8gcGVlIG9uIHRoZSBjb3VjaCAuIEJ1dCBzaGUgc2luZ3Mgb24gY29tbWFuZCBhbG1vc3QsIGFuZCBpbSBnb25uYSBnZXQgdGhlbSBib3RoIGxpdHRsZSBzd2VhdGVycyBmb3IgbmV4dCB3aW50ZXIuIFR5cmlvbiBiYXJrcyB0aGVzZSBpbnNhbmVseSBsb3VkIGJhcmtzLCB0aGV5IHNvdW5kIGxpa2Ugc29tZSBzb3J0IG9mIHN1cGVyIHBvd2VyLiBJIHRlbGwgdGhlbSBpbSBnb25uYSB0aHJvdyBhIHB1cHB5IGFsbCB0aGUgdGltZSwgYnV0IGkgdGhpbmsgdGhleSBhY3R1YWxseSBsb3ZlIHRoYXQgaWRlYS4KVGhlIENvdHRvbiBmYXJtZXIgSmFtZXMgQm9zd2VsbCBib3VnaHQgdGhlIGxha2UgZm9yIHByYWN0aWNhbGx5IG5vdGhpbmcsIGNvbnZpbmNlZCB0aGUgQXJteSBDb3JwcyBvZiBFbmdpbmVlcnMgdG8gZGFtIGl0cyB0cmlidXRhcmllcyBmb3IgZnJlZSwgd2hpY2ggcmVzdWx0ZWQgaW4gaXQgZGlzYXBwZWFyaW5nLiBJdCdzIG5vdyB0aGUgbGFyZ2VzdCBwcml2YXRlIGZhcm0gaW4gdGhlIHdvcmxkLgpBdCB0aGlzIHBvaW50IEkganVzdCBoYXZlIHNvIGxpdHRsZSBmYWl0aCBpbiBteSBkb2N0b3JzJyBhYmlsaXR5IHRvIHRyZWF0IG1lLiBPbmUgYWxzbyBmYWlsZWQgdG8gbWVudGlvbiB0aGF0IHJlZHVjaW5nL2N1dHRpbmcgZ2FiYXBlbnRpbiB1c2FnZSBjYW4gY2F1c2Ugc3VpY2lkYWwgaWRlYXRpb24gd2hlbiBJIHRvbGQgaGltIEkgY291bGRuJ3QgdGFrZSBpdCByZWd1bGFybHkgYmVjYXVzZSBpdCBtYWRlIG1lIHRvbyB0aXJlZCB0byB3b3JrIGFuZCBrbm93aW5nIG15IG1lbnRhbCBoZWFsdGggaXNzdWVzLiBZZWFoLCB0aGF0IGdvdCBtZSBpbiB0aGUgRVIgYW5kIG9uZSBnbmFybHkgc2NhciBJIGdldCB0byBoYXZlIGZvcmV2ZXIuIEFuZCB0aGUgZGFtbiBFUiBiaWxsIGZvciBlc3NlbnRpYWxseSBubyB0cmVhdG1lbnQuIEFuZCB0aGlzIGlzIGFsbCB3aGVuIHRoZXkgZGVjaWRlIHRvIHRyZWF0IG1lIGF0IGFsbCwgZ2l2ZW4gaG93IGV2ZW50dWFsbHkgZWFjaCBkb2N0b3Igd2FudHMgdG8gY3V0IG1lIGRvd24gdG8gdHlsZW5vbCBhbmQgYWN1cHVuY3R1cmUgYmVjYXVzZSBJJ20gInRvbyB5b3VuZyB0byBiZSB0cmVhdGVkIGZvciB0aGlzIG11Y2ggcGFpbi4iIE9yIHRoZXkgd2FudCBtZSB0byBkbyBwaHlzaWNhbCB0aGVyYXB5IGFnYWluIChldmVuIHRob3VnaCB0aGV5IHRlbGwgbWUgdGhleSBkb24ndCBmZWVsIGNvbWZvcnRhYmxlIHRyZWF0aW5nIG1lIHNpbmNlIHRoZXkgZG9uJ3Qga25vdyBlbm91Z2ggYWJvdXQgbXkgY29uZGl0aW9uKSBhZnRlciBJIHRlbGwgdGhlbSBhYm91dCBob3cgdGhhdCB3ZW50IGZvciBtZSBsYXN0IHRpbWUgKGlycmVwYXJhYmxlIG5ldXJvbG9naWNhbCBkYW1hZ2UgdGhhdCBsb3N0IG1lIHVzZSBvZiBzb21lIHByZXR0eSBpbXBvcnRhbnQgYm9kaWx5IGZ1bmN0aW9ucyBhbmQgc2V2ZXJlbHkgZGFtYWdlZCBteSBvcmdhbnMgYXMgYSByZXN1bHQpLiBJdCdzIHNvIGZ1Y2tpbmcgYXBwYXJlbnQgSSBrbm93IG1vcmUgYWJvdXQgbXkgY29uZGl0aW9uIGFuZCB0aGUgcG9zc2libGUgdHJlYXRtZW50cyB0aGFuIGV2ZXJ5ICJzcGVjaWFsaXN0IiBJIHNlZSwgaXQncyBncm9zcy4KSSByZW1lbWJlciB3YXRjaGluZyBIYXBweSBUcmVlIEZyaWVuZHMgaW4gZWFybHkgcHJpbWFyeSBzY2hvb2wgYXMgdGhlIHRlYWNoZXIgZGlkIG5vdCBncmFzcCB0aGF0IHRoZSBpbnRlcm5ldCBjb3VsZCBiZSB1c2VkIHRvIGxvb2sgdXAgaW5hcHByb3ByaWF0ZSBub24gcG9ybiB0aGluZ3MuIApCZSBzZW5zaXRpdmUgYWJvdXQgdGhpcyBPUCwgdGhlcmVzIHByb2JhYmx5IGEgZGVlcGVyIHJlYXNvbmluZyBmb3IgdGhpcyBmZWFyIG9mIGdldHRpbmcgcG9vcCBvbiBoZXIuIApEdWRlIGlzIG5vdCBwbGVhc2VkLiAKRXh0cmF0ZXJyZXN0cmlhbCBsYW5kc2NhcGVzIGFyZSBhIGxlYXAgb2YgZmFpdGggYmFzZWQgb24gYXZhaWxhYmxlIG9ic2VydmF0aW9ucywgYW5kIG5vIGRvdWJ0IHRoYXQgdGhlIHJlYWRlcnMgb2YgdGhlIGxhdGUgMTl0aCBjZW50dXJ5IHNlZWluZyB0aGVzZSBpbWFnZXMgZm9yIHRoZSBmaXJzdCB0aW1lIHdvdWxkIGhhdmUgYmVlbiB0cmFuc3BvcnRlZCBieSB0aGVpciBpbmdlbnVpdHkgYW5kIGRlcHRoIG9mIHVuZGVyc3RhbmRpbmcgaSBuIHJlcHJlc2VudGluZyB0aGUgRWFydGggYXMganVzdCBhbm90aGVyIGJpdCBpbiB0aGUgc2t5IHdoZW4gaXQgaXMgc2VlbiBmcm9tIG90aGVyIGxvY2F0aW9ucy4gSW1hZ2VzIGFsc28gbGVkIHRvIGEgbm90ZSBhYm91dCBhIHBhcGVyIHRoYXQgRmxhbW1hcmlvbiB3cm90ZSBmb3IgTGEgTmF0dXJlMSBpbiAxODczIG9uIHdoYXQgdHVybnMgb3V0IHRvIGJlIHRoZSBzaW1pbGFyaXRpZXMgb2YgdGhlIGF0bW9zcGhlcmVzIG9uIE1hcnMgYW5kIEVhcnRoIGFuZCB0aGF0IGxlZCBtZSB0byBhIHNvbWV3aGF0IGVhcmxpZXIgcGFwZXIgdGhhdCBoZSB3cm90ZSBmb3IgdGhlIENvbXB0ZXMgUmVkbnVzIHRoYXQgc2VlbXMgdG8gaGF2ZSBhIGxpdHRsZSBtb3JlIHB1bmNoIHRoYW4gdGhlIGxhdGVyIG9uZS4gVGhlIHNob3J0IHBhcGVyIGluIHRoZSBDUjIgb2JzZXJ2ZXMgdGhhdCB0aGUgRWFydGggaXMgbW9zdGx5IGNvdmVyZWQgYnkgd2F0ZXIsIGFuZCBvbiBNYXJzIHRoZXJlIGlzIG1vcmUgImxhbmQvY29udGluZW50YWwgc3VyZmFjZSB0aGFuIG1hcml0aW1lL3NlYSBzdXJmYWNlIi4gCkludGVyZXN0aW5nbHkgZW5vdWdoLCB0aGVyZSBoYXZlIGJlZW4gc2V2ZXJhbCByZWZlcmVuY2VzIG9uIHRoZSBqbiBzdWJzIHRvIGFidXNlcnMgaW4gdGhlcmFweSBzaXR1YXRpb25zIHN0YXRpbmcgdGhhdCB0aGV5IGNvbnNjaW91c2x5IHdhaXRlZCB0d28geWVhcnMgYmVmb3JlIGJlY29taW5nIGFidXNpdmUgc28gdGhlaXIgdmljdGltcyB3ZXJlIGJhc2ljYWxseSB0cmFwcGVkLiBDb2luY2lkZW5jZT8gSSB0aGluayBub3QuCkkga25ldyBhIG1hbiB3aG8gd29uICQzLjFtbG4gaW4gYSBzY3JhdGNoIG9mZiwgYWNjZXB0ZWQgdGhlIG1vbmV5IHB1YmxpY2x5LCBhbmQgZGllZCAzIG9yIDQgbW9udGhzIGxhdGVyIGZyb20gYSBoZWFydCBjb25kaXRpb24uIApCdXQgd2hlbiBJIHdlbnQgdG8gQW1lcmljYSBhbmQgQ2FuYWRhIGl0IGhvbmVzdGx5IGZlbHQgbGlrZSBoZWFsdGh5IGZvb2RzIGxpa2Ugc21vb3RoaWVzLCBmdWxsIGdyYWluIGJyZWFkLCBudXRzLCBmaXNoIGV0YyB3ZXJlIGEgbG90IG1vcmUgZXhwZW5zaXZlLCBidXQgc3R1ZmYgbGlrZSBEb3JpdG9zLCBjb2NhIGNvbGEgYW5kIGNhbmR5IHdhcyByaWRpY3Vsb3VzbHkgY2hlYXAuIEVhdGluZyBvdXQgd2FzIHRoZSBzYW1lIHdpdGggdW5oZWFsdGh5IGZvb2QgYmVpbmcgbXVjaCBjaGVhcGVyLiBJZiB0aGUgZ292ZXJubWVudCB3b3VsZCB0YXggdW5oZWFsdGh5IGZvb2Qgd2l0aCBsaWtlIDUlIG1vcmUgYW5kIHVzZSB0aGF0IG1vbmV5IHRvIHN1YnNpZGl6ZSBvciBwcm9tb3RlIGhlYWx0aHkgZm9vZC9lYXRpbmcsIHRoYXQgd291bGQgcHJvYmFibHkgbWFrZSBpdCBlYXNpZXIgZm9yIHRoZSBwb29yIHRvIGNob3NlIGEgYmV0dGVyIGRpZXQgZm9yIHRoZW1zZWx2ZXMuIApFdCBxdWFuZCBpbCBzJ2luc3RhbGxlIGF1eCBFdGF0cyBVbmlzLCBwYXMgcXVlc3Rpb24gZCdpbXBvcnRlciBkZXMgY29jaG9ucywgaWwgY2hlcmNoZSBsZXMgbWVpbGxldXJzIHN1ciBwbGFjZSBldCBsZXMgdHJvdXZlIGRhbnMgZGUgcGV0aXRzIGxldmFnZXMgZHUgTWlzc291cmkgZXQgZHUgTmV3IEplcnNleS4gCkZvbGQgb3IgamFtIGJlY2F1c2UgaXQgaXNuIHdvcnRoIGNhbGxpbmcuIFRoZSBvbmx5IHdheSB5b3UgZmVlbCBnb29kIGFib3V0IHlvdXIgaGFuZCBvbiB0aGUgZmxvcCBpcyBpZiB5b3UgaGl0IGEgMTAuIApPbmUgb2YgdGhlIHRoaW5ncyB0aGF0IG1vc3QgYm90aGVycyBtZSBhYm91dCBhbnRpIHZheGVycyBpcyB0aGF0IHRoZXkgbWFrZSBpdCBkaWZmaWN1bHQgdG8gcmFpc2UgZ2VudWluZSBjb25jZXJucy4gCkV2ZXJ5b25lIGVpdGhlciBoYXMgYSBob21lIHBva2VyIGdhbWUgb3IgaXMgaW52b2x2ZWQgaW4gYSBob21lIHBva2VyIGdhbWUuIApNZXJsaW5vIGlzIG1lbnRpb25lZCBpbiBjb25uZWN0aW9uIHdpdGggb25seSBhIGZldyBvZiB0aGUgYWxsZWdhdGlvbnMgaW4gdGhlIGluZGljdG1lbnQsIGluY2x1ZGluZyBwYXJ0aWNpcGF0aW5nIGluIHRocmVlIHNwb3J0cyBnYW1ibGluZyBidXNpbmVzc2VzICAgb25lIGJhc2VkIGluIENvc3RhIFJpY2EsIHRoZSBvdGhlciB0d28gb3BlcmF0aW5nIGluIE5ldyBZb3JrLCBOZXcgSmVyc2V5IGFuZCBGbG9yaWRhLgpUaGUgQmFuayBvZiBDYW5hZGEgbWlnaHQgYmUgbGVhbmluZyB0aGF0IHdheSwgYnV0IGl0cyBqb2IgZGVzY3JpcHRpb24ga2VlcHMgaXQgZnJvbSBtYWtpbmcgZGlyZWN0aW9uYWwgYmV0cyB0b28gc29vbi4gUG9sb3ogc2VlcyBoaW1zZWxmIGFzIGEgcmlzayBtYW5hZ2VyOyBoZSBhbHdheXMgaXMgaGVkZ2luZyBhZ2FpbnN0IHRoZSBwb3NzaWJpbGl0eSB0aGF0IHRoZSBtb3N0IG9idmlvdXMgc2NlbmFyaW8gY291bGQgYmUgd3JvbmcuIEJlY2F1c2Ugc29tZSBvZiB0aGUgZHJpdmVycyBvZiBDYW5hZGEncyBzbHVtcCBkZWZ5IGVhc3kgZXhwbGFuYXRpb24sIGl0J3MgcG9zc2libGUgdGhlIGVjb25vbXkgY291bGQgZ2V0IGJhY2sgb24gdHJhY2sgcmVsYXRpdmVseSBxdWlja2x5LgpXaGF0IG1pZ2h0IHRha2UgYW4gaG91ciBvciBzbyB0byBnZXQgdG8gdGhlIGxvY2FsIGNhc2lubyBvciBhIGRheSBvciBzbyBmb3Igc29tZSBvZiB5b3UsIG90aGVycyBjYW4gZ2V0IGludG8gYSBIb2xkZW0gZ2FtZSBvbmxpbmUgZm9yIHJlYWwgbW9uZXkgaW4gb25lIG1pbnV0ZSBvciBsZXNzLiAKQ2hvb3NpbmcgQSBTZXQgT2YgUG9rZXIgQ2hpcHMKQWJvdXQgaGFsZiB3YXkgYmV0d2VlbiBXZXN0IEVnZyBhbmQgTmV3IFlvcmsgdGhlIG1vdG9yIHJvYWQgaGFzdGlseSBqb2lucyB0aGUgcmFpbHJvYWQgYW5kIHJ1bnMgYmVzaWRlIGl0IGZvciBhIHF1YXJ0ZXIgb2YgYSBtaWxlLCBzbyBhcyB0byBzaHJpbmsgYXdheSBmcm9tIGEgY2VydGFpbiBkZXNvbGF0ZSBhcmVhIG9mIGxhbmQuIFRoaXMgaXMgYSB2YWxsZXkgb2YgYXNoZXMgICBhIGZhbnRhc3RpYyBmYXJtIHdoZXJlIGFzaGVzIGdyb3cgbGlrZSB3aGVhdCBpbnRvIHJpZGdlcyBhbmQgaGlsbHMgYW5kIGdyb3Rlc3F1ZSBnYXJkZW5zOyB3aGVyZSBhc2hlcyB0YWtlIHRoZSBmb3JtcyBvZiBob3VzZXMgYW5kIGNoaW1uZXlzIGFuZCByaXNpbmcgc21va2UgYW5kLCBmaW5hbGx5LCB3aXRoIGEgdHJhbnNjZW5kZW50IGVmZm9ydCwgb2YgbWVuIHdobyBtb3ZlIGRpbWx5IGFuZCBhbHJlYWR5IGNydW1ibGluZyB0aHJvdWdoIHRoZSBwb3dkZXJ5IGFpci4gCldoZW4gc2hlIHdhcyBlbmdhZ2VkLCBzaGUgYXNrZWQgbWUgdG8gYmUgaGVyIE1PSC4gCldoZW4gTWFyeSB3YXMgc3RpbGwgeW91bmcsIHRoZSBHb3Zlcm5tZW50IHB1cmNoYXNlZCB0aGVpciBwcm9wZXJ0eSBmb3IgdGhlIGV4cGFuc2lvbiBvZiBDYW1wIERydW0gd2hpY2ggaXMgbm93IEZvcnQgRHJ1bS4gVGhlIGZhbWlseSB0aGVuIG1vdmVkIHRvIE94Ym93IHdoZXJlIHRoZXkgcHVyY2hhc2VkIGFub3RoZXIgbGFyZ2UgZGFpcnkgZmFybSB3aGljaCB3YXMgbWFuYWdlZCBieSB0aGUgZmFtaWx5Li4gClNvIGZhciB0b2RheSwgUGV0ZSBoYXMgaGFkIG51bWVyb3VzIGJsb29kIHRlc3RzLCB0ZW1wZXJhdHVyZSB0YWtlbiBhIG51bWJlciBvZiB0aW1lcyBhbmQgaGUgaGFzIGhhZCBhIGhlYXJ0IHRlc3QgYWxsIGluIHByZXBhcnRpb24gZm9yIGhpcyB0cmVhdG1lbnQsIHdoaWNoIHdlIHRoaW5rIG5vdyB3aWxsIHN0YXJ0IFNhdHVyZGF5IG9yIFN1bmRheSAgIG1vc3QgbGlrZWx5IFN1bmRheS4gU28gbmVlZGxlc3MgdG8gc2F5LCB3ZSB3aWxsIGRlZmluaXRlbHkgYmUgaGVyZSBxdWl0ZSBhIHdoaWxlIGxvbmdlciB0aGFuIHdlIGFudGljaXBhdGVkLgpTQUREWSwgRnJlZGVyaWNrIEpvc2VwaCAgIEphbnVhcnkgMjgsIDIwMTcsIHF1aWV0bHkgYXQgUGFya3dvb2QgSG9zcGl0YWwgVmV0ZXJhbnMgV2luZywgd2l0aCBmYW1pbHkgYnkgaGlzIHNpZGUsIEZyZWRlcmljayBKb3NlcGggU2FkZHkgaW4gaGlzIDk3dGggeWVhcjsgZ29uZSB0byAidGhlIGJpZyBhdXRvIHdyZWNrZXJzIGluIHRoZSBza3kuIiBCb3JuIGluIExvbmRvbiBPbnRhcmlvIGluIDE5MjAuIE9sZGVzdCBzb24gb2YgTGViYW5lc2UgaW1taWdyYW50cywgRnJlZGEgQWJkZW5vb3IsIDE5MDQgICAxOTMyLCBhbmQgQWxiZXJ0IFNhZGR5LCAxODkwICAgMTk1NC4gCkJpbGwgd2FzIHByZWRlY2Vhc2VkIGJ5IGhpcyBwYXJlbnRzLCBNYXJnYXJldCAgYW5kIEphY2sgRHVubiwgInRoZSBiZXN0IHN0ZXAgZmF0aGVyIG9uZSBjb3VsZCBldmVyIGFzayBmb3IiLiBIZSBsZWF2ZXMgYmVoaW5kIGhpcyB3aWZlIERyLiAKU2kgbGUgcHJlbWllciBkZXMgYXBwcmVudGlzc2FnZXMgc2UgZmFpdCBhdmVjIG91IGNvbnRyZSBzYSBtcmUsIGlsIGV4aXN0ZSBkZXMgaW5mbHVlbmNlcyBldCBkZXMgaW5zcGlyYXRpb25zIHRvdXQgYXVzc2kgcHVpc3NhbnRlcyBxdWkgY29uZm9ydGVudCwgYXBhaXNlbnQgb3UgbW9kaWZpZW50IG5vdHJlIHJlbGF0aW9uICBsYSBmbWluaXQuICBMZXMgZmVtbWVzIGFwcHJlbm5lbnQgbGVzIHVuZXMgZGVzIGF1dHJlcywgY29uc3RhdGUgbGEgcHN5Y2hvbG9ndWUgY2xpbmljaWVubmUgTWFyeXNlIFZhaWxsYW50LiBFbnRyZSBlbGxlcywgZGFucyB1biByYXBwb3J0IGQnaW50aW1pdCwgZGUgc2Vuc3VhbGl0LCBlbGxlcyBwZXV2ZW50IGNoYW5nZXIgbGV1ciByZXNzZW50aSwgZXhwcmltZXIgbGV1cnMgc2Vuc2F0aW9ucywgbGV1ciByYXBwb3J0IGF1IGNvcnBzLCAgbCdpbWFnZSBkZSBzb2kgQydlc3QgZGFucyBjZSAiZ3luY2UiLCBxdWkgZXN0IGNlbHVpIGRlcyBzdXJzLCBkZXMgY29waW5lcyBvdSBkZXMgYW1pZXMsIHF1ZSBsJ29uIGRjb3V2cmUsIGFmZmlybWUgb3UgcmVtb2RsZSBzb24gcmFwcG9ydCAgbGEgZm1pbml0LCBzdXIgbGUgbW9kZSBkdSBkc2lyLCBkdSBkb3V0ZSBvdSBkZSBsYSBjcmFpbnRlLiAgSWwgZmF1dCBhbG9ycyBuZSBwYXMgaHNpdGVyICBzb2xsaWNpdGVyIGxlIGNvbnNlaWwgb3UgbGVzIGNyaXRpcXVlcyBkZSBmZW1tZXMgcXVlIGwnb24gYWRtaXJlIGV0IGVuIHF1aSBsJ29uIGEgY29uZmlhbmNlLiBDb21iaWVuIGRlICByZWxvb2tpbmdzICBncmF0dWl0cyBldCBydXNzaXMgc2UgZm9udCBzdXIgbGEgYmFzZSBkZSBwcmNvbmlzYXRpb25zIGF2aXNlcyBzdXIgdW5lIGNvdXBlLCB1bmUgY291bGV1ciBkZSBjaGV2ZXV4LCB1bmUgaW5zcGVjdGlvbiBzYW5zIGNvbXBsYWlzYW5jZSBkZSBzYSBnYXJkZSByb2JlLiBMJ2FtaWUgb3UgbGEgc3VyIHZpZW50IGxldmVyIHVuIGRvdXRlIGVuIG5vdXMgb3UgcnZlaWxsZXIgdW5lIGNvbXB0ZW5jZSBjZW5zdXJlLiBTb24gcmVnYXJkIHZvaXQgY2UgcXVpIG5vdXMgY2hhcHBlLCBzb24gYXVkYWNlIHBldXQgcmFsbHVtZXIgbGEgbnRyZS4gT24gcGV1dCBydW5pciBsYSBzb21tZSBkZSBjb21wbGltZW50cyBkaXZlcnMgcXVpIHZvbnQgZGFucyBsZSBtbWUgc2VucywgY2VsYSBmaW5pdCBwYXIgZGVzc2luZXIgdW5lIGRpcmVjdGlvbiBxdWUgbCdvbiBhIGludHJ0ICBzdWl2cmUgc2kgbCdvbiBzZW50IHF1J2VsbGUgcnNvbm5lIGRlIG1hbmlyZSBqdXN0ZSBlbiBzb2kuClRoZSBzcGluYWwgZGlzYyBhbmQgam9pbnRzIG9mIHRoZSBib2R5IGxpdmVzIGJlY2F1c2Ugb2YgbW92ZW1lbnQuQ3VycmVudCBjb25jZXB0cyBjb25jZXJuaW5nIHRoZSBjZW50cmFsIHJvbGUgb2YgbW90aW9uIGFuZCBqb2ludCBudXRyaXRpb24gaW4gcmVkdWNpbmcgc3BpbmFsIGRlZ2VuZXJhdGlvbiB3ZXJlIGRlcml2ZWQgZnJvbSBjb21wZWxsaW5nIHN0dWRpZXMgcHVibGlzaGVkIGluIHRoZSAxOTgwJ3MgYnkgaW50ZXJuYXRpb25hbGx5IHJlbm93bmVkIHJlc2VhcmNoZXJzIGludmVzdGlnYXRpbmcgdGhlIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIG1vdmVtZW50IGFuZCBkaXNjIGZ1bmN0aW9uLiBUaGlzIHByb2NlZHVyZSBwcmVzZXJ2ZXMgbm9ybWFsIGRpc2MgaGVpZ2h0IGFuZCBwZXJtaXRzIHBhc3NpdmUgZGlmZnVzaW9uIGJ1dCBwcmV2ZW50cyBmbHVpZCBmbG93OyB0aGF0IGlzLCBwcmVzc3VyZSBkZXBlbmRlbnQgdHJhbnNmZXIgb2YgZmx1aWQsIGFuZCBjcmVlcCBkZWZvcm1hdGlvbi5BdCwgMywgNSwgOCBtb250aHMgYWZ0ZXIgZnVzaW9uIHRoZSBkb2dzIHdlcmUgc2FjcmlmaWNlZC4gVGhlIGRpc2NzIGluY2x1ZGVkIHdpdGhpbiB0aGUgZnVzaW9uIGV4aGliaXRlZCBhIGRlY3JlYXNlIHV0aWxpemF0aW9uIG9mIGVuZXJneSwgZ2x1Y29zZSwgYW5kIG94eWdlbiBhcyBjb21wYXJlZCB0byBhZGphY2VudCBkaXNjcy5JbiBhZGRpdGlvbiwgdGhlIGRpc2NzIHdpdGhpbiB0aGUgYXJlYSBvZiBmdXNpb24gYWxzbyBoYWQgZGVjcmVhc2VkIHdhdGVyIGNvbnRlbnQsIG1ldGFib2xpYyBhbmQgY2VsbHVsYXIgYWN0aXZpdHkuIApNb3N0IG9mIHRoZSBpbm5vdmF0aW9ucyB0aGF0IGVuYWJsZSBMYWJhdHQgQnJld2VyaWVzIG9mIENhbmFkYSB0byBtZWV0IGl0cyBhbWJpdGlvdXMgZW52aXJvbm1lbnRhbCBnb2FscywgYm90aCB3aXRoaW4gaXRzIGJyZXdlcmllcyBhbmQgb2ZmaWNlcyBhbmQgaW4gdGhlIHdpZGVyIGNvbW11bml0eSwgY29tZSBmcm9tIGVtcGxveWVlcy4KSW4gYSByZWd1bGFyIDEvMiBnYW1lIGFnYWluc3QgYSBwYXNzaXZlIG9wcG9uZW50LCB5b3UgY2FuIG1ha2UgYW4gZXhwbG9pdGF0aXZlIGZvbGQgb24gdGhpcyB0dXJuIGFuZCBwcm9iYWJseSBzYXZlIGEgbGl0dGxlIGJpdCBvZiBtb25leSBvbiBhdmVyYWdlLiBIZXIgYmV0cyBhcmUgYSByZWxhdGl2ZWx5IGNvbW1vbiBwYXR0ZXJuIHRoYXQgbWFueSBmaXNoIGZvbGxvdyB3aXRoIHR3byBwYWlyIG9yIGJldHRlci4gClByb3ZpZGUgYSBsaXN0IG9mIGNob2ljZXMgYmFzZWQgb2ZmIG9mIHRoZSBvcHRpb25hbCBlbmRpbmdzIGZvciBuZXcgcGxheWVycywgb3IgY29udGludWUgdGhlIHNhZ2EgYmFzZWQgb24gaG93IHRoZSBwbGF5ZXIgY2hvc2UgdG8gZW5kIE1FMy4KSSBkb24gd2FudCBhIHdlZGRpbmcgY2VyZW1vbnkgdGhhdCB3b3VsZCBjb3N0IG11Y2gsIGlmIGFueXRoaW5nIGF0IGFsbC4gClRoZXJlIGFyZSBwbGVudHkgb2Ygb21uaXZvcmVzIHdobyBkbyBleGFjdGx5IHRoYXQgICBpdCBub3Qgc29tZXRoaW5nIHRoYXQgaXMgcmVzdHJpY3RlZCB0byB2ZWdhbmlzbS4gClJFQUQgTU9SRSAgIExpdmluZyBMYXMgVmVnYXM6IFN1biBCZWx0IGNpdGllcyBvZmZlciBuZXcgdGFrZSBvbiByYWNlClRoYW5rcyBpbiBhZHZhbmNlIS4gCkl0IGlzIGltcG9ydGFudCBhcyB0aGUgdGhlb2Jyb21pbmUgYW5kIHRoZW9waHlsbGluZSBoYXZlIG1hbnkgcG9zaXRpdmUgdGhlcmFwZXV0aWMgZWZmZWN0cywgbm90IHRoZSBsZWFzdCBvZiB3aGljaCBpcyB0byBzeW5lcmdpc3RpY2FsbHkgYWN0IHdpdGggdGhlIGNhZmZlaW5lLiBJcyB0aGUgImZlZWwgZ29vZCIgc3Vic3RhbmNlIGluIGNob2NvbGF0ZS4gSXQgaXMgYSBkaXVyZXRpYyBhbmQgdmFzb2RpbGF0b3IsIHdoaWNoIG1lYW5zIGl0IGxpdGVyYWxseSB3aWRlbnMgYmxvb2QgdmVzc2VscywgYW5kIHRoZXJlZm9yZSBpbmNyZWFzZXMgYmxvb2QgZmxvdyB0byB0aGUgYnJhaW4uIAoiV2UncmUgZnJ1c3RyYXRlZCwgcmVhbGx5IGZydXN0cmF0ZWQsIGJlY2F1c2UgdGhlIHJlZ3VsYXRpb25zIGFyZSBnb2luZyB0byBwdXQgb3JnYW5pemF0aW9ucyBsaWtlIHRoZSB2ZXRlcmFucyBhbmQgdGhlIHNwb3J0cyBib29zdGVycyBhbmQgdGhlIExpb25zIENsdWJzLCB0aGUgS2l3YW5pcywgYWxsIG9mIHRob3NlIHRoZXkncmUgcmVhbGx5IGdvaW5nIHRvIGhpbmRlciB3aGF0IHRoZXkgY2FuIGRvIHdpdGggY2hhcml0aWVzLCIgc2hlIHNhaWQuIEVhY2ggY2hhcml0eSBpcyBsaW1pdGVkIHRvICQxNSwwMDAgaW4gY2hpcCBzYWxlcy4gCldvcmQgb2YgY2F1dGlvbjogZG9uIG92ZXJkbyBpdC4gWW91IGJlIGFtYXplZCBob3cgcXVpY2tseSB5b3UgY2FuIGp1bXAgZnJvbSB0b3BpYyB0byB0b3BpYyBhbmQgZXhoYXVzdCB5b3VyIGRlcHRoLiBUaGUgd29yc3QgdGhpbmcsIGFic29sdXRlLCB3b3JzdCB0aGluZyBmb3IgeW91ciBtb21lbnR1bSB3b3VsZCBiZSBydW5uaW5nIG91dCBvZiBuZXcgb3IgaW50ZXJlc3RpbmcgdG9waWNzLiBGb3IgdGhhdCByZWFzb24gSSByZWNvbW1lbmQga2VlcGluZyB0aGUgaW5pdGlhbCBtZWV0IHVwIHRvIHVuZGVyIDIgaG91cnMuClRha2VzaGltYV9yYW5nZXJzICAgNyBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvClRoZSB0cm91YmxlIGlzLCBub3QgYWxsIHRoaXMgd2lzZG9tIGlzIGNyZWF0ZWQgZXF1YWwsIGFuZCBzb21lIHRpcHMgaW50ZW5kZWQgdG8gaGVscCB5b3VyIGNyZWRpdCBjYW4gYWN0dWFsbHkgaGF2ZSB0aGUgb3Bwb3NpdGUgZWZmZWN0LiAKQW5uYSBLZW5kcmljayB0YWtpbmcgb3ZlciBmcm9tIFNhbnRhClRoZSBDbGludG9uIGVtYWlsIGludmVzdGlnYXRpb24gaGFkIGFub3RoZXIgZ29vZCBleGFtcGxlLiBUaGUgZ3V5IGluIGNoYXJnZSBvZiB0aGUgV2llbmVyIGxhcHRvcCB0cmllZCB0byBnZXQgaGlzIGJvc3NlcyB0byB0YWxrIHRvIENvbWV5IGEgZmV3IHRpbWVzIGluIHRoZSBtb250aCBhZnRlciBoZSBnb3QgdGhlIGxhcHRvcC4gVGhleSB3b3VsZG4gdGFsayB0byBDb21leSBzbyBoZSB3cm90ZSBhbiBlbWFpbCB0byBoaXMgYm9zcyAod2hpY2ggaGUgbWFkZSBzdXJlIHdhcyBkb2N1bWVudGVkIGFuZCBzYXZlZCBieSB0aGUgZGVwYXJ0bWVudCkgc2F5aW5nIGhlIHRoaW5rcyB0aGV5IHNob3VsZCB0YWxrIHRvIENvbWV5LiBIZSBldmVudHVhbGx5IHdlbnQgdG8gU0ROWSBhbmQgc2FpZCBoZSB3YXMgdmVyeSB3b3JyaWVkIHNvbWV0aGluZyB3ZWlyZCB3YXMgZ29pbmcgb24gYW5kIHRoYXQgaGUgd2FzIGJlaW5nIHNldCB1cCBhcyB0aGUgZmFsbCBndXkgYnkgaGlzIGJvc3NlcyBhdCB0aGUgTlkgRkJJIG9mZmljZS4gVGhlIElHIGZvdW5kIGhlIGRpZCBub3RoaW5nIHdyb25nLCBhbmQgdGhlIElHIGlzIHN0aWxsIGludmVzdGlnYXRpbmcgdGhlIEZCSSBOWSBvZmZpY2UuCkZlbGxvd3NoaXAgaXMgYSB0cmVtZW5kb3VzIGhvbm9yIGZvciBtZSBhbmQgZm9yIG15IGZhbWlseSwgSG9sbmVzIHNhaWQuIE9mIG15IHdyaXRpbmcgaXMgYWJvdXQgZ3Jvd2luZyB1cCBpbiBQYW5hbWEgYW5kIG15IGVhcmx5IGV4cGVyaWVuY2VzIGluIHRoZSBVbml0ZWQgU3RhdGVzIGFzIGEgUGFuYW1hbmlhbiBBbWVyaWNhbiwgc28gW215IGZhbWlseV0gaXMgdGhyaWxsZWQuIEhvdXN0b24gaXMgdGhlIGZpcnN0IGNpdHkgSSBjYW1lIHRvIHdoZW4gSSBtb3ZlZCB0byB0aGUgVW5pdGVkIFN0YXRlcywgc28gSSdsbCBjb250aW51ZSB3cml0aW5nIGFib3V0IHRoaXMgZ3JlYXQgY2l0eSBhcyB3ZWxsLiAKIkl0IHdhcyBqdXN0IGdyZWVuIGxpZ2h0IGFmdGVyIGdyZWVuIGxpZ2h0LCIgTXIgTWNDcmVhZHlzYWlkLiAKRmxvYXRpbmcgQ29mZmluIGlzIGEgcmVhbGx5IGdvb2QgZXhhbXBsZSBvZiBob3cgdGhlIGFsYnVtIGFydCBjb21wbGV0ZWx5IGNvbXBsaW1lbnRzIHRoZSBtdXNpYy4gClRoZSBzb2xpZHMgc2V0dGxlIG91dCBpbiB0aGUgdGFuayBhbmQgZGVwZW5kaW5nIG9uIHlvdXIgaG9tZSBzaXplIHRoZSBzZXB0aWMgY29tcGFueSB3aWxsIG1ha2UgYSByZWNvbWVuZGF0aW9uIG9uIGhvdyBvZnRlbiB0byBwdW1wIG91dCB0aGUgdGFuay4gCkhvbGQgdXAuIFBlb3BsZSB0aGF0IGhhcHBlbiB0byBiZSBDaHJpc3RpYW5zIGFuZCBkbyBnb29kIHRoaW5ncyBmb3IgdGhlIHdvcmxkIGRvZXNuIG1lYW4gdGhhdCAiQ2hyaXN0aWFuaXR5IiBnZXRzIGNyZWRpdCB1bmxlc3MgaXQgd2FzIG1hdGVyaWFsbHkgcmVsZXZhbnQuIFRoYXQgaXMgYmV5b25kIGFic3VyZC4gSSBhIGdheSBtYW4gYW5kIGp1c3QgYmVjYXVzZSBBbGFuIFR1cmluZyBpbnZlbnRlZCB0aGUgY29tcHV0ZXIgZG9lc24gbWVhbiBJIHRoaW5rIEdheSBkb20gYXQgbGFyZ2UgaXMgcmVzcG9uc2libGUgZm9yIHRoZSBhZHZlbnQgb2YgY29tcHV0ZXIgc2NpZW5jZS4gSSBtZWFuLCB0aGF0IHdvdWxkIGJlIGNvb2wgaWYgd2Ugd2VyZSBiZXR0ZXIga25vd24gZm9yIGludmVudGluZyBjb21wdXRlcnMgdGhhbiBmb3IgUXVlZXIgRXllIGZvciB0aGUgU3RyYWlnaHQgR3V5IGJ1dCB0aGF0IGlzbiBsb2dpY2FsLgpIaXMgeW91bmdlc3Qgc29uLCBTdGFuIERlYWtpbiB3aG8gZGllZCBpbiAyMDEwIGRvY3VtZW50ZWQgaGlzIHN1bW1lcnMgbGl2aW5nIG9uIHRoZSB0cmFpbiBhbmQgaGlzIGZhbWlseSBkZWNpZGVkIHRvIGdpZnQgdGhlc2UgaGlzdG9yaWMgcGhvdG9zIGFuZCBqb3VybmFsIGVudHJpZXMgdG8gcGFpciB3aXRoIHRoZSBjYXIgYXQgdGhlIG11c2V1bS4KV2Ugbm90IGhlciB0byBhcmJpdHJhdGUganVkZ2VtZW50IG9uIHNvbWVvbmUgZWxzZSBsaWZlLCB3ZSBoZXJlIHRvIHByb3ZpZGUgZW1vdGlvbmFsIHN1cHBvcnQuLiAKSWYgeW91IG1hdGNoIDUgd2hpdGUgYmFsbCArIE1lZ2EgYmFsbCwgdGhlbiB5b3UgZ2V0IHRvIHNwbGl0IHRoZSBqYWNrcG90LCBiZWZvcmUgdGF4ZXMsIHdpdGggZXZlcnlib2R5IHdobyBwaWNrZWQgdGhlIHNhbWUgbnVtYmVycyB0aGF0IHlvdSBkaWQuIAoiQ2FuIHlvdSBoZWFyIG1lPyIgVG9tcyBzYWlkIGF0IG9uZSBwb2ludC4gIkkgZmVlbCBsaWtlIHlvdSBjYW4ndCBoZWFyIG1lLiBBYm91dCBoYWxmIHRoZW0gd2VyZSBzaXR0aW5nIGFuZCB3YXRjaGluZyBUb21zLCBidXQgdGhlIG90aGVycyB3ZXJlIGJ1eWluZyBhbmQgY2FycnlpbmcgYmVlciwgaW50ZXJhY3RpbmcgYW5kIGxvb2tpbmcgYXJvdW5kLgpXaGVuIGhlIHNwb2tlIG9mIHRoZSBHb2RzIE9zaXJpcyBkaXNhZ3JlZWQuIApJZiB5b3UgZXhwZWN0IHVwZGF0ZXMsIGl0IGlzIG5vdCAiaW4gdGhlIFdpbGQiIGFuZCBzaG91bGQgbm90IGJlIHRhZ2dlZCBhcyBzdWNoLiBBbHNvLCBhbmQgaW1wb3J0YW50bHksIHRoZSBESUwgb3IgU29uSUwgbXVzdCBiZSBwcmVzZW50IGluIHRoZSBzdG9yeSwgb3RoZXJ3aXNlIGl0IGNvbnNpZGVyZWQgYSAidGhpcyBiaXRjaCBkaWQgYSB0aGluZyIgcG9zdCBhbmQgd2lsbCBiZSByZW1vdmVkLiAKICBhbmQgaXQgZXZlbiBoZWxwcyB5b3UgbWFrZSBiZXR0ZXIgZXRoaWNhbCBjaG9pY2VzLCBoYW5kbGUgZW1vdGlvbmFsIHN0cmVzcyBiZXR0ZXIsIGFuZCBhY2hpZXZlIGdvYWxzIGJldHRlciBiZWNhdXNlIGl0IGZvY3VzZXMgeW91ciB3aWxscG93ZXIgYW5kIGFjY3VzdG9tcyB5b3UgdG8gZmFjaW5nIGRpZmZpY3VsdCB0YXNrcyBoZWFkIG9uLiAKVGhlIGZpbmFsIGhhbmQgc2F3IEdlbmV0IHB1dCBhbGwgaGlzIGNoaXBzIGludG8gdGhlIHBvdCB3aXRoIEtpbmcgVGVuIGFuZCBHYXJ5IGNhbGxlZCB3aXRoIGEgcGFpciBvZiBzZXZlbnMuIApVbmRlcnN0YW5kaW5nIGN1c3RvbWVyIGJlaGF2aW9yIGRvd24gdG8gdGhlIGxldmVsIG9mIGFuIGluZGl2aWR1YWwgY3VzdG9tZXIuIApTaW5jZSBMYWR5IGdhZ2EgdHJhdmVscyBhcm91bmQgdGhlIHdvcmxkIHNoZSBjaGFuZ2VzIGhlciBwaG9uZSBudW1iZXIsIGJ1dCBpIGtub3cgaGVyIEFtZXJpY2FuIHBob25lIG51bWJlciBhbmQgaGVyIENhbmFkaWFuIHBob25lIG51bWJlci4gTXkgZnJpZW5kIHdlbnQgdG8gYSBzYWxvbiBhbmQgdGhlIHNhbG9uJ3MgZnJpZW5kIGtub3dzIExhZHkgZ2FnYS4gU28sIG15IGZyaWVuZCB3ZW50IHdpdGggbWUgYW5kIHdlIGJlZ2dlZCBhbmQgYmVnZ2VkIHdoZW4gc2hlIGZpbmFsbHkgZGlkLiAKTWFrZSBhIGxhc3QgbWludXRlIGRlY2lzaW9uIHRvIGdyYWIgbXkgVWx0aW1hdGUgRGlyZWN0aW9uIHZlc3QgYmVjYXVzZSBJIHdhcyB3YXJuZWQgdGhhdCBpZiBpdCB3YXMgcmVhbGx5IGNvbGQgdGhlIHdhdGVyIGF0IHRoZSBhaWQgc3RhdGlvbnMgbWF5IGJlIGZyb3plbi4gQSB2b2ljZSBpbiB0aGUgYmFjayBvZiBteSBoZWFkIHNheXMsIHlvdSB3b24gZXZlbiBiZSB0aGlyc3R5LCBsZWF2ZSBpdCIuIEkgaWdub3JlIHRoaXMgd2lzZSBhZHZpY2UgYW5kIHN0cmFwIGl0IG9uIGFueXdheXMuIApQbGVhc2UgcmVmcmFpbiBmcm9tOyBleGNlc3MgZHJhbWEsIGJlbGl0dGxpbmcgb3RoZXJzLCBuZWdhdGl2ZSBhdHRpdHVkZXMgdG93YXJkcyBvdGhlcnMgYW5kIHRoZWlyIHBvc3RzL2NvbW1lbnRzLiBXZSBoYXZlIDAgdG9sZXJhbmNlIGZvciB0cm9sbGluZy9idWxseWluZyBvciBiZWluZyBkaXNyZXNwZWN0ZnVsIHRvIG90aGVycy4KVGhleSBlbmRlZCB1cCBzZWxsaW5nIHRoZSBmYXJtIHRvIGEgZGV2ZWxvcGVyIGFuZCBtb3ZpbmcgZ3JlYXQgZ3JhbmRtYSB0byBhIGxpdHRsZSBob3VzZSBpbiB0b3duIHdoZXJlIHNoZSBjb3VsZCB3YWxrIHRvIHRoZSBzdG9yZXMuIAo=|<---