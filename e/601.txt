--->|TXkgaGlzdG9yeSB3aXRoIGhlciBhbmQgdGhlIHdheSB3ZSBoYXZlIGZvdWdodCBpbiB0aGUgcGFzdCBoYXMgYSBsb3QgdG8gZG8gd2l0aCB3aHkgSSB0ZW5kIHRvIGJlbGlldmUgaGVyIGh1c2JhbmQuCkkgdGhpbmsgSSBhbHNvIHNhdyB0aGV5IG1pZ2h0IGhhdmUgZ3JhbmQgZGFkZHkgcHVycGxlLCBhbmQgd2hpbGUgSSBoYXZlbiBoYWQgaXQgZnJvbSBORVRBIEkgaGF2ZSBoYWQgdGhhdCBzdHJhaW4gZnJvbSBlbHNld2hlcmUgYW5kIGdyYW5kZGFkZHkgcHVycGxlIGlzIGF3ZXNvbWUuCkNvbnNpZGVyIHRoaXM6IGJldHdlZW4gdGhlIGFnZXMgb2YgNTAgYW5kIDYwIG11c2NsZXMgYW5kIG5lcnZlcyBiZWdpbiB0byBkZXRlcmlvcmF0ZSBhbmQgaXQgaXMgZmVsdCB0aGF0IG11c2NsZSBzdHJlbmd0aCB3aWxsIGRlY3JlYXNlIDE1JSBwZXIgZGVjYWRlIGZyb20gYWdlIDUwIHRvIDcwIGFuZCB0aGVuIGJ5IDMwJSBmcm9tIGFnZSA3MCB0byA4MC4gRGVjcmVhc2VkIG11c2NsZSBzdHJlbmd0aCBub3Qgb25seSBjYXVzZXMgYSByZWR1Y2VkIGNhcGFjaXR5IGZvciBhY3Rpdml0eSBidXQgYWxzbyBjYXJyaWVzIHBzeWNob2xvZ2ljYWwgY29uc2VxdWVuY2VzIHRoYXQgY2FuIGxlYWQgdG8gZGVwcmVzc2lvbi4KRmluYWxseSwgdGhlcmUgaXMgYSBuZXcgcHVzaCB0byBiYW4gYWxsIG9ubGluZSBwb2tlciBvbiB0aGUgZmVkZXJhbCBsZXZlbC4gCkZvciBpbnN0YW5jZSBvbiB0aGUgUHJvIHNpZGUsIHlvdSBnZXQgY2hpcHMgYSBsb3QgbW9yZSBjaGVhcGVyIHRoYW4geW91IHdvdWxkIGdldCB0aGVtIGZyb20gaW4gdGhlIGdhbWUuIApUcmVsaXZpbmcgc2F5cy4gCldoYXQgT25UaGluZ3MgdG8gZG9Gb29kIGFuZCBEcmlua0ZhbWlseSBhbmQgS2lkc1RWIEd1aWRlRGlnaXRhbCBQcmludCBFZGl0aW9uVGFzbWFuaWEgb3Bwb3NpdGlvbiBsZWFkZXIgc2F5cyBpdCBpcyAiZGlzdGFzdGVmdWwiIGZvciBhIHBybyBwb2tpZXMgZ3JvdXAgdG8gdXNlIEFuemFjIERheSB0byBwb2xpdGljaXNlIHRoZSBlbGVjdGlvbiBkZWJhdGUgc3Vycm91bmRpbmcgdGhlIGdhbWluZyBtYWNoaW5lcy4gTGFib3IgaGFzIHBsZWRnZWQgdG8gcmVtb3ZlIHBva2VyIG1hY2hpbmVzIGZyb20gdGhlIHN0YXRlIHB1YnMgYW5kIGNsdWJzIGJ5IDIwMjMgaWYgaXQgd2lucyBhIE1hcmNoIDMgcG9sbC4gCk15IG1lbW9yeSBoYXMganVzdCBiZWVuIHNvbGQKSW4gTlkgeW91ciBtYXJnaW5hbCByYXRlIGlzIDYuODUlIGFuZCBpbiBDQSBpdCdzIDkuMyUuIApQbGF5aW5nIHRvIGltcHJlc3MgcGVvcGxlIHdpbGwgb25seSBsZWF2ZSB5b3Ugd2l0aCBlZ2cgb24geW91ciBmYWNlLCBhbmQgbW9zdCBpbXBvcnRhbnRseSBORVZFUiBwbGF5IHdpdGggbW9uZXkgdGhhdCB5b3UgY2FuJ3QgYWZmb3JkIHRvIGxvc2UuIFdoZW4geW91IGhhdmUgYmVlbiB3aW5uaW5nIGNvbnNpc3RlbnRseSBhdCBhIGNlcnRhaW4gbGV2ZWwgaXQncyBPSyB0byBwcm9ncmVzcyBidXQgZG9uJ3QgYmUgYWZyYWlkIG9mIG1vdmluZyBiYWNrIGRvd24gaWYgaXQgZG9lc24ndCB3b3JrIG91dC4gCkkgY2FuIHNlZSBvbiB5b3VyIGRsIHdoZW4geW91IHdlbnQgMjA1IHlvdXIgdXBwZXIgYmFjayBpcyBub3QgdGlnaHQgYW5kIGxvY2tlZCBkb3duIHdoZW4geW91IHRyeSB0byBwdWxsLiAKVHVybnMgb3V0IG1lIGFuZCBteSBmcmllbmQgd2VyZSAybmQgY291c2lucy4gCkVsZXBoYW5zaW9uICAyIHBvaW50cyAgc3VibWl0dGVkIDE2IGRheXMgYWdvCkJhYnlzaXR0aW5nIGlzIG5vdCB3b3JraW5nIG91dCBESCB3b3VsZCBiZSBtYWQgaWYgYSBzaXR0ZXIgd2FzIHRoYXQgbmVnbGVjdGluZyBvZiB5b3VyIGtpZHMuIEdldCBhIHJlYWwgc2l0dGVyLiAKSGlzIGRpc3NlbnRzIGluIGNhc2VzIGludm9sdmluZyBnYXkgcmlnaHRzIGNvdWxkIGJlIGFzIGJpdGluZyBhcyB0aGV5IHdlcmUgcHJlc2NpZW50LiAKQ29sb3JzIGFyZSBhIGdyZWF0IG1hdGNoLiBCb3RoIGhhdmUgYW1hemluZyBjb3ZlcmFnZSBhbmQgZ2xvdyAgIGhvd2V2ZXIsIHRoZSBjb3ZlcmFnZSB0ZW5kcyB0byBiZSByYXRoZXIgaGVhdnkgZXZlbiB3aXRoIGEgbGlnaHQgaGFuZCwgYW5kIGV2ZW4gYWZ0ZXIgc2V0dGluZyB3aXRoIGxvb3NlIHBvd2RlciAgIGlmIHlvdSBoYXBwZW4gdG8gdG91Y2ggeW91ciBmYWNlIG9yIGJsb3cgeW91ciBub3NlLiBJdCByZWFwcGxpY2F0aW9uIHRpbWUuIApUaGVyZSBhcmUgc29tZSBzdHJvbmcgc2ltaWxhcml0aWVzIGJldHdlZW4gdGhlIHR3byBkaXNlYXNlcywgYnV0IHRoZSBpbXBvcnRhbnQgZGlzdGluY3Rpb24gdG8gbWFrZSBpcyB0aGF0IGh1bWFucyBjYW5ub3QsIHVuZGVyIGFueSBjaXJjdW1zdGFuY2VzLCBjYXRjaCB0aGUgQUlEUyB2aXJ1cyBmcm9tIGEgY2F0LiBUaGlzIHdhcyBhIGNvbW1vbiBtaXNjb25jZXB0aW9uIGFtb25nIHBldCBvd25lcnMgdGhhdCBoYXMgbGVhZCB0byBhIGxvdCBvZiBhbnhpZXR5IGluIHRoZSBwYXN0LiBXZSB3aWxsIHRlbGwgeW91IGhvdyB0byBnZXQgeW91ciBjYXQgdGVzdGVkIGZvciB0aGlzIHZpcnVzIGFuZCB3aGF0IHRvIGRvIGlmIHlvdXIgY2F0IGhhcyBhIHBvc2l0aXZlIHJlYWRpbmcuIApJIGJlZyB0byBkaWZmZXIsIG92ZXJseSBwb3NpdGl2ZSByZXZpZXdzIGNhbiBvZnRlbiBiZSBwcm9tb3Rpb25hbC4gV2hlbiBzb21lb25lIGNvbW1lbnRzIGRvZXMgd2hhdCBpdCBzdXBwb3NlZCB0byBkbyBpdCBhcHBlYWxzIHRvIG1lIG1vcmUgYXMgYmVpbmcgaG9uZXN0LgpUTyBUSEUgTU9PTi4iLiAKT2huZSBCZXppZWh1bmdlbiBpc3QgZGFzIHNjaHdpZXJpZy5EaWUgRnJhdSB2ZXJhcnNjaHQgZGFzIGdhbnplIExhbmQsIGhhdCBiZXJhbGwgbnVyIEJhdXN0ZWxsZW4gb2ZmZW4sIHZvbSBXb2hudW5nc2JhdSBiZXIgZGllIEJ1bmRlc3dlaHIgYmlzIHp1ciBncm9lbiBncm9lbiBTdGV1ZXJyZWZvcm0sIGRlciBCYWhuLCBkZW0gRGlnaXRhbCwgZGVtIFJlY3ljbGluZ3N5c3RlbSB1bmQgdW5kIHVuZCB1bmQgdW5kVW5kIHdhcyBtYWNoZW4gZGllIGdhbnplbiBNZXJrZWx3aGxlcj8gRGllIHdobGVuIGRpZSBlaW5mYWNoIHdlaXRlciwgd2VpbCBtaXQgZGVyIFJlZ2llcnVuZyBNZXJrZWwgMyB3aXJkIGRhcyBhbGxlcyAgIHZlcnNwcm9jaGVuICAgYmVob2Jlbiwgd2FzIGhoaCBkaWUgVm9yZ25nZXIgLiBIbUljaCBoYWJlIGRhbWl0IG5pY2h0cyB6dSB0dW4sIGljaCBoYWJlIGRpZSBrZWluIGVpbnppZ2VzIE1hbCBnZXdobHQsIHdlaWwgbWlyIHZvbiBBbmZhbmcgYW4gZGllIG1lcmtlbHNjaGVuIE5lYmVsd2VyZmVyIGJlaSBnZXJhZGV6dSBkZW4gQXRlbSBnZW5vbW1lbiBoYWJlbiwgdW5kIGRpZSBnYW56ZW4gQ0RVIGZhbnMgdW5kICBXaGxlciBoYWJlbiBlaHJsaWNoIGdlc2FndCBpbnp3aXNjaGVuIHNjaGxpY2h0IHVuZCBlcmdyZWlmZW5kIFN0b2NraG9sbSBTeW5kcm9tLk5jaHN0ZXMgTWFsLCB3ZW5uIGlociBldWNoIGJlciBCYWhuLCBTdGV1ZXJuLCBWZXJ3YWx0dW5nLCBrZWluIE5ldHogdW5kIHZpZWxsZWljaHQgc29nYXIgZGllIEJ1bmRlc3dlaHIgKHdlbm4gZXVlciBHYXJ0ZW4gYmVyZmx1dGV0IGlzdCkgYXVmcmVndCwgZGFubiBiZXJsZWd0IGhhbHQgbWFsLCBvYiBpaHIgbmljaHQgdmllbGxlaWNodCBhdWZocmVuIHNvbGx0ZXQsIGRpZXNlIFRhbnRlIHp1IHdobGVuLiAKQWx0aG91Z2ggdGhlIGdhbWUgaXMgY29uc2lkZXJlZCBsZWdhbCBpbiBtb3N0IEluZGlhbiBzdGF0ZXMsIHRoZXJlYXJlIHNvbWUgc3RhdGVzIHdoaWNoIGNvbnNpZGVyIHBva2VyIGFzIGdhbWJsaW5nIGFuZCBoZW5jZSB0aGUgZ2FtZWlzIG5vdCBwZXJtaXR0ZWQgYnkgbGF3LiAKSWYgeW91IGV4ZXJjaXNlLCB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZSBleGVyY2lzZSBwcmljZSBhbmQgdGhlIGZhaXIgbWFya2V0IHZhbHVlIGlzIHRheGVkIGFzIGluY29tZSAob25seSA1MCUgb2YgaXQsIHRob3VnaCwgYmVjYXVzZSBpdCBhIENDUEMuKS4gSWYgdGhlcmUgbm8gbWFya2V0IGZvciB0aGVtLCBzbyB5b3UgaGF2ZSB0byBzaXQgb24gdGhvc2Ugc2hhcmVzIHVudGlsIHNvbWV0aGluZyBoYXBwZW5zIChJUE8sIHNoYXJlIHNhbGUpIHRoZW4gdGhlIHZhbHVlIGlzIHRheGVkIGFzIGNhcGl0YWwgZ2FpbnMuIElmIHlvdSBob2xkIHRoZW0gZm9yIHR3byB5ZWFycyBvciBtb3JlLCB5b3UgY2FuIHRha2UgYWR2YW50YWdlIG9mIHlvdXIgJDc1MGsgbGlmZXRpbWUgY2FwaXRhbCBnYWlucyB0YXggZXhlbXB0aW9uLi4gClRoaXMgaXMgQ2hyaXN0aWFuIGRhdGluZyBtYWRlIHNpbXBsZS4gT3VyIG9ubGluZSBkYXRpbmcgc2l0ZSB3YXMgZGVzaWduZWQgdG8gaGVscCBzaW5nbGVzIHdobyBhcmUgc2Vla2luZyBhIG5ldyByZWxhdGlvbnNoaXAuIERvbid0IHdhc3RlIGFueSBtb3JlIHRpbWUgd2l0aCBvdGhlciBDaHJpc3RpYW4gb25saW5lIGRhdGluZyBzaXRlcy4gCkEgdG9vdGhhY2hlIGNhdXNlcyBpbmZsYW1tYXRvcnkgcGFpbiwgc28gYW55IGFudGkgaW5mbGFtbWF0b3J5IG1lZGljaW5lIHNob3VsZCBiZSBhYmxlIHRvIHJlZHVjZSB5b3VyIHN1ZmZlcmluZy4gSnVzdCBiZSBzdXJlIHRvIGNoZWNrIHRoZSBkcnVnJ3MgbGFiZWwgZm9yIHRoZSBleHBpcmF0aW9uIGRhdGUgYW5kIGRvc2FnZSBpbnN0cnVjdGlvbnMuIElmIHRoZSBtZWRpY2luZSB5b3UgaGF2ZSBhdCBob21lIGhhcyBleHBpcmVkLCB5b3UnbGwgd2FudCB0byBwdXJjaGFzZSBtb3JlIHNvIHRoYXQgeW91IGNhbiByZWNlaXZlIG9wdGltYWwgcGFpbiByZWxpZWYgYmVuZWZpdHMuLiAKVGhvdWdoIGl0IG1heSBiZSBhIGxvdCBkaWZmZXJlbnQgZnJvbSBwbGF5aW5nIHBva2VyIGF0IHNvbWVvbmUgZWxzZSdzIGhvdXNlLCBpdCBkb2VzIGdldCB5b3VyIGZyaWVuZHMgdG8gcGxheSBwb2tlciBvbmxpbmUuLiAKSXQgd2FzIGRpc2d1c3RpbmcuIChJIHdhcyBpbiBteSB0d2VudGllcykuIApUaGlzIG1vdmllIHdhcyBubyBleGNlcHRpb24uIEEgbWVudG9yIHR1cm4gYmFkLCBhIGNoYXNlIHNjZW5lLCBjaXZpbGlhbiBzaWRlIGNoYXJhY3RlcnMgd2hvIGhlcm8gaGFzIGEgaGlzdG9yeSBhbmQgYSBiaWcgZmlnaHQgaW4gdGhlIGVuZCB3aXRoIGdvb2Z5IG1vbWVudHMuCkJ5IDE5MTMsIEFsaWNlJ3MgYnVzaW5lc3Mgd2FzIGZsb3VyaXNoaW5nLCBkdWUgaW4gcGFydCB0byB0aGUgU291dGggRGFrb3RhIE5hdGlvbmFsIEd1YXJkIHRyYWluaW5nIG5lYXJieS4gSXQgd2FzIGR1ZSB0byBoZXIgU3VuZGF5IGNsb3NpbmdzIHRoYXQgc2hlIGtpbGxlZCBhIHNvbGRpZXIuLiAKSSBiZWVuIHRocm91Z2ggdGhlIFN1ZXogYW5kIFBhbmFtYSBjYW5hbHMgYSBmZXcgdGltZXMuIFZpc2l0ZWQgcXVpdGUgYSBmZXcgcGxhY2VzIGluIFNvdXRoIEFtZXJpY2EgYW5kIHNwZW50IG1vbnRocyBpbiBBbnRhcmN0aWNhIG9uIGEgc3VydmV5IHNoaXAuIEkgYmVlbiB0byB0aGUgVVMgcXVpdGUgYSBmZXcgdGltZXMsIE5ldyBZb3JrLCBCb3N0b24sIFNvdXRoIENhcm9saW5hIGFuZCBGbG9yaWRhLiAKSSB3ZW50IHdpdGggaGltIG9mIGNvdXJzZSBidXQgaGUgcHJvY2VlZGVkIHRvIHRha2UgaXQgb2ZmIFJvYWQgaW50byBhIHBvdCBob2xlIGZpbGxlZCBkaXJ0IHBhcmtpbmcgbG90IGFuZCBkcm92ZSB3YXkgdG9vIGZhc3QgZG9pbmcgZG9udXRzIGFuZCBmaWd1cmUgZWlnaHRzIG92ZXIgYW5kIG92ZXIsIGl0IHdhcyBuZXJ2ZSB3cmFja2luZy4gCklmIEkgZG8gSSBuZXZlciBoYXZlIGZsYXJlIHVwcywgZXZlbiBpZiBJIGRvIG5vdGhpbmcgZWxzZS4gQnV0IGlmIEkgc2tpcCBvbmUgbmlnaHQsIEkgYmUgYnJpZ2h0IHJlZCBieSA0cG0gdGhlIG5leHQgZGF5LCBubyBtYXR0ZXIgd2hhdCBlbHNlIEkgZG8uLiAKSSBwcmVmZXIgQUEgbm8gY2x1YiBhcyBhIGNoZWNrIGJhY2ssIGV2ZW4gdGhvdWdoIEkgYWxzbyBjaGVjayBiYWNrIEFBIHdpdGggYSBjbHViIHNvbWV0aW1lcywgdGhvdWdoIEkgYW0gbW9yZSBpbmNsaW5lZCB0byBiZXQgd2l0aCB0aGF0IGhhbmQuIE15IHJlYXNvbmluZyBpcyB0aGF0IGJldCBzaG91bGQgYmUgaGlnaGVyIEVWIHRoYW4gY2hlY2sgYmFjayBpZiB3ZSBibG9jayBudXQgZmx1c2ggZHJhd3MgYW5kIGhhdmUgdGhlIGJhY2tkb29yLCBpZiBuZWl0aGVyIGlzIHRoZSBjYXNlIHRoZSBFViBkaWZmZXJlbmNlIG9mIGNoZWNraW5nIGFuZCBiZXR0aW5nIHdpbGwgYmUgbXVjaCBzbWFsbGVyLiBCYXNpY2FsbHkgSSB3YXN0ZSBhIHByZXR0eSBnb29kIHZhbHVlIGJldCB3aGVuIEkgY2hlY2sgYmFjayBBY0F4LCBhbmQgSSBnZXQgdG8gcG90IGNvbnRyb2wgQUEgbm8gY2x1YiBvbiBhIGJvYXJkIHdoZXJlIHR1cm4gYW5kIHJpdmVyIGNhbiBlYXNpbHkgc2hpZnQgdGhhdCBoYW5kIG1vcmUgdG8gdGhlIGJvdHRvbSBvZiBteSByYW5nZSwgd2hlcmVhcyBJIGFtIG5vdCBzbyB3b3JyaWVkIGlmIEkgcGljayB1cCBlcXVpdHkgd2hlbiB0aGUgM3JkIGNsdWIgaGl0cy4gCkhhbGYgb2YgdGhlIHBvcHVsYXRpb24gb2YgdGhlIFVuaXRlZCBTdGF0ZXMgd2FzIGZvdW5kIHRvIGNvbnN1bWUgbGVzcyB0aGFuIHRoZSByZWNvbW1lbmRlZCBhbW91bnQgb2YgbWFnbmVzaXVtIHdoZW4gZXN0aW1hdGVkIGEgZGVjYWRlIGFnbyAoMjcpLiBOb3Qgb25seSBpcyBtYWduZXNpdW0gbG9zdCB3aXRoIGNlcnRhaW4gbWVkaWNhbCBjb25kaXRpb25zLCBidXQgdGhpcyBtaW5lcmFsIGlzIGV4Y3JldGVkIGFzIGEgY29uc2VxdWVuY2Ugb2YgYmlvbG9naWNhbCBhY3Rpdml0aWVzIHN1Y2ggYXMgc3dlYXRpbmcsIHVyaW5hdGluZywgYW5kIGRlZmVjYXRpbmcgYXMgd2VsbCBhcyBleGNlc3MgcHJvZHVjdGlvbiBvZiBzdHJlc3MgaG9ybW9uZXMgKDcsIDExKS4gClBva2VyIDQgUHJvc3RhdGUgY29tbWl0dGVlIG1lbWJlciBTdGVwaGVuIE1pdGNoZWxsIHJlY29nbmlzZWQgdGhlIG51bWJlciBvZiBsb2NhbCBidXNpbmVzc2VzIGFuZCBvdGhlciBzcG9uc29ycyB0aGF0IGdlbmVyb3VzbHkgZG9uYXRlZCB0aGVpciB0aW1lLCBzZXJ2aWNlcyBhbmQgcHJvZHVjdHMgdG8gZW5zdXJlIHRoZSBldmVudCB3YXMgYSBzdWNjZXNzLiBNaXRjaGVsbCBzYWlkIGFsbCB3aG8gYXR0ZW5kZWQgdGhlIFBva2VyIDRQcm9zdGF0ZSBldmVudCBlbWJyYWNlZCB0aGUgaWRlYWxzIG9mIHRoZSBldmVudCwgcGxheWluZyBjb21wZXRpdGlvbiBwb2tlciBhcyB3ZWxsIGFzIHB1cmNoYXNpbmcgb3ZlciAkMSwwMDAgd29ydGggb2YgcmFmZmxlIHRpY2tldHMgYW5kIGJpZGRpbmcgb24gb3ZlciAkMTIsMDAwIG9mIGF1Y3Rpb24gcHJpemVzLiAKTm8gc3VpdCBpcyByYW5rZWQgaGlnaGVyIHRoYW4gdGhlIG90aGVyIEZvdXIgb2YgYSBraW5kICAgRm91ciBjYXJkcyBvZiB0aGUgc2FtZSByYW5rLCB3aXRoIGEgZmlmdGggY2FyZCBvZiBkaWZmZXJlbnQgcmFuayBGdWxsIGhvdXNlICAgVGhyZWUgY2FyZHMgb2Ygb25lIHJhbmssIGFuZCB0d28gb2YgYW5vdGhlciByYW5rLiBBIGhhbmQgd2l0aCB0aHJlZSBzZXZlbnMgYW5kIHR3byBmaXZlcywgZm9yIGV4YW1wbGUsIHdpbGwgYmUgZGVzY3JpYmVkIGFzICJTZXZlbnMgZnVsbCBvZiBmaXZlcyIuIFRoaXMgd2lsbCBiZSByYW5rZWQgaGlnaGVyIHRoYW4gImZpdmVzIGZ1bGwgb2Ygc2V2ZW5zIiwgYXMgc2V2ZW5zIGFyZSB2YWx1ZWQgaGlnaGVyIHRoYW4gZml2ZXMuIApTaGUgd29uIGhlciBmaXJzdCBpbmRpdmlkdWFsIExlYWd1ZSBDaGFtcGlvbnNoaXAgYXMgYSBzb3Bob21vcmUgaW4gMjAxNiBhbmQgZWFybmVkIGhlciBzZWNvbmQgY29uc2VjdXRpdmUgdGVhbSBNVlAgaG9ub3JzIHRoaXMgc3ByaW5nLi4gCkZldmVycyBpbmR1Y2VkIGJ5IG1lYXNsZXMgdmFjY2luYXRpb24gYXJlIHJlbGF0ZWQgdG8gdGhlIHJlcGxpY2F0aW9uIGFuZCBzaGVkZGluZyBvZiB0aGUgbGl2ZSB2YWNjaW5lIHZpcnVzLCAic2hvd2luZyB0aGF0IHN1YmN1dGFuZW91cyBpbmplY3Rpb24gb2YgYW4gYXR0ZW51YXRlZCBtZWFzbGVzIHN0cmFpbiBjYW4gcmVzdWx0IGluIHJlc3BpcmF0b3J5IGV4Y3JldGlvbiBvZiB0aGlzIHZpcnVzLiIKVGhpcyBjYW4gZWFzaWx5IGluY2x1ZGUgcHVyY2hhc2luZyBhIGRlY2sgb2YgY2FyZHMgdGhhdCB3aWxsIGhlbHAgdGhlbSByZWdhaW4gdGhlaXIgbHVjay4gCk9tYXIgb3JpZ2luYWwgY3JpdGljaXNtIGlzIHRoYXQgbG9iYnlpbmcgYW5kIGZ1bmRpbmcgZnJvbSBBSVBBQyBjcmVhdGVzIGEgc3BlY2lhbCByZWxhdGlvbnNoaXAgYmV0d2VlbiBwb2xpdGljaWFucyB3aG8gYXJlIHN1cHBvc2VkIHRvIHJlcHJlc2VudCB0aGVpciBjb25zdGl0dWVudHMsIGFuZCBhIHJpZ2h0IHdpbmcsIGV4cGFuc2lvbmFyeSBmb3JlaWduIGdvdmVybm1lbnQuIApJIGRvbiB0aGluayB0aGV5IHN0b3AgbG92aW5nIHVubGVzcyBzb21ldGhpbmcgaGFwcGVucyB0aGF0IGRhbWFnZXMgeW91ciByZWxhdGlvbnNoaXAgd2l0aCB0aGVtLiBJZiB5b3UgaHVydCB0aGVtIG9yIGNvbnRpbnVvdXNseSBkaXNyZXNwZWN0IHRoZWlyIGJvdW5kYXJpZXMgKHRhaWwgcHVsbGluZywgc3dpbmdpbmcgdGhlIGNhdCBhcm91bmQgaWYgdGhleSBkb24gbGlrZSB0aGF0LCBldGMpLCBJIHRoaW5rIHRoZXkgbGVhcm4gdGhhdCB0aGV5IGNhbiB0cnVzdCB5b3UuIApEaWQgTWFuYWZvcnQgZ2V0IHN1c3BpY2lvdXMgYW5kIGNvbnRhY3QgdGhlIEZCST8gV2FzIENvbWV5IG9uIHRoZSBzaWRlIG9mIE9iYW1hL0x5bmNoIHRvIGVudHJhcCB0aGVtIGFuZCBnZXQgYSBGSVNBIHdhcnJhbnQ/IFRoaXMgRW1pbiBndXkgcmljaCBSdXNzaWFuIERhZCBpcyBBTlRJIFB1dGluIGFuZCBoaXMgUFIgRmlybSB3YXMgdGhlIFBvZGVzdGEgZ3JvdXAuIFRoZXkgZm91bmQgYSB1c2VmdWwgY29ubmVjdGlvbiB0aHJvdWdoIEdvbGRzdG9uZSBhbmQgaW52aXRlZCBoaW0gdG8gdGhlIFdoaXRlIEhvdXNlIHRoZSB3ZWVrIGJlZm9yZSBoZSBzZW50IHRoZSBlbWFpbC4gVG8gYmUgY29hY2hlZCBvbiB0aGUgZXhhY3Qgd29yZGluZyB0byBnZXQgYSBGSVNBIHdhcnJhbnQ/IFdobyBkaWQgR29sZHN0b25lIG1lZXQgd2l0aD8gRXZlcnkgUnVzc2lhbiBpbiB0aGF0IG1lZXRpbmcgd2FzIEFOVEkgUHV0aW4gYW5kIG9uIHRoZSBDbGludG9uIHRlYW0uIFRoZSBtZWRpYSBjYWxscyB0aGlzIGxpdHRsZSBob25leXBvdCBsYXd5ZXIgYSBLcmVtbGluIGxhd3llci4gCk9uIE1vbmRheSwgU2VwdGVtYmVyIDI5LCBKYWtlJ3MgRGluZXIgd2lsbCBob2xkIHRoZSBXb3JsZCBTZXJpZXMgUG9rZXIgVG91cm5hbWVudCBvZiBIb2xkIEVtJyBmb3IgSGFiaXRhdCwgYmVuZWZpdGluZyBCZW5kIEFyZWEgSGFiaXRhdCBmb3IgSHVtYW5pdHkuIAoiQnkgdGhlIHRpbWUgd2UgZ28gdGhyb3VnaCB0aGUgZGUgYW1hbGdhbWF0aW9uIHByb2Nlc3Mgd2UgYXJlIGhvcGluZyBmb3IgdGhlIGZpcnN0IG9mIE5vdmVtYmVyIHRvIHRha2Ugb3ZlciB0aGUgb3BlcmF0aW9uIGJ1dCBpdCBpcyBub3QgZGVmaW5pdGUuIApJIHRoaW5rIHBlb3BsZSBzaG91bGQgcGF5IGF0dGVudGlvbiB0byB0aGUgZmFjdCB0aGUgUkZVIGhhdmVuIG1hZGUgdGhlIG1vbmV5IGV4cGVjdGVkIG9yIGlzIGRvd24gZnJvbSB3aGF0IGl0IHdhcy4gV2hlbiB5b3UgdGhpbmsgYWJvdXQgdGhlIDZOIG5vdCBnZXR0aW5nIGFzIGdvb2QgYSBzcG9uc2Vyc2hpcCBkZWFsIGFzIGJlZm9yZSwgTlosIEF1cyBhbmQgU0EgYWxsIGZhY2luZyBzb21lIGZpbmFuY2lhbCBzdHJhaW4gdG9vLiAKTWFrZSBzdXJlIHRoYXQgeW91IGRvIHRoaXMgYWZ0ZXIgZWFjaCBkYXRlIHRvIGtlZXAgdHJhY2suIFN0YXRpc3RpYyBncm93dGggb3Bwb3J0dW5pdGllcyBvcGVuIHRvIG9ubGluZSBkYXRpbmcgc2l0ZSB0byBhdHRyYWN0IG1hbnkgdXBwZXIgbGltYnMgZnJlZS4gU3BlZWQgRGF0aW5nIGlzIGEgc2VyaWVzIG9mIHNob3J0IDQgbWludXRlIGRhdGVzIGluIHF1aWNrIHN1Y2Nlc3Npb24uIFBsZWFzZSBub3RlOiBJZiB5b3UgcHVyY2hhc2UgYSB0aWNrZXQgdG8gdGhpcyBldmVudCBhbmQgc3Vic2VxdWVudGx5IGZpbmQgeW91cnNlbGYgdW5hYmxlIHRvIGF0dGVuZCwgd2UgcmVxdWVzdCB0aGF0IHlvdSBsZXQgdXMga25vdyBieSBlbWFpbGluZyB1cyBhdCBqdXN0eW91cnNwZWVkIGdtYWlsLiBDaHJpc3RpYW4gc3BlZWQgZGF0aW5nIGlzIGFuIG91dCBvZiB0aGUgYm94IHdheSBvZiBtZWV0aW5nIGluIGxhaWQgYmFjayBzZXR0aW5ncyBzdWNoIGFzIGNhZmVzLCBwdWJzLCBjaHVyY2hlcyBhbmQgY2x1YnMuIFdoZW4gdGhlIHdoaXN0bGUgYmxvd3MsIGFsbCBndXlzIG1vdmUgYWxvbmcgb25lLgpJZiB5b3Ugc3RpbGwgZG9uIHF1aXQsIHRoZW4geW91IHByb3ZlZCB0aGV5IHdlcmUgaW4gZmFjdCBwYXlpbmcgeW91IGVub3VnaCBtb25leS4gRW1wbG95ZXJzIGRvbiBkZWNpZGUgdGhlaXIgZW1wbG95ZWVzIHdhZ2VzIGJhc2VkIG9uIGZlZWxpbmdzLCB0aGV5IGJhc2UgaXQgb24gdGhlIGdvaW5nIG1hcmtldCByYXRlLiAKUHJhY3RpdGlvbmVycyBoYXZlIHRoZSBvcHBvcnR1bml0eSB0byBtZWV0IHRoZSBlZHVjYXRpb24gcmVxdWlyZW1lbnQgdGhyb3VnaCBhIGdyYW5kZmF0aGVyZWQgY2xhdXNlIHRoYXQgcmVxdWlyZXMgaW5zdHJ1Y3Rpb24gaW4gYSBTdGF0ZSBhcHByb3ZlZCBwcm9ncmFtLiBUaGVyZSdzIG5vdCBtdWNoIHRpbWUgaW4gd2hpY2ggdG8gZG8gdGhpcy4gVGhlIGhvdXJzIG5lZWQgdG8gYmUgYWNoaWV2ZWQgYmVmb3JlIEF1Z3VzdCAzMXN0LgpJZGVhbGx5IEkgd291bGQgbGlrZSBmb3IgeW91IHRvIHRyeSBiZWNhdXNlIGl0IHNlZW1zIGxpa2UgaXQgaW1wb3J0YW50IHRvIHlvdSwgYnV0IGlmIHlvdSBjaGFuZ2UgeW91ciBtaW5kIGFuZCBmZWVsIHlvdSBkb24gd2FudCB0byBvciBkb24gZmVlbCBpdCBpbXBvcnRhbnQgZW5vdWdoIHRvIHB1dCB5b3VyIHNlbGYgdGhyb3VnaCBhbGwgdGhlIGFueGlldHksIHRoYXQgb2theSB0b28uIFRoaXMgZG9lc24gbWVhbiB5b3UgYXJlIGhvcGVsZXNzLiAKVGhlcmUgYXJlIHNldmVyYWwgd2Vic2l0ZXMgdGhhdCBzZWxsIHRoaXMgdHlwZSBvZiwgdW1tLCBzdHVmZi4gCkFzIGEgcXVpY2sgZXhhbXBsZSwgbGluYSBpcyBub3JtYWxseSBhYmxlIHRvIGp1c3QgY2xlYXIgd2F2ZXMgaW5zdGFudGx5IHdpdGggbHNhK3NsYXZlLCBidXQgYWdhaW5zdCBsaXZpbmcgYXJtb3IgaXQgYmUgcmVkdWNlZCB0d2ljZSwgbWVhbmluZyB0aGF0IGFsbCB0aGUgbWVsZWUgY3JlZXBzIHdpbGwgbGl2ZS4gQWxzbyBtYWtlcyBhIGJpZyBkaWZmZXJlbmNlIGFnYWluc3QgY2xlYXZlLiBMSXZpbmcgYXJtb3IgY291bGQgbWFrZSBlYXN5IGNyZWVwIHdhdmVzIGludG8gcmVxdWlyaW5nIGEgbGFyZ2VyIHRpbWUgaW52ZXN0bWVudCB0byB0YWtlIGRvd24sIGFuZCBiYXNpY2FsbHkgaW1wb3NzaWJsZSBmb3IgeW91ciBiYXNlIHRvIGRlYWwgd2l0aCBvbiB0aGVpciBvd24uLiAKVGhpcmQgYW5kIGZpbmFsIHRoaW5nIGlzIHRoYXQgd2FzIFJhc2hmb3JkJ3MgZmlyc3QgcGVuIGZvciBVbml0ZWQuIEltYWdpbmUgYmVpbmcgYW4gYWNhZGVteSBraWQsIGdvaW5nIHVwIGFnYWluc3QgQnVmZm9uIHRvIHdpbiBpdCBmb3IgeW91ciB0ZWFtIGFuZCBqdXN0IHNtYXNoaW5nIGl0IGluLCBjb29sIGFzIGV2ZXIuIFRvIHRoaW5rIHNvbWUgb2YgeW91IGNhbGxlZCBoaW0gb3ZlcnJhdGVkIGp1c3Qgc2l4IG1vbnRocyBhZ28hIQpBbmFsb2dvdXMgdG8gd2h5IE5ldyBZb3JrIGlzIHRoZSBmaW5hbmNpYWwgY2FwaXRhbCBvZiB0aGUgVVMgdG9kYXk6IGJlY2F1c2UgaXQgd2FzIHRoZSBmaW5hbmNpYWwgY2FwaXRhbCBvZiB0aGUgVVMgeWVzdGVyZGF5LiBUaGVyZSBtYXliZSBvdGhlciBodWJzIGluIG90aGVyIGNvdW50cmllcyBkdWUgdG8gZ2VvcG9saXRpY2FsIHJlYXNvbnMuLiAKSmw0MjMzICAzMTkgcG9pbnRzICBzdWJtaXR0ZWQgNiBkYXlzIGFnbwpXZWlnaCB0aGUgb3B0aW9ucywgc3BlYWsgdG8gYW4gYXR0b3JuZXksIGlmIHlvdSBmaWdodCBpdCwgdG8gY291bnQgb24gdXNpbmcgdGhhdCBsZW5kZXIgYWdhaW4gZWl0aGVyLiAKSGlzIHNldmVuIGJvb2tzIGluY2x1ZGUgbWFudWFscyBvbiBsYXNlciB1c2UuIlRoZW4gdGhleSBsZWFybiB0aGF0IHdoYXQgdGhleSdyZSBmZWVsaW5nIGlzIGEgcGhvdG9jaGVtaWNhbCByZWFjdGlvbiwgbm90IGEgcGhvdG90aGVybWFsIG9uZSwgYW5kIHRoZSBsaWdodCBnb2VzIG9uLCBubyBwdW4gaW50ZW5kZWQuIk1vc3QgdmV0ZXJpbmFyeSBwcmFjdGl0aW9uZXJzIG5vdyBoYXZlIGF0IGxlYXN0IGEgY3Vyc29yeSBrbm93bGVkZ2Ugb2YgQ2xhc3MgSVYgbGFzZXIgdGhlcmFweSBhbmQgaXRzIGVmZmVjdGl2ZW5lc3MgaW4gcmVsaWV2aW5nIHBhaW4sIHJlZHVjaW5nIGluZmxhbW1hdGlvbiBhbmQgYWNjZWxlcmF0aW5nIGhlYWxpbmcsIFJpZWdlbCBzYXlzLiJUaGUgZ29hbCAgaXMgdG8gb2J0YWluIGEgZGV2aWNlIHRoYXQgcHJvdmlkZXMgdGhlIGRlZXBlc3QgcGVuZXRyYXRpb24gYW5kIHRoZSBncmVhdGVzdCBhbW91bnQgb2YgcGhvdG9iaW9zdGltdWxhdGlvbiBpbiBhIHJlYXNvbmFibGUgYW1vdW50IG9mIHRpbWUsIiBoZSB3cml0ZXMgaW4gaGlzIHBhcGVyICJTY2llbnRpZmljIEZhY3RzIENvbmNlcm5pbmcgQ2xhc3MgSVYgTGFzZXIgVGhlcmFweSBpbiBWZXRlcmluYXJ5IE1lZGljaW5lLiIiVGhlIG1vc3QgY29tbW9uIHJlYXNvbiBmb3IgdHJlYXRtZW50IGZhaWx1cmUgaXMgbG93IHBvd2VyIGFuZCBkb3NhZ2UsIHNob3J0IHdhdmVsZW5ndGhzIGFuZCBub25zY2llbnRpZmljIHRyZWF0bWVudCBwcm90b2NvbHMsIiBhZGRzIFJpZWdlbCwgd2hvIGNvbnN1bHRzIGZvciBMaXRlQ3VyZSwgYSBtYWtlciBvZiBDbGFzcyBJViB0aGVyYXB5IGxhc2VycyBmb3IgdmV0ZXJpbmFyeSB1c2UuIlVuZm9ydHVuYXRlbHksIHNvbWUgbWFudWZhY3R1cmVycyBoYXZlICdjcmVhdGVkJyB0aGVyYXB5IHByb3RvY29scyB0byBmaXQgcHJlIGV4aXN0aW5nIGVxdWlwbWVudCwgcmF0aGVyIHRoYW4gdXNpbmcgc2NpZW50aWZpYyBmYWN0cyBhbmQgY2xpbmljYWwgcmVzdWx0cyB0byBndWlkZSBpbiB0aGUgZGVzaWduIG9mIHRoZWlyIGxhc2VyIHByb2R1Y3QuIlRoZSBrZXkgdG8gYSBzdWNjZXNzZnVsIHRoZXJhcGV1dGljIGRvc2Ugb2YgbGFzZXIgZW5lcmd5IGlzIGFjaGlldmluZyB0aGUgcmlnaHQgY29tYmluYXRpb24gb2YgcG93ZXIsIHdhdmVsZW5ndGggYW5kIHRpbWUsIHNheSBSaWVnZWwgYW5kIG90aGVycyB3aXRoIGV4dGVuc2l2ZSBleHBlcmllbmNlIGFjY2Vzc2luZyB0aGUgbWVkaWNhbCBiZW5lZml0cyBvZiB0aGUgdGVjaG5vbG9neS5BIHRoZXJhcGV1dGljIGRvc2Ugb2YgZW5lcmd5IGlzIG1lYXN1cmVkIGluIEpvdWxlcyBkZWxpdmVyZWQgcGVyIGNlbnRpbWV0ZXIgc3F1YXJlZC5UaGUgV29ybGQgQXNzbi4gT2YgTGFzZXIgVGhlcmFweSBoYXMgZXN0YWJsaXNoZWQgdGhhdCB0YXJnZXQgdGlzc3VlcyBuZWVkIGEgZG9zZSBvZiA1IHRvIDEwIEpvdWxlcyBwZXIgY2VudGltZXRlciBzcXVhcmVkIHRvIGdldCBhIGJpb2xvZ2ljYWwgcmVzcG9uc2UgaW4gY2VsbHMsIFJpZWdlbCBzYXlzLldhdmVsZW5ndGggaXMgaW1wb3J0YW50IGJlY2F1c2UgaXQgZGljdGF0ZXMgdGhlIGRlcHRoIG9mIHBlbmV0cmF0aW9uLCBzYXlzIEpvaG4gR29kYm9sZCwgRFZNLCBvbmUgb2YgdGhlIGZpcnN0IHZldGVyaW5hcmlhbnMgdG8gdXNlIENsYXNzIElWIGxhc2VyIHRoZXJhcHkuIApUaGUgY2hhbGxlbmdlcyBoYXZlIGJlZW4gZ3JlYXRlciB0aGFuIG1pZ2h0IGhhdmUgYmVlbiBleHBlY3RlZCBhdCB0aGUgdGltZSBvZiB0aGUgYnVkZ2V0LiAKIk1zLiBBbmRlcnNvbiBmaWxlZCBmb3IgZGl2b3JjZSBmcm9tIFtSaWNrIFNhbG9tb25dIG9uIEZlYi4gMTEsIDIwMTUsIiBBbm4gR3Vycm9sYSdzIHN0YXRlbWVudCBiZWdhbi4gIkEganVkZ2UgZ3JhbnRlZCBNcy4gQW5kZXJzb24gYSByZXN0cmFpbmluZyBmb3IgZ29vZCByZWFzb24sIHRvIHByb3RlY3QgaGVyIHNhZmV0eS4gW01yLiBTYWxvbW9uXSBoYXMgYmVlbiBhdm9pZGluZyBiZWluZyBzZXJ2ZWQuIEhpcyBjbGFpbXMgYWJvdXQgTXMuIEFuZGVyc29uIGFyZSByaWRpY3Vsb3VzIGFuZCBkbyBub3QgZGlnbmlmeSBhIHJlc3BvbnNlLiBTaGUgaXMgbW92aW5nIG9uIHdpdGggaGVyIGxpZmUgYW5kIHNwZW5kaW5nIHF1YWxpdHkgdGltZSB3aXRoIGhlciBmYW1pbHkuIgpOb3R3aXRoc3RhbmRpbmcgaW1wcmVzc2l2ZSB3aW5zIG92ZXIgYm90aCBVQ0xBIGFuZCBVU0MsIFV0YWggc3RpbGwgZmluaXNoZWQgYmVoaW5kIGJvdGggdGVhbXMgYXQgbnVtYmVyIGZpdmUgaW4gdGhlIFNvdXRoIERpdmlzaW9uLCBhbmQgbnVtYmVyIHNpeCBpbiB0aGUgb3ZlcmFsbCBjb25mZXJlbmNlIHN0YW5kaW5ncy4gQXMgdGVtcHRpbmcgYXMgaXQgaXMgdG8gcmVoYXNoIHdoYXQgbWlnaHQgaGF2ZSBiZWVuLCBJIGFtIGNvbnRlbnQgdG8gc2ltcGx5IHJldmVsIGluIHdoYXQgdGhlIFV0ZXMgd2VyZSBhY3R1YWxseSBhYmxlIHRvIGFjY29tcGxpc2guCkFmdGVyIGFsbCwgd2hlbiB0aGV5IHN0b3AgZ2V0dGluZyBwYWlkIGJ5IHRoZWlyIGVtcGxveWVyLCB0aGUgZ292ZXJubWVudCB3aWxsIGJlIHBheWluZyB0aGVtLiAKVGhleSB3aWxsIHByb2JhYmx5IG5lZWQgcHJvb2Ygb2YgcHVyY2hhc2Ugc3VjaCBhcyBvcmlnaW5hbCByZWNlaXB0LCBiYXIgY29kZSBvbiBwYWNrYWdlLCBvciBzb21lIG90aGVyIGZvcm0gb2YgaWRlbnRpZmljYXRpb24uIFRoZXkgd2lsbCBpbnN0cnVjdCB5b3Ugb24gd2hhdCBpcyBuZWVkZWQgYW5kIHdpbGwgdGhlbiBnaXZlIHlvdSBhIG5ldyBzZXJpYWwgbnVtYmVyIGlmIG5lY2Vzc2FyeS4gClRoZSB0aHJlYXQgZnJvbSB0aGlzIHdlYXBvbiB3YXMgYWdvbml6aW5nIGFuZCBwYWxwYWJsZSB0aGUgcmVzdWx0cyBvZiBnYXMgYXR0YWNrcyB1cG9uIGFybWVkIGNvbWJhdGFudHMgaW4gV1dJIGFuZCB0aGUgZ2Fzc2luZyBvZiBjaXZpbGlhbnMgaW4gdGhlIDE5MjAgYW5kIGVhcmx5IDE5MzAgbWFkZSBhIGhhcmQgc3RyaWtlIGludG8gdGhlIHNvY2lhbCBmYWJyaWMsIGFuIGVub3Jtb3VzIGdhcGluZyBuZXcgaG9sZSB0byBiZSBmaWxsZWQgaW4gdGhlIGhlYXJ0IG9mIGZlYXIuLiAKVHJ5IGRyaW5raW5nIGluIG1vcmUgbG9jYWwgZnJpZW5kbHkgZXN0YWJsaXNobWVudHMuIApUaGVyZSB3ZXJlIG5vIHRyaWFscyBmb3IgdGhlcmFwZXV0aWMgdG91Y2ggb3IgYmlvZmVlZGJhY2suVGhlIG9uZSB0cmlhbCBvbiBhY3VwdW5jdHVyZSBkaWQgbm90IG9mZmVyIGFueSByZWxpYWJsZSBjb25jbHVzaW9ucy4gT25lIFJDVCBvbiBtYXNzYWdlIHRoZXJhcHkgZm91bmQgdGhhdCB0aGUgbWVuIHJlcG9ydGVkIGEgc2lnbmlmaWNhbnQgZGVjcmVhc2UgaW4gdGhlIHBhaW4gaW50ZW5zaXR5IGltbWVkaWF0ZWx5IGFmdGVyIHRoZSBtYXNzYWdlIHNlc3Npb24gKEYoNSwxMykgPSA4LjI0LCBwID0gMC4wMSkgYW5kIHRoZSB3b21lbiByZWNlaXZpbmcgbWFzc2FnZSBzaG93ZWQgbm8gZGlmZmVyZW5jZS4gCkRvbiBkZWxheSwgYSBkZW50aXN0IGRlbnRpc3QgaXMgYSBkb2N0b3IgYW5kIGhlIGhhcyBhY2Nlc3MgdG8gc29tZSBwcmV0dHkgcG93ZXJmdWwgYW5lc3RoZXNpYSBpZiBuZWVkZWQuIEp1c3QgcmVsYXguCllvdSdsbCBiZSBhYmxlIHRvIGxlYXJuIHlvdXIgb3Bwb25lbnQncyB0ZW5kZW5jaWVzIGZhc3RlciBhbmQgdGFrZSBhZHZhbnRhZ2Ugb2YgdGhlbS4gV2l0aCBzbyBtYW55IGdyZWF0IHBsYXllcnMgb3V0IHRoZXJlIGluIHRoZSB3b3JsZCBvZiBwb2tlciwgeW91IG5lZWQgZXZlcnkgYWR2YW50YWdlIHRoYXQgeW91IGNhbiBnZXQgdG8gc3RheSBvbiB0b3AuIApQaXhpZWNoaWNraWUgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KVGhlIGN1cnJlbnQgcG90IGFuZCB0aGUgYW1vdW50IG9mIGJldHMgdGhhdCB3aWxsIGJlIGFkZGVkIG9uIGluIHRoZSBmdXR1cmUuIElmIHlvdSBoYXZlIGNhbGN1bGF0ZWQgdGhhdCB0aGUgYmV0IHRvIHlvdSB3aWxsIGJlIDUwIGFuZCBoYXZlIDIwIGNoYW5jZSBvZiBoaXR0aW5nIGFuZCB0aGUgcG90IGF0IHRoZSByaXZlciB3aWxsIGJlIGhpZ2hlciB0aGFuIDI1MCwgdHJ5IHRvIGNhbGwgZm9yIGl0LiBJZiBub3QsIGZvbGQuIApTbyBnZW5lcmFsbHkgdGhleSBwbGF5IHZlcnkgcGFzc2l2ZWx5IGZvciB0aGUgZmlyc3QgdGhyZWUgb3IgZm91ciBsZXZlbHMuIApUaGlzIGlzIGZlZGVyYWwgbGF3LCBub3Qgc3RhdGUgbGF3LiBMZWdhbGx5LCB0aGUgb25seSByZXF1aXJlbWVudCBpcyB0aGUgYXNzZXQgdHJhbnNmZXIgICB0aGUgcmVjZWl2aW5nIG9yZ2FuaXphdGlvbiBjYW4gYmUgZm9yY2VkIHRvIHBlcmZvcm0gYW55IHNlcnZpY2VzIHJlbGF0ZWQgdG8gdGhlIGRpc3NvbHZlZCBvcmdhbml6YXRpb24uIApEZWxvaXR0ZSBEaWdpdGFsJ3MgQWxpY2lhIEhhdGNoIG9uIHRoZSBtb2Rlcm4gQ01PClRoZSBtb3ZpZSBpcyBhdCBpdHMgbW9zdCBpbnRlcmVzdGluZyB3aGVuIGl0IGRlbHZlcyBpbnRvIE1vbGx5IHBhc3QgYW5kIGV4cGxvcmVzIGhlciBkYWRkeSBpc3N1ZXMgd2l0aCBoZXIgaGFyZCBkcml2aW5nIHBzeWNob2xvZ2lzdCBmYXRoZXIgKEtldmluIENvc3RuZXIpLCBidXQgdGhlIHNjcmlwdCBzdHJ1Z2dsZXMgdG8gcmVtb3ZlIGl0cyBwb2tlciBmYWNlIGFuZCBkZWFscyBhIHdlYWsgaGFuZCB3aGVuIGl0IGNvbWVzIHRvIGNoYXJhY3RlciBkZXZlbG9wbWVudC4KVW5pdmVyc2l0eSBvZiBFeGV0ZXIKQXJlIG1ha2luZyBnb29kIHByb2dyZXNzIGluIG5ldyBtYXJrZXRzIHdpdGggdHJlbWVuZG91cyBzdWNjZXNzIGluIFNwYWluIGFuZCBJdGFseSB3aGVyZSB3ZSBzZWUgZnVydGhlciBvcHBvcnR1bml0aWVzIGZvciBncm93dGguIApBcnRpZmljaWFsIGludGVsbGlnZW5jZSBlbXBoYXNpemVzIG9uIHRlYWNoaW5nIGEgY2VydGFpbiB0ZWNobm9sb2d5IG9yIHJvYm90IHRvIGxlYXJuIG5ldyB0aGluZ3MuIFRoaXMgaXMgdmVyeSB1c2VmdWwgaW4gb25saW5lIGdhbWluZyBzeXN0ZW0gd2hlcmUgcHJvZ3JhbW1lcnMgY2FuIHRyYWluIGNlcnRhaW4gYXNwZWN0cyBvZiB0aGUgZ2FtZSBhbmQgcHJvZ3JhbXMgdG8gbGVhcm4gdGhyb3VnaCB0aGF0IHVzZXIgaW50ZXJhY3Rpb24uIEFzIHRpbWUgZ29lcyBieSwgdGhlIGFkdmFuY2VtZW50cyBpbiB0ZWNobm9sb2d5IGNhbiByZSBjcmVhdGUgYW4gYW1hemluZyBodW1hbiBleHBlcmllbmNlIGZvciBnYW1lcnMuIApNYXJjbWFycm9kICAzIHBvaW50cyAgc3VibWl0dGVkIDMgbW9udGhzIGFnbwpFdmVudHVhbGx5IHdlIGdvdCBjYXVnaHQgYW5kIEkgc3BlbnQgbXkgMjFzdCBiaXJ0aGRheSBpbiBBcm1sZXkgcHJpc29uIFtub3cgSE0gUHJpc29uIExlZWRzXS4gCkkgZ2V0IGl0LCB5b3Ugd2FudCB0byBjb21wYXJlIHdoYXQgYmV0dGVyOiBpbnZlc3RpbmcgaW4gcHJvcGVydHkgb3IgaW52ZXN0aW5nIGluIHNoYXJlcy4gQnV0IHlvdSBqdXN0IHVzaW5nIGFuIGF2ZXJhZ2Ugb2YgYW4gYXZlcmFnZSBvZiBhbiBhdmVyYWdlIHRvIGNvbXBhcmUgYW4gYXZlcmFnZSBvZiBhbiBhdmVyYWdlIG9mIGFuIGF2ZXJhZ2UuIApCZWNhdXNlIHdoZW4geW91IGFyZSBhZHZlcnRpc2luZyB0byB0cnkgYW5kIHJlYWNoIGFzIG1hbnkgcGVvcGxlIGFzIHBvc3NpYmxlLCBpdCBkb2Vzbid0IG1ha2UgbXVjaCBzZW5zZSB0byBpbmNsdWRlIGhvbW9zZXh1YWxzICggMiUgICA2JSBvZiB0aGUgcG9wdWxhdGlvbikgb3IgYmxhY2sgcGVvcGxlICgxNiUgb2YgdGhlIHBvcHVsYXRpb24pIGJlY2F1c2UgdGhleSBhcmUgbWlub3JpdHkgZ3JvdXBzLCB0aGVyZWZvcmUgdGhleSB3ZXJlIGxpa2VseSBpbmNsdWRlZCBkdWUgdG8gUEMgY3VsdHVyZSBhbmQgbm90IGJlY2F1c2UgdGhlIGFkdmVydGlzZXJzIHRob3VnaHQgaXQgd291bGQgYmUgZ29vZCBhZHZlcnRpc2luZywgbWFraW5nIGl0IGZvcmNlZC4KT3IgdGhleSB0aGluaywgaW4gdGhpcyBkYXkgYW5kIGFnZSwgdGhlcmUncyBzbyBtdWNoIGN5bmljaXNtIHdpdGhpbiB0aGUgbWVkaWEgYW5kIHdoYXQgd2UgZG8uIApEZXBlbmRzIG9uIHdoYXQgeW91IHRoaW5rIHRoZSBkZWVwIHN0YXRlIGlzLiBTb21lIGZvbGtzIHRoaW5rIGl0J3MganVzdCBsaWtlLCBDTk4gYW5kIHRoZSBGQkkgYW5kIEROQywgaW4gd2hpY2ggY2FzZSB5ZWFoIGhlIGRvZXNuJ3QgbGlrZSB0aGVtLiAKQW5kIGhlIHNwYXJlcyBubyBvcHBvcnR1bml0eSB0byBiZSB0cnVseSBoaW1zZWxmIGFzIGhlIHdhcyBpbiBoaXMgRGVjZW1iZXIgMjAxNCB2aXNpdCB0byBEaGFrYSB3aGVyZSBoZSBjb3VsZCBub3QgYmUgbW9yZSBzcGl0ZWZ1bCBhYm91dCBQYWtpc3Rhbi4gCkhlIGNpdGVkICJpenphdCIgYW5kICJjaGFyaXRyYSwiIHdoaWNoIG1lYW4gZGlnbml0eSBhbmQgY2hhcmFjdGVyLCByZXNwZWN0aXZlbHksIGluIHRoZSB3ZXN0ZXJuIEluZGlhbiBsYW5ndWFnZSBvZiBHdWphcmF0aS4KRGVhciBHdWVzdCwgV2UgcmVncmV0IHRoZSBsZXNzIHRoYW4gcGVyZmVjdCBleHBlcmllbmNlIGF0IG91ciBTaXJlbmlzIEhvdGVsIEdvbGV0YSBTcGEuIApTb21lIGxhd3MsIHBhcnRpY3VsYXJseSByb2FkIHRyYWZmaWMgbGF3cyBkbyByZXF1aXJlIHRoZSBvZmZpY2VyIHRvIGJlIGluIHVuaWZvcm0uIFdoZXRoZXIgb3Igbm90IGEgY29uc3RhYmxlIHdhcyBpbiB1bmlmb3JtIGlzIGEgbWF0dGVyIGZvciB0aGUgY291cnQgdG8gZGVjaWRlOyBob3dldmVyIGluIFdhbGx3b3JrIHYgR2lsZXMgMTk3MCBpdCB3YXMgaGVsZCB0aGF0IGEgY29uc3RhYmxlIGRlYWxpbmcgd2l0aCBhIHJvYWQgdHJhZmZpYyBtYXR0ZXIgd2FzIGluIHVuaWZvcm0gZGVzcGl0ZSBub3Qgd2VhcmluZyBoaXMgaGF0Li4gClRoZSB0cnV0aCBvZiB0aGUgbWF0dGVyIGlzIHRoYXQgZnVybml0dXJlIHRoYXQgd2FzIGRlc2lnbmVkIGZvciBnYW1ibGluZyBoYXMgYSBsb3QgbW9yZSB0byBkbyB3aXRoIHRoZSBmdW4gb2YgdGhlIGdhbWUgdGhhbiB5b3UgbWlnaHQgdGhpbmssIGFuZCBpZiB5b3UgYXJlIGludmVzdGVkIGluIHlvdXIgcG9rZXIgbmlnaHRzIGFuZCB5b3Ugd2FudCBldmVyeW9uZSB0byBiZSBjb21mb3J0YWJsZSwgeW91IHdpbGwgZmluZCB0aGF0IHRoZXJlIGFyZSBtYW55IGRpZmZlcmVudCBvcHRpb25zIHRoYXQgYXJlIGF2YWlsYWJsZSBmb3IgeW91LiBUYWtlIHNvbWUgdGltZSBhbmQgcmVhbGx5IGZpZ3VyZSBvdXQgd2hhdCBvcHRpb25zIGFyZSBnb2luZyB0byBzdWl0IHlvdSB3ZWxsLCBhbmQgcmVhbGx5IGNvbnNpZGVyIHdoYXQgaXMgZ29pbmcgb24gd2hlbiB5b3UgbG9vay4gV2hlbiB5b3Ugd2FudCB0byBtYWtlIHN1cmUgdGhhdCB5b3UgYW5kIHlvdXIgZ3Vlc3RzIGFyZSByZWFsbHkgZW5qb3lpbmcgdGhlIGdhbWUgaW4gZ2VuZXJhbCwgZmlndXJlIG91dCB3aGF0IGEgZ3JlYXQgOTYgSW5jaCBUZXhhcyBIb2xkZW0gVGFibGUgV2l0aCBSZWQgRmVsdCBjYW4gZG8gZm9yIHlvdXIgZ2FtaW5nIGVudmlyb25tZW50LgpCdXQgaGUgd2FzIGFsc28gc3RydWdnbGluZy4KU28gdGhlIGNhbXBhaWduIGlzIHJpZ2h0IHRocm91Z2ggT250YXJpbyBhbmQgd2Ugd2FudCB0byBicmluZyBhdHRlbnRpb24gdG8gd2hhdCBnb2luZyBvbiBhdCBDaGFydHdlbGwuIApMZXQgdGhlIFVTIGtpc3MgdGhlIFJ1c3NpYW4gZ292ZXJubWVudCBpbiBmb3JnaXZlbmVzcyBvdmVyIHRoZSBzcHkgc2NhbmRhbC4gQW1lcmljYW5zIHRoZSBvbmVzIHRoYXQgc2FpZCB0aGUgQ29sZCBXYXIgd2FzIG92ZXIgYW5kIHRoYXQgUnVzc2lhIHdhcyBzdWRkZW5seSBhIGRlbW9jcmFjeS4gdGhlIFJ1c3NpYW5zIGV2ZXIgc2FpZCBpcyB0aGV5IHdvdWxkIHV0aWxpemUgb3RoZXIgaWRlb2xvZ2llcyAgIGxpa2UgbmVvbGliZXJhbCBlY29ub21pY3MgYW5kIENocmlzdGlhbiBPcnRob2RveHkgICB0byBtb3ZlIHRoZSBwZW9wbGUgdG8gZG8gdGhlIHN0YXRlIGJpZGRpbmcuCkFjY29yZGluZyB0byB0aGUgVW5pdGVkIFN0YXRlcyBEZXBhcnRtZW50IG9mIExhYm9yJ3MgQnVyZWF1IG9mIExhYm9yIFN0YXRpc3RpY3MsIGFib3V0IGhhbGYgb2YgYWxsIG1hc3NhZ2UgdGhlcmFwaXN0cyB3b3JrIHBhcnQgdGltZS4gSG93ZXZlciwgYXMgdGhlIEJMUyBub3RlcywgdGhpcyBkb2VzIG5vdCBtZWFuIHRoYXQgdGhlIHRoZXJhcGlzdCBwcm92aWRlcyBtYXNzYWdlIG9yIGJvZHl3b3JrIDQwIGhvdXJzIGEgd2Vlay4gCjEuIEhvbGQgJ2VtIEVhY2ggcGxheWVyIGlzIGZpcnN0IGRlYWx0IHR3byBjYXJkcyBkb3duLiBBIHJvdW5kIG9mIGJldHRpbmcgb2NjdXJzIGFzIHBsYXllcnMgZGVjaWRlIGZvciB0aGUgZmlyc3QgdGltZSBpZiB0aGV5IGFyZSBpbiBvciB0aGV5J3JlIG91dC4gCjIpIFlvdSBuZWVkIHRvIGJlIHRoaW5raW5nIGFib3V0IG1vcmUgdGhhbiBqdXN0IEdEUFIgY29tcGxpYW5jZS4gRm9yIGV4YW1wbGUsIFBFQ1IgaW4gdGhlIFVLLCBDQU4gU1BBTSBBY3QgaW4gdGhlIFVTLCBhbmQgQ0FTTCBpbiBDYW5hZGEuIEVhY2ggb2YgdGhlc2UgbGF3cy9yZWdzIG1heSBoYXZlIGltcGFjdCB0byB5b3VyIGNvbW1lcmNpYWwgZW1haWwgbWFya2V0aW5nIHByb2dyYW1zIGFuZCB1c2Ugb2YgdGhpcmQgcGFydHkKTW9zdCBzdHVkZW50cyBiZWxpZXZlIHRoaXMgdG8gYmUgYSB3aW4gd2luIHRyYW5zYWN0aW9uLiAKU3JlYnJlbmljYSBtYXNzYWNyZQpZb3Ugd2lsbCBmaW5kIG1vc3QgZXZlcnl0aGluZyBjaGVhcGVyIGV4Y2VwdCBob3VzaW5nLiBFc3BlY2lhbGx5IHNvIGlmIHlvdSB3YW50IHRvIGxpdmUgaW4gImhpcCIgZG93bnRvd24gbG9jYXRpb25zIG9uIHRoZSBpc3RobXVzIG9yIG5lYXIgZWFzdCBzaWRlIG9yIHNvbWUgb2YgdGhlIHdlYWx0aHkgbmVpZ2hib3Job29kcyBvbiB0aGUgbmVhciB3ZXN0IHNpZGUuIFN1YnVyYnMgYXJlIGFsbCBvdmVyIHRoZSBwbGFjZSBpbiB0ZXJtcyBvZiBzY2VuZSBhbmQgY29zdHMuCkhpcyBmYXRoZXIgd2FzIGluIHRoZSBjb25zdHJ1Y3Rpb24gaW5kdXN0cnkgYW5kIGhpcyBtb3RoZXIgc29sZCBzdG9jayBmb3IgUEcgTmV3c29tIG1hcnJpZWQgaGlzIHdpZmUsIFRlc3NhLCBpbiAxOTY2IGFuZCB0aGUgY291cGxlIGhhZCB0aGVpciBzb24gR2F2aW4gYSB5ZWFyIGxhdGVyIGFuZCBhIGRhdWdodGVyLCBIaWxhcnkgbm93IEhpbGFyeSBOZXdzb20gQ2FsbGFuIGluIDE5NjguIFRoZSBjb3VwbGUgZGl2b3JjZWQgd2hlbiBHYXZpbiB3YXMgc3RpbGwgYSBib3kuIFRlc3NhIE5ld3NvbSBkaWVkIGF0IDU1IGluIDIwMDIgYWZ0ZXIgYSBsb25nIGZpZ2h0IHdpdGggYnJlYXN0IGNhbmNlci4uIApBbm5vdW5jZXMgRmlyc3QgSG90ZWwgaW4gVHVuaXNpYQpBbHNvLCB0aGUgYWNjb3VudGFudCBjYW4ga2VlcCBkb2luZyB3aGF0IGhlIGRvaW5nLCBidXQgdGhhdCBkb2VzbiBtZWFuIEkgaGF2ZSB0byBoaXJlIGhpbS4gSWYgaGUgd29ya2VkIGZvciB0aGUgc3RhdGUgYW5kIG15IHRheCBkb2xsYXJzIHdlbnQgdG8gZnVuZGluZyBoaXMgc2FsYXJ5LCBJIHdvdWxkIHByb3Rlc3QganVzdCBhcyBtdWNoLCB0aGUgc2FtZSB3YXkgSSBwcm90ZXN0ZWQgdGhlIGN1cnJlbnQgQ29uc3RhYmxlIGFuZCBDb3JvbmVyLiAKMS4gCkRpZSBGQVogc2NocmVpYnQgbmljaHQsIGRhc3Mgc2llIGVzIGJlZGF1ZXJuLCB3ZW5uIHNpY2ggTGV1dGUgYmVpIElobmVuIGJla2xhZ2VuLCBzb25kZXJuIGRhc3Mgc2llIGVzIGJlZGF1ZXJuLCBkYXNzIExldXRlIHNpY2ggYW5nZWdyaWZmZW4gZmhsZW4uCk1vcmUgaW1wb3J0YW50bHksIGFzIGxvbmcgYXMgeW91IHVzZSByZWd1bGFyaXphdGlvbiwgZXZlcnl0aGluZyB3b3JrcyBpdHNlbGYgb3V0LiBFdmVuIGlmIGEgbGV2ZWwgb25seSBleGlzdHMgaW4gb25lIGRhdGFwb2ludCAoZXhhbXBsZTogb25seSAxIHJvdyB3aXRoICJHcmVlbmxhbmQiLCB5b3UgY2FuIHN0aWxsIHVzZSBpdC4gCktlZXAgc2hvdWxkZXJzIGJhY2sgYW5kIGRvd24uIApUaGlzIHBva2VyIGJvb2sgY2FuIGhlbHAgeW91IHRvIGxlYXJuIG5ldyBzdHJhdGVnaWVzIGFuZCBuZXcgcG9rZXIgc2tpbGxzIGFuZCB0ZWNobmlxdWVzLiAKQnV0IHRoaXMgd2FzLiAKT3IsIGVtcGxveWVycyBtaWdodCBhc2sgb25seSBhYm91dCBmZWxvbnkgY29udmljdGlvbnMgYW5kIG5vdCBtaXNkZW1lYW5vcnMuIEFsc28sIGRvbid0IGluY2x1ZGUgbW9yZSBpbmZvcm1hdGlvbiB0aGFuIGlzIG5lY2Vzc2FyeSwgaW5zdGVhZCB3cml0aW5nICJXaWxsIGRpc2N1c3MgYXQgaW50ZXJ2aWV3IiBvbiB0aGUgYXBwbGljYXRpb24uIE5ld3MgV29ybGQgUmVwb3J0OiBIb3cgdG8gRmluZCBhIEpvYiBXaGVuIFlvdSBIYXZlIGEgQ3JpbWluYWwgUmVjb3JkVGhlIEdsYWRpYXRvcjogSG93IHRvIEhhbmRsZSBhIENyaW1pbmFsIEhpc3RvcnlEZW52ZXIgUHVibGljIExpYnJhcnk6IEhvdyB0byBSZXNwb25kIHRvIHRoZSBGZWxvbnkgUXVlc3Rpb24uIApUaGUgRnJhbmNlIEludGVyIHB1YmxpYyBicm9hZGNhc3Rlciwgb24gdGhlIG90aGVyIGhhbmQsIHNlZXMgIm1vbWVudHVtIGJ1aWxkaW5nIGZvciBhIHNlY29uZCByZWZlcmVuZHVtIGlmIGRlYWRsb2NrIGNvbnRpbnVlcyIuClNvIHlvdSBjYW4gcmFpc2UgeW91ciBkZXgsIGFuZCB5b3VyIGRhbWFnZSB0aGlzIHdheSB0byBjb21wYXJhYmxlIGxldmVscyBvZiBhIGZ1bGwgYmFiIGNsYXNzPyBZZXQgdGhlIGJlbmVmaXRzIGFzaWRlIGZvciB0aGUgbG93ZXIgZGFtYWdlIHNlZW1zIHRvIGFwcGx5IHRvIGVuZXJneSBibGFzdHMganVzdCBhcyB3ZWxsIHdobyBoaXRzIHRvdWNoIGFjIHRvIGJlZ2luIHdpdGguCkkgd2FzIChhbSEgOiApICkgaW4gbG92ZSB3aXRoIGhpbSwgaGUgaGFkIHNob3duIG1lIHRpbWUgYW5kIHRpbWUgYWdhaW4gdGhhdCBoZSB3YXMgaW4gbG92ZSB3aXRoIG1lLCBhbmQgSSBuZXZlciBmZWx0IHNhZmVyIHdpdGggYW55b25lIGVsc2UuIFRoZXJlIGFyZSBtYW55IHdheXMgdG8gYmUgaW50aW1hdGUgc28gc3RpY2sgd2l0aCB0aGUgb25lcyB5b3UgZmVlbCBjb21mb3J0YWJsZSB3aXRoLiBJIHRoaW5rIHRoZSBzb2NpYWwgcHVzaCB0byBnZXQgbW9yZSB3b21lbiBpbnRvIFNURU0gY291cnNlcyBhbmQgY2FyZWVycyBpcyBmYW50YXN0aWMgICByaWdodGluZyBhIGhpc3RvcmljIHNvY2lhbCB3cm9uZy4gSSBnZXQgYW5ub3llZCB3aGVuIHRoZSBpbXBsaWNhdGlvbiBpcyB0aGF0IG1ham9yaW5nIGluIGFueXRoaW5nIG90aGVyIHRoYW4gU1RFTSBpcyBhIHdhc3RlIG9mIHRpbWUgYW5kIG1vbmV5LiBJIG1ldCB0b28gbWFueSBTVEVNIG1ham9ycyB0aGF0IGNvdWxkbiB3cml0ZSB0aGVpciB3YXkgb3V0IG9mIGEgcGFwZXIgYmFnOyB0aGV5IG1heSBrbm93IHRoZWlyIHN0dWZmLCBidXQgc29tZSBvZiB0aGVtIGFyZSBoYXJkIHByZXNzZWQgdG8gZXhwbGFpbiBpdCB0byBhbnlvbmUgZWxzZSBvciBpbnRlcmFjdCB3aXRoIG90aGVyIGh1bWFuIGJlaW5ncy4KSSB3ZW50IHRvIHNjaG9vbCAobWlkZGxlIHNjaG9vbCB0aHJvdWdoIHRoZSBmaXJzdCB5ZWFyIG9mIGNvbGxlZ2UpIHdpdGggYSBndXkgd2hvIGVuZGVkIHVwIGF0dGVtcHRpbmcgdG8gcm9iIGEgZmFzdCBmb29kIHJlc3RhdXJhbnQgYW5kIHNob290aW5nIGFuZCBtdXJkZXJpbmcgdGhlIG1hbmFnZXIgd2hvIGNvdWxkbiBvcGVuIHRoZSBjYXNoIHJlZ2lzdGVyLiAKSW4gNDI3IGNhcmVlciByZWd1bGFyIHNlYXNvbiBnYW1lcyBoZSBoYXMgMTE5IDEwOSAyMjggdG90YWxzLiAKSWYgdGhleSBkb24gb2ZmZXIgeW91IHRoZSByYWlzZSB5b3UgTkVFRCwgdGhlbiBsZWF2ZS4gCiJBZnRlciBzbG9wZXN0eWxlIEkgdGhpbmsgZXZlcnlvbmUgbmVlZGVkIHRoaXMgdG9kYXksIiBHYXNzZXIgc2FpZC4gIkV2ZXJ5b25lIG5lZWRlZCB0byBzaG93IHRoZWlyIGJlc3QgdHJpY2tzIGFuZCB0b2RheSB3YXMgb25lIG9mIHRoZSBoaWdoZXN0IGxldmVscyBpbiBnaXJscycgc25vd2JvYXJkaW5nIEkndmUgZXZlciBzZWVuLiIKQWZ0ZXIgYSBzdGFuZG9mZiwgaGUgc3RhcnRlZCBhIHJpdmFsIGdhbWluZyBtYWNoaW5lIGNvbXBhbnksIEFpbnN3b3J0aCBHYW1lIFRlY2hub2xvZ3kuIEhlIHJlbWFpbnMgZXhlY3V0aXZlIGNoYWlybWFuIGFuZCBoYXMgbm8gcGxhbnMgdG8gcmV0aXJlLi4gCiJMYXRlIGF0IG5pZ2h0IHdoZW4geW91J3JlIHdhaXRpbmcgZm9yIGEganVyeSBvciBpZiB5b3UncmUgd29ya2luZyBsYXRlIGluIHRoZSBkYXkgYW5kIHlvdSBsb29rIHVwIGFuZCB5b3Ugc2VlIEFicmFoYW0gTGluY29sbiBvdmVyIHlvdXIgc2hvdWxkZXIsIHRoYXQncyBraW5kIG9mIGEgZ29vZCB0aGluZywiIHNheXMgSG9uLiBUZXJyeSBTaGV3bWFrZXIsIEVsa2hhcnQgQ291bnR5IENpcmN1aXQgQ291cnQuICJJJ20gZ29pbmcgdG8gbWlzcyBjb21pbmcgaW4gZXZlcnkgZGF5LCBsb29raW5nIHVwIGFuZCBzZWVpbmcgaGlzIGZhY2Ugb24gdGhlIHdhbGwuIApJdCBhbiBhY3R1YWwgaXNzdWUgaW4gcGxhY2UgaW4gdGhlIE1pZGRsZSBFYXN0LCBhcyB3ZWxsIGFzIG90aGVycy4gCkxvY2FsIEV2ZW50cyBpbiBMb25kb24gZm9yIFNpbmdsZSBDaHJpc3RpYW5zCkxlIGRpYWJ0ZSwgcnBvbmQgaWwuIApUaGUgZXZlbnQgd2lsbCBiZSBsaXZlIHN0cmVhbWVkIG9ubGluZSBvbiBzZXZlcmFsIGxlYWRpbmcgZGlnaXRhbCBwbGF0Zm9ybXMgYW5kIHdpbGwgYmUgYnJvYWRjYXN0IGluIGZpdmUgZGlmZmVyZW50IGxhbmd1YWdlcy4gUG9rZXIgcGVyc29uYWxpdHkgS2FyYSBTY290dCwgaG9zdCBvZiBFU1BOJ3MgV29ybGQgU2VyaWVzIG9mIFBva2VyIGNvdmVyYWdlLCB3aWxsIGhvc3QgdGhlIGV2ZW50IHRoYXQgaXMgc2V0IHRvIGJlIHByZXNlbnRlZCBpbiByZWFsIHRpbWUsIGFsbG93aW5nIHBva2VyIGZhbnMgdG8gcGxhY2UgbGl2ZSBiZXRzIG9uIHRoZSBhY3Rpb24uClRoZSBhbm51YWwgdG90YWwgb2YgdGhlc2UgcGVuc2lvbnMsICQ2OCwwMDAgcGVyIHllYXIsIGltcGxpZXMgYSBjb21tdXRlZCB2YWx1ZSAoY2FwaXRhbCByZXF1aXJlZCB0byBnZW5lcmF0ZSB0aGUgaW5jb21lKSBvZiBhYm91dCAkMS41IG1pbGxpb24uIFNoZSBjb3VsZCBjYXNoIGluLCBidXQsIEVnYW4gc2F5cywgdGhhdCBjb3VsZCBjcmVhdGUgYSBiaWcgdGF4IGxpYWJpbGl0eS4gUHJvZmVzc2lvbmFsIG1hbmFnZW1lbnQsIGluZGV4YXRpb24gZm9yIG1vc3Qgb2YgdGhlIGluY29tZSwgYW5kIHNwb3VzYWwgYmVuZWZpdHMgc3VnZ2VzdCB0aGF0IGl0IGlzIHdpc2UgdG8gbGVhdmUgdGhlIHBlbnNpb25zIGluIHBsYWNlLiAKSG9uZGFzIGFyZSBrbm93biBmb3IgYmVpbmcgdmVyeSByZWxpYWJsZSBjYXJzIGFuZCBJIHF1aXRlIGxpa2UgdGhlbSBteXNlbGYgKEkgZXZlbiBvd24gb25lKSwgYnV0IGkgbm90IGEgbWVjaGFuaWMgYW5kIHNlZWluZyBzb21lb25lIGFzIGtub3dsZWRnZWFibGUgYXMgaGltIGhhdGluZyB0aGVtIHNvIG11Y2ggaGFkIG1lIHdvbmRlcmluZyBpZiBtYXliZSBoZSBrbm93cyBzb21ldGhpbmcgaSBkb24gYW5kIGkgc2hvdWxkLi4gClQxIGhvbmVzdGx5IGRlc2VydmVzIGFuIGF3YXJkIG9yIHNvbWV0aGluZyBmb3IgaGlzIHdvcmsgaGVyZS4gSm91cm5hbGlzdCBvZiB0aGUgeWVhcj8gSGUgZGlkIHB1dCBoaW1zZWxmIGluIHRoZSB0cmVuY2hlcyB0byBhY2N1cmF0ZWx5IHBvcnRyYXkgdGhlIGZvdW5kYXRpb25hbCBpc3N1ZXMgb2YgdGhlIHJhbmtlZCBzeXN0ZW0sIHdoaWxlIGhlIGhhZCB0byBncmluZCB0aGUgZGVnZW5lcmF0ZSBlbG8gdGhhdCBhbG1vc3QgYnJva2UgbW9lIHRoZSBmaXJzdCB3ZWVrLiAKSSB3ZW50IGJ5IG15c2VsZiBpbnRvIHRoYXQgYmxvY2ssIHRoZXJlIHdhcyBhIGNvcnJpZG9yIG9mZiB0aGUgbWFpbiBoYWxsIGxlYWRpbmcgYXJvdW5kIGEgY29ybmVyIGFuZCB0aGVuIHlvdSBlbmNvdW50ZXJlZCB0aGVzZSBjZWxscy4gV2hlbiBJIHR1cm5lZCBhcm91bmQgdG8gd2FsayBiYWNrIGludG8gdGhlIG1haW4gaGFsbCwgSSB3YXMgc3RpbGwgYWxvbmUgYW5kIGdvdCB0aGlzIGVlcmllIGZlZWxpbmcgbGlrZSBJIGJlZW4gdHJhbnNwb3J0ZWQgYmFjayBpbnRvIHRoYXQgdGltZS4gClRoZSAyOSB5ZWFyIG9sZCBmcm9tIEFiZXJ5c3R3eXRoLCBXYWxlcywgaXMgbm90IHN1cnByaXNlZCBhdCBMZWljZXN0ZXIncyB0dXJuYXJvdW5kLCBmcm9tIGJhdHRsaW5nIHJlbGVnYXRpb24gdG8gdmF1bHRpbmcgcGFzdCB0aGUgbGlrZXMgb2YgQXJzZW5hbCwgTWFuY2hlc3RlciBVbml0ZWQgYW5kIE1hbmNoZXN0ZXIgQ2l0eS4KVGhlIGJlc3QgcGx1Z2lucyBhbmQgc2NyaXB0cyBmb3IgM0QsIFZGWCBhbmQgbW90aW9uIGdyYXBoaWNzIHNvZnR3YXJlIGluY2x1ZGluZyBBZG9iZSBBZnRlciBFZmZlY3RzLCBDaW5lbWEgNEQgYW5kIFByZW1pZXJlIFByby4gTG90cyBvZiB2aWRlbyB0dXRvcmlhbHMuIApZb3UgZG9uJ3QgYWx3YXlzIGhhdmUgYSBjaGFuY2UgdG8gcmVhbGx5IGdldCB0byBrbm93IHRoZSBvdGhlciBwbGF5ZXJzJyBzdHlsZSBhbmQgYXBwbHkgeW91ciBzdHJhdGVneSBvbiB0aGVtLiBIZXJlLCB5b3Uga25vdyB0aGF0IHRoZXNlIGFyZSBkZWRpY2F0ZWQgcGxheWVycyB3aG8gYXJlbid0IGhlcmUgdG8gaGl0IGEgZmV3IGx1Y2t5IHJvdW5kcyBhbmQgc3BsaXQuIApZb3UgY2FuIGJ1eSBmcm9tIHN1cGVybWFya2V0cyB0aGVzZSBkYXlzICAgdGhlIHN1cGVyc3RvcmVzLiAKMjAxNyBFZG1vbnRvbiBPaWxlcnMgcHJvc3BlY3RzLCBzZXJpZXMgdG8gZGF0ZTpHb2FsaWVzOiA2IExhdXJlbnQgQnJvc3NvaXQgICA3IE5pY2sgRWxsaXMgICAxMyBTdHVhcnQgU2tpbm5lciAgIDE0IER5bGFuIFdlbGxzCkJlZm9yZSB5b3UgYnV5IHRoZXNlIHRhYmxlcywgY29uc2lkZXIgYmFyZ2FpbmluZyB0aGUgcHJpY2VzIHRvIG1ha2Ugc3VyZSB5b3UgaGF2ZSBmb3VuZCB0aGUgYmVzdCBkZWFsLi4gCkhvdyB0byBNYWtlIEhlciBXYW50IEFuYWwgU2V4CldoZW4gdGhleSB3cm90ZSB0aGlzIG9uIHRoZWlyIGFzc2lnbm1lbnQgdGhleSB3ZXJlIG5vdCByZWFsbHkgbWVhbiBidXQgSSBkb24gd2FudCB0aGVtIHRvIGZlZWwgdGhpcyB3YXkuVGhlIHdheSB5b3Ugd2FudCB5b3VyIHN0dWRlbnRzIHRvIGZlZWwgc2hvdWxkIG5vdCBtYXR0ZXIgd2hhdHNvZXZlci4gCkhlciBvbmx5IGNsYWltIHRvIGZhbWUgd2FzIHRoYXQgc2hlIHdhcyBhIGRlc2NlbmRhbnQgb2YgQWxpY2UgS2VwcGVsLCB3aG8gYmVjYW1lIEtpbmcgRWR3YXJkIFZJSSdzIG1pc3RyZXNzIHdoZW4gaGUgd2FzIFByaW5jZSBvZiBXYWxlcy4gU28sIHdoYXQgYmV0dGVyIGljZSBicmVha2VyIGNvdWxkIHlvdSB1c2UsIHdoZW4gaW50cm9kdWNlZCB0byB0aGUgY3VycmVudCBQcmluY2Ugb2YgV2FsZXMsIHRoYW4gbWVudGlvbiB0aGUgZmFjdCB0aGF0IHlvdXIgYW5jZXN0b3JzIGdvdCBpdCBvbj8uIApSZWNvZ25pc2UgdGhlIGxpbWl0YXRpb25zIHlvdSBoYXZlIGFuZCBmaW5kIHNvbWV0aGluZyB3aXRoaW4gdGhlbS4gWW91IG9idmlvdXNseSBicmlnaHQgYW5kIElUIGxpdGVyYXRlICAgdGhlcmUgam9icyBhcm91bmQgdGhhdCByZXF1aXJlIHBlb3BsZSB3aXRoIHRob3NlIGF0dHJpYnV0ZXMuLiAKQmlsb3hpLCBNUyAzOTUzMEJlYXUgUml2YWdlIENhc2lubyBUaGUgQmVhdSBSaXZhZ2UgQ2FzaW5vIGlzIGxvY2F0ZWQgYXBwcm94aW1hdGVseSAxNCBtaWxlcyBmcm9tIHRoZSBHdWxmcG9ydCBCaWxveGkgSW50ZXJuYXRpb25hbCBBaXJwb3J0LiBUaGUgY2FzaW5vIGZlYXR1cmVzIG92ZXIgMiwxMDAgcmVlbCwgdmlkZW8sIGFuZCBwcm9ncmVzc2l2ZSBzbG90IG1hY2hpbmVzLCBpbmNsdWRpbmcgRG91YmxlIERpYW1vbmRzLCBGb3h3b3J0aCwgVG9wIERvbGxhciwgYW5kIEhvdCBTaG90cy4gU2xvdCBtYWNoaW5lcyByYW5nZSBpbiBkZW5vbWluYXRpb25zIGZyb20gMSBjZW50IHRvICQ1MDAuIFRoZSBCZWF1IFJpdmFnZSBDYXNpbm8gYWxzbyBoYXMgdGhlIG1vc3QgdGFibGUgZ2FtZXMgb2YgYW55IGNhc2lubyBpbiB0aGUgQmlsb3hpIGFyZWEgaW5jbHVkaW5nIEJsYWNramFjaywgQmFjY2FyYXQsIFBhaSBHb3cgYW5kIE1pc3Npc3NpcHBpIFN0dWQuIFRoZSBjYXNpbm8gaGFzIGEgc2VwYXJhdGUgcG9rZXIgcm9vbSB3aXRoIGRhaWx5IHRvdXJuYW1lbnRzLiBUaGUgQmVhdSBSaXZhZ2UgQ2FzaW5vIGFsc28gaGFzIGEgaGlnaCBsaW1pdCBsb3VuZ2UgYW5kIG9mZmVycyBjYXNpbm8gY3JlZGl0IHRvIHF1YWxpZmllZCBpbmRpdmlkdWFscwpJIGRpZG4gZXZlbiBoYXZlIHRvIHdha2UgdXAgYmVmb3JlIEkgcmVhbGl6ZWQgdGhlcmUgd2FzIHNvbWV0aGluZyBkaWZmZXJlbnQuIEkgc2F5IHNvbWV0aGluZywgYnV0IEkga25ldyBleGFjdGx5IHdoYXQgaXQgd2FzLiBUaGUgaGVhZGFjaGUgd2FzIGdvbmUuIFRoZSBoZWFkYWNoZSBpdmUgaGFkIHNpbmNlIHRoZSBkYXkgdGhpcyBuaWdodG1hcmUgYmVnYW4sIGlzIG5vdyBnb25lLiBJIGNvdWxkbiBiZWxpZXZlIGl0LCBJIGNvdWxkbiBjb21wcmVoZW5kIGEgbGlmZSB3aXRob3V0IHRoYXQga2luZCBvZiBwYWluIGFueW1vcmUuIEkgaGVhciBteSBkZW1vbiBjb21pbmcgc28gSSBxdWlja2x5IHdhbGsgb3ZlciB0byBteSByZXN0cmFpbnRzLiBJIGhhZCBsZWFybmVkIGF0IHRoaXMgcG9pbnQgaXQgYmVzdCB0byBqdXN0IGNvb3BlcmF0ZSB3aXRoIHRoZW0uIEhlIHdhbGtzIG92ZXIgdG8gbWUsIGFuZCBhcyBJIGV4cGVjdGluZyBoaW0gdG8gY2hhaW4gbWUgdG8gdGhlIHdhbGwsIGhlIGdyYWJzIGEgcGFpciBvZiBwbGllcnMgYW5kIHJpcHMgb3V0IG9uZSBvZiBteSBmaW5nZXJuYWlscy4gSSBpbnN0aW5jdGl2ZWx5IHdhaWwgb3V0IGluIHBhaW4sIGJ1dCB0aGUgcGFpbiB3YXMgbm90IHRoZXJlIGFuZCBJIHRoaW5rIGhlIGtuZXcgdGhhdC4gVGhlIHNlZW1pbmdseSB1bmNvbnZpbmNlZCBkZW1vbiBwaWNrZWQgdXAgYSBrbmlmZSBhbmQgY2hvcHBlZCBvZmYgbXkgYXJtLiBBZ2FpbiwgSSB3YWlsZWQgaW4gcGFpbiwgSSBkb24ga25vdyB3aHkgSSBkaWQsIGJ1dCBJIGRpZC4gIlllYSwgaXQgd29ya2VkIiBzYWlkIHRoZSBkZW1vbi4gSSBoZWFyIGEgc25hcCBhcyBteSBhcm0gYW5kIG5haWwgbWF0ZXJpYWxpemUgYmFjayBvbnRvIG15IGJvZHkuICJMb3Ugd291bGQgbGlrZSB0byBoYXZlIGEgd29yZCIgSSBkb24gaGF2ZSB0aW1lIHRvIHByb3Rlc3QgYmVmb3JlIEkgYWxyZWFkeSBzaXR0aW5nIGFjcm9zcyBmcm9tIHRoZSBkZXZpbCBoaW1zZWxmLiBIZSB0dXJucyBhcm91bmQgdG8gZmFjZSBtZSwgYW5kIGhpcyBnYXplIGJyaW5ncyBteSBoZWFydCBpY2UgY29sZC4gWWVzIEkgd2FzIGFmcmFpZCwgYW5kIHllcyBJIGtuZXcgSSBjb3VsZG4gZmVlbCBwYWluLiBJIGRpZG4ga25vdyB3aHkgSSB3YXMgYWZyYWlkLCB0aGVyZSB3YXNuIGFueXRoaW5nIEkgY291bGQgaW1hZ2luZSBoaW0gZG9pbmcgdG8gbWUgdGhhdCBjb3VsZCBjYXVzZSBteXNlbGYgcGFpbiBhbnltb3JlLiBJIHJlYWxpemVkIHNvb24gYWZ0ZXIgdGhhdCBpdCB3YXMganVzdCBhIGxpbWl0IG9mIHRoZSBpbWFnaW5hdGlvbiBvZiB0aGUgaHVtYW4gYnJhaW4sIGJlY2F1c2UgSSBoYXZlIG5ldmVyIGJlZW4gbW9yZSB3cm9uZy4KSSBuZWVkIHNvbWUgbmV3IHN1Z2dlc3Rpb25zIG9uIGdhbWVzIHRvIHBsYXkuIApCeSBkZWZhdWx0LiBIZSBoYWQgYmFzaWMgc2tpbGxzIGJ1dCBwZW9wbGUgcGxheWVkIHZlcnkgZGlmZmVyZW50bHkgd2hlbiB0aGV5IHdlcmUgaW4gYSBoYW5kIHdpdGggaGltLiAKSSBhc2tlZCBteSBmcmllbmQgdG8gZG8gdGhpcyB3aGVuIHNoZSB3YXMgYmlraW5nIHRvIGhlciBjYXIgb24gYSByb2FkIHdpdGggbm8gYmlrZSBsYW5lIGxhdGUgYXQgbmlnaHQuIApUaGV5IGNyZWF0ZSBvciB1c2Ugc3BlY2lhbCBwcm9ncmFtcyB0byBrZWVwIGNvbXBhbnkgYW5kIGdvdmVybm1lbnQgaW5mb3JtYXRpb24gc2VjdXJlIGFuZCBwcml2YXRlLiAKVGhpcyBtZXRob2QgaXMgdXNlZCwgYnV0IG5vdCBmdWxseSBleHBsYWluZWQsIGluIG1hbnkgb2YgdGhlIGV2ZW50IHB1YmxpY2F0aW9ucy4uIApUaGVyZSBhcmUgdGhvdXNhbmRzIG9mIHVuc29sdmVkIG11cmRlcnMgc3RpbGwgdGVjaG5pY2FsbHkgdW5kZXIgaW52ZXN0aWdhdGlvbiBkZWNhZGVzIGFmdGVyIHRoZXkgdG9vayBwbGFjZS4KV2hvIGhhc24ndCBoYWQgdGhhdCBkYXkgd2hlcmUgdGhlcmUgaXMgbm8gZGVsaXZlcnkgYm95IGJyaW5naW5nIGEgZG96ZW4gcmVkIHJvc2VzIHRvIHlvdSBhdCB3b3JrPyBNYXliZSB5b3VyIGJpZyBkaW5uZXIgZGF0ZSB3YXMgd2l0aCB5b3VyIG1vdGhlci4gCk9uZSB0aGluZyBJIHNheSBpbiBmYXZvciBvZiBwcm9mZXNzaW9uYWwgZHJlc3MgY29kZXMuIGFzIHNvbWVvbmUgd2hvIGRyZXNzZXMgbW9yZSBmb3JtYWxseSBmb3Igd29yayB0aGFuIG91dHNpZGUgb2Ygd29yaywgYW5kIGNoYW5nZXMgaW50byBzb21ldGhpbmcgbW9yZSBjYXN1YWwgd2hlbiBJIGdldCBob21lIGF0IHRoZSBlbmQgb2YgdGhlIGRheSwgSSBmZWVsIGxpa2UgaGF2aW5nIHR3byBkaWZmZXJlbnQgInVuaWZvcm1zIiBoZWxwcyBtZSB0byBlbnRlciBhbmQgbGVhdmUgIndvcmsgbW9kZSIuCkJ1dCBhZnRlciBIdWJibGUgc3RhcmVkIGF0IHRoaXMgc3BvdCBmb3IgYSB2ZXJ5LCB2ZXJ5IGxvbmcgdGltZSwgYWJzb3JiaW5nIGFzIG11Y2ggbGlnaHQgYXMgcG9zc2libGUsIGl0IGNhbWUgYmFjayB3aXRoIHRoYXQgaW1hZ2UuClNvIG5ldmVyIGdpdmUgdXAgdHJ5aW5nLiAKRWNsZWN0aWMgRWF0czogRXhwbG9yZSBNaWFtaSA1IE5ld2VzdCBSZXN0YXVyYW50cyBSZWZsZWN0aW5nIERpdmVyc2UgQ3VsdHVyZXNJbnRlcmVzdGVkIGluIGV4cGxvcmluZyB0aGUgbmV3ZXN0IHJlc3RhdXJhbnRzIHRvIG9wZW4gaW4gTWlhbWk/IEZyb20gYSBTcGFuaXNoIHJlc3RhdXJhbnQgdG8gYW4gSW5kaWFuIHNwb3QsIHJlYWQgb24gZm9yIGEgbGlzdCBvZiB0aGUgbmV3ZXN0IGRlc3RpbmF0aW9ucyB0byBhcnJpdmUgbmVhciB5b3UuIEJlbGxhIGlzIG5vdCB0aGVpciBkYXVnaHRlciBvciB0aGVpciBkb2csIHNoZSBpcyB0aGVpciBjYXQuCkJhY2sgaW4gTm92ZW1iZXIgb2YgMjAxMiwgS2Vzc2VsLCBOZWdyZWFudSwgZm9ybWVyIE1vbnRyZWFsIENhbmFkaWFucyBncmVhdCBHdXkgQ2FyYm9ubmVhdSBhbmQgYSBmZXcgcG9rZXIgcGxheWVycyBhbGwgdG9vayBwYXJ0IGluIGEgZnVuIGdhbWUgb2Ygc2hpbm55IGJlZm9yZSBwbGF5IGJlZ2FuIGluIHRoZSBXb3JsZCBQb2tlciBUb3VyIE1vbnRyZWFsIE1haW4gRXZlbnQgYXQgdGhlIFBsYXlncm91bmQgUG9rZXIgQ2x1Yi4gCkl0IHdhcyBhbGwgcGFydCBvZiBhbiBldmVudCB0byBwcm9tb3RlIGEgY28gYnJhbmRlZCBDaXRpIENhcmQgd2l0aCB0aGUgYWlybGluZSBmb3IgdGhlICJXb3JsZCBFbGl0ZSBNYXN0ZXJjYXJkIiB0aGF0IGFmZm9yZHMgY2FyZGhvbGRpbmcgdHJhdmVsZXJzIHByaXZpbGVnZXMgaW5jbHVkaW5nIHByaW9yaXR5IGNoZWNrIGluLCBzY3JlZW5pbmcgYW5kIGJvYXJkaW5nLCBjb25jaWVyZ2Ugc2VydmljZSBhbmQgYWNjZXNzIHRvIHRoZSBBZG1pcmFscyBDbHViLiBUaG91Z2ggdGhlIEFkbWlyYWxzIENsdWIgZG9lc24ndCBub3JtYWxseSBob2xkIHByaXZhdGUgc2hvd3Mgd2l0aCBNci4gCkhlIGRvZXNuIGhhdmUgdGhlIG1vc3QgdGFja2xlcyBidXQgaGUgZG9lcyBzZWVtIHRvIG1ha2UgdGhlIG90aGVyIHRlYW0gbWFrZSB0aGUgaGFyZGVzdCBwYXNzIGFuZCBnaXZlIHVzIGEgdHVybm92ZXIuLiAKQWxzbyAgIHdlcmUgdGhlcmUgMTMgb3RoZXIgZmFydGlzdHMgcmVnaXN0ZXJlZCB0byBSZWRkaXQ/IEltcHJlc3NpdmUuIEdvb2QgdG8gc2VlIHRoZSB0cmFkZSB0aHJpdmVzLgpVbmxlc3Mgc29tZW9uZSBhc2tzIHdoeSBJIGNhbiBwaWNrIGxvY2tzLCB0aGVuIEkgbWlnaHQgdGVsbCB0aGVtLiBJdCdzIG9rYXkgdG8ga25vdyB5b3VyIG93biBjaGFyYWN0ZXIgdGhlIHdheSB5b3Uga25vdyB5b3Vyc2VsZi4gVGhhdCdzIG9ubHkgInRvbyBtdWNoIiB3aGVuIHlvdSBibHVkZ2VvbiB0aGUgb3RoZXIgcGxheWVycyB3aXRoIGFsbCB0aGF0IGluZm9ybWF0aW9uIGluIGEgd2F5IHRoYXQgZG9lc24ndCBmZWVsIG9yZ2FuaWMuLiAKVGhlIE1vbmRhbGUgbWFjaGluZSwgbWVhbndoaWxlLCBwcmVzc2VkIGEgY29hc3QgdG8gY29hc3QgZWZmb3J0IHRvIGRyYXcgb3V0IGNsb3NldCBzdXBwb3J0ZXJzIHRvIHVuZGVyc2NvcmUgcHVibGljbHkgdGhlIGNhbmRpZGF0ZSdzIGNsYWltIHRvIGRlbGVnYXRlcyB3ZWxsIG92ZXIgdGhlIHJlcXVpcmVkIGZvciB0aGUgbm9taW5hdGlvbi4gQXNzb2NpYXRlZCBQcmVzcyBjb3VudCwgZ3Jvd2luZyB0aHJvdWdob3V0IHRoZSBkYXksIHBsYWNlZCBNb25kYWxlIGF0IChDb250aW51ZWQgb24gUGFnZSBBIDEyKSBhbm51YWwgRnJlZGVyaWNrIENvdW50eSBDb29rICBLYXRocnluIEplbmtpbnMgdGVsbHMgaG93IHRvIFRlYXJzIG9mIGVuZGVhcm1lbnQgQSBDYXRvY3RpbiBIaWdoIFNjaG9vbCBncmFkdWF0ZSB3aXBlcyBhd2F5IHRlYXJzIHNoZWQgaW4gbWVtb3J5IG9mIGEgY2xhc3NtYXRlLCBraWxsZWQgZHVyaW5nIHRoZSBzY2hvb2wgeWVhciBpbiBhbiBhdXRvbW9iaWxlIGFjY2lkZW50LCBkdXJpbmcgQ29tbWVuY2VtZW50IEV4ZXJjaXNlcyBXZWRuZXNkYXkgbmlnaHQgYXQgdGhlIHNjaG9vbC4gClRha2UgYSBsb29rIGF0IHRoZSAvci9zaGFuZ2hhaSBGQVEsIGFuZCBzZWFyY2gvbG9vayBvdmVyIG9sZGVyIHRocmVhZHMgYmVmb3JlIGFza2luZyB5b3VyIHF1ZXN0aW9uIQpCdXQgdG9kYXkncyBHTSBpcyBiYXJlbHkgcmVjb2duaXphYmxlLCBpbiBhIGdvb2Qgd2F5LiBGcm9tIHRoZSBMeWZ0IGRlYWwgdG8gZmxlZXQgY3V0YmFja3MgdG8gc3VwcGx5IGNoYWluIHR3ZWFrcywgQmFycmEgYW5kIGhlciBsaWV1dGVuYW50cyBoYXZlIGNyYWZ0ZWQgICBhbmQgc3R1Y2sgdG8gICBzdHJhdGVnaWVzIHRoYXQgZW1waGFzaXplIHByb2ZpdGFiaWxpdHksIGJyYW5kIGhlYWx0aCwgc3RhYmlsaXR5IGFuZCBmb3Jlc2lnaHQuIEl0J3Mgbm90IGRpc3J1cHRpdmUsIGJ1dCBpdCdzIHJlYWwsIGFuZCBpdCdzIHdvcmtpbmcuCklmIHlvdSB3YW50IHRvIGJlIHBhaWQgb3IgaGF2ZSBzb21ldGhpbmcgY29udHJpYnV0ZWQsIGNvbW1vbiBjb3VydGVzeSBkaWN0YXRlcyB0aGF0IHlvdSBzaG91bGQgcmVxdWVzdCBpdCBhdCB0aGUgdGltZSBvZiB0aGUgaW52aXRhdGlvbiwgc28gdGhlIGd1ZXN0IGNhbiBkZWNpZGUgd2hldGhlciB0aGV5IGFibGUgdG8gYWZmb3JkIHRvIGF0dGVuZC4gSSB3b3VsZCBub3QgYXR0ZW5kIGEgbWVhbCB0aGF0IHdpbGwgY29zdCBtZSAkMTMgYmVjYXVzZSBJIGJyb2tlIGFuZCBjYW4gZWF0IGZvciAkMyBvciBsZXNzIGF0IGhvbWUuClNvbWUgb2YgdGhvc2UgY29tbWVudHMgYXJlIHRydWx5IGlnbm9yYW50IGFuZCBvdXRyYWdlb3VzLi4gCkpvaG4gbWVuIGhlYWQgY29hY2ggTWFsIEdhbGxldHRhIElJSSwgYSBQR0EgZ29sZmVyLiAKT24gYSB3aWRlciBzb2NpZXRhbCBsZXZlbCwgZXNwZWNpYWxseSBmb3IgbWFuZGF0b3J5IGluc3VyYW5jZSwgaXQgYSBiaXQgZGlmZmVyZW50LCBidXQgdGhlIHBlcnNvbmFsIHJlbGF0aW9uc2hpcCB3aXRoIGluc3VyYW5jZSB3aWxsIGFsd2F5cyBiZSBvbmUgb2YgdGhlIHByb2JhYmlsaXR5IG9mIG5lZWRpbmcgaXQgdmVyc3VzIHRoZSBjb3N0IHRvIGhhdmUgaXQuIApGaXJzdCBvZmYsIG15IGVudGlyZSBwb2ludCBhYm91dCBkZWdyZWVzIHNlZW1lZCB0byBnbyBvdmVyIHlvdXIgaGVhZC4gSGF2aW5nIGEgZGVncmVlIChvciBtYXN0ZXJzKSBkb2Vzbid0IG1lYW4gdGhhdCBwZXJzb24gaGFzIGFueSBtb3JlIGNsdWUgYWJvdXQgd2hhdCdzIHJlYWxseSBnb2luZyBvbi5TZWNvbmQsIGFsbW9zdCBubyBjb25zZXJ2YXRpdmVzL3JlcHVibGljYW5zIGRvbid0IGJlbGlldmUgaW4gc2NpZW5jZSBvciBpbiBjbGltYXRlIGNoYW5nZS4gV2hhdCB0aGV5IGRvbid0IGFncmVlIHdpdGggbGliZXJhbHMgb24gaXMgSE9XIFRPIFNPTFZFIElUIGFuZCB3aGV0aGVyIHRocm93aW5nIHRyaWxsaW9ucyBvZiBkb2xsYXJzIGF0ICJzb2x1dGlvbnMiIHdpbGwgc29sdmUgaXQgb3Igd2lsbCBjcmVhdGUgb3RoZXIgcHJvYmxlbXMgKGxpa2UgYmFua3J1cHRpbmcgdGhlIGNvdW50cnkpLlRoaXJkLCBpdCdzIGZ1bm55IGhvdyBmYXN0IHlvdSAoYW5kIGEgbG90IG9mIG90aGVyIHBlb3BsZSkgaGF2ZSBhbHJlYWR5IGZvcmdvdHRlbiB0aGF0IGF0IHRoZSB0aW1lIFRydW1wIGZpcmVkIENvbWV5LCBOT0JPRFkgb24gZWl0aGVyIHNpZGUgb2YgdGhlIHBvbGl0aWNhbCBzcGVjdHJ1bSB0aG91Z2h0IENvbWV5IGhhcyBkb25lIGEgZ29vZCBqb2IuIApTb21ldGltZXMgeW91IHNpbXBseSBjYW4ndCBnZXQgb2ZmIHlvdXIgZmVldCwgYmVjYXVzZSB5b3VyIGpvYiByZXF1aXJlcyB5b3UgdG8gc3RhbmQgb3Igd2FsayBhIGxvdCBvciBiZWNhdXNlIHlvdSdyZSBzdHVjayBpbiBhbiBhcmVhIHdoZXJlIHRoZXJlIGlzbid0IGEgcGxhY2UgdG8gc2l0IGRvd24uIEluIHRoZSBsYXR0ZXIgc2l0dWF0aW9uICAgZm9yIGluc3RhbmNlLCBpZiB5b3UncmUgc2lnaHRzZWVpbmcgb3Igc2hvcHBpbmcgYWxsIGRheSAgIGRvIHdoYXRldmVyIHlvdSBjYW4gdG8gdGVtcG9yYXJpbHkgcmVsaWV2ZSB0aGUgcHJlc3N1cmUgb24gZWFjaCBmb290LiBXYWxrIGFzIG11Y2ggYXMgeW91IGNhbiByYXRoZXIgdGhhdCBzdGFuZGluZyBzdGlsbDsgd2lnZ2xlIHlvdXIgdG9lczsgc2hpZnQgYmFjayBhbmQgZm9ydGggZnJvbSBvbmUgZm9vdCB0byBhbm90aGVyOyBzdGFuZCBvbiBvbmUgZm9vdCB3aGlsZSBsaWZ0aW5nIHRoZSBvdGhlciBzbGlnaHRseSBvZmYgdGhlIGdyb3VuZCBhbmQgcm90YXRpbmcgdGhlIGFua2xlLgpTcXVpbGxhbnRlIGFuZCBXaWxsaWFtIEFsbGFuIENvbGxvbW9yZSwgYm90aCBvZiBQYWxtIEJheSwgZ290IHByaXNvbiBzZW50ZW5jZXMgb2YgMzMgbW9udGhzLCBvbmUgeWVhciwgYW5kIDM3IG1vbnRocywgcmVzcGVjdGl2ZWx5LiAKSXQgb25lIHRoaW5nIHRvIGhhdmUgYSBsb2NhdGlvbiB0aGF0IGdvaW5nIHdlbGwgYnV0IHRvIGJlIGFibGUgdG8gZHVwbGljYXRlIGl0IGFnYWluIGFuZCBhZ2FpbiB5b3UgbmVlZCB0byBncm93IHRoZSBzdXBwb3J0IGluIHRlcm1zIG9mIHBlb3BsZSwgcG9pbnQgb2Ygc2FsZSwgSVQgYW5kIG1hcmtldGluZy4gCkRpc3RyaWJ1dGlvbiBvZiBmb29kIGFuZCBzdXBwbGllcyB3YXMgZGlzcnVwdGVkLCBhbmQgY2l0aXplbnMgY2hvcHBlZCBkb3duIHRyZWVzIGFuZCBkaXNtYW50bGVkIGhvbWVzIGZvciBmdWVsLiAKVGllIGJyZWFrVGhpcyBvY2N1cnMgd2hlbiB0aGUgZ2FtZSBzY29yZSBpcyBzaXggZ2FtZXMgYWxsLiAKVGV4YXNheGlzIHN1Ym1pdHRlZCBldmlkZW5jZSB0byB0aGUgbW9kZXJhdG9ycywgYnV0IHdlIHdlcmUgdW5hYmxlIHRvIHZlcmlmeSB0aGVpciBzdWJtaXNzaW9uIHdpdGggdGhlIGV2aWRlbmNlIHByb3ZpZGVkLiBXZSBhcmUgZGlzY3Vzc2luZyB3aGF0IHRvIGRvIGludGVybmFsbHksIGFuZCBzaW5jZSBkZXZlbG9wbWVudHMgYXJlIGFwcGFyZW50bHkgbW92aW5nIHF1aXRlIHF1aWNrbHkgd2UgaG9wZWZ1bCB0aGF0IHRleGFzYXhpcyB3aWxsIGJlIGFibGUgdG8gc29vbiBwcm92aWRlIHVzIHdpdGggdGhpcmQgcGFydHkgZXZpZGVuY2UgdG8gc3VwcG9ydCB0aGVpciBwb3N0LgpJIHVuZGVyc3RhbmQgdGhpcyBpcyBub3QgcmVwcmVzZW50YXRpdmUgb2YgdGhlIHdvcmxkIHdpZGUgc2l0dWF0aW9uLCBidXQgaW4gTmV3IFplYWxhbmQgeW91IHNpbXBseSBjYW5ub3QgYnV5IGFuIGVsZWN0cmljIGNhciBhdCBhbGwsIHVubGVzcyBpdCBpcyBhIFRlc2xhIE1vZGVsIFMvWCBvciBhIHVzZWQgaW1wb3J0IExlYWYgZnJvbSBKYXBhbi4gSW4gdGhlIGxhc3QgbW9udGggSSBoYXZlIGlucXVpcmVkIGFib3V0IGEgSHl1bmRhaSBLb25hIEVWOyAicHJvYmFibHkgd2lsbGdldCBhYm91dCAzMCB0aGlzIHllYXIgICBhbGwgc29sZCBhbHJlYWR5Ii4gS2lhIE5lcm8gRVYgIk5vdCBzdXJlIGhvdyBtYW55IHdlIHdpbGwgZ2V0IHRoaXMgeWVhciAgIG1heWJlIDUwPyIuIEphZyBpUGFjZSAiV2UgaGF2ZSAzIGluIHRoZSBzaG93cm9vbSAgIG5vIG1vcmUgY29taW5nIHVudGlsIEp1bmUiIE5pc3NhbiBOWiBoYXZlIGJlZW4gcHJvbWlzaW5nIHRoZXkgd2lsbCBzZWxsIHRoZSBuZXcgTGVhZiA0MGtXICAgbm8gc2lnbiBvZiBpdC4gQWxzbyBubyBzaWduIG9mIHRoZSBlIEdvbGYsIHRoZXkgaGF2ZSBvbmUgcGVyIHNob3dyb29tLgoyIGF0IENpdGlncm91cC4gCkFub3RoZXIgaW50cm92ZXJ0IGhlcmUuIEkgZG8gbG92ZSBnb2luZyBvdXQgYW5kIHNvY2lhbGl6aW5nIHdpdGggbXkgZnJpZW5kcyBidXQgYXMgZmFyIGFzIG1ha2luZyBuZXcgb25lcywgaXQgaGFyZCBmb3IgbWUuIEkgdGVuZCB0byBub3QgbGlrZSBtb3N0IHBlb3BsZSBhbmQgaGF2ZSBhIGRpZmZpY3VsdCB0aW1lIHRyeWluZyB0byBmaWd1cmUgb3V0IHdoYXQgdGhpbmdzIHRvIHNheSBhbmQgaG93IHRvIGFjdC4gSSBhbSBncmVhdCBhdCBtYWtpbmcgc21hbGwgdGFsayBpZiBJIGF0IHdvcmsgdGhvdWdoIHNvIEkgY2FuIGhpZGUgaXQgd2hlbiBJIG5lZWQgdG8uIEJ1dCBJIGNvdWxkIGVhc2lseSBnbyBmb3IgYSBmZXcgZGF5cyBqdXN0IGJlaW5nIGJ5IG15c2VsZiBpbiBteSBhcGFydG1lbnQuIEFmdGVyIHRoYXQgSSBkbyB0ZW5kIHRvIGdldCBsb25lbHkgYW5kIHdpbGwgd2FudCB0byBnbyBvdXQuCk5vbmUgb2YgdGhpcyBuZWVkIHRha2UgbW9yZSB0aGFuIDIgb3IgMyBtaW51dGVzLCB0aG91Z2ggYSBzZXF1ZW5jZSBvZiB5b2dhIG9yIHRhaSBjaGkgY291bGQgdGFrZSBtdWNoIGxvbmdlci4uIApTdXJ2aXZlZCBieSBicm90aGVycyBOaWNrIEJ1Y2h5bnNraSwgSm9obiBCdWNoaW5za3ksIHNpc3RlciBNYXJ5IEdvbGluc2t5IGFuZCBoaXMgbmllY2VzIEFubmUgKEJyaWFuKSBQZXJybywgSm8gQW5uZSBIaW5kIGFuZCBuZXBoZXdzIENyYWlnIChEaWRpKSBIaW5kIGFuZCBSaWNoYXJkIEhpbmQgSnIuIEFuZCBvdGhlciBleHRlbmRlZCBmYW1pbHkuIEhlIHdhcyBhIGRlZGljYXRlZCBmYW1pbHkgbWFuLCBhbmQgZXNwZWNpYWxseSBjaGVyaXNoZWQgaGlzIG9uZSBhbmQgb25seSBncmFuZHNvbi4gCkFzIHRoZSBnaXZlciwgSSB1c2UgZGlmZmVyZW50IHBhcnRzIG9mIG15IGJvZHkgdG8gdHdpc3QsIHB1bGwgYW5kIGFwcGx5IHByZXNzdXJlIHRvIHlvdXIgYm9keS4gCk9yaWdpbmFsbHkgb25seSBoZWFyaW5nIHRoZWlyIHNvbmdzIG9mIHRoZSBhbmltZSBzZXJpZXMsIEkgbG9va2VkIG1vcmUgaW50byB0aGVpciBtdXNpYyBhbmQgZGlzY292ZXJlZCB0aGF0IHRoZXJlIGV2ZW4gbW9yZSBncmVhdCBtdXNpYyBmcm9tIHRoZW0uIApUaGUgbmV4dCBkYXkgSSBkZWNpZGVkIHRvIGdvIGhpa2luZyB3aXRoIGEgZnJpZW5kIHRvIGdldCBhd2F5IGZyb20gdGhlIHN0cmVzcyBhbmQgZGlkbiBsb29rIGF0IG15IHBob25lIGFsbCBkYXkgdW50aWwgbXkgbW90aGVyIGNhbGxlZCBhbmQgYXNrZWQgaWYgSSBuZWVkZWQgdG8gZ2V0IGEgcmlkZSBiZWNhdXNlIGhlIHdhcyBvdXQgbG9va2luZyBmb3IgbWUuIEFwcGFyZW50bHkgaGUgc2hvd2VkIHVwIGF0IG15IGhvdXNlIGFuZCBhZnRlciBJIHdhc24gdGhlcmUgaGUgd2VudCBvdXQgdG8gdGhlIHdvb2RzIHRvIGZpbmQgbWUuIApOZXcgcHJvZ3JhbXMgdG8gZGlzY291cmFnZSB1bmRlciBhZ2UgZ2FtYmxpbmcgYXJlIGJlaW5nIHBhaWQgZm9yIGFuZCBpbXBsZW1lbnRlZCBieSB0aGUgaW5kdXMgIHN0dWRpZXMgb24gY29tcHVsc2l2ZSBnYW0gIHBhcnRpY3VsYXJseSBhbW9uZyB1bmRlciAgYWdlIGFyZSBiZWluZyBjb25kdWN0ZWQgdGhyb3VnaCBmcm9tIGluZHVzdHJ5LiBPZiB0aGUgdW5kZXIgYWdlIGdhbWluZyBnb2luZyBvbiBpbiB0aGlzIGNvdW50cnkgaXMgbm90IGdvaW5nIG9uIGluc2lkZSB0aGUgc2FpZCBGcmFuayBwcmVzaWRlbnQgb2YgdGhlIEFtZXJpY2FuIEdhbWluZyB0aGUgY2FzaW5vIGluZHVzdHJ5J3MgbG9iYnlpbmcgb3IgIGdhbml6YXRpb24uIApUaGlzIHJlZGRpdCBoYXMgYmVjb21lIHRoZSBzaG91dGluZyBwbGF0Zm9ybSBmb3IgYSBmZXcgdG9vIG1hbnkgbm90IGludGVyZXN0ZWQgaW4gc2VyaW91cyBkaXNjdXNzaW9uLCBqdXN0IGZvcmNpbmcgdGhlaXIgb3Bpbmlvbi4KSSBkb24gbGlrZSB0aGUgaWRlYSBvZiBhbiBhZHVsdCBoaXR0aW5nIGEgY2hpbGQsIGJ1dCBJIGZlZWwgbGlrZSBzaGUgd2FzIGp1c3RpZmllZCBpbiB0aGF0IG1vbWVudC4uIApIb25lc3RseSwgd2lsbCBoYXZlIHRvIGRpc2FncmVlLiBFdmVuIGlmIGZvciB5b3UsIGFuZCBtZSB0b28sIHNwZW5kaW5nIGhvdXJzIGFuZCBob3VycyByZXNlYXJjaGluZyBvcHRpb25zIHRvIG1ha2Ugb3VyIFBDcyBtb3JlIGF3ZXNvbWUgaXMgc3VwZXIgZnVuLCB0aGVyZSBhcmUgZm9sayB3aG8ganVzdCB3YW50IHRvIHNpdCBhbmQgcGxheSB0aGUgZ2FtZSB3aXRob3V0IGFsbCBvZiB0aGlzLiAKU3Vydml2YTMxNiAgOCBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvCkkgbmV2ZXIgaGFkIGEgcHJvYmxlbSBoYXZpbmcgYW4gb3JnYXNtLCBJIHdhcyB3aXRoIHNvbWVvbmUgZm9yIDEyIHllYXJzIGFuZCBoYWQgbXVsdGlwbGUgb3JnYXNtcyBidXQgSSBkaWRuIHJlYWxseSBlbmpveSB0aGVtLiBJdCB3YXMgbWVjaGFuaWNhbCwgbXkgZXggaGFkIGJhZCB0ZWNobmlxdWUgd2hlcmUgaGUganVzdCB3ZW50IGluIGFuZCBvdXQsIGZhc3QuIAoyMSkgQ2VydmljYWwgY29sbGFyIHVzZSBiZXlvbmQgNzIgaG91cnMgcHJvYmFibHkgcHJvbG9uZ3MgZGlzYWJpbGl0eS4KU2hlIHN0YXJ0ZWQgYW4gYXJndW1lbnQgd2l0aCBhIG11Y2ggeW91bmdlciBnaXJsIHNheWluZyB0aGF0IHRoZSB5b3VuZ2VyIGdpcmwga2VwdCBidW1waW5nIGFnYWluc3QgaGVyIGFybS4gSSB0aG91Z2h0IHRoaXMgd2FzIGZ1bm55IGFzIHBlcnNvbmFsIHNwYWNlIGlzIHNvbWV0aGluZyB5b3Uga2luZCBvZiBoYXZlIHRvIGdpdmUgdXAgd2hlbiB1c2luZyBwdWJsaWMgdHJhbnNwb3J0YXRpb24sIGVzcGVjaWFsbHkgZHVyaW5nIHJ1c2ggaG91cnMgaW4gS29yZWEuQW55d2F5IHRoZSB5b3VuZ2VyIGdpcmwgd2FzIGtpbmQgb2YgaW5jcmVkdWxvdXMgYXQgdGhlIHZlcmJhbCBhYnVzZSBzaGUgd2FzIGdldHRpbmcgYW5kIHN0YXJ0ZWQgc2hvdXRpbmcgYmFjayBnZXR0aW5nIHRoZSBhdHRlbnRpb24gb2YgdGhlIHdob2xlIGNhcnJpYWdlLiAKIkluIHRoaXMgc3R1ZHksIHdlIGZvdW5kIHRoYXQgdGhlIGdyb3VwcyBvZiBhdG9waWMgZGVybWF0aXRpcyBhbG9uZSBhbmQgdGhlIGFsbGVyZ2ljIHJoaW5pdGlzICsgYXRvcGljIGRlcm1hdGl0aXMgd2VyZSBhc3NvY2lhdGVkIHdpdGggYSBsb3dlciByaXNrIG9mIHBzeWNoaWF0cmljIGRpc29yZGVycywgYnV0IGFsbCB0aGUgb3RoZXIgZm91ciBncm91cHMsIHN1Y2ggYXMgYnJvbmNoaWFsIGFzdGhtYSBhbG9uZSwgYWxsZXJnaWMgcmhpbml0aXMgYWxvbmUsIGJyb25jaGlhbCBhc3RobWEgKyBhbGxlcmdpYyByaGluaXRpcywgYnJvbmNoaWFsIGFzdGhtYSArIGF0b3BpYyBkZXJtYXRpdGlzLCBhbmQgdGhlIGNvbWJpbmF0aW9uIG9mIGFsbCB0aGVzZSB0aHJlZSBhbGxlcmdpYyBkaXNlYXNlcywgd2VyZSBhc3NvY2lhdGVkIHdpdGggYSBoaWdoZXIgcmlzayBvZiBwc3ljaGlhdHJpYyBkaXNvcmRlcnMsIiB0aGUgcmVzZWFyY2hlcnMgd3JpdGUgaW4gdGhlIHN0dWR5Li4gCkZlZXMgcmFuZ2UgZnJvbSBhcyBsaXR0bGUgYXMgJDYwIHRvICQxNTAgcGVyIGhvdXIuT2Z0ZW4gYSBjb21wYW55IGFuZCB0aGVpciBlbXBsb3llZXMgd2lsbCBzaGFyZSB0aGUgY29zdCBvZiBicmluZ2luZyBPbiBTaXRlIE1hc3NhZ2UgaW50byB0aGUgb2ZmaWNlLiBJbiB0aGlzIEVtcGxveWVlL0NvcnBvcmF0ZSBzcG9uc29yc2hpcCwgdGhlIGNvbXBhbnkgYW5kIHRoZSBlbXBsb3llZSBhZ3JlZSBvbiBhIHBlcmNlbnRhZ2UgdGhhdCBlYWNoIHdpbGwgY292ZXIuIChGb3IgZXhhbXBsZSwgQ29tcGFueSA2MCUgLyBFbXBsb3llZSA0MCUpT2Z0ZW4gYSBjb21wYW55IHdpbGwgY29udHJpYnV0ZSB0aGUgdGltZSB0byByZWNlaXZlIE9uIFNpdGUgTWFzc2FnZSBhbmQgZW1wbG95ZWVzIHdpbGwgY292ZXIgMTAwJSBvZiB0aGUgY29zdDIuIApSZXBvcnRpbmcgYSBQaHlzaWNhbCBCYXJyaWVyVGlnZXIgRGluaW5nIE9wdGlvbnMgZm9yIFN0dWRlbnRzIHdpdGggRGlldGFyeSBOZWVkc1N0dWRlbnRzIHdpdGggc2VydmljZSBhbmltYWxzIHNob3VsZCByZWdpc3RlciB0aGVpciBhbmltYWwgd2l0aCB0aGUgVW5pdmVyc2l0eSBieSBzdWJtaXR0aW5nIHZldGVyaW5hcnkgcmVjb3JkcyBhbmQgZW1lcmdlbmN5IGNvbnRhY3QgaW5mb3JtYXRpb24gdG8gdGhlIE9mZmljZSBvZiBBY2Nlc3NpYmlsaXR5LiBQbGVhc2UgY2FsbCAzMzQgODQ0IDIwOTYgdG8gc2NoZWR1bGUgYW4gYXBwb2ludG1lbnQgd2l0aCBhIGRpc2FiaWxpdHkgc3BlY2lhbGlzdC4KSGlqIHZlcmxlZW50IHVwIHRvIGRhdGUsIGVmZmVjdGlldmUsIGN1cmF0aWV2ZSBlbiBwcmV2ZW50aWV2ZSB6b3JnIG9wIGV0aGlzY2ggdmVyYW50d29vcmRlIHdpanplLk9uZGVyIGZ5c2lvdGhlcmFwZXV0aXNjaCBoYW5kZWxlbiB2ZXJzdGEgaWsgbWVlcmRlcmUgZGluZ2VuLiBUZW4gZWVyc3RlIHZpbmQgaWsgZGF0IGZ5c2lvdGhlcmFwZXV0aXNjaCBoYW5kZWxlbiBoZXQgZGVza3VuZGlnIGt1bm5lbiBoYW5kZWxlbiBlbiBvb3JkZWxlbiBvdmVyIGhldCBiZXdlZ2luZ3Nwcm9ibGVlbSB2YW4gZWVuIHBhdGludC4gRWVuIHRoZXJhcGV1dCBnZWJydWlrdCBoaWVyYmlqIHppam4gdmVyd29ydmVuIGtlbm5pcyBlbiBlcnZhcmluZyBvbSBkZSBwYXRpbnQgem8gcHJvZmVzc2lvbmVlbCBtb2dlbGlqayB0ZSBoZWxwZW4uIApNeSBsYXN0IGRvY3RvciB3YXMgZ29pbmcgdG8gc2VuZCBtZSB0byBvbmUsIGJ1dCBzaGUgbGVmdCBiZWZvcmUgSSBoYWQgYSBjaGFuY2UgdG8gYWN0dWFsbHkgZ28gdGhyb3VnaCB3aXRoIGl0Li4gCk1lcnJpYW0gV2Vic3RlcidzIE9ubGluZSBEaWN0aW9uYXJ5IGRlZmluZXMgImN1bm5pbmciIGFzIGFuIGFkamVjdGl2ZSBtZWFuaW5nICJnZXR0aW5nIHdoYXQgaXMgd2FudGVkIGluIGEgY2xldmVyIGFuZCBvZnRlbiBkZWNlcHRpdmUgd2F5LiJbMV0gQSBjdW5uaW5nIHBlcnNvbiBpcyB3aWxsaW5nIHRvIHVzZSBzdWJ0bGV0eSwgc3VidGVyZnVnZSwgYW5kIHRyaWNrZXJ5IHRvIG1hbmlwdWxhdGUgb3RoZXJzIGFuZCBnZXQgd2hhdCBzaGUgd2FudHMuIApUaGlzIGlzIG5vdCBhbiBpbmNvcnJlY3Qgc3RhdGVtZW50LCBhbmQgaXQgaXMgcGFydCBvZiB3aHkgcHJlc2NyaXB0aW9uIGRydWdzLCBhbmQgaGVhbHRoIGNhcmUgY29zdHMgaW4gZ2VuZXJhbCwgYXJlIGV4b3JiaXRhbnQgaW4gdGhlIFVTIGNvbXBhcmVkIHRvIHRoZSByZXN0IG9mIHRoZSB3b3JsZC4gCkRldmVsb3AgYSBkYXRhIG1pbmltaXphdGlvbiBwbGFuIGFuZCBkaXNwb3NlIG9mIGRhdGEgbm90IG5lZWRlZC4gVGhlIHBsYW4gc2hvdWxkIGluY2x1ZGUgc3RvcmFnZSBhbmQgcmV0ZW50aW9uIHNjaGVkdWxlcy4gClRoZW4gYXQgdGhlIGZ1bmVyYWwgZ3Vlc3Mgd2hvIGRlY2lkZXMgdG8gY29tZSBpbiBhbmQgbWFrZSBpdCBhbGwgYWJvdXQgaGVyc2VsZiBhZnRlciBkb2luZyBub3RoaW5nIGZvciBoZXIgY2hpbGQgaGVyIHdob2xlIGxpZmUsIG15IGRydWdnaWUgYXVudC4gCldvdy4gT3ZlciA2MDAgcnVubmVycyBmb3IgYSAxMDAwIE5MSCB3aXRoIHJlYnV5cy4gU29tZWhvdyBEYW5pZWwgTmVncmFuYXUgbWFuYWdlcyB0byByZWJ1eSAyNiB0aW1lcy4gCk5vdyB0aGUgaW50ZXJlc3RpbmcgbnVtYmVycyBhbmQgZGV0YWlsczogVGhlcmUgYXJlIDE2IGx1Y2t5IHNoYXJlaG9sZGVycywgYWxsIHdpdGggcG9saXRpY2FsIGxpbmtzIHRvIHRoZSBydWxpbmcgZWxpdGUuCkkgd291bGQgbGlrZSB0byBwbGF5IG92ZXJ3YXRjaCBvbiBhIDEwODBwIDE0NGh6IG1vbml0b3Igd2l0aCBoaWdoIEZQUy4gRnJvbSBzZWFyY2hpbmcgb25saW5lLCBpdCBzZWVtcyBJIGNhbiBkbyB0aGF0LCBidXQgSSBtaWdodCBoYXZlIHRvIHBsYXkgb24gbG93ZXIgc2V0dGluZ3MuIApIYW5uZWxvcmUwMTAgdQpJcyBpdCByZWFsbHkgWW91IGJlIGFibGUgdG8gcG9pbnQgdGhlIHJhZGFyIGF0IGl0LCBidXQgdGhlIGNvbnRhY3Qgc2hvdWxkIHN0aWxsIGJlIG5vdGNoIGZpbHRlcmVkIG91dCBvZiB0aGUgcmV0dXJuaW5nIGVuZXJneS4gVENTIHByb2JhYmx5IGlzbiBnb2luZyB0byBnaXZlIHlvdSByYW5nZSBvciBzcGVlZCBkYXRhIGZyb20gYSBUViBwaWN0dXJlICh1bmxlc3MgaXQgc21hcnRlciB0aGFuIEkgdGhvdWdodCBpdCB3YXMpIHNvIHRoZSBkYXRhIGF2YWlsYWJsZSB0byB0aGUgd2VhcG9ucyBzeXN0ZW1zIGlzIHN0aWxsIHJlZHVjZWQuLiAKQW5kIHRoZSBjcmFmdCAgZHJpbmtlcnMuIApUaGV5IHBvaW50IHlvdSB3aGVyZSB0byBnbyBhbmQgaG93IHRvIHNpZ24gdXAuIApJbiB0aGlzIGFydGljbGUsIHdlJ2xsIGxvb2sgYXQgd2hhdCBjYXVzZXMgaGFpciBsb3NzIGluIHRoZSBmaXJzdCBwbGFjZSBhbmQgaG93IHRvIGRlYWwgd2l0aCB0aGUgcHN5Y2hvbG9naWNhbCBmYWxsb3V0IHRoYXQgb2Z0ZW4gYWNjb21wYW5pZXMgaXQuIFdlJ2xsIGRpc2N1c3MgaG93IHRvIGNob29zZSB0aGUgcmlnaHQgcGxhc3RpYyBzdXJnZW9uICh0aGVzZSBwcm9mZXNzaW9uYWxzIGhhdmUgYmVlbiBwZXJmb3JtaW5nIGNlcnRhaW4gaGFpciByZXBsYWNlbWVudCBwcm9jZWR1cmVzIGZvciAzNSB5ZWFycyEpLCBob3cgdG8gY2hvb3NlIHRoZSByaWdodCBwcm9jZWR1cmUgYW5kIHdoYXQgdG8gZXhwZWN0IGJlZm9yZSBhbmQgYWZ0ZXIgc3VyZ2VyeS4gCkZvbSB0aGUgQ2xhc3NpY2FsIEdyZWVrcyB0aWxsIGFib3V0IDE2MDAgb3Igc28sIFdlc3Rlcm4gZG9jdG9ycyBhbmQgbGF5cGVvcGxlIGFsaWtlIHRob3VnaHQgdGhlcmUgd2FzIE9ORSBzZXggKGFuZCBpdCB3YXMgbWFsZSAgd29tZW4gd2VyZSBqdXN0IGludmVydGVkIHZlcnNpb25zIG9mIHRoZSBtb3JlIHBlcmZlY3QgbWFsZSBmb3JtKS4gClNvIGEgc3R1ZHkgdGhlbiBzaG93cyB0aGF0IHRoZWlyIEFESEQgZ3JvdXAgc2hvd2VkIGRpZmZlcmVuY2VzIGluIFggdmVyc3VzIHRoZSBjb250cm9sIGdyb3VwIGRvZXNuIG1lYW4gYXMgbXVjaCB3aGVuIHlvdSBkb24ga25vdyBpZiB0aGUgZ3JvdXBzIHJlYWxseSB3ZXJlIGFsbCBBREhEIHZzLiAKVW4gcGllZCBsb3VyZCBldCByaWdpZGUgY29ycmVzcG9uZCBzb3V2ZW50ICB1bmUgbmF0dXJlIHN0cmljdGUgb3UgaW5mbGV4aWJsZTsgZGVzIHBpZWRzIGZhaWJsZXMgZXQgc2FucyBjb25zaXN0YW5jZSBzb250IGxlIHNpZ25lIGQgZmFpYmxlc3NlIGludHJpZXVyZSwgZGUgdGltaWRpdCBvdSBwZXV0ICB0cmUgZCB0YXQgZCBEZXMgcGllZHMgb3JpZW50cyBkYW5zIGRlcyBkaXJlY3Rpb25zIG9wcG9zZXMgICBsZSBkcm9pdCBhbGxhbnQgZGFucyB1biBzZW5zIGV0IGxlIGdhdWNoZSBkYW5zIGwgICBwZXV2ZW50IHRyZSBsZSBzaWduZSBkIGdyYW5kZSBjb25mdXNpb24gY2hleiB1biBodW1haW4gaW5jYXBhYmxlIGRlIGNob2lzaXIgdW5lIGRpcmVjdGlvbi4gIEJpZW4gc2UgdGVuaXIgc3VyIHNlcyBkZXV4IHBpZWRzICwgIG1ldHRyZSB1biBwaWVkIGRldmFudCBsICwgc29udCBkZXMgZXhwcmVzc2lvbnMgdXN1ZWxsZXMgcXVpIHJ2bGVudCBiaWVuIG5vdHJlIHJlbGF0aW9uICBsYSByYWxpdCwgYXUgbW9uZGUgZXh0cmlldXIsIGRlIG1tZSBxdWUgbCBhbmdsYWlzZSAgS25vd2luZyB3aGVyZSB5b3Ugc3RhbmQgIChzYXZvaXIgbyBvbiBlbiBlc3QpIGVzdCB1bmUgYWZmaXJtYXRpb24gZGUgbm90cmUgcG9zaXRpb25uZW1lbnQgZGFucyBsYSB2aWUuIApZb3UgZG9uIGdldCBwdW5pc2hlZCB0aGF0IG11Y2guIEluIFBpb3NvbHZlciB5b3UgY2FuIGZpeCBoZXJvIHN0cmF0ZWd5IChzYXkgZm9sZGluZyBtb3JlIG9mIGhpcyBibHVmZmNhdGNoZXJzKSBhbmQgbGV0IHRoZSBjb21wdXRlciB0cnkgdG8gbWF4aW1hbGx5IGV4cGxvaXQgdGhhdC4gSXQgdHVybnMgb3V0IGl0IGNhbiBvbmx5IGJlIGV4cGxvaXRlZCBmb3IgYSBzbWFsbCBpc2ggYW1vdW50LCBhcyBtb3N0IG9mIHRob3NlIGJsdWZmY2F0Y2hlcnMgd2VyZSBqdXN0IGJhcmVseSArRVYgY2FsbHMuIApPZmZpY2lhbHMgZGlnIGluIHRvIFZlZ2FzIHNob290ZXIncyBoaWdoCkl0IHdhcyBzYWQgYmVjYXVzZSBoZSB3YXMgc28gb2J2aW91c2x5IGNvbWluZyB0byBtZSBiZWNhdXNlIGl0IGFsbG93ZWQgaGltIHNvbWUgaW50aW1hY3kgd2l0aCBhIG1hbi4gSGUgd2FzIGluIGhpcyBlYXJseSAyMHMgYW5kIHRvdGFsbHkgY29uZnVzZWQgb3ZlciBoaXMgc2V4dWFsaXR5SSBoYXZlIGhhZCBzb21lIGdyZWF0IGNvbnZlcnNhdGlvbiB3aXRoIHNvbWUgdmVyeSBmaXQgd29tZW4gd2hpbGUgbWFzc2FnaW5nIHRoZW0sIHRoYXQgbGVhZCB0byB3b3JraW5nIG91dCB0b2dldGhlciBhdCB0aGUgZ3ltLCBkaW5uZXIgZGF0ZXMgYW5kIHRoZW4gdG8gc2V4LiAKVGhlaXIgY2xpZW50cyB3ZXJlIG1haW5seSBhZHVsdCBtZW4uSW4gc291dGhlcm4gYXJlYXMgb2YgQ2VudHJhbCBBc2lhIGFuZCBBZmdoYW5pc3RhbixUZW1wbGF0ZTpXaGVuIGFkb2xlc2NlbnQgbWFsZXMgYmV0d2VlbiB0d2VsdmUgYW5kIHNpeHRlZW4geWVhcnMgb2xkIHBlcmZvcm0gZXJvdGljIHNvbmdzIGFuZCBzdWdnZXN0aXZlIGRhbmNpbmcgYW5kIGFyZSBhdmFpbGFibGUgYXMgc2V4IHdvcmtlcnMuIFN1Y2ggYm95cyBhcmUga25vd24gYXMgYmFjY2guSW4gSW5kaWEsIGEgaGlqcmEgaXMgYSBwaHlzaWNhbGx5IG1hbGUgb3IgaW50ZXJzZXggcGVyc29uIHdobyBtYXkgc29tZXRpbWVzIGVudGVyIGludG8gcHJvc3RpdHV0aW9uLiAKTmVpdGhlciBpdCBub3IgaXRzIGFsdGVybmF0aXZlcyBzaG91bGQgYmUgZGVsZXRlZCBvciByZW1vdmVkLiBJdCBzaG91bGQgYWxzbyByZW1haW4gcHJvdGVjdGVkIHNvIHRoYXQgaWxsZWdhbCBpbmZvcm1hdGlvbiBjYW5ub3QgYmUgcG9zdGVkLiAKSWYgdGhlIHN1YnJlZGRpdCB3ZXJlIHByaXZhdGUgb3IgbXVjaCBzbWFsbGVyLCB3ZSB3b3VsZG4gbmVlZCBpdCwgYnV0IHdlIHJlYWxseSBkby4uIApTaGUgc21pbGVkIGF0IG1lLCBzYWlkIGhlbGxvIHRvIEREIGFwcHJvcHJpYXRlbHkgYW5kIEkgZGlkbid0IHNlZSBoZXIgZm9yIHRoZSByZW1haW5pbmcgNDAgbWludXRlcywgc2hlIHN0YXllZCBpbiBhIGRpZmZlcmVudCByb29tLCB5b3VuZ2VyIFNJTCBpZ25vcmVkIG1lLiBCSUwgYW5ub3VuY2VkIGhpcyBlbmdhZ2VtZW50LCBoZSBoYXMgZ290IGVuZ2FnZWQgdG8gYSB3b21hbiBmcm9tIHRoZWlyIGN1bHR1cmU6Y291bnRyeSBhbmQgYXMgaGUgaXMgdGhlIGdvbGRlbiBjaGlsZCBob3BlZnVsbHkgbWlsIHdpbGwgYXR0YWNoIHRvIHRoZW0uIChPYnZpb3VzbHkgaGUncyBnb2luZyB0byBtYXJyeSBoaXMgIm93biIgYW5kIHN0YXllZCB0cmFkaXRpb25hbCEgKQpPdGhlcndpc2UgbWF5YmUgdGhleSBqdXN0IHRyeWluZyB0byBzb3J0IG91dCBleGFjdGx5IHdoYXQgaGFwcGVuZWQgc3RpbGwsIGFuZCBpZGVhbGx5IHlvdXJzIGdvZXMgdGhyb3VnaCBhcyBub3JtYWwgc29vbi4gS2VlcCBwb2tpbmcgdGhlbSBwZXJpb2RpY2FsbHkgdGhvdWdoLiAKRGVtb25pemVkIGlzIGFub3RoZXIgd29yZCB0aGV5IGZyZXF1ZW50bHkgdXNlIHRvIG1lYW4gYW4gb2JqZWN0LCBwZXJzb24sIG9yIHRoaW5nIHRoYXQgY2FuIGxlYWQgb25lIHRvIGRlbW9uIHBvc3Nlc3Npb24uIApZb3UgZG9uIGhhdmUgdG8gdGFsay4geW91IGJvdGggZW5nYWdhZ2VkLCBhbmQgeW91IGFja25vd2xlZGdlIGVhY2ggb3RoZXIgbm9udmVyYmFsbHkgICB0b3VjaGVzLCBnbGFuY2VzIGV0Yy4gcGF1c2UgdG8gcmVhZCBzb21lIHBhc3NhZ2UgeW91IGxpa2VkIHRvIGhlciBvciBhc2sgd2hhdCBhIHdvcmQgb3IgY3VsdHVyYWwgcmVmZXJlbmNlIG1lYW5zLiBJIHRoaW5rIGl0IHZlcnkgcmVsYXhpbmcuIFJlY2VudGx5IHNoZSB3YXMgcmVhZGluZyB0aGUgVGhyZWUgQm9keSBQcm9ibGVtICAgd2hpY2ggSSBhbHJlYWR5IHJlYWQsIGFuZCBJIHdhcyB0aHVtYmluZyB0aHJvdWdoIFJpY2sgU3RldmUgU3BhaW4gYmVjYXVzZSB3ZXJlIGdvaW5nIHRvIE1hZHJpZCB0byBjbGltYiBpbiBhIGZldyBtb250aHMuIApJdCBwb3NzaWJsZSB0aGF0IGluIHByYWN0aWNlIE1URyBpcyBhIGdhbWUgd2hlcmUgdGhlIGhpZGRlbiBpbmZvcm1hdGlvbiBqdXN0IGlzbiBpbXBvcnRhbnQgZW5vdWdoIHRvIG1ha2UgbXVjaCBvZiBhIGRpZmZlcmVuY2UuIEluIHRoYXQgY2FzZSBNQ1RTIG9yIElTTUNUUyBtaWdodCBnZXQgeW91IHJlYXNvbmFibGUgcmVzdWx0cy4gQnV0IGZvciBhIG1vcmUgcHJpbmNpcGxlZCBhcHByb2FjaCB5b3Ugc2hvdWxkIGxvb2sgZm9yIChvciBkZXZlbG9wISkgYW4gYWxnb3JpdGhtIHRoYXQgY29udmVyZ2VzIHRvIGFuIGVxdWlsaWJyaXVtIChzdWNoIGFzIE1vbnRlIENhcmxvIENvdW50ZXJmYWN0dWFsIFJlZ3JldCBNaW5pbWl6YXRpb24pLgpUaGV5IGhhdmUgYSBsb3Qgb2YgY29vbCBmZWF0dXJlcywgc3VjaCBhcyBsaXZlIGRlYWxlciwgc28geW91IGNhbiBnZXQgYXMgY2xvc2UgdG8gYSByZWFsIGxpZmUgZXhwZXJpZW5jZSBhcyBwb3NzaWJsZS4gClRoZXJlJ3MgYSBkaXJlY3QgY29ycmVsYXRpb24gYmV0d2VlbiBjb3Jwb3JhdGlvbnMgdGhhdCBhcmUgZ2V0dGluZyByaWNoLCBhbmQgdGhlIGZhY3QgdGhhdCB3ZSBoYXZlIHN0dWRlbnRzIHdobyBhcmUgc2hhY2tsZWQgd2l0aCBkZWJ0LiAKSXQncyBhIDQyIGluY2ggcGxheWluZyBzdXJmYWNlIHRhYmxlIHRoYXQgY29udmVydHMgaW50byBhIGRpbmluZyB0YWJsZSwgb3IgYSBidW1wZXIgcG9vbCB0YWJsZSBhcyB3ZWxsLiAKQ29uY2lkZW5jZSBvdSBwYXMsIGNlcyBkZXJuaXJlcyBkb3VsZXVycyBzZW1ibGVudCBhdm9pciBkaXNwYXJ1IGV0IGxlcyByYWlkZXVycyAgbGEgbWFyY2hlIHNlIHNvbnQgYXR0bnVlcy5KJ2FpIGluZGlxdSBkYW5zIGxhIHBhZ2UsIHVuIG1veWVuIGRlIG1lc3VyZXIgbGEgZ2x5Y2F0aW9uLCBjJ2VzdCBkZSBkb3NlciBsZXMgZnJ1Y3Rvc2FtaW5lcyBldCBIQkExQyBhdmFudCBlbXBsb2kgZHUgRCBSaWJvc2UgZXQgYXBycyAzIHNlbWFpbmVzIHBvdXIgbGVzIGZydWN0b3NhbWluZXMsIGxhIHByaW9kZSBkZSByZnJlbmNlIGRlIGwnaG1vZ2xvYmluZSBnbHlxdWUgdGFudCBkZSAzIG1vaXMuIApNYW4sIGFuZCBvbmUgaGFzIHRvIHN1c3BlY3QgdGhlIHJlYXNvbnMgd2h5LCBvdXQgb2YgdGhlIGhvcmRlcyBvZiBzdWNoIGFjY3VzYXRpb25zLCBSLiBLZWxseSBpcyB0aGUgZmlyc3QgcHJvbWluZW50IHB1YmxpYyBtZWRpYSBmaWd1cmUgdG8gZ28gZG93biBmb3IgY2hpbGQgc3R1ZmYgaW4gYSBsb25nIHRpbWUuIApNb3N0IGhhdmUgYmVlbiBpbnZvbHZlZCB3aXRoIGNsaW5pY2FsIHJlc2VhcmNoIGZvciB5ZWFycyBhbmQgYXJlIGZvcnR1bmF0ZSBpbiBoYXZpbmcgcmVzZWFyY2ggdGVhbXMgYXJvdW5kIHRoZW0gdGhhdCBoZWxwIHdpdGggdGhpcyBldmVyIGluY3JlYXNpbmcgd29ya2xvYWQsIGJ1dCBmb3IgbmV3IGludmVzdGlnYXRvcnMgd2l0aG91dCBhbnkgaW5mcmFzdHJ1Y3R1cmUgdG8gc3VwcG9ydCB0aGVtIGNsaW5pY2FsIHJlc2VhcmNoIGhhcyBiZWNvbWUgdG9vIHRpbWUgY29uc3VtaW5nIGFuZCBjaGFsbGVuZ2luZyB0byBlbmdhZ2Ugd2l0aC4uIApOb3RoaW5nIGNhbm5vdCBleGlzdC4gCiJUaGV5IGJlbGlldmUgdGhhdCBpZiB0aGV5IGxhc3QgbG9uZ2VyLCB0aGV5J2xsIGJlIGJldHRlciBhYmxlIHRvIGJyaW5nIGEgd29tYW4gdG8gb3JnYXNtLCIgR29sZGVuIHNheXMuIApJZiB5b3UgaGF2ZSBxdWVzdGlvbnMgYWJvdXQgdGhpcywgcGxlYXNlIGNvbnRhY3Qgb3VyIG1vZHMgdmlhIG1vZGVyYXRvciBtYWlsIHJhdGhlciB0aGFuIHJlcGx5aW5nIGhlcmUuIFRoYW5rIHlvdSFIaSBCaWdfQmFsbHp6ISBUaGFua3MgZm9yIHBvc3RpbmcgdG8gL3IvYXd3LiBVbmZvcnR1bmF0ZWx5LCB5b3VyIHN1Ym1pc3Npb24gaGFzIGJlZW4gcmVtb3ZlZCBmb3IgdGhlIGZvbGxvd2luZyByZWFzb24ocyk6CkFubmE6IE91ciB3aG9sZSBob3VzZSBpcyBoZWF0ZWQgd2l0aCBhbiBhaXIgc291cmNlIGhlYXQgcHVtcCwgYSBzbWFsbCB1bml0IHRoYXQgYWN0cyBsaWtlIGEgcmV2ZXJzZSByZWZyaWdlcmF0b3IsIHRha2luZyBoZWF0IG91dCBvZiB0aGUgY29sZCBhaXIgZnJvbSBvdXRzaWRlIGFuZCB1c2luZyBpdCB0byBoZWF0IHRoZSBpbnNpZGUgYWlyLiAKSXQgbWFkZSB0aGUgZ2FtZSB1bnBsYXlhYmxlIHJlYWxseS4gCkkgbG92ZSBPbmUgUGllY2UuIGJ1dCBJIGFjdHVhbGx5IHRoaW5rIE1IQSBpcyBiZXR0ZXIuIEJ1dCB0aGF0IGJlY2F1c2UgSSB0aGluayB0aGUgY2hhcmFjdGVycyBhcmUgd2F5IG1vcmUgaW50ZXJlc3RpbmcgaW4gTUhBLgpPYnZpb3VzbHksIHRoZXJlIGlzIG5vIHN1Y2ggdGhpbmcgYXMgdGhlICJ3b3JraW5nIHBvb3IuIiBUaGVyZSBhcmUsIGhvd2V2ZXIsIHBlb3BsZSB3aG8gdGhyb3VnaCBzb21lIGZhdWx0IG9mIHRoZWlyIG93biAodGVlbmFnZSBwcmVnbmFuY3ksIGhpZ2ggc2Nob29sIHRydWFuY3ksIG9ycGhhbmhvb2QpIHdvcmsgdHdvIGpvYnMgYXQgbWluaW11bSB3YWdlIGFuZCBjYW5ub3QgYWZmb3JkIGJvdGggZm9vZCBhbmQgVHlsZW5vbC4gU2luY2UgdGhleSBhcmUgYWxsIGlycmVzcG9uc2libGUgZHJ1ZyBhZGRpY3RzLCB0aGV5IGNhc2ggdGhlaXIgcGF5Y2hlY2tzIGF0IHRoZSBwb2tlciB0YWJsZS4gVGhpcyBpcyBhbiBleHBsb2l0YWJsZSBjaGFyYWN0ZXIgZmxhdywgYXMgYSBibHVmZiB0aGF0IG1pZ2h0IHJlcXVpcmUgYSAkMTAwIGJldCBmb3Igbm9uIGRlZ2VuZXJhdGVzIGNhbiBiZSByZWR1Y2VkIHRvICQ1MCwgYmVjYXVzZSB0byB0aGUgc29jaWFsIHJpZmYgcmFmZiBrbm93biB0byBtZWRkbGluZyBhY2FkZW1pY3MgYXMgInRoZSB3b3JraW5nIHBvb3IiIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gJDUwIGFuZCAkMTAwIGlzIHNpbXBseSBmaWZ0eSBmZXdlciBzY3JhdGNoIGFuZCB3aW5zIGF0IGEgcHJlZG9taW5hbnRseSBNZXhpY2FuIGNvbnZlbmllbmNlIHN0b3JlLi4gClRoZXJlIHdlcmUgYWJvdXQgMjAgZmlzaGJvd2wgZ2lybHMgYW5kIDIgc2lkZWxpbmVycy4gSSBkaWRuIGNoZWNrIHRoZSBzaXR1YXRpb24gdXBzdGFpcnMuIApGZWVsIGdvb2QsIGhlIHNocnVnZ2VkLiBXYXMgYSBncmVhdCByYWNlLCBJIGp1c3QgZ290IG5pYmJlZCBhdCB0aGUgbGluZSBieSB0aGUgZ3JlYXQgVXNhaW4uIApMb3JzIGRlIHNvbiBpbnRlcnZlbnRpb24gdGx2aXN1ZWxsZSBjZSBqZXVkaSAyNCBhdnJpbCAyMDA4LCBsZSBQcnNpZGVudCBkZSBsYSBScHVibGlxdWUgRnJhbmFpc2UgTmljb2xhcyBTQVJLT1pZIGVzdCBpbnRlcnZlbnUgc3VyIGxhIHF1ZXN0aW9uIGRlIGwnZW50cmUgZGUgbGEgVHVycXVpZSBkYW5zIGwnVW5pb24gZXVyb3Blbm5lLiBJbCBhIGRjbGFyIDogIkonYWkgdG91am91cnMgdCBvcHBvcyAgbCdlbnRyZSBkZSBsYSBUdXJxdWllIGVuIEV1cm9wZSIsIGV0IGEgc291bGlnbiBzb24gaW50ZW50aW9uIGRlIGNvbnN1bHRlciBsZXMgZnJhbmFpcyBwYXIgcmZyZW5kdW0gc3VyIGNldHRlIHF1ZXN0aW9uIGp1c3RpZmlhbnQgY2V0dGUgaW5pdGlhdGl2ZSBwYXIgbCdvYnNlcnZhdGlvbiBjb21wYXJhdGl2ZSBlbnRyZSBkaWZmcmVudGVzIGFkaHNpb25zIDogInBhcyBsYSBtbWUgY2hvc2UgZGUgZmFpcmUgZW50cmVyIGxhIENyb2F0aWUsIHF1aSBhIDMgbWlsbGlvbnMgZCdoYWJpdGFudHMsIGV0IGxhIFR1cnF1aWUsIHF1aSBlbiBjb21wdGUgMTAwIG1pbGxpb25zIi4gClN1cGVyIE1ldHJvaWQgKFNORVMpQWJzb2x1dGVseSBkZXNlcnZlcyBpdHMgbWFzdGVycGllY2Ugc3RhdHVzLiBBbWF6aW5nIGF0bW9zcGhlcmUsIHNvdW5kdHJhY2ssIGFuZCB3b3JsZCBkZXNpZ24uIEl0J3MgdGhlIG1vc3Qgbm9uIGxpbmVhciBvZiB0aGVzZSBnYW1lcyAgIGl0IHJlYWxseSBmZWVscyBsaWtlIHlvdSdyZSBleHBsb3JpbmcgYW4gdW5rbm93biB3b3JsZCwgeWV0IHlvdSBuZXZlciBmZWVsIGNvbXBsZXRlbHkgbG9zdCBhbmQgdGhlcmUgYXJlIGFsd2F5cyBjbHVlcyBhcyB0byB3aGVyZSB0byBoZWFkIG5leHQuIChFeGNlcHQgaW4gTWFyaWRpYS4gRnVjayBNYXJpZGlhLikgSSBkaWQgbWlzcyBiZWluZyBhYmxlIHRvIHNlZSBkb29ycyBhbmQgY29sbGVjdGVkIGl0ZW1zIG9uIHRoZSBtYXAsIHRob3VnaCwgc2luY2UgSSBwbGF5ZWQgdGhlIEdCQSB0aXRsZXMgZmlyc3QuCk1pc3NpbmcgdGhhdCBGRyByaWdodCBiZWZvcmUgdGhlIGhhbGYgd2FzIGEga2lsbGVyLCB0aG91Z2gsIG5vIG1hdHRlciB3aGF0LiAKVG8gbWUgdGhhdCBzZWVtcyB2ZXJ5ZHVtYmZyb20gdGhlaXIgcGVyc3BlY3RpdmUuIAoiQWxsIHRocmVlIG9mIFN1c2FuJ3MgSmluIFNoaW4gSnl1dHN1IHNlbGYgaGVscCBjbGFzc2VzIGFyZSB0cnVseSByZW1hcmthYmxlLiBTdXNhbiBpcyBhIGdpZnRlZCB0ZWFjaGVyIGFuZCBjb252ZXlzIHRoZSBtYXRlcmlhbCBpbiBhbiBlYXN5LCB1bmRlcnN0YW5kYWJsZSB3YXkuIFRoZXkncmUgYWxzbyBncmVhdCBwcmVwYXJhdGlvbiBmb3IgcGVvcGxlIGludGVyZXN0ZWQgaW4gY29udGludWluZyB0aGVpciBzdHVkaWVzIGluIEpTSiIKRXJpYyBTY2htaWR0ICAgR29vZ2xlRXJpYyBFbWVyc29uIFNjaG1pZHQgaXMgYW4gZW5naW5lZXIsIENoYWlybWFuL0NFTyBvZiBHb29nbGUgYW5kIGEgZm9ybWVyIG1lbWJlciBvZiB0aGUgQm9hcmQgb2YgRGlyZWN0b3JzIG9mIEFwcGxlIEluYy4gSGUgaGFzIGFsc28gc2F0IG9uIHRoZSBib2FyZHMgb2YgdHJ1c3RlZXMgZm9yIENhcm5lZ2llIE1lbGxvbiBVbml2ZXJzaXR5IGFuZCBQcmluY2V0b24gVW5pdmVyc2l0eS4gSGUgaXMgdGhlIG93bmVyIG9mIHRoZSBEYWxsYXMgTWF2ZXJpY2tzLCBhbiBOQkEgYmFza2V0YmFsbCB0ZWFtLCBvd25lciBvZiBMYW5kbWFyayBUaGVhdHJlcywgYW5kIENoYWlybWFuIG9mIEhETmV0LCBhbiBIRFRWIGNhYmxlIG5ldHdvcmsuIApGb3IgdGhlIHNhbWUgcmVhc29uLCBJIHdhbnQgdG8ga25vdyBpZiBJIGluYWR2ZXJ0ZW50bHkgc3VwcG9ydGluZyBhIGJ1c2luZXNzIHRoYXQgaGFzIHNoYWR5IHByYWN0aWNlcyBpbiBhZGRpdGlvbiB0byB0aGVpciBsZWdpdGltYXRlIG9uZXMuIFRoYXQgdWx0aW1hdGVseSB0aGUgcmVhc29uIGJlaGluZCB0aGUgcmVncmV0dGFibGUgR29vZ2xpbmcuSWYgeW91IGRvbiBtaW5kIGhhdmluZyBpdCBpbiB5b3VyIGJyb3dzZXIgaGlzdG9yeSwgR29vZ2xlIHRoZSBidXNpbmVzcyBuYW1lICsgUEVSQi4gClRydXRoIG9mIHRoZSBtYXR0ZXIgaXMgZm9yIGEgbWFqb3JpdHkgb2YgU2F1ZGlzLCB5b3VuZyBhbmQgb2xkLCB0aGUgcHJvYmxlbXMgYW5kIHdvcnJpZXMgYXJlIG9uZTogSG91c2luZywgc3RhYmxlIGpvYnMsIGZhaXIgd2FnZXMsIGFiaWxpdHkgdG8gc3RhcnQgYSBmYW1pbHksIHNhZmV0eSwgYW5kIHNvIG9uLgpBdCAxMiwgMywgNiwgYW5kIDkgKHJlcGVhdCkgd2UgZmVkIGJvdGggYmFiaWVzLCBjaGFuZ2VkIGRpYXBlcnMsIHN3YWRkbGVkLCByb2NrZWQgYW5kIHB1dCBiYWNrIHRvIHNsZWVwLiBJZiB0aGV5IHdva2UgdXAgYW5kIGNyaWVkIGF0IG90aGVyIHRpbWVzIHdlIGZlZC9jaGFuZ2VkL3Nvb3RoZWQgYmFjayB0byBzbGVlcCBhbmQgdGhlbiB3b2tlIHRoZW0gdXAgYXQgdGhlIHNjaGVkdWxlZCB0aW1lIGFzIHdlbGwuIFByZXR0eSBxdWlja2x5IHRoZSBiYWJpZXMgZ290IGluIHRvIHRoZSBzYW1lIHJvdXRpbmUuLiAKS2lzcyBvciBhIGJpdCBvZiB0b3VjaGluZykuIE9uY2UgeW91IGRlY2lkZWQgb24gYSBsYWR5LCB5b3UgYWdyZWUgb24gc2VydmljZSBhbmQgcHJpY2UgKHVzdWFsbHkgdGhlcmUgaXMgYSBiYXNlIHByaWNlIGZvciBiYXNpYyBzZXJ2aWNlIGFuZCBleHRyYXMsIGxpa2UgY3VtbWluZyBvbiBoZXIgb3IgaW4gaGVyIG1vdXRoLCBjb3N0IGV4dHJhKS4gTW9zdCBpbXBvcnRhbnQgaXMgdG8gd2F0Y2ggdGhlIHByaWNlcyBmb3IgZHJpbmtzLiAKVCBBcHBseS4gClNvbWUgd29tZW4gd2hvIGFyZSB1bndpbGxpbmcgdG8gdHJ5IGFuYWwgc2V4IHdpdGggdGhlaXIgY3VycmVudCBwYXJ0bmVyIG1heSBoYXZlIGhhZCBhIGJhZCBleHBlcmllbmNlIHdpdGggYW4gaW1wYXRpZW50IG9yIGlnbm9yYW50IGxvdmVyIGluIHRoZSBwYXN0LiBUaGF0IHdoeSBJIGRvbiByZWNvbW1lbmQgYXNraW5nIGEgd29tYW4gZm9yIGFuYWwgc2V4IHdpdGhvdXQgc29tZSBjYXJlZnVsIHByZXBhcmF0aW9uLiAKQ29ycmVjdC4gV2hlbiB5b3UncmUgaW4gYW4gb3ZlcnN0ZWVyIHNsaWRlLCBwb2ludCB5b3VyIHdoZWVsIGluIHRoZSBkaXJlY3Rpb24gb2YgdHJhdmVsLiAKSW4gdGhlIGZpcnN0IHBsYWNlLCB5b3Ugc2hvdWxkIHRha2UgYSBtb21lbnQgdG8gY29uc2lkZXIgaG93IHlvdSBhcmUgZ29pbmcgdG8gd2FudCB0aGUgcG9rZXIgZmVsdCB0b3AgdG8gZmVlbC4gV2hlbiB5b3UgYXJlIG1vcmUgY29uY2VybmVkIGFib3V0IHRoZSBwcmljZSwgYW5kIHdoZW4gZWNvbm9teSBpcyB5b3VyIHRvcCBwcmlvcml0eSwgeW91IG1heSBmaW5kIHRoYXQgeW91IGFyZSBnb2luZyB0byBiZSBzdGlja2luZyB3aXRoIGdlbmVyaWMgZmVsdC4gR2VuZXJpYyBmZWx0IHVzdWFsbHkgaGFzIGEgc2xpZ2h0bHkgcm91Z2hlciBmZWVsLCBhbmQgbW9yZSBvZiBhIHRvb3RoIHRvIGl0OyBhcyBzdWNoLCB5b3Ugd2lsbCBmaW5kIHRoYXQgd2hlbiB5b3Ugc2xpZGUgY2FyZHMgYWNyb3NzIGl0LCB5b3UgbWlnaHQgcmVhbGl6ZSB0aGF0IHRoZXkgYXJlIHNuYWdnaW5nLgpUaGUgZ29hbCBvZiB0aGUgY2VudHJlLCBjYWxsZWQgMTQ0MCBNdWx0aXZlcnNpdHksIGlzIHRvIHRoYXQgdGhlIGJsYXppbmcgc3VjY2VzcyBvZiB0aGUgaW50ZXJuZXQgY2F0YWx5emVkIHBvd2VyZnVsIGNvbm5lY3Rpb25zLCB5ZXQgZGlkIG5vdCBoZWxwIHBlb3BsZSBjb25uZWN0IHRvIHRoZW1zZWx2ZXMuIFRoZXJlIGlzIG1vc3QgbGlrZWx5IGVub3VnaCBjcmlzaXMgdG8gZ28gYXJvdW5kLi4gClRoZSBzdG9yeSBnb2VzIHRoYXQgYXQgcHJvdGVzdHMgaW4gdGhlIGxhdGUgc2l4dGllcywgZmVtaW5pc3RzIHJhZ2luZyBhZ2FpbnN0IHRoZSBtYWxlIGRvbWluYXRlZCB3b3JsZCBkZWZpYW50bHkgcmVtb3ZlZCBhbmQgc2V0IGZpcmUgdG8gdGhlaXIgYnJhcy4gSXQgd2FzIGEgcG93ZXJmdWwgc3RhdGVtZW50LCBzeW1ib2xpY2FsbHkgZGVjbGFyaW5nIHRoZSB3b21lbidzIGRlc2lyZSBmb3IgdGhlaXIgZmVtaW5pbmUgcG93ZXIgdG8gYnVyc3Qgb3V0IG9mIGl0cyBwYXRyaWFyY2hhbCByZXN0cmFpbnRzIGFuZCBib3VuY2UgZnJlZSwgbm8gbG9uZ2VyIGNvbmZpbmVkIGJ5IHRoZSBsYWNlIGFuZCBzcGFuZGV4IG9mIHRyYWRpdGlvbmFsIHNvY2lhbCBtb3Jlcy4uIApGb3IgdGhlIG1vc3QgcGFydCwgYnVzaW5lc3NlcyByZWx5IG9uIHN1cHBsaWVycyB0byBhY3QgYXMgSVQgcHJvY3VyZW1lbnQgZmFjaWxpdGF0b3JzLCBidXQgdGhlc2UgcmVsYXRpb25zaGlwcyBhcmUgaW5mbHVlbmNlZCBieSBiZWhpbmQgdGhlIHNjZW5lcyBhZ3JlZW1lbnRzIHRoYXQgbWF5IGltcGFjdCB0aGUgY29zdCBhbmQgdmFsdWUgb2YgSVQgcHVyY2hhc2VzLiAKVGhlIHdheSB5b3Ugd3JvdGUgdGhpcyBicm91Z2h0IHNldmVyYWwgdmlzdWFscyB0byBtaW5kIGFzIEkgcmVhZCB0aHJvdWdoLiAKQW5kIGxhYm9yIGlzIG5vIGRpZmZlcmVudC4gSXQgaXMgcGVyaGFwcyBubyBjb2luY2lkZW5jZSB0aGF0IHRoZXNlIHRocmVlIHN0YXRlcyBoYXZlIHRoZSBoaWdoZXN0IHN0YXRlIG1pbmltdW0gd2FnZXMgaW4gdGhlIG5hdGlvbi4gCkluIDE5NjEsIENvbGUgd2FzIHByb21vdGVkIHRvIGdyb3VwIHZpY2UgcHJlc2lkZW50LCBvdmVyc2VlaW5nIGFsbCBvZiBHTSdzIGF1dG9tb3RpdmUgZGl2aXNpb25zLCBhbmQgaW4gMTk2NSBoZSBiZWNhbWUgZXhlY3V0aXZlIHZpY2UgcHJlc2lkZW50IGluIGNoYXJnZSBvZiBnZW5lcmFsIHN0YWZmIGFjdGl2aXRpZXMuIEhlIHdhcyBuYW1lZCBwcmVzaWRlbnQgb2YgR00gaW4gMTk2Ny4KRHVrZSBuZXh0IHR1cm5zIHRvIGFzc2Vzc2luZyBvdXRjb21lcyBhZnRlciB0aGUgZmFjdCwgdGhyb3VnaCAib3V0Y29tZSBmaWVsZGluZy4iIFdhcyBhbiBvdXRjb21lIGRyaXZlbiBieSBsdWNrIG9yIHNraWxsPyBEdWtlIG9mZmVycyBndWlkYW5jZTogRm9jdXMgb24gb2JqZWN0aXZpdHkgYW5kIHNlZWtpbmcgb3V0IHRoZSB0cnV0aCwgYXZvaWQgZXh0cmVtZXMsIHByZXNlcnZlIGEgcG9zaXRpdmUgc2VsZiBuYXJyYXRpdmUsIGFuZCB1c2UgYSBiZXR0aW5nIGNvbnRleHQgdG8gc2hpZnQgdGhlIHBzeWNob2xvZ3kuIFNoZSBoaWdobGlnaHRzIGFuIGFuZWNkb3RlIGFib3V0IHBva2VyIHN1cGVyc3RhciBQaGlsIEl2ZXksIHdobyBvYnNlc3NpdmVseSBkZWNvbnN0cnVjdGVkIGhpcyBwbGF5IGFmdGVyIHdpbm5pbmcgYSB0b3VybmFtZW50IGluc3RlYWQgb2YgYmFza2luZyBpbiBnbG9yeS4uIApQcm9jdGVyIEdhbWJsZSBldmVudHVhbGx5IHJlcGxhY2VkIHRoZSBXaGlwcGxlIGFkcyB3aXRoIGNhcnRvb24gYmVhcnMsIGJ1dCBicm91Z2h0IFdpbHNvbiAoYXMgV2hpcHBsZSkgYmFjayBmb3IgYW4gZW5jb3JlIGluIDE5OTkuIFRoZSBzaW5nbGUgYWQgc2hvd2VkIFdpbHNvbiAiY29taW5nIG91dCBvZiByZXRpcmVtZW50IiBhZ2FpbnN0IHRoZSBhZHZpY2Ugb2YgaGlzIGdvbGZpbmcgYW5kIHBva2VyIGJ1ZGRpZXMgZm9yIG9uZSBtb3JlIGNoYW5jZSB0byBzZWxsIGEgbmV3LCBtb3JlIHBpbGxvd3kgQ2hhcm1pbi4KSSBmaWd1cmUgYXQgd29yc3QgaXQgY291bGRuIGh1cnQgbW9yZSB0aGFuIGEgYml0IG9mIHNwZW50IG1vbmV5LCBpbiB0aGUgZ3JhbmRlciBzY2hlbWUsIGFuZCBhdCBiZXN0IGl0IG1pZ2h0IGJlIGEgcmVhbCwgaG9uZXN0IHRvIGdvb2RuZXNzIHNpZ25pZmljYW50IG1pdGlnYXRpb24gb2Ygb3VyIGVtaXNzaW9ucy4gSXQgZG9lc24gaGF2ZSB0byBiZSB0aGUgYmVzdCBjYXNlIHNjZW5hcmlvIHRvIHN0aWxsIGJlIGJlbmVmaWNpYWwsIGFuZCB3b3J0aCB0aGUgZWZmb3J0IGFuZCBleHBlbnNlLi4gClNvIEkgcGxhbnQgbXkgZmVldCwgYW5kIHNvcnQgb2YgcmF0Y2hldCBteSB1cHBlciBib2R5IGRvd24gdG8gY2F1c2UgdGhlIGFyY2ggYW5kIHBpbiBteXNlbGYgdG8gdGhlIGJlbmNoIHVuZGVyIHRoZSBiYXIuIApJdCBjb3VsZCBiZSBydW4gbGlrZSBhIHNlcnZpY2UuIGEgc3VwZXIgc2l6ZWQgYW1hem9uIGRlbGl2ZXJ5IHNlcnZpY2Ugd2hlcmUgdGhlIHBhY2thZ2UgaXMgYWN0dWFsbHkgeW91ciBjYXIuCkJ1dCB0aGUgdHJvcGUgb2YgdGhlIG1vdmllIGlzIG5vdCBqdXN0IHJvbWFuY2UsIGJ1dCBwb3JuLiBBY3R1YWxseSwgdG8gYmUgZmFpciwgaXQgbm90IG1haW5zdHJlYW0sIGhhcmRjb3JlIHBvcm4sIGJ1dCB0aGUgbmV3ZXIgZ2VucmUga25vd24gYXMgInBvcm4gZm9yIHdvbWVuLiIgRXZlcnlvbmUgaXMgbWFkbHkgaW4gbG92ZSAoSmFjb2Igd2l0aCBCZWxsYSwgRWR3YXJkIHdpdGggQmVsbGEsIEJlbGxhIHdpdGggRWR3YXJkKS4gCkFkaXJvbmRhY2sgbW91bnRhaW5zIGdyb3dpbmcgdXAuIFR1cm5zIG91dCBpdCB3YXMgbW91bnRhaW4gbGlvbnMuIFdheSBzY2FyaWVyIHRoYW4gYSB3aXRjaC4KSnVzdCBrZWVwIGJldHRpbmcsIHlvdSdsbCBnZXQgYSByb3lhbCBmbHVzaCBldmVyeSB0aW1lLiAxOiBXaGVuIHRoZSBkZWFsZXIgaXMgaGFzIGdhdGhlcmVkIHRoZSBwaWxlIG9mIGNhcmRzIGluIGZyb250IG9mIGhpbSwgd2FpdCB1bnRpbCBoZSBwdWxscyB0aGUgc3RhY2sgdG93YXJkcyBoaW1zZWxmLCB0aGVuIHR5cGUgcG9rZXJ0ZW4uIElmIHlvdSBnZXQgYSBLIGFuZCBBIG9mIGNsdWJzIHlvdSdyZSBnb29kLiAyOiBXYWl0IHVudGlsIHlvdXIgdHVybiwgdGhlbiBiZWZvcmUgeW91IGhpdCBjYWxsIG9yIHJhaXNlLCB0eXBlIHBva2VydGVuIGFnYWluLCB0aGVuIGhpdCBjYWxsIG9yIHJhaXNlLiAKU2hpcHBpbmcgdG8gdGhlIGxvd2VyIDQ4IHN0YXRlcyBzdGFydHMgYXQgJDExMDsgdGhlIGRlc2tzIHNoaXAgdW5hc3NlbWJsZWQuKSBJJ2xsIGFkbWl0IGl0IHRvb2sgYSBmZXcgZGF5cyB0byBnZXQgdXNlZCB0by4gCjE4IHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvLiAKVGhlIGJhcnJpZXIgdG8gcHJvbW90aW5nIHBva2VyIHJlbWFpbnMgdGhlIGluY2l0ZW1lbnQgdG8gZ2FtYmxlLCB3aGljaCBpcyBpbGxlZ2FsLiBMZWFkaW5nIG9ubGluZSBwb2tlciB3ZWJzaXRlcyBhcmUgbm90IGFsbG93ZWQgdG8gYWR2ZXJ0aXNlLCBhbHRob3VnaCBjbGV2ZXIgYWRtaW5pc3RyYXRvcnMgYXJlIGNyZWF0aW5nIGZyZWUgdG8gdXNlIGFmZmlsaWF0ZWQgc2l0ZXMgdGhhdCBjYW4gYmUgcHJvbW90ZWQgaW4gbWFpbnN0cmVhbSBtZWRpYSB0byBsdXJlIHBsYXllcnMgdG8gdGhlaXIgbWVtYmVyc2hpcCBiYXNlZCBvcGVyYXRpb25zLiBQbGF5ZXJzIHN1Y2ggYXMgTGV2eSBhcmUgY29uc2lkZXJlZCBwcm9mZXNzaW9uYWwsIGJlY2F1c2UgdGhleSBhcmUgc3BvbnNvcmVkIGFuZCB0aGVpciBidXkgaW4gZmVlcyBhcmUgYWxyZWFkeSBjb3ZlcmVkLiBJbiBlc3NlbmNlIHRoZXkgc2ltcGx5IHR1cm4gdXAgYW5kIHBsYXkgICBsaWtlIGFueSBvdGhlciBwcm9mZXNzaW9uYWwgYXRobGV0ZSB3aG8gY29tcGV0ZXMgZm9yIG1vbmV5LgpMb25nZXIgY2FuIHdlIGZ1bmQgc2Nob29scyBvbiBwcm9wZXJ0eSB0YXhlcyAgYSB3YXkgb2YgZW5zdXJpbmcgcmljaCBuZWlnaGJvcmhvb2RzIHdpdGggaGlnaCBwcm9wZXJ0eSB2YWx1ZXMgaGF2ZSBmYXIgbW9yZSBtb25leSBmb3IgdGhlaXIgc2Nob29scyB0aGFuIHBvb3IgbmVpZ2hib3Job29kcyB3aXRoIGxvdyBwcm9wZXJ0eSB2YWx1ZXMuIEVkdWNhdGlvbiBtdXN0IGJlIGZ1bmRlZCBmYWlybHkgYWNyb3NzIGFuIGVudGlyZSBzdGF0ZS4gCkhlIGhhcyBub3Qgd29uIGFueXRoaW5nIG9mIG5vdGUgZXZlciBleGNlcHQgZm9yIG9uZSBvbmxpbmUgY3VwLCBmb3IgJDkwMC4gClRydW1wIHJhbiBvbiBkcmFpbmluZyB0aGUgc3dhbXAgYW5kIHNoYWtpbmcgdGhpbmdzIHVwIGluIHBvbGl0aWNzIGJ5IGRvaW5nIHRoaW5ncyB1bmNvbnZlbnRpb25hbGx5LiBEZW1vY3JhdHMgd29uIGluIDIwMTggYmVjYXVzZSBwZW9wbGUgZ290IHRpcmVkIG9mIHRoZSBHT1Agbm90IGRvaW5nIGFueXRoaW5nLiAKQnV0IEkgaGF2ZSBuZXZlciB1bmRlcnN0b29kIHRoaXMgdGhpbmtpbmcgYW5kIG5ldmVyIHdpbGwuLiAKSlVHUyBCIGhvd2V2ZXIgd2VyZSBtb3JlIHN1Y2Nlc3NmdWwsIG5hcnJvd2x5IGJlYXRpbmcgdGhlIFVCUmFjaW5nIHRlYW0gaW4gdGhlaXIgZmlyc3Qgcm91bmQgYW5kIHJlY29yZGluZyBhbm90aGVyIHdpbiBpbiB0aGUgc2Vjb25kLiBIb3dldmVyIHRoZXkgaGFkIHJ1biBvdXQgb2Ygc3RlYW0gYnkgdGhlIHNlbWkgZmluYWwgYW5kIHdlcmUgZGVmZWF0ZWQuIApJIHRoaW5rIHRoZXJlIHJlYWxseSB0d28gd2F5cyB0byBnZXQgaW50byBib29rYmluZGluZy4gCiJTaGVsbGhhcmJvdXIgQ291bmNpbCBpcyBhbHNvIGxvb2tpbmcgdG8gaW5jcmVhc2UgdGhlIG51bWJlciBvZiBwb2tlciBtYWNoaW5lcyBhdCBpdHMgdmVudWUsIFRoZSBMaW5rcyBTaGVsbCBDb3ZlLi4gClRoZSB3aWZlIGhhcyBiZWVuIGNhcHR1cmVkLCBhbmQgdGhlIGh1c2JhbmQgKEhhd2tlKSBpcyBhdCB0aGUgd2hpbSBvZiBhIGRlcmFuZ2VkIHBzeWNob3BhdGggd2l0aCBhcHBhcmVudGx5IGxpbWl0bGVzcyB0ZWNobm9sb2dpY2FsIHByb3dlc3MuIEhlIG11c3QgZG8gd2hhdGV2ZXIgaXQgdGFrZXMsIGFsb25nIHdpdGggaGlzIHVud2lsbGluZyBzaWRla2ljayAoR29tZXopLCB0byBzYXZlIGhpcyB3aWZlIGFuZCBzdG9wIHRoZSBraWxsZXIuIApJdCBhIHJpY2ggdG93biBpbiBUZXhhcyByZW5vd25lZCBmb3Igc3dpbmdpbmcsIHRob3VnaC4gVGhlc2UgcGVvcGxlIGp1c3QgaGFuZGVkIG92ZXIgdGhlaXIgY3JlZGl0IGNhcmRzLCBvciB0aGVpciBiYXNpY2FsbHkgbGltaXRsZXNzIGFjY291bnRzLCBhbmQgbmV2ZXIgYXNrZWQgdG8gc2VlIHRoZSBiaWxsLiBTaGUgd2FzIFF1aXRlIHBvcHVsYXIuLiAKSXMgcG9rZXIgZ2FtYmxpbmcgb3Igc2tpbGwgZ2FtZQpTb3VuZHMgbGlrZSBpdCB3YXMgYSBuZXQgZ2FpbiB0byBoZXIgZmluYW5jZXMuIApIZSBjaGVja3MsIHNoZSBiZXRzLCBoZSBzaG92ZXMuIFRoZXJlIGEgZmx1c2ggYW5kIHN0cmFpZ2h0cyBhdmFpbGFibGUuIApPdXIgYXJ0aWNsZXMgYXJlIGRlc2lnbmVkIHRvIGhlbHAgeW91IGFuc3dlciBhbGwgb2YgdGhlc2UgcXVlc3Rpb25zIGFuZCBtb3JlLi4gCkluc3RlYWQgb2YgbGlmdGluZyB0aGUga2V0dGxlYmVsbCBpbiBmcm9udCBvZiB0aGUgYm9keSB1c2luZyB0aGUgYXJtcywgdGhlIGFybXMgbG9vc2VseSBob2xkIGl0IGFuZCB0aGUgZXhwbG9zaXZlbmVzcyBvZiB0aGUgaGlwcyBzbmFwcGluZyBpbnRvIGV4dGVuc2lvbiBwcm9wZWwgaXQgZm9yd2FyZC4gClRsO2RyOiBpdCBub3QgaW1wb3NzaWJsZSwgYnV0IHlvdSB3aWxsIGhhdmUgdG8gYnJhY2UgZm9yIGNoYW5nZXMgdGhhdCBtYXkgcHJvZHVjZSBhbiB1bmV4cGVjdGVkIG91dGNvbWUuCk1hbmlwdWxhdGlvbiBpbiBJbXByb3ZpbmcgTW90aW9uIGFuZCBKb2ludCBIZWFsdGgKVGhleSBldmVuIHNhaWQgdGhhdCB0aGUgZmFsbGFjeSBvZiBvbmxpbmUgcG9rZXIgZ2FtYmxpbmcgY2FuIGJlIHNlZW4gaW4gYSB3YXkgdGhhdCBwb2tlciBzaXRlcyBhcmUgb2ZmZXJpbmcgcG9rZXIgZ2FtZXMgdGhhdCBvbmx5IGFsbG93IHBsYXllcnMgdG8gbG9zZSBtb25leSBhdCBzdWNoIGEgc2xvdyBwYWNlIHRoYXQgdGhleSB3b24ndCBiZSBhYmxlIHRvIG5vdGljZSBpdC4uIApPbiBteSBwY3QgdGhydSBJIHdhcyByZWFkeSBmb3IgbmV3IHNob2VzIGFmdGVyIGFib3V0IDYwMCBtaWxlcyBmb3IgdGhlIGZpcnN0IHBhaXIgKE5CIExlYWR2aWxsZXMpLCBNeSBzZWNvbmQgcGFpciBsYXN0ZWQgYWJvdXQgODUwIChzbGlnaHRseSBtb3JlIHN0dWJib3JuIGFuZCBjaGVhcCksIGFuZCBJIHJvZGUgb3V0IG15IGxhc3QgcGFpciBjbG9zZXIgdG8gMTEwMCBtaWxlcy4gSSB0aGluayBJIGdvdCB1c2VkIHRvIHRoZSBpZGVhIHRoYXQgbXkgZmVldCB3ZXJlIG5ldmVyIGdvaW5nIHRvIGJlIGNvbWZvcnRhYmxlIG5vIG1hdHRlciB3aGF0IGFuZCBjb21iaW5lZCB0aGF0IHdpdGggcGluY2hpbmcgcGVubmllcyBhdCB0aGUgZW5kIG9mIGEgdGhydS4gWW91IGNhbiBlYXNpbHkgcmlkZSB0aGVtIG91dCA3MDAgbWlsZXMsIGJ1dCB0aGVyZSBpcyBzb21ldGhpbmcgdG8gYmUgc2FpZCBmb3Igb3BlbmluZyB1cCB0aGF0IG5ldyBib3ggb2Ygc2hvZXMgYWZ0ZXIgYSBmZXcgd2Vla3Mgb2YgaGlraW5nIG9uIHdvcm4gb3V0IHNob2VzLi4gClRoZSBBaXIgRm9yY2UgcGxhbnMgdG8gcHJvdmlkZSAyNSBwZXJjZW50IG9mIHRoZSBlbmVyZ3kgYXQgaXRzIGJhc2VzIHdpdGggcmVuZXdhYmxlIGVuZXJneSBieSAyMDI1IGFuZCB1c2UgYmlvZnVlbHMgYmxlbmRzIGZvciBoYWxmIGl0cyBhdmlhdGlvbiBmdWVsIGJ5IDIwMTYuCkhlIG5ldmVyIGdvdCB0aGUgZmx1IHNob3QgYmVmb3JlIHRoYXQgYmVjYXVzZSBoZSBkaWRuIHRoaW5rIHRoZSBmbHUgd2FzIGEgYmlnIGRlYWwuIApJbiBMb0wgb3BlbmluZ3MgdXN1YWxseSB3YW50IHRvIGJlIGFzIEdUTyBhcyB5b3UgY2FuIGNvbmNlaXZlIChmYW5uaW5nKSwgdW5sZXNzIHlvdXIgb3Bwb25lbnQgaXMgY2xlYXJseSBtYWtpbmcgbWV0YSBnYW1lIGxldmVsIDEvMiBlcnJvcnMgKGRlbW9uc3RyYXRpbmcgd2VhayBvcGVuaW5ncyBvciBhZGp1c3RpbmcgdGhlIHNhbWUgd2F5IGV2ZXJ5IHRpbWUgdG8gY2VydGFpbiBvcGVuaW5ncykuIApJbWd1ciBzdWNrcy4gRXZlcnlvbmUgdGhlcmUgaXMgc28gY3JpdGljYWwgYnV0IG5vdCBpbiBhIGNvbnN0cnVjdGl2ZSB3YXkuIEFuZCB5b3UgcmlnaHQsIGl0IG5vdCBuZWNlc3NhcmlseSBhYm91dCB0aGUgcXVhbGl0eSBvZiB0aGUgd29yayBhcyBtdWNoIGFzIGl0IGFib3V0IHNwZW5kaW5nIHF1YWxpdHkgdGltZSB3aXRoIGEgbG92ZWQgb25lLiAKVGhlIFphZ3MgKDYgMCkgc3RhdGVkIHRoZWlyIGNhc2UgZm9yIE5vLiAxIHdoZW4gdGhlIG5leHQgQVAgcG9sbCBpcyByZWxlYXNlZCBvbiBNb25kYXkuIER1a2UgKDUgMSkgcmVhY2hlZCBOby4gMSBhZnRlciBkZXN0cm95aW5nIHNlY29uZCByYW5rZWQgS2VudHVja3kgYnkgMzQgcG9pbnRzIGluIHRoZSBzZWFzb24gb3BlbmVyLgpJIHRoaW5rIG9mIGFsbCB0aGUgbGF0ZSBuaWdodHMgYW5kIHRoZW4gb2ZmIHRvIHdvcmsgdGhlIG5leHQgZGF5LiAKQW5kIHRoZW4gdGhlcmUncyBOaWdodCBTaGlmdCBMb3Zlam95IFdoYXJmLCBhbiBpbmR1c3RyaWFsIGJ1aWxkaW5nIHdpdGggdGhlIEJ1bmtlciBIaWxsIGJyaWRnZSBwYWludGVkIGJlaGluZCBpdC4gVGhlIGJyZXdlcnksIHJlc3RhdXJhbnQsIGFuZCBjYWZlIHdpbGwgb3BlbiB0byB0aGUgcHVibGljIG9uIFdlZG5lc2RheSwgTWFyY2ggMjAsIGluIHRoZSBidXJnZW9uaW5nIFdlc3QgRW5kIG5laWdoYm9yaG9vZCBhcyBOaWdodCBTaGlmdCdzIG1vc3QgY3JlYXRpdmUgcHJvamVjdCB0byBkYXRlLiBUaGUgYnJld2VyeSBjYWxscyBMb3Zlam95IGl0cyBpbm5vdmF0aW9uIGZhY3RvcnksIGFuZCBmb3IgZ29vZCByZWFzb246IE9uZSBuZXcgYmVlciB3aWxsIGJlIHByb2R1Y2VkIGhlcmUgZWFjaCB3ZWVrLCB3aXRoIHRoZSBraXRjaGVuIGFuZCBicmV3ZXJ5IHN3YXBwaW5nIGluZ3JlZGllbnRzIGFuZCBpZGVhcyB0byBjcmVhdGUgYmVlcnMgYW5kIGRpc2hlcyB0aGF0IGNvbXBsZW1lbnQgZWFjaCBvdGhlci4gIldoZW4gd2Ugc3RhcnRlZCwgb25lIG9mIG91ciBwaHJhc2VzIHdhcyAnY3VsaW5hcnkgaW5zcGlyZWQgYmVlcnMsJyB3aGljaCBpcyBwYXJ0IG9mIG91ciBETkEuIE9uIHRoZSBvcGVuaW5nIGJlZXIgbGlzdCwgcGF0cm9ucyB3aWxsIGZpbmQgdGhlIEZpeGVkIFdpbmcsIGFuIGFsZSB3aXRoIHN3ZWV0IGNoZXJyaWVzLCBidXR0ZXJmbHkgcGVhIGZsb3dlciwgbGVtb24sIGFuZCBsZW1vbmdyYXNzOyBhbmQgdGhlIExpdmluZyBEZWFkLCB3aGljaCB1c2VzIG1vbGFzc2VzLCBwaW5lYXBwbGUsIHBpbmsgZ3VhdmEsIGxpbWUsIGFuZCBjaW5uYW1vbi4gVGhlIDMwIHRhcCBsaW5lcyBhdCBMb3Zlam95IHdpbGwgaW5jbHVkZSBhIHNlbGVjdGlvbiBvZiBOaWdodCBTaGlmdCBzdGFwbGVzICAgTml0ZSBMaXRlLCBXaGlybHBvb2wsIFNhbnRpbGxpLCBhbmQgVGhlIDg3ICBhbmQgTG92ZWpveSBleGNsdXNpdmVzLCBpbmNsdWRpbmcgdGhlIExvdmVqb3kgaG91c2UgSVBBLCBhIHJlY2lwZSB0aGF0IGVtZXJnZWQgYWZ0ZXIgdGhlIGJyZXdlcnkgcHJlc2VudGVkIGZvdXIgdmVyc2lvbnMgdG8gdGhlIHB1YmxpYyBsYXN0IHllYXIgYW5kIGdhdmUgdGhlbSB0aGUgb3Bwb3J0dW5pdHkgdG8gdm90ZSBmb3IgYSBmYXZvcml0ZS4gKExvdmVqb3kgNCBlbWVyZ2VkIHZpY3RvcmlvdXMuKQpUaGUgZ3JlYXRlc3QgQ2hpbmVzZSBsZWFkZXIgbmV4dCB0byBNYW8gWmVkb25nIGFuZCBldmVyeWJvZHkgc2FpZCwgbGlmZSBnb2VzIG9uLiAKU2hpdGZhY2VkIGFuZCBkcml2ZSBvbnRvIG9uY29taW5nIHRyYWZmaWM/SWYgeW91IGFyZSwgQmV0bywgeW91IGdldCBhIHBhc3MuRG8gYW4gaW50ZXJ2aWV3IHNheSBzb21ldGhpbmcgc2xpZ2h0bHkgb2ZmP0lmIHlvdSBhcmUgSnVsaWFuIENhc3RybywgeW91IGdldCBIYXRjaCBBY3QgcnVsZXMgb2YgaG93IG1pc3Rha2VzIGFyZSBqdWRnZWQgYXJlIG5vdCBtYWRlIGJ5IG1lLiBXaXRoIHRoYXQgaW4gbWluZCwgbGV0IHVzIHRhbGsgYWJvdXQgVmVyb25pY2EgRnJlc2NhcyBtaXN0YWtlcyBvciAibWlzdGFrZXMiLiBObyBpbmRpY3RtZW50IG9mIGhlciBhcyBwZXJzb24uIApKZSBsJ2FpIGludGVydmlldyBwb3VyIG1vbiBibG9nICBwcm9wb3MgZHUgZ2x1dGVuLCBqZSBsJ2FpIHJlbmNvbnRyIGF1IHNhbG9uIE9tbml2b3JlLiAKWW91IHNheSAiQnV5aW5nIGFuZCBzZWxsaW5nIGF0ICJ0aGUgcmlnaHQgdGltZSIgcmVxdWlyZXMgYSBsZXZlbCBvZiBpbnZlc3RtZW50IHRoYXQgSSBvZnRlbiBkbyBub3QgaGF2ZS4iIEhhdmUgeW91IGNvbnNpZGVyZWQgdGhhdCBtYXliZSB0aGF0IHBvcnRpb24gb2YgdGhlIGdhbWUganVzdCBpc24gZm9yIHlvdT8gTm90IGV2ZXJ5b25lIG5lZWRzIHRvIGJlIHVwIHRvIGRhdGUgb24gbWFnaWMgZmluYW5jZSwgYW5kIGxpa2UgYW55dGhpbmcsIGlmIHlvdSB0cnlpbmcgdG8gYmUgZnJ1Z2FsIGFuZCBjYXRjaCBkZWFscyBpdCBkb2VzIHJlcXVpcmUgYSBkZWdyZWUgb2YgYXR0ZW50aW9uLCB3aGljaCBpcyB0aGUgY2FzZSBldmVyeXdoZXJlLiBJZiB5b3UgdHJ1bHkgdGhhdCBidXN5IGFuZCBjYW5ub3QgbWFrZSB0aW1lIGZvciBtYWdpYyBvdXRzaWRlIG9mIHNlbGVjdCB3aW5kb3dzLCBhIGZvcm1hdCB3aGVyZSBjYXJkcyBoYXZlIGFuIGV4cGlyYXRpb24gZGF0ZSBpcyBjZXJ0YWlubHkgbm90IHJpZ2h0IGZvciB5b3UsIHVubGVzcyB0aGUgY2FyZHMgd2VyZSBkaXJ0IGNoZWFwIHdoaWNoIHdvdWxkIG9ubHkgaHVydCBpdCBpbiBvdGhlciB3YXlzLi4gClRoZW4gaGUgY291bGQganVzdCBiZSBwaXNzZWQgYWJvdXQgc29tZXRoaW5nIGVsc2UgYW5kIHN0aWNrcyB0byB0aGUgcG9pbnRzIGhlIGtub3dzIGJlc3QgdG8gZHJ1bSB1cCBzdXBwb3J0IGluIGhpcyBldmVyIGR3aW5kbGluZyBiYXNlLiBIZSBoYXMgdG8gc2NvcmUgcG9saXRpY2FsIHBvaW50cyBhbnl3aGVyZSBoZSBjYW4gYWZ0ZXIgdGhlIFdhbGwgYW5kIG5hdGlvbmFsIGVtZXJnZW5jeSBkZWJhY2xlClVuZm9ydHVuYXRlbHksIHRoZSB3ZWxjb21pbmcgd29ya2luZyBlbnZpcm9ubWVudCBhbmQgZXF1YWwgZ2VuZGVyIHJhdGlvIGF0IFRpcFRhcCBMYWIgYXJlIHRoZSBleGNlcHRpb24sIHJhdGhlciB0aGFuIHRoZSBydWxlLiBbWW91IGNhbiB2aWV3IHRoZSByZWNvcmRpbmcgaGVyZS5dLiAKSXQgd2FzIGhlciBtZW50b3IsIGFuIGV4ZWN1dGl2ZSBhdCBDSUJDLCB3aG8gaGVscGVkIGhlciB0byBzZWUgaG93IGhlciBza2lsbHMgd2VyZSB0cmFuc2ZlcmFibGUgdG8gaGVyIGN1cnJlbnQgcm9sZSBhdCB0aGUgYmFuay4gCkRvIG5vdCBkbyBpdCwgZG8gbm90IG1ha2UgbXkgbWlzdGFrZXMuLiAKNSBkYXlzIGFnbyAuIFdhdGNoIG9ubGluZSBvciBkb3dubG9hZCBtb3ZpZTogTW92aWVzIFRvcnJlbnQgRG93bmxvYWQgQmV0dGVyIEx1Y2sgVG9tb3Jyb3cgTXR2IE1vdmllIFNwZWNpYWwgMmsgMjAwMyBVc2EuIApEaWUgR2VidXJ0IHZvbiBOaWtvbGFpIHZlcmxpZXJ0IHNpY2ggaW4gZGVuIGR1bmtsZW4gVGllZmVuIHdlaWVuIFdlaXRlbiBTaWJpcmllbnMuIApBbmQgaXQgYWxzbyB0aGUgbmV3IHllYXIuIApJdCBpcyB0aW1lIHRvIGNvcnJlY3QgdGhlIGRpc3Bhcml0eSB0aGF0IGV4aXN0cyBiZXR3ZWVuIE1vcmkgYW5kIFBrZWggICBiZXR3ZWVuIGluZGlnZW5vdXMgTmV3IFplYWxhbmRlcnMgYW5kIHRob3NlIGRlc2NlbmRlZCBmcm9tIEV1cm9wZWFuIHNldHRsZXJzLiAKSSBhYnNvbHV0ZWx5IGxvdmUgaXQuIFRoaXMgaXMgbXkgZmlyc3QgU3ViYXJ1IGFuZCBJJ20gZGVmaW5pdGVseSBhIGN1c3RvbWVyIGZvciBsaWZlLiBJdCdzIGEgc21vb3RoIHJpZGUgYW5kIGl0IGRvZXNuJ3QgZmVlbCBhcyBiaWcgYXMgaXQgaXMgaWYgdGhhdCBtYWtlcyBzZW5zZS4gClRvIHNvbHZlIHRoaXMgcHJvYmxlbSwgY291bmNpbCBoYXMgZGVjaWRlZCB0aGF0IGZyb20gbm93IG9uLCB0aGUgZHVjdGluZyBhbmQgZXh0ZXJpb3IgdmVudHMgd2lsbCBiZSBlYWNoIG93bmVyJ3MgcmVzcG9uc2liaWxpdHkgdG8gbWFpbnRhaW4gYW5kIHJlcGFpci4KQW5vdGhlciBpbmRpdmlkdWFsLCB3aG8gd2FzIG5vdCBpZGVudGlmaWVkIGJ5IHBvbGljZSwgcmV0dXJuZWQgZmlyZSwga2lsbGluZyBWYXNxdWV6LiBBY2NvcmRpbmcgdG8gTWNDb2xnYW4sIHRoZSBzaG9vdGVyIGhhZCBhIGNvbmNlYWxlZCB3ZWFwb25zIHBlcm1pdC4gVGFsa2luZ3RvbiwgSmVzc2UgTS4gQm9iYWluIGFuZCBKYXNvbiBELiBNY0dvd2FuLiBUaGUgbWVuIGFyZSBlYWNoIGNoYXJnZWQgd2l0aCBhcm1lZCByb2JiZXJ5LCBjb25zcGlyaW5nIHRvIGNvbW1pdCB0aGF0IGNyaW1lLCBhbmQgdHdvIGZpcmVhcm0gb2ZmZW5zZXMuIEFybWVkIHJvYmJlcnkgY2FycmllcyBhIG1heGltdW0gc2VudGVuY2Ugb2YgbGlmZSBpbiBwcmlzb24uIFJhbmRhbGwgSnVycmVucyB2aXNpdGVkIHRoZSBob3NwaXRhbCBpbiBvcmRlciB0byBhcnJhaWduIEJvYmFpbi4KMjAxMyBNUkkgc3R1ZHkgcmV2ZWFscyBob3cgY2hpcm9wcmFjdGljIGhlbHBzIHNwaW5lIGpvaW50IG1vYmlsaXR5ClBMQVlJTkcgT05MSU5FIFBPS0VSIEZPUiBBIExJVklORwpUb3VyaXN0IHZpc2FzIGFyZSBmcmVlIGlmIHlvdSBsZWF2ZSBhZnRlciAzMCBkYXlzLCBvciAkMzBpc2goPykgaWYgeW91IHdhbnQgYSB2aXNhIHRoYXQgY2FuIGJlIHJlbmV3ZWQgZm9yIGFub3RoZXIgMzAgZGF5cy4gCldoYXQgT25UaGluZ3MgdG8gZG9Gb29kIGFuZCBEcmlua1RoZWF0cmUgYW5kIEFydHNGYW1pbHkgYW5kIEtpZHNNdXNpYyBhbmQgR2lnc1RWIEd1aWRlVGhlYnJpZ2h0IGxpZ2h0cyBhbmQgY29sb3VyZnVsIGRpc3BsYXkgb2YgdGhlIGdhbWluZyBtYWNoaW5lIGluIGZyb250IG9mIGhlciBjb250cmFzdGVkIHNoYXJwbHkgd2l0aCB0aGUgZGltbHkgbGl0IHJvb20gc2hlIHNvIG9mdGVuIGZvdW5kIGhlcnNlbGYgaW4uIApUaGUgcmVzdHJpY3Rpb25zIHdpbGwgaHVydCBjaGFyaXRpZXMgdG9vLCBzYWlkIERvbm5hIEdhcnRzaWRlLCBzZWNyZXRhcnkgb2YgdGhlIE1pY2hpZ2FuIENoYXJpdGFibGUgR2FtaW5nIEFzc29jaWF0aW9uLiAiV2UncmUgZnJ1c3RyYXRlZCwgcmVhbGx5IGZydXN0cmF0ZWQsIGJlY2F1c2UgdGhlIHJlZ3VsYXRpb25zIGFyZSBnb2luZyB0byBwdXQgb3JnYW5pemF0aW9ucyBsaWtlIHRoZSB2ZXRlcmFucyBhbmQgdGhlIHNwb3J0cyBib29zdGVycyBhbmQgdGhlIExpb25zIENsdWJzLCB0aGUgS2l3YW5pcywgYWxsIG9mIHRob3NlIHRoZXkncmUgcmVhbGx5IGdvaW5nIHRvIGhpbmRlciB3aGF0IHRoZXkgY2FuIGRvIHdpdGggY2hhcml0aWVzLCIgc2hlIHNhaWQuIApJZiB5b3VyIHBheWluZyBhdHRlbnRpb24gdGhlIGZpcmUgd2lsbCBsZXQgeW91IGtub3cgd2hlbiB0byBjcmF3bC4gQ29vbCBwaWMsIGFuZCBrdWRvcyBmb3IgdHJhaW5pbmcgb24gc2VhcmNoIGFuZCByZXNjdWUuLiAKVG8gbWFrZSBpdCByZWFsLCBsZXQgc2F5LCB5b3Ugd2VhciBhIGhpZ2ggZ3RhZGUgaG9seSBjaGVzdCBwbGF0ZS4gSXQgaGFzIGEgY3V0IHJlcyBvZiA1NSBhbmQgYW4gZWZmaWNpZW5jeSBvZiA5NS4KV2VsbCwgZW50ZXIgZ29sZC4gWW91IHRyYWRlIHRoZSBjb21pY3MgZm9yIGdvbGQgKG9yIHNpbHZlciBtb3JlIGxpa2VseSkgYW5kLCBhcyB0aGUgcmFuY2hlciBpcyBzbWFydGVyIHRoYW4geW91LCB5b3UgdHJhZGUgMTAgb3ogb2Ygc2lsdmVyIGZvciBhIHJ1bnQgcGlnLiAoYnkgbWVhdCBhbmltYWwgSSBhbSBkaWZmZXJlbnRpYXRpbmcgYmV0d2VlbiBhbmltYWxzIGdyb3duIGZvciBtZWF0IGZyb20gdGhvc2Ugd2hvIHByb2R1Y2UgbWlsayBvciBlZ2dzLikuIApIb3cgZG8geW91IHBsYXkgUG9saXNoIHBva2VyCkFzIHdlIGJlZ2luIG91ciBkZXBsb3ltZW50IG9mIDMwLDAwMCBhZGRpdGlvbmFsIHRyb29wcyB0byBBZmdoYW5pc3RhbiwgdGhpcyBDaHJpc3RtYXMgRXZlIHdpbGwgYWxzbyBtYXJrIHRoZSAzLDAwMHRoIGRheSBvZiB0aGUgd2FyIGluIEFmZ2hhbmlzdGFuIGFuZCB0aGUgMzB0aCBhbm5pdmVyc2FyeSBvZiB0aGUgaW5pdGlhbCBSdXNzaWFuIGludmFzaW9uIG9mIEFmZ2hhbmlzdGFuIGluIDE5NzkuIFRodXMgZmFyLCB0aGlzIHdhciBoYXMgYWxyZWFkeSBjb3N0IHRoZSBBbWVyaWNhbiB0YXhwYXllciBhIG1pbmltdW0gb2YgJDMwMCwwMDAsMDAwLDAwMCBhY2NvcmRpbmcgdG8gdGhlIENvbmdyZXNzaW9uYWwgUmVzZWFyY2ggU2VydmljZSAoYW5kIHRoYXQganVzdCB0aGUgZnVuZGluZyB0aGF0ICJvbiBidWRnZXQiKS4KWWVzLCB5ZXMsIHdlIGtub3csIHRoZXkncmUgY2FsbGVkIGJhcmJlbHMsIGJ1dCBmb3Igb3VyIHB1cnBvc2VzLCBpdCdzIGEgRnUgTWFuY2h1IG11c3RhY2hlLiBGb3Igb25lIHRoaW5nLCBpdCdzIG5vdCBhIHR1c2sgICBpdCdzIGEgdG9vdGguIE9uZSBsb25nLCB3ZWlyZCwgc3BpcmFsIHRvb3RoLiAKSXQganVzdCBjYW1lIGluIGFuZCBvdXQgYXQgcmFuZG9tLiAKQmVhbiBvZiB0aGUgZ2FtaW5nIGNvbnRyb2wgYm9hcmQgc2FpZCB0b2RheSB0aGF0IHRoZSBvcmlnaW5hbCBydWxlcyB3ZXJlIG1hZGUgd2l0aCBpbnB1dCBmcm9tIGNoYXJpdGllcywgYW5kIHNoZSBleHBlY3RzIHRvIHNlZSBnYW1lcyBpbmNyZWFzZSBhcyB0aW1lIGdvZXMgb24uIApUeSBhbmQgT1Aga25ldyBlYWNob3RoZXIsIGFuZCB0aGUgc2hvb3Rpbmcgd2FzbiByYW5kb20uCkkgdGVuZCB0byBjaGVjayBvdXQgbW9zdCBib3kgaWRvbCBzaG93cyBzaW5jZSB0aGV5IGFyZSByZWFsbHkgZWFzeSB0byB3YXRjaCBpZGx5IHRvIHJlbGF4IGFuZCBJIHdlbnQgaW50byB0aGlzIHRoaW5raW5nIGl0IHdvdWxkIGJlIGp1c3QgYW5vdGhlciBvbmUgdG8gYWRkIHRvIHRoZSBwaWxlIGJ1dCBJIGFjdHVhbGx5IHN0YXJ0ZWQgZ2V0dGluZyBpbnRlcmVzdGVkIGluIHRoZSBjaGFyYWN0ZXJzIGFuZCBnb3QgYXR0YWNoZWQgYWZ0ZXIgYSBmZXcgZXBpc29kZXMgKEkgdGhpbmsgSSBnb3QgdG9vIG1hbnkgc2NyZWVuc2hvdHMgd2l0aCBsaW5lcyB0aGF0IGZlbHQgcmVsYXRhYmxlLCBvZGRseSBlbm91Z2gsIGxvbCkuIFRoZSBjaGFyYWN0ZXJzIHN0b3JpZXMgc2VlbWVkIHNpbXBsZSBidXQgZ290IHlvdSBjdXJpb3VzLCB0aGUgYmFudGVyIGZlbHQgc2lsbHkgYnV0IG1hZGUgbWUgZ3JpbiBsaWtlIGFuIGlkaW90IGFuZCB0aGVpciBsaXR0bGUgImFkdmVudHVyZXMiIHdlcmVuIG91dCBvZiB0aGUgb3JkaW5hcnkgZm9yIGFuIGlkb2wgc2hvdyBidXQgdGhleSBrZXB0IG1lIHdhbnRpbmcgdG8gd2F0Y2ggbW9yZSAodGhhdCBwYXVzZSBmb3IgdGhlIGxhc3QgZmV3IGVwaXNvZGVzIGtpbGxlZCBtZSkuIEkgZmVlbCB0aGF0IGlmIHlvdSB3YXRjaCBhIGZldyBlcGlzb2RlcyBhbmQgZmluZCBhdCBsZWFzdCBvbmUgY2hhcmFjdGVyIHlvdSB0aGluayBpcyBpbnRlcmVzdGluZywgdGhlIHJlc3Qgb2YgdGhlIHNob3cgc29tZWhvdyBnZXRzIG1vcmUgaW50ZXJlc3RpbmcsIHRvby4gCk1hc3NhbCAoUnVuaW9uKSA6IGNvcmlhbmRyZSwgY3VtaW4sIGZlbnVncmVjLCBtb3V0YXJkZSwgZ2lyb2ZsZSwgY3VyY3VtYSwga2Fsb3VwaWwsIG11c2NhZGUuCkJ1dCBmaW5kaW5nIHlvdXIgb3duIHJlYWwgaG90IHNwcmluZyBpcyBtb3JlIGZ1biwgYW5kIGVhc2llciBvbiB0aGUgd2FsbGV0LiBQbHVzLCB5b3UnbGwgZW5qb3kgdGhlIHNvb3RoaW5nIHNpZ2h0cyBhbmQgc291bmRzIG9mIG5hdHVyZSBhcyB5b3Ugc29hay4gClBsYXkgb24gdGhlIFJpdmVyCkkgaGF2ZSBubyBpZGVhIHdoYXQgVmFsdmUgd2VyZSB0aGlua2luZyB3aXRoIEFydGlmYWN0IGJlY2F1c2UgYWxsIHRoZWlyIG90aGVyIGdhbWVzIGhhdmUgYmVlbiBpbmNyZWRpYmx5IGdlbmVyb3VzIGFuZCBhY2Nlc3NpYmxlIGZpbmFuY2lhbGx5Li4gClVuaXZlcnNpdHkgSGVhbHRoIGFuZCBTYWZldHkgUG9saWN5CkFzIHN1Y2gsIHlvdSBjYW5ub3QgYXBwbHkgZm9yIGFuIGVtcGxveW1lbnQgdmlzYSBpbiB0aGUgVVMgYW5kIHN1cmVseSwgVW5jbGUgU2FtIHdvbiBjYXJlIGlmIHlvdSBkb24gcGF5IGEgZGltZS4gClRoZXJlIGFyZSByaWdodHMgZW51bWVyYXRlZCBpbiB0aGUgQ29uc3RpdHV0aW9uIGFuZCB0aGUgQW1lbmRtZW50cyB0byB0aGUgQ29uc3RpdHV0aW9uLCBzb21lIG9mIHdoaWNoIGFyZSBsYWJlbGVkIHRoZSBCaWxsIG9mIFJpZ2h0cyIgYW5kIHRoZSBDb25zdGl0dXRpb24gYW5kIHRoZSBBbWVuZG1lbnRzIGNhbiBiZSBmdXJ0aGVyIGFtZW5kZWQgb3IgcmVwZWFsZWQgZW50aXJlbHkuIElmIHRoZSBDb25zdGl0dXRpb24gb3IgQW1lbmRtZW50cyBhcmUgYW1lbmRlZCBvciByZXBlYWxlZCB0aGUgcmlnaHRzIHBlb3BsZSBoYXZlIGNoYW5nZS4KVGhlIHNlZWRzIG11c3QgZmlyc3QgYmUgc293biwgYW5kIHRoZW4gdGhlIHJvb3RzIG11c3QgdGFrZSBob2xkLCBhbmQgdGhlbiB0aGUgZmxvd2VyIG11c3QgYnVkIGFuZCB0aGVuIGZpbmFsbHkgYmxvc3NvbS4gCldoYXQgaGUgZGlkIHdhcnJhbnRlZCBhbiBhcG9sb2d5LCB3aGljaCBoZSBnYXZlIGFuZCB3YXMgYWNjZXB0ZWQuCiJXZSBhcmUgbG9va2luZyBhdCB0aGlzIGxlZ2lzbGF0aW9uIGF0IHRoZSBtb21lbnQsIGl0IGlzIGNvbXBsZXgsIiBNciBHdXR3ZWluIHNhaWQuClRoZSBQZXJtaWFuIGlzIHJpY2ggaW4gb2lsLCBhbmQgaXRzIHNoYWxlcyBhcmUgcmVsYXRpdmVseSBlYXN5IHRvIHRhcCB3aXRoIHRvZGF5IHJpZ3MuLiAKVHJpYWxzIG9mIHNlbGYgbWFzc2FnZSBvciB1c2luZyBtZWNoYW5pY2FsIGRldmljZXMgd2VyZSBleGNsdWRlZC4gVHJpYWxzIG9mIE1UIGFzIHBhcnQgb2YgYSBtdWx0aSBjb21wb25lbnQgdGhlcmFweSB3ZXJlIGV4Y2x1ZGVkIHVubGVzcyB0aGUgc3R1ZHkgZGVzaWduIGVuYWJsZWQgZXZhbHVhdGlvbiBvZiBNVCBhbG9uZS4gClBhZ28gZW4gRXNwZWNpZSAoUGF5bWVudCBpbiBLaW5kKSBpcyBhIHNpeCBkZWNhZGUgb2xkIHByb2dyYW0gaW4gd2hpY2ggTWV4aWNhbiBhcnRpc3RzIGdpdmUgYSBwaWVjZSBvZiB0aGVpciBvd24gYXJ0d29yayB0byB0aGUgZ292ZXJubWVudCBpbiBvcmRlciB0byB6ZXJvIG91dCB0aGUgYW1vdW50IG9mIGZlZGVyYWwgdGF4ZXMgdGhleSBvd2UuIEluIGEgd2F5LCB0aGUgcHJvZ3JhbSBjdXRzIG91dCB0aGUgbWlkZGxlIG1hbjogQXJ0aXN0cyBkb24ndCBoYXZlIHRvIGhvY2sgdGhlaXIgd29ya3Mgb24gdGhlIHByaXZhdGUgbWFya2V0IGFuZCB0aGVuIHVzZSB0aGF0IGNhc2ggdG8gc2F0aXNmeSB0YXggb2JsaWdhdGlvbnMuIFRoZSBwcm9ncmFtIGFsc28gcHJvdmlkZXMgdGhlIGdvdmVybm1lbnQgd2l0aCBhbiBpbXByZXNzaXZlIGNvbGxlY3Rpb24gb2YgZmluZSBhcnQgZm9yIG11c2V1bXMgYW5kIHB1YmxpYyBzcGFjZXMsIHdpdGggY29udHJpYnV0aW9ucyBjb21pbmcgZnJvbSBuYW1lcyBhcyBub3RhYmxlIGFzIERpZWdvIFJpdmVyYSwgTGVvbm9yYSBDYXJyaW5ndG9uIGFuZCBSdWZpbm8gVGFtYXlvLgpCbHVtc3RlaW4gZmluYWwgaGFuZCBvZiBhbiBhY2Ugb2YgaGVhcnRzIGFuZCBhIHR3byBvZiBkaWFtb25kcyBlbmRlZCB1cCBiZWluZyBzdHJvbmdlciB0aGFuIHRoYXQgb2YgT3R0LCB3aG8gd2VudCBhbGwgaW4gd2l0aCBhbiBhY2Ugb2YgZGlhbW9uZHMgYW5kIGFuIGVpZ2h0IG9mIGRpYW1vbmRzLiBUaGUgY29tbXVuaXR5IGNhcmRzIHdlcmUgYSBqYWNrIG9mIHNwYWRlcywgYSBzaXggb2Ygc3BhZGVzLCBhIGZpdmUgb2YgaGVhcnRzLCBhIHNldmVuIG9mIGhlYXJ0cyBhbmQgYSB0d28gb2YgaGVhcnRzLiAKSGUgdGhlbiBzYWlkIGFzIHBlbmFuY2UgSSB3b3VsZCBoYXZlIHRvIHNheSBhIGRlY2FkZSBvZiB0aGUgcm9zYXJ5IGVhY2ggbmlnaHQgZm9yIDUgbmlnaHRzIChsb2wpLCBhbmQgdGhhdCBoZSBleHBlY3RlZCB0byBzZWUgbWUgaW4gdGhlIGNvbmZlc3Npb24gYm94IGF0IGxlYXN0IG9uY2UgYSBtb250aCBmcm9tIG5vdyBvbi4gQXMgeW91IGNhbiBwcm9iYWJseSBndWVzcywgSSBoYXZlbiBiZWVuIGJhY2sgbmVhciBhIGNodXJjaCBzaW5jZSBhbmQgbm93IGhhdmUgbm8gZmFpdGggaW4gYW55IHJlbGlnaW9uIGF0IGFsbC4uIApEbyBJIGhhdmUgdG8gaGF2ZSBzZXggd2l0aCBhIGJpZywgZ2F5IGxlYXRoZXIgZGFkZHkgdG8gYmUgcXVlZXIgKG5vdCB0aGF0IEkgd291bGRuIGJ1dCBpdCB0b3VnaCB0byBtZWV0IGJpZywgZ2F5IGxlYXRoZXIgZGFkZGllcyB0byBoYXZlIHNleCB3aXRoIHdoZW4geW91IGEgbWlkZGxlIGFnZWQsIHNpbmdsZSBtb3RoZXIgd2hvIHdvcmtzIHRvbyBtdWNoKS4gRG8gSSBoYXZlIHRvIGhhdmUgcXVlZXIgc2V4IHRvIGJlbGlldmUgdGhhdCBzZXh1YWwgaGllcmFyY2hpZXMgc2hvdWxkIG5vdCBiZSB0aGUgYmFzaXMgb2YgY2l0aXplbnNoaXA/IFdoYXQgaWYgc3RyYWlnaHQgcGVvcGxlIHN0YXJ0IG91dGluZyBxdWVlcnM/LiAKVGhpbmsgYWJvdXQgaXQgdGhpcyB3YXkuIApMb29rIGludG8gQnVpbGRpbmcgRXhjZWxsZW50IFNjaG9vbHMgYSA0ICBZZWFyIEZlbGxvd3NoaXAgcHJvZ3JhbSB0aGF0IHByb3ZpZGVzIHRoZSB0cmFpbmluZyBhbmQgc3VwcG9ydCBuZWVkZWQgZm9yIGZvbGtzIHdobyB3YW50IHRvIG9wZW4gaGlnaCBwZXJmb3JtaW5nIHNjaG9vbHMuIEl0IGlzIGV4dHJlbWVseSBjb21wZXRpdGl2ZSBhbmQgcmlnb3JvdXMsIGFzIHRoZSBwcm9jZXNzIG9mIG9wZW5pbmcgYSBzY2hvb2wgc2hvdWxkIGJlLiAKRXQgbCByZWdhcmRhIGF1IGRlc3N1cyBkZSBsdWksIGV0IGNvbXByaXQgcXUgcyBkIGNobmUgcXVpIHBlbnNhaXQgKDExKS4gCkhlIGhhZCAkMSw2MDAgaW4gYm9udXNlcywgYmFjayBwYXkgYW5kIHRyYXZlbCBleHBlbnNlcyBpbiBoaXMgcG9ja2V0LiAKQ2hvY2tpbmcgc29tZSBkb2dnbyBpcyB3cm9uZyBidXQgYXMgZmFyIGFzIGF0cm9jaXRpZXMgY2FycmllZCBvdXQgYnkgdGhlIEZvdW5kYXRpb24gZ29lcyBpdCBsYXVnaGFibGUuIApJbmFwcHJvcHJpYXRlIHNleHVhbCBjb25kdWN0LiAKU3RpbGwsIGluIHRoZSBmbHVycnkgb2YgYWN0aXZpdHkgb24gdGhhdCBmaXJzdCBkYXksIGFuZCBpbiB0aGUgYWJzZW5jZSBvZiBhIGNsZWFyIHBsYW4sIGZpbGluZyB3aXRoIHRoZSBVTiB3YXMgYSBuZWNlc3NhcnkgZmlyc3Qgc3RlcC4gRnJvbSB0aGVyZSwgU25vd2RlbidzIGxhd3llcnMga25ldyB0aGV5IGhhZCB0byBlbWJlZCBoaW0gc29tZXdoZXJlIHNhZmUgdW50aWwgdGhleSBoYW1tZXJlZCBvdXQgYW4gZXhpdCBzdHJhdGVneSwgd2hpY2ggaXMgd2h5IHRoZXkgYXJyaXZlZCBhdCBTdXB1bidzIGRvb3IgaW4gYSBncmlteSBidWlsZGluZyB3aXRoIGNyYWNrZWQgd2FsbHMgYW5kIGNoaXBwZWQgZ3JlZW4gdGlsZXMgb24gdGhlIHN0YWlycy4KRG9sbGFyIGFtb3VudHMgaGVyZSBhcmUgZGVjZXB0aXZlOyB3aGF0IEx1bmQgYW5kIE1hdGxvdWJpIGFyZSByZWFsbHkgcGxheWluZyBmb3IgaXMgJDUwMSwwMDAsIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gJDgzNSwwMDAgYW5kIHRoZSAkMzM0LDAwMCBzZWNvbmQgcHJpemUuIEJ1dCB0byB3aW4sIHlvdSBuZWVkIGFsbCB0aGUgY2hpcHMuIEx1bmQgbG9va3MgZ29sZGVuIGFmdGVyIHRoZSB0aHJlZSAgY2FyZCAiZmxvcCIgZ2l2ZXMgaGltIGFub3RoZXIgYWNlIG5pbmUsIGZvciBhIG5lYXJseSB1bmJlYXRhYmxlIHR3byBwYWlycy4gCkVyZ2lidCBzZWluZW4gTWl0YXJiZWl0ZXJuIGF1Y2ggMTAlIFNsYWNrdGltZSwgaW4gZGVyIGRpZSBNaXRhcmJlaXRlciBhbiBiZWxpZWJpZ2VuIERpbmdlbiBhcmJlaXRlbiBrbm5lbkVpbnppZ2UgQmVkaW5ndW5nOiBFcyBtdXNzIFRlYW1hcmJlaXQgc2Vpbi4gRGVyQWJsYXVmIGVpbmVzIFNsYWNrZGF5cyBpc3Qgd2llIGZvbGd0OgpUaGVyZSBpcyBub2JvZHkgbW9yZSBkaXNhcHBvaW50ZWQgdGhhbiBtZS4uIApJIGhhZCB0byBwYXkgYmFjayB0aGUgc3RhdGUgdGhlIHN0dXBpZCAzIHdlZWtzIChpdCB3YXMgYXJvdW5kICQ0NjggdG90YWwpIGFuZCB0YWtlIHRoZSBqb2IgZm9yIGEgd2hvcHBpbmcgOSBob3VycyBhIHdlZWssIHRoaXMgaXMgd2hpbGUgSSBzZXZlcmFsIG1vbnRocyBwcmVnbmFudCBhbmQgZ29pbmcgdG8gc2Nob29sLiAKTG9uZyBiZWZvcmUgR2VvcmdlIER1YmJ5YSBjYXJlZCBhYm91dCB0aGUgcGxpZ2h0IG9mIEFmZ2hhbiB3b21lbiwgSSB3YXMgcGFydCBvZiBhIG5ldHdvcmsgb2YgYWNhZGVtaWNzIGFuZCBhY3RpdmlzdHMgdHJ5aW5nIHRvIGJyaW5nIHRoZSBwbGlnaHQgb2Ygd29tZW4gdW5kZXIgdGhlIFRhbGliYW4gdG8gdGhlIGF0dGVudGlvbiBvZiBXZXN0ZXJuIHBvbGljeSBtYWtlcnMuIApTaGUgdG9vayBubyBwcmlzb25lcnMgaW4gdGhlIHBvb2wsICJidXQgb3V0IG9mIHRoZSB3YXRlciwgc2hlIHdhcyBhIGxvdmVseSB5b3VuZyBnaXJsIi4gCkkgd2FzbiBjb21wYXJpbmcgQXVzdHJhbGlhIHRvIElyZWxhbmQuIE5vciB3YXMgSSBzYXlpbmcgdGhlIElyaXNoIGFyZSBiYWNrd2FyZC4gU2ltcGx5IHNvbWUgbGF3cyBhcmUuIEkgZG9uIHVuZGVyc3RhbmQgd2h5IHlvdSBnb3Qgc28gb2ZmZW5kZWQgd2hlbiBldmVuIE9QIHNhaWQgZXhhY3RseSB0aGUgc2FtZSB0aGluZyBhYm91dCB0aGUgYmFja3dhcmQgbmVzcy4gWW91ciByZXBseSBpcyBmaWxsZWQgd2l0aCB1bm5lY2Vzc2FyeSBoYXRlLgpBcyBhIE1pcmFnZSBtYWluLCBJIHdvdWxkIGFkdmlzZSB1c2luZyBoaXMgdWx0IGFzIGEgZmxhbmtpbmcgdG9vbCBieSBoaWRpbmcgdW5kZXIgY292ZXIsIGFjdGl2YXRpbmcgdGhlIHVsdCwgdGhlbiB1c2luZyB0aGUgaW52aXNpYmlsaXR5IHRvIHJ1biB0byBhbm90aGVyIHNwb3Qgb2YgY292ZXIgYmVoaW5kIHRoZSBlbmVteSB0ZWFtIGFuZCB3YWl0aW5nIGZvciB5b3VyIHdlYXBvbnMgdG8gYmUgcmVhZHkgYWdhaW4gYmVmb3JlIGFjdHVhbGx5IGdldHRpbmcgaW50byB0aGUgZmlnaHQuIEFzIGZvciB1c2luZyBpdCBhcyBhbiBlc2NhcGUgdG9vbCwganVzdCBwcmVzcyB0aGF0IGJ1dHRvbiBhbmQgcnVuLiBBcyBsb25nIGFzIHlvdSBnaXZlIHRoZW0gYXQgbGVhc3QgYSBoYWxmIHNlY29uZCBvZiBjb25mdXNpb24sIHlvdSB1c3VhbGx5IHNvbWV3aGF0IHNhZmUuLiAKVW5saWtlIGdlbmVyYWwgb2JsaWdhdGlvbiBib25kcywgd2hpY2ggYXJlIHBhaWQgb3V0IG9mIGdlbmVyYWwgdGF4IHJldmVudWVzLCBzcGVjaWFsIHJldmVudWUgYm9uZHMgYXJlIGJhY2tlZCBieSBzcGVjaWZpYyBwb3RzIG9mIG1vbmV5Li4gCkN1c3RvbSBPbiBTaXRlIE1hc3NhZ2VzIEFuIGFzdHV0ZSBtYXNzYWdlIHByb2Zlc3Npb25hbCBjcmVhdGVzIGhlciBvd24gbWFzc2FnZSB2ZW51ZXMgYnkgcGF5aW5nIGNsb3NlIGF0dGVudGlvbiB0byByZWdpb25hbCBidXNpbmVzcyBhbmQgZWR1Y2F0aW9uYWwgZXZlbnRzLiBUbyBhbGxldmlhdGUgdGhlIHRlZGl1bSBvZiBhIGJ1c2luZXNzIGNvbmZlcmVuY2UsIGZvciBleGFtcGxlLCBzaGUgYXNrcyBjb25mZXJlbmNlIG9yZ2FuaXplcnMgZm9yIHBlcm1pc3Npb24gdG8gb2ZmZXIgc2VhdGVkIG1hc3NhZ2VzIGR1cmluZyBsb25nZXIgYnJlYWtzIGFuZCBhdCBtZWFsdGltZXMuIEZvciBhbiBpbnRlbnNpdmUgY2xhc3MgdGhhdCByZXF1aXJlcyBtYW55IGhvdXJzIG9mIHN0YW5kaW5nIG9yIG90aGVyIHBoeXNpY2FsIGFjdGl2aXR5LCBzaGUgb2ZmZXJzIHNlYXRlZCBjaGFpciBtYXNzYWdlcyBkdXJpbmcgYWZ0ZXJub29uIG9yIGV2ZW5pbmcgYnJlYWtzLi4gCidTaG91bGQgSSByZWFkID8nLCAnV2hhdCdzIHRoYXQgYm9vaz8nIHBvc3RzLCBzYWxlcyBsaW5rcywgcGlyYWN5LCBwbGFnaWFyaXNtLCBsb3cgcXVhbGl0eSBib29rIGxpc3RzLCB1bm1hcmtlZCBzcG9pbGVycyAoaW5zdHJ1Y3Rpb25zIGZvciBzcG9pbGVyIHRhZ3MgYXJlIGluIHRoZSBzaWRlYmFyKSwgc2Vuc2F0aW9uYWxpc3QgaGVhZGxpbmVzLCBub3ZlbHR5IGFjY291bnRzLCBsb3cgZWZmb3J0IGNvbnRlbnQuIFBsZWFzZSBzZWUgZXh0ZW5kZWQgcnVsZXMgZm9yIGFwcHJvcHJpYXRlIGFsdGVybmF0aXZlIHN1YnJlZGRpdHMsIGxpa2UgL3Ivc3VnZ2VzdG1lYWJvb2ssIC9yL3doYXRzdGhhdGJvb2ssIGV0Yy4gClllcywgY2xvdWQgaG9zdGluZyBpcyBleHBlbnNpdmUuIFNvIGlzIGJ1eWluZyBTQU5zLCBWTSBoYXJkd2FyZSBhbmQgbGljZW5zZXMsIGFuZCBhbGwgb2YgdGhlIGNyYXAgeW91IG5lZWQgdG8gbWFrZSBpdCB3b3JrIGFuZCBiZSByZWR1bmRhbnQuIApEaWUgT2x5bXBpc2NoZW4gU3BpZWxlIGJlZ2lubmVuIFZlcmFuc3RhbHR1bmcgd2lyZCBtaXQgZGVyIGZlaWVybGljaGVuIEVyZmZudW5nIGFtIDguIEF1Z3VzdCwgZXMgd2lyZCB2aWVsIFBhcnR5IHVuZCBhbXNhbnQgd2hyZW5kIGRpZXNlciBaZWl0LiBPbHltcGlhIFN0YWRpb24gaXN0IHZvbiBncm9lciBXdW5kZXJoZWl0LCBkZXIgaW50ZWxsaWdlbnRlbiBLb256ZXB0aW9uICAgZXMgaXN0IGRlciBBdWZiYXUgdm9uIHZpZWxlbiBTdGF1bmVuLCBlcnNjaGVpbmVuIHdpZSBrc3RsaWNoIE5lc3QgZGVyIEhobGVuc2Nod2FsYmUhIEdlYmF1dCB2b24gY2hpbmVzaXNjaGVuIEVpbmZhbGxzcmVpY2h0dW0sIEFyYmVpdHNrcmFmdCB1bmQgYmxlaWhhbHRpZ2UgRmFyYmUsIG1hY2h0IGVzIGVyc3RhdW5saWNoIFN0YW5kb3J0IHp1IEJlZ2lubiBPbHltcGlhIFZlcmFuc3RhbHR1bmdlbiFJbSBBbnNjaGx1c3Mgd2VyZGVuIDE2IFRhZ2Ugdm9uIGVpbmVyIGVyc3RhdW5saWNoZW4gc3BvcnRsaWNoZW4gV2V0dGthbXBmLCB6ZWlnZW4gZGllIGJlc3RlbiBkZXIgbWVuc2NobGljaGVuIEtyYWZ0LCBCZXdlZ2xpY2hrZWl0IHVuZCBtZW5zY2hsaWNoZW4gV2FjaHN0dW1zaG9ybW9uIQooQSBTdC4gCldlIGhhdmUgdHdvIHBhaWQgb2ZmICgxMCB5ZWFyIHBsdXMpIHZlaGljbGVzIGFuZCBubyBvdGhlciBkZWJ0IHRoYW4gb3VyIG1vcnRnYWdlLiAKTG9yaSwgU2h1bG1hbidzIHdpbGxvd3kgd2lmZSwgd29ya3MgcGFydCB0aW1lIGFzIGEgcHJlc2Nob29sIHRlYWNoZXIgYW5kIGJhYnkgc2l0dGVyIGluIE1hbGRlbi4gU2hlIGdldHMgd29ycmllZCB3cmlua2xlcyBpbiB0aGUgY29ybmVycyBvZiBoZXIgc21pbGUgd2hlbiBzaGUgdGFsa3MgYWJvdXQgaGVyIGh1c2JhbmQncyBkZWNpc2lvbi4gIlRoZSB3aG9sZSBBcm15IGlkZWEgd2FzIG5ldyB0byB1cywiIHNoZSByZWNhbGxzLiAKVHVybnMgb3V0IHRoYXQgcmVhbGx5IGRpZG4gZnVja2luZyBoZWxwLCBzbyBmb3IgdGhlIHBhc3QgY291cGxlIG9mIGRheXMgYW5kIHByb2JhYmx5IHRoZSBuZXh0IHdlZWsgb3IgdHdvIChvciB0aHJlZSksIEkgZGVjaWRlZCB0byBjaGlsbCBvdXQgYW5kIGRvIHJlaGFiIGFuZCBib2R5d2VpZ2h0IHdvcmsgdG8gZ2V0IG15IHNoaXQgc29ydGVkIG91dCAoYWdhaW4pLiAKSSBoYXZlIGEgcGF0cm9uIHdobyBvbmNlIHNhdCBkb3duIGZvciBhIGdhbWUsIG9ubHkgdG8gZmluZCBwb29wIG9uIHRoZSBjaGFpciBmcm9tIGEgcHJldmlvdXMgcGxheWVyLiBPbmUgdGltZSBhIHNlY3VyaXR5IGd1YXJkIHNwb3R0ZWQgYSBjdXN0b21lciB3YWxraW5nIG91dCBvZiB0aGUgY2FzaW5vLCBzaGl0IHBsb3BwaW5nIG91dCBvZiBoZXIgcGFudCBsZWcgd2l0aCBldmVyeSBzdGVwLi4gCkhpcyBleWVzIG9wZW4gYnV0IGhpcyBib2R5IHJlbWFpbnMgcGVyZmVjdGx5IHN0aWxsLCBsaWZlbGVzcy4uIApUaGlzIHdhcyB0aGUgZmlyc3QgcmVhbCBjb25jZXJ0IEknZCBnaXZlbiBpbiBteSBsaWZlLiBBbmQgbXkgYXVkaWVuY2Ugd2FzIHRoZSBraW5kIHRoYXQgb25lIGNhbiBvbmx5IGhvcGUgZm9yLiBXaGVuIEknZCBmaW5pc2hlZCBJIGxvb2tlZCBhdCBteSBmYXRoZXIgYW5kIHNhdyBoZSB3YXMgY3J5aW5nLiAKUmVhZCBtb3JlOldvbGxvbmdvbmcgRGVsaXZlcm9vIHJpZGVycyBwYXkgdGhlIHByaWNlIGZvciBkZWxpdmVyeSAiSSB3YXMganVzdCBsb29raW5nIHRvIGhhdmUgYSBnb29kIGdhbWUgYW5kIGtlcHQgbXkgaGVhZCBkb3duIGFuZCBvbmUgYnkgb25lIHBsYXllcnMganVzdCBkcm9wcGVkIG9mZiBhbmQgdGhlIG5leHQgbWludXRlIHlvdSBmaW5kIHlvdXJzZWxmIHdpdGggNTAgcGVvcGxlIGxlZnQgYW5kIHRoZW4gMzAsIDIwLCAxMCBhbmQgc3VkZGVubHkgaXQncyB0aGUgZmluYWwgdGFibGUuIiBCdXQgdGhlIGRyZWFtIHJ1biB0byB2aWN0b3J5IGFsbW9zdCBjYW1lIGNydXNoaW5nIGRvd24gd2hlbkRlc3NhaXggUG9ydGVyIGdvdCByZWFsbHkgc2ljayBhIGNvdXBsZSBvZiBkYXlzIGJlZm9yZSBEYXkgMiBhY3Rpb24uIApFdmVyeWJvZHkga25vd3MgU2NvdHQgUGlsZ3JpbSB3YXMgYXMgZnVsbCBvZiB2aWRlbyBnYW1lIHJlZmVyZW5jZXMgYXMgaXQgd2FzIHF1aXJreSB3b21lbiB3aXRoIGluZXhwbGljYWJsZSBnaXJsIGJvbmVycyBmb3IgQ2FuYWRpYW5zLiBXaGF0IHlvdSBtYXkgbm90IGhhdmUgbm90aWNlZCwgaG93ZXZlciwgd2VyZSB0aGUgcmVjdXJyaW5nIG51bWJlciB0aGVtZXMgcnVubmluZyB0aHJvdWdob3V0OiBSZW1lbWJlciBob3cgU2NvdHQgZmlnaHRzIHNldmVuICJldmlsIGV4ZXMsIiBhbmQgcHJvZ3Jlc3NlcyB0aHJvdWdoIHRoZWlyIHNldmVuIHJlc3BlY3RpdmUgbGV2ZWxzPyBXZWxsLCBlYWNoIG9uZSBvZiB0aG9zZSBleGVzIGlzIGhpbXNlbGYgYSBudW1iZXIsIGFuZCBldmVyeXRoaW5nIGFib3V0IGhpbSByZWZsZWN0cyB0aGF0IGZhY3QuIFNjb3R0IGlzIHRoZSBleGNlcHRpb24sIHNvIGhlJ3MgemVybzogSGUgLCBoZSBkcmlua3MgQ29rZSBaZXJvIGFuZCBoZSB3ZWFycyBhIHNoaXJ0IHdpdGggInplcm8iIG9uIGl0LgpJIHN3ZWFyIHRvIHRoZSBhbG1pZ2h0eSBkZW1vbnMgb2YgYWRkaWN0aW9uIHRoYXQgY2lnYXJldHRlcyBhcmUgaGFyZGVyIHRvIHF1aXQgdGhhbiBvcGlhdGVzLiAKSSBhbSBub3QgYWJsZSB0byByZW1lbWJlciB0aGUgc2ltcGxlIHdheSBJIGJvdWdodCB0aGlzIG9uZSBpbiBwYXJ0aWN1bGFyIGJ1dCBjYXB0aXZhdGVzIEkgaGFzIGRvbmUuIFBlcmhhcHMgZnJvbSBhIGJyb2NodXJlIG9yIHRoZSBkYXl0aW1lIHNwZWFrIHdpdGggc2hvdywgb24gdGhlIGNvbnRyYXJ5IG5ldmVydGhlbGVzcyBzYXkgdGhhbmtzIHRvIHlvdSBnb2QgaW4gc3VwcG9ydCBvZiBzbWFsbCBjaGFybXMuIEZpbmFsbHksIGEgZGVmaW5pdGUgZGlldCBwcm9kdWN0IG9yIHNlcnZpY2VzIHRoYXQgaGF2ZSBoZWxwZWQgbXlzZWxmIGxvc2UgdGhlIHJpZ2h0IGFtb3VudCB3ZWlnaHQgdG8gYmUgbWFrZSB1cyBmZWVsIGFuIGFjdHVhbCBsb3QgZ29vZCBkZWFsIG1vcmUgdmlnb3JvdXMgYW5kIGFzIGEgY29uc2VxdWVuY2UgeW91bmdlci4gQWN0dWFsbHkgYW1hemluZyBvbmx5IGhvdyBtYW55IGxpZ2h0ZXIgSSd2ZSBmZWVsIGFyb3VuZCBteSBsZWdzLiBUaGlzIHByb2R1Y3RzIG9yIHNlcnZpY2VzIGlzIHRoZSAyMXN0IEVyYSByZSBmb3JtdWxhdGlvbiBpbnZvbHZpbmcgYSBkaWV0IHByb2R1Y3QgcmVnYXJkaW5nIGhhcyBiZWNvbWUgYXJvdW5kIGJ5IHF1aXRlIHNvbWUgdGltZS4KVGhlcmUgYXJlIHRydWx5IHdpbGQgb25lcyB3aG8gYXJlIGFibGUgdG8gY29uZnJvbnQgeW91ciBjYXQuIApIZXIgZmlhbmNlIGlzIGEgMTklIGdyYWR1YXRlIG9mIEVhZ2xlIEdyb3ZlIEhpZ2ggU2Nob29sIGFuZCAyMDAyIGdyYWR1YXRlIG9mIE5vcnRod2VzdCBJb3dhIENvbW11bml0eSAoIE9JIGxlZ2UsIFNoZWxkb24sIHdpdGggYSBtYWpvciBpbiBFbGVjdHJpY2FsIFRlY2hub2xvZ3kuIApCdW9ubyBoYWQgdG8gcm9sbCB0aGUgZGljZSBhZ2FpbiwgZXZlbiBpZiBMb2tvbWJvIGlzbiBhdmFpbGFibGUgZm9yIHR3byB5ZWFycyBhcyB3ZWxsLiAKVGhlcmUgaXMgbm8gcXVlc3Rpb24gdGhhdCBUZXhhcyBIb2xkJ2VtIGlzIG9uZSBvZiB0aGUgbW9zdCBwb3B1bGFyIGZvcm1zIG9mIFBva2VyLCBpbiBmYWN0IGl0IGlzIGFjdHVhbGx5IG9uZSBvZiB0aGUgbW9zdCBwb3B1bGFyIGdhbWVzIHBsYXllZCBvbiB0aGUgaW50ZXJuZXQuIEl0IGlzIG9uZSBvZiB0aGUgZWFzaWVyIHZlcnNpb25zIG9mIHBva2VyIGFuZCBpdCBkb2VzIG5vdCB0YWtlIGxvbmcgdG8gbGVhcm4gaG93IHRvIHBsYXkuIEkgaGF2ZSBwcm92aWRlZCBhIGxpc3QgYmVsb3cgb2YgaW1wb3J0YW50IGZhY3RzLCBydWxlcyBhbmQgVGV4YXMgSG9sZCdlbSB0ZXJtcyB0aGF0IGV2ZXJ5b25lIG11c3Qga25vdyBiZWZvcmUgaGVhZGluZyB0byB5b3VyIG5leHQgVGV4YXMgSG9sZCdlbSBnYW1lLi4gCllvdXIgc2Vjb25kIHBvaW50IHRydWx5IHNwZWFrcyB0byB0aGUgaW1wb3J0YW5jZSBvZiBtYXJyaWFnZSBub3QganVzdCBhcyBhIHVuaW9uIG9mIGxvdmUsIGJ1dCBhcyBhIHNlY3VyaXR5LiAKUmV0YWlsLiAKUGFydCBvZiBza2lsbCBpcyBjb250cm9sbGluZyB5b3VyIGJvZHkgaW4gYSB3YXkgdGhhdCB5b3UgZG9uIGJyZWFrIHJ1bGVzLiAKVGhlbiBhZnRlciBoZSB3YXNoZWQgdGhlIGJsb29kIG9mZiBteSBmYWNlLCBoZSB0cmllZCB0byBraXNzIG1lLiAKQW5kIHRoZSBoaXMgd2lsbCBiZSBuZWVkZWQuIi4gClRoZSBzb290aGluZyBlZmZlY3RzIG9mIGEgbWFzc2FnZSBwcm92aWRlIHJlbGllZiBmcm9tIG5lcnZvdXMgaXJyaXRhYmlsaXR5LiBTdHJlc3MgcmVsYXRlZCBjb25kaXRpb25zIHN1Y2ggYXMgaGVhZGFjaGVzIGFuZCBpbnNvbW5pYSByZXNwb25kIHBvc2l0aXZlbHkgdG8gdGhlIHdvcmtzIG9mIGEgbWFzc2FnZSB0aGVyYXBpc3QgYXMgY2FsbSBhbmQgcGVhY2UgcmV0dXJuIHRvIG91ciB0cm91YmxlZCBtaW5kLiAKSSBtYWRlIGEgZnJpZW5kIGluIGp1bmlvciBoaWdoLiBUaGF0IHllYXIgbXkgYXJlYSBoYWQgYSBvbmNlIGluIGEgY2VudHVyeSBzcHJpbmcgZmxvb2QgdGhhdCBwcmV0dHkgbXVjaCBldmVyeW9uZSBoZWxwZWQgb3V0IGluIHNvbWUgd2F5IHdpdGguIEluIG91ciBjbGFzc2VzIGNhc2UgYnkgaGVscGluZyBvdXQgYXQgdGhlIGZvb2Qgc2hlbHRlci4gTXkgbW9tIHdlbnQgdG8gYSBsdW5jaCB3aXRoIGEgbGFyZ2UgZ3JvdXAgb2YgY291c2lucyBhbmQgc2F0IGJlc2lkZSBvbmUgc2hlIGJhcmVseSBrbmV3LiBCb3RoIG9mIHRoZW0gc3RhcnRlZCB0YWxraW5nIGFib3V0IHRoZWlyIGtpZHMgYW5kIGhvdyB0aGV5IGhhZCBiZWVuIGhlbHBpbmcgb3V0IGR1cmluZyB0aGUgZmxvb2QuIFRoZXkgY2x1ZWQgaW4gd2UgbXVzdCBiZSBpbiB0aGUgc2FtZSBjbGFzcy4gVGhlbiBuYXJyb3dlZCBpdCBkb3duIHRvIHdobyB3ZSBhY3R1YWxseSB3ZXJlLiBUdXJucyBvdXQgbWUgYW5kIG15IGZyaWVuZCB3ZXJlIDJuZCBjb3VzaW5zLiBJZiB0aGlzIHdhcyBhIHNtYWxsIHRvd24gaXQgd291bGQgbm90IGJpZyBhIHN1cnByaXNlLCBidXQgd2UgbGl2ZSBpbiBhIGRlY2VudCBzaXplZCBjaXR5LgpBcyBnYW1pbmcgYW5kIGdhbWJsaW5nIGNvbnZlcmdlLCBpdCB3b24gYmUgbG9uZyBiZWZvcmUgcGVvcGxlIGFyZSBwbGFjaW5nIGJldHMgb24gdGhlIHNvY2lhbCBtZWRpYSBzaXRlIG9yIHRocm91Z2ggYXBwcyBvbiBpUGFkcy4gClNtYWxsZXIgcGxheWVycyBoYXZlIGJlZW4gdGFraW5nIHNoYXJlIGZyb20gdGhlIHBhY2thZ2VkIGdvb2RzIHBsYXllcnMgZm9yIGFib3V0IGEgZGVjYWRlLCBidXQgdGhpcyB5ZWFyLCB0aGUgYmlnIENQR3MnIHJlY2VudCBzdHJhdGVneSBvZiBwdW1waW5nIG91dCBzbWFsbCBicmFuZHMgYW5kIGluaXRpYXRpdmVzLCBjb21iaW5lZCB3aXRoIHRoZWlyIGluaGVyZW50IGFkdmFudGFnZXMgdGhlIGFiaWxpdHkgdG8gZWFzaWx5IG1hbnVmYWN0dXJlIHByb2R1Y3RzIGFuZCByYWlzZSBjYXBpdGFsLCBwbHVzIHRoZWlyIGV4aXN0aW5nIHNhbGVzIGZvcmNlcywgcmVsYXRpb25zaGlwcyBhbmQgc3VwcGx5IGNoYWlucyBtZWFucyB0aGV5J2xsIHRha2UgYmFjayB0aGUgY29udHJvbHMuIApJIHdhcyBzdHJ1Y2sgYnkgbGlnaHRuaW5nIHdoaWxlIHRhbGtpbmcgb24gYSBsYW5kbGluZS4gVGhpcyB3YXMgaW4gdGhlIGVhcmx5IDkwcy4gTGlnaHRuaW5nIHN0cnVjayB0aGUgdGVsZXBob25lIGxpbmUgYW5kIHRyYXZlbGVkIHRocm91Z2ggdGhlIGhhbmRzZXQgdG8gbXkgZWFyLgpBIG9uIHRoZSBibHVlIHBhdGNoLiA4IE1hciAyMDEyIC4gCkkgZXZlbiBnYXZlIHRoZSBsaW5rIHRvIHRoZSB0b3VybmFtZW50IGRpcmVjdG9yIHNvIHRoZXkgY291bGQgc2F2ZSBzb21lIG1vbmV5IGFuZCBwdXQgdGhlIGRpZmZlcmVuY2UgdG93YXJkcyBvdGhlciBwYXJ0cyBvZiB0aGUgZXZlbnQuIEluIHRoZSBlbmQsIGlmIHlvdSB3YW50IGEgcG9rZXIgc2V0IHRoYXQgb2ZmZXJzIGV2ZXJ5dGhpbmcgeW91IG5lZWQgdG8gZ2V0IGEgZ29vZCBnYW1lIGdvaW5nLCBJIHJlY29tbWVuZCB0aGUgMjAwIFRyaSBDb2xvciAxNGcgQWNlIEtpbmcgU3VpdGVkIFBva2VyIENoaXBzIHdpdGggQ2xlYXIgVG9wIENhc2UuCk9rYXkgc3VyZSwgdGhhdCBhIGxvdCBvZiBwZW9wbGUsbSBidXQgaWYgcGVvcGxlIHdhbnRlZCB0byBkb25hdGUsIHRoZXkgd291bGQsIHJpZ2h0PyBTaW1wbHkgbWFraW5nIHBlb3BsZSByZWdpc3RlcmVkIGF1dG9tYXRpY2FsbHkgd29uIGFjdHVhbGx5IGNoYW5nZSBtdWNoLCByaWdodD8gV3JvbmcuIAooVGhhdCBzb21lIGxpYmVydGFyaWFuIHNvY2lhbGlzdCB0aGlua2luZy4pQXQgdGhlIGVuZCBvZiB5b3VyIHBvc3QgdGhlcmUsIEkgbm90IHRhbGtpbmcgYWJvdXQgbGlrZSBwaHlzaWNhbCBzZWN1cml0eSwgSSB0YWxraW5nIGFib3V0IGpvYiBzZWN1cml0eSwgZmluYW5jaWFsIHNlY3VyaXR5LCB0aGUgc2VjdXJpdHkgb2Yga25vd2luZyB5b3Ugd2lsbCBiZSBwcm92aWRlZCB3aXRoIGhlYWx0aCBjYXJlLiBJdCBhIGJpZyBwYXJ0IG9mIHdoeSBhbnhpZXR5IGlzIG9uIHRoZSByaXNlIGluIGFtZXJpY2EsIHRoZXJlIGlzIG5vdCBldmVuIGEgYmFzaWMgZXhwZWN0YXRpb24gdGhhdCB5b3UgY291bGQga2VlcCB5b3VyIGpvYiwgdGhhdCB5b3VyIHJlbnQgd29uIGNoYW5nZSByYW5kb21seSwgdGhhdCB5b3Ugd29uIGJlIGVudGlyZWx5IHJ1aW5lZCBieSBhbiB1bmV4cGVjdGVkIGJpbGwuUmlnaHRzIGRvbiBndWFyYW50ZWUgcG9zaXRpdmUgbGliZXJ0eSwgYW5kIHNwZWNpZmljYWxseSBBbWVyaWNhbiByaWdodHMgZG9uIGVuc3VyZSBtYXRlcmlhbCBzZWN1cml0eSAodGhlIHRoaW5nIHlvdSBuZWVkIHRvIGNyZWF0ZSBwb3NpdGl2ZSBsaWJlcnR5KSBmb3IgdGhlIGF2ZXJhZ2UgcGVyc29uLlRoZXJlIGFuIG9sZCBzYXlpbmcgdGhhdCAiV2hhdCBnb29kIGlzIHRoZSByaWdodCB0byBmcmVlIHNwZWVjaCBpZiB5b3UgZGVhZC4iIEFuZCB0aGF0IHRoZSBkaWZmZXJlbmNlLiAKSWYgeW91IGRpZG4gYW5kIHNvbWV0aGluZyBub3J0aCBvZiA4MCBwZXJjZW50IG9mIHlvdSBkaWRuIHRoZW4gc2l0IGRvd24gYW5kIHNodXQgdXAuIAoiSSBwbGF5ZWQgYSBsb3Qgb2YgZ2FtZXMgaGVyZSwiIHNhaWQgRW5uaXMsIHdobyBwbGF5ZWQgZm91ciB5ZWFycyBvZiBqdW5pb3IgaG9ja2V5IGluIE1lZGljaW5lIEhhdC4gIkhhZCBzb21lIHJpdmFscmllcyB3aXRoIHRoZSAoQ2FsZ2FyeSkgSGl0bWVuIG92ZXIgdGhlIHllYXJzLiAKSHVmZmluZ3RvbiBQb3N0CkJlaXRyYWcgdm9uIEhlaW56IE1pa28gYmVyIHNlaW5lbiBlcnN0ZW4gQXVmZW50aGFsdCBhdWYgTGEgUGFsbWEuClNvbWV0aW1lcyBhIHRvdXJuYW1lbnQgaXMgcGxheWVkLgpJdCBtZWFucyB0aGF0IHdlIG5vdCBvbmx5IGhhdmUgdG8gZGV2ZWxvcCBuZXcgc2tpbGxzLCBidXQgd2UgYWxzbyBoYXZlIHRvIHVubGVhcm4gb2xkIG9uZXMuVGhpcyB0YWtlcyB1cyBiYWNrIHRvIHNjaG9vbCB3aGVuIHdlIHdlcmUgdG9sZCB0byAncHV0IHRoZSBmb2xsb3dpbmcgcGFzc2FnZSBpbnRvIHlvdXIgb3duIHdvcmRzIGluIG9yZGVyIHRvIHNob3cgdGhhdCB5b3UgaGF2ZSB1bmRlcnN0b29kIHdoYXQgeW91IGhhdmUgcmVhZCcuIEl0IGlzIGEgdmVyYmFsIHNraWxsIHRoYXQgY29tbXVuaWNhdGVzIHRvIHRoZSBvdGhlciB0aGF0IHdlIGhhdmUgbm90IG9ubHkgaGVhcmQgYnV0IHVuZGVyc3Rvb2QuIApBbGV4IEJ1Y2hhbiwgTGFuZHNraXAgRHJhZnRzbWFuIHRvIE1yLiBCYW5rcywgYSBHZW50bGVtYW4gd2VsbCBza2lsbCdkIGluIGhpcyBwcm9mZXNzaW9uIGFuZCBvbmUgdGhhdCB3aWxsIGJlIGdyZWF0bHkgbWlzc2VkIGluIHRoZSBDb3Vyc2Ugb2YgdGhpcyBWb3lhZ2UuIApBIGtuaXR0aW5nIHBhdHRlcm4gYm9vayBieSBzaXN0ZXJzIE1lZ2FuIE5vZGVja2VyIGFuZCBLYXRpZSBXaWxsaWFtcyAuIEFsc28sIGl0J3MgZnJlZSEgLiBUbyByZWNlaXZlIGRpZ2l0YWwgZG93bmxvYWRzIGZvciBQaXAgUGluIGtuaXR0aW5nIHBhdHRlcm4gUERGcyByYW5naW5nIGZyb20gYSBzaW5nbGUgLiAKTGltaXRlZCBSZXNvdXJjZXMgKFJTUyk6IExpbWl0ZWQgUmVzb3VyY2VzIGlzIGEgd2Vla2x5IHBvZGNhc3QgZGVkaWNhdGVkIHRvIGltcHJvdmluZyB5b3VyIHNraWxsIGF0IE1hZ2ljOiBUaGUgR2F0aGVyaW5nLCB3aXRoIGFuIGVtcGhhc2lzIG9uIExpbWl0ZWQgcGxheS4gVGhlIHNob3cgd2FzIHN0YXJ0ZWQgaW4gMjAwOSB3aXRoIGhvc3RzIE1hcnNoYWxsIFN1dGNsaWZmZSBhbmQgUnlhbiBTcGFpbi4gCk9uIHBldXQgZW4gYWpvdXRlciBncmFkdWVsbGVtZW50LiBPdSwgbCBkIGZvbmRzLCBvbiBhY3RpdmUgMjAgcHlyYW1pZGVzIGRhbnMgbGUgbW9uZGUsIGQgY2lucSBhbnMuIEwgZW50cmVwcmVuZXVyIHNlIGRvbm5lIGQgbGVzIDE4IHByb2NoYWlucyBtb2lzIHBvdXIgcHJvdXZlciBsYSB2YWxpZGl0IGRlIHNvbiBjb25jZXB0IGV0IG1vbnRyZXIgc2EgcmVudGFiaWxpdCBKZSBzdWlzIGVuIHJldGFyZCBkZSBzaXggbW9pcyBzdXIgbW9uIHBsYW4gcG91ciBnIGRlcyByZXZlbnVzLCByIE1haXMgYyBub3JtYWwuIApUaGUgZnJlZSBDb21wYW5pb24gQXBwIG9uIGlPUyBhbmQgQW5kcm9pZCBwaXRzIHRoZSBjb25zb2xlIHBsYXllciBhZ2FpbnN0IHRoZSBvbmUgaG9sZGluZyB0aGUgdGFibGV0LiAKVmVyeSBjb29sLiIgT25zdGFnZSwgRGFuaWVscyB0YWxrcyBhYm91dCBiZWluZyBhIGRpdm9yY2VkIGRhZCwgaGF2aW5nIGEgZGF1Z2h0ZXIgZ29pbmcgdGhyb3VnaCBwdWJlcnR5LCBhbmQgaGF2aW5nIGEgc29uIGluIGNvbGxlZ2UuIEhpcyBvbmUgaG91ciBzcGVjaWFsIGlzIGR1ZSB0byBiZSByZWxlYXNlZCBpbiBBcHJpbCB0aHJvdWdoIEFtYXpvbi4gCllvdSBhcmUgZG9uZS4gTm93IGhvdyBjYW4geW91IG1ha2UgeW91ciBqYWNrIG8gbGFudGVybiBsYXN0IGxvbmdlc3Q/IFRha2Ugc29tZSBwZXRyb2xldW0gamVsbHkgYW5kIGNvYXQgZXZlcnkgZXhwb3NlZCBzdXJmYWNlLCBldmVyeXRoaW5nIGxlZnQgYWZ0ZXIgYSBjdXQuIFRoaXMgd2lsbCBpbmNsdWRlIHRoZSBlbnRpcmUgaW5zaWRlIHN1cmZhY2Ugb2YgdGhlIHB1bXBraW4sIHRvby4gCldoZXJlIGVsc2UgYXJlIHlvdSBnb2luZyB0byBwdXQgaXQgICB0aGUgbGl2aW5nIHJvb20/IFRoZSBtYXN0ZXIgYmVkcm9vbT8gV2UgdGhpbmsgbm90LiBUaGUgbWFuIGNhdmUgaXMgeW91ciBjaGFuY2UgdG8gcmVzY3VlIHlvdXIgcG9zdGVycywgamVyc2V5cyBhbmQgc3BvcnRzIGVxdWlwbWVudCBmcm9tIHN0b3JhZ2UgYW5kIHB1dCB0aGVtIHdoZXJlIHRoZXkgYmVsb25nLCBvbiBwcm9taW5lbnQgZGlzcGxheS4gClBva2VyIG1hY2hpbmUgcmVmb3JtIGlzIGEgaG90IHRvcGljIGFoZWFkIG9mIGEgTWFyY2ggMyBwb2xsLgpUaGUgZmlsbSBpbnRlciBzcGxpY2VzIGl0cyBzZXJpZXMgb2YgbG9uZywgc3RhdGljIHRha2VzIHdpdGggZG9jdW1lbnRhcnkgc3R5bGUgaW50ZXJ2aWV3cyBhbmQgcGFubmluZyBzaG90cyBvZiBUcmlwb2xpLCBidXQgd2l0aG91dCBvYnZpb3VzIHJlYXNvbi4gQWRkaW5nIHRvIHRoZSB1bmVhc2Ugd2l0aCB0aGUgZmlsbSBkaXJlY3Rpb24sIHRoZSBjYW1lcmEgdGVjaG5pcXVlIGlzIGluY29uc2lzdGVudGx5IHVuc3RlYWR5IHRvIGdpdmUgYSBzZW5zZSBvZiByZWFsaXN0aWMgdm95ZXVyaXNtIG9yLCBtb3JlIGJlbGlldmFibGUsIGFzIGEgcmVzdWx0IG9mIGFtYXRldXIgZmlsbW1ha2luZy4gCkkgd2FzIGxpa2Ugb2theSwgY29vbCwgcHJldHR5IGNvb2wgZGVjYWRlIEkgdGhpbmsuLiAKTm90aGluZyB3YXMgZG9uZSBiZWNhdXNlIGhlIHdhcyBtZW50YWxseSBpbGwgYW5kIG15IGdyYW5kbW90aGVyIGNhdXNlZCBhIGJ1bmNoIG9mIGRyYW1hIGJ5IHNheWluZyBoZSB3b3VsZCBuZXZlciBkbyB0aGF0IGFuZCB0aGF0IG15IG1vbSB3YXMgbHlpbmcuIE15IG1vbSBkaWRuIHRhbGsgdG8gdGhlbSBmb3IgNiB5ZWFycyBhbmQgdGhlbiBhZnRlciB0aGF0LCB0aGV5IHdlcmUgYmFjayBpbiBteSBsaWZlLiAKSSBoYXZlbid0IHJlYWxseSBzZWVuIGhvdyB0aGUgdGVybSBpcyB1c2VkIHRvIHNodXQgZG93biBkaXNjdXNzaW9ucy4gTGlrZXdpc2UsIEkgZG9uJ3Qgc2VlIGl0IGFzIGFnZW5kYSBkcml2ZW4uIEkgc2VlIGl0IHVzZWQgYXMgYSB0b29sIHRvIGRpc2N1c3MgdGhlIHJlbW5hbnRzIG9mIGEgaG9wZWZ1bGx5IGR5aW5nLCBtaXNvZ3luaXN0aWMgY3VsdHVyZSwgdGhhdCB1c2VkIHRvIGJlIHZlcnkgcmVhbCBhdCBsZWFzdCB3aGVuIEkgd2FzIGdyb3dpbmcgdXAuIEFuZCBJIHNlZSB0aGF0IGFzIGxpYmVyYXRpbmcgbWVuLCBhbmQgYm95cyBwYXJ0aWN1bGFybHksIGFsbG93aW5nIHRoZW0gdG8gYmUgdGhlbXNlbHZlcyB3aXRob3V0IGJlaW5nIHBlZXIgcHJlc3N1cmVkIGludG8gY29uZm9ybWl0eSB3aXRoIGEgbWlzZ3VpZGVkIG5vdGlvbiBvZiB3aGF0IGl0IG1lYW5zIHRvIGJlIGEgbWFuLgpBIG9uZSB3YXkgdHJhaW4gdHJpcCBpbiBlaXRoZXIgZGlyZWN0aW9uIGF2ZXJhZ2VzIGp1c3Qgb3ZlciB0aHJlZSBob3Vycy4uIApXZWxsIG9uZSBvZiB0aGUgdGltZXMgdGhhdCBJIGNhbiByZW1lbWJlciBvZmYgaGFuZCBpcyB3aGVuIG1lIGFuZCAzIG90aGVyIGZyaWVuZHMgaGFkIHRvIGRvIGEgZ3JvdXAgcHJvamVjdCB3aGljaCBjb3VudGVkIGZvciBhIGRlY2VudCBhbW91bnQgb2Ygb3VyIGdyYWRlIGluIHRoZSBjbGFzcywgYW5kIHdlIGFsbCBoYWQgdG8gcHJlc2VudCBpdCB0byB0aGUgY2xhc3MgYW5kIHdlJ2QgYWxsIGJlIGRlZHVjZWQgbWFya3MgaWYgc29tZW9uZSBkb2Vzbid0IHNob3cgKHdpdGhvdXQgZ29vZCByZWFzb24pLiBXZSB3ZXJlIGdyb3VwZWQgdXAgd2l0aCBvbmUgcmFuZG9tIGd1eSB3aG8gbm9uZSBvZiB1cyBrbmV3IGluIHRoZSBzbGlnaHRlc3QuCkkgc2VyaW91c2x5IGRvbiBrbm93IGFueXRoaW5nIGFib3V0IGJpdGNvaW4gYW5kIGFtIGtpbmRhIGhlc2l0YW50IHRvIGxpbmsgdXAgbXkgYmFuayBhY2NvdW50IHdpdGggYW55dGhpbmcuIEhvd2V2ZXIsIEkgaGVhciBpdCBzdXBlciBzZWN1cmUuIEkgZ3Vlc3MgSSB3YXRjaCBhIHlvdXR1YmUgdmlkIGV4cGxhaW5pbmcgZXhhY3RseSBob3cgdG8gc2V0IG9uZSB1cC4gVW5sZXNzIHNvbWVvbmUgaGVyZSB3YW50cyB0byBnbyBvdmVyIGl0LCBsb2wuCllvdSBjYW4gcGxhY2UgcGljdHVyZXMgYW5kIHByaWNlcyBvZiB0aGUgQ2xheSBQb2tlciBDaGlwcyBhbmQgUG9rZXIgQWNjZXNzb3JpZXMsIGFuZCBhbGwgb3RoZXIgaXRlbXMgdGhhdCB5b3UgcGxhbiB0byBwcm9tb3RlLiAKUmF0cyBtYWtlIGV4Y2VsbGVudCBwZXRzLiBJZiB5b3UgZ2V0IG9uZXMgdGhhdCBhcmUgaGFuZCByZWFyZWQgdGhleSBhcmUgZnJpZW5kbHksIHNtYXJ0LCBjdXRlIGFuZCBjdXJpb3VzLiAKQ29tbWVudCBzYXZvaXIgc2kgbW9uIGdlc3RlIGVzdCBzIEFzc3VyZXogdm91cyBxdWUgdm91cyB2b3VzIHRyb3V2ZXogYmllbiBzdXIgbGUgc2l0ZSBzIGRlIERlc2phcmRpbnMgOgpJIHNhaWQgTVVMVElQTEUgdGltZXMgdGhhdCB5b3UgZG9uIGhhdmUgdG8gdGVsbCB0aGVtIGFib3V0IGl0IHVubGVzcyBpdCBuZWNlc3NhcnkuIApJIG5vdCBhIGtpZCBidXQgSSB0aGluayB0aGUgc2FtZS4gRmVlbGluZyBnb29kIGJ5IGJlaW5nIHVzZWZ1bCBkb2VzbiBnaXZlIHlvdSB0aGUgcmlnaHQgdG8gbWFyZ2luYWxpemUgb3RoZXJzIGJlY2F1c2UgdGhleSBjYW4gb3Igd29uIGJlIHVzZWZ1bCB0byBzb2NpZXR5IGFzIGEgd2hvbGUuIApUaGUgcXVhbGl0eSBzY29yZXMgd2VyZSA4NyBhbmQgNzUsIHJlc3BlY3RpdmVseS4gVGhlcmUgd2FzIG1vZGVyYXRlIGV2aWRlbmNlIHRoYXQsIGluIHRoZSBzaG9ydCB0ZXJtLCBTTVQgaXMgc2ltaWxhciB0byBhbWl0cmlwdHlsaW5lIGZvciB0aGUgcHJldmVudGlvbiBvZiBjaHJvbmljIHRlbnNpb24gdHlwZSBoZWFkYWNoZXMgYW5kIG1pZ3JhaW5lLlRoZXJlIHdhcyBvbmUgUkNUICg3NSBwYXRpZW50cykgb2YgU01UIHBsdXMgbWFzc2FnZSB2ZXJzdXMgbWFzc2FnZSBmb3IgZXBpc29kaWMgdGVuc2lvbiB0eXBlIGhlYWRhY2hlcy4gCkVuIGQnYXV0cmVzIHRlcm1lcywgbGEgZmVuZGFpc29uIGR1IG1vbnQgZGVzIE9saXZpZXJzIGNvbW1lIGFyY2hlLCBzJ2luc2NyaXJhaXQgcGx1dHQgZGFucyBsZSBjYWRyZSBkJ3VuZSBjb250cmUgcGFydGllIGluZmVybmFsZS4gQ2VsYSBtZSByYXBwZWxsZSBmY2hldXNlbWVudCBsJ3ZvY2F0aW9uIGQndW4gY2VydGFpbiByb3lhdW1lIHNvdXRlcnJhaW4gY29tbWUgcmVwYWlyZSBkZSBsYSBoaXJhcmNoaWUgc3Bpcml0dWVsbGUgY2Vuc2UgcmdpciBjZSBtb25kZS4gQydlc3QgdW5lIGludmVyc2lvbiBwdXJlIGV0IHNpbXBsZSBkZSBsJ2Nvbm9taWUgc3ltYm9saXF1ZSBiYXNpcXVlLiAKQW5nZWxpbmEwOTA5IHUKSSB3b3VsZCBwcm9iYWJseSB0ZWxsIGhlciB0byBsZXQgbWUgd29yayBpbiBwZWFjZSBhbmQgaWdub3JlIHRoZSBmb29kIGFsdG9nZXRoZXIuR29pbmcgdG8gYSB0aGlyZCBwYXJ0eSB0byByZXNvbHZlIGEgc2l0dWF0aW9uIGJlZm9yZSBkaXJlY3RseSBjb25mcm9udGluZyB0aGlzIHdvbWFuIHlvdXJzZWxmIGlzIG5vdCByaWdodC4gSWYgeW91IGNhbiBoYW5kbGUgc29tZXRoaW5nIHNtYWxsIGxpa2UgdGhpcyB5b3Vyc2VsZiwgbGlmZSB3aWxsIGhhdmUgYSBidW5jaCBvZiB1bnBsZWFzYW50IHN1cnByaXNlcyBjb21pbmcgeW91ciB3YXkgbGF0ZXIuIApZb3UgYnVpbHQgeW91ciByZXN0YXVyYW50IGFuZCBjdXQgdGhlIHJpYmJvbi4gCkVzIGhhbmRlbHQgc2ljaCBkYWJlaSBhYmVyIG5pY2h0IHVtIGVpbmVuIEVpbmdyaWZmIHdpZSBIYWFyZXNjaG5laWRlbiwgc29uZGVybiBlcyBnbGVpY2h0IGRlciBBbXB1dGF0aW9uIGVpbmVzIEtycGVydGVpbHMuIApCam9ybiBhbmQgQWduZXRoYSB3ZXJlIHJhaXNpbmcgdHdvIGNoaWxkcmVuIHVuZGVyIDEwIHllYXJzIG9sZCBpbiB0aGUgMTk3MHMgd2hpbGUgbWFraW5nIG11c2ljIGFuZCB0b3VyaW5nLiBCZW5ueSBhbmQgRnJpZGEgd2VyZSBwYXJlbnRzIG9mIGNoaWxkcmVuIGluIG90aGVyIG1hcnJpYWdlcywgc28gd2hpbGUgdGhlaXIgY2hpbGRyZW4gbWlnaHQgbm90IGhhdmUgYmVlbiBsaXZpbmcgd2l0aCB0aGVtLCBJIGNhbiBpbWFnaW5lIHRoZXkgd291bGQgZ28gdG8gZ3JlYXQgbGVuZ3RocyB0byBnZXQgZHJ1Z3MuIFRoZSBlbnRpcmUgYmFuZCB3YXMgcmF0aGVyIGhlYWx0aCBjb25zY2lvdXMgKEJqb3JuIHNheWluZyBoZSB3YXMgImZhdCIgaW4gdGhlICJXYXRlcmxvbyIgdmlkZW8pLiBGcmlkYSB0b29rIHVwIG1vdW50YWluIGhpa2luZyBhZnRlciBBQkJBIHNwbGl0LiBCam9ybiBhbmQgQWduZXRoYSBib3RoIHRvb2sgdXAgcnVubmluZyBpbiB0aGUgbGF0ZSAxOTcwcyBhbmQgMTk4MHMuCkkgZGF0ZWQgd29tZW4gd2l0aCB2ZXJ5IGNvbnRyb2xsaW5nIHBhcmVudHMgYW5kIGl0IG5ldmVyIGVuZHMuIAo6KS4gCkJlaW5nIGFuIG9ubGluZSBnYW1lIG1lYW5zIHlvdSBoYXZlIHRvIGhhdmUgYSBwb3dlcmZ1bCBjb21wdXRlci4gClBlcnNvbmFsbHksIEkgZ28gdGhlIHJpYiBhbmQgc3BhciByb3V0ZS4gClJlcC4gUm8gS2hhbm5hLCBEIENhbGlmLiwgZW1waGFzaXplZCB0aGF0IHRoZSBjaGVjayB3YXMgZHJhd24gb24gdGhlIHRydXN0IHRoYXQgVHJ1bXAgY3JlYXRlZCB0byBnaXZlIHVwIGNvbnRyb2wgb2YgaGlzIGJ1c2luZXNzIGFmdGVyIGhlIHdhcyBlbGVjdGVkLiBUaGF0IGluZGljYXRlZCB0aGF0IGhlIHN0YXllZCBpbnZvbHZlZCwgZGVzcGl0ZSBoaXMgY2xhaW1zLCBhbmQgaW50ZXJhY3RlZCB3aXRoIFRydW1wIEpyLiBhbmQgV2Vpc3NlbGJlcmcgdG8gbWFrZSB0aGUgcGF5bWVudHMgdG8gQ29oZW4uClRvZGF5IGlzIG15IDI0NXRoIGJpcnRoZGF5IGFuZCBJIGRvbid0IGtub3cgd2h5IGJ1dCB5ZXMgSSBzdGlsbCBrZWVwIHRyYWNrLiAKTW9zdCBvZiB0aGUgaG91c2VzIHdlIGJ1eSwgdGhlIHNlbGxlciBhc2tlZCBhIG11Y2ggaGlnaGVyIHByaWNlIGJ1dCBrbmV3IHRoZXkgd291bGQgbmV2ZXIgZ2V0IGl0LiBJIGxvb2sgYXQgd2hhdCBpcyBvd2VkIG1vcmUgdGhhbiB3aGF0IHRoZXkgYXJlIGFza2luZy4gTm93LCBpZiB0aGV5IHNwZW5kIGFuIGhvdXIgdGVsbGluZyB5b3UgYWJvdXQgaG93IG5pY2UgdGhlIHBsYWNlIGlzIGFuZCB0aGF0IGl0IGlzIHRoZSBiaWdnZXN0LCBuaWNlc3QgaG91c2UgaW4gdGhlIG5laWdoYm9yaG9vZCBhbmQgYXJlIHNlbGxpbmcgaXQgYmVjYXVzZSB0aGV5IHdhbnQgdG8gYnV5IGEgYmlnZ2VyLCBuaWNlciBob3VzZSwgeW91IHByb2JhYmx5IGRvbid0IHdhbnQgdG8gd2FzdGUgbXVjaCB0aW1lIHdpdGggdGhlbS4uIApNYWluc3RyZWFtIEFtZXJpY2FuIHNvY2lldHkgc3RpbGwgd2FudGVkIHRvIGNvb3BlcmF0ZSB3aXRoIENoaW5hLCBoZSBzYWlkLCBhZGRpbmcgdGhhdCBwcm9ncmVzcyBpbiB0aGUgdHdvIGNvdW50cmllcycgdHJhZGUgdGFsa3Mgd2VyZSB3aWRlbHkgd2VsY29tZWQgYW5kIHdpbGwgZXZlbnR1YWxseSB5aWVsZCBhIHNhdGlzZmFjdG9yeSBkZWFsLiAKQnV0IHRvIGFuc3dlciB5b3VyIHF1ZXN0aW9uIGFib3V0IHRoZSBwcm9ncmFtbWVyIG1pbmRzZXQ6IGl0IGFsbCBjb21lcyBkb3duIHRvIHRpbWUgYW5kIG92ZXJoZWFkLiBIb3cgbG9uZyB3b3VsZCBpdCB0YWtlIG1lIHRvIGJ1aWxkIHRoaXMgdG9vbCwgYW5kIGhvdyBtdWNoIHRpbWUgd291bGQgaXQgdGFrZSBtZSB0byBtYWludGFpbiBpdCwgdmVyc3VzIGhvdyBtdWNoIGV4dHJhIG92ZXJoZWFkIHdpbGwgSSBhY2NydWUgYnkgYnJpbmdpbmcgaXQgaW50byB0aGUgcHJvamVjdC4gVGhlIHRoaW5nIHRvIHJlbWVtYmVyIGFib3V0IHBhY2thZ2VzLCBwbHVnaW5zLCBvciBmcmFtZXdvcmtzIHRoYXQgZG93biBvbiBzeW50YXggaXMgdGhhdCB0aGV5IG9ubHkgY3V0IGRvd24gb24geW91ciBzeW50YXguIFNvbWV3aGVyZSBkZWVwIGluIHRoZSBwYWNrYWdlLCB0aGF0IGNvZGUgeW91IGRvbiBoYXZlIHRvIHdyaXRlIGFueW1vcmUgc3RpbGwgZXhpc3RzIGFuZCBjb25zdW1lcyBwcm9jZXNzaW5nIHBvd2VyIHdoZW4gcnVuLgpXaHkgdGhlbiBpcyBpdCB0aGUgc29sZSB0YXJnZXQgb2YgdGhlIG5ldyBsZWdpc2xhdGlvbiwgd2hpbGUgc3BvcnRzIGJldHRpbmcgb3BlcmF0b3JzIGFyZSBzZWVtaW5nbHkgYWxsb3dlZCB0byBjYXJyeSBvdXQgdGhlaXIgYWN0aXZpdGllcyB3aXRob3V0IGZlYXIgb2YgbGVnYWwgY29uc2VxdWVuY2VzPyBEb2VzbiB0aGF0IHNlZW0ganVzdCBhIGxpdHRsZSBiaXQgb25lIHNpZGVkIGFuZCBjb250cmFkaWN0b3J5Py4gCkZvciBhbGwgdGhlIGNyaXRpY2lzbSBvZiB0aGUgY2xhbXBkb3duLCB0aGUgZmxpcCBzaWRlIGlzIGVhc3kgdG8gc2VlIGFzIHdlbGw6IFdpdGggZmV3ZXIgZXNjb3J0cyBhZHZlcnRpc2luZywgcHJvc3BlY3RpdmUgam9obnMgaGF2ZSBsZXNzIG9wcG9ydHVuaXR5LiAKQXBwcm9wcmlhdGUgcXVhbGl0eSBhc3Nlc3NtZW50IGNoZWNrbGlzdHMgd2VyZSBzcGVjaWZpZWQ7IGFsdGhvdWdoIGFwcGFyZW50bHkgdXNlZCBhcyBhIHN0dWR5IHNlbGVjdGlvbiB0b29sLCB0aGUgcmVzdWx0cyBvZiB0aGlzIGFzc2Vzc21lbnQgd2VyZSBub3QgcHJlc2VudGVkLiBTdHVkeSBkZXRhaWxzIHdlcmUgcHJlc2VudGVkLiBUaGVzZSBkZW1vbnN0cmF0ZWQgaGlnaCB2YXJpYXRpb24gYW1vbmcgdGhlIGludGVydmVudGlvbnMgYW5kIG91dGNvbWUgbWVhc3VyZXMgYW5kIHN1Z2dlc3RlZCB0aGF0IHRoZSBtZXRob2Qgb2Ygc3ludGhlc2lzIHdhcyBhcHByb3ByaWF0ZS4uIApBcmNoaXZlIEF2cmlsIDIwMTgKQXJlIHlvdSBldmVuIGJlaW5nIHNlbnNpYmxlIHJpZ2h0IG5vdz8gQWNjaWRlbnRhbGx5IHNhbHZhZ2luZyBzb21ldGhpbmcgaXMgY29tcGxldGVseSBkaWZmZXJlbnQuIEkgaGFkIGJlZW4gZWFnZXJseSBhbnRpY2lwYXRpbmcgYSByZWQgaXRlbSBmb3IgZGF5cy4gClRydW1wIGluIE1vZGkgbW9kZQpDZWxhIHZldXQgZGlyZSBxdSd1bmUgaGlzdG9pcmUgbidhIHBhcyBiZXNvaW4gZCd0cmUgZXhhY3RlIGF1IHNlbnMgc2NpZW50aWZpcXVlIHBvdXIgdHJlIHZyYWllIGF1IHNlbnMgZGUgY2UgcXUnZWxsZSBkaXQsIGR1IG1lc3NhZ2UgcXUnZWxsZSBwb3J0ZSBldCBxdSdvbiBuZSBjb21wcmVuZCBxdSdhcHJzLiBNYWlzIHBvdXIgZXhwcmltZXIgY2UgZW4gcXVvaSBlbGxlIGVzdCB2cmFpZSAocHJlbWlyZSBsZXR0cmUgZCdhbW91cikgb24gbmUgcGV1dCBzZSBjb250ZW50ZXIgZGUgc29uIGNvbnRlbnUgZXhhY3QgKG1hdGhtYXRpcXVlcykuIFBvdXIgcmVuZHJlIHNvbiBzZW5zIHZyYWksIGlsIGVzdCBuY2Vzc2FpcmUgZGUgbCdleHBsaXF1ZXIgb3UgZGUgbGEgcmNyaXJlIGF1dHJlbWVudCwgcG91ciBlbiBzdWdncmVyIGRqIGxlcyBjbGVmcyBkJ2ludGVycHJ0YXRpb24uIApBIG1vcmUgcHJlc2NpZW50IGltYWdlIHdhcyB0aGUgd29uZGVyZnVsIGZseWluZyBvYnNlcnZhdGlvbiBwbGF0Zm9ybSBzaG93biBpbiBTdXIgc29uIHByb2pldCBkZSB2b3lhZ2VyIGF2ZWMgbGEgc3BoZXJlIGFlcm9zdGF0aXF1ZSBkZSBNLiAKQ2VjaSBlc3QgdW4gbW9kZSBkJ2VtcGxvaSBkdSBibG9nIChldCBkZSBzb24gYXV0ZXVyKVVuIHNhY3IgKGNlbnN1cikgY2UgIkpvam8iLiAKVGhlIHJlYXNvbiB3ZSBkbyBub3QgZmVlbCB0aGlzIGlzIGJlY2F1c2Ugb3VyIGJyYWluIHJlbGVhc2VzIGNlcnRhaW4gY2hlbWljYWxzIHRvIG1hc2sgdGhlIHBhaW4uIFRoZXNlIGNoZW1pY2Fscywgbm90YWJseSB0aGUgZW5kb3JwaGlucyBhbmQgc2Vyb3RvbmluLCBhcmUgd2hhdCBhcmUgcmVzcG9uc2libGUgZm9yIHRoZSAncnVubmVyJ3MgaGlnaCcgd2UgZmVlbCBhZnRlciBhIGdvb2Qgd29ya291dC4gClRoZXNlIHNvbmdzIGFyZSBhdmFpbGFibGUgb24gIlRoZSBGYW1lLCJHYUdhJ3MgZmlyc3QgYWxidW0uIHZlcnNpb24uIFlvdSBjYW4gZ2V0IGl0L3RoZW0gZnJvbSBpVHVuZXMuIDM0KSBBZ2FpbiwgQWdhaW4gLiBDYW4gYmUgZm91bmRvbiBZb3V0dWJlLiAzNikgTHV2IFVTdW0gKGJ5IENKIEhvbGxhbmQgZmVhdC4gTGFkeSBHYUdhKS4gU2VhcmNoIFlvdXR1YmUgZm9yIHRoaXNzb25nLiAzNykgTm8gV2F5IC4gQXNzdW1lZG91dHRha2UgZnJvbSAiVGhlIEZhbWUgTW9ucyBlci4iIENhbiBiZSBmb3VuZCBvbiBZb3V0dWJlLiAKSXQgbGlrZSAkMTAgYW5kIGRpdmV5IGFzIGZ1Y2sgYnV0IGl0IHRoZSBiZXN0IGRydW5rIGZvb2QuLiAKSSBiYXNpY2FsbHkgaGF2ZSBldmVyeSByZWFzb24gdG8gYmx1ZmYgcmFpc2UgaGVyZS4gSSBjYW4gZXhwbG9pdCB0aGUgcG9wdWxhdGlvbiB0ZW5kZW5jeSB0aGF0IGxpdmUgcml2ZXIgWC9ScyBhcmUgYWx3YXlzIG51dHRlZCwgSSBoYXZlIGEgbWFzc2l2ZSByYW5nZSBhZHZhbnRhZ2UsIEkgaGF2ZSB0aGUgbnV0IGJsdWZmIGNhbmRpZGF0ZSwgYW5kIFZpbGxhaW4gcmFuZ2UgaXMgY2FwcGVkIGF0IGV4Y2x1c2l2ZWx5IG9uZSBwYWlyLi4gClRoZXJlIGEgbG90IG1vcmUgdGhhdCBnb2VzIGludG8gaXQuR2l2ZW4gZXZlcnl0aGluZyB0aGF0IGhhcyBoYXBwZW5lZCB0aGUgbGFzdCBmZXcgeWVhcnMgSSB0aGluayBpdCB1bmRlcnN0YW5kYWJsZSB0byBiZSBhIGxpdHRsZSBza2VwdGljYWwuQW5vcmEuIApUd28gcGxheWVyIGhvbGQnZW0gaXMgcHJldHR5IG11Y2ggc29sdmVkLCB0aG91Z2ggdGhlIGJlc3QgaHVtYW5zIHN0aWxsIHB1dCB1cCBhIHJlYWwgZmlnaHQgd2l0aCB0aGUgYmVzdCBBSSdzIGF2YWlsYWJsZS4gCkl0IGlzLCB3aXRob3V0IGEgZG91YnQsIHNvbWUgb2YgdGhlIGJlc3QgbGlmZSBhZHZpY2Ugd2UgZXZlciBjb21lIGFjcm9zcywgYW5kIHBlcmhhcHMgdGhlIG1vc3Qgc2ltcGxlIGFuZCBlbGVnYW50IGV4cGxhbmF0aW9uIG9mIHRoZSByZWFsIHZhbHVlIG9mIGVkdWNhdGlvbi4KSW4gYW55IGNhc2UsIGNvbnRyYXJ5IHRvIE9QJ3MgYXNzZXJ0aW9uLCB3ZSBkbyBpbmRlZWQgY2FyZSBhYm91dCBtYXJhdGhvbmVyIGhlYWx0aC4gCkVtcGVyb3JzIGNvbnRpbnVhbGx5IHRyaWVkIHRvIGVuZm9yY2Ugc3RyaWN0ZXIgb25lcywgb3IgdG8gcHJvaGliaXQgYnVpbGRpbmdzIGZyb20gZ29pbmcgb3ZlciBhIGNlcnRhaW4gaGVpZ2h0IGluIGFuIGF0dGVtcHQgdG8gcHJldmVudCBjb2xsYXBzZXMuIApObyBuZXcgZnVsbHkgYXV0b3Mgb3IgYnVyc3QgY2Fubm90IGJlIGJvdWdodCBhbnl3aGVyZSBpbiB0aGUgdXMgdW5sZXNzIHlvdSdyZSBsYXcgZW5mb3JjZW1lbnQgb3IgaGF2ZSBhIGNsYXNzIDcgZmlyZWFybXMgbGljZW5zZSB3aGljaCBpcyB0byBtYWtlIHRoZW0gdG8gc2VsbCB0byBtaWxpdGFyeSBvciBsYXcgZW5mb3JjZW1lbnQuIApUaGF0IGFsbDsgcmVsaWdpb3VzIGZyZWVkb20gaXMgb25seSBwZXJpcGhlcmFsbHkgaW52b2x2ZWQgaW4gYSBjYXNlIHdoZXJlIHRoZXkgYWNjZXB0IG1vbmV5IHRvIGRvIHNvbWV0aGluZywgdGhlbiBkbyB0aGVpciBiZXN0IHRvIHRyZWF0IGNlcnRhaW4gY2FzZXMgYXMgInNlcGFyYXRlIGJ1dCBlcXVhbCIgb3Igc29tZXRoaW5nIGFsb25nIHRob3NlIGxpbmVzLiAKQXMgSSBtZW50aW9uZWQgaW4gYSBwcmV2aW91cyBjb21tZW50LCB0aGUgTiB3aWxsIGxpa2VseSBwdWJsaXNoIGNhbmRpZGF0ZSBjb3ZlcmFnZSBhbmQgcXVlc3Rpb25uYWlyZXMgY2xvc2VyIHRvIHRoZSBlbGVjdGlvbi4uIApJJ3ZlIGNhbGxlZCBzb21lYm9keSBvciBqdXN0IHByZXRlbmQgdG8gY2FsbCBzb21lYm9keSBhIGZldyB0aW1lcyBhbmQgbWFuIGl0IHdvcmtzLiBJIGhhZCBhIGd1eSBzdGFydCB3YWxraW5nIHVwIHRvIG1lIHVudGlsIEkgcHJldGVuZGVkIHRvIGdldCBhIGNhbGwgYW5kIHNhaWQgInllYWgsIEknbSByaWdodCBoZXJlIHdhaXRpbmcgZm9yIHlvdSEgV2hlcmUgYXJlIHlvdT8hIiBsb3VkIGVub3VnaCBmb3IgaGltIHRvIGhlYXIgbWUsIEkgd2FzIHdhaXRpbmcgZm9yIG15IHJpZGUuIEhlIHdhbGtlZCBhd2F5Li4gClRoZW4gd2UgdGhvdWdodCBpdCB3YXMgYSBzbGlwcGVkIGRpc2sgaW4gaGlzIG5lY2sgdGhhdCB3YXMgY29tcHJlc3Npbmcgc29tZSBuZXJ2ZXMuIEl0IHR1cm5lZCBvdXQgdG8gYmUgYSBuZXJ2ZSBzaGVhdGggdHVtb3IuIApUaGUgcGhvdG8gb2YgaGltIHN0YW5kaW5nIHdpdGggaGlzIHBvc3RlciB0aGF0IG1vcm5pbmcgaXMgaGVhcnRicmVha2luZy4gSSBrbm93IHBlb3BsZSBvbiBoZXJlIHRoaW5rIHdlIHNob3VsZCBiYWNrIG9mZiBmcm9tIHRoZSBzdGVwbW9tLCBidXQgc29tZXRoaW5nIGFib3V0IGhlciBiZWhhdmlvciByZWFsbHkgYm90aGVycyBtZS4gClRoZSBndXkgd2F0Y2hpbmcgR2FtZSBvZiBUaHJvbmVzIG9uIGhpcyBJcGhvbmUsIHRoZSA2MCB5ZWFyIG9sZCBndXkgd2l0aCBtb25leSB3aG8gc29tZWhvdyBhbmdyeSBhbGwgdGhlIHRpbWUsIHRoZSBtdXRlIGxhZHksIHRoZSBraWQgd2hvIG9ubHkgc3BlYWtzIGluIHBva2VyIGphcmdvbjsgcXVpdCB5b3VyIHNoaXQgYW5kIHN0b3AgYmVpbmcgc28gZ29kZGFtbiBsYW1lLCBib3JpbmcsIHNlcmlvdXMgYXQgdGhlIDEvMyB0YWJsZSEuIApJJ20gYWxsIGluISIgU2hlIG1lYW50IGV4aGF1c3RlZCwgYnV0IERldWNlcyAgIGhvbGRpbmcgQWNlIEtpbmcgYWZ0ZXIgYSBsb25nIHJ1biBvZiByYWdzICAgaGFkIGluc2lzdGVkIG9uIGhvbGRpbmcgaGVyIHRvIHRoZSBleHByZXNzaW9uIGFuZCBjYWxsZWQuIEZhbmN5aW5nIGEgc3VpdGVkIFEgMTAsIFBlZyBMZWcgaGFkIGNhbGxlZCB0b28uIApBY3R1YWxseSBoYXBwZW5lZCByZWNlbnRseSBhdCBhIGxvY2FsIGNvbGxlZ2Ugd2hlbiBob21vcGhvYmljIGluY2lkZW50cyB3ZXJlIGF0dHJpYnV0ZWQgdG8gc29tZW9uZSB3aG8gaXMgcHJvYmFibHkgYWN0dWFsbHkgZ2F5LiAKSSB3YXMgdmVyeSByZXNpc3RhbnQgdG8gbW92ZSB0byA5NSB3aGVuIGl0IHdhcyBmaXJzdCByZWxlYXNlZCBhcyBJIHdhcyBhIERPUyBmYW5ib3kuIERpYWwgdXAgbmV0d29ya2luZyB3YXMgYSBwYWluIGluIHRoZSBhc3MgdG8gZ2V0IHdvcmtpbmcgb24gOTUsIGFuZCBwbGF5aW5nIE1VRHMgd2FzIGlmZnkgYXQgYmVzdCAoVGVsaXggd2FzIG15IGdvIHRvIERPUyBwcm9ncmFtIGZvciBsb2NhbCBCQlNzIGFuZCBtdWRkaW5nKS4gVGhlbiB0aGlzIG5ldyBmYW5nbGVkIHRoaW5nIGNhbGxlZCB3YXMgbWFraW5nIHdhdmVzICAgQ0QgcXVhbGl0eSBzb3VuZCBhbmQgaXQgb25seSB0b29rIHVwIDVNQiBvZiBzcGFjZT8gSG9seSBzaGl0ISAoaXQgd2FzIGEgYmlnIGRlYWwgYmVjYXVzZSBzcGFjZSB3YXNuIGFzIGNoZWFwIGFzIGl0IHdhcyB0b2RheS4gYW5kIDVNQiBkaWRuIHRha2UgdGhhdCBsb25nIHRvIGRvd25sb2FkLCBldmVuIG92ZXIgZGlhbHVwKS4gVGhhdCBmaW5hbGx5IGNhdXNlZCBtZSB0byBtYWtlIHRoZSBqdW1wLgpCaWxsIEdyb3NzIHNheXMgdGhpcyBzZWNyZXQgY29uZGl0aW9uIG1hZGUgaGltIGEgc3VjY2Vzc2Z1bCBpbnZlc3RvciAgIGFuZCBpbmZhbW91c2x5IHNob3J0IHRlbXBlcmVkT3ByYWgncyBmb3J0dW5lIHRha2VzIGEgaGl0IGFmdGVyIHNoZSBsb3NlcyAkMzkuMiBtaWxsaW9uIG9uIFdlaWdoIFdhdGNoZXJzIHJvdXRBc3NldCByaWNoIGJ1dCBjYXNoIHBvb3I6IEVsb24gTXVzayByZWNlbnRseSB0b29rIG91dCBmaXZlIG1vbnN0ZXIgbW9ydGdhZ2VzIHdvcnRoICQ2MSBtaWxsaW9uQmxvb21iZXJnIHZhbHVlcyBKZW5uZXIgZmlybSBieSBjb21wYXJpbmcgaXQgd2l0aCBmb3VyIHB1YmxpY2x5IHRyYWRlZCBwZWVyczogTCBTQSwgSW50ZXIgUGFyZnVtcyBJbmMuLCBFc3RlZSBMYXVkZXIgQ29zLiAKSSBkb24ndCBrbm93IGhvdyBoaWdoIHRoZSBzdGFrZXMgd2VyZSwgYnV0IG15IG1vdGhlciBoYXMgdG9sZCBtZSBzdG9yaWVzIGFib3V0IGhvdyBiYWNrIGluIHRoZSBPbGQgQ291bnRyeSBoZXIgZmF0aGVyIHdvdWxkIHNpdCBhcm91bmQgZHJpbmtpbmcgYW5kIHBsYXlpbmcgc2NvcGEgd2l0aCBoaXMgYnVkZGllcyBmb3IgbW9uZXkuIApXaGVuIHRyYWRpbmcgZW5kZWQsIHdlIHN5c3RlbWF0aWNhbGx5IGNvbXBhcmVkIGVhY2ggdHJhZGVyJ3MgYW5hbHl0aWNhbCBza2lsbHMgYW5kIHN0cmF0ZWdpYyBpbnRlbGxpZ2VuY2UsIG1lYXN1cmVkIGJlZm9yZSB0cmFkaW5nLCB3aXRoIHRoZWlyIGV2ZW50dWFsIGVhcm5pbmdzLiAKQ2FuY2VsbGF0aW9uIEFzIGEgUmVzdWx0IG9mIERlYXRoIG9yIERpc2FiaWxpdHkuIElmIGJ5IHJlYXNvbiBvZiBkZWF0aCBvciBkaXNhYmlsaXR5IHlvdSBhcmUgdW5hYmxlIHRvIHJlY2VpdmUgYWxsIFNlcnZpY2UgZm9yIHdoaWNoIHlvdSBjb250cmFjdGVkLCB5b3Ugb3IgeW91ciBlc3RhdGUgbWF5IGVsZWN0IHRvIGJlIHJlbGlldmVkIG9mIHRoZSBvYmxpZ2F0aW9uIHRvIG1ha2UgcGF5bWVudHMgZm9yIHNlcnZpY2VzIG90aGVyIHRoYW4gdGhvc2UgcmVjZWl2ZWQgYmVmb3JlIGRlYXRoIG9yIHRoZSBvbnNldCBvZiBkaXNhYmlsaXR5LCBleGNlcHQgYXMgcHJvdmlkZWQgaW4gc3Vic2VjdGlvbiAoaWlpKS4gCjcgYXQgTW90b3JDaXR5IENhc2lubyBIb3RlbCwgdGhlIGNoYXJpdHkgcG9rZXIgdG91cm5hbWVudCB3aWxsIGdpdmUgZmFucyBhbiBvcHBvcnR1bml0eSB0byBnbyBoZWFkIHRvIGhlYWQgd2l0aCBSZWQgV2luZ3MgcGxheWVycyBhbmQgYWx1bW5pIGluIGEgZ2FtZSBvZiBUZXhhcyBIb2xkICdFbSB3aXRoIGEgZ3JhbmQgcHJpemUgb2YgJDUsMDAwIGNhc2ggdG8gdGhlIHRvdXJuYW1lbnQgd2lubmVyLiAKTG9va2luZyBiYWNrIG92ZXIgbXkgZ2VvbG9naWNhbCBjYXJlZXIsIEkgcmVhbGlzZSBob3cgbHVja3kgSSB3YXMgdG8gYmUgYSB3b3JraW5nIHNjaWVudGlzdCBkdXJpbmcgdGhlIGxhdGVyIHBhcnQgb2YgdGhlIHR3ZW50aWV0aCBjZW50dXJ5IHdoZW4gaWRlYXMgb24gdGhlIG5hdHVyZSBvZiB0aGUgRWFydGggdW5kZXJ3ZW50IGEgcmV2b2x1dGlvbi4gV2hlbiBJIHdhcyBhIHN0dWRlbnQgaW4gdGhlIGVhcmx5IDE5NjBzLCB0aGUgaWRlYSBvZiBjb250aW5lbnRhbCBkcmlmdCB3YXMgcmVnYXJkZWQgYnkgbWFueSBwZW9wbGUgYXMgbGF1Z2hhYmxlLiBUd2VudHkgeWVhcnMgbGF0ZXIgdGhlIGNvbmNlcHQgb2YgcGxhdGUgdGVjdG9uaWNzIHdhcyB3aWRlbHkgYWNjZXB0ZWQsIGFuZCBpdCBzdGFydGVkIHRvIGJlIGFwcHJlY2lhdGVkIHRoYXQgdGhlIG9sZGVyIHJvY2tzIGluIE5ldyBaZWFsYW5kIHdlcmUgYSBmcmFnbWVudCBvZiB0aGUgYW5jaWVudCBHb25kd2FuYSBjb250aW5lbnQuIFRoaXMgYm9vayBpcyBhbiBleGNlbGxlbnQgYWNjb3VudCBvZiBob3cgTmV3IFplYWxhbmQgaXMgcGFydCBvZiB0aGUgbGFyZ2VseSBzdWJtZXJnZWQgY29udGluZW50IG9mIFplYWxhbmRpYSwgbm93IHRoZSB3b3JsZCdzIHNldmVudGggY29udGluZW50LCBleHRlbmRpbmcgZnJvbSBOZXcgQ2FsZWRvbmlhIGluIHRoZSBub3J0aCB0byBDYW1wYmVsbCBJc2xhbmQgaW4gdGhlIHNvdXRoLiBJbmRlZWQsIGFzIGJvdGggb2YgdGhlbSBoYXZlIHBsYXllZCBhIGxlYWRpbmcgcm9sZSBpbiBkZXZlbG9waW5nIGlkZWFzIG9uIHRoZSBuYXR1cmUgb2YgY29udGluZW50YWwgTmV3IFplYWxhbmQsIGl0IHdvdWxkIGJlIGRpZmZpY3VsdCB0byBmaW5kIGEgcmV2aWV3ZXIgd2hvIGRpZCBub3Qga25vdyB0aGVtLCBhbmQgbWFueSBvZiB0aGUgb3RoZXIgc2NpZW50aXN0cyB3aG8gZmVhdHVyZSBpbiB0aGlzIHZvbHVtZS4KVGhpcyBpcyBoYXJkIHRvIGRvIGFuZCByZXF1aXJlcyBtYW55IGhhbmRzIHRvIG5vdCBiZSBhIGd1ZXNzLi4gClNlcmlvdXNseSwgaWYgd2UgaGF2ZSB0aGUgb3Bwb3J0dW5pdHkgdG8gdXNlIHRoaXMgZm9yIHNpeHR5IGRheXMgYmVmb3JlIGRlY2lkaW5nIGlmIGl0IGlzIGEgd29ydGh5IHByb2R1Y3Qgd2hvIGNvdWxkIGFzayBmb3IgYW55dGhpbmcgbW9yZS4gCklmIHlvdSB3YW50IHByYWN0aWNhbGx5IGFueXRoaW5nLCB5b3UnbGwgaGF2ZSB0byBhc2sgeW91ciBodXNiYW5kIGFuZCBzaW5jZSBoZSBjb250cm9scyBpdCwgaGUnbGwgYWx3YXlzIGhhdmUgdGhlIGZpbmFsIHNheSEgV2FudCBtb3JlIGNsb3RoZXM/IFRvbyBiYWQsIHlvdXIgaHVzYmFuZCB3b24ndCBidXkgaXQgZm9yIHlvdS4gCkkgZGlkbiBsaWtlIGJyZWFzdCBmZWVkaW5nLiBJIHF1aXQgYWZ0ZXIgNSBtb250aHMgZm9yIGdvb2QuIEkgc3RhcnRlZCBzdXBwbGVtZW50aW5nIGF0IGFib3V0IDMgNCBtb250aHMuIApUaGUgcXVlc3Rpb24gZXNzZW50aWFsbHkgbWVhbnMgdGhlIHNhbWUgYXMgIldoYXQgaXMgdGhlIGNoYW5jZSB0byBnZXQgYSBmbHVzaCBpZiBkZWFsdCA3IGNhcmRzPyIgVGhpcyBpcyBiZWNhdXNlIGZyb20gdGhlIHZpZXcgb2Ygb25lIHBsYXllciBpbiBob2xkJ2VtIHRoZXkgd2lsbCBzaW1wbHkgZ2V0IDcgY2FyZHMsIDIgcG9ja2V0IGNhcmRzIHBsdXMgNSBjb21tdW5pdHkuIElmIEkgdHJ1c3QgbXkgc2FtcGxpbmcgcHJvZ3JhbSBpdCBzYXlzIGEgZmx1c2ggb2NjdXJzIDMuMDIlIG9mIHRoZSB0aW1lLiAKV2l0aCBhIG5ldyBjb2FjaCwgd2UgY291bGQgdmVyeSByZWFsaXN0aWNhbGwgc3RhcnQgb2ZmIDEgMiwgb3Igd29yc2UgMCAzLiBJIGhhcHB5IGlmIHdlIGVuZCB1cCBiZWluZyAyIDEuIEphY2tzb252aWxsZSBTdGF0ZSBpcyBvdXIgb3V0IG9mIGNvbmZlcmVuY2Ugcml2YWwgYW5kIHRoZSBnYW1lIGlzIGFsd2F5cyBkZWNpZGVkIG9uIDMgcG9pbnQgb3IgbGVzcywgb3Igb3ZlcnRpbWUuIApUaGlzIHdhcyBteSBmcmllbmQgYW5kIEkgdGhvdWdodCwgJ0hvZ2FuIGJldHJheWVkIG1lPyBIb2dhbiBjYWxsZWQgVmluY2UgYW5kIHJhdHRlZCBtZSBbb3V0XSwgd2FzIGFuIG9mZmljZSBzdG9vZ2U/JyBJbiBteSBkYXksIHRoYXQncyB3aGF0IHRoZXkgd2VyZSBjYWxsZWQuIApUZWEga2V0dGxlIGJvaWxpbmcgbWFraW5nIGxvdWQgc2NyZWVjaGluZyBub2lzZS4gCjQuIEltcGFpcmVkIGNvbnRyb2wgb2YgdGhlc2UgbXVzY2xlcyBpcyBsaWtlbHkgdG8gY29tcHJvbWlzZSBzcGluYWwgZnVuY3Rpb24uCk5vZWxUcm90c2t5ICAwIHBvaW50cyAgc3VibWl0dGVkIDE4IGRheXMgYWdvCkxhZHkgR2FHYSkgLiA5NyA5OSkiIEJvcm4gVGhpcyBXYXkgKERlbHV4ZSBBbGJ1bSBCb251c1NvbmdzKSIgQmxhY2sgSmVzdXMgKyBBbWVuIEZhc2hpb24sIEZhc2hpb24gb2YgSGlzIExvdmUsIFRoZVF1ZWVuLiBDYW4gZ2V0IHRoZXNlIGRlbHV4ZSBhbGJ1bSBzb25ncyBmcm9tIGlUdW5lcyEgMTAwKSBZb3UgYW5kIEkuIApUaGV5IHdlcmUgZ2l2ZW4gYSB2b3VjaGVyIGZvciAxIGZyZWUgaG90IGNob2NvbGF0ZS5TaGFkcmFjaDQ1MSAgMiBwb2ludHMgIHN1Ym1pdHRlZCA0IGRheXMgYWdvQXMgYW4gZW5naW5lZXIsIEkgYm90aCBhZ3JlZSBhbmQgZGlzYWdyZWUuIEZvciBzaW1wbGUgb2JqZWN0cywgbGlrZSBhIHNwb29uIGZvciBpbnN0YW5jZSwgeWVzLCBpdCBzaG91bGQgYmUgb2J2aW91cyB3aGF0IHNpZGUgeW91IGhvbGQgYW5kIGhvdyB5b3UgbWFuZXV2ZXIgaXQuIEJ1dCBub3QgYWxsIGRlc2lnbnMgaGF2ZSB0byBiZSBzaW1wbGUuIApJIGRvdWJ0IHlvdSBsaXZpbmcgb2ZmIHlvdXIgMTBOTCB3YWdlcyBzbyBpZiB5b3UgaGF2ZSB0byBib3VuY2UgYmV0d2VlbiAxME5MIGFuZCAyNU5MIDMwIHRpbWVzIGl0IHdvbnQgcmVhbGx5IG1ha2UgYSBkaWZmZXJlbmNlIHRvIHlvdXIgbGlmZS4gSG93IHlvdSBkZWZpbmUgeW91ciBCUk0gaXMgdXAgdG8geW91LiBJIHNob3QgdG9vayBhdCAyNSBidXkgaW5zIHRocm91Z2ggMjAwTkwgYW5kIG1vdmVkIGRvd24gYXQgMjAuIApNaXJyb3IgRnVsbFNlcnZpY2VCS0sKTXkgY29tbWVudCBpcyBqdXN0IHNheWluZyBhdCBsZWFzdCB0cnkgYnkgeW91cnNlbGYgZmlyc3QuIFlvdSB3aWxsIGV2ZW50dWFsbHkgbmVlZCB0byBiZSBhYmxlIHRvIHBsYXkgb24geW91ciBvd24gYW5kIG1ha2UgZGVjaXNpb25zIG9uIHlvdXIgb3duLiAKV2FsbnV0IEdyb3ZlIG1hZGUgdGhpbmdzIGRpZmZpY3VsdCBvbiBEdXQgZWFybHksIGxlZCBieSBzY3JhcHB5IGZvcndhcmQgUm9sYW5kZSBUYXlsb3IsIHdobyBpcyBqdXN0IDUgZm9vdCA3LiAKVGhleSBoYXZlIHRoZSBzYW1lIHJpZ2h0cyBhcyBtZW4uIApBbm90aGVyIGRlc2NyaWJlcyBob3cgaGlzIG1vdGhlciwgaW4gdGhlIGdyaXAgb2YgYSBwb2tpZSBhZGRpY3Rpb24sIHN0b2xlIG1vcmUgdGhhbiAkMiBtaWxsaW9uIGZyb20gaGVyIGVtcGxveWVyIGFuZCBpcyBub3cgc2VydmluZyBhIGphaWwgdGVybS4uIApXaGF0IGlmIEFsaSBhbmQgVHlzb24gaGFkIG1ldCBpbiB0aGUgcmluZywgZWFjaCBpbiBoaXMgcHJpbWU/IFdoYXQgaWYgQ290dG9zIHRlYW0gaGFkIHByb3Blcmx5IGNoZWNrZWQgTWFyZ2FyaXRvcyBnbG92ZXMgYmVmb3JlIHRoZWlyIGZpZ2h0PyBXaGF0IGlmIHN1Y2ggYW5kIHN1Y2ggYSBqdWRnZSBoYWQgYm91Z2h0IGhpbXNlbGYgYSBuZXcgcGFpciBvZiBzcGVjdGFjbGVzIHRoZSBkYXkgb2YgeWV0IGFub3RoZXIgY3JhenkgZGVjaXNpb24/IFdoYXQgaWYsIHdoYXQgaWYsIHdoYXQgaWYhIFRoZXNlIHF1ZXN0aW9ucyBjYW4gbmV2ZXIgYmUgZnVsbHkgYW5zd2VyZWQuIApNb3N0IG11bHRpIG1pbGxpb25haXJlcyBhbmQgYmlsbGlvbmFpcmVzIG93biBidXNpbmVzc2VzIGJlY2F1c2UgdGhlcmUgaXMgbm8gbGltaXQgdG8gaG93IG11Y2ggeW91IGNhbiBlYXJuIGluIGEgYnVzaW5lc3MuIFlvdSBjYW4gZmxpcCBvbmUsIDEwLCBvciAxMDAgcHJvcGVydGllcy4gQnV0IGZvciB0aGUgcGVyc29uIHdpdGggYSBqb2IsIHRoZXJlIGFyZSBvbmx5IDI0IGhvdXJzIGluIGEgZGF5IGFuZCBtYW55IG9mIHRob3NlIGhvdXJzIGFyZSB0YWtlbiB1cCB3aGlsZSB5b3UncmUgb25seSBnZXR0aW5nIHBhaWQgYW4gaG91cmx5IHJhdGUuLiAKQnVzaCdzIGxhc3QgZGVmZW5zZSBzZWNyZXRhcnksIGFuZCB3aG8gY29tbWFuZHMgY29uc2lkZXJhYmxlIHJlc3BlY3QgZnJvbSB0aGUgcHJlc2lkZW50LCBpcyBleHBlY3RlZCB0byBiZSBwaXZvdGFsIGluIE1yLiAKRXhwbG9kaW5nIGNob2NvbGF0ZXMKKFByaXZhY3kgUG9saWN5KUluZGV4IEV4Y2hhbmdlVGhpcyBpcyBhbiBhZCBuZXR3b3JrLiAKQnV0IHRoZSBlbnRpcmUgcHJlbWlzZSBvZiB0aGUgImdvb2QgZ3V5cyIgaXMgZW50aXJlbHkgTWFjaGlhdmVsbGlhbiwgZXZlbiBhcyB0aGUgImJhZCBndXlzIiBmb2xsb3cgaXQgYXMgd2VsbC4gS3ZvdGhlIGNvbmNsdXNpb25zIGFyZSBzcHVyaW91cyBhbmQgcG9vcmx5IGdyb3VuZGVkIGluIGxvZ2ljLCBidXQgdGhlIG5hcnJhdGl2ZSBoYW5kd2F2ZXMgdGhlc2UgbGVhcHMgdmVyeSBxdWlja2x5IHNvIHRoYXQgeW91IGRvbiBzZWUgdGhlbS4gClVzdWFsbHkgdGhlcmUgYXJlIHR3byBibGluZHMgICBhIHNtYWxsIGJsaW5kIGFuZCBhIGJpZyBibGluZCAgIGluIGVhY2ggcGxheWluZyByb3VuZC4gVGhlIHBsYXllcnMgd2hvIHBvc3QgdGhlIHNtYWxsIGFuZCBiaWcgYmxpbmRzIHJvdGF0ZXMgb25lIHBsYWNlIHRvIHRoZSBsZWZ0IGFmdGVyIGVhY2ggaGFuZC4gCkJhc2ljYWxseSwgbm93IG15IGdvYWwgaXMgdG8gcGxheSBhIHBlcmZlY3QgR1RPIGdhbWUsIHJhdGhlciB0aGFuIGJlIG9ic2Vzc2VkIHdpdGggbWFraW5nIG1vbmV5IChvYnZpb3VzbHkgbW9uZXkgc2hvdWxkIGNvbWUgd2l0aCBhIEdUTyBnYW1lKS4gSSBsaXZlIGluIEFtZXJpY2EgYW5kIEkgdXNlIEFtZXJpY2EgQ2FyZCBSb29tLiAKSnVzdCBsaWtlIHdpdGggcHJhY3RpY2UsIGEgYnVuY2ggb2Ygc3RpY2tzIG9uIHRoZSBmb3Jlc3QgZmxvb3IgYmVjb21lcyBhIGJ1bGxldGluIGJvYXJkIG9mIHdoYXQgYW5pbWFscyBoYXZlIHBhc3NlZCB0aHJvdWdoIGhlcmUsIHRoZSBjb25uZWN0aW9ucyBiZXR3ZWVuIHdoYXQgdGhlIHBlb3BsZSB5b3UgYXJlIHNvY2FsaXppbmcgd2l0aCBhbmQgaG93IHlvdSBhY3Qgd2lsbCBiZWNvbWUgb2J2aW91cy4gWW91IHNob3VsZCBnZXQgZmVlbGluZ3MgdGhhdCB3YW50IHRvIG1ha2UgdGhlbSBsYXVnaCB3aXRoIGEgam9rZSwgYnV0IHdoYXQgSSBqdXN0IGFib3V0IHRvIHNheSB3b250IGRvIGl0IG9yIEkgZG9uIHJlYWxseSB3YW50IHRvIGppdHRlciBhcm91bmQsIHN0b3AgaW50ZWxsZWN0dWFsIHBhcnRzIGNvbWUgaW4gZnJvbSBoZWxwaW5nIHlvdSB0byBkZWNpZGUgd2hhdCB0byBwdXQgaW50byBhd2FyZW5lc3MuIFlvdSBtaWdodCBmaW5kIHRoYXQgYXMgeW91IGNvbnZlcnNlLCB5b3UgaGF2ZSBOTyBhd2FyZW5lc3Mgb2Ygd2hhdCB5b3VyIGJvZHkgaXMgZG9pbmcuIApHcmFkdWFsbHkgZm9sZHMgZG93biB0byAxNSBCQnMgdW50aWwgaGUgbWFrZXMgYSBkZXNwZXJhdGUgc2hvdmUgd2l0aCBLN28gb24gYSA0IHdheSBBIGhpZ2ggZmxvcCBvdXQgb2YgdGlyZWRuZXNzIGFuZCBmcnVzdHJhdGlvbi4gU2hha2VzIGhlYWQgaW4gZGlzZ3VzdCB3aGlsZSBzdGFuZGluZyB1cCBhbmQgbGVhdmluZyB0aGUgdGFibGUuLiAKV2hlbiBJIHdhcyA5IG1vbnRocyBwcmVnbmFudCwgYml0dGVybHkgZmF0IGFuZCB3YWRkbGluZywgYW4gb2xkIG1hbiBzbmFwcGVkIGF0IG1lIGZvciBub3QgbW92aW5nIGZhc3QgZW5vdWdoIHRvIHNlcnZlIGhpbSBhIGJlZXIuIApPZiBjb3Vyc2UgaXQncyBzYWxtb24uIFdoaWNoIGkgcmV0dXJuIGFuZCB0ZWxsIGhlciBwb2xpdGVseSB0aGF0IGl0IGlzIGluZGVlZCBzYWxtb24uIApCcmV4aXQgbGF0ZXN0OiBNUHMgZGlzbWlzcyBFVSBsYXN0IGRpdGNoIGJpZCB0byBzZWN1cmUgZGVhbCB3aXRoIGNvbmNlc3Npb24gb24gdGhlIGJhY2tzdG9wTVBzIGhhdmUgc3dpZnRseSBkaXNtaXNzZWQgdGhlIEVVIGxhdGVzdCBlZmZvcnQgdG8gc2VjdXJlIGEgQnJleGl0IGRlYWwgYWZ0ZXIgdGhlIGJsb2Mgc2FpZCB0aGUgVUsgY291bGQgYmUgYWxsb3dlZCB0byBsZWF2ZSB0aGUgY3VzdG9tcyB1bmlvbiBvZiBpdHMgb3duIGFjY29yZCBpbiBhIGJhY2tzdG9wIHNjZW5hcmlvLiBUaGUgcHJvcG9zZWQgY29uY2Vzc2lvbiBjYW1lIGZyb20gRVUgQnJleGl0IG5lZ290aWF0b3IgTWljaGVsIEJhcm5pZXIganVzdCBkYXlzIGJlZm9yZSBhIHNlY29uZCBtZWFuaW5nZnVsIHZvdGUgb24gVGhlcmVzYSBNYXkgQnJleGl0IGRlYWwgaW4gdGhlIEhvdXNlIG9mIENvbW1vbnMuIApIZSBzcGVudCA0SyBvbiBlYXRpbmcgb3V0IGxhc3QgeWVhci4gCkVkaXQ6IFRoYW5rcyBmb3IgYWxsIHRoZSByZXBsaWVzLiBVbmZvcnR1bmF0ZWx5IEkndmUgbWV0IGEgZmV3IHBlb3BsZSBsaWtlIHRoaXMsIGFsdGhvdWdoIEkndmUgYmVlbiBhYmxlIHRvIGdldCBhd2F5IGZyb20gbW9zdCBvZiB0aGVtLiAKR2VuZXJhbGx5LCB0aGVyZSBhcmUgdGF4IGFkdmFudGFnZXMgdG8gcmVudGluZyBwYXJ0IG9mIHlvdXIgcHJvcGVydHkgYXMgbG9uZyBhcyB0aGF0IHNlY3Rpb24gaXMgdXNlZCBzb2xlbHkgb3IgbWFpbmx5IGFzIHJlbnRhbCBwcm9wZXJ0eS4gSWYgeW91IHJlbnQgYSBzcGFyZSBiZWRyb29tIDEwIG1vbnRocyBvZiB0aGUgeWVhciB3aGlsZSB1c2luZyBpdCBhcyBhIGd1ZXN0IGJlZHJvb20gZm9yIHlvdXIgZmFtaWx5IG9yIGZyaWVuZHMgZHVyaW5nIHRoZSBvdGhlciB0d28gbW9udGhzLCB5b3UgY2Fubm90IGNsYWltIGl0IGFzIGEgdGF4IGRlZHVjdGlvbi4gCkFmdGVyIG9mIGNvdXBsZSBvZiBkZWNhZGVzIG93bmluZyBidXNpbmVzc2VzLCBJJ20gbm8gbG9uZ2VyIGNvbnZpbmNlZCB0aGF0IGEgaGlnaCB0b2xlcmFuY2UgZm9yIHJpc2sgaXMgYSBnb29kIHRoaW5nLiBUaGUgdXBzIGFuZCBkb3ducyBvZiBidXNpbmVzcyBvd25lcnNoaXAgY2FuIHdyZWFrIGhhdm9jIG9uIGZhbWlsaWVzLiAKQmFzZWQgb24gcGxhY2UgbmFtZXMsIENlbHRpYyBzcGVha2luZyBwZW9wbGVzIGFsc28gdmVuZXJhdGVkIHNhY3JlZCBncm92ZXMgKG5lbWV0b24gaW4gR2F1bGlzaDsgbmVtZWQgaW4gT2xkIElyaXNoKSBhcyB3ZWxsIGFzIG9hayB0cmVlcyAoZnJvbSBQcm90byBDZWx0aWMgZGFydSApLiAKUGFya2luLCBCLiwgV2FycmluZXIsIEsuIEFuZCBXYWxzaCwgVi4gClNvIEkgbWVhbiBpZiB5b3Ugd2FudCB0byBhZGQgaW4gdGhhdCBtaXggeW91IGNhbiBidXQgZG9lc24ndCBzZWVtIHRoYXQgc3Vic3RhbnRpYWwgdG8gbWUuIApMZXMgZW5mYW50cyB0YW50IGNvbW1lIGxlcyBnbmllcyBkJ3VuZSBncmFuZGUgc2Vuc2liaWxpdCwgamUgdm91cyBpbnZpdGUgZG9uYyAgZW50cmV2b2lyIGNvbW1lbnQgbGUgbWFzc2FnZSBlbiBtaWxpZXUgc2NvbGFpcmUgcGV1dCBzJ2F2cmVyIHVuIG91dGlsIGRlIHByZW1pZXIgcGxhbiBmYWNlIGF1eCBwcm9ibG1hdGlxdWVzIGFjdHVlbGxlcy4uIApUaGVyZSBhcmUgdHdvIGZpc2hib3dscyBvbiB0aGUgZ3JvdW5kIGZsb29yLCB0aGUgZmlyc3Qgb25lIGhvb2tlZCByb3VuZCB0byB0aGUgcmlnaHQgYWZ0ZXIgeW91IHdhbGsgaW4sIHRoZSBvdGhlciB0byB0aGUgbGVmdCBvZiB0aGF0LiBUaGUgZmlyc3QgZmlzaGJvd2wgY29udGFpbnMgdGhlIGFuZCB0aGUgc2Vjb25kIHRoZSByZWd1bGFyIGdpcmxzLi4gCklmIHlvdSBhIHdvdW5kIHVwIHBlcnNvbiwganVzdCBrbm93IHRoYXQgYW5kIHRha2UgbWVhc3VyZXMgdG8gc2xvdyB5b3Vyc2VsZiBkb3duLiAKSSBkb24gcmVhbGx5IGtub3cgd2h5LiAKUmFkaW9sb2dpY2FsIGNoYW5nZXMgYW5kIGRlZ2VuZXJhdGlvbiBvZiB0aGUgY2VydmljYWwgc3BpbmUgaGF2ZSBiZWVuIHByZXZpb3VzbHkgZGVzY3JpYmVkIGluIHNvY2NlciBwbGF5ZXJzLgpHZXQgcmVkZGl0IHByZW1pdW1TdWJyZWRkaXQgZm9yIHBlb3BsZSB3aG8gYXBwcmVjaWF0ZSBKYXBhbmVzZSBlbmthLgpBbiBleGFtcGxlIHdpbGwgYmUgZWl0aGVyIGhlIGRvZXMgJDEgb3IgJDIgaW4gYSAyLzQgcG9rZXIgZ2FtZS4gVGhlIHNhbWUgcHJvY2VzcyBpcyBhcHBsaWVkIHRvIG90aGVyIHBsYXllciBpbiB0aGUgdGFibGUsIHRoZSBtb3ZlbWVudCBkb25lIGluIGNsb2Nrd2lzZS4gCkl0IGhhcHBlbmVkIGluIG90aGVyIGluc29sdmVuY3kgY29udGV4dHMgd2hlcmUgeW91IHRyeSB0byByaW5nIGZlbmNlIHRoZSBiYWQgYXNzZXRzIGFuZCBzZWxsIHRoZSBnb29kIGFzc2V0cy4gQW5vdGhlciBkZWFsbWFrZXIgcG9pbnRlZCB0byB0aGUgcmVjZW50IGFubm91bmNlbWVudCB0aGF0IEdhcCB3b3VsZCBzcGluIG9mZiBpdHMgYmV0dGVyIHBlcmZvcm1pbmcgT2xkIE5hdnkgZGl2aXNpb24gaW50byBhIHNlcGFyYXRlLCBwdWJsaWNseSB0cmFkZWQgY29tcGFueSB0byBzZXBhcmF0ZSB0aGUgYnJhbmQgd2l0aCBzdHJvbmcgc2FsZXMgZnJvbSB0aGUgd2Vha2VyIG9uZS4gClRoaXMgZG9lcyBub3QgbWVhbiAiYWNjb3VudHMiIG9yIGluZGl2aWR1YWxzIHBsYXlpbmcgYmVjYXVzZSBhbiBhY2NvdW50IGNhbiBoYXZlIG11bHRpcGxlIGhlcm9lcy4gCkpha2UncyBEaW5lciBvd25lciwgTHlsZSBIaWNrcywgc2F5cywgIldoZW4gbXkgZGF1Z2h0ZXIgQ2FycmllIHdhcyBhY2NlcHRlZCBpbnRvIEhhYml0YXQncyBIb21lb3duZXJzaGlwIFByb2dyYW0gaW4gMjAwNiwgSSB3YW50ZWQgdG8gc3RhcnQgYSBmdW5kcmFpc2luZyBlZmZvcnQgdGhhdCB0aGUgcmVndWxhciBKb2UgY291bGQgYmUgYSBwYXJ0IG9mLiBGcmFuayBQYXRrYSwgdGhlIGxhdGUgUmljaGFyZCBTbWl0aCBhbmQgSSBkZXZlbG9wZWQgSG9sZCBFbScgZm9yIEhhYml0YXQsIHdlZWtseSBwb2tlciBnYW1lcyB0byByYWlzZSBtb25leSBmb3IgQmVuZCBBcmVhIEhhYml0YXQuIEZvciBzZXZlcmFsIHllYXJzLCBKYWtlJ3MgRGluZXIgaGFzIGNvbnNpc3RlbnRseSBoYWQgMiAzIHRhYmxlcyBwbGF5aW5nIGV2ZXJ5IE1vbmRheSBuaWdodC4KUGVvcGxlIHNhdmUgb24gdHJhdmVsbGluZyBleHBlbnNlcyBhbmQgb24gdGlwcyB0aGF0IHRoZXkgd291bGQgdHlwaWNhbGx5IGhhdmUgdG8gZ2l2ZSB0aGUgZGVhbGVyLiAKSW5zdXJhbmNlTWFzc2FnZSB0aGVyYXB5IGluc3VyYW5jZSBzaG91bGQgaW5jbHVkZSBjb21wcmVoZW5zaXZlIGdlbmVyYWwsIHByb2R1Y3RzIGxpYWJpbGl0eSwgcGVyc29uYWwgaW5qdXJ5IGxpYWJpbGl0eSwgbWVkaWNhbCBleHBlbnNlLCBzZXh1YWwgYWJ1c2UgbGlhYmlsaXR5IGFuZCBkYW1hZ2UgdG8gcHJlbWlzZXMgaWYgbGVhc2luZyBhIGJ1aWxkaW5nLiBZb3UgbWF5IGFsc28gbmVlZCB3b3JrZXIncyBjb21wZW5zYXRpb24gaW5zdXJhbmNlIGFuZCBjb21tZXJjaWFsIGF1dG8gY292ZXJhZ2UuIFdoaWxlIHNvbWUgc3RhdGVzLCBsaWtlIFRleGFzLCBkbyBub3QgcmVxdWlyZSB0aGF0IHlvdSBoYXZlIGxpYWJpbGl0eSBpbnN1cmFuY2UsIGl0IGlzIHNvbWV0aGluZyB5b3Ugc2hvdWxkIHN0cm9uZ2x5IGNvbnNpZGVyLCBzaW5jZSBhbnlvbmUgd2hvIGJlbGlldmVzIHlvdXIgd29yayBoYXMgY2F1c2VkIHRoZW0gcGh5c2ljYWwgZGlzdHJlc3MgbWF5IGJlIGluY2xpbmVkIHRvIHN1ZSB5b3UsIHdoZXRoZXIgdGhlaXIgY2FzZSBpcyB3aXRoIG1lcml0IG9yIG5vdC4gRXhwZWN0IHRvIHBheSBiZXR3ZWVuICQyMDAgdG8gJDMwMCBhbm51YWxseSBmb3IgbWFscHJhY3RpY2UgYW5kIGdlbmVyYWwgbGlhYmlsaXR5IGNvdmVyYWdlLgpQcm92aWRlZCB5b3VyIGFwcGxpY2F0aW9uIGlzIGFwcHJvdmVkLCB3ZSB3aWxsIGFjY2VwdCBuZXcgcmVnaXN0cmF0aW9ucyBpbnRvIHRoZSBzaG93IGFzIGxvbmcgYXMgd2UgaGF2ZSBzcGFjZS4gCkJlZm9yZSB3ZSBzdGFydCB0aGUgRnV6eiBTcGVlY2ggY2hlY2sgb3V0IHRoaXMgdmlkZW8gKGZhbnRhc3RpYyBlbGVjdHJvbiBtaWNyb3Njb3BlIGltYWdlcyBhdCA0IHRvIDYgbWluIG1hcmspIG9mIERyLiAKVGhpcyBpcyB0aGUgb25lIHRoYXQgc2V0IG1lIG9mZiBsYXN0IG5pZ2h0LCBpdCB3YXMgYWN0dWFsbHkgYXQgdGhlIHRvcCBvZiB0aGUgcG9zdHMgeWVzdGVyZGF5LCBiZWNhdXNlIGl0IGdvdCBzbyBtYW55IHVwdm90ZXMuIEkgYWN0dWFsbHkgYXZvaWRlZCB0aGUgZm9ydW0gZHVyaW5nIHRoZSBLYXZhbmF1Z2ggaGVhcmluZ3MgZm9yIHRoZSBtb3N0IHBhcnQsIGFuZCBhZ2FpbiBhZnRlciBhIGNvdXBsZSB3ZWVrcyBvZiB0aGUgRm9ydGggc3VpY2lkZSwgYmVjYXVzZSBTU0MgZW5kb3JzZXMgdGhlIGN1bHRpdmF0ZWQgZGVsdXNpb25zIG9mIHBlcnNlY3V0aW9uIEkgaW5pdGlhbGx5IGVuY291bnRlcmVkIGFmdGVyIG15IG93biBhdHRhY2suIApKdWRnZSBHYXlub3Igc2FpZCBOaWNob2xhcywgYSBmYXRoZXIgb2YgdHdvLCBoYWQgd2FnZXJlZCBtb3N0bHkgb24gc3BvcnRpbmcgZXZlbnRzIGFuZCBvY2Nhc2lvbmFsbHkgYXQgYSBjYXNpbm8gYnV0IGhhZCBub3QgdXNlZCBwb2tlciBtYWNoaW5lcy4KU28gYnkgbm93IHlvdSBtYXkgYmUgd29uZGVyaW5nIHdoYXQgQ2FzaW5vIFBva2VyIHJlYWxseSBpcywgYW5kIGhvdyBkbyB5b3UgcGxheSBpdD8gTWF5YmUgeW91IHBsYXllZCB0aGlzIGdhbWUgYmVmb3JlIGluIHlvdXIgb3duIGhvdXNlLiBIb3dldmVyIHJlbWVtYmVyIHRoYXQgd2hlbiB5b3UgcGxheSBDYXNpbm8gUG9rZXIgb25saW5lIGl0IGlzIG11Y2ggZGlmZmVyZW50IHRoYW4gcGxheWluZyBpdCBpbiB5b3VyIGhvbWUuIE1ha2luZyBpdCBpbiB0aGlzIGdhbWUgZGVwZW5kcyBvbiBza2lsbCB3aGVyZSB5b3UnbGwgYmUgcGl0dGVkIGFnYWluc3Qgb3RoZXJzIG9ubGluZS4gCkFsbCBJIGNhbiBzYXkgd2l0aCByZWFsIGNvbmZpZGVuY2UgaXMgdGhhdCBpdCB3YXMgYSBsYWJvdXIgb2YgbG92ZSwgYW5kIHdhcyBncmVhdCBmdW4gdG8gbWFrZS4gClBvdXJxdW9pIG5lIHBhcyByZXRyb3V2ZXIgY2V0dGUgY291dGUgaW50dWl0aXZlIGRlIG5vcyBiZXNvaW5zIHNpIG9uIGwnYSBwZXJkdWUgPy4gCkkgd2FzIGEgYmlnIG11c2ljIG5lcmQgc28gc2hlIGpvaW5lZCBiYW5kIGFuZCBjaG9ydXMuIApIaWdoZXIgbGV2ZWxzIG9mIGVzdHJvZ2VuIG1lYW4gYSBzaG9ydGVyIHJpbmcgZmluZ2VyIGNvbXBhcmVkIHRvIHRoZSBpbmRleCBmaW5nZXIgYXMgd2VsbCBhcyBoaWdoZXIgdmVyYmFsIGFiaWxpdHkgW3NvdXJjZXM6IExpdmUgU2NpZW5jZSwgVW5pdmVyc2l0eSBvZiBCYXRoXS4gQSByZWxhdGVkIHN0dWR5IHNob3dlZCB0aGF0IG1hbGUgYWNhZGVtaWNzIGluIHNjaWVuY2UgdGVuZGVkIHRvIGhhdmUgdmVyeSBsaXR0bGUgZGlmZmVyZW5jZSBpbiBkaWdpdGFsIHJhdGlvLCB3aGljaCBtZWFudCB0aGV5IGhhZCBhbG1vc3QgZXF1YWwgbGV2ZWxzIG9mIHRlc3Rvc3Rlcm9uZSBhbmQgZXN0cm9nZW4gICB0aHVzIHBvc3Nlc3NpbmcgYm90aCB2ZXJiYWwgYW5kIG51bWVyYWN5IHNraWxscyBbc291cmNlOiBDdXJ0aXNdLi4gClllYSwgaXQgYWxsIGEgdmFzdCBjb25zcGlyYWN5IHRoYXQgdGhlIGd1eSB3aG8gbGlrZWQgdG8gcGFsIGFyb3VuZCBhbmQgc2xlZXAgd2l0aCBtaW5vcnMgYW5kIHJlcGxhY2VkIHRoZW4gd2hlbiB0aGV5IGFnZWQgb3V0IG9mIHB1YmVydHkgYW5kIGhhZCBwbGF5IHdlZGRpbmcgY2VyZW1vbmllcyBpcyBqdXN0IHRvdGFsbHkgaW5ub2NlbnQgYW5kIG5ldmVyIGRpZCBhbnl0aGluZyBhYnVzaXZlIG9yIHNleHVhbCB3aXRoIHRoZSBib3lzIGhlIHdhcyBncm9vbWluZy4gV2h5IGFsd2F5cyBib3lzPyBXaHkgbm90IGdpcmxzLCB0b28/IFdoeSBhIHVzZSB0aGUgc2FtZSBwYXR0ZXJuIG9mIHRlY2huaXF1ZXM/IFdoeSBoYW5nIGFsb25lIGluIGEgbG9ja2VkIHJvb20gd2l0aCBraWRzPyBUaGVyZSBhIGxvdCBtb3JlIHBvaW50aW5nIHRvd2FyZHMgaGltIGRvaW5nIHRoZXNlIHRoaW5ncyB0aGFuIGhpbSBiZWluZyB0b3RhbGx5IGlubm9jZW50IGFuZCBqdXN0IHBsYXRvbmljIHdpdGggbWlub3IgYm95cy4uIApJdCdzIHlvdXIgYnJlYWQgYW5kIGJ1dHRlci4uIApJIGpvaW5lZCBvbmUgaW4gMjAxNiB3aGVuIEkgZm91bmQgb3V0IEkgd2FzIGV4cGVjdGluZyBteSBmaXJzdC4gV2Ugd2VyZSBhbGwgZHVlIGluIHRoZSBzYW1lIG1vbnRoLCBhbmQgc28gbW9zdCBvZiB0aGUgdGltZSBJIGRpZG4gaGF2ZSB0byBhc2sgYW55IHF1ZXN0aW9ucyBiZWNhdXNlIHRoZXJlIHdlcmUgd29tZW4ganVzdCBhIGZldyB3ZWVrcyBhaGVhZCBvZiBtZSB3aG8gd2VyZSBzaGFyaW5nIHRoZWlyIGV4cGVyaWVuY2VzIGFuZCBpdCByZWFsbHkgbWFkZSB0aGluZ3MgYSBsb3QgbGVzcyBzdHJlc3NmdWwgYW5kIEkgc29ydCBvZiBrbmV3IHdoYXQgdG8gZXhwZWN0IGF0IG15IGRvY3RvcnMgYXBwb2ludG1lbnRzIGJhc2VkIG9uIGV2ZXJ5b25lIGVsc2UgZXhwZXJpZW5jZXMuIEkgdGhpbmsgd2hlbiBvdXIgYmFiaWVzIHdlcmUgYWxsIGFyb3VuZCA2aXNoIG1vbnRocyB0aGUgZ3JvdXAgaW1wbG9kZWQuIApBbHMgbWFuIGplZG9jaCBlbnRkZWNrdGUsIGRhc3MgZGVyIEtvcGYgZWluZXMgTW9ocmVuIHMgdW5kIGxlY2tlciBzY2htZWNrdGUsIHd1cmRlbiBkaWUgbmljaHQgbWVociB2ZXJrdWZsaWNoZW4gTW9ocmVuIGt1cnplcmhhbmQgZ2VrcGZ0IHVuZCBkaWUgS3BmZSBhbHMgS29sb25pYWx3YXJlbiBuYWNoIEV1cm9wYSB2ZXJzY2hpZmZ0LkltIDIwLiAKVGhlIGJyZWFrZmFzdCBidWZmZXQgcnVucyBldmVyeSBtb3JuaW5nIGJ1dCBTdW5kYXksIGFuZCBGcmlkYXkgaXMgdGhlIGFsbCB5b3UgY2FuIGVhdCBkaW5uZXIgYnVmZmV0LiAKQWZ0ZXIganVzdCBhIHNpbmdsZSwgZml2ZSBtaW51dGUgdHJlYXRtZW50IEkgc2F3IGEgZHJhbWF0aWMgaW5jcmVhc2UgaW4gbXkgcmFuZ2Ugb2YgbW90aW9uLiAKRmVsdCBwcmV0dHkgZ29vZC4gVGhlbiB0aGUgbmV4dCB3ZWVrIEkgc2VlIE1TIGNoYXJnZXMgb24gbXkgY3JlZGl0IGNhcmQuIFR1cm5zIG91dCBJIGhhZCBmb3Jnb3R0ZW4gdG8gc2lnbiBvdXQgb2YgdGhlIHhib3ggKG9vcHMpIGFuZCB0aGV5IGNoYXJnZWQgYSBmZXcgaHVuZHJlZCBkb2xsYXJzIHRvIE1pY3Jvc29mdCBQb2ludHMgYW5kIHRoZW4gYm91Z2h0IGEgYnVuY2ggb2YgZ2FtZXMgdGhhdCB0aGV5IGhhZCBzZW50IHRvIGEgUE8gQm94LiAKSW4gS29yZWEgd2hlcmUgSSBsaXZlIG5vdywgSSBnbyBvdXQgYSBsb3QgYW5kIGhhdmUgbmV2ZXIgc2VlbiBhbiBhY3R1YWwsIGZ1bGwgb24gcGh5c2ljYWwgZmlnaHQgdGFrZSBwbGFjZSwgdGhlIG1vc3Qgd2FzIG1heWJlIHNvbWUgYWdncmVzc2l2ZSBwdXNoaW5nLiAKSW4gMjAxNCwgdGhlIGZvdW5kYXRpb24gc3BlbnQgJDU1MSwwMDAgb24gbWFya2V0aW5nLCBldmVudHMgYW5kIG90aGVyIG9wZXJhdGluZyBjb3N0cyBidXQgb25seSBhY3R1YWxseSByYWlzZWQgJDQ1MiwwMDAuIApROiBTbWFydCBhbmQgYmlnIHNwZW5kaW5nIGhhcyBsZWQgdG8gYSBsb3Qgb2Ygc3VjY2Vzcy4KTXkgcG9vciBzaXN0ZXIgaW4gbGF3LCB3aG8gb25seSBoYWQgYSBwb3RhdG8gZm9yIGRpbm5lciwgYW5kIEkgZGVjaWRlZCBuZXh0IHllYXIgd2UncmUganVzdCBicmluZ2luZyBvdXIgb3duIGZvb2QgYmVjYXVzZSB0aGlzIHNoaXQgaXMgZ2V0dGluZyByaWRpY3Vsb3VzLi4gCkkgZG9uIGhhdmUgY2hpbGRyZW4gYnV0IEkgY2FuIGltYWdpbmUgaGF2aW5nIGEgbWlzc2luZyBjaGlsZCBhbmQgTEUgd2Fsa2luZyBhd2F5LiAKTmVnb3RpYXRlZCBzZXR0bGVtZW50cyBhcmUgdGhvdWdodCB0byBiZSB0aGUgcHJlZmVycmVkIHdheSB0byByZXNvbHZlIGZhbWlseSBsYXcgaXNzdWVzIGFzIHRoZXNlIHNldHRsZW1lbnRzIGF2b2lkIGxpdGlnYXRpb24uIApJIHRoaW5rIHRoaXMgaXMgYW5vdGhlciBzb2NpYWwgc3RpZ21hIGNhdXNpbmcgaXNzdWVzLiBKdXN0IGJlY2F1c2UgeW91IGF0dHJhY3RlZCB0byBzb21lb25lIGRvZXNuIG1lYW4geW91IGdvaW5nIHRvIHJ1biBhcm91bmQgcmFwaW5nIGFuZCBtb2xlc3RpbmcgdGhlbS4gVGhhdCBsaWtlIGNsYWltaW5nIGFsbCBtZW4gaW4gSG9sbHl3b29kIGRydWcgYW5kIHJhcGUgcGVvcGxlIGJlY2F1c2Ugb2YgdGhlIGhhbmRmdWwgb2YgcGVvcGxlIGluIHRoZSBuZXdzIHRoZSBsYXN0IGZldyB5ZWFycy4gCkFsdGhvdWdoIHRoYXQgc3RhcnQgZGF0ZSB3aWxsIG5vdCBiZSBtZXQsIGNhc2lubyBvZmZpY2lhbHMgZXhwZWN0IHRoZSBvcGVuaW5nIHRvIG9ubHkgYmUgZGVsYXllZCBieSB3ZWVrcy4gT2ZmaWNpYWxzIHNhaWQgdGhleSBzaG91bGQga25vdyB0aGVpciB0YXJnZXQgZGF0ZSBieSB0aGUgZW5kIG9mIEp1bmUuLiAKV2UgYWltIHRvIGNyZWF0ZSBhIHNhZmUgYW5kIHZhbHVhYmxlIHNwYWNlIGZvciBkaXNjdXNzaW9uIGFuZCBkZWJhdGUuIFRoYXQgbWVhbnM6CkJvb2JzIGFyZSBjb21wbGV0ZWx5IGFuY2lsbGFyeSB0byB0aGUgcHJvY2VzcywgdGhvdWdoLiBCaWcgYm9vYnMsIHNtYWxsIGJvb2JzLCBib29icyBwb2ludGluZyBpbiBkaWZmZXJlbnQgZGlyZWN0aW9ucy4gYXMgbG9uZyBhcyBJIGdldCBib29icywgSSBoYXBweS4gSSBsb3ZlIGJvb2JzLgpBIGhlYXJ0IGdldHMgYnJva2VuIGEgZmV3IHRpbWVzLCBpdCBidWlsZHMgdXAgYSB0b3VnaCBzaGVsbCB0aGF0IHN0b3BzIGl0IGZyb20gZXZlciBicmVha2luZyBhZ2Fpbiwgb3IgYXQgbGVhc3QgZnJvbSBicmVha2luZyBpbnRvIGEgbWlsbGlvbiBwaWVjZXMgYWdhaW4uIHRoZSB3YXkgaXQgaXMgZm9yIHRob3NlIG9mIHVzIHdobyBhY3R1YWxseSBvcGVuZWQgb3VyIGhlYXJ0cyBhbmQgb3VyIHdhbGxldHMgYW5kIG91ciBsaXZlcyB0byBnZXR0aW5nIFByZXNpZGVudCBPYmFtYSBlbGVjdGVkLiAKR2V0IGEgbWVudG9yLiBTb21lb25lIHdobyBoYXMgYmVlbiBkb2luZyBpdCBmb3IgYSB3aGlsZS4gTWVldCB3aXRoIHRoZW0gcmVndWxhcmx5LiAKVGhlIGNvbnRleHQgdGhleSBleGlzdCBpbiBpcyBkaWZmZXJlbnQgdGhhbiB5b3Vycy4gCkFsc28sIGJlZm9yZSBJIHdlbnQgdG8gdGhlIGRvY3RvciBJIGhhZCBhYnN0YWluZWQgZnJvbSBzZXh1YWwgYWN0aXZpdHkgZHVlIHRvIHRoZSBwYWluL3dvcnJ5LiBUaGUgZGF5IEkgc2F3IHRoZSBkb2N0b3IgYW5kIHN0YXJ0ZWQgbWVkcyBJIG1hc3R1cmJhdGVkIGFuZCBub3RpY2VkIHRoYXQgbXkgZWphY3VsYXRpb24gd2FzIG9mZiBjb2xvciBhbmQgY2xlYXJseSBpbmZlY3RlZC4gQWx0aG91Z2ggY3VtbWluZyB3YXMga2luZCBvZiBwYWluZnVsIGl0IGRpZCByZWxpZXZlIHNvbWUgb2YgdGhlIG92ZXJhbGwgcHJlc3N1cmUgYW5kIEkgdGhpbmsgaGVscGVkIHNwZWVkIHVwIHJlY292ZXJ5IGJ5IGdldHRpbmcgc29tZSBvZiB0aGUgaW5mZWN0aW9uIG91dC4gTm90ZTogSSBub3QgYSBkb2N0b3IsIHRoYXQganVzdCBteSBwZXJzb25hbCBleHBlcmllbmNlLiBIb3BlIHlvdSBmZWVsIGJldHRlciBzb29uLgpOVU1CRVJTIEdBTUUxOS4gClRoZSBwcm9ibGVtIHdhc24gaGVyIG9yIGFueXRoaW5nIHNoZSByZXNwb25zaWJsZSBmb3IsIGl0IHlvdXIgaXNzdWVzLiBUaGVzZSBhcmUgd29yZHMgeW91IGRvIG5vdCBzYXkgdG8gY29tbXVuaWNhdGUgIkkgdW5kZXJzdGFuZCB5b3VyIHRyb3VibGVzIiBvciAiSSBkaWRuIGtub3cgSSBjYXVzZWQgc28gbWFueSBpc3N1ZXMgYmV0d2VlbiB1cyIuIFRoZXkgYXJlIHdvcmRzIHlvdSBzYXkgdG8gY2xlYXJseSBzdGF0ZTogeW91IGFyZSBhIHRyb3VibGVkLCBwcm9ibGVtYXRpYyBwZXJzb24gYW5kIG5vbmUgb2YgdGhpcyBpcyBteSByZXNwb25zaWJpbGl0eS4uIApXaGVyZSBJIGxpdmUgYW5kIHdoZXJlIEkgd29yayBhcmUgYSBiaXQgZGlmZmVyZW50LiBJIHJlbnQgYSByb29tIGluIDMgYmVkcm9vbSB3aXRoIGEgZnJpZW5kIG9mIG1pbmUgaW4gYSBxdWlldCB1bml2ZXJzaXR5IHN1YnVyYi4gVGhlcmUgaXMgYSBsaXR0bGUgYml0IG9mIGNyaW1lLCBtb3N0bHkga2lkcyBzaG9vdGluZyBiYiBndW5zIGF0IHdpbmRvd3MuCkhpLCB3ZSBoYXZlIGJvb2tlZCBhIDIgbmlnaHQgc3RheSBhdCB5b3VyIEhvdGVsIChTZWNvbmQgeWVhciBpbiBhIHJvdykgYW5kIGFyZSBhcnJpdmluZyBhdCBSU1cgZnJvbSB0aGUgVUsgKFZpYSBBdGxhbnRhKSBvbiAyMi8wOS8xNiBhdCAyMC40OGhycy4gCkhvdyBkbyB5b3Ugc3RhcnQgeW91ciBjYXJlZXIgYXMgYSBwcm9mZXNzaW9uYWwgcG9rZXIgcGxheWVyClRoZSBsYWR5IHdhcyBhbHNvIG1hcmtlZCBhcyBtb3JlIGV2b2x2ZWQgdGhhbiBub24gd2hpdGUgd29tZW4sIGVzcGVjaWFsbHkgQWZyaWNhbiBhbmQgQWZyaWNhbiBBbWVyaWNhbiB3b21lbi4gbGFkeSB3YXMgbW9yZSBldm9sdmVkIGJlY2F1c2Ugc2hlIHdhcyBsZXNzIGxpa2UgbWVuIChtb3JlIGdlbmRlciBkaWZmZXJlbnRpYXRlZCBpbiBldm9sdXRpb25hcnkgdGVybXMpLiBsYWR5IHdhcyBub3QgYWdncmVzc2l2ZSBvciB2aW9sZW50IG9yIHNleHVhbCBvciBldmVuIGFuIGFjdGl2ZSBhZ2VudC4gdGhlIHBlcmZlY3QgdmljdGltLgpPTUcgdG9vIHBlcmZlY3QgYW5kIHRvbyB0aW1lbHkhIEkgaGF2ZSBhIGNvdXBsZSBvZiBpc3N1ZXMgYW5kIGEgY291cGxlIG9mIHRoaW5ncyBmcm9tIG15IHBhc3QgdGhhdCBjb21lIHVwIGFuZCB0YWtlIE9WRVIgbXkgdGhvdWdodCBwcm9jZXNzLiBJdCBsaXRlcmFsbHkgY3JhbXBzIG15IGJyYWluIGFyZWEuIFNpdHRpbmcgaW4gYSBxdWlldCBwbGFjZSBhbmQgYnJlYXRoaW5nIGluIGFuZCBvdXQgdW50aWwgSSByZWxheGVkIHdvcmtlZCB3b25kZXJzLiAKMjQwMCByZW50IHNob3VsZCBiZSB3YXkgb3V0IG9mIGJvdGggeW91ciByYW5nZS4gWW91IGhhdmUgYSBuZXQgc2F2aW5ncyBvZiA0MGsgYWZ0ZXIgeW91ciBkZWJ0LiAKVGlueUJsdWVTdGFycyAgMiBwb2ludHMgIHN1Ym1pdHRlZCA3IGRheXMgYWdvCldhcyBhbiBpbnNwaXJhdGlvbiwiIEphbWVzIHNhaWQuIFdhcyB0aGUgbGlnaHRuaW5nIGluIGEgYm90dGxlIGZvciBtZSwgYmVjYXVzZSBJIHdhbnRlZCB0byBiZSBsaWtlIGhpbS4iLiAKTXMuIFNhcnRvcmksIE1zLiBRaW4gYW5kIERyLiBQeWtlLCB0aGUgbGV0dGVyIGJlZ2lucywgYWRkcmVzc2luZyBwdWJsaWMgc2Nob29sIGJvYXJkIGNoYWlycGVyc29uIEplc3NpY2EgU2FydG9yaSwgdHJ1c3RlZSBMaW5kYSBRaW4gYW5kIHN1cGVyaW50ZW5kZW50IFNoYXJvbiBQeWtlLgpQaGlsaXBwaW5lIHBvbGljZSBoYXZlIGlkZW50aWZpZWQgdGhlIGd1bm1hbiBpbiBGcmlkYXkncyBkZWFkbHkgYXR0YWNrIG9uIGEgY2FzaW5vIGluIHRoZSBjYXBpdGFsLCBNYW5pbGEsIGFzIGEgaGVhdmlseSBpbmRlYnRlZCBGaWxpcGlubyB3aG8gd2FzIGhvb2tlZCBvbiBnYW1ibGluZy4KVGhlIHBva2VyIGxlYWRlcnMgYXJlIHNlZW4gd2l0aCBzb21lIGV4Y2VwdGlvbmFsIHBva2VyIHByb2R1Y3RzIGxpa2UgU2lsdmVyIEJ1ZCBMaWdodCBTcGlubmVyIFBva2VyIENhcmQgUHJvdGVjdG9yLiAKV2hlbiBzdHVkaWVzIGFyZSBub3QgYmxpbmRlZCB0aGVyZSBhcmUgY29uY2VybnMgd2l0aCB0aGUgcmVzdWx0cyBkdWUgdG8gdGhlc2Ugc3ViamVjdGl2ZSBtZWFzdXJlbWVudHMuIApIYW5kcyB0byBBdm9pZCBHYW1lIFNlbGVjdGlvbgpDaG9jb2xhdGUgY2hpcHMxIGMuIEJ1dHRlcnNjb3RjaCBjaGlwczEgYy4gRmxha2VkIGNvY29udXQxIGNhbiBjb25kZW5zZWQgc3dlZXRlbmVkIG1pbGtNaXggYnV0dGVyIGdyYWhhbSBjcmFja2VyIGNydW1icyBhbmQgcGF0IGludG8gMTN4OSIgcGFuLiAKT24gdGhlIG5ldyBEaXNjb3ZlcnkgQ2hhbm5lbCBzaG93LCB0aGUgcGFpciB0cmF2ZWwgdGhlIGdsb2JlIHRvIHRyYWluIGFuZCBmaWdodCBpbiBhIHZhcmlldHkgb2YgbWFydGlhbCBhcnRzIHdpdGggbG9jYWwgbWFzdGVycy4gCkkganVzdCBnb2luZyB0byBwb3N0IG15IHBlcnNwZWN0aXZlIGhlcmUgZnJvbSB3aGVuIHRoaXMgcGFydGljdWxhciBydWxlIHdhcyBtYWRlIGFuZCBzb21lIGluc2lnaHQgaW50byBvdXIgcHJhY3RpY2UuIFdoZW4gd2Ugd2VyZSB3b3JraW5nIG9uIHRoZXNlIG9yaWdpbmFsbHksIHRoaXMgd2FzIGFjdHVhbGx5IGFuIGFkZCBieSBzb21lb25lIHdobyBpc24gb24gdGhlIG1vZGVyYXRpb24gdGVhbSBhbnkgbG9uZ2VyLiBUaGUgaWRlYSBiZWhpbmQgaXQgd2FzIHRoYXQgaXQgd2FzIHNvbWV0aGluZyB3ZSBmaWd1cmVkIGNvdWxkIHJhaXNlIHRoZSBkaXNjb3Vyc2UgYSBiaXQuIApMZXQncyB0YWtlIGEgbG9vayBiYWNrIGF0IGEgY2FyZWVyIHRoYXQncyBsb25nIHRocml2ZWQgb24gIm9iamVjdGlmaWNhdGlvbiI6VGhlcmUgd2VyZSBubyBjb21wbGFpbnRzIGFib3V0IHRoZSBtZWRpYSdzICJzcG9ydGxpa2Ugc2NydXRpbnkiIGFuZCBzZXhpc20gaW4gMTk5Niwgd2hlbiBBbmlzdG9uIHBvc2VkIG5ha2VkIGZvciB0aGUgY292ZXIgb2YgLCBsYW5ndWlkbHkgbHlpbmcgb24gYSBiZWQsIHdpdGggaGVyIHdlbGwgdG9uZWQgYnV0dCBpbiBhbGwgaXRzIHNvZnQgZm9jdXNlZCBnbG9yeS4gTm9yIGRpZCB0aGUgIkZyaWVuZHMiIHN0YXIgZGVjcnkgdGhlIGh1bmRyZWRzIG9mIG1hZ2F6aW5lcyB0aGF0IGxhdGVyIGZlYXR1cmVkIGhlciBmbGF1bnRpbmcgaGVyIGNsZWF2YWdlIG9uIHRoZWlyIGNvdmVycy4gKEV0IHR1LCBWb2d1ZT8pLiAKQnJlZiwgdW4gcmVwYXMgc2F2b3VyZXV4IGV0IHJpY2hlbWVudCBwYXJmdW0uCkFsc28sIHRyeSB0byByZW1lbWJlciB0aGF0IGluIGdhbWJsaW5nIHBva2VyLCB5b3Ugc2hvdWxkIG5ldmVyIGxvc2UgeW91ciB3aW5uaW5ncy4gVHJ5IHRvIGxlYXZlIHRoZSBhcmVhIHdoZW4geW91IGFyZSBhbHJlYWR5IGZpbmlzaGVkLiBEbyBub3Qgc3RheSBsb25nZXIgdGhhbiB5b3UgY2FuIGFmZm9yZC4gWW91IG1pZ2h0IGp1c3QgZW5kIHVwIGdhbWJsaW5nIG1vcmUgbW9uZXkgYW5kIHJpc2tpbmcgbW9yZSBtb25leS4KTWFrZSBzdXJlIHRoZXkgaGF2ZSBhZGVxdWF0ZSBjdXN0b21lciBzdXBwb3J0IGFuZCByZXBseSB0byBwbGF5ZXJzIGluIGEgdGltZWx5IG1hbm5lci4KSW4gbGl2ZSBpbSBzdXJwcmlzZWQgeW91IGZvbGRlZCBvdXQgMiBwZW9wbGUuIApIZSdzIGJlZW4gbHVja3kgZW5vdWdoIHRvIGhhdmUgYmVlbiBhYmxlIHRvIGZpbmlzaCBoaXMgZGVncmVlIHdoaWxlIHdvcmtpbmcgZnVsbCB0aW1lLiAiV29yayBoYXMgYmVlbiByZWFsbHkgZ29vZCBhbmQgdW5kZXJzdGFuZGluZywiIGhlIHNhaWQuIApDYWxob3VuLCB3aG8gaXMgdGhlIHNwZWNpYWwgYXNzaXN0YW50IHRvIFVDb25uIGF0aGxldGljIGRpcmVjdG9yIFdhcmRlIE1hbnVlbCwgcmVjZW50bHkgdG9sZCBFU1BOIHRoYXQgaGUgd2FzIGluIGdvb2QgaGVhbHRoIGFuZCB3b3VsZG4ndCBydWxlIG91dCBhIHJldHVybiB0byBjb2FjaGluZy4gV2hlbiByZWFjaGVkIGZvciBjb21tZW50IG9uIEZyaWRheSBtb3JuaW5nLCBDYWxob3VuIGRlY2xpbmVkIHRvIHRhbGsgc3BlY2lmaWNhbGx5IGFib3V0IGFueSBpbnRlcmVzdCBpbiB0aGUgQkMgam9iLiBIb3dldmVyLCBoZSBkaWQgbm90IHJ1bGUgb3V0IGhpcyBpbnRlcmVzdCBpbiByZXR1cm5pbmcgdG8gdGhlIHNpZGVsaW5lcy4uIApTaW5jZSBKYW51YXJ5LCAxMiBidXNpbmVzc2VzIGhhdmUgYmVlbiBjbG9zZWQgYW5kIDU1IHBlb3BsZSBoYXZlIGJlZW4gYXJyZXN0ZWQgb24gYWxsZWdhdGlvbnMgdGhhdCBpbmNsdWRlIG1hc3NhZ2Ugd2l0aG91dCBhIGxpY2Vuc2UscHJvc3RpdHV0aW9uIGFuZCBvYnN0cnVjdGlvbi4gClNoZSB0b29rIG5vIHByaXNvbmVycyBpbiB0aGUgcG9vbCwgImJ1dCBvdXQgb2YgdGhlIHdhdGVyLCBzaGUgd2FzIGEgbG92ZWx5IHlvdW5nIGdpcmwiLiBEZXRlY3RpdmUgUmljaGFyZCBHYXV0IGlzIGEgdGFsbCBhbmQgZWFybmVzdCA0MyB5ZWFyIG9sZCB3aXRoIGNsb3NlbHkgY3JvcHBlZCBicm93biBoYWlyIGFuZCBhIG1pbGQgZGVtZWFub3VyLiBTaW5jZSB0YWtpbmcgY2hhcmdlIG9mIHRoZSBodW50IGZvciBUZWdhbiBuZWFybHkgdGhyZWUgeWVhcnMgYWdvLCBoZSBoYXMgZm9sbG93ZWQgaHVuZHJlZHMgb2YgbGVhZHMsIHRyYXdsZWQgdGhyb3VnaCBiaXJ0aCByZWdpc3RlcnMgYW5kIGVsZWN0b3JhbCByb2xscyBhbmQgc3Bva2VuIHRvIGRvemVucyBvZiBtZW4gbmFtZWQgQW5kcmV3IE1vcnJpcyBvciBOb3JyaXMuIApJbiBhICQ1LzEwIGdhbWUgaXQgbWF5IGJlIGEgZG9sbGFyLiAKV2UnbGwgaGF2ZSB0byB3YWl0IGFuZCBzZWUuLiAKUXVhbGl0eSBpcyBhbm90aGVyIGh1Z2UgY29uc2lkZXJhdGlvbi4gQW55dGhpbmcgY2FuIGJlIGNvbnNpZGVyZWQgb2xkICAgc2hvZXMsIGNsb3RoZXMsIGNhcnMsIGVsZWN0cm9uaWNzLiAKL3UvZnNoYXJwZXIgYW5kIC91L0xlSGFza2VsbFVzZXI6IHlvdSBhcmUgYm90aCB3ZWxsIG9uIHlvdXIgd2F5IHRvIHJlY2VpdmluZyBhbiBvZmZpY2lhbCB3YXJuaW5nLCBpZiB5b3UgY29udGludWUgd2l0aCB0aGlzIGRpc3J1cHRpdmUgYmVoYXZpb3VyLiBQbGVhc2Ugc3RvcC4gWW91IHdvdWxkIGluc3RhbGwgbGVucyBhcyBhZHZpc2VkIGJ5IHNvbWUgb25saW5lIHR1dG9yaWFsIHlvdSB3ZXJlIHJlYWRpbmcsIHRoZW4gaW5zdGFsbCBzb21lIGFyY2FuZSwgdW5tYWludGFpbmVkIG1hdGhlbWF0aWNhbCBsaWJyYXJ5IHRvIHdvcmsgb24gYSBQcm9qZWN0IEV1bGVyIHF1ZXN0aW9uLCBhbmQgdGhlbiBzdWRkZW5seSB5b3VyIEdIQyBpbnN0YWxsYXRpb24gd291bGQgYmUgdXR0ZXJseSB1bnVzYWJsZSBkdWUgdG8gbGlicmFyeSBjb25mbGljdHMgKHRoZSAiYnV0dGVyZmx5IGVmZmVjdCIpLgpIaWdoZXIgZWR1Y2F0aW9uIHRvIGJlY29tZSBtb3JlIGZhaXIsIHdlIGhhdmUgdG8gbWFrZSBvdXIgZWxlbWVudGFyeSBhbmQgaGlnaCBzY2hvb2wgZWR1Y2F0aW9uIG1vcmUgZmFpci4gCk5hbmN5IFBlbG9zaSBSRUFEUyB0aHJvdWdoIFRydW1wJ3MgU3RhdGUgb2YgdGhlIFVuaW9uCiJUaGUgaWRlYSB0aGV5IGFyZSBnb2luZyB0byBoYXZlIHNpeCBjYXNpbm9zIChpbiBRdWVlbnNsYW5kKSwgSSBtZWFuIHRoZXkgYXJlIHR1cm5pbmcgaXQgaW50byBhIE5ldmFkYSwiIE1yIE1heW5lIHNhaWQuCkxlYXZlIGl0IGF0IGhvbWU6IEl0IHdpbGwgc3RpbGwgYmUgaWxsZWdhbCB0byBjYXJyeSBjYW5uYWJpcyBhY3Jvc3MgQ2FuYWRhJ3MgaW50ZXJuYXRpb25hbCBib3JkZXJzLiAKSXQncyBtb3JlIGFib3V0IGhvdyBlbnRyZW5jaGVkIHRoZSBjb25zZXJ2YXRpdmUgTUlDIGlzIGluIGdvdmVybm1lbnQgYW5kIGhvdyBtdWNoIHRoZXkgcmVhbGx5IGRyaXZlIHBvbGljeSBhbmQgc3RyYXRlZ3kuIEl0J3Mgc3RyYW5nZSB0byBtZSB0aGF0IHBlb3BsZSBzdXBwb3J0IFRydW1wIGFuZCB0aGluayBoZSBpcyBvbiB0aGVpciBzaWRlIGJlY2F1c2UgaGUgaGFzIGNvbXBsZXRlbHkgZW5hYmxlZCB0aGUgb2xkIGd1YXJkIGFuZCBjb21wbGV0ZWx5IHJlbW92ZWQgYW55IHByb2dyZXNzIHRoYXQgT2JhbWEgdHJpZWQgdG8gaW1wbGVtZW50LCBhbGJlaXQgcG9vcmx5LgpMZXMgamV1bmVzIGNoaW5vaXNlcyBxdWkgIG1hc3NlbnQgIGRhbnMgbGVzIHNhbG9ucyBkZSBtYXNzYWdlIGR1IElYZSBmb250IGxhIGZvcnR1bmUgZGUgY2VydGFpbnMgZGUgbGV1cnMgY29tcGF0cmlvdGVzIHBldSBzY3J1cHVsZXV4IGV0IHF1J29uIHBvdXJyYWl0IGFwcGVsZXIgZW4gYm9uIGZyYW5haXMgcHJveG50ZXMsIG1hcXVlcmVhdXgsIHNvdXRlbmV1cnMsIHByb3RlY3RldXJzLiBFbiBjaGlub2lzLCBxdWVsIGVzdCBsZSBwaWN0b2dyYW1tZSBkaiBxdWkgZGZpbml0IGxhIGZvbmN0aW9uID8KWmF1eHN0ICA3IHBvaW50cyAgc3VibWl0dGVkIDkgZGF5cyBhZ28KRm9yIGV4YW1wbGUsIGluIGEgNm1heCBnYW1lLCBpZiB3ZSBvcGVuIFVURywgcG9rZXJzbm93aWUgc2F5cyB0aGF0IG9ubHkgQUtzLCBRUSsgaGF2ZSBFViA+IDEuNWJiLiAKSUdJIFN0cmFpZ2h0IE4gR28gQ29yZGxlc3MgSGFpciBTdHJhaWdodGVuZXIgaXMgdGhlIHBlcmZlY3QgdG9vbCBmb3IgdGhlIHBlcnNvbiB3aG8gd2FudHMgdG8gbG9vayB0aGVpciBiZXN0IGJ1dCBpcyBhbHdheXMgb24gdGhlIGdvLiAKUG9zaXRpdml0eSBhbmQgYmVsaWVmLCBhcyBjbGljaGUgYXMgaXQgc291bmRzLCBpcyBwYXJhbW91bnQgdG8gc3VjY2Vzcy4uIApEYW5pZWwgTmVncmVhbnUgaXMgb25lIG9mIHRob3NlIHJhcmUga2luZHMgb2YgUG9rZXIgUGxheWVycyB3aG8gYXJlIGhpZ2hseSBpbnZvbHZlZCBpbiB0aGUgcmVzZWFyY2ggdG8gbWFrZSB0aGUgbmF0dXJlIG9mIHBva2VyIGdhbWVzIGZhciBtb3JlIGludGVyZXN0aW5nIGFuZCBlYXN5IHRvIHdpbiBhbGwgdGhlIHRpbWUuIFRoaXMgYXJ0aWNsZSBwci4KNSAxMCB5ZWFycyBhZ28gaGUgd291bGQgaGF2ZSBiZWVuIG15IGFic29sdXRlIGlkZWFsIGNhbmRpZGF0ZSwgcHVyZWx5IGJlY2F1c2Ugb2YgbXkgcG9zaXRpb25zIG9uIHNvY2lhbCwgc2NpZW50aWZpYywgYW5kIHRlY2hub2xvZ2ljYWwgaXNzdWVzLiBBbGwgb2Ygd2hpY2ggYXJlIHZpdGFsIGFuZCBvZnRlbiBvdmVybG9va2VkIGluIHByZXNpZGVudGlhbCBwbGF0Zm9ybXMuQnV0IHRoZSBvbGRlciBJIGdldCB0aGUgbW9yZSBJIHJlYWxpemUganVzdCBob3cgaW1wb3J0YW50IGZvcmVpZ24gcG9saWN5IGlzLCBlc3BlY2lhbGx5IHdoZW4gZGVhbGluZyB3aXRoIG5hdGlvbnMgdGhhdCB3YW50IG5vdGhpbmcgbW9yZSB0aGFuIHRvIHNlZSB0aGUgVVMgZmFsbCBpbnRvIG9ibGl2aW9uLiAKTXkgcGFyZW50IGhhdmUgdHdvIGJlYSBidWxscyAoYmVhZ2xlIGJ1bGxkb2cgbWl4ZXMpLiAKSSBlbmQgd2l0aCBleHRyZW1lIGFwcHJlY2lhdGlvbiBmb3IgdGhpcyB2aWRlby4gV2hpbGUgdGhpcyB2aWRlbyBtYXkgbm90IHdvcmsgZm9yIG15IGZyaWVuZCwgSSB0aGluayBpdCBpcyBpbXBvcnRhbnQgZm9yIG1hbnksIG1hbnkgcGVvcGxlIGluIHRvZGF5IHdvcmxkIGFuZCBJIHJlYWxseSBnbGFkIHlvdSBtYWRlIHRoaXMuIEkgaG9wZSBtb3JlIHBlb3BsZSB0YWtlIHRoZSB0aW1lIHRvIGN1bHRpdmF0ZSB0aGVpciBzb2NpYWwgdGllcy4gTXkgYmVzdCBmcmllbmQgKG5vdCBhZG9wdGlvbiByZWxhdGVkKSBoYWQgdGVycmlibGUgY2hpbGRob29kIGFidXNlLCBhbmQgc2hlIGlzIGVzdHJhbmdlZCBmcm9tIGhlciBiaW9zLiBIZXIga2lkcyBoYXZlIGJlZW4gdG9sZCBhZ2UgYXBwcm9wcmlhdGUgaW5mb3JtYXRpb24gYWJvdXQgd2h5IHRoZWlyIGdyYW5kbW90aGVyIGlzbiBhbGxvd2VkIHRvIGNvbnRhY3QgdGhlbSwgYW5kIHRoYXQgdGhleSB3aWxsIGJlIHRvbGQgbW9yZSBhcyB0aGV5IGdyb3cgb2xkZXIgd2hlbiBhcHByb3ByaWF0ZS4gKFdoZW4gbmVjZXNzYXJ5LCB0aGV5IGFyZSByZW1pbmRlZCB3aXRoIGV4YW1wbGVzIG9mIG90aGVyIChraWQgc2FmZSkgc2l0dWF0aW9ucyBhYm91dCBhZ2UgYXBwcm9wcmlhdGVuZXNzLCBsaWtlIGNvb2tpbmcgb24gdGhlIHN0b3ZlIHdpdGggLyB3aXRob3V0IHN1cGVydmlzaW9uLikKTW9yZSBvZnRlbiBvbmx5IGxvdyBwYXlpbmcgcGFydCB0aW1lIHdvcmsgaXMgYXZhaWxhYmxlLCBzdWNoIGFzIGNhc2hpZXJpbmcgYXQgc3VwZXJtYXJrZXRzLiAKTXkgZ3Vlc3MgaXMgdGhleSB3YW50IHRoZSBza2luIHRlYW0gd29ya2luZyBvbiBhY3R1YWwgbmV3IHNraW5zIHRoYXQgZ2VuZXJhdGUgbW9yZSByZXZlbnVlIG5vdCByZSBoYXNoZXMgb2Ygc2tpbnMgcHBsIG1pZ2h0IGFscmVhZHkgaGF2ZSBhbmQgdGh1cyB3aWxsIG5vdCBnZW5lcmF0ZSBhcyBtdWNoIG5ldyBpbmNvbWUuIEFsc28gMiBvZiB0aGUgc2tpbnMgKCBTaWx2ZXIgYW5kIEp1ZGdlbWVudCBLYXlsZSApIHdvbiBiZSByZXNvbGQgc28gaXRzIGxpdGVyYWxseSBaRVJPIGluY29tZSBmb3IgdGhlIHdvcmsgdGhleSBwdXQgaW4gdGhvc2UgdHdvIHNraW5zLiA0IHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ29BZnRlciB0aGlzIGl0IG5ldmVyIHBlYWtlZCBvdmVyIDNtYiB3aXRoIHNlcmlvdXMgaW5jb25zaXN0ZW5jaWVzLgpZb3UgY2FuIHNjaGVkdWxlIGEgd2hvbGUgc3BhIGRheSBmb3IgeW91ciB3aWZlLiAKSW4gc29tZSBjYXNlcyBpdCBtYXkgZXZlbiBhbGxvdyBmb3IgcmVudGFsIGluY29tZS4uIApUaGVyZSBhcmUgbGltaXRzIGhlcmUgYXMgcmVnYXJkcyB3aGF0IGNoYXJhY3RlcnMgY2FuIGJlIHBvc3RlZC4gVXNlIHRoZSBsaW5rIGJlbG93IHRvIHNlZSB0aGUgRHJha2UgZXF1YXRpb24uIApUaGUgbWludXRpYWUgb2YgdGhlIFVTIFBha2lzdGFuIHN0cmF0ZWdpYyBkaWFsb2d1ZSBhbG1vc3QgY29tcGxldGVseSBpZ25vcmVzIHRoZSBoYXJzaCByZWFsaXRpZXMgb2YgdGhlIFVTIFBha2lzdGFuIHJlbGF0aW9uc2hpcCB0aGUgdGhpbmdzIHRoYXQgYXJlIG92ZXJhcmNoaW5nLCBvbiBhIG1hY3JvIGxldmVsIGFuZCB2aXNpYmxlIHRvIHRoZSBuYWtlZCBleWUgZnJvbSAzMCwwMDAgZmVldCBpbiB0aGUgYWlyLiBJbnN0ZWFkLCB0aGUgZGlhbG9ndWUgZm9jdXNlcyBvbiByZWFsLCBhbmQgY29tcGVsbGluZyBleGFtcGxlcyBvZiBnZW51aW5lIG11dHVhbCBpbnRlcmVzdCBidXQgYWxtb3N0IGFsbCBvZiB0aG9zZSBleGFtcGxlcyBhcmUgbWljcm8gbGV2ZWwsIHRoZXkgYXJlIHRvIGRvIHdpdGggbnVhbmNlcywgYW5kIHRoZXkgYXJlIGludmlzaWJsZSB1bmxlc3MgeW91IGFyZSB1c2luZyBhbiBlbGVjdHJvbiBtaWNyb3Njb3BlIHRvIGV4YW1pbmUgdGhlIHN5bmFwc2UgYmV0d2VlbiBXYXNoaW5ndG9uIERDIGFuZCBJc2xhbWFiYWQuLiAKWW91IGdvIHRvIGEgd2FsayBpbiBkb2N0b3IgZm9yIHNvbWV0aGluZyB0aGF0IHJlcXVpcmVzIGltbWVkaWF0ZSB0cmVhdG1lbnQvaXNuIGEgbWFqb3IgcHJvYmxlbSBsaWtlIHRoZSBmbHUuLiAKTm93LCB0aGUgVHJ1bXAgYWRtaW5pc3RyYXRpb24gaGFzIGNhbmNlbGVkIHRoZSBwcm9ncmFtIHRoYXQgaGFkIGFsbG93ZWQgaGVyIHRvIGNyZWF0ZSBhIGxpZmUgYXMgYSBtb3RoZXIsIGEgY29uc3RydWN0aW9uIHdvcmtlciwgYSBidWRkaW5nIGFjdGl2aXN0LiAKVGhlcmUgYXJlIG90aGVyIGF0b21pYyBjb25qb2luZWQgdGVybXMgaW4gdGhpcyBib29rIGJlc2lkZXMgImJvbWIiLCBhbmQgdGhleSBhcmUgc29tZXdoYXQgdGVsbGluZyBvZiB0aGUgcGVyaW9kLiAKSGVyIG1vdGhlciBzZW50IGhlciB0aGVyZSBhbmQgdGhlbiBkZWVkZWQgdGhlIGhvdXNlIHRvIGhlciwgc2hhY2tsaW5nIEx5ZGlhJ3MgZmF0ZSB0byB0aGUgd2hpdGUgZWxlcGhhbnQgb2YgYSBob3VzZSBhbmQgZW5kaW5nIGhlciBsaWZlIGluIE5ldyBZb3JrIHBlcm1hbmVudGx5LiBIZXIgdGltZSBub3cgaXMgc3BlbnQgZHJpZnRpbmcgYXJvdW5kIHRoZSBjcnVtYmxpbmcgZW1waXJlLCBMYWR5IEhhdmVyc2hhbSBzdHlsZSwgcmVjb3VudGluZyB0aGUgZGF5cyBvZiBvbGQuIApJZiBzb21lb25lIGxlYXZlcyBhbiBlZ2cgc2hlbGwgd2hlcmUgaXQgZG9lc24gYmVsb25nLCB0aGV5IGNhbiBjb21wbGFpbiB3aGVuIGl0IGdldHMgYnJva2VuLCBqdXN0IGxpa2UgbXkga2lkcyBjYW4gY29tcGxhaW4gaWYgSSBkcml2ZSBvdmVyIGEgdG95IHRoYXQgdGhleSBsZWZ0IGluIHRoZSBkcml2ZXdheS4gSXQgZG9lc24gZ28gdGhlcmUuIElmIGl0IGJyZWFrcyBhbmQgdGhleSBjcnksIEkgbm90IHVwc2V0IGFib3V0IGl0ICAgdGhhdCB0aGVpciBwcm9ibGVtLCBub3QgbWluZS4gVGhhdCBkb2VzbiBtZWFuIEkgZG9uIHRyeSB0byBjb25zb2xlIHRoZW0gYW5kIGhlbHAgdGhlbSBmZWVsIGJldHRlciwgYnV0IHRoZSBwcmVzc3VyZSBpc24gb24gbXkgc2hvdWxkZXJzIHdoZW4gdGhvc2UgdGhpbmdzIGhhcHBlbiwgbm9yIGlzIGl0IG9uIHlvdXIgc2hvdWxkZXJzIHdoZW4geW91ciB3aWZlIGdldHMgZW1vdGlvbmFsbHkgd291bmQgdXAgb3ZlciB0aGluZ3MgdGhhdCBhcmUgbm90IHdhcnJhbnRlZC4KSm9pbmluZyBsYXJnZXIgcG9rZXIgdG91cm5hbWVudHMgaXMgYWxzbyBhIGdyZWF0IHdheSB0byBtYWtlIGZyaWVuZHMgY29uc2lkZXJpbmcgZmVsbG93IHBsYXllcnMgYWxyZWFkeSBoYXZlIHNvbWV0aGluZyBpbiBjb21tb24gd2l0aCB5b3UuIApXaW50ZXJ0b2R0OiBpdCBpcyB2ZXJ5IGVhc3kgdG8gZ2V0IDUwIGZtIHF1aWNrIGFuZCB5b3UgY2FuIGV2ZW4gZ2V0IHRoaXMgYmVmb3JlIGdldHRpbmcgYSBib25kIHRvIGJlIG1vc3QgZWZmaWNpZW50LiBGbGV0Y2ggZm9yIG1vcmUgcG9pbnRzIGFuZCBhbHNvIHBhc3NpdmUgZmxldGNoaW5nIHhwIHRvIGhlbHAgd2l0aCBhbm90aGVyIHRpcCBjb21pbmcgdXAgaW4gYSBiaXQKT3IgdGFrZSB0aGUgZXhhbXBsZSBvZiBIMUIgaW1taWdyYW50cy4gQnkgeW91IGxlYWRpbmcgb3V0IGFuZCBoaW0gY2FsbGluZyB0aGVyZSBzbyBtYW55IGhhbmRzIGhlIGlzIHJlcHJlc2VudGluZyB5b3Ugd2FubmEgbmFycm93IGl0IGRvd24sIGVzcGVjaWFsbHkgZmxvcHBpbmcgbnV0cy4KMUFzIHRoaXMgaXMgb25lIG9mIHRob3NlIGdhbWVzIHdoZXJlIHRoZSBvYmplY3QgaXMgdG8gZ2V0IHJpZCBvZiB5b3VyIGNhcmRzLCBwaWNraW5nIHVwIHRoZSBzdGFjayBpcyBhIGJhYWFhYWFkIHRoaW5nLjJUaGUgbGFzdCBjYXJkLCB0aGF0IGlzLCBub3QgdGhlIGphY2suM0lmIG5vdCwgcG9vciB5b3UuIFRoZSBwZW5hbHR5IGlzIHRoZSBzYW1lIGFzIGFsd2F5czogcGljayB1cCB0aGUgZW50aXJlIHBpbGUuNCBMb2NhbCBydWxlcyBhZ3JlZWQgdXBvbiBieSB0aGUgcGxheWVycyBiZWZvcmUgc3RhcnQgb2YgcGxheQpDb21pbmcgb3V0IGFmdGVyIHRoZSBicmVhaywgdGhlIHRlYW0gYWxsb3dlZCAxNSBnb2FscyBpbiB0aGUgZmlyc3QgMTUgbWludXRlcyBvZiB0aGUgc2Vjb25kIGhhbGYgICBvbmx5IHRoZSBDb2xvcmFkbyBSYXBpZHMgYWxsb3dlZCBtb3JlICgxNikuLiAKSSBoYXZlIGJlZW4gbGF1Z2hlZCBhdCAvIG1hZGUgam9rZXMgYWJvdXQgYnkgYSBkb3plbiBkb2N0b3JzICAgdG8gbXkgZmFjZS4gSXQgY29tcGxpY2F0ZWQgYXMgdG8gd2h5LCBidXQgSSBoYXZlIGEgY29uZGl0aW9uIHRoYXQgbWFrZXMgdGhlbSB1bmNvbWZvcnRhYmxlIGJlY2F1c2UgYXBwYXJlbnRseSBpbiByZWFsaXR5IHRoZXkgYWxsIGEgYnVuY2ggb2YgMTIgeS9vIGJveXMgICBidXQgYWZ0ZXIgdGhlIHNlY29uZCB0aW1lIGl0IGhhcHBlbmVkIEkgY2FsbGVkIHRoZW0gb3V0IG9uIGl0IHJpZ2h0IHRoZXJlLiAKU2Ugdm9jIGFjaGEgcXVlIHNldSBlbmdhbm8gbWFyaWRvIHBvZGUgdHJhemVyIGFsZ3VtIGVtIHN1YSBjYXNhIGVucXVhbnRvIHZvYyBlc3RpdmVyIHZpYWphbmRvIG91IGZvcmEsIG1vbnRhciBhbGd1bWFzIGFybWFkaWxoYXMuIAogMSBwb2ludCAgc3VibWl0dGVkIDEgZGF5IGFnb05vdCBwYXJ0aWN1bGFybHkuIEl0IHJlYWxseSBoZWxkIGJhY2sgYnkgaXRzIHRlcnJpYmxlIG1pZ2h0IGFuZCBLYWdlcm8gaXMgYWxyZWFkeSBvbmUgb2YgdGhlIGJlc3QgdXNlcnMgdGhhbmtzIHRvIGhlciBoaWdoIGF0dGFjay4gCk1haWwgb25lIGFoZWFkIHRvIHlvdXJzZWxmIGV2ZXJ5IDIwMCA0MDAgbWlsZXMuLiAKQW5kIHdobyByYW4gdGhpcyBoaWdobHkgZWRpdGVkIGFuZCBjb21wbGV0ZWx5IHVudHJ1ZSB2ZXJzaW9uPyBvdGhlciB0aGFuIEFuZHJldyBCcmVpdGJhcnQgYW5kIG91ciBmcmllbmRzIGF0IEJpZyBHb3Zlcm5tZW50LiBTYW1lIGxvdmVseSBwZW9wbGUgd2hvIGNyZWF0ZWQgdGhlIHRvdGFsIGxpZSB0aGF0IEFDT1JOIHdhcyBub3QgYW4gYW50aSBwb3ZlcnR5IGdyb3VwLCBidXQgcmF0aGVyIGEgaHVtYW4gdHJhZmZpY2tpbmcgcmluZyEgdGhlIHJlc3VsdCB3YXMgd2hhdD8geWVhaCwgdGhlIGRlZnVuZGluZyBvZiBBQ09STiBieSBDb25ncmVzcywgdGhlIHZpbGlmaWNhdGlvbiBvZiB0aGUgb3JnYW5pemF0aW9uIGluIHRoZSBtYWluc3RyZWFtIG1lZGlhLCBhbmQgdGhlIGxvbmcgbGFzdGluZyBsZXNzb24gb24gdGhlIHBhcnQgb2YgdGhlIGZhciByaWdodCB0aGF0IHRoZSBPYmFtYSBhZG1pbmlzdHJhdGlvbiBhbmQgdGhlIERlbW9jcmF0aWMgQ29uZ3Jlc3MgYXJlIHNvIGVhc2lseSBzY2FyZWQgaW50byBzdWJtaXNzaW9uIHRoYXQgYWxsIGl0IHRha2VzIGlzIHNvbWUgYmFkIHZpZGVvIGFuZCBzb21lIHJpZGljdWxvdXMgbGllcyB0byBnZXQgdGhlbSB0byBjb21wbHkuLiAKQW55b25lIGV2ZXIgZ290dGVuIGEgbWFzc2FnZQpJdCB3YXMgYW5ub3VuY2VkIGJ5IGljb25pYyByaW5nIGFubm91bmNlciBNaWNoYWVsIEJ1ZmZlciwgdGhlIG1hbiB3aG8gaGFzIG1hZGUgbWlsbGlvbnMgb2YgZG9sbGFycyBvdXQgb2YgaGlzIHNpZ25hdHVyZSBsaW5lLCAiTGV0IGdldCByZWFkeSB0byBydW1ibGUiLiBCdWZmZXIgaGFzIGJlZW4gcG91bmRpbmcgdGhlIHB1YmxpY2l0eSB0cmFpbCB0aGlzIHdlZWssIGhlbHBpbmcgdG8gYnJpbmcgYSBsaXR0bGUgVmVnYXMgdG8gQnJpc3ZlZ2FzLiBBbmQgaXQgaXMgd29ya2luZy4gCkhlIHNheXMgaGUgaGFzIGRpYWdub3NlZCBmcmFjdHVyZXMgbGlrZSB0aGF0IGJlZm9yZSwgZWl0aGVyIHJlY3RhbGx5IG9yIHZhZ2luYWxseSwgYnV0IG9ubHkgb24gc3RlYWR5IGhvcnNlcy5JIHdvdWxkbiBleHBlY3QgdG8gZmVlbCBhbnkgY2xpY2tpbmcgb3IgY2F0Y2hpbmcgd2l0aCB0aG9zZSBpbmp1cmllcywgYXMgbm9uZSBvZiB0aGVtIChub3QgdGhlIHRvcCAzIGFueXdheXMpIGludm9sdmUgam9pbnQgaW5qdXJ5LiAKSWYgeW91IGxpa2UgcG9rZXIgYW5kIHdhbnQgdG8gbGVhcm4gbW9yZSBhYm91dCB0aGUgdW5kZXJseWluZyBtYXRoIGludm9sdmVkIHRoZW4gdGhpcyBpcyB0aGUgYm9vayBmb3IgeW91LiAKQm9nYXRpbiBib3VnaHQgZml2ZSBjb25kb3MgZnJvbSBUcnVtcCBhdCB0aGF0IG1lZXRpbmcuIApUaGUgbGFzdCBwb2ludCwgSSB0aG91Z2h0IEkgaGFkIGEgZ29vZCBjaGFuY2UsIFNhbnRvcm8gc2FpZC4gd2FzIHRpcmVkLCBidXQgSSB3YXMgZm9yIHN1cmUgbW9yZSB0aXJlZC4gU2FudG9ybyBhc2tlZCBmb3IgYSBtZWRpY2FsIHRpbWVvdXQgaW4gdGhlIG1pZGRsZSBvZiBhIGdhbWUgYWZ0ZXIgZG91YmxlIGZhdWx0aW5nLiBMYXRlciwgaGUgb3B0ZWQgbm90IHRvIHNpdCBhdCBhbGwgZHVyaW5nIGNoYW5nZW92ZXJzLCB3b3JyaWVkIGFib3V0IGNyYW1waW5nLgpJZiB0aGUgZmxhZ3NoaXAgaGFja3MgeW91ciBzaGllbGRzLCB5b3UgaGF2ZSB0byBzdXBwcmVzcyBoYWNraW5nIChvciBhbGwgd2VhcG9ucyksIGFuZCB5b3UgYXJlIHByb2JhYmx5IGJldHRlciBvZmYganVzdCBkZXN0cm95aW5nIHRoZSBzaGlwLiAKSSB3ZW50IHRvIHNjaG9vbCBmb3IgY29tcHV0ZXIgc2NpZW5jZSwgYXMgdGhhdCBwYXlzIHdlbGwgbW9yZSBjb25zaXN0ZW50bHksIGJ1dCBJIGtlcHQgd29ya2luZyBvbiBpdC4gClRoZXkgaGF2ZSBhIDEvMyBnYW1lIChhbW9uZyBvdGhlciBsaW1pdHMpIHRoYXQgdGhleSBjaGFyZ2UgMTUgZm9yIGRvb3IgZmVlIGFuZCAxNSBhbiBob3VyLiAKV2l0aG91dCBhIGdvb2QgY2FyZCBwcm90ZWN0b3IsIHlvdSBjYW4gbmV2ZXIgdGhpbmsgb2Yga2VlcGluZyB0aGUgcG9rZXIgY2FyZHMgc2FmZSBmcm9tIGRpZmZlcmVudCBraW5kIG9mIGRhbWFnZXMuIApBZHZhbmNlZCB2ZXJzaW9uOiBGcm9tIGEgc2VhdGVkIHBvc2l0aW9uLCBsaWZ0IG9uZSBsZWcgb2ZmIHRoZSBmbG9vciB3aGlsZSBzdGlsbCBiZW50IG9yIGV4dGVuZCBpdCBvdXQgaW4gZnJvbnQgb2YgeW91ciBib2R5IGZvciBhZGRlZCBkaWZmaWN1bHR5LiAKQnV0IHlvdSBnbyB0b3dhcmRzIHZpbGxhZ2VzIGFuZCBjcm93ZGVkIGNpdGllcywgeW91J2xsIGZpbmQgb25lIHRvbyBtYW55IGZ1Y2tlZCB1cCBzdG9yaWVzIGxpa2UgaG9ub3Iga2lsbGluZ3MuIApUaGUgbmV3IGJpbGwsIEFCMTY3LCB3aGljaCB3YXMgaW50cm9kdWNlZCBpbnRvIHRoZSBDYWxpZm9ybmlhIGFzc2VtYmx5IG9uIEphbnVhcnkgMjIsIGFsbG93cyB0aGUgU3RhdGUncyBJbmRpYW4gdHJpYmVzLCBsaWNlbnNlZCBjYXJkIGNsdWJzLCBhbmQgcmFjZXRyYWNrcyB0byBvZmZlciBvbmxpbmUgcG9rZXIuCkFuZ2xlcnMgYXJlIGZpbmRpbmcgc29tZSBuaWNlIHN0ZWVsaGVhZCBhbmQgYnJvd24gdHJvdXQgd2l0aCBlZ2cgc2FjcyBhbmQgYmVhZHMgd29ya2luZyB3ZWxsLiBBIGJhbmQgb2YgbGFrZSBlZmZlY3Qgc25vdyBicm91Z2h0IHVzIGFib3V0IGZvdXIgaW5jaGVzIG9mIHNub3cgeWVzdGVyZGF5LiAKQWdhaW4sIHdlIGdldCB0aGUgYmlibGVzIGZyZWUsIHNvIGlmIHRoZSBwb3NzaWJpbGl0eSBleGlzdHMsIHRoZXJlIG5vIGhhcm0gaW4gdHJ5aW5nLi4gCkJsYWNraW5nIG1ha2VycywgYnJhc3MgZm91bmRlcnMsIGJydXNoIG1ha2VycywgY2FydmVycyBhbmQgZ2lsZGVycywgY29hY2htYWtlcnMsIGNvb3BlcnMsIGZlbHRtb25nZXJzLCBmcmluZ2UgbWFrZXJzLCBsYW1wYmxhY2sgbWFrZXJzLCBtaWxrbWVuLCwgLCBvaWwgYW5kIGNvbG9yIG1lbiwgcmFnIG1lcmNoYW50cywgc2FjayBtYWtlcnMsIHNjYWxlYm9hcmQgbWFrZXJzLCBzdHJhdyBib25uZXQgbWFrZXJzLCB0aW5tZW4sIGFuZCB3YWRkaW5nIG1ha2VycywgYXJlIGFsbCBwcmV0dHkgbXVjaCBnb25lIGFzIHN0YW5kYXJkIGVudGVycHJpc2VzLiAKSGUgZGlkIGZhc3QgZm9vZCBmb3IgYSB3aGlsZSBhbmQgdGhlbiBnb3QgaW50byBtYXJrZXRpbmcgZnJvbSB0aGUgaW50ZXJuZXQuIApPdmVydmlldyBmb3IgbWVyc2VubmVhcnkKUmlnaHQgb2ZmIHRoZSBiYXQsIGhlIGVuZ2luZWVyZWQgYSBqYWlsYnJlYWsgZm9yIGEgc3RvcmVmcm9udCBiaXNob3AgZnJvbSBCcm9va2x5biBiZWluZyBoZWxkIG9uIGEgd2FycmFudCB2aW9sYXRpb24gICBmdXJ0aGVyIGFsaWVuYXRpbmcgb25lIG9mIHRoZSBtb3N0IGltcG9ydGFudCBjb25zdGl0dWVuY2llcyBhbnkgbWF5b3IgY2FuIGhhdmUsIHRoZSBhbHJlYWR5IHByb2ZvdW5kbHkgc3VzcGljaW91cyBOWVBELiAoVGhlIGJpdHRlcm5lc3MgbGluZ2VycywgYW5kIG5vIGxvbmdlciB3aWxsIGJlIG1pdGlnYXRlZCBieSB0aGUgcHJlc2VuY2Ugb2YgYSBicmlsbGlhbnQgcG9saWNlIGFkbWluaXN0cmF0b3IsIEJpbGwgQnJhdHRvbi4pLiAKQnV0IHRyYWRlcnMgd2l0aCBpZGVudGljYWwgYW5hbHl0aWMgc2tpbGxzIGJ1dCBhYm92ZSBhdmVyYWdlIHN0cmF0ZWdpYyBpbnRlbGxpZ2VuY2Ugc2NvcmVkIDI1JSBhYm92ZSBhdmVyYWdlICAgYSA1MCUgZGlmZmVyZW5jZSBpbiBwZXJmb3JtYW5jZS4gCihSZW52b3llICBsYSBjb21taXNzaW9uIGRlcyBsb2lzIGNvbnN0aXR1dGlvbm5lbGxlcywgZGUgbGEgbGdpc2xhdGlvbiBldCBkZSBsJ2FkbWluaXN0cmF0aW9uIGducmFsZSBkZSBsYSBScHVibGlxdWUsICBkZmF1dCBkZSBjb25zdGl0dXRpb24gZCd1bmUgY29tbWlzc2lvbiBzcGNpYWxlIGRhbnMgbGVzIGRsYWlzIHBydnVzIHBhciBsZXMgYXJ0aWNsZXMgMzAgZXQgMzEgZHUgUmdsZW1lbnQuKVBBUiBNTS4gCk1pa2UgZGlkIG1ha2UgYSBtaXN0YWtlLCBoZSBhIGFudGkgaGVybyBpbiB0aGUgc2Vuc2UgaGUgYW4gaG9ub3JhYmxlIHRoaWVmLCBidXQgaGFzIHRvIHdhbGsgYSBsaW5lIGJldHdlZW4gbG95YWx0eSBhbmQgd2hhdCByaWdodC4gSGUgZGlkIGEgbG90IG9mIHdoYXQgd2FzIHJpZ2h0LCBzYXZlZCB0aGUgd2lmZS4gSG93ZXZlciBoZSBkaWQgaGF2ZSBhIGNoYW5jZSB0byBsZXQgaGltIGdvLCBubyBvbmUgd291bGQgaGF2ZSBwcm9iYWJseSBiZWVuIHRoZSB3aXNlcixidXQgaXQgd2FzIHNtYXJ0IGZvciBoaW0gdG8ga2lsbCBXZXJuZXIsIGhlIHJlYWxseSBwbGF5aW5nIHdpdGggZmlyZSB0byBldmVuIGNyb3NzIEd1cyBhIGJpdC4uIApTZWFyY2ggYW5kIFJlYWQgRG93bmxvYWRhYmxlIGN1bGxpZ2FuIHdhdGVyIHNvZnRlbmVyIHJlcGFpciBtYW51YWwgVXNlciBNYW51YWxzIGZvciBGcmVlLCBXZSBIYXZlIENvbGxlY3Rpb24gb2YgVXNlciBHdWlkZSBvciBPd25lcnMgTWFudWFsIEluc3RydWN0aW9uIGluIEVib29rIFBkZi4KRURJVDogamVnIGt1bm5lIGthbnNramUgdnJ0IGVuZGEgdHlkZWxpZ2VyZSwgb2cgbm9lbiBhdiBkZXJlIGt1bm5lIGthbnNramUgbGVzdCBmcnN0ZSBhdnNuaXR0IG55ZXJlOiBob3ZlZGRlbGVuIGF2IHRla3N0ZW4gdmlzZXIgZXQgdGFua2VzZXR0IGplZyBpa2tlIGxpa2VyLiBUYWtrIGZvciBzcHJrdGlwcyEKQXQgYSB0aW1lIHdoZW4gd29tZW4gYXJlIHVuZGVycmVwcmVzZW50ZWQgaW4gdGhlIGluZHVzdHJ5LCBoYWxmIG9mIFlvdW5nIExhcmFtb3JlJ3MgNTAgc3RhZmZlcnMgYXJlIGZlbWFsZS4gCldlIGhhdmUgeWV0IHRvIHJlcGxheSBhIHNjZW5hcmlvIGJlY2F1c2UgbmV3IGNoYXB0ZXJzIHRvIHRoZSBzdG9yeSBrZWVwIGNvbWluZyBvdXQuLiAKT3ZlcnZpZXcgZm9yIG1hZHNjaQpUaGlzIGlzIE1lbHphY2sgcGFwZXIgb24gaXQgZnJvbSAyMDAxLiBUaGlzIHRoZW9yeSBoYXMgYmVlbiB1cGRhdGVkIGFuZCByZWZpbmVkIHNpbmNlIHRoZW4sIG1vc3Qgbm90YWJseSBieSBMb3JpbWVyIE1vc2VsZXkgICBoZXJlIGEgZnVsbCB0ZXh0IGNvcHkgb2YgaGlzIDIwMDcgcGFwZXIgcGFpbiBhY2NvcmRpbmcgdG8gbW9kZXJuIHBhaW4gc2NpZW5jZSB3aGljaCBpcyBhIHZlcnkgaW50ZXJlc3RpbmcgcmVhZCBvbiBob3cgb3VyIHVuZGVyc3RhbmRpbmcgb2YgcGFpbiBoYXMgY2hhbmdlZCBvdmVyIHRoZSBwYXN0IDEwIDIwIHllYXJzLgoyMDAgaG91cnMgb2YgY29tbXVuaXR5IHNlcnZpY2UgYW5kIDIgeWVhcnMgcHJvYmF0aW9uPyBJIGp1c3Qgd3JvdGUgYSBjaGVjayBmb3IgJDIwMDAgdG8gdGhlIGNvdXJ0LCBhbmQgdGhleSBzb21laG93IHRoZSBjYXNoIHRvIGhvdXJzLiAKQSBtb3JlIG1vZGVyYXRlIGNhbmRpZGF0ZSBsaWtlIEJpZGVuIHdvdWxkIGhhdmUgd2FsbG9wZWQgVHJ1bXAuMjAxNiB3YXMgbG9zdCBiZWNhdXNlIHRoZSAzMCB5ZWFyIG9sZCB3aXRjaCBodW50IHRoZSByZXB1YmxpY2FucyBsZWQgYWdhaW5zdCBDbGludG9uIChhYmx5IGhlbHBlZCBieSBTYW5kZXJzIGNvIHdpdGggdGhlaXIgcklnR2VEIGJ1bGxzaGl0ICkgcG9pc29uZWQgYSBsb3Qgb2YgcGVvcGxlLiBJdCBoYXMgbm90aGluZyB0byBkbyB3aXRoIGltcGxpZWQgZmFpbHVyZSBvZiBjZW50cmlzbSBvciBtb2RlcmF0aXNtYmhlbGxidXMgIDEgcG9pbnQgIHN1Ym1pdHRlZCA0IGRheXMgYWdvSSB3b3VsZCBsaWtlIHRvIHNlZSB0aGlzIHBvbGwgdGhhdCB5b3UgYXJlIHJlZmVycmluZyB0by4gClJlZWRzIGFyZSBleHRyZW1lbHkgaW1wb3J0YW50IGZvciB0aGUgY2xhcmluZXRpc3QgKG9yIGFueSByZWVkIHBsYXllcikuIEJlZ2lubmVycyBhcmUgdXN1YWxseSBpbnN0cnVjdGVkIHRvIGJ1eSBSaWNvIG9yIFJpY28gUm95YWwgMiByZWVkcyBiZWNhdXNlIHRoZXkgYXJlIHNvZnQgYW5kIGNoZWFwLiBNb3N0IHByb2Zlc3Npb25hbHMgdm91Y2ggYnkgVmFuZG9yZW4gYnJhbmQgcmVlZHMsIHdoaWNoIGFyZSByYXRoZXIgZXhwZW5zaXZlLiAKRGVwZW5kaW5nIG9uIHdobyBlbHNlIGJldHMgYW5kIHdoYXQgdGhlIG5leHQgY2FyZCBpcywgdGhhdCBzdHJhdGVneSBjYW4gY2hhbmdlLiAKSSByZW1lbWJlciBoZSBnb3Qga25vY2tlZCBvdXQgZmlyc3QgYW5kIHRoZXJlIHdlcmUgb25seSBmb3VyIG9mIHVzIHBsYXlpbmcuIApJIGFmcmFpZCBwZW9wbGUgaW4gdGhlaXIgZmlmdGllcyB3b24gYmUgYWJsZSB0byBoYWNrIGl0LiAKVGVjaG5pY2FsbHksIHllcy4gClF1YW5kIGxhIGdyZW5hZGUgZWxsZSB0b21iZSAgdGVzIHBpZWRzIHQgcGFzIGxlIGNob2l4IGVuIGZhaXQuIFF1ZSB0dSBsYSByYW1hc3NlcyBvdSBxdWUgdHUgY291cmVzIHR1IGpvdWVzIGF1IGxvdG8uIEV0IGNvdXJpciwgYSBtZXQgYmVhdWNvdXAgbW9pbnMgZGUgZGlzdGFuY2UgZW50cmUgbGEgZ3JlbmFkZSBldCB0b2kuCklmIHlvdSByZWFsbHkgd2FudCB0byB0cnkgdG8gZmluZCBvdXQgd2hlcmUgYW5kIGhvdyBoZXJlIGFyZSBzb21lIGlkZWFzLiBUaGVuIHdoZW4geW91IGFyZSByZWFkeSwgY2FsbCB0aGVtLi4gCkkgYW0gYWxzbyBob3BpbmcgdGhhdCBEZWxsIGZpeGVzIHRoZSBzdHVwaWQgY2hhc3NpcyBkZXNpZ24gZm9yIHRoZSBuZXh0IGdlbmVyYXRpb24uLiAKTVMgcGF0aWVudHMgYWxzbyBzaG93ZWQgaW5jcmVhc2VkIGZyZXF1ZW5jeSBvZiBjaXJjdWxhdGluZyBhdXRvIGFudGlib2RpZXMgc3VjaCBhcyBhbnRpIFRQTyBpbiAxOSAoMjYlKSwgQU5BIGluIDExICgxNSUpIGFuZCBBTUEgaW4gMiAoMyUpLgpXZSB3ZXJlbid0IGdpdmluZyB0aGF0IHVwLiBUaGVyZSB3ZXJlIG5heXNheWVycywgZXZlbiB3aXRoaW4gdGhlIGNvbXBhbnkuIEEgbnVtYmVyIG9mIG91ciB0ZWNobmljYWwgZm9sa3Mgd2VyZSB2ZXJ5IHNrZXB0aWNhbCBiZWNhdXNlIGV2ZXJ5dGhpbmcgaXMgbGFiZWxlZCBhcyBBSSB0aGVzZSBkYXlzLiAKSSBkb24gcmVhbGx5IGhhdmUgYSBwcm9ibGVtIHdpdGggaGltIHNwZWNpZmljYWxseSwgYnV0IHJhdGhlciB0aGUgcm9tYW5jZSBwbG90LiAKTWFnbm92YXRlIGFuZCB0aGUgYm9hcmQgd291bGQgc2hhcmUgbmV0IHJldmVudWVzIDUwLzUwIGFmdGVyIG9wZXJhdGluZyBhbmQgZmluYW5jaW5nIGNvc3RzLiBUaGUgc3RhZmYgcmVwb3J0IGNvbnRlbXBsYXRlcyBhIHByaWNlIHBvaW50IG9mIGJldHdlZW4gJDEyIGFuZCAkMTggZm9yIGEgcmlkZS4KIlllcywgSW4gaGVhciBpdCwiIGFuc3dlcmVkIExldmluLCByZWx1Y3RhbnRseSBicmVha2luZyB0aGUgc3RpbGxuZXNzIHdpdGggaGlzIHZvaWNlLCB3aGljaCBzb3VuZGVkIGRpc2FncmVlYWJsZSB0byBoaW1zZWxmLiAiTm93IGl0J3MgY29taW5nISIKSXQgcHJldHR5IGRhcm4gY29uZGVzY2VuZGluZy4gCkluIEFtZXJpY2EgdG9kYXksIGV2ZXJ5dGhpbmcgYWJvdXQgcmFjZSByZWxhdGlvbnMgaGFzIGJlY29tZSBtZXNzZWQgdXAuIFRoaXMgaXMgYmVjYXVzZSBpdCB3YXMgbWVzc2VkIHVwIHRvIGJlZ2luIHdpdGggYW5kIHRoZW4gd2l0aCB0aGUgbGF0ZXN0IGdlbmVyYXRpb24sIHBlb3BsZSBsaWtlIHRvIGdldCBvZmZlbmRlZCBhYm91dCB0aGluZ3MgbGlrZSBhcyBpZiB0aGF0IGEgaG9iYnkuClRlYWNoaW5nIHRoZSBraWRzIHRoYXQgbG9zaW5nIGlzIGFjY2VwdGFibGUgaXMgYSBob3JyaWJsZSBwcmVjZWRlbnQgaWYgd2Ugd2FudCB0byByZXZpdmUgdGhlIGR5bmFzdHkuIEkgZG9uIGdldCB3aGF0IHlvdSB3YW50IHRoZW0gdG8gZG8uIApDJ2VzdCBzdXJ0b3V0IGF1IGZvdXJuaWwgcXVlIGxlcyBjaG9zZXMgZG9pdmVudCB2b2x1ZXIgOiByYXBwcmVuZHJlICB0cmF2YWlsbGVyIGRlcyBmYXJpbmVzIG1vaW5zICJtdXNjbGVzIiwgcmV2b2lyIGxhIG1jYW5pc2F0aW9uIHBldGl0ICBwZXRpdCBwb3VyIHJldmVuaXIgYXV0YW50IHF1ZSBwb3NzaWJsZSAgZGVzIHByaW5jaXBlcyBkaWZmcmVudHMgZGUgcHJvZHVjdGlvbiwgYWRhcHRzICBkZXMgcHRlcyBtb2lucyB0b2xyYW50ZXMuIExhIGZvcm1hdGlvbiBkdSBjb3JwcyBwcm9mZXNzaW9ubmVsIGRlcyBib3VsYW5nZXJzIHNlcmFpdCAgZHZlbG9wcGVyICBjZSBzZW5zLi4gCkl0IG5vdCBub3QgYW4gaXNzdWUsIGl0IGp1c3Qgbm90IG9uZSB0aGF0IGhhcyByZXR1cm5zIHdoaWNoIGp1c3RpZnkgYWxsIG9mIHRoZSBwb2xpdGljYWwgY2FwaXRhbCB3ZSB3YXN0ZSBvbiBpdC4uIApJIGRvbiB0aGluayBtYW55IHBlb3BsZSB3b3VsZCB3YXRjaCBpdCB0aGlua2luZyAidGhpcyBpcyB0cmFzaCwgSSBlbWJhcnJhc3NlZCB0byBiZSB3YXRjaGluZyB0aGlzIG5vbnNlbnNlIiBsaWtlIHRoZXkgd291bGQgd2l0aCBHaG9zdGJ1c3RlcnMuIApXaGVyZSBjYW4geW91IHBsYXkgcG9rZXIgYXQgc2Nob29sIG9ubGluZQpURU1QRSwgQXJpei4gICBGb3IgeWVhcnMsIHRoZSBDb2xvcmFkbyBCdWZmYWxvZXMgaGF2ZSBiZWVuIHRoZSBQYWMgMTIgcHVuY2hpbmcgYmFnLgpPayAgSSBrbm93IHRoaXMgaXMgYSBsaXR0bGUgb2ZmIHRoZSBMRFMgcGF0aC4gQnV0LCBJIGhhdmUgc2VlbiBzZXZlcmFsIGNvbW1lbnRzIGxhdGVseSBhYm91dCBob3cgYmFkIHRoZSB3b3JsZCBpcyBnZXR0aW5nIGFuZCBsb29raW5nIGZvciBzaWducyBvZiB0aGUgZW5kIGFuZCBkZWJhdGluZyBhYm91dCBldmVuIGNvbnRpbnVpbmcgdG8gaGF2ZSBraWRzLgpUaGlzIG9mIGNvdXJzZSBkb2Vzbid0IGluY2x1ZGUgZm9sZCBlcXVpdHksIGFsb25nIHdpdGggbWFueSBvdGhlciBmYWN0b3JzLiBUbyBwdXQgaXQgaW50byBzaW1wbGUgdGVybXMsIElmIHlvdSBoYXZlIEFRIGFuZCB5b3Uga25vdyB5b3VyIG9wcG9uZW50IGhhcyAzMy4gCk9mIGNvdXJzZSwgd2UgYXJlIG5vIGxvbmdlciBWaWN0b3JpYW5zIGFuZCB0aGUgY2xlYXJseSBob21vZXJvdGljIGxvbmdpbmdzIG9mIGZvb3RiYWxsIGFyZSB1dGlsaXplZCBpbiBhbGwgc29ydHMgb2YgaW50ZXJlc3Rpbmcgd2F5cy4gVG8gc2VsbCBhIGdheSBkYXRpbmcgc2l0ZS4gCkJ5IHRoZSBsYXN0IGhhbGYgbWlsZSBJIHdhcyBkaXp6eSwgd2luZGVkLCBhbmQgcmVhbGx5IHN0cnVnZ2xpbmcuIApVbmZvcnR1bmF0ZWx5LCBsaWtlIGV2ZXJ5b25lIGVsc2UgYXQgdGltZSwgd2UgZGlkbiBwZXJzdWUgdGhlIHNlcmllcyBhZnRlciB0aGUgYWJydWJ0IGVuZGluZyB1bnRpbCBsaWtlIDggeWVhcnMgbGF0ZXIgd2hlbiB3ZSBkaXNjb3ZlcmVkIHRocnUgdGhlIG1hcnZlbG91cyB3b25kZXJzIG9mIHRoZSBpbnRlcm5ldCB0aGF0IHRoZXJlIHdhcyBib29rcyBvbiB0aGUgc2VyaWVzLiAKSW4gdGhhdCBjYXNlLCBhIHBsYXllciBjYW4gZXZlbiBvcHQgb2YgcGxheWluZyBtdWx0aXBsZXRhYmxlcyBpZiBwbGF5aW5nIG9ubGluZS4gKEZ1bGwgQW5zd2VyKS4gCkl0IGlzIHJlY29tbWVuZGVkIHRvIGZpeCB0aGUgZGVzaXJlZCBhbW91bnQgb2YgeW91ciBnYWluLCBmb3IgZXhhbXBsZSAkMjAwLCBhbmQgdHJ5IHRvIHdpbiBpdCwgdGFraW5nIHJpc2tzLiBJZiB5b3UgaGF2ZSBjb250cmlidXRlZCBhIGRlcG9zaXQgaW4gdGhlIGFtb3VudCBvZiAkMTAwLCBvYnRhaW5lZCAic3RpY2t5IiAkMTUwIGFuZCBwbGFuIHRvIGVubGFyZ2UgdGhlIHN1bSBvbiB5b3VyIGNhc2lubyBhY2NvdW50IHVwIHRvICQ1MDAgKHRoYXQgaXMgdG8gd2luICQyNTApLCB0aGVuIGEgcHJvYmFiaWxpdHkgdG8gYWNoaWV2ZSB5b3VyIGFpbSBpcyAoMTAwKzE1MCkvNTAwPTUwJSwgYXQgdGhpcyB0aGUgZGVzaXJlZCByZWFsIHZhbHVlIG9mIHRoZSBjYXNpbm8gYm9udXMgZm9yIHlvdSBpcyAoMTAwKzE1MCkvNTAwKDUwMCAxNTApIDEwMD0kNzUgKHlvdSBjYW4gc3Vic3RpdHV0ZSBpdCBmb3IgeW91ciBvd24gZmlndXJlcywgYnV0LCBwbGVhc2UsIHRha2UgaW50byBhY2NvdW50IHRoYXQgdGhlIGZvcm11bGFzIGFyZSBnaXZlbiBmb3IgZ2FtZXMgd2l0aCB6ZXJvIG1hdGggZXhwZWN0YW5jeSwgaW4gcmVhbCBjYXNpbm8gZ2FtZXMgdGhlIHJlc3VsdHMgd2lsbCBiZSBsb3dlcikuLiAKMTAwLCBjb3VudCAxMDAgKG5vIG1vcmUgbm8gbGVzcykgcGVvcGxlIGluIHRoZWlyIGZpbmVzdCByZWQgZHJlc3NlcyB3aWxsIHN0dW1ibGUgZHJ1bmtlbmx5IGFyb3VuZCBEb3dudG93biBGcmVzbm8uIFRoZXJlIHdpbGwgYmUgZHJpbmtzIGZsb3dpbmcgZnJlZWx5IGZyb20gc3RvcHMgYXBsZW50eS4gVGhlcmUgd2lsbCBiZSBwYXZlbWVudCBwb3VuZGluZyBhbmQgc2hpZ2d5LCBiZWVyLCB3aW5lLCBhbmQgbGlxdW9yLCB3YXRlciBjcm9zc2luZ3MgYW5kIGRyeSBsYW5kLCBzb21ldGhpbmcgZm9yIGV2ZXJ5b25lISAoRXhjZXB0IG1pbm9ycywgbm90aGluZyBmb3IgdGhlbSwgZG9uIGJyaW5nIGFueW9uZSB1bmRlciAyMSkgJDQ1IHJlZ2lzdHJhdGlvbiBpbmNsdWRlcyB0cmFpbCwgYWxsIHRoZSBhbGNvaG9sIHlvdSBjYW4gZHJpbmsgb24gdGhhdCB0cmFpbCwgYW4gYW1hemluZyBnb29kaWUgYmFnIG9mIHNvdXZlbmlycywgYW5kIGEgQkJRIGRpbm5lciBhZnRlciBpdCBhbGwgb3ZlciAodmVnZXRhcmlhbiBvcHRpb25zIGF2YWlsYWJsZSkuIApWYXJqZSBidXRpayBqYWcgam9iYmF0IGkgaGFyIGthc3NhcGVyc29uYWxlbiBoYWZ0IGVuIGJyYSBkeW5hbWlrIG9jaCBtYW4gYnJ5ciBzaWcgb20gdmFyYW5kcmEgb2NoIGhqbHBlciB2YXJhbmRyYS4gRGV0IHIgaSBkZXQgc3RvcmEgaGVsYSBldHQgaGVsdCBva2VqLCByb2xpZ3Qgam9iYi4gSW5nZXQgc3Bla3Rha3VscnQsIG1lbiBkYWdhcm5hIGdyIGZyIGRldCBtZXN0YSBydHQgZm9ydCBvY2ggZHUgaGFyIHNrbmEgbW5uaXNrb3IgcnVudG9tIGRpZyAodGlsbCBzdHJzdGEgZGVsKS5OYWNrZGVsYXIgciB2bCBhcmdhIGt1bmRlciwgc3RyZXNzIG9jaCB0cnR0L29udCBpIGZ0dGVybmEgZWZ0ZXIgbG5nYSBwYXNzLCBtZW4gbWFuIHZuamVyIHNpZy4gCiJEZXMgcmVsYXRpb25zIGRlIGNvbmZpYW5jZSBlbnRyZSBwb3B1bGF0aW9uIGV0IHBvbGljZSBkb2l2ZW50IHRyZSBydGFibGllcyIgYSB0IGlsIG1hcnRlbC4gClRoZSBjbGFpbSB0byBvYmplY3Rpdml0eSwgaW4gam91cm5hbGlzbSBhcyB3ZWxsIGFzIGluIG90aGVyIGZpZWxkcyBvZiBpbnF1aXJ5LCBpcyBiYXNlZCBvbiB0aGUgYmVsaWVmIHRoYXQgYSBib2R5IGNhbiByaXNlIGFib3ZlIGl0cyBwb3NpdGlvbiBpbiB0aGUgc29jaWFsIHdvcmxkIGFuZCB2aWV3IGxpZmUgZnJvbSBhYm92ZSwgYW4gQXJjaGltZWRlYW4gdmlld3BvaW50Li4gCkFjY29yZGluZyB0byB0aGUgY29tcGFueSB3ZWJzaXRlLCB3aGljaCB3YXMgZGlzYWJsZWQgaW4gT2N0b2JlciBmb2xsb3dpbmcgaW5xdWlyaWVzIGJ5IFRoZSBEYWlseSBUZWxlZ3JhcGgsIGl0IGhhcyBpbnRlcmVzdHMgaW4gMzMgY29tcGFuaWVzIGFuZCBoYXMgY29uZHVjdGVkIDMwMCBtaWxsaW9uIG9mIHRyYW5zYWN0aW9ucyBpbiB0aGUgbGFzdCB0aHJlZSB5ZWFycyBzcGVjaWFsaXNpbmcgaW4gZGVhbHMgYW5kIGludmVzdGluZyBpbiBjaGFsbGVuZ2luZyBidXNpbmVzc2VzLiAKQW5kIHRoZXkgY2FuIGNvbnRyb2wgdGhlc2UgcGVvcGxlIHdpdGggYSBjb21iaW5hdGlvbiBvZiByYWNpc20sIHNleGlzbSwgeGVub3Bob2JpYSwgaG9tb3Bob2JpYSwgSXNsYW1vcGhvYmlhLCBhZ2Vpc20sIGNsYXNzaXNtLCBhbnRpIGludGVsbGVjdHVhbGlzbSwgYW5kIGdlbmVyYWwgZmVhciBvZiBjaGFuZ2UgdGhhdCBjYW4gcGlucG9pbnQgdGhlaXIgd29yc3QgbW9uc3RlcnMgYW5kIG1ha2UgdGhlbSBnbyBhcyBmYXIgYXMga2lsbGluZyBvbiBjb21tYW5kLiAKTWFya2V0aW5nIEFydGljbGVzICBEZWNlbWJlciA0LCAyMDA4CkFjY29yZGluZyB0byB0aGUgd2lraSwgdGhlIHRoaW4gbW9kZWxzIHdpbGwgbm90IGJlIHBsYXlhYmxlLiBUQkgsIEkgbG9va2luZyBmb3J3YXJkIHRvIHRoZSBkYXkgd2hlbiB0aGV5IGp1c3QgYWRkIG11bHRpcGxlIGJvZHkgdHlwZXMgZm9yIGV2ZXJ5IHJhY2UgbXkgYm9va2lzaCBodW1hbiBtYWdlIHNob3VsZCBub3QgYmUgYnVpbHQgbGlrZSBDb25hbiB0aGUgQmFyYmFyaWFuLCBhbmQgbXkgYmxvb2QgZWxmIHBhbGFkaW4gc2hvdWxkIG5vdCBsb29rIGxpa2Ugc2hlIG1pZ2h0IGJlIGJsb3duIGF3YXkgaW4gYSBsaWdodCBicmVlemUuCkFkdmlzZXJzIHRoaW5rIHNlY3VyaW5nIGhpcyBwbGFuIHdvdWxkIGVuc3VyZSBnZW5lcmFsIGVsZWN0aW9uIHZpY3RvcnkuCkFsc28gaWYgeW91IGFyZSBhIHBlcnNvbiB0aGF0IHRlbmRzIHRvIHByb2NyYXN0aW5hdGUgYWxvdCBvciBjYW4gZ2V0IGhvb2tlZCB0byB0aGluZ3MgdmVyeSBlYXNpbHksIHlvdSBzaG91bGRuIGdvIGZvciBMZWFndWUgZWl0aGVyIHNpbmNlIHRoZSBnYW1lIGNhbiBiZSB2ZXJ5IGFkZGljdGluZywgZXNwZWNpYWxseSBpZiB5b3UgYXJlIGludGVyZXN0ZWQgaW4gY29tcGV0aXRpdmUgcGxheSBhbmQgc3RhcnQgcmFua2VkIGdhbWVzLiBBIG5vcm1hbCBnYW1lIHRha2VzIHVzdWFsbHkgYWJvdXQgMzAgNDUgbWludXRlcywgc29tZXRpbWVzIGEgYml0IGxvbmdlci9zaG9ydGVyLiBBbmQgb24gdG9wIG9mIHRoaXMgYWxzbyBhIGNvdXBsZSBvZiBtaW51dGVzIGZvciBxdWV1ZWluZyBhbmQgY2hhbXBpb24gc2VsZWN0aW9uLiBXaGljaCBtYWtlcyBpdCByb3VnaGx5IDFoIGZvciBlYWNoIHJvdW5kIG1ha2luZyBpdCBhIHZlcnkgdGltZSBjb25zdW1pbmcgZ2FtZS4gUnVuZXMgYW5kIGNoYW1waW9ucyBuZWVkIHRvIGJlIGJvdWdodCB0byB3aXRoIGluZ2FtZSBjdXJyZW5jeSB3aGljaCB5b3UgZWFybiB3aXRoIGVhY2ggZ2FtZSB5b3UgcGxheSBtYWtpbmcgaXQgYW4gYWxtb3N0IGVuZGxlc3MgZ3JpbmRmZXN0LiBIb3dldmVyIHRoZXNlIGNoYW1waW9uIG9yIGl0ZW0gdHdlYWtzIGNhbiBjaGFuZ2UgYW5kIGluZmx1ZW5jZSB0aGUgd2F5IGxlYWd1ZSBpcyBwbGF5ZWQgYnkgaXRzIHBsYXllcnMgYWxvdCBtYWtpbmcgaXQgaGFyZGVyIHRvIGtlZXAgdXAsIGlmIHlvdSBhcmUganVzdCBzdGFydGluZy4KR29uZSBhcmUgdGhlIGRheXMgb2YgbGVhdmluZyB5b3UncmUgeW91ciBob21lIGFuZCBkcml2aW5nIGRvd24gdG8gcGxheSBjYXNpbm8gZ2FtZXMgLiBJdCBpcyB0aGUgdGltZSB0byBnZXQgcmlkIG9mIGhhc3NsZSBvZiBkcmVzc2luZyB1cCBhbmQgdG8gcGxheSB5b3VyIGZhdm91cml0ZSBjYXNpbm8gZ2FtZXMgZnJvbSB5b3VyIG93biBjb21mb3J0YWJsZSBob3VzZS4gVGhpcyBoYXMgYmVlbiBwb3NzaWJsZSBiZWNhdXNlIG9mIHRoZSBvbmxpbmUgY2FzaW5vIGdhbWVzIGF2YWlsYWJsZSBmb3IgeW91IGF0IGFueSB0aW1lIG9mIHlvdXIgY2hvaWNlLi4gClRoZXkgYm90aCByZWNlbnRseSBncmFkdWF0ZWQgZnJvbSBjb2xsZWdlLCBhcmUgd29ya2luZywgKHNoZSBpcyBhIG51cnNlISkgYW5kIGxpdmUgaW4gQ29sb3JhZG8uIEhlIGp1c3QgaGFkIHN1cmdlcnkgdG8gcmVtb3ZlIGNhbmNlciBmcm9tIGhpcyBseW1waCBub2RlcyBhbmQgZ2xhbmRzLiAKSSBjdWx0aXZhdGVkIGEgd29uZGVyZnVsIGNpcmNsZSBvZiBsaWZlbG9uZyBmcmllbmRzLCBhbGwgb2Ygd2hvbSBJIHRydWx5IGdyYXRlZnVsIHRvIGhhdmUgaW4gbXkgbGlmZS4gSSBsdWNreSB0byBoYXZlIGtpbmQsIGNhcmluZyBhbmQgc3VwcG9ydGl2ZSBmYW1pbHksIGltbWVkaWF0ZSBhbmQgZXh0ZW5kZWQuSXMgZXZlcnl0aGluZyBwZXJmZWN0PyBIZWxsIG5vICAgbXkgU08gb2YgMjd5cnMgd2FzIHJlY2VudGx5IGRpYWdub3NlZCB3aXRoIGFuIGluY3VyYWJsZSBjYW5jZXIgd2hpY2ggcmVhbGx5IGFuZCB0cnVseSBzdWNrcyBiZWNhdXNlIGhlIG15IGJlc3QgZnJpZW5kIGFuZCB3ZSB0aG91Z2h0IHdlIGdyb3cgb2xkIHRvZ2V0aGVyLiBOb3cgd2Ugd29uIG9uIHRvcGljLCBJIGdldHRpbmcgZ3JleSBoYWlyLCBJIGdldHRpbmcgb2RkIGxpbmVzIG9uIG15IGZvcmVoZWFkLCBteSBoaXBzIG1vdmVkIHVwIHRvIG15IHdhaXN0LCBteSBib29icyBhcmUgZG93biBhdCBteSBrbmVlcywgYW5kIG15IHN0b21hY2ggc3RpY2tzIG91dCBsaWtlIGEgYm93bGluZyBiYWxsIGFuZCBnYXNwIEkgbm8gbG9uZ2VyIGZlcnRpbGUgICBidXQgSSBiZWVuIGhpdCBvbiBtb3JlIGxhdGVseSB0aGFuIHNpbmNlIG15IHR3ZW50aWVzLkkgYW0gYSB3b21hbiBmdWxseSBjb21lIGludG8gaGVyIG93biwgYSBnbG9yaW91cyBmb3JjZSB0byBiZSByZWNrb25lZCB3aXRoLiAKTGVnaXRpbWF0ZUFwcGVhbCAgOSBwb2ludHMgIHN1Ym1pdHRlZCAyNyBkYXlzIGFnbwpGb3Igc3RhbmRpbmcsIHBsYWNlIHlvdXIgY2hpcHMgb24gdG9wIG9mIHlvdXIgY2FyZHMsIGZhY2UgZG93biBvciB3YXZlIHlvdXIgaGFuZCBwYWxtIGRvd24gaG9yaXpvbnRhbGx5IG92ZXIgeW91ciBjYXJkcy4gClRoZSBtdXNjdWxhciBhbmQgcG9zdHVyYWwgZWZmaWNpZW5jeSB3aGljaCBUYWkgY2hpIHByb21vdGVzIGdhdmUgcmlzZSB0byBtYW55IGhlYWx0aCBiZW5lZml0cywgYW5kIHRoaXMgaXMgd2hlcmUgVGFpIENoaSBnZXRzIGl0cyByZXB1dGF0aW9uIGFzIGEgaGVhbHRoIGFydC4gTWFueSBvZiB0aGUgVGFpIENoaSBleGVyY2lzZXMgY2FuIGJlIHByYWN0aXNlZCB3aXRob3V0IHJlZmVyZW5jZSB0byB0aGVpciBtYXJ0aWFsIGFwcGxpY2F0aW9ucy4gVGhpcyBhc3BlY3Qgb2YgVGFpIENoaSBpcyBieSBmYXIgdGhlIG1vc3QgcG9wdWxhci4gVW5mb3J0dW5hdGVseSwgd2l0aG91dCB0aGUgbWFydGlhbCByZWZlcmVuY2VzLCBtdWNoICdoZWFsdGgnIHRlYWNoaW5nIGhhcyBkZWdyYWRlZCB0byB0aGUgcG9pbnQgd2hlcmUgdGhlIGJlbmVmaXRzIG1heSBvZnRlbiBoYXZlIGJlY29tZSBtb3JlIHBzeWNob2xvZ2ljYWwgdGhhbiBwaHlzaWNhbC4gVGFpIENoaSBpcyBub3QgcGxhY2VibyB0aGVyYXB5OyBpdCBpcyBhIHBoeXNpY2FsIGFydCwgcmVxdWlyaW5nIHBoeXNpY2FsIGVmZm9ydCB0byBnYWluIHBoeXNpY2FsIGJlbmVmaXRzLgpPbGQgZ3V5IGhhZCBBS3MgYW5kIHRoZSBvdGhlciBndXkgaGFkIEtLLi4gClNlY29uZCwgeW91IHNheSB5b3UgcGxheSBhbGwgMyBzcGVjcyBidXQgaGF2ZSBhIHNpbmdsZSBzZXQgb2YgQXplcml0ZSBnZWFyLiBJIHByb21pc2UgeW91IHRoaXMgaXMgbm90IHN1c3RhaW5hYmxlLiAKRHUgd2lyZnN0IGRlaW5lIEthcnRlbiB2ZXJkZWNrdCBhdWYgZGVuIFRpc2NoIHVuZCBiaXN0IGZyIGRpZXNlIFJ1bmRlIGZlcnRpZy4gClNvLCB0byBhbnN3ZXIgT1AgcXVlc3Rpb24uIExlZ2FsbHksIGhlIGNvdWxkIGhhdmUgdG90YWxseSBwYXRlbnRlZCB0aGUgV1dXLiBCdXQgaXQgd291bGQgaGF2ZSBlYXJuZWQgaGltIHplcm8gbW9uZXkgYmVjYXVzZSBpdCB3b3VsZCBoYXZlIG1hZGUgdGhlIFdXVyBhIGZhaWx1cmUuCk1pdCBQcmVtaXVtIFN0YXJobmRlbiBnZXdpbm50IG1hbiB2aWVsZSBrbGVpbmUgdW5kIG1pdHRsZXJlIFBvdHMgdW5kIHZlcmxpZXJ0IGFiZXIgZGllIGdyb2VuLiAKSSd2ZSBzZWVuIGEgcG9zdCBvciB0d28gZnJvbSB0aGUgZ3V5IHBpY3R1cmVkIGluIHRoaXMgdGhyZWFkIGJlcmF0aW5nIHBlb3BsZSBmb3IgZGVtb25zdHJhdGluZyBhIGxhY2sgb2Yga25vd2xlZGdlIGV2ZW4gdGhvdWdoIGl0IGhhZCBub3RoaW5nIHRvIGRvIHdpdGggd2hhdCB0aGV5IHdlcmUgdHJ5aW5nIHRvIGZpbmQgb3V0LiBKdXN0IHNlZW1zIGxpa2UgYSBnZW5lcmFsbHkgdG94aWMgYW5kIHVzZWxlc3MgcGxhY2UuIEkgaGF0ZSB0aGF0IGl0IHBvcHMgdXAgc28gb2Z0ZW4gd2hlbiBnb29nbGluZyB2YXJpb3VzIHN0dWZmLgpPa2F5LCBzbyBub3cgdGhhdCB5b3UncmUgaW4gdGhlIG1vb2QgYW5kIGhhdmUgYWxsIHlvdXIgbXVzY2xlcyBmdW5jdGlvbmluZyBmb3IgdGhlIGFjdGlvbiB0aGF0IGxpZXMgYWhlYWQsIGl0J3MgdGltZSB0byBwcmVwYXJlIGZvciB0aGUgbWFpbiBjb3Vyc2UuIApUYWxraW5ndG9uIHdhcyBpbnNpZGUgQXB0LiAxMCBhdCAxMjIgSXZhbmhvZSB3aGVuIHR3byBtYXNrZWQgbWVuIGVudGVyZWQgYXJtZWQgd2l0aCBndW5zLCBwcm9zZWN1dG9ycyBoYXZlIHNhaWQuIEEgcG9rZXIgcGxheWVyIHdpdGggYSBjb25jZWFsZWQgcGlzdG9sIGxpY2Vuc2Ugb3BlbmVkIGZpcmUgb24gdGhlIHJvYmJlcnMsIGFuZCAyNSB5ZWFyIG9sZCBSYW1vbiBDLiAKSSB1c2VkIHRvIHZpc2l0IGEgZGlzYWJsZWQgY2xpZW50IGEgd2hpbGUgYmFjaywga2luZGEgeW91bmcgZ3V5IGxhdGUgMjAgYW5kIHdoZWVsY2hhaXIgYm91bmQuIEkgaGFkIGEgd2hvbGUgZ2FtZXIgdGhpbmcgZ29pbmcgb24gYmVjYXVzZSBJIGxvdmUgdmlkZW8gZ2FtZXMgc28gSSBvZmZlciB0byBwbGF5IGdhbWVzIHdpdGggY2xpZW50cywgaGF2ZSBzb21lIG5hdWdodHkgcGVuYWx0aWVzIGlmIHlvdSBsb3NlIHRoYXQgc29ydCBvZiB0aGluZyBmb3IgZnVuLiAKVGhlaXIgZm9ybSBvZiBwdW5pc2htZW50IHdhcyBlaXRoZXIgZXhpbGUgb3IgYmFuaXNobWVudCBmcm9tIHRoZWlyIGNvbW11bml0aWVzLiAKT25lIG9mIHRoZSB0d28gc2hvdWxkIGdvLiBOb3QgYm90aC4gCkdvIHRvIHRoaXMgd2Vic2l0ZS4gVGhlcmUgaGF2ZSBiZWVuIGFtZXJpY2FuIHBvcCBzdGFycyB3aG8gd2VyZSB5b3VuZyB0ZWVuYWdlcnMuIApJdCAxYW0gYW5kIGhlIHBsYXlpbmcgd2l0aCBteSBib29iIGluIGEgaGFsZiBhc2xlZXAgc3RhdGUuIEkga2VlcCB0cnlpbmcgdG8gcHV0IGhpbSBpbiBoaXMgYmFzc2luZXQsIGJ1dCBoZSBzdGFydHMgZnVzc2luZyBhIGZldyBtaW51dGVzIGxhdGVyLiAKTFVGVCwgTG91IFBhc3NlZCBhd2F5IGF0IEZyZWVwb3J0IENhbXB1cyBvZiBHcmFuZCBSaXZlciBIb3NwaXRhbCBvbiBXZWRuZXNkYXksIE1hcmNoIDIsIDIwMTYsIGFmdGVyIGEgZmllcmNlIGJhdHRsZSB3aXRoIGNhbmNlciBhdCB0aGUgYWdlIG9mIDU1LiAKTGF3cmVuY2UgU3VtbWVycwpOb3RpZXJlIGRpciBtaW5kZXN0ZW5zIDE1MDAgU3R1bmRlbiBkZWluZXMgU3BpZWxzLiBBbiBkaWVzZXIgU3RlbGxlIHdpcnN0IGR1IHNhZ2VuOiAiT2ggTWFubiwgZGFzIGhydCBzaWNoIG5hY2ggQXJiZWl0IGFuLiIgSXN0IGVzIGF1Y2ggICB3ZW5uIGR1IGRlaW5lbiBMZWJlbnN1bnRlcmhhbHQgZGFtaXQgdmVyZGllbmVuIG1jaHRlc3QsIGRhbm4gbXVzc3QgZHUgZWluZW4gZW50c3ByZWNoZW5kZW4gQXVmd2FuZCBiZXRyZWliZW4uIFVuZCBkYXMgYmVkZXV0ZXQgamVkZXMgU3BpZWwgbmFjaHp1aGFsdGVuIHVuZCBkaWUgRXJnZWJuaXNzZSB6dSBub3RpZXJlbi4gCkRvZ3MgY2FuIHNlbnNlIG91ciBlbmVyZ3khLiAKVGhlIHBlcnNpc3RlbmNlIG9mIHRoZSBtZW1vcnkgb2YgcGFpbiB0aGF0IGNhbiBsYXN0IGJleW9uZCBpdHMgYmVuZWZpY2lhbCBmdW5jdGlvbiBoYXMgbGVkIHRvIHJlc2VhcmNoIGludG8gd2F5cyBvZiBhbGxldmlhdGluZyBjaHJvbmljIHBhaW4uIFJlc2VhcmNoIGhhcyBzaG93biB0aGF0IHRoZSBiZXN0IHdheSB0byB0aHdhcnQgY2hyb25pYyBwYWluIGlzIHRvIHByZXZlbnQgcGFpbiBtZW1vcmllcyBmcm9tIGZvcm1pbmcgaW4gdGhlIGZpcnN0IHBsYWNlLiBBbmVzdGhlc2lhIHByZXZlbnRzIHRoZSBjb25zY2lvdXMgbWluZCBmcm9tIGZvcm1pbmcgcGFpbiBtZW1vcmllcyBkdXJpbmcgYSBwdXJwb3NlZnVsIGluanVyeSBsaWtlIHN1cmdlcnkuIFlldCwgdGhlIG5lcnZvdXMgc3lzdGVtIGNhbiBzdGlsbCBmb3JtIGl0cyBvd24gcGFpbiBtZW1vcmllcy4gTWVkaWNhbCBwcm9mZXNzaW9uYWxzIGFyZSBmaW5kaW5nIHRoYXQgYW5hbGdlc2ljcyAgIGRydWdzIHRoYXQgcHJldmVudCBwYWluIGluIHRoZSBuZXJ2b3VzIHN5c3RlbSAgIGdpdmVuIHRvIHBhdGllbnRzIGJlZm9yZSBzdXJnZXJ5IHByZXZlbnQgY2hyb25pYyBmb3JtYXRpb24gb2YgcGFpbiBtZW1vcnksIHdoaWNoIGRpbWluaXNoZXMgdGhlIGRldmVsb3BtZW50IG9mIGNocm9uaWMgcGFpbiBsYXRlciBvbiBbc291cmNlOiBBY2tlcm1hbl0uCklmIHlvdSdyZSB3ZWFyaW5nIGEgaGVhdmllciBzY2VudCwgdHJ5IGFwcGx5aW5nIGl0IGp1c3QgdG8gdGhlIGxvd2VyIHBhcnQgb2YgeW91ciBib2R5LCBsaWtlIGEgcXVpY2sgc3ByaXR6IGJlaGluZCB0aGUga25lZXMuIFRoZSBzY2VudCB3b24ndCByaXNlIGFzIHF1aWNrbHkgYW5kIGJlIGFzIGlycml0YXRpbmcgdG8gb3RoZXJzLiBZb3UnbGwgZmluZCB0aGUgcHJvcGVyIGJhbGFuY2Ugc29vbiBlbm91Z2gsIGFuZCB5b3VyIHNjZW50IHdpbGwgZHJhdyBwZW9wbGUgY2xvc2VyIHJhdGhlciB0aGFuIHJlcGVsIHRoZW0uLiAKVGhlcmUganVzdCB3ZXJlbiBhbnkgVEhFUkUuIiBBbmQgd2Ugc2FpZCBGdWNrIFlvdSBKaW0uIApIZSBnb2VzIGJhY2sgdGhhdCBuaWdodCB3aXRoIGEgc2xpZGVoYW1tZXIsIHB1bGxzIHRoZSBsb2NrLCBhbmQgc3RlYWxzIHRoZSBiaWtlLiAKQXMgYSBsaWJlcmFsIHdobyBpcyB2ZXJ5IG11Y2ggZm9yIGlkZWEgb2YgdGhlIDJuZCBBLiwgdGhpcyBpcyBkdW1iLiBIb3dldmVyLCBsZXQgbm90IGxldCAyIGxhd21ha2VycyBnZXQgZXZlcnlvbmUgZnJlYWtpbmcgb3V0LiBUaGlzIG9idmlvdXNseSB3b3VsZG4gZ2V0IHBhc3QgdGhlIHN1cHJlbWUgY291cnQgaWYgaXQgZXZlciBnb3QgcGFzc2VkIGluIE5ZLiBTcG9pbGVyIGl0IHdvbnQuCkFmdGVyIGFsbW9zdCAyMiB5ZWFycywgSSBob25lc3RseSBmb3JnZXQgaWYgaGUgaG9tZSBvciBub3QgbW9zdCBvZiB0aGUgdGltZS4gCllvdSB3aWxsIGJhc2UgeW91ciBiZXQgZGVwZW5kaW5nIG9uIHRoZSB0d28gY2FyZHMgeW91IGhhdmUgYW5kIHRoZSBvdGhlciBvcHRpb24gaXMgdG8gZm9sZC4gVGhlcmUgd2lsbCBiZSB0aHJlZSBjYXJkcyBpbiBmcm9udCBvZiB0aGUgZGVhbGVyIGZhY2VkIHVwIGNhbGxlZCB0aGUgZmxvcC4gVGhlIG5leHQgY2FyZCB0aGF0IHdpbGwgYmUgZGVhbHQgaXMga25vd24gYXMgdGhlIGZsb3AuIApTaW5jZSAxMCB5ZWFyIG9sZCBnaXJscyB0ZW5kIHRvIGJlIGtub3dsZWRnZWFibGUgb25seSBhYm91dCB3aGF0ZXZlciB0b2RheSdzIGVxdWl2YWxlbnQgdG8gdGhlIENhcmUgQmVhcnMgaXMsIGhlciBwYXJlbnRzIHdlcmUgaW5pdGlhbGx5IHNrZXB0aWNhbC4iWWVzLCBkZWFyLiAKQnV0IG5vIG9uZSB3YXMgc3RlcHBpbmcgdXAgdG8gdGhlIGZyb250IG9mIHRoZSBsaW5lISBJIHdlbnQgcmlnaHQgdG8gdGhlIGZyb250LiAKT24gb3VyIGNhbXB1cyBhIHNpbmdsZSBpcyBndWFyYW50ZWVkLCBidXQgZ2V0dGluZyBwYWlkIGRvZXNuJ3Qgc291bmQgbGlrZSB0b28gYmFkIG9mIGFuIGFycmFuZ2VtZW50LgpNeSBib3NzIGlzIGFsbW9zdCBhbHdheXMgaW4gYSBwYWlyIG9mIGtoYWtpIHNob3J0cy4gSSBrbm93IGlmIHlvdSBhcmUgd29ya2luZyBmb3Igc29tZW9uZSBlbHNlIHRoZXJlIG1heSBiZSBhIGNlcnRhaW4gZHJlc3MgY29kZSwgYnV0IHRoZXJlJ3Mgbm8gaXNzdWUgd2l0aCBzaG9ydHMgaW4gbXkgb3Bpbmlvbi4KSWYgeW91IGRvbiB3YW50IHRvIHdhdGNoIHRoZSB2aWRlbywgY29uc2lkZXIgdGhpczogQW1hem9uIGNhbiB0YW5rIGFueSBlbnRpcmUgaW5kdXN0cnkgc3RvY2sgdmFsdWUgd2l0aG91dCBsaWZ0aW5nIGEgZmluZ2VyLiBBbGwgdGhleSBoYXZlIHRvIGRvIGlzIGlzc3VlIGEgcHJlc3MgcmVsZWFzZS4gSXQgaGFwcGVuZWQgbGFzdCB5ZWFyIHdpdGggdGhlIGVudGlyZSBoZWFsdGhjYXJlIHNlY3RvciB3aGVuIEFtYXpvbiBhbm5vdW5jZWQgdGhleSB3ZXJlIGdvaW5nIHRvIGNyZWF0ZSB0aGVpciBvd24gaGVhbHRoY2FyZSBjb21wYW55LCBhbmQgaGFwcGVuZWQgYWdhaW4gdGhpcyBwYXN0IHdlZWsgd2hlbiBBbWF6b24gYW5ub3VuY2VkIHRoZXkgd2VyZSBsb29raW5nIHRvIGNyZWF0ZSBhIGdyb2Nlcnkgc3RvcmUgY2hhaW4uIApBbmQgaG93IG11Y2ggbW9uZXkgd2FzIHBsYXllZCBpbiB0aGF0IGZpcnN0IGdhbWU/IFBlb3BsZSBoYWQgcHJvYmFibHksIHlvdSBrbm93LCBzaXggZmlndXJlIGxvc3Nlcywgc2l4IGZpZ3VyZSB3aW5zLiBSZXBvcnRlcjogQSBmb3JtZXIgY29ja3RhaWwgd2FpdHJlc3MgZnJvbSBzbWFsbCB0b3duIENvbG9yYWRvLCBNb2xseSB3YXMgaW1tZWRpYXRlbHkgaW50b3hpY2F0ZWQgYnkgdGhlIG1peHR1cmUgb2YgZ2xhbW91ciwgd2VhbHRoLCBzZWNyZWN5IGFuZCBtb3N0IG9mIGFsbCwgdGhlIGNhc2ggdGlwcyBzaGUgcmVjZWl2ZWQgZnJvbSB0aGUgd2lubmVycy4gClNvIEkgY29udGludWVkIHRvIGJsZWVkIG1vbmV5IHNsb3dseSBhd2F5IGF0IHRoZSB0YWJsZXMgYW5kIEkgd2FzIHVud2lsbGluZyB0byBhZG1pdCB0aGF0IEkgY291bGQgYmVlbiBhdCBtZWRpY2FsIHNjaG9vbCBpbnN0ZWFkIG9mIGluIFRvcm9udG8gYXR0ZW1wdGluZyBhIGNhcmVlciBhcyBhbiBvbmxpbmUgcG9rZXIgcGxheWVyLiBJIHdhcyBub3QgaW4gYSBnb29kIHNwb3QgaW4gbXkgbGlmZSBldmVuIHRob3VnaCBJIHRlY2huaWNhbGx5IGhhZCAkNDBrIHRvIG15IG5hbWUgYXQgdGhlIGFnZSBvZiAyMi4gTXkgbWluZCB3YXMgc2V0IHRvIGVpdGhlciBibG93IHRoZSByZXN0IG9mIHRoZSByb2xsIGF0dGVtcHRpbmcgbXkgZHJlYW0gb3IgdG8gbWFrZSBpdCBhbmQgaGF2ZSBhbiBhbWF6aW5nIHN0b3J5LiAKTUFTU0FHRSBQUklDRUQgQlkgVEhFIEhPVVJUaGlzIGlzIHRoZSBtb3N0IGJhc2ljIHByb2dyYW0gd2Ugb2ZmZXIgYW5kIGlzIGRlc2lnbmVkIHRvIHNlcnZlIGFzIGEgcHVibGljIHJlbGF0aW9ucyBjdXN0b21lciBzZXJ2aWNlIGV2ZW50IG9yIGFzIGFuIGVtcGxveWVlIGJlbmVmaXQuV2Ugc2V0IHVwIG91ciBtYXNzYWdlIGNoYWlycyBvciBhIHRoZXJhcHkgdGFibGUgbmVhciBvciBhcm91bmQgeW91ciBvZmZpY2UsIGV2ZW50LCBvciBwYXJ0eS5UaGUgZmVlIGlzIGJhc2VkIG9uIHRoZSBudW1iZXIgb2YgY2hhaXJzL3RhYmxlcyBhbmQgd29ya2VycyByZXF1aXJlZCwgdGhlIG51bWJlciBvZiBob3VycyBib29rZWQgYW5kIHRoZSBsb2NhdGlvbiBvZiB0aGUgZXZlbnQuIEZlZXMgcmFuZ2UgZnJvbSBhcyBsaXR0bGUgYXMgJDYwIHRvICQxNTAgcGVyIGhvdXIuT2Z0ZW4gYSBjb21wYW55IGFuZCB0aGVpciBlbXBsb3llZXMgd2lsbCBzaGFyZSB0aGUgY29zdCBvZiBicmluZ2luZyBPbiBTaXRlIE1hc3NhZ2UgaW50byB0aGUgb2ZmaWNlLiAKTEEgVlVMTkVSQUJJTElURSBWSUNUSU1PTE9HSVFVRSBQQVIgRVNTRU5DRQpJdCdzIGEgc2lsZW50IHN0cnVnZ2xlLiBXaGF0IHRoZSBtYXNzIGFwcGVhcnMgdG8gYmUgZ29pbmcgdGhyb3VnaCBpcyBhbiBhdHRlbnRpb24sIG9yIGxhY2sgb2YgYXR0ZW50aW9uLCBkaXNvcmRlci5NYXliZSB0byB0cnkgdG8gZmlndXJlIGl0IG91dDsgdGVsbCB5b3Vyc2VsZiB5b3UgbG92ZSB5b3UsIGFuZCB0aGF0IHlvdSBhcmUgaGFwcHkuIApBIGxvdCBvZiBzdHVmZiBpc24gdGVzdGVkIGR1cmluZyBhbiBpbnRlcnZpZXcgYnV0IHRoZSBPTVNDUyB3aWxsIGxvb2sgYSBsb3QgYmV0dGVyIG9uIHlvdXIgcmVzdW1lIGFuZCBoZWxwIHlvdSBnZXQgeW91ciBmb290IGluIHRoZSBkb29yIGFuZCBuZWdvdGlhdGUgaGlnaGVyIHNhbGFyaWVzLi4gClRoZXJlIGlzIG1vcmUgc2VyaWVzIGNvbGx1c2lvbiBnb2luZyBvbiwgZmxhc2hpbmcgY2FyZHMsIGFjdGluZyBvdXQgb2YgdHVybi4gU29tZSBvZiBpdCBpcyBqdXN0IHJ1ZGUgYnkgYSBydWRlIHBsYXllciwgYnV0IGEgbG90IG9mIGl0IGlzIHBhcnQgb2YgdGVhbSBwbGF5LiBBbmQgeWVzIHN0cm9uZyBjb2xsdXNpb24sIHdoZXJlIHNpZ25hbHMgYXJlIGdvaW5nIG9uIGFuZCB5b3VyIGJlaW5nIGN1dCB1cCBieSBwcm9zIGlzIG5vdCB1bmNvbW1vbi4uIApIYW5kbGUgeW91ciBhcmd1bWVudHMgd2l0aCBjYXJlIHdoaWxlIGF2b2lkaW5nIHJlZ3VsYXIgZmlnaHRpbmcgICAgIElmIGl0IGlzIGltcG9zc2libGUgdG8gc29ydCBvdXQgcHJvYmxlbXMgYW1vbmdzdCB5b3Vyc2VsZiwgdGFsayB3aXRoIHlvdXIgcGFyZW50cyBhYm91dCB0aGUgdGhpbmdzIHRoYXQgYXJlIHRyb3VibGluZyB5b3UuIApUZWFjaCB0aGUgY2hpbGQgdGhhdCBhbGwgdm9jYWwgY29tbXVuaWNhdGlvbiBtdXN0IGJlIGRvbmUgaW4gdGhlIGZvcm0gb2YgeWVsbGluZyBhbmQgc2NyZWFtaW5nLCB0aGVuIG5ldmVyIHRlbGwgeW91ciBjaGlsZCB0byBzaHV0IHRoZSBmdWNrIHVwLgpTb29uIGJvdGggdHJhY2tzIGJlY2FtZSBwYXJ0IG9mIHRoZSBNYXVjaCBDaHVuayBTY2VuaWMgUmFpbHdheS4gCkp1c3QgY29uc2lkZXIgdGhlIGNhc2Ugb2YgRmFpcmZheCwgVmlyZ2luaWEgbWF5b3IgUi4gU2NvdHQgU2lsdmVydGhvcm5lLiAKU2hlIG5ldmVyIHdhbnRlZCBoaW0gdG8gZ2V0IGluIHRyb3VibGUgZnJvbSB0aGUgc3RhcnQuIApJIGEgY2VydGlmaWVkIEVxdWluZSBNYXNzYWdlIFRlY2huaWNpYW4sIGFuZCBob25lc3RseSB0aGV5IGdvIGhhbmQgaW4gaGFuZC4gVGhlIGJvbmVzIGhhdmUgdG8gYmUgaW4gdGhlIGNvcnJlY3QgYWxpZ25tZW50IHRvIGFsbG93IHRoZSBtdXNjbGVzIHRvIGZ1bGx5IHJlbGF4IGFuZCByZWxlYXNlIHRlbnNpb24vc3Bhc21zIGJ1dCBjb3VudGVycG9pc2UsIHRoZSBtdXNjbGVzIGhhdmUgdG8gYmUgYWJsZSB0byByZWxlYXNlIHRoZWlyIHRlbnNpb24vc3Bhc21zIGluIG9yZGVyIGZvciB0aGUgYm9uZXMgdG8gZmFsbCBiYWNrIGludG8gdGhlIGNvcnJlY3QgYWxpZ25tZW50LkJvdGggb2YgbXkgcGFyZW50cyBoYXZlIGJlZW4gY2hpcm9wcmFjdG9ycyBhbmQgbWFzc2FnZSB0aGVyYXBpc3RzKGZvciBodW1hbnMpIGZvciBvdmVyIDM1IHllYXJzLiAKU2FuZHMgbGF0ZXIgYWRkZWQgYSBzaG9wcGluZyBtYWxsLCBwZXJmb3JtaW5nIGFydHMgdmVudWUgYW5kIDMwMCByb29tIGhvdGVsLi4gClRoYXQgbWlnaHQgYmUgZWFzaWVyIHRoYW4gY2Fycnlpbmcgb25lIHdpdGggeW91LiAKUmVmcmFpbiBmcm9tIHBvc3Rpbmcgam9rZXMsIG1lbWVzLCBwdW5zLCByZWFjdGlvbiBnaWZzIGFuZCB3b3JkcGxheXMuIENvbW1lbnRzIHNob3VsZCBjb250cmlidXRlIHRvIHRob3VnaHRmdWwgYW5kIHNlcmlvdXMgZGlzY3Vzc2lvbiBvbmx5LgpBIHRhbGwsIGxlYW4sIHBsYWluIHNwb2tlbiBmaWd1cmUsIGludmFyaWFibHkgY3Jvd25lZCBieSBhIGNvd2JveSBoYXQgYWRvcm5lZCB3aXRoIGEgZ2VudWluZSByYXR0bGVzbmFrZSBoZWFkLCBTbGltIHJlbGlzaGVkIGhpcyByZXB1dGF0aW9uIGFzIG9uZSBvZiB0aGUgZmlyc3QgcG9rZXIgc3VwZXJzdGFycyBhbmQgZW5qb3llZCBicmFnZ2luZyBhYm91dCBoaXMgcHJvd2VzcyBhdCB0aGUgYnVzaW5lc3Mgb2YgYmx1ZmZpbmcsIHJhaXNpbmcsIHNlZWluZyBhbmQgZm9sZGluZy4gSGUgb2Z0ZW4gcmVnYWxlZCBBbWVyaWNhbiB0ZWxldmlzaW9uIGNoYXQgc2hvdyBhdWRpZW5jZXMgd2l0aCBob21lc3B1biB3b3JkcyBvZiBhZHZpY2UgZm9yIHdvdWxkIGJlIGhpZ2ggcm9sbGVycy4gQXJvdW5kIHRoZSB0YWJsZSwgaGUgd291bGQgc2F5LiAKRnJvbSBpbiAxOTYyLCB3aXRoIHdob20gaGUgZW5qb3llZCBhbiBhbWF6aW5nIG1hcnJpYWdlIHVudGlsIGhlciBkZWF0aCBpbiAyMDAwLiBBIGRlZXBseSBjYXJpbmcgbWFuLCBCaWxsJ3MgZ3JlYXRlc3Qgam95IHdhcyBoaXMgZmFtaWx5LCBvZiB3aG9tIGhlIHdhcyBleHRyZW1lbHkgcHJvdWQuIEhlIHdhcyB0aGUgYmVsb3ZlZCBmYXRoZXIgYW5kIGZhdGhlciBpbiBsYXcgb2YgU2hlcnJpIGFuZCBEb24gSGVucmljaCBvZiBOZXcgSGFtYnVyZywgUGF1bCBhbmQgRG9yaXMgQmVhbiBvZiBXYXRlcmxvbywgR2Vhbm5hIEJlYW4gQmF0ZXMgYW5kIEpheSBQYXJzb24gb2YgS2l0Y2hlbmVyLCBhbmQgU2NvdHQgQmVhbiBhbmQgTGFuYSBaaW5jb25lIG9mIEtpdGNoZW5lciBhbmQgV2F0ZXJsb28uIApPbmRlcnR1c3NlbiB3ZWVyIGdyb3RlIGhvbmdlciwgZW4gd2Ugdm9uZGVuIGVlbiBnZXplbGxpZyB0eXBpc2NoIChHZW9yZ2lzY2g/KSByZXN0YXVyYW50IGJpaiBoZXQgcGFyay4gRWVuIGhlZWwgbGV1ayBldGVudGplLiAKVG91dCAgZmFpdC4gT24gcGV1dCBsZSBjaGlmZnJlciBhdSBjb3VycyBkZSBjZXMgMzMgZGVybmlyZXMgYW5uZXMuIE9uIGEgb2JzZXJ2IHVuIHZlcmRpc3NlbWVudCBkZSBsYSBwbGFudGUgcXVpIGEgdCB2YWx1ICBsJ3F1aXZhbGVudCBkJ3VuIHNpeGltZSBjb250aW5lbnQgdmVydCBkZSAxOCBtaWxsaW9ucyBkZSBraWxvbXRyZXMgY2FycnMsIGMnZXN0ICBkaXJlIHBsdXMgZGUgMzAgZm9pcyBsYSBzdXBlcmZpY2llIGRlIGxhIEZyYW5jZSBtdHJvcG9saXRhaW5lLCBkJ2F1dHJlIHBhcnQsIGNlbGEgc2UgcmVjb3VwZSB0cnMgYmllbiwgcHVpc3F1J3VuZSBwYXJ0aWUgZHUgQ08yIHF1ZSBub3VzIG1ldHRvbnMgdmEgZGFucyBsYSB2Z3RhdGlvbiBxdWkgc2UgamV0dGUgbCBkZXNzdXMgYXZlYyBhdmlkaXQuIERhbnMgbCdoaXN0b2lyZSBkZSBsYSBwbGFudGUsIGlsIHkgYSBkZXMgcG9xdWVzIG8gaWwgeSBhIGV1IGJlYXVjb3VwIHBsdXMgZGUgQ08yLCBsYSB2Z3RhdGlvbiB0YWl0IGx1eHVyaWFudGUgZXQgYydlc3QgY2UgcXVpIGEgY3IgY2UgcXVlIGwnb24gYXBwZWxsZSBhdWpvdXJkJ2h1aSBsZXMgZ2lzZW1lbnRzIGZvc3NpbGVzLiBJbCB5IGF2YWl0IHBsdXMgZGUgQ08yIGRhbnMgbCdhaXIgIGNlIG1vbWVudCBsIGV0IGNlbGEgYSBwdSBwZXJtZXR0cmUgY2V0dGUgdmd0YXRpb24gbHV4dXJpYW50ZS4KVGhlc2Ugc2NlbmFyaW9zIGVuY2lyY2xlIGEgZGlzcHV0ZSBhYm92ZSB1bnNjcnVwdWxvdXMgcGxheWVycyB3aG8gcmVhbGl6ZSBob3cgdG8gZW5nYWdlIGluIHBva2VyLCBuZXZlcnRoZWxlc3MgdXNlIGlsbGljaXQgY29tcHV0ZXIgc29mdHdhcmUgdG8gb2ZmZXIgdGhlbSBhbiBhZHZhbnRhZ2UuIApUaGUgY2x1YiBoYXMgMTkgcG9rZXIgbWFjaGluZXMgd2hpY2ggZHJldyAkMzU1LDk2MiBpbiBleHBlbmRpdHVyZSBpbnRoZSAxMiBtb250aHMgdG8gSnVuZSAzMCB0aGlzIHllYXIuIFRoYXQgZmlndXJlIHdhcyBzdWJzdGFudGlhbGx5IGRvd24gb24gdGhlJDY4MSw0MTIgZ2FtaW5nIG1hY2hpbmUgc3BlbmRpbmdpbiAyMDEwIDIwMTEuIApJIGJvdWdodCBQbGFuIEIgb25seSBvbmNlIChpbiAyMDEyKS4gU3VwZXIgcHJvZ3Jlc3NpdmUgY2l0eSwgZ2F5IG5laWdoYm9yaG9vZC4gVGhlIG9sZGVyLCBtYWxlIGNhc2hpZXIgbWFkZSBtZSBwdXQgZG93biBteSBuYW1lIGFuZCBhZGRyZXNzIChpcyB0aGF0IG5vcm1hbD8/KSBpbiBhIHJlZ2lzdHJ5IG5vdGVib29rLCB0aGVuIG5vdGljZWQgbXkgcmluZyBhbmQgYXNrZWQgaWYgbXkgaHVzYmFuZCBrbmV3LCBhbmQgd2hldGhlciBpdCB3YXMgbXkgZmlyc3QgdGltZSB1c2luZyBpdC4gYWxsIGJlZm9yZSBoYW5kaW5nIG1lIHRoZSBwYWNrYWdlLiBMdWNraWx5IEkgZmVsdCBjb25maWRlbnQgYW5kIGp1c3RpZmllZCBpbiB0aGUgcHVyY2hhc2UsIG15IGh1c2JhbmQgZGlkIGtub3csIGl0IHdhcyBteSBmaXJzdCB0aW1lLCBhbmQgSSB3YXNuJ3QgZWFzaWx5IHNoYWtlbi4gU28gSSBtYWRlIGEgbGlnaHQgam9rZSBhYm91dCBpdC4gR3V5IHNob29rIGhpcyBoZWFkIGFuZCBoYW5kZWQgbWUgdGhlIHBhY2thZ2UuCk5ld2Zhcm0gUGFyaywgdGhlIEJvdGFuaWNhbCBHYXJkZW5zLCBNdCBDb290IFRoYSBCb3RhbmljYWwgR2FyZGVucyBhbmQgdGhlIGxvb2tvdXQgaXMgYSBtdXN0LiBQYXJ0cyBvZiB0aGUgYmF5IG5lYXIgQ2xldmVsYW5kIFBvaW50IGFyZSBuaWNlIHRvby4KVGhlIGhvdXNlIHRha2VzIHRoZWlyIHJha2UuIApJZiB5b3UncmUgbG9va2luZyB0byBnZXR0aW5nIHNvbWV0aGluZyB0aGF0IGlzIGdvaW5nIHRvIGNoYW5nZSB0aGUgYXRtb3NwaGVyZSBhcm91bmQgeW91ciBsb2NhbCBwb2tlciBnYW1lLCB3ZSByZWNvbW1lbmQgZ29pbmcgd2l0aCB0aGUgMTAwMCBQYXVsc29uIFRvcGhhdCBhbmQgQ2FuZSBQb2tlciBDaGlwcyBhbmQgc2VlaW5nIHdoYXQgaGFwcGVucy4gClNoZSB1dGlsaXplcyByZWZsZXhvbG9neSwgY3VwcGluZyBhbmQgZ3VhIHNoYSBpbiBoZXIgc2Vzc2lvbnMgaWYgbmVlZGVkLiBDYXJ5biBoYXMgc3R1ZGllZCBtdWx0aXBsZSBmb3JtcyBvZiBFbmVyZ3kgSGVhbGluZywgTWVkaXVtIHNoaXAsIEhlcmJvbG9neSwgQXJvbWF0aGVyYXB5LCBDcnlzdGFsIEhlYWxpbmcsIGFuZCBDYXJkIFJlYWRpbmcuIFNoZSBoZWxwcyBmYWNpbGl0YXRlIGhlYWxpbmcgdXRpbGl6aW5nIGEgbXVsdGkgZGlzY2lwbGluYXJ5IGFwcHJvYWNoIHRoYXQgcmVsZWFzZXMgcGh5c2ljYWwgZGlzY29tZm9ydCBhbmQgYXNzaXN0cyBpbiByZWVzdGFibGlzaGluZyBoYXJtb255IHdpdGhpbiB0aGUgZW5lcmd5IGZpZWxkcyBvZiBlYWNoIHBlcnNvbiBzaGUgd29ya3Mgd2l0aC4gQXMgYSBSZWlraSBNYXN0ZXIgdGVhY2hlciBzaGUgaGFzIHRyYWluZWQgbWFueSBzdHVkZW50cyBpbiB0aGlzIGFuY2llbnQgaGVhbGluZyBhbmQgaGFzIGVzdGFibGlzaGVkIGhlcnNlbGYgaW4gdGhlIGhlYWxpbmcgY29tbXVuaXR5IGFzIGEgbWVudG9yIGZvciBtYW55LiBTaGUgc2hhcmVzIGhlciBwYXNzaW9uIGFuZCBnaWZ0cyBvZiBoZWFsaW5nIHdpdGggYWxsIHNoZSBjb21lcyBpbnRvIGNvbnRhY3Qgd2l0aC4gU2hlIHdhbGtzIGhlciB0YWxrIGFuZCBoZWxwcyBvdGhlcnMgdG8gdW5kZXJzdGFuZCB0aGUgaW1wb3J0YW5jZSBvZiB0aGUgbWluZCwgYm9keSwgc3Bpcml0IGNvbm5lY3Rpb24gZm9yIG9wdGltYWwgaGVhbHRoIGFuZCB3ZWxsbmVzcy4gClRvcCBUZWNoIEF0IENFUyAyMDE2Q0VTIDIwMTZUaGUgIkJhY2sgdG8gdGhlIEZ1dHVyZSIgaW5zcGlyZWQgIlNtYXJ0c2hvZSIgZnJvbSB0aGUgRnJlbmNoIGNvbXBhbnkgRGlnaXRzb2xlIGlzIGRpc3BsYXllZCBhdCB0aGUgQ0VTIDIwMTYgQ29uc3VtZXIgRWxlY3Ryb25pY3MgU2hvdyBpbiBMYXMgVmVnYXMgb24gSmFudWFyeSA2LCAyMDE2IC4gKFJPQllOIEJFQ0svQUZQL0dldHR5IEltYWdlcykKRm9sbHltaXNlciB1ClRleGFzIEhvbGQnZW0gOiBPbmUgcGVyc29uIGlzIGRlc2lnbmF0ZWQgYXMgdGhlIGRlYWxlci4gSGUgc3RhcnRzIGFuZCBnaXZlcyB0aGUgcGVyc29uIHNpdHRpbmcgZGlyZWN0bHkgdG8gaGlzIGxlZnQgc2lkZSBvbmUgY2FyZCBmYWNlIGRvd24sIHRoZSBuZXh0IHBlcnNvbiBnZXRzIG9uZSBjYXJkIGZhY2UgZG93biwgZXRjIHVudGlsIGhlIHJlYWNoZXMgaGltc2VsZi4gVGhlbiBldmVyeSBwZXJzb24gcGxheWluZyB0aGUgcm91bmQgZ2V0cyBhIHNlY29uZCBjYXJkLCBmYWNlIGRvd24gc3RhcnRpbmcgYWdhaW4gd2l0aCB0aGUgcGVyc29uIHRvIHRoZSBsZWZ0IG9mIHRoZSBkZWFsZXIuIApJdCdzIGltcG9ydGFudCB0byBiZSByZWFsaXN0aWMgYWJvdXQgd2hhdCBvbmUgZGVlcCB0aXNzdWUgbWFzc2FnZSBjYW4gYWNoaWV2ZS4gTWFueSBwZW9wbGUgYXNrIGZvciBtb3JlIHByZXNzdXJlLCB0aGlua2luZyB0aGF0IGlmIHRoZSB0aGVyYXBpc3QganVzdCBwdXNoZXMgaGFyZCBlbm91Z2gsIHRoZXkgY2FuIGdldCByaWQgb2YgYWxsIHRoZWlyIGtub3RzIGluIGFuIGhvdXIuIFRoaXMganVzdCB3b24ndCBoYXBwZW4uCkxlZ2lzbGF0b3JzIHdlcmUgYWxyZWFkeSBsb29raW5nIGF0IGFzc2lzdGluZyB3aXRoIHJlbm92YXRpb25zIHRvIHRoZSBQYWNlcnMnIEJhbmtlcnMgTGlmZSBGaWVsZGhvdXNlLiAKVW5kIHdlbm4gZGFzIHJ1bSBpc3QsIGtvbW10IGVyIHp1bSBGbGVpc2NoYWJmbGxlIHNvcnRpZXJlbiBpbiBkaWUgTWV0emdlcmVpIG9kZXIgZXIgbWh0IGRlbiBSYXNlbiBkZXIgc3RkdGlzY2hlbiBHcm5mbGNoZW4uU28gZWluZmFjaCBpc3QgZGFzIGF1Y2ggbmljaHQuIFdlbm4gRHUgYWxzIElUbGVyIGVpbmdlc3RlbGx0IGJpc3QsIG1zc2VuIGRpZSBkaWNoIGF1Y2ggYWxzIElUbGVyIGVpbnNldHplbiwgc29uc3QgbXNzZW4gc2llIGRlaW5lbiBBcmJlaXRzdmVydHJhZyBuZGVybi5JZmFxWXVybWFtYSBbTV0gIFtzY29yZSBoaWRkZW5dICBzdWJtaXR0ZWQgMyBkYXlzIGFnby91L0RlcmF1c213YWxka2FtLCB2aWVsZW4gRGFuayBmciBkZWluZW4gQmVpdHJhZy4gTGVpZGVyIHd1cmRlIGVyIGF1cyBkZW0gZm9sZ2VuZGVuIEdydW5kIGJ6dy4gCkJ1dCBpdCB3YXMgaGFyZCBmb3IgS2VsbHksIHdobyBqb2luZWQgTkJDIGZyb20gRm94IE5ld3MsIHRvIG1ha2UgdGhlIHRyYW5zaXRpb24uIEhvdXIsIHdoZW4gS2VsbHkncyBzaG93IGFpcnMsIGR1cmluZyBsYXN0IHllYXIncyB1cGZyb250IGFkIGhhZ2dsZSAgIHdoZW4gbmV0d29ya3MgbG9vayB0byBzZWN1cmUgYSBidWxrIG9mIHRoZWlyIGFkIGNvbW1pdG1lbnQgZm9yIHRoZSBmb2xsb3dpbmcgc2Vhc29uICAgYnV0IHJlY2VpdmVkIHB1c2hiYWNrIGZyb20gYWR2ZXJ0aXNlcnMuLiAKSWYgeW91IGdldCBhbm90aGVyIGZhdm9yYWJsZSByZWFjdGlvbiwgdHJ5IGl0IGFnYWluIGFuZCB0aGlzIHRpbWUsIGxldCB5b3VyIGZpbmdlciBsaW5nZXIgdGhlcmUsIGFuZCBwZXJoYXBzIHBlcmZvcm0gc29tZSBsaWdodCBtYXNzYWdlIG9uIHRoZSBhbnVzLCBlc3BlY2lhbGx5IGFzIHlvdSBhcmUgcGVyZm9ybWluZyBjdW5uaWxpbmd1cyBvbiBoZXIuIEhlciBuZXJ2ZSBlbmRpbmdzIHdpbGwgYWxyZWFkeSBiZSBsaXQgdXAgZG93biB0aGVyZSwgYW5kIGV2ZXJ5dGhpbmcgaW4gdGhhdCBhcmVhIGlzIGludGVyY29ubmVjdGVkIGFueXdheS4gQXMgbG9uZyBhcyBzaGUgZG9lc24ndCB0aGluayB5b3UncmUgYWJvdXQgdG8gaW52YWRlLCB5b3Ugc2hvdWxkIGdldCBhIG5vdGljZWFibGUgaW5jcmVhc2UgaW4gcG9zaXRpdmUgZmVlZGJhY2suCkFuZCBmb3IgdGhlIG5leHQgdHdvIHdlZWtzIG9uIEFsbCBpbiB0aGUgTWluZCB3ZSdyZSBsb29raW5nIGF0IHRoZSBtaW5kIG9mIHRoZSBwcm9ibGVtIGdhbWJsZXIuIApXaGF0IE9uVGhpbmdzIHRvIGRvRm9vZCBhbmQgRHJpbmtGYW1pbHkgYW5kIEtpZHNNdXNpYyBhbmQgR2lnc1RWIEd1aWRlQSBCSUcgcHJvamVjdCBoYXMgYmVjb21lIGV2ZW4gYmlnZ2VyIGZvciBUcmVtYWluJ3MgTWlsbCBvd25lciBTdGV2ZSBCaXJyZWxsIG5vdyB0aGF0IGhlIGhhcyBib3VnaHQgdGhlIHB1YiBuZXh0IGRvb3IuIE1yIEJpcnJlbGwgaGFzIHBsYW5zIGZvciBhbiBvdmVyaGF1bCBvZiB0aGUgbGFuZG1hcmsgVmljdG9yaWEgSG90ZWwgaW4gS2VwcGVsIFN0cmVldCBhZnRlciBpdCBjYW1lIHVwIGZvciBzYWxlIGF0IHRoZSByaWdodCB0aW1lLiBIZSBhbmQgR2xlbmRhIERlYW5zIGJvdWdodCB0aGUgc3ByYXdsaW5nIDg1MjIgc3F1YXJlIG1ldHJlVHJlbWFpbidzIE1pbGwgc2l0ZSBpbiAyMDE1IGFuZCBhcmUgcGxhbm5pbmdhIGNvbXBsZXRlIHJlZGV2ZWxvcG1lbnQgdGhhdCB3aWxsIGV2ZW50dWFsbHkgaW5jbHVkZSBhIG1pbGxpbmcgbXVzZXVtLCB2aXNpdG9yIGFjY29tbW9kYXRpb24sc2VydmljZWQgYXBhcnRtZW50cywgZnVuY3Rpb24gY2VudHJlIGFuZHB1YmxpYyBwbGF6YS4gCkluIDE5NjUgaGUgYmVjYW1lIGV4ZWN1dGl2ZSB2aWNlIHByZXNpZGVudCBpbiBjaGFyZ2Ugb2YgZ2VuZXJhbCBzdGFmZiBhY3Rpdml0aWVzLiBIZSB3YXMgbmFtZWQgR00gcHJlc2lkZW50IGluIDE5NjcuIEhlIHJldGlyZWQgaW4gMTk3NC4uIApHYXJsYW4gdGhlIG1vdGhlcmZ1Y2tpbmcgR2FsbGFudCBpcyBzdHJhaWdodCB1cCBvbmUgb2YgdGhlIGJlc3QgZHVkZXMgdG8gc2hvdyB1cCBpbiB0aGUgYm9va3MuIFdoZW4gVHlyaW9uIGlzIGJhc2ljYWxseSBwZXJzb25hIG5vbiBncmF0YSBpbiBKb2ZmcmV5IGNvdXJ0LCBHYXJsYW4gaXMgdGhlIG9ubHkgcGVyc29uIHRvIHB1YmxpY2x5IGhvbm91ciBoaW0gZm9yIGhpcyByb2xlIGluIHRoZSBCbGFja3dhdGVyIGRlZmVuY2UuIFdoZW4gSm9mZnJleSBpcyB0cnlpbmcgdG8gaHVtaWxpYXRlIFR5cmlvbiwgR2FybGFuIHN0YW5kcyB1cCBmb3IgaGltIGFuZCBkaXNwYXJhZ2VzIEpvZmZyZXkgYmVoYXZpb3VyLCBpbiBmcm9udCBvZiBldmVyeW9uZS4gCkVuIG9jdG9icmUgMjAxMSwgU3RlcGhlbiBQYWRkb2NrIGdsaXNzZSBzdXIgbGUgc29sIG1vdWlsbCBkZSBsJ2h0ZWwgY2FzaW5vIENvc21vcG9saXRhbiBkZSBMYXMgVmVnYXMuIERldXggYW5zIHBsdXMgdGFyZCwgaWwgcG9ydGUgcGxhaW50ZSBjb250cmUgbGUgY2FzaW5vIGV0IGZhaXQgdW5lIGRwb3NpdGlvbiBkZSA5NyBwYWdlcyAgc29uIGF2b2NhdCwgb2J0ZW51ZSBwYXIgQ05OIGV0IHJlbWlzZSBhdSBGQkkuClJlc2VhcmNoZXJzIGhhdmUgcmVjZW50bHkgc2hvd24gdGhhdCB0aGUgcHJlc2VuY2Ugb2YgZ3V0IG1pY3JvYmlvdGEgZHVyaW5nIGVhcmx5IGRldmVsb3BtZW50IGluZmx1ZW5jZXMgdGhlIGJyYWluJ3MgbmV1cmFsIGNvbm5lY3Rpdml0eSByZWxhdGVkIHRvIGFueGlldHkgYW5kIGRlcHJlc3Npb24uIApIYWxmIG9mIHRoZW0gd2VyZSBmYWlsaW5nIGJlY2F1c2UgdGhleSBqdXN0IGZsYXQgb3V0IHJlZnVzZWQgdG8gdXNlIHByb3BlciBmaW5nZXIgbnVtYmVycy4gVGhlIG90aGVyIGhhbGYgd2VyZSBmYWlsaW5nIGJlY2F1c2UgdGhleSBkbyB0aGUgcmVxdWlyZWQgMTUgbWludXRlcyBhIGRheSBvZiBwcmFjdGljaW5nIGluIHRoZSBwaWFubyBsYWIsIHRoZW4gc3RvcCB0aGVyZSBiZWNhdXNlIHRoZXkgZmlndXJlZCB0aGF0IHdhcyBlbm91Z2guIEl0IHdhcyBmdWNraW5nIGJhZmZsaW5nLiBUaGUgY2xhc3NlcyByZWFsbHkgd2VyZW4gdGhhdCBkaWZmaWN1bHQgYnV0IGRvemVucyBvZiB0aGVtIHdvdWxkbiBldmVuIGxpZnQgdXAgYSBmaW5nZXIgdG8gdHJ5LgooTXkgZmF2b3JpdGVzIGFyZSBSaWNoYXJkIExpbmR6ZW4sIEp1ZGl0aCBjdXJyeSwgYW5kIFJveSBTcGVuY2VyKS5TbyB5ZWFoLiB0aGUgc291cmNlcyBJIGxvb2sgYXQgYXJlIGJ5IHBlb3BsZSB3aG8gZG8ga25vdyB3aGF0IHRoZXkncmUgdGFsa2luZyBhYm91dCwgYW5kIHRoZSBpZGVhIHRoYXQgdGhlcmUgaXMgc2NpZW50aWZpYyBjb25zZW5zdXMgb24gY2xpbWF0ZSBjaGFuZ2UgaXMgc3VjaCBhIGhpbGFyaW91cyBpZGVhIHRoYXQgaXQgYWxtb3N0IGlzbid0IGV2ZW4gd29ydGggZGViYXRpbmcuSSB3b3VsZCBzdWdnZXN0IHJlYWRpbmcgb25lIG9mIHRoZWlyIGJsb2dzLiAKSSBnb2luZyB0byBjYWxsIHlvdSBTdWdhciBCcm93bi4gQnJvd24gb3duIG5pY2tuYW1lIGNhbWUgZnJvbSBhIGZhciBsZXNzIGlsbHVzdHJpb3VzIHNvdXJjZSwgYnV0IGl0IHN0dWNrIGp1c3QgdGhlIHNhbWUuIEl0IHdhcyBpbiAxOTg5IGluIHRoZSBLaXRzaWxhbm8gQmVhY2ggYXJlYSBvZiBWYW5jb3V2ZXIuIApDaGFuZGxlciwgQVogODUyMjY5NTAgU2xvdCBNYWNoaW5lcyAzNiBUYWJsZSBHYW1lcyBCbGFja2phY2ssIFNwYW5pc2ggMjEsIDMgQ2FyZCwgUGFpIEdvdywgQ3JhenkgNCBQb2tlciwgVWx0aW1hdGUgVGV4YXMgSG9sZCdlbSBhbmQgTHVuYXIgUG9rZXIgMTYgUG9rZXIgVGFibGVzIDU1MCBTZWF0IEJpbmdvIEhhbGwgUHJlbWl1bSBQbGF5ZXJzIENsdWIgTG91bmdlIDYgcmVzdGF1cmFudHMgYW5kIDQgYmFyc3ZpZXcgbWFwICB3ZWJzaXRlCkZvciBleGFtcGxlLCB3aGVuIGhlIGlzIGV5ZSBiYWxsaW5nIHRoZSB0aHJlZSBnaXJscyBhdCB0aGUgY2x1YiwgdGhleSBhcmUgbGF1Z2hpbmcsIGJ1dCBoZSB0aGlua3MgaXQgYmVjYXVzZSBoZSAic3VhdmUiICAgVGhlbiBhZnRlciBoZSBkYW5jZXMgd2l0aCBvbmUgb2YgdGhlbSwgdGhleSBkb24gaW52aXRlIGhpbSBiYWNrIHRvIHRoZXJlIHRhYmxlLCBIb2xkZW4gdGhpbmtzIGl0IGJlY2F1c2UgdGhleSBhcmUgZHVtYiBvciBzb21ldGhpbmcsIGJ1dCBhY3R1YWxseSwgdGhlc2UgbGFkaWVzIGFyZSAzMCB5ZWFycyBvbGQsIHRoZXkgYXJlIExBVUdISU5HIGF0IGhpbS4gClRoZSBzdGFuZGFyZCBmb3JtdWxhIGZvciB0aGlzIHBhdHRlcm4gaXMgS3dlaSBCZSBXYW4uIApTdW5zaGluZSBDb2FzdCBEYWlseSBTdW5zaGluZSBDb2FzdCBOZXdzIE5hdGlvbmFsIE5ld3MgV29ybGQgTmV3cyBTdW5zaGluZSBDb2FzdCBTcG9ydCBMaWZlc3R5bGUgVHJhdmVsIFNob3BwaW5nIEJ1c2luZXNzIFJlYWwgRXN0YXRlIEhvbWUgTG9hbnMgTWFyb29jaHlkb3JlIFdlYXRoZXIgTmV3c3BhcGVycyBpbiBFZHVjYXRpb24KVW5kIGRhcyBCZXN0ZSBpc3Q6IENsYWlyZSBiaWV0ZXQgYXVjaCBCIGFuLiBGciBhbGxlLCBkaWUgbmljaHQgbnVyIHZvciBvZGVyIG5hY2ggZWluZXIgV2FuZGVydW5nIGt1cnogYmVpIGlociB2b3JiZWlzY2hhdWVuLCBzb25kZXJuIGRpZXNlbiB3dW5kZXJiYXJlbiBPcnQgbWFsIGVpbiB3ZW5pZyBsbmdlciBnZW5pZWVuIHdvbGxlbi4uIApUaGUgVmljdG9yIFBva2VyIEN1cCB3aWxsLCBhY2NvcmRpbmcgdG8gQ2hhaXJtYW4sIFZpY3RvciBDaGFuZGxlciwgImJlIGEgdHJ1bHkgZ3JvdW5kIGJyZWFraW5nIGV2ZW50IHRoYXQgd2lsbCBnaXZlIEV1cm9wZWFuIHBva2VyIGFuIGV2ZW50IHRvIHJhbmsgYWxvbmdzaWRlIGFueXRoaW5nIHNlZW4gaW4gdGhlIFVuaXRlZCBTdGF0ZXMuIiBNciBDaGFuZGxlciBnb2VzIG9uIHRvIGFkZCAiV2UncmUgcHJvdWQgdG8gYmUgc3BvbnNvcmluZyBhIHRvdXJuYW1lbnQgdGhhdCB3aWxsIGJlY29tZSBzeW5vbnltb3VzIHdpdGggdGhlIGdsYW1vdXIgYW5kIGV4Y2l0ZW1lbnQgb2YgaGlnaCBzdGFrZXMgcG9rZXIuIEF0IGV2ZXJ5IHN0ZXAgd2UnbGwgYmUgZW5zdXJpbmcgdGhhdCBUaGUgVmljdG9yIFBva2VyIEN1cCBpcyB0aGUgUm9sbHMgUm95Y2Ugb2YgcG9rZXIgdG91cm5hbWVudHMuIi4gCkNvbXBsYWludHMgcmVsYXRlIHNwZWNpZmljYWxseSB0byB0aGUgc2l6ZSBhbmQgc2NhbGUgb2YgdGhlIHByb3Bvc2VkIHJhcGlkIHRyYW5zaXQgbmV0d29yaywgU3BlbmNlIHNhaWQsIGFyZ3VpbmcgcmFwaWRseSBjaGFuZ2luZyB0ZWNobm9sb2d5IG1heSBtYWtlIEJSVCBvYnNvbGV0ZSB3aXRoaW4gdGhlIG5leHQgdHdvIGRlY2FkZXMuIApNYXh4IG9yZGVycyBhIGhpZ2ggcXVhbnRpdHkgZnJvbSB0aGVpciBzb3VyY2VzIHNvIHRoZXkgY2FuIGJ1eSBhdCB0aGUgbG93ZXN0IHByaWNlLiAKS29ibGVueiBpbiBvbmUgaW5zdHJ1Y3Rpb24gc2hlZXQgc2F5czpPbmUgc21hbGwgcHJvYmxlbS4gCkJ1dCwgTXkgcHJvYmxlbSBoYXMgYWx3YXlzIGJlZW4gZHJ1Z3MgYW5kIGkga25vdyB0aGVyZSBpcyBubyBiZWF0aW5nIGFkZGljdGlvbiwgQnV0IHRoZXJlIGlzIHRha2luZyBhbiBhY3RpdmUgYXBwcm9hY2ggdG8gcmVjb3ZlcnkgYW5kIHB1cnN1aW5nIGl0LCBhbmQgdGhhdCBoYXMgYmVlbiB3b3JraW5nIGZvciBtZS4gClRoZXkgZGlkbiB0cmFzaCBoZXIgYXMgbXVjaCBhcyB0aGV5IGNvdWxkIGhhdmUsIG9ubHkgYmFzaWMgaW5mbyB0aGF0IGNhbiBiZSBmb3VuZCBwdWJsaWNseSB3ZXJlIHJlbGVhc2VkLiAKSWYgSSBsb3NlIGEgZ2FtZSwgSSBkb24gYmxhbWUgc2NhcGVnb2F0cyBsaWtlIGFycm93IHJuZy4gSSByZWZsZWN0IG9uIHdoYXQgSSBkaWQgd3JvbmcgdGhhdCB3b3VsZCB3b24gbWUgdGhlIGdhbWUuIEl0IGlzIGEgY29tbW9uIHRyYWl0IGZvciBwZW9wbGUgdG8gYmxhbWUgZXZlcnl0aGluZyBidXQgdGhlbXNlbHZlcyB3aGVuIHRoaW5ncyBnbyB3cm9uZy4uIApJIHRob3VnaHQgdG8gbXlzZWxmOiJBdXN0aW4gZ2V0dGluZ2ZpcmVkLiIgQW5kIHN1cmUgZW5vdWdoLCBJdCBoYXBwZW5lZC4gQXQgdGhlIGNvc3Qgb2YgaGlzIGRlZmVuc2UgZ2V0dGluZyBleHBvc2VkLiAoT3ZlcjUwIHBvaW50cyB3ZXJlIHNjb3JlZCBvbiB1cy4gClVuZm9ydHVuYXRlbHksIHRoaXMgd2FzIG5vdCB0byBiZSB0aGUgY2FzZTsgQWxpY2UgYmVjYW1lIGhlciBodXNiYW5kJ3MgZnVsbHRpbWUgY2FyZXRha2VyIGFuZCBsZWZ0IHRoZSBnYW1ibGluZyBsaWZlc3R5bGUgYmVoaW5kIHVudGlsIGhlIGRpZWQgaW4gaGVyIGFybXMgc3VmZmVyaW5nIGZyb20gcG5ldW1vbmlhIGluIDE5MTAgZHVyaW5nIGEgd2ludGVyIGJsaXp6YXJkLiAKUG90cmV0ZSBjb3NpJyBhdmVyZSBjb25mZXJtZSBkaSBldmVudHVhbGkgZHViYmkgc3Ugdm9pIHN0ZXNzaSwgcHJlbmRlcmUgcGkgY29zY2llbnphIGRpIHZvaSwgcmVzdGl0dWlyZSBpIGJhZ2FnbGkgcGFyZW50YWxpIHJpY29ub3NjZW5kbyBwYXJ0aSBjaGUgbm9uIHNvbm8gcHJvcHJpYW1lbnRlIHZvc3RyZSwgbWEgY2hlIHZpIHNvbm8gc3RhdGUgdHJhc21lc3NlIGRhbGxhIHZvc3RyYSBmYW1pZ2xpYSBlIHZvaSBhdmV0ZSBpbnRyb2lldHRhdG8uIFNjb3ByaXJldGUsIHBlciBlc2VtcGlvLCBjaGUgbm9uIHNhcGV2YXRlIGRpIGVzc2VyZSBjb3NpJywgY2hlIHZpIGhhbm5vIHBsYXNtYXRvIGdsaSBhbHRyaSwgc2NvcHJpcmV0ZSBwZXJjaCBsYSBnZW50ZSB2aSBjb25mb25kZSBjb24gaWwgdm9zdHJvIEFzY2VuZGVudGUsIGxhIG1hc2NoZXJhIGNoZSBpbmRvc3NhdGUgcGVyIHVzY2lyZSBuZWwgbW9uZG8sIG1hIGNoZSBub24gIGlsIHZvc3RybyB2ZXJvIElPLiAKVGhlIFJCQ3MgY2Fycnkgb3h5Z2VuIGZyb20gdGhlIGx1bmdzOyB0aGUgV0JDcyBoZWxwIHRvIGZpZ2h0IGluZmVjdGlvbjsgYW5kIHBsYXRlbGV0cyBhcmUgcGFydHMgb2YgY2VsbHMgdGhhdCB0aGUgYm9keSB1c2VzIGZvciBjbG90dGluZy4gClRvZGF5IEkgcGxheWVkIDggdG91cm5hbWVudHMgYW5kIGdvdCBidXN0ZWQgdmVyeSBjbG9zZSB0byBtb25leSBpbiBhbGwgb2YgdGhlbS4gYWxsIGluIHByZSBmbG9wIEVWJSB3YXMgNzIsMiUgKDE3IGFsbCBpbikgYnV0IHdvbiAxOCUuIExvb2tzIGxpa2UgdG91cm5hbWVudHMgYXJlbiBmb3IgbWUsIGl0IHRvbyBtdWNoIHRpbWUgaW52ZXN0bWVudCB0byBnZXQgc2NyZXcgb3ZlciBhbmQgb3Zlci4KV293LCB5b3UgbWlzc2luZyB0aGUgcG9pbnQgYWdhaW4uIFRoZXJlIGEgZGlmZmVyZW5jZSBiZXR3ZWVuIDViYiBlZmYgYW5kIDViYiBhdmcgc3RhY2suIEluIHRoZSBmaXJzdCBvbmUsIHlvdSBzaG9ydCB3aXRoIDViYiAod2l0aCBhIHRhYmxlIGF2ZyBvZiAyMCAyNSBiYikgYW5kIHB1c2ggSzhzIGZyb20gdGhlIGNvL2J1IGFuZCBiYiB3aXRoIDMwYmIgY2FsbHMgd2l0aCA4OXMuIFlvdSBjcnVzaGluZyBoaW0gaGVyZS4gR2VuZXJhbGx5LCB5b3UgaGF2ZSBtb3JlIDYwIDQwcyBvciA3MCAzMHMgaW4gdGhpcyBzY2VuYXJpbyB3aGVuIHlvdSBwdXNoIGZyb20gbHAgYW5kIG1vc3RseSBnZXQgY2FsbGVkIGJ5IHNiL2JiLCBib3RoIGNhbGxpbmcgb3B0aW1hbGx5LiBBbmQgaGVuY2UsIHlvdSBNSUdIVCBoYXZlIGFuIGVkZ2UgbG9uZyB0ZXJtLgpEaWQgeW91IGtub3cgdGhhdCBwZW9wbGUgYXJlIGEgbG90IG1vcmUgbGlrZWx5IHRvIGRpZSBieSBzdWljaWRlIGlmIHRoZXkgaGF2ZSBhIHBhcmVudCB0aGF0IGRpZD8gSXQncyBub3QganVzdCBnZW5ldGljcywgbGlrZSB5b3UncmUgbW9yZSBsaWtlbHkgdG8gYmUgZGVwcmVzc2VkIGJlY2F1c2UgaXQncyBoZXJlZGl0YXJ5LiBJZiB5b3UgaGF2ZSBhIHBhcmVudCB0aGF0IGRpZXMgYnkgc3VpY2lkZSwgaXQgbWVzc2VzIHdpdGggeW91IGFuZCBtYWtlcyB5b3UgbW9yZSBsaWtlbHkgdG8gZG8gaXQgeW91cnNlbGYuIApBbmQgaXQgcmVhbGx5IG5vdCBoZWFsdGh5IHRvIGJlIHdhbGtpbmcgYXJvdW5kIHdpdGggYWxsIHRoYXQgaGF0ZSBhbmQgdml0cmlvbCBhbGwgdGhlIGRhbW4gdGltZS4gUGF0aWVuY2UsIHVuZGVyc3RhbmRpbmcsIGFuZCBub252aW9sZW50IGNvbW11bmljYXRpb24gbWFrZXMgeW91IGZlZWwgYmV0dGVyIGFsbCB0aGUgdGltZSwgbW9yZSBwZW9wbGUgc2hvdWxkIHRyeSBpdCBqdXN0IGZvciB0aGUgc2VsZmlzaCByZWFzb24gdGhhdCB0aGV5IHdhbnQgdG8gbm90IHRha2UgYWxsIHRoZSBuYXN0eSBzaGl0IG9mIHRoZSB3b3JsZCB0byBiZWQgd2l0aCB0aGVtIGV2ZXJ5IG5pZ2h0Li4gCk1ha2Ugc3VyZSB5b3UgdmlldyB0aGUgUG9rZXIgSGFsbCBvZiBGYW1lIG9uIHRoZSB3YWxscyBvZiB0aGUgY2FyZHJvb20sIHRvby4uIApBIHBhaXIgb2YgamFja3MgaXMgdXN1YWxseSB0aGUgbWluaW11bSBoYW5kIHdoZW4gYSB2aWRlbyBwb2tlciBtYWNoaW5lIHN0YXJ0cyB0aGUgcGF5b3V0LiBUaGUgYmFzZXMgb2YgcGF5b3V0IGFsbG9jYXRpb25zIGluIHBheSBzY2hlZHVsZXMgYXJlIHRoZSByYXJlbmVzcyBvZiB0aGUgaGFuZCBhbmQgdGhlIG92ZXJhbGwgc3BlY3VsYXRlZCByZXR1cm4gb2ZmZXIgb2YgdGhlIGdhbWUgb3BlcmF0b3IuIE90aGVyIHBsYXllcnMgcGxheSBtb3JlIGFuZCBiZXQgbW9yZSBib2xkbHkgZm9yIHZpZGVvIHBva2VyIG1hY2hpbmVzIHRoYXQgb2ZmZXIgcHJvZ3Jlc3NpdmUgamFja3BvdHMgZm9yIHJveWFsIGZsdXNoIGFuZCBvdGhlciByYXJlIGhhbmRzLgpUbyBtZSwgc2hlIHNlZW1zIHRvIHVzZSBzb21lIFRydW1waWFuIHRhY3RpY3MgYXQgdGltZXMsIGp1c3QgZnJvbSB0aGUgb3RoZXIgc2lkZSBvZiB0aGUgYWlzbGUuIE1lYW5pbmcgc2hlIG9mdGVuIGRlY2lkZXMgdG8gZ28gYWZ0ZXIgdGhlIG90aGVyIHNpZGUgYW5kIHRyeSB0byBmaWdodCB0aGVtIHJhdGhlciB0aGFuIGNvbGxhYm9yYXRlLCBmb3JtdWxhdGUgY29tcHJvbWlzZXMsIGV0Yy4KVGhlcmUgd2VyZSBtYW55IHBhaXJzIG9mIHNob2VzIG9uIHRoZSBkaXNjb3VudCByYWNrLiAKVGhleSBmb3VuZCB0aGF0IHRoZSBHUlUgb2ZmaWNlcnMgc2VjcmV0bHkgc3VydmVpbGVkIGFuIGVtcG95ZWUgb2YgdGhlIERlbW9jcmF0aWMgQ29uZ3Jlc3Npb25hbCBDYW1wYWlnbiBDb21taXR0ZWUgYWxsIGRheSBpbiByZWFsIHRpbWUsIGluY2x1ZGluZyBzcHlpbmcgb24gImhlciBpbmRpdmlkdWFsIGJhbmtpbmcgaW5mb3JtYXRpb24gYW5kIG90aGVyIHBlcnNvbmFsIHRvcGljcy4iIFRoZXkgc2hvd2VkIHRoYXQgIkd1Y2NpZmVyIDIuMCwiIHRoZSBzdXBwb3NlZCBsb25lIGhhY2tlciBiZWhpbmQgdGhlIEROQyBoYWNrLCB3YXMgaW4gZmFjdCBtYW5hZ2VkIGJ5IGEgc3BlY2lmaWMgR1JVIHVuaXQsIGFuZCBldmVuIHJlY29uc3RydWN0ZWQgdGhlIGludGVybmV0IHNlYXJjaGVzIG1hZGUgd2l0aGluIHRoYXQgdW5pdCB3aGlsZSBhIEdSVSBvZmZpY2VyIHdpdGggc2hvZGR5IEVuZ2xpc2ggc2tpbGxzIHdhcyBkcmFmdGluZyB0aGUgZmlyc3QgcG9zdCBhcyBHdWNjaWZlciAyLjAuIERyaXZlIGFyb3VuZCB3aXRoIGEgbW91bnRlZCBjYW1lcmEgZmlsbWluZyBxdWlja2x5LiBUaGF0IHNhaWQsIGl0IGlzIGEgdmVyeSBzY2FyeSBzaXR1YXRpb24gYW5kIEkgY2FuJ3Qgc2F5IHdldGhlciBJIGJlbGlldmUgRnJlc25vIHBvbGljZSBraWxsZWQgaGltIG9yIG5vdC4gCk9mdGVuIGRvbmUgdG8gY29taWNhbGx5IGFic3VyZCBkZWdyZWUuIApBbmQgTXJzLiBXaWxsaWFtIFRJY25kcmlja3MsIG9mIGkgTXIuIEFuZCBNcnMuIApMZWFybiB0aGUgbmFtZXMgb2YgYWxsIHRoZSB0aWxlcy4gRXZlcnkgdGlsZSBpbiBwYWkgZ293IGhhcyBhIG5hbWUsIGFuZCBpdCBzaGFyZXMgdGhhdCBuYW1lIHdpdGggdGhlIG90aGVyIHRpbGUgaW4gaXRzIHBhaXIuIEZvciBleGFtcGxlLCB0aGUgMiB0aWxlcyB0aGF0IGhhdmUgNCBzcG90cyAoMiBzcG90cyBvbiB0b3AgYW5kIDIgb24gdGhlIGJvdHRvbSkgbWFrZSBhIHBhaXIgYW5kIGFyZSBlYWNoIGNhbGxlZCAiQm9uLiIgSWYgeW91IGhhZCBib3RoIG9mIHRoZXNlIHRpbGVzLCB5b3Ugd291bGQgc2F5IHRoYXQgeW91IGhhdmUgYSAicGFpciBvZiBCb24uIiBFdmVudHVhbGx5LCB5b3UnbGwgd2FudCB0byBtZW1vcml6ZSB0aGVzZSBuYW1lcyBzbyB5b3UgY2FuIGVhc2lseSByZWZlciB0byBkaWZmZXJlbnQgdGlsZXMgYW5kIHBhaXJzLiAKSVAgQmFuIGlzIGp1c3QgdW5mYWlyIGJlY2F1c2Ugbm90IGV2ZXJ5IElTUCBwcm92aWRlIHN0YXRpYyBJUCwgbm90IGV2ZXJ5IHBjIGhhdmUgZGlmZmVyZW50IHB1YmxpYyBJUC4gClRoZXJlIHdhcyBhIGxhbmRpbmcgYW5kIGp1c3QgdHJhc2ggYnV0IHRoZXJlIHdhcyBhIGRvb3IgdG8gYSByb29tIHRoYXQgd2FzIGNsb3NlZC4gCkVzIGthbSBkaWUgV2VuZGUgICB1bmQgZWluIHByb21pbmVudGVyIEludmVzdG9yIGF1cyBkZW0gV2VzdGVuOiBXYWx0ZXIgQnJ1bmUuIApUb2dldGhlciwgd2UganVzdCB1bmRlcnN0YW5kIGVhY2ggb3RoZXIuIApSZWFsbHkgZmFzdCBhbmQgdGhleSBtZXJpdCBhIGNsb3NlciBsb29rIGFuZCBtaWdodCByaXNlIHVwIHRoZSBib2FyZC4uIApUaGVuIGEgY291cGxlIHllYXJzIGFnbywgaGUgd2VudCB0byB0YWtlIGEgbmFwIG9uIHRoZSBzb2ZhLCBoaXMgbW9tIGNhbWUgdG8gY2hlY2sgb24gaGltLCBhbmQgaGUgd2FzIGdvbmUuIApMaXRjaGZpZWxkIFBhcmssIEFaIDg1MzQwdmlldyBtYXAgIHdlYnNpdGUKSXQgcHJvYmFibHkgbmVlZHMgdG8gYmUgbW9kaWZpZWQgdG8gaW5jbHVkZSBhIHNlY3Rpb24gY2FsbGVkICIxMiBIb3VycyBpbiBGcmFua2Z1cnQiLgpCZWZvcmUgYW5kIGFmdGVyIHRyZWF0bWVudHMgZ3Vlc3RzIGNhbiBsb3VuZ2Ugd2l0aCBzZWEgdmlld3MgaW4gdGhlIFJlbGF4YXRpb24gUm9vbSB0aGF0IG9mZmVycyBjb21meSBhbmQgcGx1c2ggd2lja2VyIG90dG9tYW5zIG9yIHRoZSBzcGEncyBQZXJzaWFuIEdhcmRlbiB0aGF0IG9mZmVycyB3YXJtIG1hcmJsZSBsb3VuZ2VzIHRvIGxhemUgb24uIApXaGV0aGVyIGl0IG9uIHRlbGV2aXNpb24gb3IgZ2F0aGVyZWQgYXJvdW5kIGEgdGFibGUgaW4gYSBob21lIGluIHJ1cmFsIEFtZXJpY2EsIHRoZXJlIG5vIGRvdWJ0IHRoYXQgVGV4YXMgSG9sZCBwb2tlciBoYXMgYmVjb21lIHRoZSBnYW1lIHRvIHBsYXkuIEV2ZW4gaWYgaXQgb25seSBpbiB5b3VyIG93biBob21lIHRvd24sIHlvdSBtYXkgZmluZCB5b3Vyc2VsZiBiZWluZyBsYWJlbGVkIHRoZSBuZXh0ICJwb2tlciBnZW50bGVtYW4iIGxpa2UgQnJ1bnNvbiwgb3IgdGhlIG5leHQgInBva2VyIGNyeWJhYnkuIgpJdCBpcyBub3QganVzdCBhbiBlY29ub21pYyBpc3N1ZS4gCkFjdXB1bmN0dXJlLCBhIGZvcm0gb2YgYWx0ZXJuYXRpdmUgbWVkaWNpbmUsIGlzIGJlY29taW5nIGFuIGluY3JlYXNpbmdseSBwb3B1bGFyIG1ldGhvZCB0byB0cmVhdCBtYW55IG1lZGljYWwgY29uZGl0aW9ucywgaW5jbHVkaW5nIHNsZWVwIGRpc29yZGVycy4gQWN1cHVuY3R1cmUgZGF0ZXMgYmFjayB0aG91c2FuZHMgb2YgeWVhcnMgYW5kIGlzIHJvb3RlZCBpbiBFYXN0ZXJuIGhlYWxpbmcgcHJhY3RpY2VzLiBJdCdzIGJhc2VkIG9uIGEgY29uY2VwdCB0aGF0IGFsbCBkaXNlYXNlLCBpbmNsdWRpbmcgc2xlZXAgcHJvYmxlbXMsIGlzIHRoZSByZXN1bHQgb2YgYW4gaW1iYWxhbmNlIG9mIHN1YnRsZSBlbmVyZ3kgbW92aW5nIHRocm91Z2hvdXQgdGhlIGJvZHkuIApUaGV5IHdpbGwgY29udGludWUgdG8gYnV5IGFuZCBzZWxsIGZvc3NpbCBmdWVscy4gClJlc2FsZSBvZiBhIHdvcmsgb3IgZGF0YWJhc2Ugb3IgcG9ydGlvbiB0aGVyZW9mIGlzIHByb2hpYml0ZWQuIE9ubGluZSBvciBvdGhlciByZXB1YmxpY2F0aW9uIG9mIENvbnRlbnQgaXMgcHJvaGliaXRlZCBleGNlcHQgYXMgdW5pcXVlIGRhdGEgZWxlbWVudHMgdGhhdCBhcmUgcGFydCBvZiBhIHVuaXF1ZSBmYW1pbHkgaGlzdG9yeSBvciBnZW5lYWxvZ3kuIAooU29ycnkgZm9yIHRoZSBiYWQgZm9ybWF0dGluZywgSSBkb24gbm9ybWFsbHkgd3JpdGUgc3R1ZmYgbGlrZSB0aGlzLCBtaW5kIHdhcyByYWNpbmcgd2l0aCBtZW1vcmllcykKQSBwZXJzb24gZmFtaWxpYXIgd2l0aCB0aGUgZGVhbCBzYXlzIHRoZSBDbGV2ZWxhbmQgQnJvd25zIGhhdmUgdHJhZGVkIGd1YXJkIEtldmluIFplaXRsZXIgdG8gdGhlIE5ldyBZb3JrIEdpYW50cyBpbiBleGNoYW5nZSBmb3IgZGVmZW5zaXZlIGVuZCBPbGl2aWVyIFZlcm5vbi4gVGhlIHRlYW1zIGFyZSBhbHNvIHN3YXBwaW5nIHRoZSBzZWNvbmQgcm91bmQgcGlja3MsIHNhaWQgdGhlIHBlcnNvbiB3aG8gc3Bva2UgRnJpZGF5LCBNYXJjaCA4LCAyMDE5LCB0byB0aGUgQXNzb2NpYXRlZCBQcmVzcyBvbiBjb25kaXRpb24gb2YgYW5vbnltaXR5IGJlY2F1c2UgdGhlIHRlYW1zIGhhdmUgbm90IGFubm91bmNlZCB0aGUgdHJhZGUuIChBUCBQaG90by9GaWxlcykuIApBdCB0aGUgbW9tZW50IG9mIGhlciBpbnF1aXJ5LCBvdGhlciBwYXRpZW50cyBzaGFyaW5nIHRoZSByb29tIHN0YXJ0ZWQgdG8gYXNrIHRoZSBzYW1lIHF1ZXN0aW9uIGFuZCBzaW1wbHkgYXNraW5nICJXaHksIFdoeSwgV2h5LCBXaHkuIiBUaGUgbGlnaHRzIGZsaWNrZXJlZCBhbmQgYSBiZWRzaWRlIGNsb2NrIHJhZGlvIHdlbnQgb2ZmLiAKU2NpZW5jZSBpcyBhYm91dCBleHBsYWluaW5nIHRoaW5ncy4gRnJvbSB0aGUgR1BTIGluIG91ciBwaG9uZXMgdG8gY3Jvc3MgYnJlZWRpbmcgY29ybiB0byBtYWtlIGl0IGRpc2Vhc2UgcmVzaXN0YW50IChzYXZpbmcgbWlsbGlvbnMgb2YgbGl2ZSBpbiB0aGUgZGV2ZWxvcGluZyB3b3JsZCksIHNjaWVuY2UgaXMgb25seSB0cnVlIHRvIHRoZSBleHRlbnQgdGhhdCBpdCBhY3R1YWxseSB3b3Jrcy4gCldoZW4geW91IG1ha2UgYSByZWFzb25hYmxlIGFyZ3VtZW50IGFib3V0IGhvdyB3ZSBzaG91bGQgYXNwaXJlIHRvIGJlIGJldHRlciBodW1hbnMgYW5kIGF2b2lkIGFzY3JpYmluZyBtYWxpY2UgZ2V0cyB0aGVtLiAKV2hlbiB0aGUgc3RhZmYgYXJyaXZlZCBoZSB0b2xkIHRoZW0gdGhhdCB0aGUgbWFuYWdlciBoYWQgY2FsbGVkIGluIHNpY2sgYW5kIHRoYXQgcmVnaW9uYWwgb2ZmaWNlIGhhZCBzZW50IGhpbSBpbiB0byBkbyB0aGUgb3BlbiBzaG9wIHRoaW5nIGFuZCBubyBvbmUgYmF0dGVkIGFuIGV5ZWxpZC4gVGhpcyBiYW5rIGhhZCBhIHNtYWxsIHdhbGsgaW4gdmF1bHQgdGhhdCBub3JtYWxseSBvbmx5IGhlbGQgYWJvdXQgMzAgNTBrIG9uIGFueSBnaXZlbiBkYXkgYnV0IG9sZCBtYXRlIGhhZCB0aW1lZCBoaXMgcm9iYmVyeSBmb3IgdGhlIG1vcm5pbmcgYWZ0ZXIgYnVzaW5lc3MgYmFua2luZyBkYXkgd2hlbiBhbGwgdGhlIGxvY2FsIHNtYWxsIGJ1c2luZXNzZXMgd291bGQgbWFrZSB0aGVpciBlbmQgb2Ygd2VlayBkZXBvc2l0cyBhbmQgcmVwb3J0ZWRseSBnb3QgYSBzY29yZSBvZiBjbG9zZSB0byAyNTBrLgpPbiBteSBzZWNvbmQgZGF0ZSB3aXRoIG15IG5vdyBodXNiYW5kLCBJIHdhcyBhYm91dCA1IG1pbnV0ZXMgYXdheSBmcm9tIHRoZSByZXN0YXVyYW50IHdlIHdlcmUgc3VwcG9zZWQgdG8gbWVldCBhdCB3aGVuIGEgc3BpZGVyIGNhbWUgb3V0IG9mIG5vd2hlcmUgYW5kIHN0YXJ0ZWQgY3Jhd2xpbmcgdG93YXJkcyBteSBzdGVhcmluZyB3aGVlbC4gSSB0cmllZCB0byBob2xkIG91dCBidXQgYXMgaXQgY3Jhd2xlZCBvdmVyIHRoZSBkYXNoIGFuZCB3YXMgc3RpbGwgaGVhZGVkIG15IHdheSBJIHB1bGxlZCBpbnRvIHRoZSBjbG9zZXQgcGFya2luZyBsb3QgaW4gYSBwYW5pYyBhbmQgYmFyZWx5IGdvdCB0aGUga2V5cyBvdXQgb2YgdGhlIGNhciBiZWZvcmUgYmFpbGluZy4KV2Ugd29yayB2ZXJ5IGhhcmQgdG8gZG8gdGhhdCwgYmVjYXVzZSBvdXIgbW90aXZhdGlvbnMgYXJlIGRpZmZlcmVudC4gClRoZXJlIGEgbG90IG9mIGxvZ2lzdGljcyBpbnZvbHZlZCB0aG91Z2ggd2l0aCBydW5uaW5nIGEgbWVldCBhbmQgYSBsb3Qgb2YgVVNBUEwgcHJvdG9jb2xzIHRoZSBwZXJzb24gbmVlZHMgdG8gbWFrZSBzdXJlIHRoZXkgZm9sbG93LiBTbyBJIHN1Z2dlc3QgeW91IG9yIHRoZSBneW0gb3duZXIgY29udGFjdCB0aGUgQ2hhaXIgb2YgYWxsIHRoZSBTdGF0ZSBDaGFpcnMsIGV4cHJlc3MgeW91ciBpbnRlcmVzdCwgYW5kIGdldCBtb3JlIGluZm8uIDkgcG9pbnRzICBzdWJtaXR0ZWQgMTcgZGF5cyBhZ28uIApBbHNvLCBJIGxvb2sgYmFjayBub3cgYXQgdGhlIGZpcnN0IHRpbWUgSSBmZWx0IHN1Y2ggc3Ryb25nIHJvbWFudGljIGZlZWxpbmdzIHRvd2FyZHMgc29tZW9uZSBhbmQgY3JpbmdlIGF0IGhvdyBJIGhhbmRsZWQgaXQgYWxsICAgbWFueSBwZW9wbGUgd2lsbCEgQWx0aG91Z2ggaXQgd29uIGNoYW5nZSB5b3VyIHNhZG5lc3MgYXQgaGF2aW5nIHRvIGxldCBoZXIgZ28sIHRyeSBub3QgdG8gYmVhdCB5b3Vyc2VsZiB1cCBhbmQgY2FsbCB5b3Vyc2VsZiBuYW1lcy4gCkNhbGxpbmcgaGVyIGEgbWFzdGVyIG9mIHRoZSBjb250ZW1wb3Jhcnkgc2hvcnQgc3RvcnksIHRoZSBTd2VkaXNoIEFjYWRlbXkgYXdhcmRlZCA4MiB5ZWFyIG9sZCBBbGljZSBNdW5ybyB0aGUgTm9iZWwgUHJpemUgaW4gTGl0ZXJhdHVyZSB0b2RheS4gCkEganVyeSBkZWFkbG9ja2VkIGFmdGVyIGxhc3QgeWVhcidzIHRyaWFsLCB1bmFibGUgdG8gcmVhY2ggYSB2ZXJkaWN0IGFmdGVyIG1vcmUgdGhhbiA1MiBob3VycyBvZiBkZWxpYmVyYXRpb25zIG92ZXIgc2l4IGRheXMuCkkgd2VudCB0byB0aGF0IHBsYWNlIGFuZCBhbG1vc3QgZGlkIHNvbWV0aGluZy4gCkxvbmcgYmVhbSBkaXN0YW5jZSBpcyBhbHNvIGltcG9ydGFudCBmb3Igb2ZmaWNlcnMsIGJlY2F1c2UgdGhleSBuZWVkIHRvIGJlIGFibGUgdG8gc2VlIHBlb3BsZSBhbmQgb2JzdGFjbGVzIGZyb20gYSBkaXN0YW5jZS4gClNpbmNlIHdpdGggNCBjYXJkcyBhbmQgbW9yZSBjb25jZWl2YWJsZSB3aW5uaW5nIGZ1c2lvbnM7IHRoZXkgd291bGRuJ3QgYW50aWNpcGF0ZSB0aGF0IGFzIG51bWVyb3VzIHBsYXllcnMgd2lsbCBjZWFzZS4uIAo4LiBJbmRpYW4gYnVzaW5lc3NlcyBhcmUgcHJlZG9taW5hbnRseSBkZWJ0IGZpbmFuY2VkIGFzIG9wcG9zZWQgdG8gZXF1aXR5IGZpbmFuY2VkLgpQb2xpY2Ugd2VudCB0byB0aGUgcm9vbSBhbmQgZm91bmQgYSBibGFjayBiYWcgd2l0aCB0d28gcGxhc3RpYyByZXNlYWxhYmxlIGJhZ3MgaW5zaWRlIGEgY2hlc3Qgb2YgZHJhd2Vycy4gCklrIHZvbmQgaGV0IHByYWNodGlnICAgZGUgZ2Vib3V3ZW4gd2FyZW4gbmV0IGVlbiB0aWtrZWx0amUgdmVyd2VlcmRlciBlbiBhdXRoZW50aWVrZXIgZGFuIGRlIHJlc3QgdmFuIE1vc2tvdSwgZW4gZGUgdHVpbiB3YXMgZXJnIG1vb2kuIApUaGV5IGFyZSBjcmVhdGluZyB2aXNpYmlsaXR5IGFuZCBzcGFjZSBmb3IgdGhlbXNlbHZlcyAgIG5vdCBqdXN0IGZpZ2h0aW5nIGZvciBhY2tub3dsZWRnZW1lbnQsIGJ1dCBidWlsZGluZyB0aGVpciBvd24gc3RhZ2VzIGFuZCBoaXJpbmcgdGhlaXIgb3duIG1pY3MgdG8gYWZmaXJtIHRoZW1zZWx2ZXMgYW5kIHRoZWlyIHBlZXJzLiBNZWFud2hpbGUsIG90aGVyIHdvbWFuIGFyZSBjZWxlYnJhdGVkIGZvciBzaW1wbHkgYmVpbmcgbm9ybWFsLiBCZWluZyBhYmxlIHRvIGJyZWFrIG5ldyBncm91bmQgaXMgaW5jcmVkaWJsZSwgYnV0IHdoYXQgdGhlIGVzc2F5cyBpbiBJdCdzIE5vdCBBYm91dCB0aGUgQnVycWEgc2VlayB0byBleGFtaW5lIGFyZSB0aGUgb3JkaW5hcnkgbGl2ZXMgb2YgTXVzbGltIHdvbWVuLiAKQnV0IGV2ZW4gdGhlbiwgdGhhdCBkb2VzbiBtZWFuIHRoYXQgdGhlIGNhc2UgZm9yIGV2ZXJ5b25lLiBJIHNlZW4gcGVvcGxlIHRoYXQgd2VyZSBhYmxlIHRvIGZyZWVzdHlsZSBpbiB0aGVpciBzZWNvbmQgbGFuZ3VhZ2UgZXZlbiB3aXRob3V0IGltbWVyc2lvbi4gCiJUaGlzIHdhcyBwYXJ0aWN1bGFybHkgdHJ1ZSBhZnRlciBJIHNwb2tlIHRvIHRoZSBwYXJsaWFtZW50IGFuZCBleHBvc2VkIHNvbWUgcGVvcGxlIHdobyB3ZXJlIHJlc3BvbnNpYmxlIGZvciB0aGUgY3Jpc2lzIG9mIEthYnVsIEJhbmsuIgpUaGV5IGFyZSBkZWZpbml0ZWx5IGJldHRlciB0aGFuIHRoZSBsaXR0bGUsIGRhcmsgcm9vbXMgb2YgbW9zdCBTdWtodW12aXQgcGxhY2VzLiAKU0ZXLiAKSWYgYW55dGhpbmcgeW91IHNheSBvciBkbyBjYW4gYmUgcHJlY2lldmVkIGFzIGFuIGludGVudCB0byBwYXkgZm9yIHNleHVhbCBhY3RzLCB5b3Ugd2lsbCBiZSBnb2luZyB0byBqYWlsLi4gCkl0IHN1Y2tzIGJlY2F1c2UgeW91IGNvbWUgdXAgYWdhaW5zdCB0aGVzZSBhdCBzdXBlciBsb3cgbGV2ZWwgYW5kIHRoZXkganVzdCBoYXZlIGZhciBtb3JlIHNsb3RzIHRoYW4gYW55dGhpbmcgeW91IGNhbiBidXkgd2hpbGUgZmFjaW5nIHRoZW0uLiAKUGVyIHllYXIpLiAKVGhlc2Ugd29tZW4gd2VyZSBhbGwgZmFyIHRvbyB1Z2x5IHRvIHdvcmsgaW4gYSBkZWNlbnQgc3RyaXAgY2x1Yi4gTm9uZSBvZiB0aGVtIHdlcmUgd29ydGggZXZlbiBhIHNlY29uZCBnbGFuY2UuLiAKUG9rZXJTdGFycyByZWZ1bmRlZCAkMi4xbSAoMS4zbSkgdG8gY3VzdG9tZXJzIGFjcm9zcyB0aGUgd29ybGQgYWZ0ZXIgdGhlIHNjYW0gd2FzIHVuY292ZXJlZC5UaGF0IGNhc2Ugd2FzIG5vdCBhbiBpc29sYXRlZCBvbmUuIApUaGUgSXJpc2ggRmlsbSBUZWxldmlzaW9uIE5ldHdvcmsKQnV0IGV2ZW4gc3RpbGwsIDQgaG91cnMgb3IgNCBjbGllbnRzIGlzIHVzdWFsbHkgYSBmdWxsIGRheS4gSXQgYSB2ZXJ5IHBoeXNpY2FsbHkgYW5kIG1lbnRhbGx5IGRlbWFuZGluZyBqb2IuIFNvIHlvdSBzZXNzaW9uIGlzIDI1JSBvZiB0aGVyYXBpc3RzIGRhaWx5IGluY29tZS4gTW9zdCBvZiB1cyBsaXZlIG9mZiBvZiB0aXBzIGFuZCB1c2UgaG91cmx5L2NvbW1pc3Npb24gZm9yIHBheWluZyBsaXZpbmcgZXhwZW5zZXMuClNvbWUgb2YgdGhlIGJlc3QgcG9rZXIgcmV2aWV3IHNpdGVzIEkndmUgY29tZSBhY3Jvc3MgZ2l2ZSB5b3Ugbm90IGp1c3QgcG9rZXIgcmV2aWV3IHBhZ2VzIGZvciBhbGwgb2YgdGhlIHRvcCByYXRlZCBvbmxpbmUgcG9rZXIgc2l0ZXMsIGJ1dCBhIHNlYXJjaGFibGUgZGF0YWJhc2Ugd2l0aCBmaWx0ZXJzIHRoYXQgbGV0IHlvdSBvbWl0IGFueSByZXN1bHRzIHRoYXQgeW91IGFscmVhZHkga25vdyB5b3UgZG9uJ3Qgd2FudC4gVGhlIG9wdGltYWwgc2VhcmNoIGZpbHRlcnMgd291bGQgaW5jbHVkZSBib251cyB0eXBlLCBib251cyBzaXplLCBjdXJyZW5jeSBvcHRpb25zLCBzb2Z0d2FyZSBicmFuZCBhbmQgcmVnaW9uYWwgcGxheWVyIGFjY2VwdGFuY2UuCkFzIERlbm5pcyBLdWNpbmljaCAoT0gpIHRvbGQgaGlzIGZlbGxvdyBsYXdtYWtlcnMsCk15IHBob25lIGlzIG9ubHkgdXNlZCBmb3IgcGljdHVyZXMgYW5kIEkgbG9vayBhdCBpdCBvbmNlIGluIGEgd2hpbGUgdG8gbWFrZSBzdXJlIEkgc3RpbGwgb24gcm91dGUuIEl0IGdhdGhlcnMgZW5vdWdoIHN1biB0byBrZWVwIGl0IGNoYXJnZWQuIApQb25uaXlpbiBzZWx2YW4gYXVkaW8gYm9vayBtcDMgZnJlZSBkb3dubG9hZGEgcmVwb3J0IG9uIHByb2NlZHVyZSBvZiB3aW5kaW5nIHVwIHBhcnRuZXJzaGlwIHBkZiBkb3dubG9hZGRvcmFlbW9uIG1vdmllIG5vYml0YSdzIGRpbm9zYXVyIGRvd25sb2FkIGZyZWVpbnN0bWFua0Nsb3VkeSB3aXRoIGEgY2hhbmNlIG9mIG1lYXRiYWxscyBmdWxsIG1vdmllIGluIGhpbmRpIGluIDNncHlvdSBhcmUgdGhlIGFwcGxlIG9mIG15IGV5ZSBtcDQgZG93bmxvYWQKSSBhbSBpbnRlcmVzdGVkIHRvIGhlYXIgaWYgeW91IGdvdCBhbnkgaW5wdXQgb24gdGhpcyBndXkgaWRlYSB0aGF0IGhvbWVicmV3cyBjcmVhdGUgYW4gdW5mYWlyIHBsYXlpbmcgZmllbGQuIElmIHRoZSBndXkgaXMgaW1wb2xpdGUgYnV0IHlvdSBzdGlsbCBlbmpveSBwbGF5aW5nIHdpdGggaGltIGFuZCB0aGUgZ3JvdXAsIHRoZW4ga2VlcCBvbiBkb2luZyB3aGF0IHlvdSBkb2luZyBhbmQgbGV0IGl0IHJvbGwgb2ZmIHlvdQpQZXJpb2QuIApBIGxvdCBvZiBjdWx0dXJlIGxpa2UgZm9vZCB3YXMgY2FycmllZCBmcm9tIGlyb24gbWluZXMgaW4gdGhlIFVQIG9mIE1pY2hpZ2FuIGFuZCBub3J0aGVybiBXaXNjb25zaW4gdG8gdGhlIGlyb24gbWluZXMgaW4gTkUgTWlubmVzb3RhIHNvIHRoZXJlIG1heSBiZSBhIGxpbmsgdGhlcmUuIE9yIHRoZXkganVzdCBsZWFybmVkIGl0IGZyb20gV2lzY29uc2luaXRlcyBsaWtlIEkgZGlkICh3ZSBhbGwgd29yayB0b2dldGhlcikuLiAKQXMgYnVzaW5lc3MgaW52ZXN0bWVudCBncmV3LCBzbyBkaWQgdGhlIGpvYiBtYXJrZXQgYW5kIHRoZSBudW1iZXIgb2YgQW1lcmljYW5zIHBheWluZyB0YXhlcywgY29uZmlybWluZyB3aGF0IFByZXNpZGVudCBLZW5uZWR5IHNhaWQgYSBwYXJhZG94aWNhbCB0cnV0aCB0aGF0IHRoZSBzb3VuZGVzdCB3YXkgdG8gcmFpc2UgKHRheCkgcmV2ZW51ZXMgaW4gdGhlIGxvbmcgcnVuIGlzIHRvIGN1dCAodGF4KSByYXRlcyBub3cuIApUaGUgcmVzdWx0cyBvZiB0aGlzIHN0dWR5IG1heSBiZSBleHBsYWluZWQgYnkgdGhlIGh5Z2llbmUgaHlwb3RoZXNpcywgd2hpY2ggcHJvcG9zZXMgdGhhdCBpbmZlY3Rpb25zIHN1ZmZlcmVkIGR1cmluZyBjaGlsZGhvb2QgYXJlIG5lY2Vzc2FyeSBmb3Igbm9ybWFsIGRldmVsb3BtZW50IG9mIHRoZSBpbW11bmUgc3lzdGVtLgpBdSBwcm9ncmFtbWUgZGVzIEJvdWZmZXMgZHUgTm9yZApJIGRvIG5vdCBwYXkuIEkgc3Rvb2QgdXAgYW5kIGxvb2tlZCBhcm91bmQsIEkgYXNrZWQgYWJvdXQgdGhlIG1hc3NhZ2UsIHNoZSBkaWRuIHNwZWFrIEVuZ2xpc2ggYW5kIGp1c3QgcmVhY2hlZCBvdXQgYW5kIHR1Z2dlZCBteSBzaG9ydHMgZG93biBhbmQgc3RhcnRlZCB0cnlpbmcgdG8gYmF0aGUgbWUuIApaaXBweVRXUCB1Ck9ubHkgZ290IHRoZSBiYW4gYWZ0ZXIgSSBjYWxsZWQgb3V0IG9uZSBtb2RlcmF0b3Igd2hvbSBJIGRvbiBldmVuIGtub3cgdGhhdCBnb3QgYWdpdGF0ZWQgb3ZlciByZWdpb25hbCBwb2xlbWlja3MuLiAKR3JpZXZlLiAKSSBnZW51aW5lbHkgc3VycHJpc2VkIHRvIHNlZSB0aGF0IHlvdSB3YW50IHRvIHN1cHBvcnQgYSBhbmQgd2FudCB0byBmb2xsb3cgYSB0ZWFtIHdoZW4gaXQgcmVhY2hlcyByb2NrIGJvdHRvbSBhbmQgc3RhcnRzIHJlaGFiLiAKKEFnYWluLCB0aGUgc3VpdHMgYXJlIGRpYW1vbmRzLCBoZWFydHMsIHNwYWRlcyBhbmQgY2x1YnMuKUFzIHdlIGNvbnRpbnVlIG9uLCB0aGVyZSBpcyB0aGUgc3RyYWlnaHQuIApIZSBoYXMgbW92ZWQgYmV0d2VlbiBhYm91dCAyMCBqb2JzIGluIGhpcyBhZHVsdCBsaWZlLCBmaW5hbGx5IG1vdmVkIG91dCBvZiBoaXMgcGFyZW50cyBob3VzZSBhdCA1NSB5ZWFycyBvbGQsIGN1cnJlbnRseSB3b3JrcyAzIGpvYnMgcHV0dGluZyBpbiAxMDArIGhvdXJzIGV2ZXJ5IHdlZWsganVzdCB0byBzY3JhcGUgYnksIGFuZCBoZXJlIDEwMDAlIHJhZ2UgaW5kdWNlZCBpZiB5b3UgZXZlbiBtZW50aW9uIHRoZSBuYW1lIEhpbGxhcnksIG9iYW1hLCBBT0MsIG9yIGxpdGVyYWxseSBhbnkgZGVtb2NyYXRpYyBwb2xpY3ksIGFuZCBsaWtlcyB0byBibGFtZSBoaXMgY2lyY3Vtc3RhbmNlcyBvbiBpbGxlZ2FscyBvZiB0aGUgc291dGhlcm4gYm9yZGVyIHZhcmlldHkuLiAKRm9yIGluc3RhbmNlLCB3aGlsZSBseWluZyB1cG9uIG9uZSBzaWRlIGFuZCB2aW9sZW50bHkgZ3Jpbm5pbmcsIGhlIHdvdWxkIGhvbGQgb25lIGxlZyBpbiBoaXMgbW91dGguIFVuZGVyIHN1Y2ggY2lyY3Vtc3RhbmNlcyBub3RoaW5nIHBsZWFzZWQgaGltIG11Y2ggYXMgaGF2aW5nIGhpcyBqb2tlIGR1bHkgYXBwcmVjaWF0ZWQsIHdoaWxlIGlmIG5vIG5vdGljZSB3YXMgdGFrZW4gb2YgaGltIGhlIHdvdWxkIGJlY29tZSBzdWxreS4gCkkgdGhpbmsgeW91IGNvdWxkIGRvIGp1c3Qgb25lIGFmdGVybm9vbiwgYnV0IGp1c3QgbGltaXQgaXQgdG8gb25lIGFyZWEgb2YgdGhlIGNpdHkuIApUaGVpciB5b3VuZyBndW5zIGNhbiBwcm9kdWNlIGdvYWxzIGZvciBzdXJlLiAKV2l0aCB0aGUgY2l0eSBzdGlsbCBvbiBlZGdlIGZvbGxvd2luZyBNb25kYXkncyBpbmNpZGVudCwgbWFueSBzb2NpYWwgbWVkaWEgdXNlcnMgaGF2ZSBoYWlsZWQgdGhlIG9mZmljZXIgYXMgYSBwYXJhZ29uIG9mIHJlc3RyYWludCBiYXNlZCBvbiBmb290YWdlIG9mIGhpcyB0ZW5zZSBzdGFuZG9mZiB3aXRoIHRoZSBhbGxlZ2VkIHZhbiBkcml2ZXIuIEl0IGhhcHBlbmVkIG5vdCBmYXIgZnJvbSB0aGUgc3RyZXRjaCBvZiBZb25nZSBTdHJlZXQgd2hlcmUgYSB2YW4gbW91bnRlZCBhIHNpZGV3YWxrIGFuZCByYW1tZWQgaW50byBwZWRlc3RyaWFucywga2lsbGluZyAxMCBhbmQgaW5qdXJpbmcgMTQuCkl0IHNvdW5kcyBsaWtlIHNoZSBtaWdodCBiZSB0cnlpbmcgdG8gd29yayBvbiB0aGUgMTJ0aCByaWIgYXJlYT8gTG9vayB1cCB0aGUgYW5hdG9teSBvZiB0aGUgdGhlIDEydGggcmliIGFuZCBzZWUgaWYgdGhhdCBjb3JyZWxhdGVzIHRvIHRoZSBhcmVhIHlvdSBmZWVsIGhlciB3b3JraW5nLgpJIGNhbiB1bmRlcnN0YW5kIHBlb3BsZSBiZWluZyB3YXJ5IG9mIHRoZW0uIFdoZW4gdGFsa2luZyB0byBteSBmcmllbmQgdGhlIG90aGVyIGRheSwgSSBkZXNjcmliZWQgaWd1YW5hcyBhcyBiZWluZyBsaXR0bGUgbW9iaWxlIHdlYXBvbnMuIApJIGJlbGlldmUgYSBsb3Qgb2Ygd2hhdCB5b3UgaGF2ZSBzYWlkIGhhcyBoaWdobGlnaHRlZCBob3cgY2lyY3Vtc3RhbnRpYWwgZXF1aXBtZW50IGlzLiBGb3IgZXhhbXBsZSwgeW91IG1lbnRpb24gdGhhdCBkcm9wIGJhcnMgYXJlIHVubmVjZXNzYXJ5IGZvciBjb21tdXRpbmcgYnV0IGZvciBtZSBJIGRlZW0gdGhlbSBhYnNvbHV0ZWx5IG5lY2Vzc2FyeSBhcyBteSBjb21tdXRlIGlzIG9uIGNvbXBsZXRlbHkgb3BlbiB0ZXJyYWluIGFuZCB0aGUgd2luZCBjYW4gZ2V0IHN0cm9uZy4gSSBhcHByZWNpYXRlIHRoZSBkaWZmZXJlbnQgcG9zaXRpb25zIGZvciB0aGF0IDopLiAKUGFyaXMgd2FzIGEgZGlmZmljdWx0IG1hcmtldCBhbmQgd2UgaGFkIHRoZSB1bmlvbiBwcm9ibGVtcyB0aGVuLiAKRXIsIGlmIG9ubHkgaXQgd2VyZSBzbyBlYXN5LiBXaGlsZSBzb21lIHNtb2tlcnMgYXJlIG5vIGRvdWJ0IHByb3VkIHVzZXJzIGFuZCB3b3VsZCBvbmx5IGhhdmUgY2lnYXJldHRlcyBwcmllZCBmcm9tIHRoZWlyIGNvbGQsIGRlYWQgKHNsaWdodGx5IHN0YWluZWQpIGZpbmdlcnMsIGEgbG90IG9mIGZvbGtzIHdobyBzbW9rZSByZWFsbHkgd2FudCB0byBxdWl0LiBJbiBmYWN0LCB0aGUgQW1lcmljYW4gQ2FuY2VyIFNvY2lldHkgY2l0ZXMgdGhhdCAyIG91dCBvZiAzc21va2VycyB3YW50IHRvIHF1aXQsIGFuZCBhYm91dCBoYWxmIHRyeSB0byBxdWl0IGVhY2ggeWVhci4gClRoZSBTdHJhdGEgUHJvcGVydHkgQWN0IGVzdGFibGlzaGVzIHRoZSBjaGFuZ2UgbXVzdCBiZSBzaWduaWZpY2FudCBhbmQgYXBwbGllcyB0byB1c2Ugb3IgYXBwZWFyYW5jZSwgYnV0IGhvdyBkb2VzIGEgY291bmNpbCBkZXRlcm1pbmUgd2hhdCBpcyBzaWduaWZpY2FudD9BIHN0cmFpZ2h0Zm9yd2FyZCB0ZXN0IG9uIHRoZSBwcm9wb3NlZCBjaGFuZ2UgaXMgaGVscGZ1bC4gV2lsbCB0aGUgY2hhbmdlIGluIHVzZSBhbHRlciB0aGUgYWJpbGl0eSBvZiBvd25lcnMsIHRlbmFudHMgb3IgZ3Vlc3RzIHRvIGFjY2VzcyB0aGUgZmFjaWxpdHk/IElzIHRoZSBjaGFuZ2Ugc2hvcnQgdGVybSBvbmx5IHRvIGFkZHJlc3MgYSBtYWludGVuYW5jZSBvciBzYWZldHkgaXNzdWUgb3IgaXMgdGhpcyBhIHBvbGljeSBjaGFuZ2UgaW4gdXNlPyBIb3cgd2lsbCBldmVyeW9uZSBiZSBhZmZlY3RlZCBieSB0aGUgY2hhbmdlPyBXaWxsIHRoZSBjaGFuZ2UgcmVzdWx0IGluIG90aGVyIG9jY3VwYW50cyBiZWluZyBhZmZlY3RlZCBhZHZlcnNlbHk/SWYgeW91IGFyZSBwbGFubmluZyBhIGNoYW5nZSBpbiB1c2Ugb3IgYXBwZWFyYW5jZSwgdGhlcmUgbWF5IGJlIG90aGVyIGNvbnNpZGVyYXRpb25zLiAKSSBoYXRlIHRyeWluZyB0byBjb250cmlidXRlIGFuZCBnZXR0aW5nIGRvd252b3RlZCBmb3Igc29tZXRoaW5nIEkgdGhvdWdodCB3b3VsZCBiZSB3ZWxsIHJlY2VpdmVkIChhbmQgbWF5YmUgZXZlbiB3YW50ZWQpLiAKS29yZWEncyBjb2xsZWdlL3VuaXZlcnNpdHkgZ3JhZHVhdGlvbiByYXRlIGlzIG9uZSBvZiB0aGUgaGlnaGVzdCAoaWYgbm90IHRoZSBoaWdoZXN0KSBhbW9uZyBPRUNEIGNvdW50cmllcy4gSXQncyBubyBzdXJwcmlzZSB0aGVyZSBpcyBtb3JlIG9mIGEgcHVzaCBmb3Igc29jaWFsIGNoYW5nZXMuCkhlIGFycml2ZWQgaW4gTWFyY2ggbGFzdCB5ZWFyIGFuZCBlYXJuZWQgJDE4IGEgZGF5IGFzIGEgZ2VuZXJhbCB3b3JrZXIgaW4gYSBjb25zdHJ1Y3Rpb24gY29tcGFueS5CdXQgd2hlbiBjb250cmFjdHMgc3RhcnRlZCBkcnlpbmcgdXAgYmVjYXVzZSBvZiB0aGUgZG93bnR1cm4sIGhpcyBlbXBsb3llcnMgdG9sZCBoaW0gaGUgaGFkIHRvIGdvLk1yIEdvbmJhciBmYWNlZCB0aGUgYmxlYWsgcHJvc3BlY3Qgb2YgcmV0dXJuaW5nIGhvbWUgd2l0aCBoaXMgZGVidCBzdGlsbCB1bnBhaWQuRGVzcGVyYXRlLCBoZSB0dXJuZWQgdG8gTXIgSGFuLCB3aG9tIGhlIGhhZCBnb3QgdG8ga25vdyB3aGVuIGhlIHdvcmtlZCBvbiB0aGUgcGFpbnRpbmcgYW5kIHJlbm92YXRpb24gb2Ygc29tZSBvZiB0aGUgZmlybSBvdXRsZXRzLk1yIEhhbiByZW1lbWJlcmVkIGhpbSwgYXMgdGhlIHlvdW5nIG1hbiBpbmR1c3RyeSBhbmQgaHVtaWxpdHkgaGFkIG1hZGUgYW4gaW1wcmVzc2lvbi4gClRoaXMgY3JlYXRlcyBhbiBpbnRlcmVzdGluZyBzaXR1YXRpb24gZm9yIHN1cmUsIGFzIHRoZSBVSUdFQSBkb2Vzbid0IHJlYWxseSBkZWZpbmUgZ2FtYmxpbmcgYXMgaWxsZWdhbC4gSXQganVzdCBzdGlwdWxhdGVzIHRoYXQgd2lsbGluZ2x5IHNlbmRpbmcgdHJhbnNhY3Rpb25zIHRvIG9yIGFjY2VwdGluZyB0cmFuc2FjdGlvbnMgZnJvbSBnYW1ibGluZyBzaXRlcyBpcyBhZ2FpbnN0IHRoZSBsYXcuIFdpdGggY3J5cHRvY3VycmVuY2llcywgdGhpcyBzZWdtZW50IGlzIGNvbXBsZXRlbHkgZ29uZSwgc28gaXQgc2VlbXMgdGhlIEFjdCBzaW1wbHkgZG9lc24ndCBjb3ZlciB0aGlzIHBvc3NpYmlsaXR5IGF0IGFsbC4KJ0l0IHRha2VzIGFuIGF2ZXJhZ2Ugb2YgdHdvIHdlZWtzIGZvciBhIHBlcnNvbiB0byBiZSB0b3RhbGx5IGRlbW9yYWxpemVkIGFuZCBpbnN0aXR1dGlvbmFsaXplZCBpbnRvIGhvbWVsZXNzbmVzcywiIHNhaWQgQW5uYSBCaXNzb25uZXR0ZSwgd2hvIHNwZW50IG5lYXJseSB0d28gZGVjYWRlcyBhcyBhIG51cnNlIGF0IEJvc3RvbiBVbml2ZXJzaXR5IE1lZGljYWwgQ2VudGVyLgpUaGUgc2l0dWF0aW9uIGhhcyBiZWVuIGV4YWNlcmJhdGVkIGJ5IHRoZSBuZWVkIHRvIHRlbXBlciBoaXMgZnJ1c3RyYXRpb24gd2l0aCBkdWUgcmVzcGVjdCBmb3IgYSBicmlsbGlhbnQgdGVhbSB3aG9zZSBlbXBsb3llZXMsIGJvdGggYXQgdGhlIGZhY3RvcnkgYW5kIGF0IHRoZSByYWNlIHRyYWNrLCBhcmUgZG9pbmcgdGhlaXIgdXRtb3N0IHRvIGdpdmUgaGltIHdoYXQgaGUgd2FudHMuIApJIHdvcmtlZCBhcyBhIGhvc3QgZm9yIFJlZCBMb2JzdGVyIGluIGNvbGxlZ2UgYW5kIGdvdCBhY2N1c2VkIG9mIGJlaW5nIHJhY2lzdCBtdWx0aXBsZSB0aW1lcyBmb3Igc2VhdGluZyBwZW9wbGUgaW4gdGhlIGJhY2sgb2YgdGhlIHJlc3RhdXJhbnQuIApNb250aCwgRmlza2VyIHNhaWQgY29uZmlkZW50bHksIHRoZSBlbmQgb2YgdGhpcyBtb250aC4gT3JtaXNoZXIsIGRpcmVjdG9yIG9mIGdsb2JhbCBjb21tdW5pY2F0aW9ucyBmb3IgRmlza2VyLCBmb2xsb3dlZCBieSBleHBsYWluaW5nIHRoYXQgaWYgdGhlIGNvbXBhbnkgcmVjZWl2ZWQgaXRzIHBhcGVyd29yayB0aGUgZW5kIG9mIHRoZSBtb250aCwgaXQgY291bGQgc3RhcnQgdG8gcmVjb3JkIHJldGFpbCBzYWxlcyBkdXJpbmcgdGhlIG1vbnRoIG9mIE9jdG9iZXIuIFlldCwgYmVjYXVzZSB0aGV5IGNhbiBsZWdhbGx5IGJlIHVubG9hZGVkIGFzIHByb2R1Y3Rpb24gdmVoaWNsZXMgd2l0aG91dCB0aGF0IHBhcGVyd29yay4uIApBbmQgc28sIGxpa2UgZXZlcnlvbmUgZWxzZSwgSSBoaWtlICh3aXRoIHRoZSBkb2dzOiB0aGUgY3JlZGl0IHdvcnRoeSBvbmUgYW5kIHRoZSBsb3NlcikuIApXaGVuIGFuIGVtcGxveWVlIGlzIGNyYXAgYW5kIHlvdSBhc2tlZCBhYm91dCBpdCBieSBzb21lb25lIGNvbnNpZGVyaW5nIGhpcmluZyB0aGVtLCB0aGVuIGJ5IGFsbCBtZWFucywgYnV0IHB1dHRpbmcgaXQgb3V0IHRoZXJlIGxpa2UgdGhhdCBqdXN0IHNlZW1zIGxpa2UgaXQgbWVhbnQgdG8gdGFuayBoaW0gYW5kIGNvbWVzIG9mZiBtZWFuIHNwaXJpdGVkLi4gCldlbGwgc2hlIGlzIHdvcnJpZWQgYWJvdXQgbXkgZmluYW5jZXMuIApJIGRvbiB0aGluayBoZSB3YXMgYWJsZSB0byBzZWUgdGhhdCBiZWZvcmVoYW5kIGFzIGEgcG90ZW50aWFsIG91dGNvbWUuIEhlIHdhcyBjdXJpb3VzLi4gCkl0IHdpbGwgYmUgcG9zdGVkIGJ5IDEwIHBtIG9yIGxhdGVyIHRvbmlnaHQuLiAKTXkgcGVyc29uYWwgcHJlZmVyZW5jZSBpcyBQZXJ0aCBQb2tlciBMZWFndWUgbW9zdCBkYXlzIG9mIHRoZSB3ZWVrIChlc3BlY2lhbGx5IHRoZSBtb25kYXkgYW5kIGZyaWRheSBnYW1lcyksIGhvdyBldmVyIHRoZSBTaGFyayBwb2tlciBkZWFsZXIgZGVhbHQgdG91cm55IG9uIGEgdGh1cnNkYXkgaXMgYWxzbyBxdWlldCBnb29kLiBJZiB5b3UgaGF2ZSBubyBpbnRlcmVzdCBpbiB0b3VybmFtZW50cyB0aGVuIFd5bm5lcnMgUG9rZXIgd291bGQgYmUgeW91ciBiZXN0IGJldCBhcyBtb3N0IG9mIHRoZWlyIGdhbWVzIGFyZSBjYXNoIG9ubHkgc28gaGF2ZSBhIGNhc2ggZ2FtZSBydW5uaW5nIGZvciB0aGUgZW50aXJlIGR1cmF0aW9uIG9mIHRoZSA3cG0gICBtaWRuaWdodCBsaWNlbnNlIChpbnN0ZWFkIG9mIHdhaXRpbmcgZm9yIHBsYXllcnMgdG8gYmUga25vY2tlZCBvdXQgb2YgdGhlIHRvdXJuYW1lbnRzKS4KQmUgY29uc2lkZXJhdGUgb2Ygb3RoZXJzLiBSZW1lbWJlciB0aGUgaHVtYW4uCldoYXQgaXMgbW9zdCBkZXNpcmFibGUgYWJvdXQgYSBjYXJlZXIgaW4gbnVyc2luZz8KR2V0dGluZyB0byB0aGUgcG9pbnQgb2YgYmVhdGluZyAyLzUgbGl2ZSBpcyBxdWl0ZSBlYXN5LiBUaGUgYmlnZ2VzdCBkZXRlcnJlbnQgaXMgYWN0dWFsbHkganVzdCBhIHByb3BlciBiYW5rcm9sbCB0aGF0IGNhbiB3aXRoc3RhbmQgc3dpbmdzIGFuZCBzdHJvbmcgbWVudGFsIGZvcnRpdHVkZSBhbmQgZGlzY2lwbGluZS4gVGhlIHZhc3QgbWFqb3JpdHkgb2YgcGVvcGxlIGFyZSBtZW50YWxseSB3ZWFrIGFuZCBmYWxsIGFwYXJ0IHdoZW4gZmFjZWQgd2l0aCBjaGFsbGVuZ2luZyBzaXR1YXRpb25zIChJIHRhbGtpbmcgYWJvdXQgdGhpbmdzIGxpa2UgZ29pbmcgb24gYSBkb3duc3dpbmcgYW5kIGxvc2luZyBhIHNpZ25pZmljYW50IGNodW5rIG9mIHlvdXIgYmFua3JvbGwgd2l0aCB0aGUgcHJvc3BlY3Qgb2Ygbm90IGJlaW5nIGFibGUgdG8gcGF5IHJlbnQsIG5vdCBmYWNpbmcgYSAyeCBwb3QgYmV0IG9uIHRoZSByaXZlcikuLiAKIkZvciBtb3JlIHRoYW4gYSBkZWNhZGUsIHRoZSBhY3Rpb25zIG9mIHRoZSBVUyBBdHRvcm5leSdzIE9mZmljZSBmb3IgdGhlIFNvdXRoZXJuIERpc3RyaWN0IG9mIEZsb3JpZGEgaW4gdGhpcyBjYXNlIGhhdmUgYmVlbiBkZWZlbmRlZCBieSB0aGUgRGVwYXJ0bWVudCBvZiBKdXN0aWNlIGluIGxpdGlnYXRpb24gYWNyb3NzIHRocmVlIGFkbWluaXN0cmF0aW9ucyBhbmQgc2V2ZXJhbCBhdHRvcm5leXMgZ2VuZXJhbCwgYSBzcG9rZXN3b21hbiB3aXRoIHRoZSBVUyBEZXBhcnRtZW50IG9mIExhYm9yIHJlc3BvbmRlZCB3aGVuIEFjb3N0YSB3YXMgYXNrZWQgZm9yIGNvbW1lbnQuIE9mZmljZSdzIGRlY2lzaW9ucyB3ZXJlIGFwcHJvdmVkIGJ5IGRlcGFydG1lbnRhbCBsZWFkZXJzaGlwIGFuZCBmb2xsb3dlZCBkZXBhcnRtZW50YWwgcHJvY2VkdXJlcy4gClNob3J0bHkgYWZ0ZXIgdGhlaXIgZGl2b3JjZSwgRm9yY2lsbG8gYW5kIEJhbGRlcnJhbWEgYmVjYW1lIGVuZ2FnZWQgdG8gYmUgbWFycmllZC4uIApCaWxseSBHaXZlbnMgdQpFYXIgZ290IHdldCBhIGZldyBtaWxlcyBpbiBhbmQgdGhhdCB3YXMgdGhlIGVuZCBvZiB0aGF0Li4gClRpbHRpbmcgTGVzcyA9IEltcHJvdmluZyBXaXRob3V0IEdldHRpbmcgIkJldHRlciIKSG93ZXZlciBpbiB0aGUgbG9uZyBydW4geW91IGFyZSBhY3R1YWxseSB3aW5uaW5nICQ3My42MCBwcm9maXQsIGFzIHlvdSBoYWQgYSA3My42JSBjaGFuY2UgdG8gd2luLiBTbyB5b3VyIGFsbCBpbiBlcXVpdHkgYWRqdXN0ZWQgZ3JhcGggd2lsbCBpbmNyZWFzZSBieSB0aGF0IGFtb3VudC4KQmVuY2ggUHJlc3M6IFdoZW4geW91IHBlcmZvcm0gYSBiZW5jaCBwcmVzcyBvbiBhIGJhbGwsIHRyeSB0byBrZWVwIHlvdXIgYm9keSBhcyBzdHJhaWdodCBhcyBwb3NzaWJsZSBmcm9tIHlvdXIgc2hvdWxkZXJzIHRvIHlvdXIga25lZXMuIEtlZXAgeW91ciBoZWFkIGFuZCBzaG91bGRlcnMgb24gdGhlIGJhbGwgYW5kIHlvdXIgZmVldCBmbGF0IG9uIHRoZSBncm91bmQuIApHb29kIE5ld3MKQW50aWNpcGF0ZWQgZHJvcHMgaW4gcmV2ZW51ZSByYW5nZSBiZXR3ZWVuIDE1IGFuZCA0MCBwZXIgY2VudCBpbmNsdWRpbmcgdGhlIHByZWRpY3Rpb24gc29tZSBsb2NhbCBjbHVicyBhbHJlYWR5IGZhY2luZyBtYXJnaW5hbCBpbmNvbWVzIHdpbGwgY2xvc2UuIApJdCBtdXN0IGhhdmUganVzdCBiZWVuIHRoZSBwaWN0dXJlIGluIG15IGhlYWQgb3Igc29tZXRoaW5nIGJlY2F1c2UgdGhlIEVTUE4gUG9rZXIgQ2x1YiBXb29kZW4gNCBEZWNrIERlYWxlciBTaG9lIGhhcyBhY3Rpb24gYmV0dGVyIHRoYW4gYW55IG90aGVyIG9uZSBJJ3ZlIHVzZWQgYmVmb3JlLiBNYXliZSBub3QsIGJ1dCBzaW5jZSBteSBleHBlY3RhdGlvbnMgd2VyZW4ndCBuZWNlc3NhcmlseSB0aGlua2luZyB0aGlzIHdhcyBnb2luZyB0byBiZSBhIGhvbWVydW4gcHVyY2hhc2UgaXQganVzdCBtYWRlIGl0IGEgbG90IGJldHRlci4gCldoZW4geW91IHdlcmUgYXQgc2VhIHlvdSB3ZXJlIG11Y2ggbW9yZSBpc29sYXRlZCBhbmQgcmVtb3RlIGZyb20gZmFtaWx5LCBmcmllbmRzIGFuZCB3aGF0IHdhcyBnb2luZyBvbiBpbiB0aGUgd29ybGQuLiAKWWVzLCB0aGV5IGRvLiBZb3UgY2FuIHNlZSB0aGUgcmVzdWx0aW5nIGFkdmVydGlzZW1lbnRzIGluIHRoZSBzaWRlYmFyLCBhbmQgYXMgc3BvbnNvcmVkIHBvc3RzLiBUaGVyZSdzIG5vIGJlaGluZCB0aGUgc2NlbmVzIG5lZmFyaW91c25lc3MgdGFraW5nIHBsYWNlLCB0aG91Z2guIApBbHNvIG5vIGNvbXBhbnkgc2hvdWxkIGhhdmUgYSBzZWN1cml0eSBmbGF3IHdoaWNoIGlzIHN0aWxsIGJlaW5nIGFjdGl2ZWx5IGV4cGxvaXRlZCAzMCBkYXlzIGFmdGVyIHRoZXkgd2VyZSBtYWRlIGF3YXJlIG9mIHRoZSBwcm9ibGVtLiBTb2Z0d2FyZSBwYXRjaGVzIHRha2UgdGltZSBhbmQgaW52ZXN0aWdhdGlvbnMgbmVlZCB0byBoYXBwZW4gYnV0IGFsbCBzdGFydHMgd2l0aCBwdWxsaW5nIHRoZSBpbnNlY3VyZSBzeXN0ZW1zIG9mZiB0aGUgaW50ZXJuZXQgYW5kIGxlYXZpbmcgdGhlbSBkaXNjb25uZWN0ZWQgdW50aWwgdGhlIGlzc3VlIGlzIHJlc29sdmVkLiBUaGUgb25seSBqdXN0aWZpY2F0aW9uIGZvciBsZWF2aW5nIHRob3NlIHN5c3RlbXMgb25saW5lIGFyZSBpZiB0aGV5IGFyZSBjcml0aWNhbCBzdWNoIGFzIHRoZSBzb2Z0d2FyZSB5b3UgZmluZCBpbiBzb21lIG1lZGljYWwgZXF1aXBtZW50ICh3aGljaCBjYW4gc3RpbGwgb2Z0ZW4gYmUgZGlzY29ubmVjdGVkIG9yIGN1dCBvZmYgZnJvbSB0aGUgaW50ZXJuZXQgYXQgbGFyZ2UpIG9yIGNhc2VzIGludm9sdmluZyBtYWpvciBpbnRlcm5ldCBpbmZyYXN0cnVjdHVyZS4KUmVhbGx5IGVhZ2VyIHRvIGdldCBiYWNrIGF0IGl0Li4gCkFuIGFjdG9yIGZyb20gSW5kaWEsIFNoYWhydWtoIEtoYW4sIHdobyBoYXMgaGlzIG93biBwcm9kdWN0aW9uIGNvbXBhbnksIGlzIHdvcnRoICQ2MDAgbWlsbGlvbi4gClRoYXQgY291cGxlZCB3aXRoIG5vdCByZWFsbHkgc2luZ2luZyBIaWxsYXJ5IHZpcnR1ZXMgYXMgbXVjaCBhcyBUcnVtcCBmb2libGVzIChhbmQgbm90IGV2ZW4gb2JzY3VyZSBvbmVzLCBqdXN0IHRoZSBvbmVzIGFueW9uZSB3aXRoIGVhcnMga25vd3MgYWJvdXQpIGFuZCB0aGUgaGFtIGZpc3RlZCBkZWZlbnNlcyBhZ2FpbnN0IEhpbGxhcnkgaW5kaXNjcmV0aW9ucyAoY2xhaW1pbmcgc2hlIHdhcyBjbGVhcmVkIG9mIGVtYWlsIGNoYXJnZXMgaW4gYSB2aWRlbyByZWxlYXNlZCBqdXN0IGRheXMgYWZ0ZXIgaGVyIGNhc2UgYmVpbmcgcmV2aXNpdGVkIHdhcyBhIGh1Z2UgbmV3cyBzdG9yeSkgY29uZmlybXMgdGhleSBhcmUganVzdCB0cnlpbmcgdG8ganVtcCBvbiB0aGUgYmFuZHdhZ29uIHJpZ2h0IGJlZm9yZSBpdCBzdG9wcy4gSXQgYSBzaGFtZSwgdG9vLCBiZWNhdXNlIGFsbCBwb2xscyBoYXZlIHRoZXNlIHR3byBhdCBuZWNrIGluIG5lY2ssIGFuZCB3aG9ldmVyIHdpbnMgaXMgZ29pbmcgdG8gbGVhdmUgcm91Z2hseSA1MCUgb2YgcGVvcGxlIHdpdGggZWdnIG9uIHRoZWlyIGZhY2VzLiAKIkJ1dCBsb29rLCB3ZSBhIGZyaWVuZGx5IGRlbW9jcmFjeSEiICJXZSBkb24gdGFyZ2V0IGNpdmlsaWFucyEiIFdlbGwsIHN1cmUsIGV4Y2VwdCB3aGVuIHlvdSB0YXJnZXQgdGhlaXIgbGFuZCBhbmQgbGl2ZWxpaG9vZHMuIApTYXcgbXkgdmlkZW8gYW5kIHdhcyBsaWtlLCBzaG91bGQgY292ZXIgdGhvc2Ugc3RyZXRjaCBtYXJrcy4gQW5kIEkgd2FzIGxpa2UsIHdlIG5vdCBjb3ZlcmluZyB0aG9zZSBzdHJldGNoIG1hcmtzLCBhYnNvbHV0ZWx5IG5vdC4gCkNsdWIgbWVtYmVycyBnYWluIGFjY2VzcyB0byBhZmZvcmRhYmxlIGZhY2lsaXRpZXMsIG1lYWxzIGFuZCBzZXJ2aWNlcyBpbiBleGNoYW5nZSBmb3IgbWVtYmVyc2hpcCBmZWVzLiAiVGhlIGNsdWIgaXMgdGhlIG1vZGVybiBkYXkgdG93biBzcXVhcmUgd2hlcmUgcGVvcGxlIGNhbiBjb21lIHRvZ2V0aGVyLCIgTXIgQmFsbCBzYWlkLiAiQ2x1YnMgYXJlIG11Y2ggbW9yZSB0aGFuIGJyaWNrcyBhbmQgbW9ydGFyLCBwb2tlciBtYWNoaW5lcyBhbmQgYSBiYXIuIApzdGF0ZSBvbmxpbmUgcG9rZXIgcG9vbCB0byBkZWJ1dCBNYXkgMQpBcyBhbnkgc21va2VyIG9uIGEgYmVuZGVyIGNhbiB0ZWxsIHlvdSwgZXhjZXNzIHNtb2tpbmcgYW5kIGRyaW5raW5nIGFsY29ob2wgY2FuIGFsc28gY2F1c2UgaGljY3Vwcy4gClRoYXQgY29tcGFueSB3aWxsIGludW5kYXRlIHlvdSB3aXRoIHBhcGVyd29yay4gVGhlIGZpcnN0IGRlbWFuZCBpcyBURU4gWUVBUlMgbWVkaWNhbCBhbmQgbWVudGFsIGhlYWx0aCByZWNvcmRzLiBBbmQsIGlmIHRoZSBpbmp1cmVkIGVtcGxveWVlIG1hbmFnZXMgdGhhdCwgdGhlIHNlY29uZCBzdGVwIGlzIGRlbmlhbCwgd2l0aG91dCBhbnkgdHlwZSBvZiByZXZpZXcuIAoiYSBzZXJhIHBldXQgdHJlIGxhIGRlcm5pcmUgb2NjYXNpb24gZCdjb3V0ZXIgbCdhbGJ1bSAxMyBlbiBpbnRncmFsaXQgZXQgZGUgdm9pciBjZSBxdSd0YWl0IGNlIDEzIFRvdXIgYXZhbnQgZGUgcmV2ZW5pciBkJ2ljaSBkZXV4IGFucyIgZXhwbGlxdWUgTmljb2xhLiAKSW4gdGhlIHdvcmxkIG9mIG1vYmlsZSBhcHBzIGFuZCBhcHAgZGV2ZWxvcG1lbnQsIGRlZXAgbGlua3MgYXJlIGVzc2VudGlhbGx5IFVSTHMgZm9yIHRoZSBpbnNpZGUgb2YgYW4gYXBwIFtzb3VyY2VzOiBEZWVwbGluaywgTW9iaWxlRGVlcExpbmtpbmddLiBKdXN0IGFzIGRlZXAgbGlua3Mgb24gYSB3ZWJzaXRlIGhlbHAgYnJpbmcgdXNlcnMgZGlyZWN0bHkgdG8gdGhlIGNvbnRlbnQgdGhleSBhcmUgbG9va2luZyBmb3IsIGRlZXAgbGlua2luZyBiZXR3ZWVuIGFwcHMgY29ubmVjdHMgYSB1bmlxdWUgVVJMIHRvIGEgc3BlY2lmaWMgYWN0aW9uLCBjb25uZWN0aW5nIHVzZXJzIHRvIHRoZSBjb250ZW50IHRoZXkncmUgc2Vla2luZyBbc291cmNlOiBNb2JpbGVEZWVwTGlua2luZ10uIEZvciBleGFtcGxlLCBpZiBhIHVzZXIgd2l0aCBhIHRyYXZlbCBhcHAgaW5zdGFsbGVkIG9uIGhpcyBvciBoZXIgcGhvbmUgZG9lcyBhIEdvb2dsZSBzZWFyY2ggZm9yICJob3RlbCBkZWFscywiIGNsaWNraW5nIG9uIGEgbGluayBpbiB0aGUgc2VhcmNoIHJlc3VsdHMgY291bGQgb3BlbiB0aGUgdHJhdmVsIGFwcCBpbnN0ZWFkIG9mIGEgd2ViIHBhZ2UgW3NvdXJjZTogSHNpYW9dLi4gCkJlY2F1c2Ugb2YgdGhhdCBwYXN0LCB0aGVyZSBhcmUgd2FsbHMgYmV0d2VlbiB1cy4gCkFzIHNvbWVvbmUgd2hvIHBsYXlzIDEyIGhvdXIgc2Vzc2lvbnMgYW5kIGhhcyB0aGUgbWV0YWJvbGlzbSBvZiBhIHRlZW5hZ2VyIHRyYWluaW5nIGZvciBhIG1hcmF0aG9uLCB0aGVyZSBwbGVudHkgb2YgZG93bnRpbWUgdG8gZWF0IGluIGxpdmUgcG9rZXIuIFRoZSBrZXkgaXMgdG8gYmUgZnVsbHkgZW5nYWdlZCBhbnkgdGltZSB5b3UgaGF2ZSBjYXJkcyBpbiBmcm9udCBvZiB5b3UsIGV2ZW4gaWYgeW91IGhhdmVuIFZQSVBlZCBvciBmdWxseSBpbnRlbmQgdG8gZm9sZCB3aGVuIHRoZSBhY3Rpb24gZ2V0cyB0byB5b3UuIFdoaWxlIHRoZSBkZWFsZXIgaXMgZ2V0dGluZyB0aGUgbmV4dCBkZWNrIHJlYWR5LCB3aXBlIHlvdXIgaGFuZHMsIHB1c2ggdGhlIGZvb2QgdGFibGUgYXdheSwgY2F0Y2ggdGhlIGNhcmRzIHdoaWxlIHRoZXkgcGl0Y2hlZCB0byB5b3UgYW5kIGdldCByZWFkeSBmb3IgeW91ciBuZXh0IGFjdGlvbi4KSWdldG5vc2F0aXNmYWN0aW9uICAxIHBvaW50ICBzdWJtaXR0ZWQgMjcgbWludXRlcyBhZ28KSGUgd2FzIGFuIGF2aWQgcmVhZGVyIHdobyBhbHNvIGVuam95ZWQgYnJpZGdlLCBnaW4gcnVtbXksIGJpZCBldWNocmUsIFVubyBhbmQgdGhlIG9jY2FzaW9uYWwgZ2FtZSBvZiBwb2tlciAoY2FyZHMpLiAKQmVncm5kdW5nOiAid2VpbCBkaWUgSW56ZXN0IEhlbW11bmcgd2VnZmxsdCB1bmQgZGllc2UgR2VmYWhyIGJlaSBob21vc2V4dWVsbGVuIFBhYXJlbiBiZXNvbmRlcnMgaG9jaCBzZWkuIgpGaW5kIE91dCBIb3cgYW5kIFdoeSB0aGUgQ2FzdCBGb3JtZWQgU3VjaCBhIFN0cm9uZyBCb25kCllvdSBjYW4gZXhwZWN0IHlvdXIgaHVzYmFuZCB0byBrbm93IGFuZCBkbyBldmVyeXRoaW5nIGZvciB5b3UuIEkgdGhvdWdodCB5b3Ugd291bGQgaGF2ZSBsZWFybmVkIHRvIHVzZSB5b3VyIHdvcmRzLiBJZiB5b3UgaGF2ZSBhbiBpc3N1ZSwgYnJpbmcgaXQgdXAgYW5kIHRhbGsgYWJvdXQgaXQgYmVjYXVzZSBob3cgdGhlIGhlbGwgaXMgeW91ciBodXNiYW5kIHN1cHBvc2VkIHRvIGtub3cgd2hhdCB0byBzYXkgaWYgeW91IGRvbiBldmVuIGtub3cgd2hhdCBpcyBnb2luZyBvbi4gCkkgZG9uIHRoaW5rIE1FMSBoYWQgdGhhdCBtYW55IG9mIHRob3NlIChhZ2Fpbiwgb3RoZXIgdGhhbiB0aGUgUmVhcGVycyBhcmUgc3RpbGwgb3V0IHRoZXJlKS4gSSB0aGluayBpdCB3YXMgaW50ZW50aW9uYWxseSBzZXQgdXAgdG8gYmUgbXVjaCBtb3JlICJmaXJzdCBnYW1lIGluIHRoZSBzZXJpZXMiIHdpdGggbW9yZSBhbmQgYmlnZ2VyIHN1cnByaXNlcyB0byBjb21lIGxhdGVyIGluIHRoZSBzZXJpZXMuIApBbG1vc3QgZXZlcnlvbmUgaXMgdGlsdGluZyBhdCBzb21lIHBvaW50LCBhdCBsZWFzdCBpZiB5b3UgaGF2ZSBhIGRvd25zd2luZyBhbmQgcGxheSBhIG1lZGlvY3JlIHpvb20gc2Vzc2lvbiBhZnRlciBhbiBCYWQgZGF5IGFuZCBsb3NlIDQrIGJpZyBwb3RzIGluIGEgZmV3IG1pbnV0ZXMgYWdhaW5zdCA2MC8xMCBzdGF0aW9ucyB3aG8gd2lsbCByaXZlciBoaXMgdHdvIG91dHMgYW5kIHRoZW4gZmluYWxseSBjYWxsIGEgMjAwYmIgNWIgc2hvdmUgd2l0aCBBQSB0byBzZWUgaGltIGhpdHRpbmcgdHdvIHBhaXIgd2l0aCBLUW8sIHlvdSB3aWxsIGdldCBvdmVyIHRoZSBwb2ludCAiYXQgbGVhc3QgaSBnZXQgaXQgaW4gZ29vZCIuIApEZSBkb2NlbnQgaGVlZnQgZGFuIG9vayBvcCBoZXQgYmVvb3JkZWxpbmdzZm9ybXVsaWVyIGFhbmdlZ2V2ZW4gZGF0IGRlIHNjcmVlbmluZyBlbiBhbmFtbmVzZSBtaWpuIHN0ZXJrZSBwdW50ZW4gd2FyZW4uIApLb2FsYWVzcSAgNzggcG9pbnRzICBzdWJtaXR0ZWQgMyBkYXlzIGFnbwpGb3JjaWxsbyB3YXMgYXQgaG9tZSBvZiBmaWFuY2Ugd2hlbiBoZSBhbGxlZ2VkbHkgYnJlYWNoZWQgYmFpbCBjb25kaXRpb25zClNpIGxlcyBwaWNlcyBzb250IGRlbWV1cmVzIHBlbmRhbnQgbG9uZ3RlbXBzIHVuIHByb2R1aXQgZGUgbHV4ZSwgZG9uYyBvbnJldXgsIGMnZXN0IHBhcmNlIHF1J2VsbGVzIHNvbnQgcmVzdGVzIHNvdXMgbW9ub3BvbGUgdm5pdGllbiBqdXNxdSdhdSBYSVYgbWUgc2ljbGUuIFBhciBsYSBzdWl0ZSwgR25vaXMsIFBvcnR1Z2FpcyBldCBFc3BhZ25vbHMgbidhdXJvbnQgZGUgY2Vzc2UgZGUgbWV0dHJlICBiYXMgY2UgbW9ub3BvbGUgcGFyIGxlIGJpYWlzIGQnZXhwZGl0aW9ucyAgIGwncmUgZGVzIGdyYW5kZXMgZGNvdXZlcnRlcyAgLCBhaW5zaSBxdWUgcGFyIGxhIG1pc2UgZW4gdXZyZSBkZSBsZXVycyBwcm9wcmVzIGN1bHR1cmVzLCB0ZWwgcXVlIGxlcyBIb2xsYW5kYWlzIGV0IGxlcyBBbmdsYWlzIGxlIGZpcmVudCBhdSBYSVggbWUgc2ljbGUgcG91ciBsYSBjdWx0dXJlIGR1IHRoIGFmaW4gZGUgZmFpcmUgdG9tYmVyIGxlIG1vbm9wb2xlIGNoaW5vaXMuCkkgYmVlbiBkb2luZyB0aGlzIGZvciBhYm91dCA4IG1vbnRocyBzbyBmYXIgYW5kIGxvc3QgYWJvdXQgNDAgbGJzIG9mIGZhdCBhbmQgZ2FpbmVkIGEgZmFpciBhbW91bnQgb2YgbXVzY2xlIHRocm91Z2hvdXQuIApJIG5lZWQgdG8gYmUgYWJsZSB0byBkZWZpbml0aXZlbHkgdGVsbCBteSBleCBJIG1vdmVkIG9uLi4gClRoZXJlIHdvdWxkIGFsc28gYmUgcGxlbnR5IG9mIGxvY2FscyB3aG8gcmVtZW1iZXIgdGhlIFBPRVRTIGx1bmNoZXMgaW4gdGhlIEpvaG4gT3hsZXkgUmVzdGF1cmFudC4gCklmIHlvdSB3YW50IHlvdSBjYW4gZXZlbiBzdGFydCB5b3VyIG93biBQcml2YXRlIFBsYXlpbmcgVGFibGUgd2hpY2ggY291bGQgZ2l2ZSB5b3UgYSBzdXJnZSBvZiBjb25maWRlbmNlLCBlc3BlY2lhbGx5IGlmIHlvdSd2ZSBiZWVuIHBsYXlpbmcgdGFibGVzIGZvciBhIHdoaWxlIGFuZCBoYXZlIG1ldCBzb21lIGNvbnRhY3RzLiAKQSBDRU5UVVJZIE9MRCBDRVMgRklSU1QgVElNRVIKRGUgbW1lLCBlbiBFc3BhZ25lIGNvbW1lIGF1IE1hZ2hyZWIsIG9uIGNvbnNvbW1lIGVuY29yZSAgbCBhY3R1ZWxsZSBsZXMgZ2xhbmRzIGRlIGNlcnRhaW5zIGNobmVzIGRvdXggKFF1ZXJjdXMgaWxleCB2YXIuIGJhbGxvdGEpLiBMZSBnbGFuZCBkZSBjaG5lLCBkZSBtbWUgcXVlIGwgY29uc3RpdHVlIHBvdXIgVmlyZ2lsZSAocGFyIGV4ZW1wbGUsIHF1aSBsIGRhbnMgbGVzIEdvcmdpcXVlcyksIGxlIHJnaW1lIGRlIGwgcHJpbWl0aWYsIGMgYXUgc2VucyBub24gcGpvcmF0aWYsIGwgcHJlbWllcjogIGNlIHRpdHJlLCBsZSBnbGFuZCBlc3QgdW4gbG1lbnQgY2l2aWxpc2F0aW9ubmVsLCBzdXJ0b3V0IHBhcmNlIHF1ZSBsIGZ1dCByYXBpZGVtZW50IHRhYmxpZSBlbnRyZSBsZSBnbGFuZCBkdSBjaG5lIGV0IGNlbHVpIGRlIGwgY2UgcXVpIGV4cGxpcXVlIHF1ZSBsZSBnbGFuZCwgZGlzYWllbnQgbGVzIGFuY2llbnMsIGV4Y2l0ZSBWbnVzLiAKSXQgdmVyeSB2aXN1YWxseSBhcHBlYWxpbmcuIEkgcmVhbGx5IGVuam95IE1hZ2dhcmQga25vdHMgcGVyc29uYWxseSBiZWNhdXNlIHRoZXkgaW5leHBlbnNpdmUgYW5kIGhpZ2ggcXVhbGl0eS4gCkdvb2QgbHVjaywgYW5kIGRvbiBiZSBhZnJhaWQgdG8gd2Fsay4gTm90IGhhdmluZyBhIGNvbm5lY3Rpb24gdG8gYSBzYWxlcyBwZXJzb24gb3IgYSBkZWFsZXJzaGlwIChhbmQgaGF2aW5nIGEgYmFja3VwKSB3aWxsIHBvdGVudGlhbGx5IHNhdmUgeW91IHRob3VzYW5kcyBpZiB5b3UgcGxheSBpdCBjb3JyZWN0bHkuCkl0J3MgaW1wb3NzaWJsZSB0byBhcnRpY3VsYXRlIGFkZXF1YXRlbHkgaG93IG11Y2ggeW91ciBsb3ZpbmcgbmF0dXJlLCBraW5kIGhlYXJ0IGFuZCBzdHJlbmd0aCBoYXZlIGluZmx1ZW5jZWQgbXkgbGlmZSwgYW5kIHdpbGwgY29udGludWUgdG8gaW5mbHVlbmNlIGl0IGxvbmcgYWZ0ZXIgeW91J3ZlIGRlcGFydGVkIHRoaXMgZWFydGguCkluIGEgcm9vbSBERkssIEJKLCBjb3cgZ2lybCwgMjUgbWluIERBVFkgd2l0aCBoZXIgaW50ZW5zZSBmdWNraW5nIE8sIG1pc3Npb25hcnksIHRvYmFjY28gYnJlYWssIGhlciB1bnN1Y2Nlc3NmdWwgQkogYWltaW5nIGF0IENJTSwgbXkgbWFzc2FnZSBvbiBoZXIuIApEaWUgQnJhbmNoZW52ZXJibmRlIGJlaGF1cHRlbiB6d2FyIGdlcm4sIGRpZSBBbnRlaWxlIHZvbiBTcGllbGVybiB1bmQgU3BpZWxlcmlubmVuIHNlaWVuIGV0d2EgZ2xlaWNoLiA0NyBQcm96ZW50IGRlciBHYW1lciBzZWllbiBuYWNoIGVpbmVyU3R1ZGllIGRlcyBWZXJiYW5kcyBnYW1lIiB2b24gMjAxNndlaWJsaWNoLiAKV2UgdGhlIFBlb3BsZSBhcmUgc2FjcmVkLCBzZXBhcmF0ZSBmcm9tIG91ciBpbmRpdmlkdWFsIHNlbHZlcywgdG9nZXRoZXIgd2UgaGF2ZSB3aGF0IER1cmtoZWltIGNhbGxlZCBhICJjb2xsZWN0aXZlIGNvbnNjaW91cyIgICBhbiBleGNlc3Mgb2YgZW5lcmd5IHRoYXQgaXMgbW9yZSB0aGFuIHRoZSBzdW0gb2Ygb3VyIGluZGl2aWR1YWwgcGFydHMuLiAKUGxlYXNlIGRvbid0IGRvIHRoaXMuIFRoZXJlIGFyZSBzbyBtYW55IHJlYXNvbnMgdG8gbGl2ZS4gClRoZXNlIHNvbmdzIGFyZSBhdmFpbGFibGUgb24gIlRoZSBGYW1lLCJHYUdhJ3MgZmlyc3QgYWxidW0uIHZlcnNpb24uIFlvdSBjYW4gZ2V0IGl0L3RoZW0gZnJvbSBpVHVuZXMuIDM0KSBBZ2FpbiwgQWdhaW4gLiBDYW4gYmUgZm91bmRvbiBZb3V0dWJlLiAzNikgTHV2IFVTdW0gKGJ5IENKIEhvbGxhbmQgZmVhdC4gTGFkeSBHYUdhKS4gU2VhcmNoIFlvdXR1YmUgZm9yIHRoaXNzb25nLiAzNykgTm8gV2F5IC4gQXNzdW1lZG91dHRha2UgZnJvbSAiVGhlIEZhbWUgTW9ucyBlci4iIENhbiBiZSBmb3VuZCBvbiBZb3V0dWJlLiAKVGhhdCdzIHJpZ2h0IEkgc2FpZCA1NCBwZXJjZW50IQpEb24gc2xhbmRlciBzZXJpZXMuIElmIHlvdSBkb24gbGlrZSBhIHNlcmllcywgaXQgZmluZCB0byBzYXkgdGhhdCB5b3UgZG9uIGxpa2UgaXQuIEJ1dCBpZiB5b3Ugc3RhcnQgYmFzaGluZyBhIGJ1bmNoIG9mIHNlcmllcywgd2h5IHdvdWxkIHBlb3BsZSB3YW50IHRvIHJlY29tbWVuZCB5b3Ugc29tZXRoaW5nPwoiSXQgaXMgd2l0aCBhIGhlYXZ5IGhlYXJ0LCBzYWRuZXNzIGFuZCBncmVhdCBkaXNhcHBvaW50bWVudCB0aGF0IEkgaGF2ZSB0byBhbm5vdW5jZSBGVE4gd2lsbCBiZSBjbG9zaW5nIHRoZSBjbHViIE1vbmRheSwiIEZUTiBQb2tlcidzIG93bmVyIEpvZHkgV2hlZWxlciBwb3N0ZWQgb24gRmFjZWJvb2sgb3ZlciB0aGUgd2Vla2VuZC4KU29tZSBwYXJlbnRpbmcgZXhwZXJ0cyB0aGluayB0aGF0IGluZHVsZ2luZyBTaGlsb2ggbWFzY3VsaW5lIGJlaGF2aW9yIGlzIGEgbWlzdGFrZS4gIkxpdHRsZSBnaXJscyBoYXZlIG5ldmVyIGJlZW4gd29tZW4gYmVmb3JlLCIgR2xlbm4gU3RhbnRvbiwgZGlyZWN0b3Igb2YgRmFtaWx5IEZvcm1hdGlvbiBTdHVkaWVzIGF0IHRoZSBjb25zZXJ2YXRpdmUgb3JnYW5pemF0aW9uIEZvY3VzIG9uIHRoZSBGYW1pbHksIHRlbGxzIExpZmUgU3R5bGUuICJUaGV5IG5lZWQgaGVscCwgdGhleSBuZWVkIGd1aWRhbmNlIG9mIHdoYXQgdGhhdCBsb29rcyBsaWtlLiBJdCBpbXBvcnRhbnQgdG8gdGVhY2ggb3VyIGNoaWxkcmVuIHRoYXQgZ2VuZGVyIGRpc3RpbmN0aW9uIGlzIHZlcnkgaGVhbHRoeS4iClRoZSBsYXJnZXIgdGhlIGJldHRlciwgYXMgdGhlIHNxdWFyZSBmb290YWdlIHJhdGlvIHdpbGwgYWRkIHRvIHlvdXIgbG9zcy4gCk9oYmFyZiAgMyBwb2ludHMgIHN1Ym1pdHRlZCAxOSBkYXlzIGFnbwpadWRlbSB3cmUgZGFzIGxlaWRsaWNoZSBIZW5uZSBFaSBQcm9ibGVtIHp1IGtscmVuLCBubWxpY2ggb2IgZGVyIEtobHNjaHJhbmsgenVlcnN0IGluIHVuc2VyZW4gVm9yc3RlbGx1bmdlbiBleGlzdGllcnRlLCBiZXZvciBlciBzaWNoIG1hdGVyaWFsaXNpZXJ0ZSwgb2RlciBvYiBkaWUgRXhpc3RlbnogZWluZXMgS2hsc2NocmFua3MgYXVjaCBhdWVyaGFsYiBkZXMgdW5zIFZvcnN0ZWxsYmFyZW4gbWdsaWNoIGlzdCwgdW5kIHdvIGVyIGRhbm4gc2VpbmVuIFN0cm9tIGhlciBiZWtvbW10LiAKVGFsaXhhbnNvbGRpZXIgIDEgcG9pbnQgIHN1Ym1pdHRlZCA4IGRheXMgYWdvCkZvcnR1aXRvdXM1IHUKWW91IGNhbiBzYWZlbHkgZ3JpbmQgZWFybHkgbWFwcyBmb3IgcmF3IGN1cnJlbmN5IHRvIHVwZ3JhZGUgaW50byBtb3JlIHNwZWNpYWxpemVkIGdlYXIuIFNhdmUgeW91ciBzdWxwaGl0ZSB0byBmb3NzaWwgZmFybSBmb3IgdXBncmFkZXMuIFBpY2t1cCBhbmQgaWRlbnRpZnkgYm9vdHMsIGJlbHRzIGFuZCBqZXdlbHJ5IG9uY2UgYXQgbWFwcy4uIApNeWRvZ2hhc3NjaGVpZmxpZXMgIDAgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnbwpJIGxvb2sgZG93biBhdCBBczJzNGg2aC4gSSBsaWtlIHRoZSBzdWl0ZWQgc3BhZGVzIGFuZCBjb25uZWN0ZWQgYm90dG9tLCB3aXRoIHRoZSByaWdodCBmbG9wIHRoaXMgY291bGQgYmUgYSBnb2xkZW4gaGlkZGVuIGhhbmQsIHNvIEkgY2FsbCB0aGUgJDEwLiAKVGhlIHBlb3BsZSBvZiBEZXRyb2l0IHN1cHBvcnRlZCwgYmFja2VkLCBhbmQgdm90ZWQgdGhhdCBjb3JydXB0aW9uIGludG8gcG93ZXIgZm9yIDQwIHllYXJzLiBUaGVyZSB3YXMgbm8gbXlzdGVyeSByZWdhcmRpbmcgdGhlIGNvcnJ1cHRpb24gYW5kIHNjYW5kYWwgb2NjdXJyaW5nIGFzIGl0IHdhcyBhbGwgb3ZlciB0aGUgbmV3cy4gSWYgeW91IHdhbnQgdG8gaGF2ZSBhIGJldHRlciB1bmRlcnN0YW5kaW5nIG9mIERldHJvaXQgcG9saXRpY3MsIGxvb2sgaW50byBDb2xlbWFuIFlvdW5nLiAKUHJvamVjdCBMaWdodG5pbmcgQnVnLiBJIHJlcmVhZCBpdCBhbGwgdGhlIHRpbWUgYW5kIGl0IG1ha2VzIG1lIGZlZWwgYWxsIHRoZSBmZWVscy4gSSBsb3ZlZCBSYWwgcXVpdGUgYSBiaXQgYmVmb3JlIHJlYWRpbmcgaXQgYW5kIHRoaXMgdG9vayBpdCB0byBhIHdob2xlIG5ldyBsZXZlbC4KV2UgYXJyaXZlZCBhdCBXZXRoZXJzcG9vbnMgaW4gRG9yY2hlc3RlciBhcm91bmQgNmlzaCBmb3IgYSBtdWNoIG5lZWRlZCBwaXQgc3RvcC4gUm9iICdUZWFtIEJvbmRlcicgVG9ua3Mgd2FzIGdpdmVuIHRoZSB0YXNrIG9mIGZpbmRpbmcgYSB0YWJsZSBmb3IgdXMgdG8gb3JkZXIgb3VyIGZvb2Qgd2hpbGUgdGhlIG1ham9yaXR5IG9mIHVzIGRvbm5lZCBveHlnZW4gbWFza3MgYW5kIGNyYW1wb25zIHRvIHNjYWxlIHRoZSBkaXp6eSBoZWlnaHRzIG9mIHRoZSBzdGFpcmNhc2UgdG8gZmluZCB0aGUgdG9pbGV0cy4gQnkgdGhlIHRpbWUgd2UgZ290IGJhY2sgdG8gZmluZCBSb2IsIHdlIHRoaW5rIHRoZSB3aG9sZSBwdWIsIHRoZSBwdWIgbmV4dCBkb29yLCB0aGUgc21va2VycyBvdXRzaWRlLCB0aGUgcGVvcGxlIGluIHRoZSBmZXcgc2hvcHMgaW4gdGhlIGhpZ2ggc3RyZWV0IGFuZCB0aGUgb2xkIG1hbiB3YWxraW5nIGhpcyBkb2cgYWxsIGtuZXcgdGhhdCB3ZSB3ZXJlIHNhdCBvbiBUYWJsZSAyOCEgWW91IGhhZCB0byBiZSB0aGVyZSB3aGVuIHRoZSB3YWl0cmVzcyBjYWxsZWQgb3V0ICJUYWJsZSAyOCEhIi4gCk5vdGhpbmcgd3Jvbmcgd2l0aCBDRyBpZiB0aGF0IHdoYXQgd29ya3MgZm9yIHlvdSwgYnV0IGl0IHdhcyBoZWxsIG9uIG15IGpvaW50cy4gSSB3YXMgd2VhcmluZyBrbmVlIGJyYWNlcyBhbmQgdGhpbmtpbmcgb2YgZ2V0dGluZyBrbmVlcyByZXBsYWNlZCBhZnRlciBDRyB3b3Jrb3V0cyhJIDMxIGFuZCBvdmVyd2VpZ2h0LCBidXQgbm90IG9iZXNlKS4gClNlY29uZCBoYW5kLCBxdWl0ZSBzdGFuZGFyZC4gSnVzdCBjaGVjayB0aGUgcml2ZXIgYXMgeW91IGJhc2ljYWxseSB0dXJuIHlvdXIgaGFuZCBpbiBhIGJsdWZmIGJ5IG92ZXJ2YWx1aW5nIGp1c3QgdG9wIHBhaXIKTE9MISBJIGp1c3QgZG9uJ3QgdGhpbmsgcGVvcGxlIG91dHNpZGUgdGhlIE1pZHdlc3QgdW5kZXJzdGFuZCBpdCB3YXMgZGVhZGx5IGNvbGQgb3V0IHdoZW4gYWxsIHRoaXMgd2FzIHN1cHBvc2VkIHRvIGhhdmUgaGFwcGVuZWQuIApCdXQsIGl0IGlzIHdheSBtb3JlIGVuam95YWJsZSB0byB3aW4gYSBzcXVhZCBnYW1lIHRoYW4gYSBzb2xvLiAyIHBvaW50cyAgc3VibWl0dGVkIDQgZGF5cyBhZ28KRmFzdCBmb3J3YXJkIHRvIHRoaXMgeWVhciwgSSdtIDM0IGFuZCB0b29rIGhvbWUgYSBsaXR0bGUgb3ZlciAxMjAnMDAwIGluIHRoZSBsYXN0IDEyIG1vbnRocy4gClBERiBEb3dubG9hZCBTaW5nbGUgcGF0dGVybiBGUkVFLiBQYWxlIGJ5IEtpbSBIYXJncmVhdmVzIFBhdHRlcm4gQm9vayAyMSBwYXR0ZXJucyBSUlAgJDI4LjkwIFByaWNlOiAkMjguODAuIApQYXR0ZXJzb24sIHdobyBqb2luZWQgdGhlIGNlbnRyYWwgYmFuayBpbiAyMDEzIGFmdGVyIG1ha2luZyBhIG5hbWUgZm9yIGhlcnNlbGYgb24gQmF5IFN0cmVldCwgZGlkbid0IHByZXRlbmQgdGhhdCB0aGluZ3Mgd2VyZW4ndCBncmltLiBHcm9zcyBEb21lc3RpYyBQcm9kdWN0ICwgYW5kIHRoZSB0aGUgY291bnRyeSByZWNvcmRlZCBpdHMgd2lkZXN0IHRyYWRlIGRlZmljaXQgZXZlciBpbiBEZWNlbWJlci4gCkludGVyZXN0aW5nIHRob3VnaHQuIFRoZXJlIGFyZSBzaXgga2luZ2RvbXMgY3VycmVudGx5LCBzdGFydGluZyB3aXRoIEFyY2hhZWJhY3RlcmlhLCBFdWJhY3RlcmlhLCBQcm90aXN0YSwgUGxhbnRhZSwgRnVuZ2ksIGFuZCBBbmltYWxpYS4KVGhhdCBkb2VzbiBtZWFuIHRoYXQgeW91IGRvbiBkZXNlcnZlIHN1cHBvcnQgICBjbGVhcmx5LCB5b3UgYXJlIGxpdmluZyBpbiBhIHRveGljIHNpdHVhdGlvbiBhbmQgaXQgaXMgdGFraW5nIGEgdG9sbCBvbiB5b3UgICBidXQgaXQgY2FuIGJlIGhlcmUuIEFzIGFuIGFsdGVybmF0aXZlIHRvIHBhcnRpY2lwYXRpbmcgaGVyZSwgd2UgZ2VuZXJhbGx5IHBvaW50IHBlb3BsZSB0byAvci9zZWxmaW1wcm92ZW1lbnQgb3IgL3IvRGVjaWRpbmdUb0JlQmV0dGVyIGFzIGFsdGVybmF0aXZlIHN1cHBvcnQgc3Vicy4KVGhlIHJlc3VsdHM/IFdvbWVuIGZvdW5kIHRoZSBtZW4gd2hvIGxpa2VkIGJhYmllcyBtb3JlIGF0dHJhY3RpdmUsIGVzcGVjaWFsbHkgYXMgcG90ZW50aWFsIGxvbmcgdGVybSBwYXJ0bmVycy4KSSBwaWNrZWQgdXAgbXkgY29weSBlYWNoIHRpbWUsIHdlbnQgc3RyYWlnaHQgZmFjZSB0byBiZWQgYW5kIGRpZG4ndCBzdG9wIHJlYWRpbmcgdW50aWwgSSdkIGZpbmlzaGVkLi4gClN1YnN0aXR1dGUgdGVhY2hlcnMgd2VyZSB1c3VhbGx5IHRoZSBjYXVzZSBvZiBjb25jZXJucy4gVW5za2lsbGVkLCBvdXQgb2YgcHJhY3RpY2Ugc3VicywgdW5mYW1pbGlhciB3aXRoIHRoZSBzdGFuZGFyZCBvZiBwcm9mZXNzaW9uYWxpc20gb2YgdGhlIGRpc3RyaWN0Li4gClNvbWUgaGFuZHMgcGxheSB3ZWxsIGFnYWluc3QgdmVyeSBmZXcgb3Bwb25lbnRzLCB3aGlsZSBvdGhlcnMgcGxheSB3ZWxsIGFnYWluc3QgbWFueSBvcHBvbmVudHMuIEl0IGFsbCBkZXBlbmRzIG9uIHRoZSBjaXJjdW1zdGFuY2VzLi4gCklmIHlvdSBhcmUgaW4gcG9zaXRpb24gd2l0aCBhIGRyYXcgYW5kIGl0IGlzIGNoZWNrZWQgdG8geW91IGJldHRpbmcgYXQgdGhlIHBvdCBtYXkgZ2l2ZSB5b3UgYSBjaGFuY2UgdG8gd2luIGl0IHRoZXJlIGFuZCB0aGVuLi4gCllvdSBnb3QgcHJvYmxlbXMuIFRlbGwgeW91IG1vbS4gQXNzdW1lIG5vIG9uZSBlbHNlIGNhcmVzLgpXZSBrbm93IGhvdyB0aGUgQ2FkcmUgRmlyZWJsYWRlIGhhcyB3b3JrZWQgaW4gcGFzdCBhZGRpdGlvbnMuIEl0IHdhcyBhdHRhY2hlZCB0byBhIHNxdWFkIGFuZCBpbiBzbyBkb2luZyBpbmNyZWFzZWQgdGhlIHNxdWFkcyBvdXRwdXQgaW4gdGhlIHNob290aW5nIHBoYXNlIGFzIGRlc2NyaWJlZCBpbiB0aGUgcnVsZSAodGhlIHJ1bGUgaGFzbiBjaGFuZ2VkKS4gU28gaXQgbWVhbnQgdG8gaGF2ZSBhIHVuaXQgYXQgbGVhc3QgYmVuZWZpdCBmcm9tIGl0IGxpa2UgaW4gdGhlIHBhc3QuLiAKRWRnYXIgc2FpZCBoaXMgY29uZ3JlZ2F0aW9uIGFuZCB0aG9zZSB0aGV5IHNlcnZlIGluIFNvdXRoIENvbHVtYnVzIGFyZSB3b3JyaWVkIHRoYXQgYSBzaHV0ZG93biBsYXN0aW5nIGZvciBhbm90aGVyIHR3byB3ZWVrcyBjb3VsZCBoYXZlIGxhcmdlciByYW1pZmljYXRpb25zIGNvbWUgRmVicnVhcnksIG9yIGxhdGVyIGluIE1hcmNoLiBGb3IgZXhhbXBsZSwgRnJhbmtsaW4gQ291bnR5IFNOQVAgcmVjaXBpZW50cyAoYWxzbyBrbm93biBhcyBmb29kIHN0YW1wcykgZ290IHRoZWlyIG5leHQgZm91ciB3ZWVrcyBvZiBiZW5lZml0cyBXZWRuZXNkYXksIGJ1dCB3aWxsIG5lZWQgdG8gbWFrZSB0aGVtIHN0cmV0Y2ggZm9yIGFsbCBvZiBGZWJydWFyeSB1bmxlc3MgYSBkcmFzdGljIG1lYXN1cmUgY29tYmluZWQgd2l0aCBhIHJlIG9wZW5lZCBnb3Zlcm5tZW50IGNhbiBjaGFuZ2UgaXQuCkFmdGVyIHRoZSBqdW1wIGlzIG15IGF0dGVtcHQsIHdoaWNoIGlzIGxpa2VseSB0byByZW1haW4gaW50ZXJlc3RpbmcgZm9yIGFuIGhvdXIgb3IgdHdvLCB1bnRpbCBldmVudHMgdXBlbmQgZXZlcnl0aGluZyBhZ2Fpbi4gCkRvIHlvdSBoYXZlIHRoZW0gYXZhaWxhYmxlIHRvIGhhdmUgdGhhdCBzZW50IHRvIHRoZW0/T2N0IDIwMTYgSGVsbG8gRWxsZW4sIEdpZnQgY2VydGlmaWNhdGVzIG1heSBiZSBwdXJjaGFzZWQgYXQgdGhlIGNhZ2Ugb3IgaW4gdGhlIGdpZnQgc2hvcCwgaG93ZXZlciBhIHZhbGlkIHBob3RvIElEIG11c3QgYmUgcHJlc2VudGVkIHVwb24gcHVyY2hhc2UuIFdlIGN1cnJlbnRseSBkbyBub3QgaGF2ZSB0aGUgb3B0aW9uIHRvIHB1cmNoYXNlIGdpZnQgY2VydGlmaWNhdGVzIG90aGVyd2lzZSBidXQgSSB3aWxsIGJlIHN1cmUgdG8gcGFzcyBhbG9uZyB5b3VyIHJlcXVlc3QgdG8gbWFuYWdlbWVudCBhbmQgc3RhZmYuIApJIG5vdCBzdXJlIGhvdyB0aGUgc3VjY2VzcyBvZiBhIHNpbmdsZSBnYW1lLCByZWxlYXNlZCBieSBvbmUgb2YgdGhlIG1vc3Qgc3VjY2Vzc2Z1bCBQQyBkZXZzIG9mIHRoZSB0aW1lLCBzb21laG93IG1lYW5zIHRoYXQgQVJQR3MgYXJlIGEgYmlnIGdlbnJlLiBXZSBoYXZlIGFubnVhbCBDb0QgZ2FtZXMsIGRlc3BpdGUgImRlY2xpbmluZyBzYWxlcyIgdGhleSBzdGlsbCBwdXNoaW5nIG91dCB0aG9zZSBnYW1lcyBldmVyeSAxMiAxOCBtb250aHMsIGFuZCBpbmNsdWRpbmcgRExDLCBldGMuIApBTUQgZHJvcHBlZCB0aGUgYmFsbCBpbiBmbGFnc2hpcCBjb21wZXRpdGlvbiBhbmQgbGV0IE52aWRpYSBUaXRhbi9UaSBiZWNvbWUgc3lub255bW91cyB3aXRoIHRoZSBiZXN0IGdhbWluZyBwZXJmb3JtYW5jZS4gV2hpbGUgbW9zdCBwZW9wbGUgYXJlbiBnb2luZyB0byBidXkgdGhvc2UgY2FyZHMsIGl0IHN0aWxsIGxlYWRzIHRvIE52aWRpYSBiZWluZyBhc3NvY2lhdGVkIHdpdGggZ3JlYXQgcGVyZm9ybWFuY2UuCkl0IHdhcyB2ZXJ5IG9kZCB0byBzZWUuIFNwZWNpYWxseSB3aGVuIHRoZXkgd291bGQgc2hvdyB1cCBqdXN0IHRvIHRha2UgdGhlIHBpY3R1cmVzIGFuZCB0aGVuIGxlYXZlIG9uY2UgdGhleSBoYWQgZW5vdWdoLiAKSG93ZXZlciwgdGhlIGlkZWEgdGhhdCB3ZSBjZW5zb3Igb3IgcmVtb3ZlIGFsbCBwb3N0cyB0aGF0IG1ha2UgdGhlIGdhbWUgbG9vayBiYWQgaXMgbm90IHRydWUgYW5kIHdlIHdpbGwgZGVmZW5kIG91cnNlbHZlcyBoZXJlLiBXZSBiZWxpZXZlIHRoYXQganVzdCBhcyBtdWNoIGdvb2QgY29udGVudCB0aGF0IGlzIHByb2R1Y2VkIG9uIHRoZSBzdWJyZWRkaXQsIHRoZXJlIGRvZXMgbmVlZCB0byBiZSB0aGUgcG9zdHMgdGhhdCBlbmxpZ2h0ZW4gdGhlIGlzc3VlcyBpbiB0aGUgZ2FtZS4gSXRzIGFuIGltcG9ydGFudCBmYWN0b3IgdGhhdCB0aGUgY29tbXVuaXR5IGlzIGF3YXJlIG9mIHRoZXNlIHBvc3RzIHRoYXQgZW5saWdodGVuIHRoZXNlIGlzc3VlcyBhcyB0aGlzIGhlbHBzIGltcHJvdmUgdGhlIGdhbWUgaW4gdGhlIGxvbmcgcnVuLiAKSWYgeW91IGNvbnNpZGVyIGFsbCBvZiB0aGUgZ2FtZXMgdGhhdCBhcmUgb2ZmZXJlZCBhdCBtYWpvciBjYXNpbm9zIGFuZCB0aG9zZSBvZmZlcmVkIGluIGRpZ2l0YWwgZm9ybSBvbiB0aGUgaW50ZXJuZXQsIHlvdSB3aWxsIGxpa2VseSBmaW5kIHRoYXQgdGhlcmUgYXJlIG1hbnkgZGlmZmVyZW50IG9uZXMuIFRoaXMgaXMganVzdCBhIHNtYWxsIHNhbXBsZSBvZiB0aGUgYW1vdW50IG9mIHBva2VyIG1hY2hpbmUgZ2FtZXMgdGhhdCBhcmUgYXZhaWxhYmxlIHRvZGF5LiAKU2F1dCB1bnRpbCB0aGUgbGVha3MgYXJlIGZ1bGx5IHdpbHRlZCwgNSB0byA3IG1pbnV0ZXMuIFN0aXIgaW4gdGhlIGJlZXIsIDEvMiB0ZWFzcG9vbiBvZiB0aGUgc2FsdCBhbmQgdGhlIGNhcGVycywgYW5kIHRoZW4gbGV0IHRoZSBtaXh0dXJlIGNvbWUgdG8gYSBib2lsLiBMb3dlciB0aGUgaGVhdCB0byBzaW1tZXIgZm9yIDEwIG1pbnV0ZXMgdG8gaGVscCBkZXZlbG9wIHRoZSBmbGF2b3VyLi4gCklmIEkgdHJ1c3QgbXkgc2FtcGxpbmcgcHJvZ3JhbSBpdCBzYXlzIGEgZmx1c2ggb2NjdXJzIDMuMDIlIG9mIHRoZSB0aW1lLiAKQXMgY2hpbGRyZW4sIG1vc3Qgb2Ygb3VyIGJvbmVzIHByb2R1Y2UgYmxvb2QuIEFzIHdlIGFnZSB0aGlzIGdyYWR1YWxseSBkaW1pbmlzaGVzIHRvIGp1c3QgdGhlIGJvbmVzIG9mIHRoZSBzcGluZSAodmVydGVicmFlKSwgYnJlYXN0Ym9uZSAoc3Rlcm51bSksIHJpYnMsIHBlbHZpcyBhbmQgc21hbGwgcGFydHMgb2YgdGhlIHVwcGVyIGFybSBhbmQgbGVnLiBCb25lIG1hcnJvdyB0aGF0IGFjdGl2ZWx5IHByb2R1Y2VzIGJsb29kIGNlbGxzIGlzIGNhbGxlZCByZWQgbWFycm93LCBhbmQgYm9uZSBtYXJyb3cgdGhhdCBubyBsb25nZXIgcHJvZHVjZXMgYmxvb2QgY2VsbHMgaXMgY2FsbGVkIHllbGxvdyBtYXJyb3cuIApZb3UgZG9uJ3QgeW91IGNhbid0IHlvdSBzaG91bGRuJ3QgQW5kIHRoYXQgc2FpZC4gSW4gdGhlIG9sZCBkYXlzLCB0aGVyZSB3ZXJlIG1hbnkgd2F5cyBvZiBjaGVhdGluZyBhdCBjYXJkcywgaW5jbHVkaW5nIGZpeGVkIGRlY2tzLCBjb2xkIGRlY2tzLCBzaGluZXJzLCBzdHJpcHBlcnMsIG1lY2hhbmljYWwgZGV2aWNlcyBhbmQgYSB2YXJpZXR5IG9mIGRlYWxpbmcgYW5kIHNsaWdodCBvZiBoYW5kIHRyaWNrcy4gVGhlIHNpbXBsZXN0IHdheSBpcyBmb3IgeW91ciBwYXJ0bmVyIHRvIHNpbXBseSBhbmQgY292ZXJ0bHkgaW5mb3JtIHlvdSBvZiB0aGUgY29udGVudHMgb2YgdGhlaXIgaGFuZCwgYW5kIHRoaXMgc21hbGwgYW1vdW50IG9mIGluZm9ybWF0aW9uIGNhbiBzd2F5IHRoZSBvZGRzIGVub3VnaCB0byBtYWtlIGEgZGlmZmVyZW5jZS4gClRoZXJlIGEgY29tbW9uIHRocmVhZCBpbiB0aGVzZSBkZXZlbG9wbWVudHMgdGhhdCBjYW4gYmUga25pdHRlZCB0b2dldGhlci4KSXMgaXQgdXNlZnVsPyBZZXMsIGl0IGFic29sdXRlbHkgaXMuIApJdCBkZWZpbml0ZWx5IGlzIGFuIGludGVyZXN0aW5nIHN1YmplY3QgdG8gZGl2ZSBpbnRvIHRob3VnaCBvbiB0aGUgbW9yYWxpdHkgb2YgbXl0aG9sb2dpY2FsIGdvZHMuLiAKSG93IHRvIFBsYXkgVGhyZWUgQ2FyZCBQb2tlcgpJbiAyMDE4IHRoZSBldmVudCBhdHRyYWN0ZWQgb3ZlciAxMiwwMDAgcGFydGljaXBhbnRzLi4gCldoYXQgT25UaGluZ3MgdG8gZG9Gb29kIGFuZCBEcmlua1RoZWF0cmUgYW5kIEFydHNUViBHdWlkZUlUIGlzIG9ubHkgZmFpbnQsIGJ1dCB0aGVyZSBpcyBzdGlsbCBhIGhlYXJ0YmVhdCBvbiB0aGUgbW9uaXRvciBmb3IgV2F1Y2hvcGUgUlNMJ3MgTWlkIE5vcnRoIENvYXN0IFByZW1pZXIgQ3JpY2tldCBMZWFndWUgY2FtcGFpZ24uIFJlc3VsdHMgb3ZlciB0aGUgbGFzdCB0d28gd2Vla3MgaGF2ZSBnb25lIGluIHRoZWlyIGZhdm91ciBhbmQgYSB3aW4gdGhpcyBTYXR1cmRheSBvdmVyIFRhcmVlIFdlc3Qgd2lsbCBnaXZlIHRoZW0gdGhlIGJlc3QgY2hhbmNlIG9mIHByb2dyZXNzaW5nIHRvIHRoZSBzZW1pIGZpbmFscy4gCk5ldyBydWxlcyBhdCBvZGRzIHdpdGggc29tZSBpbiBnYW1ibGluZyBpbmR1c3RyeQpBcnRpY2xlcyBieSBKYWNrIFJlaWRlciBSZXN1bHRzIDEKV2hpbGUgc29tZSBzdGF0ZXMsIGxpa2UgVGV4YXMsIGRvIG5vdCByZXF1aXJlIHRoYXQgeW91IGhhdmUgbGlhYmlsaXR5IGluc3VyYW5jZSwgaXQgaXMgc29tZXRoaW5nIHlvdSBzaG91bGQgc3Ryb25nbHkgY29uc2lkZXIsIHNpbmNlIGFueW9uZSB3aG8gYmVsaWV2ZXMgeW91ciB3b3JrIGhhcyBjYXVzZWQgdGhlbSBwaHlzaWNhbCBkaXN0cmVzcyBtYXkgYmUgaW5jbGluZWQgdG8gc3VlIHlvdSwgd2hldGhlciB0aGVpciBjYXNlIGlzIHdpdGggbWVyaXQgb3Igbm90LiBFeHBlY3QgdG8gcGF5IGJldHdlZW4gJDIwMCB0byAkMzAwIGFubnVhbGx5IGZvciBtYWxwcmFjdGljZSBhbmQgZ2VuZXJhbCBsaWFiaWxpdHkgY292ZXJhZ2UuLiAKQmVnaW4gYSB3YWxraW5nIHJvdXRpbmUgdmVyeSBtb2Rlc3RseSBhbmQsIG92ZXIgd2Vla3MgYW5kIG1vbnRocywgc2xvd2x5IGluY3JlYXNlIGl0cyBpbnRlbnNpdHkuIFlvdSBtaWdodCBzdGFydCBvdXQgYnkgd2Fsa2luZyBmb3IgMjAgbWludXRlcyBhIGRheSwgdGhyZWUgZGF5cyBhIHdlZWssIGFuZCBncmFkdWFsbHkgYWRkIHRvIGJvdGggdGhlIGxlbmd0aCBhbmQgZnJlcXVlbmN5IG9mIHlvdXIgd2Fsa3Mgc28gdGhhdCwgYWZ0ZXIgdGhlIGZpcnN0IHRocmVlIG9yIGZvdXIgbW9udGhzLCB5b3UgYXJlIHdhbGtpbmcgZm9yIDQ1IG1pbnV0ZXMgYSBkYXksIGZpdmUgZGF5cyBhIHdlZWsuIFRoZSBsYXR0ZXIgc2NoZWR1bGUgICBpZiB5b3Ugd2FsayBhdCBhIHBhY2Ugb2YgYXQgbGVhc3QgdGhyZWUgbWlsZXMgYW4gaG91ciAgIHNob3VsZCBwcm9kdWNlIGFsbCB0aGUgYWVyb2JpYyBiZW5lZml0cyBtZW50aW9uZWQgaW4gdGhlIGZpcnN0IHBhcnQgb2YgdGhpcyBwYWdlLiBCdXQgZXZlbiBpZiB5b3UgY2FuIG5ldmVyIHdhbGsgdGhpcyBmYXIgb3IgdGhpcyBmYXN0LCB5b3Ugd2lsbCBzdGlsbCBpbXByb3ZlIHRoZSBzdHJlbmd0aCBvZiBmb290IG11c2NsZXMgYW5kIGJvbmVzIChhbmQgeW91ciBvdmVyYWxsIGhlYWx0aCkgYnkgd2Fsa2luZy4KVGhlcmUgd2VyZSAyMDAzICgzMC4xJSkgZGVhdGhzIGR1cmluZyBhIG1lZGlhbiBmb2xsb3cgdXAgb2YgNiB5ZWFycy4gQ29tcGFyZWQgd2l0aCBwYXJ0aWNpcGFudHMgd2hvIHNhdApTZXR0bGVtZW50IGlzIGR1ZSB0byB0YWtlIHBsYWNlIGF0IHRoZSBlbmQgb2YgbmV4dCBtb250aCwgYW5kIHRoZSBpbnZlc3RtZW50IGdyb3VwIHNhaWQgdGhleSB3b3VsZCBzdGFydCB3b3JrIHN0cmFpZ2h0IGF3YXkgdG8gdHJhbnNmb3JtIHRoZSBob3RlbC4KU3RpbGwgdG9vIGNsb3NlIHRvIGhvbWU/IFRvbyBwYWluZnVsIHRvIGJlIGp1c3QgZ29vZCBjbGVhbiBmdW4/IFdlbGwsIHRoZXJlIGFsd2F5cyB0aGUgZmFtaWx5IHBldC4KQ29tcHV0ZXIgc2tpbGxzIGFyZSB2YWx1YWJsZSBhbmQgY2FuIG9wZW4gdXAgYSBsb3Qgb2Ygb3B0aW9ucy4gSSBoYXZlIG1vdmVkIGZyb20gZGF0YSBhbmFseXN0IHRvIHdlYiBjb250ZW50IG1hbmFnZW1lbnQgdG8gdGVzdCBlbmdpbmVlci4gVGVjaG5vbG9neSBnZW5lcmFsbHkgaW50ZXJlc3RzIG1lLCBidXQgSSBkb24gaGF2ZSBhbnkgcGFydGljdWxhciBmYXZvdXJpdGUgbGFuZ3VhZ2UgYW5kIHVzdWFsbHkgcGljayBqb2JzIGJhc2VkIG9uIHRoZSBpbmR1c3RyeS9wcm9kdWN0IHJhdGhlciB0aGFuIHdoYXQgSSBhY3R1YWxseSBiZSBkb2luZy4gTW9yZSBmb2N1cyB3b3VsZCBwcm9iYWJseSByZXN1bHQgaW4gbW9yZSBtb25leSBpbiBteSBiYW5rLCBidXQgSSBmZWVsIEkgaGF2ZSBhIGxvdCBvZiBvcHRpb25zIGFuZCBlbmpveSB3aGF0IEkgZG8uClNvIHdoeSdkIGhlIHF1aXQ/CklzIGFsc28gd2VpcmQgYmVjYXVzZSB0aGUgZ3V5cyB5b3VyIGFnZSBhcmVuIHJlYWxseS4gRnVsbCBncm93biwgeWV0LCBmb3IgdGhlIG1vc3QgcGFydC4gCkxpa2Ugc2F5aW5nICJJIGRvbiByZWNhbGwiIG9uIHN0dWZmIHRoYXQgaGFwcGVuZWQgYSBmZXcgbW9udGhzIGFnbyBhbmQgd2VyZSB2ZXJ5IHByb21pbmVudCBhbmQgaW1wb3J0YW50IHRvIGEgbWFqb3IgZXZlbnQgdGhhdCBjaGFuZ2VkIHRoZSB3b3JsZC4gCldoYXQgQXJlIENhcmQgR2FtZXM/ClRoaXMga2lkIHdpbmRvdyBzaG93cyB1cCBicm9rZW4gdG9tb3Jyb3csIG9yIGlmIGhlIGdldHMganVtcGVkIG9uIHRoZSBzdHJlZXQsIGhlIGdvaW5nIHRvIGtub3cgaXQgd2FzIHlvdS4gTGV0IHRoaXMgc2ltbWVyIGZvciBzb21lIHRpbWUsIG1ha2UgaGltIHRoaW5rIHlvdSBmb3Jnb3QsIGFuZCBzdGFydCBwbGFubmluZy4gCldoZW4gd2UgZG8gaGF2ZSBzZXggaXQgcGhlbm9tZW5hbCBhbmQgSSB1c3VhbGx5IHNhdGlzZmllZCBmb3IgYSBjb3VwbGUgd2Vla3MuIFdlIGp1c3QgZG9uIGhhdmUgc2V4IGFzIG9mdGVuIGFzIGhlIGxpa2VzIGJ1dCBzb21ldGltZXMgSSBmZWVsIGlmIHdlIHdlbnQgb24gZGF0ZSBuaWdodHMgb3IgdG8gYSBnb2QgZGFtbiBtb3ZpZSAoSSBkb24gcmVtZW1iZXIgdGhlIGxhc3QgdGltZSB3ZSB3ZW50IHRvIGEgbW92aWUgYWxvbmUpLCBJIHdvdWxkIGZlZWwgbW9yZSByb21hbnRpYyBhbmQgd2FudCB0byBvcGVuIG15IGxlZ3MgbW9yZSBvZnRlbiBpbnN0ZWFkIG9mIHNvbWVvbmUgbGlrZSBPUC4gSWYgd2hhdCB0aGV5IHdhbnQgaXMgaW50aW1hY3kgd2l0aCB0aGVpciB3aWZlIHRoZW4gdGhleSBuZWVkIHRvIHNob3cgaGVyLCBub3QgYW4gZXNjb3J0Li4gCkdpdmVuIHRoYXQgU2hhd24gd2FzIDUwIHdoZW4gdGhleSBtYXJyaWVkIGluIDE5OTcgYW5kIEtpbmcgd2FzIDc2LCB0aGV5IHRvbyBjb3VsZCBoYXZlIHJlbnRlZCBhIHBvb3Igd29tYW4gd29tYiBpbiBvcmRlciB0byBoYXZlIGNoaWxkcmVuLiBTaW5jZSAxOTkxLCB3aGVuIHRoZSBjb3VudHJ5IG5ldyBmcmVlIG1hcmtldCBwb2xpY2llcyB0b29rIGVmZmVjdCwgcHJpdmF0ZSBtb25leSBoYXMgZmxvd2VkIGluLCBmdWVsaW5nIGNvbnN0cnVjdGlvbiBvZiB3b3JsZCBjbGFzcyBob3NwaXRhbHMgdGhhdCBjYXRlciB0byBmb3JlaWduZXJzLiAKVGhlIHByb2JsZW0gd2l0aCBza2lybWlzaGVycyBhbmQgY2F2YWxyeSBpc24gdGhlaXIgdXRpbGl0eSwgdGhlaXIgc3BlZWQgdG8gb3V0ZmxhbmsvbWFuZXV2ZXIgeW91ciBlbmVteSBjb3VsZCBwcm9iYWJseSBiZSBBSSBicmVha2luZy4gVGhlIHByb2JsZW0gaXMgdGhhdCB0aGVpciBpcyBzbyBtdWNoIGdvaW5nIG9uIGluIG1vc3QgbGV2ZWxzIHRoYXQgeW91IHJlYWxseSBjYW4ga2VlcCB0cmFjayBhbmQga2VlcCB0aGVtIHNhZmUuIEl0cyBtdWNoIGVhc2llciB0byBqdXN0IHVzZSBpbmZhbnRyeS4gSSB3YXNuIHZlcnkgZ29vZCBhdCBnZXR0aW5nIHRvIGhpcyBjbGFzcyBvbiB0aW1lLiBOZXltYW4gaGFkIGEgaGFiaXQgb2YgcHV0dGluZyBob21ld29yayBhc3NpZ25tZW50cyB1cCBvbiB0aGUgYmxhY2tib2FyZCBhdCB0aGUgc3RhcnQgb2YgY2xhc3MuIFdoZW4gSSBjYW1lIGluIGxhdGUsIEkgY29weSB0aGUgcHJvYmxlbSwgdGFrZSBpdCBob21lIGFuZCB3b3JrIG9uIGl0LgpNYWtpbmcgdGhlIExpc3RIb3cgV2UgUGlja2VkIHRoZSBMaXN0QSAgIEJUaGUgQWR2ZW50dXJlcyBvZiBBdWdpZSBNYXJjaEFsbCB0aGUgS2luZyBNZW5BbWVyaWNhbiBQYXN0b3JhbEFuIEFtZXJpY2FuIFRyYWdlZHlBbmltYWwgRmFybUFwcG9pbnRtZW50IGluIFNhbWFycmFBcmUgWW91IFRoZXJlIEdvZD8gSXQgTWUsIE1hcmdhcmV0VGhlIEFzc2lzdGFudEF0IFN3aW0gVHdvIEJpcmRzQXRvbmVtZW50QmVsb3ZlZFRoZSBCZXJsaW4gU3Rvcmllc1RoZSBCaWcgU2xlZXBUaGUgQmxpbmQgQXNzYXNzaW5CbG9vZCBNZXJpZGlhbkJyaWRlc2hlYWQgUmV2aXNpdGVkVGhlIEJyaWRnZSBvZiBTYW4gTHVpcyBSZXlDICAgRENhbGwgSXQgU2xlZXBDYXRjaCAyMlRoZSBDYXRjaGVyIGluIHRoZSBSeWVBIENsb2Nrd29yayBPcmFuZ2VUaGUgQ29uZmVzc2lvbnMgb2YgTmF0IFR1cm5lclRoZSBDb3JyZWN0aW9uc1RoZSBDcnlpbmcgb2YgTG90IDQ5QSBEYW5jZSB0byB0aGUgTXVzaWMgb2YgVGltZVRoZSBEYXkgb2YgdGhlIExvY3VzdERlYXRoIENvbWVzIGZvciB0aGUgQXJjaGJpc2hvcEEgRGVhdGggaW4gdGhlIEZhbWlseVRoZSBEZWF0aCBvZiB0aGUgSGVhcnREZWxpdmVyYW5jZURvZyBTb2xkaWVyc0YgICBHRmFsY29uZXJUaGUgRnJlbmNoIExpZXV0ZW5hbnQgV29tYW5UaGUgR29sZGVuIE5vdGVib29rR28gVGVsbCBpdCBvbiB0aGUgTW91bnRhaW5Hb25lIFdpdGggdGhlIFdpbmRUaGUgR3JhcGVzIG9mIFdyYXRoR3Jhdml0eSBSYWluYm93VGhlIEdyZWF0IEdhdHNieUggICBJQSBIYW5kZnVsIG9mIER1c3RUaGUgSGVhcnQgaXMgQSBMb25lbHkgSHVudGVyVGhlIEhlYXJ0IG9mIHRoZSBNYXR0ZXJIZXJ6b2dIb3VzZWtlZXBpbmdBIEhvdXNlIGZvciBNci4gCk1lbiwgdGhlbiwgY2xlYXJseSBoYXZlIHByb2JsZW1zIHRha2luZyBjYXJlIG9mIHRoZWlyIHBlbmlzZXMuIFNhZGx5LCBzb21lIHdvbWVuIGNhbiBiZSB0cnVzdGVkIHRvIHRha2UgY2FyZSBvZiB0aGVtIGVpdGhlci4gQW4gQXJnZW50aW5pYW4gd29tYW4sIGZvciBleGFtcGxlLCB1c2VkIGdhcmRlbiBzaGVhcnMgdG8gY3V0IG9mZiBhIHNsZWVwaW5nIG1hbiBwZW5pcy4gCkkgYWN0dWFsbHkgd2l0bmVzc2VkIHRoaXMgZmlyc3RoYW5kLiAKSXQgYWxzbyB0b29rIGFuIGFkZGl0aW9uYWwgMzAgZGF5cyBvZiBpbnRlbnNpdmUgdHJhaW5pbmcgZm9yIEpvc2VwaCB0byBzdGFuZCAobm8gcHVuIGludGVuZGVkKSBhIGNoYW5jZSBhZ2FpbnN0IHRoZSBwaWxsYXJtYW4uIEFsc28gU3RhbmRzIGFyZSBub3cgc28gb3AgdGhhdCBoZSB3b3VsZG4gc3RhbmQgYSBjaGFuY2UuIEhvdyBjb3VsZCBoZSBkZWFsIHdpdGggdGhlIGxpa2VzIG9mIFN0YXIgUGxhdGludW0sIHdoZW4gaGUgd291bGRuIGJlIGFibGUgdG8gc2VlIGhpbSwgb3IgSGVpcm9waGFudCBHcmVlbiwgaGVsbCBldmVuIFRoZSBIYW5kIHdvdWxkIGdldCBoaW0gYmVjYXVzZSBoZSB3b3VsZG4gc2VlIGl0IGNvbWluZy4gCkV2ZXJ5IGNvbXBhbnkgd2FudHMgdG8gZG8gdGhpcywgb2YgY291cnNlLCBidXQgbm9uZSBkb2VzIGl0IGFzIGVmZmVjdGl2ZWx5IGFzIFp5bmdhLiAKRG9uIHByZXNzdXJlIHlvdXJzZWxmIGJ5IGNvbXBhcmluZyB5b3VyIHNraWxscyB0byBvdGhlciBwbGF5ZXJzIFRoYXQgYSBmdXRpbGUgZXhlcmNpc2UuIApUaGlzIEZEQSBhcHByb3ZlZCBkZXZpY2UgaXMgaW5leHBlbnNpdmUsIG5vbiBpbnZhc2l2ZSwgYW5kIGNhbiBwcm92aWRlIHJlc3VsdHMgaW4gbWludXRlcy4gCllvdSBtdXN0IGhhdmUgc29tZXRoaW5nIHVuaXF1ZSBvZiB5b3VyIG93biwgc29tZXRoaW5nIHRoYXQgd2lsbCBkZXNjcmliZSB5b3Ugb24gdGhlIHBva2VyIHRhYmxlLiAKVGhlIGJhbmtpbmcgaW5kdXN0cnkgaXMgbG9iYnlpbmcgQ29uZ3Jlc3MgKGFuZCB0byBhIGxlc3NlciBleHRlbnQsIHRoZSBBbWVyaWNhbiBwdWJsaWMpIHRvIGNvbnZpbmNlIHVzIHRoYXQgdGhlIGN1cnJlbnQgc3lzdGVtIG9mIHN0dWRlbnQgbG9hbnMgaXMgd29ya2luZyBqdXN0IGZpbmUuIApMaWtlIEFsYXNrYSdzIHdhbHJ1cyBjb2luLCBvdGhlciB0aWUgYnJlYWtlcnMgYXJlIGNvbm5lY3RlZCB0byBsb2NhbCBoaXN0b3J5IGFuZCB0cmFkaXRpb24uIEEgdGllZCAxOTg2IENpdHkgQ291bmNpbCBlbGVjdGlvbiBpbiBXaWxsaWFtc2J1cmcsIFZpcmdpbmlhICAgdGhlIGVhcmx5IGNhcGl0YWwgb2YgdGhlIFZpcmdpbmlhIGNvbG9ueSBpbiB0aGUgMTcwMHMgICB3YXMgZGVjaWRlZCBieSBkcmF3aW5nIG5hbWVzIGZyb20gdGhlIHRyaSBjb3JuZXIgaGF0IHBvcHVsYXIgaW4gdGhhdCBjb2xvbmlhbCBwZXJpb2QuCkFzIG15IGV5ZXMgZ290IHVzZWQgdG8gdGhlIGRhcmssIEkgbm90aWNlZCB0aGUgdmVuZXRpYW4gYmxpbmRzIG9uIHRoZSB3aW5kb3dzLgpJIGtuZXcgc2hlIHdvdWxkbiBidXQgRFcgdGhvdWdodCBJIHdvdWxkIHJlZ3JldCBpdCBpZiBJIGRpZG4gdHJ5LiBTaGUgZGllZCBhbmQgaGVyIGZ1bmVyYWwgd2FzIG9uIERXIGJpcnRoZGF5LiBTaGUgYXBwcmVjaWF0ZWQgdGhlIGdpZnQuIApBcyB5b3UgZ2FpbiBleHBlcmllbmNlIGFuZCBsZWFybiB5b3VyIG9wcG9uZW50cycgcGxheWluZyBzdHlsZXMgYW5kIGhhbmQgc2VsZWN0aW9uLCB5b3UgY2FuIHBsYXkgYSBmZXcgbW9yZSBzdGFydGluZyBoYW5kcy4gSGFuZHMgd2l0aCBhbiBBLCAzLCBhbmQgdHdvIGhpZ2ggY2FyZHMgYXJlIG9mdGVuIHBsYXlhYmxlIGFzIHdlbGwgYXMgaGFuZHMgY29udGFpbmluZyBhbiBhY2Ugc3VpdGVkIHRvIG9uZSBvdGhlciBjYXJkIHRoYXQgb2ZmZXIgZmx1c2ggYW5kIHN0cmFpZ2h0IHBvc3NpYmlsaXRpZXMgYW5kIHNvbWUgbG93IHBvdGVudGlhbCwgc3VjaCBhcyBBIDQgNiA3LkJlZ2lubmluZyBPbWFoYS84IHBsYXllcnMgb2Z0ZW4gb3ZlcnJhdGUgcGFpcnMsIGVzcGVjaWFsbHkgcG9ja2V0IGFjZXMuIFVubGlrZSBIb2xkJ2VtLCBhIHBhaXIgd2lsbCBhbG1vc3QgbmV2ZXIgd2luIGEgcG90LiAKVGhlIGJhbGwgZ290IHBhc3NlZCB0byBLaW0gdG8gY29tZSB1cCB3aXRoIGJldHRlciBkZW51a2Ugb2ZmZXJpbmdzLCBzbyBJIGNvbnNpZGVyIHRoaXMgbm8gZGVhbCBzb21ld2hhdCBvZiBhIHN1Y2Nlc3MgICBmb3IgQW1lcmljYW4gaW50ZXJlc3RzLiBJdCBhIHNoYW1lIHRob3VnaCB0aGF0IFNvdXRoIEtvcmVhIGlzIGxlZnQgd2l0aCBub3QgbXVjaCBvcHRpb25zIGF0bS4gCldoZW4geW91IGFyZSBkb25lIHdpdGggeW91ciBwb2tlciBwdXJjaGFzZSwgeW91IGNhbiBrZWVwIHNhZmUgYWJvdXQgeW91ciBwbGF5aW5nIGNhcmRzLiAKIk11bWJhaSBsaW5nbyBpcyBhIGJpdCBkaWZmZXJlbnQuIApXZSdyZSB2aWN0aW1zIG9mIHRoZSBzdWNjZXNzIG9mIGdyZWVkeSBwZW9wbGUgYW5kIGxlYWRlcnMgdGhyb3VnaG91dCBodW1hbiBoaXN0b3J5Li4gCkkgaGF2ZSBhIHF1ZXN0aW9uIGZvciB5b3U6WWVzLCBUaGUgTG9yZCBTYXZpb3VyIGZvciB0aGlzIHdob2xlIHVuaXZlcnNlICIgWUVTSFVBIEhBTUFTSElBICBMT1JEIEpFU1VTIENIUklTVCIgd2lsbCBjb21lIHRvIHRha2UgYXdheSBIaXMgQnJpZGUgb3Igb2JlZGllbnQgY2hpbGRyZW4gYXdheSBnaXZlIHRoZW0gYSBwZXJtaW5hbnQgcmVzY3VlLiBUaGlzIGxpdHRsZSB0YXNrIHRvb2sgbWUgc28gbXVjaCB0aW1lLCBiZWNhdXNlIEkgd2FzIG9ic3RydWN0IGJ5IGVuZW15IFNhdGFuIGluIG1hbnkgZm9ybXMuIApUaGV5IGFyZSBhbHNvIHVzdWFsbHkgb24gdGhlaXIgcGhvbmVzIGFuZCBjb21wbGV0ZWx5IG9ibGl2aW91cyB0byB0aGUgbnVtYmVyIG9mIHBlb3BsZSBhcm91bmQgdGhlbSBhbmQgYXZhaWxhYmlsaXR5IG9mIHNlYXRzLiBGb3IgdGhpcyByZWFzb24gSSB1c2VkIHRvIHB1dCBteSBiYWcgb24gbXkgbGFwIGF0IG91dCBvZiBoYWJpdCAoaW5zdGVhZCBvZiBzZWF0IG5leHQgdG8gbWUpIGJlY2F1c2UgSSBrbmV3IG9uY2UgSSBzdGFydGVkIGxvb2tpbmcgYXQgbXkgcGhvbmUsIG15IG9ic2VydmF0aW9uYWwgc2tpbGxzIHdvdWxkIGNlYXNlIHRvIGV4aXN0LgpMaW5kbmVyIGhhdCBlcnN0ZW5zIG5pY2h0IGRpZSBBbm5leGlvbiBkZXIgS3JpbSB2ZXJ0ZWlkaWd0LCBzb25kZXJuIGxlZGlnbGljaCBkaWUgVGF0c2FjaGUgYW5lcmthbm50LCBkYXNzIGVzIGRlcnplaXQgbmljaHQgbWdsaWNoIGlzdCBkaWVzZW4gWnVzdGFuZCB6dSBuZGVybiB1bmQgZXMga29udHJhcHJvZHVrdGl2IHp1ciBMc3VuZyBkZXIgS3Jpc2UgaW4gZGVyIFVrcmFpbmUgaXN0LCB3ZWl0ZXJlIFZlcmhhbmRsdW5nZW4gbWl0IFJ1c3NsYW5kIHZvbSBTdGF0dXMgZGVyIEtyaW0gYWJobmdpZyB6dSBtYWNoZW4gKG1pdCBkZW0gWnVzYXR6LCBkYXNzLCBzb2xsdGUgUnVzc2xhbmQgbmljaHQgb2Ygd2VzdGxpY2ggTHN1bmdzdm9yc2NobGdlIGVpbmdlaGVuLCBkaWUgU2Fua3Rpb25lbiBlcmhodCB3ZXJkZW4gc29sbHRlbikuIFp3ZWl0ZW5zIGhhdCBlciBzZWxic3QgZGFmciBzZWhyIHZpZWwgS3JpdGlrIGF1cyBkZW4gZWlnZW5lbiBSZWloZW4gYmVrb21tZW4uLiAKNTAgKDQpLCBwcC4gCiJXaGljaCB0cmVlIHdvdWxkIHlvdSBsaWtlIHRvIGJlPyIK|<---