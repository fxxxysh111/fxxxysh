<!DOCTYPE html>
<html lang="en-US" prefix="og: http://ogp.me/ns#">
 <head>
  <meta charset="utf-8"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="width=device-width, initial-scale=1" name="viewport"/>
  <title>
   [area1][mkey1][keyword1][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="en_US" property="og:locale">
   <meta content="website" property="og:type">
    <meta content="Home - Boss Audio Systems" property="og:title">
     <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
     <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
     <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:site_name"/>
     <meta content="summary" name="twitter:card"/>
     <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:description"/>
     <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:title"/>
     <noscript>
     </noscript>
     <noscript>
     </noscript>
     <noscript>
     </noscript>
    </meta>
   </meta>
  </meta>
 </head>
 <body class="home page-template page-template-template-home-jun2016 page-template-template-home-jun2016-php page page-id-134747 et_divi_builder woocommerce-no-js et_bloom xuan-nguyen boss-audio post-type-page post-home-jun2016-2 et-pb-theme-eboss et-db et_minified_js et_minified_css" data-rsssl="1">
  <div id="site-container">
   <header id="site_header">
    <div class="head-logo">
     <div class="container">
      <div class="row">
       <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4">
        [link]
        
       </div>
       <div class="col-xs-8 col-sm-8 col-md-8 col-lg-8 toprightcart">
        <div class="top-icon top-icon--contact">
         <a class="top-icon__link" href="/support/" title="Contact">
         </a>
        </div>
        <div class="top-icon top-icon--account">
         [link]
         
        </div>
        <div class="top-icon top-icon--cart">
         [link]
         
         <div class="shopatron_quick_cart shopatron_content">
         </div>
        </div>
        <div class="top-icon top-icon--search">
         <a class="top-icon__link" href=";" id="js-button-search" title="PRODUCT FINDER">
         </a>
        </div>
       </div>
      </div>
     </div>
    </div>
    <div class="nav-main">
     <div class="container">
      <div class="row" style="position: relative;">
       <div class="col-xs-12 col-md-11">
        <nav id="nav-main" role="navigation">
         <div class="hidden-md hidden-lg">
          <div id="xs-menu">
           <a href=")">
            <i class="fa fa-bars">
            </i>
            <span>
             Menu[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[link]<li>[search]</li>[ahref]<li>[link]</li><li>[search]</li><li>[search]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>[link]<li>[link]</li>[link]<li>[ahref]</li><li>[search]</li>[link]
            </span>
           </a>
          </div>
         </div>
         <div class="hidden-xs hidden-sm">
          <div class="menu-main-menu-container">
           <ul class="main-nav clearfix nav navbar-nav" id="menu-main-menu">
            <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-134483" id="menu-item-134483">
             [link]
             
             <ul class="sub-menu">
              <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-540918" id="menu-item-540918">
               [ahref]
               
              </li>
              <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-540924" id="menu-item-540924">
               <a class="menu-image-title-after" href="/auto-products/mobile-video/">
                <span class="menu-image-title">
                 Mobile Video<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[link]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
                </span>
               </a>
              </li>
              <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-540921" id="menu-item-540921">
               <a class="menu-image-title-after" href="/auto-products/amplifiers/">
                <span class="menu-image-title">
                 Amplifiers
                </span>
               </a>
              </li>
              <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-540919" id="menu-item-540919">
               [ahref]
               
              </li>
              <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-540920" id="menu-item-540920">
               [ahref]
               
              </li>
              <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-540923" id="menu-item-540923">
               <h1>
                <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
               </h1>
               <a class="menu-image-title-after" href="/auto-products/speakers/">
                <span class="menu-image-title">
                 Speakers
                </span>
               </a>
              </li>
              <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-540926" id="menu-item-540926">
               [link]
               
              </li>
              <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-540922" id="menu-item-540922">
               <a class="menu-image-title-after" href="/auto-products/signal-processors/">
                <span class="menu-image-title">
                 Signal Processors[search]<li>[ahref]</li>[search]<li>[link]</li>[search]<li>[link]</li>[ahref]
                </span>
               </a>
              </li>
              <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-540925" id="menu-item-540925">
               <a class="menu-image-title-after" href="/auto-products/capacitors/">
                <span class="menu-image-title">
                 Capacitors
                </span>
               </a>
              </li>
              <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-540917" id="menu-item-540917">
               <a class="menu-image-title-after" href="/auto-products/accessories/">
                <span class="menu-image-title">
                 Accessories<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]<li>[link]</li>[search]<li>[ahref]</li><li>[link]</li><li>[ahref]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[ahref]</li>
                </span>
               </a>
              </li>
             </ul>
            </li>
            <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-134780" id="menu-item-134780">
             [link]
             
             <ul class="sub-menu">
              <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-540938" id="menu-item-540938">
               <a class="menu-image-title-after" href="/elite-products/in-dash/">
                <span class="menu-image-title">
                 In Dash[link]<li>[ahref]</li><li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search][link][link][ahref][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][link]
                </span>
               </a>
              </li>
              <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-540941" id="menu-item-540941">
               <a class="menu-image-title-after" href="/elite-products/amplifiers/">
                <span class="menu-image-title">
                 Amplifiers[ahref]<li>[link]</li><li>[ahref]</li><li>[link]</li>[link][link][ahref]<li>[ahref]</li>
                </span>
               </a>
              </li>
              <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-540940" id="menu-item-540940">
               [link]
               
              </li>
              <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-540939" id="menu-item-540939">
               [ahref]
               
              </li>
             </ul>
            </li>
            <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-134779" id="menu-item-134779">
             [ahref]
             
             <ul class="sub-menu">
              <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-540934" id="menu-item-540934">
               [ahref]
               
              </li>
              <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-540933" id="menu-item-540933">
               [link]
               
              </li>
              <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-540928" id="menu-item-540928">
               [link]
               
              </li>
              <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-540937" id="menu-item-540937">
               [link]
               
              </li>
              <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-540935" id="menu-item-540935">
               [link]
               
              </li>
              <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-540936" id="menu-item-540936">
               [ahref]
               
              </li>
              <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-540927" id="menu-item-540927">
               [ahref]
               
              </li>
              <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-540929" id="menu-item-540929">
               [link]
               
              </li>
              <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-540930" id="menu-item-540930">
               <a class="menu-image-title-after" href="/marine-products/power-pods/">
                <span class="menu-image-title">
                 Power Pods
                </span>
               </a>
              </li>
              <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-540931" id="menu-item-540931">
               <a class="menu-image-title-after" href="/marine-products/sound-bars/">
                <span class="menu-image-title">
                 Sound Bars
                </span>
               </a>
              </li>
             </ul>
            </li>
            <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-134781" id="menu-item-134781">
             [ahref]
             
             <ul class="sub-menu">
              <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-540944" id="menu-item-540944">
               <h2>
                [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
               </h2>
               [link]
               
              </li>
              <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-540948" id="menu-item-540948">
               [ahref]
               
              </li>
              <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-540946" id="menu-item-540946">
               [ahref]
               
              </li>
              <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-540945" id="menu-item-540945">
               [ahref]
               
              </li>
              <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-540943" id="menu-item-540943">
               [link]
               
              </li>
              <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-540949" id="menu-item-540949">
               [link]
               
              </li>
              <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-540947" id="menu-item-540947">
               <a class="menu-image-title-after" href="/powersport-products/amplifiers/">
                <span class="menu-image-title">
                 Amplifiers<li>[ahref]</li><li>[search]</li><li>[search]</li>[ahref][search][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref]<li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>[search][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
                </span>
               </a>
              </li>
              <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-540951" id="menu-item-540951">
               [link]
               
              </li>
              <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-540950" id="menu-item-540950">
               [ahref]
               
              </li>
              <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-540942" id="menu-item-540942">
               [link]
               
              </li>
             </ul>
            </li>
           </ul>
          </div>
         </div>
        </nav>
       </div>
       <div class="pull-right" id="top-search">
        <div class="nav-search hidden">
         <form action="/search/" class="search-form" itemprop="potentialAction" itemscope="" itemtype="http://schema.org/SearchAction" method="get" role="search">
          <meta content="/search/?sku={s}" itemprop="target"/>
          <button type="submit">
           Search
          </button>
          <hr/>
         </form>
         <form action="" id="form_product_finder" method="post">
          <div class="clearfix" id="product_finder">
           <div class="row">
            <div class="col-xs-12 col-sm-12 col-lg-12">
             <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
              <p id="ps-intro">
               Or select a category<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>
              </p>
              <label class="in-dash" for="radio-in-dash">
               In Dash
              </label>
              <br/>
              <label class="mobile-video" for="radio-mobile-video">
               Mobile Video
              </label>
              <br/>
              <label class="amplifiers" for="radio-amplifiers">
               Amplifiers
              </label>
              <br/>
              <label class="subwoofers" for="radio-subwoofers">
               Subwoofers
              </label>
              <br>
               <li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][ahref][ahref][link][ahref]<li>[search]</li><li>[search]</li><li>[search]</li>
              </br>
              <label class="speakers" for="radio-speakers">
               Speakers
              </label>
              <br/>
              <label class="signal-processors" for="radio-signal-processors">
               Signal Processors
              </label>
              <br>
               [link][ahref][search]<li>[search]</li>[link][link][link]<li>[ahref]</li><li>[ahref]</li>
              </br>
              <label class="atv-utv" for="radio-atv-utv">
               Atv Utv
              </label>
              <br>
               <li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>
              </br>
              <label class="motorcycle" for="radio-motorcycle">
               Motorcycle
              </label>
              <br>
               [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[ahref]<li>[ahref]</li><li>[search]</li>[ahref][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][link][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]<li>[ahref]</li>[ahref]<li>[search]</li><li>[search]</li>[ahref][search]<li>[ahref]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
              </br>
             </div>
             <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
              <div class="div-product-finder" id="div-filter-in-dash" style="display:none;">
               <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4">
                <h3 class="filter-head">
                 [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
                </h3>
                <div class="radio radio-danger">
                 <label for="1_in-dash_MOUNTING_1_pf">
                  Double DIN
                 </label>
                </div>
                <div class="radio radio-danger">
                 <label for="2_in-dash_MOUNTING_1_pf">
                  Single DIN
                 </label>
                </div>
               </div>
               <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4">
                <h3 class="filter-head">
                 [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
                </h3>
                <div class="radio radio-danger">
                 <label for="1_in-dash_DISC_PLAYER_MECHANISM_pf">
                  DVD
                 </label>
                </div>
                <div class="radio radio-danger">
                 <label for="2_in-dash_DISC_PLAYER_MECHANISM_pf">
                  MP3/CD
                 </label>
                </div>
                <div class="radio radio-danger">
                 <label for="3_in-dash_DISC_PLAYER_MECHANISM_pf">
                  MECH-LESS
                 </label>
                </div>
               </div>
               <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4">
                <h3 class="filter-head">
                 [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
                </h3>
                <div class="checkbox checkbox-danger">
                 <label for="1_in-dash_MONITOR_pf">
                  Monitor
                 </label>
                </div>
                <div class="checkbox checkbox-danger">
                 <label for="2_in-dash_BUILT-IN_BLUETOOTH_pf">
                  Bluetooth
                 </label>
                </div>
                <div class="checkbox checkbox-danger">
                 <label for="3_in-dash_USB_PLAYBACK_pf">
                  USB Input
                 </label>
                </div>
                <div class="checkbox checkbox-danger">
                 <label for="4_in-dash_SD_CARD_pf">
                  SD Card Input
                 </label>
                </div>
                <div class="checkbox checkbox-danger">
                 <label for="5_in-dash_AUX_PORT_pf">
                  AUX Input
                 </label>
                </div>
                <div class="checkbox checkbox-danger">
                 <label for="6_in-dash_CCD_CAMERA_INPUT_pf">
                  Rearview Camera Input
                 </label>
                </div>
                <div class="checkbox checkbox-danger">
                 <label for="7_in-dash_GPS_pf">
                  GPS/Navigation
                 </label>
                </div>
                <div class="checkbox checkbox-danger">
                 <label for="8_in-dash_ACCESSORIES_pf">
                  Rear Camera Included
                 </label>
                </div>
                <div class="checkbox checkbox-danger">
                 <label for="9_in-dash_USB_CHARGING_pf">
                  USB Charging
                 </label>
                </div>
                <div class="checkbox checkbox-danger">
                 <label for="10_in-dash_STEERING_WHEEL_CONTROL_pf">
                  Steering Wheel Control Input
                 </label>
                </div>
                <div class="checkbox checkbox-danger">
                 <label for="11_in-dash_DETACHABLE_pf">
                  Detachable Face
                 </label>
                </div>
                <div class="checkbox checkbox-danger">
                 <label for="12_in-dash_MULTI_COLOR_ILLUMINATION_pf">
                  Multi-Color Illumination
                 </label>
                </div>
               </div>
              </div>
              <div class="div-product-finder" id="div-filter-mobile-video" style="display:none;">
               <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4">
                <h3 class="filter-head">
                 [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
                </h3>
                <div class="radio radio-danger">
                 <label for="1_mobile-video_SUBCATEGORY_pf">
                  Headrest
                 </label>
                </div>
                <div class="radio radio-danger">
                 <label for="2_mobile-video_SUBCATEGORY_pf">
                  Flipdown
                 </label>
                </div>
                <div class="radio radio-danger">
                 <label for="3_mobile-video_SUBCATEGORY_pf">
                  Monitor
                 </label>
                </div>
               </div>
               <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4">
                <h3 class="filter-head">
                 [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
                </h3>
                <div class="checkbox checkbox-danger">
                 <label for="1_mobile-video_DISC_PLAYER_MECHANISM_pf">
                  Built-in DVD
                 </label>
                </div>
                <div class="checkbox checkbox-danger">
                 <label for="2_mobile-video_USB_PORT_pf">
                  USB Input
                 </label>
                </div>
                <div class="checkbox checkbox-danger">
                 <label for="3_mobile-video_SD_CARD_pf">
                  SD Card Input
                 </label>
                </div>
                <div class="checkbox checkbox-danger">
                 <label for="4_mobile-video_AUX_PORT_pf">
                  Aux Input
                 </label>
                </div>
                <div class="checkbox checkbox-danger">
                 <label for="5_mobile-video_HD_DIGITAL_INPUT_pf">
                  HD Input
                 </label>
                </div>
               </div>
              </div>
              <div class="div-product-finder" id="div-filter-amplifiers" style="display:none;">
               <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4">
                <h3 class="filter-head">
                 [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
                </h3>
                <div class="radio radio-danger">
                 <label for="1_amplifiers_TOTAL_CHANNELS_pf">
                  Monoblock
                 </label>
                </div>
                <div class="radio radio-danger">
                 <label for="2_amplifiers_TOTAL_CHANNELS_pf">
                  2 Channels
                 </label>
                </div>
                <div class="radio radio-danger">
                 <label for="3_amplifiers_TOTAL_CHANNELS_pf">
                  4 Channels
                 </label>
                </div>
                <div class="radio radio-danger">
                 <label for="4_amplifiers_TOTAL_CHANNELS_pf">
                  5 Channels
                 </label>
                </div>
               </div>
               <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4">
                <h3 class="filter-head">
                 [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
                </h3>
                <div class="radio radio-danger">
                 <label for="1_amplifiers_TOTAL_POWER_OUTPUT_pf">
                  Up to 1000 Watts
                 </label>
                </div>
                <div class="radio radio-danger">
                 <label for="2_amplifiers_TOTAL_POWER_OUTPUT_pf">
                  Up to 2000 Watts
                 </label>
                </div>
                <div class="radio radio-danger">
                 <label for="3_amplifiers_TOTAL_POWER_OUTPUT_pf">
                  Up to 3000 Watts
                 </label>
                </div>
                <div class="radio radio-danger">
                 <label for="4_amplifiers_TOTAL_POWER_OUTPUT_pf">
                  Up to 4000 Watts
                 </label>
                </div>
                <div class="radio radio-danger">
                 <label for="5_amplifiers_TOTAL_POWER_OUTPUT_pf">
                  Up to 5000 Watts
                 </label>
                </div>
               </div>
              </div>
              <div class="div-product-finder" id="div-filter-subwoofers" style="display:none;">
               <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4">
                <h3 class="filter-head">
                 [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
                </h3>
                <div class="radio radio-danger">
                 <label for="1_subwoofers_SIZE_pf">
                  8"
                 </label>
                </div>
                <div class="radio radio-danger">
                 <label for="2_subwoofers_SIZE_pf">
                  10"
                 </label>
                </div>
                <div class="radio radio-danger">
                 <label for="3_subwoofers_SIZE_pf">
                  12"
                 </label>
                </div>
                <div class="radio radio-danger">
                 <label for="4_subwoofers_SIZE_pf">
                  15"
                 </label>
                </div>
               </div>
               <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4">
                <h3 class="filter-head">
                 [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
                </h3>
                <div class="radio radio-danger">
                 <label for="1_subwoofers_TOTAL_POWER_OUTPUT_pf">
                  Up to 1000 Watts
                 </label>
                </div>
                <div class="radio radio-danger">
                 <label for="2_subwoofers_TOTAL_POWER_OUTPUT_pf">
                  Up to 2000 Watts
                 </label>
                </div>
                <div class="radio radio-danger">
                 <label for="3_subwoofers_TOTAL_POWER_OUTPUT_pf">
                  Up to 3000 Watts
                 </label>
                </div>
               </div>
               <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4">
                <h3 class="filter-head">
                 [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
                </h3>
                <div class="radio radio-danger">
                 <label for="1_subwoofers_SUBCATEGORY_pf">
                  Amplified
                 </label>
                </div>
                <div class="radio radio-danger">
                 <label for="2_subwoofers_SUBCATEGORY_pf">
                  Dual Voice Coil
                 </label>
                </div>
                <div class="radio radio-danger">
                 <label for="3_subwoofers_SUBCATEGORY_pf">
                  Single Voice Coil
                 </label>
                </div>
               </div>
              </div>
              <div class="div-product-finder" id="div-filter-speakers" style="display:none;">
               <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4">
                <h3 class="filter-head">
                 [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
                </h3>
                <div class="radio radio-danger">
                 <label for="1_speakers_SPEAKER_TYPE_pf">
                  Full Range
                 </label>
                </div>
                <div class="radio radio-danger">
                 <label for="2_speakers_SPEAKER_TYPE_pf">
                  Component
                 </label>
                </div>
                <div class="radio radio-danger">
                 <label for="3_speakers_SPEAKER_TYPE_pf">
                  Enclosed System
                 </label>
                </div>
                <div class="radio radio-danger">
                 <label for="4_speakers_SPEAKER_TYPE_pf">
                  Bluetooth
                 </label>
                </div>
               </div>
               <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4">
                <h3 class="filter-head">
                 [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
                </h3>
                <div class="radio radio-danger">
                 <label for="1_speakers_SIZE_pf">
                  6" x 9"
                 </label>
                </div>
                <div class="radio radio-danger">
                 <label for="2_speakers_SIZE_pf">
                  6.5"
                 </label>
                </div>
                <div class="radio radio-danger">
                 <label for="3_speakers_SIZE_pf">
                  5.25"
                 </label>
                </div>
                <div class="radio radio-danger">
                 <label for="4_speakers_SIZE_pf">
                  4"
                 </label>
                </div>
                <div class="radio radio-danger">
                 <label for="5_speakers_SIZE_pf">
                  4" x 6"
                 </label>
                </div>
                <div class="radio radio-danger">
                 <label for="6_speakers_SIZE_pf">
                  5" x 7"
                 </label>
                </div>
                <div class="radio radio-danger">
                 <label for="7_speakers_SIZE_pf">
                  4" x 10"
                 </label>
                </div>
                <div class="radio radio-danger">
                 <label for="8_speakers_SIZE_pf">
                  3.5"
                 </label>
                </div>
               </div>
               <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4">
                <h3 class="filter-head">
                 [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
                </h3>
                <div class="radio radio-danger">
                 <label for="1_speakers_TOTAL_POWER_OUTPUT_pf">
                  Up to 250 Watts
                 </label>
                </div>
                <div class="radio radio-danger">
                 <label for="2_speakers_TOTAL_POWER_OUTPUT_pf">
                  Up to 500 Watts
                 </label>
                </div>
                <div class="radio radio-danger">
                 <label for="3_speakers_TOTAL_POWER_OUTPUT_pf">
                  Up to 1000 Watts
                 </label>
                </div>
               </div>
              </div>
              <div class="div-product-finder" id="div-filter-signal-processors" style="display:none;">
               <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4">
                <h3 class="filter-head">
                 [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
                </h3>
                <div class="radio radio-danger">
                 <label for="1_signal-processors_SUBCATEGORY_pf">
                  Bass Generators
                 </label>
                </div>
                <div class="radio radio-danger">
                 <label for="2_signal-processors_SUBCATEGORY_pf">
                  Crossovers
                 </label>
                </div>
                <div class="radio radio-danger">
                 <label for="3_signal-processors_SUBCATEGORY_pf">
                  Equalizers
                 </label>
                </div>
               </div>
              </div>
              <div class="div-product-finder" id="div-filter-atv-utv" style="display:none;">
               <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4">
                <h3 class="filter-head">
                 [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
                </h3>
                <div class="checkbox checkbox-danger">
                 <label for="1_atv-utv_BLUETOOTH_AUDIO_STREAMING_pf">
                  Bluetooth Audio Streaming
                 </label>
                </div>
               </div>
              </div>
              <div class="div-product-finder" id="div-filter-motorcycle" style="display:none;">
               <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4">
                <h3 class="filter-head">
                 [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
                </h3>
                <div class="checkbox checkbox-danger">
                 <label for="1_motorcycle_BLUETOOTH_AUDIO_STREAMING_pf">
                  Bluetooth Audio Streaming
                 </label>
                </div>
               </div>
              </div>
             </div>
            </div>
           </div>
           <div class="row">
            <div class="col-xs-12 col-sm-12 col-lg-12">
            </div>
           </div>
          </div>
         </form>
        </div>
       </div>
      </div>
     </div>
    </div>
   </header>
   <section class="home-jun2016">
    <div class="container-fluid hidden-xs">
     <div class="row">
      <div class="carousel slide" data-ride="carousel" id="myCarousel">
       <div class="indicators">
        <ol class="carousel-indicators">
         <li class="active" data-slide-to="0" data-target="#myCarousel">
         </li>
         <li data-slide-to="1" data-target="#myCarousel">
         </li>
        </ol>
       </div>
       <div class="carousel-inner" role="listbox">
        <div class="item active">
         [ahref]
         
        </div>
        <div class="item ">
         [link]
         
        </div>
       </div>
       [link]
       
       [ahref]
       
      </div>
     </div>
    </div>
    <div id="home-banners">
     <div class="container">
      <div class="row home-banners">
       <div class="home-banners-in">
        <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4" style="text-align:center;">
         [ahref]
         
         <div class="desc-text">
          <h3>
           [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
          </h3>
          <p>
           [ahref]
           
          </p>
         </div>
        </div>
        <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4" style="text-align:center;">
         [ahref]
         
         <div class="desc-text">
          <h3>
           [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
          </h3>
          <p>
           [ahref]<li>[link]</li><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]
          </p>
         </div>
        </div>
        <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4" style="text-align:center;">
         [ahref]
         
         <div class="desc-text">
          <h3>
           [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
          </h3>
          <p>
           BOSS Bucks Rewards! Earn points good towards the purchase of BOSS Products.[link]<li>[link]</li><li>[link]</li><li>[ahref]</li>[link]<li>[search]</li><li>[search]</li>
          </p>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
    <div class="home-story">
     <div class="container">
      <div class="row text-center">
       <div class="mg-center col-xs-12 col-sm-8 col-md-8 col-lg-8">
        <h3>
         [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
        </h3>
        <div class="inner">
         <p class="text">
          For over 30 years, BOSS Audio has been a leader and innovator in creating audio and video products featuring the latest technology, while consistently delivering clean and powerful sound. Our commitment to producing quality products stems naturally from being audiophiles at heart. <li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[link]<li>[search]</li><li>[ahref]</li>[ahref][link]<li>[link]</li><li>[link]</li><li>[link]</li>[link]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][link][ahref]<li>[link]</li><li>[ahref]</li>[search][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
         </p>
         [link]
         
        </div>
       </div>
       <div class="clear">
       </div>
      </div>
     </div>
    </div>
    <div class="container-fluid home-connect">
     <div class="row text-center">
      <div class="box-title">
       <h4>
        Connect With Us
       </h4>
      </div>
      <div class="box-content">
       <div class="box-icons icon-style2 share-icons fa-4">
        [ahref]
        
        [link]
        
        [link]
        
        [link]
        
        [ahref]
        
       </div>
      </div>
     </div>
    </div>
   </section>
   <footer id="footer" role="contentinfo">
    <div class="container-fluid home-newsletter">
     <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 text-center">
      <span>
       SIGN UP &amp; STAY IN THE LOOP
      </span>
      <form action="/">
       <button onclick="subscribe_newsletter();return false;">
        SUBMIT
       </button>
      </form>
     </div>
    </div>
    <div class="container" id="inner-footer">
     <div class="row">
      <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
       <div class="foot-info">
        <p>
         [link]
         
        </p>
        <div class="box-icons icon-style2 share-icons fa-2">
         [link]
         
         [link]
         
         [link]
         
         <a href="/bossaudio/" target="_blank">
          <i class="fa fa-pinterest">
          </i>
         </a>
         [link]
         
        </div>
       </div>
       <div class="cards-info">
        <span class="foot-cards">
        </span>
        [ahref]
        
       </div>
      </div>
      <div class="col-xs-12 col-sm-12 col-md-8 col-lg-8">
       <div class="row">
        <nav class="clearfix">
         <div class="menu-footer-menu-container">
          <ul class="footer-nav clearfix nav" id="menu-footer-menu">
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-134401" id="menu-item-134401">
            [ahref]
            
            <ul class="sub-menu">
             <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-134407" id="menu-item-134407">
              [ahref]
              
             </li>
             <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-539741" id="menu-item-539741">
              <a class="menu-image-title-after" href="/abstracted/BOSS/submitcase.php">
               <span class="menu-image-title">
                Parts Request[search][search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
               </span>
              </a>
             </li>
             <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-539686" id="menu-item-539686">
              [ahref]
              
             </li>
             <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-134415" id="menu-item-134415">
              [ahref]
              
             </li>
             <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-456641" id="menu-item-456641">
              [ahref]
              
             </li>
             <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-134419" id="menu-item-134419">
              [ahref]
              
             </li>
            </ul>
           </li>
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-135811" id="menu-item-135811">
            [link]
            
            <ul class="sub-menu">
             <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-134400" id="menu-item-134400">
              <a class="menu-image-title-after" href="/policies/?scroll=standard-warranty">
               <span class="menu-image-title">
                Standard Warranty<li>[ahref]</li><li>[ahref]</li>[ahref]<li>[ahref]</li><li>[link]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
               </span>
              </a>
             </li>
             <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-134402" id="menu-item-134402">
              [ahref]
              
             </li>
             <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135835" id="menu-item-135835">
              [link]
              
             </li>
             <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135837" id="menu-item-135837">
              <a class="menu-image-title-after" href="/policies/?scroll=no-sales-tax">
               <span class="menu-image-title">
                No Sales Tax [ex CA]
               </span>
              </a>
             </li>
             <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135838" id="menu-item-135838">
              [link]
              
             </li>
             <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135839" id="menu-item-135839">
              [link]
              
             </li>
             <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-134412" id="menu-item-134412">
              [link]
              
             </li>
             <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135840" id="menu-item-135840">
              [link]
              
             </li>
            </ul>
           </li>
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-134413" id="menu-item-134413">
            [link]
            
            <ul class="sub-menu">
             <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-134414" id="menu-item-134414">
              [ahref]
              
             </li>
             <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-134416" id="menu-item-134416">
              [ahref]
              
             </li>
             <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-134418" id="menu-item-134418">
              <a class="menu-image-title-after" href="/online-catalogs/">
               <span class="menu-image-title">
                Online Catalogs<li>[ahref]</li>[ahref]<li>[ahref]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>
               </span>
              </a>
             </li>
             <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-539742" id="menu-item-539742">
              [ahref]
              
             </li>
            </ul>
           </li>
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-134421" id="menu-item-134421">
            [link]
            
            <ul class="sub-menu">
             <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-540963" id="menu-item-540963">
              <a class="menu-image-title-after" href="/support/">
               <span class="menu-image-title">
                Contact Us[link][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]<li>[search]</li><li>[ahref]</li>
               </span>
              </a>
             </li>
             <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135256" id="menu-item-135256">
              [link]
              
             </li>
             <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-539684" id="menu-item-539684">
              [ahref]
              
             </li>
             <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135255" id="menu-item-135255">
              [ahref]
              
             </li>
             <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-176463" id="menu-item-176463">
              [ahref]
              
             </li>
             <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-134428" id="menu-item-134428">
              <a class="menu-image-title-after" href="/our-company/our-story/">
               <span class="menu-image-title">
                Our Story
               </span>
              </a>
             </li>
             <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-541036" id="menu-item-541036">
              [ahref]
              
             </li>
            </ul>
           </li>
          </ul>
         </div>
        </nav>
       </div>
      </div>
     </div>
    </div>
    <div class="copyright container">
     <p class="attribution">
      © Copyright 2018 BOSS Audio Systems. All rights reserved
     </p>
     <div id="olibro-icon">
      [ahref]
      
     </div>
    </div>
   </footer>
  </div>
  <div class="hiddena">
   <div aria-labelledby="myModalLabel" class="modal fade download-modal" id="freshdesk" role="dialog" tabindex="-1">
    <div class="modal-dialog" role="document" style="width: 95%;height: 90%;">
     <div class="modal-content" style="height: 100%;">
      <div class="modal-header" style="padding: 5px; height: 30px;">
       <button aria-label="Close" class="close" data-dismiss="modal" type="button">
        <span aria-hidden="true">
         ×[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[link]</li>[ahref][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][link]<li>[search]</li>[search]<li>[link]</li>[ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li>[link]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>
        </span>
       </button>
      </div>
      <div class="modal-body" style="padding: 0px 15px;height: 100%;">
       <div class="row" style="height: 100%;">
        <iframe src="https://bossaudio.freshdesk.com/support/tickets/new" style="width: 100%; height:100%;">
        </iframe>
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
  <noscript>
  </noscript>
  <noscript>
   <div style="display:inline;">
   </div>
  </noscript>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0259
  </b>
 </body>
</html>
