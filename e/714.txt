--->|SXQgZG9lc3QgZ2V0IG11Y2ggbG93ZXIgdGhhbiBhIGNoaWxkIGtpbGxlciBidXQgdG8gbWUgYSBkcnVnIGRlYWxlciBpcyBvbmUgb2YgdGhlbS4gNSBwb2ludHMgIHN1Ym1pdHRlZCA4IGRheXMgYWdvLiAKUGVyc29uYWxseSwgSSBkb24gYmVsaWV2ZSBzby4gClZpY3RvcmlhIFNlY3JldCBzdGFydGVkIGRlY2xpbmluZyBpbiBxdWFsaXR5IGFyb3VuZCAxNSB5ZWFycyBhZ28uIEkgc3RpbGwgaGF2ZSBzb21lIHJlYWxseSBvbGQgc3R1ZmYgSSBib3VnaHQgdGhlcmUgYW5kIHRoZSBtYXRlcmlhbHMgYXJlIHNvIG11Y2ggYmV0dGVyIHRoYW4gdGhlIGN1cnJlbnQgY3JhcC4KV2Ugc2F3IHRoZSBOYXRpb25hbCBBc3NvY2lhdGlvbiBvZiBSZWFsdG9ycyAoTkFSKSBlbWJyYWNlIHRoaXMgaW4gaXRzIGxhdGVzdCBjb2xsYWJvcmF0aW9uIHdpdGggQXBhcnRtZW50IFRoZXJhcHkuIApXaGlsZSBoZSB3YXMgYSBkYW5nZXJvdXMgbWFuIHdpdGggYSBndW4sIGFzIHdlbGwgYXMgd2l0aCB0aGUgbG9uZywgYmxhZGVkIGtuaWZlIGhlIGNhcnJpZWQsIERvYyB3YXMgYWxzbyBmYW1lZCBhcyBhIGdhbWJsZXIuIEluIGFkZGl0aW9uIHRvIHBsYXlpbmcgY2FyZHMgZm9yIG1vbmV5LCBoZSB3YXMgYWxzbyBhIGRlYWxlciBmb3IgYm90aCBQb2tlciBhbmQgRmFyby4gVGhlIGJlc3Qgd2F5IHRvIHJlcHJlc2VudCB0aGlzIHVudXN1YWwgY2FkcmUgb2Ygc2tpbGxzIGlzIHRvIHN0YXJ0IERvYyBvZmYgd2l0aCB0aGUgTWF2ZXJpY2sgYXJjaGV0eXBlIG9mIHRoZSBndW5zbGluZ2VyLiAKVGhlcmUgYXJlIGRvemVucyBvZiBkaWZmZXJlbnQgdmlkZW8gcG9rZXIgZ2FtZXMgaW4gY2FzaW5vcy4gClRoZXkgZm9yYmFkZSBoaW0gZnJvbSBkb2luZyBpdCwgY2xhaW1pbmcgaXQgd291bGQgY2F1c2UgaGltIHRvIGhhdmUgYW4gdW5mYWlyIGJ1c2luZXNzIGFkdmFudGFnZSBvdmVyIHRob3NlIFVTIHByb2R1Y2VycyB3aG8gRE9OIHJlZ3VsYXJseSB0ZXN0LiAKVGhhdCBwcm9iYWJseSBtYWtlcyBoZXIgY2FwYWJsZSBvZiBkZWZlYXRpbmcgbW9zdCBmaWN0aW9uYWwgY2hhcmFjdGVycyB3aXRoIGFueSBwaHlzaWNhbCB2dWxuZXJhYmlsaXR5LCB5ZXMuIEFsdGhvdWdoIGhlciBpbW1vcnRhbGl0eSBkb2VzIG5vdCBjb21lIHdpdGggYW55IHJlZ2VuZXJhdGl2ZSBjYXBhY2l0eSwgYXMgZGVzcGl0ZSBoZXIgaW5hYmlsaXR5IHRvIGRpZSBzaGUgRE9FUyBzdGlsbCBhcHBlYXIgdG8gYWdlLiAKU28geW91IHBsYXkgdGhlIHZpb2xhIHRoZW4sIEhNSD8gQXJlIHlvdSBwYXJ0IG9mIGFuIG9yY2hlc3RyYT8gKGNoYW1iZXIgbXVzaWMgICBtb3JlIGxpa2UgYSBxdWFydGV0IG9yIHNvbWV0aGluZz8gSSBrbm93IG5vdGhpbmcuKSBEbyB5b3UgdG91ciB5b3VyIG11c2ljPwpJIGxpa2UgdG8gbGVhcm4gYnkgcGlja2luZyBhIHByb2plY3QgdGhhdCB0b28gYW1iaXRpb3VzLCBtYWtpbmcgYSBidW5jaCBvZiBtaXN0YWtlcyB3aGlsZSBtYWtpbmcgaXQgYW5kIGxlYXJuaW5nIGZyb20gdGhvc2UgZm9yIHRoZSBuZXh0IHRoaW5nLiBJIGltYWdpbmUgdGhhdCB0aGlzIGlzbiBhIGdyZWF0IGlkZWEgZm9yIG1vc3QgcGVvcGxlCkZhY2luZyBjb3VydCB5ZXN0ZXJkYXkgb24gYSBjaGFyZ2Ugb2YgbWFsaWNpb3VzIGRhbWFnZSwgTXllcnMgYWdyZWVkIHdpdGggTWFnaXN0cmF0ZSBTdXNhbiBNY0dvd2FuIHN1Z2dlc3Rpb24gdGhhdCBoZSBuZWVkZWQgcHJvZmVzc2lvbmFsIGhlbHAgdG8gZGVhbCB3aXRoIGhpcyBnYW1ibGluZyBwcm9ibGVtcy4gCkZsZXhpYmlsaXR5IG9mIEhlbG9jcyBjb3VsZCBpbmNyZWFzZSBmaW5hbmNpYWwgc3lzdGVtIHZ1bG5lcmFiaWxpdGllcywgdGhlIGFuYWx5c3RzIHNhaWQuIHRoZSBldmVudCBvZiBhIGNvcnJlY3Rpb24sIGJvcnJvd2VycyBjb3VsZCBmaW5kIHRoZW1zZWx2ZXMgd2l0aCBhIGRlYnQgbG9hZCB0aGF0IGV4Y2VlZHMgdGhlIHZhbHVlIG9mIHRoZWlyIGhvbWUsIHdoaWNoIGlzIG9mdGVuIHJlZmVycmVkIHRvIGFzIG5lZ2F0aXZlIGVxdWl0eS4KU2hlIGlzbiB0aGUgb25lIHRoYXQgZHJvdmUgYmFja3dhcmQgICBpdCBqdXN0IG5vdCBwb3NzaWJsZSB0byBnZXQgaW4gdGhlIGNhciwgc3RhcnQgaXQgdXAsIGxvY2sgdGhlIGRvb3JzLCBnZXQgaXQgaW50byByZXZlcnNlLCBhbmQgYmFjayB1cCB0aGF0IHF1aWNrbHkuIApJbiBtdXNpYyBpdCB3aWxsIGJldGhlIGJhY2tncm91bmQgc2luZ2VycyBlY3QuIApBdCA4ODggU3BvcnQgeW91IGNhbiBiZXQgb24gZm9vdGJhbGwsIGJhc2tldGJhbGwsIHRlbm5pcywgaG9yc2UgYW5kIGdyYXlob3VuZCByYWNpbmcsIGNyaWNrZXQsIEFtZXJpY2FuIHNwb3J0cyBhbmQgbXVjaCBtb3JlLiAKU3VmZm9sayBDb3VudHkgRGlzdHJpY3QgQXR0b3JuZXkgVGhvbWFzIFNwb3RhIGJlZ2FuIGludmVzdGlnYXRpbmcgaWxsZWdhbCBzcG9ydHMgZ2FtYmxpbmcgd2hlbiBoZSB0b29rIG92ZXIgdGhlIG9mZmljZSBpbiAyMDAxIGJlY2F1c2Ugb2YgdGhlIGVmZmVjdCBpdCBjYW4gaGF2ZSBvbiBhIGNvbW11bml0eSwgYWNjb3JkaW5nIHRvIENsaWZmb3JkLiAiQmV0dGluZyBoYXMgYW4gaW1wYWN0IG9uIHRoZSBlY29ub215LCIgQ2xpZmZvcmQgc2FpZC4gIkFuZCB0aGUgb3JnYW5pemVkIGNyaW1lIHJpbmdzIHRha2UgdGhlIHByb2ZpdHMgbWFkZSBvZmYgc3BvcnRzIGdhbWJsaW5nIGFuZCB1c2UgdGhlbSB0byBmdW5kIG90aGVyIGNyaW1pbmFsIGFjdGl2aXRpZXMgbGlrZSBwcm9zdGl0dXRpb24sIHJhY2tldGVlcmluZyBhbmQgZHJ1Z3MuIgoiV2UgZGlkbid0IHRocm93IHdoYXQgd2UgaGF2ZSBpbiB0aGUgZ2FyYmFnZSBhbmQgc2F5IHdlIGhhdmUgdG8gZG8gaXQgYWxsIGFnYWluLiAKU2l4IG1vbnRocyBsYXRlciwgdHdvIGxvY2FsIG1lbiBUb21teSBXYXJkIGFuZCBLYXJsIEZvbnRlbm90IHdlcmUgYXJyZXN0ZWQgYW5kIGJyb3VnaHQgdG8gdHJpYWwsIGV2ZW4gdGhvdWdoIHRoZXkgcmVwdWRpYXRlZCB0aGVpciAiY29uZmVzc2lvbnMsIiBubyBib2R5IGhhZCBiZWVuIGZvdW5kLCBubyB3ZWFwb24gaGFkIGJlZW4gcHJvZHVjZWQsIGFuZCBubyBleWV3aXRuZXNzZXMgaGFkIGNvbWUgZm9yd2FyZC4gVGhlIERyZWFtcyBvZiBBZGEgaXMgYSBzdG9yeSBvZiBwb2xpdGljcyBhbmQgbW9yYWxpdHksIG9mIGZlYXIgYW5kIG9ic2Vzc2lvbi4gCkdyZWVuIHNhaWQgdGhlIGZ1bmQsIHdoaWNoIGNoYXJnZXMgYSAwLjkgcGVyIGNlbnQgZmVlLCBpcyBtZWFudCB0byBkYW1wZW4gdm9sYXRpbGl0eSB3aGVuIGNvbWJpbmVkIHdpdGggdHJhZGl0aW9uYWwgcG9ydGZvbGlvcywgYnV0IHdvdWxkbiBnbyBhcyBmYXIgYXMgY2FsbGluZyBpdCBsb3cgcmlzay4gVGhlIGZ1bmQgaXNuIG1lYW50IHRvIGJlIGludmVzdGVkIGluIGFsb25lLCBoZSBzYWlkLiBJbnN0ZWFkLCBsaWtlIG1hbnkgbGlxdWlkIGFsdHMsIGl0IHN1cHBvc2VkIHRvIG9uZSBwaWVjZSBvZiB0aGUgcHV6emxlLi4gCkxlIHRyYWl0ZW1lbnQgY29uc2lzdGUgIGwnaW1wbGFudGF0aW9uLCBwYXIgdW5lIGNoaXJ1cmdpZSwgZGUgcGx1cyBkJ3VuZSBjZW50YWluZSBkZSBncmFpbnMgZCdpb2RlcyByYWRpb2FjdGlmIHBycyBkZSBsYSB0dW1ldXIgb3UgZW5jb3JlIGRlIGwnb3JnYW5lIGFmZmVjdGUgcGFyIHVuIGNhbmNlci4KV2hlbiBJIGZpcnN0IHN0YXJ0ZWQgdGhpcyBjb2x1bW4sIEkgd2FzIHBpc3NlZC4gd2FzIHN0aWxsIGluIG9mZmljZSwgdHdvIGlsbGVnYWwgYW5kIGltcGVyaWFsaXN0aWMgd2FycyB3ZXJlIGluIGZ1bGwgc3dpbmcsIGFuZCBhbHRob3VnaCB0aGUgV2FsbCBTdHJlZXQgUG9uemkgc2NoZW1lIGJ1aWx0IG9uIHRoZSBkZW1vY3JhdGl6YXRpb24gb2YgZGVidCBoYWQgbm90IHlldCBjb2xsYXBzZWQsIGl0IHdhcyBpbmNyZWFzaW5nbHkgY2xlYXIgdGhhdCBtb3N0IG9mIHVzIGhhZCBiZWVuIHNjcmV3ZWQgYnkgTmVvbGliZXJhbCBjYXBpdGFsaXNtLiBUaHJlZSBkZWNhZGVzIG9mIHRheCBnaXZlYXdheXMgdG8gdGhlIHJpY2hlc3QgQW1lcmljYW5zIGFuZCB0aGUgZGVzdHJ1Y3Rpb24gb2YgdGhlIHNvY2lhbCBzYWZldHkgbmV0IG1lYW50IDgwJSBvZiB1cyB3ZXJlIHdvcnNlIG9mZiB0aGFuIGluIDE5ODAuIHdhcyBmaW5pc2hpbmcgdXAgYSBib29rIG9uIGp1c3QgdGhhdCB0b3BpYyAoQW1lcmljYW4gUGxhc3RpYykgYW5kIHRoZSBtb3JlIEkga25ldyBhYm91dCBob3cgaW4gZGVidCBBbWVyaWNhbnMgd2VyZSwgdGhlIG1vcmUgYW5ncnkgSSBiZWNhbWUuIHdhcyBjbGVhcmx5IGEgY2FzZSBvZiB1cyB2cy4gdGhlbSwgdGhlIHdvcmtpbmcgY2xhc3NlcyB2cy4gdGhlIHN1cGVyIHJpY2ggd2hvIHdlcmUgcm9iYmluZyB1cyBibGluZC4gSSB0cnVseSBiZWxpZXZlZCB0aGF0IGl0IHdhcyB0aW1lIHRvIHN0b3AgdGhpcyBub25zZW5zZSwgYmFuZCB0b2dldGhlciBhcyB0aGUgbWFqb3JpdHksIGFuZCB0YWtlIG91ciBjb3VudHJ5IGJhY2suIHdhcyBpbiB0aGlzIHNwaXJpdCB0aGF0IEkgc3RhcnRlZCAiQ2xhc3MgV2FyZmFyZS4iClJlYWNoIGhpZ2ggYW5kIGJlbGx5IGJyZWF0aGUgaW4uIEFsbCBtb3Rpb25zIHNsb3cgYW5kIGNvbnRyb2xsZWQuLiAKTlRBLiAKVW5mb3J0dW5hdGVseSwgdGhlcmUgbm8gcG9pbnQgaW4gZmlnaHRpbmcgdGhpcyBjdXJyZW50LiBUaGVpciBjdWx0dXJlIGlzIGRpZmZlcmVudCwgYW5kIHNvbWV0aW1lcywgY29tcGxldGVseSBpbmNvbXBhdGlibGUgd2l0aCBvdGhlcnMuIFRoZSBvbmx5IHdheSBJIGV2ZXIgc2VlbiBhIEtvcmVhbiBwZXJzb24gc3RvcCB0aGUgYmVoYXZpb3IgdGhhdCBib3RoZXJzIHdlc3Rlcm4gcGVvcGxlICh0aGF0IHRoZSBLb3JlYW5zIHRoZW1zZWx2ZXMgYXJlIGxhcmdlbHkgdW5hd2FyZSBvZikgaXMgYnkgYmVmcmllbmRpbmcgdGhlbS4gQWZ0ZXIgc29tZSB0aW1lIHNwZW50IHRvZ2V0aGVyLCB0aGV5IG9mdGVuIHN0YXJ0IHRvIHNlZSBvdGhlciBLb3JlYW5zIGxpdHRsZSBzbGlnaHRzIGFnYWluc3QgeW91IGFzIGNsZWFybHkgYXMgeW91IGRvLCBhbmQgZ2V0IGFubm95ZWQgYnkgaXQgYXMgd2VsbC4KTWFyaWFoIGlzIG9uZSBvZiB0aGUgb25seSBmZW1hbGUgYXJ0aXN0cyB0byBoYXZlIHRvcHBlZCB0aGUgY2hhcnRzIHdpdGggdGhlIG1vc3QgMSBoaXRzIGR1cmluZyB0aGUgMjAwMHMgYW5kIGlzIHRoZSBvbmx5IHNvbG8gYXJ0aXN0IHRvIHN1cnBhc3MgRWx2aXMnIHJlY29yZCBmb3IgdGhlIG1vc3QgbnVtYmVyIG9mIGhpdHMgaW4gQW1lcmljYS4gTWFyaWFoIENhcmV5J3Mgc3RhZ2dlcmluZyA1IG9jdGF2ZSB2b2NhbCByYW5nZSBpcyBvbmUgb2YgaGVyIG1vc3QgcmVjb2duaXphYmxlIHRyYWRlbWFya3MuIApJIGxpdGVyYWxseSBjYW4ndCBnZXQgaW50byBoZXIgaG91c2Ugd2l0aG91dCBoZXIgY29vcGVyYXRpb24gYW5kIHNpbmNlIHRoaXMgdGhpbmcgaXMgcnVubmluZyBsYXRlICh3ZWxsLCBJIGR1bm5vLCBpZiBoZSdzIGluIHRoZSBmaXJzdCBhY3QsIGNhbiBJIHNuZWFrIG91dCBhdCBpbnRlcm1pc3Npb24gaWYgSSdtIG90aGVyd2lzZSBib3JlZD8pLiBZZWFoLCB0aGF0J3MgaGFwcGVuaW5nLiBJIFRNbSBicmluZ2luZyBteSBtb21teSBhcyBhIGRhdGUuIApUaGV5IGZhbiBpdCB3aXRoIHRoZWlyIHdpbmdzIHVudGlsIG1vc3Qgb2YgdGhlIHdhdGVyIGNvbnRlbnQgZXZhcG9yYXRlcyBpbiB0aGUgd2FybSBhaXIgb2YgdGhlIGJlZWhpdmUuLiAKU2hlIGhhZCBzdHJldGNobWFya3MgYXJvdW5kIHRoZSB3YWlzdCBhbmQgaGlwcyBhbmQgYSBzb2Z0LCBwbHVtcCB0dW1teS4gU3RpbGwsIGhlciBsZWdzLCBicmVhc3QgYW5kIGJ1dHQgd2VyZSBuaWNlIGFuZCBoZXIgcHVzc3kgd2FzIGRlbGlnaHRmdWwuIApXZSByZXF1ZXN0IHRoYXQgeW91IHVzZSBNb2RtYWlsIGFzIG5vdCBvbmx5IGRvIGFsbCBNb2RlcmF0b3JzIGdldCB0byB2aWV3IHRoZSBtZXNzYWdlIG5vIG1hdHRlciB3aGF0IHRpbWUgb2YgZGF5IHlvdSBzZW5kIGl0LCBub3Igd2hhdCB0aW1lIG9mIGRheSBhbnkgcGFydGljdWxhciBtb2QgaGFwcGVucyB0byBiZSBvbi4gUXVpdGUgdW5mb3J0dW5hdGVseSBmb3IgYm90aCB5b3UgZ3V5cywgYW5kIHVzIGFsaWtlLCBkdXJpbmcgdGhvc2UgdGltZXMgdGhlIG9sZCBzYXlpbmcgb2YgIklmIGF0IGZpcnN0IHlvdSBkb24ndCBzdWNjZWVkLCB0cnksIHRyeSBhZ2FpbiEiIFRoZSBvdGhlciBiaXQgdG8gdGhhdCBpcyB0aGF0IGl0IGlzIG91ciBwb2xpY3kgaXMgdGhhdCB3aGVuIHlvdSBjb250YWN0IHVzIGFib3V0IGEgcmVtb3ZhbCwgb3IgdG8gcmVhY2ggb3V0IHRvIHVzIGFib3V0IGEgY29uY2VybiB0aGF0IHlvdSBtYXkgaGF2ZSB3aXRoIGEgc3BlY2lmaWMgbW9kZXJhdG9yLCB0aGUgbW9kIHdobyBoYW5kbGVkIHlvdXIgaXNzdWUgZG9lc24ndCBoYW5kbGUgdGhlIG1vZG1haWwuIApQYWkgZ293IGlzIGEgZ3JlYXQgYWx0ZXJuYXRpdmUgZm9yIHBlb3BsZSB3aG8gYXJlIGZlZCB1cCB3aXRoIFRleGFzIEhvbGQnZW0gUG9rZXIuIFRoZSBQYWkgZ293IGNhcmQgZ2FtZSBpcyBiYXNpY2FsbHkgYSBnYW1lIGJhc2VkIG9uIHRoZSBDaGluZXNlIGRvbWlubyBnYW1lIEknbSBzdXJlIG1vc3Qgb2YgeW91IGhhdmUgcGxheWVkIGF0IG9uZSB0aW1lIHdoZW4geW91IHdlcmUgeW91bmcuIApFbGxlIG0nZXhwbGlxdWUgbid0cmUgcGFzIGF1IGNvdXJhbnQsIGV0IHByb2NkZSBpbW1kaWF0ZW1lbnQgIGwnYWZmcmFuY2hpc3NlbWVudCBlbiB0YXJpZiBsZXR0cmUgc2FucyBhdXRyZSBkaWZmaWN1bHQuIEF1IGxpZXUgZGVzIDUxMCByY2xhbXMgcG91ciBsJ2Vudm9pIGQndW5lIHBpY2UsIGplIG4nYWkgZXUgIHBheWVyIHF1ZSBsZSB0YXJpZiBsZXR0cmUgZGUgMCw4OCAoY2FyIGVudm9pIGRlIDUwIGcgZW4gdGFyaWYgcHJpb3JpdGFpcmUpLiAKV2lsbGlhbXMsIGEgcmV0aXJlZCBwb2xpdGljYWwgc2NpZW5jZSBwcm9mZXNzb3IgYXQgdGhlIFVuaXZlcnNpdHkgb2YgV2F0ZXJsb28sIHNhaWQgaXQgaGlnaGxpZ2h0cyB0aGUgb2YgdW5tb2RlcmF0ZWQgZGlnaXRhbCBwbGF0Zm9ybXMuanVzdCBmaW5kIHRoYXQgdG90YWxseSBhcHBhbGxpbmcgdGhhdCBwZW9wbGUgZmVlbCB0aGV5IG5lZWQgdG8gbWFrZSB0aG9zZSBzb3J0cyBvZiBjb21tZW50cyBhYm91dCBhIHBvbGljeSBwcm9wb3NhbCwgaGUgc2FpZC4gUHJlc2lkZW50IERvbmFsZCBUcnVtcCBtYXkgaGF2ZSBlbWJvbGRlbmVkIHNvbWUgcG9saXRpY2FsIHdhdGNoZXJzLndoYXQgcGFzc2VzIGZvciBwb2xpdGljYWwgcGFydGljaXBhdGlvbiBvciBwb2xpdGljYWwgZGlzY291cnNlIHRvZGF5LCBoZSBzYWlkIG9mIHRoZSB0d2VldHMgdG8gSGVsbWVyLk1hbnkgZG9uIGxpa2UgaXQuIApPbmUgb2YgdGhvc2Ugc3RyYW5nZSBpdCdzIGEgc21hbGwgd29ybGQnIGNvaW5jaWRlbmNlcyBoYXBwZW5lZCBhZ2FpbiB0b2RheS4gSSBzYXQgZG93biBpbiB0aGUgU3VwZXIgU2F0LiBBbmQgdGhlIGdlZXplciBuZXh0IHRvIG1lIHNpdHMgZG93biBhbmQgc3RhcmVzIG1lIG91dC4gCkFsc28gc2FtZSBzaGl0IGF0IGJ1cyBzdG9wcywgaXQgYm9nZ2xlcyBteSBmdWNraW5nIG1pbmQuIFRoZXJlIGEgYmluIGF0IG1vc3QgYnVzIHN0b3BzICh1cmJhbiBvbmVzKSwganVzdCBwdXQgeW91ciBjaWcgb3V0IHNvbWV3aGVyZSBhbmQgdGhyb3cgaXQgaW4gdGhlIGZ1Y2tpbmcgYmluIGluc3RlYWQgb2YgZmxpY2tpbmcgaXQgb2ZmIHdobyB0aGUgZnVjayBrbm93cyB3aGVyZS4KQ2hpLCBvciBRaSwgaXMgdW5kZXJzdG9vZCBpbiB0aGUgV2VzdCB0byBiZSB0aGUgdml0YWwgZW5lcmd5IGRlZXAgd2l0aGluIHVzIGFsbCwgd2hpY2ggY2FuIGJlIGRldmVsb3BlZCBhbmQgbWFuaXB1bGF0ZWQuIENoaSBpcyBhIENoaW5lc2UgdGVybSwgYW5kIGxvc2VzIG11Y2ggb2YgaXRzIG1lYW5pbmcgd2hlbiByZW1vdmVkIGZyb20gaXRzIHByb3BlciBjb250ZXh0LiBTaW1wbHkgcHV0LCBDaGkgaXMgdGhlIFRhb2lzdCBjb25jZXB0IG9mIGFuIHVuZGVybHlpbmcgbGlmZWZvcmNlLCB3aGljaCBpcyBzYWlkIHRvIGNpcmN1bGF0ZSBpbiBzcGVjaWZpYyBwYXR0ZXJucyBpbiB0aGUgYm9keS4gCkluaXRpYWxseSB0aGUgcGVyc29uIHdobyBsaXZlZCBpbiB0aGUgaG91c2UgYSBDemVjaCBuYXRpb25hbCBzYWlkIHRoYXQgbm8gcGVybWlzc2lvbiBoYWQgYmVlbiBnaXZlbiwgaG93ZXZlciB0aGUgZGF5IGFmdGVyIHRoZSBpbmNpZGVudCBoZSBtYWRlIGFub3RoZXIgc3RhdGVtZW50IHdoZXJlIGhlIGNsYWltZWQgdGhhdCBpbiBmYWN0IGhpcyBnaXJsZnJpZW5kIGhhZCBnaXZlbiBNYXVnaGFuIHBlcm1pc3Npb24gdG8gc3RheSBpbiB0aGUgaG91c2UgdGhhdCBuaWdodC4gVGhpcyB3aXRuZXNzIHRvbGQgdGhlIGNvdXJ0IHRoYXQgdGhlIHdpbmRvdyB3YXMgYWxyZWFkeSBicm9rZW4gdGhhdCBuaWdodCBhcyBoZSBoYWQgYnJva2VuIGl0IGVhcmxpZXIgdGhhdCBkYXkuLiAKTm90IHRoZSBHcmVhdGVzdApMaW5rZWQgc2VydmljZXMuIExpbmtpbmcgc2VydmljZXMgbWF5IGFsc28gY2F1c2UgdGhlIG90aGVyIHNlcnZpY2UgdG8gc2VuZCB1cyBpbmZvcm1hdGlvbiBhYm91dCB5b3VyIGFjY291bnQgd2l0aCB0aGF0IHNlcnZpY2UuIFRvIGxlYXJuIGhvdyBpbmZvcm1hdGlvbiBpcyBzaGFyZWQgd2l0aCBsaW5rZWQgc2VydmljZXMsIHNlZSAiSG93IEluZm9ybWF0aW9uIEFib3V0IFlvdSBJcyBTaGFyZWQiIGJlbG93LgpJIHNhdyB0aGUgdmlkZW8gaW4gdGhlIHRvdXJuYW1lbnQsIGJ1dCBpdCBzZWVtcyBtb3JlIGxpa2UgcGVvcGxlIHdlcmUgaGFuZGluZyBoaW0gdGhlIGtpbGxzLiA3NSBkYW1hZ2Uvc3dpcGUgaXMgc3Ryb25nLCBidXQgZG9lc24gYSB0YWN0aWNhbCBzaG90Z3VuIG91dCBEUFMgdGhhdD8gVGhlIGxlYXAgaGFzIHBsZW50eSBvZiBsYWcgb24gdGhlIGVuZCB0byBoaXQgYSBjb3VwbGUgc2hvdHMuIEl0IG5vdCBhIG9uZSBzaG90IHdlYXBvbiBpZiB5b3UgaGF2ZSBzaGllbGQuIApFbiByZXZhbmNoZSwgdW5lIHBlcnNvbm5lIGdyb3NzZSBhIGRyb2l0IGF1IG1tZSByZXNwZWN0IGV0IGF1eCBtbWVzIGRyb2l0cyBxdWUgdG91dGVzIGxlcyBhdXRyZXMuIApZb3UgYWxtb3N0IGFsd2F5cyBzdGFydCBvbiB5b3VyIGJhY2sgYW5kIGl0IHRoZSAiZmxpcCIgd2hlcmUgdGhleSB3aWxsIG9mZmVyIHlvdSBleHRyYXMgZm9yIHNvbWUgYWRkaXRpb25hbCAidGlwIi4gCklzIG5vdCBNci4gTW9zc2VyaSBkZXNpcmUgdG8gZ2V0IHNvbWUgaG90IHdlYXRoZXIgaW4gVmVnYXMsIGRlZmVuc2UgYXR0b3JuZXkgTWljaGFlbCBCYWNobmVyIHNhaWQgYXQgYSBNYXkgaGVhcmluZyB3aGVyZSBNb3NzZXJpIHRyYXZlbCByZXN0cmljdGlvbnMgd2VyZSBsaWZ0ZWQuIGp1c3Qgd2FudHMgdG8gZW5nYWdlIGluIGhpcyBsaXZlbGlob29kLCB3aGljaCBpcyBhIGxlZ2FsIGFjdGl2aXR5IGhlIGhhcyBkb25lIGZvciBtYW55LCBtYW55IHllYXJzLiBEaXN0cmljdCBKdWRnZSBKZXNzZSBGdXJtYW4gYWZ0ZXJ3YXJkIHJ1bGVkIFNtaXRoIGNvdWxkIHB1cnN1ZSBoaXMgY2FyZCBwbGF5aW5nIGNhcmVlciB1bnRpbCBoZSBpcyBzZW50ZW5jZWQgaW4gSmFudWFyeS4KSXQgd2FzIGEgZmluZSB3b3JkIHdpdGggbm8gcmFjaXN0IGltcGxpY2F0aW9ucywgaG93ZXZlciBoZSBiZWdhbiB1c2luZyBpdCB3aXRoIGV4cGxpY2l0IHJhY2lzdCBpbnRlbnRpb25zIGFuZCBoZSBrZXB0IHVzaW5nIGl0IHRoYXQgd2F5IGZvciB5ZWFycy4gCkhlIGFsc28ganVzdCBlYXRzIGEgbG90IG9mIHdoYXRldmVyLCBldmVuIGlmIGl0J3Mgbm90IG5lY2Vzc2FyaWx5IGdvb2QgZm9yIGhpbS4gCklmIHlvdSB3YW50IHRvIG11bHRpY2xhc3MgZ28gZm9yIGl0LCBpdCBqdXN0IHNwcmVhZHMgeW91ciB4cCBiZXR3ZWVuIHlvdXIgY2xhc3NlcyBhbmQgeW91IGxldmVsIHNsb3dlci4gTmV2ZXIgZHVhbCBjbGFzcyB1bnRpbCB5b3UgdW5kZXJzdGFuZCB0aGUgZ2FtZS4gWW91IGRvbiB3YW50IHlvdXIgZmlyc3QgcGxheXRocm91Z2ggb2YgQkcxIHRvIGJlIHlvdSBmZWVsaW5nIHdlYWtlciB0aGFuIHlvdXIgcGFydHkgdGhlIHdob2xlIHRpbWUuIER1YWwgY2xhc3MgbWVhbnMgeW91IGhhdmUgdG8gY2hvb3NlIGEgcG9pbnQgd2hlcmUgeW91IGlnbm9yZSBhbGwgdGhlIHhwIHlvdSBoYXZlIGdvdHRlbiB1cCB1bnRpbCB0aGF0IHBvaW50IGFuZCBzdGFydCBmcmVzaCBpbiBhbm90aGVyIGNsYXNzLiBZb3UgZG9uIGdldCBmdW5jdGlvbmFsaXR5IGZyb20geW91ciBvbGQgY2xhc3MgdGlsbCB5b3UgcGFzcyB0aGUgeHAgeW91IGhhZCBpbiB0aGUgZmlyc3QuIFN1cGVyIGZ1Y2t5LiBVbmxlc3MgeW91IHBsYXlpbmcgYSBzdHJhaWdodCBmaWdodGVyIG9yIHRoaWVmIEkgd291bGQgYWxzbyByZWNvbW1lbmQgcmVyb2xsaW5nIFNUQVRTIHVudGlsIHlvdSBjYW4gbWF4IHByZXR0eSBtdWNoIGV2ZXJ5dGhpbmc7IGVzcGVjaWFsbHkgaW1wb3J0YW50IHRoZSBtb3JlIGNsYXNzZXMgeW91IGhhdmUuIE9oIGFuZCBubyBtYXR0ZXIgd2hhdCBjbGFzcyhlcykgeW91IGFyZSwgaW52ZXN0IGluIGEgcmFuZ2VkIHdlYXBvbiBwcm9maWNpZW5jeSBlYXJseSBvbi4gUmFuZ2VkIHdlYXBvbnMgYXJlIHBvd2VyZnVsIGFuZCB5b3UgY2FuIG9mdGVuIHRha2Ugb3V0IG11bHRpcGxlIGVuZW1pZXMgYmVmb3JlIHRoZXkgZXZlbiB3YWxrIG92ZXIgdG8geW91LiBZb3UgYWxzbyBkb24gd2FudCB0byBiZSB0b3VjaGluZyBzb21lIGVuZW1pZXMgdW50aWwgeW91IG11Y2ggc3Ryb25nZXIgKGxpa2UgZ2hhc3RzIG9yIHRob3NlIGdyZXkgdGhpbmdzIGluIHRoZSBjbG9ha3dvb2QpLiBUaGUgZ2FtZSBpcyBtdWNoIGVhc2llciBmb3IgYSBnb29kIGFsaWdubWVudCBwYXJ0eSB0b28uIEdvb2QgbHVjawpIZSBwbGF5ZWQgcmVhbGx5IHdlbGwgaW4gdGhlIGhhbmRzIEkgc2F3IGF0IFRyaXRvbiwgYnV0IGp1c3QgZGlkbiBoYXZlIGFueSBsdWNrIHdpdGggdGhlIGRlY2suIEkgdGhpbmsgSSBzYXcgaGltIGxvc2UgYXQgbGVhc3QgMiAzIGh1Z2UgYWxsIGlucyB3aGVyZSBoZSBoYWQgdGhlIGJlc3Qgb2YgaXQuClRoZSBQTE8gRmluYWwgd2FzIGJlaW5nIHRlbGV2aXNlZCBieSBFU1BOLCBzbyB0aGUgZGF5IHN0YXJ0ZWQgd2l0aCBhbiBFU1BOIGludGVydmlldyBhbmQgc3VycHJpc2luZ2x5IGl0IHdlbnQgd2VsbC4gRm9yIGEgY2hhbmdlIHRoZSBpbnRlcnZpZXdlciBzZWVtZWQgdG8gdW5kZXJzdGFuZCBwb2tlci4gVGhpcyBpcyBBbWVyaWNhLiAKVGhhbmsgZ29kIEkgd2FzbiBhcm91bmQgYW55IGJhYmllcyBvciBvbGQgcGVvcGxlIGR1cmluZyB0aGF0IHRpbWUgYmVjYXVzZSB3aG9vcGluZyBjb3VnaCBjYW4ga2lsbCB0aGVtLiBJIGFsbW9zdCBibGFja2VkIG91dCBmcm9tIGxhY2sgb2Ygb3h5Z2VuIHNldmVyYWwgdGltZXMuIApZZWFoLCBoZXIgc29uZ3MgZG9uIHJlYWxseSByaXAgb2ZmIG90aGVyIHNvbmdzLCBidXQgdGhlIGJlYXQgaW4gbW9zdCBvZiBoZXIgc29uZ3Mgc291bmRzIHByZXR0eSBub3JtYWwuIApCdXQgSSBzZWUgbm93IHRoYXQgd2FzbiB0aGF0IGJhZCBvZiBhIHByb2JsZW0sIGFuZCB3aXRoIGEgbGl0dGxlIG1vcmUgcmVzZWFyY2ggYW5kIHBvc3NpYmx5IGEgZGlmZmVyZW50IEtlZXBhc3MgY2xpZW50IEkgYmV0IHRoYXQgY2FuIGJlIHNvbHZlZC4uIApWYW5lc3NhIFNlbGJzdDogVGhlcmUgYXJlIGZldyB0b3VybmFtZW50IHBsYXllcnMgYXMgZmVhcmVkIGFzIFNlbGJzdCwgbWFuIG9yIHdvbWFuLiBIZXIgcmVsZW50bGVzcyBhZ2dyZXNzaW9uIGNhdXNlcyBvcHBvbmVudHMgdG8gd2lsdCB1bmRlciB0aGUgcHJlc3N1cmUsIGFuZCBubyBvbmUgaXMgbW9yZSBjYXBhYmxlIG9mIGEgbWFzc2l2ZSBibHVmZiB0aGFuIFZhbmVzc2EuCkluIGNhc2UgeW91IGhhdmUgYSBoYW5kIG9mIEtpbmdzIG9yIGJldHRlciwgeW91IHdpbGwgYmUgYXdhcmRlZCBhIHByaXplIGFjY29yZGluZyB0byB0aGUgUGF5dGFibGUuIApQYXJ0IGEgcG91ciBmaW5pciBtb24ga2Fib2NoYSBkZSBsYSBzZW1haW5lIGRlcm5pcmUsIGogZmFpdCBkdSAia2Fib2NoYSBubyBuaW1vbm8iIChwb3RpbWFycm9uIG1pam90KS4gRCBqIHZ1IGRlcyBrYWJvY2hhIGRhbnMgdW4gbWFnYXNpbiBiaW8gbCBqb3VyIChiaW9jb29wIGplIGNyb2lzKSwgc291cyBsZSBub20gInBvdGltYXJyb24gdmVydCIuIEMgdWx0cmEgc2ltcGxlIChqIHV0aWxpcyBjZXR0ZSByZWNldHRlKSwgaWwgc3VmZml0IGRlIGNvdXBlciBsZSBwb3RpbWFycm9uIGVuIGdyb3MgbW9yY2VhdXggOiBjb3VwZXIgY2hhcXVlIHF1YXJ0aWVyIGVuIHRyb2lzIHRyYW5jaGVzIHB1aXMgY2hhcXVlIHRyYW5jaGUgZW4gdHJvaXMuIApUaGVpciB3b3JrIHdhcyByZWZsZWN0aW9uIG9uIHRydXRoIHRoYXQgYXNzdW1lZCB3aGF0IHdlIHdvdWxkIGNhbGwgYSByZWxpZ2lvdXMgd29ybGQgdmlldywgZXZlbiB0aG91Z2ggbm93IHdlIHRlbmQgdG8gY2xhc3MgUGxhdG8gYXMgYSBwaGlsb3NvcGhlciBhbmQgaWdub3JlIHdoYXQgaGUgc2F5cyBhYm91dCBHb2QuIEFzIGFub3RoZXIgZXhhbXBsZSwgdGhlcmUgd2VyZSBtZWRpZXZhbCBzdG9yaWVzIGFib3V0IGZhaXJpZXMgYW5kIG90aGVyIGJlaW5ncyB0aGF0IGRpZCBub3QgY29tZSBmcm9tIHRoZSB0cmFkaXRpb25hbCBDaHJpc3RpYW4gYmVsaWVmLCBhbmQgbWF5IGV2ZW4gaGF2ZSBiZWVuIG9mZmljaWFsbHkgZGlzY291cmFnZWQsIGJ1dCB3ZXJlIHN0aWxsIHBhcnQgb2Ygd2hhdCB3ZSBtaWdodCBjYWxsIHRoZSByZWxpZ2lvdXMgd29ybGR2aWV3IG9mIHBlb3BsZSBhdCB0aGUgdGltZS4gVGhleSBibGVuZGVkIHRoZWlyIENocmlzdGlhbml0eSB3aXRoIG90aGVyIGJlbGllZnMgYW5kIGZvbGsgcHJhY3RpY2VzLCBzdWNoIGFzIHVzaW5nIGNyb3NzZXMgdG8gcHJvdGVjdCBmcm9tIHRoZXNlIGNyZWF0dXJlcyBvciBhdm9pZGluZyBhbmNpZW50IHN0b25lIHJpbmdzLi4gCkZldyBwZW9wbGUgYXJlIGR1bWIgZW5vdWdoIHRvIHRoaW5rICJpdCBzYXlzIEFyenQgYW5kIHRoYXQgbWVhbnMgYSBtYW4sIHNvIEkgbm90IGdvaW5nIHRvIHN0dWR5IHRoYXQuIiBBdCB0aGUgZW5kIG9mIHRoZSBkYXksIG1vc3QgeW91bmcgYWR1bHRzIGluZGVlZCBkbyBhIGxvdCBvZiByZXNlYXJjaCBiZWZvcmUgZGVjaWRpbmcgd2hhdCBraW5kIG9mIGNhcmVlciB0byB2ZW50dXJlIGludG8gYW5kIGxhbmd1YWdlIHBsYXlzIGEgaG9tZW9wYXRoaWMgcGFydCBpbiB0aGF0Li4gCk9uZSBpZGVhIGlzIHRoYXQgImJ1Y2siIGlzIGp1c3QgYSBzaG9ydGVuZWQgZm9ybSBvZiB0aGUgd29yZCAic2F3YnVjaywiIHdoaWNoIGlzIHNsYW5nIGZvciBhICQxMCBiaWxsLiAKVGhleSBob25vciBqb3VybmFsaXN0IHdpdGggYXdhcmRzIGZvciB0aGVpciBoZWxwIGluIGJyaW5naW5nIGxpZ2h0IHRvIGF1dGlzbS4gCkNhcmUgaGFzIHRvIGJlIHRha2VuIHRvIGV2ZW4gY2xvc2UgYSBoYXRjaCBiZWNhdXNlIHRoZSBoYXRjaCBpcyBoZWF2eSBlbm91Z2ggdG8gY3J1c2ggYm9uZXMuIApNeSBmaXJzdCB0aW1lIHRvIHRoZSB3c29wIGFuZCBJIGhlYXJkIHBsZW50eSBvciBob3Jyb3Igc3RvcmllcyBhYm91dCB0aGUgZGVhbGVycy4gSSBiZWVuIGluIFZlZ2FzIGJlZm9yZSBqdXN0IG5vdCBhcm91bmQgdGhpcyB0aW1lLiBSZWdhcmRsZXNzIEkgcGxheWluZyA1LzEwIEkgbm90IGluIHRoZSBoYW5kIGJ1dCB0aGUgZGVhbCByIGlzIGFuIG9idmlvdXMgdGVycmlibGUgZGVhbGVyLiAzIGJldCBwb3QgcHJlIHRocmVlIHdheS4gQm9hcmQgaXMgSyBKIDggNSB0d28gaGVhcnRzIGFuZCBhYm91dCAyMjAwIGluIHRoZSBwb3QuIEd1eSB3aG8gMyBiZXQgYW5kIHdhcyBmaXJzdCB0byBhY3Qgc2hvdmVzIGZvciBoaXMgcmVtYWluaW5nIDEyMDAuIE5leHQgZ3V5IHRoaW5rcyBmb3IgYSBsaXR0bGUgYml0IHRoZW4gY2FsbHMuIERlYWxlciBqdXN0IGF1dG8gdHVybnMgb3ZlciB0aGUgcml2ZXIgd2hpY2ggd2FzIHRoZSA5IG9mIGhlYXJ0cyBiZWZvcmUgdGhlIGxhc3QgZ3V5IGFjdGVkLiBTbyBJIGd1ZXNzIHRoZSBydWxlIGlzIHRoZXkgaGF2ZSB0byByZSBzaHVmZmxlIHRoZSByaXZlciBzaW5jZSB0aGUgbGFzdCBndXkgaGFkIGFsbCB0aGUgaW5mbyBiZWZvcmUgaGUgZ290IHRvIGFjdC4gT2J2aW91c2x5IHRoZSBndXkgd2hvIGNhbGxlZCBoYWQgQTEwIG9mIGhlYXJ0cyBhbmQgZnJlYWtlZCBvdXQuIFRoZSBndXkgZW5kcyB1cCBmb2xkaW5nIGFueXdheXMgYW5kIHRoZW4gdGhlIHJpdmVyIGlzIGEgNSBvZiBjbHVicy4gSSB3b3VsZCBoYXZlIGJlZW4gZnVja2luZyBwaXNzZWQuIEkga25vdyBpdCBzdGlsbCBhIHJhbmRvbSByaXZlciBidXQgdGhhdCBnYXJiYWdlLiBUaGUgZ3V5IHdobyBzaG92ZWQgaGFkIEpKIGZvciBhIHNldCBhbmQgZW5kcyB1cCB3aW5uaW5nIGJlY2F1c2Ugb2YgYSBkZWFsZXIgbWlzdGFrZS4gQnJ1dGFsLgpBIENvbnZlcnNhdGlvbiBXaXRoIHRoZSBNYW4gQmVoaW5kIEJpZyBCaXJkIGFuZCBPc2NhciB0aGUgR3JvdWNoCkZvciBzaW1wbGljaXR5IGxldCdzIHNheSBUaGUgZnVyIGNvbG9yIGlzIGNvbnRyb2xsZWQgYnkgb25lIGdlbmUgd2Ugd2lsbCBjYWxsICJjIiwgd2hlcmUgdGhlIGdlbm90eXBlIENDIG1ha2VzIHdoaXRlIGZ1ciwgY2MgbWFrZXMgYnJvd24gZnVyIGFuZCBDYyBtYWtlcyBibGFjay4gVGhlIGRvZ3MgZG9uJ3QgY2FyZSBhYm91dCBmdXIgY29sb3Igd2hlbiB0aGV5IGJyZWFkLCBhbmQgdGhlIGZ1ciBjb2xvciBnZW5lIGlzIG9ubHkgbWFyZ2luYWxseSBsaW5rZWQgdG8gb3RoZXIgZ2VuZXMgd2hpY2ggYWZmZWN0IHRoZSBkb2dzIGZpdG5lc3MuLiAKQWxzbywgZG9uIHB1dCB0b28gbXVjaCBvbiBjYWZmZWluZSB0byBnZXQgeW91IHRocm91Z2guIEkgdXNlZCB0byBibGFzdCB0aHJvdWdoIGVuZXJneSBkcmlua3MgZGFpbHkgYW5kIEkgZmVsdCBsaWtlIEkgd2FzIGFsd2F5cyBmaWdodGluZyBhIGNyYXNoLiAKSG9uZXN0bHksIEkgd2VudCBpbnRvIHdhdGNoaW5nIEJhZCBNb21zIGV4Y2x1c2l2ZWx5IGZvciB0aGUgY29tZWR5LiBJIGNhbWUgb3V0IGZpcm1lciBvbiBteSBDRiB2aWV3IHBvaW50LiAKU29tZXRoaW5nIHRoZSBIYXNsYW1zIGhhdmUgYmVlbiAiaHlwZXJmb2N1c2VkIiBvbiwgRGVlIHNhaWQsIGlzIGFpZGluZyB0aGUgQ2xldmVsYW5kIE1ldHJvcG9saXRhbiBTY2hvb2wgRGlzdHJpY3QgZWZmb3J0cyB0aGF0IHdlcmUgc3BhcmtlZCBieSBhIHJlcXVlc3QgZnJvbSBDTVNEIENFTyBFcmljIEdvcmRvbiB0byBoZWxwIHRoZSBkaXN0cmljdCdzIGZsYWdnaW5nIGF0dGVuZGFuY2UuCldlIGRvbid0IGFwcHJlY2lhdGUgbHVjayBpbiBsaWZlIHdoZW4gdGhpbmdzIGFyZSBnb2luZyB3ZWxsLiAKSmV0enQgYW4gZGVyIGxpbmtlbiBTZWl0ZSA4IE0gYXVzIGRlbiBSYW5kbWFzY2hlbiBhdWZuZWhtZW4gPSA5IE0gYXVmIGRlciBOYWRlbC4gRGFzIEF1Zm5laG1lbiBrYW5uIGR1cmNoIGRpZSBnYW56ZSBSYW5kbWFzY2hlIGVyZm9sZ2VuLiBJY2ggc3RlY2hlIG51ciBkdXJjaCBkaWUgdm9yZGVyZW4gRmRlbiBkZXIgUmFuZG1hc2NoZW4sIGRhcyBlcmdpYnQgaW4gbWVpbmVuIEF1Z2VuIGVpbmVuIHNjaG5lbiBFZmZla3QuIApKb2IgRGVzY3JpcHRpb24gZm9yIENodXJjaCBDdXN0b2RpYW4KTG9uZyB0ZXJtIHBvdGVudGlhdGlvbiAoTFRQKSB3YXMgZW5oYW5jZWQgaW4gaGlwcG9jYW1wYWwgdGlzc3VlIHNsaWNlcyBpbiB0aGUgZGVudGF0ZSBneXJ1cyBvZiBydW5uaW5nIHZlcnN1cyBzZWRlbnRhcnkgbWljZSBbNjNdIGFuZCBpbiB2aXZvIGluIHJhdHMgdGhhdCBoYWQgYmVlbiBob3VzZWQgd2l0aCBhIHJ1bm5pbmcgd2hlZWwgWzY0XSBvciBnaXZlbiBmb3JjZWQgdHJlYWRtaWxsIGV4ZXJjaXNlIFszMl0uIApNeSBzaG93ZXIgaXMgY29lZCBidXQgYSBmcmllbmQgb2YgbWluZSBoYWQgaGlzIGFuZCBoZXJzIHNlcGFyYXRlIHNob3dlcnMgb24gc2FtZSBkYXkuIFNoZSB3YXMgbHVja3kgZW5vdWdoIHRvIGhhdmUgaGVyIHNpc3RlciBsaXZlIGNsb3NlIGJ5IHNvIHRoZSBtZW4gd2VudCB0byB0aGF0IGhvdXNlIGFuZCB0aGUgd29tZW4gd2VudCB0byBoZXIgaG91c2UuIFRoZSBndXlzIHdlcmUgYXNrZWQgdG8gYnJpbmcgZGlhcGVycyB0byBidXkgaW50byBhIGdhbWUgb2YgcG9rZXIuIFdoZW4gaXQgd2FzIHRpbWUgdG8gb3BlbiBwcmVzZW50cywgdGhlIGRhZCBhbmQgZ3V5cyBjYW1lIG92ZXIgc28gZGFkIGNvdWxkIGJlIGEgcGFydCBvZiBpdC4gSSB0aG91Z2h0IHRoaXMgd2FzIGEgY29vbCBpZGVhLiBGb3Igb3VyIHNob3dlciwgaHViYnkgaXMgZ29pbmcgdG8gY3JlYXRlIGEgbWFuIGNhdmUgZm9yIHRoZSBndXlzIGluIHRoZSBnYXJhZ2Ugc28gdGhleSBjYW4gaGF2ZSB0aGVpciBtYW4gdGltZSBidXQgc3RpbGwgYmUgYXJvdW5kIHRvIGVuam95IGluIGZvb2QsIGNvbXBhbnkgYW5kIHNvY2lhbGl6ZS4KIkhlJ3MgbW9yZSBjb25jZXJuZWQgd2l0aCB0aGUgdmljdGltcyAuIHRoYW4gd2hhdCBoZSBoYXMgZG9uZS4iCkRhbGUgTG9vbWlzIFZhbiBFcHBzLCBib3JuIGluIENhbmFuZGFpZ3VhLCBOZXcgWW9yayBvbiBGZWJydWFyeSAxMywgMTk0MiwgZGllZCBwZWFjZWZ1bGx5IGluIEhpbHRvbiBIZWFkLCBTb3V0aCBDYXJvbGluYSBhZnRlciBhIHNob3J0IHRlcm0gaWxsbmVzcyBvbiBNb25kYXksIEphbnVhcnkgNiwgMjAxNC4gUmlsbGFubiBGdWxsZXIgVmFuIEVwcHMsIGhpcyB3aWZlIG9mIG5lYXJseSBmb3J0eSB5ZWFycywgd2FzIGJ5IGhpcyBzaWRlLiBEYWxlIHdhcyBhIGxvbmcgdGVybSByZXNpZGVudCBvZiBDZW50cmFsIE5ldyBZb3JrIGFuZCBhIHBpbGxhciBvZiBpdHMgbGVnYWwgYW5kIHJlYWwgZXN0YXRlIGRldmVsb3BtZW50IGNvbW11bml0aWVzLiAKVGhlIFBhaXIgUGx1cyB3YWdlciBpcyBwYWlkIG9uIGEgcGF5IHNjYWxlIGJhc2lzIHRoYXQgdGhlIHBsYXllciBoYW5kIHdpbGwgYmUgYSBwYWlyIG9yIGJldHRlci4gQWZ0ZXIgYWxsIEFudGUgYW5kIFBhaXIgUGx1cyB3YWdlcnMgYXJlIHBsYWNlZCwgdGhyZWUgY2FyZHMgYXJlIGRlYWx0IHRvIGVhY2ggcGxheWVyIGFuZCB0aGUgZGVhbGVyLiAKU2UgaWwgbWFzc2FnZ2lhdG8gc2kgYXZ2aWNpbmEgYWxsYSBlaWFjdWxhemlvbmUsIG1pIGZlcm1vIHBlciB1biBwbycgZGkgdGVtcG8gaW4gbW9kbyBjaGUgaWwgbGluZ2FtIGRpdmVudGEgcGkgc29mdCwgcG9pIGRpIHJpcHJlbmRvIGlsIG1hc3NhZ2dpby4gQ29udGludW8gcGkgdm9sdGUgZSBxdWVzdG8gbG8gYWl1dGEgYSBjb250cm9sbGFyZSBsYSBzdWEgZWlhY3VsYXppb25lLiBTaSBwdSBpbXBhcmFyZSBhIGdvZGVyZSBkaSBvcmdhc21vIHNlbnphIGVpYWN1bGF6aW9uZS4KUHJvZml0YW50IGRlIHF1ZWxxdWVzIGpvdXJzIGRlICJjbGliYXQiLCBhdSBsaWV1IGRlIHZhcXVlciAgcXVlbHF1ZXMgYWN0aXZpdHMgcGFyaXNpZW5uZXMsIGonYWkgZXUgbCdpZGUgZGUgcGFydGlyIGRldXggdHJvaXMgam91cnMgZW4gdGhhbGFzc28uIApSZXNpZGVudHMgaGF2ZSBhIGxvdCBvbiB0aGVpciBtaW5kIGFuZCBhIGxvdCB0byB3b3JyeSBhYm91dC4gCkkgdiBybGRlbnMgcHJvZ3JhbW1lcmluZyBrYW4gZHUgbCByYSBkaWcgZXR0IHByb2dyYW1tZXJpbmdzc3ByIGsgc29tIGZsb2RlbiBtZW4gZGUgc2x1dGFyIGF0dCBmIHJsb3JhIHBlbmdhciB0b3RhbHQgdmVuIG9tIGRlIHZpbm5lciBuIGdyYSBrcnVrb3IuIEtleCBzayByYXJlbiwgb20gZGUgYW52IG5kcyBrb3JyZWt0LCBrb21tZXIgYXR0IHNrIHJhIHNsb3RzIG1lbiBvZnRhc3QgbiByIGVuIGF1a3Rvcml0YXRpdiByZWNlbnNlbnRlbiBoYXIgZW4gbWVuaW5nIGVsbGVyIHR2IG9tIGRldC4gCkl0IG1heSBmZWVsIHdyb25nIHRvIGxlYXZlIGFuZCBJIHVuZGVyc3RhbmQgdGhhdCB2aWV3IGFzIEkgaGVsZCBpdCBteXNlbGYgZm9yIGZhciB0b28gbG9uZywgYnV0IGlmIHRoZXkgYXJlbid0IHJlc3BlY3RpbmcgeW91IHRoZW4gdGhlcmUncyBubyByZWFzb24gZm9yIHlvdSB0byByZXNwZWN0IHRoZW0uLiAKQ2FzaCBHYW1lIHN0cnVjdHVyZXMgYXJlIHNpbXBseSBhIGpva2UsIHRoZSBhY3Rpb24gaXMganVzdCBiZXlvbmQgaW5zYW5lIHllcywgYnV0IHRoZXkgaGF2ZSBzdHJpY3QgcnVsZXMsIHN1Y2ggYXMgbm8gYnVtIGh1bnRpbmcsIGFuZCBubyBwcmVkYXRvcnkgYmVoYXZpb3VyLCBJIGdldCB0aGUgYnVtIGh1bnRpbmcgcGFydCBidXQgY2hlY2sgdGhpcyBvdXQuIApCZXlvbmQgdGhhdCwgdGhlIG1vc3QgYmFzaWMgYXJndW1lbnQgZm9yIHRoZSBzZXBhcmF0aW9uIG9mIHNleCBhbmQgZ2VuZGVyIGlzIHRoZSBleGlzdGVuY2Ugb2YgdHJhbnMgcGVvcGxlIGl0c2VsZi4gVW5sZXNzIHlvdXIgYXJndW1lbnQgaXMgdGhhdCB0cmFucyBwZW9wbGUgc2hvdWxkIG5vdCBiZSBhY2NlcHRlZCwgdGhhdCB0aGVpciBpZGVudGl0aWVzIGFyZSBpbnZhbGlkLCBhbmQgdGhhdCB0aGVpciBzeW1wdG9tcyBhcmUgYWxsIHB1cmVseSBkdWUgdG8gbWVudGFsIGlsbG5lc3MsIHlvdSBoYXZlIHRvIGFja25vd2xlZGdlIHRoYXQgc2V4IGFuZCBnZW5kZXIgY2FuIGJlIGRpZmZlcmVudC4gClRoZXkgYXJlIGNvbmZpZGVudCBpbiB0aGVpciBza2lsbHMgdG8gcmVhZCBwbGF5ZXJzIHRoYXQgdGhleSBkb24ndCBoYXZlIHRvIGJldCBvbiBldmVyeSAicG9zc2libGUiIGhhbmQgdGhleSBjb3VsZCBnZXQuIApJdCdzIGJlZW4gMTkgeWVhcnMgc28gSSdtIGdlbmVyYWxseSBvayB3aGVuIHRoaXMgZGF5IGNvbWVzIGV2ZXJ5IHllYXIsIGJ1dCB0aGlzIHllYXIgaXQncyBoaXR0aW5nIG1lIGhhcmRlci4gCk5vdywgZXZpZGVuY2UgaW4geW91ciBjYW1wIGlzIHRoYXQgdGhlIFNvdmlldCBCcmFuZCBvZiBDb21tdW5pc20gd2FzIHZlcnkgZm9jdXNlZCBvbiBhbmQgdGhlIG9mIGNvbW11bmlzbSBwZXIgTWFyeCwgdGhhdCB3b3VsZCBpbmRpY2F0ZSB0aGF0IHRoZWlyIGZvY3VzIHdvdWxkbiBiZSBvbiB0ZXJyaXRvcmlhbCBleHBhbnNpb24gdG8gc3ByZWFkIFNvdmlldCBzdHlsZSBDb21tdW5pc20sIGJ1dCBhdCB0aGUgc2FtZSB0aW1lLCBpdCBkb2VzbiBwcmVjbHVkZSBhIHJhdGlvbmFsZSBmb3IgZXhwYW5zaW9uIChhbmQgaW5kZWVkIGl0IG5vdCBsaWtlIHRoZSBVU1NSIGRpZG4gZXhlcmNpc2Ugc29tZSBkZSBmYWN0byBleHBhbnNpb24gaW4gdGhlIGZvcm0gb2YgcHVwcGV0IHN0YXRlcy9wcm94eSB3YXIgZHVyaW5nIHRoZSBDb2xkIFdhcikuCkkgdGhpbmsgSSBnb3R0ZW4gbW9yZSBncnVtcHkgYWJvdXQgdGhpcyB0eXBlIG9mIHN0dWZmIHNpbmNlIHN0YXJ0aW5nIGltbXVub3N1cHByZXNzYW50cyBiZWNhdXNlIHlvdSByaWdodCwgdGhhdCBjb2xkIGRvZXNuIGp1c3QgdGFrZSBtZSBvdXQgZm9yIGEgd2VlayBhbmQgc3Rlcm9pZHMgYXJlIHN1Y2ggYSBob3JyaWJsZS9hbWF6aW5nIGRydWcuIApZb3VyIGNvc3QgYmFzaXMgd2lsbCBiZSB0aGUgZmFpciBtYXJrZXQgdmFsdWUgb2YgdGhlIHNoYXJlcyBhcyBvZiB0aGUgZ2lmdCBkYXRlLCBub3QgeW91ciBmYXRoZXJzIGJhc2lzLiBTbyBpdCBkZXBlbmRzIHdoZW4gdGhlIHNoYXJlcyB3ZXJlIGdpZnRlZCB0byB5b3UuIElmIHRoZSBzaGFyZXMgaGF2ZSBnb25lIHVwIHNpbmNlIHRoZSBnaWZ0IHlvdSB3aWxsIHBheSBhIGNhcGl0YWwgZ2FpbnMgdGF4IG9uIHRoZSBhbW91bnQgb3ZlciB5b3VyIGNvc3QgYmFzaXMuIApNeSBjbGllbnQgaG9uZXN0bHkgZmVlbHMgaGUgc2F3IHRoZSBBZnJpY2FuIEFtZXJpY2FuIHdobyBzdGFydGVkIHRoZSBjb25mcm9udGF0aW9uIGlsbGVnYWxseSwgd2V0IGhpcyB0cm91c2VycyB3aGVuIGhlIHdhcyBzbGFwcGVkIHRodXMgbmVlZGluZyBhc3Npc3RhbmNlIGZyb20gaGlzIGZ1dHVyZSBiYWxsZXJpbmFzIGFyb3VuZCBoaW0gYmVjYXVzZSBoZSB3YXMgbm90IG1hbiBlbm91Z2ggaGltc2VsZiB0byBoYW5kbGUgdGhlIHNpdHVhdGlvbi4gTXkgY2xpZW50IGZlZWxzIHRoZSBkaWFwZXJzIHdvdWxkIGFzc2lzdCB0aGUgQWZyaWNhbiBBbWVyaWNhbiBib3VuY2VyIGluIGhpcyBqb2IgaW4gdGhlIGZ1dHVyZSwgaW5jYXNlIG5leHQgdGltZSBoZSB3ZXRzIGhpbXNlbGYgb3IgdGhlIG90aGVyIGJvdW5jZXJzIHBlZSBpbiB0aGVpciB0cm91c2Vycy4gCk1vb24gbWFkZSBpdCB0byB0aGUgaGVhZHMgdXAgZmluYWxlIHdpdGggYSBzdHJpbmcgb2YgaW1wcm9iYWJsZSBUS09zLCBpbmNsdWRpbmcgb25lIG9mIGhpZ2hseSB0b3V0ZWQgcHJvIFBoaWwgSXZleSwgd2hvIHdlbnQgb3V0IGluIHNldmVudGggcGxhY2UsIGFuZCB0aGVuIEJlZ2xlaXRlci4gVGhvc2UgdHdvIGtub2Nrb3V0cyBjYW1lIGluIHJhcGlkIHN1Y2Nlc3Npb24sIGFuZCBib3RoIHRpbWVzIE1vb24gaGVsZCBhY2UgcXVlZW4sIHdhcyBiZWhpbmQgYXQgdGhlIHN0YXJ0IGFuZCB0aGVuIGdvdCBqdXN0IHRoZSBjYXJkIGhlIG5lZWRlZC4gSW4gSXZleSdzIGNhc2UsIE1vb24gZmFjZWQgYW4gYWNlIGtpbmcgYnV0IHdvbiB3aGVuIGhlIHBhaXJlZCBoaXMgcXVlZW4uIEluIEJlZ2xlaXRlcidzIGNhc2UsIE1vb24gZmFjZWQgYSBwYWlyIG9mIHF1ZWVucyBhbmQgd29uIHdoZW4gaGUgcGFpcmVkIGhpcyBhY2UuIFNheXMgTGl0dGxlOiAiSGUgd2FzIGdldHRpbmcgYmV0dGVyIHRoYW4gYXZlcmFnZSBkaXN0cmlidXRpb24gdGhyb3VnaG91dCB0aGUgdG91cm5hbWVudCwiIHdoaWNoIGlzIHBybyBzcGVhayBmb3IgbGFuZGluZyBraWxsZXIgY2FyZHMuCkRyYWdvbidzIHBvaW50IG9mIHZpZXcgbG92ZSB0aGUgc3R1ZmYuIEl0IHJlYWxseSBnb29kLiAKWW91IGNhbiBhbHNvIHNlZSB0aGUgd2VpZ2h0IGluIHlvdXIgZmVldCBzaGlmdCBiYWNrIHRvIHlvdXIgaGVlbHMgd2hpY2ggbWF5IGJlIGR1ZSB0byB0aGF0IGhpcCBzaGlmdCBidXQgaXMgYWxzbyBwcm9iYWJseSBjYXVzaW5nIHNvbWUgb2YgaXQuLiAKSXMgaGUgdGhlIGJlc3QgYm94ZXIgZXZlciBtYWRlLCBhYnNvbHV0ZWx5LiAKSXMgdGhlIGZsb29yIHBsYW4gZm9yIHRoZSBFTklBQyAoRWxlY3Ryb25pYyBOdW1lcmljYWwgSW50ZWdyYXRvciBBbmQgQ29tcHV0ZXIsIGIuIDE5NDMgNDUpIHdoaWNoIHdhcywgYmFzaWNhbGx5LCB0aGUgd29ybGQncyBmaXJzdCBvcGVyYXRpb25hbCwgaGlnaCBzcGVlZCBkaWdpdGFsIGNvbXB1dGVyLCBhbmQgKGFib3V0KSBtYXJrZWQgdGhlIGJlZ2lubmluZyBvZiB0aGUgbmV4dCBzdGFnZSBvZiB0ZWNobm9sb2dpY2FsIHJldm9sdXRpb24uIFdoYXQgd2Ugc2VlIGFib3ZlIGlzIHRoZSBmbG9vciBwbGFuIGZvciB0aGUgY29tcHV0ZXIgd2l0aCBubyBtb25pdG9yIEkga25vdyB0byBtb3N0IHBlb3BsZSB3b3JraW5nIHRvZGF5IHdpdGggYSBjb21wdXRlciB0aGF0IHRoZSBpZGVhIG9mIGEgImZsb29yIHBsYW4iIGZvciBhbnl0aGluZyB0aGF0IGlzIG5vdCBpbiBhIGRhcmsgcGxhY2UgYXQgTlNBIGlzIG5vdCBlYXNpbHkgY29uY2VpdmFibGUuIApQZXJhc3BlcmE0NDEgIDQsMjc0IHBvaW50cyAgc3VibWl0dGVkIDI5IGRheXMgYWdvClRoZSBmaXJzdCBhZHZlbnR1cmUgbGFzdGVkIGFib3V0IHR3byBvciB0aHJlZSBkYXlzIG9mIHBsYXksIGJhY2sgaW4gMjAxNiwgYW5kIHNoZSBlbmpveWVkIGl0LiBJdCBmZWF0dXJlZCBhIHZlcnkgbmltYmxlIFBDIGFnYWluc3Qgc2V2ZXJhbCAodXN1YWxseSBsYXJnZXIpIGVuZW1pZXMsIGFuZCBzaGUgd2llbGRlZCBhIGNvbWJpbmF0aW9uIGJsb3dwaXBlL3F1YXJ0ZXJzdGFmZiB0byBoYXJhc3MgYW5kIGFubm95IHRoZW0uLiAKT25lIGNhbGwgZnJvbSB5b3VyIGJhbmtzIGZyYXVkIGRpdmlzaW9uIGFuZCBnbWFya2V0IHdpbGwgcHJvYmFibHkgc3VkZGVubHkgYmUgcmlnaHQgb24geW91ciBjYXNlLiBUYWtlIHNjcmVlbnNob3RzIHRvIHlvdXIgYmFuayBpbiBjYXNlIHRoZXkgYXNrIGZvciB0aGVtLmluIGZ1dHVyZSBpIHJlY29tbWVuZCBDb3VwYW5nLiBJdCBzb29vIG11Y2ggYmV0dGVyIHRoYW4gU2hpdG1hcmtldC4gClRvIGJlIGZhaXIsIGl0IG5vdCBleGNsdXNpdmUgdG8gayBwb3AuIApCbGFjayBQYW50aGVyIGNhc3QgY2VsZWJyYXRlIHRyaXVtcGhhbnQgd2luIGFmdGVyIHNjb3JpbmcuIExhZHkgR2FnYSB3aW5zIHRoZSBiYXR0bGUgb2YgdGhlIHBsdW5naW5nIG5lY2tsaW5lIGFsb25nc2lkZS4gTGFkeSBHYWdhIHJvY2tzIERpb3IgZ293biB0aGF0IGRlYnV0ZWQgb24gdGhlIGNhdHdhbGsganVzdCBhLiAKVGhpcyA3MTYgZ3Vlc3Qgcm9vbSBwcm9wZXJ0eSwgbG9jYXRlZCBvbiB0aGUgRnJhbmsgUy4gRmFybGV5IE1hcmluYSwgd2FzIHRyYW5zZm9ybWVkIGJ5IG93bmVycyBMYW5kcnkncyBJbmMuIFRoZSBwcm9wZXJ0eSBmZWF0dXJlcyB3b3JsZCBjbGFzcyByZXN0YXVyYW50cyBsaWtlIENoYXJ0IEhvdXNlIGFuZCBWaWMgQW50aG9ueSdzIFN0ZWFraG91c2UsIEhhdmVuIE5pZ2h0Y2x1YiwgcmV0YWlsIG91dGxldHMgYW5kIGEgbHV4dXJ5ICQ2IG1pbGxpb24gc3BhIGFuZCBzYWxvbi4KVGhlIGFlc3RoZXRpYyBhbmQgYXJ0IHN0eWxlIGhhcyByZWFsbHkgZ29uZSB0byBzaGl0LiBFdmVyeXRoaW5nIGZlZWxzIHNvIGJyaWdodCBhbmQgZmxhc2h5LiBUaGUgaW5zYW5lIGFtb3VudCBvZiBjb3NtZXRpY3MgYW5kIGp1c3QgaG93IHRhbWUgZXZlcnl0aGluZyBpcyBtYWtlcyBtZSBmZWVsIGxpa2UgaSBwbGF5aW5nIGF0IGEgcGFpbnRiYWxsIGFyZW5hIGFnYWluc3QgYSBncm91cCBvZiBraWRzLiAKQnV0IGl0IHNob3VsZCBoYXZlIG5ldmVyIGhhcHBlbmVkIC4gCklmIHlvdXIgcHJvZ3JhbSBkb2VzIG5vdCBwcm92aWRlIGNvb3BlcmF0aXZlIGVkdWNhdGlvbiBvcHBvcnR1bml0aWVzLCB5b3UgY2FuIHN0aWxsIGdldCB0aGlzIHR5cGUgb2YgdHJhaW5pbmcuIE1hbnkgam9icyBvZmZlciBzb21lIG9uIHRoZSBqb2IgdHJhaW5pbmcgdG8gbmV3IGhpcmVzLiAKQnV0IG5vbmUgaW4gVVMgQmlsbGJvYXJkLiBXaGljaCBpcyBhIG1ham9yIGZhaWwuIApTbyB3aXRoIHRoaXMgYW5ub3VuY2VtZW50LCBJIHdhcyB1cCB0byBteSBndXRzIG9mIHdvbWVuIHdpdGggdGVhcnMgb2Ygam95LCBlbmNvdXJhZ2luZywgYW5kIG9mZmVyaW5nIHN1cHBvcnQgdG8gaGVscCBnZXQgdGhhdCBiYWJ5IGhlcmUuCkVzc2VudGlhbGx5LCBpdCBvayB0byBsb2NrIHNvbWUgb2YgdGhlIGRlc2lyYWJsZSB0aGluZ3MgYmVoaW5kIGNhc2gsIG5vdCB0aGUgbmVjZXNzYXJ5IHRoaW5ncywgYW5kIHdoZXRoZXIgcGVvcGxlIGxpa2UgaXQgb3Igbm90LCBjdXN0b21pemF0aW9uIGlzIGdhbWVwbGF5IGFuZCB0aGUgZmlyc3QgcGFsZXR0ZSBpcyBuZWNlc3NhcnkgZm9yIGl0IHRvIGJlIGF0IGEgZXZlbiBkZWNlbnQgc3lzdGVtLi4gClRoZSBkb3dudG93biBjYXNpbm8gY2FuJ3QgbWF0Y2ggdGhvc2UgYW1lbml0aWVzLCBidXQsIHNhaWQgTWlrZSBNZWN6a2EsIGEgY2FzaW5vIG1hcmtldGluZyBjb25zdWx0aW5nIGluIExvcyBBbmdlbGVzLCBpdCBjYW4gY29tcGV0ZS4gClRoaXMgaXMgbXkgc3RhbmRhcmQgbGlzdCBvZiBpdHMgInByb3MiIHRoYXQgd2lsbCBldmVudHVhbGx5IGxlYWQgdG8gYWRvcHRpb246RGVjZW50cmFsaXNlZCwgYm90aCBpbiBkZXNpZ24sIGFuZCBpbiBvcGVyYXRpb24sIGFuZCBiZWNvbWluZyBpbmNyZWFzaW5nbHkgc29TY2FsZWFibGUgICB0byBwb3NzaWJseSA3MDAwdHBzLiAoYXZlcmFnZSBzdXN0YWluZWQgNzUgYmxvY2tzIHBlciBzZWNvbmQgb3ZlciAzMCBtaW51dGVzIGhhcyBiZWVuIHNlZW4gb24gYW4gdW5zYXR1cmF0ZWQgbWFpbm5ldCB3aXRoIGEgcmVwb3J0ZWQgcGVhayBvZiA3NTYgYmxvY2tzIHBlciBzZWNvbmQpLlNpbXBsZSAgIGEgVXNlciBlWHBlcmllbmNlIHRoYXQgZXZlbiB5b3VyIGdyYW5ueSBjb3VsZCB1bmRlcnN0YW5kICAgc2VlIHRoZSBOYXRyaXVtIFdhbGxldCBmb3IgZXhhbXBsZVdvcmtpbmcgdG9kYXkgKG5vdCBmdXR1cmUgdmFwb3Vyd2FyZSlBbmRyb2lkLCBJT1MsIGRlc2t0b3AgYW5kIGJyb3dzZXIgd2FsbGV0c0hhcmQgUHJ1bmluZyBjb21pbmcgdi4gU29vbiB0byBlbmFibGUgbm9kZXMgb24gbG93IHNwYWNlIGRldmljZXNTZWN1cmFibGUgb24gTGVkZ2VyIE5hbm8gUyBoYXJkd2FyZSB3YWxsZXQgbm93LCBhbmQgSm9sdCBzb29uRWFzeSBmb3IgbWVyY2hhbnRzIHRvIGludGVncmF0ZSBpbnRvIFBvaW50IG9mIFNhbGUgdmlhOkludGVncmF0ZWQgY2FyZCBwYXltZW50cyB2aWEgV2lyZXhXb3JrcyBldmVuIGlmIHlvdSBvZmZsaW5lLCBldmVuIHdpdGggcGFwZXIgd2FsbGV0c0NhbiBzYWZlbHkgcmV1c2UgQWRkcmVzc2VzICh1bmxpa2UgSU9UQSkgbWFraW5nIEFkZHJlc3MgQm9va3MgcG9zc2libGUgZm9yIGEgbmljZXIgVVhOb3QgY2xhc3NpZmlhYmxlIGFzIGEgU2VjdXJpdHlPbiBCaW5hbmNlIGFuZCBtdWx0aXBsZSBvdGhlciBleGNoYW5nZXMgaW5jbHVkaW5nIE5hbmV4IGV4Y2hhbmdlV291bGQgY29zdCBhdCBsZWFzdCBvbmUgdGhpcmQgb2YgaXRzIG1hcmtldCBjYXAgdG8gYnJlYWNoIGl0cyBzZWN1cml0eSB3aXRoIGEgNTElIGF0dGFja1Byb29mIG9mIFdvcmsgY2FuIG5vdyBiZSBmYXJtZWQgb3V0IHRvIG11bHRpcGxlIFBvVyBzZXJ2ZXJzIHRvIGFsbG93IGV2ZW4gaGlnaCB2b2x1bWUgZXhjaGFuZ2VzIHRvIHNlbmQgbWFueSB0cmFuc2FjdGlvbnMgcGVyIHNlY29uZFNvIG11Y2ggc3VwcG9ydCB0aGF0IGl0IGhhcyBzcHVuIG9mZiB0aGUgbWVtZSBjb2luIEJhbmFuby4gCllvdSBjYW4gYWxzbyBzZWFyY2ggdGhlIEludGVybmV0IGZvciBjb21wbGFpbnRzIGFib3V0IHNjYW1zIG9yIHBvb3Igc2VydmljZS4gT25jZSB5b3UndmUgY2hvc2VuIGEgc2VydmljZSwgc3RhcnQgb2ZmIHdpdGggYSBzbWFsbCB0cmFuc2FjdGlvbiB0byBzZWUgaWYgZXZlcnl0aGluZyBnb2VzIHNtb290aGx5LiBXaGVuIHlvdSdyZSBjb25maWRlbnQgdGhhdCB0aGV5IGFyZSBsZWdpdGltYXRlLCB0aGVuIHlvdSBjYW4gbW92ZSBvbiB0byBsYXJnZXIgdHJhbnNhY3Rpb25zLiAKSSBrbm93IGEgbG90IG9mIHBlb3BsZSB3aG8gZG9udCBsaWtlIHNuYWtlcywgc28gYWZ0ZXIgaSBzYXcgdGhlIG5vc2Ugc21pbGV5IGFuZCB3YW50ZWQgdG8gY29tbWVudCBvbiB0aGF0LCBpIG1pc3Rha2VubHkgdGhvdWdodCBpZCB3cml0ZSBpdCBhcyBpZiBpIHdhcyBjb21tZW50aW5nIG9uIHRoZSBzbmFrZSBhcyBhIGpva2UuIApBbnkgZXZlbnQsIFRob21zb24gZGlkIG9rYXkuIApIaXMgc3RhcmUgc2NhcmVkIG1lOyBiZWNhdXNlIHRoZXNlIHNvbGRpZXJzIGFyZSBvcmRlcmVkIHRvIGtpbGwgYW55IHN1c3BpY2lvdXMgcGVyc29uLiAKVGhlIHNtZWxsIG9mIGJsZWFjaCBpcyBhbHdheXMgaW4gdGhpcyBob3VzZSBidXQgSSBzd2VhciBpdCBpcyB0aGUgb25seSB3YXkgdG8gY29tYmF0IHRoZXNlIGNhdHMuIApJIHNlZWluZyBteSB0aW1lcyBnbyB1cCBhbmQgdXAgZGVzcGl0ZSB0cmFpbmluZy4gU28gSSBwcm9iYWJseSBuZWVkIHRvIGRvIG1vcmUgc3RyZW5ndGggYW5kIHNwZWVkIHdvcmsgICBJIHdhcyBkb2luZyBiZXR0ZXIgd2hlbiBJIHdhcyBjcm9zcyB0cmFpbmluZyBtb3JlLCA1IHllYXJzIGFnby4gCkFuZCBDRU9zIGFyZSBodW1hbiwgdGhleSBoYXZlIHBldCBwZWV2ZXMsIHRoZWlyIG93biBhZ2VuZGEsIHRoZXkgdXN1YWxseSBoYXZlIGlkZWFzIHRoYXQgdGhleSB3YW50IHRvIGltcGxlbWVudCwgdGhhdCByZXN1bHRzIGluIGNoYW5nZXMgaW4gdGhlIGNvbXBhbnksIGFuZCB0aG9zZSB1c3VhbGx5IHJlc3VsdCBpbiB1bmV4cGVjdGVkIGNvbnNlcXVlbmNlcywgYW5kIHNvbWUgb2YgdGhvc2Ugd2lsbCByZXF1aXJlIHRoZSBDRU8gdG8gcmVmaW5lIHRoZWlyIHBsYW5zL2lkZWFzLiAKTW90YWVzb2xvICAxOSwxNTMgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KTXkgcm91dGluZTogSSBoYXZlIG5vcm1hbCBza2luIHdpdGggbm8gc2tpbiBjYXJlIHJvdXRpbmUuIEkgZG8gd2FzaCBteSBmYWNlIG9uY2Ugb3IgdHdpY2UgYSBkYXkgYW5kIG1vaXN0dXJpemUgYWZ0ZXIgYW5kIGFwcGx5IHN1bnNjcmVlbiBiZWZvcmUgZ29pbmcgb3V0LgpJIHVzZSBwaXBlbnYgaW4gcHJvZHVjdGlvbiBhbmQgdGVzdGluZyB0byBzaW1wbGlmeSBkZXBsb3ltZW50IG9uIHN5c3RlbXMgdGhhdCBkb24gbmF0aXZlbHkgc3VwcG9ydCBweXRob24gMy42Ky4gV2hlbiBpdCB3b3JrcyBpdCBpcyBncmVhdC4gClVudGlsIHRoZXkgY2FtZSBpbnNpZGUuLiAKQmFzaWNhbGx5IEkgd2FzdGUgYSBwcmV0dHkgZ29vZCB2YWx1ZSBiZXQgd2hlbiBJIGNoZWNrIGJhY2sgQWNBeCwgYW5kIEkgZ2V0IHRvIHBvdCBjb250cm9sIEFBIG5vIGNsdWIgb24gYSBib2FyZCB3aGVyZSB0dXJuIGFuZCByaXZlciBjYW4gZWFzaWx5IHNoaWZ0IHRoYXQgaGFuZCBtb3JlIHRvIHRoZSBib3R0b20gb2YgbXkgcmFuZ2UsIHdoZXJlYXMgSSBhbSBub3Qgc28gd29ycmllZCBpZiBJIHBpY2sgdXAgZXF1aXR5IHdoZW4gdGhlIDNyZCBjbHViIGhpdHMuIEkgY2FuIGRlZmluaXRlbHkgc2VlIHlvdXIgYXJndW1lbnQgdGhvdWdoLi4gClNvbWUgYmVnaW5uaW5nIHBsYXllcnMgY29uZnVzZSB0aGUgdGVybXMgImJhbmtyb2xsIiBhbmQgImJ1eSBpbi4iIEEgYnV5IGluIGlzIHRoZSBhbW91bnQgb2YgbW9uZXkgeW91IHN0YXJ0IHdpdGggaW4gYSBnYW1lIG9yIHRoZSBlbnRyeSBmZWUgaW50byBhIHRvdXJuYW1lbnQuIFlvdXIgYmFua3JvbGwgaXMgdGhlIGVudGlyZSBhbW91bnQgb2YgbW9uZXkgeW91IGhhdmUgYXZhaWxhYmxlIHdpdGggd2hpY2ggdG8gcGxheSBwb2tlciBvdmVyIGEgcGVyaW9kIG9mIHRpbWUuIEl0IHdvdWxkIGJlIHVud2lzZSB0byBicmluZyB5b3VyIGVudGlyZSBiYW5rcm9sbCBhdCBhbnkgb25lIHRpbWUgb3IgdG8gdXNlIGFsbCB0aGUgbW9uZXkgeW91IGhhdmUgd2l0aCB5b3UgdG8gYnV5IGNoaXBzIHJpZ2h0IG9mZi4gTm90IG9ubHkgYXJlIHRoZXJlIHVwcyBhbmQgZG93bnMgZHVyaW5nIGEgc2luZ2xlIHBva2VyIHNlc3Npb24gYnV0IGFsc28gdXBzIGFuZCBkb3ducyBvdmVyIGEgcGVyaW9kIG9mIHRpbWUuIFlvdXIgYmFua3JvbGwgc2hvdWxkIHRpZGUgeW91IG92ZXIgdGhlIGxvdyBwZXJpb2RzLiBJZiBub3QsIHRoZW4geW91IG5lZWQgdG8gdGhpbmsgYWJvdXQgaG93IHBva2VyIGlzIGFmZmVjdGluZyB5b3VyIG92ZXJhbGwgZmluYW5jZXMuCldlIGVzdGFibGlzaGVkIHRoZW4gdGhhdCBoZSBoYXRlcyBtYXNzIGdyb3duIHNoaXQgdG9tYXRvZXMgdGhhdCB5b3UgYnV5IGZyb20gdGhlIHN0b3JlLiBUaGUgc29pbCB0aGV5IGdyb3cgaW4gaXMgU08gaW1wb3J0YW50LiAKRm91ciBtb3JlIGNvbXBsYWludHMgaGF2ZSBzaW5jZSBiZWVuIGZpbGVkIGFnYWluc3QgS29ub3BrYS4gVGhlIGJvYXJkIGluIFNlcHRlbWJlciB2b3RlZCB0byBtb3ZlIGZvcndhcmQgd2l0aCBhIGRpc2NpcGxpbmFyeSBoZWFyaW5nIG9uIHRob3NlIGNvbXBsYWludHMuIEJ1dCBiZWZvcmUgdGhlIGhlYXJpbmcgd2FzIGhlbGQsIEtvbm9wa2EgYWdyZWVkIGluIHRvIGdpdmUgdXAgaGVyIGxpY2Vuc2UgICBzb21ldGhpbmcgc2hlIHNhaWQgc2hlIHdhcyBmb3JjZWQgdG8gZG8uCihNYXliZSBJIG5vdCBwcmV0dHkgY29uY2lzZSBoZXJlKSBXaGl0ZSBoYXMgMTMgcG9pbnRzIGluIHRoZSByaWdodCBib3R0b20sIDEwIHBvaW50cyBpbiB0aGUgcmlnaHQgdG9wLCA5IHBvaW50cyBpbiB0aGUgbGVmdCB0b3AsIDIyIHBvaW50cyBpbiB0aGUgbGVmdCBib3R0b20uIApIZSBkaWRuJ3Qgd2FudCB0byB1c2UgcmVhbHRvcnMuIEFib3V0IDYgbW9udGhzIGVhcmxpZXIsIEkgc2F0IGRvd24gd2l0aCBhIGxhd3llciB0byBmb3JtIGFuIExMQywgcGF5IGZvciBhIHNhbGVzIGNvbnRyYWN0IGFuZCBhIGxlYXNlIGFncmVlbWVudC4gCkRpZSBlaW5zdCBiZXJtY2h0aWdlIENvYWxpY2luIENhbmFyaWEgKENDKSBzY2hydW1wZnRlIHZvbiAxMCBhdWYgNyBTaXR6ZSB1bmQgdmVybG9yIGRhbWl0IGVyc3RtYWxzIHNlaXQgSmFocmVuIGRlbiBlcnN0ZW4gUGxhdHogaW4gZGVyIFN0YWR0LCBkZW4gc2ljaCBkaWUgUGFydGlkbyBQb3B1bGFyIChQUCkgbWl0IDEwIFNpdHplbiBlcm9iZXJuIGtvbm50ZS4gRGllIFNvemlhbGlzdGVuIFBTT0UgdmVybG9yZW4gMS8zIGlocmVyIFdobGVyLCBiZWthbWVuIHN0YXR0IDMgbnVyIG5vY2ggMiBTaXR6ZSB1bmQgZGllIElVQyBzY2hhZmZ0ZSBkZW4gRWluenVnIGlucyBTdGFkdHBhcmxhbWVudCB1bmQga2FtIGViZW5mYWxscyBhdWYgendlaSBTaXR6ZS4gRGFtaXQgc2luZCBkaWUgS2FydGVuIGluIGRlciBMb2thbHBvbGl0aWsgdm9uIExvcyBMbGFub3MgbmV1IGdlbWlzY2h0LgpUaGVyZSBhcmUgbiBudW1iZXIgb2Ygc2l0ZXMgd2hpY2ggb2ZmZXIgc21hcnQgZmVhdHVyZXMgYW5kIGF0dHJhY3RpdmUgcHJvcG9zaXRpb25zIGJ1dCBvZnRlbiB0aGUgc2FmZXR5IGFuZCByZWxpYWJpbGl0eSBvZiBzbWFsbCBnYW1ibGluZyBzaXRlcyBpcyBhIGdyZWF0IGlzc3VlIG9mIGNvbmNlcm4uIApJIHN0cmV0Y2guIApUaGFua2Z1bGx5LCBJIG5ldmVyIG9uY2UgaGFkIGEgbWlzaGFwLCBidXQgd2UgZ290dGVuIHByZXR0eSB0YW5nbGVkLCB3aGVuIHNvbWUgZ29vZCBzYW1hcml0YW4gZ3JhbmRtYSBqdW1wZWQgaW4gdG8gaGVscC4uIApJIGtub3cgaWYgSSB1cGRhdGUgbXkgdmlkZW8gY2FyZCBvciBidXkgYSBuZXcgY29tcHV0ZXIgSSB3b3VsZG4ndCBoYXZlIHRoYXQgd29ycnkuIEJ1dCBiZWluZyByZXRpcmVkIGl0IGlzIGFsbCBhYm91dCBub3Qgc3BlbmRpbmcgbW9uZXkgSSBkb24ndCBoYXZlLiAKTWFrZSBpdCBzaW1wbGUsIFZQTiBpcyB2aXJ0dWFsIHByaXZhdGUgbmV0d29yay4gCkhvcGUgSSd2ZSBoZWxwZWQgaW4gc29tZSB3YXk6KS4gCldoZW4gSSB3YXMgaW4gdGhlIGdoZXR0bywgbXkgdW5jbGUgb3IgYXVudCBnYXZlIG1lIGhpcyBhZGRyZXNzIGFuZCBzYWlkIGlmIEkgZXZlciBuZWVkZWQgaGVscCwgaGUgd291bGQgaGVscCBtZS4gClByaW9yIHRvIHRoZWlyIHNlcGFyYXRpb24sIHRoZWlyIHJlbGF0aW9uc2hpcCB3YXMsIGJ5IGFsbCBhY2NvdW50cywgYSBnb29kIG9uZS4gVGhlIGJ1c2luZXNzIHVsdGltYXRlbHkgYWxsb3dlZCB0aGUgY291cGxlIHRvIHJldGlyZSBpbiB0aGVpciBtaWQgZm9ydGllcyBhbmQgbGl2ZSBvZmYgb2YgdGhlIGZydWl0cyBvZiB0aGVpciBoYXJkIHdvcmsuCkFmdGVyIEplc3VzIGRpZWQgZm9yIG91ciBzaW5zLCBhbGwgdGhlIG9sZCBydWxlcyB3ZW50IHdpdGggaGltLiAKQW5kIEkga25ldyBmcm9tIHRoZSBhc3Nlc3NvcnMgcGFyY2VsIG51bWJlciBpdCB3YXMgaW4gYSBncmVhdCBhcmVhLiAKQW1lbmRzIGFyZSBmaXJzdCwgYW5kIGZvcmVtb3N0LCBmb3IgdGhlIHZpY3RpbS4gCkhvd2V2ZXIsIGJlY2F1c2UgdGhlIGFncmVlbWVudCBkaWQgbm90IGV4dGVuZCBhIHByZXZpb3VzbHkgZW5hY3RlZCBjdXQgaW4gdGhlIHBheXJvbGwgdGF4LCBsZXZpZWQgdG8gZmluYW5jZSBzb2NpYWwgcHJvZ3JhbW1lcywgdGhlIG5ldCBpbmNvbWUgb2YgYWxsIHdvcmtpbmcgQW1lcmljYW5zIGFuZCB0aGVpciBmYW1pbGllcyBoYXMgYmVlbiByZWR1Y2VkLiBUaGUgYWdyZWVtZW50IHBvc3Rwb25lZCBmb3IgdHdvIG1vbnRocyB0aGUgc3Vic3RhbnRpYWwgcmVkdWN0aW9uIGluIG1pbGl0YXJ5IGFuZCBjaXZpbGlhbiBwcm9ncmFtbWVzIHRoYXQgaGFkIGJlZW4gc2NoZWR1bGVkIHRvIGJlZ2luIEphbnVhcnkgMSwgMjAxMy4gSW4gZWZmZWN0LCB0aGUgYWdyZWVtZW50IGludml0ZWQgQ29uZ3Jlc3MgdG8gYWRkcmVzcyB0aGUgaXNzdWUgb2Ygc3BlbmRpbmcgY3V0cyBiZWZvcmUgdGhlIGltcGVuZGluZyBNYXJjaCBkZWFkbGluZS4uIApJdCdzIGdvb2QgZm9yIHlvdXIgZGVidWdnaW5nLCBidXQgbm90IHNvIGdvb2QgZm9yIGFkZGluZyBmdXR1cmUgZnVuY3Rpb25hbGl0eSBmb3IgYWN0dWFsbHkgY2FsY3VsYXRpbmcgcG9rZXIgaGFuZHMsIGFuZCBkZXZlbG9waW5nIHN0cmF0ZWd5LiAKVGhlc2UgaXMganVzdCBvbmUgcGVybXV0YXRpb24sIHRoZSBvcmRlcmluZyBjYW4gYmUgZG9uZSAoNmMyKSA9IDE1IHdheXMuIApBbmQgbm93IGV2ZXJ5b25lIGlzIHRocm93aW5nIGJhY2sgdG8gYmFjayAxMjYwcyBhcyBsaWtlIGEgbWluaW11bSAobm90ZSBib3RoIEhpcmFubyBhbmQgV2hpdGUgdGhyZXcgYjJiIDE0NDBzKS4gClRoaXMgZGVwZW5kcyBvbiB3aGF0IGdhbWVzIHlvdSBwcmVmZXIuIEl0IHNvdW5kcyBsaWtlIHlvdSBsaWtlIHNtYWxsIGJ1eSBpbiBzaW5nbGUgdGFibGUgdG91cm5hbWVudHMsIGFuZCB5b3UgcHJlZmVyIGEgdmVyeSBjb25zZXJ2YXRpdmUgc3R5bGUgb2YgcGxheS4KVGhlIGdpYW50cyBib3NzZXMgaGF2ZSByZWZ1c2VkIHRvIHVzZSB0aGUgd29yZCBnaWFudHMgaGF2ZSBzbyBtYW55IHByb2JsZW1zIHRoYXQgb25lIHBsYXllciBoZXJlIG9yIHRoZXJlIHdvbiBmaXggYWxsIHRoZWlyIHByb2JsZW1zLi4gCiJUaGlzIGluZGl2aWR1YWwgYW5kIHRoaXMgYXR0YWNrIGRpZG4gbGVhdmUgdGhlIHNvcnQgb2YgaW1tZWRpYXRlbHkgYWNjZXNzaWJsZSB0aHVtYnByaW50cyB0aGF0IHlvdSBmaW5kIG9uIHNvbWUgbWFzcyBjYXN1YWx0eSBhdHRhY2tzLCIgTWNDYWJlIHNhaWQuIApPbmUgY291cGxlIHdobyBoYWQgbWF0Y2hpbmcgc2hpcnRzIG9uIEkgc2F3IGhhZCBldmVyeSByYWNpc3QgYW5kIGhvbW9waG9iaWMgZXBpdGhldCB5b3UgY2FuIHRoaW5rIG9mIHNjcmF3bGVkIGFsbCBvdmVyIHRoZWlyIHNoaXJ0cy4gClJlY2VudGx5LCBjcmVhdGluZSBoYXMgYmVlbiBmb3VuZCB0byBzaWduaWZpY2FudGx5IGxvd2VyIHRoZSBhY2N1bXVsYXRpb24gb2YgYSByZWNvZ25pemVkIG1hcmtlciBvZiBhZ2luZyBjYWxsZWQgbGlwb2Z1c2NpbiBpbiB0aGUgYnJhaW5zIG9mIGFnaW5nIG1pY2UuMQpZb3UgZG9uJ3QgaGF2ZSB0byBiZSBhbnkgZ29vZCBpZiB5b3UncmUgYSBjaGVmLiBZb3UgY291bGQgYmUgYSByZWFsbHkgcmVhbGx5IHRlcnJpYmxlIGNoZWYgaW4gYSBzaGl0dHkgcmVzdGF1cmFudCB3aG8gaXMgZ29vZCBhdCBib3Jyb3dpbmcgbW9uZXkgaW4gZmFjdCB5b3UgY291bGQgYmUgYSBsb3Qgd29yc2Ugb2YgYSBjb29rIHRoYW4gc29tZSByYW5kb20gTW9tL0RhZC4gU29tZSBwcm9mZXNzaW9uYWwgcGxheWVycyAocGFydGljdWxhcmx5IG5ldyBvbmVzKSBhcmUgYWRkaWN0ZWQgdG8gZ2FtYmxpbmcgaW4gdGhlIHdvcnN0IHBvc3NpYmxlIHdheSBhbmQgd2lsbCBldmVudHVhbGx5IGdvIGJ1c3QuIApBbGwgb2YgdGhvc2UgcXVvdGVzIGNhbWUgZnJvbSBXYXNoaW5ndG9uIFBvc3QgYW5kIE1TTkJDIGFydGljbGVzLiBBcmUgeW91IGNhbGxpbmcgdGhlbSBmYWtlIG5ld3M/ClRoZSBwYWluIGlzIG5vdyB3b3JzZSB0aGFuIGl0IGV2ZXIgd2FzIGFuZCBJIHN1cHBvc2VkIHRvIGdvIG9uIHZhY2F0aW9uIHRvZGF5LiBJIGNhbiBicmVhdGhlIHdpdGhvdXQgaXNzdWUgc28gaXQgYSBjbGluaWMgaW4gdGhlIG1vcm5pbmcgZm9yIG1lLi4gClRoZSBmb2N1cyBoZXJlIGlzIG9uIGFzc2Vzc2luZyB3aGV0aGVyIHlvdSBhcmUgY2FwYWJsZSBvZiBkb2luZyBzb21ldGhpbmcgYW5kIG5vdCB3aGV0aGVyIHlvdSB3b3VsZCBsaWtlIHRvIGRvIGl0LiAKSW5zdGVhZCB5b3UgZGVjaWRlZCB0byB1c2UgYXMgeW91ciBleGFtcGxlIG9mIGEgY291bnRyeSBhIGNvdW50cnkgdGhhdCBpc24gZXZlbiBzb2NpYWxpc3QuCkkgcmVhZCBzb21ld2hlcmUgdGhhdCBhIHpvbmUgY2FuIGJlIGZpc2hlZCBvdXQgc28gSSB3b25kZXIgaWYgdGhhdCB3YXMgdGhlIGNhc2UuIFNhdyB0aGF0IHRoZSBoaWdoIGVuZCBmb29kIGl0ZW1zIGFyZSBnZXR0aW5nIGEgbmVyZiBuZXh0IHBhdGNoIHNvIHRoYXQgbWlnaHQgZWF0IGludG8gb3VyIHByb2ZpdHMgYXMgd2VsbC4gSGFwcHkgaHVudGluZyEgNyBwb2ludHMgIHN1Ym1pdHRlZCAxIHllYXIgYWdvLiAKSSBmaW5kIGl0IHN0cmFuZ2UgdGhhdCB0aGUgb25seSBwcmVzaWRlbnQgaW4gaGlzdG9yeSB0byBwYXNzIHN1YnN0YW50aXZlIGNyaW1pbmFsIGp1c3RpY2UgcmVmb3JtIHdhcyBUcnVtcC4gT2JhbWEgaGFkIDggeWVhcnMgdG8gZG8gaXQsIGJ1dCBhbGwgaGUgZGlkIHdlcmUgYSBmZXcgcGFyZG9ucy4KVGhvdWdoIGEgd29ybGQuIApCdXJnZSwgbm93IGEgTG9yYWluIENvdW50eSBqdWRnZSwgdG8gZGlzY3VzcyB0aGUgY2FzZXMgd2VyZSBtaXNzZWQuLiAKSWYgYSBncm91cCBpcyBsb3VkLCBJIGJlIHF1aWV0LCBidXQgaWYgYSBncm91cCBpcyBxdWlldCwgSSBjb3VsZCBiZSBxdWl0ZSBsb3VkLiBCYXNpY2FsbHkgSSBhbHdheXMgdHJ5aW5nIHRvIGZvc3RlciBhIGhhcm1vbmlvdXMgYXRtb3NwaGVyZSwgYW5kIG9mdGVuIHRoYXQgcmVxdWlyZXMgbm90IG1pcnJvcmluZyBidXQgcHJvdmlkaW5nIGNvbXBsZW1lbnRhcnkgYmVoYXZpb3IgYW5kIGVtb3Rpb25zLi4gCjFUaGVyZSBhcmUgbWFueSBkaWZmZXJlbnQgc3BlbGxpbmdzIG9mIHRoZWxyZWQsIGluY2x1ZGluZyBFdGhlbHJlZCBhbmQgdGhlbHJkLjJUaGUgRGFuZWdlbGQgd2FzIGEgdGF4IG9uIEVuZ2xpc2ggbGFuZCB3aGljaCB3YXMgdXNlZCB0byBwYXkgYSB0cmlidXRlIHRvIHRoZSBEYW5lcyB3aG8ga2VwdCBwaWxsYWdpbmcgdGhlIGNvdW50cnkuM0FuIEVhbGRvcm1hbiB3YXMgdGhlIGhlYWQgbWFnaXN0cmF0ZSBvZiBhIGJvcm91Z2guNEEgcmVldmUgd2FzIGFuIEFuZ2xvIFNheG9uIGNpdmlsIHNlcnZhbnQ7IHRoZSBIaWdoIFJlZXZlIHdhcyB0aGUgS2luZydzIGFkbWluaXN0cmF0b3IuNUEgdGhlZ24gb3IgdGhhbmUgd2FzIGEgbGFuZGVkIGZyZWVtYW4gaW4gQW5nbG8gU2F4b24gRW5nbGFuZC42VGhlIFN0IEJyaWNlJ3MgRGF5IG1hc3NhY3JlIHdhcyBhbiBPcmRlciBieSB0aGUgS2luZyB0byBzbGF1Z2h0ZXIgYWxsIHRoZSBEYW5lcyBsaXZpbmcgaW4gRW5nbGFuZC4gSXQgaGFzIGJlZW4gY29tcGlsZWQgYW5kIHJlY29tcGlsZWQgbWFueSB0aW1lcyBhbmQgdW5kZXIgbWFueSBkaWZmZXJlbnQgZWRpdG9yc2hpcHMuIEl0IGNvbnRhaW5zIGNvbnRyaWJ1dGlvbnMgZnJvbSBjb3VudGxlc3MgbnVtYmVycyBvZiB0cmF2ZWxsZXJzIGFuZCByZXNlYXJjaGVycy4iLiAKUHJlZ2FyZSAgcXVhbGNvc2EgY2hlIG1vbHRpIGhhbm5vIGFwcHJlc28gc2luIGRhIHBpY2NvbGkgZSBpbiBtYW5pZXJhIGRpdmVyc2EgYSBzZWNvbmRhIGRlbGxhIHJlbGlnaW9uZSBkaSBhcHBhcnRlbmVuemEuIE9nbnVubyBkaSBub2kgYWNxdWlzaXNjZSwgY29sIHBhc3NhcmUgZGVsIHRlbXBvLCB1biBwZXJzb25hbGUgbW9kbyBkaSBwcmVnYXJlIGluIGJhc2UgYWwgcHJvcHJpbyBzZW50aXJlIG1hLCBzcGVzc28sIGlsIHNlbXBsaWNlIHByZWdhcmUgbm9uIGNpIHBlcm1ldHRlIGRpIG90dGVuZXJlIGNpIGNoZSBjaGllZGlhbW8gcXVhbmRvIHByZWdoaWFtby4KNCkgTGlseTogMTk0MCAyMDQxLCAxMDBFLCBzZWNvbmQgdGltZSBpbiB0aGlzIEZLSyB0b3VyLiBJbiBhIHJvb20ga2lzc2luZywgY2FyZXNzaW5nLCBteSBmaXJzdCAybWluIGxpY2tpbmcgaGVyIHB1c3N5LCBvdXIgZmlyc3QgMyBtaW4gbWlzc2lvbmFyeSwgbXkgc2Vjb25kIDFtaW4gbGlja2luZywgb3VyIHNlY29uZCAzbWluIG1pc3Npb25hcnksIG15IHRoaXJkIDEgbWluIGxpY2tpbmcsIG91ciB0aGlyZCAzbWluIG1pc3Npb25hcnkgYW5kIG15IGZvdXJ0aCBsaWNraW5nIGZvbGxvd2VkIGJ5IGhlciBnaXZlIHVwIG9mIHNleC4gU2hlIGNvdWxkbid0IGN1bSBiZWNhdXNlIEkgdGVhc2VkIGhlciBwdXNzeSB0b28gbXVjaC4gQWZ0ZXIgYSBzaG9ydCBwYXVzZSwgc2hlIGdhdmUgbWUgQ0JKIGFuZCBJIGdhdmUgaGVyIDUgbWluIG1hc3NhZ2UuIE11c3QgcmVwZWF0CkkgdW5kZXJzdGFuZCB5b3VyIGZydXN0cmF0aW9uIGFuZCBkaXNsaWtlLCB0aGF0IHlvdXIgcmlnaHQgYXMgYSBtYXR0ZXIgb2YgcGVyc29uYWwgdGFzdGUuIApIYXMgYW55b25lIGVsc2UgaGVyZSByYW5kb21seSBkZXZlbG9wZWQgYSBoaXAgZHJvcCAoYXNzdW1pbmcgdGhhdCdzIHdoYXQgSSBoYXZlKT8gSSBhbSB0cnlpbmcgdG8ga2VlcCBteSBwZWx2aXMgbGV2ZWwuIENvdWxkIHRpZ2h0L3dlYWsgaGlwIGZsZXhvcnMgYmUgYW5vdGhlciBpc3N1ZT8KSGFzIGFkdmFuY2VkIHR3byBwcm9wb3NhbHMgZm9yIHRoZSBmZWRzIHRvIGNvbnRlbXBsYXRlLiAKQXMgbG9uZyBhcyBpdCB3YXNuIGluc3RhbnRhbmVvdXMsIGl0IGNvdWxkbiBiZSB1c2VkIGFzIGEgcXVpY2sgZXNjYXBlIChzaW5jZSB5b3Ugc3RhbmQgc3RpbGwgbG9uZyBlbm91Z2ggdG8gZ2V0IHBvcHBlZCwgaWYgeW91IHRyaWVkIHVzaW5nIGl0IGluIGEgZmlnaHQpLiAKV2hlbiBoaXMgZGF1Z2h0ZXIgd2FzIGJvcm4gb3ZlciB0d28geWVhcnMgYWdvLCBoZSBoYWQgUGhvdG9zaG9wcGVkIGhlciBwbGF5aW5nIGRpZmZlcmVudCBzcG9ydHMsIGFuZCB3YXMgcGxhbm5pbmcgb24gZG9pbmcgc29tZXRoaW5nIHNpbWlsYXIgd2l0aCBuZXdib3JuIFJ5YW4uCkkgZXZlbiBoaXQgYWxsIHRoZSB0ZXh0Ym9vayBtYXJrcyBvZiBoYXZpbmcgaGFkIGFuIGVwaWxlcHRpYyBzZWl6dXJlLCBmcm9tIHRoZSBtZW1vcnkgbG9zcyB0byB0aGUgcG9zdGljdGFsIGZhdGlndWUuLiAKSW5zaWRlIHRoZSB3YWNreSB3b3JsZCBvZiBUaG9tYXMgR3JhdmVzZW4KQ2FyZSBpcyBwcm92aWRlZCBieSBvdXIgdGVhbSBvZiBmdWxseSBsaWNlbnNlZCBhbmQgQm9hcmQgQ2VydGlmaWVkL0VsaWdpYmxlIFBoeXNpY2lhbnMgKE1ELCBETyksIENlcnRpZmllZCBSZWdpc3RlcmVkIE51cnNlIFByYWN0aXRpb25lcnMgKENSTlApIGFuZCBDZXJ0aWZpZWQgUGh5c2ljaWFuIEFzc2lzdGFudHMgKFBBIEMpLCBhbmQgc3VwcG9ydGluZyBzdGFmZi4gQW4gaW5zdXJhbmNlIHBsYW4gb3IgaXRzIGVxdWl2YWxlbnQgaXMgcmVxdWlyZWQgZm9yIGFsbCBpbnRlcm5hdGlvbmFsIHN0dWRlbnRzIGFuZCByZWNvbW1lbmRlZCBmb3IgYWxsIHN0dWRlbnRzLi4gCldvdWxkIHJlcXVpcmUgYSByZXZvbHV0aW9uLiBDdXJiaW5nIGRlZmVuc2Ugc3BlbmRpbmcgZXhjZXNzZXMgd291bGQgcmVxdWlyZSBkaXNtYW50bGluZyB0aGUgaWRlb2xvZ3kgdGhhdCBqdXN0aWZpZXMgdGhlIG1pbGl0YXJ5IGluZHVzdHJpYWwgY29tcGxleC4gCkFtb25nIHRoZW0gYXJlIG5ld2NvbWVycyBsaWtlIFRpZGUgbWFrZXIgUHJvY3RlciBHYW1ibGUsIGRlZmVuc2UgY29udHJhY3RvciBSYXl0aGVvbiBhbmQgdHJhY3RvciBzZWxsZXIgSm9obiBEZWVyZSAgIGFsbCBlYWdlciB0byBidXJuaXNoIHRoZWlyIHRlY2hub2xvZ3kgYm9uYSBmaWRlcy4uIApMZWFybiB0aGUgYmFzaWNzLiBSZWd1bGFyIHN0cmVldCBjcmFwcyBpcyBwbGF5ZWQgd2l0aCB0d28gZGljZSwgd2hpY2ggYXJlIHVzZWQgYnkgYSBzaW5nbGUgcGxheWVyIGluIGVhY2ggZ2FtZSwgdGhvdWdoIHRoZSBnYW1lIGNhbiBiZSBwbGF5ZWQgYnkgYW55IG51bWJlciBvZiBvbmxvb2tlcnMuWzFdCkJlZm9yZSBoZSBkZWNpZGVkIHRvIHN0dWR5IGxhdyBhdCB1bml2ZXJzaXR5IGFuZCBiZWZvcmUgaGUgYmVjYW1lIGEgbWVtYmVyIG9mIGFuIG91dGxhdyBtb3RvcmN5Y2xlIGNsdWIsIFN0ZXZlIHdhcyBhbiBpbmZhbnRyeSBvZmZpY2VyIGFuZCBhIGNvbXBhbnkgY29tbWFuZGVyIGluIHRoZSBhcm15LgpTbyBtYW55IHBlb3BsZSBsb2NrIGludG8gdGhlc2Ugc2lsbHkgZmlyZWZpZ2h0cyBhbmQganVzdCBzdHJhZmUgb25lIGRpcmVjdGlvbi4gVXNlIGNvdmVyLCBjcm91Y2gsIGdldCBiZXR0ZXIgYXQgeW91ciBBIEQgQSBEJ2luZywgc2xpZGUsIGFuZCBkaXNlbmdhZ2UgaWYgeW91ciBub3QgZ29pbmcgdG8gd2luLi4gCkhlIHBlcnN1YWRlZCBLYWdhbiB0byBqb2luIGhpbSBvbiBodW50aW5nIHRyaXBzLi4gClNleCBDb3VwbGVzIEhvc3BpdGFsCklmIGl0J3MgYW4gZXZlcnkgd2VlayBraW5kIG9mIHRoaW5nLCB0aG91Z2gsIHRoYXQncyBoaXMgcHJvYmxlbS4gTWF5YmUgaGUgc2hvdWxkIGdldCB0byBuZXQgbW9yZSBpZiBoZSBjYW4ndCBoYW5kbGUgYmFzZWxpbmUgcGxheS4KT25lIGlmIG15IGxvY2FsIHJhY2Ugb3JnYW5pemF0aW9uIGFsd2F5cyBkb2VzIGEgcmFmZmxlIGFmdGVyIHRoZSByYWNlIGZvciBldmVyeW9uZSwgdGhleSB1c3VhbGx5IGhhdmUgYWRkaXRpb25hbCBwaW50IGdsYXNzZXMsIGNvZmZlZSBtdWdzLCBzdW5nbGFzc2VzLCBydW5uaW5nIGNsb3RoZXMsIHBpbnRzIG9mIG1hcGxlIHN5cnVwIGV0YyBhbmQgdGhhdCBhbHdheXMgZ3JlYXQuIApJIGRlbGl2ZXIgZm9yIEZyaXRvIExheSBhbmQgd291bGQgYXJndWUgdGhpcyBpc24gdGhlIGJlc3QgYWR2aWNlLiAKQmlvZnJlZXplIGlzIGEgYnJhbmQgb2YgcGFpbiByZWxpZXZlci4gUGFpbiBpcyBhIGZlZWxpbmcgb2YgZGlzY29tZm9ydCB0aGF0IGlzIG9mdGVuIGFzc29jaWF0ZWQgd2l0aCBhbnhpZXR5IG9yIGZlYXIuIFRoZXJlIGFyZSBzZXZlcmFsIGtpbmRzIG9mIHBhaW4sIGFuZCB0aGV5IHZhcnkgYmFzZWQgb24gc29tZSBjYXRlZ29yaWVzLiBUaGVzZSBjYXRlZ29yaWVzIGFyZSBpbnRlbnNpdHksIGR1cmF0aW9uIGFuZCBsb2NhdGlvbi4KRmFzdCBmb3J3YXJkIHRvIHRoZSBwYXN0IDMwIHllYXJzLCBhIHRpbWUgZHVyaW5nIHdoaWNoIG9uIHdlZGRpbmdzIGhhcyBnb25lIHVwIGFuZCB1cCBhbmQgdXAsIHBlcmhhcHMgYXMgYSByZXNwb25zZSB0byBoaWdoIGRpdm9yY2UgcmF0ZXMgYW5kIHRoZSAidGhyZWF0IiBvZiBzYW1lIHNleCBtYXJyaWFnZS4gQmUgYSBwZXJmZWN0IGJyaWRlIGFuZCB0byBoYXZlIGEgcGVyZmVjdCBtYXJyaWFnZSBSRVFVSVJFUyBhIHBlcmZlY3Qgd2VkZGluZy4gVGhlIGJyaWRlIGlzIGxlc3MgdGhhbiBwZXJmZWN0LCBoZXIgdmlydHVlIGZhciBmcm9tIHVuYmxlbWlzaGVkLCBoZXIgZnV0dXJlIGZhciBmcm9tIHNlY3VyZS4uIApTaW5jZSB0aGVuLCBEb3VnaGVydHkgaGFzIHJlY2VpdmVkIHRyZWF0bWVudCBmcm9tIE1veWxhbiBhbmQgY29uc2lkZXJzIGhpbSBhICJkZWFyLCBwZXJzb25hbCBmcmllbmQsIiBhY2NvcmRpbmcgdG8gdGhlIHN0YXRlbWVudC4uIApUaGluayBhYm91dCB0aGF0LiBIZSB3YXMgcGF5aW5nIGZvciBhaXIgdGltZSBzbyBoZSBjb3VsZCB0ZWxsIHBlb3BsZSBhYm91dCBwYXlpbmcgZm9yIHNleCEgU3ByaW5nZXIgd2FzIHdpbGRseSBwb3B1bGFyIGluIENpbmNpbm5hdGksIGJ1dCBpdCB3YXNuIGVub3VnaC4gSGUgbG9zdCB0aGUgZWxlY3Rpb24gd2l0aCA0NSUgb2YgdGhlIHZvdGUuVGhhdCB3aGVuIGhlIHRyYW5zaXRpb25lZCB0byB0ZWxldmlzaW9uLiBTcHJpbmdlciBiZWNhbWUgQ2luY2lubmF0aSBtb3N0IHBvcHVsYXIgYW5jaG9yIG9uIE5CQyBXTFdUIFRWLiAKIkl0IG1ha2VzIG5vIHNlbnNlIHRoYXQgcGVvcGxlIHdobyBtYWtlIHRoZWlyIGxpdmVsaWhvb2RzIGZyb20gZG9ncyB3b3VsZCBhYnVzZSB0aGVtLCIgR2FydGxhbmQgc2FpZC4gClRoYXQgd2h5IEplc3NlIHRoZSBtYW4gYXQgdGhlc2UgY29tcHMsIGhlIGp1c3QgdGhyb3dzIGl0IGRvd24uIApJdCBpcyBnZXR0aW5nIHRvIHRoZSBwb2ludCB3aGVyZSBpdCBpcyBzdGFydGluZyB0byBiZWNvbWUgZGlmZmljdWx0IHRvIGJsYW1lIHBlb3BsZSB0aGF0IGFyZSBhZnJhaWQgdG8gbGVhdmUgdGhlaXIgb3duIGhvbWVzLiAKQW5kIDEwMCBibG9jayBpcyBhIGxvdCwgaXQgY2FuIG1ha2UgaGVyb2VzIHRoYXQgd2VyZSBhYmxlIHRvIGNsZWFyIHdhdmVzIGVudGlyZWx5IHdpdGggMS8yIHNwZWxscyBpbnRvIGJlaW5nIHVuYWJsZSB0byBkbyB0aGF0LiBBcyBhIHF1aWNrIGV4YW1wbGUsIGxpbmEgaXMgbm9ybWFsbHkgYWJsZSB0byBqdXN0IGNsZWFyIHdhdmVzIGluc3RhbnRseSB3aXRoIGxzYStzbGF2ZSwgYnV0IGFnYWluc3QgbGl2aW5nIGFybW9yIGl0IGJlIHJlZHVjZWQgdHdpY2UsIG1lYW5pbmcgdGhhdCBhbGwgdGhlIG1lbGVlIGNyZWVwcyB3aWxsIGxpdmUuIApIaXMgdGVjaG5pcXVlIHdhcyBtb3JlIGdlbnRsZSBidXQgZ3JpbmRpbmcsIGFuZCBpdCBmZWx0IHBsZWFzdXJhYmxlIHdpdGggbm8gZnJpY3Rpb24gYnVybiwgeWV0IGhlIHdhcyBhIExPVCB0aGlja2VyIGluIHNpemUgdGhhbiBteSBleC4gCldoZW4gaXQgd2FzIGRpc2NvdmVyZWQgdGhlcmUgbGllcyBob3Jyb3JzIHdpdGhpbiwgdGhleSBhYmFuZG9uZWQgdGhhdCBpZGVhIGFuZCBzZWFsZWQgaXQgb2ZmLiBUaGUgdGhpcmQgaXRlcmF0aW9uLCBiZWluZyBhIHRoaWV2ZXMgZ3VpbGQgd2l0aGluIHRoZSBydWlucyBvZiB0aGUgbWluZSBwcm9zcGVjdCBvZiB0aGUgY3JldmFzc2UuIApZZXMsIGl0J3MgYSBwcm9maXQsIGJ1dCB0dXJuaW5nIHRoaXMgc3BvdCBpbnRvIHdpbiBtb25leSBpcyBhIGNydWNpYWwgc2tpbGwgZm9yIG1ha2luZyB5b3VyIG92ZXJhbGwgcHJvZml0IHJhdGUgb2Ygc2l0IGFuZCBnb3MgcmVhbGx5IHRha2Ugb2ZmLiAKSXMgaXMgdW5kZW5pYWJsZSB0aGF0IE9wZXJhdGlvbiBIb2xkIHRoZSBMaW5lIGRpZCBpbiBmYWN0IHJlZHVjZSBjcmltZS4gSXQgaXMgdW5kZW5pYWJsZSB0aGF0IHdoZW4gYSBiZXR0ZXIgZmVuY2Ugd2FzIGJ1aWx0IHRocm91Z2ggRWwgUGFzbyBpdCByZWR1Y2VkIGNyaW1lLiBBZnRlciA5LzExIGluY3JlYXNlZCBzZWN1cml0eSBhdCBwb3J0cyBvZiBlbnRyeSByZWR1Y2VkIGNyaW1lLiAKSnVzdCB0ZXJyaWJsZS4uIApCYXkgQXJlYSBEb3VsYSBQcm9qZWN0CkZlZWxpbmcgY29uZmlkZW50LCBJIHNocnVnZ2VkIG9mZiB0aGVpciB3b3JyaWVzIGFuZCBkZWNpZGVkIHRvIG1ha2UgdGhlIHRyaXAgYW55d2F5LiAKSXQgd2FzIGEgY29tcHJlaGVuc2l2ZSByZXZpZXcgb2Ygb3VyIHNhZmV0eSBwcm9ncmFtLiBIZSBmaXJzdCB3YW50ZWQgdG8gc2VlIGFsbCBvZiBvdXIgc2FmZXR5IHRyYWluaW5nIGRvY3VtZW50YXRpb24gbGlrZSB0aGF0IHBlb3BsZSBoYWQgYmVlbiB0cmFpbmVkIG9uIGNoZW1pY2FsIGhhbmRsaW5nIGFuZCB3b3JraW5nIGF0IGhlaWdodHMgYW5kIHN0dWZmIG9mIHRoYXQgbmF0dXJlLiBUaGVuIGhlIHdhbnRlZCB0byBzZWUgYWxsIG91ciBzYWZldHkgcHJvZ3JhbXMgbGlrZSBsb2NrIG91dCwgdGFnIG91dCBhbmQgcHJvZ3JhbXMgbGlrZSB0aGF0LiBIZSB0aGVuIGZvbGxvd2VkIHVwIHdpdGggYSB3YWxrIHRocm91Z2ggb2Ygb3VyIGZhY2lsaXR5IGJ1dCB3ZSB3b24ga25vdyB3aGF0IGhlIGZvdW5kIHVudGlsIGhlIGdpdmVzIHVzIGEgcmVwb3J0LiBJIGNhbiBmb2xsb3cgdXAgd2l0aCBpbXByb3ZlbWVudHMgcmVxdWlyZWQgb25jZSB3ZSBnZXQgYSBsaXN0IG9mIHRob3NlLiBJIHRhbGsgdG8gb3VyIEVTIG1hbmFnZXIgdG9vIGZvciBhIGZldyBtb3JlIGRldGFpbHMuClN1c3V6IGRlcmVsZXJkZSBnbGxlciBiaXRlciBtaSAoRG8gcm9zZXMgc3Byb3V0IG9uIGRyeSByaXZlcnMpCk9ubHkgdG8gZmluZCB0aGUga2lsbGVyIHdhcyBzcGlubmluZyBhcm91bmQgaW4gYSBzaGFjayBzaG9vdGluZyBhdCB0aGUgd2FsbHMgYW5kIHNvbWVob3cgdGVsbGluZyB0aGUgZ2FtZSBoZSB3YXMgaGVhZHNob3R0aW5nIGV2ZXJ5b25lLiAKSXQgaXMgbm90IHVudXN1YWwgdG8gZ28gZml2ZSBvciB0ZW4gb3IgbW9yZSBjb25zZWN1dGl2ZSBoYW5kcyB3aXRoIG5vIHBheW91dC4gCjogIHByb3BvcyBkZXMgc29uZGFnZXMgbGVjdG9yYXV4LCBub3VzIHRlbm9ucyAgcHJjaXNlciBxdSdpbCBmYXV0IHRvdWpvdXJzIHRyZSB0cnMgcHJ1ZGVudCAgbGV1ciBsZWN0dXJlIHF1YW5kIGlsIHMnYWdpdCBkJ3VuZSBsZWN0aW9uIGNvbW1lIGNlbGxlIGRlIGxhIG1haXJpZSBkZSBQYXJpcywgY2VzIHNvbmRhZ2VzIHRhbnQgcmFsaXNzIHN1ciBsJ2Vuc2VtYmxlIGRlIGxhIGNhcGl0YWxlIG91IGF1IG1pZXV4IHN1ciBxdWVscXVlcyBhcnJvbmRpc3NlbWVudHMgdGVzdC4gRW4gZWZmZXQsIGlsIGZhdXQgcmFwcGVsZXIgcXVlIGwnbGVjdGlvbiBkdSBtYWlyZSBkZSBQYXJpcyBzZSBmYWl0IHBhciBsZXMgY29uc2VpbGxlcnMgZGUgUGFyaXMgbHVzIGRhbnMgY2hhcXVlIGFycm9uZGlzc2VtZW50IGF1IHNjcnV0aW4gZGUgbGlzdGUgbWFqb3JpdGFpcmUuIEMnZXN0IGRvbmMgcGFzIG1vaW5zIGRlIGRpeCBzZXB0IHNjcnV0aW5zIChjJ3RhaXQgdmluZ3QgYXZhbnQgbGEgZnVzaW9uIGRlcyBxdWF0cmUgcHJlbWllcnMgYXJyb25kaXNzZW1lbnRzKSBxdSdpbCBmYXV0IG9ic2VydmVyIHBvdXIgY29ubmFpdHJlIGwnaXNzdWUgZGUgbGEgYmF0YWlsbGUgcG91ciBsYSBtYWlyaWUgZGUgUGFyaXMuIElsIGZhdXQgcmFwcGVsZXIgYXVzc2ksIHF1ZSBzaSBsZSBjb250ZXh0ZSBuYXRpb25hbCBpbmZsdWUgc3VyIGxlcyByc3VsdGF0cyBkZXMgbGVjdGlvbnMgbG9jYWxlcywgbGVzIGxlY3Rpb25zIG11bmljaXBhbGVzIG1vbnRyZW50IHRvdWpvdXJzIGRlcyBleGNlcHRpb25zICBjZXR0ZSByZ2xlLCBkZXMgcGVyc29ubmFsaXRzIGxvY2FsZW1lbnQgYmllbiBpbXBsYW50ZXMgcG91dmFudCBzZSBqb3VlciBkJ3VuIGNvbnRleHRlIG5hdGlvbmFsIGRmYXZvcmFibGUgZXQgbCdlbXBvcnRlci4KSSBhZ2FpbiBhc2tlZCBpZiBJIGNvdWxkIHNvbWVob3cgcmVjZWl2ZSB0aGlzIG5ldyBvZmZlciBpbnN0ZWFkLiBBZ2FpbiB0aGV5IHNhaWQgc29ycnkgYnV0IHRoYXQgbm90IHBvc3NpYmxlLiAKMSBwb2ludCAgc3VibWl0dGVkIDMgeWVhcnMgYWdvCkVzdGF0ZXMgaXMgbmVhciBUeW5laGVhZCBhbmQgU3VycmV5IEJlbmQgcmVnaW9uYWwgcGFya3MsIGFuZCBtaW51dGVzIGZyb20gdXJiYW4gYW1lbml0aWVzIHRoYXQgaW5jbHVkZSByZXN0YXVyYW50cywgcmV0YWlsIG91dGxldHMsIEd1aWxkZm9yZCBUb3duIENlbnRyZSBhbmQgdGhlIEZyYXNlciBIZWlnaHRzIFJlY3JlYXRpb24gQ2VudHJlLiAKVGhlIHByaWNlIGlzIGEgc2V0IDIsMjUwIHBlciBnaXJsL3dvbWFuLCBhbGwgaW5jbHVzaXZlLiBBcyBFZGVuIG9wZXJhdGVzIGEgcG9saWN5IG9mIHRha2luZyBhIG1pbmltdW0gb2YgdHdvLCB0aGlzIGJ1bXBzIHRoZSBwcmljZSBwZXIgc2Vzc2lvbiB1cCB0byA0LDUwMCBiYWh0LiBUaGUgcHJpY2UgcGVyIGhvb2tlciBpcyBub3QgdG9vIGJhZCAoYWx0aG91Z2ggYWJvdmUgYXZlcmFnZSwgZm9yIGJlbG93IGF2ZXJhZ2UgbG9va3Mgc2VlIGxhdGVyKSwgYnV0IHRoZSBwb2ludCBpcyB0aGUgcG9saWN5IG1lYW5zIHlvdSB3aWxsIGJlIHNwZW5kaW5nIGEgbWluaW11bSBvZiA0LDUwMCBiYWh0IHRvIGdldCBsYWlkLiBVbmxlc3MgeW91IGFyZSByZWFsbHkgZGVzcGVyYXRlIGZvciB0aGUgdGhyZWVzb21lIGV4cGVyaWVuY2UsIHRoaXMgaXMgYSBsb3QgdG8gc3BlbmQgaW4gOTAgbWludXRlcy4gSSBoYXZlIHNjb3JlZCB0aGlzIGFjY29yZGluZyB0byB0aGUgb3ZlcmFsbCBvdXRsYXksIG5vdCB0aGUgcGVyIGdpcmwgb3V0bGF5LCBzaW5jZSB0aGVyZSBpcyBubyBvcHRpb24gdG8gdGFrZSBvbmx5IG9uZS4gSSBhbHNvIGJvdWdodCBhIGdsYXNzIG9mIENva2UgZm9yIDgwIGJhaHQuIFlvdSBwYXkgdXAgZnJvbnQgYnV0IHRoZSBwYXBhc2FuIHByb21pc2VzIHJlZnVuZHMgZm9yIGFueW9uZSB3aG8gaXMgbm90IHNhdGlzZmllZCwgYWx0aG91Z2ggSSBkb3VidCBtYW55IHdvdWxkIGFzayBmb3IgYSByZWZ1bmQgaW4gYW55IGNhc2UuMi8xMApJIGdvbm5hIHdhZ2VyIHRoYXQgaWYgd2UgZ2V0IGFuIGFjdHVhbCBnYW1lcGxheSB0cmFpbGVyIHRoaXMgeWVhciwgdGhlbiBpdCBtZWFucyBpdCBjb21pbmcgb3V0IHNvbWV0aW1lIG5leHQgeWVhci4gClN1Y2ggdWdseSBiZWhhdmlvciwgZGVmaW5pdGVseSBub3QgaG93IGEgaHVzYmFuZCBzaG91bGQgYWN0LiBBbmQgaXQgd29uJ3QgY2hhbmdlLiAKVGhlIGNvdW5jaWwgdGVzdGlmaWVkIHRoYXQgQWRlZSBwcm9kdWN0cyB3aXRoIHRoZSBsb2dvIGNvbnRpbnVlZCB0byBiZSBzb2xkIGFzIGxhdGUgYXMgTm92ZW1iZXIsIGl0IHNhaWQuIFRoZSBvcmdhbml6YXRpb24gYXJndWVkIHRoYXQgZGlsdXRlZCBpdHMgdHJhZGVtYXJrIGFuZCB1bmRlcm1pbmVkIGl0cyByZXB1dGF0aW9uLgpBcyBoaXMgc2tpbGxzIGRldmVsb3BlZCwgZW5jb3VyYWdlZCBieSBwcmFjdGlzaW5nIG9uIGhpcyBmcmllbmRzJyBmYWNlcywgaGUgbGF1bmNoZWQgYW4gSW5zdGFncmFtIGFjY291bnQgd2l0aCB0dXRvcmlhbHMgYW5kIGluc3BpcmF0aW9uYWwgbG9va3MuCkJpdGVyIGFzIExpY2Vuc2VkIE1pZHdpZmU/IExldHRlciBmcm9tICJNaWR3aWZlIHRvIEJlIiBBdHRlbmRlZSBNaWR3aWZlIHRvIEJlICJNaWR3aWZlcnkgU2Nob29sIiBEcm9wbGV0cyBpbiB0aGUgT2NlYW4gR2xhc3MgU2hhcmRzIG9mIERpYWJldGVzIEludGVydmlld2luZyBhIEhvbWViaXJ0aCBNaWR3aWZlIChQYXJ0IDUpIEludGVydmlld2luZyBhIEhvbWViaXJ0aCBNaWR3aWZlIChJbnRlcmplY3Rpb24pIEludGVydmlld2luZyBhIEhvbWViaXJ0aCBNaWR3aWZlIChQYXJ0IDQpIEludGVydmlld2luZyBhIEhvbWViaXJ0aCBNaWR3aWZlIChQYXJ0IDMpIEludGVydmlld2luZyBhIEhvbWViaXJ0aCBNaWR3aWZlIChQYXJ0IDIpIEludGVydmlld2luZyBhIEhvbWViaXJ0aCBNaWR3aWZlIChQYXJ0IDEpIEJpcnRoIGFzIEFydCBHdWVzdCBQb3N0OiBKYW1haWNhbiBCaXJ0aCBQZWVrIEludG8gTXkgV3JpdGluZyBIZWFkICJHcmFub2xhIGllciBUaGFuIFRob3UiIEJpcnRoIFNoYW1lIEFtZW5kbWVudCB0byBOb3QgU28gIldvbmRlcmZ1bCIgSW52ZXN0aWdhdGlvbiAzNyBQZXJjZW50IFN1ZGRlbmx5LiAKTWFsZ3IgY2VzIGRpc3Bvc2l0aW9ucywgbGEgbW1lIGNyYWludGUgbWVyZ2UgY2hhcXVlIGZvaXMgcXVlIGxlIGRiYXQgc3VyIGxhIGxnYWxpc2F0aW9uIGRlIGxhIG1hcmlqdWFuYSBmYWl0IHJhZ2U6IGNlIGNoYW5nZW1lbnQgdmEgdCBpbCBpbmNpdGVyIGxlcyBqZXVuZXMgIGNvbnNvbW1lciBkYXZhbnRhZ2U/CkZpcnN0IE5hdGlvbiBoYXZlIHZlcnkgc2ltaWxhciByZXNlcnZhdGlvbiBsYXdzIGFzIHRoZSBVUy4gSXQgd2FzIG15IGZpcnN0IHRob3VnaHQgYXMgSSBsaXZlIG5leHQgdG8gYSBsYXJnZSByZXNlcnZhdGlvbiBhbmQgSSBzZWUgZGFpbHkgaG93IG11Y2ggcG93ZXIgdGhhdCBjYW4geWllbGQgYXMgd2VsbCBhcyBob3cgY2VudHJpYyBpdCBpcy4gCkkgc3Bva2Ugd2l0aCB0aGUgc2lzdGVyIGFuZCBzaGUgaXMgYXdhcmUgaGUgaGFzIHBhc3NlZCBhbmQgaXMgb25seSBhc2tpbmcgZm9yIHNvbWUgb2YgaGlzIGFzaGVzIGFmdGVyIHRoZSBjcmVtYXRpb24gYW5kIGlzIG5vdCBpbnRlcmVzdGVkIGluIGhpcyBwZXJzb25hbCBwcm9wZXJ0eSwgYXNzZXRzLCBvciBsZWZ0b3ZlciBtb25leSBmcm9tIGJhbmsgYWNjb3VudHMsIGFueXRoaW5nIG1vbmV0YXJ5LiAKRHVlIHRvIHRoZSBzcGVlZCBvZiBtb3ZlbWVudCwgZ2VuZXJhbCBtYXAgZGVzaWduIChsb3RzIG9mIGNvcm5lcnMvY292ZXIpIFBsYXlpbmcgYXQgYW55IHJhbmdlIGJleW9uZCAxMDBtIGlzIGFsbW9zdCB1c2VsZXNzL2Z1dGlsZS4KSSBmZWVkIGJpcmRzIGF0IGhvbWUgYW5kIGJvdWdodCBhbiBJRCBib29rIHRvIGhlbHAgbWUgImNvbGxlY3QiIHRoZW0uIApGaW9yaW5pbyB3aG8gcXVpdGUgaG9uZXN0bHkgc2NhcmVzIG1lIGEgbGl0dGxlLiAKRXIgaHR0ZSBzaWNoIHp1IGRpZXNlbSBaZWl0cHVua3QgenVyY2t6aWVoZW4gc29sbGVuLiAKVGhlc2UgcG9pbnRzIHRoYXQgSSdkIGJlIGdldHRpbmcgd291bGRuJ3QgdHJ1bHkgYmUgdGhlaXIgd29ydGggYXMgdGhlaXIgdmFsdWUgaXMgYXJiaXRyYXJ5LiAKSnVkZ2UgRWxsaXMgaXMgYSBSZWFnYW4gYXBwb2ludGVlLCBrbm93biBhcyB0b3VnaCBhbmQgbm8gbm9uc2Vuc2UuIEJ1dCwgaW4gcmVjZW50IHllYXJzLCBoZSBoYXMgcHVibGljbHkgY29tcGxhaW5lZCBhYm91dCBsYXdzIHRoYXQgaW1wb3NlIGN1bWJlcnNvbWUgc2VudGVuY2VzLCBhcyBQb2xpdGljbyBpbGx1c3RyYXRlZCBpbiBhIDIwMTggcHJvZmlsZS4gSW4gb25lIHN0cmlraW5nIGV4YW1wbGUgZnJvbSB0aGF0IHJlcG9ydCwgRWxsaXMgc2VudGVuY2VkIGEgMzcgeWVhciBvbGQgdG8gYSBtYW5kYXRvcnkgbWluaW11bSBvZiA0MCB5ZWFycyBpbiBwcmlzb24gZm9yIGRlYWxpbmcgbWV0aGFtcGhldGFtaW5lLi4gCkl0IHdhcyByZWFsbHkgcHJldHR5LiBXZSBzdG9wcGVkIGF0IGFub3RoZXIgdGVtcGxlIGFzIHdlbGwuIEZpbmFsbHkgd2UgdmVlcmVkIG9mZiB0aGUgcm9hZCBhbmQgaW50byB0aGUgZGVzZXJ0LiBXaGVuIHdlIGNhbWUgdXBvbiBhIHNtYWxsIGdyb3VwIG9mIGd1eXMgYW5kIGNhbWVscywgd2Uga25ldyB3ZSBoYWQgYXJyaXZlZCBhdCB0aGUgcmlnaHQgcGxhY2UuCkhpcyBzaWJsaW5ncyBCYXJiLCBEZWVjZSwgYW5kIFBhdWwgcHJlZGVjZWFzZWQgaGltLiAKQWxsIGd1bnMgdXNlIGEgMmsgdGV4dHVyZSBzaGVldC4gSG93ZXZlciwgdGhlIGRlc2VydCBlYWdsZSBoYXMgYSBiaXQgb2YgYW4gaWZmeSB1bndyYXAgYW5kIGlzIG5vdCByZWFsbHkgdXRpbGl6aW5nIG1vc3Qgb2YgdGhlIHRleHR1cmUgc3BhY2UuIEFzaWRlIGZyb20gdGhhdCwgdGhlIHdvcmxkIG1vZGVsIGlzIHVud3JhcHBlZCBkaWZmZXJlbnRseSB0aGFuIHRoZSB2aWV3bW9kZWwgbW9kZWwgd2hpY2ggY2F1c2VzIGEgd2VpcmQgdGV4dHVyZSBkaXN0b3J0aW9uIG9uIHRoZSBiYWNrc2lkZSBvZiB0aGUgZGVhZ2xlIGluIHRoaXJkIHBlcnNvbi4gSXQgYmVlbiBsaWtlIHRoaXMgc2luY2UgdGhlIHN0YXJ0IG9mIENTOkdPIHRob3VnaCBhbmQgSSBkb3VidCB0aGVyZSBpcyBtdWNoIG5lZWQgdG8gY2hhbmdlIGl0IHNpbmNlIGl0IG9ubHkgdmlzdWFsClNwaWRleSA5LzEwIG9yIHBvc3NpYmx5IDEwLzEwLi4gClBhcmxhcmUgZGkgcXVpbmRpIGVxdWl2YWxlIGEgcGFybGFyZSBkaSBzb2NpZXQgbW9kZXJuYS4gRXNzbyAsaW5mYXR0aSwgaW52ZXN0ZSBvcm1haSBxdWFzaSB0dXR0aSBpIHNldHRvcmkgZGVsbGEgc3Rlc3NhLCBtYSAgcHJvcHJpbyBzb3R0byBhbCBiZW5lc3NlcmUsIGRpZXRybyBsYSBzdWEgc3BsZW5kaWRhIGZhY2NpYXRhLCBjaGUgc2kgbmFzY29uZGUgaWwgbWFyY2lvLiAKSG9uZXN0bHkgSSBraW5kIG9mIHdpc2ggSSBjb3VsZCBvZiBnb3QgaW4gb24gdGhlIG1lbWJyYW5lIGVudHJ5IGxldmVsIEtvbmFtaSBjb250cm9sbGVyIGp1c3QgZm9yIHRoZSBzb3VuZCBsZXZlbC4uIApFVUdFTkUsIE9yZS4gICBMaWNlbnNpbmcgaW5jb21lIGZyb20gVW5pdmVyc2l0eSBvZiBPcmVnb24gaW52ZW50aW9ucyBncmV3IHRvIG5lYXJseSAkMiBtaWxsaW9uIGluIGZpc2NhbCB5ZWFyIDIwMDMgNCwgcmFua2luZyB0aGUgVU8gYW1vbmcgdGhlIHRvcCB0aWVyIG9mIHRoZSBuYXRpb24ncyByZXNlYXJjaCBpbnN0aXR1dGlvbnMgcGVyIHJlc2VhcmNoIGRvbGxhciBleHBlbmRlZC5UaGUgdW5pdmVyc2l0eSBkaXNjbG9zZWQgYSByZWNvcmQgNDAgbmV3IGludmVudGlvbnMgbGFzdCB5ZWFyLCB1cCBmcm9tIDM2IGluIGZpc2NhbCB5ZWFyIDIwMDIgMDMuIEEgcmVjb3JkIHNldHRpbmcgJDEuNzUgbWlsbGlvbiwgb3IgbW9yZSB0aGFuIDkwIHBlcmNlbnQgb2YgdGhlIGxpY2Vuc2luZyBpbmNvbWUsIHdhcyByZWludmVzdGVkIGluIFVPIHJlc2VhcmNoIGJ5IGRpc3RyaWJ1dGluZyBpdCB0byBmYWN1bHR5IGludmVudG9ycyBhbmQgYWNhZGVtaWMgcHJvZ3JhbXMuIApBbmQsIHVubGlrZSB0aGUgMTk4MHMsIHRoZSBxdWFsaXR5IG9mIEJyaXRpc2ggQ29sdW1iaWEgd2luZXMgaXMgb24gcGFyIHdpdGggQ2FsaWZvcm5pYS4uIApUaGUgcGVyc29uIGdyYWJzIFNhbSBieSBoaXMgZmVldCBhbmQgZHJhZ3MgaGltIHRvIHRoZSBnYXJhZ2UuIFNhbSBpcyBkcmFnZ2VkIHJpZ2h0IHRvIHRoZSB0cnVuayBvZiBoaXMgYmVsb3ZlZCBDaWVsLiAKV2UndmUgZGVjaWRlZCB0byBob3N0IGEgZGlhcGVyIGFuZCBwb2tlciBwYXJ0eSBmb3IgbXkgaHVzYmFuZCBhbmQgaGlzIGZyaWVuZHMsIHBhcnRseSB0byBoZWxwIGJ1aWxkIG91ciBjbG90aCBkaWFwZXIgc3Rhc2ggYW5kIHRvIGhhdmUgYSBnZXQgdG9nZXRoZXIgYmVmb3JlIGhlIGJlY29tZXMgYSBkYWRkeS4gV2UncmUganVzdCBnb2luZyB0byBjcmVhdGUgYSBmYWNlYm9vayBldmVudCBhbmQgaW52aXRlIHNvbWUgb2YgaGlzIGJlc3QgZ3V5IGZyaWVuZHMsIHNvbWV0aGluZyB2ZXJ5IGxhaWQgYmFjaywgYW5kIEkgd2FzIHdvbmRlcmluZyBpZiB0aGlzIHdvcmRpbmcgc2VlbWVkIG9rIG9yIG5vdDoKSW4gSW5kaWEsIHF1ZXN0aW9ucyB3ZXJlIHJhaXNlZCBvbiB0aGUgc3VwZXJmaWNpYWxpdHkgb2YgdGhlIGV2ZW50LCB3aXRoIHNvbWUgZGVzY3JpYmluZyBpdCBhcyBzaGVlciBkaXBsb21hY3kgQSBsZWFkaW5nIEluZGlhbiBuZXdzcGFwZXIgZm91bmQgTW9kaSBkcmFtYXRpYyB0cmlwIHRvIExhaG9yZSBrZWVwaW5nIHdpdGggaGlzIGdlbmVyYWwgc3R5bGUgYW5kIHNhaWQgaXQgYWxsIHRoZSBkaW1lbnNpb25zIG9mIGluZGl2aWR1YWxpc20gYW5kIHRoZWF0cmUgdGhhdCBoYXZlIGJlY29tZSB0aGUgaGFsbG1hcmsgb2YgUHJpbWUgTWluaXN0ZXIgTmFyZW5kcmEgTW9kaSBwb2xpdGljcyBFdmVuIHRoZSBOZXcgWW9yayBUaW1lcyBxdWVzdGlvbmVkIHRoZSBjcmVkaWJpbGl0eSBvZiBNb2RpIHF1aXJreSBtb3ZlLiBOb3QgZGVueWluZyB0aGUgc2lnbmlmaWNhbmNlIG9mIE1vZGkgaW1wcm9tcHR1IHRyaXAgdG8gTGFob3JlLCBpdCBzYWlkIHRoZSBJbmRpYW4gbGVhZGVyIGhhcyBpbiB0aGUgcGFzdCBtb3ZlZCBmcm9tIG9uZSBwb2xpY3kgdG8gdGhlIG90aGVyIGFuZCBkZXNjcmliZWQgaXQgYXMgZGlwbG9tYXRpYyBkYW5jZSBkcmFtYXRpYyBMYWhvcmUgeWF0cmEgY291bGQgYmUgYmVzdCBzdW1tZWQgdXAgaW4gdGhlIGZhbW91cyBMYXRpbiBwaHJhc2UgdmlkaSwgdmljaSAoSSBjYW1lLCBJIHNhdywgSSBjb25xdWVyZWQpIHRoYXQgSnVsaXVzIENhZXNhciB1c2VkIGFmdGVyIGhpcyBxdWljayB2aWN0b3J5IGluIGEgc2hvcnQgd2FyIGFnYWluc3QgUGhhcm5hY2VzIGFyb3VuZCA0NkJDLiBIaXMgc2Vuc2Ugb2YgZWxhdGlvbiB3YXMgbm90IGVudGlyZWx5IGJhc2VsZXNzLiAKU29sZGllcnMgYWxzbyBlbmQgdGhlIHZpZGVvIGJ5IGFzc3VyaW5nIHVzIHRoYXQgIm5vIG9uZSBpcyB0aGlzIHZpZGVvIGlzIGdheS4gVGhhdCB3ZSBrbm93IG9mLiIgb2YgY291cnNlIHRoZXkgbXVzdCwgYmVjYXVzZSBubyBvbmUgaXMgYWxsb3dlZCB0byBiZSBvcGVubHkgZ2F5IHVuZGVyIHRoZSBEQURUIHBvbGljeS4uIApZb3UgY2FuIHJlYWxseSBzZWUgdGhlIGRpZmZlcmVuY2Ugd2hlbiB5b3Ugd2F0Y2ggYSBiYWJ5IGJvb21lciBtYWtlIGRlY2lzaW9ucyB2cyBhIHlvdW5nZXIgcGVyc29uLiBJdCBpcyBzbyBpbmdyYWluZWQgaW4gdGhlIG9sZGVyIGdlbmVyYXRpb24gdGhhdCB0aGUgZ292ZXJubWVudCBpcyBwcm90ZWN0aW5nIHRoZW0uIApJbiB0aGUgd29ybGQgb2YgbW9iaWxlIGFwcHMgYW5kIGFwcCBkZXZlbG9wbWVudCwgZGVlcCBsaW5rcyBhcmUgZXNzZW50aWFsbHkgVVJMcyBmb3IgdGhlIGluc2lkZSBvZiBhbiBhcHAgW3NvdXJjZXM6IERlZXBsaW5rLCBNb2JpbGVEZWVwTGlua2luZ10uIEp1c3QgYXMgZGVlcCBsaW5rcyBvbiBhIHdlYnNpdGUgaGVscCBicmluZyB1c2VycyBkaXJlY3RseSB0byB0aGUgY29udGVudCB0aGV5IGFyZSBsb29raW5nIGZvciwgZGVlcCBsaW5raW5nIGJldHdlZW4gYXBwcyBjb25uZWN0cyBhIHVuaXF1ZSBVUkwgdG8gYSBzcGVjaWZpYyBhY3Rpb24sIGNvbm5lY3RpbmcgdXNlcnMgdG8gdGhlIGNvbnRlbnQgdGhleSdyZSBzZWVraW5nIFtzb3VyY2U6IE1vYmlsZURlZXBMaW5raW5nXS4gCklmIHRoZSBncmFuZHBhcmVudCBwdXJjaGFzZSBzb21ldGhpbmcgZnJvbSBlYWNoIGtpZC4gCkZpcnN0IG9mIGFsbCwgdGhlcmUgbm8gc3VjaCBhcyBldm9sdmVkIHNwZWNpZXMgICBldmVyeSBzcGVjaWVzIGlzIGVxdWFsbHkgZXZvbHZlZCBmb3IgdGhlIG5pY2hlIHRoZXkgZmlsbC4gRXZvbHV0aW9uIGRvZXMgbm90IHJhbmsgc3BlY2llcyAgIHBlb3BsZSBhbmQgdGhlaXIgZGVzaXJlIHRvIGJlIHVuaXF1ZS9odW1hbiBleGNlcHRpb25hbGlzbSBpcyB3aGF0IGNhdXNlcyBzcGVjaWVzIHRvIGJlIGFjY29yZGluZyB0byB3aGF0ZXZlciB2YXJpYWJsZSB3ZSBleGNlbCBhdCAoaW4gdGhpcyBjYXNlLCB5b3UgdGFsa2luZyBhYm91dCBzbyB0aGF0IHRoZSB2YXJpYWJsZSkuIElmIHdlIHdlcmUgcmFwdG9ycyByYW5raW5nIHNwZWNpZXMsIGh1bWFucyB3b3VsZG4gYmUgdmVyeSBoaWdoIG9uIHRoZSBzY2FsZSBiZWNhdXNlIHdlIGNhbiBmbHksIGRpdmUgdGhyb3VnaCB0cmVlcywgc2VlIG1pY2UgZnJvbSBhIGttIGluIHRoZSBza3ksIGV0Yy4uIAoxIHBvaW50ICBzdWJtaXR0ZWQgMSBob3VyIGFnb0R1ZGUuIHRoZXJlIGFyZSBwbGVudHkgb2YgdGltZXMgd2hlbiBteSBuZWlnaGJvdXJzIGhhdmUgbGVmdCBzb21ldGhpbmcgb24gdGhlIHNpZGUgb2YgdGhlIHJvYWQgYW5kIGZvciBkaXNwb3NhbCBhbmQgSSBqdXN0IHRha2VuIGl0IGhvbWUuIFllYWggaXQgaW4gYSBjb21tZXJjaWFsIGJpbiBidXQgaXQgd2FzIGdvaW5nIHRvIGJlIGRlc3Ryb3llZCBvciBzZW50IHRvIHRoZSB0aXAuIApZb3UgbW92ZSB0aGUgZnJhZyBsYXVuY2hlciB0byB0aGUgbGF1bmNoZXIgc2xvdCwgdGhlbiBhbGwgeW91IGFyZSBnb2luZyB0byBkbyBpcyBlbnN1cmUgdGhhdCBsYXVuY2hlciBuZXZlciBnZXRzIHBpY2tlZCBhZ2Fpbi4gQmVjYXVzZSB3aHkgYm90aGVyIHdpdGggaXQgd2hlbiB5b3UgaGF2ZSBsYXVuY2hlcnMgdGhhdCBjYW4gYmUgc2hvdCBmdXJ0aGVyLCByZWxvYWRlZCBmYXN0ZXIsIGRlc3Ryb3kgZm9ydGlmaWNhdGlvbnMsIGFjdHVhbGx5IGRlYWwgc2l6YWJsZSBkYW1hZ2UgdG8gdmVoaWNsZXMsIGFuZCBzdGlsbCBoYXZlIHRoZSBzYW1lIGNhcGFjaXR5IGFzIHRoZSBmcmFnIGxhdW5jaGVyLgpJIHdoYXRjaCB0aGlzIGZpbG0gZXZlcnkgZGF5IGZvciBhIHllYXIsIEVsdG9uIEpvaG4gbXVzaWMsIHRoZSBzdG9yeSBoYWQgc2V2ZXJhbCBzdG9yaWVzIGluIGl0LCBhYm91dCBhIHlvdW5nIHRlZW4gdGhhdCB3YXMgaW4gYSBhZHVsdCB3b3JsZCwgd2FzIG1vcmUgYWR1bHQgdGhhbiB0aGUgYmFuZCBtZW1iZXJzLCBncm91cGllcyB0aGF0IHdlcmVuJ3QganVzdCBncm91cGllcyB0aGV5IGxvb2tlZCBmb3IgbG92ZSwgYmFuZCBtZW1iZXIgdGhhdCBoYWQgd2VudCBvdXQgb2YgaGlzIHdheSB0byBtYWtlIHVwIGZvciBoaXMgd3JvbmcgZGVlZHMgLiBMb3ZlIHRoaXMgZmlsbS4uIApUaGUgbWF0ZXJpYWwgb24gdGhpcyBzaXRlIG1heSBub3QgYmUgcmVwcm9kdWNlZCwgZGlzdHJpYnV0ZWQsIHRyYW5zbWl0dGVkLCBjYWNoZWQgb3Igb3RoZXJ3aXNlIHVzZWQsIGV4Y2VwdCB3aXRoIHRoZSBwcmlvciB3cml0dGVuIHBlcm1pc3Npb24gb2YgQWR2YW5jZSBPaGlvLgpMIFJlbW92ZWQgbCAgMSBwb2ludCAgc3VibWl0dGVkIDUgZGF5cyBhZ28KVGhlIHZpZXdlciBzZWVzIGEgd2lkZXIgdHJhZ2VkeSB1bmZvbGRpbmcsIGluIGhpbmRzaWdodCwgZnJvbSB0aGUgc2FmZXR5IG9mIGEgZGVzazsgdGhlIHNvbGRpZXJzIGFyZSByZWFjdGluZyBpbiByZWFsIHRpbWUsIG9uIGhpZ2ggYWxlcnQsIGV4cG9zZWQuIFJlY2VudCBzdHVkaWVzLCByZXNlYXJjaGVycyBoYXZlIHNob3duIHRoYXQgc3VjaCBkaXN0YW5jZSB0ZW1wdHMgcGVvcGxlIHRvIHNjcmlwdCBob3cgdGhleSB3b3VsZCBhY3QgaW4gdGhlIHNhbWUgcGxhY2UsIGFuZCBvdmVyZXN0aW1hdGUgdGhlIGZvcmNlIG9mIHRoZWlyIG93biBwcm9mZXNzZWQgbW9yYWwgcHJpbmNpcGxlcy4uIApEb2VzIFdpbm5pbmcgTWVhbiBhIFdpbmRmYWxsCkluIHRoaXMgaGUgaXMgbm90IGFwb2xpdGljYWwgYXQgYWxsLiAKVG9ueXR5bGVyZHJhd3MgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxMCBkYXlzIGFnbwpSYWRmZW1zIGFyZW4ndCBibGFua2V0IG9wcG9zZWQgdG8gbWVuIG9yIHdvbWVuIGNob29zaW5nIHRvIGJlIHN0YXkgYXQgaG9tZSBwYXJlbnRzLCBhcmUgdGhleT8gTXkga2lkcyBhcmUgZ3Jvd24gbm93LCBidXQgaWYgbXkgd2lmZSBoYWQgYmVlbiBhYmxlIHRvIG1ha2UgbW9yZSBtb25leSB0aGFuIG1lLCBJIHdvdWxkIGhhdmUgZ2xhZGx5IGJlZW4gYSBzdGF5IGF0IGhvbWUgZGFkISBCdXQgc2hlIGNob3NlIGFuIGFydCBlZHVjYXRpb24gYW5kIEkgY2hvc2UgYSBwcm9mZXNzaW9uLCBzbyBpdCByZWFsbHkgd2Fzbid0IGFuIG9wdGlvbi4gCihJIGhhZCBWIHN5bmMgYXQgdHJpcGxlIGJ1ZmZlcmluZyBvbiB0b28gYXQgZmlyc3QgYW5kIEkgdGhvdWdodCB0aGF0IHdhcyB0aGUgZml4LiBCdXQgYWZ0ZXIgYSBjb3VwbGUgb2YgZ2FtZXMgSSBqdXN0IGNvdWxkbiBzdGFuZCB0aGUgaW5wdXQgbGFnIHNvIEkgdHVybmVkIGl0IG9mZiBhbmQgaXQgaGFzIHdvcmtlZCBzcGxlbmRpZGx5IHNpbmNlLikuIApJZiB0aGUgbmFtZSBpcyBzdXBlciBvZmYgaXQgd29uJ3Qga25vdyB3aGF0IGl0IGlzLk92ZXIgdGhlIGxhc3Qgc2Vhc29uIG9yIHR3bywgdGhlIHN0b3JpZXMgaGF2ZSBiZWVuIGdldHRpbmcgcmVhbGx5IG1pZGRsaW5nIGF0IGJlc3QuIApTY3JlZW5pbmcgV291bGQgU2F2ZSBMaXZlcyBNb25leQpXZSBhdCByaXNrIHdoZW4gd2UgaGF2ZSBzbyBtdWNoIG9mIG91ciBtb25leSBpbiBwcm9wZXJ0eSB0aGF0IHBheXMgbm90aGluZyBhbmQgbWlnaHQgbmV2ZXI/IEhhbmsgYXNrcy4gY29yZSBpc3N1ZSBpcyBhIGNvdXBsZSBvZiByZW50YWwgY29uZG9zIHRoYXQgYXJlIG5vdCBnb29kIGludmVzdG1lbnRzLCBoZSBleHBsYWlucy4gY291cGxlIHdobyBhcmUgbGFuZGxvcmRzIHdoaWxlIHJlbnRpbmcgdGhlbXNlbHZlcyByaXNrIHdyZWNraW5nIHRoZWlyIHJldGlyZW1lbnRXZWFsdGh5IG9uIHBhcGVyLCBjb3VwbGUgd2l0aCAkMi45IG1pbGxpb24gaW4gYXNzZXRzIG5lZWRzIHRvIHNlbGwgYSBwcm9wZXJ0eSB0byBmaW5hbmNlIHJldGlyZW1lbnRQcm9wZXJ0eSBkcmFnClRoZW4sIGFzIGEgam9rZSwgYmVjYXVzZSBteSBpZGlvdCwgYXdrd2FyZCB0ZWVuYWdlIGJyYWluIGNvdWxkbiBhY3R1YWxseSBjb25jZWl2ZSBvZiB0aGUgaWRlYSBvZiBhbnkgZ2lybCBsaWtpbmcgbWUsIEkgc2FpZCAiTWF5YmUgd2Ugc2hvdWxkIGdldCB0b2dldGhlci4gWW91IGNhbiBiZSBteSBnaXJsZnJpZW5kIGFuZCB0aGVuIHdlIG1ha2UgdGhlbSBoYW5nIGFyb3VuZCB3YWl0aW5nIGZvciB1cyBvbmNlIGluIGEgd2hpbGUuIiBGcmllbmRzIHdpdGggc29jaWFsIHNraWxscywgYW1pcml0ZT8KVHdvIG1pbnV0ZXMgb2Ygbm90IGJlaW5nIGFibGUgdG8gYnJlYXRoZSwganVzdCBtYWtlIHNxdWF3a2luZyBub2lzZXMgYXMgeW91IHN0cnVnZ2xlIHRvIGdldCBhaXIgaW4geW91ciBib2R5LiBKdXN0IGJlZm9yZSBJIGFjdHVhbGx5IGxvc2UgY29uc2Npb3VzbmVzcywgaXQgY2xlYXJzIHVwIGFuZCBJIGNhbiBicmVhdGhlIGFnYWluLiBCdXQgaXQgYWx3YXlzIGhhcHBlbnMgYXQgbmlnaHQsIGFuZCBJIGRvbiBzbGVlcCB0aGUgcmVzdCBvZiB0aGUgbmlnaHQgYmVjYXVzZSBteSB0aHJvYXQgaHVydHMgYW5kIHRoZSBhZHJlbmFsaW5lIGZyb20gdGhlIHBhbmlja2luZyBwcmV2ZW50cyBtZSBmcm9tIGdvaW5nIGJhY2sgdG8gc2xlZXAuKS4gCkJ5IFR1ZXNkYXkgbW9ybmluZywgbW9yZSB0aGFuIDUwMCBmbGlnaHRzIHNjaGVkdWxlZCBmb3IgV2VkbmVzZGF5IGFsc28gd2VyZSBjYW5jZWxlZC4gCkFsc28gYWJvdXQgdGhlIG11bHRpd2F5IHBvdHMsIHBva2Vyc25vd2llIGZvciBleGFtcGxlIHBsYXlzIHRpZ2h0ZXIgd2l0aCB0aGUgd2Vha2VyIGhhbmRzIGxpa2Ugc3VpdGVkIGNvbm5uZWN0b3JzIGFuZCBzbWFsbCBwYWlycyBiZWNhdXNlIHdpdGggbW9yZSBwbGF5ZXJzIHlvdSB3aWxsIG1vcmUgb2Z0ZW4gYmUgY29vbGVyZWQgYnkgZmx1c2ggb3ZlciBmbHVzaCBvciBzZXQgb3ZlciBzZXQuIApFdmVyeWJvZHkgc2hvdWxkIGRvIGNhcmRpbywgbm90IGp1c3QgcGVvcGxlIGxvb2tpbmcgdG8gbG9zZSB3ZWlnaHQuIFRvIGJlIGhvbmVzdCB0YWxrIHRvIGFueW9uZSB3aG8gZm9sbG93cyBhIHN0cmljdCBsaWZ0aW5nIGFuZCBjYXJkaW8gcHJvZ3JhbSwgYW5kIHRoZXkgd2lsbCBsaWtlbHkgdGVsbCB5b3UgY2FyZGlvIGhhcyB0aGUgYmlnZ2VzdCBhZmZlY3Qgb24gaG93IHRoZXkgbG9vayBhbmQgbW9yZSBpbXBvcnRhbnRseSB0aGVpciBlbmVyZ3kgbGV2ZWxzLiAKVGhlbiB0aGVyZSBldmVudHMgICBmZXN0aXZhbHMsIHBhcnRpZXMgYW5kIG90aGVyIGV2ZW50cyB0aGF0IHdvdWxkIGJlIG1lbW9yYWJsZSwgZWl0aGVyIGJlY2F1c2Ugd2UgaGFkIHNvIG11Y2ggZnVuIG9yIGJlY2F1c2UgaXQgbGVmdCBhIG1hcmsuIEJlYXIgaW4gbWluZCwgdGhvdWdoLCB0aGF0IHlvdSBoYXZlIHRvIGdvIHRocm91Z2ggc2VjdXJpdHkgdHdpY2UgaWYgeW91IGdvIG91dCBhbmQgZ28gYmFjayBpbi4gCkluIHdvbWVuJ3MgZ3ltbmFzdGljcywgdGhlIHByZXRlZW4geWVhcnMgYXJlIGV4dGVuZGVkIHRvIGFnZSAxOC5bNF0gSW4gcG9ybm9ncmFwaHksICJwcmV0ZWVuIiBpbmNsdWRlcyBhbnkgd29tYW4gd2hvIGFwcGVhcnMgdG8gYmUgdW5kZXIgdGhlIGFnZSBvZiAyMy4KSXQncyBjaGVhcCBhbmQgZWFzaWx5IGF2YWlsYWJsZSBzbyBnaXZlIGl0IGEgdHJ5IGlmIHlvdSB3YW50LiAKU2FkLCBidXQgdHJ1ZS4gVGhlcmUgYSBwbGFjZSBmb3IgaXQsIEkgdGhpbmsgdGhleSBqdXN0IG5vdCBnb2luZyBhdCBpdCB0aGUgcmlnaHQgd2F5LiBUaGV5IGNvdWxkIGRlZmluaXRlbHkgc2VsbCBhbm90aGVyIG9uZSBhcyBsb25nIGFzIHRoZXkgbWFrZSBpdCBhICQzMCAkNDAgZ2FtZSAod2l0aCBvciB3aXRob3V0IE1QLCBidXQgbmVlZHMgY28gb3ApIGFuZCBkb24gdHJ5IHRvIHB1c2ggaXQgYXMgYSBBQUEgY29uc29sZSBzZWxsZXIuIApGaW5hbGx5LCBKYW1lcyBzdG9wcyBhbmQgc2F5cywgaGVyZS4gCkF0IHRpbWVzLCBpdCBzZWVtZWQgbGlrZSB0aGVyZSB3YXMganVzdCBubyBlbmQuIApCdXQgZm9yIGFkdmVydGlzZXJzLCBpdCdzIGp1c3QgYW5vdGhlciBibGlwIG9mIGRyYW1hIGluIGEgbmV3cyBtYXJrZXRwbGFjZSB0aGF0IGhhcyBiZWNvbWUgbGl0dGVyZWQgd2l0aCBjYWxscyBmb3IgYm95Y290dHMgYW5kIGRlbWFuZHMgdG8gcHVsbCB0YWxraW5nIGhlYWRzIG9mZiBuZXR3b3Jrcy4gClRoYXQgaXMgd2hhdCBpIG1lYW50IGJ5IGV4dHJhIHRoaW4sIGFzIGluIFRhbWl5YSBFeHRyYSBUaGluIHBsYXN0aWMgY2VtZW50LCBidXQgcGxhc3RpYyBjZW1lbnQgZG9lc250IG1ha2UgaXQgYW55IGVhc2llciBzaW5jZSB5b3UgaGF2ZSB0byBncmlwIGl0IGxpa2UgYSBNRmVyIHVudGlsIHRoZSBwYXJ0cyB3ZWxkIHRvZ2V0aGVyIGNsZWFubHksIGFuZCB0aGVuIGNsZWFuIHVwIGFmdGVyd2FyZHMsIHdoaWNoIGNhbiBiZSByZWFsbHkgYmFkIG9uIHNvbWUgbWluaXMuIEFzIFN1Ym1pc3NpdmVPY3RvcHVzIG1lbnRpb25lZCwgR1cgY2FuIHB1dCB0aGUgc2VhbSBsaW5lcyBpbiB2ZXJ5IGJhZCBwb3NpdGlvbnMgbGlrZSBpbiB0aGUgbWlkZGxlIG9mIHNob3VsZGVyIHBhZHMuIApJJ20gaW4gd2VlayA2IG9yIHNvIG9mIEhhbnNvbidzIHRyYWluaW5nIHBsYW4gZm9yIEp1bmUgbWFyYXRob24uIFllc3RlcmRheSBJIGhhZCBhIHRlbXBvIHJ1biBzY2hlZHVsZWQgYnV0IEkgY291bGRuJ3QgaGl0IHRoZSBwYWNlIGFzIHRoZXJlIHdlcmUgZml2ZSBpbmNoZXMgb2Ygc25vdyBvbiBhbGwgdGhlIHNpZGV3YWxrcy4gSSBwdXQgaW4gbW9yZSBlZmZvcnQgdGhhbiBhbiBlYXN5IHJ1biBidXQgZGlkbid0IGVuZCB1cCBnb2luZyBtdWNoIGZhc3Rlci4gUHJvYmFibHkgd2FzIG5vdCBhcyBtdWNoIGVmZm9ydCBhcyBJIHdvdWxkIGhhdmUgcHV0IGludG8gdGhlIGdvYWwgcGFjZSBzaW5jZSBJIHdhcyBtb3N0bHkgZm9jdXNlZCBvbiBub3QgZmFsbGluZy4gSSBkb24ndCBmZWVsIGZhdGlndWVkIGZyb20gaXQuCkVzIGdpYnQgZWluaWdlIEJsdHRlciwgZGllIGdhbnogdHlwaXNjaGUgVHJhcCBIYW5kcyBzaW5kIHVuZCBiZWkgZGVuZW4gbWFuIGVpZ2VudGxpY2ggc29mb3J0IGhlbGxocmlnIHdlcmRlbiBzb2xsdGUuIERpZXNlIHNpbmQgdW50ZXIgYW5kZXJlbTogQVQsIEFKLCBLUSwgS0osIEtULCBRSiB1bmQgUVQuCkkgY2FyZSBhYm91dCB5b3UiIGNhbiBiZSB0aGUgYmVzdCB3YXkgd2UgY2FuIGhlbHAgd2hlbiBwcm9ibGVtcyBzZWVtIGxpa2UgdGhleSBjYW4ndCBiZSBmaXhlZC4gClNwb25zb3JpbmcgYSBwb2tlciBydW4gaXMgZmFpcmx5IHNpbXBsZSBidXQgdGFrZXMgdGltZSBhbmQgc29tZSBub3Qgc28gaGFyZCB3b3JrLiBUaGUgZmlyc3QgdGhpbmcgeW91IG5lZWQgdG8gZG8gaXMgcGxhbiB0aGUgdHJhdmVsIHJvdXRlIGFuZCBwb3NpdGlvbmluZyBvZiB0aGUgY2hlY2sgcG9pbnRzLiBUaGUgcm91dGUgc2hvdWxkIGJlIGxhaWQgb3V0IHNvIHRoYXQgdGhlIGxhc3QgY2hlY2sgcG9pbnQgaXMgYXQgdGhlIGZpbmFsIGRlc3RpbmF0aW9uLiAKSXQgY2hlYXRpbmcsIHBsYWluIGFuZCBzaW1wbGUsIGFuZCBpZiBoZSBsZXQgdGhpcyBoYXBwZW4sIHdoYXQgZWxzZSBjb3VsZCBoZSBkbyBhbmQgdHJ5IHRvICJjbGFpbSBpZ25vcmFuY2UiPwpGb3IgZXhhbXBsZSBzYXkgdHdvIG1lbiBhcmUgY2hhcmdlZCB3aXRoIGFnZ3JhdmF0ZWQgYXNzYXVsdC4gClRlbiB5ZWFycyBhZ28sIFNhbWFudGhhIEZhcmJlciwgbm93IGEgMjUgeWVhciBvbGQgTWFuaGF0dGFuIHJlc2lkZW50LCB0ZWxscyBUaGUgUG9zdCBzaGUgd2FzIGludm9sdmVkIGluIGFuIGluYXBwcm9wcmlhdGUgcmVsYXRpb25zaGlwIHdpdGggaGVyIHRlYWNoZXIgYXQgTG9uZyBJc2xhbmQgcHJpdmF0ZSBzY2hvb2wgTGF3cmVuY2UgV29vZG1lcmUgQWNhZGVteS4gV2hpbGUgdGhlaXIgcmVsYXRpb25zaGlwIHdhc24ndCBzZXh1YWwsIHRoZSBleHBlcmllbmNlIGhhdW50ZWQgaGVyIGZvciB5ZWFycy4gClRoZSBwYWlyIGhhdmUgbm93IG1hZGUgdXAuLiAKV2h5IHlvdSB3b3VsZCB3YW50IHRvIHNoYWtlIGEgc3RpY2sgYXQgYSBqb2tlIGlzIGJleW9uZCB1cywgYnV0IGNoYWN1biAgc29uIGdvdC5USiBvYmxpZ2luZ2x5IGhvcHBlZCB1cCBvbiB0aGUgZGVzayBhcyBJIHdhcyB3cml0aW5nIHRoaXMgdG8gcmVtaW5kIG1lIHRoYXQsIGhvcnJpYmlsZSBkaWN0dSwgd2UgaGFkIG5vIGNhdHMgaW4gdGhpcyB3ZWVrJ3MgaXNzdWUhIFNpdHVhdGlvbiByZWN0aWZpZWQuIEhlJ3MgYWxzbyByZW1pbmRpbmcgeW91IHRvIHJlYWQsIGxlYXZlIGNvbW1lbnRzLCBzaGFyZSB0aGlzIGJvdW50eSBnZW5lcm91c2x5IG9uIHlvdXIgc29jaWFsIG1lZGlhIG9mIGNob2ljZSwgYW5kIHJlbWVtYmVyIHRvIHNlbmQgU3R1ZmYuIFRoaXMgbWFnYXppbmUgd29uJ3Qgd3JpdGUgaXRzZWxmISBXaGF0IGRvIHlvdSB0aGluayBpdCBpcywgYW4gRXNjaGVyIGRyYXdpbmc/U3RheSB3YXJtL2Nvb2wvZHJ5LCB3aGVyZXZlciB5b3UgYXJlLiAKIlRoZSBmaXJzdCB0aGluZyB0aGF0IGNhbWUgdG8gbXkgbWluZCwgd2FzIHRoYXQgRXJuaWUgdGlja2VkIG9mZiB0aGUgd3JvbmcgcGVyc29uLCBFcm5pZSB3YXMgZGlnZ2luZyB0b28gZGVlcCwgIiBzYWlkIE1heW9yIFdpbHNvbi4gIkRvIHlvdSBiZWxpZXZlIHRoYXQgRXJuZXN0IGFuZCBDaGFybGVuZSBrbmV3IHRoZWlyIGF0dGFja2VyLCB0aGF0IHRoZXkgb3BlbmVkIHRoZSBkb29yIGFuZCBsZXQgdGhhdCBwZXJzb24gaW4/ICIgVmFuIFNhbnQgYXNrZWQgRGV0ZWN0aXZlIFNjb3R0IER1ZGVrLiAiVGhlcmUncyBubyBkb3VidCBpbiBteSBtaW5kIHRoYXQgdGhleSBrbmV3IHdobyB0aGUgcGVyc29uIHdhcyBpbnNpZGUgdGhlaXIgaG91c2UsICIgaGUgcmVwbGllZC4gCkJ1dCB3ZWFyIHNvY2tzIHlvdSBoYXZlIHVnbHkgZmVldCBhbmQgdGhlIGRvY3RvciB3b24ndCB3YW50IHRvIGhlbHAgeW91IGlmIGhlIHNlZXMgeW91ciBjcmFja2VkIGhlZWxzIi4gCkFzIHRoZXJlIGlzIGEgcHJvb2YgdGhhdCB0aGUgc3RhdGVtZW50ICJwcm92aW5nIHRoYXQgc29tZXRoaW5nIGRvZXMgbm90IGhhcHBlbiBpcyBpbXBvc3NpYmxlIiBpcyBpbmNvcnJlY3QgYXMgd2VsbCBhcyBhIHByb29mIHRoYXQgdGhlIGludmVyc2Ugc3RhdGVtZW50IGlzIGNvcnJlY3QgSSBoYXZlIHRvIGFzc3VtZSB0aGF0IHlvdXIgYmFzZSBhc3N1bXB0aW9uIGlzIGZhdWx0eS4KT2YgdGhvc2UsIDEwMiBjaGlsZHJlbiByZWNlaXZlZCBhIGRpYWdub3NpcyBvZiBBU0QuIApBcyBsb25nIGFzIHlvdSBhY2tub3dsZWRnZSB0aGF0IGdvaW5nIGluLCB5b3UnbGwgaGF2ZSBmdW4uIFRoZSBmZWFyIGlzIGZvciB0aG9zZSB3aG8gZG9uJ3QgZG8gdGhlaXIgcmVzZWFyY2ggYW5kIHdhbmRlciBpbnRvIHRoaXMgbW92aWUgdW5hd2FyZSBvZiB3aGF0IHRoZXkncmUgYWJvdXQgdG8gc2VlLiBUaGVyZSBpcyBubyB0ZWxsaW5nIHdoYXQgdGhleSdsbCBjb21lIG91dCB0aGlua2luZy4uIApTaGUgbWF5IGxpa2UgdG8gYmUgdG91Y2hlZCBBUk9VTkQgaXQgYSBsb3QgZmlyc3QuIApJZiB0aGVyZSBhcmUgaG9zdGVscywgZXNwZWNpYWxseSBpbmRlcGVuZGVudCBvbmVzLCBhbmQgeW91IGdldCB0aGVzZSBvdXRzaWRlIHRoZSBjaXRpZXMgYXMgd2VsbCBpbiBzb21lIGNvdW50cmllcywgeW91IGJlIGZpbmUgbWVldGluZyBvdGhlciBwZW9wbGUgeW91ciBhZ2UgaW4gdGhlIGV2ZW5pbmdzLi4gCkJ1dCB3aGVyZSBkaWQgSSBsZWF2ZSB5b3UgbGFzdCB0aW1lIChhZnRlciB0aGF0IGFic3VyZGx5IGxvbmcgZW1haWwsIEkgd2lsbCB0cnkgdG8gYmUgbW9yZSBicmllZiBoZXJlISkuIEFoIHllcywgd2UgaGFkIGp1c3QgdGFrZW4gdGhlIGxvdmVseSBvdmVybmlnaHQgYnVzIGZyb20gVWRhaXB1ciB0byBKb2RocHVyLiBJIGhhdmUgdG8gbWVudGlvbiBoZXJlIHRoYXQgbWFueSBvZiB5b3UgcmVzcG9uZGVkIHdpdGggc3VycHJpc2UgdGhhdCBKZXNzIGFsbW9zdCBwZWVkIGluIGEgYmFnLiBXZSB0aG91Z2h0IHRoZSBoaWdobGlnaHQgb2YgdGhlIG5pZ2h0IHdhcyB0aGUgY29tcGxhaW50IGFib3V0IGhlciBzbWVsbCwgYnV0IEkgZ3Vlc3MgeW91IGhhZCB0byBiZSB0aGVyZSEKQW5kIHRoYXQncyB3aGVyZSB0aGUgdW5hbmltaXR5IG9mIG9waW5pb24gZW5kcy4uIApBIHNpbXBsZSBlcGlzb2RlIG9mIGEgZGF0ZSBnb25lIHdyb25nIGlzIGxlYXZlbmVkIHdpdGggc2VsZiByZWZsZXhpdmUgZ2VzdHVyZXMgYW5kIGEgZ3ltbmFzdGljIGNpbmVtYXRpYyBzeW50YXgsIGxlYXBpbmcgZnJvbSBuYXJyYXRpdmUgdG8gYXV0b2Jpb2dyYXBoeSBhbmQgYmFjayBhZ2Fpbiwgb2Z0ZW4gaW4gdGhlIHNhbWUgc2NlbmUuIApIb3cgZG8geW91IHBsYXkgVGV4YXMgaG9sZCBlbT8KVGhleSBhbHNvIHNoYXJlIGEgY29tbW9uIHJlc3BlY3QgZm9yIHRoZSBpbnN0aXR1dGlvbnMgdGhleSByZXByZXNlbnQsIHRoZSBzYWNyaWZpY2VzIHRoZWlyIHNvbGRpZXJzIG1ha2Ugb24gdGhlIGJhdHRsZWZpZWxkIGFuZCB0aGUgbG92ZSBmb3IgY291bnRyeSBhbmQgZmxhZyB0aGF0IGVhY2ggbWlsaXRhcnkgc3RhbmRzIGZvci4uIApTb3JyeSwgYnV0IHRoaXMgcmVzcG9uc2UgaGFzIGJlZW4gcmVtb3ZlZCBiZWNhdXNlIHdlIGRvIG5vdCBhbGxvdyB0aGUgcGVyc29uYWwgYW5lY2RvdGVzIG9yIHNlY29uZCBoYW5kIHN0b3JpZXMgb2YgdXNlcnMgdG8gZm9ybSB0aGUgYmFzaXMgb2YgYSByZXNwb25zZS4gCkZyaWVuZHMsIHN0cmFuZ2VycywgcGVvcGxlIHRoZXkgaGFkIGp1c3QgbWV0IHRoYXQgZGF5LCBpdCBkaWRuJ3QgbWF0dGVyLi4gClRoZSBhbnRpIHBva2llcyBjYW1wYWlnbnMgd2lsbCBiZSBnb2luZyBoZWFkIHRvIGhlYWQgd2l0aCBjYW1wYWlnbnMgZnJvbSBwcm8gcG9rZXIgbWFjaGluZSBwdWJzIGFuZCB0aGUgZ2FtaW5nIGluZHVzdHJ5LgpDb3VwbGUgcHVudGVycyAoaW5jIG1lKSBhdCB0aGUgdGFibGUgYmxpbmQgcmFpc2luZyB3aGVuIFVURyB0byA1LCBtYW5hZ2VkIHRvIGNvbnZpbmNlIFVURyB0byBkbyB0aGUgc2FtZSB0aGlzIGhhbmQuIApFdmVyeW9uZSBlbHNlIGluIHRoZSBtb3ZpZSBpcyBpbnRlcmVzdGVkIGluIGZvbGxvd2luZyBydWxlcyBiZWNhdXNlIHRoZXkgYXJlIHRoZSBydWxlcywgbm90IHRoZSBwdXJwb3NlIHRoYXQgdGhvc2UgcnVsZXMgYXJlIGFjdHVhbGx5IHN1cHBvc2VkIHRvIHNlcnZlLiAKTmFjaCBkZXIgWmFobHVuZyB2aWEgVGVybWluYWwga25uZW4gNSBiaXMgOCBXZXJrdGFnZSB2ZXJnZWhlbiwgYmlzIGRhcyBHZWxkIGF1ZiBJaHJlbSBLb250byBlcnNjaGVpbnQuCkVzcGVjaWFsbHkgTm9nLCB3aG8gZ29lcyBmcm9tIGZlcmVuZ2kgY2hpbGQgdG8gYSBjb21wZXRlbnQgc3RhciBmbGVldCBvZmZpY2VyLiBJdCBhbHNvIGhhcyBhIGZhbnRhc3RpYyBNci4gR2FyYWsgYW5kIFF1YXJrLCBhbmQgb25lIG9mIHRoZSBiZXN0IHN0YXIgdHJlayB2aWxsYWlucyBpbiBEdWthdC4gCkkgaW4gbXkgbGF0ZSAyMHMgbm93LCBhbmQgSSBjYW5ub3Qgb3ZlcnN0YXRlIGhvdyBiYWRseSBncm93aW5nIHVwIGluIGEgaG91c2Vob2xkIHdoZXJlIGV2ZXJ5dGhpbmcgSSBkaWQgd2FzIHNjcnV0aW5pemVkLCB0b3JuIGFwYXJ0LCBhbmQgZm9yYmlkZGVuIGhhcyBmdWNrZWQgdXAgbXkgc2Vuc2Ugb2YgYm91bmRhcmllcy4gCkNoYXJpc21hNiAgMCBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvCk9vZi4uIApTaW5nYXBvcmUuIApTa2lpbmcgaXMgdGhlIHBlcmZlY3Qgc3BvcnQgZm9yIHRoZSBzb2xvIHRyYXZlbGVyLCB3aGF0IHdpdGggd2lkZSBvcGVuIHBpc3RlcyBhbmQgc3BlY3RhY3VsYXIgbW91bnRhaW4gc2NlbmVyeSBvZmZlcmluZyBjb25zdGFudCBjb21wYW5pb25zaGlwLCBhbmQgdGhlIGFiaWxpdHkgam9pbiB0aGUgInNpbmdsZSdzIGxpbmUiIGZvciBxdWlja2VyIGNoYWlybGlmdCBhY2Nlc3MuIApBZnRlciB3aGljaCB0aGUgdHJpYWwgY291cnQgZG9lcyB3aGF0ZXZlciBwcm9jZWVkaW5ncyBhcmUgbmVjZXNzYXJ5LiBUaGVyZSBjb3VsZCBiZSBkaXNjb3ZlcnkgYW5kIGFuIGV2aWRlbnRpYXJ5IGhlYXJpbmcsIHdoaWNoIGNvdWxkIHRha2UgbW9udGhzLiBUaGVuIHRoZSB0cmlhbCBjb3VydCBkZWNpc2lvbiwgd2hpY2ggY291bGQgYWxzbyB0YWtlIG1vbnRocy4gCkkgdGhpbmsgeW91ciBpZGVhIG9mIHRoZSBFYXN0ZXJuIEZyb250IGlzIGEgYml0IG9mZi4gRmlyc3RseSwgUnVzc2lhIGhhZCBhYm91dCBoYWxmIG9mIHRoZWlyIGZvcmNlcyBzdGF0aW9uZWQgb3ZlciBpbiB0aGUgZWFzdCBwcmVwYXJpbmcgZnJvbSBhIEphcGFuZXNlIGF0dGFjay4gClRoZXJlIGFyZSBhIGxvdCBvZiBBc2lhbnMgaW4gQmVybGluLCB5b3Ugd29uIHN0YW5kIG91dCBpbiB0aGUgbGVhc3QsIGFuZCA5OSUgb2YgcGVvcGxlIHdvbiBldmVuIGxvb2sgdHdpY2UuIApIaWxtYSBhZiBLbGludCBpcyB0aGUgb25seSB0aGluZyBpbiB0d28geWVhcnMgdGhhdCBJIGZlbHQgd2FzIHdvcnRoIHRoZSB0cmlwIHVwdG93biB0byBzZWUuIApJZGVudGljYWwgdHdpbnMgc2hhcmUgbmVhcmx5IDEwMCBwZXJjZW50IG9mIHRoZWlyIGdlbmVzLCBhbmQgZnJhdGVybmFsIHR3aW5zIHNoYXJlIGFib3V0IGhhbGYgb2YgdGhlaXIgZ2VuZXMuSW4gYm90aCBjYXNlcyB0aGUgc2libGluZ3MgZWFybHkgZGV2ZWxvcG1lbnRhbCBlbnZpcm9ubWVudCAgIGJvdGggaW4gdGhlIHdvbWIgYW5kIGFmdGVyIGJpcnRoIGFyZSB2ZXJ5IHNpbWlsYXIuU2V2ZXJhbCBzbWFsbCB0d2luIHN0dWRpZXMgaW4gdGhlIHBhc3QgZGVjYWRlIGxvb2tlZCBhdCBob3cgY29tbW9uIGl0IHdhcyBmb3IgdHdpbiBzaWJsaW5ncyB0byBzaGFyZSBhbiBhdXRpc20gZGlhZ25vc2lzLCBhbmQgcmVzdWx0cyBvZiB0aG9zZSBzdHVkaWVzIHBsYWNlZCBnZW5ldGljcyBhcyB0aGUgcHJpbWFyeSBjYXVzZSBvZiBhdXRpc20uQnV0IHNvbWUgc2NpZW50aXN0cyBiZWxpZXZlIHRoYXQgdGhvc2Ugc3R1ZGllcyB3ZXJlbiBsYXJnZSBlbm91Z2ggdG8gbm90ZSB0aGUgZGlmZmVyZW5jZXMgaW4gc2hhcmVkIGRpYWdub3NlcyByYXRlcyBiZXR3ZWVuIGlkZW50aWNhbCBhbmQgZnJhdGVybmFsdHdpbnMuVGhlIG5ldyBzdHVkeSBpcyB0aGUgbGFyZ2VzdCwgYW5kIHRoZSBtb3N0IGRpdmVyc2UsIHRvIGxvb2sgYXQgdHdpbnMuT2YgdGhlIDE5MiBwYWlycyBvZiB0d2lucyBpbiB0aGUgc3R1ZHksIDU0IHdlcmUgaWRlbnRpY2FsIGFuZCAxMzggd2VyZSBmcmF0ZXJuYWwuIApNYXR0aGV3IHdhcyBhIGdpdmluZyBwZXJzb24uIEhlIG5ldmVyIHdhbGtlZCBieSBhIGhvbWVsZXNzIHBlcnNvbiB3aXRob3V0IGdpdmluZyBhbmQgd291bGQgZ2l2ZSBhbGwgb2YgaGlzIG1vbmV5IHdpdGhvdXQgaGVzaXRhdGluZy4gTWF0dGhldyBsb3ZlZCBjYXRzIGV2ZW4gdGhvdWdoIHdlIGhhZCAyIGRvZ3MuIEhlIGFsd2F5cyB3YWxrZWQgb24gS2luZyBTdHJlZXQgd2l0aCBhIHBvY2tldCBmdWxsIG9mIGNhdCB0cmVhdHMgYW5kIHdvdWxkIGhhdmUgYSB0cmFpbCBvZiBjYXRzIG9uIHRoZSBzaWRld2FsayBiZWhpbmQgaGltLiAKRGlzcHV0ZXMxMC4gCiJJIHdhcyBzaG9ja2VkIGJ5IHRoZSBNb3Rvcm9sYSBib2FyZCBkZWNpc2lvbiB0byB0dXJuIGRvd24gdGhpcyBkZWFsIGFzIHRoZSBkdWUgZGlsaWdlbmNlIHJlc3VsdHMgd2VyZSBvdmVyd2hlbG1pbmdseSBwb3NpdGl2ZSBhbmQgYm90aCBzaWRlcycgb3BlcmF0aW5nIHRlYW1zIGhhZCBhbHJlYWR5IGZvcm1lZCBzdHJvbmcgcmFwcG9ydCBhbW9uZyB0aGVtc2VsdmVzLCIgTXIgTWVuZyBzYWlkLgpJZiB5b3UgY2FuJ3QgY29tbWl0IHRvIGJlIGEgc3RhZmZlciwgdGhlbiB2b2x1bnRlZXJpbmcgaXMgdGhlIG5leHQgYmVzdCB0aGluZy4gCkkgcHV0IHRoaXMgcG9pbnQgdG8gdGhlbS4gVGhleSBzYWlkLCBubywgd2UgZ29pbmcgdG8gbWFrZSBxdWl0ZSBzdXJlIHRoYXQgaXQgZG9lc24gaGFwcGVuLiAKVGhleSB3YW50ZWQgdG8gZXhwb3NlIGhlciB3aGlsZSBvdGhlcnMgd2VyZSBhZnJhaWQgb2YgYmVpbmcgZXhwb3NlZCBhbmQgd2VyZSBhZnJhaWQgZm9yIHRoZWlyIHNhZmV0eSBpZiBzaGUgZXZlciByZXR1cm5lZCB0byBCcmF6aWwgYnV0IHdhbnRlZCB0byBwcm92ZSB0aGF0IGluIGZhY3QgdGhleSBrbmV3IGhlciBhbmQgd2VyZSB0ZWxsaW5nIHRoZSB0cnV0aCEgUXVpdGUgdGhlIHBhc3QuLiAKVGhlIHRydWx5IGNyYXp5IHBhcnQgaXMgdGhhdCB0aGlzIHdhc24ndCBDR0k6IHRoZSBXYWNob3dza2kncyBzcGVudCB0d28gd2hvbGUgZGF5cyBpbiBTeWRuZXkgdHJ5aW5nIHRvIGh1bnQgZG93biBhbmQgY2FzdCByZWFsIGlkZW50aWNhbCB0d2lucyBqdXN0IGZvciB0aGlzIHNjZW5lLiBUaGUgaWRlYSB3YXMgdG8gc2hvdyB0aGUgdmlld2VyIHRoYXQgTW91c2UsIHdobyBjcmVhdGVkIHRoZSBjb2RlLCB3YXMgYSBsYXp5IHByb2dyYW1tZXIgYW5kIGNvcHkvcGFzdGVkIGEgYnVuY2ggb2YgY2hhcmFjdGVycyBpbnN0ZWFkIG9mIGRlc2lnbmluZyB1bmlxdWUgcGVvcGxlLiBCdXQgcmVhbGx5LCBzaW5jZSBiYXNpY2FsbHkgbm9ib2R5IGluIHRoZSBhdWRpZW5jZSBub3RpY2VkIHRoZSBjbG9uZSBhcm1pZXMgZWl0aGVyLCBpdCBqdXN0IHByb3ZlZCB0aGF0IEdvZCBjb3VsZCd2ZSBnb3R0ZW4gYXdheSB3aXRoIGEgd2hvbGUgbG90IGxlc3Mgd29yayBieSBzaW1wbHkgcGFsZXR0ZSBzd2FwcGluZyBodW1hbml0eS4gCkkgdXBkYXRlZCBteSAib3V0ZGF0ZWQiZHJpdmVycy4gQWZ0ZXIgdGhlIHVwZGF0ZSwgbXkgV2luIDcgZG9udCBldmVuIGxvb2sgbGlrZSBXaW4gN2FueW1vcmUuIApCdXQgaG9uZXN0bHksIHRoZSBvbmx5IHRoaW5nIHRvIHNwZW5kIG1vbmV5IG9uIGlzLCByYXRoZXIgbGFtZSwgY29zbWV0aWNzLiAKRXhwZWN0aW5nIHNlY3JlY3kgd2hlbiB0YWxraW5nIHRvIGEgcGFubmVsIG9mZiArIDEwMCBwZW9wbGUsIG1vc3Qgb2YgdGhlbSBiZWluZyBkaXBsb21hdHMgYW5kIGludGVsbGlnZW5jZSBhc3NldHMsIGluIGEgc2V0dGluZyBmdWxsIG9mIGNhbW1lcmFzLCBtaWNyb3Bob25lcyxib3RoIGhpZGRlbiBhbmQgaW4gcGxpbiBzaWdodCwgaXMgb3V0cmlnaHQgc3R1cGlkLi4gCkl0J3MgZGVmaW5pdGVseSByZW1pbmlzY2VudCBvZiBhIExhZGEgb3IgbWF5YmUgYSBUcmFiYW50LiAKKEEgcGFpciBpcyBmb3JtZWQgYnkgdHdvIGNhcmRzIG9mIHRoZSBzYW1lIHJhbmsgaW4gdGhlIHNhbWUgcm93OiBraW5ncywgcXVlZW5zLCBldGMuIFN1aXRzIGFyZSBpcnJlbGV2YW50LiAKSW4gZmFjdCwgc3dpbmdpbmcgbGVhZCBwaXBlcyBtaWdodCBoYXZlIGdlbmVyYXRlZCBtb3JlIHByb2ZpdGFibGUgcmVzdWx0cy4gQSBHaWFudHMgb2ZmZW5zZSB0aGF0IGp1c3QgaGl0IC4xMDYgaW4gZm91ciBnYW1lcyBhdCBXcmlnbGV5IEZpZWxkIHdhcyBoZWxkIHRvIHR3byBoaXRzLCB0aGUgY2x1YidzIGZld2VzdCBldmVyIGluIHRoZWlyIDE4NCBnYW1lcyBwbGF5ZWQgYXQgQ29vcnMgRmllbGQuClRoZSBndXkgbmV4dCB0byBtZSBzYWlkIHJhaXNlIDQwMC4gCkFncmVlZC4gV2hlbiB0aGV5IG1ldCwgc2hlIGRlZmluaXRlbHkgb3V0cmFua2VkIGhpbS4gCldlIHdpc2ggYWxsIHRoZSB0ZWFtcyBjb21wZXRpbmcgaW4gdGhlIFdvcmxkIFRyaWF0aGxvbiBNaXhlZCBSZWxheSB0aGUgdmVyeSBiZXN0IG9mIGx1Y2suIFRoZSBldmVuaW5nIG9mIFRodXJzZGF5IDcgSnVuZSwgdGhlIHdvcmxkIGJlc3QgdHJpYXRobGV0ZXMgd2lsbCBiYXR0bGUgaXQgb3V0IGZvciB0aGUgZmlyc3QgTWl4ZWQgUmVsYXkgT2x5bXBpYyBxdWFsaWZpY2F0aW9uIHBvaW50cyBhbmQgdGhlIGNoYW5jZSB0byB0YWtlIGEgc3RlcCBjbG9zZXIgdG8gVG9reW8gMjAyMC4uIApJIGp1c3QgZGlzYWdyZWUgd2l0aCBhbG1vc3QgZXZlcnkgcG9pbnQgaGVyZS4gVmlsbGFpbiBpcyBhIGZpc2ggYW5kIHdlIGhlYWRzIHVwIGxldCBwbGF5IEFUQyBoZXJlLiBJIG1heWJlIGZvbGQgdGhlIGJvdHRvbSBsaWtlIDEwIDE1JSBvZiBoYW5kcyBhbmQgcGxheSB0aGUgcmVzdC4KWWVhcmx5LCBvdXIgcG9rZXIgbWFjaGluZSBsb3NzZXMgYXZlcmFnZSBvdXQgdG8gJDY5LDMwNyw2NjUgbWlsbGlvbi4KVGhpcyBpcyBzbyBmdWNrZWQgdXAsIHlldCBzby4gaXJvbmljYWxseSB0eXBpY2FsIG5vdyB0aGF0IEkgdGhpbmsgYWJvdXQgaXQ6IHRoZSBlY29ub215IHRlYWNoZXIgd2FzIGJ1bGx5aW5nIHRoZSBldGhpYyBhbmQgcmVsaWdpb3VzIGN1bHR1cmUgdGVhY2hlci4gYW5kIHdoZW4gdGhlIEVSQyB0ZWFjaGVyIHdhcyBsb3NpbmcgaGlzIG1pbmQgYW5kIGJlY29taW5nIGh5c3RlcmljYWwsIHdlbGwsIHdlIGFsbCBsYXVnaGVkLgpDdWFuZG8gcG9uZXMgdW4gYnJhemFsZXRlIGRlIGxhcyBXU09QIGVuIGp1ZWdvLCB0b2RvIGVsIG11bmRvIGRlYmUgdGVuZXIgbGFzIG1pc21hcyBvcG9ydHVuaWRhZGVzIGRlIGdhbmFybG8sIG5vIGxhcyBxdWUgdGUgb2ZyZXpjYSB0dSBjYXJ0ZXJhLiBGYXZvcmVjZW4gYSBsb3MgcXVlIGVzdG4gZGlzcHVlc3RvcyBhIGdhc3RhciBtcy4gClllYWggYnV0IHRoYXQgd2FzIHRoZSBtb3ZpZSB3aGljaCB0b3RhbGx5IGZ1Y2tlZCB1cCB0aGUgZmluYWwgYmF0dGxlIGFueXdheS4gCltkZWxldGVkXSAgMzYgcG9pbnRzICBzdWJtaXR0ZWQgOCBtb250aHMgYWdvCkJBQyBiZXR3ZWVuIDAuMDUgYW5kIDAuMDc5LCBpdCBpcyBhIGNvbnRyaWJ1dGluZyBmYWN0b3IgaW4gZGV0ZXJtaW5pbmcgd2hldGhlciB0aGUgcGVyc29uIHdhcyB1bmRlciB0aGUgaW5mbHVlbmNlLgpDdXJyZW50IG1ldGE6IHdlIGF0dGFjayB0aGluZ3MgYmVjYXVzZSB3ZSB3YW50IHRvIGRlc3Ryb3kgdGhlbSBhbmQgZ3JpZWYgb3VyIGVuZW1pZXMuIEFmdGVyIHdlIGhhdmUgdGFrZW4geW91ciBpc2xhbmQsIHdlIHBsYW50IGZsYWdzIGV2ZXJ5d2hlcmUgYW5kIGxlYXZlIGJlY2F1c2Ugd2UgZGlkbiBhY3R1YWxseSB3YW50IHRoZSBpc2xhbmQuIFdlIGp1c3Qgd2FudGVkIHRvIHdpcGUgeW91LgpQb2tlciBzZWF0aW5nIGFuZCB0aGUgcG9zaXRpb24gb25lIGhhcyBhdCB0aGUgdGFibGUgaXMgb25lIG9mIHRoZSBtb3N0IGltcG9ydGFudCBhbmQgbGVhc3QgdGFsa2VkIGFib3V0IGFzcGVjdHMgb2YgcG9rZXIuIEl0J3MgZXNwZWNpYWxseSByZWxhdGl2ZSB0byB0aGUgVGV4YXMgSG9sZCdFbSBwb2tlciBnYW1lIGJlY2F1c2UgaXQgaXMgcG9zaXRpb25hbCBpbiBuYXR1cmUuIFdoZXJlIGEgcGxheWVyIHNpdHMgZWFjaCBoYW5kIGRldGVybWluZXMgdGhlIGFtb3VudCBvZiBpbmZvcm1hdGlvbiBoZSBvciBzaGUgY2FuIGdhaW4gb24gb3RoZXIgcGxheWVycy4gVGhpcyBjYW4gaGF2ZSBhIGJpZyBlZmZlY3Qgb24geW91ciBwb2tlciBzdHJhdGVneSBhbmQgaG93IGEgaGFuZCBpcyBwbGF5ZWQuIFRoaXMgYXJ0aWNsZSB3aWxsIHJlZmVyZW5jZSBob3cgdG8gcGxheSBwb2tlciBmcm9tIGEgdGFibGUgb2YgMTAgcGxheWVycyBhbmQgZGlzY3VzcyBwbGF5aW5nIGZyb20gdGhlIGRlYWxlciwgZWFybHksIG1pZGRsZSBhbmQgbGF0ZSBwb3NpdGlvbnMuCkknbSBub3QgdGFsa2luZyBhYm91dCBiZWhhdmlvcmFsIHR3aXRjaGVzLCB3aGljaCBpcyBub3QgYXZhaWxhYmxlIGZvciB5b3Ugb25saW5lLiAKSmVycnkgUmljZSBTaGFyZXMgUGVyc29uYWwgU3VjY2Vzc2VzIHdpdGggQ2hpcm9wcmFjdGljIENhcmUgb24gdGhlIEZvb3RiYWxsIEZpZWxkIGFuZCB0aGUgRGFuY2UgRmxvb3IuKDEzIHRpbWUgUHJvIEJvd2wgZm9vdGJhbGwgcGxheWVyIHdobyBvd25zIDM4IGNhcmVlciByZWNvcmRzIGFuZCB0aHJlZSBTdXBlciBCb3dsIHJpbmdzKQpUaGlzIHJldmFtcCB3aWxsIGNyZWF0ZSBhIGdlbmVyYWwgcHVycG9zZSBmdW5jdGlvbiByb29tIGZvciBhYm91dCAxMDAgcGVvcGxlLiAKVW5kcmVzcyB5b3VyIHdpZmUgc21vb3RobHkgYW5kIGNhcmVmdWxseSBhbmQgbGV0IGhlciBsaWUgb24gdGhlIG1hc3NhZ2UgdGFibGUgb3Igb24gdGhlIGJlZC4gV2FybSB0aGUgb2lsIG9yIHRoZSBsb3Rpb24gZmlyc3QgYmVmb3JlIGx1YnJpY2F0aW5nIG9yIGFwcGx5aW5nIGl0IG9uIGhlciBiYWNrLCBsZWdzIGFuZCBhcm1zLiBXYXJtIGxvdGlvbiBhbGxvd3MgYSBzb290aGluZyBlZmZlY3Qgb24gdGhlIG1hc3NhZ2VkIGFyZWEuIExlYXJuIGFuZCB1c2Ugc29tZSB0eXBlcyBvZiBtYXNzYWdlOiAoYSkgZWZmbGN1cmFnZSAgIGRvaW5nIGEgc29mdCBzbGlkaW5nIGdsaWRlLCAoYikgcGV0cmlzc2FnZSAgIG1ha2luZyBhIGxhcmdlIHBpbmNoLCBhbmQgKGMpIHRhcG90ZW1lbnQgICBnaXZpbmcgYSBzb2Z0IGhhY2tpbmcgbW90aW9uIG9uIHRoZSBtYXNzYWdlZCBhcmVhIG9mIHRoZSBib2R5IGVzcGVjaWFsbHkgb24gdGhlIGJhY2suCkFicmFoYW0ncyBhZ2Ugd2FzIG5vdGVkIG9uIGEgc3BlY2lhbCBpY2luZyBpbnNjcmlwdGlvbiAib24gdGhlIGNha2U6ICJIYXBweSBiaXJ0aGRheS4gTW90aGVyIDExNCB5ZWFycyBvbGQuIiBUaGUgcGFydHkgdmlhcyBoZWxkIGluIHRoZSBob21lIG9mIE1ycy4gCkkga25vdyBFZGVuIGlzIHRoZSBiaWcgb25lIGhlcmUsIGJ1dCBtYWtlIG5vIG1pc3Rha2UgYWJvdXQgdGhpcyBvbmUgZGlyZWN0bHkgbmV4dCBkb29yLCBhcyB0aGV5IGhhdmUgcXVpdGUgYSBmZXcgcmVhbGx5IGF0dHJhY3RpdmUgbGFkaWVzIGluc2lkZSwgZG8gdGFrZSBub3RlIHRoYXQgdGhleSBoYXZlIGEgY291cGxlIG9mIGxhZHlib3lzIGluIGhlcmUgYXMgd2VsbC4gCkkgdW5kZXJzdGFuZCB0aGUgbmVlZCBmb3IgQVAgcm91bmRzIGFuZCBhbW1vIGRpdmVyc2l0eSBidXQgYW4gQVAgcm91bmQgdG8gZmxlc2ggaXMgc3RpbGwgYSBidWxsZXQgdG8gdGhlIGZsZXNoLiBUaGVyZSBoYXZlIGJlZW4gdG9vIG1hbnkgdGltZXMgd2hlcmUgSSB1c2luZyA3TjM5IFNQNiBvciBNOTk1IGFuZCBpdCB0YWtlcyBzZXZlcmFsIHJvdW5kcyB0byBwdXQgZG93biBhIGhhdGNobGluZyBvciBtb3NpbmxpbmcuIApXc3p5c2N5IHBpZXJkb2wgbyBqZWRub2NpIHBvbmFkIHBvZHppYWFtaSAobHVkemsgbmF0dXIgamVzdCBieSBwb2R6aWVsb255bSwgemF3c3plIGJkemllbXkgbWllbGkgaW5uZSBvcGluaWUgY28gZG8gd2FjaXdlaiBkcm9naSBkbyBjZWx1LCB0byBqZXN0IG5vcm1hbG5lIGkgemRyb3dlKSwgdGFrIGphayBvc3RhdG5pbyBqYWsgc3BhbGkgc2kgZmFjZXQgcHJ6ZWQgUEtpTmVtIChjbyB0byBkYW8gICBvdCBhYnNvbHV0bmllIG5pYyksIHphbWlhc3Qgd3ppIHNpIGRvIHJvYm90eSBpIHBvY2lnbiBvZHBvd2llZHppYWxueWNoIGRvIHdpbnkuIApNdW5pY2lwYWwgU29saWQgV2FzdGUgKE1TVykgbW9yZSBjb21tb25seSBrbm93biBhcyB0cmFzaCBvciBnYXJiYWdlIGNvbnNpc3RzIG9mIGV2ZXJ5ZGF5IGl0ZW1zIHdlIHVzZSBhbmQgdGhlbiB0aHJvdyBhd2F5LCBzdWNoIGFzIHByb2R1Y3QgcGFja2FnaW5nLCBncmFzcyBjbGlwcGluZ3MsIGZ1cm5pdHVyZSwgY2xvdGhpbmcsIGJvdHRsZXMsIGZvb2Qgc2NyYXBzLCBuZXdzcGFwZXJzLCBhcHBsaWFuY2VzLCBwYWludCwgYW5kIGJhdHRlcmllcy4gVGhpcyBjb21lcyBmcm9tIG91ciBob21lcywgc2Nob29scywgaG9zcGl0YWxzLCBhbmQgYnVzaW5lc3Nlcy4gCiJJdCBleHRyZW1lbHkgY29uZnVzaW5nIGZvciBhIGxvdCBvZiBwZW9wbGUgdG8gdW5kZXJzdGFuZCBiZWNhdXNlIHRoZSB2aWRlbyBnYW1pbmcgbGF3cyBoYXZlIGJlZW4gYWxsIG92ZXIgdGhlIGJvYXJkIGZvciB0aGUgcGFzdCBzZXZlcmFsIHllYXJzLCIgRHVuY2FuIGV4cGxhaW5lZC4gIldlIHRob3VnaHQgdGhhdCB0aGUgTm9ydGggQ2Fyb2xpbmEgU3VwcmVtZSBDb3VydCBoYWQgc2V0dGxlZCBhbGwgdGhhdCBhIGNvdXBsZSB5ZWFycyBhZ28gYnkgc2F5aW5nIHRoYXQgdGhleSB3ZXJlIGFsbCBpbGxlZ2FsLiAKSSdtIHNwZWNpZmljYWxseSB0YWxraW5nIGFib3V0IHRoZSBwbGFjZXMgSSd2ZSBzZWVuIHdoZXJlIHRoZSBjb2FjaCB3cml0ZXMgYSBzaW5nbGUgc3RyZW5ndGggcHJvZ3JhbSBmb3IgYW4gZW50aXJlIGd5bSwgZGVzcGl0ZSBhIGRvemVuIG9mIHRoZWlyIGNsaWVudHMgbm90IG5lZWRpbmcgaGFsZiBvZiBwcm9ncmFtLi4gClRoZSBtdXNjbGVzIGludm9sdmVkIGluIHRoaXMgY28gY29udHJhY3Rpb24gaW5jbHVkZSB0aGUgdHJhbnN2ZXJzZSBhYmRvbWluaXMsIGludGVybmFsIGFuZCBleHRlcm5hbCBvYmxpcXVlcywgcmVjdHVzIGFiZG9taW5pcywgcXVhZHJhdHVzIGx1bWJvcnVtLCBlcmVjdG9yIHNwaW5hZSwgYW5kIG11bHRpZmlkaS4KWW91IGNhbiBqdXN0IGJlIGxpa2UgImR1ZGUsIHlvdSBwbGF5aW5nIGEgZ2FtZT8iIGFuZCBwb3N0IC9yL0hhaWxDb3Jwb3JhdGUuIApTdG9ja3Mgcm9zZSBNb25kYXksIGJvb3N0ZWQgYnkgZ2FpbnMgaW4gdHJhZGUgc2Vuc2l0aXZlIGluZHVzdHJpYWwgYW5kIHRlY2hub2xvZ3kgc3RvY2tzIGFmdGVyIHRoZSBVUyBhbmQgQ2hpbmEgYWdyZWVkIG9uIGEgdGVtcG9yYXJ5IHRyYWRlIGRldGVudGUuCklmIHlvdSBkb24gdHJhaW4gc3F1YXRzIGFscmVhZHksIHRob3NlIHdpbGwgaGVscCB3aXRoIGp1bXBpbmcgcG93ZXIsIGFzIHdpbGwgYSBidW5jaCBvZiBvdGhlciBleGVyY2lzZXMuIApNb3N0IHByZWduYW50IHdvbWVuIGFyZSBzY3JlZW5lZCBpbiB0aGUgc2Vjb25kIHRyaW1lc3RlciBlYXJsaWVyIGlmIHJpc2sgZmFjdG9ycyBhcmUgcHJlc2VudC4gCkVESVQ6IFRoaXMgZGlzY3Vzc2lvbiBpcyBiZWNvbWluZyB2ZXJ5IHRpbWUgY29uc3VtaW5nLiBJIHJlc3BlY3RmdWxseSBkaXNhZ3JlZSB3aXRoIHlvdXIgc3RhbmNlIHRvd2FyZHMgY29sb3VyIHBhbGV0dGVzLCB0aG91Z2ggSSB3b24gZGVueSB0aGF0IGl0IGNhbiBiZSBpbXByb3ZlZC4gSSBkb3VidCBlaXRoZXIgb2YgdXMgd2lsbCBidWRnZSBhbmQgdGhhdHMgZmluZS4gV2UgY2FuIGNvbnRpbnVlIGlmIHlvdSBsaWtlIGJ1dCBJIG1ha2Ugbm8gcHJvbWlzZSBvZiBhIHJlcGx5LiBTb3JyeSBpbiBhZHZhbmNlIGZvciBhYnJ1cHRseSBlbmRpbmcgdGhlIGFyZ3VtZW50LgpJIGhhdmUgY2hlY2tlZCBhIE5hdmVyIGJsb2cgc2l0ZS4gVG8gYmUgaG9uZXN0IGl0IHdhcyBjb25mdXNpbmcuIEJ1dCBpdCBzZWVtZWQgbGlrZSB0aGEgbWF4aW11bSByYXRlIHdhcyAwLjQlLiAKUGxheSBhIGdhbWUsIHdhdGNoIGEgY29tZWR5LCBnbyBmb3IgYSB3YWxrIGlmIHRoZSB3ZWF0aGVyIHJlYWxseSBuaWNlLCBldGMuSSBub3QgZ29pbmcgdG8gc2F5IHRoZXNlIDIgdGhpbmdzIGFyZSBnb2luZyB0byBjaGFuZ2UgeW91ciBsaXZlcyBvdmVyIG5pZ2h0LiAKRXZlbnR1YWxseSBJIGZvdW5kIGEgc3RhcnR1cCB0aGF0IHJlYWxseSBzZWVtZWQgdG8gY2xpY2sgd2l0aCBtZS4gVGhlaXIgZmluYW5jaWFsIHNpdHVhdGlvbiB3YXMgYWJvdXQgdGhlIHNhbWUgYXMgd2hhdCB5b3Ugc2F5aW5nLCBvciBhdCBsZWFzdCBpbiB0aGF0IGJhbGxwYXJrLiBJIHRvb2sgYSAxMCUgcGF5IGN1dCBhbmQgSSBjb3VsZG4gaGF2ZSBiZWVuIGhhcHBpZXIuIApJZiB5b3UgZG9uJ3QgYWR2ZXJ0aXNlIGl0LCBob3cgd291bGQgYW55b25lIGtub3cgdG8gZGlzY3JpbWluYXRlIGFnYWluc3QgeW91PyBBbmQgdGhhdCdzIGF0IHRoZSBiYXNpcyBvZiB0aGlzLiBTbyBpZiBwZW9wbGUgd2VhciB0aGVpciBzZXh1YWxpdHkgb24gdGhlaXIgc2xlZXZlIGFuZCB0aGVuIHRoZXkgd2FudCB0byBicmluZyBsaXRpZ2F0aW9uIGFnYWluc3Qgc29tZW9uZSB0aGF0IHRoZXkgd291bGQgcG9pbnQgdGhlaXIgZmluZ2VyIGF0IGFuZCBzYXksIGRpc2NyaW1pbmF0ZS4gVGhpcyBpcyB0aGUgaG9tb3NleHVhbCBsb2JieSB0YWtpbmcgaXQgb3V0IG9uIHRoZSByZXN0IG9mIHNvY2lldHkgYW5kIHRoZXkgYXJlIGRlbWFuZGluZyBhZmZpcm1hdGlvbiBmb3IgdGhlaXIgbGlmZXN0eWxlLCB0aGF0J3MgYXQgdGhlIGJvdHRvbSBvZiB0aGlzLiIKSDJnMiBSZXNlYXJjaGVycyBSZW1lbWJlciB0aGUgU29uZ015IG11bSB1c2VkIHRvIHNpbmcgaXQgdG8gdXMgd2hlbiB3ZSB3ZXJlIGNoaWxkcmVuLiAKSSBoYXZlIGEgcHJldmlvdXMgZGVncmVlIGluIG51dHJpdGlvbiBhbmQganVzdCBhYm91dCB0byBmaW5pc2ggbXkgbWVkaWNhbCBkZWdyZWUsIHNvIEkgbm90IGp1c3QgYW4gaW50ZXJuZXQgaG9iYnlpc3Qgd2l0aCB0aGlzIHN0dWZmLiBJIGRvbiB0ZW5kIHRvIGRyb3AgdGhpcyBpbnRvIGNvbnZlcnNhdGlvbiBvbiBSZWRkaXQgYmVjYXVzZSBpdCBjb21lcyBhY3Jvc3MgYSBiaXQgYXJyb2dhbnQgKHlvdSBzaG91bGQgbGlzdGVuIHRvIG1lIGJlY2F1c2UgSSBhIGRvY3RvciBldGMpLiAKQXVyb3JhIEhhbHNleSB1CkkgcHJvYmFibHkgZ2V0dGluZyBiZW50IG91dCBvZiBzaGFwZSBvdmVyIGl0LCBhbmQgSSBzdGlsbCBlbmpveSB0aGUgcmFjZSwgYnV0IEkgd2FudCBhIGZ1bGwgaGFsZiwgdGhlc2UgcmFjZXMgYXJlIGZ1Y2tpbmcgZXhwZW5zaXZlLiBUcmFpbCByYWNlcyBhcmUgcmFyZWx5IGV2ZXIgdGhlIGV4YWN0IGRpc3RhbmNlLiAKSG93IHRvIEJldCBvbiBQb2tlcgpZb3UncmUganVzdCBtaW51dGVzIGF3YXkgZnJvbSBlYXN5IGFjY2VzcyB0byB0aG91c2FuZHMgb2Ygc2luZ2xlcyBsb29raW5nIHRvIGRhdGUgYW5kIGhhdmUgbG9uZyB0ZXJtIHJlbGF0aW9uc2hpcHMuIFRoaXMgaXMgQ2hyaXN0aWFuIGRhdGluZyBtYWRlIHNpbXBsZS4gClRoaXMgd291bGQgbGlrZWx5IGJlIGJlc3QgaW50byBhIHJhbmdlIGJldCBmb3Igc2F5IDIwIDM1JSBwb3QsIGJ1dCB0aGUgc2ltcGxpY2l0eSBvZiB0aGUgYWxsIHJhbmdlIHJhaXNlIGlzIHZlcnkgaGVscGZ1bCBpbiBwcmFjdGljZS4uIApTb3dlaXQgZGllIEluaGFsdGUgYXVmIGRpZXNlciBTZWl0ZSBuaWNodCB2b20gQmV0cmVpYmVyIGVyc3RlbGx0IHd1cmRlbiwgd2VyZGVuIGRpZSBlIERyaXR0ZXIgYmVhY2h0ZXQuIEluc2Jlc29uZGVyZSB3ZXJkZW4gSW5oYWx0ZSBEcml0dGVyIGFscyBzb2xjaGUgZ2VrZW5uemVpY2huZXQuIFNvbGx0ZW4gU2llIHRyb3R6ZGVtIGF1ZiBlaW5lIHN2ZXJsZXR6dW5nIGF1Zm1lcmtzYW0gd2VyZGVuLCBiaXR0ZW4gd2lyIHVtIGVpbmVuIGVudHNwcmVjaGVuZGVuIEhpbndlaXMuIApJIHNjZW50IHRoZXJlZm9yZSBJIGFtNDowMHBtICAgNTozMHBtIFRoZSBTdHVkeQpTZW5hdGUgdGhpcyB5ZWFyLCBiZWZvcmUgYSBjYWxsIGZyb20gVmljZSBQcmVzaWRlbnQgRGljayBDaGVuZXkgY2hhbmdlZCBoaXMgbWluZC4gRHVyaW5nIGhpcyAxMCB5ZWFycyBpbiB0aGUgTGVnaXNsYXR1cmUsIFBhd2xlbnR5IGhhcyBkZXZlbG9wZWQgYSByZXB1dGF0aW9uIGFzIGFuIGFibGUgbGVhZGVyIGFuZCBhIHF1aWNrIHdpdC4gClRoZSBiZXN0IHVzZSBvZiB0cmFja2luZyBzb2Z0d2FyZSBsaWtlIEhvbGRlbSBNYW5hZ2VyIGlzIHRvIGFuYWx5c2UgeW91ciBvd24gc3RhdHMuIApQYWRkb2NrIGdhbWJsaW5nIGhhYml0cyBtYWRlIGhpbSBhIHNvdWdodCBhZnRlciBjYXNpbm8gcGF0cm9uLiBPdmVyIHNldmVyYWwgZGF5cywgTWFuZGFsYXkgQmF5IGVtcGxveWVlcyByZWFkaWx5IGxldCBoaW0gdXNlIGEgc2VydmljZSBlbGV2YXRvciB0byB0YWtlIHN1aXRjYXNlcyB0byB0aGUgJDU5MCBwZXIgbmlnaHQgc3VpdGUgaGUgaGFkIGJlZW4gcHJvdmlkZWQgZm9yIGZyZWUuIFRoZSByb29tIGhhZCBhIGNvbW1hbmRpbmcgdmlldyBvZiB0aGUgU3RyaXAgYW5kIHRoZSBSb3V0ZSA5MSBIYXJ2ZXN0IEZlc3RpdmFsIGNvbmNlcnQgZ3JvdW5kcyBhY3Jvc3MgdGhlIHN0cmVldC4uIApXaGVyZTogQnVmZmFsbyBXaWxkIFdpbmdzLCAyMjEgUy4gCklmIEkgdGVsbCB5b3UgSSBoYXZlIGEgcGFpciBvZiBnYXJkZW4gc2hlYXJzIGluIG15IGdhcmFnZSwgd291bGQgeW91IGJlbGlldmUgbWU/IFByb2JhYmx5LiBJZiB5b3Ugd2FsayBpbnRvIGFueSByYW5kb20gZ2FyYWdlIGluIHRoZSBVUywgY2hhbmNlcyBhcmUgZ29vZCB5b3Ugd2lsbCBmaW5kIGEgcGFpciBvZiBnYXJkZW4gc2hlYXJzLiAKVGhhbmtzIGZvciBwb3N0aW5nIHRoaXMhIEkgYmVlbiBkYWlseSBmb3IgbWVkaXRhdGluZyBmb3IgbGVzcyB0aGFuIGEgeWVhciwgYnV0IEkgY2FuIHJlcG9ydCBhbmVjZG90YWxseSB0aGF0IEkgZmVlbCBsZXNzIGFtYml0aW9uIHRoYW4gYmVmb3JlIEkgc3RhcnRlZC4gSSB0aGluayBJIGtub3cgd2h5LiAKTm93IHdoZXRoZXIgdGhleSBmZWx0IHRoZXkgaGFkIGdvb2QgcmVhc29uIG9yIG5vdCBub2JvZHkgc2hvdWxkIGhhdmUgYmVlbiBiZWF0aW5nIHBlb3BsZSB1cCBvciBzY3JlYW1pbmcgYWJ1c2UuIFRoZXkgY2FsbCB0aGUgcG9saWNlIGFuZCBtYWtlIHN1cmUgZXZlcnlvbmUgaXMgc3RpbGwgb24gc2NlbmUgdGlsbCBpdCdzIHNvcnRlZC4gWW91IGRvbid0IGxldCBzb21lb25lIHdhbGsgb2ZmIHdpdGggYSBiYWJ5IHRoZXkncmUgY2xhaW1pbmcgd2FzIGFsbW9zdCBraWRuYXBwZWQgIHdoYXQgbW90aGVyIGRvZXNuJ3Qgd2FudCB0byBjYWxsIHRoZSBwb2xpY2Ugd2hlbiB0aGVpciBiYWJ5IGlzIGFwcGFyZW50bHkgYWxtb3N0IGtpZG5hcHBlZD8gSSBhZ3JlZSB0YWNrbGUgdGhlIHBvc3NpYmxlIHN1c3BlY3QgdG8gdGhlIGdyb3VuZCBhbmQgbWFrZSBzdXJlIGhlIGNhbid0IGZsZWUgdGhlIHNjZW5lIGJ1dCBicmVha2luZyBoaXMgcmlicyBhbmQgYWxtb3N0IGxldHRpbmcgc29tZW9uZSBraWRuYXAgaGlzIGRhdWdodGVyPy4gClRoZXJlIGFyZSBvbmx5IGFib3V0IDIwMDAgcGVvcGxlIHdvcmtpbmcgYXQgSUxBLCBzbyBtb3N0IG9mIHRoZSBwZW9wbGUgZ2l2aW5nIHRoZWlyIHZpZXdzIGluIHRoaXMgc3VydmV5IGhhdmUgbmV2ZXIgd29ya2VkIHRoZXJlLiAKSSBleHBsYWluZWQgbXkgc2lkZSBvZiB0aGUgc3Rvcnkgd3JvdGUgb3V0IGEgc3RhdGVtZW50IGZvciBoZWFkIG9mZmljZS4uIApJIHRoaW5rIGFib3V0IHRob3NlIGVzdGltYXRlcyB0aGF0IG92ZXIgaGFsZiBvZiBldmVyeSBmZWRlcmFsIHRheCBkb2xsYXIgZ29lcyB0byB3YXIsIHRoZSBQZW50YWdvbiwgdGhlIFN0YXRlIERlcGFydG1lbnQgb3IgdGhlIG1pbGl0YXJ5IGluZHVzdHJpYWwgY29tcGxleC4gClRoaXMgdHJpcCBnb3Qgc3RhcnRlZCBiZWNhdXNlIFNlYXZlciB3YXMgYSBicm9hZGNhc3RlciBkdXJpbmcgRWlsYW5kJ3MgcGl0Y2hpbmcgc3RpbnQgd2l0aCB0aGUgWWFua2VlcyBhbmQgYmVjYXVzZSBvZiBTZWF2ZXIncyBmcmllbmRzaGlwIHdpdGggSGFsbCBvZiBGYW1lciBhbmQgUm95YWxzIGxlZ2VuZCBHZW9yZ2UgQnJldHQuIFRoZSBSb3lhbHMgd2VyZSBvbiB0aGUgV2VzdCBDb2FzdCB3aXRoIGFuIG9mZiBkYXkuIApXVyBleHBlY3RzIHRvIHJlY3J1aXQgZmV3ZXIgbWVtYmVycyBpbiAyMDE5IHRoYW4gaXQgZGlkIGluIDIwMTguIEl0IGZhY2VzIGEgdmFyaWV0eSBvZiBjb21wZXRpdG9ycywgZnJvbSBvdGhlciBkaWV0IHBsYW5zIHdpdGggbWVldGluZ3MgdG8gb25saW5lIGNvYWNoaW5nIHBsYW5zIHN1Y2ggYXMgTm9vbSwgZml0bmVzcyB0cmFja2VycyBhbmQgZnJlZSBjYWxvcmllIGNvdW50aW5nIGFwcHMgdGhhdCBhcHBlYWwgdG8gdGhvc2Ugd2hvIHdhbnQgdG8gbG9zZSB3ZWlnaHQuIApPciwgbGEgcHJpdmF0aW9uLCBlbmNvcmUgZGF2YW50YWdlIHF1YW5kIGxlcyBmcnJlcyBldCBzdXJzIG1hbmdlbnQgIm5vcm1hbGVtZW50IiBlc3QgdHJzIG1hbCB2Y3VlIHBhciB1biBlbmZhbnQgZXQgbCdpbmNpdGUgIHRyb3V2ZXIgZGVzIHN1YnRlcmZ1Z2VzIHBvdXIgbWFuZ2VyIGRlcyBhbGltZW50cyBpbnRlcmRpdHMgZXQgZG9uYyBncm9zc2lyIGRhdmFudGFnZS4uIApIZSByZWZ1c2VkIHRvIHBheSBoZXIgb2ZmIChzYWlkIGhlIHJhdGhlciBnbyBicm9rZSBmaWdodGluZyBpdCkgYnV0IHlvdSB3b3VsZCBiZSBzdXJwcmlzZWQgaG93IG1hbnkgb3RoZXJzIGRpZC4gCkFuZCB0aGUgY2FzaCB5b3UgbGlrZWx5IHdvbiBldmVyIHNlZSBhZ2FpbiBlaXRoZXIgd2F5Li4gCkknbSBhIGNvbGxlZ2Ugc3R1ZGVudCwgd29tYW4sIGFuZCBldGhuaWMgbWlub3JpdHkgd2hvIHdvdWxkIGxvdmUgdG8gZ2V0IGludG8gcGxheWluZyBib2FyZCBnYW1lcy4gSSB0cmllZCBteSB1bml2ZXJzaXR5J3MgdGFibGV0b3AgZ3JvdXAsIGJ1dCBmZWx0IHNvcnQgb2Ygb3V0IG9mIHBsYWNlIGFzIHRoZSBvbmx5IG5ld2JpZSAoYXMgZmFyIGFzIEkgY291bGQgdGVsbCkgYW5kIG9ubHkgd29tYW4uIEFyZSB0aGVyZSBhbnkgbWVldCB1cHMgaW4gQXVzdGluICh3aGVyZSBJIGFtIGN1cnJlbnRseSkgb3IgTmV3IFlvcmsgKHdoZXJlIEknbGwgYmUgaW4gdGhlIHN1bW1lcikgdGhhdCBhcmUgZGl2ZXJzZS9pbmNsdXNpdmUgYW5kIHdlbGNvbWluZyB0byBwZW9wbGUgbmV3IHRvIHRoZSBob2JieT8uIApUaGV5IGFsc28gb2ZmZXIgYSB2YXJpZXR5IG9mIGZsb3dlcmluZyB0aW1lcy4gCkdhbWJsaW5nIGlzIG9ubHkgc2FkIGlmIHlvdSBkbyBub3QgaGF2ZSBjb250cm9sLiAKVGhlcmUgYXJlIHNldmVyYWwgd2F5cyB0byByZWdpc3RlciBmb3IgYSBXU09QIGV2ZW50LiAKTGFzIFZlZ2FzIGF0dG9ybmV5IEphbWVzICJCdWNreSIgQnVjaGFuYW4sIHdobyByZXByZXNlbnRzIFJlbGF4IFNwYSBNYXNzYWdlLCBxdWVzdGlvbmVkIGhvdyB0aGUgY2l0eSBjb3VsZCByZXZva2UgbGljZW5zZXMgYmVmb3JlIGFueSBlbXBsb3llZXMgb2YgYSBidXNpbmVzcyB3ZXJlIGNvbnZpY3RlZCBvZiBwcm9zdGl0dXRpb24uIEhlIHNhaWQgdGhlcmUgaXMgbm8gZXZpZGVuY2UgZm9yIHRoZSBjb3VuY2lsIHRvIGFjdCwgYW5kIHRoYXQgdGhlIG93bmVyLCBKb2huIEsuIExvLCB3aG8gaGFzIGhpcyBvd24gY29uc3RydWN0aW9uIGJ1c2luZXNzLCBzaG91bGRuJ3QgYmUgcHVuaXNoZWQuLiAKR3Vlc3MgSSBzaG91bGQgaWRlbnRpZnkgd2hhdCAibmV3IiBtZWFucyBoZXJlIEkgdGFsa2luZyBhYm91dCB0aGUgdGhpcmQgZGVjYWRlIG9mIHRoZSBidWlsZGluZywgdGhlIGZpcnN0IG9mIHdoaWNoIChmb3IgYWxsIGludGVudHMgYW5kIHB1cnBvc2VzKSBjb3VsZCBiZSBpZGVudGlmaWVkIGFzIFdpbGxpYW0gSmVubmV5IEhvbWUgSW5zdXJhbmNlIEJ1aWxkaW5nIGluIENoaWNhZ28gaW4gMTg4NSwgd2hpY2ggd2FzIDEwIHN0b3JpZXMgYW5kIDEzOCBoaWdoLiAoVGhlcmUgYXJlIGNvdXBsZSBvZiBvdGhlciBlYXJsaWVyIGFuZCBxdWFsaWZpZWQgY29udGVuZGVycyBmb3IgImZpcnN0IHNreXNjcmFwZXIiLCBidXQgZm9yIGhlcmUgdGhlIEplbm5leSBidWlsZGluZyB3aWxsIHdvcmsgZmluZS4pIFRoZXJlIHdhcyBhIGJvb21sZXQgb2Ygc2t5c2NyYXBlcnMgaW4gQ2hpY2FnbyBiZWdpbm5pbmcgaW4gdGhlIDE4OTAgYW5kIHRoZSBiZWdpbm5pbmcgb2YgdGhlIEdvbGRlbiBBZ2UvQnVpbGRpbmcgQm9vbSBhcm91bmQgMTkwMCwgc28gYnkgMTkwOCB0aGUgYnVpbGRpbmcgc3R5bGUgd2FzIHdlbGwgZXN0YWJsaXNoZWQsIHRob3VnaCAic2t5c2NyYXBlciIgYXMgYSB3b3JkIGFwcGxpZWQgdG8gYnVpbGRpbmdzIHdhcyBvbmx5IDIwIHllYXJzIG9sZC4gClByZXR0eSBzb29uIENDVFYgdmlkZW8gd2lsbCBzdXJmYWNlIGFuZCBjb3VwbGUgd2hvIHdhcyBtZW50aW9uZWQgb24gYm90aCBwYXJ0eSB3aWxsIHRlc3RpZnkgYW5kIHdlIHdpbGwga25vdyBmb3Igc3VyZS4KSSBhY3R1YWxseSB3aXRuZXNzZWQgdGhpcyBmaXJzdGhhbmQuIEEgZmV3IHllYXJzIGFnbyBhIHNob290b3V0IGFjdHVhbGx5IGhhcHBlbmVkIG91dHNpZGUgbXkgd2luZG93LCBhbmQgb2J2aW91c2x5IHdvcmtlZCB3aXRoIHRoZSBwb2xpY2Ugb24gaXQuIFRoZXJlIHdhc24ndCBtdWNoIGluIHRlcm1zIG9mIHNvbHZpbmcgdGhlIGNhc2UgaXRzZWxmOyBvbmUgb2YgdGhlIHBhcnRpZXMgY3Jhc2hlZCBpbnRvIGEgZGl0Y2gsIGFuZCBpdCdzIHByZXR0eSBlYXN5IGlmIHlvdSBjb21lIGFjcm9zcyBhIGNyYXNoZWQgY2FyIGZ1bGwgb2YgZ3VucyBhbmQgYSBzaG90IGRyaXZlciB0aGF0IHRoZXkgbWlnaHQgaGF2ZSBoYWQgc29tZXRoaW5nIHRvIGRvIHdpdGggYSBzaG9vdGluZyBkb3duIHRoZSBzdHJlZXQuClBhcmtlciBoYXMgYmVlbiBob25vdXJlZCBieSB0aGUgVW5pdGVkIE5hdGlvbnMgT2ZmaWNlIG9mIEh1bWFuIFJpZ2h0cyBhcyBvbmUgb2YgYSBkb3plbiBXb21lbiBIdW1hbiBSaWdodHMgRGVmZW5kZXJzLi4gCkl0IGdldHMgYWN0aXZhdGVkIHdoZW4gaHVtYW5zIHJlY2VpdmUgYSByZXdhcmQsIHdoZXRoZXIgZHJ1Z3MsIG1vbmV5IG9yIGZvb2QuIApUaGlzIGtpbmQgb2Ygc29mdHdhcmUgaXMgdmVyeSB1c2VmdWwgZm9yIHRob3NlIHdobyBoYXZlIGp1c3QgdmVudHVyZWQgaW50byB0aGUgd29ybGQgb2YgcG9rZXIuLiAKQlkgVVNJTkcgV0VCTk9ERSdTIFdFQlNJVEUgKElOQ0xVRElORyBJVFMgQ09OVEVOVCkgQU5EL09SIFBST0RVQ1RTIEFORC9PUiBTRVJWSUNFUywgWU9VIEFHUkVFIFRPIFRIRSBURVJNUyBBTkQgQ09ORElUSU9OUyBUSEFUIEZPTExPVy4gSUYgWU9VIERPIE5PVCBBR1JFRSBUTyBUSEVTRSBURVJNUyBBTkQgQ09ORElUSU9OUywgT1IgWU9VIERPIE5PVCBXSVNIIFRPIEJFIEJPVU5ERUQgQlkgVEhFTSwgRE8gTk9UIFVTRSBXRUJOT0RFJ1MgV0VCU0lURSwgUFJPRFVDVFMgT1IgU0VSVklDRVMuClNvIG15IGRhZCBpcyBhIGh1Z2UgdHJhdmVsZXIgICB3b3JrcyBmb3IgYSBsYXJnZSBjb21wYW55IGFuZCBjb3ZlcnMgdGhlIG5vcnRoZWFzdC4gV2UgYmVlbiB0byBDaGV6IEFtaSBvbmNlIChJIHdpbGwgc2F5IGluIGFsbCBmYWlybmVzcywgd2Ugc2hvdWxkIGJlIHRoZXJlIHR3aWNlIGJlZm9yZSBnaXZpbmcganVkZ21lbnQpLiBJIHdpbGwgc2F5IG91ciBleHBlcmllbmNlIHdhcyBsYWNrbHVzdGVyLiAKVGhlIGZpcnN0IHRoaW5nIHRoYXQgeW91IG5lZWQgdG8gY29uc2lkZXIgd2hlbiB5b3UgYXJlIHRoaW5raW5nIGFib3V0IGdldHRpbmcgc3RhcnRlZCB3aXRoIHRoZSBjbG90aCBmb3IgeW91ciBwb2tlciB0YWJsZSBpcyB0aGF0IHRoZXJlIGFyZSBtYW55IGRpZmZlcmVudCBraW5kcyBmb3IgeW91IHRvIGNvbnNpZGVyLiBUaGV5IGNvbWUgaW4gZGlmZmVyZW50IHZhcmlldGllcyBhbmQgdGhleSBjb21lIHdpdGggZGlmZmVyZW50IHF1YWxpdGllcywgYW5kIGluIG1hbnkgY2FzZXMsIHRoZXkgaGF2ZSB2YXN0bHkgZGlmZmVyZW50IGNvc3RzIGFzIHdlbGwuCkVzdGFibGlzaCBncm91bmQgcnVsZXMgZm9yIHBhcnRpY2lwYXRpb24gaW4gYSBkaXNjdXNzaW9uLiAKJDE4Ljk5IEkgODcvMTAwVGhlIG9yZ2FuaWNhbGx5IGdyb3duIGFuZCBjZXJ0aWZpZWQgTWF2cnVkIGFuZCBSdWJpbiBncmFwZXMgY29tYmluZSAzMDAwIHllYXJzIChNYXZydWQpIGFuZCA2MCBwbHVzIHllYXJzIChSdWJpbikgb2YgaW5kaWdlbm91cyBncm93dGggaW4gQnVsZ2FyaWEuIFlvdSBjYW4gZXhwZWN0IGEgZnJlc2gsIHRlcnJvaXIgc2NlbnRlZCBub3NlIHdpdGggY2hlcnJpZXMgYW5kIGN1cnJhbnRzLiBUaGUgd2luZSBpcyBhZ2VkIGluIG9hayBmb3IgYWJvdXQgc2l4IG1vbnRocyBpbiBsYXJnZSBvYWsgYm90dGkgYW5kIEJ1bGdhcmlhbiBvYWsgYmFycmVscyBhZGRpbmcgc29tZSB0ZXh0dXJlIGFuZCB3ZWlnaHQgYW5kIGp1c3QgYSBoaW50IG9mIHdvb2QgdG8gdGhlIG1peC4gVGhlIGF0dGFjayBpcyBqdWljeSBhbmQgZnJlc2ggd2l0aCBpbnRyaWd1aW5nIGVhcnRoeSBjcmFuIGNoZXJyeS9yZWQgY3VycmFudCB0aGF0IGZhZGUgaW50byBhIGZvcmVzdCBmbG9vciBmaW5pc2guIFJlYWR5IHRvIGRyaW5rLiBUaGluayBzb3BoaXN0aWNhdGVkIGJ1dCBhZmZvcmRhYmxlIHBpenphL2JhcmJlY3VlL3BhcnR5IHdpbmUuClNvb24gYWZ0ZXIgaGlzIG9yZGluYXRpb24gaW4gMTk5MiwgV2VsYnkgd2FzIG1hZGUgYSBjYW5vbiBhdCBDb3ZlbnRyeSBDYXRoZWRyYWwgYW5kIHRoZSBjbyBkaXJlY3RvciBmb3IgaW50ZXJuYXRpb25hbCBtaW5pc3RyeSBhdCB0aGUgSW50ZXJuYXRpb25hbCBDZW50ZXIgZm9yIFJlY29uY2lsaWF0aW9uLiBIZSB3YXMgYXBwb2ludGVkIGRlYW4gb2YgdGhlIGNhdGhlZHJhbCBpbiBMaXZlcnBvb2wgaW4gMjAwNywgYW5kIGluIDIwMTEgY29uc2VjcmF0ZWQgYXMgYmlzaG9wIG9mIER1cmhhbSwgdGhlIE5vLiA0IHBvc2l0aW9uIHdpdGhpbiB0aGUgQ2h1cmNoIG9mIEVuZ2xhbmQuLiAKSXQgZXZlbnR1YWxseSBiZWNhbWUgdG9vIG11Y2ggd29yayBmb3IgbWUgYW5kIEkgZGVjaWRlZCBvbiBzb2JyaWV0eSwgYnV0IG9uZSBvZiB0aGUgdGhpbmdzIEkgbGVhcm5lZCBvbiB0aGlzIHN1YiwgdGFsa2luZyB0byBvdGhlciBzb2JlciBwZWVwcywgYW5kIGp1c3QgaW4gbXkgb3duIGpvdXJuZXkgaXMgdGhhdCBJIGNhbiBvbmx5IG1ha2UgY2hvaWNlcyBmb3IgTUUgYW5kIHRoYXQgcHVyc3Vpbmcgd2hvbGVuZXNzIGFuZCBoZWFsdGggbG9va3MgZGlmZmVyZW50IGZvciBhIGxvdCBvZiBkaWZmZXJlbnQgcGVvcGxlLiAKTGlrZSBpZiBzaGUgYWJ1c2l2ZSBpbiBvdGhlciB3YXlzLCBpZiBzaGUgZ3Jvb21lZCBoaW0sIGFuZCBhIHdob2xlIGhvc3Qgb2Ygb3RoZXIgc2hpdCBJIG5vdCBhd2FyZSBvZiAoaGVuY2UgbXkgaW50ZXJlc3QgaW4gd2hhdGV2ZXIgZGlzY3Vzc2lvbiBhcmlzZXMgZnJvbSB1L3B1cHB5bHVzdCBvcmlnaW5hbCBxdWVzdGlvbikuIApPbmUgY29pbiBtYXkgYnV5IHlvdSB0aGUgY2VudGVyIGxpbmUsIHR3byBjb2lucyB3aWxsIGJ1eSB5b3UgYSBkaWFnb25hbCwgYW5kIHRocmVlIGNvaW5zIGdldHMgeW91IHRoZSB3aG9sZSA5IHlhcmRzLiBUaGlzIGFsc28gd29ya3Mgd2l0aCBzeW1ib2xzLiBBZ2FpbiwgaW1hZ2luZSB5b3Vyc2VsZiBiZXR0aW5nIG9uZSBjb2luIGFuZCBzZWVpbmcgNyA3IDcgY29tZSB1cCBpbiBhIGRpYWdvbmFsISBJZiB5b3UgZG8gY2hvb3NlIHRoaXMgbWFjaGluZSwgaXQncyBiZXN0IHRvIGdvIGJpZyBvciBnbyBob21lLi4gCldpa2luZzg1ICA0IHBvaW50cyAgc3VibWl0dGVkIDcgZGF5cyBhZ28KRnVydGhlcm1vcmUsIGFuIGluY3JlYXNlIGluIG5ldXJvZ2VuZXNpcyBpcyBhc3NvY2lhdGVkIHdpdGggaW1wcm92ZWQgY29nbml0aW9uLiAKSmVycnkgUmljZSBTaGFyZXMgUGVyc29uYWwgU3VjY2Vzc2VzIHdpdGggQ2hpcm9wcmFjdGljIENhcmUKQW1hem9uIGlzIGJ1aWxkaW5nIGEgbWFya2V0aW5nIGVjb3N5c3RlbSB0aGF0IGNvdWxkIHJpdmFsIEdvb2dsZSwgdGhvdWdoLiBJdCBhbHNvIGhhcyB2aWRlbywgdGhyb3VnaCBGaXJlIFRWIGFuZCBUd2l0Y2gsIHRoZSBzdHJlYW1pbmcgc2VydmljZSBzaW1pbGFyIHRvIFlvdVR1YmUuIApJIGNhbiBzaG93IHlvdSBob3cgdG8gZ2V0IHRoZSBtYXhpbXVtIHJldHVybiBvdXQgb2YgYSB2aWRlbyBwb2tlciBtYWNoaW5lLCBidXQgeW91IG5lZWQgdG8gcmVtZW1iZXIgdGhhdCB0aGUgbWF4aW11bSByZXR1cm4gbWF5IHN0aWxsIGJlIGxlc3MgdGhhbiAxMDAlLiBBbnkgdGhlb3JldGljYWwgcmV0dXJuIG9mIGEgdmlkZW8gcG9rZXIgbWFjaGluZSB0aGF0J3MgbGVzcyB0aGFuIDEwMCUgbWVhbnMgdGhlIGNhc2lubyBoYXMgYW4gZWRnZSBvdmVyIHlvdSwgYW5kIHRoaXMgdGFrZXMgcGxhY2UgaW4gc2xvdCBtYWNoaW5lcywgQmFjY2FyYXQsIG9yIFJvdWxldHRlLiAKWWVhaCwgbm8sIGRvbiBsaXN0ZW4gdG8gdGhpcywgT1AuIFNoZSBtZWFudCB0aGF0IGFzIGEgcHV0ZG93bi4gU2hlIGltcGxpZWQgaGF2aW5nIGhpZ2hlciBtYXJrZXQgdmFsdWUgYW5kIGVhZ2VyIGNhbmRpZGF0ZXMsIGFuZCB0dXJuaW5nIHRoZW0gZG93biBmb3IgdHJpdmlhbCByZWFzb25zLCB3aGljaCBtZWFucyB0aGV5IHdlcmUgaW4gYWJ1bmRhbmNlLiAKMy41IFlvdSBhcmUgc29sZWx5IHJlc3BvbnNpYmxlIGZvciB0aGUgY29udGVudCBvZiB5b3VyIFN1Ym1pc3Npb25zLgpUaGV5J3JlIHRoZSBzYW1lIHRoaW5nIGEgcGh5c2lvIHdpbGwgaG9vayB5b3UgdXAgdG8gd2hlbiB5b3UgcHJlc2VudCBmb3Igc29tZSBzb2Z0IHRpc3N1ZSBpbmp1cnkuIApTb21lIGNhc2VzIGFyZSBhbHVtaW51bSwgbGlrZSBEYXZpZCdzLCBidXQgb3RoZXJzIGFyZSBSb3ljZSBsZWF0aGVyLiAKVGhlIGRheXMgdGFrZSBmb3JldmVyLCBidXQgdGhlIHllYXJzIGZseSBieS4gCldlbGwsIG5ldmVyIHNheSBuZXZlci4gWW91IGNhbiBkbyBhbnl0aGluZyB5b3Ugd2FudCBpbiBwb2tlci4gQ2hlY2sgcmFpc2luZyBpcyBtb3JlIHBvd2VyZnVsIHRoYW4gZG9uayBiZXR0aW5nIGFuZCBieSBjaGVjayByYWlzaW5nIHlvdSBjYW4gZXhwbG9pdCBoaWdoIGMgYmV0IGZyZXF1ZW5jaWVzIHdoaWNoIG1hbnkgcGxheWVycyBoYXZlLiAKSSBoZXJlIGNvbW11bmljYXRpbmcgdG8gcGVvcGxlIG9uIFJlZGRpdCwgdGhhdCBhbHJlYWR5IG1ha2VzIG1lIG1vcmUgZm9ydHVuYXRlIHRoYW4gcHJvYmFibHkgNTAlIG9mIGh1bWFuaXR5LiBJIGhhdmUgbm8gcmlnaHQgdG8gY29tcGxhaW4gbXVjaCBvdGhlciB0aGFuIGFib3V0IHRoZSBodW1hbiBjb25kaXRpb24gaXRzZWxmIGJlY2F1c2UgaXQgaXMgc29tZXRoaW5nIHdlIGFsbCBzaGFyZTsgYWx0aG91Z2gsIG1hbnkgcGVvcGxlIHByb2JhYmx5IGRvbiBoYXZlIHRoZSBsdXh1cnkgdG8gcmVhbGx5IHJ1bWluYXRlIG9uIHN1Y2ggdGhpbmdzLCBlaXRoZXIuCjg0MiBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvCkZvciBhIGJlZ2lubmVyLCB0aGVpciB0ZWxscyBhcmUgcXVpdGUgZWFzeS4gClNldmVyYWwgdmljdGltcyB0b2xkIHBvbGljZSB0aGF0IHNoZSB3YXMgaW52b2x2ZWQgaW4gb3JnaWVzIHdpdGggRXBzdGVpbiBhbmQgdW5kZXJhZ2UgZ2lybHMuIApMZXNzIHRpbWUgc2VhcmNoaW5nIGZvciBhIHNwb3QgYW5kIHNldHRpbmcgdXA9bW9yZSB0aW1lIHRvIHdhbGsgZXZlcnkgZGF5LiAKSmVzc2UgTS4gQm9iYWluLCBKYXNvbiBELiBNY0dvd2FuLCBhbmQgQ2hyaXN0b3BoZXIgTS4gVGFsa2luZ3RvbiBhcmUgY2hhcmdlZCB3aXRoIGFybWVkIHJvYmJlcnksIGNvbnNwaXJpbmcgdG8gY29tbWl0IHRoYXQgY3JpbWUsIGFuZCB0d28gZmlyZWFybSBvZmZlbnNlcyBpbiBjb25uZWN0aW9uIHdpdGh0aGUgbGF0ZSBXZWRuZXNkYXksIE1hcmNoIDExLCBpbmNpZGVudGF0IENhbWVsb3QgUGxhY2UgQXBhcnRtZW50cy4KSXQgZGlmZmljdWx0IHRvIGxvb2sgYXQgdGhpcyByYXRpb25hbGx5IHdoZW4gc29tZWJvZHkgY2xvc2UgdG8geW91IGhhcyBiZWVuIGh1cnQgYnkgdGhlIHNpdHVhdGlvbi5UaGUgdHVubmVscyBpbnRvIElzcmFlbCBhcmVuIHRvIHN1cHBsZW1lbnQgdGhlIGVjb25vbXksIHRob3NlIGludG8gRWd5cHQgdGhvdWdoIGFyZS4gVGhlcmUgbm8gd2F5IHRvIHVzZSB0aGVtIHRvIHN1cHBsZW1lbnQgdGhlIGVjb25vbXkgaW4gYnJpbmdpbmcgYW55dGhpbmcgZnJvbSBJc3JhZWwuIFRob3NlIGludG8gRWd5cHQgYXJlIGEgdml0YWwgbGlmZWxpbmUgZm9yIHRoZSBHYXphbnMgYW5kIGl0IGEgdGVycmlibGUgY29uc2VxdWVuY2Ugb2YgdGhlIGJsb2NrYWRlLkkgYWdyZWUgd2l0aCB5b3Ugb24gdGhlIGZlZWxpbmcgb2YgYSBuZWVkIG9mIGEgaG9tZWxhbmQgZm9yIEpld3MsIHdoaWNoIGlzIHdoeSBJIHN1cHBvcnQgYW4gSXNyYWVsaSBzdGF0ZSwganVzdCBhcyBsb25nIGFzIGl0IGJhc2VkIG9uIHByZXZpb3VzIGJvcmRlcnMgYW5kIGFsbCBjaXRpemVucyBhcmUgYWZmb3JkZWQgZXF1YWwgcmlnaHRzLiAKU29tZW9uZSB3aG8gZHJpbmtzIHZlcnkgaGVhdmlseSBhbmQgY29uc2lzdGVudGx5IG1heSBzdGFydCB0byBleHBlcmllbmNlIHdpdGhkcmF3YWwgc3ltcHRvbXMgaW4gdGhlaXIgc2xlZXAgYmVjYXVzZSB0aGV5IGFyZW4gdGFraW5nIGluIGFsY29ob2wgZHVyaW5nIHRoYXQgdGltZS4gCkhvd2V2ZXIsIGl0J3MgYWxsIGluIGdvb2QgZnVuIGFuZCB3ZSBkZWZpbml0ZWx5IGhhdmUgcGxlbnR5IG9mIHRoYXQgdGhyb3VnaG91dCB0aGUgZXZlbmluZy4gT25lIHRoaW5nIHdlIGNhbiB0ZWxsIHlvdSBpcyB0aGF0IGV2ZXJ5b25lIGxvdmVzIHRoZSBsb29rLiBNeSB3aWZlIHdlbnQgdG8gdGhlIGxhc3QgUFRBIG1lZXRpbmcgYW5kIGhhZCB0aGUgbGVhZGVycyBhc2sgaWYgd2Ugd291bGQgZG9uYXRlIHRoZSB1c2Ugb2YgdGhlIHRhYmxlcyBmb3IgYSBsb2NhbCBjaHVyY2ggZnVuZHJhaXNlci4gClRoZSBhY3R1YWwgc2VydmljZXMgb2ZmZXJlZCBieSBMYXMgVmVnYXMgZXNjb3J0cyB2YXJ5LiBCZWNhdXNlIHRoZSBzZXJ2aWNlcyBhcmUgbm90IHN0cmljdGx5IGxlZ2FsLCB0aGV5IGFyZSBub3Qgd2lkZWx5IGFkdmVydGlzZWQuIEl0J3MgYWxzbyBkaWZmaWN1bHQgdG8gb2J0YWluIGV4YWN0IG51bWJlcnMgb24gaG93IG1hbnkgdHJhbnNhY3Rpb25zIG1heSB0YWtlIHBsYWNlLiAKV2UgaGlyZWQgb3VyIGZpcnN0IGdhbWUgc2VjdXJpdHkgdGVhbSBtZW1iZXIgYmFjayBpbiBBdWd1c3QuIFRoaXMgaW5mb2dyYXBoaWMgYXQgYSBoaWdoIGxldmVsIGV4cGxhaW5zIGhvdyB0aGlzIHdpbGwgd29yazouIApXaGVuIHRoZSBkZXB1dHkgYXJyaXZlZCBoZSBtZXQgYSBtYWxlIGFuZCBmZW1hbGUgdmljdGltLCByZXNpZGVudHMgb2YgdGhlIGhvbWUuIFRoZSB2aWN0aW1zIHJlcG9ydGVkIGZpdmUgcGVvcGxlIGFzc2F1bHRlZCB0aGVtIGFmdGVyIGZvcmNpbmcgdGhlaXIgd2F5IGludG8gdGhlIGhvbWUuIApLaW5nIENvdW50eSBwcm9zZWN1dG9ycyBoYXZlIHNpbmNlIGNoYXJnZWQgdHdvIG1lbiBhbmQgdGhyZWUgd29tZW4gd2l0aCBtb25leSBsYXVuZGVyaW5nIGFuZCB0aHJlZSB0byBzaXggY291bnRzIGVhY2ggb2Ygc2Vjb25kIGRlZ3JlZSBwcm9tb3RpbmcgcHJvc3RpdHV0aW9uLiBBIGZvdXJ0aCB3b21hbiwgYmVsaWV2ZWQgdG8gaGF2ZSByZXR1cm5lZCB0byBDaGluYSBpbiAyMDE3LCB3YXMgYWxzbyBjaGFyZ2VkIGJ1dCByZW1haW5zIGF0IGxhcmdlLiAKVGhhdCBtaWdodCBzb3VuZCBraW5kIG9mIG5pY2UgdG8geW91LCBvciBpdCBtaWdodCBzb3VuZCBoZWxsaXNoLCBidXQgdGhlIHJlYWxpdHkgaXMsIGFib3V0IDIwIHBlcmNlbnQgb2Ygd29tZW4gZ28gdGhyb3VnaCB0aGlzIGZvciBzb21lIHBhcnQgb2YgdGhlaXIgcHJlZ25hbmN5LiBCZWQgcmVzdCwgd2hpY2ggY2FuIHJhbmdlIGZyb20gc3VwZXJ2aXNlZCB0aW1lIGluIGEgaG9zcGl0YWwgYmVkIHRvIGxpbWl0aW5nIG5vcm1hbCBkYWlseSBhY3Rpdml0aWVzIGFuZCBhIGxvdCBvZiBzaXR0aW5nIGFyb3VuZCwgaXMgcHJlc2NyaWJlZCBmb3IgYWxsIGtpbmRzIG9mIHByZWduYW5jeSBjb21wbGljYXRpb25zLCBmcm9tIGdlc3RhdGlvbmFsIGRpYWJldGVzIHRvIHBvb3IgZmV0YWwgZGV2ZWxvcG1lbnQgdG8gYW4gImluY29tcGV0ZW50IGNlcnZpeC4iIEl0J3MgYSBwcmV0dHkgb2xkIGlkZWEsIGJ1dCBpdCBiZWNhbWUgYSBtYWluc3RheSBvZiB3ZXN0ZXJuIG9ic3RldHJpY3MgaW4gdGhlIDE5dGggY2VudHVyeSwgd2hlbiBhbnkgc2lnbiBvZiBjb21wbGljYXRpb25zIHdvdWxkIGxhbmQgYSBsYWR5IGFsb25lIGluIGJlZCwgaW4gdGhlIGRhcmssIHNvbWV0aW1lcyBldmVuIHdpdGggZWFycGx1Z3MgICBiYXNpY2FsbHkgYSBzZW5zb3J5IGRlcHJpdmF0aW9uIGNoYW1iZXIuIEl0IGxvb2tzIGRpZmZlcmVudCB0aGVzZSBkYXlzICAgeW91IGNhbiBoYXZlIGNvbnZlcnNhdGlvbnMgYW5kIGxpc3RlbiB0byBtdXNpYyBpZiB5b3Ugd2FudCwgYnV0IGJlaW5nIHByZWduYW50IGFuZCBmbGF0IG9uIHlvdXIgYmFjayBpcyBzdGlsbCBhIGNvbXBsZXRlIGRyYWcuCkFudG9uaW8gR3JhbXNjaQpUaGUgc2tpbGwgbGV2ZWwgb2YgcHJvZmVzc2lvbmFsIExvTCB0ZWFtcyBjb250aW51ZXMgdG8gZ3JvdyBhcyB0aGUgc2NlbmUgbWF0dXJlcywgdGhlIHN1cHBvcnQgaW5mcmFzdHJ1Y3R1cmUgaW1wcm92ZXMsIGFuZCB0aGUgYW1vdW50IG9mIG1vbmV5IGludm9sdmVkIGluY3JlYXNlcy4gQXMgYSByZXN1bHQgd2UgYXJlIHNlZWluZyB0aGUgbGV2ZWwgb2YgZ2FtZSBhbmFseXNpcyBpbXByb3ZlIHRvIHRoZSBwb2ludCB3aGVyZSB0ZWFtcyBhcmUgYmVpbmcgcHVuaXNoZWQgbW9yZSBmcmVxdWVudGx5IGFuZCBtb3JlIGhlYXZpbHkgZm9yIGV4aGliaXRpbmcgcHJlZGljdGFibGUgYmVoYXZpb3VyLiAKT2huZSBFZGlldGggaHR0ZSBpY2ggYXVjaCB2aWVsZSBrbGVpbmUgcGFsbWVyaXNjaGUgQmFycyB1bmQgUmVzdGF1cmFudHMsIGRpZSBsZWNrZXJzdGVuIE1hbmRlbGtla3NlLCBkZW4gZnJpc2NoZXN0ZW4gT3JhbmdlbnNhZnQsIGRpZSBwcmVpc3dlcnRlc3RlbiBCb2NhZGlsbG9zLCAgc2ljaGVyIG5pY2h0IGdlZnVuZGVuLiAKT24gU2F0dXJkYXkgQXByaWwgMjEsIDIwMDcgLiBBbmQgRGV0ZWN0aXZlIFJlbWlrZXIgd2VyZSB0aGUgb2ZmaWNlcnMgaW4gY2hhcmdlIG9mIHRoZSBqdXJ5IGFuZCByZXNwb25zaWJpbGl0eSBvZiB1cGhvbGRpbmcgdGhlIGd1aWRlbGluZXMgcHJvdmlkZWQgYnkgdGhlIGp1ZGdlIGFsb25nIHdpdGggZ3VpZGVsaW5lcyBwcm92aWRlZCBieSAuIEZ1cnRoZXIgaW52ZXN0aWdhdGlvbiBpbmRpY2F0ZWQgdGhhdCAuIApUaGF0IHZlcnkgZGVwcmVzc2luZyB0byBoZWFyLiBJIGJlZW4gdHJ5aW5nIHRvIHN0dWR5IHVwIGFuZCB3YXRjaCB2aWRlb3MgYWJvdXQgdW5kZXJzdGFuZGluZyB0aGUgZ2FtZS4gSSBmZWx0IGdvb2QgYmVjYXVzZSBJIHNpbmNlcmVseSB0aG91Z2h0IEkgc2F3IGdyb3d0aCBhZnRlciBwcmFjdGljaW5nIGFuZCBoaXR0aW5nIHVwIG15IGxvY2FsIG11bHRpcGxlIHRpbWVzLiBJIGxvb2tlZCB1cCBmcmFtZSBkYXRhIGFuZCBwb2tlZCB3aXRoIGxvdyBmcmFtZSBtb3ZlcyBhbmQgZmluZCB3aGVuIHRvIHVzZSBtb3JlIHVuc2FmZSBtb3Zlcy4gQXQgdGhpcyBwb2ludCBJIHJlYWxseSB1bnN1cmUgb2Ygd2hhdCB0byBldmVuIHdvcmsgb24uClNvIEkgaGFkIGhlciBtb20gY2FsbCBoZXIgZGFkIHRvIHNlZSBpZiBzaGUgd2FzIGF0IGhpcyBob3VzZS4gClN1cmUgdGhlcmUncyB0aGUgbHV4dXJ5IHRheCB0aHJlc2hvbGQgd2hpY2gsIGRlYXIgbWUsIHlvdSdyZSBwZW5hbGl6ZWQgb3ZlciBkb2xsYXJzIHNwZW50IGF0IDIwMG0/IFRheGVkIGF0IDQwbSB3aGVuIHlvdSBnbyBvdmVyIGZvciBhIGNvbnNlY3V0aXZlIHllYXI/IEkgZG8gdW5kZXJzdGFuZCB0ZWFtcyB3b3VsZG4ndCBsaWtlIHRvIGZvb3QgdGhhdCBiaWxsLCBidXQgSSBiZWxpZXZlIHRoZXJlIGFyZSB0d28gb3IgdGhyZWUgdGVhbXMgbmVhciB0aGF0IHRocmVzaG9sZCAoVXMsIFNveCwgYW5kIERvZGdlcnMpIHdoaWxlIG1vc3QgZXZlcnlvbmUgZWxzZSBpcyBub3doZXJlIG5lYXIuIApIZXIgbmFtZSB3YXMgVGVhZ2VuIChub3QgVGVnYW4pLCBoZXIgYmlydGggY2VydGlmaWNhdGUgc2hvd2VkIGhlciBmYXRoZXIgc3VybmFtZSB3YXMgTm9ycmlzIGFuZCBzaGUgd2FzIGJvcm4gb24gU2VwdGVtYmVyIDEyLCAxOTk2LiBCdXQgaGVyIG1vdGhlciBpbnNpc3RlZCB0aGUgZ2lybCB3YXMgaGVycyAgIGFuZCBETkEgdGVzdHMgcHJvdmVkIGhlciBjb3JyZWN0LiBTbyBoZXJlIHdlIGFyZSBpbiBjb3VydCwgaHVzaGVkIGFuZCBleHBlY3RhbnQuIAoiVGhhdCdzIGEgZ3JlYXQgbW92ZSBieSBKYWNrLCIgaGUgc2FpZC4gCkN1ZSBkcmFtYXRpYyBtdXNpYwpJIGp1c3Qgc3RvcCByZXNwb25kaW5nIHRvIGhlciB0ZXh0cy9ETXMgd2hlbiBzaGUgc3RhcnRzIGhlciBjcmFwLiAKVGhlbiB0aGVyZSBteSBTdGFyIFRyZWsgbW9kZXMgYW5kIFN0YXIgV2FycyBtb2Rlcywgd2hlcmUgdGhlcmUgaXMgcGxlbnR5IG9mIG1lZGlhIHRvIHB1bGwgZnJvbSBhbmQgSSBiaW5nZSBlbnRpcmUgYm9vayBzZXJpZXMgb3Igc3Bpbm9mZiBtZWRpYSwgdGhpcyBtYXkgYWxzbyBsZWFkIHRvIHNvbWUgYXR0ZW1wdHMgYXQgYWRkaW5nIHRvIHRoZWlyIHJlc3BlY3RpdmUgd2lraWEgb3IgZGFiYmxpbmcgd2l0aCB0aGUgZHJlYW0gb2Ygd3JpdGluZyBhbiBpbiB1bml2ZXJzZSByZWZlcmVuY2UgYm9vayAoSSBzdGlsbCB3YW50IHRvIHdyaXRlIGFuIGluIHVuaXZlcnNlIGJvb2sgZ3VpZGUgdG8gdGhlIGhpc3RvcnkgYW5kIGZpY3Rpb25hbCByZWFzb25pbmcgYmVoaW5kIFN0YXIgVHJlayBsaXRhbnkgb2YgdW5pZm9ybXMpLgpGb3IgZXhhbXBsZSwgQWxleGFuZGVyIHRoZSBHcmVhdCdzIGNvbnF1ZXN0cyBoYWQgbGl0dGxlIHRvIGRvIHdpdGggdGhlIHB1cnN1aXQgb2YgZnJhZ3JhbnQgbWF0ZXJpYWxzLiAKQSBzcGVjaWFsIHRoYW5rIHlvdSB0byBCcmVuZGEgZm9yIHRoZSB0aW1lIGFuZCBjYXJlIHNoZSBnYXZlIHRvIEJhcmIuIApJIHdhcyBsdWNreSBlbm91Z2ggdG8gZ28gdG8gdGhlIE1vbnRlcmV5IEJheSBBcXVhcml1bSB3aGVuIHRoZXkgaGFkIGEgYmFieSBncmVhdCB3aGl0ZSBpbiB0aGVpciBiaWcgdGFuay4gVGhleSBoYWQgaXQgdGhlcmUgZm9yIGEgd2hpbGUgKDE5OCBkYXlzLCBhY2NvcmRpbmcgdG8gYSBHb29nbGUgc2VhcmNoLCB3aGljaCBpcyBhYm91dCBzaXggYW5kIGEgaGFsZiBtb250aHMpIGFuZCBnb3QgaXQgdG8gZWF0IHRoZSBmb29kIHRoZXkgZ2F2ZSBpdC4gSXQgaHVuZyBvdXQgbmljZWx5IGVub3VnaCB3aXRoIHRoZSBvdGhlciBjcml0dGVycyBidXQgdGhlbiBoYWQgdG8gYmUgcmVsZWFzZWQgd2hlbiBpdCBhdHRhY2tlZCB0d28gb3RoZXIgc2hhcmtzIGl0IHNoYXJlZCBhIHRhbmsgd2l0aC4gCkhlIGV2ZW4gY2FsbGVkIGEgZmV3IG1pbnV0ZXMgbGF0ZSBiZWNhdXNlIGhlIHNheXMgd2l0aCBhIGxhdWdoIHRoYXQgaGUgInN0YXJ0ZWQgd3JpdGluZyBhIHNvbmcgYW5kIEkgZGlkbid0IGhlYXIgbXkgcGhvbmUgcmluZy4iCkZ1cnRoZXIsIGlkZWFzIGFyZW4gaGlzLiBUaGV5IG90aGVyIHBlb3BsZSBpZGVhcy4gSmF2aXRzIG9mIE5ldyBZb3JrLiAKTG9uZyBzdG9yeSBzaG9ydCwgSSBzdXJlIHRoZSBtYXJrZXQgd2lsbCBmbGF0dGVuIGFuZCBldmVuIGRpcCBhdCBzb21lIHBvaW50LCBidXQgc2lnbmlmaWNhbnRseT8gSSBkb24gdGhpbmsgc28gdW5sZXNzIHRoZXJlIGlzIGEgbmF0aW9uYWwgb3IgZ2xvYmFsIGNyaXNpcy4gUGx1cywgaWYgdGhhdCBoYXBwZW5zIHRoZXJlIGFyZSBhIHRvbiBvZiBwZW9wbGUgdGhhdCBoYXZlIGJlZW4gc2l0dGluZyBvbiBjYXNoIHJlYWR5IGZvciBpdC4KSGVyIGh1c2JhbmQsIFBydWRlbnRpYWwgaW5zdXJhbmNlIHNhbGVzbWFuIFdpbGxpYW0gSGVyYmVydCBXYWxsYWNlLCB3YXMgYXQgdGhlIENlbnRyYWwgQ2hlc3MgQ2x1YiBpbiBMaXZlcnBvb2wgdGhlIG5pZ2h0IGJlZm9yZSBoZXIgbXVyZGVyLCB3aGVuIGhlIHJlY2VpdmVkIGEgcGhvbmUgbWVzc2FnZS4KQWN0dWFsbHkgbW9yZSB0byBiZSBmaWxsZWQgb3V0IChhbmQgd2l0aCBtb3JlIGV4YWN0aW5nIHF1ZXN0aW9ucykgdG8gam9pbiB0aGUgIkp1bmlvciBHIE1lbiBvZiBBbWVyaWNhIiAoImEgSnV2ZW5pbGUgUG9saWNlIE9yZ2FuaXphdGlvbiIpIGNsdWIuIFRoaXMgMTkzNiBkb2N1bWVudCB3YXMgbWVhbnQgZm9yIGtpZHMsIG9yIGFkdmFuY2VkIGtpZHMsIGFuZCBhc2tlZCBzb21lIHByZXR0eSBjcmVlcHkgYW5kIHRvbyBkZXRhaWwgcXVlc3Rpb25zIG9mIGl0cyBwb3RlbnRpYWwgbWVtYmVycywgaW5jbHVkaW5nIHdoZXRoZXIgb3Igbm90IHRoZSBhcHBsaWNhbnQgd291bGQgZXhwZWN0IHRvIGJlIHBhaWQgaWYgaW5qdXJlZCBpbiB0aGUgbGluZSBvZiBkdXR5LiAoVGhlIEp1bmlvciBHIE1lbiBvcmdhbml6YXRpb24gYmVjYW1lIHZlcnkgcG9wdWxhciwgd2l0aCBhbGwgbWFubmVyIG9mIHRveXMgYW5kIGJhZGdlcyBhbmQgZ3VucyBhbmQgc28gb24sIHdpdGggcmFkaW8gc2VyaWVzIGFuZCBtb3ZpZSBzcGluIG9mZnMsIHRob3VnaCBpdCBzZWVtcyBub3QgaGF2ZSBtYWRlIGl0IG11Y2ggaW50byB0aGUgMTk1MHMuKS4gCkl0IHdvcmtzIHdpdGggdGhlIFBvbGFyIEZsb3cgYXBwLCB3aGVyZSB5b3UgY2FuIGFuYWx5emUgeW91ciBwcm9ncmVzcywgc2NoZWR1bGUgd29ya291dHMsIGFuZCByZWNlaXZlIGNvYWNoaW5nIHRpcHMgcmlnaHQgb24gaXRzIHNjcmVlbi4gQW5kLCB5b3UgY2FuIGFjY2VzcyBhbGwgeW91ciBQb2xhciBGbG93IGFwcCBhY3Rpdml0eSBvbiB5b3VyIG1vYmlsZSBkZXZpY2UuIEl0J3MgdGhhdCBzaW1wbGUuLiAKVGhlIGxpa2VsaWhvb2Qgb2Ygc29tZSBhbWF6aW5nIHRlYWNoaW5nIHdvcmtpbmcgdGhlcmUgaXMgb25seSBzbGlnaHRseSBoaWdoZXIgdGhhbiBvdGhlciBwbGFjZXMuIApXaGF0IGhhcHBlbmVkIGlzIHRoYXQgbm93IHRoZXkgZW5kIHVwIGxvdmluZyB0aGUgZXhwZXJpZW5jZSBvZiBuZXcgcGxhY2VzIHRvZ2V0aGVyIG9yIGdvaW5nIGJhY2sgdG8gcGxhY2VzIG9uZSBvZiB0aGVtIGhhZCBiZWVuIGJlZm9yZSBhbmQgcmVkaXNjb3ZlcmluZyBpdCB0b2dldGhlci4gCkkgaGFkIG15IGRvZyBmb3IgMTMgeWVhcnMsIHRocm91Z2ggd29yayBhbmQgaG9tZSBjaGFuZ2VzLCBmaW5hbmNpYWwgY3Jpc2VzLCBlbW90aW9uYWwgaXNzdWVzLCBldGMuIApNb3N0IHJpc2t5IGNhc2lubyBnYW1lcyB0aHVzIHRoZSBwcml6ZSBtb25leSBvZmZlcmVkIGJ5IHRoZXNlIGdhbWVzIGFyZSBhbHNvCk5vIHdvcnJpZXMuLiAKSWYgeW91IHdhbnQgdG8gc3RyZXRjaCBpdCwgQmFybyBLaSBUZWVyIGhhcyBhIGNoYW5jZSB0byBzZWxsIDIgZGlmZmVyZW50IGNvbG91ciBwYWxldHRlcyBvbiBoaXMgdmlzaXRzLiAKRGFzIHNpbmQgZGllIG5ldWVuIFJhZmZsZXMgSG90ZWxwcm9qZWt0ZToKWWVwIGl0IGRlZmluaXRlbHkgc21hY2tzIG9mIHR5cGljYWwgbmFyYyBiZWhhdmlvcjogY2F1c2luZyByYW5kb20gYW5kIHVubmVjZXNzYXJ5IGRyYW1hIGluIGFuIG90aGVyd2lzZSBjYWxtIHNpdHVhdGlvbi4gVGhleSBkbyB0aGlzIHRvIHJlbWluZCBldmVyeW9uZSB0aGF0IHRoZXkgY2FuIGNyZWF0ZSByYW5kb20gYW5kIHVubmVjZXNzYXJ5IGRyYW1hIHdoZW5ldmVyIHRoZXkgd2FudDsgdGhhdCB0aGV5IGNhbiBoYXZlIGEgaHVnZSBhbW91bnQgb2YgY29udHJvbCBvdmVyIG90aGVyIHBlb3BsZSdzIHBlYWNlIGFuZCBoYXBwaW5lc3MuIFlldCBhbm90aGVyIHBldHR5IG1hbmlmZXN0YXRpb24gb2YgbmFyYyBwb3dlciBhbmQgY29udHJvbC4gRGV2aWwgRGFkaSBrbmV3IGV4YWN0bHkgd2hhdCBzaGUgd2FzIGRvaW5nLCBkb3duIHRvIHRoZSBtaW51dGVzIHNoZSB3b3VsZCBuZWVkIHRvICJhY2NpZGVudGFsbHkiIG1pc3MgaGVyIGZsaWdodCBhbmQgY2F1c2UgZXZlcnlvbmUncyBwcmV2aW91c2x5IGVuam95YWJsZSB2YWNhdGlvbiB0byBncmluZCB0byBhIGhhbHQuIEFuZCB0aGVuIHdoZW4gaGVyIG1hY2hpbmF0aW9ucyBkaWRuJ3Qgd29yayBhcyBwbGFubmVkLCBzaGUgc3RpbGwgbWFuYWdlZCB0byBnZXQgc29tZW9uZSB0byBkcm9wIGV2ZXJ5dGhpbmcgYW5kIGZseSBmdWNraW5nIGhhbGYgd2F5IGFjcm9zcyB0aGUgcGxhbmV0IHRvIGNvbWUgYW5kICJyZXNjdWUiIGhlciBmb3VsIGFzcy4gSXQgd2FzIGEgbWFzdGVyZnVsIHBpZWNlIG9mIG5hcmMgbWFuaXB1bGF0aW9uLgpUaGUgYmVzdCB3YXkgdG8gZ2VuZXJhdGUgdGhlIG1vbmV5bmVlZGVkIGZvciBuZXcgaW5mcmFzdHJ1Y3R1cmUgd2FzIGJ5IG1ha2luZyB0aGUgbWluZXJzIHBheSBmb3JsaWNlbmNlcy4gKEZ1bGwgQW5zd2VyKS4gCkFsZXh4IEhvb3BlcgpUaGlzIGlzIGFsbCB0byBzYXkgdGhhdCBpZiB5b3Ugd2VudCBiYWNrIGluIHRpbWUgd2l0aCBubyBwcmlvciBrbm93bGVkZ2Ugb2YgRXVyb3BlYW4gaGlzdG9yeSwgeW91IGJlIG1vcmUgbGlrZWx5IHRvIGRyYXcgY29ycmVzcG9uZGVuY2VzIGJldHdlZW4gc3BlYWtlcnMgb2YgQ29udGluZW50YWwgQ2VsdGljIGxhbmd1YWdlcyBsaWtlIEdhdWxpc2ggcGVvcGxlcyBvZiB0aGUgTWVkaXRlcnJhbmVhbiB0aGFuIGJldHdlZW4gQ29udGluZW50YWwgQ2VsdGljIHNwZWFrZXJzIGFuZCBzcGVha2VycyBvZiBJbnN1bGFyIENlbHRpYyBsYW5ndWFnZXMuCkl0IGVhc3kgd2hlbiB0aGV5IHlvdW5nLiBCdXQgYXMgaGUgc3RhcnRlZCBhY3Rpbmcgb3V0IGFuZCBmbHVua2luZyBvdXQgb2Ygc2Nob29sIEkgaGF2ZSB0byBkaXNjaXBsaW5lIGhpbSAod2hpY2ggaXMgcmVhbGx5IGhhcmQgd2hlbiBhbGwgSSBldmVyIGRvbmUgd2FzIHRha2UgY2FyZSBvZiBoaW0pLiBBdCB0aW1lcyBvZiBhbmdlciBJIGNvdWxkIGZlZWwgbXkgbW90aGVyIGluIG1lLiAKQWxsIHN5bWJvbHMgYXJlIGFjdGl2ZSByZWdhcmRsZXNzIG9mIGNvaW5zIHBsYXllZC4gQnV0IGxvb2sgYXQgQmFsbHkncyBGbGFtaW5nIDdzIG1hY2hpbmUsIGFuZCB5b3Ugd2lsbCBzZWUgdGhlIGJhcnMgbGlzdGVkIGZvciBvbmUgY29pbiBhbmQgdGhlIDdzIGxpc3RlZCBmb3IgdHdvIGNvaW5zLiAKQW5kLCBnaXZlbiB0aGUgZGlyZSBjb25zZXF1ZW5jZXMgb2YgcnVuYXdheSBnbG9iYWwgd2FybWluZywgd2UgbWF5IG5lZWQgdG8gYWN0IGV2ZW4gaWYgY2VydGFpbnR5IGlzIDUwJS4gQW5kIHJlbWVtYmVyLCBhbnkgYWx0ZXJuYXRpdmUgZXhwbGFuYXRpb24gd2lsbCBoYXZlIHVuY2VydGFpbnRpZXMgb2YgaXRzIG93bi4uIApUaGUgbW9yZSBwbGF5ZXJzIGEgc2l0ZSBoYXMsIHRoZSBtb3JlIHJldmVudWUgaXQgd2lsbCBnZW5lcmF0ZS4gRm9yIHRoaXMgcmVhc29uLCBpdCBzZWVtcyBhcyB0aG91Z2ggZXZlcnkgc2l0ZSBoYXMgYm9udXMgb2ZmZXJzIHRvIGF0dHJhY3QgbmV3IHBsYXllcnMuIApTbyBmb3IgbWUgaXQgaXMgYSBjb3BpbmcgbWVjaGFuaXNtIHRoYXQgSSB0YWtlIHRvbyBmYXIuIApEbyB5b3UgcmVjb21tZW5kIG1lIGdldHRpbmcgYW4gZXh0ZXJuYWwgSEQ/IE9yIGlzIGEgY2xvdWQgYmV0dGVyPy4gCk15IHdpZmUgYW5kIEkgYXR0ZW5kZWQgdGhlIGZ1bmVyYWwgb2YgYSBndXkgd2UgaGFkIHBsYXllZCBwb2tlciB3aXRoIGZvciB5ZWFycy4gSSBtZWFuLCA0IG5pZ2h0cyBhIHdlZWsgZm9yIDYgeWVhcnMhIFdoZW4gd2Ugd2Fsa2VkIGluIGFuZCB3ZW50IHRvIHNpZ24gdGhlIGd1ZXN0IGJvb2ssIG15IHdpZmUgc3VkZGVubHkgZ290IGEgY2FzZSBvZiB0aGUgZ2lnZ2xlcywgb3V0IG9mIG5vd2hlcmUhIE5vdywgd2UgaGFkIHNwZW50IGEgbG90IG9mIHRpbWUgYXJvdW5kIHRoaXMgZHVkZSwgYW5kIGxhdWdoZWQgYSBsb3Qgd2l0aCB0aGUgZ3V5IG92ZXIgdGhlIHllYXJzLCBidXQgaGlzIGZhbWlseSB3YXMgbW9ydGlmaWVkLiAKIkFzIGEgeW91dGggYWR2b2NhdGUsIHRoaXMgaXMgc29tZXRoaW5nIEkgZG9uJ3Qgd2FudCBpbiBIZW5kZXJzb24gb3IgYW55d2hlcmUgZWxzZSwiIHNhaWQgSGVuZGVyc29uIENvdW5jaWx3b21hbiBLYXRobGVlbiBCb3V0aW4sIHdobyBjbyBmb3VuZGVkIHRoZSBOZXZhZGEgUGFydG5lcnNoaXAgZm9yIEhvbWVsZXNzIFlvdXRoLiAiSSdtIGluIGNvbXBsZXRlIHN1cHBvcnQgb2YgdGhlc2UgY2hhbmdlcy4gVGhleSdyZSBhIHN0ZXAgaW4gdGhlIHJpZ2h0IGRpcmVjdGlvbi4iCldlIGFyZSBkZWVwbHkgZ3JhdGVmdWwgZm9yIHRoZSBnaWZ0cyBiZXN0b3dlZCBieSB0aGUgZG9ub3JzIGFuZCB0aGVpciBmYW1pbGllcy5JIG1hZGUgdGhpcyBsaXR0bGUgY2xpcCB3aGVuIEkgd2FzIGZpbG1pbmcgbXkgRFZEIHNlcmllcyBpbiAyMDA1Lk15IHRob3VnaHRzIGhhdmUgbWF0dXJlZCBhIGxpdHRsZSBiaXQgYXMgY29tcGFyZWQgdG8gdGhlIHdheSB0aGUgaWRlYXMgYXJlIHByZXNlbnRlZCBpbiBoZXJlLCBhcyBtaWdodCBiZSBleHBlY3RlZCBmcm9tIGFueW9uZSBlbmdhZ2luZyB0aGVpciBsZWFybmluZyBjdXJ2ZSBhbmQgaW52b2x2ZWQgaW4gYSBwcm9jZXNzIG9mIGRpc2NvdmVyeSwgYnV0IEkgYW0gYWxzbyBnbGFkIHRoYXQgc28gbWFueSBwZW9wbGUgZW5qb3kgaXQgaXMuIApXaGVuIEkgd2FzIHdyaXRpbmcgbXkgZmlyc3QgYm9vaywgUXVlZXIgaW4gUnVzc2lhLCB0aGUgdWx0cmEgbmF0aW9uYWxpc3QgcG9saXRpY2lhbiwgVmxhZGltaXIgWmhpcm9ub3Zza3ksIHdhcyBydW1vcmVkIHRvIGxpa2UgeW91bmcgbWVuLCB2ZXJ5IHlvdW5nIG1lbi4gRGVzcGl0ZSBhY2tub3dsZWRnaW5nIHRoYXQgWmhpcm9ub3Zza3kgd291bGQgcHV0IHRoZW0gaW50byB0aGUgR3VsYWcsIGEgdmFyaWV0eSBvZiBxdWVlciBhY3RpdmlzdHMgaW4gUnVzc2lhIGV4cHJlc3NlZCBhZG1pcmF0aW9uIGZvciB0aGlzIGxlYWRlciBxdWFsaXRpZXMsIGluY2x1ZGluZyBoaXMgaG9tb2Vyb3RpYyB0ZW5kZW5jaWVzLi4gCjUuIEVhdCwgRHJpbmssIGFuZCBCZSBIZWFsdGh5IGJ5IFdhbHRlciBXaWxsZXR0IGFuZCBUaGUgSGFydmFyZCBTY2hvb2wgb2YgUHVibGljIEhlYWx0aCwgU2ltb24gU2NodXN0ZXIsIDIwMDEKQSBsaXRlcmFsICJidWlsdCBpbiBtZWRraXRzIiBidWlsZCB3aGlsZSAoYWxzbykgaGF2aW5nIDIwJSByZXNpc3RhbmNlIGFnYWluc3QgYnVsbGV0cy4gQW5kIGEgInF1YXNpIGZsYWsgYXJtb3IiIG9uIHlvdXIgYnV0dGNoZWVrcy4gKFllcywgdGhlIGFkdmFuY2VkIHNoaWVsZGluZyAoZm9yZ290IGl0cyBuYW1lIG5vdywgc3VlIG1lKSBjYW4gc2F2ZSB5b3VyIGxpZmUuIApUaGUgVVMgaXMgYSBiaWcgY291bnRyeSwgYW5kIHRoaXMgcGFydGljdWxhciBhc3BlY3Qgb2Ygb3VyIGN1bHR1cmUgdmFyaWVzIGNvbnNpZGVyYWJseSBiYXNlZCBvbiBhIHZhcmlldHkgb2YgZmFjdG9ycy4KSWYgeW91IGRvbid0IGdldCB2YWNjaW5hdGVkIGJ1dCBJIGRvIFBhdWwgaXMgYXQgcmlzayBiZWNhdXNlIGhlIGNhbid0IGdldCBhIHZhY2NpbmUgdG8gcHJvdGVjdCBoaW0gbm93IGltYWdpbmUgaWYgaXQgdXNlZCB0byBqdXN0IGJlIHlvdSBvdXQgb2Ygb3VyIHJhbmRvbSBncm91cCBvZiAzNSBhc3NvY2lhdGVzLiBOb3cgaXQncyAxMyBwZW9wbGUgd2hvIGRvbid0IGdldCB0aGVpciBzaG90cyBQYXVsIGlzIHdheSBtb3JlIGV4cG9zZWQuLiAKTiBwb3VyIGFpbnNpIGRpcmUsIGNvbm51IHF1ZSBsYSB2aWxsZSBlbiBjZSBxdWkgY29uY2VybmUgc2VzIHByYXRpcXVlcyBtZGljYWxlcywgbGUgZG9jdGV1ciBDYXppbiBlc3QgcGFydGljdWxpcmVtZW50IGZyYXBwIHBhciBsZXMgY29uZGl0aW9ucyBkZSB2aWUgZGVzIGhhYml0YW50cyBkZXMgY2FtcGFnbmVzLCBjb25zaWRyYW50LCBwYXJjZSBxdWUgY2VsYSBsdWkgc2F1dGUgYXV4IHlldXgsIHF1IHZpbGxlIHRvdXQgZXN0IGRpc3BvbmlibGUgcmFwaWRlbWVudCBvdSBwcmVzcXVlLCBjb250cmFpcmVtZW50ICBjZXR0ZSBjYW1wYWduZSBvIGNvbnRyYXN0ZW50IGwgZGUgcXVlbHF1ZXMgdW5zIGV0IGwgZHUgcGx1cyBncmFuZCBub21icmUuIApDYXJkczogVGhlIHNheWluZyAieW91IGdldCB3aGF0IHlvdSBwYXkgZm9yIiBjb3VsZG4ndCBiZSBtb3JlIHRydWUgdGhhbiB3aGVuIGl0IGNvbWVzIHRvIHB1cmNoYXNpbmcgcG9rZXIgY2FyZHMuIApQZW9wbGUgY2FuIHNvbWV0aW1lcyBjaGFuZ2UgKG15IHBhcmVudHMgYm90aCBkaWQgcG9zdCBkaXZvcmNlKSwgYnV0IHRveGljIHJlbGF0aW9uc2hpcCBwYXR0ZXJucywgaW4gbXkgZXhwZXJpZW5jZSwgZG9uIEkgcmF0aGVyIGJlIHNpbmdsZSBmb3JldmVyIHRoYW4gZXZlciByZXR1cm4gdG8gYSBob21lIGFuZCBhIHBhcnRuZXIgdGhhdCBmZWVscyBsaWtlIG15IGNoaWxkaG9vZCBob21lIGRpZC4uIApTeW1wdG9tcyB0eXBpY2FsIG9mIHRlbnNpb24gaGVhZGFjaGVzIGluY2x1ZGUgbWlsZCB0byBtb2RlcmF0ZSBwYWluLCB1c3VhbGx5IG9uIGJvdGggc2lkZXMgb2YgdGhlIGhlYWQgb3IgbmVjay4KTWFzc2l2ZSBkaXNjIGhlcm5pYXRpb24gY2FuIGhlYWwKSXQgdW5saWtlbHkgdGhlIEdpYW50cyBjYW4gb3ZlcnRha2UgdGhlIEQgQmFja3MgaW4gdGhlIHN0YW5kaW5ncywgYmVpbmcgNSAxLzIgZ2FtZXMgb3V0IHdpdGggMTQgMTIgdG8gcGxheS4gQnV0IHN0aWxsLCB0aGUgcmVzdCBvZiB0aGUgc2VyaWVzIHNob3VsZCBlbnRlcnRhaW4uIEluIHRoZSBzZXJpZXMgZmluYWwgdGhyZWUgZ2FtZXMsIGl0IEFyaXpvbmEgQmlnIFRocmVlIChEYW4gSGFyZW4sIEJyYW5kb24gV2ViYiBhbmQgUmFuZHkgSm9obnNvbikgdnMuIApJdCB3YXMgd2l0aCB0aGlzIGJhY2tkcm9wIHRoYXQgRGVubmlzIHRyaWVkIHRvIGxvd2VyIEJ1dHRvbidzIHNhbGFyeS4gVGhlIGltcGxpY2F0aW9uIHdhcyB0aGF0IGhlIHdvdWxkIGluaXRpYXRlIHRoZSBjb250cmFjdCBicmVhaywgbnVsbGlmeWluZyB0aGUgY3VycmVudCBhZ3JlZW1lbnQuIApUaGF0IGEgbWVzc2FnZSB0aGF0IHNvIGZhciBoYXMgbm90IGJlZW4gaGVhcmQuLiAKSGUgYm91Z2h0IGEgcGFpciBvZiBwYW50cyBhbmQgdHdvIHNwb3J0IHNoaXJ0cy4gVGhlIGJveSBhbmQgZ2lybCBlYWNoIHBhY2tlZCBhIHBhaXIgb2Ygd2FybSBnbG92ZXMgZm9yIHRoZSB0cmlwLiAKR292ZXJubWVudCBhZ2dyZXNzaXZlIG1vdmUgaW50byBvbmxpbmUgZ2FtYmxpbmcuIEhvdyBkbyB0aGUgTGliZXJhbHMganVzdGlmeSB0aGlzIHBvbGljeSBkZWNpc2lvbiB3aGVuIHRoZXkgdXNlZCB0byBjb25kZW1uIG9ubGluZSBnYW1ibGluZyBhcyB0b28gYWRkaWN0aXZlPyBUaGUgZ292ZXJubWVudCBub3cgc2F5cyB0aGV5IGFyZSBvZmZlcmluZyBhIHNlY3VyZSwgcmVndWxhdGVkIGVudmlyb25tZW50IGZvciBnYW1ibGVycyB0byByaXNrIHRoZWlyIG1vbmV5IG9ubGluZSwgYXMgYW4gYWx0ZXJuYXRpdmUgdG8gdW5yZWd1bGF0ZWQgb2Zmc2hvcmUgc2l0ZXMgbGlrZSBQYXJ0eSBQb2tlciBvciB2aXJ0dWFsIGNhc2lub3MuLiAKRm9yIGNvb3AsIGNhbiB1c2UgYXdva2VuIFZhanJhYmhhaXJhdmEsIG9yIGhlIHdvdWxkIG1ha2UgYSBkZWNlbnQgaW5oZXJpdC4uIApPbmNlIHBob3RvbnMgcmVhY2ggdGhlIGNlbGxzIG9mIHRoZSBib2R5LCB0aGV5IHByb21vdGUgYSBjYXNjYWRlIG9mIGNlbGx1bGFyIGFjdGl2aXRpZXMsIGluY2x1ZGluZyBpZ25pdGluZyB0aGUgcHJvZHVjdGlvbiBvZiBlbnp5bWVzLCBzdGltdWxhdGluZyBtaXRvY2hvbmRyaWEsIGluY3JlYXNpbmcgdmFzb2RpbGF0aW9uIGFuZCBseW1waGF0aWMgZHJhaW5hZ2UsIEFUUCBzeW50aGVzaXMsIGFuZCBlbGV2YXRpbmcgY29sbGFnZW4gZm9ybWF0aW9uIHN1YnN0YW5jZXMgdG8gcHJldmVudCB0aGUgZm9ybWF0aW9uIG9mIHNjYXIgdGlzc3Vlcy4KVGhlIHZhc3QgbWFqb3JpdHkgb2YgcGVvcGxlIHdpdGggYWxjb2hvbCB1c2UgZGlzb3JkZXIgb3IgdG9iYWNjbyB1c2UgZGlzb3JkZXIgaGFkIHRoZWlyIGZpcnN0IGRyaW5rIG9yIGNpZ2FyZXR0ZSB3aGVuIHRoZXkgd2VyZSBpbiB0aGVpciBlYXJseSB0byBtaWQgdGVlbnMsIHdoZW4gdGhlaXIgYnJhaW4gd2FzbiBmdWxseSBmb3JtZWQuIFRoZXJlIHBlb3BsZSB3aG8gYXJlIGF0IGluY3JlZGlibHkgaGlnaCByaXNrIG9mIGRldmVsb3BpbmcgYWRkaWN0aW9ucywgYW5kIGl0IGlzIGEgcGh5c2lvbG9naWNhbCBpbGxuZXNzLiBGb3IgZXZlcnkgc3R1cGlkIDIwIHRlZW5hZ2VycyB3aG8gc251Y2sgb3V0IHdpdGggdGhlaXIgZnJpZW5kcyB0byBkcmluayBhIGJlZXIgMiAzIG9mIHRoZW0gd2lsbCBzdHJ1Z2dsZSB3aXRoIGFsY29ob2xpc20gaW4gdGhlaXIgbGlmZXRpbWUuIApXaGl0ZSBBbWVyaWNhbgpMaWtlIGNvdWxkIEkgZmFsbCBhc2xlZXAgaW4gYSBtb21lbnQgbGlrZSB0aGlzPyBzaGUgY29udGludWVzLiAKSSdtIGEgbWFzc2FnZSB0aGVyYXBpc3QuIApGaXJzdCwgaGUgZ3VpZGVkIHVzIHRvd2FyZCB0aGUgY2xhc3NpYyBDcmVwZSBNb25zaWV1ciwgdGVsbGluZyB1cyB3ZSBjb3VsZG4ndCBwb3NzaWJseSBnbyB3cm9uZyB3aXRoIHRoZSBGcmVuY2ggaGFtIGFuZCBncnV5ZXJlIGNoZWVzZSBmYXZvcml0ZS4gVGhlbiwgd2l0aCBhIGRyYW1hdGljIHBhdXNlIGFjY29tcGFuaWVkIGJ5IGEgbG9vayBvZiBhcHByZWhlbnNpb24gYW5kIGEgY2FyZXNzIG9mIGhpcyBpbWFnaW5hcnkgY2hpbiBiZWFyZCwgaGUgcG9pbnRlZCBpbnN0ZWFkIHRvIHRoZSBGbG9yZW50aW5lIENoaWNrZW4gQ3JlcGUsIHN1Z2dlc3RpbmcgaXQgd291bGQgYmUgYW4gYWJzb2x1dGUgc2hhbWUgdG8gbWlzcyB0aGUgY2hlZidzIGRlbGVjdGFibGUgY3JlYW0gc2F1Y2UuVGhvdWdoIGhlIGhhZCBvdXIgbW91dGhzIHdhdGVyaW5nIGluIGFudGljaXBhdGlvbiwgaGUgc3dpdGNoZWQgZ2VhcnMgYWdhaW4gYW5kIHNwZW50IHRoZSBuZXh0IG1pbnV0ZSB3YWZmbGluZyBiZXR3ZWVuIHRoZSBGbG9yZW50aW5lIGFuZCB0aGUgTmVvIFNlb3VsLCBhbiBlY2xlY3RpYyBjcmVwZSBwYWNrYWdlIGZpbGxlZCB3aXRoIHNocmVkZGVkIGJhcmJlcXVlIHBvcmsgYW5kIGtpbWNoaS5JdCdzIGNsZWFyIHRoYXQgQSBDYWZlIGlzIHRyeWluZyB0byBwdXQgYSBmcmVzaCBzcGluIG9uIGFuIG9sZCBtZW51IGZhdm9yaXRlLiAKQW5kIEkgZG8gc3RhbmQgYnkgeW91ciBzaWRlLiAKVGhhdCBtZXNzZWQgdXAuIEkgYWdyZWUgd2l0aCB5b3VyIGludGVycHJldGF0aW9uLCBpdCBkZWZpbml0ZWx5IGFib3V0IHN0ZWFsaW5nIHlvdXIgY291c2luIHRodW5kZXIuIEkgd29uZGVyIGhvdyB5b3VyIG1vbSBlbnZpc2lvbnMgdGhpcyBnb2luZyBkb3duLCB0aG91Z2g/IERvZXMgaXQgbm90IHBlbmV0cmF0ZSBoZXIgcHN5Y2hlIHRoYXQgc2hlIG5vdCBnb2luZyB0byBzdWNjZWVkIGluIHByZXNzdXJpbmcgeW91IHR3byBpbnRvIHRoaXM/IFNoZSBnb25uYSB3YXN0ZSBoZXIgbW9uZXkgYW5kIHRpbWUgb24gYSB3ZWRkaW5nIHRoYXQgbm9ib2R5IGdvbm5hIGF0dGVuZC4gCiJJdCB3YXMgdGVycmlibGUsIiBzYWlkIFBvY29jaywgd2hvIG5vdyBsaXZlcyB3aXRoIGZhbWlseSBhbmQgcHVyc3VlcyBhcnQgaW4gVmFuY291dmVyLiAiSSBkb24ndCBsaWtlIGl0LiIKSSBjYW4gc2VlIHdoZXJlIHRoZXkgcmVwb3J0ZWQgZGlmZmVyZW5jZXMgaW4gdGhpcyBtZWFzdXJlIGJldHdlZW4gdGhlIFZpdGFtaW4gRCBhbmQgcGxhY2VibyBncm91cHMsIGJ1dCBpdCBtZWFucyB0aGF0IHdlIGRvbiBrbm93IHdoZXRoZXIgdGhpcyBlZmZlY3QgaGVsZCB0cnVlIGZvciBwZW9wbGUgb24gb3B0aW1hbCB0cmVhdG1lbnQsIGFuZCB3ZSBkb24ga25vdyBpZiB0aGUgcGxhY2VibyBncm91cCBoYWQgbW9yZSBwYXRpZW50cyB0aGF0IGRpZG4gaGF2ZSB0aGVpciBhbnRpYmlvdGljIGNoYW5nZWQuLiAKRmlyc3QsIHRoZSBmdW5kIHdpbGwgaW5kZXggNTAgaGVkZ2UgZnVuZHMgYW5kIGFpbSB0byByZXBsaWNhdGUgdGhlaXIgcmV0dXJucy4gT24gdGhlIGxvbmcvc2hvcnQgc2lkZSwgdGhlIGZ1bmQgd2lsbCBhbHNvIGlkZW50aWZ5IHRoZSBtb3N0IHBvcHVsYXIgc3RvY2tzIHRoYXQgYWx0ZXJuYXRpdmUgYXNzZXQgbWFuYWdlcnMgYXJlIGJ1eWluZyBhbmQgdGFrZSBsb25nIHBvc2l0aW9ucyBpbiB0aGVtIHdoaWxlIHNob3J0aW5nIFMgNTAwIG9yIGZ1dHVyZXMgY29udHJhY3RzIGFuZCBhbnkgaW5kaXZpZHVhbCBuYW1lcyBpdCBkZWVtcyB1bmF0dHJhY3RpdmUuIApXaXRoIGl0cyBhY2NvbXBhbnlpbmcgZmx1aWQgZmxvdyBhbmQgdmFyaWF0aW9ucyBpbiBjcmVlcCBkZWZvcm1hdGlvbiwgd2VyZSBuZWNlc3NhcnkgdG8gcHJlc2VydmUgdGhlIG51dHJpdGlvbmFsIHN0YXR1cyBvZiBkaXNjcyBhbmQgam9pbnRzLlRoZXNlIHN0dWRpZXMgYXJlIGNvbnNpc3RlbnQgd2l0aCBhIGxhcmdlciBib2R5IG9mIGV2aWRlbmNlIHRoYXQgaGFzIGV2YWx1YXRlZCB0aGUgY2xpbmljYWwgZWZmZWN0cyBvZiBiZWQgcmVzdCBhbmQgaW1tb2JpbGl0eSwgYm90aCBvZiB3aGljaCBoYXZlIGJlZW4gdW5pdmVyc2FsbHkgYW5kIHRob3JvdWdobHkgZGlzY3JlZGl0ZWQgYXMgZWZmZWN0aXZlIG1ldGhvZHMgb2YgdHJlYXRtZW50IGZvciBib3RoIGJhY2sgYW5kIG5lY2sgcHJvYmxlbXMuV2FkZGVsbCwgTUQgbm90ZWQgaW4gMTk4NyAoNikgdGhhdCB0aGVyZSBpcyBhIGxvc3Mgb2YgMyUgbXVzY2xlIHN0cmVuZ3RoIHBlciBkYXkgd2l0aCBjb21wbGV0ZSBiZWQgcmVzdC5UaGUgMTk5NCBBSENQUiBndWlkZWxpbmVzIG9uIEFjdXRlIExvdyBCYWNrIFByb2JsZW1zIGluIEFkdWx0cyAoNykgd2FybmVkIGFib3V0IHRoZSBwb3RlbnRpYWwgY29tcGxpY2F0aW9ucyBvZiBiZWQgcmVzdCBpbmNsdWRpbmcgYSAxLjAlIHRvIDEuNSUgbG9zcyBvZiBsIG11c2NsZSBtYXNzIHBlciBkYXksIGFzIHdlbGwgYXMgYSAxNSUgbG9zcyBvZiBhZXJvYmljIGNhcGFjaXR5IGluIDEwIGRheXMuVGhlIHZlcnkgcmVjZW50bHkgcmV2aXNlZCBhbmQgcmVsZWFzZWQgMTk5NiBCcml0aXNoIGd1aWRlbGluZXMgKDgpIHN1bW1hcml6ZSB0aGUgbGl0ZXJhdHVyZSBvbiBiZWQgcmVzdCwgbm90aW5nIHRoYXQgdGhlcmUgYXJlIG5vdyA5IHJhbmRvbWl6ZWQgY29udHJvbGxlZCBzdHVkaWVzIG9uIGJlZCByZXN0LCBhbmQgdGhlaXIgZmluZGluZ3MgY29uZmlybSB0aGF0IGJlZCByZXN0IGlzIGNvdW50ZXIgcHJvZHVjdGl2ZS5TaW1pbGFybHksIHRoZSBRdWViZWMgVGFzayBGb3JjZSBvbiBXaGlwbGFzaCBBc3NvY2lhdGVkIERpc29yZGVycyAoOSkgY29uZmlybWVkIHRoYXQgcHJvbG9uZ2VkIHVzZSBvZiBjZXJ2aWNhbCBjb2xsYXJzIHByb2JhYmx5IHByb2xvbmdzIGRpc2FiaWxpdHkuVG9kYXkgaXQgaXMgdW5kZXJzdG9vZCB0aGF0IG1vdGlvbiBwbGF5cyBhIGNyaXRpY2FsIHJvbGUgaW4gbWFpbnRhaW5pbmcgdGlzc3VlIGFuZCBqb2ludCBsdWJyaWNhdGlvbi9udXRyaXRpb24gZm9yIGJvdGggZGlzY3MgYW5kIGpvaW50IGFydGljdWxhciBjYXJ0aWxhZ2UuV2Uga25vdyB0aGF0IGFydGljdWxhciBjYXJ0aWxhZ2UgcmVjZWl2ZXMgaXRzIG51dHJpdGlvbiB0aHJvdWdoIHRoZSBjaXJjdWxhdGlvbiBvZiBzeW5vdmlhbCBmbHVpZCwgd2hpY2ggaXMgYSBmaWx0cmF0ZSBkZXJpdmVkIGZyb20gYmxvb2QgdmVzc2VscyB3aXRoaW4gdGhlIHN5bm92aWFsIG1lbWJyYW5lLkluIGFkZGl0aW9uLCB0aGUgc3lub3ZpYWwgbWVtYnJhbmUgYWxzbyBjb250YWlucyBseW1waGF0aWMgZHVjdHMsIHdoaWNoIHByb3ZpZGUgdGhlIHBhdGh3YXkgZm9yIHRoZSByZW1vdmFsIG9mIHdhc3RlIHByb2R1Y3RzIG91dCBvZiB0aGUgc3lub3ZpYWwgZmx1aWQgYW5kIHRoZSBqb2ludCBzcGFjZS5XaGF0IGlzIGVzc2VudGlhbCB0byByZWNvZ25pemUgaXMgdGhhdCB0aGUgc3lub3ZpYWwgZmx1aWQgaGFzIGFic29sdXRlbHkgbm8gaW5oZXJlbnQgY2FwYWNpdHkgdG8gY2lyY3VsYXRlIGlzIG5vIGhlYXJ0IGZvcmNlZnVsbHkgcHVtcGluZyBzeW5vdmlhbCBmbHVpZCB0byB0aGUgam9pbnRzLiBJdHMgbW92ZW1lbnQgdGhyb3VnaCB0aGUgam9pbnQgc3BhY2UgaXMgZGVwZW5kZW50IG9uIG1vdmVtZW50IGFuZCBjaGFuZ2VzIGluIGludHJhIGFydGljdWxhciBwcmVzc3VyZS4uIApJIGR1bm5vIGhvdyB5b3Ugd291bGQgZXZlbiBiZWdpbiB0byBtZWFzdXJlIHNvbWV0aGluZyBsaWtlIHRoYXQsIHdoYXQgbWlnaHQgbWFrZXMgaXQgc2VlbSB0aGF0IHdheSB0byB5b3U7IGJ1dCBzbyB3aGF0PyBJZiB0aGF0IGV2ZW4gdHJ1ZS4gV2hhdCBkaWZmZXJlbmNlIGRvZXMgaXQgbWFrZSB3aGF0IHBlb3BsZSB0aGluaz8gV2h5IHNob3VsZCB0aGF0IGJlIHRoZSBkcml2ZXIgYmVoaW5kIHdoYXQgdGhlIGlkZWFsIHBvbGljeSBvciBtYWtlcyBvbmUgb3RoZXJ3aXNlIHByaXZpbGVnZWQgcGVyc29uIChoYXMgYWNjZXNzIHRvIGhpZ2hlciBlZHVjYXRpb24gYXQgYWxsKSBzb21laG93IG5vdwpBIDEwIHlhcmQgcGFzcyB0byBBZ2dpZSBhbG9uZyB0aGUgc2lkZWxpbmUgd2hlcmUgaGUgaXMgZm9yY2VkIE9CIHRvIHN0b3AgdGhlIGNsb2NrLiBDb2xsaW5nc3dvcnRoIGV2ZW4gbWVudGlvbmVkIGhvdyBiaWcgdGhhdCBmb3JjZSBvdXQgd2FzIHdpdGggMjozNyBsZWZ0LiBJdHMgZmlyc3QgZG93biBhbmQgdGhhdCB3aGVyZSB0aGUgZmluYWwgc2VyaWVzIHBpY2tlZCB1cCB3aGljaCBJIGNvdmVyZWQgYWJvdmUuIApJdCBlYXNpbHkgdGhlIG1vc3QgZW5ncm9zc2luZyBvdXQgb2YgYWxsIG9mIHRoZW0sIGkgZmVsdCBhYnNvbHV0ZWx5IGltbWVyc2VkIGluIHRoZSBjaXR5LCBhbmQgdG8gdG9wIGl0IGFsbCBvZmYgaXQgYXJndWFibHkgdGhlIG1vc3QgZGV0YWlsZWQgR1RBIHRoZXkgZXZlciBtYWRlLCB3aGVuIHlvdSBjb25zaWRlciBhIGxvdCBvZiB0aGUgYnVpbGRpbmdzIGhhdmUgaW50ZXJpb3JzLiAKIkkndmUgYnJvdWdodCBteSBmcmlkZ2UgYWxsIHRoZSB3YXkgZnJvbSB0aGUgVUsgYW5kIHdlJ3JlIGdvaW5nIHRvIGJyaW5nIHRoZSBmcmlkZ2Ugb3V0IG9uIHN0YWdlIGFuZCBpdCBpcyBleGFjdGx5IHdoYXQgeW91J2QgdGhpbmsgYSBNaXN0ZXIgTWFrZXIgZnJpZGdlIHdvdWxkIGxvb2sgbGlrZSwgaXQncyBhIHZlcnkgY29sb3VyZnVsIHRoaW5nIGFuZCB3ZSdyZSBnb2luZyB0byBiZSBzdGlja2luZyB1cCBhcnR3b3JrIG9udG8gbXkgZnJpZGdlLCIgaGUgc2F5cy4KSSBjYW4gc2VlIHRoZSBhcHBlYWwgaWYgeW91IGhhdmUgYSBtb3JlIG9wZW4gcmFuZ2UsIGFyZSBhIG5vcm1hbCBzaXplLCBhbmQgYXJlIGxvb2tpbmcgZm9yIHNvbWV0aGluZyBkaWZmZXJlbnQuIEkgcHJvYmFibHkgZW5kIHVwIHNlbGxpbmcgaXQgc29vbmVyIHRoZW4gbGF0ZXIsIGJ1dCBpdCB3YXMgZnVuIHRvIHRoZSBkZWdyZWUgSSB3YXMgYWJsZSB0byBlbmpveSBpdC4gClRoZSBwdXJjaGFzZSB3aWxsIGJlIGZpbmFuY2VkIHdpdGggYSBjb21iaW5hdGlvbiBvZiBjYXNoIG9uIGhhbmQsIG5ldyBjcmVkaXQgZmFjaWxpdGllcyBhbmQgZXF1aXR5IGZpbmFuY2luZywgdGhlIGNvbXBhbnkgc2FpZCBpbiB0aGUgc3RhdGVtZW50LiBUaGUgZGVhbCBpcyBiYWNrZWQgYnkgQmxhY2tzdG9uZSBHcm91cCBMUCBjcmVkaXQgZGl2aXNpb24sIEdTTyBDYXBpdGFsIFBhcnRuZXJzLCB3aGljaCB3aWxsIGJ1eSBtb3JlIHRoYW4gJDYwMCBtaWxsaW9uIGluIGNvbnZlcnRpYmxlIHByZWZlcnJlZCBzaGFyZXMgYW5kIG90aGVyIHNlY3VyaXRpZXMuIApUaGlzIGlzIGJlY2F1c2UsIGluc3RlYWQgb2YgdXNpbmcgdGhlIENvbGxpbnMgb3IgT3hmb3JkIGRpY3Rpb25hcmllcywgdGhleSB1c2UgYSBzZXJ2aWNlIHByb3ZpZGVkIGJ5IEN1cmlvc2l0eSBNZWRpYSwgd2hpY2ggZG9lc24gc2VlbSB0byBoYXZlIGEgc2luZ2xlIGxhbmd1YWdlIGV4cGVydCBpbiBpdHMgdGVhbS4gSG93IGNhbiB5b3UgdHJ1c3QgYSBkaWN0aW9uYXJ5IGlmIGl0IHdhcyBtYWRlIGJ5IG5vbiBleHBlcnRzPy4gCkdyb292ZSBIYXdncyB0byBraWNrIG9mZiBCaWtlciBSYWxseSBGcmlkYXkKRGlkIE1hbmFmb3J0IGdldCBzdXNwaWNpb3VzIGFuZCBjb250YWN0IHRoZSBGQkk/IFdhcyBDb21leSBvbiB0aGUgc2lkZSBvZiBPYmFtYS9MeW5jaCB0byBlbnRyYXAgdGhlbSBhbmQgZ2V0IGEgRklTQSB3YXJyYW50PyBUaGlzIEVtaW4gZ3V5IHJpY2ggUnVzc2lhbiBEYWQgaXMgQU5USSBQdXRpbiBhbmQgaGlzIFBSIEZpcm0gd2FzIHRoZSBQb2Rlc3RhIGdyb3VwLiBUaGV5IGZvdW5kIGEgdXNlZnVsIGNvbm5lY3Rpb24gdGhyb3VnaCBHb2xkc3RvbmUgYW5kIGludml0ZWQgaGltIHRvIHRoZSBXaGl0ZSBIb3VzZSB0aGUgd2VlayBiZWZvcmUgaGUgc2VudCB0aGUgZW1haWwuIFRvIGJlIGNvYWNoZWQgb24gdGhlIGV4YWN0IHdvcmRpbmcgdG8gZ2V0IGEgRklTQSB3YXJyYW50PyBXaG8gZGlkIEdvbGRzdG9uZSBtZWV0IHdpdGg/IEV2ZXJ5IFJ1c3NpYW4gaW4gdGhhdCBtZWV0aW5nIHdhcyBBTlRJIFB1dGluIGFuZCBvbiB0aGUgQ2xpbnRvbiB0ZWFtLiBUaGUgbWVkaWEgY2FsbHMgdGhpcyBsaXR0bGUgaG9uZXlwb3QgbGF3eWVyIGEgS3JlbWxpbiBsYXd5ZXIuIApXYW50IHRvIGJlIHRoZSBnYXRla2VlcGVyLllvdSB3YW50IERlZSBNYXJnbywgSm9zZSBSb2RyaWd1ZXosIFRlZCBIb3VnaHRvbiwgYW5kIHNvIG9uLCB0byBnbyB0aHJvdWdoIHlvdSBmaXJzdCBiZWZvcmUgdGhleSBjYW4gZ2V0IHRvIEVzY29iYXIuVGhpcyBpcyBwcm9iYWJseSB0aGUgYmVzdCBtb3ZlIGZvciB5b3UuIApXZSB1c2VkIGEgcmFuZG9taXplZCBjb250cm9sbGVkIHRyaWFsIHRvIHRlc3QgdGhlIGVmZmVjdCBvZiBtYXNzIGRlcGxveW1lbnQgb2YgVEFTRVJzIG9uIHBvbGljaW5nLiAKU2FkbHksIHRoZSB3b3JsZCBpcyBiaWcgd2l0aCBhIGxvdCBvZiBjb21wbGljYXRlZCBwcm9ibGVtcy4gQW5kLCBmb3IgdGhlIG1vc3QgcGFydCBhbnl3YXksIGNvbXBsaWNhdGVkIHByb2JsZW1zIGRvbiBoYXZlIHVuY29tcGxpY2F0ZWQgZml4ZXMuIEJ1dCB0aGUgcG9saXRpY2lhbiB3aG8gdGVsbHMgeW91IGhlIGZpeCBldmVyeXRoaW5nLCBwZW9wbGUgdGhpbmsgInN1cmUsIGxldCB0cnkgdGhhdCIsIGFuZCB0aGVuIHRoZSBndXkgaXMgaW4gb2ZmaWNlIGZvciB5ZWFycy4gCkV2ZW4gd2hlbiBJIHRoaW5rIGFib3V0IHdoYXQgV2luZHNvciBpcyBpdCBhbiBhbWFsZ2FtYXRpb24gb2YgZml2ZSBvciBzaXggdG93bnMgc28gYWxsIG9mIHRob3NlIHBsYWNlcyBoYXZlIHN0b3JpZXMgdG8gdGVsbCwgc2FpZCBNb3JyaXMuIApCdXQgc2hlIHJlY29nbml6ZXMgdGhlIHJlc3RyaWN0aW9uIGFib3V0IGdvaW5nIG9uIHByaXZhdGUgcHJvcGVydHkgaXMgYW4gb2JzdGFjbGUuClRoZXNlIGd1eXMga25ldyB0aGUgcGVhcmwgbmVja2xhY2VzIHdvdWxkIGVsaWNpdCBvdXRyYWdlLiAKRm9yIHRob3NlIGhvcGluZyBmb3Igc29tZXRoaW5nIG1vcmUgc3Vic3RhbnRpYWwsIFBvayBTdGF0aW9uIGFsc28gb2ZmZXJzIHRoZSB1bHRpbWF0ZSBtYXNoIHVwOiBwb2tlIGJ1cnJpdG9zLi4gCkkgaGVhciB5b3UhIFNvIGlmIHlvdSBjYW4sIHNjcmVlbnNob3Qgd2hhdCBzaG93cyB5b3UgbWFkZSB0aGUgYXR0ZW1wdCB0byBjb21tdW5pY2F0ZSBldmVyeXRoaW5nIGJlZm9yZSB0aGUgdGhlcmFwaXN0IGxvZ2dlZCBvZmYgdGhlaXIgZW1haWwsIGFuZCB0aGVuIHRoZXkgY2FuIHNlZSB0aGF0IHlvdSBsaXRlcmFsbHkgZGlkIGFsbCB5b3UgY291bGQgdG8gY29tbXVuaWNhdGUgdG8gdGhlbSwgYW5kIHlvdSB3ZXJlIGluIGZhY3QgdGhlcmUgZm9yIHlvdXIgYXBwb2ludG1lbnQuIApGb3VuZCB0aGUgcmVhc29ucyB3aHkgcGVvcGxlIHJlcHJlc2VudCB0aGVtc2VsdmVzIHdlcmUgY29tcGxleCwgYnV0IGFsbW9zdCBhbHdheXMgZmluYW5jaWFsLiBTYWlkIHNlbGYgcmVwcywgYXMgdGhleSBjYWxsZWQsIGZyZXF1ZW50bHkgdG9sZCBoZXIgdGhleSBhcmUgdHJlYXRlZCB3aXRoIGNvbnRlbXB0IGJ5IHRoZSBjb3VydCBzeXN0ZW0uIApXaGF0IHRvIGxvb2sgZm9yIGluIHRoZSBzbWFydCB0cmFpbmVyPyBBIG1pbmltYWwsIHNtYXJ0IGRlc2lnbiB0aGF0IGRvZXNuJ3QgY29tZSB3aXRoIHRoZSBzdHlsaW5nIHRyaWNrcyBhbmQgdGVjaG5vbG9neSBvZiBhIHNwb3J0cyB0cmFpbmVyLiBMb29rIGZvciBhIHN1YnRsZSBjb2xvdXIgcGFsZXR0ZSwgc2ltcGxlIHNvbGUgYW5kIGFsc28gbWF0ZXJpYWxzIHRoYXQgd2lsbCBlbGV2YXRlIGl0IHZhc3RseSAgIGluc3RlYWQgb2YgdGVjaCBtZXNoLCBwbGFzdGljcyBhbmQgbnlsb25zLCBvcHQgZm9yIHN1ZWRlcyBhbmQgbGVhdGhlcnMuIFNwYWNlWCBDcmV3IERyYWdvbiBjYXBzdWxlIHBhcmFjaHV0ZWQgZG93biB0byB0aGUgQXRsYW50aWMgT2NlYW4gRnJpZGF5IG1vcm5pbmcsIHN1Y2Nlc3NmdWxseSBjYXBwaW5nIHRoZSBmaXJzdCB0ZXN0IG9mIGEgY29tbWVyY2lhbCBzcGFjZWNyYWZ0IHRoYXQgd2lsbCBsaWtlbHkgYnJpbmcgYXN0cm9uYXV0cyB0byB0aGUgSW50ZXJuYXRpb25hbCBTcGFjZSBTdGF0aW9uICAgcG9zc2libHkgaW4gdGhlIG5leHQgeWVhci4gCklmIHlvdSBhcmUgb25lIG9mIHRob3NlIHBlb3BsZSB3aG8gYmVsaWV2ZSB0aGF0ICJiaWciIGlzIGJldHRlciB0aGVuIHlvdSB3aWxsIGFic29sdXRlbHkgbG92ZSBoYXZpbmcgYSBzZXQgb2YganVtYm8gcGxheWluZyBjYXJkcyBmb3IgeW91ciBuZXh0IG5laWdoYm9yaG9vZCBnZXQgdG9nZXRoZXIuIEp1bWJvIHBsYXlpbmcgY2FyZHMgY2FuIG1lYW4gb25lIG9mIHR3byB0aGluZ3MsIGVpdGhlciB0aGUgY2FyZHMgYXJlIHRoZSBzYW1lIHNpemUgYXMgcmVndWxhciBwbGF5aW5nIGNhcmRzIHdpdGggdGhlIGZhY2VzIG1hZ25pZmllZCB0byBtYWtlIHRoZW0gZXh0cmEgbGFyZ2UgYW5kIGVhc3kgdG8gc2VlIG9yIGl0IGNhbiBtZWFuIHRoZSBjYXJkcyBhcmUgYWN0dWFsbHkganVtYm8gdGhlbXNlbHZlcy4gSnVtYm8gY2FyZCBkZWNrcyBjb21lIGluIDMuNVg1LjEyNSwgNDEvMiBYIDYgNy84IG9yIGV2ZW4gOCcgWCAxMS4KQnV0LCBmb3IgZXhhbXBsZSwgcGVvcGxlIGtub3cgaG93IHRvIGNhbGwgOTExIGZvciBlbWVyZ2VuY3kgc2VydmljZXMgKGF0IGxlYXN0IGhlcmUgaW4gdGhlIFVTKSwgYmVjYXVzZSBpdCBiZWVuIHRhdWdodCB0byB1cyBieSByb3RlIHNpbmNlIGNoaWxkaG9vZC4gU29tZW9uZSB3aG8gbmVlZHMgZW1lcmdlbmN5IHNlcnZpY2VzIG1pZ2h0IGJlIGFibGUgdG8gY2FsbCB0aGUgbnVtYmVyIHRoZW1zZWx2ZXMsIGJ1dCBvZnRlbiB0aGV5IGNhbm5vdCBhbmQgbmVlZCBzb21lb25lIGVsc2UgdG8gbWFrZSB0aGUgY2FsbCBmb3IgdGhlbS4KV2hpbHN0IHRoZXJlLCBoZSB3YXMgbXVyZGVyZWQsIHByZXN1bWFibHkgYnkgbGZ0aHJ5dGgsIGFuZCB0aGVscmVkIGJlY2FtZSBLaW5nIGF0IHRoZSBhZ2Ugb2YgYWJvdXQgdGVuLiAKU28geW91ciBzdHJhdGVneSBmb3IgcGxheWVycyBnZXR0aW5nIG91dCBvZiBsb3cgZWxvIGlzIHRvIG1lY2hhbmljYWxseSBvdXRwbGF5IHRoZWlyIG9wcG9uZW50J3Mgd2hpbGUgdHJhY2tpbmcgdGhlIGVuZW15IGp1bmdsZXIgYW5kIHRoZW4gb3V0cGxheSB0aGUgZW5lbXkgdGVhbSBvbiB0aGUgbWFjcm8gZ2FtZS4gClN0cmVzc2Z1bCBpcyBhbiB1bmRlcnN0YXRlbWVudC4gMjIgeWVhciBvbGQgQ2FsZ2FyeSBib3JuIGNvbXBldGl0b3IgYmVnYW4gdGhlIHdlZWsgYXQgdGhlIHRvcCBvZiB0aGUgQkJDYW4zIHBhY2sgYXMgSGVhZCBvZiBIb3VzZWhvbGQgYW5kIHN1Y2Nlc3NmdWxseSBjb25kdWN0ZWQgYSBwbGFuIHRvIGV2aWN0IGNvbXBldGl0aW9uIHRocmVhdCBCb2JieSBIbGFkIGZyb20gdGhlIGhvdXNlLiAKKEZ1bGwgQW5zd2VyKS4gClBhY3F1aWFvIGhhcyBsZWZ0IGZvciBhIGZhbWlseSBob2xpZGF5IHdpdGggaGlzIGZhbWlseSBpbiBJc3JhZWwuIEhlIGludGVuZHMgdG8gdmlzaXQgdGhlIGhvbHkgY2l0eSBvZiBKZXJ1c2FsZW0gYW5kIG90aGVyIHZhcmlvdXMgQ2hyaXN0aWFuIGNvbW11bml0aWVzLiAKU2FkaWU6IFJhdGlvbmFsPyBZb3UgaW52ZXN0IGJpbGxpb25zIG9mIGRvbGxhcnMgaW4gc29tZSBvZiB0aGUgZmluZXN0IGFpcnBsYW5lIGZhY3RvcmllcyBpbiB0aGUgd29ybGQsIHRyYWluIHRoZSBiZXN0IHdvcmtmb3JjZSBvbiB0aGUgcGxhbmV0LCB0aWUgb3VyIHRyYWZmaWMgaW50byBrbm90cyBieSBwdXR0aW5nIGZhY3RvcmllcyBhdCBlaXRoZXIgZW5kIG9mIHRoZSBtZXRyb3BvbGl0YW4gY29ycmlkb3IsIGJ1aWxkIHVwIGRlY2FkZXMgb2YgcG9saXRpY2FsIGdvb2R3aWxsIGFuZCB0aGVuIHNheSwgb2gsIGJ5IHRoZSB3YXksIEknbSB0aGlua2luZyBvZiBtb3Zpbmcgb3V0PyBBZnRlciBJJ3ZlIGJlZW4gYnVpbGRpbmcgeW91ciByb2FkcywgZ2l2aW5nIHlvdSBjaGVhcCBsYW5kLCBidXJ5aW5nIHlvdXIgd2FzdGUgYW5kIHNjaG9vbGluZyB5b3VyIGtpZHM/CkFuIGltcG9ydGFudCBzdGVwIGZvcndhcmQgd291bGQgYmUgcmVhbGl6aW5nIHRoYXQgdGhlIERlbXMgQVJFIHRoZSBwcm9ibGVtLiAKVGhlIHBvcHVsYXRpb24gYXQgdGhpcyB0aW1lIHdhcyB2ZXJ5IHN1cGVyc3RpdGlvdXMgICBFZHdhcmQgdGhlIE1hcnR5cidzIHRpdGxlIGl0c2VsZiB3YXMgZHVlIHRvICdtaXJhY2xlcycgdGhhdCBvY2N1cnJlZCBhcm91bmQgdGhlIGFyZWEgd2hlcmUgaGlzIGJvZHkgbGF5LiBUaGlzIG1lYW50IHRoYXQgcGVvcGxlIHdlcmUgcGVyaGFwcyBtb3JlIGxpa2VseSB0byBxdWVzdGlvbiB0aGVscmVkJ3MgcmlnaHQgdG8gbGVhZC4gV2hhdCBpcyBjZXJ0YWluIGlzIHRoYXQgbWFueSBwZW9wbGUgYmV0cmF5ZWQgdGhlbHJlZCdzIGRlY2lzaW9ucyBhdCBvbmUgc3RhZ2Ugb3IgYW5vdGhlciwgaW5jbHVkaW5nIGhpcyBzb24gRWRtdW5kIHdobyBkZWZpZWQgdGhlbHJlZCBieSBtYXJyeWluZyBTaWdlZm9ydGgncyB3aWRvdyBhbmQgdGFraW5nIHBvc3Nlc3Npb24gb2YgdGhlIERhbmVsYXcuIApEZXNwaXRlIHRoZSBnYW1lIG9mIFBvIEtlIE5vIHJlc2VtYmxpbmcgYmluZ28gcXVpdGUgaGVhdmlseSB0aGVyZSBhcmUgYSBjb3VwbGUgb2Yga2V5IGRpZmZlcmVuY2VzIHRoYXQgZGlzdGluZ3Vpc2ggUG8gS2UgTm8gZnJvbSBiaW5nby4gClNvbWVob3cgaGVyIHRlbGxpbmcgbWUgdGhlcmUgd2VyZSBubyBleHBlY3RhdGlvbnMgdG8gZWF0IGhlYWx0aHkgbWFkZSBtZSBmZWVsIGEgd29ybGQgYmV0dGVyLiBTaGUgZXZlbiBzYWlkIHNoZSBoYWQgYSBwYXRpZW50IHRoYXQgbGl2ZWQgb2ZmIE1vZSBmb3IgOSBtb250aHMuLiAKT24gU2VwdC4gMjUsIDE5MTksIGFsbW9zdCAxMCBkYXlzIGFmdGVyIGhpcyBwcmVsaW1pbmFyeSBoZWFyaW5nLCB0d28gb2ZmaWNlcnMgd2VyZSBpbiB0aGUgcHJvY2VzcyBvZiBwdXR0aW5nIExhcnNvbiBiYWNrIGluIGhpcyBjZWxsIHdoZW4gaGUgYXNrZWQgZm9yIGEgZHJpbmsgb2Ygd2F0ZXIuIApXaGlsZSBpdCBtYXkgYmUgc29tZXRoaW5nIG9mIGEgc3dlZXBpbmcgc3RhdGVtZW50LCBJIGRpZCBwdXQgdGhlIHBhcmVudGhlc2lzIGFkZGl0aW9uIHRoZXJlIGZvciBncm91cHMgaXQgbWF5IG5vdCBhcHBseSB0byAgIGJ1dCBtb3JlIG9mdGVuIHRoYW4gbm90IGl0IHNlZW1zIHBlb3BsZSBoYXZlIGp1c3QgZXhwYW5kZWQgb24gdGhlIGRyYXcgMiB3aXRoIGFkdmFudGFnZSBieSBhZGRpbmcgcm9sbGluZyBjYXJkcyB0byB0aGUgZXF1YXRpb24uIE9mdGVuIGJ5IHRoZSB0aW1lIHBlb3BsZSBnZXQgcm9sbGluZyBtb2RpZmllcnMgdGhleSBzZWVtIHRvIGhhdmUgZm9yZ290dGVuIHRoZSBhZHZhbnRhZ2Uvcm9sbGluZyBwYXJ0IG9mIHRoZSBydWxlIGJvb2ssIGFuZCBrZWVwIHBsYXlpbmcgdHdvIHN0YWNrcyB1bnRpbCBmaW5kaW5nIG91dCBpdCBpbmNvcnJlY3QgICBhbmQgYnkgdGhhdCB0aW1lIG1hbnkgZG9uIHdhbnQgdG8gY2hhbmdlIHRoZWlyIHdheSBvZiBwbGF5aW5nLiBJIGFtIHNvcnJ5IGlmIHRoaXMgb2ZmZW5kZWQgeW91Li4gCkkgcmVhbGl6ZWQgdGhhdCBJIHdhcyBwcmVkb21pbmFudGx5IHVzaW5nIHRoZSBhcHBzIG91dCBvZiBib3JlZG9tLCBhbG1vc3QgbGlrZSBhbm90aGVyIGZvcm0gb2Ygc29jaWFsIG1lZGlhLCBhbmQgc2luY2UgSSBoYWQgc29tZSBsZXNzIHRoYW4gc3RlbGxhciBleHBlcmllbmNlcyBsYXRlbHksIEkgd2FudGVkIHRvIGdpdmUgaXQgYSByZXN0LiAKRG9uYWxkIFRydW1wLCQ0IGJpbGxpb24sIFdoYXJ0b24uIEJpZyBicmFuZCBuYW1lIGluIHJlYWwgZXN0YXRlLCBtZWRpYSwxMjguIEdlb3JnZSBMaW5kZW1hbm4gZmFtaWx5LCAkMy45IGJpbGxpb24sIFdoYXJ0b24uIApXaGlsZSwgdGhlIHNpZ25zIHdlcmUgdGhlcmUgYnV0IEkgd2FzIHNvIGZhciBpbiBsb3ZlIHRoYXQgSSBkaWRuIHNlZSB0aGVtIGF0IHRoZSB0aW1lIGJ1dCB0aGV5IGFyZSBjbGVhciBhcyBkYXkgbG9va2luZyBiYWNrLiBBbnl3YXlzLCBJIHNwZW50IHRoZSBuZXh0IDYgbW9udGhzIGJlaW5nIG1pc2VyYWJsZSBhbmQgcmlnaHQgYXMgSSB3YXMgZmluYWxseSBnZXR0aW5nIG92ZXIgaGVyIHNoZSBjYWxsZWQgbWUgYmFjayB1cC4gSSwgbGlrZSBhIGZvb2wsIGFncmVlZCB0byBsZXQgaGVyIHRha2UgbWUgb3V0IHdoaWNoIGxlZCB0byB1cyBoYXZpbmcgc2V4LiBTaG9ydGx5IHRoZXJlYWZ0ZXIsIEkgcmVhbGl6ZWQgdGhhdCB3aGF0IEkgaGFkIGJlZW4gZGVzcGVyYXRlbHkgd2FudGluZyB0byBoYXBwZW4gZm9yIGhhbGYgYSB5ZWFyIHdhcyBub3Qgd2hhdCBJIHdhbnRlZCBhdCBhbGwuIFdoYXRldmVyIHdhcyB0aGVyZSBiZWZvcmUgdGhlIGJyZWFrdXAgd2FzIGdvbmUgYW5kIHJlcGxhY2VkIHdpdGggZGlzdHJ1c3QgYW5kIGluIHNvbWUgd2F5cyBhIGNvbXBsZXRlIHN0cmFuZ2VyLgpBcyB3ZSByZWNlbnRseSBwb2ludGVkIG91dCwgdGhlIGZpbmFsIG1vcm5pbmcgb2Ygc2VyaWFsIGtpbGxlciBKb2huIERvZSdzIG1hc3RlciBwbGFuIHdhcyB0aGUgbW90aGVyIG9mIGFsbCBtZXNzeSBlcnJhbmRzLiBCdXQgb2YgY291cnNlLCB0aGF0IHN0YW1pbmEgd2FzIGFsbCB3b3J0aCBvdXIgamF3cyBkcm9wcGluZyBhdCB0aGUgcmV2ZWFsIHRoYXQgQnJhZCBQaXR0J3MgY2hhcmFjdGVyLCBEZXRlY3RpdmUgTWlsbHMsIHdhcyBvbmUgb2YgdGhlIGZpbmFsICJzaW5zIiBpbiBoaXMgdGhlbWVkIG11cmRlciBzcHJlZS4gCllvdSBtb20gY2FuIG9ubHkgZ2l2ZSB5b3UgYW4gWCwgYmVjYXVzZSB0aGF0IGFsbCBzaGUgaGFzLiAKTW9kZXJuIHZldGVyaW5hcnkgbWVkaWNpbmUgaGFzIG1hZGUgbWFueSBhZHZhbmNlcy4gTmV3IHZhY2NpbmF0aW9ucywgbWVkaWNhdGlvbnMsIGRpYWdub3N0aWMgYWlkcywgYW5kIHN1cmdpY2FsIHRlY2huaXF1ZXMgdGhhdCB3ZXJlIG9uY2UgdW5kcmVhbWVkIG9mIGFyZSByZWFsaXRpZXMsIGhlbHBpbmcgcGV0cyBsaXZlIGxvbmdlciwgaGVhbHRoaWVyIGxpdmVzLiBCdXQgc29tZSB2ZXRlcmluYXJpYW5zIGFyZSBsb29raW5nIHRvIHRoZSBwYXN0IHRvIGZpbmQgc3VjY2Vzc2Z1bCB0cmVhdG1lbnRzIHRoYXQgcmVseSBvbiBuYXR1cmFsIHN1YnN0YW5jZXMgbGlrZSBoZXJicyBvciBob21lb3BhdGhpYyByZW1lZGllcywgb3IgcGh5c2ljYWwgbWFuaXB1bGF0aW9ucyBsaWtlIG1hc3NhZ2UsIGNoaXJvcHJhY3RpYywgb3IgYWN1cHVuY3R1cmUuIEFsdGVybmF0aXZlIHRoZXJhcGllcyBmb3IgZG9ncyBoYXZlIGJlZW4gdXNlZCB0byB0cmVhdCBza2luIHByb2JsZW1zLCBkaWdlc3RpdmUgdXBzZXRzLCBhbmQgb3RoZXIgY29uZGl0aW9ucy4gT2YgY291cnNlLCBhbiBhY2N1cmF0ZSBkaWFnbm9zaXMgbXVzdCBiZSBtYWRlIGJlZm9yZSB5b3UgYmVnaW4gYW55IHR5cGUgb2YgdHJlYXRtZW50LCBidXQgbWFueSBkb2dzIGNhbiBiZW5lZml0IGZyb20gYSBza2lsbGVkIGFuZCBzZW5zaWJsZSBjb21iaW5hdGlvbiBvZiB0cmFkaXRpb25hbCBhbmQgYWx0ZXJuYXRpdmUgdGhlcmFwaWVzLgpGRlhJViBzdGlsbCBoYXMgY3VycmVuY3kgZ2VhciBhbmQgYnJpbmcgYWJsZSB0byBhY3R1YWxseSB0cmFjayB5b3VyIHByb2dyZXNzIHRvIGEgbmV3IGl0ZW0gZmVlbHMgZmFyIGJldHRlci4gQW5kIGFueSB1cGdyYWRlcyBmcm9tIGRyb3BzIGluIHRoZSBtZWFudGltZSBhcmUgYSBwbGVhc2FudCBzdXJwcmlzZSByYXRoZXIgdGhhbiBzb21ldGhpbmcgeW91IGFnb25pc2Ugb3Zlci4uIApBdCAxOjE0IHlvdSB0aGVuIHJlcGVhdCB5b3VyIHBhc3QgbWlzdGFrZSBhbmQgZmVhciB0aGUgaHVudGVyIGFnYWluLCBhbmQgdGhlIGRydWlkIHJlcGVhdHMgdGhlIGV4YWN0IHNhbWUgdGhpbmcgaGUgZGlkIGJlZm9yZS4gClNldCBpbiB0aGUgc2hhZG93cyBvZiB0aGUgcmVkIHJvY2sgY2xpZmZzIG9mIFNub3cgQ2FueW9uIFN0YXRlIFBhcmssIHRoaXMgZml0bmVzcyBmb2N1c2VkIHNwYSBwdXRzIGhpa2luZyBmcm9udCBhbmQgY2VudGVyLiBHdWVzdHMgY2hvb3NlIGZyb20gMzAgZGlmZmVyZW50IGd1aWRlZCB0cmVrcyBlYWNoIHdlZWssIHNvbWUgb2Ygd2hpY2ggZXhwbG9yZSBuZWFyYnkgWmlvbiBhbmQgQnJ5Y2UgQ2FueW9uIG5hdGlvbmFsIHBhcmtzLCBhcyB3ZWxsIGFzIHRoZSBHcmFuZCBDYW55b24gKGFib3V0IDEwMCBtaWxlcyBhd2F5KS4gQW4gYWR2ZW50dXJlIGNvbmNpZXJnZSBpcyBvbiBoYW5kIHRvIGhlbHAgZ3Vlc3RzIHNlbGVjdCB0aGUgcmlnaHQgZGlmZmljdWx0eSBsZXZlbDogRXhwbG9yZXIgdHJla3MgY29uc2lzdCBvZiBsZWlzdXJlbHkgd2Fsa3MgaW4gdGhlIGZvb3RoaWxscywgd2hpbGUgRW5kdXJhbmNlIG91dGluZ3MgYXJlIHJlY29tbWVuZGVkIGZvciBodW1hbiBiaWxseSBnb2F0cy4KVG8gYW55IGhhaXJzdHlsaXN0cyBvdXQgdGhlcmU6IHlvdSBhcmUgYW4gYXJ0aXN0IGFuZCBhIGNyYWZ0c21lbi4gRG8gbm90IHNlbGwgeW91cnNlbGYgc2hvcnQuIFlvdSBhcmUgd29ydGggdGhlIHRpbWUgeW91IGNoYXJnZSBhbmQgdGhlIG1vcmUgZXhwZXJpZW5jZSB5b3UgaGF2ZSBhbmQgYW5kIHRoZSBtb3JlIGVkdWNhdGlvbiB5b3UgaW52ZXN0LCB5b3Ugc2hvdWxkIGFuZCBoYXZlIGV2ZXJ5IHJpZ2h0IHRvIHJhaXNlIHlvdXIgcHJpY2VzLiAKQSxBLEEsNSw1KS4gVGllcyBvbiBhIGZ1bGwgaG91c2UgYXJlIGJyb2tlbiBieSB0aGUgdGhyZWUgb2YgYSBraW5kLCBhcyB5b3UgY2Fubm90IGhhdmUgdHdvIGVxdWFsIHNldHMgb2YgdGhyZWUgb2YgYSBraW5kIGluIGFueSBzaW5nbGUgZGVjay4gCkl0IG5vdCBleGFjdGx5IGEgc2NhbSBiZWNhdXNlIHNvbWUgcGVvcGxlIGRvIHdlbGwgaW4gc2FsZXMsIGJ1dCBJIHBlcnNvbmFsbHkgZG8gbm90IGxpa2UgdGhlc2Uga2luZHMgb2YgYnVzaW5lc3NlcyBiZWNhdXNlIHRoZXkgd2lsbCBzYXkgYW55dGhpbmcgdG8gYXZvaWQgYWRtaXR0aW5nIHRoYXQgdGhleSBhcmUgbm90aGluZyBidXQgc2FsZXNwZW9wbGUuIEkgd291bGQgcmVjb21tZW5kIHlvdSBkbyBub3QgZ28uIApUbyBzYWZlbHkgZWFybiBhYm92ZSAkODBrIGFzIGEgc29mdHdhcmUgZW5naW5lZXIgd2l0aG91dCB3b3JyeWluZyBhYm91dCBhIHNlY3VyaXR5IGNsZWFyYW5jZSB5b3Ugd291bGQgcHJvYmFibHkgaGF2ZSB0byBtb3ZlIHNvbWV3aGVyZSBlbHNlIGluIHRoZSBjb3VudHJ5Li4gCldlIGFkbWl0IGl0J3Mgbm90IHRoZSBwZXJmZWN0IGdhZGdldCAgIHRoZSBsYWNrIG9mIDNHIHdpbGwgdHVybiBkb3duIG1hbnkgcG90ZW50aWFsIGJ1eWVycywgd2hpbGUgdGhlIHVub3JpZ2luYWwgZGVzaWduIHdlJ3ZlIHNlZW4gb3ZlciBhbmQgb3ZlciBhZ2FpbiB3b24ndCBtYWtlIGl0IHN0YW5kIG91dCBpbiB0aGUgY3Jvd2Qgb2YgU2Ftc3VuZyBzbGlkZXJzIG9uIHRoZSBzaG9wIHdpbmRvd3MuIAoiVGhpcyBkZWFsIGlzIHVubGlrZWx5IHRvIGNoYW5nZSB0aGUgY29tcGV0aXRpdmUgbGFuZHNjYXBlIGluIHRoZSBVSyBpbiB0aGUgbmVhciB0ZXJtLCBidXQgZWxzZXdoZXJlLCBpbiBsZXNzIG1hdHVyZSBpbnRlcm5hdGlvbmFsIG1hcmtldHMsIHRoZSBTdGFycyBHcm91cCdzIG92ZXJhbGwgcHJvZHVjdCBvZmZlcmluZyB3aWxsIG5vdyBiZSBldmVuIG1vcmUgZm9ybWlkYWJsZS4gVGhlIGJhdHRsZSBiZXR3ZWVuIHRoZSBmb3VyIGhlYXZ5d2VpZ2h0cyBpcyBvbmx5IGp1c3QgYmVnaW5uaW5nLCIgc2FpZCBEYXZ5IGFuYWx5c3RzIERhdmlkIEplbm5pbmdzIGFuZCBKb3NlcGggUXVpbm4uLiAKV2UgdGFsa2VkIHByZXR0eSB3ZWxsIGFib3V0IGV2ZXJ5dGhpbmcgd2UgY291bGQgcG9zc2libHkgdGFsayBhYm91dC4gCktlZXBzIHRoZSBzb2FwIGZyb20gZ2V0dGluZyBldmVyeXdoZXJlLiAKSSBkaWRuIHNwZWFrIEVuZ2xpc2ggd2hlbiBJIHRyYW5zZmVycmVkIGluIDR0aCBncmFkZSwgYW5kIHRoYXQgd2FzIHRoZSBiYXNpcyBvZiBoZXIgYnVsbHlpbmcuSSB3YXMgYSBiaWcga2lkIChub3QgZmF0LCBidXQgNSIxMCBhdCBncmFkZSA2KSBhbmQgc28gc2hlIHRob3VnaHQgaXQgd2FzIGFsd2F5cyBmdW5ueSB0byBraWNrIG1lIGluIHRoZSBiYWxscy4gClNvIHdlbGwgd2FzIHRoZSB3aG9sZSBwcm9jZXNzIHNpbXVsYXRlZCwgdGhhdCBJIHNob3VsZCBoYXZlIGJlZW4gcXVpdGUgZGVjZWl2ZWQsIGhhZCBJIG5vdCBzZWVuIHRoYXQgdGhlIGZseSB3YXMgc3RpbGwgdXBvbiB0aGUgd2luZG93LiAKU28gaXQgcmVhbGx5IHRoZSBtaWQgdGllciBwcm9kdWNlcnMgYnV5aW5nIHNtYWxsIHRpZXIgcHJvZHVjZXJzLiAKTGluayB0byBvdXIgbWFnaWMgc2VjdGlvbi4gKEkgYmFzZWQgdGhhdCBvZmYgb2Ygc29tZXRoaW5nIEkgZm91bmQgb25saW5lIGFib3V0IHN1bW1vbmluZyBpbiBSb1QsIGJ1dCBJIGNhbm5vdCBmaW5kIGl0LikuIApTb21lIGFyZSB0b3V0aW5nIHRoZSBmYWN0IHRoYXQgYSBicmF2ZSBsb2NhbCBtYW4gdXNlZCBoaXMgb3duIGFzc2F1bHQgcmlmbGUgdHlwZSBmaXJlYXJtIHRvIHByZXZlbnQgdGhlIGd1bm1hbiBmcm9tIHNsYXVnaHRlcmluZyBldmVuIG1vcmUgaW5ub2NlbnQgd29yc2hpcHBlcnMsIHdoaWxlIG90aGVycyBhcmUgZGVjcnlpbmcgdGhlIGZhY3QgdGhhdCB0aGUga2lsbGVyIHdhcyBhbGxvd2VkIHRvIHBvc3Nlc3Mgc3VjaCBhIHdlYXBvbiBnaXZlbiBoaXMgbWVudGFsIGNvbmRpdGlvbiBhbmQgcHJldmlvdXMgY29udmljdGlvbnMgZm9yIHZpb2xlbnQgb2ZmZW5jZXMuIApCdXQgdG9kYXksIHRoZXJlIGFyZSBxdWVzdGlvbnMgb3VyIGdlbmRlcmxlc3Mgc29jaWV0eSBoYXMgbm8gYW5zd2VycyBmb3IuIApMaWtlIGltYWdpbmluZyBob3cgYXdmdWwgdGhhdCB3b3VsZCBiZSB3aGlsZSBhbHNvIGRydW5rLiAKSSBXYWx0ZXIgU3dpc2hlci4gCllvdSBzdGlsbCBkb24gZ2V0IGl0PyBJIGRvbiBjYXJlIGFib3V0IGNyaXRpY2lzbS4gCk9uZSBzaXRlIGV4cGxhaW5lZCB0aGF0IG1vc3QgY2FzaW5vcyBhcmUgb3JnYW5pc2VkIGFyb3VuZCBsb2NhbCBjdXN0b21zLCBzbyB0aGUgYXRtb3NwaGVyZSBvbmx5IHJlZmxlY3RzIHRoZSBvdmVyYWxsIHRyYWRpdGlvbiBvZiB0aGUgbmVpZ2hib3VyaG9vZC4gCkV2ZW4gd2hlbiBzaGUgZGlkIG5vdCB0YWxrIHNoZSBzZWVtZWQgdG8gaW5zcGlyZSBvdGhlcnMgdG8gYnJpbGxpYW5jeS4gQ2FwdGFpbiBKaW0gdG9sZCBoaXMgc3RvcmllcyBiZXR0ZXIsIEdpbGJlcnQgd2FzIHF1aWNrZXIgaW4gYXJndW1lbnQgYW5kIHJlcGFydGVlLCBBbm5lIGZlbHQgbGl0dGxlIGd1c2hlcyBhbmQgdHJpY2tsZXMgb2YgZmFuY3kgYW5kIGltYWdpbmF0aW9uIGJ1YmJsaW5nIHRvIGhlciBsaXBzIHVuZGVyIHRoZSBpbmZsdWVuY2Ugb2YgTGVzbGllJ3MgcGVyc29uYWxpdHkuLiAKQXMgd2UndmUgbm90ZWQgc2V2ZXJhbCB0aW1lcywgdGhleSBhcmUgaW4gcmVhY3QgbW9kZSwgYW5kIGdpdmVuIHRoZSBmaWNrbGVuZXNzIG9mIEhvdXNlIFJlcHVibGljYW5zLCB0aGVyZSBpcyBsaXR0bGUgdXJnZW5jeSBmb3IgRGVtb2NyYXRzIHRvIGNvbWUgb3V0IHdpdGggYSBwb3NpdGlvbiB1bnRpbCB0aGUgYmFsbGdhbWUgaXMgb2ZmaWNpYWxseSBpbiB0aGVpciBjaGFtYmVyLi4gCklmIHlvdSBwbGF5IHRlbm5pcyBhcyB3ZWxsLCB0aGVuIGEgcmVhc29uYWJsZSBwcmljZSB0byBidXkgc29tZSByYWNrZXRzIHdvdWxkIGJlIGFyb3VuZCA4MDAgMTAwMCBSTUIsIDMwIDQwIFJNQiBmb3IgYSAzIGJhbGwgY2FuIG9mIEdyYW5kIHNsYW0gc2VyaWVzLCBhbmQgMzAgNTAgUk1CIGZvciBhIG91dHNpZGUgdGVubmlzIGNvdXJ0IHBlciBob3VyLCBkb3VibGVkIGlmIGl0IGlzIG5pZ2h0IHRpbWUsIGFuZCA4MCAxMDAgZm9yIGEgaW5zaWRlIHRlbm5pcyBjb3VydCBwZXIgaG91ciwgYWxzbyBkb3VibGVkIGlmIGl0IGlzIG5pZ2h0IHRpbWUuIEJUVyBGdWRhbiBoYXMgc29tZSBjb3VydHMgdGhhdCBhcmUgcmVhbGx5IG5pY2UsIHNvIEkgZ3Vlc3MgeW91IGRvbid0IGV2ZW4gd2FudCB0byBwbGF5IG91dHNpZGUgdGhlIHNjaG9vbC4gCkhlIGluZmx1ZW5jZWQgbWUgYW5kIG15IHdyaXRpbmcgbW9yZSB0aGFuIGFueW9uZSBvdGhlciB0aGFuIEpvaG4gQ2xlZXNlIHdobyBJIGFsc28gYWRvcmUuSSBhbSBhIGZlbWFsZSwgMzUsIHNpbmdsZSAobm90IGJ5IG15IGNob2ljZSwganVzdCBjaXJjdW1zdGFuY2UpLiAKU2kgZmEgcXVlc3RvIG1vdmltZW50byBwZXIgdW4gcG8nIGRpIHRlbXBvIGUgcXVpbmRpIHByZW5kZXJlIGlsIHBlbmUgZGFsbGEgcHVudGEgdmVyc28gaWwgYmFzc28gZSBmYXIgc2NvcnJlcmUgbGEgbWFubyBmaW5vIGFsbGEgYmFzZSBlIHJpbGFzY2lhcmUuIApBcyB0aGUgZ29ibGlucyBzYXksIHRpbWUgaXMgbW9uZXksIGFuZCBJIGFwcGx5IHRoYXQgaW4gZ2FtZSBhbmQgaW4gcmVhbCBsaWZlLCB0b28uIElmIEkgd2FzIHdvcmtpbmcgbXkgYXNzIG9mZiBmb3IgbWluaW1hbCBwcm9maXQgaW4gdGhlIGdhbWUsIEkgZ2l2ZSB1cCBiZWNhdXNlIG15IHRpbWUgaXMgd29ydGggbW9yZSB0aGFuIEkgZ2V0dGluZy4gSSB0b3RhbGx5IGdldCBub3Qgd2FudGluZyB0byBsZWF2ZSBjb29sIHBlb3BsZSB5b3UgbWV0LCBidXQgdGhhdCBzb21ldGhpbmcgYmF0dGxlbmV0IGlzIGdvb2QgZm9yLCBhbmQgd2l0aCB0aGUgZ2FtZSBiZWluZyBzbyBjcm9zcyBzZXJ2ZXIgZnJpZW5kbHkgdGhlc2UgZGF5cywgdGhlcmUgbm90aGluZyBzdG9wcGluZyB5b3UgZnJvbSBoYW5naW5nIG91dCB3aXRoIHBlb3BsZSBmcm9tIG90aGVyIHJlYWxtcy4uIApXaGVuIHlvdSBpbnN0YWxsIExvZ2ljLCBpbiBhZGRpdGlvbiB0byB0eXBpbmcgaW4geW91ciBzZXJpYWwgbnVtYmVyICh1c2Vycy4gMjggTWFyIDIwMDkgLiAKVG8gc3VtbWFyaXNlIHRoZSByYW5kb21pc2VkIGludGVydmVudGlvbiBzdHVkaWVzIHRoYXQgaGF2ZSBiZWVuIGNhcnJpZWQgb3V0IG9uIHRoZSB1c2Ugb2YgYXJvbWF0aWMgcGxhbnQgZXh0cmFjdHMgKGVzc2VudGlhbCBvaWxzKSBmb3IgYSB2YXJpZXR5IG9mIGNvbmRpdGlvbnMuIFRyaWFscyB3ZXJlIGV4Y2x1ZGVkIGlmIHRoZXkgaGFkIG5vIGNvbnRyb2wgZ3JvdXAgb3Igd2VyZSBub3QgcmFuZG9taXNlZC4gCk9rdG9iZXIgMjAxMCBpbSBSZWdlbmN5IEhvdGVsIGluIER1YmxpbiBhdXNnZXRyYWdlbi4gRGVyIGVyd2FydGV0ZSBQcmVpc3Bvb2wgZHJmdGUgYmVpIGV0d2EgMjAwLjAwMCBhbmdlc2llZGVsdCBzZWluICAgZWluc2NobGllbGljaCBkZXIgMjAuMDAwLCBkaWUgenUgZGVyIFZlcmFuc3RhbHR1bmcgYWxzIFNwb25zb3IgaGluenVzY2hpZXQuLiAKTW9zdCBwb2tlciByb29tcyBoYXZlIGEgcGxhY2UgdG8gc2lnbiBhIHdhaXRpbmcgbGlzdCBmb3IgYSBwYXJ0aWN1bGFyIGdhbWUuIFNvbWUgaGF2ZSBhIHdoaXRlIGJvYXJkIHdpdGggdGhlIGdhbWVzIGFuZCBsaW1pdHMgYXZhaWxhYmxlIGFsb25nIHdpdGggdGhlIHdhaXRpbmcgcGxheWVycycgaW5pdGlhbHMuIE90aGVycyB3aWxsIGp1c3QgaGF2ZSBzb21lb25lIHdobyB3cml0ZXMgaW5pdGlhbHMgb3IgbmFtZXMgb24gYSBzaGVldCBvZiBwYXBlci4gVGhlIGNhcmQgcm9vbSBjYWxscyB0aGUgbmV4dCBwZXJzb24gb24gdGhlIGxpc3Qgd2hlbiBhIHNlYXQgYmVjb21lcyBhdmFpbGFibGUuIFNpbXBseSBhc2sgd2hvZXZlciBpcyBpbiBjaGFyZ2Ugb2YgdGhlIGJvYXJkIG9yIGEgc3RhZmYgbWVtYmVyIHRvIHBsYWNlIHlvdSBvbiB0aGUgbGlzdCBmb3IgYWxsIG9mIHRoZSBnYW1lcyB5b3UgYXJlIHdpbGxpbmcgdG8gcGxheS4gSWYgeW91IGFyZSBpbiBhIHNtYWxsIHBva2VyIHJvb20gd2l0aCBubyB2aXNpYmxlIHNpZ24gdXAgYXJlYSwgYXNrIGEgZGVhbGVyIGhvdyB0byBlbnRlciBhIGdhbWUuCkZvciBtb3JlIGluZm9ybWF0aW9uIGFib3V0IHdoeSBNb3RoZXIgVGhlcmVzYSBpcyBub3QgdGhlIG1vbnN0ZXIgUmVkZGl0IGxpa2VzIHRvIHRoaW5rIHNoZSBpcywgc2VlIGhlcmUuIE9yIEhlcmUuIE9yIEhlcmUuCk1vY2hpTW9jaGlNb2NoaSB1ClJlbWVtYmVyIHRoZSBsYXRlc3QgSmFtZXMgQm9uZCBmbGljaywgd2hpY2ggSSBhY3R1YWxseSBsYWJlbGVkIGEgcG9rZXIgbW92aWUgaW4gYW4gYXJ0aWNsZSBqdXN0IHJlY2VudGx5PyBSZW1lbWJlciB0aGF0IHBva2VyIGdhbWUgYmV0d2VlbiB0aGF0IEdyZWVrIGd1eSBhbmQgQWdlbnQgMDA3PyBUaGUgb3RoZXIgZ3V5IGJldHMgaGlzIGNhciwgc3VyZSB0aGF0IGhlIHdvdWxkIHdpbi4gSSB0aGluayBpdCB3YXMgYW4gQWxmYSBSb21lbywgSSBhbSBub3Qgc3VyZSwgbXkgbWVtb3J5IGlzIGEgYml0IGhhenkgKGFsbCBJIGNhbiByZW1lbWJlciBpcyBEYW5pZWwgQ3JhaWcgYXMgSmFtZXMgQm9uZCkuIEFueWhvdywgQm9uZCB3aW5zIHRoZSBoYW5kIGFuZCB0aGUgY2FyLCBvZiBjb3Vyc2UuIEFuZHJlaSBLYXJwb3YsIGZyb20gTXVybWFuc2ssIGhhZCBydW4gb3V0IG9mIG1vbmV5IGluIGEgZ2FtZSBvZiBwb2tlciBhbmQgb2ZmZXJlZCBoaXMgb3Bwb25lbnQgaGlzIHdpZmUgaW5zdGVhZCBvZiBjYXNoIHRvIHN0YXkgaW4gdGhlIGdhbWUuCkFsbCB0aGlzIGFkZHMgdXAgdG8gJDgsNzI0IHBlciBtb250aC4gT24gdG9wIG9mIHRoYXQsIHRoZXkgd291bGQgcmVjZWl2ZSByZW50YWwgaW5jb21lIG9mICQxLDYwMCBwZXIgbW9udGggdG8gbWFrZSB0b3RhbCBpbmNvbWUgJDEwLDMyNCBwZXIgbW9udGguIApIZXIgbmFtZSBpcyBBbmplbGljYS4gCk9ubHkgYm95cyBsZWZ0IGFyZSBEZWt1IGFuZCBBbGwgTWlnaHQsIGFuZCB0aGUgb3RoZXIgMyBhbGwgZ290IHVwc2V0IGluIGEgc2luZ2xlIGRheS4gCjEuIEJlc3QgY2FzaW5vIGZvciBzcG9ydHMgYmV0dGluZzogQ2Flc2FycyBQYWxhY2UKNDEyIGluIEtpdGNoZW5lci4gQWZ0ZXIgdGhlIHdhciwgaGUgaW1taWdyYXRlZCB0byBDYW5hZGEsIG1hcnJpZWQsIGFuZCBsaXZlZCBpbiBLaXRjaGVuZXIgb24gTWVybmVyIEF2ZW51ZSBmb3IgbW9zdCBvZiBoaXMgbGlmZS4gCkkgcmVtZW1iZXIgSSBmZWx0IHRoZSBzYW1lIHdheSAgYWxtb3N0IGV4YWN0IHNpdHVhdGlvbiBhcyB5b3UuIEkgd2FzIGFsbW9zdCBvbiB0aGUgdmVyZ2Ugb2YgcHVsbGluZyBteSBhcHBsaWNhdGlvbiBiZWNhdXNlIEkgd2FzIHJlYWxseSB0aXJlZCBvZiBiZWluZyBpbiBzdWNoIGxpbWJvLiAKVGhhdCBlbmRlYXZvciB0dXJucyBvdXQgdG8gYmUgYSBkZWFkIGVuZCwgYW5kIHdpdGggdGltZSBydW5uaW5nIG91dCwgaGUgdGFrZXMgbWF0dGVycyBpbnRvIGhpcyBvd24gaGFuZHMgYW5kIGtpZG5hcHMgdGhlIG9ubHkgc3VzcGVjdCBpbiB0aGUgY2FzZS4gCkkgdGFsa2VkIHRvIHNvIG1hbnkgU291dGggQWZyaWNhbnMgaW4gbGluZSB0aGF0IEkgYWxtb3N0IGZvcmdvdCB3aHkgSSB3YXMgbGluaW5nIHVwLiBJbiB0aGUgbGF0ZSBhZnRlcm5vb24sIEkgZmluYWxseSB3YWxrZWQgaW50byB0aGUgY291cnR5YXJkIG9mIHRoZSBVbmlvbiBCdWlsZGluZ3MgYW5kIHRoZW4gaGVhZGVkIHVwIGEgZmxpZ2h0IG9mIHN0YWlycy4gCkkgZG9uIGhhdmUgYW55dGhpbmcgb2ZmaGFuZCBidXQgSSBjYW4gZmluZCBpdCBpbiBhIGZldyBtaW51dGVzIGlmIHlvdSB3YW50Lkh1bWFuIGJlaGF2aW9yIGlzIG11Y2ggbW9yZSBjb21wbGV4IHRoZW4gdHJhZGl0aW9uYWwgYW5pbWFsIGJlaGF2aW9yLlRoZSBhbHBoYSAvIGJldGEgdGhpbmcgaXNuIGV2ZW4gYWNjdXJhdGUgYW5pbWFsIGJlaGF2aW9yLiBUaGF0IG5vdCBob3cgd29sdmVzIHdvcmsuIApBcyB3aXRoIGFsbCBzdGF0aXN0aWNzIG9uZSBoYXMgdG8gYmUgdmVyeSBza2VwdGljYWwgYWJvdXQgdGhlIG51bWJlcnMgYW5kIHRoZWlyIHNvdXJjZXMuIApQbGVhc2UgaGVscCB1cyBlbmZvcmNlIHRoaXMgcnVsZSBieSByZXBvcnRpbmcgb2ZmZW5kaW5nIHN1Ym1pc3Npb25zLiBQbGVhc2UgaW5jbHVkZSBhIGxpbmsgdG8gdGhlIG9yaWdpbmFsIHJlZGRpdCBzdWJtaXNzaW9uIGluIHlvdXIgcmVwb3J0IG9yIG1vZG1haWwgaWYgeW91IGhhdmUgaXQuCkkgbGlrZSB0byBzaXQgYXQgbXkgbGl0dGxlIHN5bnRoIHN0YXRpb24gdW50aWwgdGhlIHN1biBjb21lcyB1cCwgYW5kIHRoYXQgbWFrZXMgbWUgaGFwcHksIHNvIEkgZ3Vlc3MgbXkgZ2VhciBpcyBqdXN0IGZpbmUuLiAKRmFydGhlciBiYWNrIGluIHRoZSByYWNlLCA0IHRpbWUgd2lubmVyIExhbmNlIE1hY2tleSBpcyBkb2luZyBwcmV0dHkgZ29vZCBmb3Igc29tZW9uZSBub3QgYWN0dWFsbHkgdHJ5aW5nIHRvIHdpbiEgSGUgY3VycmVudGx5IGluIElkaXRhcm9kLCBhbmQgaGFkIHRoZSBmYXN0ZXN0IHRpbWUgdGhlcmUgZnJvbSBPcGhpciAodW5kZXIgMTIgaG91cnMpLiAKR2xlbiBzYWlkIEdlb3JnZSB3YXMgYWx3YXlzIGEgY29udGVuZGVyIGZvciB0aGUgZXZlbnQsIHdoaWNoIGhhZCBtb3JlIHRoYW4gMzUwIGNvbXBldGl0b3JzLiAKSXQgc2VlbXMgcnVzaGVkLgoxOCAoMjAxOSBCQ0NBIDIyKSwgSnVzdGljZSBTYXZhZ2UgKHdyaXRpbmcgZm9yIHRoZSBDb3VydCBvZiBBcHBlYWwpIGVtYmFya2VkIHVwb24gYSBkaXNjdXNzaW9uIG9mIHRoZSBsYXcgb2Ygam9pbnQgdGVuYW5jeSBhbmQgZ2lmdGluZy4gClJlcC4gCkV4Y2VwdCBmb3IgaXRzIHRpdGxlLCB0aGUgbW92aWUgUXVhbnR1bSBvZiBTb2xhY2UgZG9lcyBub3QgaGF2ZSBhbnl0aGluZyBpbiBjb21tb24gd2l0aCBGbGVtaW5nIHNob3J0IHN0b3J5LCBidXQgaXQgY2FuIGJlIGludGVycHJldGVkIGluIHRoZSB3YXkgdGhhdCBCb25kIHRha2VzIHJldmVuZ2UgZm9yIFZlc3BlciBiZXRyYXlhbCBieSBodW50aW5nIGRvd24gYW55b25lIGhlIGNhbiBwb3NzaWJseSByZWFjaCBvdXQgdG8gb2YgdGhvc2UgY29ubmVjdGVkIHRvIHRoZSBDYXNpbm8gUm95YWxlIHBsb3QuIApSZXNlYXJjaCBwZXJ0YWluaW5nIHRvIG1lY2hhbmlzbXMgdW5kZXJseWluZyB0aGUgZWZmZWN0cyBvZiBleGVyY2lzZSBvbiBicmFpbiBmdW5jdGlvbiBoYXMgZm9jdXNlZCBvbiBjaGFuZ2VzIGluIG5ldXJvdHJhbnNtaXR0ZXJzLCBuZXVyb3Ryb3BoaW5zIGFuZCB2YXNjdWxhdHVyZSBbNV0uIFNwZWNpZmljIHRvIHRoZSBoaXBwb2NhbXB1cywgYSBicmFpbiBhcmVhIGltcG9ydGFudCBmb3IgbGVhcm5pbmcgYW5kIG1lbW9yeSwgaXMgdGhlIHJvYnVzdCBpbmNyZWFzZSBpbiBuZXcgbmV1cm9ucyB3aXRoIGV4ZXJjaXNlIFszMF0uIApUaGUgZmlyc3Qgc3RlcCB0byBoYW5kbGluZyB0aGUgcmVjZWlwdHMgYXNzb2NpYXRlZCB3aXRoIHRoZSBzYWxlcyBvZiB5b3VyIENsYXkgUG9rZXIgQ2hpcHMgU2V0cyBpcyB0byBjcmVhdGUgYW4gYXJlYSB3aGVyZSB5b3UgY2FuIG9yZ2FuaXplIGFuZCBzdG9yZSB0aGVtLiBJdCBpcyBiZXN0IHRvIGF2b2lkIGNyZWF0aW5nIGFuIGFyZWEgd2hlcmUgdGhlIHJlY2VpcHRzIGNhbiBqdXN0IGJlIHRocm93biBpbiBhbmQgY29udGVuZGVkIHdpdGggYXQgYSBsYXRlciB0aW1lLiBJIHdvdWxkIHN1Z2dlc3QgcHVyY2hhc2luZyBhIGZpbGluZyBjYWJpbmV0IGFzIGl0IGlzIGEgc3BhY2UgdGhhdCBjYW4gYmUgb3JnYW5pemVkLCBzb3J0ZWQsIGFuZCBkb2VzIG5vdCB0YWtlIHVwIGEgbG90IG9mIHNwYWNlLiAKSG93IGFyZSB0aGVyZSBubyBnb29kIHBva2VyIGdhbWVzIG9uIHRoZSBYYm94IE9uZSB5ZXQKSWYgeW91IGhhdmUgYSBsb3Qgb2Ygc21hbGxlciBkZW5vbWluYXRpb24gY2hpcHMgYW5kIHdpc2ggdG8gY2hhbmdlIGZvciBsYXJnZXIgZGVub21pbmF0aW9uIGNoaXBzIHRvIG1ha2UgaXQgZWFzaWVyIHRvIGNhcnJ5IHRoZW0gdG8gdGhlIGNhc2hpZXIncyBib290aCwgYXNrIHRoZSBkZWFsZXIgdG8gImNvbG9yIHVwLiIgSGUgb3Igc2hlIHRoZW4gd2lsbCBnaXZlIHlvdSBvbmUgZ3JlZW4gJDI1IGNoaXAgZm9yIGZpdmUgcmVkICQ1IGNoaXBzLCBvciBhIGJsYWNrICQxMDAgY2hpcCBmb3IgdHdlbnR5ICQ1IGNoaXBzLCBmb3IgZXhhbXBsZS4uIApJIHRoaW5rIG1vc3QgcGFpcnMgYmlnZ2VyIGxpa2UgSkosIFFRIChpZiBoZSBkaWRuIDMgYmV0IHByZSkgYXJlIHJhaXNpbmcgaGVyZS4gQTQgaXMgY29tZm9ydGFibGUgY2FsbGluZy4gCkJyZWFzdCBpbXBsYW50cyBhcmUgdGhlIG1vc3QgcG9wdWxhciBjb3NtZXRpYyBzdXJnaWNhbCBwcm9jZWR1cmUgaW4gdGhlIFVTLiAKR2FtZXMgbGlrZSBNYWdpYzogVGhlIEdhdGhlcmluZywgUG9rZW1vbiBjYXJkcywgYW5kIFl1IEdpIE9oIGhhdmUgdGhvdXNhbmRzIG9mIHBvc3NpYmxlIGNhcmRzIGFuZCB0aGUgcGxheWVyIGJ1aWxkcyBhIHBsYXlhYmxlIGRlY2sgZnJvbSB3aGF0IHRoZXkgaGF2ZS4gClllcywgSSBuZXZlciB1c2VkIHRvLiBFdmVuIHRoZSBwbGF5ZXJzIHdobyB1c2VkIGl0IGRpZCBub3QgZ2V0IGJhbm5lZCBmcm9tIGRlc3RpbnkuIEkgZmVlbCBsaWtlIEJpb3dhcmUgaXMgc3RlcHBpbmcgaW50byBldmVyeSBzaGl0aG9sZSB0aGVyZSBpcy4gVW5iZWxpZXZhYmxlLCB0aGlzIGNvbXBhbnkgYWZ0ZXIgNiB5ZWFycyBvZiBkZXZlbG9wbWVudCByZWxlYXNlZCB1bmZpbmlzaGVkIHByb2R1Y3Qgd2l0aCBzbyBtYW55IGJ1Z3MgdGhleSBoYXZlIHRvIHB1dCBvdXQgZml4ZXMgZXZlcnkgY291cGxlIG9mIGRheXMgYW5kIHRoZW4gYmFubiBwbGF5ZXJzIGZvciB1c2luZyBtZWNoYW5pY3MgZGlkIHRoZXkgaGF2ZSBwcm9ncmFtbWVkIGJhZGx5LiBJIGRvIHN0aWxsIHBsYXkgdGhlIGdhbWUgaW4gdGhlIGVuZCBnYW1lIGdyaW5kIGJ1dCBpZiB0aGlzIGNvbnRpbnVlcyBhbG9uZyB3aXRoIHRoZSBjb21wbGV0ZSBsYWNrIG9mIGVuZGdhbWUgY29udGVudCAoSSBoYXZlIHBsYXllZCB0aGUgc3Ryb25naG9sZHMgYWJvdXQgMjAwIHRpbWVzIGluIHRvdGFsLikgSSBxdWl0IHRoaXMgY3VzdG9tZXIgZnJhdWQuCihWaXNpdGVkIDEgdGltZXMsIDEgdmlzaXRzIHRvZGF5KQpZb3UgZHJhd24gYSBsaW5lIGF0IHNsYXZlcnkgYW5kIGdlbm9jaWRlLCBidXQgdGhlIHByb2JsZW0gcmVhbGx5IGlzIHRoYXQgaGFyZGx5IGFueW9uZSBjYW4gYWdyZWUgd2hlcmUgdGhhdCBsaW5lIHNob3VsZCBiZSBkcmF3biwgb3IgaWYgaXQgc2hvdWxkIGJlIGRyYXduIGF0IGFsbC4gTWFuaXB1bGF0aW9uIG9mIG90aGVycywgYmUgaXQgcGVvcGxlLCBvciBjb3VudHJpZXMsIGNhbiBiZSB2ZXJ5IG5lZ2F0aXZlLCBvciB2ZXJ5IHBvc2l0aXZlIGRlcGVuZGluZyB3aG8geW91IGFzay4gV2l0aG91dCBtYW5pcHVsYXRpb24sIHlvdSBqdXN0IGxlZnQgd2l0aCBjaHJvbmljIGluZGlmZmVyZW5jZS4gV2UgYWxsIHRhc2tlZCB3aXRoIGRlY2lkaW5nIGhvdyB0byBhY3QsIG9yIHdoZXRoZXIgdG8gYWN0IGF0IGFsbC4gU29tZXRpbWVzIHRoZXJlIHJlYWxseSBpcyBubyBnb29kIG91dGNvbWUsIGJ1dCB3ZSBmb3JjZWQgdG8gYWN0IGFueXdheSBiZWNhdXNlIG5vdCBkb2luZyBzb21ldGhpbmcgd291bGQgYmUgbW9yYWxseSB3b3JzZSB0aGFuIGRvaW5nIHNvbWV0aGluZyByZWFsbHkgYmFkbHkuIEh1bWFucyBhcmUgd2VpcmQuCk56aGRlaCBjcmVhdGVkIHRoZSBpbmZhbW91cyBBcm1lbmlhbiBMZWdpb24sIGFwcHJveGltYXRlbHkgMzAsMDAwIG1lbiwgYW5kIG1hZGUgdGhlbSBhdmFpbGFibGUgdG8gdGhlIE5hemkgY29tbWFuZCBkdXJpbmcgV29ybGQgV2FyIElJLiAKQW1hem9uIGFsc28gb3ducyBJTURCLCB3aGljaCBzaG93cyB2aWRlbyBhZHMsIGFuZCBhbHNvIGhhcyBwdWJsaXNoZXIgc2VydmljZXMgdGhhdCBkZWFsIHdpdGggd2Vic2l0ZXMganVzdCBsaWtlIEdvb2dsZSdzIHB1Ymxpc2hlciBhZCBuZXR3b3JrLCB3aGVyZSBpdCBjYW4gdGFyZ2V0IGFkcyBvdXRzaWRlIHRoZSB3ZWJzaXRlcyBpdCBkaXJlY3RseSBvd25zLi4gCk5vLiBWaXJ0dWFsIG1lbW9yeSBpcyBhIGZpbGUgc3RvcmVkIG9uIHRoZSBkaXNrIGFuZCBtYW5hZ2VkIGJ5dGhlIG9wZXJhdGluZyBzeXN0ZW0gc29mdHdhcmUuIEFzIG5lZWRlZCB0aGUgb3BlcmF0aW5nIHN5c3RlbWNvcGllcyBibG9ja3Mgb2YgaW50ZXJuYWwgbWVtb3J5IG91dCB0byB0aGlzIGZpbGUgdG8gZnJlZSBpbnRlcm5hbG1lbW9yeSBhbmQgY29waWVzIGJsb2NrcyBmcm9tIHRoaXMgZmlsZSB0byBpbnRlcm5hbCBtZW1vcnkgd2hlbiBhcHJvZ3JhbSBuZWVkcyBpdCBhZ2Fpbi4gCkNlcyBkZXJuaWVycyBhcnJpdmFudCBsZSBzb2lyIG5lIHNvbnQgcGFzIGFzc2V6IG5vbWJyZXV4IHBvdXIgbWF0cmlzZXIgbGEgcnZvbHRlIGRlcyBvdXZyaWVycyBmcmFuYWlzLiAKIkkgZmVlbCBraW5reSB0b25pZ2h0LCIgaGUgc2FpZCBhdCB0aGUgc3RhcnQgb2YgdGhlIHNob3cuICJJdCdzIHRoZSBQb2Nvbm9zLiIKVGhpcyB5ZWFyIG15IGdvYWwgaXMgdG8gcmVhZCAyNiBib29rcy4gSSd2ZSByZWFkIDQgc28gZmFyLiBUaGUgNXRoIEkgYnJpZWZseSBzdGFydGVkIGxhc3QgbmlnaHQgaXMgVGhlIFN1YnRsZSBBcnQgb2YgTm90IEdpdmluZyBhIEZjay4gQm91Z2h0IHRoaXMgYm9vayBhZ2VzIGFnbyBidXQgbmV2ZXIgZ290IGFyb3VuZCB0byByZWFkaW5nIHBhc3QgdGhlIGZpcnN0IDIwIHBhZ2VzIG9yIHNvLgpQb2xpY2luZyBpdCBpcyB0aGUgaGFyZCBiaXQgYW5kIHRoZSBwYXJ0IHRoYXQgaXMgaGFyZGVzdC4gCjIwMCBUZXhhcyBIb2xkZW0gUG9rZXIgQ2hpcCBTZXQgd2l0aCBBbHVtaW51bSBDYXNlCkFuZCBpdCdzIHdlaXJkbHkgc2V4dWFsaXppbmcgY2hpbGRyZW4gaWYgeW91IHRoaW5rIGl0IGlzLiBOb3QgdG8gbWVudGlvbiB0aGF0IGV2ZXJ5IG90aGVyIGtpZCBpbiB0aGUgc2Nob29sIHdvdWxkIGtub3cgdGhhdCB5b3UgY2FuIGhvbmsgdGhlIGxpYnJhcmlhbidzIGJvb2IgYW5kIG5vdCBnZXQgaW4gdHJvdWJsZT8gV2hhdCB0aGUgaGVsbCB3ZXJlIHlvdSBzdXBwb3NlZCB0byBkbz8gQWxzbyBpdCdzIHJlYWxseSBiYWQgZm9yIGNoaWxkcmVuIHRvIGdldCBubyBjb25zZXF1ZW5jZXMgZm9yIHNoaXQgdGhleSBkby4gCkNyb2NrZm9yZCB3YXNuIGVpdGhlci4gClByb2JsZW0gZ2FtYmxlcnMgYWxzbyB0eXBpY2FsbHkgZGVueSBvciBtaW5pbWl6ZSB0aGUgcHJvYmxlbSBldmVuIHRvIHRoZW1zZWx2ZXMuIEhvd2V2ZXIsIHlvdSBtYXkgaGF2ZSBhIGdhbWJsaW5nIHByb2JsZW0gaWYgeW91OkZlZWwgdGhlIG5lZWQgdG8gYmUgc2VjcmV0aXZlIGFib3V0IHlvdXIgZ2FtYmxpbmcuIFlvdSBtaWdodCBnYW1ibGUgaW4gc2VjcmV0IG9yIGxpZSBhYm91dCBob3cgbXVjaCB5b3UgZ2FtYmxlLCBmZWVsaW5nIG90aGVycyB3b24gdW5kZXJzdGFuZCBvciB0aGF0IHlvdSB3aWxsIHN1cnByaXNlIHRoZW0gd2l0aCBhIGJpZyB3aW4uSGF2ZSB0cm91YmxlIGNvbnRyb2xsaW5nIHlvdXIgZ2FtYmxpbmcuIApCdXQgdGhhdCBub3QgZ29pbmcgdG8gaGFwcGVuLiAKVGhlIHByZWRlY2Vzc29ycyBsb3ZlZCB0byBwbGF5IG9uIGRpY2VzIGFuZCBjYXJkcy4gCkknbSBub3Qgc3VyZSBJJ2QgZG8gYSA0IGhhbmRzIGFnYWluLCBiZWNhdXNlIEknbSBub3Qgc3VyZSBob3cgbXVjaCBiZXR0ZXIgdGhhdCBpcyB0aGFuIGEgMiBoYW5kIG1hc3NhZ2Ugd291bGQgYmUgSSBmb3VuZCBteXNlbGYgd2l0aCB0b28gbWFueSBjaG9pY2VzISBMT0wKW01dICAzIHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvCktKSyBoYXMgbmV2ZXIgbGlrZWQgYmVpbmcgbGlua2VkIHdpdGggSkggaW4gYSByb21hbnRpYyB3YXkgYW5kIGhhcyBhbHdheXMgbWFkZSBpdCBjbGVhciB0aGV5IGFyZSBub3QgbGlrZSB0aGF0LiAKSW4gU3VtbWFyeToKU28gaXNzdWVzIGFib3V0IHdoZXJlIHRoZSBtYWNoaW5lcyBhcmUgbG9jYXRlZCwgaXNzdWVzIG9mIGFjY2VzcyB0aGF0IEkgdGFsa2VkIGFib3V0IGJlZm9yZSBzbyB0aGUgd2F5IHlvdSBkZWZpbmUgdGhlIHByb2JsZW0gaW5ldml0YWJseSBzaGFwZXMgdGhlIHNvbHV0aW9ucyB0aGF0IHlvdSBkZXZlbG9wIHRvIHRyeSBhbmQgYWRkcmVzcyB0aGUgcHJvYmxlbXMuLiAKSXQncyBhbHNvIGJlbGlldmVkIHRvIGJlIGEgbmF0dXJhbCBzb3VyY2Ugb2YgcGhlbnlsIGV0aHlsYW1pbmUgKFBFQSksIHRoZSBzYW1lIGZlZWwgZ29vZCBjaGVtaWNhbCB0aGF0IHRoZSBib2R5IG5hdHVyYWxseSBwcm9kdWNlcyBkdXJpbmcgdGhvc2UgZmlyc3QgbW9tZW50cyBvZiBmYWxsaW5nIGluIGxvdmUuIApTaSBsYSBkYXRlIGRlIG5haXNzYW5jZSBkdSBtZGVjaW5lIG1hbiBTSVRUSU5HIEJVTEwgZGVtZXVyZSBhcHByb3hpbWF0aXZlICgxODMzICg/KSAgIDE4MzQgPykgc2Vsb24gbCdyZSBjaHJ0aWVubmUsIGVuIHJldmFuY2hlIGxhIHB1YmxpY2F0aW9uIGQndW5lIGJhbmRlIGRlc3NpbmUgZnJhbmFpc2UgbGFib3JlICBwYXJ0aXIgZHUgaHJvcyBpbmRpZW4gZXN0IGJpZW4gcHJjaXNlIDogNyBvY3RvYnJlIDE5NDguIFVuIGpldWRpLCBqb3VyIHNhbnMgY29sZSBsYXF1ZSBtYWlzIHBhcyBzYW5zIHJlbGlnaW9uLgpPbmUgd291bGQgaG9wZSB0aGUgUGxhaW50aWZmIHdhc24gcHVzaGVkIG9udG8gdGhhdCBzbG9wZSBieSBhbnlvbmUgYWN0aW5nIGluIGJlaGFsZiBvZiB0aGVpciBvd24gYmVzdCBpbnRlcmVzdCBhbmQvb3IgcHVibGljYXRpb25zIHJhdGhlciB0aGFuIHRoZSBEZWZlbmRhbnQgYmVzdCBpbnRlcmVzdHMgZ2l2ZW4gdGhlIGNhc2Ugc2VlbXMgcmlwZSBmb3IgY291bnRlci4uIApBbmQgdGhhdCBtYWtpbmcgYSBsb3Qgb2YgZmFjdWx0eSBhbmQgc3R1ZGVudHMgYXQgU01VIGEgd2VlIGJpdCBhbnhpb3VzLiAKT3ZlcmFsbCwgdGhlIGV2aWRlbmNlIGlzIHN0cm9uZyBpbiBzdXBwb3J0IG9mIHN1cHBsZW1lbnRpbmcgd2l0aCB2aXRhbWluIEQgdG8gcHJldmVudCBmcmFjdHVyZXMgYW5kIGZhbGxzLi4gCkJlZm9yZSB5b3Uga25vdyBpdCB0aGVyZSBnb2luZyB0byBiZSB0YWtpbmcgYSBiaWdnZXIgcmFrZSB0aGVyZSB0by4gClNlbGwgaXQgZm9yIG1vcmUgdG8gYSBzbWFsbGVyIGF1ZGllbmNlICh0aGluayAxMCAyMCBwZW9wbGUgbWF4IGZvciA4MCBidWNrcyBhIG1vbnRoLCB0aGF0IGtpbmRhIHdoYXQgRGF5WiBoYWNrcyBnbyBmb3Igbm93YWRheXMgZGVzcGl0ZSB0aGUgZ2FtZSBiZWluZyBkZWFkLCBpbWFnaW5lIGhvdyBtdWNoIHlvdSBjb3VsZCByYWNrIGluIG9uIGEgcHJlbWl1bSBQVUJHIGhhY2spLCBhdWRpZW5jZSBvdXRzaWRlIENoaW5hIGJlY2F1c2UgeW91IGNhbiBiZSBzdXJlIHRoYXQgV2FuZzEyNDIyMzIxIGlzbiBnb2luZyB0byBqdXN0IGdpdmUgaXQgdG8gMTAgb3RoZXIgd2FuZ3MgdW50aWwgaXQgZ2V0cyBwdWJsaWMgYW5kIHBhdGNoZWQgYnkgQkUuIFlvdSB3aWxsIGRlZmluaXRlbHkgbGVhdmUgYSBtYXJrZXIgYXMgdG8gd2hvc2UgZ290IGxlYWtlZCBhbmQgc2hpdGxpc3QgaGltIGJ1dCB0aGF0IHN0aWxsIHRocm93cyB5b3UgYmFjayB0byB0aGUgZHJhd2luZyBib2FyZC4uIApKdXN0IHRha2UgYSBsb29rIGF0IHRoZSB0aHJlZSByZW1haW5pbmcgYnVsbGV0IGhvbGVzIGluIHRoZSB3YWxsLCBhbmQgaW4gZmFjdCwgb25lIGJ1bGxldCBzdGlsbCByZW1haW5zIGxvZGdlZCBpbiB0aGUgd2FsbCwgZm9yIGEgZ2xpbXBzZSBpbnRvIGl0cyBoaXN0b3J5LiBBY2NvcmRpbmcgdG8gb25lIG9mIHRoZSBiYXJ0ZW5kZXJzLCB0aGUgb3RoZXIgYnVsbGV0IGhvbGVzIHdlcmUgcmVtb3ZlZCB3aGVuIGEgZG9vciB3YXMgcHV0IGluLiBCdXQgdGhyZWUgc3RpbGwgcmVtYWluLiAKSnVzdCBkb24gc3dlYXQgaXQgdG9vIG11Y2guIFRoZXkgd2FudGVkIHlvdSB0byB0YWtlIGEgYmFkIGRlYWwgdGhhdCBqdXN0IGdpdmVzIG1vbmV5IHRvIHRoZSBzaG9ydCBzdGFja3MuIApTcHRlciBiZXNjaGxvc3Mgc2llLCBuaWNodCBtZWhyIHp1IGZsaWVnZW4gdW5kIHNpY2ggdmVnYW4genUgZXJuaHJlbiB1bmQgYmVyemV1Z3RlIGF1Y2ggaWhyZSBGYW1pbGllIGRhdm9uLiBJbSBBbHRlciB2b24gZWxmIEphaHJlbiBkdXJjaGxlYnRlIHNpZSBlaW5lIGRlcHJlc3NpdmUgUGhhc2UgdW5kIGhydGUgdm9yYmVyZ2VoZW5kIGF1ZiB6dSBzcHJlY2hlbiB1bmQgenUgZXNzZW4uIEFuc2NobGllZW5kIHd1cmRlIGJlaSBpaHIgZGFzIEFzcGVyZ2VyIFN5bmRyb20gZGlhZ25vc3RpemllcnQuIApJcyBtYXNzYWdlIHVzZWZ1bCBpbiB0aGUgbWFuYWdlbWVudCBvZiBkaWFiZXRlcwpUaGUgZWFzaWVzdCB3YXkgdG8gZXhwbGFpbiBhYm91dCB0YWxraW5nIHRvIHNvbWUgYWR1bHRzIGFuZCBub3Qgb3RoZXJzIGlzIGxldCBoZXIga25vdyB0aGF0IGl0IGlzbiBHcmFuZG1hIENyYXp5IGJ1c2luZXNzLiAKTmFjaCBkZXIgRGVmaW5pdGlvbiBkZXMgQXl1cnZlZGEgaXN0IGplZ2xpY2hlIEtyYW5raGVpdCBlaW4gU3ltcHRvbSBkYWZyLCBkYXNzIGRpZSBEb3NoYXMgZWluZXMgTWVuc2NoZW4gaW5zIFVuZ2xlaWNoZ2V3aWNodCBnZXJhdGVuIHNpbmQuIEtyYW5raGVpdGVuIHRyZXRlbiBuaWNodCBwbHR6bGljaCBhdWYuID4+Pnp1bSBBcnRpa2VsOiBLcmFua2hlaXQgYXVzIFNpY2h0IHZvbiBBeXVydmVkYQpTdWJzZXF1ZW50bHksIHNoZSBzYWlkIHRoZSBzdXJuYW1lIHdhcyBOb3JyaXMuIERlc3BpdGUgYSBuYXRpb253aWRlIHNlYXJjaCBhbmQgYSBwdWJsaWMgYXBwZWFsIGZvciBpbmZvcm1hdGlvbiwgbm8gdHJhY2Ugb2YgVGVnYW4gb3IgQW5kcmV3IE1vcnJpcy9Ob3JyaXMgaGFzIGJlZW4gZm91bmQuIApUaGVyZSdzIG5vIHJlYXNvbiB5b3UgY2FuJ3QgaGF2ZSBTYXR1cmRheSBtb3JuaW5nIERpc25leSBwYXJ0aWVzIG9yIChndWxwKSB0aGUgb2NjYXNpb25hbCAiU3RlZWwgTWFnbm9saWFzIiBzY3JlZW5pbmcgd2hlbiB5b3VyIHdpZmUgbmVlZHMgYSBsYWRpZXMnIG5pZ2h0LiBBbmQgeW91IGNhbiBzdGlsbCBoYXZlIHlvdXIgYmFyLCBvZiBjb3Vyc2UgICBpdCBqdXN0IG1pZ2h0IGJlIGEgc21hbGxlciwgbW9yZSBzdWJ0bGUgb25lLi4gClN0ZW5ndGhlbmluZyB0aGUgc3RhYmlsaXplciBtdXNjbGVzIG9mIG15IGxvd2VyIGxlZyBhbHNvIGhlbHBlZCBrZWVwIG15IGFua2xlLCBhbmQga25lZSwgZnJvbSBjb2xsYXBzaW5nIGlud2FyZC4uIApJIHdvdWxkbiBleHBlY3QgbXVjaC4gVGhvc2UgYXJlIG11Y2ggbGVzcyBzZXJpb3VzIGNyaW1lcyBhbmQgaGUgd2lsbCBwcm9iYWJseSBiZSBnaXZlbiB0aW1lIHNlcnZlZCBhbmQgYWxsb3cgaGltIHRvIHNlcnZlIHRoZSB0aW1lIGNvbmN1cnJlbnRseSBqdXN0IGFzIHRoZSBqdWRnZSBkaWQgaW4gdGhlIENvaGVuIGNhc2UuCkFsbGllaXNtICAxIHBvaW50ICBzdWJtaXR0ZWQgOCBkYXlzIGFnbwpPbiB0aGUgb3RoZXIgaGFuZCwgc29tZSBwZW9wbGUgaGF2ZSBvYnNlcnZlZCB0aGF0IGxpdmUgcG9rZXIgcm9vbXMgaGF2ZSBhIHByZWRvbWluYW50IG51bWJlciBvZiBvbGRlciBwZW9wbGUuIE1heWJlLCB0aGVzZSBsaXZlIHBva2VyIHBsYXllcnMgY2Fubm90IGdldCB0aGVtc2VsdmVzIG9ubGluZSBwcmltYXJpbHkgYmVjYXVzZSB0aGV5IGRvIG5vdCBoYXZlIHRoZSBtZWFucyB0byBkbyBzby4gT3IgbWF5YmUgdGhleSBhcmUgdG9vIG9sZCBhbmQgcmljaCB0byBnYW1ibGUgbW9yZSBhbmQgc28gcGxheWluZyBsaXZlIHBva2VyIGdhbWVzIGFyZSBqdXN0IHRoZWlyIHdheSBvZiByZWxheGluZyBhbmQgaGF2aW5nIGZ1bi4KR2V0dGluZyB0aGVtIHRvIGRvIGl0IGlzIGV2ZW4gbW9yZSBkaWZmaWN1bHQgYXMgZmF2b3JpdGVzIGNvbWUgYW5kIGdvIGF0IGFzdG9uaXNoaW5nIHJhdGUuIFRoaXMgaXMgdGhlIHNhbWUgd2l0aCBkIGZvciB0ZWVuYWdlcnMuIApTdHJhdGhyb3kgQ2FyYWRvYyBoYXMgMTAwIGFjcmVzIGF2YWlsYWJsZSBhbmQgaXQgd291bGQgYmUgY2hhbGxlbmdlZCB0byBwdXQgdG9nZXRoZXIgYSBsYXJnZSBwYXJjZWwgb2YgbGFuZCwgYnV0IGl0IHdlbGNvbWVzIHRoZSBvcHRpbWlzbSBmcm9tIFF1ZWVuIFBhcmssIHNhaWQgR3JlZyBNY0NsaW5jaGV5LCBjaGllZiBhZG1pbmlzdHJhdG9yIGZvciBTdHJhdGhyb3kgQ2FyYWRvYy4KSW4gdGhpcyBzaXR1YXRpb24gd2UgYXJlIGFsbCBmaWdodGluZyBvdmVyIHdoZXRoZXIgb3Igbm90IHRoZSBGQUFORyBzdG9ja3MgaGF2ZSBhIG1vbm9wb2x5LiBCdXQgQW50aSB0cnVzdCBsYXdzIGRvbiBleHBsaWNpdGx5IHN0YXRlIGFueXRoaW5nIGFib3V0IGEgbW9ub3BvbHkuIEFudGkgdHJ1c3QgbGF3cyBhcmUgYWJvdXQgcHJpY2UgcmlnZ2luZyBhbmQgdW5mYWlyIGJ1c2luZXNzIHByYWN0aWNlczoKRmxvcCBjb21lcyBRSlQgcmFpbmJvdy4gClRoZXJlIGV2ZXJ5IHdoZXJlIHlvdSB3ZW50IHlvdSBtZXQgaW50ZXJlc3RpbmcgcGVvcGxlIGFuZCBmb3VuZCBwaWVjZXMgb2YgaGlzdG9yeSBhbmQgdGhlIHN0b3J5IGNvbnRlbnQgd2FzIHN0cm9uZy4gCkEgICBpdCBjb21wbGV0ZWx5IGhpZGVzIHRoZSByYXcgZWRnZXMgcHJldmVudGluZyBmcmF5IGFuZCBCICAgYXMgYSBibHVlIGNvbGxhciB3b3JrIGdhcm1lbnQgZmFicmljLCB0aGUgY2xvdGhlcyB3b3VsZCBiZSBoYXJkIHdvcm4gYW5kIGhhcmQgd2FzaGVkLCBzbyBmcmF5IGNvbnRyb2wgd2FzIGV4dHJhIGltcG9ydGFudC4uIApJIGRpZG4gcmVhbGx5IGNhcmUgZm9yIEFudGhlbSwgYnV0IEkgaGVhdmlseSBpbnZlc3RlZCBpbiBCaW93YXJlIG90aGVyIHR3byByZWQgaGVhZGVkIHN0ZXAgZnJhbmNoaXNlcy4gSSBnZXR0aW5nIHRoZSBzaW5raW5nIGZlZWxpbmcgdGhhdCB0aGlzIHJlYWxseSBjb3VsZCBiZSB0aGUgZW5kIG9mIEJpb3dhcmUuCkJvcmVhbmF6IGFkZGVkIGluIGhpcyBvd24gc3RhdGVtZW50IHRoYXQgIml0J3MgY2xlYXIgdGhhdCB3aGF0IHdlIHdlcmUgc2F5aW5nIGFsbCBhbG9uZyB3YXMgdHJ1ZTogd2Ugd2VyZSBvd2VkIGFkZGl0aW9uYWwgY29tcGVuc2F0aW9uIGZvciBvdXIgd29yay4iCkkgcXVpY2tseSBzZWxlY3QgIkRpc2NyZXRpb24sIHNlY3JlY3kiLiAKQSBmbGF0IGhhbmQgbWVhbnMgU2llbWVucyBuZWVkcyB0byBzd2l0Y2ggdG8gYSBsYXAgc3RlZWwgZ3VpdGFyLCB3aGlsZSBhIGNsYXcgbWVhbnMgdG8gZ28gZm9yIHRoZSBiYW5qby4gCkkgY291bGQgYmUgd3JvbmcsIGNlcnRhaW5seSB3b3VsZG4gYmUgdGhlIGZpcnN0IHRpbWUuLiAKQSBsYWNrIG9mIHByb3BlciByZWNlaXB0cyBpc24gbmVjZXNzYXJpbHkgZmF0YWwgdG8gYSB0YXhwYXllciBhYmlsaXR5IHRvIGNsYWltIGNoaWxkIGNhcmUgZXhwZW5zZXM7IGhvd2V2ZXIsIGFic2VudCBhcHByb3ByaWF0ZSByZWNlaXB0cywgdGhlIGNvdXJ0IG11c3QgZXhhbWluZSBvdGhlciBldmlkZW5jZSB0byBzdWJzdGFudGlhdGUgd2hldGhlciBhIHRheHBheWVyIGhhcywgaW5kZWVkLCBpbmN1cnJlZCBhIHNwZWNpZmljIGNoaWxkIGNhcmUgZXhwZW5zZS4uIApJIGhhdmUgYSBoYXJkIGVub3VnaCB0aW1lIGV4ZWN1dGluZyAyLzMgYWNjdXJhdGVseS4gSSB3aWxsIHNheSB0aGlzIGhhbmQgYW5kIEpRcyBzaG91bGQgZm9yIHN1cmUgYmUgYmFycmVsaW5nIHR1cm4uIApGYXN0IGZvcndhcmQgdG8gdGhlIHBhc3QgMzAgeWVhcnMsIGEgdGltZSBkdXJpbmcgd2hpY2ggb24gd2VkZGluZ3MgaGFzIGdvbmUgdXAgYW5kIHVwIGFuZCB1cCwgcGVyaGFwcyBhcyBhIHJlc3BvbnNlIHRvIGhpZ2ggZGl2b3JjZSByYXRlcyBhbmQgdGhlICJ0aHJlYXQiIG9mIHNhbWUgc2V4IG1hcnJpYWdlLiBCZSBhIHBlcmZlY3QgYnJpZGUgYW5kIHRvIGhhdmUgYSBwZXJmZWN0IG1hcnJpYWdlIFJFUVVJUkVTIGEgcGVyZmVjdCB3ZWRkaW5nLiAKVGhhdCBpc24ndCBhICJSZXB1YmxpY2FuIiB0aGluZywgdGhhdCdzIGEgaHVtYW4gdGhpbmcuIEFuZCBpdCdzIGEgaGlzdG9yaWNhbGx5IGp1c3RpZmllZCBvbmUuIEZvciBleGFtcGxlLCBzb21lIG5hdGl2ZSBBbWVyaWNhbnMgZGlkbid0IHNlZSBjb2xvbmlhbGlzdHMgYXMgdGhyZWF0ZW5pbmcgaW5pdGlhbGx5LiBNYW55IHdlcmUgdHJpY2tlZCBhbmQgYmFja3N0YWJiZWQuIEV2ZW4gaWYgdGhlIHRoZXkgaGFkbid0IG1hc3NhY3JlZCB0aGUgbmF0aXZlcywgdGhleSB3b29kIGhhdmUgc3ByZWFkIGhvcnJpYmxlIGRpc2Vhc2Ugbm9uZXRoZWxlc3MuCkJyaXRpc2ggc3RvcmUsIFByaW1hcmssIGEgcG9wdWxhciBkaXNjb3VudCBjaGFpbiwgaXMgbm90IHRoZSBmaXJzdCByZXRhaWxlciB0byBkcmF3IGNyaXRpY2lzbSBmb3Igb2ZmZXJpbmcgcGFkZGVkIGJyYXMgZm9yIGtpZHMgeW91bmdlciB0aGFuIDEwLiAKSSB3b3VsZCBzYXkgdGhhdCBpZiB5b3UgZGlkIHdhbnQgdG8gc2VlIGhpbSBpbiB0aGUgZnV0dXJlIEkgd291bGRuIGRvIGl0IGFsb25lLiAKVGhlcmUgaXMgYWxzbyBhIGxvdCBvZiB0YWxrIGFib3V0IHNob3J0ZW5pbmcgdGhlIEFjYWRlbXkgQXdhcmQgdGVsZWNhc3QgYW5kIHB1dHRpbmcgc29tZSBvZiB0aGVzZSBhd2FyZHMgb2YgbGVzcyBpbnRlcmVzdCBmb3IgZXhhbXBsZSwgdGhlIG9uZXMgZm9yIHNob3J0cyBhbmQgb3RoZXIgdHlwZXMgb2YgYmVoaW5kIHRoZSBjYW1lcmEgYXdhcmRzIG91dCBvZiB0aGUgdGVsZWNhc3QuIEJ1dCB0aGVyZSBhIGxvdCBvZiByZXNpc3RhbmNlLCBhbmQgdGhlIEFjYWRlbXkgc2VlbXMgdG8gYmUgdmVyeSB0cmFkaXRpb25hbCBpbiB0aGUgd2F5IGl0IGRvZXMgdGhpbmdzLi4gClttYXNxdWVyXS4gUG9seWV1Y3RlL2RpdGlvbiBNYXNzb24sIDE4ODcgLiBUZXh0ZSB0YWJsaSBwYXIgR3VzdGF2ZSBNYXNzb24gLCBIYWNoZXR0ZSwgMTg4NyAoIHAuIAozLiBJbmNsdWRlZCBpbiB0aGUgYmVuZWZpdHMgb2YgcG9rZXIgb3ZlciB0aGUgSW50ZXJuZXQgaXMgdGhlIGZhY3QgdGhhdCBuZXdiaWUgcGxheWVycyBhcmUgZ3VpZGVkIGJ5IHRoZSBjb21wdXRlciBpbiB0ZXJtcyBvZiB3aGF0IG1vdmVzIGhlIG9yIHNoZSBjYW4gY2hvb3NlIGZyb20sIGFuZCBhdCB0aGUgc2FtZSB0aW1lLCBpdCBpcyBlYXNpZXIgZm9yIG5ld2JpZSBwbGF5ZXJzIHRvIGxlYXJuIHRpcHMgYW5kIHRyaWNrcyBvZiBwb2tlciBhcyB0aGV5IGNhbiByZXNlYXJjaCBlYXNpbHkgb25saW5lIGV2ZW4gd2hpbGUgaW4gYW4gYWN0dWFsIGdhbWUuIApUaGUgcmVhc29uIEkgc2F5IHRoaXMgaXMgdGhhdCA5IG9mIGhpcyAxMSBHcmFuZCBzbGFtIHNpbmdsZXMgdGl0bGVzIHdlcmUgd29uIG9uIGdyYXNzLiBZZXQgYSBmdXJ0aGVyIDQgUHJvZmVzc2lvbmFsIFNsYW0gc2luZ2xlcyB0aXRsZXMgd2VyZSBhbHNvIHdvbiBvbiBncmFzcywgd2hlcmVhcywgaWYgb25lIHdhcyB0byBjb21wYXJlIHdpdGggVGlsZGVuIFthcyBzdWdnZXN0ZWQgYWJvdmVdICAgVGlsZGVuIHdvbiBvbmx5IDIgb24gZ3Jhc3MuIApBbHMgd2lyIHdpZWRlciBoYWxid2VncyBrbGFyIGJlaSBTaW5uZW4gc2luZCwgd2lzc2VuIHdpciwgZGFzcyB1bnNlciB0b2xsZXMgZWluZW4gZ2FueiBncm8gSGFrZW4gaGF0LiBFaW5lIE5hY2h0IGlzdCBlaW5mYWNoIHp1IHdlbmlnLCB1bSBTdWl0ZSwgSG90ZWxhbmxhZ2UgdW5kIFVtZ2VidW5nIHZvbGwgYXVza29zdGVuIHp1IGsgQWxzbyBzY2hhbHRlbiB3aXIgdW0gYXVmIEJ1c2luZXNzbW9kdXMgdW5kIGdlaGVuIGRpZSBTYWNoZSBnZW5lcmFsc3RhYnNtIGFuOgpQSVg6IERvbHBoaW5zIFNob2NrIFBhdHJpb3RzIFdpdGggTWlyYWNsZSBJbiBNaWFtaU5ldyBFbmdsYW5kIFBhdHJpb3RzIHYgTWlhbWkgRG9scGhpbnNNSUFNSSwgRkwgICBERUNFTUJFUiAwOTogRnJhbmsgR29yZSAyMSBvZiB0aGUgTWlhbWkgRG9scGhpbnMgcnVzaGVzIGFuZCBhdm9pZHMgdGhlIHRhY2tsZSBvZiBLeWxlIFZhbiBOb3kgNTMgb2YgdGhlIE5ldyBFbmdsYW5kIFBhdHJpb3RzIGR1cmluZyB0aGUgc2Vjb25kIGhhbGYgYXQgSGFyZCBSb2NrIFN0YWRpdW0gb24gRGVjZW1iZXIgOSwgMjAxOCBpbiBNaWFtaSwgRmxvcmlkYS4gKFBob3RvIGJ5IE1pY2hhZWwgUmVhdmVzL0dldHR5IEltYWdlcykuIApGYXIgcGFydGUgZGkgQVJUIGVsZXZlbiB2dW9sIGRpcmUgZXNzZXJlIHBhcnRlIGF0dGl2YSBkaSB1biBtb3ZpbWVudG8gY29uc2FwZXZvbGUgZSBpbiBhemlvbmUgY2hlIGdlbmVyYSBldm9sdXppb25lLCBjb25zYXBldm9sZXp6YSBlIHByb3NwZXJpdCBwZXIgc2UgZSBnbGkgYWx0cmkgYWQgb2duaSBsaXZlbGxvIGRpIGVzaXN0ZW56YS4KRGVhbHMgbXVzdCBiZSBvZiBlaXRoZXIgc2lnbmlmaWNhbnQgZGlzY291bnQgb3IgZGlmZmljdWx0IHRvIGZpbmQgYW5kIHJlYWRpbHkgYXZhaWxhYmxlIHRvIHRoZSB3aWRlciBjb21tdW5pdHkuCk9uZSBvZiB0aGUgZmlyc3QgdGhpbmdzIGV2ZXJ5IGxhcHRvcCBzaG9wcGVyIHNob3VsZCB0aGluayBhYm91dCBpbiBhIG5ldyBwdXJjaGFzZSBpcyBiYXR0ZXJ5IGxpZmUuIApHbGFkIGl0IHdhcyBvYnZpb3VzbHkgc29tZXRoaW5nIHlvdSB3ZXJlIGFibGUgdG8gZG8sIHBsZWFzZSByZW1lbWJlciB0aGF0IGl0IGlzbnQgYWx3YXlzIGFuIGltbWVkaWF0ZSBvcHRpb24gZm9yIGV2ZXJ5b25lLiBJIHBlcnNvbmFsbHkgYW0gcGxhbm5pbmcgdG8gZ28gTkMsIGJ1dCB0aGVyZSBhcmUgY2lyY3Vtc3RhbmNlcyBpbiBteSBsaWZlIHRoYXQgcHJldmVudCBpdCBmb3Igc2V2ZXJhbCB5ZWFycy4gVGhlIHNhbWUgbWF5IGJlIHRydWUgZm9yIE9QLCBzbyBwbGVhc2Uga2VlcCB0aGF0IGluIG1pbmQuIApJZiB0aGUgeWVhciBhZnRlciB0aGF0IEkgbWFrZSAkMTAgbWlsbGlvbiBpbiBwcm9maXQgSSB1c2UgdXAgdGhlIGxhc3Qgb2YgbXkgYWNjcnVlZCBsb3NzZXMgYW5kIGFtIHRheGVkIG9uICQ3IG1pbGxpb24uIApTbyBpZiB0aGUgd2F5cyBib3RoZXJlZCB5b3UsIHRoZW4geW91IGNhbiBjZXJ0YWlubHkgdXNlIHRoaXMgdG8gdGllIHVwIGEgbG9vc2UgZW5kLiAKQXMgYSByYXBwZXIsIHNoZSByZWxlYXNlZCAiSW4gRmluYSBXZSBUcnVzdCwiIGFmdGVyIHllYXJzIG9mIG1ha2luZyBwcm9mYW5lIGFuZCBoaWxhcmlvdXMgdmlyYWwgcmFwIHZpZGVvcyBpbiBoZXIgdHJhZGVtYXJrIHJhc3B5IHZvaWNlLiAKVGhvdWdoIHRoZXkgaGF2ZSBzdXNwZW5kZWQgY29udHJpYnV0aW9ucywgdGhleSB3YW50IHRvIGJlIGFibGUgdG8gcHJvdmlkZSBwb3N0IHNlY29uZGFyeSBzdXBwb3J0IGZvciB0aGVpciB0aHJlZSBjaGlsZHJlbiBjdXJyZW50bHkgYWdlcyAxMiwgNiBhbmQgMy4gClRoZXkgYmVlbiBtYXJyaWVkIGZvciAzMCB5ZWFycy4gCkRvZXMgaGUgbWVhbiB0aGUgc2FtZSBzeXN0ZW0sIGFuZCBwZW9wbGUgaW4gdGhhdCBzeXN0ZW0gdGhhdCBrbm93aW5nbHkgZ2F2ZSBhd2F5IGV2aWRlbmNlIGluIHRoaXMgY2FzZT8gVGhpcyBpcyB3aGVyZSB0aGUgd2hvbGUgZ3VpbHQvaW5ub2NlbmNlIHZlcnN1cyByZWFzb25hYmxlIGRvdWJ0IGlzc3VlIGNvbWVzIHRvIG15IG1pbmQuIElzIGl0IHJlYXNvbmFibGUgdG8gc2F5IHRoYXQgYSBjb3Agb3Igb2ZmaWNpYWwgd2l0aGhlbGQvcGxhbnRlZCBldmVuIG9uZSBwaWVjZSBvZiBldmlkZW5jZSB0byBtYWtlIHN1cmUgdGhhdCBudW1lcm91cyBmdXR1cmUgZ2VuZXJhdGlvbnMgd2VyZW4ndCBsaXZpbmcgaW4gIkF2ZXJ5dG93biIgTWFuaXRvd29jIENvdW50eSwgV2lzY29uc2luLiBCaWFzIGFuZCBNb25leSBhcmUgdHdvIHZlcnkgcG93ZXJmdWwgbW90aXZhdG9ycwooT2xpdmUgb2lsIGFjY291bnRzIGZvciBtYW55IG9mIHRoZSBjYWxvcmllcyBpbiB0aGUgcm9hc3QgY2hpY2tlbiBtZWFsLCBmb3IgZXhhbXBsZS4pSW4gY29tcGFyaW5nIHByaWNlcyBvZiByZWFsIGZvb2QgYW5kIGp1bmsgZm9vZCwgSSB1c2VkIHN1cGVybWFya2V0IGluZ3JlZGllbnRzLCBub3QgdGhlIHByaWNpZXIgb3JnYW5pYyBvciBsb2NhbCBmb29kIHRoYXQgbWFueSBwZW9wbGUgd291bGQgY29uc2lkZXIgaWRlYWwuQnV0IGZvb2QgY2hvaWNlcyBhcmUgbm90IGJsYWNrIGFuZCB3aGl0ZTsgdGhlIGFsdGVybmF0aXZlIHRvIGZhc3QgZm9vZCBpcyBub3QgbmVjZXNzYXJpbHkgb3JnYW5pYyBmb29kLCBhbnkgbW9yZSB0aGFuIHRoZSBhbHRlcm5hdGl2ZSB0byBzb2RhIGlzIEJvcmRlYXV4LlRoZSBhbHRlcm5hdGl2ZSB0byBzb2RhIGlzIHdhdGVyLCBhbmQgdGhlIGFsdGVybmF0aXZlIHRvIGp1bmsgZm9vZCBpcyBub3QgZ3Jhc3MgZmVkIGJlZWYgYW5kIGdyZWVucyBmcm9tIGEgdHJlbmR5IGZhcm1lcnMnIG1hcmtldCwgYnV0IGFueXRoaW5nIG90aGVyIHRoYW4ganVuayBmb29kOiByaWNlLCBncmFpbnMsIHBhc3RhLCBiZWFucywgZnJlc2ggdmVnZXRhYmxlcywgY2FubmVkIHZlZ2V0YWJsZXMsIGZyb3plbiB2ZWdldGFibGVzLCBtZWF0LCBmaXNoLCBwb3VsdHJ5LCBkYWlyeSBwcm9kdWN0cywgYnJlYWQsIHBlYW51dCBidXR0ZXIsIGEgdGhvdXNhbmQgb3RoZXIgdGhpbmdzIGNvb2tlZCBhdCBob21lICAgaW4gYWxtb3N0IGV2ZXJ5IGNhc2UgYSBmYXIgc3VwZXJpb3IgYWx0ZXJuYXRpdmUuW1NpZGUgbm90ZSBmcm9tIG1lSSB0aGluayB5b3Ugc2hvdWxkIGJ1eSBHcmFzcyBmZWQgYmVlZiBhbmQgbG9jYWwgb3JnYW5pYyBmYXJtZXJzIHdoZW4gcG9zc2libGVhbmQgbm8gZ3JhaW5zIHRvIG1pbmltYWwgZ3JhaW5zLkV2ZW4gdGhlIG5lYXJseSA1MCBtaWxsaW9uIEFtZXJpY2FucyB3aG8gYXJlIGVucm9sbGVkIGluIHRoZSBTdXBwbGVtZW50YWwgTnV0cml0aW9uIEFzc2lzdGFuY2UgUHJvZ3JhbSAoZm9ybWVybHkga25vd24gYXMgZm9vZCBzdGFtcHMpIHJlY2VpdmUgYWJvdXQgJDUgcGVyIHBlcnNvbiBwZXIgZGF5LCB3aGljaCBpcyBmYXIgZnJvbSBpZGVhbCBidXQgZW5vdWdoIHRvIHN1cnZpdmUuU28gd2UgaGF2ZSB0byBhc3N1bWUgdGhhdCBtb25leSBhbG9uZSBkb2Vzbid0IGd1aWRlIGRlY2lzaW9ucyBhYm91dCB3aGF0IHRvIGVhdC5UaGVyZSBhcmUsIG9mIGNvdXJzZSwgdGhlIHNvIGNhbGxlZCBmb29kIGRlc2VydHMsIHBsYWNlcyB3aGVyZSBpdCdzIGhhcmQgdG8gZmluZCBmb29kOiB0aGUgRGVwYXJ0bWVudCBvZiBBZ3JpY3VsdHVyZSBzYXlzIHRoYXQgbW9yZSB0aGFuIHR3byBtaWxsaW9uIEFtZXJpY2FucyBpbiBsb3cgaW5jb21lIHJ1cmFsIGFyZWFzIGxpdmUgMTAgbWlsZXMgb3IgbW9yZSBmcm9tIGEgc3VwZXJtYXJrZXQsIGFuZCBtb3JlIHRoYW4gZml2ZSBtaWxsaW9uIGhvdXNlaG9sZHMgd2l0aG91dCBhY2Nlc3MgdG8gY2FycyBsaXZlIG1vcmUgdGhhbiBhIGhhbGYgbWlsZSBmcm9tIGEgc3VwZXJtYXJrZXQuU3RpbGwsIDkzIHBlcmNlbnQgb2YgdGhvc2Ugd2l0aCBsaW1pdGVkIGFjY2VzcyB0byBzdXBlcm1hcmtldHMgZG8gaGF2ZSBhY2Nlc3MgdG8gdmVoaWNsZXMsIHRob3VnaCBpdCB0YWtlcyB0aGVtIDIwIG1vcmUgbWludXRlcyB0byB0cmF2ZWwgdG8gdGhlIHN0b3JlIHRoYW4gdGhlIG5hdGlvbmFsIGF2ZXJhZ2UuQW5kIGFmdGVyIGEgbG9uZyBkYXkgb2Ygd29yayBhdCBvbmUgb3IgZXZlbiB0d28gam9icywgMjAgZXh0cmEgbWludXRlcyAgIHBsdXMgY29va2luZyB0aW1lICAgbXVzdCBzZWVtIGxpa2UgYW4gZXRlcm5pdHkuVGFraW5nIHRoZSBsb25nIHJvdXRlIHRvIHB1dHRpbmcgZm9vZCBvbiB0aGUgdGFibGUgbWF5IG5vdCBiZSBlYXN5LCBidXQgZm9yIGFsbW9zdCBhbGwgQW1lcmljYW5zIGl0IHJlbWFpbnMgYSBjaG9pY2UsIGFuZCBpZiB5b3UgY2FuIGRyaXZlIHRvIE1jRG9uYWxkJ3MgeW91IGNhbiBkcml2ZSB0byBTYWZld2F5Lkl0J3MgY29va2luZyB0aGF0J3MgdGhlIHJlYWwgY2hhbGxlbmdlLihUaGUgcmVhbCBjaGFsbGVuZ2UgaXMgbm90ICJJJ20gdG9vIGJ1c3kgdG8gY29vay4iIEluIDIwMTAgdGhlIGF2ZXJhZ2UgQW1lcmljYW4sIHJlZ2FyZGxlc3Mgb2Ygd2Vla2x5IGVhcm5pbmdzLCB3YXRjaGVkIG5vIGxlc3MgdGhhbiBhbiBob3VyIGFuZCBhIGhhbGYgb2YgdGVsZXZpc2lvbiBwZXIgZGF5LiAKVGhlICJudWNsZWFyIHdlYXBvbnMgdGVzdHMiIGNvbmR1Y3RlZCBvbiBob21lIHNvaWwgd2VyZSBvZmZpY2lhbGx5IGZvciByZXNlYXJjaCBwdXJwb3Nlcy4gCk5FUywgU05FUywgTjY0LCBHQkEsIGFuZCBEUyBhbGwgaGF2ZSBhbWF6aW5nIGxpYnJhcmllcyBidXQgdGhlIFdpaSBVIGNhbiBwbGF5IHRoZSBtYWpvcml0eSBvZiB0aGVpciBncmVhdGVzdCBoaXRzIHZpYSBpdHMgZXNob3AsIGFzIHdlbGwgYXMgZXZlcnkgV2lpIGdhbWUgYW5kIGEgYnVuY2ggb2YgV2lpIFUgY2xhc3NpY3MuIE5vdCB0byBtZW50aW9uIGlmIHlvdSB3ZXJlIGx1Y2t5IGVub3VnaCB0byBnZXQgYSBob2xkIG9mIHRoZSBXaWkgVmlydHVhbCBDb25zb2xlIGxpYnJhcnksIHlvdSBzdGlsbCBoYXZlIGFjY2VzcyB0byBzb21lIGVzaG9wIHRpdGxlcyB1bmF2YWlsYWJsZSBpbiB0aGUgY3VycmVudCBlc2hvcCAobGlrZSBDaHJvbm8gVHJpZ2dlciwgRmluYWwgRmFudGFzeSBWSSwgYW5kIFN1cGVyIFNtYXNoIEJyb3MuIDY0KS4uIApUaGVyZSBtYXkgYmUgdHdvIHN1Y2ggcGFpcnMgaW4gdGhlIGhhbmQsIHdoZW4gaXQgaXMgY2FsbGVkICJ0d28gcGFpciIuIAooQVApICAgTW9udGFuYSBmb3Jlc3RyeSBhZ2VuY3kgaXMgd29ya2luZyB3aXRoIGZlZGVyYWwsIGxvY2FsIGFuZCBwcml2YXRlIG9yZ2FuaXphdGlvbnMgdG8gaW5jcmVhc2UgbG9nZ2luZyBvbiBuYXRpb25hbCBmb3Jlc3RzIHRvIGltcHJvdmUgZm9yZXN0IGhlYWx0aCBhbmQgZGVjcmVhc2UgdGhlIHJpc2sgb2YgZGlzZWFzZSBhbmQgY2F0YXN0cm9waGljIGZpcmVzLiAKOSBNYXIgTmVpbCBTdHJhdXNzIERpZSBQZXJmZWt0ZSBNYXNjaGUgRWJvb2suIApJIGFtIGdvaW5nIHRvIHJldmlzZSBteSBmb3JtZXIgYWR2aWNlIGlmIHlvdSBhcmUgbm90IGNpcyAgIGRvbiBzdGF5IGluIGFuIGVtZXJnZW5jeS9yb3RhdGlvbmFsIHNoZWx0ZXIgaWYgeW91IGNhbiBhdm9pZCBpdC4gCkRvdWcgd2FzIGJvcm4gaW4gT2N0b2JlciAxOTIzIGluIFRvcm9udG8gYW5kIHdlbnQgdG8gSmVzc2VlIEtldGNodW0gU2Nob29sLiBJdCB3YXMgZHVyaW5nIHRoaXMgcGVyaW9kIHRoYXQgaGUgZGV2ZWxvcGVkIGhpcyBsb3ZlIGZvciBzcG9ydHMgYW5kIGJlZ2FuIGhpcyBsaWZlbG9uZyBzcG9ydHMgYWNoaWV2ZW1lbnRzLiBEb3VnIHdhcyBhbiBhbGwgcm91bmQgc3VwZXJiIGF0aGxldGUuIEhlIGJlZ2FuIHBsYXlpbmcgZm9vdGJhbGwgd2hpbGUgc2VydmluZyBpbiB0aGUgbWlsaXRhcnkgYW5kIGxhdGVyIHdhcyBhIG1lbWJlciBvZiB0aGUgVG9yb250byBBcmdvbmF1dHMgYW5kIEVkbW9udG9uIEVza2ltb3MsIHBsYXlpbmcgYXMgYSBtZW1iZXIgb2YgdGhlIDE5NDcgYW5kIDE5NTIgR3JleSBDdXAgVGVhbXMsIHdpdGggdGhlIDE5NTIgR3JleSBDdXAgYmVpbmcgb25lIG9mIGhpcyBwcm91ZGVzdCBtb21lbnRzIGluIGhpcyBjYXJlZXIuIApBZnRlciBzZXZlcmFsIGRheXMgd2l0aCBubyByZXNwb25zZSBmcm9tIGhlciBwYXJlbnRzLCBDYXRoZXJpbmUgYmVnYW4gdG8gd29ycnkgYW5kIGNhbGxlZCBhbiBlbXBsb3llZSBvZiB0aGUgQ2FzdGxld29vZCBDb3VudHJ5IENsdWIsIHdoZXJlIHRoZXkgbGl2ZWQsIHRvIGdvIGNoZWNrIG9uIHRoZW0uIApDYWxnYW1lciB1CkhlIHZhbHVlIGJldHMgYWxsIG9mIGhpcyBzZXRzIG9uIHRoZSB0dXJuIGJlY2F1c2Ugd2hlbiB3ZSBmbGF0IHdlIGFsc28gaGF2ZSBiaWcgZHJhd3MgaW4gb3VyIHJhbmdlIHRoYXQgaGUgd2FudHMgdG8gY29udGludWUgdG8gZ2V0IHZhbHVlIGZyb20uIApDb29rIENvdW50eSBTaGVyaWZmIFRvbSBEYXJ0IGNhbGxlZCB0aGUgYWxsZWdlZCBiZWhhdmlvciAiYWJzb2x1dGVseSByZXByZWhlbnNpYmxlLiAiCkdvZCBjb21tdW5pY2F0ZWQgd2l0aCBtZSBhZnRlciB5ZWFyczsgd2hlbiBHb2Qgb2YgQWJyYWhhbSwgSXNhYWMgSmFjb2IgICBjcmVhdG9yIG9mIHRoZSB3aG9sZSB1bml2ZXJzZSwgYXBwb2ludGVkIG1lIEhpcyBzZXJ2YW50LiAKSnVzdCBzbyBsb25nIGFzIHRoZXkgZG9uJ3QgdHJ5IHRvIG1ha2UgYSByZWd1bGFyIHRoaW5nIG9mIGl0LiAKQWJvdXQgQmFja3BhY2tlciBMZWUKT2ggbWFuIHdlbGNvbWUgdG8gYSB0aG91Z2h0IGluIHRoZSBkYXkgaW4gdGhlIGxpZmUgb2YgZDBiaWUuIEkgd2FzIGp1c3QgdGhpbmtpbmcgYWJvdXQgdGhpcyBnYW1lIGVhcmxpZXIgdG9kYXkgYWZ0ZXIgdGFraW5nIGEgZ29vZCBleHRyYSBsb25nIGFsbCBkYXkgc2Vzc2lvbiBvbiBteSBwczMgc2hvb3RpbmcgdXAgcHN5Y2hvcyBhbmQgcmF0cyBhbmQgbm9tYWRzLCBicmlnaHQgY29sb3VycyBjbGFzaGluZyBhbGwgb3ZlciB0aGUgc2NyZWVuIGluIGZyb250IG9mIG1lLiAKVGhlIHN1cmdlcnkgICBkb25lIHdpdGhvdXQgc3VjaCBwbGVhc2FudHJpZXMgYXMgYW5lc3RoZXNpYSBvciBhbnRpYmlvdGljcywgYmVjYXVzZSB0aG9zZSB0aGluZ3MgZGlkbid0IGV4aXN0ICAgYmVnYW4gd2l0aCBhIHBhaXIgb2YgYXNzaXN0YW50cyBwcmV0emVsaW5nIHRoZSBwYXRpZW50IGludG8gdGhlIHNvcnQgb2YgcG9zZSB0aGF0IENsaXZlIEJhcmtlcidzIFdpc2htYXN0ZXIgd291bGQgaW5mbGljdCB1cG9uIGEgc3RydWdnbGluZyBneW1uYXN0LiBUaGVuIHRoZSBzdXJnZW9uIC4gVW0sIHByb2JlZCB0aGUgcGF0aWVudCB3aXRoIGhpcyBmaW5nZXIgdW50aWwgaGUgd2FzIHN1ZmZpY2llbnRseSBzdXJlIG9mIHRoZSBsb2NhdGlvbiBhbmQgc2l6ZSBvZiB0aGUgc3RvbmUsIGF0IHdoaWNoIHBvaW50IGhlIG1hZGUgYW4gaW5jaXNpb24ganVzdCBhYm92ZSB0aGUgYW51cyBhbmQgcG9wcGVkIHRoYXQgc3VtYml0Y2ggb3V0IGxpa2UgYSBjaGFtcGFnbmUgY29yayBvbiBOZXcgWWVhcidzIEV2ZS4iV2VsbCBJJ20gbm90IGdvaW5nIHRvIGtuZWVsIGRpcmVjdGx5IGJlbmVhdGggaGltLiAKWnVtIEJlaXNwaWVsOiBiZWkgZGVyIFBhdGhvbG9naWUgZGVyIE5pZXJlbiBzY2htZXJ6dCBkaWUgTGVuZGUgb2RlciBkZXIgSGFscyB1bmQgb2Z0bWFscyB2ZXJzdWNodCBlaW4gQXJ6dCwgZGVyIHNvbGNoZSBFcnNjaGVpbnVuZ2VuIG5pY2h0IGtlbm50LCBkZW4gSGFscyBvZGVyIGRpZSBMZW5kZSB6dSBoZWlsZW4uIApXaGVuIHNoZSBib3VnaHQgYSBtaWxsaW9uIGJhYnkgY2xvdGhlcywgSSBzYWlkIHRoYW5rIHlvdSwgYW5kIHRoZW4gcGlja2VkIHRocm91Z2ggaXQsIGFuZCB0aHJldyBhd2F5IHdoYXQgSSBkaWRuJ3Qgd2FudC4gClRoZXNlIDYgZGlzZWFzZXMga2lsbCBtb3JlIHRoYW4gODAlIG9mIHVzIGJlZm9yZSB3ZSBnZXQgdG8gcmVhY2ggYSByaXBlIG9sZCBhZ2UuCllvdXIgY2hhbmNlcyB0byB3aW4gd2lsbCBub3QgY2hhbmdlIGFueXdheSB3b3VsZCB5b3UgdGFrZSBiaW5nbyBjYXJkcyBhdCByYW5kb20gb3IgZmlsbCBpbiBsb3R0ZXJ5IGNhcmRzIG9yIHlvdSB1c2UgYW55IG90aGVyIHN0cmF0ZWd5Li4gCkVpdGhlciBMYWJvciB2b3RlcyBmb3IgdGhlIGZ1bGwgZGVhbCBhbmQgZXZlcnlvbmUgZ2V0cyB0aGVpciB0YXggY3V0LCBvciBMYWJvciByZWplY3RzIGl0IGFuZCBTaG9ydGVuIGlzIHRoZSBHcmluY2ggV2hvIFN0b2xlIENocmlzdG1hcyBJbiBKdWx5LiAKVGhlIGFjdGlvbnMgd2UgdG9vayAgIHBhc3NpbmcgdGhlIFJlY292ZXJ5IEFjdCwgc3RhYmlsaXppbmcgdGhlIGJhbmtpbmcgc3lzdGVtLCBwcmVzc2luZyB0byBnZXQgY3JlZGl0IGZsb3dpbmcgYWdhaW4gYW5kIGhlbHBpbmcgcmVzcG9uc2libGUgaG9tZW93bmVycyAgIGJyb3VnaHQgdXMgYmFjayBmcm9tIHRoZSBwcmVjaXBpY2UuIE1vbnRobHkgam9iIGxvc3NlcyBhcmUgZG93biwgZmluYW5jaWFsIG1hcmtldHMgYXJlIGltcHJvdmVkLCBhbmQgZWNvbm9taWMgY29udHJhY3Rpb24gaGFzIHNsb3dlZC4gCkthcmF6eWtpZCAgMSBwb2ludCAgc3VibWl0dGVkIDIzIGRheXMgYWdvCllvdSB3ZXJlIHdyb25nIGluIHlvdXIgYXBwcm9hY2guIApVbmxpa2UgdGhlIG9uIGdvaW5nIGZhZCBub3dhZGF5cyBieSBzd2l0Y2hpbmcgdG8gbW9yZSBjb252ZW5pZW50IHdheXMgb2YgZW5qb3lpbmcgYSBwb2tlciBnYW1lLCBwbGF5aW5nIGxpdmUgcG9rZXIgaXMgc3RpbGwgdGhlIGJlc3QuIFRoZXJlIGFyZSBsb3RzIG9mIHBsYXllcnMgb3V0IHRoZXJlIHdobyB3b3VsZCBhdHRlc3QgdG8gdGhlIGZhY3QgdGhhdCB0aGUgbGF4aXR5IG9mIGdhbWVzIG1vc3QgcGVvcGxlIHdpbGwgZmluZCBpbiBsaXZlIHBva2VyIHJvb21zIGluIHRoZSBjYXNpbm9zIGNyZWF0ZXMgYW4gZW50aWNpbmcgcGhlbm9tZW5vbi4gClRvdCBvbnplIHZlcmJhemluZyBzdG9uZGVuIHdlIGluZWVucyB2b29yIGRlIGFtYmFzc2FkZSB2YW4gb25zIGZhdm9yaWV0ZSB2YWthbnRpZWxhbmQgQW1lcmlrYSEgQm92ZW4gb3AgZGUgaGV1dmVsIGt3YW1lbiB3ZSBiaWogaGV0IFNsYXZpbiBtb251bWVudCwgdGVyIGhlcmlubmVyaW5nIGFhbiBkZSBiZXZyaWpkaW5nIGVuIGhpZXIgemlqbiBvb2sgdmVsZSBzb2xkYXRlbiBiZWdyYXZlbi4gCkJlZm9yZSB0aGUgZ2FtZSBiZWdpbnMgZ3JvdW5kIHJ1bGVzIGFyZSB1c3VhbGx5IGFncmVlZCB1cG9uIHRvIGZhY2lsaXRhdGUgc21vb3RoIGdhbWUgcGxheSBhbmQgZWxpbWluYXRlIGFueSBjb25mdXNpb24gYXMgdGhlIGdhbWUgcHJvZ3Jlc3Nlcy4uIApJIGRvbiB3YW50IHRvIHBsYXkgYWdhaW5zdCBta2IgZWl0aGVyLiBUaGVyZSBhcmUgd2F5cyB0byBtYWtlIFBDIGFjY29tbW9kYXRlIHlvdSBidXQgdGhlIGNvbnNvbGUgbWFudWZhY3R1cmVycyBoYXZlIHN1Y2Nlc3NmdWxseSBtYXJrZXRlZCB0aGVtc2VsdmVzIGFzIHRoZSBjb25zb2xlcyBmb3IgRVZFUllPTkUuIFdoZXRoZXIgeW91IGFyZSBoYXJkY29yZSwgY2FzdWFsLCB1bHRyYSBjYXN1YWwuIFRoZXkgYWxzbyBzZWxmIGRlY2xhcmVkIGFzIHRoZSBjb3VjaC9sZWlzdXJlIGdhbWluZyBzeXN0ZW1zLiBUaGUgb25seSB0aGluZyB3ZSBzZWUgb2YgUEMgaXMgdGhlIGhhcmRjb3JlIHNpZGUgb2YgaXQuIApBbmQgSSBjYW4ganVzdCBzZWUgdG9kYXkncyBjaGlsZHJlbiBmZWVsaW5nIHRoZSBzYW1lLiAKT24gbGEgZG9pdCAgTWFyY28gUG9sbyBxdWkgcmFwcG9ydGUgbGEgY2hvc2UgYXUgWElJSSBtZSBzaWNsZS4gClR5cGljYWxseSwgTWlra28gd291bGQgaGF2ZSAiY2hpY2tlbiBvciBmaXNoICAgbm8gcG9yayBvciBiZWVmICAgaWNlZCB0ZWEgd2l0aCBTcGxlbmRhIG9yIHdhdGVyLCBhbmQgZnJ1aXQgbGlrZSBiYW5hbmFzLCBwaW5lYXBwbGUsIG1hbmdvLCBhbmQgaG9uZXlkZXcuIEhlYXZpZXIgbWVhdHMsIHN1Z2FyLCBhbmQgY2FmZmVpbmUgd291bGQgcHJvdmlkZSBhIHRlbXBvcmFyeSBib29zdCBidXQgd291bGQgYml0ZSBtZSBpbiB0aGUgYnV0dCBsYXRlci4gU2l0dGluZyBhdCBhIHRhYmxlIGZvciBhbnl3aGVyZSBmcm9tIGEgY291cGxlIGhvdXJzIHRvIDMxIGhvdXJzIChteSBsb25nZXN0IHNlc3Npb24pIGlzbid0IGdyZWF0IGV4ZXJjaXNlLCBzbyBpZiBJIGF0ZSB0aGF0IHN0dWZmLCBJIHdvdWxkIGdldCBqaXR0ZXJ5LCBzbGVlcHksIG9yIGxvc2UgZm9jdXMuIApBY2NvcmRpbmcgdG8gdGhlIGFjY291bnRzIG9mIHRoZSBkYXksIHNoZSBoYWQgYmVlbiBkb2luZyBhIGxhbmQgb2ZmaWNlIGJ1c2luZXNzIG9uIGEgU2F0dXJkYXkgbmlnaHQgYW5kIHRyaWVkIHRvIHNodXQgaGVyIGRvb3Igb24gU3VuZGF5IG1vcm5pbmcsIHR1cm5pbmcgYXdheSBhIHJhbmR5IGJ1bmNoIG9mIHNvbGRpZXJzLiAKSSBkbyBub3QgY2FyZSBob3cgbXVjaCB5b3UgdGhpbmsgQ05OIGFuZCBNU05CQyBhcmUgdXAgdGhlIGxlZnRzIGFzcywgaWYgQmFyYWNrIE9iYW1hIGNhbXBhaWduIG1hbmFnZXIgd2FzIGluZGljdGVkIGl0IHdvdWxkIGJlIGZyb250IHBhZ2UgbmV3cyBvbiBldmVyeSBsaWJlcmFsIG1lZGlhIG91dGxldCBpbiB0aGUgVVMuIApBbG9uZyB3aXRoIHRoZSBlbWNlZXMnIGJhbnRlciBhdCBsYXJnZSBncm91cCBldmVudHMgICAiSGF2ZSB5b3Ugd2FzaGVkIHlvdXIgaGFuZHMgNTAgdGltZXMgdG9kYXk/IEkgaGF2ZSEiICAgdGhlIGppbmdsZSBpcyBwYXJ0IG9mIHRoZSBjcmV3J3MgdW53YXZlcmluZyBlZmZvcnQgdG8gc3RhdmUgb2ZmIGEgcG90ZW50aWFsIE5vcm92aXJ1cyBvdXRicmVhay4uIApRdWl0ZSBncnVlbGxpbmcuIFlvdSBjYW4gcGxheSBvdmVyIHNldmVuIG9yIGVpZ2h0IGRheXMgZm9yIDEzIG9yIDE0IGhvdXJzIGF0IGEgc3RyZXRjaCBidXQgdGhlIHRpbWUgZ29lcyBzbyBmYXN0IGJlY2F1c2UgeW91IGhhdmluZyBzbyBtdWNoIGZ1bi4KVG91Z2ggdG8gc2F5IGJlY2F1c2UgKFZhbmNvdXZlciBHTSkgTWlrZSBHaWxsaXMgaXMgb2J2aW91c2x5IGluIGNoYXJnZSBvZiB0aGUgbmVnb3RpYXRpb25zLCBoZSBzYWlkLiBJcyBkZWZpbml0ZWx5IG9uZSBvZiB0aGUgc3BvdHMgSSBiZSB3aWxsaW5nIHRvIGdvIHRvLiBUbyBiZSBob25lc3Qgd2l0aCB5b3UsIEkgaGF2ZW4gaGFkIG11Y2ggY29tbXVuaWNhdGlvbiB3aXRoIE1pa2UuIApJZiBub3QsIEkgd291bGQgcmVjb21tZW5kIHlvdSB0byBoYXZlIGEgbG9vayBpbnRvIGl0LCBiZWNhdXNlIEkgZm9yIGV4YW1wbGUgc3R1ZGllZCAnYnVzaW5lc3MgaW5mb3JtYXRpY3MnIGFuZCBpIHdvbid0IHRvdWNoIGNvZGUgaW4gbXkgbGlmZSBhZ2Fpbi4gQnV1dXQsIGlmIHlvdSdyZSBhYmxlIHRvIGNvZGUgLyBlc3BlY2lhbGx5IGluIHRoZSBjdXJyZW50IG1hcmtldCwgZXNwZWNpYWxseSBpbiBhYmFwIChhdCBsZWFzdCB0aGF0J2EgbXkgb2NjdXBhdGlvbikgYnV0IEkgdGhpbmsgYWxzbyBpbiBhbnkgb3RoZXIgbGFuZ3VhZ2UsIHlvdSB3aWxsIG5ldmVyIGJvdGhlciBhYm91dCBhIGpvYiBvciBtb25leSBhZ2Fpbi4gCkxldmVsIHlhbmcgYmVydGFtYmFoIG1lbWJlcmlrYW4gYWtzZXMgdGVyaGFkYXAgbWVqYSwgcGVuY2FwYWlhbiwgc2VydGEgaGFkaWFoIGhhZGlhaCBiYXJ1LkFuZGEgYmlzYSBtZW5pbmphdSBwcm9maWwgQW5kYSBkZW5nYW4gbWVuZ2tsaWsgdG9tYm9sIFByb2ZpbGUgZGkgc2lzaSBraXJpIGJhd2FoLiBBbmRhIGJpc2EgbWVsaWhhdCBzdGF0aXN0aWsgbWVuZGV0YWlsLCBzZW11YSBiZW5kYSB5YW5nIHN1ZGFoIEFuZGEgZGFwYXRrYW4sIGRhbiBwZXJrZW1iYW5nYW4gcGVuY2FwYWlhbiBBbmRhLkNhcmkgbWVqYS4gCllvdSBjYW4gcHVyY2hhc2UgQ29hc3QgT2FrIHBva2VyIGRpbmluZyB0YWJsZXMgZm9yIHNhbGUgb25saW5lIGF0IENTTiBzdG9yZXMsIGJyYW5kcyBwbGFjZSBhbmQgZnVybml0dXJlIGNyZWF0aW9ucy4gCktub3dsZWRnZSBvZiBoZWF0aW5nLCBwbHVtYmluZyBhbmQgZWxlY3RyaWNhbCBzeXN0ZW1zIG1ha2VzIGN1c3RvZGlhbnMgdmVyc2F0aWxlIGFzc2V0cyBmb3IgY2h1cmNoZXMgd2l0aCB0aWdodCBvcGVyYXRpbmcgYnVkZ2V0cy4gCkxlZXRjb2RlIHdpbGwgaGVscCB3aXRoIHRoZSBpbnRlcnZpZXcgcHJvY2VzcyBhbmQgc2hvdWxkIGJlIHVzZWQgYXMgaW50ZXJ2aWV3IHByZXAuIApBbHNvIGluIGxpdmUgcG9rZXIgdGhpcyBpcyBhIHNpdHVhdGlvbiB0aGF0IGlzIGFsbW9zdCBuZXZlciBibHVmZmVkLiAKQW5kIG5vdCB0ZXJyaWJseSBwb3dlcmZ1bC4gVGhhdCB3aHkgdGhleSBlYXN5IHRvIHNpbmdsZSBvdXQuIFdoeSBtYWtlIGFib3J0aW9uIGEgcGFydCBvZiBoZWFsdGggY2FyZS4gClRoZSBuZXcgYnVzIGJyb2tlIGRvd24gaW4gQ29ubmVjdGljdXQuLiAKIlRoZSBoYXJtcyBhcmUgd2lkZXNwcmVhZCBidXQgdGhlIGJlbmVmaXRzIG9mIHBva2VyIG1hY2hpbmVzIGFyZSBjb2xsZWN0ZWQgYnkgYSB2ZXJ5IG5hcnJvdyBncm91cCAgIGZvciBleGFtcGxlIGEgY29tcGFueSB0aGF0IG9wZXJhdGluZyBhIHB1YiB3aXRoIHBva2llcywiIHRoZSBNb25hc2ggVW5pdmVyc2l0eSBTY2hvb2wgb2YgUHVibGljIEhlYWx0aCBhbmQgUHJldmVudGl2ZSBNZWRpY2luZSByZXNlYXJjaGVyIHNhaWQuClRoZSBjb25jZXB0IG9mIG9ubGluZSBmcmVlIHNsb3RzIG1hZGUgaXQgc2lnbmlmaWNhbnRseSBjb252ZW5pZW50IGZvciB0aGUgcGxheWVycyB0byBlbmpveSB0aGVpciBmYXZvcml0ZSBhY3Rpdml0eS4gT25saW5lIGZyZWUgc2xvdHMgZW5hYmxlZCB1c2VyIHRvIHBsYXkgdGhlIGdhbWUgd2l0aG91dCBwYXlpbmcgYW55IGV4dHJhIGNoYXJnZXMuIFRoZXNlIGdhbWVzIGFyZSBwdXJlbHkgZm9yIGZ1biBhbmQgZG8gbm90IGludm9sdmUgYW55IG1vbmV5IHRoYXQgeW91IG5lZWQgdG8gcGF5LiBUaGVyZSBhcmUgZ2FtZXMgdGhhdCBuZWVkIHRvIGJlIHBsYXllZCBvbmx5IHRocm91Z2ggd2FnZXJpbmcuIE9ubGluZSBzbG90cyBjYW4gYmUgcGxheWVkIGZyb20gYW55IHBsYWNlIHdoZXJlIHRoZXJlIGlzIGFjY2VzcyB0byBjb21wdXRlciBhbmQgaW50ZXJuZXQuIEl0IGFsc28gZXJhZGljYXRlcyB0aGUgbmVlZCBvZiB2aXNpdGluZyBjYXNpbm9zIHRvIHBsYXkgc2xvdHMuClRoZXJlIGFsc28gYSB0cmFpbiBzdGF0aW9uIGluIHRoZSBtaWRkbGUgb2YgdGhlIGNvbXBsZXguIE91dHNpZGUgb2YgdGhlIGVsZXZlbiBoYWxscywgdGhlcmUgYXJlIGRpc3BsYXlzLCBib290aHMgc2VsbGluZyBtb2RlbCBjYXJzIGFuZCBmb29kLCBhbmQgbG90cyBvZiBvcHBvcnR1bml0aWVzIHRvIHRha2UgYSByaWRlIG9uIHRyYWNrcy4gT2gsIGFuZCB0aGUgaW5kaXZpZHVhbCBoYWxscyBvZnRlbiBoYXZlIHNldmVyYWwgc3Rvcmllcy4KSSBub3Qgc2F5aW5nIGRvbiBnZXQgYSBkb2cgaW4gZ3JhZCBzY2hvb2wuIApBbmQgRmFjZWJvb2sgd2lsbCBjb250aW51ZSB0byBleGlzdCBpbiBhIHJlbGF0aW9uc2hpcCBvZiBjb29wZXJhdGl2ZSBjb21wZXRpdGlvbiwgYWNjb3JkaW5nIHRvIFdlcmJhY2guIApBIDkgNiB2aWRlbyBwb2tlciBzbG90IG1hY2hpbmUgaXMgYXJvdW5kIDk5JSBwYXliYWNrIHdoaWxlIHRoZSA4IDUgYXJlIDk3LjMlLiBUeXBpY2FsbHkgeW91IGNhbiBmaW5kIHRoZSBoaWdoZXIgcGF5YmFjayB2aWRlbyBwb2tlciBtYWNoaW5lcyBvbiBhIGJhciB0b3AgaW4gdGhlIGNhc2lubywgYnV0IHRoaXMgaXMgbm90IGFsd2F5cyB0aGUgY2FzZS4uIApBcyB5b3VyIGV4cHJlc3Npb24gb2Ygc3ltcGF0aHkgbWVtb3JpYWwgZG9uYXRpb25zIG1heSBiZSBtYWRlIHRvIHRoZSBTdC4gVGhvbWFzIEFuZ2xpY2FuIENodXJjaCBidWlsZGluZyBGdW5kIG9yIFNvdXRoIE11c2tva2EgTWVtb3JpYWwgSG9zcGl0YWwgRm91bmRhdGlvbi4gV2UgbG92ZSB5b3UgRGFkLiAKRCB1biBwYXNzYWdlIGRlIGwgbmF0dXJlbGxlIGRlIFBsaW5lIGwgcXVpIHMgc3VyIGwgZHUgZ3JlYyBkcnMsIGxlIG5vbSBtbWUgZGVzIGRydWlkZXMgZXN0IGVuIHJlbGF0aW9uIHR5bW9sb2dpcXVlIGF2ZWMgbGUgbm9tIGR1IGNobmUsIGQgbGEgdHJhZHVjdGlvbiBob21tZXMgZGUgY2huZSBxdWkgYSBzb3V2ZW50IHJ1c3NpICBzIGp1c3F1ZSBkYW5zIGwgbW9kZXJuZS4gTWFpcyBsZSBub20gZHUgY2huZSBlc3QgZGlmZnJlbnQgZGFucyB0b3V0ZXMgbGVzIGxhbmd1ZXMgY2VsdGVzLiAKQmlvZGVncmFkYWJsZSBjb2ZmaW5zIGNvdWxkIHR1cm4gY2VtZXRlcmllcyBpbnRvIGZvcmVzdHMKSSdkIGxpa2UgdG8gdGFsayBhYm91dCB0aGUgZGVlcCBmZWVsaW5ncyBhbmQgaW5ub3ZhdGl2ZSBpZGVhcyBvZiBMeWFyaSdzIHJlc2lkZW50cy4gSSB3b3VsZCB0YWtlIGdyZWF0IHBsZWFzdXJlIGluIGRlc2NyaWJpbmcgdGhlIGxpZ2h0IGluIHRoZSBleWVzIG9mIGxpdHRsZSBjaGlsZHJlbiBpbiBMeWFyaSBhcyB0aGV5IHRvbGQgbWUgYWJvdXQgdGhlIE5HTyBzY2hvb2xzIHRoYXQgdGhleSBhdHRlbmQuIEkgd291bGQgcmF0aGVyIGVuam95IGRlc2NyaWJpbmcgdGhlIHJ1c3RpYyBiZWF1dHkgb2YgTHlhcmkncyB5b3VuZyBsYWRpZXMsIGFuZCB0aGUgcmF3IG1hc2N1bGluaXR5IG9mIEx5YXJpJ3MgeW91bmcgbWVuLi4gCkJ1dCBkZXNwZXJhdGUgdGltZXMgY2FsbCBmb3IgZGVzcGVyYXRlIG1lYXN1cmVzLCBhbmQgSmVzc29wIHNheXMgaGUgaXMgY2F1dGlvdXNseSBob3BlZnVsLiBUaGluayB0aGUgcGxhbnMgdGhleSBoYXZlIGFubm91bmNlZCBhcmUgZXhhY3RseSB3aGF0IGlzIHJlcXVpcmVkIHRvIGdldCBKYXBhbiBvdXQgb2YgZGVmbGF0aW9uIGFuZCBrZWVwIHRoZSBlY29ub215IGdyb3dpbmcsIGV2ZW4gaWYgdGhlIGRlbW9ncmFwaGljcyB0dXJuIG11Y2ggbGVzcyBmYXZvcmFibGUuIApUaGVyZSBubyByZWdpc3RyeSwgdGhlcmUgbm8gdHJhY2tpbmcgb2YgdGhvc2Uga2luZCBvZiBmbGlwcy4gUmVnaXN0cnkgd2lsbCByZXF1aXJlIGFsbCBkZXZlbG9wZXJzIGN1cnJlbnRseSBidWlsZGluZyBjb25kb3MgYW5kIG90aGVyIHN0cmF0YSBidWlsZGluZ3MgdG8gcmVnaXN0ZXIgZXZlcnkgZm91ciBtb250aHMgdGhlIHN0YXR1cyBvZiB0aGVpciB1bml0IGNvbnRyYWN0cywgc3RhcnRpbmcgQXByaWwgMzAuIApEbyB5b3UgaGF2ZSBhbnkgdGhvdWdodHMvb3BpbmlvbnMgb24gdGhlIGxldmVsIG9mIHJpc2sgb2Ygbm90IGFwcG9pbnRpbmcgYW4gRVUgcmVwcmVzZW50YXRpdmUsIGVzcGVjaWFsbHkgd2hlbiBjb21wYXJpbmcgaXQgdG8gb3RoZXIgR0RQUiByZXF1aXJlbWVudHM/IERldmVsb3BpbmcgaW50ZXJuYWwgcHJvY2Vzc2VzIGFuZCBpbXBsZW1lbnRpbmcgY29uc2VudCBwcm9jZWR1cmVzIGZpbmUsIHRoYXQncyBzb21ldGhpbmcgY29tcGFuaWVzIHNlZW0gdG8gYmUgb2sgd2l0aC4gQnV0IGhpcmluZyBhIHRoaXJkIHBhcnR5IGluIHRoZSBFVSBzZWVtcyBleGNlc3NpdmUgKD8pIHdoZW4gd2UgZG9uJ3Qga25vdyBob3cgY2xvc2VseSB0aGUgcmVndWxhdGlvbiB3aWxsIGJlIGVuZm9yY2VkLiAKT3ZlcnZpZXcgZm9yIG90aGVybWVnYW4KUGxlZGdlIG9mIEFsbGVnaWFuY2UsIDE5NTQKUmlnaHQgbm93LCBmb3IgZXhhbXBsZSwgdGhleSBhcmUgc2hvd2luZyBmYXJtaG91c2Ugc2lua3MgaW4gU2lsZ3Jhbml0ICAgdGhlaXIgcHJvcHJpZXRhcnkgbmF0dXJhbCBncmFuaXRlIGNvbXBvc2l0ZSBtYXRlcmlhbCAgIGluIG9ubHkgc2xpZ2h0bHkgZGlmZmVyZW50IHNoYWRlcyBvZiBncmV5IG9uIGJvdGggc2lkZXMgb2YgdGhlIEF0bGFudGljLlRoZSBpbmZsdWVuY2Ugb24gZGVzaWduIGZvciBwZW9wbGUgd2FudGluZyB0byBhZ2UgaW4gcGxhY2UsIG9yIHRob3NlIHdpdGggbGltaXRlZCBtb2JpbGl0eSwgd2lsbCB0b3VjaCBldmVyeSBwcm9kdWN0IGNhdGVnb3J5Lkdlcm1hbiBtYW51ZmFjdHVyZXIgS2Vzc2ViaG1lciBoYXMgYSB3aWRlIHJhbmdlIG9mIHN5c3RlbXMgZm9yIGNhYmluZXRyeSB0aGF0IG9wZW4gd2l0aCB0aGUgdG91Y2ggb2YgdGhlIGZpbmdlciwgbGlmdCBhbmQgY2xvc2UgYXV0b21hdGljYWxseSwgYW5kIG1ha2UgdXNlIG9mIG90aGVyd2lzZSB3YXN0ZWQgc3BhY2UuU2ltaWxhcmx5LCBhIHlvdW5nZXIsIG1vcmUgbW9iaWxlIGRlbW9ncmFwaGljIGFjY3VzdG9tZWQgdG8gb3BlbiBhbmQgc21hbGwgc3BhY2VzIHdpbGwgZHJpdmUgYnJhbmRzIHRvIG9mZmVyIGhpZ2hseSBmdW5jdGlvbmFsLCBoYW5kc29tZSBraXRjaGVuIGZpdHRpbmdzIHRoYXQgZWl0aGVyIGZsb2F0IG9yIHN0YW5kIG9uIGZ1cm5pdHVyZSBsaWtlIGxlZ3MsIGFuZCB3aGljaCBhcmUgYXZhaWxhYmxlIGluIGZpbmlzaGVzIGFuZCBtYXRlcmlhbHMgdGhhdCBjYW4gYWxzbyBiZSB1c2VkIGluIG90aGVyIHpvbmVzIG9mIHRoZSBob21lIHRvIGVuaGFuY2UgZmxvdy4gUG9nZ2VucG9obCdzIFZlbm92byBsaW5lIG1hc3RlcnMgdGhpczsgaXQgaG9sZHMgaXRzZWxmIGdyYWNlZnVsbHkgaW4gc3BhY2UsIGFuZCBsb29rcyB0ZXJyaWZpYyBmcm9tIGV2ZXJ5IGFuZ2xlLkFzIHdhbGxzIGJldHdlZW4gcm9vbXMgY29udGludWUgdG8gZGlzc29sdmUsIHRoZSBjaGFsbGVuZ2Ugb2YgY3JlYXRpbmcgYXR0cmFjdGl2ZSBzdG9yYWdlIGFuZCBkaXNwbGF5IHNwYWNlIGZvciB0YWJsZSAgYW5kIHNlcnZlIHdhcmUgaXMgbWV0IHdpdGggYmVhdXRpZnVsbHkgZGVzaWduZWQgZ2xhc3MgYW5kL29yIG9wZW4gc2hlbHZpbmcuIExvdyBlbmVyZ3kgTEVEcyBtYWtlIGl0IGVhc3kgdG8gYWRkIGdhbGxlcnkgc3R5bGUgbGlnaHRpbmcuLiAKQmFjayBob21lIGluIHJlY292ZXJ5IG1vZGUgbm93IGFmdGVyIDEwMGssanVzdCBzb3JyeSBpIHdhcyBhIGJpdCB0b28gdHJhc2hlZCB0byBzdGF5IG9uIGFuZCBzdXBwb3J0IHRoZSB0cm9vcHMgaW4gdGhlIDI0IGhvdXIgcmFjZS4gSGF0cyBvZmYgdG8gZXZlcnlib2R5IGluIHRoYXQgd2hhdCBncmVhdCBwZXJmb3JtYW5jZXMgZnJvbSBMeW5uIHBhdWxpbmUgYWxsIHRoZSB3YXkgdGhyb3VnaCB0aGUgZmllbGQuIFRoZXkgZXZlbnR1YWx5IHJlZWxlZCBoaW0gaW4gYW5kIHdlbnQgb24gdG8gaGF2ZSB0aGVpciBvd24gYmF0dGxlIHdpdGggRGF2eSBldmVudHVhbHkgZ2V0dGluZCB0aGUgdXBlciBoYW5kIHRvIHdpbiBpbiA3LjM3ICggaSB0aGluaykgQWxhbiByZWlkIHdhcyB0aGlyZC4gClllcywgdGhlcmUgYXJlIG1vcmUgam9rZXMgdGhhbiB5b3UgY2FuIHNoYWtlIGEgc3RpY2sgYXQuIApCdW5pb24gICBhbiBhYm5vcm1hbCBib255IHByb3RydXNpb24gdGhhdCB1c3VhbGx5IG9jY3VycyBvbiB0aGUgam9pbnQgYXQgdGhlIGJhc2Ugb2YgdGhlIGJpZyB0b2UuIApBbHNvLCBpZiB5b3Ugd2FudCB0byBkcmF3IHRoZSBBSSBpbnRvIGEgYmF0dGxlLCBpdCBwcmV0dHkgZWFzeSB0byBnZXQgdGhlbSB0byBjb21lIHRvIHlvdS4gCllvdSBtYXkgd2VsbCB3b25kZXIgaG93IHRoYXQgd29ya3MsIGluIHRoZSBzYW1lIHdheSBhcyB3ZSB3b25kZXIgaG93IHRoZSBzbm93cGxvdWdoIGRyaXZlciBnZXRzIHRvIHdvcmsgYWZ0ZXIgb3Zlcm5pZ2h0IHNub3csIHNvIHlvdSdkIHBlcmhhcHMgYmUgc3VycHJpc2VkIHRvIGxlYXJuIHRoYXQgbGFzdCB5ZWFyJ3MgcmVuZXdhbCBhdHRyYWN0ZWQgYSB3aG9wcGluZyA2ODggcnVubmVycywgYW5kIGlmIHJlY2VudCB0cmVuZHMgYXJlIGFueXRoaW5nIHRvIGdvIGJ5LCB0aGF0IHdpbGwgaW5jcmVhc2UgdGhpcyB5ZWFyLi4gCkFuZCB0aGUgbm92ZWx0eSBvZiBpdCBhbHNvIHdvcmUgb2ZmIHNvbWUgYW5kIEkgY291bGQgc3RhcnQgYmVpbmcgaG9uZXN0IHdpdGggbXlzZWxmIGFib3V0IGhvdyBnb29kIGl0IGFjdHVhbGx5IHdhcy4gU2ltaWxhciB0byBob3cgeW91IHRoaW5rIGEgbmV3IGdhbWUgaXMgdGhlIGFic29sdXRlIGJlc3Qgd2hlbiBpdCBjb21lcyBvdXQgYW5kIGl0IGRvZXMgZXZlcnl0aGluZyByaWdodCwgdGhlbiB5b3UgZ2V0IGJvcmVkIHdpdGggaXQgYW5kIHN1ZGRlbmx5IG5vdGljZSBhbGwgb2YgdGhlIHRoaW5ncyBpdCBkb2VzIGNvbXBsZXRlbHkgd3JvbmcuIApUaXRsZXMgZm9yIG5ld3MgcG9zdHMgc2hvdWxkIGlkZWFsbHkgYmUgYXMgY2xvc2UgdG8gdGhlIHRpdGxlIG9mIHRoZSByZXBvcnQgYXMgcG9zc2libGUuIFN1bW1hcml6aW5nIGFuIGFydGljbGUgaW4gdGhlIHRpdGxlIGlzIG9rLCBidXQga2VlcCBpdCBmcmVlIG9mIG9waW5pb24sIGNvbW1lbnRhcnksIG9yIGxvYWRlZCBsYW5ndWFnZSBub3QgY29udGFpbmVkIGluIHRoZSBhcnRpY2xlLgpBIGNpdHkgbGlrZSBMb25kb24sIGl0cyBwb3B1bGF0aW9uIGlzIGdvaW5nIHRvIGdyb3csIGFuZCB5b3UgZG9uIHdhbnQgY29uZ2VzdGlvbiB0byBncm93IGF0IHRoZSBzYW1lIHJhdGUuIFRoZSBvbmx5IHdheSBvZiBkb2luZyB0aGlzIGlzIHlvdSBlbmNvdXJhZ2UgYSBsaWZlc3R5bGUgdGhhdCBpcyBtb3JlIGNvbmR1Y2l2ZSB0byB3YWxraW5nLCB0byBiaWtpbmcsIHRvIHVzaW5nIHB1YmxpYyB0cmFuc2l0IHRvIHJlZHVjZSBjb25nZXN0aW9uIGxldmVscyBhbmQgdGhlaXIgaW1wYWN0LiAKQnkgbmV4dCB3ZWVrZW5kIHdlIHNob3VsZCBoYXZlIHNhZmUgaWNlLi4gCk5ldmVyIGJlZW4gaW4gYSBjb25kbyBiZWZvcmUgc28gaXQgd2lsbCBiZSB0b3RhbGx5IG5ldyBmb3IgdXMsIHNhaWQgSmVmZiBXaGl0Zm9yZCwgd2hvIGhhcyBib3VnaHQgb25lIG9mIHRoZSBob21lcyBhdCBTb2xlaWwuIExpdmUgaW4gV2hpdGUgUm9jayByaWdodCBub3cgc28gd2UgZ2V0IHRoaXMgYmlnIHZpZXcgYWxyZWFkeSBhbmQgd2UgZGlkbiB3YW50IHRvIGdpdmUgaXQgdXAuIFRoZW4gd2Ugc2F3IHdoYXQgdGhlIDIwdGggZmxvb3IgaW4gU29sZWlsIHdvdWxkIGxvb2sgbGlrZSBhbmQgd2UgdGhvdWdodCwgaGV5LCB0aGlzIGxvb2tzIGxpa2Ugb3VyIGhvdXNlLiAKV2hpbGUgYSAxIGN1cCBzZXJ2aW5nIG9mIGdsdXRpbm91cyB3aGl0ZSByaWNlIGhhcyBvbmx5IDEuNyBnIG9mIGZpYmVyLCBzaW1pbGFyIHNlcnZpbmdzIG9mIHdpbGQgcmljZSBhbmQgYnJvd24gcmljZSBvZmZlciAzIGcgYW5kIDMuNSBnLCByZXNwZWN0aXZlbHkuIFdpbGQgcmljZSBhbmQgYnJvd24gcmljZSBhbHNvIGNvbnRhaW4gc2lnbmlmaWNhbnRseSBoaWdoZXIgYW1vdW50cyBvZiBlc3NlbnRpYWwgdml0YW1pbnMgYW5kIG1pbmVyYWxzIHRoYW4gZ2x1dGlub3VzIHdoaXRlIHJpY2UgZG9lcy4gCjQuTm92LiAKIkl0IHdhcyB0ZXJyaWJseSBkYW5nZXJvdXMgdG8gbGV0IHlvdXIgdGhvdWdodHMgd2FuZGVyIHdoZW4geW91IHdlcmUgaW4gYW55IHB1YmxpYyBwbGFjZSBvciB3aXRoaW4gcmFuZ2Ugb2YgYSB0ZWxlc2NyZWVuLiBUaGUgc21hbGxlc3QgdGhpbmcgY291bGQgZ2l2ZSB5b3UgYXdheS4gClRoZSBtb3N0IGNyZWRpYmxlIGFyZ3VtZW50cyB0aGF0IHNob3cgY2xhc3Mgc2l6ZSBkb2VzbiBtYXR0ZXIgbXVjaCBhcmUgZ3JvdW5kZWQgaW4gZGVjZW50IHJlc2VhcmNoLiBBIHF1aWNrIEdvb2dsZSBzZWFyY2ggZm9yICJjbGFzcyBzaXplIHJlc2VhcmNoIiB3aWxsIGdpdmUgeW91IGxvdHMgb2Ygc3R1ZGllcyAoYW5kIHNlY29uZGFyeSByZXBvcnRpbmcgb2YgdGhvc2Ugc3R1ZGllcykgdGhhdCBzdWdnZXN0IHNocmlua2luZyB0aGUgc2l6ZSBvZiBjbGFzc2VzIGlzIGh1Z2VseSBjb3N0bHkgZm9yIGRpc3RyaWN0cywgYnV0IGRvZXNuIGFjdHVhbGx5IG1ha2UgYSBzaWduaWZpY2FudCBkaWZmZXJlbmNlIGluIHRoZSBsZWFybmluZyBvZiBraWRzLCBvbiBhZ2dyZWdhdGUuIEhlcmUgYW4gZXhhbXBsZS4KIkkgaGFkIGV2ZXJ5IGhpdHRlciBkb2luZyB3aGF0IEkgd2FudGVkLCIgU2VhdmVyIHJlY2FsbGVkIGluIDE5OTIuICJBZnRlcndhcmQsIG15IHdpZmUgd2FzIGluIHRlYXJzIGFuZCBJIHJlbWVtYmVyIHNheWluZyB0byBoZXI6ICdIZXksIEkgcGl0Y2hlZCBhIG9uZSBoaXQgc2h1dG91dCB3aXRoIDEwIHN0cmlrZW91dHMuIFdoYXQgbW9yZSBjb3VsZCBJIGFzayBmb3I/IicKVmFsZW50aW4gIGNlIHByb3Bvcy4gClRoZSBmaXJzdCB0aGluZyB0aGF0IGNhbWUgdG8gbWluZCBpcyB0aGluZ3MgdGhhdCBtYWtlIG1lIGZlZWwgcmVzZW50ZnVsLiAKVGhpcyBpcyBhIGRpcmVjdCByZXN1bHQgb2YgdGhlIHZpb2xlbmNlIG9mIG15IGNoaWxkaG9vZC4gRXhhbXBsZS4gQ2FibGUgZ3V5IHdhcyBhdCBteSBob3VzZS4gCk9uZSBjb3VsZCBldmVuIGFyZ3VlIHRoYXQgaXQgYSBuZWdhdGl2ZSBzdW0gZ2FtZSBiZWNhdXNlIG9mIHJha2UuLiAKQnV0IHNoZSB3YXMgYWJzb2x1dGVseSBudXRzLiBIZXIgZXggaHVzYmFuZCBoYWQgcmVtYXJyaWVkLCB5ZWFycyBhZ28sIGFuZCBoYWQgZml2ZSBraWRzIHdpdGggaGlzIG5ldyB3aWZlLiBUaGV5IGhhZCB0d28geW91bmcgY2hpbGRyZW4gYW5kIHdoZW4gbXkgZnJpZW5kIGFuZCBoZXIgc2lzdGVyIHdvdWxkIGdvIG92ZXIgdG8gdmlzaXQgdGhleSB3b3VsZCBjb21lIGhvbWUgdG8gdGhlaXIgbW9tIGFuZCBBdmEgd291bGQgYmFzaWNhbGx5IGdyb29tIHRoZW0gYW5kIGdhc2xpZ2h0IHRoZW0gdG8gbWFrZSB0aGVpciBmYXRoZXIgc291bmQgYmFkLiBJIHJlbWVtYmVyIGEgc3BlY2lmaWMgY29udmVyc2F0aW9uIHdoZXJlIEF2YSB3YXMgbGVhZGluZyB0aGVtIG9uLiBTaGUgY2FsbGVkIHRoZWlyIGZhdGhlciB1cCBhbmQgaW4gdGhlIG1vc3QgY29sZCwgZW1vdGlvbmxlc3Mgdm9pY2UgY2FsbGVkIGhpbSBhbGwgc29ydHMgb2YgbmFtZXMgYW5kIHNhaWQgdGhpbmdzIGxpa2UgImhvdyBkYXJlIHlvdSBtYWtlIHRoZW0gc2xlZXAgaW4gdGhlIGJhc2VtZW50IG9uIHRoZSBmbG9vciIuIE9mIGNvdXJzZSB0aGF0IHNvdW5kcyBiYWQsIHJpZ2h0PyBCdXQgbXkgZnJpZW5kIHdvdWxkIGxhdGVyIHRlbGwgbWUgaXQgd2FzIGEgY29tcGxldGVseSBmaW5pc2hlZCBiYXNlbWVudCwgYW5kIGxhcmdlLCB3aXRoIHR3byBiZWRyb29tcyBhbmQgYSBsaXZpbmcgYXJlYSBkb3duIHRoZXJlIGFuZCBoZXIgZGFkIGp1c3QgaGFzbid0IGdvdHRlbiBhcm91bmQgdG8gZnVybmlzaGluZyBpdCB5ZXQgYmVjYXVzZSB0aGV5IGp1c3QgZmluaXNoZWQgaXQsIHNvIGhlIG1hZGUgbGlrZSBhICJjYW1waW5nIGFyZWEiIHRvIG1ha2UgaXQgZnVuIGZvciB0aGVtLiBBbmQgc2hlIHdhcyBnbGFkIHNoZSBkaWRuJ3QgaGF2ZSB0byBzaGFyZSBhIHJvb20gd2l0aCB0d28gb2YgaGVyIGhhbGYgc2libGluZ3MgYW55bW9yZSBiZWNhdXNlIHRoZXkgY3JpZWQgYWxsIHRoZSB0aW1lLiBIZSBmaW5pc2hlZCB0aGUgZW50aXJlIGJhc2VtZW50IGp1c3QgZm9yIGhlciBhbmQgaGVyIHNpc3RlciB0byBoYXZlIHdoZW4gdGhleSB2aXNpdGVkLiBCdXQgQXZhIHdvdWxkbid0IGxpc3RlbiBhbmQgc2hlIHdvdWxkbid0IGhhdmUgYW55IG9mIGl0LgoiV2UndmUgY2VtZW50IHJlbmRlcmVkIHRoZSB3aG9sZSBmYWNhZGUgb2YgdGhlIGJ1aWx0IGFuZCBidWlsdCBhIGNvdmVyZWQgYXJlYSBmb3IgbWVhbHMgYW5kIGVudGVydGFpbm1lbnQsIHdoaWNoIGNvc3QgdXMgcXVpdGUgYSBiaXQgb2YgbW9uZXkuIiBUaGUgY2x1YiBoYXMgYWxzbyByZXBsYWNlZCBhbGwgaXRzIG9sZCBmdXJuaXR1cmUuIApOZXcgYW11c2VtZW50IGNlbnRyZSBvcGVucyBpbiBNdWxsaW5nYXIKUG9rZXJ3aXNlLCBJIGxvdmUgdGhlIGJpa2UuIEl0IGRlcGVuZHMgb24gd2hhdCB5b3UgbGlrZSBpbiBhIHJvb20sIGJ1dCB0aGUgYmlrZSBpcyByZWFsIGJpZywgbG90cyBvZiBzcGFjZSwgYW5kIHdlbGwgbGl0LiBBbHdheXMgY29vbCB0byBwbGF5IG9uIGEgRnJpZGF5IG5pZ2h0IHdoaWxlIHRoZSBsYXRiIGJpZyBnYW1lIGlzIGdvaW5nIG9uLgpMYXMgVmVnYXM6IFN0ZXBoZW4gUGFkZG9jayBhcHBlYXJlZCB0byBiZSBzZXR0bGluZyBpbnRvIGEgcXVpZXQgbGlmZSBhIGZldyB5ZWFycyBhZ28gd2hlbiB0aGUgNjQgeWVhciBvbGQgYXBhcnRtZW50IG1hbmFnZXIgYW5kIGF2aWQgZ2FtYmxlciBib3VnaHQgYSBob21lIGluIGEgcXVpZXQgTmV2YWRhIHJldGlyZW1lbnQgY29tbXVuaXR5IGFib3V0IGFuIGhvdXJzIGRyaXZlIGZyb20gdGhlIExhcyBWZWdhcyBTdHJpcCBhbmQgaGlzIGJlbG92ZWQgY2FzaW5vcy4gaGlzdG9yeS4KVGhhdCBpcywgZ2V0dGluZyBnYW5rZWQgaXMgYSBzaWduIHlvdSBtYWRlIGEgdGFjdGljYWwgZXJyb3IuIApGYXZvdXJpdGUgdGhpbmcgaW4gaGlzIGhvbWUgaXMgYSBwYWludGluZyBoaXMgcGFyZW50cyBnYXZlIGhpbSBhYm91dCB0aHJlZSB5ZWFycyBhZ28gYnkgQ2FuYWRpYW4gYXJ0aXN0IGFuZCBmYW1pbHkgZnJpZW5kIEFsbHkgTWNJbnR5cmUsIHdobyBpcyBiYXNlZCBpbiBMb25kb24sIEVuZ2xhbmQuIApJIGFscmVhZHkgZ2V0dGluZyBzaWNrIG9mIHRoZSBuZXdlc3QgImZhZCIgICBpbnRlcm1pdHRlbnQgZmFzdGluZy4gVGVsbGluZyBwZW9wbGUgd2hvIGFscmVhZHkgaGF2ZSB0cm91YmxlIGNvbnRyb2xsaW5nIHRoZWlyIGVhdGluZyB0aGF0IHRoZXkgY2FuIGZhc3QgZm9yIDE2IGhvdXJzIGFuZCB0aGVuIGVhdCAibm9ybWFsbHkiIGZvciA4IGhvdXJzIGlzIGEgUkVDSVBFIEZPUiBESVNBU1RFUi4gCk5ldyB0ZWNobm9sb2d5IG1hZGUgaXQgcG9zc2libGUgZm9yIGEgZGV2ZWxvcGVyIHN1Y2ggYXMgU2FsIERlYnVzIHRvIG1ha2UgbGlnaHR3ZWlnaHQgY290dG9uIGxpa2UgZmFicmljcyBvdXQgb2YgcmVjeWNsZWQgcG9wIGJvdHRsZXMuIEluIGFkZGl0aW9uLCBoZSBkaXNjb3ZlcmVkIGhvdyB0byBtYWtlIGhpcyBvd24gdHJhZGVtYXJrZWQgZmFicmljIG91dCBvZiBldWNhbHlwdHVzIHRyZWVzLiAKV2Ugd2VyZSBub3QgcmV0YWlsIHBlb3BsZS4gCkFnYWluLCBoZSBpcyBjb252aWN0ZWQgYW5kIHNlbnQgdG8gZGVhdGggcm93LiAKV2hhdCBPblRoaW5ncyB0byBkb0Zvb2QgYW5kIERyaW5rVGhlYXRyZSBhbmQgQXJ0c1RWIEd1aWRlRGlnaXRhbCBQcmludCBFZGl0aW9uQSBqdWRnbWVudCBvbiB3aGV0aGVyIHRoZSBEb2xwaGluIFRyZWFzdXJlIHBva2VyIG1hY2hpbmVzIGF0IE1lbGJvdXJuZSBDcm93biBDYXNpbm8gYXJlIG1pc2xlYWRpbmcgaXMgc2V0IHRvIGJlIGhhbmRlZCBkb3duIG9uIEZyaWRheS4gRm9ybWVyIGdhbWJsaW5nIGFkZGljdCBTaG9uaWNhIEd1eSBsYXVuY2hlZCBhIGxhd3N1aXQgYWdhaW5zdCBDcm93biBDYXNpbm8gYW5kIG1hbnVmYWN0dXJlciBBcmlzdG9jcmF0IFRlY2hub2xvZ2llcywgYWxsZWdpbmcgdGhlIERvbHBoaW4gVHJlYXN1cmUgbWFjaGluZXMgYXJlIG1pc2xlYWRpbmcgYW5kIGRlY2VwdGl2ZSBiZWNhdXNlIHRoZXkgZHVwZSBwbGF5ZXJzIGFib3V0IHRoZWlyIGNoYW5jZXMgb2Ygd2lubmluZy4uIApNYW55LCBtYW55IG90aGVyIGZhbWlsaWFyIGZhY2VzIHBvcCB1cCB0aHJvdWdob3V0IHRoZSBjb3Vyc2Ugb2YgdGhlIGZpbG0sIHNvbWV0aW1lcyBpbiBvZGRseSBzbWFsbCByb2xlcy4gVGhlIGNhc3QgaXMgYnkgYW5kIGxhcmdlIGNvbXByaXNlZCBvZiBmdW5ueSwgdGFsZW50ZWQgY29taWMgYWN0b3JzLCBhbmQgY29uc2lkZXJpbmcgdGhhdCB0aGV5IG1vcmUgb3IgbGVzcyBpbXByb3Zpc2VkIHRoZSB3aG9sZSBmaWxtLCBpdCdzIG5vIHN1cnByaXNlIHRoYXQgdGhlIG1vdmllIGlzIGZ1bm55LiBQYXJ0aWN1bGFybHkgd29ydGggbm90aW5nIGlzIFJheSBSb21hbm8sIHdobyBkZWxpdmVycyBvbmUgb2YgdGhlIGZ1bm5pZXN0IG1vbm9sb2d1ZXMgaW4gcmVjZW50IG1lbW9yeSwgYWJvdXQgdGhlIHJpZGljdWxvdXMgZXhwcmVzc2lvbnMgdGhhdCBoZSBjbGFpbXMgdG8gaGF2ZSBjb2luZWQuIApUaGUgZ3V5IHN0dW1ibGVzIGFyb3VuZCBhbmQgc2F5cywgIlVtLiBuby4gdW0uIHdoYXQgaGFwcGVuZWQ/IgpLZWVwIHBsYXlpbmcgYWdncmVzc2l2ZSB3aXRoIHZhbHVlIGhhbmRzIGFuZCB5b3UgZ29vZC4uIApUaGV5IG5lZWQgZGFpbHkgd29yay5UaGVRdWVlZmVyICAxMSBwb2ludHMgIHN1Ym1pdHRlZCA2IGhvdXJzIGFnb0FzIHNvbWVvbmUgd2hvIHdhcyBhbHNvIHJhaXNlZCBpbiBhIHZlcnkgcmVsaWdpb3VzIGhvdXNlaG9sZCwgaXQgc291bmRzIGxpa2UgaGUgc2h5LiBNeSBmYW1pbHkgbmV2ZXIgdGFsa2VkIGFib3V0IHNleCBhbmQgd2hhdCB0aGUgY2hyaXN0aWFuIHNjaG9vbHMgdGF1Z2h0IG1lIHdhcyBhbGwgdmVyeSBuZWdhdGl2ZSBnb2luZyBhcyBmYXIgYXMgc2F5aW5nIGltYWdpbmluZyBzZXh1YWwgcmVsYXRpb25zIHdpdGggc29tZW9uZSBpcyBzaW4uIEkgZmVlbCBsaWtlIHRoaXMgaGFzIHN0dW50ZWQgbXkgYWJpbGl0eSB0byBleHByZXNzIG15IHNleHVhbGl0eSBiZWNhdXNlIGdyb3dpbmcgdXAgSSB3YXMgYmFzaWNhbGx5IHRhdWdodCB0aGF0IGl0IHJ1ZGUgYW5kIG9iamVjdGlmeWluZyBhbmQgdGhhdCB5b3UganVzdCBzaG91bGRuIGV2ZXIuIApEbyBub3Qgc2VsbCB0aGluZ3MsIHVzZSBhZmZpbGlhdGUgbGlua3MsIHNwcmVhZCByZWZlcnJhbCBzY2Ftcywgb3IgbGluayB0byBjcm93ZGZ1bmRpbmcuCkkgYW0gYWxsIGZvciBnZW50bGVtYW5zIGFncmVlbWVudCB3aXRoIGEgZmV3IGNoZWNrcy4gCjE0IHNoZSBtYWRlIGEgcmVhbGx5IHF1aWNrIHN0b3AgYXQgdGhlIHN0b3JlIGluIGJldHdlZW4gam9icywgc2hlIHNhaWQuU2hlIHdhbnRlZCB0byBnZXQgc29tZXRoaW5nIGZvciBkaW5uZXIgYmVjYXVzZSBzaGUgZGlkbnQgaGF2ZSBhbnl0aGluZyBhdCBob21lLkkgZmxldyBpbnRvIHRoZSBCaWcgTSwgZ3JhYmJlZCBzb21lIGNoaWNrZW4gYW5kIGRlY2lkZWQgb24gdGhlIHdheSBvdXQgdG8gdXNlIG15IGNoYW5nZSB0byBnZXQgYSBjb3VwbGUgb2YgdGlja2V0cyBvdXQgb2YgdGhlIG1hY2hpbmUuIEkgc2NyYXRjaGVkIHRoZSB0aWNrZXRzIGluIHRoZSBjYXIsIHNoZSBleHBsYWluZWQuU2hlIGdvdCB0aGUgcG9rZXIgdGlja2V0IGFuZCBhIENhc2hXb3JkcyB0aWNrZXQsIHR3byBvZiBoZXIgZmF2b3JpdGUgaW5zdGFudCBnYW1lcy5TaGUgbmV2ZXIgZ290IGFyb3VuZCB0byBjb29raW5nIGFueXRoaW5nIGZvciBkaW5uZXIgdGhhdCBuaWdodC5XaGVuIEkgc2NyYXRjaGVkIGEgcGFpciBvZiBhY2VzIGFuZCBzYXcgdGhlIHdvcmRzIEphY2twb3QgT25lIE1pbGxpb24gcHJpbnRlZCBiZWxvdywgSSBqdXN0IHN0YXJ0ZWQgc2NyZWFtaW5nIHJpZ2h0IHRoZXJlIGluIHRoZSBjYXIsIHNoZSBzYWlkLkhlciBodXNiYW5kLCBUaW1vdGh5LCB3YXMgZXZlbiBtb3JlIGV4Y2l0ZWQuSSByYW4gaW50byB0aGUgaG91c2UgYW5kIHRvbGQgaGltIHRoZSBuZXdzLCBhbmQgaGUgc3RhcnRlZCBjcnlpbmcuIApHcmFuZGNoaWxkcmVuLCBMdWtlLCBBbXksIFpvZSwgSHVnaCBhbmQgTXlsZXMuIApUaGUgbW9zdCBiZWF1dGlmdWwgYXJlYSB3YXMgRE9XTlRPV04gYSBjYXNpbm8gd2l0aCBhIGdpYW50IGNvd2JveSBib290IG9uIHRoZSBmYWNhZGUsIGFuZCBtYW55IHNtYWxsIGhvdGVscyBhbmQgaG90ZWwgY2FzaW5vcy4gCk1hbnkgcmVsaWdpb25zIGZlZWwgYSBncmF2ZSBpcyB0aGUgd2F5IHRoZWlyIGRlaXR5IHdvdWxkIHNlZSB0aGVtIGZpdCwgZm9yIHNvbWUgaXQgYSB3YXkgb2YgY29waW5nLiAKUmVnYXJkaW5nIHdoZXRoZXIgdGhlIENvbW1hbmRlciBpcyByZXF1aXJlZCB0byBzaG9vdCBpbiB0aGUgc2hvb3RpbmcgcGhhc2UgdG8gdXNlIFZNVCwgSSBhZ3JlZSB3aXRoIHlvdSB0aGVyZTogeW91IGNvdWxkIG5vdCB1c2UgVk1UIHRvIGxlYXZlIG1lbGVlIGNvbWJhdC4gSG93ZXZlciwgdGhhdCB3YXNuIHdoYXQgSSB3YXMgc2F5aW5nIGluIG15IHBvc3QuIApJdCB3aWxsIGJlIGRhbW4gY29sZCwgSSBzdWdnZXN0IHdlYXJpbmcgYSBoYXQgYW5kIGEgc2NhcmYuIEdsb3ZlcywgaWYgeW91IHRoaW5rIHlvdSBtaWdodCBuZWVkIHRvIHRha2UgeW91ciBoYW5kcyBvdXQgb2YgeW91ciBwb2NrZXRzLgpJIGJlbGlldmUgdGhhdCB5b3UgYXJlIGNvcnJlY3QgaW4gdGhhdCBpdCB3YXMgcmUgcHVycG9zZWQgZnJvbSBhIGRpZmZlcmVudCB1c2UuIFdIaWxlIEkgZG9uIGtub3csIEkgdGhpbmsgaXQgY291bGQgaGF2ZSBiZWVuIHBhcnQgb2YgYW4gZXh0ZXJpb3IgZGVjb3JhdGlvbiBmcm9tIGEgYnVpbGRpbmcgdGhhdCB3YXMgZGlzbWFudGxlZCBhbmQgdGhlIHBhcnRzIHJldXNlZCB3aGVyZSB0aGV5IGZpdCB3ZWxsLiAKVGhpcyBpcyBhbiBleGNlbGxlbnQgd2F5IHRvIGxlYXJuLCBmdW4gZm9yIGFueSBwb2tlciBlbnRodXNpYXN0LCBhbmQgaXMgZWFzeSB0byB1c2UuIApTb3JyeSB0aGlzIGNyZWVwIHRvb2sgeW91ciBoYW5kIGNyZWFtLiBHbGFkIHNoZSBnb3Qgc2hhbWVkLi4gClNoZSBjaG9zZSB0byBzcGVuZCBtb3JlIG1vbmV5IG9uIHlvdSBieSBrZWVwaW5nIHlvdSBmcm9tIHlvdXIgZmF0aGVyIGZvciBzZWVtaW5nbHkgbm8gcmVhc29uLiBTaGUgY291bGQgaGF2ZSBoYWQgdGhhdCBjaGlsZCBzdXBwb3J0IGlmIHNoZSB3YXNuJ3QgcGV0dHkgYnkga2VlcGluZyB5b3UgZnJvbSBoaW0gd2hpY2ggaXMgdW5mYWlyIHRvIGFsbCBwYXJ0aWVzLgpJZiBpdHMgYSBnb29kIGxhbmRsb3JkLCB0aGV5IHdpbGwgaW52ZXN0aWdhdGUuIApUaGUgQ29sb3JhZG9DYXJlIGluaXRpYXRpdmUgaGluZ2VzIG9uIFNlYy4gMTMzMiBvZiB0aGUgQUNBLCB3aGljaCwgdW5kZXIgdGhlIFd5ZGVuIHdhaXZlcnMsIHBlcm1pdHMgc3RhdGVzIHRvIHdhaXZlIGFsbCBjb3ZlcmFnZSBjb21wb25lbnRzIG9mIHRoZSBBQ0EsIGluY2x1ZGluZyBleGNoYW5nZXMsIGJlbmVmaXRzIHBhY2thZ2VzLCBhbmQgZW1wbG95ZXIgbWFuZGF0ZXMgaW4gZmF2b3Igb2YgaW5ub3ZhdGluZyBzdGF0ZSBydW4gcGxhbnMgdGhhdCwgaW4gb3VyIGNhc2UsIHJlZHVjZSBjb3N0cyBhbmQgYnVyZWF1Y3JhY3kuIFRoaXMgcHJvcG9zZWQgY29tcHJlaGVuc2l2ZSBoZWFsdGggY2FyZSBwbGFuIGlzIGFraW4gdG8gdW5pdmVyc2FsIGhlYWx0aCBjYXJlIGFuZCBjb3VsZCBzYXZlIHJlc2lkZW50cyAkMS42IGJpbGxpb24gYW5kIGJ1c2luZXNzZXMgJDEuMyBiaWxsaW9uIGFsbCB3aXRob3V0IGRlZHVjdGlibGVzLiAKQnV0IGZyYWdyYW5jZXMgYXJlIG5vdCBvbmUgbm90ZSBjb21wb3NpdGlvbnMuIEEgcGVyZnVtZSBjb21wb3NlZCBvZiBmbG9yYWwgbm90ZXMgYWxvbmUgd291bGQgc21lbGwgY2xveWluZ2x5IHN3ZWV0LCBzbyBwZXJmdW1lcnMgYWRkIG9yaWVudGFsIGFuZCB3b29keSBub3RlcyB0byBjcmVhdGUgZGVwdGguIApPciBkb3VibGUgZG93biBvbiB0aGUgcGxhbiBhbmQgdXNlIGVsZWN0cm9seXRpYyBtZWFucyB0byBwdWxsIENPMiBmcm9tIHRoZSBhaXIgZGlyZWN0bHkgYW5kIGNvbnZlcnQgaXQgdG8gQ08gYW5kIHByb2Nlc3MgaW50byBjYXJib24gbmV1dHJhbCBmdWVscywgYW5kL29yIGp1c3QgY29tcHJlc3MgdGhlIENPMiBhbmQgc3RvcmUgaXQgZm9yIGNoZW1pY2FsIHByb2Nlc3Nlcy4gSGF2aW5nIGFidW5kYW50LCBjaGVhcCwgZW5lcmd5IHdpbGwgbWFrZSBpdCB3b3J0aHdoaWxlLgpDb29raWVzIHNpbmQga2xlaW5lIFRleHRkYXRlaWVuLCBkaWUgdm9tIFdlYmJyb3dzZXIgYXVmIGRlbSBFbmRnZXJ0IGRlcyBOdXR6ZXJzIHp1ciBTcGVpY2hlcnVuZyB2b24gYmVzdGltbXRlbiBJbmZvcm1hdGlvbmVuIGFiZ2VsZWd0IHdlcmRlbi4gQmVpbSBuY2hzdGVuIEF1ZnJ1ZiB1bnNlcmVyIFdlYnNpdGUgbWl0IGRlbXNlbGJlbiBFbmRnZXJ0IHdlcmRlbiBkaWUgaW4gQ29va2llcyBnZXNwZWljaGVydGVuIEluZm9ybWF0aW9uZW4gYW4gdW5zZXJlIFdlYnNpdGUgKEZpcnN0IFBhcnR5IENvb2tpZSIpIG9kZXIgZWluZSBhbmRlcmUgV2Vic2l0ZSwgenUgZGVyIGRhcyBDb29raWUgZ2VocnQgKFRoaXJkIFBhcnR5IENvb2tpZSIpLCB6dXJja2dlc2FuZHQuLiAKVGhlIGdlbmV0aWMgbW9kaWZpY2F0aW9uIGZvciBBcXVhQm91bnR5IGZpc2ggaXMgZGlmZmVyZW50IGZyb20gZ2VuZSBlZGl0aW5nIHRlY2hub2xvZ3ksIHdoaWNoIGxldHMgc2NpZW50aXN0cyBzbmlwIG91dCBzcGVjaWZpYyBnZW5lcyB0byBicmluZyBhYm91dCB0cmFpdHMgd2l0aG91dCBpbnRyb2R1Y2luZyBmb3JlaWduIEROQS4gVGhlIEFQIGlzIHNvbGVseSByZXNwb25zaWJsZSBmb3IgYWxsIGNvbnRlbnQuCkZyZWUgQXZjcyBVbHRyYSBGeCA1IEZvciBDYW5vcHVzIEVkaXVzIFdlZGRpbmcgUHJvamVjdHJvZ3VlcyBhbnRob2xvZ3kgZXB1YiB0byBtb2Jpb3JhbCBhbmQgbWF4aWxsb2ZhY2lhbCBwYXRob2xvZ3kgZWJvb2sgZG93bmxvYWRuYmEgMmsxNiB1cGRhdGUgMyBjb2RleCBjcmFja1ZpcnR1YWwgZGogc2tpbnMgcGlvbmVlciBjZGogMjAwMCBkam0gOTAwIG5leHVzCkNhbiB5b3UgZXhhbWluZSB0aGUgY29yZSBvZiBpdCBhbmQgZGlzY292ZXIgYSBtb3JlIGNvbXBsZXggZmVlbGluZz8gV2hlbiBJIHN0cnVnZ2xlIHdpdGggYW5nZXIgYW5kIHNpdCB3aXRoIGl0IGZvciBhIGxvbmcgZW5vdWdoIHRpbWUgaXQgZGV2b2x2ZXMgaW50byBzYWRkbmVzcywgc29tZXRpbWVzIEkgZ3JpZXZlIGRlZXBseSBmb3IgdGhlIGNoaWxkIGluIG1lIHRoYXQgaXMgaHVydCBhbmQgbG9uZWx5LiAKUm9tLCAyMiB5byBoYXZpbmcgYSB0aHJlZSB5ZWFyIG9sZCBzb24gLCBBIGN1cCwgbG9uZyBibGFjayBoYWlyLCB0YW5uZWQsIHByZXR0eSwgc2xpbSBhcyBtb2RlbCwgMTc0Y20sIHR3byBtb250aHMgYXQgU2hhcmtzIGFmdGVyIEdsb2JlLCBiYXNpY2FsbHkgbm8ga2lzcyB3aXRoIGN1c3RvbWVycyBldmVuIGF0IEdsb2JlISBJbiBhIHJvb20gNSBtaW4gY2FyZXNzaW5nLCAxNSBtaW4gREFUWSwgYW5vdGhlciAxMCBtaW4gREFUWSB3aXRoIG15IHR3byBkaWdpdHMgaW4gaGVyIHB1c3N5IHdpdGggaGVyIGludGVuc2UgTywgMyBtaW4gY2lnYXJldHRlIGJyZWFrLCA1IG1pbiBCSiwgMTIgbWluIG1pc3Npb25hcnkuIApLbm93aW5nIHRoYXQgdGhlIEdlcm1hbiBwb3B1bGF0aW9uIHdhcyBrZXB0IGluIHRoZSBkYXJrIGFuZCBjaG9zZSB0byBzdGF5IGluIHRoZSBkYXJrIHVudGlsIHJlbGF0aXZlbHkgbGF0ZSBpbiB0aGUgZGF5IGRvZXMgbm90IGFic29sdmUgYW55b25lIG9mIGFueXRoaW5nLiBOb3IgZG9lcyBpdCBtZWFuIEkgc29tZWhvdyBzdXBwb3J0IGl0LiAKV2lsbGlhbSBIaWxsIHNhaWQgaXQgd2lsbCBub3cgcmVzdW1lIGEgc2hhcmUgYnV5IGJhY2sgcHJvZ3JhbW1lLCB3aGljaCB3YXMgc3VzcGVuZGVkIGluIEp1bHksIGFuZCBpdCBub3RlZCB0aGF0IGl0cyBuZXh0IHRyYWRpbmcgdXBkYXRlIChmb3IgdGhlIHBlcmlvZCBlbmRpbmcgT2N0b2JlciAyNSkgaXMgZHVlIG9uIE5vdmVtYmVyIDE0LgpBIGxvdCBvZiBjYXNlcywgYWRkaWN0aW9uIHVudHJlYXRlZCBpcyBwcm9ncmVzc2l2ZSBhbmQgY2FuIGJlIGZhdGFsLCBMb3JpbmRhIFN0cmFuZywgZXhlY3V0aXZlIGRpcmVjdG9yIG9mIE9yY2hhcmQgUmVjb3ZlcnkgQ2VudHJlIG9uIEJvd2VuIElzbGFuZCwgc2FpZC4gCm5pZ2h0cyB3ZXJlIHN0b3JteSBhbmQgZGFyawpJbiBvdGhlciBuZXdzLCBNci4gUGVhYm9keSBTaGVybWFuIGlzIHRoZSBmYW4gZmF2b3JpdGUgYXQgdGhlIGJveCBvZmZpY2UhIFRoZSBmaWxtIGVhcm5lZCBtb3JlIHRoYW4gJDIxIG1pbGxpb24gaW4gaXRzIHNlY29uZCB3ZWVrLiAKQWZ0ZXIgYWJvdXQgYW4gaG91ciBwYXNzZWQgYnkgd2UgYWdyZWVkIHRoYXQgdGhlcmUgd2FzIG9ubHkgb25lIHdheSB0byBmaWd1cmUgb3V0IHdobyBoYWQgdGhlIHJpZ2h0IHN0cmF0ZWd5IGFuZCB3aG8gd2FzIHNpbXBseSBvdXQgaW4gbGVmdCBmaWVsZCB3aXRoIHRoZWlyIHRob3VnaHRzLiAKRmVlZGxvdCBjYXR0bGUgYXJlbid0IGtlcHQgYXJvdW5kIGxvbmcgZW5vdWdoIGZvciB0aGVtIHRvIHN0YXJ0IGVhdGluZyB0aGF0IG11Y2guIApMaW1pdCBteSBzZWFyY2ggdG8gci9jbG90aGRpYXBzdXNlIHRoZSBmb2xsb3dpbmcgc2VhcmNoIHBhcmFtZXRlcnMgdG8gbmFycm93IHlvdXIgcmVzdWx0czpzZWUgdGhlIHNlYXJjaCBmYXEgZm9yIGRldGFpbHMuCldoeSBURiBkbyBJIG5lZWQgdG8gbGllIGFib3V0IHNvbWV0aGluZyBsaWtlIHBhaW4/IFRmIGkgZ2FpbiBmcm9tIHRoYXQ/IEkgY3Vzc2VkIG91dCBzbyBtYW55IHBwbCBpdCBub3QgZXZlbiBmdW5ueS4gClBlb3BsZSBkb24gbGlrZSBiZWluZyBhY2N1c2VkIG9mIHdyb25nIGRvaW5nIG9yIGhhcm1pbmcgb3RoZXJzIHdoZW4gdGhlaXIgYWN0aW9ucyBhcmUgaW5ub2NlbnQgICBhbmQgbm8sIGNob29zaW5nIHRvIGJlIG9mZmVuZGVkIGRvZXNuIGNvdW50IGFzIHdyb25nZG9pbmcuLiAKMm5kLCBkb24ndCBsZXQgdGhlIHNoYXJrcyB0aGluayB5b3VyIGludGltaWRhdGVkLiBPbmNlIHlvdSBsZXQgdGhlbSBpbiB5b3VyIGhlYWQsIHRoZXkgd2lsbCBnZXQgeW91IHRvIHNwZW5kIG1vcmUgbW9uZXkgdGhhbiB5b3Ugd2FudC4gQmUgcHJlcGFyZWQgdG8gd2FsayBhd2F5IGZyb20gYSBwcm9wZXJ0eSB0aGF0eW91IHNwZW50ICQxMDAwIG9uIGZvciBpbnZlc3RpZ2F0aW9uIHB1cnBvc2VzLiBJZiB0aGUgc2hhcmsgZG9lcyBkb2xsYXIgaW5jcmVtZW50cywgeW91IGRvIGRvbGxhciBpbmNyZW1lbnRzLiBJdCB3aWxsIGRyaXZlIGV2ZXJ5b25lIGVsc2UgbnV0cyB3aGlsZSB5b3UgZ2V0IHRoZSBwcm9wZXJ0eSBhdCBhIGxvd2VyIHByaWNlLiBJdCB3aWxsYWxzbyBkcml2ZWF3YXkgaW1wYXRpZW50IHBlb3BsZSB3aG8gbWF5IGJlIGNvbnNpZGVyaW5nIGJpZGRpbmcgb24gdGhlIHByb3BlcnR5LiBUaGV5IHdpbGwgdGVsbCB5b3Ugd2hvIGJ1eXMgd2hhdCB0eXBlcyBvZiBwcm9wZXJ0aWVzIGZyZXF1ZW50bHk7ZXhhbXBsZSwgdmFjYW50IGxvdHMsIFNGUiwgb3IgQ29tbWVyY2lhbCBwcm9wZXJ0aWVzLiBUaGlzIGRvZXMgbWVhbiB5b3UgbmVlZCB0byBkbyB5b3VyIGhvbWV3b3JrIG9uIHlvdXIgb3Bwb25lbnRzLiBBcyBhIHByb3BvbmVudCBvZiBzbWFsbCBiaWRzLCBhbmQgYmlnIHJldHVybnM7IGl0IGlzIGJlc3QgdG8ga25vdyB3aGVuIHRoZXkgKHJlZ3VsYXJzL3NoYXJrcylhcmVuJ3QgcGF5aW5nIGF0dGVudGlvbi4gSSBndWVzcyB5b3UgY2FuIHNheSBpdCdzIGEgbG90IGxpa2UgcG9rZXIsIGV2ZXJ5b25lIGhhcyB0ZWxscy4gWW91IGp1c3QgbmVlZCB0byBrbm93IHdoYXQgdGhleSBhcmUuCklubm9jZW50LCBzYXlzIFNtaXRoIGluIHNsYXlpbmcgVkVSTUlMSU9OIFBhdWwgU21pdGgsIG9wZW4gdG8gc3R1ZGVudHMgZ3JhZHVhdGluZyBJbiAzMywgb2YgUE9PIEFkYW1zIFN0LiwgcGxlYWRlZCAxOTY4IGZyb20gZWl0aGVyIHR3byBvciBmb3VyIHllYXIgaW5zdGl0dXRpb25zLiBUaGlzIHdpbGwgYXMgIGlubm9jZW50IGxhc3QgbmlnaHQgaW4gbXVuaWNpICBwYWwgY291cnQgdG8gYSBjaGFyZ2Ugb2YgZmlyc3QgIHN1cmUgdGhlIHJlY3J1aXRlciBvZiBpbW1lZGkgciBkZWdyZWUgbWFuc2xhdWdodGVyIGluIGNvbiAgYXRjbHkgZW1wbG95YWJsZSBwZXJzb25uZWwsIG5lY3Rpb24gd2l0aCB0aGUgQ2hyaXN0bWFzIGhpcyBicm90aGVyLiAKSGVyZSBhIGdyZWF0IG9wZW5pbmcgc2VudGVuY2U6ICJJbWFnZXMgb2YgMTl0aCBjZW50dXJ5IGZseWluZyBob3JzZXMgaGF2ZSBhbHdheXMgYmVlbiBkaWZmaWN1bHQgdG8gZmluZCIuIEFuZCwgc2luY2UgdGhpcyBpcyBhIHNlcmlvdXMgaXNzdWUsIGl0IHJlYWxseSBpcyBhIHRydWUgc3RhdGVtZW50LCB1bnRpbCB0b2RheSwgd2hlbiBJIG5vdGljZWQgdGhlbSBpbiBhIGxpdHRsZSBwcm9qZWN0IEkgd2FzIGRvbmcuIApXYXMgYSBTdG9uZXMgZmFuIGZpcnN0LCBzYXlzIEJyb3duLiBTdG9uZXMgd2VyZSBteSBnYXRld2F5IHRvIHRoZSBibHVlcy4gCklmIHlvdSBoYXZlIG5ldmVyIHBsYXllZCBiZWZvcmUsIG1ha2Ugc3VyZSB0aGV5IGhhdmUgdHV0b3JpYWxzIGZvciB0aGUgZGlmZmVyZW50IHR5cGVzIG9mIHBva2VyLCBhICJIb3cgdG8gUGxheSBQb2tlciBHYW1lcyIgc2VjdGlvbiBpbiBhZGRpdGlvbiB0byBhIHJhbmtpbmcgb2YgcG9rZXIgaGFuZHMuIEl0J3MgYWxzbyBhIGdvb2QgaWRlYSB0byBnbyBvdmVyIHRoZSBzeXN0ZW0gcmVxdWlyZW1lbnRzIHNvIHRoYXQgd2hlbiB5b3UgZG93bmxvYWQgdGhlaXIgc29mdHdhcmUgaXQgd2lsbCB3b3JrIG9uIHlvdXIgY29tcHV0ZXIuIApSb3Roc3RlaW4gbm90ZWQgdGhhdCB3aGlsZSBCZWxsIHNlZW1lZCB0byBibGFtZSBTdXJiZXIsIGhlIHdhcyBub3QgcHJlc2VudCB3aGVuIHNoZSBtYWRlIHRoZSB2aWRlb3Mgd2l0aCBoZXIgc29uLCBvbiBtdWx0aXBsZSBvY2Nhc2lvbnMuClBlcnNvbmFsbHksIEkgbGlrZSB0aGUgaW5ub3ZhdGlvbiwgSSBkb24gd2FudCB0byBzdGF5IHN0dWNrIGluIHRoZSAyMHRoIGNlbnR1cnkgYXMgbXVjaCBhcyBJIGxvdmUgdGhlIGFyY2hpdGVjdHVyZSBmcm9tIHRoYXQgcGVyaW9kLi4gCldpdGggdGhlIGNvdW5zZWxvciwgd2UgZG9uIGhhdmUgc29saWQgcHJvb2YgdGhhdCBzaGUgYnJlYWtpbmcgY29uZmlkZW50aWFsaXR5LCBldmVuIHRob3VnaCB3ZSBzdHJvbmdseSBzdXNwZWN0IGl0LiBJdCBhbGwgY2lyY3Vtc3RhbnRpYWwgYXQgYmVzdCwgZW5vdWdoIHRvIG1ha2UgbXkgc2lzdGVyIGZlZWwgdW5jb21mb3J0YWJsZSB0YWxraW5nIHRvIHRoZSB0aGVyYXBpc3QgYWJvdXQgYW55dGhpbmcsIGJ1dCBub3QgZW5vdWdoIHRvIGFjdHVhbGx5IHNheSBoZXksIHNoZSBicmVha2luZyB0aGUgbGF3LiBUaGUgdGhlcmFwaXN0IGRlbmllcyBpdC4gCkluY3JlYXNlcyBjaXJjdWxhdGlvbjsgZW5oYW5jZXMgdGhlIGltbXVuZSBzeXN0ZW07IHByb21vdGVzIG5lcnZvdXMgc3lzdGVtIGZ1bmN0aW9uaW5nOyByZWR1Y2VzIGJsb29kIHByZXNzdXJlOyByZWxpZXZlcyBwYWluIGFuZCBtdXNjbGUgdGVuc2lvbjsgaW1wcm92ZXMgbW9vZCwgaW50ZWxsZWN0dWFsIHJlYXNvbmluZyBhbmQgam9iIHBlcmZvcm1hbmNlOyBwb3NpdGl2ZSBlZmZlY3Qgb24gY29uZGl0aW9ucyBzdWNoIGFzIGZpYnJvbXlhbGdpYSwgYXJ0aHJpdGlzLCBkaWFiZXRlcyBhbmQgbWlncmFpbmUgaGVhZGFjaGVzLiBUaGlzIE5ldFdlbGxuZXNzIGNvbHVtbiB3YXMgcmV2aWV3ZWQgYnkgRHIuIFByZXZpb3VzbHk6IEhvdyBtdWNoIGNhbmR5IGlzIE9LIGZvciBraWRzPwpBbm90aGVyIHByb3Bvc2VkIGFtZW5kbWVudCBieSBUZXhhcyBwcm9tb3RlciBNaWNoYWVsIFdhc3Nlcm1hbiB3b3VsZCBnaXZlIGhpbSBsaWNlbnNlcyBmb3Igc2V2ZW4gY2FzaW5vcy4gClRoZSBvbmx5IHByb2JsZW0gaXMgdGhhdCBzaGUgcmVhbGx5IHRlbmRlciBoZWFydGVkIGFuZCBpZiBzb21lb25lIGlzIGNvbmZyb250YXRpb25hbCB3aXRoIGhlciBzaGUgY29tcGxldGVseSBzaHV0cyBkb3duLiBJIGNvbWUgYXJvdW5kIHRoZSBjb3JuZXIgYW5kIHRoZSBiYXJpc3RhIGxvb2tzIGxpa2Ugc2hlIGFsbW9zdCBpbiB0ZWFycy4gSSB0ZWxsIHRoZSB3b21hbiB0aGF0IHRoZSBiYXJpc3RhIGV4cGxhaW5lZCBpdCB0aGUgYmVzdCB3YXkgc2hlIGNvdWxkIGFuZCBJIGNvdWxkbiByZWFsbHkgZXhwbGFpbiBpdCBiZXR0ZXIgdGhhbiBoZXIuIApDb21wYW5pZSBUdW5pc2llbm5lIGRlIERldmVsb3BtZW50IFRvdXJpc3RpcXVlIChDVERUKSwgYSBzdWJzaWRpYXJ5IG9mIHRoZSBEcmlzcyBKZW5heWFoIEdyb3VwLCBpcyBhIHBpb25lZXIgZ3JvdXAgaW4gaG9zcGl0YWxpdHksIGZpbmFuY2lhbCBzZXJ2aWNlcyBhbmQgaGVhbHRoY2FyZSwgYW5kIGFsc28gaGFzIHNldmVyYWwgaW52ZXN0bWVudHMgaW4gbWFudWZhY3R1cmluZywgYWlybGluZXMsIGFncmljdWx0dXJlIGFuZCBmb29kIHByb2Nlc3NpbmcuIFRoZSBHcm91cCBvd25zIGEgcG9ydGZvbGlvIG9mIGhvdGVscyB3aXRoIG1vcmUgdGhhbiA2MDAwIHJvb21zLiBNb3JlIHRoYW4gMzAgaG90ZWwgYW5kIHJlc2lkZW50aWFsIHByb2plY3RzIGFyZSB1bmRlciBkZXZlbG9wbWVudCBhcm91bmQgdGhlIGdsb2JlIHdpdGggZnV0dXJlIG9wZW5pbmdzIHdoaWNoIGluY2x1ZGUgVGhlIFJpdHogQ2FybHRvbiwgSG9uZyBLb25nIHdoaWNoIHdpbGwgb3BlbiBhcyB0aGUgaGlnaGVzdCBob3RlbCBpbiB0aGUgd29ybGQuIAoiTXkgaG9iYnkgaGFzIG5vdyBiZWNvbWUgbXkgcmVhbCBwYXNzaW9uLCBhbmQgdGhpcyBpcyBhcyBiaWcgYXMgaXQgZ2V0cywiIGhlIHNhaWQuICJUaGlzIGlzIGxpa2UgdGhlIEFzaGVzIG9mIHBva2VyLCBvciB0aGUgV29ybGQgQ3VwLiAKUmF6ZXIgU2lnbnMgUG9rZXIgTGVnZW5kIE1hcmNlbCBMdXNrZQpOb3csIGZvciBtYW55IG9mIHVzLCB3ZSBleHBlY3Qgbm90aGluZyBidXQgYmV0cmF5YWxPZiBjb3Vyc2UsIGxpa2UgYW55IGR5c2Z1bmN0aW9uYWwgcmVsYXRpb25zaGlwLCB0aGVyZSB3ZXJlIGNsdWVzIGltbWVkaWF0ZWx5IHRoYXQgd2Ugc2hvdWxkIHN0YXJ0IGhhcmRlbmluZyBvdXJzZWx2ZXMgdG8gdGhlIGZhbnRhc3kgdGhhdCB3ZSB3b3VsZCBmaW5hbGx5IGhhdmUgYW4gYWRtaW5pc3RyYXRpb24gdGhhdCB3YXMgb3VycyBhbmQgb3VycyBhbG9uZSwgcmF0aGVyIHRoYW4gYSBQcmVzaWRlbnQgdGhhdCBpcyBhbHdheXMgc25lYWtpbmcgb2ZmIHRvIGNhdm9ydCB3aXRoIGJpZyBtaWxpdGFyeSBhbmQgYmlnIGJhbmtzLiAKSG93IGRvZXMgaXQgZmVlbCB0byBoYXZlIHdoaXBwZWQgb3V0IHRoZSBmYWN0IHRoYXQgeW91IGxpdmVkIGhlcmUgZm9yIGEgeWVhciBvbmx5IHRvIGZpbmQgb3V0IHRoYXQgbm90aGluZyBjb21wYXJlZCB0byB0aGUgcGVyc29uIHlvdSB0YWxraW5nIHRvLiBJIHNwZW50IGEgd2Vla2VuZCBpbiBPc2FrYSBhIGZldyB5ZWFycyBhZ287IGxldCBtZSB0ZWxsIHlvdSBhbGwgYWJvdXQgSmFwYW4uLiAKSGVsZW5zIEhlcnogc2NobHVnIGxhdXQgdW5kIGJpcyB6dW0gSGFscy4gQXVmIGRpZXNlbiBNb21lbnQgaGF0dGUgc2llIHNpY2ggc2VpdCBUYWdlbiwgc2VpdCBXb2NoZW4gZ2VmcmV1dCwgaGF0dGUgZ2V3dXNzdCwgZGFzcyBlcyBlaW4gc2Nod2llcmlnZXIgTW9tZW50IHNlaW4gd3JkZSwgdW5kIGpldHp0IHdhciBlciBkYSwgdW5kIGRlciBNdXQgZHJvaHRlLCBzaWUgenUgdmVybGFzc2VuLiBBdWYgZGVtIFdlZyB2b20gU3R1aGwgenVyIFRyZSwgbmFjaGRlbSBzaWUgZGllIHRpZWZlIFN0aW1tZSBtaXQgZGVuIFdvcnRlbiBEaWUgTmNoc3RlIGJpdHRlIiBnZWhydCBoYXR0ZSwgbGllZiBlcyBpaHIgaGVpc3MgdW5kIGthbHQgZGVuIFJja2VuIGhpbnVudGVyLiBLdXJ6IHNjaGxvc3Mgc2llIGRpZSBBdWdlbiwgc2FoIHNpY2ggYXVmIGRlbSBHeW5vc3R1aGwsIGRlbiBEb2Mgendpc2NoZW4gZGVuIEJlaW5lbiBzaXR6ZW5kIGluIGlocmUgb2ZmZW5lIFNjaGVpZGUgc3RhcnJlbmQsIGltbWVyIHdpZWRlciBkaWVzZXMgZ2xlaWNoemVpdGlnIGVybmllZHJpZ2VuZGUgdW5kIHNvIGVycmVnZW5kZSBCaWxkLCBzaWUgc2NodHRlbHRlIGRlbiBLb3BmLCBmZm5ldGUgZGllIEF1Z2VuLCB1bmQgZGFubiBmZm5ldGUgc2llIGRpZSBUcmUgZ2FueiwgdHJhdCBzaWUgYmVyIGRpZSBTY2h3ZWxsZSwgdW5kIHNhaCBkZW4gRG9rdG9yLCBJaHJlbiIgRG9rdG9yLCBhbSBTY2hyZWlidGlzY2ggc2l0emVuLCBpcmdlbmR3ZWxjaGUgUGFwaWVyZSBzdHVkaWVyZW5kLCB3ZWlzc2VyIEJhcnQsIHdlaXNzZSBTY2hsZmVuLCBCcmlsbGUsIG5hdHJsaWNoIGltIHdlaXNzZW4gS2l0dGVsLCBzbyB3aWUgc2llIGlobiBzaWNoIHNjaG9uIGltbWVyIHZvcmdlc3RlbGx0IGhhdHRlLiBKZXR6dCBzdGFuZCBzaWUgaW0gU3ByZWNoemltbWVyLCBzY2hsb3NzIGRpZSBUcmUgaGludGVyIHNpY2ggdW5kIGF0bWV0ZSBocmJhciB0aWVmIGVybGVpY2h0ZXJ0LCBzaWUgaGF0dGUgc29lYmVuIGVpbmVuIGdyb3NzZW4gU2Nocml0dCBnZXRhbiBpbiBlaW5lIG5ldWUgV2VsdCwgZGllIGVycmVnZW5kLCBhdWZyZWdlbmQgdW5kIHd1bmRlcmJhciBiZWZyaWVkaWdlbmQgZnIgc2llIHdlcmRlbiBzb2xsdGUuCkJvdWNoYXJkLCB0aGUgb25seSBDYW5hZGlhbiwgZmVtYWxlIG9yIG1hbGUsIHRvIHJlYWNoIGEgR3JhbmQgU2xhbSBzaW5nbGVzIGZpbmFsIHdoZW4gc2hlIHBsYXllZCBQZXRyYSBLdml0b3ZhIGF0IFdpbWJsZWRvbiBsYXN0IHN1bW1lciwgaGFkIG5ldmVyIGZhY2VkIEJlZ3UuIFRoZSA0Mm5kIHJhbmtlZCBCZWd1IHVwc2V0IG5pbnRoIHNlZWQgQW5nZWxpcXVlIEtlcmJlciBpbiB0aGUgb3BlbmluZyByb3VuZC4KSW4gcHJldmlvdXMgZGF5cywgcGVvcGxlIHVzZWQgdG8gYnV5IGRpZmZlcmVudCB0eXBlcyBvZiBnYW1lcyBmcm9tIHRoZSBzaG9wcyBvciBtYXJrZXQuIEluIHN1Y2ggc2l0dWF0aW9ucywgd2hlbiBwZW9wbGUgZmVsdCBib3JlZCB3aXRoIHRoZSBnYW1lcywgdGhleSB3aWxsIGhhdmUgdG8gcHVyY2hhc2UgYW5vdGhlciBnYW1lcyBpbiBvcmRlciB0byBlbnRlcnRhaW4gdGhlbS4gQXMgYSByZXN1bHQgaHVnZSBzdHVmZiBnZXQgYWNjdW11bGF0ZWQgaW4gdGhlaXIgc3RvcmUgcm9vbS4gU29tZSBwb3B1bGFyIG9ubGluZSBnYW1lcyBhcmUgcG9rZXIgY2FyZHMsIE1haGpvbmcsIG1vbm9wb2x5IGV0Yy4gRnJvbSBkaWZmZXJlbnQgc2l0ZXMgeW91IGNhbiBlYXNpbHkgbGVhcm4gdGhlIHdheXMgdG8gd2luIHRoZSBnYW1lcyB3aXRob3V0IGFueSBkaWZmaWN1bHR5LiBTbywgcGVvcGxlIHByZWZlciBwbGF5aW5nIG9ubGluZSBnYW1lcyBhcyBjb21wYXJlZCB0byBvdGhlciBvZmZsaW5lIGdhbWVzLiAuIChGdWxsIEFuc3dlcikKRWFzaWVyIHRvIHBhc3MgbGF3cyB0aGF0IHZpb2xhdGUgcmlnaHRzIHdpdGhvdXQgb3Bwb3NpdGlvbi4gUXVlc3Rpb24gZXZlcnl0aGluZyBwZW9wbGUuIApCZWx0ZXIgSGVhbHRoIDE0IENvbnRyYWN0IEJyaWRnZSBEZWF0aHMsIEJpcnRocycnLiBTdG9ja3MuNCBQcm9kdWNlLCBMaXZlc3RvY2suNCBpLiAyMy4gSUksIDEyIFllYXIgZW5kIFJlcG9ydHMgLjE2LiA0MiBZb3VyIEJpcnRoZGF5IGtvbmcgUml2ZXIgb3Bwb3NpdGUgTmFrb3JuIFBoYW5vbSwgYSBDb21tdW5pc3QgaG90YmVkIGluIG5vcnRoZWFzdCBUaGFpbGFuZC4gVGhlIExhb3RpYW4gcG9zdCBhdCBOYW0nIEJhYywgbm9ydGggb2YgTHVhbmcgUHJhYmFuZywgdGhlIFJveWFsIExvYXRpYW4gY2FwaXRhbCwgaXMgd2l0aGluIDEwMCBtaWxlcyBvZiB3aGVyZSBQcmEgIHBoYXMgc2FpZCB0aGUgdGhyZWUgUmVkIGJhdHRhbCAgaW9ucyB3ZXJlIGFycmF5ZWQgYWdhaW5zdCBoVSBmb3JjZXMuIApXYXRlciBwcm9kdWN0aW9uIGluIHRoZSBhcmVhIGhhcyBhbHJlYWR5IGRlY3JlYXNlZCBieSA1MCBwZXJjZW50IHdpdGggNjAwIGhlY3RhcmVzIG9mIHRoZSBmYXJtbGFuZHMgYWZmZWN0ZWQuCk1hcmluZSB2ZXRlcmFuIHdobyBzZXJ2ZWQgaW4gSXJhcSBhbmQgQWZnaGFuaXN0YW4sIGJhdHRsZWQgd2l0aCBwb3N0IHRyYXVtYXRpYyBzdHJlc3MgZGlzb3JkZXIgYW5kIHRvb2sgaGlzIG93biBsaWZlIGF0IHRoZSBhZ2Ugb2YgMjguIENhcGl0b2wgRmVicnVhcnkgNSwgMjAxNSBpbiBXYXNoaW5ndG9uLCBEQy4gTWNDYWluIGFuZCBhIGdyb3VwIG9mIGJpcGFydGlzYW4gc2VuYXRvcnMgc3Bva2Ugb3V0IGluIGZhdm9yIG9mIGFybWluZyBVa3JhaW5pYW5zIGluIHRoZWlyIGNvbmZsaWN0IHdpdGggUnVzc2lhLiAKV2UgaGVhZGVkIG91dCBvZiB0b3duIGFuZCBwaWNrZWQgdXAgdHdvIGhpdGNoaGlrZXJzIChiYWNrcGFja2Vycykgd2hvIG5lZWRlZCB0byBnbyB0byB0aGUgYmVhY2ggdG9vLiAKRGUgc29uIGJ1cmVhdSwgQ2hhcmxlcyBEc291cmR5IHN1cnZlaWxsZSBlbiB0ZW1wcyByZWwgbCdlbm5laWdlbWVudCBkZXMgcGlzdGVzIGRlIGxhIHN0YXRpb24gZGUgc2tpIGRlIEJyb21vbnQsIGVuIE1vbnRyZ2llLiBTb24gZ2FnbmUgcGFpbiwgZXQgY2VsdWkgZGUgc2VzIDEzMDAgZW1wbG95cywgcmVwb3NlIHN1ciBjZXMgcHJjaWV1eCBmbG9jb25zLiAgQW5jaWVubmVtZW50LCBvbiBkaXNhaXQgcXVlIGxhIGZhYnJpY2F0aW9uIGRlIG5laWdlLCBjJ3RhaXQgdW5lIGFzc3VyYW5jZSwgaW5kaXF1ZSBsZSBwcnNpZGVudCBkZSBsJ2VudHJlcHJpc2UsIGVuIHBvc3RlIGRlcHVpcyAyMCBhbnMuIE1haW50ZW5hbnQsIG9uIGRpdCBxdWUgYydlc3QgdW5lIGdhcmFudGllLgpUaGUgYmlsbCBlbmQgdGhlIDkgeWVhciB3YXIgaW4gQWZnaGFuaXN0YW4gb3IgdGhlIDcgeWVhciB3YXIgaW4gSXJhcT8gbm90Li4gCk5vdXMgbGUgY3JhaWduaW9ucyBobGFzLi4gCk9ubGluZSBzbG90cyBoYXZlIGEgcGVyZW5uaWFsIGFwcGVhbCBiZWNhdXNlIHRoZXkgdGljayBhbGwgdGhlIHBvc2l0aXZlIGNhc2lubyBnYW1lIGJveGVzIHdoaWxlIGF2b2lkaW5nIG1hbnkgb2YgdGhlIGRvd25zaWRlcy4gVGhlcmUgaXMgYSBodWdlIGFidW5kYW5jZSBvZiBjaG9pY2UgYXQgYWxsIG9ubGluZSBjYXNpbm8gc2l0ZXMsIHByb3ZpZGluZyBhIHN0aW11bGF0aW5nLCBidXQgY2hpbGxlZCwgZXhwZXJpZW5jZSBmb3IgcGxheWVycy4gQWRkZWQgdG8gdGhhdCwgdGhlIGNvbnZlbmllbmNlLCBlYXNlIG9mIHBsYXksIGFuZCBodWdlIHZhcmlldHkgbWFrZSBmb3IgYSBnYW1lIHRoYXQgY29udGludWVzIHRvIGNvbXBlbCBhbmQgZW5nYWdlIGNhc2lubyBwbGF5ZXJzIGFsbCBvdmVyIHRoZSB3b3JsZC4uIApHYXRvcnMgdHJpbyBlYWdlciBmb3IgbGFzdCBnYW1lcyB0b2dldGhlcgpJIHdlbnQgYmFjayBhbmQgZm9ydGggYWJvdXQgd2hldGhlciBvciBub3QgdG8gdGVsbCBzdG9yaWVzIGFib3V0IGVhY2ggb2YgeW91LiAKVmlzaXRzIHdlcmUgZ3JvdXBlZCBpbnRvIGVwaXNvZGVzIHVzaW5nIGRlY2lzaW9uIHJ1bGVzIGFuZCBjbGluaWNhbCBqdWRnbWVudC4KVGhlcmUgd2FzIG5vIHJlYXNvbiB0byBrZWVwIGl0IGFsaXZlLCB0aGV5IGNvdWxkIGhhdmUga2lsbGVkIGl0IGJ1dCBjaG9zZSBub3QgdG8uIEV2ZW4gaWYgdGhleSBoYWQgdG8gc2tpbiBhbmltYWxzIHRvIG1ha2UgbGl2aW5nICAgaSB1bmRlcnN0b29kIHRoYXQgaXQgaGFyZCBpbiBvdGhlciBwYXJ0cyBvZiB0aGUgd29ybGQgICB0aGV5IHNob3VsZCBoYXZlIGtpbGxlZCBpdCBmaXJzdC4uIApXaGVuIHBlb3BsZSBjb25zdGFudGx5IGV4cGVjdCB5b3UgdG8gYW5zd2VyIGV2ZXJ5dGhpbmcgdGhleSBzYXkgbXVsdGlwbGUgdGltZXMgdW50aWwgeW91IGdldCBzb21ldGhpbmcgd3JvbmcgYW5kIHRoZW4gYmVsaXR0bGUgeW91IGZvciBpdC4gSSBrbm93IHNvbWVvbmUgbGlrZSB0aGlzIGFuZCBoZSdzIHNvIGRyYWluaW5nIHRvIGJlIGFyb3VuZCwgdG8gdGhlIHBvaW50IHRoYXQgSSdsbCBhdm9pZCB0aGluZ3MgaWYgSSBrbm93IGhlJ2xsIGJlIHRoZXJlLiBJdCBjYW4gYmUgYW55dGhpbmcgYW5kIGV2ZXJ5dGhpbmcgdG9vLi4gClRoZSBzaG93IHRvbGQgdXMgaGUgd2FzIGEgV0hPTEUgTkVXIEdVWSBhbmQgdGhlIHJlY2FzdCB3YXMgc3VwcG9zZWQgdG8gZW1waGFzaXplIHRoYXQsIGJ1dCBoZSBpbW1lZGlhdGVseSBiYWlsZWQgb24gdGhlIHJldW5pb24sIHRvbGQgdXMgaGlzIEVtb3J5IHJvbWFuY2Ugd2FzbiBhcyBzdHJvbmcgYXMgaGlzIGZlZWxpbmdzIGZvciBSZWJlY2NhLCBhbmQgd2FzIHJpZ2h0IGJhY2sgdG8gU3F1YXJlIE9uZS4gRGlzYXBwb2ludGluZywgYW5kIG1vdmVkIHRvbyBmYXN0LiAKRWxtZXIgQmVubmV0dCwgd2hvIGhhZCBiZWVuIFBlaWZmZXIsIE1ycy4gSXZhbiBDYXJiYXVnaCBhbmQgaXMgaW1wcm92aW5nLiAKSSBtYXkgYmUgc2xpbSwgYnV0IEknbSBub3Qgc2tpbm55IGVub3VnaCB0byBmaXQgbXkgd2hvbGUgcmVhciBlbmQgYmV0d2VlbiB0d28gdGlnaHQgY2xhbXBzLiAKTm93IHRoYXQgeW91IGtub3cgd2hhdCB0byBsb29rIGZvciBpbiBhbiBvbmxpbmUgd2Vic2l0ZSB0aGF0IHNwZWNpYWxpemVzIGluIGNhc2lubyBwb2tlciBjaGlwcywgaXQgaXMgbGlrZWx5IHRoYXQgeW91IHdpbGwgYmUgYWJsZSB0byBmaW5kIGEgc3RvcmUgdGhhdCBpcyBpZGVhbCBmb3IgeW91ISBUaGUgbGFzdCBzdGVwIGlzIHRvIGVuc3VyZSB0aGF0IHRoZXkgaGF2ZSBhIHNlY3VyZSBzZXJ2ZXIgd2hlcmUgeW91IG1ha2UgeW91ciBwdXJjaGFzZS4gCk1hbnkgb2YgdGhlIDI2IGN1c3RvbWVycyBmaXJzdCBuYW1lZCBieSBwb2xpY2UgYXMgaGF2aW5nIHNvbGljaXRlZCBwcm9zdGl0dXRpb24gYW5kIHJlY29yZGVkIG9uIHZpZGVvIHN1cnZlaWxsYW5jZSB3ZXJlIGlkZW50aWZpZWQgZHVyaW5nIHJvdXRpbmUgdHJhZmZpYyBzdG9wcyBhZnRlciBsZWF2aW5nIHRoZSBBc2lhbiBzcGEsIHRoZSBhZmZpZGF2aXQgc3RhdGVzLiAKVGhlcmUgYXJlIGxvdHMgb2YgZ2FtZXMgSSBkb24gbmVlZCB0byBwdXQgdGhhdCBtdWNoIHRpbWUgYW5kIGVmZm9ydCB0byB3aW4sIGFuZCBJIGhhdmUgbm8gaWRlYSB3aHkgRm9ydG5pdGUgQlIgc2hvdWxkIGJlIGFuIGV4Y2VwdGlvbi4gQ2FsbCBtZSBhIGZyZWFraW5nIGNhc3VhbCBib3QgaWYgeW91IHdpc2gsIGJ1dCBhdCBjdXJyZW50IHN0YXRlIGZvcnRuaXRlIGlzIGdldHRpbmcgbW9yZSBmcnVzdHJhdGluZyB0byBwbGF5IHJhdGhlciB0aGFuIGVudGVydGFpbmluZyB3aXRoIGV2ZXJ5IHBhdGNoLiBIb3BlZnVsbHkgcmFua2VkIG1vZGUgZml4ZXMgdGhhdCwgYmVjYXVzZSB0aGUgaWRlYSBvZiBhZGRpbmcgZnVubnkgdGhpbmdzIChzd29yZCwgcGxhbmVzLCBjNCwgZ3VpZGVkIHJwZywgbm9uIG92ZXJoZWF0aW5nIG1pbmlndW4pIG9idmlvdXNseSBmYWlsZWQuIGJ5IHdpbm5pbmcgeW91IGNhbiB1bmRlcnN0YW5kIG5vdCBvbmx5IHRoZSAiVmljdG9yeSByb3lhbGUiLCBidXQgYWxzbyBhIHNpbXBsZSBmaWdodCB3aW4uCllvdSBjYW4gZG8gdGhpcywgYW5kIHdlIGRvLiBJdCBjYWxsIGRlc2FsaW5hdGlvbi4gVGhlIHByb2Nlc3MgeW91IGRlc2NyaWJlIGlzIGNhbGxlZCBkaXN0aWxsYXRpb24gZGVzYWxpbmF0aW9uLCBhbmQgaGlzdG9yaWNhbGx5IHdhcyB0aGUgb25seSB3YXkgdG8gdHVybiBzYWx0IHdhdGVyIGludG8gZHJpbmtpbmcgd2F0ZXIuIApXaXRoIHRoZSBldm9sdXRpb24gb2YgcG9rZXIgYW5kIGl0cyBpbmNyZWFzaW5nIHBvcHVsYXJpdHkgaW4gdGhlIGludGVybmF0aW9uYWwgYXJlbmEsIHBlb3BsZSBpbiB0aGlzIHRyYWRlIGhhdmUgdHVybmVkIGludG8gaW50ZXJuYXRpb25hbCBtYXJrZXRlcnMuIApNYWNhdTpEZXNwaXRlIGxhdmlzaCBwb2tlciBwYXJ0aWVzIGFuZCBpbmZvcm1hbCB0b3VybmFtZW50cyBiZWluZyB0aGUgbWFqb3IgYXR0cmFjdGlvbnMsIHBhcnRpY3VsYXJseSBkdXJpbmcgRGl3YWxpLCBwbGF5aW5nIGl0IGFzIGEgcHJvcGVyIHNwb3J0IG9yIG1ha2luZyBhIGNhcmVlciBvdXQgb2YgaXQgc3RpbGwgcmVtYWlucyBhIHRhYm9vLCB0aG91Z2ggc29tZSB5b3VuZ3N0ZXJzIGFyZSB0cnlpbmcgaGFyZCB0byBjaGFuZ2UgdGhhdCBwZXJjZXB0aW9uLgpIZSB3YXMgYW5kIGlzIGEgY29tcGxldGUgamVyay4gClRoZSBwbGF5ZXJzIGJldCBvbiB0aGVzZSA1IGNhcmRzLiAKTWF5YmUgeW91IHB1dCBvbiBzb21lIGdvb2QgbXVzaWMgb24gdGhlIHN0ZXJlby4gCkkgYmVnYW4gcGxheWluZyBvbmxpbmUgcG9rZXIgb24gRmVicnVhcnkgMjAwNiBhbmQgaGF2ZSBiZWVuIGRvaW5nIHNvIGV2ZXIgc2luY2UuIEkgaGF2ZSBpbnZlc3RlZCBhIGdyYW5kIHRvdGFsIG9mICQ1MCBpbiB0aGUgZ2FtZSBhbmQgbWFuYWdlZCB0byBnbyB1cCB0byAkMTAwMCwgc3dpbmcgZG93biB0byAkMjAwIGFuZCBub3cgYmFjayB0byAkNTAwLiAKSXQgb2ZmZXJzIG5vIG91dHdhcmQgc2lnbiB0aGF0IFBhZGRvY2sgd291bGQgY2Fycnkgb3V0IHRoZSBPY3QuIDEgc2hvb3RpbmcgdGhhdCBraWxsZWQgNTggcGVvcGxlIGFuZCBpbmp1cmVkIGh1bmRyZWRzIGF0IGFuIG91dGRvb3IgY29uY2VydCBvbiB0aGUgTGFzIFZlZ2FzIFN0cmlwLgpUaGVyZSBpcyBhIHNvbHV0aW9uOiBhIGxhdyB0aGF0IHNheXMgbm8gUGVsbCBncmFudHMgdG8gdW5pdmVyc2l0aWVzIHVubGVzcyB0aGUgVU5JIHBheXMgZm9yIHRoZSBib29rcy4gSW4gdGhpcyB3YXksIHRoZSBtYXJrZXRwbGFjZSB3aWxsIGJlIGZpeGVkLiBVbmlzIHdpbGwgcGFzcyBhbG9uZyB0aGUgY29zdCBvZiBib29rcyB0byBzdHVkZW50cyAoaW4gdHVpdGlvbiksIGJ1dCB1bmlzIHdpbGwgYmUgbW90aXZhdGVkIHRvIHNlZWsgYmV0dGVyIHByb2R1Y3QgZm9yIGVhY2ggZG9sbGFyIHNwZW50LiBUaGlzIHdpbGwgZHJpdmUgZG93biB0aGUgY29zdHMgb2YgdGV4dGJvb2tzIHRvIHNhbmUgbGV2ZWxzLiBJIGJlbGlldmUgbWFueSBFdXJvcGVhbiBuYXRpb25zIHVzZSB0aGlzIHN5c3RlbSAoYnV0IGNvcnJlY3QgbWUgaWYgSSBhbSB3cm9uZykuCkkgZmluZCBvdXQgYWJvdXQgcHRvc2lzLCB0ZWxsIG15IG1vbS4gCldvdWxkIGhhdmUgYmVlbiBkZXN0cnVjdGlvbiBvZiBldmlkZW5jZS4gCkkgdGhpbmsgdGhpcyBpcyBteSBpc3N1ZSB3aXRoIGEgbG90IG9mIGJlYXV0eSBndXJ1IG1ha2V1cCBpbiB0aGF0IGl0IGlzIHZlcnkgcHJlc2NyaXB0aXZlICAgYWx3YXlzIGFwcGx5aW5nIGZ1bGwgY292ZXJhZ2UgZm91bmRhdGlvbiwgY29uY2VhbGVyIGFuZCBwb3dkZXIgcmVnYXJkbGVzcyBvZiB3aG8geW91IGFyZSB3b3JraW5nIG9uLi4gCkV4cGVyaW1lbnQgMiAoTj0zOTUpIHJlcGxpY2F0ZWQgdGhlc2UgcmVzdWx0cywgYW5kIGV4YW1pbmVkIHBhcnRpc2FuIGJpYXMuIApTaGUgaGFkIGJpZyBicmVhc3RzLCBhbmQgd2hpbGUgdGhhdCBub3QgdXN1YWxseSBtdWNoIG9mIGEgY29uY2VybiBmb3IgbWUsIHRoYXQgd2FzIGFjdHVhbGx5IHdoeSBJIGNob3NlIGhlciwganVzdCBmb3IgdGhlIHNha2Ugb2YgdmFyaWV0eSwgYnV0IGl0IHR1cm5lZCBvdXQgc2hlIGhhZCBpbXBsYW50cywgd2hpY2ggbG9va2VkIHVubmF0dXJhbCBhbmQgd2VyZSBub3QgbmljZSB0byB0b3VjaC4gU2hlIGdldHMgYSA0LiAKMTYgVG9yZSB1bmQgMTYgVm9ybGFnZW4gd2Vpc2VuIGRpZSBTdGF0aXN0aWtlbiBmIGlobiBpbiA4MiBIYXVwdHJ1bmRlbiBTcGllbGVuIGF1cy4gCldoYXQgaXMgVGhlIExpc3Q/VGhlIExpc3QgaXMsIGFzIHlvdSBtaWdodCBleHBlY3QsIGEgbGlzdC4gCkl0IHdhcyB3cm9uZy4gVGhyZWUgZm9yd2FyZCBkZWZlbnNpdmVzIGZvbGxvd2VkLCB0aGVuIGEgc2luZ2xlIG9mZiBTaGFtaSB0byBtb3ZlIHRvIDk5LCBhbmQgdGhyZWUgbW9yZSBibG9ja3MuLiAKVGhlIENGQVQgdHJhaW5lciBhcHAgaXMgcHJldHR5IGdvb2QuIApZb3UgdHJ5aW5nIHRvIGFwcGx5IHNvbWV0aGluZyB0aGF0IGhhcHBlbmVkIHRvIHNvbWVvbmUgZWxzZSwgaXMgdGhlIHdvcnN0IGtpbmQgb2YgcmVidXR0YWwgdG8gYW4gYXJndW1lbnQuIApQb2xpY2UgaXNzdWUgd2FybmluZyBhcyBIb3JzbGV5IG1hbiBoYW5kcyBvdmVyIGlsbGVnYWwgcG9raWUKIlRoZSB3aG9sZSB0aW1lIHNoZSBrZXB0IHNheWluZywgJ1RoaXMgaXMgc28gZ29vZCBidXQgSSdtIHNvIHRlbnNlLCBJJ20gc28gc3RyZXNzZWQgSSByZWFsbHkgbmVlZCB5b3UgdG8gcmVsYXggbWUsJyIgbGF3eWVyIEplZmZlcnkgR3JlY28gdG9sZCB0aGUgY291cnQuClRoZSBjb21wYW55IHRoZW4gd2FzIHByb21vdGluZyBpdHMgYnVycml0b3MsIHNhbmR3aWNoZXMgYW5kIGRpcHMuIApUaGlzIHdhcyB0aGUgY2FzZSBmb3IgYSBzaG9ydCB0aW1lIGR1cmluZyBub29uLiBJbiB0aGUgcmVzdCB5b3UgZGVwZW5kIG9uIGZvc3NpbCBmdWVscy5hbHNvIHJlbmV3YWJsZSBzb3VyY2VzIGFyZSBub3QgYXMgbmF0dXJlIGZyaWVuZGx5IGFzIHBlb3BsZSBhc3N1bWUuIApCdXQgQm9sdG9uIGFsbGllcyBjb250ZW5kIGhlIGZ1bGZpbGxpbmcgdGhlIHByZXNpZGVudCB3aXNoZXMgaW4gZmxlc2hpbmcgb3V0IHRoZSBwcmVzaWRlbnQgdG9wIGxpbmUgZGVjaXNpb25zLCBhbmQgV2hpdGUgSG91c2Ugb2ZmaWNpYWxzIGluc2lzdCByZXBvcnRzIG9mIGJhZCBibG9vZCBiZXR3ZWVuIHRoZSB0d28gYXJlIG1pc2d1aWRlZC4uIApTb21lIHByYWN0aXRpb25lcnMgaW5jb3Jwb3JhdGUgZXNzZW50aWFsIG9pbHMgaW50byBtYXNzYWdlLCBoZWxwaW5nIHlvdSBhY2hpZXZlIGEgbWVkaXRhdGl2ZSBzdGF0ZSBkdXJpbmcgdGhlIHNlc3Npb24uIApCZWZvcmUgZGVsdmluZyBkZWVwZXIgaW50byB0aGUgZGV0YWlscyBvZiBob3cgdG8gcGxheSB2aWRlbyBwb2tlciwgd2hhdCBleGFjdGx5IGFyZSB0aGUgYmVuZWZpdHMgb2YgcGxheWluZyB0aGUgZ2FtZT8gQXNpZGUgZnJvbSBhbGxvd2luZyB5b3UgdG8gcHJhY3RpY2UgeW91ciBza2lsbHMgaW4gcG9rZXIsIHlvdXIgY2hhbmNlcyBvZiB3aW5uaW5nIGFyZSBhbHNvIGluY3JlYXNlZCBiZWNhdXNlIHRoZSBlZGdlIG9mIHRoZSBob3VzZSBpcyBtdWNoIGxvd2VyIGFzIGNvbXBhcmVkIHRvIHNsb3RzLiBBbHNvLCB0aGVyZSBhcmUgbm8gb3RoZXIgcGxheWVycyB3aG8gY2FuIGludGltaWRhdGUsIGRpY3RhdGUgb3IgaW5mbHVlbmNlIHRoZSB3YXkgdGhhdCB5b3UgYXJlIHBsYXlpbmcgdGhlIGdhbWUuIApNdW5pZSBkIGNhbXJhIGNhY2hlLCB1bmUgcGV0aXRlIHF1aXBlIGRlIFJhZGlvIENhbmFkYSBhIHZpc2l0IHRyb2lzIHNhbG9ucyBkZSBtYXNzYWdlIGQgcXVpIGFmZmljaGVudCBsYSBwb3NzaWJpbGl0IGQgdW4gcmV1LiBMZSBidXQgZGUgbCB0YWl0IGRlIHZyaWZpZXIgcyBlc3QgcG9zc2libGUgZCBkZXMgc2VydmljZXMgc2V4dWVscywgc2kgbGUgbWFzc2FnZSBvZmZlcnQgZXN0IHVuIG1hc3NhZ2UgcHJvZmVzc2lvbm5lbCBldCwgZmluYWxlbWVudCwgcyBlc3QgcG9zc2libGUgZCB1biByZXUgY3JkaWJsZS4KVGhlbiBJIGNsb3NlIHRoZSBkcmF3ZXIuIEkgZGlkbiByZWFsaXplIHRoaXMgbWlnaHQgYmUgdW51c3VhbCEgSWYgYW55IG9mIHlvdSB3b3VsZCBsaWtlIG1lIHRvIGhlbHAgc2hvdyB5b3UgaG93LCBJIGJlIG1vcmUgdGhhbiBoYXBweSB0byBjb21lIHRvIHlvdXIgcm9vbXMgYW5kIHNob3cgeW91IGhvdyBJIG1ha2UgaXQgd29yayBmb3IgbWUhIi4gCkRhbm55IHdvdWxkbiBoYXZlIHRvIHN1cnZpdmUgaGlzIGZhdGhlciBlaXRoZXIuLiAKSGF2aW5nIHdhdGNoZWQgdGhlbSBjbG9zZWx5IHlvdSBzcG90dGVkIHRoZSBtYWluIHRyaWNrIGZvciBnZXR0aW5nIGlkZW50aWZ5aW5nIHZvbHVudGVlcnMuIFRoZSByZWFsIHRyaWNrIHRob3VnaCBpcyB0aGV5IGFyZSBhY3R1YWxseSB0cnlpbmcgdG8gaHlwbm90aXplIHRoZSBjcm93ZCBmcm9tIHRoZSBzZWNvbmQgdGhleSB3YWxrIGludG8gdGhlIHJvb20uIFRoZXJlJ3MgYWx3YXlzIHNvbWVvbmUgYXQgdGhlIGRvb3IgZ3JlZXRpbmcgeW91IGFuZCBpbnRyb2R1Y2luZyBhIGNhbG1pbmcgdmliZSBhbmQgdXN1YWxseSB0aGV5IHdpbGwgcGFpciBhIHNob3VsZGVyIHRvdWNoIChhcyBwYXJ0IG9mIHRoZSB3ZWxjb21lKSB3aXRoIGEgY29tbWVudCBvbiBob3cgbXVjaCB5b3UnbGwgZW5qb3kgdGhlIHNob3csIGp1c3QgcmVsYXggYW5kIGhhdmUgZnVuLiAKT24gVlRWLCBFbGVjdHJpY2l0eSBNaW5pc3RlciBMdWlzIE1vdHRhIERvbWluZ3VleiBjYWxsZWQgdGhlIGJsYWNrb3V0IGFuIHdhciBhbmQgYWN0IG9mIHNhYm90YWdlLi4gCkluIHRoZSBsYXRlIDE5ODBzLCB3aGVuIGdsb2JhbGlzYXRpb24gc3BhcmtlZCBpbnRlcm5hdGlvbmFsIGNvbXBldGl0aW9uLCBpdCBiZWNhbWUgbW9yZSBkaWZmaWN1bHQgdG8gdXBncmFkZSBpbmR1c3RyaWVzIHVzaW5nIHRoZSBoaWdoIHdhZ2UgcG9saWN5LiBJbiBvdGhlciB3b3JkcywgZmFpbHVyZSB0byBzZWl6ZSBvcHBvcnR1bml0aWVzIGVhcmx5IGxlZCB0byBhIGRvdWJsaW5nIG9mIGNvc3RzLgpBcyBhbiBhZHVsdCwgSSBsZWFybmVkIHRvIG1hbmFnZSBpdCBidXQgSSBhbHNvIGNyZWRpdCBpdCB3aXRoIGhlbHBpbmcgbWUgYmVjb21lIGEgcmVhbGx5IHNlbGYgc3VmZmljaWVudCBwZXJzb24uIEkgZGlzbGlrZSBoYXZpbmcgdG8gYXNrIG90aGVyIHBlb3BsZSB0byBoZWxwIG1lIHdpdGggcHJvYmxlbXMgc28gSSB1c3VhbGx5IHdpbmQgdXAgc29sdmluZyB0aGVtIG15c2VsZi4gSSBhbHNvIGFtIHBlcmZlY3RseSBoYXBweSBsaXZpbmcgYWxvbmUgd2hpY2ggaSB0aGluayBvdGhlcnMgbWlnaHQgZmluZCBsb25lbHkuCkxvYm8gICB0aGUgZWFyIGxvYmUgKG9yIGEgbG9iZSBvZiBhIGxpdmVyKQoxIHBvaW50ICBzdWJtaXR0ZWQgMiBtb250aHMgYWdvRXZlcnkgYWNoYXJ5YSwgd2hlbiB0aGV5IGFwcGVhciBpbiB0aGlzIHdvcmxkLCBwcmVhY2ggdGhlIG1lc3NhZ2UgYWNjb3JkaW5nIHRvIHRoZSB0aW1lIGFuZCBjaXJjdW1zdGFuY2UgYW5kIHVuZGVyc3RhbmRpbmcgb2YgdGhlIHBlb3BsZS4gVGhpcyBpcyBsaWtlbmVkIHRvIGEgYnVkZGluZyBmbG93ZXIuIFRoZSBzZWVkcyBtdXN0IGZpcnN0IGJlIHNvd24sIGFuZCB0aGVuIHRoZSByb290cyBtdXN0IHRha2UgaG9sZCwgYW5kIHRoZW4gdGhlIGZsb3dlciBtdXN0IGJ1ZCBhbmQgdGhlbiBmaW5hbGx5IGJsb3Nzb20uIApIaWdobGlnaHRzIG9mIFNlcnZpY2UgUGFjayA2LjEgU1AgNi4wIGFuZCBidWlsZCA2MTUxOi4gTWFuYWdlZW5naW5lIGFkbWFuYWdlciBwbHVzIGNyYWNrLiAKQWxsIHRoZXNlIG1pbiB3YWdlIHJhaXNlcyBkaWQgd2FzIGJyaW5nIHBlb3BsZSB1cCB0byBpbmZsYXRpb24uIEFuZCBpZiB0aGVpciBsYWJvdXIgaGFzbiBjaGFuZ2VkIHRoZW4gaXQgbWFrZXMgc2Vuc2UgdG8ga2VlcCB0aGVtIGF0IHRoZSBzYW1lIGJ1eWluZyBwb3dlci4uIApNb3JlIEFydGljbGVzIENhc2lub3MgaW4gRXNwYW5vbGEsIE5ldyBNZXhpY28gVGhlIEhpc3Rvcnkgb2YgdGhlIExhcyBWZWdhcyBHb2xkZW4gTnVnZ2V0IENhc2lubyBCdWNreSdzIEFyaXpvbmEgSG90ZWwgQ2FzaW5vIEhvdyB0byBCZWF0IHRoZSBPZGRzIGluIExhcyBWZWdhcyBDYXNpbm9zIFJvY2thYmlsbHkgQmFycyBpbiBUZW1wZSwgQXJpem9uYSBEb3dudG93biBWZWdhcyBDYXNpbm9zClB1bmlzaGluZyBzb21lb25lIGJ5IHRha2luZyBhd2F5IHRoZWlyIGNvbm5lY3Rpb24gdG8gaW5mb3JtYXRpb24gLiB5b3Ugbm90IG9ubHkgcmVtb3ZpbmcgdGhlaXIgc29jaWFsaXphdGlvbiwgYnV0IHRoZWlyIGxpYnJhcnkuClRoZSBwbGF5ZXJzIHRoZW4gYnJpbmcgb25lIGhhbmQgZm9yd2FyZCBhbmQgc2ltdWx0YW5lb3VzbHkgcmV2ZWFsIHRoZSBjb250ZW50cy4gTm8gY2hpcCBkZWNsYXJlcyBmb3Igb25lIGNoaXAgbWVhbnMgYW5kIHR3byBjaGlwcyBtZWFucyBib3RoLiBBIEhJR0ggTE9XIGRlY2xhcmF0aW9uIG11c3Qgd2luIGJvdGggcG90cyBvdXRyaWdodCBvciBoZSBwbGF5ZXIgbG9zZXMgZXZlcnl0aGluZy4uIApUaGV5IGxvb2tlZCBsb2NrZWQgaW50byBmb3VydGggcGxhY2UgaW4gdGhlIFdlc3Rlcm4gQ29uZmVyZW5jZSBmb3IgYSB3aGlsZSwgYnV0IGlmIFNhdWx0IFN0ZS4gTWFyaWUgZmFsdGVycyBkdXJpbmcgdGhlIG5leHQgd2VlayBhbmQgYSBoYWxmLCB0aGV5IGNvdWxkIGp1bXAgaW50byB0aGlyZC4gQXQgbGVhc3QgdGhleSBoYXZlIGFscmVhZHkgbG9ja2VkIHVwIGhvbWUgaWNlIGFkdmFudGFnZSBpbiB0aGUgZmlyc3Qgcm91bmQsIHdoZXJlIHRoZXkgd2lsbCBiZSBhIGZvcm1pZGFibGUgZm9lLi4gCkNvbW1lIG5vdXMgYXZvbnMgZXUgbGFyZ2VtZW50IGwgZGUgbGUgY29uc3RhdGVyIGRhbnMgbGEgcGFydGllIHF1aSBwcmNkZSwgbCBzIGF1IGZpbCBkZXMgc2ljbGVzIGV0IGRlcyBtaWxsbmFpcmVzLCByZWxhdGl2ZW1lbnQgcGV1IHBlbmNoIHN1ciBsYSBxdWVzdGlvbiBkZXMgdmVydHVzIG1kaWNpbmFsZXMgZGUgbGEgZGF0dGUuIApIZSBpcyBwcmVjZWRlZCBpbiBkZWF0aCBieSBoaXMgZmF0aGVyLCBKb2huIFBvcG92LCBhZ2UgODkgb2YgQnJhZGVudG9uLCBGTCAoZGllZCBTZXB0ZW1iZXIgMTcsIDIwMTQpLCBtYXN0ZXIgcGhvdG9ncmFwaGVyIGJvcm4gaW4gWXVnb3NsYXZpYSB3aG8gYnJvdWdodCBoaXMgZmFtaWx5IHRvIHRoZSBVUyBpbiAxOTYzLiAKVGhlIHBvdGVudGlhbCBwb3NpdGl2ZSBmb3IgdGhlIHBva2VyIHdvcmxkIGF0IGxhcmdlIGlzIGJlY2F1c2Ugb2YgaW5jcmVhc2VkIGNvbXBldGl0aW9uIGluIHRoZSBtYXJrZXQuIEluIHRoZSBsYXN0IHNldmVyYWwgeWVhcnMsIHBva2Vyc3RhcnMgaGFzIG1hZGUgYSBudW1iZXIgb2YgY2hhbmdlcyB3aGljaCBoYXZlIGluY3JlYXNlZCB0aGVpciBib3R0b20gbGluZSBhdCB0aGUgZXhwZW5zZSBvZiBwbGF5ZXJzIChpbmNyZWFzaW5nIHJha2UsIHJlZHVjaW5nIHJld2FyZHMsIGluY3JlYXNpbmcgcmFrZSBhZ2Fpbiwgc2NyZXdpbmcgb3ZlciBTTkVzLCBpbmNyZWFzaW5nIHJha2Ugc29tZSBtb3JlLCBldGMpLiAKRmFrZSBwaG9uZXMgY2FsbHMgYW5kIGVtYWlscyB0aGF0IHRyaWNrIHlvdSB0byBzd2luZGxlIG1vbmV5IGFyZSBjb250aW51aW5nLiAKSmF5d2Fsa2luZyBoYXBwZW5zLiBUaGVyZSBhcmUgZ3V5cyB3aG8gYXJlIGdvaW5nIHRvIGRhbmNlIGFyb3VuZCBpbiB0aGUgbWlkZGxlIGEgYnVzeSBpbnRlcnNlY3Rpb24gdW50aWwgdGhleSBnZXQgdGlja2V0cy4gQXJlIHRoZXkgd3JvbmcgaWYgdGhleSBiaXRjaCBhYm91dCBldmVyeWJvZHkgZWxzZSBub3QgZ2V0dGluZyB0aWNrZXRzPwpXYXRlciBpcyB0ZWNobmljYWxseSBwYXJ0IG94eWdlbi4gRGVwZW5kaW5nIG9uIGhvdyBoYXJkIGl0IGlzIHRvIGJyZWFrIHRoZSBhdG9tIGJvbmQgb2Ygd2F0ZXIgYW5kIGhvdyBveHlnZW4gaXMgb2J2aW91c2x5IHBhcnQgb2YgdGhlIGFpciwgdGVjaG5pY2FsbHkgeW91IHdvdWxkIGJlIGFibGUgdG8gYmVuZCB3YXRlciBieSBtYW5pcHVsYXRpbmcgdGhlIG94eWdlbiBhdG9tcy4gR2l2aW5nIHlvdSBhY2Nlc3MgdG8gMiBlbGVtZW50cy4KRG93bmxvYWQgQ2FydGVnZ2lvIGZyZWUgcGRmICwgRG93bmxvYWQgQ2FydGVnZ2lvIFBkZiAsIFJlYWQgT25saW5lIENhcnRlZ2dpbyBwZGYgLCBGcmVlIC4gCkFjY29yZGluZyB0byB0aGUgdG91cmlzbSBvZmZpY2UgaGVyZSBpbiBWb2x0ZXJyYSwgbXkgZmFtaWx5IGFuZCBJIGFyZSBoYXJkbHkgdGhlIG9ubHkgVHdpbGlnaHQgdG91cmlzdHMuIEZhY3QsIHRoZXkgYXR0cmlidXRlIG9uZSBvdXQgb2YgZm91ciB2aXNpdG9ycyB0byB0aGlzIGNpdHkgYXMgVHdpbGlnaHRlcnMuIApBIFBha2lzdGFuaSBzb3VyY2UgcmV2ZWFsZWQgdGhlIG1lZXRpbmcgYmV0d2VlbiBNb2RpIGFuZCBTaGFyaWYgd2FzIHNvIGNvcmRpYWwgdGhhdCBkdXJpbmcgdGhlaXIgYWxtb3N0IDUwIG1pbnV0ZSBjb252ZXJzYXRpb24sIHRoZXJlIHdhcyBubyBtZW50aW9uIG9mIGFueSBzdWJzdGFudGl2ZSBtYXR0ZXIuIEJ1dCB0aGVuIGl0IHdhcyBub3QgYW4gb2NjYXNpb24gZm9yIHN1YnN0YW50aXZlIGRpc2N1c3Npb24uLiAKQW5vdGhlciBhc3BlY3Qgb2YgdGhlIGdhbWUgaXMgcm95YWx0aWVzLCB3aGljaCBhcmUgYXV0b21hdGljIHJld2FyZHMgZm9yIG1ha2luZyBjZXJ0YWluIHR5cGVzIG9mIGhhbmRzLCBzdWNoIGFzIHN0cmFpZ2h0IGZsdXNoZXMuCkkgd2FudGVkIHRvIHdyaXRlLiAKVGhpcyBpc24gaGlzdG9yeSBjbGFzczsgT1AgZG9lc24gbmVlZCBhbiBhc3RlcmlzayBhbmQgZm9vdG5vdGUgZXhwbGFpbmluZyB0aGF0IEdhbWUgRnJlYWsgbWF5IGhhdmUgZ290dGVuIE5hcG9sZW9uIGhlaWdodCB3cm9uZy5YeXJkICAyIHBvaW50cyAgc3VibWl0dGVkIDEzIGRheXMgYWdvSSBkb24ga25vdyBpZiBhbnkgb2YgdGhpcyB3aWxsIGhlbHAgYXQgYWxsLCBidXQgSSBhIGRhZCB3aXRoIHR3byBraWRzIChuZXdib3JuIGRhdWdodGVyIGFuZCB0b2RkbGVyIHNvbikgYW5kIEkgcmVhbGl6aW5nIHRoYXQgSSBnb2luZyB0byBoYXZlIHR3byBtYWpvciBjaGFsbGVuZ2VzIGFzIGEgcGFyZW50IHRoYXQgSSBoYXZlIHplcm8gdHJhaW5pbmcgb24gaG93IHRvIGRlYWwgd2l0aC5UaGUgZmlyc3QuIApMaWtlIGFsbCBvZiB0aGVtLiBTaGUgYSBmYXN0IGxlYXJuZXIuIFNoZSBpbmRlcGVuZGVudC4gCkl0IHNhdmVzIGEgbG90IG1vcmUgb2YgdGhlIGluZm9ybWF0aW9uIGNhcHR1cmVkIGJ5IHRoZSBjYW1lcmEuIApIZSB3b3VsZCByZWNlaXZlICQxLDg5MCBwZXIgbW9udGggZnJvbSBhIGRlZmluZWQgYmVuZWZpdCBwZW5zaW9uIGFuZCAkODAwIHBlciBtb250aCBmcm9tIGEgZm9yZWlnbiBwZW5zaW9uLi4gCk5ldmVyIHNob3cgeW91ciBoYW5kIGlmIHlvdSB3aW4gcmVmZXJzIHRvIG5vdCBzaG93aW5nIHlvdXIgaGFuZCBpZiB5b3UgYmV0LCBhbmQgZXZlcnlvbmUgZWxzZSBmb2xkcy4gSW4gdGhhdCBjYXNlLCB5b3Ugd2luIG5vIG1hdHRlciB3aGF0IHRoZSBjb21tdW5pdHkgY2FyZHMgKHRoZSBmaXZlIGNhcmRzIGluIHRoZSBtaWRkbGUgb2YgdGhlIHRhYmxlKSBhcmUuIApZb3UgY291bGQgcmVmdXNlIHRvIGNvb3BlcmF0ZSB3aXRoIHRoZSBpbnZlc3RpZ2F0aW9uLCB3aGljaCBsb3RzIG9mIHZpY3RpbXMgb2YgYWJ1c2UgZG8sIGJ1dCB0aGV5IG1pZ2h0IHN0aWxsIGNvbnRpbnVlLiBJZiB0aGF0J3MgdHJ1ZSwgdGhleSBtaWdodCBmaW5kIG91dCBob3cgbWVudGFsbHkgaWxsIHNoZSByZWFsbHkgaXMgYW5kIGdldCBoZXIgdHJlYXRtZW50Li4gCkFzIGZhciBhcyBsaXZlIHBva2VyIGdhbWVzIGFyZSBjb25jZXJuZWQsIG5ldyBwb2tlciByb29tcyBhcmUgb3BlbmluZyBjb25zdGFudGx5IGFsbCBvdmVyIHRoZSB3b3JsZC4gTGV0IG1lIGV4cGxhaW4gaG93IFlvdSBjYW4gc3RhcnQgcGxheWluZyBwb2tlciBhdCByZWFsIG1vbmV5IHRhYmxlcyB3aXRob3V0IG1ha2luZyBhIGRlcG9zaXQgeW91cnNlbGYuIApIZSBrbm93cyB0aGF0IHRoZSBib3dsZXIgd2lsbCBiZSBzd2VhdGluZyBqdXN0IGFzIG11Y2ggYXMgaGltIHRoZSBjbG9zZXIgdGhleSBnZXQgdG8gdGhlIGZpbmlzaCBsaW5lLCBhbmQgaXMganVzdCBhcyBsaWtlbHkgYXMgdGhlIGJhdHNtYW4gdG8gbG9zZSBoaXMgbmVydmUgYW5kIGJvd2wgYSBsb29zZSBiYWxsLiAKSSB3aWxsIG5ldmVyIGZvcmdpdmUgdGhlIGp1c3RpY2Ugc3lzdGVtIGluIHRoZSBVUywgaXQgaGFzIHNldmVyZWx5IGxldCBtZSBkb3duLiBUaGlzIGRvZXMgbm8gdGVhY2ggYSBsZXNzb24gd2hhdHNvZXZlci4gVGhpcyBndXkgbGl2ZXMgaGlzIGVudGlyZSBsaWZlIGFzIGEga2luZyBmdWNraW5nIG92ZXIgYW5kIGFpZGluZyB0aGUgaW5kaXJlY3QgYW5kIGRpcmVjdCBzbGF1Z2h0ZXIgb2YgcGVvcGxlIG9ubHkgdG8gc2xpZ2h0bHkgZ2V0IHB1bmlzaGVkIHRvd2FyZHMgdGhlIGVuZCBvZiBoaXMgbGlmZS4gClRoZSBzaG93IHdhcyBzb21ldGhpbmcgb2YgYSBsYWJvdXIgb2YgbG92ZSBmb3IgRGF3c29uLCB3aG8gc2FpZCB0aGUgcGF5IGJhcmVseSBjb3ZlcmVkIHBldHJvbCB0byBnZXQgdGhlIHN0dWRpby4iSXQgd291bGQgYmUgZ3JlYXRpZiB0aGVyZSB3YXMgYSB3ZWxsIHJlc291cmNlZCBsb2NhbCBib29rIHNob3cgb24gZnJlZSB0byBhaXIgVFYsIGJ1dCBtYWluc3RyZWFtIFRWIGlzIHNpbXBseSBub3QgaW50ZXJlc3RlZCwiIERhd3NvbiBzYWlkLiAKIlBldHMgTWFydCB3YXMgZWFnZXIgdG8gZ2V0IGludm9sdmVkIHRoaXMgeWVhciwgdGhlIEJvbWIgU3F1YWQgY2FtZSBvbiBib2FyZCBhcyB3ZWxsLiAKQ2hyaXN0aW5hIGNvbnRpbnVlcyB0byBjb21tZW50IGluIGJldHdlZW4gaGFuZHMsICJXaG8gaXMgcG9rZXI/IFBva2VyIGlzIGFueW9uZSBpbiBhbnkgY291bnRyeSwgYW55IGN1bHR1cmUsIGFsbCBhZ2VzLiAKSWYgeW91IGRvbiBtaW5kLCBkbyB5b3UgaGF2ZSB0aG91Z2h0cyBpZiB3ZSB3ZXJlIGRlZXBlciBzdGFja2VkICAgbGV0IHNheSBJIGhhZCBkb3VibGUgdGhhdCAkODAwIGF0IHRoZSBzdGFydCBvZiB0aGUgaGFuZC4gQWZ0ZXIgSSBjYWxsIGhpcyAkNzUgbGVhZCwgSSB3b3VsZCBoYXZlICQ3MDAgbGVmdCBhbmQgSSByYWlzZSB0byAkMjAwIGxldCBzYXkuIFRoYXQgbGVhdmVzIG1lICQ1MDAgd2l0aCBhIHBvdCBzaXplIG9mICQ0ODAgYmVmb3JlIGhlIGNhbGxzLiAKTm90IHdvcnRoIGl0LiBEZW50YWwgaW5zdXJhbmNlIGNvdmVycyBhIG1heCBvZiAkMTAwMCAxNTAwLCBpZiB5b3UncmUgbHVja3kgeW91IGNhbiBmaW5kIGEgcGxhbiB3aXRoICQyNTAwL21heC4gV2l0aCB0aGUgbGltaXRhdGlvbnMgaW5zdXJhbmNlIGNvbXBhbmllcyBwbGFjZSBvbiBzZWNvbmRhcnkgaW5zdXJhbmNlLCB5b3UnZCBiZSBiZXR0ZXIgb2ZmIGZsdXNoaW5nIG1vbmV5IGRvd24gdGhlIHRvaWxldC4gTW9zdCBzZWNvbmRhcnkgcGxhbnMgaGF2ZSB3aGF0J3MgY2FsbGVkIGEgbm9uIGR1cGxpY2F0aW9uIG9yIG5vbiBjb29yZGluYXRpb24gb2YgYmVuZWZpdHMsIG1lYW5pbmcgaWYgeW91ciBwcmltYXJ5IHBheXMgbW9yZSB0aGFuIHRoZSBhbGxvd2VkIGFib3V0IG9mIHRoZSBzZWNvbmRhcnksIHNlY29uZGFyeSB3aWxsIHBheSBub3RoaW5nLiBZb3UncmUgYmV0dGVyIG9mZiBvcGVuaW5nIGEgaGVhbHRoIHNhdmluZ3MgYWNjb3VudCAodGF4IGZyZWUpIHdpdGggYSBiYW5rLgpUaGVzZSB0ZWNobm9sb2dpZXMgaGF2ZSB0byBiZSBkZXZlbG9wZWQgZnVydGhlciBhbmQgeW91IGNhbiBvbmx5IGRvIHRoYXQsIGluY2x1ZGluZyBpbmR1c3RyaWFsIHByb2Nlc3NlcyB0byByZWR1Y2UgY29zdHMsIGJ5IHNlbGxpbmcgdGhlbS4gQ0VPIE1hcnRpbiBXaW50ZXJrb3JuIHNhaWQgb25lIGtleSB0byBnZXR0aW5nIHRoZSBoeWJyaWQgYW5kIGVsZWN0cmljIG1hcmtldCBtb3ZpbmcgaXMgcmVkdWNpbmcgdGhlIGNvc3Qgb2YgdGhlIG1vc3QgZXhwZW5zaXZlIGVsZW1lbnQgdGhlIGJhdHRlcnkuIApIaXMgd2lmZSBzdGFydGVkIHNjcmVhbWluZyBibG9vZHkgKG5vIHB1biBpbnRlbmRlZCkgbXVyZGVyLCBhbmQgSSBkaWRuJ3QgcmVhbGx5IGtub3cgd2hhdCB0byBkby4gSSB3YXMgOCwgYW5kIGNhbid0IHN0cmVzcyBob3cgbG91ZCBhbmQgdW51c3VhbCB0aGUgbm9pc2Ugd2FzLiBJdCBqdXN0IGZlbHQgZ2VudWluZWx5IG91dCBvZiBwbGFjZS4gCkkgZmluZGluZyB0aGF0IGkgbmVlZCB0byBiZWNvbWUgdGhpcyBoZWFsZXIgYW5kLCBpbiBvcmRlciB0byBkbyB0aGlzLCBpIG5lZWQgdG8gaGVhbCBteXNlbGYuIEkgbmVlZCB0byBmYWNlIG15IG93biBmZWFycywgbXkgb3duIGFkZGljdGlvbnMsIG15IG93biBhcGF0aHkgYW5kIGlnbm9yYW5jZSwgYW5kIGN1bHRpdmF0ZSB0aGUgZ29vZDogZXRoaWNzLCBvYmVkaWVuY2UsIGRpc2NpcGxpbmUsIGFuZCBvdGhlciBxdWFsaXRpZXMgaSBjb3VsZCBwcm9iYWJseSBnbyBvbiBhYm91dC4gRm9yIGV4YW1wbGUsIHNoaWF0c3UgaXMgYSBoYXJkIG5vLCBhcyBpcyBlbmVyZ3kgd29yayBhbmQgeW9nYSBpbnN0cnVjdGlvbi4gCk5ldyBjYXJkcyBhcmUgYWRkZWQgdG8geW91ciBkZWNrIGJ5IHBpY2tpbmcgdGFsZW50cy4gCkkgYSBiaXQgd2VpcmQgaW4gaG93IEkgcGxheSBGVEwuIApLam1hcnRpbjQyNyAgMSBwb2ludCAgc3VibWl0dGVkIDEgbW9udGggYWdvCk1hbiwgaSBhbSBub3Qgc2F5aW5nIHN0ZXJlb3R5cGVzIGFyZSBjb3JyZWN0LCBidXQgb25lIGhhdmUgdG8gdW5kZXJzdGFuZCBpdCBpcyBhbiB1bmF2b2lkYWJsZSBwaGVub21lbm9uLiBUaGVzZSAic3RlcmVvdHlwZXMiIGNhbiBiZSB0cmFjZWQgYmFjayB0byBjdWx0dXJhbCBkaWZmZXJlbmNlcyAoY2hlY2sgdGhlIGZhbW91cyBIb2ZzdGVkZSBjdWx0dXJhbCBkaW1lbnNpb25zIGluIG51bWVyb3VzIHBzeWNob2xvZ3kgc3R1ZGllcyksIG9yIG5vd2FkYXlzIGJ5IG9ubGluZSBpbmZvcm1hdGlvbi4gClllcyB5b3UgaGF2ZSB0byByZWFkLiAKQnV0IEkgbG92ZSB0byBoaXQgZG93bnRvd24gYW5kIHN0dW1ibGUgb3IgTHlmdCBob21lIGxhdGUsIGFuZCBJIGZlZWwgbGlrZSBJIGNoZWF0aW5nIGJlY2F1c2UgSSBnZXQgdGhlIGJlc3Qgb2YgYm90aCB3b3JsZHMgYnkgbGl2aW5nIGluIGEgcGVhY2VmdWwgbmVpZ2hib3Job29kIHdoaWxlIHN0aWxsIGhhdmluZyBncmVhdCBhY2Nlc3MgdG8gZG93bnRvd24uLiAKVGhpcyBhZGRzIHRvIDEuIApEaXJlY3RvciBHcmFmIGluamVjdHMgYSB1bmlxdWUgZG9zZSBvZiBodW1vciBhbmQgY2hhcmFjdGVyIGRldGFpbCB0aGF0IHByb2JlcyBkZWVwIGludG8gdGhlIGFtYml2YWxlbnQsIGFsbW9zdCBteXN0ZXJpb3VzIGhpc3Rvcnkgc3Vycm91bmRpbmcgSm9oYW5uYSBhbmQgVmVyYSdzIGZyaWVuZHNoaXAuIApJJ2QgZ2l2ZSBpdCBhIGZldyBkYXlzLCBpZiBpdCdzIGJydWlzZWQgaW50ZXJuYWxseSBpdCdzIGdvaW5nIHRvIHN0aW5nIGluIHRoZSBhcmVhIHdpdGggcHJlc3N1cmUuICgoSHVncykpIG5lZWRsZXMgc3Vjay4uIApUaWNrZXQgdG8gUnlkZVRoZSBzZWNvbmQsIHNtYWxsZXIgdHJhbnNwb3J0IGh1YiBvZiB0aGUgZXZlbnQgaXMgbG9jYXRlZCBvdXRzaWRlIHRoZSBJc2xlIG9mIFdpZ2h0IEJ1cyBNdXNldW0gaW4gUnlkZS4gRm9ybWVkIGluIDE5OTcsIHRoZSBtdXNldW0gY29udGFpbnMgbWFueSBleGhpYml0cyBhbmQgb3ZlciAyMCB2ZWhpY2xlcyBjb3ZlcmluZyBhIDExMCB5ZWFyIHBlcmlvZC4gClBlb3BsZSBqdXN0IGRvbiBwbGFuIGZvciBzZXRiYWNrcy4gWWVzLCBJIGNvdWxkIGFmZm9yZCBhIG5pY2VyIGhvdXNlLiBidXQgSSBmZWVsIG11Y2ggbW9yZSBjb21mb3J0YWJsZSBhZGRpbmcgdG8gc2F2aW5ncyBldmVyeSBtb250aC4gRG8gSSBwbGFuIG9uIGxvc2luZyBteSBqb2I/IE5vLCBidXQgdGhhdCBkb2VzbiBtZWFuIEkgc2hvdWxkbiBwbGFuIGZvciB0aGUgc2NlbmFyaW8uCklubm92YXRpb246IGxvb2sgZm9yIGdhbWVzIHN1cHBsaWVycyB0aGF0IGluY2x1ZGUgdW5pcXVlIGZlYXR1cmVzIGluIHRoZWlyIHByb2R1Y3RzLiBGb3IgZXhhbXBsZSB0aGUgb25saW5lIHBva2llcyB3b3VsZCBoYXZlIGV4Y2l0aW5nIG5ldyBib251cyBnYW1lcyBhbmQgdGFibGUgZ2FtZXMgbGlrZSBibGFja2phY2sgd291bGQgaGF2ZSBkaWZmZXJlbnQgdHlwZXMgb2Ygc2lkZSBiZXRzLgpTdXJlIHRoZXkgbWF5IGxvb2sgdGhlIHNhbWUgb3IgZXZlbiB0YXN0ZSB0aGUgc2FtZSwgYW5kIHRoZSBsYWJlbHMgYXJlIGxpa2VseSB0byBjb250YWluIHNpbWlsYXIgKGlmIG5vdCBpZGVudGljYWwpIGxpc3RzIG9mIGtleSBpbmdyZWRpZW50cy4gCkF1YnVybiBVbml2ZXJzaXR5IGlzIGNvbW1pdHRlZCB0byBtYWtpbmcgb3VyIHdlYnNpdGVzIGFjY2Vzc2libGUgdG8gYWxsIHVzZXJzLCBpbmNsdWRpbmcgdGhvc2UgdGhhdCB1c2UgQXNzaXN0aXZlIFRlY2hub2xvZ3kuIFdoZW4gZGV2ZWxvcGluZyBvdXIgd2VicGFnZXMsIEF1YnVybiBVbml2ZXJzaXR5IHVzZXMgdGhlIHN0YW5kYXJkcyBhbmQgYmVzdCBwcmFjdGljZXMgZGVmaW5lZCBieSBXQ0FHIDIuMCBhbmQgU2VjdGlvbiA1MDggb2YgdGhlIFJlaGFiaWxpdGF0aW9uIEFjdC4gSWYgeW91IHNob3VsZCBlbmNvdW50ZXIgYW55IGFjY2Vzc2liaWxpdHkgaXNzdWVzIHdpdGggb3VyIHdlYnNpdGUsIHBsZWFzZSBsZXQgdXMga25vdy4gClZpY3RvcmlhbiByZXNlYXJjaCBvbiBwb2tpZXMgY2VudHJlZCBvbiBJbGxhd2FycmEgY2hpbGRyZW4KQW5kIGFzaWRlIGZyb20gaXRzIGZ1biBhbmQgdGhyaWxsaW5nIGZhY3RvciwgcG9rZXIgYW5kIG9ubGluZSBwb2tlciBjYW4gbWFrZSB5b3UgZWFybiBtb25leSEuIApFRElUOiBBdCBmaXJzdCBJIGZvdW5kIGl0IGZ1bm55LCBidXQgbm93IEkgYSBiaXQgd29ycmllZC4gVGhpcyBzYXlpbmcsIGluIGEgZmV3IGRpZmZlcmVudCBmb3JtcywgaXMga25vd24gZXZlcnl3aGVyZSBvdGhlciB0aGFuIHRoZSBVUywgYW5kIHVzdWFsbHkgcGVvcGxlIGtub3cgdG8gYXR0cmlidXRlIHRoZSBvcmlnaW5hbCBmb3JtIHRvIFZvbHRhaXJlLiBBcHBhcmVudGx5IG1vc3Qgb2YgbXkgZmVsbG93IEFtZXJpY2FucyBhY3R1YWxseSByZWFsbHkgdGhvdWdodCBmb3IgcmVhbCB0aGF0IGl0IGNvbWVzIG9yaWdpbmFsbHkgZnJvbSBTcGlkZXJtYW4/PyBGcmllbmRzLCB3ZSByZWFsbHkgc2hvdWxkIHN0b3Agc3Vic3RpdHV0aW5nIEhvbGx5d29vZCBmb3Igb3VyIHB1YmxpYyBzY2hvb2wgc3lzdGVtLi4gCldvdWxkIGl0IGhhdmUgbWFkZSBhIGRpZmZlcmVuY2U/IENhdGVnb3JpY2FsIG5vLiAKSG93ZXZlciwgSSBkbyBmaW5kIHRoZSAicnVsZSIgb2YgY2xvc2luZyB0aGUgc2hhZGVzIHZlcnkgdW5mYWlyLiAKSXQgZmVlbHMgbGlrZSBoZSdzIHNwZW50IHRoZSBwcmltZSBvZiBoaXMgY2FyZWVyIGFsdGVybmF0aW5nIGJldHdlZW4gdHJhY3Rpb24gYW5kIHJlaGFiLiAKTm90aGluZyBpIHNheSBjb250cmFkaWN0cyB0aGlzLiBXaXRoIEYyUHMsIGl0IGNvbW1vbiB0byBzYWNyaWZpY2Ugb3IgYXQgbGVhc3QgZGVsYXkgc29tZSBvZiB0aGUgZ2FtZXBsYXkgcXVhbGl0eSBmb3IgdGhlIHNha2Ugb2YgaXQgYmVpbmcgZnJlZSwgYnV0IHRoZSByZXN0cmljdGVkIGNvbG9yIHBhbGV0dGUgc2V2ZXJlbHkgbGltaXRzIHRoZSBjdXN0b21pemF0aW9uIGRpc3Byb3BvcnRpb25hdGVseSB0byBob3cgaXQgdWF1TExZIElBLiBZb3UgbWlnaHQgYXMgd2VsbCBub3QgZXZlbiBib3RoZXIgd2l0aCBpdCBiZWZvcmUgeW91IGhhdmUgdGhlIGZpcnN0IHBhbGV0dGUuIApTaGUgc2hvd3MgdGhlIHNjYXJzIHRvIHByb3ZlIGl0LndhcyBiZWF0IHVwIGV2ZXJ5IGRheSBoZSB3YXMgYXJvdW5kLCBiZWNhdXNlIGhlIGJsYW1lZCBtZSBtb3N0IGZvciBvdXIgdHJvdWJsZXMuIApTbyBJIHBsYXllZCBwb2tlciBhIGZldyB0aW1lcyAoYW4gYWxsIHdvbWVuIGdyb3VwKSwgYW5kIEkgc2VlbiBpdCBwbGF5ZWQgb24gdGVsZXZpc2lvbiBhbmQgc2l0Y29tcywgYW5kIG15IGltcHJlc3Npb24gaXMgdGhhdCBpdCBhIHF1aWV0IGdhbWUuIE5vdCBtdWNoIHRhbGtpbmcsIGFsbW9zdCBubyBsYXVnaGluZy4gRXZlbiBpZiBmb2xrcyBhcmUgcGxheWluZyBmb3IgbW9ub3BvbHkgYnVja3Mgb3IgcXVhcnRlcnMgKGluIHRoZSBncm91cCBJIHBsYXllZCB3aXRoKSwgdGhlIGdlbmVyYWwgbWllbiBpcyBwcmV0dHkgc2VyaW91cy4iSSBzZWVtIHRvIHJlYWxseSBzdHJ1Z2dsZSB0byBtYWtlIGZyaWVuZHMgYW5kIEkgbm90IHN1cmUgd2h5LiJzYW1lIGhlcmUsIHlvdSBkZWZpbml0ZWx5IG5vdCBhbG9uZS4gCkF1am91cmQgbCBuIHBsdXMgcXVlIGxlIGRhdHRpZXIgZXN0IGwgZnJ1aXRpZXIgbGUgcGx1cyBhbmNpZW5uZW1lbnQgY3VsdGl2OiBjZWxhIHNlIHBhc3NhaXQgZW50cmUgbGUgVGlncmUgZXQgbCBpbCB5IGEgZGUgY2VsYSA1ICA2MDAwIGFucy4gTGVzIFN1bXJpZW5zIGZ1cmVudCBkb25jIGxlcyBwcmVtaWVycyBjdWx0aXZhdGV1cnMgZGUgbGEgZGF0dGUsIGJpZW4gYXZhbnQgcXUgZXQgQmFieWxvbmllbnMgbmUgbHVpIG9jdHJvaWVudCBsZSBzdGF0dXQgZCBzYWNyLiAKRkxBU0ggRUZGRUNUIG9mIGEgaHlkcm9nZW4gYm9tYiAxLDAwMCB0aW1lcyBtb3JlIHBvd2VyZnVsIHRoYW4gcHJlc2VudCBib21icyB3b3VsZCBiZSByZWxhdGl2ZWx5IGdyZWF0ZXIgdGhhbiBpdHMgYmxhc3QgZWZmZWN0LiBUaGUgSGlyb3NoaW1hIGJvbWIgY2F1c2VkIGZhdGFsIGJ1cm5zIGF0IGRpc3RhbmNlcyB1cCB0byA0LDAwMCB0byA1LDAwMCBmZWV0IChzbWFsbCBjaXJjbGUpLiBBIGh5ZHJvZ2VuIGJvbWIgd291bGQgY2F1c2UgZmF0YWwgYnVybnMgYXQgZGlzdGFuY2VzIG9mIDIwIG1pbGVzIG9yIG1vcmUgKGxhcmdlIGNpcmNsZSkuIFRoZSBpbmhhYml0YW50cyBvZiBDaGljYWdvIGFuZCBpdHMgc3VidXJicyBjb3VsZCB0aHVzIGJlIHdpcGVkIG91dC4KVGhhdCB3aGVyZSBJIHN0YXJ0ZWQgVFdJQ0UgICB0aGUgZmlyc3QgdGltZSBhdCAxIGNlbnQgMiBjZW50IG9uIFBva2VyU3RhcnMgYW5kIHRoZSBzZWNvbmQgdGltZSBhdCAyIGNlbnQgNCBjZW50cyBvbiBDYXJib24uIApMaXRlcmFsbHkgbm9uZSBvZiB5b3VyIHBvaW50cyBhcmUgdG91Y2hpbmcgb24gYW55IG9mIG1pbmUuIFlvdSBkb24gc2VlbSB0byBiZSBhYmxlIHRvIGFyZ3VlIHRoZSBpZGVvbG9naWVzIGJ1dCBvbmx5IHRoZSBlZmZlY3Qgb2YgdGhlIGlkZW9sb2dpZXMuIFlvdSBzZWVtIHRvIHRoaW5rIHRoZXkgYXJlIHNvbWUgaG93IHN5bm9ueW1vdXMgd2hpY2ggSSBkb24gdW5kZXJzdGFuZCBhdCBhbGwuIApUaGUgbWFuIHRvbGQgd2l0bmVzc2VzIGhlIGhhZCBiZWVuIGhpdCBpbiB0aGUgaGVhZCB3aXRoIGEgaGF0Y2hldCwgb3IgYSBzbWFsbCBheCwgd2hpbGUgaGUgd2FzIGF0IHRoZSBUb3RlbSBNaWRkbGUgU2Nob29sIGNhbXB1cyB3aXRoIGEgbWFuIGFuZCB3b21hbiB3aG8gYXJlIGJvdGggYmVsaWV2ZWQgdG8gYmUgYXJvdW5kIDE5IHllYXJzIG9sZC4KRG9udCB3b3JyeSBhYm91dCBpdCBkdWRlLCBhbGwgdGhlc2UgcGVvcGxlIHN0YXJ0ZWQgb3V0IGFzIGJlZ2luZXJzLCB0aGV5IGFjdHVhbHkgaGF2ZSBubyByaWdodCB0byBnaXZlIHlvdSBzaGl0LCB0aGV5IGhhdmUgYWxsIGJlZW4gaW4gdGhlIHNhbWUgYm9hdCBkdWRlLCBqdXN0IGtlZXAgcGxheWluZyBhbmQgc3R1ZHlpbmcgaGFyZCwgaWYgeW91IHN0dWR5IHdlbGwgdGhlbiB5b3VyIHVuZGVyc3RhbmRpbmcgd2lsbCBldm9sdmUgYWJvdXQgZXZlcnkgeWVhciwgeW91ciB1bmRlcnN0YW5kaW5nIHdpbGwgaW1wcm92ZSwgYXMgZm9yIHN0eWxlcyBpdHMgb2sgdG8gYmV0IG5pdHR5IGluIHlvdXIgdW5kZXJzdGFuZGluZyBpdHMgYSBnb29kIGJhc2UgcG9pbnQgdG8gc3RhcnQgeW91ciBsZWFybmluZyBmcm9tLCBhcyB5b3UgZXZvbHZlIHlvdXIgcGxheSB3aWxsIGJlY29tZSBsb29zZXIgYW5kIG1vcmUgYmFsYW5jZWQsIHVudGlsbCBldmVudHVseSB5b3UgY2FuIGNsYWltIGEgc3R5bGUgdGhhdCBpcyB5b3VycywgeW91IGNhbiAoZ2l2ZW4gZW5vdWdoIGhhcmQgd29yayBhbmQgZGVkaWNhdGlvbikgdHJhbnNlbmQgdG8gYSBzdHlsZWxlc3Mgc3RhdGUgd2hlcmUgeW91IHdpbGwgdGhyaXZlIG9uIHNpdHVhdGlvbnMgYW5kIGdhbWUgdHlwZXMsIHRoZXJlcyBhbG90IG9mIHBlb3BsZSBpbiBwb2tlciB0aGF0IHRoaW5rIHRoZXkgYXJlIHRoZSBkb2dzIGJvbGxvY2tzLCBhbmQgdGhpbmsgdGhleSBoYXZlIHRoZSByaWdodCB0byBhYnVzZSBwZW9wbGUgd2hvbWUgdGhleSB0aGluayBhcmUgbGVzc2VyIHRoYW4gdGhlbXNlbHZlcywgeW91IHdlcmUganVzdCBhc2tpbmcsIGFuZCBpdCB0YWtlcyBhbG90IG9mIGNvdXJhZ2UgdG8gcG9zdCB3aGVuIHlvdXIgbmV3IGFuZCBzb21ldGltZXMgbm90IHN1cmUgb2Ygd2hhdCB5b3VyIGFza2luZyBhYm91dCwgdGhpcyBmb3J1bSBzaG91bGQgYmUgbW9kZXJhdGVkIGFsb3QgaGFyZGVyIGFzIGZhciBhcyBuZXcgcGxheWVycyBhcmUgY29uY2VybmVkLCB0aGV5IGNhbiBkb3dudm90ZSBtZSBhbGwgdGhleSB3YW50IGkgZG9udCBnaXZlIGEgZnVjaywgZnVja2luZyBidWxseSBiYXN0YXJkcyEhLCBhbnl3YXkgYWxsIHRoZSBiZXN0IHRvIHlvdSEhIQpJIGRvbiB0aGluayBzby4gSSBoYWQgYSBmcmllbmQgZnJvbSBDaGluYSBpbiBoaXMgdHdlbnRpZXMsIHdobyBrbmV3IEkgbGl2ZWQgaW4gSmFwYW4sIGFzayBpZiBpdCB3YXMgdHJ1ZSB0aGV5IG1ha2UgYmx1ZSBmaWxtcyB0aGVyZS4gCllvdSBmaWd1cmUgYWZ0ZXIgYWxsIHRoZSB0ZXN0aW5nLCB1c2luZyB2YXJpb3VzIGVxdWlwbWVudCBsaWtlIGFuIE1SSSwgdWx0cmFzb3VuZCwgYSBiaWxsaW9uIGJsb29kIHRlc3RzLCBhIG1lZGljYWwgYmVkIHdpdGggbWVhbHMgZm9yIDQgZGF5cywgYW5kIDMgZGlmZmVyZW50IHRlYW1zIG9mIGRvY3RvcnMgYXNraW5nIGZvciAyNWsgaXMgZmFpcmx5IHJlYXNvbmFibGUgZm9yIHRoZSBob3NwaXRhbC4gCkkgaGF2ZSBhbiB1bmNsZSB3aG8gaXMgYWxtb3N0IDgwLiAKSSBwbGF5ZWQgb24gdGhpcyBvbmUgYSBiaXQgYXQgYSBHdWl0YXIgQ2VudGVyIGFuZCBpdCB3YXMgYSBubyBicmFpbmVyIGZvciB0aGF0IHByaWNlIGZvciBtZS4uIApZb3UgYXJlIG15IGhlcm8uIE9za2VlIFdlZSBXZWUgISBBbmQgdGhlIHBpYW5vIGZhbGxzIHNpbGVudCAuLiAKRG9uJ3QgaGlkZSBiZWhpbmQgdGhlICdjcmltaW5hbHMgdXNlIGlsbGVnYWwgd2VhcG9ucycgYmFycmllciBlaXRoZXI7IHRoZSBleHRyZW1lbHkgbGF4IHZpZXcgb24gZ3VucyBpcyB3aGF0IG1ha2VzIGZpcmVhcm1zIHNvIGVhc3kgdG8gb2J0YWluLCBsZWdhbCBvciBvdGhlcndpc2UKQ29tbXVuaWNhdGUgZnVydGhlciB3aXRoIHRoZSBjb3VydCwiIGhlIHNhaWQuClBha2lzdGFuIHNheXMgaXQgaGFzIGFycmVzdGVkIDQ0IHBlb3BsZSwgaW5jbHVkaW5nIHRoZSBicm90aGVyIG9mIEphaXNoIGUgTW9oYW1tZWQgY2hpZWYgTWFzb29kIEF6aGFyIHdobyB3YXMgYXBwYXJlbnRseSBuYW1lZCBpbiBhIGRvc3NpZXIgZ2l2ZW4gdG8gSXNsYW1hYmFkIGJ5IE5ldyBEZWxoaS4gSXQgYWxzbyBzYXlzIHNodXQgYSBudW1iZXIgb2YgZmFjaWxpdGllcyBhbmQgZnJvemVuIGFzc2V0cyBvZiBzZXZlcmFsIG91dGxhd2VkIG9yZ2FuaXphdGlvbnMuClRoZSBSSFQgdGhpbmcuIApGb3IgZGVjYWRlcywgSXRhbHkgd2FzIHdyYWNrZWQgYnkgYmxvb2R5IHZpb2xlbmNlIGNhbGxlZCAidGhlIHllYXJzIG9mIGxlYWQiLi4gCkJ1dCB3aGF0IGlzIHRoZSBhbnN3ZXIgdG8gdXJpbmFyeSBzZWdyZWdhdGlvbj8geWVhciBJIHBvc2UgdGhhdCBhcyBhIGZpbmFsIGV4YW0gcXVlc3Rpb24gaW4gbXkgY291cnNlIG9uIGdlbmRlci4gUXVlc3Rpb24gaXMgcG9zZWQgaW4gdGhlIGZ1dHVyZTogIlR3ZW50eSB5ZWFycyBmcm9tIG5vdyB5b3UgYXJlIGFuIGFyY2hpdGVjdCBhbmQgaGF2ZSB0byBidWlsZCBhIGxhcmdlIGJ1aWxkaW5nLiAKT2lsIGFsbG93cyB5b3VyIGhhbmRzIHRvIG1vdmUgZnJlZWx5IG92ZXIgdGhlIGJvZHkgZHVyaW5nIG1hc3NhZ2UuIFdoaWxlIGEgdmFyaWV0eSBvZiBtYXNzYWdlIG9pbHMgYXJlIG9uIHRoZSBtYXJrZXQsIHlvdSBjYW4gYWxzbyBtYWtlIHlvdXIgb3duLiBDaG9vc2UgYSB2ZWdldGFibGUgYmFzZWQgb2lsIHRoYXQgaGFzIGxpdHRsZSBvciBubyBzY2VudCBvZiBpdHMgb3duLiBBbG1vbmQgb2lsIGlzIGEgZ29vZCBjaG9pY2UgYmVjYXVzZSBpdCBpcyBsaWdodCBhbmQgb2Rvcmxlc3MuIEF2b2lkIG9saXZlIG9pbCwgd2hpY2ggaXMgdG9vIGhlYXZ5IGFuZCBwdW5nZW50LiBUaGVuLCB0byBlbmhhbmNlIHRoZSBleHBlcmllbmNlLCB5b3UgY2FuIGFkZCBhIGZldyBkcm9wcyBvZiBhbiBhcm9tYXRpYyBlc3NlbnRpYWwgb2lsLCBzdWNoIGFzIGxhdmVuZGVyIG9yIGNoYW1vbWlsZSwgYm90aCBvZiB3aGljaCB0ZW5kIHRvIGhhdmUgYSByZWxheGluZyBlZmZlY3QuClRoZSBpbnRlcmlvciB3YXMgdW5wcm9zcGVyb3VzIGFuZCBiYXJlOyB0aGUgb25seSBjYXIgdmlzaWJsZSB3YXMgdGhlIGR1c3QgY292ZXJlZCB3cmVjayBvZiBhIEZvcmQgd2hpY2ggY3JvdWNoZWQgaW4gYSBkaW0gY29ybmVyLiBJdCBoYWQgb2NjdXJyZWQgdG8gbWUgdGhhdCB0aGlzIHNoYWRvdyBvZiBhIGdhcmFnZSBtdXN0IGJlIGEgYmxpbmQsIGFuZCB0aGF0IHN1bXB0dW91cyBhbmQgcm9tYW50aWMgYXBhcnRtZW50cyB3ZXJlIGNvbmNlYWxlZCBvdmVyaGVhZCwgd2hlbiB0aGUgcHJvcHJpZXRvciBoaW1zZWxmIGFwcGVhcmVkIGluIHRoZSBkb29yIG9mIGFuIG9mZmljZSwgd2lwaW5nIGhpcyBoYW5kcyBvbiBhIHBpZWNlIG9mIHdhc3RlLiAKQWt0dWVsbGUgSW5mb3MgYmlldGV0IGF1Y2ggZGllIEZhY2Vib29rIFNlaXRlIGRlciBBa3Rpb24sIGRvcnQgd2VyZGVuIGxhdWZlbmQgYWt0dWVsbGUgTWVsZHVuZ2VuIHZlcmZmZW50bGljaHQ6IExhIFJ1dGEgZGVsIEdhbGxvLiBIaWxmcmVpY2ggaXN0IGRlciBhdWYgZGVyIEhvbWVwYWdlIHZlcmZmZW50bGljaHRlIFBsYW4gKGhvZmZlbnRsaWNoIGJhbGQgYXVjaCBhbHMgcGRmIG1pdCBndXRlciBBdWZsc3VuZyB3aWUgMjAxNSkuIEluIGdlZHJ1Y2t0ZXIgRm9ybSBnaWJ0IGVzIGRpZSBSZXN0YXVyYW50IGJlcnNpY2h0IGluIGFsbGVuIGJldGVpbGlndGVuIExva2FsZW4gc293aWUgYmVpIGRlbiBUb3VyaXN0ZW4gSW5mb3JtYXRpb25zIEJyb3MuICh6dWxldHp0IGFrdHVhbGlzaWVydCBhbSA3LjguMjAxNikuIERhcyBpc3QgZWluZSBBbnNwaWVsdW5nIGF1ZiBkZW4gU3BpdHpuYW1lbiBhbGxlciwgZGllIGhpZXIgaW0gVGFsIHdvaG5lbiwgbmF0cmxpY2ggZXJmdW5kZW4gdm9uIGRlbiBIYXVwdHN0ZHRlcm4gdW5kIGlocmVuIFNhdGVsbGl0ZW4gYXVmIGRlciBPc3RzZWl0ZS4gRGFzIEdlZmxnZWwgaXN0IGRlciBBdXNkcnVjayBmciBMbmRsaWNoa2VpdCB1bmQgZGFtaXQgbmF0cmxpY2ggYXVjaCBhbGxlbiBuZWdhdGl2ZW4gQXR0cmlidXRlbiBkaWUgZGF6dWdlaHJlbi4gSW0gR2VnZW56dWcgbmVubmVuIGRpZSBkaWUgTGV1dGUgYXVzIGRlciBIYXVwdHN0YWR0IGFsc28gUG9ydHVnaWVzZW4sIHVuZCBpY2ggbGFzc2UgZGFzIGVpbmZhY2ggbWFsIGRhaGluZ2VzdGVsbHQsIG9iIGRhcyBkZW5uIGF1Y2ggZWluZSBtZ2xpY2hlIEJlbGVpZGlndW5nIHNlaW4ga25udGUuIChNYXRoaWFzIFNpZWJvbGQsIDI5LjcuMjAxNiBhdWYgTGEgUGFsbWFBa3R1ZWxsKQpTaWduYWxvbnMgZCBldCBkaiB1bmUgdmlkZW5jZSA6IHF1ZSBjZSBzb2l0IGVuIENoaW5lIG91IGRhbnMgbGUgbW9uZGUgZ3JjbyByb21haW4sIGxhIHJwdXRhdGlvbiBhbmFsZ3NpcXVlIGR1IGNoYW52cmUgZXN0IGxhIG1tZSA6IGVsbGUgc2VyYSBtbWUgcGVycHR1ZSBwYXIgbGEgbWRlY2luZSBhcmFiZSBxdWkgcnNlcnZlIGF1IGNoYW52cmUgbGVzIG1tZXMgdXNhZ2VzIG1kaWNpbmF1eCBxdWUgbCBjaGV6IGxlcyBPY2NpZGVudGF1eC4gTCBkdSBjaGFudnJlIGFuZXN0aHNpcXVlIG5vdXMgZXN0IHN1cnRvdXQgY29ubnUgcGFyIGxlIGJpYWlzIGR1IG1kZWNpbiBhcmFiZSBJYm4gYWwgQmFpdGFyICgxMTk3IDEyNDgpLCAgdW4gZGUgbm9zIHBsdXMgZ3JhbmRzIGJvdGFuaXN0ZXMgW3F1aV0gYSB2b3lhZyBkYW5zIHRvdXMgbCBldCBkYW5zIHRvdXRlIGwgZHUgTm9yZCBhdmFudCBkIGxlIEphbSBNdWZyaWRhdCBvdSBDb2xsZWN0aW9uIGRlcyBzaW1wbGVzLCBvIHNvbnQgZGNyaXRlcyBwbHVzIGRlIDMwMCBwbGFudGVzIG1kaWNpbmFsZXMgbm91dmVsbGVzICAoNCksIGRvbnQgbGUgY2hhbnZyZS4gCllvdSd2ZSBiZWNvbWUgV2F5bmUgR3JldHpreSwgc2thdGluZyB0byB3aGVyZSB5b3Uga25vdyB0aGUgcHVjayBpcyBnb2luZyB0byBiZS4uIApMaXZlIHBsYXllcnMgd2F5IHRvbyBvZnRlbiBsb29rIGF0IHRoZSBoaWdoZXIgc3Rha2VzIGdhbWVzIHRoZXkgcGxheSBsaXZlIGFzIHRoZWlyIG1haW4gZ2FtZSwgYW5kIHRoZW4gbG9vayBhdCB0aGUgb25saW5lIGdhbWVzIHdoZXJlIHRoZXkgcGxheSBtaWNybyBvciBzbWFsbCBzdGFrZXMgYXMgc29tZSBzaWRlIHRoaW5nIGZvciBmdW4gb3IgInByYWN0aWNlLCIgd2hlbiBpdCBzaG91bGQgcHJvYmFibHkgYmUgdGhlIG9wcG9zaXRlLiBXaGVuIHlvdSBwbGF5IG9ubGluZSwgeW91IGdldCB0byBwbGF5IHRvdWdoZXIgZ2FtZXMgYWdhaW5zdCBiZXR0ZXIgY29tcGV0aXRpb24gYW5kIHJpc2sgbGVzcyBtb25leS4gCldpZSBkdSBzY2hvbiBzYWd0ZXN0IGlzdCBlaW4gQWJzdHVyeiBkZXIgVVNBIGF1Y2ggZWluIGdsb2JhbGVyIEFic3R1cnouIApBIGdyYXBoaWMgaWxsdXN0cmF0aW9uIGFwcGVhcmVkIG9uIHRoZSBmcm9udCBwYWdlIG9mIHRoZSBOZXcgWW9yayBUaW1lcyBvbiBBdWd1c3QgNC4gCkhlcmUgYXJlIG15IHRvcCBmaXZlIHBvc3RzIG9uIGZlbWFsZSBhbmFsIHBsZWFzdXJlLiAKRGVyZWsgS2VsbHksIDQ2LCBjaGFpcm1hbiBvZiB0aGUgR3V0c2hvdCBQcml2YXRlIE1lbWJlcnMgQ2x1YiBpbiBDbGVya2Vud2VsbCwgY2VudHJhbCBMb25kb24sIHdhcyBmb3VuZCBndWlsdHkgb2YgY29udHJhdmVuaW5nIHRoZSBhY3QgYnkgb3JnYW5pc2luZyBhIGdhbWUgb2YgcG9rZXIgb24gRGVjZW1iZXIgNywgMjAwNCwgaW4gd2hpY2ggYSBsZXZ5IHdhcyBjaGFyZ2VkIG9uIHRoZSB3aW5uaW5ncy4gSGUgd2FzIGFsc28gZm91bmQgZ3VpbHR5IGJ5IGEganVyeSBhdCBTbmFyZXNicm9vayBDcm93biBDb3VydCwgaW4gZWFzdCBMb25kb24sIG9mIGNvbnRyYXZlbmluZyB0aGUgYWN0IGJ5IG9yZ2FuaXNpbmcgYSBwb2tlciBnYW1lIG9uIEphbnVhcnkgMjcsIDIwMDUsIGluIHdoaWNoIGEgZmVlIHdhcyBjaGFyZ2VkIHRvIHRha2UgcGFydC4uIApPY2Nhc2lvbmFsbHkgd2UgaGF2ZSBndWVzdCBhcnRpc3RzLCBzb21ldGltZXMgYWx1bW5pLCB3aG8gY29tZSBhbmQgc2NyZWVuIHRoZWlyIGZpbG1zIHRvIHVzLCBmb2xsb3dlZCBieSBhIFEgV2UgaGFkIHRoZSBkaXJlY3RvciBvZiBNSTogRmFsbG91dCwgdGhlIGVkaXRvciBvZiBUaG9yOiBSYWduYXJvaywgYW5kIERhbm55IE1jQnJpZGUsIHRoZSBsYXR0ZXIgdHdvIGJlaW5nIGFsdW1uaSBvZiB0aGUgc2Nob29sLiBTb21ldGltZXMgaWYgd2UgbHVja3ksIHdlIG9jY2FzaW9uYWxseSBzZWUgYSBmaWxtIGJlZm9yZSBpdCByZWxlYXNlZC4gQWxzbywgZXZlcnkgd2Vla2VuZCB0aGUgc2Nob29sIGhhcyByZWd1bGFyIHNjcmVlbmluZ3MgdGhhdCB5b3UgY2FuIGF0dGVuZCBhdCB5b3VyIGxlaXN1cmUuIApJIGFjdHVhbGx5IGRpZCBzZWxmIGhhcm0gYXMgd2VsbCB3aGVuIEkgd2FzIGdvaW5nIHRocm91Z2ggZmFtaWx5IHByb2JsZW1zIHdoZW4gSSB3YXMgMTMgYXMgd2VsbCwgYW5kIG5vdyB0aGF0IEkgYWxtb3N0IDIxIEkgaGF2ZSBmYWludCBidXQgbGFyZ2Ugc2hpbnkgc3RyaXBzIGdvaW5nIHVwIGEgbGFyZ2UgcG9ydGlvbiBvZiBteSByaWdodCB0aGlnaCwgYW5kIGEgZmV3IHNtYWxsIHNoaW55IG9uZXMgb24gbXkgd3Jpc3QuIEkgdHJpZWQgdG8gdGFuIG15IGxlZ3MgYXMgbXVjaCBhcyBwb3NzaWJsZSB3aGVuIEkgZ290IG91dCBvZiB0aGUgZGVwcmVzc2lvbiwgYW5kIEkgaGVhcmQgdGhhdCBsZW1vbiBqdWljZSBjYW4gZmFpbnQgc2NhcnJpbmcgd2hlbiBleHBvc2VkIHRvIHRoZSBzdW4gZm9yIDEwIG1pbnMgZGFpbHkgKEkgdXNlZCB0aGlzIGZvciBhY25lIHNjYXJpbmcpLi4gCkl0IE9VUiBtb25leS4gCk5vIGRvdWJ0IGJvb2tzIHdlcmUgY2FycmllZCB0byBCb3RhbnkgQmF5IGZyb20gTG9uZG9uIGFuZCB0aGVuIGJhY2sgYWdhaW4sIHBlcmhhcHMgb3ZlciBhbmQgb3ZlciBhcyB0aGUgcHJvcGVydHkgb2YgdGhlIHNoaXAgc3VyZ2VvbiBvciBzb21lIHN1Y2gsIGJ1dCB0aGF0IHdvdWxkIGJlIHllYXJzIHdvcnRoIG9mIHRyYXZlbC4uIApGb3IgZWFjaCBkYXRhYmFzZSwgd2UgbG9vayBhdCBob3cgdG8gcHJvdmlzaW9uIGl0LCB3aGF0IHRoZSBjb3N0cyBhcmUsIGhvdyB0byBzY2FsZSBpdCwgaG93IHRvIGhhbmRsZSBmYWlsdXJlcywgYW5kIGhvdyB0byBhZG1pbmlzdGVyIGl0LiAKSW5mb3JtYXRpb24gZnJvbSB0aGUgQW1lcmljYW4gU29jaWV0eSBmb3IgQWVzdGhldGljIGFuZCBQbGFzdGljIFN1cmdlcnkgKEFTQVBTKSBzaG93cyB0aGF0IDEvMyBvZiBjb3NtZXRpYyBzdXJnZXJ5IHBhdGllbnRzIHdlcmUgZWFybmluZyBsZXNzIHRoYW4gJDMwLDAwMCBhIHllYXIuIDcwJSBlYXJuZWQgbGVzcyB0aGFuICQ2MCwwMDAuLiAKR3dlZWhlIHUKU2VsZiB0aXRsZWQgaXMgaGFsZiBhcyBsb25nLCBhbmQgdGhlIHNvbmdzIHRoZW1zZWx2ZXMgYXJlIGEgbWludXRlIHNob3J0ZXIgb24gYXZlcmFnZSB0aGFuIG9uIFRoZSBDb2xvdXIgaW4gQW55dGhpbmcuIFRoZSBzb25ncyBmZWVsIG1vcmUgZGl2ZXJzZSBvbiB0aGUgc2VsZiB0aXRsZWQsIHRoZSBwcm9kdWN0aW9uIHNvdW5kcyBtb3JlIHVwIGZyb250IGFuZCBmdWxsLiAKQXQgdGhlIGVuZCBvZiB0aGUgc3BlbGxzIHRoZSBLcmFrZW4gSGF0Y2hsaW5nIGhhZCBzb21ld2hlcmUgb3ZlciAzMDAgcG93ZXIgYW5kIHRyYW1wbGUuIAooSSBkaWRuJ3Qga25vdyB3aGF0IGFuIEluZGlhbiBydWcgYnVybiB3YXMgYXQgdGhlIHRpbWUpLiAKSWYgeW91IGdvR2V0dGluZyB0aGVyZToKVGhlcmUgYXJlIDUgaGVhcnRzIG9uIHRoZSBib2FyZCwgaW5jbHVkaW5nIHRoZSBhY2UuIApKb2UgTGFjb2IgcGxvdHMgdGhlIFdhcnJpb3JzClJvdWxldHRlIFN0cmF0ZWdpZXMgYW5kIFRpcHMKSXMgdGhlcmUgYmFkIGhlYWxpbmc/IEtpbmQgb2YuIApXZSBzaG91bGRuJ3QgYmUgcHVuY2hpbmcgYWJvdmUgb3VyIHdlaWdodC4gV2UgdHJpZWQgZG9pbmcgdGhhdCBpbiBBZmdoYW5pc3RhbiBhbmQgd2VyZSBob2lzdGVkIG9uIG91ciBvd24gcGV0YXJkLiBQdW5jaGluZyBhYm92ZSBvbmUncyBpbnRlcm5hdGlvbmFsIHdlaWdodCBpcyBhIEJyaXRpc2ggc3BlY2lhbHR5LCBhIGNvbXBlbnNhdGlvbiBmb3IgbG9zcyBvZiBnbG9yeSBhbmQgZW1waXJlLiBCdXQgd2Ugc2hvdWxkbid0IGJlIHVuZGVyIHB1bmNoaW5nIGVpdGhlciwgYXMgUHJlc2lkZW50IEFzaWYgQWxpIFphcmRhcmkgbWFuYWdlcyB0byBkbyBldmVyeSB0aW1lIGhlIHZlbnR1cmVzIGFicm9hZC4KWW91IGhhdmUgdG8gcmVtZW1iZXIgdGhhdCB0aGV5IHdlcmUgY29tcGFyaW5nIHBhc3Nwb3J0cyBhZ2FpbnN0IHRoZSBza2V0Y2hlcyB0aGUgRkJJIGhhZCBvZiB0aGUgS0dCIGNvdXBsZSwgUGhpbGxpcCBFbGl6YWJldGggaW4gZGlzZ3Vpc2UuIEl0IGlzIGEgYml0IGFtYmlndW91cyB3aGV0aGVyIG9yIG5vdCBTdGFuIGNpcmN1bGF0ZWQgcmVhbCBwaWN0dXJlcyBvZiB0aGUgdGhyZWUgb2YgdGhlbSwgYnV0IGdpdmVuIHRoZSBzY2VuZSBpbiB0aGUgcGFya2luZyBnYXJhZ2UsIEkgZG9uIHRoaW5rIHRoYXQgbGlrZWx5LlBhaWdlIHdhcyBuZXZlciBvbiB0aGUgZ292ZXJubWVudCByYWRhci4gCk90aGVyIHdvcmRzLCB0aGUgZmluYW5jaWFsIGNyaXNpcyBoYXMgbm90IGJlZW4gYSBjcmlzaXMgYnV0IGEgaHVnZSBwYXkgb2ZmIGZvciB0aGUgcmljaEJ1dCBhbWlkc3QgYWxsIHRoZSA0LzE5IGRlbW9uc3RyYXRpb25zIGFuZCBjb3VudGVyIGRlbW9uc3RyYXRpb25zLCB3aG8gd291bGQgbm90aWNlPyBJIGhhdGUgdGhlIHJpZ2h0IHdpbmcgbnV0cywgYW5kIHRoZXkgaGF0ZSB0aGUgbGlrZXMgb2YgbWUsIGFuZCBXYWxsIFN0cmVldCBmYXQgY2F0cyBoYXZlIHRoZWlyIGhhbmRzIGluIG91ciB3YWxsZXRzIHdoaWxlIHdlIGFyZ3VlIG92ZXIgdGhlIDJuZCBBbWVuZG1lbnQgYW5kIGltbWlncmF0aW9uIGlzc3Vlcy4gClRha2UgYXdheSBmcm9tIHRoZXNlIHN0dWRpZXMgdGhlIHVuZGVyc3RhbmRpbmcgdGhhdCBnZXR0aW5nIGFkZXF1YXRlIHZpdGFtaW4gRCB3aWxsIGltcHJvdmUgeW91ciBtZXRhYm9saXNtIGFuZCBoZWxwIHlvdSBsb3NlIGZhdC4gQXMgeW91IGRlY3JlYXNlIHlvdXIgYm9keSBmYXQsIHlvdXIgdml0YW1pbiBEIGxldmVsIHNob3VsZCByaXNlLCBhbmQgZnVydGhlciBzdXBwb3J0IG1ldGFib2xpc20uIApPbmxpbmUgUG9rZXIgU2l0ZSBSZXZpZXdzIEd1aWRlbGluZSAxOiBXaGF0IGlzIHRoZSBzb2Z0d2FyZSB1c2VkIGJ5IHRoZSBvbmxpbmUgcG9rZXIgc2l0ZT8KT2YgYWxsIHRoZSBzdG9yaWVzIEkgd2lzaCBJIGNvdWxkIHRhcCBiYWNrIGludG8gdGhpcyBpcyB0aGUgb25lLiAKVGhlIGF3YXJkIGlzIGNyZWF0ZWQgYW5kIG1haW50YWluZWQgYnkgdGhlIFVDTEEgVm9sdW50ZWVyIENlbnRlciBGZWxsb3dzLiAKU2hlIHN0YXlzIGluIGEgcXVpZXQgR3VuYmFycmVsIGJlZCBhbmQgYnJlYWtmYXN0LCBhbmQgZm9sbG93cyBhIHByZXNjcmliZWQgc2VyaWVzIG9mIHlvZ2EgcG9zdHVyZXMsIG1lZGl0YXRpb24sIGJyZWF0aHdvcmsgYW5kIGpvdXJuYWxpbmcgbXVsdGlwbGUgdGltZXMgYSBkYXksIGluIGJldHdlZW4gcmVjZWl2aW5nIDUsMDAwIHllYXIgb2xkIHRyZWF0bWVudHMgYXQgYSB3b3JsZCByZW5vd25lZCBBeXVydmVkaWMgc3BhIGRvd24gdGhlIHN0cmVldC4gSG90IG9pbCBtYXNzYWdlLiBTd2VhdCB0ZW50cy4gTHltcGhhdGljIHN5c3RlbSBjbGVhbnNlcy4gQSBzcGVjaWFsIGRpZXQuIE9uZSBvbiBvbmUgY291bnNlbGluZy4KVGhlcmUgd2FzIGEgZmFsbGluZyBvdXQgYmV0d2VlbiB0aGUgdHdvIG9mIHRoZW0sIHdlZWtzIGJlZm9yZSwgb24gdGhlIG5pZ2h0IG9mIHRoZSBiYWNoZWxvcmV0dGUgcGFydHkgd2hlbiB0aGUgYnJpZGUgZGVjaWRlZCB0byBnZXQgdG9vIGRydW5rIGFuZCBzdHJhaWdodCB1cCBvc3RyYWNpemUgaGVyIChteSBmaWFuYykgaW4gZnJvbnQgb2YgaGVyIG90aGVyIGZyaWVuZHMgdGhhdCBzaGUgd2FzIGluIGEgc29yb3JpdHkgd2l0aC4gCk5vdyBhcyBzb29uIHRoZXkgc2VlIG1lIGJyb3dzaW5nLCBJIGFwcHJvYWNoZWQgd2l0aCwgImhleSBob25leSEhIHdoYXQgY2FuIEkgaGVscCB5b3Ugd2l0aD8gTG92aW5nIHRoYXQgIi4gClRoYXQgaXMgcHJvYmFibHkgdGhhdCBoYXJkZXN0IHN0ZXAgb3V0IG9mIGFsbCBvZiBpdC4gVGhlcmUgYXJlbid0IGFueSB3YWxrcyBpbiB0aGUgcGFyaywgYW5kIHRoZXJlIGFyZW4ndCBhbnkgdmFjYXRpb25zLiAKV2UgZG8gbm90IHRyYWNrIG9yIHN0b3JlIGEgcmVjb3JkIG9mIHRob3NlIGNvbW1lbnRzIG9yIGFjdGlvbnMuU29jaWFsIE1lZGlhIEZlYXR1cmVzIGFuZCBXaWRnZXRzOiBPdXIgV2ViIFNpdGVzIGluY2x1ZGVzIFNvY2lhbCBNZWRpYSBGZWF0dXJlcywgc3VjaCBhcyB0aGUgRmFjZWJvb2sgTGlrZSBidXR0b24sIGFuZCBXaWRnZXRzLCBzdWNoIGFzIHRoZSBTaGFyZSBUaGlzIGJ1dHRvbiBvciBpbnRlcmFjdGl2ZSBtaW5pIHByb2dyYW1zIHRoYXQgcnVuIG9uIG91ciBzaXRlLiBUaGVzZSBGZWF0dXJlcyBtYXkgY29sbGVjdCB5b3VyIElQIGFkZHJlc3MsIHdoaWNoIHBhZ2UgeW91IGFyZSB2aXNpdGluZyBvbiBvdXIgc2l0ZSwgYW5kIG1heSBzZXQgYSBjb29raWUgdG8gZW5hYmxlIHRoZSBGZWF0dXJlIHRvIGZ1bmN0aW9uIHByb3Blcmx5LiAKRXVyb3BlYW4gbWVkaWEgc2VlIGZldyBvcHRpb25zIGluIEJyZXhpdCBwb2tlcgpXaHkgZG9lc24ndCBzb21lYm9keSB3aXRoIHRoYXQgYmlnIG9mIGEgY2h1bmsgbyBjaGFuZ2Ugb3duIHRoZWlyIG93biBob3VzZT8gUlIuIEhvdyBtdWNoIG1vcmUgYXJlIHRoZXkgcGF5aW5nPyBEb2VzIHRoYXQgY292ZXIgdGhlIGNvc3Qgb2YgdGhlIHJlbm92YXRpb24/IERvZXMgdGhlIHJlbm92YXRpb24gaW5jcmVhc2UgdGhlIGhvbWUncyB2YWx1ZT8gQnkgaG93IG11Y2g/V2hhdCB0aW1lIGZyYW1lIGRvIHlvdSBoYXZlIHRvIGNvbXBsZXRlIHRoZSBiYXNlbWVudD8gV2hvIGlzIGRyYXdpbmcgdXAgdGhhdCBjb250cmFjdD8gV2hhdCBpZiB5b3UgZG9uJ3QgY29tcGxldGUgaXQgaW4gdGltZT8gV2hhdCBoYXBwZW5zIGlmIHRoZSB3b3JrIGlzIG5vdCB0byB0aGVpciBzYXRpc2ZhY3Rpb24/TG9vayBhdCB0aGlzIHNpdHVhdGlvbmxpa2UgYSBwb2tlcndhZ2VyLiAKTW9zdCBvZiBvZiB0aGUgZGFtYWdlIGluIDIwMTUgd2FzIHRha2VuIGJ5IG9pbCBwcm9kdWNlcnMgaW4gQWxiZXJ0YSwgd2hpbGUgbG93ZXIgZW5lcmd5IHByaWNlcyB3ZXJlIGEgYmVuZWZpdCB0byBjb25zdW1lcnMgYW5kIG1hbnVmYWN0dXJlcnMgaW4gT250YXJpbyBhbmQgUXVlYmVjLCBDYW5hZGEgdHdvIG1vc3QgcG9wdWxvdXMgcHJvdmluY2VzLgpUaGUgaG90ZWwgc3VpdGVzIHRlbmQgdG8gYmUgbGFyZ2VyIHRoYW4gc2ltaWxhciBwcmljZWQgcm9vbXMgb24gdGhlIFN0cmlwIGFuZCBtYW55IG9mZmVyIGV4Y2VsbGVudCB2aWV3cyB3aXRoIGZsb29yIHRvIGNlaWxpbmcgd2luZG93cy4uIAo1IHBsYXllcnMgdG8gdGhlIEZsb3AgbWVhbnMgYSAxMC4wMCBwb3QuIEV2ZXJ5Ym9keSBjaGVja3MsIGFuZCB0aGUgVHVybiBjYXJkIGNvbWVzIHVwLiBTQiBjaGVja3MgYW5kIHlvdSwgYXMgYW4gYWdncmVzc2l2ZSBwbGF5ZXIsIGFyZSB0ZW1wdGVkIHRvIHB1dCBhIGJldCBvdXQgdGhlcmUgdG8gc2VlIGlmIGFueW9uZSBoYXMgYW55dGhpbmcuIApEb24gZHdlbGwsIGRvbiBhZGQgc2FsdCB0byB3b3VuZCwganVzdCB0YWtlIHlvdSB0aW1lIHRvIGhlYWwgYW5kIHN0YW5kIGJ5IHlvdXJzZWxmLiAKSSB3aWxsIHNheSB0aGlzIHRob3VnaCwgSSBkb24gbWlzcyB0aGUgc3RyZXNzIG9yIHRoZSBsaWFiaWxpdHkuIApUaGVzZSBuYXJyb3dlZCBhcmVhcyBhcmUgY2FsbGVkIHN0cmljdHVyZXMuIApJdCBkb3VibHkgaGFyZCB3aGVuIHRoZXJlIGlzIGEgd2VpcmQgZGlzY29ubmVjdCBiZXR3ZWVuIHdoYXQgaGFwcGVuaW5nIHRvIHlvdSwgYW5kIGhvdyB5b3VyIGltbWVkaWF0ZSBlbnZpcm9ubWVudCBwZXJjZWl2ZXMgaXQuIApMZWlkZXIgbGllZ2VuIGRpZSBhbGxlIGhvY2ggaW4gZGVuIEJlcmdlbi4gRnIgQXVmc3RlaGVuIGlzdCBkYWhlciBzZWhyIHp1IGVtcGZlaGxlbiwgdW0gcmVjaHR6ZWl0aWcgenVyIEhpdHplIEhvY2ggWmVpdCB3aWVkZXIgaGVpbXp1a2VocmVuIHVuZCBzaWNoIGp1Y2h6ZW5kIGluIGRpZSBrIEZsdXRlbiBkZXMgSG90ZWxwb29scyB6dSBzdCBEZW4gUmVzdCBkZXMgTmFjaG1pdHRhZ3Mgc29sbHRlIG1hbiBkYW1pdCB2ZXJicmluZ2VuIGRlbiBvcmRudW5nc2dlbSBHZWJyYXVjaCB2b24gT2hyZW5zdCB6dSBEZW5uIGF1Y2ggd2VubiBTa29wZWxvcyBTdGFkdCBpbiB3ZWl0ZXIgRmVybmUgbGllZ3QsIHZvbiBuIE1vdG9yZW5nZWtuYXR0ZXIgdW5kIHVuZXJ3IE11c2lrYmVzY2hhbGx1bmcgYmxlaWJ0IG1hbiBsZWlkZXIgYXVjaCBhbiBkaWVzZXIgQmVyZ2hhbmdsYWdlIG5pY2h0IHZlcnNjaG9udCB6dW1pbmRlc3QgbmljaHQsIHdlbm4gbWFuIHNpY2ggZ2xlaWNoemVpdGlnIGRlbiBrIE5hY2h0d2luZCB1bSBkaWUgTmFzZSB3ZWhlbiBsYXNzZW4gd2lsbC4gRXJuIEVya2VubnRuaXMgbmFjaCBmIGR1cmNod2FjaHRlbiBOIFNrb3BlbG9zIGlzdCBsYXV0IHVuZCBkYXMgd2VpYmxpY2hlIE9ociBhbnNjaGVpbmVuZCBuaWNodCBkYWYga29uemlwaWVydCB2b24gZGVyIFVtd2VsdCBhYmdlc2Nobml0dGVuIHp1IHdlcmRlbi4gClRoZXkgdXNlIHRoaXMgbGluZSBvZiByZWFzb25pbmcgdG8gcGVyZm9ybSBhIGNhbGN1bGF0aW9uIHNob3dpbmcgdGhhdCBvbmx5IDMlIG9mIHRoZSBlbmVyZ3kgb2YgZnVsbCBzcGVjdHJ1bSBpbmNhbmRlc2NlbnQgbGFtcHMgbGllcyB3aXRoaW4gdGhlc2UgdHdvIG1pbmkgYmFuZHMsIGltcGx5aW5nIHRoYXQgdGhlIG90aGVyIDk3JSBvZiB0aGUgYnVsYnMnIGVuZXJneSBvdXRwdXQgaXMgYSB3YXN0ZS4uIApDaGluYSBpcyByaWRpY3Vsb3VzLiAKQSB0aW1lbGluZSBvZiBTaGVycm9kIEJyb3duJ3MgcG9saXRpY2FsIGxpZmUgQSB0aW1lbGluZSBvZiBTaGVycm9kIEJyb3duJ3MgcG9saXRpY2FsIGxpZmUgQnJvd24gYW5ub3VuY2VkIFRodXJzZGF5IGhlIHdvdWxkIG5vdCBydW4gZm9yIHByZXNpZGVudC4gSGVyZSdzIGEgZGV0YWlsZWQgdGltZWxpbmUgb2YgaGlzIHBvbGl0aWNhbCBsaWZlLgpIb25lc3RseSwgSSBsb29rZWQgdXAgdG8gaGVyIGNoYXJhY3RlciBTYW0gc28gbXVjaCBhcyBhIGtpZC4gTm90IGZvciB0aGUgImZyaWVkIGNoaWNrZW4iIGxpbmVzLCBidXQgYmVjYXVzZSBzaGUgd2FzIGEgYmFkYXNzIGFuZCBzaGUgd2FzIHRvdWdoIGFuZCBhIGZpZXJjZWx5IGxveWFsIGZyaWVuZC4gSSB3YXMgYSBsb3QgbGlrZSBoZXIgYXMgYSBraWQgKGFuZ2VyIGlzc3Vlcywgc3R5bGUsIGV2ZW4gdGhlIGN1cmx5IGhhaXIpIGFuZCBJIHRob3VnaHQgaXQgd2FzIGNvb2wgdG8gc2VlIHNvbWVvbmUga2luZGEgbGlrZSBtZS4gU2hlIGhhZCBoZXIgYmFkIG1vbWVudHMsIGJ1dCBoZXIgYmFkIG1vbWVudHMgd2VyZSBzaW1pbGFyIHRvIG1pbmUgKGFjY2lkZW50YWxseSBzYXlpbmcgc29tZXRoaW5nIGh1cnRmdWwsIGdldHRpbmcgdG9vIG1hZCB0b28gZmFzdCkgYW5kIGl0IGhlbHBlZCB0byBzZWUgaG93IHNoZSBkZWFsdCB3aXRoIHRob3NlIHByb2JsZW1zLiBJZGsgSSBsaWtlZCBoZXIgYW5kIHRoYXQgY2hhcmFjdGVyIGFsd2F5cyBtYWRlIG1lIGxpa2UgSmVhbmV0dGUgTWNDdXJkeS4gSSBqdXN0IHN0YXJ0ZWQgdXNpbmcgd2FzaGkgdGFwZSBtb3JlIHRoaXMgeWVhciBzbyBJJ20gc3RpbGwgZ2V0dGluZyB0aGUgaGFuZyBvZiBpdCEgVXN1YWxseSB0aGUgd2Vla2x5IHNwcmVhZHMga2luZCBvZiBmb2xsb3cgdGhlIHRoZW1lIG9mIHRoZSBtb250aGx5IGNvdmVyIGJ1dCB0aGF0J3MgcmVhbGx5IGp1c3QgYmVjYXVzZSBpdCdzIHdoYXQgSSBoYXBwZW4gdG8gYmUgaW50byBhdCB0aGUgdGltZSBhbmQgSSBnZXQgc2ljayBvZiBpdCBhZnRlciBhIG1vbnRoLiBMaWtlIHJpZ2h0IG5vdyBJJ20gaW50byB5ZWxsb3cgYW5kIGxhc3QgbW9udGggSSB3YXMgaW50byBwaW5rIGFuZCBwdXJwbGUgZm9yIFZhbGVudGluZSdzIERheS4gVGhhbmsgeW91IGZvciB5b3VyIGNvbW1lbnQhCkJ1dCBpdCB3YXMgc2xvdyBhbmQgZXhwZW5zaXZlLiIuIApFZGl0OiBUaGFuayB5b3UgdG8gdGhlIGtpbmQgc3RyYW5nZXJzIGZvciB0aGUgZ29sZCEgTWVkaWNhbCByaWIgdXBkYXRlICAgbm90aGluZyBpcyBicm9rZW4gb3IgZGlzbG9jYXRlZCBidXQgSSBtYW5hZ2VkIHRvIHNvbWVob3cgc3RyYWluIHRoZSBlbnRpcmUgZGFtbiBtdXNjbGUgYW5kIHRoYXQgc25lZXplIGRpZG4gaGVscC4gClRoZSBtaWRkbGUgY2xhc3NlcywgaXQgd2FzIGNsYWltZWQsIGhhdmUgbW9yZSB3b3JrIGRpc2NpcGxpbmUsIG1hcml0YWwgZGlzY2lwbGluZSwgYm9kaWx5IGRpc2NpcGxpbmUsIGFuZCBzZXh1YWwgZGlzY2lwbGluZS4gVGhlcmVmb3JlIHRoZSBtaWRkbGUgY2xhc3NlcyBhcmUgbW9yZSBmaXQgdG8gcnVsZSAodGhpcyBpcyBwcm9iYWJseSB3aHkgODAlIG9mIEFtZXJpY2FucyBpZGVudGlmeSBhcyBtaWRkbGUgY2xhc3MgIHdobyB3YW50cyB0byBiZSB1bmRpc2NpcGxpbmVkPykuLiAKQWx0aG91Z2ggaXQgYmVjb21lcyBhIG1vcmUgaW50ZXJlc3RpbmcgZGF5IGJ5IGRheSwgbm90IGV2ZXJ5b25lIGlzIGludGVyZXN0ZWQgaW4gaXQuIApTZXh1YWwgZHlzZnVuY3Rpb24KQWxzbyB3aXRoIEEgYW5kIDEwIHdpdGggcGVvcGxlIG9uIHdvdWxkIGJlIHZlcnkgY29uZnVzaW5nIHRvIHBsYXkgd2l0aCBhbnl3YXkuIApZb3UgYXJlIHRyeWluZyB0byB1c2UgYSA1dGggY2VudHVyeSBzb2x1dGlvbiB0byBmaXggYSAocGVyY2VpdmVkKSAyMXN0IGNlbnR1cnkgdGhyZWF0LiBDcmF6eS4KUm9kZ2VycyBncmFiYmVkIGEgcGlzdG9sLCBjaGFzZWQgdGhlIG1hbiBhd2F5IGFuZCB3ZW50IGJhY2sgdG8gaGlzIHBva2VyIGdhbWUuIAozLiAKVGhlIFVuaXZlcnNpdHkgb2YgSG91c3RvbidzIEZhY3VsdHkgQXdhcmRzIERpbm5lciB3YXMgaGVsZCBvbiBBcHJpbCAyNnRoIDIwMTguIEhIUCBzcG9ydCBhZG1pbiBwcm9ncmFtIGZhY3VsdHkgRHIuIERhdmlkIFdhbHNoIHdhcyBwcmVzZW50ZWQgd2l0aCB0aGUgRmFjdWx0eSBFeGNlbGxlbmNlIEF3YXJkIGFuZCBwcm9ncmFtIGZhY3VsdHkgQ2xhdWRpYSBTY290dCB3YXMgcHJlc2VudGVkIHdpdGggdGhlIERpc3Rpbmd1aXNoZWQgRmFjdWx0eSBTY2hvbGFyIEF3YXJkLiBCZWxvdyBhcmUgc29tZSBpbWFnZXMgZnJvbSB0aGUgYXdhcmRzIGdhbGEuCk5vIGhhY2tzIG9yIGdsaXRjaCB0dXRvcmlhbHMgYWxsb3dlZC4gRG9uIHRlYWNoIG90aGVycyBob3cgdG8gZXhwbG9pdCB0aGUgZ2FtZS4gSW5zdGVhZCwgeW91IHNob3VsZCByZXBvcnQgdGhlc2UgYnVncyB0byBFQSBpbiBhIHJlc3BvbnNpYmxlIG1hbm5lci4KQnJvb2tlOiB0aG9zZSBvZiB1cyB3aG8gbGl2ZSBoZXJlIGhhdmUgcHJldHR5IG11Y2gga25vd24gd2hhdCBoYXBwZW5lZCB0byBCcm9va2Ugc2luY2Ugc2hlIGRpc2FwcGVhcmVkLiBJdCBraW5kIG9mIGFuIG9wZW4gc2VjcmV0IGhlcmUuIApEYXBwbGVncmF5ICA0IHBvaW50cyAgc3VibWl0dGVkIDExIG1vbnRocyBhZ28KVGhlIHBvaW50IG9mIGFsbCB0aGlzIGlzbiB0byBzdWdnZXN0IHRoYXQgb25saW5lIGNhc2lub3MgYW5kIG9ubGluZSBwb2tlciByb29tcyBiZSBhbGxvd2VkIHRvIG9wZXJhdGUgd2l0aCBubyByZWdhcmQgZm9yIHRoZSBsYXcuIE1hbnkgb2YgdXMgdGhhdCBhcmUgb3Bwb3NlZCB0byB0aGUgYmlsbCBhcmVuIG9wcG9zZWQgdG8gcmVndWxhdGlvbi4gSW4gZmFjdCwgd2Ugd2VsY29tZSBpdC4KVGhlIFtSb3lhbF0gQ2FuYWRpYW4gTmF2eSBoYXMgYSBsb3QgdG8gYmUgcHJvdWQgb2Ygd2l0aCB3aGF0IHdlbnQgb24gZHVyaW5nIHRoZSB3YXIgYmVjYXVzZSBpbiB0aGUgZW5kLCB0aGV5IHdlcmUgZ2V0dGluZyBhbGwgdGhlIGNvbnZveXMgYWNyb3NzIGFuZCB3b3VuZCB1cCBiZWluZyB0aGUgdGhpcmQgbGFyZ2VzdCBuYXZ5IGluIHRoZSB3b3JsZCBhdCB0aGF0IHRpbWUuIApUaGUgcGFpciBvZiBqYWNrcyBhcHBlYXJlZCBvbiBoaXMgYnVzaW5lc3MgY2FyZHMuIApGcmFub2lzIEhBUk1FR05JRVMgSUZSRU1FUgpTZWUgYSBmZXcgbW9yZSBtb3ZpZXMuIApQcm9iYWJseSA4OCBKSiwgSlRzIEtRcywgQUosIEFRLiBNYXliZSBqdXN0IEFKcywgbm90IHN1cmUuIE15IHN0cmF0ZWd5IGhhcyBhIFNCIGZsYXR0aW5nIHJhbmdlIHZzIFVURyBhbmQgSEogb3BlbnMsIGFuZCBhIDNiZXQgb3IgZm9sZCBzdHJhdCB2cyBDTyBhbmQgQlUuIFZzIHJlZ3MgdGhhdCBpcywgYW5kIGFzc3VtaW5nIEJCIGlzIGEgcmVnIHdobyBpcyBwcmV0dHkgbm9ybWFsIGFnZ3Jlc3Npb24gd2lzZS4gVnMgZmlzaCBpbiB0aGUgQkIsIG9yIGZpc2ggY2FsbGluZy9vcGVuaW5nLCB0aGluZ3MgY2hhbmdlLiBBbHNvIGlmIFVURyBpcyB0aWdodCwgdGhlbiBtYXliZSBhZGQgaW4gbW9yZSBpbXBsaWVkIG9kZHMgaGFuZHMgbGlrZSA1NSA3NyBvciBUOXMgYW5kIGR1bXAgc29tZSBvZiB0aGUgaGFuZHMgdGhhdCBhcmUgZWFzaWx5IGRvbWluYXRlZCBieSBhIHRpZ2h0IFVURyByYW5nZS4gUGxheWluZyBmcm9tIHRoZSBTQiBzdWNrcy4KVGhlbiBvbmUgZGF5IEkgYWNjaWRlbnRhbGx5IGRyb3BwZWQgaXQgaW4gdGhlIHNub3cgb3V0c2lkZSBteSBob3VzZSBhbmQgaXQgd2FzIG91dCB0aGVyZSBmb3Igb3ZlciAyIGhvdXJzLCBJIHdlbnQgb3V0IGFuZCBmb3VuZCBpdC4gCkFsdGhvdWdoIGFsbCBtZWFscyBhcmUgaW1wb3J0YW50LCBsdW5jaCBmb3Igc2Nob29sIGFnZWQgc3R1ZGVudHMgaXMgdGhlIG1lYWwgd2hpY2ggd2lsbCBvZnRlbiBiZSBtb3N0IG1vbml0b3JlZC4gClRoZSBtb3N0IGltcG9ydGFudCB0aGluZyBvZiBjb3Vyc2UgaXMganVzdCBiZWluZyBzZWN1cmUgYW5kIGNvbmZpZGVudCBpbiB5b3Vyc2VsZiAgIGl0IGltcG9zc2libGUgZm9yIHNvbWVib2R5IGRvICJkZW1hc2N1bGluaXplIiB5b3UgYmVjYXVzZSBtYXNjdWxpbml0eSBpcyBzb21ldGhpbmcgeW91IHBvc3Nlc3Mgd2l0aGluIHlvdXJzZWxmLiAKV2hlbiBJIGZpcnN0IHN0YXJ0ZWQgdGhlIGdhbWUsIEkgd2VudCBzdHJhaWdodCB0byBDcmVhdGUgQSBzaW0uIApUaGUgbW9yZSBhbGVydCB5b3UgYXJlIHRoZSBoaWdoZXIgeW91ciBjaGFuY2VzIG9mIG1ha2luZyBzb3VuZCBqdWRnbWVudHMuIApDaGVuZXkgaXMgYWN0dWFsbHkgZ3VpbHR5IG9mIGx5aW5nIHRvIENvbmdyZXNzIGFuZCB0aGUgQW1lcmljYW4gcGVvcGxlIGFib3V0IHRoZSByZWFzb25zIGZvciBpbnZhZGluZyBJcmFxLiAKSGlnaCBpbnRlbnNpdHkgaW50ZXJ2YWwgdHJhaW5pbmcgaGFzIHByb3ZlbiB0byBiZSBqdXN0IGVudGljaW5nIGVub3VnaCB0byBob2xkIGhlciBpbnRlcmVzdCAoIlRoZSB3b3Jrb3V0cyBoYXZlIHRvIGJlIGZ1biBmb3IgS3lsaWUgdG8gY29tbWl0LCIgYWRtaXRzIHRoZSBzb3VyY2UpIGFuZCBxdWl0ZSBlZmZlY3RpdmUuIEluIGp1c3QgYSBmZXcgc2hvcnQgd2Vla3MsIHNheXMgdGhlIHNvdXJjZSwgIlNoZSBpcyBsb29raW5nIGdyZWF0IGFuZCBoYXMgYWxyZWFkeSBiZWVuIHNlZWluZyBwcm9ncmVzcyBhbmQgY2hhbmdlcyBpbiBoZXIgYm9keS4iCklzIHRoZSBiZXN0IGV2ZXIuLiAK|<---