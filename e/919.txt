--->|U3RldmVuSlQgIDEgcG9pbnQgIHN1Ym1pdHRlZCAzIHllYXJzIGFnbwpNYW55IG9mIHRoZSB0aXBzIGZvY3VzZWQgb24gdGVjaG5pY2FsIGFzcGVjdHMgb2YgdG91cm5hbWVudCBwb2tlci4gVGhlIHBheW91dCBzdHJ1Y3R1cmVzIHVzZWQgaW4gbW9zdCB0b3VybmFtZW50cyB0aGVzZSBkYXlzLCBmb3IgZXhhbXBsZSwgbWF0aGVtYXRpY2FsbHkgZW5jb3VyYWdlIGEgInN1cnZpdmFsaXN0IiBzdHlsZSwgYnkgd2hpY2ggcGxheWVycyBzaG91bGQgbGFyZ2VseSBhdm9pZCB1bm5lY2Vzc2FyeSBlYXJseSByaXNrcyBpbiBmYXZvciBvZiB0cnlpbmcgdG8gbWFrZSBpdCBpbnRvIHRoZSBtb25leS4gVGhlIGV4Y2VwdGlvbiBjb21lcyBhbnkgdGltZSB5b3UncmUgcGxheWluZyBzcGVjaWZpY2FsbHkgZm9yIGEgdHJvcGh5IG9yIGFuIGVuZG9yc2VtZW50IGRlYWwgYXR0YWNoZWQgdG8gZmlyc3QgcGxhY2UuLiAKVGhleSBnb3QgYSBnbGltcHNlIGF0IHRoZSBkaXZlcnNlIG5lZWRzIG9mIHNleCB3b3JrZXJzIHdpdGggdGhlaXIgZmlyc3QgY2FsbCBhIHdvbWFuIHdpdGggYW4gYWJzY2Vzc2VkIHRvb3RoIG5lZWRlZCBhIGRlbnRpc3QuIldlIGNhbGxlZCAyMCBkZW50aXN0cyBpbiBMYXMgVmVnYXMgYW5kIHNhaWQsICdDYW4geW91IGhlbHAgdGhpcyBwZXJzb24gaW4gb3VyIGNvbW11bml0eT8nIEFzIHdlIGtlcHQgc2hvd2luZyB1cCB3aXRoIGN1cGNha2VzLCB3ZSBzYXcgbW9yZSBhbmQgbW9yZSBuZWVkcy4iRGVudGFsIGNhcmUgaXMgc3RpbGwgYXQgdGhlIHRvcCBvZiB0aGUgbGlzdCwgSG9vdmVyIHNhaWQsIGJ1dCBncm91cCBzZXJ2aWNlcyBoYXZlIGdyb3duIHRocm91Z2ggdGhlIHllYXJzLiAKSSBrbm93IGl0IGEgaGlnaGx5IGRlYmF0ZWQgaG90IHRvcGljIGFuZCBib3RoIGFyZSBhIGxvdCBvZiBmdW4sIGJ1dCA0IHdvcmxkIGhhcyBtdWNoIG1vcmUgdG8gZXhwbG9yZSBhbmQgaXMgbW9yZSBkZW5zZWx5IHBvcHVsYXRlZCB3aXRoIHNvbWUgdmVyeSBmdW4gcXVlc3RzLiAKTGVzIHBlcnNvbm5lcyBlbiBzdXJwb2lkcyBzb250IHJhcmVzICBuZSBwYXMgdHJlIGNvbnNjaWVudGVzIGRlIGxldXIgc2l0dWF0aW9uIGNvcnBvcmVsbGUgZXQsIHRycyBzb3V2ZW50LCBlbGxlcyBlbiBzb3VmZnJlbnQuIEVsbGVzIHZpdmVudCBkYW5zIHVuIGVudmlyb25uZW1lbnQgbWFqb3JpdGFpcmVtZW50IGhvc3RpbGUsIHNhbnMgY29tcHRlciBsZXMgZGlmZmljdWx0cyAgcydoYWJpbGxlciwgbCdpbmNvbmZvcnQgcGh5c2lxdWUuIE1haXMgZWxsZXMgbidvbnQgcGFzIGZvcmNtZW50IGRhdmFudGFnZSBkZSBwcm9ibG1lcyBkZSBzYW50IHF1ZSBsZXMgYXV0cmVzIDogbGV1cnMgYW5hbHlzZXMgZGUgc2FuZyBzb250IHNvdXZlbnQgaW1wZWNjYWJsZXMuIEFsb3JzIHBvdXJxdW9pIGxlcyBlbm51eWVyIGF2ZWMgbGV1ciBwb2lkcyBxdWFuZCBlbGxlcyBuZSBjb25zdWx0ZW50IHBhcyBwb3VyIGNlbGEgPwpUaGlzIGlzIHRoZSBDYW55b24gUmFuY2ggb2YgQXNpYSwgYSBkZXN0aW5hdGlvbiBzcGEgb24gc2V2ZW4gYWNyZXMgZnJvbnRpbmcgdGhlIEd1bGYgb2YgVGhhaWxhbmQuIE9wZW5lZCBpbiAxOTk1LCBDaGl2YSBTb20gKHRoZSBuYW1lIG1lYW5zICJIYXZlbiBvZiBMaWZlIikgaXMgdGhlIG9ubHkgaGVhbHRoIGFuZCB3ZWxsbmVzcyBzcGEgaW4gU291dGhlYXN0IEFzaWEuIFJlZ2lzdGVyZWQgYXMgYSBtZWRpY2FsIGNsaW5pYywgaXQgb2ZmZXJzIGEgd2lkZSByYW5nZSBvZiBzcGEgYW5kIGhvbGlzdGljIG1lZGljYWwgdHJlYXRtZW50cywgc3VjaCBhcyBhY3VwdW5jdHVyZSBhbmQgQXl1cnZlZGljIHRoZXJhcGllcywgYW5kIGFjdGl2aXRpZXMgbGlrZSB0YWkgY2hpIGFuZCBQaWxhdGVzIChpbiB0aGUgY291bnRyeSdzIG9ubHkgUGlsYXRlcyBzdHVkaW8pLiBUaGUgcHJpY2UgaW5jbHVkZXMgdGhyZWUgc3VwZXJiIHNwYSBjdWlzaW5lIG1lYWxzIGFuZCBvbmUgbWFzc2FnZSBlYWNoIGRheSwgYW5kIGFsbCB2aXNpdHMgYmVnaW4gd2l0aCBhIHdlbGxuZXNzIGNvbnN1bHRhdGlvbi4gQ2hpIE5laSBUc2FuZyAoJDk4KSwgYW4gYWJkb21pbmFsIG1hc3NhZ2UsIHdhcyA0NSBtaW51dGVzIG9mIHByb2JpbmcgdGhhdCBtYWRlIG1lIGZlZWwgbGlnaHRlciBhbmQgcHVyZXIuIEFsc28gcmVjb21tZW5kZWQ6IFRoYWkgaGVyYmFsIG1hc3NhZ2UgKCQ2MSksIHdoaWNoIGNvbWJpbmVzIFRoYWkgbWFzc2FnZSB3aXRoIGhlYXRlZCBoZXJiYWwgcGFja3MgdG8gZGV0b3hpZnkgYW5kIHJlbGlldmUgYWNoZXMuIFJvb21zIGFyZSBsdXh1cmlvdXMsIHdpdGggdGhlIHN0YW5kIGFsb25lIHBhdmlsaW9ucyBwYXJ0aWN1bGFybHkgd29ydGggdGhlaXIgcHJpY2UgKCQ3NzAgcGVyIHBlcnNvbikuIFRoZXkgaGF2ZSBzaWxrIGZ1cm5pc2hpbmdzLCBnYXJkZW5zLCBhbmQgb3V0ZG9vciBzYWxhIGFyZWFzLiBDaGl2YSBTb20gY2F0ZXJzIHRvIGEgbG95YWwgY2xpZW50ZWxlOiBUd2VudHkgZml2ZSBwZXJjZW50IG9mIGl0cyBndWVzdHMgaGF2ZSBjb21lIHRocmVlIHRpbWVzIG9yIG1vcmUuClRoaXMgaXMgY2FsbGVkIHBpcmFjeS4gClRoZSBiZXN0IGV2ZXIgaXMgdGhlIG9uZSB0aGF0IGhhcyBkZWZlYXRlZCBoaW1zZWxmLiAKS2VlcCBibHVmZmluZyB1bmRlciB5b3VyIGhhdDogTWFpbnRhaW4vY29uY2VhbCB0aGUgYmx1ZmYgb24gYSB3ZWFrIGhhbmQuIApOb3Qgb25seSBkbyBJIGdldCBhIGRhaWx5IHJlbWluZGVyIG9mIGhvdyBiYWQgdGhpbmdzIHN0aWxsIGFyZSBvdXQgdGhlcmUgSSBnZXQgdG8gYmUgb2Ygc2VydmljZSB0byBvdGhlciBhZGRpY3RzLiBUaGUgYmlnZ2VzdCBmYWN0b3IgaXMganVzdCB0aW1lLiBUaGUgYWJzb2x1dGUgaGFyZGVzdCwgc2Nhcmllc3QgcGFydCBvZiByZWNvdmVyeSBpcyBtYWtpbmcgdGhlIGRlY2lzaW9uIHRvIHF1aXQgYW5kIGZvbGxvd2luZyB0aHJvdWdoIHdpdGggdGhhdCBkZWNpc2lvbi4gCllvdSBmaWd1cmUgb3V0IHRoZSBkYXkgdG8gZGF5IGhpa2luZyBhc3BlY3Qgb2YgbGlmZSBvbiB0aGUgdHJhaWwuIEkgdGhpbmsgdGhlIHNsZWVwaW5nIGFzcGVjdCBvZiB0aGUgdHJpcCB3aWxsIGJlIHRoZSBtb3N0IGRpZmZpY3VsdC4gU28gbWFueSBkaWZmZXJlbnQgdmFyaWFibGVzIGhlcmUuIApBbnlvbmUgd2hvIHRoaW5rcyB0aGV5IGtub3cgYWJvdXQgUGFjaWZpYyBGaWxtcyB3aWxsIGJlIGFtYXplZCB0byBkaXNjb3ZlciB0aGUgZW5vcm1pdHkgb2YgdGhlIGNvbXBhbnkncyBvdXRwdXQsIGRlc2NyaWJlZCBzbyB3ZWxsIGJ5IEpvaG4gUmVpZCBhZnRlciBhbiBpbW1lbnNlIGFtb3VudCBvZiByZXNlYXJjaC4gQW5kIGFueW9uZSB3aG8gdGhvdWdodCB0aGF0IFBhY2lmaWMgRmlsbXMgZmFjZWQgb25seSBvY2Nhc2lvbmFsIG9wcG9zaXRpb24gd2lsbCBiZSBzaG9ja2VkIHRvIGRpc2NvdmVyIGZvciBob3cgbG9uZyBpdCBmYWNlZCBzbyBtYW55IHN0dWJib3JuIHJlamVjdGlvbnMgICBub3Qgb25seSBmcm9tIGJvdGggb2YgTmV3IFplYWxhbmQncyB0d28gdGhlYXRyaWNhbCBleGhpYml0aW9uIGNvbXBhbmllcyBhdCB2YXJpb3VzIHRpbWVzLCBidXQgYWxzbyBmcm9tIHRoZSBtb25vcG9saXN0aWMgZ292ZXJubWVudCBvd25lZCBOYXRpb25hbCBGaWxtIFVuaXQgYW5kIGxhdGVyIGZyb20gdGhlIGVxdWFsbHkgbW9ub3BvbGlzdGljIGFuZCBpbndhcmQgbG9va2luZyBzdGF0ZSB0ZWxldmlzaW9uIHN5c3RlbSAod2hpY2ggcmVmdXNlZCB0byBzaG93IGFueXRoaW5nIG1hZGUgYnkgUGFjaWZpYyBGaWxtcyBvciB0byBjb21taXNzaW9uIGFueSBwcm9kdWN0aW9ucywgZXhjZXB0IGR1cmluZyBhIGJyaWVmIHBlcmlvZCB3aGVuIFRhaHUgU2hhbmtsYW5kIHdhcyBoZWFkIG9mIHByb2R1Y3Rpb24uKQpUaGUgUG9zdCBvbiBUaHVyc2RheSBicm9rZSB0aGUgbmV3cyB0aGF0IHRoZSBncm91cCB3YXMgbmVhciBhIGRlYWwgdG8gYnV5IFlFUywgb25lIG9mIE5ldyBZb3JrJ3MgbW9zdCBwcm9taW5lbnQgY2FibGUgc3BvcnRzIGNoYW5uZWxzLCBmcm9tIERpc25leSBmb3IgYWJvdXQgJDMuNSBiaWxsaW9uLgpUaGUgVHVya3MgaGF2ZSBiZWVuIHRyeWluZyB0byBzdGVhbCBoaXN0b3J5IGZyb20gYWxsIG92ZXIgdGhleSB0cmllZCB0byB3aXRoIEFybWVuaWEgYnV0IGZhaWxlZCBhbmQga25vdyB0aGVpciB0cnlpbmcgdG8gdGFrZSBmcm9tIHRoZSBLdXJkcyBzdGFydGluZyB3aXRoIHRoZSBrYW5nYWwgZG9nIHdob3NlIG9yaWdpbmFsIG5hbWUgd2FzIFRoZSBLdXJkaXNoIEthbmdhbCBEb2cuIApKdWRnaW5nIGJ5IHlvdXIgc2NyZWVuIG5hbWUgSSB3b3VsZCBpbWFnaW5lIHlvdSdyZSBtb3N0IGludGVyZXN0ZWQgaW4gUG9rZXIuIExhc3QgeWVhciBJIG1hZGUgb3ZlciA3MGsgYW5kIHRoaXMgeWVhciBJJ20gb24gcGFjZSBmb3IgNDVrLiAKMi4gUm9hc3QgaW4gdGhlIGhvdCBvdmVuIGZvciAzNSBtaW51dGVzLiBUaGUgY2hpY2tlbiBzaG91bGQgYmUgY29va2VkIHRocm91Z2guIENoZWNrIHRoaXMgYnkgcGllcmNpbmcgdGhlIGZsZXNoIG5lYXIgdGhlIGJvbmUsIHdpdGggdGhlIHRpcCBvZiBhIHNoYXJwIGtuaWZlLCBpbiBvbmUgb2YgdGhlIGxhcmdlciBwaWVjZXMuIFRoZSBqdWljZXMgc2hvdWxkIHJ1biBjbGVhciB3aXRoIG5vIHRyYWNlIG9mIHBpbmsuIElmIG5vdCwgY29vayBmb3IgYSBmZXcgbWludXRlcyBtb3JlIHRoZW4gdGVzdCBhZ2Fpbi4gVGhlIHRvcCBzaG91bGQgYmUgYSBsb3ZlbHkgZ29sZGVuIGNvbG9yLgpKdWRlbnB1YmVuIHUKTXkgZXhwZXJpZW5jZSB3aXRoIHN1Y2ggdGhpbmdzIGlzIGxpbWl0ZWQgdG8gaW50ZXJwcmV0aW5nIHJlZGRpdCBjb21tZW50cywgYnV0IEkgdGhpbmsgYSB3aGlsZSBhZ28gcGVvcGxlIHdlcmUgZ29pbmcgdGhyb3VnaCBhIHBoYXNlIHdoZXJlIGV2ZXJ5b25lIHdhcyB0YWxraW5nIGFib3V0IGFuYWwgc2V4IChtYW4gdG8gd29tYW4pIGFuZCB0aGVuIHRoZSBuZXh0ICJuZXcgbm9ybWFsIiB3YXMgbWVuIGdldHRpbmcgcGVuZXRyYXRlZCB3aXRoIGRpbGRvcy4gClRoZSBUSEMgaXMgbW9yZSBlZmZlY3RpdmUgd2l0aCB0aGUgQ0JEIGF0IGhlbHBpbmcgbWUgbWFuYWdlIG15IGNocm9uaWMgcGFpbiB0aGFuIGl0IGlzIHdpdGggaGVtcCBDQkQsIHdoaWNoIGhhcyBubyBUSEMuIApBIGJsaW5kIHN0cnVjdHVyZSBpcyBhbiBhbW91bnQgdGhhdCBtdXN0IGJlIHBvc3RlZCBieSB0aGUgMiBwbGF5ZXJzIHRvIHRoZSBsZWZ0IG9mIHRoZSBkZWFsZXIgYnV0dG9uIGJlZm9yZSB0aGUgY2FyZHMgYXJlIGRlYWx0LCBpbiBvcmRlciB0byBnZXQgdGhlIGJldHRpbmcgc3RhcnRlZC4gSW4gYSBub3JtYWwgY2FzaCBnYW1lLCB0aGUgYmxpbmQgc3RydWN0dXJlIHdpbGwgc3RheSB0aGUgc2FtZS4gKEZ1bGwgQW5zd2VyKQpTaGUgd2FzIHJlYWxseSBwbGVhc2FudCBhbmQgZXZlcnl0aGluZyBidXQgSSBqdXN0IGNvdWxkbiBzaGFrZSB0aGlzIGZlZWxpbmcgdGhhdCBzaGUgd2FzIGEgYml0IGZha2Ugb3IgaW5zaW5jZXJlIGFuZCBJIGdvdCB0byBhIHBvaW50IHdoZXJlIEkgd2FzIHJlYWxseSBhbm5veWVkIHdoZW5ldmVyIHNoZSBzaG93IHVwLiAKQW5uYWxzIG9mIHRoZSBSaGV1bWF0aWMgRGlzZWFzZXMgYWRoZXJlcyB0byB0aGUgaGlnaGVzdCBzdGFuZGFyZHMgY29uY2VybmluZyBpdHMgZWRpdG9yaWFsIHBvbGljaWVzIG9uIHB1YmxpY2F0aW9uIGV0aGljcywgc2NpZW50aWZpYyBtaXNjb25kdWN0LCBjb25zZW50IGFuZCBwZWVyIHJldmlldyBjcml0ZXJpYS4KTXkgc2libGluZ3M/IFRoZSBDQnMgcHJvYmFibHkgaGF2ZSBhIGdpYW50IHBpdHkgcGFydHkgdG9nZXRoZXIuIE15IHNpc3RlciB3aWxsIGV2ZW4gY2FsbCBhbmQgY29tcGxhaW4gdG8gbWUuIEkgZG9uIHRhbGsgdG8gbXkgZWxkZXN0IGJyb3RoZXIsIGF0IGFsbCBiZWNhdXNlIG9mIGhvdyBoZSB0cmVhdGVkIG15IG1vbSBhbmQgaG93IGhpcyB3aWZlIHRhbGtlZCB0byBtZSBiZWNhdXNlIEkgd291bGRuIHNlbmQgdGhlbSBtb25leSB5ZWFycyBhZ28uIApZb3UganVtcGVkIG91dCBvZiBvbmUgcmVsYXRpb25zaGlwIChzb3VuZHMgbGlrZSB5b3Ugd2VyZSBhbiBlbW90aW9uYWwgY2hlYXRlcikgYW5kIHJpZ2h0IG9uIGludG8gdGhlIG5leHQgb25lIHdpdGhvdXQgYW55IHRpbWUgZm9yIHNlbGYgcmVmbGVjdGlvbiBvciBwZXJzb25hbCBncm93dGguIApQb25uaXlpbiBzZWx2YW4gYXVkaW8gYm9vayBtcDMgZnJlZSBkb3dubG9hZGEgcmVwb3J0IG9uIHByb2NlZHVyZSBvZiB3aW5kaW5nIHVwIHBhcnRuZXJzaGlwIHBkZiBkb3dubG9hZGRvcmFlbW9uIG1vdmllIG5vYml0YSdzIGRpbm9zYXVyIGRvd25sb2FkIGZyZWVpbnN0bWFua0Nsb3VkeSB3aXRoIGEgY2hhbmNlIG9mIG1lYXRiYWxscyBmdWxsIG1vdmllIGluIGhpbmRpIGluIDNncHlvdSBhcmUgdGhlIGFwcGxlIG9mIG15IGV5ZSBtcDQgZG93bmxvYWQKVGhpcyBpcyBzb21lIHZlcnkgZ29vZCBhZHZpY2UsIGFuZCBPUCBzaG91bCBkZWZpbml0bGV5IGZvbGxvdyBpdC4gQXMgYSBuYXRpdmUgc3BlYWtlciwgSSBkaXNhZ3JlZSB3aXRoIG9uIHRoaW5nOlNlY29uZCBvZiBhbGwsIHdoaWxlIHRoZXkga25vdyB0aGUgbGFuZ3VhZ2UgYnkgaGVhcnQsIHRoZSBncmVhdCBtYWpvcml0eSBkbyBub3QgcmVhbGx5IGhhdmUgZ3JhbW1hciBrbm93bGVkZ2UuIEFzayBhIHBlcnNvbiB3aHkgYSB0aGluZyBpcyBsaWtlIHRoaXMgb3IgbGlrZSB0aGF0IGFuZCB0aGV5IHdpbGwgcHJvYmFibHkgbm90IGhhdmUgYSBnb29kIGFuc3dlciB0byBpdC5OYXRpdmUgc3BlYWtlcnMgb2YgYW55IGxhbmd1YWdlIGFsd2F5cyBoYXZlIGEgYmV0dGVyIGdyYW1tYXIga25vd2xlZGdlIHRoYW4gYW55b25lIGVsc2UsIGluY2x1ZGluZyB0ZXh0Ym9va3MuIApJdCdzIG5vdCBuZWNlc3NhcnkgdG8gZm9sbG93IGFueSBwZXJzb25zIGRlZmluaXRpb25zIG9yIGV4cGxhbmF0aW9uLiBJdCBjYW4gYmUgZXhwbGFpbmVkIG9uIHRoZSBiYXNpcyBvZiBvdXIga25vd2xlZGdlIGFuZCBiZWxpZWYuIApGZWVsIGZvciBhbGwgYXNzYXVsdCB2aWN0aW1zIGJ1dCBhIHN5c3RlbSBsaWtlIHRoYXQgaXMgY2xlYXJseSBleHBsb2l0YWJsZSBieSBhbnlvbmUgd2hvIHdhbnRzIHRvIGdldCBhIGhhbmQgdXAgb3ZlciBjb21wZXRpdGlvbi4gQW5kIHdoaWxlIGl0cyBhbGwgZ29vZCB0byBoYXZlIHRoZW0gdGF1Z2h0IGFib3V0IGRhbmdlcnMsIHN0cmVldHMsIGV0YyBzb21lIHRpbWVzIHRoZXkgYXJlIGp1c3Qgc3R1cGlkIGF0IHRoYXQgYWdlIHRoZXkgZm9yZ2V0LCB0aGV5IGFyZSBsb29raW5nIGZvciBzb21ldGhpbmcgYW5kIGRvbiByZWFsaXplIHRoZXkgYXJlIHdhbGtpbmcgb250byBhIHN0cmVldC4gSGVsbCBzaGUgd2FzIHByb2JhYmx5IGxvb2tpbmcgZm9yIGhlciBkYWQgKGJ5IHRoZSB3YXkgaGUgcGlja3MgaGVyIHVwIGFuZCBzaGUgY29tZm9ydGFibGUgSSBhc3N1bWUgdGhhdHMgd2hvIGl0IGlzKSB3aG8gY3Jvc3NlZCB0aGUgc3RyZWV0IHdpdGhvdXQgaGVyLgpJZiB0aGlzIGlzIHNvbWV0aGluZyB5b3UgYXJlIHVuY29tZm9ydGFibGUgbGl2aW5nIHdpdGgsIGl0IGlzIGFic29sdXRlbHkgcmVhc29uYWJsZSBub3QgdG8gbGl2ZSBpbiBhIHJlbGF0aW9uc2hpcCB3aXRoIHRoaXMgc29ydCBvZiBhcnJhbmdlbWVudC4gWW91IGRvbiBldmVuIGhhdmUgdG8gdHJ5IGFuZCB1bmRlcnN0YW5kIHdoeSBvdGhlciBwZW9wbGUgbWlnaHQgZmluZCB0aGlzIGRlc2lyYWJsZS4gQnV0IHdoYXQgeW91IGhhdmUgdG8gdW5kZXJzdGFuZCBpcyB0aGF0IG5vdCBldmVyeWJvZHkgaGFzIHRoZSBzYW1lIHZpZXdzIGFuZCB2YWx1ZXMgYXMgeW91IGhhdmUsIGFuZCB0aGF0IGlzIHRvdGFsbHkgb2theS4KU3BlbmRzIHNvIG11Y2ggdGltZSBjb29raW5nIHNoZSB3YW50ZWQgdG8gYmUgYWJsZSB0byBleHBlcmllbmNlIGhlciBndWVzdHMgcmF0aGVyIHRoYW4gaGF2aW5nIGhlciBiYWNrIHRvIHRoZW0uIApCdXQgY3JpdGljcyBzYXkgdGhlIGFubm91bmNlbWVudCBvYnNjdXJlcyBGYWNlYm9vaydzIGRlZXBlciBtb3RpdmF0aW9uczogVG8gZXhwYW5kIGx1Y3JhdGl2ZSBuZXcgY29tbWVyY2lhbCBzZXJ2aWNlcywgY29udGludWUgbW9ub3BvbGl6aW5nIHRoZSBhdHRlbnRpb24gb2YgdXNlcnMgYW5kIHRvIGRldmVsb3AgbmV3IGRhdGEgc291cmNlcyBmb3IgdHJhY2tpbmcgcGVvcGxlLiAoQVAgUGhvdG8vQW5kcmV3IEhhcm5paywgRmlsZSlIb3cgRmFjZWJvb2sgc3RhbmRzIHRvIHByb2ZpdCBmcm9tIGl0cyBwdXNoQXQgZmlyc3QgZ2xhbmNlLCBNYXJrIFp1Y2tlcmJlcmcgbmV3ICJwcml2YWN5IGZvY3VzZWQgdmlzaW9uICIgZm9yIEZhY2Vib29rIGxvb2tzIGxpa2UgYSB0cmFuc2Zvcm1hdGl2ZSBtaXNzaW9uIHN0YXRlbWVudCBmcm9tIGEgQ0VPIHVuZGVyIHByZXNzdXJlIHRvIHJldmVyc2UgLi4gClRoYW5rIHlvdSBmb3IgdGhpcyBpbmZvISBJIGFtIGNvbnNpZGVyaW5nIGRvaW5nIE1heCdzIGxpc3QgYmVjYXVzZSBJIGFtIGJyaW5naW5nIG15IGdpcmxmcmllbmQgdG8gc2VlIHdvbmRlcnMgYXQgZHVzayBhbmQgc2xlZXAgbm8gbW9yZSBhZ2FpbiBmb3IgaGVyIGJpcnRoZGF5LiBXb25kZXJzIGF0IGR1c2sgZW5kcyBhdCBhcm91bmQgODozMCBhbmQgc2xlZXAgbm8gbW9yZSBzdGFydHMgYXQgOTowMCwgaWYgd2UgZG8gTWF4J3MgbGlzdCB3ZSB3aWxsIGhhdmUgbm8gd29ycmllcyBnZXR0aW5nIHJpZ2h0IGluIGFuZCB3aWxsIGFkZCBhIGxpdHRsZSBtb3JlIG1hZ2ljIHRvIHRoZSBuaWdodCBnZXR0aW5nIHRoYXQgdmlwIGV4cGVyaWVuY2UuIElmIHdlIGRpZG4ndCBkbyBNYXgncyBsaXN0IGhvdyBiaWcgb2YgYSB3YWl0IGRvIHlvdSBiZWxpZXZlIHdlJ2QgZmluZCBvdXJzZWx2ZXMgaW4gYWZ0ZXIgd29uZGVycyBhdCBkdXNrIHRyeWluZyB0byBnZXQgaW50byBzbGVlcCBubyBtb3JlPwpXaGVuIHRoZXkgZGllZCwgd2UgbGlrZWQgdG8gZ2l2ZSB0aGVtIGEgcHJvcGVyIGJ1cmlhbCBpbiB0aGUgZ2FyZGVuLiAKSG93ZXZlciwgaXQgY2VydGFpbmx5IHF1YWxpZmllcyBmb3IgYmFkICAgcmVhbGx5IGJhZCAgIGlmIHdlIHRha2UgYSBxdWljayBsb29rIGF0IHRoZSBoaXN0b3J5IG9mIHRoZSBXU09QLiBBbmQgeWVzLCBJIGtub3cgaG93IGJvcmluZyBoaXN0b3J5IGNhbiBiZSwgYnV0IGJlbGlldmUgbWUsIHRoZSBiYWNrc3RvcnkgdG8gdGhlIFdTT1AgaXMgYW4gYWJzb2x1dGVseSBmYXNjaW5hdGluZyB0YWxlLCBpbnZvbHZpbmcgbXVyZGVyLCByYWNrZXRlZXJpbmcsIGJyaWJlcnksIGNvcnJ1cHRpb24sIGFuZCBtb25leSBsYXVuZGVyaW5nLiBUaGluayB0aGF0IGp1c3RpZmllcyB0aGUgImJhZCIsIGRvbid0IHlvdT8uIApJdCB0b29rIGEgbGl0dGxlIGJpdCB0byBnZXQgdGhlIHR1bmluZyByaWdodC4gTXkgYmlnZ2VzdCBhbGFybSB3YXMgdGhhdCBpdCBzZWVtZWQgdG8gd29yayBncmVhdCBmb3IgYSBkYXkgb3Igc28gYW5kIHRoZW4gSSBoYWQgc3RlYWRpbHkgaW5jcmVhc2UgdGhlIGFtcGVyYWdlLiBJIHdhcyB3b3JyaWVkIHRoYXQgaXQgd2FzIGxpa2Ugc28gbWFueSBvZiBvZiB0aGUgZHJ1Z3MgSSBoYWQgdGhhdCB3b3VsZCBvbmx5IGhlbHAgZm9yIGEgZmV3IGRheXMuLiAKV2hhdCB5b3UgbGVhcm4gb25jZSB5b3UgaGF2ZSBzb21lIHN1Y2Nlc3MgYXMgYSB0ZWNoaWVzIGlzIHRoZSBlbmVteSB0ZWFtIGlzIG1vcmUgc2NhcmVkIG9mIHRoZSBpZGVhIG9mIG1pbmVzIHRoYW4gdGhleSBzaG91bGQgYmUuIEEgbG90IG9mIHRoZSB0aW1lIHRoZXkgc2ltcGx5IGRvbiBwdXNoIG91dCBvZiBmZWFyIHdoZW4gdGhleSB0b3RhbGx5IGNvdWxkIGFuZCB3aW4gdGhlIGdhbWUsIG15IG1pbmVzIHdvdWxkbiBmdWNraW5nIHN0b3AgdGhlbSB1bmxlc3MgdGhleSBkdW1iIGVub3VnaCB0byB3YWxrIHVwIGluIGEgNSBmb3JtYXRpb24gYW5kIHN1aWNpZGUgc3F1YWQgb24gdGhlbS4uIApBdCBsZWFzdCB0aGF0IHdheSB0aGV5IGNhbiB3YXNoIHRoZWlyIGhhbmRzIHNheWluZyAibG9vaywgd2UncmUgZ2l2aW5nIHlvdSB0aGUgZnVsbCBkZWFsIHRoYXQgeW91IHdhbnRlZCIuSSdkIHNheSB0aGF0IGEgc2Vjb25kIHllbGxvdyBzaG91bGQgYmUgYW4gYXBwZWFsYWJsZSBzaXR1YXRpb24uIElmIHlvdSdyZSByaWdodCB0aGVuIHRoZSBjYXJkIGlzIG92ZXJ0dXJuZWQgYW5kIGlmIHlvdSdyZSB3cm9uZyB0aGVuIG9mZiB5b3UgZ28gYW5kIHlvdXIgdGVhbSBsb3NlcyB0aGVpciByZXZpZXdzIGZvciB0aGUgcmVtYWluZGVyIG9mIHRoZSBnYW1lLiAKVGhpcyBwYWdlIGxpc3RzIG1hbnkgd2F5cyB0aGVzZSBvcmdhbml6YXRpb25zIHBhcnRuZXIgd2l0aCB0aGUgVm9sdW50ZWVyIENlbnRlciB0byBwcm9tb3RlIHNlcnZpY2UsIHJlY3J1aXQgbmV3IHZvbHVudGVlcnMsIGFuZCBiZSByZWNvZ25pemVkIGZvciB0aGVpciBlZmZvcnRzLiAKQ2FyaWJiZWFuIFN0dWQgUG9rZXIgaXMgYW5vdGhlciBwb3B1bGFyIFBva2VyIGdhbWUuIFRoZSBnYW1lIHN0YXJ0cyB3aXRoIHBsYWNpbmcgYW4gQW50ZSBiZXQgYWZ0ZXIgd2hpY2ggYm90aCB0aGUgcGxheWVyIGFuZCB0aGUgZGVhbGVyIGFyZSBkZWFsdCA1IGNhcmRzIHdpdGggb25seSBvbmUgb2YgdGhlIGRlYWxlcidzIGNhcmRzIGZhY2UgdXAuIFlvdSBjYW4gRm9sZCBvciBDYWxsLCB3aGljaCBpcyB3b3J0aCBhIGRvdWJsZSBBbnRlIGJldCBhbmQgY2hlY2sgb3V0IGlmIHlvdSBoYXZlIGEgYmV0dGVyIGhhbmQgdGhhbiB0aGUgZGVhbGVyLgpXZSBoYXZlIG1vdmVkIHRvIEZhY2Vib29rIGNvbW1lbnRpbmcgb24gb3VyIHdlYnNpdGUgaW4gYSBiaWQgdG8gZm9zdGVyIGEgcm9idXN0LCByZWxldmFudCBhbmQgcmVzcGVjdGZ1bCBkZWJhdGUgb24gdGhlIGlzc3VlcyBvZiB0aGUgZGF5LiBCZWxvdyBhcmUgYW5zd2VycyB0byBzb21lIHF1ZXN0aW9ucyB5b3UgbWlnaHQgaGF2ZS4KVGhlbiBoZSB3YXMgcGxheWluZyBncmVhdCBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoaXMgc2Vhc29uLCBidXQgZ290IGluanVyZWQgYWdhaW4gKGFsb25nIHdpdGggU3ViYmFuLCBGb3JzYmVyZywgQXJ2aWRzc29uLCBTbWl0aCwgU2lzc29ucywgU2Fsb21ha2ksIFJpbmFsZG8gYW5kIHNvbWUgb3RoZXJzIEkgc3VyZSBJIGZvcmdldHRpbmcgICB3aG8gd2VyZSBhbGwgb3V0IGZvciBleHRlbmRlZCBwZXJpb2RzIHNpbmNlIERlY2VtYmVyL0phbnVhcnkgYXQgdGhlIHNhbWUgdGltZSkgYW5kIGhhcyBiZWVuIGNvbXBsZXRlbHkgaW52aXNpYmxlIHNpbmNlIGhlIHJldHVybmVkLkkgd2lsbCBzYXkgaXQgbm90IG9ubHkgaGltLiBNb3N0IG9mIHRoZSBwbGF5ZXJzIHdobyByZXR1cm5lZCBmcm9tIGluanVyeSBoYXZlIGJlZW4gcGxheWluZyBwb29ybHkgc2luY2UgdGhleSByZXR1cm5lZCwgbW9zdCBub3RpY2VhYmx5IEZvcnNiZXJnLiAKVGhlIG9wZXJhdGlvbiBkZXJpdmVzIGl0cyBuYW1lIGZyb20gcG9rZXIgY2hpcHMgdGhhdCB3ZXJlIGdpdmVuIHRvIHRoZSBjdXN0b21lcnMgd2hvIHBhaWQgYSAiY2FyZXRha2VyIiB0byBoYXZlIHNleCB3aXRoIGEgc2V4IHRyYWZmaWNraW5nIHZpY3RpbS4gVGhlIGN1c3RvbWVyIHRoZW4gdHVybmVkIGluIHRoZSBwb2tlciBjaGlwIHRvIHRoZSB2aWN0aW0uIFRoZSBzZXggdHJhZmZpY2tlcnMgb3IgImNhcmV0YWtlcnMiIGNvbGxlY3RlZCB0aGUgcG9rZXIgY2hpcHMgYXQgdGhlIGVuZCBvZiB0aGUgZGF5IHRvIGtlZXAgdHJhY2sgb2YgaG93IG1hbnkgY2xpZW50cyB0aGV5IGhhZC4KWW91IHdpbGwgYmUgdG93ZWQuIApJdCBoYXMgYmVlbiBoaWdoIGNvcnBvcmF0ZSBkcmFtYSwgYnV0IEdNJ3MgbG9uZyB0ZXJtIHJlY292ZXJ5IHJlcXVpcmVzIHNleHkgbmV3IHByb2R1Y3RzICAgYW5kIFdhZ29uZXIga25vd3MgaXQuCkRhZCBjYW4gY2FzaCBpbiB1cCB0byBmb3VyIGtpZHMgZm9yIGEgbWF4aW11bSAkNDAwIG9mZiB0aGVpciBzdGF5IGF0IHRoZSBmYW1pbHkgZnJpZW5kbHkgcmVzb3J0cy4gCk9wZW5pbmcgdGhlb3J5IGtub3dsZWRnZSBqdXN0IGN1dHMgZG93biBvbiB0aGUgYW1vdW50IG9mIHRoaW5raW5nIHlvdSBuZWVkIHRvIGRvIGluIHlvdXIgYWN0dWFsIGdhbWVzIGJlY2F1c2UgeW91IGFscmVhZHkga25vdyB0aGUgbGlrZWx5IHNjZW5hcmlvcyBvZmYgdGhlIHRvcCBvZiB5b3VyIGhlYWQuIApJIHdvdWxkIHRyeSB0byBmaW5kIHRoZSBkb2N1bWVudHMgdGhyb3VnaCB5b3VyIGNpdHkgb3IgY291bnRyeSByZWdpc3RyYXIuIApSZWd1bGFyIHBsYXlpbmcgY2FyZHMgd2l0aCBqdW1ibyBmYWNlcwpBbmQgcXVpdGUgZnJhbmtseSBJIG5lZWQgUHVibGljaXMgdG8gYmUgaGVhbHRoeSwgV1BQIHRvIGJlIGhlYWx0aHksIGFsbCBteSBzaXN0ZXIgYWdlbmNpZXMgdG8gYmUgaGVhbHRoeSBpbiBvcmRlciB0byBnaXZlIHVzIGEgdmFsaWQgcGxhY2UgaW4gdGhlIGZ1dHVyZS4gSSBqdXN0IHRob3VnaHQgaXQgd2FzIGJ1bGxzaGl0LCIgaGUgc2F5cywgYWRkaW5nIHRoYXQgaGUgY29uc2lkZXJzIFNhZG91biBhIGZyaWVuZC4uIApUaGVyZSB3ZXJlIHNvbWUgZGVlcGVyIG1lYW5pbmdzIHJlbGF0aW5nIHRvIGJsYWNrIGhpc3RvcnkuIApUaGUgYXBwcm9hY2ggYW1vdW50cyB0byAiQWZnaGFuIGdvb2QgZW5vdWdoIiBpbnN0ZWFkIG9mIGFuIG92ZXJseSBpZGVhbGlzdGljICJBZmdoYW4gaW1wb3NzaWJsZSwiIHNhaWQgQW50aG9ueSBDb3JkZXNtYW4gb2YgdGhlIENlbnRlciBmb3IgU3RyYXRlZ2ljIGFuZCBJbnRlcm5hdGlvbmFsIFN0dWRpZXMuIApXaGF0IHdvcmtlZCBmb3IgbWUgd2FzIGltcHJvdmluZyBteSBkZWZlbnNlLiBUaGUgZmlyc3QgdGltZSBJIHNwYXJyZWQgbXkgaGFuZHMgd2VyZSBpbiBmcm9udCBvZiBteSBmYWNlIGJ1dCBJIGRpZG4gdXNlIG15IGd1YXJkIGZvciBkZWZlbnNlLiAKIldlIGRpZG4ndCBoYXZlIFlvdVR1YmUsIE15U3BhY2Ugb3IgRmFjZWJvb2sgdG8gYW55IGxhcmdlIGRlZ3JlZSBpbiAyMDA0LCIgc2FpZCBKb2UgVHJpcHBpLCB3aG8gd2FzIE1yIERlYW4ncyBjYW1wYWlnbiBtYW5hZ2VyLgoiVGhlcmUgaXMgbm8gb3RoZXIgcGVuYWx0eSBhdmFpbGFibGUgdG8gdGhlIGNvdXJ0IG90aGVyIHRoYW4gYSBzaWduaWZpY2FudCBjdXN0b2RpYWwgc2VudGVuY2Ugc28gdGhlIHB1YmxpYyBjYW4gYmUgcHJvdGVjdGVkIGZyb20gYW4gb3JnYW5pc2VkIGNyaW1pbmFsIGxpa2UgeW91LCIgTXIgUHJvd3NlIHNhaWQuIEhlIHNhaWQgYWx0aG91Z2ggc2hlIHBsZWFkZWQgZ3VpbHR5IGl0IHdhcyBub3doZXJlIG5lYXIgYXQgdGhlIGZpcnN0IG9wcG9ydHVuaXR5LiAKOCkgRXhjZXNzaXZlIFNwYW0uIFBvc3RpbmcgbXVsdGlwbGUgdGhyZWFkcyBhIGRheSBpbiBleGNlc3NpdmUgdXNlLiBUaGlzIGluY2x1ZGVzIG5vbiByZWxldmFudCBwb3N0cyB0byBwb2tlciwgcHVzaGluZyB5b3VyIG5ld3Mgc2l0ZSwgc2hpbGxpbmcgeW91ciBjcnlwdG9jdXJyZW5jeSBzcGVjdWxhdGlvbnMsIGV4Y2Vzc2l2ZSBzaGl0IHBvc3RpbmcsIGFuZCBjb250aW51aW5nIHRvIHBvc3QgY29udGVudCBhZnRlciB5b3UgYmVlbiBzcGVjaWZpY2FsbHkgd2FybmVkIG5vdCB0byBieSB0aGUgbW9kIHRlYW0uIApJZiB0aGF0IHZlaWwgY2FuIGJlIHRoaW5uZWQsIGFuZCB0aGUgb2JqZWN0aXZlcyBleHBsYWluZWQgaW4gYSBzdHJhaWdodGZvcndhcmQgd2F5LCBpdCdzIG1vcmUgbGlrZWx5IHRvIGJlIGVtYnJhY2VkLiBXaGVuIHdlIGV4cGxhaW5lZCBvdXIgcmF0aW9uYWxlIGZvciBpbnRyb2R1Y2luZyBhIHBheSB3YWxsIHRvIGF1ZGllbmNlcyBmdW5kaW5nIGNvbnRlbnQgZmlyc3QgYW5kIGZvcmVtb3N0IGZvciBvdXIgYXVkaWVuY2UgdGhleSBnb3QgaXQgYW5kIHJlc3BvbmRlZCBwb3NpdGl2ZWx5LlNwZWFrIHRvIGF1ZGllbmNlcyB0aGUgd2F5IHRoZXkgc3BlYWsgdG8gZWFjaCBvdGhlckluIG91ciBhbm5vdW5jZW1lbnQgdmlkZW8sIHdlIHdlcmUgb3BlbiBhbmQgc2VsZiBkZXByZWNhdGluZywgYSBub3RhYmxlIGZlYXR1cmUgb2Ygb3VyIGNvbnRlbnQsIHdoaWxlIGFsc28gZGVzY3JpYmluZyB0aGUgZmVhdHVyZXMgYW5kIGJlbmVmaXRzIG9mIHRoZSBwcm9kdWN0LiAKQ2Fubm90IGJlYXQgc3VjaCBhIGNsYXNzaWMsIHVubGVzcyB5b3VyIG5hbWUgaXMgRk1BIEJyb3RoZXJob29kLkFsIHZzIEt5b24gaXMgYSB0b3VnaGllLiAKQnJlYWtpbmcgbmV3cwpXZSB2ZXJ5IGluY29uc2lzdGVudC4gVGhhdCBuZWVkcyB0byBjaGFuZ2UsIGhlIHNhaWQuIG5vdCBnb2luZyB0byBzdGFuZCBoZXJlIGFuZCBtYWtlIGV4Y3VzZXMsIGJ1dCBzb21ldGltZXMgdGhlIHRyYXZlbCBhbmQgdGhhdCB3ZSBtYWtlIHlvdSBmZWVsIGxlZ2d5IGFuZCB0aXJlZC4gQnV0IHdlIG5lZWQgdG8gYmUgYWJsZSB0byBtYW5hZ2UgZ2FtZXMuIEl0IG5vdCBldmVyeSBnYW1lIHdlIGdvaW5nIHRvIGJlIDEwMCBwZXIgY2VudCwgb24gb3VyIGdhbWUuIEJ1dCB3aGF0IHlvdSBjYW4gYnJpbmcgdG8gYSBnYW1lIGV2ZXJ5IHNpbmdsZSB0aW1lIGlzIHdvcmsgcmF0ZSBhbmQgaGVhcnQuCiJTbyB5b3UgYXJlIHRvIGhhdmUgVEhBVCwgdG9vLCIgc2hlIHNhaWQgaW4gYSBjaG9rZWQgdm9pY2UuIEFuZCB3aXRob3V0IGFub3RoZXIgd29yZCBzaGUgaGFkIHR1cm5lZCBhbmQgZ29uZSBhY3Jvc3MgdGhlIGZpZWxkcyBob21ld2FyZC4gQW5uZSB3YXMgZGVlcGx5IGh1cnQ7IGZvciB0aGUgbW9tZW50IHNoZSBmZWx0IGFzIGlmIHNoZSBjb3VsZCBuZXZlciBsaWtlIExlc2xpZSBhZ2Fpbi4gQnV0IHdoZW4gTGVzbGllIGNhbWUgb3ZlciBhIGZldyBldmVuaW5ncyBsYXRlciBzaGUgd2FzIHNvIHBsZWFzYW50LCBzbyBmcmllbmRseSwgc28gZnJhbmssIGFuZCB3aXR0eSwgYW5kIHdpbnNvbWUsIHRoYXQgQW5uZSB3YXMgY2hhcm1lZCBpbnRvIGZvcmdpdmVuZXNzIGFuZCBmb3JnZXRmdWxuZXNzLiBPbmx5LCBzaGUgbmV2ZXIgbWVudGlvbmVkIGhlciBkYXJsaW5nIGhvcGUgdG8gTGVzbGllIGFnYWluOyBub3IgZGlkIExlc2xpZSBldmVyIHJlZmVyIHRvIGl0LiBCdXQgb25lIGV2ZW5pbmcsIHdoZW4gbGF0ZSB3aW50ZXIgd2FzIGxpc3RlbmluZyBmb3IgdGhlIHdvcmQgb2Ygc3ByaW5nLCBzaGUgY2FtZSBvdmVyIHRvIHRoZSBsaXR0bGUgaG91c2UgZm9yIGEgdHdpbGlnaHQgY2hhdDsgYW5kIHdoZW4gc2hlIHdlbnQgYXdheSBzaGUgbGVmdCBhIHNtYWxsLCB3aGl0ZSBib3ggb24gdGhlIHRhYmxlLiBBbm5lIGZvdW5kIGl0IGFmdGVyIHNoZSB3YXMgZ29uZSBhbmQgb3BlbmVkIGl0IHdvbmRlcmluZ2x5LiBJbiBpdCB3YXMgYSB0aW55IHdoaXRlIGRyZXNzIG9mIGV4cXVpc2l0ZSB3b3JrbWFuc2hpcCAgZGVsaWNhdGUgZW1icm9pZGVyeSwgd29uZGVyZnVsIHR1Y2tpbmcsIHNoZWVyIGxvdmVsaW5lc3MuIEV2ZXJ5IHN0aXRjaCBpbiBpdCB3YXMgaGFuZHdvcms7IGFuZCB0aGUgbGl0dGxlIGZyaWxscyBvZiBsYWNlIGF0IG5lY2sgYW5kIHNsZWV2ZXMgd2VyZSBvZiByZWFsIFZhbGVuY2llbm5lcy4gTHlpbmcgb24gaXQgd2FzIGEgY2FyZCAid2l0aCBMZXNsaWUncyBsb3ZlLiIKU3RldmUgV296bmlhayAgIENvIGZvdW5kZXIgb2YgQXBwbGUKUmVhbGx5LCBoZSBwcm9iYWJseSBjb3VsZG4gZWl0aGVyLCBldmVuIGlmIGhlIHdvdWxkbiBhZG1pdCBpdC4uIApNZWRpYSBzb3VyY2VzIHNheSB0aGVyZSBoYXMgYWxzbyBiZWVuIGEgYmVoaW5kIHRoZSBzY2VuZXMgY2FtcGFpZ24gdG8gYXR0cmlidXRlIGJsYW1lIGZvciB0aGUgY2hhcml0eSBmYWlsdXJlIHRvIGZvcm1lciBjaGllZiBleGVjdXRpdmUgQ29sZW1hbiBkZXNwaXRlIGhlciBiZWluZyBlbXBsb3llZCBhcyBDRU8gZm9yIG9ubHkgdGhyZWUgbW9udGhzLiBUaGlzIGlzIGVtcGhhdGljYWxseSBkZW5pZWQgYnkgS2Vyci4gQ29sZW1hbiBoYXMgcmVmdXNlZCB0byBjb21tZW50IG9uIGFueSBtYXR0ZXJzIHJlbGF0aW5nIHRvIHRoZSBmb3VuZGF0aW9uLCBjaXRpbmcgYSBjb25maWRlbnRpYWxpdHkgYWdyZWVtZW50LiAKRW50ZXJ0YWlubWVudCBBcnRpY2xlcyAgTWFyY2ggMTgsIDIwMTAKWWVhc2F5ZXJzdHIgIDE0IHBvaW50cyAgc3VibWl0dGVkIDcgZGF5cyBhZ28KSWYgeW91IHVzZSB0aGUgc2FtZSBwb2tlciB0YWN0aWNzIG92ZXIgYW5kIG92ZXIgYWdhaW4geW91ciBvcHBvbmVudHMgd2lsbCBjYXRjaCBvbiBhbmQgeW91IHdpbGwgbG9zZSBtb25leS4gCkNlbGEgdm91cyBkb25uZSB0IGlsIHVuIHBldSBkJ2VzcG9pciBwb3VyIGwnYXZlbmlyIGRlIGxhIHNvY2l0PyBDZWxhIHZvdXMgZG9ubmUgdCBpbCBsZSBzZW50aW1lbnQgZCd0cmUgZGF2YW50YWdlIHJlbGkgYXV4IGF1dHJlcz8KNi4gUm9iZXJ0IFJvZHJpZ3VleiBVc2VzIEhpcyBIZWFkOiBUaGUgZGlyZWN0b3Igc2F5cyBoZSBlZGl0cyBoaXMgbW92aWVzIGluIGhpcyBoZWFkIHdoaWxlIGZpbG1pbmcgdGhlbS4gV2lsbCBhc2sgeW91IHRvIGRvIHRoaW5ncyB0aGF0IGRvbiBtYWtlIHNlbnNlIGF0IHRoZSB0aW1lLCBidXQgeW91IGhhdmUgdG8gdHJ1c3QgaGltLCBiZWNhdXNlIGhlIGxpdGVyYWxseSBpcyBtYWtpbmcgY3V0cyBhbmQgZWRpdHMgb24gdGhlIHNwb3QuIApJIGdlbmVyYWxseSBhZ3JlZSB3aXRoIHRoZSByZXN0LiBZb3UgZG9uIGhhdmUgdG8gY2FzdCBhIGZlbWFsZSBib2R5YnVpbGRlciBidXQgSSBzdXJlIHRoZXkgY291bGQgZmluZCBzb21lb25lIHdobyBsb29rcyBhIGxpdHRsZSBtb3JlIGxpa2UgYSBwaHlzaWNhbCB0aHJlYXQgdG8gdGhlaXIgZW5lbWllcy4gU29tZW9uZSB3aG8gZG9lc24gYmFzaCBoYWxmIHRoZSBtb3ZpZSBmYW5zIHdvdWxkIGJlIGhlbHBmdWwgdG9vLgpDb2tlIGhhcyByZWxpZWQgb24gbXVsdGlwbGUgYWdlbmNpZXMgZm9yIHRoZSBjYW1wYWlnbiwgcmF0aGVyIHRoYW4gdXNpbmcgYW4gYWdlbmN5IG9mIHJlY29yZC4gVGhlIG5ldyB3YXZlIG9mIGFkcyBpcyBubyBkaWZmZXJlbnQuIFNjaHVsdHogaXMgdGhlIENoaWNhZ28gQnVyZWF1IENoaWVmIGF0IEFkIEFnZSBhbmQgY292ZXJzIGJldmVyYWdlLCBhdXRvbW90aXZlIGFuZCBzcG9ydHMgbWFya2V0aW5nLiBIZSBpcyBhIGZvcm1lciByZXBvcnRlciBmb3IgTWNDbGF0Y2h5IG5ld3NwYXBlcnMsIGluY2x1ZGluZyB0aGUgRnJlc25vIEJlZSwgd2hlcmUgaGUgY292ZXJlZCBidXNpbmVzcyBhbmQgc3RhdGUgZ292ZXJubWVudCBhbmQgcG9saXRpY3MsIGFuZCB0aGUgSXNsYW5kIFBhY2tldCBpbiBTb3V0aCBDYXJvbGluYS4gTmVhbCBBd2FyZHMsIHRoZSBBc3NvY2lhdGlvbiBvZiBDYXBpdG9sIFJlcG9ydGVycyBhbmQgRWRpdG9ycywgdGhlIENhbGlmb3JuaWEgTmV3c3BhcGVyIFB1Ymxpc2hlcnMgQXNzb2NpYXRpb24sIHRoZSBTb3V0aCBDYXJvbGluYSBQcmVzcyBBc3NvY2lhdGlvbiBhbmQgSW52ZXN0aWdhdGl2ZSBSZXBvcnRlcnMgYW5kIEVkaXRvcnMuIEEgbmF0aXZlIG9mIENpbmNpbm5hdGksIFNjaHVsdHogaGFzIGFuIGVjb25vbWljcyBkZWdyZWUgZnJvbSBYYXZpZXIgVW5pdmVyc2l0eSBhbmQgYSBtYXN0ZXJzIGluIGpvdXJuYWxpc20gZnJvbSBOb3J0aHdlc3Rlcm4gVW5pdmVyc2l0eS4KIkV2ZW4gYXMgSSByb2NrZWQgb24gbXkga25lZXMsIGhvd2xpbmcsIEkgZGV0ZWN0ZWQgc29mdCBicmVhdGhpbmcgYmVoaW5kIHRoZSByb2FyaW5nLiBJIGxlYW5lZCBpbiwgbGlzdGVuZWQuIEl0IHdhcyB0aGUgbXVybXVyaW5nIG9mIHRlbiBtaWxsaW9uIG1vdGhlcnMsIGJhY2t3YXJkIGFuZCBmb3J3YXJkIGluIHRpbWUgYW5kIHJpZ2h0IG5vdywgd2hvIGhhZCBsb3N0IGNoaWxkcmVuLiAKTGlrZSBzaGUgd2FudGVkIHRvIGJyZWFrIHVwIGJ1dCBkaWRuIHdhbnQgdG8gYmUgdGhlIG9uZSB0byBkbyBpdC4gCkJodXR0byB3aWRvd2VyIHRvIHJ1biBmb3IgcHJlc2lkZW50ClByZW5hdGFsIHZpdGFtaW5zIHByb2IgYmVjYXVzZSBvZiB0aGUgYmlvdGluLiBXb3JraW5nIG91dC9zYXVuYXMvc3RlYW0gcm9vbXMgICBhbnl0aGluZyB0aGF0IHJhaXNlcyB5b3VyIGJvZHkgdGVtcCBiYXNpY2FsbHkuIApGUkVFIERvd25sb2FkISAuIEZvciBPcGVudGhvcyB0byBydW4geW91ciBjb21wdXRlciBoYXMgdG8gYmUgNjQgYml0IGFuZCBzdXBwb3J0IHg4Ni4gRmViIDcsIDIwMTcgLiAKVGhlIFByZWRhdG9ycyBhcmUgbm93IGxvb2tpbmcgZm9yd2FyZCB0byB0aGUgMjAxNyBXaW5lIEZlc3RpdmFsIGFuZCBUYXN0aW5nLCB0YWtpbmcgcGxhY2Ugb24gTWFyY2ggMzEgYXQgQnJpZGdlc3RvbmUgQXJlbmEuIFRoZSBldmVudCB3aWxsIGZlYXR1cmUgbW9yZSB0aGFuIDI1MCB3aW5lcyBhbmQgYSB2YXJpZXR5IG9mIGN1aXNpbmUsIGFzIHdlbGwgYXMgYSBzaWxlbnQgYXVjdGlvbi4gTkhMLCB0aGUgTkhMIFNoaWVsZCwgdGhlIHdvcmQgbWFyayBhbmQgaW1hZ2Ugb2YgdGhlIFN0YW5sZXkgQ3VwIGFuZCBOSEwgQ29uZmVyZW5jZSBsb2dvcyBhcmUgcmVnaXN0ZXJlZCB0cmFkZW1hcmtzIG9mIHRoZSBOYXRpb25hbCBIb2NrZXkgTGVhZ3VlLgpUaGlzIGlzIHRoZSA1MCB5ZWFyIG9sZCBMZWUncyBuaWdodGx5IHByZWRpY2FtZW50LiBXaXRoIGFuIGF2ZXJhZ2Ugb2YgMTUgdG8gMjAgY2xpZW50cyBpbiBhIDI0IGhvdXIgcGVyaW9kLCBoZSBuZWVkcyBhbGwgdGhlIGN1c3RvbWVycyBoZSBjYW4gZ2V0LiAKUmVhZGluZyBpc24ndCBhcyBoYXJkIGFzIGEgbG90IG9mIHBlb3BsZSB0aGluay4gCldoZW4gSSBtb3ZlZCBiYWNrIHRvIHRoZSBjb2FzdCBmcm9tIHRoZSBPa2FuYWdhbiBhIGZldyBkZWNhZGVzIGFnbywgSSB0b28gd29uZGVyZWQgd2h5IHNwaW5hY2ggKGFuZCBiZWV0cykgZGlkIG5vdCBncm93IHByb3Blcmx5LCBkZXNwaXRlIGEgbGlnaHQgbGltaW5nIHdpdGggZmluZSBkb2xvbWl0ZSBsaW1lIHByaW9yIHRvIHNlZWRpbmcuIFdoZW4gSSBiZWdhbiB1c2luZyBEb2xvcHJpbCwgYSBmYXN0ZXIgYWN0aW5nLCBwcmlsbGVkIChncmFudWxhdGVkKSBkb2xvbWl0ZSBsaW1lLCBpbiBwcmVwYXJpbmcgYSBwbG90IGZvciBzZWVkaW5nLCBteSBzcGluYWNoIHBsYW50aW5ncyBzdGFydGVkIHByb2R1Y2luZyBiZWF1dGlmdWxseS4uIApBbHNvIHRoZXJlOiBDYXJ0aWVyLCBCYW5hbmEgUmVwdWJsaWMsIENvYWNoLCBIIEx1bHVsZW1vbiwgUm9sZXggYW5kIFNlcGhvcmEuIApBbHNvLCBmb3Igd2hhdCBpdCB3b3J0aCwgdGhlIGFwcGxpY2F0aW9ucyBJIGRvbmUgd2l0aCB0aGlzICJwc2V1ZG8iIHJlZHVuZGFuY3kgc2hhcmVkIHRoZSBzYW1lIFBJRCBjb250cm9sbGVkIGVxdWlwbWVudC4gT3VycyBoYWQgYSBsYWcgdGltZSBvbiB0aGUgb3JkZXIgb2YgbWludXRlcyBpbiBiZXR3ZWVuIGlucHV0IGFuZCByZWFjdGlvbiwgc28gd2UgZ290IGF3YXkgd2l0aCBqdXN0IHR1cm5pbmcgb2ZmIHRoZSBQSUQgY29udHJvbCBvbiB0aGUgc3RhbmRieSBjb250cm9sbGVyIGFuZCB0aGVuIHR1cm4gaXQgb24gd2hlbiBpdCBiZWNhbWUgdGhlIG1hc3RlciBjb250cm9sbGVyLiBXb3JrZWQgd2VsbC4gU3RpbGwgd29ydGggYnJpbmdpbmcgdXAgdGhlIHJpc2tzIHdpdGggdGhlIGVuZCBjbGllbnQgYXMgY2xlYXJseSBhcyBwb3NzaWJsZS4KVGhlIHZhc3QgbWFqb3JpdHkgb2YgaXRzIGZ1bmRzIHdlcmUgaW5zdGVhZCBzcGVudCBzdGFnaW5nIGdsaXR6eSBjZWxlYnJpdHkgZXZlbnRzIHN1Y2ggYXNjcmlja2V0IG1hdGNoZXMscG9rZXIgdG91cm5hbWVudHMsIGFuZGdhbGEgZGlubmVycy4gCiQyMC8kMzAgcHJlIGZsb3Agd2l0aCB0aGUgb2NjYXNpb25hbCAzIGJldCBhbmQgc2hvdmVzLiAKRm9yIGV4YW1wbGUsIEkgbmV2ZXIgYmVlbiBsZWN0dXJlZCB0byBhYm91dCBhYm9ydGlvbiBvciBnYXkgbWFycmlhZ2UgYXQgZWl0aGVyIGNodXJjaCAoSSBrbm93IHNldmVyYWwgbWFycmllZCBsZXNiaWFuIGNvdXBsZXMgd2hvIGFyZSBwYXJpc2hpb25lcnMgYW5kL29yIHNlbmQgdGhlaXIgY2hpbGRyZW4gdG8gdGhlIFN0LiBEZW5uaXMgc2Nob29sKSwgYW5kIEkgcmVtZW1iZXIgdGhlIFN0LiAKSSBoYXZlbnQgcmVhZCB0aGUgY29taWNhLCBidXQgcGVvcGxlIHdobyBoYXZlIGhhZCBzYWlkIHRoYXQgaXQgd2FzIGFwcGFyZW50bHkgaGlzIGFuZCByZWdpbmFsZHMgZmF1bHQgdGhhdCBiZW4gZGllZCwgYW5kIHRoYXQgaXQgd2FzIGxpa2VseSBhdHRhY2hlZCB0byBhIG1pc3Npb24uIEx1dGhlciBsaWtlbHkgcmF0aW9uYWxpemVkIGl0IGFzIGJlaW5nIHNvbWV0aGluZyB0aGF0IHdhcyByaXNreSBidXQgbmVlZGVkIHJvIGJlIGRvbmUgZm9yIHRoZSBncmVhdGVyIGdvb2QsIGJlY2F1c2UgZGFkIHNhaWQgc28gYW5kIGhlIHdvdWxkIG5ldmVyIHN0ZWVyIGFueW9uZSB3cm9uZy4uIApQZXRlciBHcmVlbiwgZGlyZWN0b3Igb2YgdGhlIENlbGlhYyBEaXNlYXNlIENlbnRlciBzYXlzIHRoYXQgcmVzZWFyY2ggaW50byBnbHV0ZW4gc2Vuc2l0aXZpdHkgdG9kYXkgaXMgcm91Z2hseSB3aGVyZSBjZWxpYWMgZGlzZWFzZSB3YXMgMzAgeWVhcnMgYWdvLkluIHRoZSBuZXcgc3R1ZHksIHJlc2VhcmNoZXJzIGNvbXBhcmVkIGJsb29kIHNhbXBsZXMgYW5kIGludGVzdGluYWwgYmlvcHNpZXMgZnJvbSA0MiBzdWJqZWN0cyB3aXRoIGNvbmZpcm1lZCBjZWxpYWMgZGlzZWFzZSwgMjYgd2l0aCBzdXNwZWN0ZWQgZ2x1dGVuIHNlbnNpdGl2aXR5IGFuZCAzOSBoZWFsdGh5IGNvbnRyb2xzLlRob3NlIHdpdGggZ2x1dGVuIHNlbnNpdGl2aXR5IGRpZG4gaGF2ZSB0aGUgZmxhdHRlbmVkIHZpbGxpLCBvciB0aGUgaW50ZXN0aW5hbCB3YWxscyBzZWVuIGluIHRoZSBzdWJqZWN0cyB3aXRoIGNlbGlhYyBkaXNlYXNlLlRoZWlyIGltbXVuZSByZWFjdGlvbnMgd2VyZSBkaWZmZXJlbnQsIHRvby4gSW4gdGhlIGdsdXRlbiBzZW5zaXRpdmUgZ3JvdXAsIHRoZSByZXNwb25zZSBjYW1lIGZyb20gaW5uYXRlIGltbXVuaXR5LCBhIHByaW1pdGl2ZSBzeXN0ZW0gd2l0aCB3aGljaCB0aGUgYm9keSBzZXRzIHVwIGJhcnJpZXJzIHRvIHJlcGVsIGludmFkZXJzLiAKRGVzcGl0ZSB0aGUgaHVtb3VyLCBUaWJpIHNhaWQgaGUgaXMgY29uY2VybmVkIGFib3V0IHdoYXQgaGUgdmlld3MgYXMgTmV0YW55YWh1J3MgYXR0ZW1wdCB0byBkZW1vbml6ZSBJc3JhZWwncyBBcmFiIG1pbm9yaXR5LgpUaGUgcGxheWVycyBpbmNsdWRlIEphY2sgRmFybyAoV29vZHkgSGFycmVsc29uKSwgd2hvIG93bnMgVGhlIFJhYmJpdCdzIEZvb3QgQ2FzaW5vIGFuZCBoYXMgc3BlbnQgbXVjaCBvZiBoaXMgbGlmZSB1bmRlciB0aGUgaW5mbHVlbmNlIG9mIGNvbnRyb2xsZWQgc3Vic3RhbmNlczsgRGV1Y2UgRmFpcmJhbmtzIChEZW5uaXMgRmFyaW5hKSwgYW4gb2xkIHNjaG9vbCBWZWdhcyBoYXJkIGFzczsgTGFpbmllIGFuZCBMYXJyeSBTY2h3YXJ0em1hbiAoQ2hlcnlsIEhpbmVzIGFuZCBEYXZpZCBDcm9zcyksIHNpYmxpbmdzIHdob3NlIGZhdGhlciBmb3JjZWQgY29tcGV0aXRpb24gb24gdGhlbSBzaW5jZSB0aGV5IHdlcmUgdG90czsgSGFyb2xkIE1lbHZpbiAoQ2hyaXMgUGFybmVsbCksIGEgZGV2ZWxvcG1lbnRhbGx5IGNoYWxsZW5nZWQgbWFuIGNoaWxkIHdobyBzdGlsbCBsaXZlcyB3aXRoIGhpcyBtb3RoZXI7IGFuZCBBbmR5IEFuZHJld3MgKFJpY2hhcmQgS2luZCksIGEgY2hlZXJmdWwgYXZlcmFnZSBKb2UgZnJvbSB0aGUgTWlkd2VzdCB3aG8gc2VlbXMgdGVycmlibHkgb3V0IG9mIHBsYWNlIGluIHRoZSBzbGVhenkgYmFja2Ryb3Agb2YgVmVnYXMuIE1hbnksIG1hbnkgb3RoZXIgZmFtaWxpYXIgZmFjZXMgcG9wIHVwIHRocm91Z2hvdXQgdGhlIGNvdXJzZSBvZiB0aGUgZmlsbSwgc29tZXRpbWVzIGluIG9kZGx5IHNtYWxsIHJvbGVzLiBUaGUgY2FzdCBpcyBieSBhbmQgbGFyZ2UgY29tcHJpc2VkIG9mIGZ1bm55LCB0YWxlbnRlZCBjb21pYyBhY3RvcnMsIGFuZCBjb25zaWRlcmluZyB0aGF0IHRoZXkgbW9yZSBvciBsZXNzIGltcHJvdmlzZWQgdGhlIHdob2xlIGZpbG0sIGl0J3Mgbm8gc3VycHJpc2UgdGhhdCB0aGUgbW92aWUgaXMgZnVubnkuIApGb3IgZXhhbXBsZSwgb25lIG9mIHRoZSBwb3N0cyBkZWFsdCB3aXRoIHRoZSByZXBsYWNlbWVudCBvZiBsaXZlIG11c2ljIGluIHRoZWF0ZXJzIHdpdGggInJvYm90IG11c2ljIiAsIHdoaWNoIHdhcyBzaW1wbHkgImNhbm5lZCIsIG9yIHJlY29yZGVkIG11c2ljIHJlcGxhY2luZyB0aGUgbGl2ZSBwbGF5ZXJzLiBUaGlzIHdhcyB0aGUgIlBoYW50b20gQmFuZCIgZGVwaWN0ZWQgaW4gdGhlIHBhZ2VzIG9mIFBvcHVsYXIgTWVjaGFuaWNzIGluIE1hcmNoIDE5MjIgYW5kIHNob3dzIGEgYmFuZCBpZGVudGlmaWVkIHNvLCBtYXJjaGluZyB3aXRoIGEgcmFkaW8gc2V0IHBsYXlpbmcgdGhlIG11c2ljIHJhdGhlciB0aGFuIHRoZSBodW1hbiBwZXJmb3JtZXJzLiAKQnV0LCBhZnRlciB5ZWFycyBvZiBsaXZpbmcgaW4gTW9zY293LCBJIHJldHVybmVkIHRvIHRoZSBVUyBhbmQgYmVnYW4gdG8gY29uY2VudHJhdGUgb24gdGhpcyBBbWVyaWNhbiBsaWZlLiBJIHdlcmUgZ29pbmcgdG8gY29udGludWUgdG8gYXBwbHkgdGhvc2UgbGVzc29ucywgdGhleSB3b3VsZCBiZSBtb3JlIG9yIGxlc3MgdGhlIHNhbWU6IHRoZSBVUyBjYW5ub3QgY29udGludWUgdG8gc3BlbmQgYWJvdXQgaGFsZiBvZiBpdHMgdGF4IHJldmVudWVzIG9uIHRoZSBtaWxpdGFyeSBpbmR1c3RyaWFsIGNvbXBsZXggd2l0aG91dCBmYWNpbmcgYm90aCBmaW5hbmNpYWwgcnVpbiBhbmQgdGhlIGVuZCBvZiBpdHMgRW1waXJlLiAKTmV4dCB5b3Ugd2lsbCByZWNlaXZlIGZhY2lhbCBjdXBwaW5nIHRvIGhlbHAgc21vb3RoIG91dCB0aG9zZSB3cmlua2xlcyBhbmQgdGhlbiBydWIgWW91bmcgTGl2aW5nIEVzc2VudGlhbCBPaWxzLCBMYXZlbmRlciBPaWwgaW50byB5b3VyIHNraW4gdG8gaGVscCBub3VyaXNoIGFuZCByZXZpdGFsaXplIHRoZSBza2luLiAKQ2FzaW5vcyBOZWFyIHRoZSBBaXJwb3J0IGluIEJpbG94aQpJdCBva2F5IGlmIHlvdSBkbyBub3Qga25vdyBzb21ldGhpbmcgb3IgdW5kZXJzdGFuZCB0aGluZyBvciB3aGF0IHNvbWV0aGluZyBtYXkgZG8uIApJIGd1ZXNzIHRoZXkgd2VyZSBleGNpdGVkIGFib3V0IHRoZSBiaWdnZXN0IHdpbiBvZiBPd2VucyBjYXJlZXIgYW5kIHRoZSBleGNpdGluZyBmaW5hbCBjb3VwbGUgbWludXRlcywgd2hpY2ggd2VyZSBib3RoIHRydWUuIApNeSBmYWNlIGlzIHN0YXJ0aW5nIHRvIGdldCByZWFsbHkgY29sZCBhbmQgdGhlIGZyZWV6aW5nIGFpciBmZWx0IGhvcnJpYmxlIGluIG15IGx1bmdzLiBFdmVuIHRob3VnaCBJIGhhZCBhIHRoaW4gYnVmZiwgSSBrZXB0IGl0IG9mZiBteSBmYWNlIGZvciBhbG1vc3QgdGhlIGVudGlyZSByYWNlIGJlY2F1c2UgSSB3YXMgYnJlYXRoaW5nIG11Y2ggdG9vIGhlYXZpbHkgdG8gYWxzbyBicmVhdGhlIHRocm91Z2ggZmFicmljLiAKSSB3YXMgcGxheWluZyBwcmV0dHkgdGlnaHQgYW5kIHdhcyBsb29raW5nIHRvIG1peCBpbiBzb21lIHdpZGUgb3BlbnMgdG8gZ2V0IGNhbGxzIHdoZW4gSSBoYWQgYmV0dGVyIGhhbmRzLCBJIGtub3cgSSBidXRjaGVyZWQgaXQgb24gdGhlIHR1cm4uLiAKUHJldmlldyBNZXNzYWdlIFR1cm5pbmcgb24gdGhlICJQcmV2aWV3IE1lc3NhZ2UiIGZlYXR1cmUgZGlzcGxheXMgYXMgbXVjaCBvZiB5b3VyIGluY29taW5nIG1lc3NhZ2UgYXMgd2lsbCBmaXQgaW4gZWl0aGVyIHRoZSBiYW5uZXIgb3IgYWxlcnQgbWVzc2FnZSBib3guIElmIHRoaXMgZmVhdHVyZSBpcyB0dXJuZWQgb2ZmLCB5b3UnbGwgc3RpbGwgc2VlIGFuIGFsZXJ0IGJveCBvciBiYW5uZXIgd2l0aCB0aGUgbmFtZSBvZiB0aGUgY29udGFjdCB3aG8gc2VudCB5b3UgdGhlIHRleHQgYW5kIGVpdGhlciB0aGUgdGV4dCAiaU1lc3NhZ2UiIG9yICJUZXh0IE1lc3NhZ2UuIiBZb3UgY2FuIGFkanVzdCB3aGV0aGVyIHlvdXIgaVBob25lIGRpc3BsYXlzIGEgcHJldmlldyBvZiB0ZXh0IG1lc3NhZ2VzIGJ5IHRhcHBpbmcgIlNldHRpbmdzIiBhbmQgdGhlbiAiTm90aWZpY2F0aW9ucy4iIFRhcCAiTWVzc2FnZXMiIGFuZCB0aGVuIHRhcCB0aGUgT04vT0ZGIHRvZ2dsZSB0byB0aGUgcmlnaHQgb2YgIlNob3cgUHJldmlldyIgdW50aWwgT04gYXBwZWFycyBpZiB5b3Ugd2FudCB0byBkaXNwbGF5IGEgc25pcHBldCBvZiB5b3VyIHRleHQgbWVzc2FnZXMuIFByZXNzIHRoZSAiSG9tZSIgYnV0dG9uIHRvIHNhdmUgeW91ciBjaGFuZ2VzIGFuZCBjbG9zZSB0aGUgU2V0dGluZ3MgYXBwLgpLYXJlbjogSSBhbHJlYWR5IHJlYWQgeW91ciBhZGQgYW5kIGtub3cgeW91ciBzaXR1YXRpb24uIERvIG5vdCBhdHRlbXB0IHRvIGd1aWx0IHRyaXAgbWUgb3IgZWxzZSB5b3UgY2FuIGZvcmdldCBhYm91dCBtZSBoZWxwaW5nIHlvdS4KRXQgdm91cyB2ZXJyZXogIHF1ZWwgbml2ZWF1IHZvdXMgdm91cyBzaXR1ZXouCkV2ZXJ5b25lIHN0YXJ0cyB3aXRoIDEsMDAwIGluIHRvdXJuYW1lbnQgY2hpcHMsIGFuZCB0aGUgYmxpbmRzIHN0YXJ0IGF0IDEwLzIwIChtZWFuaW5nICQxMCBmb3IgdGhlIHNtYWxsIGJsaW5kIGFuZCAkMjAgZm9yIHRoZSBiaWcgYmxpbmQpLiAKKGRlIGdhdWNoZSAgZHJvaXRlIGV0IGRlIGhhdXQgZW4gYmFzLCBKZWFuIE1hcmllIEd1aWxiYXVsdCwgVGhvbWFzIExlaG91eCwgQWxhaW4gUmV5IGV0IEVyaWMgR3VyaW4sIElzbWFsIERyaXNzaSBCYWtoa2hhdCBldCBsJ3VuIGRlIHNlcyAibWF0cmVzIiwgR2lsbGVzIFZyb3QsIEhlcnYgTW9ucylJbCB0YWl0IGFtdXNhbnQgZGUgY29uc3RhdGVyIHF1ZSwgIGN0IGQnYXJ0aXNhbnMgcXVpIHNvbnQgZGFucyBsZSBtdGllciAiZGUgcHJlIGVuIGZpbHMiIGNvbW1lIGxlIGNoYXJjdXRpZXIgR2lsbGVzIFZyb3QgKDNlbWUgZ25yYXRpb24sIG1haXNvbiBvdXZlcnRlIGVuIDE5MzAgIFN0IEV0aWVubmUpIG91IEhlcnYgTW9ucywgZnJvbWFnZXIgY29tbWUgc2VzIHBhcmVudHMgKGxlcyBkZXV4IGF5YW50IGFtZW4gbGV1ciBtdGllciBiaWVuIGF1IGRlbCBkZSBsYSBnbnJhdGlvbiBwcmNkZW50ZSksIHVuZSBib25uZSBwYXJ0IGRlcyBpbnRlcnZlbmFudHMgdGFpZW50IGRlcyBob21tZXMgKHRpZW5zLCBwZXUgZGUgZmVtbWVzIGFydGlzYW5lcyA/ICAgdW5lIHNldWxlIHByc2VudGUgZGltYW5jaGUpIGF1eCBwYXJjb3VycyBhdHlwaXF1ZXMuIEFsYWluIFJleSBlc3QgYXBpY3VsdGV1ciBkZXB1aXMgMjAgYW5zIGFwcnMgZCdhdXRyZXMgdmllcy4gRW1tYW51ZWwgQ2hhdmFzc2lldXggYSBldSBkZXMgdmllcyBtdWx0aXBsZXMgZ2FsZW1lbnQgKGxnaW9ubmFpcmUsIHBob3RvZ3JhcGhlLCBjb3V0ZWxpZXIpLiAKTGV0IGFsc28gY29tcGFyZSBoaXN0b3JpY2FsbHkgdGhlIGNvc3Qgb2YgZ2FtZXMgYW5kIHRoZSBhbW91bnQgb2YgZ2FtZXBsYXkgeW91IGdvdCBmb3IgdGhlIGFtb3VudCB5b3Ugc3BlbnQuCkJ1dEp1c3QgS2lkcyBwYWludHMgYSBmYXIgYmxlYWtlciBwaWN0dXJlLCBhbmQgaXQncyBoYXJkIHRvIHRha2UgTWFwcGxldGhvcnBlIHRvbyBzZXJpb3VzbHkgd2l0aCB0aGUgYm9vayBpbiB0aGUgYmFjayBvZiB5b3VyIG1pbmQuIFdoaWxlIHRoZSByZWFsIFBhdHRpIFNtaXRoIG1hZGUgb3VyIHN0b21hY2hzIGFjaGUgd2l0aCBkZXNjcmlwdGlvbnMgb2YgaGVyIHBlcnBldHVhbCBodW5nZXIsIGEgbGl0ZXJhbCBzdGFydmluZyBhcnRpc3Qgd2hvIGNvdWxkIG9ubHkgZGVsaWdodCBpbiB0aGUgcmFyZSBjdXAgb2YgY29mZmVlIGRvd24gdGhlIHN0cmVldCwgdGhlIHZlcnNpb24gaGVyZSBpcyB0b28gaW4gdGhlIGtub3cuIEl0IG1ha2VzIHRoZSB3aG9sZSB0YWxlIGZlZWwgZGlzaW5nZW51b3VzLi4gClRoZSBhbHdheXMgZ2xhbW9yb3VzIE1hcmlhaCBDYXJleSB0b3BwZWQgdGhlIGNoYXJ0cyB3aXRoIGZvdXIgSG90IDEwMCAxIGhpdHMgd2l0aCAiVGhhbmsgR29kIEkgRm91bmQgWW91IiwgZmVhdHVyaW5nIEpvZSA5OCBEZWdyZWVzLCBpbiAyMDAwLCAiV2UgQmVsb25nIFRvZ2V0aGVyIiBhbmQgIkRvbid0IEZvcmdldCBBYm91dCBVcyIgaW4gMjAwNSwgYW5kICJUb3VjaCBNeSBCb2R5IiBpbiAyMDA4LiBTaGUgaGFkIGVpZ2h0IGhpdHMgb24gdGhlIHllYXIgZW5kIGNoYXJ0cy4gTWFyaWFoIGlzIG9uZSBvZiB0aGUgb25seSBmZW1hbGUgYXJ0aXN0cyB0byBoYXZlIHRvcHBlZCB0aGUgY2hhcnRzIHdpdGggdGhlIG1vc3QgMSBoaXRzIGR1cmluZyB0aGUgMjAwMHMgYW5kIGlzIHRoZSBvbmx5IHNvbG8gYXJ0aXN0IHRvIHN1cnBhc3MgRWx2aXMnIHJlY29yZCBmb3IgdGhlIG1vc3QgbnVtYmVyIG9mIGhpdHMgaW4gQW1lcmljYS4gTWFyaWFoIENhcmV5J3Mgc3RhZ2dlcmluZyA1IG9jdGF2ZSB2b2NhbCByYW5nZSBpcyBvbmUgb2YgaGVyIG1vc3QgcmVjb2duaXphYmxlIHRyYWRlbWFya3MuIEhlciBhbmdlbGljIHZvaWNlIGlzIHN0dW5uaW5nLiBOb3Qgb25seSBpcyBzaGUgYSBzZWFzb25lZCBkaXZhIHdobyBoYXMgcmlnaHRmdWxseSBlYXJuZWQgaGVyIHRvcCBzcG90IGFzIG9uZSBvZiB0aGUgZ3JlYXRlc3QgZmVtYWxlIHBvcCBzaW5nZXJzIG9mIHRoZSAyMDAwcywgYnV0IHNoZSBpcyBvbmUgb2YgdGhlIGdyZWF0ZXN0IHZvY2FsaXN0cyBvZiBhbGwgdGltZS4KSGlzdG9yeS4gUGFpbmZ1bCBzdHVmZi4gCkhlIGlzIGEgZ3JhZHVhdGUgb2YgTGlmZSBDaGlyb3ByYWN0aWMgQ29sbGVnZSBXZXN0IGFuZCBwcmFjdGljZXMgaW4gYm90aCBMaXZlcm1vcmUgYW5kIE9ha2xhbmQsIENhbGlmLkRyLiBDYW50dSwgb25lIG9mIHRoZSB0b3AgZXhwZXJ0cyBpbiB0aGUgZmllbGQgb2YgY29uY3Vzc2lvbiBpbiBzcG9ydHMsIGhhcyBiZWVuIGluc3RydW1lbnRhbCBpbiB0aGUgZGV2ZWxvcG1lbnQgYW5kIGltcGxlbWVudGF0aW9uIG9mIHN0YW5kYXJkIHByYWN0aWNlcyBwZXJ0YWluaW5nIHRvIHRoZSBtYW5hZ2VtZW50IG9mIG1pbGQgdHJhdW1hdGljIGJyYWluIGluanVyeSAobVRCSSkuRHIuIApUaGVzZSBjaGlwcyBjb21lIGluIHZhcmlvdXMgZGVub21pbmF0aW9ucy4gVGhlIEJsdWZmIENhbnlvbiBpbmxheSBpcyBzZXQgdXBvbiBhIEdyZWVrIEtleSBtb2xkZWQgcG9rZXIgY2hpcC4gVGhlc2UgY2hpcHMgaGF2ZSB0d2VsdmUgdGhpbiBzdHJpcGVzIGluIGJ1bmNoZXMgb2YgdGhyZWUgZm9yIGl0cyBlZGdlIG1hcmtpbmdzLiAKU2luZ2luZyBoaXMgcHJhaXNlcyB3YXMgZW1jZWVzIExpc2FXdSBhbmQgbG9jYWwgaGlwIGhvcCBhcnRpc3QgUHJldmFpbCwgYWxvbmcgd2l0aCBWQUcgZGlyZWN0b3IgS2F0aGxlZW4gQmFydGVscyBhbmQgaW50ZXJpbSBjaGllZiBjdXJhdG9yIEJydWNlIEdyZW52aWxsZSB3aG8gdG9hc3RlZCB0aGUgdGFsZW50ZWQgbWFzdGVyLgpTb2xsdGVuIHNpY2ggYmVpZGUgU2VpdGVuIG5pY2h0IGVpbmlnZW4sIGsgZXIgZWluIEthbmRpZGF0IGYgZGllIEVkbW9udG9uIE9pbGVycyB3ZXJkZW4uLiAKSSB0cmllZCB2YXJpb3VzIHRpbWVzIHRvIGxvc2Ugd2VpZ2h0IGJ5IGZvY3Vzc2luZyBvbiBleGVyY2lzZSBhbmQgSSBkZWNpZGVkIHRoYXQgdGhpcyB0aW1lIEkgd2FpdCBiZWZvcmUgaW50cm9kdWNpbmcgZXhlcmNpc2UuIEZpcnN0bHksIEkgZmluZCBleGVyY2lzaW5nIG1ha2VzIG1lIHdheSBodW5ncmllciBhbmQgSSBnZXQgaW50byBhIG1pbmRzZXQgb2YgIndlbGwsIEkgd29ya2VkIG91dCBzbyBJIGVhcm5lZCBtb3JlIGZvb2QiLiAKUmFpc2UgeW91ciBoYW5kIGlmIHlvdSBnbyB0aHJvdWdoIGZlbHQgY2xvdGggbGlrZSBpdCdzIGdvaW5nIG91dCBvZiBzdHlsZT8gTm90IGJlY2F1c2UgeW91IGdldCB0aXJlZCBvZiB0aGUgY29sb3IsIGJ1dCB5b3UgaGF2ZSBmcmllbmRzIGFuZCBmYW1pbHkgb3ZlciBhbGwgdGhlIHRpbWUgd2hvIHRlbmQgdG8gc3BpbGwgdGhpbmdzIGhlcmUgYW5kIHRoZXJlLiAKQWNjb3JkaW5nIHRvIHRoZSBDZXBoZXVzIFBva2VyIFByb2plY3Qgc2l0ZToKUGVvcGxlIHdpbGwgcmVjb2duaXplIHRoZSB3b3JrIHRoYXQgeW91IGRvLiAKVGhlbiB5b3UganVzdCwgYWN0LCBzcGVhaywgYmVoYXZlLCBhbmQganVzdCBiZSBhd2FyZSBvZiB0aGUgcmVzdWx0cyB0aGF0IG9jY3VyLiAKQW5kIEkgd2Fsa2VkIGF3YXkuIAoiVGhlIE90dG9tYW4gZGVjbGluZSB0aGVzaXMiIGlzIGEgdGVybSB3ZSB1c2UgdG8gcmVmZXIgdG8gYSBwYXJhZGlnbSBpbiBPdHRvbWFuIGhpc3RvcnkgdGhhdCB3YXMgcHJlZG9taW5hbnQgZm9yIG1vc3Qgb2YgdGhlIHR3ZW50aWV0aCBjZW50dXJ5LiBUaGUgZGVjbGluZSB0aGVzaXMgZGl2aWRlZCBPdHRvbWFuIGhpc3RvcnkgaW50byB0d28gYnJvYWQgZXJhczogYSAicmlzZSIgaW4gd2hpY2ggdGhlIGVtcGlyZSBib3JkZXJzIHdlcmUgZXhwYW5kaW5nLCBpdHMgaW5zdGl0dXRpb25zIHdlcmUgZnVuY3Rpb25pbmcgc21vb3RobHksIGFuZCBpdHMgbGVhZGVyc2hpcCB3YXMgY2FwYWJsZSwgYW5kIGEgImRlY2xpbmUiIGluIHdoaWNoIHRoZSBlbXBpcmUgYm9yZGVycyB3ZXJlIHNocmlua2luZywgaXRzIGluc3RpdHV0aW9ucyB3ZXJlIGRlY2F5aW5nLCBhbmQgaXRzIGxlYWRlcnNoaXAgd2FzIGluY29tcGV0ZW50LiBUaGUgcGVyaW9kIGluIHdoaWNoIHRoZSBlbXBpcmUgYmVnYW4gc2hpZnRpbmcgZnJvbSBvbmUgc3RhdGUgdG8gdGhlIG90aGVyIHdhcyB1c3VhbGx5IHBsYWNlZCBhcm91bmQgdGhlIGRlYXRoIG9mIFNsZXltYW4gdGhlIE1hZ25pZmljZW50IGluIDE1NjYuIApJIG5ldmVyIGV2ZW4gYm91Z2h0IHRoYXQgc2hlIHdhcyBhdCBoaXMgYXBhcnRtZW50LiBUaGVyZSBpc24gYW55IGV2aWRlbmNlIGZvciBpdC4gCldhaXQuIFlvdXIgbm90IG9iZXlpbmcgaGVyIGNvbW1hbmQgaXMgbm90IHRoZSB0YWJsZXMgdHVybmluZy4gSXQgd2hhdCB5b3UsIHlvdXIgQkYgYW5kIGhpcyBmYW1pbHkgc2hvdWxkIGhhdmUgYmVlbiBkb2luZyBhbGwgYWxvbmcuCkkgbm90IHRhbGtpbmcgYWJvdXQgcG9vciBwZW9wbGUgd2hvIGNhbiBhZmZvcmQgaG91c2luZyBpbiBDaGFybG90dGUsIGJ1dCBjYW4gYWZmb3JkIGl0IGluIEluZGlhLiBJIHRhbGtpbmcgYWJvdXQgcGVvcGxlIHdobyBjYW4gYWZmb3JkIGhvdXNpbmcgaW4gQ2hhcmxvdHRlIGJ1dCBoYXRlIHRoYXQgdGhleSBjYW4gYWZmb3JkIHRvIGxpdmUgY2xvc2UgdG8gd29yaywgYW5kIGhhdmUgdG8gc3VmZmVyIHRocm91Z2ggdHJhZmZpYy4KVGhhdHMgYSBWRVJZIHNtYWxsIHByaWNlIHRvIHBheSBmb3Iga25vd2xlZGdlLCBteSBmcmllbmQhIFBva2VyIGlzIGEgbG9uZyBsb29vb29vbmcgdGVybSBwdXJzdWl0ICAgaWYgeW91IGVuam95IHBsYXlpbmcgYW5kIGhhdmUgYSBkZXNpcmUgdG8gaW1wcm92ZSB5b3Ugd2lsbCBnZXQgYmV0dGVyIG92ZXIgeW91ciBsaWZldGltZS4gWW91IGFyZSBvZmYgdG8gYSBnb29kIHN0YXJ0IHRyeWluZyB0byBhbmFseXplIHRoZSBzaXR1YXRpb24uIEkgYWx3YXlzIHRyeSB0byBsZWFybiBzb21ldGhpbmcgZnJvbSBhIGhhbmQgaSBsb3NlLCBhcyBpIHJlbWVtYmVyIHRob3NlIGZhciBtb3JlIGNsZWFybHkgYW5kIGZvciBhIG11Y2ggbG9uZ2VyIHRpbWUgdGhhbiB0aGUgb25lcyBpIHdpbiAoZXhjZXB0IGZvciBhIGNvdXBsZSBvZiBtb25zdGVycG90cyBoZXJlIGFuZCB0aGVyZSkuIFRoZXJlIGFyZSBhbG90IG9mIHBlb3BsZSB3aG8gd2lsbCB0ZWxsIHlvdSB0aGF0IGl0cyBoYXJkIHRvIGxlYXJuIGZyb20gbWlzdGFrZXMgbWFkZSBhdCB0aGUgbWljcm8gbGV2ZWxzIGJlY2F1c2UgcGVvcGxlIHBsYXkgcmVhbGx5IGJhZGx5LCBidXQgaSB0aGluayB0cmFpbmluZyB5b3Vyc2VsZiB0byBnbyBiYWNrIGFuZCBicmVhayB0aGUgaGFuZCBkb3duIGlzIGEgdmFsdWFibGUgc2tpbGwgdG8gbGVhcm4gdGhhdCB3aWxsIHNlcnZlIHlvdSB3ZWxsLgpVbnRpbCAxOTk3LCB0aGUgRkRBIGRpZCBub3QgZXZlbiBhbGxvdyBicm9hZGNhc3QgYWR2ZXJ0aXNlbWVudHMgZm9yIHByZXNjcmlwdGlvbiBkcnVncywgYW5kIHRoZSBVUyBpcyBvbmUgb2Ygb25seSB0d28gY291bnRyaWVzIGluIHRoZSB3b3JsZCAoTmV3IFplYWxhbmQgYmVpbmcgdGhlIG90aGVyKSB0aGF0IGV2ZW4gYWxsb3dzIHRoaXMgdHlwZSBvZiBhZHZlcnRpc2luZy4gSXQgc2VlbXMgdGhhdCBvdGhlciBkZXZlbG9wZWQgbmF0aW9ucyBoYXZlIHRoaXMgY3JhenkgaWRlYSB0aGF0IHlvdSBzaG91bGQgZGVjaWRlIHdoYXQgcHJlc2NyaXB0aW9ucyB5b3UgbmVlZCBiYXNlZCBvbiBhIGRvY3RvcidzIGFkdmljZSwgYW5kIG5vdCB0aGF0IG9mIGEgdGFsa2luZyBiZWUgb24gdGVsZXZpc2lvbi4uIApUaGF0IGp1c3Qgc28gZmFyIDovIEZpbmRpbmcgb3V0IHRoZXJlIGFsc28gYW4gaW5zYW5lbHkgaGlnaCBpbmNpZGVuY2Ugb2YgTHVwdXMsIHJhcmUgY2FuY2VycywgTHltcGhvbWEsIGFuZCBhbG1vc3QgZXZlcnlvbmUgaXMgb24gdGh5cm9pZCBtZWRzLiAKTWFrZSBzdXJlIHlvdSBhbHdheXMgY2xlYXJseSBhbm5vdW5jZSB3aGF0IHlvdSBhcmUgZ29pbmcgdG8gZG8gYmVmb3JlIHlvdSBkbyBpdC4gClNvbWUgZm9sa3MgICBhbmQgZXZlbiBzb21lIHZldHMgICBjYWxsIEZJViAiZmVsaW5lIEFJRFMiIGFzIGEgcXVpY2sgd2F5IG9mIGRlc2NyaWJpbmcgd2hhdCB0aGUgdmlydXMgZG9lcy4gVW5mb3J0dW5hdGVseSwgdGhlIG5hbWUganVzdCBhZGRzIHRvIHRoZSBjb25mdXNpb24uIEFJRFMgaXMgYSBodW1hbiBkaXNlYXNlLCBhbmQgRklWIGlzIGEgY2F0IGRpc2Vhc2UuLiAKTGFzIFZlZ2FzIGlzIG9ubHkgYW4gaG91ciBwbGFuZSByaWRlLCBhbmQgeW91IGNhbiBnZXQgZGVhbHMgZm9yIDI5IGRvbGxhcnMgZWFjaCB3YXkgc29tZXRpbWVzLiAKSG93ZXZlciwgdGhlIENoaW5lc2UgZ292ZXJubWVudCBpcyB0YWtpbmcgY29ycmVjdGl2ZSBhY3Rpb24sIHNoZSBhZGRlZC4gSW4gSmFudWFyeSwgQ2hpbmEgc2V0IHVwIGEgc3BlY2lhbGl6ZWQgSVAgY291cnQgaW4gQmVpamluZy4gCkkgd2FudGVkIHRvIGludGVycnVwdCB3aXRoIGEgc2VyaW91cyBkb3NlIG9mIHJlYWxpdHksIGJ1dCBJIGdvdCB1cCBhbmQgd2VudCB0byB0aGUgYmF0aHJvb20gaW5zdGVhZC4gSSBrbm93biBhcyB0aGUgbG9naWNhbCByZWFsaXN0LCBzbyBJIHRob3VnaHQgbm8gb25lIHdvdWxkIGNhcmUgdGhhdCBJIHdhc24gY29vaW5nIG92ZXIgdGhpcyByaWRpY3Vsb3VzIGlkZWEuIEkgZXZlbiBrZXB0IG15IGV5ZWJhbGxzIGludGFjdCBmcm9tIHJvbGxpbmcgb3V0IG9mIHRoZWlyIHNvY2tldHMuLiAKV2l0aCBkaW5uZXIgZGlzcGVyc2VkLCB0aGUgcmlkZXJzIGFuZCBzdGFmZiBnYXRoZXIgaW4gdGhlIGNyYW1wZWQgbG9iYnkgZm9yIGEgdG9hc3QuIE9uZSBzdXNwZWN0cyB0aGF0IHRoZSByZWFsIGJhY2sgc2xhcHBpbmcgYW5kIHByYWlzZSBoYXMgYmVlbiBoYW5kZWQgb3V0IGF0IHRoZSByaWRlcnMnIG93biBwcml2YXRlIGRpbm5lciBidXQgd2l0aCBhIHN0YWdlIHdpbiBjb21lcyB0aGUgb2JsaWdhdG9yeSBwcmVzcyBpbnZhc2lvbiBhbmQgdGhlIHJpZGVycyBhcmUgc3VtbW9uZWQgdG8gdG9hc3QgQ2F2ZW5kaXNoJ3Mgd2luLiAKWW91IGFkZXB0IGF0IHBvc3RpbmcgbmV3IHF1ZXN0aW9ucyBzbyB5b3UgY2FuIGlnbm9yZSBldmVyeXRoaW5nIHNhaWQgcHJpb3IuIHRoaXM/IEkgd3JvbmcgYW5kIGhhdmUgbm8gY291bnRlcmFyZ3VtZW50cyBmb3IgYW55dGhpbmcgc2FpZCB0aHVzIGZhcj8gQmV0dGVyIGNvbWUgdXAgd2l0aCBhIG5ldyBxdWVzdGlvbiEgb25lIGV4cGVjdGVkIGxpYmVyYXRpbmcgYSBjaXR5IGZyb20gdGhlIHdvcmxkcyBtb3N0IHZpbGUgYW5kIGV2aWwgaHVtYW4gYmVpbmdzIHRvIHRoZW4gYmUgYW4gaW5zdGFudCBwYXJhZGlzZS4KR290dGEgbG92ZSB0aGUgcml0dWFsaXN0aWMgc2VsZiBmbGFnZWxsYXRpb24gZm9yIGFjY2lkZW50YWxseSBsb29raW5nIGludG8gaGVyIGZiLiBIZSBub3QgZXZlbiBtYWQgYWJvdXQgdGhlIGV4IHRoaW5nIGFueW1vcmUsIGhlIG1vcmUgcmVwZW50YW50IGFib3V0IHNub29waW5nLCBhbmQgY29uY2VybmVkIGFib3V0IG5vdCBiZWluZyAidGhhdCBndXkiLCB0aGFuIGhlIGlzIG9mIHVzaW5nIGhpcyBnZiBleCBzbG9wcHkgc2Vjb25kcyBhcyBsdWJyaWNhbnQuIExvcmQsIHN0cmlrZSBtZSBub3cgYW5kIHRha2UgbWUgdG8geW91ciBoZWF2ZW5seSBib3NvbXMuIEkgZG9uIHdhbnQgdG8gc3RydWdnbGUgaGVyZSBhbnltb3JlLgpNaXNzIG1lIHdpdGggdGhhdCBCUy4gU2hlIGlzIHRyZW1lbmRvdXNseSBydWRlIHRvIHBlb3BsZSB0aGF0IGFzayBoZXIgcXVlc3Rpb25zIHRyeWluZyB0byB1bmRlcnN0YW5kIHdoYXQncyBnb2luZyBvbi4gCklUcyB0aGUgZmFjZSBvZiB3aGl0ZSBzdXByZW1hY3kuIFRoZSBmYWNlIG9mIGtub3dpbmcgdGhhdCB0aGVyZSB3aWxsIGJlIG5vIGNvbnNlcXVlbmNlcyBmb3IgdGhlaXIgYWN0aW9ucy4gCllvdSBkZXNjcmliZSBwIGhhY2tpbmcgYXMgdGVzdGluZyBtdWx0aXBsZSBpbnRlcmFjdGlvbnMgd2l0aG91dCBtZXJpdC4gCkJ1dCB0aGVyZSBoYXMgYmVlbiBubyB1cGRhdGUgZnJvbSB0aGUgJDUwLDAwMCBmaWd1cmUgaGUgcmV2ZWFsZWQgYWZ0ZXIgdGhlIGluaXRpYWwgY3JlZGl0b3JzJyBtZWV0aW5nIGxhc3QgVGh1cnNkYXkuICJXZSB3aWxsIHRyYWRlIHRoaXMgd2Vla2VuZCwgYnV0IHRoZSBqdXJ5IGlzIG91dCB0aGVyZWFmdGVyLCIgaGUgc2FpZC4gCkJ1cmtob2xkZXJpYSAgOSBwb2ludHMgIHN1Ym1pdHRlZCAxMSBkYXlzIGFnbwpUaGVyZSBpcyBhIGxldmVsIG9mIGluZGVwZW5kZW5jZSBpbiBibGFja2phY2ssIGFuZCBwZXJoYXBzIHRoYXQgc29saXRhcnkgc2Vuc2UgdGhhdCBhIHBsYXllciBpcyBmYWNpbmcgb2ZmIGluZGl2aWR1YWxseSBhZ2FpbnN0IHRoZSBkZWFsZXIgbWlnaHQgYmUgcGFydCBvZiB0aGUgYXBwZWFsLiBBcyBlYWNoIHBsYXllciB0cmllcyB0byBiZWF0IHRoZSBkZWFsZXIgb25lIG9uIG9uZSwgb3RoZXIgcGxheWVycyBhcmUgc2ltdWx0YW5lb3VzbHkgZG9pbmcgdGhlIHNhbWUuIApTdHVwaWRxdWVzdGlvbm9ubHkgdQpBcyBNaWx0b24gRnJpZWRtYW4gb2JzZXJ2ZWQsIGFuZCBhIE5vdmVtYmVyIDIwMTEgRmVkZXJhbCBSZXNlcnZlIHN0dWR5IHZlcmlmaWVkLCB0aGUgd29yc2UgdGhlIHJlY2Vzc2lvbiBldmVuIHdoZW4gY2F1c2VkIGJ5IGEgZmluYW5jaWFsIGNyaXNpcyB0aGUgc3Ryb25nZXIgdGhlIHJlY292ZXJ5LCBhYnNlbnQgYmFkIGdvdmVybm1lbnQgcG9saWNpZXMgbGlrZSB0aG9zZSB0aGF0IHByb2xvbmdlZCBhbmQgZGVlcGVuZWQgdGhlIEdyZWF0IERlcHJlc3Npb24uLiAKVHlwaWNhbGx5LCBjYXBpdGFsIGxldHRlcnMgYXJlIHJlZ2FyZGVkIGFzIHJhbmRvbSB2YXJpYWJsZXMgYW5kIGxvd2VyY2FzZSBsZXR0ZXJzIGFyZSByZWFsaXphdGlvbnMgb2YgcmFuZG9tIHZhcmlhYmxlcy4gV2hlbiBpdCBzYXlzIHggPSAoeF8xLCB4XzIgLiksIGl0IG1lYW5zIHRoYXQgaXMgYSBwYXJ0aWN1bGFyIHJlYWxpemF0aW9uIG9mIGEgcmFuZG9tIHZhcmlhYmxlLgoiSSBjYW5ub3QgYmVsaWV2ZSB0aGUgc3BlZWQgb2YgdGhpcyBsYXB0b3AsIiBzYWlkIEx1c2tlLiAiVGhlIGdyYXBoaWNzIGFyZSB1bHRyYSBzaGFycCwgcG9ydGFiaWxpdHkgaXMgZ3JlYXQgYW5kIHRoZSB1bmlxdWUgdXNlciBpbnRlcmZhY2UgaXMgd2hhdCBJIGxpa2UgYmVzdC4gSXQgYWxsb3dzIG1lIHRvIGNoZWNrIGVtYWlscywgc29jaWFsIG1lZGlhIGZlZWRzIGFuZCBZb3VUdWJlLCBhbGwgd2hpbGUgSSdtIHN0aWxsIHBsYXlpbmcgYW5kIGZvY3VzaW5nIG9uIG15IG5ldyBzdHlsZSBnYW1lLiBXaXRob3V0IGRvdWJ0LCB0aGUgUmF6ZXIgQmxhZGUgaXMgaGVscGluZyBteSBvbmxpbmUgZ2FtZSBhbmQgYWxsb3dpbmcgbWUgdG8gdGFrZSBpdCB0byBhIG5ldyBsZXZlbC4gQWxsIHRyYWRlc21lbiBhbmQgd29tZW4gaGF2ZSB0aGVpciBmYXZvcmVkIHRvb2xzIGZvciB0aGVpciB0cmFkZSBtaW5lIGlzIG5vdywgdW5xdWVzdGlvbmFibHksIHRoZSBSYXplciBCbGFkZS4iCk1yX1N0aXJmcnkgIDggcG9pbnRzICBzdWJtaXR0ZWQgMiBtb250aHMgYWdvCkV2ZW4gaWYgdGhpcyBTdXBlcm5hdHVyYWwvTXlzdGVyeSBpdCBoYXMgYSBsb3Qgb2YgZ3JlYXQgYWN0aW9uIHBhY2tlZCBoeXBlbmVzcyBhbmQgaXQgcmVhbGx5IGlzIHVuZXhwZWN0ZWQgYXMgSSB0aG91Z2h0IHRoaXMgd2FzIG1vc3RseSBvbmx5IGdvaW5nIHRvIGJlIGZ1bGwgb2YgcGFuZWxzIG9mIGNoYXR0ZXIgYW5kIHN1Y2ggYnV0IEkgd2FzIHVsdGltYXRlbHkgY2F1Z2h0IG9mZiBndWFyZCBhbmQgcHJvdmVuIHdyb25nIGFuZCB0aGUgYWN0aW9uIHNjZW5lcyBhcmUgb25lIG9mIHRoZSBiZXN0IEkgY2FuIHNheS4gSXQgd2FzIHJlYWxseSBzdWNoIGEgd29uZGVyZnVsIHRpbWUgcmVhZGluZyBhbmQgZ2V0dGluZyBjYXVnaHQgdXAgdG8gdGhlIG1hbmdhIHRoYXQgSSB0cnVseSwgdHJ1bHkgVFJVTFkgcmVjb21tZW5kIHlvdSBnaXZlIHRoaXMgbWFuZ2EgYSB0cnkgb3IgZWl0aGVyIHRoZSBub3ZlbC4gCkFsaXZlIERpc21hbCBKYXBhbmVzZSBSZXZpZXdzIEh1cnQgTmV3IE1pc3Npb24gRW50cnkgQ2hhbmNlc1NxdWFyZSBFbml4IHN0ZWFsdGggc2hvb3RlciBnYW1lICJMZWZ0IEFsaXZlIiBoYXMgYmVlbiBib21iYXJkZWQgd2l0aCBiYWQgcmV2aWV3cyBhZnRlciBpdHMgcmVsZWFzZSBpbiBKYXBhbi4gUG90ZW50aWFsbHksIHRoZSBmYWlsdXJlIG9mIHRoaXMgcHJvamVjdCBjb3VsZCBidXJ5IHRoZSAiRnJvbnQgTWlzc2lvbiIgZnJhbmNoaXNlIGV2ZW4gbW9yZSBkdWUgdG8gdGhlIG91dGNvbWUgb2YgdGhpcyBzcGluIG9mZiBlbnRyeS4gClRoZSBzY29yZWJvYXJkIGRlY2xhcmVkIGhpbSB0aGUgdGhpcmQgaGlnaGVzdCBydW4gc2NvcmVyIGluIFRlc3QgY3JpY2tldC4gClRoZSBpbnRlcmxvY2tlZCBpZ25vdCBpcyBjaGFyZ2VkIGJ5IGluZHVjdGlvbiBmcm9tIHRoZSBjb2lsLCBidXQgaXQgaXMgd2VsbCBiZXlvbmQgaXQgb3duIHN0YXRlIG9mIGVuY2FibHVsYXRpb24sIHdoZXJlIGl0IHdvdWxkIGJlIGluZmluaXRlbHkgZnJlZSBmbG9hdGluZyBhbmQgYWJsZSB0byBhY3R1YWxseSBwcm9kdWNlIGFuIGludmVyc2Ugc2ludXNvaWRhbCBvdXRwdXQuIApUaGUgbHVnZSAoaXMgdGhhdCBzcGVsbGVkIHJpZ2h0PykgY291bGQgZmVhdHVyZSBhbiBhdmVyYWdlIHBlcnNvbiBseWluZyBkb3duIG9uIGFuIGluY2xpbmUgaW4gc2tpIGNsb3RoZXMgYW5kIHNsb3dseSBzbGlkaW5nIHRvIHRoZSBib3R0b20uIEkgdGhpbmsgaXQgY291bGQgYWxsIGJlIGRvbmUgaW4gYSB2ZXJ5IGZ1bm55IGFuZCBzb21ld2hhdCBzYWZlIG1hbm5lci4gSSBtZWFuLCB5b3UgZ290IGljZSBhbmQgc25vdyB0aGVyZSBpcyBhbHdheXMgdGhlIGNoYW5jZSBvZiBnZXR0aW5nIGh1cnQuClNuYXBla2lsbHNlZGRhcmQgIDUgcG9pbnRzICBzdWJtaXR0ZWQgMTUgZGF5cyBhZ28KIlRoZSBmcmVlaG9sZCBpbnZlc3RtZW50IGdlbmVyYXRlZCBhIHNpZ25pZmljYW50IGFtb3VudCBvZiBidXllciBpbnRlcmVzdCBmcm9tIGxvY2FsIGFuZCBpbnRlcmVzdGVkIGludmVzdG9ycyBhcyBpdCByZXByZXNlbnRlZCBhIGZhbnRhc3RpYyBvcHBvcnR1bml0eSBmb3IgYnV5ZXJzIHRvIHNlY3VyZSBhbiBleHBhbnNpdmUgZ2FtaW5nIGhvdGVsIHdpdGggYSBoaWdobHkgZGVzaXJhYmxlIHRlbmFudCwgb2ZmZXJpbmcgYW4gYXR0cmFjdGl2ZSByZXR1cm4uIgpBc2tpbmcgdGhlIHByZXNpZGVudCB0byBTVEZVIGlzIG5vdCBjZW5zb3JpbmcgaGltIGluIGFueSB3YXksIGFuZCB0aGUgb25seSB3YXkgdG8gbWFrZSBpdCBzbyBpcyB0byBleHBhbmQgdGhlIGRlZmluaXRpb24gb2YgY2Vuc29yc2hpcCB0byBiZSBsdWRpY3JvdXNseSBicm9hZCB0aGF0IGFueSBwYXN0b3Igd291bGQgYmUgY2Vuc29yaW5nIG1lIGZvciBub3QgbGV0dGluZyBtZSBzdGFuZCB1cCBhbmQgcmVjaXRlIHRoZSBuYW1lcyBvZiB0aGUgZmlyc3QgMTUxIFBva21vbiBpbiB0aGUgbWlkZGxlIG9mIGNodXJjaC4gRXZlbiBpbiBHbGFzcywgeW91IG1haW5seSBzZWUgaGltIHNpdHRpbmcgZG93biBvciBvbiB0aGUgZ3JvdW5kLiBXaGVuIGhpcyBjaGFyYWN0ZXIgZmlnaHRzIHBlb3BsZSwgaXQgaGFwcGVucyBvZmYgc2NyZWVuIChmaXJzdCBzY2VuZSwga25vY2tvdXQgZ2FtZSB0ZWVucykgb3IgaW4gd2lkZXMgc28gaXQgbWlnaHQgYmUgYSBkb3VibGUuIApMZXNzb24gdG8gYmUgbGVhcm5lZCwgaWYgYSB3YWlmdSB0ZWxlcG9ydHMgaW50byB5b3VyIHdvcmxkIGFuZCB5b3Ugbm90IGR5aW5nIGZyb20gc29tZSB1bmtub3duIGRpc2Vhc2Ugd2l0aGluIDQ4IGhycywgU0hVVCBUSEUgRlVDSyBVUCBhbmQgS0VFUCBIRVIgT0ZGIFRIRSBHUklELgpJIGtuZXcgZ2lybHMgd2hvIHdvcmtlZCBhdCBTb25pYywgYW5kIHRpcHMgc2VlbWVkIHRvIGNvbWUgYmV0dGVyIGZvciB0aGUgZ2lybHMgaW4gcm9sbGVyIHNrYXRlcywgYW5kIG9uZSBvZiB0aGUgZ2lybHMgc2FpZCB3aGVuIHNoZSB3b3JlIGtuZWUgaGlnaCBzb2NrcyBhbmQgc2hvcnRzLCBzaGUgZ290IGV2ZW4gbW9yZSB0aXBzLiAKVGhlIGZlc3RpdmFsIGFsc28gaGFzIGEgc29mdCBzcG90IGZvciBTaWdub3JlbGxvIEVzdGF0ZSwgb3duZWQgYnkgV2VzdCBWYW5jb3V2ZXIgcmVzaWRlbnQgUmF5IFNpZ25vcmVsbG8uIAooTm90ZSB0aGF0IEkgaGF2ZSBubyByZWFsIGtub3dsZWRnZSBvZiB0aGUgQ2h1cmNoIGZpbmFuY2lhbCBzaXR1YXRpb24gZ2xvYmFsbHkuKSBUaGV5IG93biBhIGxvdCBvZiBjaHVyY2hlcywgY2F0aGVkcmFscyBhbmQgdGhlIGxpa2UgYnV0IG1haW50YWluaW5nIHRob3NlIGJ1aWxkaW5ncyBpc24gY2hlYXAgYW5kIHRoZXkgbm90IGV4YWN0bHkgcHJvZml0YWJsZS4gCkltIEF1Z2VuYmxpY2sgbGF1ZmVuIGRpZSBQcm9qZWt0aWVydW5nc2FyYmVpdGVuLiBEYXMgTHV4dXNob3RlbCBzb2xsIEFuZmFuZyAyMDE0IGZlcnRpZyBnZXN0ZWxsdCB3ZXJkZW4gICBnZXJhZGUgcmVjaHR6ZWl0aWcgenVtIEJlZ2lubiBkZXIgV2ludGVyc3BpZWxlLiBFcyBpc3QgbmFjaCB3aWUgdm9yIHVua2xhciwgd2VyIGRhcyAzNTAgTWlvLiAKU3BlZWQgY2xvdGggaXMgdGhlIG1vc3QgcG9wdWxhciBvcHRpb24gaW4gcG9rZXIgdGFibGUgY292ZXJpbmdzIHRvZGF5LCB3aGV0aGVyIHlvdSBwbGF5IHByb2Zlc3Npb25hbGx5IG9yIGFyZSBqdXN0IGEgZmFuIG9mIHRoZSBGcmlkYXkgbmlnaHQgYXQgaG9tZSBnYW1lLiAKSGUgd2Fzbid0IG9ubHkgYmlnIG5ld3MgaW4gRGVubWFyaywgaGUgd2FzIGZvZGRlciBmb3IgZXZlcnkgbmV3cyBvdXRsZXQgdW5kZXIgdGhlIHN1biBhcyBiZWluZyBhIFJlYWwgTWFkcmlkIHN0YXIgbWVhbnQgeW91IHdlcmUgZmFpciBnYW1lLi4gCkpvc2VwaCBTdGFsaW4ncyBGbHlpbmcgQ2lyY3VzClRyeSBzb21lIHdhcm1lciB3aGl0ZXMgd2l0aCBjb29sZXIgdG9uZXMuIEdldCB0aGF0IHdvdyBmYWN0b3IsIGp1c3QgYmUgc3VyZSB0byBsYXllciB0aGUgY29sb3VycyB3aXRoIGxvdHMgb2YgaW50ZXJlc3RpbmcgdGV4dHVyZXMuLiAKIkFuZCBoZSBzYWlkLCBHbyBmb3J0aCwgYW5kIHN0YW5kIHVwb24gdGhlIG1vdW50IGJlZm9yZSB0aGUgTE9SRC4gQW5kLCBiZWhvbGQsIHRoZSBMT1JEIHBhc3NlZCBieSwgYW5kIGEgZ3JlYXQgYW5kIHN0cm9uZyB3aW5kIHJlbnQgdGhlIG1vdW50YWlucywgYW5kIGJyYWtlIGluIHBpZWNlcyB0aGUgcm9ja3MgYmVmb3JlIHRoZSBMT1JEOyBidXQgdGhlIExPUkQgd2FzIG5vdCBpbiB0aGUgd2luZDogYW5kIGFmdGVyIHRoZSB3aW5kIGFuIGVhcnRocXVha2U7IGJ1dCB0aGUgTE9SRCB3YXMgbm90IGluIHRoZSBlYXJ0aHF1YWtlOgpUaGUgbmV4dCBraW5kIG9mIHJhbmtpbmcgZm9yIHBva2VyIGhhbmRzIGlzIGNhbGxlZCBmb3VyIG9mIGEga2luZC4gCk1jS2lubmV5IHBva2VyIGNsdWIgY2xvc2VzIHJhdGhlciB0aGFuIGZhY2UgY3JpbWluYWwgY2hhcmdlcyBvdmVyIGlsbGVnYWwgZ2FtYmxpbmcKTm8gbWF0dGVyIHdoYXQgeW91IGRvLCBhbiBhZGRpY3Qgd2lsbCBnZXQgdGhlaXIgZml4LiAKQmUgY29uY2VybmVkLiBQcm90ZWN0IHlvdXJzZWxmLi4gClRoZSBmYWN0IHRoYXQgc29tZSBwZW9wbGUgY2FuIGNvbnNpc3RlbnRseSBtYWtlIG1vbmV5IGZyb20gb25lIG9mIHRoZWlyIGdhbWVzIGlzIHNvbWV0aGluZyB0aGV5IHRvbGVyYXRlIGFzIGxvbmcgYXMgdGhleSBzdGlsbCBnZXR0aW5nIHJha2UuLiAKVGhlIGxhdGVzdCBleHBhbnNpb24gb2YgdGhpcyByaWRpY3Vsb3VzIG5ldCBpcyBhYm91dCAic2V4dGluZyIgIHdoZW4gY29uc2VudGluZyB0ZWVucyBzZW5kIG5ha2VkIHBob3RvcyBvZiB0aGVtc2VsdmVzIHRvIGVhY2ggb3RoZXIgb3IgcG9zdCB0aGVtIG9uIHRoZWlyIEZhY2Vib29rIHBhZ2UuIApJIGFtIG5vdCBzdWdnZXN0aW5nIHRoYXQgdGhpcyBpcyBob3cgSmVzdXMgaGVhbGVkIHBlb3BsZS4gSXQgaXMganVzdCBwYXJ0IG9mIHRoZSBzdG9yeS4gCklmIEkgaGFkIHRvIHJlZ3VsYXJseSB0cmF2ZWwgdGhyb3VnaG91dCBBbGJlcnRhIGFuZCBCQyBvdXRzaWRlIG9mIEVkbW9udG9uLCBDYWxnYXJ5IGFuZCB0aGUgTG93ZXIgTWFpbmxhbmQsIEknZCBnbyB3aXRoIFRlbHVzLiBJZiBJIGhhZCB0byB0cmF2ZWwgaW4gRWFzdGVybiBDYW5hZGEsIEknZCBnbyB3aXRoIEJlbGwuIApBIHBva2VyIHJ1biBoYWQgYmlrZXJzIGZyb20gbmVhciBhbmQgZmFyIHN0b3AgYXQgbG9jYWwgYnVzaW5lc3NlcyB0byBwaWNrIHVwIHBsYXlpbmcgY2FyZHMgZm9yIHRoZSBjb250ZXN0IGFuZCBhbHNvIHRha2UgcGFydCBpbiBsb2NhbCBzYXZpbmdzIGFuZCBkaXNjb3VudHMuIEluIHRoZSBlbmQsIGl0IHdhcyBTYWxseSBHb2VybmVyIG9mIEFrcm9uIHdobyB0b29rIGZpcnN0IHByaXplIGluIHRoZSAyMDEzIHBva2VyIHJ1bi4KR2V0IE1vdGl2YXRlZApBIG1vbnRoIGFnbyBiZXR3ZWVuIHRoZSBPY3RvYmVyIHByb21vIGFuZCB0aGUgTm92ZW1iZXIgdG91cm5leSBndWFyYW50ZWVzIHNjaGVkdWxlIGl0IHNlZW1lZCBsaWtlIGl0IHdhcyByZWFsbHkgdGFraW5nIG9mZiBzbyBzYWQgdG8gc2VlIGl0cyBzdWRkZW4gZGVtaXNlLi4gClNvbiBvZiBWaWxlbSBhbmQgTWlyb3NsYXZhIEx1ZnQ7IGJyb3RoZXIgb2YgUm9tb25hIFNjaGVkbGVyIGFuZCBuZXBoZXcgb2YgTWlyZWsgYW5kIE1hcmllIFNpcGVsLiBGb3JtZXIgc3BvdXNlIG9mIE1hcmlseW4gQ29vcGVyICgxOTc5IDE5ODUpOyBmYXRoZXIgb2YgQ29ycnk7IGdyYW5kcGEgb2YgTWFkaXN5bi4gRm9ybWVyIHNwb3VzZSBvZiBDYXRoeSBBbnRob255ICgxOTk0IDIwMDYpOyBzdGVwIGZhdGhlciBvZiBCbGFrZSBQaXBlciBhbmQgQnJpdHRhbnkgQW50aG9ueTsgZ3JhbmRwYSB0byBTdW1tZXIsIENpZXJyYSBhbmQgTGlhbS4gCjExLiBXaGVuIEkgd2FzIG9uIGEgaGlnaGVyIGRvc2Ugb2YgYWRkZXJhbGwgKGFuZCBvZmYgbXkgUHJvemFjLikgaXQgd291bGQgaW5jcmVhc2UgbXkgYW54aWV0eSBhbmQgSSBjb3VsZG4gZHJpbmsgY29mZmVlIGNhdXNlIHRoZSBhZGRlZCBjYWZmZWluZSB3b3VsZCBtYWtlIG1lIGZlZWwgbGlrZSBJIHdhcyBkeWluZy4gSXQgc29tZXRpbWVzIGhhcHBlbmVkIGV2ZW4gd2hlbiBJIHdhcyBvbiBteSBQcm96YWMuIApUaGV5IGNvdWxkbid0IHJlcGVhdCB0aGUgZmVhdCBpbiB0aGUgb25lIGRheSBzZXJpZXMgdGhhdCBmb2xsb3dlZCwgdGhvdWdoLCBsb3NpbmcgMSAyLi4gCkFsb3JzLCByZXZlbm9ucyB5ICBsYSByYWxpdCBkdSBxdW90aWRpZW4sIGF1eCBwcm9jY3VwYXRpb25zIGRlcyBQYXJpc2llbnMuLiAKQnV0IGV2ZW50dWFsbHkgRHJldyByZWFsaXplZCBzaGUgd2FudGVkIHRvIHNldHRsZSBpbnRvIGEgc3BvcnQgdGhhdCBiZXR0ZXIgZml0IGhlciBwZXJzb25hbGl0eS4gClRoZSBmaWxsaW5nIGNhbiBiZSByZW1vdmVkIGluIGN1c3RvbSBhbW91bnRzIHRvIGNyZWF0ZSB0aGUgcGVyZmVjdCBmaXJtbmVzcywgd2hpY2ggb3VyIHRlc3RlciBsb3ZlZC4gClR3byBpbmRpdmlkdWFscyBoYXZlIHRha2VuIGl0IHVwb24gdGhlbXNlbHZlcyB0byBncmluZCBnb3Zlcm5tZW50IHRvIGEgZGVwcmVzc2luZ2x5IGhpc3RvcmljIGhhbHQgd2hpbGUgcHV0dGluZyA4MDAsMDAwIEFtZXJpY2FucyBvdXQgb2Ygd29yaywgYWxsIGluIHRoZSBob3BlcyBvZiBlbmFjdGluZyBhIHNpbmd1bGFyIGNhbXBhaWduIHByb21pc2UgdGhhdCBhIGZhaWx1cmUgYnkgZGVzaWduLiBIb3cgaXQgYXQgYWxsIHBvc3NpYmxlIHRvIHRoaW5rIHRoYXQgYW55dGhpbmcgb3RoZXIgdGhhbiBhIGdyYXZlIHBlcnZlcnNpb24gb2YgZGVtb2NyYWN5LCBhbmQgdGhhdCB0aGVyZSBuZWVkcyB0byBiZSBhbnkgbmVnb3RpYXRpb24gb24gdGhpcyBwb2ludCB3aXRoIHNvbWVvbmUgd2hvIGhhcyByZXBlYXRlZGx5IHNob3dlZCB6ZXJvIGludGVyZXN0IGluIG5lZ290aWF0aW5nIGluIGdvb2QgZmFpdGgsIGlzIGJhZmZsaW5nLgpBUlRBUFAgQm9zdG9uKyBmZWF0dXJlcyB0aGUgbW9zdCBkaXZlcnNlLCBjb21wcmVoZW5zaXZlLCBhbmQgdGhlIG9ubHkgY3VzdG9taXphYmxlIGxpc3Rpbmcgb2YgYXJ0IGluIE1hc3NhY2h1c2V0dHMuIFRoZSBmcmVlIGRvd25sb2FkIGNvbm5lY3RzIHVzZXJzIHRvIGFydCBleGhpYml0aW9ucywgZXhwZXJpZW5jZXMgYW5kIGV2ZW50cyBhdCBub25wcm9maXQgYW5kIGNvbW1lcmNpYWwgZ2FsbGVyaWVzLCBtdXNldW1zIGFuZCBhcnRpc3QgcnVuIHNwYWNlcywgcHVibGljIGFuZCBvdXRkb29yIHZlbnVlcywgYXMgd2VsbCBhcyBzZWNyZXQgb3IgYWxtb3N0IHNlY3JldCBsb2NhdGlvbnMuClByZXNpZGVudCBUcnVtcCBmaXJlZCBmb3JtZXIgQXR0b3JuZXkgR2VuZXJhbCBKZWZmIFNlc3Npb25zIE5vdmVtYmVyIDcsIDIwMTguIE9uIG9yIGJlZm9yZSB0aGF0IGRhdGUsIGRpZCB5b3UgaGF2ZSBhbnkgY29tbXVuaWNhdGlvbiB3aXRoIGFueSBXaGl0ZSBIb3VzZSBvZmZpY2lhbCwgaW5jbHVkaW5nIGJ1dCBub3QgbGltaXRlZCB0byBQcmVzaWRlbnQgVHJ1bXAsIGFib3V0IHRoZSBwb3NzaWJpbGl0eSBvZiB5b3VyIGFwcG9pbnRtZW50IGFzIEFjdGluZyBBdHRvcm5leSBHZW5lcmFsPyBJZiBzbywgd2hlbiBhbmQgd2l0aCB3aG9tPyBEaWQgYW55IG9mIHRob3NlIGNvbW11bmljYXRpb25zIGRpc2N1c3MgdGhlIHBvc3NpYmlsaXR5IG9mIHlvdXIgcmVjdXNhbCBmcm9tIG92ZXJzaWdodCBvZiB0aGUgU3BlY2lhbCBDb3Vuc2VsIGludmVzdGlnYXRpb24/LiAKQXMgTWFyeSBTaGVsbHkgdG9sZCB1cyBpbiBoZXIgdGFsZSBvZiBGcmFua2Vuc3RlaW4sIGxpZmUgYXQgYW55IGNvc3QgaXMgYSBtb25zdHJvdXMgYWZmYWlyLiBXaGVuIHdpbGwgdGhlIGNlbnRyaXN0IERlbXMgcnVubmluZyB0aGUgV2hpdGUgSG91c2UgYW5kIHRoZSBDb25ncmVzcyByZWFsaXplIHRoYXQgdGhlIHNhbWUgaXMgdHJ1ZSBvZiBwb2xpY3kuIElmIHlvdSBoYXZlIHNvIHRob3JvdWdobHkgY29tcHJvbWlzZWQgd2l0aCB0aGUgaW50ZXJlc3RzIG9mIEJJRyBJTlNVUkFOQ0UgdGhhdCB5b3UgZ2FpbiBjb3ZlcmFnZSBieSBleHRyYWN0aW5nIGV2ZW4gbW9yZSB3ZWFsdGggZnJvbSB0aGUgQW1lcmljYW5zIHdobyBjYW4gbGVhc3QgYWZmb3JkIGl0LCB0aGVuIHRoYXQgbm90IGEgYmlsbCB0aGF0IHNob3VsZCBjb21lIHRvIGxpZmUgaW4gbGF3Li4gClNlbGYgaW5kdWxnZW5jZSB0byBhbiB1bmhlYWx0aHkgbGV2ZWwuIFBhcmVudHMgd2VyZSB1bmFibGUgdG8gc3RvcCB0aGVtLCB3aXZlcyB3ZXJlIHVuYWJsZSB0byBzdG9wIHRoZW0sIGFuZCB0aGV5IGNvdWxkIG5vdCBzdG9wIHRoZW1zZWx2ZXMuIFNvIHRoZSBuYW5ueSBzdGF0ZSBkaWQgaXQuLiAKVGhpcyBnYXZlIHRoZW0gYSBjcnVkZSBmb3JtIG9mIHZpc2lvbiwgYWxsb3dpbmcgdGhlbSB0byBtb3ZlIGluIHJlc3BvbnNlIHRvIGxpZ2h0IGFuZCBzaGFkZSwgYnV0IGFsc28gYnJvdWdodCBpbnRvIGJpb2xvZ3kgYSB3YXkgb2YgY29udHJvbGxpbmcgZWxlY3RyaWNhbCBwb3RlbnRpYWwuCldoeSBkbyBQYWtpc3RhbmkgR3JhZGUgMjIgb2ZmaWNlcnMsIGZlZGVyYWwgbWluaXN0ZXJzIGFuZCBnZW5lcmFscyBzcGVuZCB0aGlzIG11Y2ggdGltZSBhbmQgZWZmb3J0IG9uIHRoZWlyIHNhbGVzJyBwaXRjaGVzIHRvIHRoZWlyIEFtZXJpY2FuIGNvdW50ZXJwYXJ0cz8gU2ltcGx5IHB1dCwgZ2V0dGluZyB0aGUgQW1lcmljYW4gdGF4cGF5ZXIgdG8gZm9vdCB0aGUgYmlsbCBmb3IgdGhlaXIgcHJvamVjdHMgd2hldGhlciBpdCBpcyBnZXR0aW5nIG5ldyBoZWxpY29wdGVycyBmb3IgdGhlIGZpZ2h0IGluIFdhemlyaXN0YW4sIG5ldyBicmlkZ2VzIGZvciBTd2F0LCBhIG5ldyBob3NwaXRhbCBpbiBNaWFud2FsaSwgb3IgbmV3IHNjaG9vbHMgZm9yIGtpZHMgaW4gSmFjb2JhYmFkIGFsbG93cyB0aGUgRE1HIG9mZmljZXJzLCB0aGUgcG9saXRpY2lhbnMsIGFuZCB0aGUgZ2VuZXJhbHMgdGhhdCBydW4gUGFraXN0YW4gdG8gaG9sZCBmaXJtIHRvIHRoZWlyIGZpZyBsZWF2ZXMuIFVTIHRheHBheWVyIG1vbmV5LCB0aGV5IGhvcGUsIHdpbGwgYWxsb3cgdGhlbSB0byBrZWVwIHRoaW5ncyBhcyB0aGV5IGFyZSwgd2l0aG91dCBoYXZpbmcgdG8gY2hhbmdlIGFueXRoaW5nLiAKVGhlIFByZW1pdW0gbWVtYmVyc2hpcCBnaXZlcyBtZSBDb2lucywgd2hhdCBhcmUgdGhvc2UgZm9yP0NvaW5zIGFyZSBhIHZpcnR1YWwgZ29vZCwgYW5kIHlvdSBjYW4gdXNlIHRoZW0gdG8gYXdhcmQgZXhjZXB0aW9uYWwgcG9zdHMgb3IgY29tbWVudHMgd2l0aCBhIFNpbHZlciwgR29sZCwgb3IgUGxhdGludW0gQXdhcmQuIFRoaXMgaXMgYSB3YXkgdG8gc2hvdyBhcHByZWNpYXRpb24gZm9yIGFuIGV4Y2VwdGlvbmFsIGNvbnRyaWJ1dGlvbiB0byBSZWRkaXQsIGFuZCBjYW4gYWxzbyBncmFudCB0aGUgcmVjaXBpZW50IHNwZWNpYWwgYm9udXMgYmVuZWZpdHMuIFlvdSBjYW4gYXdhcmQgc29tZW9uZSBieSBjbGlja2luZyBvbiAiR2l2ZSBBd2FyZCIgYmVsb3cgYSBwb3N0IG9yIGNvbW1lbnQuCldvbWVuIGFyZSBkaXNjb3VyYWdlZCBmcm9tIGJlaW5nIGRpcmVjdCwgdGVsbGluZyBwZW9wbGUgd2hhdCB0aGV5IHdhbnQgb3IgdGhpbmssIG9yIGJlaW5nIGNyaXRpY2FsIG9mIG90aGVycyBhdCB0aGUgcmlzayBvZiBzZWVtaW5nICJib3NzeSIgb3IgIm92ZXJiZWFyaW5nIi4gCkFzIGNhcmluZyBsb3ZlZCBvbmVzIHdhbnRpbmcgdG8gaGVscCB0aGUgTmF0aW9uYWwgaGVhbHRoIGNhcmUgY3Jpc2lzLCB3ZSBuZWVkIHRvIGJlIGEgcGFydCBvZiB0aGUgc29sdXRpb24uIEltcGxlbWVudGluZyBiYWxhbmNlIGV4ZXJjaXNlIGFuZCBmYWxsIHByZXZlbnRpb24gY29uZGl0aW9uaW5nIHByb2dyYW1zIHdpbGwgc2F2ZSB1cyBtb25leSBhbmQga2VlcCB1cyBoZWFsdGhpZXIgZm9yIHRoZSBsb25nIGhhdWwuCkFub3RoZXIgYWR2YW50YWdlIG9mIHRoZSBsYXRlIHBvc2l0aW9uIGlzIHRoYXQgeW91IGNhbiBlYXNpbHkgcGxheSBjYXJkcyBsaWtlIDUgOCwgSiA3LCBRIDguIApEZWZpbml0ZWx5LiBJIHdvdWxkIG5vdCBjYWxsIGl0IGEgY29uc3BpcmFjeSwgaW4gdGhlIHNlbnNlIG9mIGEgaW50ZW50aW9uYWwgcGxhbiwgYnV0IGl0IGlzIGEgbWF0dGVyIG9mIG1vbm9wb2xpZXMgaW4gc29tZSBjYXNlcyBhbmQgdGhlIG5hdHVyYWwgb3V0Y29tZSBvZiBncmVlZCBhbmQgbWFya2V0aW5nIHVuZGVyIGNhcGl0YWxpc20uIApOb3QganVzdCBhbnkgb25saW5lIHBva2VyIHNpdGUgd2lsbCBkbyBpZiB5b3Ugd2FudCB0byBpbXByb3ZlIHlvdXIgY2hhbmNlcyBvZiB3aW5uaW5nLi4gCk5hdnkgc3VpdHMgbG9vayBtdWNoIGJldHRlciB3aXRoIGJyb3duIHNob2VzLCBidXQgaXQgY2FuIGJlIHB1bGxlZCBvZiB3aXRoIGJsYWNrIHRoZXJlIGFyZW4gYW55IHJ1bGVzIGFnYWluc3QgaXQuIApMb3R0ZXJ5IENvcnAuLCB3aG8gdGFrZXMgY3JlZGl0IGZvciBjb2luaW5nIHRoZSB3b3JkICJGYWNlYm9va2llLCIgYWdyZWVkIHRoZXJlIGFyZSBtYW55IHN0ZXBzIHRoYXQgbXVzdCB0YWtlbiwgcGFydGljdWxhcmx5IGluIHRlcm1zIG9mIHJlc3RyaWN0aW5nIGFjY2VzcyB0byBtaW5vcnMsIGNvbW11bmljYXRpbmcgY3JlZGlibGUgbWVzc2FnZXMgYW5kIHJlZmVycmluZyB0aG9zZSBwZW9wbGUgd2hvIG1heSBuZWVkIGhlbHAgd2l0aCBwcm9ibGVtIGdhbWJsaW5nIHRvIHN1aXRhYmxlIHJlc291cmNlcy4uIApNeSBuYW1lIGlzIENhaXRoIFdyaWdodCBhbmQgSSdtIGEgMjAwIGhyIFlvZ2EgQWxsaWFuY2UgY2VydGlmaWVkIHlvZ2EgaW5zdHJ1Y3RvciwgSSBwcmFjdGljZSBhIEhhdGhhIFZpbnlhc2EgZmxvdyBmcm9tIHRoZSB0ZWFjaGluZ3Mgb2YgS3Jpc2huYW1hY2hhcnlhIChhcyB3ZWxsIGFzIGhhdmluZyBhIGJhY2tncm91bmQgaW4gSXllbmdhciB5b2dhKS4gSSBsaXZlZCBpbiBJbmRvbmVzaWEgZm9yIDIgbW9udGhzIHdoaWxlIHN0dWR5aW5nIGFuZCBwcmFjdGljaW5nIHlvZ2EgZXZlcnlkYXkuIFlvZ2EgaXMgYSBwZXJmZWN0IHdheSB0byByZWxpZXZlIHN0cmVzcyBhbmQgd29ya291dC4gClNvbWV0aW1lcyBteSBrbmVlcyB3b3VsZCBodXJ0LCBidXQgSSBjb3VsZCBydW4uIApJdCdzIGFtYXppbmcgaG93IG11Y2ggZW5lcmd5IHlvdSBjYW4gZ2V0IGZyb20gdGhlIHJpZ2h0IGNvbWJvIG9mIGZydWl0cyBhbmQgdmVnZ2llcy4uIApKdXJpaiBGZWRvcm92IHUKSSB3b3VsZCBzYXkgY2xvc2UgdG8gNWsgd29ydGggb2YgY29wcGVyIHNvbGQgYXQgc2NyYXAuIApJbnNpZ25pZmljYW50IG9yIHNtYWxsIGNvbmZsaWN0IGJldHdlZW4gTmF0aW9ucyB3aWxsIHN1YnNpZGl6ZWQgdG8gZGVhbCB3aXRoIG1ham9yIG9yIHByaW1lIHByb2JsZW1zIHRoYXQgd2lsbCBhcmlzZSBkdWUgdG8gdGhpcyBHcmVhdCBXYXIuLiAKV2hpbGUgeW91IG1heSBmaW5kIGl0ZW1zIGFsb25nIHRoZSB3YXRlcnMgZWRnZSwgdHJ5IHRoaW5raW5nIGFzIGlmIHlvdSB3ZXJlIGNvbWluZyB0byB0aGlzIGJlYWNoIHRvIHN3aW0gb3IgcGljbmljLiAKSXQgdXNlZCB0byBiZSBhIGdyZWF0IGJyYW5kLCBidXQgbm90IHNvIG11Y2ggYW55bW9yZS4gSSBib3VnaHQgYSBsb3Qgb2YgTSBzdHVmZiBmb3IgbXkga2lkLCBtb3N0IG9mIGl0IGJldHdlZW4gNCBhbmQgNiB5ZWFycyBhZ28gbm93IGFuZCB0aGUgdmFzdCBtYWpvcml0eSBvZiBpdCB3YXMgc3VwZXJiLiBJIGhhdmUgYm91Z2h0IHNldmVyYWwgdGhpbmdzIGluIHRoZSBsYXN0IHllYXIgb3IgdHdvIHRoYXQgSSBoYWQgZm9yIG15IHNvbiBmb3IgeW91bmdlciBraWRzIGluIHRoZSBmYW1pbHkgYW5kIG1vc3Qgb2YgaXQgaXMgbm90IHRoZSBzYW1lLCBzYWRseS4gTGlrZSBJIGJvdWdodCBhbiBpZGVudGljYWwgd29vZGVuIHB1enpsZSBmb3IgbXkgbmVwaGV3LiBNeSBzb24gaGFzIGhlYXZ5IHdvb2QgcGllY2VzIHRoYXQgYXJlIHBhaW50ZWQgbmljZWx5IGFuZCBzaG93IGxpdHRsZSB0byBubyB3ZWFyIGV2ZW4gdGhvdWdoIGhlIGZyZXF1ZW50bHkgY2hld2VkIG9uIHRoZW0uIFRoZSBhbmltYWwgcGllY2VzIHdlcmUgdGhpY2sgYW5kIGNvdWxkIHN0YW5kIHVwIG9uIHRoZWlyIG93bi4gVGhlIGlkZW50aWNhbCBwdXp6bGUgSSBnb3QgZm9yIG15IG5lcGhldyBoYXMgc3RpY2tlcnMgaW5zdGVhZCBvZiBwYWludCBhbmQgdGhlIHBpZWNlcyBhcmUgdG9vIHRoaW4gdG8gc3RhbmQgdXAgb24gdGhlaXIgb3duLiBJdCBhIGJ1bW1lciBiZWNhdXNlIHRoZXkgd2VyZSBvbmUgb2YgdGhlIGZldyBhZmZvcmRhYmxlLCBlYXNpbHkgYWNjZXNzaWJsZSBxdWFsaXR5IHRveSBicmFuZHMgaW4gdGhlIFVTLgpWZWdhc2dhbCAgMSBwb2ludCAgc3VibWl0dGVkIDEgZGF5IGFnbwpXaWtpTGVha3MgYWxzbyBoYXMgZW1lcmdlZCBhcyBhbiBpbXBvcnRhbnQgcGFydCBvZiBTcGVjaWFsIENvdW5zZWwgUm9iZXJ0IE11ZWxsZXIgaW52ZXN0aWdhdGlvbiBpbnRvIHBvc3NpYmxlIFJ1c3NpYW4gbWVkZGxpbmcgaW50byB0aGUgMjAxNiBwcmVzaWRlbnRpYWwgZWxlY3Rpb24sIGFzIGludmVzdGlnYXRvcnMgZm9jdXMgb24gd2hldGhlciBQcmVzaWRlbnQgRG9uYWxkIFRydW1wIGNhbXBhaWduIGtuZXcgUnVzc2lhbiBoYWNrZXJzIHdlcmUgZ29pbmcgdG8gcHJvdmlkZSBlbWFpbHMgdG8gV2lraUxlYWtzIHN0b2xlbiBmcm9tIERlbW9jcmF0aWMgb3JnYW5pemF0aW9ucywgaW5jbHVkaW5nIHByZXNpZGVudGlhbCBjYW5kaWRhdGUgSGlsbGFyeSBDbGludG9uIGNhbXBhaWduLgpJdCB3aWxsIFBMQVkgV01BLCBidXQgdXN1YWxseSBvbiBwbGF5ZXJzIGxpa2UgdGhpcyB0aGUgYml0cmF0ZSBpcyAzMjAuIApUaGUgc2hpcCBoYXMgZ2VuaWVzLCBhbmQgdGhleSBjYW4gcGVyZm9ybSBtYWdpYzogQWx0aG91Z2ggYmFyZ2FpbiBiYXNlbWVudCBkaXNjb3VudHMgZHJhdyBwbGVudHkgb2YgdHJhdmVsZXJzIHRvIGJpZyBzaGlwIGNydWlzaW5nLCBwcm9jdXJpbmcgUm95YWwgQ2FyaWJiZWFuJ3MgVklQIHN0YXR1cyBjYW4gb2ZmZXIgYSB0cnVlIGx1eHVyeSBleHBlcmllbmNlLiAKQ2hsb2UgaGFzIGEgZ3JlYXQgd2F5IG9mIG1ha2luZyBhbGwgb2YgaGVyIGNsaWVudHMgZmVlbCByZWxheGVkIGFuZCBjb21mb3J0YWJsZSwgd2V0aGVyIHRoZXkgYXJlIGhhdmluZyBhIHNwcmF5IHRhbiwgYSB0ZW5zaW9uIHJlbGVhc2luZyBtYXNzYWdlIG9yIGhhdmluZyBhIGx1eHVyeSBtYW5pY3VyZS4gQ2hsb2UgdW5kZXJzdGFuZHMgYWxsIG9mIGhlciBjbGllbnRzIG5lZWRzIHdoZW4gcGFtcGVyaW5nIGFuZCBiZWF1dGlmeWluZyB0aGVtLi4gCjMuIFNldmVuIENhcmQgU3R1ZDogVGhlIHByb2NlZHVyZXMgaW5jbHVzaXZlIGluIHRoZSBTZXZlbiBDYXJkIFN0dWQgUG9rZXIgZ2FtZSBhcmUgdGhlIG9uZXMgd2hpY2ggYXJlIG9uIGEgdXN1YWwgYmFzaXMgYWdyZWVkIGJ5IHRoZSBleHBlcnRzIG9uIGZsYXQgbGltaXQgZ2FtZXMuIFRoZSBiYXNpYyBwcmVyZXF1aXNpdGUgb2YgdGhlIGdhbWUgaXMgdG8gaGF2ZSBjcnlzdGFsIGNsZWFyIGludGVsbGlnZW5jZSBvZiB0aGUgYmFzaWMgY29uY2VwdHMgb2YgdGhlIGdhbWUgdG8gYXR0YWluIHJpdmFscnkuLiAKQmVzdCBWYWx1ZVByb3BlcnRpZXMgcmFua2VkIHVzaW5nIGV4Y2x1c2l2ZSBUcmlwQWR2aXNvciBkYXRhLCBpbmNsdWRpbmcgdHJhdmVsbGVyIHJhdGluZ3MsIGNvbmZpcm1lZCBhdmFpbGFiaWxpdHkgZnJvbSBvdXIgcGFydG5lcnMsIHByaWNlcywgYm9va2luZyBwb3B1bGFyaXR5LCBsb2NhdGlvbiBhbmQgcGVyc29uYWwgdXNlciBwcmVmZXJlbmNlcy4KRG9uJ3QgaGF2ZSBmaWJyb2lkcywgYnV0IGV2ZXIgc2luY2UgSSBoYWQgYSBtaXNjYXJyaWFnZSBJJ3ZlIGhhZCB0aGUgYWJzb2x1dGUgd29yc3QgcGVyaW9kcyBvZiBteSBsaWZlLiBJIHVzZWQgdG8gaGF2ZSBhIHByZXR0eSBub3JtYWwvbGlnaHQgcGVyaW9kLCBidXQgbm93IEkgaGF2ZSBodWdlIGNsb3RzIGFuZCBhIGhlYXZ5IGZsb3cuIApbU0xdIGZvciBwb3N0cyBkaXJlY3RseSByZWdhcmRpbmcgb3IgcmVsYXRpbmcgdG8gU2NhbmxhdGlvbi4KTm8gaHVtYW4gdHJhaW5pbmcgd2FzIGdpdmVuIHRvIHRoZSBzb2Z0d2FyZS4gSXQgd2FzIHNpbXBseSBwcm92aWRlZCB3aXRoIHRoZSBydWxlcyBvZiB0aGUgZ2FtZSBhbmQgdGhlbiBtYWRlIHRvIHBsYXkgYWdhaW5zdCBpdHNlbGYgZm9yIHRoZSBlcXVpdmFsZW50IG9mIGEgYmlsbGlvbiBiaWxsaW9uIGhhbmRzIG9mIHBva2VyLiBNb3JlIHRoYW4gNCwwMDAgcHJvY2Vzc29ycyBjaHVybmVkIGF3YXkgZm9yIHR3byBtb250aHMgdG8gYWxsb3cgdGhlIHNvZnR3YXJlIHRvIGxlYXJuIGhvdyB0byBwbGF5LiAKVEhFIEtJTkcgT0YgRklHSFRFUlMgJzk4IGlzIGEgZnVsbCB2ZXJzaW9uIGdhbWUuIApDIHVuIHJzdWx0YXQgcXVpIGVzdCBsZSBmcnVpdCBkIGxvbmd1ZSBldCBzb3VjaWV1c2UgbWF0dXJhdGlvbiBkcGxveWUgc3VyIHBhcyBtb2lucyBkZSBxdWluemUgcGFnZXMuLiAKSXQncyBDb21wbGFpbnRzIGFuZCBDb25mZXNzaW9ucyBEYXkKQ291bGQgYmUgbXV0dWFsbHkgYmVuZWZpY2lhbCBmb3IgdGhlIFRvd24gb2YgU3ByaW5nZGFsZSBhbmQgdGhlIFBhaXV0ZSB0cmliZSwiIEhlYm5lciBzYWlkLiAiQnV0IGJvdGggcGFydGllcyBuZWVkIHRvIGxlYXJuIHRvIHRydXN0IGVhY2ggb3RoZXIuIlRoaXMgbWVldGluZyByZXByZXNlbnRzdGhlIGluaXRpYWwgc3RlcCBpbiB0aGUgTmF0aW9uYWwgRW52aXJvbm1lbnRhbCBQb2xpY3kgQWN0IHByb2Nlc3MgaW50ZW5kaW5ndG8gaW5mb3JtIGFuZCBnYXRoZXIgcHVibGljIGNvbW1lbnRzIHBlcnRhaW5pbmcgdG8gdGhpcyBhY3F1aXNpdGlvbiBwcm9qZWN0LiAKR29vZCBsdWNrIGdldHRpbmcgdGhvc2UuIEFzIGZvciB5b3UgZ2V0dGluZyB5b3VyIE1hY2Vkb25pYW4gY2l0aXplbnNoaXAuIApJIHBheSA0LDIwMCBpbiByZW50LCBhbmQgdXN1YWxseSBhbm90aGVyIDUwMCBwZXIgbW9udGggaW4gdXRpbGl0aWVzICAgdGhlIHNlYXNvbnMgc3VjayBoZXJlIHRvbywgdW5mb3J0dW5hdGVseSwgYW5kIEkgbGlrZSB0byBrZWVwIG15IHBsYWNlIGNvbWZvcnRhYmxlLi4gClRoZSBlYXNpZXN0IGZpeCBmb3IgaXQgd291bGQgaGF2ZSBiZWVuIGhhdmluZyB0aGUgYmlnIGRlc3RydWN0aXZlIGJhdHRsZSBhbmQgdGhlIGtpbGxpbmcgb2YgYSBrcnlwdG9uaWFuIGluIHRoZSBzZWNvbmQgYWN0IGZpZ2h0IHNjZW5lIGFuZCBTdXBlcm1hbiB3YW50aW5nIHRvIHRyeSBhbmQgcHJldmVudCBkYW1hZ2UgYW5kIHNhdmluZyB0aGUgc29sZGllcnMgaW4gdGhlIGZpbmFsIGZpZ2h0LiBJdCB0aWVzIGluIGJldHRlciB3aXRoIHRoZSB3aWRlciByYW5naW5nIHBsb3QgKHN0b3BwaW5nIGRlc3RydWN0aW9uIHZpYSB0aGUgd29ybGQgZW5naW5lKSwgZ2l2ZXMgaGltIGEgY2xlYXJlciBhcmMgKHRoZSBsaW1pdGF0aW9uIGFuZCB1c2FnZSBvZiBoaXMgcG93ZXIsIGNvbXBhcmVkIHRvIFpvZCBkaXNyZWdhcmRpbmcgdXNlIG9mIHBvd2VyKSBhbmQgYmxlbmRzIGZhciBtb3JlIG5hdHVyYWxseSB3aXRoIHRoZSBwdWxsIGJldHdlZW4gSm9yIEVsIGFuZCBKb2huYXRob24gS2VudCwgd2l0aCBDbGFyayBibGVuZGluZyBhbmQgZW5jb21wYXNzaW5nIGJvdGggb2YgdGhlaXIgd29ybGR2aWV3cyBpbnRvIGhpcyBvd24gcGVyc29uYWwgcGhpbG9zb3BoeS4gCkkgZm91bmQgaXQgaGVscGZ1bCB3aXRoIGFueSBleGVyY2lzZSB0byBkbyBpdCBhdCBsZWFzdCB0aHJlZSB0aW1lcyBiZWZvcmUgbW92aW5nIG9uIGFuZCB0aW1pbmcgeW91cnNlbGYuIFRoZSBuYW1lIG9mIHRoZSBnYW1lIGlzIHNwZWVkIGFzIGEgZHJhZnRzbWFuIChidXQgd2l0aG91dCBhY2N1cmFjeSwgc3BlZWQgaXMgcG9pbnRsZXNzKS4uIApZZWFycyBsYXRlciwgSSdtIGdsYWQgd2UgZ290IHRvIGxlYW4gb24gZWFjaCBvdGhlciBpbiB0aGUgbW9udGhzIGJlZm9yZSB0aGUgYmFieSB3YXMgYm9ybi4gSSBnb3QgdG8gaGVscCBwdXQgdG9nZXRoZXIgdGhlIG51cnNlcnksIG1lZXQgdGhlIGV4dGVuZGVkIGZhbWlseSBtZW1iZXJzIGFuZCBzaXQgZG93biBkYWlseSB3aXRoIHRoZSB3b21hbiB3aG8gd291bGQgcHJvdGVjdCBteSBjaGlsZCBhcyBoZXIgb3duLiBJIGdvdCB0byBjZWxlYnJhdGUgdGhpcyBuZXcgbGlmZSBhbmQgc3RhcnQgbXkgb3duIG5lY2Vzc2FyeSBoZWFsaW5nLgpIb3VyIC4kODUKVGhlIDY2NktLIGhhbmQgd291bGQgYmUgYmV0dGVyLiAKVGhleSBjb3VsZCBzd2l0Y2ggaXQgdXAgdGhvdWdoLiBVbmxlc3MgeW91ciBkYXRlIGlzIHRoZSBmaXJzdCBzaG93LCBwZW9wbGUgd2lsbCBiZSBwb3N0aW5nIHNldGxpc3RzIG9uY2UgdGhlIHRvdXIgc3RhcnRzIHNvIHlvdSdsbCBrbm93IGZvciBzdXJlIHRoZW4uIEFsc28gbWFrZSBzdXJlIGhlciBwaG9uZSBpcyBmdWxseSBjaGFyZ2VkIGJlZm9yZSB0aGUgc2hvdy4gClRoaXMgb25lIGlzIGV4Y2VsbGVudC4gCkkgY2FuIHNlbmQgYSBzZWN1cmUgbWVzc2FnZSB0byBteSBkb2N0b3Igd2hvIHdpbGwgc2VuZCBpdCBvdmVyIHdpdGhvdXQgYW4gYXBwb2ludG1lbnQgYmVjYXVzZSBoZSBrbm93cyBvZiB0aGUgYWxsZXJneS4gCkF1c3N0ZWxsdW5nZW4gYW4gdW5nZXdobmxpY2hlbiBPcnRlbiBlcmZmbmVuIGRlbSBLbnN0bGVyIG5ldWUgTWdsaWNoa2VpdGVuLCBzZWluZSBXZXJrZSBlaW5lbSBicmVpdGVyZW4gUHVibGlrdW0genVnbmdsaWNoIHp1IG1hY2hlbiB1bmQgc2llIHNvbWl0IGF1Y2ggYmVyIGRpZSBJbnNlbCBoaW5hdXMgYmVrYW5udCB6dSBtYWNoZW4sIGRhenUgbnV0enQgZXIgaW4gbGV0enRlciBaZWl0IGF1Y2ggdmVyc3Rya3QgZGllIGVsZWt0cm9uaXNjaGVuIHNvemlhbGVuIE5ldHp3ZXJrZS4uIApWZXJ5IGZldyBvZiB0aGUgZG90cyB5b3Ugc2VlIG9uIHRoYXQgaW1hZ2UgKHRoZSBicmlnaHRlc3QsIGxhcmdlc3QsIGFuZCBtb3N0IGluZGlzdGluY3Qgb25lcykgYXJlIGFjdHVhbCBzdGFycy4gRXZlcnl0aGluZyBlbHNlIGlzIGEgZ2FsYXh5LiAKSWYgeW91IGxpa2Ugd2hhdCB5b3Ugc2VlLCB5b3UgY2FuIHVwZ3JhZGUgYW5kIG9idGFpbiBmdWxsIGFjY2VzcyBpbW1lZGlhdGVseSEgSW4gMjAxMCwgbmVhcmx5IG9mIGEgcXVhcnRlciBvZiBhbGwgYmxhY2sgbWVuIG1hcnJpZWQgb3V0c2lkZSBvZiB0aGVpciByYWNlLCBhY2NvcmRpbmcgdG8gdGhlLiAKQXQgbGVhc3QgZm91ciBjYW1lcmFzIHdlcmUgYWxsZWdlZGx5IHVzZWQgdG8gc3B5IG9uIHRoZSBwYXJsb3IncyB3b3JrZXJzIGFuZCBjbGllbnRzIGJldHdlZW4gSmFuLiAxNyBhbmQgMjIuCldlIGhhZCB0byBtYWtlIGEgbG90IG9mIGFkanVzdG1lbnRzIGluIHRoZSBmaXJzdCB5ZWFyLiAKVGhlIEJveWQgR2FtaW5nIENvcnBvcmF0aW9uIGFsc28gaGFzIHRoZSBPcmxlYW5zIEhvdGVsIHdoZXJlIE1hcmRpIEdyYXMgaXMgY2VsZWJyYXRlZCBldmVyeSBkYXkgb2YgdGhlIHllYXIuIFRoZSBmdW4gY2FzaW5vIG9mZmVycyBhIHNwYWNpb3VzIGdhbWluZyBmbG9vciBhbmQgbW9yZSB0aGFuIDMsMDAwIHNsb3QgbWFjaGluZXMuIFNoZSBoYXMgYSBCRkEgaW4gd3JpdGluZyBmcm9tIHRoZSBTY2hvb2wgb2YgVmlzdWFsIEFydHMuIApBIE5ldyBKZXJzZXkgbWFuIHdobyBhbHJlYWR5IGZlbHQgbGlrZSBoZSdkIGhpdCB0aGUgamFja3BvdCB1cG9uIGZpbmRpbmcgb3V0IGhpcyB3aWZlIHdhcyBjYW5jZXIgZnJlZSwgd29uICQxIG1pbGxpb24gdGhlIHZlcnkgbmV4dCBkYXkuQWNjb3JkaW5nIHRvIGEgRmFjZWJvb2sgcG9zdCBieSB0aGUgQm9yZ2F0YSBDYXNpbm8gaW4gQXRsYW50aWMgQ2l0eSwgODUgeWVhciBvbGQgSGFyb2xkIE1jRG93ZWxsIGhpdCBhIDYgY2FyZCBSb3lhbCBTdHJhaWdodCBGbHVzaCBvZiBEaWFtb25kcyBhZnRlciBwbGFjaW5nIGEgc21hbGwgYmV0IG9mICQ1LlRoZSBDYXNpbm8gd2VudCBvbiB0byBzYXkgdGhhdCB0aGUgb2RkcyBvZiBoaXR0aW5nIGEgNiBjYXJkIEJvbnVzIFJveWFsIEZsdXNoIGFyZSBqdXN0IDEgaW4gMjAsMzQ4LDMyMCAgIG1ha2luZyBNY0Rvd2VsbCBhIHZlcnkgbHVja3kgbWFuTWNEb3dlbGwgd2FzIHNpdHRpbmcgbmV4dCB0byBoaXMgd2lmZSBhdCB0aGUgcG9rZXIgdGFibGUgd2hlbiBoZSBiZXQgY2FzaCBvbiBhIFNpeCBDYXJkIEJvbnVzIGluIFRocmVlIENhcmQgUG9rZXIsIGhlIHNhaWQuJ0kgaGFwcGVuZWQgdG8gYmUgcGxheWluZyBuZXh0IHRvIG15IHdpZmUuIEkgaGFkIG15IGJhY2sgdG8gaGVyLiAKQSBmZXcgZ3V5cyB3ZW50IG91dCwgbXkgaHVzYmFuZCBpbmNsdWRlZC4gClNoZSBhY3RlZCBhcyB0aG91Z2ggc2hlIGRpZG4ga25vdyB0aGUgdGVybS4gRGlkIHNoZSBrbm93IHRoZSB0ZXJtPyBEb2VzbiBtYXR0ZXIuIElmIHNoZSBhY3RlZCBsaWtlIHNoZSBrbmV3IHRoZSB0ZXJtIGFuZCB0aGVuIHRoZSBjcmVlcCBhc2tlZCBoZXIgdGhlbiB5b3UgbWlnaHQgaGF2ZSBhbiBhcmd1bWVudCwgYnV0IHRoYXQgbm90IHdoYXQgaGFwcGVuZWQgYW5kIHlvdXIgc3BlY3VsYXRpb24gaXNuIHRydXRoIHdoZW4gdGhlIGV2aWRlbmNlIHN1Z2dlc3RzIGFueXRoaW5nIGJ1dC4uIApMaXRoZ293Y2x1YnMgYW5kIGhvdGVscyB3ZXJlIHRoZSBmb3VydGggbW9zdCBwcm9maXRhYmxlIGZyb20gZ2FtYmxpbmcuIAoiS2VlcCBzb21lb25lIG91dCwgIiBzaGUgcmVwbGllZC4gU2hlIHRoZW4gcG9pbnRlZCBhdCBhIHNlY29uZCBidW5nZWUgY29yZC4gIkFuZCBJIHNhaWQsICdDb3VsZCB5b3UgZXhwbGFpbiB0aGF0PycgQW5kIGhlIHNhaWQsICdXZWxsLCBpdCdzIGZvciBhIHF1aWNrIGdldGF3YXkuJyBPdXQgdGhlIHdpbmRvdy4gIiAiQW5kIHlvdSdyZSB0aGlua2luZyB3aGF0IHRvIHlvdXJzZWxmIGF0IHRoYXQgcG9pbnQ/IEknbSBiYXJyaWNhZGVkIGluIGEgcm9vbSB3aXRoIGEgZ3V5IHdpdGggYSBidW5nZWUgY29yZCB3aG9zZSBuYW1lIHdhcyBCaWxsLCBidXQgbm93IGl0J3MgRXJuaWU/ICIgIkl0IHN0aWxsIGRpZG4ndCBnbyBvZmYsICIgdGhlIHdvbWFuIHRvbGQgVmFuIFNhbnQuIApIZSBpcyBub3QgYmVpbmcgZGV2ZWxvcGVkIHByb3Blcmx5IGR1ZSB0byBvdXIgZGlzYXN0ZXIgb2YgYSBjb2FjaGluZyBzaXR1YXRpb24uIEhlIHdpbGwgZGVmaW5pdGVseSB3YW50IHRvIGJlIG91dCBvZiB0aGUgQnVsbHMgaW4gYWJvdXQgdHdvIG1vcmUgc2Vhc29ucyBvciBsZXNzLiAKSSBiZWVuIHNsb3dseSBnb2luZyB0aHJvdWdoIHRoZW0gb3ZlciB0aGUgeWVhcnMgYW5kIGhvcGVmdWxseSB3aWxsIGNvbXBsZXRlIHRoZW0gYWxsIG9uZSBkYXkuLiAKTWljaGFlbCBGaXR6cGF0cmljayB0aGUgbGF0ZXN0IHRvIHJlY2VpdmUgS2Vsc28gSGlnaCBhd2FyZApGb3ggaXMgcGxlYXNlZCB3aXRoIHRoZSB3YXkgdGhhdCBDb2hlbiB3YXMgZGlzY3JlZGl0ZWQgYnkgdGhlIFJlcHVibGljYW5zIG9uIHRoZSBjb21taXR0ZWUuSSBhbSBub3Qgc2VlaW5nIHRoaXMgY2F0Y2ggZmlyZSB0aGUgd2F5IHdlIG1pZ2h0IGhhdmUgaG9wZWQuIApUaGUgbGF0ZSBsZWFkZXIgb2YgdGhhdCBtb2IgaW4gdGhlIFVuaXRlZCBTdGF0ZXMsIFZ5YWNoZXNsYXYgS2lyaWxsb3ZpY2ggSXZhbmtvdiwgd2FzIGxpdmluZyBhdCBUcnVtcCBUb3dlci4uIApHZWJlbiBTaWUgSWhyZSBNZWludW5nIHp1IGRpZXNlciBQb2tlciBIYW5kIGJpdHRlIGFscyBLb21tZW50YXIgenUgZGllc2VtIEJsb2dlaW50cmFnIGVpbi4gRGllIEF1ZmxzdW5nIGZvbGd0IGluIGVpbmVyIFdvY2hlLCB3ZW5uIGRpZSBuY2hzdGUgUG9rZXJoYW5kIGRlciBXb2NoZSB2b3JnZXN0ZWxsdCB3aXJkLiBVbnRlcnN0ZWxsZW4gd2lyIGVpbmVuIGZyIGVpbmVuIFNwaWVsZXIgaW4gZGVyIFBvc2l0aW9uLCBkaWUgU3BpZWxlcjMgaW5uZWhhdCwgZGFzIHdyZSBic3B3LiAKRXRjLi4gCkFzdHJvbm9tZXJzIGFyZSBiZWFtaW5nIG91dCBhbGwgb3VyIGFzdHJvbm9taWNhbCBkYXRhIHRvIGdhbGF4aWVzIHdlbGwgb3V0c2lkZSBvdXIgbG9jYWwgY2x1c3RlciBhbmQgaG9wZSB0byByZWNlaXZlIHRoZSBzYW1lIGluZm9ybWF0aW9uIGZyb20gZGlzdGFudCBnYWxheGllcyBhcyB3ZWxsLCBpZGVhbGx5IHRob3NlIGluIHRoZSByYW5nZSBvZiBiaWxsaW9ucyBvZiBsaWdodCB5ZWFycyBhd2F5LiAKVGhlIHJvbGxvdmVyIGlzIHByb2JhYmx5IG9uIEJldE9ubGluZSwgaXQgYSBib251cyB5b3UgZGVsaWJlcmF0ZWx5IGVudGVyIHlvdXJzZWxmLiBJIG1hZGUgdGhlIHNhbWUgbWlzdGFrZSBhbmQgY29udGFjdGVkIHRoZWlyIHN1cHBvcnQgYW5kIHRoZXkgd2VyZSBTVVBFUiBoZWxwZnVsIGFuZCBldmVuIGNvbnRhY3RlZCB0aGVpciBzdXBlcmlvcnMgcmVzdWx0aW5nIGluIHRoZW0gcmVtb3ZpbmcgdGhlIGJvbnVzIGVhcmx5IHNvIEkgZGlkbiBoYXZlIHRvIHdhaXQgMzAgZGF5cyB0byB3aXRoZHJhdy4gT3V0IG9mIGNvdXJ0ZXN5LiAKQSBzdWl0IGhhcyBubyB2YWx1ZSBpbiBwb2tlciAoQ2x1YnMsIERpYW1vbmRzLCBTcGFkZXMgSGVhcnRzKS4gRm9yIGluc3RhbmNlIGEgZmx1c2ggb2YgSGVhcnRzIGhhcyB0aGUgc2FtZSB2YWx1ZSBhcyB0aGUgc2FtZSBmbHVzaCBpbiBTcGFkZXMuIFRoZSBzdHJlbmd0aCBvZiBhIHBva2VyIGhhbmQgKDUgY2FyZCBjb21iaW5hdGlvbiBpbiBtb3N0IGdhbWVzKSBkZXBlbmRzIG9uIHRoZSBoaWdoZXN0IHBvc3NpYmxlIGNvbWJpbmF0aW9uLiBIb3dldmVyLCBzbWFsbCBpc3N1ZXMgKHN1Y2ggYXMgZGVjaWRpbmcgd2hvIGRlYWxzIGZpcnN0KSBhcmUgc29tZXRpbWVzIHJlc29sdmVkIGJ5IGRlYWxpbmcgb25lIGNhcmQgdG8gZWFjaCBwbGF5ZXIuIElmIHR3byBwbGF5ZXJzIGRyYXcgY2FyZHMgb2YgdGhlIHNhbWUgcmFuaywgb25lIHdheSB0byBicmVhayB0aGUgdGllIGlzIHRvIHVzZSBhbiBhcmJpdHJhcnkgaGllcmFyY2h5IG9mIHN1aXRzLiBUaGlzIGRlcGVuZHMgb24gdGhlICJob3VzZSBydWxlcyIgb2YgdGhlIGVzdGFibGlzaG1lbnQgeW91IGFyZSBwbGF5aW5nIGF0LiAoRnVsbCBBbnN3ZXIpCkFmdGVyIGhhdmluZyBsdW5jaCBhdCBuZWFyYnkgTWF0c3VoaXNhLgpJIGp1c3Qgd2FudGVkIHRvIGxldCBldmVyeW9uZSBrbm93IGhvdyBtdWNoIGhhcHBpbmVzcyB0aGVyZSBpcyBpbiBnaXZpbmcuIApSZXN0IGluIHBlYWNlIEpvbmF0aGFuLCB0aGUgcHVyZXN0IEpvam8gb2YgdGhlbSBhbGwsIGJ1dCBrbm93IExpbmcgc2hhbGwgYXZlbmdlIHlvdSBuZXh0IHJvdW5kLlRoYXQgYWxsIGZvciBtZSwgdm90ZSB5b3VyIGZhdnMhTUM6IDIwMDcgd2FzIG9yaWdpbmFsbHkgbXkgYW5zd2VyLCBidXQgaXQgdHVybnMgb3V0IENvZGUgR2Vhc3MgYW5kIERlYXRoIE5vdGUgd2VyZSBhY3R1YWxseSAwNiwgc28gMjAwNiByZWFsbHkuIApBIHByb3BvcyBkdSBXaWtpLCBzaSBsZXMgcHJvYmxtZXMgZXNzZW50aWVscyBvbnQgdCByc29sdXMgKGltYWdlcyBlbiBwYXJ0aWN1bGllcikgamUgc3VpcyB0b3Vqb3VycyAgbGEgcmVjaGVyY2hlIGQndW4gb3UgcGx1c2lldXJzIHNwY2lhbGlzdGVzIGNhciBpbCByZXN0ZSBkZXMgcmdsYWdlIGRlIGR0YWlscyAgZWZmZWN0dWVyLiBPciBsYSBkb2N1bWVudGF0aW9uIGV4aXN0YW50ZSBlc3QgcGFydGljdWxpcmVtZW50IGhlcm10aXF1ZSwgbW1lIHBvdXIgcXVlbHF1J3VuIHF1aSBhICBzb24gYWN0aWYgMzMgYW5zIGRlIHByYXRpcXVlIGRlIGxhIG1pY3JvIGluZm9ybWF0aXF1ZS4uIApVbml2ZXJzaXR5IGZvciBjbGluaWNhbCBwc3ljaG9sb2d5IiBhbmQgc3BlY2lmaWMgcG9zdHMgaGVscCB0YWlsb3IgcmVzcG9uc2VzLkluIHNob3J0LCBJIGVudmlzaW9uZWQgcG9zdHMgd2hlcmUgdGhlIHVuZGVybHlpbmcgdGhlbWUgaXMgImkgd2FudCB0byBkbyBhIHNwZWNpZmljIHRoaW5nLCBoZWxwIG1lIHRvIGxlYXJuIHRvIGRvIHRoZSB0aGluZyBpbiB0aGUgYmVzdCB3YXkgcG9zc2libGUuIldoYXQgSSBkaWRuIHdhbnQsIGFuZCB3aGF0IGNhbWUgdXAgYSBmZXcgdGltZXMgd2hlbiBJIHdhcyBzdGlsbCBhbiBhY3RpdmUgbW9kLCB3YXMgcGVvcGxlIHBvc3RpbmcsIHVucHJvbXB0ZWQgYXMgYSBzdWJtaXNzaW9uIHJhdGhlciB0aGFuIGEgY29tbWVudCwgImhlcmUgYSBndWlkZSB0byBkbyBYLiIgVGhhdCBzb3J0IG9mIHBvc3QgbXVkZGllcyB0aGUgd2F0ZXJzIGFuZCBlbmRzIHVwIGxlYXZpbmcgSVdUTCBhcyBhIGR1bXBpbmcgZ3JvdW5kIGZvciBwZW9wbGUgdG8gcG9zdCByYW5kb20gYW5kIGluYW5lIHRoaW5ncy5BbGwgdGhhdCBzYWlkLCB0aGlzIHJlYWxseSBpcyB5b3VyIHN1YnJlZGRpdCBub3cuIApUaGVyZSBhcmUgYWxzbyB0aGluZ3MganVzdCBhYm91dCBteXNlbGYgdGhhdCBJIGRvbiB0aGluayBteSBwYXJ0bmVyIG9mIDUgeWVhcnMgcmVhbGx5IG5lZWRzIHRvIGtub3cgYWJvdXQuIE15IGJlc3QgZnJpZW5kIG1pZ2h0IHRoaW5rIGl0IGZ1bm55IHRvIGhlYXIgdGhhdCBJIHBvb3BlZCA1IHRpbWVzIGJlZm9yZSBsdW5jaCBhbmQgYWxsIG9mIHRoZW0gYnVybmVkIGJlY2F1c2UgSSBhc2tlZCBmb3IgZG91YmxlIGphbGFwZW5vcyBvbiBteSBidXJnZXIuIEJ1dCBteSBib3lmIHByb2JhYmx5IHN0aWxsIHdhbnRzIHRvIGdldCBhIGJvbmVyIHdoZW4gSSB3ZWFyIGEgbGFjZSB0aG9uZyByYXRoZXIgdGhhbiBwb25kZXJpbmcgb3ZlciBteSBtaWQgZGF5IG11ZGJ1dHQuLiAKUHJldGVuZGluZyB0byBiZSBldmlsIGlzIHdoYXQgcHV0IG1lIG9uIHRoZSBtYXAuIEJ1dCBpdCdzIHRoZSBsZXNzb25zIEkgbGVhcm5lZCB3aGlsZSBwbGF5aW5nIHRoYXQgY2hhcmFjdGVyIHRoYXQgaGF2ZSBwcm92aWRlZCBtZSB3aXRoIGEgcGF0aCBmb3J3YXJkLiBUaGlzIEkga25vdzogWW91IG5lZWQgdG8gZ2V0IGluIHRoZSByaW5nIGFuZCB0YWtlIHlvdXIgYnVtcHMuIApUaGV5IHdvdWxkbiBhY2NlcHQgbXkgbGlmZXN0eWxlIG9mIGJlaW5nIGEgbW9kaWZpZWQgdGF0dG9vIGFydGlzdC4gCkluIG90aGVyIHdvcmRzLCBpbiAicmVhbCBsaWZlIiBJJ20gZmFyIGZyb20gdGhlIGNoYXJhY3RlciBJIHBsYXkgb24gVFYuIApBZnRlciB0aGVscmVkJ3MgZGVhdGgsIGFuZCBhZnRlciBuZWFybHkgMzYgeWVhcnMgb2YgcmFpZGluZywgRW5nbGFuZCB3YXMgc2V2ZXJlbHkgd2Vha2VuZWQuIEhvd2V2ZXIsIHRoZXJlIGlzIGV2aWRlbmNlIHRoYXQgc3VnZ2VzdHMgdGhhdCBFbmdsYW5kIGNvdWxkIGhhdmUgYmVlbiBhIGxvdCBzdHJvbmdlci4gRWRtdW5kIElyb25zaWRlcywgdGhlbHJlZCdzIHNvbiwgb3Blbmx5IGZvdWdodCB0aGUgVmlraW5nIGZvcmNlcyBvZiBDbnV0IGVmZmVjdGl2ZWx5IGZvciB0aGUgZmlyc3QgdGltZS4gCkdpYW50czExNTU1NSAgMSBwb2ludCAgc3VibWl0dGVkIDEgeWVhciBhZ28KRHVyYW50IGwgZ3JjbyByb21haW5lLCBkIHBvaW50IGRlIHZ1ZSBtZGljaW5hbCwgaWwgZXN0IHN1cnRvdXQgcnB1dCBwb3VyIGFwYWlzZXIgdGFudCBsIHF1ZSBsYSBkb3VsZXVyLCBjZSBxdWUgbmUgbWFucXVlIHBhcyBkZSByZW1hcnF1ZXIgRGlvc2NvcmlkZSBxdWkgdXNlIGR1IGNoYW52cmUgY29tbWUgYW5lc3Roc2lhbnQsIHByY2lzYW50IHBhciBsYSBtbWUgb2NjYXNpb24gcXUgcGV1dCAgZmFpcmUgcGFyYXRyZSBkZXZhbnQgbGVzIHlldXggZGVzIGZhbnRtZXMgZXQgaWxsdXNpb25zIHBsYWlzYW50ZXMgZXQgYWdyYWJsZXMgLCB0YW5kaXMgcXVlIEdhbGllbiBtZXQgZGF2YW50YWdlIGVuIGF2YW50IHNlcyBlZmZldHMgZXVwaG9yaXNhbnRzIDogIG9uIGVuIGRvbm5haXQgaGFiaXR1ZWxsZW1lbnQgYXV4IGNvbnZpdmVzIGRlcyBiYW5xdWV0cyBwb3VyIGxlcyBtZXR0cmUgIGwgZXQgbGVzIHJlbmRyZSBqb3lldXggLiBDZWNpIGRpdCwgaWwgbWV0IGVuIGdhcmRlIGV0IHJlY29tbWFuZGUgZGUgbiBwb2ludCB0cm9wIHVzZXIgYXUgcmlzcXVlIGRlIGRyYW5nZXIgbGVzIGVzcHJpdHMuIApBbmQgd2hlbiBzb21lIGZhbnMgcXVlc3Rpb25lZCB3aHkgS2hsb2Ugd2FzIGF3YXkgZnJvbSBoZXIgYmFieSwgdGhlIGJ1c2luZXNzd29tYW4gcmVzcG9uZGVkIG9uIFR3aXR0ZXIuIApEb24ndCBsZWF2ZSBpdCBhdCB0aGF0LiAKVGhlcmUgaXMgdG9vIG11Y2ggdmFyaWFuY2UgaW4gcG9rZXIgdG8gZ3VhcmFudGVlIGEgd2luLiAKQWx0ZXJuYXRpdmVseSwganVzdCBrZWVwIHdvcmtpbmcgb24gaXQgdW50aWwgeW91J3JlIGRvbmUsIHRoZW4gc3VibWl0IGl0IHRvIFBlZXIgUmV2aWV3LlN1Ym1pdHRpbmcgYW4gRW50cnkgdG8gUGVlciBSZXZpZXcgQmVmb3JlIHN1Ym1pdHRpbmcgYW4gRW50cnksIG1ha2Ugc3VyZSBpdCBmdWxmaWxzIHRoZSBhYm92ZSByZXF1aXJlbWVudHMuIFRvIHB1dCBhbiBlbnRyeSBpbnRvIFBlZXIgUmV2aWV3LCBjbGljayBvbiB0aGUgU1VCTUlUIEZPUiBSRVZJRVcgbGluayB0byB0aGUgcmlnaHQgaGFuZCBjb2x1bW4gb2YgdGhlIEVudHJ5IGFuZCBmb2xsb3cgdGhlIGluc3RydWN0aW9ucywgY2hvb3NpbmcgJ1BlZXIgUmV2aWV3JyBmcm9tIHRoZSBkcm9wIGRvd24gbWVudS4gCklmIHRoZSBqb2JzIGRhdGEgd2Vha2VuIGNvdWxkIGhlIGFkZCB0aGUgbmVlZCBmb3IgZnVydGhlciBzdGltdWx1cyB0byB0aGF0IGxpc3QuIGhhcyBhbHJlYWR5IGJlZW4gc29tZSBidXp6IGFyb3VuZCB3aGF0IHNvcnQgb2YgbWVhc3VyZXMsIGlmIGFueSwgdGhlIGZlZGVyYWwgTGliZXJhbCBnb3Zlcm5tZW50IGNvdWxkIGhhdmUgdXAgaXRzIHNsZWV2ZSBvbiBNYXJjaCAxOS4KSW4gdGhlIGNhc2Ugb2YgU05DLCBoZSBzdWdnZXN0ZWQsIHRoZSBidXNpbmVzcyBjb3VsZCBiZSBsZWZ0IGluIG9uZSBqdXJpc2RpY3Rpb24sIHdpdGggdGhlIGJ1c2luZXNzIG1vdmVkIHRvIGFub3RoZXIsIGZyaWVuZGxpZXIgb25lLiAKSW4gQmVyc2VyaywgYm90aCBhbmltZSBzZWFzb25zIGxlZnQgYmVoaW5kIGEgbG90IG9mIGltcG9ydGFudCBzdHVmZiBzbyByZWFkIHRoZSBtYW5nYSBmcm9tIHRoZSBzdGFydCBpcyBuZWNlc2FyeSB0byBmb2xsb3cgdGhlIHN0b3J5LiBUaGF0IHdoeSBJIHNhaWQgdGhhdCBCZXJzZXJrIGlzIG9ubHkgYSBtYW5nYS4uIApQbGFjZW1lbnQgaXMgY3JpdGljYWxseSBpbXBvcnRhbnQsIHRvby4gCldhbGtlci9HbG9iZSBTdGFmZiAgIFJlYWQgdGhlIFN0b3J5ICAgKDMzIHBob3RvcyB0b3RhbCkuIApNYWtpbmcgdGhlIGFubnVhbCBkb25hdGlvbnMgaXQgcHJvbWlzZWQgdG8gY2hhcml0aWVzIHN1Y2ggYXMgdGhlIFN0YXJsaWdodCBGb3VuZGF0aW9uLCBDbG93biBEb2N0b3JzIGFuZCBpbmRpdmlkdWFsIGNoaWxkcmVuIGluIG5lZWQgaGFkIG1lYW50IHJhaWRpbmcgdGhlIGZvdW5kYXRpb24gY2FzaCByZXNlcnZlcywgcHV0dGluZyBpdHMgZnV0dXJlIGZpbmFuY2lhbCBoZWFsdGggaW4gamVvcGFyZHkuIFRoZSBwcm9ibGVtIGhhZCBzdGVhZGlseSB3b3JzZW5lZCBzaW5jZSAyMDExIHVuZGVyIHRoZSBsYXN0IHRocmVlIGNoaWVmIGV4ZWN1dGl2ZXMgYXBwb2ludGVkIGJ5IFdhcm5lICAgaGlzIGJyb3RoZXIgSmFzb24sIENyb3duIENhc2lubyBwb2tlciBleGVjdXRpdmUgYW5kIG1hdGUgSm9ubm8gUGl0dG9jaywgYW5kIGZvcm1lciBNZWxib3VybmUgU3Rvcm0gY29tbXVuaXR5IHJlbGF0aW9ucyBtYW5hZ2VyIFN0YWNpZSBDaGlsZHMsIENoaWxkcyBoYWQgcmVjZW50bHkgcXVpdCBhcyBDRU8uIApBbmQgeW91IHdyb25nLnNvY2lhbGlzbSBpcyB0aGUgcHJvYmxlbSwgYXMgaSBhbHJlYWR5IGV4cGxhaW5lZCBob3cgdGhleSBzY3Jld2VkIG11bHRpcGxlIHNlY3RvcnMuIApBZ3JlZWQgYnV0IHRoZSBwcm9ibGVtIGlzLCBhcHBhcmVudGx5LCB0aGF0IGlmIHlvdSBkbyBpbmRpY3QgaGltIGFuZCBoaXMgbWFudWZhY3R1cmVkIHN1cHJlbWUgY291cnRzIHNpZGUgd2l0aCBoaW0sIGl0IG1ha2VzIHRoZSBkZW1vY3JhdHMgbG9vayBzdHVwaWQgYW5kIHRha2VzIHRoZSBiaXRlIG91dCBvZiBhbGwgdGhlIGludmVzdGlnYXRpb25zIGFuZCBldmVyeXRoaW5nLiAKVGhleSdyZSBub3Qgd29ya2luZyBmb3IgTEdCVCBvcmdhbml6YXRpb25zLCB0aGV5J3JlIG5vdCBoZWxwaW5nIHRvIHJhaXNlIGF3YXJlbmVzcyBvciBzZWVrIGRvbmF0aW9ucyBmb3IgYW55IGtpbmQgb2YgY2hhcml0eSwgdGhleSBhcmVuJ3QgcGVyZm9ybWluZyBvciBzcGVha2luZyBpbiBwdWJsaWMgb3IgaGVscGluZyBvcmdhbml6ZSBpdCBpbiBzb21lIHdheSwgZXRjLiAKTWFudWxpZmUgRmluYW5jaWFsIENvcnAuIHBsYW5zIHRvIG1vcmUgdGhhbiBkb3VibGUgYXNzZXRzIGluIGl0cyB3ZWFsdGggdW5pdCBhbmQgaGlyZSBmaXZlIG5ldyBwb3J0Zm9saW8gbWFuYWdlcnMgYXMgaXQgdGFyZ2V0cyB0aGUgZ3Jvd2luZyBidXNpbmVzcyBvZiBDYW5hZGEgcmljaC4gaW4gb2ZmZXJpbmcgZmluYW5jaWFsIHNlcnZpY2VzIHRvIHRoZSB3ZWFsdGh5IHVuZGVyIG9uZSB1bWJyZWxsYSBmcm9tIGludmVzdG1lbnQgbWFuYWdlbWVudCB0byB0YXggcGxhbm5pbmcgYW5kIHRoZSBpbmR1c3RyeSBpcyByaXBlIGZvciBncm93dGggYW5kIGNvbnNvbGlkYXRpb24sIHNhaWQgR2xlbiBCcm93biwgaGVhZCBvZiBNYW51bGlmZSBQcml2YXRlIFdlYWx0aC4KV2hlbiB0aG9zZSB6aXRzIHdlbnQgYXdheSB0aGV5IGxlZnQgYmVoaW5kIHRoZXNlIGJ1bXBzIGFuZCBJIGhhdmUganVzdCBsZWFybmVkIHRoZXkncmUgY2FsbGVkIGNsb3NlZCBjb21lZG9uZXMuIAoiSXMgdGhpcyB0aGUgc3BvdCB5b3Ugd2VyZSB0YWxraW5nIGFib3V0PyBIb3cgaXQgZmVlbCBub3c/IEhvdyBpdCBmZWVsIHdoZW4gSSBkbyB0aGlzPyBXaGF0IGlmIHlvdSBtb3ZlZCBsaWtlIHRoYXQ/IEhleSwgd2hlbiBkbyB5b3Ugbm90aWNlIHRoaXMgc3BvdD8gSG93IGRvZXMgaXQgY29tcGFyZSB0byB0aGUgb3RoZXIgc2lkZT8iLiAKRm9yIGluc3RhbmNlLCBpZiB5b3UgaW5qdXJlZCBvbiB0aGUgam9iLCB0aGUgZmlyc3QgdGhpbmcgdGhleSBkbyBpcyB0dXJuIHRoZSBjbGFpbSBvdmVyIHRvIGEgcHJpdmF0ZSBjb21wYW55LiAKT3ZlcnZpZXcgZm9yIHNwZWN0cmVmYXgKWW91ciB1c2FibGUgY2FwYWNpdHkgZG9lc24gY2hhbmdlLCBiZWNhdXNlIHlvdXIgb3RoZXIgZGlza3MgYWxyZWFkeSBnYXZlIHVwIHRoZWlyIDEvTiBjYXBhY2l0eSBhdCBpbml0aWFsaXphdGlvbi4uIApUaGlzIHdvcmtlZCB3ZWxsIGZvciBhbGwgMTggd2Vla3Mgb2YgbXkgbWFyYXRob24gdHJhaW5pbmcgcGxhbi4gClNoYXJkc09mVGhlU3BoZXJlICAxIHBvaW50ICBzdWJtaXR0ZWQgMTIgZGF5cyBhZ28KVGhpcyB3YXMgdGhlIG1vc3QgZnVuIHdlIGhhZCBieSBmYXIgYW5kIHN1cnByaXNpbmdseSBlbm91Z2ggdGhlIGNvb2xlc3QgcHVyY2hhc2Ugd2UgbWFkZSB0aGF0IGp1c3QgcHV0IHRoZSBpY2luZyBvbiB0aGUgY2FrZSB3YXMgYSBTdWl0ZWQgQnJvbnplIFRleGFzIEhvbGRlbSBQb2tlciBUYWJsZSBDbG90aC4gClNvIGNsZWFybHkgcXVhbGl0eSBpbmRpZSBnYW1lcyBsaWtlIEEgSGF0IGluIFRpbWUgZG8gcGVyZmVjdGx5IHdlbGwgb24gU3RlYW0sIHdoaWxlIGFieXNtYWwgY2FzaCBpbiBmYWlsdXJlcyBsaWtlIEhEVEYgZW5kIHVwIGZsb3BwaW5nIGFuZCBkb24gYWZmZWN0IGFueSBvdGhlciBnYW1lcy4gSXQgdHJ1ZSB0aGF0IFZhbHZlIGNvdWxkIGJlIG1vcmUgcHJvYWN0aXZlIGluIHdvcmtpbmcgb24gU3RlYW0gZGlzY292ZXJhYmlsaXR5IHN5c3RlbXMgKG9yIHJldGhpbmtpbmcgU3RlYW0gRGlyZWN0KSwgYnV0IHRoZSBzaG92ZWx3YXJlIHNpdHVhdGlvbiBvbiBTdGVhbSBpcyBub3doZXJlIG5lYXIgYXMgYmFkIGFzIHNvbWUgcGVvcGxlIHRyeSB0byBtYWtlIGl0IHNlZW0uLiAKVGhlIExlZnQgKGFsb25nIHdpdGggbW9kZXJhdGVzKSBuZWVkcyB0byBydW4gYSBjYW5kaWRhdGUgdGhhdCBzdGFuZHMgdXAgZm9yIGF2ZXJhZ2UgcGVvcGxlLCBidXQgc29tZW9uZSB3aG8gaXMgc29tZXdoZXJlIGluIHRoZSBtaWRkbGUgb2YsIGNvbGxlY3RpdmVseSwgdGhlIG1vZGVyYXRlcyBhbmQgdGhlIExlZnQuCkhvdyB0byBSZXBhaXIgYSBCcm9rZW4gQmF0dGVyeSBUZXJtaW5hbCBQb3N0IG9uIGFuIEVsZWN0cmljIEdvbGYgQ2FydAoyMy4gClRoZSBzb3VuZHMgYW5kIHRoZSBhbWJpZW5jZSBzaG91bGQgYWxzbyBiZSBzdWJ0bGUgYnV0IHBsZWFzaW5nLiBNYWtlIHN1cmUgdGhlIGNvbG91ciBzY2hlbWUgaXMgYWxzbyBlYXN5IG9uIHRoZSBleWVzLiBHb29kIHBva2VyIHNpdGVzIGhhdmUgcmVsaWFibGUgc2VydmVycyB3aXRoIHF1aWNrIGRvd25sb2FkIHRpbWVzLgpIYXZlIHlvdSBvciBhbnlvbmUgb24gdGhpcyBzdWIgZXZlciBjb25zaWRlcmVkIGdldHRpbmcgbWVudGFsIGhlbHAuIEkgc2F5IHRoYXQgYmVjYXVzZSBldmlkZW5jZSBzZWVtcyB0byBiZSBvbmUgb2YgdGhvc2UgdGhpbmdzIHRoYXQncyBlbHVzaXZlIGluIHRoaXMgc3ViLiAKSW4gYSBwcmV2aW91cyBwaWVjZSB3ZSB1c2VkIHRoZSBHZXJtYW4gd29yZCBsZWJlbnNyYXVtLCBsaXRlcmFsbHkgImxpdmluZyBzcGFjZSwiIHRvIGNoYXJhY3Rlcml6ZSB0aGUgdW5pdmVyc2l0eSdzIGRlc2lyZXMuIEEgeW91bmdlciBjb3B5IGVkaXRvciB3YXNuJ3QgZmFtaWxpYXIgd2l0aCB0aGUgd29yZC4gClRoYXQgc2FpZCwgbXkgdGFrZSBvbiBpdCBpcyBzbWFsbCBwcm9ncmFtcyB0aGF0IGRvIG9uZSB0aGluZyB3ZWxsLiBJbiBteSBvd24gdXNlcywgaGF2aW5nIHN0YXRpY2FsbHkgbGlua2VkIGJpbmFyaWVzIEkgY2FuIGVhc2lseSBtb3ZlIGFueXdoZXJlIGFuZCByZWxpYWJseSBydW4gaGFzIGhlbHBlZCBmdWxmaWxsIHRoaXMgaW4gbXkgb3duIGNvZGUgbW9yZSB0aGFuIGFueSBvdGhlciBsYW5ndWFnZSBJIGhhdmUgd3JpdHRlbi4KSW4gdGVhbSBmaWdodHMgSSBoaWdobHkgdmFsdWUgcHV0dGluZyBvdXQgYXMgbXVjaCBzdXN0YWluZWQgZGFtYWdlIGFzIHBvc3NpYmxlIHdpdGhvdXQgZHlpbmcsIG1vc3RseSBzdGF5aW5nIGluIHRoZSBiYWNrbGluZSBhbmQgdXNpbmcgeW91ciBlK3BsYW50cyBhbmQgdWx0IHRvIHBlZWwgYW5kIHN0YXkgc2FmZSB3aGljaCBpcyB3aHkgSSBsaWtlIExpYW5kcnkgYW5kIFJ5bGFpIHRvZ2V0aGVyIHNvIG11Y2guCkEgQ3VyZSBmb3IgQmFsZG5lc3M/Ckkgc2F3IGl0IGFzIHBhdGhldGljLiBEaXNkYWluZnVsLiBTaGUgd2FzIGFuIGFkdWx0LiAKQkVUQSBWMS40LjAgTVVMVGk5IE9ORSBGVFAgTElOSyBUT1JSRU5ULiAKQW5kIHdpdGggcmVnYXJkcyB0byB0aGUgZmlyc3QgcXVlc3Rpb24sIHlvdSBjYW4gYWxzbyBnZXQgYmxhbmRmcnVpdC4gQnV0IHRocm91Z2ggYmxhbmRmcnVpdCBhbmQgc2VlZHMgeW91IGNhbiBnZXQgZXh0cmEgZm9vZCAoY29va2VkIGJsYW5kZnJ1aXQpIGFuZCBwb3Rpb25zLgpSZWxpZ2lvbiBpcyBhdCBsZWFzdCBtb3JlIG9mIGEgY2hvaWNlIHRoYW4gcmFjZSBpcy4gCkluIDIwNTAgYSB2YXN0IGludmFzaW9uIGZvcmNlIG9mIG1pbGxpb25zIG9mIEthbGthcnMgYW5kIFZhIEdhcyBsZWQgYnkgT3J0aGlzIGNhbWUgdG8gRWFydGggYW5kIGRlc3Ryb3llZCB0aGUgY2l0aWVzIG9mIFdhc2hpbmd0b24gYW5kIExvbmRvbi4gClNob3VsZCB5b3UgcGF5IGV4Y2Vzc2l2ZSBhbW91bnRzIGZvciB0aGlzIHdoZXkgdGhhdCBncmFzcyBmZWQgYW5kIGJsZXNzZWQgYnkgdGhlIERhbGFpIExhbWE/VGhlcmUgYSBudW1iZXIgb2YgaXNzdWVzIHRvIGFkZHJlc3MgcmVnYXJkaW5nIHRob3NlIGNsYWltcywgYnV0IGluIHRoaXMgd3JpdGUgdXAgSSBnb2luZyB0byBhZGRyZXNzIHRoZSBob3Jtb25lIGNsYWltcyBhbmQgYW50aWJpb3RpY3MgYXMgdGhhdCBzZWVtcyB0byBiZSBvZiBncmVhdGVzdCBjb25jZXJuIHRvIHBlb3BsZS5PbmUgcXVlc3Rpb24gdGhhdCBoYXMgcG9wcGVkIHVwIGEgZmV3IHRpbWVzIGluIG15IGVtYWlsIGJveCByZWxhdGVzIHRvIHRoZSBpc3N1ZSBvZiBob3Jtb25lcyBpbiB3aGV5IHByb3RlaW4gc3VwcGxlbWVudHMuQXJlIHRoZXJlIGhvcm1vbmVzIGluIHlvdXIgd2hleT8gSXQgbm90IGEgc2ltcGxlIG9yIGFuc3dlciBJIGFtIHNvcnJ5IHRvIHNheSwgYnV0IHRoZSBzaG9ydCBhbnN3ZXIgaXMsIHBlb3BsZSBoYXZlIG5vdGhpbmcgdG8gZmVhci5CZWluZyBhbiBhbmltYWwgYmFzZWQgcHJvZHVjdCBkZXJpdmVkIGZyb20gbWlsaywgd2hleSwgbGlrZSBhbnkgYW5pbWFsIGJhc2VkIHByb2R1Y3QsIGNvdWxkIHBvdGVudGlhbGx5IGNvbnRhaW4gc29tZSBuYXR1cmFsbHkgb2NjdXJyaW5nIGhvcm1vbmUocykuVGhlIGlzc3VlIGlzLCB3aGljaCBob3Jtb25lIGFuZCBpbiB3aGF0IGFtb3VudHM/TW9kZXJuIHRlc3RpbmcgYWJpbGl0aWVzIGJlaW5nIGFzIHNlbnNpdGl2ZSBhcyB0aGV5IGFyZSB0b2RheSwgYmVpbmcgYWJsZSB0byBzZWFyY2ggZm9yIHRoaW5ncyBpbiBwYXJ0cyBwZXIgbWlsbGlvbiAocHBtKSwgcGFydHMgcGVyIGJpbGxpb24gKHBwYikgb3IgZXZlbiBwYXJ0cyBwZXIgdHJpbGxpb24gKHBwdCkgaW4gc29tZSBjYXNlcywgc29tZSBob3Jtb25lIG9mIHNvbWUga2luZCBjYW4gYmUgZm91bmQgaW4gdmlydHVhbGx5IGFueXRoaW5nIHdlIGh1bWFucyBpbmdlc3QsIGVzcGVjaWFsbHkgaWYgaXQgaXMgZGVyaXZlZCBmcm9tIGFuIGFuaW1hbCBzb3VyY2UgKHRob3VnaCBwbGFudHMgYWxzbyBvZnRlbiBjb250YWluIHNvbWUgbmF0dXJhbGx5IG9jY3VycmluZyBob3Jtb25lcyBvciBob3Jtb25lIGxpa2UgY29tcG91bmRzKS5XaWxsIEJyaW5rIHdpbGwgYXR0ZW1wdCB0byBhZGRyZXNzIHRob3NlIGluIHBhcnRpY3VsYXIgdG8gY2xlYXIgdXAgYW55IGZlYXJzIG9yIGNvbmZ1c2lvbiBvdmVyIHRoZSBtYXR0ZXIuClNva29sb3cgYXJ0aXN0aWMgcmVhY3Rpb24gdG8gdGhlIEhvbG9jYXVzdCwgcmVtYWlucyBoZXIgbWFzdGVycGllY2UuIEZyYWN0dXJlZCBhbmQgZGlzanVuY3QsIGl0IGlzIG5vbmV0aGVsZXNzIGZpbGxlZCB3aXRoIGhhdW50aW5nLCB1bmZvcmdldHRhYmxlIGltYWdlcnkuIEEgd29tYW4gaW4gd2hpdGUgY3Jhd2xzIGF0b3AgdGhlIHNob3VsZGVycyBvZiBtZW4gaW4gYmxhY2ssIHRoZSBjbGFwcGluZyBvZiBoYW5kcyBvbiB0aGlnaHMgbGlrZSBzbGFtbWluZyBkb29ycy4gCk5vd193aXRoX3JlYWxfZ2luZ2VyICA2OCBwb2ludHMgIHN1Ym1pdHRlZCAxMSBkYXlzIGFnbwpXaGVuIEkgYmVlbiBpbiBhIHNwaXJpdHVhbCBhbmQgZW1vdGlvbmFsIHBsYWNlIHdoZXJlIG1lZXRpbmdzIGFyZSBib3JpbmcsIEkgaGFkIHN1Y2Nlc3Mgd29ya2luZyB3aXRoIG90aGVycy4gTmV3IG1lZXRpbmdzLCBqYWlscyBhbmQgaW5zdGl0dXRpb25zLCBldGMuIEkgbWVldCBuZXcgcGVvcGxlIGFuZCBpdCBTcGFya3MgbXkgcmVjb3ZlcnkuIE9uZSBvZiBteSBmYXZvcml0ZSBzaWRlIGVmZmVjdHMgaXMgdGhhdCBJIHN0YXJ0IHBheWluZyBtb3JlIGF0dGVudGlvbiBpbiBteSByZWd1bGFyIG1lZXRpbmdzIGFuZCByZWd1bGFyIEFBIGNvbnRhY3RzLiBJIG9mdGVuIGZlZWwgbGlrZSBtZWV0aW5nIHdpdGggdGhlIHNhbWUgcGVvcGxlIEkgaGVhcmQgYWxsIHRoZWlyIHN0b3JpZXMsIGFuZCBrbm93IHRoZWlyIHByb2dyYW1zLCBpdCBnZXRzIHN0YWxlLiBCdXQgd2hlbiBJIGZlZWwgcmVzcG9uc2libGUgdG8gYnJpbmcgdGhlIG1lc3NhZ2UgdG8gbmV3IGNvbWVycyBJIGxpc3RlbiBtb3JlIGF0IG1lZXRpbmdzIHRvIGZpbmQgbmV3IHdheXMgdG8gY29tbXVuaWNhdGUgdGhhdCBtZXNzYWdlLgpJIHdlbnQgdG8gc2Nob29sIChtaWRkbGUgc2Nob29sIHRocm91Z2ggdGhlIGZpcnN0IHllYXIgb2YgY29sbGVnZSkgd2l0aCBhIGd1eSB3aG8gZW5kZWQgdXAgYXR0ZW1wdGluZyB0byByb2IgYSBmYXN0IGZvb2QgcmVzdGF1cmFudCBhbmQgc2hvb3RpbmcgYW5kIG11cmRlcmluZyB0aGUgbWFuYWdlciB3aG8gY291bGRuIG9wZW4gdGhlIGNhc2ggcmVnaXN0ZXIuIFRoZSBtYW5hZ2VyIHdhcyBhIDIzIHllYXIgb2xkIHdobyBoYWQganVzdCBkb25lIGEgY29tbWl0bWVudCBjZXJlbW9ueSB3aXRoIGhpcyBib3lmcmllbmQgYW5kIHRoZXkgd2VyZSBwbGFubmluZyBvbiBtb3ZpbmcgaW50byBhIHRvd25ob3VzZSB0b2dldGhlci4gClRoZXkgYWxzbyBnYXZlIG1lIGJhZCBhZnRlcmNhcmUgYWR2aWNlLi4gCldoZW4gcHVyY2hhc2luZyBhIGNhc2lubyBwb2tlciBjaGlwcyBzZXQsIGl0IGlzIGltcG9ydGFudCB0byBjb25zaWRlciB3aGF0IHlvdSBwcmVmZXIgeW91ciBwb2tlciBjaGlwcyB0byBiZSBtYWRlIG9mLiBJbiBnZW5lcmFsLCB5b3UgY2FuIGNob29zZSBmcm9tIHBsYXN0aWMsIGNsYXksIGNlcmFtaWMsIGFuZCBldmVuIHdvb2QuIApLbm93biBhcyBhY3J5bGZlbnRhbnlsLCB0aGUgZHJ1ZyBoYXMgbm90IGJlZW4gaW5jbHVkZWQgb24gdGhlIERydWcgRW5mb3JjZW1lbnQgT3JnYW5pemF0aW9uJ3MgbGlzdCBvZiBjb250cm9sbGVkIHN1YnN0YW5jZXMgYmVjYXVzZSBpdCBpcyBzbyBuZXcsIGFjY29yZGluZyB0byB0aGUgUFJOIE5ld3N3aXJlLiAKVGhleSBrbm93IHlvdSBtdWNoIG1vcmUgdGhhbiBqdXN0IG9uZSBldmVudC4gCklnZ3lidSAgNjAyIHBvaW50cyAgc3VibWl0dGVkIDIxIGRheXMgYWdvCkZvciBleGFtcGxlIGV2ZW4gSmFlZG9uZyB1c2VkIGEgTGVhcG9sZCBiZWZvcmUgZ29pbmcgb3ZlciB0byBFRy4gV2hlbiBGbGFzaCBnb3QgcGlja2VkIHVwIGJ5IFJhem9yIGhlIHdhcyBnaXZlbiBhIHJlZ3VsYXIgQmxhY2t3aWRvdyBidXQgbGVzcyB0aGVuIDIgbW9udGhzIGxhdGVyIGhlIHdhcyBzZWVuIHdpdGggYSAxMCBrZXlsZXNzIGJyb3duIHN3aXRjaCB2ZXJzaW9uLiBTT1MsIFNvdWxrZXksIHNPTywgWmVzdCwgRGVhci4gSG93ZXZlciB0aGVyZSBpcyB1bnVzYWwgdHJlbmQgZm9yIFRlcnJhbnMgdG8gc3RheSBvbiB0aGUgYmlnIG9uZXMgZm9yIGEgbG9uZyB0aW1lLiAKRHJlaSBSZXN0YXVyYW50cyBzb3JnZW4gZnIgZGFzIGxlaWJsaWNoZSBXb2hsIGRlciBHc3RlLiAKSSB3YW50IHRvIGxvb2sgdXAgcHJvY3Jhc3RpbmF0aW9uIGluIHRoZSBkaWN0aW9uYXJ5IGJ1dCBJIHRoaW5rIEkgZG8gdGhhdCB0b21vcnJvdy4KSXQncyBoYXJkIHRvIGRlc2NyaWJlIHdoeSBJIGxvdmVkIGl0ICAgaXQncyBhICJxdWlldCIgYm9vay4gSXQgYWxtb3N0IGZlZWxzIGxpa2Ugbm90aGluZyBoYXBwZW5zLCBidXQgaXQgZG9lcy4gSXQncyBzbG93LCBhbmQga2luZCBvZiBwb25kZXJvdXMgYnV0IG5vdCB3aXRoIHF1aXRlIHRoZSBsZXZlbCBvZiBpbnRyb3NwZWN0aW9uIGFzIEVvRSAoaWYgdGhhdCBtYWtlcyBzZW5zZSAgIGl0J3Mgbm90IG92ZXJ0bHkgcGhpbG9zb3BoaWNhbCkuIFRoZSBjaGFyYWN0ZXJzIGFuZCB0aGUgd3JpdGluZyByZWFsbHkgcmVzb25hdGVzIHdpdGggbWUsIGFuZCBhdCB0aGUgZW5kIEkgZmVsdCBzdWNoIGEgcGVydmFzaXZlIHNlbnNlIG9mIGdlbnVpbmUgc2FkbmVzcyBsb25naW5nLCB3aGljaCBJIHN0aWxsIGZlZWwgd2hlbmV2ZXIgSSB0aGluayBhYm91dCB0aGUgYm9vay4gSXQncyBub3Qgb25lIGZvciBldmVyeW9uZSwgYnV0IGl0J3MgdHJ1bHkgd29uZGVyZnVsLgpQYXJ0aWNpcGFudHMgaW5jbHVkZWQgaW4gdGhlIHJldmlld1RoZSBwYXJ0aWNpcGFudHMgaW4gdGhlIGluY2x1ZGVkIHN0dWRpZXMgd2VyZSBub3QgZGVzY3JpYmVkIGluIHRoZSByZXZpZXcuCkNhbm5hYmlzIG1heSB0cmlnZ2VyIHBzeWNob3NpcyBpbiBzb21lIHBlb3BsZSwgYnV0IGl0IHZlcnkgdW5saWtlbHkgdG8gYmUgdGhlIHJvb3QgY2F1c2UsIGFzIHBzeWNob3NpcyBoYXMgbW9yZSBjb21wbGV4IG5ldXJvbG9naWNhbC9iaW9jaGVtaWNhbCB0cmlnZ2VycyB3ZSBkb24gcXVpdGUgdW5kZXJzdGFuZCB5ZXQuCkZvciBleGFtcGxlLCBhbiBpbWFnZSB0YWtlbiBvbiBhbiBpUGhvbmUgNiB3b3VsZCBoYXZlIGEgcmVzb2x1dGlvbiBvZiBbMzI2NHgyNDQ4XQpBIG1vdG9yY3ljbGUgY2FuIGJlIGJvdWdodCBmb3IgYWJvdXQgMy4wMDAuMDAwIDUuMDAwLjAwMCBpZiB5b3UgYXJlbiBwaWNreSBhbmQgZG9uIG1pbmQgYW4gb2xkZXIgYmlrZS4gWWVhcmx5IHJlZ2lzdHJhdGlvbiBzaG91bGQgYmUgYWJvdXQgUnAuIApGcmVkIGFuZCBGZWxpY2l0eSBoYXZlIHByZXNlbnQgbW9udGhseSBleHBlbnNlcyBvZiAkNywyNjAuIEZlbGljaXR5IGdlbmVyYXRlcyBhIHRvdGFsIG9mICQzMiw3MDAgcGVyIHllYXIgaW5jbHVkaW5nIGhlciB0aHJlZSBtb250aHMgb2YgYW5udWFsIGVtcGxveW1lbnQgaW5zdXJhbmNlLiBBZnRlciAxMyBwZXIgY2VudCBhdmVyYWdlIHRheCwgc2hlIGdldHMgdG8ga2VlcCAkMjgsNDUwIHBlciB5ZWFyIG9yICQyLDM3MCBwZXIgbW9udGguClRPTk9QQUggICBOeWUgQ291bnR5J3MgYnJvdGhlbHMgd2lsbCBzdXJ2aXZlIHdpdGhvdXQgYmVpbmcgcHV0IHRvIGEgcG9wdWxhciB2b3RlLCBhbmQgdGhlIHN1Z2dlc3RpdmUgc2lnbnMgdGhhdCBjYXVzZWQgYSBmdXJvciBpbiBQYWhydW1wIGFyZSBjb21pbmcgZG93bi5JbiBhIGNvbnRlbnRpb3VzIHNlc3Npb24gVHVlc2RheSwgdGhlIGNvdW50eSBjb21taXNzaW9uIHZvdGVkIDMgMiBub3QgdG8gcHV0IGEgcXVlc3Rpb24gb24gdGhlIE5vdmVtYmVyIGJhbGxvdCBhc2tpbmcgdm90ZXJzIHdoZXRoZXIgYnJvdGhlbCBwcm9zdGl0dXRpb24gc2hvdWxkIGNvbnRpbnVlIHRvIGJlIGxlZ2FsIGluIE55ZSBDb3VudHksIHdoaWNoIGhhcyB0aGUgc3RhdGUncyBsYXJnZXN0IGNvbmNlbnRyYXRpb24gb2YgYnJvdGhlbHMuVGhlIGNvbW1pc3Npb25lcnMgYWxzbyB2b3RlZCB0byBoYXZlIHRoZSBkaXN0cmljdCBhdHRvcm5leSBmb3JtdWxhdGUgcmV2aXNpb25zIHRvIHRoZSBvcmRpbmFuY2UgdGhhdCBnb3Zlcm5zIHRoZSBicm90aGVscywgY2l0aW5nIGNvbmNlcm5zIHRoYXQgaXQgaXMgdmFndWUgb24gY3J1Y2lhbCBxdWVzdGlvbnMgb2YgYWR2ZXJ0aXNpbmcgYW5kIGVuZm9yY2VtZW50LkNvbW1pc3Npb24gQ2hhaXJtYW4gSGVucnkgTmV0aCBhbGFybWVkIHRoZSBicm90aGVsIGluZHVzdHJ5IGxhc3QgbW9udGggd2hlbiBoZSBwdXQgYW4gaXRlbSBvbiB0aGUgYWdlbmRhIHRoYXQgY291bGQgaGF2ZSBsZWQgdG8gYW4gb3V0cmlnaHQgYmFuIGJ5IGNvbW1pc3Npb24gdm90ZS4gCkhlIHdhcyBhbiBhYnVzaXZlIGFzc2hvbGUsIGJ1dCBhIGRvdWJsZSBkb2N0b3IhIFdoYXQgY291bGQgcG9zc2libHkgZ28gd3Jvbmc/LiAKSXQncyB0aGUgb25seSB3YXkgdG8gbWFpbnRhaW4gVklQIHN0YXR1cy4gSWYgeW91IGRvbid0IHdhbnQgdG8gY29udGludWUgYXMgVklQLCB5b3UgY2FuIHJldHVybiB0byB5b3VyIEJhc2ljIGFjY291bnQgYW5kIGNvbnRpbnVlIGFzIEJhc2ljIG1lbWJlci4gCklzIENyZWRlbmNlIER1bWJsZWRvcmUncyBicm90aGVyPyBDb3JyZWN0IG1lIGlmIEknbSB3cm9uZyBidXQgSSB0aG91Z2h0IGhlIGp1c3Qgc2FpZCAieW91ciBvd24gZmxlc2ggYW5kIGJsb29kIGlzIHRyeWluZyB0byBraWxsIHlvdSIuIENvdWxkIGhlIGJlIGEgTmVwaGV3LCBtYXliZSBBYmVyZm9ydGggaGFkIGEgc29uIGFuZCBpdCB3YXNuJ3QganVzdCBBcmlhbmEncyBkZWF0aCB0aGF0IG1hZGUgdGhlbSBzbyBkaXN0YW50IGluIHRoZSBIUCBzZXJpZXMuIEFsdGhvdWdoIEFyaWFuYSB3YXMgb25seSAxNCwgSSBndWVzcyBzaGUgY291bGRhIGhhZCBhIGNoaWxkIChpdCdzIG15IGJlbGllZiB0aGF0IEFyaWFuYSB3YXMgYW4gT2JzY3VyaWFsKSBhbmQsIGlmIHRoaXMgaXMgdGhlIGNhc2UsIHRoYXQncyBob3cgQ3JlZGVuY2UgZ290IGl0IHZpYSBoaXMgbXVtIChhbmQgbWF5YmUgZ3JpbmR5IGlzIHRoZSBmYXRoZXI/PyBIZSBkb2VzIGNhbGwgQ3JlZGVuY2UgIm15IGJveSIgaW4gdGhlIGZpbmFsIHNjZW5lIHdoZW4gaGUgcHJlc2VudHMgaGltIHdpdGggYSB3YW5kKS4gCkF0IGxlYXN0IGluIHRoZSBFdXJvcGVhbiBwYXJ0IG9mIHRoZSBibG9jay4gSSBjYW5ub3QgcmVhbGx5IHNheSBhbnl0aGluZyBhYm91dCBob3cgaXQgbG9va2VkIChvciBob3cgaXQgbG9va3MpIHdpdGhpbiB0aGUgTktvcmVhIG9yIENoaW5hLgpXaGF0IHdlIGFsbCBzaGFyZSBpcyBub3QgYSBsaWZlc3R5bGUsIGEgc2V0IG9mIHZhbHVlcywgb3IgYSB3b3JsZHZpZXcsIGJ1dCBhIHdheSBvZiByZWxhdGluZyB0byBtZW4uLiAKUGlsbG93IGJldHdlZW4gdGhlIGxlZ3MgaGVscHMgc29tZSB0b28uIApBbnkgb3RoZXIgdGltZSwgaWYgcGxheWVyIEEgYmV0cywgaGUncyBnb2luZyB0byBoYXZlIG5vdGhpbmcgYnV0IGFjZSBoaWdoIG9yIHNvbWV0aGluZyBsaWtlIGJvdHRvbSBwYWlyL2EgZ3V0c2hvdC4gCkEgbGFyZ2UgbnVtYmVyIGFyZSBhdCBhaXJwb3J0cywgYW5kIHN1ZmZlciBmcm9tIHRoZSBlZmZlY3RzIG9mIGFpcnBsYW5lIGV4aGF1c3Qgb3IgaGVhdCBmcm9tIGFsbCB0aGUgcGF2ZWQgcnVud2F5cyBhbmQgdGF4aXdheXMuIApJJ3ZlIGJlZW4gcGxheWluZyBSaW13b3JsZCBmb3IgdGhlIHBhc3QgbWF5YmUgZm91ciBob3VycyBvciBzbyBhbmQgaGF2ZSBkZWNpZGVkIHRvIHN0b3AgZm9yIHRoZSBuaWdodCBiZWNhdXNlIG15IHJpZ2h0IGV5ZWJyb3cgaXMgdHdpdGNoaW5nIGluY2Vzc2FudGx5IGFuZCBJJ20gbm93IHNjcm9sbGluZyBSZWRkaXQgc28uIFRoYXQncyBiZXR0ZXIgSSBndWVzcyBsb2wuIFNlcmlvdXNseSB0aG91Z2gsIEkndmUgYmVlbiBwbGF5aW5nIHZpZGVvZ2FtZXMgZm9yIGEgbGFyZ2UgcGFydCBvZiBteSBsaWZlLiAKU3Ryb25nLiAKTXkgbW9tIGRpZCB0aGlzIGZvciBtZSBmb3IgQ2hyaXN0bWFzIGEgY291cGxlIHllYXJzIGJhY2suIEkgbGl2ZSBhY3Jvc3MgdGhlIGNvdW50cnkgYW5kIGhhZG4ndCBzZWVuIHRoZW0gaW4geWVhcnMuIFdlIHRhbGsgZXZlcnkgZGF5LiBJIGdvdCBzb21lIGNvb2tpZXMsIHRoZSBzcGVjaWFsIGVkaXRpb24gYm94IHNldCBvZiBmaXJlZmx5LCBhbmQgdGhpcyB0aW55IGxpdHRsZSBzdGFjayBvZiBub3RlIGNhcmRzIHdpdGggaGVyIGhhbmQgd3JpdGluZyBhbmQgYWxsIHRoZXNlIG5pY2Ugd29yZHMuIE9uZSBvZiBteSBmYXZvcml0ZSBvbmVzIGJ1cmllZCBzb21ld2hlcmUgaW4gdGhlIG1pZGRsZSByZWFkaW5nICd5b3VyIGRhZCBqdXN0IGZhcnRlZCBzbyBsb3VkIGl0IHNjYXJlZCB0aGUgZG9ncywgSSB0aG91Z2h0IHlvdSdkIHRoaW5rIGl0IHdhcyBmdW5ueS4gTWlzcyB5b3UhJyBTaGUganVzdCBnZXRzIG1lIGxtYW8gTXkgcGFyZW50cyBoYXZlIGFsd2F5cyBtYWRlIHN1cmUgSSBrbm93IHRoZXkgbG92ZSBtZSBhbmQgSSd2ZSBhbHdheXMgZmVsdCBsdWNreSBpbiB0aGF0IGJ1dCBnb2QgZGFtbiB0aGF0IGxpdHRsZSBzdGFjayBvZiBjYXJkcyBqdXN0IHJlYWxseSBtYWRlIG1lIGZlZWwgc28gc3BlY2lhbC4gSSBrZWVwIGl0IGluIGEgZHJhd2VyIGJ5IG15IGZyb250IGRvb3IgYW5kIHdoZW4gSSBoYXZlIGEgcm91Z2ggZGF5IGl0J3Mgd2FpdGluZyB0aGVyZSBmb3IgbWUgd2hlbiBJIGdldCBob21lLiBJdCdzIHNvbWV0aGluZyB0aGF0IEknbGwga2VlcCBhbmQgY2hlcmlzaCBmb3IgdGhlIHJlc3Qgb2YgbXkgbGlmZS4KVGhlIGNoYXJhY3RlcnMgc3RvcmllcyBzZWVtZWQgc2ltcGxlIGJ1dCBnb3QgeW91IGN1cmlvdXMsIHRoZSBiYW50ZXIgZmVsdCBzaWxseSBidXQgbWFkZSBtZSBncmluIGxpa2UgYW4gaWRpb3QgYW5kIHRoZWlyIGxpdHRsZSAiYWR2ZW50dXJlcyIgd2VyZW4gb3V0IG9mIHRoZSBvcmRpbmFyeSBmb3IgYW4gaWRvbCBzaG93IGJ1dCB0aGV5IGtlcHQgbWUgd2FudGluZyB0byB3YXRjaCBtb3JlICh0aGF0IHBhdXNlIGZvciB0aGUgbGFzdCBmZXcgZXBpc29kZXMga2lsbGVkIG1lKS4gClRoaXMgd2F5LCBJIHdvbiBmdWxseSBqdWRnZSBXZXN0d29ybGQgc2Vhc29uIDIgdW50aWwgU2Vhc29uIDMgaXMgb3V0IGFuZCB3ZSBzZWUgc29tZSBvZiB0aGUgcGF5b2ZmcyBhbmQgaWYgdGhleSB3b3JrLgpUaGVzZSBiZXRzIGNhbiBiZSBmb3VuZCBhdCBhbnkgb25saW5lIGJvb2ttYWtlciwgc28gaXQgd291bGQgYmUgdmVyeSB1c2VmdWwgZm9yIHlvdSB0byBsZWFybiB0aGVtLkFueSB3aW5uaW5ncyBmcm9tIHlvdXIgYmV0IGFyZSBub3JtYWxseSBwYWlkIG91dCBhcyBzb29uIGFzIHRoZSBmaW5hbCByZXN1bHQgaXMgY29uZmlybWVkLiBMaXZlIGluIHBsYXkgYmV0cyBhcmUgdXN1YWxseSBzZXR0bGVkIHRoZSBzYW1lIHdheSwgYXMgc29vbiBhcyB0aGUgcmVzdWx0IGlzIGRlY2lkZWQgYWZ0ZXIgd2hpY2ggeW91ciB3aW5uaW5ncyB3aWxsIGJlIGNyZWRpdGVkIHRvIHlvdXIgYWNjb3VudC4gClBva2VyIGlzIGEgc3BvcnQgYmVjYXVzZSBmb3IgbWUsIHRoZSBza2lsbCBJIHBvc3Nlc3MgaXMgZ29pbmcgdG8gbWFrZSBtZSBhIGJldHRlciBwbGF5ZXIgdGhhbiBhbm90aGVyIHBlcnNvbiAgIG5vdCB0aGUgbHVjayBJIGdldCBvbiB0aGUgZGF5LiBJIGRvIG5lZWQgYSBjZXJ0YWluIGVsZW1lbnQgb2YgcGh5c2ljYWwgZml0bmVzcyB0byBzaXQgYXQgYSB0YWJsZSBhbmQgYmUgbWVudGFsbHkgc3Ryb25nIGZvciAxNiBob3Vycy4gCk1yIExldmVzcXVlIGFja25vd2xlZGdlZCB0aGUgY2x1YidzIGNvbnRyYWN0dWFsIG9ibGlnYXRpb25zLCBidXQgc2FpZCB0aGUgYnVyZGVuIHdhcyBodXJ0aW5nIHRoZSBidXNpbmVzcy4gTGFzdCBOb3ZlbWJlciwgdGhlIFZpY3RvcmlhbiBnb3Zlcm5tZW50IGdyYW50ZWQgdGhlIGNsdWIgYSAxMiBtb250aCBleGVtcHRpb24gZnJvbSBoYXZpbmcgdG8gcHV0IHRoZSBsaWNlbmNlcyB0byB1c2UuIApOVEEgZm9yIGhvdyB5b3UgZmVsdC4gWW91IHdlcmUgZGVsaWJlcmF0ZWx5IG1pc2xlZCwgYnkgYm90aCB5b3VyIGZyaWVuZCBhbmQgdGhlIGdpcmwgaW4gcXVlc3Rpb24uIApHcmV5c25lYWt0aGllZiB1Ckp1c3QgYXMgSSB0aGlua2luZyBoZSBzb3VuZHMgbGlrZSBhIGZhbnRhc3ksIGEgZHJlYW0gZGF0ZSwgc2hlIGNsYWltcyBOb3JyaXMgd2FzIGFuZ3J5IHdoZW4gc2hlIGJyb2tlIHRoZSBuZXdzIHRoYXQgc2hlIHdhcyBwcmVnbmFudC4gIkhlIHNhaWQgdGhhdCBJIHRyYXBwZWQgaGltLCIgc2hlIHRlbGxzIEdhdXQuICJBbmQgdGhhdCBJIHdhcyBhIHNsdXQuIiBMYW5lIHNheXMgdGhlIHR3byBoYWQgbGl0dGxlIGNvbnRhY3QgYWZ0ZXIgdGhhdCBoZWF0ZWQgbWVldGluZywgYnV0IHRoYXQgTm9ycmlzIGFncmVlZCBoZSB3b3VsZCB0YWtlIGN1c3RvZHkgb2YgdGhlIGNoaWxkLiAKUGhhc2V0d284MDMxIHUKVE9MRURPLCBPSCAoV1RPTCkgICBPbmUgb2YgdGhlIG1vc3QgaW1wb3J0YW50IGVsZW1lbnRzIGZvciBUb2xlZG8ncyBIb2xseXdvb2QgQ2FzaW5vIGhhcyBhcnJpdmVkIHZpYSBzZW1pIHRydWNrcyBNb25kYXkuIFVwIHVudGlsIHRoaXMgcG9pbnQsIGNvbnN0cnVjdGlvbiBoYXMgYmVlbiBmb2N1c2VkIG9uIHByZXBhcmluZyB0aGUgYnVpbGRpbmcgZm9yIG9wZW5pbmcuIFdpdGggTW9uZGF5J3MgZGVsaXZlcnkgb2YgdGhlIGZpcnN0IHNsb3QgbWFjaGluZXMsIHRoZSBmb2N1cyBoYXMgc3dpdGNoZWQgdG8gcHJlcGFyaW5nIHRoZSBjYXNpbm8gb3BlcmF0aW9ucy4KV2Ugbm90IGdvaW5nIGRvd24gdGhlcmUsIHdlIGFyZSBmdWNraW5nIGxlYXZpbmcuIApJIHdvdWxkIHNheSA3LzEwLiAKQUIgVGFzdHkKQnJvY2sgUC4gT2YgSnVwaXRlciBzYWlkLCBjYW4gYmVsaWV2ZSBob3cgbWFueSBtb3JvbnMgbGlrZSBtZSBhcmUgaGVyZSB0YWtpbmcgYSBwaWN0dXJlLiBUaGlzIHBsYWNlIGlzIGEgaGlzdG9yaWNhbCBzaXRlLCBpdCBhIHRvdXJpc3QgYXR0cmFjdGlvbiAgIGV2ZXJ5b25lIHdhbnRzIGEgcGljdHVyZS4gClRoZXkgZG9uIGhhdmUgYWNjZXNzIHRvIHJlcGxheSwgc3RhdHMsIGNvbW1lbnRhcnksIHRoZXkgY2Fubm90IGNoZWNrIHdpdGggdGhlaXIgYnVkZGllcywgYW5kIHRoZXkgZmVlbCwgdmlzY2VyYWxseSwgY3Jvd2Qgbm9pc2Ugd2hlbiBhIGZhbiBmYXZvcml0ZSBsYW5kcyBhIHB1bmNoLiAKVGhlIEJCcyB3ZXJlIGEgbW9tZW50IGFzIG11Y2ggYXMgYSBzb3VuZCBhIG1vbWVudCBJIHJlY2FsbCBmb25kbHkgZXZlbiB0aG91Z2ggSSB3YXMgc2FkbHkgdG9vIGhhcGxlc3NseSBoZXRlcm8gbWFsZSBhbmQgcG9zdCB0ZWVuIGZvciBpdCB0byBiZSBtaW5lLiBCdXQgdGhleSB3ZXJlIGFsc28gYSB2aWJlIGFzIG11Y2ggYXMgYSBtb21lbnQ6IHRoZWlyIGhhcm1vbmllcywgYmFsYW5jZWQgcGVyZmVjdGx5IGJldHdlZW4gYWN0aXZlIGFuZCBwYXNzaXZlLCBlbWJvZGllZCBhIHNwaXJpdCBvZiB5ZWFybmluZywgYSBsZXNzIGRlbWFuZGluZyBzdHJhaW4gb2Ygc2V4dWFsIGV4cHJlc3Npb24gdGhhbiBSIHBsZWFkaW5nLiAKSWhyZSBlcm90aXNjaGVuIEZhbnRhc2llbiBiZXNjaGZ0aWd0ZW4gc2ljaCBzY2hvbiBpbiBkZXIgUHViZXJ0dCBtaXQgZGVyIFNpdHVhdGlvbiBiZWltIEZyYXVlbmFyenQsIHVuZCBpbiBpaHJlbSBLb3Bma2lubyBzcGllbHRlIGRlciBGcmF1ZW5hcnp0YmVzdWNoIGVpbmUgd2VzZW50bGljaGUgUm9sbGUuIApUaGUgQTYgc3VpdGVkLCAzMiw3JSBjaGFuY2Ugb2Ygd2lubmluZyBhZ2FpbnN0IHBvY2tldCA2J3MuIApBcG9sb2dpZXMgaWYgdGhpcyBoYXMgYmVlbiBhc2tlZCBvciBhbnN3ZXJlZCBhbHJlYWR5LCBjb3VsZG4ndCBmaW5kIGl0LgpUaGVyZSBhbHNvIGEgZ3lwc3kgd29tYW4gaW4gaXQgd2hvIGFkZHMgdGhpcyBzdXBlcm5hdHVyYWwgZWxlbWVudCB0byBpdC5wbGF5cyBhIGJpZyBwYXJ0IGluIGl0IHRvbywgdGhlIG9sZGVyIG1hbiB3aG8gSSBwbGF5IGhhcyBiZWVuIGRyaW5raW5nIGFsbCBoaXMgbGlmZSB0byB0cnkgYW5kIGRlYWRlbiB0aGlzIGlubmVyIHBhaW4uIEhlIGEgbWFuIHdobyBoYXMgbGl2ZWQgYW5kIHlldCB3aG8gaGFzIG5vdCBsaXZlZCBhbmQgYWxsIG9mIGEgc3VkZGVuIHRoaXMgY2hhbmNlIHRvIGZ1bGZpbCBoaXMgbGlmZSBiZWZvcmUgaGUgZGllcyBwcmVzZW50cyBpdHNlbGYuIEV2ZW4gdGhvdWdoIGhlIHN1ZmZlcnMgZnJvbSBkZXByZXNzaW9uIGhlIGlzIGRyaXZlbiBhbmQgaGFzIGJlZW4gc3VjY2Vzc2Z1bC4gCkFoIHNvIHRoZSBKZXdzICJxdWFudHVtIGFncmVlZCIgdG8gSG9sb2NhdXN0IHRoZW1zZWx2ZXMuIEdvdCBpdC4KSG93ZXZlciwgc29sdmVycyBhcmUgdmVyeSwgdmVyeSB1c2VmdWwgdG8gaGVscCBjaG9vc2UgcHJvcGVyIGJsdWZmIGNhbmRpZGF0ZXMgYW5kIGhlbHAgdW5kZXJzdGFuZCByYW5nZSB2cy4gUmFuZ2UgaW50ZXJhY3Rpb24gb24gY2VydGFpbiBib2FyZHMuIEkgYWxzbyBmb3VuZCB0aGF0IGp1c3QgdGhlIHdvcmsgb2Ygc2V0dGluZyB1cCB0aGUgdHJlZSBhbmQgdGhlIGNyaXRpY2FsIHRoaW5raW5nIHJlcXVpcmVkIHRvIGludGVycHJldCBhbmQgc2ltcGxpZnkgb3V0cHV0cyBpbXByb3ZlcyBteSB1bmRlcnN0YW5kaW5nIG9mIHRoZSBnYW1lIGdyZWF0bHksIHdoaWNoIGhhcyBpbXByb3ZlZCBteSByZXN1bHRzIGJvdGggb25saW5lIGFuZCBsaXZlLiAKV2UgYWxsIGZpZ2h0aW5nIG91ciBvd24gYmF0dGxlcyBzbyB5b3UgYXJlIGRlZmluaXRlbHkgbm90IGFsb25lIGluIHRoaXMuIEFub3RoZXIgdGhpbmcgaXMgc2luY2UgeW91IHNhaWQgeW91IGhhdmUgbW9zdGx5IGd1eSBmcmllbmRzLCBJIHRoaW5rIGl0IGp1c3QgdGhlIG1hbGUgd2F5IHRvIG5vdCBjb21wbGltZW50IGEgbG90IG9mIHRoZSB0aW1lLiBJIGtub3cgbXkgYm95ZnJpZW5kIGxvdmVzIG1lIGFuZCB0aGlua3MgSSBnb3JnZW91cyBidXQgaGUgcmFyZWx5IGNvbXBsaW1lbnRzIG1lICAgSSB0aGluayBpdCBqdXN0IGEgZ3V5IHRoaW5nLiAKTGlrZSBva2F5IGNvb2wgc29tZSBraWRzIGdvdCBoaXQgd2l0aCBzaG9lcywgc29tZSBnb3QgaGl0IHdpdGggYmVsdHMgYW5kIHNvbWUgZ290IGhpdCB3aXRoIHdvb2RlbiBzcG9vbnMuIApCYXNpY2FsbHksIENhc2lubyBXYXIgaXMgYSBjYXNpbm8gY2FyZCBnYW1lIHdoaWNoIGlzIGJhc2VkIG9uIFdhciAgIGEgcG9wdWxhciBjYXJkIGdhbWUgcGxheWVkIGJ5IGNoaWxkcmVuLiBGaXJzdCwgaGVyZSdzIGEgcXVpY2sgbG9vayBhdCB0aGUgcnVsZXMgb2YgdGhlIFdhciBjYXJkIGdhbWUuIApPZmZpY2lhbHMgdG9sZCByZXBvcnRlcnMgYXQgdGhlIHNhbWUgZXZlbnQgdGhhdCB0aGV5IHdlcmUgcHJlc3Npbmcgb3RoZXIgZ292ZXJubWVudHMgYW5kIGNvbXBhbmllcyB0byBjb25zaWRlciB0aGUgdGhyZWF0IHBvc2VkIGJ5IEh1YXdlaSBidXQgZGlkIG5vdCBvZmZlciBhbnkgc3BlY2lmaWMgZXZpZGVuY2UgaXQgd2FzIGEgcmlzay4uIApCb3VsZGVyIFBvbGljZSBTZ3QuCllvdSBtYXkgY29udHJhc3QgdGhlIGZlZXMsIHNlY3VyaXR5LCBjYXNoaW5nLCBjcmVkaWJpbGl0eSwgc3VwcG9ydCBhbmQgZ2FtZSBvcHRpb24gdG8gbG9jYXRlIHRoZSBCZXN0IE9ubGluZSBQb2tlciBTaXRlcy4gVGhlc2UgYXJlIHRoZSBmZXcgcG9pbnRzIHdoaWNoIGFyZSB1dGlsaXplZCB0byBjb250cmFzdCB0aGUgQmVzdCBPbmxpbmUgUG9rZXIgU2l0ZXMgYnkgdXNlcnMuIApJIGhhdmUgYSBkaWZmdXNlci4gVGhlIG9uZSBmcm9tIGFtYXpvbiB0aGF0IGV2ZXJ5b25lIGJvdWdodC4gTG9va3MgbGlrZSBhIHdoaXRlIEhlcnNoZXkncyBraXNzLiBJIHB1dCB0aGF0IHJpZ2h0IG5leHQgdG8gbXkgZmFjZSB3aGVuIEkgc2xlZXAuIEl0IGhlbHBlZCB3aXRoIG15IGZhY2UgYnV0IG5vIGNoYW5nZSB0byB0aGUgaGFpci4gRG8geW91IHRoaW5rIGEgcmVndWxhciBodW1pZGlmaWVyIHdvdWxkIG1ha2UgYSBkaWZmZXJlbmNlPwpJdHMgYSBncmVhdCBpZGVhLCBidXQgYXQgdGhlIGVuZCBvZiB0aGUgZGF5IG5vIG1hdHRlciBob3cgcmVhc29uYWJsZSB5b3UgY2hhcmdlIHlvdSBtaWdodCBnZXQgb25lIGNsaWVudCBmcm9tIGl0LiBNb3N0IGN5Y2xpc3Qgd2lsbCBzcGVuZCBtYWpvciBidWNrcyBvbiBhIGJpa2UgYW5kIHdoYXQgbm90IGJ1dCBzb21ldGhpbmcgZm9yIHRoZW1zZWx2ZXMgYXMgaW4gdGhlaXIgYm9kaWVzIHdlbGxuZXNzLiBXZWxsIG1vc3QgdGVuZCB0byBub3Qgc3BlbmQgbXVjaCBvbiB0aGVpciBvd24gaGVhbHRoIG9yIGlmIHRoZXkgZG8gaXRzIGluIHRoZSB3cm9uZyBkZXB0Li4gCkNhbiB0d28gQmxhY2sgKGJ1dCBzYW1lIGFnZSwgc2FtZSBpbmNvbWUsIGV0Yy4pIGhhdmUgc2FjcmVkIHNleCB0b28/IExpa2UgT2JhbWEgYW5kIE1pY2hlbGxlPyBBbmQgd2hhdCBhYm91dCB0d28gcGVvcGxlIG9mIHRoZSBzYW1lIHNleCwgaWYgdGhleSBtYXJyaWVkLCB3aGl0ZSwgdXBwZXIgbWlkZGxlIGNsYXNzLCBhbmQgY29uZmluZSBpdCB0byB0aGUgYmVkcm9vbT8KVGhpcyByZXByZXNlbnRzIG9uZSBvZiB0aGUgbW9zdCBpbXBvcnRhbnQgZXhhbXBsZXMgb2YgdGhlIHdpZGVzcHJlYWQgdW5pbnRlbmRlZCBlZmZlY3RzIG9mIG1vZGVybiBhZ3JpY3VsdHVyYWwgZ2VuZXRpY3MgYW5kIGFncmlidXNpbmVzcy4uIApEaWRuIHByYWN0aXNlIGl0IGZvciBtb3N0IG9mIHRoZSB5ZWFyIHRob3NlIGdvb2QgaGFiaXRzIGFuZCBhdCB0aGUgZW5kIG9mIHRoZSBkYXkgd2hlbiBwdXNoIGNhbWUgdG8gc2hvdmUgYW5kIHRoZSBhZHZlcnNpdHkgY29tZXMgb3V0LCB0aGF0IHRoZSBiZXN0IGVmZm9ydCB3ZSBoYWQuIFRoYXQgcmVhbGx5IGRlamVjdGluZyB0byBzZWUgdGhhdCwgZXNwZWNpYWxseSBpbiBhIHNlcmllcyB3aGVyZSB5b3UgaGF2ZSBhbiBlbGltaW5hdGlvbiBnYW1lIGF0IGhvbWUgYW5kIHdlIGFscmVhZHkgbG9zdCB0d28gaG9tZSBnYW1lcy4gUm9iaW5zb24gc2NvcmVkIHRoZSBNYXJvb25zIGxvbmUgZ29hbCBlYXJseSBpbiB0aGUgc2Vjb25kIHBlcmlvZCBmb3IgdGhlIDEgMSB0aWUuLiAKQ291bGQgeW91IGltYWdpbmUgdGhlIGVkZ2UgeW91IHdvdWxkIGhhdmUgb3ZlciB5b3VyIG9wcG9uZW50cyBpZiB5b3UgYWxyZWFkeSBrbmV3IGhvdyB0aGV5IHBsYXllZCBvbmxpbmUgcG9rZXI/IFRoZSBiZW5lZml0cyB3b3VsZCBiZSBlbmRsZXNzLiAKTm93IGltYWdpbmUgcGxheWluZyBhIGdhbWUgd2l0aCBtdWx0aXBsZSB1bmtub3duIHBsYXllcnMgYW5kIHRoZSBydWxlcyBhcmUgc2V0IHN1Y2ggdGhhdCBpZiBhbGwgcGxheWVycyBhY3QgaG9uZXN0bHksIHRoZXkgYWxsIGhhdmUgYW4gZXF1YWwgY2hhbmNlIG9mIHdpbm5pbmcuIApMdWNraWx5LCBzaGUgaGFkIHRoZSBnb29kIHNlbnNlIHRvIGxpc3RlbiB0byBoZXIgaW50dWl0aW9uLCBhbmQgYmFpbCBvdXQgb2YgdGhlcmUgYW5kIGhpZGUgb3V0IHVudGlsIGhlciBmYW1pbHkgZnJpZW5kIGNhbWUgdG8gcGljayBoZXIgdXAuLiAKQSBTb3V0aGVybiBnZW50bGVtYW4gb2YgbWVhbnMgYW5kIGVkdWNhdGlvbiwgRG9jIHdhcyBzdHJ1Y2sgYnkgb25lIHRyYWdlZHkgYWZ0ZXIgYW5vdGhlci4gCklmIGl0J3MgdG91cm5hbWVudHMgeW91IGFyZSBhZnRlciB0aGVuIHlvdSB3aWxsIG5vdCBiZSBkaXNhcHBvaW50ZWQsIHdlIG5vdyBnaXZlYXdheSBhdCBsZWFzdCAkOCwwMDAsMDAwIGluIGd1YXJhbnRlZWQgcHJpemVzIGVhY2ggYW5kIGV2ZXJ5IG1vbnRoIGFuZCB3aXRoIGJ1eSBpbnMgcmFuZ2luZyBmcm9tICQxIHRvICQyMDAgdGhlcmUgaXMgc29tZXRoaW5nIHRvIHN1aXQgZXZlcnkgYmFua3JvbGwuIApBIGxvbmcgdGVybSByZWxhdGlvbnNoaXAgY2FuIHN0aWxsIGJlIGZ1biBpZiB5b3Ugd29yayBvbiBpdC4gSWYgeW91IGhhdmUgZGlmZmVyZW5jZXMgKHdoaWNoIGFyZSBpbmV2aXRhYmxlKSwgc2V0dGxlIHRoZW0gYXMgc29vbiBhcyB5b3UgY2FuLiAKUmVhbGx5LCBub3RoaW5nIGhhcyBjaGFuZ2VkLiAKQ2xvc2UgeW91ciBsZXR0ZXIgYnkgcmVzdGF0aW5nIHlvdXIgaW50ZXJlc3QgaW4gbGVhcm5pbmcgbW9yZSBhYm91dCB0aGUgam9iLiBSZWZyYWluIGZyb20gc2F5aW5nIHlvdSdyZSB0aGUgcGVyZmVjdCBjYW5kaWRhdGUgICBhdCB0aGlzIHBvaW50LCBhbGwgeW91IGNhbiBob25lc3RseSBzYXkgaXMgdGhhdCB5b3UncmUgaW50ZXJlc3RlZCBpbiBleHBsb3JpbmcgdGhlIG9wcG9ydHVuaXR5LiAKRnJlZSBkcmlua3MgcHV0IHRocm91Z2ggZGlmZmVyZW50IHRpbGw6IHdoaXN0bGVibG93ZXJBIGZvcm1lciBlbXBsb3llZSB0dXJuZWQgd2hpc3RsZWJsb3dlciwgd2hvIGhhcyBwcm92aWRlZCBldmlkZW5jZSB0byB0aGUgaW52ZXN0aWdhdGlvbiwgdG9sZCB0aGUgQUJDIHNoZSBhbmQgb3RoZXIgQUxIIHN0YWZmIHdlcmUgdG9sZCB0byBnaXZlIGZyZWUgZHJpbmtzIHRvIHBva2VyIG1hY2hpbmUgcGxheWVycy4KIkkgaG9wZSBoZSBnb2VzIG9uIHRvIHdpbiBpdC4iCkkgbm9ybWFsbHkgcG9zdCBvbiB0aGVpciBwb3N0IHNheWluZyB3aHkgdGhpcyBpcyBhY3R1YWxseSBhIGdvb2QgdGhpbmcgYW5kIGhvdyBpdCBpcyBiZXR0ZXIgZm9yIGV2ZXJ5b25lIHRoYXQgdGhlaXIgd2lsbCBiZSBsZXNzIHBlb3BsZS4gSWYgdGhleSByZWFsbHkgcHVzaCBpdCwgdGhlbiBJIHN0YXJ0IHRhbGtpbmcgYWJvdXQgb3ZlcnBvcHVsYXRpb24sIHJlc291cmNlcywgZWN0LiAKQW1lcmljYSBpcyBsaXRlcmFsbHkgY3J1bWJsaW5nIGJlZm9yZSBvdXIgZXllcy4gMCBjb25zdW1lciBwcm90ZWN0aW9ucyBhbnltb3JlLiBZb3UgY2FuIHJlYWxseSBzZWUgdGhlIGRpZmZlcmVuY2Ugd2hlbiB5b3Ugd2F0Y2ggYSBiYWJ5IGJvb21lciBtYWtlIGRlY2lzaW9ucyB2cyBhIHlvdW5nZXIgcGVyc29uLiBJdCBpcyBzbyBpbmdyYWluZWQgaW4gdGhlIG9sZGVyIGdlbmVyYXRpb24gdGhhdCB0aGUgZ292ZXJubWVudCBpcyBwcm90ZWN0aW5nIHRoZW0uIFRoZXkgZG9uJ3QgdW5kZXJzdGFuZCB0aGF0IHRoZXJlIGFyZSB0aGluZ3MgZm9yIHNhbGUgdGhhdCB3aWxsIGxlZ2l0aW1hdGVseSBoYXJtIHlvdSwgZm9yIGV4YW1wbGUuIFRoZXkgYXNzdW1lIGlmIGl0J3MgaW4gYSBzaGVsZiB0aGF0IGl0J3MgYmVlbiB0ZXN0ZWQgYW5kIGl0J3Mgc2FmZSBvdGhlcndpc2UgdGhlIGdvdnQgd291bGRuJ3QgbGV0IGl0IGJlIHNvbGQuIFdlIGdyZXcgdXAgYmVpbmcgc2hpdCBvbiBzbyBzb21lb25lIGNvdWxkIG1ha2UgYW4gZXh0cmEgYnVjay4KSW4gYWxsIGhvbmVzdHksIHRob3VnaCBJIHZlcnkgYXdhcmUgb2YgdGhlIHByb2Nlc3MgYW5kIHdoZXJlIHRvIGdvIGlmIEkgaGFkIHRoZSBpbmNsaW5hdGlvbiwgSSBuZXZlciBiZWVuLiBBc2lkZSBmcm9tIG5vdCBiZWluZyBjdXJpb3VzIGVub3VnaCBvciBoYXZpbmcgdGhlIGRlc2lyZSB0byBnbyBteXNlbGYsIHRoZSBwcmljZSBuZXZlciBtYWRlIG11Y2ggc2Vuc2UgdG8gbWUuIEkgd29ya2VkIGFzIGEgc3R5bGlzdCBpbiBhbiB1cHRvd24gc2Fsb24sIGxvY2F0ZWQgd2l0aGluIGEgZ3ltLCB3aG8gbWVtYmVycyBhdmVyYWdlZCA2IGZpZ3VyZXMuLiAKSSBhZ3JlZSwgaXQgd291bGRuIGh1cnQgdG8gY2FsbCBhaGVhZCBhbmQgbWFrZSBzdXJlIHRoZXkgY2FuIGFjY29tbW9kYXRlIHlvdS4gSSBmZWVsIHlvdSB3aXRoIHRoZSBlbWJhcnJhc3NtZW50LCBiZWluZyB0dXJuZWQgYXdheSBvbiB0aGUgZGF5IHdvdWxkIG1vcnRpZnkgbWUhIEkgaGFkIGEgZmV3IG1hc3NhZ2VzIGFuZCBJIGRvbiB0aGluayB5b3UgaGF2ZSBhbiBpc3N1ZSB3aXRoIHRoZSBzdGFmZiAoSSBzdXJlIHRoZXkgc2VlIGFsbCBzb3J0cyBvZiB3ZWlyZCBhbmQgd29uZGVyZnVsIGJvZGllcyBhbmQgYm9keSBwYXJ0cyBpbiB0aGVpciBsaW5lIG9mIHdvcmspLCBidXQgaWYgeW91IGhhdmUgdG8gbGllIG9uIGEgbWFzc2FnZSBiZWQgdGhhdCBtYXkgY2F1c2UgeW91IGlzc3Vlcy4gVGhleSB0ZW5kIHRvIGJlIHNvbWV3aGF0IG5hcnJvdyBzbyB5b3UgbWF5IG5vdCBiZSB2ZXJ5IGNvbWZvcnRhYmxlLCBhbmQgdGhlcmUgbWF5IGJlIGEgbWF4aW11bSB3ZWlnaHQvbG9hZCBsaW1pdC4gT25lIHRpbWUgSSBoYWQgYSAiZnVsbCBib2R5IiBtYXNzYWdlIGluIGEgaG90ZWwgYW5kIHRoZXkgZGlkIGl0IG9uIHRoZSBiZWQsIGl0IGJlIGdyZWF0IGlmIHRoZXkgY291bGQgZG8gdGhhdCBhdCB5b3VyIHNwYSEKQW5kIHNvIGRvZXMgdGhlIG9yaWdpbmFsIHJhaXNlciB3aXRoIGhpcyBwYWlyIG9mIGphY2tzLiBUaGUgZmxvcCBpcyBsb3cgYW5kIEkgc2t1bGsgb3V0IHRoZSBkb29yLiAKQW5uYSBLb3puaXVrIChXYXJkIFBlcnJpbiwgUE5HIHBob3RvKQpGaXJzdCBhbmQgZm9yZW1vc3QsIHdlIG11c3QgZGVtYW5kIHRoYXQgb3VyIGdvdmVybm1lbnQgYmUgb2YgdGhlIHBlb3BsZSBhbmQgZm9yIHRoZSBwZW9wbGU7IG5vdCBvZiBhbmQgZm9yIGJpZyBiYW5rcyBhbmQgYmlnIGd1bnMuIApHdXkgQSBhbmQgaGlzIGdpcmxmcmllbmQgQiBsaXZlZCB3aXRoIHJvb21tYXRlIEMuIFRoZXkgc3BsaXQgdGhlIHJlbnQgNTAvNTAsIEIgInNob3VsZG4gaGF2ZSB0byBwYXkgYW55dGhpbmciIGJlY2F1c2Ugc2hlIEEgZ2lybGZyaWVuZC4gVW5iZWtub3duc3QgdG8gQywgaGUgYWN0dWFsbHkgcGF5aW5nIEFMTCBvZiB0aGUgcmVudCBiZWNhdXNlIEEgYW5kIEIgaGF2ZSBzdWNoIHBpc3MgcG9vciBtb25leSBtYW5hZ2VtZW50IHNraWxscyB0aGF0IHRoZXkgbmV2ZXIgaGF2ZSBlbm91Z2ggZm9yIHJlbnQuIApJbiBudXJzaW5nIHNjaG9vbCB0aGV5IGFjdHVhbGx5IHRhdWdodCB1cyBub3QgdG8gdXNlIHRoZXNlIHR5cGVzIG9mIHRlcm1zIHdpdGggcGF0aWVudHMgb2YgYW55IGFnZSBiZWNhdXNlIHRoZXkgYXJlIG1pbmltaXppbmcgYW5kIGRpc21pc3NpdmUuIFNvIG5vIHlvdXIgbm90IGNyYXp5IG9yIHBldHR5IHRvIG5vdCB3YW50IHRvIGJlIGNhbGxlZCBkZWFyLgpUaGUgZWFzaWVzdCB3YXkgdG8gZG8gdGhpcyBpcyB0byBwcm9wIHVwIDEgZW5kIG9mIHRoZSBwYW4gYW5kIGFsbG93IHRoZSBmYXQgdG8gcnVuIHRvIHRoZSBvdGhlciBlbmQgb2YgdGhlIHBhbi4gCltNXSAgNCBwb2ludHMgIHN1Ym1pdHRlZCA2IGRheXMgYWdvCkluIHRoZSBVUyBjaGFydGVyIHNjaG9vbHMgaGF2ZSBiZWVuIGV4dGVuc2l2ZWx5IHByb21vdGVkIHRvIHN1cHBvcnQgZWR1Y2F0aW9uIHByaXZhdGl6YXRpb24uIEhlcmUgaW4gQWxiZXJ0YSBjaGFydGVyIHNjaG9vbCBwcm9tb3Rpb24gYXBwZWFycyB0byBzaWduaWZpY2FudGx5IGludm9sdmUgcHJvbW90aW5nIHJlbGlnaW91cyBzY2hvb2xpbmcsIGFuZCBzZWVtcyB0byBkb3ZldGFpbCB3aXRoIG9wcG9zaXRpb24gdG8gdGhpbmdzIGxpa2UgR1NBcyBhbmQgbW9kZXJuIHNleCBlZCBjdXJyaWN1bHVtcy4gIDcgcG9pbnRzICBzdWJtaXR0ZWQgMTUgZGF5cyBhZ29CZWNhdXNlIEkgYmVlbiBoZXJlIGJlZm9yZSBhbmQgSSBrbm93IHdoYXQgdGhlIGNvbW1lbnRzIHdpbGwgYmUgSSB3YW50IHRvIGFkZCBhIGJpdCBvZiB0aGUgIm5lZ2F0aXZlIiBzaWRlIG9mIHRoaXMgYW5ub3VuY2VtZW50Lk1hc29uIGNvbmZpcm1lZCB0b2RheSB0aGF0IHdpdGhpbiBhIHllYXIsIHRoZXJlIHdpbGwgbm90IGJlIHBob3RvIGVuZm9yY2VtZW50IG9uIHN0cmFpZ2h0IGFyZWFzIG9mIHRoZSBIZW5kYXkuIApUaGV5IGRvbiBwcm92aWRlIHlvdSBhbiBJUCBhZGRyZXNzLiBUaGlzIG1lYW5zIHlvdSBub3QgYWN0dWFsbHkgb24gdGhlIGludGVybmV0IHlvdSBqdXN0IE5BVGluZyB0aHJvdWdoIHRoZWlyIGdlYXIuIFlvdSBjYW4gaG9zdCBhbnkgc2VydmljZXMuIApJbCBuJ2VzdCBwYXMgc291aGFpdGFibGUgZW4gZWZmZXQgcXVlIGwnYXJ0bWlzaW5lIHByb2R1aXNlIHVuIHBlcm94eWRlIGVuIGRlaG9ycyBkZXMgY2libGVzIHZpc2VzLiBPbiBwZXV0IHByYXRpcXVlciBsJ2FjdXB1bmN0dXJlIG91IGxlIEdpIEdvbmcgdGhyYXBldXRpcXVlIGF2ZWMgc3VjY3MgZXQgbmUgcmllbiBjb25uYXRyZSBkZSBsYSBwaHl0by4gSidhaSBtaXMgIGRpc3Bvc2l0aW9uIHN1ciBsZSBDbG91ZCBkZSBub21icmV1eCBvdXZyYWdlcyBkZSBtZGVjaW5lIGNoaW5vaXNlIGRvbnQgbGUgR3JhbmQgRm9ybXVsYWlyZSBkJ0VyaWMgTWFyaSBxdWkgIGNsYXNzaWZpIGxlcyB0cnMgbm9tYnJldXNlcyBmb3JtdWxlcyB0cmFkaXRpb25uZWxsZXMuIApJbiB0aGlzIHRoZXNpcywgd2UgYWltZWQgdG8gZWx1Y2lkYXRlIHRoZSBpbXBhY3Qgb2YgZW5oYW5jaW5nIHRoZSB0cmFuc3BvcnQgb2Ygb3JhbGx5IGFkbWluaXN0ZXJlZCBjYW5uYWJpbm9pZHMgdG8gdGhlIGludGVzdGluYWwgbHltcGhhdGljIHN5c3RlbSwgdGhlIG1ham9yIGhvc3Qgb2YgaW1tdW5lIGNlbGxzLCBvbiB0aGUgaW1tdW5vbW9kdWxhdG9yeSBlZmZlY3RzIG9mIGNhbm5hYmlub2lkcy5PcmFsIGFkbWluaXN0cmF0aW9uIG9mIGxpcG9waGlsaWMgY2FubmFiaW5vaWRzIHdpdGggbG9uZyBjaGFpbiB0cmlnbHljZXJpZGVzIChMQ1QpIHdhcyBpbnZlc3RpZ2F0ZWQgYXMgYSBzaW1wbGUgYXBwcm9hY2ggdG8gZW5oYW5jZSB0aGUgaW50ZXN0aW5hbCBseW1waGF0aWMgdHJhbnNwb3J0LiAKIlRoZSBFdXJvcGVhbiBVbmlvbiBoYXMgYmVlbiBzdHJvbmdseSBlbmNvdXJhZ2luZyBidXNpbmVzcyBsZWFkZXJzIHRvIGpvaW4gdGhlIFdvbWVuIEVtcG93ZXJtZW50IFByaW5jaXBsZXMgY29tbXVuaXR5IGFuZCB1c2UgdGhlbSBhcyBndWlkYW5jZSBmb3IgYWN0aW9ucyB0aGF0IHdlIGNhbiBhbGwgdGFrZSBpbiB0aGUgd29ya3BsYWNlLCBtYXJrZXRwbGFjZSBhbmQgY29tbXVuaXR5IHRvIGVtcG93ZXIgd29tZW4gYW5kIGJlbmVmaXQgYm90aCBidXNpbmVzc2VzIGFuZCBwZW9wbGUsIiBzYWlkIEFtYmFzc2Fkb3Igb2YgdGhlIEV1cm9wZWFuIFVuaW9uIHRvIENhbmFkYSBQZXRlcmlzIFVzdHVicy4gCldoZXJlIHRvIE1lZGl0YXRlIENob3NlIHNvbWV3aGVyZSB0aGF0IHlvdSBjYW4gc2l0IGNvbWZvcnRhYmx5LCB3aXRoIHlvdXIgdGhpZ2hzIHBhcmFsbGVsIHdpdGggdGhlIGZsb29yIGFuZCB5b3VyIGJhY2sgdmVydGljYWwuIApUaGUgVGltZXMgcG9ydHJheXMgdGhlIHRlbiBtb250aCBidWlsZCB1cCB0byBPYmFtYSBBZmdoYW4gd2FyIGFzIGFuIGluY3JlZGlibHkgd2VsbCB0aG91Z2h0IG91dCBwcm9jZXNzIHdpdGggbG90cyBvZiBmYWN0cyAgdGhvdXNhbmRzIG9mIHBhZ2VzIG9mIGJyaWVmaW5nIG1lbW9zIGFuZCBtYXBzLiAKV2hlbiBhIFBDIGxvdmluZyBmcmllbmQsIHRoZSBraW5kIHdobyBhY3R1YWxseSB3b3JrIGluIHRoZSBJVCBpbmR1c3RyeSBhbmQgdGFsa3MgZ2VlayAyNC83LCBzZW50IG1lIHlldCBhbm90aGVyIG1lc3NhZ2UgYWJvdXQgaG93IGJhZCBBcHBsZSBpcyB5ZXN0ZXJkYXksIEkgaGFkIHRvIHBheSBhdHRlbnRpb24uIApJIGhhdmUgYSAyMyB5ZWFyIG9sZCBuZXBoZXcgd2hvIGlzIHRvIGFsbCBhcHBlYXJhbmNlcyBhIGhlYWx0aHkgaGFwcHkgZ3V5LiAKQXQgbXkgZnJpZW5kJ3MgbW9tJ3MgZnVuZXJhbCwgbXkgZnJpZW5kJ3MgZmF0aGVyIGluIGxhdyAoZnJpZW5kJ3MgbW9tIGRpZG4ndCByZWFsbHkgY2FyZSBmb3IgbXkgZnJpZW5kJ3MgaHVzYmFuZCkgZGVjaWRlZCBpdCB3b3VsZCBiZSBhIGdyZWF0IHRpbWUgdG8gZ2l2ZSBhIDEvMiBob3VyIHNlcm1vbi4gSGUgaXMgYSBwcmVhY2hlciAob3Igc29tZSBlcXVpdmFsZW50KS4gSXQgd2FzIGluY3JlZGlibHkgaW5hcHByb3ByaWF0ZSBiZWNhdXNlIG15IGZyaWVuZCdzIG1vbSB3YXMgYSBsb25nIHRpbWUgZGV2b3V0IEJ1ZGRoaXN0LiBUaGUgc2VybW9uIHdhcyBqdXN0IHNvIHJhbmRvbSBhbmQgdW5wbGFubmVkLiBFdmVyeW9uZSB3YXMgdW5jb21mb3J0YWJsZSBhbmQgd2UgY291bGQgYWxsIHRlbGwgdGhhdCBteSBmcmllbmQncyBkYWQgd2FzIGFic29sdXRlbHkgcGlzc2VkLiBNeSBmcmllbmQgaXMgbm8gbG9uZ2VyIG1hcnJpZWQgdG8gdGhhdCBndXkgZm9yIHVucmVsYXRlZCByZWFzb25zLgpJIGtuZXcgd2hlcmUgaXQgd2FzIGhlYWRlZCBhbmQgdHJpZWQgdG8gY3V0IGl0IG9mZiBiZWZvcmUgaWYgY291bGQgZ28gdGhlcmUgYnkgcmVtb3ZpbmcgeW91ciBjb21tZW50LiAKWWVzISBJJ20gcmV3YXRjaGluZyBoZXIgc2Vhc29uIHJpZ2h0IG5vdyBhbmQgc2hlIGp1c3QgbWVhbnMgc28gd2VsbC4gSSdtIGN1cnJlbnRseSB3YXRjaGluZyB0aGUgZXBpc29kZSB3aGVyZSBSYW1vbmEgbWFrZXMgYW4gYXR0ZW1wdCB0byBtYWtlIEpvaG4gYW5kIERvcmluZGEgbG9vayBsaWtlIHRoZSBiYWQgZ3V5IG9mIGtpY2tpbmcgaGVyIG91dCBvZiB0aGVpciBwYXJ0eSAobGl0dGxlIHJlbWluZGVyLCBSYW1vbmEgc3RpcnMgdGhlIHBvdCBieSBlbmNvdXJhZ2luZyBhbmQgdGFsa2luZyB0byBMdSdzIGNyZWVweSBkcnVua2VuIGV4IGFuZCB0aGV5IGtpY2sgaGVyIG91dCkuIEp1bGVzIGlzIHNvIGJvdGhlcmVkIGJ5IGhlciBseWluZyBhbmQgYXR0ZW1wdHMgdG8gdGVsbCB0aGUgcmVhbCBzdG9yeS4gSSBsb3ZlIHRoYXQgd2l0aG91dCBiZWluZyBzbmFya3kgb3IgbG9va2luZyBmb3IgYW55IHNvcnQgb2YgZ2FpbiBzaGUgc2V0cyB0aGUgc3Rvcnkgc3RyYWlnaHQgd2hlbiBEb3JpbmRhIGlzbid0IHRoZXJlIHRvIGRlZmVuZCBoZXJzZWxmLgpBbmQgeWV0LCB0aGUgdmFzdCBtYWpvcml0eSBvZiBvdXIgZWZmb3J0cyB0byBjdXJiIGdyZWVuaG91c2UgZ2FzIGVtaXNzaW9ucyBhcmUgYWltZWQgYXQgdGhhdCAxMCUuIENhciBlbWlzc2lvbnMgc3RhbmRhcmRzLCB0YXggYnJlYWtzIGZvciB1c2luZyBlZmZpY2llbnQgYXBwbGlhbmNlcyBhbmQgbGlnaHQgYnVsYnMsIGNhbXBhaWducyBhaW1lZCBhdCBnZXR0aW5nIHBlb3BsZSB0byB1c2UgbGVzcyBlbmVyZ3kgb24gaGVhdCBhbmQgQUMsIGNhbXBhaWducyBhaW1lZCBhdCBnZXR0aW5nIHBlb3BsZSB0byBlYXQgbGVzcyBtZWF0LCBldGMuIApXZW50IHRvIENoZWNrcG9pbnQgQ2hhcmxpZSBhbmQgdGhlIG11c2V1bSB0aGF0IG5vdyBzdGFuZHMgdGhlcmUsIHNpdGUgb2YgdGhlIGZvcm1lciBjaGVja3BvaW50IGJldHdlZW4gV2VzdCBhbmQgRWFzdCBCZXJsaW4uIFRoZXJlIGlzIGRlZmluaXRlbHkgYSBwaWN0dXJlIG9mIHVzIGh1Z2dpbmcgb3VyIHRheGkgZHJpdmVyLCB3aG8gd2FzIElyYW5pYW4sIGJlY2F1c2Ugd2UgbG92ZWQgaGltIGZvciBzb21lIHJlYXNvbiEuIApPUklHSU5BTCBDQVBUSU9OOiBNZXRybyBOZXR3b3JrcyBmb3VuZGVyICBhbmQgaGlzIGZvcm1lciB3aWZlIFN1emFubmUgaGF2ZSBqdXN0IGxpc3RlZCB0aGVpciBCZWwgQWlyIG1hbnNpb24gZm9yIHNhbGUgYXQgJDEyNSBtaWxsaW9uLiBUaGUgbWFuc2lvbiBpcyBvbiB0aGUgbWFya2V0IGJlY2F1c2UgU2FwZXJzdGVpbiwgbm93IGEgbGFyZ2Ugc2hhcmVob2xkZXIgb2YgV2VzdHdvb2QgT25lIHN0b2NrLCBhbmQgaGlzIHdpZmUgcmVjZW50bHkgZGl2b3JjZWQuIApDZWxhIChyZSlkcGxhY2VyYWl0IGxhIHJlc3BvbnNhYmlsaXQgbCBvIGVsbGUgZGV2cmFpdCB0cmUsIHN1ciBsZXMgY29tbWVyYW50cyBjb25jZXJucy4gQydlc3QgIGV1eCBkJ3RyZSBleGlnZWFudCBlbnZlcnMgbGUgZ2VzdGlvbm5haXJlLCBwYXMgYXV4IHV0aWxpc2F0ZXVycyBldCB2b2lzaW5zIGRlIHN1cHBvcnRlciBsZXVycyBhYmFuZG9ucyBkJ2VuY29tYnJhbnRzIChjJ2VzdCBwZXV0IHRyZSBkJ2FpbGxldXJzIHVuZSBhdXRyZSBwaXN0ZSwgbGVzIHNpZ25hbGVyICBjaGFxdWUgZm9pcyBhdSBzZXJ2aWNlIGRlcyBlbmNvbWJyYW50cywgZW4gbGV1ciBkZW1hbmRhbnQgZXhwbGljaXRlbWVudCBkZSBsZXMgdmlyZXIsIHF1b2lxdSdpbHMgZW4gcGVuc2VudC4pCkkgdGhpbmsgdGhlIGJhZyBpcyBhIG5pY2Ugc2hhcGUgICB0aGUgZm9vdCBib3ggaW4gcGFydGljdWxhciBpcyBhIGdvb2QgY29tZm9ydGFibGUgYW5nbGUgdG8ga2VlcCB5b3VyIGZlZXQgd2VsbCBpbnN1bGF0ZWQuIApQb2xscyBwcmVkaWN0ZWQgQm9sc29uYXJvIHdvdWxkIGNvbWUgb3V0IGluIGZyb250IG9uIFN1bmRheSwgYnV0IGhlIGZhciBvdXRwZXJmb3JtZWQgZXhwZWN0YXRpb25zLCBibGF6aW5nIHBhc3QgY29tcGV0aXRvcnMgd2l0aCBtb3JlIGZpbmFuY2luZywgaW5zdGl0dXRpb25hbCBiYWNraW5nIG9mIHBhcnRpZXMgYW5kIGZyZWUgYWlyIHRpbWUgb24gdGVsZXZpc2lvbi4KV2UgZG9uIGRvIHRoYXQuIApIb3dldmVyLCB0aG91Z2ggdGhpcyBtYXkgYmUgdHJ1ZSwgbm90aGluZyBpbiBldmVyeWRheSBsaWZlIGlzIHRydWx5IGV2ZXIgc3RlcmlsZSBhcyB0aGUgd29ybGQgdGVlbXMgd2l0aCBtaWNyb29yZ2FuaXNtcywiIGhlIHNheXMuICJNb3N0IG9mIHRoZXNlIG1pY3JvYmVzIGFyZSBoYXJtbGVzcyBhbmQgYWN0dWFsbHkgdmVyeSBoZWxwZnVsLiAKSSBjb25zaWRlciBteXNlbGYgNHRoIGdlbmVyYXRpb24gb24gcGF0ZXJuYWwgc2lkZSwgc2luY2UgbXkgZ3JlYXQgZ3JhbmRwYXJlbnRzIGNhbWUgaGVyZSBmcm9tIFRvaXNhbiBpbiB0aGUgZWFybHkgMTkyMHMuIEhvd2V2ZXIsIEkga25vdyBteSBncmVhdCBncmFuZG1vdGhlciBmYXRoZXIgc3BlbnQgdGltZSBhcyBhIHRhaWxvciBpbiBDYWxpZm9ybmlhIGFuZCBzZW50IG1vbmV5IGJhY2sgdG8gaGlzIGZhbWlseSwgYWxsb3dpbmcgaGVyIHRvIGdyb3cgdXAgcHJpdmlsZWdlZCBlbm91Z2ggdG8gaGF2ZSBhbiBlZHVjYXRpb24uIEkgZG9uIHJlYWxseSBrbm93IG11Y2ggYWJvdXQgaGltIHRob3VnaCwgc28gSSBoZXNpdGF0ZSB0byBwdXQgdGhhdCA1dGggZ2VuIGNsYWltLiAKSWFuOiBXZWxsLCBpdCB3YXNuJ3QgcmVhbGx5IGFsbCB0aGF0IGRpZmZpY3VsdC4gCkFtYXlhIHJldmVudWUgcm9zZSBhYm91dCAyMCBwZXJjZW50IGluIDIwMDkgb3ZlciB0aGUgeWVhciBlYXJsaWVyIHRvIEMkNS45IG1pbGxpb24uIE5ldCBwcm9maXQsIGhvd2V2ZXIsIGZlbGwgbWFyZ2luYWxseSB0byBDJDY0OCwwMzggZnJvbSBDJDY3Myw5MTkgaW4gMjAwOC4gSW4gMjAwNyBpdCBwb3N0ZWQgYSBsb3NzIG9mIEMkMS45NyBtaWxsaW9uLCBhY2NvcmRpbmcgdG8gZG9jdW1lbnRzIGZpbGVkIHRvIFNFREFSLgpBbGwgSSBjYW4gdGhpbmsgYWJvdXQgaXMgcHJvZml0LCBwcm9maXQsIHByb2ZpdCwgcHJvZml0LiBJdCBub3QgZnVuLiBBbmQgZXZlbiB0aG91Z2ggSSBjYXNoaW5nIG91dCBhIHdpbm5lciwgSSBub3QgcHJvdWQuIEkgY2FuIHNheSAiSGV5IGxvb2ssIEkgd29uIDE1IHBsYXlpbmcgTkwyIGFuZCAuMjUgUyBJdCB0b29rIG1lIGFyb3VuZCAxMiBob3VycywgYnV0IGhleSwgSSBoYWQgZnVuIi4gSSBkaWQgbm90IGhhdmUgZnVuLgpJZGVhbGx5LCBEYXZpZCBSb2JlcnRzb24sIHRoZSBBQVIgdmljZSBwcmVzaWRlbnQgaW4gY2hhcmdlIG9mIHRoZSBXaW5kc29yIG9wZXJhdGlvbiwgd291bGQgbGlrZSB0byBoYXZlIGFyb3VuZCAzMDAgc3RhZmYgd2l0aGluIHRoZSBuZXh0IHllYXIgb3IgdHdvLiAxNjAgc2h5IG9mIHRoYXQsIGhlIHNhaWQgVGh1cnNkYXkgZnJvbSBDYWxnYXJ5LCB3aGVyZSBoZSB3YXMgYXR0ZW5kaW5nIGEgY29sbGVnZSBqb2IgZmFpciwgdHJ5aW5nIHRvIHNlbGwgQWxiZXJ0YW5zIG9uIG1vdmluZyB0byBBQVIgYW5kIFdpbmRzb3IuIFRyeWluZyB0byBtYWtlIG91ciBwcmVzZW5jZSBrbm93biB0aHJvdWdob3V0IENhbmFkYSwgaGUgc2FpZC4uIApDQkkgYW5kIFRVQyB1bml0ZSBmb3IgQnJleGl0IGF0dGFjayBvbiBHb3Zlcm5tZW50IG92ZXIgY2l0aXplbnMgcmlnaHRzClNvbWVob3csIGl0IG5vIGxvbmdlciBhYm91dCBsZWdhbCBzdGF0dXMgb3IgY2l2aWwgcmlnaHRzLCBidXQgY2hpbGRyZW4uIEkgc3VwcG9zZSB0aGlzIGlzIHdoYXQgcXVlZXIgdGhlb3Jpc3QgTGVlIEVkZWxtYW4gbWVhbnMgYnkgImZ1dHVyaXR5LiIgTm9ybWF0aXZlIHNleHVhbGl0eSByZWd1bGF0ZXMgdGhlIHJlc3Qgb2YgdXMgd2l0aCB0aGUgY2xhaW0gdGhhdCB0aGV5ICh0aGUgbm9ybWFsIGFtb25nIHVzKSBhbmQgdGhleSBhbG9uZSBlbnN1cmUgdGhlIGZ1dHVyZS4gT2YgY291cnNlLCB0aGUgY2xhaW0gdG8gZnV0dXJpdHkgaWdub3JlcyB0aGUgZmFjdCB0aGF0IG1hcnJpYWdlIGlzIG5laXRoZXIgbmVjZXNzYXJ5IGZvciB0aGUgcmVwcm9kdWN0aW9uIG9mIHRoZSBzcGVjaWVzIG5vciBkb2VzIGl0IGd1YXJhbnRlZSB0aG9zZSBjaGlsZHJlbiB3aWxsIHRocml2ZSBzaW5jZSBpdCBkb2VzIG5vdCBndWFyYW50ZWUgYmFzaWMgaHVtYW4gcmlnaHRzIGxpa2UgaGVhbHRoIGNhcmUgb3IgaG91c2luZyB0byB0aG9zZSBjaGlsZHJlbi4uIApBdCBhIGdsYW5jZSB5b3Uga25vdyBob3cgeW91ciAiY29sbGVjdGl2ZSB0YWJsZSIgaXMgYWN0aW5nIGFuZCBob3cgdGhhdCBpcyBhZmZlY3RpbmcgdGhlIGNvbnRlc3RlZCBwb3RzLiAKQSBncmVhdCBpbmR1c3RyaWFsIG5hdGlvbiBpcyBjb250cm9sbGVkIGJ5IGl0cyBzeXN0ZW0gb2YgY3JlZGl0LiBPdXIgc3lzdGVtIG9mIGNyZWRpdCBpcyBjb25jZW50cmF0ZWQuIApNZWRhbCBvZiBIb25vciBhbmQgR29sZGVuZXllIHdlcmUgZ29vZCBleGFtcGxlcyBvZiBtYXAgZGVzaWduIGFuZCBnb2FsIHNldHRpbmcgdGhhdCB0cmFuc2NlbmRlZCB0aGUgdXN1YWwgRlBTIHRyYXAgb2YgbWVtb3JpemluZyBhIHRpbnkgbWFwIGFuZCBob25pbmcgb25lIHR3aXRjaCBza2lsbHMgdG8gYSBmaW5lIHBvaW50LiAKMVYgaW50byAxIGRlbGl2ZXJzIDFXLiAyViBpbnRvIDEgZGVsaXZlcnMgNFcuIDFWIGludG8gMSBwbHVzIGFub3RoZXIgMVYgaW50byBhbm90aGVyIDEgKHdpdGggYSBjb21tb24gdGVybWluYWwpIG1heSB0b3RhbCAyViwgYnV0IHRoZXkgZGVsaXZlciAyVywgbm90IDRXLiAKVGhlcmUgYXJlIGp1c3QgNTAwIGFjY291bnRzIChmZXdlciBwbGF5ZXJzKSBhdCB0aGF0IHNraWxsIGxldmVsIGluIHRoZSB3b3JsZC4gCkRldmVsb3BlZCBmb3IgZWNvbm9taWNzLCB3aGVyZSBpdCBoYXMgaGFkIHNvbWUgc3VjY2Vzc2VzLCBnYW1lIHRoZW9yeSBkaWRuJ3QgcXVpdGUgY29tcGxldGVseSByZXZvbHV0aW9uaXplIHRoYXQgZmllbGQuIEJ1dCBpdCBoYXMgYmVlbiB3aWRlbHkgYWRvcHRlZCBieSBtYW55IG90aGVyIHNvY2lhbCBzY2llbmNlcy4gQW5kIGV2b2x1dGlvbmFyeSBnYW1lIHRoZW9yeSBpcyBhbiBpbXBvcnRhbnQgYnJhbmNoIG9mIHRoZSBzdHVkeSBvZiBldm9sdXRpb25hcnkgYmlvbG9neS4gCklkYyBhYm91dCBhbnlib2R5IHRoYXQgbXVjaCB0byBsaWUgYWJvdXQgYm9keSBwYWluLiAKVGhlIG90aGVyIG9mZmVyaW5nIGhlcmUgaXMgYmluZ28gZXZlcnkgbmlnaHQsIHdoZXJlIHlvdSBjYW4gd2luIHVwIHRvICQ0MDAgaW4gYSBnYW1lLiBJZiB5b3UgZ2V0IGh1bmdyeSB3aGlsZSB5b3UncmUgZ2FtaW5nLCB5b3UgY2FuIGdvIHRvIHRoZSBhZGphY2VudCBzdGVha2hvdXNlLCB0aGUgVGhyZWUgU2lzdGVycy4uIApJIG5ldmVyIHVzZSBpdCBmb3IgTU8gdGhvdWdoLiAKWW91ciBzdHJhdGVneSBoZXJlIGlzIHRvIHJlIHJhaXNlLCBpc29sYXRlIGFuZCBub3QgbGV0IGhpbSBkcmF3IG91dC4gCk1vc3QgYmFycyB3b3VsZCBiZSB2ZXJ5LCB2ZXJ5IHVwc2V0IHdpdGggdGhpcy4gSWYgeW91IGFyZSBwbGF5aW5nIGZvciByZWFsIG1vbmV5LCBpdCdzIHJpZ2h0IG91dC4gSWYgeW91J3JlIG5vdCBwbGF5aW5nIGZvciBtb25leSwgaXQgc3RpbGwgbG9va3Mgc3VzcGljaW91cyBhbmQgcGxhY2VzIHdpdGggbGlxdW9yIGxpY2Vuc2VzIHRlbmQgdG8gbm90IGxpa2UgdGhpbmdzIHRoYXQgd291bGQgcHV0IHRoYXQgbGljZW5zZSBpbiBwZXJpbC4KTW9tZW50YW4gdmVyYnJhdWNoZW4gc2llIHdlbmlnZXIuIERhcyBiZWRldXRldCBhYmVyIGF1Y2g6IHdpciBtc3N0ZW4gZGllc2UgTG5kZXIgZGFubiBrbnN0bGljaCB3ZWl0ZXJoaW4gYXJtIGhhbHRlbiwgZGVubiBzdGVpZ3QgZGVyIFdvaGxzdGFuZCBrb25zdW1pZXJlbiBzaWUgZGFubiBqYSBhdWNoIG1laHIuIERhenUga29tbXQgZGFubiBub2NoIGRlciBGYWt0b3IgTWlncmF0aW9uLgoiSWYgeW91IGhhdmUgYSBwcm9ibGVtIHlvdSB3aWxsIGhhdmUgdGhhdCBndXQgZmVlbGluZywiIGhlIHNhaWQuIApQcm9maXRhbnQgZGUgcXVlbHF1ZXMgam91cnMgZGUgImNsaWJhdCIsIGF1IGxpZXUgZGUgdmFxdWVyICBxdWVscXVlcyBhY3Rpdml0cyBwYXJpc2llbm5lcywgaidhaSBldSBsJ2lkZSBkZSBwYXJ0aXIgZGV1eCB0cm9pcyBqb3VycyBlbiB0aGFsYXNzby4gCkRvZXMgaGUgaGF2ZSBoaXMgb3JpZ2luYWwgYmlydGggY2VydGlmaWNhdGUgYW5kL29yIGRvY3VtZW50YXRpb24gZnJvbSB5b3VyIGdyYW5kcGFyZW50cz8gSWYgbm90LiAKQXMgeW91IGtub3csIEkgaGF2ZSBiZWVuIHRyeWluZyBteSBoYWQgYXQgY3JvY2hldC4gSSB0b29rIGhvbWUgZWMgaW4gc2Nob29sLiBZZXMsIEkgYW0gdGhhdCBvbGQuIApCZWNreSBOdXR0LCBhIFJlcHVibGljYW4gcmVwcmVzZW50aW5nIGEgZGlzdHJpY3QgaW4gQXJpem9uYSBzb3V0aGVhc3Rlcm4gY29ybmVyLCBzYWlkIHNoZSBoZWFycyB0aGUgY29uY2VybnMgb2YgdGhlIGRvY3RvcnMgYnV0IHN0aWxsIHRoaW5rcyBwYXJlbnRzIHNob3VsZCBoYXZlIHRoZSByaWdodCB0byBjaG9vc2Ugb24gYmVoYWxmIG9mIHRoZWlyIG93biBjaGlsZHJlbi4iV2UgYXJlIGluIHRoZSBVbml0ZWQgU3RhdGVzIG9mIEFtZXJpY2EsIiBzaGUgc2F5cywgImFuZCB3ZSBoYXZlIGEgcmlnaHQgdG8gY2hvb3NlIGZvciBvdXIgY2hpbGRyZW4gICBvdXIgcmVsaWdpb24uIiJQZXJzb25CZWhpbmRBU2NyZWVuICAyMCBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ29JIGhhZCB0aGlzIGhhcHBlbiBtdWx0aXBsZSB0aW1lcyB0byBtZSBhbmQgaXQgc28gc2F0aXNmeWluZy4gTW9zdCByZWNlbnQgb25lIEkgd2FzIGtpY2tlZCBjYXVzZSBtb3N0IG9mIG15IGNvbXAgdGltZSB3YXMgb24gaG9nIGluc3RlYWQgb2YgcmVpbiBvciB6YXJ5YS4gClNoZSdzIHRoZSBsb25lIG1lbWJlciBvZiB0aGlzIENhbmFkaWFuIHRlYW0gcGxheWluZyBjbHViIGhvY2tleSBhYnJvYWQuIApJIGhhZCBhIGRyaXZlciB3aG8gd291bGQgc2luZyB0byBjcnlpbmcgYmFiaWVzIHdoaWxlIGRyaXZpbmcuIEEgbnVtYmVyIG9mIGRyaXZlcnMgdm9sdW50ZWVyZWQgdGhlaXIgdGltZSBhbmQgbW9uZXkgdG8gZGVjb3JhdGUgdGhlIENocmlzdG1hcyBidXNlcyB3ZSBiZWVuIHNlZWluZyBhcm91bmQgdG93biByZWNlbnRseS4gCklNUE9SVEFOVDogUkZTIE1lZCBiYXkgaXMgbHZsIDMgYW5kIGhhcyBhIDQgc2xvdCBjYXBhY2l0eSwgbWFraW5nIGl0IHJlYWxseSBoYXJkIHRvIHRha2UgZG93biAoaXQgY2FuIGhlYWwgdGhlIDQgUkZTIG1lbWJlcnMgaW5zaWRlIHRoYXQgYXJlIGVpdGhlciBmaWdodGluZyB5b3VyIGNyZXcsIG1ha2luZyBpdCBhIGxvc3QgYmF0dGxlLCBvciByZXBhaXJpbmcgaXQsIG1ha2luZyB5b3UgaGF2ZSB0byBzdGFydCBvdmVyKSBUaGlzIGlzIHRoaXMgQm9hcmRpbmcgc3RyYXRlZ3kgbWFpbiB3ZWFrbmVzcywgYW5kIGEgc3Ryb25nIG9uZS4gSSBjb3VsZCBwdWxsIGl0IG91dCBvbmNlIG9yIHR3aWNlIGluIE5vcm1hbCBieSBicmVha2luZyBkb3duIHRoZSBNZWRiYXkgd2l0aG91dCBtYWtpbmcgYW55IGFpciBicmVhY2ggdXNpbmcgbXkgd2VhcG9ucyAoaW9ucyBhbmQgbGFzZXJzKSwgdGhlbiBzZW5kaW5nIG15IE1hbnRpcy9Sb2NrIGNyZXcgaW4gdG8gc2xheSBldmVyeSBlbmVteSB0cnlpbmcgdG8gY29tZSB0byByZXBhaXIgaXQgKHdoaWxlIGZvY3VzaW5nIGlvbnMvbGFzZXJzIGVsc2V3aGVyZSwgb2J2aW91c2x5KQpIaXMgeW91bmdlciBicm90aGVyLCBKYWNrLCBpcyB0aGUgY29uc2Vuc3VzIGZpcnN0IG92ZXJhbGwgcGljayBmb3IgdGhlIDIwMTkgTkhMIGRyYWZ0IGluIFZhbmNvdXZlci4gSGlzIGZhdGhlciwgSmltLCB3YXMgYSBkZWZlbmNlbWFuIGFuZCB0ZWFtIGNhcHRhaW4gYXQgUHJvdmlkZW5jZSBDb2xsZWdlIGFuZCB0aGVuIHNlcnZlZCBhcyBhbiBhc3Npc3RhbnQgY29hY2guIEhlIHdhcyBhbHNvIGRpcmVjdG9yIG9mIHBsYXllciBkZXZlbG9wbWVudCBmb3IgdGhlIFRvcm9udG8gTWFwbGUgTGVhZnMuCkkgYWxzbyBjaGVjayB0aGUgcHJvcGVydHkgdGF4IHJlY29yZHMgYXMgdG8gd2hvIG93bnMgdGhlIHByb3BlcnR5LiAKQWx0aG91Z2ggdGhlIHdheXMgdGhhdCB0aGUgcGVvcGxlIGFyZSB1c2luZyBjb250cm9sIGRyYW1hcyBtYXkgYXBwZWFyIHRvIHdvcmsgZm9yIHRoZW0gaW4gdGhlIG1vbWVudCwgb2Z0ZW4gaXQgZG9lc24ndCBhY2hpZXZlIHRoZWlyIGdvYWxzIGFuZCBjYXVzZXMgZGFtYWdlIGluIHRoZSByZWxhdGlvbnNoaXAuIFRoZSBmb2xsb3dpbmcgYXJlIGNvbnRyb2wgZHJhbWFzOi4gCkFnYWluLCB0aGlzIHdhcyB0aGUgaGVpZ2h0IG9mIHRoZSByZWNlc3Npb24gd2hlbiBhbGwgb3RoZXIgcHJvcGVydHkgaGFkIHBsdW1tZXRlZCBpbiB2YWx1ZS4uIApMZSBzZXJ2aWNlc2VydmljZSBkZSBsYSBjb21tZXJjaWFsaXNhdGlvbiBkZXMgYXJjaGl2ZXMgZGUgTGEgUHJlc3NlIG9mZnJlIGdhbGVtZW50IGxhIHBvc3NpYmlsaXQgZCdhY3F1cmlyIGRlcyByZXByb2R1Y3Rpb25zIGltcHJpbWVzIGltcHJpbWVzIG91IG51bXJpcXVlcyBkdSBxdW90aWRpZW4gTGEgUHJlc3NlLiAKSXQsIHdlIGFyZSBkb29tZWQ3LiBMb2NhbGl6ZSBhcyBtdWNoIGFzIHBvc3NpYmxlLiBtdXN0IG9wdCBvdXQgb2YgdGhlIGdsb2JhbCBlY29ub215LiBsb2NhbCBmb29kcywgb2YgY291cnNlLCBidXQgYWxzbyBtb3ZlIHlvdXIgbW9uZXkgb3V0IG9mIG1lZ2EgYmFua3MgYW5kIHB1dCBpdCBpbiBhIGxvY2FsIGNyZWRpdCB1bmlvbiwgZ28gc2VlIGxvY2FsIGxpdmUgdGhlYXRlciwgY29uc2lkZXIgYSBzdGF5Y2F0aW9uIGFuZCBzcGVuZCB5b3VyIGxlaXN1cmUgdGltZSBhbmQgbW9uZXkgd2hlcmUgeW91IGxpdmUuIAo5LiBDb29sIHRoZW0gb2ZmLiBPbmNlIHRoZSBmaXJzdCB0cnVlIHNldCBvZiBsZWF2ZXMgYXBwZWFyLCBtb3ZlIHRoZSBzZWVkbGluZ3MgdG8gYSB2ZXJ5IHdlbGwgbGl0IGFyZWEgd2hlcmUgdGhleSBjYW4gYmUga2VwdCBjb29sLiBLZWVwaW5nIHRoZW0ganVzdCBtb2lzdCwgaW4gZ29vZCBsaWdodCBhbmQgYXMgY29vbCBhcyBwb3NzaWJsZSAoMTAgdG8gMTIgQykgd2lsbCB0b3VnaGVuIHRoZW0gdXAgYXMgdGhleSBjb250aW51ZSB0byBzZW5kIG91dCBtb3JlIGxlYXZlcy4KVGhlcmUgaXMgc29tZSBpY2Ugb24gdGhlIHBvbmQgYnV0IHdpdGggdGhlIHdpbmQgYW5kIHJhaW4gd2UgaGFkIGVhcmxpZXIgdGhpcyB3ZWVrIGl0IGlzIG9ubHkgYWJvdXQgMiBpbmNoZXMgdGhpY2suIFRlbXBlcmF0dXJlcyB3aWxsIGJlIGEgYml0IHdhcm1lciB0b21vcnJvdyBhbmQgU2F0dXJkYXkgd2l0aCBwb3NzaWJsZSByYWluIG9uIFNhdHVyZGF5LiAKSW4gVG9yb250by5UaGUgb3duZXIgb2YgUG9rZXJTdGFycyBzYWlkIGl0IHdpbGwgZWFybiBDJDM0NW1sbiB0byBDJDM2NW1sbiB0aGlzIHllYXIsIG9yIEMkMS42NiB0byBDJDEuNzUgcGVyIHNoYXJlLCBleGNsdWRpbmcgc29tZSBpdGVtcy5QcmV2aW91c2x5IGl0IGhhZCBwcm9qZWN0ZWQgcHJvZml0IG9mIEMkMzY3bWxuIHRvIEMkNDE1bWxuLCBvZiBDJDEuNzYgdG8gQyQyIHBlciBzaGFyZS4gRG9sbGFyIGhhcyBjdXQgdGhlIHB1cmNoYXNpbmcgcG93ZXIgb2YgY3VzdG9tZXJzIGJ5IDE5JSwgdGhlIE1vbnRyZWFsLCBRdWViZWMgYmFzZWQgY29tcGFueSBzYWlkIGluIGEgc3RhdGVtZW50IG9uIFR1ZXNkYXkuVGhlIHJlc3VsdHMgd2VyZSBhbHNvIGltcGFjdGVkIGJ5IGEgZGVjaXNpb24gdG8gZGVsYXkgYSBzcG9ydHMgYmV0dGluZyBwcm9kdWN0IHRoYXQgbmVlZGVkIGltcHJvdmVtZW50IGJlZm9yZSBpdHMgcmVsZWFzZSwgdGhlIGNvbXBhbnkgcXVvdGVkIENoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyIERhdmlkIEJhYXpvdiBhcyBzYXlpbmcgaW4gdGhlIHN0YXRlbWVudC5TYWxlcyBmb3IgdGhlIHllYXIgd2lsbCBiZSBiZXR3ZWVuIEMkMS4yOWJuIGFuZCBDJDEuMzRibiwgZG93biBmcm9tIHRoZSBDJDEuNDVibiB0byBDJDEuNTZibiBmb3JlY2FzdCBlYXJsaWVyLCB0aGUgY29tcGFueSBzYWlkLlRoYXQgc3VnZ2VzdHMgYSBtYXhpbXVtIG9mIEMkMzU3LjRtbG4gaW4gZm91cnRoIHF1YXJ0ZXIgc2FsZXMsIGZhbGxpbmcgc2hvcnQgb2YgdGhlIEMkNDI2LjZtbG4gYXZlcmFnZSBlc3RpbWF0ZSBvZiBmaXZlIGFuYWx5c3RzLiAKTGlrZSBvdGhlciBhZCAgZGljdHMgaW4gcmVjb3ZlcnkgTWFsICBjb2xtIGFncmVlZCB0byBiZSBpZGVudGlmaWVkIG9ubHkgYnkgaGlzIGZpcnN0IG5hbWUuIApEb2VzIHRoZSBzYW1lIGtpbmQgb2Ygc3lzdGVtIGV4aXN0IGluIHRoZSBVUz8gaXMgdGhlcmUgYW55IGtpbmQgb2YgYmFzaWMgdW5pZmllZCBtZXRob2Qgb3IgcHJvZ3JhbW1pbmcgdGhlIHZhcmlvdXMgVVMgcG93ZXJsaWZ0ZXJzIHVzZS9kZWZhdWx0IHRvLCBvciBhcmUgdGhlIG51bWJlciBvZiBmZWRzIHRvbyBiaWcgZm9yIHRoaXMgdG8gaGFwcGVuPwpEaWUgU3RybmRlIHNpbmQgbWl0IGRlciBibGF1ZW4gRmxhZ2dlIGF1c2dlemVpY2huZXQgICBkYXp1IGdlaHJ0IG5lYmVuIGVpbmVyIGF1c2dlemVpY2huZXRlbiBXYXNzZXJxdWFsaXR0IHVuZCBlaW5lciBTdHJhbmR3YWNodCBhdWNoIGVpbmUgQXVzc3RhdHR1bmcgbWl0IFNlcnZpY2VlaW5yaWNodHVuZ2VuIHdpZSBXQ3MgdW5kIER1c2NoZW4uIFdocmVuZCBQdWVydG8gZGUgVGF6YWNvcnRlIGF1Y2ggbWl0IGVpbmVtIChrbGVpbmVuKSBjaGFybWFudGVuIGhpc3RvcmlzY2hlbSBLZXJuIChhYmVyIGxlaWRlciBhdWNoIHNlaHIga2xvYmlnZW4gS3N0ZW5zY2h1dHpiYXV0ZW4gdW5kIGVpbmVtIGluIGRpZSBKYWhyZSBnZWtvbW1lbmVuLCBldHdhcyBiaXphcnJlbiBXYXNzZXJwYXJrKSBhdWZ3YXJ0ZXQsIGlzdCBQdWVydG8gTmFvcyBlaGVyIGRhcyB0b3VyaXN0aXNjaGUgR2VnZW5zdGNrIGF1cyBkZXIgUmV0b3J0ZSwgZGFmciBtaXQgUGFsbWVuIGFtIFN0cmFuZCB1bmQgZWluZXIgZnVua2VsbmFnZWxuZXVlbiBiYXJyaWVyZWZyZWllbiBTdHJhbmRwcm9tZW5hZGUgbWl0IFVmbyBMYW5kZXBsYXR6YmVsZXVjaHR1bmcuIApUaGF0IHdoZW4gaXQgZ2V0cyByZWFsbHkgZHJhbWF0aWM6IEJsdW1zdGVpbiBiZXRzIDMgbWlsbGlvbiwganVzdCBlbm91Z2ggdG8gZW50aWNlIGEgYmV0LCBhbmQgSGVzcCByYWlzZXMgdG8gNyBtaWxsaW9uLCBub3Qga25vd2luZyB0aGlzIGhhbmQgaXMgYWxyZWFkeSBvdmVyLiBCbHVtc3RlaW4gcmUgcmFzaWVzIHRvIDE3IG1pbGxpb24sIGFuZCBIZXNwIGdvZXMgYWxsIGluLgpUaGUgZmlyc3Qgam9iIEkgZXZlciBoYWQgd2FzIHdvcmtpbmcgYXMgYSBkZWxpdmVyeSBkcml2ZXIgZm9yIE1yLiBNJ3MsIHRoZSBzaGFkaWVzdCBzYW5kd2ljaCBzaG9wIGluIHRoZSBoaXN0b3J5IG9mIGNyZWF0aW9uLiAKSXQgZmlsbGVkIHdpdGggc2FsdHkgcHVzc2llcyB5b3Ugc2l0IGhlcmUgYW5kIHdoaW5lIGFuZCBjb21wbGFpbiBhbmQgYml0Y2hpbmcgTW9hbmluZyBhYm91dCBpcnJlbGV2YW50IG5vbnNlbnNlLiAKSWwgbmUgbWVudCBwYXMgbidhIHJpZW4gaW52ZW50IG1haXMgbCBuJ2VzdCBwYXMgbGUgcHJvYmxtZS4gCkluc3RlYWQgb2YgV1dJSSBzdHlsZSBhdG9tIGJvbWJzLCBpbiAxOTYyLCBhIGh5ZHJvZ2VuIGJvbWIgd2FzIGRpc3BhdGNoZWQgMjUwIG1pbGVzIGludG8gdGhlIGFpciBmcm9tIHRoZSBQYWNpZmljIE9jZWFuIHRvIHRoZSBTb3V0aGVhc3Qgb2YgSGF3YWlpLiBUaGUgbW9zdCBwb3dlcmZ1bCB3ZWFwb24gaW4gdGhlIHdvcmxkIGF0IHRoZSB0aW1lIHdhcyBnb2luZyB0byBiZSB1c2VkIHRvIHNlZSBpZiBhIHZpdGFsIGFzcGVjdCBvZiBvdXIgc3Vydml2YWwgY291bGQgYmUgbWVzc2VkIHdpdGguLiAKQXQgdGhlIGxlYXN0LCB0aGlzIGlzIGJvdGggcGFydHkgZmF1bHQuIEJpb3dhcmUgaXMgbm90IGFibGUgdG8ga2VlcCBhIGRldmVsb3BtZW50IHNjaGVkdWxlIHRoYXQgaXMgY29tcGV0aXRpdmUgd2l0aCBvdGhlciBzdHVkaW9zLiAKIkJ5ZSB5b3UgaGF2ZSBiZWF1dGlmdWwgZXllcyIgb3IgInRoYXQgZHJlc3MgaW4geW91ciBwaG90byByZWFsbHkgY29tcGxpbWVudHMgeW91LiIgSSBkb24ndCBzdGF5IG9uIHRoZSB0b3BpYyBvZiBoZXIgYXBwZWFyYW5jZS4gClNjaGVkdWxlIFRoZSBzY2hlZHVsZSBvZiBhbiBhZnRlciBzY2hvb2wgdHV0b3IgdmFyaWVzIGJ5IHBvc2l0aW9uLiBWb2x1bnRlZXIgdHV0b3IgcG9zaXRpb25zIG1heSByZXF1aXJlIGFzIGxpdHRsZSBhcyBvbmUgaG91ciBhIHdlZWssIHdoaWxlIHBhaWQgcG9zaXRpb25zIG1heSByZXF1aXJlIGFzIG11Y2ggYXMgMTUgb3IgMjAgaG91cnMgYSB3ZWVrLiBPY2Nhc2lvbmFsIFNhdHVyZGF5IGhvdXJzIG9yIGRheXRpbWUgbWVldGluZ3MgbWF5IGJlIHJlcXVpcmVkLiAKV2hlbiB5b3UncmUgcGxheWluZyBwb2tlciBhdCBob21lLCBzaHVmZmxpbmcgY2FuIGJlIGEgaGFzc2xlLiAKSGUgZ2V0cyB0cmFuc3BvcnRlZCB0byBhIGZhbnRhc3kgcmVhbG0gd2hlcmUgaGUgY2FuIGZlZWwgYWdhaW4gKHdpdGggdHJhZ2ljIGNvbnNlcXVlbmNlcykgYW5kIGEgbG9vb29vb290IG9mIHRoZSBmaXJzdCAzIGJvb2tzIGFyZSB0aGUgcHJvdGFnb25pc3QgY29uc3RhbnRseSByZWZ1c2luZyB0byBhY2NlcHQgdGhlIGZhbnRhc3kgd29ybGQgYmVjYXVzZSBoZSBmZWVscyBoZSBsb3NlIGhpcyByb3V0aW5lIGFuZCBkaXNjaXBsaW5lICh3aXRoIHRyYWdpYyBjb25zZXF1ZW5jZXMpLiAKTWFrZSBzdXJlIHRvIHRlc3QgYWxsIHRoZXNlIGhvbWUgcmVtZWRpZXMgb24gYSBzbWFsbCBhcmVhIGZpcnN0IGFuZCBjaGVjayB3aXRoIHlvdXIgZG9jdG9yIG9yIHNraW4gZG9jdG9yIGJlZm9yZSB0cnlpbmcgYW55IG5hdHVyYWwgaG9tZSByZW1lZHkgaWYgaXQgaW5jbHVkZXMgYW55IGlycml0YXRpbmcgaW5ncmVkaWVudHMuLiAKRGNvbGkgIDEgcG9pbnQgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KU29tZSBvZiB0aGUgZG9vbSBvbmVzIHdlcmUgb2theSwgYnV0IHVsdGltYXRlbHkgSSBmaW5kIHRoZW0gZ3JpbmR5IGFuZCBhZ2FpbnN0IHRoZSB3aG9sZSBmZWVsIG9mIHRoZSBnYW1lLiB0aGUgU3VwZXIgU2hvdGd1biBmaXJpbmcgdHdpY2Ugd2l0aG91dCByZWxvYWRpbmcuCk1pbmUgd2VyZS4gVG4ga29lIG0gdHUgWy4gClRoZSBjb21wcyB0aGV5IHNlbnQgaW4gd2VyZSBzYWxlcyB0aGF0IHdlcmUgc3RpbGwgdW5kZXIgY29udHJhY3Qgb3IgZXZlbiBmcm9tIDIwMTQuIApGb3J0dW5hdGVseSwgdGhlIHRvd24gZG9lcyBwcm92aWRlIHdhbGxldCBmcmllbmRseSBvcHRpb25zIGZvciBzaW5nbGUgc2tpZXJzIHdpbGxpbmcgdG8gZm9yZWdvIHNvbWUgZ2xhbSwgaW5jbHVkaW5nIHVwIHRvIDUwIHBlcmNlbnQgb2ZmIGRpbmluZyByb29tIG1lbnVzIHNpbXBseSBmb3IgZWF0aW5nIGF0IHRoZSBiYXIsIGFuZCBhZmZvcmRhYmxlIHNpbmdsZSBidW5rcyBhdCB0aGUgd2VsbCBtYWludGFpbmVkIFN0LiBNb3JpdHogTG9kZ2UuIAoxIFN1dHRvbiBQbGFjZSBTb3V0aApPdmVydmlldyBmb3IgVGFjb3NGb3JNZQpTbyBpZiB5b3Ugd2VyZSBpbiB0aGUgc2FtZSBib2F0IHdlIHdlcmUgYWJvdXQgdGhlIHJ1bGVzIG9yIHlvdSBqdXN0IHdhbnQgdG8gZW5qb3kgdGhlIENyYXBzIFN5c3RlbSBpbiB5b3VyIG93biBob21lLCB0aGVuIGdldCBhIENvbXBsZXRlIENyYXBzIFNldC4gCkpvdXJuYWxpc3RzIGZldmVyaXNobHkgdGFrZSBkb3duIHRoZWlyIHdvcmRzLCBwZW5zIGZseWluZyBhY3Jvc3Mgbm90ZWJvb2tzIGFzIHdlIHdhaXQgZm9yIHRoZSBxdW90ZSB0aGF0IHdpbGwgbWFrZSB0aGUgZXZlbmluZyBuZXdzIGFuZCB0b21vcnJvdyBwYXBlcnMuIFVubGlrZSBtZSwgbW9zdCBpbiB0aGUgZ3JvdXAgYXJlIGhhcmRlbmVkIGNvdXJ0IHJlcG9ydGVycywga25vd2xlZGdlYWJsZSBhYm91dCBldmVyeXRoaW5nIGZyb20gYXJzb24gdG8gYXJtZWQgcm9iYmVyeSwgYW5kIHZldGVyYW5zIG9mIGFueSBudW1iZXIgb2YgZ3Jpc2x5IG11cmRlciB0cmlhbHMuIApDYW1wZXIgaGFkIHRvIGNvbnNjaW91c2x5IHN0b3AgaGltc2VsZiBmcm9tIGFpbWluZyBoaXMgbWFrZSB0aGVpciBob21lY29taW5nIGV2ZW4gYmV0dGVyIGFuZCB0aGV5J2xsIHByb2JhYmx5IGhpcmUgeW91IG5leHQgdGltZSB0aGV5IGdvIG9uIHZhY2F0aW9uLiBEaXNjb3ZlciB0aGUgaXNsYW5kIEJlY2F1c2Ugb2YgaXRzIHNpemUsIHlvdSBjYW4gZ28gZnJvbSBvbmUgYmFnIHRyYXZlbGluZyBhbG9uZSBJIGhhZG4ndCBjaG9zZW4gb25lIG9mIHRoZSBtYW55IHZhY2FudCBzaW5nbGUgcm9vbXMgaW4gdGhlIGhvdGVsLiBSZWFkIHJldmlld3MgYW5kIHN1bW1hcmllcyBvbiBhIHJlcHV0YWJsZSB0cmF2ZWwgc2l0ZSBvciBuZXdzIHNvdXJjZSB0byBzZWUgd2hpY2ggbG9jYXRpb25zIGFsbCBvZiB0aGUgZmxpZ2h0cywgaG90ZWxzLCByZXN0YXVyYW50cyBhbmQgdHJhbnNwb3J0YXRpb24gYXJvdW5kIHRvd24uIEFuZCBuZWl0aGVyID8/Pz8gPz8/PyA/Pz8/IG9mIHRoZXNlIHR5cGVzIG9mIHJlc29ydHMgd291bGQgYmUgYWxsb3cgeW91IHRvIHB1dCB0b2dldGhlciBhIGNoZWFwIHZhY2F0aW9uIHBhY2thZ2UgYWxsIG9uIHlvdXIgb3duLiBOZXh0LCBlbnRlciB0aGUgbWVzc2FnZSB0byBiZSBzZW50IHRvIHBlb3BsZSBhIGdyb3VwIGxpa2UgU2llcnJhIENsdWIgU2luZ2xlcyBvciB0aHJvdWdoIHlvdXIgYWx1bW5pIGFzc29jaWF0aW9uLiBXaGV0aGVyIHlvdSBhcmUgbG9va2luZyBmb3IgYWxsIGluY2x1c2l2ZSBmYW1pbHkgdmFjYXRpb25zLCBvciBqdXN0IGEgcXVpY2sgcm9tYW50aWMgZ2V0YXdheSBmb3IgeW91IHRoZSBjb21wYW55IHdobyBzdWNjZXNzZnVsbHkgbmVnb3RpYXRlZCBleHRlbmRlZCB2YWNhdGlvbnMuIE5vdCBvbmx5IHdpbGwgeW91IGJlIGFibGUgdG8gcmVudCBvdXQgdGhlIGhvbWUgdG8gb3RoZXJzLCBidXQgeW91IHdpbGwgYnV5aW5nIGFuZCBzcGVuZCBlbm91Z2ggdGltZSB0aGVyZSB0byBsZWFybiBhYm91dCBuZWlnaGJvcmhvb2RzIGFuZCBhbWVuaXRpZXMuCkonYWkgZCdhYm9yZCBnb3QgbGUgcGFpbiB0b3V0IHNldWwgcG91ciBsJ2FwcHJjaWVyIGRhbnMgc2Egc3RyaWN0ZSAibnVkaXQiLCBhdmFudCBkZSBsYSBzYXZvdXJlciBhdmVjIGR1IGJldXJyZS4gRW4gZmFpdCwgaWwgcydlc3QgcnZsIHRvbm5hbnQgZCdxdWlsaWJyZSBldCBtbWUgZGUgbW9kZXN0aWUgOiBpbCBuZSBwcnNlbnRlIG5pIHVuZSBmb3J0ZSBhY2lkaXQgY29tbWUgZGUgbm9tYnJldXggcGFpbnMgYXUgbGV2YWluLCBuaSB1bmUgc2F2ZXVyIG5ldHRlbWVudCBzYWxlLCBuaSB1bmUgY3JvdGUgdHJvcCBjcm91c3RpbGxhbnRlIG91IHRyb3AgY3VpdGUgcXVpIGZlcmFpdCBvdWJsaWVyIGxhIG1pZS4gCkZvciB0aGUgZmlyc3QgdGltZSwgTG9kZ2luZyBFY29ub21ldHJpY3MgKExFKSBpcyByZWxlYXNpbmcgaXRzIEZvcmVjYXN0IGZvciBOZXcgSG90ZWwgT3BlbmluZ3MgZm9yIDIwMTIsIHdpdGggNjcxIGhvdGVscy82NCw5Mzggcm9vbXMgcHJvamVjdGVkIHRvIGNvbWUgb25saW5lLCBhIHJhdGUgbmVhcmx5IGxldmVsIHRvIHRoYXQgZm9yZWNhc3RlZCBmb3IgMjAxMS4gTEUgaGFzIGFsc28gbWFkZSBtaW5vciByZXZpc2lvbnMgdG8gaXRzIEZvcmVjYXN0IGZvciAyMDEwIGFuZCAyMDExLCB3aXRoIGEgeWVhciBlbmQgdG90YWwgb2YgNzA1IGhvdGVscy83OSw3MDEgcm9vbXMgb3BlbmluZyBpbiAyMDEwIGFuZCA2NzMgaG90ZWxzLzY0LDk1OSByb29tcyBpbiAyMDExLi4gCkwgZGl0IHF1IHZhIHJlcGFzc2VyLjIxIGggMjAgVW4gYXV0cmUgY2xpZW50IHNlIHByc2VudGUgIGxhIHBvcnRlLiAKIkhlJ2QgcmFuIG91dHRhIG1vbmV5LiAKSGVuZGVyc29uIHBsYWNlcyBzdHJpY3RlciByZWd1bGF0aW9ucyBvbiBtYXNzYWdlIHBhcmxvcnMKWWVhaCwgbm8uIApBIGxvdCBvZiB0aGUgdGltZSBJIHNsZXB0IG9uIHRvcCBvZiBteSBzbGVlcGluZyBiYWcgd2l0aCBhIHNoZWV0LCBvciBqdXN0IG9wZW5lZCB0aGUgYmFnLiBUaGVyZSB3ZXJlIGRheXMgd2hlbiBpdCByYWluZWQsIGFuZCByYWluZWQgYSBsb3QsIGJ1dCB0aGF0IGlzIGp1c3QgdGhlIG5hbWUgb2YgdGhlIGdhbWUgb3ZlciB0aGVyZS4gCkFuZCB3ZSBub3QgImxvc2luZyB3YXJyaW9ycyBjYXVzZSBldmVyeW9uZSBub3dhZGF5cyBpcyB0b28gc29mdC4iIEl0IGRvZXNuIHRha2Ugc29tZW9uZSB0byBiZSBpbiB0aGUgYXJteS4gVmlydHVhbGx5IGFueW9uZSBjYW4gYmUgdHJhaW5lZCB0byB1c2UgYSBndW4gYW5kIGhhdGUgcGVvcGxlIHRoZXkgbmV2ZXIgbWV0LiBUaGF0IHNwZWNpZmljIGlkZWEgaXMgcGFydCBvZiB0aGUgcmVjcnVpdG1lbnQgcHJvY2VzczogIkRvIHlvdSBoYXZlIHdoYXQgaXQgdGFrZXM/IgpJIGNhbiBsaWUgdG8gbXlzZWxmIGVpdGhlciwgY2hpbGRyZW4gYXJlbiB0aGUgb25seSB0aGluZyB0aGF0IEkgY29uY2VybmVkIGFib3V0LiBJIGhhdmUgaGFkIGEgbWFqb3Igcm9sZSBpbiB0aGUgaGFyZCBwYXJ0IG9mIGhpcyBzdWNjZXNzIGFuZCBvdXIgbGlmZXN0eWxlIGFuZCBJIHdhbnQgdG8gYmUgd2l0aCBoaW0gZm9yIHRoZSBmdW4gcGFydC5JIHdvdWxkIGFsc28gYmUgY29uY2VybmVkIGFib3V0IHRoZSB3YXkgaGUgc3BlbmRpbmcgbW9uZXksIGJ1dCB0aGF0IGJlc2lkZXMgdGhlIHBvaW50LiAKQnV0IHRoZW4gdGhlIDIwdGggY2VudHVyeSBzYXcgdGhlIGludHJvZHVjdGlvbiBvZiBjb21tZXJjaWFsbHkgbWFudWZhY3R1cmVkIG5vbnN0aWNrIHNraWxsZXRzLCB3aGljaCByZWx5IG9uIGEgY2hlbWljYWwgYmFzZWQgY29hdGluZy4gCkkgcmVhbGl6ZWQgaXQgZG9lcyBsb29rIGxpa2UgdGhhdCBhZnRlciB0aGUgb3RoZXIgZ3V5IHRoYXQgcmVwbGllZCAvdS9JbVdhZGVXaWxzMG4sIHBvaW50ZWQgb3V0IHRoZSBzaW1pbGFyaXRpZXMgd2l0aG91dCBiZWluZyBhIGNvbXBsZXRlIGFzcyBhYm91dCBpdCBsaWtlIHlvdSBkaWQuSSBhbGwgZm9yIHRhbGtpbmcgYWJvdXQgdGhpbmdzIGxpa2UgdGhpcywgYnV0IEkgZG9uIHRoaW5rIGFueW9uZSB3b3VsZCByZXNwb25kIHdlbGwgdG8geW91ciBhdHRpdHVkZS4gSWYgeW91IHdhbnQgdG8gaGF2ZSBjb25zdHJ1Y3RpdmUgZGlzY3Vzc2lvbnMgb24gc3ViamVjdHMgbGlrZSB0aGlzLCBkb24gYmUgYW4gYXNzaG9sZS5JIGhhdmUgbm8gcHJvYmxlbSBhZG1pdHRpbmcgSSB3YXMgd3JvbmcsIGFuZCBJIGRvIGFncmVlIGl0IGxvb2tzIGxpa2Ugd2hhdCB5b3Ugb3JpZ2luYWxseSBwb2ludGVkIG91dC4gClJlbWVtYmVyOiBUaGUgU2Nob29sIGhhcyB0aGUgb3B0aW9uIHRvIHByb21vdGUgb3IgTm90IFByb21vdGUgYSBsZWFybmVyIGluIG1lbnUgMTIuNy4xOC4gQlVUIHRoaXMgY2FuIG9ubHkgYmUgZG9uZSBpZiBhIHJlYXNvbiBpcyBnaXZlbiBpbiB0aGUgY29tbWVudHMgY29sdW1uIGZyb20gYSBzZXQgZHJvcGRvd24gbWVudSBsaXN0IG9mIGNvbW1lbnRzLgpJIGhhZCBubyBtb25leSwgbm8gZm9vZCBoZSB3YXMgbm8gaGVscCBjYXVzZSBoZSB3YXMgcGFydHlpbmcgd2l0aCBmcmllbmRzIHdoaWxlIGkgd2FzIG1hbG5vdXJpc2hlZCBhbmQgY291bGRudCBldmVuIHJ1biBtZSB0byBhIGhvc3BpdGFsLiBXZWxsIGkgdG9vayBoaW0gYmFjayBhbmQgYXQgdGhlIGFsaWdodCBjaGFuY2UgaSB3b3VsZCBhc2sgaGltIHRvIGFjdHVhbGx5IGdldCB1cCB3aXRoIG91ciAyIHlvIGJlY2F1c2UgbXkgZGlzZWFzZSB3YXMgYWN0aW5nIHVwIGkgY29tZSBkb3duc3RhaXJzIHRvIG15IHRvZGRsZXIgY2hld2luZyBvbiB0aGUgc2hhcnAgcGFydCBvciBlbXB0eSBiZWVyIGJvdHRsZXMuIApQb2tlciBpbiBWZWdhcyBpbiB0aGUgc3VtbWVyIGtpbmRhIHN1Y2tzIGZvciBtaWQgc3Rha2VzLCB0b28gbWFueSBwcm9zIGluIHRvd24uCkZvciBleGFtcGxlLCBtYW55IHVzZXJzIG9mIFlhaG9vISBoYXZlIHJlY2VudGx5IGJlZW4gYW5ub3llZCBieSB0aGVpciBHZW9DaXRpZXMgd2Vic2l0ZXMgbXlzdGVyaW91c2x5IGRpc2FwcGVhcmluZyBhbmQgYmVpbmcgcmVwbGFjZWQgYnkgJ1dlIGNhbm5vdCBmaW5kIHRoZSB3ZWJwYWdlIHlvdSBhcmUgbG9va2luZyBmb3InIG1lc3NhZ2VzLiAKQXQgJDYuNyBCaWxsaW9uIGRvbGxhcnMgYSBtb250aCwgQWZnaGFuaXN0YW4gb3VnaHQgdG8gYmUgYSBzb3VyY2Ugb2YgcHJpZGUgYW5kIHByZWp1ZGljZSBmb3IgdGhlc2UgeW91bmcgbWVuLiBsaWtlIHRoZSBnYW1lIG9uIHRoZSBUViwgZXZlcnlvbmUsIGV2ZW4gdGhlIHBlb3BsZSBydW5uaW5nIHRoZSB3YXIga25vdyBpdCBjYW5ub3QgYmUgd29uLiB0ZW5zIG9mIHRob3VzYW5kcyBvZiBjYXN1YWx0aWVzIChldmVuIHRob3VnaCB0aGUgVVMgbWVkaWEgdXN1YWxseSBvbmx5IGNvdW50cyBtaWxpdGFyeSBjYXN1YWx0aWVzLCB0aGVyZSBhcmUgZmFyIG1vcmUgQWZnaGFuIGNpdmlsaWFucyBraWxsZWQgZXZlcnkgZGF5IHRoYW4gc29sZGllcnMpLCB0aGlzIGlzIG5vdCBhIHdhciB0byBiZSBjZWxlYnJhdGVkLgpbV11oZW4gaWRlbnRpdHkgaXMgYW4gaXNzdWUgYXQgdHJpYWwgYW5kIHRoZSBwb2xpY2UgcGVybWl0IHRoZSBkZXN0cnVjdGlvbiBvZiBldmlkZW5jZSB0aGF0IGNvdWxkIGVsaW1pbmF0ZSB0aGUgZGVmZW5kYW50IGFzIHRoZSBwZXJwZXRyYXRvciwgc3VjaCBsb3NzIGlzIG1hdGVyaWFsIHRvIHRoZSBkZWZlbnNlIGFuZCBpcyBhIGRlbmlhbCBvZiBkdWUgcHJvY2Vzcy4KWW91IGVzc2VudGlhbGx5IG5lZWQgdG8gbGFuZCBhIGdyZW5hZGUgd2l0aGluIGhhbGYgYSBmb290IHRvIGtpbGwuIApJbnNnZXNhbXQgODYgWmltbWVyIGVyd2FydGVuIGRpZSBHc3RlIGRlcyBiZXN0ZWhlbmRlbiBTdGVpZ2VuYmVyZ2VyIENlY2lsIEhvdGVsIGFuIGRlciBNaXR0ZWxtZWVya3N0ZS4gCkhpcyBsYXRlc3QgaG90ZWwgb3BlbmluZyB3YXMgQnJvd24ncyBpbiBNYXlmYWlyLCBhY3F1aXJlZCAxOCBtb250aHMgYWdvIGFuZCBleHRlbnNpdmVseSByZWZ1cmJpc2hlZCBzaW5jZS4gSXQgbGF1bmNoZWQgd2l0aCBtdWNoIHJhenptYXRhenogYW5kIEJhcm9uZXNzIFRoYXRjaGVyIGFzIGhpcyBndWVzdCBvZiBob25vdXIuIApUaGVyZSBhcmUgdHdvIG1haW4gbWV0aG9kczogdGhlb3JldGljYWwgYW5kIGVtcGlyaWNhbC4gVGhlIGZpcnN0IG9mIHRoZXNlIGlzIHVzZWQgd2hlbiB0aGVyZSBpcyBhIHJlbGF0aXZlbHkgc2ltcGxlIG1vZGVsZm9yIHRoZSBwb3NzaWJsZSBvdXRjb21lcyBvZiBhIHRyaWFsLiAKV29tZW4gZXhwb3NlZCB0byB0aGUgZmFtaW5lIGR1cmluZyBtaWQgIHRvIGxhdGUgZ2VzdGF0aW9uIGhhZCBiYWJpZXMgd2l0aCBzaWduaWZpY2FudGx5IHJlZHVjZWQgYmlydGggd2VpZ2h0cy4gCkFza2VkIHdoYXQgc2lnbnMgb2YgY2VsbCBwaG9uZSBhY3Rpdml0eSBoaXMgb2ZmaWNlcnMgYXJlIGxvb2tpbmcgZm9yLCBQcm9uZ2VyIHNhaWQsICJJdCdzIGxpa2UgcG9rZXI7IGl0J3MgJ3RoZSB0ZWxsLCcgZXZlcnlvbmUgaGFzIG9uZSBhbmQgZHJpdmVycyB1c2luZyB0aGVpciBwaG9uZXMgaGF2ZSBpdC4KQWZ0ZXIgdGhlIGZpcnN0IDEwIGlzIGRlYWx0LCB0aGVyZSBhcmUgNTEgY2FyZHMgbGVmdCBpbiB0aGUgZGVjaywgYW5kIDMgZGlmZmVyZW50IDEwJ3MuIApTZWUsIG15IHRob3VnaHQgcHJvY2VzcyByZXZvbHZlZCBhcm91bmQgdGhlIGZhY3QgdGhhdCBpZiB5b3UgaGF2ZSBwcm9mZXNzaW9uYWwgbG9va2luZyBjaGlwcywgdGhlbiB5b3UgbmVlZCBhIHByb2Zlc3Npb25hbCBsb29raW5nIHBsYWNlIHRvIGtlZXAgdGhlbS4gTmVlZGxlc3MgdG8gc2F5LCB3aGVuIHdlIHByZXNlbnRlZCBpdCB0byB0aGUgY2h1cmNoIHRoZXkgd2VyZSBtb3JlIHRoYW4gcGxlYXNlZCB3aXRoIHRoZSByZXN1bHRzLi4gCkl0IHdhcyBkZXNpZ25lZCBieSBOZXcgWW9yayBiYXNlZCBhcmNoaXRlY3QgUGV0ZXIgTWFyaW5vLCBhbmQgaXQgaGFzIGEgc2VwYXJhdGUgYXJlYSB0byBleGNoYW5nZSBzbG90IHRpY2tldHMgZm9yIGRvbGxhcnMsIHByaXZhdGUgYmF0aHJvb21zLCBhIGZ1bGwgc2VydmljZSBkaW5pbmcgYXJlYSBhbmQgYSBzdGFmZiBvZiBidXRsZXJzIHRvIGNhdGVyIHRvIGV2ZXJ5IGd1ZXN0J3MgbmVlZHMuLiAKS25vdyB0aGUgc2VsbGVyJ3Mgc2l0dWF0aW9uOiBTZWUgaWYgeW91IGNhbiBmaW5kIG91dCB3aHkgdGhlIHNlbGxlciB3YW50cyB0byBtb3ZlLiBJZiBoZSBvciBzaGUgaGFzIGFscmVhZHkgcHVyY2hhc2VkIGEgbmV3IGhvbWUsIHRoZXkgbWlnaHQgYmUgYW54aW91cyB0byBtYWtlIGEgc2VsbCBhbmQgbW9yZSB3aWxsaW5nIHRvIGxvd2VyIHRoZSBhc2tpbmcgcHJpY2UuIFlvdSBtaWdodCBldmVuIGJlIGFibGUgdG8gYXNrIHRoZSBzZWxsZXIgdG8gY292ZXIgdGhlIGNsb3NpbmcgY29zdHMuLiAKVGhpcyBhY3Rpb24gZHJhd3MgdGhlIGNhcmRzIGluIHRoZSB2aWRlbyBwb2tlciBtYWNoaW5lLiBBdCB0aGlzIHBvaW50LCB0aGUgcGxheWVyIGhhcyBhbiBvcHRpb24gdG8ga2VlcCBvciBleGNoYW5nZSBvbmUgb3IgbW9yZSBjYXJkcyBmb3IgYSBuZXcgb25lIGZyb20gdGhlIGRlY2sgb2YgY2FyZHMuIApTdHUgd2FzIGFsc28gYSBwYXNzaW9uYXRlIGFuZCB0YWxlbnRlZCBjb29rIGFuZCB3b3JrZWQgYXMgYSBwcml2YXRlIGNoZWYgZm9yIHNldmVyYWwgZm9ydHVuYXRlIGZhbWlsaWVzIGluIHRoZSBBc3BlbiBhcmVhLiBPbmUgb2YgaGlzIGZhdm9yaXRlIHBhc3RpbWVzIHdhcyBwbGF5aW5nIG9ubGluZSBwb2tlciwgYXMgaGUgYWx3YXlzIGhhZCBhIGtlZW4gc2Vuc2Ugb2YgYm90aCBvZGRzIGFuZCBtb25leS4gSGUgd2FzIGFsc28gZ2FtZSBmb3IgaGVscGluZyBoaXMgd2lmZSBTdGFjZXkgdHJhaW4gZm9yIHJ1bm5pbmcgbWFyYXRob25zLi4gCkVkd2luc2hhcCB1ClRoZSA0IHN0YXIgV2VzdGdyb3ZlIEhvdGVsIGlzIHNpdHVhdGVkIGluIHRoZSBiZWF1dGlmdWwgdmlsbGFnZSBvZiBDbGFuZSBpbiBDb3VudHkgS2lsZGFyZS4gCkEgZmV3IHllYXJzIGFnbyBhIGZyaWVuZCBhbmQgSSB3ZW50IHRvIGEgbGFyZ2UgbXVzaWMgZmVzdGl2YWwgbG9jYXRlZCBpbiBhIHZlcnkgc21hbGwgZG93biwgYm9ycm93ZWQgYSB0ZW50IGZyb20gYW5vdGhlciBmcmllbmQuIEdvdCB0byB0aGUgZmVzdGl2YWwgYW5kIGZyaWVuZCBmb3Jnb3QgdG8gdGhyb3cgaW4gdGhlIHBvbGVzIHNvIHRoYXQgdGVudCB3YXMgdG9hc3QuIApUaGUgYXZlcmFnZSBPc3dlc3RyeSBkaXNhYmlsaXR5IGluZGV4IGltcHJvdmVkIGZyb20gNTglIHRvIDE1JS4gVm9sdW1ldHJpYyBhbmFseXNpcyBvZiBzZXJpYWwgTVJJIHNjYW5zIGZvdW5kIGFuIGF2ZXJhZ2UgcmVkdWN0aW9uIG9mIDY0JSBpbiBkaXNjIHNpemUuIApUaHJvdyBvbiBhIGxpdHRsZSBtdXNpYywgc2h1ZmZsZSB0aGUgZGVjayBhbmQgeW91J3JlIGFsbCBzZXQgZm9yIGEgZnVuIG5pZ2h0IHdpdGggeW91ciBnaXJsZnJpZW5kcy4gCkkgdGhpbmsgeW91IHdpbGwgZmluZCB0aGF0IHRoZXJlIGlzIHZhbGlkaXR5IHRvIGNyaXRpY2lzbXMgb2YgQ0FHVy5PcnBoaWNfVGhyZW5jaCAgMSBwb2ludCAgc3VibWl0dGVkIDE2IGhvdXJzIGFnb1JveSBTcGVuY2VyIHdobyBhbHNvIGJlbGlldmVzIGluIGludGVsbGlnZW50IGRlc2lnbj8gUmljaGFyZCBMaW5kemVuIHdobyBpc24gY29udmluY2VkIGNpZ2FyZXR0ZXMgY2F1c2UgbHVuZyBjYW5jZXI/SW4gYW55IGNhc2UsIHlvdSBzZWVtIHRvIGhhdmUgbWlzdW5kZXJzdG9vZCB3aGF0ICJzY2llbnRpZmljIGNvbnNlbnN1cyIgbWVhbnMuIApTaGlmdHMgaW52b2x2ZWQgdHdvIGhvdXJzIG9uIHBvc3QsIGZvbGxvd2VkIGJ5IGF0IGxlYXN0IGFuIGhvdXIgb2ZmIHBvc3QuICJZb3UgZGlkbid0IHdvcmsgZm9yIGEgbGl2aW5nLCIgaGUgc2FpZC4gCkh5ZHJvbWFjayAgMSBwb2ludCAgc3VibWl0dGVkIDcgZGF5cyBhZ28KV2hhdCBjYW4gZWFzaWx5IGNvc3QgJDgwMDAgaW4gdGhlIFVTIGNhbiBiZSBoYWxmIHRoYXQgcHJpY2UsIGluY2x1ZGluZyBhaXJmYXJlIGFuZCBhICJ2YWNhdGlvbiwiIHNvbWV3aGVyZSBlbHNlLiAKT25lIG9mIHRoZSBzdGFuZGFyZCB3YXlzIHRvIGJlYXQgZG93biBhIFZTRCBmbGVldCBpcyB0byBvdXQgZmxhbmsgaXQsIHNvIHRoYXQgeW91IGNhbiBmb2N1cyB5b3VyIGZpcmUgb24gb25lIGZsYW5rIGFuZCBkZW55IHN1cHBvcnRpbmcgZmlyZSBmcm9tIHRoZSBvcHBvc2l0ZS4uIApJIGhhdmVuJ3QgaGFkIGZsYWt5IHNraW4gc2luY2UgSSBzdGFydGVkIHVzaW5nIGl0IGFuZCBpdCBnb2VzIG9uIHdlbGwgdW5kZXIgYm90aCBteSBzbGVlcGluZyBwYWNrcy90aGUgY2VyYXZlIGhlYWxpbmcgb2ludG1lbnQuIApUaGVyZSB3YXMgbm8gc2luZ2xlIFVLIHJlY29yZCBjaGFydCB1bnRpbCB0aGUgbWlkIDE5NjBzLiBXaGlsZSB0aGUgYWJvdmUgc3RhdGVtZW50IGlzIHRydWUsIHRoZXJlIHdlcmUgaW5kaWNhdG9ycyBhcyB0byBCcml0aXNoIHNvbmcgcG9wdWxhcml0eSBkYXRpbmcgZnJvbSB0aGUgMTkzMHMuIApOZXh0IHRpbWUgeW91IG1lZXQgYSBUcnVtcCB2b3RlciBpbiByZWFsIGxpZmUsIHRyeSBhc2tpbmcgYWJvdXQgd2hhdCB0aGV5IG5lZWQsIGFuZCBhY3R1YWxseSBoZWFyIHRoZW0uIFlvdSB3aWxsIGJlIHN1cnByaXNlZCB0byBmaW5kIG1vc3QgKG1vc3QpIGFyZSByZWFsIHBlb3BsZSB3aG8gaGF2ZSBmb3VuZCB0aGVpciB2aWV3cyB0aHJvdWdoIG1pc2VkdWNhdGlvbiBhbmQgaW5kb2N0cmluYXRpb24sIHRocm91Z2ggbm8gZmF1bHQgb2YgdGhlaXIgb3duLiBJZiB5b3UgcmVmdXNlIHRvIHdhdGVyIGEgaG91c2VwbGFudCwgZG8geW91IGJsYW1lIHRoZSBoaXVzZXBsYW50IGZvciBkeWluZz8gTG92ZSBhbmQgdW5kZXJzdGFuZGluZyBpcyB0aGUgb25seSB0aGluZyB0aGF0IGJyaW5ncyB0aGVtIGJhY2sgdG8gdGhlIHdvcmxkIG9mIHJhdGlvbmFsIGRlY2lzaW9uIG1ha2luZy4gSGF0ZSBvbmx5IHBvbGFyaXplcyB1cywgYW5kIGZlZWRzIHRoZWlyIGV4dHJlbWlzbS4KSW4gMjAwOCBpdCB3YXMgbGl0ZXJhbGx5IGZsYXR0ZW5lZCBieSBodXJyaWNhbmUgSWtlIGFuZCBpcyBzdGlsbCBzdHJ1Z2dsaW5nIHRvIHJlYnVpbGQsIGFuZCBtYW55IHJlc2lkZW50cyBsb3N0IHRoZWlyIGJ1c2luZXNzZXMgYW5kIHdlcmUgZm9yY2VkIHRvIG1vdmUgZWxzZXdoZXJlLiAKQW4gYXZpZCBzcG9ydHNtYW4sIE1yLiAKRGVhbGVyIGdvZXMgdG8gamFpbCBvciBnZXRzIGtpbGxlZCwgdGhlcmUgd2lsbCBiZSBhIG5ldyBndXkgc2VsbGluZyB0byBoaXMgb2xkIGN1c3RvbWVycyBiZWZvcmUgaGlzIG9iaXR1YXJ5IGlzIHJ1bi4gClRoZSBnYW1lIG9mIGJpbmdvIGlzIG5vdCBkZW1hbmRpbmcgb24gdGhlIHBsYXllci4gSW4gdGhlIGxhbmQgYmFzZWQgdmVyc2lvbiwgcGxheWVycyBoYXZlIHRvIG1hbnVhbGx5IGNoZWNrIGFuZCBtYXJrIHRoZSBjYXJkcyBhbmQgaWRlbnRpZnkgYW5kIGNhbGwgb3V0IGJpbmdvLiAKWW91IHdvdWxkIG5lZWQgYSBzdGFmZiBvZiBhIGZldyBodW5kcmVkIGV4cGVydHMgYXQgZXZlcnkgaW50ZXJuYXRpb25hbCBhaXJwb3J0IGFuZCBib3JkZXIgY3Jvc3NpbmcgaW4gdGhlIGNvdW50cnkuIApBSSBzeXN0ZW0gYmVhdHMgaHVtYW4gcHJvZmVzc2lvbmFscyBhdCBwb2tlciBmb3IgZmlyc3QgdGltZQpJIGRvIGFncmVlIHdpdGggaGltIHRoYXQgbWFzc2FnZSBhbmQgbW92ZW1lbnQgdGhlcmFweSBkb2VzbiBhbHdheXMgYWRkcmVzcyB0aGUgcm9vdCBjb3JlIG9mIHRoZSBwYWluIHByb2JsZW0uIApGb2xsb3dpbmcgb24gZnVydGhlciBmcm9tIHRoaXMsIHdlIGNhbiBvbmx5IHJlYWxseSBjb21wYXJlIHRoZSBtb2RlcmF0ZSBwb3NpdGlvbiB0byBhYnNvbHV0ZSBleHRyZW1lIHN0YW5jZXMsIGFuZCB3aGF0IGlzIHJlYWxseSB0aGUgcG9pbnQgb2YgdGhpcz8gQWZ0ZXIgYWxsIHdlIGFsbCBrbm93IHRoYXQgdGhlIGNvbXBsZXRlbHkgZnJlZSBhbmQgdW5mZXR0ZXJlZCBtYXJrZXQsIGFuZCB0aGUgMTAwJSBzdGF0ZSBjb250cm9sbGVkIGVjb25vbXkgYXJlIGJvdGggdW5kZXNpcmFibGUuIAoiVGhlcmUgYXJlIHNvbWUgc2ltcGxlIHdheXMgb3BlcmF0b3JzIGNhbiByZWR1Y2Ugc29tZSBvZiB0aGUgaGFybSBpbiB0aGUgY29tbXVuaXR5LiIKSSBwbGF5IGEgdG9uIG9mIHBva2VyIG9uIHRoaXMgZ2FtZSBhbmQgaGVyZSBpcyBteSB0YWtlLiAKTmVpdGhlciB3ZXJlIHRoZSBwb2xrYSBkb3QgcGFqYW1hcyBsYXN0IHllYXIuIFRoaW5rIDE4IGthcmF0cy4gT3IsIGlmIGZ1bmRzIGFyZSBzaG9ydCwgSSBhIHN1Y2tlciBmb3IgdGhlIHdyaXR0ZW4gd29yZC4gClRoZSBmaXJzdCBkcmFtIGZyb20gYSBib3R0bGUgaXMgdXN1YWxseSBub3QgYXMgZ29vZCBhcyBhZnRlciB0aGUgYm90dGxlIGhhZCBhIGNoYW5jZSB0byBveGlkaXplIGEgYml0LiAKVm91cyBwb3V2ZXogYXBwcmVuZHJlIGxlcyByZ2xlcyBkdSBwb2tlciBlbiB1biBqb3VyIG91IHVuIGFuLCBtYWlzIGlsIHZvdXMgZmF1ZHJhIHVuZSB2aWUgZW50aXJlIHBvdXIgbWFpdHJpc2VyIGxlIGpldS4gClVzdWFsbHksIHdlIGtub3cgb3VyIGRvZyBpcyBmZWVsaW5nIGdvb2Qgd2hlbiBzaGUgY2hvd3MgZG93biBvbiBoZXIgZm9vZC4gSXQncyBub3QgdW5oZWFyZCBvZiwgdGhvdWdoLCBmb3IgaGVyIHRvIHNraXAgYSBtZWFsIG9yIHR3bywgZXNwZWNpYWxseSBpZiBpdCdzIGhvdCBvdXRzaWRlLiBBbnkgbW9yZSB0aGFuIHRoYXQgaXMgc29tZXRoaW5nIHRvIGJlIGNvbmNlcm5lZCBhYm91dC4gCisuIEVib29rIEJ1eSAkMTEuOTkuIEFwciAyNSwgMjAxMiAyODggUGFnZXMgLiAKWU1DQSBpcyBhbHNvIGRvd250b3duLCBwcm9iYWJseSBqdXN0IGFzIGNsb3NlIGFzIE1hcmllIFJlZWQsIGJ1dCBJIG5ldmVyIHVzZWQgdGhlaXIgcG9vbHMuIApXaXRoIHRoZSBleGNlcHRpb24gb2YgcG9rZXIsIGFsbW9zdCBhbGwgZ2FtZXMgaW4gYSB0eXBpY2FsIGNhc2lubyBhcmUgc3RhY2tlZCBhZ2FpbnN0IHRoZSBwbGF5ZXIsIGFuZCBpbiB0aGUgbG9uZyBydW4gdGhlIGNhc2lubyBhbHdheXMgY29tZXMgb3V0IGFoZWFkLiAKU2lnbiB1cCBhbmQgc3RhcnQgYmV0dGluZyB3aXRoIFRpdGFuIEJldCBhbmQgeW91IHdpbGwgYmUgbWFraW5nIHlvdXIgZmlyc3Qgc3RlcCB0b3dhcmRzIGdldHRpbmcgeW91ciBmcmVlIGJldC4gQWZ0ZXJ3YXJkcyB5b3Ugd2lsbCBuZWVkIHRvIHBsYWNlIDUgYmV0cyBhdCBvZGRzIG9mIDIuMCBvciBtb3JlIGluIHRoZSBhbW91bnQgb2YgMTAgZWFjaCBhbmQgeW91IHdpbGwgYmUgZ2l2ZW4gMTAgaW4gdGhlIGZvcm0gb2YgYSBmcmVlIGJldC4gWW91IGNhbiB1c2UgdGhlIGZyZWUgYmV0IGhvd2V2ZXIgeW91IHdhbnQuClRoZSBwZW9wbGUgYXQgTk9NIGFyZSwgb2YgY291cnNlLCB3YXkgaGlwIHNvIHRoZXkgdGVybWVkIHRoaXMgbWFyY2ggMk00TSAoMiBNaWxsaW9uIEZvciBNYXJyaWFnZSkgYW5kIGhhdmUgc2V0IHVwIGEgZmFjZWJvb2sgcGFnZSB0aGF0IHlvdSBjYW4gam9pbiBhcyBwYXJ0IG9mIHlvdXIgc3ltYm9saWMgY29tbWl0bWVudCB0byB0aGUgY2xlYW5zaW5nIHJpdHVhbC4uIApJIGNvbnRpbnVlZCB0byBsb3NlIG1vbmV5IGFuZCBoYWQgYSBwYXJ0aWN1bGFybHkgYmFkIG1vbnRoLiBJIHdhcyBkb3duIHRvIGFib3V0IDEway4gT25lIG9mIG15IHJvb21tYXRlcyBoYWQgYmVlbiBzdWdnZXN0aW5nIGZvciBtb250aHMgdGhhdCBJIGtlZXAgc29tZSBlbXB0eSBoZWFkcyB1cCB0YWJsZXMgb3BlbiB3aGlsZSBJIHBsYXllZCA2IG1heCBhbmQgaWYgYW55b25lIHNhdCBtZSwgdG8gcGxheSB0aGVtIGFuZCB0aGF0IGl0IHdvdWxkIGRlZmluaXRlbHkgYmUgZWFzaWVyIHRoYW4gcGxheWluZyBvbmx5IDYgbWF4LiBJIGhhZCBiZWVuIHVud2lsbGluZyB0byBkbyB0aGF0IGJlY2F1c2UgSSB0aG91Z2h0IEhVIHdhcyBoYXJkZXIgYW5kIEkgd2FzIGFscmVhZHkgbG9zaW5nIHNvIG11Y2gsIEkgZGlkbiB3YW50IHRvIHJpc2sgdHJ5aW5nIHRvIGxlYXJuIGEgbmV3IGdhbWUgYW5kIGxvc2UgZXZlbiBmYXN0ZXIuIEkgaGFkIG5vIGNob2ljZSBub3csIHRob3VnaC4gSSB3YXMgZGVzcGVyYXRlIGFuZCBJIG5lZWRlZCB0byBkbyBzb21ldGhpbmcsIGFueXRoaW5nIGF0IGFsbC4KSGFkIGEgZ3V5IGZyb20gYSB0ZW1wIGpvYiBpIHdhcyBhdCB0aGF0IG1ha2VzIHBsYXN0aWMgbWVkaWNhbCBwYXJ0cywgcHJldHR5IHNpbXBsZS4gVGFrZSB0aGUgcGFydCBvdXR0YSB0aGUgbWFjaGluZSBhbmQgcGFjayB0aGVtIG9yIGNsaXAgb2ZmIGV4dHJhIGJpdHMgaWYgbmVlZGVkLiBJIHdhcyByZWFsbHkgZ29vZCBhdCBpdCB0aGF0IEkgdHJhaW5lZCBhbG90IG9mIHBlb3BsZSB0aGF0IGNhbWUgaW4gZnJvbSB0aGUgYWdlbmN5KG5pZ2h0IHNoaWZ0IGpvYiwgcGVvcGxlIGRvbnQgc3RpY2sgYXJvdW5kKS4gCkZvdXIgb2YgYSBraW5kLiBUaGlzIHBlcnRhaW5zIHRvIGEgc2V0IG9mIGNhcmRzIHRoYXQgc2hhcmUgdGhlIHNhbWUgcmFuay4gT2J2aW91c2x5LCBlYWNoIG9mIHRoZW0gd2lsbCBjb21wbGV0ZSB0aGUgc3RhbmRhcmQgc3VpdHMgb2YgYSBkZWNrLiBUaGUgZmlmdGggY2FyZCBvciBraWNrZXIgaXMgZXhwZWN0ZWQgdG8gYmUgYmlnZ2VyLiBBbmQgaWYgdGhlcmUgYXJlIG1vcmUgdGhhbiB0d28gcGVvcGxlIHdobyBoYXZlIHRoaXMgaGFuZCwgdGhlIGxhc3Qgb25lIHdpbGwgZGVjaWRlIHdobyB3aW5zLgpTb3JyeSwgYnV0IHRoaXMgcmVzcG9uc2UgaGFzIGJlZW4gcmVtb3ZlZCBiZWNhdXNlIHdlIGRvIG5vdCBhbGxvdyB0aGUgcGVyc29uYWwgYW5lY2RvdGVzIG9yIHNlY29uZCBoYW5kIHN0b3JpZXMgb2YgdXNlcnMgdG8gZm9ybSB0aGUgYmFzaXMgb2YgYSByZXNwb25zZS4gV2hpbGUgdGhleSBjYW4gc29tZXRpbWVzIGJlIHF1aXRlIGludGVyZXN0aW5nLCB0aGUgbWVkaXVtIGFuZCBhbm9ueW1pdHkgb2YgdGhpcyBmb3J1bSBkb2VzIG5vdCBhbGxvdyBmb3IgdGhlbSB0byBiZSBwcm9wZXJseSBjb250ZXh0dWFsaXplZCwgbm9yIHRoZSBzb3VyY2UgdmV0dGVkIG9yIGNvbnRleHR1YWxpemVkLiBBIG1vcmUgdGhvcm91Z2ggZXhwbGFuYXRpb24gZm9yIHRoZSByZWFzb25pbmcgYmVoaW5kIHRoaXMgcnVsZSBjYW4gYmUgZm91bmQgaW4gdGhpcyBSdWxlcyBSb3VuZHRhYmxlLiBGb3IgdXNlcnMgd2hvIGFyZSBpbnRlcmVzdGVkIGluIHRoaXMgbW9yZSBwZXJzb25hbCB0eXBlIG9mIGFuc3dlciwgd2Ugd291bGQgc3VnZ2VzdCB5b3UgY29uc2lkZXIgL3IvQXNrUmVkZGl0LgpXZSBmZWx0IHNvIG9sZCwgYnV0IGl0IHdhcyBzbyBuaWNlIHRvIGdldCBvdXQgYW5kIGxlYXZlIExPIChsaXR0bGUgb25lKSB3aXRoIERILiAKV2hlbiB0aGUgV2F0Y2h0b3dlciB3b3VsZCBjaXJjbGUgYWJvdXQgd2l0aCBiZWF1dGlmdWwgcGljdHVyZXMgb2YgYSBkaXZlcnNlIGNvbW11bml0eSBpbiBwYXJhZGlzZSwgdGhleSBzaG93ZWQgZXZlcnkgc2tpbiBjb2xvciB1bmRlciB0aGUgc3VuLCBleGNlcHQgZm9yIG1pbmUuIFRoZXJlIGFyZSBubyBibHVlIHBlb3BsZSBpbiBwYXJhZGlzZS4gV2hlbiB3aXRuZXNzZXMgd291bGQgc2VlIG1lLCB0aGV5IHdvdWxkIHJlY29pbCBpbiBob3Jyb3IgYW5kIHRlbGwgdGhlaXIgY2hpbGRyZW4gbm90IHRvIHBsYXkgd2l0aCBtZS4gClRoZSBmYWN0IHRoYXQgdGhpcyBtYW4gaXMgbWFycmllZCByaW5ncyBhbGwga2luZHMgb2YgYmVsbHMuIEhlJ3MgcHJvYmFibHkgaW4gdGhlIGRpc3RpbmN0IG1pbm9yaXR5IG9mIGEgbGFyZ2VseSB5b3VuZ2VyLCBzaW5nbGUgaGFwcHkgaG91ciBjcm93ZCwgYW5kIGl0J3MgcmVhbGx5IGJhZCBmb3JtIHRvIGluc2lzdCB1cG9uIGJlaW5nIGEgZm9vdGxvb3NlIHBhcnR5IGJveSB3aGVuIHlvdSBoYXZlIGEgc3BvdXNlIHdhaXRpbmcgZm9yIHlvdS4gU2tpcHBpbmcgZGlubmVyIGFuZCBldmVuaW5nIGhvdXJzIG5pZ2h0IGFmdGVyIG5pZ2h0IGlzIGV4dHJlbWVseSBpcnJlc3BvbnNpYmxlIHNwb3VzYWwgYmVoYXZpb3IuIFNvIGlzIHdhbnRpbmcgdG8gYmUgYSBjYXJlZnJlZSBmcmF0IGJveSBpc2ggcGFydHkgYnJvIHdlbGwgaW50byBvbmUncyBtYXJyaWVkIHllYXJzIGl0J3Mgc2VsZmlzaCBhbmQgZXhjZWVkaW5nbHkgaW1tYXR1cmUgImJveXMgd2lsbCBiZSBib3lzIiBidWxsIHB1Y2t5LgpUaGV5IHdpbGwgY29udGludWUgdG8gYnV5IGFuZCBzZWxsIGZvc3NpbCBmdWVscy4gRXZlbiBpZiB0aGVyZSB3YXMgYSB3b3JsZCB3aWRlIGJveWNvdHQgb2YgYWxsIG9mIHRoZWlyIHN0b2NrcywgaXQgd291bGQganVzdCBtZWFuIHRob3NlIHN0b2NrcyB3b24gdHJhZGUgaGFuZHMuIFRoZSB2YWx1ZSB3b3VsZCBnbyBkb3duIHRvIG5vdGhpbmcsIGFuZCB0aGUgY29tcGFueSBpdHNlbGYgd291bGQgYmUgbGlrZWx5IHRvIGp1c3QgYnV5IGl0IGFsbCBiYWNrIHVwIGZvciBjaGVhcC4gCkRvbid0IGJlIGZvb2xlZCBieSBQaXNjZXMnIGRhemVkIGFuZCBjb25mdXNlZCBkaXNwb3NpdGlvbiwgdGhleSdyZSBqdXN0IHN0cm9sbGluZyB0aHJvdWdoIGRpZmZlcmVudCBzcGlyaXR1YWwgcmVhbG1zLCIgc2F5cyBNZXNhLiAKQWRkaXRpb25hbGx5LCB3ZSB1c3VhbGx5IHJlbW92ZSBwb3N0cyB0aGF0IGhhdmUgZXh0cmVtZWx5IG92ZXJ1c2VkIHBocmFzZXMgaW4gaXQgKCJEZXN0cm95ZXIgb2YgV29ybGRzLCBldGMpLiAKSSBzdXBwb3NlZCB0byBkbyBhIDE5IG1pbGUgdHJhaW5pbmcgcnVuIHRoYXQgZGF5IGZvciB0aGUgSGFsIEhpZ2RvbiBhbnl3YXkuLiAKR2VudGx5IHNwbGFzaCB0aGUgbWlsayBpbiwgYXJvdW5kLCBhbmQgdGhyb3VnaCB0aGUgc3RlbSB0byBnZXQgYWxsIHRoZSByZWNsYWltIG91dCBhbmQgZGlzc29sdmVkIGludG8gdGhlIG1pbGssIHRoZW4gdHVybiB0aGF0IGludG8gY2hvY29sYXRlIG1pbGsuIApUaGUgdHJpYWwgZmlyc3Qgd2l0bmVzcyBzYWlkIHRoYXQgaW4gMjAwOSB3aXRoIGhpcyBmaXJzdCBtYXJyaWFnZSBicmVha2luZyB1cCBhbmQgYSBzdWljaWRlIGF0dGVtcHQgdGhhdCBoYWQgbGVmdCBoaW0gaG9zcGl0YWxpemVkIGhlIHJldHVybmVkIGhvbWUgb3ZlciBDaHJpc3RtYXMgYW5kIHRvbGQgaGlzIHRoZW4gd2lmZSwgZmluYWxseSBnb2luZyB0byBjb25mcm9udCBoaW0uIEhlIHNhaWQgdGhlIGNoaWVmIGNyaWVkIGFuZCBhcG9sb2dpemVkLgpUaGUgb25lcyB3aG8gYXJlIGxvd2VyIG9uIHRoZSBzcGVjdHJ1bSB3b3VsZCBnZXQgdHJlYXRtZW50IGVhcmxpZXIgICBhbmQgaXQgaW1wb3J0YW50IHRvIGdldCB0cmVhdG1lbnQgZWFybHkuIApCdXQgSSBtdXN0IHdlaWdoIGluIG9uIHRoZSB1dHRlciBhbmQgY29tcGxldGUgbGFjayBvZiBqb3VybmFsaXN0aWMgaW50ZWdyaXR5IGF0IHRoZSBUaW1lcy4gCklzIGFib3V0IGEgbG90IG1vcmUgdGhhbiBzZWRpbWVudCwgUGVhcnNvbiBhZGRlZC4gbm8gY292ZXIuIFRoZSBiYW5rcyBhcmUgcGVlbGVkIGJhY2sgd2l0aCBjb25jcmV0ZSBnb2luZyByaWdodCB1cCB0aGUgYmFua3MuIFRoZSBzZWRpbWVudCBpcyBub3Qgd2hhdCBJIHdvdWxkIGJlIG1vc3QgZml4YXRlZCBvbi4gY29ycG9yYXRpb24gY291bGQgYWRkIGNvdmVyIG9mIGxhcmdlciByb2NrcyB0byBjcmVhdGUgbW9yZSBoYWJpdGF0IGFuZCBoaWRpbmcgc3BvdHMsIFBlYXJzb24gc2FpZC4KSXQgaXMgcmFyZSB3aGVuIGFsbCBvZiB0aGUgY2xhc3NpYyBzeW1wdG9tcyBvZiBhIHR5cGljYWwgc3luZHJvbWUgYXJlIHByZXNlbnQuIEluIGZhY3QsIGl0IGlzIG1vcmUgY29tbW9uIGZvciBqdXN0IGEgZmV3IHN5bXB0b21zIHRvIG9jY3VyLCBhbmQgdGhlc2Ugb2Z0ZW4gYXJpc2UgZnJvbSB0d28gb3IgdGhyZWUgc2ltdWx0YW5lb3VzIGRpc2Vhc2UgcGF0dGVybnMuIEZvciBleGFtcGxlLCBhIHBlcnNvbiBtaWdodCBoYXZlIGNocm9uaWMgc3BsZWVuIHFpIGRlZmljaWVuY3kgd2l0aCBzeW1wdG9tcyBvZiBvbmx5IHBvb3IgYXBwZXRpdGUgYW5kIGxvb3NlIHN0b29scy4gVGhlIHNhbWUgcGVyc29uIGNvdWxkIGFsc28gaGF2ZSBsaXZlciBxaSBzdGFnbmF0aW9uIHdpdGggdGhlIG9ubHkgc3ltcHRvbSBiZWluZyBwcmVtZW5zdHJ1YWwgc3luZHJvbWUgb25jZSBhIG1vbnRoLiBJZiB0aGlzIHBlcnNvbiBjYXRjaGVzIGEgY29sZCBvbiB0b3Agb2YgdGhlc2UgdW5kZXJseWluZyBkaXNvcmRlcnMsIGhlciBzeW1wdG9tcyB3b3VsZCBpbnZvbHZlIHRocmVlIHNlcGFyYXRlIHBhdHRlcm5zIG9mIGRpc2hhcm1vbnkuClRoZSBhZHJlbmFsIG1lZHVsbGEgZGV2ZWxvcHMgaW4gdGFuZGVtIHdpdGggdGhlIHN5bXBhdGhldGljIG5lcnZvdXMgc3lzdGVtLCBhbmQgYWN0cyBhcyBhIG1vZGlmaWVkIHN5bXBhdGhldGljIGdhbmdsaW9uOiBzeW5hcHNlcyBvY2N1ciBiZXR3ZWVuIHByZSAgYW5kIHBvc3QgIGdhbmdsaW9uaWMgbmV1cm9ucyB3aXRoaW4gaXQsIGJ1dCB0aGUgcG9zdCBnYW5nbGlvbmljIG5ldXJvbnMgZG8gbm90IGxlYXZlIHRoZSBtZWR1bGxhOyBpbnN0ZWFkIHRoZXkgZGlyZWN0bHkgcmVsZWFzZSBub3JlcGluZXBocmluZSBhbmQgZXBpbmVwaHJpbmUgaW50byB0aGUgYmxvb2QuWzVdVGhlIHN5bXBhdGhldGljIG5lcnZvdXMgc3lzdGVtIGlzIHJlc3BvbnNpYmxlIGZvciB1cCAgYW5kIGRvd24gcmVndWxhdGluZyBtYW55IGhvbWVvc3RhdGljIG1lY2hhbmlzbXMgaW4gbGl2aW5nIG9yZ2FuaXNtcy4gCkluIG9yZGVyIHRvIGJlIGEgZnVsbCB0aW1lIHBsYXllciB5b3UgaGF2ZSB0byBrbm93IHlvdSBjYW4gc3VzdGFpbiBhIGxpZmVzdHlsZSBhdCBpdC4gSWYgeW91J3JlIHVuY2VydGFpbiB5b3UncmUgbm90IHRoZXJlIHlldC4gSSB3YXMgcGxheWluZyBmdWxsIHRpbWUgYmV0d2VlbiBPY3QgSmFuIGZvciB0aGUgZmlyc3QgdGltZSBpbiBteSBsaWZlIHJlY2VudGx5IHdoaWxlIEkgd2FzIGluIGJldHdlZW4gam9icyBwbGF5aW5nIDEwMC8yMDBOTCBvbmxpbmUuIApBY3R1YWxseSB0aGV5IGtub3cgYnV0IHRoZXkgdGhpbmsgaXQgc29tZXRoaW5nIEkgY2FuIGRlYWwgd2l0aCBpdCBteXNlbGYgd2l0aG91dCBzaGVsbGluZyB0b25zIGZvciBhbiBhdHRvcm5leS4gSXQgYSBjaXZpbCBsYXdzdWl0LCBub3QgYSBjcmltaW5hbCBjYXNlLiBEbyB5b3Uga25vdyB0aGUgcmVwZXJjdXNzaW9ucyBvZiBzaWduaW5nICJOb24gQ0xFVFMgQ2l2aWwgSGFyYXNzbWVudCBSZXN0cmFpbmluZyBPcmRlciI/IEl0IHNlZW1zIGl0IHdpbGwgYmUgYWxyaWdodCBpbiA1IHllYXJzLiAKSGVyYnloYW5jb2NrMjMyMyAgMTEgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvCk1vcnRsYW5kIHNhaWQgdGhlIGNhc2lubyBhbHNvIG5vdyBvZmZlcnMgbGl2ZSBlbnRlcnRhaW5tZW50IGluIGl0cyBWaW50YWdlIDUxIEJhciBvbiBUaHVyc2RheXMsIEZyaWRheXMgYW5kIFNhdHVyZGF5cy4gCkFuZCBIaWxsc2Jvcm8gRW50ZXJ0YWlubWVudCwgY2hhbGxlbmdlZCBhIGNvdW50eSBvcmRpbmFuY2UgdGhhdCB3b3VsZCBwcm9oaWJpdCB0aGUgZGlzdHJpYnV0aW9uIG9mIGhhbmRiaWxscyBmb3IgY29tbWVyY2lhbCBwdXJwb3Nlcy4gCiJJdCdzIHRoZWlyIGpvYiB0byBrbm93IGV2ZXJ5dGhpbmcsIGlzbid0IGl0PyIgc2hlIHNhaWQgb2Ygc3RhZmYuIApJIGxvdmVkIEZhbGxvdXQgMywgRmFsbG91dCBOViwgYW5kIGV2ZW4gRmFsbG91dCA0LCBidXQgSSBkaWQgbm90IHBsYXkgdGhlbSBhcyBtdWNoIGFzIEkgZGlkIE9ibGl2aW9uIG9yIFNreXJpbS4gSSBwbGF5ZWQgYSBjb3VwbGUgb2YgZGlmZmVyZW50IHR5cGVzIG9mIGNoYXJhY3RlciBpbiB0aGUgRmFsbG91dCBmcmFuY2hpc2UgYnV0IHRoZXkgc29ydCBvZiBlbmRlZCB1cCB1c2luZyBhbG1vc3QgdGhlIHNhbWUgZ2VhciBhbmQgd2VhcG9ucyBhZnRlciBzb21lIHRpbWUuIApOZXZlciBiZWZvcmUgaGF2ZSB3ZSBzZWVuIHN1Y2ggbmFzdHkgYW5kIGluc3VsdGluZyB3b3JkcyBiZWluZyBodXJsZWQgYXQgdGhlIHJ1bGVycywgYW5kIHRoZSBwdWJsaWMgYmVsaWV2ZSB0aGVzZSBhY2N1c2F0aW9ucyB0byBiZSBjb3JyZWN0LiBFdmVyeWJvZHkga25vd3MgYWJvdXQgdGhlIHBhc3Qgb2Ygb3VyIHByZXNpZGVudCBhbmQgdGhlIGdpdmVuIHRvIGhpbSBieSB0aGUgZm9yZWlnbiBtZWRpYS4gCkFub3RoZXIgb25lIEkgcmVjYWxsLCBkb250IGFzayBtZSBmcm9tIHdoZXJlIGFuZCB3aGF0IHRpbWUsIHdvdWxkIGJlIGhhdmluZyB5b3VyIGxlZ3MgYW5kIGFybXMgYW1wdXRhdGVkIGF0IHRoZSBoaXBzIGFuZCBzaG91bGRlcnMuIFRoZSB3b3VuZHMgY2F1dGVyaXplZCBzbyB5b3UgZGlkbnQgYmxlZWQgdG8gZGVhdGgsIGFuZCB0aGVuIGhhdmluZyB5b3VyIGV5ZXMgcmVtb3ZlZC4gWW91IHdvdWxkIHRoZW4gYmUgZHVtcGVkIGluIHRoZSBjaXR5IHN0cmVldHMsIGhvcGluZyB0aGF0IHNvbWVvbmUgZWl0aGVyIGVuZGVkIHlvdXIgYWdvbnksIG9yIGtlcHQgeW91IGFsaXZlIGJ5IGZlZWRpbmcgeW91IGFuZCB0YWtpbmcgY2FyZSBvZiB5b3VyIHdvdW5kcy4KU3VuIFRpbWVzIHJlc2VydmVzIHRoZSByaWdodCB0byBjaGFuZ2Ugb3IgdGVybWluYXRlIGl0cyBEaWdpdGFsIFByb2R1Y3RzIGF0IGFueSB0aW1lLiBJZiBTdW4gVGltZXMgdGVtcG9yYXJpbHkgcmVkdWNlcyBvciBlbGltaW5hdGVzIHRoZSBjaGFyZ2UgZm9yIGNvbnRlbnQgb3IgYWNjZXNzIHRoYXQgeW91IGFyZSBjdXJyZW50bHkgcGF5aW5nIGZvciB1bmRlciBkaWZmZXJlbnQgdGVybXMsIHlvdSB3aWxsIG5vdCByZWNlaXZlIGEgcmVmdW5kLiBJZiBhbnkgb3IgYWxsIERpZ2l0YWwgUHJvZHVjdHMgYXJlIHRlbXBvcmFyaWx5IHVuYXZhaWxhYmxlLCB5b3Ugd2lsbCBub3QgcmVjZWl2ZSBhIHJlZnVuZC4KUG9rZXIgaXMgYSBob2JieS4gWW91IHBsYXkgcG9rZXIuIApXYXIgdGlsbCBhdCBsZWFzdCAyMDE4PyBJZiB3ZSBjb250aW51ZSB0aGUgd2FycyBmb3IgdGhhdCBsb25nIHRoZW4gbWlsbGlvbnMgb2YgcGVvcGxlLCBtaWxsaW9ucyBvZiBpbm5vY2VudCBjaXZpbGlhbnMgY2hpbGRyZW4sIG9sZCBwZW9wbGUsIHBlb3BsZSB3aG8gd2FudCBub3RoaW5nIHRvIGRvIHdpdGggd2FyIGFuZCBkZWF0aCAgd2lsbCBiZSBkZWFkIGFuZCBtYW55IHRpbWVzIHRoYXQgbnVtYmVyIHNvIHdvdW5kZWQgb3Igc28gcHN5Y2hvbG9naWNhbGx5IHNjYXJyZWQgZnJvbSB0aGUgd2FyIHRoYXQgdGhleSB3aWxsIG5ldmVyIGJlIGZ1bGx5IGFibGUgdG8gZnVuY3Rpb24gYWdhaW4uIApNYWNMZW9kJ3Mgb2ZmaWNlIHNheXMgdGhyZWF0cyBpbmNsdWRlZCBvbmVzIG9uIGhlciBsaWZlIGFuZCBjYW1lIHRocm91Z2ggc29jaWFsIG1lZGlhIGFuZCBieSBwaG9uZSB0byBoZXIgY29uc3RpdHVlbmN5IG9mZmljZS4KSSBzdGFydGVkIG91dCBnZXR0aW5nIHBhbmljIGF0dGFja3MgZXZlcnkgdGltZSBJIHNtb2tlZCwgYW5kIHRoZW4gdGhhdCBkZXZlbG9wZWQgaW50byBmdWxsIG9uIHBhbmljIGRpc29yZGVyLiAKVG8gcmVsZWFzZSB0aWdodCBzcG90cyBpbiB0aGlzIG11c2NsZSwgdXNlIHlvdXIgdGh1bWIgYW5kIGZpcnN0IDIgZmluZ2VycyB0byBwdXNoIGludG8gc29yZSBzcG90cyBhbG9uZyB0aGUgb3V0c2lkZSBvZiB5b3VyIHJpYnMuIApUaGVpciBjYWxscyBvbiB0aGUgcml2ZXIgYWN0dWFsbHkgaW1wcm92ZSB5b3VyIHBvdCBvZGRzIGJlY2F1c2UgeW91IGNhbiBhZGQgdGhlc2UgYmV0cyBpbnRvIHlvdXIgY2FsY3VsYXRpb25zLiAKTWFrZSBzdXJlIHlvdSBjYWxsIEdTU0YgYW5kIGZpbmQgb3V0IHdobyBuZWFyIHlvdSBpcyBwYXJ0IG9mIHRoZSBwcm9ncmFtLiBUSEVOIGNhbGwgVEhPU0UgZ3V5cyBhbmQgbWFrZSBzdXJlIHRoZXkgd2lsbCBzZWxsIHRvIHlvdSBhbmQgZ2V0IGEgcXVvdGUuIApLZWxseSBleCBnaXJsZnJpZW5kIHNheXMgaGVyIGRhdWdodGVyIHdhcyBiZWF0ZW5UaGUgR2F5bGUgS2luZyBJbnRlcnZpZXcgd2l0aCBSLiAKVGhlIGxhdHRlciBzaG91bGQgc2hvdyBoZXIgbmFtZSBhdCBiaXJ0aCwgaGVyIGJpcnRoIG1vdGhlciBuYW1lIGFuZCBhZGRyZXNzIGF0IHRoZSB0aW1lIG9mIGJpcnRoLCB0aGUgbmFtZSBvZiB0aGUgYmlydGggZmF0aGVyIGlmIGtub3duIGFuZCBsZWdhbGx5IGFja25vd2xlZGdlZCBhbmQgdGhlIG5hbWVzIG9mIGhlciBhZG9wdGl2ZSBwYXJlbnRzIGFuZCB0aGUgZmlsZSBudW1iZXIvZGF0ZSBoZXIgYWRvcHRpb24gYmVjYW1lIGZpbmFsLCB3aGljaCB3b3VsZCBhbGxvdyB5b3UgdG8gZmluZCB0aGlzIGZpbGUgYXQgdGhlIGxvY2FsIGNvdXJ0LiAKV2Ugc29tZWhvdyBjYW4ndCB0cmFuc2NlbmQgdGhlIHBlbmNoYW50IGZvciBzZXR0bGluZyBmb3IgdGhlIGNoZWFwZXN0IHBvc3NpYmxlIGJhcmdhaW4gY2hlYXAgYXQgb3VyIGV4cGVuc2U6IGNvb2xpZSB3b3JrIGF0IGNvb2xpZSB3YWdlcy4gU28gaXQgaXMgZnV0aWxlIHRvIGV4cGVjdCB0aGF0IHdlIHdvdWxkIHNwZWFrIHdpdGggYSBmaXJtIG9yIGNyZWRpYmxlIHZvaWNlIHdoZW4gaW50ZXIgYWN0aW5nIHdpdGggb3VyIGZvcmVpZ24gZnJpZW5kcy4gClRoZSBwcm9ncmFtIGRldmVsb3BlZCBieSB0aGUgQ29tcHV0ZXIgUmVzZWFyY2ggUG9rZXIgR3JvdXAgYXQgdGhlIFVuaXZlcnNpdHkgb2YgQWxiZXJ0YSBpbiBDYW5hZGEgaGFzIGJlZW4gbmFtZWQgQ2VwaGV1cywgaGVuY2Vmb3J0aCB0byBiZSBrbm93biBhcyAiQ2VwaCB0aGUgVW5iZWF0YWJsZSwiIHRoZSBJbmRlcGVuZGVudCByZXBvcnRlZC4KSW5kZWVkLCBJIG5lZWQgdG8gbG9jYXRlIHBsYWNlZCB0byBhdHRhY2ggbXkgcHJvYmVzLCB0aGF0IHdhcyBnb2luZyB0byBiZSBteSBuZXh0IHN0ZXAuIEkgcmVhZCB0aHJvdWdoIHRoZSBtYWluIGJvYXJkIG1hbnVhbCBhbmQgZm91bmQgcmVmZXJlbmNlIHRvIFBPU1Qgc3RhdHVzIExFRHMuIElmIHRlIGRldmljZSBoYWQgYW4gZXJyb3IgdGhlIExFRCB3aWxsIGJlIG9uLiAKKE5vdGUgaWYgeW91IGNhbm5vdCBzcGVhayBUaGFpLCBvciBjb25zaWRlciBpdCBpbXBvcnRhbnQgZm9yIHRoZSBnaXJsIHRvIHNwZWFrIEVuZ2xpc2gsIG1vc3QgZ2lybHMgaW4gdGhlIEh1YXkgS2h3YW5nIGFyZWEgbWFzc2FnZSBwYXJsb3VycyBkbyBub3QuIApUaGUgc2Vjb25kIHRpbWUgSSBoYWQgc29tZSBraW5kIG9mIHNlcHNpcy4gSSB3YXMgY29tcGxldGVseSBkZWh5ZHJhdGVkIGFuZCBibHVlLiBJIHN0dXBpZGx5IHRvb2sgdGhlIGJ1cyB0byB0aGUgaG9zcGl0YWwuIEkgZ290IHRoZXJlIGFuZCB0aGV5IGFkbWl0dGVkIG1lIGltbWVkaWF0ZWx5IHNpbmNlIEkgaGFkIG15IGNhcmQgZnJvbSA0IHllYXJzIGVhcmxpZXIuIE15IHZlaW5zIHdlcmUgc28gZmxhdCB0aGF0IGl0IHRvb2s3IHRyaWVzIHRvIGdldCBhbiBJViB0byB3b3JrLiBBZ2FpbiwgZXhjZWxsZW50IGhlbHAgYW5kIGNvbXBhc3Npb25hdGUgZG9jdG9ycyBhdCB3b3JrIGhlcmUsIEkgaGFkIHR3byBkb2N0b3JzIGhlbHBpbmcgbWUgaW4gRW5nbGlzaC4KSXQgaXMgdGhlc2Ugc2FtZSBjaGFyYWN0ZXJpc3RpY3MgdGhhdCBtYWtlIHVwIHdoYXQgaXMgY29tbW9ubHkga25vd24ga25vdyBkYXlzIGFzIGEgcGxheWVyLldlIGhhdmUgcmVjZWl2ZWQgYSBsb3Qgb2YgZmVlZGJhY2sgYW5kIHF1ZXN0aW9ucyBhc2tpbmcgZm9yIG1vcmUgaW5mb3JtYXRpb24gYWJvdXQgcGVvcGxlIHdobyBhcmUgY2hhcmFjdGVyIGRpc29yZGVyZWQgYW5kIGhvdyB0byB0ZWxsIGlmIHlvdXIgcGFydG5lciBpcyBvbmUgb2YgdGhlbS4gU28gd2UgaGF2ZSBjcmVhdGVkIHRoaXMgYXJ0aWNsZSB0byBnbyBvdmVyIDEwIENvbW1vbiBTaWducyB0aGF0IHlvdXIgcGFydG5lciBpcyBDaGFyYWN0ZXIgRGlzb3JkZXJlZC5BcyBhIHByZWFtYmxlLCBtb3N0IHBlb3BsZSB0byBhIGNlcnRhaW4gZGVncmVlIGFyZSBsaWtlIHRoZSBmb2xsb3dpbmcgZXhhbXBsZXMsIGJ1dCBpcyB3aGVuIHlvdXIgcGFydG5lciBoYXMgdGhlc2UgdHJhaXRzIGRvd24gdG8gYSBzY2llbmNlLCBhbmQgaXQgaXMgbmF0dXJhbCBhbmQgZWFzeSwgZnJlcXVlbnQgYW5kIGludGVudGlvbmFsIHRoYXQncyB3aGVuIHlvdSBrbm93IHRoZXkgYXJlIGNoYXJhY3RlciBkaXNvcmRlcmVkLiBJIGdvIG92ZXIgZWFjaCBvbmUgaW4gdHVybi4xKUlUIlMgWU9VUiBGQVVMVCwgTk9UIE1ZIEZBVUxUIFRBQ1RJQzIpU1VCQ09OU0NJT1VTIElORkxVRU5DSU5HIFdPUkRTIExJS0UgIllPVSIgQU5EIiBTSE9VTEQiMylPUFBPUlRVTklUSVNUICBJTlRFTlRJQUxMWSBLRUVQUyBESVNDVVNTSU9OUyBPUEVOIFRPIEJFIEFCTEUgVE8gVVNFIFVOU09MVkVEIERJU0NVU1NJT05TIFRPIFRIRUlSIEFEVkFOVEFHRTQpWUVBSCwgWUVBSCwgV0UgV0lMTCBESVNDVVNTIFRIQVQgTEFURVIgU1lORFJPTUU1KUZBSVQgRFUgQ09NUExFVEUgRVhUUk9EQUlSRTYpV0FUQ0ggVEhFTSBQTEFZIEEgR0FNRSBUTyBTRUUgV0hBVCBUSEVSRSBQQVJBRElHTSBBQk9VVCBMSUZFIElTOClVU0VTIFNPQ0lBTCBQUkVTU1VSRSBBR0FJTlNUIFlPVTkpSEFTIE5PIFRST1VCTEUgT1IgUkVHUkVUIEFCT1VUIExZSU5HMTApIEFHUkVFIFdJVEggWU9VUiBQT0lOVCBPRiBWSUVXIEFUIEZJUlNUIFNPIFlPVSBXSUxMIE5PVCBDQVRDSCBPTiBBUyBUSEVZIENIQU5HRSBQTEFOUyAgdGhlIEhHVFYgZXhhbXBsZTEpSVRTJyBZT1VSIEZBVUxULiAKSSB3b3VsZCBzdWdnZXN0IGdldHRpbmcgc29tZSByZWFsbHkgc3BlY2lmaWMgaW5mbyBvbiBleGFjdGx5IHdoZXJlIHlvdSB3YW50IHRvIGdvIGluIEJ1a2Nob24sIGJlY2F1c2UgeW91IGNhbiBqdXN0IHdhbmRlciBhcm91bmQgaW4gdGhlcmUgYW5kIHdvbmRlciBpZiB5b3UgcmVhbGx5IHNlZWluZyB3aGF0IHlvdSBjYW1lIHRvIHNlZS4gClNvIG15IHRob3VnaHQgcHJvY2VzcyBpcyBiYXNpY2FsbHkgIkkga25vdyB3aGF0IHlvdSBzYXlpbmcgaXMgYXdlc29tZSwgc28gcGxlYXNlIGp1c3Qgc3BpdCBpdCBvdXQgYWxyZWFkeSEiLiAKU28gSSBhc2sgdGhlIFJlZGRpdCBEZXRlY3RpdmVzICAgd2hhdCBpcyB0aGlzPyEgSXQgd2FzbiBhbGwgdGhhdCBoZWF2eSBidXQgd2UgZGlkbiB3YW50IHRvIG1vdmUgaXQgYXJvdW5kLiAKVGhlIHlvdW5nIGxhZHkgc2FpZCBzaGUgd2FzIHNvcnJ5IGFuZCBkaWRuIHdhbnQgdG8gbG9zZSBtZSBhcyBhIGN1c3RvbWVyIHNvIHRoZXkgd291bGQgb2ZmZXIgbWUgcHJpY2UgcHJvdGVjdGlvbi4gQmFzaWNhbGx5LCBJIHdvdWxkbiBnZXQgdGhlIHRyYXZlbCBjcmVkaXQgYnV0IHRoZXkgd291bGQgZ2l2ZSBtZSB0aGUgZXF1aXZhbGVudCBvZiB0aGUgdHJhdmVsIGNyZWRpdCBhcyBhIEZpIGNyZWRpdC4gCkxvb2sgZm9yIHNtYWxsIGRldGFpbHMuIEN1bm5pbmcgcGVvcGxlIG5ldmVyIGJhbGsgYXQgdGhlIHByb3NwZWN0IG9mIGNsb3NlbHkgc2NydXRpbml6aW5nIHBlb3BsZSBhbmQgdGhpbmdzIGZvciBzbWFsbCBkZXRhaWxzIHRoYXQgbWF5IGJlIG1hbmlwdWxhdGVkIGZvciB0aGVpciBiZW5lZml0LiBUcnkgdG8gYmUgYSBzdGlja2xlciBmb3IgZGV0YWlscywgd2l0aGluIHJlYXNvbi4gRm9yIGluc3RhbmNlLCByZWFkIGV2ZXJ5IGxpbmUgb2YgeW91ciBjb250cmFjdCByYXRoZXIgdGhhbiBnbG9zc2luZyBvdmVyIHRoZSBlbnRpcmUgdGhpbmcuIElmIHlvdSBwYXkgYXR0ZW50aW9uIHRvIGxpZmUncyBkZXRhaWxzLCB5b3UnbGwgZmluZCB5b3Vyc2VsZiBiZXR0ZXIgZXF1aXBwZWQgdG8gZXhwbG9pdCBvcHBvcnR1bml0aWVzIHdoZW4gdGhleSBwcmVzZW50IHRoZW1zZWx2ZXMuCk5vcnRoIEtvcmVhIGhhcyBoYWQgbnVrZXMgZm9yIG92ZXIgYSBkZWNhZGUsIGJ1dCB0aGUgdHVybmluZyBwb2ludCB3YXMgdGhlIG1pc3NpbGUgdGVzdHMgc3BlYXJoZWFkZWQgYnkgS2ltIGpvbmcgdW4uIApBbmQgSSBhc3N1bWluZyB0aGV5IHdvdWxkbiBoYXZlIEEzIG9yIDMzLCBiZWNhdXNlLCBjb21lIG9uLiAKSXQgZ29pbmcgdG8gYmUgdHJpY2t5IGZvciB0aGVtIHRvIHN1cHBvcnQgdGhlIGdhbWUgYW5kIHRhbGsgYWJvdXQgdXBkYXRlcyB3aGlsZSBhbHNvIHRyeWluZyB0byBjcmVhdGUgZGlzdGFuY2UgZnJvbSBpdCBmb3IgU3RhcmZpZWxkLiAKQ2hhcmxpZSBCdWNrZXQgaXMgYW4gaW1wb3ZlcmlzaGVkIGxhZCB3aG9zZSBmb3J0dW5lcyB0dXJuIHdoZW4gaGUgdW5jb3ZlcnMgb25lIG9mIGZpdmUgZ29sZGVuIHRpY2tldHMgY29uY2VhbGVkIGluIFdvbmthIGNob2NvbGF0ZSBiYXJzLCBiZXN0b3dpbmcgYWNjZXNzIHRvIHRoZSBmYWJsZWQgV29ua2EgZ3JvdW5kcyB3aGVyZSBjaG9jb2xhdGUgcml2ZXJzIGZsb3csIGVkaWJsZSBmbG93ZXJzIGdyb3csIGFuZCBPb21wYSBMb29tcGFzIHNlcmVuYWRlIGRlcGFydGluZyBndWVzdHMgd2l0aCBtYWNhYnJlIG1vcmFsaXR5IHNvbmdzLiBTdWNoIGRlbGlnaHRmdWwgd2VpcmRuZXNzIGlzIGdpdmVuIGFuIGVudGlyZWx5IG5ldyBkaW1lbnNpb24gdmlhIHRoZSBoZWlnaHRlbmVkIGF0bW9zcGhlcmUgb2YgdGhlIHN0YWdlIHByb2R1Y3Rpb24uIApQdXQgdGhlIGNoaWNrZW4gaW4gdGhlIHRvcnRpbGxhLiBUaHJvdyBzb21lIGNoZWVzZSBhbmQgc29tZSBob3Qgc2F1Y2Ugb24gdGhhdCBiaXRjaCBhbmQgc3R1ZmYgeW91ciBzYWQgInRhY29zIiBkb3duIHRoZSBndWxsZXQgd2hpbGUgeW91IHdhdGNoIE5ldGZsaXguLiAKRmlyc3Qgb2YgYWxsLCBvZiBjb3Vyc2UgeW91IGNhbiBnZXQgYSBUUkMgd2l0aG91dCBhIGpvYi4gR28gbG9vayBhdCB0aGUgY2F0ZWdvcmllcy4gV2h5IHdvdWxkIHlvdSBzYXkgc3VjaCBhIHRoaW5nPwpUb3VyIGFuZCBzaXQgaW4gYSBjbGFzcyBhdCB0aGUgYmVhdXR5IHNjaG9vbCBhbmQgYXQgbGVhc3Qgb25lIG1hc3NhZ2Ugc2Nob29sLiBDdWx0dXJlIG1hdHRlcnMgdG9vLCBwYXkgYXR0ZW50aW9uIHRvIGl0LiAKRGFzIFByb3N0aXR1dGlvbiBqYSBncnVuZHN0emxpY2ggc2V4aXN0aXNjaCBzZWksIHdlaWwgZGllIEt1bmRlbiBmYXN0IGF1c3NjaGxpZWxpY2ggTW5uZXIgc2VpZW4gdW5kIGRpZSBTZXhhcmJlaXRlcklubmVuIHp1bSBncm9lbiBUZWlsIEZyYXVlbiAodW5kIGhhbHQgZWluIGdlcmluZ2VyIFRlaWwgTW5uZXIgZnIgTW5uZXIpLiAKQmVpbmcgdGhlIGJlc3QgaXMgYWJvdXQgbG9uZ2V2aXR5LiBJdCBhcyBub3RoaW5nIHRvIGRvIHdpdGggYWN0aW9uIGFuZCBibG9vZC4gCk9sZGVyIGp1c3QgbWVhbnQgbW9yZSByZXNwb25zaWJpbGl0aWVzLCBtb3JlIGNob3JlcywgbW9yZSB3b3JrLiAKQWxtb3N0IGV2ZXJ5IHByb2Zlc3Npb25hbCBwb2tlciBwbGF5ZXIgdG9kYXkgc3RhcnRlZCBvdXQgbGlrZSB5b3UgYW5kIEk6IHdpdGggYSBzbWFsbCBiYW5rcm9sbCBhdHRlbXB0aW5nIHRvIGdyaW5kIGl0IG91dCBwbGF5aW5nIGNhc2ggZ2FtZXMsIFNORyBvciBNVFQgTWF5YmUgYSBtaXh0dXJlIG9mIHRob3NlIDMuIApDdXN0b21pemVkIGR1YWwgYmlwb2xhciBlbGVjdHJvZGVzIHdlcmUgdXNlZCB0byByZWNvcmQgbmV1cmFsIGFjdGl2aXR5IGZyb20gb25lIG9mIHRoZSBDNiBicmFuY2hlcy4gCkFueSBmYW50YXN5IHdpdGggZWx2ZXMgYW5kIGR3YXJ2ZXMgdGhhdCBub3QgcGFydCBvZiBBRCBvciBUb2xraWVuIGF1dG9tYXRpY2FsbHkgZ2V0cyBhICJhcmUgeW91IGZ1Y2tpbmcgS0lERElORyBNRSBTVE9QIFdJVEggVEhJUyBTSElUIiBidXQgY291cGxlIHRoYXQgd2l0aCB0aGUgR2FyeSBTdHUsIGltbW9ydGFsIGdvcmdlb3VzIHNleCBnb2QgbWFpbiBjaGFyYWN0ZXIsIHRoZSBhZG9sZXNjZW50IG1hbGUgcG93ZXIgZmFudGFzeSBydW4gYW1vayBtYWluIGNoYXJhY3RlciwgYW5kIGl0IGp1c3QgYWJzb2x1dGVseSB1biBmdWNraW5nIGJlYXJhYmxlLiBXb3JzdCBmYW50YXN5IHN0b3J5IG9mIHRoZSBwYXN0IGRlY2FkZSwgaGFuZHMgZG93bi4uIApJIGNvbnNpZGVyIG15c2VsZiBhIE1vdG93biBlbnRodXNpYXN0LCBidXQgdGhlIGxhYmVsIHdhcyBtb3JlIGFib3V0IGJpZyAob3IgbWlub3IsIHRoZXkgbm90IHRoYXQgcGlja3kpIGNoYXJ0IHRvcHBlcnMgdGhhbiBjb2hlc2l2ZSBhbGJ1bXMgICBhdCBsZWFzdCBwcmUgTWFydmluIEdheWUvU3RldmllIFdvbmRlciBtYWdpYy4gVGhpcyBhbGJ1bSBnaW1taWNrIGlzIHRvIGNvbGxlY3QgYSBidW5jaCBvZiB0aGUgYWZvcmVtZW50aW9uZWQgY2hhcnQgdG9wcGVycywgcGVyZm9ybWVkIGJ5IE1vdG93biBtb3N0IHByZWNpb3VzIGFjdCwgbmF5IHNlbnNhdGlvbiBvZiB0aGUgdGltZS4gU28sIHRoZXNlIHNvbmdzIGFyZSBpbW1lZGlhdGVseSBmYW1pbGlhciwgYnV0IHNlbGVjdGluZyB0aGUgcmlnaHQgYXJ0aXN0cyB0byByZWNvcmQgdGhlc2Ugc29uZ3MgKGluc3RlYWQgb2YganVzdCBtaW5kbGVzc2x5IGhhbmRpbmcgdGhlbSBhbGwgdG8gdGhhdCBvbmUgc3VwZXIgc3VjY2Vzc2Z1bCB2b2NhbCBncm91cCkgdG8gdHVybiB0aGVtIGludG8gdGhlIGN1bHR1cmFsIHRvdXIgZGUgZm9yY2UgdGhleSB3ZXJlIHJlYWxseSB3YXMgTW90b3duIGJpZyBhY2hpZXZlbWVudC4gVGhlIGF1eGlsaWFyeSByZW5kaXRpb25zIG9uICJBIEdvIEdvIiBhcmUgbWVyZWx5IHBsZWFzYW50IGRpdmVyc2lvbiBmb3IgYm90aCB0aGUgU3VwcmVtZXMgYW5kIHRoZSBsaXN0ZW5lci4KV2hpbGUgcGxheWluZyB0aGUgZ2FtZSwgdGhlIGF0bW9zcGhlcmUgaXMgdmVyeSBjaGlsbGVkIG91dCBhcyB0aGUgZ2FtZSByZXF1aXJlcy4gSWYgYSBwbGF5ZXIgcGFuaWNzIG9yIGV2ZW4gc2hvd3Mgc2lnbnMgb2YgaXQsIHRoYXQncyB3aGVuIHRoZSBnYW1lIGlzIGxvc3QuIApTcHJpbmcgZm9yIGEgcHJvZmVzc2lvbmFsIHBob3RvIG9yIGFzayBhIGZyaWVuZCB3aXRoIGdyZWF0IHNraWxscyB0byBzbmFwIGEgZmV3IGhlYWQgc2hvdHMgZm9yIHlvdS4gCldoYXQgbWFrZXMgaXQgcG9zc2libGUgaXMgYSBzZWNyZXQgcHJvcHJpZXRhcnkgaW5ncmVkaWVudC4gClRlcnBhbmFlICA2MiBwb2ludHMgIHN1Ym1pdHRlZCA1IGRheXMgYWdvClRoYXQgYSBiYWQgc3VycHJpc2UgYW5kIGl0IHdoeSB0aGUgQ29uc2VydmF0aXZlcyByZWxlbnRsZXNzbHkgZXhwbG9pdCBKdXN0aW4gZ2FmZmVzLi4gCkdvb2QgbHVjayBpdCB3b3JrcyBmb3IgbWUuIChGdWxsIEFuc3dlcikuIApDYW4gbm9uIEJ1ZGRoaXN0cyB1c2UgdGVybXMgbGlrZSBtZWRpdGF0aW9uIG9yIHplbj8gSXMgaXQgY3VsdHVyYWwgYXBwcm9wcmlhdGlvbiwgYW5kIHRoZXJlZm9yZSBiYWQgcHJhY3RpY2UsIGZvciBhIG5vbiBCdWRkaGlzdCB0byBoYXZlIGEgYnVkZGEgc3RhdHVlIGluIHRoZWlyIGhvbWU/IFNob3VsZCBub24gSXJpc2ggYmUgYWJsZSB0byBlbmpveSBTYWludCBQYXRyaWNrIGRheSwgYW5kIGlzIGl0IG9rYXkgdG8gZGlzcGxheSB0aHJlZSBsZWFmIGNsb3ZlcnMgb24gdGhlaXIgY2xvdGhlcz8gU2hvdWxkIG5vbiBDYW5hZGlhbnMgZmVhciBtaXN1c2luZyB0aGUgbWFwbGUgbGVhZiBsZXN0IHRoZXkgYW5nZXIgQ2FuYWRpYW5zPyBDYW4gbm9uIEFtZXJpY2FucyBkaXNwbGF5IHN0YXJzIGFuZCBzdHJpcGVzLCBvciB1c2UgdGhlIHRlcm0gImZyZWVkb20iIGhvd2V2ZXIgdGhleSBzbyBjaG9vc2U/LiAKQ29sbGVjdGl2ZWx5IGVzdGFibGlzaCByZWFzb24gdG8gYmVsaWV2ZSB0aGVzZSB0cmFuc2FjdGlvbnMgbWF5IGhhdmUgdmlvbGF0ZWQgY2FtcGFpZ24gZmluYW5jZSBsYXcsIiByZWFkcyBhbiBGRUMgY29tcGxhaW50IGZpbGVkIGxhc3Qgd2VlayBieSB0aGUgQ29vbGlkZ2UgUmVhZ2FuIEZvdW5kYXRpb24uLiAKUmVwcmVzZW50YXRpdmUgcGxheWVyczogMyBuYXRpb25hbCByZXByZXNlbnRhdGl2ZSBwbGF5ZXJzICgrMSBsYXN0IHllYXIpLCAyIHBsYXllcnMgaW4gdGhlIE5vcnRoIHZzIFNvdXRoICdPcmlnaW4nIGZpeHR1cmUgKCsxIGxhc3QgeWVhciksIDUgcmVnaW9uYWxseSByZXByZXNlbnRhdGl2ZSBwbGF5ZXJzICgrMSBsYXN0IHllYXIpLCBhbmQgYW4gaW1wcmVzc2l2ZSAzIHBsYXllcnMgd2hvIGhhdmUgcmVwcmVzZW50ZWQgR3JlYXQgQnJpdGFpbiBmb3IgdGhlICdQaW9uZWVycycgc3F1YWQuCkNhbGwgdXAgdG8gdGhlIHR1cm4gdGhlbiBjaGVjayByYWlzZQpPaywgZ29pbmcgdG8gdHJ5IHRvIGV4cGxhaW4gdGhpcyBzbG93bHkgb25lIGxhc3QgdGltZSBiZWZvcmUgSSBnbyBhaGVhZCBhbmQgYmxvY2sgeW91LgpOb3cgaGUganVzdCBnb3QgdG8gZ2V0IGJhY2sgaW50byBmb3JtLi4gCkNocmlzIFdhdHRzIGNvbmZlc3NlcyB0byBraWxsaW5nIGRhdWdodGVycyBmb3IgZmlyc3QgdGltZTogZGlkbiB3YW50IHRvIGRvIHRoaXMsIGJ1dCBJIGRpZCBpdCAvcmVhY3QgdGV4dCAgPkNocmlzdG9waGVyIFdhdHRzIGhhcyBhZG1pdHRlZCBraWxsaW5nIGhpcyBkYXVnaHRlcnNsYXN0IHllYXIgYXQgdGhlIG9pbCBzaXRlIHdoZXJlIGhlIGR1bXBlZCB0aGVpciBib2RpZXMgYWZ0ZXIgc3RyYW5nbGluZyBoaXMgd2lmZSwgU2hhbmFubiwgaW4gdGhlaXIgQ29sb3JhZG8gaG9tZS4gT24gVGh1cnNkYXksIGludmVzdGlnYXRvcnMgcmVsZWFzZWQgYSBmaXZlIGhvdXIgaW50ZXJ2aWV3IHdpdGggV2F0dHMgb24gRmViLiAxOCBhdCB0aGUgV2lzY29uc2luIHByaXNvbiB3aGVyZSBoZSBpcyBiZWluZyBoZWxkLiAKSSBNci4gCk1lIGFuZCBhbm90aGVyIGJ1ZGR5IGZyb20gdGhhdCBwZXJpb2QgcmVtYWluIGdvb2QgZnJpZW5kcyBhbmQgcmVjZW50bHkgaGlzIGRhZCByZXRpcmVkLiAKVGhlIGFnZW50IHdvdWxkIGhhdmUgYSBidXJkZW4gb2YgcHJvb2YgdG8gc2hvdyB0aGF0IHRoZXkgaW50cm9kdWNlZCB0aGUgYnV5ZXIgdG8gdGhlIHByb3BlcnR5IGR1cmluZyB0aGUgY29udHJhY3QgaW4gb3JkZXIgdG8gaGF2ZSBhIGNsYWltIHRvIHRoZSBjb21taXNzaW9uLiAKQWRtaXJhbCBTY2hvZmllbGQgaGVscHMgVGVubmVzc2VlIHNpbmsgTm8KTWVkaXVtIG1vZGUgc3RyaXBwaW5nIGluIGEgc3RyaXAgcG9rZXIgZ2FtZSBtZWFucyB0aGF0IHRoZSB3aW5uZXIgaXMgdGhlIG9ubHkgcGVyc29uIHdobyBpcyBub3Qgc3RyaXBwaW5nLCBidXQgdGhlIGxvc2VycyBoYXZlIHRoZSBvcHRpb24gdG8gYnV5IGJhY2sgY2xvdGhlcyBpbiB0aGUgY29taW5nIHJvdW5kcy4gCkEgZmV3IHJlY29tbWVuZGF0aW9ucyBpZiB5b3UgZ28gZm9yIHRoaXMgYm9vay4gRmlyc3QsIGRvbiBmZWVsIHRoZSBuZWVkIHRvIGZvbGxvdyBoaXMgaW5ncmVkaWVudCBhbW91bnRzIGV4YWN0bHksIGp1c3QgZm9sbG93IHRoZSBwZXJjZW50YWdlcyBhbmQgYmFrZSB0aGUgYW1vdW50IHRoYXQgd29ya3MgZm9yIHlvdS4gClNvbWUgZ2FtZXMgaGF2ZSBhbGwgZm91ciBzdWl0cyBlcXVhbCwgbm8gc3VpdCBoaWdoZXIgdGhhbiBhbm90aGVyLiAKUG9rZXIgb3BlcmF0b3JzIHRoYXQgaG9sZCBsaWNlbnNlcyBhbmQgY2VydGlmaWNhdGVzIGFsd2F5cyBwcm92aWRlIHNhZmUgYW5kIHNlY3VyZSBnYW1ibGluZyBlbnZpcm9ubWVudC4gRmlyc3Qgb2YgYWxsLCB0aGV5IHVzZSBzZWN1cmUgcG9rZXIgc29mdHdhcmUuIFNlY29uZCwgdGhleSB1c2UgZGF0YSBlbmNyeXB0aW9uIGluIG9yZGVyIHRvIHNlY3VyZSBpbmZvcm1hdGlvbiBwcm92aWRlZCBieSB1c2Vycy4gVmVyeSBvZnRlbiB1c2VycyBwcm92aWRlIG5vdCBvbmx5IHRoZWlyIG5hbWVzIGFuZCBhZGRyZXNzZXMsIGJ1dCBhbHNvIGNyZWRpdCBjYXJkIGRldGFpbHMuIExpY2Vuc2VkIHBva2VyIHNpdGVzIGFyZSBzYWZlIGFuZCB0aGlzIHBlcnNvbmFsIGFuZCBmaW5hbmNpYWwgaW5mb3JtYXRpb24gaXMgc3RyaWN0bHkgY29uZmlkZW50aWFsLiBXaGVuIHlvdSBrbm93IHRoYXQgeW91IGpvaW5lZCBhIGxpY2Vuc2VkIGFuZCByZWd1bGF0ZWQgcG9rZXIgc2l0ZSwgeW91IGtub3cgdGhhdCB5b3VyIGluZm9ybWF0aW9uIGlzIHNhZmUuCkkga25vdyBob3cgdG8gc2FsdmFnZSAicmVndWxhciIgYmVlcnMgdXNpbmcgdGhlIEJlbGxzIGd1aWRlIHRvIGN1bHR1cmluZ0kgaGF2ZSB0aGUgZHJlZ3MgZnJvbSBhIGJvdHRsZSBvZiByaHViYXJiIGdvc2UgYnV0IGhhdmluZyBuZXZlciB0cmllZCB0byBjdWx0dXJlIGZyb20gYSBzb3VyIEkgZG9uIGtub3cgaWYgdGhlIHByb2Nlc3MgaXMgdGhlIHNhbWUgb3IgZXZlbiBkb2FibGUuIElmIGl0IGlzIGEgcmVhbCBmYXJtaG91c2UgYmVlciB0aGVuIHN1cmUgSSBpbWFnaW5lIHRoZSBwcm9jZXNzIGlzIHRoZSBzYW1lLCBob3dldmVyIGlmIGl0IGlzIGEga2V0dGxlIHNvdXIgdGhlbiBoYXJ2ZXN0aW5nIHRoZSBkcmVncyB3aWxsIGp1c3QgeWllbGQgb3V0IHdoYXRldmVyIHRoZSBob3VzZSBzdHJhaW4geWVhc3QgaXMgYW5kIEkgcmVhbGx5IHdvdWxkbiBnYWluIGFueSBmdW5rLi4gClNoZSB3b3VsZCBub3QgaGF2ZSBiZWVuIHdvcnRoeSBvZiBhIGhhcHBpbHkgZXZlciBhZnRlci4gCkFsc28sIEkgbm90IHNheWluZyBKYXkgV2hpdGUgaXMgYmV0dGVyIGluIHRoYXQgZGVwYXJ0bWVudCwganVzdCB0aGF0IGhlIDI2IGFuZCBpcyBhbHJlYWR5IGRvaW5nIHRoZXNlIHRoaW5ncyB3aGljaCBpcyBhIHNpZ24gdGhhdCBoZSBhbHJlYWR5IHJlYWxseSBnb29kLiAKTWVuIGFyZSB3ZWxjb21lIHRvIHBhcnRpY2lwYXRlIGFzIGNvYWNoZXMsIHJlZmVyZWVzLCBhbm5vdW5jZXJzIGFuZCBpbiB0ZWFtIHN1cHBvcnQgcm9sZXMuIFRoZSBzcG9ydCBpcyBnb3Zlcm5lZCBieSB0aGUgcnVsZXMgb2YgdGhlIFdvbWVuJ3MgRmxhdCBUcmFjayBEZXJieSBBc3NvY2lhdGlvbiAoV0ZUREEpLCB3aGljaCBzZXRzIHRoZSBydWxlcyBhbmQgZGV0ZXJtaW5lcyB0aGUgYmFzZWxpbmUgc2tpbGxzIHJlcXVpcmVkIG9mIHBhcnRpY2lwYW50cy4uIApQb2xpY2UgYW5kIHRoZSBib21iIHNxdWFkIHZlcmlmaWVkIHRoYXQgdGhlIGRldmljZSBkaWQgbm90IGNvbnRhaW5leHBsb3NpdmUgbWF0ZXJpYWwsIGFuZCB0aGUgbWFuIHdhcyB0YWtlbiBpbnRvIGN1c3RvZHkgZm9yIGEgbWVudGFsIGhlYWx0aCBldmFsdWF0aW9uLERhbGJlcmcgc2FpZC4KSSBsaWtlIGRldGVybWluZWQgb3IgcHJlZGF0b3J5IGluIHRoZSBmcmVlIHNsb3QuQWxzbyBmcmVlIHRpcCwgd2hlbiB1c2luZyBzdXBwb3J0IHN0YXRpb24ga2VlcCB0aGUgbW9kIG9uIHRoZSBhdXRvIHJldml2ZSBvbmUgYXMgaXQgaGFzIHRoZSBiZXN0IGhlYWwgcGVyIHNlY29uZCBidXQgc3RpbGwgdW5sb2NrcyB0aGUgb3RoZXIgbW9kcy4gCk1pa2UgVGFrYXlhbWEgKEdQSTQwNzIpIG9mIHRoZSBQaGlsaXBwaW5lcyBtYWRlIHN1cmUgdGhhdCB0aGUgbGF0ZXN0IEFzaWFuIFBva2VyIFRvdXIgdGl0bGUgd291bGQgcmVtYWluIGluIGhpcyBob21lIGNvdW50cnksIHdpbm5pbmcgdGhlIE1hbmlsYSBNYWluIEV2ZW50LCBlYXJuaW5nICQ3OSwwNDEuIEZvcm1lciBBc2lhbiBQbGF5ZXIgb2YgdGhlIFllYXIsIFNhbWFkIFJhemF2aSAoR1BJMTI3OSkgd291bGQgZmluaXNoIHRoaXJkLiBUaGUgVUsgcHJvIHJlbWFpbnMgb25lIG9mIHRoZSBtb3N0IHBvcHVsYXIgcGxheWVycyBvbiB0b3VyIGFuZCBjb250aW51ZXMgdG8gc3RhciBpbiBldmVudHMgcHJlc2VudGVkIGFsbCBvdmVyIEFzaWEuLiAKUGVyaGFwcyBpbiBhbm90aGVyIGF0dGVtcHQgdG8gJ3dpbicsIGdvIGJhY2sgdG8gdGhlIGxvYW4gb2ZmaWNlciBhbmQgdGVsbCBoaW0gdG8gY292ZXIgaXQuIApBIDMyIHN0b3JleSBza3lzY3JhcGVyIHdhcyByZWNlbnRseSBjb21wbGV0ZWQgaW4gTmV3IFlvcmsgd2l0aCBzaW1pbGFyIGhpZ2hyaXNlIG1vZHVsYXIgYnVpbGRpbmdzIHRvIGZvbGxvdy4gRXZlbiB0aGUgU3dlZGlzaCBjb21wYW55IElLRUEgaXMgc2VsbGluZyBwcmUgZmFicmljYXRlZCBob21lcyBjYWxsZWQgQm9LbG9rLiAKSSBoYXZlIG5ldmVyIGJlZW4gYWJsZSB0byBwdWxsIGEgd2hpc2tleSBnaXJsLi4gCkVtb3Rpb25hbCByZWd1bGF0aW9uIHRlY2huaXF1ZXMgYXJlIHZlcnkgaW1wb3J0YW50LiBBIGRvd25zaWRlIHRvIGJlaW5nIGEgSFNQIGlzIGZlZWxpbmcgZXZlcnl0aGluZyBzbyBkZWVwbHksIHdoaWNoIGNhbiBiZSBvdmVyd2hlbG1pbmcgYW5kIGNhdXNlIGFueGlldHksIGRlcHJlc3Npb24sIGV0Yy4gCkhlIHdhcyBzdGlsbCBhcmd1aW5nIHdpdGggYW5kIHRocmVhdGVuaW5nIHRoZW0gd2hlbiB0aGUgcG9saWNlIHdhbGtlZCBpbiB0aGUgZG9vci4uIApJbiBHZXJtYW55IHlvdSBoYXZlIHRvIG9iZXkgdGhlIHRyYWZmaWMgbGlnaHRzLCBpdCBkb2VzbiBtYXR0ZXIgaWYgdGhlcmUgaXMgbm8gb3RoZXIgdmVoaWNsZSBpbiBzaWdodCwgeW91IHdhaXQgdW50aWwgdGhlIGxpZ2h0IHR1cm5zIGdyZWVuLiBUaGVyZSBhcmUgc29tZSBpbnRlcnNlY3Rpb25zIHdoZXJlIHlvdSBhcmUgYWxsb3dlZCB0byBtYWtlIGEgcmlnaHQgdHVybiBldmVuIGlmIHRoZSBsaWdodCBpcyByZWQgKGFmdGVyIGNvbWluZyB0byBhIGNvbXBsZXRlIHN0b3AgZmlyc3QgYW5kIG1ha2luZyBzdXJlIHRoZXJlIGlzIG5vIHRyYWZmaWMsIGV0Yy4pLCB0aG9zZSBoYXZlIGRpc3RpbmN0IGEgc2lnbiBuZXh0IHRvIHRoZSByZWQgbGlnaHQuIFRoZXJlIGlzIG5vIGV4Y2VwdGlvbiB0aGF0IGFsbG93cyBtYWtpbmcgYSBsZWZ0IHR1cm4gd2hpbGUgdGhlIGxpZ2h0IGlzIHJlZCB0aG91Z2guIChZb3UgbWF5IGFsc28gaWdub3JlIGEgcmVkIGxpZ2h0IGlmIHlvdSBoYXZlIHdhaXRlZCAiYW4gYXBwcm9wcmlhdGUgYW1vdW50IG9mIHRpbWUgdG8gY29tZSB0byB0aGUgY29uY2x1c2lvbiB0aGUgbGlnaHQgaXMgbm90IG9wZXJhdGluZyBwcm9wZXJseSIgICB0aGVyZSBpcyBubyBmaXhlZCB2YWx1ZSBpbiB0aGUgbGF3IGJ1dCBsYXd5ZXJzIGFyZSBnZW5lcmFsbHkgcmVjb21tZW5kaW5nIHRvIHdhaXQgYXQgbGVhc3QgNSBtaW51dGVzIGJlZm9yZSBpZ25vcmluZyBhIHJlZCBsaWdodCksCklsIGEgYWluc2kgaW5zaXN0IHN1ciBsZSBmYWl0IHF1ZSBsYSBCYWRvaXQsIGdyY2UgIHNvbiBiaWNhcmJvbmF0ZSwgcGVybWV0IHVuZSBjdWlzc29uIGJlYXVjb3VwIHBsdXMgcmFwaWRlIGRlcyBsZ3VtZXMgbWFpcyBhdXNzaSBkZXMgdmlhbmRlcy4gRGlmZmljaWxlIHBvdXJ0YW50IGRlIHNlIGRjaWRlciAgbCd1dGlsaXNlciBjaGV6IHNvaSwgdnUgbGUgcHJpeCwgcGx1dHQgcXUndW5lIHBpbmNlIGRlIGJpY2FyYm9uYXRlIGVuIHBvdWRyZSAhIE1haXMgc29uIGRpc2NvdXJzIHRhaXQgZGVzdGluICBsYSByZXN0YXVyYXRpb24gZGUgYm9uIG5pdmVhdSBldCBpbCBhcHBhcmF0IGVuIGVmZmV0IGFzc2V6IHNlbnMsIGRlIGZhb24gcGx1cyBsYXJnZSwgZGUgcHJ0ZXIgdW4gcGV1IGQnYXR0ZW50aW9uICBsYSBxdWFsaXQgZGUgbCdlYXUgZGFucyBsYXF1ZWxsZSBvbiBjdWl0IGRlcyBtZXRzIGQnZXhjZXB0aW9uLi4gClBlcmhhcHMgbW9zdCBpbXBvcnRhbnRseSwgdGhlIGxhd3MgYW5kIHN1Y2ggZGVwZW5kZWQgb24gdGhlIHBlcmlvZCBvZiBSb21hbiBoaXN0b3J5IHdoaWNoIGlzIGJlaW5nIGRpc2N1c3NlZC4gCkdNIENFTyBEYW4gQWtlcnNvbiByZWNlbnRseSB0b2xkIHRoZSBEZXRyb2l0IE5ld3MgdGhhdCBoZSBzdGFydGluZyB0byBzZWUgc29tZSBpbXByb3ZlbWVudCBpbiB0aGUgRXVyb3BlYW4gbWFya2V0LgpTdWJzdGl0dXRlIGZvciB0aGUgYXBwcm9wcmlhdGUgYm9keSBpbiB0aGUgVVMgb3IgYSBTdGF0ZSBhbmQgeW91IGhhdmUgdGhlIHNhbWUgcmVzdWx0LiBKdWRnZXMgc2hvdWxkIG5vdCBiZSBmcmVlIHRvIGp1c3QgbWFrZSBzaGl0IHVwLCBlc3BlY2lhbGx5IHdoZW4gdGhleSBhcmUgZWl0aGVyIHBvbGl0aWNhbCBhcHBvaW50ZWVzIG9yIGVsZWN0ZWQgKGFuZCB0aGVyZWZvcmUgZGVwZW5kIG9uIHB1YmxpYyBpZ25vcmFuY2UgYW5kIHByZWp1ZGljZSB0byBrZWVwIHRoZWlyIGpvYnMpLgpXZSBuZXZlciByZWNlaXZlZCBpdC4gCllvdSBjYW4gc3RvcCB0aGF0LiBXaGF0IHlvdSBDQU4gZG8gaXMgY2hvb3NlIHlvdXIgZGl2b3JjZS4gCkkgaG9wZSBteSBjb3VudHJ5IGFuZCBvdGhlcnMgZm9sbG93IHN1aXQgc29vbi4gCkl0IGludm9sdmVzIG9yZ2FuaXNhdGlvbnMgc3VjaCBhcyBjaHVyY2ggYW5kIGNvbW11bml0eSBncm91cHMgd2hvIGFyZSBzZWVraW5nIHRvIHJlZHVjZSB0aGUgaW1wYWN0IG9mIHBva2VyIG1hY2hpbmVzLiBUaGUgYWxsaWFuY2Ugd2FudHMgdG8gbG93ZXIgdGhlIG1heGltdW0gYmV0IG9uIHBva2llcyBpbiBWaWN0b3JpYSB0byBhICQxIHBlciBiZXQgYnkgdGhlIGVuZCBvZiAyMDE4IGFuZCBoYXJuZXNzIHRoZSBzdXBwb3J0IG9mIGNvdW5jaWxzIHRvIHRhY2tsZSB0aGUgbG9jYXRpb24gb2YgbWFjaGluZXMuIENyIENoYW1iZXJzIGJlbGlldmVzIEluZGlnbyBtZW1iZXJzaGlwIG9mIHRoZSBhbGxpYW5jZSB3aWxsIGJvbHN0ZXIgaXRzIG9wcG9zaXRpb24gdG8gcG9rZXIgbWFjaGluZXMuIApDaGVtaWNhbCBwZWVscyBoYXZlIHRoZSBhYmlsaXR5IHRvIG1ha2UgeW91IGxvb2sgeW91bmdlciBieSBlbGltaW5hdGluZyB0aGUgYXBwZWFyYW5jZSBvZiBza2luIGltcGVyZmVjdGlvbnMgc3VjaCBhcyBzdW5zcG90cyBhbmQgYWNuZSBzY2FycyBbc291cmNlOiBMZXZpbmVdLiAKSSB3ZW50IHRvIHRoZSBsYWJvdXIgRGVwdCB5ZXN0ZXJkYXkgYW5kIHN0b29kIGluIGEgbWFzc2l2ZSBxdWV1ZSBmb3IgYW4gaG91ciBhbmQgYXMgSSBnb3QgYWJvdXQgZmlmdGggZnJvbSB0aGUgZnJvbnQgdGhleSBzYWlkIHRoZSBzeXN0ZW0gaXMgb2ZmbGluZS4gSSB3YXNuIHVwc2V0IGJlY2F1c2UgYmVpbmcgdXBzZXQgd2lsbCBoZWxwIG5vdGhpbmcuIEl0IGlzIHdoYXQgaXQgaXMuIApPbiBaeW5nYSBJUE8gZmlsaW5nLCB0aGUgY29tcGFueSBpcyB3ZWxsIGF3YXJlIG9mIGZpZXJjZSBjb21wZXRpdGlvbiBpbiB0aGUgZ2FtaW5nIHNwYWNlLiBUaGUgZmlybSBjaXRlZCBFbGVjdHJvbmljIEFydHMsIFdhbHQgRGlzbmV5LCBtb2JpbGUgZ2FtZSBkZXZlbG9wZXJzIHN1Y2ggYXMgUm92aW8gKHdoaWNoIG1ha2VzIEFuZ3J5IEJpcmRzKSBhbmQgb3RoZXIgY29tcGFuaWVzIGFzIGNvbXBldGl0b3JzLiBaeW5nYSBhbHNvIG5vdGVkIHRoYXQgY29tcGFuaWVzIHRoYXQgZG8gbm90IG1ha2Ugc29jaWFsIGdhbWVzIHRvZGF5IG1heSBkZWNpZGUgdG8gZW50ZXIgdGhlIG1hcmtldCBpbiB0aGUgZnV0dXJlLiAKU3RldmVucy4gVGhlIGxlZ2FsIGlzc3VlIGlzIHdoZXRoZXIgQ29uZ3Jlc3MgaW5mcmluZ2VkIG9uIEZpcnN0IEFtZW5kbWVudCByaWdodHMgd2hlbiBpdCBwYXNzZWQgYSBsYXcgb3V0bGF3aW5nIHRoZSBkaXN0cmlidXRpb24gb2YgaW1hZ2VzIG9mIGFuaW1hbCBjcnVlbHR5IGZvciBwcm9maXQuIApUdXJuYmFja3RpbWUyICAzIHBvaW50cyAgc3VibWl0dGVkIDQgZGF5cyBhZ28KSSBhZ3JlZSB3aXRoIHRoZSBwcmV2aW91cyBjb21tZW50IHRvIChpbml0aWFsbHkpIGZvY3VzIG9uIG91dCBvZiB0aGUgYm94LiAKIktlcnJpZ2FuIGhhcyBwcmVhY2hlZCBpbiB0aGUgb3BlbiBhaXIgb3ZlciAxLDAwMCB0aW1lcyBhdCBvdmVyIDgwIGRpZmZlcmVudCBVbml2ZXJzaXRpZXMsIGluIG1hbnkgUHVibGljIFBhcmtzLCBvbiBTdWJ3YXlzLCBvbiBTdHJlZXQgQ29ybmVycywgaW4gQmFyL0NsdWIgRGlzdHJpY3RzLCBhdCBQYXJhZGVzLCBhdCBTcG9ydGluZyBFdmVudHMsIGF0IEJlYWNoZXMsIGF0IFN0YXRlL0NvdW50eSBGYWlycywgYXQgQ29uY2VydHMsIGF0IEZlc3RpdmFscyBhbmQganVzdCBhYm91dCBhbnkgb3RoZXIgcHVibGljIHBsYWNlIHdoZXJlIHRoZXJlIGFyZSBsb3RzIG9mIGxvc3Qgc2lubmVycyB3aG8gbmVlZCB0byBoZWFyIHRoZSBHb3NwZWwgb2YgSmVzdXMgQ2hyaXN0IQpJIGF0dGVtcHRlZCB0byBwb2xpdGVseSBkaXNzdWFkZSBoZXIgKCB5b3Ugc3VyZSBhYm91dCB0aGlzPyBJdCBUTXMgbGlrZSBhIHRocmVlIGhvdXIgbG9uZyBhd2FyZCBzaG93ICksIGJ1dCBzaGUgd2FzIG5vdCBkaXNzdWFkZWQuIApEci4gClRoaXMgaW5mb3JtYXRpb24gY2FuIGhlbHAgeW91ciBkZWNpc2lvbnMgYW5kIHVsdGltYXRlbHkgaGVscCB5b3Ugd2luLi4gClNvIHdoYXQgPy4gCkFuZCBpdCByZXZpdmVkIHRoZSBpZGVhIHRoYXQgdGhlIHByZXNpZGVudCdzIHR3ZWV0cyB0aGVtc2VsdmVzIG1pZ2h0IGJlIHVzZWQgYXMgZXZpZGVuY2UgdGhhdCBoZSBpcyBhdHRlbXB0aW5nIHRvIG9ic3RydWN0IGp1c3RpY2UuLiAKVGhlIGZpcnN0IHRoaW5nIHlvdSBoYXZlIHRvIHVuZGVyc3RhbmQgaXMgdGhhdCBQYXVsc29uIGhhcyBiZWVuIGFyb3VuZCBmb3IgeWVhcnMgYW5kIGlzIGNvbnNpZGVyZWQgIlRvcCBvZiB0aGUgbGluZSIgd2hlbiBpdCBjb21lcyB0byBhIFBhdWxzb24gUG9rZXIgQ2hpcCBTZXQuIFdlIGV2ZW4gc2VlIHRoZW0gaW4gdGhlIGNhc2lub3MgZnJvbSB0aW1lIHRvIHRpbWUgd2hlbiB3ZSdyZSB0cmF2ZWxpbmcgYXJvdW5kLCB3aGV0aGVyIGl0IGJlIGluIHRoZSBzdGF0ZXMgb3Igb3ZlciBpbiBFdXJvcGUuIEl0IGp1c3QgZ29lcyB0byBzaG93IHlvdSB0aGF0IG1ha2luZyBhIG5hbWUgZm9yIHlvdXJzZWxmIGluIHRoZSBwb2tlciBpbmR1c3RyeSwgY291bGQgcG9zc2libHkgYWxsb3cgeW91IHRvIHRvdWNoIGFsbCBjb3JuZXJzIG9mIHRoZSB3b3JsZC4uIApJdCB3YXMgZm91bmRlZCBieSBqb3VybmFsaXN0IGFuZCBlbnRyZXByZW5ldXIgQ2FjYXUgT2xpdmVyIGFuZCBhaW1zIHRvIGNyb3duIHRoZSBiZXN0IGJ1dHRvY2tzIGluIEJyYXppbC4KTWFueSBwYXR0ZXJucyByZXBlYXQgdGhlbXNlbHZlcyBhbmQgeW91IGNvbWUgdG8gcmVjb2duaXplIHRoZW0gdGhyb3VnaCBzdHVkeS4gCkJhcnRvbidzIGJpbGwgd291bGQgb3BlbiB1cCB0aGF0IG1hcmtldCBieSBlc3RhYmxpc2hpbmcgYSByZWd1bGF0b3J5IGZyYW1ld29yayBhbmQgY29uc3VtZXIgcHJvdGVjdGlvbnMuIEVhY2ggc3RhdGUgY291bGQgZGVjaWRlIHdoZXRoZXIgdG8gbGV0IGl0cyByZXNpZGVudHMgcGxheSBvbmxpbmUuIEhlJ3MgaG9waW5nIHRoZSBlZmZvcnQgZ2FpbnMgbW9yZSB0cmFjdGlvbiB0aGlzIHllYXIsIG5vdyB0aGF0IG9ubGluZSBwb2tlciBpcyB1bmRlciByZXZpZXcgYnkgbGF3bWFrZXJzIGluIFBlbm5zeWx2YW5pYSwgQ2FsaWZvcm5pYSwgTmV3IFlvcmsgYW5kIG90aGVyIHN0YXRlcy4gCkxpc3RlbiwgSSd2ZSBtYWRlIGVub3VnaCBtb25leSBpbiBwb2tlciBJIGRvbid0IGhhdmUgdG8gd29ycnkgYWJvdXQgcHVyY2hhc2luZyB0aGVzZSBwcm9kdWN0cyBsaWtlIHRoZSBIb3cgVG8gQmVhdCBObyBMaW1pdCBUZXhhcyBIb2xkIEVtIGluZm9ybWF0aW9uLi4gCiJUaGUgZmluYWwgd2VudCBmb3IgNDUgbWludXRlcywiIEZyYW5jaXMgc2FpZC4KSmUgdmllbnMgcGFyIGV4ZW1wbGUgZGUgcmVjZXZvaXIgdW5lIHZlcnNpb24gbnVtcmlxdWUgZCd1biBsaXZyZSBzdXIgbGUgbXl0aGUgZGUgbCdpc2xhbSBhbmRhbG91IHF1ZSBqJ2FsbGFpcyBhY2hldGVyIHVuIGpvdXIgb3UgbCdhdXRyZS4gQnJlZiwgbGVzIGFwcG9ydHMgc29udCBxdWFudGl0YXRpdmVtZW50IGluc2lnbmlmaWFudHMuQ29uY2VybmFudCBsZXMgdmFjY2luYXRpb25zIHF1YW5kIG9uIG0nZW4gYSBwYXJsIGNlbGEgYSB0IHBvdXIgbWUgZ2F2ZXIgZGUgY29ubmVyaWVzIGNvbnNwaXJhdGlvbm5pc3RlIHVuIHBldSAgbGEgQ2xhaXJlIFNldmVyYWMsIGR1IHN0eWxlIHByb2pldCBkZSBkcG9wdWxhdGlvbiBtYXNzaXZlIHBhciBsZSBiaWFpcyBkJ3VuIGVtcG9pc29ubmVtZW50IGNvbmNlcnQuIApNeSBiaWdnZXN0IHBldCBwZWV2ZSBhbHdheXMgaGFzIGJlZW4gYW5kIGFsd2F5cyB3aWxsIGJlIHRoZSBzdW5kYXkvaG9saWRheSBzY2hlZHVsaW5nLiBMaWtlIGZpbmUsIEkgdW5kZXJzdGFuZCBsZXNzIHBlb3BsZSwgbGVzcyBzaG9wcGVycyBzbyBsZXNzIGZyZXF1ZW50IHRyYW5zaXQuIApGaWdodGluZyBvbiBhIGNvbnRpbmVudCBjYWxsZWQgQWZyaWNhLCBmbG9hdGluZyBvdXRjYXN0IGluIHRoZSBNaWxreSBXYXkgLiBIb3cgZGlkIGhlIHRoZW4sIEFsaSwgbWFuYWdlIHRvIGlsbHVtaW5hdGUgdGhlIGVudGlyZSBnYWxheHkgd2l0aCBoaXMgYXVyYT8gVGhhdCBpcyB0aGUgcHVyaXR5IG9mIGJveGluZy4gCldoeSBybXMgdm9sdGFnZSBjb25zaWRlciBpbiBhYyBuZXR3b3JrPwpUaGUgd29tYW4sIHdobyBzYWlkIGhlciBuYW1lIHdhcyBTb3BoaWEgYW5kIHRoYXQgc2hlIGNhbWUgZnJvbSBDaGluYSwgb2ZmZXJlZCB0aGUgcmVwb3J0ZXIgImV2ZXJ5dGhpbmciICAgYSBrbm93biBjb2RlIHdvcmQgZm9yIGludGVyY291cnNlIGluIHNleCB0cmFkZSBtYXNzYWdlIHBhcmxvcnMgICBmb3IgJDEwMC4KVGhleSB0YWxrIGFib3V0IHdhbnRpbmcgdG8ga2lsbC9oYXJtIHZvdGVycy9wb2xpdGljaWFucyB0aGV5IGhhdGUuIApIZSBnb2VzIG92ZXIgYWxsIHRoZSB3YXlzIHdoeSB0aGUgRmVybWkgUGFyYWRveCBkb2VzbiBoYXZlIGEgc2ltcGxlIHNvbHV0aW9uLiAKSW1hZ2luZSB3aGF0IGl0J2QgZG8gdG8gaGltIHRvIGJlIGRyYWdnZWQgZnJvbSBoaXMgaXNsYW5kLCB0YWtlbiBvbiBhIGJvYXQvaGVsaWNvcHRlci9wbGFuZSwgbWFkZSB0byBzdGFuZCBpbiBhIHN0cmFuZ2Ugcm9vbSBpbiBmcm9udCBvZiBzb21lIGFsaWVuIGxvb2tpbmcgcGVvcGxlIHdlYXJpbmcgYWxpZW4gZ2FybWVudHMgd2hpbGUgdGhleSBxdWVzdGlvbiB5b3UgaW4gdGhlaXIgYWxpZW4gbGFuZ3VhZ2UuIElmIEkgd2VyZSBoaW0gSSdkIGhhdmUgYSBtZW50YWwgYnJlYWtkb3duLiAKSW4gcmV0cm9zcGVjdCBJIHdpc2ggSSBoYWQgcHV0IHNvbWUgbW9uZXkgb250byBzaXRlcyB5ZWFycyBhZ28gcmF0aGVyIHRoYW4gd2FpdGluZy4gSSB3b3VsZCBzdWdnZXN0IHlvdSBqdXN0IGRlcG9zaXQgYSBzbWFsbCBhbW91bnQgb2YgbW9uZXkgdGhhdCB5b3Ugd291bGQgdXN1YWxseSB1c2UgZm9yIGVudGVydGFpbm1lbnQgYW5kIHBsYXkgdGhlIHNtYWxsZXN0IHN0YWtlcy4gClB1YiBNZWQuIEdvdjogQmlvY2hlbSBCaW9waHlzIFJlcyBDb21tdW4uIDE5OTQgTWFyIDMwOzE5OSgzKToxNTA0IDguCkkgd2FudGVkIHRvIHNhdmUgdGhpcyBwaWVjZSBmb3IgbGFzdCBqdXN0IGJlY2F1c2UgdGhlIGFib3ZlIGluZm9ybWF0aW9uIGFsb25lIGlzIGVub3VnaCB0byB1bmRlcnN0YW5kIHdoeSBjYWxsaW5nIGRvd24gaXMgZ29vZC4gVGhlIGZsb3B6aWxsYSBhbmFseXNpcyBkb2VzbiBldmVuIGNvbnNpZGVyIHJlbW92YWwgZWZmZWN0cyBvbiB0aGUgZmxvcCB3aGVuIHlvdSBoYXZlIHRvcCBwYWlyLiAKWW91IGNhbiBhbHNvIHByZWRpY3QgYW5kIHBsYW4gYWxsIHlvdXIgZ2FtYmxpbmcgc3BlbmRpbmcuIApUaGUgZmlyc3QgZmV3IHRpbWVzIHdlIGhhZCBzZXggSSBzcGVudCB0aGUgd2hvbGUgdGltZSB0cnlpbmcgdG8gY29tZSBhZ2FpbiBhbmQgaXQgZW5kZWQgdXAgbm90IGJlaW5nIGFsbCB0aGF0IGdvb2QgZm9yIG1lLiAKVGhlIGZhY3QgdGhhdCBoZSBkZW1vbnN0cmF0ZXMgYWdhaW4gYW5kIGFnYWluIGFuZCBhZ2FpbiB0aGF0IGhlIHRvdGFsbHkgYW5kIGluIGV2ZXJ5IHJlc3BlY3QgaWdub3JhbnQgb2YgdGhlIGZhY3R1YWwgYmFzaXMgb2YgdGhlIHBvaW50cyBoZSBhcmd1aW5nIHdpdGggaXMgYmFkLiAKIkFuIGljZSBjb3JlIHdpdGhvdXQgYW55IGRlcHRoIHJlZmVyZW5jZXMgICBJIHNob3VsZG4ndCBzYXkgdGhpcyAgIGl0J3MgZ29vZCBmb3IgbWFyZ2FyaXRhcywiIGhlIHNhaWQsIHBva2VyIGZhY2VkLgpJIG5vdGljZWQgdGhhdCBJIHN0YXJ0ZWQgZmVlbGluZyB0aGUgYnVpbGQgdXAgb2YgYW4gb3JnYXNtIGp1c3QgZnJvbSBwZW5ldHJhdGlvbiwgd2l0aG91dCBydWJiaW5nIG15IGNsaXQuIEJ1dCBoZSBmaW5pc2hlcyBmYWlybHkgcXVpY2ssIHNvIGl0IG5ldmVyIGdvdCB0aGVyZS4gSXQgd2FzbiB1bnRpbCBhYm91dCAyIHllYXJzIGludG8gb3VyIHJlbGF0aW9uc2hpcCB0aGF0IEkgc3RhcnRlZCB3YW50aW5nIHRvIHdvcmsgb24gYWNoaWV2aW5nIG9yZ2FzbSB3aXRob3V0IGNsaXQgc3RpbXVsYXRpb24sIGJlY2F1c2UgSSBmZWx0IGxpa2UgbWF5YmUgSSBjb3VsZCwgdGhvdWdoIEkgcHJldmlvdXNseSB0aG91Z2h0IG15IHdob2xlIGxpZmUgdGhhdCBJIHdhc24gY2FwYWJsZSBvZiB0aGF0LiAKR3Jvd2luZyBlY29ub21pYyBpbnNlY3VyaXR5LCB0aGUgaW5jcmVhc2UgaW4gd29tZW4gZWR1Y2F0aW9uYWwgbGV2ZWxzIGFuZCBzYWxhcnkgcG90ZW50aWFsLCBhbmQsIGxldHMgZmFjZSBpdCwgdGhlIGZhY3QgdGhhdCBBbWVyaWNhbiBjdWx0dXJlIGp1c3QgZG9lc24gY29uc2lkZXIgc3RyYWlnaHQgd2hpdGUgQ2hyaXN0aWFuIGd1eXMgdmVyeSBzZXh5LCBtYW55IG9mIHRoZW0gYXJlIGRyYXduIGludG8gdGhlIHByb21pc2Ugb2YgdGhlIFByb21pc2UgS2VlcGVycyAob3IgdGhlIG5ldyBEb2NrZXJzIGFkcyBmb3IgdGhhdCBtYXR0ZXIpLiBQcm9taXNlIGdvZXMgc29tZXRoaW5nIGxpa2UgdGhpczouIApIYXZpbmcgc2FpZCB0aGF0LCB0byBnZXQgdG8gUkVBTExZIGhpZ2ggc3Rha2VzIFBTIHBsYXkgbW9uZXkgcG9rZXIgeW91IHdvdWxkIGhhdmUgdG8gZWl0aGVyIHBsYXkgZm9yIGEgTE9ORyB0aW1lIG9uIHRoZXJlIGFjY3J1aW5nIGNoaXBzIHRvIHBsYXkgdGhhdCBoaWdoLCBvciBwdXJjaGFzZSBtaWxsaW9ucyAob3IgYmlsbGlvbnMpIG9mIHBsYXkgY2hpcHMgZnJvbSBQUy4gVGhlcmVmb3JlLCBpIHN0dWRpZWQgcG9rZXIgYSB0b24gYmVmb3JlIEkgcHV0IG1vbmV5IG9udG8gYW55IHdlYnNpdGUuIEluIHJldHJvc3BlY3QgSSB3aXNoIEkgaGFkIHB1dCBzb21lIG1vbmV5IG9udG8gc2l0ZXMgeWVhcnMgYWdvIHJhdGhlciB0aGFuIHdhaXRpbmcuIApIYXMgYmVlbiBhIGNoYWxsZW5nZSBwcm9ibGVtIGZvciBhcnRpZmljaWFsIGludGVsbGlnZW5jZSBnb2luZyBiYWNrIG92ZXIgNDAgeWVhcnMsIGFuZCB1bnRpbCBub3csIGhlYWRzIHVwIGxpbWl0IFRleGFzIGhvbGQgcG9rZXIgd2FzIHVuc29sdmVkLgpTb21lIHBhdGllbnRzIHN1ZmZlciBmcm9tIGFpciBodW5nZXIgb25seSB3aGVuIHRoZXkgZXhlcnQgdGhlbXNlbHZlczsgb3RoZXJzIGRvIHNvIGV2ZW4gYXQgcmVzdC4KSWYgSSBoYWQgdGhlIGRvdWdoIEkgd291bGQgZGVmaW5pdGVseSBnZXQgYSA1IGN1cCBvciBzbWFsbGVyIElIIGNvb2tlciBkZXBlbmRpbmcgb24gdGhlIHNpemUgb2YgeW91ciBmYW1pbHkgYW5kIHlvdXIgbmVlZHMuIEkgdHJ1ZWx5IGRvIHRoaW5rIG15IHJpY2UgY29va2VyIGlzIDEwMCUgQklGTC4gVGhlIG9uZSBmZWF0dXJlIEkgbG92ZSBhYm91dCBteSBjb29rZXIgaXMgdGhlIHRpbWVyLCBJIGNhbiBoYXZlIGZyZXNoIHJpY2UgcmVhZHkgd2hlbiBJIG5lZWQgaXQuIEkgZ2V0IHRoZSBpZGVhIG1hbnkgcGVvcGxlIG1ha2UgYSBmdWxsIHBvdCBhbmQga2VlcCBpdCB3YXJtIGZvciBkYXlzLiBXZSBtYWtlIHdoYXQgd2UgbmVlZCBmb3IgZGlubmVyLgpBbHNvIHRoZXkncmUgdHJhaW5lZCwgdGhleSBoYXZlIGdvb2QgYnMgbWV0ZXJzIGJ1dCBhbHNvIGFjdHVhbCBoZWxwIHRvIGdldCB0aHJvdWdoIGNvbXBsaWNhdGVkIGVtb3Rpb25zIGFuZCBwcm9ibGVtcy4gSSB3YXMgcmVjZW50bHkgZGlhZ25vc2VkIHdpdGggT0NELCBzbyBvbiB0b3Agb2YgdHJ5aW5nIHRvIGdldCBhIGdyaXAgb24gdGhhdCBJIHdhcyBhbHNvIGhhdmluZyBhIGhhcmQgdGltZSBldmVuIHdyYXBwaW5nIG15IGhlYWQgYXJvdW5kIHRoYXQgZGlhZ25vc2lzLiAKWWVscGVyIFNpb2JoYW4gT2cgTWljaGFlbCBQLiwgd2hvIHJldmlld2VkICBvbiBBcHJpbCA2LCB3cm90ZSwgbmV3bHkgb3BlbmVkIGZhbWlseSBidXNpbmVzcyBzZXJ2aW5nIHRhcGFzLCBiZWVyLCB3aW5lIChhbiBhbWF6aW5nIGNvbGxlY3Rpb24gb2YgYm90dGxlcyBmb3Igc2FsZSksIGFuZCBhbGNvaG9sLiAKSGUgc2F5cyBoZSBpcyBub3QgcmVsaWdpb3VzICAgIkkgcHJvYmFibHkgYWdub3N0aWMsIGJvcmRlcmxpbmUgYXRoZWlzdCwiICAgYnV0IGlzIGFuIGV2YW5nZWxpc3QgZm9yIGRhdGEgZHJpdmVuIHNlbGYgaW1wcm92ZW1lbnQgYW5kIHRoZSBBbWVyaWNhbiBmbGF2b3VyZWQgY3VsdCBvZiB0aGUgc3RhcnR1cC4KQWxzbywgaG93IGRvZXMgd29uZGVyYm95IGRlc2VydmUgdG8gYmUgb24gdGhpcyBsaXN0IHdoZW4gaGUgbGl0ZXJhbGx5IGhhZCBUeXJvbiBvbiB0aGUgY2FnZSBmb3Igcm91bmRzLCBuZXZlciB0b29rIGFkdmFudGFnZSwgYW5kIHRoZW4gYWxtb3N0IGdldCBrb2QgbXVsdGlwbGUgdGltZXM/IEFuZCBoZSBtYWRlIG5vIGFkanVzdG1lbnRzIGdvaW5nIGludG8gdGhlIHNlY29uZCBmaWdodCBvdGhlciB0aGFuIG5vdCBraWNraW5nLgpUaGUgY29mZmVlIGluIHRoZSBtb3JuaW5nLCB0aGUgcXVhcnRlcmx5IHZhY2F0aW9uLCB0aGUgY2FzZXMgb2Ygd2luZSBhbGwgdGhhdCBzdHVmZiB0aGF0IG1ha2VzIHlvdXIgam9iIHRvbGVyYWJsZSB0aGF0IG1heWJlIHlvdSB3b3VsZG4gc3BlbmQgbW9uZXkgb24gaWYgeW91IHdlcmUgd29ya2luZyBhIGxlc3Mgc3RyZXNzZnVsIGpvYi4gCkFsbCB0aGUgV29ybGQncyBBIFN0YWdlSW4gTWF5IDE4ODcgVGhvbWFzIFJ1c3NlbGwgU3VsbGl2YW4ncyBoaWdobHkgaW5mbHVlbnRpYWwgc3RhZ2UgYWRhcHRhdGlvbiBvZiBEciBKZWt5bGwgYW5kIE1yIEh5ZGUgb3BlbmVkIGluIEJvc3Rvbi4gCkkgd2VpZ2h0IDYya2cgbm93LCBhbmQgSSAxNTkgdGFsbCwgYW5kIEkgZG9uIGhhdmUgdGhhdCBtdWNoIHRvIGxvc2UuIApJdCBkaWZmaWN1bHQgdG8gbG9vayBhdCB0aGlzIHJhdGlvbmFsbHkgd2hlbiBzb21lYm9keSBjbG9zZSB0byB5b3UgaGFzIGJlZW4gaHVydCBieSB0aGUgc2l0dWF0aW9uLlRoZSB0dW5uZWxzIGludG8gSXNyYWVsIGFyZW4gdG8gc3VwcGxlbWVudCB0aGUgZWNvbm9teSwgdGhvc2UgaW50byBFZ3lwdCB0aG91Z2ggYXJlLiBUaGVyZSBubyB3YXkgdG8gdXNlIHRoZW0gdG8gc3VwcGxlbWVudCB0aGUgZWNvbm9teSBpbiBicmluZ2luZyBhbnl0aGluZyBmcm9tIElzcmFlbC4gVGhvc2UgaW50byBFZ3lwdCBhcmUgYSB2aXRhbCBsaWZlbGluZSBmb3IgdGhlIEdhemFucyBhbmQgaXQgYSB0ZXJyaWJsZSBjb25zZXF1ZW5jZSBvZiB0aGUgYmxvY2thZGUuSSBhZ3JlZSB3aXRoIHlvdSBvbiB0aGUgZmVlbGluZyBvZiBhIG5lZWQgb2YgYSBob21lbGFuZCBmb3IgSmV3cywgd2hpY2ggaXMgd2h5IEkgc3VwcG9ydCBhbiBJc3JhZWxpIHN0YXRlLCBqdXN0IGFzIGxvbmcgYXMgaXQgYmFzZWQgb24gcHJldmlvdXMgYm9yZGVycyBhbmQgYWxsIGNpdGl6ZW5zIGFyZSBhZmZvcmRlZCBlcXVhbCByaWdodHMuIApJIHdhcyBzdGlsbCBub3QgaW50byB0aGUgaWRlYSBhdCBhbGwgd2hlbiB0aGUgdGhpbmcgd2FzIGRlbGl2ZXJlZCB0byBteSBob3VzZSwgYnV0IG15IHJvb21tYXRlIGdhdmUgbWUgc29tZSBwcmV0dHkgZ3JlYXQgYWR2aWNlLiAKTGF0ZSBGYWxsIEZLSyB0b3VyIDIwMTggYXQgU2hhcmtzCllvdSBtaWdodCBhc2sgYXQgdGhlIGxlZ2FsIGFzc2lzdGFuY2Ugb2ZmaWNlIGF0IHlvdXIgdW5pdmVyc2l0eSBmb3IgYWR2aWNlIG9uIHRoaXMgY2FzZS4gCkkgZ2V0IHRoYXQgdGhlIG1hcmtldCBjYW4gcmVtYWluIGlycmF0aW9uYWwgZm9yIGEgbG9uZyB0aW1lLCBidXQgKGluIHJlZmVyZW5jZSB0byBMaXRlY29pbikgYXQgd2hhdCBwb2ludCBkbyB3ZSBnbyBmcm9tICJ0aGUgbWFya2V0IGlzIHN0aWxsIGlycmF0aW9uYWwiIHRvICJva2F5IHRoZSBtYXJrZXQgaXMgYmVpbmcgcmF0aW9uYWwiLiAKV2VuZHkgZGVhbHMgd2l0aCBjb25zdGFudCBhZ2dyZXNzaW9uLCBmcm9tIGJlaW5nIGludGVudGlvbmFsbHkgbWlzIGdlbmRlcmVkIGFsbCB0aGUgd2F5IHRvIHNleHVhbCBhc3NhdWx0LCB0aGUgdGhyZWF0IG9mIHdoaWNoIGlzIGFsd2F5cyBwcmVzZW50LiBwaHlzaWNhbCBwYXJ0IG9mIGhlciB3b21hbmhvb2QgaGFkIGJlZW4gYWxsb3dlZCB0byBiZSBzb2xlbHkgaGVyIG93biwgUGxldHQgd3JpdGVzIG9mIFdlbmR5OyBwZW9wbGUgdHJlYXQgaGVyIGJvZHkgYSBjYXN1YWxuZXNzIHRoZXkgd291bGQgb25seSB0cmVhdCB0aGVpciBvd24uIEl0IGxlZCBoZXIgdG8gYSBkaXNwb3NpdGlvbiB0aGF0IGluaXRpYWxseSBzZWVtcyBwcmlja2x5IHNoZSBnaXZlbiB0byBmaXRzIG9mIGFuZ2VyIChlc3BlY2lhbGx5IHdoZW4gZHJ1bmspIGJ1dCB0aHJvdWdoIGVtcGF0aGV0aWMgY2hhcmFjdGVyaXphdGlvbiwgdGhpcyBpcyBzaG93biB0byBiZSBhIGRlZmVuY2UgbWVjaGFuaXNtIG9mIGEgc2Vuc2l0aXZlIGFuZCBraW5kIHdvbWFuLiBCeSB0aGUgbWlkIHBvaW50IG9mIHRoZSBib29rLCByZWFkZXJzIHdvbmRlciBob3cgV2VuZHkgcmVzdHJhaW5zIGhlcnNlbGYgZnJvbSBnZXR0aW5nIGludG8gY29uc3RhbnQgZmlzdGZpZ2h0cyB3aXRoIHRob3NlIHdobyBvZmZlciB1cCB1bnNvbGljaXRlZCBvcGluaW9ucyBvZiBoZXIuCkJ1dCB3aGVyZSB0aGUgZWNvbm9teSBpcyBjb25jZXJuZWQsIFNpbmdhcG9yZSBpcyB3YXkgYWhlYWQgb2YgTWFsYXlzaWEuIApUdWJlIGluIHRoZSBhbnVzIGlzIG5vdCBoYXVudGVkLiAKTm93IGkgc2VlIHRoYXQgdGhleSBtYWRlIHRoYXQgc2NlbmUgZmlyc3QsIHRvIG1ha2UgcGVvcGxlIHdhdGNoIHRoZSBzaG93LCBhbmQgdGhlbiB0aGV5IGJ1aWxkIGEgY29tcGxldGVseSBkaWZmZXJlbnQgcGxvdCB0aGF0IGNvdWxkIGp1c3QgYmFyZWx5IHN1cHBvcnQgdGhhdCBzY2VuZS4uIApJdCBjb250YWlucyBhIHN1cGVyaW9yIGFtaW5vIGFjaWQgcHJvZmlsZSBvZiBhbGwgcGxhbnQgYmFzZWQgZm9vZHMsIGNvbnRhaW5pbmcgdGhlIDkgZXNzZW50aWFsIGFtaW5vIGFjaWRzLiAKSSB3YXMgYWN0dWFsbHkgbG9va2luZyBmb3Igc29tZSB0b28uIApIaWdoIGRpc2NvdW50IHJhdGVzIGNvdWxkIGxlYXZlIHBlbnNpb24gZnVuZHMgd2l0aApFYWNoIGNlbGwgcHJvZHVjZXMgd2FzdGUgZHVyaW5nIGl0cyBub3JtYWwgYWN0aXZpdHkgYW5kIG1ldGFib2xpc20sIGFuZCBleGNyZXRlcyB0aGlzIG91dHNpZGUgaXRzIGNlbGwgbWVtYnJhbmUuIEZyb20gdGhlcmUgaXQgaXMgbG9jYXRlZCBpbiB3aGF0IGlzIGNhbGxlZCB0aGUgImludGVyc3RpdGlhbCBzcGFjZSIgd2hpY2ggaXMgdGhlIHNwYWNlIGxvY2F0ZWQgYmV0d2VlbiB0aGUgY2VsbHMuIFRocm91Z2ggdGhlIGFjdGl2aXR5IG9mIHlvdXIgbXVzY2xlcywgdGhlIGNlbGxzIGFuZCB0aGUgaW50ZXJzdGl0aWFsIHNwYWNlcyBhcmUgc3F1ZWV6ZWQgKG9yIHB1bXBlZCkgYW5kIHRoZSBmbHVpZCBpcyBtb3ZlZCBvdXQgb2YgdGhlIGFyZWEuIFRoZSBmbHVpZCB0aGVuIGlzIHR5cGljYWxseSBkaXJlY3RlZCB0byB0aGUgbHltcGggc3lzdGVtLCB3aGVyZSBpdCBnZXRzIGNvbGxlY3RlZCwgY29uY2VudHJhdGVkLCBhbmQgZGVhbHQgd2l0aC4gClBsZWFzZSByZWZyYWluIGZyb20gcG9zdGluZyAidXBsaWZ0aW5nIiBvciAiQUNvTnMgYXJlIGFuIGluc3BpcmF0aW9uIHRvIG1lIiBvciAiSSBsb3ZlIGFsbCBvZiB5b3UuIiBvciAiSSBmZWVsIHNvIGJhZCBmb3IgYWxsIG9mIHlvdSBhbmQgSSByZWFsbHkgbG92ZSBteSBub3JtYWwgcGFyZW50cyBhbGwgdGhlIG1vcmUgYWZ0ZXIgcmVhZGluZyB5b3VyIHBvc3RzIiBvciAiSUYgSSBDQU4gRE8gSVQsIFlPVSBDQU4gVE9PISIgb3IgIllvdSBtYWtlIG1lIGEgYmV0dGVyIHBhcmVudCBiZWNhdXNlIHlvdXIgcG9zdHMgYWJvdXQgdGhlIHRyYXVtYSB5b3UgZXhwZXJpZW5jZWQgc2hvd3MgbWUgaG93IHRvIG5vdCBtZXNzIHVwIG15IGtpZHMiIHRocmVhZHMuIEluc3RlYWQsIHBsZWFzZSBzdXBwb3J0IG91ciBwb3N0ZXJzIGRpcmVjdGx5IGJ5IGNvbW1lbnRpbmcgZGlyZWN0bHkgb24gdGhlaXIgcG9zdHMuIFdlIGRvIG5vdCB3YW50IG91ciBzdWJyZWRkaXQgbGl0dGVyZWQgd2l0aCBnZW5lcmFsIHVwbGlmdGluZy4gCkJvYmEgc3ByaW5ncyBpbnRvIGFjdGlvbiwgZmlnaHRpbmcgdGhlIEplZGksIGtlZW4gdG8gdGVzdCBoaXMgc2tpbGxzIGFuZCBzbGF5IG9uZSBvZiB0aG9zZSBraW5kIHdobyBzbGV3IGhpcyBmYXRoZXIuIEJvYmEgaW5pdGlhbCBhdHRlbXB0cyB0byBraWxsIHRoZSBKZWRpIGFyZSB0aHdhcnRlZC4gSG93ZXZlciwgQm9iYSBpcyBkZXRlcm1pbmVkIGFuZCBza2lsbGZ1bC4gCkhhZCB5b3UgaXNzdWVkIGEgbGF0ZSBub3RpY2UgYW5kIGZlZSB0aGUgZGF5IGl0IHdhcyBsYXRlLCBhbG9uZyB3aXRoIGEgdGhyZWUgZGF5IG5vdGljZSB0byBwYXkgb3IgcXVpdCAob3Igd2hhdGV2ZXIgcHJvY2VzcyB5b3VyIHN0YXRlIGhhcyBmb3IgbGF0ZSByZW50KSB5b3Ugd291bGQgaGF2ZSBkb25lIG9uZSBvZiB0d28gdGhpbmdzOgoiSWYgd2UgZG9uJ3Qga25vdyB3aGF0IHdlIHN0YW5kIGZvciwgd2h5IHdvdWxkIGEgY29uc3VtZXIgdW5kZXJzdGFuZD8iIFJleW5vbGRzIHNhaWQuICJGaW5hbGx5LCBhbmQgb25seSBmaW5hbGx5LCBtb2Rlcm4gYnJhbmRzIGhhdmUgdG8gYmUgdGVjaG5vbG9neSBhbmQgZGF0YSBlbmFibGVkLCBidXQgaXQgY29tZXMgYXQgdGhlIGVuZCwgYW5kIG9ubHkgYXQgdGhlIGVuZC4iCkN1cmlvdXMgZm9yIHRob3VnaHRzLi4gClNtb3J0Z295ICA0MyBwb2ludHMgIHN1Ym1pdHRlZCA2IGhvdXJzIGFnbwpGb3IgdGhvc2Ugd2hvIGFyZSBjb2xsZWN0b3JzIGFuZCB3b3VsZCBsaWtlIHRvIGFjaGlldmUgMTAwJSBjb21wbGV0aW9uIChDb2xsZWN0aW9ucywgVHJpdW1waHMsIHdoYXRldmVyKSwgUHZQIGlzIGEgbXVjaCBtb3JlIHZhcmlhYmxlIGFjdGl2aXR5IHZzLiBQdkUuIEZvciBleGFtcGxlLCBJIGNhbiBzcGVuZCA4IGhvdXJzIG9uIGEgcmFpZCwgZmFpbCB0byBjb21wbGV0ZSBpdCwgYnV0IGhhdmUgYSBjaGVja3BvaW50IHRvIGNvbWUgYmFjayB0aGUgbmV4dCBkYXkgYW5kIHN0YXJ0IHdoZXJlIEkgbGVmdCBvZmYuIApUaGV5IGhlbGQgdGhlIGZ1bmVyYWwgYWdhaW4uIFRoaXMgdGltZSwgdGhlIG1vdGhlciB3YXMgdGhlcmUgKHNoZSB3YXMgaW4gdGhlIGhvc3BpdGFsIHdpdGggdGhlIHNpYmxpbmcgZHVyaW5nIHRoZSBmaXJzdCBmdW5lcmFsKSwgYW5kIHNoZSB0cmllZCB0byBjbGltYiBpbnRvIHRoZSBjYXNrZXQgd2l0aCB0aGUgdHdpbnMuIFNoZSBoYWQgYSBjb21wbGV0ZSBtZWx0ZG93biBhbmQgaXQgdG9vayBzZXZlcmFsIGZhbWlseSBtZW1iZXJzIHRvIHJlc3RyYWluIGhlci4gCklmIHRoZXkgZmluZCBhbnkga2luZCBvZiBkcnVnIG9uIHlvdSwgdGhleSBjYW4gbGVnYWxseSB0YWtlIHlvdXIgdmVoaWNsZSBhbmQgYWxsIHRoZSBjYXNoIHlvdSBtaWdodCBoYXZlIGFzIHdlbGwuIFRoZXkgY2FuIHRha2UgeW91ciBob3VzZSBpZiB5b3Ugd2VyZSBjYXVnaHQgd2l0aCBpdCBpbiB5b3VyIGhvbWUuIEhvbGQgeW91ciBhc3NldHMgYW5kIGlmIHlvdSdyZSBmb3VuZCBndWlsdHkgdGhleSBhdWN0aW9uIGl0IG9mZi4gCk1hbnkgb2Ygb3VyIHBhdGllbnRzIHZpZXcgdXMgYXMgYm9uZSBkb2N0b3JzIChEb2N0b3JzIG9mIENoaXJvcHJhY3RpYyBlbXBoYXNpcyBtaW5lKS4gQXMgc3VjaCwgYSBncmVhdCBkZWFsIG9mIHRoZSByZXNwb25zaWJpbGl0eSBmb3IgdGhlIHByZXZlbnRpb24gYW5kIG1hbmFnZW1lbnQgb2YgYm9uZSBsb3NzIGluIHlvdXIgcGF0aWVudHMgZmFsbHMgb24gdXMuCklmIHBva2VyIGlzIGEgZ2FtZSBvZiBjaGFuY2UsIGFuZCBoZW5jZSBnYW1ibGluZywgd2h5IGRvIHBoeXNpY2lzdHMgbG92ZSBpdCBzbyBtdWNoPyBQaHlzaWNpc3RzIGhhdGUgdG8gZ2FtYmxlLiAiSSBkb24ndCBsaWtlIGdhbWJsaW5nIGF0IGFsbCwiIEFudG9ueWFuIHRvbGQgbWUuICJJIGRvbid0IGVuam95IGl0IGFuZCB0aGVyZSdzIG5vdGhpbmcgaW4gaXQgZm9yIG1lIHRvIGNvbXBlbnNhdGUgZm9yIHRoZSBjbGVhciBuZWdhdGl2ZSBFViBkZWNpc2lvbiBvZiBnYW1ibGluZy4iCkt5bGUgQnVzcXVpbmUgYW5kIEplaGFuZ2lyIEZhaXNhbCB3ZXJlIG9uYm9hcmQgYW4gZWFzdGJvdW5kIHRyYWluIHB1bGxpbmcgaW50byBCcm9hZHZpZXcgU3RhdGlvbiBvbiBKdW5lIDI4IHdoZW4gdGhleSBoZWFyZCB0aGUgZmFpbnQgc291bmQgb2YgYSBtYW4ncyB2b2ljZSBjYWxsaW5nIG91dCBmb3IgaGVscC4KVGhleSBhcmUgcnVubmluZyBsYXRlLCB0aGVyZSBpcyBzb21ldGhpbmcgbW9yZSBpbXBvcnRhbnQgdG8gZGlzY3VzcywgdGhleSBuZWVkIHRvIGRpc2N1c3Mgc29tZXRoaW5nIGZpcnN0IGluIG9yZGVyIHRvIGRpc2N1c3Mgd2hhdCBldmVyIGl0IGlzIHRoYXQgeW91IG5lZWQgdG8gZGlzY3VzcyBldGMuIApJbSBGYWxsZSBlaW5lciBWZXJicmVpdHVuZyBtc3NlbiBTaWUgYW5kZXJlbiBkaWUgTGl6ZW56YmVkaW5ndW5nZW4sIHVudGVyIHdlbGNoZSBkaWVzZXMgV2VyayBmbGx0LCBtaXR0ZWlsZW4uIEFtIEVpbmZhY2hzdGVuIGlzdCBlcywgZWluZW4gTGluayBhdWYgZGllc2UgU2VpdGUgZWluenViaW5kZW4uCkZhbnMgb2Ygc3RhbmQgdXAgY29tZWR5ICAgYW5kIGZyZWUgYmVlciAgIHNob3VsZCBib29rIHRpY2tldHMgdG8gb25lIG9mIHRoZXNlIEdvb2QgR29vZCBDb21lZHkgc2hvd3MuIApJbnRyb2R1Y2UgYSBuZXcgY29uY2VwdCBhbmQgZXhwbGFpbiBpdHMgdXNlZnVsbmVzcy4gV2hlbiB0ZWFjaGluZyBtYXRoLCB5b3Ugd2lsbCBiZSB0ZWFjaGluZyBvbmUgbmV3IGNvbmNlcHQgYXQgYSB0aW1lLiBGb3IgZXhhbXBsZSwgeW91IG1pZ2h0IGJlIHRlYWNoaW5nIHN0dWRlbnRzIGhvdyB0byBkbyBtdWx0aXBsaWNhdGlvbi4gCkkgZG9uJ3Qga25vdyBpZiBJIGNhbiB0cnVzdCBoZXIgZXZlciBhZ2Fpbi4gSSBkb24ndCBrbm93IGlmIEkgZXZlbiB3YW50IGhlciBhdCB0aGUgaG91c2Ugd2hlbiBJIGdldCBob21lIGZyb20gbXkgdHJpcC4gCkJ1Y3prb3dza2kgc2F5cyBsYXVuY2hpbmcgTXkgRm9yZCBUb3VjaCBpbiBFdXJvcGUgaXMgbW9yZSBkaWZmaWN1bHQsIGVzcGVjaWFsbHkgd2l0aCBkaWZmZXJlbnQgcm9hZCBzeXN0ZW1zIGluIGRpZmZlcmVudCBjb3VudHJpZXMsIGFuZCBzZXZlcmFsIGxhbmd1YWdlcy4gCkhlcmUgaXMgYSBsaXN0IG9mIGRpZmZlcmVudCBob21lbWFkZSwgaW5leHBlbnNpdmUgYW5kIG5hdHVyYWwgZm9vdCBzY3J1YiB5b3UgbWFrZSBvdXQgb2YgaW5ncmVkaWVudHMgeW91IGZpbmQgaW4geW91ciBraXRjaGVuLi4gCk1pdCB2ZXJrcmFtcGZ0ZW4gU2NodWx0ZXJuIHdpcmQgZGVyIEF0ZW0gc2NobmVsbCBmbGFjaC4gClRoZSB0aGluZyBhYm91dCB0aGlzIHRoYXQgc2hvdWxkIHJlYWxseSBicmVhayBvdXIgaGVhcnRzLCBpcyB0aGF0IHRoZXkgaGF2ZSBzdWNjZXNzZnVsbHkgdHVybmVkIHRoZSBBbWVyaWNhbiBwdWJsaWMgYWdhaW5zdCBpdHNlbGYgc3VjaCB0aGF0IHRoZXkgY2FuIHN1Y2Nlc3NmdWxseSBmbGF1bnQgdGhlaXIgY29ycnVwdGlvbiBhbmQgaWxsZWdhbCBhY3Rpdml0aWVzIHRvIE1BU1NJVkUgZGlzc2F0aXNmYWN0aW9uLCBhbmQgaGF2ZSBOTyBmZWFyIHdoYXQgc28gZXZlciBvZiB0aGUgQW1lcmljYW4gcHVibGljIHRha2luZyBhY3Rpb24gYWdhaW5zdCB0eXJhbm55LiBUaGV5IGtub3cgd2UgYXJlIGJyb2tlbiwgdGhhdCB3ZSB3b24gZmlnaHQgYmFjayBubyBtYXR0ZXIgd2hhdCB0aGV5IGRvLiBBbmQgaWYgc29tZSBvZiB1cyBkbywgb3RoZXJzIHdpbGwgdGFrZSB0byB0aGUgc3RyZWV0cyB0byBkZWZlbmQgdGhlbS4uIApPZmZpY2lhbHMgcmVjb3ZlcmVkIDQxIGNhcnMgZnJvbSBTdWRhbWEgcmVzb3J0IGFuZCA0IGZyb20gS2FsZ2kgaG91c2UgbmVhciBHdWphcmF0IGNvbGxlZ2UuIApTdWRidXJ5IGlzIGluIG11Y2ggYmV0dGVyIHNoYXBlIG5vdyB0aGF0IG1vc3QgcmVjZW50IE5vLiAKU3RhcnRlZCBjb21pbmcgdXAgd2l0aCBjcmF6eSBpZGVhcyBmb3Igc2VsZiBoZWxwIGJvb2tzLCBidXQgdGhlcmUgd2FzIG9uZSBpZGVhIHdlIGtlcHQgY29taW5nIGJhY2sgdG8gYW5kIHRoYXQgd2FzIHB1dHRpbmcgaGVtcCBpbnRvIHNvbWV0aGluZyB3ZSBqdXN0IHdlcmVuIHN1cmUgd2hhdC4gCkFsc28gZXhwbGFpbiB0aGF0IHRoaXMgY2FuIGJlIGRvbmUgaW4gYSByZWd1bGFyIHRyZWF0bWVudC4oTm90ZSB0aGF0IHRoaXMgcmVwbGFjZXMgQmVhbWluZyBvciBjYW4gYmUgaW4gYWRkaXRpb24gdG8gQmVhbWluZykxNC4gRW5rYWt1IGNoaXJ5byB3aXRoIGdyb3VwLiBBc2sgZm9yIHJlcXVlc3RzIGZyb20gc3R1ZGVudHMuIApTZSBkcG9zZXIgcG91ciBtaWV1eCBsYWlzc2VyIG1vbnRlciBkZXMgdm9pZXMgZGUgc29sdXRpb24uIEtlbm5lZHkgZXQgSm9oYW5uZXMgQnJhaG1zIHRhaWVudCB0b3VzIGRlcyAgc2llc3RldXJzICBjb252YWluY3VzLiAKSGVyZSdzIHNvbWUgZnVuIHRoaW5ncyB0aGF0IGhhcHBlbmVkIHRoYXQgZGF5LiAKQmFzaWNhbGx5LCBhbnl0aGluZyBlbHNlIHlvdSBjYW4gYnV5IGluIExpbWEgb3Igd2hlbiB5b3VyIHB1dCBpbiB5b3VyIHNpdGUsIHlvdSByZWdpb25hbCBjYXBpdGFsLi4gCkFsb25nIHdpdGggdGhlIGxvc3Mgb2Ygc29tZSBsYW5kLCBBcm1lbmlhbnMgaGFkIHRvIGJlIGV4cGVsbGVkLiAKSSBoYXZlIGFuIHVuY2xlIHdobyBpcyBhbG1vc3QgODAuIApUaGUgb3RoZXIgdHJ1dGggaXMgdGhhdCBtYW55IHdoaXRlIEFtZXJpY2FucyB3aWxsIHByZXRlbmQgdGhhdCBzdWNoIGFjdHMgaGF2ZSBub3RoaW5nIHRvIGRvIHdpdGggdGhlbSwgYnV0IGFyZSBpbnN0ZWFkIGlzb2xhdGVkIGluIHBvY2tldHMgb2YgaWdub3JhbmNlIGFuZCByYWNpc20gaW4gdGhlIHJ1cmFsIFNvdXRoLiAKUGVvcGxlIGFyZSBnb2luZyB0byBzYXkgdGhpcyBpc24gcmVjb21tZW5kZWQgb3IgdGhhdCB5b3UgY2FuIGRvIGl0IGF0IGxvdyBsZXZlbCBidXQgdGhhdCBqdXN0IG5vdCB0cnVlLiBJIG5ldmVyIHBhaWQgYSBwZW5ueSBmb3IgbWVtYmVyc2hpcCBhbmQgc3RhcnRlZCBhdCBmYWlybHkgbG93IHN0YXRzLiBJIHJlY29tbWVuZCB5b3UgZ2V0IHlvdXIgc21pdGhpbmcgdG8gdGhlIGxldmVsIHlvdSBjYW4gZG8gY2Fubm9uYmFsbHMuIApJcyB0aGUgYWNlIHRoZSBoaWdoZXN0IGNhcmQKU2hhd2x5bm90IHUKT25seSBNaXJjaG9mZidzIEpldGVyIGhhcyBhbnkgc2Vuc2Ugb2Ygc3VidGV4dCBhYm91dCBoaW0sIGxldHRpbmcgdGhlIGF1ZGllbmNlIGludG8gaGlzIHRyb3VibGVkIG1pbmQgYXMgaGUgdHJpZXMgdG8gd29yayBvdXQgd2h5IGhlJ3MgaW4gdGhpcyBwcmVkaWNhbWVudC4gClJlaWtpIGlzIGEgaGFuZHMgb24sIGNhbG1pbmcsIHNvb3RoaW5nIGVuZXJneSBtb2RhbGl0eSB0aGF0IHVuc3RpY2tzIGVuZXJneSBhbmQgaGVscHMgZW5lcmd5IGZsb3cuIApJIGhhdmUgYmVlbiB0b2xkIGJ5IG15IE9CR1lOIHRoYXQgdGhlcmUgYXJlIGxvdHMgb2Ygb3RoZXIgdGhpbmdzIHRoYXQgY2FuIGNhdXNlIGFuIGFibm9ybWFsIHBhcCBvdGhlciB0aGFuIEhQViBzdWNoIGFzIGEgeWVhc3QgaW5mZWN0aW9uLCBzbGlnaHQgdmFnaW5hbCBpbWJhbGFuY2UgZXRjLiAKR3V0LCBuaWNodD8gQXVlcmRlbSB3aXIgd29sbGVuIEF0bW9zcGhyZSBtYWNoZW4uIERhcyBpc3QgZ3V0IG1pdCBQaXN0b2xlbiwgYmFtIG1hY2h0IFN0aW1tdW5nLiAKVGhlIHJpdHVhbHMgYW5kIHRyYWRpdGlvbnMgb2YgRnJlbmNoIGhvcnNlIHJhY2luZyBoYXZlIGVuZHVyZWQsIGJ1dCB0b2RheSB0aGUgaW5kdXN0cnkgZmFjZXMgdmVyeSBtb2Rlcm4gdGhyZWF0czogYW4gYWdpbmcgYmV0dG9yIHByb2ZpbGUsIGEgZ3Jvd2luZyBjb250aW5nZW50IG9mIHBvdGVudGlhbGx5IHVudGFwcGVkIG9ubGluZSBnYW1lcnMgYW5kIGdhbWJsZXJzLCBhbmQgY29tcGV0aXRpb24gZnJvbSBuZXcgaG9yc2UgcmFjZSBiZXR0aW5nIG9wZXJhdG9ycyB3aG8gY29udGVzdCBQTVUgc3VwcG9ydCBmcm9tIHRoZSBGcmVuY2ggZ292ZXJubWVudC4gVGhlc2UgY2hhbGxlbmdlcywgaGFzdGVuZWQgYWxvbmcgYnkgdGhlIGxvc3Mgb2YgbW9ub3BvbHkgc3RhdHVzIGZvciBvbmxpbmUgYmV0dGluZyBpbiBGcmFuY2UgaW4gMjAxMCwgYmVjYW1lIGEgY2F0YWx5c3QgZm9yIFBNVSB0byBtb2Rlcm5pemUgaXRzIGNvbW1lcmNpYWwgYXBwcm9hY2ggc3RyYXRlZ2ljYWxseSBhbmQgcHJvbW90ZSB0aGUgZ2xvYmFsaXphdGlvbiBvZiB0aGUgRnJlbmNoIGhvcnNlIHJhY2luZyBpbmR1c3RyeS4gCk1vc3Qgb2YgdGhlIHJ1bGVzIHRoYXQgYXBwbHkgdG8gYSBibGluZCBhcHBseSB0byBhIHN0cmFkZGxlLCBleGNlcHQgZm9yIHRoZSBmYWN0IHRoYXQgaXQgaXMgbm90IHJlcXVpcmVkLiAoRnVsbCBBbnN3ZXIpLiAKVGhlIGVudHJlcHJlbmV1cnMgZW50ZXJlZCB0aGUgRGVuLCBoYXZpbmcgc29sZCB1cHdhcmQgb2YgNTAsMDAwIHVuaXRzIHRoZSBwcmV2aW91cyBtb250aC4gClRoZXJlIGFyZSBwbGVudHkgb2YgcGxhY2VzIHRoYXQgd2lsbCBoaXJlIHlvdSB3aXRob3V0IGV4cGVyaWVuY2UgYmVjYXVzZSB5b3UgaGF2ZSBhbiBNQSBURVNPTCBhbmQgdGhlIGpvYnMgd2lsbCBiZSBhbG1vc3QgaW5kZXNjcmliYWJseSBiZXR0ZXIgdGhhbiB0aG9zZSB5b3UgY2FuIGdldCB3aXRoIGp1c3QgYSBCQSBhbmQgYSBURUZMIGNlcnQuIApPcmlnaW5zIG9mIFRhaSBDaGkgVGFpIENoaSBjYW4gYmUgY29uc2lkZXJlZCB0aGUgcGh5c2ljYWwgYXBwbGljYXRpb24gb2YgVGFvaXN0IHBoaWxvc29waHksIHdoaWNoIHN0cmVzc2VzIHRoYXQgYWxsIGdvb2QgY29tZXMgb2YgdGhlIGZ1bmRhbWVudGFsIGhhcm1vbnkgYmV0d2VlbiBtYW4gYW5kIG5hdHVyYWwgZm9yY2VzLiBBY2NvcmRpbmcgdG8gbGVnZW5kIHRoZSBUYW9pc3QgbW9uaywgQ2hhbmcgU2FuIEZlbmcsIHdpdG5lc3NlZCBhIHNuYWtlIGZpZ2h0aW5nIGEgY3JhbmUuIApCdXQgSSB3ZW50IG91dCBvZiBteSB3YXkgdG8ga2VlcCB0aGF0IGluIG1pbmQuIFNvIHRoZXJlIHRoZSBvZGQgcm91Z2ggZWRnZSwgb3IgcGFydHMgd2UgY291bGQgaGF2ZSBwbGF5ZWQgYSBsaXR0bGUgYml0IGJldHRlci4gCldoYXQgT25UaGluZ3MgdG8gZG9Gb29kIGFuZCBEcmlua0ZhbWlseSBhbmQgS2lkc1RWIEd1aWRlRGlnaXRhbCBQcmludCBFZGl0aW9uQUxCVVJZJ1MgU1MgQ2x1YiBoYXMgcmVjb3JkZWQgYSBmaWZ0aCBzdWNjZXNzaXZlIHByb2ZpdCBkZXNwaXRlIGEgbWlub3IgZG93bnR1cm4gcG9rZXIgbWFjaGluZSByZXZlbnVlLiAKQ2hhZmluZy4gTGFyZ2UgYnJlYXN0cyBjYW4gY2hhZmUgdGhlIHNraW4ganVzdCBiZW5lYXRoIHRoZSBicmVhc3QuIFN3ZWF0aW5nLCByYXNoZXMgYW5kIGV2ZW4gZnVuZ2FsIGluZmVjdGlvbnMgYXJlIGFsc28gcG9zc2liaWxpdGllcy4gTWFueSB3b21lbiBmaW5kIHRoYXQgc2lsayBhbmQgY290dG9uIGNhbWlzb2xlcyB3b3JuIG5leHQgdG8gdGhlIGJyZWFzdCBsZXNzZW4gdGhlc2UgaXNzdWVzLiBTb21lIHdvbWVuIGFsc28gYXBwbHkgYW50aXBlcnNwaXJhbnQgYmVuZWF0aCBsYXJnZSBicmVhc3RzIG9yIGNhcnJ5IGEgc21hbGwgdG93ZWwgdG8gZHJ5IHRoZSBhcmVhIGJlbmVhdGggdGhlaXIgYnJlYXN0cyBvbiBvY2Nhc2lvbiwgYW4gaXRlbSBvbmUgZnJpZW5kIG9mIG1pbmUgYWZmZWN0aW9uYXRlbHkgY2FsbHMgaGVyICJ0aXR0eSB0b3dlbC4iClNvbWUgb3RoZXIgdGlwczogdm9sdW50ZWVyISBWb2x1bnRlZXIgYXQgYW4gYXF1YXJpdW0sIHdpbGRsaWZlIGNlbnRlciwgb3IgYW55dGhpbmcgcmVsYXRlZCB0byBiaW9sb2d5L2FuaW1hbHMuIApEYW5zIGxlIGNvbnRleHRlIGFjdHVlbCwgbGEgcXVlc3Rpb24gZHUgYmFzY3VsZW1lbnQgZGUgbCdhcnJvbmRpc3NlbWVudCAgZHJvaXRlIG4nZXN0IHBhcyBpcnJhbGlzdGUsIGF2ZWMgdW5lIHZpY3RvaXJlIGRlIGxhIGRyb2l0ZSAgbW9kcmUgLCBuJ291Ymxpb25zIHBhcyBsZXMgYW5uZXMgQ2hpcmFjIEp1cHAuIE1haXMgaWNpLCBlbmNvcmUgcGx1cyBxdSdhaWxsZXVycywgbGUgamV1IGVzdCBlbmNvcmUgdGVsbGVtZW50IGluY2VydGFpbiBxdSdpbCBzZXJhaXQgdmFpbiBkZSB0ZW50ZXIgdW4gcHJvbm9zdGljIHN1ciBsJ2lzc3UgZHUgc2NydXRpbiBtdW5pY2lwYWwgZGUgMjAyMC4KV2VudCB0byBhIG1vdmllIGEgd2VlayBhZ28gYW5kIG91dCBvZiB0aGUgNDAgcGVvcGxlIHRoZXJlLCBub2JvZHkgbGlmdGVkIGEgZmluZ2VyIHdoZW4gdGhlIHNjcmVlbiB3ZW50IGJsYWNrIGZvciAxMCBtaW51dGVzIGJ1dCB0aGUgZW50aXJlIHRoZWF0ZXIgd2FzIGNvbXBsYWluaW5nIGFib3V0ICJ0aW1lIHRoaXMiIGFuZCAidGltZSB0aGF0Ii4gCldoYXQgSSB0cnlpbmcgdG8gZ2V0IGF0IGlzIHRoYXQgeW91ciBicmFpbiBpcyB0cmFpbmFibGUgYW5kIHlvdSB0cmFpbmVkIGl0IHRvIGJlIHNvIHVzZWQgdG8gdGhlIHRoaW5ncyB0aGF0IHVzZWQgdG8gbWFrZSB5b3UgaGFwcHkgdGhleSBhcmUganVzdCBub3JtYWwuIFlvdSBjb3VsZCB0YWtlIGEgYnJlYWsgZnJvbSB5b3VyIGhhYml0cyBvciB5b3UgY291bGQgbWFrZSBuZXcgb25lcy4gWW91IGNhbiB0cmFpbiB5b3VyIGJyYWluIHRvIG1ha2UgeW91IGZlZWwgc2F0aXNmaWVkIGV2ZXJ5IHRpbWUgeW91IGNob29zZSBub3QgdG8gZ2V0IGhpZ2guLiAKSSBkbyBub3QgdGhpbmsgaXQgd2FzIHN1cGVybmF0dXJhbC4gTWF5YmUgSSBkaWQgdGhlbiwgYnV0IEkgd2FzIGEga2lkLiBMaWtlbHkgc29tZSBicmFpbiBmYXJ0IGhhbGx1Y2luYXRpb24uCiJTUEVDVEFDVUxBUiBWSUVXUyBPRiBIVURTT04gUklWRVIsIEVNUElSRSBTVEFURSBCVUlMRElORyBBTkQgVElNRVMgU1FVQVJFLiIgIlNUQVRFIE9GIFRIRSBBUlQgREVTVElOQVRJT04gRElTUEFUQ0ggRUxFVkFUT1JTLiIgVGhleSBoYW5nIGZyb20gYSBzY2FmZm9sZCBzdXJyb3VuZGluZyAxMSBUaW1lcyBTcXVhcmUsIGEgNDAgc3RvcnkgZ2xhc3MgYW5kIHN0ZWVsIG9mZmljZSB0b3dlciB1bmRlciBjb25zdHJ1Y3Rpb24gYXQgdGhlIGNvcm5lciBvZiA0Mm5kIFN0cmVldCBhbmQgOHRoIEF2ZW51ZSBpbiBNYW5oYXR0YW4uIApJdCBpcyBieSBmYXIgdGhlIG1vc3QgaGlzdG9yaWNhbGx5IHBsYXVzaWJsZSB0eXBlIG9mIGVuZGluZy4gUmVhbGx5LCBHamxsYXJob3JuIGdvdCBkZWFsdCBzdWNoIGEgYmxvb2R5IG5vc2UgYnkgVGVra2VkYW4gdGhhdCBpbiBzcGl0ZSBvZiBhbnl0aGluZyBSdXN0YWwgaGFkIHRvIGdpdmUgdXAgcG93ZXIgYW5kIHJlZm9ybS4gCk1heCBhbmQgTG9yZXR0YSB3b3VsZCBoYXZlIGFubnVhbCBjb21iaW5lZCBSUlNQIGluY29tZSBvZiAkMzcsMzAwIGFuZCBURlNBIGluY29tZXMgdG90YWxpbmcgJDcsMDAwLCB0d28gZXN0aW1hdGVkIENhbmFkYSBQZW5zaW9uIFBsYW4gYmVuZWZpdHMgdG90YWxpbmcgJDIwLDQ2NSwgYW5kIHR3byBPbGQgQWdlIFNlY3VyaXR5IGJlbmVmaXRzIHRvdGFsaW5nICQxNCw0MzQgcGVyIHllYXIuIEFsbCB0aGF0IGFkZHMgdXAgdG8gJDc5LDIwMCBwZXIgeWVhci4gClRoZSBFUFQgQmFyY2Vsb25hIEZlc3RpdmFsLCB0aGUgdW5vZmZpY2lhbCBraWNrb2ZmIHRvIHRoZSBmaW5hbCBsZWcgb2YgdGhlIDIwMTUgcG9rZXIgc2Vhc29uLCByZXR1cm5zIHRoaXMgd2VlayB3aXRoIG92ZXIgNzAgZXZlbnRzIGJlaW5nIHByZXNlbnRlZCwgaW5jbHVkaW5nIHRoZSBNYWluIEV2ZW50LCB3aGljaCBoYXMgYmVjb21lIG9uZSBvZiB0aGUgYmlnZ2VzdCBldmVudHMgb24gdGhlIHBva2VyIGNpcmN1aXQuIExhc3QgeWVhciwgR2VybWFuIHBsYXllckFuZHJlIExldHRhdSAoR1BJIE5vLiAxMDQ5KSBvdXRsYXN0ZWQgYSByZWNvcmQgMSw0OTYgcGxheWVyIGZpZWxkIG9uIGhpcyB3YXkgdG8gaGlzIGZpcnN0IHRpdGxlIG9uIHRoZSBsaXZlIHRvdXJuYW1lbnQgY2lyY3VpdC4gTGV0dGF1IGhhcyBjb2xsZWN0ZWQgYSBmZXcgb3RoZXIgcmVzdWx0cyBvbiB0aGUgY2lyY3VpdCBzaW5jZSwgaW5jbHVkaW5nIGEgMTZ0aCBwbGFjZSBmaW5pc2ggaW4gYW4gZXZlbnQgYXQgdGhlIFdvcmxkIFNlcmllcyBvZiBQb2tlciBpbiBMYXMgVmVnYXMuCkxldCBtZSByZXBlYXQgb25lIG1vcmUgdGltZSwgd2UgZG9uJ3Qga25vdyB0aGUgcGVyY2VudGFnZSBvZiBwYXlvdXRzIGluIGJpbmdvICh3ZSBkb24ndCBrbm93IHRoZSBudW1iZXIgb2Ygc29sZCB0aWNrZXRzKS4gSW4gcHJpbmNpcGxlLCBwbGF5aW5nIGZvciBtYW55IHRpbWVzIGluIHRoZSBzYW1lIGJpbmdvIHJvb20geW91IGNhbiBjb3VudCB0aGUgcGVyY2VudGFnZSBvZiBwYXltZW50cyBpbiB0aGUgcHJhY3RpY2UuIFNpbXBseSBkaXZpZGUgZ2FpbmVkIGFtb3VudHMgaW50byBzcGVudCBvbmVzIGFuZCB5b3Ugd2lsbCBmaW5kIG91dCB0aGUgZXN0aW1hdGUgYnV0IHlvdSBzaG91bGQgcGxheSBmb3IgYSBsb25nIHRpbWUgc28gdGhhdCB0aGlzIGVzdGltYXRlIGNvbWUgY2xvc2VyIHRvIHRoZSByZWFsaXR5LiBHZW5lcmFsbHkgc3BlYWtpbmcsIGlmIGl0IGlzIHBvc3NpYmxlIHRvIGZpbmQgb3V0IHRoZSBwZXJjZW50YWdlIG9mIHBheW91dHMsIHBsYXkgd2hlcmUgaXQgaXMgdGhlIGxhcmdlc3QgYW5kIGdvb2QgbHVjayBiZWF0aW5nIG9ubGluZSBiaW5nb3MuCkNvdXJzZSB0aGUgaWRlYSBvZiBjYW1vdWZsYWdlIGluIHRoZSBhbmltYWwgd29ybGQgaXMgcHJvYmFibHkgMjUwIG1pbGxpb24geWVhcnMgb2xkIGFuaW1hbHMgYW5kIGluc2VjdHMgaGF2ZSBiZWVuIGJsZW5kaW5nIGludG8gdGhlaXIgZW52aXJvbm1lbnQgZm9yIGVvbnMsIGFuZCBJIHN1cmUgdG9vIHRoYXQgZWFybHkgaG9taW5pZHMgZGlkIHRoZWlyIGZhaXIgc2hhcmUgb2Ygd2Fsa2luZyBiZWhpbmQgYnJ1c2guIApMZWUsIGEgbmF0aXZlIG9mIEhvbmcgS29uZywgaXMgd2VsbCBidWlsdCBhbmQgd2VhcnMgYSBibGFjayB0aWdodCBmaXR0aW5nIEdpb3JnaW8gQXJtYW5pIFQgc2hpcnQuIEhlIGNvdWxkIGFsbW9zdCBwYXNzIGZvciBhIG5pZ2h0Y2x1YiBib3VuY2VyIGlmIGl0IHdlcmVuJ3QgZm9yIHRoZSBzb2Z0ZW5pbmcgZWZmZWN0IG9mIGhpcyBleWV3ZWFyLCBsYXJnZSBnbGFzcyBzcXVhcmVzIHdpdGggZGlhbW9uZGxpa2Ugc3R1ZHMgYXQgdGhlaXIgY29ybmVycy4gClRoZSBvdGhlciByZWFzb24gaXMgcGVyaGFwcyB3ZSBhcmUgYSB3aWxkZXIgbG90LCBtb3JlIGluIHRvIGZhc3QgYW5kIGV4Y2l0aW5nIHRoZW1lcyByYXRoZXIgdGhhbiB0aGUgc2xvdyBjbGFzc2ljcy4gClRoZW4gSSB0b29rIHRoYXQgdG8gV0kgYW5kIHdhcyBhYmxlIHRvIHRyYW5zZmVyIHRoZSB0aXRsZSB0byB0aGVyZSBhbmQgZ2V0IGl0IHJlZ2lzdGVyZWQuLiAKIlRoZXNlIGRvbmF0aW9ucyBzdXBwb3J0IGFjdGl2aXRpZXMgYWNyb3NzIGhvc3BpdGFscywgYW5kIG1ha2UgYWRpZmZlcmVuY2UgdG8gdGhlIGhlYWx0aCBhbmQgd2VsbGJlaW5nIG9mIG91ciBwYXRpZW50cyBhbmQgdGhlaXIgZmFtaWxpZXMsIiBhIE5TVyBIZWFsdGggc3Bva2Vzd29tYW4gc2FpZCBBY2NvcmRpbmcgdG8gYTIwMTBQcm9kdWN0aXZpdHkgQ29tbWlzc2lvbiByZXBvcnQsIHByb2JsZW0gZ2FtYmxlcnMgYWNjb3VudGZvciBhYm91dDQwIHBlciBjZW50b2YgbG9zc2VzIG9uIHBva2VyIG1hY2hpbmVzIGluIEF1c3RyYWxpYS4gTW9yZSBvcmdhbmlzYXRpb25zIGFyZSBub3cgd2Fsa2luZyBhd2F5IGZyb20gdGhlIHByb2Nlc3MuIApUaGUgbXVsdGlyZWRkaXRzIGxpbmtlZCBiZWxvdyBpbmRleCBtb3JlIHRoYW4gNjAwIGFjdGl2ZSBtdXNpYyBzdWJyZWRkaXRzLiAKUG9ybiBzaG93cyBhIGZha2Ugd29ybGQgb2YgcGVyZmVjdCBib2R5IHR5cGVzIGFuZCBhbiB1bnJlYWxpc3RpYyBwcm9qZWN0aW9uIG9mIHR3byBwZW9wbGUgbWFraW5nIGxvdmUsIiAyNyB5ZWFyIG9sZCBFbHZzc2hhZ2VuIGV4cGxhaW5zIGluIGFuIGVtYWlsIGludGVydmlldy4gCldoaWxlIEkgZG8gYmVsaWV2ZSB0aGF0IGVkdWNhdGlvbiBzaG91bGQgYmUgZnJlZSBpZiBhIGdvdmVybm1lbnQgd2FudHMgcHJvZHVjdGl2ZSBrbm93bGVkZ2VhYmxlIGNpdGl6ZW5zLCB0aGUgbWFpbiBpc3N1ZSBpbiB0aGUgY3VycmVudCBzeXN0ZW0sIEkgZmVlbCwgaXMgbWFraW5nIDE4IHllYXIgb2xkcyBjaG9vc2UgdGhlaXIgZnV0dXJlcyB3aXRoIG5vIHJlYWwgYWR2aWNlIG9uIG1ha2luZyBjb2xsZWdlIG1vcmUgYWZmb3JkYWJsZSBvciB3aGF0IG90aGVyIG9wdGlvbnMgZXhpc3QgKHBpY2tpbmcgYSBzdGF0ZSBzY2hvb2wsIGdvaW5nIHRvIGNvbW11bml0eSBjb2xsZWdlIGZpcnN0IG9yIGp1c3QgZ2V0dGluZyBhIENDIGRlZ3JlZSwgcGlja2luZyBwcmFjdGljYWwgY2FyZWVycyBvciBoYXZpbmcgcmVhbGlzdGljIGV4cGVjdGF0aW9ucyBhYm91dCB0aGUgY2hhbmNlcyBvZiBzdWNjZWVkaW5nIGluIHRoZSBpbXByYWN0aWNhbCBvbmVzKS4KQnV0IHNvbWUgb2Ygb3VyIHNlbGZpc2ggZW1vdGlvbnMgY2FuIHN0eW1pZSB0aGF0IGVtcGF0aHkuIFNvdW5kcyBhIGxvdCBsaWtlIGJodWRkaXNtIEkgc3VwcG9zZS4gCkl0IHJ1bnMgYXQgMTQgdGljayAoMTQgdXBkYXRlcyBwZXIgc2Vjb25kKSBhbmQgaXMgZW50aXJlbHkgcGVlciB0byBwZWVyIGJhc2VkIGluIHRlcm1zIG9mIGl0cyBtYXRjaG1ha2luZyBhbmQgZ2FtZXBsYXkuIApJIGp1c3Qgd2FudCBteSBzdHVkZW50cywgd2hvIGFyZSBzbyBkZXNlcnZpbmcgYW5kIHdvdWxkIG5vdCBvcmRpbmFyaWx5IGdldCBhIGNoYW5jZSB0byBiZSBpbiB0aGUgc3BvdGxpZ2h0LCB0byBkbyB3ZWxsLiIuIApMaXR0bGUgdGhpbmdzIGxpa2UgdGhlIENlbGVicmF0aW9uIHBvc3RlciBoYXZpbmcgMiBwcmVxdWVsIGNoYXJhY3RlcnMgY29tcGFyZWQgdG8gYSBkb3plbiBPVCBhbmQgc2V2ZXJhbCBTVCBjaGFyYWN0ZXJzLiBHYWxheHkgRWRnZSBoYXZpbmcgYSBMT1QgbW9yZSBjb250ZW50IGZvciBvdGhlciBlcmFzIHRoYW4gdGhlIFBUIGVyYS4gRXRjLi4gCkhlbmNlIHRoZSBjdXJ0bmVzcy4gCk1heWJlIFN0ZXZlIEJlbGljaGljayBiZW5lZml0cyBmcm9tIHB1cmUgdGFsZW50IG9mIERNYWMgYW5kIENodW5nLCBidXQgdGhlIHNhZmV0eSBjb3JuZXIgY29tYm8gb2YgdGhlIGRlZmVuc2Ugd29ya3MgcmVhbGx5IHNtb290aGx5LiAKNTAwIFBhdWxzb24gVG9waGF0IGFuZCBDYW5lIFBva2VyIENoaXAgU2V0IENyaXRpY2FsIE92ZXJ2aWV3CllvdSBzdGlsbCBub3QgZ2V0dGluZyBpdCBsb2wuIEl0IHRydWUgdGhhdCB3aGF0IHRoZXNlIHdvbWVuIGRpZCB3YXMgYSBtb3JhbGx5IGdvb2QgdGhpbmcuIApJZiB5b3UncmUgb25lIG9mIHRoZSAyMCBtaWxsaW9uKGlzaCkgcGxheWVycyB3aG8gYWxyZWFkeSBvd24gTWluZWNyYWZ0IGZvciBQQy9NYWMsIHlvdSBnZXQgdGhlIG5ldyB2ZXJzaW9uIGZvciBmcmVlLiAKQWxsIHlvdSBuZWVkIHRvIGRvIGlzIG1ha2UgdGhlIG1pbmltdW0gYmV0IG9mIGF0IGxlYXN0IDEuIFRoZSBiYXNpYyBjb25kaXRpb25zIHJlcXVpcmUgdGhhdCB0aGUgY3VtdWxhdGl2ZSBvZGRzIG9mIHlvdXIgZmlyc3Qgc2VsZWN0aW9uKHMpIGhhdmUgdG8gYmUgZXZlbnMgKDIuMCkgb3IgZ3JlYXRlciwgYW5kIGluIHRoZSBlbmQgeW91ciBNYXRjaGVkIEJldCB3aWxsIGJlIGVxdWFsIHRvIHRoZSB2YWx1ZSBvZiB5b3VyIGZpcnN0IGJldCB5b3UndmUgbWFkZS5CZWluZyBhbiBVSyBvbmxpbmUgYm9va21ha2VyIHJlcXVpcmVzIHRoYXQgeW91IG9mZmVyIG5vdCBvbmx5IGdyZWF0IGNvdmVyYWdlIG9mIGZvb3RiYWxsIGV2ZW50cywgYnV0IGVxdWFsbHkgZ3JlYXQgY292ZXJhZ2Ugd2l0aCBmb290YmFsbCBib251c2VzIHRvby4gVGhlcmUgYXJlIGZyZXNoIGJvbnVzZXMgZXZlcnkgZGF5IG9yIG1vbnRoLCBkZXBlbmRpbmcgb24gdGhlIGV2ZW50cyBzY2hlZHVsZWQsIGZvciBmb290YmFsbCBhbmQgaG9yc2UgcmFjaW5nIG1vc3RseSwgYnV0IGFsc28gZm9yIEFtZXJpY2FuIGFuZCBvdGhlciBzcG9ydHMuIApUaGF0IHdhcyBiZWZvcmUgSSBsZWFybmVkIHRvIHNwZWFrIHVwLiBUaGF0IHdhcyBhIGRpc2FzdGVyLiAKSSBzYXQgaW4gdGhlIGNoYWlyIGJlZm9yZSwgaXQgdGhlIGtpbmQgb2YgY2hhaXIgbXkgZW1wbG95ZXIgdXNlcyBpbiB0aGUgY29ycG9yYXRlIG9mZmljZXMsIGJ1dCBJIHdvcmsgZnJvbSBob21lLCBhbmQgaXQgYmVlbiBhIGZldyB5ZWFycyBzaW5jZSBJIHNhdCBpbiB0aGUgY2hhaXIuIApJdCBpcyBxdWl0ZSBjbGVhciB0aGF0IGNhcmRpb3Zhc2N1bGFyIGRpc2Vhc2UgaXMgaW5pdGlhdGVkIGFuZCBkcml2ZW4gYnkgb25nb2luZyBpbmZsYW1tYXRpb247IHRoaXMgaGFzIGJlZW4ga25vd24gZm9yIG1hbnkgeWVhcnMuCk9mZmVycyBwcm9wcyBhbmQgbW9kaWZpY2F0aW9ucyBnYWxvcmUgOiApCldlcmUgaXQgbm90IGZvciB0aGUgZmlyZSBicmlnYWRlIHNwZWVkeSBpbnRlcnZlbnRpb24sIHRoZXJlIHdvdWxkIGhhdmUgYmVlbiBubyBjYXJkIHBsYXlpbmcuIApTaGFkb3diYW4gbWVhbnMgdGhlaXIgY29tbWVudHMgZG9uIGFwcGVhciB3aGVuIHRoZXkgcG9zdC4gVGhlIHVzZXIgZG9lc24gcmVhbGl6ZSB0aGlzLCB1bmxlc3MgdGhleSBsb2cgb3V0IGFuZCBzZWUgdGhhdCB0aGVpciBwb3N0IGlzIG1pc3NpbmcgYnV0IHN0aWxsIGFkZHMgdG8gdGhlIHRvdGFsIGNvbW1lbnQgY291bnQsIG9yIGlmIHNvbWVvbmUgZWxzZSBzZWVzIGl0ICh0aGV5IHVzdWFsbHkgZ2V0IGEgbm90aWZpY2F0aW9uIG9mIGEgcmVwbHkgYnV0IGRvbiBzZWUgYW55IHBvc3RzIGluIHRoZWlyIGluYm94KS4uIApJbiBvdGhlciB3b3JkcywgaGV0ZXJvbm9ybWF0aXZlIGRlc2lyZSBpcyB0aGUgY3VsdHVyYWwgc2NyaXB0IHRoYXQgY29tbWVyY2lhbCBwb3JuIGdpdmVzIHVzIG92ZXIgYW5kIG92ZXIgYWdhaW4uIEFuZCBldmVudHVhbGx5IGl0IHNpbmtzIGluOiB0aGlzIGlzIHdoYXQgc2V4IGxvb2tzIGxpa2UsIHRoaXMgaXMgaG93IGRlc2lyZSB3b3Jrcy4gSXQgbGlrZSBhZHZlcnRpc2luZyB0aGF0IHdheTogdGhpcyBpcyB3aGF0IGlzIGZhc2hpb25hYmxlIGFuZCBiZWF1dGlmdWwsIHRoaXMgaXMgd2hhdCBpcyB1Z2x5LiBUaGUgbW9yZSB5b3UgY29uc3VtZSwgdGhlIHN0cmFpZ2h0ZXIgeW91IGdldC4gQW5kIHRoYXQgaG93IHBvcm4gdHVybmVkIG1lIHN0cmFpZ2h0LiBJIHdhdGNoZWQgdG9vIG11Y2gsIGZhbnRhc2l6ZWQgbXlzZWxmIGludG8gaXQgb25jZSB0b28gb2Z0ZW4gYW5kIHBvb2YsIGFsbCBkZXNpcmVzIG91dHNpZGUgb2YgdGhlIGhldGVyb3NleHVhbCBtYXRyaXggZGlzYXBwZWFyZWQuClNvIEkgdGVuZCB0byBiZSBvdmVybHkgZ3VsbGlibGUgd2l0aCB0aGluZ3MgaW4gZ2VuZXJhbCBzbyB0YWtlIG15IG9waW5pb24gd2l0aCBhIGdyYWluIG9mIHNhbHQgYnV0IEkgYmVsaWV2ZSB0aGF0IHRoaXMgaXMgYSBzb2x2YWJsZSBpc3N1ZS4gU2hlIGJhc2ljYWxseSBpbnN0YW50bHkgcmVjb2duaXplZCB0aGF0IHdoYXQgc2hlIHdhcyBkb2luZyBpcyB3cm9uZyBhbmQgY29uZmVzc2VkIGV2ZXJ5dGhpbmcsIGV2ZW4gZGV0YWlscyBzaGUgZGlkbid0IG5lZWQgdG8gc2hhcmUgdGhhdCBjb3VsZCBtYWtlIHRoaW5ncyB3b3JzZSBmb3IgaGVyLiAKU28gUm9nZXJzLCBldmVyIG1pbmRmdWwgb2YgdGhlIGNvbm5lY3Rpb24gYmV0d2VlbiBnYW1ibGluZyBhbmQgZmluYW5jaWFsIG1hcmtldHMsIHBsYXlzIGEgcG9rZXIgZ2FtZSB3aXRoIHRoZSBwcm9mZXNzb3Igd2hvLCBkZXNwaXRlIGhhdmluZyBhIHdpbm5pbmcgaGFuZCwgZ3JhY2lvdXNseSBhY2NlcHRzIGhpbSBpbiBoaXMgY2xhc3MuIApUaGVpciBmb3JlYmVhcnMgaGFkIGNsaW1iZWQgdGhlc2UgaGlsbHMgZWFjaCBzcHJpbmcgc2luY2UgYmVmb3JlIHRoZSBhZ2Ugb2YgQWxleGFuZGVyLiBUaGV5IHdlcmUgaW5kaWZmZXJlbnQgdG8gdGhlIENvbGQgV2FyIGFuZCB0aGUgcmlzZSBhbmQgZmFsbCBvZiBuYXRpb24gc3RhdGVzLi4gCkJvdGggaGVyIHBhcmVudHMgaGFkIGdyb3dudXAgaGVyZSBhbmQgd2hlbiBoZXIgZGFkIGRpZWQgaW4gQWZnaGFuaXN0YW4sIGhlciBtb20gbW92ZWQgdGhlbSBiYWNrIHdoZXJlIHRoZWlyIHJlbGF0aXZlcyBsaXZlZC4gCldhbnRlZCB0byBzdHJhdGVnaWNhbGx5IGFsaWduIG15c2VsZiB3aXRoIHRoZSByaWdodCBwYXJ0bmVycyBhbmQgQXJsZW5lIG1hcmtldGluZyBleHBlcnRpc2UgY291bGQgYmUgdmVyeSBpbXBvcnRhbnQuIApJIHRoaW5rIGl0IHJlYWxseSBjb21lcyBkb3duIHRvIHdoYXQgeW91IHdhbnQgdG8gZG8uIApUZW4gcGVyc29ucyBoYXZlIGJlZW4gbm9taW5hdGVkIGluIHRoZSBjYXNlIGluY2x1ZGluZyB0cmliYWwgbGVhZGVycyB3aG8gYXJlIGFjY3VzZWQgb2YgcHJlc3N1cmluZyBOb29yYW4gdG8gaGFuZCBvdmVyIE5vcmVlbiB0byBwYXkgdGhlIDE2IHllYXIgb2xkIHBva2VyIGRlYnQuClNraW4gQXF1YSBTdXBlciBNb2lzdHVyZSBNaWxrIFNQRiA1MCAoRXZlcnkgZGF5OyBJIGxvdmUgdGhpcyBzdW5zY3JlZW4gYnV0IEknbSBvcGVuIHRvIGZpbmRpbmcgdGhlIG1vc3QgcHJvdGVjdGl2ZSBvbmVzLikKVGhyb3cgdGhlIGFyY2hvbiB1cCB0aGVyZSB0byBzZXR0bGUgdGhlIGRldGFpbHMsIEkgc3VyZSB0aGV5IGJlIGlycmVzaXN0aWJsZSB0byB0aGUgaHVtYW5zLiBBIGZldyBtaWxsZW5uaWEgb2YgY28gaGFiaXRhdGlvbiBhbmQgdGhleSBiZSBpbnRlZ3JhdGVkIGludG8gc29jaWV0eSBhbmQgdGhlIGhpZ2hlciB1cHMgY2FuIGdvIHN0dWR5IHRoZW0gb3IgYWN0aXZhdGUgdml2aXNlY3RvcnMgb3Igd2hhdGV2ZXIuCkl3YW4gUGF3bG92aXRzY2ggTmV1bWl3YWtpbiwgTWVuc2NoIGRlcyBKYWhyZXMgMjAwMi4gClNvIEdDSk4gbmVlZHMgQUxMIG9mIEpOTW9tbXkncyBhdHRlbnRpb24gYW5kIGZpbmFuY2VzLiAKSm9icyBzaG91bGQgaW5jcmVhc2UgcGVya2luZXNzLCBub3Qgc2l6ZS4gCkEgcHJvdGVjdG9yIGlzIGNvbnNpZGVyZWQgYXMgYSBzaW1wbGUgZ3VhcmQsIGEgc2ltcGxlIHBsYXN0aWMgY292ZXJpbmcgZm9yIGFueXRoaW5nIHNwZWNpYWwuIEhvd2V2ZXIsIHRoZXNlIHByb3RlY3RvcnMgYXJlIHNvbWV0aW1lcyBleHRyZW1lbHkgaW1wb3J0YW50IGlmIHRoZSBpbnNpZGVyIHByb2R1Y3QgaXMgdnVsbmVyYWJsZSBhbmQgZXhwb3NlZCB0byBoaWdoZXIgZGFtYWdpbmcgcmlza3MuIEZvciB0aGUgcG9rZXIgcGxheWVycywgdGhlIGNhcmRzIGFyZSBkZWZpbml0ZWx5IHRoZSBtb3N0IGV4Y2x1c2l2ZSB0aGluZ3MuIApUaGluZ3MgbGlrZSBudXRyaXRpb24sIHRyYWluaW5nIHByb2dyYW0sIHNsZWVwLCBzdHJlc3MsIGdlbmV0aWNzLiAKV2hhdCBPblRoaW5ncyB0byBkb0Zvb2QgYW5kIERyaW5rVGhlYXRyZSBhbmQgQXJ0c1RWIEd1aWRlRGlnaXRhbCBQcmludCBFZGl0aW9uV0FSTklORy4gVGhlIGZvbGxvd2luZyBjb3VsZCBtYWtlIGxvbmcgdGltZSBsb2NhbHMgZmVlbCB2ZXJ5IG9sZC4gVHdlbnR5IG9uZSB5ZWFycyBhZ28sIHdlIHNhaWQgZ29vZGJ5ZSB0byB0aGUgb2xkIFBvcnQgTWFjcXVhcmllIFJTTCBDbHViIChvciBSaXNzb2xlIHRvIG1hbnkpLiBNdWNoIG1vcmUgdGhhbiBmb3VyIGNvbmNyZXRlIHdhbGxzLCB0aGUgUmlzc29sZSBob2xkcyBhIG11bHRpdHVkZSBvZiBtZW1vcmllcy4gClRoZXkga2VwdCBkb2luZyB0aGF0IG9uIHVzIGFuZCB3ZSBqdXN0IGtlcHQgY2xvZ2dpbmcgdXAgdGhlIG1pZGRsZSBhcyBtdWNoIGFzIHdlIGNhbi4uIApFdmVuIHdvcnNlLCAiaGUgaGFkIG5vIGF0aGxldGljIGFiaWxpdHkgb3IgdHJhaW5pbmcsIiBzYXlzIERpVmVjY2hpby4gIkkgaGFkIHRvIGdldCBoaW0gc3dlYXRpbmcgYW5kIGNvbWZvcnRhYmxlIHdpdGggZmVlbGluZyBzb3JlIGFzIGhlbGwuIgpPdXIgb3RoZXIgY2hpcHMgYXJlIHN0aWxsIEZ1amkgYXBwbGVzIGJ1dCB0aGV5IGhhdmUgYSBuYXR1cmFsIGZsYXZvdXIgYWRkZWQuIFRoZXkgYXJlIHN1Z2FyIGZyZWUsIGZhdCBmcmVlIGFuZCBnbHV0ZW4gZnJlZS4gQWZ0ZXIgbGF1bmNoaW5nLCB0aGUgY29tcGFueSBsYW5kZWQgc2hlbGYgc3BhY2UgYXQgZ3JvY2VyeSBjaGFpbiBTYWZld2F5LCB3aGljaCB3YXMgYWxzbyBpbnZvbHZlZCB3aXRoIHRoZSBpbml0aWFsIGRldmVsb3BtZW50IG9mIHRoZSBwcm9kdWN0LiAKU29tZXRpbWVzIHRoZSBzZWxsZXIgd2lsbCBiZSBoZXNpdGFudCBhbmQgb25seSB0ZWxsIHlvdSB0aGV5IGFyZSBtb3ZpbmcuIApXb3JrZWQgb3V0IHByZXR0eSB3ZWxsIGJlY2F1c2UgSSBtZXQgbXkgZmlhbmMgd2hvIGlzIFNPIG9uIGJvYXJkIHdpdGggdGhpcyBhbmQgcmVhbGx5IHNlZXMgdGhpcyBtb2Rlcm4gZGlsZW1tYSBmb3Igd29tZW4gYXMgdXMgZ2V0dGluZyB0aGUgc2hvcnQgZW5kIG9mIHRoZSBzdGljay4uIApXZSBoYXZlIGRvbmUgaXQgaW5jcmVtZW50YWxseS4gCkhvd2V2ZXIgaXQgd2FzIG1vcmUgdGhhbiBqdXN0aWZpZWQgc2luY2UgbmF0aXZlIEdlcm1hbnMgd2VyZSBiZWluZyBzbGF1Z2h0ZXJlZCBhbmQgbWlzdHJlYXRlZCBpbiB3aGF0IHdhcyBvbmNlIHRoZWlyIGxhbmQgKFN1ZGV0ZW5sYW5kKS4gCkFnYWluLCBJIHRob3VnaHQgSSB3YXMganVzdCBpbWFnaW5pbmcgaXQgYW5kIGRpZG4gd2FudCB0byBhd2t3YXJkbHkgb3BlbiBteSBleWVzIHRvIGNoZWNrIHNpbmNlIGhlIHdhcyByaWdodCBhYm92ZSBtZS4gCldpdGggY29uc3RhbnQgdGVtcHRhdGlvbiBhbmQgZWFzeSBvcHBvcnR1bml0eSBmb3IgZmF2b3JpdGlzbSBhbmQgZXZlbiBleHRvcnRpb24sIHdpdGggdXR0ZXIgbGFjayBvZiBzdXBlcnZpc2lvbiBhbmQgY29udHJvbCwgYW5kIHdpdGhvdXQgdGhlIHNsaWdodGVzdCBwcmVwYXJhdGlvbiBhbmQgdHJhaW5pbmcgdG8gY3JlYXRlIGluIHRoZSBjb3JvbmVyIG1pbmQgYSBzY2llbnRpZmljIGFuZCBwcm9mZXNzaW9uYWwgaW50ZXJlc3QgaW4gdGhlIHBlcmZvcm1hbmNlIG9mIGhpcyBkdXRpZXMsIHRoZSBwcmVzZW50IHN5c3RlbSBjb3VsZCBub3QgaGF2ZSBiZWVuIGJldHRlciBkZXZpc2VkIGludGVudGlvbmFsbHkgdG8gcmVuZGVyIGltcHJvYmFibGUsIGlmIG5vdCBpbXBvc3NpYmxlLCB0aGUgaG9uZXN0IGFuZCBlZmZpY2llbnQgcGVyZm9ybWFuY2Ugb2YgdGhlIGltcG9ydGFudCBwdWJsaWMgZnVuY3Rpb24gZW50cnVzdGVkIHRvIGhpcyBvZmZpY2UuLiAKVGhlcmUgbGl0ZXJhbGx5IHRoZSBzaGFtcG9vLCB0aGUgYmxvdyBkcnksIHRoZSAidHJpbSIgaXRzZWxmLCBzdHlsaW5nLCBwcm9kdWN0cywgd2F0ZXIgYW5kIGVsZWN0cmljaXR5IGNvc3RzLCBteSB2YWx1ZSBhcyBhIGNyYWZ0c21hbiB0aGF0IG5vIG9uZSBldmVyIHRvb2sgaW50byBjb25zaWRlcmF0aW9uLiAKQyd0YWl0IGwnZW1wcmVpbnRlIGRlIGwncGlnbnRpcXVlLCBjJ2VzdCAgZGlyZSBsJ2VmZmV0IGRlIGwnZW52aXJvbm5lbWVudCBzdXIgbGEgbWFuaXJlIGRvbnQgbm9zIGduZXMgIHMnZXhwcmltZW50IC4uIAozMDAgdnMgMjIwIEhQIGZyb20gYSAzTC4gCjEwIHBvaW50cyAgc3VibWl0dGVkIDQgZGF5cyBhZ29MYXN0IHllYXIgYm90aCBFemVraWVsIEFuc2FoIGFuZCBEZW1hcmN1cyBMYXdyZW5jZSBzaWduZWQgZnJhbmNoaXNlIHRhZ3Mgd29ydGggMTcuMTQzTS4gVGhleSBhcmUgYm90aCBERXMuSSBhc3N1bWUgdGhhdCBtZWFucyB0aGUgY2FsY3VsYXRpb25zIGFyZSBhbGwgZG9uZSBiYXNlZCBvbiBub24gdGFnIGNvbnRyYWN0cy5FZGl0OiBBY3R1YWxseSwgSSBub3Qgc3VyZS4gYm90aCB0aGVzZSBndXlzIHNpZ25lZCBub24gZXhjbHVzaXZlIHRhZ3Mgd2hpY2ggYXJlIGJhc2VkIG9uIHByZXZpb3VzIHllYXJzIHNhbGFyaWVzLiAKVG8gdHJ5IHRoaXMgbm9udHJhZGl0aW9uYWwgdHJlYXRtZW50LCBnZW50bHkgcnViIGljZSBvdmVyIHRoZSBMMTQgcHJlc3N1cmUgcG9pbnQgZm9yIGZpdmUgdG8gc2V2ZW4gbWludXRlcy4gClNoZSB0b2xkIG1lIHRoYXQgaGF2aW5nIGEgcGFuaWMgYXR0YWNrIGFuZCBzcGVuZGluZyB0aHJlZSBob3VycyB0aGUgbmlnaHQgcHJlY2lvdXMgY3J5aW5nIGFuZCB0cnlpbmcgdG8gcmVtZW1iZXIgaG93IHRvIGJyZWF0aGUgbm9ybWFsbHkgaXMgIm5vdCBhbiBleGN1c2UiIGZvciB0dXJuaW5nIGluIGEgMTAgcG9pbnQgaG9tZXdvcmsgYXNzaWdubWVudCBsYXRlLiBTaGUgc2FpZCB0aGF0ICJncm93biB1cHMgZG9uJ3QgbWFrZSBleGN1c2VzIGZvciBiZWluZyBsYXp5IiBhbmQgaSAianVzdCBuZWVkZWQgdG8gdHJ5IGhhcmRlci4iLiAKU2VscyBtaW5yYXV4IChwaG9zcGhvcmUsIGNhbGNpdW0sIGZlciwgY2hyb21lLCBzb3VmcmUsIG1hZ25zaXVtKSBldCB2aXRhbWluZXMgKEEsIEIxLCBCMiwgQywgRCkgbmUgc29udCBwYXMgZW4gcmVzdGUuIApKIGRlIGxhIGZhcmluZSAiYXR0YSIgYWNoZXRlIGVuIHBpY2VyaWUgaW5kaWVubmUsIGplIHNhaXMgcGFzIHNpIGEgbWFyY2hlIGF1c3NpIGJpZW4gYXZlYyBsYSBmYXJpbmUgZGUgY2hleiBub3VzLi4gCllvdSBjYW4gc3RpbGwga2VlcCBjb3N0cyBsb3cgYnkgZ29pbmcgdGhlIHJvdXRlLiAKSGVyZSB3ZSBhcmUgZ29pbmcgdG8gdGFsayBhYm91dCB0aGUgdGhlb3J5IGJlaGluZCB0aGUgInB1c2ggZm9sZCIgc3RyYXRlZ3kgdXNlZCBpbiB0aGUgbWlkZGxlIGdhbWUgb3IgImJ1YmJsZSIgc3RhZ2Ugb2YgYSBzaXQgYW5kIGdvLCB3aGljaCBjYW4gYmUgZGVmaW5lZCBhcyB0aGUgZm9sbG93aW5nOiAgVGhlcmUgYXJlIGZvdXIgb3IgZml2ZSBwbGF5ZXJzIHJlbWFpbmluZyAoaW4gYSB0ZW4gbWFuIFNORykgIFRoZSBhdmVyYWdlIHN0YWNrIHNpemUgaXMgMTUgYmlnIGJsaW5kcyBvciBsZXNzVW5saWtlIHRoZSBlYXJseSBzdGFnZXMsIG9uIHRoZSAiYnViYmxlIiBvZiBhIHNpdCBhbmQgZ28geW91IG5lZWQgdG8gb3BlbiB1cCB5b3VyIGdhbWUuIApXaGVuIGRlYWxpbmcgd2l0aCB0aGVhdHJlIGNvbnN0cnVjdGlvbiB5b3UgaGF2ZSB0byByZW1lbWJlciB0aGF0IGFsbW9zdCBldmVyeXRoaW5nIGlzIHJlbGF0ZWQgdG8gdGhlIGF1ZGllbmNlcyBhYmlsaXR5IHRvIHNlZS4gSW4gR3JlZWsgYW5kIFJvbWFuIHRoZWF0ZXIgdGhlIGF1ZGllbmNlIHdhcyBzZWF0ZWQgaW4gYW4gYW1waGl0aGVhdHJlLCB3aGVyZSB0aGUgc3RhZ2Ugd2FzIGZsYXQgYW5kIHRoZSBhdWRpZW5jZSB3YXMgcmFpc2VkLiBUaGlzIGFsbG93ZWQgZm9yIG1vc3QgcGVvcGxlIGluIHRoZSBhdWRpZW5jZSB0byBzZWUuCk9uIG9uZSB0dXJuLCBIZXJhIGFuZCB0aGUgYm9tYmVycyBtYWtlIG9uZSBhdHRhY2sgcnVuIGFzIHJvZ3Vlcy4gCkV2ZW4gd2hlbiB3ZSBkaWQgZ2V0IGEgY2hhbmNlLCBLYXJsIE1vb3JlIGhpdHMgdGhlIHBvc3QgYW5kIHRoZW4gaXQgYm9iYmxlcyBvdXQuLiAKS2lhIE5lcm8gRVYgIk5vdCBzdXJlIGhvdyBtYW55IHdlIHdpbGwgZ2V0IHRoaXMgeWVhciAgIG1heWJlIDUwPyIuIEphZyBpUGFjZSAiV2UgaGF2ZSAzIGluIHRoZSBzaG93cm9vbSAgIG5vIG1vcmUgY29taW5nIHVudGlsIEp1bmUiIE5pc3NhbiBOWiBoYXZlIGJlZW4gcHJvbWlzaW5nIHRoZXkgd2lsbCBzZWxsIHRoZSBuZXcgTGVhZiA0MGtXICAgbm8gc2lnbiBvZiBpdC4gCkl0IHNob3VsZCBiZSBhIHBvaW50IHdpdGggbG90cyBvZiBuZXJ2ZXMgZWcsIHlvdXIgbW91dGggb3IgeW91ciBhbnVzLiAKVGhhdCBpcyBzbyBhd2Vzb21lLiBNeSBtb3RoZXIgd2hvIHdhcyBhIG1hc3RlciBxdWlsdGVyIHBhc3NlZCBhd2F5IGxhc3QgbW9udGguIEV2ZXJ5IG1lbWJlciBvZiBvdXIgZmFtaWx5IGFuZCBzb21lIG9mIGhlciBmcmllbmRzIGFza2VkIGZvciBxdWlsdHMuIFRoZXJlIHdhcyBhIHNtYWxsIG9uZSBzaGUgaGFkIGp1c3QgZmluaXNoZWQgZm9yIGEgbmV3IGdyZWF0IGdyYW5kc29uIGFuZCBvbmUgb24gaGVyIGJlZC4gU2hlIG1hZGUgdGhlbSBmb3IgZXZlcnlvbmUgc2hlIGxvdmVkIGFuZCBkaWRuIGtlZXAgbXVjaCBmb3IgaGVyc2VsZi4gV2UgY29udGFjdGVkIHRoZSBxdWlsdGluZyBncm91cCB0aGF0IHNoZSB3YXMgYSBwYXJ0IG9mIGFuZCBnYXZlIHRoZW0gaGVyIGxlZnRvdmVyIGZhYnJpY3MgYW5kIHBpZWNlcyBvZiBwcm9qZWN0cy4gVGhleSB3ZXJlIHZlcnkgaGFwcHkgdG8gZ2V0IGl0IGFuZCBpdCBtYWRlIHRoZW0gYSBiaXQgdW5jb21mb3J0YWJsZS4gV2UgdG9sZCB0aGVtIHRoYXQgdGhpcyBpcyB3aGF0IHNoZSB3b3VsZCBoYXZlIHdhbnRlZC4gV2UgZ2F2ZSB0aGUgcmVzdCBvZiBoZXIgc2V3aW5nIHN1cHBsaWVzIHRvIGhlciBncmFuZGNoaWxkcmVuLiBJdCBpcyBzbyBsb3ZlbHkgdGhhdCB5b3VyIGZhbWlseSBwYXNzZXMgdGhpcyB0cmFkaXRpb24gZG93bi4KRlJFRSBDUkFDSyBTT0ZUV0FSRVM6IE1vam9zb2Z0IFBob3RvIEZyYW1lIFN0dWRpbyAyLjg1IFNlcmlhbCBLZXlDcmFjayBGcmVlIERvd25sb2FkLiBOb3YgNiwgMjAxNCAuIFNvZnQgTmFtZSBNb2pvc29mdCBQaG90byBGcmFtZSBTdHVkaW8gVmVyc2lvbiAyLjk2IERDIDA2LjExLjIwMTQgU2l6ZSBQYXJ0MSAxMDAgTUIgUGFydDIgOTIgTUIgU2luZ2xlIDE5Mi4xLiAKVmVuZXp1ZWxhLCBDb2xvbWJpYSwgYW5kIEJvbGl2aWEgd2VyZSBhbGwgaW4gdGhlIG1pZHN0IG9mIHBvbGl0aWNhbCBpbnN0YWJpbGl0eSwgd2l0aCBnb3Zlcm5tZW50cyBlbGV2YXRlZCBieSBjb3VwIG9yIHJldm9sdXRpb24sIGFuZCB3aGlsZSBoYXZpbmcgbm8gZGVzaXJlIHRvIGFsaWVuYXRlIHRoZW0sIGZvciB0aGUgVVMgdG8gcmVjb2duaXplIHRoZW0gbWlnaHQgZ2l2ZSB1bmludGVuZGVkIG1vcmFsIGFpZCB0byB0aGUgQ29uZmVkZXJhY3kuIApUaGlyZCBwYXJ0eSBzZXJ2aWNlIHByb3ZpZGVycyBzdWNoIGFzIHNoaXBwaW5nIGNvbXBhbmllcyBhbmQgb3VyIHdlYnNpdGUgYW5kIGFwcCBwbGF0Zm9ybSBwcm92aWRlcnMgd2hvIGFzc2lzdCB1cyBpbiBkZWxpdmVyaW5nIG91ciBwcm9kdWN0cyB0byB5b3U7CkMgdW4gdHJlIGRpZmZpY2lsZSAgYXBwcm9jaGVyLCBjb21tZSBzIG5lIHBlcm1ldHRhaXQgcGFzICBxdWljb25xdWUgZGUgbGUgY29uc2lkcmVyIGRhbnMgc29uIGludGdyaXQuIEMgbGEgcmFpc29uIHBvdXIgbGFxdWVsbGUgbGVzIHZpc2lvbnMgZXQgbGVzIHJ2ZXMgZGFucyBsZXNxdWVscyBpbCBhcHBhcmF0IG5lIHNvbnQgdG91am91cnMgcXVlIHBhcnRpZWxzIHBhcmNlIHF1ZSAgY2VsdWkgcXVpIHZlcnJhaXQgdW4gT2lzZWF1IFRvbm5lcnJlIHRvdXQgZW50aWVyIFtdIG4gc3Vydml2cmFpdCBzYW5zIGRvdXRlIHBhcyAuIENvdXRvbnMgbWFpbnRlbmFudCBjZSBxdSBkaXQgQXJjaGllIEZpcmUgOiAgTGVzIE9pc2VhdXggVG9ubmVycmUgc29udCBkaWZmcmVudHMgZGVzIGF1dHJlcyB0cmVzIHN1cm5hdHVyZWxzLiAKVGhlIHJlZCwgd2hpdGUsIGFuZCBibHVlIGxpZ2h0cyBhdG9wIGhpcyBuYXZ5IGJsdWUgc3F1YWQgY2FyIHdlcmUgcmV2b2x2aW5nIGFzIFNlcmdlYW50IFBoaWxsaXBzIHN3dW5nIHRvIGhpcyByaWdodCBvZmYgdGhlIGhpZ2h3YXksIGF0IHRoZSB2ZXJ5IHNwb3Qgd2hlcmUgZm91ciBsYW5lIEFybGluZ3RvbiBCb3VsZXZhcmQgbmFycm93ZWQgdG8gYSB0d28gbGFuZSByb2FkIG91dCBpbnRvIHRoZSBjb3VudHJ5c2lkZSwgYW5kIHB1bGxlZCB1cCBpbiBmcm9udCBvZiB0aGUgc3RvcmUuIFRoZSBsaWdodCBmbGlja2VyZWQgYWNyb3NzIGhpcyBmYWNlIGFzIGhlIHVuYmVudCBmcm9tIHRoZSBjYXIgYW5kIHN0cm9kZSwgbG9uZyBsZWdnZWQsIHRvd2FyZCB0aGUgZG9vci4gCktleXMgYWR2YW5jZWQgNiAzLCA2IDQgb3ZlciBBbmEgQm9nZGFuIGFuZCB3aWxsIG5leHQgcGxheSBOby4gOCBDYXJvbGluZSBHYXJjaWEuIFNpeHRoIHNlZWRlZCBLYXJvbGluYSBQbGlza292YSBiZWF0IE5vLiAyOSBMdWNpZSBTYWZhcm92YSA3IDYgKDYpLCA3IDUuCkknbSBnZXR0aW5nIGludG8gcGxheWluZyBsb3cgbGltaXQgcG9rZXIgd2l0aCBhIGJ1bmNoIG9mIHBlb3BsZSB3aXRoIExPVFMgbW9yZSBleHBlcmllbmNlIHRoYW4gbWUuIChEb24ndCB3b3JyeSwgd29uJ3QgYmUgbG9zaW5nIG15IHNoaXJ0KS4KRG9pbmcgYSBkb2N1bWVudGFyeSBvbiBjb3VudHJpZXMgd2hlcmUgcG9ybiBpcyBpbGxlZ2FsCldoYXQgSSB0aGluayBpcyBnb2luZyBvbiBoZXJlIGlzIHRoYXQgWUcga25vd3MgdGhlIGNvbXBsZXRlIGV4dGVudCBvZiB3aGF0IFNldW5ncmkgd2FzIHJlYWxseSBpbnZvbHZlZCB3aXRoIGF0IHRoaXMgcG9pbnQgLyBIZSBpbnZvbHZlZCBoaW1zZWxmIGFzIHdlbGwsIGFuZCBoZSBrbm93cyB0aGF0IGl0cyBvbmx5IGEgbWF0dGVyIG9mIHRpbWUgYmVmb3JlIGhpbXNlbGYgYW5kIG9yIFlHRSBpcyBhbHNvIGludmVzdGlnYXRlZCB0b28uIFNvIHRoZXkgc2NyYW1ibGluZyB0byBzY3JhcGUgdGhlIGNvbXBhbnkgb2YgYW55dGhpbmcgdGhhdCBjb3VsZCBiZSBpbmNyaW1pbmF0aW5nLiAKVGlnZXIgV29vZHMgY2hlYXRlZCBiZWNhdXNlIGhlIHVuZGVyd2VudCBhbiBhbmRyb2dlbiB3YXNoIGluIHRoZSB3b21iIGFuZCBpdCBoeXBlciBtYXNjdWxpbml6ZWQgaGlzIGJyYWluIGFuZCB0aGVyZWZvcmUgaGUgY291bGQgbm90IGhlbHAgYnV0IHRhcCBldmVyeSB3b21hbiBpbiBhIGZpZnR5IG1pbGUgcmFkaXVzLiAKVGhleSByZWZsZWN0IHRoZSBtb25leSBhbW91bnQgb2YgJDIuNTAuIApCdXQgZXZlbnR1YWxseSwgZWFjaCBvZiB1cyBydW5zIGludG8gYW4gdW5kZWFkIHNlcnZhbnQgb2YgT3JjdXMsIGVhY2ggb2YgdGhlbSBzb21lIHdlbGwga25vd24gaGVybyBvZiBEIHBhc3QgKEkgYW0gbm90IGdvb2QgZW5vdWdoIHdpdGggdGhhdCBsb3JlIHRvIHJlbWVtYmVyIHRoZW0pLkV2ZXJ5b25lIGVsc2UgdGFrZXMgdGhlaXIgdHVybnMgYW5kIGRvZXMgdGhlaXIgYXR0YWNrcyBhbmQgZG9kZ2VzLiBNZT8gTm8gd2F5LCB0aGF0IGR1ZGUgaGFzIHN0YWJieSBiaXRzIGFuZCBJIGp1c3QgYSB3aXphcmQuIApPdGhlcndpc2UgaXQgbGlrZSBzdGFydGluZyBhIGpvdXJuZXkgd2l0aG91dCBrbm93aW5nIHdoZXJlIHlvdSBhcmUgZ29pbmcuIApXb3cgb2theS4gSGUgcHJvYmFibHkgdGhvdWdodCBoZSB3YXMgZG9pbmcgeW91IGEgc29saWQsIGp1c3Qgd2F0Y2hpbmcgb3ZlciBhIGZyaWVuZC4gClRoZSBjb2RlIGlzIGFwcGxlYmVlczEyLiBBbmQgaWYgaXQgZG9lcyBub3Qgd29yayB0aGFuIHRyeSB3YXRlcm1lbG9uMTYuIFNvIGhlIGRpZCB0aGUgc2Vjb25kIG9uZS4gQW5kIGlmIHRoZXkgZG9uJ3Qgd29yayB0aGVuIHRyeSBhbmQgZ28gb24gZ29vZ2xlIGFuZCBmaW5kIG9uZSB0aGF0IGRvZXMgd29yay4gU28gaWYgeW91IGxpa2UgcG9wdHJvcGljYSB0aGVuIHRoZXJlIHlvdSBnby4gTm93IEkgcGxheWggY2FydG9vbiBuZXR3b3JrIGJlY2F1c2UgSSBiZWF0IGFsbCBvZiB0aGUgaXNsYW5kcyBvbiBwb3B0cm9waWNhLiAoRnVsbCBBbnN3ZXIpCkpvaG5zb24gc2FpZCB0aGUgb3JpZ2luYWwgdHVuZXMgdG91Y2ggb24gdGhlIHNhbWUgdGhlbWVzIHNoZSBhbHdheXMgd3JpdHRlbiBhYm91dCwgY2hhbmdlIGlzIGhhcmQsIGJ1dCBuZWNlc3NhcnkgYW5kIGNvdXJhZ2UgaXMgc29tZXRoaW5nIHdlIGFsbCBoYXZlLiBJbiAxOTU5LCBKb2huc29uIGhhcyBiZWVuIG9uIHRoZSBlbnRlcnRhaW5tZW50IHNjZW5lIHNpbmNlIHNoZSB3YXMgYSBjaGlsZCwgcGVyZm9ybWluZyBpbiBQb3JneSBhbmQgQmVzcyBhdCB0aGUgUm95YWwgQWxleGFuZHJhIFRoZWF0cmUsIFNvdXRoIFBhY2lmaWMsIEZpbmlhbiBSYWluYm93IGFuZCBvdGhlciBtdXNpY2Fscy4gU2hlIHN0dWRpZWQgYXQgdGhlIE5hdGlvbmFsIEJhbGxldCBTY2hvb2wgYW5kIHRoZSBCYW5mZiBDZW50cmUgZm9yIEFydHMgYW5kIENyZWF0aXZpdHkgKHRoZW4gdGhlIEJhbmZmIFNjaG9vbCBvZiBGaW5lIEFydHMuKSBUaGVuLCBtdXNpYyBhbmQgc29uZ3dyaXRpbmcgY2FwdHVyZWQgaGVyIGltYWdpbmF0aW9uIGFuZCBieSAxNSBzaGUgd2FzIHBlcmZvcm1pbmcgaW4gYmFuZHMuLiAKRm91ciBlZ2dzIGhvbGRpbmcgdXAgT3R0YXdhIG11c2ljIGZlc3RpdmFsClBvcGUgRnJhbmNpcyBjbGVhcnMgSm9obiBQYXVsIElJIGZvciBzYWludGhvb2QKRm9yIG1lLCB0aGUgY29pbCBwbGFjZW1lbnQgaXMgc3VwZXIga2V5LiAKVGhhdCBiZWluZyBzYWlkLCBpZiB5b3UndmUgbmV2ZXIgcm93ZWQgYmVmb3JlLCBwcmVwYXJlIHlvdXJzZWxmIGZvciBhIHRpbWUgY29tbWl0bWVudC4gCkxvdmUgb3IgaGF0ZSBpdCwgVmFsZW50aW5lJ3MgRGF5IGlzIHRoZSBpZGVhbCB0aW1lIHRvIHJpZ2h0IHRoZSBnaWZ0IGdpdmluZyB3cm9uZ3Mgb2YgdGhlIGhvbGlkYXlzLiBXZXJlIHlvdSBzdXJlIHlvdXIgaHVzYmFuZCB3b3VsZCBsb3ZlIHRoYXQgZmF1eCB2aW50YWdlLCBCbHVldG9vdGggY29tcGF0aWJsZSB0dXJudGFibGUsIG9ubHkgdG8gZmluZCBvdXQgbGF0ZXIgdGhhdCB3aGF0IGhlIHJlYWxseSB3YW50ZWQgd2FzIGEgd2VpZ2h0ZWQgYmxhbmtldD8gRGlkIHlvdSBtaXNpbnRlcnByZXQgaGlzIG1vbnRocyBvZiBoaW50IGRyb3BwaW5nIGFib3V0IGhvbWVicmV3aW5nLCBwb255aW5nIHVwIGZvciB0aGUgcGVyZmVjdCBjcmFmdCBiZWVyIGtpdCwgd2hlbiBoZSB3YXMgYWN0dWFsbHkgdGFsa2luZyBhYm91dCBrb21idWNoYT8KTWVkaWNhdGlvbiBhbmQgdmlzaW9uIGlzIHdoYXQgZ2V0cyBtZS4gV2hhdCBnb29kIGlzIHNlZWluZyBteSBHUCBpZiBJIGNhbiBhZmZvcmQgdGhlIG1lZGljYXRpb24gSSBnZXQgcHJlc2NyaWJlZD8gQXMgaXQgaXMgSSBiZSBvZmYgbXkgcGFyZW50cyBjb3ZlcmFnZSBpbiBhIGZldyBtb250aHMgYW5kIGhhdmUgdG8gcGljayBhbmQgY2hvb3NlIG1lZGljYXRpb24uIE15IHZpc2lvbiBpcyBhbHNvIGEgbWVzcy4gSSBuZWVkIGFuIGV5ZSB0ZXN0IGV2ZXJ5IHllYXIsIGFuZCBuZXcgZ2xhc3NlcyBhYm91dCBhcyBvZnRlbi4KVGhlIG5leHQgZmV3IGhvdXJzLCBob3dldmVyLCBOYXNoIGRldmVsb3BlZCBhIHdlaXJkIGNvdWdoLiBBbmQgYnkgRmViLiAxOCwgdGhlIGxpdHRsZSBib3kgaGFkIGEgMTA0IGRlZ3JlZSB0ZW1wZXJhdHVyZS4uIApIZSB3YXMgY3JhenkgcHJlcGFyZWQgYW5kIGNsZWFyLiBIZSBnYXZlIG1lIG1vdGl2YXRpb24gdG8gZ2V0IGJlaGluZCBoaXMgaWRlYXMgd2l0aG91dCBqdXN0IGF0dGFja2luZyBUcnVtcCAodGhvdWdoIGhlIGRpZCBhIGdyZWF0IGpvYiBvZiBkb2luZyB0aGF0IHRvbykuIApUaGUgZmFjdCBzaGUgZG9lcyB0aGlzIGtub3dpbmcgaGUga25vd3MgYW5kIHNlZXMgd2hhdCBzaGUgcG9zdHMgaW5kaWNhdGVzIHRvIG1lIHNoZSBzaG91bGRuJ3QgaGF2ZSBhY2NlcHRlZCBpdC4gClRoZSAiQmx1bWluZSIgaXRzZWxmIGRlc2VydmVzIG1lbnRpb24sIHNpbmNlIGl0IGlzIHNvIHJhcmVseSBwZXJmb3JtZWQgYXMgcGFydCBvZiB0aGUgd29yay4gClNvLCBJIHNhaWQsIE9LLCB5b3Uga25vdywgdGhpcyBpcyBhIGd1eSBJIGNhbiB0YWxrIHRvIGZvciBhIGxpdHRsZSB3aGlsZS4gIiBTb2xvbW9uIHdhcyBpbiB0aGUgZGFyayBhYm91dCBFcm5pZSdzIHdpZmUgYW5kIHlvdW5nIHNvbiBpbiBDYWxpZm9ybmlhLiBBbmQgUm9ieW4gaGFkIG5vIGlkZWEgaGVyIGh1c2JhbmQgd2FzIG9uIHRoZSBwcm93bCBpbiBMYXMgVmVnYXMuIAo3OiBDYWxsZSBVcnVndWF5LCBhIGZpdmUgbWludXRlIHdhbGsgc291dGggb2YgRWwgQ2FuZ3Jlam8gcHJvcGVyIGFuZCBsaW5lZCB3aXRoIHJlc3RhdXJhbnRzLCBwdWJzLCBhbmQgb3RoZXIgbmlnaHRzcG90cy4gCktuaXBob2ZpYXMgYXJlIG1haW5seSBmcm9tIFNvdXRoIEFmcmljYSBhbmQgdGhlcmUgYXJlIGFib3V0IDcwIHNwZWNpZXMuIEEgZmV3IGFyZSBhbHNvIGZvdW5kIGluIEV0aGlvcGlhLCBBcmFiaWEgYW5kIE1hZGFnYXNjYXIuIFRoZXkgYXJlIG5hbWVkIGFmdGVyIEpvaGFubiBIaWVyb255bXVzIEtuaXBob3IgKDE3MDQgMTc2Mykgd2hvIHByb2R1Y2VkIGEgZm9saW8gb24gdGhlbS4gCk5vIG9uZSBzZXJpb3VzbHkgc3VnZ2VzdHMgdGhhdCwgZm9yIGV4YW1wbGUsIENoaW5lc2UgYW5kIEVuZ2xpc2ggYXJlIHVsdGltYXRlbHkgZGVzY2VuZGVkIGZyb20gZGlmZmVyZW50IGV2b2x1dGlvbnMgb2YgbGFuZ3VhZ2UuIFRoYXQgd291bGQgYmUgcmlkaWN1bG91cy4gVGhleSBmYXIgbW9yZSBzaW1pbGFyIHRoYW4gdGhleSBhcmUgZGlmZmVyZW50LCBhbmQgdGhlcmUgaXMgbm8gZGlmZmVyZW5jZSBpbiB0aGUgbGluZ3Vpc3RpYyBjYXBhYmlsaXRpZXMgb2YgQ2hpbmVzZSBhbmQgRW5nbGlzaCBwb3B1bGF0aW9ucyB0aGF0IHdvdWxkIG1ha2UgdXMgc3VzcGVjdCB0aGV5IGhhZCBldm9sdmVkIGxhbmd1YWdlIHNlcGFyYXRlbHkuLiAKUmVhbGl0eSB1c3VhbGx5IGhhZCBhIHdheSBvZiBpbnRlcnZlbmluZy4gQnV0SSBrbmV3IG9uZSBzZW5pb3IgcmVwb3J0ZXIgd2hvIHdvdWxkIHBsYXkgc29saXRhaXJlIG9uIGhpcyBjb21wdXRlciBpbiB0aGUgbW9ybmluZ3MsIHdhaXRpbmcgZm9yIGhpcyBlZGl0b3JzIHRvIGNvbWUgdGhyb3VnaCB3aXRoIG1hcmNoaW5nIG9yZGVycy4gT25jZSwgaW4gdGhlIExvcyBBbmdlbGVzIGJ1cmVhdSwgSSBsaXN0ZW5lZCB0byBhIHZpc2l0aW5nIE5hdGlvbmFsIHN0YWZmIHJlcG9ydGVyIHRlbGwgYSBjb250YWN0LCBtb3JlIG9yIGxlc3M6ICJNeSBlZGl0b3IgbmVlZHMgc29tZW9uZSB0byBzYXkgc3VjaCBhbmQgc3VjaCwgY291bGQgeW91IHNheSB0aGF0PyIKTm93IHRoaXMgaXMgbm90IHdoYXQgdGhlIGNvbWVkeSB0YWcgcmVmZXJyZWQgdG8gb2YgY291cnNlIGFzIHRoaXMgd2FzIHJlYWwsIGJ1dCBpdCBpcyBhIGxpdHRsZSBhbXVzaW5nIHRvIHNlZSBzdWNoIGEgdGhpbmcgaW4gYmxhY2sgYW5kIHdoaXRlLi4gCkluIGhpcyBkcnVua2VuIHN0YXRlIGhlIGRlY2lkZWQgdG8gd2FsayBob21lIGZvcmdldHRpbmcgaGUgaGFkIGxvY2tlZCBoaXMgYmlrZSB0byBtaW5lIHdpdGhvdXQgdGVsbGluZyBtZS4gU2luY2UgSSB3YXMgdHJhdmVsbGluZyBhbG9uZSBhbmQgd2FzIG5vIHdheSBpbiBoZWxsIHRyeWluZyB0byByaWRlIHR3byBiaWtlcyBhdCBvbmNlIEkgdHJpZWQgcHVsbGluZyBhcyBoYXJkIGFzIEkgY291bGQgb24gYm90aCBzaWRlcyBvZiB0aGUgbG9jay4gCkxpa2UgaXQgb3Igbm90LCBpZiB3ZSBjYXJlIGFib3V0IG91ciB3b3JsZCBhbmQgb3VyIGVudmlyb25tZW50LCB3ZSBuZWVkIHRvIGN1dCBkb3duIG91ciBjb25zdW1wdGlvbiBvZiBiZWVmLCBwb3JrLCBwb3VsdHJ5IGFuZCBzZWFmb29kIFNJR05JRklDQU5UTFkgKHRoaW5rIG9uZSA0IDYgb3VuY2Ugc2VydmluZyBvZiBiZWVmIHBlciBtb250aCwgNSA2IGVnZ3MgICB1bmxlc3MgeW91IGFyZSBnb2luZyB0byByYWlzZSB5b3VyIG93biBjaGlja2VucyAgIHBlciB3ZWVrLCBhbmQgMiBzZXJ2aW5ncyBvZiBjaGlja2VuIHBlciB3ZWVrKS4sIFdlIGFsc28gbmVlZCB0byBjdXQgV0FZIGJhY2sgb24gZGFpcnkgZmFybWluZywgYXMgcmFpc2luZyBjYXR0bGUgZm9yIGFueSB1c2UgaXMgZXh0cmVtZWx5IGRhbWFnaW5nIHRvIHRoZSBlbnZpcm9ubWVudCwgZXZlbiBiZWZvcmUgeW91IGxvb2sgYXQgdGhlIGV0aGljcyBvZiB0aGUgd2F5IHdlIGZhcm0uIApJIGhhcHB5IHRvIGNoZWNrIHdpdGggdGhlIG90aGVyIG1vZHMgaW4gY2FzZSB0aGV5IGhhdmUgYSBkaWZmZXJlbnQgb3BpbmlvbiwgYnV0IHlvdXIgZXhhbXBsZSBmZWVscyBsaWtlIGFuIGVkZ2UgY2FzZSB0aGF0IHdlIHdvdWxkbiByZW1vdmUgdW5sZXNzIHRoZXJlIHdhcyBzb21ldGhpbmcgZWxzZSBvYnZpb3VzbHkgcHJvYmxlbWF0aWMgW0VESVQ6IGZvciBleGFtcGxlLCBpZiBpdCBicm9rZSBvdXIgZHJpdmUgYnkgZGlhZ25vc2lzIHJ1bGVdLi4gCkVkaXQ6IHJlYWRpbmcgdG9nZXRoZXIgICBpbWFnaW5lIHNpdHRpbmcgcXVpZXRseSB3aXRoIHlvdXIgU08gZWFjaCByZWFkaW5nIHNvbWV0aGluZy4gCk9uIFNhdHVyZGF5cyB0aHJvdWdoIE9jdC4gMjkgTG9jYWwgcHJvZHVjZSwgYmFraW5nLCBhcnRpc2FucyBhbmQgbW9yZS4gUGFyayB0aGUgY2FyIGEgY291cGxlIG9mIGJsb2NrcyBhd2F5LCBncmFiIGEgY29mZmVlIGFuZCBnbyBmb3IgYSB3YWxrIHRocm91Z2ggdGhlIG1hcmtldCB0byBmaW5kIGV2ZXJ5dGhpbmcgZnJvbSBidW5jaGVzIG9mIGNvbG91cmZ1bCBjYXJyb3RzIHRvIHNwb29uIHJpbmdzIGFuZCBmcmVzaCBjdXQgZmxvd2Vycy4gCkkgd2lsbCBiZSBsb29raW5nIHRvIGdldCBhIGZpYmVyIGxhc2VyIGZvciBjdXR0aW5nIGluIHRoZSBuZXh0IHllYXIgb3Igc28sIGlmIG15IGJpeiBidWRnZXQgY2FuIGhhbmRsZSBpdC4uIApSZXR1cm4gdG8gdGhlIG5vcm1hbCBzdGFuZGluZyBwb3NpdGlvbi4gCkkgdGhpbmsgdGhlIHlvdW5nIG9uZSBpcyByZWFsaXppbmcgdGhhdCBpdCBva2F5IHRvIHRoaW5rIHRoYXQgYmVpbmcgZ2F5IGlzIHdyb25nIG9yIGhhdmluZyBhbiBhYm9ydGlvbiBpcyB3cm9uZyB3aXRoaW4geW91ciBvd24gcmVsaWdpb24uIAogIEEgbmV3IHN0dWR5IGxlZCBieSBVbml2ZXJzaXR5IG9mIE5vcnRoIENhcm9saW5hIFNjaG9vbCBvZiBNZWRpY2luZSByZXNlYXJjaGVycyBpcyB0aGUgZmlyc3QgdG8gaWRlbnRpZnkgYSBnZW5ldGljIHJpc2sgZmFjdG9yIGZvciBwZXJzaXN0ZW50IHBhaW4gYWZ0ZXIgdHJhdW1hdGljIGV2ZW50cyBzdWNoIGFzIG1vdG9yIHZlaGljbGUgY29sbGlzaW9uIGFuZCBzZXh1YWwgYXNzYXVsdC5JbiBhZGRpdGlvbiwgdGhlIHN0dWR5IGNvbnRyaWJ1dGVzIGZ1cnRoZXIgZXZpZGVuY2UgdGhhdCBwZXJzaXN0ZW50IHBhaW4gYWZ0ZXIgc3RyZXNzZnVsIGV2ZW50cyBoYXMgYSBzcGVjaWZpYyBiaW9sb2dpY2FsIGJhc2lzLiAKVGhlcmUgc2hvdWxkIG5vdCBiZSBtdWNoIGxlZnQgdG8gYWRkIHRvIGEgZnVsbCBwcmljZWQgZ2FtZS5JIGFsc28gZGlzYWdyZWUgdGhhdCBpdCBhbHdheXMgb25seSBub3N0YWxnaWEgYmVjYXVzZSBtYW55IGZhbnMgaGF2ZSByZXBsYXllZCB0aGUgSEQgdmVyc2lvbnMgcmVjZW50bHkgKG15c2VsZiBpbmNsdWRlZCkgYW5kIHN0aWxsIGhhZCBhIGJsYXN0IHdoaWNoIGlzIG5vdCBleGNsdXNpdmVseSBiZWNhdXNlIHRoZXkgcGxheWVkIHRoZSBGTS4gCkpkaXJ0eXN0YWNrICAxIHBvaW50ICBzdWJtaXR0ZWQgNSBtb250aHMgYWdvCkhvbGRpbmcgaW4gdGhlIHNtb2tlIG9ubHkgY2F1c2VzIGZ1cnRoZXIgZGFtYWdlIGFuZCBpcnJpdGF0aW9uIHRvIHRoZSBsdW5ncy4gSW5oYWxlIGFuZCBicmVhdGggb3V0IG5vcm1hbGx5LiAKSGUgc2FpZCBTaW5nYXBvcmUgd2FzIG11Y2ggbW9yZSBkZXBlbmRlbnQgb24gbXVsdGluYXRpb25hbCBjb21wYW5pZXMgaW4gMTk5OC4gYmVjYXVzZSB3ZSBoYXZlIG91ciBvd24gU01FcyBwcm92aWRpbmcgZ3Jvd3RoIGFuZCBkcml2ZXJzIHRvIHRoZSBlY29ub215LCB0aGlzIGdpdmVzIHVzIGEgY2VydGFpbiBkZWdyZWUgb2YgYnVmZmVyIGJlY2F1c2UgdGhlc2UgZ3V5cyBhcmUgYWN0dWFsbHkgcXVpdGUgZGl2ZXJzaWZpZWQsIGhlIGFkZGVkLgpUaGUgcXVlc3Rpb24gaXMgdGhlbiAiV2hlcmUgZG9lcyB0aGUgbGluZSB5PW14IGludGVyc2VjdCB0aGlzIGNpcmNsZT8iIFlvdSBjYW4gc2VlIHRoZSBzaXR1YXRpb24gaGVyZS4uIApQcm9iYWJseSB0aGUgdG91Z2hlc3QgdmFyaWV0eSBhbmQgdGhlIGVhc2llc3QgdG8gZ3JvdyBpcyAnQXJwLicgVGhhdCdzIHRoZSBvbmUgSSB1c2UgdG8gY3JlYXRlIHNob3J0IHJvc2VtYXJ5ICJoZWRnZXMiIGFsb25nIGRyeWlzaCBlZGdlcyBvZiB0aGUgZ2FyZGVuLiBJJ3ZlIGFsc28gZW5qb3llZCBjcmVlcGluZyAodHJhaWxpbmcpIHJvc2VtYXJ5IGluIGNsYXkgcG90cyBvbiB0aGUgcGF0aW8uIEZvciB0aGUgd2ludGVyLCBJIHNldHRsZSB0aGUgcGxhbnRzIG9uIGEgYmVuY2ggYWdhaW5zdCB0aGUgcGF0aW8ncyBzb3V0aCBmYWNpbmcgaG91c2Ugd2FsbCwgd2hlcmUgdGhleSBhcmUgcHJvdGVjdGVkIGZyb20gaGVhdnkgd2ludGVyIHJhaW5zLgpJdCB3YXMgcm91Z2guIApJIGRvbid0IGtub3cgaWYgSSBjYW4gdHJ1c3QgaGVyIGV2ZXIgYWdhaW4uIEkgZG9uJ3Qga25vdyBpZiBJIGV2ZW4gd2FudCBoZXIgYXQgdGhlIGhvdXNlIHdoZW4gSSBnZXQgaG9tZSBmcm9tIG15IHRyaXAuIApPSywgc28gSSBkaWQgYSBxdWljayBjb21wYXJpc29uIGJldHdlZW4gdGhlIHNjZW5lIHdoZXJlIFRvbSBpcyBmaXJlZCB0aGF0IHNob3Qgb2YgdGhlIG1hY2hpbmVyeSBjb3ZlcmVkIGluIHBsYXN0aWMgZnJvbSB0aGlzIHdlZWtzIGVwaXNvZGUgaXQgaXMgMTAwJSB3aXRob3V0IGEgZG91YnQgdGhlIHNob3Agd2hlcmUgVG9tIG9uY2Ugd29ya2VkLgpJZiBJIGNvdWxkIGdpdmUgeW91IGFueSBhZHZpY2UgYWZ0ZXIgc2VlaW5nIGhlciBzdHJ1Z2dsZSwgaXQgd291bGQgYmUgdG8gY29udGludWUgdG8gc3RyZW5ndGhlbiB5b3VyIGNvcmUgbXVzY2xlcyBhbmQgdGhlIG11c2NsZXMgYXJvdW5kIHlvdXIgbHVuZ3Mgd2l0aCB5b2dhIGFuZC9vciBvdGhlciBraW5kIG9mIHN0cmVuZ3RoIGFuZCBzdHJldGNoIHRyYWluaW5nLiAKU2F3IHRoYXQgeW91IHBsYXkgbGl2ZSAxLzMgYW5kIDIvNSwgdGhlcmUgbm8gcG9pbnQgaW4gd2FzdGluZyA0MDAgaG91cnMgZ3JpbmRpbmcgb3V0ICQxMDAwIGF0IDEwTkwgd2hlbiB5b3UgY2xlYXJseSBoYXZlIHRoZSBmaW5hbmNpYWwgcmVzb3VyY2VzIHRvIGp1c3QgZGVwb3NpdCBtb25leSAodW5sZXNzIHlvdSBrZWVwIGdldHRpbmcgY3J1c2hlZCBhbmQgbG9zaW5nIG1vbmV5IGF0IDI1TkwpLgpIZSBoaWRlcyBiZWhpbmQgYSB2ZW5lZXIgb2YgZGV0YWNoZWQgaW1wYXJ0aWFsaXR5IGJ1dCBpdCBhbGwganVzdCBwc2V1ZG8gaW50ZWxsZWN0dWFsIGJ1bGxzaGl0IHRoYXQgZW5jaGFudHMgaWRpb3RzIGJ1dCBpcyBpbW1lZGlhdGVseSBsYXVnaGFibGUgdG8gcmVhc29uYWJsZSBwZW9wbGUuIEhlIHN1cnJvdW5kcyBoaW1zZWxmIHdpdGggYXdmdWwgcGVvcGxlIGFuZCBhd2Z1bCBpZGVhcywgYnV0IGhlIGxhY2tzIHRoZSBmdW5kYW1lbnRhbCBhZHVsdCBpbnRlZ3JpdHkgdG8gZW5kb3JzZSBpdCBvdXRyaWdodC4gClRoaW5rIHdlIHBsYXllZCBhcyB3ZWxsIGFzIHdlIGNvdWxkIGhhdmUsIHNocnVnZ2VkIFdhbG51dCBHcm92ZSBjb2FjaCBEYXJyZW4gUm93ZWxsLCB3aG9zZSB0ZWFtIGxvc3QgaW4gdGhlIGNoYW1waW9uc2hpcCBnYW1lIGZvciBhIHNlY29uZCBzdHJhaWdodCB5ZWFyLCBmb2xsb3dpbmcgbGFzdCB5ZWFyIDY3IDYxIGRlZmVhdCB0byB0aGUgS2Vsb3duYSBPd2xzLiBoYWQgdGhlbSBpbiBmb3VsIHRyb3VibGUsIHdlIGhhZCBhIGxlYWQgaW4gdGhlIGZpcnN0IGhhbGYuIEkgdGhpbmsgaXQgaHVydCB1cyB3aGVuIFJvIGZvdWxlZCBvdXQgYW5kIHdlIHdlcmUgdW5hYmxlIHRvIHN0b3AgRmFpdGguIEZhaXRoIHJlYWxseSBzdGVwcGVkIHVwIGluIHRoZSBzZWNvbmQgaGFsZi4KTGEgcHJlbWlyZSBmb2lzIG8gaiBldSBjZSBsaXZyZSBlbnRyZSBsZXMgbWFpbnMsIGlsIG4gYSBwYXMgZXUgY291cCBkZSBmb3VkcmUuIE1haXMgY29tbWUgaiBvYnNlcnZlciBldCBkY29ydGlxdWVyIGNlIHF1aSBzZSBmYWl0IGRhbnMgbGUgZG9tYWluZSBkZSBsIGogYWkgYWNxdWlzIHVuIGV4ZW1wbGFpcmUgKGVuIHBsdXMsIGEgbSBkb25uIGwgZGUgZmlsZXIgcXVlbHF1ZXMgc291cyAgbW9uIGxpYnJhaXJlKS4uIApBREhEIGlzbiBiZWluZyBoeXBlciwgcmFuZG9tIG9yIGZvcmdldGZ1bC4gCkFuZCB0aGUgc2FkIHRoaW5nIGlzLCBzaGUgcHJvYmFibHkgcmF0aGVyICJ5b3UgYml0Y2giIGZyb20gYXNzaG9sZSBqb2NrcyBhZnRlciBlcGlzb2RlcyBsaWtlIHRoaXMsIHRoYW4gImltIGdvbm5hIGZ1Y2sgeW91ciBhc3MiIGZyb20gdGhlIG5lY2tiZWFyZHMuLiAKU2hlIHNldCB1cCBhIHRhYmxlIGluIHRoZSBwb3NoIHBsYXphIGhvdGVsIGFuZCB0b29rIGFpbSBhdCB0aGUgYmlnIGFwcGxlJ3MgcmVhZHkgc3VwcGx5IG9mIHBva2VyIGRydW5rIFJ1c3NpYW4gYmlsbGlvbmFpcmVzIGFuZCBoZWRnZSBmdW5kIG1hbmFnZXJzLiAKSGlzIGZhc2NpbmF0aW9uIHdpdGggUnVzc2lhLiBUaGVuIGhlIHZvdGVzIGFnYWluc3QgdGhlIE1hZ25pdHNreSBBY3QsIGFuZCBldmVyeSBzdWJzZXF1ZW50IFJ1c3NpYW4gc2FuY3Rpb24uIEFuZCBubywgaGUgZGlkbiB2b3RlIGFnYWluc3QgdGhlIFJ1c3NpYW4gc2FuY3Rpb25zIGJlY2F1c2UgdGhleSB3ZXJlIHRpZWQgd2l0aCBJcmFuLiBBIGZldyB3ZWVrcyBiZWZvcmUgdGhhdCB2b3RlLCBoZSB2b3RlZCBOT1QgdG8gc2VwYXJhdGUgdGhvc2Ugc2FuY3Rpb25zLiBUaGVuIHRoZSBSdXNzaWFucyB0cmllZCB0byBoZWxwIGJvb3N0IGhpcyBjYW1wYWlnbiwgeWV0IGhlIGtlcHQgcXVpZXQuIEhlIGRpZG4gYWxlcnQgdGhlIG1lZGlhLCBkaWRuIHRlbGwgaGlzIHN1cHBvcnRlcnMsIGFuZCBkaWRuIGdvIHB1YmxpYy4gV2h5PwpBdCB0aGUgc2FtZSB0aW1lLCBKZWxsaWNvIHdhcyBpbiBhbiB1bmVudmlhYmxlIHNpdHVhdGlvbiB0b28uIEhlIGhhZCB0byBmaWxsIGEgc2VhdCBvbiB0aGUgbW9zdCBhZHZhbmNlZCBzaGlwIGluIHRoZSBmbGVldCwgb24gdmVyeSBzaG9ydCBub3RpY2UsIGFuZCBoZSBoYWQgcmVhc29uIHRvIGJlbGlldmUgd2FyIHdhcyBnb2luZyB0byBicmVhayBvdXQgaW4gaGlzIHNlY3Rvci4gCldlaXJkbHkgZW5vdWdoLCBJIGdvdHRlbiBzbyBtdWNoIGNyYXAgZnJvbSBvdGhlciB3b21lbiB3aGVuIEkgaGF2ZSBhcHByZWNpYXRlZCBteSBodXNiYW5kcyBlZmZvcnRzLiBNYW55IG9mIHRoZW0gdGhpbmsgb2YgbWUgYXMgc29tZSBzb3J0IG9mIHVuYWJsZSBhbmQgd2VhayBpZGlvdCwgd2hvIG15IHNhZCBodXNiYW5kIG5lZWRzIHRvIHNhdmUgZXZlcnkgZGF5LCBldmVuIHRob3VnaCB0aGV5IGhhdmUgbm8gaWRlYSBob3cgbXVjaCBJIGRvIGFuZCBob3cgbXVjaCBJIGdvbmUgdGhyb3VnaCB0aGVzZSBwYXN0IGZldyB5ZWFycyB3aXRoIGNocm9uaWMgcGFpbiBpbiBib3RoIHByZWduYW5jaWVzIGFuZCBhbGwgdGhlIGhlYWx0aCBlbWVyZ2VuY2llcy4gCk9oIHllcywgc29tZXRoaW5nIHdhcyB2ZXJ5IHdyb25nLiBJIGhhZCBqdXN0IHNoYXQgbXlzZWxmLiAKRWR3YXJkIHRoZSB2YW1waXJlIGRvZXMgZXZlbnR1YWxseSBoYXZlIHNleCB3aXRoIEJlbGxhIHRoZSBodW1hbiBhbmQgaGUgbGVhdmVzIGhlciBicnVpc2VkIGFuZCB0aGUgcGlsbG93cyBvbiB0aGUgYmVkIHRvcm4gdG8gc2hyZWRzLiAKQmVmb3JlIHNoZSBpcyBmdWxseSBkb3duIHRoZSBhaXNsZSwgdGhlIGJyaWRlc21haWRzIGFuZCBncm9vbXNtZW4gc3RhcnQgdG8gd2FsayBkb3duIHRoZSBhaXNsZSBhcyBjb3VwbGVzLiBUaGUgZHJlc3NlcyBvZiB0aGUgYnJpZGVzbWFpZHMgYXJlIHRoZSBzYW1lIGdlbnRsZSBwYXN0ZWwgY29sb3JzIGFzIHRoZSBpbnZpdGF0aW9uLCBleGNlcHQgZm9yIG9uZSB3aG8gbXVzdCBoYXZlIGJlZW4gdGhlIE1haWQgb2YgSG9ub3IsIHRoZSBtZW4gaW4gdHV4IHdpdGggdGllcyB0aGF0IG1hdGNoIHRoZSBicmlkZXNtYWlkIHRoZXkgYXJlIHdhbGtpbmcgd2l0aC4gCk5PVEU6IERvIG5vdCBjbGljayBhd2F5IGZyb20gdGhlIHNjcmVlbiBkdXJpbmcgYSBoYW5kLCBvciBpdCB3aWxsIG1lc3MgdXAgdGhlIGNoZWF0LiAKSSBrbmV3IGdpcmxzIHdobyB3b3JrZWQgYXQgU29uaWMsIGFuZCB0aXBzIHNlZW1lZCB0byBjb21lIGJldHRlciBmb3IgdGhlIGdpcmxzIGluIHJvbGxlciBza2F0ZXMsIGFuZCBvbmUgb2YgdGhlIGdpcmxzIHNhaWQgd2hlbiBzaGUgd29yZSBrbmVlIGhpZ2ggc29ja3MgYW5kIHNob3J0cywgc2hlIGdvdCBldmVuIG1vcmUgdGlwcy4gClNQTCBpcyB3aG9sbHkgb3duZWQgYnkgdGhlIFNjb29wIEZvdW5kYXRpb24gZm9yIFB1YmxpYyBJbnRlcmVzdCBKb3VybmFsaXNtIGEgTm90IEZvciBQcm9maXQgY2hhcml0YWJsZSB0cnVzdCBlc3RhYmxpc2hlZCBpbiAyMDE1LiAKVGhlIHJlY2VpcHRzIG9mIGV4cGVuc2VzIHRoYXQgaGUgZGlkIHByb3ZpZGUgYnVsayB3ZXJlIG5vdCBzZWdyZWdhdGVkIGZyb20gdGhlIGV4cGVuc2VzIGhlIGluY3VycmVkIGZvciBoaXMgZW1wbG95bWVudCBqb2Igd2l0aCB0aGUgbXVuaWNpcGFsaXR5LCBmb3Igd2hpY2ggaGUgd2FzIGZ1bGx5IHJlaW1idXJzZWQuIFRoZSBqdWRnZSBub3RlZCB0aGUgdGF4cGF5ZXIgYm9va3MgYW5kIHJlY29yZHMgaW5hZGVxdWF0ZSB0byBhbGxvdyBoaXMgYnVzaW5lc3MgZXhwZW5zZXMgdG8gYmUgZGV0ZXJtaW5lZCBpbiByZXNwZWN0IG9mIGhpcyAyMDA3IHRheGF0aW9uIHllYXIuIENyb3NzIGV4YW1pbmF0aW9uLCB0aGUgQ1JBIGFza2VkIHRoZSB0YXhwYXllciBudW1lcm91cyBxdWVzdGlvbnMgY29uY2VybmluZyB2YXJpb3VzIGV4cGVuc2VzIGhlIGNsYWltZWQuIApIZSBnb3QgdGhlIGRlZWQgdG8gdGhlIFJlZCBCYXJuIGZvciAxMCBidWNrcy4gCkFzIGEga2lkLCBzaGUganVzdCB0aGlua3MgaGUgZGlmZmVyZW50IGFuZCBpcyBqdXN0IGdsYWQgdG8gaGF2ZSBhIGZyaWVuZC4gClBhcmtzIGFuZCBSZWMgaXMgY29uc2lzdGVudGx5IGdvb2QvZnVubnkgYW5kIGRvZXNuIHRhbmsgd2hlbiBvbmUgY2hhcmFjdGVyIGxlYXZlcyB0aGUgc2hvdy4gQWxsIG9mIHRoZSBjaGFyYWN0ZXJzIGluIFAgYXJlIGludGVyZXN0aW5nLCBoaWxhcmlvdXMsIGFuZCBjYW4gc3RhbmQgdG9lIHRvIHRvZSB3aXRoIHRoZSBvdGhlciBhY3RvcnMuIFRoZSBzYW1lIGNhbiBiZSBzYWlkIGFib3V0IGV2ZXJ5IG1lbWJlciBvZiBUaGUgT2ZmaWNlIGNhc3QuCk9uZSBvZiB0aGUgb2ZmaWNlcnMgb24gcGF0cm9sIGR1dHkgd2FzIFNlcmdlYW50IEhhcnZleSBQaGlsbGlwcywgYSB0YWxsLCBkYXJrIGhhaXJlZCwgcnVnZ2VkIGxvb2tpbmcgY29wLCBmaWZ0ZWVuIHllYXJzIG9uIHRoZSBmb3JjZS4gCkkgaGF2ZSBuZXZlciBiZWVuIGF0dHJhY3RlZCB0byB0aG9zZSBnYW1lcy4gCkJveXMgdGhhdCByZW1haW4gZnJpZW5kcyBmb3IgbGlmZS4gCkZhc2NpbmF0ZWRCb3ggdQpCeWUuIApGdC4sIHRocmVlIGZsb29ycywgNDAgdGFibGVzLCAyNHg3IG9wZXJhdGlvbnMsIGEgbXVsdGkgY3Vpc2luZSByZXN0YXVyYW50IHdpdGggdW5saW1pdGVkIGJ1ZmZldCwgc2VwYXJhdGUgMTAsIDAwMCBzcXVhcmUgZm9vdCB3ZWF0aGVyIGRlY2sgYW5kIEJvbGx5d29vZCBzdHlsZSBsaXZlIGFjdHMuIApBbHNvLCBpIGxvdmUgdG8gYnVkZ2V0LiBCdXQgaWYgSSBoYWQgdG8gb3BlbiBvbmUgZHJpdmUgYW5kIGxvYWQgYSBzcHJlYWRzaGVldCBqdXN0IHRvIGxvb2sgYXQgdGhlIHJ1bm5pbmcgdG90YWxzLCB5b3UgY2FuIGJldCBJIHdvdWxkIG5vdCBiZSBib3RoZXJpbmcgYnVkZ2V0aW5nIGF0IGFsbC4gTXkgaHVzYmFuZCBrZWVwcyBhIHJ1bm5pbmcgdGFsbHkgb2YgaGlzIGNvbWljIGJvb2tzIGluIGEgc3ByZWFkc2hlZXQgYW5kIGl0IGlzIGEgcGFpbiB0byBvcGVuIGl0IGFuZCBsb2FkIGl0IGFuZCBhZGp1c3QgdGhlIHZpZXcgZXZlcnkgdGltZS4gCldoYXQgY2F1Z2h0IG15IGF0dGVudGlvbiB3aXRoIHRoZSB0aGluZyB3YXMgdGhhdCB0aGVyZSB3YXMgZm9vZCBhbmQgZHJpbmsgZW5vdWdoIGluIGl0IGZvciBhIHBlcnNvbiB0byBsaXZlIGEgbW9udGggbmVlZCBiZSwgaW4gc2FmZXR5IGFuZCBjb21mb3J0IikuIApUbyBtZSwgdGhlIG1lc3NhZ2UgZmVsdCBhcyB0aG91Z2ggbXkgbmVpZ2hib3VyIGhhZCBwbGFudGVkIGEgdHJlZSBpbiBteSB5YXJkIGFuZCB0aGVuIGtub2NrZWQgb24gbXkgZG9vciBhc2tpbmcgd2h5IEkgd2FzbiB3YXRlcmluZyBpdC4gCkl0J3MgY29tbW9uIHNlbnNlLiAKT25lIG9mIHRoZSBvbmx5IHRpbWVzIEkgZXZlciBnb3QgdXBzZXQgd2l0aCBoZXIgd2FzIHdoZW4gc2hlIHNhaWQgdGhvc2UgYWZmZWN0ZWQgbXkgdGhlIHJlY2Vzc2lvbiBpbiAyMDA3LzIwMDggc2hvdWxkJ3ZlIGJlZW4gYmV0dGVyIHdpdGggdGhlaXIgbW9uZXkgdG8gYmVnaW4gd2l0aC4gSXQganVzdCBkaWRuJ3QgbWFrZSBzZW5zZSB0byBoZXIgdGhhdCBwZW9wbGUgZG9uJ3QgYWx3YXlzIGhhdmUgZW5vdWdoIG1vbmV5IHRvICJqdXN0IGZpeCB0aGluZ3MiLCBhcyBzaGUgcHV0IGl0Li4gCkFkanVzdGVkIGZvciB0aGUgY292YXJpYXRlcyBtZW50aW9uZWQgZWFybGllciwgZWFjaCBob3VyIG9mIGF2ZXJhZ2UgZGFpbHkgdGVsZXZpc2lvbiB2aWV3aW5nIGJlZm9yZSBhZ2UgMyB5ZWFycyB3YXMgYXNzb2NpYXRlZCB3aXRoIGRlbGV0ZXJpb3VzIGVmZmVjdHMgb24gdGhlIFBlYWJvZHkgSW5kaXZpZHVhbCBBY2hpZXZlbWVudCBUZXN0IFJlYWRpbmcgUmVjb2duaXRpb24gU2NhbGUgb2YgMC4zMSBwb2ludHMsIG9uIHRoZSBQZWFib2R5IEluZGl2aWR1YWwgQWNoaWV2ZW1lbnQgVGVzdCBSZWFkaW5nIENvbXByZWhlbnNpb24gU2NhbGUgb2YgMC41OCBwb2ludHMsIGFuZCBvbiB0aGUgTWVtb3J5IGZvciBEaWdpdCBTcGFuIGFzc2Vzc21lbnQgZnJvbSB0aGUgV2VjaHNsZXIgSW50ZWxsaWdlbmNlIFNjYWxlcyBmb3IgQ2hpbGRyZW4gb2YgIDAuMTAgcG9pbnRzLgpPbiBwZXV0IGxlIGNoaWZmcmVyIGF1IGNvdXJzIGRlIGNlcyAzMyBkZXJuaXJlcyBhbm5lcy4gCjIuKSBSZXF1ZXN0ZWQgYnkgdS9KZXN1c0ssIEkgY2hlY2tlZCB0aGUgZmF2b3JpdGUgc2hvd3Mgb2YgMjAxOCBmb3IgYWxsIHRoZSBkaWZmZXJlbnQgYWdlIHJhbmdlcy4gQXMgdGhpcyB3b3VsZCBoYXZlIGJlZW4gdG9vIG11Y2ggdG8gd3JpdGUgaW4gdGhpcyBwb3N0LCBJIHVwbG9hZGVkIGFuIGltYWdlLCB3aGljaCBzaG93cyB0aGUgVG9wIDEwIGZvciB0aGUgZGlmZmVyZW50IHJhbmdlcy4gSm9KbyBhbmQgVmlvbGV0IEV2ZXJnYXJkZW4gc2VlbSB0byBiZSBhIGJpdCBsZXNzIGZhdm9yZWQgYnkgdGhlIG9sZGVyIHdlZWJzLCB3aGljaCBJIHdvdWxkbiBoYXZlIGd1ZXNzZWQuIApCdXQgdGhpbmsgb2YgSmVzdXMuIApEb2N0b3JQYWluTUQgdQpHcm9nYW4gam9pbmVkIHRoZSBMb25kb24gYmFzZWQgZmluYW5jaWFsIGluc3RpdHV0aW9uIGluIDIwMDggYXMgYSBmaW5hbmNpYWwgYW5hbHlzdCBhbmQgZW50ZXJwcmlzZSByaXNrIG1hbmFnZXIgYW5kIGluIDIwMTQgYmVjYW1lIHRoZSBvcmdhbml6YXRpb24gdmljZSBwcmVzaWRlbnQgb2YgZmluYW5jZS4KRGVyIG5ldWUsIHRyZW5kaWdlIERlc2lnbmVyIE1hcmtlbiBTaXR6c2FjayBzdGFtbXQgYXVzIGRldXRzY2hlciBGZXJ0aWd1bmcgdW5kIGlzdCBrdXNjaGVsd2VpY2guIApCdXQgSSBkb24ga25vdyBvZiBhbnkgdGhhdCBhY2NlcHQgcmVjeWNsaW5nLiAobW9zdCB3YXRlciBjb250YWluZXJzIGFyZSBub3QgcmV0dXJuYWJsZTogbWV0YWwsIGdsYXNzLCBvciBwbGFzdGljKUxlZ2FsbHkgeW91IHJlYWxseSBvbmx5IGhhdmUgdGhyZWUgb3B0aW9uczogdGhyb3cgdGhlbSBvdXQsIGNvbnZpbmNlIHlvdXIgYXBhcnRtZW50IGNvbXBsZXggdG8gc3RhcnQgcmVjeWNsaW5nLCBvciBnbyB0byBvbmUgb2YgdGhlIGRyb3Agb2ZmIGxvY2F0aW9ucy5Zb3VyIG90aGVyIG9wdGlvbiwgd2hpY2ggaXMgbGVzcyBhY2NlcHRhYmxlIChhbmQgbWlnaHQgZ2V0IHlvdSBpbnRvIGxlZ2FsIHRyb3VibGUsIEkgbm90IGEgbGF3eWVyLiAKSSBoYXZlIDEwIG1lZGljYXRpb24gY2FyZHMgSSBuZWVkZWQgdG8gaGFuZCBpbiBhIHdoaWxlIGFnbywgdG9kYXlzIHRoZSBsYXN0IGRheSB0byBkbyB0aGVtLiAKU28gdGhlcmUgaGUgaXMsIHdpdGggbm8gbW9yZSBtb25leSB0byBwdXQgb24gdGhlIHRhYmxlLiBXaGF0IGRvZXMgaGUgZG8/IEhlIGJldHMgc29tZXRoaW5nIGVsc2Ugb2YgdmFsdWUuLiAKR2l2aW5nIHBhc3NlbmdlcnMgYSBmdWxsIG5pZ2h0IHNsZWVwLiBEZWx0YSwgVW5pdGVkIGFuZCBVUyBBaXJ3YXlzIGFyZSBpbnN0YWxsaW5nIHNlYXRzIGluIHByZW1pdW0gaW50ZXJuYXRpb25hbCBjYWJpbnMgdGhhdCByZWNsaW5lIGludG8gZmxhdCBiZWRzLiBBbWVyaWNhbiBpc24gbWFraW5nIHRoYXQgaW52ZXN0bWVudCBidXQgaXMgYWRkaW5nIHR1cm5kb3duIHNlcnZpY2Ugb24gc29tZSByb3V0ZXM7IGF0IGJlZHRpbWUsIHBhc3NlbmdlcnMgYXJlIGdpdmVuIHBhamFtYXMgYW5kIHNsaXBwZXJzIHdoaWxlIGZsaWdodCBhdHRlbmRhbnRzIGxheSBkb3duIGEgcXVpbHRlZCBzZWF0IGNvdmVyLCBkdXZldCBhbmQgcGlsbG93Li4gCkhhdmluZyBiZWVuIGluIGN1c3RvZHkgc2luY2UgSnVuZSA2LCBOaWNob2xzJyB0ZXJtIHdpbGwgZXhwaXJlIG9uIFNlcHRlbWJlciA1LiBQb2xpY2Ugc2FpZCBOaWNob2xzIGVudGVyZWQgdGhlIHB1YiBhcm91bmQgbHVuY2ggdGltZSBhbmQgYmVnYW4gcGxheWluZyB0aGUgIlF1ZWVuIG9mIHRoZSBOaWxlIiBtYWNoaW5lLCBrbm93biBhcyBOby4xOC4gCkhvd2V2ZXIgYW5vdGhlciBnaXJsIGFuZCBJIGRpZCB0aGlzIGRhaWx5IGZvciBvdmVyIDIgeWVhcnMgYW5kIGhhdmUgbmV2ZXIgYmVlbiBjYXVnaHQuIApJbiB0aGUgaW50ZXJlc3Qgb2YgY29tbW9uIG9iamVjdGl2ZXMgYW5kIGludGVybmF0aW9uYWwgc3RhYmlsaXR5LCB0aGUgVW5pdGVkIFN0YXRlcyBhbmQgdGhlIEtpbmdkb20gaGF2ZSByZXBlYXRlZGx5IG92ZXJsb29rZWQgbWFqb3IgZGlzYWdyZWVtZW50cy4gCkkgbm90IGFyZ3VpbmcgdGhhdCB0aGUgcmVhZGluZyBwdWJsaWMgc3VmZmVycyBmcm9tIGNvbGxlY3RpdmUgUFRTRCB3aXRoIGl0cyBjb25zdGVsbGF0aW9uIG9mIHN5bXB0b21zIGxpa2UgbmlnaHRtYXJlcywgZmxhc2hiYWNrcywgYW5kIGJlaW5nIGVhc2lseSBzdGFydGxlZCBidXQgSSBmZWFyIHRoYXQgb3VyIG51bWJuZXNzLCBuZXZlcnRoZWxlc3MsIG1heSBjbG9zZSB1cyBvZmYgZnJvbSB0YWtpbmcgYWN0aW9uIGFzIGEgY291bnRyeSB0byByZWluIGluIHRoZSBkZWF0aHMgYW5kIGRlc3RydWN0aW9uIGNhdXNlZCBieSBkaXNlYXNlLi4gCk92ZXJ2aWV3IGZvciBhcmNzaW5lCk5ldmVyIGFnYWluLi4gCiJJbiB0aGUgc2l0dWF0aW9uIHRoYXQgd2Ugd2VyZSBpbiwgaXQgd2FzIGltcG9ydGFudCB0byBjb25zb2xpZGF0ZSBhIGJpdCBhbmQgbWFrZSBzdXJlIHdlIGdvdCBiYWNrIG9uIHRyYWNrIGFmdGVyIGxvc2luZyBhIGZldyB3aWNrZXRzLCIgS2FsbGlzIHNhaWQuICJXZSBiYXNpY2FsbHkgdHJpZWQgdG8gcGFjZSB0aGUgaW5uaW5ncyBhbmQga2VlcCB0aGUgc2NvcmVib2FyZCB0aWNraW5nLiBJdCB3YXMgcXVpdGUgZGlmZmljdWx0IHRvIHNjb3JlIGJlY2F1c2UgdGhlIHdpY2tldCBpcyBxdWl0ZSBzbG93LiBUaGV5IHB1dCB1cCBkZWZlbnNpdmUgZmllbGRzIGFuZCBib3dsZWQgcXVpdGUgZGVmZW5zaXZlbHkuIEFzIHdlIGdvdCBjbG9zZXIgdG8gdGhlaXIgdG90YWwgd2UgY291bGQgYWZmb3JkIHRvIGJlIG1vcmUgcG9zaXRpdmUuIEkgdGhvdWdodCB0aGUgZ3V5cyByZWFsbHkgcGFjZWQgdGhlIGlubmluZ3Mgd2VsbC4iClZvciBhbGxlbSBiZWkgZGVuIEJvZHltZWx0cyBnZWh0IGVzIGphIGRhcnVtLCBkYXNzIHNpZSBmZXN0IHNpbmQgdW5kIG5pY2h0IHNvZm9ydCBpbiBkZXIgSGFuZCBzY2htZWx6ZW4uIApJdCBtYWtlcyBhYnNvbHV0ZSBzZW5zZS4gTXkgODEgeWVhciBvbGQgZ3JhbmRtb3RoZXIganVzdCBzdXJyZW5kZXJlZCBoZXIgbGljZW5zZSB0aGlzIHBhc3Qgd2VlayBhcyBhIHJlc3VsdCBvZiBub3QgYmVpbmcgYWJsZSB0byBzZWUsIHdoaWNoIGNhdXNlZCBhbiBhY2NpZGVudC4gU2hlIGFkbWl0dGVkIGZhdWx0LCBhbmQgYWNjZXB0ZWQgaGVyIGxlZ2FsIHBlbmFsdGllcyAocnVubmluZyBhIHJlZCBhbmQgY2F1c2luZyBhbiBhY2NpZGVudCkgYW5kIGNoYW5nZWQgb3V0IGhlciBsaWNlbnNlIGZvciBhbiBJRC4gTXkgZ3JhbmRmYXRoZXIsIG9uIHRoZSBvdGhlciBoYW5kLCByZWZ1c2VzIHRvIGdpdmUgdXAgaGlzIGxpY2Vuc2UgZXZlbiB0aG91Z2ggaGUgYm90aCBsZWdhbGx5IGJsaW5kIGFuZCBkZWFmLiBCdXQsIHRoYW5rcyB0byB0aGUgZ3JlYXQgc3RhdGUgb2YgQXJpem9uYSwgaGUgbGVnYWxseSBhbGxvd2VkIHRvIGRyaXZlIGV2ZW4gdGhvdWdoIGhpcyBsYXN0IGxpY2Vuc2UgcmVuZXdhbCB3YXMgMjUgeWVhcnMgYWdvLgpBdCBlYWNoIHJhbmsgb2Ygc2tpbGwgeW91IGdldCBhbiBhYmlsaXR5IHRvIGRvIG5ldyB0aGluZ3MgKHBvd2VyIGF0dGFjaywgcHJlY2lzaW9uIGF0dGFjaywgcmVyb2xsIGEgZGllLCBjaGFybSBzb21lb25lLCBldGMuKS4gRm9yIGNoYXJhY3RlciBhZHZhbmNlbWVudCB5b3UgY2FuIGluY3JlYXNlIHlvdSBhdHRyaWJ1dGUgb3Igc2tpbGwgKG9yIGtpLCB0aGUgYWN0aW9uIHBvaW50IHZhbHVlKSB1c2luZyBBZHZhbmNlbWVudCBQb2ludHMgKG5hbWUgcGVuZGluZykgdGhhdCBhcmUgcmV3YXJkZWQgZm9yIGRlZmVhdGluZyBtYWpvciBlbmVtaWVzLCBvciBhdCB0aGUgR00gZGlzY3JldGlvbi4gClNoZSBvbmx5IG1hZGUgaXQgNiBkYXlzLiAKSSB1c2VkIHRvIGhhcHBpbHkgbGlzdGVuIHRvIHRob3NlIHN0b3JpZXMgYW5kIGFmdGVyIHNvbWUgZGF5cywgSSB3b3VsZCByZWFsaXNlIHRoYXQgd2FzIGFsbCBtYWRlIHVwLiIuIAoiVGhyZWUgZGF5cyBvZiAxMiBob3VycywganVzdCBncmluZGluZyBzbGlkZXMgYW5kIGFyZ3VtZW50cywgcmVhbGx5LCByZWFsbHkgaW50ZW5zZSwiIHNheXMgQ2hpY2hlc3Rlciwgd2hvIGlzIGEgZ2xvYmFsIHNlbmlvciBWUCBvZiBzZWFyY2ggYW5kIGNvbnRlbnQgbWFya2V0aW5nLiAKVGhpcyBhbHNvIGluY2x1ZGVzIG1hcml0YWwgcmVsYXRpb25zLiBOb25lIG9mIGl0IGlzIGVhc3kgIGFuZCBJIGZhaWwgIG9mdGVuLi4gCkEgZm91cnRoIGNhcmQgaXMgZGVhbHQgaW50byB0aGUgY29tbXVuaXR5IGNhcmRzICh0aGUgdHVybikgZm9sbG93ZWQgYnkgYSByb3VuZCBvZiBiZXR0aW5nLiAKT25jZSB5b3UgaGF2ZSBsaWtlIDIgaXRlbXMgb24gc3VwcG9ydCwgeW91IHNob3VsZCBjb25zdGFudGx5IGhhdmUgMiAzIGNvbnRyb2wgd2FyZHMgaW4geW91ciBpbnZlbnRvcnkgYW5kIGNvbnN0YW50bHkgdXNlIGl0IHRvIGRlbnkgdmlzaW9uLiAKSGUgdHJpZWQgdG8gc3dlZXAgSmFkZWphIGJ1dCB0b3AgZWRnZWQgdG8gb2ZmZXIgRGhvbmkgYSBjYXRjaC4gCkdlbnRpbmcgc2FpZCB0aGUgdGVjaG5pcXVlIG9mICJlZGdlIHNvcnRpbmciIGhlIHVzZWQsIHdoaWNoIGludm9sdmVzIGlkZW50aWZ5aW5nIHNtYWxsIGRpZmZlcmVuY2VzIGluIHRoZSBwYXR0ZXJuIG9uIHRoZSByZXZlcnNlIG9mIHBsYXlpbmcgY2FyZHMgYW5kIGV4cGxvaXRpbmcgdGhhdCBpbmZvcm1hdGlvbiB0byBpbmNyZWFzZSB0aGUgY2hhbmNlcyBvZiB3aW5uaW5nLCB3YXMgbm90IGEgbGVnaXRpbWF0ZSBzdHJhdGVneS4KSXQgd2FzIGp1c3QgYSBwbGFpbiBvbGQgbGFjayBvZiBza2lsbC4gClRoZWlyIG1lZGljYWwgYWN0aW9ucyBpbmNsdWRlOiBOdXRyaWVudCwgZGl1cmV0aWMsIGFudGkgaW5mbGFtbWF0b3J5LCBhbnRpIHNwYXNtb2RpYywgYW50aXNlcHRpYywgYW50aW94aWRhbnQgYW5kIHZhc2N1bGFyIHRvbmljLiBUaGUgYWN0aW9ucyB3ZSBhcmUgaW50ZXJlc3RlZCBpbiBoZXJlIGFyZSBwcmltYXJpbHkgYW50aSBpbmZsYW1tYXRvcnkgYW5kIGFudGlzcGFzbW9kaWMuIFJlZHVjZXMgZGVybWF0aXRpcyBhbmQgaXQgYWxzbyBoYXMgYSBudW1iZXIgb2YgYWN0aW9ucyBvbiBtaWNybyBjaXJjdWxhdGlvbiB0ZW5kaW5nIHRvd2FyZCByZXBhaXJpbmcgdGhlIGxlYWthZ2UgY2F1c2VkIGJ5IGFsbGVyZ2ljIHJlc3BvbnNlcy4uIApBIHBpYW5vIHByb2RpZ3kgc29ha2luZyB1cCB3aXNkb20gZnJvbSB0aGUgZWxkZXJzLCBDb2hlbiBpcyBhIHRyYWRpdGlvbmFsaXN0IHdpdGggdGVjaG5pcXVlIHRvIGJ1cm4uIApJIGJvdWdodCB0aGUgY2hhaXIgd2l0aG91dCB2aXNpdGluZyB0aGUgc2hvdyByb29tLi4gCk9wdGlvbiBOdW1iZXIgVGhyZWUgICBTbywgc2hvcHBpbmcgd29uJ3QgY3V0IGl0IGFuZCBudXJzaW5nIGhvbWVzIHdvbid0IGhlYWwgeW91ciBhY2hpbmcgaGVhcnQ/IE1ha2UgYSBwYXJ0eSBvZiBpdC4gCldoZW4geW91IGdldCB0aXJlZCBvZiBvZ2xpbmcgdGhlIGdpcmxzIGFyb3VuZCB0aGUgcG9vbCBhdCBUaGUgUGFsbXMsIHlvdSBtaWdodCB3YW50IHRvIHdhbmRlciBpbnRvIHRoZWlyIHBva2VyIHJvb21zLiBBIGxvdyBsaW1pdCByb29tIGRlYWxzIFRleGFzIEhvbGQgJ2VtIHdpdGggc3ByZWFkcyBvZiAkMiB0byAkNCBhbmQgJDQgdG8gJDguIEhpZ2ggc3Rha2VzIHBva2VyIHJvb20gb2ZmZXIgTm8gTGltaXQgVGV4YXMgSG9sZCAnZW0gYW5kIHByb2dyZXNzaXZlIEhpZ2ggSGFuZCBKYWNrcG90cy4KRWxsZSBhIGFnaSBkZSBmYSB0ciByZXNwZWN0dWV1c2UuIEwgdmEgdGUgcmFwcGVsZXIuIHVuIG1vaXMgZXQgZGVtaSBwbHVzIHRhcmQsIFNhcmFoIGEgcmUgdW4gcHJlbWllciBhcHBlbCBkZSBsIEMgcG91ciBtZSBkaXJlIHF1IGF2YWl0IGJpZW4gcmUgbGEgZGVtYW5kZSwgbWFpcyBxdSBuZSBwb3V2YWl0IHBhcyBsYSB0cmFpdGVyIHRvdXQgZGUgc3VpdGUgcGFyY2UgcXUgYXZhaXQgZCBkb3NzaWVycyBwcmlvcml0YWlyZXMuIApXaHkgd291bGQgQmFybnVtIG9mZmVyIHN1Y2ggYSB3b25kcm91cyBzdW0gZm9yIGEgYnVuY2ggb2YgYm9uZXM/IEJlY2F1c2UgZm9yIGh1bWFucywgdGhlIG1vbnN0cm91cyBpcyBhbHdheXMgZXZpZGVuY2Ugb2YgdGhlIGRpdmluZS4gQSBtb25zdGVyIGluIHRoZSBsYWtlIGlzIGFuIGltcG9zc2liaWxpdHkuIApUaGUgcmVhbCB2YWx1ZSBvZiB0aGUgUG9zdCBzZXJpZXMgaXMgdGhhdCB0aGUgZmFjdHMgYW5kIGZpZ3VyZXMgY29taW5nIG91dCBtaWdodCBzaGFtZSBwb2xpdGljaWFucyBpbiBXYXNoaW5ndG9uIHRvIGludmVzdGlnYXRlIGFuZCBwb3NzaWJseSBsaW1pdCBzb21lIG9mIHRoZXNlIGV4Y2Vzc2VzLiBSZWFsIHNoaWZ0IGluIEFtZXJpY2FuIHByaW9yaXRpZXMgYW5kIHNwZW5kaW5nIHdvdWxkIHJlcXVpcmUgYSBsb3QgbW9yZSB0aGFuIGZhY3RzIGFuZCBmaWd1cmVzLiAKT24gYSBwb3N0LCB0aGVyZSdzIGEgaG9vay4gCkkgZmluZCBpdCByZWFsbHkgb2RkIGJ1dCBhIGZldyB0aW1lcyB3aGVuIEkgbG9va2VkIGludG8gY29tbW9uIEFtZXJpY2FuIG1lZGljYXRpb25zLCBJIGZpbmQgdGhlc2Ugd2VpcmQgc3Vic3RpdHV0ZXMsIG9mdGVuIHdpdGggYWJ1c2UgcG90ZW50aWFsLiAKRGVhbCB3aXRoIHRoZSByZWd1bGF0b3JzLi4gClRoZSBmaWVsZCBvZiBjYXIgZ2FkZ2V0cyBtYXkgbXlzdGlmeSBhIGNoYXJhY3RlciBsaWtlIEpvaG4gQm9vaywgaWYgd2Ugc3VwcG9zZSBoZSdzIGJlZW4gbGl2aW5nIGluIGFuIEFtaXNoIGNvbW11bml0eSBhbGwgdGhpcyB0aW1lLCBidXQgdGhhdCBkb2Vzbid0IG1lYW4gaXQncyBhbnkgZWFzaWVyIGZvciB0aGUgcmVzdCBvZiB1cyB0byBuYXZpZ2F0ZS4gCkkgdGhpbmsgdGhlIGZpcnN0IHdlcmUgYSBzZXJpZXMgb2YgdHJvbGwgYm90cyB0aGF0IG5vdGlmaWVkIHRocmVhZHMgbGlua2VkIGJ5IC9yL1N1YnJlZGRpdERyYW1hICJzZXJpZXMiIGJlY2F1c2UgdGhleSBrZXB0IGdldHRpbmcgYmFubmVkLiBBdCBzb21lIHBvaW50IHRoZXJlIHdhcyAvdS9NZXRhQm90IHdoaWNoIHdhcyBtb3JlIG5ldXRyYWwgYW5kIGV4cGFuZGVkIGJleW9uZCBTUkQuIFRoYXQgc2h1dCBkb3duIEkgdGhpbmsgYmVjYXVzZSBwZW9wbGUgZGlzY292ZXJlZCB0aGUgaWRlbnRpdHkgb2YgdGhlIGNyZWF0b3IgYW5kIHN0YXJ0ZWQgY2F1c2luZyBkcmFtYS4gQWZ0ZXIgYSB3aGlsZSBpdCBzdGFydGVkIHVwIGFnYWluLCB0aGVuIGNsb3NlZCBkb3duLiBUaGVuIEkgY2FtZSBpbnRvIHRoZSBwaWN0dXJlLgoyLiBJcyB0aGUgcG9rZXIgcm9vbSBlbnZpcm9ubWVudCBhcHBlYWxpbmc/IFRoaXMgbWF5IG5vdCBiZSBpbXBvcnRhbnQgdG8gc29tZSBidXQgaXQgZG9lcyB3aGVuIHlvdSBwbGF5IGZvciBsb25nZXIgcGVyaW9kcyBvZiB0aW1lLiAKWW91IGNhbid0IGxvc2UuIFRoaXMgaXMgYSByYXJlIHNpdHVhdGlvbi4gCiJBdCB0aGUgZW5kIG9mIHRoZSBkYXkgSSBkb24gbmVlZCB0aGUgbW9uZXkgYW5kIEkgZG9uIG5lZWQgdGhlIGpvYi4iIFRoZSBMaWJlcmFsIERlbW9jcmF0cyB2b3RlIHNsaXBwZWQgZnJvbSBtb3JlIHRoYW4gNTAwLDAwMCBpbiB0aGUgMjAxMyBmZWRlcmFsIGVsZWN0aW9uIHRvIGp1c3QgdW5kZXIgMzAwLDAwMCBpbiAyMDE2LiBCdXQgdGhlIDY2IHllYXIgb2xkIGFyZ3VlcyBoZSBjYW4gZG8gbW9yZSB0byBjdXQgZ292ZXJubWVudCByZWd1bGF0aW9uIGFuZCAiZ3JlZW4gdGFwZSIgaW4gYSBzdGF0ZSBwYXJsaWFtZW50IHRoYW4gaW4gQ2FuYmVycmEgICBhIGNpdHkgaGUgZG9lc24gbGlrZS4gClRoZXNlIGNvbXBhbmllcyBoYXZlIGdyb3duIGxhcmdlciBhbmQgbW9yZSBwb3dlcmZ1bCwgdGhleSBoYXZlIHVzZWQgdGhlaXIgcmVzb3VyY2VzIGFuZCBjb250cm9sIG92ZXIgdGhlIHdheSB3ZSB1c2UgdGhlIEludGVybmV0IHRvIHNxdWFzaCBzbWFsbCBidXNpbmVzc2VzIGFuZCBpbm5vdmF0aW9uLCBhbmQgc3Vic3RpdHV0ZSB0aGVpciBvd24gZmluYW5jaWFsIGludGVyZXN0cyBmb3IgdGhlIGJyb2FkZXIgaW50ZXJlc3RzIG9mIHRoZSBBbWVyaWNhbiBwZW9wbGUsIFdhcnJlbiBhZGRlZCBpbiBoZXIgcG9zdC4gcmVzdG9yZSB0aGUgYmFsYW5jZSBvZiBwb3dlciBpbiBvdXIgZGVtb2NyYWN5LCB0byBwcm9tb3RlIGNvbXBldGl0aW9uLCBhbmQgdG8gZW5zdXJlIHRoYXQgdGhlIG5leHQgZ2VuZXJhdGlvbiBvZiB0ZWNobm9sb2d5IGlubm92YXRpb24gaXMgYXMgdmlicmFudCBhcyB0aGUgbGFzdCwgaXQncyB0aW1lIHRvIGJyZWFrIHVwIG91ciBiaWdnZXN0IHRlY2ggY29tcGFuaWVzLiBBbWF6b24gYW5kIEZhY2Vib29rIGhhdmUgbm90IHlldCByZXNwb25kZWQgdG8gYSByZXF1ZXN0IGZvciBjb21tZW50IGZyb20gRm94IE5ld3MuClNoZSBnZXRzIHB1bmNoZWQgaGFyZCBlbm91Z2ggdG8gZmxhdHRlbiBhIGJ1aWxkaW5nIGFuZCBzdXJ2aXZlcyBqdXN0IGZpbmUKVGhhbmsgeW91IGZvciBzaGFyaW5nLCB2b3RlZCB1cCwgZXRjLiw3IHllYXJzIGFnbyBmcm9tIEthaWx1YSBLb25hLCBIYXdhaWkKU28gd2hlbiBtYW5zcGxhaW5pbmcgaGFwcGVucywgaXQgY2FycmllcyB3aXRoIGl0IHRoZSBjb25ub3RhdGlvbnMgb2YgYWxsIHRoYXQgc2V4aXNtLiBJdCBleGlzdHMgaXMgYSB3b3JsZCB3aGVyZSB3b21lbiBzdGlsbCBvZnRlbiBmZWVsIGlnbm9yZWQgYW5kIHNpZGVsaW5lZCwgYW5kIGl0IGhlbHBzIHRvIGNvbnRpbnVlIHRoYXQuIApUbyBmdXJ0aGVyIGJyZWFrIGRvd24gdGhlIDMwMCBjYWxscyBmb3Igc2VydmljZSBmb3IgdGhlIHBhc3QgMjQgaG91cnMgdGhpcyBpcyBob3cgdGhlIGNhbGxzIGNhbWUgaW4gcGVyIGRpc3RyaWN0OiBDZW50cmFsICg0NiksIEVhc3QgKDc4KSwgTWlkdG93biAoNDUpLCBOb3J0aCAoMzUpLCBTb3V0aCAoMzMpLCBXZXN0ICg0NiksIGFuZCBPdGhlciAoMTkpLiBPdGhlcj10aGVzZSBhcmUgY2FsbHMgZm9yIHNlcnZpY2UgdGhhdCBlaXRoZXIgZG8gbm90IGhhdmUgYSBzZWN0b3IgbGlzdGVkIG9yIHRoZSBzZWN0b3IgaXMgbm90IGluIHRoZSBDaXR5LiAKR2FueiBiZXNvbmRlcnMgYW0gQWJlbmQgaXN0IGRhcyBlaW4gYmVyd2x0aWdlbmRlcyBFcmxlYm5pcywgd2VubiBkaWUgU29ubmUgbGFuZ3NhbSBpbSBNZWVyIHZlcnNpbmt0LCBzaWNoIEhpbW1lbCB1bmQgRXJkZSBpbiB1bnRlcnNjaGllZGxpY2hlbiBGYXJiZW4gcHJzZW50aWVyZW4gdW5kIHNpY2ggZGllIE5hY2h0IGxhbmdzYW0gYmVyIE96ZWFuIHVuZCBJbnNlbCBsZWd0Li4gCjMwIHllYXIgb2xkIG1lIHdvdWxkIHByb2JhYmx5IGhhdmUgc29tZSBtaXhlZCByZXZpZXdzIGFib3V0IDQwIHllYXIgb2xkIG1lLCBidXQgdGhhdCBtaWdodCBiZSBiZWNhdXNlIEkgc3RhcnRlZCBob2xkaW5nIG15c2VsZiB0byBzb21lIGhpZ2hlciBzdGFuZGFyZHMuIApEdXRjaCBwbGF5ZXIgSm9ycnl0IHZhbiBIb29mIHdpbGwgc3RhcnQgZmluYWwgdGFibGUgcGxheSBhcyB0aGUgY2hpcCBsZWFkZXIgd2hpbGUgU3dlZGlzaCBzdGFyIE1hcnRpbiBKYWNvYnNvbiwgd2hvIHdhcyBhIGNvbnRlbmRlciB0aHJvdWdob3V0IHRoZSB0b3VybmFtZW50LCB3aWxsIGFsc28gYmUgb25lIHBsYXllciB0aGF0IG1vc3Qgd2lsbCBoYXZlIHRoZWlyIGV5ZXMgb24uIEphY29ic29uJ3MgcGVlcnMgaGF2ZSBqb2tpbmdseSBuZWVkbGVkIGhpbSBmb3Igc2V2ZXJhbCBjbG9zZSBjYWxscyBpbiBtYWpvciBldmVudHMsIHdpbm5pbmcgdGhlIE1haW4gRXZlbnQgYW5kIGJlY29taW5nIHRoZSBXU09QIFdvcmxkIENoYW1waW9uIHdvdWxkIGNlcnRhaW5seSBwdXQgYSBzdG9wIHRvIGFsbCB0aGUgbmVlZGxpbmchCkkgb25jZSByZWFkIGFuIGFydGljbGUgYWJvdXQgaG93IG1vc3QgcGVvcGxlIGZpdCBpbnRvIG9uZSBvZiB0d28gc29jaWFsICJjdWx0dXJlcy4iIFRoZXJlIHRoZSAib2ZmZXIgY3VsdHVyZSIgb2YgcGVvcGxlIHdobyB3YWl0IGZvciBzb21ldGhpbmcgdG8gYmUgb2ZmZXJlZCBhbmQgd291bGQgbmV2ZXIgZHJlYW0gb2YgYXNraW5nIGZvciBzb21ldGhpbmcgdGhhdCB3YXNuIGFscmVhZHkgb24gb2ZmZXIsIGJlY2F1c2UgdGhleSBzZWUgdGhhdCBhcyBiZWluZyBydWRlLiBUaGVuIHRoZXJlIHRoZSAiYXNrIGN1bHR1cmUiLCBwZW9wbGUgd2hvIGZlZWwgaXQgb2theSB0byBhc2sgZm9yIGFueXRoaW5nIGJlY2F1c2UgdGhlIG90aGVyIHBhcnR5IGlzIGZyZWUgdG8gc2F5IGRlY2xpbmUgdGhlaXIgcmVxdWVzdC4gKCJXaGF0IHRoZSBoYXJtIGluIGFza2luZz8gVGhlIHdvcnN0IHRoZXkgY2FuIHNheSBpcyBubyEiKS4gClRvIGFuIGV4dGVudCwgSSB3b3VsZCBzYXkgeWVzLCBidXQgb25seSBiZWNhdXNlIGxhenkgc3ViIGd1eXMgYXJlIG1vcmUgdm9jYWwgYWJvdXQgbG9va2luZyBmb3IgYSBnaXJsIHRoYW4gbGF6eSBzdWIgZ2lybHMgYXJlIGFib3V0IGxvb2tpbmcgZm9yIGEgZ3V5LgpUaGVyZSBhcmUgbWFueSBwZW9wbGUgd2hvIGFyZSBpbnRlcmVzdGVkIGluIGZpbmRpbmcgdGhlIHJpZ2h0IHRhYmxlIGZvciB0aGVtLCBhbmQgdW5sZXNzIHlvdSBoYXZlIHNvbWUgdmVyeSBpbnRlcmVzdGluZyBzcGFjZSBuZWVkcywgY2hhbmNlcyBhcmUgZ29vZCB0aGF0IHlvdSBhcmUgZ29pbmcgdG8gYmUgYWJsZSB0byBtZWV0IHlvdXIgbmVlZHMgb25saW5lLiAKVGhlcmUgYXJlIDIgZGVja3MgdGhhdCBhcmUgZm9yIHN0YW5kYXJkIHBsYXlpbmcgYW5kIDIgZGVja3MuIApGcmVlIHBva2VyIGNhbGN1bGF0b3IgZ2l2ZXMgeW91IGluZm9ybWF0aW9uIHJlZ2FyZGluZyB0aGUgY2FyZHMgaW4gaGFuZCwgdGhlIHN0YXR1cyBvZiB0aGUgdGFibGUsIHRoZSBwbGF5aW5nIHN0eWxlcyBvZiB0aGUgb3Bwb25lbnRzLCBjb21tdW5pdHkgaGFuZHMsIGFuZCBob3cgYWdncmVzc2l2ZSB5b3VyIG9wcG9uZW50IGlzLiAKSnVzdCBsZWF2ZSB5b3VyIHdhbGxldCBpbiB5b3VyIGNhciAoaGlkZGVuLCBvciB5b3UgaGF2ZSBhIGJyb2tlbiB3aW5kb3cgYW5kIG5vIHdhbGxldCksIGFuZCBpZiBzb21lb25lIHN0b3BzIHlvdSBqdXN0IHNheSB5b3UgImZvcmdvdCIgeW91ciB3YWxsZXQgaW4geW91ciBjYXIuIApJZiB5b3UgYXJlIGdvaW5nIHRvIGVhdCBwcm9jZXNzZWQgZm9vZHMgc3VjaCBhcyBzbW9rZWQgaGFtcyBhbmQgc2F1c2FnZXMgd2hpY2ggaGF2ZSBwbGVudHkgb2Ygc2FsdCwgeW91IGNhbiByaW5zZSB0aGVzZSBpbiB3YXRlciBiZWZvcmUgY29va2luZywgb3IgYnJvaWwgdGhlbSB0byB3YXNoIG91dCB0aGUgZXhjZXNzIHNhbHQuLiAKSSByZW1lbWJlciBNaWtlIGZyb20gUGVubnkgQXJjYWRlIGFuZCBKZXBoIGZyb20gUXVlc3Rpb25hYmxlIENvbnRlbnQgYm90aCBzYXlpbmcgeW91IGVzc2VudGlhbCBhcmUgd2F0Y2hpbmcgdGhlbSBsZWFybiB0byBkcmF3IGFzIHRoZSBjb21pYyBwcm9ncmVzc2VzLgpUaGF0IHNhaWQsIGxhc3QgeWVhciB0aGUgZXZlbnQgaGFkIGl0cyBtb3N0IGVudHJpZXMgZXZlciwgc29tZSA4MiwzNjAsIGEgbWFzc2l2ZSBudW1iZXIgY29tcGFyZWQgd2l0aCB0aGUgZXZlbnQgaHVtYmxlIGJlZ2lubmluZ3MgYXQgYSBzbWFsbCBzaW5nbGUgdGFibGUgaW4gMTk3MCBhdCBCZW5ueSBCaW5pb24gSG9yc2VzaG9lIENhc2lubywgd2hlcmUgdGhlIHBsYXllcnMgdWx0aW1hdGVseSB2b3RlZCBvbiB0aGUgd2lubmVyIGluIHRoZSBlbmQuLiAKSWYgdGhlcmUgaXMgYW5vdGhlciBpbmRleCB5b3UgbGlrZSB0aGUgY2FzdCBsaXN0ZWQgb24sIGxldCBtZSBrbm93IVRvZGF5IHdlIGFyZSBqb2luZWQgYnkgYSBudW1iZXIgb2YgaGlzdG9yaWFucyBhdCB0aGUgcmVjZW50IEFtZXJpY2FuIEhpc3RvcmljYWwgU29jaWV0eSBDb25mZXJlbmNlIGluIENoaWNhZ28uIFp1ZWxvdyBpcyBjaGFpciBvZiB0aGUgRGVwYXJ0bWVudCBvZiBIaXN0b3J5IGFuZCBQaGlsb3NvcGh5IGFuZCBhbiBhc3NvY2lhdGUgcHJvZmVzc29yIG9mIEV1cm9wZWFuIGhpc3RvcnkuIApIZSBzYXQgYXQgdGhlIGJhciwgaGF2aW5nIGhpcyBvd24gaW1hZ2luZWQgY3Jpc2lzIHdoaWxlIFJlYmVjY2Egd2FzIGluIHRoZSBtaWRkbGUgb2YgYSByZWFsIG9uZS4gU2FtIGZyb20gVHJ1ZSBCbG9vZCB0cmllZCB0byBjb21mb3J0IGhlciBuZXJ2ZXMgd2l0aCBhIGtpc3MsIGFuZCBzaGUgcmVhbGl6ZWQgSmFjayBoYWQgYmVlbiByaWdodCBhYm91dCBTYW0gZnJvbSBUcnVlIEJsb29kJ3MgcmVhbCBpbnRlbnRpb25zLlNoZSBhbmQgSmFjayBkZWZ0bHkgYXZvaWRlZCBub3RpY2luZyBlYWNoIG90aGVyIGFzIFJlYmVjY2Egd2VudCB0byB0aGUgYmFjayBvZiB0aGUgdGhlYXRlciB0byBjYWxsIGhvbWUgYW5kIGxlYXZlIGEgbWVzc2FnZSBmb3IgaGVyIGh1c2JhbmQsIHNheWluZyBzaGUgbG92ZWQgaGltIGFuZCB3aXNoZWQgaGUgd2FzIHRoZXJlLk1lYW53aGlsZSwgSmFjayB3YW5kZXJlZCBiYWNrc3RhZ2UsIHdoZXJlIFNhbSBmcm9tIFRydWUgQmxvb2QgbGV0IGl0IHNsaXAgdGhhdCBoZSAiY3Jvc3NlZCBhIGxpbmUuIiBTbyBKYWNrIHB1bmNoZWQgaGltIGluIHRoZSBub3NlLCBhbmQgdGhhdCdzIHdoZW4gUmViZWNjYSByZXR1cm5lZCwgZnVyaW91cy4gU2hlIHF1aXQgdGhlIHRvdXIgdGhlbiBhbmQgdGhlcmUgYW5kIGRyb3ZlIEphY2sgaG9tZS5CYWNrIGF0IGhvbWUsIGJlZm9yZSBSZWJlY2NhIGNvdWxkIGV2ZW4gY2hhbmdlIG91dCBvZiBoZXIgc3BhcmtseSBkcmVzcywgdGhleSBoYWQgaXQgb3V0LiAKQWxzbywgd2UgZGVmaW5pdGVseSBkb24gbmVlZCB0aGF0IGRyb3Agc2lkZSBjcmliIHRoYXQgbXkgcGFydG5lciBzbGVwdCBpbiBhcyBhIGJhYnkhIG9yIHRoZSBleHBpcmVkIHNldmVyYWwgeWVhcnMgYWdvIGJvdHRsZSBvZiBpYnVwcm9mZW4ganVzdCBoYW5naW5nIG91dCBpbiB0aGUgYmF0aHJvb20uCiJCeSBkb2luZyB0aGlzIHNvcnQgb2YgdGhpbmcgd2UgY3JlYXRlIGEgY2hhbGxlbmdpbmcgYnVzaW5lc3MgZW52aXJvbm1lbnQgZm9yIGNsdWJzLCIgaGUgc2FpZC4gCkMnZXN0IGNlIHBobm9tbmUgcXVpIGV4cGxpcXVlIGNvbW1lbnQgbGEgZmFpbGxpdGUgZGUgbGEgYmFucXVlIExlaG1hbiBCcm90aGVycyBhIGVudHJhbiBsYSBjaHV0ZSBkZXMgbWFyY2hzIGZpbmFuY2llcnMgZGFucyBzb24gc2lsbGFnZS4gQSBjb21tZW5jZXIgcGFyIGwnQWxsZW1hZ25lLCBvIHVuIGluY3JveWFibGUgc2NhbmRhbGUgYSBjbGF0IGpldWRpIDE4IHNlcHRlbWJyZS4gCk92ZXJ2aWV3IGZvciBrZW1wbzY2NgpBZnRlciByZWxlYXNlIGZyb20gcHJpc29uIGluIDE4OTcsIFdpbGRlIHNwZW50IG11Y2ggb2YgdGhlIGZpbmFsIHR3byAuIENpcnF1ZSAoMTg4NyA4OCkgdG8gdGhlIGRhbmNlcnMgb2YgTGUgQ2hhaHV0ICgxODg4IDg5KS4gCk5vdywgaG93IGlzIGhlIGdvbm5hIHJlYWNoIHRoYXQ/IFdlbGwsIE92aSBpcyAzMyBub3cuIEhpcyBjdXJyZW50IGNvbnRyYWN0IGNhcnJpZXMgaGltIHRocm91Z2ggaGlzIGFnZSAzNSBzZWFzb24sIHRoZW4gaGUncyBhbiB1bnJlc3RyaWN0ZWQgZnJlZSBhZ2VudC4gSWYgaGUgYm93cyBvdXQgdG8gZ28gcGxheSBIb2NrZXkgaW4gUnVzc2lhPyBEcmVhbSBkZWFkLiBCdXQgd2UncmUgZ29ubmEgb3BlcmF0ZSBvbiB0aGUgYXNzdW1wdGlvbiB0aGF0IGhlIGdldHMgY2xvc2UgZW5vdWdoIHRoYXQgaGUgdGhpbmtzIGhlIGNhbiBicmVhayB0aGUgcmVjb3JkLCB0aGUgQ2FwcyBoYW5kIGhpbSBhIGJsYW5rIGNoZWNrLCA1IHllYXIgY29udHJhY3QsIGFuZCBoZSBzdGlja3MgYXJvdW5kLiBUaGF0J3MgYSBncmFuZCB0b3RhbCBvZiA3IHNlYXNvbnMgZnJvbSBub3cgdG8gc2NvcmUgZ29hbHMgNjYxIHRocm91Z2ggODk1OiAyMzQgZ29hbHMsIG9yIGp1c3Qgb3ZlciAzMyBnb2FscyBhIHNlYXNvbi4KSGlzIHRydWUgY2FsbGluZyBob3dldmVyLCBjYW1lIG9uIHRoZSBnb2xmIGNvdXJzZSB3aGVyZSBoZSB3b3VsZCBwbGF5IDE4IGhvbGVzIG9uIGEgU3VuZGF5IG1vcm5pbmcsIHRoZW4gcmV0dXJuIGhvbWUgdG8gZnJ5IHVwIHBvdW5kcyBvZiBiYWNvbiBmb3IgaGlzIGZhbWlseSBiZWZvcmUgdGhleSB3ZXJlIGV2ZW4gYXdha2UuIEhlIGFuZCBKYW5lIHdlcmUgd2VsbCBrbm93biBmb3IgdGhlaXIgaG9zcGl0YWxpdHkgYW5kIHRoZWlyIGhvbWUgd2FzIGtub3duIGFzICJIb3RlbCBBbGV4YW5pYW4iIHRvIG1hbnkgZmFtaWx5IGFuZCBmcmllbmRzIHRocm91Z2hvdXQgdGhlIHdvcmxkLiAKQmVjYXVzZSBzaGUgYW5kIG90aGVycyBhcmUgYWJsZSB0byBhY3R1YWxseSBzaG9vdCBkb3duIHRoZSBhY2N1c2F0aW9ucyBiZXlvbmQganVzdCBUd2VldCBzaG91dGluZywgIldpdGNoIEh1bnQhISEiLCB3aGVyZSBhY3R1YWwgbXVsdGlwbGUgaW5kaWN0bWVudHMsIHdpdGggcHJpc29uIHNlbnRlbmNlcyBoYXZlIGJlZW4gaGFuZGVkIGRvd24gaW4gcmVnYXJkIHRvIE11ZWxsZXIgaW52ZXN0aWdhdGlvbiwgd2hpY2ggaXMgc2luZ3VsYXIgaW4gc2NvcGUuIFRoZSBHT1AgY29udHJvbGxlZCBDb25ncmVzcyBhYnJvZ2F0ZWQgaXRzIG92ZXJzaWdodCBvYmxpZ2F0aW9ucyBkdXJpbmcgVHJ1bXAgZmlyc3QgdHdvIHllYXJzIGluIG9mZmljZSwgYW5kIHdoYXQgd2Ugc2VlaW5nIG5vdyBpcyBhIGNvcnJlY3Rpb24sIGVzcGVjaWFsbHkgYXMgaXQgbWF5IHBlcnRhaW4gdG8gd2hhdCBob29rcyBmb3JlaWduIGludGVyZXN0cyBoYXZlIGluIFRydW1wIGFuZCBoaXMgY2xhbi4gClRoZSBmaXJzdCB0aGluZyB3ZSBub3RpY2VkIHdhcyB0aGUgcHJvZmVzc2lvbmFsIGFwcGVhbC4gCiJUaGF0IGNvdWxkIHRyYW5zbGF0ZSBpbnRvIGFnZ3Jlc3NpdmUgbGVnYWwgdGFjdGljcyB0byBhdm9pZCBiZWluZyBwdW5pc2hlZCBpbiB0aGUgc3RvY2sgbWFya2V0LiIuIApBIHJvdW5kIG9mIGJldHRpbmcgdGFrZXMgcGxhY2UuIApDYWxsIG9mIEN0aHVsaHUgNXRoIGVkaXRpb25zIHdhcyB0aGUgYmVzdCwgN3RoIG1hZGUgc29tZSB0aGluZ3MgYmV0dGVyIGJ1dCBvdmVyYWxsIGlzIHdvcnNlLiBOb3QgYnkgbXVjaCwgdGhlIGdhbWUgaGFzIGFsd2F5cyBiZWVuIG1vcmUgb3IgbGVzcyB0aGUgc2FtZSwgYnV0IHNvbWUgZGV0YWlscyBhcmUgd29yc2UsIHRoZSBib29rIGlzIHR3aWNlIGFzIGJpZywgYnV0IGl0IHdhcyBmaWxsZWQgd2l0aCB1bm5lY2Vzc2FyeSB0aGluZ3MuIDEgcG9pbnQgIHN1Ym1pdHRlZCA1IGRheXMgYWdvCkVpbmVzIGRlciBIaWdobGlnaHRzIGRlciBob2Noa2xhc3NpZ2VuIGludGVybmF0aW9uYWxlbiBzemVuZSBrZWhydCBuYWNoIHZpZXJqaHJpZ2VyIFBhdXNlIGVybmV1dCBpbSBSYWhtZW4gZGVyIFdvcmxkICBUb3VyIG5hY2ggIGluIGRlbiBBdmlhdGlvbiBDbHViIHp1cmNrLiBJbiBkZXIgWmVpdCB2b20gOC4gYmlzIDEzLiBNcnogMjAxMCB3aXJkIGRpZXNlcyB3aWNodGlnZSAgRXZlbnQsIHdlbGNoZXMgZnIgZWluZSB3ZWx0d2VpdGUgYmVydHJhZ3VuZyBpbSBGZXJuc2VoZW4gYXVmZ2V6ZWljaG5ldCB3aXJkLCBuYWNoIDIwMDYgenVtIGVyc3RlbiBNYWwgd2llZGVyIGFuIGRpZXNlbSBiZWxpZWJ0ZW4gT3J0IG1pdHRlbiBhdWYgZGVtIGVyIENoYW1wcyBFbHlzZXMgc3RhdHRmaW5kZW4uIEF1Y2ggZnIgZGVuIEF2aWF0aW9uIENsdWIgc2VsYnN0IGlzdCBkaWUgV2llZGVya2VociBkaWVzZXMgV29ybGQgIFRvdXIgRXZlbnRzIGVpbmUgZXJmcmV1bGljaGUgTmFjaHJpY2h0LiBNYW4gZnJldXQgc2ljaCBhdWYgaG9jaGthcnRpZ2UgIGF1cyBkZXIgZ2FuemVuIFdlbHQuCkhlIHNheXMgTnV0eiBwbGF5ZXJzIGNvdWxkIGJlIHNsYXBwZWQgd2l0aCBtaXNkZW1lYW5vciBnYW1ibGluZyBjaGFyZ2VzLCBidXQgbGF3IGVuZm9yY2VtZW50IGlzIG1vcmUgbGlrZWx5IHRvIGltcG9zZSBmZWxvbnkgY2hhcmdlcyBvbiB0aG9zZSB3aG8gcnVuIHRoZSBnYW1lcy4uIApJIHN3aXBlZCBkb3duIG9uIGhlciBwaG9uZSB0byBzZWUgdGhlIG90aGVyIGNvbG9yIGFuZCBJIHN3ZWFyIHRvIEdvZCBteSBleWVzIG5lYXJseSBwb3BwZWQgb3V0IG9mIG15IGhlYWQgYXMgSSBzYXcgdGhhdCB0aGUgcHVyc2UgY29zdCAkNCw1MDAgVVNELi4gCkRvbid0IGV2ZW4gZmluaXNoLiBUaGV5IGJyaW5nIGluIGJlZXIvd2hpc2tleS9ldGMuLiAKVGFraW5nIG5vIGNoYW5jZXMgYW5kIGNvbXBsZXRlbHkgd29ya2luZyBvbiByZWZsZXgsIHlvdSBzdGVwIGJhY2sgYSBsaXR0bGUgd2hpbGUgc2xpZGluZyB0aGUgam8gYmFjayBmb3IgYSByZXZlcnNlIGdyaXAuIApCb2IzMzc3ICA0MSwwNTIgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KUGFydCBJSTogU2Nob2xhc3RpYyBBcHRpdHVkZSBUZXN0IChTQVQpKGFzIGdpdmVuIGFib3ZlKSAoRnVsbCBBbnN3ZXIpCkRhcyBWZXJzcHJlY2hlbiwgZGFzIGR1IGRlciAiVGFudGUiKHNlaHIgcmVzcGVrdHZvbGwpIGdlYmVuIHNvbGx0ZXN0LCBpc3QgdmllbGxlaWNodCBkYXMgZWluemlnZSB3YXMgbWFuY2ggYW5kZXJlbiBkYXZvbiBhYmdlaGx0IHNpY2ggdW16dWJyaW5nZW4sIHdlaWwgc2llIHNlaGVuIGRhcyBzaWNoIGplbWFuZCB1bSBzaWUgc2NoZXJ0LgpQdWJsaXNoZWQgYXQgdGhlIFVuaXZlcnNpdHkgb2YgR2VvcmdpYSwgSkhFT0UgaXMgdGhlIHByZW1pZXIgcGVlciByZXZpZXdlZCBpbnRlcmRpc2NpcGxpbmFyeSBhY2FkZW1pYyBqb3VybmFsIGZvY3VzZWQgb24gaGlnaGVyIGVkdWNhdGlvbiBvdXRyZWFjaCBhbmQgZW5nYWdlbWVudC4uIApBIGNvbWljIGtub3dzIGJldHRlciB0aGFuIFN0b25lIGxhd3llcnMsIGlzIG1vcmUgY3JlZGlibGUgYW5kIHdvcnRoeSBvZiByZXNwZWN0cyB0aGFuIG9mZmljZXJzIG9mIHRoZSBsYXcuIApFbiBncm9zIHF1b2kuIEV0IGNvbW1lIG9uIHBldXQgbGlyZSB0b3V0IGV0IHNvbiBjb250cmFpcmUsIGNvbW1lbnQgY2hvaXNpdCBvbiBub3RyZSBjcm95YW5jZSA/IEF2b3VleiBxdWUgYydlc3QgdHJzIGNvbXBsaXF1LkMnZXN0IGVmZmVjdGl2ZW1lbnQgdW4gcHJvYmxtZSBxdWUgamUgY29ubmFpcyBjb21tZSB0b3V0IGxlIG1vbmRlLCBqZSBjcm9pcyBxdSdpbCBmYXV0IGNvbW1lbmNlciBwYXIgZmFpcmUgdW5lIGxpc3RlIGRlIGNlIHF1ZSBsJ29uIHBldXQgY29uc29tbWVyLCBkZSBzYXZvaXIgcG91cnF1b2kgb24gZXhjbHV0IHRlbCBhbGltZW50LCBkZSBsJ2F2b2lyIGVuc3VpdGUgZW4gdHRlIGVuIGZhaXNhbnQgc2VzIGNvdXJzZXMsIGQnb3B0ZXIgZGFucyB1bmUgY2VydGFpbmUgbWVzdXJlIHBvdXIgbGUgYmlvIGV0IGQnYXZvaXIgdW5lIGlkZSBwcmNpc2UgZGUgY2UgcXVlIGRvaXQgY29tcG9ydGVyIHVuIHJlcGFzLiBDJ2VzdCB0b3V0IHVuIGFwcHJlbnRpc3NhZ2UgZXQgamUgbmUgcGV1eCBtYWxoZXVyZXVzZW1lbnQgcGFzIGFpZGVyIGRhbnMgY2UgZG9tYWluZS4gCkVuIHZlcnR1IGRlIGwnYXJ0aWNsZSA3MjEgZHUgQ29kZSBkZSBwcm9jZHVyZSBwbmFsZSwgY2hhcXVlIGNvbmRhbW4gYm5maWNpZSBkJ3VuIGNyZGl0IGRlIHJkdWN0aW9uIGRlIHBlaW5lLiAKQnV5L1NlbGwvVHJhZGUvQmVnIGZvciBBYmxldG9uIHN0dWZmIGhlcmUsIGluY2x1ZGluZyBzb2Z0d2FyZSBhbmQgaGFyZHdhcmUsIGluIHRoaXMgdGhyZWFkIGFuZCB0aGlzIHRocmVhZCBvbmx5LgpXZSBhcmUgc2VlaW5nIFZpZXRuYW0gZmluZCBhIGxvdCBvZiBzdWNjZXNzIGNvbXBhcmFibGUgdG8gQ2hpbmEgdGhlIHBhc3QsIHlvdSBzZWVuIEJyYXppbCBhbmQgU291dGggQWZyaWNhIHVuZGVyZ28gcmFwaWQgaW5kdXN0cmlhbGl6YXRpb24gYmVmb3JlIGhpdHRpbmcgdGhlIG1pZGRsZSBpbmNvbWUgdHJhcC4uIApUaGUgbmV3IGdlbmVyYXRpb24gaXMgYmVjb21pbmcgb2Ygdm90aW5nIGFnZSwgYW5kIG1hbnkgYXJlIGZ1bGwgcmVkLiAKV2hlbiBtYXJrZXRpbmcsIGl0IGlzIGltcG9ydGFudCB0byBkZXZlbG9wIGEgc3RyYXRlZ3kgdGhhdCBhcHBlYWxzIHRvIGFsbCB0aGUgY3VzdG9tZXJzIHlvdSB3YW50IHRvIEJ1eSBDbGF5IFBva2VyIENoaXBzIGZyb20geW91ciBidXNpbmVzcy4uIApPbiBKdW5lIDMwLCAyMDE1LCBKb3NlcGggVHlsZXIgS2ltc2V5LCB3YXMgYXJyZXN0ZWQgaW4gQ2FueW9uIENpdHkgd2hpbGUgaW4gdGhlIHBvc3Nlc3Npb24gb2YgQXNobGV5IE1lbG55Y3pvaydzIDIwMDIgQ2hldnkgU2lsdmVyYWRvLiBLaW1zZXkgd2FzIG5vdCBjaGFyZ2VkIHdpdGggbW90b3IgdmVoaWNsZSB0aGVmdCwgYnV0IGhhZCBtdWx0aXBsZSB1bnJlbGF0ZWQgd2FycmFudHMuIEFzIHRoZSBpbnZlc3RpZ2F0aW9uIGNvbnRpbnVlZCwgaW5mb3JtYXRpb24gd2FzIGRldmVsb3BlZCB0aGF0IGEgc2Vjb25kIHN1c3BlY3Qgd2FzIHByZXNlbnQgYW5kIHBhcnRpY2lwYXRlZCBpbiB0aGUgbXVyZGVyIG9mIE1zLiBNZWxueWN6b2suClBlcnJ5IHdhcyA1Mi4gCkhBSEFIQSEgTXkgbGl0dGxlIGNvdXNpbiBjYWxsZWQgcG9vcGluZyAiYm9vcGluZyIgZm9yIHRoZSBsb25nZXN0IHRpbWUuIEhlIHdlbnQgdGhyb3VnaCBhICh0aGFua2Z1bGx5IHZlcnkgYnJpZWYpIHBlcmlvZCB3aGVyZSBoZSB3b3VsZCAiY2hlY2sgb3VyIGRpYXBlcnMiIGZvciB1cywgZXNwZWNpYWxseSBoaXMgbW9tIEhlIGdvIGFyb3VuZCBiZWhpbmQgYW5kIHlhbmsgb24gdGhlIGJhY2sgb2YgaGVyIGplYW5zIGFuZCBsb29rIGRvd24gYXQgaGVyIGJ1dHQuIEhlIHVzdWFsbHkgZGVjbGFyZWQsICJubyBwb29wISIgYW5kIHdvdWxkIGdvIGJhY2sgdG8gd2hhdCBoZSB3YXMgZG9pbmcuCkkgd2lsbCBoYXZlIHRvIGdvIHRocm91Z2ggdGhlIGFyY2hpdmVzIG9mIHBob3RvcyBmcm9tIHRoZSBkYXkgYW5kIHNlZSBpZiBJIGNhbiBmaW5kIG9uZSB3aXRoIG91ciBidW5uaWVzLiBTZXZlcmFsIHBhcmVudHMgYm91Z2h0IHRoZW0gZm9yIHRoZWlyIGNoaWxkcmVuIGZvciBFYXN0ZXIuIApCdW5kYW4gc29ucmEgaWluIGtvbGF5LCBidSBiZW5pbSBidXJhZGFraSBzb24geW9ydW11bSBvbGFjYWsuIApUaHVzLCBvdXIgb2JqZWN0aXZlIHdhcyB0byBhc3Nlc3Mgd2hldGhlciBnbHV0ZW4gZXhjbHVzaW9uIGNhbiBwcmV2ZW50IGFkaXBvc2UgdGlzc3VlIGV4cGFuc2lvbiBhbmQgaXRzIGNvbnNlcXVlbmNlcy4gQzU3QkwvNiBtaWNlIHdlcmUgZmVkIGEgaGlnaCBmYXQgZGlldCBjb250YWluaW5nIDQuNSUgZ2x1dGVuIChDb250cm9sKSBvciBubyBnbHV0ZW4gKEdGKS4KSW4gdGhlIDE5OTBzLCAgZGV2ZWxvcG1lbnQgc3RyYXRlZ3kgbGVhbmVkIHRvd2FyZHMgYWNoaWV2aW5nIGVjb25vbWljIGRpdmVyc2l0eSBhbmQgYmVjb21pbmcgYSBrbm93bGVkZ2UgZWNvbm9teS4gQXMgYSByZXN1bHQsIGl0IGJlY2FtZSBtb3JlIG1hcmtldCBvcmllbnRlZCBhbmQgc3Ryb3ZlIHRvIG1lZXQgaW52ZXN0b3JzIG5lZWRzLCB0aHJvdWdoIG9mZmVyaW5nIGJldHRlciBpbnRlbGxlY3R1YWwgcHJvcGVydHkgcmlnaHRzIHByb3RlY3Rpb24sIGxvd2VyIGNvcnBvcmF0ZSB0YXhlcywgZ3JlYXRlciBlYXNlIGluIG9idGFpbmluZyBwZXJtYW5lbnQgcmVzaWRlbnQgc3RhdHVzIGFuZCBtb3JlIGZsZXhpYmxlIGxhYm91ciBwb2xpY2llcy4gQWxsIHRoZXNlIGhhdmUgaGVscGVkIHRvIGVuaGFuY2UgIGJyYW5kIHBvd2VyIGFuZCBib29zdCBpdHMgYXBwZWFsIGFzIGFuIGludGVybmF0aW9uYWwgaW52ZXN0bWVudCBkZXN0aW5hdGlvbi4KSm9obiB0aGUgRXZhbmdlbGlzdCBBbmdsaWNhbiBDaHVyY2ggTWVtb3JpYWwgRnVuZCBvbiBiZWhhbGYgb2YgUmljaGFyZCBNZXVuaWVyIG9yIHRoZSBLIFcgSHVtYW5lIFNvY2lldHkgd291bGQgYmUgZ3JlYXRseSBhcHByZWNpYXRlZCBieSB0aGUgZmFtaWx5IGFuZCBtYXkgYmUgYXJyYW5nZWQgZm9yIHRocm91Z2ggdGhlIGZ1bmVyYWwgaG9tZS4uIApUZXJtaW5vbnMgZW4gbCBhdmVjIGxlcyBwZXRpdGVzIGJvdWxlcyBxdWkgbmFpc3NlbnQgYXUgcmV2ZXJzIGRlcyBmZXVpbGxlcyBkZSBjaG5lIGV0IHF1ZSBsIGFwcGVsbGUgZGVzIGdhbGxlczogVGhvcGhyYXN0ZSBlbiBjb25uYWlzc2FpdCBsIGV0IGVuIGRjcml0IGRlIG5vbWJyZXVzZXMgc29ydGVzIHF1IHJlY29tbWFuZGFpdCBub24gc2V1bGVtZW50IHBvdXIgbGEgbWRlY2luZSwgbWFpcyBhdXNzaSBwb3VyIGxhIHRhbm5lcmllLCBsYSBmYWJyaWNhdGlvbiBkIGV0IGRlIHRlaW50dXJlLi4gCldoZW4gSSBnb3Qgb24gdGhlIFtITUNTXSBUaW1taW5zIHRoZXJlIGFuZCB3ZSBnb3QgcGFpZCBhbmQgc29tZWJvZHkgZnJvbSB0aGUgcGV0dHkgb2ZmaWNlciBtZXNzIGNvbWUgZG93biBhbmQgc2F5cywgb2YgeW91IGd1eXMgd2FudCB0byBwbGF5IHBva2VyIGluIG91ciBtZXNzPyBXZSBoYXZpbmcgYSBwb2tlciBnYW1lLiAKSW1wb3J0YW50IHF1YWxpdGllcyBmb3IgdGhlIGpvYiBpbmNsdWRlIGF0dGVudGlvbiB0byBkZXRhaWwsIHByb2JsZW0gc29sdmluZyBhY3VtZW4sIHRoZSBhYmlsaXR5IHRvIGNvbW11bmljYXRlIHZlcmJhbGx5IGFuZCBpbiB3cml0aW5nLCBhbmQgdGVjaG5pY2FsIHNraWxscy4uIApWaWRlbyBQb2tlciBSdWxlcyBUaXBzClRoZSBmZWVsIGlzIGEgbGl0dGxlIGxpa2UgYSB3aXphcmQgd29ya3Nob3AsIGFuZCB3aGV0aGVyIHlvdSBsaWtlIHRoYXQgc29ydCBvZiB0aGluZyBvciBub3QsIGl0IHVudXN1YWwgYW5kIGZyZXNoIGZvciB0aGUgY2FzaW5vIGluZHVzdHJ5LiBTZXVzcy4gClNvIHdpdGggdGhhdCBzYWlkLCBpdCBwb3NzaWJsZSB0aGF0IGhlIGZlbHQgc2FmZSBhbmQganVzdCBsZXQgaGlzIGFybSBnbyBsaW1wLiAKVGhlIGNvdXJ0IHdhcyB0b2xkIGluIHRlbmRlcmVkIGZhY3RzIHRoZSBzdXBlcnZpc29yIHdhcyB3YWxraW5nIHRocm91Z2ggdGhlIHBva2VyIG1hY2hpbmUgYXJlYSBhYm91dCAxMi4wNWFtIG9uIERlY2VtYmVyIDE0IHdoZW4gaGUgc2F3IFdlbHNoIGhvbGRpbmcgb3BlbiB0aGUgcG9rZXIgbWFjaGluZSBkb29yIGFuZCBTdXBoZWVydCB0YWtpbmcgY29pbnMuIEJvdGggd2VyZSBhc2tlZCB0byBsZWF2ZSBhbmQgdGhlIHN1cGVydmlzb3IgY29udGFjdGVkIHNlY3VyaXR5IHN0YWZmLCB3aG8gc3Bva2UgdG8gcG9saWNlIGluIGFub3RoZXIgc2VjdGlvbiBvZiB0aGUgaG90ZWwuIApUaGUgaWRlbnRpY2FsIHB1enpsZSBJIGdvdCBmb3IgbXkgbmVwaGV3IGhhcyBzdGlja2VycyBpbnN0ZWFkIG9mIHBhaW50IGFuZCB0aGUgcGllY2VzIGFyZSB0b28gdGhpbiB0byBzdGFuZCB1cCBvbiB0aGVpciBvd24uIApBIGxpdHRsZSBvdXQgb2YgZGF0ZSwgYnV0IHNoaXQgICB0aGF0IGJvb2sgaXNuIGdldHRpbmcgcGFja2VkIHdpdGggbXkgYmFncywgaXQgY29taW5nIGluIG15IGJhY2twYWNrLiAKQWZ0ZXIgdGhlIGJhdGggcGxheSBhbmQgbWFzc2FnZSwgc2hlIGdhdmUgbWUgYSBoYW5kam9iIGZvbGxvd2VkIGJ5IGEgYmFyZWJhY2sgYmxvd2pvYiB3aGljaCB3YXMgcXVpdGUgZ29vZC4gClRoZXJlIEVudGVydGFpbm1lbnQsIHdoaWNoIGFyZSB0aGUgZW1jZWVzLCB0aGUgREpzIGFuZCB0aGUgY29vcmRpbmF0b3JzIGZvciB0aGUgYmlnZ2VyIG11c2ljYWwgZW50IGFjdHMgdGhhdCB3aWxsIHBlcmZvcm0gZHVyaW5nIHRoZSB3ZWVrZW5kLiAKQ2UgcXVpIGwnZXN0IG1vaW5zIGMnZXN0IHF1ZSBsYSBwcmVzc2UgIGNlbnN1ciBsZXMgdmlzY3JhdGlvbnMsIGRjYXBpdGF0aW9uLCBzZXhlcyBjb3VwcyBldCBtaXMgZGFucyBsYSBib3VjaGUgZCdhdSBtb2lucyB1biBqZXVuZSwgc2ltdWxhY3JlIGRlIHZpb2wgZGUgZmVtbWVzIGF2ZWMgdW4gY291dGVhdS4gRXQgb3VpIGMnZXN0IG1haW50ZW5hbnQgYXR0ZXN0IHBhciB1biByYXBwb3J0IHF1aSBmaWd1cmUgc3VyIGxlIHNpdGUgZGUgbCdBc3NlbWJsZSBOYXRpb25hbGUuRGVzIG11c3VsbWFucyBvbnQgcGF5IHVuIGxvdXJkIHRyaWJ1dCAgbGEgZm9saWUgdmVuZ2VyZXNzZSBkdSBjaGF1ZmZldXIgdHVuaXNpZW4uIApJIHdhcyBkZWZpbml0ZWx5IHNoYWtlbiB1cCBmb3IgYSB3aGlsZS4gSSBoYWQgbXkgbGFuZGxvcmQgY2hhbmdlIGFsbCB0aGUgbG9ja3MgYW5kIHNldCB1cCBtb3Rpb24gc2Vuc29yIGxpZ2h0cyBvbiBteSBiYWxjb255LiBJIGNvbnRhY3RlZCBwb2xpY2UsIGJ1dCB0aGV5IGRpZCBvbmUgb2YgdGhvc2UgaGFsZiBhc3NlZCAiaW52ZXN0aWdhdGlvbnMiIHdoZXJlIHRoZXkgc2VlbWVkIHRvIHByZXRlbmQgdG8gd3JpdGUgdGhpbmdzIGRvd24sIHNocnVnIGl0IG9mZiwgYW5kIHRoZW4gdG9sZCBtZSB0aGF0ICJ3ZWxsIHNpbmNlIHRoZXkgbW92ZWQgb3V0IHRoZXJlJ3Mgbm90aGluZyB3ZSBjYW4gZG8iLiAKU28gcmVhbGx5IGhlciBvcHRpb25zIGFyZSBjYWxsIGZvciBhIGNob3AsIG9yIGxvc2UuIAo=|<---