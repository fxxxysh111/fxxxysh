--->|U2luY2UgdGhlbiBzZXZlcmFsIHN0YXRlIHJlcHVibGljYW5zIGhhdmUgZmxpcHBlZCB0byBkZW1vY3JhdHMsIGFuZCBMYXVyYSBLZWxseSBpcyBnZXR0aW5nIHN0dWZmIGRvbmUhIFdlIGRlZXAgcmVkIHNhZGx5LCBidXQgYSBsb3QgbW9yZSBwcm9ncmVzc2l2ZSB0aGFuIGFsbCBvZiBvdXIgbmVpZ2hib3JzIChleGNlcHQgQ29sb3JhZG8gb2J2aW91c2x5KS4gSXQgZWFzeSB0byBmb3JnZXQgdGhhdCBiZWZvcmUgQnJvd25iYWNrLCBTZWJlbGl1cyB3YXMgb3VyIGdvdmVybm9yLiAgMSBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvLiAKQWN0aXZpdHkgcHJpY2luZyAgIHN0dWRlbnQsIHN0YWZmIGFzc29jaWF0ZSBhbmQgYWx1bW5pVGhpcyBpcyBhIDUwJSBkaXNjb3VudGVkIHJhdGUgYW5kIGFwcGxpZXMgb25seSBpZiA1MCUgb3IgbW9yZSBvZiB0aGUgYXR0ZW5kZWVzIGhvbGQgYSBVb04gc3BvcnQgYW5kIGZpdG5lc3MgbWVtYmVyc2hpcC4gSWYgdGhpcyBpc24ndCB0aGUgY2FzZSwgdGhlbiB0aGUgZnVsbCByYXRlIChkb3VibGUgcmF0ZSBzdGF0ZWQpIHdpbGwgYmUgY2hhcmdlZC4KSXQncyBhbG1vc3QgbGlrZSBJIHdhbGsgdGFsbGVyLiIuIApTaGUgd2FzIGEgZGVsaWdodGZ1bCBhbmQgZnVuIGxvdmluZyBwZXJzb24sIHNoYXJpbmcgam95LCBsYXVnaHRlciBhbmQgbG92ZSB3aXRoIGV2ZXJ5b25lLiBBbXkgZW5qb3llZCB0cmF2ZWxpbmcgd2l0aCBoZXIgaHVzYmFuZCwgSmFtaWUsIGF0dGVuZGluZyBSb2QgU3Rld2FydCBjb25jZXJ0cyBhbmQgYmVpbmcgaW4gY2hhcmdlIG9mIHRoZSBmcmllbmRseSBXaWxzb24gRmFtaWx5IEZvb3RiYWxsIFBvb2wgKFdGRlApIHdoZXJlIHNoZSB3YXMga25vd24gYXMgIkNvbW1pc3Npb25lciBCdWJiYS4iIEFteSB3b3JrZWQgZm9yIGEgZmV3IHllYXJzIHdpdGggdGhlIEJhcm4gRGlubmVyIFRoZWF0cmUgd2hpY2ggZ2F2ZSBoZXIgYSBsaWZlbG9uZyBhcHByZWNpYXRpb24gZm9yIHN0YWdlIGVudGVydGFpbm1lbnQuIApQcmFpcmllIEJpa2UgUmFsbHkgdG8gb2ZmZXIgZW50ZXJ0YWlubWVudCBmb3IgYWxsCkluIGhvbm91ciBvZiBJbnRlcm5hdGlvbmFsIFdvbWVuIERheSwgVmFuY291dmVyIHJlc3RhdXJhbnQgQmFuZGlkYXMgVGFxdWVyaWEgd2lsbCBkb25hdGUgMTAwJSBvZiBpdHMgcHJvZml0cyBmcm9tIHRoZSBzYWxlIG9mIGZvb2QgYW5kIGRyaW5rcyBvbiBNYXJjaCA4dGggdG8gbG9jYWwgb3JnYW5pemF0aW9ucyBzZXJ2aW5nIHdvbWVuLiBUaGUgbGlzdCBvZiBiZW5lZmljaWFyaWVzIGluY2x1ZGVzIFdBVkFXLCBEb3dudG93biBFYXN0c2lkZSBXb21lbiBDZW50cmUsIHRoZSBDYW5hZGlhbiBDb3VuY2lsIG9mIE11c2xpbSBXb21lbiwgTmF0aXZlIFdvbWVuIEFzc29jaWF0aW9uIG9mIENhbmFkYSwgR2lybHMgUm9jayBDYW1wLCBhbmQgV0lTSCBEcm9wIEluIENlbnRyZSBTb2NpZXR5LiAKSG93ZXZlciwgdGhlcmUgYXJlIG1hbnkgcGxhY2VzIHRoYXQgb2ZmZXIgdGhpcyB0eXBlIG9mIGNhcmQgZm9yIHRoZSBzYW1lIHByaWNlIGFzIHRoZSBjaGVhcGVyIGJyYW5kcy4gV2hlbiBzZWVraW5nIG91dCBxdWFsaXR5IGNhc2lubyBzdHlsZSBicmlkZ2UgcGxheWluZyBjYXJkcywgeW91IHNob3VsZCBvcHQgZm9yIG5hbWUgYnJhbmRzIGxpa2UgIlJhbWFkYSBFeHByZXNzIiwgIkV4Y2FsaWJ1ciIgYW5kICJKYW1lcyBCb25kIENhc2lubyBSb3lhbGUiLiBBbGwgb2YgdGhlc2Ugb2ZmZXIgdGhlIGZlYXR1cmVzIG9mIHRoZSBzdGFuZGFyZCBicmFuZHMgYW5kIHRoZSBxdWFsaXR5IGV4cGVyaWVuY2Ugb2YgcGxheWluZyBpbiBhIGNhc2luby4KQXBwbGljYXRpb25zLiAKVHdlZWtEYXNoIHUKV2hpbGUgMSBoYWQgbWluaW1hbCBzdG9yeSwgZXZlbiBzdGFydGluZyBpbiAyICh1cywgNCBpbiBqYXBhbikgdGhlcmUgd2VyZSBhbHJlYWR5IHJvbWFuY2Ugc3RvcnkgZWxlbWVudHMgKEVkZ2UvUnlkaWEgZ2V0IG1hcnJpZWQgaW4gdGhlIGVuZGluZywgY2VjaWwgYW5kIHJvc2EgYXJlIGFscmVhZHkgbWFycmllZCwgZXRjKS4gCldoYXQgSSBzZWUgaW4gdGhlIFdlc3QgKG1pbmQgeW91LCBJIG5ldmVyIGxpdmVkIGluIHRoZSBFYXN0LCBvbmx5IHN0dWRpZWQgdGhlbSBmcm9tIGFmYXIpIGlzIGEgZGVlcCBodW5nZXIgZm9yIGNvbXBhc3Npb24uIFRoZSBtYWluIHBsYWNlIGluIHRoZSBFYXN0IEkgc2VlIGNvbXBhc3Npb24gaXMgZnJvbSBCdWRkaGlzbS4gCk9uZSB0aGluZyB0byBjb25zaWRlciBpcyB0aGF0IFp1cmljaCBpcyBub3QgdGhhdCBmYXIgZnJvbSB0aGUgVUsgYW5kIGlmIHlvdSBhcmUgZ29pbmcgdG8gYmUgaW4gdGhlIEJyaXplIGFyZWEvc291dGhlcm4gRW5nbGFuZCBJIHdvdWxkIGFjdHVhbGx5IGRyaXZlIHRoZXJlLCBhbmQgZXZlbiBjb25zaWRlciBoaXJpbmcgYSBjYW1wZXIgdmFuLiAKTWFpbiBtZW1vcnkgaXMgbG9jYXRlZCBvbiB0aGUgQ1BVIGNoaXA/CkFzIHlvdSBnZXQgY29tZm9ydGFibGUgc3RhcnRpbmcgYWRkaW5nIG1vcmUgaGFuZHMgdG8gdGhhdCByYW5nZSBhbmQgc28gb24uIApJZiB0aGV5IGRvIG5vdCB0aGluayBpbXBsZW1lbnRpbmcgU2VnV2l0IGlzIGluIHRoZWlyIGJlbmVmaXQsIHRoZXkgd29uIGRvIGl0LiAKUGVvcGxlIHNheSB0aGV5IGRvbid0IGZsb2F0IHdlbGwgZHVlIHRvIHRoZWlyIGxvdyBib2R5IGZhdCwgYnV0IGhvbmVzdGx5IEkgZG9uJ3QgdGhpbmsgdGhhdCdzIHRoZSBwcm9ibGVtLCBpdCBzZWVtcyBtb3JlIG9mIGEgInRoZXkgaGF2ZSBubyBpZGVhIHdoYXQgdGhleSdyZSBkb2luZyBhbmQgbm8gbmF0dXJhbCBpbnN0aW5jdC4iIExvbC4gSSdtIGZyb20gRkwgYW5kIGFsbW9zdCBldmVyeSBncmV5aG91bmQgSSBrbm93IGNhbiBzd2ltLCBqdXN0IHRvb2sgYSB3aGlsZSB0byB0ZWFjaCB0aGVtLiAKSGUgc2F5cyBleGFjdGx5IHRoaXMgdG8gdGhlIHBsYXllciB0byBteSByaWdodCB3aG8gd2FzIHJlYWxseSBxdWlldCBhbmQgc2VlbWVkIGxpa2UgYSBuaWNlIGd1eS4gCkFuZCBhbHRob3VnaCB0aGVyZSBhcmUgc3RpbGwgcGVvcGxlIGFyb3VuZCB0aGUgd29ybGQgd2hvIHN0cnVnZ2xlIHdpdGggbWVldGluZyB0aGVpciBiYXNpYyBuZWVkcywgbW9zdCBvZiB1cyBoYXZlIHRoZSBsdXh1cnkgb2YgYSBsaXR0bGUgZnJlZSB0aW1lLiAKSGV1dHp1dGFnZSBnaWJ0IGVzIG1laHIgYWxzIDYwMDAgQXJ0aWtlbCBiZXIgZGllIGlubmVyZSBBbndlbmR1bmcgdm9uIEgyTzIgLCB3YXMgZWluZSBSZXZvbHV0aW9uIGluIGRlciBNZWRpemluIGF1c2dlbHN0IGhhdC4gV2VsY2hlIEVya3Jhbmt1bmdlbiBrbm5lbiBtaXQgSGlsZmUgdm9uIFdhc3NlcnN0b2ZmcGVyb3hpZCBiZWhhbmRlbHQgd2VyZGVuPyBHZWZlcmtyYW5rdW5nZW4gZGVzIEdlaGlybnMsIEFsemhlaW1lciwgSGVyeiAgdW5kIEdlZmVya3Jhbmt1bmdlbiwgQW5naW5hLCBBc3RobWEsIEVtcGh5c2VtZSwgTGV1a21pZSwgRGlhYmV0ZXMsIE11bHRpcGxlIFNrbGVyb3NlLCByaGV1bWF0b2lkZSBBcnRocml0aXMsIE1vcmJ1cyBQYXJraW5zb24sIE1pZ3JuZSwgS3JlYnMgdW5kIHNvZ2FyIEFJRFMuIApUaGVuIGV2ZXJ5IHBlcnNvbiBwbGF5aW5nIHRoZSByb3VuZCBnZXRzIGEgc2Vjb25kIGNhcmQsIGZhY2UgZG93biBzdGFydGluZyBhZ2FpbiB3aXRoIHRoZSBwZXJzb24gdG8gdGhlIGxlZnQgb2YgdGhlIGRlYWxlci4gV2hlbiBhbGwgcGxheWVyIGhhdmUgdHdvIGNhcmRzIGZhY2UgZG93biwgdGhlIGJldHRpbmcgcm91bmQgY2FuIGJlZ2luLiAKRXZlcnl0aGluZyBpcyBjb250cm9sbGVkIGJ5IG9uZSBwYXJ0eSwgdGhlIENvbW11bmlzdCBQYXJ0eS4gCkhpcyBzdHVubmluZyBsYWNrIG9mIGRlcHRoIHJlZ2FyZGluZyBoaXMgcHJvcG9zYWxzLiAgIEFueSB0aW1lIGhlIGhhcyBiZWVuIHJlYWxseSBwcmVzc2VkIHRvIGV4cGxhaW4gaGlzIHByb3Bvc2FscywgYW5kIGhvdyB0aGV5IGNvdWxkIGJlY29tZSByZWFsaXR5LCBoZSBmYWlscy4gCkZsYXRPdXQgVWx0aW1hdGUgQ2FybmFnZSBLZXlnZW4gU2VyaWFsIEZJWEVEICAgUGxheSBPbmxpbmUgUEMgTHVjaWFuYSBaYWxhemFyIEVuIElyaXMgICBLYXRlIFdpbnNsZXQgICAoMjAwMSkgRHZkIFJpcCBbWHZpZCBFTkddKDYgU3VicykuIER5bmVkIGlzbywgTWF1dCBIb3QgSGluZGkgSG9ycm9yIC4gTyBab21iaWUgU2hvb3RlciAyIFNLSURST1cuIApJdCBzdWNrZWQuIApGcm9tIEhhbmRrcyBtaXQgTXVzaWsgKGN1cmQgY2hlZXNlIHdpdGggb25paW9ucykgdG8gIkZyYW5rZnVydCBHcmVlbiBTYXVjZSIgd2l0aCBTY2huaXR6ZWwgYW5kIGVnZ3MuIApJIHJlYWQgYSBsb3Qgb2Ygc3VtbWFyaWVzIG9uIExpYnJhdHVzIGFuZCB0aGUgY2hhbGxlbmdlIGhpZGRlbiBpbmZvcm1hdGlvbiBwb3NlcyB0byBBSSwgYW5kIG1vc3QgbWFrZSBzb21lIHN1YnRsZSBtaXN0YWtlcy4gQnV0IHRoaXMgb25lIGlzIGJhc2ljYWxseSBzcG90IG9uLiAKS2FpIHZvbiBGaW50ZWwgYW5kIElyZW5lIEhlaW0gaGF2ZSBhIGdyZWF0IGNoYXB0ZXIgb24gaW50ZW5zaW9ucyBpbiBuYXR1cmFsIGxhbmd1YWdlIHNlbWFudGljcywgaWYgeW91IGhhbmR5IHdpdGggYSBsaXR0bGUgbGFtYmRhIGNhbGN1bHVzLgpGb3Igc3VyZSwgbGV0IHNheSB0aGUgam9iIGhvdXJzIGFyZSA5IHRvIDUsIHRoYXQgbWVhbnMgaGUgaGFzIHRvIGxlYXZlIGF0IDc6MzAgYXQgbGVhc3QsIG1vcmUgbGlrZSA3OjAwIGlmIHdlIGFyZSBiZWluZyByZWFsaXN0aWMsIGhlIGhhcyB0byBsZWF2ZSBob21lIGJlZm9yZSB0aGUga2lkcyBldmVuIGdvIHRvIHNjaG9vbCwgaGUgd29uIGJlIGRyb3BwaW5nIGFueSBvZiB0aGUga2lkcyBhdCBzY2hvb2wgYW55bW9yZS4gCkFjY29yZGluZyB0byBCYWtlciwgd2hvIGFsbGVnZWRseSBnb3QgdGhlIHN0b3J5IGZyb20gRWR3YXJkJ3MgbXVyZGVyZXJzLCB0aGUga2luZyB3YXMgc3RhYmJlZCB3aXRoIGEgcmVkIGhvdCBwb2tlci4gSW4gdGhlIHJlY3R1bS4uIApOb3RlIGxpbWluYWlyZTogaWwgc2VyYWl0IGJvbiBldCBwcm9maXRhYmxlIHF1IGRpdGV1ciBzcmlldXggZXhodW1lIGRlIG5vdXZlYXUgbGUgZmFidWxldXggdHJhdmFpbCBkdSBkb2N0ZXVyIExlY2xlcmMuIE1vbiBleGVtcGxhaXJlIGRlIFByY2lzIGRlIHBoeXRvdGhyYXBpZSwgYWNoZXQgZCBkYXRlIHRvdXQgZGUgbW1lIGRlIDE5OTQhIENlIG4gcGFzIHBhcmNlIHF1ZSBqIGRpdCBxdSBMZWNsZXJjIHRhaXQgaHVtYmxlIGV0IGRpc2NyZXQgcXUgZmF1dCBzIGV0IG1haW50ZW5hbnQsIGNldHRlIHByZmFjZS4gUmdhbGV6IHZvdXMhCkkgd2FudGVkIHRvIGJlIHNvIGV4Y2l0ZWQgYWJvdXQgdGhpcy4gQnV0IHdoYXQgSSByZWFsbHkgd2FudGVkIHdhcyB0aGUgY3VycmVudCBYIG1pZCBpbiBEQ0YsIHNvIHRoYXQgSSBjb3VsZCBsZWF2ZSB0aGUgaW5uZXIgdGVudCBhdCBob21lIChleGNlcHQgaW4gdGhlIGhlaWdodCBvZiBzdW1tZXIpIGFuZCB1c2UgdGhlIGZseSBhcyBhIHRhcnAgb3ZlciBteSBiaXZ5LCByZXBsYWNpbmcgbXkgSGV4YW1pZCBQbHVzICh3aGljaCBpcyBqdXN0IG5vdCBxdWl0ZSBsb25nIGVub3VnaCBpZiBJIHNoaWZ0IGR1cmluZyB0aGUgbmlnaHQgbXkgZmVldCBzb21ldGltZXMgZW5kIHVwIG91dHNpZGUgdGhlIHRhcnApLiBJbiBzaG91bGRlciBzZWFzb25zLCBJIGp1c3QgZmluZCB0aGF0IGEgYml2eSB3b3JrcyBzbyBtdWNoIGJldHRlciB0byBjdXQgZG93biBvbiBkcmFmdHMgYXJvdW5kIHRoZSBxdWlsdC4gClRoaXMgc29tZXRpbWVzIHdvcmtzIGluIHRoZSBkaXNhZHZhbnRhZ2Ugb2YgdGhlIHJvdXRpbmUgcGxheWVycyB3aG8gaGF2ZSB0byBwbGF5IG9ubGluZSBwb2tlciBnYW1lcyBmb3IgdGhlaXIgbGl2ZWxpaG9vZC4KU3RyYWlnaHQuIE5leHQgdXAgaXMgYSBzZXQgb2YgZml2ZSBjYXJkcyB0aGF0IGFyZSBvZiBzZXF1ZW50aWFsIHJhbmsgYnV0IGJlbG9uZ2luZyB0byBtb3JlIHRoYW4gb25lIHN1aXQuIFRvIGRldGVybWluZSB3aGljaCBzdHJhaWdodCBwbGF5ZWQgaXMgYmV0dGVyOyBhZ2FpbiwgdGhlIGNhcmRzIHZhbHVlcyBhcmUgY29tcGFyZWQuIElmIHR3byBzdHJhaWdodHMgYXJlIHRoZSBzYW1lLCB0aGUgcHJpemUgaXMgc3BsaXQuIE5vdywgb25lIGltcG9ydGFudCBmYWN0IHRvIHJlbWVtYmVyIHdoZW4gZm9ybWluZyB0aGlzIGhhbmQgaXMgdGhhdCB0aGUgQWNlIGNhbiBiZSB1c2VkIGFzIGEgaGlnaCBvciBsb3cgY2FyZC4gU28gaXQgY2FuIGdvIGJlc2lkZSBhIEtpbmcgb3IgYSB0d28gYW5kIGNvbXBsZXRlIGEgc2V0LgpQZXJmb3JtYW5jZSBDb29raWVzIHNhbW1lbG4gSW5mb3JtYXRpb25lbiBkYXJiZXIsIHdpZSB1bnNlcmUgV2Vic2VpdGVuIGdlbnV0enQgd2VyZGVuLCB1bSBkYXJhdWYgYmFzaWVyZW5kIGRlcmVuIEF0dHJha3Rpdml0dCwgSW5oYWx0IHVuZCBGdW5rdGlvbmFsaXR0IHp1IHZlcmJlc3Nlcm4uIERpZXNlIENvb2tpZXMgaGVsZmVuIHVucyBiZWlzcGllbHN3ZWlzZSBmZXN0enVzdGVsbGVuLCBvYiB1bmQgd2VsY2hlIFVudGVyc2VpdGVuIHVuc2VyZXIgV2Vic2VpdGUgYmVzdWNodCB3ZXJkZW4gdW5kIGZyIHdlbGNoZSBJbmhhbHRlIHNpY2ggZGllIE51dHplciBiZXNvbmRlcnMgaW50ZXJlc3NpZXJlbi4gClNvIHdoYXQgbWFrZXMgdGhlIDIwMCAxMS41ZyBQb2tlciBDaGlwIEhpZ2ggUm9sbGVyIFNldCB3aXRoIENsZWFyIENvdmVyIEFsdW1pbnVtIENhc2Ugc28gc3BlY2lhbD8gVGhlIGZpcnN0IHRoaW5nIHRoYXQgY29tZXMgdG8geW91ciBhdHRlbnRpb24gd2lsbCBiZSB0aGUgZGVzaWduIG9uIGVhY2ggY2hpcC4gVGhlc2UgYXJlIG5vdCBzdGlja2VycyB0aGUgY29tcGFueSBhZGRlZCB0byBnaXZlIHRoZW0gYSAiY2FzaW5vIHR5cGUiIGFwcGVhbC4gSW5zdGVhZCB0aGUgZGVzaWducyBhcmUgZW1iZWRkZWQsIHNvIHRoZXkgd2lsbCBuZXZlciBjb21lIG9mZiBvciBnaXZlIHBlb3BsZSBhIHJlYXNvbiB0byBwdWxsIG9uIHRoZW0uCkNob29zZSBhIHBvc2l0aXZlIHN0YXRlbWVudCB0aGF0IGV4cHJlc3NlcyBhIGRlc2lyZS4gRm9yIGluc3RhbmNlLCAiRWFjaCBicmVhdGggbWFrZXMgbWUgZmVlbCBtb3JlIHJlbGF4ZWQuIiBPbmNlIHlvdSBoYXZlIHRoZSBzdGF0ZW1lbnQgaW4gbWluZCwgbGllIGRvd24gYW5kIHRha2UgdGhyZWUgc2xvdywgZGVlcCBicmVhdGhzLiAKQnVycml0b0J1cmdsYXI5MDAwICAxNSBwb2ludHMgIHN1Ym1pdHRlZCA1IGRheXMgYWdvCllvdSBjYW4gcHJldHR5IG11Y2ggdGVsbCBpZiBhbiBhZHVsdCBpcyBhdCBhIGhlYWx0aHkgd2VpZ2h0IGJ5IGxvb2tpbmcgYXQgdGhlbS4gClJlYWQgdGhlIEVudGlyZSBBcnRpY2xlTEcgQmVzdCBTcGxpdCBBQyBGb3IgVGhpcyBTdW1tZXJzCkkgZ3Vlc3MgdGhlIGxpbmUgaXMgZHJhd24gd2hlbiBubyBzb2xpZCBlZmZvcnRzIGFyZSBtYWRlIHRvIG5vdCBiZSBvdmVybHkgdG91Y2h5IGZlZWx5IHdpdGggcGVvcGxlIGF0IGEgeW91bmcgYWdlLiBJZiBhbnlvbmUsIGJveXMgZ2lybHMgaW5iZXR3ZWVucywgYXJlIHByYWlzZWQgb3IgdGhvdWdodCBjdXRlIGl0IGRvIHRoaXMga2luZCBvZiB0aGluZyB0byBldmVyeW9uZSBhbGwgdGhlIHRpbWUgdGhlbiB5ZWFoIHRoZXlsbCBncm93IHVwIHRvIHRoaW5rIHRoYXQga2luZCBvZiBiZWhhdmlvciBpcyBva2F5Li4gCk5vIGhlYXZ5IGRydWdzLCBidXQgYSBsb3Qgb2Ygd2VlZC4gQW5kIGNhbGwgbWUgY3JhenksIGJ1dCBpZiB5b3UgbWFrZSBtaW5pbXVtIHdhZ2UgeW91IGRvbiByZW50IGFsb25lLCBwZXJpb2QuIApUaGUgQ2hyaXN0aWFuIENpdmljIExlYWd1ZSBvZiBNYWluZSBiZWxpZXZlcyB0aGF0IHRoZXNlIG5ldyBndWlkZWxpbmVzIGFyZSBub3QgbWVyZWx5IGFuIGVycm9yIGluIGp1ZGdtZW50IG9uIHRoZSBwYXJ0IG9mIHRoZSBNYWluZSBIdW1hbiBSaWdodHMgQ29tbWlzc2lvbi4gUmF0aGVyLCB0aGV5IHJlcHJlc2VudCB0aGUgbGF0ZXN0IGVmZm9ydCBieSB0aGUgaG9tb3NleHVhbCBsb2JieSB0byBpbXBvc2UgdGhlaXIgY29uZnVzZWQgdmlld3Mgb2Ygc2V4dWFsaXR5IG9uIHNvY2lldHkgYXQgbGFyZ2UuIgpZb3UgbWlnaHQgbGlrZSB0aGlzIHlvdXR1YmUgY2hhbm5lbCBpZiB5b3UgY2FuIGdldCBvdmVyIHRoZSBndXlzIHNtYWxsIHNwZWVjaCBpbXBlZGltZW50LiBIZSBnb2VzIG92ZXIgYWxsIHRoZSB3YXlzIHdoeSB0aGUgRmVybWkgUGFyYWRveCBkb2VzbiBoYXZlIGEgc2ltcGxlIHNvbHV0aW9uLiBJdCBhbHNvIGFzc3VtZXMgdG9vIG1hbnkgdGhpbmdzLCBsaWtlIGFsaWVucyB3b3VsZCBiZSB1c2luZyByYWRpbyBzaWduYWxzIHRvIGNvbW11bmljYXRlLiAKSXQgbWlnaHQgaGF2ZSBzbGlwcGVkIHlvdXIgbWluZCBiZWNhdXNlIHlvdSB3ZXJlIHRvbyB5b3VuZyBhdCBsYXVuY2ggb2YgRGVzdGlueSBidXQgeWVzIGl0IGhhZCBhIGdyZWF0IGxhdW5jaCB3aXRoIHRoZSBtb3N0IHNhbGVzIGFuZCB0d2l0Y2ggY292ZXJhZ2UgaW4gdGhhdCB5ZWFyIGFuZCB0aGUgZ2FtZSB3YXMgbm90IGJyb2tlbiBhIGYgYXQgbGF1bmNoLiBQbGVhc2UganVzdCBsb29rIGF0IHRoZSA1IHBhZ2VzIGxvbmcgQW50aGVtIGJ1ZyBmaXhlcyBmcm9tIHRoZSBkYXkgNyBwYXRjaC4gNyBkYXlzIGFmdGVyIGx1bmNoIHRoZXkgZGVjaWRlZCB0aGF0IHRoZSBnYW1lIG5lZWRlZCAxMDArIGZpeGVzIGFuZCBpdHMgc3RpbGwgc2hvcnQgb2YgMTAwIGFub3RoZXIgYnVnZml4ZXMsIGxldCBhbG9uZSB0aGUgaG9ycmlibGUgbWVudSBhbmQgdGhlIGxhY2sgb2YgYW55IFFvTCBmdW5jdGlvbnMuIApEZSBub21icmV1c2VzIHBlcnNvbm5lcyBvbnQgcHUgcHJlbmRyZSBsYSBwYXJvbGUgZXQgbm91cyBuZSBmZXJvbnMgcGFzIGljaSB1biBjb21wdGUgcmVuZHUgaW50Z3JhbCBxdWkgc2VyYWl0IGZhc3RpZGlldXguIExlIG1hbnF1ZSBkZSByYWN0aXZpdCBkZXMgZm9yY2VzIGRlIHBvbGljZSBzdWl0ZSAgdW4gYXBwZWwgYXUgMTcgYSB0IGRwbG9yLiBPbnQgdCBzaWduYWxzIGRlcyBwcm9ibG1lcyBkZSBudWlzYW5jZXMgc29ub3JlcyBsaWVzICBkZXMgcmVncm91cGVtZW50cyB0cnMgYnJ1eWFudHMgbGUgc29pciBydWUgTWFyY2FkZXQsIGRlcyBjb21tZXJjZXMgZW4gaW5mcmFjdGlvbiBzdXIgbGEgbGdpc2xhdGlvbiBlbiBtYXRpcmUgZGUgdmVudGVzIGQnYWxjb29sLCB1bmUgcmVjcnVkZXNjZW5jZSBkdSBwaG5vbW5lIGRlIHByb3N0aXR1dGlvbiAocHJpbmNpcGFsZW1lbnQgbmlncmlhbmUpLiAKVGhlIGNvbGRlc3Qgb25lcyB3ZXJlbid0IG11Y2ggZm9yIHRhbGtpbmcgb3IgYnJhZ2dpbmcgYWJvdXQgdGhlaXIgZXhwbG9pdHMgYmVjYXVzZSB3ZWxsLiAKSXQgc3VycHJpc2VzIHBlb3BsZSB3aG8gYXJlbiBmYW1pbGlhciBvciB3aG8gaGF2ZW4gaGFkIGEgbG90IG9mIGNvbnN0cnVjdGlvbiByZWxhdGVkIHdvcmsgZG9uZSBpbiB0aGUgcGFzdC5JIG5vdCB0YWtpbmcgc2lkZXMgaGVyZSBidXQgSSBsaWtlIHRvIHBvaW50IHRoYXQgb3V0LiBPbmNlIEkgaGVscGVkIGEgcGVyc29uIGNvbnRhY3QgYSBzdGF0ZSBsaWNlbnNpbmcgYm9hcmQgYWJvdXQgYSBjb250cmFjdG9yIHdobyB3YXMgc3VwcG9zZWRseSB0YWtpbmcgYWR2YW50YWdlIG9mIGFuIGVsZGVybHkgY2xpZW50LiAKMS4gTGFkeSBHYWdhIHdhcyBib3JuIE1hcmNoIDI4LCAxOTg2LiAyLiAKQnV0IHRoZXJlJ3Mgbm8gcmVhc29uIHRvIGRlc2lnbiBhbmQgcGljayBjb2xvcnMgdXNpbmcgdGhlIHJnYiBzcGVjdHJ1bSBpZiB5b3VyIGZpbmFsIGludGVudCBpcyBwcmludCEgTGlrZSB6ZXJvIHJlYXNvbiBhdCBhbGwuIApJbiBhY2FkZW1pYyBwYXJsYW5jZSwgImludmVzdG9ycyBjYW4gYmUgaXJyYXRpb25hbCIgYm9pbHMgZG93biB0byBhbiB1bmRlcnN0YW5kaW5nIG9mIHBzeWNob2xvZ3kuIApNb3NpbiBOYWdhbnQ6IEEgZ29vZCBudWtlIHdpdGggaGVyIHNraWxsLCBlc3BlY2lhbGx5IG9uY2UgeW91IGdldCBoZXIgc3BlY2lhbCBlcXVpcC4gTnVrZXMsIG9yICJiYW1ib29zLCIgYXJlIHByZXR0eSBuaWNoZSBpbiB0aGUgZmlyc3QgcGxhY2UsIGFuZCBhcmUgcHJpbWFyaWx5IHVzZWQgdG8gc2tpcCBpbnZ1bG4gYW5kIHNraWxsIHBoYXNlcyBvbiBib3NzZXMuIE5vdCBncmVhdCBmb3IgeW91ciBmaXJzdCBSRkhHLgpUaGUgYWdncmVzc2l2ZW5lc3Mgb2YgdGhlIGNhbmNlciwgbm90IGp1c3QgdGhhdCBpdCBiZWVuIGRldGVjdGVkIGVhcmx5LCBpcyB0aGUgcmVhbCBxdWVzdGlvbi4gSWYgaXQgYSBzbG93IGRldmVsb3BpbmcgY2FuY2VyLCB5b3UgbWlnaHQgbm90IG5lZWQgdG8gd29ycnkgYWJvdXQgaXQgYmVjYXVzZSB5b3UgZGllIG9mIG90aGVyIGNhdXNlcy4gClNvbWV0aW1lcyBwZW9wbGUgYWRkIGEgVSBhdCB0aGUgZW5kIG9uIHRoZSB3cmFuZ2xlcnMgdG8gc2hvdyB0aGF0IGl0IGlzIHRoZSBsb25nIHdoZWVsIGJhc2UgdmVyc2lvbiwgd2hpY2ggaXMgY2FsbGVkIHRoZSB1bmxpbWl0ZWQuClRoYXQncyBnb29kIHRvIGtub3cgYWJvdXQgdGhlIGthaWxocywgdGhhbmtzLiBJIGNvbnNpZGVyZWQganVzdCBnZXR0aW5nIGFub3RoZXIgQW5uZSBwcm8uIApIaXMgb25seSBjcmltZSB3YXMgdGhhdCBoZSB3YXNuIHRoZSB1bmRlcmRvZywgc28gdmlld2VycyBjaGVlcmVkIGZvciB0aGUgInJlYmVscyIsIHdoaWxlIHRoZSBnYWxheHkgaGFkIHRvIHN1ZmZlciBmb3IgdGhlaXIgZm9vbGlzaG5lc3MuIApTbyB5b3UgdGhpbmsgdGhhdCBwZW9wbGUgd2lsbCBiZSBldmVuIHRpZ2h0ZXIgdGhhbiB1c3VhbCBpbiB0aGlzIHNpdHVhdGlvbiwgYW5kIHlvdSB0aGluayB0aGF0IGEgYmFkIHRoaW5nIHNvbWVob3c/Pz8gSWYgcGVvcGxlIGFyZSBvdmVyZm9sZGluZyBpbiB0aGlzIHNwb3QsIHdoaWNoIGZpc2ggYWJzb2x1dGVseSB3aWxsLCB0aGF0IGlzIGhvdyB5b3UgZ2V0IHlvdXIgZWRnZSBoZXJlLiBJZiB5b3UgbG9vayBhdCB0aGUgZ3JhcGggSSBwb3N0ZWQsIHRoZSBtb25leSB5b3Ugd2luIGhlcmUgaXMgYWxtb3N0IGFsbCByZWRsaW5lLiBXaGVuIHBlb3BsZSBvdmVyZm9sZCBhdCB0aGVzZSBzdGFjayBkZXB0aHMsIHRoZSBibGluZHMgYW5kIGFudGVzIHRoZXkgZ2l2aW5nIHlvdSBpcyBhIGh1Z2UgcGVyY2VudGFnZSBvZiB5b3VyIHN0YWNrLiBUaGUgZmFjdCB0aGF0IGZpc2ggYXJlIGZhciB0aWdodGVyIHRoYW4gdGhleSBzaG91bGQgYmUgaGVyZSBpcyBleGFjdGx5IHdoeSB5b3UgY2FuIHN0aWxsIGhhdmUgYW4gZWRnZS4KTm90IGV2ZXJ5b25lIHdlYXJpbmcgYSBob29kaWUgd2lsbCBmaXQgdGhpcyBiaWxsLCBidXQgaXQgdHJ1ZSBtb3JlIG9mdGVuIHRoYW4gbm90LilZZWFoLCBJIHN0YXJ0ZWQgb3ZlciAxMCB5ZWFycyBhZ28gYW5kIEkgbmV2ZXIgc3RvcHBlZC4gCidkaXNiYW5kZWQnIGlzIG5vdCB0aGUgcmlnaHQgd29yZC4gClVubGlrZSBzaXR0aW5nIGRvd24gYXQgYSBwb2tlciB0YWJsZSB3aXRoIGZyaWVuZHMsIG9ubGluZSBwb2tlciBoYXMgYW4gYWRkZWQgZGltZW5zaW9uIHRoZXNlIGRheXMuIFRoZXJlIGlzIGEgbG90IG9mIHByZXNzdXJlIGZyb20gbWFueSBxdWFydGVycyB0byBtYWtlIG9ubGluZSBwb2tlciBpbGxlZ2FsLCBwYXJ0aWN1bGFybHkgaW4gdGhlIFVuaXRlZCBTdGF0ZXMuIApJIHJlYWxseSBzdXJwcmlzZWQgdGhhdCB0aGUgRk8gdHJhZGVkIGF3YXkgdHdvIGV4cGlyaW5ncyAgb25lIGEgc3RhcnRlciBhbmQgb3VyIG1haW4gc291cmNlIG9mIHNob290aW5nLCBhbmQgdGhlIG90aGVyIG91ciBtYWluIGRlZmVuc2l2ZSBzdG9wcGVyICBhbmQgd2Ugbm90IG9ubHkgYXZvaWRlZCBmYWxsaW5nIG9mZiB0aGUgbWFwIGJ1dCBldmVuIGFwcGVhciB0byBiZSBtYWtpbmcgc29tZSBzdHJpZGVzIGZvcndhcmQgZGVzcGl0ZSB0aGUgdHVybm92ZXIuVGhpcyBpcyB0aGUga2luZCBvZiBzdXJwcmlzaW5nIGltcHJvdmVtZW50IGFuZCBjb2hlc2lvbiB5b3UgaG9wZSB0byBzZWUgd2l0aCBDYXNleSBlbXBoYXNpcyBvbiBpbnN0ZWFkIG9mIHBsYXljYWxsaW5nLiAKQm9udXMgKDQweCB3YWdlcmluZyByZXF1aXJlbWVudCkuIEluIG9yZGVyIHRvIGJlIGVsaWdpYmxlIGZvciB0aGlzIG9mZmVyIHlvdSB3aWxsIG5lZWQgdG8gcGxhY2UgeW91ciBmaXJzdCBiZXQgd2l0aGluIDdkYXlzIG9mIG9wZW5pbmcgeW91ciBhY2NvdW50IGFuZCBtdXN0IGNvbnRhaW4gYXQgbGVhc3Qgb25lIHNlbGVjdGlvbiB3aXRoIG9kZHMgb2YgZXZlbnMgKDIuMDApIG9yIGdyZWF0ZXIuIApZb3UgZG8gdGhhdCBiaXQgYWdhaW4gQW1lcmljYT8gUHJldHR5IHBsZWFzZT8KQnV0IGV2ZW4gaWYgeW91IGFyZSBjb21taXR0ZWQgdG8gbGl2aW5nIGluIGEgc2luZ2xlIGZhbWlseSBob21lLCB0aGVyZSBhcmUgbWFueSB3YXlzIHRvIGhvdXNlIGhhY2suClRoZSBGb3J0IExhdWRlcmRhbGUgUG9saWNlIERlcGFydG1lbnQgc2F5cyB0aGV5IGFyZSByZWFkeSB0byBrZWVwIGJlYWNoZXMgc2FmZSBhbmQgZW5qb3lhYmxlIHdoaWxlIGVuZm9yY2luZyB0aGUgcnVsZXMuCllvdSBkb24gbmVlZCB0byBkb2RnZSBidWxsZXRzIGxpa2Ugd3JhaXRoIHdoZW4geW91IGFsd2F5cyBoYXZlIHRoZSBoaWdoIGdyb3VuZCwgYSBzYWZlIHJldHJlYXQsIGtleSBwb3NpdGlvbmluZyBpbiB0aGUgY2lyY2xlLCBhbmQgYSBxdWljayBwdXNoIHRvIG1vcCB1cCBsZWZ0b3ZlcnMuIApJIG9ubHkgaGF2ZSBhIGNvdXBsZSBvdmVyd2VpZ2h0IGZyaWVuZHMgdGhhdCBhcmUgYWN0dWFsbHkgbmljZS4gUmFyZWx5IGRvIEkgZXZlciBtZWV0IGFuIG92ZXJ3ZWlnaHQgZ2lybCB0aGF0IGlzIG5pY2UuIFRoZXkgYXJlIGp1c3Qgd2VhayBodW1hbiBiZWluZ3MgdGhhdCBkb24gaGF2ZSBzZWxmIGNvbnRyb2wgb3Igc2VsZiBlc3RlZW0uLiAKTGUgbWFnYXppbmUgVGxyYW1hLCBwYXJ0ZW5haXJlIGQnT21uaXZvcmUsIGEgcGFydGFnIGRzIGhpZXIgc2VzIGltcHJlc3Npb25zLCBhdXRvdXIgZGUgcXVlbHF1ZXMgbW90cyByZXByZXMuIApZb3Ugb2J2aW91c2x5IGhhdmUgYWJzb2x1dGVseSBubyBpZGVhIHdoYXQgdGhpcyBpcyBsaWtlIGluIHJlYWwgbGlmZSwgYnV0IGluIG15IHNtYWxsIGhvbWUgdG93biwgeW91IGNhbiBub3QgZ2V0IGFuIGFwYXJ0bWVudCBjaGVhcGVyIHRoYW4gJDg1MC9tb250aCB1bmxlc3MgeW91IGhhdmUgcm9vbW1hdGVzLiBUaGF0IGlzIHN0YXlpbmcgaW4gYSBkYW5nZXJvdXMsIHZpb2xlbnQsIGRydWcgcmlkZGVuIGFyZWEuIDQwIGhvdXJzIGF0IG1pbmltdW0gd2FnZSBpc24ndCBldmVuICQxMjU3IGEgbW9udGgsIHlvdSB3b3VsZG4ndCBldmVuIGJlIG1ha2luZyB0d2ljZSByZW50LCBhbmQgdGhhdCdzIGJlZm9yZSB0YXhlcy4gTm93IGNvdW50IGhlYWx0aCBjYXJlLCBmb29kLCB0cmF2ZWwgKGV2ZW4gaWYgaXQncyBieSBidXMpLCBjZWxsIHBob25lLiB5ZWFoIGl0J3Mgbm90IGhhcHBlbmluZy4gVGhhdCdzIHdoeSBJIHdvcmsgZnVsbCB0aW1lLCBJJ20gaW4gc2Nob29sLCBJIHF1YWxpZnkgZm9yIGZvb2Qgc3RhbXBzLCBBTkQgbXkgbW9tIGhhcyB0byBwYXkgYWxsIG9mIG15IHJlbnQsIGluc3VyYW5jZSwgYW5kIHBob25lIGJpbGwsIGFuZCBib3VnaHQgbWUgbXkgY2FyLiBJIG1ha2UgJDIgYWJvdmUgbWluaW11bSB3YWdlLiBJIHdvdWxkbid0IGhhdmUgYmVlbiBhYmxlIHRvIG1vdmUgb3V0IGlmIG15IG1vbSBkaWRuJ3QgY28gc2lnbiBmb3IgbWUgYmVjYXVzZSBvZiB0aGUgaW5jb21lIHJ1bGUuCldoeSBEbyBQb2tlciBSb29tcyBPZmZlciBTaWdudXAgQm9udXNlcz8KSW5zdGVhZCBvZiBsZWF2aW5nIHdlbGwgZW5vdWdoIGFsb25lLCB0aGUgZGVjaXNpb24gd2FzIG1hZGUgdG8gdXAgdGhlIGNhbGliZXIuIApXaGV0aGVyc3Bvb24gY29yZSBkZW1vZ3JhcGhpYyBpcyBnYW1tb25zIGFuZCB0aGV5IHNlbmRzIG91dCBtYWdhemluZXMgdG8gaG91c2Vob2xkcyBvbiB0aGUgZWxlY3RvcmFsIHJlZ2lzdGVyIGFzIGxpc3RlZCBhcyBoYXZpbmcgMSBvciBtb3JlIHBlcnNvbiBvZiBnYW1tb255IGFnZS4gSW4gYmV0d2VlbiB0aGUgb2ZmZXJzIGZvciBjdXQgcHJpY2UgZm9vZCBhbmQgYWxjaG9ob2wgYXJlIHBhZ2VzIGNvbnRhaW5pbmcgcHJvIEJyZXhpdCBwb2xpdGljcy4gSWYgeW91IHNlZSBhIFdoZXRoZXJzcG9vbnMgTWFnYXppbmUgdGhhbiB0YWtlIGEgbG9vayBhcyBpdCBpcyB3ZWlyZC4KSSBrbm93IEkgYmVlbiBvdXQgb2YgdGhlIGNvdW50cnkgZm9yIHF1aXRlIHNvbWUgdGltZSwgYnV0IEkgaGF2ZSB0aGlzIHNpbmtpbmcgZmVlbGluZyB0aGF0IHRoZSBjb2xsZWN0aXZlIElRIG9mIEFtZXJpY2FuIHBvbGl0aWNpYW5zIGhhcyBkcm9wcGVkIHByZWNpcGl0b3VzbHkgdGhpcyB5ZWFyLiAKSGUgc2F5cyBJJ20gdGhlIG9ubHkgd29tYW4gaGUncyBldmVyIG1ldCB3aG8gaGFzIGNhcnJpZWQgYSBjb3B5IG9mIFdhciBhbmQgUGVhY2UgaW4gaGVyIGhhbmRiYWcuIE1pbmQgeW91LCBpdCBtYWRlIHRoZSBoYW5kYmFnIGEgZ29vZCB3ZWFwb24gaW4gdGhlIGV2ZW50IG9mIGFuIGF0dGFjay4gTmV3c3BhcGVycyBvbiBUcmFpbnNXaGV0aGVyIGl0IGJlIG5ld3NwYXBlcnMgb24gdGhlIHRyYWluIGZyb20gQm91cm5lbW91dGggdG8gV2F0ZXJsb28sIG9yIG5ld3NwYXBlcnMgb24gdGhlIFVuZGVyZ3JvdW5kIGZyb20gUGljY2FkaWxseSB0byBLaW5nJ3MgQ3Jvc3MsIHRoZXJlIHdpbGwgYmUgbmV3c3BhcGVycy4gCkVjb25vbWljIHRpbWVzIGhhdmUgY2hhbmdlZCBidXQgdGhlIHN0cmVzcyB0ZXN0LCB0aGUgd2F5IGl0IHdhcyBwdXQgaW4gcGxhY2UsIHdhc24gYnVpbHQgdG8gY2hhbmdlIG5vIG1hdHRlciB3aGF0IHRoZSBlY29ub21pYyBjb25kaXRpb25zIGhlIHNhaWQuIERvIHRoaW5rIGl0IHRpbWUgdG8gcmV2aXNpdCBpdC4gCk15IG1vdGhlciB0b2xkIG1lIHRoYXQgdGhpcyB3YXMgbXkgcHJvamVjdCwgc28gSSBuZWVkZWQgdG8gZG8gdGhlIHdvcmsuIEkgdG9vayB1cCBteSBtaXNzaW9uIHByb3VkbHkuIEkgd2FzIGEgYmlnIGtpZCBub3cuIApMZXMgdHVkZXMgcmVzdGVudCBwZXUgbm9tYnJldXNlcy4gCk1yLiAKV2l0aCB0aGUgbW9kZXJuIG1hcnJpYWdlIGNhbWUgdGhlIHZlcnkgc2Vuc2libGUgaWRlYSB0aGF0IHdlIG91Z2h0IHRvIGZhbGwgbWFkbHkgaW4gbG92ZSB3aXRoIG91ciBzcG91c2UuIEFuZCBzdGF5IHRoYXQgd2F5LiBUaGVyZSB0aGUgcHJvYmxlbS4gCk1lIGluLiBJIG5lZWQgdG8gY2FsbCBteSBtb20uIApOZXdzQnJleGl0IGxhdGVzdDogTVBzIGRpc21pc3MgRVUgbGFzdCBkaXRjaCBiaWQgdG8gc2VjdXJlIGRlYWwgd2l0aCBjb25jZXNzaW9uIG9uIHRoZSBiYWNrc3RvcE1QcyBoYXZlIHN3aWZ0bHkgZGlzbWlzc2VkIHRoZSBFVSBsYXRlc3QgZWZmb3J0IHRvIHNlY3VyZSBhIEJyZXhpdCBkZWFsIGFmdGVyIHRoZSBibG9jIHNhaWQgdGhlIFVLIGNvdWxkIGJlIGFsbG93ZWQgdG8gbGVhdmUgdGhlIGN1c3RvbXMgdW5pb24gb2YgaXRzIG93biBhY2NvcmQgaW4gYSBiYWNrc3RvcCBzY2VuYXJpby4gCkFzIHRvIHdoYXQgSSBoYXZlIHRvIHdvcnJ5IGFib3V0LCBJIHdvdWxkIHRoaW5rIHRoZSBhbnN3ZXIgd291bGQgYmUgb2J2aW91czogSW5mYW50cy4gCk1vcmxvY2sgcHJldGVuZHMgdG8gYmUga2V0bywgZ2FpbnMgd2VpZ2h0IChvciB5byB5b3MpIGFuZCB0aGVuIGV2ZXJ5Ym9keSBlbHNlIGp1bXBzIGluIHRvIHNheSBob3cgdW5oZWFsdGh5IEtldG8gaXMuIE5ldmVyIG1pbmQgdGhlIHNjaWVuY2UgYmVoaW5kIGl0LiAKV2VubiBpY2ggenUgdmllbGUgb2RlciB6dSBzdGFya2UgYnVuZ2VuIG1hY2hlLCB2ZXJzcHJlIGljaCBlaW5lbiBTY2htZXJ6LiBadXIgWmVpdCBzaW5kIGVzIGRpZSBCbHV0dW5nZW4sIGRpZSB3aWVkZXIgc2VociBzdGFyayBzaW5kIHVuZCBtaWNoIHNlaHIgdm9yc2ljaHRpZyBiZWltIGJlbiBzZWluIGxhc3Nlbi4gV2VubiBpY2ggZWluIFplaWNoZW4gbWVpbmVzIEtycGVycyB3aHJlbmQgZGVzIGJlbnMgYmVyaHJlLCBrYW5uIGRpZSBCbHV0dW5nIHNjaG9uIHN0cmtlciB3ZXJkZW4sIHNvIGRhIG1laW5lIEVuZXJnaWUgbnVyIHNvIGRhaGluc2lja2VydC4gCkF0aGxldGljcyBhcyBhIHdob2xlIGFyZSBhIHBvc2l0aXZlIG91dGxldCB0aGF0IHRlYWNoZXMgbWFueSBjb29wZXJhdGl2ZSBza2lsbHMuIFRoZXJlIGFyZSBhIGZldyBjcmF6aWVzIGFtb25nIHNwb3J0cyBwYXJlbnRzIHRoYXQgd291bGQgbGVuZCB0aGVtc2VsdmVzIHRvIGFuIGFwdCBjb21wYXJpc29uLCBidXQgdGhlcmUgaXMgbGl0dGxlIG9mIHJlYWwgdmFsdWUgaW4gYmVhdXR5IHBhZ2VhbnRzIG9uIHRoZSB3aG9sZS4gVGhleSBhcmUgZXhwbGljaXRseSB0aGUgdmFsdWF0aW9uIG9mIHBoeXNpY2FsIGJlYXV0eSBpbiBhIGNvbXBldGl0aXZlIGVudmlyb25tZW50LiBXaGlsZSBpdCBuaWNlIHRvIGJlIHJlY29nbml6ZWQgZm9yIGhhdmluZyBhbiBhZXN0aGV0aWNhbGx5IHBsZWFzaW5nIGJvZHkgYW5kIGZhY2UsIGl0IGhhcmRseSBzb21ldGhpbmcgdGhhdCBoYXMgdGhlIGNhcGFjaXR5IHRvIHRlYWNoIGFueSBsaWZlIHNraWxscy4gU3BvcnRzLCBvbiB0aGUgb3RoZXIgaGFuZCwgY2FuIHRlYWNoIG1hbnkgc2tpbGxzLCBub3QgdG8gbWVudGlvbiBiZWluZyBnZW5lcmFsbHkgYSBoZWFsdGhpZXIgcGh5c2ljYWwgcHVyc3VpdC4KVGhlIGdvdmVybm1lbnQncyBjb3JydXB0aW9uIGVmZm9ydHMgaGF2ZSBub3QgYmVlbiBldmFsdWF0ZWQgYXMgZWZmZWN0aXZlLCBhY2NvcmRpbmcgdG8gc2V2ZXJhbCBzb3VyY2VzLCB3aGljaCBoYXMgYmVlbiBhdHRyaWJ1dGVkIHRvIGxheCBlbmZvcmNlbWVudCBvZiBhbnRpIGNvcnJ1cHRpb24gbGVnaXNsYXRpb24gYW5kIHRoZSBpbmVmZmVjdGl2ZW5lc3Mgb2YgYW50aSBjb3JydXB0aW9uIGFnZW5jaWVzLiAKQSBwcm9mZXNzaW9uYWwgcG9rZXIgcGxheWVyIHdhcyBraWxsZWQgZm9yIGhpcyBzdGFzaCBvZiB3aW5uaW5ncyBieSB0d28gTGV3aXNoYW0gbWVuIGFmdGVyIGJlaW5nIGx1cmVkIGludG8gYSBob25leSB0cmFwIGJ5IGEgeW91bmcgd29tYW4gaGUgbWV0IGF0IGEgY2FzaW5vLCBhIGNvdXJ0IGhlYXJkLgpXZSByZWFsbHkgd2FudCB5b3UgdG8gYmUgY29tZm9ydGFibGUgd2l0aCB1cyBhbmQgaXQgbWFrZXMgb3VyIGpvYnMgZWFzaWVyIGlmIHlvdSBhcmUgcmVsYXhlZCAoaWYgeW91J3JlIGNvbWZvcnRhYmxlLCB5b3UgcmVib29rIHRvbyEpLiBJdCdzIHN0cmFuZ2UgdGhhdCBoZSB3YXMgcHJldHR5IGRlY2VudCB3aXRoIGRyYXBpbmcgdGhlIGZpcnN0IGZldyB0aW1lcy4gClJlc3BlY3RpbmcgdGhlIGxhcmdlIGdhbWVzIHNlbGVjdGlvbiBmcm9tIDExIGRpZmZlcmVudCBwcm92aWRlcnMsIGZhc3Qgd2l0aGRyYXdhbHMgd2l0bmVzc2VkIGJ5IG1ham9yaXR5IG9mIHBsYXllcnMgYW5kIDI0LzcgY3VzdG9tZXIgc3VwcG9ydCB2aWEgbGl2ZSBjaGF0LCB0aGUgYmlnZ2VzdCBhZHZhbnRhZ2Ugb2YgY2hvb3NpbmcgTGVvIFZlZ2FzIHN0aWxsIGNvbWVzIGZyb20gaXRzIG1vYmlsZSBwbGF0Zm9ybS4gV2l0aCBhbiBpbXByZXNzaXZlIG51bWJlciBvZiBhbG1vc3QgNDAwIHNsb3RzIHRvIHBsYXkgb24gdGhlIGdvLCB0b2dldGhlciB3aXRoIGNsb3NlIHRvIDUwIHRhYmxlIGdhbWVzIGFuZCBhIGxpdmUgY2FzaW5vLCB0aGV5IGhhdmUgY2xlYXJseSBzaG93biB0aGUgZGVkaWNhdGlvbiB0byBiZSB0aGUgYmVzdCBtb2JpbGUgY2FzaW5vIG9wZXJhdG9yIG91dCB0aGVyZS4KSSB1c2VkIHRvIHdvcmsgYXQgYSBzdWl0IHNob3AsIGhlcmUgbXkgdHdvIGNlbnRzLiBDaGFyY29hbCBncmV5IG9yIG5hdnkgYXJlIGdvaW5nIHRvIGJlIHlvdXIgZ28gdG8gY29sb3JzLiAKVGhpcyBpbWFnZSBzYXlzICJLYSBjaHVuayBrbmVlcywgdGhlIGhvbm9yYWJsZSBncmVldGluZyIgKCwgICBoaXphIGtha2t1biwgZ28gYWlzYXRzdSkuIFRoZSBrYWtrdW4gcGFydCBpcyBhbiBvbm9tYXRvcG9laWEgZm9yIHNvdW5kcyBsaWtlIGdvaW5nIGZvcndhcmQgdGhlbiBiYWNrIHdoZW4geW91IHNsYW0gb24geW91ciBjYXIgYnJha2VzLiAiS2EgY2h1bmsga25lZXMiIChoaXphIGtha2t1bikgaXMgYSBwcmFuayBKYXBhbmVzZSBzY2hvb2wgY2hpbGRyZW4gcGxheSBvbiBlYWNoIG90aGVyIHdoZXJlIHlvdSBzdGFuZCBiZWhpbmQgc29tZW9uZSBhbmQgc3VkZGVubHkgYmVuZCB5b3VyIGtuZWVzIHNvIHRoYXQgeW91ciBrbmVlcyBmb3JjZSB0aGVpcnMgdG8gYmVuZCB1bmV4cGVjdGVkbHkgYW5kIHRoZXkgZmFsbCBkb3duLiAKV2VudCB0byBxdWl0ZSBhIGZldyBTdGF0ZXMsIGJ1dCBhdCBteSBvd24gc2xvdyBwYWNlLCBzbyBub3QgYXMgZmFzdCBhcyB5b3UgdGhpbmsuIApUcmVhdG1lbnQgb2YgU29sdmVudCBCYXNlZCBBZGhlc2l2ZSBGYWN0b3J5Y2Fwc3VsaXRpcyBtYXkgYWJzb3JiIG1hc3NhZ2UsIGFjY3VyYXRlIHRoZXJhcHksIGV4ZXJjaXNlIGFuZCBzdHJldGNoaW5nLCBhbnRpIGluZmxhbW1hdG9yeSBtZWRpY2F0aW9ucywgY2xhbW15IGNhbGVmYWN0aW9uIG9yIGNvcnRpc29uZSBpbmplY3Rpb25zLiBJbiBhdHRlbnVhdGUgY2FzZXMgd2hpY2ggZG8gbm90IGFja25vd2xlZGdlIHRvIGFjY2VwdGFibGUgdHJlYXRtZW50LCBhbmFwbGFzdHkgbWF5IGJlIHJlcXVpcmVkLiBJdCBpcyBpbXBvcnRhbnQgdGhhdCBhc3NheSBiZSBkb25lIGJlbmVhdGggdGhlIGFkbWluaXN0cmF0aW9uIG9mIGEgcGh5c2ljaWFuIHRvIGFkdmFuY2VkIG90aGVyIGFicmFzaW9uIHRvIHRoZSBzaG91bGRlci4KVGhlIGJvdHRvbSBvZiB0aGUgcHVtcGtpbiBzaG91bGQgYmUgZmxhdHRlbmVkIHNvIHRoYXQgaXQnbGwgc3RhbmQgdXByaWdodC4uIApBbW9uZyB0aGUgc291bmRzIHRoYXQgZGluIHJvdW5kIG1lIHdpdGhvdXQgZGlzdHJhY3RpbmcsIEkgaW5jbHVkZSBwYXNzaW5nIGNhcnJpYWdlcywgYSBtYWNoaW5pc3QgaW4gdGhlIHNhbWUgYmxvY2ssIGEgc2F3IHNoYXJwZW5lciBuZWFyIGJ5LCBvciBzb21lIGZlbGxvdyB3aG8gaXMgZGVtb25zdHJhdGluZyB3aXRoIGxpdHRsZSBwaXBlcyBhbmQgZmx1dGVzIGF0IHRoZSBUcmlja2xpbmcgRm91bnRhaW4sIHNob3V0aW5nIHJhdGhlciB0aGFuIHNpbmdpbmcuMS4gCk1yIFRvb2xlIHNhaWQgdGhlIE5TVyBMaXF1b3IgYW5kIEdhbWluZyBMb2NhbCBJbXBhY3QgQXNzZXNzbWVudCBSZXZpZXcgaGFkIHJlY2VudGx5IHN0b3BwZWQgcmVjZWl2aW5nIHB1YmxpYyBzdWJtaXNzaW9ucyBhbmQgaGUgd2lsbCBiZSByZXNwb25kaW5nIHRvIHRoYXQgcmV2aWV3ICJpbiBjb21pbmcgbW9udGhzIi4gVGhlIHJldmlldyBpcyBsb29raW5nIGF0IHRoZSBlZmZlY3RpdmVuZXNzIG9mIHRoZSBMb2NhbCBJbXBhY3QgQXNzZXNzbWVudCB3aGljaCBpc2NvbXBsZXRlZCB3aGVuIGEgY2x1Ym9yIGhvdGVsd2FudHMgdG8gaW5jcmVhc2UgdGhlIG51bWJlciBvZiBnYW1pbmcgbWFjaGluZXMgaW4gaXRzdmVudWUsIG9yIHdoZW4gYSBob3RlbCBvciBjbHViIGNoYW5nZXMgbG9jYXRpb24gICBpbiBtaW5pbWlzaW5nIGhhcm0gYW5kIHJlZHVjaW5nIHRoZSBudW1iZXIgb2YgZ2FtaW5nIG1hY2hpbmVzIGluIHRoZSBzdGF0ZSwgYW1vbmcgb3RoZXIgaXNzdWVzLiAKVGhlcmUgd2VyZSB0aHJlZSBtYWpvciBtaXNzaW9ucyBJIGhhZCBhIGNoYW5jZSB0byBjaGVjayBvdXQuIApTYXkgeW91IGJlZW4gYXNrZWQgYnkgYSBmYW1pbHkgbWVtYmVyIHdoYXQgeW91IGdldHRpbmcgeW91ciBESCBmb3IgQ2hyaXN0bWFzLiAKSW4gVmljdG9yaWEsIGxvY2FsIGNvdW5jaWxzIGFyZSBhbGxvd2VkIHRvIGluZmx1ZW5jZSB0aGUgcG90ZW50aWFsIGltcGFjdCB0aGF0IHBva2VyIG1hY2hpbmVzIHdpbGwgaGF2ZSBvbiBhIGNvbW11bml0eS4gVGhpcyBpcyBub3QgdGhlIGNhc2UgaW4gTlNXLgpBcyBhIGNvbW11bml0eSB3ZSBuZWVkIHRvIGRlbWFuZCB1cmdlbnQgcmVmb3Jtcy4gClRoZSBwbGFuZXQgaXMgZ29pbmcgdG8gd2FybSBmb3IgY2VudHVyaWVzIGlmIHdlIHN0b3BwZWQgQUxMIGVtaXNzaW9ucyB0b2RheS4gQmlvZGl2ZXJzaXR5IGlzIHBsdW1ldHRpbmcuIDU4JSBvZiB3aWxkbGlmZSBoYXMgZGllZCBzaW5jZSAxOTcwLCBsYXJnZWx5IGR1ZSB0byBmcmFnbWVudGF0aW9uIChzaW1wbHkgaW5oYWJpdGluZyB0aGUgbGFuZCkuIApBcnRpY2xlIGxpbmsgYmVsb3cuIApBcyBwYXJ0IG9mIHRoZSBldmVudCwgYXJlYSBtb3RvcmN5Y2xpc3RzIHdpbGwgc3RhcnQgb3V0IGF0IHRoZSBkZWFsZXJzaGlwIGFuZCBkcml2ZSB0byB2YXJpb3VzIHN0b3BzIGFsb25nIGEgcm91dGUuIApOZXd0IFNjYW1hbmRlciAoSHVmZmxlcHVmZikgY3JlYXRlZCB0aGUgV2VyZXdvbGYgUmVnaXN0ZXIuCkkgZG91YnQgYW55b25lIGluIEFCQkEgbWFkZSBpdCBvbmUuIFNhbWUgd2l0aCBtdXNocm9vbXMgb3IgTFNELiAKSSBmaW5kIG1lYW5pbmcgaW4gbWFueSB3YXlzLiBEbyBJIG1pc3MgYmVpbmcgImltcG9ydGFudCIgd2l0aCBteSBtZWV0aW5ncyBhbmQgc3Vib3JkaW5hdGVzPyBTdXJlLCBzb21ldGltZXMuIElmIHRoYXQgd2hlcmUgeW91IGZpbmQgeW91ciBtZWFuaW5nLCBoYXZlIGF0IGl0LCBidXQgbGV0IG5vdCBwcmV0ZW5kIGxpa2UgYSBjYXJlZXIgaXMgdGhlIG9ubHkgd2F5IGZvciBhIHdvbWFuIHRvIGJlIGZ1bGZpbGxlZC4gClRoZSBuZXcgR2lhbnRzIHBsYXllcnMuIFRoZSBHaWFudHMgbGluZXVwIGlzIHN0YXJ0aW5nIHRvIGxvb2sgbGlrZSB0aGUgN3RoIGlubmluZyBvZiBhIHNwbGl0IHNxdWFkIHNwcmluZyB0cmFpbmluZyBnYW1lLiBXaXRoIFRyYXZpcyBJc2hpa2F3YSwgUnlhbiBSb2hsaW5nZXIgYW5kIFBhYmxvIFNhbmRvdmFsIGNvbWluZyB1cCB0aGlzIHdlZWsgdG8gbWFuIGZpcnN0IGJhc2UsIHRoaXJkIGJhc2UgYW5kIHRoZSBiYWNrdXAgY2F0Y2hlciBwb3NpdGlvbiwgdGhlIGF1ZGl0aW9ucyBmb3IgMjAwOSBpcyBpbiBmdWxsIHN3aW5nLiBLdWRvcyB0byB0aGUgR2lhbnRzIGZvciBtYWtpbmcgdGhpcyBtb3ZlLiBDdXR0aW5nIEpvc2UgQ2FzdGlsbG8gYW5kIHNlbmRpbmcgSm9obiBCb3drZXIgZG93biB0byBGcmVzbm8gc28gaGUgY2FuIGZpZ3VyZSBvdXQgdGhlIHN0cmlrZSB6b25lIHdhcyBsb25nIG92ZXJkdWUuCkdhbWVzIHRlYWNoIHBsYXllcnMgaG93IHRvIGJlIG5pY2UKVGhpcyBtZWFudCBmbGVlaW5nIHRoZSBwb2xpY2UgcmlnaHQgYWZ0ZXIgZ2V0dGluZyBvdXQgb2YgYSBtdWx0aXBsYXllciwgc29tZXRoaW5nIEkgZGlkbiB3YW50IHRvIGRlYWwgd2l0aC4gCkNlIGNvbGxvcXVlIGEgcG91ciBvYmplY3RpZiBkZSBydW5pciBkZXMgc3BjaWFsaXN0ZXMgZHUgZG9tYWluZSBqdXJpZGlxdWUgZXQgZHUgZG9tYWluZSBtZGljYWwgcG91ciByZmxjaGlyIGF1eCBtY2FuaXNtZXMgZGUgZHRlY3Rpb24gZXQgZGUgdHJhaXRlbWVudCBkZXMgY2FzIGRlIHN5bmRyb21lIGRlIGJiIHNlY291LCBjJ2VzdCAgZGlyZSBsZSB0cmF1bWF0aXNtZSBjcm5pZW4gaW5mbGlnIHBhciBzZWNvdWVtZW50IGR1IGJiLiBMJ2FwcHJvY2hlIGp1cmlkaXF1ZSAoYXZlYyBsJ2FwcHJoZW5zaW9uIGV0IGxhIHNhbmN0aW9uIGRlIGNlIGNvbXBvcnRlbWVudCBpbmZyYWN0aW9ubmVsKSBldCBsJ2FwcHJvY2hlIG1kaWNhbGUgKGF2ZWMgbGEgZHRlY3Rpb24gZXQgbGVzIGNvbnNxdWVuY2VzIGRlIGNlIGNvbXBvcnRlbWVudCBwaHlzaXF1ZSB2aW9sZW50KSBzZXJvbnQgcGx1cyBwYXJ0aWN1bGlyZW1lbnQgcHJpdmlsZ2llcyBjb21wdGUgdGVudSBkZSBsZXVyIGltcG9ydGFuY2UgcG91ciBsYSBjb21wcmhlbnNpb24gZXQgbGUgdHJhaXRlbWVudCBkZSBjZSBjb21wb3J0ZW1lbnQuIEFsb3JzIHF1ZSBkZXMgYWZmYWlyZXMgZGUgYmIgc2Vjb3Ugc29udCByZ3VsaXJlbWVudCB0cmFpdGVzIHBhciBsZXMgdHJpYnVuYXV4LCBsZXMgY29ubmFpc3NhbmNlcyBzdXIgY2Ugc3luZHJvbWUgcmVzdGVudCBsYWN1bmFpcmVzLiBMZXMgdHVkZXMgcmVzdGVudCBwZXUgbm9tYnJldXNlcy4gRGFucyBsZSBkb21haW5lIGp1cmlkaXF1ZSwgZWxsZXMgc29udCBxdWFzaSBpbmV4aXN0YW50ZXMuIENlIGNvbGxvcXVlIHBlcm1ldHRyYSwgcGFyIHVuZSBhcHByb2NoZSBwbHVyaWRpc2NpcGxpbmFpcmUsIGRlIHJmbGNoaXIgZGUgZmFvbiBnbG9iYWxlIHN1ciBjZSBzeW5kcm9tZS4gSmFjcXVlcyBTSVpVTiwgUHJvZmVzc2V1ciwgU2VydmljZSBkZSBub25hdGFsb2dpZSBldCByYW5pbWF0aW9uIHBkaWF0cmlxdWUgICBQbGUgZGUgbGEgZmVtbWUsIGRlIGxhIG1yZSBldCBkZSBsJ2VuZmFudCwgQ0hSVSBCcmVzdApGb3IgeW91ciBzYWZldHkgYW5kIGJhc2ljIHBlYWNlIG9mIG1pbmQsIEkgcGxlYWRpbmcgd2l0aCB5b3UgdG8gaG9ub3IgeW91ciBmZWVsaW5ncyBvZiB2aW9sYXRpb24gYW5kIGRpc2d1c3QgYnkgY3V0dGluZyB0aGVzZSBwZW9wbGUgb3V0IG9mIHlvdXIgbGlmZS4gCkFjY29yZGluZyB0byBJdmFuIERlIExhIFJvc2EsIHRoZSBzaGlwJ3Mgc2VuaW9yIGRvY3RvciwgdGhlIGJpZ2dlc3QgaXNzdWUgaW52b2x2aW5nIGFsY29ob2wgaXMgd2hlbiB0aGUgc2hpcCBpcyBkb2NrZWQgaW4gQ296dW1lbCwgTWV4aWNvLiBNaXggYW4gYWZ0ZXJub29uIG9mIHVucmVndWxhdGVkIGRyaW5raW5nIG9uIGxhbmQgYXQgU2VvciBGcm9ncyB3aXRoIHRyb3BpY2FsIGhlYXQgYW5kIGEgZmV3IGdsYXNzZXMgb2YgTWV4aWNhbiB0YXAgd2F0ZXIsIGFuZCB5b3UndmUgZ290IHlvdXJzZWxmIGEgZ3VhcmFudGVlZCAiUFZJLiIuIApXZSBoYXZlIG1hZGUgSGlkZGVuIExlbnMgZm9yIFBsYXlpbmcgQ2FyZHMgaW4gRGVsaGkgSW5kaWEgYXZhaWxhYmxlIHRocm91Z2ggb3VyIHNob3AsIHlvdSBjYW4gYnV5IE9ubGluZSBvciBjYW4gZHJvcCBieSBvdXIgc2hvcCBpbiBERUxISS4gV2UgcHJvdmlkZSB5b3Ugd2l0aCB0aGUgbGF0ZXN0IHRlY2hub2xvZ3kgYW5kIGF0IHRoZSBDaGVhcGVzdCBQcmljZS4uIApUaGFua3MgZm9yIG5vdGhpbmcgbWEuIFRoZXJlIHdlcmUgaG9uZXN0bHkgc28gbWFueSBvZiB0aGVzZS4gSSdtIGdsYWQgSSdtIG9sZCBub3cgKDMzKSBhbmQgY2FuIGJlIHN1cmx5IGFuZCBjb2xkIHNvIHBlb3BsZSBkb24ndCBmZWVsIHRoZXkgY2FuIGp1c3QgaGFzc2xlIG1lLgpJZiB5b3UgdG90YWxseSBjb252aW5jZWQgdGhhdCBidXJuIGluIG1ha2VzIHlvdXIgaGVhZHBob25lcyBzb3VuZCBnb2QgbGlrZSwgeW91IGdvaW5nIHRvIGV4cGVyaWVuY2UganVzdCB0aGF0LiAKTWF5YmUgSSBzaGFsbCB0cnkgdGhpcy4gClNoZSBhbGxvd2VkIG1lIHRvIHBsYXkgd2l0aCBoZXIgcHVzc3kgYW5kIGZpbmdlciBoZXIgYW5kIHNoZSBGcmVuY2gga2lzc2VkIG1lLiBTaGUgbW92ZWQgb24gdGhlIGJsb3cgam9iLCB3aGljaCB3YXMgdmVyeSBnb29kLiAKQWx3YXlzIGRvIHRoZSBiZXN0IHRoYXQgeW91IGNhbiBub3Qgb25seSBmb3IgeW91cnNlbGYgYnV0IGZvciBvdGhlcnMuIApUaGUgdHdvIG1lbiBhcmUgY2hhcmdlZCB3aXRoIGFybWVkIHJvYmJlcnkgYW5kIGNvbnNwaXJhY3kgdG8gY29tbWl0IHRoYXQgY3JpbWUgaW4gYSBNYXJjaCAxMSBhcm1lZCByb2JiZXJ5IG9mIGEgcG9rZXIgZ2FtZSBpbiBhIFNhZ2luYXcgVG93bnNoaXAgYXBhcnRtZW50IHRoYXQgbGVkIHRvIG9uZSBvZiB0aGUgcm9iYmVycyBiZWluZyBzaG90IGFuZCBraWxsZWQuLiAKV2hhdCBPblRoaW5ncyB0byBkb0Zvb2QgYW5kIERyaW5rVGhlYXRyZSBhbmQgQXJ0c0ZhbWlseSBhbmQgS2lkc011c2ljIGFuZCBHaWdzVFYgR3VpZGVEaWdpdGFsIFByaW50IEVkaXRpb25TaGVsbGhhcmJvdXIgQ2l0eSBDb3VuY2lsIHdpbGwgc29vbiBvd24gdXAgdG8gMTAgcG9rZXIgbWFjaGluZXMgdGhyb3VnaCBUaGUgTGlua3MsIFNoZWxsIENvdmUgYWZ0ZXIgYSBtYWpvciBiYWNrZmxpcCBieSBjb3VuY2lsbG9ycy4gVHdlbHZlIG1vbnRocyBhZ28gRGVwdXR5IE1heW9yIFBhdWwgUmFua2luIGFyZ3VlZCB0aGUgY291bmNpbCB3YXMgbGVmdCB3aXRoICcnbm8gb3B0aW9uJycgYnV0IHRvIGFjdGl2YXRlIHRoZSAxMCBwb2tlciBtYWNoaW5lIGxpY2VuY2VzIGF0IHRoZSBnb2xmIGNsdWIgdG8gc3RlbSBvbmdvaW5nIGxvc3Nlcy4gCk1ha2UgRWRpcm5lIEFkcmlhbm9wbGUgYW5kIGhhbmQgaXQgdG8gQnVsZ2FyaWEuCk91ciBodW1vciBhbmQgb3V0Z29pbmcgcGVyc29uYWxpdGllcyBzaG91bGQgc2VydmUgdG8gYXR0cmFjdCBhbmQgZmlsdGVyIG90aGVycy4gQXMgRHIuIApDYW5sIENhc2lubyB1eWd1bGFtYWxhcm5hIGV2IHNhaGlwbGlpIHlhcGxhbiBzYXlmYWRhIHNhbmFsIHNwb3JsYXIgdmUgY2FubCBDYXNpbm8gb3l1bmxhcm4gZGEgTmV0ZW50IHZlIFNwb3J0cyBSYWRhciBzZXJ2aXNsZXJpbmkga3VsbGFubWEgb2xhbmFueiBidWx1bnV5b3IuVml0cmFiZXQgS2F5dCBGb3JtdUNhbmwgYmFoaXMgZmlybWFzIHRhcmFmbmRhbiB5ZWRpIGduIHlpcm1pIGRydCBzYWF0IGJveXVuY2EgYmFoaXMgc2VlbmVrbGVyaW5pbiBrdWxsYW5sbWFzbiBzYWxheWFuIHllbmkgZ2lyaSBhZHJlc2luZGUgY2FubCBveXVubGFyZGFuIHBhcmEga2F6YW5tYW56IHNhbGFueW9yLiAKV2Ugb2Z0ZW4gc2VlIGNvbW1lbnRlcnMgY29uZnVzZWQgYW5kIGZlZWwgdGhhdCBhbnkgY29tbWVudCBzaG91bGQgYmUgYWxsb3dlZCwgYmVjYXVzZSB0aGlzIGlzIGEgc3VwcG9ydCBncm91cC4gCkN1cCBob2xkZXJzIGFuZCBjaGlwIHRyYXlzIGFyZSBpbmNsdWRlZC4gCkNhcmQgdGF0dG9vcyBvZnRlbiBpbmNsdWRlIG90aGVyIHRhdHRvbyBzeW1ib2xzIHRoYXQgYXJlIGFzc29jaWF0ZWQgd2l0aCBzcGVjaWZpYyBjYXJkcy4gVGhlcmUgYXJlIHNldmVyYWwgZGlmZmVyZW50IHN5bWJvbHMgdGhhdCBhcmUgcGxhY2VkIHdpdGhpbiB0aGUgYWN0dWFsIGNhcmRzLiBCZWxvdywgeW91IGNhbiBmaW5kIGEgbGlzdCBvZiB0aG9zZSBzeW1ib2xzLgpPaCBteSBHb2QgSSBhbSBzbyBzb3JyeSBmb3Igd2hhdCB5b3UgaGF2ZSBiZWVuIHRocm91Z2ghIEkgbG9zdCBhIGJhYnkgZWFybGllciB0aGlzIHllYXIgYW5kIG15IGZhdGhlciwgd2hvIEkgdGhvdWdodCBodW5nIHRoZSBtb29uLCBzYWlkIHRvIG1lICJpdCB3YXMgZm9yIHRoZSBiZXN0Ii4gCkFsc28gVG93ZWwgRGF5LiBUaGlzIHdvdWxkIGJlIGFuIGFtYXppbmcgaDJnMiBnaWZ0LCBwYXJ0aWN1bGFybHkgd3JhcHBlZCBpbiBhICdEb24ndCBQYW5pYyEnIHRvd2VsLiAKVm91cyBwcm91dmV6IGRlcyBkaWZmaWN1bHRzIHBvdXIgcmRpZ2VyIHVuIGNvdXJyaWVyIGFkbWluaXN0cmF0aWYsIHVuIGN1cnJpY3VsdW0gdml0YWUsIHVuZSBsZXR0cmUgZGUgbW90aXZhdGlvbiwgb3UgZW5jb3JlIHBvdXIgcmVtcGxpciB1biBmb3JtdWxhaXJlID8gUGVuZGFudCBsb25ndGVtcHMgb24gcG91dmFpdCBhbGxlciB2b2lyIHVuIGNyaXZhaW4gcHVibGljIHBvdXIgcGFsaWVyIGNlIHByb2JsbWUuIE1haXMgY2UgbXRpZXIgYSBkaXNwYXJ1IG5vdXMgZGlyZXogdm91cy4gQydlc3Qgc2FucyBjb21wdGVyIHN1ciBsYSBiaWJsaW90aHF1ZSBkZSBsYSBHb3V0dGUgZCdPciBxdWkgcHJvcG9zZSBsZXMgc2VydmljZXMgZCd1biBjcml2YWluIHB1YmxpYyAhLiAKSG93ZXZlciwgYSBwcm9tbyBmb3IgdGhlIHNvbmcgbmV2ZXIgYXBwZWFyZWQsIGFuZCBpbiBKYW51YXJ5LCB0aGUgUG9rZXIgRmFjZSBoaXRtYWtlciByZWFjaGVkIG91dCB0byBmYW5zIHRvIGFwb2xvZ2l6ZSBmb3IgdGhlIHZpZGVvIGRlbGF5LCBpbnNpc3Rpbmcgc2hlIHdhcyBub3QgY29tcGxldGVseSBzYXRpc2ZpZWQgd2l0aCB0aGUgZmlsbSBiZWNhdXNlIHNoZSB3YXMgb25seSBnaXZlbiBhIHdlZWsgdG8gInBsYW4gYW5kIGV4ZWN1dGUiIGhlciBpZGVhcyBmb3IgdGhlIHNob290LgpJdCB3YXMgc29tZXdoYXQgaW5ldml0YWJsZSB0aGF0IEkgd291bGQsIGF0IHNvbWUgc3RhZ2UsIHBlZXIgaW5zaWRlIGl0cyBjb3ZlcnMuIApMZSBncm91cGUgZGUgdHJhdmFpbCBtaXMgc3VyIHBpZWQgcGFyIE90dGF3YSBwb3VyIHR1ZGllciBsYSBsZ2FsaXNhdGlvbiBkdSBjYW5uYWJpcyByZWNvbW1hbmRlIHF1ZSBsIG1pbmltYWwgcG91ciBhY2hldGVyIGR1IHBvdCBzb2l0IGZpeCAgMThhbnMuIApNYWtlIHN1cmUgdGhhdCB5b3UgaG9sZCB0aGUgcmF6b3IgaW4gYSB2ZXJ0aWNhbCBwb3NpdGlvbiwgYWRqYWNlbnQgdG8geW91ciBmYWNlLiBUcmltIHdpdGggYSBkb3dud2FyZCBtb3Rpb24sIHN0YXJ0aW5nIGZyb20gdGhlIHRvcC4uIApNYXliZSBub3QgdGhlIG5pY2VzdCwgYnV0IHRoaXMgaGFzIGhhZCB0aGUgZ3JlYXRlc3QgaW1wYWN0IG9uIG1lLiBBbiBlbGRlcmx5IEFzaWFuIHdvbWFuIHdhcyB3YWxraW5nIHBhc3QgbXkgaG9tZSB3aGVuIGEgc3VkZGVuIGRvd24gYnVyc3Qgb2YgcmFpbiBzdGFydGVkIHdpdGggbm8gZW5kIGluIHNpZ2h0LiAKV2l0aG91dCBnZXR0aW5nIGNhdWdodCB1cCBpbiB0b28gbWFueSBkZXRhaWxzIGxpa2UgcmVxdWlyZW1lbnRzIGZvciBsaWNlbnN1cmUsIGNlcnRpZmljYXRpb25zLCBhbmQgZWR1Y2F0aW9uIGluIGRpZmZlcmVudCBqdXJpc2RpY3Rpb25zIChhIHZlcml0YWJsZSBjbHVzdGVyZnVjayksIHlvdXIgYmVzdCBiZXQgaXMgdG8gbG9vayBhdCB0aGUgZW52aXJvbm1lbnQgYXJvdW5kIHRoZSB0aGVyYXBpc3Q6IHRoZWlyIGNsaWVudGVsZSwgcHJvZmVzc2lvbmFsIGFzc29jaWF0aW9ucywgb2ZmaWNlIGF0bW9zcGhlcmUsIGV2ZW4gcGVyc29uYWwgYXBwZWFyYW5jZS4gSWYgdGhleSB3b3JrIHdpdGggYSBzcG9ydHMgdGVhbSwgdW5pdmVyc2l0eSwgb3IgcGh5c2ljYWwgdGhlcmFweSBjbGluaWMsIHRoZXkgaGF2ZSBiZXR0ZXIgb2RkcyBvZiBiZWluZyBwcmV0dHkgZGVjZW50LiAKSXQgaXMgYSBibGVzc2luZyB0byBzZWUgeW91IGFnYWluLiBMZXQgaGF2ZSBjb2ZmZWUgYW5vdGhlciBkYXkgYW5kIGNhdGNoIHVwIG9uIGFsbCB0aGluZ3MgZ29pbmcgb24gaW4gb3VyIGxpdmVzLgpJIGxpa2UgSW50ZXJuZXQgVGV4YXMgSG9sZCdFbSBieSBNYXR0aGV3IEhpbGdlciBvciBHZXR0aW5nIFN0YXJ0ZWQgaW4gSG9sZCdFbSBieSBFZCBNaWxsZXIuIApUaGUgcG93ZXIgb2YgZ3Jhdml0YXRpb25hbCBmb3JjZSBoYXMgZ3JlYXQgZWZmZWN0IG9uIHRoZSBoaWdoIGdyb3VuZDsgdG9vIHdlYWssIGFuZCB0aGUgaGlnaCBncm91bmQgaG9sZHMgbm8gdHJhY3Rpb247IHRvbyBzdHJvbmcgYW5kIHRoZSBncm91bmQgYmVjb21lcyB0aGUgdHJ1ZSBlbmVteS4gRXhwZXJpbWVudGF0aW9uIGhhcyBwcm92ZW4gdGhhdCB0aGUgaGlnaCBncm91bmQgdHlwaWNhbGx5IGhvbGRzIHNpZ25pZmljYW50IHZhbHVlIGJldHdlZW4gLjggYW5kIDEuNCAgW0VhcnRoIEdyYXZpdGllc10uIEZyaWN0aW9uIGFsc28gcGxheXMgYSBzbWFsbCBwYXJ0IGluIGNhbGN1bGF0aW5nIHRoZSB2YWx1ZSBvZiB0aGUgaGlnaCBncm91bmQsIGFzIHlvdXIgYWJpbGl0eSB0byBjb25uZWN0IHdpdGggdGhlIGdyb3VuZCBhaWRzIHlvdXIgdGFjdGljYWwgYWR2YW50YWdlLgpBbGxlbiBwdXRzIHRoZSBsaWtlbGlob29kIG9mIHN1Y2Nlc3MgZm9yIEFiZSBwcm9ncmFtIGF0IGFib3V0IDMwJS4gSXMgYSBzaWduaWZpY2FudCBjaGFuY2UgdGhpbmdzIHdpbGwgc3RheSBhcyB0aGV5IGFyZSBub3csIGhlIHNheXMuIApJIGNoZWNrZWQgaW4gc3VwZXIgZWFybHksIGFuZCBzaW5jZSBJIDZmdCB0YWxsLCBJIGFza2VkIGZvciBhbiBleGl0IHJvdyBmb3IgZXh0cmEgbGVnIHJvb20gYW5kIG1hbmFnZWQgdG8gZ2V0IG9uZSBieSB0aGUgd2luZG93LiAKQ29tZSB3aXRoIG1lLiAKVG1mZmF3ICA3IHBvaW50cyAgc3VibWl0dGVkIDYgZGF5cyBhZ28KV29yayBmb3VuZCBvdXQgd2hlbiBzaGUgc3RhcnRlZCBib3Jyb3dpbmcgbW9uZXkgZnJvbSBjb3dvcmtlcnMgYW5kIGl0IG1hZGUgaXRzIHdheSB0byBvdXIgYm9zcy4KVGhlIGltYWdlIG9mIGhpbSBsaWZ0aW5nIGEgY2FyIGdvdCB0aGUgcG9pbnQgYWNyb3NzIGp1c3QgZmluZS4gSXQgd2FzIGxpa2VseSBtb3JlIHRvIGRvIHdpdGggdGhlIDgwIG9ic2Vzc2lvbiB3aXRoIE1lbiBvbmx5IGJlaW5nIGJhZGFzcyBpZiB0aGV5IGhhZCBidWxnaW5nIGJpY2Vwcy4gCkJ5IGV4dGVuc2lvbiBzaGUgaGFzIGVuZG9yc2VkIHRoZSBmb3JtZXIgYXR0b3JuZXkgZ2VuZXJhbCByZWZ1c2FsIHRvIG92ZXJydWxlIHRoYXQgZGVjaXNpb24uIEZvciB0aGUgZmxpcHNpZGUgb2YgcHJvc2VjdXRvcmlhbCBkaXNjcmV0aW9uIGlzIHByb3NlY3V0b3JpYWwgaW5kZXBlbmRlbmNlLCBoYWxsb3dlZCBieSBjZW50dXJpZXMgb2YgY29tbW9uIGxhdyBhbmQsIGFzIHRoZSBqdWRnZSB3cm90ZSwgYW5kIGZ1bmRhbWVudGFsIHRvIHRoZSBjcmltaW5hbCBqdXN0aWNlIHN5c3RlbS4gCihPbmx5IHlvdXIgbmFtZSBhbmQgbmVpZ2hib3Job29kIGFyZSBwdWJsaXNoZWQgd2l0aCB0aGUgbGV0dGVyLikgTGV0dGVycyBzaG91bGQgYmUgYXMgYnJpZWYgYXMgcG9zc2libGU7IHdoaWxlIHRoZXkgbWF5IGRpc2N1c3MgYW55IHRvcGljIG9mIGludGVyZXN0IHRvIG91ciByZWFkZXJzLCBwcmlvcml0eSB3aWxsIGJlIGdpdmVuIHRvIGxldHRlcnMgdGhhdCByZWxhdGUgdG8gc3RvcmllcyBjb3ZlcmVkIGJ5IFRoZSBCcm9va2x5biBQYXBlci4uIApUaGVyZSBpcyBhbHNvIHRoZSByaXNrIG9mIG11c2NsZSBhdHJvcGh5LCB3aGljaCBjYW4gYmUgcHJvYmxlbWF0aWMgZm9yIGEgd29tYW4ncyBvdmVyYWxsIGhlYWx0aCwgYnV0IGFsc28gZm9yIGhlciBsaWZlc3R5bGUgd2hlbiBzaGUgaGFzIGEgam9iIHRoYXQgaW52b2x2ZXMgYSBsb3Qgb2YgbW92aW5nIGFyb3VuZCwgb3IgYW4gYWN0aXZlIHRvZGRsZXIgYXQgaG9tZSBvciBldmVuIHRoZSBuZWVkIHRvIGJ1eSBhIGJhZyBvZiBkb2cgZm9vZCBhdCB0aGUgZ3JvY2VyeSBzdG9yZS4uIApZb3UgbWlnaHQgdGhpbmsgQXJlcyBsZWFkZXIgYWJpbGl0eSBvbmx5IGJlbmVmaXRzIGhpbXNlbGYsIGFuZCB3aGlsZSBvbiBwYXBlciBpdCBkb2VzLiB0aGF0IGluc2FuZWx5IGxhcmdlIEhQIHBvb2wgaXMgbW9yZSB0aGFuIGp1c3QgYSBzcG9uZ2UgZm9yIGhpbSwgaXQgYSBiaWcgZmF0IGhhcmQgdG8gZ2V0IHJpZCBvZiB0aHJlYXQgZm9yIHRoZSBlbmVteSB0ZWFtIHRoYXQgdGFrZXMgaGVhdCBvZmYgeW91ciB0ZWFtbWF0ZXMgd2hlbiB0YXVudHMgYXJlbiB1cCwgb3IgdGhlIGVuZW15IGhhcyBUcnVlc2lnaHQuCk15IG5hbWUgaXMgSmFjayBXZWJiZXIuIEkgaG9zdCBhIHBvcHVsYXIgdHYgc2hvdyBhbmQgYmxvZyBjYWxsZWQgTGVnZW5kcy4gVG9kYXkgSSBhbSBvdXQgZ2F0aGVyaW5nIHRoZSBtYW55IHN0b3JpZXMgc3Vycm91bmRpbmcgdGhlIHNob2UgdHJlZSBsZWdlbmQuIApGcmVlIGRvd25sb2FkLiA5IEZlYiAyMDE2ICAgNSBtaW4gICBVcGxvYWRlZCBieSBTdXBlckdhbWVSb2NrZXRIZXJlIGlzIGEgbmljZSBxdWljayB0dXRvcmlhbCBvbiBob3cgdG8gaW5zdGFsbCBHSDMgb250byB5b3VyIFBDIGNvbXBsZXRlbHkgZnJlZS4gQ29tbWVudCBpZiAuIApUaG9zZSB0d28gY293cyB0cmFtcGxlZCBhbmQgY3J1c2hlZCB0aGUgYmVhciBzbyBiYWQgdGhhdCBpdCBoYWQgdG8gdGFrZSBvZmYgZm9yIGl0cyBsaWZlIGJlZm9yZSB0aG9zZSBjb3dzIGF0dGVtcHRlZCBtdXJkZXIgb24gaGltLiAKUGVvcGxlIHN0aWxsIG93ZSBoZWF2eSB0YXggZmluZXMgYW5kIGFyZSBmYWNpbmcgbW9uZXkgbGF1bmRlcmluZyBjaGFyZ2VzLiAKIkl0IHdpbGwgbm90IHJlIG9wZW4sIiBoZSBzYWlkLiAiSSB3b3VsZCBiZSByYXRoZXIgZG93biBoZXJlIHNheWluZyBzb21ldGhpbmcgZWxzZSBpbnN0ZWFkIG9mIHRlbGxpbmcgcGVvcGxlIHRoZXkgaGF2ZSBsb3N0IHRoZWlyIGpvYnMuIiBUaGUgNDAgam9icyB0byBnbyBhcmUgYSBjb21iaW5hdGlvbiBvZiBmdWxsIHRpbWUsIHBhcnQgdGltZSBhbmQgY2FzdWFscy4gClNoZSBoYXMgYmVlbiBmZWVsaW5nIGJhZCBhYm91dCBob3cgaGVyIHNraW4gaXMgbG9va2luZyBhbmQgSSB3YW50IGhlciB0byBmZWVsIGxvdmVkLCBhbmQgaGVyIHNraW4gbm91cmlzaGVkLiBJIGFtIHRoaW5raW5nIEkgb3JnYW5pemUgYSBzcGEgZGF5IGZvciBoZXIgaW4gb3VyIGJhdGhyb29tIGFuZCBzdXJwcmlzZSBoZXIuIEJ1dCBJIGRvbiBrbm93IHRoZSBmaXJzdCB0aGluZyBhYm91dCBmYWNlIG1hc3NhZ2VzIG9yIGZhY2lhbHMgb3Igc2tpbiBjYXJlLiAKSGUgd2FzIGJleW9uZCBmdWNrZWQgdXAgYW5kIGhpcyBhZHVsdCBsaWZlIHNob3dlZCB0aGF0LiBIZSBsaXZlZCBpbiBhbiBhbXVzZW1lbnQgcGFyay4gSGUgbGlrZWQgdG8gaGFuZyBvdXQgd2l0aCBjaGlsZHJlbi4gCkF0IHRoZSBzYW1lIHRpbWUgSSBhY2NlcHQgdGhlIGZhY3QgdGhhdCB0aGUgbW9kcyBjYW5ub3QgZWZmZWN0aXZlbHkgdHJ1dGggcG9saWNlLiBUaGV5IG5vdCBnb3Zlcm5tZW50IGJhY2tncm91bmQgY2hlY2tlcnMuIFNvIHVsdGltYXRlbHkgaXQgYSBtYXR0ZXIgb2YgdGhlIHN1YiBoYXZpbmcgYmVjb21lIHNvIHBvcHVsYXIgdGhhdCBpdCBzdGFydGVkIHRvIGVhdCBpdHNlbGYgd2l0aCBmaWN0aW9uLiBUbyB3aGljaCB0aGVyZSBpcyBubyBnb29kIHNvbHV0aW9uLiBFeGNlcHQgKHNocnVnKSB0byBsZWF2ZS4gQW5kIGZpbmQgc3VwcG9ydCBlbHNld2hlcmUuIFdoaWNoIEkgd2FzIHNhZCBhYm91dCBidXQgaXQgdWx0aW1hdGVseSBnYXZlIG1lIG1vcmUgcGVhY2UuCkEgcmVjYXAgb24gdGhlIHNpZGUgbHlpbmcgcG9zaXRpb24gZm9yIHByZWduYW5jeSBtYXNzYWdlIGNhbiBiZSBmb3VuZCBIRVJFLgpCYXJ0ZWwgcGFja3MgdXAgYW5kIGdvZXMgaG9tZS4uIApJbiB0aGUgZnV0dXJlIHRoZXJlIHdvbid0IGJlIHNvdXJjZXMgeW91IHRydXN0IGJlY2F1c2UgeW91J3ZlIGVuc3VyZWQgdGhlaXIgcmVsaWFiaWxpdHksIHRoZXJlJ2xsIGJlIHNvdXJjZXMgeW91IHRydXN0IGJlY2F1c2UgdGhleSBzYXkgdGhpbmdzIHlvdSB3YW50IHRvIGJlbGlldmUuIFJlYWxpdHkgd2lsbCBiZSBhIG1hdHRlciBvZiBvcGluaW9uLgpNeSBUZW4gWWVhciBDaGFsbGVuZ2UKV2l0aCByZWdpb25hbGx5IGluc3BpcmVkLCBmYXJtIHRvIHRhYmxlIGN1aXNpbmVzIGZyb20gbG9jYWxseSBzb3VyY2VkIGluZ3JlZGllbnRzLiBMb29rIGZvciByZWdpb25hbCBiZWVycywgc3Bpcml0cyBhbmQgY29ja3RhaWxzLiAKQmllbiBxdWUgZGUgZmFvbiBnbG9iYWxlIGxlcyBhcHBsaWNhdGlvbnMgY3V0YW5lcyBwcnNlbnRlbnQgbW9pbnMgZGUgIGRhbmdlciAgcXVlIGwgaWwgbiBudWxsZW1lbnQgcXVlc3Rpb24gZCBhbGxlciAgbGEgaHVzc2FyZGUsIHB1aXNxdWUgdG91dGUgYXBwbGljYXRpb24gY3V0YW5lIGRvaXQgcHJvY2RlciBkIHJmbGV4aW9uICB0cmF2ZXJzIGxhcXVlbGxlIG9uIG5lIHBldXQgZmFpcmUgbCBkIGNlcnRhaW4gbm9tYnJlIGRlIGNyaXRyZXMgOiBkaWx1dGlvbiAob3UgcGFzKSwgZnJxdWVuY2UgZXQgZHVyZSBkZXMgYXBwbGljYXRpb25zLCB0eXBlIGRlIHBlYXUgKHByZW5kcmUgZW4gY29tcHRlIGxlIHBvdGVudGllbCBhbGxlcmdpc2FudCBkZSBjZXJ0YWluZXMgbW9sY3VsZXMgYXJvbWF0aXF1ZXMpLCBnZSwgY29uc3RpdHV0aW9uIGRlIGxhIHBlcnNvbm5lID8KUG9rZXIgcm9vbXMgY2FsY3VsYXRlIGluZGl2aWR1YWwgY29udHJpYnV0aW9uIHVzaW5nIGVpdGhlciB0aGUgc2hhcmVkIG9yIGNvbnRyaWJ1dGVkIG1ldGhvZC4gCk5vdGUgZnJvbSB0aGUgb25saW5lIHBhcnQuIEkgcmVjZW50bHkgc3dpdGNoZWQgdG8gUGFydHlQb2tlciBhbmQgaXQgc2VlbXMgdGhhdCB3aGVuIEkgdXNlIHRoZSAodmVyeSBhbm5veWluZykgcmVwbGF5ZXIgb24gUFAgSSBzdGlsbCBjYW50IHNlZSB0aGUgbXVja2VkIGNhcmRzIG9mIHRoZSBvcHBvbmVudC4gSSBrbm93IHRoaXMgaXMgcHJvYmFibHkgaG93IHRoZSBjbGllbnQgcnVucyBmb3IgZXZlcnlib2R5IGJ1dCB3aGF0IGFyZSBwZW9wbGVzIHRob3VnaHRzIG9uIHRoaXM/IFN1cmUgaXRzIHNpbWlsYXIgdG8gbGl2ZSBwb2tlciBJIGd1ZXNzIGJ1dCBhcmUgdGhlcmUgbm90IHJ1bGVzIGluIHBsYWNlIGZvciB5b3UgdG8gYmUgYWJsZSB0byB2aWV3IGlmIHlvdSBwYWlkIGhpbSBvZmY/IFRoYW5rcwpNTVRlcnMgaGF2ZSBzdHVkaWVkIHRoZSBpc3N1ZSBhbmQgdG8gc2F5IHRoYXQgdGhleSBpZ25vcmUgaXQgaXMgcmlkaWN1bG91cy5PSywgd2VsbCB0aGV5IGRvIHRyeSBwcmV0dHkgaGFyZCB0byB0YWxrIGFyb3VuZCBpdC4gVGhlIHJlbGF0aXZlIGZyZXF1ZW5jeSBvciByYXJpdHkgb2YgYW4gZXZlbnQgaGFzIG5vdGhpbmcgdG8gZG8gd2l0aCB0aGUgbmVlZCB0byBoYXZlIGEgdGhlb3J5IHRvIGV4cGxhaW4gaXQuQW55d2F5cyB0aGF0IGRvZXMgc291bmQgbGlrZSBpdCBhIG1vbmV0YXJ5IHBoZW5vbWVub24uIApDYW4gYSBwaWVjZSBvZiBmb2FtIHJlcGxhY2UgYSBtYXNzYWdlIHRoZXJhcGlzdApZb3UndmUgYWxyZWFkeSBsb3N0IGEgdmFsdWVkIGNvdXNpbiBhcyBicmlkZXNtYWlkIGJlY2F1c2Ugc2hlIGRpZG4ndCB3YW50IHRvIGdldCBpbnZvbHZlZCBpbiBmYW1pbHkgZHJhbWEuKSBEZWZpbml0ZWx5IGFzayBtdW0gZm9yIHlvdXIgZG9jdW1lbnRzIGJ1dCBpZiBzaGUgZ2V0cyBhbGwgZGl0aGVyeSBvciBkZWZlbnNpdmUsIGRvbid0IGFyZ3VlL3JlYXNvbiB3aXRoIGhlciwganVzdCBvcmRlciBkdXBsaWNhdGVzICAgaXQncyBub3QgZGlmZmljdWx0IG9yIGV4cGVuc2l2ZSwgZXhjZXB0LiAKSXQgd2FzIGFsd2F5cyBhIGNvbXBldGl0aXZlIGdhbWUgcGxheWVkIGF0IGhlciBtb3RoZXJzJyBob3VzZSBvbiB3ZWVrZW5kcyBhbmQgaXQgY291bGQgZ28gb24gZm9yIGV0ZXJuaXR5IGJ1dCB0aGVyZSdzIGEgbG90IG9mIHBsYXllcnMgYXQgdGhlIHRhYmxlIG5vdyB3YWl0aW5nIGZvciB0aGVpciBiZWxvdmVkIHNpc3RlciBpbmNsdWRpbmcgSmVhbiwgRG9yb3RoeSwgV2FsdGVyLCBHb3Jkb24sIEtlbm55LCBhbmQgVGVkLiBXZSBiZWxpZXZlIE1vbSBnb3QgZGVhbHQgYSByZWFsbHkgZ29vZCBoYW5kIGFuZCBzaW5jZSBpdCdzIHdpbm5lciB0YWtlcyBhbGwgc2hlIGhhZCB0byB0YWtlIHRoZSBzZWF0IHRvIGNsYWltIHRoZSBwcml6ZS4gQXMgYSBwZXJzb24gd2hvIGRpZG4ndCBnZXQgZGVhbHQgYW4gZWFzeSBoYW5kIGluIGxpZmUsIHNoZSB3YXMgcmVtYXJrYWJsZSBpbiB0dXJuaW5nIGEgaGFuZCBvZiBzcGFkZXMgaW50byBkaWFtb25kcy4gCldoYXQgaXMgU3ludGhldGljIE1hcmlqdWFuYQpDYXJsb3NtYXRlb3QxOSAgIDk2NyBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ28KSW4gMTk3OSwgU3VzYW4gU2Nod2FyeiB3YXMgc2hvdCBhbmQgc3RyYW5nbGVkIGluIGhlciBob21lIGluIFNub2hvbWlzaCBDb3VudHksIDE1IG1pbGVzIG5vcnRoIG9mIFNlYXR0bGUuIFRoZSBjYXNlIHdhcyBhbiBpbnN0YW50IGRlYWQgZW5kLiAKU2hlZXQgeW91ciBhaXJmb2lsIGZyb20gdGhlIGxlYWRpbmcgZWRnZSBiYWNrIHRvIGF0IGxlYXN0IHRoZSBzcGFyIHRvIGNyZWF0ZSBzb21lIHRvcnNpb25hbCByaWdpZGl0eSBhbmQgbWFpbnRhaW4gdGhlIHByb2ZpbGUuLiAKRHJpbmtpbmcgcmVndWxhciBtaWxrIHdpbGwgbm90IG9ubHkgZ2l2ZSBraXR0ZW5zIGRpYXJyaGVhLCBidXQgd2lsbCBhbHNvIGNhdXNlIHRoZW0gdG8gc2xvd2x5IHN0YXJ2ZSB0byBkZWF0aCBpZiB0aGVpciBkaWV0IGlzbid0IHByb3Blcmx5IHN1cHBsZW1lbnRlZCBbc291cmNlOiBLaXR0ZW4gUmVzY3VlXS4gVGhlIHJhdGlvIG9mIGNhc2VpbnMgYW5kIHdoZXkgaW4gY293J3MgbWlsayBpcyBub3doZXJlIG5lYXIgc3VmZmljaWVudCB0byBzdXBwb3J0IGEgZ3Jvd2luZyBraXR0ZW4gW3NvdXJjZTogRnJpZXNdLiAKVGhlcmUgYSB3aW5lIGFuZCBjaG9jb2xhdGUgZmFpciBuZXh0IHdlZWtlbmQgYW5kIEkgc2VudCBpdCB0byBteSBodXNiYW5kIGFsbCBleGNpdGVkIGxpa2UgaGV5LCB0aGlzIGxvb2tzIGxpa2Ugc29tZXRoaW5nIGZ1biB0byBkbyEgQW5kIHRoZW4gSSByZXZpZXdlZCB0aGUgdmVuZG9yIGxpc3QuIFllYSB0aGVyZSBwbGVudHkgb2YgbGVnaXQgdmVuZG9ycywgYnV0IGFmdGVyIEkgZ290IHRvIG15IDh0aCBNTE0gYmVmb3JlIEkgcGFzc2VkIHRoZSAiTSBvbiB0aGUgYWxwaGFiZXRpY2FsIHZlbmRvcnMgbGlzdCwgSSBqdXN0IHNlbnQgaGltIGEgZGVqZWN0ZWQgIm5ldmVybWluZC4gCkFuZCBpdCBoYXMgcHJvZ3JhbW1lZCB0aGVtIHRvIHRoaW5rIHRoYXQgYXR0cmFjdGl2ZSB0b28uIApTdHVkZW50cyBjYW4gY29udGFjdCB0aGUgbnVyc2UgdmlhIHRoZSBzZWN1cmUgcGF0aWVudCBwb3J0YWwgb3IgYnkgcGhvbmUuVGhlIEFzaGUgQ2VudGVyIG9mZmVycyB3ZWxsIHdvbWFuIGV4YW1zLCBiaXJ0aCBjb250cm9sIGFkdmljZSwgcHJlZ25hbmN5IHRlc3RpbmcgYW5kIGNvdW5zZWxpbmcsIHNjcmVlbmluZyBmb3Igc2V4dWFsbHkgdHJhbnNtaXR0ZWQgaW5mZWN0aW9ucyBhbmQgZGlhZ25vc2lzIG9mIGd5bmVjb2xvZ2ljYWwgZGlzb3JkZXJzLlRoZSBBc2hlIENlbnRlciBvZmZlcnMgYSB2YXJpZXR5IG9mIGluIGhvdXNlIHNwZWNpYWx0eSBjbGluaWNzLiBJZiBuZWVkZWQsIGEgUHJpbWFyeSBDYXJlIFByb3ZpZGVyIChQQ1ApIHdpbGwgcmVmZXIgeW91ciBzdHVkZW50IHRvIGEgc3BlY2lhbGlzdCBmb3Igc3BlY2lmaWMgaGVhbHRoIGNvbmNlcm5zLiAKVGhlIGp1ZGdlIHRoZW4gdHVybmVkIHRvIHRoZSBpc3N1ZSBvZiB3aGV0aGVyIHRoZSBncm9zcyBuZWdsaWdlbmNlIHBlbmFsdGllcyBhc3Nlc3NlZCBieSB0aGUgQ1JBIHdlcmUgYXBwcm9wcmlhdGUuIFByaW9yIGp1cmlzcHJ1ZGVuY2UgaGFzIGRldmVsb3BlZCBhIG51bWJlciBvZiBmYWN0b3JzIHRoYXQgZGlzdGluZ3Vpc2ggYmV0d2VlbiBuZWdsaWdlbmNlIGFuZCBuZWdsaWdlbmNlLCBpbmNsdWRpbmc6IHRoZSBzaXplIG9mIHRoZSBvbWl0dGVkIGluY29tZSBjb21wYXJlZCB0byBhIHRheHBheWVyIGRlY2xhcmVkIGluY29tZSwgdGhlIG9wcG9ydHVuaXR5IGZvciBkZXRlY3RpbmcgdGhlIGVycm9yIGFuZCB0aGUgdGF4cGF5ZXIgYW5kIGludGVsbGVjdC4gd2FzIHBlcmhhcHMgdGhpcyBsYXN0IGZhY3RvciB0aGF0IHByb3ZlZCB0aGUgdGF4cGF5ZXIgcnVpbi4gVGhlIGp1ZGdlIHN0YXRlZCB0aGUgdGF4cGF5ZXIgYWNyb3NzIGFzIGEgaGlnaGx5IGludGVsbGlnZW50IGFuZCB3ZWxsIGVkdWNhdGVkIGluZGl2aWR1YWwgd2l0aCBhIG1hc3RlciBkZWdyZWUgaW4gcHVibGljIGhlYWx0aCBmcm9tIEVtb3J5IFVuaXZlcnNpdHkgYW5kIGEgYmFjaGVsb3Igb2YgbWVkaWNpbmUuIEhpcyB3b3JrIGV4cGVyaWVuY2UgYXMgYSBmaW5hbmNpYWwgYWR2aXNlciBpbmNsdWRlZCBwcm92aWRpbmcgdGF4IGFuZCBmaW5hbmNpYWwgYWR2aWNlLiBjcm9zcyBleGFtaW5hdGlvbiwgdGhlIHRheHBheWVyIHN0YXRlZCBoZSBoYWQga25vd2xlZGdlIG9mIHRoZSBhc3NvY2lhdGVkIHRheCBiZW5lZml0cyBhbmQgY29uc2VxdWVuY2VzIG9mIHRoZSB2YXJpb3VzIGZpbmFuY2lhbCBwcm9kdWN0cyBoZSBzb2xkLCBhbmQgYWNrbm93bGVkZ2VkIHRoYXQgcGF5bWVudHMgaGFkIHRoZSBwb3RlbnRpYWwgdG8gY2hhbmdlIGZyb20gbm9uIHRheGFibGUgdG8gdGF4YWJsZS4gRm9yIGV4YW1wbGUsIGhlIGtuZXcgaG93IHRheCBpbXBhY3RzIGxpZmUgaW5zdXJhbmNlIHByb2NlZWRzIGRpZmZlcmVudGx5IHRoYW4gbXV0dWFsIGZ1bmRzLgpVbmZvcnR1bmF0ZWx5IGZvciB0aG9zZSBvZiB1cyB3aG8gc3Vic2NyaWJlIHRvIHRoaXMgb3V0bG9vaywgcGh5c2ljYWwgYWN0aXZpdHkgaXMgdGhlIG1vc3QgZWZmZWN0aXZlIHdheSB0byBtYWludGFpbiBhIGhlYWx0aHkgYm9keSBhbmQgbWluZC4gUHJldmVudGlvbiBvZiBoeXBlcnRlbnNpb24sIGhlYXJ0IGRpc2Vhc2UsIHR5cGUgSUkgZGlhYmV0ZXMsIG9zdGVvcG9yb3NpcyBhbmQgZGVwcmVzc2lvbikgYmVnYW4gdG8gYmUgdGFrZW4gc2VyaW91c2x5IGluIHdlc3Rlcm4gc29jaWV0eSBvbmx5IHRvd2FyZHMgdGhlIGVuZCBvZiB0aGUgcHJldmlvdXMgY2VudHVyeS4gCkkgYXZlcmFnZWQgYWJvdXQgNSA2ayBuZXQgYSBtb250aCB3aGljaCBpcyBoaWdoZXIgdGhhbiBteSBmdWxsIHRpbWUgam9iLiBJIHN0aWxsIGRlY2lkZWQgdG8gc3RhcnQgbXkgam9iIGFueXdheSBiZWNhdXNlIEkgdGhpbmsgaXQncyBtb3JlIHZhbHVhYmxlIHRvIGdyaW5kIG9uIHRoZSBzaWRlLCBncm93IG15IGJhbmtyb2xsLCBhbmQgbW92ZSB1cCBzdGFrZXMgYmVmb3JlIGdvaW5nIGZ1bGwgdGltZS4gSSB3aWxsIGV2YWx1YXRlIGFnYWluIGlmIEkgbW92ZSB1cCB0byA1MDBOTCAxa05MIGFuZCBzZWUgaWYgdGhhdCdzIHRoZSBsaWZlc3R5bGUgSSB3YW50LiAKVGhlIHB1YmxpY2F0aW9uIG9mIHRoaXMgaW5mb3JtYXRpb24gZG9lcyBub3QgY29uc3RpdHV0ZSB0aGUgcHJhY3RpY2Ugb2YgbWVkaWNpbmUsIGFuZCB0aGlzIGluZm9ybWF0aW9uIGRvZXMgbm90IHJlcGxhY2UgdGhlIGFkdmljZSBvZiB5b3VyIHBoeXNpY2lhbiBvciBvdGhlciBoZWFsdGggY2FyZSBwcm92aWRlci4gQmVmb3JlIHVuZGVydGFraW5nIGFueSBjb3Vyc2Ugb2YgdHJlYXRtZW50LCB0aGUgcmVhZGVyIG11c3Qgc2VlayB0aGUgYWR2aWNlIG9mIHRoZWlyIHBoeXNpY2lhbiBvciBvdGhlciBoZWFsdGggY2FyZSBwcm92aWRlci4uIApPZiBjb3Vyc2UsIHRoZXkgd291bGQgaGF2ZSB0byBjb25zaWRlciB1c2VyIGV4cGVyaWVuY2UgYW5kIFVJIGludm9sdmVkIHdpdGggY2hvb3NpbmcgdGhlc2Ugb3B0aW9ucywgc28gdGhlIGVmZm9ydCBpcyBub3QgbWluaW1hbCwgYnV0IGJlaW5nIGFibGUgdG8gaGF2ZSBzZXBhcmF0ZSBhcHBlYXJhbmNlcyBwZXIgY2xpZW50IHNob3VsZCBuZXZlciBiZSBhbiBpc3N1ZS4uIAoyIFNlbmF0ZSBSZXB1YmxpY2FuLCBzYWlkIGEgcG90ZW50aWFsIGRlYWwgY291bGQgaW5jbHVkZSBVUyQxLjYgYmlsbGlvbiBmb3IgYm9yZGVyIHNlY3VyaXR5LCBzbGlnaHRseSBtb3JlIHRoYW4gRGVtb2NyYXRzIHdlcmUgb2ZmZXJpbmcgaW4gcmVjZW50IHdlZWtzLiAKRGlmZmVyZW50IGNpdGllcyBoYXZlIGRpZmZlcmVudCB1bmlxdWUgaG9tZWxlc3MgaXNzdWVzLiBXaGF0IG1pZ2h0IHN1cnByaXNlIHlvdSBpcyB0aGF0IG5hdGlvbmFsbHkgMzQlIG9mIGhvbWVsZXNzIGluZGl2aWR1YWxzIGFyZSBob21lbGVzcyBmYW1pbGllcy4gSW4gbXkgcGFydGljdWxhciBjaXR5LCBzdWJzdGFuY2UgYWJ1c2Ugb25seSBhY2NvdW50cyBmb3IgYWJvdXQgMTMlIHdoZXJlYXMgc3Vydml2b3JzIG9mIGRvbWVzdGljIHZpb2xlbmNlIG1ha2UgdXAgcm91Z2hseSAxMCUuIAoiSSBsb3ZlIHRoZSBmYWN0IHRoYXQgeW91J3ZlIGdvdCB0aGUgZnJlZWRvbSB0byBkbyB3aGF0ZXZlciB5b3Ugd2FudC4gVGhlcmUgYXJlIGEgbG90IG9mIHRoaW5ncyB0aGF0IHlvdSBjYW4gZG8gb3V0c2lkZSBvZiB5b3VyIHN0dWR5IHRpbWUuIEkgZG8gcXVpdGUgYSBiaXQgb2YgZmVuY2luZywgc28gdGhlIEZlbmNpbmcgU29jaWV0eS4gCkFsbW9zdCBhIHF1YXJ0ZXIgb2YgdGhlIHRpbWUsIGEgc2Fsb24gcGF0cm9uIGJ1eXMgYSBwYWlyIG9mIHNob2VzLCB3aGljaCBSYXdsaW5zIGNhbGxlZCBhICJob21lIHJ1bi4iIFRob3NlIHBhdHJvbnMgc3BlbmQgYWJvdXQgNjAgcGVyY2VudCBtb3JlIG9uIGZvb3R3ZWFyIHRoYW4gdGhleSBkaWQgYmVmb3JlIHRoZSBjb21wYW55IGFkZGVkIHRoZSBzYWxvbnMsIGhlIHNhaWQuLiAKRGllIG1laXN0ZW4gUmVrcnV0ZW4gd2VyZGVuIGltbWVyIHF1YXJ0YWxzd2Vpc2UsIGFsc28gT2t0IC8gSmFuIC8gQXByIC8gSnVsIGVpbmdlc3RlbGx0LCB1bmQgd2VubiBtYW4gc2ljaCB6YiBpbSBKdWxpIG9kZXIgSnVuaSBNdXN0ZXJuIGxzc3QsIHdpcmQgbWFuIGhjaHN0d2FocnNjaGVpbmxpY2ggaW0gT2t0b2JlciBlaW5nZXN0ZWxsdC4gMiBwb2ludHMgIHN1Ym1pdHRlZCAxIHllYXIgYWdvClNpbmNlIGhlIGNhbiBlYXNpbHkgY2hlY2sgc2hvdmUgNzcgMTAgcGx1cyBBMTBzcyB0byBBa3NzLCB3ZSBjYW5ub3QgZmluZCBhIGZvbGQgZm9yIDMwIGJiIGVmZmVjdGl2ZSBvbiB0aGUgZmxvcCB0byBtYW55IGNvbWJpbmF0aW9uIG9mIGhhbmRzIHRoYXQgd2UgYmVhdGluZyBhbmQgZXZlbiBjcnVzaGluZyByaWdodCBub3cuLiAKQXQgdGhlIGNhc2lub3MsIEJhbmEgdHJpZXMgdG8gc2NvcmUgJDEwLDAwMCB0byBzZWN1cmUgYSBzZWF0IGF0IHRoZSBXb3JsZCBTZXJpZXMgb2YgUG9rZXIuIEhlIHdpbnMgc29tZSBoYW5kcyBidXQgbG9zZXMgb3RoZXJzLCBpbmNsdWRpbmcgYSBmZXcgdG8gRGFkZHkgRHV2YWxsLCBhIHRvdWdoIG9sIGJpcmQgd2hvIG5ldmVyIGdpdmVuIGhpcyBib3kgYSBicmVhay4KVGhhdCdzIGV2ZW4gYmVmb3JlIHlvdSBjb25zaWRlciBKb3JkYW4gUmhvZGVzJyByZWxhdGl2ZSBpbmFjdGl2aXR5IGFzIFRlZW11IFB1a2tpIGNvbnRpbnVlcyB0byBjdXQgYSBzd2F0aGUgdGhyb3VnaCBDaGFtcGlvbnNoaXAgZGVmZW5jZXMuCkRheXMgbGF0ZXIsIGhlIGZlbGwgMzAgZmVldCBmcm9tIGEgcm9vZiBoZSB3YXMgd29ya2luZyBvbiwgYnJlYWtpbmcgaGlzIGJhY2suIApLYW1hciBwb2tlciBiaWFzYW55YSBwZXJpbmdrYXQgZGVuZ2FuIG1lbWVuYW5na2FuIHBlbWFpbiBwb2tlci4gCihGb3IgaW5zdGFuY2UgYSAkNSBjaGlwIGlzIHdvcnRoICQ1KS4gClNvbWUgc21hbGxlciBjb21tdW5pdGllcyBoYXZlIHRvdXJuZXlzIHdpdGggYXJvdW5kICQzMDAgdG8gd2luIGFuZCBvbmx5IDE1MCBwbGF5ZXJzLiBJZiBZb3UgYXJlIGEgZ29vZCB0b3VybmFtZW50IHBsYXllciB0aGVuIFlPdSBjYW4gc3RhcnQgYSBmcmVlIHBva2VyIGJhbmtyb2xsIGJ5IG9ubHkgcGxheWluZyBmcmVlIHBva2VyIHRvdXJuYW1lbnRzLiAKV2UgbG92ZWQgdGhlbSBidXQgd2VyZW4ndCBjbG9zZS4gV2UgcHJpb3JpdGl6ZWQgZnJpZW5kcyBhbmQgdGhleSB3ZXJlIGRvaW5nIGNvbGxlZ2UgYW5kIHN0YXJ0aW5nIGZhbWlsaWVzLiBOb3cgd2UgYXJlIGluIG91ciAzMHMgYW5kIHRoZXkgYXJlIGluIHRoZWlyIDQwcy4gCkhvdyB0byBJbmNyZWFzZSBZb3VyIEVhcm5pbmdzIGluIE9ubGluZSBQb2tlcgpOZXcgSmVyc2V5IFN1cGVyaW9yIENvdXJ0CkVpbmlnZSBBcm9tYXRoZXJhcGV1dGVuIGVtcGZlaGxlbiBkZXNoYWxiIGVpbiBlaW5mYWNoZXMgQmFzaXNsIGZyIGRpZSBHZWJ1cnQuIApBZ2FpbiB0aG91Z2gsIHBsZWFzZSByZW1lbWJlciB0aGUgcnVsZXMsIGFuZCBrZWVwIHRoZW0gaW4gbWluZCB3aGlsZSB5b3UgYnJvd3NlLiBJZiB5b3UgZG9uIGxpa2UgaG93IHRoaXMgc3VicmVkZGl0IGlzIHJ1biwga2VlcCBpbiBtaW5kIHRoYXQgdGhpcyBtZXRob2QgaGFzIHNlZW4gdXMgY29udGludWUgdG8gc3VjY2VlZCBhbmQgZ3JvdyBmb3IgeWVhcnMsIGFuZCBpc24gZ29pbmcgdG8gY2hhbmdlLCBzbyBhdCBsZWFzdCB0cnkgYW5kIG1ha2UgeW91ciBjb21wbGFpbnQgb3JpZ2luYWwuIApEcmVpIFJlc3RhdXJhbnRzIHNvcmdlbiBmciBkYXMgbGVpYmxpY2hlIFdvaGwgZGVyIEdzdGUuIFVybGF1YmVyIGtubmVuIHp3aXNjaGVuIEhhbGJwZW5zaW9uICB1bmQgZGVyIEFsbCBJbmtsdXNpdmUgVmVycGZsZWd1bmcgd2hsZW4uLiAKV2hlbiBwaG90b3N5bnRoZXRpYyBvcmdhbmlzbXMgYmVnYW4gc3Bld2luZyBveHlnZW4gaW50byB0aGUgYWlyLCBhIHBvaXNvbm91cyBnYXMsIGl0IGtpY2tlZCBvZmYgb25lIG9mIHRoZSBiaWdnZXN0IG1hc3MgZXh0aW5jdGlvbnMgb24gcmVjb3JkLiBXZSBkb24ndCBjb25zaWRlciB0cmVlcyBldmlsIGZvciB0aGF0LiBXZSBkb24ndCBjb25zaWRlciBiZWF2ZXJzIGV2aWwgZm9yIHJhemluZyBmb3Jlc3RzIHdpdGggdGhlaXIgYmFyZSB0ZWV0aCBhbmQgZmxvb2Rpbmcgb3RoZXJ3aXNlIG5pY2Ugc3RyZWFtcy4gV2UgZG9uJ3QgaG9sZCBjYXJpYm91IGFjY291bnRhYmxlIGZvciBhbGwgdGhlIGdyYXNzIHRyYW1wbGluZyBhbmQgZWF0aW5nIGluIHRoZSB0dW5kcmEgd2hpY2ggZHJhc3RpY2FsbHkgYWx0ZXJzIHRoYXQgbGFuZHNjYXBlLgo3KSBUaGUgbm9ybWFsIFdlc3Rlcm4gZGlldCBjb250YWlucyBsaXR0bGUgQUxBIFtmbGF4c2VlZCBvaWwsIGV0Yy5dLCBwcm92aWRpbmcgbGVzcyB0aGFuIDUwJSBvZiB0aGUgUkRBLgpIZSBhbHNvIGdvdCBpbnZvbHZlZCBpbiBwb2xpdGljcywgYmVjb21pbmcgYSBtZW1iZXIgb2YgdGhlIFNhbiBSYW1vbiBTY2hvb2wgQm9hcmQgaW4gdGhlIGxhdGUgMTk4MHMuIE1heW9yIEFicmFtIFdpbHNvbiBzYXlzIEVybmVzdCBjb3VsZCBydWIgcGVvcGxlIHRoZSB3cm9uZyB3YXkuICJBIGxvdCBvZiBwZW9wbGUgd2VyZSB2ZXJ5IHVuY29tZm9ydGFibGUgYXJvdW5kIEVhcm5lc3QsICIgTWF5b3IgV2lsc29uIHNhaWQuIApJIGFsc28gbm90IGdvaW5nIHRvIG5lZWQgdG8gZG8gdmFjdXVtIGZvcm1pbmcgd2l0aCB0aGVzZSBzaW5jZSB0aGV5IGJlIGRvbmUgdXNpbmcgcHJlc3MgZm9ybWluZywgd2hpY2ggaXMgbXVjaCBjaGVhcGVyIGZvciBtYWtpbmcgb25lIGl0ZW0gbWFueSB0aW1lcyBhcyBvcHBvc2VkIHRvIG1ha2luZyBtYW55IGl0ZW1zIG9uY2UuIApBIHRlbnQgbGlrZSB0aGUgRW5hbiBpcyBtdWNoIG1vcmUgZm9yZ2l2aW5nIHRoYW4gbW9zdCBVTCBzaGVsdGVycyBvZiBjb3Vyc2UuQ29uZGVuc2F0aW9uIGluIG15IGV4cGVyaWVuY2UgaGFzIG11Y2ggbW9yZSB0byBkbyB3aXRoIG91dHNpZGUgY29uZGl0b25zIGFuZCBteSBzaXRlIHNlbGVjdGlvbiB0aGFuIHdpdGggbXkgc2hlbHRlciBvciBpdHMgdmVudGlsYXRpb24gb3Bpb25zLiAKQ2VydGFpbiBwaWVjZXMgY2FuIGJlIGJsb2NrZWQgZnJvbSBtb3ZpbmcuIFRoZSBob3JzZSBtb3ZlIHRoZSBzYW1lIGFzIHRoZSBrbmlnaHQgYnV0IGNhbm5vdCBqdW1wIG92ZXIgcGllY2VzLCBhbmQgdGhlIGVsZXBoYW50IG1vdmVzIHR3byBzcGFjZXMgZGlhZ29uYWxseSBidXQgYWxzbyBjYW5ub3QganVtcCBvdmVyIHBpZWNlcy4gClRoZW4gSSB3b24gYSBmZXcgaGFuZHMgaGVyZSBhbmQgdGhlcmUuIEkgdGhvdWdodCBJIHBsYXllZCB3ZWxsIGJlY2F1c2UgSSB3YXMgYWJsZSB0byBpbmNyZWFzZSB0aGUgc21hbGwgcG90cyB3ZWxsIHdoZW4gSSBoYWQgYSBzdHJvbmdlciBoYW5kLiAKQWNjb3JkaW5nIHRvIHRoaXMgZ2VuaXVzJ3MgcmFudCwgUGhlbHBzICJyZWFsbHkgZGlkbid0IHdpbiB0aGF0IHJhY2Ugd2hlcmUgaGUgc3R1Y2sgaGlzIGhhbmQgb3V0IGF0IHRoZSBsYXN0IHNlY29uZCwiIGFuZCBoaXMgdGVhbW1hdGVzIGRpZCBtb3N0IG9mIHRoZSB3b3JrIGluIHRoZSByZWxheXMuIE9oLiAKVGhlIG9ubHkgZm9vZHMgdGhhdCB0YXN0ZSBnb29kIGFyZSB0aGUgb25lcyB0aGF0IGFyZW4gZ29vZCBmb3IgbWUuIEkganVzdCBoYWQgYSBidXJyaXRvIGZvciBsdW5jaCBhbmQgaXQgd2FzIGRlbGljaW91cy4gSG93IGRvIHlhbGwgbWFuYWdlIHRvIGdldCB5b3VyIHZlZ2dpZXMgYW5kIGZydWl0cz8KVGhlIGNvbXBldGl0aW9uIGlzIGhhcyBqdXN0IGJ5IHBhc3NlZCB1cy4gCkZyb20gYSBwcmFjdGljYWwgdmlldywgaXQgaXMgYWx3YXlzIGJldHRlciBmb3IgdGhlIHN0cmF0YSBjb3Jwb3JhdGlvbiB0byBtYWludGFpbiBhbmQgcmVwYWlyIGFueSBpdGVtcyB0aGF0IGNhbiBiZSBncm91cGVkIGluIHF1YW50aXRpZXMuIEl0IGlzIG11Y2ggbW9yZSBlY29ub21pY2FsIHRvIGhhdmUgb25lIGNvbnRyYWN0b3IgY2xlYW4gMTQyIGR1Y3RzIGFuZCB2ZW50cyBjb21wYXJlZCB0byBlYWNoIG93bmVyIGNvbnRyYWN0aW5nIHNlcGFyYXRlbHkuIFlvdXIgc3RyYXRhIGNvcnBvcmF0aW9uIGNhbiBhbHNvIGNvbmZpcm0gdGhlIHdvcmsgaGFzIGJlZW4gY29tcGxldGVkLi4gCkFub3RoZXIgbGVnYWwgYmF0dGxlIHBpdHMgdGhlIFNlbWlub2xlcyBhZ2FpbnN0IHRoZSBzdGF0ZS4gCkZyZWUgZ2FtZXMgYXJlIG9mZmVyZWQgYm90aCBpbiBjb21tb24gbGFuZCBiYXNlZCBjYXNpbm9zIGFsc28gaW4gb25saW5lIGNhc2lub3MuIFNsb3QgbWFjaGluZXMgYXJlIHF1aXRlIHN0cmFpZ2h0Zm9yd2FyZCwgaG93ZXZlciB5b3UgbmVlZCB0byBoYXZlIHRoZSB0ZWNobmlxdWVzIGFuZCBrbm93IHRoZSBzbG90IG1hY2hpbmUgc2VjcmV0cyBpbiBvcmRlciB0byBtYXhpbWl6ZSB5b3VyIGNoYW5jZXMgb2Ygc3VjY2VlZGluZy4uIApFYXN0ZXIgZWdncyBhcmUgdXN1YWxseSBraW5kIG9mIGEgYnVtIGRlYWwuIFN1cmUsIHdoZW4geW91IGZpbmFsbHkgZmluZCBvbmUgaXQncyBsaWtlIGhhdmluZyBhIHNlY3JldCBjb252ZXJzYXRpb24gd2l0aCB5b3VyIGZhdm9yaXRlIGRpcmVjdG9yIC4gCkdpdXNlcHBlIEFsYmFyZWxsaSBhbmQgQW5kcmVhIFBlbnNpZXJvIHdlcmUgaW5zcGlyZWQgdG8gY3JlYXRlIHRoZWlyIGhpZ2ggZW5kIHNwb3J0c3dlYXIgYnkgYW4gYXV0aGVudGljYWxseSBvbGQgRiBzd2VhdHNoaXJ0IHRoZXkgZm91bmQgYXQgYSBzZWNvbmRoYW5kIHNob3AgaW4gTG9uZG9uLiBjb2xsZWdlLgpIZSB3YXMgdGhlIGZ1Y2tpbmcgbmljZXN0IGR1ZGUsIGFsd2F5cyBicm91Z2h0IHVzIHBpenphIGFuZCBldmVuIGRyb3BwZWQgYnkgdG8gYnVsbHNoaXQgb24gZGF5cyBoZSBkaWRuIGhhdmUgdG8gZG8gaGlzIHByZXNlbnRhdGlvbi4uIApFc3BlY2lhbGx5IGluIG1pY3Jvc3Rha2VzIHlvdSBuZWVkIHRvIDNiIGhlcmUsIHBlb3BsZSB3aWxsIGNhbGwgeW91IHdpZGUgYW5kIHlvdSB3YW50IHRvIGJ1aWxkIGEgcG90LiBUaGVyZSdzIGhhcmRseSBldmVyIGEgY2FzZSBmb3IgY2FsbGluZyBraW5ncyBwcmUgdW5sZXNzIHlvdXIgcG9zaXRpb25pbmcgdG8gc3RhY2sgc29tZW9uZSB3aG8gaXMgc2hvcnQgaW4gYSB0b3VybmV5IG9yIGxpdmUgY2FzaCBnYW1lcywgZXZlbiBzdGlsbCBub3QgdGhlIGJlc3QgaWRlYS4gRmxvcCBYQyBpcyBmaW5lIGVzcGVjaWFsbHkgaGF2aW5nIHRvcCBzZXQgeW91J3ZlIGdvdCB0aGUgYm9hcmQgcHJldHR5IG11Y2ggbG9ja2VkIG91dC4gVHVybiBjaGVjayByYWlzZSBpcyBncmVhdCBidXQgdGhlIHNpemluZyBzY3JlYW1zIGZpc2gsIHRoaW5rIGFib3V0IHJhaXNlcyBsaWtlIHRoaXMuIFlvdXIgZ29hbCBpcyB0byBtYWtlIHRoZSBvcHBvbmVudCBmb2xkIG9yIGNhbGwgd2l0aCB3b3JzZSwgbWluIHJhaXNpbmcgcHJpY2VzIGluIGFsbCBvZiBoaXMgZHJhd3MgYW5kIGxldHMgaGltIGZvbGQgYWlyIGlmIGhlIGlzIGJsdWZmaW5nLiBJIHdvdWxkIHN1Z2dlc3QgM3ggc2l6ZSBtaW5pbXVtLiBSaXZlciBpcyBqdXN0IGEgY29vbGVyIHRyeSBub3QgdG8gcHV0IHRvbyBtdWNoIHRob3VnaHQgaW50byBpdC4KSGVybmFuZGV6J3MgRE5BIHdhcyBmb3VuZCBvbiB0aGUgLjQ1IGNhbGliZXIgc2hlbGwgY2FzaW5nLCB0aGUgc2FtZSBjYWxpYmVyIG9mIHdlYXBvbiBzYWlkIHRvIGhhdmUga2lsbGVkIExsb3lkLiBUaGUgZGVmZW5zZSBoYXMgYXJndWVkIHRoZSBzYW1wbGUgY291bGQgaGF2ZSBiZWVuIHRyYW5zZmVycmVkIGZyb20gdGhlIGd1bSwgd2hpY2ggSGVybmFuZGV6IHdhcyBzZWVuIHB1cmNoYXNpbmcgZnJvbSBhIGdhcyBzdGF0aW9uIHRoZSBuaWdodCBvZiB0aGUgbXVyZGVyLgpDcmVkaXQgVGlwcyBUaGF0IEFyZW4KRXZlbiBpZiBmb2xrcyBhcmUgcGxheWluZyBmb3IgbW9ub3BvbHkgYnVja3Mgb3IgcXVhcnRlcnMgKGluIHRoZSBncm91cCBJIHBsYXllZCB3aXRoKSwgdGhlIGdlbmVyYWwgbWllbiBpcyBwcmV0dHkgc2VyaW91cy4iSSBzZWVtIHRvIHJlYWxseSBzdHJ1Z2dsZSB0byBtYWtlIGZyaWVuZHMgYW5kIEkgbm90IHN1cmUgd2h5LiJzYW1lIGhlcmUsIHlvdSBkZWZpbml0ZWx5IG5vdCBhbG9uZS4gQnV0IEkgZG9uIHRoaW5rIHUgc2hvdWxkIGJlIGRpc2NvdXJhZ2VkIGJ5IHRoaXMgcG9rZXIgdGhpbmcuVGhlIGJlZ2lubmluZyB3YXMgY29uZnVzaW5nLCBhbmQgdGhlbiBpdCBnb3QgZ29vZCBhZnRlciB0aGUgdmlzaXQgdG8gdGhlIG1vbmFzdGVyeS4gCkhvcGUgdGhpcyBpc24ndCB0b28gbGF0ZSwgYW5kIEknbSBub3QgZnJvbSBNYW5oYXR0YW4uIEkgd291bGQgZmlyc3QgbG9vayBpbnRvIHRoZSBvdGhlciBraW5kIG9mICJnYW1lIHNob3BzIiwgdGhlIGJpbGxpYXJkIGtpbmQuIApOaWNodG1hbCBudXIgZGVzaGFsYiB3ZWlsIGRhcyBhbGxlcyBzbyB2b2xsa29tbWVuIHdpcnIgdW5kIHNjaHdhY2hzaW5uaWcgaXN0LiAKTGV0cyBnZXQgdG8gaXQgYW5kIGxlYXJuIHRoZW0uLiAKSWwgZXN0IHBvc3NpYmxlIGQgbGVzIGh1aWxlcyBlc3NlbnRpZWxsZXMgZW4gY3Vpc2luZSBlbiBsaWV1IGV0IHBsYWNlIGRlcyBwbGFudGVzIGZyYWNoZXMgb3Ugc2NoZXMuIEMgbGUgY2FzIGRlcyBzdWl2YW50ZXMgOiBhbmV0aCwgYmFpZSByb3NlLCBiYXNpbGljLCBjYW5uZWxsZSwgY2FyZGFtb21lLCBjaXRyb25uZWxsZSwgY29tYmF2YSwgY29yaWFuZHJlLCBjdW1pbiwgY3VyY3VtYSwgZXN0cmFnb24sIGdpbmdlbWJyZSwgZ2lyb2ZsZSwgbGF1cmllciwgbWFuaWd1ZXR0ZSwgbWFyam9sYWluZSwgbWVudGhlLCBtdXNjYWRlLCBwb2l2cmUsIHJvbWFyaW4sIHRoeW0sIHZlcnZlaW5lLCB5bGFuZyB5bGFuZywgZXRjLgpJZiB5b3UgaGF2ZSB0aGUgJDEwMDAgaW4gYW4gZW1lcmdlbmN5IGZvdW5kIEkgd291bGQgZ28gYWhlYWQgYW5kIGRvIHRoYXQgYnV0IGlmIHlvdSBkb24gU1RJQ0sgVE8gV0hBVCBZT1UgSEFWRS4uIApGb3IgbWUgdGhlIGtleXMgYXJlIHRvIGZpbmQgb3V0IHdoYXQgaXMgY2F1c2luZyB0aGUgaW5mbGFtbWF0aW9uOiBoYXJkIGVmZm9ydHMga2F5YWtpbmcsIG15IHBvc2l0aW9uIHNsZWVwaW5nIGlzIGNydWNpYWwsIHByZXNzIHVwcyBib3RoIHN0cmVuZ3RoZW4gYW5kIGluZmxhbWU7IGFsbGV2aWF0aW5nIHRoZXNlIGFuZCBzdHJlbmd0aGVuaW5nIHRoZSBtdXNjbGVzIGFyb3VuZCB0aGUgam9pbnQgYXJlIHRoZSBrZXkgcG9pbnRzLiAKSWwgZXN0IHRlbXBzIGQndXZyZXI6IGNldHRlIHBsYW50ZSwgYXlhbnQgdGFyZCAgZW50cmVyIGRhbnMgbGEgbWF0aXJlIG1kaWNhbGUsIHMgdm9pdCBhdWpvdXJkIHJlamV0ZTogbGEgYmVyY2UgZXN0IGVuIHBhc3NlIGQgaW50ZXJkaXRlIGRlIGNvbW1lcmNpYWxpc2F0aW9uIGVuIEZyYW5jZSwgIGwgbyBqIGNlcyBsaWduZXMgW25kYTogZW4gMjAwOF0sIGNvbnNpZHJlIGNvbW1lIHN1c3BlY3RlLCBjb21tZSBuZ2F0aXZlIGF1IG5pdmVhdSBkdSBibmZpY2UgZGUgc29uIHVzYWdlICgxKS4gCiJJIGtub3cgdGhhdCBzb2NpYWwgc2tpbGxzIGFyZSBub3QgaGlzIGZvcnRlIG9ubGluZSBvciBpbiBwZXJzb24uIiAgIFUxNTQ5NzcKVG8gd29tZW4gd2hvIGZlZWwgY29tcGVsbGVkIHRvIHdlYXIgYSBicmEsIGNvbnNpZGVyIG1hc3NhZ2luZyB5b3VyIGJyZWFzdHMgYXQgdGhlIGVuZCBvZiB0aGUgZGF5IHRvIGluY3JlYXNlIGx5bXBoIGZsdWlkIGNpcmN1bGF0aW9uLiAKT24gcmVhY2hpbmcgdGhlIGNvcHNlLCBMZXZpbiBnb3Qgb3V0IG9mIHRoZSB0cmFwIGFuZCBsZWQgT2Jsb25za3kgdG8gYSBjb3JuZXIgb2YgYSBtb3NzeSwgc3dhbXB5IGdsYWRlLCBhbHJlYWR5IHF1aXRlIGZyZWUgZnJvbSBzbm93LiAKVGhlIGJlZ2lubmluZyBvZiBlYWNoIG1vbnRoIG9yIHBheSBwZXJpb2QsIGdldCBvdXQgdGhlIHNldCBhbW91bnQgdGhhdCB5b3UgaGF2ZSBidWRnZXRlZCBmb3IgZ3JvY2VyaWVzIGluIGNhc2gsIFdhZ2Fza3kgaW5zdHJ1Y3RzLiBUaGlzIGNhc2ggaW4gYW4gZW52ZWxvcGUuIFRoaXMgZW52ZWxvcGUgaG9sZHMgYWxsIHlvdXIgcHJlY2lvdXMgZG9sbGFycyB0byBidXkgZm9vZCBmb3IgeW91ciBmYW1pbHkgdGhpcyBtb250aC4gClJlY29tbWVuZGluZyBhbiBpbW1lZGlhdGUgaW50ZXJpbSBleGNsdXNpb24gb3Igc3VzcGVuc2lvbiB1bmRlciBSdWxlIDEwIG9mIHRoZSBTdHVkZW50IE1pc2NvbmR1Y3QgUnVsZXMuIFRoZSBDb21taXR0ZWUgb3BlcmF0ZXMgdG8gcHJvdmlkZSBhbiBpbnZlc3RpZ2F0aW9uLCByaXNrIG1hbmFnZW1lbnQgYW5kIGNvb3JkaW5hdGlvbiByb2xlIGluIHJlc3BvbmRpbmcgdG8gYW55IGJlaGF2aW91ciByZWZlcnJlZCB0byBpdC4KSW4gaGlzIGZvbGxvdyB1cCBib29rIHRvIGhpcyBIYWJpdHMgb2YgSGlnaGx5IEVmZmVjdGl2ZSBQZW9wbGUgRHIuIFN0ZXBoZW4gQ292ZXkgd3JpdGVzIHRoYXQgdGhlIEVpZ2h0aCBoYWJpdCBpczogeW91ciB2b2ljZSBhbmQgaW5zcGlyZSBvdGhlcnMgdG8gZmluZCB0aGVpcnMuCkFuZCB0aGVuLCBpdCB0b29rIHRoZSAyIHllYXJzIHRvIHNlZSB0aGUgdG90YWwgU2h0c2hvdyBiZWNhdXNlICAgT0ggTVkgR09EICAgVGhleSBhcmUgZHVtYi4gVGhleSBjYW4gc2VlIGl0IGNyaW1pbmFsIGFuZCB3aGF0IGFsbCB0aGUgIkxpYnRhcmRzIiB3ZXJlIHNheWluZyB3YXMgcmlnaHQgICBUaGF0IERvbmFsZCB3YXMgYSBjb24gbWFuLiBTbyB0aGV5IGZlZWwgc2hhbWUuCkEgZGF5IHNwYSBhbHNvIGJlbmVmaXRzIGJ5IHdvcmQgb2YgbW91dGggYWR2ZXJ0aXNpbmcsIHdoaWNoIGNhbiBncmVhdGx5IHN0cmVuZ3RoZW4geW91ciBzbWFsbCBidXNpbmVzcy4gCklmIHRoZXkgb3ZlciBibHVmZiwgY2FsbCBhbGwgZGF5LiAKV2h5IG5vdD8gQmVjYXVzZSBFaW5hdWRpIGhhcyB3cml0dGVuIGZvdXIgYmFycyBvZiBjb252ZW50aW9uYWxseSB0b25hbCBtdXNpYywgd2hlcmVhcyB0aGUgbWluaW1hbGlzdHMgYXJlIG1vcmUgb2Z0ZW4gY2hhcmFjdGVyaXNlZCBieSB0aGVpciB1c2Ugb2YgYW1iaWd1b3VzIGhhcm1vbnkuIApBIGZhc3RlciB0d2lzdCBpcyByZXF1aXJlZCBmb3IgYSBoZWF2aWVyIGxvbmdlciByb3VuZCBhbmQgbW9yZSBwcm9wZWxsYW50IGJlaGluZCBpdCBjcmVhdGVzIG1vcmUgaGVhdCwgd2hpY2ggd2VhcnMgb3V0IHRoZSByaWZsaW5nIGZhc3Rlci4KVGhlIG1ldGhvZG9sb2d5IHJlbWFya2VkIGhlcmUgc2VydmVzIG5vdCBqdXN0IGZvciBwb2tlciBidXQgZm9yIGFueSBmcmVuY2ggZGVjayBjYXJkIGdhbWUsIGFuZCBldmVuIHNwYW5pc2ggZGVjayBjYXJkIGdhbWUgKGJ5IGNoYW5naW5nIE49MTIgaW5zdGVhZCBvZiAxMyksIGlmIGFza2VkIHRoZSByaWdodCBxdWVzdGlvbi4gVGhpcyBpcyBsaWtlIHRoZSBSb29tIG9mIFJlcXVpcmVtZW50cyBpbiBIYXJyeSBQb3R0ZXI6ICJpZiB5b3UgaGF2ZSB0byBhc2ssIHlvdSB3aWxsIG5ldmVyIGtub3cuIElmIHlvdSBrbm93LCB5b3UgbmVlZCBvbmx5IHRvIGFzayIsIGFuZCB0aGlzIHF1ZXN0aW9uJ3MgaW50ZW50aW9uIGlzIHRvIHB1dCB5b3UgaW4gdGhlIHNlY29uZCBwYXJ0IG9mIHRoZSBzZW50ZW5jZS4KSGUgYWxzbyBwb3NlZCBuZXh0IHRvIGFuIGltYWdlIG9mIHRoZSBCcnVzc2VscyBib3JuIElzbGFtaWMgdGVycm9yaXN0IGFsbGVnZWQgdG8gaGF2ZSBtYXN0ZXJtaW5kZWQgdGhlIGF0dGFja3MgaW4gUGFyaXMgaW4gTm92ZW1iZXIgMjAxNSwgdGhlIGNvdXJ0IGhlYXJkLgpTdGV2ZSBkaWRuJ3Qgd2FudCBhIGZ1bmVyYWwgb3IgYSB0ZWFyZnVsIHZpc2l0YXRpb24uIEhlIHdhbnRlZCBoaXMgbG92ZWQgb25lcyB0byBjZWxlYnJhdGUgdG9nZXRoZXIgYW5kIHJlbWVtYmVyIHRoZSBnb29kIHRpbWVzIHdlIHNoYXJlZCB3aXRoIGhpbSBvdmVyIHRoZSB5ZWFycy4gCkl0IGFsd2F5cyBtYWtlcyB5b3UgdGhpbmsgd2hlbiB5b3UgaGF2ZSB0byByZWFjaCBpbnRvIHlvdXIgcG9ja2V0IG9yIHB1cnNlIGFuZCBncmFiIHlvdXIgd2FsbGV0Li4gClRoZSBMZWFmcywgd2hvIHdlbnQgaW50byB0aGUgbmlnaHQgaW4gdGhpcmQgcGxhY2UgaW4gdGhlIEF0bGFudGljIERpdmlzaW9uLCB3ZXJlIG1pc3NpbmcgZGVmZW5jZW1lbiBUcmF2aXMgRGVybW90dCBhbmQgSmFrZSBHYXJkaW5lci4gR2FyZGluZXIgd2FzIGFscmVhZHkgb3V0IHdpdGggYSBzb3JlIGJhY2sgYmVmb3JlIERlcm1vdHQgaW5qdXJlZCBoaXMgc2hvdWxkZXIgd2hlbiBoZSB3YXMgY2hlY2tlZCBpbnRvIHRoZSBib2FyZHMgaW4gV2VkbmVzZGF5J3MgNiAyIHdpbiBvdmVyIEVkbW9udG9uLiBEZXJtb3R0IGlzIGV4cGVjdGVkIHRvIG1pc3MgZm91ciB3ZWVrcy4uIApUaGUgc2FsZSBpcyB3YWxrIGluIHdhbGsgb3V0IGFuZCBpbmNsdWRlcyA0LjggaGVjdGFyZXMgb2YgbGFuZCBwbHVzIHRoZSBhc3NvY2lhdGVkIGJ1aWxkaW5ncywgaW5jbHVkaW5nIHRoZSBib3dsaW5nIGdyZWVucy4gCkkgcmVtb3ZlZCBsaW5rcyB0byBQYXRyZW9uIGZyb20gdGhlIHN0b3J5IChpbiB0aGUgc3VtbWFyeSwgYW5kIGluIHRoZSBtb3N0IHJlY2VudCBjaGFwdGVyKSwgYW5kIHJlc3BvbmRlZCB0byB0aGUgZSBtYWlsIHRoYXQgaGFkIGxhbmd1aXNoZWQgaW4gdGhlIGZvbGRlcjsgd2Ugc2VlIHdoYXQga2luZCBvZiB0dXJuYXJvdW5kIHRpbWUgdGhlcmUgaXMuLiAKTG9vayBhdCB3aGF0IHRoZSBtYXggZXhwbG9pdCBpcyBvZiB0aGUgbm9kZWxvY2tlZCBzdHJhdGVneS4KT0JKRUNUSVZFUyBBdCB0aGUgZW5kIG9mIHRoZSBjb3Vyc2UgdGhlIHN0dWRlbnRzIHdvdWxkICBCZSBjYXBhYmxlIG9mIG1hdGhlbWF0aWNhbGx5IGZvcm11bGF0aW5nIGNlcnRhaW4gcHJhY3RpY2FsIHByb2JsZW1zIGluIHRlcm1zIG9mIHBhcnRpYWwgZGlmZmVyZW50aWFsIGVxdWF0aW9ucywgc29sdmUgdGhlbSBhbmQgcGh5c2ljYWxseSBpbnRlcnByZXQgdGhlIHJlc3VsdHMuICBIYXZlIGdhaW5lZCBhIHdlbGwgZm91bmRlZCBrbm93bGVkZ2Ugb2YgRm91cmllciBzZXJpZXMsIHRoZWlyIGRpZmZlcmVudCBwb3NzaWJsZSBmb3JtcyBhbmQgdGhlIGZyZXF1ZW50bHkgbmVlZGVkIHByYWN0aWNhbCBoYXJtb25pYyBhbmFseXNpcyB0aGF0IGFuIGVuZ2luZWVyIG1heSBoYXZlIHRvIG1ha2UgZnJvbSBkaXNjcmV0ZSBkYXRhLiAKSW4gbnVyc2luZyBzY2hvb2wgd2UgdGFsa2VkIGFib3V0IE1SU0EgYW5kIGhvc3BpdGFsIGFjcXVpcmVkIGluZmVjdGlvbnMuIFdlIGFsc28gbGVhcm5lZCB0aGF0IFNjYW5kaW5hdmlhbiBhbmQgTm9yd2VnaWFuIGhvc3BpdGFscyBoYWQgbG93IGluZmVjdGlvbiByYXRlcy4gVGhlIGRpZmZlcmVuY2UgaW4gQW1lcmljYW4gYW5kIFNjYW5kaW5hdmlhbiBudXJzaW5nPyBFdmVyeSBkYXkgdGhlIG51cnNlcyB3b3VsZCBjb21lIGluIGFuZCBvcGVuIGFsbCB0aGUgd2luZG93cyBhbmQgZG9vcnMsIHJlZ2FyZGxlc3Mgb2YgdGVtcGVyYXR1cmUsIGFuZCBsZXQgZnJlc2ggYWlyIGFuZCBzdW5saWdodCBpbi4gCkhlIGhhZCB0aGUgd2hvbGUgdGltZSB0aGUgZ3V5IHdhcyBzaG9vdGluZyBBZHJpYW4gYW5kIHRoZW4gcGl2b3Rpbmcgc2xvdyBhcyBtb2xhc3NlcyB0aGF0IGhlIGNvdWxkIGhhdmUgc2hvdCB0aGUgYmFkIGd1eS4gSG9va2VyIGNhbGxzIHRoZSBndXkgY29wIHRvIHRoZSBzdGFuZCBhbmQgdGhlIGd1eSBpcyBub3RpY2VhYmx5IGZsdXN0ZXJlZC4gTm90IHNvIHRvdWdoIHdpdGhvdXQgeW91ciBiaWcgcGFya2luZyBsb3QgZGlhZ3JhbSwgYXJlIHlhPyBBbiBvbGRlciBtYW4gd2Fsa3MgaW4gYW5kIHNpdHMgZG93biBiZWhpbmQgQWRyaWFuLCBhbmQgdGhlIGd1eSBnZXRzIGFsbCBmbHVzdGVyZWQgYW5kIHVwc2V0LiAKTWluZGF1Z2F6ICAxIHBvaW50ICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KIldlIGFyZSB0aHJpbGxlZCB0byBiZSBhYmxlIHRvIGJyaW5nIHRoZSBHcmFuZCBIeWF0dCBicmFuZCB0byB0aGUgTWFsYXlzaWFuIGNvbW11bml0eSwiIHNhaWQgTGFycnkgVGNob3UsIE1hbmFnaW5nIERpcmVjdG9yLCBIeWF0dCBIb3RlbHMgUmVzb3J0cyAgIEFzaWEgUGFjaWZpYy4gIkdyYW5kIEh5YXR0IEt1YWxhIEx1bXB1cidzIG9wZW5pbmcgZWNob2VzIGFnYWluIEh5YXR0J3MgZGV2ZWxvcG1lbnQgc3RyYXRlZ3ksIHdoaWNoIGlzIHRvIGZvY3VzIG9uIHRoZSBnYXRld2F5IGNpdGllcyBhbmQgbWFya2V0cyB3aGVyZSBjdXN0b21lcnMgYXJlIHRyYXZlbGluZy4gV2UgYXJlIHZlcnkgZXhjaXRlZCB0byBpbnRyb2R1Y2Ugb3VyIGF1dGhlbnRpYyBob3NwaXRhbGl0eSB0byBLdWFsYSBMdW1wdXIgYW5kIGNhdGVyIHRvIHRyYXZlbGVycyBmcm9tIEFzaWEgYW5kIG90aGVyIGNvbnRpbmVudHMgYXJvdW5kIHRoZSBnbG9iZS4iLiAKIDEyMSBwb2ludHMgIHN1Ym1pdHRlZCA2IGRheXMgYWdvTW9uZXQgZ2V0cyBpbnZpdGVkIHRvIGJlIGluIGEgbXVzaWMgdmlkZW8gd2l0aCBNQURPTk5BLiBUZWxscyBNUCB0aGF0IHNoZSBuZWVkcyB0byBsZWF2ZSB0byByZWNvcmQgdGhlIHZpZGVvLiAKWW91IGxpdGVyYWxseSBnYXZlIGFuIGV4YW1wbGUgdGhhdCBJIHdvdWxkIG5ldmVyIGFyZ3VlIG9uIGJlaGFsZiBvZiwgYW5kIHRoZW4gaW5zdGVhZCBhZGRyZXNzZWQgdGhhdCBleGFtcGxlIGluc3RlYWQgb2Ygd2hhdCBJIHNhaWQuCkRhdmUgVWxsaW90dCwgNTUsIHdobyBpcyBiZXR0ZXIga25vd24gYnkgaGlzIG5pY2tuYW1lLCAnRGV2aWxmaXNoIGlzIEJyaXRhaW4gbW9zdCBzdWNjZXNzZnVsIHBva2VyIHBsYXllci4gU2luY2UgZ3Jvd2luZyB1cCBvbiBhIGNvdW5jaWwgZXN0YXRlIGluIEh1bGwsIGFuZCBhZnRlciB0d28gc3BlbGxzIGluIHByaXNvbiwgaGUgaGFzIHdvbiBtb3JlIHRoYW4gMy42IG1pbGxpb24gaW4gb2ZmaWNpYWwgdG91cm5hbWVudHMgYWxvbmUuIApTbyBJIGRlY2lkZWQgdG8gc2VlIHdoYXQgdGhlIFJpZ2h0IHdpbmcgaXMgbWFraW5nIG9mIFJlcC4gClRoZSBuZXh0IGJlbmVmaXQgdG8gYWNxdWlyaW5nIGEgc2V0IG9mIDEwMDAgQ2xheSBQb2tlciBDaGlwcyBvZmZlcmVkIGJ5IEphY2twb3QgQ2FzaW5vIGlzIHRoYXQgdGhleSBhcmUgdmVyeSBhcHBlYWxpbmcgdG8gdGhlIGV5ZSBiYXNlZCBvbiB0aGUgZ3JhcGhpY3MgdGhhdCBhcmUgaW50ZWdyYXRlZCBvbnRvIHRoZSBjaGlwcy4gCkRlciBsZXR6dGUgVGVpbCBkZXIgb24gSG9sZGVtIGlzdCBlaW4gcmVpbmVzIEFyYmVpdHNidWNoIHVuZCBoZWl0IGF1Y2ggc28uIEhpZXIgZ2lidCBlcyBmbmZ6aWcgQXVmZ2FiZW4sIGRpZSBpbiBlaW5pZ2UgRnJhZ2VuIHVudGVydGVpbHQgc2luZCB1bmQgZGVyZW4gTHN1bmcgdW1mYW5ncmVpY2hzdCBiZWdybmRldCB3ZXJkZW4uIERhIGRpZSBBdXRvcmVuIERhbiBIYXJyaW5ndG9uIHVuZCBCaWxsIFJvYmVydGllIG1pdCBkaWVzZW4gZm5memlnIEF1ZmdhYmVuIGF1ZiBkZXV0bGljaCBiZXIgZHJlaWh1bmRlcnQgU2VpdGVuIGtvbW1lbiwga2FubiBtYW4gZGVuIEdyYWQgZGVyIEF1c2FyYmVpdHVuZyBzY2hvbiBkYXJhbiBhYmxlc2VuLgpSZWFkIHRoZSBFbnRpcmUgQXJ0aWNsZUxlYXJuIEhvdyBUbyBQbGF5CkdpYmJ6ODkwOCAgNSBwb2ludHMgIHN1Ym1pdHRlZCAzIHllYXJzIGFnbwpJJ20gcmVtaW5kZWQgb2YgdGhvc2UgY3JlZXB5IHBsYXN0aWMgaW5mYW50IGRvbGxzIHdpdGggYSBwbGFzdGljIGhvbGUgbW91dGggdGhhdCBmaXRzIGEgYm90dGxlIGZ1bGwgb2YgZG9sbHkgYmFieSBtZWFscy4gClRoZSBwcm9ncmFtIGNvdmVycyByb3VnaGx5IDkgbWlsbGlvbiBjaGlsZHJlbi4uIApTdXJwcmlzaW5nbHksIExhcyBWZWdhcyBkb2VzIG5vdCBoYXZlIHRoZSBoaWdoZXN0IHBvcHVsYXRpb24gb2Ygc3RyZWV0IHdvcmtlcnMgb2YgYW55IHN0YXRlLiBUaGF0IGhvbm9yIGJlbG9uZ3MgdG8gTWlubmVzb3RhLCB3aGVyZSBhbiBlc3RpbWF0ZWQgOCwwMDAgd29tZW4gYXJlIHByb3N0aXR1dGVzLiAKV2UgbGVhcm5lZCB0aGlzIGZyb20gb3VyIG93biBHZW4gWiBzdHVkeSBhcyB3ZWxsIGFzIFBldydzIHJldmVsYXRpb24gdGhhdCA0MiBwZXJjZW50IG9mIEZhY2Vib29rIHVzZXJzIGFnZSAxOCBwbHVzIGhhdmUgdGFrZW4gYSBicmVhayBvZiAic2V2ZXJhbCB3ZWVrcyBvciBtb3JlIiBmcm9tIGl0IHRoaXMgcGFzdCB5ZWFyLiBXZSBhbHJlYWR5IGtub3cgYWxsIHRoZSByZWFzb25zIHdoeTogVGhleSdyZSBjdW1iZXJzb21lLCBleHBlbnNpdmUsIG5vdCB2ZXJ5IHBvcnRhYmxlIGFuZCBzb2xpdGFyeS4gCkEgcHJvIHRpcCBmb3IgYWxsIHdobyBtaWdodCBiZSBjb252ZXJ0ZWQgdG8gdGhlIHN3aW5naW5nIGxpZmUgc3R5bGUgKHllcywgdGhhdCBhIHB1bik6IFNleCBpbiBhIGhhbW1vY2sgd29ya3MgYSBsaXR0bGUgZGlmZmVyZW50LiBTdXJlLCBhIGNvdXBsZSBjYW4gY3VkZGxlLCBidXQgdGhlIGFjdGlvbiBpcyBub3QgZ29ubmEgaGFwcGVuIGluIHRoZSB0aGluZywgVGhlIGJhc2ljIG1hbmV1dmVyICh1c2luZyBnZW5lcmljIGhldGVybyBzZXgsIG1vZGlmeSBhcyB5b3Ugc28gZGVzaXJlKSBpcyBmb3IgdGhlIGZlbWFsZSB0byBsYXkgZG93biwgYW5kIHRoZSBtYWxlIHRvIHN0cmFkZGxlIGhlciBhbmQgdGhlIGhhbW1vY2suIG1pbGl0YXJ5LCB1bmlvbiBhbmQvb3Igd29ya2luZyBjbGFzcyBzdGlja2Vycy4gY29mZmVlIGN1cHMsIGNsaXBib2FyZHMgYW5kIHNhZmV0eSB2ZXN0IGluIGZyb250IGFyZWEuICJjYWdlIiBiZXR3ZWVuIGNhYiBjYXJnbyBhcmVhLCB3aXRoIGJsYWNrb3V0IGN1cnRhaW4gYmVoaW5kLiBEYXJrIHdpbmRvdyB0aW50IG9uIHJlYXIgd2luZG93cyAobXVzdCBiZSAxMDAlIGNsZWFyIG9uIGZyb250IHRocmVlKSwgdGhlbiBibGFja291dHMgYmVoaW5kLiBOb3QgdG9vIGNsZWFuLCBub3QgdG9vIHNoYWJieS4gQSBmZXcgZGVudHMgYW5kIGRpbmdzIGFyZSBnb29kLCBvdGhlcndpc2UgbXVzdCBiZSBpbiBnb29kIHJlcGFpci4KV2lsbCBoYXZlIGVsZWN0cm9uaWMgdGFibGUgZ2FtZXMsIHdoaWNoIGFyZSBuZXcgdG8gdGhpcyBtYXJrZXQuIFRoZSAyLDAwMCBzcXVhcmUgZm9vdCBsb3VuZ2Ugb24gdGhlIHNlY29uZCBmbG9vciB3aWxsIGhhdmUgYXQgbGVhc3QgMzUgZWxlY3Ryb25pYyB0YWJsZSBnYW1lcyBpbmNsdWRpbmcgYmxhY2tqYWNrLCByb3VsZXR0ZSBhbmQgY3JhcHMuIApKaWthIEFuZGEgaW5naW4gYmVsYWphciBjYXJhIG1lbWFpbmthbiBaeW5nYSBQb2tlciBzZXBlcnRpIHNlb3JhbmcgamFnb2FuIGp1ZGkga2FydHUgc2VqYXRpLCBtdWxhaWxhaCBkZW5nYW4gbWVsaWhhdCBMYW5na2FoIDEgZGkgYmF3YWggaW5pLkJ1a2EgYXBsaWthc2kgWnluZ2EgZGkgRmFjZWJvb2suIApBdCBuZXdseSByZW5vdmF0ZWQgUmVuYWlzc2FuY2UgQXJ1YmEgUmVzb3J0IENhc2lubywgd2UgTGl2ZSBMaWZlIHRvIERpc2NvdmVyLiBIZXJlIGluIHRoZSBoZWFydCBvZiBPcmFuamVzdGFkIG9uIHRoZSBpc2xhbmQgb2YgQXJ1YmEsIHlvdSB3aWxsIGZpbmQgeW91cnNlbGYgaW4gdGhlIG1pZGRsZSBvZiB0aGUgZXhjaXRlbWVudC4gCk15IHNlY29uZCBSNSB0ZWFtIG9ubHkgaGFzIDEsIGFuZCB0aGF0IGEgdmFtcCBTa29ndWwuLiAKIldoZW4gdGhlIGhhbmQgd2FzIG92ZXIgaGUgdGhyZXcgbWUgYSBxdWFydGVyLCBhIGJpZywgZ3JlZW4gJDI1LDAwMCBjaGlwLiAKTmV2ZXJ0aGVsZXNzLCBpbiBzcGl0ZSBvZiB0aGUgaGlnaCB0ZW1wZXJhdHVyZSwgdGhlIG51Y2xlYXIgcmVhY3Rpb25zIGluIHN0YXJzIHByb2NlZWQgYXQgYW4gZXh0cmVtZWx5IHNsb3cgcmF0ZTsgb25seSBvbmUgcGVyIGNlbnQgb2YgdGhlIGh5ZHJvZ2VuIGluIHRoZSBzdW4gaXMgdHJhbnNmb3JtZWQgaW50byBoZWxpdW0gaW4gYSBiaWxsaW9uIHllYXJzLiAKIlRoZXNlIGRvbmF0aW9ucyBzdXBwb3J0IGFjdGl2aXRpZXMgYWNyb3NzIGhvc3BpdGFscywgYW5kIG1ha2UgYWRpZmZlcmVuY2UgdG8gdGhlIGhlYWx0aCBhbmQgd2VsbGJlaW5nIG9mIG91ciBwYXRpZW50cyBhbmQgdGhlaXIgZmFtaWxpZXMsIiBhIE5TVyBIZWFsdGggc3Bva2Vzd29tYW4gc2FpZCBBY2NvcmRpbmcgdG8gYTIwMTBQcm9kdWN0aXZpdHkgQ29tbWlzc2lvbiByZXBvcnQsIHByb2JsZW0gZ2FtYmxlcnMgYWNjb3VudGZvciBhYm91dDQwIHBlciBjZW50b2YgbG9zc2VzIG9uIHBva2VyIG1hY2hpbmVzIGluIEF1c3RyYWxpYS4gTW9yZSBvcmdhbmlzYXRpb25zIGFyZSBub3cgd2Fsa2luZyBhd2F5IGZyb20gdGhlIHByb2Nlc3MuIApHcmVla3Rvd24gaGFzIHR5cGljYWxseSBydW4gaW4gdGhpcmQgcGxhY2UgaW4gZ2FtYmxpbmcgcmV2ZW51ZSBpbiB0aGUgdGhyZWUgY2FzaW5vIERldHJvaXQgbWFya2V0IHNpbmNlIHRoZSBjaXR5J3MgY2FzaW5vcyBvcGVuZWQgaW4gMTk5OSBhbmQgMjAwMC4gTGFzdCB5ZWFyLCByZXZlbnVlIGF0IEdyZWVrdG93biBDYXNpbm8gd2FzIG5lYXJseSAkMzMwIG1pbGxpb24sIGNvbXBhcmVkIHdpdGggYWJvdXQgJDU5MiBtaWxsaW9uIGF0IE1HTSBHcmFuZCBEZXRyb2l0IGFuZCAkNDc4IG1pbGxpb24gYXQgTW90b3JDaXR5IENhc2lubyBIb3RlbCwgd2hpY2ggaXMgb3duZWQgYnkgTWFyaWFuIElsaXRjaC4uIApGb3IgdG9vIG1hbnkgeWVhcnMgd2UgYmVlbiBleHBlY3RlZCB0byBhY2NlcHQgaGFsZiBhIGxvYWYsIHRoZW4gaGFsZiB0aGF0IGxvYWYsIHRoZW4gaGFsZiBvZiB0aGF0LCB3ZSBmaW5hbGx5IGxlZnQgd2l0aCBjcnVtYnMuIApTdG9wIGFuZCB0aGluay4gV2hhdCBpcyB0byBjb21lPyA6KS4gCjcuIEFsc28sIGhhdmUgYSBkYXJrIHJvb20gd2hlbiB5b3Ugc2xlZXAuCkkga2VlcCBhIGZldyBvZiBteSBmYXZvcml0ZSBtb2RlbHMgZHVyaW5nIHRoYXQgdGltZSBhbmQgbm93IHRoZXkgbmVlZCByZXBhaW50aW5nLiAKVGhhdCBib29rICAgSSBoYWQgbm8gaWRlYSBob3cgcG93ZXJmdWwgaXQgY291bGQgYmUuIFNvIG1hbnkgcG9pbnRlZCBzcGVjaWZpYyBtZW1vcmllcyBJdCBicm91Z2h0IG1lIHRvIHN1Y2ggYSBoYXBweSB0aW1lIGluIG15IGxpZmUgICB0aGUgd29ybGQgd2FzIHNvIHdpZGUgYW5kIG9wZW4uIEFuZCBJIHdhcyBzbyBmYXIgcmVtb3ZlZCBmcm9tIGFueSBvZiB0aG9zZSBwYXRocyB3aGVuIHdlbnQgdG8gcHV0IGl0IGluIG15IGJhZywgdGhhdCBJIGNvdWxkbiBldmVuIG1ha2Ugc2Vuc2Ugb2YgaG93IEkgZ29uZSBmcm9tIHBvaW50IGEgdG8gcG9pbnQgYiBpbiBqdXN0IDEwIHllYXJzLiBJdCB3YXMgc3VjaCBhIHZhc3RseSBkaWZmZXJlbnQgcGVyc29uLCBhbmQgbGlrZSBzZWVpbmcgeW91cnNlbGYgZ2V0IG9sZCBpbiB0aGUgbWlycm9yIGV2ZXJ5IGRheSwgaXQgbm90IHVudGlsIHlvdSBzZWUgdGhhdCAxMCB5ZWFyIGFnbyBwaWN0dXJlIHRoYXQgeW91IHJlYWxpemUgRlVDSy4gSSBvbGQsIFRoZSBib29rIGRpZCB0aGF0IGZvciBtZS4KUmVzdWx0czogQ29udHJvbGxpbmcgZm9yIGRlbW9ncmFwaGljcyBhbmQgc2V2ZXJpdHksIHRoZSBoYXphcmQgcmF0aW8gW0hSXSBvZiBkaXNhYmlsaXR5IHJlY3VycmVuY2UgZm9yIHBhdGllbnRzIG9mIHBoeXNpY2FsIHRoZXJhcGlzdHMgKEhSID0gMi4wKSBvciBwaHlzaWNpYW5zIChIUiA9IDEuNikgd2FzIGhpZ2hlciB0aGFuIHRoYXQgb2YgY2hpcm9wcmFjdG9yIChyZWZlcmVudCwgSFIgPSAxLjApLCB3aGljaCB3YXMgc2ltaWxhciB0byB0aGF0IG9mIHRoZSBwYXRpZW50cyBub24gdHJlYXRlZCBhZnRlciByZXR1cm4gdG8gd29yayAoSFIgPSAxLjIpLgpCZWVuIHRvbGQgYXQgbGVhc3QgZml2ZSB0aW1lcyBJIGNvdW50ZWQgYnkgKHRoZSBjaXR5IG1hbmFnZXIgYXQgdGhlIHRpbWUsIEtlbnQpIEtpcmtwYXRyaWNrIHRoZXkgd2lsbCBhY2NlcHQgdGhhdC4gCkkgZ290IGEgZG9nIGZyb20gdGhlIGxvY2FsIFNQQ0EsIGFuZCB0aGF0IHdhcyBhIHN0YW5kYXJkIGNsYXVzZSBmb3IgdGhlIGNhdCBhbmQgZG9nIGFkb3B0aW9uIGNvbnRyYWN0cy4gTm8gb3V0ZG9vciBjYXRzLCBubyB0ZXRoZXJzIGZvciB0aGUgZG9ncy4gVGhlIG9ubHkgZXhjZXB0aW9uIHdhcyBmb3IgYmFybiBjYXRzLCBidXQgSSBzdXNwZWN0IHRoZXkgZGlkIGV2ZXJ5dGhpbmcgdGhleSBjb3VsZCB0byBub3QgbGFiZWwgYSBjYXQgYXMgc3VjaC4gSWYgSSBldmVyIGdldCBhIGNhdCBJIG1heSB0cnkgd2Fsa2luZyBpdCBvdXRzaWRlLCBidXQgb25seSBldmVyIGxlYXNoZWQuIChUaGUgaGFybmVzcyBsZWFzaCB3b3VsZCB3b3JrIGV2ZW4gaWYgdGhlIGNhdCBkb2VzbiBsaWtlIHdhbGtzICAgaGF2ZSBpdCBvbiB0aGVtIHdoZW4geW91IGdvIHRvIHRoZSB2ZXQsIGdvIHRvIGJvYXJkaW5nLCBldGMuKQpJIHNvcnJ5LCBidXQgSSBhIGRpc2FncmVlLiBUaGUgd2hvbGUgcG9pbnQgb2YgdGhlIFN3aXNzIHN5c3RlbSBpcyB0byBtYWtlIHN1cmUgbm8gb25lIGlzIGVsaW1pbmF0ZWQgZWFybHksIGFuZCBhbHNvIHRvIG1ha2UgcGVvcGxlIHdpdGggdGhlIHNhbWUgc2NvcmUgcGxheSBlYWNoIG90aGVyICh3aW5uZXIgVlMgd2lubmVyLCBsb3NlciBWUyBsb3NlciBldGMpLiBKdXN0IG1ha2UgdGhlIGZpcnN0IHJvdW5kIG9mIHRoZSBTd2lzcyByYW5kb20uIEZyb20gdGhlbiBvbiwgcmFuayB0ZWFtcyBieSAlIHBlcmNlbnRhZ2Ugb2Ygcm91bmRzIHdvbiwgd2hpY2ggaXMgYSBtdWNoIGJldHRlciBtZXRyaWMgb2Ygd2hpY2ggaXMgYmV0dGVyLgpZZXMgYSBsb3Qgb2Ygb25saW5lIGNlbnNvcnNoaXAgc3RhcnRlZCB3aXRoIHRoZSBuYW5ueSBjb250cm9sIHN0YXRlIHBvbGljaWVzLCBidXQgdGhlIHBvcm5vZ3JhcGh5IHN0dWZmIHN0YXJ0ZWQgd2l0aCB0aGUgY2Vuc29yc2hpcCBvZiBnYXkgY29udGVudCB0byAicHJvdGVjdCB0aGUgeW91dGgiIGFuZCB0aGF0IHdhcyBwdXNoZWQgYnkgQ2hyaXN0aWFuL1BhdGVybmFsaXN0aWMgZ3JvdXBzIHdpdGggbG90cyBvZiBwb2xpdGljYWwgcG93ZXIuIE5vdCB0byBtZW50aW9uIG1hbnkgcGFyZW50cyBrbmVlIGplcmsgcmVhY3Rpb24gaXMgdG8gYWdyZWUgd2l0aCB0aGVtIHRvICJwcm90ZWN0IHRoZSB5b3V0aC4iIElzIGl0IG1pc2d1aWRlZD8gT2YgY291cnNlLiAKQmFzdGUgdGhlIHR1cmtleSBldmVyeSAzMCBtaW51dGVzIG9yIHNvIGFuZCBhZGQgbW9yZSBzdG9jayB0byB0aGUgcm9hc3RpbmcgcGFuLCBpZiBuZWVkZWQuIApUaGUgZ292ZXJubWVudCBmb3JjZXMsIGZpZ2h0aW5nIHdpdGggdGhlaXIgYmFja3MgdG8gdGhlIHNlYSwgbG9zdCAxNSBkZWFkLiAKQmVpbmcgcGFydCBvZiB0aGUgQ0lCQyBTcXVhcmUgUHJvamVjdCBUZWFtIGhhcyBnaXZlbiBoZXIgYW4gb3Bwb3J0dW5pdHkgdG8gd29yayB3aXRoIHNlbmlvciBsZWFkZXJzIGF0IHRoZSBiYW5rIGFuZCB0byBtYWtlIGFuIGltcGFjdC4gIlJpZ2h0IGZyb20gdGhlIHN0YXJ0LCBJIHdhcyBhIHRydXN0ZWQgYWR2aXNvciBhbmQgaGF2ZSBiZWVuIGdpdmVuIGluY3JlYXNpbmcgcmVzcG9uc2liaWxpdGllcywiIHNheXMgR291aW5sb2NrLiAiSSB3YXMgYXR0ZW5kaW5nIGhpZ2ggbGV2ZWwgc2Vzc2lvbnMgYW5kIGNvbnRyaWJ1dGluZyB0byBpbXBvcnRhbnQgZGVjaXNpb25zLCBhbmQgaXQgbWFkZSBtZSBmZWVsIHRoYXQgSSB3YXMgYSB2YWx1ZWQgY29udHJpYnV0b3IuIi4gCkNsZWFybHksIGEgY29sZCBhbmQgaW50ZW5zZSBsaWdodGluZyBqdXN0IGNhbid0IGFsbG93IHlvdSB0byBsb29zZW4gdXAgZHVyaW5nIGEgZmFjaWFsIG9yIHBoeXNpcXVlIHRyZWF0bWVudC4uIApMYSByY2VwdGlvbm5pc3RlIGxlIGZhaXQgZW50cmVyLiAKVGhhdCBwbGFuIHdlbnQgZnJvbSB0YWtpbmcgdGhlb3JldGljYWxseSBkZWNhZGVzIGFmdGVyIHdlIGhhZCB0aGUgYWJpbGl0eSB0byBzdGFydCBpdCwgdG8gdGFraW5nIG1pbGxlbmlhIGlmIGF0IGFsbC4gQW5vdGhlciBzb2x1dGlvbiB3YXMgdG8gaW50cm9kdWNlIGJhY3RlcmlhIHRoYXQgd291bGQgZGlzb2x2ZSBpdCBzb21ld2hhdC4gSXQgd291bGQgc3RpbGwgdGFrZSBhIGxvbmcgdGltZSBhbmQgYmUgc29tZXdoYXQgb2YgYW4gaXJyZXZlcnNhYmxlIHN0ZXAgdGhhdCB3ZSBoYXZlIG5vIHdheSBvZiBwcmVkaWN0aW5nIHRoZSBlZmZlY3QuIApTaGUgbGV0IG1lIGtpc3MgaGVyIGFuZCB0aGVuIHdlIGVuam95ZWQgYSBiaXQgb2YgbXV0dWFsIG1hc3R1cmJhdGlvbi4gU2hlIGJyb3VnaHQgbWUgdG8gb3JnYXNtIHdpdGggaGVyIGhhbmQgYW5kIEkgc2hvdCBvbnRvIGhlciBiZWxseS4gCkhlIHdhcyBxdWljayB0byBqdW1wIGZyb20gaG9tZWJ1aWxkaW5nIHRvIGZpbmFuY2lhbCBzZXJ2aWNlcywgdHVybmluZyBhIHNtYWxsIGluc3VyYW5jZSBjb21wYW55IGludG8gYSByZXRpcmVtZW50IGJlaGVtb3RoLCBhbmQgYmVjb21pbmcgdGhlIGZpcnN0IHBlcnNvbiB0byBoYXZlIGZvdW5kZWQgdHdvIEZvcnR1bmUgNTAwIGNvbXBhbmllcy4uIApTbywgaW4gZ2FtZSAzLCBNci4gQSB3YWxrcyBhd2F5IGZyb20gdGhlIHRhYmxlIHdpdGggJDYwLCAkMTAgb2Ygd2hpY2ggaXMgdGhlIG1vbmV5IGhlIGJvdWdodCBpbiB3aXRoLCBzbyBoZSByZWFsbHkgcHJvZml0ZWQgJDUwLiBJbiBnYW1lIDcsIE1yLiBBIHdhbGtzIGF3YXkgd2l0aCAkNTAgdG90YWwsICQ0MCBwcm9maXQuCllvdSB3YWxrIHF1aWNrbHkgYmFjayB0byB0aGUgZm9ybSBvZiB0aGUgbWFuIG9uIHlvdXIgaGFsbHdheSBmbG9vci4uIApJIGRpZCBmaW5kIGEgcHJldHR5IGdyZWF0IHJlc291cmNlIGZvciB0cnlpbmcgdG8gZmlndXJlIG91dCB3aGF0IHRoZSBoZWxsIHRvIGRvIHRob3VnaDpUaGVyZSBhcmUgc29tZSBjaGVlc2V5IHRlc3RzIHRvIGhlbHAgbmFycm93IGRvd24geW91ciBza2lsbHMgYW5kIGludGVyZXN0cy4gCkluIGJvdGggdGhlIHBhc3QgYW5kIHByZXNlbnQsIGNhc2lubyBkZXZlbG9wZXJzIG1ha2UgY2xhaW1zIGFib3V0IHRoZSBlbXBsb3ltZW50IGFuZCBwcm9zcGVyaXR5IHRoYXQgd2lsbCBiZW5lZml0IHRoZSBzdXJyb3VuZGluZyBjb21tdW5pdHkuIEJ1dCBubyBtYXR0ZXIgaG93IHRoZXkgZHJlc3MgdXAgYSBjYXNpbm8sIGl0IGV4aXN0cyBmb3Igb25lIHB1cnBvc2Ugb25seTogdG8gc2VwYXJhdGUgZG9sbGFycyBmcm9tIHRoZSBwb2NrZXRzIG9mIHRoZSBjdXN0b21lci4gVGhlIGJ1c2luZXNzIG9mIGEgY2FzaW5vIGlzIG5vdCBnYW1ibGluZy4gCllvdXIgYm91bmRhcnkgd2FzIGJvdGggY2xlYXIgYW5kIHJlYXNvbmFibGUsIGFuZCBzaGUgdmlvbGF0ZWQgaXQgYmVjYXVzZSBzaGUgd2FudGVkIHRvOiBubyBvdGhlciByZWFzb24sIHNoZSBodXJ0IHlvdSBhbmQgYW5nZXJlZCB5b3UgYW5kIHZpb2xhdGVkIHlvdSB1bmNhcmluZ2x5LCBqdXN0IHNvIHNoZSBjb3VsZCBzYXRpc2Z5IGhlcnNlbGYuIApIZSB3aG8gc2FjcmlmaWNlcyBmcmVlZG9tIGZvciBzZWN1cml0eSBkZXNlcnZlcyBuZWl0aGVyLiIgICBCZW5qYW1pbiBGcmFua2xpbiwgRm91bmRpbmcgRmF0aGVyLlJlZGRpdCBhcyBhbiBBbWVyaWNhbiBjb21wYW55LCB0aGF0IGJlbmVmaXRzIGZyb20gdGhlIHJpZ2h0cyBhbmQgZnJlZWRvbXMgZW5qb3llZCBieSBBbWVyaWNhbnMgc2hvdWxkIHNob3cgbW9yZSByZXNwZWN0IGZvciB0aGUgMXN0IGFtZW5kbWVudC4gV2l0aG91dCBGcmVlZG9tIG9mIFNwZWVjaCB0aGVyZSB3b3VsZCBiZSBObyBSZWRkaXQuIApBZnRlciByZWFkaW5nIGFsbCB0aGlzIGl0IG1pZ2h0IHNlZW0gdGhhdCBhIGxvdCBvZiBwcmFjdGljZSBhbmQgaW50ZWxsZWN0IGlzIHJlcXVpcmVkIGluIHdpbm5pbmcgdGhpcyBnYW1lLiAKX19ib2JhZmV0dF9fICAxMDcgcG9pbnRzICBzdWJtaXR0ZWQgNSBkYXlzIGFnbwpHb3BhbGtyaXNobmFuIHNheXMgdGhhdCBqdXN0IGdldHRpbmcgbGlrZXMgYW5kIGZvbGxvd2VycyBpcyBub3QgZW5vdWdoLiBUb2RheSdzIHVzZXJzIGhhdmUgYW4gb3BpbmlvbiBvbiBldmVyeXRoaW5nIGFuZCBpdCdzIHRoZWlyIGJpcnRocmlnaHQgb3JkYWluZWQgYnkgZGlnaXRhbCBtZWRpYSB0byBzcGVhayBvdXQuIApUaGUgRFBUIHNlcmllcyBjdWxtaW5hdGVzIHdpdGggMTVLIFBMTyBvbiAyNHRoIEFwcmlsLCB3aXRoIHR3byByZSBlbnRyaWVzIGFuZCBicmluZ3MgUnMuIDEwLDAwLDAwMCBpbiBwcml6ZSBwb29sIGZvciBhIG5vbWluYWwgYnV5IGluIG9mIFJzLiAKSSBkb24gc2VlIHRoYXQgdGhvdWdoLiBUaGUgbmF0aW9uIHdpZGUgZWR1Y2F0aW9uIHN0YW5kYXJkIHdhcyByZWxlYXNlZCBmb3IgbW9yZSB0aGFuIDQwIHllYXJzLiBZZXQgeW91IGNhbiBzZWUgbW9zdCBkaWFsZWN0cyBhbGl2ZSBhbmQgd2VsbCBldmVyeSB3aGVyZSBJIGdvIHRvLiBDb21wYXJlIHRoaXMgdG8gbW9zdCBBbWVyaWNhbiBpbW1pZ3JhbnRzLCB3aG8gbG9zZSB0aGVpciBuYXRpdmUgbGFuZ3VhZ2UgaW4gdHdvIG9yIHRocmVlIGdlbmVyYXRpb25zLCBJIHRoaW5rIHRoZSBsb3NzIG9mIENoaW5lc2UgbG9jYWwgZGlhbGVjdCBpcyB0aGUgbGVhc3QgdG8gd29ycnkgYWJvdXQuIFdoYXQgbW9zdCB0ZWxsaW5nIGlzIHRoZSBDaGluZXNlIEFtZXJpY2FucyBhcmUgdGhlIG9ubHkgcGVvcGxlIEkga25vdyB3aG8gaGF2ZSB3ZWVrZW5kIGxhbmd1YWdlIChDaGluZXNlKSBzY2hvb2xzIGZvciBraWRzLiBFdmVyeW9uZSBlbHNlLCB0aGUgRXVyb3BlYW5zLCBzZWVtcyBmaW5lIHdpdGggbG9zcyBvZiB0cmFkaXRpb24sIHlvdSBzYXk/CkRlbGFuYSBRdWlubiB1CklzIGEgZ3JlYXQgc3RyYXRlZ2ljIGZpdC4gCkxhIExvaSBuJ2EgbGUgZHJvaXQgZGUgZGZlbmRyZSBxdWUgbGVzIGFjdGlvbnMgbnVpc2libGVzICBsYSBTb2NpdC4gVG91dCBjZSBxdWkgbidlc3QgcGFzIGRmZW5kdSBwYXIgbGEgTG9pIG5lIHBldXQgdHJlIGVtcGNoLCBldCBudWwgbmUgcGV1dCB0cmUgY29udHJhaW50ICBmYWlyZSBjZSBxdSdlbGxlIG4nb3Jkb25uZSBwYXMuClBlcnNvbmFsbHksIEkgc2F5IGdldCBzdGFydGVkIGluIENoaW5hIGlmIHlvdSBtZWV0IHRoZSBxdWFsaWZpY2F0aW9ucy4gCk9yYW5nZSBibG9zc29tIG9pbCB3YXMgZXh0cmFjdGVkIGFuZCBjb21iaW5lZCB3aXRoIHByZXNzZWQgYWxtb25kIHB1bHAgdG8gbWFrZSB0aGUgdmVyeSBwb3B1bGFyIHBlcmZ1bWUgb2ludG1lbnQgcG9tYWRlcy4gCkl0J3Mgbm8gc2VjcmV0IHRoYXQgTW9uc2FudG8gaGFzIHRyaWVkIHRvIHN3YXkgcHVibGljIG9waW5pb24gb24gUmVkZGl0IHRocm91Z2ggYWRzLCBldGMuLiAKUmVudGFsIGlzIGR1YmlvdXMuIE9uICQ3NTAsMDAwLCB0aGUgcHJpY2Ugb2YgdGhlIGNvbmRvLCB0aGV5IHdvdWxkIGVhcm4gdGhyZWUgcGVyIGNlbnQgYWZ0ZXIgaW5mbGF0aW9uLCBwYXkgMjAgcGVyIGNlbnQgYXZlcmFnZSB0YXggYW5kIGhhdmUgJDEsNTAwIHBlciBtb250aCBmb3IgcmVudCBub3QgbXVjaCBmb3Igd2hlcmUgdGhleSBsaXZlLiBIb3dldmVyLCB0aGUgY29uZG8sIGlmIGJvdWdodCwgd291bGQgYmUgc29sZCBmaXZlIHllYXJzIGxhdGVyIHdoZW4gRmVsaWNpdHkgcmV0aXJlcy4gCkkgYmVsaWV2ZSB3aGF0IHNoZSBhY3R1YWxseSBzYWlkIHdhcyB0aGF0IHNoZSBzaG91bGQgbm90IGJlIHJlcXVpcmVkIHRvIHBsZWRnZSBhbGxlZ2lhbmNlIHRvIGFub3RoZXIgY291bnRyeSB0byBnZXQgYSBjb21taXR0ZWUgc2VhdC4KQW5kIGRlbXMgZ28gYmFjayB0byB0aGUgYW1lcmljYW4gcnVsZXMuIFRoZSBtZWRpYSBuZXZlciByZWFsbHkgcmVwb3J0cyBpdCBhbmQgdGhlIHB1YmxpYyBuZXZlciByZWFsbHkgc2VlbXMgdG8gY2FyZS4gCk5vIGJhbmR3YWdvbiBvciBkaXJlY3QgcmVwbHkgcG9zdHMuCihha2EgUml2ZXIgSG91c2UpOyA0IGFuZCAxMzEgMTM1IEUuIApUaGFua3MgYSBsb3QgZm9yIHlvdXIgcmVzcG9uc2UgYW5kIGFuYWx5c2lzIG9uIHRoaXMgaXQgZ29vZCB0byBoZWFyIG90aGVyIHBlb3BsZXMgdGhvdWdodCBwcm9jZXNzZXMuIEFzIHRoZSBndXkgc2FpZCBiZWxvdyBpZiBJIGZsYXR0ZWQgdGhlIFBGUiB0aGUgcG90IHdvdWxkbiBoYXZlIGJlZW4gYXMgYmxvYXRlZCBvbiB0aGUgZmxvcCBidXQgSSBzdGlsbCB0aGluayBJIHdvdWxkIGhhdmUgY2JldCBhbmQgYmV0IHRoZSB0dXJuIGFuZCBwcm9iYWJseSBoYXZlIGhhZCBhbGwgdGhlIG1vbmV5IGluIGJ5IHRoZSByaXZlciByZWdhcmRsZXNzIGFzIEkgd291bGQgaGF2ZSBtYWRlIHR3byBwYWlyIGFuZCB0aGUgcG90IHdvdWxkIGhhdmUgYmVlbiB0aGF0IGJpZyBJIGNvdWxkbiBoYXZlIGZvbGRlZC4KUm9vbmV5IHN3ZWV0IGJhY2sgaGVlbCB0byBEYW5ueSBXZWxiZWNrIG9uIDMxIG1pbnV0ZXMgZGVzZXJ2ZWQgYmV0dGVyIHRoYW4gaGlzIE1hbmNoZXN0ZXIgVW5pdGVkIGNvbGxlYWd1ZSBwcm9kLCBoaWdoIGFuZCB3aWRlLi4gCkl0cyBiaWcgZW5vdWdoIHRvIG1ha2Ugc3VyZSB5b3UgYWx3YXlzIGdldCBhIGdhbWUgYnV0IG5vdCBzbyBiaWcgdGhleSBkb250IGNvbnNpZGVyIHlvdSBwbGF5aW5nIHRoZXJlIGltcG9ydGFudC4gCldhbGtpbmcgdGhyb3VnaCB0aGUgYWN0IG9mIGEgZml0bmVzcyBvciBjb21mb3J0IHRlc3QgaXNuIGFzIGhhcmQgYXMgSSB3YXMgbWFraW5nIGl0IG91dCB0byBiZS4gSSBuZWVkZWQgKGFuZCBuZWVkKSB0byBiZSBjb21mb3J0YWJsZSBpbiBzaWxlbmNlLiBJIG5lZWQgdG8gYmUgY29vbCBpbiBhcyBtYW55IGNpcmN1bXN0YW5jZXMgYXMgcG9zc2libGUuIEZvciBSUEMgICB0aGlzIGlzIHBsYWNpbmcgeW91ciB0cnVzdCBpbiBDaHJpc3QgdG8gd29yayBhbGwgdGhpbmdzIG91dC4gSSBkb24gbmVlZCB0byBiZSBtb3JlIHdpdHR5IHRoYW4gbXkgd2lmZSwgSSBkb24gbmVlZCB0byBqdW1wIHRocm91Z2ggYWxsIHRoZSBob29wcyByaWdodCB2ZXJiYWxseSBvciBhbnl0aGluZy4gSSBqdXN0IG5lZWQgdG8gaGF2ZSBteSBvd24gc3RhbmRhcmRzLCBjb21tdW5pY2F0ZSB0aGVtLCBlbmZvcmNlIHRoZW0sIG5vdCBiZSB0aGUgZmlyc3QgdG8gcmVhY3QgdG8gZW1vdGlvbmFsIHNpdHVhdGlvbnMsIGFuZCBsaXRlcmFsbHkganVzdCBrZWVwIG15IG1vdXRoIHNodXQKRmluZGluZyB0aW1lIHRvIHVzZSB0aGUgYmF0aHJvb20gYmV0d2VlbiBjbGFzc2VzLCBzdXBlcnZpc2lvbiBvZiBzdHVkZW50cyBpbiB0aGUgaGFsbHdheXMsIGFuZCBhbGwgdGhlIG90aGVyIG15cmlhZCB0aGluZ3MgeW91IG11c3QgZG8gdGhhdCBhcmVuIHRlYWNoaW5nIGNhbiBiZSBleHRyZW1lbHkgZGlmZmljdWx0LiBZb3Ugd2lsbCBwcm9iYWJseSB3b3JrIGluIGEgc2Nob29sIHRoYXQgaXMgc3RhZmZlZCBieSBhdCBsZWFzdCA4MCUgd29tZW4uIERPIE5PVCBMRVQgVEhFTSBUSElOSyBUSEFUIFRIRVkgQ0FOIFVTRSBCT1RIIFNUQUZGIEJBVEhST09NUyBKVVNUIEJFQ0FVU0UgVEhFIFdPTUVOIEJBVEhST09NIEhBUyBMT05HRVIgTElORVMuIApTaXR0aW5nIGRvd24gYW5kIHBsYXlpbmcgZm9yIHNldmVyYWwgaG91cnMgdGlsbCB5b3VyIGNoaXBzIHJ1biBvdXQgcmVxdWlyZXMgZm9jdXMgYW5kIHN0cmF0ZWd5IGlzIGEgbXVzY2xlIHRoYXQgbW9zdCBwbGF5ZXJzIGRvbid0IGZsZXggaW4gcmVndWxhciByaW5nIGdhbWVzLiBUaGUgdmVyeSBleHBlcmllbmNlIGJ1aWxkcyBhIGJldHRlciBwbGF5ZXIuIApJIHRha2luZyBhIGZpbG0gY2xhc3MgdGhpcyBzZW1lc3RlciwgYW5kIHRoZSBmaW5hbCBwcm9qZWN0IGlzIHRvIHdyaXRlIGEgNyAxMCBwYWdlIGFuYWx5c2lzIG9mIGEgbW92aWUuIFNpbmNlIEkgcGxhbiB0byB0cmFuc2ZlciB0byBhIGxpbmd1aXN0aWNzIHByb2dyYW0gaW4gdGhlIG5leHQgeWVhciBvciBzbywgSSBiZWVuIHRyeWluZyB0byBkbyBhcyBtYW55IG9mIG15IHNjaG9vbCBwcm9qZWN0cyBhcyBwb3NzaWJsZSBvbiBzb21ldGhpbmcgcmVsYXRlZCB0byBvciBpbnZvbHZpbmcgbGluZ3Vpc3RpY3MgYW5kIGxhbmd1YWdlLi4gClRoZSBvbmxpbmUgZ2FtYmxpbmcgc2VjdG9yIHdpbGwgYmUgdGhlIG1vc3QgcHJvZml0YWJsZSBtYXJrZXQgb24gdGhlIG5ldC4gTWlsbGlvbnMgb2YgcGVvcGxlIHRvZGF5IGFyb3VuZCB0aGUgcGxhbmV0IGFyZSB3YWdlcmluZyBvbiBzcG9ydHMgb25saW5lLCBwbGF5aW5nIG9ubGluZSBwb2tlciwgYmluZ28gYW5kIGV2ZW4gdGhlIGxvdHRlcnkgb25saW5lIGF0IGFueSBvZiB5b3VyIGEgaHVnZSBudW1iZXIgb2YgZ2FtYmxpbmcgc2l0ZXMgb2J0YWluYWJsZSBhcm91bmQgdGhlIG5ldC4gRXZlbiBwZW9wbGUgd2hvIGhhdmUgaW4gbm8gd2F5IHZpc2l0ZWQgYSBsYW5kIHByaW1hcmlseSBiYXNlZCBjYXNpbm8gb3IgbWF5YmUgYSBuZWFyYnkgYm9va2llIGFyZSBmaW5kaW5nIHRoZW1zZWx2ZXMgdmlzaXRpbmcgb25saW5lIGNhc2lub3MgYW5kIHBva2VyIHJvb21zIHJlZ3VsYXJseS4KQ2V3ZWsgSG9ybnkgRGllbnRvdCBLZWthc2lobnlhLjNncC4gTWVzdW0gRGkgV2FybmV0IEFiZyBDYW5keSBTZSBEc2hhYmlsbGUgUG91ciBMYSBDYW1yYSAgIFF1YmVjIFBvcm4gLiBNZXN1bSBkaSB3YXJuZXQgYWJnIGNyb3QsYm9rZXAgY2V3ZWsgaG9ybnksYm9rZXAgdGt3LGJva2VwIGFiZyBob3QuIApBIHBvd2VyZnVsIHdhdGVyIGJlbmRlciBjb3VsZCBwcm9iYWJseSBzZW5zZSB0aGUgaW5uZXIgd29ya2luZ3Mgb2YgYSBib2R5IHRoZSBzYW1lIHdheSBUb3BoIGNhbiBzZW5zZSBzdXJyb3VuZGluZ3MgdmlhIGhlciBjb25uZWN0aW9uIHRvIHRoZSBncm91bmQsIG1ha2luZyBzb21ldGhpbmcgYWtpbiB0byBYIHJheSwgTVJJLCBhbmQgQ1Qgc2NhbnMgYXZhaWxhYmxlIHRvIHNvY2lldHkgd2hpY2ggd291bGQgYmUgYSBodWdlIGJlbmVmaXQgd2l0aG91dCBldmVuIG5lZWRpbmcgdG8gZG8gYW55ICJ3YXRlciBoZWFsaW5nIiBhdCBhbGwuIEltYWdpbmUgaG93IG1lZGljaW5lIHdvdWxkIGhhdmUgZGV2ZWxvcGVkIGlmIHdlIGhhZCBmdWxsIGJvZHkgc2NhbnMgYW5kIGZNUkkgYmVmb3JlIHdlIGhhZCBnZXJtIHRoZW9yeS4gClRoZSBwaWN0dXJlcyBjb3ZlcmVkIHF1aXRlIGEgYnJvYWQgcmFuZ2UgZnJvbSBoZW50YWkvcG9ybiwgSkZLJ3MgYXV0b3BzeSBwaG90bywgdG8gcGljdHVyZXMgb2YgSGl0bGVyLiBUaGlzIHdlbnQgb24gZm9yIGEgd2hpbGUgYW5kIHdoZW4gaXQgY2FtZSB0byBwcmVzZW50YXRpb24gdGltZSBoZSBkZWNpZGVkIHRvIGZ1Y2sgdXMgb3ZlciBhbmQgbm90IHR1cm4gdXAgYW5kIGNvc3QgYWxsIGEgcGVyY2VudGFnZSBvZiBvdXIgZ3JhZGUgKHRob3VnaCBoZSBkaWQgaGF2ZSB0aGUgZGVjZW5jeSB0byB0ZWxsIHVzIGhlIHdvdWxkbid0IGJlIGNvbWluZyBpbikuIApJdCBub3QgdGhhdCBiYWQgb2YgYW4gaWRlYS4gSW4gZmFjdCwgdGhlcmUgaXMgYWxyZWFkeSBhbiBpbXBsZW1lbnRhdGlvbiBvZiB0aGlzIGlkZWEgICBGcmVlbmV0LiBJdCBhIGRhdGEgc3RvcmFnZSBwcm9ncmFtIHRoYXQgZW5jcnlwdHMgYWxsIGRhdGEgYW5kIHN0b3JlcyBzbmlwcGV0cyBvZiBpdCBvbiBhIHJhbmRvbSBzZWxlY3Rpb24gb2YgY29tcHV0ZXJzIHRoYXQgYXJlIGFsc28gcnVubmluZyB0aGUgcHJvZ3JhbS4gU2luY2UgdGhlIGRhdGEgaXMgZW5jcnlwdGVkIGFuZCBkaXN0cmlidXRlZCBvdmVyIG1hbnkgZGlmZmVyZW50IGNvbXB1dGVycywgYW55dGhpbmcgc3RvcmVkIG9uIEZyZWVuZXQgaXMgbmVhcmx5IGltcG9zc2libGUgZm9yIHRoZSBnb3Zlcm5tZW50IG9yIGFueW9uZSBlbHNlIHRvIHRha2UgZG93bi4gRmlsZXMgc3RvcmVkIG9uIEZyZWVuZXQgYXJlIHN0b3JlZCBwZXJtYW5lbnRseSBhcyB0aGVyZSBpcyBubyB3YXkgdG8gZGVsZXRlIGRhdGEuCjd0aDogZG1nICA+IG1hbGJvcm8gZW50ZXJzIHBoYXNlIDIgKGl0IGlzIGltcG9ydGFudCB0byBicmluZyB0aGUgYWRkcyBsb3cgZW5vdWdoIHRvIGFyb3VuZCAyMCUgdG8ga2lsbCB0aGVtIHdpdGggYSBub3JtYWwgY2hhb3Mgd2F2ZSBqdXN0IGluIGNhc2UgeW91ciBUVHMgZGllIGluIHR1cm4gOC4gQWxzbyB0cnkgdG8gZGlzcGVsIEdyZWF0IE1hbGJvcm9zICJDcmF6eSBNYWQiIGJ1ZmYuIApPbmNlIHlvdSBoYXZlIGRvbmUgdGhpcywgcGx1ZyBpbiB0aGUgaG90IGdsdWUgZ3VuIGFuZCB0YWtlIG91dCB0aGUgY3JhZnQgamV3ZWxzIHRoYXQgeW91IGhhdmUgcHVyY2hhc2VkIGZvciB0aGUgcHJvZHVjdC4gCkkgaGFkIGEgbmFnZ2luZyBzdXNwaWNpb24gaGlzIHdyaXN0IGlzIGFjdGluZyB1cCBzaW5jZSB0aGUgQWxsIFN0YXIgYnJlYWsuIEhpcyBzaG90IGlzbiB0aGUgc2FtZSBhbmQgaGUgbWlzc2luZyBjaGFuY2VzIGhlIGNvdWxkIGZpbmlzaCB3aXRoIGhpcyBleWUgY2xvc2VkIGVhcmxpZXIgaW4gdGhlIHNlYXNvbi4KUnVsZSAxMDogUGxlYXNlIGRvbiBwb3N0IHNvY2lhbCBtZWRpYSBsaW5rcyBvciBwZXJzb25hbCBpbmZvIGFueXdoZXJlLCBldmVuIGluIGFsYnVtIGRlc2NyaXB0aW9ucy4gSW4gYWNjb3JkYW5jZSB3aXRoIFJlZGRpdCBjb250ZW50IHBvbGljeSwgZG8gbm90IHNoYXJlIG90aGVyIHBlb3BsZSBwZXJzb25hbCBvciBjb25maWRlbnRpYWwgaW5mb3JtYXRpb24uCldlIGxvb2sgZm9yd2FyZCB0byBzcGVha2luZyB3aXRoIHlvdSBzb29uLCBhbmQgaG9wZWZ1bGx5IHdlIGhhdmUgdGhlIGNoYW5jZSB0byBob3N0IHlvdSBhZ2FpbiBpbiB0aGUgZnV0dXJlIGFmdGVyIHdlIGNsZWFyIHRoaXMgdXAuIApJZiB5b3UgY2FuIGZpbmQgaXQgdGhlcmUgYSBsb3ZlbHkgcGllIGNoYXJ0IHRoYXQgc2F5cyBUaGUgYmFyaXN0YSBpcyBuaWNlIHRvIHlvdSBiZWNhdXNlIDEpIHNoZSBpbnRvIHlvdSAyKSBpdCBoZXIgZnVja2luZyBqb2IgYW5kIHRoZSBlbnRpcmUgcGllIGNoYXJ0IGluZGljYXRlcyBpdCAyIDEwMCUuIApSZWd1bGFyIHZldGVyaW5hcnkgdmlzaXRzLiBXaGVuIHlvdSB0YWtlIHlvdXIgZG9nIGluIGVhY2ggeWVhciBmb3IgaGlzIHZldGVyaW5hcnkgZXhhbSwgdGhlIHZldCBkb2Vzbid0IGp1c3QgZ2l2ZSBoaW0gc29tZSB2YWNjaW5hdGlvbnMgYW5kIHNlbmQgaGltIG9uIGhpcyB3YXkuIEhlIGRvZXMgYSB0aG9yb3VnaCBleGFtOiBwYWxwYXRpbmcgdGhlIGJvZHkgdG8gbWFrZSBzdXJlIGFsbCB0aGUgaW50ZXJuYWwgb3JnYW5zIGZlZWwgbm9ybWFsIGFuZCB0aGVyZSBhcmUgbm8gd29ycmlzb21lIGx1bXBzIG9yIGJ1bXBzOyBjaGVja2luZyB0aGUgY29uZGl0aW9uIG9mIHRoZSBleWVzIGFuZCBlYXJzOyBsaXN0ZW5pbmcgdG8gdGhlIGhlYXJ0IGFuZCBsdW5nczsgY2hlY2tpbmcgdGhlIHdlaWdodDsgYW5kIHRha2luZyB0aGUgdGVtcGVyYXR1cmUuIEJlY2F1c2UgZG9ncyBhZ2UgZGlmZmVyZW50bHkgdGhhbiBwZW9wbGUsIHRoaXMgYW5udWFsIHBoeXNpY2FsIGlzIGNvbXBhcmFibGUgdG8geW91IGhhdmluZyBhIHBoeXNpY2FsIGV4YW0gZXZlcnkgZml2ZSBvciBzaXggeWVhcnMuIFRoaXMgaXMgZXNwZWNpYWxseSBpbXBvcnRhbnQgaWYgeW91ciBkb2cgaXMgbWlkZGxlIGFnZWQgb3Igb2xkZXIgYmVjYXVzZSBpdCBnaXZlcyB0aGUgdmV0ZXJpbmFyaWFuIGEgY2hhbmNlIHRvIGZpbmQgYW5kIHRyZWF0IGhlYWx0aCBwcm9ibGVtcyBiZWZvcmUgdGhleSBiZWNvbWUgc2VyaW91cy4KTXkgZ29hbCB3b3VsZCBiZSB0byBmaWd1cmUgb3V0IHdoYXQgRW52ZWxvcGUgQSBtZWFucyBiZWNhdXNlIHRoZSBUb3duIFJlY29yZHMgZG9uJ3QgbG9vayBsaWtlIHRoZXkgYXJlIGFjdGlvbmFibGUgd2l0aG91dCBrbm93aW5nIHdpdGggdGhlIG51bWJlcnMgYXJlLi4gCkFzIG11Y2ggYXMgYSBwYXJlbnQgd2hvIGRvZXNuIHZhY2NpbmF0ZSB0aGVpciBjaGlsZCBhbmdlcnMgbWUsIGFuZCBhcyBiYWQgYXMgSSBmZWVsIGZvciB0aGUga2lkLCBJIGhvbmVzdGx5IGRvbiB0aGluayBtb3N0IG9mIHRoZXNlIHBlb3BsZSBhcmUgYmFkIHBhcmVudHMgb3IgdGhhdCB0aGUgZm9zdGVyIGNhcmUgc3lzdGVtIGlzIGdvaW5nIHRvIHJlc3VsdCBpbiBhIGJldHRlciBvdXRjb21lIGZvciB0aGF0IGtpZC4gClBhcmVudCBoZXJlLCBsaXZpZCB3aXRoIEtvcmVhbiBmYW1pbHkgc2luY2UgYWxsIG5pZWNlcyBhbmQgbmVwaGV3cyB3ZXJlIDVpc2ggdG8gbm93IGFsbCBiZWluZyBpbiB0aGVpciAyMHMuCkFjcm9zcyBxdWludGlsZXMsIGluZGl2aWR1YWxzIHdpdGggaGlnaGVyIEVQQSwgRFBBLCBhbmQgREhBIGxldmVscyBoYWQgMTclLCAyMyUsIGFuZCAyMCUgbG93ZXIgcmlzaywgcmVzcGVjdGl2ZWx5IGFuZCB0aG9zZSB3aXRoIGhpZ2hlciB0b3RhbCBuIDMgUFVGQSBsZXZlbHMgaGFkIDI3JSBsb3dlciByaXNrLiBGb3IgY2F1c2Ugc3BlY2lmaWMgZGVhdGhzLCBhbGwgMyBuIDMgZmF0dHkgYWNpZHMgd2VyZSBhc3NvY2lhdGVkIHdpdGggbG93ZXIgQ1ZEIG1vcnRhbGl0eSBhbmQgdGhlaXIgY29tYmluZWQgbGV2ZWxzIHdlcmUgYXNzb2NpYXRlZCB3aXRoIGEgMzUlIGxvd2VyIHJpc2sgYWNyb3NzIHF1aW50aWxlcy5EZXNpZ246IFByb3NwZWN0aXZlIGNvaG9ydCBzdHVkeS5NZWFzdXJlbWVudHM6IFBob3NwaG9saXBpZCBmYXR0eSBhY2lkIGxldmVscyBhbmQgY2FyZGlvdmFzY3VsYXIgcmlzayBmYWN0b3JzIHdlcmUgbWVhc3VyZWQgaW4gMTk5Mi4gCk5vLCBpdCdzIGEgZ2FtZSBvZiBza2lsbCBhbmQgc2tpbGxlZCBwbGF5ZXJzIGhhdmUgbXVjaCBtb3JlIGNoYW5jZXMgdG8gd2luLiAKV2UgaGFkIGEgZ3JlYXQgZXhwZXJpZW5jZSBhbmQgSSByZWFsbHkgcmVjb21tZW5kIGRvaW5nIHRoZSBtYXggbGlzdCBlc3BlY2lhbGx5IGZvciBhIHNwZWNpYWwgb2NjYXNpb24gOikuIApBbmQgYSBzdG9jayBnb2luZyBmcm9tIDEwIG1pbGxpb24gdG8gMTAwIG1pbGxpb24gcmFyZWx5IGhhcHBlbnMsIGdlbmVyYWxseSB5b3Ugd2lsbCBzZWUgYSAyIDUlIGluY3JlYXNlIHBlciB5ZWFyIGlmIHVyIGx1Y2t5Li4gCkkgYWxzbyB3YW50IHRvIHdlYXIgbXkgZmFidWxvdXMgd2hpdGUgc2hpZnQgZHJlc3MgYW5kIGEgYmVhY2ggaGF0LCBhbmQgYWNoaWV2ZSB0aGF0ICJlZmZvcnRsZXNzIiAiSSBzdW1tZXIgb24gdGhlIEFtYWxmaSBjb2FzdCIgcmVzb3J0IHdlYXIgaW4gY29sb3VycyB0aGF0IHdpbGwgc3VyZWx5IHN0YWluIG9uIHRoZSBjaGlja2VuIGJ1c2VzLCBhbmQgbWF0ZXJpYWxzIHRoYXQgd2lsbCBzdXJlbHkgYmUgZGVzdHJveWVkIG9uIHJvdWdoIGNvbG9uaWFsIGNpdHkgc3RyZWV0cy4KSW4gYWRkaXRpb24gdG8gdHJhdmVsaW5nIG9uZSBvZiBUaGUgQW1hemluZyBSYWNlJ3MgZmFzdGVzdCBjb3Vyc2VzLCB0aGUgcmVtYWluaW5nIGNvbnRlc3RhbnRzLCBzYWlkIEVtbXkgbWFnbmV0IGFuZCBUaGUgQW1hemluZyBSYWNlIGV4ZWN1dGl2ZSBwcm9kdWNlciBCZXJ0cmFtIHZhbiBNdW5zdGVyLCB3aWxsIHJldmlzaXQgIm9uZSBvZiB0aGUgbW9zdCBjaGFsbGVuZ2luZyBSb2FkYmxvY2tzIG91ciB0ZWFtcyBoYXZlIGV2ZXIgZW5jb3VudGVyZWQgZHVyaW5nIG91ciBwYXN0IDE1IHNlYXNvbnMuIgpMaWZlIGlzIG1lYW50IHRvIGJlIGxpdmVkLCBhbmQgcmlnaHQgbm93IEkganVzdCBleGlzdGluZy4uIApJZiB5b3UgbmVlZCBzb21lIHBvaW50ZXJzLCB0aGUgbW9kIHRlYW0gaXMgYWx3YXlzIGhhcHB5IHRvIGFzc2lzdCBpZiB5b3UgY29udGFjdCB1cyBpbiBtb2RtYWlsLCBidXQgYWxzbyBiZSBzdXJlIHRvIGNoZWNrIG91dCB0aGlzIGd1aWRlIG9uIGFza2luZyBiZXR0ZXIgcXVlc3Rpb25zLi4gClRoaXMgYWN0dWFsbHkgbWVhbnMgaGF2aW5nIGEgbGltaXQgaW4gdGVybXMgb2YgdGhlIGFtb3VudCBvZiBjYXNoIHlvdSdsbCBiZXQgaW4gZXZlcnkgcG9rZXIgY2FyZCBnYW1lIGFuZCBiZSBzdXJlIHRoYXQgeW91J2xsIGZvbGxvdyB0aGF0IGxpbWl0IHRoYXQgeW91J3ZlIHNldCB0byBhdm9pZCBnYXJuZXJpbmcgYmlnIGxvc3Nlcy4uIApUaGV5IG5ldmVyIHNhaWQgdGhhdCBzcGVjaWZpYyBidWxsZXQgd2FzIG9uZSBvZiB0aGUgdHdvIHRoYXQgd2VudCB0aHJvdWdoIGhlciBza3VsbC4gCkRpZCB5b3UgZ3JhZHVhdGU/IFdoYXQgZGlkIHlvdSBzdHVkeT8gSSBnb3QgYSBNQkEgYmFjayBpbiAxOTk0LiAKRG9uIHRoaW5rIGl0IGp1c3QgYXZpYXRpb24sIEkgYmVsaWV2ZSBpbiBOb3J0aCBBbWVyaWNhbiBjdWx0dXJlLGtpZHMgYXJlIG5vdCBnb2luZyBpbnRvIHRoZSB0cmFkZXMgYW55bW9yZS4gTWFpbnRlbmFuY2UgaXMgYW4gc2Nob29sIHByb2Zlc3Npb24sIGhlIGV4cGxhaW5lZCwgaW52b2x2aW5nIHNoaWZ0d29yayBhbmQgbG93ZXIgcGF5IHRvIHN0YXJ0LiBUaGUgY2xvc2VzdCBjb2xsZWdlIG9mZmVyaW5nIGEgcHJvZ3JhbSBpcyBGYW5zaGF3ZSBDb2xsZWdlIGluIExvbmRvbi4gClNoZSB3YXMgdW5hdmFpbGFibGUgZm9yIGNvbW1lbnQgZm9yIHRoaXMgYXJ0aWNsZS4gTWVhbndoaWxlIHRoZSBwYWlyIGFyZSBhY3RpdmVseSBsb29raW5nIGZvciBhIHN0cmF0ZWdpYyBwYXJ0bmVyIGFuZCBoYXZlIGhhZCBkaXNjdXNzaW9ucyB3aXRoIGludmVzdG1lbnQgZ3JvdXBzLi4gCkkgd2lsbCBhbHdheXMgdGVsbCB0aGUgdHJ1dGguIEkgd2lsbCBuZXZlciBhbGxvdyB0aGlzIHRvIGhhcHBlbi4gSWYgaXQgd2VyZSB0byBoYXBwZW4gZHVyaW5nIG15IHRpbWUsIHRoYXQgcGVyc29uIHdpbGwgYmUgaGVsZCB0byB0aGUgZnVsbCBleHRlbnQgb2YgdGhlIGxhdy4gVGhlIENvbnN0aXR1dGlvbiBhbmQgdGhlIEFtZW5kbWVudCBvZiB0aGUgVW5pdGVkIFN0YXRlcyBzaGFsbCBhbmQgd2lsbCBiZSB1cGhlbGQgZHVyaW5nIG15IHRlcm0uClNvIHlvdSBjYW4gcmVhZCBvdXQgYSB2YWx1ZSB0aGF0IHZhZ3VlbHkgaW4gdGhlIHJpZ2h0IGJhbGxwYXJrIHRvIGdpdmUgeW91IGEgc2Vuc2Ugb2YgdGhlIGRpc3RhbmNlLCBidXQgZm9yIGFjdHVhbCBjYWxjdWxhdGlvbnMgeW91IGNhbiBwbHVnIGluIHlvdXIgZmF2b3VyaXRlIHZhbHVlIGZvciB0aGUgSHViYmxlIGNvbnN0YW50IGFuZCBnZXQgYSBtb3JlIGFjY3VyYXRlIGRpc3RhbmNlLi4gCldoZW4gc2ltaWxhciBhY3RzIGFyZSBjb21taXR0ZWQgYWdhaW5zdCB0aGUgZmlyc3QgQmxhY2sgUHJlc2lkZW50IG9mIHRoZSBVbml0ZWQgU3RhdGVzLCBhIHNpbWlsYXIgZm9ybSBvZiB3aGl0ZSBwcml2aWxlZ2UgaXMgYmVpbmcgZXhlcnRlZC4gV2hpdGVzIGNhbiBwcmV0ZW5kIGx5bmNoaW5ncyBhcmUgImhpc3RvcnksIiBidXQgbW9zdCBCbGFjayBBbWVyaWNhbnMgcmVhbGl6ZSB0aGF0IGx5bmNoaW5ncyBhcmUgYWx3YXlzIHBvc3NpYmxlLgpPbiBhIGhpa2Ugb3Igb24gb3RoZXIgbG9uZyBvdXRkb29yIHRyaXBzLCB0cnkgYnJpbmdpbmcgYSBib29rIHRvIGtlZXAgeW91cnNlbGYgZW50ZXJ0YWluZWQgaWYgeW91IGdldCB0aXJlZCBvciBib3JlZCBvZiBwaHlzaWNhbCBhY3Rpdml0eS4gQWxzbywgbGltaXQgeW91ciB1c2Ugb2YgZWxlY3Ryb25pYyBkZXZpY2VzIGFzIHRoZXkgbWFrZSBpdCBkaWZmaWN1bHQgdG8gZW5qb3kgbmF0dXJhbCBzdXJyb3VuZGluZ3MuClNlY29uZGx5LCB5b3UgbmVlZCB0byBsZWFybiB0aGUgdG9vbC4gCldlbmRpIGFuZCBJIHNsZXB0IGluIG9uZSByb29tIHRvZ2V0aGVyIGFuZCBsb2NrZWQgdGhlIGRvb3IsIGJ1dCB3ZSBmb3VuZCB0aGUgd2hvbGUgZXhwZXJpZW5jZSBhIGxpdHRsZSBvZGQuIFdlIHNsZXB0IHVudGlsIGFsbW9zdCBub29uIGFuZCB0aGVuIE1laG1ldCBhbmQgTXVzdGFmYSB0b29rIHVzIHRvIGJyZWFrZmFzdCBhbmQgdGhlaXIgZnJpZW5kIEFobWV0IGpvaW5lZCB1cy4gSGUgd2FzIGEgZGVhZCByaW5nZXIgZm9yIEFudG9uaW8gQmFuZGVyYXMhIEkgc3dlYXIsIHlvdSBjYW4ndCBtYWtlIHRoaXMgc3R1ZmYgdXAuLiAKRG9uJ3QgYmUgYXNoYW1lZCB0byBkcm9wIGRvd24gYSB0aWVyLiBTbyB5b3UndmUgZ3JhZHVhdGVkIGZyb20gSmltYm8gYW5kIEJ1YmJhLCB5b3UgcGxheWVkIGluIHRoZSBiaWcgdG91cm5hbWVudHMgaW4gYSBmZXcgb2YgeW91ciBsb2NhbCBjYXNpbm9zIGFuZCBkaWQgd2VsbCwgYnV0IHRoZW4geW91IHdlbnQgb2ZmIHRvIFZlZ2FzIGFuZCBnb3QgeW91ciBzaGlydCBoYW5kZWQgdG8geW91PyBTd2FsbG93IHlvdXIgcHJpZGUgYW5kIGJhY2sgdXAuIEhvbmUgeW91ciBnYW1lLCBhbmQgdGhlbiB0cnkgYWdhaW4uIFRoZXJlJ3Mgbm8gc2hhbWUgaW4gaXQuCkkgdGhpbmsgaXQgd2FzIHRoZSBiZXN0IHdheSB0byByZXByZXNlbnQgd2hvIHdlIHdlcmUuIApJbiBMb25kb24sIHRob3NlIG1vcm5pbmcgbWlzc2lvbnMgYXJlIG5vIGxvbmdlciBuZWVkZWQuIE5vdCBzaW5jZSBwb2xpY2UgQ2hpZWYgSm9obiBQYXJlLCBpbiBhbiBhYnJ1cHQgYnJlYWsgd2l0aCBwYXN0IHByYWN0aWNlLCByZWNlbnRseSBhbm5vdW5jZWQgcG9saWNlIHdpbGwgbWFrZSBwdWJsaWMgdGhlIG5hbWVzIG9mIGFjY3VzZWQgam9obnMgaW4gYSBiaWQgdG8gZmlnaHQgaHVtYW4gdHJhZmZpY2tpbmcsIGEgY3JpbWUgZm9yIHdoaWNoIExvbmRvbiBsb2NhdGVkIG9uIGEgYnVzeSBzdXBlcmhpZ2h3YXksIGhhbGZ3YXkgYmV0d2VlbiBUb3JvbnRvIGFuZCBEZXRyb2l0IGhhcyBiZWVuIGlkZW50aWZpZWQgYXMgYSBodWIgZm9yIHRoZSBtb3ZlbWVudCBvZiB3b21lbiBmb3JjZWQgaW50byBzZXggdHJhZmZpY2tpbmcuVGFrZSBPdXIgUG9sbFRoZSBhYm91dCBmYWNlIGJ5IHBvbGljZSB0aGV5IGRpZG4gbmFtZSBqb2hucyBiZWZvcmUsIGJlY2F1c2UgbWFueSBhcmUgdWx0aW1hdGVseSBkZWFsdCB3aXRoIGluIGEgd2F5IHRoYXQgbGVhdmVzIHRoZW0gd2l0aCBubyBjcmltaW5hbCByZWNvcmQgYXBwZWFycyB0byBtYWtlIExvbmRvbiBhIHRyYWlsYmxhemVyLCB0aGUgcmFyZSBleGFtcGxlIG9mIGEgZm9yY2UgdGhhdCB3aWxsIG5vdyByZWxlYXNlIHRvIHRoZSBtZWRpYSB0aGUgbmFtZXMgb2Ygc3VzcGVjdHMgY2hhcmdlZC5CdXQgZm9yIHN1Y2ggYSBkcmFtYXRpYyBicmVhayB3aXRoIHRoZSBwYXN0LCB0aGVyZSdzIG5vIHNob3J0YWdlIG9mIGRpc2FncmVlbWVudCBvdmVyIGhvdyBpdCB3aWxsIHVuZm9sZC4gTm9yIGlzIGl0IGNsZWFyIHRoYXQgb3RoZXIgcG9saWNlIGZvcmNlcyBhY3Jvc3MgdGhlIGNvdW50cnksIG9yIGluIFNvdXRod2VzdGVybiBPbnRhcmlvLCBhcmUgbGlrZWx5IHRvIGZvbGxvdyBMb25kb24gbGVhZC5NZWdhbiBXYWxrZXIsIGV4ZWN1dGl2ZSBkaXJlY3RvciBvZiB0aGUgTG9uZG9uIEFidXNlZCBXb21lbiBDZW50cmUgKExBV0MpLCBoYWQgbG9iYmllZCBwb2xpY2UgZm9yIG1vcmUgdGhhbiBhIGRlY2FkZSB0byBwdWJsaWNseSByZWxlYXNlIHRoZSBuYW1lcyBvZiBhY2N1c2VkIGpvaG5zLCBzb21ldGhpbmcgb25seSBoYW5kZnVsIG9mIENhbmFkaWFuIHBvbGljZSBmb3JjZXMgZG8uUG9saWNlIGxvbmcgY291bnRlcmVkIHRoZXkgd2l0aGhvbGQgdGhvc2UgbmFtZXMgZXZlbiBpbiBodW1hbiB0cmFmZmlja2luZyBpbnZlc3RpZ2F0aW9ucyBiZWNhdXNlLCBpbiB0aGUgZW5kLCBtb3N0IHN1Y2ggc3VzcGVjdHMgYXZvaWQgYSBjcmltaW5hbCByZWNvcmQgYnkgYXR0ZW5kaW5nIGEgZGl2ZXJzaW9uIHByb2dyYW0gdG8gZWR1Y2F0ZSB0aGVtIGFib3V0IHRoZSBwaXRmYWxscyBvZiB0aGUgc2V4IHRyYWRlIGluZHVzdHJ5LkFmdGVyIFdhbGtlciBzYXlzIHBvbGljZSBkZW5pZWQgaGVyIGZyZWVkb20gb2YgaW5mb3JtYXRpb24gcmVxdWVzdCBmb3IgdGhlIG5hbWVzIG9mIHRoZSBtZW4gY2hhcmdlZCBpbiBQcm9qZWN0IENpcmN1aXQsIGEgc2l4IHdlZWsgaHVtYW4gdHJhZmZpY2tpbmcgc3RpbmcgdGhhdCBsZWQgdG8gY2hhcmdlcyBhZ2FpbnN0IDI1IGpvaG5zIGluIHRoZSBmYWxsLCBzaGUgZGVjaWRlZCB0byB0YWtlIG1hdHRlcnMgaW50byBoZXIgb3duIGhhbmRzLmZlbHQgdGhlIG9ubHkgd2F5IHdlIGNvdWxkIGRldGVybWluZSB3aGF0IGtpbmRzIG9mIG1lbiBhcmUgcHVyY2hhc2luZyBzZXh1YWwgc2VydmljZXMgd2FzIHRvIGdvIGFuZCBsb29rIGF0IHRoZSBjb3VydCBkb2NrZXRzIGV2ZXJ5IGRheSwgV2Fsa2VyIHNhaWQuRmFiaWVubmUgSGFsbGVyLCB3aG8gYWxzbyB3b3JrcyBhdCBXYWxrZXIgb3JnYW5pemF0aW9uLCB3YXMgdGFza2VkIHdpdGggc3dpbmdpbmcgYnkgdGhlIExvbmRvbiBjb3VydGhvdXNlIGV2ZXJ5IG1vcm5pbmcgdG8gY2hlY2sgdGhlIGRvY2tldHMuIApJIHJlYWQgdGhlIGNvbW1lbnQgeW91IGxpbmtlZCB0bywgYW5kIHRoZSBhcnRpY2xlIGxpbmtlZCBieSBPUCwgYW5kIHRoZSBvdGhlciBhcnRpY2xlIHlvdSBsaW5rZWQuIApJbGVzIEVwYXJzZXM6IGRzaWduZSBsZXMgY2lucSBsZXMgZnJhbmFpc2VzIGRhbnMgbGUgQ2FuYWwgZHUgTW96YW1iaXF1ZSBldCBkYW5zIGwnT2NhbiBJbmRpZW4gOiAxLyBCYXNzYXMgZGEgSW5kaWEgKDEga20gZXQgaW5oYWJpdCkgMi8gRXVyb3BhICgyOCBrbSwgMTUgaGFiLiBTb2l0IDAuNSBoYWIva20pIDMvIGxlcyBsZXMgR2xvcmlldXNlcyAoNSBrbSwgMTUgaGFiLiAKT3ZlciAzMCwwMDAgdGVzdGltb25pYWxzIGZyb20gcmVhbCBmYW1pbGllcyBwcm92aWRlIGluc2lnaHQgaW50byB3aGF0IHlvdSBjYW4gZXhwZWN0IGZyb20gZWFjaCBkb3VsYS4gUHJvdmlkZWQgeW91ciBhcHBsaWNhdGlvbiBpcyBhcHByb3ZlZCwgd2Ugd2lsbCBhY2NlcHQgbmV3IHJlZ2lzdHJhdGlvbnMgaW50byB0aGUgc2hvdyBhcyBsb25nIGFzIHdlIGhhdmUgc3BhY2UuIApMZSBwYWduZSBlc3QgZGVzc2luIGZhb24gIHBlYXUgZGUgbG9wYXJkICBhbG9ycyBxdWUgZGFucyBsYSByZGl0aW9uIGVuIDE5NzQgbGUgbWFycXVhZ2UgZGUgbCdhbmltYWxpdCBhIHQgZ291YWNoLCByZW5kdSBpbnZpc2libGUgcGFyIGxhIGNlbnN1cmUuIE9uIGR0ZWN0ZSBtbWUgdW4gYXV0cmUgIGR0YWlsICBxdWkgam91ZSAgY2FjaGUgY2FjaGUgOiBsZSBwb2lnbmFyZCBlc2NhbW90IGRhbnMgbCdpbWFnZSBlbiBjb3VsZXVycywgcmFwcGFyYXQgZGFucyBsJ2ltYWdlIGltcHJpbWUgbm9pciBzdXIgYmxhbmMuClBlb3BsZSBsb3ZlIHBva2VyIGFuZCB0aGV5IGxvdmUgdG8gZ2FtYmxlLiAoVGhhdCBkb2VzIG5vdCBpbmNsdWRlIG1lOyBJIGhhdmUgbm8gaW50ZXJlc3QgaW4gZWl0aGVyLCBnaXZlbiB0aGF0IGdhbWJsaW5nIGltcGxpZXMgYSBuZWdhdGl2ZSByZXR1cm4gb24gaW52ZXN0bWVudC4gCkdvb2RoYW5kcywgSSBhcHByZWNpYXRlIHRoZSBpbnRlbGxpZ2VudCBhbmQgaW5mb3JtYXRpdmUgbmF0dXJlIG9mIHlvdXIgcG9zdC4gVGhlcmUgaXMgbXVjaCB0cnV0aCBpbiB5b3VyIG9ic2VydmF0aW9ucy4gQnV0IEkgaGF2ZSB0byBzYXkgaXQsIGRhdGluZyBjbGllbnRzIGlzIGluYXBwcm9wcmlhdGUuIApMaW1pdCBteSBzZWFyY2ggdG8gci9saXN0ZW50b3RoaXN1c2UgdGhlIGZvbGxvd2luZyBzZWFyY2ggcGFyYW1ldGVycyB0byBuYXJyb3cgeW91ciByZXN1bHRzOnNlZSB0aGUgc2VhcmNoIGZhcSBmb3IgZGV0YWlscy4KSXQgaXMgY2FsbGVkIHRoZSBkZWFkIG1hbidzIGhhbmQgYmVjYXVzZSBhYm91dCA0NyB5ZWFycyBhZ28gKGluIGFib3V0IDE4NDApLCBpbiBhIHRvd24gaW4gSWxsaW5vaXMsIGEgY2VsZWJyYXRlZCBqdWRnZSBiZXQgaGlzIGhvdXNlIGFuZCBsb3Qgb24gdGhyZWUgamFja3MgYW5kIGEgcGFpciBvZiB0ZW5zLiAKSGlja3NvbiBzYWlkIGZ1cnRoZXIgaW52ZXN0aWdhdGlvbnMgYW5kIHJlc2VhcmNoIG9mIHRoZSBjYXZlIGFuZCBpdHMgdW5pcXVlIGdlb2dyYXBoeSB3aWxsIGxpa2VseSBiZSBjYXJyaWVkIG91dCBpbiAyMDIwLCBkZXBlbmRpbmcgb24gZnVuZGluZy4KUmVhZCBpdCBmcm9tIGJlZ2lubmluZyB0byBlbmQuIEl0J2xsIHRha2UgdXAgc29tZSB0aW1lLCBhbmQgeW91IGFsd2F5cyBuZWVkIHNvbWV0aGluZyB0byBkbyBvbiBhIHR3byBob3VyIHRyYWluIGpvdXJuZXkuIApJZiB0d28gb3IgbW9yZSBwbGF5ZXJzIG1ha2UgdGhlIHNhbWUgaGFuZCAob3IgaGFuZHMgdGhhdCByYW5rIHRoZSBzYW1lKSB0aGVuIHRoZSBwb3QgaXMgc3BsaXQuIEluIHRoaXMgY2FzZSwgYXNzdW1pbmcgbm8gYXZhaWxhYmxlIGZsdXNoZXMsIGVhY2ggcGxheWVyIG1ha2VzIGFuIEFjZSBoaWdoIHN0cmFpZ2h0LiAKSG93IG1hbnkgZ3JhbW15aGFzIExhZHkgR2FnYQpTZXJpb3VzIG9yIFNvY2lhbD8gRGVjaWRlIHdoYXQgeW91IHdhbnQgeW91ciBnYW1lIHRvIGJlP1Bva2VyIGlzIGEgY29tcGV0aXRpdmUgZ2FtZSBvZiBza2lsbCB3aGVyZSB0aGUgYmV0dGVyIHBsYXllcnMgYXJlIHJld2FyZGVkIGFuZCB0aGUgd2Vha2VyIHBsYXllcnMgYXJlIHB1bmlzaGVkLiBBIGNvbnNlcXVlbmNlIG9mIHRoaXMgaXMgdGhhdCBzb21lIHBsYXllcnMgYXJlIGxpa2VseSB0byB0YWtlIHRoZSBnYW1lIHZlcnkgc2VyaW91c2x5LCBvdGhlcnMgbGVzcyBzby4gUG90ZW50aWFsbHkgYSBkaXZpZGUgY2FuIG9jY3VyIGJldHdlZW4gcGFydGljaXBhbnRzIHdobyBhcmUgcHJpbWFyaWx5IGNvbmNlcm5lZCB3aXRoIHRoZSBjYXJkcyBhbmQgdGhvc2Ugd2hvIGNhbWUgdG8gc29jaWFsaXplIGFuZCBkcmluay4gV2lsbCB5b3UgYmUgZW50ZXJ0YWluaW5nIGEgc29jaWFsIGdhdGhlcmluZyBvciBhIGdyb3VwIG9mIHBva2VyIHBsYXllcnM/CkJlc3RCZXQgSmFja3NvbnZpbGxlLCBGbG9yaWRhJ3MgdG9wIHBva2VyIHJvb20sIGlzIGhvc3RpbmcgdGhlIHRvdXJuYW1lbnQgZnJvbSBGcmlkYXkgdG8gVHVlc2RheS4KSXQgYSBsaXR0bGUgaGFyZCB3aGVuIHlvdSB3YW50IDRrIGFuZCBhIGJ1aWxkIHRvIG92ZXJjbG9jayEgVGhhdCB0aGUgYmVzdCBpIGNvdWxkIGRvLiAKQSBEYXkgdG8uIApBbmQgZmFtaWx5IG5hbWVzIGFsc28gaGFzIHJlZ2lvbmFsIGJhc2UuIApNUkkgcHJvdmlkZXMgbm90IG9ubHkgZ29vZCBhbmF0b21pY2FsIGxvY2FsaXphdGlvbiwgYnV0IGFsc28gZ2l2ZXMgdXNlZnVsIHBoeXNpb2xvZ2ljYWwgaW5mb3JtYXRpb24gY29uY2VybmluZyBib25lIHRpc3N1ZS4KSSBwcmVmZXIgY2VyYW1pYyBjaGlwcyBhcyB5b3UgY2FuIHBlcnNvbmFsaXNlIHRoZSBkZXNpZ25zLiBZb3UgY2FuIHByZXR0eSBtdWNoIHByaW50IGFueXRoaW5nIG9uIHRoZW0uIEhvd2V2ZXIgY2hvb3NpbmcgYSBnb29kIGNvbXBhbnkgdG8gbWFrZSB0aGUgYmVzcG9rZSBjaGlwIGlzIG5vdCBlYXN5LiAKUGF0aWVudHMgd2VyZSBmb2xsb3dlZCB1cCBmb3IgNSB5ZWFycyBjbGluaWNhbGx5IGFuZCBieSBtYWduZXRpYyByZXNvbmFuY2UgaW1hZ2luZy4uIApGb29kLCBHbG9yaW91cyBGb29kIE1hY2F1IGltcG9ydHMgYSBsYXJnZSBhbW91bnQgb2YgaXRzIGZydWl0cyBhbmQgdmVnZXRhYmxlcywgbWFraW5nIGV2ZW4gZGFpbHkgaXRlbXMgbGlrZSBsZW1vbiBleHBlbnNpdmUsIG9uZSBvZiB0aGUgbG9jYWwgcmVzaWRlbnRzIGNhc3VhbGx5IGluZm9ybWVkIHVzIGluIHRoZSBtaWRkbGUgb2YgYSBjb252ZXJzYXRpb24uIEluc2lkZSB0aGUgcHJvcGVydHksIGFjY2Vzc2liaWxpdHkgaXNuIGFuIGlzc3VlLiAKUG9rZXIgaGFzIGV2b2x2ZWQgdGhyb3VnaCB0aGUgZGVjYWRlcyBpbnRvIGEgdmVyeSBleGNpdGluZyBnYW1lLiBCeSAxOTcwIHRoZSBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgc3Bhd25lZCBvZmYgdGhlIG1vZGVybiBwb2tlciB0b3VybmFtZW50cy4gCk9tYWhhIFNpdCBhbmQgR28gU05HIFRvdXJuYW1lbnQgUG9rZXIgU3RyYXRlZ3kKV293LCB0aGF0IGF3ZnVsLiAKVGhlIHJlZmVyZW5jZSBsaXN0cyBmcm9tIHJlbGV2YW50IHBhcGVycyB3ZXJlIGFsc28gZXhhbWluZWQuIFN0dWRpZXMgaW4gRW5nbGlzaCwgR2VybWFuLCBGcmVuY2gsIER1dGNoIGFuZCBhbnkgb2YgdGhlIFNjYW5kaW5hdmlhbiBsYW5ndWFnZXMgd2VyZSBlbGlnaWJsZSBmb3IgaW5jbHVzaW9uLlNwZWNpZmljIGludGVydmVudGlvbnMgaW5jbHVkZWQgaW4gdGhlIHJldmlld0NvbXBhcmlzb25zIG9mIFNNVCB3aXRoIGVpdGhlciBwbGFjZWJvIG9yIG90aGVyIGludGVydmVudGlvbnMgd2VyZSBlbGlnaWJsZS4gCk5vdCB0byBtZW50aW9uIHRoaXMgc3RhdGUgaGFzIGJlZW4gcHduZWQgYnkgbWFqb3Igc3Rvcm1zIGZvciAzIHN0cmFpZ2h0IHllYXJzLCBpdCBzZWVtcyB1bmp1c3RpZmllZCB0byBtZSB0byBhc2sgdGhhdCBmcm9tIHRoZSBzdGF0ZSwganVzdCBzbyB5b3UgY2FuIHNlbGYgZmVsbGF0ZSBvdmVyIHRoZSBsYXRlc3QgVVMgTmV3cyBXb3JsZCBSZXBvcnQuIEV2ZW4gaWYgRmxvcmlkYSBtYW5hZ2VzIHRvIHVwc2V0IEdlcm9naWEgYW5kIG1ha2UgaXQgdG8gdGhlIFNFQyBjaGFtcGlvbnNoaXAgZ2FtZSwgSSBkbyBub3QgdGhpbmsgdGhleSBjYW4gd2luIGl0LiBJbiBteSBtaW5kIGV2ZXJ5IG90aGVyIHRlYW0gdGhhdCBwbGF5cyBpbiBhIGNvbmZlcmVuY2Ugd2l0aCBhIGNoYW1waW9uc2hpcCBnYW1lIGhhcyBhIGNoYW5jZSB0byB3aW4gaXQuIEkgaGF2ZSBGbG9yaWRhIGFzIHRoZSBmaXJzdCB0ZWFtIG91dCBvZiB0aGUgdG9wIDEwLiBBZGRpbmcgRmxvcmlkYSB3b3VsZCBhbHNvIGhhdmUgbWFkZSBmb3IgZm91ciBTRUMgdGVhbXMsIGFuZCBzaW5jZSBJIGFtIGFscmVhZHkgYmVpbmcgYWNjdXNlZCBvZiBTRUMgYmlhcyBwZXJoYXBzIGl0IHdhcyBiZXN0IEkgbGVmdCB0aGVtIG91dC4KSWYgeW91IHdhbnQgdG8gcHVyY2hhc2UgYSBiaWxsaWFyZCB0YWJsZSwgdGhlbiB3aHkgbm90IGEgcG9vbCBkaW5pbmcgdGFibGUgdGhhdCBjYW4gZ28gcmlnaHQgaW50byB5b3VyIGRpbmluZyByb29tPyBFc3BlY2lhbGx5IGlmIHlvdSBkb24ndCBoYXZlIGEgYmFzZW1lbnQsIG9yIGEgcmVjIHJvb20sIHdoZXJlIGVsc2UgY2FuIHlvdSBwdXQgYSBiaWxsaWFyZCB0YWJsZT8gQ29udmVydGlibGUgcG9vbCBkaW5pbmcgdGFibGVzIGFyZSBtb3JlIGNvbnZlbmllbnQuIApIb3cgSmVuc29uIEJ1dHRvbiBpcyB3aW5uaW5nIE1jTGFyZW4gcG9rZXIgZ2FtZSB3aXRoIFJvbiBEZW5uaXMKTm90aGluZyBpcyBnb29kIGVub3VnaC4gCkkgZ290IHJlYWxseSBpbnRvIHRoYXQgd2l0aCBoaWdoIHNjaG9vbC4gV2UgaGFkIDQgbWludXRlcyBiZXR3ZWVuIGNsYXNzZXMgYW5kIHdlIHdlcmVuIGFsbG93ZWQgdG8gY2FycnkgYmFncyBzbyB1bmxlc3MgeW91IHdhbnRlZCB0byBjYXJyeSBhIHNoaXQgdG9uIG9mIGh1Z2UgdGV4dGJvb2tzIGFuZCBiaW5kZXJzIHlvdSBoYWQgdG8gcnVuIHRvIHlvdXIgbG9ja2VyIHRvIHN3aXRjaC4gQWxsIG15IHN0dWZmIHdhcyBsaW5lZCB1cCBpbiBvcmRlciBvZiBteSBjbGFzc2VzIHNvIEkgd291bGQgcHV0IG15IHN0dWZmIGF3YXkgYW5kIGdyYWIgdGhlIG9uZXMgcmlnaHQgbmV4dCB0byBpdC4gVGhlIG9uZXMgdGhhdCB3ZXJlIGxhdGUgYWxsIHRoZSB0aW1lIHdlcmUgdGhlIG9uZXMgd2hvIGp1c3QgdGhyZXcgc2hpdCBpbnRvIHRoZWlyIGxvY2tlciBzbyBhbHdheXMgaGFkIHRvIGRpZy4KU2FucyBsdWkgZGVtYW5kZXIgc2VzIHBhcGllcnMsIGogdW4gcGllZCBkZSBjYXJvdHRlIHNhdXZhZ2Ugb3UgZCBzeWx2ZXN0cmUsIHBlaW5lIHF1ZWxxdWUgcGV1IGF2ZWMgbGVzIGNpZ3VzLCBtYWlzIG4gYWJzb2x1bWVudCBhdWN1bmUgZGlmZmljdWx0IGZhY2UgIGxhIGJlcmNlIHNpIGNvbW11bmUgZXQgZmFtaWxpcmUuIE1hbGdyIGNldHRlIHJlbGF0aXZlIHByc2VuY2UsIGwgcGV1dCBkaXJlIHF1ZSBsYSBiZXJjZSBicmlsbGUgcGFyIHNvbiBhYnNlbmNlIGVuIGNlIHF1aSBjb25jZXJuZSwgcGFyIGV4ZW1wbGUsIGxlcyB1c2FnZXMgcGVybWV0dGFudCBkIHNvbiBoaXN0b2lyZSB0aHJhcGV1dGlxdWUgZGVwdWlzIHF1ZSBsIGEgY29tcHJpcyBxdWUgMSArIDEgcXVpdmFsYWl0ICAyLiAKSW4gdGhlIHBhc3QgZmV3IHllYXJzIEkndmUgZG9uZSBldmVyeXRoaW5nIEkgY2FuIHRoaW5rIG9mIHRvIGdyb3cgYSBuaWNlIHBhdGNoIG9mIHNwaW5hY2gsIHdpdGggbWlzZXJhYmxlIHJlc3VsdHMuIEdlcm1pbmF0aW9uIGlzIGFsd2F5cyBwb29yLCBhbmQgdGhlIGZldyBzZWVkcyB0aGF0IGRvIHNwcm91dCBncm93IGludG8gc3R1YmJ5IGxpdHRsZSBkaXNhcHBvaW50bWVudHMgdGhhdCBhcmUgZW50aXJlbHkgdW51c2FibGUuIEkgZ2FyZGVuIGF0IHRoZSBjb2FzdCBub3cuIApFYWNoIHRlYW0gd2lsbCBoYXZlIGEgbWVudG9yLCB0d28gcHJvZmVzc2lvbmFsIHBva2VyIHBsYXllcnMsIGZvdXIgYW1hdGV1cnMgYW5kIHR3byB3aWxkY2FyZHMuICJUaGUgYW1hdGV1cnMgd2lsbCBiZSBzZWxlY3RlZCBmcm9tIGEgc2VyaWVzIG9mIG9ubGluZSBhbmQgb24gZ3JvdW5kIHRvdXJuYW1lbnRzLiBUaGUgdG91cm5hbWVudHMgaGF2ZSBhbHJlYWR5IHN0YXJ0ZWQgYW5kIG1lbnRvcnMgYXJlIG1vbml0b3JpbmcgdGhlbS4gVGhlIHdpbGRjYXJkIGlzIGEgdmVyeSBpbnRlcmVzdGluZyBjb25jZXB0OyB0aHJvdWdoIHRoaXMsIHRoZSBvd25lciBjYW4gZ2V0IGFueSB0d28gcGxheWVycyB0byBwbGF5IGZvciBoaXMgdGVhbS4gSXQgY291bGQgYmUgdGhlIG93bmVyIGhpbXNlbGYsIGEgY2VsZWJyaXR5IG9yIHRoZSBiZXN0IHBsYXllciBvbiB0aGUgY29udGluZW50LCIgaW5mb3JtcyBCdXJtYW4uCk1vc3QgUFRzIGhhdmUgbm8gaWRlYSBob3cgdG8gZG8gdGhlc2UgZXhlcmNpc2VzIHByb3Blcmx5IGFuZCB0aGVpciBiaWxsaW5nIG1vZGVscyBkbyBub3QgYWxsb3cgdGhlbSB0byBzcGVuZCAyIDMgb25lIGhvdXIgc2Vzc2lvbnMgd2l0aCBjbGllbnRzIHRvIHRlYWNoIHRoZW0sIG5vciBkbyB0aGV5IGV2ZW4gaGF2ZSB0aGUgcmlnaHQgZXF1aXBtZW50LiAKVGhlIHNhbWUgbWVudSBzaG91bGQgYmUgYXZhaWxhYmxlIGZvciBlYWNoIHBvc3Qgb24gYSB1c2VyIHByb2ZpbGUgYnV0LCB5b3UgcmlnaHQsIHdlIHNob3VsZCBtYWtlIGl0IGFuIG9wdGlvbiB1bmRlciB0aGUgbWFpbiBvdmVyZmxvdyBtZW51IG9uIGEgdXNlciBwcm9maWxlLiAKT3ZlcnZpZXcgZm9yIEFzeXgKVGhlIDQgOCBnYW1lIGhhZCB0aGUgc2FtZSByYWtlIGFzIHRoZSAyIDQgZ2FtZSBhbmQgYWJvdXQgdGhlIHNhbWUgbnVtYmVyIG9mIHRlcnJpYmxlIHBsYXllcnMuIApMYSBDb2FsaXRpb24gQXZlbmlyIFF1YmVjIChDQVEpIGEgcmFwcGVsIG1lcmNyZWRpIGF1IGdvdXZlcm5lbWVudCBDaGFyZXN0IHF1ZSBjZSBwcm9qZXQgZGUgY2FzaW5vICBLYWhuYXdha2UgZXN0IGlsbGdhbC4KSXQgd2FzbnQgZXZlbiBhIGNvbXBldGUgYnVsbGV0LCBqdXN0IGEgZnJhZ21lbnQuCk51bWJlciB0d28gIHRyeSBub3QgdG8gdmlldyBpdCBhcyBhIGNob3JlIGFuZCBmb2N1cyBvbiB0aGUgcmVhbGx5IG5pY2UgcGFydHMgKGhvdyBnb29kIGl0IGZlZWxzLCBob3cgY2xvc2UgeW91IGZlZWwgdG8geW91ciBwYXJ0bmVyIGFmdGVyKS4uIApHaXZlIEJhY2sgV2hhdCBZb3UgR2V0IE91dApIZSByZW1lbWJlcnMgU29maWEgdml2aWRseSwgb2ggd2VsbCBEdW5jYW4gZG9lcy4gSGUgcmVtZW1iZXJzIGhlciBmYWNlIGZyb20gdGhlIG90aGVyIGxpZmUsIHVuZGVyIGFub3RoZXIgZm9yZWlnbiBuYW1lIGR1cmluZyBoaXMgdGltZSwgYW4gQXNzYXNzaW4gd2l0aCBkYXJrIGtvaGwgbGluZWQgd2l0aGluIGhlciBleWVzIHVuZGVyIGEgc2ltcGxlIGJyb3duIGhvb2QuIFNoZSBoYWQgdG9sZCBoaW0gdGhhdCBzaGUgd2FzIGhpcyBwcm90ZWN0b3IsIGJ1dCBpbiB0aGUgZW5kLCBzaGUgaGFkIGFiYW5kb25lZCBoaW0gbGlrZSBhbGwgdGhlIG90aGVycy4KSSd2ZSBzZWVuIGEgZmV3IGluIHRoaXMgZ2FtZSBpdHNlbGYsIHdpdGggQUIgZGUgVmlsbGllcnMsIGFuZCBpbiB0aGUgY29udGV4dCBvZiB0aGUgZ2FtZSwgdGFraW5nIHRoZSBzY29yZSBkb3duIHRvIDIxIHdhcyBqdXN0IGljZSBjb29sLiIuIApUaGUgbW92ZWNvbWVzIGFmdGVyIHBva2VyIG1hY2hpbmUgd2FnZXJpbmcgaW4gTlNXIGluIDIwMTcgaW5jcmVhc2VkIGJ5ICQxLjMgYmlsbGlvbi4gQUhBIE5TV2xpcXVvciBhbmQgcG9saWNpbmcgZGlyZWN0b3JKb2huIEdyZWVuIHNhaWRoZSBleHBlY3RlZCBzbWFsbGhvdGVscyBpbiByZWdpb25hbCBhcmVhcyB3b3VsZCBiZW5lZml0IGZyb20gdGhlIGludHJvZHVjdGlvbiBvZmxlYXNpbmcgYXJyYW5nZW1lbnRzLiAiT3ZlciByZWNlbnQgeWVhcnMgbWFueSBjb3VudHJ5IHB1YnMgaGF2ZSBiZWVuIGZvcmNlZCB0byBzZWxsIG9mZiB0aGVpciBnYW1pbmdhc3NldHMgd2hlbiB0aW1lcyBnb3QgdG91Z2gsIiBoZSBzYWlkLiAKTWFpbnRhaW5pbmcgYW4gZWRnZSBpbiB0aGVzZSBzaGFyayBpbmZlc3RlZCB3YXRlcnMgaXMgbm8gc21hbGwgZmVhdCwgYW5kIG9uZSB0aGF0IG9ubHkgYSBoYW5kZnVsIG9mIGludmVzdG9ycyBoYXMgYWNjb21wbGlzaGVkLi4gClRoZSBmaXJzdCBpbnN0YWxtZW50IHdhc24ndCBldmVyeW9uZSdzIGN1cCBvZiB0ZWEsIGJ1dCBJIHRob3VnaHQgaXQgd2FzIGEgY2xhc3NpYyBwaWVjZSBvZiBjaW5lbWEgd2l0aCBpdHMgY2xldmVyIGNvbG91ciBzY2hlbWUgYW5kIG9sZCBIb2xseXdvb2QgY2hhcmFjdGVycy5JdCBtb3ZlZCBhdCBhIHBhY2Ugd2l0aCBzdG9yaWVzIGludGVyd2VhdmluZyBhbmQgYXVkaWVuY2VzIHNjcmFtYmxpbmcgdG8gZmluZCBvdXQgbW9yZSBhYm91dCB0aGUgY2hhcmFjdGVycyBvZiB0aGUgY3JpbWUgcmlkZGxlZCBCYXNpbiBDaXR5LlRoZSBmaXJzdCBmaWxtIHdhcyBhIGd1ZXNzaW5nIGdhbWUsIGNoYXJhY3RlcnMgcmV2ZWFsZWQgbGl0dGxlIGFuZCB0aGVpciBwYXN0IGxpdmVzIHdlcmUgYSBteXN0ZXJ5LiAKSWYgeW91IGZpbmQgeW91cnNlbGYgdHdpZGRsaW5nIHlvdXIgdGh1bWJzIGluIGEgY2xpbmljYWwgc2V0dGluZywgZ28gZmluZCBhIG51cnNlIG9uIHlvdXIgdW5pdC4gCkFuZCB0aGUgSmV3aXNoIHBlb3BsZSBuZWVkIG91ciBwcmF5ZXJzIGxpa2UgbmV2ZXIgYmVmb3JlLCBIYWdlZSBzYXlzLiAuCkFsbCBpcyBnb29kIGFuZCBpdmUgbWFuYWdlZCB0byBjb29rIHVwIHRoZSBzaW11bGF0aW9uIGp1c3QgaW4gdGltZSBiZWZvcmUgdGhlIGJpZyBwcmVzZW50YXRpb24uIApUaXRhbiBCZXQgb2ZmZXJzIGFuIGFkdmFuY2VkIGFuZCBmdWxseSBjdXN0b21pemVkIGJldHRpbmcgZXhwZXJpZW5jZSB3aXRoIGEgZ29vZCByYW5nZSBvZiBtYXJrZXRzIGFuZCBiZXR0aW5nIG9wdGlvbnMsIGJvdGggcHJlIG1hdGNoIGFuZCBsaXZlLi4gCkZvciBNTFAgcHVycG9zZXMsIFJvbGVzIGNvdWxkIGVhc2lseSBiZSByZXBsYWNlZCBieSBzb21ldGhpbmcgbGlrZSAiRWxlbWVudCIsIHdoaWNoIHBhcnRpY3VsYXIgRWxlbWVudCBvZiBIYXJtb255IHRoZSBwb255IGV4ZW1wbGlmaWVzLiAKRWRpdDogVG8gYWRkIHNvbWV0aGluZyBhY3R1YWxseSB1c2VmdWwsIGhlcmUgYSB3YXkgdG8gcGFpbnQgb3JicyBpbiBnZW5lcmFsLCB5b3UgY2FuIHRha2UgdGhlIHRlY2huaXF1ZSBhbmQgdmFyeSBpdCB0byB5b3VyIGxlaXN1cmUuIExlbW1lIGxvb2sgZm9yIGEgY291cGxlIG90aGVyIHZpZHMgaSBzZWVuIG9uIHRoaXMsIHdpbGwgZWRpdCB0aGUgcG9zdCBsYXRlciA6KQpDYXJlc3RyZWFtIGlzIGEgd29ybGR3aWRlIHByb3ZpZGVyIG9mIG1lZGljYWwgaW1hZ2luZyBzeXN0ZW1zIGFuZCBJVCBzb2x1dGlvbnM7IFggcmF5IGltYWdpbmcgc3lzdGVtcyBmb3Igbm9uIGRlc3RydWN0aXZlIHRlc3Rpbmc7IGFuZCBwcmVjaXNpb24gY29udHJhY3QgY29hdGluZyBzZXJ2aWNlcyBmb3IgYSB3aWRlIHJhbmdlIG9mIGluZHVzdHJpYWwsIG1lZGljYWwsIGVsZWN0cm9uaWMgYW5kIG90aGVyIGFwcGxpY2F0aW9ucyBhbGwgYmFja2VkIGJ5IGEgZ2xvYmFsIHNlcnZpY2UgYW5kIHN1cHBvcnQgbmV0d29yay4gRm9yIG1vcmUgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGNvbXBhbnkncyBicm9hZCBwb3J0Zm9saW8gb2YgcHJvZHVjdHMsIHNvbHV0aW9ucyBhbmQgc2VydmljZXMsIHBsZWFzZSBjb250YWN0IHlvdXIgQ2FyZXN0cmVhbSByZXByZXNlbnRhdGl2ZSBvciBjYWxsIDg4OCA3NzcgMjA3MiBvciB2aXNpdAoiQXMgQXJuYXUgYmVjYW1lIG1vcmUgYW5kIG1vcmUgdW5jb21mb3J0YWJsZSB3aXRoIFRpYW4ncyBmb2N1cyBvbiBoaXMgYnV0dG9ja3MsIFRpYW4gbW92ZWQgaGlzIGZpbmdlcnMgYmVsb3cgQXJuYXUncyBidXR0b2NrcyBhbmQgYmVnYW4gY2FyZXNzaW5nIiBoaXMgcHJpdmF0ZXMsIHRoZSBzdWl0IHNheXMuClNvbWUgbGlnaHRzIGFyZSBtb3JlIGZvY3VzZWQgYW5kIGJyaWdodGVyLCBzb21lIGFyZSBsZXNzIGZvY3VzZWQgYW5kIGRpbW1lci4gClRoYXQgbGlmZS4gClJlY292ZXJ5IHdhcyBoZWxsLCBidXQgaXQgd2FzIHdlbGwgd29ydGggaXQuLiAKQXQgdGhlIGNpdHkgYW5kIGNvdW50eSBsZXZlbCwgY29kZXMgbGltaXRpbmcgb3BlcmF0aW5nIGhvdXJzIGZvciBtYXNzYWdlIHBhcmxvcnMgb3IgYmFubmluZyBmZWF0dXJlcyBsaWtlIGJ1enplciBjb250cm9sbGVkIGZyb250IGRvb3JzIGFuZCBiYWNrIGRvb3IgZW50cmFuY2VzIGhhdmUgYmVlbiB1c2VkIGluIHJlY2VudCB5ZWFycyB0byBzaHV0dGVyIGh1bmRyZWRzIG9mIHN0b3JlZnJvbnRzIGluIFNhbiBGcmFuY2lzY28sIFNhbiBKb3NlIGFuZCBvdGhlciBwYXJ0cyBvZiBDYWxpZm9ybmlhLiAKVGhlbiwgaW5zdGVhZCBvZiB0dXJuaW5nIG1lIHRvIHRoZSBvdGhlciBzaWRlIHRvIGRvIHRoZSBzYW1lIHRoaW5nIHRoZXJlLCBoZSB0dXJuZWQgbWUgdG8gZmFjZSB1cCBhZ2FpbiBhbmQgbW92ZWQgbXkgbGVncyBpbiBhIHdheSB0aGF0IHRoZXkgd2VyZSBzcHJlYWQgYXBhcnQgd2l0aCBteSBzb2xlcyB0b3VjaGluZyBlYWNoIG90aGVyIChsaWtlIHRoaXMpLCBhbmQgc3BlbnQgYW4gYXdmdWxseSBsb25nIHRpbWUgbWFzc2FnaW5nIHRoZSBncm9pbiBhcmVhICh3aGVyZSBteSBpbm5lciB0aGlnaCBtZWV0cyBteSBjcm90Y2gpLiBIZSBldmVuIHBvaW50ZWQgb3V0IGEgc3VwcG9zZWQgc3BvdCBvZiB0ZW5zaW9uIGluIG15IGdyb2luIGFuZCB3b3JrZWQgYXQgaXQuIEhlIGFza2VkIGlmIEkgd2FzIG9rYXkgd2l0aCB0aGlzIG1hc3NhZ2UgKEkgdGhpbmsgaW1wbHlpbmcgdGhlIG1hc3NhZ2UgdHVybmluZyBzZXh1YWwpLCBhbmQgYWdhaW4sIEkgZG9uIGtub3cgd2h5IEkgc2FpZCB0aGlzIGJ1dCBJIHNhaWQgInllYWgiLCBhbmQgdGhlbiBoZSBwcm9jZWVkZWQgdG8gZnVsbCBvbiBtYXNzYWdlIG15IGJyZWFzdHMsIGZ1bGwgaGFuZCBjb250YWN0LiAKTm8gRkY/IFVucmVhbC4gCkdldCBvdXQuIFN0b3AgZW5nYWdpbmcuIApBbHNvIGRvbid0IGZvcmdldCB0ZXN0ZXJzLCB3aGVuIHBvaW50aW5nIGEgc3RvcnkgYW55b25lIGRvaW5nIHRlc3RpbmcgbmVlZHMgdG8gd2VpZ2ggaW4gYXMgc29tZXRpbWVzIGEgc2ltcGxlIGRldmVsb3BtZW50IHRhc2sgY2FuIGNhdXNlIGEgbGFyZ2UgdGVzdGluZyBlZmZvcnQgYW5kIGlmIHRoZXkgYXJlIHRydWUgU3ByaW50cyB0aGUgaWRlYSBpcyB0byBoYXZlIGV2ZXJ5dGhpbmcgY29tcGxldGVkIGFzIGl0IGNvdWxkIGJlIHNoaXBwZWQgKGJ1aWx0LCB0ZXN0ZWQgYW5kIGRvY3VtZW50ZWQpLiBTbyB0aGUgZXN0aW1hdGUgb2YgYSBzdG9yeSBpcyBkZXRlcm1pbmVkIGJ5IHRoZSB0ZWFtIG5vdCBieSBhbiBpbmRpdmlkdWFsLiBJdCBpcyBoYWxmIGFzIGhhcmQgYXMgYSAyMCBvciBzbGlnaHRseSBtb3JlIGRpZmZpY3VsdCB0aGFuIGEgOS4gCklmIGl0IHByZSBydXQgc2Vhc29uLCB0aGVuIGxvb2sgZm9yIHRyZWUgcnViYmluZ3MgYWxvbmcgd2l0aCB5b3VyIG90aGVyIHNpZ24gbWFya2luZ3MuIApBbmQgaWYgbm90LCB5b3UgZ2V0IHRoZSBwZXR0eSBqb3kgb2YgbWFraW5nIGhlciB3b3JrIGhhcmRlci4uIApCZXR0ZXIgYWJvdXQgeW91cnNlbGYsIGJldHRlciBhYm91dCB5b3VyIGZhbWlseSwgYmV0dGVyIGFib3V0IHlvdXIgbGlmZSBzaXR1YXRpb25zLCBiZXR0ZXIgYWJvdXQgeW91ciBmdXR1cmUuIFlvdSBjYW4gZG8gdGhpcy4gSSBoYXZlIG5vIGRvdWJ0IHdoYXRzb2V2ZXIuIApXaGVuIHlvdSB1c2UgYSBCbGFja2phY2sgYW5kIFRleGFzIEhvbGRlbSAzNiB4IDcyIEluY2ggMiBTaWRlZCBMYXlvdXQgeW91IGhhdmUgdGhlIGV4YWN0IHRhYmxlIHlvdSB3aWxsIHNlZSBpbiBhIGNhc2lubyB3aGVuIHlvdSBnbyBwbGF5IHRoZSByZWFsIHRoaW5nLiBVc2luZyBhIGxheW91dCBsaWtlIHRoaXMgaXMgdGhlIGJlc3Qgb3B0aW9uIGJlY2F1c2UgeW91IGFyZSBnYWluaW5nIGV4cGVyaWVuY2UgYmVmb3JlIHlvdSBsYXkgZG93biB5b3VyIG1vbmV5IHRvIHRoZSBkZWFsZXIuIApUaGV5IG5lZWQgdG8ga25vdyB0aGUgY2xpZW50J3MgcHJvYmxlbSwgaGVyIG1lZGljYWwgaGlzdG9yeSwgd2hhdCBzeW1wdG9tcyBzaGUgaXMgZXhwZXJpZW5jaW5nIGFuZCB3aGF0IHJlc3VsdHMgc2hlIGV4cGVjdHMgZnJvbSB0cmVhdG1lbnQuIApXaGlza2V5IFBldGUncyBIb3RlbCBhbmQgQ2FzaW5vIHByb3ZpZGVzIDc3NyBndWVzdCByb29tcywgb24gc2l0ZSBkaW5pbmcsIGFuIGVudGVydGFpbm1lbnQgc2hvd3Jvb20sIGFuZCBhIGNhc2lubyB3aXRoIHRhYmxlIGdhbWVzIGFuZCB0aGUgbGF0ZXN0IHNsb3QgbWFjaGluZXMuIEJ1ZmZhbG8gQmlsbHMgUmVzb3J0IGFuZCBDYXNpbm8gYW5kIFByaW1tIFZhbGxleSBSZXNvcnQgYW5kIENhc2lubyBhcmUgbG9jYXRlZCBqdXN0IGFjcm9zcyBJbnRlcnN0YXRlIDE1IGZyb20gV2hpc2tleSBQZXRlJ3MuIApXaGF0IHNhZCB0byBzZWUgaXMgdGhhdCB0aGUgZ29hdHMgaGUgaGFzIGZhdHRlbmVkIGZvciB0aGUgcGFzdCA5IHllYXJzIGFyZSBuZWl0aGVyIHdpbGxpbmcgdG8gc3RhbmQgdXAgZm9yIHRoZWlyIHBhdHJvbiBub3IgYXJlIHRoZXkgd2lsbGluZyB0byB0aHJvdyB0aGVpciBzdXBwb3J0IGJlaGluZCBoaW0uIFRoZSBvbmx5IHJlYWwgZXhjZXB0aW9ucyBiZWluZyB0aGUgQ2hhdWRyeXMgb2YgR3VqcmF0IHdobyBoYXZlIHRoZSBtb3N0IHRvIGxvc2UuIEhvdyB3aWxsIHRoZXkgbmFtZSByb2FkcyBpbiBMYWhvcmUgYWZ0ZXIgdGhlaXIgYW5jZXN0b3JzIGlmIHRoZSBHZW5lcmFsIGlzIGdvbmU/IEhvdyB3aWxsIHRoZXkgZHJpdmUgUG9yY2hlcyB3aXRoIEFGUiBudW1iZXIgcGxhdGVzIGluIExhaG9yZSB3aXRob3V0IHRoZSBHZW5lcmFsPyBMaWZlIGluIHByb3ZpbmNpYWwgR3VqcmF0IGp1c3QgZG9lc24gc2VlbSBhbGwgdGhhdCBhcHBlYWxpbmcgdG8gdGhlIHdpbHkgQ2hhdWRyeXMgYWZ0ZXIgdGhleSB0YXN0ZWQgdGhlIGdvb2QgbGlmZSBvZiBMYWhvcmUuLiAKSSB3YXMgZ2l2aW5nIHRoZSBjdXN0b21lciBzZXJ2aWNlIHJlcCB0aGUgaXRlbSAgZm9yIHRoaXMgYmVkLiAKWW91IHdpbGwgYmUgaW4gdGhlIHllYXIgb2Ygb3VyIExvcmQgMTkwOCBzb29uLiAKSGUgZG9lc24gZXZlbiBsaXZlIGluIExBIGZ1bGwgdGltZSwgd2h5IGRvZXMgaGUgbm90IGxpdmUgd2l0aCBoaXMgZmFtaWx5IHdoZW4gaGUgdGhlcmU/IEkgZ2V0IHdoeSBLaGxvZSBtaWdodCBmZWVsIHNoZSBkb2VzbiB3YW50IGhpbSBhcm91bmQgYWxsIHRoZSB0aW1lIGJ1dCB0aGVuIG1heWJlIHNoZSBjYW4gYWxzbyBhZG1pdCB0aGF0IHRoaXMgaW5jaWRlbnQgZGlkbiBkZXN0cm95IGEgZmFtaWx5IGFuZCB0aGF0IHRoZWlyIHJlbGF0aW9uc2hpcCB3YXMgcm9ja3kgYXQgYmVzdD8gSWYgVHJpc3RhbiBoYWQgYW55IHJlc3BlY3QgZm9yIEtobG9lIGhlIHdvdWxkbiBoYXZlIGEgYnVuY2ggb2YgMjAgeWVhciBvbGRzIG92ZXIgYXQgaGlzIGhvdXNlIHRvIHBhcnR5IGFsbCBuaWdodCwgbm90IEpvcmR5biBvciBhbnlvbmUuIApPciBzb21ldGhpbmcuIEhvb2tlciBzdGFyZXMgYWZ0ZXIgaGltIHdpdGggYSB3b3JyaWVkLCBmdXJyb3dlZCBicm93IGFuZCB0aGVyZSdzIGEgZHJhbWF0aWMgbXVzaWNhbCBzdGluZy4gCkkgc3R1Y2sgd2l0aCB0aGUgVG9yYXkgZmFicmljIGluc2lkZSBhbmQgb3V0LiBJdCB0aGluLCBidXQgZG9lc24gZmVlbCBmbGltc3kgICBpdCBmZWVscyBhIGxpdHRsZSBtb3JlIHJvYnVzdCwgc29mdGVyIGFuZCB3aGlsZSBzdGlsbCBzbGlnaHRseSBzaGlueSBpdCBmYXIgbGVzcyBzbGlteSB0aGFuIHRoZSAxMEQgbnlsb24gb24gbXkgRW5saWdodGVuZWQgRXF1aXBtZW50IHF1aWx0LgpJbiB0aGUgdGhpcmQgZmxvb3Igcm9vbSBvZiB0aGlzIGhvdXNlIHRoZSB3aW5kb3dzIGFyZSBhcmNoZWQgYW5kIHRoZXJlIGFyZSAzLiBJdCBsb29rcyBqdXN0IGxpa2UgdGhlIEFteXRpdmlsbGUgSG9ycm9yIGhvdXNlLiAKSSB3aXNoIGhlciB0aGUgYmVzdCBhbmQgc3VwcG9ydCBoZXIgaW4gYWxsIHRoaW5ncyBvZiBoZXIgbGlmZSwgYW5kIHNoZSBkb2VzIHRoZSBzYW1lIGZvciBtZS4gSXQncyBraW5kYSBuaWNlIHRvIGhhdmUgZXhwZXJpZW5jZWQgYSBicmVha3VwIGxpa2UgdGhpcywgYWx0aG91Z2ggaXQgYnJva2UgbXkgaGVhcnQuIApPbiBtYXggc2V0dGluZ3MgSSB0aGluayBpdCBsb29rcyBxdWl0ZSBuaWNlIHRvIGJlIHBlcmZlY3RseSBob25lc3QuIFNhbWUgd2l0aCBTa3lyaW0gZm9yIDIwMTEgc3RhbmRhcmRzLiBObywgdGhleSBqdXN0IGJ1aWxkaW5nIGEgc29saWQgcnVuIG9mIGZ1biwgbGlnaHRoZWFydGVkLCBmYW1pbHkgZnJpZW5kbHkgY29taWMgYm9vayBtb3ZpZXMuIApUaGUgcGVvcGxlIG15IGZhbWlseSBoYXMgb3BwcmVzc2VkIGFyZSBwcm9iYWJseSB1bmNvdW50YWJsZS4gCkkgcmVjYWxsIGEgcmVndWxhciBvbmUgZGF5IHRvdXJuYW1lbnQgSSB1c2VkIHRvIGF0dGVuZCBpbiBMb25kb24uIApQcm9iYWJseSwgdGhpbmdzIHdvdWxkIGdldCBiZXR0ZXIgaW4gdGhlIHNob3J0IHRlcm0sIGJ1dCBpbiB0aGUgbG9uZyB0ZXJtIEkgYmUgd29ycmllZCBhYm91dCBhIHB1cHBldCBzdGF0ZSB0aGF0IGZ1bm5lbGVkIG9pbCB0byBiaWcgbXVsdGluYXRpb25hbHMgYW5kIHNldCB1cCBhIHBybyBBbWVyaWNhbiBkZSBmYWN0byBkaWN0YXRvcnNoaXAuIApCZW4gQ2hlcmluZ3RvbiB0b29rIHRoZSBjaGFyZ2UgZnJvbSB0aGUgQm9zdG9uIG1lZGlhIG1vYiBpbiB0aGUgU294IGR1Z291dCBiZWZvcmUgU3VuZGF5IG5pZ2h0IHNlcmllcyBmaW5hbGUuIApJbiBteSBhcmVhLCByYWtlIHdpc2UsIHRoZXJlIGlzIG5vIGRpZmZlcmVuY2UgYmV0d2VlbiBhIDEwLjAwIHBvdCwgYW5kIGEgMTkuMDAgcG90OyB0aGUgaG91c2UgZG9lc24gcmFrZSBhbm90aGVyIDEuMDAgdGlsbCB0aGUgcG90IGhpdHMgMjAuMDAuIApJZiBhbnkgb2YgdGhhdCB0aWNrbGVzIHlvdXIgZmFuY3ksIEknbGwgYmUgdGhlcmUsIGFzIGFsd2F5cywgYW5kIGR1cmluZyB0aGUgY29taW5nIHdlZWtzLCBtYXliZSBJJ2xsIHNlbmQgYmFjayBhIHN0b3J5IG9yIHR3byBmcm9tIHdoYXQgaXMsIGluIHRoZSB3b3JsZCBvZiBwb2tlciwgdGhlIGdyZWF0ZXN0IGV2ZW50IG9uIEVhcnRoLCBiYXIgbm9uZS4gU28gYm9va21hcmsgdGhpcyBwYWdlLCBhbmQgdGhlIFdTT1AgdGFsZXMgb2YgZGVycmluZyBkbywgb3IsIGluIG15IGNhc2UsIG5vdCBzbyBkZXJyaW5nIGRvLCB3aWxsIGZvbGxvdy4gVmljYXJpb3VzIFZlZ2FzIGlzIHRoZSBuZXh0IGJlc3QgdGhpbmcgdG8gYmVpbmcgdGhlcmUsIGJ1dCByZWFsbHksIGlmIHlvdSBjYW4gZ2V0IHRoZXJlLCB5b3Ugc2hvdWxkLgpDQVJST1QncyBwZXJzb25hbGl0eSBhbmQgdGhlIGFtdXNpbmcgc2NyaXB0IHN1cHBvcnQgdGhlIGJpemFycmUgc2V0dXAgb2YgeW91IG1ha2luZyBhIGdsb3Jpb3VzIG1lc3Mgb2YgdGhpbmdzIG92ZXIgYSBtdWx0aXR1ZGUgb2YgYWx0ZXJuYXRpdmUgdW5pdmVyc2VzLCBmcm9tIG1lcmVseSBsb3NpbmcgeW91ciBjb21wYW55IHRvIGFjY2lkZW50YWxseSBibG93aW5nIHVwIHRoZSB3b3JsZCBhcyB5b3UganVnZ2xlIGNvbXBldGluZyBkZW1hbmRzIGZyb20gaW52ZXN0b3JzLCBzdGFmZiwgZ292ZXJubWVudHMgYW5kIHRyb2xscyBvbiB0aGUgaW50ZXJuZXQuIApBZnRlciBhYm91dCAyIG1pbnV0ZXMsIHlvdSB3aWxsIGZpbmQgTmF0YXJlZSBvbiB5b3VyIHJpZ2h0LCBzZXQgYmFjayBmcm9tIHRoZSByb2FkLiBKdXN0IGFmdGVyIGEgVGhhaSByZXN0YXVyYW50LCBkaXAgaW4gdG8gdGhlIGxpdHRsZSBlbmNsYXZlIGFuZCB5b3Ugd2lsbCBzZWUgTmF0YXJlZS4gQWN0dWFsbHksIHRoZXJlIGFyZSB0d28gTmF0YXJlZSBqb2ludHMsIGJ1dCBnbyBpbiB0aGUgZmlyc3Qgb25lIChvciwgd2hlbiBmYWNpbmcgdGhlbSwgZ28gaW50byB0aGUgb25lIG9uIHRoZSByaWdodCkuIAooQWx0aG91Z2ggSSBhbHJlYWR5IGFkZGVkIHNvbWUuIApUaXAgQTogR2FpbiBlbm91Z2gga25vd2xlZGdlIGFib3V0IHRoZSBnYW1lIGZpcnN0LgpBbmQgdGhhdCdzIGEgZ29vZCBpbnN0aW5jdC4gCkhpbmVybWFkVVNBIFtBXTsgQ0FOIFtBLCBCK10KSW4gbXVuaWNpcGFsIGNvdXJ0LiBDb3VudHkgQ29yb25lciBQYXVsIEouIApTbywgbm9uZXhpc3RhbnQsIG5vdGhpbmcgZm9yIHRyYW5zZ2VuZGVyIHZpZXdlcnMgZWl0aGVyLCB1bmxlc3MgeW91IGtpbmRhIHNxdWludCBhbmQgdGlsdCB5b3VyIGhlYWQgYXQgdGhlIGdlbmRlciBmbHVpZCBpbmRpdmlkdWFsLCB3aG8gaXMgYSBjb21iaW5hdGlvbiBvZiBhIG1hbGUgYW5kIGZlbWFsZSBjaGFyYWN0ZXIuIEkgYSBiaXNleHVhbCBjaXMgZmVtYWxlLCBhbmQgZm9yIHRoZSBmaXJzdCA5IHllYXJzIG9mIG15IGxpZmUsIG15IHBhcmVudHMgd2VyZSBpbiB0d28gdmVyeSBpbnNhbmVseSBmdW5kYW1lbnRhbGlzdCBkZW5vbWluYXRpb25zIG9mIFNvdXRoZXJuIGNodXJjaGVzLCBmaXJzdCBpbiBhIFBlbmVjb3N0YWwgKGxvbCkgY2h1cmNoIHRoYXQgd291bGQgcHJvYmFibHkgYmUgY2xhc3NpZmllZCBhcyBhIGN1bHQgaWYgaXQgZGlkbiBmYWxsIHVuZGVyIHRoZSBDaHJpc3RpYW5pdHkgdW1icmVsbGEsIGFuZCB0aGVuIGxhdGVyIGluIFNvdXRoZXJuIEJhcHRpc3QgY2h1cmNoZXMgKGFsc28gbG9sIGluIHRoZWlyIHNvY2lhbCBiZWxpZWZzLCBidXQgbm90IG5lYXJseSBhcyBleGNpdGluZyB0byB0YWxrIGFib3V0IGFzIGEgY2h1cmNoIHRoYXQgInRhdWdodCB5b3UgaG93IHRvIiBjYXN0IG91dCBkZW1vbnMgYW5kIHByb3RlY3QgeW91cnNlbGYgZnJvbSB0aGUgcGVyaWwgb2YgbW9kZXJuIGRheSB3aXRjaGNyYWZ0KS4gSSBkaWRuIHJlYWxpemUgSSB3YXMgYmlzZXh1YWwgdW50aWwgSSB3YXMgMTYsIGFuZCBieSB0aGF0IHRpbWUgbXkgcGFyZW50cyBoYWQgZ290dGVuIG91dCBvZiB0aGF0IGJlbGllZiBzeXN0ZW0gYW5kIHN3dW5nIGJhY2sgdG8gdGhlIGxlZnQgbGVhbmluZyB0aGV5IGhhZCBpbiBjb2xsZWdlLCBzbyB0aGV5IHdlcmUgdmVyeSBzdXBwb3J0aW5nIGFuZCBhY2NlcHRpbmcuIApEcmlua2luZyBpdCByZWd1bGFybHkgd2lsbCBoZWxwLiAKSWYgeW91IG1lYW4gdGhlIHNlY29uZCB0aW1lIHlvdSBmaWdodCBJb25lIHdoZXJlIHNoZSByaWRpbmcgdGhlIEdhaWFuIEkgZm91bmQgdGhlIG1vc3QgcmVsaWFibGUgd2F5IHdhcyB0byBqdXN0IHBhcnJ5IGFuZCBlciBoZXIuIApDaGluZXNlIFR1aW5hICggbWFzc2FnZSBwcmFjdGl0aW9uZXJzIGlkZW50aWZ5IHBhdGh3YXlzIHdpdGggbGltaXRlZCBmbG93IGFuZCB1c2UgaGFuZCBwcmVzc3VyZSB0byByZXN0b3JlIGhhcm1vbnkgYW5kIGVuZXJneSBjaXJjdWxhdGlvbi5UaGlzIHNlbWluYXIgYWltcyB0byBpbnRyb2R1Y2UgdGhlIHRoZXJhcGV1dGljIGJlbmVmaXRzIG9mIFR1aW5hIG1hc3NhZ2UgYW5kIGV4cGxhaW4gaG93IGl0IGhlbHBzIGJhbGFuY2Ugb3VyIGhlYWx0aCBob2xpc3RpY2FsbHkuIApUaGUgTGFvdGlhbiBEZWZlbnNlIE1pbmlzICB0cnkgc2FpZCBpbiBhIGNvbW11bmlxdWUgbGFpYyBUdWVzZGF5IHRoYXQgInJlcG9ydHMgYXJyaXYgIGluZyBmcm9tIHZhcmlvdXMgZnJvbnRzIGNvbiAgZmlybSBhIGdlbmVyYWwgTm9ydGggVmlldCAgbmFtZXNlIG9mZmVuc2l2ZS4iIEl0IHJlcG9ydGVkIGF0dGFja3Mgb3ZlciB0aGMgd2Vla2VuZCBvbiBnb3Zlcm5tZW50IGFybXkgcG9zdHMgYXQgTmFtIEJhYywgaW4gTHVhbmcgUHJhYmFuZyBwcm92aW5jZSwgYW5kIGF0IFBoYWxhbmMgYW5kIG9uIHRoZSBvdXRza2lydHMgb2YgTm9uZyBCb3VhbGFvLCBib3RoIGluIFNhICB2YW5uYWtoY3QgcHJvdmluY2UsIGluIHNvdXRoICBjYXN0IExhb3MuIAozLiAKU2VyaW91c2x5LiBJIGhhdmUgbWVkaWNhaWQgYmVjYXVzZSBJIGRpc2FibGVkLiBJdCB0aGUgYmVzdCEgSSBiZWVuIGFibGUgdG8gc2VlIGFsbCBteSBzcGVjaWFsaXN0cywgZ2V0IGFsbCB0aGUgdGVzdHMgSSBuZWVkIGRvbmUsIEkgaGF2ZSBubyBjb3BheSBmb3IgYXBwb2ludG1lbnRzIG9yIG1lZGljYXRpb24uIFN1cmUsIEkgaGF2ZSB0byBmaWdodCB3aXRoIHRoZW0gdG8gZ2V0IGNlcnRhaW4gbWVkcyBwYWlkIGZvciBidXQgSSBoYWQgdG8gZG8gdGhhdCB3aXRoIG15IG9sZCBpbnN1cmFuY2UgdG9vIChob25lc3RseSwgdGhhdCB3aG9sZSBwcm9jZXNzIG9mIG1ha2luZyBwZW9wbGUgdGFrZSBtZWRpY2F0aW9ucyB0aGF0IHRoZWlyIGRvY3RvcnMgZG9uIHRoaW5rIHdpbGwgd29yayBmb3IgdGhlbSwganVzdCB0byBmaWxsIGEgcHJlcmVxdWlzaXRlIGZvciB0aGUgbWVkaWNhdGlvbiB0aGF0IHdpbGwgd29yayBpcyBqdXN0IHNpbGx5KS4KTGlrZSB0aGUgbmFtZSBzYXlzIChtZW50YWwgaGVhbHRoKSwgdGhlc2UgYXJlIDo6aGVhbHRoOjogY29uY2VybnMgdGhhdCBzaG91bGQgYmUgYXR0ZW5kZWQgdG8gYnkgYSBwcm9mZXNzaW9uYWwuIApTdHVmZmFuZG1vcmVzdHVmZiAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxOCBkYXlzIGFnbwpUaGVpciBvZmZlbmNlIGF0IHRpbWVzIHdhcyBydW5uaW5nIGxpa2UgYSB3ZWxsIG9pbGVkIG1hY2hpbmUuIApZb3U/IFdlbGwgaXQgYSBkaWZmZXJlbnQgam91cm5hbGlzbSBpZGVhbCBJIGJvdWdodCBpbnRvLiAKVGhpcyBoYW5kIGhhcyBhbG1vc3Qgbm8gbG93IHBvc3NpYmlsaXRpZXMgc2luY2UgdGhlIHNpeCBpcyB0b28gaGlnaC4gSWYgeW91IGhpdCBhIGZsdXNoIG9yIGEgc3RyYWlnaHQsIGVpdGhlciBvbmUgaXMgdG9vIGxvdyB0byB3aW4gaW4gbW9zdCBjYXNlcy5UaGlzIGxhc3QgZXhhbXBsZSBpbGx1c3RyYXRlcyBhbiBpbXBvcnRhbnQgcG9pbnQuIApJbiB0aGUgVGhvbWFzIENvdmVuYW50IHNlcmllcyB0aGUgbWFpbiBjaGFyYWN0ZXIgaXMgYSBsZXBlciB3aG8gZGV2ZWxvcHMgYW4gZXh0cmVtZWx5IHJpZ2lkIHJvdXRpbmUgb2YgY2hlY2tpbmcgZXZlcnkgcGFydCBvZiBoaXMgYm9keSB0byBtYWtlIHN1cmUgaGUgaGFzbiBkb25lIGluanVyZWQgaGltc2VsZiB3aXRob3V0IHJlYWxpc2luZy4gSGUgZ2V0cyB0cmFuc3BvcnRlZCB0byBhIGZhbnRhc3kgcmVhbG0gd2hlcmUgaGUgY2FuIGZlZWwgYWdhaW4gKHdpdGggdHJhZ2ljIGNvbnNlcXVlbmNlcykgYW5kIGEgbG9vb29vb290IG9mIHRoZSBmaXJzdCAzIGJvb2tzIGFyZSB0aGUgcHJvdGFnb25pc3QgY29uc3RhbnRseSByZWZ1c2luZyB0byBhY2NlcHQgdGhlIGZhbnRhc3kgd29ybGQgYmVjYXVzZSBoZSBmZWVscyBoZSBsb3NlIGhpcyByb3V0aW5lIGFuZCBkaXNjaXBsaW5lICh3aXRoIHRyYWdpYyBjb25zZXF1ZW5jZXMpLiBUaGUgYmFkIGd1eSBpcyByZWFsbHkgbmFzdHkgYW5kIGV2ZXJ5dGhpbmcgdGhhdCBoYXBwZW5zIGhhcyB0cmFnaWMgY29uc2VxdWVuY2VzLCByZXN1bHRpbmcgaW4gbG90cyBvZiBob3JyaWJsZSB0aGluZ3MgaGFwcGVuaW5nIHRvIHdoYXQgYmFzaWNhbGx5IHRoZSBDYXJlIEJlYXIgcmVhbG0uLiAKU21hbGwsIGRpbmd5IGFuZCBzcGFyc2VseSBkZWNvcmF0ZWQsIGl0IGhhcyBqdXN0IGEgc2luZ2xlIGJlZCBhbmQgYSBzaG93ZXIuIApOaW5ldHkgZml2ZSBwZXJjZW50IG9mIHRoZSByZXNwb25kZW50cyBleHBlcmllbmNlZCBmbGlnaHQgcmVsYXRlZCBuZWNrIHBhaW4uCkV0aXF1ZXR0ZSBpcyB0byBleGNoYW5nZSBwaG9uZSBudW1iZXJzLiAKSSBsaWtlIHRvIHNheSB0aGV5IG1lYW4sIGJ1dCB0aGV5IGFyZSBxdWl0ZSBraW5kIGFuZCBnZW5lcm91cyB0byB0aGUgcGVvcGxlIHRoZXkgd29yayB3aXRoIGFuZCB0aGVpciBjbGllbnRzICAgZXZlbiB0aG9zZSB3aG8gYmVsb25nIHRvIHRoZSB2ZXJ5IHNhbWUgZXRobmljL3JlbGlnaW91cyBncm91cHMgdGhhdCB0aGV5IGNyaXRpY2l6ZWQgMiBtaW51dGVzIGJlZm9yZS4uIApJIGdldCBsYXN0IHRpbWUgSSBoYWQgYSBsYXJnZSBncmlkIE9yZSBEZXRlY3RvciBidXQgdGhlcmUgZG9uIGV2ZW4gc2VlbSB0byBiZSB0aG9zZSBkYXJrIHBhdGNoZXMgb24gdGhlIHN1cmZhY2UgdGhhdCBpbmRpY2F0ZSBvcmUuIERpZCB0aGV5IGNoYW5nZSB0aGlzIG9yIGFtIEkganVzdCByZWFsbHkgdW5sdWNreT8uIApIb2RvcnRoZUdyZWF0MjAxOCBSaWRkbGUgTWFzdGVyIDcvMjEKVGhpbmsgb2YgdGhlIHBlb3BsZSBvbiBmYWNlYm9vayB3aXRoIHBvc3RzIGxpa2UgIlJlYWxseSByb3VnaCB3ZWVrLiA6IGp1c3QgYXNraW5nIGZvciBwaXR5IGluIHRoZSBjb21tZW50cy4gClRoYXQgbWlnaHQgYmUgdGhlIHJlYXNvbiBmb3IgbWFzcyBzZWxsIG9mZi4gClRoYW5rcyB0byBoaXMga25vd2xlZGdlIG9mIHRoZSBiYW5kIGdsZWFuZWQsIGhlIHNheXMsIGZyb20gV2lraXBlZGlhIGhlIHdhcyBxdWlja2x5IGZhc3QgZnJpZW5kcyB3aXRoIChMYXBlbmF0IGRvZXNuIHdhbnQgdG8gc2hhcmUgaGlzIGxhc3QgbmFtZSB0byBwcm90ZWN0IGhpcyBuZXcgZnJpZW5kIHByaXZhY3kpLCB3aG8gYXNrZWQgaWYgdGhleSBiZSBpbnRlcmVzdGVkIGluIHRha2luZyBpbiB0aGUgY29uY2VydCBmcm9tIHRoZSBwaXQgaW4gZnJvbnQgb2YgdGhlIGJhbmQuClRoZXkgc2VlbSB0byBiZSByaWdodC4uIApCZWNhdXNlIExpYnJhdHVzIHR5cGljYWxseSBwbGF5cyBhY2NvcmRpbmcgdG8gYSBwcmUgY29tcHV0ZWQgYmx1ZXByaW50IHN0cmF0ZWd5IG9uIHRoZSBmaXJzdCB0d28gYmV0dGluZyByb3VuZHMsIGl0IHJvdW5kcyBhbiBvZmYgdHJlZSBvcHBvbmVudCBiZXQgc2l6ZSB0byBhIG5lYXJieSBpbiBhYnN0cmFjdGlvbiBhY3Rpb24uIApFeHBlcmllbmNlIFJlZGRpdCBhZHMgZnJlZUdldCBSZWRkaXQgUHJlbWl1bSBmb3IgeW91cnNlbGYgdG8gZW5qb3kgUmVkZGl0IGFkcyBmcmVlIGFuZCBzdXBwb3J0IHRoZSBjb21tdW5pdHkgdGhhdCBicmluZ3MgeW91IHRoZSBob3R0ZXN0IG5ld3MsIGVudGVydGFpbm1lbnQsIGFuZCBjYXQgcGhvdG9zIGV2ZXJ5IGRheSwgYWxsIGRheS4gWW91ciBjb250cmlidXRpb24gd2lsbCBoZWxwIHVzIHJlbWFpbiB0cnVseSBpbmRlcGVuZGVudC4KTGFzIFZlZ2FzIHBvbGljZSBzYWlkIGhlIGhhZCAyMyBndW5zIGF0IHRoZSBob3RlbCwgaW5jbHVkaW5nIHNlbWlhdXRvbWF0aWMgcmlmbGVzLCBhbmQgMTkgYXQgaGlzIGhvbWUgYWxvbmcgd2l0aCB0aG91c2FuZHMgb2Ygcm91bmRzIG9mIGFtbXVuaXRpb24uLiAKSSBwbGF5IHdpdGggYSBsb3Qgb2YgQ2hpbmVzZSB0cmFuc2ZlciBzdHVkZW50cyBhbmQgaXQgZGVmaW5pdGVseSBib3JkZXJsaW5lIHJhY2lzbS4gVGhleSB1c3VhbGx5IGNhbGwgYmxhY2sgY2hhbXBpb25zICggRWtrbywgTHVjaWFuICkgZWl0aGVyIE9iYW1hIGFuZCBldmVuICIgbXkgTmkgIiAoIE5pIG1lYW5zIHlvdSBpbiBDaGluZXNlIGJ1dCB5b3Uga25vdyB0aGV5IHJlYWxseSBhcmUgdHJ5aW5nIHRvIHNheSApLiBUaGV5IHVzdWFsbHkgZ2VuZXJhbGl6ZSBpdCB0aGlzIHdheSBiZWNhdXNlIHRoZXkgdGhpbmsgYWxsIGJsYWNrIHBlb3BsZSBsb29rIHRoZSBzYW1lICggbW9zdGx5IGJlY2F1c2UgdGhlcmUgYXJlIG5vIG1ham9yIHByZXNlbmNlIG9mIGJsYWNrIHBlb3BsZSBpbiBDaGluYSApLi4gCkZvciBleGFtcGxlLCBkZXNjcmliZSB5b3VyIGV4cGVydGlzZSBpbiBpbml0aWF0aW5nLCBwbGFubmluZywgZXhlY3V0aW5nLCBtb25pdG9yaW5nIGFuZCBjb250cm9sbGluZyBhbmQgY2xvc2luZyBwcm9qZWN0cy4gCkhpZ2ggdm9sdGFnZSB0cmFuc21pc3Npb24gbGluZXMgZ2VuZXJhbGx5IGhhdmUgZWZmaWNpZW5jeSBsb3NzIG9mIGFyb3VuZCAyIDQlLCBhbmQgdGhleSBqdXN0IGEgcmVsYXRpdmVseSBjaGVhcCBzdGVlbCBhbmQgYWx1bWluaXVtIGNhYmxlLiBUaGUgcHJpY2UgYW5kIGVmZmljaWVuY3kgb2YgdGhlIHdob2xlIHN1cGVyY29uZHVjdGluZyBzeXN0ZW0gd291bGQgbmVlZCB0byBiZWF0IHRoZSBwcmljZSBhbmQgZWZmaWNpZW5jeSBvZiBhIHNpbXBsZSBtZXRhbCBjYWJsZSwgYW5kIHRoZSBzdXBwb3J0aW5nIHN5c3RlbSwgYmVmb3JlIGJlaW5nIGNvbnNpZGVyZWQgYSB2aWFibGUgY29udGVuZGVyLiAKIkkgdGhpbmsgd2UndmUgYmVlbiBzbyBjb25kaXRpb25lZCB0aGF0IHlvdSBoYXZlIHRvIHdhc2ggeW91ciBoYWlyIGV2ZXJ5IGRheSAuIFRoYXQgaXQncyBqdXN0IGJpemFycmUgZm9yIHNvbWVib2R5IHRvIHRoaW5rIHNvbWV0aGluZyBvdGhlcndpc2UsIiBzYXlzIEx5bmNoLCB3aG8gZml0cyBjb21mb3J0YWJseSB3aXRoaW4gdGhlIGVjbyBmcmllbmRseSBjYXRlZ29yeSBvZiBubyBwb29lcnMuIFN0aWxsLCB0aGUgaWRlYSBzZWVtcyB0byBiZSBmaW5kaW5nIGl0cyBmb290aW5nIGhlcmUgICBiZWF1dHkgYmxvZ3MgYW5kIG1lc3NhZ2UgYm9hcmRzIGFyZSBhYnV6eiB3aXRoICdwb28gZXNjaGV3ZXJzLCBhbmQgc29tZSBzdHlsaXN0cyBzYXkgbW9yZSBvZiB0aGVpciBjbGllbnRzIGFyZSBhc2tpbmcgYWJvdXQgaXQuLiAKSGVuY2UsIGl0J3Mgbm90IHVzZWQgaW4gdGhlIFVTQS4gCkFubmEgRmFyaXMgaXMgZmFjaW5nIGEgJDUsMDAwIGZpbmUgZnJvbSB0aGUgYW5pbWFsIHNoZWx0ZXIgd2hlcmUgc2hlIGFkb3B0ZWQgYSBDaGlodWFodWEgbmFtZWQgUGV0ZS4gU29tZWhvdywgdGhlIGxpdHRsZSBkb2cgZW5kZWQgdXAgaG9tZWxlc3MgYW5kIGh1bmdyeSB1bnRpbCBhIGdvb2QgU2FtYXJpdGFuIGZvdW5kIGhpbSB3YW5kZXJpbmcgYXJvdW5kIG9uIHRoZSBzdHJlZXQuIFRoZSBkb2cgd2FzIHJlcG9ydGVkbHkgdGhpbiBhbmQgbm90IGluIHZlcnkgZ29vZCBzaGFwZSwgc28gaXQncyBwb3NzaWJsZSB0aGF0IGhlIGhhZCBiZWVuIG91dCBvbiBoaXMgb3duIGZvciBxdWl0ZSBzb21lIHRpbWUuClRoZXkgcGF5IGhhbmRzb21lbHkgZm9yIHRoYXQgcHJpdmlsZWdlLiAKRm9yIGV4YW1wbGUsIHRoZXkgY291bGQgc2VsbCB0aGVpciBob21lIGZvciAkMS4zIG1pbGxpb24gYW5kIGJ1eSBhIFNvbGVpbCBhcGFydG1lbnQgZm9yIGFib3V0ICQ4MDAsMDAwIGFuZCB0aGF0IG1ha2VzIHNlbnNlIGZvciBhIGxvdCBvZiBwZW9wbGUuIFdlIGhhZCBleHRyZW1lbHkgaGVhbHRoeSBzYWxlcyBmaWd1cmVzIGFzIGEgcmVzdWx0LCBldmVuIGluIGEgc2xvdyBtb3ZpbmcgbWFya2V0IGxpa2UgV2hpdGUgUm9jaywgd2hlcmUgcGVvcGxlIGhhdmUgc2luZ2xlIGZhbWlseSBob21lcyBhbmQgYSBsb3Qgb2YgdGltZSB0byBkZWNpZGUgb24gdGhlaXIgbmV4dCBtb3ZlLiBpcyBhIDI2IHN0b3JleSB0b3dlciB0aGF0IHdpbGwgc3RhbmQgYXQgdGhlIGNvcm5lciBvZiBKb2huc3RvbiBSb2FkIGFuZCBOb3J0aCBCbHVmZiBSb2FkLCByaWdodCBpbiB0aGUgaGVhcnQgb2YgV2hpdGUgUm9jayBkb3dudG93biBjb3JlLiBUaGUgYnVpbGRpbmcgd2lsbCBoYXZlIDE3OCBob21lcyBpbiB0b3RhbCwgcmFuZ2luZyBpbiBzaXplIGZyb20gNjM4IHRvIDEsNzk1IHNxdWFyZSBmZWV0LiBUaGVyZSBhcmUgb25lICwgdHdvICBhbmQgdGhyZWUgYmVkcm9vbSBwbGFucyBhdmFpbGFibGUgYW5kIHByaWNlcyByYW5nZSBmcm9tICQ0NzQsOTAwIHRvICQyLDE5OSw5MDAuCklmIHlvdSBhcmUgYSBjdXN0b21lciBpbiBuZWVkIG9mIGEgbWFzc2FnZSwgaWYgeW91IGNhbGwgIkp1ZHkncyBNYXNzYWdlcywgSW5jLiIgb24gdGhlIHRlbGVwaG9uZSB0byBvcmRlciBhIG1hc3NhZ2UsIGFuZCBpZiBKdWR5IHNob3dzIHVwIGF0IHlvdXIgb2ZmaWNlIHRvIGdpdmUgeW91IGEgbWFzc2FnZSwgdGhlbiB0aGUgcGhvbmUgbnVtYmVyIGlzIHRoZSBwbGFjZSB3aGVyZSB5b3UgcHVyY2hhc2VkIHRoaXMgc2VydmljZS4gRm9yIG1vc3QgcGh5c2ljYWwgcHJvZHVjdHMgd2UgdGVuZCB0byB0aGluayBvZiB0aGUgcGxhY2UgYXMgYSBzdG9yZSBvciBzaG9wIG9mIHNvbWUgc29ydC4gCkkgd2FzIGluIFBlbnNhY29sYSBmb3IgdHJhaW5pbmcgYW5kIGRpZCBhIFBUIHRlc3QuIApJIHdhcyBodW5nIG92ZXIgZnJvbSBOZXcgWWVhciBhbmQgZGVjaWRlZCB0byB0YWtlIGEgbmFwIG9uIHRoZSBmbG9vci4gClBlb3BsZSBsaWtpbmcgaGlzIHdvcmsgaXMgbm90IGEgcmVzdWx0IG9mIHBlb3BsZSBiZWluZyBraW5kIHRvIGhpbSBidXQgaGltIGJlaW5nIGdvb2QgYXQgd2hhdCBoZSBkb2VzLi4gCihBIGphdW50eSwgaGlnaCBwaXRjaGVkICJIZWxsbyEiIGFkZHMgdG8gdGhlIGVmZmVjdC4pIFRvIGJlY29tZSBtdWx0aXBseSBvcmdhc21pYywgdGhpcyBtdXNjbGUgaGFzIHRvIGJlIHRyYWluZWQuIE1lbiBjYW4gbGl0ZXJhbGx5IGxpZnQgd2VpZ2h0cyB3aXRoIGl0IGJ5IGdpdmluZyB0aGVtc2VsdmVzIGFuIGVyZWN0aW9uIGFuZCBoYW5naW5nIGEgdG93ZWwgb3ZlciB0aGUgZW5kIGFuZCB0cnlpbmcgdG8gbGlmdCB0aGUgdG93ZWwuIApJIG1lYW50IGN1bHR1cmFsbHksIHRoZXkgaGF2ZSBhIGxvdCB0byBvZmZlci4gCkV0IGQnYXBycyBTdGVpbmVyLCBpbCBzZW1ibGVyYWl0IHF1ZSBncmNlIGF1IGZldSBldCAgbGEgY3Vpc3NvbiBjZXR0ZSBmb3JjZSB1dGlsaXNlIGF2YW50IHBvdXIgbGEgZGlnZXN0aW9uIGFpdCBwZXJtaXMgZGUgZHZlbG9wcGVyIG5vdHJlIGNlcnZlYXUuQm9ubmUgam91cm5lIGV0IG1lcmNpLkwnZXJyZXVyIGRlIHRpdHJhZ2UgZHUgRHIgU2VpZ25hbGV0SmUgbidhaSBwYXMgZ3JhbmQgY2hvc2UgIGFqb3V0ZXIgIHRvdXQgY2VsYSBzaSBjZSBuJ2VzdCBxdWUgbGEgZGl0dGlxdWUgdnVlIHNvdXMgbCdhbmdsZSBwdXJlbWVudCBhbGltZW50YWlyZSBlc3Qgc2FucyBkb3V0ZSBwbHVzIGNvbXBsaXF1ZSBlbmNvcmUgcXVlIGxhIG1kZWNpbmUgcXUnZWxsZSBzb2l0IGFjYWRtaXF1ZSBvdSBhdWdtZW50ZSBkZXMgYXBwb3J0cyBkZXMgbWRlY2luZXMgZGVtZXVyZXMgIm5hdHVyZWxsZXMiLiBKZSByYXBwZWxsZSBlbiBwYXNzYW50IHF1ZSBsZSBEciBTZWlnbmFsZXQgYSBmb2lyIGRhbnMgc29uIHRpdHJlLCBpbCBhdXJhaXQgZHUgcGFybGVyIGRlIEwnQWxpbWVudGF0aW9uIG91ICJwcmVtaXJlIG1kZWNpbmUiLiAKU2hlIGFkZGVkLCAiQ2hpY2t5LCBjaGlja3kiIGFuZCBsb29rZWQgZG93biBhdCBoaXMgZ3JvaW4gYW5kIG5vZGRlZC4KKFdhc2hpbmd0b24gaXMgYSBzdGF0ZSB3aGVyZSB1bmxlc3MgYSBkZWZlbmRhbnQgaXMgY2hhcmdlZCB3aXRoIGEgY3JpbWUgdGhhdCBjb3VsZCByZXN1bHQgaW4gYSBsaWZlIHNlbnRlbmNlLCB0aGV5IGhhdmUgYSByaWdodCB0byBiYWlsLikuIApGRVJHVVNPTiwgSmFtZXMgTWFydGluICAgUGFzc2VkIGF3YXkgcGVhY2VmdWxseSBhdCBob21lIGluIExvbmRvbiB3aXRoIGZhbWlseSBieSBoaXMgc2lkZSBvbiBXZWRuZXNkYXksIE5vdmVtYmVyIDl0aCwgMjAxNiBpbiBoaXMgODh0aCB5ZWFyLiBIZSBpcyBzdXJ2aXZlZCBieSBoaXMgbG92aW5nIHdpZmUgb2YgNTggeWVhcnMsIEJldHR5IChuZSBCYW5uaXN0ZXIpLiBMb3ZlZCBmYXRoZXIgb2YgRGF2aWQgKExvcmkgUGF5bmUpLCBTY290dCAoVGFuaWEgQ29yZXkpIGFuZCBEb3VnbGFzIChTdGVwaGFuaWUgSGFuc3VsZCkuIApTbyBhIGd1eSBjb21lcyBhbG9uZyBhbmQgc2F5cyB0aGF0IGhlIHdpbGwgdGFrZSB0aGVpciBmZWFyIGF3YXkuIEhlIG1ha2VzIGxvZnR5IHByb21pc2VzLiBTdXJlLCBoZSBoYXNuJ3QgY29tZSB0aHJvdWdoIG9uIGFueSBvZiB0aG9zZSBwcm9taXNlcywgYnV0IGFzIGxvbmcgYXMgdGhlcmUgaXMgYSBwb3NzaWJpbGl0eSB0aGF0IGhlIHdpbGwsIHRoYXQncyB0aGVpciBiZXN0IGhvcGUuIFRoZXkgbmV2ZXIgd2FudGVkIGEgQ2hyaXN0aWFuIHByZXNpZGVudDsgdGhleSBqdXN0IHdhbnRlZCB0byBub3QgYmUgYWZyYWlkIGFueW1vcmUuClRoZSBmaXJzdCB0aW1lIEkgc3BhcnJlZCBteSBoYW5kcyB3ZXJlIGluIGZyb250IG9mIG15IGZhY2UgYnV0IEkgZGlkbiB1c2UgbXkgZ3VhcmQgZm9yIGRlZmVuc2UuIApBbCBkaSBsIGRpIHF1YWx1bnF1ZSBwcmVwYXJhemlvbmUgdGVvcmljYSwgc29sbyBsJ2VzcGVyaWVuemEgZSBpbCB0ZW1wbyBkYW5ubyBidW9uaSByaXN1bHRhdGkuIApXaGF0IHRoZSBPUCBpcyBzYXlpbmcgaXMgdGhhdCBzd2l0Y2hpbmcgYXJvdW5kIHRoZXNlIHRhY3RpY3Mgd291bGQgaGF2ZSBiZWVuIGxpa2Ugc3dpdGNoaW5nIGRlY2sgY2hhaXJzIG9uIHRoZSB0aXRhbmljLCBnaXZlbiB3aGF0IHRoZXkgd2VyZSB1cCBhZ2FpbnN0IHdpdGggdGhlIHJhbXBhbnQgY29ycnVwdGlvbi4gQSBsb3Qgb2YgcGVvcGxlIHNlZSBKQiBhbmQgRFMgYW5kIHRoZWlyICJyb2FkIHNob3ciIG1ha2luZyB0b25zIG9mIG1vbmV5LiBXaGF0IEkgc2VlIGlzIGV2ZW4gYWZ0ZXIgU3RldmUgZmlyZXMgdGhlbSwgYW5kIGF0dGVtcHRzIHRoZSAiaW5lZmZlY3RpdmVuZXNzIG9mIGNvdW5jaWwiIGFuZ2xlLCB0aGV5IHN0aWxsIGFyZSBhZHZvY2F0aW5nIGZvciBoaW0gYW5kIGFnYWluc3QgdGhlIHN5c3RlbSB0aGF0IGZhaWxlZCBoaW0uIApSZW1lbWJlciwgd2Ugcm9wZWQgaW4gY2hhbXBpb24gY2hlc3MgcGxheWVyIFZpc3dhbmF0aGFuIEFuYW5kIGFzIGEgYnJhbmQgYW1iYXNzYWRvciBhbmQgaGUgYWdyZWVkIHRvIGpvaW4gdXMgYmVjYXVzZSBoZSB0b28gYmVsaWV2ZXMgdGhhdCBwb2tlciBpcyBhIG1pbmQgc3BvcnQgYW5kIGlzIG5vdCBnYW1ibGluZy4gCkNoYXJsaWUgQnVja2V0IGlzIGFuIGltcG92ZXJpc2hlZCBsYWQgd2hvc2UgZm9ydHVuZXMgdHVybiB3aGVuIGhlIHVuY292ZXJzIG9uZSBvZiBmaXZlIGdvbGRlbiB0aWNrZXRzIGNvbmNlYWxlZCBpbiBXb25rYSBjaG9jb2xhdGUgYmFycywgYmVzdG93aW5nIGFjY2VzcyB0byB0aGUgZmFibGVkIFdvbmthIGdyb3VuZHMgd2hlcmUgY2hvY29sYXRlIHJpdmVycyBmbG93LCBlZGlibGUgZmxvd2VycyBncm93LCBhbmQgT29tcGEgTG9vbXBhcyBzZXJlbmFkZSBkZXBhcnRpbmcgZ3Vlc3RzIHdpdGggbWFjYWJyZSBtb3JhbGl0eSBzb25ncy4gCkkgd2FzIGhlYXZpbHkgaW52b2x2ZWQgd2l0aCB0aGVpciBmYXZvcml0ZSBjaGFyaXR5LCBnb2xmZWQgd2l0aCBvdXIgcHVyY2hhc2luZyBjb3VudGVycGFydHMgYXQgb3V0aW5ncywgc2VudCB0aGVtIGVtYWlscyBhYm91dCBtYW55IG9mIHRoZSBpbXByb3ZlbWVudHMgb3VyIGNvbXBhbnkgbWFraW5nIHRvIG91ciBtYW51ZmFjdHVyaW5nIHByb2Nlc3NlcyBhbmQgdG8gb3VyIHJlc2VhcmNoIChzZW50IFNNRXMgd2hpdGVwYXBlcnMpLldoaWxlIHRoZXNlIGFjdGl2aXRpZXMga2VwdCB1cyB0b3Agb2YgbWluZCwgbXVjaCBvZiB0aGUgd29yayBpbnZvbHZlZCB3YXMgcmVhbGx5IGdldHRpbmcgb3VyIFNNRXMgaW4gZnJvbnQgb2YgdGhlaXIgU01FcyBhbmQga2VlcGluZyBwdXJjaGFzaW5nIGluIHRoZSBsb29wIGFzIG91ciBiaWQgcHJvZ3Jlc3NlZC4gClRQIGhvbGRlcnMgYnV0IG5vIFRQLiAKVGhlIGdvdmVybm1lbnQsIGFuZCB0aGUgcGVvcGxlLCBjYW4ganVzdCBnbyBvbiBsaWtlIGJlZm9yZS4gSSByZWFsbHkgaG9wZSBhbmQgcHJheSB0aGUgY3Jvd24gcHJpbmNlIGNhbiBwdWxsIGl0IG9mZi4gCkVkaXRvcnMgd2VudCBvbiB0byBzYXksIHRoZSBvcGluaW9uIG9mIHRoZSBFZGl0b3JzLCB0aGUgY2xhaW1zIG9mIHRoaXMgYWR2ZXJ0aXNlbWVudCBhcmUgbm90IGZvdW5kZWQgd2l0aCBhbnkgZGVncmVlIG9mIHJlYXNvbmFibGUgc2NpZW50aWZpYyBldmlkZW5jZSBzcGVjaWZpY2FsbHkgYXMgaXQgcmVsYXRlcyB0byB0aGUgbGluayBiZXR3ZWVuIFZpdGFtaW4gRCBhbmQgYXV0aXNtLi4gClNoZSB3YXNuJ3QgZXZlbiBwYXlpbmcgb3V0IG9mIHBvY2tldCAgIHNoZSBqdXN0IGhvcGVkIHdlJ2QgcXVpdCBjYWxsaW5nIHNvIGhlciBwcmVtaXVtIHdvdWxkbid0IGluY3JlYXNlLi4gCklmIHlvdSBhc2sgbWUsIGkgdGhpbmsgSXNsZSB2MyBpcyBzZXZlcmFsIHRpbWVzIGhhcmRlciB0aGFuIFRoZW55YXcuIApCYXIncyBjbG9zZWQgYXQgaWNvbmljIHB1YgoiTXIuIEtlbGx5IGlzIHN0cm9uZywiIEdyZWVuYmVyZyBhZGRlZC4gQmlsbCBDb3NieSB3ZW50IHRvIHByaXNvbiBsYXN0IHllYXIsIGFuZCBmb3JtZXIgSG9sbHl3b29kIHN0dWRpbyBib3NzIEhhcnZleSBXZWluc3RlaW4gaXMgYXdhaXRpbmcgdHJpYWwuClRoZSBjb2xsZWN0aXZlIGlzIG1hcmtlZCB3aXRoICB0b24gL3RvKG4pLywgYW5kIHRoZSBwbHVyYWwgd2l0aCAgdGEgL3RhLy4gClBzLiBUaGV5IGNhbGxpbmcgeW91IGFuIGlkaW90IGJlY2F1c2UgeW91IGFyZS4gSSBjb3VsZCBnaXZlIGxlc3Mgb2YgYSBzaGl0IGFib3V0IHlvdSBwdXR0aW5nIHlvdXIgb3duIGxpZmUgaW4gZGFuZ2VyLiAKTXZlbnBpY2sgSG90ZWwgQW5rYXJhICAgSGFtbWFtClVuZGVyc3RhbmQgdGhhdCBpdCByZWFsbHkgcGh5c2ljYWwgd29yayBhbmQgcGxlYXNlIGFwcHJlY2lhdGUgdGhlIHdvcmsgdGhleSBwdXQgaW50byBZT1UuIFNvb29vIG1hbnkgdGhlcmFwaXN0cyBlbmQgdGhlaXIgY2FyZWVyIHByZW1hdHVyZWx5IGR1ZSB0byBpbmp1cnkgKEkgcGVyc29uYWxseSB0aG91Z2h0IEkgYnJva2UgbXkgd3Jpc3QgZHVyaW5nIGEgbWFzc2FnZSBhbmQgaGFkIHRvIGdvIGdldCB4cmF5cykgc28gaWYgdGhleSB0ZWxsIHlvdSB0aGF0IHRoZXkgY2FuIGdvIGRlZXBlciwgZmluZCBhbm90aGVyIHRoZXJhcGlzdCB3aG8gY2FuIGFuZCBkb24gbWFrZSB0aGVtIGZlZWwgYmFkIGZvciBub3Qgd29ya2luZyBvdXQgb2YgdGhlaXIgY29tZm9ydCB6b25lLi4gClNvbWVib2R5IGJyaW5nIHNvbWUgbWF5by4gVGhhdCdzIGEgbG90IG9mIGNvbGUgc2xhdy4uIApNeSBkYWQgd2FzbiBleGFjdGx5IHRoZSBuaWNlc3Qga2lkLCBhbmQgaGUgdGVsbHMgYSBzdG9yeSBhYm91dCBvbmUgQ2hyaXN0bWFzIGluIHRoZSA1MHMgd2hlbiBoZSB3YXMgYSBraWQuIFRoZXJlIHdhcyB0aGlzIGtpZCBoZSBkaWRuIGxpa2UsIGFuZCBoZSBoYWQgdGhpcyBuYXN0eSBkYWQsIHRvby4gClRoZSByYWRpbyBjb3VsZCBub3QgYmUgdXNlZCB0byBsZXQgY29sbGVhZ3VlcyBpbiBQYWtpc3RhbiBrbm93OiB0aGF0IGNvdWxkIGFsZXJ0IHRoZSBSdXNzaWFucy4gCkFuZCB0aGUgb25lcyB0aGF0IHNoaW5lIHdpdGggdGhlaXIgb3duIHNwZWNpYWwgbGlnaHQgYXJlIHRoZSB0aXRsZXMgY29tZSBpbiB0aHJlZSBmYXZvcml0ZSBmbGF2b3JzOiB0aGUgU3VibGltZSBNdW5kYW5lLCBPdXRzaWRlciBMb2dpYywgYW5kIEZhbnRhc3RpYyAoYW5kIEltcG9zc2libGUpLiAKVGhhdCB3YXMgYXQgdGhlIFdhYWhpIFAgcG91a2FpIGluIEh1bnRseS4gSSBoYW5kZWQgb3ZlciB0aGUgZmlyc3Qgb2ZmaWNpYWwgY29weSB0byBLbmdpIFR1aGVpdGlhIGFuZCB3YW5kZXJlZCBhcm91bmQgdGhlIGJhY2sgb2YgdGhlIHdoYXJlIHdoZXJlIGEgYmlnIGNyb3dkIHdhcyBnYXRoZXJpbmcuIApXZSBlbmRlZCB1cCBjbG9zaW5nIG9uIFN0ZWVwZWQgVGVhLCBDb2NvYSBKZXdlbHJ5LCBFblJpY2hlZCBBY2FkZW15IGFuZCBHb3QgYSBHcnVkZ2UgdGhhdCBsYXN0IG9uZSBpcyBzdGFsbGVkIHJpZ2h0IG5vdyBhcyB0aGUgZW50cmVwcmVuZXVyIHdobyBoYWQgYW4gaWRlYSBmb3IgYSB0ZWxldmlzaW9uIHNob3cgaXMgd2FpdGluZyB0byBzZWUgaWYgYSBuZXR3b3JrIHdpbGwgcGljayBpdCB1cCwgTXIuIApQb3VyIHNhIHF1YXRyaW1lIG1hbmlmZXN0YXRpb24sIGxlIGZlc3RpdmFsIEJlbGxlcyBwaWVycmVzIGVuIG11c2lxdWUsIG9yZ2FuaXMgcGFyIGwnYXNzb2NpYXRpb24gUGF0cmltb2luZXMgZW4gbXVzaXF1ZSwgc2UgZHBsb2llcmEgY29tbWUgbGVzIGF1dHJlcyBhbm5lcyBzdXIgaHVpdCBzaXRlcyBkdSBkcGFydGVtZW50LiBDZXR0ZSBhbm5lLCB1bmUgbm91dmVsbGUgdmVudWUgcGFybWkgbGVzIGNvbW11bmVzLCBCb3VjaWV1IGxlIFJvaSwgcXVpIGFjY3VlaWxsZXJhIHVuIGNvbmNlcnQgZGFucyBzb24gZ2xpc2UgZ290aGlxdWUuIApWaW9sYXRpb24gb2YgcG9rZXIgZXRpcXVldHRlIHJ1bGVzIG1heSBsZWFkIHRvIHRoZSBwbGF5ZXIgYmVpbmcgcGVybWFuZW50bHkgYmFubmVkIGZyb20gdGhlIGNhc2lubyBvciBjbG9zdXJlIG9mIGhpcyBhY2NvdW50IHdoZW4gcGxheWluZyBvbmxpbmUuCkl0IGRvZXNuIG5lY2Vzc2FyaWx5IGhhdmUgdG8gZG8gd2l0aCB0aGUgaW50ZWxsZWN0IG9mIHRoZSBwb3B1bGF0aW9uLCBpdCBoYXMgdG8gZG8gd2l0aCB0aGUgaW5mcmFzdHJ1Y3R1cmUgYW5kIGVjb25vbWljYWwgYmVuZWZpdHMgdGhhdCBjb21lcyB3aXRoIHRob3NlIHVuaXZlcnNpdGllcy4gQWxsIG9mIHRoYXQgYmFzaWNhbGx5IGVxdWF0ZXMgdG8gIm1vcmUgdG8gZG8iLiBQcmV0dHkgc3VyZSBBQiBpc24gZ29pbmcgdG8gYmUgYXR0ZW5kaW5nIHRvbyBtYW55IFBpdHQgbGVjdHVyZXMsIGJ1dCB0aGUgaW5mbHV4IG9mIGRvbm9yIG1vbmV5IGZyb20gc3VjY2Vzc2Z1bCBhbHVtIGNhbiBzdGltdWxhdGUgYSBjaXR5IGVjb25vbXkgaW4gYSBsb3Qgb2Ygd2F5cyBhbmQgbWFrZSBpdCBtb3JlIGRlc2lyYWJsZSB0byBsaXZlLgpQcmV0dHkgbXVjaCBzdW1zIGl0IHVwLiBObyBGRj8gVW5yZWFsLiAKVGhleSBhcmUgcHJvdmlkZWQgdG8gVHJpcEFkdmlzb3IgYnkgdGhpcmQgcGFydHkgcGFydG5lcnMgc3VjaCBhcyBFeHBlZGlhIGFuZCBHaWF0YS5TdGFyIHJhdGluZyBwcm92aWRlZCBieSBFeHBlZGlhLkFzayBhIHF1ZXN0aW9uR2V0IHF1aWNrIGFuc3dlcnMgZnJvbSBGYWlyZmllbGQgSW5uIFN1aXRlcyBUYWxsYWhhc3NlZSBDZW50cmFsIHN0YWZmIGFuZCBwYXN0IGd1ZXN0cy5Ob3RlOiB5b3VyIHF1ZXN0aW9uIHdpbGwgYmUgcG9zdGVkIHB1YmxpY2x5IG9uIHRoZSBRdWVzdGlvbnMgQW5zd2VycyBwYWdlLkhpIEkgd2lsbCBzdGF5IGF0IHRoaXMgcHJvcGVydHkgbmV4dCBtb250aC4gClRoaXMgaW5mb3JtYXRpb24gd2lsbCBvbmx5IGJlIHNoYXJlZCB3aXRoIHRoaXJkIHBhcnRpZXMgd2hvIHBlcmZvcm0gdGFza3MgcmVxdWlyZWQgdG8gY29tcGxldGUgdGhlIHB1cmNoYXNlIHRyYW5zYWN0aW9uLiBFeGFtcGxlcyBvZiB0aGlzIGluY2x1ZGUgZnVsZmlsbGluZyBvcmRlcnMgYW5kIHByb2Nlc3NpbmcgY3JlZGl0IGNhcmQgcGF5bWVudHMuVXNlciBHZW5lcmF0ZWQgQ29udGVudCAoSW5jbHVkaW5nIGNvbW1lbnRzLCBwcm9maWxlcywgYW5kIHBob3RvIHVwbG9hZHMpOiBXZSBvZmZlciBvcHBvcnR1bml0aWVzIGZvciB5b3UgdG8gZW5nYWdlIGluIHB1YmxpYyBhY3Rpdml0aWVzIG9uIG91ciBXZWIgU2l0ZXMsIGluY2x1ZGluZyBzdWJtaXR0aW5nIGNvbW1lbnRzIGFuZCBwaG90b3MgaW4gYSBudW1iZXIgb2YgYXJlYXMgdGhyb3VnaG91dCB0aGUgU2VydmljZXMuIApPbmx5IHRoZSBsZWF2ZXMgdGhhdCBhcmUgbmVjZXNzYXJ5IHRvIGJyaW5nIHNvbWUgbGlnaHQgZG93biB0byB0aGUgc2Vjb25kIHNldCBzaG91bGQgYmUgcmVtb3ZlZC4gYWx0ZXJuYXRpdmVseSwgaXQgYmV0dGVyIHRvIGp1c3QgcmVtb3ZlIGFsbCB0aGUgbG93ZXIgbGVhdmVzLCBidWRzLCBhbmQgYnJhbmNoZXMuIGxlYXZpbmcgb25seSB0aGUgdG9wcyBhbmQgc2Vjb25kIHNldC4gdGhlbiBhbGwgdGhlIGxhcmdlIGxlYXZlcyBzaG91bGQgYmUgbGVmdCBpbiBwbGFjZSBvbiB0aG9zZSB0b3AgdHdvIHNldHMuIGF0IGxlYXN0IGFzIG11Y2ggYXMgcG9zc2libGUuCld1bmRlcmJhciwgaGVpdCBhbGxlcmRpbmdzIG5pY2h0IGltbWVyIGd1dC4gClJlZ2FyZGluZyBzYWZldHksIHRoZXkgbWF5IGJlIG1vcmUgc2FmZSBpZiB5b3UgYXJlIG1hZGUgb2YgcGFwZXIgYnV0IHRvdWNoaW5nIGEgMzAwIGRlZ3JlZSBpbmR1Y3Rpb24gdG9wIGFuZCBhIDQwMCBkZWdyZWUgYnVybmVyIGV5ZSBpcyBuZWdsaWdpYmxlIHdoZW4geW91IGFyZSBnb2luZyB0byByZW1vdmUgeW91ciBoYW5kIHdpdGhpbiBhIHF1YXJ0ZXIgb2YgYSBzZWNvbmQuIEkgYXJndWUgdGhhdCB0aGUgZmFsc2Ugc2Vuc2Ugb2Ygc2FmZXR5IGNyZWF0ZXMgYSBwb3RlbnRpYWxseSBtb3JlIGRhbmdlcm91cyBlbnZpcm9ubWVudCBpZiB0aGV5IGFyZSBsZWZ0IHVuYXR0ZW5kZWQuCkRPTkFURVRIRSBTT05TIE9GIEEgUFJFQUNIRVJCT09LU05FV1NMRVRURVJTUEVBS0lORyBFTkdBR0VNRU5UU1NUQU5EIFVQIEFSSVpPTkFHQU5HU015dGhzIGFuZCBGYWN0c1dhcm5pbmcgU2lnbnNSZWFzb25zIGZvciBKb2luaW5nR2FuZyBUYWxrTGVhdmluZyBhIEdhbmdCT1hJTkdQaG9lbml4IEJveXMgQ2VudGVyQXJpem9uYSBHb2xkZW4gR2xvdmVzSnIuIApUaGUgQ2FwaXNjbyBtb2RlbCA4MTI3IGhhcyB0aGUgYWRkaXRpb24gb2YgYW4gYWRqdXN0YWJsZSBoZWFkcmVzdC4uIApJdCdzIGEgbGl0dGxlIGhhcmRlciB0byBtYWtlIHRoYXQgYXJndW1lbnQsIHRob3VnaCwgd2hlbiB5b3Ugc2hvdywgZm9yIGFsbCB0byBzZWUsIHRoYXQgd2hhdCB5b3UgcmVhbGx5IHdhbnQgdG8gZG8gaXMgcmVhY2ggcmlnaHQgYmFjay4uIApGdXJ0aGVyLCBrb21idWNoYSBpcyBkZWZpbml0ZWx5IGRpc2NvdXJhZ2VkIGFtb25nIHRoZSBwcmVnbmFudCBhbmQgbGFjdGF0aW5nIGNyb3dkLiAKR2VudGxlbWFuIG9wZW5lZCB0aGUgcHJvYm9zY2lzIGFuZCBoYW5kZWQgbWUgYSBoYW5kLiBJIHNvbWVob3cgZ290IG91dCBvZiB0aGUgYmluIGFuZCBzYWlkOiAiVGhhbmtzIHlvdSwgbXkgTG9yZC4iIExvb2tlZCBhYm91dCAuIFdlIGluIHRoZSB3b29kcz8gSSBiZSBzdHJ1Y2sgYnkgYSBpbnNpZ2h0IHNob2NrLi4gClRoZXkgd2VyZSByZWxlZ2F0ZWQgdG8gdGhlIGRlZXBlc3QgcmVjZXNzZXMgb2Ygb3VyIG5hdHVyZSB0byBiZSBmb3JldmVyIGZvcmdvdHRlbiwgZm9yIGEgc3BsaXQgc2Vjb25kIG9mIGVsYXRpb24uIApBbnl3YXksIEkgZ2xhZCB5b3UgZmVlbCBtb3JlIGNvbmZpZGVudCBpbiB5b3VyIHNwYW5pc2gsIGFuZCBJIGhvcGUgdGhhdCB5b3VyIGdyYXNwIG9mIHRoZSBsYW5ndWFnZSBjb250aW51ZXMgdG8gZ3JvdyBhcyB5b3Ugc3BlYWsgaXQgbW9yZS4gSWYgbm90IHlldCwgeW91IG1heSB2ZXJ5IHNvb24gYmUgYWJsZSB0byBoYXZlIGEgZnVsbCBibG93biBjb252ZXJzYXRpb24gZnVsbHkgaW4gc3BhbmlzaCwgYW5kIHRoYXQgc2hvdWxkIGJvb3N0IHlvdXIgY29uZmlkZW5jZSBpbiBpdCBzbyBtdWNoIG1vcmUuIEkgd2lzaCB5b3UgdGhlIGJlc3QgaW4geW91ciBjb250aW51ZWQgbGVhcm5pbmchLiAKO187IDEyMiBwb2ludHMgIHN1Ym1pdHRlZCA4IGRheXMgYWdvSSBoYXZlbiB3YXRjaGVkIHRoaXMgZG9jdW1lbnRhcnkgeWV0IGJ1dCBJIHN0cm9uZ2x5IGRpc2NvdXJhZ2UgdXNpbmcgTWFyaWUgS29uZG8gbWV0aG9kcyBhcyBhIHdheSB0byBjdXJiIGNvbXB1bHNpdmUgc2hvcHBpbmcuIApCZWNhdXNlIG9mIHRoZSBhbnRpIHJlZ3VsYXRpb24gemVhbG90cyB3aG8gaGF2ZSB0YWtlbiBjb250cm9sIG9mIG91ciBwb2xpdGljYWwgY3VsdHVyZSBhbmQgaW5zdGl0dXRpb25zLCB0aGlzIHdhcyB0aGUgcHJvZmlsZSBvZiBzb21lb25lIHN0aWxsIGZpdCB0byBjb250aW51ZSB0byBsb3JkIG92ZXIgYSBjb3RlcmllIG9mIGRhbmdlcm91cyBhbmQgZW5kYW5nZXJlZCBzcGVjaWVzLCBpbiBoaXMgb3duIGxpdHRsZSBKdXJhc3NpYyBQYXJrLi4gClRvIHRoaXMgcG9pbnQgbXkgdm9pY2UgaGFkIG5vdCByYWlzZWQgYW5kIEkgaGFkIG5vdCBjdXNzZWQuIApCdXQgaXQgc2VlbXMgbGlrZSBBbWVyaWNhbnMgZmluYWxseSBnb3QgaXQgIHRoZSBzdHJlZXRzIGFyZSBub3QgcGF2ZWQgd2l0aCBnb2xkLCBhdCBsZWFzdCBub3QgdGhlIHN0cmVldHMgd2hlcmUgbW9zdCBvZiB1cyBsaXZlLiBUaGUgcHJlc2VudCBpcyBwcmV0dHkgaW5zZWN1cmUgYW5kIHRoZSBmdXR1cmUgbG9va3Mgd29yc2UuIFRoYXQgd2h5IHRoaXMgaG9saWRheSBzZWFzb24geW91IHNob3VsZCBidXkgdGhlIGxpdHRsZSBvbmVzIHRveXMgdGhhdCB3aWxsIGdpdmUgdGhlbSBhIG1vcmUgcmVhbGlzdGljIGlkZWEgb2YgdGhlIGdyaW0gZnV0dXJlIHRoYXQgYXdhaXRzIHRoZW0uCllldCBmb3IgYWxsIG9mIGhpcyBkZWZlbnNpdmUgc3RyZW5ndGhzIENyYWNrZXIgd2FzIG91dCBkZWZlbnNlZCBhbmQgb25lIHNob3QgaW4gdGhlIGVuZC4gV2hpY2ggT2RhIG1hZGUgbWFrZSBzZW5zZS4gQnV0IEkgbWVhbiBDcmFja2V0cyBub3Qgd2Vhay4gSGUgY291bGQgcHJvYmFibHkgYmVhdCBTYW5qaSBhbmQgYXJndWFibHkgWm9yby4KV2hlbiBhIHBsYXllciBidXN0cyBvdXQsIHRoZSBkZWFsZXIgb2ZmZXJzIGEgcmUgYnV5LiAKQm90aCBvZiBteSBkYXVnaHRlcnMgd2VyZSBpbiBNaWRkbGUgU2Nob29sIGF0IHRoZSB0aW1lIGFuZCB0aGV5IHJlbWVtYmVyZWQgd2F0Y2hpbmcgaXQgYXQgYSBzY2hvb2wgYXNzZW1ibHkgaW4gU2VhdHRsZS4uIApKdXN0IGFzIGltcG9ydGFudCwgdGhleSBwcm9kdWNlZCBhIHJldm9sdXRpb24gaW4gcGhpbGFudGhyb3B5LiBBdCB0aGF0IHRpbWUsIHRoZSAxIHBlcmNlbnQgb2YgdGhlIGxhdGUgR2lsZGVkIEFnZSwgbWVuIHdpdGggbmFtZXMgbGlrZSBDYXJuZWdpZSBhbmQgUm9ja2VmZWxsZXIsIHdlcmUgY3JlYXRpbmcgbWFqb3IgbmV3IHBoaWxhbnRocm9waWMgaW5zdGl0dXRpb25zLiAKQnV0IFNjYWxpYSByZWplY3RlZCB0aGF0IHZpZXcuIHNvbWUgdGhpbmsgdGhhdCB0aGUgU2Vjb25kIEFtZW5kbWVudCBpcyBvdXRtb2RlZCBpbiBhIHNvY2lldHkgd2hlcmUgb3VyIHN0YW5kaW5nIGFybXkgaXMgdGhlIHByaWRlIG9mIG91ciBOYXRpb24sIHdoZXJlIHdlbGwgdHJhaW5lZCBwb2xpY2UgZm9yY2VzIHByb3ZpZGUgcGVyc29uYWwgc2VjdXJpdHksIGFuZCB3aGVyZSBndW4gdmlvbGVuY2UgaXMgYSBzZXJpb3VzIHByb2JsZW0uIFRoYXQgaXMgcGVyaGFwcyBkZWJhdGFibGUsIGJ1dCB3aGF0IGlzIG5vdCBkZWJhdGFibGUgaXMgdGhhdCBpdCBpcyBub3QgdGhlIHJvbGUgb2YgdGhpcyBDb3VydCB0byBwcm9ub3VuY2UgdGhlIFNlY29uZCBBbWVuZG1lbnQgZXh0aW5jdCwgU2NhbGlhIHdyb3RlLgpEaWUgZWluc3QgYmVybWNodGlnZSBDb2FsaWNpbiBDYW5hcmlhIChDQykgc2NocnVtcGZ0ZSB2b24gMTAgYXVmIDcgU2l0emUgdW5kIHZlcmxvciBkYW1pdCBlcnN0bWFscyBzZWl0IEphaHJlbiBkZW4gZXJzdGVuIFBsYXR6IGluIGRlciBTdGFkdCwgZGVuIHNpY2ggZGllIFBhcnRpZG8gUG9wdWxhciAoUFApIG1pdCAxMCBTaXR6ZW4gZXJvYmVybiBrb25udGUuIERpZSBTb3ppYWxpc3RlbiBQU09FIHZlcmxvcmVuIDEvMyBpaHJlciBXaGxlciwgYmVrYW1lbiBzdGF0dCAzIG51ciBub2NoIDIgU2l0emUgdW5kIGRpZSBJVUMgc2NoYWZmdGUgZGVuIEVpbnp1ZyBpbnMgU3RhZHRwYXJsYW1lbnQgdW5kIGthbSBlYmVuZmFsbHMgYXVmIHp3ZWkgU2l0emUuIApBZnRlciB0aGF0IHN1cmdlcnkgYW5kIG1vbnRocyBvZiBQVCBJIHdhcyBzdGlsbCBpbiBob3JyaWJsZSBwYWluLiAKRW50ZXJ0YWlubWVudCBsaXN0aW5ncwpXZSB1c2UgQUIgVGFzdHkgdG8gaGVscCB1cyB1bmRlcnN0YW5kIGhvdyB1c2VycyBuYXZpZ2F0ZSBvdXIgd2Vic2l0ZSBhbmQgdG8gYWxsb3cgdXMgdG8gdGVzdCBkaWZmZXJlbnQgdmVyc2lvbnMgb2Ygb3VyIHNpdGUgb24gcGFydGljdWxhciBhdWRpZW5jZXMuIFRoZSB0b29sIHVzZXMgY29va2llcyB0byBpZGVudGlmeSByZXR1cm5pbmcgdXNlcnMgYW5kIGNhbiB1c2UgSVAgYWRkcmVzc2VzIHRvIGRldGVybWluZSBnZW5lcmFsIGxvY2F0aW9uLCBidXQgbm8gb3RoZXIgcGVyc29uYWxseSBpZGVudGlmaWFibGUgZGF0YSBpcyBjb2xsZWN0ZWQuIApTaGUgbm90IGV4Y2l0aW5nIG9yIGZsYXNoeSwgYnV0IFByaW1lIFNwZWFrZXIgWmVnYW5hIGlzIHdvcnRoIHlvdXIgY29uc2lkZXJhdGlvbi4gSWYgeW91IHBsYXlpbmcgU2ltaWMsIHlvdSBwcm9iYWJseSBwdXQgc29tZSBzZXJpb3VzIHBvd2VyIG9uIHRoZSBib2FyZCwgcmFtcCBsaWtlIGEgY2hhbXAgYW5kIGhhdmUgYWNjZXNzIHRvIGFuIGluY3JlZGlibGUgYXJyYXkgb2YgdG9vbGJveCBjcmVhdHVyZXMuIApUb28gbWFueSBwZW9wbGUgd2FzdGUgbW9uZXkgYnkgYnV5aW5nIGEgbWVtYmVyc2hpcCBhbmQgcGFzc2l2ZWx5IHdhdGNoaW5nIHZpZGVvcyBiZWZvcmUgZ29pbmcgdG8gYmVkIG9yIHNvbWV0aGluZywgYW5kIHlvdSdsbCBuZXZlciByZXRhaW4gaW5mb3JtYXRpb24gd2VsbCB0aGF0IHdheS4gCkFjY29yZGluZ2x5LCBwcmVyZXF1aXNpdGVzIGZvciBzb2NpYWwgbW92ZW1lbnRzIGFyZSAiZGVuc2Ugc29jaWFsIG5ldHdvcmtzIGFuZCBlZmZlY3RpdmUgY29ubmVjdGl2ZSBzdHJ1Y3R1cmVzIiBhcyB3ZWxsIGFzIHRoZSB1c2Ugb2YgImxlZ2l0aW1hdGUsIGFjdGlvbiBvcmllbnRlZCBjdWx0dXJhbCBmcmFtZXMiIChwLiAKIkkgaGF2ZSBhIGxvdCBvZiBmcmllbmRzIHdobyBzaGFyZSBhIGxvdCBvZiB0aGVpciBwZXJzb25hbCBsaWZlIG9uIEluc3RhZ3JhbSBvciBzb2NpYWwgbWVkaWEsIHZlcnkgcHVibGljbHkuIApGb3IgbW9yZSB0aGFuIDMwIHllYXJzLCB0aGUgbmFtZSBWaWRhbCBTYXNzb29uIGhhcyBiZWVuIHN5bm9ueW1vdXMgd2l0aCBzdGF0ZSBvZiB0aGUgYXJ0IHNhbG9uIHN0eWxlcy4gVGhpcyBjb21ibyBraXQgZnJvbSBWaWRhbCBTYXNzb29uIGlzIGVzcGVjaWFsbHkgZGVzaWduZWQgZm9yIGNyZWF0aW5nIHRvZGF5J3Mgc3R5bGVzIGF0IGhvbWUuIApTbyBpdCBub3QgY2xlYXIgd2h5IHlvdSBsaW1pdGluZyB5b3VyIGFuYWx5c2lzIHRvIGp1c3QgYXBlcyAoZXhjZXB0IHRoYXQgYnkgZG9pbmcgc28sIHdlIGxvb2sgICB3aHkgbm90IGNvbnNpZGVyIHdoZXRoZXIgbWVhdCBlYXRpbmcgaGFzIGluY3JlYXNlZCBpbnRlbGxpZ2VuY2UvYnJhaW4gc2l6ZSBpbiBhIHZhcmlldHkgb2Ygc3BlY2llcz8gWW91IGNhbiBkcmF3IGNvcnJlbGF0aW9ucyBmcm9tIHR3byBvdXQgb2YgZml2ZSBjaGVycnkgcGlja2VkIHNwZWNpZXMuLiAKWW91IGRvIG5vdCBoYXZlIHRvIHNwZW5kIGEgbG90IG9mIG1vbmV5IGp1c3QgdG8gaGF2ZSBhIGdvb2QgdGltZSBhbmQgbWFrZSB5b3VyIGFubml2ZXJzYXJ5IHNwZWNpYWwuIApBOiBGYWNlYm9vayByZXF1aXJlcyBjb21tZW50ZXJzIHRvIGhhdmUgNCBmcmllbmRzIGFuZCBhIHByb2ZpbGUgcGhvdG8gaW4gb3JkZXIgZm9yIGEgY29tbWVudCB0byBiZSB2aWV3YWJsZSBvdXRzaWRlIHlvdXIgb3duIG5ldHdvcmsgb2YgZnJpZW5kcy4gSWYgYSB1c2VyIGRvZXNuJ3QgbWVldCB0aGVzZSByZXF1aXJlbWVudHMsIHRoZWlyIGNvbW1lbnQgbXVzdCBiZSBhcHByb3ZlZCBieSBhIG1vZGVyYXRvciBiZWZvcmUgaXQgYXBwZWFycyBvbiB0aGUgc2l0ZS4gUGxlYXNlIG1ha2Ugc3VyZSB5b3UgaGF2ZSA0IGZyaWVuZHMgYW5kIGEgcGhvdG8gYXR0YWNoZWQgdG8geW91ciBwcm9maWxlIHRvIGVuc3VyZSB5b3VyIGNvbW1lbnQgaXMgbWFkZSBwdWJsaWMgcmlnaHQgYXdheS4KQmVmb3JlIGZseWluZyBpbnRvIE1jQ2FycmFuIEFpcnBvcnQsIGxlYXJuIGFsbCB5b3UgY2FuIGFib3V0IHRoZSBXU09QIGFuZCBvdGhlciBwb2tlciBvcHRpb25zIGluIExhcyBWZWdhcy4gClRoZSBSb2NreSBHYXAgc2l0ZSwgd2hpY2ggd291bGQgYmUgcGVybWl0dGVkIHRvIGhhdmUgdXAgdG8gMSw1MDAgc2xvdCBtYWNoaW5lcywgaGFzIHR3aWNlIGZhaWxlZCB0byBlbnRpY2UgcXVhbGlmaWVkIGJpZHMsIGFuZCBsZWdpc2xhdG9ycyBzYWlkIGZ1cnRoZXIgZGVsYXlzIGFyZSB1bmFjY2VwdGFibGUuIEJyZW5uYW4gdG9sZCB0aGUgSG91c2UgRWNvbm9taWMgTWF0dGVycyBDb21taXR0ZWUgdGhhdCBzZXZlcmFsIGludGVyZXN0ZWQgb3BlcmF0b3JzIHNhaWQgYSB0YXggcmF0ZSBjbG9zZXIgdG8gNTAgcGVyY2VudCB3b3VsZCBtYWtlIHRoZSBmYWNpbGl0eSBmaW5hbmNpYWxseSB2aWFibGUuLiAKMTB0aFRBUkRJUyAgMiBwb2ludHMgIHN1Ym1pdHRlZCAzIG1vbnRocyBhZ28KRmFjZSBpbiB0aGUgZ3JvdW5kIGlzIGEgdGhpbmc/IEplc3VzIGhvdyBmdWNraW5nIHN0dXBpZC4gQWxtb3N0IGFzIHN0dXBpZCBhcyB0aGUgd2F5IFMgaXMgdGF1Z2h0IGhlcmUgICBhIHNsb3csIG1ldGhvZGljYWwgc3dlZXAgYW5kIGNvbnN0YW50IHBoeXNpY2FsICJpbiB0b3VjaCIgd2l0aCB5b3VyIHBhcnRuZXIuIEV5ZSBjb250YWN0IGlzIGNvbnRhY3QsIGFuZCBhIHByaW1hcnkgc2VhcmNoIGlzIGEgUkFQSUQgc2VhcmNoIG9mIHZpY3RpbSBsb2NhdGlvbnMgdGhhdCB5aWVsZCB0aGUgaGlnaGVzdCBwcm9iYWJpbGl0eS4gCkkgZG9uJ3QgbGV0IHRoZW0gZG8gZmluZ2VyIHN0aWNrcyBvbiBtZS4gWW91ciBmaW5nZXJzIGhhdmUgbW9yZSBuZXJ2ZSBlbmRpbmdzIHRoYW4gbWFueSBvdGhlciBwYXJ0cyBvZiB5b3VyIGJvZHkuCkNsZWFybHksIHRoaXMgY2FuIGNoYW5nZSBncmVhdGx5IGJhc2VkIG9uIHRoZSBmYWN0b3JzIGxpc3RlZCBhYm92ZS4gCkkgY2FuIHNheSBpcyBjb250aW51ZSBkb2luZyBldmVyeXRoaW5nIHlvdSBmZWVsIGlzIHJpZ2h0IGZvciB0aGUga2lkcy4gVGhlIGZhY3QgdGhhdCB5b3UgaGF2ZSB0aGUgcG9zc2liaWxpdHkgb2YgZG9pbmcgdGhhdCBpcyBzb21ldGhpbmcgdGhhdCBJIHdvdWxkIGdpdmUgdGhlIHdvcmxkIHRvIGhhdmUuIE1ha2UgdGhlIG1vc3Qgb3V0IG9mIGl0IGFuZCBoZSBnZXQgdGhlIGlkZWEgKG9yIGhlIHdvbiBkb2VzbiBtYXR0ZXIpLgpEb3VnIHdhcyBib3JuIGluIE9jdG9iZXIgMTkyMyBpbiBUb3JvbnRvIGFuZCB3ZW50IHRvIEplc3NlZSBLZXRjaHVtIFNjaG9vbC4gCkJhc2VkIG9uIHRoaXMgaW5mb3JtYXRpb24sIGl0IGNhbiBnaXZlIHlvdSBhZHZpY2UgaG93IHRvIHBsYXkgYSBoYW5kLiBJdCBnaXZlcyB5b3UgYWR2aWNlIG9iamVjdGl2ZWx5IGFuZCB5b3UgYXJlIGZyZWUgdG8gYWNjZXB0IGl0IG9yIGRlbnkgaXQuIApIZSBqdXN0IGJlZW4gcmVhbGx5IHVuZnVubnkgYW5kIHdlaXJkIGxhdGVseS4gSSBkb24gcmVhbGx5IGZ1bGx5IHVuZGVyc3RhbmQgd2h5IGhlIGlzIHNvIHRocmVhdGVuZWQgYnkgdXMuIEJhc2ljYWxseSB0aGUgZXh0ZW50IHRvIHdoaWNoIHdlIHRhbGsgYWJvdXQgaGltIGluIHRoZSBsYXN0IGZpdmUgbW9udGhzIGlzIGp1c3QgcmVhZGluZyBoaXMgaW50ZXJuZXQgY29tbWVudHMgaW4gYSBzaWxseSBwc3VlZG8gY29ja25leS9hdXN0cmlhbGlhbi9jcmF6ZWQgYWNjZW50Li4gCkdhbGVuIHdhcyBhIGZhc2NpbmF0aW5nIGNoYXJhY3RlciwgYW5kIGhpcyB3cml0aW5nIGlzIGFic29sdXRlbHkgaW5jcmVkaWJsZSAgIGFuZCBJIG1lYW4gdGhhdCBpbiBldmVyeSB3YXkgdGhhdCBpbmNyZWRpYmxlIGNhbiBiZSB0YWtlbi4gCkkgd291bGQgbG92ZSB0byBzZWUgc29tZSBzcGVlZCBmcm9tIHRoZXNlIEdpYW50cyB0ZWFtcyBhbmQgaGUgY2VydGFpbmx5IGJyaW5ncyBpdC4gRnJhbnNkZW4gSSB0aGluayBuZWVkcyBtb3JlIHRpbWUgYXMgd2VsbC4gClRoZSBNYXlhbnMgZGlkbid0IGhhdmUgYXV0b2NsYXZlcywgYW5kIGEgbG90IG9mIHRoZW0gcHJvYmFibHkgZGlkbid0IGRpZSBmcm9tIHNlcHNpcywgYnV0IHRoYXQgZG9lc24ndCBtZWFuIEkgd2FudCBob2xlcyBwb2tlZCBpbiBteSBib2R5IHdpdGhvdXQgc3RlcmlsaXphdGlvbi4uIApUaGVvbG9neSBpcyB0aGUgc3R1ZHkgb2YgZ29kIGFzIHRoZSB3b3JkIGNvbXBvc2l0aW9uIGZyb20gInRoZW9zIiBhbmQgImxvZ29zIiB0ZWxscyB1cy4gSXQgd2hhdCBwZW9wbGUgbWlnaHQgc3R1ZHkgaWYgdGhleSB3YW50IHRvIGJlY29tZSBwcmllc3RzLiAKVmlsbGFpbiByZWFzb25hYmx5IGhhcyAyIHNldCBjb21ib3MgYW5kIG5vIHJlYXNvbmFibGUgdHdvIHBhaXIgY29tYm9zLiBFdmVuIHdpdGggc2V0cywgdGhpcyBpcyBub3QgdGhlIHR5cGljYWwgbGluZSB0YWtlbiBieSB0aG9zZSBoYW5kcyB3aGljaCByZWR1Y2VzIHRoZSBmcmVxdWVuY3kgb2YgaGF2aW5nIGEgc2V0IGluIHRoaXMgbGluZS4gCkl0IG5vdCwgYnV0IGl0IGNhbiBlYXNpbHkgYmUuIEFzIG90aGVycyBzYWlkLCBpdCByZWFsbHkgaXMgYSBkcnVnLCBpbiB0aGUgc3RyaWN0ZXN0IHNlbnNlIG9mIHRoZSB0ZXJtLCBsaWtlIGNvY2FpbmUgb3IgaGVyb2luZS4gSXQgbWFrZXMgeW91IHdhbnQgdG8gY29uc3VtZSBtb3JlLCBjYW4gaW5kdWNlIGFkZGljdGlvbiwgYW5kIHdpdGhkcmF3YWwgc3ltcHRvbXMuIFlvdSB3b24gZ2V0IGFueSBvZiB0aGF0IGlmIHlvdSBkcmluayBvbmUgZ2xhc3Mgb2Ygd2luZSBhIGRheSAoYW5kIHRoZXJlIGEgbGFyZ2UgYW5kIHJlYWxseSBsb3ZlbHkgY3VsdHVyZSBpbiB3aW5lIG1ha2luZywgbGlua2luZyBtYW4gdG8gZWFydGggaW4gYSBiZWF1dGlmdWwgd2F5KSwgYnV0IHlvdSB3aWxsIGlmIHlvdSBnZXQgeW91cnNlbGYgc3R1cGlkIGRydW5rIGV2ZXJ5IHdlZWsgZW5kcy4KVGhleSBkZWxpZ2h0ZWQgaW4gSHVzdG9uIGNvbXBhbnkuIFRoZXkgaGFkIGEgY2hvaWNlIG9mIGhvcnNlcyBmcm9tIGEgZmluZSBzdGFibGUsIGVuam95ZWQgZm9ybWFsIGNhbmRsZWxpdCBkaW5uZXJzICh1c3VhbGx5IGEgTGltZXJpY2sgaGFtIHdhcyBpbiBldmlkZW5jZSApLCBhbmQgdGhleSB3ZW50IG9uIHdpbGQgY2FyIGpvdXJuZXlzIGludG8gQ29ubmVtYXJhIHJldHVybmluZyB0byBQYWRkeSBCdXJrZSBpbiBDbGFyZW5icmlkZ2UsIGZvciBveXN0ZXJzLCBHdWlubmVzcyBhbmQgc2luZ3NvbmdzLi4gClRoZXNpcywgYW50aXRoZXNpcywgc3ludGhlc2lzLi4gCllvdSdsbCBydW4gb3V0IG9mIGZvb2QsIGRpc2h3YXRlciwgY3VwcywgYW5kIHNhbml0eSBhdCBsZWFzdCBvbmNlIGEgd2VlaywgaWYgbm90IG11bHRpcGxlIHRpbWVzIGEgbmlnaHQuIEJ1dCwgYXQgbGVhc3QgSSdtIGdvaW5nIHRocm91Z2ggaXQgd2l0aCBwZW9wbGUgd2hvIGNhbiB0cmFkZSBob3Jyb3Igc3RvcmllcyB3aXRoIG1lIHRoZSBuZXh0IGRheS4gQW5kIG15IGZlZXQgd29uJ3QgaHVydC5XZSBhbHNvIGFsd2F5cyBkbyBkb25hdGlvbnMgdG8gb3VyIGNvd29ya2VycyBpbiBuZWVkLCBhbmQgdm9sdW50ZWVyIGV2ZW50cyBmb3IgdGhlIGNvbW11bml0eSB3ZSByZXNpZGUgaW4uIApIZSBoYXMgdG8gZmluZCBhIGpvYiwgbGVhcm4gdG8gY29tbXVuaWNhdGUgaW4gYSBkaWZmaWN1bHQgbGFuZ3VhZ2UgYW5kIGJlY29tZSBwYXJ0IG9mIHRoZSBzY2VuZXJ5LiBBbG1vc3QgMTggeWVhcnMgbGF0ZXIsIElhbiBpcyB0aGUgbG9naXN0aWNzIG1hbmFnZXIgZm9yIEFkZGljb20sIGEgbW9iaWxlIHBob25lIGFjY2Vzc29yeSBwcm92aWRlci4gQW5uYSwgb3JpZ2luYWxseSBhIHByZXNjaG9vbCB0ZWFjaGVyLCBpcyBub3cgY28gb3JkaW5hdGluZyBqb2IgcGxhY2VtZW50IGZvciBuZXcgdGVhY2hlcnMgZnJlc2ggb3V0IG9mIHVuaXZlcnNpdHkuIFRoZXksIGFuZCBlaWdodCB5ZWFyIG9sZCBkYXVnaHRlciwgRW1pbGlhLCBhcmUgY29tcGxldGVseSBjb21taXR0ZWQgdG8gdGhlaXIgaWR5bGxpYyBsaWZlc3R5bGUgaW4gYSBuZXcgc3VzdGFpbmFibGUgaG91c2luZyBkZXZlbG9wbWVudCwgY2FsbGVkIEZhZ2VsdmlrcyBIb2pkZW4sIG9uIGEgc25vd3kgbW91bnRhaW50b3AgYWJvdXQgMjAga2lsb21ldHJlcyBmcm9tIGRvd250b3duIFN0b2NraG9sbS4KVGhlIG90aGVyIGNvbW1lbnQgaGFzIG1vc3Qgb2Ygd2hhdCB5b3Ugd3JvdGUgY292ZXJlZCwgYnV0IGZvciB0aGUgb3RoZXIgYml0OiBZb3UgY2FuIHRha2UgTnlRdWlsLCBob25leS4gSXQncyB1bmxpa2VseSB0byBtYWtlIHlvdXIgc3RvbWFjaCB3b3JzZS4gSnVzdCBiZSBzdXJlIHRvIHRha2UgYSBwcm9wZXIgZG9zZSBhbmQgbm90IG1vcmUsIGFuZCBvbmx5IHRha2UgaXQgb25jZSBiZWZvcmUgYmVkLiAKWWVhaCB5b3UgY2FuIG1ha2Ugc2VydmVycyBwYXkgZm9yIGRpbmUgYW5kIGRhc2hlcnMsIGJlY2F1c2Ugd3RmIGFyZSB0aGV5IHN1cHBvc2VkIHRvIGRvPyBBIHNlcnZlciBpc24gdGhlIGZ1Y2tpbmcgZm9vZCBwb2xpY2UgcHJvZmlsaW5nIHBlb3BsZSBhbmQgd2F0Y2hpbmcgdGhlbSBjb25zdGFudGx5LCB0aGV5IGFyZSBydW5uaW5nIGFyb3VuZCBkb2luZyB0aGVpciBqb2IuIApOb3cgYW55b25lIGFuZCBldmVyeW9uZSBpcyBzZXJpb3VzIGFib3V0IHRoZSBwb2tlciBidXNpbmVzcyBieSBhbGwgbWVhbnMuIApJdCBoYWQgYSB0aGVtZSBvciB0b25lIHdlbGwgZXN0YWJsaXNoZWQgaW4gaXRzIGdhbWVwbGF5LiAKQm91bGRlciBidXNpbmVzcyBjYW4gbWFrZSB0aGF0IGhhcHBlbgpBbmQgaXQgYWx3YXlzIGdldHRpbmcgYmV0dGVyLiAKTGlrZSBmbGVhcywgdGlja3MgYXJlbid0IGFzIGxpa2VseSB0byBhYmFuZG9uIHlvdXIgY2F0IGZvciB5b3UsIGJ1dCBpdCBjYW4gaGFwcGVuLiAKSGVucnkgd2FzIG1hZGUgdXAgdG8gbG9vayBsaWtlIEN1c2hpbmcsIGJ1dCB3aXRoIHRoZSBhZGRpdGlvbiBvZiBkb3RzIGFsbCBvdmVyIGhpcyBmYWNlLiBUaGVzZSBkb3RzIGhlbHBlZCB0aGUgbW90aW9uIGNhcHR1cmUgc29mdHdhcmUsIHdoaWNoIGJhc2ljYWxseSByZXBsYWNlZCB0d2Vha2VkIEhlbnJ5IGZhY2UgdG8gbG9vayBtb3JlIGxpa2UgQ3VzaGluZyBmYWNlLi4gCklmIHZpbGxhaW4gY2FsbHMgd2l0aCB0aGUgQWR4IGZsdXNoIGRyYXcsIHlvdSBzdGlsbCBhaGVhZC4gSmFtbWluZyBoZXJlIG1ha2VzIGl0IGxvb2sgbGlrZSB5b3UgY2hhc2luZyB0aGUgZmx1c2ggZHJhdyBhbmQgeW91IGNvdWxkIGdldCBzb21lIHNuYXAgY2FsbHMgZnJvbSBKSiBhbmQgUVEuLiAKVGhlIGJlYXV0aWZ1bCB0cmVlIHRha2VzIG5lYXJseSBvbmUgd2VlayB0byBidWlsZCwgZnJvbSB0aGUgZGV2ZWxvcG1lbnQgb2YgdGhlIGZyYW1lIHRvIHRoZSBmaW5hbCBwb2luc2V0dGlhIHBsYWNlbWVudC5vZiBndWVzdHMgaGF2ZSBtYWRlIHZpc2l0aW5nIG91ciBwb2luc2V0dGlhIHRyZWUgYSBob2xpZGF5IHRyYWRpdGlvbiBmb3IgbWFueSB5ZWFycywgc2FpZCBQZXRlciBDaHUsIFZpY2UgUHJlc2lkZW50IGFuZCBHZW5lcmFsIE1hbmFnZXIgb2YgQmVsdGVycmEgQ2FzaW5vIFJlc29ydC4gRXhwZXJpZW5jZSB2aXNpdG9ycyB0aHJvdWdob3V0IHRoZSByZWdpb24gbWFraW5nIGEgdHJpcCB0byBCZWx0ZXJyYSB0byBlbmpveSB0aGUgdHJlZSwgdGFrZSBmYW1pbHkgcGhvdG9zIGFuZCBnZXQgaW4gdGhlIGhvbGlkYXkgc3Bpcml0LiAKSSB0aGluayBvbmVzIFNPIHNob3VsZCBiZSBzdXBwb3J0aXZlIGluIHlvdXIgaG9iYmllcyAoV2hpY2ggSSBzYXlpbmcgYXMgSSBjdXJyZW50bHkgZGF0aW5nIGEgcG9rZXIgcGxheWVyLikgc28gZG9uIGp1c3QgYWNjZXB0IHRoYXQgeW91IGdvaW5nIHRvIHN0b3Agb3V0cmlnaHQuIApBbW9uZyB0aGUgY291bnRyaWVzIGluIHRoZSByZWdpb24sIEJyYXppbCByZXBvcnRlZCB0aGUgbGFyZ2VzdCBudW1iZXIgb2Ygcm9vbXMgaW4gdGhlIHRvdGFsIGFjdGl2ZSBwaXBlbGluZSAoNywxOTEgcm9vbXMpLCBmb2xsb3dlZCBieSBQYW5hbWEgd2l0aCA1LDMwMCByb29tcy4gQXJnZW50aW5hIGVuZGVkIHRoZSBtb250aCB3aXRoIDEsOTAwIHJvb21zIGluIHRoZSB0b3RhbCBhY3RpdmUgcGlwZWxpbmUsIGZvbGxvd2VkIGJ5IENvbG9tYmlhICgxLDUwOSByb29tcykgYW5kIENvc3RhIFJpY2EgKDEsNDIwIHJvb21zKS4KR3Jvd2luZyBpbiBhIGNvbnRyb2xsZWQgZW52aXJvbm1lbnQgYWxsb3dzIHVzIHRvIHByb2R1Y2UgY3JvcHMgYWxsIHllYXIgcm91bmQsIGNsb3NlciB0byB3aGVyZSBwZW9wbGUgbGl2ZSwgaW4gYSBzdXN0YWluYWJsZSB3YXkuIApIZSBmZWxsIGZvciBpdC4uIApOb3Qgb25seSBhcmUgeW91IHBvdGVudGlhbGx5IGluanVyaW5nIHlvdXJzZWxmIGZ1cnRoZXIgYnkgbm90IHJlY29nbml6aW5nIHRoZSBzaWduYWxzIHlvdXIgYm9keSBzZW5kcyB5b3UsIHlvdSBhcmUgYWxzbyByZWR1Y2luZyB5b3VyIGJvZGllcyBhYmlsaXR5IHRvIG1hbmFnZSB0aGUgcGFpbiBvbiBpdHMgb3duLiAKVGhlaXIgY29udGVudCBqb3VybmV5IHN0YXJ0ZWQgd2l0aCBhbWJpdGlvbnMgb2YgY3JlYXRpbmcgZmlsbXMsICJJbiB0aGUgbWlkZGxlIG9mIDIwMTUgd2Ugc3RhcnRlZCB0aGlua2luZyBvZiBob3cgdG8gZGVsaXZlciBjb250ZW50IGRpcmVjdGx5IHRvIGF1ZGllbmNlcyBhbmQgdGhhdCdzIHdoZW4gd2UgdG9vayB2ZXJ5IGJpZyBiZXRzLiBXZSBzYWlkIHRoYXQgc2hvcnQgZm9ybSBjb250ZW50IHdpbGwgYmUgYSB2ZXJ5IGJpZyBwbGF5ZXIgYW5kIHRoYXQncyBob3cgRmlsdGVyIENvcHkgd2FzIGNyZWF0ZWQuIFRoZSBzZWNvbmQgYmlnIGJldCB3YXMgd2hpbGUgZXZlcnlib2R5IGlzIHRoaW5raW5nIGFib3V0IFlvdVR1YmUsIGNhbiB3ZSBsb29rIGF0IEZhY2Vib29rIGFzIGEgcGxhdGZvcm0gdG8gZGlzdHJpYnV0ZSBvdXIgY29udGVudCwiIHNheXMgU3VyZXNoLiBUaGVyZSB3YXMgYSB0aGlyZCBiZXQgdG9vIGFuZCB0aGF0IHdhcyB0byBjcmVhdGUgc2hvcnQgZm9ybSBjb250ZW50IHRvIHVuZGVyc3RhbmQgY29uc3VtZXIgYmVoYXZpb3VyLgpJIHdvdWxkIHJvbGwgbXkgZXllcyBhdCBzb21lb25lIGlmIHRoZXkgc2FpZCB3ZSBzaG91bGQgYWRvcHQgdGhlIHNhbWUgcG9saWNpZXMgYXMgTm9yd2F5IG9yIFFhdGFyIGJlY2F1c2Ugb2YgdGhlIHBlciBjYXBpdGEgd2VhbHRoIGluIHRob3NlIGNvdW50cmllcy4KMy4pIFRoZSBmbG9vciBzdXBlcnZpc29yIHdpbGwgZ2l2ZSB5b3UgYW4gIk9LIHRvIGxlYXZlIHNsaXAiIGluZGljYXRpbmcgaG93IG1hbnkgbWludXRlcyB5b3UgY2FuIGJlIG91dCBvZiB0aGUgZ2FtZSBiZWZvcmUgeW91IGJlIHB1dCBiYWNrIG9uIHRoZSBib3R0b20gb2YgdGhlIHdhaXRpbmcgbGlzdCBhdCB0aGUgZGVzay4KU2F2ZSB0aGUgbWVkaWEgaXQgY2FtZSBvbiwgd2hldGhlciBiZSB0aGUgQ0QvRFZEIHBhY2thZ2luZyBvciB0aGUgaW5zdHJ1Y3Rpb24gbWFudWFsLiBTaW5jZSB0aGluZ3MgaGFwcGVuLCB5b3UgY2FuIGFsc28gYXJjaGl2ZSBsaWNlbnNlIGtleXMgaW4gYSB2YXJpZXR5IG9mIG1ldGhvZHMuIE9mIGNvdXJzZSBpdCByZXF1aXJlcyBhY2N1cmF0ZSB0cmFuc2NyaXB0aW9uIHRvIGJlIHVzZWZ1bC4gCkkgd29yayBwYXJ0IHRpbWUgZG9pbmcgRXhjZWwgcmVwb3J0cyBhbmQgY29weWVkaXRpbmcgZnJvbSBob21lLiBJIGdvIHRvIHNjaG9vbCBwYXJ0IHRpbWUgZm9yIE1hc3NhZ2UgVGhlcmFweSAoYnVpbGRpbmcgdXAgc3RhbWluYSBvdmVyIHRpbWUgZm9yIHRoZSBwaHlzaWNhbCBhc3BlY3RzIG9mIHRoYXQga2luZCBvZiB3b3JrKS4gSSBhbHNvIGhhdmUgYSBNYXN0ZXIgZGVncmVlLCBidXQgZm9yIHRoZSBtb3N0IHBhcnQgdGhlIHR5cGUgb2Ygd29yayB0aGF0IEkgd291bGQgZG8gZnVsbCB0aW1lIHdpdGggdGhhdCBhcmUgdG9vIHN0cmVzc2Z1bC4gVGh1cywgbWFzc2FnZSB0aGVyYXB5ICAgaXQgaXMgYWN0dWFsbHkgdGhlcmFwZXV0aWMgZm9yIG15IGh5cGVyZXN0aGVzaWEsIEkgY2FuIHJ1biB0aGUgYnVzaW5lc3Mgb3V0IG9mIG15IGhvbWUgb3Igd29yayBmb3Igc29tZW9uZSBlbHNlLCBhbmQgaXQgbm90IHN0cmVzc2Z1bC4gMjUgbWFzc2FnZXMgb3Igc28gYSB3ZWVrIGlzIGNvbnNpZGVyZWQgZnVsbCB0aW1lIGZvciBhIG1hc3NhZ2UgdGhlcmFwaXN0LCB0aG91Z2ggSSB3b24gYmUgbWFraW5nIHdoYXQgSSB1c2VkIHRvLgpDb21wbGFpbnQ6IFdhcyBhYmxlIHRvIGRvIG9ubHkgMyBtaWxlcyBvbiB0cmVhZG1pbGwgdG9kYXk7IG15IHBvc3QgaGVyZSB5ZXN0ZXJkYXkgbWVudGlvbmVkIG15IGFua2xlIGFuZCBsZWcgcGFpbiBvbiB0aGUgcmlnaHQgc2lkZS4gSSBhbHNvIGhhZCBJVCBiYW5kIGlzc3VlcyBkdXJpbmcgbXkgbGFzdCBtYXJhdGhvbiB0cmFpbmluZy4gSSBiZWVuIGRvaW5nIHN0cmV0Y2hlcyAoSSBmb3VuZCBzb21lIHBlcm9uZWFsIHRlbmRpbml0aXMgc3RyZXRjaGVzIG9ubGluZSBhbmQgaGF2ZSBiZWVuIGRvaW5nIHRob3NlKSwgaWNpbmcsIHVzaW5nIG1lbnRob2wgcnViLCBhbmQgSSBnb3QgdGhlIGFua2xlIHdyYXBwZWQgbm93LiBNeSBmb290IHdhc24ga2lsbGluZyBtZSBkdXJpbmcgdGhlIHJ1biAoSSB3YXMgcGxhbm5pbmcgb24gNW1pbGVzIGJ1dCBJIGFsc28gaGFkIHRvIGdldCB0byB3b3JrKSBidXQgSSBnb2luZyB0byBiYWJ5IGl0LCBlc3BlY2lhbGx5IHNpbmNlIEkgaGF2ZSB0byBkbyBhIDIwIG1pbGUgcnVuIHRoaXMgd2Vla2VuZC4KSSBoYXZlIGEgZGVncmVlIGluIGZpY3Rpb24uIEkgaGF2ZW4gZG9uZSBtdWNoIHdpdGggaXQuIE15IGNob3BzIGFyZSBydXN0eS4gCk5hZGEuIApNYXNzYWdlIHdhcyBmb3VuZCB0byBiZSB3ZWxsIHJlY2VpdmVkIGFuZCByZXBvcnRlZCB0byBoYXZlIHJlZHVjZWQgcGFpbiwgaW5jcmVhc2VkIG1vYmlsaXR5LCBhbmQgZGVjcmVhc2VkIG9waW9pZCB1c2UuIApUaGVzZSB0eXBlcyBvZiBzbG90cyBoYXZlIGEgamFja3BvdCB0b3RhbCB0aGF0IGdyb3dzIGVhY2ggdGltZSB0aGUgbWFjaGluZXMgYXJlIHBsYXllZC4gQWxsIHRoZWlyIG1hY2hpbmVzIGFyZSBsaW5rZWQgdXAgdG8gZWFjaCBvdGhlcidzIGFuZCB0aGUgZmlyc3QgcGVyc29uIHRvIGhpdCB0aGUgamFja3BvdCBnZXRzIGEgcGVyY2VudGFnZSBvZiBhbGwgdGhlIHBsYXksIG5vdCBqdXN0IHRoZWlyIG93bi5bMV0uIAoiV2UgbXVzdCBjb250aW51ZSB0byBvcHBvc2UgdGhlIFBlbG9zaSBoZWFsdGggY2FyZSBiaWxsIGFuZCBzdGFuZCBieSB0aGUgQW1lcmljYW4gcGVvcGxlIGluIHN1cHBvcnQgb2YgUmVwdWJsaWNhbiBvZmZlcmVkIHNvbHV0aW9ucyB0aGF0IG1lZXQgdGhlIG5lZWRzIG9mIGZhbWlsaWVzIGJ5IGxvd2VyaW5nIGhlYWx0aCBjYXJlIGNvc3RzLCIgaGUgc2FpZCwgcmVmZXJyaW5nIHRvIEhvdXNlIFNwZWFrZXIgTmFuY3kgUGVsb3NpLCB3aG8gc2hlcGhlcmRlZCB0aGUgYmlsbCB0byBwYXNzYWdlLgpQaWdnYWhiZWFyICAxIHBvaW50ICBzdWJtaXR0ZWQgMTIgZGF5cyBhZ28KU3BvcnRzIGdpdmUgYSBodWdlIHJlYXNvbiBmb3IgcGVvcGxlIHRvIGhlbHAgb3V0IHRoZSBzY2hvb2xzOiBhdHRlbmRpbmcgZ2FtZXMsIGJ1eWluZyBzY2hvb2wgbWVyY2hhbmRpc2UsIG9yIGp1c3Qgc3RyYWlnaHQgdXAgZG9uYXRpbmcuLiAKSSBkb24ga25vdy4gQnV0IGZvciBtZSwgSSBoYXZlbiBiZWVuIGludGVyZXN0ZWQgaW4gYW4gRlBTIHNpbmNlIHRoZXkgYWxsIG1vdmVkIHRvIHRoZSB0aW55IG1hcC9mb3JjZWQgY29uZmxpY3QgbW9kZWwuIApQbGF5aW5nIExlZ28uIEl0IG15IGhvYmJ5IGF3YXkgZnJvbSB0aGUgcmluaywgYXNpZGUgZnJvbSBQaG9lYmUgKGhpcyBkb2csIGEgQmVybmVzZSBtb3VudGFpbiBkb2cpLiBJIGRvbiBrbm93IHdoYXQgaXQgaXMsIGJ1dCBJIGxvdmUgYnVpbGRpbmcuIApPbmUgb2YgbXkgdmVyeSBmYXZvcml0ZSBmb3JhZ2UgZm9vZHMgaXMgZmlkZGxlaGVhZCBmZXJucy4gSSdtIGFsc28gZm9uZCBvZiByYW1wcyBhbmQgbW9yZWxzICAgYW5kIEkgYW0gYmxlc3NlZCB0byBsaXZlIHdoZXJlIG1hdHN1dGFrZSBtdXNocm9vbXMgZmxvdXJpc2guIFRoZXkncmUgc3VwcG9zZWQgdG8gdGFzdGUgbGlrZSBhIGNvbWJpbmF0aW9uIG9mIGFzcGFyYWd1cyBhbmQgb2tyYSB3aXRoIHRoZSBzbmFwIG9mIGdyZWVuIGJlYW5zLCBhbHRob3VnaCBJIGZpbmQgdGhleSByZWFsbHkgaGF2ZSBhIHVuaXF1ZSBmbGF2b3Igb2YgdGhlaXIgb3duLiBVbmZvcnR1bmF0ZWx5IGhhcnZlc3RpbmcgdGhlbSBpbiBteSBvd24geWFyZCBwcm92ZXMgZGlmZmljdWx0OyBub3QgYmVjYXVzZSB0aGV5IGRvbid0IGdyb3cgd2hlcmUgSSBsaXZlICh0aGV5IGRvKSwgYnV0IGJlY2F1c2Ugb25lIG9mIG15IGRvZ3MgaXMgYWxzbyBxdWl0ZSBmb25kIG9mIGZlcm5zLgpOYSBub2l0ZSBkZSBzYmFkbyB1bSBtZXRlb3JpdG8gY2FpdSBubyBQZXJ1LCBwcnhpbW8gYW8gTGFnbyBUaXRpY2FjYSwgY29tIHVtYSByYWlhIGRlIGxhcmFuamEgZSB1bSBncmFuZGUgZXN0cm9uZG8uIE8gYnVyYWNvIGNoZWlvIGRlIGd1YSBlIGVzdCBkYW5kbyBmb3JhIHNtZWxseSBvZG9yZXMgbm9jaXZvcyBxdWUgZXN0byBjYXVzYW5kbyBvcyBhbGRlZXMgZGUgQ2FyYW5jYXMsIFBlcnUgc29mcmVtIGRlIGRvcmVzIGRlIGNhYmVhIGUgbnVzZWFzLiBBdCBhZ29yYSBubyBob3V2ZSBuZW5odW1hIG9ic2VydmFvIGRlIFN1cGVybWFuLgpJIHRoaW5rLCBmb3IgdGhlIGxlc3MgZXhwZW5zaXZlIG9uZXMsIGl0IGRlZmluaXRlbHkgd29ydGggZG9pbmcgICBJIHdpbGxpbmcgdG8gcGF5IG1vcmUgdGhhbiB0aGF0IGZvciBtYXJrZXRpbmcsIGFuZCB0aGlzIGdldHMgbWUgaW4gZnJvbnQgb2YgcGVvcGxlIHRvIHNoYXJlIG15IGdvb2RzIGFuZCBleGNpdGVtZW50IGFib3V0IG15IHByb2R1Y3QuIApTbyBnb29kIGZvciB0aGUgbWFqb3JpdHksIHdobyBhcmUgbm90IGhpZ2ggb24gdGhlIHNwZWN0cnVtLCBiYWQgZm9yIHRoZSB3b3JzdCBvZiB0aGVtLi4gCkEgdGFzdGUgb2YgdGhlIFl1Y2F0YW4KSSB3YXMgd2l0aCBteSBleCBmb3IgMyB5ZWFycywgc2hlIHdhcyBteSBmaXJzdCBhbmQgSSB3YXMgaGVyIGZpcnN0LiAKU28uIEkgd2FzIG1heWJlIDUgb3Igc28uIE15IHNpc3RlciBpcyAyIHllYXJzIG9sZGVyIHRoYW4gbWUgc28gN2lzaC4gCkkgdGhpbmsgSSBnb3R0ZW4gbW9yZSBncnVtcHkgYWJvdXQgdGhpcyB0eXBlIG9mIHN0dWZmIHNpbmNlIHN0YXJ0aW5nIGltbXVub3N1cHByZXNzYW50cyBiZWNhdXNlIHlvdSByaWdodCwgdGhhdCBjb2xkIGRvZXNuIGp1c3QgdGFrZSBtZSBvdXQgZm9yIGEgd2VlayBhbmQgc3Rlcm9pZHMgYXJlIHN1Y2ggYSBob3JyaWJsZS9hbWF6aW5nIGRydWcuIApBIGxvdCBvZiBteSBzdHVmZiBpcyBvbiByYW5kb20gbGVmdG92ZXIgcnVuZXMuIEFjcm9zcyBib3RoIG9mIG15IFI1IHRlYW1zLCBJIHRoaW5rIEkgb25seSBnb3QgNCB1bml0cyBvbiBhIGNvbXBsZXRlIDQgc2V0LiAKSGlzIHJldHJvc3BlY3RpdmUgb24gT2JhbWEncyBwcmVzaWRlbmN5IHdhcyB0aGF0IGl0IGNvdWxkIGFuZCBzaG91bGQgaGF2ZSBkb25lIG1vcmUsIGFuZCB0aGF0IHRvbyBtYW55IHBlb3BsZSB3ZXJlIGh1cnQgbmVlZGxlc3NseS4gVGhhdCdzIGp1c3Qgd2hhdCBJIGdlbmVyYWxseSByZW1lbWJlciAgIHRoZXJlJ3MgbW9yZSwgSSdtIHN1cmUuLiAKVGhlcmUgYXJlIGZlZWRiYWNrIGxvb3BzLiBBcyB0aGUgcGxhbmV0IHdhcm1zLCB0aGUgb2NlYW5zIGNhbm5vdCBhYnNvcmIgYXMgbXVjaCBDTzIuIE1ldGhhbmUsIHdoaWNoIHdvcmtzIG9uIHNjYWxlcyBvZiBodW5kcmVkcyBvZiB5ZWFycyBpbnN0ZWFkIG9mIHRob3VzYW5kcyhidXQgaXMgbXVjaCBtb3JlIGVmZmVjdGl2ZSBhdCBoZWF0aW5nKSwgd2lsbCBiZSByZWxlYXNlZCBtb3JlIGFuZCBtb3JlIG9uIGxhcmdlIHN3YXRocyBvZiBsYW5kIGFzIHRpbWUgZ29lcyBvbi4KU3BlY2lhbCBPbHltcGljcyBwaW9uZWVyZWQgdGhlIHVuaWZpZWQgc3BvcnRzIGFwcHJvYWNoLCB1c2luZyBzcG9ydCBhcyBhIHZlaGljbGUgZm9yIGluY2x1c2lvbi4gClRoZW4gb2J2aW91c2x5IGNob3NlIHRoZSAxc3Qgb25lLCB0aGVuIGNob3NlIHRoZSBsYXN0IG9uZSBjaG9zZSB0aGUgbGFzdCBvbmUgYWdhaW4uIApCdXQgYWZ0ZXIgdGhlIGF1ZGl0b3JpdW0gdXBkYXRlLCBpdCB3YXNuIHVzZWZ1bCBhbnltb3JlIHNvIHRoZXkgZ2F2ZSBpdCB0byB0aGUgQm95cyBTY291dHMgdG8gc3RvcmUgdGhlaXIgc3R1ZmYgYW5kIHRoZXkgY2FuIHN0aWxsIHNob3cgc2xpZGUgbW92aWVzICh5b3Uga25vdyB0aGUgb25lcyB0aGF0IGdvIGRpbmcgd2hlbiB5b3UgbWFudWFsbHkgbWFrZSBpdCBnbyB0byB0aGUgbmV4dCBzbGlkZSkuIApQcmFjdGljZXMgYXJlIHVzdWFsbHkgb25seSBhbiBob3VyIHNvIGRvbiBwbGFuIHlvdXIgZW50aXJlIGRheSBhcm91bmQgaXQuIEFwcHJlY2lhdGUgdGhhdCB5b3UgY2FuIGdldCB3aXRoaW4gaW5jaGVzIG9mIHN1cGVyc3RhcnMgZm9yIGZyZWUuIEkgaGF2ZW4gYmVlbiB0byBvbmUgeWV0IHRoaXMgc2Vhc29uIGJ1dCBJIHJlYWxseSBlbmpveWVkIHdhdGNoaW5nIHRoZW0gcHJhY3RpY2UgbGFzdCBzZWFzb24uLiAKKEZ1bGwgQW5zd2VyKS4gCldoZW4geW91IHdlcmUgYm9ybiwgeW91IHdlcmUgY3J5aW5nIGFuZCBldmVyeW9uZSBhcm91bmQgeW91IHdhcyBzbWlsaW5nLiBMaXZlIHlvdXIgbGlmZSBzbyB0aGF0IHdoZW4geW91IGRpZSwgeW91IHRoZSBvbmUgd2hvIGlzIHNtaWxpbmcgYW5kIGV2ZXJ5b25lIGFyb3VuZCB5b3UgaXMgY3J5aW5nLgpNeSBleHBlcmllbmNlIGluIEtvcmVhIHdpdGggdGhlIHBvbGljZSBhcyBiZWVuICJ5b3UgYSBmb3JlaWduZXIsIHlvdSBtdXN0IGhhdmUgbWlzcmVhZCB0aGUgc2l0dWF0aW9uIiBhbmQgdGhhdCBhdCBCRVNULgpUaGUgbm90aW9uIHRoYXQgdHdvIHBlb3BsZSBzaG91bGQgbWFycnkgYnkgdGhlaXIgb3duIGRlY2lzaW9uIGFuZCBmb3IgInRydWUgbG92ZSIgaXMgYSBmYWlybHkgbW9kZXJuIG5vdGlvbiwgaXQgZGlkbiBzdGFydCB0byBnbyBtYWluc3RyZWFtIGluIHRoZSB3ZXN0IHVudGlsIGFyb3VuZCB0aGUgMTh0aCBjZW50dXJ5LiBGb3IgbW9zdCBvZiBodW1hbiBoaXN0b3J5IGluIGJvdGggdGltZSBhbmQgcGxhY2UgbWFycmlhZ2Ugd2FzIEZBUiBtb3JlIGFib3V0IHByb2R1Y2luZyBzb2NpYWwvZWNvbm9taWMvcG9saXRpY2FsIGFsbGlhbmNlcyBiZXR3ZWVuIGZhbWlsaWVzLiAKVGhlIGZpcnN0IHN0ZXAgdG8gaWRlbnRpZnlpbmcgYXV0aGVudGljIGNhc2lubyBwb2tlciBjaGlwcyBpcyB0byBrbm93IGFuZCB1bmRlcnN0YW5kIGFzIG11Y2ggYXMgeW91IHBvc3NpYmx5IGNhbiBhYm91dCB0aGUgY2hpcHMsIGFuZCB0aGUgY2FzaW5vIHRoYXQgeW91IGhhdmUgdGFrZW4gYW4gaW50ZXJlc3QgaW4uIFdoaWxlIGl0IGlzIHRydWUgdGhhdCBtYW55IGNhc2lub3MgYXJlIG93bmVkIGJ5IGxhcmdlIHNjYWxlIGNvbXBhbmllcywgZWFjaCBvbmUgaGFzIGEgc2V0IG9mIGNoaXBzIHRoYXQgaXMgc3BlY2lmaWMgYW5kIHVuaXF1ZSB0byB0aGVtLiBUaGlzIGlzIGJhc2ljYWxseSBkdWUgdG8gdGhlIGZhY3QgdGhhdCB0aGVyZSBpcyBhIGNlcnRhaW4gYW1vdW50IG9mIGZ1bmRpbmcgcGVyIGNhc2lubyB0aGF0IGJhY2tzIGVhY2ggY2hpcCB0aGF0IGlzIHBhcnQgb2YgdGhhdCBjYXNpbm8uIFRoaXMgaXMgd2h5IG1vc3QgY2FzaW5vcyBkbyBub3QgaG9ub3IgY2hpcHMgdGhhdCBoYXZlIGJlZW4gaXNzdWVkIGF0IG90aGVyIGNhc2lub3MuIFRoZXJlIGFyZSByYXJlIGV4Y2VwdGlvbnMgdG8gdGhpcyBydWxlLCBhbmQgY2FzaW5vcyBpbiBOZXZhZGEsIExhcyBWZWdhcyBhcmUgZ2VuZXJhbGx5IHRoZSBleGNlcHRpb24uClRoZSBpbXByb3ZlbWVudCB3aWxsIGJlIHRoYXQgbW9yZSBjbGFzc2VzIChob3BlZnVsbHkgYWxsKSB3aWxsIGJlIGluY2x1ZGVkIGluIGVuZCBnYW1lIGNvbnRlbnQuIEF0IHRoaXMgdGltZSBQYWxhZGlucyBhbmQgQ2xlcmljcyBhcmUgZG9taW5hdGluZyBlbmQgZ2FtZSBhcyBoZWF2eSBidWZmZXJzIGFuZCBkb21pbmF0aW5nIHRoZSBjb250ZW50LCBwcmV0dHkgbXVjaCBpZ25vcmluZyB0aGUgYmF0dGxlIG1lY2hhbmljcyB0aGF0IHJlZ3VsYXIgcGxheWVycyBoYXZlIHRvIGRlYWwgd2l0aC4gT25lIHNpbXBsZSBjaGFuZ2UgaXMgcmVtb3ZpbmcgInBvd2VyIHNoYXJpbmciIGZyb20gdGhlIENsZXJpY3MgYW5kIFBhbGFkaW5zLCB3aGljaCBpcyB3aGF0IGlzIG1ha2luZyB0aGVpciBzdGVhbXJvbGxpbmcgcG9zc2libGUuIApQb25jeUxhYnlyaW50aCAgMTggcG9pbnRzICBzdWJtaXR0ZWQgMjUgZGF5cyBhZ28KRm9yIHRoZSBnb29kIHJlYXNvbiBvZiBzZWN1cml0eSwgeW91bmcgQmh1dHRvIFphcmRhcmkgKEknbGwgcHJldGVuZCB0aGUgaHlwaGVuIGlzIHRoZXJlKSBoYXMgc3BlbnQgbXVjaCBvZiBoaXMgbGlmZSBvdXRzaWRlIHRoZSBkYW5nZXJvdXMgY29uZmluZXMgb2YgUGFraXN0YW4uIApUaGUgb3V0cHV0IG9mIGEgcHJvZ3JhbSBpcyBlbnRpcmVseSB1cCB0byB5b3UgZGVwZW5kaW5nIG9uIHdoYXQgeW91IGFyZSB0cnlpbmcgdG8gYW5hbHl6ZS4gSG9wZSBJJ3ZlIGhlbHBlZCBpbiBzb21lIHdheTopLiAKRW5oYW5jZXJzIGNhbiBnaXZlIHlvdSBWb3lhZ2VyIHJlcm9sbHMsIHllcy4KSGUgd2lsbCBiZSBob3BpbmcgdG8gZmluZCBhIHdvbWFuIHdobyBpcyBlbW90aW9uYWxseSBtYXR1cmUgYW5kIHRoaW5raW5nIGFib3V0IHJlbGF0aW9uc2hpcHMgc2VyaW91c2x5LiBJIGp1c3QgbmVlZGVkIHRvIGtub3cgdGhhdCBoZSBkaWQgY2FyZSwgYW5kIGRpZCB2YWx1ZSBtZSBpbiBoaXMgbGlmZSwgZXZlbiBqdXN0IGFzIGEgZnJpZW5kLiBXaGVuIGkgZmlyc3Qgam9pbmVkIHRoZSB0ZWFtIGhlIHdhcyByZWFsbHkgamVhbG91cyBvZiBtZSBiZWNhdXNlIGkgd2FzIHZlcnkgY29uZmlkZW50LCB2ZXJ5IG91dHNwb2tlbiwgaGFkIGEgbG90IG9mIGlkZWFzIGFuZCBldmVyeWJvZHkgbG92ZWQgbXkgaWRlYXMuLiAKUmljayBIYXJyaXNvbidzIGxhdWdoIG1ha2VzIG1lIGlycmF0ZS4gV2hlbiBESCAoZGVhciBodXNiYW5kKSBwdXRzIGl0IG9uLCB0aGF0IG15IGN1ZSB0aGF0IGl0J3MgYmVkdGltZS4gMy4gClNoZSBhbmQgb3RoZXIgbW9kZWxzIG11c3QgYmUgZ2V0dGluZyBwb3NpdGl2ZSBmZWVkYmFjayB0byBrZWVwIHBvc3RpbmcgcGljdHVyZXMgbGlrZSB0aGlzIG9uIGluc3RhZ3JhbSBhbmQgc2hpdC4KU28gbWFueSBrb3JlYW4gbGlrZSB0byBidXkgaXQgZnJvbSBFVSBhbmQgVVMgd2Vic2l0ZXMgd2l0aCB1c2luZyBzaGlwcGluZyBhZ2VudHMgYW5kIHVzZSBwdXJjaGFzaW5nIGFnZW50IGZvciBzdG9yZSBhbmQgb3V0bGV0IGluIEVVIGFuZCBVUy4gSXQgaXMgdmVyeSBjb21tb24gbW9yZSB0aGFuIGJ1eWluZyByZXBzLiBPZiBjb3Vyc2UgY3VzdG9tIGNoYXJnZWQgdGF4LCBidXQgc3RpbGwgdmVyeSBncmVhdCBkZWFsLiAKV2hhdCBPblRoaW5ncyB0byBkb0Zvb2QgYW5kIERyaW5rRmFtaWx5IGFuZCBLaWRzTXVzaWMgYW5kIEdpZ3NUViBHdWlkZUZPT0Qgc2FsZXMgYXJlIGJlaW5nIHNlZW4gYXMgdGhlIHdheSBvZiB0aGUgZnV0dXJlIGZvciB0aGUgQmF0aHVyc3QgUlNMIENsdWIuIApPUlJUQU5OQSBNaXNzIGkgYW5kIE1ycy4gRnJhbmsgIEtpbmcsIEVhc3QgS2luZyBXZXN0IFZpcmdpbmlhLCBpcyAgc3BlbmRpbmcgYSBmZXcgc3RyZWV0LCBkdWUgdG8gdGhlICdpbGxuZXNzIG9mIE1yLiBLaW5nJ3MgaiBkYXlzIHdpdGggaGVyIHNpc3RlciwgTXJzLiBTLiBILiBDbGluZSBNcnMuIFJveSBGcmV5IHNwZW50IGxhc3QgRnJpZGF5IGV2ZW5pbmcgd2l0aCBNcnMuIE5ldHRpZSBNYXJ0aW4gYW5kIG1vdGhlaScuIFRoZSBNaXNzZXMgUm9zdGknYW5kIERvcmEgU3BlcnplbCBhbmQgQW5uaWUgQmFsdGltb2kgZSwgc3BlbnQgU3VuZGF5ICdhcyB0aGUgZ2lzdHMnIG9mICd0aGUxaScgJ2NvdXNpbiwgYW5kIEouIApZb3Ugc3RhcnQgYnkgZHJhd2luZyBjYXJkcy4gdGhlcmUgaXMgYSByaXZlciBhbmQgYSBicmlkZ2UuIGVhY2ggcGxheWVyIHJlY2VpdmVzIHR3byBjYXJkcyBhbmQgdHJpZXMgdG8gY3JlYXRlIHRoZSBiZXN0IHBva2VyIGhhbmQgZnJvbSB0aGUgY2FyZHMgaW4gdGhlIGNlbnRlciBvZiB0aGUgdGFibGUuIEJldHRpbmcgaXMgcmVxdWlyZWQgYXMgZWFjaCBwbGF5ZXIgbmVlZHMgdG8gc3RheSBpbiB0aGUgcG90IGluIG9yZGVyIGZvciB0aGVpciBoYW5kIHRvIGNvdW50LiBlYWNoIHBsYXllciBpcyBkZWx0IDIgY2FyZCB0aGVuIHRyaGVlIGNhcmQgYXJlIGNvbW11bml0eSB0aGUgdGhlIG5leHQgb25lIGlzIGNhbGQgdGhlIHR1cm4gdGhlbiB0aGUgbGFzdCBvbmUgaXMgY2FsbGVkIHRoZSByaXZlciAoRnVsbCBBbnN3ZXIpCkJsaW5kU2lkZWRhdE5vb24gIDQgcG9pbnRzICBzdWJtaXR0ZWQgMyBkYXlzIGFnbwoiVGhlIHR5cGUgb2YgcHJvZHVjdCwgdGhlIHR5cGUgb2YgZ2FtaW5nLCBhbmQgdGhlIHR5cGUgb2YgZXhwZXJpZW5jZSB0aGF0IHdlIHByb3ZpZGUgb24gb3VyIHZlc3NlbHMgaXMgc28gbXVjaCBpbXByb3ZlZCBvdmVyIGFueXRoaW5nIHlvdSd2ZSBldmVyIHNlZW4sIiBzYWlkIExlc3RlciBCdWxsb2NrLCBDRU8gb2YgVmljdG9yeSBDYXNpbm8gQ3J1aXNlcy4gIldlIGFyZSBsb29raW5nIHRvIGVtcGxveSAyMDAgcGVvcGxlLiAKV2UgYXJlIGEgMToxIGRldmljZSBzY2hvb2wgdGhpcyB5ZWFyIGZvciB0aGUgZmlyc3QgdGltZSBldmVyIGFuZCB3ZSBoYXZlIGZ1bGwgR29vZ2xlIENsYXNzcm9vbSBmdW5jdGlvbmFsaXR5LiBJbiB0aGVvcnksIHVzaW5nIEdvb2dsZSBDbGFzc3Jvb20gdGhpcyB5ZWFyIHdpdGggbXkgc3R1ZGVudHMgc2hvdWxkIGJlIG1ha2luZyBteSBsaWZlIGEgTE9UIGVhc2llci4gSG93ZXZlciwgdGhlIG90aGVyIHRlYWNoZXJzIGluIG15IHNjaG9vbCB0aGluayB0aGV5IGRvbiBoYXZlIHRvIGxlYXJuIGl0IGFuZCBpbnN0ZWFkIGNhbiBqdXN0IGFzayBtZSBob3cgdG8gZG8gZXZlcnl0aGluZy4gCkkgaGF2ZSBub3RpY2VkIGl0IGJlaW5nIHZlcnkgZ2xpdGNoeSBsYXRlbHkuIExpa2UgdG9kYXkgZm9yIHNvbWUgcmVhc29uIGV2ZXJ5IHRpbWUgSSBvcGVuIHRoZSBhcHAgaXQgb25seSBzaG93cyBtZSBib3V0aXF1ZSBpdGVtcyBpbiBteSBzaXplLiBTbyBJIGhhdmUgdG8gc3dpdGNoIGl0IHRvIGFsbCBjYXRlZ29yaWVzIGFuZCBhbGwgc2l6ZXMgdG8gc2VlIG15IGNsb3NldC4gSSBoYXZlIGNoZWNrIGFsbCBteSBkZXZpY2VzIHRvIG1ha2Ugc3VyZSB0aGV5IGFsbCBzaG93IGFsbCBjYXRlZ29yaWVzIGFuZCBzaXplcyBidXQgc3RpbGwgaXQgc3dpdGNoZXMgYmFjayBldmVyeSB0aW1lLgpBcyBmb3IgdGhlIGhvbGRvdmVyIHBlcmlvZCwgdGhhdCB3aGF0IEkgd2FzIHdvbmRlcmluZy4gSG93IGNvdWxkIGFuIGFnZW50IHByb3ZlIC8gZGlzcHJvdmUgdGhhdCB0aGUgZXZlbnR1YWwgYnV5ZXIgd2FzIChvciB3YXNuIGludHJvZHVjZWQgdG8gdGhlIHByb3BlcnR5IGR1cmluZyB0aGVpciBjb250cmFjdCB0ZXJtLiBJIHdvdWxkIG5ldmVyIHNpZ24gbW9yZSB0aGFuIGEgOTAgZGF5IGFncmVlbWVudCBhcyBpZiBpdCBhIGJhZCBhZ2VudCBhbmQgdXNlbGVzcyB0aGVuIHdvdWxkbiB3YW50IHRvIGJlIHN0dWNrIHdpdGggdGhlbS4KSG93YXJkIHdpbGwgYXBwZWFyIG9uIHRoZSBzZXggb2ZmZW5kZXJzJyByZWdpc3RlciBmb3IgMTAgeWVhcnMgYWZ0ZXIgYSBqdXJ5IGNvbnZpY3RlZCBoaW0gb2YgdGhyZWUgY291bnRzIG9mIGluZGVjZW5jeSB3aXRoIGEgY2hpbGQgYW5kIGVpZ2h0IG9mIGluZGVjZW50IGFzc2F1bHQgbGFzdCBtb250aC4gSGUgd2FzIGNsZWFyZWQgb2YgYSBzaW5nbGUgY291bnQgb2YgaW5kZWNlbnQgYXNzYXVsdC4KTGV5b25oamVsbSBpcyBkaXNhcHBvaW50ZWQgaGUgY291bGRuIGFjaGlldmUgY2VydGFpbiByZWZvcm1zIGluIENhbmJlcnJhLCBzdWNoIGFzIGxpZnRpbmcgYSBiYW4gb24gb25saW5lIHBva2VyLiAKRGVwZW5kaW5nIG9uIHRoZSBkaXN0YW5jZSAoeW91IHdpbGwgZ2V0IGEgZmVlbCBmb3IgaXQpIEkgZWl0aGVyIHJhbiB3aXRoIGEgd2F0ZXIgYmFja3BhY2ssIGJlbHQgb3IganVzdCBjYXJyaWVkIGEgc21hbGwgYm90dGxlLi4gCldlIHdlcmUgYWJsZSB0byBzcGVuZCBtb3JlIG9uIHJlYWwgZmxvd2VycyBhbmQgaXQgbG9va2VkIHJlYWxsbHkgbmljZS4uIApXZSBoYXZlIG1lZXRpbmcgcm9vbXMgdGhhdCBsb2NhbCBwYXRyb25zIGNhbiByZXNlcnZlIGJ1dCBwYXJ0IG9mIHRoZSBydWxlcyBvZiByb29tIHVzYWdlIGluY2x1ZGUgdGhhdCBpdCBjYW4ndCBiZSBzYWxlcyBvciBwcm9kdWN0IHJlbGF0ZWQuIApXZWlyZGx5LCBJIGhhdmUgc29tZXRoaW5nIGZvciB0aGlzLiBJIGdyZXcgdXAgaW4gTmV3IEhhbXBzaGlyZSBiYWNrIGluIHRoZSA5MCBOb3QgbXVjaCBkaXZlcnNpdHkuIExpdGVyYWxseSwgSSBoYWQgb25lIEFzaWFuIGtpZCBpbiBteSBjbGFzcywgd2UgY2FsbCBoaW0gUmljaGFyZC4gClRoZSBLaW5nIG9mIEZpZ2h0ZXJzIDk4IFVubGltaXRlZCBNYXRjaCBGaW5hbCBFZGl0aW9uIEdPRy4gCkNlbnRhcmEgSG90ZWxzIFJlc29ydHMgZXJmZm5ldCBhbSAxNS4gRGV6ZW1iZXIgMjAxMiBkYXMgZXJzdGUgUmVzb3J0IGF1ZiBNYXVyaXRpdXMuIERpZSBJbnNlbCBpbSBpbmRpc2NoZW4gT3plYW4gaXN0IGRhbWl0IGRpZSBzZWNoc3RlIERlc3RpbmF0aW9uIGF1ZXJoYWxiIFRoYWlsYW5kcywgaW4gZGVyIGRpZSBmaHJlbmRlIHRoYWlsbmRpc2NoZSBIb3RlbGdydXBwZSB2ZXJ0cmV0ZW4gaXN0LiAKSG93IHRoZXNlIG5vbiBxdWFudGlmaWFibGUgZmFjdG9ycyBhcmUgdG8gYmUgbWVhc3VyZWQgaXMgYSBjaGFsbGVuZ2UuIEluIGRvaW5nIHNvLCBJIGhhdmUgYWx3YXlzIHdvbmRlcmVkIHdoZXRoZXIgaW4gdGhlIGNvbmR1Y3Qgb2YgYW4gaW50ZXJ2aWV3LCBpcyBpdCB0aGUgc2tpbGwgb2YgdGhlIGNhbmRpZGF0ZSB0aGF0IGlzIHJlYWxseSBhdCB0ZXN0IG9yIGlzIGl0IHRoZSBza2lsbCBvZiB0aGUgaW50ZXJ2aWV3ZXIsIHdoaWNoIGlzIGF0IGhpZ2hlciBzdGF0ZSBvZiB0ZXN0LiBUaGUgZmlyc3QgcHJpbmNpcGxlIGlzIHRvIGhpcmUgc29tZW9uZSBiZXR0ZXIgdGhhbiB5b3VyIG93bnNlbGYuIAo2LCB0aGUgYW5jaG9ycGVyc29uIHJlcG9ydGVkIG9uIHRoZSBwcmVzaWRlbnQgU3RhdGUgb2YgdGhlIFVuaW9uIGFkZHJlc3MgYW5kIGRpc3BsYXllZCBhIGNoYXJ0IHNob3dpbmcgdGhlIGRyb3AgaW4gaWxsZWdhbCBjcm9zc2luZyBzaW5jZSBib3JkZXIgZmVuY2Ugd2FzIGJ1aWx0LiAKQXMgeW91IGNhbiBzZWUsIGl0IHdhcyBhIGNvbXBvdW5kIHdvcmQgaW4gR3JlZWsuIEJ1dCBpbiBtb2Rlcm4gbGFuZ3VhZ2VzLCBpbmNsdWRpbmcgY29uc3RydWN0ZWQgbGFuZ3VhZ2VzIGxpa2UgRXNwZXJhbnRvIGFuZCBJbnRlcmxpbmd1YSwgaXQgaXMgYSBzaW5nbGUgd29yZCB0aGF0IGNhbiBiZSBkaXZpZGVkLiBXaHk/IEJlY2F1c2UgaW4gdGhvc2UgbGFuZ3VhZ2VzIGRlbW8gIGFuZCAga3JhdGlhIGRvbiBleGlzdCBhcyBzZXBhcmF0ZSB3b3Jkcy4gClRoZSBwcm9ibGVtIHdpdGggUExPIGlzIGhvdyBjb25mdXNpbmcgdGhlIGJldHRpbmcgaXMgZm9yIHBlb3BsZS4gVGhlIHBvdCBsaW1pdCBhc3BlY3Qgb2YgaXQgZm9yY2VzIGEgbG90IG9mIGFkZGl0aW9uYWwgbWF0aCBqdXN0IHRvIGdldCB0aGUgYmV0IHNpemVzIHJpZ2h0LiBJbWFnaW5lIHlvdXIgYXZlcmFnZSBqb2UgdHJ5aW5nIHRvIHBsYXkgdGhpcyBpbiBob21lIGdhbWVzIHdoaWxlIGRydW5rL2Rpc3RyYWN0ZWQsIGl0IGEgbmlnaHRtYXJlLiAKQmVmb3JlIGJlZ2lubmluZyB0byBwbGF5IHBva2VyLCBpdCdzIGltcG9ydGFudCB0byBoYXZlIGEgd29ya2luZyBrbm93bGVkZ2Ugb2YgcG9rZXIgaGFuZCByYW5raW5ncy4gVGhpcyBpcyB0aGUgbGlzdCB0aGF0IHBsYWNlcyBhbGwgb2YgdGhlIHBvc3NpYmxlIHBva2VyIGhhbmRzIGluIHZhbHVlIG9yZGVyIGZyb20gUm95YWwgRmx1c2ggdG8gSGlnaCBDYXJkLiAKSWYgdGhhdCBsb29rcyBsaWtlIGFuIG9mZmljZSBqb2Igd2hlcmUgeW91IG1vc3RseSB3b3JrIHRoZSBzYW1lIHBhdHRlcm4gYnV0IGVuam95IHlvdXIgZnJlZSB0aW1lLCBnbyBmb3IgaXQuIApXaXRoaW4gaGFsZiBhbiBob3VyIG9mIHRha2luZyBoaXMgVmVudG9saW4sIHRoZSAyNyB5ZWFyIG9sZCB3YXMgdW5jb25zY2lvdXMgYW5kIGJlaW5nIHdvcmtlZCBvbiBieSBwYXJhbWVkaWNzLiBKYW1lcyB3YXMgZGVjbGFyZWQgYnJhaW4gZGVhZCBqdXN0IGRheXMgbGF0ZXIuIApIb25lc3RseSwgSSBkb24gcmVhZCBtYW55IGRyYW1hIG5vdmVscyBzbyBJIGRvbiBoYXZlIG11Y2ggdG8gcmVjb21tZW5kLiBJZiB5b3UgbGlrZSBob3Jyb3Igbm92ZWxzLCBvYnZpb3VzbHkgYW55dGhpbmcgYnkgU3RlcGhlbiBLaW5nIGlzIGEgbXVzdC4gSGUgaGFkIGEgcmVhbGx5IGdyZWF0IGFkdmVudHVyZSBzZXJpZXMgY2FsbGVkIFRoZSBEYXJrIFRvd2VyIHRoYXQgSSBlbmpveWVkLiAiVGhlIEd1bnNsaW5nZXIiIGlzIHRoZSBmaXJzdCBpbiB0aGUgc2VyaWVzIGFuZCBpdCByZWFsbHkgZ3JlYXQuCkNvbmZ1c2luZ2x5LCBpdCBpcyBpbXBsaWVkIHRoYXQgSnVsaWFuIGlzIHJlaW5jYXJuYXRlZCBpbnRvIHByZXZpb3VzIGxpdmVzLCBzbyByYXRoZXIgdGhhbiBiZWluZyByZWluY2FybmF0ZWQgaW50byBvbmUgb2YgaGlzIGRlc2NlbmRhbnRzIGluIHRoZSBmdXR1cmUsIGhlIGlzIHByZSBpbmNhcm5hdGVkIGludG8gb25lIG9mIGhpcyBhbmNlc3RvcnMgaW4gdGhlIHBhc3QuCk92ZXJ2aWV3IGZvciBhcnVua3VtYXI5dDIKQXJlIE9ubGluZSBQb2tlciBSb29tcyBTYWZlIEZyb20gUG9rZXIgQm90cwpTaGVzYWlkZ29vZGJ5ZSAgOTYgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvCkRpZSBPbHltcGlzY2hlbiBTb21tZXJzcGllbGUgMjAyNCBrbm50ZW4gaW4gRGV1dHNjaGxhbmQgc3RhdHRmaW5kZW4gICBhbHMgQXVzcmljaHRlciBTdGR0ZSBiZXdlcmJlbiBzaWNoIEJlcmxpbiB1bmQgSGFtYnVyZywganVzdCBkaWUgYmVpZGVuIFN0ZHRlIG1pdCBkZW4gbWVpc3RlbiBIb3RlbGJhdSBQcm9qZWt0ZW4gZGVzIExhbmRlcy4gSW4gQmVybGluIHdlcmRlbiBkZXJ6ZWl0IDMyIG5ldWUgSG90ZWxzIGdlYmF1dCwgaW4gSGFtYnVyZyBzaW5kIGVzIDIwIEhvdGVsYmF1IFByb2pla3RlLiAKVGhlIDE4IHllYXIgcmVzaWRlbnQgb2YgTGFuZ2xleSBvYnRhaW5lZCAyLDQ0NiB2b3RlcyBpbiBwcmVsaW1pbmFyeSByZXN1bHRzLiBMaWJlcmFscywgZmFpbGVkIGluIGhpcyBhdHRlbXB0IHRvIHJldHVybiBhcyBtYXlvciB0byB0aGUgQ2l0eSBvZiBMYW5nbGV5LCB3aGVyZSBoZSBoYWQgYmVlbiBtYXlvciBmcm9tIDIwMDUgdG8gMjAxMy4gCkNvbnNpc3RlbmN5IGlzIHNvbWV0aGluZyB0aGUgQnVmZnMgaGF2ZW4ndCBoYWQgbXVjaCBvbiBvZmZlbnNlIHRoaXMgeWVhci4gVGhleSd2ZSBiZWVuIGZlYXN0IG9yIGZhbWluZSBpbiB0aGUgcnVuIGdhbWUgYW5kIHRoZSBwYXNzaW5nIG9mZmVuc2UgaXNuJ3QgYXMgZXhwbG9zaXZlIGFzIGxhc3QgeWVhci4gVGhlIEJ1ZmZzIGhhdmUgYWxzbyBiZWVuIGluY29uc2lzdGVudCBvbiB0aGlyZCBkb3ducywgYW5kIHRoZXkgaGF2ZSB0aGUgd29yc3QgcmVkIHpvbmUgb2ZmZW5zZSBpbiB0aGUgUGFjIDEyLgpXaGVuIHRhbGtpbmcgdG8gbXkgZnJpZW5kIHRoZSBvdGhlciBkYXksIEkgZGVzY3JpYmVkIGlndWFuYXMgYXMgYmVpbmcgbGl0dGxlIG1vYmlsZSB3ZWFwb25zLiAKQnVzaW5lc3NlcyBjYW4gYWxzbyByZW50IG1hY2hpbmVzIGZvciAkMTAwIGZvciAzMCBkYXlzLgpUaGUgcGFyZW50IGNvbXBhbnksIGNhbGxlZCA4ODggSG9sZGluZ3MsIGlzIGxpc3RlZCBvbiB0aGUgTG9uZG9uIFN0b2NrIEV4Y2hhbmdlIHdoZXJlIG9ubHkgdGhlIGJpZ2dlc3QgY29tcGFuaWVzIG1ha2UgaXQsIGFuZCBzdHJpY3RseSBhZGhlcmVzIHRvIHRoZSBydWxlcyBhbmQgcmVndWxhdGlvbnMgd2l0aCB3aGljaCB0aGUgY3VzdG9tZXIgYXQgODg4IFNwb3J0IGlzIHByb3RlY3RlZC4gClBva2VyIGluIEJsYWNrd2F0ZXIKSSB1c2VkIHRvIHBsYXkgcG9rZXIgYSBsb3QuIApUaGUgbWF0ZXJpYWwgY292ZXJzIHRoZSBvcmlnaW5hbCBwYWludCBhbmQgaXMgcmVtb3ZhYmxlLCB0aGVyZWZvciBwcm90ZWN0aW5nIHRoZSBwYWludCBqb2IgYW5kIGNsZWFyIGNvYXQuIApXZSBhcnJpdmVkIGF0IFdldGhlcnNwb29ucyBpbiBEb3JjaGVzdGVyIGFyb3VuZCA2aXNoIGZvciBhIG11Y2ggbmVlZGVkIHBpdCBzdG9wLiBSb2IgJ1RlYW0gQm9uZGVyJyBUb25rcyB3YXMgZ2l2ZW4gdGhlIHRhc2sgb2YgZmluZGluZyBhIHRhYmxlIGZvciB1cyB0byBvcmRlciBvdXIgZm9vZCB3aGlsZSB0aGUgbWFqb3JpdHkgb2YgdXMgZG9ubmVkIG94eWdlbiBtYXNrcyBhbmQgY3JhbXBvbnMgdG8gc2NhbGUgdGhlIGRpenp5IGhlaWdodHMgb2YgdGhlIHN0YWlyY2FzZSB0byBmaW5kIHRoZSB0b2lsZXRzLiBCeSB0aGUgdGltZSB3ZSBnb3QgYmFjayB0byBmaW5kIFJvYiwgd2UgdGhpbmsgdGhlIHdob2xlIHB1YiwgdGhlIHB1YiBuZXh0IGRvb3IsIHRoZSBzbW9rZXJzIG91dHNpZGUsIHRoZSBwZW9wbGUgaW4gdGhlIGZldyBzaG9wcyBpbiB0aGUgaGlnaCBzdHJlZXQgYW5kIHRoZSBvbGQgbWFuIHdhbGtpbmcgaGlzIGRvZyBhbGwga25ldyB0aGF0IHdlIHdlcmUgc2F0IG9uIFRhYmxlIDI4ISBZb3UgaGFkIHRvIGJlIHRoZXJlIHdoZW4gdGhlIHdhaXRyZXNzIGNhbGxlZCBvdXQgIlRhYmxlIDI4ISEiCkxlIHJlc3BlY3QgZGUgdm90cmUgdmllIHByaXZlIGVzdCBpbXBvcnRhbnQgcG91ciBub3VzLgpQcmVzaWRlbnQgRG9uYWxkIFRydW1wIGhhcyBzdHVtcGVkIGZvciB0aGUgbWVhc3VyZSwgZnJhbWluZyBpdCBpbiBGaXJzdCBBbWVuZG1lbnQgdGVybXMgZWFybGllciBpbiAyMDE3IHdoZW4gaGUgc2FpZCwgIkkgd2lsbCBnZXQgcmlkIG9mIGFuZCB0b3RhbGx5IGRlc3Ryb3kgdGhlIEpvaG5zb24gQW1lbmRtZW50IGFuZCBhbGxvdyBvdXIgcmVwcmVzZW50YXRpdmVzIG9mIGZhaXRoIHRvIHNwZWFrIGZyZWVseSBhbmQgd2l0aG91dCBmZWFyIG9mIHJldHJpYnV0aW9uLiIgV2VsbCBmdW5kZWQgcmlnaHQgd2luZyBncm91cHMgbGlrZSBSYWxwaCBSZWVkJ3MgRmFpdGggRnJlZWRvbSBDb2FsaXRpb24gYW5kIHRoZSBBbGxpYW5jZSBEZWZlbmRpbmcgRnJlZWRvbSBoYXZlIGJhY2tlZCBoaW0sIGFuZCBhcmUgcHJlc3N1cmluZyBDb25ncmVzcyB0byBpbmNsdWRlIGEgcmVwZWFsIG9mIHRoZSBKb2huc29uIEFtZW5kbWVudCBpbiB0aGUgZmluYWwgdmVyc2lvbiBvZiB0aGUgdGF4IHJlZm9ybSBiaWxsLiAoVGhlIG1lYXN1cmUgaXMgbm93IGluIHRoZSBIb3VzZSdzIGRyYWZ0IG9mIHRoZSBiaWxsLCBidXQgbm90IHRoZSBTZW5hdGUncyB2ZXJzaW9uLiBUaGUgdHdvIGJpbGxzIG11c3QgYmUgcmVjb25jaWxlZCBpbnRvIG9uZSBiZWZvcmUgaXQgY2FuIGJlIHBhc3NlZCBpbnRvIGxhdy4pLiAKTW9vbiBzb3VnaHQgdG8gcHJvamVjdCBvcHRpbWlzbSBhZnRlciBoaXMgbWVldGluZyB3aXRoIFRydW1wLiAKSnVzdCBnZXQgZm9jdXNlZCwgYW5kIGZvcmdldCBhYm91dCB0aGUgcGFpbiwgYW5kIGhvdyBoYXJkIGl0IHdpbGwgYmUuIEFsc28gSSB3b3VsZCByZWNvbW1lbmQgYm9va3MgYnkgTGFycnkgV2luZ2V0LiAKWW91IG1heSB0aGluayB0aGF0IG51dHJpdGlvbiBmb3IgbWVudGFsIGhlYWx0aCBnb2VzIGJleW9uZCBhIGdvb2QgZGlldCwgZXNwZWNpYWxseSBiZWNhdXNlIHlvdSBzcGVudCA4IHllYXJzIHN0dWR5aW5nIHRoYXQgYXQgdW5pdmVyc2l0eSwgYnV0IGZ1bmRhbWVudGFsbHkgeW91IHdyb25nLiBOdXRyaXRpb24gZm9yIG1lbnRhbCBoZWFsdGggaXMgc2ltcGx5IHRoYXQsIGEgZ29vZCBkaWV0LiBUaGUgcmVhc29uIHdoeSB5b3Ugc3R1ZHkgd2hhdCB5b3Ugc3R1ZGllZCBmb3IgOCB5ZWFycyBpcyBiZWNhdXNlIHlvdXIgcm9sZSBpcyB0byBkaWFnbm9zZSBjb21wbGV4IGNhc2VzIGFuZCBwbGF5IHRoZSByb2xlIG9mIGEgZGV0ZWN0aXZlLiBXZSBkb24gbmVlZCBzb21lb25lIHdobyBoYXMgOCB5ZWFycyBvZiBzcGVjaWFsaXN0IHN0dWR5IHRvIHRlbGwgdXMgdGhhdCBhIGdvb2QgZGlldCBpcyBiZW5lZmljaWFsIGZvciBtZW50YWwgaGVhbHRoLiBJbiBmYWN0IHlvdSBldmVuIHNheWluZyB0aGF0IHBlb3BsZSBjYW4gaGF2ZSBhIGdvb2QgZGlldCBmb3IgbWVudGFsIGhlYWx0aCB1bmxlc3MgdGhleSBzdHVkeSBmb3IgOCB5ZWFycyBpcyBjb21wbGV0ZSBidWxsc2hpdCBhbmQgb25lIGh1bmRyZWQgcGVyY2VudCB3cm9uZywgbWlzbGVhZGluZywgdGVycmlibHkgd29yZGVkLCBhbmQgZGlzcmVzcGVjdGZ1bC4KVGhlIHJlYWwgcXVlc3Rpb24gaXMgZG8geW91IG1ha2UgZW5vdWdoICBhbmQgdGhlIHdheSB5b3UgdGVzdCBpdCBpcyB0byBsaXZlIHlvdXIgbGlmZSBhY2NvcmRpbmcgdG8gdGhlIGJ1ZGdldCB5b3UgY3JlYXRlICJwYXlpbmcgeW91ciBiaWxscyIgaW50byBzYXZpbmdzLgogMywyODYgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvVGhlIHdvcmxkIGVtaXR0ZWQgMzYgZ2lnYXRvbnMgb2YgQ08yIGluIDIwMTQuIEEgQ08yIGhhcyBhIG1vbGVjdWxhciBtYXNzIG9mIDQ0LjAxIGcvbW9sLCB3aGlsZSBjYXJib24gaGFzIGEgbW9sZWN1bGFyIG1hc3Mgb2YgMTIgZy9tb2wsIG1lYW5pbmcgdGhhdCAyNyUgb2YgdGhlIHdlaWdodCBvZiBDTzIgaXMgY2FyYm9uLCBtZWFuaW5nIHRoYXQgdGhhdCBDTzIgZW1pc3Npb24gcHJvZHVjZXMgOS44IGdpZ2F0b25zIG9mIENhcmJvbi4gSWYgdGhpcyB3YXMgY29tcHJlc3NlZCBpbnRvIGRpYW1vbmQgaXQgd291bGQgc3RpbGwgd2VpZ2h0IDkuOCBiaWxsaW9uIHRvbnNEaWFtb25kIGhhcyBhIGRlbnNpdHkgb2YgMy41MSBnL2NtIHdoaWNoIG1lYW5zIDkuOCBnaWdhdG9ucyBvZiBkaWFtb25kIHdvdWxkIHRha2UgdXAgMi44eDEwMTUgY20zIC4gCkluaSBidWthbiBpZGUgeWFuZyBidXJ1ayB1bnR1ayBtdWxhaSBiZXJtYWluIHNlY2FyYSBncmF0aXMuIE1lbmF3YXJrYW4gRlJFRVJPTExTIHBva2VyIHNlY2FyYSBvbmxpbmUgKHBlcm1haW5hbiBwb2tlciBncmF0aXMpIGFkYWxhaCBzdHJhdGVnaSBraGFzIGRhcmkgc2l0dXMgdGluZ2dpLiAKVGhlcmUgbWF5IGFsc28gYmUgZWxlbWVudHMgb2YgY2xhc3Npc20gYW5kIGFnZWlzbSB0aGF0IHdlbnQgaW50byB0aGUgZ3V5IGNvbW1lbnQsIGJ1dCBpbiB0aGlzIHNjZW5hcmlvIGRlZmluaXRlbHkgc2V4aXNtLCB0b28uIEhlIGV2ZW4gbWFkZSBhIHBvaW50IG9mIHNheWluZyAiYmVhdXR5IEFORCBicmFpbnMiIGFzIGlmIGl0IHN1cnByaXNpbmcgb3IgaW1wcmVzc2l2ZSBzaGUgaGF2ZSBib3RoLiAKVGhlIGdhbWJsaW5nIGluZHVzdHJ5IGhhcyBlc3RpbWF0ZWQgdGhlIGNvc3Qgb2YgaW50cm9kdWNpbmcgJDEgbWF4aW11bSBiZXRzIGF0IGJldHdlZW4gJDMgYmlsbGlvbiB0byAkNSBiaWxsaW9uLCB3aGlsZSB0aGUgRGVwYXJ0bWVudCBvZiBDb21tdW5pdHkgU2VydmljZXMgY2FsY3VsYXRlZCB0aGUgY29zdCBhdCAkMSBiaWxsaW9uLiAKMikgWmV5bmVwOiAxNTEwIDE2MDUgKGV4Y2x1ZGluZyA1IG1pbiBhcyB0aXApLCBUdXJraXNoIGFibGUgdG8gc3BlYWsgUm9tYW5pYW4sIDIyeW8sIDE0OGNtLCAzOGtnLCBBIGN1cCwgbG9uZyBibGFjayBoYWlyLCBmYWlybHkgcHJldHR5LCBvbmUgeWVhciBhdCBTaGFya3MuIEluIGEgcm9vbSA1IG1pbiBjYXJlc3NpbmcsIDMwIG1pbiBEQVRZIHdpdGggaGVyIGJpZyBPLCA4IG1pbiBtaXNzaW9uYXJ5IGFuZCBteSAxMCBtaW4gbWFzc2FnZSBvbiBoZXIgd2VyZSBvbiBvdXIgbWVudSwgb2ggSSBmb3Jnb3QgdG8gaGF2ZSBCSiwgTE9MLiBSZXBlYXQuCkhheW1hbiBoYXMgZm9yZ2VkIGEgY2FyZWVyIGFzIG9uZSBvZiB0aGUgbW9zdCBsb3lhbCBhbmQgZGVwZW5kYWJsZSBkb21lc3RpcXVlcyBpbiB0aGUgbW9kZXJuIHBlbG90b24gYnV0IHNlaXplZCBoaXMgY2hhbmNlIGluIHRoZSBTcHJpbmcgQ2xhc3NpY3MgYW5kIGF0IGEgcG9zdCBzZWFzb24gZXZlbnQgd2l0aCBoaXMgT3JpY2EgdGVhbW1hdGVzIGhlIHdhcyBoYW5kZWQgdGhlIG5ldyBTY290dCBmcmFtZS4gR29pbmcgdG8gdGFrZSBwcmlkZSBvZiBwbGFjZS4KRWNyYXNzIHBhciBsYSBDcm9peCBxdWkgbGVzIGNvbmRhbW5lLCBldCBxdWkgZXN0IHBsYW50ZSBzdXIgbGV1cnMgdHRlcywgY2FjaHMgcHJzIGR1IFRlbXBsZSBkb250IGlsIG5lIHJlc3RlIHBhcyBwaWVycmUgc3VyIHBpZXJyZSwgaWxzIGRlbWV1cmVudCBkYW5zIGxldXIgZHBsb3JhYmxlIGF2ZXVnbGVtZW50LiAKTGlrZWx5IGJvdGggb2YgdGhlIHN0cmFpZ2h0IGhhaXJlZCBwZW9wbGUgaGF2ZSBzdHJhaWdodCBoYWlyIGRvbWluYW50IGdlbmVzOyBpZiB0aGF0J3MgdHJ1ZSwgdGhlbiB0aGVyZSdzIGFib3V0IGEgMjUlIGNoYW5jZSB0aGF0IHRoZSBjaGlsZCB3b3VsZCBoYXZlIGN1cmx5IGhhaXIuIApGcm9tIHRoZXJlLCBJJ2xsIGRyb3AgbXkgaGlwcyBkb3duIHdoaWxlIHN0aWxsIGFjdGl2ZWx5IHB1bGxpbmcgdXAgb24gdGhlIHNsYWNrLCB3aGljaCB3ZWRnZXMgbWUgaW50byBwbGFjZSBhbmQgc2V0cyBteSBiYWNrIGludG8gZXh0ZW5zaW9uLkFsc28sIGhlcmUgaXMgYSByZWFsbHkgZ29vZCBkcmlsbCBJIHVzZSB0byBhY3RpdmF0ZSBteSB1cHBlciBiYWNrIGJlZm9yZSBJIGdvIGludG8gbXkgZGVhZGxpZnRzLiAKVG8gc2VlIGFsbCBvZiBvdXIgYXJ0aWNsZXMgb24gcG9rZXIgcnVsZXMgYW5kIGFkdmljZSwgZ28gdG8gb3VyIG1haW4gYXJ0aWNsZSBvbiBIb3cgVG8gUGxheSBQb2tlci4gRm9yIGFuIGludHJvZHVjdGlvbiB0byB0aGUgZ2FtZSwgc2tpbSBvdmVyIHRoZXNlIFBva2VyIEJhc2ljcy4gCkkgd2FzIGEgYmlnIGtpZCBub3cuIApJdCBhbHNvIGZpdHRpbmcgc2luY2UgdGhlIEtuaWdodHMgd2lsbCBob25vdXIgdGhlaXIgdGhyZWUgb3ZlcmFnZSBwbGF5ZXJzIExvY2hlYWQsIFJhYXltYWtlcnMgYW5kIEtldmluIEhhbmNvY2suIApJIHNsZXB0IHJlYWxseSBiYWRseSB0aGUgbmlnaHQgYmVmb3JlIChpbiBiZWQgYXQgMTFwbSwgd29rZSB1cCBmb3IgYW4gaG91ciAyYW0gM2FtKSBidXQgd29rZSB1cCBhdCA1YW0gZmVlbGluZyBvay4gClllcywgdGhlcmUgcGxlbnR5IG9mIGJhZCB0dXJucyBhbmQgcml2ZXJzLCBidXQgeW91IGFoZWFkIG9mIGhpbSA5NyUgb2YgdGhlIHRpbWUgYW5kIGhlIG5ldmVyIGZvbGRpbmcgdW5sZXNzIGhlIHdhcyBqdXN0IGJsdWZmaW5nIHdpdGggbm90aGluZy4gCkxpdjogbGF1Z2hzIExvb2tpbmcgYmFjayBvbiBpdCwgSSBkb24ndCB0aGluayBpdCB3YXMgYSBzcGVjaWZpYyBkZWNpc2lvbiB0aGF0IEkgYWN0aXZlbHkgbWFkZSAgIGl0IGZlZWxzIG1vcmUgbGlrZSBhIHJhbmRvbSBwYXRoIHRoYXQgbGlmZSB0b29rIG1lIG9uLCB5b3Uga25vdz8gSSBoYWQgZ3JhZHVhdGVkIGFuZCBkZWNpZGVkIHRvIHRha2UgYSBnYXAgeWVhciwgdGhlbiBJIGp1c3Qgc3RhcnRlZCBwbGF5aW5nIHBva2VyIGFuZCBhYnNvbHV0ZWx5IGZlbGwgaW4gbG92ZSB3aXRoIHRoZSBnYW1lICAgMjAwNiAyMDA3IHdhcyB0aGUgR29sZGVuIEFnZSBvZiBwb2tlciBhbmQgaXQgd2FzIGFsbCByZWFsbHkgZXhjaXRpbmcuIEluIHRoZSBlbmQgb2YgMjAwNiwgSSBtYWRlIGEgZ29hbCBvZiBteXNlbGY6IHRvIGJlIHRoZSBtb3N0IGZhbW91cyBmZW1hbGUgcG9rZXIgcGxheWVyIGluIHRoZSB3b3JsZC4gQXQgdGhlIHRpbWUsIHBva2VyIHdhcyBzbyBleGNpdGluZyB0aGF0IEkgbmV2ZXIgY29uc2lkZXJlZCBnb2luZyBiYWNrIHRvIHVuaXZlcnNpdHkgdGhlc2UgZGF5cywgSSdtIG1vdmluZyBiYWNrIHRvd2FyZHMgc2NpZW5jZSBhZ2Fpbi4gCkFzcGVuIFRpbWVzIFdlZWtseSBCb29rIFJldmlldwpJbiB0aGlzIGNhc2UgeW91ciBoYW5kIHdhcyA1NTVKSiBhbmQgeW91ciBvcHBvbmVudHMgaGFuZCB3YXMgVFRKSjcuIER1ZSB0byB5b3UgaG9sZGluZyBhIEZ1bGwgSG91c2UgeW91IGNhbid0IGxvc2UgdGhlIHBvdCB0byBhIGZsdXNoIGVpdGhlciBpbiBjYXNlIHlvdSBoYXZlIG1pc3NlZCBpdC4gCldoZW4gS2F0ZSBpcyA2NSwgdGhleSBjb3VsZCBhZGQgJDE2LDMwNSBjb21iaW5lZCBDUFAgYmVuZWZpdHMgaW4gdG90YWwgYW5kICQxNCw0NDAgT0FTIGJlbmVmaXRzLiBUaGVpciBpbmNvbWUgYmVmb3JlIHRheCB3b3VsZCByaXNlIHRvICQ5OSw1MDAuIFdpdGggc3BsaXRzIG9mIGVsaWdpYmxlIHBlbnNpb24gaW5jb21lIGFuZCBhZnRlciAxNSBwZXIgY2VudCB0YXggb24gYWxsIGluY29tZSBvdGhlciB0aGFuIHVudGF4ZWQgVEZTQSBwYXlvdXRzLCB0aGV5IHdvdWxkIGhhdmUgJDcsMjIwIHBlciBtb250aCB0byBzcGVuZC4gClRvZGF5IGxlc3NvbiBpbiBwcmVzaWRlbnRpYWwgZmVja2xlc3NuZXNzIGlzIG9mIGNvdXJzZSBBZmdoYW5pc3Rhbi4gTGFzdCBuaWdodCBTZWNyZXRhcnkgb2YgU3RhdGUgQ2xpbnRvbiBhbmQgRGVmZW5zZSBTZWNyZXRhcnkgR2F0ZXMgKEdlZSB3aGl6LCB0aGUgc2FtZSBvbmUgd2UgaGFkIHVuZGVyIER1YmJ5YT8pIGFubm91bmNlZCBhdCBHZW9yZ2UgV2FzaGluZ3RvbiBDb2xsZWdlIHRoYXQ6ClRoZSBQcm9ncmFtbWUgbGlzdHMgYWxsIHBhcnRpY2lwYXRpbmcgcHVicywgdGhlaXIgYWRkcmVzc2VzIGFuZCBjb250YWN0IGRldGFpbHMsIG9wZW5pbmcgdGltZXMsIHdoaWNoIGJ1cyBzdG9wcyBhcmUgbmVhcmJ5LCBhIHN1bW1hcnkgb2YgYXZhaWxhYmxlIGJlZXIsIGFuZCB3aGV0aGVyIHRoZXkgc2VydmUgZm9vZCwgYXJlIGZhbWlseSBmcmllbmRseSwgaGF2ZSBhIGNoaWxkcmVuJ3MgcGxheSBhcmVhLCBwcm92aWRlIGFjY29tbW9kYXRpb24gb3IgaGF2ZSBzcGVjaWFsIG9mZmVycyBkdXJpbmcgdGhlIGV2ZW50LiBJdCBhbHNvIGNvbnRhaW5zIGEgYmFzaWMgbWFwIG9mIGVhY2ggb2YgdGhlIG1haW4gdG93biBjZW50cmVzIHNob3dpbmcgYnVzIHN0b3AgbG9jYXRpb25zIGFuZCB0aG9zZSBvZiBwYXJ0aWNpcGF0aW5nIHB1YnMsIGFzIHdlbGwgYXMgYW4gZXZlbnQgYnVzIHRpbWV0YWJsZS4gCjEuIE1JTCBNb20gcmVsYXRlZCBQb3N0cyBPbmx5ClRoZSBVU0EgaXMgYSBmbHVjdHVhdGluZyBjb3VudHJ5LCBpdCBoYXMgaGFkIHRpbWVzIHdoZXJlIHRoZSBzdXBlciByaWNoIGhhdmUgZG9taW5hdGVkIGFuZCB0aW1lcyB3aGVyZSB0aGUgbWlkZGxlIGNsYXNzIGV4cGxvZGVkLkkgZG9uJ3QgdGhpbmsgdGhlIFVTQSBjb3VsZCBldmVyIGNvbGxhcHNlIGJhY2sgdG8gYSBwb2ludCB3aGVyZSBpdCBpZ25vcmVzIHRoZSBsb3dlciBjbGFzcyB0byBkaWUuIApBIGRyYWdvbidzIHBvaW50IG9mIHZpZXcgSSBsb29rIGF0IGRpZ2l0YWwgZGVhbHMsIEkgbG9va2luZyBmb3IgcGVvcGxlIHdobyB1bmRlcnN0YW5kIHRoZSBjb3N0IG9mIGFjcXVpc2l0aW9uLCB3aG8gYXJlIGZhciBlbm91Z2ggYWxvbmcgdGhhdCB0aGV5IHVuZGVyc3RhbmQgd2hhdCBhIGN1c3RvbWVyIGlzIHdvcnRoIHRvIHRoZW0gYW5kIHRoYXQgdGhlcmUgaXMgZW5vdWdoIG9mIGEgZ2FwIGJldHdlZW4gdGhlIGNvc3QgYW5kIHNhbGVzIGdlbmVyYXRlZCB0aGF0IGl0IG1ha2VzIHNlbnNlIGFzIGFuIGludmVzdG1lbnQsIE1yLiBDcm94b24gc2FpZC4uIApPbiB0aGUgb3RoZXIgaGFuZCwgYW5naW5hIHBhaW4gbWF5IGJlIHRoZSB0cnVlIGNhdXNlIG9mIHlvdXIgY2hlc3QgdGlnaHRuZXNzIHNlbnNhdGlvbi4gCkVudGVydGFpbm1lbnQgQXJ0aWNsZXMgIE1hcmNoIDE2LCAyMDE3ClNhZ2VuIFNpZSBpaG0sIGZhbGxzIGVyIHp1IGZlc3Qgb2RlciBuaWNodCBmZXN0IGdlbnVnIG1hc3NpZXJ0IG9kZXIgZmFsbHMgZXIgenUgc2NobmVsbGUgQmV3ZWd1bmdlbiBtaXQgZGVtIERhdW1lbiBtYWNodC4gClRoZSBNTVIgInNjb3JlIiBpIGd1ZXNzIGlzIGJhc2VkIG9uIGRpZmZlcmVudCB0aGluZ3MgYmFzZWQgb24gd2hhdCB5b3UgcGxheS4gQnV0IHRoZXJlIGFsd2F5cyBzb21lIHNvcnQgb2YgTU1SLiAKUG9rZXJzIGxpa2UgZGVlcCBmZXJ0aWxlIHNvaWwgdGhhdCBpc24ndCB3YXRlcmxvZ2dlZCBpbiB3aW50ZXIuIApQZW9wbGUgaW4gdGhlIHZldGVyaW5hcnkgZmllbGQgYXJlIHN1cGVyIHByb25lIHRvIGJ1cm4gb3V0LiAKQSBndXkgYXQgbXkgdGFibGUgaXMgYSBkb2N0b3IgYW5kIGhlIHJ1bnMgb3ZlciwgZGV0ZXJtaW5lcyB0aGUgcGVyc29uIGlzbiBicmVhdGhpbmcsIGFuZCBiZWdpbnMgQ1BSLiBBcyBhIHNpZGUgbm90ZSwgamVzdXMgaXQgbG9va2VkIGJydXRhbC4gClRoZSBsaWtlcyBvZiBKYW1lcyBDb29rLCBNYXR0aGV3IEZsaW5kZXJzLCBXaWxsaWFtIERhbXBpZXIsIERpcmsgSGFydG9nICAgbWVuIHdobyB0b29rIG9uIHRoZSBvY2VhbnMgaW4gcmlja2V0eSBib2F0cyB0byBkaXNjb3ZlciBhbmQgY2hhcnQgdGhlIEdyZWF0IFNvdXRoZXJuIExhbmQuIApSZWNlbnRseSwgdGhlIEJvbWJheSBIaWdoIENvdXJ0IGFjY2VwdGVkIHRoZSBkaXN0aW5jdGlvbiBiZXR3ZWVuIGEgZ2FtZSBvZiBhbmQgY2FyZHMsIGFuZCBwcmltYSBmYWNpZSBhZ3JlZWQgdGhhdCBnYW1lIG9mIFBva2VyIHdhcyBhIG9mIHNraWxsIEEgZGl2aXNpb24gYmVuY2ggb2YgSnVzdGljZSBSIE0gU2F3YW50IGFuZCBKdXN0aWNlIFNhcmFuZyBLb3R3YWwsIHdlcmUgaW5mb3JtZWQgYnkgc2VuaW9yIEFkdm9jYXRlIEFtaXQgRGVzYWksIHRoYXQgIlBva2VyIGhhcyBiZWVuIHByb3ZlbiB0byBiZSBhIEdhbWUgb2YgU2tpbGwgYWNyb3NzIHRoZSBnbG9iZS4gTW9yZW92ZXIsIGluIHN0YXRlcyBzdWNoIGFzIE5hZ2FsYW5kLCBXZXN0IEJlbmdhbCBhbmQgS2FybmF0YWthLCBhZnRlciBjb25zaWRlcmF0aW9uIG9mIHN1YnN0YW50aWFsIG1hdGVyaWFsLCBpdCBoYXMgYmVlbiBmb3VuZCB0aGF0IFBva2VyIGlzIGEgZ2FtZSBvZiBza2lsbCBhbmQgbm90IGNoYW5jZS4uIAoiVG8gZmF2b3VyIG9yIG5vdCBmYXZvdXIgYSBwbGFubmluZyBhcHBsaWNhdGlvbiBvbiBhbiBpbmRpdmlkdWFsIGNvdW5jaWxsb3IncyB2aWV3IG9mIHRoZSBhcHBsaWNhbnQgaW4gcXVlc3Rpb24gaXMgc29tZXRoaW5nIHRoYXQgaXMgZnJhdWdodCB3aXRoIGRhbmdlci4iCk5vIGNsb3NlZCBzdXJ2ZXlzLiBEb24gdXNlIHRoZSBzdWJyZWRkaXQgZm9yIHNob3V0IG91dHMgb3IgaW5kaXZpZHVhbCBjb21tdW5pY2F0aW9uIHRvIG90aGVyIHJlZGRpdG9ycywgcGVvcGxlIG9yIGNvbXBhbmllcy4gVG8gZW5jb3VyYWdlIGRpc2N1c3Npb24gYW5kIGNvbW11bml0eSBvcmllbnRhdGVkIGNvbnRlbnQsIHNvbWUgdHlwZXMgb2YgbGlua3MgYXJlIHJlc3RyaWN0ZWQgdG8gdGV4dCBwb3N0cyBvbmx5LiAKU2hlIHdhcyBzdGFuZGluZyBiZWhpbmQgbWUgc21pbGluZyBhbmQgaG9sZGluZyBhbGwgb2YgaGVyIGNoaXBzLiAKQW5kIGRlc3BpdGUgd2hhdCBoZSBzYWlkIGF0IHRoZSBvdXRzZXQgb2YgaGlzIHNwZWVjaCwgQm91Z2huZXIgYWRtaXRzIHRoYXQgZ3JlZWQgaGFzIHBsYXllZCBhIHJvbGUgaW4gaGlzIGNhc2lubydzIHN1Y2Nlc3MsIHRob3VnaCBoZSBpbnNpc3RzIGl0IGhhc24ndCBiZWVuIGhpcyBvciBCb3lkJ3MuICJUaGUgb25seSBncmVlZCBJJ3ZlIGV2ZXIgcmVhbGx5IHJ1biBhY3Jvc3MgaW4gdGhpcyBidXNpbmVzcyBpcyB0aGUgZ3JlZWQgb2YgdGhlIHBsYXllcnMsIHdoaWNoIGFic29sdXRlbHkgc3VzdGFpbnMgdXMuIgpGb3IgdGhpcyBoZSBuZWVkZWQgdG8gZWxpbWluYXRlIHRoZSBDYXBpdGFsaXN0IGNsYXNzIGJlY2F1c2UgdGhleSB3ZXJlIGEgdGhyZWF0LiBIZSBhbHNvIGJlbGlldmVkIGluIERlbW9jcmF0aWMgQ2VudHJhbGlzbSwgd2hlcmUgd29ya2VycyBvbmx5IGVsZWN0IG1lbWJlcnMgb2YgdGhlIHZhbmd1YXJkIHBhcnR5LiAKVXNpbmcgTmV1cm9saW5ndWlzdGljIFByb2dyYW1taW5nIHRvIEluY3JlYXNlIEN1c3RvbSBDbGF5IFBva2VyIENoaXBzIFNhbGVzCiJUaGUgQ0JBIGNvbnNwaXJhY3kgd2FzIGEgcHJvbG9uZ2VkIGZyYXVkIG9mIGJyZWF0aHRha2luZyBwcm9wb3J0aW9ucywiIEp1ZGdlIExhY2F2YSBzYWlkLgpZaWVsZDogMiBkb3plbi4gSW4gbGFyZ2UgYm93bCB3aXRoIGVsZWN0cmljIG1peGVyLCBiZWF0IGJhc2UgYW5kIHRvcHBpbmcgaW5ncmVkaWVudHMgb24gbG93IHNwZWVkIHVudGlsIGNydW1ibHkuIFByZXNzIGhhbGYgb2YgbWl4dHVyZSAoYWJvdXQgMiAxLzIgY3VwcykgaW4gcGFuIHRvIGZvcm0gYmFzZTsgcmVzZXJ2ZSByZW1haW5pbmcgbWl4dHVyZSBmb3IgdG9wcGluZy4gCkxpdHRsZSB3b25kZXIgdGhlIG5ld3MgaGFkIGZvbGtzIGNoZWVyaW5nLiBUaGlzIHdhcyBvbmUgb2YgdGhvc2UgYWxsIHRvbyByYXJlIEhvcmF0aW8gQWxnZXIgc3RvcmllczogTG9jYWwgcGVyc29uIHN0YXJ0cyBhdCB0aGUgYm90dG9tIGFuZCB3b3JrcyB0aGVpciB3YXkgdG8gdGhlIHRvcCB0aHJvdWdoIHRhbGVudCBhbmQgZWZmb3J0IChpbiBwbGFjZSBvZiB0aGUgY3VzdG9tYXJ5IGJhY2tzdGFiYmluZykgd2hpbGUgcmVtYWluaW5nIGdlbnVpbmVseSBuaWNlIGFuZCBhcHByb2FjaGFibGUuCkhhbW1lbGwgS2VubmV0aCBKb3NlcGgKU28gb24gYW5kIHNvIG9uLiAKSXQgaXMgc2Vla2luZyBhIGJpcGFydGlzYW4gY29tbWl0bWVudCB0byB0aGUgQ29tbWlzc2lvbidzIHJlY29tbWVuZGF0aW9uIHRvIHJlZHVjZSBtYXhpbXVtIGJldHMgZnJvbSAkNSB0byAkMWFuZCB0cmFkaW5nIGhvdXIgcmVzdHJpY3Rpb25zIGF0IHRob3NlIGhvdGVscyB3aXRocG9rZXIgbWFjaGluZXMuIApZb3Uga25vdywgZWF0IHRoZSBzYW1lIGZvb2QgeW91IGF0ZSBiZWZvcmUuIEJlIGxpa2UgYSBtYWNoaW5lIGlzIGJhc2ljYWxseSBpdC4gSSBrbm93IHRoZXJlIGEgcHVycG9zZSBmb3IgaXQgYW5kIHRoZSB3b3JrIEkgZG8gaGFzIGFjdHVhbCBtZWFuaW5nLCBidXQgZGFtbiwgc29tZXRpbWVzIGl0IGdldCBob21lIHRvbyB0aXJlZCAvIHN0cmVzc2VkIHRvIGVuam95IGxpZmUuLiAKWm9pIFNhZG93c2tpIFN5bm5vdHQncyB0b3RhbCBvZiAxNTcuNTAgZ2F2ZSBOZXcgWmVhbGFuZCBpdHMgZmlyc3QgV2ludGVyIE9seW1waWMgbWVkYWwgb2YgYW55IHZhcmlldHkgc2luY2UgQW5uZWxpc2UgQ29iZXJnZXIgZWFybmVkIHNpbHZlciBpbiBzbGFsb20gYXQgdGhlIEFsYmVydHZpbGxlIEdhbWVzIGluIDE5OTIuIEl0IHdhcyBhbHNvIHRoZSBzdGFydCBvZiBhIGJpZyBkYXkgZm9yIGhlciBob21lbGFuZC4gU2hvcnRseSBhZnRlciBTYWRvd3NraSBTeW5ub3R0IGpvaW5lZCBHYXNzZXIgYW5kIEFuZGVyc29uIG9uIHRoZSBwb2RpdW0sIE5ldyBaZWFsYW5kIGZyZWVzdHlsZSBza2llciBOaWNvIFBvcnRlb3VzIGdyYWJiZWQgYnJvbnplIGluIHRoZSBoYWxmcGlwZS4gClZlcnkgaW1tYXR1cmUgb2YgaGVyLiBZb3UgYXJlIGJldHRlciBvZmYuIApQcm9ibGVtIGlzLCBJIGtub3cgaGVyIGFuZCBoZXIgZnJpZW5kLCB0aGlzIGN5Y2xlIHdvbiBlbmQgdW50aWwgbXkgZmlhbmNlZSBkZWNpZGVzIHRvLCBob3dldmVyIHNoZSBhZnJhaWQgdGhhdCB3aGF0ZXZlciBzaGUgc2F5cyBtaWdodCBpbmR1Y2UgaGVyIGZyaWVuZCB0byBraWxsIGhlcnNlbGYsIHNvIHNoZSBjYWxjdWxhdGVzIGV2ZXJ5IGFjdGlvbiBhbmQgd29yZCBhbmQgc2VudGVuY2UsIHdoaWNoIHRoZW4gY29udHJpYnV0ZXMgdG8gdGhlIHZpY2lvdXMgY3ljbGUuIExpa2UsIHRoaXMgaXMgdGhlIGJpZ2dlc3QgcHJlc3N1cmUgSSBjYW4gaW1hZ2luZSwgaGF2aW5nIHRvIHdvcnJ5IHRoYXQgeW91ciBzbWFsbGVzdCBhY3Rpb25zIHdpbGwgZ2V0IHNvbWVvbmUga2lsbGVkIGFuZCBpdCBkb2VzbiBmZWVsIHJpZ2h0IHRoYXQgc2hlIGhhcyB0byBqdXN0IGxpdmUgd2l0aCB0aGF0IGFuZCB0cnkgaGVyIGJlc3QuIEJ1dCBvbiB0aGUgb3RoZXIgaGFuZCBJIGRvbiBrbm93IHdoYXQgdG8gZG8sIEkgZG9uIGtub3cgd2hhdCBhZHZpY2UgdG8gZ2l2ZSwgSSBkb24ga25vdyBob3cgdG8gYXBwcm9hY2ggdGhlIHByb2JsZW0gb3Igd2hhdCBpcyB0aGUgc29sdXRpb24uIApUaGUgb25seSBwcm9ibGVtIGlzIHRoYXQgc2hlIHJlYWxseSB0ZW5kZXIgaGVhcnRlZCBhbmQgaWYgc29tZW9uZSBpcyBjb25mcm9udGF0aW9uYWwgd2l0aCBoZXIgc2hlIGNvbXBsZXRlbHkgc2h1dHMgZG93bi4gSSBjb21lIGFyb3VuZCB0aGUgY29ybmVyIGFuZCB0aGUgYmFyaXN0YSBsb29rcyBsaWtlIHNoZSBhbG1vc3QgaW4gdGVhcnMuIEkgdGVsbCB0aGUgd29tYW4gdGhhdCB0aGUgYmFyaXN0YSBleHBsYWluZWQgaXQgdGhlIGJlc3Qgd2F5IHNoZSBjb3VsZCBhbmQgSSBjb3VsZG4gcmVhbGx5IGV4cGxhaW4gaXQgYmV0dGVyIHRoYW4gaGVyLiAKSGUgY291bGQgcmVtYWluIHNpbGVudCB0aGUgd2hvbGUgdGltZS4gClNlbGYgQ29va2luZ0JhY29uICA3NyBwb2ludHMgIHN1Ym1pdHRlZCA0IGRheXMgYWdvCkNoYXQgcm9vbXMsIHBvbGxzLCBwZW9wbGUncyBhcnQgZXRjLiBQZXJzb25hbGx5LCBJIGhhdGVkIGl0LCB0aGUgY29uY2VwdCB3YXMgZmluZSBidXQgdGhlIGV4ZWN1dGlvbi9sb29rIHJlYWxseSBuZWVkZWQgcG9saXNoaW5nLiAKSXQgd291bGQgaGF2ZSBiZWVuIG5pY2UgdG8gd2luIG9uZSBvZiB0aG9zZSBjb2luIGZsaXBzIHdpdGggcG9ja2V0IHNpeGVzLCB0b28hIE1lbnRhbCBhbmQgcGh5c2ljYWwgcHJlcGFyYXRpb24gaXMgY3JpdGljYWwgaW4gdG91cm5hbWVudCBwb2tlciBldmVudHMgbGlrZSB0aGUgV1NPUC4gSWYgSSBoYWQganVzdCBiZWVuIGFibGUgdG8gbWFrZSBpdCB1bnRpbCBEYXkgMywgd2l0aCB0aGUgYmVuZWZpdCBvZiBhIHN0cmVudW91cyBsYXRlIG5pZ2h0IHdvcmtvdXQgYW5kIGEgZ29vZCBuaWdodCdzIHNsZWVwLCBtYXliZSBJIHdvdWxkIGhhdmUgYmVlbiBhYmxlIHRvIGZvbGQgYSBoYW5kIGxpa2UgcG9ja2V0IHNpeGVzIGFuZCBzdGljayBhcm91bmQgdG8gY2xhaW0gYW5vdGhlciBjaGFtcGlvbnNoaXAgYnJhY2VsZXQuIApEYXRhIGJyZWFjaGVzIGFyZSBvZnRlbiBhc3NvY2lhdGVkIHdpdGggbGFyZ2UgYnVzaW5lc3NlcywgYnV0IGNoYXJpdGllcyBhcmUgYWxzbyBzdXNjZXB0aWJsZSB0byBiZWluZyB0YXJnZXRzLi4gClJlY2Vuc2lvbnMgZXQgQmlibGlvZ3JhcGhpZXMKU28gdGhhdCB3b3VsZCBoZWxwIHlvdSBydWxlIHRob3NlIGhhbmRzIG91dC4gCiJUaGUgY291cnQgZmluZHMgdGhhdCBoZSBoYXMgbm90IG1ldCB0aGlzIGJ1cmRlbi4iV2hpbGUgQmVya2Vua290dGVyJ3MgcnVsaW5nIHRvIHVuc2VhbCB0aGUgY2FzZSB3YXMgbWFkZSBpbW1lZGlhdGVseSBhdmFpbGFibGUsIHNoZSBwdXQgYSB0d28gd2VlayBzdGF5IG9uIHRoZSByZXN0IG9mIHRoZSBkb2N1bWVudHMgaW4gdGhlIGNhc2UgdG8gZ2l2ZSB0aGUgcGFydGllcyB0aW1lIGRlY2lkZSB3aGV0aGVyIHRvIGFwcGVhbCBoZXIgcnVsaW5nLkJlcmtlbmtvdHRlciBhbHNvIGluc3RydWN0ZWQgdGhlIGF0dG9ybmV5cyB0byB0YWxrIGFzIHRoZSBjYXNlIHByb2dyZXNzZXMgYW5kIGNvbnNpZGVyIGFza2luZyB0aGUgY291cnQgdG8gdW5zZWFsIGRvY3VtZW50cyB0aGF0IGRvIG5vdCBjb250YWluICJoaWdobHkgc2Vuc2l0aXZlIGluZm9ybWF0aW9uLiJXaXRob3V0IGFueSBzdWNoIHVuc2VhbGluZyBvcmRlcnMsIGRvY3VtZW50cyByZWxhdGluZyB0byBDb2xsaW5zJyBoZWFyaW5nIHRvIGhhdmUgaGlzIGNhc2UgdHJhbnNmZXJyZWQgYmFjayB0byBqdXZlbmlsZSBjb3VydCB3aWxsIHJlbWFpbiB1bmRlciBzZWFsIHVudGlsIHRoZSBqdWRnZSBydWxlcyBvbiB0aGUgZGVmZW5kYW50J3MgcmVxdWVzdCB0byB0cmFuc2ZlciB0aGUgY2FzZS4iU3BlY2lmaWNhbGx5LCB0aGVzZSBwbGVhZGluZ3MgYW5kIGFueSBhdHRhY2htZW50cyB0aGVyZXRvIGFyZSBsaWtlbHkgdG8gaW52b2x2ZSBoaWdobHkgc2Vuc2l0aXZlIGluZm9ybWF0aW9uLCBpbmNsdWRpbmcsIHBvdGVudGlhbGx5LCBtZWRpY2FsIHJlY29yZHMgYW5kIG1lbnRhbCBoZWFsdGggcmVjb3JkcywgYXMgd2VsbCBhcyBvdGhlciBoaWdobHkgY29uZmlkZW50aWFsIGluZm9ybWF0aW9uLCIgQmVya2Vua290dGVyIHdyb3RlLiAKVGhlIGtleW5vdGUgc3BlYWtlciBhdCB0aGUgRXF1YWxpdHkgQnJlYWtmYXN0IGlzIERyLiBXaWxsaWUgSi4gCklmIHRoZSBvdGhlciBwbGF5ZXIgc2hvd3MgaGlzIGhhbmQgYW5kIHlvdSBjYW5ub3QgYmVhdCBoaW0sIHlvdSBjYW4gZ2VuZXJhbGx5IGp1c3QgdGhyb3cgeW91ciBoYW5kIGF3YXkgd2l0aG91dCBzaG93aW5nLiAKT25lIHJlYXNvbiBpcyB0byBtYWtlIGl0IGhvbGQgaXRzIHNoYXBlIGJldHRlci4gClRoZSByaW5nIGlzIHdoYXQgbWFkZSBpdCBoYXJkZXIuIAoiVGhlIGNvdXJ0IGZpbmRzIHRoYXQgaGUgaGFzIG5vdCBtZXQgdGhpcyBidXJkZW4uIldoaWxlIEJlcmtlbmtvdHRlcidzIHJ1bGluZyB0byB1bnNlYWwgdGhlIGNhc2Ugd2FzIG1hZGUgaW1tZWRpYXRlbHkgYXZhaWxhYmxlLCBzaGUgcHV0IGEgdHdvIHdlZWsgc3RheSBvbiB0aGUgcmVzdCBvZiB0aGUgZG9jdW1lbnRzIGluIHRoZSBjYXNlIHRvIGdpdmUgdGhlIHBhcnRpZXMgdGltZSBkZWNpZGUgd2hldGhlciB0byBhcHBlYWwgaGVyIHJ1bGluZy5CZXJrZW5rb3R0ZXIgYWxzbyBpbnN0cnVjdGVkIHRoZSBhdHRvcm5leXMgdG8gdGFsayBhcyB0aGUgY2FzZSBwcm9ncmVzc2VzIGFuZCBjb25zaWRlciBhc2tpbmcgdGhlIGNvdXJ0IHRvIHVuc2VhbCBkb2N1bWVudHMgdGhhdCBkbyBub3QgY29udGFpbiAiaGlnaGx5IHNlbnNpdGl2ZSBpbmZvcm1hdGlvbi4iV2l0aG91dCBhbnkgc3VjaCB1bnNlYWxpbmcgb3JkZXJzLCBkb2N1bWVudHMgcmVsYXRpbmcgdG8gQ29sbGlucycgaGVhcmluZyB0byBoYXZlIGhpcyBjYXNlIHRyYW5zZmVycmVkIGJhY2sgdG8ganV2ZW5pbGUgY291cnQgd2lsbCByZW1haW4gdW5kZXIgc2VhbCB1bnRpbCB0aGUganVkZ2UgcnVsZXMgb24gdGhlIGRlZmVuZGFudCdzIHJlcXVlc3QgdG8gdHJhbnNmZXIgdGhlIGNhc2UuIlNwZWNpZmljYWxseSwgdGhlc2UgcGxlYWRpbmdzIGFuZCBhbnkgYXR0YWNobWVudHMgdGhlcmV0byBhcmUgbGlrZWx5IHRvIGludm9sdmUgaGlnaGx5IHNlbnNpdGl2ZSBpbmZvcm1hdGlvbiwgaW5jbHVkaW5nLCBwb3RlbnRpYWxseSwgbWVkaWNhbCByZWNvcmRzIGFuZCBtZW50YWwgaGVhbHRoIHJlY29yZHMsIGFzIHdlbGwgYXMgb3RoZXIgaGlnaGx5IGNvbmZpZGVudGlhbCBpbmZvcm1hdGlvbiwiIEJlcmtlbmtvdHRlciB3cm90ZS4gCkhlIGxpZWQgdG8gdGhlbSBhYm91dCBpdC4gCiJJIGFtIHN0aWxsIHdvcnJpZWQgdGhhdCB0aGV5IGhhdmUgYSBiaWcgcmVzb3J0IGRldmVsb3BtZW50IGluIHRoZSBiYWNrIG9mIHRoZWlyIG1pbmRzLiJTb21lb25lIGluIHRoZSBtZWV0aW5nIGFza2VkIHdoeSB0aGUgUGFpdXRlcyBkb24gY29tZSBiYWNrIHRvIHRoZSB0b3duIHdpdGggYSBtb3JlIGRpc3RpbmN0IHBsYW4gYmVjYXVzZSB0aGUgdG93biB3b3VsZCBiZSB3aWxsaW5nIHRvIGxpc3RlbiwgYnV0IHRoZXkgc2FpZCBuby4gV2hlbiBpdCBhbGwgYm9pbHMgZG93biB0byBpdCwgdGhleSBkb24gd2FudCB0byBoYXZlIHRvIHBheSB0YXhlcywgQ2x1ZmYgc2FpZC5BbWVyaWNhbnMgd2VyZSBuZXZlciBzdXBwb3NlZCB0byBwYXkgZm9yIHByb3BlcnR5IHRheGVzLCBSb2JiIHNhaWQuIApQZXJoYXBzIHRoZSB3aWZlIGlzIGFsbW9zdCBjZXJ0YWluIHRoYXQgc2hlIGlzIGJlaW5nIGNoZWF0ZWQgb24gYnV0IGhhcyBubyBwcm9vZi4gU2hlIHRoaW5rcyBzaGUgaXMgYmVpbmcgbGllZCB0byBidXQgZG9lcyBub3Qgd2FudCB0byBzZXBhcmF0ZSBiYXNlZCBvbiB0aGF0IGFsb25lLiAKVGhlcmUgYXJlIG90aGVyIHByb3RlaW5zIHdob3NlIGV4cGVjdGVkIHJlZ2lvbnMgb2YgYmluZGluZyBhcmUgYSBsaXR0bGUgbGVzcyB3ZWxsIGRlZmluZWQgaW4gcmVsYXRpb25zIHRvIGdlbmVzLiBUaGVzZSBjb3VsZCBpbmNsdWRlIHByb3RlaW5zIHRoYXQgYmluZCB0byBlbmhhbmNlcnMsIGFuZCBvdGhlciBwcm90ZWlucyBpbnZvbHZlZCBpbiAzRCBjaHJvbWF0aW4gYXJjaGl0ZWN0dXJlLCBzdWNoIGFzIGNvaGVzaW4gYW5kIENUQ0YuIApMaWtlLCB2aXN1YWxseSBpdCB3YXMgZ3JlYXQuIERlc2VydmVzIGFsbCBzb3J0cyBvZiBhd2FyZHMuIEh1Z2Ugc2V0IHBpZWNlcyB0aGF0IHdlcmUgcmVhbGx5IGltcHJlc3NpdmUgb24gdGhlIGJpZyBzY3JlZW4uIEJ1dCBhcyBhbiBhY3R1YWwgbW92aWUgaXQuIGtpbmRhIHN1Y2tlZC4gUGFjaW5nIHdhcyBiYWQsIE1pY2hlbGxlIFJvZHJpZ3VleiBjYW1lb21vc3Qgb2YgdGhlIG1pbm9yIGVuZW1pZXMgQWxpdGEgZm91Z2h0IHdlcmUgbGF1Z2hhYmx5IGR1bWIsIEplbm5pZmVyIENvbm5lbGx5IGNoYXJhY3RlciBhcmMgaXMgc2l0dGluZyBvbiB0aGUgZWRpdGluZyByb29tIGZsb29yLCBBbGl0YSBib3lmcmllbmQgY2hhcmFjdGVyIHdhcyBjcmluZ2UgeS4gV2hlbiBBbGl0YSBjaGFyYWN0ZXIgd2Fsa2VkIGludG8gaGVyIHNwYWNlc2hpcCBhbmQgYWxsIHRoZSBsaWdodHMgdHVybmVkIG9uIEkgd2FzIGxpa2UgIndoYXQgdGhlIGZ1Y2sgaXMgaGFwcGVuaW5nIHJpZ2h0IG5vdz8iIGFuZCBJIGxlZ2l0aW1hdGVseSBmZWx0IGxpa2UgSSBzaG91bGQgZG9uZSByZXNlYXJjaCBpbnRvIHRoZSBzb3VyY2UgbWF0ZXJpYWwgYmVmb3JlIHdhdGNoaW5nIHRoZSBtb3ZpZSwgd2hpY2ggaXMgbm90IGEgZ3JlYXQgdGhpbmcgdG8gdGhpbmsgYWJvdXQgaW4gYSBtb3ZpZS4KTGV0IGFkZCA0IG9mIGVhY2guLiAKU3dpdGNoIGJhY2sgdG8gY29sb3IuIEl0IHJlYWxpdHkgY2hlY2sgdGltZS4gSXQgMjAwOS4gCk1HTSBOYXRpb25hbCBIYXJib3IgZm9lcyBmZWFyIG92ZXJzYXR1cmF0aW9uIG9mIGNhc2lub3MgaW4gTWFyeWxhbmQKNSBBdWcgMjAxMyAgIDYgbWluICAgVXBsb2FkZWQgYnkgVmVudXNGb3IgQm9sbHl3b29kIEhEIFZpZGVvIFNvbmdzIEp1a2Vib3hlcyA6IEVuam95IEJvbGx5d29vZCBTdXBlcmhpdCAuIDQ3YzIxY2MwNzcgZG93bmxvYWQgbHlyaWNzIHBsdWdpbiBmb3Igd2luZG93cyBtZWRpYSBwbGF5ZXIgMTJEZXNpZ24gWW91ciBPd24gQm91dGlxdWUgVGlzc3VlIEJveCBDb3ZlcnM6IFBsYXN0aWMgQ2FudmFzIFBhdHRlcm5zQmlsbGlvbmFpcmVHcmVlbi4gClNpdGUgaXMgbm8gbG9uZ2VyIHJ1biBieSB0aGUgZGVlcCBwb2NrZXRzIG9mIHRoZSBCQkMsIG5vciBldmVuIGJ5IHRoZSBzbGlnaHRseSBsZXNzIGRlZXAgcG9ja2V0cyBvZiBteSBvcmlnaW5hbCB0ZWFtIGF0IFRoZSBEaWdpdGFsIFZpbGxhZ2UuIApUcmljeWNsaWMgYW50aWRlcHJlc3NhbnRzIGFmZmVjdCBzeW5hcHRpYyB0cmFuc21pc3Npb24gb2Ygc2Vyb3RvbmluIGFuZCBub3JlcGluZXBocmluZSBuZXVyb25zIGluIHRoZSBjZW50cmFsIG5lcnZvdXMgc3lzdGVtLCB0aGVyZWJ5IGFmZmVjdGluZyBwYWluIG1vZHVsYXRpbmcgcGF0aHdheXMuIApUaGlzIGlzIG5vdGhpbmcgbW9yZSB0aGFuIGFuIGF0dGVtcHQgdG8gZGlzY3JlZGl0IG15IGNsYWltcyB3aXRob3V0IGhhdmluZyB0byBkbyB0aGUgd29yayBvZiBhY3R1YWxseSBkaXNjcmVkaXRpbmcgdGhlbS4gU2hhbWUgb24geW91LCBiaW1iby4gClRoYXQgb25seSBmaXZlIHllYXJzIGFnby4gCk9mIGNvdXJzZSwgbmVpdGhlciBhcmUgdGhlIHBlb3BsZSB3aG8gZG8gc3VmZmVyIGZyb20gY29sZHMuIAoiS2VsaSB3YXMgbm90IHRoZSB0eXBlIHRvIHNoYXJlIGludGltYXRlIHBlcnNvbmFsIGRldGFpbHMsIiBzaGUgc2F5cy4gTm93IExhbmUgbGlmZSBpcyB0byBiZSBsYWlkIGJhcmUuIApHb3RjaGEsIGJlY2F1c2Ugb3RoZXJ3aXNlIEkgd291bGQganVzdCBzYXkgdGhleSBzZWxmIHJpZ2h0ZW91c2x5IGlnbm9yYW50IG1vcm9ucyB3aG9zZSBzdXJ2aXZhbCBkZXBlbmRzIG9uIHRoZSBkZWF0aCBvZiBhbmltYWxzICh3aG8gd2VyZSBuZXZlciBpbnRlbmRlZCB0byBkaWUsIGxpa2UgbGl2ZXN0b2NrKSBqdXN0IGFzIG11Y2ggYXMgYW55b25lIGVsc2UgSSBtYWtpbmcgbXlzZWxmIGNsZWFyPyBEb2VzIGFueSBvZiB0aGF0IG1ha2Ugc2Vuc2U/V2UgYWx3YXlzIHVzZWQgdG9vbHMgdG8ga2lsbCBhbmltYWxzLiAKTm93LCBldmVuIHRob3VnaCBVSEYgaXNuJ3QgZXhhY3RseSBhIGdyaXR0eSBkb2N1bWVudGFyeSBhYm91dCB0aGUgbGF0ZSAnODBzIG1lZGlhIGxhbmRzY2FwZSwgYSBjaGFyYWN0ZXIgZG9lcyBhY2N1cmF0ZWx5IG1lbnRpb24gdGhhdCBpdCdzIGlsbGVnYWwgZm9yIHNvbWVvbmUgdG8gb3duIHR3byBzdGF0aW9ucyBpbiB0aGUgc2FtZSB0b3duLiBPciBhdCBsZWFzdCwgdGhhdCdzIGhvdyBpdCB3YXMgYmFjayB0aGVuLiBJbiAxOTk2LCB0aGUgVGVsZWNvbW11bmljYXRpb25zIEFjdCBtYWRlIGl0IGxlZ2FsIGZvciBjb21wYW5pZXMgdG8gb3duIG11bHRpcGxlIGNoYW5uZWxzIGluIHRoZSBzYW1lIGdlb2dyYXBoaWNhbCBsb2NhdGlvbiAgIG1lYW5pbmcgdGhhdCB0b2RheSwgYW55IG51bWJlciBvZiBuYXRpb25hbCBtZWdhY29ycG9yYXRpb25zIHdvdWxkIGJlIGZyZWUgdG8gYmlkIG9uIHRoZSBzdGF0aW9uLCBjYXVzaW5nIGl0cyB2YWx1ZSB0byBza3lyb2NrZXQuLiAKUHJvbW90aW5nIHNvbWV0aGluZyBmb3IgcHVyZSBmaW5hbmNpYWwgZ2FpbiBvciB0aGluZ3MgbGlrZSBTdGVhbSBncm91cHMsIERpc2NvcmQgc2VydmVycywgZ2FtZSBzZXJ2ZXJzLCBzdWJyZWRkaXRzLCBldGMuIGlzIG5vdCBhbGxvd2VkLiBDb25zaWRlciBwdXJjaGFzaW5nIFJlZGRpdCBBZHZlcnRpc2luZy4KU2VwdGljZGFuayAgNCBwb2ludHMgIHN1Ym1pdHRlZCA0IGhvdXJzIGFnbwpUaGF0IHdoYXQgaGUgZGlkIGhlIGhhcyAwIHJlZ3JldHMgZXZlbiBpZiBoZSBmZWx0IGtpbmQgb2Ygc2VlZHkgYWJvdXQgaXQgYXQgZmlyc3QuIApTaGUgd2FzIGludml0ZWQgdG8gdGhlIGxhZHkgbWFzdGVycyBpbiBEdWJhaSBpbiAyMDE2IGFuZCBzaGUgZ290IGxpa2UgbGFzdCBwbGFjZSxsaXRlcmFsbHkuIApTb21ldGltZXMgaXQncyBhY3R1YWxseSBoYXJtZnVsIHRvIHBlb3BsZSdzIGhlYWx0aCBhcyB3ZWxsOiBFeGNlc3NpdmUgYW1vdW50cyBvZiBmcmFncmFuY2UgY2FuIGV2ZW4gdHJpZ2dlciBtaWdyYWluZXMgb3IgY2F1c2UgYXN0aG1hIGF0dGFja3MgYW5kIGFsbGVyZ2ljIHJlYWN0aW9ucyBpbiBzb21lIHBlb3BsZS4uIApJbCBEaXJldHRpdm8gYXR0dWFsZSAgaW4gY2FyaWNhIHNpbm8gYWwgMjEgRGljZW1icmUgMjAxOSBlZCAgY29zIGNvbXBvc3RvOlZpY2UgUHJlc2lkZW50ZSwgU2VncmV0YXJpbywgVGVzb3JpZXJlOiBGZWxpY2lhbmEgRGkgTGlkZG8KUGx1cywgd2hvIGNhbiBjb21wbGFpbiBhYm91dCB0aG9zZSB0eXBlcyBvZiBkaXNjb3VudHMuIApGaXJzdCBhbmQgZm9yZW1vc3QsIHRoZXkgbmVlZCB0byB0cmVhdCB0aGUgbWFzc2l2ZSB0dW1vciBpbiBoaXMgdGhyb2F0LCBzbyBoZSB3aWxsIGhhdmUgcmFkaW8gc2VlZCB0aGVyYXB5IChicmFjaHkgdGhlcmFweSkgd2hlcmUgdGhleSBpbmplY3QgYSBuZWVkbGUgaW50byB0aGUgdHVtb3IsIHRoZW4gcGxhbnQgc2VlZHMgdGhyb3VnaCB0aGUgbmVlZGxlLCB0b2dldGhlciB3aXRoIGEgY2hlbW8gZHJ1Zy4gVGhleSB3aWxsIGFsc28gZG8gdGhpcyBpbiBoaXMgc3Rlcm51bSBhbmQgaGlzIGFybXBpdHMuIApIb29rIGhhcyBmYWxsZW4gb2ZmIHR3aWNlIGFuZCBpbXBvc3NpYmxlIHRvIGdldCBnZXQgYmFjayBvbi4gVGhlIGhpZ2ggc2lkZSB0cmFuc2R1Y2VyIGdvdCBzdHVjayBvbiAgMjlpbmhnLiAKTXVjaCBvZiB3aGF0IEkgY291bGQgdGVsbCB5b3UgaXMgbm93ICdTdWIgSnVkYWNhZScsIHNvIHNheSBubyBtb3JlLiAKIDMgcG9pbnRzICBzdWJtaXR0ZWQgMyBkYXlzIGFnb0xvb2sgYXQganVzdCB0aGlzIHBvc3QsIHRoZSB0ZXJtIGRvZXNuIHJlYWQgZGVyb2dhdG9yaWx5IHRvIG1lIGF0IGFsbC4gV2Ugbm90IHRyeWluZyB0byB0YWxrIGJhZCBhYm91dCB0aGVtLCBub3QgdHJ5aW5nIHRvIG1ha2UgZnVuIG9mIHRoZW0sIGV0Yy4gSG9uZXN0bHksIGlmIHlvdSBoYXZlIGEgcHJvYmxlbSB3aXRoIHRoaXMsIHlvdSBoYXZlIGEgbWFqb3IgcHJvYmxlbSB3aXRoIHRoZSBMdXRoZXJhbiBDb25mZXNzaW9ucyAgd2hpY2ggeW91IHN1YnNjcmliZSB0byBiZWNhdXNlIHRoZXkgY29udGFpbiB0aGUgV29yZCBvZiBHb2QgIGFuZCB0aGUgZW50aXJldHkgb2YgTHV0aGVyIFdvcmtzLCBhcyBpdCBhcHBlYXJzIGEgbGl0YW55IG9mIHRpbWVzIHRoZXJlaW4uIApBdCB0aGUgZW5kIG9mIHRoZSByaWRlLCB0aGUgcGVyc29uIHdpdGggdGhlIGJlc3QgcG9rZXIgaGFuZCB3aWxsIHdpbiBhIGNhc2ggcHJpemUuR29vc2ViZXJyeSBNZXNhIGlzIGEgcG9wdWxhciBtb3VudGFpbiBiaWtpbmcgYXJlYS4gClRvIGdldCB0byBhdCBsZWFzdCBjaGFtcGlvbiwgaSBnb25uYSBzYXkgdGhhdCB5b3UgZG9uIGV2ZW4gbmVlZCBpbmNyZWRpYmxlIG1lY2hhbmljcy4gQWlyIGRyaWJibGVzID8gaSBjYW4gc29tZXdoYXQgY2FycnkgdGhlIGJhbGwsIGRvZXMgdGhhdCBjb3VudD8gQ2VpbGxpbmcgc2hvdD8gTmV2ZXIgZG9uZSBvbmUuIAoiTm8gc2V4LCIgc2hlIHJlY2FsbHMgdGhlIGFkIHNheWluZywgYWNjb3JkaW5nIHRvIHRoZSByZXBvcnQuVGhlIGdpcmwsIHdobyB3b3JrZWQgYXQgQ29pbCdzIGhvbWUgYXMgcmVjZW50bHkgYXMgdGhpcyBtb250aCwgbWV0IGhpbSBpbiBPY3RvYmVyLCB0aGUgcmVwb3J0IHNhaWQuIEhlIHRvb2sgaGVyIHRvIGhpcyBob3VzZSwgc2VydmVkIGhlciBhbGNvaG9sIGFuZCBleHBsYWluZWQgd2hhdCB0aGUgam9iIHdvdWxkIGVudGFpbC4gU2hlIHdhcyBoZXNpdGFudCBhdCBmaXJzdCBidXQgYWdyZWVkIHRvIHRoZSB3b3JrLlRocmVlIG90aGVycyB3ZXJlIGVtcGxveWVkIGJ5IENvaWwgd2hlbiBzaGUgam9pbmVkLCB0aGUgcmVwb3J0IHNhaWQuIApTbyBmb3IgbWUgYXQgbGVhc3QsIGZvb2QgaXNuIHRoZSBpc3N1ZS4uIApJZiB5b3UncmUgYSAiY29uc2VydmF0aXZlIiB5b3Uga25vdyBob3cgZnJlZSBtYXJrZXQgd29ya3MuIEd1ZXNzIHdoYXQ7IHRoZSBwZW9wbGUgd2hvIHdvcmsgdGhlIGhhcmRlc3QgZ2V0IHRoZSBqb2JzLiAKV2h5IGRpZCB5b3UgdGhpbmsgdGhhdCB3YXMgb2theT8iICAgbmV4dCB0aW1lIHlvdSBzZWUgaGVyIEZBQ0UgVE8gRkFDRS4gQWxzbywgYWN0aXZlbHkgdGVsbCB0aGUgb3RoZXIgZmFtaWx5IG1lbWJlcnMgeW91IGNsb3NlIHdpdGggd2hhdCBzaGUgZGlkIGFuZCBtYWtlIGl0IGtub3duIGhvdyB1cHNldCB5b3UgYXJlLiBUaGUgbmV3cyBzaG91bGQgdHJhdmVsLCBhbmQgb3RoZXIgZmFtaWx5IG1lbWJlcnMgc2hvdWxkIHNoYW1lIGhlci4uIApIT01FV09PRCBTVUlURVMKWW91IGdhdmUgdGhlIGdpZnQgdGhhdCBjYW4ndCBiZSBib3VnaHQgZnJvbSBhIHN0b3JlLiAKV2h5IGRvIHNvIG1hbnkgcnVubmVycyBub3dhZGF5cyBvbmx5IHdhbnQgdG8gcnVuIGZvciBkaXN0YW5jZSBhbmQgbm90IGZvY3VzIHRoZWlyIGVmZm9ydHMgb24gZ2V0dGluZyBmYXN0ZXI/IEkgc2VlIHNvIG1hbnkgcG9zdHMgYWJvdXQgdGhlIG1hcmF0aG9uLCBpdCdzIGJhc2ljYWxseSB0aGUgYmUgYWxsIGVuZCBhbGwgZm9yIG1hbnkgcGVvcGxlLiBXaHkgZG9lc24ndCBhbnlvbmUgd2FudCB0byBwdXQgaW4gdGhlIHdvcmsgdG8gaW1wcm92ZSB0aGVpciBzaG9ydGVyIGRpc3RhbmNlIHRpbWVzPyBEb24ndCBnZXQgbWUgd3JvbmcsIEkgY29hY2ggYmVnaW5uZXJzIGFuZCBJIGVuY291cmFnZSB0aGVtIHRvIGRvIHdoYXQgbWFrZXMgdGhlbSBoYXBweS4gCkhlIGZvcmVjYXN0cyB0aGF0IGluIHRoZSBwZXJpb2QgZnJvbSBub3cgdG8gMjAyMDpBZnJpY2Egd2lsbCBiZSB0aGUgZmFzdGVzdCBncm93aW5nIGNvbnRpbmVudEl0IHdpbGwgZXhwZXJpZW5jZSB0aGUgbW9zdCByYXBpZCBncm93dGggaW4gdGhlIGNvbnN1bXB0aW9uIG9mIGNvbnN1bWVyIGdvb2RzSXQgd2lsbCBoYXZlIHRoZSBncmVhdGVzdCBpbXByb3ZlbWVudHMgaW4gaW52ZXN0bWVudCBjbGltYXRlQWZyaWNhJ3MgcG9wdWxhdGlvbiB3aWxsIGdyb3cgdG8gZG91YmxlIHRoYXQgb2YgRXVyb3BlQWZyaWNhIHdpbGwgaGF2ZSB0aGUgd29ybGQncyB5b3VuZ2VzdCBsYWJvdXIgZm9yY2UgYW5kIGluIHRoZSBmb2xsb3dpbmcgZGVjYWRlcyBpdHMgc2l6ZSB3aWxsIG92ZXJ0YWtlIENoaW5hJ3MgYW5kIEluZGlhJ3NJbmVxdWFsaXR5IHdpdGhpbiBBZnJpY2Egd2lsbCByZWR1Y2Ugd2hpbGUgaW4gdGhlIHJlc3Qgb2YgdGhlIHdvcmxkIGl0IHdpbGwgaW5jcmVhc2VQcm9mZXNzb3IgR29sZGluIHNhaWQ6ICJUaGUgY2hhbmdlcyB0YWtpbmcgcGxhY2UgaW4gQWZyaWNhIGFyZSB0cnVseSBkcmFtYXRpYy4gCkF0IHRoZSBYIGdhbWVzIGVhcmxpZXIgdGhpcyB5ZWFyLCBIaXJhbm8gaGFkIGEgcnVuIHRoYXQgd2FzIHByZXR0eSBtdWNoIHBlcmZlY3QsIGJ1dCByZWNlaXZlZCBhIHNjb3JlIG9mIDk5LiAKRmFzdCBmb3J3YXJkIDEwIHllYXJzIGFuZCBJIGhhZCBzdGFydGVkIHdvcmtpbmcgYXQgYSBsYXJnZSBpbnRlcm5hdGlvbmFsIGRldmVsb3BtZW50IG9yZyBpbiBBdXN0cmFsaWEuIEkgbWV0IGEgbWFuIGZyb20gTmFnYWxhbmQgd2hvIGFsc28gd29ya2VkIHRoZXJlLiBBcyBJIGdvdCB0byBrbm93IGhpbSwgSSBmb3VuZCBvdXQgaGUgd2FzIGEgcmVmdWdlZSwgd2hpY2ggSSB0aG91Z2h0IHdhcyBvZGQsIGNvbnNpZGVyaW5nIGhlIGNhbWUgZnJvbSB0aGlzIHN1cHBvc2VkbHkgc2FmZSBwbGFjZSBmaWxsZWQgd2l0aCBDaHJpc3RpYW5zLgo1NCA5MikgQWxsIHRoZSBzb25ncyBsaXN0ZWQgaGVyZSBhcmUiVW5yZWxlYXNlZC4iIFlvdSBjYW4gZmluZCB0aGVtIG9uIFlvdXR1YmU6IEFuaW1hbCwgS2Fib29tIChmZWF0LiBMYWR5IEdhR2EpLCBXdW5kZXJsYW5kKGZlYXQuIExhZHkgR2FHYSksIExldCBMb3ZlIERvd24sIEJsdWViZXJyeSBLaXNzZXMsIFJlZCBBbmQgQmx1ZSxSZXRybyBQaHlzaWNhbCwgUm9jayBTaG93LCBTZWNvbmQgVGltZSBBcm91bmQsIFNleHkgVWdseSwgR2xpdHRlckFuZCBHcmVhc2UgKEFyb3VuZCksIE5vIEZsb29kcyxSaWJib25zLCBPaCBXZWxsLCBGdXR1cmUgTG92ZSAoTGl2ZSksIE91dCBPZiBDb250cm9sIChzaG9ydCBkZW1vKSxXb3JkcywgV29uZGVyZnVsLCBXaXNoIFlvdSBXZXJlIEhlcmUsIFNoYWtlIFlvdXIgS2l0dHksIFNvbWV0aGluZ0NyYXp5LCBGaWx0aHkgUG9wLCBGYW5jeSBQYW50cywgRmV2ZXIsIERpcnR5IEljZSBDcmVhbSwgS2FuZHkgTGlmZSxGb29sZWQgTWUgQWdhaW4gKEhvbmVzdCBFeWVzKSwgUmVsb2FkZWQsIENhcHRpdmF0ZWQgRWxlY3RyaWMgS2lzcyxMaXZpbmcgT24gVGhlIFJhZGlvLCBTcGluIFVBcm91bmQgKGZlYXQuIApTaGUgd2lsbCBoYXZlIHR3byBEQiBwZW5zaW9ucyBvbmUgJDEyLDAwMCBwZXIgeWVhciB3aXRoIG5vIGluZGV4YXRpb24gYW5kIG9uZSAkNTYsMDAwIHBlciB5ZWFyIHdpdGggaW5kZXhhdGlvbi4gVGhlIGFubnVhbCB0b3RhbCBvZiB0aGVzZSBwZW5zaW9ucywgJDY4LDAwMCBwZXIgeWVhciwgaW1wbGllcyBhIGNvbW11dGVkIHZhbHVlIChjYXBpdGFsIHJlcXVpcmVkIHRvIGdlbmVyYXRlIHRoZSBpbmNvbWUpIG9mIGFib3V0ICQxLjUgbWlsbGlvbi4gCkkgbG9vayB0byB3aGVyZSB5b3UgdXN1YWxseSBhcmUgYW5kIHRoZSBtZW1vcmllcyBmbG9vZCBiYWNrLiAKSSBwaWNrZWQgdGhlIHN0cmFuZ2VzdCBtb25zdGVycyBJIGNvdWxkIChiZWNhdXNlIG9mIG1hZ2ljLCBvYnZpb3VzbHkpLCBvbmUgb2Ygd2hpY2ggd2FzIGEgcnVzdCBtb25zdGVyLiAKU28sKENvaW5zIGZvciBLaWRzIGhlbHBzKWRpc3RyaWJ1dGUgdGhlIHRveXMgdGhhdCB0aGV5IGNvbGxlY3QuIEJ5IHdvcmtpbmcgd2l0aCBUb3lzIGZvciBUb3RzLCBpdCBtYWtlcyBvdXIgZG9uYXRpb25zIGdvIGZhcnRoZXJhcyB3ZSB1c2Ugb3VyIG1vbmV5b24gY29hdHMsIGNsb3RoZXMsIGFuZCBzaG9lcyBmb3IgdGhlIGZhbWlsaWVzLiAKU28gdGF4aW5nIHRoZSBnYWluIGJ5IDMwJSBtZWFucyB0aGF0LCBhbGwgZWxzZSBiZWluZyBlcXVhbCwgeW91IGJlY29tZSB3b3JzZSBvZmYgd2hlbmV2ZXIgeW91IG1vdmUgaG91c2UuCkkgZGlkbiBnaXZlIGl0IHVwLCBJIHN0aWxsIHBhaW50L2RyYXcvZGVzaWduLCBidXQgaXQgaXQgYSBiaWcgZHJvcCBmcm9tIGRhaWx5IHByb2R1Y3Rpb24gdG8gbWF5YmUgdG9vbGluZyBhcm91bmQgd2l0aCBvbmUgdGhpbmcgb3ZlciBhIGZldyBkYXlzLCBvciBkb2luZyBzb21lIGRvb2RsZXMgaGVyZSBhbmQgdGhlcmUuIApaYWhpZCBoYWQgY29tbWl0dGVkIHRvIHRoZSBvcHBvc2l0aW9uIHRoYXQgaGUgd291bGQgZ2V0IFNhcnRhaiBBeml6IGJyaWVmIHRoZSBIb3VzZSBvbiBQYWtpc3RhbiBwb2xpY3kgb24gU3lyaWEuIFRoZSBQTUwgTiBnb3Zlcm5tZW50IHdhcyB0YWtpbmcgYSBkYWlseSBwb3VuZGluZyBpbiB0aGUgbWVkaWEgZm9yIGNoYW5naW5nIGl0cyBwb2xpY3kgb24gU3lyaWEgYWxsZWdlZGx5IGF0IHRoZSBiZWhlc3Qgb2YgYSBwb3dlcmZ1bCBNaWRkbGUgRWFzdGVybiBjb3VudHJ5LiBBIHdpcmUgc2VydmljZSB3ZW50IGFzIGZhciBhcyBhY2N1c2luZyBQYWtpc3RhbiBvZiBhZ3JlZWluZyB0byBzZW5kIGFybXMgdG8gU3lyaWFuIHJlYmVscy4gClNlZWRzIHdlcmUgcGxhbnRlZCwgYnV0IGl0IHdhcyBvbmx5IGRlY2FkZXMgbGF0ZXIgdGhhdCB0aGUgdW5kZW1vY3JhdGljIGltcHVsc2VzIG9mIE5lb2xpYmVyYWxpc20gd291bGQgYmVhciBmcnVpdC4gCkl0IHRyYWdpYyBqdXN0IGhvdyBzZWxmIGRlc3RydWN0aXZlbHkgaWRlYWxpc3RpYyBzb21lIHBlb3BsZSBhcmUsIGFuZCBob3cgdGhleSB3aWxsaW5nIHRvIGxhc2ggb3V0IGF0IGFueW9uZSB3aG8gd2FybnMgdGhlbSBvdGhlcndpc2UgcmlnaHQgdXAgdW50aWwgdGhleSBzZXQgZm9vdCBpbnRvIHJlYWxpdHkuCldpdGggYSBjb25jaXNlIGVmZm9ydCBJIHRoaW5rIHRoYXQgY291bGQgYmUgaW1wcm92ZWQsIGJ1dCBkZXNwaXRlIGhhdmluZyBhIGRlZGljYXRlZCAic3RvcnkgZ3JvdXAiIGF0IHRoZSBoZWxtLCB0aGF0IGhhc24gaGFwcGVuZWQgeWV0Li4gCkZvdW5kZWQgaW4gMTg5MyBhcyB0aGUgRGVudmVyIEFydGlzdHMgQ2x1YiwgdGhlIERlbnZlciBBcnQgTXVzZXVtIChEQU0pIGlzIG9uZSBvZiB0aGUgbGFyZ2VzdCBhcnQgbXVzZXVtcyBiZXR3ZWVuIENoaWNhZ28gYW5kIHRoZSBXZXN0IENvYXN0LiBMb2NhdGVkIGluIHRoZSBDaXZpYyBDZW50ZXIgc2VjdGlvbiBuZWFyIHRoZSBDb2xvcmFkbyBTdGF0ZSBDYXBpdG9sLCB0aGUgQXJ0IE11c2V1bSBoYXMgbW9yZSB0aGFuIDcwLDAwMCBvYmplY3RzIGluIGl0cyBwZXJtYW5lbnQgY29sbGVjdGlvbiwgd2l0aCBhcHByb3hpbWF0ZWx5IDE4LDAwMCBpdGVtcyBpbiBOYXRpdmUgQXJ0cyBEZXBhcnRtZW50LCB3aGljaCBpbmNsdWRlcyB0aGUgQW1lcmljYW4gSW5kaWFuIGNvbGxlY3Rpb24uIE9mIHBhcnRpY3VsYXIgaW50ZXJlc3QgaXMgdGhlIHN0dW5uaW5nIEZyZWRlcmljIEMuIApUaGV5IHdvcmtlZCBoYXJkIHRvIGZlbWluaXplIHNwb3J0cyAgdG8gd2VhciAiY3V0ZSIgbGl0dGxlIG91dGZpdHMgb3IgZmxvY2sgdG8gc3BvcnRzIHRoYXQgbWFkZSB0aGVtIHRoaW4gKGxpa2UgdHJhY2sgb3IgdGVubmlzKSBhbmQgbm90IHNwb3J0cyB0aGF0IG1pZ2h0IGJ1bGsgdGhlbSB1cCAobGlrZSBydWdieSBvciBib2R5YnVpbGRpbmcpLiBTdGlsbCwgZGVzcGl0ZSB0aGUgYW54aWV0eSBvdmVyIHNwb3J0cyBhcyBhIG1hc2N1bGluaXppbmcgaW5mbHVlbmNlLCB3b21lbiBzcG9ydHMgZ3JldyBhbG9uZ3NpZGUgbWVuIHlldCwgd2hhdCB0byBkbyB3aGVuIHNvbWVvbmUgbGlrZSBTZW1lbnlhIGNvbWVzIGFsb25nPyBtdXNjdWxhciwgY2xlYXJseSBmYXN0LCBjbGVhcmx5IG5vdCB0cnlpbmcgdG8gbG9vayBmZW1pbmluZSwgU2VtZW55YSBib2R5IGFuZCBnZW5kZXIgcHJlc2VudGF0aW9uIGFjdHMgYXMgdGhyZWF0IHRvIHRoZSBzdXBwb3NlZGx5IGNsZWFyIHNlcGFyYXRpb24gYmV0d2VlbiBtZW4gYW5kIHdvbWVuLiBIZXIgYm9keSBpcyBzbyB0aHJlYXRlbmluZyB0aGF0IGl0IGhhZCB0byBiZSBzdHVkaWVkIGZvciB0ZW4gbW9udGhzIHRvIGRlY2lkZSB0byB3aGljaCBzZXggaXQgYmVsb25ncy4uIApJIHByb2JhYmx5IGdvaW5nIHRvIGdldCBkb3dudm90ZWQgZm9yIHRoaXMgYnV0IHRoYXQgZXBpc29kZSB3aXRoIFRhZSBnYXZlIG1lIGEgcGF1c2UgYmFjayB0aGVuIGFzIGEgbmV3IEFSTVkuIEkgdGhvdWdodCB0aGF0IGhlIHdhcyB0b28gaW1wdWxzaXZlIGF0IHRoZSB0aW1lIGFuZCBkaWRuIHRoaW5rIGFib3V0IHRoZSBjb25zZXF1ZW5jZXMgb2YgZG9pbmcgc29tZXRoaW5nIHNvIHJlY2tsZXNzIGluIGEgY291bnRyeSBoZSBoYWQgbmV2ZXIgdmlzaXRlZCBiZWZvcmUuLiAKQW5kIHRoYXQgd2FzIGlsbGVnYWwuIApCdXQgbm93IHdpdGggdGhlIGVjb25vbWljIHVwdHVybiwgY2FzaW5vcyBhcmUgYmFjayBpbiBidXNpbmVzcywgZXNwZWNpYWxseSBpbiBNYWNhdSwgdGhlIGZvcm1lciBQb3J0dWd1ZXNlIGNvbG9ueSBvbiB0aGUgc291dGggQ2hpbmEgY29hc3QsIHdoaWNoIHdhcyBoaXQgaGFyZCBieSB0aGUgZmluYW5jaWFsIGNyaXNpcy5UaGFua3MgbGFyZ2VseSB0byBDaGluZXNlIGdhbWJsZXJzLCBNYWNhdSwgaG9tZSB0byB0aGUgd29ybGQncyBiaWdnZXN0IGNhc2lubyBwYWxhY2UsIGlzIGFnYWluIHdpdG5lc3NpbmcgdGhlIGdsaXR6LCB0aGUgZ2xhbW91ciBhbmQsIG9mIGNvdXJzZSwgbm9uIHN0b3AgZ2FtYmxpbmcuQnV0IE1hY2F1IGlzIG5vdCB0aGUgb25seSBwbGFjZSB3aGVyZSBjYXNpbm9zIGFyZSBtaW50aW5nIG1vbmV5LkhlcmUgaXMgYSBsb29rIGF0IHRoZSAyMCBiaWdnZXN0IGNhc2lub3MgaW4gdGhlIHdvcmxkLlJlc3RhdXJhbnRzIGFuZCBiYXJzOiAyOUhvdGVsIHJvb21zOiA4MjRHaXZlbiBMYXMgVmVnYXMnIHJlcHV0YXRpb24gYXMgQW1lcmljYSdzIGZhdm91cml0ZSBwbGF5Z3JvdW5kLCBpdCBpcyBzb21ld2hhdCBzdXJwcmlzaW5nIHRoYXQgdGhlIGdhbWJsaW5nIGh1YiBkb2VzIG5vdCBoYXZlIHRoZSBiaWdnZXN0IGNhc2lubyBpbiB0aGUgVVMuVGhhdCBob25vdXIgZ29lcyB0byBGb3h3b29kcywgYSBjb21wbGV4IG9mIHNpeCBjYXNpbm9zIHdpdGggMTcgZGlmZmVyZW50IHR5cGVzIG9mIHRhYmxlIGdhbWVzLCBpbmNsdWRpbmcgMTAwIGZvciBwb2tlci5PcGVuZWQgaW4gMTk4NiBpbiBDb25uZWN0aWN1dCwgaXQgaXMgbWFuYWdlZCBieSB0aGUgTWFzaGFudHVja2V0IFBlcXVvdCBJbmRpYW4gVHJpYmUsIGFuZCBiZW5lZml0cyBkdWUgaXRzIGNsb3NlIHByb3hpbWl0eSB0byBOZXcgWW9yayBhbmQgQm9zdG9uLkluIGFkZGl0aW9uIHRvIGl0cyBjYXNpbm8sIEZveHdvb2RzIGhhcyBvbmUgb2YgdGhlIHdvcmxkJ3MgbGFyZ2VzdCBiaW5nbyBoYWxscy4gQm9yZ2F0YSBIb3RlbCBDYXNpbm8gYW5kIFNwYSwgQXRsYW50aWMgQ2l0eSwgVW5pdGVkIFN0YXRlc1NxdWFyZSBmZWV0OiAxNjEsMDAwR2FtaW5nIG1hY2hpbmVzOiA0LDEwMFRhYmxlIGFuZCBwb2tlciBnYW1lczogMjg1UmVzdGF1cmFudHMgYW5kIGJhcnM6IDE3SG90ZWwgcm9vbXM6IDIsMDAySXQgbWF5IGJlIGNhbGxlZCAibGl0dGxlIHZpbGxhZ2UiICBhcyBpdHMgbmFtZSBtZWFucyBpbiBJdGFsaWFuICBidXQgdGhlIEJvcmdhdGEgaXMgYW55dGhpbmcgYnV0IHNtYWxsLlRoZSAkMS4xIGJpbGxpb24gaG90ZWwsIGNhc2lubywgYW5kIHNwYSBpcyB0aGUgbGFyZ2VzdCByZXNvcnQgaW4gQXRsYW50aWMgQ2l0eS5UaGlzIG1hbW1vdGggZ2FtYmxpbmcgY2VudHJlIG9wZW5lZCBpbiAyMDAzIGFuZCBpcyBvd25lZCBieSBNYXJpbmEgRGlzdHJpY3QgRGV2ZWxvcG1lbnQgQ29ycCwgYSBzdWJzaWRpYXJ5IG9mIEJveWQgR2FtaW5nLCB3aGljaCBvcGVyYXRlcyBjYXNpbm9zIGluIEF0bGFudGljIENpdHkgYW5kIExhcyBWZWdhcyBhcyB3ZWxsIGFzIElsbGlub2lzLCBJbmRpYW5hLCBMb3Vpc2lhbmEgYW5kIE1pc3Npc3NpcHBpLiAKSWYgeW91IHN0YXJ0ZWQgd2l0aCBGYXRlL1plcm8gYW5kIHdhbnQgdG8gYXZvaWQgdGhlIHNwb2lsZXJzIERlZW4gaW5jbHVkZWQgZm9yIHNvbWUgZHVtYiByZWFzb24sIGl0IHdpbGwgZml0IGluIG5pY2VseSBhZnRlciB5b3UgZmluaXNoIFVCVy5UaGUgcXVhbGl0eSBjb21wbGFpbnRzIGFyZSB2YWxpZCwgYnV0IGl0IHN0aWxsIHByZXR0eSBjb29sIHdpdGggc29tZSB3ZWxsIGRvbmUgc2NlbmVzLiBJdCBhbHNvIHRoZSBTYWJlciBhcmMsIHNvIGl0IHRpZXMgaW4gd2VsbCB3aXRoIFplcm8uIApJIGhhZCB0aG91Z2h0IGZvciBzdXJlIHRoYXQgdGhlIEdlcm1hbiBsaW5lYWdlIHdvdWxkIGhhdmUgYmVlbiBtb3JlIGxpa2VseS4gCkhvbGQgaGVyIHJpZ2h0IGhhbmQsIHBhbG0gZmFjaW5nIHVwd2FyZCwgYW5kIGludGVydHdpbmUgeW91ciBmaW5nZXJzIHdpdGggaGVycyB1c2luZyB5b3VyIGxlZnQgaGFuZC4uIApIb3dldmVyLCBSb3kgV2FsbHkgZGVjaWRlZCBub3QgdG8gcHJlc3MgY2hhcmdlcywgc28gaW4gdGhlIGFic2VuY2Ugb2YgdGhlIG93bmVyIGJlaW5nIGJvdGhlcmVkIHRvIHB1cnN1ZSBpdCwgaXQgcmVhbGx5IHdhc24gd29ydGggdGhlIGVmZm9ydC4gSXMgdGhhdCBhbiBhY2N1cmF0ZSBkZXNjcmlwdGlvbiB1c2luZyB0aGlzIG1vdmllIHJlZmVyZW5jZT8uIApPbmNlIGEgY2VydGFpbiBhbW91bnQgb2YgbWVyY2hhbmRpc2Ugd2FzIHN0b2xlbiwgdGhlIG5leHQgdGltZSB0aGUgcGVyc29uIGNhbWUgaW4sIHRoZXkgd291bGQgY2FsbCB0aGUgY29wcyBhbmQgYmFzaWNhbGx5IHNldCB1cCBhIG1pbmkgc3RpbmcgZm9yIHdoZW4gdGhleSB0cmllZCB0byBsZWF2ZSB0aGUgc3RvcmUuLiAKQ2FsbDogV2hlbiB5b3Ugc2F5IGNhbGwsIHRoaXMgbWVhbnMgeW91IGFyZSBtYXRjaGluZyB0aGUgcHJldmlvdXMgYmV0IG1hZGUuCkV4cG9ydHMgdG8gTWV4aWNvIGhhdmUgcmlzZW4gZnJvbSAkNDEuNTggYmlsbGlvbiBpbiAxOTkzLCB0aGUgbGFzdCB5ZWFyIGJlZm9yZSBOQUZUQSwgdG8gJDIzNS43IGJpbGxpb24gaW4gMjAxNSBhbiBhbG1vc3Qgc2l4IGZvbGQgaW5jcmVhc2UuIAooRnVsbCBBbnN3ZXIpLiAKVEJIIHRob3VnaCBJIGRpZG4ga25vdyB1bnRpbCBJIGxvb2tlZCBpdCB1cCByaWdodCBub3cgdGhhdCAicm9zaW4iIGNvdWxkIGJlIGEgY29ycmVjdCBzcGVsbGluZy4KMTRfX19fX19fU0hFQk9ZR0FOIFBSRVNTLCBGcmlkYXksIEF1Zy4gCkRvbnQgZG8gYW55dGhpbmcgbW9yZSBvbmNlIGl0cyBjaGFuZ2VkLCBnbyBpbnRvIHlvdXIgZ2FtZSwgZ2V0IGludG8gYW5vdGhlciBmaWdodCBhbmQgd2F0Y2ggeW91ciBoZWFsdGguIApUaGVyZSB0aGUgd2hvbGUgaXNzdWUgb2YgImNsYXNzIiBhbmQgInByZXN0aWdlIiBhbmQgImRpc3RpbmN0aW9uLiIgUGFsaW4gY2FtZSBmcm9tIHNvbWUgcHJvdmluY2lhbCB0b3duIGluIGEgcHJvdmluY2lhbCBzdGF0ZSB0byBhIGJpZywgYnV0IHByb3ZpbmNpYWwsIHN0YXRlIHVuaXZlcnNpdHkgYmFjayB0byB0aGUgcHJvdmluY2lhbCBzdGF0ZS4gCllvdSB3aWxsIG5lZWQgMiBDIGJhdHRlcmllcyBpbiBjYXNlIHlvdSBkb24ndCBoYXZlIGVsZWN0cmljYWwgc3VwcGx5IGF2YWlsYWJsZS4gCjExaDMwIExhIHByb3RlY3Rpb24gZGUgbCdlbmZhbmNlIHBhciBsZSBkcm9pdCBjaXZpbApJIERJRCBkbyB0aGUgIm1peCBpbiB0aGUgcGFsbSIgdGVjaG5pcXVlIHlvdSB1c2luZyBhbmQgSSBnb3QgYSBuaWNlIHNlbnNpdGl2aXR5IGFuZCBzbGlnaHQgYWxsZXJneSBmb3IgaXQuIEkgaGFkIHRvIHN0b3AgdXNpbmcgYSBjb3VwbGUgRU9zIGNvbXBsZXRlbHkgZm9yIGEgZmV3IG1vbnRocyBiZWNhdXNlIG9mIGl0LgpObywgYmVjYXVzZSBhIGdlbm9jaWRlIHJlcXVpcmVzIG11cmRlcm91cyBpbnRlbnQuIApBZnRlciBnYWluaW5nIGNvbnNpZGVyYWJsZSBleHBlcmllbmNlIGluIHBsYXlpbmcgcG9rZXIsIHlvdSBtYXkgYmUgYWJsZSB0byBtYWtlIGEgbGl2aW5nIG91dCBvZiBvbmxpbmUgcG9rZXIuIApUaGV5IHNhaWQgdGhlIHNocmVkZGVyIHNlcnZpY2Ugd2FzIHJlZ3VsYXIgdG9vLCBidXQgZG8gdGhleSByZWd1bGFybHkgZGlzcG9zZSBvZiBjb21wdXRlcnMsIGFuZCBhbHNvIEkgcmVhZCB0aGVyZSB3ZXJlIHN1aXRjYXNlcyB0b28sIGJ1dCBpbSBub3Qgc3VyZSBpZiB0aGF0IGNvbmZpcm1lZC4uIApJbiBhbiBlZmZvcnQgdG8gcmVnYWluIGl0cyByZXB1dGF0aW9uIGZvciBmcnVnYWxpdHksIFZvbGtzd2FnZW4gQ2FuYWRhIGNob3NlIHRvIHJldGFpbiBpdHMgb2xkZXIgZ2VuZXJhdGlvbiBHb2xmIGFuZCBKZXR0YSBtb2RlbHMgYXMgYWZmb3JkYWJsZSBlbnRyeSBsZXZlbCBlY29ubyBib3hlcyB3aXRoaW4gaXRzIGxpbmV1cCBvZiBtb3JlIHNvcGhpc3RpY2F0ZWQgdmVoaWNsZXMuIERvaW5nIHNvIGVuYWJsZXMgdGhlICJwZW9wbGVzIGNhciIgY29tcGFueSB0byBjb21wZXRlIGluIHRoaXMgYnVyZ2VvbmluZywgcHJvZml0YWJsZSBzZWdtZW50IG9mIHRoZSBhdXRvIGluZHVzdHJ5Li4gCkl0IGFsd2F5cyBwbGVhc2VzIG1lIHRvIGhlYXIgYWNjb21wbGlzaGVkIHBlb3BsZSB0YWxrIGFib3V0IHRoZSBvbmVuZXNzIG9mIGV4aXN0ZW5jZS4gClBva2VyIGNhcmQgcHJvdGVjdG9ycyBhcmUgbm93IHNvbWV0aGluZyBtb3JlIHRoYW4gY2FyZCBjb3ZlcnMuIFRoZXNlIGFyZSB0aGUgYmVzdCBwaWVjZXMgdGhhdCBzZXJ2ZSB5b3VyIGZhc2hpb24gYW5kIHN0eWxlIGluIGEgY2FzaW5vLiAKUGx1cyBJIHRoaW5rIEdSUk0gaGFzIGEgbG90IHdyaXR0ZW4gZm9yIEEgRHJlYW0gb2YgU3ByaW5nIChiZWluZyBvdmVyIGZsb3cgZnJvbSBhbGwgdGhpcyB0aW1lIGhlJ3MgdGFraW5nIG9uIFdpbmRzIG9mIFdpbnRlcikuIEJ1dCBvbmNlIGhlJ3MgZG9uZSB3aXRoIDYgdGhlbiB0aGV5IGNhbiB3b3JyeSBhYm91dCBjbGVhbmluZyB1cCBhbmQgZWRpdGluZyA3LiAKSmV0Qmx1ZSBBaXJ3YXlzIENvcnAuIENhbmNlbGVkIDEsMjAwIGZsaWdodHMgZm9yIFN1bmRheSB0aHJvdWdoIFR1ZXNkYXkuIApPZmZpY2lhbHMgZnJvbSB0aGUgQm91bGRlciBDb2xsZWdlIG9mIE1hc3NhZ2UgVGhlcmFweSwgdGhlIHN0YXRlIGFuZCB0aGUgTGFrZXdvb2Qgc2Nob29sIGhlbGQgYSBtZWV0aW5nIHdpdGggc3R1ZGVudHMgRnJpZGF5IHRvIGV4cGxhaW4gdGhlIGNsb3N1cmUgYW5kIHRoZWlyIG9wdGlvbnMuIEF2YWxsb25lLCB3aG8gd2lsbCBzb29uIGNvbXBsZXRlIHRoZSB0aGlyZCBxdWFydGVyIG9mIGFuIDgwMCBob3VyIHByb2dyYW0gYXQgdGhlIHNjaG9vbCwgc2FpZCB0aGUgbmV3cyBhYm91dCB0aGUgc2Nob29sJ3MgYWJydXB0IGNsb3N1cmUgd2FzICJodXJ0ZnVsLiIiVGhlIG1vc3Qgc2hvY2tpbmcgcGFydCBpcyBob3cgcXVpY2tseSBpdCB3YXMgaGFwcGVuaW5nLCIgaGUgc2FpZC4gIk91ciB0ZWFjaGVycyBhbmQgbXkgY2xhc3NtYXRlcyB3aG8gaGF2ZSBmYW1pbGllcyBhbmQgY2hpbGRyZW4gICB0aGUgaW1wYWN0IGl0IHdpbGwgaGF2ZSBvbiB0aGUgY291cnNlIG9mIHRoZWlyIGxpdmVzIGlzIHByb2JhYmx5IHRoZSBtb3N0IGRpc3RyZXNzaW5nLiJBdmFsbG9uZSBzYWlkIGhlIGZpcnN0IGhlYXJkIGFib3V0IHRoZSBCb3VsZGVyIENvbGxlZ2Ugb2YgTWFzc2FnZSBUaGVyYXB5IHdoaWxlIHdvcmtpbmcgYXQgYSBoZWFsaW5nIGFydHMgY2VudGVyIGluIE1hc3NhY2h1c2V0dHMuIApZb3Ugc2ltcGx5IGhhdmUgdG8gY2xpY2sgYSBmZXcgYnV0dG9ucyBhbmQgeW91cmUgcmVhZHkgdG8gcGxheS4gCkluIGFuIGhvdXIgYW5kIDQ1IG1pbnV0ZSBzaG93ICh3aXRoIGEgMTUgbWludXRlIGludGVybWlzc2lvbiksIHRoZSBiYW5kIHBsYXllZCAyMCBzb25ncywgYWxsIG9mIHRoZW0gc291bmRpbmcgYXMgZ29vZCBhcyB0aGV5IGRpZCBtb3JlIHRoYW4gdHdvIGRlY2FkZXMgYWdvLgpDb25jb3Vyc2VzIEIgYW5kIEMgaG9sZCB0aGVpciBzaG9wcyBhbmQgZGluaW5nIHBsYWNlcyBvbiB0aGUgc2Vjb25kIGFuZCB0aGlyZCBsZXZlbHMuIFlvdSdsbCBiZSBwbGVhc2VkIGZpbmQgdGhhdCBlYWNoIGhhcyBpdHMgb3duIHNldCBvZiBhcnQgZXhoaWJpdHMgdG8gYnJvd3NlIHRocm91Z2ggd2hpbGUga2lsbGluZyB0aW1lLiAKUTogV2h5IGRvZXMgbXkgRmFjZWJvb2sgcHJvZmlsZSBwaWN0dXJlIGFuZCBuYW1lIGFwcGVhciBvbiB0aGUgY29tbWVudHMgcGFnZSB3aGVuIEkgaGF2ZW4ndCBwb3N0ZWQgYSBjb21tZW50PwpIZSBzYWlkIHRoZSBzaGlyZXBsYW5uaW5nIHNjaGVtZSBoYWQgbm8gcHJvdmlzaW9uIGZvciB3aGVyZSBwb2tlciBtYWNoaW5lcyBjb3VsZCBiZSBzaXRlZCBpZiBhIGRldmVsb3BtZW50IGFwcGxpY2F0aW9uIHdhcyBzdWNjZXNzZnVsLiAiVGhpcyBhbGxpYW5jZSBjYW4gaGVscCB3aXRoIHRoZSBwbGFubmluZyBzY2hlbWUgdG8gbWFrZSBpdCBzdHJvbmdlciB0byBzdG9wIHBva2llcyBjb21pbmcgaW4sIiBNciBGbG9yZW5jZSBzYWlkLiBJbmRpZ28gaGFzIG5vdCBoYWQgZm9ybWFsIGludGVyZXN0IGluIGEgYmlkIGZvcnBva2VyIG1hY2hpbmVzIHNpbmNlIDIwMDQuIApUaGlzIHN0cmF0YWdlbSBsb29rcyBvYnZpb3VzIGdpdmVuIHRoZSBlaWdodCB5ZWFycyBvZiBNYW5tb2hhbiBTaW5naCBwcmltZSBtaW5pc3RlcnNoaXAuIApVcG9uIHN3aXRjaGluZyBvbiwgeW91IGNhbiBoZWFyIGl0J3MgYWJvdXQgdG8gc3RhcnQgdGhlbiBkb2Vzbid0IChsaWtlIG9uZSBicnVzaCAob3V0IG9mIHR3bykgYXJlIGZpbmlzaGVkLiBJIG9wZW5lZCBpdCB1cCwgYW5kIGZvdW5kIGh1bmRyZWRzIG9mIGlyb24gZmlsaW5nIHR5cGUgdGhpbmdzIGV2ZXJ5d2hlcmUuIFlvdSBjYW4gc2VlIHRoZSBzYW1lIGNvbG9yIHNjcmF0Y2hlcyBvbiB0aGUgY29tbXV0YXRvciBhbmQgYSB0ZWVueSBsaXR0bGUgYml0IG9mIHRoZSByZW1haW5pbmcgYnJ1c2guLiAKU2luY2UsIEkgaG9uZXN0bHkgdmlld2VkIG15IGxpZmUgYXMgYSBwcml2aWxlZ2UgYW5kIEkgd2FudCB0byBtYWtlIHRoZSBncmVhdGVzdCB1c2Ugb2YgaXQuIApCZWluZyBnaXZlbiBhIHNob3J0IHBlcmlvZCB0byByZXZpZXcgYW5kIGZvcm11bGF0ZSBpZGVhcyAgIG5vdCBmdWxsIHJlc3BvbnNlcyAgIHdvdWxkIHNob3cgdGhhdCBiZXR0ZXIgSU1PLiAKSGkgdGhlcmUhIFdlIHJlbW92ZWQgeW91ciBxdWVzdGlvbiBiZWNhdXNlIGl0IGFza2luZyBhYm91dCBzb21ldGhpbmcgbGlrZSBhIG5hbWUsIGEgbnVtYmVyLCBhIGRhdGUgb3IgdGltZSwgYSBsb2NhdGlvbiwgb3IgdGhlIG9yaWdpbiBvZiBhIHdvcmQgICBiYXNpYyBmYWN0cy4gV2UgZW5jb3VyYWdlIHlvdSB0byBpbnN0ZWFkIHBvc3QgdGhpcyBxdWVzdGlvbiBpbiB0aGUgd2Vla2x5LCBzdGlja2llZCAiU2hvcnQgQW5zd2VycyB0byBTaW1wbGUgUXVlc3Rpb25zIiB0aHJlYWQsIHdoZXJlIHF1ZXN0aW9ucyBvZiBiYXNpYyBmYWN0IGNhbiBiZSBhbnN3ZXJlZCBzdWNjaW5jdGx5LCBiYXNlZCBvbiByZWxpYWJsZSBzb3VyY2VzLiBGb3IgbW9yZSBpbmZvcm1hdGlvbiBvbiB0aGlzIHJ1bGUsIHBsZWFzZSBzZWUgdGhpcyB0aHJlYWQuLiAKVGV4YXMgSG9sZCAnZW0gaXMgdGhlIG1vc3QgcG9wdWxhciBwb2tlciBnYW1lIHZhcmlhdGlvbiBpbiBib3RoIGxhbmQgYmFzZWQgYW5kIG9ubGluZSBwb2tlciBjYXJkIHJvb21zLiBUZXhhcyBob2xkICdlbSBvcmlnaW5hdGVkIGZyb20gYSB2YXJpYXRpb24gb2Ygc2V2ZW4gY2FyZCBzdHVkIGluIHRoZSBlYXJseSAyMHRoIENlbnR1cnkuIENhc2lub3MuIApJdCdzIGEgbGVhcm5pbmcgbGVzc29uIGZvciBzdXJlLiBZb3UgYWN0dWFsbHkgYWNjdXNlZCBoaW0gb2YgYW5nbGUgc2hvb3Rpbmc/IFRvIGJlIGhvbmVzdCwgaGUgcHJvYmFibHkgZGlkIGV2ZXJ5dGhpbmcgdGhlIGV4YWN0IG9wcG9zaXRlIG9mIGFuIGFuZ2xlIHNob290LgpVbnRlciBGcmV1bmRlbiBnaWJ0IGVzIGh1ZmlnIGRpZSBtZWhyIG9kZXIgd2VuaWdlciBiaW5kZW5kZSBWZXJlaW5iYXJ1bmcsIGZyIGVpbmUgZmVzdGdlbGVndGUgWmVpdCB6dSBzcGllbGVuLiBOdXIgYmVpIFRvdGFsdmVybHVzdCBzZWluZXMgS2FwaXRhbHMga2FubiBlaW4gU3BpZWxlciBhdWZzdGVoZW4gdW5kIGdlaGVuLgpVZ2FzIHdpbGwgYmUgbG9va2luZyB0byB3aW4gaGlzIG5pbnRoIHN0cmFpZ2h0IGJvdXQsIHdoaWxlIFBvcnRlciBtYWtlcyB0aGUgZmlyc3QgZGVmZW5zZSBvZiB0aGUgYmVsdCBoZSBjYXB0dXJlZCB3aXRoIGEgdW5hbmltb3VzIGRlY2lzaW9uIG92ZXIgRGFubnkgR2FyY2lhIGxhc3QgU2VwdGVtYmVyLi4gClRoZXJlIGhhcyBiZWVuIGEgc3RlYWR5IG1pZ3JhdGlvbiBhd2F5IGZyb20gZGVmaW5lZCBiZW5lZml0IHBlbnNpb24gcGxhbnMsIHdoaWNoIGd1YXJhbnRlZSBhIHNldCBwYXlvdXQgdG8gZW1wbG95ZWVzIGluIHJldGlyZW1lbnQuCkkgY29sbGVjdGVkIGR1cmluZyA1ZSBhbmQgSSB3YW50ZWQgdG8gZ2V0IGludG8gcGxheWluZyAoSSBldmVuIGJvdWdodCB0aGUgcnVsZWJvb2spLCBidXQgd2FzIGp1c3Qgc28gb3ZlcndoZWxtZWQgYnkgYWxsIHRoZSBydWxlcyBhbmQgaGFkIG5vIG9uZSB0byBndWlkZSBtZSBhdCB0aGUgdGltZS4gTm93LCB3aGVuIEkgZ290IGJhY2sgaW50byB0aGUgaG9iYnkgSSBmZWx0IGxpa2UgSSB3YXMgYWJsZSB0byBnZXQgaW50byBwbGF5aW5nIHdheSBlYXNpZXIgYW5kIEkgbG92ZSBpdC4gClRoYXQgZXhhY3RseSB0aGUgcG9pbnQgb2YgdGhlIEtvcmVhbiBkZWZhbWF0aW9uIGxhdy4gV2UgcHJvYmFibHkgd2lsbCBuZXZlciBoYXZlIHRoZSBzaGl0IHNob3cgdGhhdCBnb2luZyBvbiBpbiB0aGUgd2VzdCByaWdodCBub3cgYmVjYXVzZSBpbiBLb3JlYSB5b3UgY2FuIHB1YmxpY2x5IG5hbWUgYW5kIHNoYW1lIGxpa2UgdGhpcy4gVGhlcmUgaXMgYSB2ZXJ5IGxpbWl0ZWQgZ3JvdXAgb2YgcGVvcGxlIHdobyBjb3VsZCBiZSBwdWJsaWNseSBhY2N1c2VkIG9mIGNlcnRhaW4gdGhpbmdzLiAKVGhlIEZveCBhbmQgQm91bGRlciBUaGVhdGVyIGJyaW5nIGluIGJpZyBuYW1lIGFjdHMuIApUaGUgcmFpZCBjdWxtaW5hdGVkIGEgZml2ZSBtb250aCBpbnZlc3RpZ2F0aW9uIGJ5IGNpdHkgcG9saWNlIGluIGNvb3BlcmF0aW9uIHdpdGggU29uICBuZXIncyBvZmZpY2UuIApUaGlzIHRlcm0gaXMgYWxzbyB1c2VkIGZvciBhIGhhbmQgdGhhdCBpcyB2ZXJ5IGdvb2QsIGJ1dCBub3QgYSB3aW5uZXIgKHNvIHlvdSBhcmUgZGVmaW5pdGVseSBnb2luZyB0byBsb3NlIG1vbmV5IG9uIGl0KS4gClRoYXQgaXMgdGhlIHBvbGlzaCBwb2tlciB0aGF0IHdlIHBsYXllZCB0b28uIApJdCB3YXMgc2V0IHVwIGZvciB0ZW4gcGVvcGxlIHRvIHBsYXkgYXQgb25jZSBhbmQgd2hpbGUgaXQgZGlkbid0IGhhdmUgYSBkZWFsZXIgc2xvdCwgd2Ugd291bGQgdGFrZSB0aGF0IGV4dHJhIHBvc2l0aW9uIGluIGEgaGVhcnRiZWF0LiAKSGFzIG5vYm9keSBldmVyIGhlYXJkIG9mIGRpc3B1dGluZyBhIGNoYXJnZT8gVGhleSBkb24gbmVlZCB0byBnaXZlIHlvdSBhIHJlZnVuZCAgIHRoYXQgYSBjb3VydGVzeSBvbiB0aGUgcGFydCBvZiB0aGUgbWVyY2hhbnQuIFlvdXIgYmFuayB3aWxsIHByb3RlY3QgeW91ICAgaWYgdGhlIGdpZyBkb2VzbiBoYXBwZW4gYXMgc29sZCwgaWUgaWYgdGhlIHRhbGVudCBpc24gdGhlcmUsIHlvdSBjYW4gZGlzcHV0ZSB0aGUgY2hhcmdlLiAKSSB0aGluayBBbW1hIHRhcmdldGVkIGhlciB2aWN0aW1zIGJvdGggYmVjYXVzZSB0aGV5IHJlY2VpdmVkIGF0dGVudGlvbiBmcm9tIEFkb3JhIG9yIENhbWlsbGUsIEFORCBiZWNhdXNlIHRoZXkgd2VyZSBkaWZmZXJlbnQuIEl0IGEgc2Vuc2Ugb2YgZW50aXRsZW1lbnQgdGhhdCB0dXJucyB0byByYWdlLiBTaGUgZmVsdCBzaGUgd2FzIGVudGl0bGVkIHRvIHRoZSBhdHRlbnRpb24gb2YgaGVyIG1vdGhlciBhbmQgbGF0ZXIgQ2FtaWxsZS4gClNvIGFzIGEgbm9udGhlaXN0LCBJIHNob3VsZCB0aGVuIGJlIGFsbG93ZWQgdG8gbm90IG1ha2UgdGhpbmdzIGFuZCBzZWxsIHRoZW0gdG8gcmVsaWdpb3VzIHBlb3BsZSBjb3JyZWN0PyBTaW5jZSBub250aGVpc20gaXMgdGhhdCB0aGVyZSBnb2QgZG9lc24gbWF0dGVyIHRvIG1lLiBOb3IgZG9lcyB0aGVpciBtb3JhbHMgYW5kIHZhbHVlcy4gU28gaW4gbXkgYmlibGUgaXQgc2F5cyBkaXNjcmltaW5hdGUgYWdhaW5zdCB0aG9zZSB3aG9zZSBvcGluaW9ucyBhcmUgZGlmZmVyZW50IHRoZW4gbWluZS4uIApJbiBhIG1lZGl1bSBza2lsbGV0IG92ZXIgdGhlIG1lZGl1bSBoaWdoIGhlYXQsIHRvYXN0IHRoZSBvYXRzLCBzdGlycmluZyBvZnRlbiwgdW50aWwgZnJhZ3JhbnQsIGFib3V0IDUgbWludXRlcy4gQWRkIHRoZSBzdWdhciBhbmQgdGhlIHNhbHQsIHRoZW4gc3RpciB1bnRpbCB0aGUgc3VnYXIgbWVsdHMgYW5kIHR1cm5zIGdvbGRlbiBicm93bi4gClRoZSBmaXJzdCBzdGFnZSBvZiB0aGUgcHJvamVjdCBhdCB0aGUgS2F3YW5hIFNwb3J0cyBQcmVjaW5jdCBvbiBTcG9ydHNtYW5zIFBkZSBhbmQgTWFpbiBEciwgbmVhciB0aGUgU3Vuc2hpbmUgQ29hc3QgU3RhZGl1bSwgd2lsbCBiZSBhIGhpZ2ggcGVyZm9ybWFuY2UgYnVpbGRpbmcga25vd24gYXMgVGhlIFNwb3J0cyBIdWIgYW5kIHdpbGwgaW5jbHVkZSBhIG11bHRpIHB1cnBvc2UsIHJlZ2lvbmFsIHNwb3J0cyBhbmQgY29tbXVuaXR5IGh1Yi4KVGhlIGxvbmcsIGNvbXBsaWNhdGVkIHByb2Nlc3Mgb2YgbGFib3IgYW5kIGRlbGl2ZXIgaXMgYmVsaWV2ZWQgdG8gYmUgc3RhcnRlZCBieSB0aGUgYmFieSBoZXJzZWxmLiBXaGVuIHRoZSBiYWJ5IHJlYWNoZXMgZnVsbCBzaXplIHNoZSByZWxlYXNlcyBob3Jtb25lcyB0aGF0IGluIHR1cm4gdHJpZ2dlciB0aGUgcmVsZWFzZSBvZiBhIG51bWJlciBvZiBvdGhlciBob3Jtb25lcyBieSB0aGUgbW90aGVyIHRoYXQgY2F1c2UgdGhlIG11c2NsZXMgb2YgdGhlIHV0ZXJ1cyB0byBjb250cmFjdC4gVGhlc2Ugc2FtZSBjaGVtaWNhbHMgYWxzbyBzbG93IHRoZSBicmVhdGhpbmcgbW92ZW1lbnRzIG9mIHRoZSBmZXRhbCBsdW5ncywgd2hpY2ggY2FycnkgYW1uaW90aWMgZmx1aWQgaW4gYW5kIG91dCwgd2hpY2ggaGFkIGJlY29tZSByZWd1bGFyIGVhcmxpZXIgaW4gdGhlIHRoaXJkIHRyaW1lc3Rlci4gRHVyaW5nIGxhYm9yLCB0aGUgbW92ZW1lbnRzIHdpbGwgY2Vhc2UgYWxtb3N0IGNvbXBsZXRlbHksIHRoZW4gc3RhcnQgc3VkZGVubHkgYW5kIGVuZXJnZXRpY2FsbHkgd2hlbiB0aGUgYmFieSBlbnRlcnMgdGhlIHdvcmxkLgpCdXQgZm9yIHNvbWUgcGVvcGxlLCBleHBvc3VyZSB0byBzdW5saWdodCBjYW4gY2F1c2UgYSByZWQgcmFzaCBhbmQgYmxvdGNoeSwgc2NhbHkgc2tpbiAgIHRoaXMgaXMgY2FsbGVkIHBob3Rvc2Vuc2l0aXZpdHksIGFuZCBpcyBjYW4gYmUgY2F1c2VkIGJ5IGFuIGltbXVub2xvZ2ljYWwgcmVzcG9uc2UgKGl0J3MgYSBzdW4gYWxsZXJneSkuIApEbyB5b3UgdGhpbmsgZGV2ZWxvcGVycyB3YW50IHRvIHNoaXAgb3V0IGEgYnJva2VuIGdhbWU/IFRoaXMgcG9zdCBpcyByaWRpY3Vsb3VzLiBZb3UgY2xlYXJseSBoYXZlIG5vIGlkZWEgaG93IGltcG9ydGFudCBpdCBpcyB0byBrZWVwIGdhbWUgZGV2ZWxvcGVycyBhcm91bmQgd29ya2luZyBvbiBnYW1lcyB0aGV5IGZhbWlsaWFyIHdpdGggYWxvbmdzaWRlIHRoZWlyIHBlZXJzLiBMYXlvZmZzIHdpbGwgY2VydGFpbmx5IG1lYW4geW91IGdvbm5hIGdldCBnYW1lcyBvZiBsZXNzZXIgcXVhbGl0eSBvdmVyIHRpbWUuIApIb3cgb2Z0ZW4gYXJlIHlvdSBnb2luZyB0byBiZSBtYWtpbmcgcmljZT8gSWYgdGhlIGFuc3dlciBpcyBvbmNlIGEgbW9udGgsIHBlcmhhcHMgYSB1bml0YXNrZXIgYXBwbGljYW5jZSBpcyBub3QgZm9yIHlvdS4gKFllcyBJIGtub3cgeW91IGNhbiBtYWtlIG1vcmUgdGhhbiByaWNlIGluIGEgcmljZSBjb29rZXIpIEFwcGxpYW5jZXMgdGFrZSB1cCB2YWx1YWJsZSBzcGFjZSBpbiBhbnkga2l0Y2hlbiBubyBtYXR0ZXIgd2hhdCBzaXplLgpEZG9zdnVsY2FuICA5IHBvaW50cyAgc3VibWl0dGVkIDEgeWVhciBhZ28KVGhlIHNoZWVyIG1hZ25pdHVkZSBvZiBtaWxsaW9ucyBvZiBtaW5vcnMgY29tbWl0dGluZyBjcmVkaXQgY2FyZCBmcmF1ZCBtaWxsaW9ucyBhbmQgbWlsbGlvbnMgb2YgdGltZXMgd2FzIHNpbXBseSBzbyBodWdlIGl0IHdhcyBpZ25vcmVkLiAKSWYgeW91IHB1cmNoYXNlZCBhIFN1YnNjcmlwdGlvbiB0aHJvdWdoIGEgdGhpcmQgcGFydHksIHlvdSBtYXkgYWxzbyBiZSBzdWJqZWN0IHRvIHRoYXQgdGhpcmQgcGFydHkncyBjYW5jZWxsYXRpb24gcG9saWNpZXMgYW5kIHByb2NlZHVyZXMuLiAKSSBrbm93IHlvdSBkb24gc2VlIGl0IHRoYXQgd2F5LCBidXQgc2luY2UgeW91IGZlZWwgY29uZmlkZW50IGVub3VnaCB0byB3cml0ZSBhIGJsb2cgb24gY2xhc3MgcGVyaGFwcyB5b3UgY2FuIHRyeSB0byB0cmFkZSBoYXRzIGJyaWVmbHkuIFRoZXkganVzdCB3YW50IGdvdmVybm1lbnQgdG8gbGVhdmUgdGhlbSBhbG9uZSwgYW5kIHRvIHF1aXQgdHJ5aW5nIHRvIGVuZ2luZWVyIHNvY2lldHkuIFRoZXkgYXJlbiB2aW9sZW50IHBlb3BsZSwgYnV0IHRoZXkgYWxzbyBhcmVuIGdvaW5nIHRvIGFsbG93IGVuZGxlc3MgZ3Jvd3RoIG9mIGdvdmVybm1lbnQgYW5kIHVuYnJpZGxlZCBjb3JydXB0aW9uIGluZGVmaW5pdGVseS4uIApJIHJlbWVtYmVyIGhpbSBzYXlpbmcgdGhhdCBoZSBoYXRlZCBzY2hvb2wuIEl0IGFsbCBqdXN0IHNlZW1lZCBsaWtlIGEgY29udmVuaWVudCBleGN1c2UgdG8gc3RvcCBnb2luZyB0byBzY2hvb2wgYW5kIG1pbGsgaGlzIGZyaWVuZCBjYW5jZXIgZm9yIG1vbmV5L2EgY2FyZWVyLCBhbmQgaGUgZG9uZSB0aGF0LCBzbyBnb29kIGpvYj8uIApJIHVzZWQgdG8gdXNlIHRoZSBUaXRhbml1bXMgYmVmb3JlIHRoZSBTaWcgR29sZHMgYW5kLCB3aGlsZSBkZWNlbnQgYmVnaW5uZXIgd3JhcHMsIHRoZXkgbG9zdCBhIGxvdCBvZiBlbGFzdGljaXR5IGFmdGVyIGEgeWVhci4gClRoZSBBbWJlcm9sYSA1MCB3YXMgcHJvZHVjZWQgLiAKMTEuMDAgICAxMy4zMFdlJ3JlIE1pbmQgaW4gRXhldGVyIGFuZCBFYXN0IERldm9uLCBvZmZlcmluZyBhIHN1cHBvcnRpdmUsIHNhZmUgYW5kIHJlc3BvbnNpdmUgc3BhY2UgdG8gY3JlYXRlIHlvdXIgb3duIHdlbGxiZWluZy4gV2UgYXJlIGhlcmUgZm9yIHlvdSB3aXRoIHRvb2xzIG9mIHJlY292ZXJ5LgpIZSBoYXMgYSBzaG93ZG93biB3aXRoIFJlcHVibGljYW5zIHdobyB0aHJlYXRlbiB0byBicmluZyBnb3Zlcm5tZW50IHRvIGl0cyBrbmVlcyBpZiB0aGVpciBidWRnZXQgZGVtYW5kcyBhcmVuJ3QgbWV0LiAKVGhlIHBhaW4gaXMgbm93IHdvcnNlIHRoYW4gaXQgZXZlciB3YXMgYW5kIEkgc3VwcG9zZWQgdG8gZ28gb24gdmFjYXRpb24gdG9kYXkuIEkgY2FuIGJyZWF0aGUgd2l0aG91dCBpc3N1ZSBzbyBpdCBhIGNsaW5pYyBpbiB0aGUgbW9ybmluZyBmb3IgbWUuLiAKU3RldmUgV296bmlhayBjbyBmb3VuZGVkIEFwcGxlIHdpdGggU3RldmUgSm9icywgYW5kIHRoZXkgYXJlIHJlY29nbml6ZWQgYXMgaWduaXRpbmcgdGhlIHBlcnNvbmFsIGNvbXB1dGVyIHJldm9sdXRpb24gb2YgdGhlIDE5NzBzIGFuZCAxOTgwcy4gCkFuZCBhIHBhaW5mdWwgb25lLiAKWWFuaSBrYWRpbiBkZW1peW9ya2kgYmF5cmFrIEJpemFucyBnZWxtaXN0aXIgZGl5ZS4gVGVrIHNveWxlZGlnaSBidSBiYXlyYWdpbiBJc2xhbWNpbGFyIHRhcmFmaW5kYW4gYWRvcHQgZWRpbG1lc2l5bGUgQml6YW5zIGt1bGxhbmltaSBheW5pIHRhcmlobGVyZSBnZWxpeW9yIGRpeW9yLgpPciwgdGhleSBnbyBpbiB0aGUgb3Bwb3NpdGUgZGlyZWN0aW9uIGFuZCB0b3RhbGx5IGVtYnJhY2UgdGhlaXIgRHggYmVjYXVzZSBpdCBnaXZlcyB0aGVtIGEgdW5pdmVyc2FsIGV4Y3VzZSBmb3IgYW55IHNvcnQgb2YgY3JhcCBuYXJjIGJlaGF2aW9yLiBObyB0aGVyYXBpc3Qgd291bGQgZXZlciBzYW5jdGlvbiB0aGlzLCBidXQgYWxsIG9mIGEgc3VkZGVuLCBldmVyeSB0aXJlZCBleGN1c2UgZ2V0cyBhc3NpZ25lZCB0byAidGhlaXIgZGlzZWVlZWVhYWFhYXNzc2UiLiAKWWVzLCBvZiB0aGUgdHdlbnR5IHBlcmNlbnQgb2YgcGVvcGxlIHdobyB1c2UgaXQsIG9ubHkgYWJvdXQgZml2ZSBwZXJjZW50IG9mIHRoZW0gd2lsbCByZWFkIHRocm91Z2ggZXZlcnl0aGluZyBhbmQgdHJ5IGV2ZXJ5dGhpbmcuIApJdCBpbmNsdWRlcyBhbGwgdGhlIDIwMTQgZHJhZnQgcGlja3MsIGxhdGVzdCB0cmFkZXMgdHJhbnNhY3Rpb25zLCByZWNlbnRseS4gClBlcnNvbmFsbHkgYW5kIHByb2Zlc3Npb25hbGx5LCBCZWxsZXcgdXNlcyBtZWRpdGF0aW9uLCB2aXN1YWxpemF0aW9uLCBkZWVwIGJyZWF0aGluZyBhbmQgcG9zaXRpdmUgc2VsZiB0YWxrIG9uIGEgZGFpbHkgYmFzaXMuIFNoZSBzdWdnZXN0cyB5b3UgY2xvc2UgeW91ciBleWVzIGZvciBhIGZldyBtb21lbnRzIGVhY2ggbW9ybmluZywgdGFrZSBhIGZldyBkZWVwIGJyZWF0aHMsIGFuZCB2aXN1YWxpemUgeW91cnNlbGYgYmVpbmcgY292ZXJlZCBpbiBhIHRoaWNrIGFuZCBwcm90ZWN0aXZlIGJ1YmJsZS4gSWYgeW91IGtub3cgeW91IHdpbGwgYmUgd2l0aCBhbiBlbmVyZ3kgdmFtcGlyZSwgeW91IGNhbiBpbWFnaW5lIGEgbWlycm9yIGFyb3VuZCB5b3Ugd2hpY2ggd2lsbCByZWZsZWN0IGF3YXkgYW55IG5lZ2F0aXZlIGVuZXJneSB0aGF0IGNvbWVzIHRvd2FyZCB5b3UuCk9rIGJ1dCBsZXQgYmUgcmVhbCwgdGhleSB3ZXJlIG5vdCBpbXBseWluZyBCcmF6aWwgaXNuIGluIFNvdXRoIEFtZXJpY2EuIApTaGUganVzdCBzYWlkIHBheSBpdCBvZmYgYW5kIHRoZSBob3VzZSBpcyB5b3Vycy4gCkZvciB0aGUgbGVnaXRpbWF0ZSB1c2VyLCB0aGlzIGlzIGEgdHJpdmlhbCB0YXNrLCBhcyB0aGUgZmFtaWxpYXIgZmFjZSBzdGFuZHMgb3V0IGZyb20gdGhlIG90aGVycy4gCkJyYW5kcyBsaWtlIGEgTWVyY2VkZXMgQmVueiBvciBoaWdoIGVuZCB3YXRjaCBicmFuZHMgc3VjaCBhcyBPbWVnYSwgUmFkbywgVG9tbXkgSGlsZmlnZXIgaGF2ZSBodWdlIG1lZGlhIHNwZW5kcyBvbiBwcmludC4gCkRyb3BobGl4IHUKVGhlIHJvb21zIGFyZSBrZXB0IHdhcm0gICB0aGUgc2VwYXJhdGUgc3BhIGFyZWEgdXBzdGFpcnMsIGFuZCBEb3VpbGxhcmQncyBvZmZpY2UgYW5kIHJlY2VwdGlvbiBhcmVhICh3aGVyZSB5b3UgY2FuIGJ1eSBzcGVjaWFsIGRldG94IGZvb2RzLCBoZXJicyBhbmQgYm9va3MpIGRvd25zdGFpcnMuLiAKRG9uIGtub3cgd2hhdCB0aGUgc3Bhcmsgd2lsbCBiZSwgYnV0IHdlIGRvIGtub3cgYmVjYXVzZSBoaXN0b3J5IGhhcyBhIHdheSBvZiByZXBlYXRpbmcgaXRzZWxmIHRoYXQgYXQgc29tZSBwb2ludCB0aGVyZSB3aWxsIGJlIGEgc3BhcmssIHNhaWQgU2VsZmUsIHdobyB3YXMgY28gaGVhZCBvZiBnbG9iYWwgdGVjaG5vbG9neSwgbWVkaWEgYW5kIHRlbGVjb20gYmFua2luZyBhdCBSb3lhbCBCYW5rIG9mIENhbmFkYSB1bnRpbCAyMDA0LCBkdXJpbmcgYW4gaW50ZXJ2aWV3IGF0IGhpcyBvZmZpY2UgaW4gVG9yb250by4gbG9hbnMsIGhpZ2ggbGV2ZXJhZ2UgYW5kIGFuIGFidW5kYW5jZSBvZiBjYXBpdGFsIHJlYWxseSBmb3IgdGhlIGxhc3QgZGVjYWRlIGlzIHRoZSBnYXNvbGluZS4gVG9yb250byBEb21pbmlvbiBCYW5rIGFuZCBDYW5hZGlhbiBJbXBlcmlhbCBCYW5rIG9mIENvbW1lcmNlLCB0aGUgY291bnRyeSBzZWNvbmQgYW5kIGZpZnRoIGxhcmdlc3QgYmFua3MsIGJvbHN0ZXJlZCBwcm92aXNpb25zIGluIHRoZSBsYXN0IGZpc2NhbCBxdWFydGVyLCBjaXRpbmcgYSByaXNlIGluIGNvcnBvcmF0ZSBhcnJlYXJzIGFtb25nIHRoZSByZWFzb25zLgpBZnRlciBUaGUgUm9va2llIExvdCBkaXNiYW5kZWQsIEplc3NlLCBHYXJyZXR0LCBhbmQgQnJpYW4gZm9ybWVkIEJyYW5kIE5ldywgd2hpbGUgQnJhbmRvbiB3ZW50IG9uIHRvIHBsYXkgaW4gVGhlIE1vdmllbGlmZSBhbmQgTmlnaHRtYXJlIG9mIFlvdS4gQWxleCBqb2luZWQgQ3JpbWUgaW4gU3RlcmVvLiAKSSBmZWx0IGRlYWQgYW5kIHVuaW5zcGlyZWQgdG8gZG8gYW55dGhpbmcgcmVsYXRlZCB0byBteSBzdHVkaWVzLiAKVGhlc2UgYXJlbiBjb2xsZWN0YWJsZXNvciBESVkgcHJvamVjdHMsIHRoZXNlIGFyZSB0aGluZ3Mgd29tZW4gcHV0IG9uIG9yIGluIHRoZWlyIHZhZ2luYXMgaW4gMjAxNy4KVGhhdCBqdXN0IHRoZSBuYXR1cmUgb2YgaG93IHRoaW5ncyBhcmUsIGFuZCB5b3UgY2FuIGdvIGRvd24ga2lja2luZyBhbmQgc2NyZWFtaW5nIGJ1dCBub3RoaW5nIHdpbGwgY2hhbmdlLiAKRG9uJ3QgYmUgYXV0aXN0aWMgYW5kIHNvY2lhbGl6ZSB3aXRoIHBwbHMgYXQgdGhlIGNhc2lubyBwb2tlciB0YWJsZXMuIEdvIGF0IDRBTSB3aGVuIHN0cmFnZ2xlcnMgY29tZSB0aHJ1IGZyb20gYnJva2VuIGhvbWUgZ2FtZXMgd2hvIHN0aWxsIHdhbm5hIGtlZXAgdGhlIHBhcnR5IGFpbid0IG92ZXIgZ3JpbmQuIApJIHJlbWVtYmVyIHdoZW4gdGhleSBwYWlkIHRoZWlyIGRlYWxlcnMgZW5vdWdoIG1vbmV5IGFuZCB3c29wIGhhZCB0aGUgYmVzdCBkZWFsZXJzLiAKKEZ1bGwgQW5zd2VyKS4gCk9wZW5lZCBpbiAxOTI3IGFzIHRoZSBmaXJzdCBwdWJsaWMgYXJ0IGdhbGxlcnkgaW4gdGhlIFVwcGVyIE1pZHdlc3QsIHRoZSBXYWxrZXIgQXJ0IENlbnRlciBoYXMgc2luY2UgYmVjb21lIG9uZSBvZiB0aGUgdG9wIGNvbnRlbXBvcmFyeSBhcnQgbXVzZXVtcyBpbiB0aGUgbmF0aW9uLiAKMjkgU2VwIDIwMTUgLiAKVGhlcmUgd2VyZSBubyBkZWVwIGdsaW1wc2VzIGludG8gd2hhdCBjb3VsZCBiZSwgb25seSB3aGF0IHdvdWxkIHNvb24gcGFzcyAgYSBzaW5nbGUsIHVuY2hhbmdlYWJsZSBkaXNwbGF5LCBsaWtlIGEgZm9vdGJhbGwgZ2FtZSBzdHJlYW1pbmcganVzdCBhIGJpdCB0b28gZWFybHkuV29yZCBzcHJlYWQgb2YgaGlzIGFiaWxpdGllcywgYWZ0ZXIgZnJpZW5kcyBhbmQgZmFtaWx5IGNhdWdodCBnbGltcHNlcyBvZiBoaXMgb2RkaXRpZXMuIEhpcyBzdHJhbmdlbmVzcyB0byByZXNwb25kIGJlZm9yZSBhIHF1ZXN0aW9uIHNldHRsZWQgaW50byB0aGUgbWluZCwgaGlzIHJlYWN0aW9ucyB0byB0b3VjaCBvciBmb29kIGJlZm9yZSB0aGV5IGNhbWUgdG8gaGltLCB5ZXQgdGhvc2Ugd2hvIGV4cGVyaWVuY2VkIGl0IGtuZXcgIHRoZXkgaGFkIHRoZSB0YXN0ZSBvZiB0aGF0IHF1ZXN0aW9uIHNvbWV3aGVyZSwgYnVyaWVkIGluIHRoZWlyIHBzeWNoZSwgYW5kIGl0IGZlbHQgd3JvbmcgdG8gaGF2ZSB0aGVpciBzZWVtaW5nbHkgY2hvc2VuIGFjdGlvbnMgYmVjb21lIHByZWRlc3RpbmVkLiBCZWZvcmUgaGlzIHRhbGVudCBmdWxseSBkZXZlbG9wZWQsIEdyYWhhbSBoYWQgYWxyZWFkeSBjcmVhdGVkIGEgc2NoaXNtIGluIHRoZSB3b3JsZC5UaG9zZSB3aG8gaGFpbGVkIGhpbSBhcyBHb2QsIGFuZCB0aG9zZSB3aG8gdGhvdWdodCBoaW0gYSBtb25zdGVyLk5ldmVyIG1pbmQgdGhlIGZhY3QgdGhhdCB0aGlzIHdhcyBqdXN0IGEgYm95LCB0cnlpbmcgdG8gbGlmZSBoaXMgbGlmZSwgYnV0IHN5bmNlZCB0byB0aGUgd3JvbmcgdGltZWxpbmUuIAooUlNTIEZlZWQpIEhpZ2ggU2Nob29sIEJhc2tldGJhbGwgUGlja3M6IFN0YXRlIFRvdXJuYW1lbnQgKFBvc3RlZCAxMSBkYXlzLCAyIGhvdXJzIGFnbykgSGlnaCBTY2hvb2wgQmFza2V0YmFsbCBQaWNrczogUmVnaW9uYWwgUGxheW9mZnMgKFBvc3RlZCAxOCBkYXlzLCAyIGhvdXJzIGFnbykgSGlnaCBTY2hvb2wgQmFza2V0YmFsbCBQaWNrczogV2VlayA1IChQb3N0ZWQgMSBtb250aCwgOSBkYXlzIGFnbykgQmxvZ2dpdHksIEJsb2dnaXR5LCBCbG9nZ2l0eSBTdG9ja2NhclRvb25zIGNhcnRvb25pc3QgTWlrZSBTbWl0aCBwb3BzIHRoZSBob29kIG9uIE5BU0NBUiByYWNpbmcuIApUaGV5IGxpc3QgdGhlIG92ZXJzZWxsIHJhdGUgZm9yIGdhcmFnZXMgYXMgMTU1JSBvZiB0aGUgdG90YWwgc3BhY2VzIGZvciBnYXJhZ2VzLCB0aGUgZWFzdCBwYXJraW5nIGdhcmFnZSBoYXMgYSB0b3RhbCBvZiAxNTAwIHNwb3RzLiBBYm91dCAxMDAgb2YgdGhvc2Ugc3BvdHMgYXJlIGZvciB2aXNpdG9yIHBhcmtpbmcgaW4gdGhlIGZpcnN0IGZsb29yLCB0aGVyZSBhcmUgYWxzbyBmYWN1bHR5L3N0YWZmIHNwb3RzIGluc2lkZSB0aGUgZ2FyYWdlLCBsZXRzIGVzdGltYXRlIHRob3NlIGFyb3VuZCAxMDAgYXMgd2VsbC4gCiJXZSBsb29raW5nIGF0IHBoZW5vbWVuYWwgZ3Jvd3RoIGluIHBva2VyIG1hY2hpbmUgdXNlIGJvdGggaW4gcmVhbCB0ZXJtcyBhbmQgYXMgYSBzaGFyZSBvZiB0aGUgdG90YWwuCjEpIFRoZSBnbGlhZGluIHByb3RlaW4gb2Ygd2hlYXQgaGFzIGJlZW4gbW9kaWZpZWQgYnkgZ2VuZXRpY2lzdHMgdGhyb3VnaCB0aGVpciB3b3JrIHRvIGluY3JlYXNlIHlpZWxkLgpXaGl0ZSBiYW5rcyBvbiBUYXMgZWxlY3Rpb24gcG9raWVzIHBvbGljeQpBbmQgV2Fsc2gsIFYuIDIwMTguIFRoZSBwaHlzaW9sb2dpY2FsIGVmZmVjdHMgb2YgVHJhbnNjcmFuaWFsIEVsZWN0cmljYWwgU3RpbXVsYXRpb24gZG8gbm90IGFwcGx5IHRvIHBhcmFtZXRlcnMgY29tbW9ubHkgdXNlZCBpbiBzdHVkaWVzIG9mIENvZ25pdGl2ZSBOZXVyb21vZHVsYXRpb24uIE5ldXJvcHN5Y2hvbG9naWEuIFRoZSBwaHlzaW9sb2dpY2FsIGJhc2lzIG9mIHRoZSBjbGFpbXMgZm9yIHREQ1MgcmVzdHMgb24gdGhlIGZpbmRpbmcgdGhhdCAxIG1BIG9mIHVuaWxhdGVyYWwgYW5vZGFsIHN0aW11bGF0aW9uIGluY3JlYXNlcyBjb3J0aWNhbCBleGNpdGF0aW9uIGFuZCAxIG1BIG9mIGNhdGhvZGFsIHByb2R1Y2VzIGluaGliaXRpb24uIEhlcmUgd2Ugc2hvdyB0aGF0IHRoZXNlIGNsYXNzaWMgZXhjaXRhdG9yeSBhbmQgaW5oaWJpdG9yeSBlZmZlY3RzIGRvIG5vdCBob2xkIGZvciB0aGUgYmlsYXRlcmFsIHN0aW11bGF0aW9uIG9yIDIgbUEgaW50ZW5zaXR5IGNvbmRpdGlvbnMgZmF2b3VyZWQgaW4gY29nbml0aXZlIGVuaGFuY2VtZW50IGV4cGVyaW1lbnRzLiBUaGlzIGlzIGltcG9ydGFudCBiZWNhdXNlIG1hbnksIGluY2x1ZGluZyBzb21lIG9mIHRoZSBtb3N0IHNhbGllbnQgY2xhaW1zIGFyZSBiYXNlZCBvbiBleHBlcmltZW50cyB1c2luZyAyIG1BIGJpbGF0ZXJhbCBzdGltdWxhdGlvbi4gVGhlIGNsYWltcyBmb3IgdFJOUyBhcmUgYWxzbyBiYXNlZCBvbiB1bmlsYXRlcmFsIHN0aW11bGF0aW9uLiBIZXJlIHdlIHNob3cgdGhhdCwgYWdhaW4gdGhlIGNsYXNzaWMgZXhjaXRhdG9yeSBlZmZlY3RzIG9mIHVuaWxhdGVyYWwgdFJOUyBkbyBub3QgZXh0ZW5kIHRvIHRoZSBiaWxhdGVyYWwgc3RpbXVsYXRpb24gcHJlZmVycmVkIGluIGVuaGFuY2VtZW50IGV4cGVyaW1lbnRzLiBGdXJ0aGVyLCB3ZSBzaG93IHRoYXQgdGhlIGVmZmVjdHMgb2YgdW5pbGF0ZXJhbCB0Uk5TIGRvIG5vdCBob2xkIHdoZW4gb25lIG1lcmVseSBkb3VibGVzIHRoZSBzdGltdWxhdGlvbiBkdXJhdGlvbi4gYW5kIFdhbHNoLCBWLiAyMDE3LiBHdW5zbGluZ2VycywgcG9rZXIgcGxheWVycywgYW5kIGNoaWNrZW5zIDM6IERlY2lzaW9uIG1ha2luZyB1bmRlciBtZW50YWwgcGVyZm9ybWFuY2UgcHJlc3N1cmUgaW4ganVuaW9yIGVsaXRlIGF0aGxldGVzLiBpbjogV2lsc29uLCBNLiwgV2Fsc2gsIFYuIGFuZCBQYXJraW4sIEIuIChlZC4pIFNwb3J0IGFuZCB0aGUgQnJhaW46IFRoZSBTY2llbmNlIG9mIFByZXBhcmluZywgRW5kdXJpbmcgYW5kIFdpbm5pbmcsIFBhcnQgQiBFbHNldmllci4gcHAuIDMzOSAzNTkKVGhlIGNvbXBhbnksIG93bmVkIGJ5IExpdmUgTmF0aW9uLCBpcyBhdHRlbXB0aW5nIGEgZGlmZmVyZW50IGFwcHJvYWNoIHRocm91Z2ggaXRzIFZlcmlmaWVkIEZhbiBwcm9ncmFtLCB3aGljaCBpcyBiYWNraW5nIFN3aWZ0J3MgdG91ciBhbmQgb3RoZXIgbWFycXVlZSBhcnRpc3RzLCBpbmNsdWRpbmcgQnJ1Y2UgU3ByaW5nc3RlZW4sIEthdHkgUGVycnkgYW5kIEVkIFNoZWVyYW4uIApOb3csIHRoYXQgbm90IHRvIHNheSB5b3UgbWlnaHQgbm90IGJlIGFibGUgdG8gZ2V0IHNvbWUgZnJlZSBhZHZpY2UgaGVyZS4gClNvbWV0aW1lcyBpdCBpcyBoYXJkIHRvIGxvb2sgYXQgaGFuZHMgYW5kIGxheSB0aGVtIGRvd24uIEJ1dCBpdCdzIG11Y2ggZWFzaWVyIHRvIGZvbGQgd2hlbiB5b3VyIG9ubGluZSBwb2tlciBjYWxjdWxhdG9yIGlzIGZsYXNoaW5nIGJyaWdodCBib2xkIHdhcm5pbmcgY29sb3JzIGF0IHlvdSwgcmVtaW5kaW5nIHlvdSBob3cgbXVjaCAgRVYgeW91ciBoYW5kIGhhcy4gVGhpcyBpcyBlc3BlY2lhbGx5IGNydWNpYWwgd2hlbiB5b3UgaGF2ZSBqdXN0IHdvbiBvciBsb3N0IGEgaGFuZCBvciB0d28gcHJldmlvdXNseSwgYmVjYXVzZSBhdCB0aGF0IHBvaW50IGl0J3MgbXVjaCBtb3JlIGxpa2VseSB5b3Ugd2lsbCBwbGF5IHlvdXIgY3VycmVudCBoYW5kIGFzIGEgcmVzdWx0IG9mIHByZXZpb3VzIGhhbmRzLiAKRmVlbG5ncm9vdnkgIDIgcG9pbnRzICBzdWJtaXR0ZWQgNCBtb250aHMgYWdvCklmIHlvdSBwYXJhbm9pZCwgeW91IGNvdWxkIHByb3ZpZGUgcHJvb2Ygb2YgcmVndWxhciByZW50IHBheW1lbnRzLCBwcmludG91dHMgb2YgYmFuayB0cmFuc2ZlcnMgb3Igd2hhdGV2ZXIuLiAKRG8geW91IGp1c3QgZ2V0IHVzZWQgdG8gaXQ/IEZvciB0aG9zZSB3aXRoIGV4cGVyaWVuY2UsIGRvIHlvdSBwcmVmZXIgaGF2aW5nIG1vcmUgcHJvYmxlbXMgZml0IGluLCBvciBmZXdlciBidXQgd2l0aCBtb3JlIHNwYWNlPy4gCkhlIG5vdCBxdWl0ZSBtb3ZlZCB0aGUgY29yaywgdGhlbiBwdWxsZWQgaXQgaW4gYW5kIHRocmV3IGl0IG9uIHRoZSBiYWNrIG9mIGEgY2FyLiAKV2l0aCBzb21lIDE0MCBtaWxsaW9uIHdlZWtseSBzaG9wcGVycywgV2FsbWFydCBpcyBhcyBtYXNzIGFzIGJyYW5kcyBjYW4gZ2V0LiBCdXQgQWFyb24gQmVybnN0ZWluLCAzOCwgc2VuaW9yIGRpcmVjdG9yIG9mIGluc2lnaHRzIGFuZCBhZHZvY2FjeSwga25vd3MgV2FsbWFydCBpcyBhbHNvIHBvbGFyaXppbmcuIApOb3Qgc3VyZSBob3cgcG9wdWxhciBpdCB3YXMgYmVjYXVzZSBhIHNtYWxsZXIgcHJvcG9ydGlvbiBvZiBwZW9wbGUgdXNlZCBwZXJzb25hbCBjb21wdXRlcnMsIGJ1dCBVc2VuZXQgd2FzIHRoZSBtYWluIGdhbWUgaW4gdG93biBpZiB5b3Ugd2FudGVkIHRvIHN0YXkgaW4gdG91Y2ggd2l0aCBhIGdsb2JhbCBzb2NpYWwgY2lyY2xlLiBJdCB3YXMgdGhlIHdlaXJkZXN0IHRoaW5nIGZyb20gdG9kYXkgcGVyc3BlY3RpdmU6IGNvbXBsZXRlbHkgdW5yZWd1bGF0ZWQgYW5kIGFuYXJjaGljIGJ1dCBzdGlsbCB0aGUgbW9zdCBlZmZlY3RpdmUgd2F5IHRvIGFjY2VzcyBhIGdsb2JhbCBwb29sIG9mIHBlb3BsZSB3aG8gc2hhcmVkIHlvdXIgaW50ZXJlc3RzLiBUaGVyZSB3YXMgZXZlbiB0aGlzIHBoZW5vbWVub24geW91IGNvdWxkIGZpbmQgdW5iZWxpZXZhYmxlIHRvZGF5IHdoZXJlIFVzZW5ldCB3YXMgYSB3YXkgdG8gZGlzdHJpYnV0ZSBtb3ZpZXMsIHdoaWNoIHNwZWNpYWwgc29mdHdhcmUgd291bGQgYnJlYWsgdXAgaW50byBzbWFsbGVyIGZpbGVzIHlvdSBzcGVuZCBhZ2VzIGRvd25sb2FkaW5nIG9uZSBhdCBhIHRpbWUgYmVmb3JlIHlvdXIgc29mdHdhcmUgcmVhc3NlbWJsZWQgdGhlbSBpbnRvIG9uZSBmaWxlLiAKSlVHUyB3b3VsZCBqdXN0IGxpa2UgdG8gdGFrZSB0aGlzIG9wcG9ydHVuaXR5IHRvIHB1YmxpY2x5IHRoYW5rIE1hdGhTb2MgZm9yIGhvc3Rpbmcgc3VjaCBhIGdyZWF0IGV2ZW50IHdoaWNoIHdhcyB0aG9yb3VnaGx5IGVuam95ZWQgYnkgYWxsIGFuZCB3YXMgYSBncmVhdCB3YXkgdG8gYnJpbmcgdG9nZXRoZXIgdGhlIG1hbnkgc29jaWV0aWVzIGFjcm9zcyB0aGUgQ29sbGVnZS4gCkluIHRoZSBwcm9jZXNzLCBhIGxvdCBvZiBwZW9wbGUgd2VyZSBiYW5uZWQgbWFueSBnb3QgYW5ncnkgYXQgd2hhdCB0aGV5IHNhdyB3YXMgb3ZlcnplYWxvdXMgbW9kZGluZy4gCllvdSBvbmx5IG5lZWQgaXMgYSB3b3JraW5nIGludGVybmV0IGNvbm5lY3Rpb24gYW5kIGEgZmluYW5jaWFsIGNhcmQgdG8gcGxhY2UgYW4gb3JkZXIgb25saW5lLi4gClByaW5jZSBDaGFybGVzIHdhbnRlZCB0aGUgd2VkZGluZyB0byBiZSBhdCBXaW5kc29yIENhc3RsZSBidXQgd2hlbiB0aGlzIGluZm9ybWF0aW9uIHdhcyByZWxlYXNlZCwgYSBwcm9ibGVtIHdhcyBicm91Z2h0IHRvIHRoZSByb3lhbHMnIGF0dGVudGlvbi4gSWYgdGhlIENhc3RsZSB3YXMgdG8gYmUgbGljZW5zZWQgZm9yIG1hcnJpYWdlLCB0aGVuIGJ5IGxhdyB0aGUgQ2FzdGxlIGhhZCB0byBiZSBtYWRlIGF2YWlsYWJsZSBmb3IgdGhlIGdlbmVyYWwgcHVibGljIHRvIG1hcnJ5IGluLCBmb3IgdGhlIG5leHQgdGhyZWUgeWVhcnMuLiAKKEZ1bGwgQW5zd2VyKS4gClE6IFdoYXQgaXMgYW4gUlNTIHJlYWRlciwgYW5kIHdoZXJlIGNhbiBJIGRvd25sb2FkIG9uZSBmb3IgbXkgY29tcHV0ZXI/Ck1hbSBIYXRpcGxlcmkgc2V2bWVtLCBDZWxhbCBlbmdyIGRlIHNldm1lbS4gRW4gZmF6bGEgJTUgZGlsaW0gZmVuIGxpc2VzaW5lIGdpcmViaWxpeW9yLiBCZW4gJTcgaWxlIGZhbGFuIG0gbmV5ZGkgZ2lyZW1lbWl0aW0sIG9yYWRhbiBiaWxpeW9ydW0gdmUgYnVuYSByYW1lbiB1IGFuZGEgRk0gb2t1ZHV1bSBhbmFkb2x1IGxpc2VzaW5kZSBiYXlhIHpvcmxhbnlvcnVtLiAKQWZ0ZXIgZmFpbGluZyBoZXIgZmlyc3Qgc2VtZXN0ZXIgb2YgY29sbGVnZSwgSmVzcyBtb3ZlZCBpbiB3aXRoIGhlciBmYXRoZXIgYW5kIGpvaW5lZCBoaXMgY2h1cmNoLiBUaGUgZnVuZGFtZW50YWxpc3QgY29uZ3JlZ2F0aW9uIGFiaWRlZCBieSBsaXRlcmFsIGludGVycHJldGF0aW9ucyBvZiB0aGUgT2xkIFRlc3RhbWVudC4gVGhleSBvZmZlcmVkIHRoZSBvcmRlciBhbmQgZGlzY2lwbGluZSAxOCB5ZWFyIG9sZCBKZXNzIGNyYXZlZC4KVGhlIGNvbXBhbnkgam9iIGlzIHRvIGRlbGl2ZXIgZ29vZHMgd2l0aCB0aGUgaGlnaGVzdCBpbmZsb3cgKG1vcmUgb3JkZXJzKSBhbmQgbG93ZXN0IGNvc3RzLiBQZXJpb2QuIApJbnRlcm5ldCBwb2tlciBzaXRlcyBhbHNvIG9mZmVyIGEgcmFuZ2Ugb2YgbGltaXRzIHNvIHRoYXQgdGhlIGJlZ2lubmluZyBwbGF5ZXIgY2FuIGFjdHVhbGx5IHN0YXJ0IGJldHRpbmcgcGVubmllcy4gCkZyb20gYmlydGggdG8gZ3JhdmUsIHlvdSBuZWVkZWQgbmVpZ2hib3JzIGFuZCB0aGV5IG5lZWRlZCB5b3UuIApJIGFwcHJlY2lhdGUgdGhhdCB0aGlzIG1pZ2h0IGJlIHVucmVhc29uYWJsZSBidXQgYXMgYSBCcmlzdG9saWFuIEkgZ2VudWluZWx5IGZlZWwgcHJldHR5IHNvcmUgYWJvdXQgaG93IGhpbGFyaW91cyBldmVyeW9uZSBmaW5kcyBvdXIgYWNjZW50cy4gCldpdGggJDEuOSBtaWxsaW9uIG5ldCB3b3J0aCwgY291cGxlIGhhcyB0aGUgbWVhbnMgdG8gaGl0ICQxMCwwMDAgYSBtb250aCByZXRpcmVtZW50IGluY29tZSB0YXJnZXRVcmdlbnQgY29zdCBjdXR0aW5nIG5lZWRlZCB0byBrZWVwIGZhbWlseSB3aXRoIG5ldCB3b3J0aCBvZiBvbmx5ICQxMzksNzkxIGFmbG9hdCBhcyByZXRpcmVtZW50IG5lYXJzVGhpcyBBbGJlcnRhIGNvdXBsZSBoYXMgYWxsIHRoZWlyIGtpZHMgZWR1Y2F0aW9uIG1vbmV5IGluIGNhbm5hYmlzIHN0b2Nrcy4gV2hhdCBjb3VsZCBwb3NzaWJseSBnbyB3cm9uZz9UaGV5IGhhdmUgJDU5LDAwMCBpbiBNYXJ5IFJSU1AsICQxLDUwMCBpbiBoZXIgVEZTQSwgYW5kICQyMywwMDAgY2FzaCBlYXJuaW5nIG5vdGhpbmcuIFRoZXkga2VlcCB0aGUgJDEyNSBtb250aGx5IENhbmFkYSBDaGlsZCBCZW5lZml0IHRoZXkgcmVjZWl2ZSBlYWNoIG1vbnRoIGluIE1hcnkgVEZTQSBhbmQgdGhleSBoYXZlIG11dHVhbCBmdW5kcyB3aG9zZSBmZWVzIGFuZCBhc3NldHMgdGhleSBmaW5kIGRpZmZpY3VsdCB0byB1bmRlcnN0YW5kLiAKQnJpZGdlIGNsYXNzZXMgZm9yIGJlZ2lubmVycwpIYWxlcCB3YXN0ZWQgY2hhbmNlcyB0byBzZXJ2ZSBmb3IgdGhlIG1hdGNoIGluIHRoZSBuaW50aCwgMTF0aCBhbmQgMTV0aCBnYW1lcywgdGhlbiBoYWQgdG8gc2F2ZSB0aHJlZSBtYXRjaCBwb2ludHMgaW4gdGhlIDIybmQuIApTZWl0IEphaHJ0YXVzZW5kZW4gc3BpZWx0IGRpZSBNYXNzYWdlIGJlaSBkZXIgQmVoYW5kbHVuZyB2b24gS3JhbmtlbiwgVmVybGV0enRlbiwgYWJlciBhdWNoIEF0aGxldGVuIGVpbmUgd2ljaHRpZ2UgUm9sbGUuCkkgcmVtZW1iZXIgY2xvc2luZyBteSBleWVzIGFuZCAgIGFuZCBjcnlpbmcgYW5kIHdpc2hpbmcgdGhhdCBJIGNvdWxkIGhhdmUgdGFrZW4gaXQgZm9yIGhlciwgc28gc2hlIGRpZG4ndCBoYXZlIHRvIHN1ZmZlciwgIiBDYXRoZXJpbmUgY3JpZWQuIEFza2VkIHdobyBjb3VsZCBkbyBzb21ldGhpbmcgbGlrZSB0aGF0PyBDYXRoZXJpbmUgcmVwbGllZCwgIkkgZG9uJ3Qga25vdy4gIiBXb3JkIG9mIHRoZSBtdXJkZXJzIHJvY2tlZCB0aGUgcXVpZXQsIHVwc2NhbGUgQ2FzdGxld29vZCBDb3VudHJ5IENsdWIgY29tbXVuaXR5IGluIFBsZWFzYW50b24sIENhbGlmLiAKTXIgTWF4ZmllbGQgdGhvdWdodCB0aGUgJDIuOCBtaWxsaW9uIHdhcyBoaXMuICJJIGZsaXBwZWQgbXkgY2FyZHMgb3Zlci4gSGUgcHV0IGhpcyBoZWFkIGluIGhhbmRzLiBIZSBoYWQgYW4gZWlnaHQgYW5kIGEgbmluZSwgbm90aGluZy4gQXMgdGhlIGxhc3QgY2FyZCB3YXMgYmVpbmcgZGVhbHQsIGhlIHdhcyBwaWNraW5nIHVwIGhpcyBiYWdzIGFuZCB3YWxraW5nIG91dC4KVGhlIHBlcnNpc3RlbmNlIG9mIHRoZSBtZW1vcnkgb2YgcGFpbiB0aGF0IGNhbiBsYXN0IGJleW9uZCBpdHMgYmVuZWZpY2lhbCBmdW5jdGlvbiBoYXMgbGVkIHRvIHJlc2VhcmNoIGludG8gd2F5cyBvZiBhbGxldmlhdGluZyBjaHJvbmljIHBhaW4uIFJlc2VhcmNoIGhhcyBzaG93biB0aGF0IHRoZSBiZXN0IHdheSB0byB0aHdhcnQgY2hyb25pYyBwYWluIGlzIHRvIHByZXZlbnQgcGFpbiBtZW1vcmllcyBmcm9tIGZvcm1pbmcgaW4gdGhlIGZpcnN0IHBsYWNlLiBBbmVzdGhlc2lhIHByZXZlbnRzIHRoZSBjb25zY2lvdXMgbWluZCBmcm9tIGZvcm1pbmcgcGFpbiBtZW1vcmllcyBkdXJpbmcgYSBwdXJwb3NlZnVsIGluanVyeSBsaWtlIHN1cmdlcnkuIFlldCwgdGhlIG5lcnZvdXMgc3lzdGVtIGNhbiBzdGlsbCBmb3JtIGl0cyBvd24gcGFpbiBtZW1vcmllcy4gTWVkaWNhbCBwcm9mZXNzaW9uYWxzIGFyZSBmaW5kaW5nIHRoYXQgYW5hbGdlc2ljcyAgIGRydWdzIHRoYXQgcHJldmVudCBwYWluIGluIHRoZSBuZXJ2b3VzIHN5c3RlbSAgIGdpdmVuIHRvIHBhdGllbnRzIGJlZm9yZSBzdXJnZXJ5IHByZXZlbnQgY2hyb25pYyBmb3JtYXRpb24gb2YgcGFpbiBtZW1vcnksIHdoaWNoIGRpbWluaXNoZXMgdGhlIGRldmVsb3BtZW50IG9mIGNocm9uaWMgcGFpbiBsYXRlciBvbiBbc291cmNlOiBBY2tlcm1hbl0uClRvIGRpc2NhcmQgb250byBhbnkgcGlsZSwgdGhlIGRpc2NhcmRlZCBjYXJkIG11c3QgYmUgdGhlIG9wcG9zaXRlIGNvbG9yIG9mIHRoZSB0b3AgY2FyZCwgYW5kIGl0IG11c3QgYmUgb25lIG51bWJlciBzbWFsbGVyLls2XQpCdXQgdGhleSBjaGFuZ2UsIHRoZXJlIGFsd2F5cyBzb21lIGNoYW5nZSwgYWx3YXlzIHByb2JsZW1zLCBhbHdheXMgb3Bwb3J0dW5pdGllcy4uIApUcmFuc2xhdGlvbiBpdHNlbGYgaXMgYSB0cmlja2x5IHByb2Nlc3MuIE1hbnkgd29yZHMgaGF2ZSBtdWx0aXBsZSBtZWFuaW5ncyBhbmQgY2hhbmdlIHdoYXQgaXQgbWVhbnMgaW4gb3VyIGxpZmUuCllvdXIgYmVzdCBiZXQgdG8gcGxheSBpcyBkZWZpbml0ZWx5IGdvaW5nIHRvIGJlIHBsYXlpbmcgaW4gUGVydGguCkF0IHRoZXNlIHN0YWtlcywgcGxheWVycyBhcmUgbGVzcyBjcmVhdGl2ZSBmcm9tIHdoYXQgSSBzZWVpbmcuIENoZWNrIG1pbiByYWlzZXMgdGVuZCB0byBiZSByZWFsbHkgc3Ryb25nLCBlc3BlY2lhbGx5IG9uIHRoZSB0dXJuIChhbmQgeWVhaCBJIGZhbWlsaWFyIHcvIEJXIHRoZW9yZW0gYW5kIHVzZWQgdG8gcGxheSB3LyBoaW0gYSBsb25nIHRpbWUgYmFjaykuIEkgd2FzIHRoaW5raW5nIGF0IGZpcnN0IHRoZXJlIG1pZ2h0IGJlIG1vcmUgcGFpcitjb21ibyBkcmF3cyBhbmQgY291bGRuIGp1c3RpZnkgZm9sZGluZyB0aG9zZSBwcmV0dHkgYnVsbGV0cy4gClRoYXQgdGFsa3MuIFRoYXQgaXMgYWxsLiIgSSB3YW50IHNwZWNpZXMgdG8gaGF2ZSBkaWZmZXJlbnQgdHlwZXMgb2YgcmVsaWdpb25zIGZyb20gdGhlIHBhc3QgYW5kIGRpZmZlcmVudCBsaWZlc3R5bGVzIHdlIGNhbiBsZWFybiBhYm91dCBpbiB0aGUgZ2FtZS4gCkJ1dCBhZnRlciBhIHdoaWxlLCB0aGUgVGltZXMgYXBvbG9naXplZCBmb3IgcHVibGlzaGluZyB0aGUgbGllcyBvZiB0aGUgQnVzaGllcyBhbmQgc3RhcnRlZCB0byBnZXQgcHJldHR5IGRhbW4gY3JpdGljYWwgb2YgdGhlbS4gUG9zc2libHkgZXZlbiBmdWxmaWxsaW5nIHRoZWlyIHJvbGUgYXMgam91cm5hbGlzdHMuLiAKVGhlcmUgaXMgbm8gZ3VhcmFudGVlIHRoYXQgeW91IHdpbGwgZ2V0IHlvdXIgbW9uZXkgd2hlbiB5b3UgbWFrZSBhIHJlcXVlc3QgZm9yIHdpdGhkcmF3YWwuIApIZXMgYSBsb29zZSBwbGF5ZXIsIHNvIEkgY291bGQgc2VlIGhpbSBoYXZpbmcgNzhvLCAzNG8uIApUaGUgcGh5c2ljYWwgY29uc29sZSBnYW1lIGhhcyBjb3ZlcmVkIG92ZXIgNjYuMyUgb2YgdGhlIGdsb2JhbCB3b3J0aC4gCkludGVyZXN0czogTmVlZGxld29yayAgIGtuaXR0aW5nIGFuZCBlbWJyb2lkZXJ5LCBtb3N0bHkuIFBsYXlpbmcgY29tcHV0ZXIgZ2FtZXMgICBwcmVmZXJhYmx5IG9uZXMgdGhhdCBpbnZvbHZlIHNvbWUgbWVudGFsIHdvcmsuIFJlYWRpbmcgICBnb29kIGZpY3Rpb24gLyBsaXRlcmF0dXJlLCBoaXN0b3J5IChtb3N0bHkgcHJlIDIwdGggY2VudHVyeSksIG5hdHVyYWwgaGlzdG9yeSAoZXNwZWNpYWxseSBkaW5vc2F1cnMgYW5kIGV2b2x1dGlvbiksIHRyYXZlbCAoZXNwZWNpYWxseSBleHBlZGl0aW9ucyBwcmUgU2Vjb25kIFdvcmxkIFdhciBvciBleHBlZGl0aW9ucyB0aGF0IHdlbnQgd3JvbmcpLiAKTm93LCB5b3UnZCBleHBlY3QgYSBSZWdhdHRhIHRvIGhhdmUgYm9hdCByYWNpbmcgYW5kIGluIEdlb3JnZSBUb3duIHRoYXQgbWVhbnMgQXJvdW5kIHRoZSBJc2xhbmQsIEluIHRoZSBIYXJib3VyLCBzbWFsbCBjcmFmdCwgc2FpbGluZyBkaW5naHkncywgdG95IGJvYXRzICAgaG93IGFib3V0IHR1bmluZyB1cCB3aXRoIHRoZSBhbm51YWwgUG93ZXJlZCBEaW5naHkgUG9rZXIgUnVuPwoiRGVmaW5pdGVseSBtb3N0IG9mIHRoZSBjbGllbnRzIHdlIHNlZSBhcmUgcG9raWUgcmVsYXRlZCwiIGhlIHNhaWQuCiJJdCB3aWxsIGJlIHRvdGFsbHkgZm9yIFRheWxvci4gCiJUbyBiZSBhIG1lbnRhbCBwYXRpZW50IGlzIG5vdCB0byBkaWUsIGV2ZW4gaWYgeW91IHdhbnQgdG8gICBhbmQgbm90IGNyeSwgYW5kIG5vdCBodXJ0LCBhbmQgbm90IGJlIHNjYXJlZCwgYW5kIG5vdCBiZSBhbmdyeSwgYW5kIG5vdCBiZSB2dWxuZXJhYmxlLCBhbmQgbm90IHRvIGxhdWdoIHRvbyBsb3VkICAgYmVjYXVzZSwgaWYgeW91IGRvLCB5b3Ugb25seSBwcm92ZSB0aGF0IHlvdSBhcmUgYSBtZW50YWwgcGF0aWVudCBldmVuIGlmIHlvdSBhcmUgbm90LiIgIFJhZSBVbnppY2tlciAgMTk4NCBBIGxvbmd0aW1lIGNpdmlsIHJpZ2h0cyBhZHZvY2F0ZSBhbmQgbWVtYmVyIG9mIHRoZSBOYXRpb25hbCBDb3VuY2lsIG9uIERpc2FiaWxpdHkgc3RhcmluZyBpbiAxOTk1CiJFdmlkZW5jZSB3YXMgc3RpbGwgYmVpbmcgZ2F0aGVyZWQsICIgTmlldG8gZXhwbGFpbmVkLiAiQW5kIHRoYXQncyB3aHkgSSBzYWlkIGl0J3MgbmV2ZXIgdG9vIGxhdGUgdG8gZGlzY292ZXIgdGhlIHRydXRoLiAKQXNrcyBpZiBJIGhhdmUgYSBmbHVzaCBkcmF3LiBIZXJlIGlzIHRoZSBzY2VuYXJpbzogSSBzYXksIHllcyBJIGRvLiBIZSBzYXlzIHN0b3AgYnMgYW5kIGdvZXMgb24gYSByYW50IGJsYWggYmxhaCwgaGUgY2FsbCBtZSBpZiBJIGhhdmUgYSBGRC4gCkkgZG9uJ3QgYmVsaWV2ZSB3ZSB3b3VsZCBsb3NlIGFueWJvZHkgaWYgd2Ugc2V0IGEgYmhwIG1heGltYSBhdCAyMDAuIFdoYXQgd2UgJ3Nob3VsZCcgZG8gYnkgdGhhdCBpcyBzdGFuZCB0byBnYWluIGNvbXBldGl0b3JzIGFzIGl0IGluZXZpdGFibHkgYWxsb3dzIGNvc3RzIHRvIGJlIHBlZ2dlZCBhbmQgcmVsaWFiaWxpdHkgcmVsYXRpdmVseSBhc3N1cmVkLiBQb3RlbnRpYWxseSB3aXRoaW4gdGhlIENoYW1waW9uc2hpcCBpdCB3b3VsZCBlbmFibGUgbWVyZ2VyIG9mIEEgYW5kIFByb3RvIENsYXNzZXMuIGl0IHdvdWxkIGZhY2lsaXRhdGUgc2V2ZXJhbCBlbmdpbmUgdHlwZXMgYXMgd2VsbCBhbmQgZW5hYmxlIHVzZSBvZiBjdXJyZW50IDQgc3BlZWQgZ2VhcmJveGVzIGZvciB0aG9zZSB1cGdyYWRpbmcgd2hpbGUgdGhlIGZpeCB0byB0aGUgRm9yZCBjZW50cmVkIGRpZmZzIGlzIGluZXhwZW5zaXZlLgpTYW1lIGlzc3VlIEkgaGF2ZSB3aXRoIHNvbWUgb2Ygd2hhdCBEYXZlIFJhbXNleSBwdXNoZXMsIHNwZWNpZmljYWxseSBoaXMgRUxQcyB3aGljaCBoZSB0b3V0cyBhcyBjb21taXRtZW50IHRvIHN1Y2Nlc3MgKHdobyBzdWNjZXNzPykgYW5kIHRoZWlyIGN1c3RvbWVyIHNlcnZpY2UgKHdobyBwYXlpbmcgZm9yIHRoaXM/KS4gCjUpIFRpbWUuIEl0IHRha2VzIHRpbWUgYW5kIHBhdGllbmNlIHRvIGdyb3cgeW91ciBoYWlyIGJhY2sgb3V0LiAKVGhpcyBzZWVtcyBhIGxpdHRsZSB3ZWlyZCwgYnV0IHdoYXRldmVyLiAKSSB3YXMgYWJvdXQgOCBtb250aHMgcHJlZ25hbnQsIGkgc2FpZCBzb21ldGhpbmcgYXQgZmFtaWx5IGRpbm5lciBvbmUgc3VuZGF5IGFib3V0IGhvdyBpIHdhcyBzY2FyZWQgb2YgbGFib3IsIG15IGdyYW0gc2hvdXRzIG91dCAiIHlvdSBrbm93IHlvdSBzaG91bGQgc21va2UgYSBibHVudCIuIApZb3Ugd2FudCBhIGJlZXI/IEdvIHRvIHRoZSBmcmlkZ2UgYW5kIGdldCBpdC4gSGF2ZSB0byBnbyB0byB0aGUgYmF0aHJvb20/IERvbid0IHdvcnJ5IGFib3V0IGNvbGxlY3RpbmcgeW91ciB3aW5uaW5ncywgd2FpdGluZyBmb3IgdGhhdCBpbmZlcm5hbCB0aWNrZXQgdG8gcHJpbnQsIG9yIGFsbCB0aGUgY29pbnMgdG8gZHJvcCBpbnRvIHRoZSB0cmF5LCB0aGVuIGhvcGUgeW91IGhhdmUgYSBjaGlwIGJ1Y2tldCBiaWcgZW5vdWdoIChkb24ndCB3ZSB3aXNoKSBKVVNUIEdPISBZb3VyIGdhbWUgd2lsbCBzdGlsbCBiZSB0aGVyZSwgdGhlIG9sZCBsYWR5IG5leHQgdG8geW91IHdvbid0IHRha2UgeW91ciBtYWNoaW5lLiBJbiBmYWN0IHRoZSBvbmx5IHRoaW5nIHlvdSBoYXZlIHRvIHdvcnJ5IGFib3V0IGlzIGEgcG93ZXIgZmFpbHVyZSwgYW5kIGV2ZW4gdGhlbiB5b3VyIG1vbmV5IGlzIHN0aWxsIHNhZmUsIGJlY2F1c2UgaXRzIGxpbmtlZCB0byBhbiBhY2NvdW50IHRoYXQgb25seSB5b3UgaGF2ZSB0aGUgdXNlcm5hbWUgYW5kIHBhc3N3b3JkICh1bmxlc3MgeW91IGFyZSBtYXJyaWVkLCB0aGVuIHlvdSBtaWdodCBoYXZlIHRvIHdvcnJ5IGFib3V0IHlvdXIgc3BvdXNlKUlmIHlvdSBhcmUgbGlrZSBtZSwgYW5kIHlvdSBqdXN0IGNhbid0IGFmZm9yZCB0byBob3Agb24gYSBwbGFuZSBldmVyeSBuaWdodCBhbmQgZmx5IHRvIExhcyBWZWdhcyBvciBBdGxhbnRpYyBDaXR5LCBvciB3aGVyZXZlciB5b3VyIG5lYXJlc3QgY2FzaW5vIGlzLCBvbmxpbmUgdmlkZW8gcG9rZXIgaXMgdGhlIHBlcmZlY3Qgc29sdXRpb24uIApUaGF0IGlzIHRoZSBwb2ludCBJIG9yaWdpbmFsbHkgcXVlc3Rpb25lZC4gQmVjYXVzZSBhcyBJIHVuZGVyc3RhbmQgaXQgbWFueSBpbmRlcGVuZGVudCBpbnRlbGxpZ2VuY2Ugb3JnYW5pemF0aW9ucyBoYXZlIHJlYWNoZWQgdGhhdCBjb25jbHVzaW9uLiAKU2hlIGlzIGFtYXppbmchIEFuZCBhZnRlciB0aGUgZmlyc3QgMjAgbWludXRlcyB0aGUga2lkcyBjYW4gaGVscCBidXQgbG92ZSBoZXIuIApXaGVuIHRoZSBvcHBvbmVudCBoaXRzLCBpdCBiZWF0cyB5b3VyIGhpdC4gVGhlcmVmb3JlLCBpZiBFMSBhbmQgRTMgaGFwcGVuLCB5b3UgbG9zZS4gSWYgRTEsIEUyIGFuZCBFMyBoYXBwZW4sIHlvdSB3aW4sIHNpbmNlIHlvdSBoaXQgc29tZXRoaW5nIG9uIHRoZSByaXZlciB3aGljaCBiZWF0cyB0aGUgaGl0IGJ5IHlvdXIgb3Bwb25lbnQuCk9ubGluZSBwb2tlciBhbGxvd3MgcGxheWVycyB0byBwbGF5IGRpZmZlcmVudCBraW5kcyBvZiBnYW1lcy4gTGlrZSBUZXhhcyBIb2xkJ2VtLCBPbWFoYSwgU3R1ZCwgUmF6eiwgSG9yc2UsIG9yIHZpcnR1YWxseSBhbnkgb3RoZXIgZ2FtZSB5b3UgY2FuIHRoaW5rIG9mLCB0aGUgb25saW5lIHBva2VyIHNpdGVzIHByb3ZpZGVzIHlvdS4KOyApLiAKVGhpcyBzdG9wcGVkIEFtZXJpY2FucyBmcm9tIHVuZGVyc3RhbmRpbmcgdGhhdCB3ZWFsdGggd2FzIGJlaW5nIHJlZGlzdHJpYnV0ZWQgdXB3YXJkcyBiZWNhdXNlIHRoZSBnb3Zlcm5tZW50IGJlZ2FuIHdyaXRpbmcgbGF3cyB0aGF0IHNjcmV3ZWQgd29ya2VycyBhbmQgYmVuZWZpdGVkIGNvcnBvcmF0aW9ucyBhbmQgdGhlIHdlYWx0aGllc3QuIApXYXJuZXJNZWRpYSByZXByZXNlbnRhdGl2ZXMgc2F5IGEgcHJpb3IgaW52ZXN0aWdhdGlvbiBkaWQgbm90IGZpbmQgaW1wcm9wcmlldHkgaW4gS2lyaydzIGNhc3RpbmcgaW4gZmlsbXMgbGlrZSAiT2NlYW4ncyA4LiIgU2hlIGFsc28gYXBwZWFyZWQgaW4gdGhlIDIwMTYgTmV3IExpbmUgcmVsZWFzZSAiSG93IFRvIEJlIFNpbmdsZS4iCkkgZXZlbiB3ZW50IGFzIGZhciBhcyB0byB1bmluc3RhbGwgYWxsIG9mIHRoZSBhcHBzIGZyb20gdGhlIE1pIEFwcCBTdG9yZSAod2VyZSBhbGwgQ2hpbmVzZSBhbnl3YXkgc28gaXQgZGlkbiBib3RoZXIgbWUpLlR1cm5lZCBvZmYgU3luYywgbG9jYXRpb24gc2VydmljZXMsIGRldGFjaGVkIG15IE1pIEFjY291bnQuIFN0aWxsLCBhIGhvcnJpYmxlIGlkbGUgYmF0dGVyeSBwZXJmb3JtYW5jZS5JdCB3YXNuIHVudGlsIEkgZGlzYWJsZWQgV2lGaSAoc28gdGhlcmUgd2FzbiBhbnkgcG9zc2libGUgaW50ZXJuZXQgYWN0aXZpdHkgYXQgYWxsKSBhbmQgaXQgd2FzIG9ubHkgdGhlbiB3aGVuIEkgbm90aWNlZCBvbmx5IDEgMiUgaWRsZSBiYXR0ZXJ5IGRyYWluIG92ZXIgYSAyNCBob3VyIHBlcmlvZC5BZ2FpbiwgdGhpcyB3YXMgYSBjb21wbGV0ZSBpZGxlIGJhdHRlcnkgZHJhaW4gaXNzdWUuIApJdCBpcyBhbHNvIGNhbGxlZCBwYW5pYyBhdHRhY2sgYW5kIGNhbiBiZSBpbmNvbnZlbmllbnQgd2hlbiBpdCBmbGFyZXMgdXAuIAokMjAwIGlzIHRlY2huaWNhbGx5IDEwMGJiIGRlZXAgaW4gYSAxLzIgZ2FtZSwgYnV0IGl0IHdpbGwgcGxheSBhcyBpZiB5b3UgYXJlIDQwIDUwYmIgZGVlcC4gClRoZXkgYXJlIGV2ZXJ5d2hlcmUgICBtdWNoIGxpa2UgQUEgbWVldGluZ3MuIApJIHBlcnNvbmFsbHkgZG9uJ3Qgd2FudCB0byBsb29rIGxpa2UgSm9obiBDYW5keSwgQmVsdXNoaSwgTmV3bWFuLCBvciBNaWNoYWVsIEphY2tzb24uIApXaW50ZXJzIGFyZSB3b3JzZSBpbiB0aGUgREMgYXJlYS4gClNvbWUgcGVvcGxlIG1heSBjcmF2ZSBhbGNvaG9sIGlmIHRoZWlyIGJsb29kIHN1Z2FyIGxldmVsIGRyb3BzIGJlbG93IG5vcm1hbCBsZXZlbHMuCk9UT0ggdGhlcmUgYSBsb3QgYWJvdXQgZ2FtZSBkZXNpZ24gSSBkb24ga25vdyBhYm91dCwgaXQgbWlnaHQgcmVhbGx5IG5vdCBiZSB0aGF0IGVhc3ksIG1heWJlIHRoZSB0ZWFtIHRoYXQgZGVzaWducyBhbmQgbWFrZXMgc2tpbnMgaXMgc21hbGwuIApSdXNoIGdvYWxzIGxlZCBieSBSb3NzIERlbGF1dyB3aXRoIHR3byBhbmQgc2luZ2xlcyBmcm9tIFR5bGVyIFdvcmttYW4sIEpvZWwgVmFuIFBlbHQsIEJyYWRlbiBSdWZmIGFuZCBLZWF0b24gSm9zdXR0ZXMuIApCdXQgSSdsbCBwYXNzIG9uIG9uZSBsaXR0bGUgdGlkIGJ1dCBmb3IgeW91LiBBY2NvcmRpbmcgdG8gbXkgZG9jdG9yIHRoZXJlJ3MgZXZpZGVuY2UgdGhhdCBzaG93cyBjb3VudHJpZXMgdGhhdCByZWx5IGhlYXZpbHkgb24gY29jb251dCBwcm9kdWN0cyBoYXZlIGEgaGlnaGVyIGxldmVsIG9mIGNob2xlc3Rlcm9sIGluIHRoZWlyIHN5c3RlbXMuIE15IGhlYWx0aCBjb25zY2lvdXMgbWlsIGZvciBzb21lIHJlYXNvbiBoYXMgYSByaWRpY3Vsb3VzbHkgaGlnaCBsZXZlbCBvZiBjaG9sZXN0ZXJvbC4gCkV0IGQnYWJvcmQgY29tbWVudCBsJ2Nyb3VsZW1lbnQgZCd1biBidGltZW50LCBxdWVscXUnZW4gc29pZW50IGxlcyBjYXVzZXMgcGV1dCBhdm9pciBlbmZsYW1tICBkaXN0YW5jZSB0YW50IGRlIHRvbm5lcyBkZSBtdGFsLkFpbnNpLCBjZSBxdWkgcydlc3QgcGFzcyAgbGEgTWVjcXVlIGVzdCBjZXJ0ZXMgdW4gInNpZ25lIiBtYWlzIGlsIGVzdCBhc3NleiBiYW5hbCBldCBqZSBsdWkgdHJvdXZlIHVuIGNhcmFjdHJlIGFzc2V6ICJodW1vcmlzdGlxdWUiIGV0IGplIGNyb2lzIHF1J2lsIG5lIGZhdXQgcGFzIGNoZXJjaGVyIHBsdXMgbG9pbi5UcmFuc2NyaXB0aW9uIGRlIGwnaW50ZXJyb2dhdG9pcmUgZHUgdmlzaW9ubmFpcmVWb3VzIGxhIHRyb3V2ZXJleiBpY2kgOkxlIGNvbnRlbnUgZGUgbCdtaXNzaW9uIGRlIFJhZGlvIFNjaGFsb20gZXN0IGwgOkRpc29ucyBxdWUgbGUgZ2FtaW4gcXVpIHRhaXQgbm9uIHJlbGlnaWV1eCwgc2FucyBsZSBzYXZvaXIsICBjb25maXJtIGxlIGNvbnRlbnUgZGUgdGV4dGVzIHByb3BodGlxdWVzIGVuIHVzYWdlcyBjaGV6IGxlcyBpc3JhbGl0ZXMuIApCdXQgaGUgd2FzIGNlcnRhaW5seSB0aGVyZSBhbmQgbWFkZSB2YWx1YWJsZSBjb250cmlidXRpb25zIHRvIHRoYXQgdGVjaG5vbG9neSwgdGhvdWdoIHRoZSBlZmZvcnQgd291bGQgc29vbiBzd2l0Y2ggaW4gdGhlIDE4NzAgdG8gdGhlIGluY2FuZGVzY2VudCBidWxiLCBhbmQgYnkgMTg4MCBFZGlzb24gd291bGQgaW50cm9kdWNlIGEgc3VjY2Vzc2Z1bCBsaXR0bGUgbnVtYmVyIHdobyBmaWxhbWVudCB3b3VsZCBidXJuIGZvciAxNTAwIGhvdXJzLCBhbmQgdGhlbiB0aGUgcmFjZSB3YXMgb24uMS4gClVzZSB0aGlzIGdpZnQgdG8gZ2V0IG91dCB0aGVyZSBhbmQgc2VlIGFub3RoZXIgcGFydCBvZiB0aGUgd29ybGQuIApUaGF0IGxlZCB0byBuZWdvdGlhdGlvbnMgd2l0aCB0aGUgV2hpdGUgSG91c2UuIApUd28gYWNlcyB0d28gZWlnaHRzLCBjYWxsZWQgYSBkZWFkIG1hbidzIGhhbmQuIFRoaXMgdGVybSBpcyBhbHNvIHVzZWQgZm9yIGEgaGFuZCB0aGF0IGlzIHZlcnkgZ29vZCwgYnV0IG5vdCBhIHdpbm5lciAoc28geW91IGFyZSBkZWZpbml0ZWx5IGdvaW5nIHRvIGxvc2UgbW9uZXkgb24gaXQpLiBFeGFtcGxlOiBZb3UgYXJlIGhvbGRpbmcgQUEgaW4gSG9sZGVtLCBhbmQgdGhlIGZsb3AgYnJpbmdzIEFLSy4gTm93IGlmIHlvdXIgb3Bwb25lbnQgaXMgaG9sZGluZyBLSywgd2hpY2ggZ2l2ZXMgaGltIGZvdXIgb2YgYSBraW5kLCB5b3UgYXJlIGhvbGRpbmcgYSBkZWFkbWFuJ3MgaGFuZCwgc2luY2UgeW91IGFyZSB2ZXJ5IGxpa2VseSB0byBwdXQgbG90cyBvZiBtb25leSBpbiB0aGUgcG90LCBvciBldmVuIGdvIGFsbGluLCB3aXRoIGEgbG9zaW5nIGhhbmQuIEluIHRoaXMgY2FzZSB0aGUgIjUgb2YgYSBraW5kIiBpcyB0aGUgaGlnaGVzdCBwb3NzaWJsZSBoYW5kIGJ1dCB3aWxsIHJhcmVseSBiZSBmb3VuZCBpbiBsaXZlIHBva2VyIGdhbWVzLiBXaWxkIGNhcmQgcG9rZXIgY2FuIGJlIGZvdW5kIG1vcmUgaW4gVmlkZW8gUG9rZXIgZ2FtZXMuIChGdWxsIEFuc3dlcikKSSBsaWtlIHlvdXIgaWRlYSBvZiBpdGVtcy9raXRzIG5lZWRlZCB0byAiY2xhaW0iIGNlcnRhaW4gdmljdGltcy4gSXQgZml0cyB3aXRoIHRoZSBmZWVsIG9mIHRyeWluZyB0byBhY2NvbXBsaXNoIHNvbWV0aGluZyBuZWZhcmlvdXMgd2hpbGUgdGhlIGNvcHMgYXJlIGFmdGVyIHlvdS4KV2UgcmVhZHkgbm93LCBhbmQgdGhpcyBpcyBqdXN0IHRoZSBzdGFydC4iLiAKQWxsIHRoZSBJbmZvcm1hdGlvbiBpbiBPbmUgUGxhY2UKU3R1ZGllcyB3ZXJlIGV4Y2x1ZGVkIGlmIHRoZXkgaW5jbHVkZWQgcGFydGljaXBhbnRzIHdpdGggYmlwb2xhciBkaXNvcmRlciBvciBjeWNsb3RoeW1pYyBkaXNvcmRlci4gVGhlIGluY2x1ZGVkIHRyaWFscyB3ZXJlIG9mIGFkb2xlc2NlbnRzIHdpdGggZGVwcmVzc2lvbiBvciBkeXN0aHltaWEsIGFkb2xlc2NlbnQgbW90aGVycyB3aXRoIGR5c3RoeW1pYSwgYW5kIHByZWduYW50IG1vdGhlcnMgd2l0aCBkZXByZXNzaW9uLiBTdHVkaWVzIG9mIGRlcHJlc3Npb24gb3IgU1NEIG1lYXN1cmVkIHByZSAgYW5kIHBvc3QgdHJlYXRtZW50IHdlcmUgZWxpZ2libGUgZm9yIGluY2x1c2lvbi4gCkJvdGggQ1BQIGFuZCBPQVMgYXJlIHZhbHVhYmxlIGluIHRoYXQgdGhleSBhcmUgaW5mbGF0aW9uIGluZGV4ZWQgZ3VhcmFudGVlZCBmb3IgbGlmZSBwYXltZW50cy4gSWYgeW91IGxhY2sgYW4gZW1wbG95ZXIgZGVmaW5lZCBiZW5lZml0IHBlbnNpb24sIHRoZSBwcm9zcGVjdCBvZiBoaWdoZXIgQ1BQIGFuZCBPQVMgYmVuZWZpdHMgaXMgbm90IHRvIGJlIGRpc21pc3NlZCBsaWdodGx5LiAKV2hhdCB0aGUgQmVzdCBQb2tlciBCb29rcyBXb250IFRlYWNoIFlvdQpEb2VzbiBtYXR0ZXIgaWYgaXQgb25lIG9mIHRoZSBtYWlucyBvciB0aGUgcml2YWxzIChJIGVuZGVkIHVwIGxpa2luZyB0aGVtIGFsbCB0b28gbXVjaCkuLiAKTm9ydGggQmF5IEp1c3RpbiBCcmF6ZWF1IGlzIHRoZSBtb3N0IGxpa2VseSB0byBwdXNoIGhpbSBhbmQgaGUgaGFzIGZpdmUgZ29hbHMgaW4gaGlzIHBhc3QgZml2ZSBnYW1lcyB0byByZWFjaCA1My4gTmVpdGhlciBwbGF5ZXIgc2NvcmVkIDQwIGdvYWxzIGEgeWVhciBhZ28sIHNvIHRoZXkgaGF2ZSB0YWtlbiBmdWxsIGFkdmFudGFnZSBvZiB0aGVpciBzdHJlbmd0aCBhbmQgZXhwZXJpZW5jZS4gCkhlbGxvLCB3YW50IHRvIGNyYWNrIHdpbmRvd3MuIEknbSBsb29raW5nIGZvciBhIGtleSBmb3IgV2luZG93cyA3LCBhbnlvbmUgaGF2ZSBvbmUgdG8gc2hhcmU/IC4gCkl0IHNjYXJlZCB0aGUgc3Qgb3V0IG9mIG1lLiAKRmlzaCBvaWwgYW5kIERlbWVudGlhIEJyaXRpc2ggTWVkaWNhbCBKb3VybmFsClRoZSBNYXNzYWdlIFN0b3JlIGluIEJvdWxkZXIgY2xvc2VzIGFmdGVyIDM3IHllYXJzCkV2ZXJ5dGltZSBJIHNpdCB1cCBoZXJlIEkga2VlcCB3YWl0aW5nIGZvciBhIHZvaWNlIHRvIHdoaXNwZXIgZXZlciBzbyBkZWxpY2F0bHkgaW4gbXkgZWFyICJHZXQgb3V0LiIgVGhlbiBJJ2QgaGF2ZSBhIHJlYXNvbiBmb3Igc2NyZWFtaW5nLCBzdGFyayByYXZpbmcgbWFkLCBkb3duIHRoZSBzdGFpcnMuIEZvciBub3csIEkganVzdCBkbyBpdCBmb3IgdGhlIHByYWN0aWNlLiBUaGUgdmlldyBvdXQgdGhlIHdpbmRvd3MgaXMgZ29yZ2VvdXMgdGhvdWdoLiAKSW4gbXkgZXhwaWVyZW5jZSwgdGhlIG1hY2hpbmUgc29ydGVyIGF0IHRoZSBwbGFudHMgZG8gdGhlIG1vc3QgZGFtYWdlIHRoYXQgYmVmYWxscyBwYXJjZWxzIGFuZCBtYWlsIGhhcHBlbnMgYXQgbWFpbCBzb3J0aW5nIHBsYW50cy4gVGhlIGdldCBhIGJpdCBvZiBhIHJvdWdoIHRyZWF0bWVudCBhdCBkaXN0cmlidXRpb24gY2VudGVycyBhbmQgb2J2aW91c2x5IHBsYWNlbWVudCBjYW4gYmUgYmFkLiBCdXQgd2hlbiBJIHdhcyBhIGNhcnJpZXIgaXQgd2FzIG1vcmUgb2Z0ZW4gdGhhbiBub3QgdGhhdCBJIHJlY2VpdmVkIGEgcGFyY2VsIG9yIGxldHRlciB3aXRoIHZpc2libGUgZGFtYWdlIGZyb20gdGhlIHNvcnRlciByYXRoZXIgdGhlbiBkYW1hZ2Ugb2NjdXJyaW5nIGRhbWFnZSBvbiByb3V0ZS4gSSBjYW4gaW1hZ2luZSB0cnlpbmcgdG8gbmVnb3RpYXRlIHdpdGggVVNQUyB0aG91Z2guIFRoZXJlIGNhbiBiZSByZWFsIGZydXN0cmF0aW5nIHBlb3BsZSB0aGVyZS4KT2YgYWxsIG9mIGRlbSAzIHBoYXNlIDMgd2lyZSBpcyBtb3N0IGVjb25vbWljYWwgYXMgaXQgdXNlcyBsZXNzIGNvbmR1Y3RvciBkYW4gaW4gNCB3aXJlIHN5c3RlbSwgMyBwaGFzZSAzIHdpcmUgaXMgdXNlZCBpbiB0cmFuc21pc3Npb24gYW5kIDQgd2lyZSBpbiBkaXN0cmlidXRpb24gYXMgaXQgaGFzIDMgbGl2ZSBhbmQgb25lIG5ldXRyYWwgd2lyZS4gMyBwaGFzZSBuZWVkcyBsZXNzZXIgY29uZHVjdG9yIHNpemUgdGhhbiAyIHBoYXNlIDQgd2lyZSBmb3IgdGhlIHNhbWUgcG93ZXIuIFRoYXQgd2FzIGFsbCBpIGN1ZCBnZXQuIApMZWFybiB0byBsaWUuIExpZXMgYXJlIHRoZSBjdW5uaW5nIHBlcnNvbidzIGJlc3QgZnJpZW5kLiAKQmVyc2Vya2VyIENhbGwgZXNwZWNpYWxseSBib3RoZXJzIG1lIGJlY2F1c2UsIHRvIG15IG1lbW9yeSBmcm9tIHdoZW4gSSB1c2VkIHRvIHBsYXkgRG90QSwgaXQgZG9lc24gZXZlbiBGRUVMIGxpa2UgQmVyc2Vya2VyIENhbGwgaW4gYSB2YWN1dW0uIApBdCB0aGlzIHBvaW50IEkgaW1hZ2luZSBSZWVib2sgaXMganVzdCB0cnlpbmcgdG8gcmlkZSBvdXQgdGhlIGRlYWwuIEl0IGRvZXNuIHNlZW0gbGlrZSBpdCB3ZW50IHRoZSB3YXkgdGhleSB0aG91Z2h0IGFuZCBmb3IgYWxsIHRoZSBtb25leSB0aGV5IHNwZW50LCBwcm9iYWJseSBnZXR0aW5nIG1vcmUgYmFkIHB1YmxpY2l0eSB0aGFuIGdvb2QuIEZyb20gYSBmYW4gcG9pbnQgb2YgdmlldywgbW9yZSBjdXN0b21pemF0aW9uIHdvdWxkIGJlIGdyZWF0LiBCdXQgZnJvbSBhIGJ1c2luZXNzIHBvaW50IG9mIHZpZXcsIEkgZG9uIHNlZSBob3cgaXQgd29ydGggdGhlaXIgdGltZS4gSSBrbm93IHNvbWUgY29tcGFuaWVzIGxpa2UgTmlrZSBsZXQgeW91IGRvIGN1c3RvbSBzbmVha2VycyBidXQgdGhhdCBhIHBhcnQgb2YgdGhlaXIgYnVzaW5lc3Mgb3ZlciB0aGUgbG9uZyBoYXVsLiBJIGRvbiBrbm93IGhvdyBtdWNoIHRpbWUgYW5kIGVmZm9ydCBSZWVib2sgd291bGQgaGF2ZSB0byBwdXQgaW50byBzZXR0aW5nIHVwIGEgc2ltaWxhciB0aGluZyB3aXRoIGN1c3RvbSBnZWFyIGZvciBwZW9wbGUgb25seSB0byBsb3NlIHRoZSBVRkMgY29udHJhY3QgdG8gc29tZW9uZSBlbHNlIGluIGEgZmV3IHllYXJzLiBJZiBwZW9wbGUgaGFkIGVtYnJhY2VkIHRoZW0gbW9yZSwgdGhlIHNreSB3b3VsZCBoYXZlIGJlZW4gdGhlIGxpbWl0LgpPayBJIHJlYWQgYSBidW5jaCBvZiBjb21tZW50cyBpbiB0aGlzIHBvc3QsIGFuZCBoZXJlIG15IDAuMDIgY2VudHMgd29ydGguIApJIG5vdCB0cnlpbmcgdG8gc3RhcnQgYSBkZWJhdGUgYnV0IHdoZW4gdGhlIHNvdXRoIHNlY2VkZWQgZnJvbSB0aGUgdW5pb24gaXQgd2FzIGFib3V0IGEgbG90IG1vcmUgdGhhbiBzbGF2ZXJ5LiBUaGUgYmlnZ2VzdCBwb2ludCBiZWluZyBhYm91dCBzdGF0ZSBzb3ZlcmVpZ250eSBhbmQgcG9wdWxhdGlvbiBiYXNlZCByZXByZXNlbnRhdGlvbi4KSGUgc2NvcmVkIDMxIHJ1bnMsIGRyb3ZlIGluIDE0IG1vcmUgYW5kIHN0b2xlIGEgZG96ZW4gYmFzZXMgZm9yIHRoZSBUcm9qYW5zLiAKSmUgc3VpcyBwcnNlbnRlbWVudCBlbiB0cmFpbiBkZSByZGlnZXIgdW4gZXNzYWkuIApJbiBhbiBlZmZvcnQgdG8gbWFrZSBDb2x0IGplYWxvdXMsIHNoZSBsaWtlbHkgc2NyZXdlZCBoZXJzZWxmIG92ZXIgcmVnYXJkaW5nIGhlciBpbW1pZ3JhdGlvbiBzdGF0dXMuIFRoYXQgd291bGQgYmUgc3dlZXQsIHN3ZWV0IGthcm1hIGlmIHRoZXkgc2VudCBoZXIgYmFjayBiYXNlZCBvbiBoZXIgc29jaWFsIG1lZGlhIHBvc3RzLiBTaGUgd2lsbCBob3BlZnVsbHkgZ2V0IGhlcnNlbGYgZGVwb3J0ZWQuLiAKRXJ3cm1lbiwgS29jaGVuLCBCcmF0ZW4gdmVybmljaHRldCBlaW5lIHN0YXR0bGljaGUgTWVuZ2UgZGVzIGVudGhhbHRlbmVuIFNhdWVyc3RvZmZzLCBkYXJ1bSBzaW5kIHp1YmVyZWl0ZXRlIEdlbXNlIGltIEdydW5kZSBnZW5vbW1lbiwgbWdlbiBzaWUgYXVjaCBlaW5pZ2UgVml0YW1pbmUgZW50aGFsdGVuLCBiZXJlaXRzIHRvdC4gCkkgZ3Vlc3Mgd2UgY2FuIGFncmVlIG9uIG9uZSB0aGluZy4gSSBkb24gY2FyZSBmb3IgaGlnaCBwcm9maWxlIHB1YmxpYyBmaWd1cmVzIG1ha2luZyBnZW5lcmFsIGRlcm9nYXRvcnkgc3RhdGVtZW50cyByZWdhcmRpbmcgdGhlIGJlbGllZiBzeXN0ZW1zIG9mIG90aGVycywgdW5sZXNzIG9mIGNvdXJzZSB0aGV5IGFyZSBiZWluZyByZWJ1a2VkIGZvciB0aGVpciBvd24uIApXb3JrIHRoZXJlIHVudGlsIHlvdSBnb3R0ZW4gYSBmZWVsIGZvciB3aGF0IHBlb3BsZSBkbyBpbiB0aGF0IHdvcmtwbGFjZS4gCkl0IHdhcyB0aGUgRmxhc2ggZXJhLCB0aGUgR2FtZSBNYWtlciA3IGVyYS4gCkhlIHJlYWxseSBkb2VzIGhhdmUgbmF0aXZlIHBlb3BsZSBjbGVhciBhIHBhdGggdXAgdGhlIHNpZGUgb2YgYSBtb3VudGFpbiwgYW5kIHRoZXkgRE8gaGF1bCB0aGlzIHNoaXAgdXAgYW5kIG92ZXIuIEl0IGlzIHRydWx5IG1hZ25pZmljZW50LCBlc3BlY2lhbGx5IHNlZWluZyB0aGUgYm9hdCBtb3Zpbmcgc2xvd2x5IHVwIGEgbW91bnRhaW4gYXMgYmFja2dyb3VuZCB0byBhIHN3ZWF0aW5nIEZpdHouIFN0b3J5IGlzIHBhcnRpYWxseSBiYXNlZCB1cG9uIHRoZSBhZHZlbnR1cmUgb2YgQ2FybG9zIEZlcm1uIEZpdHpjYXJyYWxkLCB3aG8gaW4gMTg5MCBhdHRlbXB0ZWQgYSBzaW1pbGFyIGZlYXQsIHRob3VnaCB3aXRoIGEgbXVjaCBzbWFsbGVyIHZlc3NlbCwgYW5kIHdobyBhbHNvIGRpc21hbnRsZWQgdGhlIGNyYWZ0IHRvIGhhdWwgaXQgb3ZlcmxhbmQuIApJbiBIYW1pbHRvbi4gUmV0aXJlbWVudCBkaWQgbm90IGxhc3QgbG9uZyBhcyBMZWUgc29vbiBmb3VuZCBhIHBvc2l0aW9uIGFzIEFzc2lzdGFudCBEZWFuIGF0IHRoZSBGYWN1bHR5IG9mIEVkdWNhdGlvbiBpbiB0aGUgU3VsdGFuYXRlIG9mIE9tYW4uIEhlIHJldHVybmVkIHRvIENhbmFkYSB0byB3b3JrIHdpdGggYSBQcml2YXRlIEludGVybmF0aW9uYWwgQ29sbGVnZSBhcyBQcmluY2lwYWwsIHJlY3J1aXRpbmcgc3R1ZGVudHMgZnJvbSBhbGwgb3ZlciBBc2lhLiBBbiBhZHZlbnR1cm91cyBzcGlyaXQgbGVkIHRvIGEgcG9zaXRpb24gd2l0aCB0aGUgQ0lEQSBhbmQgYSB0d28geWVhciBwb3N0aW5nIHRvIENvcm53YWxsIENvbGxlZ2UgaW4gTW9udGVnbyBCYXksIEphbWFpY2Egd2l0aCBCYXJiYXJhIGFuZCB0aGVpciBmaXZlIGNoaWxkcmVuLiAKVW5sZXNzIHRoZXkgdW5kZXJzdGFuZCB0aGUgdGhlb3J5IGJlaGluZCB0aGUgcHJvYmxlbSwgdGhleSBhcmUgbGlrZWx5IHRvIGZvcmdldCBpdCB2ZXJ5IHF1aWNrbHkuWzNdLiAKIlRoZXNlIHdvbWVuIHdlcmUgbHVyZWQgdG8gdGhpcyBjb3VudHJ5IHdpdGggdGhlIHByb21pc2Ugb2YgZW1wbG95bWVudCwgYnV0IGl0IHdhcyBub3QgdW50aWwgdGhleSB3ZXJlIGFjdHVhbGx5IGJyb3VnaHQgaGVyZSB0aGF0IHRoZSBuYXR1cmUgb2YgdGhlIGJ1c2luZXNzIHdhcyBkaXZ1bGdlZCwiIHNhaWQgU2VhdHRsZSBBc3Npc3RhbnQgUG9saWNlIENoaWVmIERlYW5uYSBOb2xsZXR0ZSwgd2hvIGhlYWRzIHRoZSBDcmltaW5hbCBJbnZlc3RpZ2F0aW9ucyBCdXJlYXUuCk1hY2hpbmUgZG9lcyBhIGhlYXQgY3ljbGUgb3Zlcm5pZ2h0ICh3ZSBjbG9zZSkgc28gaXQgaXNuIGF2YWlsYWJsZSBmcm9tIDFhbSA2YW0uIApHZXQgYSBjb3VwbGUgdGllcyB0aGF0IG1hdGNoIGFuZCBhIHBvY2tldCBzcXVhcmUuIApUaGVzZSBhY3Rpb25zIG1hZGUgaW4gRGlzY29yZCBtdXN0IGFsc28gYmUgdGFrZW4gd2l0aCB0aGUgbm90ZSB0aGF0IG5vIHNpbmdsZSBtb2QgZnJvbSB0aGUgRGlzY29yZCB2b3RlIHBvc3RlZCBvbiAvci9mdXR1cm9sb2d5bW9kZXJhdG9ycyBhYm91dCB0aGUga2ljay4uIApUaGUgb3Bwb3NpdGlvbiBsYWJlbGxlZCB0aGUgY3V0IGEgc2hhbSwgc2F5aW5nIHRoZSBudW1iZXIgb2YgbWFjaGluZXMgaW4gb3BlcmF0aW9uIHdhcyBhYm91dCA5OCwwMDAuIEl0IHdhcyByZXZlYWxlZCByZWNlbnRseSB0aGF0IHBva2VyIG1hY2hpbmUgcGxheWVycyB3ZXJlIGxvc2luZyBtb3JlIHRoYW4gJDFtaWxsaW9uIGEgd2VlayBpbiBBbGJ1cnkncyBsaWNlbnNlZCBjbHVicyBhbmQgcHJvYmFibHkgJDI1MCwwMDAgaW4gaG90ZWxzLiBTdCBEYXZpZCdzIFVuaXRpbmcgQ2FyZSBnYW1ibGluZyBjb3Vuc2VsbG9yIEJhcnJ5IFByYXRlciBzYWlkIHN0b3BwaW5nIG1vcmUgcG9rZXIgbWFjaGluZXMgd2FzIHZpdGFsIGZvciBBbGJ1cnksIHdoaWNoIGhhZCBhIG1ham9yIGlzc3VlIHdpdGggcHJvYmxlbSBnYW1ibGluZy4gCkhvdyBkbyB5b3UgZWF0IGFuIGVsZXBoYW50PyBPbmUgYml0ZSBhdCBhIHRpbWUhIFF1aXQgbG9va2luZyBhdCB0aGUgb3ZlcmFsbCBnb2FsIGJlY2F1c2UgaXQgYW4gaW52aXRhdGlvbiB0byBydW1pbmF0aW9uIGFuZCBibHVlLCBkZXByZXNzZWQgZmVlbGluZ3MuIAonJ1VuZm9ydHVuYXRlbHkgdGhlcmUgbmVlZHMgdG8gYmUgc29tZSBkcmFtYXRpYyBjaGFuZ2VzLiBXZSBzYXcgc29tZSBjb21wYXJhdGl2ZSBmaWd1cmVzIHdpdGggb3RoZXIgdmVudWVzIC4gQW5kIHdlIGFscmVhZHkgaGF2ZSB0aGUgS2VubyBkb3duIHRoZXJlLicnIENyIE1hcnNoIHNhaWQgc2hlIHN0aWxsIGJlbGlldmVkIGFjY29tbW9kYXRpb24sIG5vdCBwb2tlciBtYWNoaW5lcyB3b3VsZCBtYWtlIFRoZSBMaW5rcyB3b3JrLiAKQ2FzdDogU2NobnVja2VsIEJlYSBSaWNreSBUemF0emlja3kgVGl0bGU6IEF2YW50Z2FyZGUgRXh0cmVtZSAzNCBHZW5yZTogT3JhbCwgQW5hbCwgUGlzcywgU2NhdCwgR2VybWFueSAwMTo0OToyNyBEVkRSaXAgYXZpIDg5MSBNQi4gUmVhZHkgZm9yIGFuIGV4dHJlbWUgYWR2ZW50dXJlIG9mIGEgZ2VybWFuIGJsb25kIGdpcmwgaW4gYmVybGluPyBXYXRjaCBpZiB5b3UgYXJlIGludG8gaGFyZGNvcmUgc2V4IG1vdmllcyB3aXRoIGFuIGF2YW50IGdhcmRlIHN0b3J5IGxpbmUgYW5kIGtpbmt5IHN0cm9uZy4gCkJpYXQga2x0ciwgb3Rvcml0ZXllIHRhcG1hIGFydGsgZGFtYXJsYXJuemEga2FkYXIgaWxlbWkuIDEgcG9pbnQgIHN1Ym1pdHRlZCAyOSBkYXlzIGFnb0JpemltIG1hbGxhciBkYSBvayBzZXZpeW9yIGJ1IHRhcnogZXlsZXJpLiAiQ2VsYWwgaG9jYSBtYWxhIGJhbGFkbiwgQ2FybCBzYWdhbiB5bGUgaXlpeWRpIGJ5bGUgaXlpeWRpIE5hc2F5YSBpbGhhbSBvbGR1IG1iZW5kaXNsZXJlIGlsaGFtIG9sZHUgdnMgdnMuIkhvY2FtIGFsbmRtIG5rIGJlbGxpIGtpIGJlbmltIGNvbW1lbnQga2FyIHN5bGVtaXNpbiBidSBsYWYsIHRocmVhZCB0b3AgY29tbWVudCBiZW5pbWtpIHZlIGJlbiBkZSBOQVNBIFNhZ2FuIG1oZW5kaXNsZXJlIGlsaGFtIHZlcm1lc2luZGVuIGZhbGFuIGJhaHNldHRpbSBvIHlvcnVtZGEuIApPZiBhbGwgdGhlIG1hbnkgb3V0c3RhbmRpbmcgYmVhY2hzaWRlIGRlc3RpbmF0aW9ucyBhbG9uZyB0aGUgRWFzdCBDb2FzdCBvciBldmVuIHRoZSBXZXN0IENvYXN0LCBBdGxhbnRpYyBDaXR5IGlzIHRydWx5IG9uZSBvZiBhIGtpbmQuIEhvbWUgdG8gQW1lcmljYSBmaXJzdCBib2FyZHdhbGsgYW5kIFZlZ2FzIHN0eWxlIGNhc2lubyBnYW1ibGluZywgQXRsYW50aWMgQ2l0eSBvZmZlcnMgYSBsaXR0bGUgYml0IG9mIGV2ZXJ5dGhpbmcgZm9yIG1vc3QgZXZlcnkgdHlwZSBvZiB0cmF2ZWxlci4gQXMgYSBmYW1pbHkgZnJpZW5kbHkgZGVzdGluYXRpb24gYW5kIHRoZSBlbnRlcnRhaW5tZW50IGNhcGl0YWwgb2YgdGhlIEplcnNleSBTaG9yZSwgdGhlcmUgYXJlIG1hbnkgbG9jYWwgYXR0cmFjdGlvbnMgdG8gZW5qb3ksIGxpa2UgU3RlZWwgUGllciwgdGhlIG9sZGVzdCB0aGVtZSBwYXJrIGluIHRoZSBjaXR5LCB0aGUgQXRsYW50aWMgQ2l0eSBBcXVhcml1bSBhbmQgdGhlIEF0bGFudGljIENpdHkgQm9hcmR3YWxrIGl0c2VsZiwgaW4gYWRkaXRpb24gdG8gYSB3ZWFsdGggb2YgYWZmb3JkYWJsZSByZXN0YXVyYW50cyBhbmQgbG9kZ2luZywgaW5jbHVkaW5nIGNhc2lubyBob3RlbHMgbGlrZSBCb3JnYXRhIEhvdGVsIENhc2lubyBTcGEgYW5kIENhZXNhcnMgQXRsYW50aWMgQ2l0eS4gCihUaHVyc2RheSwgRGVjLiAoRnJpZGF5LCBEZWMuIAo1IHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnbwo=|<---