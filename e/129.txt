<!DOCTYPE html>
<html class="client-nojs" dir="ltr" lang="en">
 <head>
  <meta charset="utf-8"/>
  <title>
   [area1][mkey1][keyword1][symbolx][area1][keywordx][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="MediaWiki 1.22.4" name="generator"/>
  <meta content="" name="ResourceLoaderDynamicStyles"/>
 </head>
 <body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Opposites skin-vector action-view vector-animateLayout">
  <div class="noprint" id="mw-page-base">
  </div>
  <div class="noprint" id="mw-head-base">
  </div>
  <div class="mw-body" id="content" role="main">
   [ahref]
   
   <div id="mw-js-message" style="display:none;">
   </div>
   <h1 class="firstHeading" id="firstHeading" lang="en">
    <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
   </h1>
   <div id="bodyContent">
    <div id="siteSub">
     From Korean Wiki Project
    </div>
    <div id="contentSub">
    </div>
    <div class="mw-jump" id="jump-to-nav">
     Jump to:
     [ahref]
     
     ,
     <a href="h">
      search
     </a>
    </div>
    <div class="mw-content-ltr" dir="ltr" id="mw-content-text" lang="en">
     <p>
      <li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][ahref]<li>[link]</li><li>[link]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][search]
     </p>
     <h2>
      <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
     </h2>
     <ul>
      <li>
       열다 (to open) ↔ 닫다 (to close)
      </li>
      <li>
       이기다 (to win) ↔ 지다(to lose)
      </li>
      <li>
       밀다 (to push) ↔ 당기다 (to pull)
      </li>
      <li>
       늘다 (to increase) ↔ 줄다 (to decrease)
      </li>
      <li>
       자다 (to sleep) ↔ 깨다 / 일어나다 (to wake up)
      </li>
      <li>
       성공하다 (to pass) ↔ 실패하다 (to fail)
      </li>
      <li>
       죽다 (to die) ↔ 태어나다 (to be born)
      </li>
      <li>
       수입하다 (to import) ↔ 수출하다 (to export)
      </li>
      <li>
       나가다 (to go out) ↔ 들어오다 (to come in)
      </li>
      <li>
       필요하다 (to need) ↔ 필요없다 (to not need)
      </li>
      <li>
       가다 (to go) ↔ 오다 (to come)
      </li>
      <li>
       알다 (to know) ↔ 모르다 (to not know)
      </li>
     </ul>
     <h2>
      <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
     </h2>
     <ul>
      <li>
       있다 (to exist) ↔ 없다 (to not exist)
      </li>
      <li>
       가능하다 (to be possible) ↔  불가능하다 (to be impossible)
      </li>
      <li>
       좋다 (to be good) ↔ 나쁘다 (to be bad)
      </li>
      <li>
       약하다 (to be weak) ↔ 강하다(to be strong)
      </li>
      <li>
       단순하다 (to be simple) ↔ 복잡하다 (to be complicated)
      </li>
      <li>
       한산하다 (to not be crowded) ↔ 복잡하다 (to be crowded)
      </li>
      <li>
       뚱뚱하다 (to be fat) ↔ 날씬하다(to be thin)
      </li>
      <li>
       재미있다 (to be fun) ↔ 재미없다 (to not be fun)
      </li>
      <li>
       맛있다 (to be delicious) ↔ 맛없다 (to taste bad)
      </li>
      <li>
       근면하다 / 부지런하다 (to be diligent) ↔ 게으르다 (to be lazy)
      </li>
      <li>
       예쁘다 (to be pretty) ↔ 못생기다 (to be ugly)
      </li>
      <li>
       잘생기다 (to be good looking) ↔ 못생기다 (to be ugly)
      </li>
      <li>
       건강하다 (to be healthy) ↔ 병약하다(to not be healthy)
      </li>
      <li>
       행복하다 (to be happy) ↔ 슬프다(to be sad)
      </li>
      <li>
       빠르다 (to be fast) ↔ 느리다(to be slow)
      </li>
      <li>
       이르다 (to be early) ↔ 늦다 (to be late)
      </li>
      <li>
       겸손하다 (to be humble) ↔ 거만하다 (to be arrogant)
      </li>
      <li>
       사귀다 (to get together) ↔ 헤어지다 (to break up)
      </li>
      <li>
       우연하다 (to do on accident) ↔ 의도하다 (to do on purpose)
      </li>
      <li>
       쓸모있다(유용하다,실용적이다) (useful) ↔ 쓸모없다 (useless)
      </li>
      <li>
       보수적이다 (conservative) ↔ 개방적이다 (liberal)
      </li>
      <li>
       낙관하다 (to be optimistic) ↔ 비관하다 (to be pessimistic)
      </li>
      <li>
       편하다 (to be comfortable) ↔ 불편하다 (to be uncomfortable)
      </li>
      <li>
       충분하다 (to be sufficient) ↔ 부족하다 (to be insufficient)
      </li>
      <li>
       유능하다 (to be efficient) ↔ 무능하다 (to be inefficient)
      </li>
      <li>
       가짜 (fake, imitation) ↔ 진짜 (genuine)
      </li>
      <li>
       진심 (sincere) ↔ 가식 (insincere)
      </li>
      <li>
       최고 (best) ↔ 최악 (worst)
      </li>
      <li>
       흡연구역 (smoking section) ↔비흡연구역 (non smoking section)
      </li>
      <li>
       알뜰하다 (to be thrifty) ↔ 낭비하다(to be wasteful)
      </li>
      <li>
       흥미롭다(관심이 있다) (to be interesting) ↔ 관심이 없다(to not be interesting)
      </li>
      <li>
       믿음직하다 (to be trustworthy) ↔ 믿음직하지 않다(?) (to be untrustworthy)
      </li>
      <li>
       같다 (to be the same) ↔ 다르다 (to be different)
      </li>
      <li>
       바쁘다 (to be busy) ↔ 한가하다 (to be free)
      </li>
      <li>
       유창하다 (to be fluent) ↔ 서투르다 (to be poor at)
      </li>
      <li>
       젊다 (to be young) ↔ 늙다 (to be old)
      </li>
      <li>
       가깝다 (to be close) ↔ 멀다 (to be far)
      </li>
      <li>
       깨끗하다 (to be clean) ↔ 더럽다 (to be dirty)
      </li>
      <li>
       길다 (to be long) ↔ 짧다 (to be short)
      </li>
      <li>
       조용하다 (to be quiet) ↔ 시끄럽다 (to be noisy)
      </li>
      <li>
       좋다 (to be good) ↔ 싫다 (to dislike)
      </li>
      <li>
       덥다 (to be hot) ↔ 춥다 (to be cold)
      </li>
      <li>
       뜨겁다 (to be hot [to the touch]) ↔ 차갑다 (to be cold [to the touch])
      </li>
      <li>
       높다 (to be high) ↔ 낮다 (to be low)
      </li>
      <li>
       가볍다 (to be light) ↔ 무겁다 (to be heavy)
      </li>
      <li>
       넓다 (to be wide) ↔ 좁다 (to be narrow)
      </li>
      <li>
       밝다 (to be bright) ↔ 어둡다 (to be dark)
      </li>
      <li>
       달다 (to be sweet) ↔ 쓰다 (to be bitter)
      </li>
      <li>
       안전하다 (to be safe) ↔ 위험하다 (to be dangerous)
      </li>
      <li>
       맑다 (맑다) ↔ 흐리다 (to be cloudy)
      </li>
      <li>
       얇다 (to be thin) ↔ 두껍다 (to be thick)
      </li>
      <li>
       꽉끼다 (to be tight)↔ 헐렁하다/느슨하다(to be loose)
      </li>
     </ul>
    </div>
    <div class="printfooter">
     Retrieved from "
     [ahref]
     
     "
    </div>
    <div class="catlinks" id="catlinks">
     <div class="mw-normal-catlinks" id="mw-normal-catlinks">
      [link]
      
      :
      <ul>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div class="visualClear">
    </div>
   </div>
  </div>
  <div id="mw-navigation">
   <h2>
    [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
   </h2>
   <div id="mw-head">
    <div aria-labelledby="p-personal-label" class="" id="p-personal" role="navigation">
     <h3 id="p-personal-label">
      [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
     </h3>
     <ul>
      <li id="pt-login">
       [link]
       
      </li>
     </ul>
    </div>
    <div id="left-navigation">
     <div aria-labelledby="p-namespaces-label" class="vectorTabs" id="p-namespaces" role="navigation">
      <h3 id="p-namespaces-label">
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <ul>
       <li class="selected" id="ca-nstab-main">
        <span>
         Page<li>[search]</li>[link][link][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[search]</li><li>[ahref]</li>[ahref]
        </span>
       </li>
       <li class="new" id="ca-talk">
        <span>
         <li>[link]</li><li>[search]</li><li>[ahref]</li>[link]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>
        </span>
       </li>
      </ul>
     </div>
     <div aria-labelledby="p-variants-label" class="vectorMenu emptyPortlet" id="p-variants" role="navigation">
      <h3 id="mw-vector-current-variant">
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <h3 id="p-variants-label">
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <div class="menu">
       <ul>
       </ul>
      </div>
     </div>
    </div>
    <div id="right-navigation">
     <div aria-labelledby="p-views-label" class="vectorTabs" id="p-views" role="navigation">
      <h3 id="p-views-label">
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <ul>
       <li class="selected" id="ca-view">
        <span>
         [link]
         
        </span>
       </li>
       <li id="ca-viewsource">
        <span>
         [ahref]
         
        </span>
       </li>
       <li class="collapsible" id="ca-history">
        <span>
         <li>[link]</li><li>[link]</li>[ahref][search][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[link]</li>
        </span>
       </li>
      </ul>
     </div>
     <div aria-labelledby="p-cactions-label" class="vectorMenu emptyPortlet" id="p-cactions" role="navigation">
      <h3 id="p-cactions-label">
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <div class="menu">
       <ul>
       </ul>
      </div>
     </div>
     <div id="p-search" role="search">
      <h3>
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <form action="/wiki/index.php" id="searchform">
       <div id="simpleSearch">
        <button id="searchButton" name="button" title="Search the pages for this text" type="submit">
        </button>
       </div>
      </form>
     </div>
    </div>
   </div>
   <div id="mw-panel">
    <div id="p-logo" role="banner">
     [ahref]
     
    </div>
    <div aria-labelledby="p-navigation-label" class="portal" id="p-navigation" role="navigation">
     <h3 id="p-navigation-label">
      [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="n-Site-news">
        [link]
        
       </li>
       <li id="n-mainpage-description">
        [link]
        
       </li>
       <li id="n-Dialects">
        [ahref]
        
       </li>
       <li id="n-Learning-Hangeul">
        [ahref]
        
       </li>
       <li id="n-Categories">
        [link]
        
       </li>
       <li id="n-Expressions">
        <a href="/wiki/Category:Expressions">
         Expressions
        </a>
       </li>
       <li id="n-Grammar">
        [ahref]
        
       </li>
       <li id="n-Hanja">
        <a href="/wiki/Hanja">
         Hanja
        </a>
       </li>
       <li id="n-Idioms">
        [link]
        
       </li>
       <li id="n-Proverbs">
        [link]
        
       </li>
       <li id="n-Slang">
        [link]
        
       </li>
       <li id="n-Survival-Korean">
        [ahref]
        
       </li>
       <li id="n-TTMIK-Lessons">
        [ahref]
        
       </li>
       <li id="n-Vocabulary">
        [link]
        
       </li>
       <li id="n-Quizzes">
        [link]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-Miscellaneous-label" class="portal" id="p-Miscellaneous" role="navigation">
     <h3 id="p-Miscellaneous-label">
      [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="n-Articles">
        [ahref]
        
       </li>
       <li id="n-Hangeul-Assistant">
        <a href="/wiki/Hangeul_Assistant">
         Hangeul Assistant
        </a>
       </li>
       <li id="n-K-Drama-locations">
        [ahref]
        
       </li>
       <li id="n-Media">
        <a href="/wiki/Category:Media">
         Media
        </a>
       </li>
       <li id="n-randompage">
        [ahref]
        
       </li>
       <li id="n-recentchanges">
        [link]
        
       </li>
       <li id="n-Resources">
        [ahref]
        
       </li>
       <li id="n-Facebook-page">
        [ahref]
        
       </li>
       <li id="n-Youtube-channel">
        [link]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-Help-label" class="portal" id="p-Help" role="navigation">
     <h3 id="p-Help-label">
      [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="n-Editing-help">
        [link]
        
       </li>
       <li id="n-Getting-Started">
        <a href="/wiki/Getting_Started">
         Getting Started
        </a>
       </li>
       <li id="n-FAQ">
        <a href="/wiki/FAQ">
         FAQ
        </a>
       </li>
       <li id="n-help">
        <a href="/wiki/Help:Contents" title="The place to find out">
         Help
        </a>
       </li>
       <li id="n-portal">
        <a href="/wiki/Korean_Wiki_Project:Community_portal" title="About the project, what you can do, where to find things">
         Community portal
        </a>
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-Affiliate_site-label" class="portal" id="p-Affiliate_site" role="navigation">
     <h3 id="p-Affiliate_site-label">
      [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="n-Talk-to-me-in-Korean">
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-tb-label" class="portal" id="p-tb" role="navigation">
     <h3 id="p-tb-label">
      [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="t-whatlinkshere">
        [link]
        
       </li>
       <li id="t-recentchangeslinked">
        <a accesskey="k" href="/wiki/Special:RecentChangesLinked/Opposites" title="Recent changes in pages linked from this page [k]">
         Related changes
        </a>
       </li>
       <li id="t-specialpages">
        [link]
        
       </li>
       <li id="t-print">
        <a accesskey="p" href="/wiki/index.php?title=Opposites&amp;printable=yes" rel="alternate" title="Printable version of this page [p]">
         Printable version
        </a>
       </li>
       <li id="t-permalink">
        [link]
        
       </li>
       <li id="t-info">
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
   </div>
  </div>
  <div id="footer" role="contentinfo">
   <ul id="footer-info">
    <li id="footer-info-lastmod">
     This page was last modified on 19 March 2010, at 02:10.
    </li>
    <li id="footer-info-viewcount">
     This page has been accessed 10,538 times.
    </li>
    <li id="footer-info-copyright">
     Content is available under
     [ahref]
     
     unless otherwise noted.
    </li>
   </ul>
   <ul id="footer-places">
    <li id="footer-places-privacy">
     <a href="/wiki/Korean_Wiki_Project:Privacy_policy" title="Korean Wiki Project:Privacy policy">
      Privacy policy
     </a>
    </li>
    <li id="footer-places-about">
     [ahref]
     
    </li>
    <li id="footer-places-disclaimer">
     [link]
     
    </li>
   </ul>
   <ul class="noprint" id="footer-icons">
    <li id="footer-copyrightico">
     [link]
     
    </li>
    <li id="footer-poweredbyico">
     [link]
     
    </li>
   </ul>
   <div style="clear:both">
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0131
  </b>
 </body>
</html>
