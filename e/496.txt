<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <title>
   [area1][mkey1][keyword1][symbolx][area1][keywordx][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title"/>
  <meta content="" property="og:image"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
  <meta content="text/html; charset=utf-8" http-equiv="content-type"/>
 </head>
 <body>
  <noscript>
   <iframe height="0" src="https://www.googletagmanager.com/ns.html?id=GTM-PV6PGRN" style="display:none;visibility:hidden" width="0">
   </iframe>
  </noscript>
  <div class="person_InfoBg" id="personInfoBgBox" style="display:none">
  </div>
  <div id="global">
   <div class="global_wrap">
    <div class="globalbtn">
     <a class="login" href="/login.mvc">
      로그인
     </a>
     [ahref]
     
     [link]
     
     <a class="btn" href=":" id="all_menu_view">
     </a>
    </div>
   </div>
  </div>
  <div id="all_menu">
   <form action="/product/maniaworld/surporterhome/surporterHome.mvc" id="surporterForm" name="surporterForm">
   </form>
   <form action="/product/maniaworld/teachermain/teacherMain.mvc" id="teacherForm" name="teacherForm">
   </form>
   <div class="am_wrap_1">
   </div>
  </div>
  <hr/>
  <div id="wrap">
   <div class="in_wrap">
    <div id="header">
     <div class="headtop jn_mainHead">
      <h1 class="logo">
       [area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]
      </h1>
      <form action="/product/maniaworld/surporterhome/surporterHome.mvc" id="surporterForm" name="surporterForm">
      </form>
      <form action="/product/maniaworld/teachermain/teacherMain.mvc" id="teacherForm" name="teacherForm">
      </form>
      <form action="/product/autonomy/autonomyHomeSubmit.mvc" id="autonomySearchForm" method="post">
       <div class="topsearch">
        <select id="headerSearchMenu" name="searchMenu" style="width:100px;" title="">
         <option value="A00">
          전체
         </option>
         <option value="A01">
          정보찾기
         </option>
         <option value="A02">
          척척박사연구소
         </option>
         <option value="A03">
          창의탐험대
         </option>
         <option value="A04">
          과학송
         </option>
         <option value="A05">
          과학아!놀자
         </option>
         <option value="A06">
          기타
         </option>
        </select>
        <a class="search_btn" href=";" id="autonomySearchButton">
        </a>
       </div>
      </form>
      <div class="recommend_words">
       <a href=";">
        생산자
       </a>
       ,
       [ahref]
       
       ,
       <a href=";">
        생식세포
       </a>
       ,
       [ahref]
       
       ,
       <a href=";">
        저기압
       </a>
       ,
       [link]
       
       ,
       [link]
       
       ,
       [ahref]
       
       ,
       <a href=";">
        지각변동
       </a>
      </div>
      <div class="jn_mainVsualBg" style="margin-right:-20px;">
      </div>
     </div>
     <div class="gnbwrap">
      <div class="mbox">
       <div class="login_box">
        <form action="/loginSubmit.mvc" id="topLogin" method="post" name="topLogin">
         <a class="lb_btn" href="#">
         </a>
        </form>
       </div>
       <div class="mini_science_box none" id="mini_science_box">
       </div>
      </div>
      <ul id="gnb">
       <li class="dept1">
        <a class="dept1_btn" href="#">
        </a>
        <div class="gnbsub cate1" style="display:none;">
         <p>
          <li>[ahref]</li><li>[ahref]</li><li>[search]</li><li>[link]</li><li>[link]</li><li>[ahref]</li>
         </p>
         <ul>
          <li>
           <a href="/product/infosearch/subjhotissue/subjHotissueList.mvc?initPage=init">
           </a>
          </li>
          <li>
           <a href="/product/infosearch/curiosityres/curiosityResList.mvc?initPage=init">
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </div>
       </li>
       <li class="dept1">
        [ahref]
        
        <div class="gnbsub cate2" style="display:none;">
         <p>
          [ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref][ahref]<li>[link]</li><li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[ahref]</li>
         </p>
         <ul>
          <li>
           <a href="/" target="_blank">
           </a>
          </li>
          <li>
           [link]
           
          </li>
          <li>
           <a href="/product/scilab/submain/subMainStory.mvc?initPage=init">
           </a>
          </li>
         </ul>
        </div>
       </li>
       <li class="dept1">
        <a class="dept1_btn" href="#">
        </a>
        <div class="gnbsub cate3" style="display:none;">
         <p>
          [search]<li>[search]</li>[ahref][search][ahref]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link]
         </p>
         <ul>
          <li>
           [search]
           
          </li>
          <li>
           <a href="/product/creativeexpedition/infouse/infoUse.mvc">
           </a>
          </li>
          <li>
           <a href="/product/creativeexpedition/scientist/scientistList.mvc?initPage=init">
           </a>
          </li>
          <li>
           <a href="/product/creativeexpedition/scininfo/scinInfoList.mvc?initPage=init">
           </a>
          </li>
         </ul>
        </div>
       </li>
       <li class="dept1">
        [ahref]
        
        <div class="gnbsub cate4" style="display:none;">
         <p>
          <li>[search]</li>[search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li><li>[ahref]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
         </p>
         <ul>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </div>
       </li>
       <li class="dept1">
        <a class="dept1_btn" href="/product/scienceenjoy/submain/subMain.mvc">
        </a>
        <div class="gnbsub cate5" style="display:none;">
         <p>
          [ahref]
          
         </p>
         <ul>
          <li>
           [link]
           
          </li>
          <li>
           [link]
           
          </li>
          <li>
           <a href="/product/scienceenjoy/cartoonboard/synopsisList.mvc?initPage=init">
           </a>
          </li>
          <li>
           <a href="/product/scienceenjoy/cartoonucc/cartoonUccList.mvc?initPage=init">
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </div>
       </li>
       <li class="dept1">
        <a class="dept1_btn" href="/product/maniaworld/submain/subMain.mvc">
        </a>
        <div class="gnbsub cate6" style="display:none;">
         <p>
          [ahref]
          
         </p>
         <ul>
          <li>
           <a href="/product/maniaworld/mybox/myBoxHome.mvc">
           </a>
          </li>
          <li>
           [link]
           
          </li>
          <li>
           <a href="/product/maniaworld/lghall/lgHall.mvc">
           </a>
          </li>
          <li>
           [link]
           
          </li>
         </ul>
        </div>
       </li>
      </ul>
     </div>
    </div>
    <hr/>
    <div id="container">
     <div id="lnbsection">
      <h1 class="lnbtit">
       <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
      </h1>
      <ul class="lnbmenu" id="lnb_scilab">
       <li>
        <a class="dept1" href="/" target="_blank">
        </a>
       </li>
       <li>
        [link]
        
        <ol class="lnb2">
         <li>
          <a class="dept2" href="t">
          </a>
          <ol class="lnb3">
           <li>
            <a href="/product/scilab/sciencelablist/SINM/sciencelabListList.mvc?initPage=init">
            </a>
           </li>
           <li>
            [link]
            
           </li>
           <li>
            [link]
            
           </li>
           <li>
            <a href="/product/scilab/sciencelablist/EXSC/sciencelabListList.mvc?initPage=init">
            </a>
           </li>
           <li>
            <a href="/product/scilab/sciencelablist/TEAS/sciencelabListList.mvc?initPage=init">
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="/product/scilab/sciencelablist/TEST/sciencelabListList.mvc?initPage=init">
            </a>
           </li>
           <li>
            <a href="/product/scilab/sciencelablist/TEMG/sciencelabListList.mvc?initPage=init">
            </a>
           </li>
           <div class="dot">
           </div>
          </ol>
         </li>
         <li>
          [ahref]
          
          <ol class="lnb3">
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="/product/scilab/sciencelablist/PHY/sciencelabSubjectList.mvc?initPage=init">
            </a>
           </li>
           <li>
            [link]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="/product/scilab/sciencelablist/EAR/sciencelabSubjectList.mvc?initPage=init">
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="/product/scilab/sciencelablist/MAT/sciencelabSubjectList.mvc?initPage=init">
            </a>
           </li>
           <li>
            [link]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <div class="dot">
           </div>
          </ol>
         </li>
        </ol>
       </li>
       <li>
        [link]
        
        <ol class="lnb2">
         <li>
          [ahref]
          
          <ol class="lnb3">
           <li>
            <a href="/product/scilab/sciencestorylist/PVSC/sciencestoryListList.mvc?initPage=init">
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="/product/scilab/sciencestorylist/ALMA/sciencestoryListList.mvc?initPage=init">
            </a>
           </li>
           <li>
            <a href="/product/scilab/sciencestorylist/ASSY/sciencestoryListList.mvc?initPage=init">
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="/product/scilab/sciencestorylist/TWDT/sciencestoryListList.mvc?initPage=init">
            </a>
           </li>
           <li>
            <a href="/product/scilab/sciencestorylist/SCSC/sciencestoryListList.mvc?initPage=init">
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="/product/scilab/sciencestorylist/SUAT/sciencestoryListList.mvc?initPage=init">
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="/product/scilab/sciencestorylist/PTST/sciencestoryListList.mvc?initPage=init">
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [link]
            
           </li>
           <li>
            <a href="/product/scilab/sciencestorylist/WEST/sciencestoryListList.mvc?initPage=init">
            </a>
           </li>
           <li>
            <a href="/product/scilab/sciencestorylist/ENVI/sciencestoryListList.mvc?initPage=init">
            </a>
           </li>
           <li>
            <a href="/product/scilab/sciencestorylist/CRMA/sciencestoryListList.mvc?initPage=init">
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <div class="dot">
           </div>
          </ol>
         </li>
         <li class="on">
          [link]
          
          <ol class="lnb3">
           <li>
            <a href="/product/scilab/sciencestorylist/ALL/sciencestorySubjectList.mvc?initPage=init">
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [link]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="/product/scilab/sciencestorylist/TEC/sciencestorySubjectList.mvc?initPage=init">
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [link]
            
           </li>
           <li>
            <a href="/product/scilab/sciencestorylist/ENV/sciencestorySubjectList.mvc?initPage=init">
            </a>
           </li>
           <li>
            [link]
            
           </li>
           <div class="dot">
           </div>
          </ol>
         </li>
        </ol>
       </li>
      </ul>
     </div>
     <div id="contsection">
      <div class="content_top">
       <p class="line">
       </p>
       <p class="illust">
        [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][ahref]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[ahref]</li>
       </p>
       <span class="location_warp_left">
        [ahref][link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[ahref]<li>[search]</li><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>[ahref]
       </span>
       <h2 class="cont_title">
        [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
       </h2>
       <p class="cont_title_comment">
        주제별로 보는 과학이야기 입니다
       </p>
      </div>
      <form action="/product/scilab/sciencestorylist/CHE/sciencestorySubjectList.mvc" id="searchForm" method="post">
       <div id="content">
        <div class="jn_titBoxT">
         <div class="jn_titBoxB">
          <h3>
           [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
          </h3>
          <div class="chch_labor_sort_wrap">
           <table cellpadding="0" cellspacing="0" class="chch_best_story">
            <colgroup>
             <col width="210"/>
             <col width=""/>
            </colgroup>
            <tr>
             <td>
              <a class="bs_picture" href="/product/scilab/sciencestorylist/IQEX/readSciencestoryList.mvc?sciencestoryListId=IQEX2016110001&amp;subjectId=CHE">
              </a>
             </td>
             <td>
              <dl class="bs_article">
               <dt>
                <a href="/product/scilab/sciencestorylist/IQEX/readSciencestoryList.mvc?sciencestoryListId=IQEX2016110001&amp;subjectId=CHE">
                 신라시대 도금기술의 비밀 ‘...
                 <em>
                  (1)
                 </em>
                </a>
               </dt>
               <dd>
                <a href="/product/scilab/sciencestorylist/IQEX/readSciencestoryList.mvc?sciencestoryListId=IQEX2016110001&amp;subjectId=CHE">
                 국내 연구진이 신라시대 도금기술의 비밀을 밝혀냈다. 윤용현 대전 국립중앙과학관 전시관운영팀장 연구진은 신라시대에 사용하던 전통 도금 기법을 재현했다고 24일 밝혔다.
                </a>
               </dd>
              </dl>
             </td>
            </tr>
           </table>
          </div>
         </div>
        </div>
        <div class="cont_search_box">
         [link]
         
         <span class="scomment">
          찾으시는 과학정보가 있으시면 관련 단어로 빠르게 검색해 보세요!
         </span>
        </div>
        <div class="big_round_wrap_top">
         <div class="big_round_wrap_bottom">
          <div class="big_round_wrap_center">
           <div class="list_size_wrap">
            <div class="board_sort_infor">
             <span class="navi_infor">
              모두
              <em>
               296
              </em>
              개의 과학이야기가 있습니다.
             </span>
             <div class="sns_box jn_infor">
              <span class="sns">
               <a href="a" id="kakao_button">
               </a>
               <a href="a" id="twitter_button">
               </a>
               <a href="a" id="facebook_button">
               </a>
               <span class="mail">
                <li>[link]</li><li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][search][link]<li>[search]</li><li>[ahref]</li>[link]
               </span>
              </span>
              <span class="mail">
               <li>[ahref]</li><li>[ahref]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
              </span>
             </div>
            </div>
            <div class="table_wraper">
             <table cellpadding="0" cellspacing="0" class="table_list_sty1">
              <colgroup>
               <col width="44"/>
               <col width="145"/>
               <col width="*"/>
              </colgroup>
              <tbody>
               <tr class="even">
                <td class="c">
                </td>
                <td>
                 <a href="/product/scilab/sciencestorylist/SCSC/readSciencestoryList.mvc?sciencestoryListId=SCSC2018100012&amp;subjectId=CHE">
                 </a>
                </td>
                <td class="top">
                 <dl class="jn_scientist">
                  <dt>
                   296.
                   [ahref]
                   
                   <span class="info">
                    조회 :
                    <em>
                     256
                    </em>
                    등록일 : 2018.10.22
                   </span>
                  </dt>
                  <dd>
                   [link]
                   
                  </dd>
                  <dd class="writer">
                   <em class="subject_tit">
                    [과학향기]
                   </em>
                  </dd>
                 </dl>
                </td>
               </tr>
               <tr class="even">
                <td class="c">
                </td>
                <td>
                 [ahref]
                 
                </td>
                <td class="top">
                 <dl class="jn_scientist">
                  <dt>
                   295.
                   [link]
                   
                   <span class="info">
                    조회 :
                    <em>
                     383
                    </em>
                    등록일 : 2018.10.16
                   </span>
                  </dt>
                  <dd>
                   <a href="/product/scilab/sciencestorylist/ALSC/readSciencestoryList.mvc?sciencestoryListId=ALSC2018100003&amp;subjectId=CHE">
                    과학이라는 한 우물을 파는 사람들의 모습이 일반인에게는 이상하게 보일 때가 있습니다. 당시 사람들에게는 칭송받던 과학자가 오늘날 우리의 눈에는 이상하게 보일 수 있습니다. 수소를 ...
                   </a>
                  </dd>
                  <dd class="writer">
                   <em class="subject_tit">
                    [모두의 과학]
                   </em>
                  </dd>
                 </dl>
                </td>
               </tr>
               <tr class="even">
                <td class="c">
                </td>
                <td>
                 <a href="/product/scilab/sciencestorylist/ALSC/readSciencestoryList.mvc?sciencestoryListId=ALSC2018100001&amp;subjectId=CHE">
                 </a>
                </td>
                <td class="top">
                 <dl class="jn_scientist">
                  <dt>
                   294.
                   [ahref]
                   
                   <span class="info">
                    <li>[link]</li><li>[ahref]</li><li>[ahref]</li>[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]<li>[ahref]</li>[search][search][ahref]<li>[link]</li>[search][search]<li>[link]</li>[link][search]
                   </span>
                  </dt>
                  <dd>
                   [link]
                   
                  </dd>
                  <dd class="writer">
                   <em class="subject_tit">
                    [모두의 과학]
                   </em>
                  </dd>
                 </dl>
                </td>
               </tr>
               <tr class="even">
                <td class="c">
                </td>
                <td>
                 [link]
                 
                </td>
                <td class="top">
                 <dl class="jn_scientist">
                  <dt>
                   293.
                   [ahref]
                   
                   <span class="info">
                    <li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search][search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link][ahref][link]<li>[search]</li>
                   </span>
                  </dt>
                  <dd>
                   [link]
                   
                  </dd>
                  <dd class="writer">
                   <em class="subject_tit">
                    [과학향기]
                   </em>
                  </dd>
                 </dl>
                </td>
               </tr>
               <tr class="even">
                <td class="c">
                </td>
                <td>
                 <a href="/product/scilab/sciencestorylist/SCSC/readSciencestoryList.mvc?sciencestoryListId=SCSC2018090002&amp;subjectId=CHE">
                 </a>
                </td>
                <td class="top">
                 <dl class="jn_scientist">
                  <dt>
                   292.
                   <a href="/product/scilab/sciencestorylist/SCSC/readSciencestoryList.mvc?sciencestoryListId=SCSC2018090002&amp;subjectId=CHE">
                    [KISTI 과학향기] 우연히 발견히...
                    <em>
                     (1)
                    </em>
                   </a>
                   <span class="info">
                    [link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
                   </span>
                  </dt>
                  <dd>
                   [ahref]
                   
                  </dd>
                  <dd class="writer">
                   <em class="subject_tit">
                    [과학향기]
                   </em>
                  </dd>
                 </dl>
                </td>
               </tr>
               <tr class="even">
                <td class="c">
                </td>
                <td>
                 [ahref]
                 
                </td>
                <td class="top">
                 <dl class="jn_scientist">
                  <dt>
                   291.
                   <a href="/product/scilab/sciencestorylist/ALSC/readSciencestoryList.mvc?sciencestoryListId=ALSC2018080004&amp;subjectId=CHE">
                    감자 캐던 청년, 원자핵의 시대를 열...
                    <em>
                     (1)
                    </em>
                   </a>
                   <span class="info">
                    <p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<li>[link]</li>
                   </span>
                  </dt>
                  <dd>
                   [ahref]
                   
                  </dd>
                  <dd class="writer">
                   <em class="subject_tit">
                    [모두의 과학]
                   </em>
                  </dd>
                 </dl>
                </td>
               </tr>
               <tr class="even">
                <td class="c">
                </td>
                <td>
                 <a href="/product/scilab/sciencestorylist/PVSC/readSciencestoryList.mvc?sciencestoryListId=PVSC2018080001&amp;subjectId=CHE">
                 </a>
                </td>
                <td class="top">
                 <dl class="jn_scientist">
                  <dt>
                   290.
                   [link]
                   
                   <span class="info">
                    조회 :
                    <em>
                     571
                    </em>
                    등록일 : 2018.08.08
                   </span>
                  </dt>
                  <dd>
                   [link]
                   
                  </dd>
                  <dd class="writer">
                   <em class="subject_tit">
                    [그림으로 보는 과학]
                   </em>
                  </dd>
                 </dl>
                </td>
               </tr>
               <tr class="even">
                <td class="c">
                </td>
                <td>
                 <a href="/product/scilab/sciencestorylist/ALSC/readSciencestoryList.mvc?sciencestoryListId=ALSC2018080001&amp;subjectId=CHE">
                 </a>
                </td>
                <td class="top">
                 <dl class="jn_scientist">
                  <dt>
                   289.
                   [ahref]
                   
                   <span class="info">
                    조회 :
                    <em>
                     336
                    </em>
                    등록일 : 2018.08.07
                   </span>
                  </dt>
                  <dd>
                   <a href="/product/scilab/sciencestorylist/ALSC/readSciencestoryList.mvc?sciencestoryListId=ALSC2018080001&amp;subjectId=CHE">
                    1945년 8월 6일. 괌의 티니언 미국공군기지에서 3대의 폭격기가 일본을 향해 이륙했습니다. ‘에놀라 게이’라는 편명이 붙여진 B-29 폭격기에는 인류 최초의 원자폭탄이 실려 있...
                   </a>
                  </dd>
                  <dd class="writer">
                   <em class="subject_tit">
                    [모두의 과학]
                   </em>
                  </dd>
                 </dl>
                </td>
               </tr>
               <tr class="even">
                <td class="c">
                </td>
                <td>
                 <a href="/product/scilab/sciencestorylist/SCSC/readSciencestoryList.mvc?sciencestoryListId=SCSC2018040019&amp;subjectId=CHE">
                 </a>
                </td>
                <td class="top">
                 <dl class="jn_scientist">
                  <dt>
                   288.
                   <a href="/product/scilab/sciencestorylist/SCSC/readSciencestoryList.mvc?sciencestoryListId=SCSC2018040019&amp;subjectId=CHE">
                    자연에서 얻은 색소 - 천연염료
                    <em>
                     (1)
                    </em>
                   </a>
                   <span class="info">
                    조회 :
                    <em>
                     830
                    </em>
                    등록일 : 2018.04.23
                   </span>
                  </dt>
                  <dd>
                   [ahref]
                   
                  </dd>
                  <dd class="writer">
                   <em class="subject_tit">
                    [과학향기]
                   </em>
                  </dd>
                 </dl>
                </td>
               </tr>
               <tr class="even">
                <td class="c">
                </td>
                <td>
                 [link]
                 
                </td>
                <td class="top">
                 <dl class="jn_scientist">
                  <dt>
                   287.
                   [ahref]
                   
                   <span class="info">
                    [ahref][link][search]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][ahref]
                   </span>
                  </dt>
                  <dd>
                   <a href="/product/scilab/sciencestorylist/ALSC/readSciencestoryList.mvc?sciencestoryListId=ALSC2018040003&amp;subjectId=CHE">
                    우리나라 사람으로는 한 번도 받은 적이 없습니다. 하지만 다른 나라의 어느 집안은 5개씩이나 받았습니다. 노벨 과학상 이야기입니다. 폴란드 태생 프랑스의 과학자 마리 퀴리의 가족이...
                   </a>
                  </dd>
                  <dd class="writer">
                   <em class="subject_tit">
                    [모두의 과학]
                   </em>
                  </dd>
                 </dl>
                </td>
               </tr>
              </tbody>
             </table>
             <div class="paging">
              <a href="a" onclick='javascript:pageMoveAction("pageIndex", "*", "1"); $("#searchButton").click();  return false;'>
              </a>
              [link]
              
              <span class="page_number">
               <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
              </span>
              [link]
              
              [ahref]
              
             </div>
             [link]
             
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </form>
     </div>
    </div>
   </div>
  </div>
  <hr/>
  <div id="footer">
   <div class="ft_wrap" id="ftWrapArea">
    <h1 class="footer_logo">
     [area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]
    </h1>
    <div class="footer_cont">
     <div class="footer_util">
      [ahref]
      
      <a href="/guide/privateInfoRules.mvc">
      </a>
      <a href="/guide/accusationGuide.mvc">
      </a>
      [ahref]
      
      [link]
      
      [link]
      
     </div>
     <p class="copy">
     </p>
    </div>
    <div class="family_site">
     <div class="site">
      <ul>
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="r" target="_blank" title="새창열기">
         LG공익재단
        </a>
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="r" target="_blank" title="새창열기">
         LG상남도서관
        </a>
       </li>
       <li>
        <a href="r" target="_blank" title="새창열기">
         책읽어주는도서관
        </a>
       </li>
       <li>
        <a href="r" target="_blank" title="새창열기">
         영메이커
        </a>
       </li>
       <li>
        <a href="m" target="_blank" title="새창열기">
         LG아트센터
        </a>
       </li>
       <li>
        <a href="m" target="_blank" title="새창열기">
         곤지암화담숲
        </a>
       </li>
      </ul>
     </div>
     <p>
      Family Site
     </p>
    </div>
   </div>
  </div>
  <div id="quickmenu">
   <p class="copy">
   </p>
   <div class="history" style="display:none">
    <fieldset>
     <legend>
     </legend>
     <div class="flexslider">
      <ul class="slides">
      </ul>
      <div class="flex-container">
       <span class="current-slide">
       </span>
       /
       <span class="total-slides">
        <li>[ahref]</li><li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><li>[search]</li>
       </span>
      </div>
     </div>
    </fieldset>
   </div>
   <div class="banner">
    <p>
     [link]
     
    </p>
    <p>
     <a href="/product/common/noticebrd/readNoticeBrd.mvc?noticeBrdId=INNO2017070003" onclick="eval('try{ _trk_clickTrace( \'EVT\', \'/배너클릭\' ); }catch(_e){ }');" target="_blank">
     </a>
    </p>
   </div>
   <p>
    <li>[link]</li><li>[search]</li>[ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
   </p>
   <p>
    [ahref]
    
   </p>
   <p>
    [search][ahref][search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
   </p>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0499
  </b>
 </body>
</html>