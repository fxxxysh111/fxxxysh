--->|RmluYWxseSwgSSBhbHNvIHN3YW0gYXQgdmFyaW91cyB0aW1lcyBpbiB0aGUgeWVhciBhbmQgdXNlZCBmbGlwcGVycyBmb3IgZGlmZmVyZW50IHdvcmtvdXRzICAgdGhpcyBtYXkgYWxzbyBoYXZlIGJlZW4gY29udHJpYnV0aW5nLiAKVGhlcmUgd2FzIG9ubHkgb25lIHByb2JsZW06IFRoZSAiSm9obiIgaW4gcXVlc3Rpb24gICB0aGUgb2xkIHdvbWFuJ3Mgc29uLCBvbmUgSmFjayBEYW5pZWwgIkpvaG4gVGVzc2llciIgTWNDdWxsb3VnaCAgIHdhcyBhIG1vZGVsIGNpdGl6ZW4gd2l0aCBhbiBhaXJ0aWdodCBhbGliaTogSGUgaGFkIGJlZW4gaW4gYW5vdGhlciB0b3duIGR1cmluZyB0aGUgYWJkdWN0aW9uLCBlbmxpc3RpbmcgaW4gdGhlIEFpciBGb3JjZSBhbmQgdW5kZXJnb2luZyB0aGVpciBwaHlzaWNhbC4gSGUgaGFkIHNpbmNlIGJlY29tZSBhIGRlY29yYXRlZCBBaXIgRm9yY2UgYW5kIEFybXkgdmV0ZXJhbiB3aG8gaGFkIHJpc2VuIHRvIHRoZSByYW5rIG9mIGNhcHRhaW4gYW5kIHdhcyBhd2FyZGVkIGEgYnJvbnplIHN0YXIgZm9yIGhpcyBzZXJ2aWNlIGluIFZpZXRuYW0uIEhlbGwsIGhlIGhhZCBldmVuIGJlZW4gd29ya2luZyBhcyBhIGdvZGRhbW4gcG9saWNlIG9mZmljZXIgYXQgb25lIHBvaW50Li4gClRoYW5rZnVsbHkgbXkgYm9zcyBoYXMgdG8gcnVuIHNvbWUgZXJyYW5kcyB0aGlzIG1vcm5pbmcgc28gSSBkb24ndCBoYXZlIHRvIGV4cGxhaW4gYW55dGhpbmcuIEJ1dCwgSSB0aGluayBJIHJlYWxpemVkIHdoYXQgY2F1c2VzIHRoZSBhbnhpZXR5LiAKVHJ1ZSwgdGhhdCBjb25zZW5zdXMgaXMgbW9kZXN0LiBBYm91dCB0aGUgb25seSB0aGluZyBNUHMgYWdyZWUgb24gaXMgdGhlIG5lZWQgdG8gYXZvaWQgYSBjaGFvdGljLCBubyBkZWFsIEJyZXhpdC4gTmV2ZXJ0aGVsZXNzLCB0aGUgTGFib3VyIFBhcnR5IGxlYWRlcnNoaXAgaXMgZmluYWxseSBvZmZlcmluZyB0byBzdXBwb3J0IE1zIE1heSdzIEJyZXhpdCBkZWFsLCBpbiB3aGF0IFNoYWRvdyBDaGFuY2VsbG9yIEpvaG4gTWNEb25uZWxsIGRlc2NyaWJlcyBhcyBhICJ2ZXJ5IEJyaXRpc2ggY29tcHJvbWlzZSIuIElyZWxhbmQncyByb2NrIHNvbGlkIGNvbnNlbnN1cyBmYWNlcyBpdHMgdG91Z2hlc3QgY2hhbGxlbmdlIHlldC4KWW91IGhhdmUgOSBvdXRzIHR3aWNlLiAKV2hhdCBhcmUgc29tZSBwb2tlciBwbGF5aW5nIHN0eWxlcwpJbSBOQVNBIFdldHRiZXdlcmIgdW0gZGllIHNjaG5zdGUgQXVmbmFobWUgZGVyIEVyZGUgYXVzIGRlbSBBbGwgaGF0IHNpY2ggZWluIEJpbGQgZGVyIEthbmFyZW4gaW4gZGVuIGxldHp0ZW4gV29jaGVuIFJ1bmRlIHVtIFJ1bmRlIG5hY2ggdm9ybmUgZ2VzY2hvYmVuIHVtIHNlaXQgaGV1dGUgaW0gRmluYWxlIGRlcyBXZXR0YmV3ZXJicyBFYXJ0aCAyMDE0IHp1IHN0ZWhlbiwgaW4gZGVtIGRpZSBiZXN0ZW4gRm90b2dyYWZpZW4gYXVzIGRlbSBKYWhyIDIwMTMgZ2V3aGx0IHdlcmRlbi4gQXVmZ2Vub21tZW4gd3VyZGUgdGhlIENhbmFyaWVzIGFtIDE1LiAKTWF5YmUgU2FtIHdhcyBzdGlsbCBnaWRkeSBmcm9tIGxhc3QgbmlnaHQgb3IgaGFkIGEgaGFuZ292ZXIgZnJvbSBhbGwgdGhlIGFsY29ob2wuIFNoZSB3YWxrcyBpbiBhbmQgaXMgaW1tZWRpYXRlbHkgYXNrZWQgZm9yIGhlciBJRC4gCk1hbGUgQnlsZXRoIGlzIGFuIGF2YXRhciBmb3IgbWFsZSBwbGF5ZXJzLCBhbmQgd2hpbGUgaGUgY2VydGFpbmx5IHByZXR0eSBhdHRyYWN0aXZlIHRvIG1hbnkgd29tZW4gKGFuZCBtZW4sIG9mIGNvdXJzZSksIGhlIGFsc28gbm90IG9mZiBwdXR0aW5nIHRvIHRoZSBtYWxlIHBsYXllcnMgd2hvIGhlIGlzIGZvcmVtb3N0IGdlYXJlZCB0b3dhcmQuIApPbmUgdGltZSBhIGR1ZGUgb24gbXkgZmxvb3Igd2FzIHRocmVhdGVuaW5nIHRvIGh1cnQgaGltc2VsZiBhbmQgc2FpZCB0aGF0IGlmIGNvcHMgc2hvd2VkIHVwIGhlIGtpbGwgaGltc2VsZiByYXRoZXIgdGhhbiBsZXQgaGltc2VsZiBiZSBpbnN0aXR1dGlvbmFsaXplZC4gV2hlbiB0aGUgb2ZmaWNlcnMgY2FtZSB0byB0aGUgZG9ybSB0aGV5IHB1c2hlZCByaWdodCBwYXNzZWQgdXMgaW4gdGhlIGxvYmJ5IGFuZCBnb3Qgb24gdGhlIGVsZXZhdG9yLCBhbmQgd2UgbGl0ZXJhbGx5IGhhZCB0byBiZWcgdGhlbSB0byBjYWxsIGEgc29jaWFsIHdvcmtlciBpbnN0ZWFkIG9mIGdvaW5nIHVwIHRoZXJlIHRoZW1zZWx2ZXMuIApJdCB3YXMgaGlzIHN5c3RlbSB0byBhc2sgcGVvcGxlIHRvIGhvbGQgc3VtcyBvZiBjYXNoIGZvciBoaW0uIi4gCldobyBjYWxsZWQgQ2hyaXN0bWFzIGEgdGltZSBmb3IgImNoYXJpdHkgaW4gdGhlIGhlYXJ0PyJXaG8gY2FsbGVkIENocmlzdG1hcyBhIHRpbWUgZm9yICJjaGFyaXR5IGluIHRoZSBoZWFydD8iV2hvIHdyb3RlOiAiQ2hyaXN0bWFzIGlzIHRoZSBzZWFzb24gZm9yIGtpbmRsaW5nIHRoZSBmaXJlIG9mIGhvc3BpdGFsaXR5IGluIHRoZSBoYWxsLCB0aGUgZ2VuaWFsIGZsYW1lIG9mIGNoYXJpdHkgaW4gdGhlIGhlYXJ0LiIKRGlzYWJpbGl0eSBhbmQgZGlzYWJsZWQgcGVvcGxlIGFyZSB0aGUgc3ViamVjdCBvZiBoZXIgam9rZXMsIGJ1dCB0aGV5IGFyZW4gdGhlIGJ1dHQuIApJIHdvdWxkIHNheSBtb3JlIGFib3V0IEEgYnV0IEkgZG9uIHdhbnQgdGhlIHNhbHQgdG8gYm9pbCBvdmVyLiBBdCB0aGUgdGltZSBJIHdhcyBmaW5lIHdpdGggTiBjaG9pY2UgYmVjYXVzZSBJIGtuZXcgdGhleSB3b3VsZCBoYXZlIGZ1biBhbmQgdGhlcmUgd2FzIG9idmlvdXNseSBubyB3YXkgQmV0aGVzZGEgd291bGQgYW5ub3VuY2UgYW55dGhpbmcgbWFqb3IgbGlrZSBGYWxsb3V0LiAKMjAvaG91ciB3b24gc2V0IG1lIHVwIGZvciBsaWZlPy4gU2VyaW91c2x5IHdoYXQgaXMgdGhlIGNvc3Qgb2YgbGlmZSB3aGVyZSB5b3UgbGl2ZT8gMjAgYW4gaG91ciBpcyBhbHJlYWR5IDIuNSBqdW1wIHdoaWNoIGlzIGdyZWF0IGZvciBzb21lb25lIHdobyBncmV3IHVwIHBvb3IgYW5kIGxlYXJuZWQgdG8gZW5qb3kgdGhlIGZyZWUgc3R1ZmYgaW4gbGlmZSwgbGlrZSBuYXR1cmUuIApTaGUgbG9zdCBhIGJ1bmNoIG9mIHdlaWdodCBhbmQgZmVsdCB3YXkgYmV0dGVyLiAKRGFiZWkgdmVyZ2Egc2llIGFsbGVyZGluZ3MsIGRhc3MgR2xhdWJlIEVpc2JlcmdlIHZlcnNldHplbiBrYW5uLiAKRXZlbiB0aGVuIHlvdSBwdXNoaW5nIGl0LiAKT3JhbmdlcyBpbiBDYWxpZm9ybmlhIGNvc3QgJDIgZWFjaC4KQmVmb3JlIGJlZ2lubmluZyB0aGUgbWFzc2FnZSwgdGFsayB0byB5b3VyIGNsaWVudCBhbmQgYXNrIGhpbS9oZXIgdG8gZGlzY3VzcyBvdGhlciBtYXR0ZXJzIHRoYXQgdGhlIGNsaWVudCBtYXkgYmUgY29uY2VybmVkIGFib3V0LiAKVGhlbiwuIApQb2tlciBtdXN0IGJlIHZpZXdlZCBhcyBvbmUgbG9uZyBsaWZldGltZSBnYW1lIGluc3RlYWQgb2YgbWFueSBzaG9ydCBzZXNzaW9ucy4gVGhlIHJlYXNvbiBmb3IgdGhpcyBpcyBvdmVyIHRoZSBjb3Vyc2Ugb2YgdGhvdXNhbmRzIG9mIGhhbmRzLCB0aGUgYmVzdCBoYW5kIHdpbGwgd2luIHRoZSBjb3JyZWN0IGFtb3VudCBvZiB0aW1lLiAKQW5kIGl0IG5vdCBqdXN0IGluIElULiAKU2hlIGlzIHRhbGtpbmcgYWJvdXQgS2FsaWVzaGEgV2VzdCwgdGhlIHR3byB0aW1lIFdvcmxkIENoYW1waW9uIGF0IDEyMiBwb3VuZHMgd2hvIGhhcyBvcGVubHkgcG9pbnRlZCBvdXQgdGhlIHBlcmlscyBvZiB0aGUgc3BvcnQgb24gcHVibGljIHBsYXRmb3Jtcy4gSXQgd2Fzbid0IGp1c3QgdGhlIHJlc3BlY3QgdGhlIHR3byBoYXZlIGZvciBvbmUgYW5vdGhlciB0aGF0IGJyb3VnaHQgdGhlbSB0b2dldGhlcjsgdGhleSBzaGFyZSBtb3JlIHBhc3Npb25zIHRoYW4ganVzdCBib3hpbmcuICJTaGUncyBhbiBhbWF6aW5nIHBlcnNvbi4gVG9nZXRoZXIsIHdlIGp1c3QgdW5kZXJzdGFuZCBlYWNoIG90aGVyLiBTaGUgYnJpbmdzIGFuIGVuaGFuY2VkIGRpbWVuc2lvbiwgYSBza2lsbHNldCwgdG8gS3dhbiBJbnRlcm5hdGlvbmFsIGFuZCBpdCdzIGFuIGV4Y2l0aW5nIGZ1dHVyZSBlbmRlYXZvciwiIENoaXN0aW5hIGZvcmVjYXN0cy4KV2Fsa2luZyBvdmVyIHRvIHRoZSBzaW5rIGFyZWEgZ3JhYmJpbmcgY3Vwcywgc2hlIHBsYWNlcyB0aGVtIGJ5IHRoZSBwb3AuIApJdCB3b3VsZCBiZSBzYWZlIHRvIGFzc3VtZSB0aGlzIGZsb3AgZGlkIG5vdCBoaXQgdGhlaXIgcmFuZ2Ugc28gYSBiZXQgd291bGQgbW9zdCBsaWtlbHkgY2F1c2UgdGhlbSB0byBmb2xkLiBIb3BlIHRoaXMgaGVscHMhLiAKSXQgY2FuIGJlIGlzb2xhdGluZyB3aGVuIHlvdSBzcGVuZCBodWdlIGFtb3VudHMgb2YgdGltZSBhbG9uZSBwbGF5aW5nLiAKVGhlcmUgTVVTVCBCRSBwb3dlciBjcmVlcC4gSWYgcG93ZXIgY3JlZXAgd2FzbiBhIHRoaW5nLCB0aGlzIGdhbWUgd291bGQgZGllIHNvIHF1aWNrbHkgKG9yIGl0IHdvdWxkbiBldmVuIGhhdmUgbGFzdGVkIGEgeWVhcikuCkNlcnRhaW5seSB0aGUgb25seSByZWFzb24gSSB3b3VsZCBldmVyIGNvbnNpZGVyIGNlZGluZyB0byB0aGUgc3ViIHRocmVzaG9sZCBkb3NlLiAKSXQgdGhlIGRldmVsb3BtZW50IG9mIEFtbWEgY2hhcmFjdGVyIGFzIGEgcGxhdXNpYmxlIGtpbGxlciB0aHJvdWdob3V0IHRoZSBib29rIHRoYXQgSSBmb3VuZCBsYWNraW5nLiAKU2luY2UgcGh5c2ljYWwgYWN0aXZpdHkgaXMgYSBsaWZlc3R5bGUsIGFzIHNlcnZpY2UgbWVtYmVycyBncm93IG9sZGVyIHRoZXkgd2FudCB0byBwcm92ZSB0aGV5IGhhdmUgbm90IGxvc3QgdGhlaXIgZWRnZS4gTGVhZGVycyB3YW50IHRvIHNldCBhIGdvb2QgZXhhbXBsZSBmb3IgdGhlaXIgdW5pdHMgYW5kIHdpbGwgb2Z0ZW4gcHVzaCB0aGVtc2VsdmVzIHBhc3Qgc2FmZSBsaW1pdHMuIApMb29rIGF0IHRoZSBzdGF0cyBmb3IgdGhlIGFuc3dlcnMgICBub3QgcmlkaWN1bG91cyBjb21tZW50cyBsaWtlIHRob3NlIGFib3ZlLgpIZSBnb2luZyB0byBzdGFydCBncm91cCB0aGVyYXB5IGluIHRoZSBmYWxsLiBIZSBmaW5hbGx5IHJlYWNoZWQgdGhlIGFnZSB3aGVyZSB0aGF0IGF2YWlsYWJsZSB0byBoaW0gaGVyZSB3aGVyZSB3ZSBsaXZlLiBJIHJlYWxseSBob3BpbmcgdGhhdCB3aWxsIGJvb3N0IGhpcyBzZWxmIGVzdGVlbSBiZWNhdXNlIEkga25vdyBoZSB3aWxsIGRvIHZlcnkgd2VsbCB3aXRoIHRob3NlIGtpZHMuCkR1cmNoIGRpZSBNeW9tYmlsZHVuZyBpc3QgZGVyIEtycGVyIHdpZWRlciBpbiBkZXIgTGFnZSwgZWluIEdsZWljaGdld2ljaHQgenUgZXJyZWljaGVuLiAKVGhlc2UgcGVvcGxlIHRydWx5IGRvIG5vdCBjYXJlIGFib3V0IHRoZSBsb3NzIGFuaW1hbCBsaXZlcyBleGNlcHQgaWYgaXQgaXMgZHVlIHRvIHRoZSBodW1hbiBkaWV0LiAKQWlyIHBvY2tldHMgb3IgaW5hZGVxdWF0ZSBzdGVhbSBzdXBwbHkgcHJldmVudCBzdGVhbSBzYXR1cmF0aW9uOyBvcgpJbiBnYW1lIEkgcHJvYmFibHkgdGlsdCBjYWxsIGl0IG9mZiBhbmQgdGhlbiBoYXRlIG15c2VsZiBmb3IgaXQuLiAKTGlrZSB0byBidWlsZCB0aGlzIGxpa2UgT2t0b2JlcmZlc3QsIHNvIHdlIGFsbW9zdCBnaXZpbmcgdGhlIGJvb3RocyBhd2F5LCBoZSBzYWlkLiBUaGUgc2NoZWR1bGUgZm9yIHRoZSB3ZWVrZW5kIGlzIGFzIGZvbGxvd3M6Ck11c2ljIHdhcyBkaXNqb2ludGVkIGZyb20gcmVhbGl0eS4gCkFsc28sIHRoZSBtYWpvciBzdGVwIHRoYXQgbmVlZHMgdG8gYmUgdGFrZW4gZm9yIHRoaXMgImVsaW1pbmF0aW9uIiBpcyBkZWNpZGluZyBvbiBhIGhlYWx0aCBidWRnZXQgZm9yIDIwMjAuIE5vdyBpcm9uaWNhbGx5LCB0aGUgc3ByZWFkIG9mIFNUSXMgYW5kIGFjY2VzcyB0byBzYWZlIHJlcHJvZHVjdGl2ZSBoZWFsdGhjYXJlIHdoaWNoIGlzIHZlcnkgZGVlcGx5IGNvbm5lY3RlZCB0byB0aGUgcmlzZSBvZiBISVYgY2FzZXMgaXMgYSBwYXJ0IG9mIFBsYW5uZWQgUGFyZW50aG9vZCwgYSBjb25jZXB0IHRoYXQgVHJ1bXAgYW5kIGhpcyBjdWx0IG1vYiBzdGFuZCBhZ2FpbnN0LiBTbywgZG8geW91IGFsbCBzZWUgdGhlIGh5cG9jcmlzeSBoZXJlPz8/LiAKRXZlbnR1YWxseSB5b3UgY291bGQgZm9ybSBjaXRpZXMgd2l0aCBndWlsZCBoYWxscyBhbmQgeW91IGNvdWxkIGV2ZW4gYnVpbGQgYSBzaHV0dGxlcG9ydCBzbyBhbnlvbmUgb24gdGhlIHBsYW5ldCBjYW4gZmFzdCB0cmF2ZWwgdG8geW91ciBjaXR5IGZyb20gYW55IHN0YXJwb3J0LlByZXR0eSBtdWNoIGV2ZXJ5dGhpbmcgd2FzIHBsYXllciBjcmFmdGVkLiAKVGhlbiB5b3UgcGx1Y2sgd2l0aGVpdGhlciB5b3VyIHRodW1iIG9yIHlvdXIgcG9pbnRlciBmaW5nZXIsIHdoYXRldmVyIHlvdSBmZWVsY29tZm9ydGFibGUgd2l0aC4gTWFrZSBzdXJldGhlIGJvdyBpcyBiZXR3ZWVuIHRoZSBlbmQgb2YgdGhlIGZpbmdlcmJvYXJkIGFuZCB0aGUgYnJpZGdlIGZvcnByb3BlciBwbGF5aW5nLiBUaGVuLCBwbGF5IHRoZSB2aW9saW4gYW5kIHRhIGRhISEgWW91IGtub3cgdGhlYmFzaWNzIHRvIGEgdmlvbGluISEgX19fX18gUGxheWluZyB0aGUgdmlvbGluIHJlcXVpcmVzIHByYWN0aWNlIGFuZCBhbiBpbnN0cnVjdG9yIHRvIHRlYWNoYXBwcm9wcmlhdGUgdGVjaG5pcXVlLiAKTWFpbnRlbmFuY2UgZm9yIGEgY2FyIG1pZ2h0IGJlIGEgaGFsZiB0aGF0LCB0aGVuIG9mIGNvdXJzZSBnYXMuIEFuZCB0aGUgcmlza3Mgb2Ygb3duaW5nLCBwbHVzIHRoZSB0aW1lIHRvIG1haW50YWluIGl0LiBJIGtlZXAgbWlzc2luZyBoYXZpbmcgYSBjYXIsIHRoZW4gaSBrZWVwIHJlYWxpemluZyBob3cgbXVjaCB0aW1lIGFuZCBtb25leSBpIHNhdmUgYnkganVzdCByZW50aW5nIHdoZW4gaSBuZWVkIG9uZS4gCkhlIGZhdGVmdWxseSBleGNsYWltZWQ6ICJMaXN0ZW4sIEkgbWF5IGtub3cgb3IgSSBtYXkgbm90IGtub3cuIApUaGUgc3Bhcmsgc2V0IHRvIGlnbml0ZSBDYW5hZGEncyBuZXh0IGJpZyBjb3Jwb3JhdGUgY3JlZGl0IHNoYWtlb3V0IGxvb21zIGFzIGNvbXBhbmllcyBwaWxlIG9uIHRvbyBtdWNoIGRlYnQKQSBwcm90ZWN0b3IgaXMgY29uc2lkZXJlZCBhcyBhIHNpbXBsZSBndWFyZCwgYSBzaW1wbGUgcGxhc3RpYyBjb3ZlcmluZyBmb3IgYW55dGhpbmcgc3BlY2lhbC4gSG93ZXZlciwgdGhlc2UgcHJvdGVjdG9ycyBhcmUgc29tZXRpbWVzIGV4dHJlbWVseSBpbXBvcnRhbnQgaWYgdGhlIGluc2lkZXIgcHJvZHVjdCBpcyB2dWxuZXJhYmxlIGFuZCBleHBvc2VkIHRvIGhpZ2hlciBkYW1hZ2luZyByaXNrcy4gRm9yIHRoZSBwb2tlciBwbGF5ZXJzLCB0aGUgY2FyZHMgYXJlIGRlZmluaXRlbHkgdGhlIG1vc3QgZXhjbHVzaXZlIHRoaW5ncy4gU28gdGhlIGNhcmQgY292ZXJzIGFyZSBjZXJ0YWlubHkgZ29pbmcgdG8gYmUgY29uc2lkZXJlZCBhcyBleGNsdXNpdmUgYXMgd2VsbC4gVGhpcyB3YXMgbm90IGEgY29tbW9uIHNjZW5hcmlvIGV2ZW4gYSBmZXcgeWVhcnMgYmFjay4gUGVvcGxlIHVzZWQgdG8gaGF2ZSBub3RoaW5nIHRvIHByb3RlY3QgdGhlc2UgdnVsbmVyYWJsZSBwb2tlciBjYXJkcy4gRXZlbiBpZiB0aGV5IHVubWluZGZ1bGx5IGJlbmRlZCB0aGVpciBjYXJkcywgaXQgd291bGQgaGF2ZSBiZWVuIGRhbWFnZWQuIFRoaXMgd2FzIGEgcGF0aGV0aWMgdGhpbmcgZm9yIHRoZSByZW5vd25lZCBwb2tlciBwbGF5ZXJzLiBIb3dldmVyLCB0aGUgc2NlbmFyaW8gaGFzIGNoYW5nZWQgYSBsb3QgdG9kYXkgYXMgdGhlIHBsYXllcnMgaGF2ZSBiZWNvbWUgaW50ZXJlc3RlZCBpbiB1c2luZyBhbGwga2luZCBvZiBwb2tlciBwcm9kdWN0cyB0aGF0IG1ha2UgdGhlaXIgcHJlc2VuY2VzIG1vcmUgb2J2aW91cyBpbiB0aGUgY2FzaW5vcyBhcm91bmQgdGhlIHdvcmxkLiBObyBkb3VidCwgYSBTaWx2ZXIgQnVkIExpZ2h0IFNwaW5uZXIgUG9rZXIgQ2FyZCBQcm90ZWN0b3IgaXMgc29tZXRoaW5nIHRoYXQgbWFrZXMgc3VyZSB0aGF0IHlvdSBsb29rIGVsZWdhbnQgd2l0aCB5b3VyIHBva2VyIGNhcmRzIGluIGhhbmQuCk9ubHkgdGhlIFphY2ggSHltYW4gQXVzdG9uIE1hdHRoZXdzIFdpbGxpYW0gTnlsYW5kZXIgbGluZSBoYXMgc3RheWVkIGludGFjdC4KRmlyc3QgSXRhbHkgaGFkIHRvIGRpdmUgdG8gc2F2ZSB0aGVtc2VsdmVzIGFnYWluc3QgdGhlIG51bWJlciBvbmUgdGVhbSBmcm9tIE9jZWFuaWEsIHdpdGggQXVzdHJhbGlhIGluIDIwMDYsIHRoZW4gd2hlbiB0aGUgbnVtYmVyIG9uZSB0ZWFtIGZyb20gT2NlYW5pYSBsZWZ0IGFuZCB0aGUgbnVtYmVyIHR3byB0ZWFtIGZyb20gT2NlYW5pYSBiZWNhbWUgdGhlIG5ldyBudW1iZXIgb25lIGJ5IDIwMTAsIEl0YWx5IHRoZW4gaGFkIHRvIGRpdmUgYWdhaW4gYWdhaW5zdCB0aGVtIHRvIHNhdmUgZHJhdy4gCkFsc28gY29uZmlybWVkIHRoYXQgaGUgaXMgaW52b2x2ZWQgaW4gdGhlIHRyYW5zZmVyIGFuZCBwb3N0aW5nIG9mIGp1bmlvciBhbmQgc2VuaW9yIHBvbGljZSBvZmZpY2Vycy4gClRoZSBudW1iZXIgb25lIHJlcXVpcmVtZW50IGZvciBsb25nIHRlcm0sIHN1c3RhaW5lZCBzdWNjZXNzIGlzIGJhbmtyb2xsIG1hbmFnZW1lbnQuIFBsYXlpbmcgb25saW5lLCB5b3UgY2FuIHN0YXJ0IHdpdGggYSBiYW5rcm9sbCBhcyBsb3cgYXMgJDEwMCBhcyBhcHBseSBjb25zZXJ2YXRpdmUgcHJpbmNpcGxlcyB0byBidWlsZC4KSGUgdGhlbiBmb2xsb3dlZCB1cCB3aXRoIGEgd2FsayB0aHJvdWdoIG9mIG91ciBmYWNpbGl0eSBidXQgd2Ugd29uIGtub3cgd2hhdCBoZSBmb3VuZCB1bnRpbCBoZSBnaXZlcyB1cyBhIHJlcG9ydC4gCkluIEFwcmlsIDIwMDcsIENoaWVmIEp1ZGdlIEthdGh5IEhhcmRjYXN0bGUgY2FsbGVkIGEgbWVldGluZyB0byB0YWxrIGFib3V0IGNvbXBsYWludHMgYmVpbmcgbWFkZSBieSB0aGUgc3RhZmYgb2YgSGFsdmVyc29uLiBUaGVyZSB3ZXJlIHRocmVlIG90aGVyIGp1ZGdlcyBwcmVzZW50IGluY2x1ZGluZyBKdWRnZSBTdGV3YXJ0IEJlbGwuIFRoZSBjb21taXNzaW9uIGZvdW5kIHRoYXQgSGFsdmVyc29uIHdlbnQgdG8gdGhlIG5ld3NwYXBlcnMgYW5kIG1hZGUgZmFsc2Ugc3RhdGVtZW50cyBhYm91dCB3aGF0IGhhcHBlbmVkIGluIHRoZSBzZXNzaW9uLgpNeSBDaGluZXNlIHN0dWRlbnRzIHVzZSBhIGxvdCBtb3JlIGFkdmVyYnMgb2YgdGltZSAodG9tb3Jyb3csIG5vdywgeWVzdGVyZGF5LikgdGhhbiBteSBvdGhlciBzdHVkZW50cy4uIAoiSWYgdGhpcyBwZXJzb24sIHdobyBpcyBteSBicm90aGVyLCBjb3VsZCB3aWxsaW5nbHkgYW5kIGtub3dpbmdseSB3YWxrIGludG8gbXkgcGFyZW50cycgaG91c2UgYW5kIGJlYXQgdGhlbSBhbmQgc2xpY2UgdGhlbSB1bnRpbCB0aGV5IHdlcmUgZGVhZCwgaGUnZCBoYXZlIG5vIHF1YWxtcyB3YWxraW5nIGludG8gbXkgaG91c2UgYW5kIGRvaW5nIHRoYXQgdG8gbXkgZmFtaWx5LCAiIHNhaWQgQ2F0aGVyaW5lIFNjaGVyZXIuIENhdGhlcmluZSwgbGl2aW5nIGluIFV0YWgsIHdhcyBub3cgYWZyYWlkIG9mIGhlciBicm90aGVyLiAKUnVuIGl0IFVwIFJlbm8gd2lsbCBiZSB0YWtpbmcgcGxhY2Ugb24gT2N0b2JlciAxOXRoIHRpbGwgT2N0b2JlciAyOXRoLiBUaGVyZSBhcmUgdHdvIG1vcmUgUGxhdGludW0gUGFzc2VzIHRvIGJlIHdvbiB0aHJvdWdob3V0IHRoZSBldmVudCwgb24gdGhlIE1vbmV5bWFrZXIgUFNQQyBUb3VyIG9uIE9jdG9iZXIgMjNyZCBhbmQgdGhlIFF1YWxpZmllcnMgRXZlbnQgb24gT2N0b2JlciAyOXRoLi4gClR3byByZWNlbnQgTGFib3VyIGxlYWRlcnNoaXAgY29udGVuZGVycywgU2hhbmUgSm9uZXMgYW5kIEdyYW50IFJvYmVydHNvbiwgbmFtZWQgaGltIGFzIHRoZWlyIHBvbGl0aWNhbCBoZXJvLCB3aGlsZSBEYXZpZCBDdW5saWZmZSBjYXJyaWVkIGEgcG9ydHJhaXQgb2YgaGltIGF0IFdhaXRhbmdpLiAKSXQgc291bmRzIGxpa2UgYW4gYWxsZXJnaWMgcmVhY3Rpb24uIEkgZmluZCBSb3NlaGlwIG9pbCBjYW4gYmUgY2FsbWluZy4gSSBsYXllciBpdCB3aXRoIHZhc2VsaW5lIG92ZXIgdGhlIHRvcCB0byBzZWFsIGl0IGluIGVzcGVjaWFsbHkgd2hpbGUgaXQncyBob3Qgd2l0aCBhaXJjb24gcnVubmluZyBhIGxvdC4KSW4gMjAxMywgRmVkZXJhbCBhZ2VudHMgYnVzdGVkIGFuICJ1bHRyYWV4Y2x1c2l2ZSwgaGlnaCBzdGFrZXMsIGlsbGVnYWwgcG9rZXIgcmluZyIgcnVuIGJ5IFJ1c3NpYW4gZ2FuZ3N0ZXJzIG91dCBvZiBUcnVtcCBUb3dlci4gSW4gYWRkaXRpb24gdG8gY2FyZCBnYW1lcywgdGhleSBvcGVyYXRlZCBpbGxlZ2FsIGdhbWJsaW5nIHdlYnNpdGVzLCByYW4gYSBnbG9iYWwgc3BvcnRzIGJvb2sgYW5kIGxhdW5kZXJlZCBtb3JlIHRoYW4gJDEwMCBtaWxsaW9uLiBBIGNvbmRvIGRpcmVjdGx5IGJlbG93IG9uZSBvd25lZCBieSBUcnVtcCByZXBvcnRlZGx5IHNlcnZlZCBhcyBIUSBmb3IgYSAic29waGlzdGljYXRlZCBtb25leSBsYXVuZGVyaW5nIHNjaGVtZSIgY29ubmVjdGVkIHRvIFNlbWlvbiBNb2dpbGV2aWNoLi4gCkFzIHlvdSBiZWNvbWUgbW9yZSBleHBlcmllbmNlZCBhbmQgbW92ZSB1cCBpbiBsaW1pdHMsIHBvc2l0aW9uIHBsYXlzIGEgbW9yZSBpbXBvcnRhbnQgcm9sZS4uIApOb3QgcmVwbGFjZSBhIHppcHBlciByZXBhaXIgaXQuIEl0IGlzIHNvIGJlYXV0aWZ1bCBhcyB0byB3YW50IHRvIG1ha2UgZXZlcnkgZW5naW5lZXIgcmVzaWRpbmcgaW4gdGhlIGRlZXBuZXNzIG9mIGV2ZXJ5b25lcyBzb3VsIGp1c3Qgc2ltcGx5IHdlZXAuIFRoZSBwYW1waGxldCBpcyBzaW1wbHkgYnV0IHdlbGwgaWxsdXN0cmF0ZWQgYW5kIGFkZHJlc3NlcyA1MCBvZGQgY29udGluZ2VuY2llcyBmb3IgemlwcGVyIG1hbGZ1bmN0aW9uIGFuZCBmYWlsdXJlLCBhbmQgc3BlYWtzIHRvIGEgcGFydGljdWxhciBXV0lJIG1pbmRzZXQgdGhhdCB0aGF0IGFkZHJlc3NlcyBwcm9ibGVtcyBpbiB0aGlzIHZlcnkgZmFzaGlvbi4gCkluIEp1bHksIGhvd2V2ZXIsIHRoZSBHYW1pbmcgQ29udHJvbCBCb2FyZCBwdXQgb3V0IGEgc2V0IG9mIGVtZXJnZW5jeSBydWxlcy4gCkhhdmluZyBteSBmaW5hbmNpYWwgZnJlZWRvbSBmcm9tIGdvdmVybm1lbnQsIGJlaW5nIGFibGUgdG8gbm90IGZpbmFuY2UgdGhlIGNyaW1lcyBvZiBteSBnb3Zlcm5tZW50IGlzIG9uZSBvZiB0aGUgbW9zdCBpbXBvcnRhbnQgbW9yYWxpdGllcyBmb3IgbWUuIApUaGUgdGVybSBjaXMgd2FzIGludHJvZHVjZWQgdG8gcmVwbGFjZSB0aGUgdXNhZ2Ugb2YgIm5vcm1hbCIgb3IgInJlZ3VsYXIiIGluIHRoZXNlIHNpdHVhdGlvbnMgdG8gYmUgbW9yZSBpbmNsdXNpdmUgb2YgdHJhbnMgcGVvcGxlLiAKSSBkb24ndCBrbm93IHdoYXQgaXQgaXMgYmVjYXVzZSB0aGF0J3MgaG93IEkgYXJyaXZlZCBhdCB0aGlzIHF1ZXN0aW9uLiAKV2hlbmV2ZXIgSSBmZWVsIGxpa2UgSSBhIGJpdCBvZiBhIHNodXQgaW4sIEkgcmVtaW5kIG15c2VsZiB0aGF0IEkgYSBnYXksIG1lbnRhbGx5IGlsbCB3b21hbiB3aG8gbGl2ZXMgYXdheSBmcm9tIG15IHBhcmVudHMgKGluIGEgaG91c2Ugd2l0aCBhIG1hbiBhbmQgYSBtaXhlZCByYWNlIHdvbWFuISksIHN0dWRpZXMgYXQgdW5pdmVyc2l0eSwgY2FuIGRyaXZlIGEgY2FyLCB3ZWFycyB0cm91c2VycyBldmVyeSBkYXksIGRvZXMgYSBiaXQgb2Ygc3RhbmQgdXAgY29tZWR5IChhbmQgbm90aGluZyBsaWtlIHRoZSBjb21lZHkgdGhleSBoYXZlIGtub3duKSwgc3dlYXJzIGxpa2UgaXQgZ29pbmcgb3V0IG9mIGZhc2hpb24sIGFuZCBkcmlua3MgYWxjb2hvbC4gQW5kIGJ5IHRoZSBzdGFuZGFyZHMgb2Ygc29tZSBvZiBteSBwZWVycywgSSByZWFsbHkgcXVpZXQgYW5kIHdlbGwgYmVoYXZlZCEuIApTdWVkZWFuZGNvbmZ1c2VkICAxLDA0MSBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvCiJXZSBiZWxpZXZlIHRoaXMgc3R1bm5pbmcgZGVzdGluYXRpb24gd2l0aCBpdHMgcmljaCBoaXN0b3J5IGFuZCBkaXZlcnNlIGN1bHR1cmUgd2lsbCBvZmZlciBvdXIgZGlzY2VybmluZyBndWVzdHMgYSB1bmlxdWUgYW5kIGV4Y2l0aW5nIG5ldyBsb2NhdGlvbiB0byBleHBsb3JlIHdoZW4gaXQgb3BlbnMgbGF0ZSAyMDE0LiIuIApFQ0tFUlNMRVksIERlcmVrIEZDSUEsIEZTQSAgIEFmdGVyIGEgbG9uZyBwZXJpb2Qgb2YgZGVjbGluaW5nIGhlYWx0aCwgRGVyZWsgRWNrZXJzbGV5IHBhc3NlZCBhd2F5IHBlYWNlZnVsbHksIG9uIFNhdHVyZGF5LCBNYXJjaCAyMSwgMjAwOSwgYXQgQnJhbmRvbiBSZWdpb25hbCBIZWFsdGggQ2VudHJlIGF0IHRoZSBhZ2Ugb2YgODYgeWVhcnMuIERhZCB3YXMgYm9ybiBpbiBTb3V0aHBvcnQsIExhbmNhc2hpcmUsIEVuZ2xhbmQgb24gTm92ZW1iZXIgMTIsIDE5MjIgYW5kIGdyZXcgdXAgaW4gQ2hlc3Rlciwgd2hlcmUgaGUgZXhjZWxsZWQgYWNhZGVtaWNhbGx5IGFuZCBhdGhsZXRpY2FsbHkgdGhyb3VnaG91dCBoaXMgc2Nob29sIHllYXJzLiAKQ291bGQgYmUgZ29vZCBpbiBzaG9ydCB0ZXJtIGJ1dCBpdCBub3doZXJlIG5lYXIgd2hhdCBtb3N0IG9mIHVzIGluIHRoaXMgc3ViIGFyZSBob3BpbmcgZm9yIHdoZW4gaXQgY29tZXMgdG8gYSBidWxsIHJ1bi4gCkdldCBzdGF0aXN0aWNhbC4gQmVjYXVzZSB5b3UncmUgdXNpbmcgdHdvIGRpY2UsIHRoZSBwcm9iYWJpbGl0eSBvZiByb2xsaW5nIGFueSBwYXJ0aWN1bGFyIG51bWJlciBpcyBkaWZmZXJlbnQgZGVwZW5kaW5nIG9uIHRoZSBudW1iZXIuIFNvbWUgdmFsdWVzIGFyZSBtb3JlIGxpa2VseSB0aGFuIG90aGVyIHZhbHVlcywgYmVjYXVzZSB0aGVyZSdzIG1vcmUgdGhhbiBvbmUgd2F5IHRvIHJlYWNoIHRoZW0uIEJ5IGxlYXJuaW5nIGEgbGl0dGxlIGJpdCBhYm91dCB0aGUgc3RhdGlzdGljYWwgcHJvYmFiaWxpdHkgb2Ygcm9sbGluZyBhIHBhcnRpY3VsYXIgbnVtYmVyIGVhY2ggdGltZSwgeW91IGNhbiBtYWtlIHNtYXJ0ZXIgYmV0cy5bOF0KSSBoYWQgd2l0aCBtZSB0aGUgWCByYXlzIG9mIHRoZSByb2RzIGFuZCBzY3Jld3MgaW4gbXkgc3BpbmUgdG8gc2hvdyBldmVyeW9uZSBiZWNhdXNlIEkgd2FudGVkIHRvIHNob3cgcGVvcGxlIGhvdyBhd2Vzb21lIGJ5IGJhY2sgbG9va2VkIChJIGxvdmUgYWxsIHRoaW5ncyBtZWRpY2FsIGFuZCB0aGlzIHRvIG1lIHdhcyBhbWF6aW5nKSBUaGUgdGVhY2hlciBjYW1lIHVwIHRvIG1lIGFuZCB3aXRoIGRpc2d1c3QgaW4gaGVyIHZvaWNlIHN0YXRlZCAiT2ggbXkgZ29kIHlvdSBsb29rIGxpa2UgRnJhbmtlbnN0ZWluIiBJIHdhcyBpbiBzaG9jayBiZWNhdXNlIHRoaXMgd2FzIHRoZSBmaXJzdCB0aW1lIGFuIGFkdWx0IHdhcyBhY3R1YWxseSBpbnN1bHRpbmcgbWUgZm9yIG5vIGdvb2QgcmVhc29uLiBNeSBmcmllbmQgdHJpZWQgdG8gaGVscCB0aGUgc2l0dWF0aW9uIGJ5IGluZm9ybWluZyB0aGUgdGVhY2hlciB0aGF0IEZyYW5rZW5zdGVpbiB3YXMgdGhlIHNjaWVudGlzdCwgc2hlIHRoZW4gY29ycmVjdGVkIGhlcnNlbGYgd2hpbHN0IGxvb2tpbmcgc3RyYWlnaHQgYXQgbWUgYW5kIHNhaWQgIldlbGwgSSBtZWFuIHlvdSBsb29rIGxpa2UgdGhlIG1vbnN0ZXIiIHRoZXNlIHR3byBsaW5lcyBoYXZlIHN0dWNrIHdpdGggbWUgZm9yIGFzIGxvbmcgYXMgSSBjYW4gcmVtZW1iZXIuIApUaGUgbWFpbiBjYXN0bGUgaGFzIGFuIHVwc3RhaXJzIHdpdGggYSBodWdlIHdlbGwgbGl0IHJvb20gdG8gZ2V0IGRyZXNzZWQuIAoiV2Ugd291bGQgZ2V0IHdpZGUgY29tbXVuaXR5IGlucHV0IGludG8gdGhlIGRldmVsb3BtZW50IG9mIHRoZSBwb2xpY3ksIHRoZXJlIGlzIHNvbWUgbW9uZXkgaW4gbmV4dCB5ZWFyJ3MgYnVkZ2V0IHRvIGRvIHRoYXQgd29yay4iU3Vic2NyaWJlU2hhcmUgdmlhIEVtYWlsU2hhcmUgb24gRmFjZWJvb2tTaGFyZSBvbiBUd2l0dGVyUlNTIEZlZWQuCkNvbXB1dGVyIHNraWxscyBhcmUgdmFsdWFibGUgYW5kIGNhbiBvcGVuIHVwIGEgbG90IG9mIG9wdGlvbnMuIApXZSBydW4gYWJvdXQgNDAgdGFibGVzIDI0LzcuIC4xMC8uMjAgdXAgdG8gNS8xMC4gMTAvMjAgcnVucyB0d2ljZSBhIHdlZWsuIApXZSBtdXN0IGF2b2lkIHRoZSBwaXR5IGJhc2VkIGNoYXJpdHkgdGhhdCB3YXMgdGhlIGhhbGxtYXJrIG9mIHRoZSBnbG9iYWwgcmVzcG9uc2UgdG8gdGhlIDE5ODQgZmFtaW5lLiBCYW5kIEFpZCBzb2x1dGlvbnMgYW5kIGhhbmRvdXRzIG9ubHkgcmVpbmZvcmNlIG5lZ2F0aXZlIHN0ZXJlb3R5cGVzIGluIGEgY3ljbGUgb2YgZGVwZW5kZW5jZS4gSW5zdGVhZCwgd2UgaGF2ZSB0byBzZWUgdGhlIHVuZGVybHlpbmcgc3RyZW5ndGggb2YgdGhlIGNvdW50cnkgYW5kIHdvcmsgd2l0aCBpdHMgY2l0aXplbnMuCkRlIG5pbmduIG1vZG8gcXVlIGhhZ2EgdXNvIGRlIGRpcmVjY2lvbmVzIElQIG8gZGUgY29ycmVvIGVsZWN0cm5pY28gZW5nYW9zYXMsIG8gZW5jYWJlemFkb3MgZmFsc29zIG8gaWRlbnRpZmljYWRvcmVzIG1hbmlwdWxhZG9zIGRlIGN1YWxxdWllciBvdHJhIGZvcm1hIGNvbiBvYmpldG8gZGUgb2N1bHRhciBlbCBvcmlnZW4gZGVsIGNvbnRlbmlkbyB0cmFuc21pdGlkbyBhIHRyYXZzIGRlIGVzdGEgUmVkIG8gYSBsb3MgdXN1YXJpb3M7IHkKV2hhdCBpcyB5b3VyIGlkZWEgZm9yIG91ciBOb3ZlbCBXcml0aW5nIE1vbnRoIG9mIE5vdmVtYmVyPwpJIHNhdyBmaWdodGVyIHBsYW5lcyBhdHRhY2tpbmcgZWFjaCBvdGhlciBub25zdG9wIHdpdGggTWlzc2lsZXMuIApBIGxhcmdlIHBvcnRpb24gb2YgUnVzc2lhbiBvaWwgYm91bmQgZm9yIFdlc3Rlcm4gRXVyb3BlIHBhc3NlcyB0aHJvdWdoIFVrcmFpbmUuIEFuZCB0d2ljZSBpbiB0aGUgcGFzdCBkZWNhZGUsIGluIDIwMDYgYW5kIDIwMDksIFJ1c3NpYSBoYXMgdHVybmVkIG9mZiBuYXR1cmFsIGdhcyBzaGlwbWVudHMgdG8gVWtyYWluZSBkdXJpbmcgZGlzcHV0ZXMgb3ZlciBnYXMgcHJpY2VzLiBUaGF0IGluIHR1cm4gY3JlYXRlZCBzaG9ydGFnZXMgaW4gc29tZSBFVSBtZW1iZXIgbmF0aW9ucy4gSW4gcmVzcG9uc2UsIHRoZSBFVSBoYXMgYXR0ZW1wdGVkIHRvIGNvbWUgdXAgd2l0aCBhbHRlcm5hdGl2ZXMgdG8gaXRzIGN1cnJlbnQgZGVwZW5kZW5jeSBvbiBSdXNzaWFuIG9pbCBhbmQgZ2FzLiBUaGUgc28gY2FsbGVkICJOYWJ1Y2NvIiBwaXBlbGluZSwgZm9yIGV4YW1wbGUsIHdhcyBhIHBsYW4gdG8gYnlwYXNzIFJ1c3NpYSBieSBoYXZpbmcgYSBwaXBlbGluZSBydW5uaW5nIGZyb20gdGhlIENhc3BpYW4gU2VhIHRvIEV1cm9wZSwgZnJvbSBUdXJrZXkgdG8gQXVzdHJpYSB2aWEgQnVsZ2FyaWEsIFJvbWFuaWEgYW5kIEh1bmdhcnkuIEJ1dCB0aGF0IHByb2plY3Qgd2FzIHNoZWx2ZWQgbGFzdCBKdW5lLCB3aGVuIGdhcyBwcm9kdWNlcnMgaW4gQXplcmJhaWphbiBvcHRlZCBmb3IgYSBkaWZmZXJlbnQgcGxhbi4uIAoyMykgW1ZlcnkgSW1wb3J0YW50IGZvciB2ZWdhbiBtb3RoZXJzXSBBIGRpZXQgY29udGFpbmluZyBmbGF4c2VlZCBvaWwsIHdoaWNoIGhhcyBhIGhpZ2ggQUxBIGNvbnRlbnQsIGluY3JlYXNlcyB0aGUgQUxBIGFuZCBFUEEgaW4gdGhlIG1pbGsgYW5kIGVyeXRocm9jeXRlcyBvZiBsYWN0YXRpbmcgd29tZW4sIGJ1dCBub3QgREhBLgpLaHVuRGF2aWQgdQpKYWRlazF0dGVuICAgNSBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvCkxvY2F0ZWQgb24gc2Vjb25kIGZsb29yIGF0IENhZXNhcnMuLiAKUG9saWNlIHNhaWQgTmljaG9scyBlbnRlcmVkIHRoZSBwdWIgYXJvdW5kIGx1bmNoIHRpbWUgYW5kIGJlZ2FuIHBsYXlpbmcgdGhlICJRdWVlbiBvZiB0aGUgTmlsZSIgbWFjaGluZSwga25vd24gYXMgTm8uMTguIEhlIHdhcyBzZWVuIHRvIHB1dCBhIGxhcmdlIG51bWJlciBvZiBub3RlcyB0aHJvdWdoIHRoZSBtYWNoaW5lLiBXaGVuIE5vLjE4IHdhcyBhdWRpdGVkYXQgdGhlIGVuZCBvZiB0aGUgZGF5IGl0IHdhcyBmb3VuZCB0byBiZSBzaG9ydCAkNzkwLiAKIlRoYW5rcyB0byBldmVyeW9uZSB3aG8gaGFzIGpvaW5lZCB0aGUgSDJHMiBjb21tdW5pdHkgYW5kIGhlbHBlZCB1cyBjcmVhdGUgdGhlIEd1aWRlIHNvIGZhciwgYW5kIGEgd2FybSB3ZWxjb21lIHRvIGFueW9uZSB2aXNpdGluZyB1cyBmb3IgdGhlIGZpcnN0IHRpbWUuIFdlJ3JlIG9mZiB0byBhIGdyZWF0IHN0YXJ0LiBXZSBoYXZlIHRoZSBmaXJzdCBzbm93Zmxha2UuIE5vdyBsZXQncyBidWlsZCBhIGJsaXp6YXJkLiIKRm9yIGV4YW1wbGUsIGEgcGVyc29uLCBpbiB0aGUgYWJzdHJhY3QsIGlzIGZlbWluaW5lOiBwZXJzb25uZS4gClBvc3RlZCBieSB0aGlua3BpZWNlIHRvIFNvY2lldHkgQ3VsdHVyZSAoNCBhbnN3ZXJzIHRvdGFsKQpOb3RfYV9jdWx0X2xlYWRlciAgMSw3NjAgcG9pbnRzICBzdWJtaXR0ZWQgMTkgaG91cnMgYWdvCk1yLiBJbiAyMDAwLiAKSW4gbXkgZXhwZXJpZW5jZSwgYSB3ZWxsIGRldGFpbGVkIHNjb3BlIG9mIHdvcmsgYW5kIGEgcXVhbGlmaWVkIGxpc3Qgb2YgY29udHJhY3RvcnMgd2hvIG1lZXQgdGhlIGNvbmRpdGlvbnMgb2YgdGhlIGNvbnRyYWN0IHdpbGwgcHJvdmlkZSB5b3VyIHN0cmF0YSBjb3Jwb3JhdGlvbiB3aXRoIGEgY29tZm9ydGFibGUgbGV2ZWwgb2YgY29uZmlkZW5jZSBvbiB0aGUgcHJpY2luZywgdGhlIGNvbnRyYWN0b3IncyBhYmlsaXR5IHRvIHBlcmZvcm0gdGhlIHdvcmsgYW5kIGxlZ2FsIG9wdGlvbnMgaWYgdGhlIHByb2plY3QgYmVjb21lcyBlbWJyb2lsZWQgaW4gY29uZmxpY3QuIApCaW5kZXN0cmVrICAyNyBwb2ludHMgIHN1Ym1pdHRlZCA1IGRheXMgYWdvClRvIGRpc2N1c3MgdGhpcywgSW5zaWRlIFN0b3J5LCB3aXRoIHByZXNlbnRlciBTaGl1bGllIEdob3NoLCBpcyBqb2luZWQgYnkgZ3Vlc3RzOiBNYXJjbyBTcGFsbG9uZSwgYSBjb25zdWx0YW50IHRvIHRoZSBBc3NvY2lhdGlvbiBvZiBHYW1ibGluZyBJbmR1c3RyaWVzIGluIEl0YWx5LCB3aG8gaXMgYWxzbyBhIHByb2Zlc3NvciBvZiBlY29ub21pY3MgYXQgTHVpc3MgR3VpZG8gQ2FybGkgVW5pdmVyc2l0eTsgQWRyaWFuIFNjYXJzZSwgdGhlIGhlYWQgb2YgY2xpbmljYWwgdHJhaW5pbmcgZm9yIEdhbUNhcmUsIGEgc3VwcG9ydCBib2R5IGZvciBnYW1ibGluZyBhZGRpY3RzLCB3aG8gaGFzIHNldCB1cCB0aGUgZmlyc3QgZ2FtYmxpbmcgaGVscGxpbmUgb2YgaXRzIGtpbmQgaW4gdGhlIFVLOyBhbmQgV2Fyd2ljayBCYXJ0bGV0dCwgdGhlIGNoaWVmIGV4ZWN1dGl2ZSBvZiBHbG9iYWwgQmV0dGluZyBhbmQgR2FtaW5nIENvbnN1bHRhbnRzLCB3aG8gd29ya3Mgd2l0aCBnb3Zlcm5tZW50cyBhbmQgZ2FtYmxpbmcgb3BlcmF0b3JzIG9uIHJlZ3VsYXRpb25zIGFuZCBlZmZpY2llbmN5IGluIHRoZSBnYW1ibGluZyBpbmR1c3RyeS4KQm90aCB0aGUgVW5pdGVkIFN0YXRlcyBQcmV2ZW50aXZlIFNlcnZpY2VzIFRhc2sgRm9yY2UgYW5kIE5hdGlvbmFsIEluc3RpdHV0ZSBmb3IgSGVhbHRoIGFuZCBDbGluaWNhbCBFeGNlbGxlbmNlIHJlY29tbWVuZHMgU3RhdGlucyBnaXZlbiBjb3JyZWN0IGluZGljYXRpb24gKGF0IGxlYXN0IG9uZSByaXNrIGZhY3RvciBmb3IgY29yb25hcnkgaGVhcnQgZGlzZWFzZSwgYXJlIGJldHdlZW4gNDAgYW5kIDc1IHllYXJzIG9sZCwgYW5kIGhhdmUgYXQgbGVhc3QgYSAxMCUgMTAgeWVhciByaXNrIG9mIGhlYXJ0IGRpc2Vhc2UpLiBBIDIwMTMgQ29jaHJhbmUgcmV2aWV3IGZvdW5kIGEgZGVjcmVhc2UgaW4gcmlzayBvZiBkZWF0aCBhbmQgb3RoZXIgcG9vciBvdXRjb21lcyB3aXRob3V0IGFueSBldmlkZW5jZSBvZiBoYXJtLiBGb3IgZXZlcnkgMTM4IHBlb3BsZSB0cmVhdGVkIGZvciA1IHllYXJzIG9uZSBmZXdlciBkaWVzIGFuZCBmb3IgZXZlcnkgNDkgdHJlYXRlZCBvbmUgZmV3ZXIgaGFzIGFuIGVwaXNvZGUgb2YgaGVhcnQgZGlzZWFzZS4gCkluIDIwMDAsIG9uZSBvZiBteSBmYXZvcml0ZSBkaXJlY3RvcnMgbWFkZSBhIGZpbG0gdGhhdCBoZSBkZWVtZWQgaGlzICJsb3ZlIGxldHRlciB0byByb2NrIG11c2ljLiIgQ2FtZXJvbiBDcm93ZSBzcGVudCBoaXMgeW91bmdlciB5ZWFycyBhcyBhIHJlcG9ydGVyIGZvciBSb2xsaW5nIFN0b25lIE1hZ2F6aW5lLCBjb3ZlcmluZyBzb21lIG9mIHRoZSBtb3N0IG5vdGFibGUgYWN0cyBvZiB0aGUgMTk3MHMuIApUaGUgNTAwIGhhbmRzIGluIHlvdXIgc2Vzc2lvbiBjb3VsZCBoYXZlIHRha2VuIG9ubHkgYW4gaG91ciBvciBzby4gCkxhd21ha2VycyBhcmUgYXdheSBmcm9tIFdhc2hpbmd0b24gZm9yIHRoZSBob2xpZGF5cyBhbmQgaGF2ZSBiZWVuIHRvbGQgdGhleSB3aWxsIGdldCAyNCBob3Vycycgbm90aWNlIGJlZm9yZSBoYXZpbmcgdG8gcmV0dXJuIGZvciBhIHZvdGUuIEFuZCBhbHRob3VnaCBib3RoIHRoZSBIb3VzZSB0aGUgU2VuYXRlIHdlcmUgc2xhdGVkIHRvIGNvbWUgaW50byBzZXNzaW9uIGJyaWVmbHkgVGh1cnNkYXkgYWZ0ZXJub29uLCBmZXcgc2VuYXRvcnMgb3IgcmVwcmVzZW50YXRpdmVzIHdlcmUgZXhwZWN0ZWQgdG8gYmUgYXJvdW5kIGZvciBpdC4KRG93bmxvYWQgQ2FyYSBkb3dubG9hZCB2aWRlbyBkaSB5b3V0dWJlIGxld2F0IGhwIGJpYXNhLiAKWW91IG1heSBoYXZlIHRoZSBiZXN0IGhhbmQgYXQgdGhlIHJpdmVyLCBidXQgdGhhdCB0dXJuIGNhcmQgY2FuIGNoYW5nZSBldmVyeXRoaW5nLCB0aGVuIGl0IGlzIHRpbWUgdG8gZm9sZC4gWW91IGxvc3QgdGhlIGhhbmQsIGJ1dCBtYWRlIHRoZSByaWdodCBtb3ZlLi4gCkNyZWRpdCBUZXJyeSBLYXdhamEsIENFTyBvZiBkaWdpdGFsIG1hcmtldGluZyBpbnZlc3RtZW50IGJhbmsgYWR2aXNvcnkgZmlybSBMdW1hIFBhcnRuZXJzLCB3aXRoIHRoZSBiZXN0IHNlbGYgcGx1ZyB0aGlzIHdlZWsuIEF0IHRoZSBlbmQgb2YgaGlzIHByZXNlbnRhdGlvbiBvbiB0aGUgcmlzZSBvZiBkaXJlY3QgdG8gY29uc3VtZXIgYnJhbmRzIGxpa2UgRG9sbGFyIFNoYXZlIENsdWIgYW5kIEFpcmJuYiwgaGUgcHV0IG9uIGFuIEZCSSBqYWNrZXQsIHdoaWNoIGF0IGZpcnN0IGJsdXNoIGNvdWxkIGhhdmUgYmVlbiBpbnRlcnByZXRlZCBhcyBhIHJlZmVyZW5jZSB0byB0aGUgb25nb2luZyBjcmltaW5hbCBpbnZlc3RpZ2F0aW9uIGludG8gbWVkaWEgYnV5aW5nIHByYWN0aWNlcywgd2hpY2ggaGFzIGFnZW5jaWVzIHVuZGVyIHRoZSBndW4uIFR1cm5zIG91dCBLYXdhamEgd2FzIHBsYXlpbmcgb2ZmIHRoZSBGQkkgYWNyb255bSB0byB0b3V0IGhpcyBjb21wYW55LCBrbm93biBmb3IgaXRzIEx1bWFzY2FwZSBncmFwaGljcyB0aGF0IGJyaW5nIG9yZGVyIHRvIHRoZSBzcHJhd2xpbmcgc2NvcGUgb2Ygc2V2ZXJhbCBpbmR1c3RyaWVzLiBIZSByZXZlYWxlZCBhIHNsaWRlIHRoYXQgc3RhdGVkICJMdW1hOiBBZ2VudHMgRmFjaWxpdGF0aW5nIEJ1c2luZXNzIEludmVzdG1lbnQuIiBUaGUgcmVmZXJlbmNlIHdhcyBub3QgbG9zdCBvbiBCaWxsIER1Z2dhbiwgZ3JvdXAgZXhlY3V0aXZlIFZQIGF0IHRoZSBBTkEsIHdoaWNoIGhhcyBmYWNpbGl0YXRlZCBjb21tdW5pY2F0aW9uIGJldHdlZW4gdGhlIHJlYWwgRkJJIGFuZCBBTkEgbWVtYmVycyBhYm91dCB0aGUgcHJvYmUuIFNjaHVsdHoKVGhlcmUgYXJlIGZldyBpbnN0YW5jZXMgb2YgdGhlIGNhc2UgdGhhdCBhcmUgbGlua2VkIHRvIEt1bmRyYSBhbmQgaGVuY2UsIGhlIGhhcyBiZWVuIGFza2VkIHRvIHJlY29yZCBoaXMgc3RhdGVtZW50LCB0aGUgRUQgb2ZmaWNpYWwgY2xhaW1lZCB3aXRob3V0IGRpdnVsZ2luZyB0aGUgZXhhY3QgbmF0dXJlIG9mIHRoZSBxdWVzdGlvbmluZy4uIApTYW5jaGV6IHBvdGVudGlhbCBzZWVtcyB0b28gZ29vZCB0byBnaXZlIHVwLiBUaGVuIGFnYWluLCB3ZSBkbyBzZWVtIHRvIGhhdmUgYSBsb3Qgb2YgbGVmdGhhbmRlcnMgaW4gWml0bywgTG93cnksIFNhbmNoZXogYW5kIE1pc2NoLiAKQnV0IHRoZW4gSSByZWFsaXplIEkgaGF2ZSBhbGwgdGhlc2UgZGlmZmVyZW50IHN0b3JpZXMgSSBiZWVuIHRlbGxpbmcgeW91ICAgVGVuIHllYXIgb2xkIG1lIHdvdWxkIGhhdmUgYmVlbiBkaXNndXN0ZWQgdG8gcmVhZCBhYm91dCAyMCB5ZWFyIG9sZCBtZSwgMjAgeWVhciBvbGQgbWUgd291bGQgYmVlbiBzaG9ja2VkIGFzIHNoaXQgSSBldmVuIG1hZGUgaXQgdG8gMzAuIApBZnRlciBTbWl0aCBvcGVuZWQgdGhlIHNjb3JpbmcsIHRoZSBnYW1lIHJlbWFpbmVkIDEgMCB1bnRpbCBtaWR3YXkgdGhyb3VnaCB0aGUgc2Vjb25kIHBlcmlvZC4KT24gdGhlIHNhbWUgZGF5cywgc3RhcnRpbmcgYXQgNSBwbSwgdGhlIFBva2VyIFBsYXllcidzIENoYW1waW9uc2hpcCBiZWdpbnMuIApXb3JsZCBtYXJrZXRzIHJlYWN0ZWQgcXVpY2tseSBhbmQgbmVnYXRpdmVseSB0byB0aGUgcG9zc2liaWxpdHkgb2YgaGlzIHdpbm5pbmcgYW5kIGltcGxlbWVudGluZyBlY29ub21pYyBwb2xpY2llcyB0aGF0IGluY2x1ZGUgdGVhcmluZyB1cCB2YXJpb3VzIGZyZWUgdHJhZGUgZGVhbHMuIFRoZSBEb3cgSm9uZXMgSW5kdXN0cmlhbCBBdmVyYWdlIGZ1dHVyZXMgb24gV2FsbCBTdHJlZXQsIEphcGFuIE5pa2tlaSBpbmRleCBhbmQgSG9uZyBLb25nIEhhbmcgU2VuZyBpbmRleCBhbGwgcGx1bW1ldGVkLgpCdXQgaXQgd2FzIGEgc2l0dWF0aW9uIHdoZXJlIHRoZXJlIHdhcyBub3QgbXVjaCBlbHNlIEkgY291bGQgaGF2ZSBkb25lLCBlc3BlY2lhbGx5IHdpdGggSnVsaWEgY29taW5nIGluOyBpdCByZWFsbHkgcHV0IGEgaHVnZSB0YXJnZXQgb24gbXkgYmFjay4gQWZ0ZXIgdGFsa2luZyB0byBzb21lIG9mIHRoZW0sIHRoZXJlIHdhcyByZWFsbHkgbm90aGluZyBJIGNvdWxkIGhhdmUgZG9uZS4gCjIwMDMsIEJ1bGwuIENpdi4gCktlZXAgaW4gbWluZCB0aGF0IEkgYmVlbiBpbiB0aGUgZnJlZWxhbmNlIGdhbWUgZm9yIG5lYXJseSA4IHllYXJzIG5vdywgc28gbXkgc2VydmljZXMgYXJlIG1vcmUgInByZW1pdW0iIHRoYW4gcGVvcGxlIHdobyBhcmUganVzdCBzdGFydGluZyBvdXQuIEkgbm90IGluIGEgcG9zaXRpb24gd2hlcmUgSSBhY3RpdmVseSBsb29raW5nIGZvciBuZXcgY2xpZW50cywgYnV0IEkgcHV0IG15c2VsZiBpbiBwb3NpdGlvbnMgd2hlcmUgY2xpZW50cyBhcmUgbGlrZWx5IHRvIGZpbmQgbWUuCkl0IGFsbW9zdCBhIHNlbGYgZnVsZmlsbGluZyBwcm9waGVjeSwgaW4gdGhlIHNlbnNlIHRoYXQgeW91IGFyZSBleGFnZ2VyYXRpbmcgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiB5b3VyIGNvbXBhcmlzb24gZ3JvdXBzIHRvIHByb3ZlIHRoYXQgdGhlIHR3byBncm91cHMgYXJlIGRpZmZlcmVudC4gCllvdSB3b24gYW4gaW1hZ2luYXJ5IGFyZ3VtZW50IHdpdGggYSBjYXJpY2F0dXJlIHlvdSBidWlsZCB3aGljaCB5b3UgYmVsaWV2ZSBJIGZpdCBpbnRvLiAKV2UgaGVhZGVkIG91dCBvZiB0b3duIGFuZCBwaWNrZWQgdXAgdHdvIGhpdGNoaGlrZXJzIChiYWNrcGFja2Vycykgd2hvIG5lZWRlZCB0byBnbyB0byB0aGUgYmVhY2ggdG9vLiAKTm90IHRyeWluZyB0byBzYXkgSSBkb250IGxpa2UgcG9saWNlIG9yIHVuZGVyc3RhbmQgdGhlIGRhbmdlcnMgYXNzb2NpYXRlZCB3aXRoIHRoZWlyIGpvYi4gSSBqdXN0IGRvbiBsaWtlIHdoZW4gdGhleSBkbyB0aGluZ3MgdGhhdCBhcmUgaWxsZWdhbCBiZWNhdXNlIGl0IGdpdmVzIGEgYmFkIHJlcHV0YXRpb24gdG9vIG9mdGVuLgpQbGFuOiBXViB0byBNRSwgQWVvbiBMaSBjb2xkIGdlYXIgb3JkZXJlZC4gQmxldyB3YWQgb24gTmFuYSBpbnN0ZWFkIG9mIG92ZXIvdW5kZXIgcXVpbHQgaGFtbW9jaywgaW1wdWxzaXZlIGRlY2lzaW9uLCBkb25lIG5vdy4KS2VlcCBzb21lIGNvbnNpc3RlbmN5IHRocm91Z2hvdXQgdGhlIGhvbWUgd2hlbiBpdCBjb21lcyB0byBtYXRlcmlhbHMuIEluIGFuIG9wZW4gY29uY2VwdCBzcGFjZSB0aGUgbGlnaHRpbmcgc2hvdWxkIGJlIHNpbWlsYXIgdGhyb3VnaG91dC4gCk1vc3Qgc2lnbmlmaWNhbnRseSB0byBtZSwgSSBkb24gdW5kZXJzdGFuZCB3aHkgYSBqdWRnZSB3b3VsZCBvcmRlciAxMCBhcG9sb2d5IGxldHRlcnMuIEJ5IGFueSBhY2NvdW50IG9mIGNvbnRyYWN0IGxhdyBpbiBOb3J0aCBBbWVyaWNhIChleGNlcHQgUXVlYmVjKSwgdGhlcmUgaXMgbm8gY29udHJhY3QgaGVyZS4gVGhlcmUgaXMgbm8gY29uc2lkZXJhdGlvbi4gSW4gTm9ydGggQW1lcmljYSAoZXhjZXB0IGZvciBRdWViZWMpLCB5b3UgbmVlZCBjb25zaWRlcmF0aW9uIHRvIGhhdmUgYSBjb250cmFjdC4gRGlkIHRoZSBqdWRnZSBvcmRlciAxMCBhcG9sb2d5IGxldHRlcnMgYW5kIHRoYXQgeW91IGZpbmlzaCB0aGUgam9iLCBvciBqdXN0IHRoZSBsZXR0ZXJzPyBJZiBqdXN0IHRoZSBsZXR0ZXJzLCBvbiB3aGF0IGdyb3VuZHM/Ck5vdCBtYW55IHBlb3BsZSBhY3R1YWxseSB3b3JrIGluIHRoaXMgc3VubGVzcyBuaWdodG1hcmUgd2FyZWhvdXNlIGluIFhpY2hhbmcsIHdoZXJlIHRoZSBpbnNlY3RzIGFyZSBlbmNvdXJhZ2VkIHRvIG1ha2UgdGhlbXNlbHZlcyBlbnRpcmVseSBhdCBob21lLCByb2FtaW5nIGZyZWUsIGhlbHBpbmcgdGhlbXNlbHZlcyB0byB0aGUgY29udGFpbmVycyBvZiBmb29kIGFuZCB3YXRlciB0aGF0IGxpbmUgdGhlIHdhbGxzLCBicmVlZGluZyBsaWtlIC4gV2VsbCwgY29ja3JvYWNoZXMuIFRoZSByZWFzb24gbm90IG1hbnkgaHVtYW5zIGFyZSByZXF1aXJlZCB0byBydW4gdGhpcyBnYXJnYW50dWFuIGZhY2lsaXR5IGlzIHRoYXQgaXQncyBhY3R1YWxseSB2ZXJ5IGhpZ2ggdGVjaDsgbm90IG9ubHkgYXJlIHRoZSBmYWNpbGl0eSdzIGVudmlyb25tZW50YWwgY29uZGl0aW9ucyBtb25pdG9yZWQgYnkgYXJ0aWZpY2lhbCBpbnRlbGxpZ2VuY2UsIGRhdGEgaXMgY29sbGVjdGVkIG9uIGluZGl2aWR1YWwgY29ja3JvYWNoZXMsIHJhbmdpbmcgZnJvbSBnZW5ldGljIG11dGF0aW9ucyB0byBob3cgZm9vZCBjb25zdW1wdGlvbiBpbXBhY3RzIGdyb3d0aC4gClBzeWNob2xvZ2ljYWwgcmVzZWFyY2ggaGFzIHNob3duIHRoYXQgZmFtaWxpYXJpdHkgd2l0aCBhIGZhY2UgaXMgdmlydHVhbGx5IGltcG9zc2libGUgdG8gbG9zZSBhbmQgc28gdGhpcyBzeXN0ZW0gaXMgbmF0dXJhbGx5IHJvYnVzdC4gCkknbSBzdXBlcmlvciFXaGF0IFlvbmFnaSBpcyBhY3R1YWxseSB0aGlua2luZzogSG93IGNhbiBJIGJlY29tZSBmcmllbmRzIHdpdGggdGhlbT9JIHVuZGVyc3RhbmQgd2h5IFlvbmFnaSBuZWVkcyBhIHNlbnNlIG9mIG5vcm1hbGl0eSBhZnRlciBhbGwgdGhlIHRoaW5ncyB0aGF0IGhhcHBlbmVkIGJ1dCBzaGUgc3VyZSBkb2Vzbid0IGtub3cgaG93IHRvIG1ha2UgZnJpZW5kcywgYmV0dGVyIHNheSwgc2hlJ3MgY29tcGxldGVseSB1bmF3YXJlIG9mIGhvdyBoZXIgbmV3IHN0YXR1cyBhZmZlY3QgaGVyIGFiaWxpdHkgdG8gbWFrZSBmcmllbmRzLiBXZWxsIHRoaXMgbmV3IFNjaG9vbCBDbHViIGFyYyBsb29rcyBpbnRlcmVzdGluZy5Ub3AgcmF0ZWQgTUFMIFJldmlldyBvZiB0aGUgQW5pbWUsIFJhdGluZyBieSB0aGF0IHVzZXI6IDQvMTBMZXQgbWUgdGVsbCB5b3UgYSBTdG9yeSwgYSBTdG9yeSBvZiBhIG1hbiB0aGF0IGdldHMgaW50byBhIGhpZ2ggc2Nob29sLCBqdXN0IHRvIGZpbmQgb3V0IHRoYXQgdGhpcyBzY2hvb2wgaXMgcnVsZWQgYnkgImZlbWluaXNtIi4gCkl0IHdhc24ndCB1bnRpbCAyMDM4IHdoZW4gd2Uga25ldyBmb3Igc3VyZSB0aGF0IGJhYmllcyBib3JuIGluIEFudGFyY3RpY2Egd2VyZSBpbW1vcnRhbC4gVGhlIGZpcnN0IG9mIHRoZW0gd2FzIGJvcm4gaW4gMTk3OCBhbmQgYnkgdGhlbiBoZSBoYWQgdHVybmVkIDYwIHRob3VnaCBoZSBsaXRlcmFsbHkgbG9va2VkIG5vdCBhIGRheSBvdmVyIDI1LiBXZSBoYWQgYmVlbiBkb2luZyB0ZXN0cyBvbiBoaW0gZm9yIG92ZXIgNiB5ZWFycyBhdCB0aGF0IHBvaW50IHdvbmRlcmluZyBob3cgaXQgd2FzIHBvc3NpYmxlIHRoYXQgaGUgaGFkbid0IHNob3duIGFueSBzaWducyBvZiBhZ2luZy4gV2Ugc3RhcnRlZCB0ZXN0aW5nIHRoZSBvcmlnaW5hbCAxMSBhbmQgZGlzY292ZXJlZCB0aGF0IHRoZSBjb250aW5lbnQgaGFkIHNvbWUgc29ydCBvZiBpbnRlcmZlcmVuY2UgaW4gdGVsb21lcmUgZGVjYXkgZm9yIHRob3NlIGJvcm4gdGhlcmUgdGh1cyBoYWx0aW5nIGFnaW5nIGNvbXBsZXRlbHkgYWZ0ZXIgcHViZXJ0eS4gV2UgZGlkIG91ciBiZXN0IHRvIGtlZXAgdGhpcyBjbGFzc2lmaWVkIGFuZCBoZWxkIHRoZW0gcHJpc29uZXIuIEl0IHdhc24ndCByaWdodCBidXQgd2UgZGlkIHdoYXQgd2UgaGFkIHRvIGRvIGZvciB0aGUgZ29vZCBvZiBtYW5raW5kLiBJdCB3YXNuJ3QgbG9uZywgaG93ZXZlciwgdGhhdCB3b3JkIGdvdCBvdXQgYW5kIGh1bWFuaXR5IG1pZ3JhdGVkIGluIGdyb3ZlcyB0byB0aGUgZm9ybWVyIGxlYXN0IHBvcHVsYXRlZCBjb250aW5lbnQgdG8gZ2l2ZSB0aGVpciBjaGlsZHJlbiBldmVybGFzdGluZyBsaWZlLiBXYXIgYnJva2Ugb3V0IGJldHdlZW4gZXZlcnkgbmF0aW9uIGFzIGV2ZXJ5b25lIHdhbnRlZCBjb250cm9sIG9mIGl0IHRvIGhhdmUgYW4gdW5zdG9wcGFibGUgYXJteS4gU2hvcnRseSBhZnRlciB0aGUgd2FyIGJyb2tlIG91dC4gV2hlbiB0aGUgZmlyc3QgbnVrZXMgZnJvbSBSdXNzaWEgaGl0IFNwYWluLCB0aGUgd29ybGQgZXJ1cHRlZCBpbnRvIGFuYXJjaHkuIFNvb24gZXZlcnkgY291bnRyeSB3aXRoIHRoZSBjYXBhYmlsaXRpZXMgdG8gZG8gc28sIGxhdW5jaGVkIHRoZWlyIG93biBudWtlcyBpbiByZXRhbGlhdGlvbiBhdCBlYWNoIG90aGVyLiBBZnRlciB0aGF0IGl0IHdhcyBldmVyeW9uZSBmb3IgdGhlbXNlbHZlcy4gVGhvc2Ugb2YgdXMgd2hvIHN1cnZpdmVkIGFuZCB3ZXJlIGZvcnR1bmF0ZSBlbm91Z2ggdG8gbm90IGJlIGVuZ3VsZmVkIGluIG51Y2xlYXIgcmFkaWF0aW9uIHN0YXJ0ZWQgZm9ybWluZyBpbnRvIGdyb3VwcyB0aGF0IGZvdWdodCBmb3IgbGltaXRlZCBzdXBwbGllcyBhbmQgdGVycml0b3JpZXMuIFNvbWUgd2hvIHdlcmUgZGFyaW5nIGVub3VnaCBqb3VybmV5ZWQgdGhvdXNhbmRzIG9mIG1pbGVzIHRvIG1ha2UgaXQgdG8gQW50YXJjdGljYSBzbyB0aGVpciBjaGlsZHJlbiBjb3VsZCBoYXZlIGEgYmV0dGVyIGxpZmUuCkFuIEF1dG8gU2hvdyBUaGF0IER3YXJmcyBBbGwgT3RoZXJzClBsYW4geW91ciBjZWxlYnJhdGlvbi4gQSBmZXcgd2Vla3Mgb3IgZGF5cyBiZWZvcmUgeW91ciBhbm5pdmVyc2FyeSwgaXQgd2lsbCByZWFsbHkgYmUgaGVscGZ1bCBmb3IgeW91IGlmIHlvdSBnbyBhbmQgcGxhbiB3aGF0IHlvdSBhcmUgZ29pbmcgdG8gZG8gYWhlYWQgb2YgdGltZS4gClRoZXNlIHBsYXllcnMgdXNlIHRvIGhhdmUgc29tZSBleGNlcHRpb25hbCB0aGluZ3MgdG8gcmVzaXN0IHRoaXMgbGlrZSB1bmlxdWUgcHJvZHVjdHMgb3IsIHNvbWUgY29pbnMuIApTZWJlbHVtIEFuZGEgbWVtaWxpaCBzZWNhcmEgb25saW5lIGthbWFyIHRlcmJhaWsgcG9rZXIsIG1lbWJhY2EgdHVsaXNhbiBrZWNpbCBkZW5nYW4gc3lhcmF0IGRhbiBrZXRlbnR1YW4gc2l0dXMgJy4gQW5kYSBtdW5na2luIG1lbmRhcGF0a2FuIGJhaWsgdGVya2VqdXQgZGVuZ2FuIGJlYmVyYXBhIGRhcmkgbWVyZWthLiBBbmRhIG11bmdraW4gbWVuZ2dhbGkgYmFueWFrIGluZm9ybWFzaSBkYXJpIGJhZ2lhbiBGQVEgZGFyaSBzaXR1cyBpbmkganVnYS4gVmlydHVhbCBrYW1hciBwb2tlciB5YW5nIG1lbmdob3JtYXRpIGRhbiBwZXJhd2F0YW4gdW50dWsgcGVtYWluIG1lcmVrYSBiaWFzYW55YSBkaWludmVzdGFzaWthbiBkYWxhbSBtZW5kaXJpa2FuIGJhZ2lhbiBzZWtvbGFoIHBva2VyLiBJbmkgYWthbiBtZW5nYWphcmthbiBBbmRhIHN0cmF0ZWdpIHVudHVrIG1lbmdlbWJhbmdrYW4gdGFuZ2FuIG1lbmFuZyBkYW4gcmVrZW5pbmcgdW50dWsgcmluY2lhbiBiZXJtYWluIGdhbWUuCkFsc28sIEkgd291bGQgc3RpbGwgYmUgd2Vhcnkgb2YgdGhlIGdhbWUsIHNvIGxvbmcgYXMgdGhlIHV0dGVybHkgaW5jb21wZXRlbnQgTHVrZSBTbWl0aCBpcyBzdGlsbCBpbnZvbHZlZCBpbiBpdC4KSXQncyBoYXJkIGZvciBtb3N0IHBlb3BsZSB0byBjb21wcmVoZW5kIHRoYXQgSSwgb3IgYW55IHdvbWFuLCBjb3VsZCBub3Qgd2FudCB0byBiZSBhIG1vdGhlci4gQnV0IEkgaGFkIGtub3duIGZvciB5ZWFycyB0aGF0IEkgZGlkIG5vdCB3YW50IHRvIGJlIG9uZSwgdGhhdCBJIGhhZCBubyBpbnRlbnRpb24gb2YgZXZlciBoYXZpbmcgY2hpbGRyZW4uIEkgaGFkIGNvbnNpZGVyZWQgaXQgd2l0aCBteSBmaWFuYywgYnV0IGV2ZW4gdGhlbiBJIGtuZXcgaXQgd291bGQgYmUgZ29pbmcgYWdhaW5zdCBldmVyeXRoaW5nIEkgYmVsaWV2ZWQgaW4uCiJIZSdzIG91ciBzdGFyLCIgc2F5cyBTdGVwaGVuIEFsbHN0ZWFkdCwgYSBwYXJ0bmVyIGluIEF4aW9tIEFkdmVydGlzaW5nIGluIFNjaGF1bWJ1cmcsIHdoaWNoIGhhbmRsZXMgVFYgYWR2ZXJ0aXNpbmcgZm9yIHRoZSBncm91cC4gIldlJ3ZlIGhhZCBoaW0gaW4gY29zdHVtZSBhcyBDb3dib3kgQm9iLCBDb3VudCBCb2J1bGEsIERvY3RvciBCb2IuIiBHZW5lcmF0aW9ucyBvZiBDaGljYWdvIEN1YnMgYnJvYWRjYXN0IGZhbnMga25vdyBoaXMgdHJhZGVtYXJrIGFuaW1hdGVkIGxpb24sIExlbywgZ3Jvd2xpbmcgb3V0IHRoZSAiQm9iIFJPT09PSEhISFIgbWFuIiB0YWcgbGluZS4uIApUaGUgY2FzaW5vIHdpbGwgaGF2ZSBhIFBhcnEgQ2x1YiByZXdhcmRzIHByb2dyYW0sIHdoaWNoIHdpbGwgYmUgYXZhaWxhYmxlIHRvIGV2ZXJ5IGd1ZXN0LCBhcyB3ZWxsIGFzIGFuIGV4Y2x1c2l2ZSBQbGF5ZXJzIENsdWIgZm9yIFZJUHMgYW5kIGxveWFsIGN1c3RvbWVycy4gCkJ1dCB0aGUgbnVjbGVhciBib21iIGVydXB0ZWQgb3V0IG9mIHRoZSBlYXJ0aCBsaWtlIGEgcGlzc2VkIG9mZiByYWRpb2FjdGl2ZSB2b2xjYW5vLCByZWxlYXNpbmcgdGhlIHNlaXNtaWMgZXF1aXZhbGVudCBvZiBhIDQuNzUgZWFydGhxdWFrZSBhbmQgbGF1bmNoaW5nIDYuNiBtaWxsaW9uIGN1YmljIHlhcmRzIG9mIHJhZGlvYWN0aXZlIGVhcnRoIGludG8gdGhlIGF0bW9zcGhlcmUuIApPdmVydmlldyBmb3IgTU1NbWFwbGVCYWNvbgpJIGFsc28gc2Vjb25kIHdoYXQgdGhleSBzYWlkIGFib3V0IGlmIHlvdSBkb24gZmVlbCBhbnl0aGluZywgZWF0IHNvbWV0aGluZy4gSSByZWFkIGVhdGluZyBzb21ldGhpbmcgZmF0dHkgaGVscHMsIGFuZCBzbyBmYXIgaXQgaGFzIGZvciBtZS4uIApNb2JpbGUgZ2FtaW5nIHJlYWxseSBiZWdhbiBtYWtpbmcgd2F2ZXMgd2l0aCBBcHBsZSdzIGludHJvZHVjdGlvbiBvZiB0aGUgaVBob25lIGJhY2sgaW4gMjAwNywgYW5kIEdvb2dsZSdzIEFuZHJvaWQgaW4gMjAwOC4gCkNvbW1lIHVuIGVmZm9ydCBwb3VyIHJlbm91ZXIgdW4gbGllbi4gCllvdSBjYW4gdXNlIGJsZWFjaCB0byByZW1vdmUgc3RhaW5zIG9uIGNsb3RoaW5nIG9yIHRvIHdoaXRlbiB5b3VyIGxhdW5kcnkuIApTaGUgaGFzIHNpbmNlIG1hcnJpZWQgQnJvZG92LCBhbmQgc2FpZCBzaGUgZG9lcyBub3QgcmVncmV0IGxlYXZpbmcgaGVyIGZpcnN0IGh1c2JhbmQuClNvIGFib3V0IGEgeWVhciBhZ28gKEp1bHkgbGFzdCB5ZWFyKSwgYSBmcmllbmQgYXBwcm9hY2hlZCBtZSBhbmQsIGxvbmcgc3Rvcnkgc2hvcnQsIEkgZW5kZWQgdXAgRE1pbmcgZm9yIGEgZ3JvdXAgb2YgZnJpZW5kcy4gClRoZSBTcHkgQ2hlYXRpbmcgUGxheWluZyBDYXJkcyB0byBNYWtlIFdlYWx0aGllcgpBbmQgeW91IGRvbiBuZWVkIHRvIHRlbGwgbWUgYWJvdXQgbmV1cmFsIHJlY2VwdG9ycyBhbmQgYXRyb3BoeSAgIEkgd2FzIG9uIGVmZmV4b3IgMzAwbWcgMyB5ZWFycywgYW5kIEkgd2VudCB0aHJvdWdoIHRoZSBwcm9jZXNzIG9mIHRhcGVyaW5nIGFsbCB0aGUgd2F5IGRvd24gdG8gMCwgd2l0aG91dCBhbnkgbG9uZyB0ZXJtIG5lZ2F0aXZlIGVmZmVjdHMuIApBbnlvbmUgd2hvIGNhbiBsb29rIGF0IHRoZW0gYW5kIGZpbmQgc29tZXRoaW5nIGNvbW1lbmRhYmxlIGVub3VnaCB0byB3YW50IHRvIGFkb3B0IHRoZWlyIGJlbGllZnMgaW4gdGhlIG1vZGVybiBlcmEgYXJlIGF0IGJlc3QgbWlzaW5mb3JtZWQgYW5kIGF0IHdvcnN0IGEgbW9uc3RlciB0aGVtc2VsZi4uIApJdCBpcyBleGFjdGx5IHdoYXQgeW91IGFyZSBhc2tpbmcgZm9yICAgdHJ1ZSBvbmUgcG90IHByZXNzdXJlIGNvb2tpbmcgd2hlcmUgeW91IGR1bXAgZXZlcnl0aGluZyBpbiBhIHByZXNzdXJlIGNvb2tlci4gCkkgY29sbGVjdCBkaWZmZXJlbnQgdmVyc2lvbnMgb2YgdGhlIHNhbWUgcGFpbnRpbmcuIEkgaGF2ZSBsb3RzIG9mIHNoaXJ0cyB0aGF0IGhhdmUgdmFyaWF0aW9ucyBvZiB2YW4gR29naCBTdGFycnkgTmlnaHQgZG9uZSB3aXRoIGRpZmZlcmVudCBwb3AgY3VsdHVyZSByZWZlcmVuY2VzLiBNb3N0IG9mIG1pbmUgaGF2ZSBjb21lIGZyb20gS29obCAoQmF0bWFuLCBTdGFyIFdhcnMsIERvY3RvciBXaG8pIGJ1dCBJIGFsc28gaGF2ZSBzb21lIGZyb20gcmFuZG9tIHBsYWNlcyBvbmxpbmUgKEZ1dHVyYW1hLCBTdXBlcm5hdHVyYWwpLiBJIGFsc28gY29sbGVjdCBhbGwga2luZHMgb2Ygc3R1ZmYgdGhhdCBoYXZlIE1ldGFsbGljYSBNYXN0ZXIgb2YgUHVwcGV0cyBjb3ZlciBhcnQgb24gdGhlbS4gSSB1c2UgYSBub24gcmVwbGFjZW1lbnQgdG9pbGV0IGFzIGFydCBpZiBpdCBoYWQgTWFzdGVyIG9mIFB1cHBldHMgYWxsIG92ZXIgaXQuClRoZSBjb250cm92ZXJzeSBpbnZvbHZlcyB3aGF0IGFyZSBrbm93biBhcyAiZGVzaWduYXRlZCBwbGF5ZXIiIGNhcmQgZ2FtZXMsIGFsc28gY2FsbGVkICJwbGF5ZXIgYmFua2VkIiBjYXJkIGdhbWVzLCB3aGljaCBpbmNsdWRlIGEgaHlicmlkIG9mIHRocmVlIGNhcmQgcG9rZXIgYW5kIHJlc2VtYmxlIGNhc2lubyBzdHlsZSBjYXJkIGdhbWVzIGJ1dCBhcmUgcGxheWVkIGFtb25nIGdhbWJsZXJzIGluc3RlYWQgb2YgYWdhaW5zdCB0aGUgaG91c2UuIFBhcmkgbXV0dWVsIG9wZXJhdG9ycyAgIHdobyBhcmUgYmFubmVkIGJ5IGxhdyBmcm9tIG9mZmVyaW5nICJiYW5rZWQiIGNhcmQgZ2FtZXMsIHN1Y2ggYXMgYmxhY2tqYWNrLCBpbiB3aGljaCBwbGF5ZXJzIGJldCBhZ2FpbnN0IHRoZSBob3VzZSBpbnN0ZWFkIG9mIGFnYWluc3QgZWFjaCBvdGhlciAgIGNvbnRlbmQgdGhlIGdhbWVzIGFyZSBsZWdhbC4uIApUaGUgY29udHJvbCBJc3JhZWwgd2llbGRzIG92ZXIgdGhlIG9jY3VwaWVkIFBhbGVzdGluaWFuIHBvcHVsYXRpb24gaXMgZXZpZGVudCBpbiB0aGUgZGlzcGFyaXR5IG9mIHRoZSBwcmlzb25lciBleGNoYW5nZTogUGFsZXN0aW5pYW5zLCBpbiB0aGlzIGNhc2UgSGFtYXMsIGNvbnRyb2wgdGhlIGxpZmUgb2YgZXhhY3RseSBvbmUgSXNyYWVsaSwgYSBjYXB0dXJlZCBzb2xkaWVyIChhbmQsIGluIGZhY3QsIEhhbWFzIHZpb2xhdGVkIGludGVybmF0aW9uYWwgbGF3IGJ5IGRlbnlpbmcgU2hhbGl0IGFjY2VzcyB0byB0aGUgUmVkIENyb3NzKS4KQSB0ZXJyaWJsZSBzdG9ybSBjYW1lIGludG8gYSB0b3duIGFuZCBsb2NhbCBvZmZpY2lhbHMgc2VudCBvdXQgYW4gZW1lcmdlbmN5IHdhcm5pbmcgdGhhdCB0aGUgcml2ZXJiYW5rcyB3b3VsZCBzb29uIG92ZXJmbG93IGFuZCBmbG9vZCB0aGUgbmVhcmJ5IGhvbWVzLiBUaGV5IG9yZGVyZWQgZXZlcnlvbmUgaW4gdGhlIHRvd24gdG8gZXZhY3VhdGUgaW1tZWRpYXRlbHkuCiJJZiB5b3UncmUgZ29pbmcgdG8gdHJ5IGFuZCBzYXZlIHlvdXJzZWxmIGJ5IGdvaW5nIHB1YmxpYywgSU5TVEVBRCBPRiBDQUxMSU5HIE1FIFBSSVZBVEVMWSBUTyBBUE9MT0dJWkUgRklSU1QsIGF0IGxlYXN0IGJlIEhPTkVTVCBhYm91dCB5b3VyIHN0b3J5LiBCVFcsIFlvdSBBUkUgdGhlIHJlYXNvbiBteSBmYW1pbHkgYnJva2UgdXAhIiBLYXJkYXNoaWFuIHR3ZWV0ZWQgRnJpZGF5LgpJZiBTaW1hIGJyb3VnaHQgdXAgdGhlIGltbXVuaXR5IGFncmVlbWVudCBpbiBmcm9udCBvZiB0aGUganVyeSwgdGhlbiBSZWQncyBjcmltaW5hbCByZXB1dGF0aW9uIGFzIHdlbGwgYXMgaGlzIGxpZmUgYW5kIHRoYXQgb2YgdGhvc2UgY2xvc2UgdG8gaGltIHN1Y2ggYXMgTGl6IGFyZSBhdCByaXNrLiAKSSB3YXMgbHVja3kgZW5vdWdoIHRvIHdpbiBpdCBvbmNlLiAKQW5kIEJsb29tIGlzIGZ1bGwgb2YgcHJhaXNlIGZvciAiZXh0cmFvcmRpbmFyeSIgSmVzc2ljYSBDaGFzdGFpbiwgd2hvIHN0YXJzIGFsb25nc2lkZSBJZHJpcyBFbGJhICh3aG8gcGxheXMgQmxvb20ncyBsYXd5ZXIpIGFuZCBLZXZpbiBDb3N0bmVyICh3aG8gcGxheXMgaGVyIGZhdGhlcikuCldlIGNvdWxkIHNlZSBvbmx5IG9uZSBvdGhlciBob3VzZSwgd2hpY2ggYmFzaWNhbGx5IG1lYW50IHRoZXJlIHdhcyBubyB0cmFmZmljLiAKSWYgYSB3b21hbiB3YXRlciBicmVha3MgZHVyaW5nIHRoZSBzZWNvbmQgdHJpbWVzdGVyIChiZWZvcmUgdGhlIGZldHVzIGlzIHZpYWJsZSkgYW5kIHRoZSBhbW5pb3RpYyBmbHVpZCBkb2VzbiByZWZpbGwsIHRoZW4gc2hlIGNhbiBlaXRoZXIgaGF2ZSBhbiBhYm9ydGlvbiBvciBsYWJvciBjYW4gYmUgaW5kdWNlZCAoaW4gd2hpY2ggY2FzZSwgYSBub24gdmlhYmxlIGZldHVzIHdpbGwgYmUgZGVsaXZlcmVkKS4gSWYgc2hlIGRldmVsb3BzIHNldmVyZSBlY2xhbXBzaWEsIHNoZSBjYW4gY2hvb3NlIHRvIGFib3J0LiBFY2xhbXBzaWEgaXMgb25lIG9mIHRoZSBsZWFkaW5nIGNhdXNlcyBvZiBtYXRlcm5hbCBkZWF0aCBpbiBwcmVnbmFuY3kuLiAKSXQgd2lsbCBhZGQgdG8geW91ciBkYWlseSBwcm90ZWluIG1hY3JvLCBidXQgaXQgd29uIHRyaWdnZXIgbXVzY2xlIGJ1aWxkaW5nIGFzIGVmZmVjdGl2ZWx5IGFzIHdoZW4geW91IHdlcmUgMjAuVHdvIHNvbHV0aW9ucyB0byBiZWF0aW5nIGFuYWJvbGljIHJlc2lzdGFuY2UgaXMgdG8gZWl0aGVyIGVhdCB0d2ljZSBhcyBtdWNoIHByb3RlaW4gcGVyIGhpdCAoNDBnIGF0IGEgdGltZSksIG9yIGVhdCB0aGUgdGhlIG9yaWdpbmFsIDIwZyBtaXhlZCB3aXRoIDVnIGxldWNpbmUgKGF2b2lkIEJDQUEgbWl4ZXMgYmVjYXVzZSBhbGwgMyB0eXBlcyBvZiBCQ0FBIHVzZSB0aGUgc2FtZSBlbnp5bWUgc28geW91ciBsZXVjaW5lIGRvZXNuIHNwaWtlIGFzIGhpZ2gsIHdoaWNoIGlzIHNvbWV0aGluZyB5b3Ugd2FudCB0byBoYXBwZW4gZm9yIG1heCBwcm90ZWluIHN5bnRoZXNpcylCdXQgcmVtZW1iZXI6IGNoYXNlIGZ1bmN0aW9uYWwgZml0bmVzcyBhbmQgYm9keSBjb21wb3NpdGlvbiBhbmQgdGhlIHdlaWdodCB3aWxsIHRha2UgY2FyZSBvZiBpdHNlbGYuUHJvZmFuZU1vbmtleUNhcGVycyAgNyBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvV29ya2luZyBvbiBzaGVkZGluZyB0aGUgc3BhcmUgdHlyZSBiZWZvcmUgSSBnZXQgc28gb2xkIHRoYXQgaXQgYmVjb21lcyBhIHByb2JsZW0uIApUaGVyZSBpcyBzb21ldGhpbmcgc3BlY2lmaWMgdG8gYWR2ZXJzaXR5IGFuZCBoYXZpbmcgdG8gYWRhcHQgdG8gbGl2aW5nIGluIGEgd29ybGQgbm90IGluaGVyZW50bHkgInVzZXIgZnJpZW5kbHkiIHRoYXQgbWFuaWZlc3RzIGluZGl2aWR1YWxzIHdobyBkb24gYWNjZXB0ICJObyIgb3IgIkNhbiBhcyBhbnN3ZXJzIGlmIGEgZG9vciBpcyBjbG9zZWQgdG8gdGhlbS4gCklzIGl0IG1vcmUgdGhhbiBhbnRpY2lwYXRlZD8gWWVzLiAKTW9zdCBsaXZlIHBsYXllcnMgYXJlbiBnb2luZyB0byBibHVmZiB3aXRoIGEgbWlzc2VkIGNsdWIgb3IgZXZlbiB2YWx1ZSBiZXQgQXggaGVyZSwgc28gdGhlIGZvbGQgaXMgZWFzeSBpZiB0aGV5IGJldC4gCkkgc3RhcnRlZCBhcyBkaW1pciBjb250cm9sIGl0cyBncmVhdCBmb3IgYmVnaW5uZXIncy4gCkluIG91ciBjb3VudHJ5IHRvZGF5LCBtZXJlbHkgZXhwcmVzc2luZyBhbiB1bmZsYXR0ZXJpbmcgb3BpbmlvbiBhYm91dCBhbiBvdXRnb2luZyBhcm15IGNoaWVmIGlzIGxhYmVsbGVkIHRyZWFzb25vdXMuIEluIHRoaXMgbGFuZCBvZiBvdXJzLCB0byBjYWxsIGZvciB0aGUgYWNjb3VudGFiaWxpdHkgb2YgYSB0d28gdGltZSBjb25zdGl0dXRpb24gYnJlYWtlciBpcyBjb25zaWRlcmVkIHNlZGl0aW91cy4gV2h5IGRpZCBzbGltZSBzbGluZ2luZyBvZiB0aGlzIHNjYWxlIGV2b2tlIG5vIHJlc3BvbnNlPyBDb3VsZCB0aGlzIHZpZGVvIGhhdmUgY29tZSBvdXQgd2l0aG91dCBhIGZ1bGwgY2FiYWwgZGVzaWduaW5nLCBwbGFubmluZyBhbmQgZXhlY3V0aW5nIGl0Py4gClRoZSBtYW5hZ2VyIHNhdyBoaW0gYW5kIHNhaWQgV0FJVCBXSEFUIEFSRSBZT1UgRE9JTkc/IGFuZCB0aGV5IGd1eSBzYWlkIFNPUlJZIEkgRE9OVCBIQVZFIEFOWSBNT05FWSBhbmQgbGVmdCB0aGUgY2FydCBhbmQgd2Fsa2VkIGF3YXkuLiAKRXhjZXB0IGZvciBpdHMgdGl0bGUsIHRoZSBtb3ZpZSBRdWFudHVtIG9mIFNvbGFjZSBkb2VzIG5vdCBoYXZlIGFueXRoaW5nIGluIGNvbW1vbiB3aXRoIEZsZW1pbmcgc2hvcnQgc3RvcnksIGJ1dCBpdCBjYW4gYmUgaW50ZXJwcmV0ZWQgaW4gdGhlIHdheSB0aGF0IEJvbmQgdGFrZXMgcmV2ZW5nZSBmb3IgVmVzcGVyIGJldHJheWFsIGJ5IGh1bnRpbmcgZG93biBhbnlvbmUgaGUgY2FuIHBvc3NpYmx5IHJlYWNoIG91dCB0byBvZiB0aG9zZSBjb25uZWN0ZWQgdG8gdGhlIENhc2lubyBSb3lhbGUgcGxvdC4gClRoYXQgaGVscGVkLiBJIG9wdGVkIG5vdCB0byB3ZWFyIGdsb3ZlcyBhbmQgbXkgaGFuZHMgcmVhbGx5IGh1cnQgZm9yIHRoZSBmaXJzdCB0aHJlZSBtaWxlcyB1bnRpbCBJIGdvdCB3YXJtZWQgdXAuIApPaCBhbmQgdGhlcmUgaXMgdGhhdCBvbmUgc2VnbWVudCBvZiBUaGUgQ29ja3BpdCB3aGljaCBpcyBhYm91dCBrYW1pa2F6ZSBwaWxvdHMgYW5kIGhvd3MgaG93IGZ1Y2tlZCB1cCB0aGF0IHdob2xlIHNpdHVhdGlvbiB3YXMuIEZpbmFsbHkgeW91IGhhdmUgcmVhbCByb29ib3Qgc2hvd3Mgb2Ygd2hpY2ggSSBzYXkgYWJvdXQgYSBnb29kIDYwJSBvZiB0aGVtICh3ZWxsIHByZSAyMDA0IHNob3dzIGFueXdheSkgaW4gc29tZSB3YXkgYXJlIGFib3V0IHRoZSB3YXIuIApSZWRtYW4gaGFzIGFsc28gbWFkZSBhIGd1ZXN0IGFwcGVhcmFuY2Ugb24gYW4gZXBpc29kZSBvZiB0aGUgVFYgc2hvdyBBcnRodXIgYXMgdGhlIHVuY2xlIG9mIEZyYW5jaW5lLCBvbmUgb2YgdGhlIG1haW4gY2hhcmFjdGVycy4gVGhlIGVwaXNvZGUgYWxzbyBkZXBpY3RzIGhpbSBpbiBhIGJveGluZyBtYXRjaCBhZ2FpbnN0IGNsYXNzaWNhbCBjZWxsaXN0IFlvIFlvIE1hLgpQZXJmZWN0IGZvciBtZS4gQW5kIEkgYWNjZXB0IHRoYXQgbXkgY293b3JrZXIgc29tZXRpbWVzIHNjcmVhbXMgaGVyIGhlYWQgb2ZmIHRvIHZlbnQgZnJ1c3RyYXRpb25zLiAKRGF2aWQgQmFhem92IGZhaXQgZmFjZSAgY2lucSBjaGVmcyBkIG5vdGFtbWVudCBwb3VyIGF2b2lyIGluZmx1ZW5jIG91IHRlbnQgZCBsZSBjb3VycyBkdSB0aXRyZSBkIGV0IHBvdXIgYXZvaXIgY29tbXVuaXF1IHVuZSBpbmZvcm1hdGlvbiBwcml2aWxnaWUuClRoZSBjYXNpbm8gd291bGQgbXVjaCByYXRoZXIgaGF2ZSB0YWJsZXMgZnVsbCBvZiB0aGVzZSBwbGF5ZXJzLCB0aGV5IHBsYXkgYmlnZ2VyIHBvdHMgYW5kIGluIHR1cm4gcGF5IG1vcmUgcmFrZS4gCkFuZCB3aXRoIHlvdSBkcm9wcGluZyB0aGUgcm9wZSwgSSBzdXJlIGZhY2V0aW1lIHdpdGggdGhlIHRoaWVmIHdpbGwgZGllIHNvb25lciByYXRoZXIgdGhhbiBsYXRlci4gU28gZXZlcnlib2R5IHdpbnMhIChXZWxsLCBldmVyeWJvZHkgYnV0IHRoZSB0aGllZi4gKS4gCk5vdCBvbmx5IHdhcyB0aGUgc2l4IHllYXIgZXh0ZW5zaW9uIG9mIENISVAgbWVhbnQgdG8gd2luIERlbW9jcmF0aWMgdm90ZXMsIHRoZSBwcm9ncmFtIGlzIGluIG5lZWQgb2YgbW9yZSBjZXJ0YWludHkuCldoYXQgYSB3YXkgdG8gc3RhcnQgdGhlIGRheSEgSSBhc2tlZCBoZXIgbmljZWx5IHRvIHRoaW5rIGFib3V0IGhvdyBzaGUgcHJlc2VudHMgKGRpc3RyZXNzaW5nIG5ld3MpIGluIHRoZSBmdXR1cmUuIApDbGF1ZGUgQm91Y2hhcmQgQm9va3MKVGhlIG5hdHVyYWwgaGlzdG9yeSBvZiBhIGx1bWJhciBoZXJuaWEgb2YgdGhlIG51Y2xldXMgcHVscG9zdXMgKEhOUCkgaXMgbm90IGZ1bGx5IGtub3duIGFuZCBjbGVhciBpbmRpY2F0aW9ucyBmb3Igb3BlcmF0aXZlIGludGVydmVudGlvbiBjYW5ub3QgYmUgZXN0YWJsaXNoZWQgZnJvbSB0aGUgbGl0ZXJhdHVyZS4gU2V2ZXJhbCBzdHVkaWVzIGhhdmUgc2hvd24gdGhhdCB0aGUgbGFyZ2VzdCBkaXNjcyBhcHBlYXIgdG8gaGF2ZSB0aGUgZ3JlYXRlc3QgdGVuZGVuY3kgdG8gcmVzb2x2ZS4gVGhlIGFpbSBvZiB0aGlzIHN0dWR5IHdhcyB0byBpbnZlc3RpZ2F0ZSB3aGV0aGVyIG1hc3NpdmUgcHJvbGFwc2VkIGRpc2NzIGNhbiBiZSBzYWZlbHkgbWFuYWdlZCBjb25zZXJ2YXRpdmVseSBvbmNlIGNsaW5pY2FsIGltcHJvdmVtZW50IGhhcyBvY2N1cnJlZC4uIApCdXQgbXkgYmVzdCBmcmllbmQgaXMgYmxhY2sgYW5kIG1vc3Qgb2YgaGVyIHJlbGF0aW9uc2hpcHMgaGF2ZSBiZWVuIHdpdGggd2hpdGUgbWVuLiAKU3Vic2VxdWVudGx5IGFza2VkIGZvciBhIHlldCBtb3JlIGRldGFpbGVkIGJyZWFrZG93biBvZiB0aGUgbW9kZXJhdG9ycycgd29ya2xvYWQuIEhhbGYgb2YgdGhlIHN0dWZmIHRoYXQgY29tZXMgdGhyb3VnaCB0aGUgcXVldWUgaXMgZWl0aGVyIGZpbHRlcmVkIHRlcm1zIChtb3N0IGFyZSBjbGVhcmVkIHdpdGhvdXQgaW5jaWRlbnQpLCBuZXcgcmVnaXN0cmF0aW9ucyByZXZpZXcgKHdlIGNoZWNrIHRoZW0gb24gYSBzcGFtIGRhdGFiYXNlLCBtb3N0IHBhc3MpLCBkZWxldGlvbiBvZiBhY2NvdW50cyB3aGljaCBzcGFtIG9yIGFkdmVydGlzZSAoYXZlcmFnZSAyIDMgcGVyIHdlZWspIG9yIG9uZSBvciB0d28gUmVzZWFyY2hlcnMgYWx0ZXJpbmcgZGlzcGxheSBuYW1lcyBmcmVxdWVudGx5ICwgYW5kIGNob29zaW5nIGEgbmFtZSB0byBhdHRhY2sgdGhlIHZvbHVudGVlcnMgb3IgImZhbiB0aGUgZmxhbWVzIG9mIGZldWRzIiAgIHRoZSBraW5kIG9mIGJlaGF2aW91ciBJIHJlZmVycmVkIHRvIGluIG15IGxvbmdlciBwb3N0IGxhc3Qgd2Vlaywgd2hpY2ggcmVtaW5kcyBtZSBvZiB0aGUgcGxheWdyb3VuZCBhbmQgd2UgY291bGQgYWxsIGRvIHdpdGhvdXQgaXQuIFRoaXMgaXMgdGhlIGtpbmQgb2YgbG93IGxldmVsIG5pZ2dsZSB0aGF0IGFmdGVyIGEgd2hpbGUgYmVjb21lcyBhcyBncmF0aW5nIGFzIHRoZSBzb3VuZCBvZiBmaW5nZXIgbmFpbHMgc2NyYXBlZCBkb3duIGEgYmxhY2tib2FyZCBhbmQgaXQgY2FuIGdldCBwcmV0dHkgaGFyZCB0byAiaGVhciBwYXN0IHRoYXQiIHNvbWV0aW1lcy4gClNpYWthbSB0b29rIHRoZSBiYWxsIG9mZiBhIGJhZCBwYXNzIGZyb20gTW9ycmlzIGFuZCB3ZW50IGNvYXN0IHRvIGNvYXN0IGJlZm9yZSBlYXNpbHkgZHJpbGxpbmcgdGhlIGJhc2tldC4uIApCcmluZ2luZyB0aGlzIGludG8gZmFtaWx5IHRlcnJpdG9yeSBpcyBqdXN0IGEgaHVnZSBubyBmb3IgbWUuIEV4cGxhaW5pbmcgdGhpcyB0byB5b3VyIGtpZHMgdmVyc2VzIGV4cGxhaW5pbmcgYSBodWcgb3IgYSBraXNzIGlzIGEgaHVnZSBkaWZmZXJlbmNlISBUaGlzIHdvdWxkIGJlIGxpa2UgdHJ5aW5nIHRvIGV4cGxhaW4gd2h5IHNvbWUgcGVydmVydCBmbGFzaGVkIHRoZW0gaW4gYSBtYWxsIG9yIHNvbWV0aGluZy4gCklmIHlvdSBoYXZlIGFueSBsaXR0bGUgcGxhc3RpYyBwbGFudHMsIHRyZWFzdXJlIGNoZXN0cywgb3Igc2NhbGUgbW9kZWxzIG9mIHRoZSBUaXRhbmljIGluIHlvdXIgZmlzaGJvd2wgdGFrZSB0aGVtIG91dCBhbmQgcHV0IHRoZW0gdG8gb25lIHNpZGUuCllvdSByZWFsbHkgc2hvdWxkbiBnbyBhcm91bmQgcmVtb3ZpbmcgY29tbWVudHMgb3IgYmFubmluZyB1c2VycyB5b3UgZG9uIGFncmVlIHdpdGguLiAKQSAyNSB5ZWFyIG9sZCBtYW4gZGllZCBvZiBoaXMgZ3Vuc2hvdCB3b3VuZHMgYW5kIGEgMjcgeWVhciBvbGQgbWFuIGFycml2ZWQgYXQgQ292ZW5hbnQgSGVhbHRoQ2FyZSBzZWVraW5nIHRyZWF0bWVudCBmb3IgaGlzIGd1bnNob3Qgd291bmRzLiAKSXQgd2FzIHVuZm9ydHVuYXRlIHRoYXQgc28gbWFueSBvZiB0aG9zZSBhdHRhY2tlcnMgd2lsbCBsaWtlbHkgZ2V0IGF3YXkgd2l0aCB0aGlzIGFuZCBpdCBpcyBzYWQgdGhhdCBzbyBtYW55IG9mIHRoZW0gYXJlIHNvIGluc2VjdXJlIGFuZCB3ZWFrIHRoYXQgdGhleSBhcmUgYWZyYWlkIHRvIGZpZ2h0IHNvbWVvbmUgb25lIG9uIG9uZS4gCldoZW4gdGhleSBnb3QgbWFycmllZCwgdGhlIHdpZmUgcGFyZW50cyBvdXRyaWdodCBwYWlkIGZvciBhIDUwMCwwMDAgY29uZG8gZm9yIHRoZW0gdG8gbGl2ZSBpbiBhcyBhIG1hcnJpYWdlIGdpZnQuLiAKWW91IHNob3VsZCBiZSBjb250aW51YWxseSBpbmZvcm1lZCBhYm91dCBuZXcgc3RyYXRlZ2llcyBhbmQgcHVyY2hhc2UgbWFya2V0aW5nIGFzIGl0IHdpbGwgcHJvYmFibHkgYmUgaW52ZXN0ZWQgYmFjayBtYW55IHRpbWVzLiBSZW1lbWJlciwgdGhlIG1vcmUgeW91IHRhbGsgd2l0aCB5b3VyIGVudGh1c2lhc3RzIHRoZSBncmVhdGVyIGFjdGl2aXR5IHlvdSdsbCBlbnRlciB5b3VyIHdlYiBwYWdlIHdoaWNoIG1lYW5zIHRoZSBtb3JlIGV4cG9zdXJlIHlvdSdsbCBnZXQuIFNpbmNlIHlvdSBhcmUgYWJsZSB0byBub3RpY2UgICBhbnl0aGluZyBpcyBwb3NzaWJsZS5UaGUgcGFydGljdWxhciBhbGwgaW4gdGhlIG9uZSBwYWNrYWdlIGF2YWlsYWJsZSBpcyBNeXNwYWNlLiAKRm91bmRlZCBhcyBhIHNob2Ugc3RvcmUgaW4gMTkwMSBieSBTd2VkaXNoIGltbWlncmFudCBKb2huIFcuIHN0b3JlcyBpbiAyNyBzdGF0ZXMuIE5vcmRzdHJvbSByZXBvcnRlZCBwcmVsaW1pbmFyeSBzYWxlcyBvZiAkNTE3IG1pbGxpb24gZm9yIHRoZSBmb3VyIHdlZWsgcGVyaW9kIGVuZGVkIEF1Zy4gMjYsIHVwIDkuMyBwZXJjZW50IGZyb20gdGhlIHNhbWUgZm91ciB3ZWVrIHBlcmlvZCBsYXN0IHllYXIuCkluIGEgc3RhdGVtZW50LCBXYWxtYXJ0IHNhaWQ6ICJXZSByZWNvZ25pemUgdGhhdCBvdXIgYXNzb2NpYXRlcyB3aXRoIHBoeXNpY2FsIGRpc2FiaWxpdGllcyBmYWNlIGEgdW5pcXVlIHNpdHVhdGlvbi4gV2l0aCB0aGF0IGluIG1pbmQgd2Ugd2lsbCBiZSBleHRlbmRpbmcgdGhlIGN1cnJlbnQgNjAgZGF5IGdyZWV0ZXIgdHJhbnNpdGlvbiBwZXJpb2QgZm9yIGFzc29jaWF0ZXMgd2l0aCBkaXNhYmlsaXRpZXMgd2hpbGUgd2UgZXhwbG9yZSB0aGUgY2lyY3Vtc3RhbmNlcyBhbmQgcG90ZW50aWFsIGFjY29tbW9kYXRpb25zLCBmb3IgZWFjaCBpbmRpdmlkdWFsLCB0aGF0IGNhbiBiZSBtYWRlIHdpdGhpbiBlYWNoIHN0b3JlLiBUaGlzIGFsbG93cyB0aGVzZSBhc3NvY2lhdGVzIHRvIGNvbnRpbnVlIHRoZWlyIGVtcGxveW1lbnQgYXQgdGhlIHN0b3JlIGFzIHZhbHVlZCBtZW1iZXJzIG9mIHRoZSB0ZWFtIHdoaWxlIHdlIHNlZWsgYW4gYWNjZXB0YWJsZSwgY3VzdG9taXplZCBzb2x1dGlvbi4iCkZpcnN0IHRpbWUgaW4gYSBsb25nIGxvbmcgbG9uZyB0aW1lIEkgbm90IGdvdHRlbiBvbmUgcG9zdGVkLiAKQnV0IHlvdSBoYXZlIHRvIHBpY2sgdXAgdGhlIHJpZ2h0IG9uZSB1cCB0aGF0IGNhbiBzZXJ2ZSBhbGwgeW91ciBwdXJwb3Nlcy4gWW91IHdpbGwgbmVlZCB0aGUgYmVzdCBwcm9kdWN0cyBhbW9uZyB0aGVtLiBUbyBjaG9vc2UgYSBnb29kIHByb2R1Y3QsIG5vdyB5b3Ugd2lsbCBuZWVkIHRoZSByZXZpZXdzIG9uY2UgYWdhaW4gYW5kIGxlYXJuIHNvbWUgaG9uZXN0IGZlZWRiYWNrcyBhYm91dCB0aGUgcG9rZXIgcHJvZHVjdHMgYXZhaWxhYmxlIGluIHRoZSBtYXJrZXRzLiAKSSdtIG5vdCBzdXJlIHdoYXQgdGhlIHN0YXRpc3RpY3MgYXJlIG91dCB0aGVyZSwgYnV0IHRoZSBtYWpvcml0eSBvZiBtdWx0aSBtaWxsaW9uYWlyZXMgYW5kIGJpbGxpb25haXJlcyBhbGwgaGF2ZSB2ZXJ5IGxhcmdlIHByb3BlcnR5IHBvcnRmb2xpb3MuIAovdS9IYW1kaWxhLCBJIHJlYWxseSBzb3JyeSBhYm91dCB3aGF0IHlvdSBiZWVuIGdvaW5nIHRocm91Z2gsIGFuZCBob3BlIHlvdSBhYmxlIHRvIG1vdmUgZm9yd2FyZCBhbmQgY29wZSB3aXRoIGl0IGluIGhlYWx0aHkgd2F5cy4gQnkgYWxsIG1lYW5zLCBkbyBzdGF5IGZpcm0gb24gYnJlYWtpbmcgdXAgd2l0aCB5b3VyIGplcmsvY293YXJkIGV4ICAgYnV0IHVzaW5nIHRoZSBwb2xpY2UgdG8gcHVuaXNoIGhpbSBpc24gYSBmYWlyIHJlc3BvbnNlLCBhbmQgaXNuIHNvbWV0aGluZyB3ZSB3YW50IHRoaXMgc3VicmVkZGl0IHRvIGZhY2lsaXRhdGUuIApUaGUgZHJhZ29uJ3MgcG9pbnQgb2YgdmlldyBzdGlsbCB0aGluayBpdCBhIGdyZWF0IGJ1c2luZXNzLiBUaGV5IGFyZW4gcHJvZml0YWJsZSB5ZXQsIGJ1dCB0aGF0IHR5cGljYWwgZm9yIHRoaXMgdHlwZSBvZiBzdGFydHVwLCBNci4gCk9mIGNvdXJzZSB0eXBlIHRoZW9yeSBpcyBpbXBvcnRhbnQuIApIb3dldmVyLCBpdHMgdGhlIGxhc3QgdGhpbmcgdGhhdCBzaG91bGQgYmUgaGFwcGVuaW5nIHRvIGhpcyBjaGFyYWN0ZXIgZnJvbSB0aGUgcGVyc3BlY3RpdmUgb2YgIm1ha2luZyB0aGUgQWxsaWFuY2UgZGl2ZXJzZSBhbmQgaW50ZXJlc3RpbmciIGJlY2F1c2UgaXQganVzdCBsZWFkcyBoaW0gZG93biB0aGUgcGF0aCBvZiBiZWluZyBwYXJ0IG9mIHRoZSBzYW1lIG1vbm9saXRoaWMgcGljdHVyZSBvZiBjaGl2YWxyeSBhcyB0aGUgcmVzdCBvZiB0aGUgQWxsaWFuY2UuIFdoZW4gR2VubiBpcyBhbiBhZ2dyZXNzaXZlLCBleGlsZWQgbGVhZGVyIG91dCBmb3IgdmVuZ2VhbmNlIGhlIHByb3ZpZGVzIHZhbHVhYmxlIGRpdmVyc2l0eSB0byB0aGUgQWxsaWFuY2UgY2FzdC4gCldoZW4gYWRkaW5nIHVwIG91dHMsIGJlIGNhcmVmdWwgbm90IHRvIG92ZXIgY291bnQuIFVuZGVyIHNvbWUgY2lyY3Vtc3RhbmNlcywgY2VydGFpbiBjYXJkcyBjYW4gY29udHJpYnV0ZSB0byAyIG9yIG1vcmUgaGFuZHMuIEZvciBleGFtcGxlLCBpdCBhZnRlciB0aGUgZmxvcCB5b3UgaGF2ZSBib3RoIGZsdXNoIGFuZCBzdHJhaWdodCBkcmF3cyAoc2F5LCB0aGUgMTAsIDksIDcgYW5kIDIgb2YgZGlhbW9uZHMsIGFuZCB0aGUgOCBvZiBjbHVicykgeW91IG1pZ2h0IGRlZHVjZSB0aGF0IHlvdSBoYXZlIDE3IG91dHMuIFRoZXJlIGFyZSA5IG91dHMgZm9yIGFueSBvZiB0aGUgcmVtYWluaW5nIGRpYW1vbmRzIGFuZCA4IG91dHMgZm9yIGFueSBqYWNrIG9yIDYsIHdoaWNoIHdvdWxkIGNvbXBsZXRlIHRoZSBzdHJhaWdodC4gSW4gcmVhbGl0eSwgdGhlcmUgYXJlIDE1IG91dHMgYmVjYXVzZSB0aGUgamFjayBhbmQgNiBvZiBkaWFtb25kcyB3b3VsZCBjb21wbGV0ZSBlaXRoZXIgaGFuZC4KTm93LCBob3cgbXVjaCBtb3JlIGxpa2VseSBpcyBwYXJ0IG9mIHRoZSBvbGQgd2l2ZXMgdGFsZSwgYnV0IHRoYXQgd2hlcmUgdGhhdCBjb21lcyBmcm9tLCBhdCBsZWFzdC4gOikuIApCdXQgc3R1cGlkIGFzIGFuIGV4Y3VzZSBkb2VzbiBob2xkIHVwIG92ZXIgdGltZS4gQmVjYXVzZSBpZiBzaGUgZ2F2ZSBoZXIgcGVybWlzc2lvbiBhZnRlciBGb3ggSGlsbHMsIHRoaW5raW5nIHRoYXQgc2hlIHdhcyBwcm90ZWN0aW5nIEJyZW5kYW4gYW5kIGhlciBmYW1pbHkgYnkgYWxsb3dpbmcgaGltIHRvIGNvbmZlc3MsIGFuZCBoZSBnZXRzIGxpZmUgaW4gcHJpc29uIGJlY2F1c2Ugb2YgaXQsIHdoeSBkbyB5b3Ugc3RheSBzaWxlbnQgYWJvdXQgaXQgZm9yIDE0IHllYXJzPyBFdmVuIGlmIGl0IHN0YXJ0ZWQgb3V0IGFzIHN0dXBpZGl0eSwgaXQgcHVyZSBldmlsIHRvIGxldCB5b3VyIHNvbiByb3QgaW4gcHJpc29uIHdpdGhvdXQgZG9pbmcgYW55dGhpbmcuIFdoeSBub3QgdGVsbCB0aGUgd29ybGQgd2hhdCBoYXBwZW5lZCBhdCBGb3ggSGlsbHM/IFRlbGwgdGhlbSBob3cgdGhleSBjb2VyY2VkIHlvdSwgYW4gYWR1bHQsIGJlY2F1c2UgdGhhdCBjb3VsZCBoYXZlIGhlbHBlZCB0aGUgZW4gYmFuYyBwYW5lbCBhcmd1bWVudCB0aGF0IHRoZWlyIGJlaGF2aW9yIHdhcyBub3Qgb25seSBjb2VyY2l2ZSB0byBhIDE2IHllYXIgb2xkIGtpZCwgYnV0IHRvIGEgZ3Jvd24gYWR1bHQgd29tYW4uCkluIGFkZGl0aW9uIHRvIHRoZSBmYWN0IHRoYXQgcmFjaW5nIGRvZ3MgYXJlIGluanVyZWQsIEdSRVkySyBvYmplY3RzIHRvIGhvdyBsb25nIHRoZXkncmUgY29uZmluZWQgKG1vcmUgdGhhbiAyMCBob3VycyBhIGRheSksIHRoZSBwb29yIHF1YWxpdHkgb2YgbWVhdCB0aGV5J3JlIGZlZCwgYW5kIHRoZSBmYWN0IHRoYXQgdGhlIG9ubHkgcmVhc29uIHRoZXkncmUgcmFjaW5nLCBmb3IgdGhlIG1vc3QgcGFydCwgYXJlIHRoYXQgc3RhdGUgbGF3cyB0aWUgZ2FtYmxpbmcgbGljZW5zZXMgdG8gdHJhY2tzLiBUaG91Z2ggdGhlaXIgcGh5c2lvbG9neSBpcyBpbmNvbXBhdGlibGUgd2l0aCBob3Qgb3IgY29sZCB3ZWF0aGVyLCB0aGUgZG9ncyBhcmUgbWFkZSB0byBydW4gZHVyaW5nIHRlbXBlcmF0dXJlIGV4dHJlbWVzLiBEb2dzIG5vIGxvbmdlciBmaXQgdG8gcmFjZSBhcmUgc3RpbGwgcHV0IGRvd24gYnkgdGhlIHRob3VzYW5kcyBldmVyeSB5ZWFyLCBkZXNwaXRlIGFkb3B0aW9uIHByb2dyYW1zLCBHUkVZMksgc2F5cy4KRWdncyBiZWNvbWUgdHJhbnNmZXJhYmxlLiAKUGxhY2V6IGwgYWluc2kgcXVlIHRvdXMgbGVzIGluZ3JkaWVudHMgZGFucyB1bmUgY2Fzc2Vyb2xlIGV0IHBvcnRleiBsZSB0b3V0ICBidWxsaXRpb24uIApXZSBqb2tlZCB0aGF0IHRoZXkgd2VyZSBhbGwgaW1wb3N0b3JzIG9mZiB0aGUgc3RyZWV0IHdobyBjYW1lIGluIHRvIHJhbmRvbWx5IHdhaXQgb24gdGFibGVzLiBUaGUgZm9vZCB3YXNuJ3QgZ29vZC4gQW5kIHdlIGdvdCBhIHBpZWNlIG9mIGNob2NvbGF0ZSBjYWtlIHRvIHNoYXJlIHRoYXQgd2FzIHByb2JhYmx5IHNpeCB5ZWFycyBvbGQuIApBIHBybyB0aXAgZm9yIGFsbCB3aG8gbWlnaHQgYmUgY29udmVydGVkIHRvIHRoZSBzd2luZ2luZyBsaWZlIHN0eWxlICh5ZXMsIHRoYXQgYSBwdW4pOiBTZXggaW4gYSBoYW1tb2NrIHdvcmtzIGEgbGl0dGxlIGRpZmZlcmVudC4gCkl0IHdhcyB0aGUga2luZCBvZiBkcmFpbiB3aXRoIGEgYmlnIGZsYXQgc3F1YXJlIG1ldGFsIGdyYXRlIG9uIHRvcCBhbmQgdGhlIGdhdG9yIHdhcyBwcm9iYWJseSB0aHJlZSBmZWV0IGRvd24gZnJvbSBzaWRld2FsayBsZXZlbC4gCkZlZGVyYWwgYW5kIHN0YXRlIHByb3NlY3V0b3JzLCBtZWFud2hpbGUsIGhhdmUgZ29uZSBhZnRlciB0aGUgam9obnMgd2hvIHBvc3QgWWVscCBzdHlsZSByZXZpZXdzIGFib3V0IHRoZWlyIG1hc3NhZ2UgcGFybG9yIGV4cGVyaWVuY2VzIG9uIG9ubGluZSBtZXNzYWdlIGJvYXJkcy4KVGhhbmsgeW91IGZvciBwb3N0aW5nLiAKVGhlIGZhY2UgdmFsdWUgaXMga25vd24gYXMgdGhlIGtpbmQuIAoyIHBvaW50cyAgc3VibWl0dGVkIDI0IGRheXMgYWdvSSBiZWVuIGZlZWxpbmcgcHJldHR5IGJhbmdlZCB1cCB0aGUgbGFzdCBmZXcgd2Vla3MgICBtb3N0bHkgc3Rlcm51bSBwYWluIGZyb20gcmVhbGx5IG9sZCBpbmp1cmllcyAoZ29pbmcgdG9vIGhhcmQgb24gd2VpZ2h0ZWQgZGlwcykgYW5kIHNjaWF0aWNhIGNyZWVwaW5nIGFyb3VuZCBhZ2Fpbi4gQW55d2F5LCBJIGRlY2lkZWQgdG8gcG93ZXIgdGhyb3VnaCBzb21lIGhlYXZpc2ggZnJvbnQgc3F1YXQgdHJpcGxlcyBiZWZvcmUgYmVuY2hpbmcgb24gU3VuZGF5LiAKVGhhbmtzIGZvciB0aGUgZ2VudGxlIHJlcGx5LiBSZSB5b3VyIHJlcGx5OiBUaGF0IGV2ZXJ5dGhpbmcgaW4gbGlmZS4gTm90aGluZyBpcyBmb3JldmVyLiBTb21lIGRvLCBzb21lIGRvbiBJIGZlZWwgdGhlIGhhcmRlciB5b3UgdHJ5IHRvIGJlIGluIHlvdXIgZmFtaWx5IHRoZSBiZXR0ZXIuIEFidXNlIGlzIHRoZSBub3JtLiBibG9vZCBmYW1pbHkgaXMgeW91ciBiZXN0IGNoYW5jZSB3aGVuIHlvdSBnZXQgaW4gdHJvdWJsZSBhcyBhIHRlZW4uIE5vIG9uZSB3YW50cyB0byBiZSBpbiBmb3N0ZXIgY2FyZS4KU3dlZGlzaCBNYXNzYWdlIEJhY2ssIE5lY2sgU2hvdWxkZXJzICAgMzAgbWludXRlcyAgMTguNTAgRnVsbCBCb2R5ICAgNjAgbWludXRlcyAgMzIuNTAKQW5kIGV2ZW4gdGhvdWdoIHlvdSdyZSBvYnZpb3VzbHkgcGxheWluZyBtb3JlIGZvciBmdW4gdGhhbiBtb25leSwgeW91IGNhbiBzdGlsbCB3aW4gaWYgeW91IHRha2UgYWR2YW50YWdlIG9mIHRoZSBkbyBvdmVyIHJ1bGUgYXBwcm9wcmlhdGVseS4uIAoiV2hlbiB3ZSBhcnJpdmVkIGF0IHRoZSBzY2VuZSwgaXQgd2FzIE1hcmNoIDE0LCAyMDA4LiAKVGhlIHJlZmVyZW5jZSB3YXMgbWVhbnQgdG8gc2hvdyB0aGF0IG1vc3Qgb2YgdGhlIHRydWx5IGdvb2QgdGhpbmdzIGluIGxpZmUgdGFrZSB0aW1lIGFuZCBjYW4ndCBiZSBmb3JjZWQgb3IgcnVzaGVkLgpJIGxvdmUgaG93IHRoaXMgbm92ZWwgYnJvdWdodCAxIENvcmludGhpYW5zIDEzOjQgMTMgdG8gbGlmZSB3aXRoIHR3byBiZWF1dGlmdWxseSBpbXBlcmZlY3QgcGVvcGxlLiBHcmFjZSdzIG5ld2VzdCBwYXNzaW9uIGJlY29tZXMgYW4gaW50ZXJlc3Rpbmcgc2Nob29sIHdpZGUgY2FtcGFpZ24sIHdoaWNoIHNldHMgb2ZmIGEgZmlyZXN0b3JtIHdoZW4gdGhlIGNvdW5zZWxvciBnZXRzIGludm9sdmVkLiAKV2hhdCBtYWtlcyBpdCBtb3JlIGRpZmZpY3VsdCBpcyB3aGVuIHNvbWVvbmUgZ29lcyBmcm9tIDAgdG8gMTAwIGxpa2UgeW91IGRpZCBlYXJsaWVyLCByZWFkaW5nIHdheSB0b28gbXVjaCBpbnRvIGEgbW9kIGFjdGlvbiBhbmQgYWNjdXNpbmcgdXMgb2YgZmV0aXNoaXppbmcgd29tZW4gYXMgdGhlIHJlYXNvbi4gV2UgaGVhcmQgaXQgYWxsLCB3ZSB0b28gcHJvIEtvcmVhLCB0b28gYW50aSBLb3JlYSwgZXRobmljIEtvcmVhbiBuYXRpb25hbGlzdHMsIHdoaXRlIHNleHBhdHMsIGV0Yywgc28gdGhvc2UgY29tbWVudHMgaGF2ZSBsb3N0IHRoZWlyIG1lYW5pbmcgYW5kIHRoZSB0cnV0aCBpcyB0aGUgYWNjdXNhdGlvbiBhYm91dCB1cyB1c3VhbGx5IHNheXMgbW9yZSBhYm91dCB0aGUgcHJlY29uY2VwdGlvbnMgb2YgdGhlIHBlcnNvbiBtYWtpbmcgdGhlIGNvbXBsYWludCB0aGFuIGFueSBvZiB1cyBvbiB0aGUgbW9kIHRlYW0uIEkgZG9uIGtub3cgdGhlIG90aGVyIG1vZHMgdGhhdCBjbG9zZWx5LCBidXQgSSB3b3VsZG4gY2F0ZWdvcml6ZSBhbnkgb2YgdGhlbSBhcyBhbnRpIEtvcmVhbiBhbmQgdGhlcmUgYSB2YXJpZXR5IG9mIG5hdGlvbmFsaXRpZXMgYW5kIGV0aG5pY2l0aWVzIG9uIHRoZSBtb2QgdGVhbSwgaW5jbHVkaW5nIEtvcmVhbiBmb3IgYm90aC4uIApNeSBhZHZpY2UgaXMgZG8gbm90IGV2ZXIgZmVlbCBjb21wZWxsZWQgdG8gYWdyZWUgdG8gYSBjaG9wIHRvIHdoaWNoIHlvdSBkbyBub3Qgd2FudCB0byBhZ3JlZS4gUGVvcGxlIHdpbGwgdHJ5IHRvIHByZXNzdXJlIHlvdSwgYnV0IGl0IGlzIHlvdXIgZGVjaXNpb24uCkZvciBleGFtcGxlLCBhc2sgdGhlIGNoaWxkcmVuIHRvIGhlbHAgeW91IGZpZ3VyZSBvdXQgdGhlIGZvbGxvd2luZyBwcm9ibGVtOiAiNSB0dXJ0bGVzIGNyYXdsZWQgb250byBhIGdpYW50IHJvY2ssIGJ1dCB0aGVuIDEgZ290IHRvbyBob3QsIHNvIGhlIGRlY2lkZWQgdG8gZ28gZm9yIGEgc3dpbS4gClRoZXkgZG8gaGF2ZSB2YWx1ZSEuIApObyBvdGhlciBwb2ludCBpbiB0aGUgcGVyaW9kIHRoYXQgd2UgbG9vayBhdCBzaW5jZSAxOTYxIHdoZXJlIHlvdSBzZWUgZGVjbGluaW5nIEdEUCBhbmQgcG9zaXRpdmUgZW1wbG95bWVudCwgS3JvbmljayBzYWlkLgpUaGUgZGVhbCBpcyBzdGlsbCBpbiBkdWUgZGlsaWdlbmNlIGFuZCB0aGUgUmVkZWxtZWllcnMgYW5kIE1yLiAKSG93IHNvb24gYXJlIHlvdSBnb2luZyB0byBoYXZlIGtpZHM/IEkgZG9uIHdhbnQgdG8gZGllIHdpdGhvdXQgaGF2aW5nIG1ldCBteSBncmFuZGtpZHMgeW91IGtub3cuIApDcnVpc2Ugc2hpcCBjYXNpbm9zIGluIG1hbnkgY2FzZXMgYXJlIHN0dWZmZWQgd2l0aCByb3VsZXR0ZSB0YWJsZXMsIGJsYWNramFjayB0YWJsZXMsIHBva2VyIHRhYmxlcywgYW5kIHNsb3QgZGV2aWNlcy4gWW91IGNvdWxkIHBvc3NpYmx5IHVuY292ZXIgbWFueSB0aGVzZSBnYW1pbmcgYWN0aXZpdGllcyBmYXNjaW5hdGluZy4gCkxvdmVHYW1lIHdhcyBpbml0aWFsbHkgcGxhbm5lZCB0byBiZSB0aGUgM3JkIHNpbmdsZSBmcm9tIHRoZSBhbGJ1bSBidXQgZHVlIHRvIEF1c3RyYWxpYSBiYW5uaW5nIHRoZSBjb250cm92ZXJzaWFsIHZpZGVvIGFuZCBseXJpY3MsIEdhR2EgZGVjaWRlZCB0byBjaGFuZ2UgdGhlIElyaXNoIHNpbmdsZSByZWxlYXNlIHRvIFBhcGFyYXp6aSAuSG93IG1hbnkgbnVtYmVyIDEgc2luZ2xlcyBoYXMgTGFkeSBHYWdhIGdvdD9MYWR5IEdhZ2EgaGFzIGN1cnJlbnRseSBoYWQgMyBIb3QgMTAwIG51bWJlciAxcyBidXQgaGFzIGFjdHVhbGx5IGhhZCA4IGluY2x1ZGluZyBoZXIgY3VycmVudCBudW1iZXIgMSB3aGljaCBzdGF5ZWQgYXQgbnVtYmVyIDEgb24gdGhlIGhvdCAxMDAgZm9yIDYgd2Vla3MuIApJdCBjcmluZ2V3b3J0aHkgdG8gdGhpbmsgdGhhdCB0aGVzZSBsaXRlcmFsbHkgb2JqZWN0aXZlbHkgbm90IHNvIGJyaWdodCBwZW9wbGUgYXJlIHJlY2VpdmluZyBzZWN1cml0eSBjbGVhcmFuY2VzIGp1c3QgY2F1c2UgYW4gaW5zdGFsbGVkIGFnZW50IG9mIHJ1c3NpYSBkZW1hbmRzIGl0IGZvciBoaXMga2lkcy4gU29tZXRoaW5nIHRoYXQgd291bGQgbm9ybWFsbHkgdGFrZSBhIGhpZ2ggZGVncmVlIG9mIGFjdHVhbCBzbWFydHMsIGV4dHJlbWUgYW1vdW50cyBvZiB2ZXR0aW5nLiAKUmVmcmFtZSBJdCBtYXkgdGFrZSB0aW1lIGFuZCBlZmZvcnQgYnV0IG5lYXJseSBldmVyeSBzaXR1YXRpb24gY2FuIGJlIHJlZnJhbWVkIGludG8gc29tZXRoaW5nIHBvc2l0aXZlLiAKVGhlIHBlbmFsdHkgaXMgaGFyc2hlciBpZiB0aGUgdmljdGltIGlzIHVuZGVyIDE2IHdpdGggYSBtYXhpbXVtIG9mIDE0IHllYXJzIGluIHByaXNvbiBhbmQgYSBtaW5pbXVtIG9mIG9uZSB5ZWFyLgpDeXByZXNzIG9pbDIuIFRoZXJlIGFyZSB0d28gdHJlYXRtZW50cyB0aGF0IHlvdSBjYW4gY3JlYXRlIHVzaW5nIHRoZXNlIGl0ZW1zLiBUaGUgZmlyc3Qgb25lIGlzIGZvciB0aG9zZSB1bnNpZ2h0bHkgc3BpZGVyIHZlaW5zLiBJbiBhIHNtYWxsIGNvbnRhaW5lciBvciBib3R0bGUsIG1peCBlaWdodCBkcm9wcyBvZiBjeXByZXNzIG9pbCwgdGVuIGRyb3BzIG9mIHBhbG1hcm9zYSBvaWwsIHNldmVuIGRyb3BzIG9mIGNoYW1vbWlsZSBhbmQgYW4gb3VuY2Ugb2YgdmVnZXRhYmxlIG9pbC4gR2VudGx5IG1peCBldmVyeXRoaW5nIHRvZ2V0aGVyLiBBcHBseSB0aGlzIHR3aWNlIGEgZGF5IGZvciBiZXR0ZXIgcmVzdWx0cy4gTWFrZSBzdXJlIHlvdSBzdG9yZSBpdCBpbiBhbiBhaXIgdGlnaHQgYm90dGxlIG9yIGNvbnRhaW5lci4gSXQgaXMgdmVyeSBpbXBvcnRhbnQgdGhhdCB5b3UgZG8gdGhpcyBwcm9jZWR1cmUgaW4gYSBjb29sIGFuZCBzaGFkZWQgcm9vbS4gQXZvaWQgZXhwb3NpbmcgdGhlIG1peHR1cmUgaW4gZGlyZWN0IHN1bmxpZ2h0LgpBbmQgdGhlbiBJIHRvb2sgZm91ciBtb250aHMgb3V0LCBJIHdlbnQgaG9tZSBmb3IgZm91ciBtb250aHMsIGh1bmcgb3V0IHdpdGggbXkgZnJpZW5kcyBpbiBJYml6YSBbU3BhaW5dLiAKUG9rZXIgR3JlYXQgUGhpbCBJdmV5IE9yZGVyZWQgVG8gUmV0dXJuCkkgd2VudCB0byBjaGFuZ2UgYW5kIGFub3RoZXIgY2xpZW50IGFza2VkIG1lIGlmIHRoZSBnaXJsIHdhcyBiZWF1dGlmdWwsIGhvdyB3YXMgaXQsIGFuZCBpZiBJIHdvdWxkIHBheSBmb3IgaGltLiBXaGVuIEkgd2FzIHRoZXJlIGluIFZOIEkgd2FzIHJpZGluZyBhY3Jvc3MgdGhlIGNvdW50cnkgYW5kIHNvbWUgamVyayBpbiBhIHRydWNrIGhpdCBtZSBhIGtub2NrZWQgbWUgb2ZmIG15IGJpa2UuIEkgd2FzIHByZXR0eSBiZWF0IHVwIGJ1dCBvdGhlcndpc2UgT0sgYnV0IEkgc3RvcHBlZCBpbiB0aGUgbmV4dCB0aW55IHRvd24gSSBnb3QgdG8gYmVjYXVzZSBJIGp1c3Qgd2FudGVkIGEgc2hvd2VyIGFuZCB0byBsYXkgZG93bi4gSSBwdWxsZWQgdXAgdG8gd2hhdCBsb29rZWQgbGlrZSB0aGUgb25seSBob3RlbCBpbiB0b3duLCBpdCB3YXMgbmljZSB3aXRoIG1hcmJsZSBhbmQgc3Rvb2QgbW9yZSB0aGFuIDEwIHN0b3JpZXMgdGFsbCBzbyBJIGZpZ3VyZWQgaXQgd291bGQgYmUgYSBwcm9wZXIgcGxhY2UuClNpbmNlIHBva2VyIGlzIGFsbCBhYm91dCBtb25leSwgcGVvcGxlIGFyZSBhbHdheXMgZ29pbmcgdG8gZmluZCBhIHdheSB0byBjaGVhdC4gSXQncyB1bmF2b2lkYWJsZS4gCklmIHlvdSBkaWRuIGtub3csIHdlIHdlcmUgZnVja2VkIGV2ZW4gYmV5b25kIHRoZSBmb3JtZXIgT3R0b21hbiBsYW5kcyB0aGF0IHdlcmUgbG9zdCB0byBCcml0cyBhbmQgRnJlbmNoLiBJZiB3ZSBoYWQgbG9zdCBHYWxpcG9sbGksIEF0YXR1cmsgbWF5IG5ldmVyIGhhdmUgcmlzZW4gdG8gcG93ZXIgYW5kIGxlYWQgdXMgdG8gdmljdG9yeSBkdXJpbmcgb3VyIFdhciBvZiBJbmRlcGVuZGVuY2UuIEkgbWlnaHQgYmUgYSB0YWQgYmlhc2VkIGJ1dCBJIHRoaW5rIGl0IGEgdmVyeSBpbnRlcmVzdGluZyBwaWVjZSBvZiBoaXN0b3J5IHRoYXQgbW9zdCBwZW9wbGUgZG9uIGtub3cgYWJvdXQuCk5vdyBJIGRpZG4gc3RydWdnbGUgb24gdGhpcyBteXNlbGYsIGJ1dCBJIGtub3cgbWFueSBkaWQuIFRoaXMgZG9lcyBub3QgbmVlZCB0byBiZSBpbiBhIHJvdy4gU28gZ28gdG8gZWFjaCBvbmUgb2YgdGhlc2UgbG9jYXRpb25zIGFuZCBiZWF0IHRoZSBmaXJzdCBvcHBvbmV0LiBTdHJhd2JlcnJ5LCBWYWxlbnRpbmUsIFZhbiBIb3JuIFRyYWRpbmcgUG9zdC4gKElmIHRoZSBvcHBvbmVudCBpcyBub3QgdGhlaXIgZm9yIHlvdSBpbiBWYWxlbnRpbmUsIFNsZWVwIHRvIG1ha2UgdGhlIGluIGdhbWUgbmlnaHQgdGhlbiBnZXQgbmVhciB0aGUgbG9jYXRpb24gYW5kIHJlc3RhcnQgeW91ciBnYW1lKS4gSWYgeW91IHdvdWxkIGxpa2UgdG8gY29tcGxldGUgYWxsIDQgb2YgdGhlIGNoYWxsZW5nZXJzLCBJIHN1Z2dlc3Qgd3JpZ2h0aW5nIHRoZSBoYXJkZXIgYnV0dG9uIGNvbWJvcyBvbiBhIG5vdGVwYWQsIGFuZCBkb24gZXZlbiBsb29rIGF0IHRoZSBzY3JlZW4uClRoZSB0aHJlZSBoaWdoIHNjaG9vbCBkZWxpbnF1ZW50cyBmaW5kIHRoZW1zZWx2ZXMgZ2V0dGluZyBpbnRvIHRyb3VibGUgYW5kIGZpZ2h0cyBidXQgdGhlIHN0cm9uZyBmcmllbmRzaGlwIGJldHdlZW4gdGhlIHRyaW8gaGVscHMgdGhlbSB0byBvdmVyY29tZSB0aGVzZSBvYnN0YWNsZXMuTWVhbndoaWxlIEFyaW11cmEgS2FzdW1pIHdvdWxkIGJlIHRha2luZyB0aGUgcm9sZSBhcyBIYXlhdG8ncyBjbGFzc21hdGUsIEFraXlhbWEgWXVpLlRoZSBtYW5nYSBpcyBjdXJyZW50bHkgc2VyaWFsaXNlZCBpbiBXZWVrbHkgU2hvbmVuIENoYW1waW9uIHNpbmNlIDIwMDcgYW5kIGhhcyBzbyBmYXIgc29sZCBtb3JlIHRoYW4gNC41IG1pbGxpb24gY29waWVzLiAKSG93ZXZlciB3aXRoIHRoZSBjaGFuY2Ugb2Ygd2lubmluZyBiaWcgaXMgdGhlIGNoYW5jZSBvZiBsb3NpbmcgYmlnIGFzIHdlbGwgc28geW91IGhhdmUgdG8gcmVhbGx5IHByYWN0aWNlIGFuZCByZXNlYXJjaCBvbiB3aGF0IHRoZSBnYW1lIGlzIGFsbCBhYm91dC4uIApUaGUgcm91bmRhYm91dCBwb2ludCBJIHRyeWluZyB0byBnZXQgYXQgaXMgdGhhdCBpdCBub3QganVzdCBwcmludCBwb2ludGluZyB0aGUgZmluZ2VyIGF0IHRoZSByZWQgZGV2aWwuIFRoZXJlIHdlcmUgZGV2aWxzIHdobyBoaWQgaW4gdGhlIHJlZCwgYW5kIHRoZXkgcnVpbmVkIHRoZSBjb2xvdXIgd2hpbGUgd2Ugd2VyZSBzdGlsbCBob2xkaW5nIHBhaW50IHNhbXBsZXMgdG8gdGhlIHdhbGwuIEVkdWNhdGlvbiBpcyBhbHdheXMga2V5LiBBbmQgZm9yIGEgZnVydGhlciBmcm9tIGNlbnRyZSBpZGVvbG9neSB0byBzdWNjZWVkIHdlIGFsbCBoYXZlIHRvIGRpc2Fzc29jaWF0ZSBpdCBmcm9tIHRoZSBwZW9wbGUgZmFyIGF3YXkgd2hvIHVzZWQgaXQgdG8gdGhlaXIgb3duIHZpb2xlbnQgZW5kcywgYXMgd2VsbCBhcyB0aG9zZSBjbG9zZXIgdG8gaG9tZSB3aG8gdXNlZCBpdCB0byBmdXJ0aGVyIHRoZWlycy5DbG9zZSBmcmllbmRzIG9mIEFkYW1zLCB0aGUgZXZlciBlbnRlcnRhaW5pbmcgU3RlcGhlbiBGcnkgYW5kIGEgem9vbG9naXN0IG5hbWVkIE1hcmsgQ2Fyd2FyZGluZSAod2hvIGFjdHVhbGx5IHRyYXZlbGVkIHdpdGggQWRhbXMgd2hpbGUgaGUgd2FzIHJlc2VhcmNoaW5nIHRoZSBib29rKSBob3N0ZWQgYSBCQkMgcHJvZ3JhbSBuYW1lZCBhZnRlciB0aGUgYm9vayBpdHNlbGYuIApUaGUgd2F5IEkgc2VlIGl0LCB3ZSBhbHJlYWR5IGhhdmUgdGhlIGxhcmdlIG1ham9yaXR5IG9mIHRoZSB3YXN0ZSwgaXQgc3RvcmVkIHRlbXBvcmFyaWx5IGJ1dCB3ZSBkb24gaGF2ZSBhIGxvbmcgdGVybSBzb2xvdXRpb24uIApJbiB0aGUgY2FzZSBvZiBXYWxtYXJ0LCB0aGV5IG5lZWQgdG8gcHVyY2hhc2UgZG9nIGZvb2QgZnJvbSBzb21lIG5hbWUgYnJhbmQgcGV0IGZvb2QgcHJvZHVjZXIuIFdhbG1hcnQgc2VlcyB0aGF0IGRvZyBmb29kIGlzIHNlbGxpbmcgbGlrZSBob3RjYWtlcyBhbmQgaW50cm9kdWNlcyBhIHN0b3JlIGJyYW5kLiBFdmVuIHdpdGggaW50cm9kdWNpbmcgYSBzdG9yZSBicmFuZCwgdGhlIHBldCBmb29kIHByb2R1Y2VyIHdhcyBwYWlkIGZvciB0aGUgQnJhbmQgbmFtZSBmb29kIHRoYXQgV2FsbWFydCBtdXN0IHB1dCBvbiB0aGVpciBzaGVsZi4gV2FsbWFydCBjYW4gbWFrZSBtYXJnaW4gZGVjaXNpb25zIGFsbCBkYXkgbG9uZyBhbmQgbm90IGFmZmVjdCB0aGUgcGV0IGZvb2QgcHJvZHVjZXIgc2luY2UgdGhleSBhbHJlYWR5IHdlcmUgcGFpZC4KR2VuZXJhbGx5LCB0aGVyZSBhcmUgdGF4IGFkdmFudGFnZXMgdG8gcmVudGluZyBwYXJ0IG9mIHlvdXIgcHJvcGVydHkgYXMgbG9uZyBhcyB0aGF0IHNlY3Rpb24gaXMgdXNlZCBzb2xlbHkgb3IgbWFpbmx5IGFzIHJlbnRhbCBwcm9wZXJ0eS4gClRoaXMgdHlwZSBvZiBzdHJpbmcgY2hlZXNlIGdldHMgaXRzIG5hbWUgYmVjYXVzZSBpdCBjYW4gYmUgZWF0ZW4gYnkgcHVsbGluZyBzdHJpcHMgb2YgY2hlZXNlIGZyb20gdGhlIGN5bGluZGVyIGFsb25nIGl0cyBsZW5ndGggYW5kIGVhdGluZyB0aGVzZSBzdHJpbmdzLlsyMV0gSXQgd2FzIGludmVudGVkIGluIDE5NzYgYnkgRnJhbmsgQmFrZXIgYW5kIEplYiBDdWJicy5bMjJdLiAKVHJvcGVzIGFuZCBzdGVyZW90eXBlcyBleGlzdCBmb3IgYSByZWFzb24sIHlvdSBzZWUgdGhlbSBpbiBkYWlseSBsaWZlLlByb2JsZW0gaXMgaSBoYXZlIGEgaHVnZSBwcm9ibGVtIGZpbmlzaGluZyBzdG9yaWVzLiBHb3QgbGlrZSA0IHN0b3JpZXMgYXQgNjBrIHRvIDgwayB3b3JkcyBhbmQganVzdCBzaXR0aW5nIHRoZXJlLk15IHdpZmUgaGF0ZXMgRnJpZGF5IG1vcm5pbmdzIGFzIGkgc2NyaWJlIGF3YXkgYXQgdGhpcyB3ZWVrcyBuZXcgd29ybGQgICBwaWxlcyBvZiBub3RlYm9va3MgZnVsbCBvZiB0aGVtLiBBbHRob3VnaCBzaGUgYWRkcyB0aGluZ3Mgb24gdGhlIGNvbW11dGUuIApNZSBUb28gZm91bmRlciBUYXJhbmEgQnVya2UgZGlzY3Vzc2VzIHRoZSBuZXh0IHBoYXNlClRoaXMgaXMgYWxsIGEgbG90IHRvIHRha2UgaW4sIGFuZCBubyBtYXR0ZXIgd2hhdCwgSmFja3NvbiB3aWxsIG5ldmVyIGJlIHByb3ZlbiBndWlsdHkgYmVjYXVzZSBoZSBkZWFkLgpJIGRvbiBrbm93IGlmIEkgd291bGQgc2F5IGVtb3Rpb25hbCB0cmF1bWEgaXMgc3RvcmVkIGluIG11c2NsZXMgYnV0IHRoaW5rIGFib3V0IGhvdyBwZW9wbGUgY2FycnkgdGhlbXNlbHZlcy4gCk9uZSBvZiB0aGUgaXRlbXMgd2FzIGEgYmVkIGZvciBteSB0aGVuIDIgeXIgb2xkIGRhdWdodGVyLiBBIHNpbXBsZSB0d2luIHNpemVkIGJlZC4gCkkgcmVtZW1iZXIgdGhlIGxpdmVseSB0YWJsZXMgb2YgdGhlIDIwMDAgYW5kIG1pc3MgdGhlbS4gCk51cm1hZ29tZWRvdiBjbGltYmVkIG92ZXIgdGhlIGNhZ2UgYW5kIHNjdWZmbGVkIHdpdGggYSBmaWdodGVyIGluIE1jR3JlZ29yJ3MgY29ybmVyIGFmdGVyIE1jR3JlZ29yICgyMSA0KSB0YXBwZWQgb3V0IGR1cmluZyBhIGNob2tlaG9sZCBieSBOdXJtYWdvbWVkb3YgKDI3IDApIGluIHRoZSBmb3VydGggcm91bmQgb2YgVUZDIDIyOS4gVmlkZW8gc2hvd2VkIE1jR3JlZ29yIGJvdGggdHJ5aW5nIHRvIGNsaW1iIHRoZSBjYWdlIHRvIGFwcGFyZW50bHkgam9pbiBmaWdodGluZyBvdXRzaWRlIGFuZCBhdHRlbXB0aW5nIHRvIHN0cmlrZSBhbm90aGVyIHBlcnNvbiBkb2luZyB0aGUgc2FtZS4KSGUgdGhlbiB3ZW50IG9uIHRvIGRyb3AgYSBidW5jaCBvZiAiZmNrcyIgd2hpbGUgZ2l2aW5nIGEgY3J1ZGUsIGluYWNjdXJhdGUgYW5kIHVuZWR1Y2F0ZWQgZGVwaWN0aW9uIG9mIGdheSBzZXggdGhhdCBpbnZvbHZlZCB0aGUgc3VnZ2VzdGlvbiBvbmUgbWlnaHQgbmVlZCB0byBoYXZlIGEgInRlZXRoaW5nIHJpbmcgc293ZWQgdG8geW91ciBwaWxsb3ciLgpCeSBzdHJldGNoaW5nIG11c2NsZXMgYW5kIGxvb3NlbmluZyB0aXNzdWVzLCBtYXNzYWdlIGNhbiByZWxpZXZlIHRpZ2h0bmVzcyBhbmQgZ2V0IHJpZCBvZiBzcGFzbXMuIApJIGFjdHVhbGx5IG1ldCBvbmUgZ3V5IHdobyBsZWdpdGltYXRlbHkgcmVtaW5kcyBtZSBvZiBteSBicm90aGVyLCBhbmQgZXZlbiB0aG91Z2ggdGhleSBib3RoIGdvb2QgbG9va2luZywgaXQgd291bGQgYmUgc28gdW5jb21mb3J0YWJsZSBmb3IgbWUgdG8gZGF0ZSB0aGF0IGd1eS4gCkkgaG9uZXN0bHkgY2FuIG5vdCB0ZWxsIGlmIHlvdSBhcmUgdHJvbGxpbmcsIGJ1dCBpZiB5b3UgYXJlLCB0aGVuIGEgaGVhcnR5IGNvbmdyYXR1bGF0aW9ucy4gClRoZSBkZXNpZ24gcmVmbGVjdHMgdGhlIGN1bHR1cmFsIHJpY2huZXNzIGFuZCBmb2xrbG9yZSBvZiB0aGlzIGNoYXJtaW5nIHNlYXNpZGUgY29tbXVuaXR5LCBpbmNsdWRpbmcgdGhlIG9sZCBWZXJhY3J1eiBsaWdodGhvdXNlLCB3aGljaCBvbmNlIHdlbGNvbWVkIHRyYXZlbGluZyBzaGlwcyBpbnRvIHBvcnQgYW5kIG5vdyB3ZWxjb21lcyB0cmF2ZWxlcnMgb2YgYSBkaWZmZXJlbnQga2luZCBpbnRvIHRoZSBob3RlbC4uIApJbiB3aGljaCByb3NlIHRpbnRlZCB3b3JsZCBhcmUgeW91IGxpdmluZz8uIApUaGUgbGF0ZXN0IHZlcnNpb24gb2YgTWFnaWMgQWN0aW9uIEJveCAoTUFCKSBQcm8gaXMgbm93IGF2YWlsYWJsZSBmb3IgZG93bmxvYWQgaW4gdGhlIG1lbWJlcnMgYXJlYS4gCklmIHlvdSBydW4gb3V0IG9mIGNoaXBzIHlvdSBidXkgbW9yZSB3aXRoIHJlYWwgbW9uZXk6IHZlcnkgbXVjaCBsaWtlIENsYXNoIG9mIENsYW5zJyBtaWNyb3RyYW5zYWN0aW9ucy4gCkkgc29ycnkgc2hlIGFuZCB0aGUgcmVzdCBvZiB5b3VyIGZhbWlseSBhcmUgZ29pbmcgdGhyb3VnaCB0aGlzLCBidXQgeW91IGFyZSBhIHdvbmRlcmZ1bCBncmFuZHNvbiBmb3IgZmFjaW5nIGl0IGhlYWQgb24uLiAKSWYgeW91IGVuZGVkIHVwIGxvc2luZywgSSB3b3VsZG4gd29ycnkgdG9vIG11Y2ggYWJvdXQgdGhpcyBvbmUuIFlvdXIgcmVhc29uaW5nIGZvciB5b3VyIGRlY2lzaW9ucyBpcyBwcmV0dHkgZ29vZC4gKEV4Y2VwdCBmb3IgdGhlIHRhbGthdGl2ZSA9IGFnZ3Jlc3NpdmUgcmVhZCwgd2hpY2ggaXMgb2Z0ZW4gbWlzbGVhZGluZyBpZiB5b3UgaGF2ZW4gc2VlbiB0aGVpciBwbGF5IGJhY2sgaXQgdXApLiAKSWYgeW91IGtub3cgb3IgYmVsaWV2ZSB0aGF0IHlvdSd2ZSBhbHJlYWR5IHN1ZmZlcmVkIHNvbWUgc2VyaW91cyBpbnRlc3RpbmFsIGRhbWFnZSwgeW91IG1pZ2h0IGRvIHdlbGwgdG8gc3RlZXIgY2xlYXIgb2YgYXMgbWFueSBoaWdoIGFuZCBtb2RlcmF0ZSBsZWN0aW4gbGV2ZWwgZm9vZHMgYXMgcG9zc2libGUuIFRoYXQgbWVhbnMgcGVyaGFwcyBmb3Jnb2luZyBuaWdodHNoYWRlcywgZGFpcnksIGxlZ3VtZXMgYW5kIGV2ZW4gbnV0cyBhbmQgZWdncyBpbiBhZGRpdGlvbiB0byBhbGwgZ3JhaW5zIGFuZCBwcm9jZXNzZWQgZm9vZHMuIApXZSB3ZXJlIHN0YW5kaW5nIHRoZXJlIGl0IHdhcyB2ZXJ5IGV4Y2l0aW5nIHRvIGhhdmUgYWxsIHRob3NlIG9mZmVycyBjb21pbmcgaW4sIGJ1dCB3ZSBqdXN0IGtuZXcgdGhhdCBKaW0gd2FzIG1vcmUgdGhlIGRpcmVjdGlvbiB3ZSB3YW50ZWQgdG8gdGFrZSBpdCwgTXMuIE1hY0tlbnppZSBzYXlzLiBjb3VsZCBzZWUgd2hhdCB0aGUgbW9kZWwgd2FzIGFuZCBoZSBzZWVtZWQgdG8gcmVhbGx5IGdldCBpdC4gQnV0IGFzIGlzIG9mdGVuIHRoZSBjYXNlLCB0aGluZ3MgY2FuIGNoYW5nZSBhZnRlciB0YXBpbmcuIGEgZGlyZWN0IHJlc3VsdCBvZiBvdXIgZXhwZXJpZW5jZSBvbiB0aGUgRGVuLCB3ZSB3ZXJlIGFibGUgdG8gc3RydWN0dXJlIGFuIGV2ZW4gc3Ryb25nZXIgZGVhbCB3aXRoIGFuIG91dHNpZGUgaW52ZXN0b3IgYnV0IHdlIGFyZSBub3QgcnVsaW5nIG91dCBhbnkgZnV0dXJlIGRlYWwgd2l0aCBkcmFnb25zLCBNcy4gTWFjS2VuemllIHNheXMuIEF0IHRoZSB0aW1lIG9mIHdyaXRpbmcsIE1yLiBUcmVsaXZpbmcgd2FzIHVuYXZhaWxhYmxlIGZvciBjb21tZW50LgpJIHJlYWxseSB0aGluayB0aGF0IHRoZSByYW5nZSB3aGVyZSB5b3UgZ2V0IHRoZSBtb3N0IGZvciB5b3VyIG1vbmV5LiBHbyBtdWNoIGxvd2VyIGFuZCB5b3UgbWF5IGdldCBzdWJzdGFuZGFyZCBoYXJkd2FyZSBhbmQgcGlja3VwcyBhbmQgbWF5YmUgbWVkaW9jcmUgd29ya21hbnNoaXAuIApUaGUgRGlmZmVyZW5jZSBhIEdvb2QgUG9rZXIgQm9udXMgQ2FuIE1ha2UKUm91bmRzIGluY2x1ZGUgbWVkIHN0dWRlbnRzLCBpbnRlcm5zLCByZXNpZGVudHMsIGEgZmVsbG93IGFuZC9vciB0aGUgYXR0ZW5kaW5nLCB0aGUgcGhhcm1hY2lzdCwgc29tZXRpbWVzIGEgY2xpbmljYWwgZG9jdW1lbnRhdGlvbiBzcGVjaWFsaXN0IGFuZCB0aGUgbnVyc2UuIEZhbWlseSBpcyBhbGxvd2VkIHRvIGxpc3RlbiAod2UgYXJlIG9wZW4gMjRocnMvZGF5LCBubyB2aXNpdGluZyBob3VyIGxpbWl0cykgYnV0IGV4dGVuZGVkIHVwZGF0ZXMgYXJlIGZvciBsYXRlciBpbiB0aGUgZGF5LiBJIHB1bGxlZCBteSBtb3JuaW5nIG1lZHMsIGFzc2Vzc2VkIG15IHBhdGllbnQgYW5kIGhvcGVmdWxseSBoYXZlIHN0YXJ0ZWQgY2hhcnRpbmcgYnkgNzozMGFtIHNvIEkgY2FuIHNjYW4vZ2l2ZSBtZWRzIGJ5IDggYW5kIGdldCBzdGFydGVkIHdpdGggZXZlcnl0aGluZyBJIG5lZWQgdG8gZG8uIApQZW9wbGUgaGFkIHRvIHNhY3JpZmljZSBmb3IgYWxsIGtpbmRzIGZvciByZWFzb25zIHRoYXQgd2UgZG9uJ3QgY29uc2lkZXIgbW9yYWxseSBjb21wcm9taXNpbmcsIGxpa2UgaGF2aW5nIHRvIHNhY3JpZmljZSBmb3IgYmVpbmcgaW4gY29udGFjdCB3aXRoIHBlcmlvZCBibG9vZC4uIApIZSBvdXRsaW5lcyB3aHkgTWFyeCBiZWxpZWYgdGhhdCBjYXBpdGFsaXNtIHdvdWxkIGxlYWQgdG8gcmV2b2x1dGlvbiAgIGFuZCBlbmQgYm91cmdlb2lzIGxpZmUgICBoYXMgY29tZSB0cnVlLiBCdXQgbm90IGluIHRoZSB3YXkgTWFyeCBpbWFnaW5lZC4gRm9yIGluY3JlYXNpbmcgbnVtYmVycyBvZiBwZW9wbGUsIGhlIHNheXMsIGEgbWlkZGxlIGNsYXNzIGV4aXN0ZW5jZSBpcyBubyBsb25nZXIgZXZlbiBhbiBhc3BpcmF0aW9uLiAKWnVkZW0gd2lyZCBEZWluIEhlcnogZ2VzdHJrdCAuIEt1cnplIEVudHNwYW5udW5nc3BhdXNlbiB6d2lzY2hlbmR1cmNoIG1hY2hlbiBkaWVzZSBNZWRpYXRpb24gZ2FueiBiZXNvbmRlcnMuIFNpZSBpc3QgZWluIEdlc2NoZW5rIGFuIGRpY2ggc2VsYnN0IS4gClBvenVlbG8gam9pbnMgdmV0ZXJhbiBkZWZlbmRlcnMgRHJldyBNb29yIGFuZCBMYXVyZW50IENpbWFuIGFzIGZvcm1lciBjYXB0YWlucyBvbiB0aGUgVG9yb250byByb3N0ZXIgdW5kZXIgY3VycmVudCBza2lwcGVyIE1pY2hhZWwgQnJhZGxleS4KT24gdGhlIGJheSBzaWRlLCB0aGUgMTkxMSBDaXR5IFBpZXIgc3RpbGwgZHJhd3Mgc3VuYmF0aGVycyBhbmQgZmlzaGVybWVuLiAKTmVydmUgaW5ncm93dGggaW50byBjaHJvbmljIHBhaW5mdWwgZGlzYwpJdHMgYSBncmVhdCBpZGVhLCBidXQgYXQgdGhlIGVuZCBvZiB0aGUgZGF5IG5vIG1hdHRlciBob3cgcmVhc29uYWJsZSB5b3UgY2hhcmdlIHlvdSBtaWdodCBnZXQgb25lIGNsaWVudCBmcm9tIGl0LiBNb3N0IGN5Y2xpc3Qgd2lsbCBzcGVuZCBtYWpvciBidWNrcyBvbiBhIGJpa2UgYW5kIHdoYXQgbm90IGJ1dCBzb21ldGhpbmcgZm9yIHRoZW1zZWx2ZXMgYXMgaW4gdGhlaXIgYm9kaWVzIHdlbGxuZXNzLiB3ZWxsIG1vc3QgdGVuZCB0byBub3Qgc3BlbmQgbXVjaCBvbiB0aGVpciBvd24gaGVhbHRoIG9yIGlmIHRoZXkgZG8gaXRzIGluIHRoZSB3cm9uZyBkZXB0LgpOZXdzIG9mIGhlciBsZWF2aW5nIGhhZCBicm9rZW4gcHJpb3IgdG8gdGhlIHNlcmllcywgYW5kIGl0IHByb21wdGVkIHRoZSBTd2VkaXNoIG5ld3NwYXBlciBFeHByZXNzZW4gdG8gd3JpdGUgYSBzdG9yeSB3aXRoIHRoZSBoZWFkbGluZSB3aGljaCwgdHJhbnNsYXRlZCBpbnRvIEVuZ2xpc2gsIHN0YXRlZCAiSmVubmlmZXIgV2FrZWZpZWxkIHN0b3BwZWQgYnkgYXNzb2NpYXRpb24uIiBUaGUgIm5pZ2h0bWFyZSwiIHJlZmVyZW5jZSB3YXMgaW4gdGhlIGZpcnN0IHBhcmFncmFwaC4KSSB3aWxsIHNheSB3ZSBoYWQgaXQgb24gdGhlIFBTNCBiZWZvcmUgd2UgZ290IGEgU3dpdGNoLCBhbmQgdGhlIGNvIG9wIG9wdGlvbnMgb24gUFM0IHdlcmUgc3VwZXIgbGltaXRlZC4gCkhhdmUgRW9FIGZvciB0aGUgbGFzdCAxOCB5ZWFycy4gSGFkIG15IHRocm9hdCBzdHJldGNoZWQgdHdpY2UuIApTbywgaXQgd2FzIHRocm91Z2ggdGhlIHNlc3Npb24gSSBzZXQgbXkgaW1hZ2UgdXAuIE5leHQsIGFuZCBtb3N0IGltcG9ydGFudCwgaXMgdGhlIHBsYXllciByYW5nZXMgKGFuZCBzdGFjayBzaXplcykuIApEZW4gZGVhbCB1bmV4cGVjdGVkbHkgcHV0IG9uIGhvbGQKSGUgc2FpZCB0aGUgbGV0dGVyIHdvdWxkIHNpbXBseSBhc2sgb3BlcmF0b3JzIHRvIHB1dCBpbiB0aGUgaGFybSBtaW5pbWlzYXRpb24gbWVhc3VyZXMgYnV0IHRoZXJlIHdvdWxkIGJlIG5vIHNhbmN0aW9ucyBmcm9tIHRoZSBjb3VuY2lsIGlmIHRoZSBvd25lcnMgZGlkIG5vdC4gCkplcnJ5IEJyb3duIG9mIENhbGlmb3JuaWEsIGEgRGVtb2NyYXQsIHdyb3RlIGluIHZldG9pbmcgYSBzaW1pbGFyIG1lYXN1cmUgaW4gaGlzIHN0YXRlIGluIDIwMTcsIGFjY29yZGluZyB0byBUaGUgQXNzb2NpYXRlZCBQcmVzcy4gCkJ1dCB5b3Ugd2VyZSBmb2N1c2luZyBvbiB0aGUgYWN0dWFsIHByYWN0aWNhbGl0eSBvZiBidXlpbmcgb3IgY29uZHVjdGluZyBhIHRha2VvdmVyIG9mIGEgY29tcGFueS4KQW5kIHdhbGsgaW4gbG92ZSwgYXMgQ2hyaXN0IGxvdmVkIHVzIGFuZCBnYXZlIGhpbXNlbGYgdXAgZm9yIHVzLCBhIGZyYWdyYW50IG9mZmVyaW5nIGFuZCBzYWNyaWZpY2UgdG8gR29kLiBUaGUgNzAgeWVhciBvbGQgd2FzIHNlZW4gdXNpbmcgbGV3ZCBhbmQgc2V4dWFsbHkgYWdncmVzc2l2ZSBsYW5ndWFnZSB0byBicmFnIGFib3V0IGdyb3BpbmcgYW5kIHRyeWluZyB0byBoYXZlIHNleCB3aXRoIHdvbWVuLCBpbmNsdWRpbmcgc29tZW9uZSB3aG8gd2FzIG1hcnJpZWQsIGluIGZvb3RhZ2Ugb2J0YWluZWQgYnkgdGhlLiBJIHNpbXBseSBzYXkgdGhhdCBzb21ldGhpbmcgd2FzIGRpc3Jlc3BlY3RmdWwgYW5kIHdhbGsgYXdheSBpZiBpdCBoYXBwZW5zIGEgc2Vjb25kIHRpbWUuIApGcm9tIHNjb29waW5nIGljZSBhbmQgc3dlZXBpbmcgZmxvb3JzIHRvIG1hbmFnaW5nIG9wZXJhdGlvbnMgYXQgYSB0aHJpdmluZyBidXNpbmVzcywgSSB3ZW50IGZyb20gYm9ycm93aW5nIHRvIHBheSBiaWxscyB0byBpbnZlc3RpbmcgZGlzcG9zYWJsZSBpbmNvbWUuIApVbHRpbWF0ZWx5LCBpdCB3YXMgaG9wZWQgdGhlIHByb2R1Y3Rpb24gY291bGQgZ28gb24gdGhlIHJvYWQgbmF0aW9uYWxseSBhbmQgaW50ZXJuYXRpb25hbGx5IGZvciB5ZWFycywgcmFja2luZyB1cCBwcm9maXRzIHRoZSB3YXkgbWFueSBCcm9hZHdheSBwcm9kdWN0aW9ucyBkby4uIApXaGVuIHNvbWVvbmUgc2F5cyAiaG1tLiBQcmVzcyBGMTIgcmVhbCBxdWljaz8iIFlvdSBsb29rIGR1bWIgc2NyYW1ibGluZyB0byBmaW5kIHRoZSBleGFjdCBjb21iaW5hdGlvbiBvbiB5b3VyIHN1cGVyIGNvb2wga2VlYi4gVGhlIEYga2V5cyBhcmVuIHRvdWdoLCBidXQgdGhlIFBvazNyIGlzIGEgNjAlLCBzbyBubyBhcnJvdyBrZXlzLCBob21lLCBlbmQsIGRlbGV0ZSwgcGFnZSB1cC9kb3duLCBudW1wYWQgKEkgaGF2ZSBubyBpZGVhIGhvdyB0byBlbnRlciBhbHQgY29kZXMpLi4gCkJ1dCBJIGFtIGdvb2QgYXQgY29sbGVjdGluZyBkYXRhLiAKRGVzY2FsaWZpY2FkbyBwb3IgcmVjaWJpciBpbmZvcm1hY2luIGVuIEhvbGxhbmQgQ2FzaW5vIERvbSBDbGFzc2ljCkVkaXQ6IEkgd2FzIGEgbGl0dGxlIGZhcnRoZXIgZnJvbSB0aGUgdG93ZXIgdGhhbiBvcmlnaW5hbGx5IHN0YXRlZCBhbmQgc29tZW9uZSB0b29rIGlzc3VlLgpBZGQgaW4gdGhlIG1hZ25pZmljZW50IGFwcGVhbCBhbmQgd2Ugd2VyZSBhbGwgc2V0IG9uIHBpdGNoaW5nIGluIGZvciB0aGlzIHByb2R1Y3QuLiAKSW4gcG9saXRlIHNvY2lldHkgaW4gdGhlIFBlZywgbm8gb25lIHdvdWxkIGRhcmUgc3BlYWsgaWxsIG9mIGdheXMsIEpld3Mgb3IgYmxhY2tzLiAKSSBkb25lIHdvcmsgZm9yIHBheSBhbmQgd29yayBmb3IgZnJlZSwgYXMgYSB2b2x1bnRhcnksIG1hbnkgdGltZXMuIEkgdXN1YWxseSB3b3JrIGhhcmRlciBhbmQgZmVlbCBoYXBwaWVyIHdoZW4gSSB3b3JrIGZvciBmcmVlLCBldmVuIGlmIEkgaGF2ZSB0aW1lIHByZXNzdXJlcy4gCkJ1dHRlckJ1dHRCaXNjdWl0IHUKTXkgYm95ZnJpZW5kIChJJ20gYSBndXkgdG9vIGZvciByZWZlcmVuY2UpIHdhdGNoZXMgbW9yZSBwb3JuIHRoYW4gbWUgYW5kIEkgc3RpbGwgc3RydWdnbGUgd2l0aCBiZWluZyBqZWFsb3VzIGFuZCBzYWQgYWJvdXQgaXQgc29tZXRpbWVzIGJ1dCB3ZSBjb21tdW5pY2F0ZSByZWFsbHkgd2VsbCBhbmQgaGUgZXhwbGFpbmVkIGl0IHByZXR0eSBtdWNoIGV4YWN0bHkgaG93IHlvdSBkaWQgYW5kIEknbSB3b3JraW5nIG9uIGl0LiBJIDEwMCUgYmVsaWV2ZSBoaXMgZXhwbGFuYXRpb24sIGJ1dCBpdCdzIGhlbHBmdWwgdG8gc2VlIGFub3RoZXIgZ3V5IGFydGljdWxhdGUgdGhlIHNhbWUgc2VudGltZW50IGFzIG15IGJveWZyaWVuZCBhYm91dCBob3cgaGUgdmlld3MgcG9ybi4gVGhhbmtzIGZvciBjb21tZW50aW5nIGR1ZGUuLiAKQnV0IGV2ZW4gdGhlbiwgS2lyYWZsYXggdG9vayBhIGdhbWUgb2ZmIE1LTGVvIHJlY2VudGx5IGluIHRvdXJuYW1lbnQsIGFuZCBFYXJ0aCBoYXMgc3RpbGwgeWV0IHRvIGpvaW4gdGhlIGNvbXBldGl0aXZlIHNjZW5lLiBJIGRvbiBiZWxpZXZlIHRoZSBjaGFyYWN0ZXIgc2hvdWxkIGJlIHdyaXR0ZW4gb2ZmIGJlY2F1c2Ugb2YgdGhpcy4gCkFmdGVyIHRoZSByYXRoZXIgbGFja2x1c3RyZSB0ZWVuIGR5c3RvcGlhIGFkdmVudHVyZSBUaGUgTWF6ZSBSdW5uZXIsIHRoZSBhY3Rpb24gY29udGludWVzIGluIHRoaXMgZXF1YWxseSBnaW1taWNreSBzZXF1ZWwuIApJdCdzIGltcHJlc3NpdmUgdGhvIHRoYXQgdGhlIGNvbXBhbnkgaGFkIHRoZSBwb2tlciBmYWNlIHRvIG1ha2UgbW9yZSBwcm9kdWN0cyBhbmQgYXNrIHRoYXQgc3VtIG9mIG1vbmV5IGV2ZW4uIApIYWhhLCBhZ2FpbiB3aXRoIHRoZSBzdHVwaWQgc3RyYXdtYW5zLiBEdWRlLCBnZXQgaXQgdGhyb3VnaCB5b3VyIHRoaWNrIHNrdWxsIHRoYXQganVzdCBiZWNhdXNlIHlvdSBjYW4gZmluZCBzY2VuYXJpb3Mgd2hlcmUgYSBiaWN5Y2xlIGlzbiBmZWFzaWJsZSwgZG9lc24gbWFrZSBpdCBhIGdvb2QgYXJndW1lbnQuCkkgd2FzIHRvbGQgaXQgYSBzaWduIG9mIGdvb2QgcGFyZW50aW5nICAgd2hlbiB5b3Uga25vdyB5b3VyIGxpdHRsZSB3aWxsIGNvbWUgaG9tZSB3aXRoIG5vdGhpbmcgYnV0IHByYWlzZSBhbmQgY29tcGxpbWVudHMsIGV2ZW4gaWYgc2hlIGEgamVyayB0byB5b3UuLiAKRmFsY2FvIGFkZGVkIFBvcnRvJ3MgdGhpcmQgaW4gdGhlIDY3dGggbWludXRlIHdpdGggYSB0YXAgaW4gYWZ0ZXIgSHVsayBsZWQgYSBjb3VudGVyIGF0dGFjayBhbmQgdGhlbiB0aGUgZm91cnRoIHdpdGggYSBkaXZpbmcgaGVhZGVyIGZyb20gYSBjdXJsaW5nIGZyZWUga2ljayBieSBHdWFyaW4gdGhhdCBsZWZ0IHRoZSBTcGFuaXNoIGRlZmVuY2Ugc3RhbmRpbmcuClN0YXkgc3Ryb25nIGFuZCBkb24ndCB3b3JyeSB0b28gbXVjaCwgdGhlIGJhYnkgZG9lcyBub3QgY2FyZSB3aG8gaGFzIHdoYXQgbmFtZSBhbmQgYXMgc29vbiBhcyBpdCBsZWFybnMgbW9yZSBsYW5ndWFnZSB0aGlzIHdvbid0IGV2ZW4gYmUgYW4gaXNzdWUuIApJdCBhIGdyZWF0IGpvYiBmb3Igc29tZW9uZSBwYXJ0IHRpbWUgb3IgaW4gYmV0d2VlbiBjYXJlZXJzLCBidXQgdGhlcmUgYXJlIHNvIGZldyBvcHBvcnR1bml0aWVzIHRvIG1ha2UgaXQgYXMgYSBzZXJ2ZXIgbG9uZyB0ZXJtLiBZb3UgdGhlIG1vc3QgZGlzcG9zYWJsZSBlbXBsb3llZSBpbiB0aGUgcGxhY2UgZXhjZXB0IGZvciBtYXliZSBhIGJ1cyBib3kgb3IgaG9zdGVzcywgYW5kIHRyZWF0ZWQgYXMgc3VjaC4gU29tZSBlb3BsZSBoZWFyIGFib3V0IGEgc2VydmVyIG1ha2luZyAkMjUgYW4gaG91ciBvbmUgbmlnaHQgYW5kIGF1dG9tYXRpY2FsbHkgdGhpbmsgdGhhdCB0aGV5IG11c3QgdGhlbiBiZSBtYWtpbmcgNjBrIGEgeWVhci4gQnV0IGZvciB0aGF0IHRvIGhhcHBlbiwgdGhleSBuZWVkIHRvIGJlIG1ha2luZyB0aGF0IGV2ZXJ5IG5pZ2h0IG9uIGEgZnVsbCB0aW1lIGJhc2lzLiBBbnlvbmUgd2hvIHNlcnZlZCBrbm93cyB0aGlzIGlzIGRhbW4gbmVhciB1bmhlYXJkIG9mLgpJcyB0aGUgYnJhaW4gc3ViamVjdCB0byB0aGUgdG94aWMgZWZmZWN0cyBvZiBnbHVjb3NlLCBqdXN0IGFzIHBlcmlwaGVyYWwgbmVydmVzIGFyZT8KVGhlc2UgYXJlIG1vc3QgZGVmaW5pdGVseSBjaGlwcyB0aGF0IGhhdmUgYmVlbiBjYXJlZnVsbHkgZGVzaWduZWQgYW5kIHByb2R1Y2VkLiBUaGUgY2hpcHMgYXJlIG1hZGUgb2YgcHJvZmVzc2lvbmFsIGdyYWRlIGNsYXkgd2hpY2ggaXMgd2hhdCBnaXZlcyB0aGVtIHRoZWlyIHVuaXF1ZSBsb29rIGFuZCB0ZXh0dXJlLiBUaGUgbWF0ZXJpYWwgdXNlZCBpbiB0aGVzZSBjaGlwcyBpcyB0aGUgc2FtZSB5b3Ugd291bGQgZmluZCBpbiBtYW55IG9mIHRoZSBtb3N0IGZhbW91cyBjYXNpbm9zIHRocm91Z2hvdXQgdGhlIHdvcmxkLi4gClRoZSBjbHViIGhhcyAxOSBwb2tlciBtYWNoaW5lcyB3aGljaCBkcmV3ICQzNTUsOTYyIGluIGV4cGVuZGl0dXJlIGludGhlIDEyIG1vbnRocyB0byBKdW5lIDMwIHRoaXMgeWVhci4gVGhhdCBmaWd1cmUgd2FzIHN1YnN0YW50aWFsbHkgZG93biBvbiB0aGUkNjgxLDQxMiBnYW1pbmcgbWFjaGluZSBzcGVuZGluZ2luIDIwMTAgMjAxMS4gClRoZXkgbG92ZWQgdGhlIGxpZ2h0IGFuZCBzcGFjaW91cyBmZWVsaW5nIHRoZSBob3VzZSBleHVkZWQgd2l0aCBpdHMgb3BlbiBwbGFuIGxheW91dCBhbmQgY2VpbGluZyB0byBmbG9vciB3aW5kb3dzLiBUaGV5IGJvdWdodCBpdCBvbiB0aGUgc3BvdC4uIApNcnogaXN0IGRhcyBBenVsIHNjaG9uIHdpZWRlciBnZWZmbmV0IHVuZCBiZXNvbmRlcnMgYWxsZSB1bnNlcmUgbGllYmVuIHNwYW5pc2NoZW4gR3N0ZSBzaW5kIGRlbSBBenVsIHRyZXUgZ2VibGllYmVuIHVuZCB6dW0gR2xjayBhdWNoIHZpZWxlIHVuc2VyZXIgUmVzaWRlbnRlbiB1bmQgU3RhbW1nc3RlIi4uIApFZGl0OiAxLCB0aGFua3MgZm9yIHRoZSBnb2xkISAyLCBmb3IgZXZlcnlvbmUgc2F5aW5nIGl0J3MgYSB0YXJnZXRlZCBhZCBiYXNlZCBvbiBteSBzZWFyY2ggaGlzdG9yeSwgaXQncyBhIHdlYnNpdGUgcHJvbW90aW5nIGFjY2VwdGFuY2UgYW5kIGluY2x1c2lvbiBhY3Jvc3MgcHBsIG9mIGFsbCByYWNlLCByZWxpZ2lvbiwgc2V4dWFsIG9yaWVudGF0aW9uLCBldGMuIEkgZGlkIGdpdmUgYmFjayBnaWZ0cyBmb3IgQ2hyaXN0bWFzIHdpdGggbXkgZmFtaWx5IHRoaXMgeWVhciBhbmQgdGhlIHdlYnNpdGUgaGFzIGEgZG9uYXRpb24gcGFnZSBmb3IgZGlzYXN0ZXIgcmVsaWVmIHNvIEkgdGhpbmsgdGhhdCdzIHdoeSB0aGUgYWQgcG9wcGVkIHVwIGZvciBtZQpGaW5uIE1ha2VsYSBzb3VsaWduZSBxdSdpbCBlbiB2YSB0b3V0IGF1dHJlbWVudCBhdXggdGF0cyBVbmlzLCBvIGRlcyBlbXBsb3lldXJzIHZvbnQganVzcXUnIGRlbWFuZGVyIGxlIGNvZGUgZCdhY2NzIGF1IGNvbXB0ZSBGYWNlYm9vayBkZSBub3V2ZWF1eCBlbXBsb3lzIHBvdGVudGllbHMuCklsIHNlIGNyZSBhaW5zaSwgZW4gaGF1dCBkdSB0cm9uYywganVzdGUgc291cyBsYSBjb3Vyb25uZSBkZXMgcGFsbWVzIHZpdmFudGVzLCB1biBlc3NhaW0gZGUgcGV0aXRzIGphcmRpbnMgc3VzcGVuZHVzLCBvbWJyYWdzLCBodW1pZGVzLCBkYW5zIGxlc3F1ZWxzIHBvdXNzZW50IGRlIG5vbWJyZXVzZXMgaGVyYmVzLCBtaXNyZXMsIHJpZ3JvbnMsIGJhbHNhbWluZXMsIHB0dW5pYXMsIG5vbWJyaWxzIGRlIFZudXMsIHZhbHJpYW5lcywgZXRjLiAKSSBzYXkgdGhhdCBGcmVpYnVyZyBhbmQgSGVpZGVsYmVyZyBhcmUgcHJldHR5IG11Y2ggYWxpa2UsIHdpdGggRnJlaWJ1cmcgYmVpbmcgYSBtb3JlICJmcmVlIiBvciAiYWx0ZXJuYXRpdmUiIGNpdHkuClBpIHdhcyBkaWNraW5nIGhpcyBzaGlwd3JlY2tlZCB0aWdlciwgKFJpY2hhcmQpIERpY2sgUEFSS0VSLCB3aGlsc3Qgc2ltdWx0YW5lb3VzbHksIE1hcnkgamFuZSBXYXRzb24gdGVsbHMgUGV0ZXIgUEFSS0VSIChTQU1FIExBU1QgTkFNRVMpIHRvICJnbyBhbmQgZ2V0ICdlbSB0aWdlciIKV2VsbCwgaXQgdXN1YWxseSBlYXNpZXIgd2hlbiB5b3UgaW5pdGlhdGUgdGhlIGJyZWFrdXAgYnV0IHdoZW4gSSBicm9rZSB1cCB3aXRoIG15IGV4IGhlIHByZXZlbnRlZCBhbnkgZG91YnRzIEkgd291bGQgaGF2ZSBoYWQuIEkgZ290IGF0IGxlYXN0IDMwMCBjYWxscyBmcm9tIGhpbSBhbmQgYSBmZXcgdGhvdXNhbmQgdGV4dCBtZXNzYWdlcyB0aGF0IHJhbmdlZCBmcm9tIHNhZCBhbmQgYXBvbG9nZXRpYyB0byBhbmdyeSBhbmQgdGhyZWF0ZW5pbmcuIFRoZSBuZXh0IGRheSBJIGRlY2lkZWQgdG8gZ28gaGlraW5nIHdpdGggYSBmcmllbmQgdG8gZ2V0IGF3YXkgZnJvbSB0aGUgc3RyZXNzIGFuZCBkaWRuIGxvb2sgYXQgbXkgcGhvbmUgYWxsIGRheSB1bnRpbCBteSBtb3RoZXIgY2FsbGVkIGFuZCBhc2tlZCBpZiBJIG5lZWRlZCB0byBnZXQgYSByaWRlIGJlY2F1c2UgaGUgd2FzIG91dCBsb29raW5nIGZvciBtZS4gCklmIHlvdSB0aGluayB0aGF0IHlvdXIgbWVkaWNhdGlvbiBpc250IHdvcmtpbmcgYXNrIHlvdXIgZG9jdG9yIHRvIHRyaWFsIHlvdSBvbiBvbmUgb2YgdGhlc2UgY2xhc3Mgb2YgYW50aWRlcHJlc3NhbnRzLi4gCkNoaXF1aXRhIGlzIGEgdGVycmlibGUgZnJ1aXQgY29tcGFueSBhbmQgbm8gb25lIHNob3VsZCBldmVyIGZvcmdpdmUgdGhlbSBmb3Igd2hhdCB0aGV5IGRpZC4gCklmIHlvdSB3YW50IHlvdSBjYW4gZXZlbiBzdGFydCB5b3VyIG93biBQcml2YXRlIFBsYXlpbmcgVGFibGUgd2hpY2ggY291bGQgZ2l2ZSB5b3UgYSBzdXJnZSBvZiBjb25maWRlbmNlLCBlc3BlY2lhbGx5IGlmIHlvdSd2ZSBiZWVuIHBsYXlpbmcgdGFibGVzIGZvciBhIHdoaWxlIGFuZCBoYXZlIG1ldCBzb21lIGNvbnRhY3RzLiBUaGVyZSBhcmUgZG96ZW5zIG9mIGRpZmZlcmVudCB0eXBlcyBvZiBDYXJkIEdhbWVzIGF2YWlsYWJsZSB0byBwbGF5IGlmIHlvdSBhcmUgYSBGcmVlIE9ubGluZSBQb2tlciBwbGF5ZXIuIApXaGVuIGF0dGVudGlvbiBwbGFjZWQgb24geW91LCBzdWRkZW5seSBhZG1pbmlzdHJhdG9ycyB3YW50IHRvIGZvbGxvdyB0aGUgZXhhY3QgbGV0dGVyIG9mIHRoZSBsYXcsIHRvIG1hbGljaW91cyBjb21wbGlhbmNlIGxldmVscyBzb21ldGltZXMsIGp1c3QgdG8gYXZvaWQgYmxhbWUgZmFsbGluZyBvbiB0aGVtLiAKIGwncG9xdWUsIGxlcyBlbnRyZXByZW5ldXJzIHRhaWVudCBwYXlzICBsYSBxdWFudGl0IGRlIG5laWdlIHRvbWJlLiAKRm9yIHNvbWUgcmVhc29uIHRob3NlIHR3byBjb21lIHVwIGxpa2UgY3Jhenkgd2hlbiB3ZSBwbGF5LCBzbyBnZXR0aW5nIHRoYXQgZXh0cmEgbW9uZXkgaXMgYSBuaWNlIGJvbnVzLiAKVFYgdmlld2VycyBhcmVuIHNoaXQgd2hlbiB5b3UgdGhpbmsgYWJvdXQgdGhlIGFtb3VudCBvZiBwZW9wbGUgb24gdGhlIGludGVybmV0IHRhbGtpbmcgYWJvdXQgdGhlIGZpZ2h0cywgcGVvcGxlIHR3ZWV0aW5nL2luc3RhL3JlZGRpdGluZyBhYm91dCB0aGUgVUZDLiBUaGUgZnV0dXJlLCB0aGUgcGVvcGxlIHRoYXQgdGhlIFVGQyB3YW50cyB0byBwYXkgZm9yIHRoZSBhd2Z1bCBmaWdodCBraXRzLCBqb2luIHRoZSByZXdhcmRzIHByb2dyYW0sIGFuZCBidXkgdGhlIFBQVnMsIHRob3NlIGFyZSB0aGUgb25lcyB0aGV5IHdvcnJ5aW5nIGFib3V0IGFuZCBtYXJrZXRpbmcgdG8uIApJIHRoaW5rIEFtbWEgdGFyZ2V0ZWQgaGVyIHZpY3RpbXMgYm90aCBiZWNhdXNlIHRoZXkgcmVjZWl2ZWQgYXR0ZW50aW9uIGZyb20gQWRvcmEgb3IgQ2FtaWxsZSwgQU5EIGJlY2F1c2UgdGhleSB3ZXJlIGRpZmZlcmVudC4gCkRlIHJhYmFpcyBzdXIgdW4gdHJhaXRlbWVudApBcyBpZiBpdCBpcyBqdXN0IGEgbm9ybWFsIGZpbG0gcHJpbnQgeW91IGdldCBmcm9tIGEgY29udmVuaWVuY2Ugc3RvcmUuIApUaGF0IHVzdWFsbHkgaG93IEkgZG8gbXkgNTMxIHByb2dyYW1taW5nLiAKNS4gR3JlYXQgQmFycmllciBSZWVmIGZvciBkaXZlcnMKMi4gTW9zdCBwbGF5ZXJzIHRpcCB0aGUgZGVhbGVyIHdoZW4gdGhleSB3aW4gYSBwb3QuIApJbnN1cmFuY2VNYXNzYWdlIHRoZXJhcHkgaW5zdXJhbmNlIHNob3VsZCBpbmNsdWRlIGNvbXByZWhlbnNpdmUgZ2VuZXJhbCwgcHJvZHVjdHMgbGlhYmlsaXR5LCBwZXJzb25hbCBpbmp1cnkgbGlhYmlsaXR5LCBtZWRpY2FsIGV4cGVuc2UsIHNleHVhbCBhYnVzZSBsaWFiaWxpdHkgYW5kIGRhbWFnZSB0byBwcmVtaXNlcyBpZiBsZWFzaW5nIGEgYnVpbGRpbmcuIApJbiBtb3N0IGNhc2VzLCBzdHVkaWVzIGZpbmQgdGhhdCB0aGUgcmlzayBpcyBhdCBsZWFzdCBhcyBzaWduaWZpY2FudCBhcyB3aXRoIGFsY29ob2wuIApPbmNlIHlvdSBmaW5kIHlvdXIgZ2FtZSwgc3RpY2sgdG8gaXQhIEFub3RoZXIgdGhpbmcsIGhvbGRlbSBwb2tlciBpcyBhbHNvIGZvY3VzZWQgb24gdGhlIG9kZHMgc28gZG8gbm90IGV2ZXIgcGxheSBhZ2FpbnN0IGltcG9zc2libGUgb2RkcyBiZWNhdXNlIGl0IGlzIGxpa2UgcGxheWluZyB3aXRoIHRoZSBkZXZpbCBoaW1zZWxmLiBSZWFkaW5nIHlvdXIgb3Bwb25lbnQgaXMgYWxzbyBhIGdvb2Qgc3RyYXRlZ3kgd2hlbiBwbGF5aW5nIHBva2VyLCBhbmQgd2hlbiBJIHNheSByZWFkaW5nIHlvdXIgb3Bwb25lbnQsIGl0IGRvZXNuJ3QgbWVhbiB0aGF0IHlvdSBnbyBhbmQgY29uZHVjdCBhIGJhY2tncm91bmQgcmVzZWFyY2ggb2YgdGhlIHBlcnNvbi4gClR3byBjYXJkcyBzaG91bGQgbm90IGJlIGRyYXduIHRvIGEgcGFpciB1bmxlc3MgYW4gYWNlIG9yIGtpbmcgY2FuIGJlIHJldGFpbmVkIHdpdGggdGhlbSwgZXhjZXB0IGZvciB0aGUgcHVycG9zZSBvZiBhICJibHVmZi4iIElmIG1vc3Qgb2YgdGhlIG90aGVyIHBsYXllcnMgYXJlICJpbiwiIHRoZSBjaGFuY2VzIG9mIGRyYXdpbmcgYW4gYWNlIG9yIGEga2luZyBhcmUgbm90IHF1aXRlIHNvIGdvb2QgYXMgdGhvc2Ugb2YgZHJhd2luZyBhIHNtYWxsIGNhcmQsIGJlY2F1c2UgdGhlIG90aGVyIHBsYXllcnMgYXJlIG1vcmUgbGlrZWx5IHRvIGJlIHN0YXlpbmcgaW4gb24gaGlnaCB0aGFuIG9uIGxvdyBjYXJkcy4gCkl0IHRpY2tsZWQgbWUgdG8gc2VlIHVzIHdlYXJpbmcgdGhlIHNhbWUgZHJlc3MgYXQgdGhlIHNhbWUgYWdlLiAKSGUgYWx3YXlzIGtlcHQgYSBob21lIGluIExBIGFuZCB0aGF0cyB3aGVyZSBoaXMgZmFtaWx5IGxpa2VkIGl0IHRoZSBtb3N0LkFzIHNvbWVvbmUgd2hvIGdyZXcgdXAgaW4gQ2xldmVsYW5kIGFuZCBub3cgbGl2ZXMgb24gdGhlIG9jZWFuIGluIFNhbiBEaWVnbywgaSAxMDAlIGdldCBpdC4gClZpVWU7IE1yLiAKSSBsb3ZlIHRoZSBpbnNhbmUgYW1vdW50IG9mIGFydCBpbnNwaXJlZCBieSB0aGUgR3JhdGVmdWwgRGVhZC4gV2lsZCBzdXJyZWFsIGNhcnRvb25zIHdpdGggY2hhcmFjdGVycyBhbmQgaW1hZ2VyeSBmcm9tIHRoZWlyIHNvbmdzIGFuZCBteXRob2xvZ3kuIEFsc28gdGhlIGFuaW1hdGVkIGJpdCBmcm9tIHRoZSBHcmF0ZWZ1bCBEZWFkIG1vdmllIGlzIHF1aXRlIGdvb2QuCkVzdGltZXogc2kgY2VsYSB2YXV0IGxlIGNvdXAgZCdhdHRlbmRyZSBkZSB2b2lyIGxhIHF1YXRyaW1lIGNhcnRlIGNvbW11bmUuIApIZSBvbmNlIHRvbGQgbWUgaGUgd2F0Y2hlZCBtYW55IDQ5ZXIgZ2FtZXMgYXMgdGltZSBhbGxvd3MuIApIZSB3aWxsIGJlIG1pc3NlZApJdCBnb29kIGZvciBnYW1lcyB3aGVyZSB5b3Ugb25seSBuZWVkIGEgZmV3IHRlcm1pbmFsIGFjdGlvbnMgdG8gYmUgcGxheWVkIGVhY2ggdHVybiwgYWxvbmcgd2l0aCBzb21lIHdheSBvZiBnYWluaW5nIGFjdGlvbnMuIApEeW5hbWlxdWUgZXQgcHVnbmFjZSwgbGlzYWJldGggQ2FydGVyb24sIGxlIHZlcmJlIGhhdXQgZXQgbGUgY29udGFjdCBwYXJmb2lzIHJ1Z3VldXgsIHMnZXN0IGVuZ2FnZSBkYW5zIHNvbiBxdWFydGllciBtYWlzIGF1c3NpIGF1cHJzIGRlIGwnQXNzZW1ibGUgZGVzIGZlbW1lcyBkJ0lsZSBkZSBGcmFuY2UsIGFzc29jaWF0aW9uIHJnaW9uYWxlIHF1aSBhIHBvdXIgb2JqZWN0aWYgZGUgcHJvbW91dm9pciBsYSBwYXJpdCBkYW5zIGRlcyBsaWV1eCBkZSBkY2lzaW9uIHBvbGl0aXF1ZSBldCBkZSBkZmVuZHJlIGxlcyBkcm9pdHMgZGVzIGZlbW1lcy4gUG91ciBBY3Rpb24gQmFyYmVzLCBlbGxlIGF2YWl0IGwnb2JqZWN0aWYgYW1iaXRpZXV4IGQnYW1saW9yZXIgbGUgY2FkcmUgZGUgdmllIGRlcyBoYWJpdGFudHMgZHUgcXVhcnRpZXIgYXV0b3VyIGR1IGNhcnJlZm91ciBCYXJicywgYXV4IGNvbmZpbnMgZGUgdHJvaXMgYXJyb25kaXNzZW1lbnRzIHZvaXNpbnMgOiAxOGUsIDllIGV0IDEwZSwgZGUgbGEgZ2FyZSBkZSBsJ0VzdCAgbGEgcnVlIFJhbWV5IGVuIHBhc3NhbnQgcGFyIGxhIEdvdXR0ZSBkJ29yLCBzYW5zIG91YmxpZXIgbGUgYm91bGV2YXJkIFJvY2hlY2hvdWFydC4gCkFMTCAgU1RFQU1CT0FUIFNQUklOR1MsIENvbG8uIAoiWW91IGhhZCBhIG1pbmltdW0gb2YgNjcgcGVvcGxlLiIgUmVwb3J0cyBvZiBmbGF0IHJhdGUgZmVkZXJhbCB0YXggZGVuaWVkIFdBU0hJTkdUT04gKEFQKSBUaGUgUmVhZ2FuIGFkbWluaXN0cmF0aW9uIG9wZW5lZCBoZWFyaW5ncyBXZWRuZXNkYXkgb24gb3ZlcmhhdWxpbmcgdGhlIGZlZGVyYWwgaW5jb21lIHRheCBzeXN0ZW0gYnkgZGVueWluZyByZXBvcnRzIGl0IGFscmVhZHkgaGFzIGFncmVlZCB0byByZWNvbW1lbmQgYSBmbGF0IHJhdGUgdGF4IHRoYXQgd291bGQgYXBwbHkgZXF1YWxseSB0byBldmVyeW9uZSByZWdhcmRsZXNzIG9mIGVhcm5pbmdzLiAiTm90aGluZyBjb3VsZCBiZSBmdXJ0aGVyIGZyb20gdGhlIHNhaWQgSm9obiBDaGFwb3RvbiwgYXNzaXN0YW50IHRyZWFzdXJ5IHNlY3JldGFyeSBmb3IgdGF4IHBvbGljeS4gClRoaXMgaXNuIGEgY3JpdGljaXNtIG9mIGp1c3QgQ2FsbCBvZiBEdXR5LCBpIGZlZWwgaW4gZ2VuZXJhbCBwbGVudHkgb2YgZnJhbmNoaXNlcyBoYXZlIGxvc3QgdGhlIHRoYXQgaSBmZWxsIGluIGxvdmUgd2l0aC4uIApMb3JldHRhIGFjY291bnRpbmcgam9iIHdpdGggYSBub24gcHJvZml0IG9yZ2FuaXphdGlvbiBpcyBhbHNvIG5vdCBndWFyYW50ZWVkLiAKSSBjb3VsZCBiZSB3cm9uZyBidXQgSSBnZW51aW5lbHkgYmVsaWV2ZSBKbmFuZGV6IGluIGFsbCB0aGlzLiBGaXJzdCwgYmVjYXVzZSBvZiBoaXMgZGVjaXNpb24gdG8gbWFrZSBzdWNoIHZpZGVvIHdpdGhvdXQgZmVlbGluZyB0aGUgbmVlZCB0byBjbGFpbSBoaXMgc2lkZSBpcyBlbnRpcmVseSByaWdodC4gCkl0IG9ubHkgZm9yIDEwIG1pbnV0ZXMsIGJ1dCBpdCBzb21ldGhpbmcuLiAKTGlrZSBhbGwgcHJvY2Vzc2VzLCB0aGUgY2l2aWxpemluZyBvbmUgY2FuIHN0b3AuIEl0IGNsZWFybHkgaXMgc3RvcHBpbmcgaW4gQW1lcmljYW4gcG9saXRpY3MgYW5kIG1heWJlIGRhaWx5IGxpZmUgbW9yZSBnZW5lcmFsbHkuIE5vdCB0byBzb3VuZCB0b28gbXVjaCBsaWtlIG15IG1vdGhlciwgYnV0IGJvZGlseSBjb250cm9sIChmcm9tIGZhcnRpbmcgdG8gYnVycGluZyB0byBoYWJpdHMgb2YgZWF0aW5nKSBpcyBzdXJlbHkgbGVzcyBzZXZlcmUgdGhhbiBpdCB3YXMganVzdCBhIGdlbmVyYXRpb24gYWdvLiBBbmQgdGhpcyBpcyBub3QgbmVjZXNzYXJpbHkgYSBiYWQgdGhpbmcuCkFsbCBvZiB0aG9zZSBuYW1lcyBhcmUgdW5jb21tb24gZW5vdWdoIHRvIHJhaXNlIGFuIGV5ZWJyb3cgb3IgdHdvLiBJIGhhdmUgb3RoZXIgY291c2lucyB3aG9zZSBwYXJlbnRzIGdhdmUgdGhlbSBuYW1lcyB0aGF0IHN0YXJ0ZWQgd2l0aCBhIGhhcmQgayBzb3VuZCAodGhleSBhcmUgYWN0dWFsbHkgc3BlbGxlZCB3aXRoIGEgYyBpbiBldmVyeSBjYXNlKSB0byBtYXRjaCB0aGUgZmF0aGVyIG5hbWUgYW5kIHRoZSBsYXN0IG5hbWUuIApMZXQgbWUga25vdyBpZiB1IHdhbnQgdGhlIGxvd2Rvd24gb24gY2hpY2FzVGhhbmtzIGZvciB0aGUgcmVwbHkuIEkgZ29pbmcgd2l0aCBteSBHRiBhbmQgaGVyIGZhbWlseSBmb3IgYSB3ZWRkaW5nIHNvIHdlIGFyZSBzdGF5aW5nIGluIEFpckJOQiBpbiBDYXJ0YWdlbmEgYW5kIHdoYXRldmVyIGhvdGVsIHRoZSBicmlkZSByZWNvbW1lbmRlZCBmb3IgdGhlIHdlZGRpbmcgaW4gTWVkZWxsaW4uIApOYXR1cmFsbHksIGhlIG1pc3NlZCB0aGUgYmFjayBkb29yIHN0cmFpZ2h0IGRyYXcgdGhhdCBrZXB0IGhpbSBpbiB0aGUgcG90IHdoZW4gdGhlIGZsb3Agd2FzIGJldCwgZ2F2ZSB1cCBvbiB0aGUgdHVybiwgYW5kIHRoZW4gZmlyZWQgb2ZmIGEgcG90IHNpemVkIGJldCBvbiB0aGUgcml2ZXIuIApXZSBhbGwga25vdyBpbiBhIGZldyBkYXlzLlJvYmluc29uIENhbm86IFdobyB3YXMgdHJhZGVkIHRvIFNlYXR0bGUgYW5kIGdvdCBhIG1heCBkZWFsIHZpYSBSb2MgTmF0aW9uLiJBbmQgdGhlIG1hbiB3aG8gbWFkZSAidGhlIFlhbmtlZSBoYXQgbW9yZSBmYW1vdXMgdGhhbiBhIFlhbmtlZSBjYW4iIGhhcyBraWNrZWQgdGhpbmdzIG9mZiBieSBzaWduaW5nIGEgWWFua2VlOiBSb2JpbnNvbiBDYW5vLCB0aGUgWWFua2VlcyBBbGwgU3RhciBzZWNvbmQgYmFzZW1hbi4gCiJPdXIgZm9yY2VzIGhhdmUgYmVlbiBhYmxlIHRvIGNvbnRhaW4gYWxsIHRoZXNlIHRoZSBjb21tdW5pcXVlIHNhaWQuIFRoZSBjb21tdW5pcXVlIGFsc28gc2FpZCB0aGF0IHR3byBOb3J0aCBWaWV0bmFtZXNlIEl0Y2xhdGNkIG5ld3MgcGFnZSB0aHJlZSBiYXR0YWxpb25zIGhhZCBiZWVuIG9yZGVyZWQgdG8gbW92ZSBmcm9tIE1haGF4YXkgdG93YXJkIFRoYWtoZWssIGEgdG93biBvbiB0aGMgTWMgIFdoZXJlIGZvIGYgdXJuIFNIRUZGSUVMRCBMQUtFIE1heSIgb3IgY2xlY3QgSmFjayBNaWxsZXIgdG8gbGllIHN1b3JuIEluIFNhdHVyZGF5IHBhZ2UgMjkuIApLZWVwIGFuIGV5ZSBvbiB5b3VyIGNyZWRpdCwgaWYgc2hlJ3MgZ3JlZWR5IGxpa2UgeW91IG1lbnRpb25lZC4gClRoZSAxIDIgZ2FtZSBsb2NhbGx5IGlzIHRoZSBzYW1lIHdheS4gCkkganVzdCBnb2luZyB0byBwb3N0IG15IHBlcnNwZWN0aXZlIGhlcmUgZnJvbSB3aGVuIHRoaXMgcGFydGljdWxhciBydWxlIHdhcyBtYWRlIGFuZCBzb21lIGluc2lnaHQgaW50byBvdXIgcHJhY3RpY2UuIApJIHRoaW5rIHdlIEFtZXJpY2FucyBhcmUgZ29pbmcgdG8gdGFrZSBJbmRpYSBzaWRlIGJlY2F1c2Ugd2UgbmVlZCB0aGVtIHRvIGNvbnRhaW4gQ2hpbmEuIApCZXR0ZXIgdG8gcGxhbiBmb3IgYSBsb25nIHBhZGRsZSB0aGFuIHRvIGdldCBkaXNjb3VyYWdlZCB3aGVuIHlvdSBhcmUgb3V0IGxvbmdlciB0aGFuIHlvdSB0aG91Z2h0IHlvdSB3b3VsZCBiZS4uIApNciBIb2RnbWFuIGZlbmRlZCBvZmYgcXVlc3Rpb25zIGFib3V0IGhvdyBtdWNoIGhpcyBwYXJ0eSBoYWQgcmVjZWl2ZWQgZnJvbSB0aGUgcG93ZXJmdWwgZ2FtaW5nIGxvYmJ5IHRvIGZ1bmQgYSBwcm8gcG9raWVzIGFkIGNhbXBhaWduLiAiSXQgd2FzIHRoZSBMYWJvciBQYXJ0eSB3aG8gYW5ub3VuY2VkIGEgcG9saWN5IHRoYXQgd2lsbCBjb3N0IGpvYnMgYW5kIHVuZGVyc3RhbmRhYmx5LCB0aGUgcGVvcGxlIHdob3NlIGpvYnMgYXJlIG9uIHRoZSBsaW5lIGhhdmUgcmVzcG9uZGVkLCIgaGUgc2FpZC4gCllvdXIgZmFjZSBoYXMgaXRzIG93biBtaW5pIHNwaW5hbCBjb3JkIHN5c3RlbSBjYWxsZWQgdGhlIHRyaWdlbWluYWwgbmVydmUuIApIb3VzZW1hdGVzIGRpZG4gdW5kZXJzdGFuZCB3aHkgaXQgd2FzIHNvIGVtb3Rpb25hbCBmb3IgbWUgYW5kIHRoYXQgYmVjYXVzZSBlc3BlY2lhbGx5ICh0aGUgY2VsZWJyaXRpZXMgd2hvIHdlcmVuIGZhbnMpIGRpZG4gdW5kZXJzdGFuZCBob3cgaW1wb3J0YW50IHRoZSBnYW1lIHdhcyBmb3IgbWUuIEZvciBoZXIgZW1vdGlvbmFsIHN0YXRlLCB0aGUgNDQgeWVhciBvbGQgY29tcCBiZWFzdCBleHBsYWlucyBzaGUgd2FzbiBhY3RpbmcgdG8gZ2V0IHN5bXBhdGh5Li4gClN0dSB3YXMgYWxzbyBhIHBhc3Npb25hdGUgYW5kIHRhbGVudGVkIGNvb2sgYW5kIHdvcmtlZCBhcyBhIHByaXZhdGUgY2hlZiBmb3Igc2V2ZXJhbCBmb3J0dW5hdGUgZmFtaWxpZXMgaW4gdGhlIEFzcGVuIGFyZWEuIE9uZSBvZiBoaXMgZmF2b3JpdGUgcGFzdGltZXMgd2FzIHBsYXlpbmcgb25saW5lIHBva2VyLCBhcyBoZSBhbHdheXMgaGFkIGEga2VlbiBzZW5zZSBvZiBib3RoIG9kZHMgYW5kIG1vbmV5LiAKSGksIEkgaGFkIGEgcGllcmNpbmcgZG9uZSB0aGVyZSBhIGNvdXBsZSBvZiB5ZWFycyBhZ28gYmVmb3JlIEkga25ldyBhbnkgYmV0dGVyLCBhbmQgSSB3b3VsZG4gcmVjb21tZW5kIGdvaW5nIGJhY2suIFN1cmdpY2FsIHN0ZWVsIGlzIG5vdCBoaWdoIHF1YWxpdHkuIEkgcmVtZW1iZXIgdGhleSB0b2xkIG1lIHRoZXkgc3RvY2tlZCB0aXRhbml1bSwgYnV0IGl0IHdhcyBhbGwganVzdCBkaXNwbGF5ZWQgaW4gYSBjYWJpbmV0IGFuZCBub3Qgc3RlcmlsaXNlZCBiZWZvcmUgdXNlLiBUaGV5IGFsc28gZ2F2ZSBtZSBiYWQgYWZ0ZXJjYXJlIGFkdmljZS4KR2VuZXJhbGx5LCB0aGVzZSBjYW4gYmUgZG9uZSBpbnRvIHR3byBjYXRlZ29yaWVzLiBPbmUgY2F0ZWdvcnkgb2YgZGVwb3NpdGluZyBwb2tlciBtb25leSBpcyB0aHJvdWdoIGRpcmVjdCBtZXRob2RzIHdoZXJlaW4gcGxheWVycyB1c2UgYSBjcmVkaXQgY2FyZCBvciBkcmFmdCBpbiBvcmRlciB0byBkZXBvc2l0IG1vbmV5LiAKSWYgZ2V0dGluZyB5b3VyIGtpZCBpbiBhIGNhciBzZWF0IGlzIHN1Y2ggYSBjaGFsbGVuZ2UgZm9yIHlvdSB0aGF0IHlvdSByYXRoZXIgbGVhdmUgdGhlbSBob21lIGFsb25lLCBmdWNraW5nIGRvbiBoYXZlIG9uZS4gCk15IGhlYXJ0IGh1cnRzISBJIHdhcyB0b2xkIHRvIGdldCBhcyBtdWNoIGluZm8gYWJvdXQgbXkgZmFtaWx5IGFzIHBvc3NpYmxlLCBidXQgbXkgZmFtaWx5IGFyZSBub3QgdGhlIGtpbmQgb2YgcGVvcGxlIHdobyBhcmUgdmVyeSBsb3ZleSBkb3ZleSwgd2hlbiBJIGxvc3QgREQsIHRoZSBtb3N0IHRoYXQgd2FzIHNhaWQgd2FzICIgSXQncyBnb2RzIHdpbGwiIHNoZSB3YXNuJ3QgbWVudCBmb3IgeW91Ii4gClRyZW5kIDE6IEZ1biB3aXRoIGZsb3JhbHMgcm95YWwgd2VkZGluZyEgVGhlIGZsb3JhbCBhcmNoZXMgYXQgdGhlIHJveWFsIHdlZGRpbmcgZGVmaW5pdGVseSBzcGFya2VkIGEgdHJlbmQuIE5vdCBvbmx5IGRvIHdlIGV4cGVjdCB0byBzZWUgbW9yZSBvZiB0aGVzZSBpbiAyMDE5IGFyb3VuZCBkb29yd2F5cyBhbmQgZW50cmFuY2UgcG9pbnRzLCB3ZSBhcmUgZ29pbmcgdG8gc2VlIGhhbmdpbmcgZmxvcmFsIGluc3RhbGxhdGlvbnMgYWJvdmUgdGFibGVzLCBhbmQgYmVhdXRpZnVsIGZsb3JhbCBmb2NhbCBwb2ludHMuClNvIG5vdyB3ZSBoYXZlIGhldGVyb3NleHVhbCBjb3VwbGVzIHdpdGggbW9uZXkgcmVudGluZyB0aGUgd29tYnMgb2YgcG9vciB3b21lbiBzbyB0aGV5IGNhbiBoYXZlIHRoZSBmdWxsIHJpZ2h0cyBhbmQgYmVuZWZpdHMgb2YgYmVpbmcgbWFycmllZCBhbmQsIHBlcmhhcHMgbW9yZSBpbXBvcnRhbnRseSwgcmVwcm9kdWN0aXZlLgpGb3IgZXhhbXBsZSwgeW91IG1pZ2h0IGJlIHRlYWNoaW5nIHN0dWRlbnRzIGhvdyB0byBkbyBtdWx0aXBsaWNhdGlvbi4gCkluY2x1ZGluZyBhaXJmYXJlcyBhbmQgYWNjb21tb2RhdGlvbiAodGhhdCBqdXN0IHRvb2sgbWUgdGhyZWUgdHJpZXMgdG8gc3BlbGwgYnkgdGhlIHdheSwgbXkgZWR1Y2F0aW9uIGhhcyBmYWlsZWQgbWUpIEkgcmVja29uIEkgY291bGQgZG8gaXQgZm9yIGFzIGxvdyBhcyBBVSQ1MDAgaWYgSSBzdGF5IGluIGEgaG9zdGVsIGFuZCBmbHkgdXNpbmcgYSBidWRnZXQgYWlybGluZS4uIApHYW1lIDYgICBMb3N0ClJlZCBWZWx2ZXQgQ3VwY2FrZXMgQW15IGFteWx6QWxsIFJlY2lwZXMxLzIgY3VwIGJ1dHRlcjEgMS8yIGN1cHMgd2hpdGUgc3VnYXIyIGVnZ3MxIGN1cCBidXR0ZXJtaWxrMSBmbHVpZCBvdW5jZSByZWQgZm9vZCBjb2xvcmluZzEgdGVhc3Bvb24gdmFuaWxsYSBleHRyYWN0IDEgMS8yIHRlYXNwb29ucyBiYWtpbmcgc29kYTEgdGFibGVzcG9vbiBkaXN0aWxsZWQgd2hpdGUgdmluZWdhcjIgY3VwcyBhbGwgcHVycG9zZSBmbG91cjEvMyBjdXAgdW5zd2VldGVuZWQgY29jb2EgcG93ZGVyMSB0ZWFzcG9vbiBzYWx0IDEuIFByZWhlYXQgb3ZlbiB0byAzNTAgZGVncmVlcyBGICgxNzUgZGVncmVlcyBDKS4gCkkgZ2F0aGVyZWQgZnJvbSB0aGUgdG9uZSBvZiBoaXMgVXJkdSBsYW5ndWFnZSBxdWVzdGlvbiB0aGF0IGhlIHdhcyBhc2tpbmcgaWYgSSB3YXMgZnJvbSBQYWtpc3Rhbi4gSSB3YXMgc29ycnkgdG8gZGlzYXBwb2ludCBoaW0uIApHaXZlbiB3aGF0IHlvdSBkaXNjdXNzaW5nIGlzIGlsbGVnYWwgaW4gbWFueSBwbGFjZXMsIGNvbnRyYWN0cyBtYXkgbm90IGV2ZW4gYmUgcG9zc2libGUuCk9uIEEgUnVzaCBQb2tlciBDYXJkIFByb3RlY3RvciBjYW4gaGVscCB5b3UgdG8gc2F2ZSBhbGwgdGhlc2UgY2FyZHMgZXZlbiBpZiB5b3Uga2VlcCB0aGVtIGluIHlvdXIgZmlzdHMuIFlvdSBjYW4gYmUgdGhlIGxlYWRpbmcgcG9rZXIgZ3VydSBpbiB0aGUgd29ybGQgb2YgY2FzaW5vIG5vdy4gCkhlIHdhcyBhIE5hemkgY29sbGFib3JhdG9yLiBOemhkZWggY3JlYXRlZCB0aGUgaW5mYW1vdXMgQXJtZW5pYW4gTGVnaW9uLCBhcHByb3hpbWF0ZWx5IDMwLDAwMCBtZW4sIGFuZCBtYWRlIHRoZW0gYXZhaWxhYmxlIHRvIHRoZSBOYXppIGNvbW1hbmQgZHVyaW5nIFdvcmxkIFdhciBJSS4gQXMgcGFydCBvZiBHZXJtYW4gV2Vocm1hY2h0LCB0aGUgQXJtZW5pYW4gTGVnaW9uIGZvdWdodCBpbiB0aGUgQ3JpbWVhbiBwZW5pbnN1bGEgYW5kIGluIHRoZSBDYXVjYXN1cywgYXMgd2VsbCBhcyBpbiBzb3V0aGVybiBGcmFuY2UsIGZ1cnRoZXIgYXNzaXN0aW5nIHRoZSBOYXppcyBieSByb3VuZGluZyB1cCBKZXdzIGFuZCBvdGhlciAidW5kZXNpcmFibGVzIiBiZWhpbmQgdGhlIEdlcm1hbiBhcm15IGFzIGl0IHN3ZXB0IGFjcm9zcyBSdXNzaWEsIGFuZCBvcmdhbml6ZWQgZGVhdGggbWFyY2hlcyB0byBjb25jZW50cmF0aW9uIGNhbXBzLi4gClVzZWQgdG8gdGhpbmsgb2YgdGhlIEZvdW5kZXIgYXMgYW4gZXhlcmNpc2UgZm9yIHN0cmVuZ3RoZW5pbmcgdGhlIGJvZHkuIApTYWlkIHdvcmtpbmcgd2l0aCBLbGVpbiB3YXMgbGlrZSBhIGNsYXNzIGluIHRoZSBzdHVkaW8uLiAKQW5kIHRoZW4gdGhleSBkaWQgaXQgYWdhaW4gYXQgdGhlIGVuZC4hZm9yIFRGMywgSSBhIGxpdHRsZSB0b3JuIGZvciB3aGF0IEkgd2FudCB0byBzZWUgZm9yIHRoZSBjYW1wYWlnbi4gCkV1cm9wYTIwMTYgICA1IHBvaW50cyAgc3VibWl0dGVkIDYgbW9udGhzIGFnbwpUaGUgb2J2aW91cyBzb2x1dGlvbiBraWxsIGFsbCB0aGUgcmVtYWluaW5nIFBhbGVzdGluaWFucyBpcyBvZmYgdGhlIHRhYmxlIGZvciB0aGUgdGltZSBiZWluZywgYnV0IHdoYXQgY2hvaWNlIGRvIHRoZXkgaGF2ZT8gVGhleSBhcmUgdW53aWxsaW5nIHRvIGludGVncmF0ZSB0aGVzZSBwZW9wbGUgaW50byBJc3JhZWxpIHNvY2lldHksIGZvciBmZWFyIG9mIGEgTXVzbGltIG1ham9yaXR5LiBQZXJoYXBzIHRoZXkgY291bGQgY29ucXVlciBhIG5laWdoYm9yaW5nIGNvdW50cnkgYW5kIGRvIGEgZm9yY2VkIHJlc2V0dGxlbWVudC4gT3IsIGlmIHRoZXkgd2FudCB0byBiZSBuaWNlIGFib3V0IGl0IGludmVzdCBhIHRvbiBvZiBtb25leSBpbiBhIG5laWdoYm9yaW5nIGNvdW50cnksIG9uIHRoZSB0YWNpdCBjb25kaXRpb24gdGhhdCBpdCBhY2NlcHRzIFBhbGVzdGluaWFucyBmb3IgcmVsb2NhdGlvbi4uIApCdXQgZXZlbiBpZiB0aGUgQnJpdGlzaCBFbXBpcmUgc3Vydml2ZXMsIGl0IGlzIHByZXR0eSBjbGVhciB0aGF0IHRoZSBBbWVyaWNhbiBFbXBpcmUsIGxpa2UgdGhlIFNvdmlldHMgYmVmb3JlIHRoZW0sIHdpbGwgY29sbGFwc2UgdW5kZXIgdGhlIHdlaWdodCBvZiB0aGUgZW5kbGVzcyB3YXIgaW4gQWZnaGFuaXN0YW4uIApXZSBwbGVhc2UgZ2V0IEJyb3pvdmljIGFzIHRoZSBtYWluIHJld2FyZCBuZXh0IG1vbnRoPyBIZSBkZXNlcnZlZCBhIGhpZ2hlciB0aGFuIDgwIG92ZXJhbCByYXRpbmcgdG8gc3RhcnQgd2l0aCBhbmQgaXMgeWV0IHRvIGdldCBhIHNwZWNpYWwgY2FyZCAoZGFtbiBLb3ZhY2ljIHN0b2xlIGhpcyBzcG90IG9uIEZVVG1hcykuCkJvdGggdGltZXMgaGUgbWFkZSBzb21lIGxhbWUgZXhjdXNlLCBjb3VwbGVkIGl0IHdpdGggYSBsb25nIHN0b3J5LCBhbmQgdGhlbiBibGFtZWQgbWUgZm9yIG5vdCB0cnVzdGluZyBoaW0uLiAKUHJpZGUgaGFzIGRydWcgdXNlIGJlY2F1c2UgaXQgaW4gU0YuIEkgY2FuIHNwZWFrIGZvciBvdGhlciBjaXRpZXMgdGhvdWdoLiBJIGNhbiBzYXkgdGhhdCBwcmlkZSBpcyBhIHRyYXNoIGV2ZW50IGFuZCB3YXkgb3ZlciBibG93bi4gSSBkbyBsaWtlIGFsbCBvZiB0aGUgcmFpbmJvd3MgZXZlcnl3aGVyZSwgSSBkaXNsaWtlIHRoZSB0cmFmZmljIGFuZCBob3cgZXZlcnlvbmUgc2VlbXMgc2V4IG9ic2Vzc2VkIGZvciBhIHdlZWsuIFNhbWUgZm9yIEZvbHNvbSBzdHJlZXQgZmFpciAoYWthOiBLaW5reSBQcmlkZSksIGJ1dCBhdCBsZWFzdCB0aGF0IGRvZXNuIHRha2Ugb3ZlciB0aGUgY2l0eSwgaXQganVzdCBzdGlja3MgdG8gU09NQS4KSW4gb25lIHNlbnNlLCB3ZSBkbyBoYXZlIGZpbml0ZSByZXNvdXJjZXMsIGJlY2F1c2Ugd2UgY2FuIGNyZWF0ZSBtb3JlIG5pdHJvZ2VuIG91dCBvZiBub3doZXJlLCB3ZSBoYXZlIHRha2UgaXQgZnJvbSBzb21ld2hlcmUuIEJ1dCwgaW4gYW5vdGhlciBzZW5zZSwgd2UgaGF2ZSBpbmZpbml0ZSByZXNvdXJjZXMsIGJlY2F1c2Ugd2UgaGF2ZSBpbmZpbml0ZSByZXNvdXJjZWZ1bG5lc3MuIApSZWNodHMgdm9uIHVucyBkZXIgbGljaHRkdXJjaGZsdXRldGUgQmFkZXNhYWwsIGluIGRlbSBkZXIgZnJlaXN0ZWhlbmRlbiBXYW5uZSBlaW4gS3Jpc3RhbGxsZXVjaHRlciB3b2hubGljaGUgQXRtb3NwaCB2ZXJicmVpdGV0LiAKSSBhZG1pdCBpdC4gSSB3aWxsIG5ldmVyIHVuZGVyc3RhbmQgaG93IHRoZSBVUyBnb3Zlcm5tZW50LCBlc3BlY2lhbGx5IHRoZSBDb25ncmVzcyBhbmQgdGhlIFN1cHJlbWUgQ291cnQsIHdvcmsuIFRha2UgdGhlaXIgbm90aW9uIG9mIHRoZSBGaXJzdCBBbWVuZG1lbnQuIApCVE4gYWxzbyBpcyB1bmxpa2VseSB0byBoYXZlIGEgaGFuZCB0aGF0IGNhbiBjYWxsIHlvdXIgamFtLCBldmVuIGlmIGhlIGlzIHNob3J0IHRvby4gCkluIHBva2VyLCB0aGUgcm95YWwgZmx1c2ggaXMgdGhlIGJlc3QgaGFuZCB5b3UgY2FuIGhhdmUuIApTb21lIHF1ZXN0aW9uZWQgaGlzIGV4cGVyaWVuY2UsIHdoaWxlIG90aGVycyBhc2tlZCB3aHkgbW9yZSBwZW9wbGUgd2VyZW4gaW50ZXJ2aWV3ZWQgZm9yIHRoZSBwb3NpdGlvbi4uIApJZiBoZSBiZWF0cyBLYWlraSwgd2hpY2ggaXMgdmVyeSBwbGF1c2libGUsIHNpbmNlIGhlIGdvdCBtb3JlIHZvdGVzIHRoYW4gaGltIGxhc3Qgcm91bmQsIHdlIG1heSBzZWUgb25lIG9mIHRoZSBjcmF6aWVzdCBzdHJlYWtzIGluIGJlc3QgY2hhcmFjdGVyIGhpc3RvcnkuIApJbjogV2lsc29uLCBNLiwgV2Fsc2gsIFYuIGFuZCBQYXJraW4sIEIuIChlZC4pIFNwb3J0IGFuZCB0aGUgQnJhaW46IFRoZSBTY2llbmNlIG9mIFByZXBhcmluZywgRW5kdXJpbmcgYW5kIFdpbm5pbmcsIFBhcnQgQiBFbHNldmllci4gcHAuIDMzOSAzNTlHdW5zbGluZ2VycywgcG9rZXIgcGxheWVycywgYW5kIGNoaWNrZW5zIDI6IERlY2lzaW9uIG1ha2luZyB1bmRlciBwaHlzaWNhbCBwZXJmb3JtYW5jZSBwcmVzc3VyZSBpbiBzdWJlbGl0ZSBhdGhsZXRlcy5QYXJraW4sIEIuIGFuZCBXYWxzaCwgVi4gMjAxNy4gR3Vuc2xpbmdlcnMsIHBva2VyIHBsYXllcnMsIGFuZCBjaGlja2VucyAyOiBEZWNpc2lvbiBtYWtpbmcgdW5kZXIgcGh5c2ljYWwgcGVyZm9ybWFuY2UgcHJlc3N1cmUgaW4gc3ViZWxpdGUgYXRobGV0ZXMuIApJIHdvcmsgaW4gTWFzc2FjaHVzZXR0cyB3aGVyZSBjaGFydGVycyBhbmQgcHJpdmF0ZSBzY2hvb2xzIGFyZSBtYW5hZ2VkIGFuZCBwYWlkIGZvciBvdXQgb2YgdGhlIHB1YmxpYyBlZHVjYXRpb24gYnVkZ2V0LiBUaGVyZSB2ZXJ5IGxpbWl0ZWQgb3ZlcnNpZ2h0IGFuZCB0aGV5IHN3ZWVwIGEgbG90IHVuZGVyIHRoZSBydWcgYmVjYXVzZSB0aGV5IGNhbi4gU2Nob29scyBhYnNvbHV0ZWx5IHNob3VsZCBiZSBtYW5hZ2VkIGJ5IGEgaGlnaGVyIGdvdmVybmluZyBib2FyZCwgYmVjYXVzZSBpZiB0aGV5IGFyZW50LCBhYnVzZXMgcnVuIHJhbXBhbnQuIApUaGUgYmlsbGlvbmFpcmUgaGFuZGVkIG92ZXIgaGlzIE1hc3NhY2h1c2V0dHMgZHJpdmVyIGxpY2Vuc2UuIApFdmVuIGlmIGl0IGEgc3Rvcnkgb3Igc2V0dGluZyB0aGF0IGlzIHN1cGVyIGltcG9ydGFudCB0byB5b3UsIG5vdGhpbmcgc2F5cyB5b3UgY2FuIGRvIGEgcmVib290IHVudGlsIHlvdSBnZXQgaXQgcmlnaHQuIEkgZGlkIHRoZSBzYW1lIGNvbWljLCBTeW5hcHRpYyBNaXNmaXJpbmcsIHRocmVlIHRpbWVzLCBjaGFuZ2luZyB0aGUgc3RvcnkgYW5kIHN0eWxlIHVudGlsIGl0IGZlbHQgcmlnaHQuClRoZXkgd291bGQgaGF2ZSBoYWQgdG8gZHJhZyBtZSBvdXQgb2YgdGhlIHJpbmcgaWYgSSB3YXMgc3RpbGwgc3VjY2Vzc2Z1bCBhbmQgbWFrZXMgdG9ucyBvZiBnb29kIGNsZWFuIGNhc2guIApUaGV5IHRlbGwgeW91IHRoZSBjYWxvcmllcyBvbiBmYXN0IGZvb2Qgbm93LiBXYXRjaCB0aGlzIHNoaXQ6IHlvdSBjYW4gZWF0IGEgbm9ybWFsIHNpemVkIGJ1cmdlciBmb3IgYWJvdXQgNDAwIGNhbG9yaWVzLiBUaGF0IGEgbm9ybWFsIG1lYWwgc2l6ZS4gCk5vdCBzdXJlIHdoeSB5b3UgZ290IGRvd252b3RlZCBmb3IgYXNraW5nIGEgcXVlc3Rpb24uIEl0IGJlY2F1c2Ugb2YgdGhlIGFic29sdXRlbHkgb2JzY2VuZSB2YXJpYW5jZSBjb21iaW5lZCB3aXRoIHRoZSB2ZXJ5IHNtYWxsIGFuZCBzdGlsbCBkaW1pbmlzaGluZyBlZGdlcyBpbiB0aGUgZ2FtZXMuIFlvdSBoYXZlIHRvIHB1dCBpbiByaWRpY3Vsb3VzIHZvbHVtZSBhbmQgZGVhbCB3aXRoIHRoZSBtZW50YWwgYXNwZWN0IG9mIHRoZSBoYXJzaGVzdCBkb3duc3dpbmdzIGluIHBva2VyLiAKR29vZCB0aGluZyB5b3UgYm91bmNlZCB1cCBvdXQgb2YgdGhlcmUgYXQgbGVhc3QgdGhpcyBwcm9mIHdhc24gYWN0dWFsbHkgb25lIG9mIHlvdXIgdGVhY2hlcnMsIHRoYW5rIGdvb2RuZXNzLi4gCkluIHRoaXMgaW5zdGFuY2UsIGEgdHVybm92ZXIgY3ljbGUgaXMgbWVhc3VyZWQgaW4gdGVybXMgb2YgcGVyY2VudGFnZSBvZiB0b3RhbCBpbnZlbnRvcnkgYmVpbmcgc29sZCBhbmQgdGhlIHRpbWUgaXQgdGFrZXMgdG8gc2VsbCBpdC4gCldlIGNhbiBpbmZlciBmcm9tIHRoYXQgaGUgcHJvYmFibHkgbm90IGdvaW5nIHRvIGdldCB0b3Agb2YgdGhlIGxpbmUgcGFydHMsIHNvIHllcywgcGVvcGxlIHdvdWxkIG5hdHVyYWxseSByZWNvbW1lbmQgbWlkcmFuZ2UgcGFydHMuIApIZSBzZW50IGhpcyBnaXJsZnJpZW5kIE1hcmlsb3UgRGFubGV5IHRvIHZpc2l0IGhlciBmYW1pbHkgaW4gdGhlIFBoaWxpcHBpbmVzIHR3byB3ZWVrcyBiZWZvcmUgdGhlIGF0dGFjayBhbmQgd2lyZWQgaGVyICQxNTAsMDAwIHdoaWxlIHNoZSB3YXMgdGhlcmUuCkFzIHRoZSB0b3VybmFtZW50IHByb2dyZXNzZXMgbW9zdCBvZiB0aGUgd2Vha2VyIHBsYXllcnMgd2lsbCBiZSBlbGltaW5hdGVkLiAKQnV0IHRoYXQgZG9lc24gc2hpZWxkIGhpbSBmcm9tIGNyaW1pbmFsIGxpYWJpbGl0eSwgbm90IGV2ZW4gY2xvc2UuIApGb3IgZXhhbXBsZSwgR0UgaXMgYWJsZSB0byByZXBsYWNlIGEgdGhpcmQgb2YgdGhlIHBhcnRzIG9uIGFuIGFpcmNyYWZ0IGVuZ2luZSB1c2luZyAzRCBwcmludGluZyBhbmQgYnkgZnVzaW5nIG1hdGVyaWFscyB0b2dldGhlciB0aGV5IGNhbiByZWR1Y2UgdGhlIG92ZXJhbGwgbnVtYmVyIG9mIHBhcnRzLiAKVXNlZCB0byBsaXZlIG5lYXIgYSBmYXJtIGFuZCB0aGUgZmFybWVyIHdhcyBhIGNsb3NlIGZhbWlseSBmcmllbmQuIE15IGJ1ZGRpZXMgYW5kIEkgd291bGQgZ28gb3V0IGluIHRoZSBmaWVsZCBhZnRlciB0aGUgaGF5IHdhcyBiYWxlZCB3aXRoIHBhaW50YmFsbCBndW5zLiBOb3cgdGhpcyBpcyB3aGVuIHdlIHdlcmUgYWJvdXQgMTAgMTIgeWVhcnMgb2xkIGFuZCB0aGUgaGF5IGJhbGVzIHdlcmUgb3ZlciA2IGZlZXQgdGFsbC4uIApUeXBpY2FsIGVkdWNhdGlvbmFsIGFubm90YXRpb25zIGZvciBTaGFrZXNwZWFyZSBIYW1sZXQgZXhwbGFpbiB0aGUgbGluZSAiZ2V0IHRoZWUgdG8gYSBudW5uZXJ5ISBHTyEiIGJ5IGNsYWltaW5nIHRoYXQgIm51bm5lcnkiIHdhcyBFbGl6YWJldGhhbiBzbGFuZyBmb3IgYSBicm90aGVsLgpUaGUgb25lcyBJIHdvbid0IGRhdGUgYXJlIHRoZSBvbmVzIHRoYXQgY29uc3RhbnRseSBwb2ludCBvdXQgaG93IHRhbGwgSSBhbS4gCndpZWxkaW5nIHRodWcgYXNzYXVsdHMgbWFzc2V1c2UgZm9yIHJlZnVzaW5nCkkgcGxheSBhIHRvbiBvZiBwb2tlciBvbiB0aGlzIGdhbWUgYW5kIGhlcmUgaXMgbXkgdGFrZS4gVGhlIFZhbGVudGluZSBnYW1lIHNlZW1zIHRvIGJlIG9uIHRoZSB1cCBhbmQgdXAuIEFmdGVyIHRoYXQgSSBhbSBub3Qgc28gc3VyZS4gTGFzdCBuaWdodCBJIHBsYXllZCBpbiBTdCBEZW5pcyBhbmQgb25lIGd1eSB3YXMgREVTVFJPWUlORyBldmVyeW9uZS4gU28gaXQgZW5kcyB1cCBtZSBhbmQgaGltLiBIZSBrbm9ja3MgbWUgb3V0LiBJIGRlY2lkZSB0byBzZWUgaWYgaGUgaXMgY2hlYXRpbmcuIEkgZ28gYWxsIGluIGJlZm9yZSB0aGUgZmxvcCBsaWtlIDEwIHRpbWVzLiBIZSB3b24gOSBvdXQgb2YgMTAuIExpa2UgaGFsZiBvZiB0aG9zZSBJIGhhZCBtdWx0aXBsZSBmYWNlIGNhcmRzIGFuZCBldmVyeSB0aW1lIGhlIHdvdWxkIG1hdGNoIGl0IG9yIGhhdmUgYmV0dGVyLiBUaGUgb25lIHRpbWUgSSBoYWQgQWNlIEtpbmcgYW5kIGhlIGhhcyAyIHF1ZWVucy4gSXQgc2VlbWVkIHJpZ2dlZCBmb3Igc3VyZS4gSSB3aWxsIHN0YXkgYXdheSBmcm9tIHRoYXQgbG9jYXRpb24gZm9yIHBva2VyLiBWYWxlbnRpbmUgaXMgbXkgc3BvdC4gU2FkIEkgd2FzIGludGVyZXN0ZWQgaW4gcGxheWluZyB3aXRoIHNvbWUgbmV3IGNoYXJhY3RlcnMuIEkgd2VudCBvbiBhIHN0cmFpZ2h0IHJhbXBhZ2UgYWZ0ZXIgdGhhdCBhbmQgdG9vayBvdXQgbGlrZSA0MCBwZW9wbGUgYW5kIGdvdCBhd2F5LgpNaWNrZXkgaXMgam9pbmluZyBmb3JjZXMgd2l0aCBhIGdhbGF4eSBmYXIsIGZhciBhd2F5LgpXaGF0IHRoaXMgbWVhbnMgaXMgdGhhdCB0aGUgZmFzY2lhIGNhbiBhZmZlY3QgdGhlIHdob2xlIGJvZHksIG5vdCBqdXN0IG9uZSBhcmVhIG9yIHN5c3RlbS4uIApTbyBtYXliZSBpdCB0aW1lIHdlIEFtZXJpY2FucyB0YWtlIHRoZSBwdXJzdWl0IG9mIGhhcHBpbmVzcyBiYWNrIGludG8gb3VyIG93biBoYW5kcz8gSXQgdGltZSB0byBhZG1pdCB0aGF0IHdvcmtpbmcgYWxsIHRoZSB0aW1lIGlzIGEgZGVhZCBlbmQgZm9yIGV2ZXJ5b25lIGJ1dCB0aGUgcGVvcGxlIHdobyBvd24gdGhlIG1lYW5zIG9mIHByb2R1Y3Rpb24uIApUdWVzZGF5LiBCdXQgYXQgdGhhdCB0aW1lIGl0IGNhbWUgdXAgYSBmb290IGFuIGhvdXIuIApZb3Ugc2ltcGx5IGhhdmUgdG8gY2xpY2sgYSBmZXcgYnV0dG9ucyBhbmQgeW91cmUgcmVhZHkgdG8gcGxheS4gCllvdSBkbyBub3QgbmVlZCBhbnkgYmVsaWVmcyB0byBkbyB0aGlzLiBJdCBpcyBhbiBhY3Rpb24gb2YgdGhlIGJvZHkgYW5kIHRoZSBtaW5kLi4gCk9ubHkgYSBzbWFsbCBwZXJjZW50YWdlIGFjdHVhbGx5IGdldCB0byBhIGJ1bGxmaWdodGluZyByaW5nIChJIHRoaW5rIGl0IHdhcyAxLzYsIDEvNjAsIGRvbid0IHJlbWVtYmVyIGhvbmVzdGx5KSwgd2hpbGUgbW9zdCBvZiB0aGVtIChhbGwgdGhlIGZlbWFsZXMgdG8gYmVnaW4gd2l0aCkgbmV2ZXIgZG8sIGFuZCB0aGV5IGxpdmUgYSB2ZXJ5IGZyZWUgYW5kIG9wZW4gcmFuZ2Uga2luZCBvZiBsaWZlLCBzZWNsdWRlZCBmcm9tIGNvbnRhY3Qgd2l0aCBodW1hbnMgYW5kIGxpdmluZyB2ZXJ5IHdlbGwuIENvbXBhcmVkIHRvIGluZHVzdHJ5IGJyZWVkaW5nIG9mIGNhdHRsZSBmb3IgbWVhdCBhbmQgbWlsaywgdGhleSB0cnVseSBsaXZlIGEgcHJpdmlsZWdlZCBsaWZlLiAKSWYganVzdCBvbmUgb3BlcmF0b3IgY2FuIGJyaW5nIGluIG92ZXIgJDEwMCBtaWxsaW9uIGluIHJldmVudWUgc2ltcGx5IHRocm91Z2ggc3BvcnRzIGJldHRpbmcsIGltYWdpbmUgaG93IE9yZWdvbidzIGVjb25vbXkgY291bGQgYmVuZWZpdCBpZiB0aGUgd2lkZXIgZ2FtYmxpbmcgY29tbXVuaXR5IHdlcmUgYWxsb3dlZCBpbi4gCkhlcmUgYXQgdGhpcyBBQUEgRm91ciBEaWFtb25kIFNhbiBEaWVnbyBob3RlbCwgeW91IGNhbiBleHBsb3JlIG9uZSBtaWxlIG9mIGJlYWNoLCBmaXZlIHN3aW1taW5nIHBvb2xzLCBhbmQgZW5qb3kgdmFyaW91cyBhbWVuaXRpZXMgaW5jbHVkaW5nIHRlbm5pcyBjb3VydHMsIGFuIDE4IGhvbGUgcHV0dGluZyBjb3Vyc2UsIGJlYWNoIGNydWlzZXJzLCBib25maXJlIHBpdHMsIGFuZCBhIHByaXZhdGUgbWFyaW5hIGVxdWlwcGVkIHdpdGggc2FpbGJvYXRzLCBqZXQgc2tpcywgYW5kIGtheWFrcy4gCkFuIGVkdWNhdGVkLCBkaXNjaXBsaW5lZCBwbGF5ZXIgaGFzIGEgYmlnIGVkZ2UgYWdhaW5zdCBhIHBsYXllciB3aG8gaXMgdGhlcmUgZm9yIHNpbXBsZSByZWNyZWF0aW9uLCBvciBqdXN0IHRvIGdhbWJsZSwgd2l0aG91dCByZWdhcmQgZm9yIG9kZHMgYW5kIHByb2JhYmlsaXR5LiBBZnRlciB0aGUgZmlyc3QgdGltZSB5b3UgdmlzaXQsIHlvdSBrbm93IGV4YWN0bHkgaG93IG11Y2ggaXMgdGhlIG1heGltdW0geW91IGxvc2UgZWFjaCB0aW1lIHlvdSBwbGF5LCBhbmQgb25jZSBpbiBhIHdoaWxlIHlvdSB3aW4uIApTaWRlIGVmZmVjdHMgZnJvbSBwcm9zdGF0ZSBjYW5jZXIgdHJlYXRtZW50IGFyZSBkaWZmZXJlbnQgZnJvbSBvbmUgbWFuIHRvIHRoZSBuZXh0LiAKVW50aWwgSSBhbSBwcm92ZW4gd3JvbmcsIHdob2xlaGVhcnRlZGx5LCB3aXRob3V0IGEgZG91YnQsIHN0ZXJvaWRzL3BlcmZvcm1hbmNlIGVuaGFuY2luZyBzdXBwbGVtZW50cyBvciB3aGF0ZXZlciBpcyBhIE5PTiBJU1NVRSEhLiAKRGFsbGFzIE1heW9yIFBybyBUZW0gRHdhaW5lIENhcmF3YXkgaW50ZXJ2ZW5lZCBpbiBwb2xpY2UgYWN0aW9uIGF0IGxvY2FsIHBva2VyIGhvdXNlClJQRyBzdGFuZHMgZm9yIHJvbGUgcGxheWluZyBnYW1lcy4gVGhpcyB1c2VkIHRvIGJlIGEgdmVyeSBwb3B1bGFyIG1vZGFsaXR5LCBidXQgbm90IGluIHRoZSBvbmxpbmUgYXJlbmEuIEdhbWVzIGxpa2UgRHVuZ2VvbnMgYW5kIGRyYWdvbnMgaGF2ZSBvZnRlbiBjcmVhdGVkIGEgaHVnZSBjb21tdW5pdHkuIEFzIHRoZSB5ZWFycyBnbyBieSwgdGhlcmUgaGFzIGJlZW4gYSAyMCUgcmlzZSBpbiBSUEcgZ2FtZS4gVGhpcyBpcyB3aGVyZSB1c2VycyBiZWNvbWUgYSBjaGFyYWN0ZXIgaW4gd2hpY2ggdGhleSBoYXZlIHRvIG1ha2UgZGVjaXNpb25zIHRoYXQgY2FuIGFmZmVjdCB0aGUgcmVzdWx0cyBhbmQgb3V0Y29tZSBvZiB0aGUgZ2FtZS4gSXQncyBhbG1vc3QgbGlrZSBhIHJlYWwgbGlmZSBzaXR1YXRpb24gd2hlcmUgZWFjaCBjaG9pY2UgeW91IG1ha2UgY2FuIGNoYW5nZSB5b3VyIGRlc3RpbnkuIE92ZXJhbGwsIGEgbG90IG9mIGdhbWVzIGZvY3VzIHRvd2FyZHMgY3JlYXRpbmcgYSByZWFsIGxpZmUgY29uY2VydCBmb3IgdGhlaXIgdXNlcnMuCkl0IGdpdmVzIHBsYXllcnMgYW4gb3Bwb3J0dW5pdHkgdG8gcGxhbiB0aGVpciBhdHRhY2suLiAKLiIgWWVzLCBvbmUgY2FuIHdlbGwgaW1hZ2luZSBNYWdyaXR0ZSBsaWtpbmcgdGhhdC4gCkEgZmV3IGhpZ2hsaWdodHM6IFdvbmRlcmZ1bCBQaXN0YWNoaW9zIHRoaW5rcyB5b3Ugc2hvdWxkICJQdXQgYSBzbWlsZSBvbiB5b3VyIHNuYWNrZmFjZSIgKGJ5IGVhdGluZyBXb25kZXJmdWwgUGlzdGFjaGlvcywgb2YgY291cnNlKS4gQSBmYW1pbHkgdHJpZXMgdXNpbmcgbWFzc2FnZSBjaGFpcnMgdG8gcmVkdWNlIHRoZWlyIHN0cmVzcyAoc3BvaWxlcjogaXQgZG9zbid0IHF1aXRlIHdvcmshKSBpbiBHZWljbydzIGxhdGVzdC4gQW5kIGEgdml2aWQsIGhpZ2ggZW5lcmd5IGFkIGZyb20gR29EYWRkeSwgZW1waGFzaXppbmcgaXRzIGVhc3kgdG8gdXNlIHdlYnNpdGUgYnVpbGRpbmcgdG9vbHMsIHBsYXlzIGxpa2UgYSBtaW5pIG11c2ljIHZpZGVvLi4gCkdpdmluZyBzb21lb25lIGFsbCB5b3VyIGxvdmUgaXMgbmV2ZXIgYW4gYXNzdXJhbmNlIHRoYXQgdGhleSBsb3ZlIHlvdSBiYWNrISBEb24gZXhwZWN0IGxvdmUgaW4gcmV0dXJuLCBmaXJzdCB3YWl0IGZvciBpdCB0byBncm93IGluIHRoZWlyIGhlYXJ0IGJ1dCBpZiBpdCBkb2VzbiBiZSBjb250ZW50IGl0IGdyZXcgaW4geW91cnMuIEl0IHRha2VzIG9ubHkgYSBtaW51dGUgdG8gZ2V0IGEgY3J1c2ggb24gc29tZW9uZSwgYW4gaG91ciB0byBsaWtlIHNvbWVvbmUsIGFuZCBhIGRheSB0byBsb3ZlLi4gCkdvYVRoaXMgYmVhY2ggc3RhdGUgY2FuIGVhc2lseSBiZSBjYWxsZWQgSW5kaWEgY2FzaW5vIGNhcGl0YWwgd2l0aCB0aHJlZSBvZmYgc2hvcmUsIGxpdmUgY2FzaW5vcyBob3VzZWQgaW4geWFjaHRzLCBhbmQgc2V2ZXJhbCBvbnNob3JlLiBUaGUgbmV3ZXN0LCBmb3VyZmxvb3JlZCBEZWx0aW4gUm95YWxlIG92ZXIgNDAsMDAwIHNxLiBmdC4gd2l0aCAyNiBnYW1lcywgMTIzIHRhYmxlcywgODUwIGdhbWluZyBwb3NpdGlvbnMsIDI0eDcgb3BlcmF0aW9ucywgbHV4dXJpb3VzIHNlcnZpY2VzIGFuZCBzdWl0ZXMsIGV4b3RpYyBsaXZlIGFjdHMsIGRyaW5rcyBhbmQgd29ybGQgY3Vpc2luZSBjdXJyZW50bHkgR29hIG1vc3QgaGFwcGVuaW5nIGNhc2luby4gQmVzaWRlcyBUZXhhcyBIb2xkIFBva2VyLCBpdHMgcG9rZXIgcm9vbSBhbHNvIG9mZmVycyBDb2JyYSwgUG90IExpbWl0IE9tYWhhIGFuZCBPcGVuIEZhY2UgQ2hpbmVzZSBQb2tlci4gSXRzIFRhYXNoIFJvb20gaG9zdHMgVGVlbiBQYXR0aSBhbmQgUnVtbXkuIERlbHRpbiBKYXFrIGlzIHNtYWxsZXIgd2l0aCBmZXdlciBnYW1lcywgdGFibGVzIGFuZCBwb3NpdGlvbnMsIGJ1dCBwcm92aWRlcyBnb29kIHNlcnZpY2UuIFRoaW5rIDMwLDAwMCBzcS4gZnQuLCB0aHJlZSBmbG9vcnMsIDQwIHRhYmxlcywgMjR4NyBvcGVyYXRpb25zLCBhIG11bHRpIGN1aXNpbmUgcmVzdGF1cmFudCB3aXRoIHVubGltaXRlZCBidWZmZXQsIHNlcGFyYXRlIDEwLCAwMDAgc3F1YXJlIGZvb3Qgd2VhdGhlciBkZWNrIGFuZCBCb2xseXdvb2Qgc3R5bGUgbGl2ZSBhY3RzLiBCeSBsYXcsIG9uc2hvcmUgY2FzaW5vcyBjYW4gb25seSBoYXZlIGVsZWN0cm9uaWMgZ2FtZXM7IFByaWRlIG93bnM6IENhc2lubyBQYWxtcywgQ2FzaW5vIFBlYXJsIGFuZCBDYXNpbm8gUGFyYWRpc2UgKHBvc3NpYmx5IGl0cyBiZXN0KS4gVGhlbiB0aGVyZSBhcmUgaW5kZXBlbmRlbnQgb25lcyBsaWtlIENoYW5jZXMgQ2FzaW5vLCBDcm93biBDYXNpbm8gYW5kIG1hbnkgbW9yZS4KVGhlIGZsb3AgaXMgbG93IGFuZCBJIHNrdWxrIG91dCB0aGUgZG9vci4gCkxhaWQgb2ZmIGZvciAzIDQgZGF5cywgZGlkIHNvbWUgMjAgb24sIDIwIG9mZiBpY2UgYW5kIHN0cmV0Y2hlZCBpbiB0aGUgQU0uIEJ1dCBJIHN0aWxsIGNvdWxkbid0IHJpZGUgcGFpbiBmcmVlLi4gCk1vc3Qgb2YgdGhlIHllYXIgaXQganVzdCByZWZsZWN0cyB0aGUgc2t5IGFuZCBhcHBlYXJzIHNvbWV3aGF0IGRhcmsuIEJ1dCBkdXJpbmcgcGFydCBvZiB0aGUgeWVhciwgdGhlIHJvb2Ygb2YgdGhhdCBncmVlbmhvdXNlIHJlZmxlY3RzIHN1bmxpZ2h0IGRpcmVjdGx5IGludG8gdGhlIHNhdGVsbGl0ZSBzZW5zb3IuLiAKQnV0LCBhIHNpbmdsZSBvdWdodCB0byBlYXJuIHNvbWUgaGVscGZ1bCB0ZWNobmlxdWVzIGFuZCBydWxlcyB0byBiZWF0IGhpcy9oZXIgb3Bwb25lbnRzLiAKQWJvdXQgMjUxIHRpbWVzIGFzIG1hbnkgcGVvcGxlIGhhdmUgYmVlbiBraWxsZWQgaW4gQWZnaGFuaXN0YW4gYW5kIElyYXEgdGhhbiBpbiB0aGUgZ2hhc3RseSBhdHRhY2tzIG9mIFNlcHRlbWJlciAxMSwgMjAwMS4gTW9yZSB0aGFuIDEwOCB0aW1lcyBhcyBtYW55IHBlb3BsZSBoYXZlIGJlZW4ga2lsbGVkIGluIHRoZXNlIHdhcnMgYW5kIG9jY3VwYXRpb25zIHRoYW4gaW4gYWxsIHRlcnJvcmlzdCBhdHRhY2tzIGluIHRoZSB3b3JsZCBmcm9tIDE5OTMgMjAwNC4gClRlbGVwaG9uZSBoaXRtYWtlciBHYWdhIGFwcGVhcmVkIHRvIGJydXNoIGFzaWRlIGhlciBkZWZlYXQgYXMgc2hlIG1pbmdsZWQgd2l0aCBoZXIgQSBsaXN0IHBhbHMsIGluY2x1ZGluZyBjbyBzdGFycyBCcmFkbGV5IENvb3BlciwgNDQsIGFuZCBTYW0gRWxsaW90dCwgNzQuClVuZCBpbiBTeXJpZW4uIAoiTm8gb25lIHNob3VsZCB1bmRlcmVzdGltYXRlIHRoZSBkZWFkbHkgbmF0dXJlIGFzc29jaWF0ZWQgd2l0aCB0aGVzZSBjb2NrdGFpbHMsIiBoZSBzYWlkLiAiWW91IGNhbiBidXkgb25lIG9mIHRoZXNlIGNvY2t0YWlscyBmb3IgJDEwIHRvICQyMCBvbiB0aGUgc3RyZWV0IGFuZCBsb3NlIHlvdXIgbGlmZSBpbiBhIGZldyBzZWNvbmRzLiIgR3JleSBEZWF0aCBtYXkgYmUgdGhlIGRlc2NlbmRhbnQgb2YgZ3JheSBwZWJibGUgbGlrZSBtaXh0dXJlcyBvZiBoZXJvaW4gdGhhdCBsYXcgZW5mb3JjZW1lbnQgb2ZmaWNpYWxzIHNlaXplZCBpbiBTYW4gRGllZ28sIENoaWNhZ28sIGFuZCBydXJhbCB0b3ducyBpbiBLZW50dWNreSBhbmQgSW5kaWFuYSBpbiByZWNlbnQgeWVhcnMuIFRoZSBHZW9yZ2lhIEJ1cmVhdSBvZiBJbnZlc3RpZ2F0aW9ucyBhbHNvIHJlcG9ydGVkIG9uIFRodXJzZGF5IHRoYXQgYSBkaWZmZXJlbnQgc3ludGhldGljIG9waW9pZCBjb2NrdGFpbCwgbWFkZSBvZiBVIDQ3NzAwIGFuZCBmdXJhbnlsIGZlbnRhbnlsIChhIHNlcGFyYXRlIHZhcmlldHkgb2YgZmVudGFueWwpLCBoYXMga2lsbGVkIDE3IHBlb3BsZSBpbiB0aGUgc3RhdGUgaW4gdGhlIGxhc3QgZm91ciBtb250aHMuCkl0IHNlZW1zIGxpa2UgV2FycmVuIGlzIGp1c3QgdHJ5aW5nIHRvIGNhcnZlIG91dCBzb21ldGhpbmcgZGlmZmVyZW50IGhlcmUgdG8gcnVuIG9uLiAKUmVhbGx5PyBCZWNhdXNlIHlvdSBqdXN0IGRlc2NyaWJlZCB0aGUgY3J1eCBvZiBDcm9zc2ZpdC4gSWYgeW91IGRvbiBsaWtlIFdPRHMgdGhlbiBJIGRvbiBrbm93IHdoYXQgdG8gdGVsbCB5b3UgbXkgbWFuLgpBc2lkZSBmcm9tIHRoZXNlIGZlYXR1cmVzLCB0cmFkaXRpb25hbCBvcHRpb25zIGluIGFuIG9ubGluZSBwb2tlciBnYW1lIHN1Y2ggYXMgdG91cm5hbWVudCBhcmUgYWxzbyBvZmZlcmVkIGluIFBva2VyIFN0YXIuIApTbywgdGhlIG9ubHkgY29udHJvbCB0aGF0IHRoZSBwbGF5ZXIgaGFzIGlzIHRvIGJlIGluIGNoYXJnZSBvZiBob3cgbXVjaCBtb25leSB3aWxsIGJlIG9uIHRoZSBwb3QsIGJhc2VkIG9uIHRoZSBoYW5kIHdoaWNoIHRoZSBwbGF5ZXIgaG9sZHMuLiAKQmVsbHkgQnJlYXRoaW5nOiBBcyBhIHdhcm0gdXAsIGx5aW5nIG9uIHlvdXIgYmFjayB3aXRoIGtuZWVzIGJlbnQgYW5kIGZlZXQgZmxhdCwgc2xvd2x5IGFyY2ggeW91ciBsb3cgYmFjayBhbmQgdGhlbiBmbGF0dGVuIHlvdXIgbG93IGJhY2sgaW50byB0aGUgYmVkIHRocmVlIHRpbWVzICgxNSBzZWNvbmRzKS4gTmV4dCwgd2l0aCBmbGF0dGVuZWQgbG93IGJhY2ssIHNsb3dseSBicmVhdGhlIGluIGRlZXBseSAoaW1hZ2luZSBmaWxsaW5nIHlvdXIgYmVsbHkgd2l0aCBhaXIpLCB0aGVuIHNsb3dseSBicmVhdGhlIG91dCBjb21wbGV0ZWx5LCB0aWdodGVuaW5nIHlvdXIgYWJkb21lbiBhbmQgYnJpbmdpbmcgeW91ciBiZWxseSBidXR0b24gdG8geW91ciBzcGluZS4gUmVwZWF0IDEwIHRpbWVzICg3MCBzZWNvbmRzKS4KVW5lIGRsaWJyYXRpb24gZHUgQ29uc2VpbCBkJ0V0YXQgZml4ZSBsYSBkYXRlIGRlcyBsb2lzLiBJbCBlc3QgZCdhdmlzIHF1ZSBsYSB2cml0YWJsZSBkYXRlIGRlIGxhIGxvaSBlc3QgY2VsbGUgZGUgc29uIG1pc3Npb24gcGFyIGxlIENvcnBzIGxnaXNsYXRpZi4gU2kgbGEgcHJvbXVsZ2F0aW9uIGVzdCBuY2Vzc2FpcmUsIGNlIG4nZXN0IHF1ZSBwb3VyIGZhaXJlIGNvbm5hdHJlIGxhIGxvaSBldCBsYSBmYWlyZSBleGN1dGVyLiBDZXR0ZSBwcmNpc2lvbiBtYXJxdWUgbGEgZGlzdGluY3Rpb24gZW50cmUgbGUgcG91dm9pciBleGN1dGlmIGV0IGxlIHBvdXZvaXIgbGdpc2xhdGlmLiAgQWluc2ksIHNvdXMgbGEgQ29uc3RpdHV0aW9uIGFjdHVlbGxlLCBlbGxlIGRvaXQgZGF0ZXIgZHUgam91ciBkZSBzb24gbWlzc2lvbiBwYXIgbGUgQ29ycHMgbGdpc2xhdGlmLCBkZXJuaXJlIGNvbmRpdGlvbiBlc3NlbnRpZWxsZSAgc2EgZm9ybWF0aW9uIC4gTGUgQ29uc2VpbCBkJ0V0YXQgc2VtYmxlIHZvdWxvaXIgbW9udHJlciBsJ2V4aXN0ZW5jZSBkJ3VuZSBzcGFyYXRpb24gZGVzIHBvdXZvaXJzLiBQb3VydGFudCwgY2VsbGUgY2kgYXBwYXJhdCBhc3NleiBpbGx1c29pcmUgcHVpc3F1ZSBsZSBwb3V2b2lyIGV4Y3V0aWYgcHJvcG9zZSBsZXMgbG9pcyBldCBsZXMgcHJvbXVsZ3VlLgpBZnRlciBjb2xsZWdlIEkgd2FzIGEgKGxpdmUpIHBybyBmb3IgYWJvdXQgNSB5ZWFycy4gT3ZlcmFsbCBJIHdvbiBodWdlIGluIHRoYXQgdGltZSwgYnV0IG15IGZpZnRoIHllYXIgd2FzIGEgbG9zaW5nIHllYXIuIFJlYXNvbnM/IFRoZSBnYW1lcyBnb3QgdG91Z2hlciwgdGhlIGFjdGl2aXR5IGlzIGEgZ3JpbmQsIGFuZCBpdCBpcyBoYXJkIG5vdCB0byBnZXQgY29tcGxhY2VudC4gQXMgZWRnZXMgZ2V0IHNtYWxsZXIgaXQgYmVjb21lcyBtb3JlIGFuZCBtb3JlIGltcG9ydGFudCB0byBhbHdheXMgcGxheSB5b3VyIEEgZ2FtZSB0byBtYWtlIGl0IGFzIGEgcHJvLiBGb3IgbWUgdGhhdCB3YXMgZGlmZmljdWx0IGNvbnNpZGVyaW5nIG15IHdpbiByYXRlIHdhcyBmYWxsaW5nLCBteSBoZWFydCB3YXNuIGluIGl0LCBhbmQgY2FzaW5vcyBhcmUgZ2VuZXJhbGx5IHByZXR0eSBzb3VsIGNydXNoaW5nIGVudmlyb25tZW50cy4KRmFpciBhbmQgZXF1YWwgb3V0cmFnZT8gZG91YnQgaXQuIFNlbGVjdGl2ZSBvdXRyYWdlIGlzIHdoYXQgc2p3cyBsaWtlIHlvdXJzZWxmIHN0cml2ZSBvbi4gTW9yYWwgZ3JhbmRzdGFuZGluZyBhbmQgcGVhY29ja2luZy4gCkFzIG1hbnkgYXMgMyBkb3plbiBwaG90b2xpdGhvZ3JhcGhpYyBzdGVwcyBtYXkgYmUgbmVlZGVkIHRvIHByb2R1Y2UgYSBjaXJjdWl0LiAKVGhpcyBpcyBzbyBzY2FyeSB0aG91Z2ggY2F1c2UgaWYgSSB3YXMgZHJ1bmsgYW5kIGEgY2FyIHdpdGggYSBseWZ0IGRlY2FsIHRoYXQgZ2VuZXJhbGx5IG1hdGNoZWQgbXkgZHJpdmVyIGRlc2NyaXB0aW9uIEkgbWlnaHQgYWN0dWFsbHkgZmFsbCBmb3IgdGhhdC4gCllvdSBjYW4gYWxzbyB1c2UgdGhpcyB0byByZW1vdmUgdGhlIHNjcmF0Y2hlcyBvbiB5b3VyIG1pcnJvci4gWW91IGNhbiBidXkgZ2xhc3MgcG9saXNoaW5nIGtpdHMgZnJvbSB0aGUgaGFyZHdhcmUgc3RvcmUuIApUaGVyZSBpcyBhIHNsYW5neSBzYXlpbmcgdGhhdCB0aGUgZ2FtZSBvZiBwb2tlciBpcyAiYWxsIGluIHRoZSBkcmF3LiIgV2hpbGUgdGhpcyBpcyBhbiBleGFnZ2VyYXRpb24sIGl0IGlzIG5vdCBzbyB2ZXJ5IGZhciBmcm9tIHRoZSB0cnV0aC4gSW4gdGhlIGZpcnN0IHBsYWNlLCBpdCBzaG91bGQgYmUgYm9ybmUgaW4gbWluZCB0aGF0IGl0IGlzIGEgZHV0eSBlYWNoIHBsYXllciBvd2VzIHRvIHRoZSBnYW1lLCBoaXMgbmVpZ2hib3JzLCBhbmQgaGltc2VsZiwgdG8gZGlzY2FyZCBhbmQgZHJhdyBxdWlja2x5IGFuZCBkZWNvcm91c2x5LiBJdCBzaG91bGQgYmUgY29uY2x1ZGVkIGFzIHNvb24gYXMgcG9zc2libGUgYWZ0ZXIgZXZlcnkgb25lIGhhcyBjb21lIGluIG9yIHBhc3NlZCBvdXQuIApTbyBhcHBhcmVudGx5IGJlaW5nIGFuIGFsY29ob2xpYyB0aGF0IHJlZnVzZXMgdG8gc3RvcCBpc24ndCBlbm91Z2guIEhlJ3MgYWxzbyBiZWVuIHN0ZWFsaW5nIG15IEFkZGVyYWxsLiBJIGhvbmVzdGx5IGRvbid0IGtub3cgd2hhdCB0byBkbyBhbnltb3JlLiAKRHVkZSwgaSBkb24ndCBrbm93IGhvdyBvbGQgeW91IHdlcmUgd2hlbiBUaGUgTWF0cml4IGNhbWUgb3V0LCBidXQgdGhhdCB3YXMgYSByZXZvbHV0aW9uYXJ5IGFjdGlvbiBtb3ZpZSBiYWNrIHRoZW4uIFRoZSBidWxsZXQgZG9kZ2luZyBzY2VuZSBhbmQgaG93IHRoZXkgcHVsbGVkIHRoYXQgb2ZmIGJsZXcgbXkgZnVja2luZyBtaW5kLiBUaGF0IGlzIG9uZSBvZiBteSBmYXZvcml0ZSBtb3ZpZXMgZXZlci4gQWx0aG91Z2gsIEkgYW0gYSBnaWFudCBmdWNraW5nIG5lcmQgd2l0aCB0aGF0IGtpbmQgb2Ygc3R1ZmYgKEkgc3RpbGwgaGF2ZSB0aGUgbWF0cml4IGNvZGUgY29taW5nIGRvd24gYXMgbXkgc2NyZWVuIHNhdmVyLCBidXQgSSdtIGEgZGV2ZWxvcGVyIGFuZCB3b3JrIHdpdGggbGlrZSBtaW5kZWQgcGVvcGxlKSwgYnV0IGl0J3MgcmVhbGx5IHdlbGwgZG9uZSBhbmQgdGhlIGZpZ2h0IGNob3Jlb2dyYXBoeSBpcyBncmVhdCBmb3IgdHdvIGd1eXMgd2hvIGhhZCBwcm9iYWJseSBuZXZlciBkb25lIG1hcnRpYWwgYXJ0cyBwcmlvci4gSWYgeW91J3JlIGludGVyZXN0ZWQsIGdvIGJhY2sgYW5kIGdldCB0aHJvdWdoIFRoZSBNYXRyaXggaWYgeW91IGhhdmVuJ3QgYWxyZWFkeS4gU2Vjb25kIHdhcyBvaywgdGhpcmQgd2FzIHNvIGJhZCBJIGxlZnQgdGhlIHRoZWF0ZXIgYm9yZGVybGluZSBkZXByZXNzZWQuCkkgZGlkbiBidWlsZCB0aGlzIHBhcnRpY3VsYXIgb25lIGJ1dCBxdWl0ZSBhIGZldyBCZXN0YSBhbmQgdGhleSB3ZXJlIG5ldmVyIHdvbmt5LiBEaWQgeW91IHJlbWVtYmVyIHRvIHNjcmV3IHRoZSB0d28gY2FiaW5ldHMgdG9nZXRoZXI/IFRoZXkgbG9vayBsaWtlIHRoZXkgYSBiaXQgYXBhcnQuIEl0IHNob3VsZCBiZSBvbiB0aGUgbGFzdCBwYWdlIG9mIHRoZSBpbnN0cnVjdGlvbnMgZm9yIHRoZSBib2R5LiAKSGFyaW5nZXkncyBjaGFyZ2luZyBzdHJ1Y3R1cmUgbm93IG1pcnJvcnMgdGhlIERWTEEgc3RydWN0dXJlIG9uIENPMi4gClRvIHRoZSBydWlucyBvZiAuIEl0IGlzIHdoZXJlIHlvdQpUaGVyZSBhcmUgZGlmZmVyZW50IHdheXMgdG8gc2h1ZmZsZSwgYnV0IGEgcG9rZXIgc2h1ZmZsZSB3aWxsIHR5cGljYWxseSBjb25zaXN0IG9mIHR3byByaWZmbGVzLCBhIGJveCwgYW5vdGhlciByaWZmbGUsIGFuZCBhIGN1dC5bMV0uIApPciBhdCBhbGwgaW4gc29tZSBjYXNlcy4gT2YgY291cnNlIGlmIHlvdSBoYXZlIGEgdmVyeSAicmljaCIgZnJpZW5kIHRoYXQgaGFzIGEgbG90IG9mIHBva2VyIGNoaXBzLCBhbmQgcGxheXMgb24gaGlnaCBzdGFrZSB0YWJsZXMgeW91IGNhbiBhbHNvIGdldCBwb2tlciBjaGlwcyBmcm9tIGhpbSA6KS4gSW4gYW55IGNhc2Ugd2hhdCBldmVyeW9uZSBzaG91bGQgd2F0Y2ggb3V0IGZvciBpcyBTY2FtIGVtYWlscyBhbmQgbWVzc2FnZXMgaW4gZmFjZWJvb2sgd2hlcmUgeW91IGFyZSBzdXBvc2UgdG8gYmUgYXdhcmRlZCBvciBiYW5lZCBmb3IgYW55IHJlYXNvbiwgYW5kIHlvdSBhcmUgYXNrZWQgdG8gY2xpY2sgYSBsaW5rIHRvIHZlcmlmeSB5b3VyIGFjY291bnQsIHdoZXJlIHlvdSB3b3VsZCBuZWVkIHRvIGxvZ2luIG9mIGNvdXJzZTsgd2hlbiB5b3UgbG9naW4gdG8gdGhhdCBsaW5rIHlvdSBkb24ndCBhY3R1YWxseSB2ZXJpZnkgYW55dGhpbmcgeW91IGp1c3QgZ2l2ZSBvdXQgeW91ciBwYXNzd29yZCBhbmQgYWNjb3VudCB0byBzb21lIGhhY2tlcnMuIApVbnVzdWFsIHJlc2lzdGFuY2UgaW4gRmxvcmlkYSwgQXJpem9uYSBhbmQgVGV4YXMgYW5kIHRoZW4gc29tZSBSZXB1YmxpY2FuIHJlc2lzdGFuY2UgaW4gVXRhaCBhbmQgVGV4YXNUaGUgcmVzdCBvZiB0aGUgY291bnRyeT8gb24gdHJhY2sgdG8gdGhlIGVuZCBvZiBFbXBpcmUuIEFuZCBCbHVlIGFybWllcyBtYXJjaGluZyB0byB0aGVpciBkb29tICB0b28gZGlzdHJhY3RlZCBieSB0aGUgcHJvbWlzZXMgb2YgcGF0cmlvdGlzbSwgZ3V0cyBhbmQgZ2xvcnksIHRvIG5vdGljZSB0aGF0IHRoZSBlY29ub215IGlzIGNvbGxhcHNpbmcsIHRoZSBlbnZpcm9ubWVudCBpcyBkZXN0cm95ZWQsIGFuZCB0aGUgRW1waXJlIGhhcyBhbHJlYWR5IGltcGxvZGVkQnV0IGhlcmUgdGhlIG90aGVyIGxlc3NvbiB0aGF0IEkgbGVhcm5lZCAuIENhbm5vdCBnaXZlIHVwLiAKQnkgc3dpdGNoaW5nIGJldHdlZW4gdGhlIHR3byBhbnRlbm5hcyBhdCBhbiBhdWRpbyByYXRlIGl0IHN1cGVyaW1wb3NlcyBhIHRvbmUgb24gYSByZWNlaXZlZCBzaWduYWwgd2hlbiBkZXRlY3RlZCBieSBhbiBGTSByZWNlaXZlci4gCk5vdyBJIG1vc3RseSBmaXNoIGJ5IGhvbGRpbmcgZG93biBmb3IgYSBzZWNvbmQsIGxldHRpbmcgZ28sIGhvbGRpbmcgZG93biBhZ2FpbiwgbGV0dGluZyBnby4gCkNydW5jaHkuQnV0IG9uZSB0aGluZyBpcyB2ZXJ5IGltcG9ydGFudDogRG8gaGF2ZSBjbGVhbiwgd2VsbCBwcmVwYXJlZCBjaGFyYWN0ZXIgc2hlZXRzIGZvciB0aGUgcGxheWVyIGNoYXJhY3RlcnMgYW5kIHRoZW4gZ28gb24gb25jZSB5b3UgaGF2ZSBhIGZldyBzZXNzaW9ucyB1bmRlciB5b3VyIGJlbHQuIApUaGV5IGNhbGwgdGhlIHBvbGljZSBhbmQgbWFrZSBzdXJlIGV2ZXJ5b25lIGlzIHN0aWxsIG9uIHNjZW5lIHRpbGwgaXQncyBzb3J0ZWQuIAozNikuIApNdWNoIG9mIHRoZSB3ZWxsIGRlc2VydmVkIGh5cGUgd2FzIGR1ZSB0byB0aGUgYWxsIHN0YXIgY2FzdDogQ2hhZHdpY2sgQm9zZW1hbiwgQW5nZWxhIEJhc3NldHQsIE1pY2hhZWwgQi4gSm9yZGFuLCBTdGVybGluZyBLLiAKSSB0b2xkIGhlciBJIHRoaW5rIHNoZSBnb2VzIHRvIFRhcmdldC4gVGhlIG1vbSBhc2tlZCBtZSB3aGF0IFRhcmdldCB3YXMgYW5kIEkgd2FzIGR1bWJmb3VuZGVkLiAKUzBYb25DMFggICAzMyBwb2ludHMgIHN1Ym1pdHRlZCA5IGRheXMgYWdvCkhlIGFuZCBoaXMgd2lmZSBQZW5ueSBhcmUgdGhlIHBhcmVudHMgb2YgZml2ZSBkYXVnaHRlcnMsIGFuZCBhbHNvIGhhdmUgdHdvIHlvdW5nIGdyYW5kc29ucy4gCkl0IHJlYWxseSBtdWNoIG1vcmUgdGhhbiBqdXN0IGEgcHJvYmxlbSB0byBzb2x2ZSwgYSBsb3Qgb2YgdGhlIGNvcnJ1cHRpb24gYW5kIHRoZSBwb2xpdGljYWwgY3VsdHVyZSB0aGF0IGFsbG93cyBmb3IgaXQgaGFzIGl0cyByb290cyBkZWVwIGluIGhpc3RvcnkgZm9yIG92ZXIgNTAwIHllYXJzIGJlZ2lubmluZyB3aXRoIHRoZSBTcGFuaXNoLiAKSXQgbWlnaHQgbG9zZSBzb21lIGZ1biBpZiB5b3UgcGxheSBvdGhlbGxvIGFzIG11Y2ggYXMgdGhvc2UgY2hlc3MgcHJvZmVzc2lvbmFscyBhcmUgcGxheWluZyBpdCwgYmVjYXVzZSB0aGV5IGp1c3Qga25vdyB0aGF0IG11Y2ggYm9vaywgdGhhdCBvdGhlbGxvIG9uIHRoaXMgbGV2ZWwgd291bGQgYmUgYSBtZW1vcnkgZ2FtZSB0b28gb2Z0ZW4sIGJ1dCBhcyB0aGF0IG5vdCBnb2luZyB0byBoYXBwZW4sIGl0IGNvbXBsZXggZW5vdWdoLi4gClNpbWlsYXJseSBpbiBwb2tlciwgZm9yIGRlY2FkZXMsIHRoZSBoaWdoZXN0IGxldmVsIG9mIHBva2VycyBoYXZlIGJlZW4gZG9taW5hdGVkIGJ5IHBsYXllcnMgd2hvIGhhdmUgbGVhcm5lZCB0aGUgZ2FtZSBieSBwbGF5aW5nIGl0LCAicm9hZCBnYW1ibGVycyIgd2hvIGhhdmUgY3VsdGl2YXRlZCBpbnR1aXRpb24gZm9yIHRoZSBnYW1lIGFuZCBhcmUgYWRlcHQgYXQgcmVhZGluZyBvdGhlciBwbGF5ZXJzJyBoYW5kcyBmcm9tIGJldHRpbmcgcGF0dGVybnMgYW5kIHBoeXNpY2FsIHRlbGxzLiAKQnV0IEkgaG9wZSB5b3UgZmluZCByZWxpZWYgc29vbiBzbyB5b3UgY2FuIGdldCBiYWNrIHRvIGRvaW5nIHdoYXQgeW91IGxvdmUuIDEgcG9pbnQgIHN1Ym1pdHRlZCA4IGRheXMgYWdvSGksIEkgYSBSZXNpZGVudCBPcnRob3Rpc3QsIHRoZSByZXNlYXJjaCBJIGNvbWUgYWNyb3NzIGlzIG1haW5seSBzdHVkaWVzIHRoYXQgaGF2ZSBvY2N1cnJlZCBpbiBFdXJvcGUsIGl0IGlzIHNsb3dseSBjb21pbmcgdG8gdGhlIFVTLlRoZSBzdHVkaWVzLCBJIG5lZWQgdG8gZ2V0IHJlZmVyZW5jZXMgZm9yIHlvdSwgYnV0IHRoZXkgaGF2ZSBtZW50aW9uZWQgZGVjcmVhc2VkIHBhaW4uQXMgZmFyIGFzIGl0IGJlaW5nIGEgbWV0aG9kIG9mIHRyZWF0bWVudCBmb3IgcmVkdWNpbmcgQ29iYiBhbmdsZXMgdGhhdCBpcyBvbmdvaW5nIHdpdGggbm8gY2xlYXIgaW5kaWNhdGlvbnMgYXMgb2YgeWV0LiBUaGVyZSBuZWVkcyB0byBiZSBtdWNoIG1vcmUgcmVzZWFyY2ggd2l0aCByYW5kb21pemVkIGNsaW5pY2FsIHRyaWFscy4gCiJJdCB3aWxsIGJlIHZlcnkgZGlmZmljdWx0IHRvIHJlYWNoIGFuIGFncmVlbWVudCB1bmxlc3MgdGhlIENoaW5lc2UgYXJlIHdpbGxpbmcgdG8gYWRkcmVzcyBzb21lIG9mIHRob3NlIGlzc3VlcywiIHNhaWQgQWxkZW4uCk15IHJlc3BvbnNlIHRvIHRoaXMgaXMsIHNvIHdoYXQ/IFdobyBjYXJlcyBpZiBESFMgZ2V0cyBzb21lIHVzZWQgTVJBUHMgZnJvbSB0aGUgQXJteT8gSXQgYSByZWFsbHkgYmlnIGFybW9yZWQgY2FyLiAKSSB3aXNoIEkgY291bGQgc2VlIHBva2VyIGxpa2UgY2hlc3MuIEkgd291bGQgc2l0IGRvd24sIHRoaW5rIGEgbGl0dGxlLCBhbmQgZG9uIGNhcmUgYWJvdXQgdGhlIHJlc3VsdC4gCkkgd29yayBhcyBhIGxhbmRzY2FwZXIuIEl0IGRlcGVuZHMgb24gd2hhdCB0aGUgcm9vdHMgYXJlLiAKSXQgcmVxdWlyZXMgdGhhdCBwcmljZXMgZm9yIG1vc3Qgc3RvY2tzIGJlIGRpc3BsYXllZCBpbiBpbmNyZW1lbnRzIG5vIHNtYWxsZXIgdGhhbiBhIHBlbm55IHBlcm1pdHRpbmcsIGZvciBleGFtcGxlLCBhIHByaWNlIG9mICQxMC4wMSBhIHNoYXJlLCBidXQgbm90ICQxMC4wMTUuIApDb21wbGV0ZWx5IGVsaW1pbmF0ZWQgbXkgcHN5Y2hvc2lzIHdpdGhpbiBhIHdlZWsuIApUaGUgbWFpbiBzaGFwZXMgb2YgcG9rZXIgdGFibGUgdG9wcyBhcmUgcm91bmQsIG9jdGFnb25hbCwgYW5kIG92YWwuIE9jdGFnb25hbCB0YWJsZXMgbWFrZSBlYWNoIHBsYXllcidzIHBsYXlpbmcgc3BhY2UgbW9yZSBkZWZpbmVkLiAKQ2hhcmN1dGVyaWUgaXMgdGhlIGNlbnR1cmllcyBvbGQgdGVjaG5pcXVlIG9mIGN1cmluZyBtZWF0IChlc3BlY2lhbGx5IHBvcmspIGJ5IGRyeWluZywgc21va2luZywgc2FsdGluZywgc3BpY2luZywgZmVybWVudGluZyBvciBjb25maXRpbmcgaXQuIEl0IHdhcyBvbmUgb2YgdGhlIGVhcmxpZXN0IG1ldGhvZHMgb2YgcHJlc2VydmluZyBmb29kOyBsb25nIGJlZm9yZSB0aGUgZGF5cyBvZiByZWZyaWdlcmF0aW9uLCBhIHNpbmdsZSBwaWcgY291bGQgZmVlZCBhIGZhbWlseSBmb3IgYSB5ZWFyLCBvbmNlIGl0IHdhcyB0cmFuc2Zvcm1lZCBpbnRvIGhhbSwgYmFjb24sIHNhdXNhZ2Ugb3IgdGVycmluZS4uIApDaGFjdW5lIHNhaXQgY29tYmllbiBkZSB0aXRyZXMgImNoYXVkcyIgZWxsZSBwb3NzZGUsIG1haXMgaWdub3JlIGxlIGNvbnRlbnUgZHUgcG9ydGZvbGlvIGRlIHNhIHZvaXNpbmUuIApQYXVsaW5lIFN0b2NrIGdhdmUgYW4gcmVhZGluZyBvZiBhbiBJbmRpYW4gd2VkZGluZy4gCk9uIHRoZSBvdGhlciBoYW5kLCBteSBnaXJsZnJpZW5kcyBjb21wbGltZW50IG1lIGFsbCB0aGUgdGltZS4gClN0IEtpbGRhIG9wdGVkIHRvIGxlYXZlIE1vb3JhYmJpbiBhZnRlciBhIGZhbGwgb3V0IHdpdGggS2luZ3N0b24gY291bmNpbCBvdmVyIHRoZSBudW1iZXIgb2YgcG9rZXIgbWFjaGluZXMgcGVybWl0dGVkIGF0IHRoZSB2ZW51ZS4KTW9zdCByb21haW5lIHNvbGQgdGhpcyB0aW1lIG9mIHllYXIgaXMgZ3Jvd24gaW4gQ2FsaWZvcm5pYSwgR290dGxpZWIgc2FpZC4gVGhlIHJvbWFpbmUgbGV0dHVjZSBsaW5rZWQgdG8gdGhlIEUuIGNvbGkgb3V0YnJlYWsgZWFybGllciB0aGlzIHllYXIgd2FzIGZyb20gWXVtYSwgQXJpem9uYS4gVGFpbnRlZCBpcnJpZ2F0aW9uIHdhdGVyIGFwcGVhcmVkIHRvIGJlIHRoZSBzb3VyY2Ugb2YgdGhhdCBvdXRicmVhaywgd2hpY2ggc2lja2VuZWQgYWJvdXQgMjAwIHBlb3BsZSBhbmQga2lsbGVkIGZpdmUuClRoZW4gY2FtZSB0aGUgZ2VudGxlIGdyb3BlLiBJIG1heSBoYXZlIGVtaXR0ZWQgYSB2ZXJ5IHVuIG1hbmx5IHNxdWVhayBhbmQganVtcGVkIGEgZmV3IGZlZXQgYmFja3dhcmRzLiBUaGUgbWFzc2V1c2UgZ2F2ZSBtZSBhIHB1enpsZWQgbG9vayBhcyBJIGV4cGxhaW5lZCB0aGF0IEkgd2FzbiBhZnRlciB0aGUgZXh0cmEgc2VydmljZShzKSwgYnV0IHdhcyB2ZXJ5IGdyYXRlZnVsIGZvciB0aGUgd29yayB0aGV5IGRvbmUgc28gZmFyLgpUaGUgZW5kIHJlc3VsdCBpcyB0aGF0IGF0IGxpa2UgOTkuOTk5OSUgb2YgY29tcGFuaWVzLCB5b3UgY2Fubm90IGhhdmUgb25lIHBlcnNvbiB3aG8gaGFzIGRpZmZlcmVudCBtYXRjaGluZyBydWxlcyB0aGFuIHNvbWVvbmUgZWxzZS4KTmV3cyBOYXRpb24gV29ybGQgV2FzaGluZ3RvbiBFbGVjdGlvbnMgU3BvcnRzIE5GTCBNTEIgTkJBIE5ITCBOQ0FBRiBOQ0FBQiBNb3JlLiAKSXQgc2hvdWxkIGJlIGEgcmVhbGx5IGxvdyBjaGFuY2UgbGlrZSAwLjAxJSwgdGhhdCB3YXkgb25seSBhIHZlcnkgc21hbGwgYW1vdW50IG9mIHBlb3BsZSB3b3VsZCBleHBlcmllbmNlIGl0LiBPbmNlIHdvcmQgZ2V0cyBvdXQgcGVvcGxlIHdpbGwgbW9zdCBsaWtlbHkgdGhpbmsgaXQgYSBidWcgdGhhdCBpcyBvbmx5IGhhcHBlbmluZyB0byBhIHNtYWxsIGFtb3VudCBvZiBwZW9wbGUgd2l0aCBzZWVtaW5nbHkgbm8gY29tbW9uYWxpdHkgYmV0d2VlbiB0aGUgdmljdGltcy4gClNvIG11Y2ggbWFuaXB1bGF0aW9uICAgdGhleSB0YWxrIGFib3V0IHRoZSBtdXNpYyBpbmR1c3RyeSBiZWluZyA4MCBwZXJjZW50IGhhaXIgYW5kIG1ha2V1cCBbTGF1Z2hzXS4gCkkgbGVhcm5lZCBmcm9tIHlvdSB0aGF0IHJ1bm5pbmcgYW4gYWdlbmN5IHRha2VzIG1vcmUgdGhhbiBhIGRyZWFtICAgSSd2ZSBnb3QgdG8gaGF2ZSBhIHBsYW4uCldoZW4gRGF3c29uIGxvb2tzIGF0IHRoZSBtZWRpZXZhbCB3b3JsZCwgaGUgZm9jdXNlcyBvbiB0aGUgc21hbGwgZGlydHkgdmlsbGFnZXMgdGhlIG1ham9yaXR5IG9mIHBlb3BsZSBsaXZlZCBpbiB0aGVpciB3aG9sZSBsaXZlcy4gClVzZSBhIHNwZWxsICh0aGV5IHNjYWxlIHJlYWxseSB3ZWxsIG9mZiBnZW0gbGV2ZWxzLCBza2lsbCB0cmVlIGFuZCBhc2NlbmRlbmN5IEFLQSBubyBnZWFyICJyZXF1aXJlZCIgdG8gc3RhcnQgbWFwcGluZykuIFRoZW4gZm9jdXMgb24gZ2V0dGluZyBsaWZlIGFuZCByZXNpc3RzIG9uIGdlYXIuIApTaGUgaGFzIG5vIHJlc3BlY3QgZm9yIHBlb3BsZSBpbiB1bmlmb3JtLiBTaGUgYXNrZWQgc2VydmljZW1lbWJlcnMgdG8gbm90IHdlYXIgdGhlaXIgZHJlc3MgdW5pZm9ybXMgdG8gdGhlIFdoaXRlIEhvdXNlIChhbmQgaW5zdGVhZCB0byBkcmVzcyBpbiBjaXZpbGlhbiBjbG90aGluZyksIGFuZCB2YXJpb3VzIGFnZW50cyBhbmQgcGVyc29ubmVsIHdlcmUgZGlyZWN0ZWQgdG8gaGlkZSBiZWhpbmQgZHJhcGVyeSBvciBzdGVwIGludG8gYSBuZWFyYnkgb2ZmaWNlIHNvIHNoZSBkaWRuIGhhdmUgdG8gbG9vayBhdCB0aGVtIGFzIHNoZSB3YWxrZWQgYnkuLiAKQ2hvY29sYXRlIGlzIGEgaHlwZXJwYWxhdGFibGUgZm9vZCwgbWVhbmluZyBpdCBoaWdoIGluIHN1Z2FyIGFuZCBmYXRzLiAKV2hldGhlciBpdCB3YXMgbG9va2luZyBjb21mb3J0YWJsZSB3aXRoIHRoZSBVbml0ZWQgU3RhdGVzIGVudHJ5IGF0IHRoZSB3b3JsZCBjaGFtcGlvbnNoaXAgYXMgdGhlIGV2ZW50IHlvdW5nZXN0IHBsYXllciBhdCBhZ2UgMTgsIGNvbXBldGluZyBpbiB0d28gd29ybGQganVuaW9yIHRvdXJuYW1lbnRzLCB0aGUgZmFtaWx5IGhvY2tleSBsaW5lYWdlIG9yIGRvbWluYXRpbmcgYXQgdGhlIE5DQUEgbGV2ZWwsIHRoZSAxOSB5ZWFyIG9sZCBPcmxhbmRvLCBGbGEuLCBuYXRpdmUgaGFzIGRyYXduIHJhdmUgcmV2aWV3cy4gCk9uIHZlaWxsZSAgY2UgcXVlIGxlcyBsaWV1eCBzb2llbnQgcmVuZHVzIHByb3ByZXMgZXQgdW4gc2VydmljZSBkZSBuZXR0b3lhZ2UgZGUgbGEgVmlsbGUgcHJlbmQgbGUgcmVsYWlzLiAKRG9uIGxpc3RlbiB0byB3aGF0IHNoZSBzYXlzLiAKR2l2ZW4gdGhlIHRpbWVzIEx1YmtlIChiLiAxODkwKSBjYW4gYnV0IGhlbHAgdG8gd29uZGVyIHdoYXQgd2FyZmFyZSBtaWdodCBsb29rIGxpa2UsIGFuZCBzdXBwbGllcyB1cyB3aXRoIG9uZSBzZXQgb2YgcG9zc2liaWxpdGllcyBpbnZvbHZpbmcgdmFzdCBhaXJjcmFmdCAocGljdHVyZWQgYXQgbGVmdCkgYXR0YWNraW5nIGNpdGllcyB3aXRoIHBvaXNvbiBnYXMgYW5kIGVsZWN0cmljaXR5LiBUaGUgaWRlYSBvZiB1cmJhbiBib21iaW5nIHdhcyBzdGlsbCBwcmV0dHkgbmV3IGluIDE5MjcsIGFzIHdhcyB0aGUgaWRlYSBvZiBhdHRhY2tpbmcgY2l0aWVzIHRoYXQgd2VyZW4gbmVjZXNzYXJpbHkgbWlsaXRhcnkgdGFyZ2V0cy4gClRoZSByZXRpcmVkIGJhc2ViYWxsIHN0YXIgYW5kIFRoZSBTdXJyZWFsIExpZmUgYW5kIFRoZSBDZWxlYnJpdHkgQXBwcmVudGljZSBhbHVtIHNheXMgaGlzIGZpbmdlciBoYXMgZmFsbGVuIG9mZiBhZnRlciBpdCB3YXMgcmVhdHRhY2hlZCBpbiBzdXJnZXJ5IGZvbGxvd2luZyBhbiBhY2NpZGVudCBhbmQgaGFzIHNoYXJlZCBzb21lIHByZXR0eSBob3JyaWZpYyBhbmQgZ3JhcGhpYyBldmlkZW5jZSBvZiB3aGF0IGhpcyBoYW5kIGxvb2tlZCBsaWtlIGJlZm9yZWhhbmQuIChDbGljayB0byBzZWUgaGlzIGdyb3NzIHBob3RvLCBpZiB5b3UgZGFyZS4uIApUaGF0LCBoZSBub3RlZCAiaXMgbm90IHRvbyBmYXIgb2ZmIGZyb20gdGhlIHNpdGUgd2UgYXJlIGxvb2tpbmcgZm9yLiIgVGhlIGFjdHVhbCBkZW1hbmQgdGhpcyB5ZWFyLCBoZSBzYWlkLCBpcyBmb3IgbWVlYXdhdHRzLiBBdCBTdC4gCldoeSBpcyBPbnRhcmlvIHB1c2hpbmcgc21hbGwgdG93bnMgdG8gYXNzZW1ibGUgYXV0byBsYW5kCllldCBpdCBpcyBlYXN5IGJlaW5nIGluIGhlciBjb21wYW55LCBtYXliZSBpdCBpcyBiZWNhdXNlIHNoZSBpcyBob25lc3QgYW5kIG9wZW4gd2l0aCBoZXIgYW5zd2VycyBhbmQganVzdCBhcyBjdXJpb3VzIGFib3V0IG90aGVycyBhcyB3ZSBhcmUgYWJvdXQgaGVyLkhvdyBkbyB5b3UgZmluZCB5b3VyIHBhcnRzLCBvciBkbyB0aGV5IGZpbmQgeW91P1RoZXkgaGFwcGVuIHNpbXVsdGFuZW91c2x5IGV2ZXJ5IGNoYXJhY3RlciBJIGhhdmUgcGxheWVkIHdhcyBhbHJlYWR5IGluIG1lIHNvbWV3aGVyZS4gV2UgYXJlIG11bHRpIGZhY2V0ZWQgYmVpbmdzIGFuZCB0aGF0J3Mgd2hhdCBhY3RpbmcgYnJpbmdzIG91dCBpbiB1cy5CdXQsIHRvIG1lLCB5b3UgYWx3YXlzIGxvb2sgbGlrZSBob3cgSSBpbWFnaW5lZCB0aGUgY2hhcmFjdGVycyBzaG91bGQgbG9vay4gClBva2VyOiBUaGUgUmVhbCBEZWFsIHdpdGggUG9rZXIgU29mdHdhcmUKQnV0IGluIG5vIHdheSBpcyBpdCBoZWxwZnVsIHdoZW4gaW50ZXJhY3Rpbmcgd2l0aCB5b3VyIHRlYW0gbWF0ZXMuIApTcHRlciBmb2xndGVuIEFyYmVpdGVuIG1pdCBSZXN0ICB1bmQgRnVuZHN0Y2tlbiBpbmR1c3RyaWVsbGVyIFByb2R1a3Rpb24gdm9uIFNjaHJvdHRwbHR6ZW4uIERpZSB6dW5jaHN0IHN0YXRpc2NoZW4gQXJiZWl0ZW4gd3VyZGVuIGluIGRlciBGb2xnZXplaXQgZHVyY2ggZHluYW1pc2NoZSBLb21wb25lbnRlbiBlcndlaXRlcnQuIApZb3Ugc2hvdWxkIG5ldmVyIGdhbWJsZSB3aXRoIG1vbmV5IHRoYXQgeW91IGNhbm5vdCBhZmZvcmQgdG8gbG9zZS4gMm5kIEFuc3dlcjogKEkgZ290IHRoaXMgYW5zd2VyIGZyb20gVHVydGxlZ2lybDQ0NCkgYmFzaWMgcnVsZXMgTGlrZSBtb3N0IGdhbWVzLCB0aGUgb2JqZWN0aXZlIGlzIHRvIGJlYXQgdGhlIG90aGVyIHBsYXllcihzKSBUaGVyZSBhcmUgbWFueSB2YXJpZXRpZXMgb2YgcG9rZXIgZ2FtZXMgYnV0IHRoZXkgYWxsIGZvbGxvdyB0aGUgc2FtZSBiYXNpYyBmb3JtYXQ6IC4uIApIb3dldmVyLCBJIGZlZWwgdGhhdCB5b3Ugd2lsbCBiZW5lZml0IGZyb20gYSBzdG9yZSB3aXRoIGEgbG90IG9mIHZhcmlldHkgYW5kIGRpc2NvdW50ZWQgcHJpY2VzLiBGb3IgdGhpcyByZWFzb24sIEkgaGlnaGx5IHJlY29tbWVuZCB1c2luZyBQb2tlciBTdGFycyBEaXJlY3QuIApJcyBpcyB1bmRlbmlhYmxlIHRoYXQgT3BlcmF0aW9uIEhvbGQgdGhlIExpbmUgZGlkIGluIGZhY3QgcmVkdWNlIGNyaW1lLiBJdCBpcyB1bmRlbmlhYmxlIHRoYXQgd2hlbiBhIGJldHRlciBmZW5jZSB3YXMgYnVpbHQgdGhyb3VnaCBFbCBQYXNvIGl0IHJlZHVjZWQgY3JpbWUuIEFmdGVyIDkvMTEgaW5jcmVhc2VkIHNlY3VyaXR5IGF0IHBvcnRzIG9mIGVudHJ5IHJlZHVjZWQgY3JpbWUuIApEZXIgQXVkaXRvciB1ClRoZSAiY2xhbiIgc3lzdGVtIG9mIElyZWxhbmQgc2VlbXMgdG8gaGF2ZSBiZWVuIGFuIGluZGlnZW5vdXMgZGV2ZWxvcG1lbnQgb2YgYSBzdXJwcmlzaW5nbHkgbGF0ZSBkYXRlLCBpbnRlbmRlZCB0byBzZWN1cmUgYXJpc3RvY3JhdHMgYSBkZXBlbmRhYmxlIHNvdXJjZSBvZiBsYWJvdXIgYW5kIHN1c3RlbmFuY2UgaW4gYSBzb2NpZXR5IHdoZXJlIHdlYWx0aCB3YXMgbWVhc3VyZWQgcHJpbWFyaWx5IGJ5IGNhdHRsZSByYXRoZXIgdGhhbiBsYW5kIG9yIG1vbmV5LiAKSGVyIHNleHVhbCBhc3NhdWx0IGlzIGFsc28gYmFyZWx5IGluIHRoZSBib29rcyBhbmQgaXNuJ3QgbWVudGlvbmVkIGFnYWluIGFmdGVyIGhlciAiZmlyc3QgZGF0ZSIgd2l0aCBSaWNoYXJkLiBJbiB0aGUgYm9vayBzaGUgbmV2ZXIgZ2V0cyBhbiBhcG9sb2d5LCBzaGUgZG9lc24ndCBoYXZlIGZsYXNoIGJhY2tzIHRvIGl0LCBldGMuCkFuZCBzbyBJIGFtIGxlZnQgd2l0aCB0aGUga25vd2xlZGdlIHRoYXQgcGFydCBvZiBteSBib25kIHdpdGggc3R1ZGVudHMgaXMgYSBoaWdobHkgcmFjaWFsaXplZCBvbmUuIFNlZSB0aGVtIGFzIGZ1bGx5IGh1bWFuIGJlY2F1c2UgdGhleSBzZWUgbWUgdGhhdCB3YXkuIFNlZSB0aGVtIGFzIGhpZ2hseSBjb21wZXRlbnQgYmVjYXVzZSB0aGV5IHNlZSBtZSB0aGF0IHdheS4gClNpbmNlIHlvdSBhcmUgYWxyZWFkeSBjb250cm9sbGluZyBmb3IgZmFsc2UgcG9zaXRpdmVzIHJhdGVzIHdpdGggYSBmaXhlZCBwIHZhbHVlIHRocmVzaG9sZCwgdGhlIHF1ZXN0aW9uIHRoZW4gYmVjb21lcyB3aGV0aGVyIHlvdXIgZmFsc2UgbmVnYXRpdmUgcmF0ZSBpcyBhY2NlcHRhYmxlLiBJbiB0aGlzIHJlZ2FyZHMgeW91IG1hZGUgdGhlIGNsYWltIHRoYXQgeW91ciBmYWxzZSBuZWdhdGl2ZSByYXRlIHdvdWxkIGJlIHRvbyBoaWdoICh5b3VyIHBvd2VyIGJlaW5nIHRvbyBsb3cpIHRvIGRldGVjdCB0aGUgcHV0YXRpdmUgZWZmZWN0IHNpemUgaW4geW91ciBkYXRhLCBidXQgeW91IHBlcmZvcm1lZCBubyBwb3dlciBhbmFseXNpcyB0byBiYWNrIHRoaXMgdXAuIFRoZSBhY2NlcHRhYmxlIGxldmVsIG9mIHBvd2VyIGRlcGVuZHMgb24gdGhlIGVmZmVjdCBzaXplIHlvdSB3YW50IHRvIGRldGVjdCBpbiB5b3VyIGRhdGEsIHNvIHRoYXQgY291bGQgbWVhbiAzIHJlcGxpY2F0ZXMgaXMgZW5vdWdoIGZvciBvbmUgZXhwZXJpbWVudCwgYnV0IDYgaXMgcmVxdWlyZWQgZm9yIGFub3RoZXIuLiAKTXkgZmF2b3JpdGUgY29tbWVudCBmcm9tIHRoaXMgYXJ0aWNsZSByZXZpZXc6ICBDb1ExMCBkZWZpY2llbmN5IGlzIGNvbXBsZXRlbHkgcHJldmVudGFibGUgd2l0aCBzdXBwbGVtZW50YWwgQ29RMTAgd2l0aCBubyBhZHZlcnNlIGltcGFjdCBvbiB0aGUgY2hvbGVzdGVyb2wgbG93ZXJpbmcgb3IgYW50aSBpbmZsYW1tYXRvcnkgcHJvcGVydGllcyBvZiB0aGUgc3RhdGluIGRydWdzLiBXZSBhcmUgY3VycmVudGx5IGluIHRoZSBtaWRzdCBvZiBhIGNvbmdlc3RpdmUgaGVhcnQgZmFpbHVyZSBlcGlkZW1pYyBpbiB0aGUgVW5pdGVkIFN0YXRlcywgdGhlIGNhdXNlIG9yIGNhdXNlcyBvZiB3aGljaCBhcmUgdW5jbGVhci4gQXMgcGh5c2ljaWFucywgaXQgaXMgb3VyIGR1dHkgdG8gYmUgYWJzb2x1dGVseSBjZXJ0YWluIHRoYXQgd2UgYXJlIG5vdCBpbmFkdmVydGVudGx5IGRvaW5nIGhhcm0gdG8gb3VyIHBhdGllbnRzIGJ5IGNyZWF0aW5nIGEgd2lkZSBzcHJlYWQgZGVmaWNpZW5jeSBvZiBhIG51dHJpZW50IGNyaXRpY2FsbHkgaW1wb3J0YW50IGZvciBub3JtYWwgaGVhcnQgZnVuY3Rpb24uIApUaGUgcHJhY3RpY2FsIGFwcHJvYWNoIHdvdWxkIGJlIHRvIHRyYWRlIEtldmluIExvdmUsIHdobyBoYXMgdHdvIHllYXJzIChpbmNsdWRpbmcgYSAyMDE5IDIwIHBsYXllciBvcHRpb24pIGFuZCBhbG1vc3QgJDUwIG1pbGxpb24gcmVtYWluaW5nIG9uIGhpcyBjb250cmFjdCwgYW5kIGJ1aWxkIGEgeW91bmcgdGVhbSBhcm91bmQgQ29sbGluIFNleHRvbiwgTGFycnkgTmFuY2UgSnIuIApJIGJlbGlldmUgaW4gY29uc3RhbnQgZWR1Y2F0aW9uIGJlY2F1c2UgcHJvZHVjdHMsIHN0eWxlcywgYW5kIHBlb3BsZSBjaGFuZ2UgYW5kIHdpdGggb3V0IGVkdWNhdGlvbiB5b3UgY2FuIGJlIGxlZnQgYmVoaW5kLiBJIGFtIGEgY2VydGlmaWVkIE1hdHJpeCBDb2xvcmlzdCBhbmQgSSBhbSB1cCBmb3IgYW55IGNoYWxsZW5nZSBvZiBjb3JyZWN0aXZlIGNvbG9yLiBJIGVuam95IGRlc2lnbmluZyBzdHlsZXMgdGhhdCB3b3JrIGZvciBteSBjbGllbnRzIGV2ZXJ5IG5lZWQuIApQdXNoIHlvdXIgaGFuZCB1cCBhbmQgb3ZlciB0aGUgc2hvdWxkZXIgc28gdGhhdCB5b3VyIGZpbmdlcnMgZ28gdW5kZXIgdGhlIGNoaW4gYW5kIGludG8gdGhlIGNyZWFzZSBhZ2FpbnN0IHlvdXIgYmFieSdzIG5lY2suIApZb3Ugc2F5IHRoYXQgbGlrZSBpdCBnb2luZyB0byBtYWtlIHRoaXMgYm9vayBtb3JlIHBsZWFzYW50IHRvIHJlYWQuIEkgdGhpbmsgdGhhdCB0aGVyZSBhcmUgcmVhbGx5IGdvb2QgcmVhc29ucyB0aGF0IHRoaXMgcHJlcXVlbCBkb2VzbiBleGlzdC4gVGhhdCB3YXMgdGhlIHBvaW50IG9mIG15IHBvc3QuIEkgY2hvc2Ugb25lIHBhcnRpY3VsYXIgYW5nbGUsIGJ1dCBzdXJlLCB5b3UgY291bGQgY2hvb3NlIHRvIGRlcGljdCBTbmFwZSBhcyBhIGJpdCBtb3JlIG9mIGEgdmlsbGFpbi4gSSB0aGluayBpdCB3b3VsZCBiZSB2ZXJ5IGhhcmQgdG8gd3JpdGUgdGhlc2UgY2hhcmFjdGVycyBhcyBsaWthYmxlLiBKYW1lcyBQb3R0ZXIsIHRoZSBzdXBwb3NlZCBwcm90YWdvbmlzdCwgc291bmRzIGxpa2UgYSB2aWxsYWluIGZyb20gYSBKb2huIEh1Z2hlcyBmaWxtLCBhbmQgU25hcGUgY2VydGFpbmx5IGlzIG9mZiBiZWluZyBEZWF0aCBFYXRlcnkuIFdobyBhbSBJIHN1cHBvc2VkIHRvIHN5bXBhdGhpemUgd2l0aCBhbmQgbGlrZSBpbiB0aGlzIGJvb2s/RWRpdDogQWxzbywgSSBkb24gdGhpbmsgdGhhdCBkZXBpY3RpbmcgU25hcGUgYXMgYSAic2Nob29sIHNob290ZXIiIGV4YWN0bHkgcGFpbnRlZCBoaW0gYXMgYSAiZ29vZCBvbGUgYm95IG5leHQgZG9vciwiIGJ1dCBJIGd1ZXNzIHRoYXQgd2UgYWxsIGhvbGQgcGVvcGxlIHRvIGRpZmZlcmVudCBtb3JhbCBzdGFuZGFyZHMuU3RpbGwsIGhvdyBkbyB5b3UgdHVybiB0aGUgSmFtZXMgUG90dGVyIGZyb20gIlNuYXBlIFdvcnN0IE1lbW9yeSIgaW50byBhIGxpa2FibGUgY2hhcmFjdGVyPyBEbyB5b3UgcmVhbGx5IHRoaW5rIHRoYXQgaWYgeW91ciBoaWdoIHNjaG9vbCBxdWFydGVyYmFjayBzdGFydGVkIGJlYXRpbmcgdXAgb24gYW4gb3V0Y2FzdCBraWQgY2FsbGluZyBoaW0gc29tZXRoaW5nIGFraW4gdG8gIlRyZW5jaGNvYXQgTWFmaWEiIHRoYXQgaGUgd291bGQgYmUgYSBsaWthYmxlIGFuZCBzeW1wYXRoaXphYmxlIGNoYXJhY3RlciBhdCB0aGF0IHBvaW50PyBJcyBoZSBzdXBwb3NlZCB0byBiZSBib3VuZGluZyBhYm91dCBmaWdodGluZyBldmlsLCBidXQgdGhlbiBqdXN0IGhhdmUgdGhpcyBwb3AgdXAgb3V0IG9mIG5vd2hlcmU/IElzIEpLIFJvd2xpbmcgc3VwcG9zZWQgdG8gcGFpbnQgdGhhdCBraW5kIG9mIGFidXNpdmUgYmVoYXZpb3IgaW4gc29tZSBzb3J0IG9mIHBvc2l0aXZlIGxpZ2h0PwpTbyBmYXIgSSBub3QgaGFkIGFueSBtYWpvciBpc3N1ZXMuIApCdXQgdGhhdCdzIGp1c3QgdGhlIGJlZ2lubmluZyBiZWNhdXNlIHlvdSBhcmUgY2xvc2UgdG8gc28gbXVjaCBtb3JlLiBBbmQgYWxzbyB0aGUgZmxpeGJ1cyBydW5zIHRvIFJlbm8sIGl0J3MgYW1hemluZywgdXBkYXRlZCBjb2FjaCwgV2lGaSwgbW92aWVzIHlvdSBjYW4gd2F0Y2gsIGNvbWZ5LCBhbmQgY2hlYXAsIDQuOTkuIEZyb20gdGhlcmUgeW91IGNhbiBnbyB0byB0aGUgcGVwcGVybWlsbCB3aGljaCBpcyBhbiBhbWF6aW5nIHBva2VyIHJvb20sIHRoZXkgZ2l2ZSBtZSBmcmVlIG5pZ2h0cywgc28gSSBlbmQgdXAgZ2V0dGluZyBhIHRyaXAgdGhlcmUsIGZvciB1bmRlciAxMDAgZG9sbGFycy4gTGFzIFZlZ2FzIGlzIG9ubHkgYW4gaG91ciBwbGFuZSByaWRlLCBhbmQgeW91IGNhbiBnZXQgZGVhbHMgZm9yIDI5IGRvbGxhcnMgZWFjaCB3YXkgc29tZXRpbWVzLiBOb3QgdG8gbWVudGlvbiB0aGUgc2FtZSBmb3IgTEEgYW5kIG9mIGNvdXJzZSwgdGhlIG1lZ2EgYnVzIGFuZCBmbGl4YnVzIGdvIHRoZXJlIHRvbywgZm9yIHN1cGVyIGNoZWFwLgpMaWZ0IHRoZSByaWIgY2FnZS4gCkFjdHVhbGx5LCB0aGUgdGVybSAibWFpbiBtZW1vcnkiIGlzIHJlc2VydmVkIGZvciB0aGUgcHJpbWFyeSBsb2NhdGlvbiB3aGVyZSBhY3RpdmUgd29yayBpcyBzdG9yZWQuIEluIG1vZGVybiBjb21wdXRlcnMsICJtYWluIG1lbW9yeSIgY29uc2lzdHMgb2YgRFJBTSBjaGlwcyBtb3VudGVkIHNvbWV3aGVyZSBuZWFyIHRoZSBDUFUuIApCaWVuIGF1IGNvbnRyYWlyZSAhLiAKTmV0IHdvcnRoIGlzICQzMDBLIGluIHJldGlyZW1lbnQgYWNjb3VudHMsICQ1MDBLIGluIGJyb2tlcmFnZSwgYW5kICQyMDBLIGluIGhvbWUgZXF1aXR5LiBTaW5jZSBJIHBsYW4gb24gc2VsbGluZyBhcGFydG1lbnQgb3ZlciBuZXh0IGZldyB5ZWFycyBhbmQgcG90ZW50aWFsbHkgcmVudGluZyBhZ2FpbiwgSSBhbSB0cmVhdGluZyB0aGlzIGFzIHJlYWwgbW9uZXkuCklmIHlvdXIgaGFwcHkgd2l0aCB0aGUgc2l6ZSBnZXQgYW4gU0UuIEkndmUgaGVsZCBvdXQgYmVjYXVzZSBvZiBzaXplLiBZb3UgY2FuIHNuYWcgYSAxMjggdW5sb2NrZWQgb24gYXQgYXBwbGUgd2hlbiBpbiBzdG9jayBmb3IgJDI5OS4gCk9rIHNvICJyYWtlIiBpcyBob3cgdGhlIGhvdXNlIG1ha2VzIG1vbmV5LiBXaGVuZXZlciB5b3UgcGxheSBhIGhhbmQgb2YgYSBjYXNoIGdhbWUsIHRoZSBvbmxpbmUgcG9rZXIgc2l0ZSB0YWtlcyBhICUgb2YgdGhlIG1vbmV5IHdhZ2VyZWQgaW4gdGhhdCBoYW5kLiBXaGVuZXZlciB5b3UgcmVnaXN0ZXIgdG8gcGxheSBhIHRvdXJuYW1lbnQsIHRoZSBob3VzZSB0YWtlcyBhIG9uZSBvZmYgcmVnaXN0cmF0aW9uIGZlZSAod2hpY2ggY291bnRzIGFzIHJha2UpLiBPYnZpb3VzbHkgd2hhdCB0aGlzIG1lYW5zIGlzIHRoZSBtb3JlIHlvdSBwbGF5LCB0aGUgbW9yZSByYWtlIHlvdSBwYXkuCkkgZG9uIGtub3cgdGhlIGNvbnRleHQgb2YgeW91ciByZWxhdGlvbnNoaXAgd2l0aCB0aGlzIGd1eSBidXQgaWYgeW91IGNvbnNpZGVyIGhpbSB0byBiZSBhIGZyaWVuZCwgaXQga2luZGEgc291bmRzIGxpa2UgeW91IGJldHJheWVkIGhpbS4gCkkgZG9uJ3Qgc2VlIGFuIEFyYyBmb3IgYW55IGNoZWYgb3IgdGhlIHNlYXNvbiBhcyBhIHdob2xlLCBhcyBjb21wYXJlZCB0byBsaWtlLiBTaGlybGV5J3MgYXJjIG9uIGhlciBmaXJzdCBzZWFzb24uCkknbSBoYXZpbmcgYSBoYXJkIHRpbWUgYmVsaWV2aW5nIEkgYW0gbGlhYmxlIGZvciB0aGVpciBtaXN0YWtlLiBUaGVpciByZWFzb25pbmcgd291bGQgaW1wbHkgdGhhdCB0aGV5IGNvdWxkIHVuaWxhdGVyYWxseSBjaGFuZ2UgdGhlIEhVRCBmb3IgYW55IHJlYXNvbiBpZiBpdCBoZWxwcyB0aGVtIHNlbGwgdGhlIGxvYW4uCkkgd2FzIHdvcmtpbmcgaW4gYSBjb21tdW5pdHkgdGhlYXRlciwgd2hlcmUgdGhlIG1hbmFnZXIgb2YgdGhlIHBsYWNlIHdhcyBjbGVhcmx5IG92ZXIgNDAwIDUwMGxicy4gV2hlbiBJIGZpcnN0IG1ldCBoaW0sIEkgY291bGRuIGZpZ3VyZSBvdXQgd2hhdCBzbWVsbGVkLiBJIHdlbnQgdG8gbXkgY2FyIGFuZCB0aGUgc3RpbmsgZm9sbG93ZWQgbWUuCllvdSBvbmUgb2YgdGhlIGZldyBwZW9wbGUgdGhhdCBnb3QgYXdheSB3aXRoIGFuIGFjdHVhbGx5IGhlYWx0aHkgdGhyZWVzb21lIHdoZXJlIHlvdXIgZ2lybGZyaWVuZCBnZW51aW5lbHkgd2FudGVkIGl0IGFzIG11Y2ggYXMgeW91IGRpZCBhbmQgd2VudCBvdXQgYW5kIGZvdW5kIGEgdGhpcmQgd2l0aCB3aG9tIHNoZSBjb21mb3J0YWJsZS4gU29tZSBwZW9wbGUgb24gaGVyZSBhcmUgY2FsbGluZyB5b3VyIGdpcmxmcmllbmQgYSB0aG90IG9yIHlvdSBhIHB1c3N5LCBidXQgaW1vIHlvdSBmb3VuZCBhIGtlZXBlciB0aGF0IHdpbGwgYnJpbmcgeW91ciB3aWxkZXN0IGZhbnRhc2llcyB0byBmcnVpdGlvbiBzaW1wbHkgYmVjYXVzZSBzaGUgaW52ZXN0ZWQgaW4geW91ciBzZXh1YWxpdHkuIApDaG9vc2UgaG93IHRoZSBhcm9tYXRoZXJhcHkgd2lsbCB3b3JrLiBXaWxsIGl0IGJlIGRpZmZ1c2VkIG9yIHdpbGwgaXQgYmUgdXNlZCBkaXJlY3RseSBvbiB0aGUgYm9keT8gUHJvZHVjdHMgbGlrZSBhcm9tYXRoZXJhcHkgcHVtcHMsIGxhbXBzIG9yIGRpc2NzIGRpZmZ1c2UgdGhlIHNjZW50LiBQcm9kdWN0cyBzdWNoIGFzIGxvdGlvbnMsIG1hc3NhZ2Ugb2lscyBvciBzb2FwcyBnbyBkaXJlY3RseSBvbiB0aGUgc2tpbi4gCkZlZWwgc28gc3Ryb25nbHkgYWJvdXQgdGhpcwpIaSBrZWxsaWdpcmwxMTI2ISBUaGFua3MgZm9yIHBvc3RpbmcgdG8gL3IvYXd3LiBmb3VuZCBoaW0gaW4gYSBkdW1wc3RlcikuCkEgbWFzc2l2ZSBmaXJlIGF0IGEgaG9tZSB1bmRlciBjb25zdHJ1Y3Rpb24gaW4gTGF3cmVuY2UgUGFyayBoYXMgYmVlbiBwdXQgb3V0IGFmdGVyIGJ1cm5pbmcgZm9yIG1vcmUgdGhhbiAxMiBob3VycyBidXQgb2ZmaWNpYWxzIHNheSB0aGF0IHRoZXkgYXJlIHN0aWxsIHdvcmtpbmcgdG8gZXh0aW5ndWlzaCBzb21lIGhvdHNwb3RzLiBUaHVyc2RheS4KU3VpdHMgYXJlIG5vdCB1c2VkIHRvIGJyZWFrIHRpZXMuIApQZW9wbGUgaW4gcnVyYWwgT3JlZ29uIGJlbmVmaXQgZnJvbSB1cmJhbiBPcmVnb24gaW4gbWFueSB3YXlzLiAKQW5kIHNpbWlsYXIgc2l0dWF0aW9ucyBoYXBwZW4gcmVndWxhcmx5LiBJZiBJIGJldCwgYW5kIGhlIGNhbGxzLCBJIGF0IGxlYXN0IGtub3cgaGUgZ290IHNvbWV0aGluZyBkZWNlbnQgaGVyZSwgZ2l2ZW4gaGUga25vd3MgaG93IHdlbGwgdGhlIGJvYXJkIGhpdHMgbXkgcmFuZ2UsIHlldCBzdGlsbCBjb250aW51ZXMuCllvdSBjYW4gY2hvb3NlIHRoZSBwbGFpbiBncmVlbiwgYnV0IGlmIHlvdSBsb3ZlIHRoZSBpZGVhIG9mIHBhdHRlcm5lZCBjbG90aCwgZ28gd2l0aCB0aGF0ISBUaGluayBhYm91dCB0aGUgcm9vbSB0aGF0IHlvdSBoYXZlIGRlZGljYXRlZCB0byBwb2tlciBhbmQgYWxzbyBjb25zaWRlciBob3cgd2VsbCB5b3VyIG5ldyBwb2tlciB0YWJsZSwgY29tcGxldGUgd2l0aCBiZWF1dGlmdWwgY2xvdGgsIHdpbGwgbG9vayB3aGVuIHlvdSBpbnN0YWxsIGl0IS4gCkkgcmVhbGx5IGRpZC4gClJlZnJpZ2VyYXRlIHVudGlsIHNldCwgYWJvdXQgMzAgbWludXRlcy4gClRoZSBmb2xsb3dpbmcgbGV0dGVyIHdhcyByZWNlaXZlZCBieSB0aGUgcGFyZW50cyBvZiBTZXJnZWFudCBPYnNlcnZlciBSb2JlcnQgQWxsZHJpY2ssIHdob3NlIHBsYW5lIHdhcyBzaG90IGRvd24gb3ZlciBIb2xsYW5kIHNvbWUgbW9udGhzIGFnbywgYW5kIHdobyBpcyBub3cgYSBwcmlzb25lciBvZiB3YXIgaW4gYSBHZXJtYW4gaW50ZXJubWVudCBjYW1wLiBJdCB3YXMgcG9zdGVkIERlY2VtYmVyIDMwLCBhbmQgYXJyaXZlZCBpbiBHcmltc2J5IG9uIEZlYnJ1YXJ5IDI1LiBNYXJrZWQgYWlybWFpbCwgaXQgcHJvYmFibHkgY2FtZSBieSB0aGUgU291dGggQXRsYW50aWMgUm91dGUsIGFuZCBpdCBoYWQgYmVlbiBvcGVuZWQgYnkgY2Vuc29ycy4gCkkgd2lzaCBoZXIgdGhlIGJlc3Qgb2YgbHVjay5GdXJ0aGVybW9yZSwgcmFkaW9ncmFwaGljIGV2aWRlbmNlIG9mIHlvdXIgc2tlbGV0YWwgYWdlIHdvdWxkIGJlIHRha2VuIGludG8gYWNjb3VudCBieSB5b3VyIGRvY3RvciwgdGhpcyBpcyBrbm93biBhcyBhIFJpc3NlciBzaWduLiBTb21lb25lIHdobyBoYXMgcmVhY2hlZCBza2VsZXRhbCBtYXR1cml0eSB3aWxsIGhhdmUgYSBSaXNzZXIgc2lnbiBvZiA1LlRoaXMgd2FzIHRha2VuIGZyb20gdGhlIGZpcnN0IHBhcmFncmFwaCBvZiB0aGUgY2l0ZWQgdGV4dCwgIk1hbnkgcGF0aWVudHMgd2l0aCBBSVMgaGF2ZSBtb3JlIHBhaW4gYnV0IGRvIG5vdCBleGhpYml0IG1vcmUgZGlzYWJpbGl0eSB0aGFuIHRoZSBnZW5lcmFsIHBvcHVsYXRpb24uIERlcHJlc3Npb24gZG9lcyBub3Qgc2VlbSB0byBiZSBtb3JlIG9mIGEgcHJvYmxlbSB0aGFuIGluIHRoZSBnZW5lcmFsIHBvcHVsYXRpb24gKDc5KS4gCjEwLiBCcmVhc3QgV2lzaGVzIGluIExpc21vcmU6IEJyZWFzdCBXaXNoZXMgaXMgYW4gdXBsaWZ0aW5nIEF1c3RyYWxpYW4gbXVzaWNhbCBjb21lZHkgYWJvdXQgbGlmZSwgbG92ZSwgZmFtaWx5IGFuZCBzaWxpY29uLiBJdCBmb2xsb3dzIHRoZSBqb3VybmV5IG9mIGEgZmFtaWx5IGFuZCB0aGUgZXZlbnRzIHRoYXQgaGF2ZSBzaGFwZWQgdGhlaXIgYnJlYXN0cy4gCkFuZCBQYXJraW4sIEIuIChlZC4pIFNwb3J0IGFuZCB0aGUgQnJhaW46IFRoZSBTY2llbmNlIG9mIFByZXBhcmluZywgRW5kdXJpbmcgYW5kIFdpbm5pbmcsIFBhcnQgQiBFbHNldmllci4gUHAuIDMxNyAzMzhHdW5zbGluZ2VycywgcG9rZXIgcGxheWVycywgYW5kIGNoaWNrZW5zIDE6IERlY2lzaW9uIG1ha2luZyB1bmRlciBwaHlzaWNhbCBwZXJmb3JtYW5jZSBwcmVzc3VyZSBpbiBlbGl0ZSBhdGhsZXRlc1BhcmtpbiwgQi4sIFdhcnJpbmVyLCBLLiAKIldlIGdvdCBhYnNvbHV0ZWx5IG5vdGhpbmcgdG8gaGlkZSBhdCB0aGUgU2hhbmUgV2FybmUgRm91bmRhdGlvbi4gCkJlYXJkIGxhdGVyIGNoYW5nZWQgaGlzIHN0b3J5IGR1cmluZyBoaXMgb3duIHRyaWFsLCBidXQgd2FzIHN0aWxsIGNvbnZpY3RlZC4gCllvdSB3aWxsIHByb2JhYmx5IHdvcmsgaW4gYSBzY2hvb2wgdGhhdCBpcyBzdGFmZmVkIGJ5IGF0IGxlYXN0IDgwJSB3b21lbi4gCkkga25vdyB3aGVuIG15IGd1aWxkIGtpbGxlZCBSYWcgYXQgZmlyc3Qgd2UgYWxsIGhhZCBzb21lIGZpcmUgcmVzaXN0IGFzIG91ciBnZWFyIHdhc24gZ3JlYXQgc2luY2UgaXQgd2FzIGVhcmx5LiAKSWYgdGhleSBoYXZlIHRvIHNheSB0aGF0LCBpdCBtZWFucyB0aGF0IHRoZSBwbGFjZSBpcyBsaWtlbHkgaGF1bnRlZC4gRG9uJ3Qgc2F5IEkgZGlkbid0IHdhcm4geW91LgpIZSBjb3ZlcmVkIHVuY29tcHJvbWlzaW5nIHRvcGljcyBvbiByYWNpc20sIGNvbnRlbXBvcmFyeSBpc3N1ZXMgYW5kIG1vcmUsIGFsbCBvZiB3aGljaCB3ZXJlIHBlcHBlcmVkIHdpdGggaGlzIHVuaXF1ZSBmbGF2b3Igb2YgdW5icmlkbGVkIHByb2Zhbml0eS4gCkV2ZW50dWFsbHksIEkgd2FzIG9rYXkgd2l0aCB0aGlzIG9uIGNvbmRpdGlvbiB0aGF0IGhlIGdvZXMgdG8gcG9rZXIgb25seSBNb25kYXkgVGh1cnNkYXksIHdlZWtlbmQgaXMgZmFtaWx5IHRpbWUuIEhlIHdhcyByZWFsbHkgaGFwcHkgd2l0aCB0aGlzIGJlY2F1c2UgcG9rZXIgaXMgYSB3ZWVrZGF5IHRoaW5nIGZvciBoaW0gYW55d2F5LiAKSWRlYSAxOiBEZWxldGV0aGVzcGFjZXNiZXR3ZWVud29yZHMuIFRoaXMgaXMgYSBwb3NzaWJsZSBzb2x1dGlvbiwgYW5kIHdvdWxkIGZpeCB0aGUgIk5NIiB3b3JkIEkgZm91bmQsIGJ1dCBJIGRvbid0IGhhdmUgZW5vdWdoIGxldHRlcnMgdG8gc2VlIGlmIHRoaXMgd291bGQgd29yay4gSSdtIGhpZ2hseSBza2VwdGljYWwgdGhhdCBsZXR0ZXIgY29tYmluYXRpb25zIGxpa2UgIktOWSIgb3IgIk1FVVkiIGNhbiBiZSBkaXZpZGVkIGludG8gcmVhbCB3b3Jkcy4gSW4gYWRkaXRpb24sIHF1aXBxdWlwIGNhbiBiZSBtYWRlIHRvIG1vdmUgd29yZCBzcGFjZXMgYXJvdW5kIGFuZCBteSBlZmZvcnRzIGhhdmVuIGZvdW5kIGFueXRoaW5nIHlldC4KQWxsIHlvdSBuZWVkIHRvIGRvIGlzIGFjY2VzcyB0aGUgd2hvbGVuZXNzIHRoYXQgaXMgYWxyZWFkeSB5b3VycyB0aHJvdWdoIHByYXllciBhbmQgbWVkaXRhdGlvbiBvbiB0aGUgc2NyaXB0dXJlcy4gTGl0ZXJhbGx5IGV2ZXJ5IG9uZSBGcmlkYXksIFNhdHVyZGF5IGFuZCBzb21ldGltZXMgZXZlbiBvbiBTdW5kYXkuIApKIFRFTExFTUVOVCBnYWxyICBsYSBwdHJpciBjZXR0ZSBjb25uYXNzZS4gT24gYSBtaXMgbGVzIG1tZXMgcHJvcG9ydGlvbiBlbiBlYXUvZmFyaW5lIHRvdXMgbGVzIDMgKHVuIGF1dHJlIHBvdGUgYXBwcmVuYWl0IGF2ZWMgbW9pKSBhdmVjIGxlcyBtbWUgZmFyaW5lcy9tbWUgZWF1L21tZSBsZXZ1cmUgZXQgY2hleiBtb2kgYSBhIGNvbGwgYXNzZXogdmlvbGVtbWVudC4KSSB1bmRlcnN0YW5kIHRoYXQgb3ZlcmFsbCB5b3UgZW5qb3llZCBhIHN0YXkuIFlvdXIgZmVlZGJhY2sgaXMgbm90ZWQgYW5kIGhhdmluZyBhZGRyZXNzZWQgd2l0aCBvdXIgQ2hlZiB3aG8gaGFzIGxvb2tlZCBpbnRvIHRoaXMgZm9yIGltbWVkaWF0ZSBpbXByb3ZlbWVudHMuIEFzIHlvdSBtZW50aW9uZWQgLCB1c2luZyBIb3RlbCBmYWNpbGl0aWVzIGF0IENlbnRhcmEgR3JhbmQgb3VyIHNpc3RlciBwcm9wZXJ0eSBpcyBhIHBsdXMgYW5kIHByaXZpbGVnZSBmb3IgZ3Vlc3Qgb2YgQ2VudGFyYSBWaWxsYXMgUGh1a2V0ISBXZSB3aXNoIHRvIGhhdmUgYSBwbGVhc3VyZSBvZiB3ZWxjb21pbmcgeW91IGJhY2sgdG8gYm90aCBSZXNvcnRzIHNvb24uIApXaGVuIEkgYXJyaXZlZCBiYWNrIGF0IG91ciByb29tICh3ZWxsIGFmdGVyIHRoZSBzaG93IGhhcyBmaW5pc2hlZCksIHNoZSBoYWQgMTUgcGVvcGxlIGNyYW1tZWQgaW50byBvdXIgcm9vbSwgd2F0Y2hpbmcgYW5vdGhlciBzaG93LiBUaGVyZSB3ZXJlIDQgcGVvcGxlIG9uIG15IGJlZCBhbmQgb25lIG9mIHRoZW0gd2FzIHVzaW5nIG15IHBpbGxvdyBhcyBhIGZvb3QgcmVzdC4gCk1IOiBJIGp1c3QgZm91bmQgYW4gZWxlY3RyaWNhbCBzb2NrZXQgdG8gcGx1ZyBpbiBteSBsYXB0b3AuIEFwb2xvZ2llcyB0byB0aGUgcGVvcGxlIHdobyB3YW50ZWQgdG8gcGxheSBHb2xkZW4gVGVlIHRvbmlnaHQuIEJvdXJkb24gaGFuZGxlcyBoaXMgZmlyc3QgdHdvIG9uIHR3byB3aXRoIHJlbGF0aXZlIHN1Y2Nlc3MgSmltIEh1Z2hzb24gZ2l2ZXMgaGltIHByb3BzLgpUaGUgdmVyeSBveHlnZW4gd2UgYnJlYXRoIGlzIHBvaXNvbm91cy4gCkluIEh4SCwgdGhhdCBjYW4gdmVyeSB3ZWxsIGJlIGNvbXBhcmVkIHRvIGdvdG9oIGZlYXQgb2Ygc2VuZGluZyBiYWNrIGEgY2x1c3RlciBvZiBidWxsZXQgY29pbnMgKGRpZG4gbWFuYWdlIHRvIGZpbmQgdGhlIHNjYW4sIHNvcnJ5KS4gCldlIHdyYXAgdXAgb3VyIHNlbGVjdGlvbnMgd2l0aCBzb21lIHBvcnQgZm9yIHRoZSBjb2xkIGRheXMgYnkgdGhlIGZpcmUgb3IgZm9yIHRoZSBwZXJmZWN0IHBvc3QgZGlubmVyIHNpcC4gQm90aCBhcmUgd29vZCBhZ2VkIHBvcnRzIGFuZCBtb3JlIHRoYW4gcmVhZHkgdG8gZHJpbmsuIEZpcnN0IHVwIGlzIFdhcnJlJ3MgT3RpbWEgMTAgWWVhciBPbGQgUG9ydCAoJDI2Ljk5KSB0aGF0IHNwZW5kcyBhbiBhdmVyYWdlIG9mIDEwIHllYXJzIGluIG9sZCBjYXNrcyBvciB0aGUgZXF1YWxseSB0YXN0eSBidXQgZGlmZmVyZW50IGluIHN0eWxlIEZvbnNlY2EgQmluIE5vIDI3IEZpbmVzdCBSZXNlcnZlIFBvcnQgKCQyNC45OSksIGNyZWF0ZWQgb3ZlciBhIGNlbnR1cnkgYWdvIGZvciBmYW1pbHkgY29uc3VtcHRpb24uCkZpcnN0IHlvdSBoYXZlIHRvIHVuZGVyc3RhbmQgd2hhdCBIb2xkZW0gUG9rZXIgUmVhbCBpcy4gSXQncyBwbGF5ZWQgd2l0aCB0aGUgY29tbW9uIENhcmQgRGVjayBjb25zaXN0aW5nIG9mIDUyIGNhcmRzLiAKQSBHbGltcHNlIE9mIFZlbmljZSBKdXN0IGEgZmV3IG1pbnV0ZXMgZnJvbSBpcyBhIG1pbmkgVmVuaWNlLiBBdCBUaGUgVmVuZXRpYW4sIHdoaWNoIHJvc2UgdG8gZmFtZSBhZnRlciBob3N0aW5nIDIwMTMgSUlGQSBBd2FyZHMsIGdvbmRvbGllcnMgd2lsbCBzaW5nIHRoZWlyIGhlYXJ0cyBvdXQgZm9yIGEgY291cGxlIGJlaW5nIG5hdmlnYXRlZCBpbiB0aGUgY2l0eSBjYW5hbHMuIE9uIGEgc3VubnkgZGF5IG9yIG9uIGEgY2xlYXIgbmlnaHQgd2l0aCB0d2lua2xpbmcgc3RhcnMsIHlvdXIgaGVhcnQgaXMgc3VyZSB0byBza2lwIGEgYmVhdCBhdCB0aGUgYmVhdXR5IG9mIHRoZSBjYW5hbHMuCklzIHRoZWlyIGFza2luZyBwcmljZSBpbiBsaW5lIHdpdGggd2hlcmUgeW91IGxpa2VseSBuZWVkIHRvIGJ1eSBpdD8gVGhlIHZhc3QgbWFqb3JpdHkgb2YgdGhlIHRpbWUgaXQgd2lsbCBOT1QgYmUuIFNvIGRvbid0IHdvcnJ5IGFib3V0IGl0LiBUaGUgYXNraW5nIHByaWNlIGlzIGp1c3QgdGhlIHByaWNlIHRoZXkgYXJlIGhvcGluZyB0byBnZXQgZm9yIGl0LiAKQm9iIGFsc28gbGlzdHMgJ0ZyYW5jZXMgVmljdG9yaWEnLCBhIHNsZW5kZXIgZmxvd2VyZWQgcG9rZXIgdGhhdCBvcGVucyBncmVlbiB5ZWxsb3cgaW4gbGF0ZSBPY3RvYmVyIGJlZm9yZSBmbHVzaGluZyB0byBhcHJpY290LiBJdCBjYW4gYXBwYXJlbnRseSBmbG93ZXIgaW4gRGVjZW1iZXIgaW4gbWlsZCB5ZWFycy4uIApLaWxsaW5nNHBpenphIHUKVGhpcyB5ZWFyLCBMZWZ0IEhhbmQgc3VwcG9ydGVkIDYwMCByaWRlcnMgYW5kIHZvbHVudGVlcnMgaW4gc2l4IHN0YXRlcyB0aGF0IGNvbGxlY3RpdmVseSByYWlzZWQgJDczMCw0MjcsIGl0cyBsYXJnZXN0IHN1bSB0byBkYXRlLiAKSSBjb3VsZG4ndCBiZWxpZXZlIHRoYXQgc2hlIHdvdWxkIGRpc2N1c3MgdGhpcyBpbiBmcm9udCBvZiBteSBtb20gYW5kIG1lLCBpdCB3YXMgdGhlIGZpcnN0IHRpbWUgd2UnZCBtZXQgYW55IG9mIHRoZW0uIApQZW9wbGUgaW4gRXVyb3BlIHdhbnQgaGVhbHRoeSBmb29kLCB0aGF0IGdyZWF0LiAKVGhlIGNvbmNlcHQgY3JlYXRlcyBhIHRhbmdpYmxlIGV4cGVyaWVuY2UsIHRoYXQgcHJvbW90ZXMgTG9uZG9uJ3MgbmF0aXZlIHdpbGRsaWZlIGFuZCBlbmNvdXJhZ2VzIGFsbCB0byBiZWNvbWUgYW4gYWN0aXZlIHJvbGUgd2l0aGluIG91ciBlbnZpcm9ubWVudC4gUmljaGFyZCB3aWxsIGJlIHNoYXJpbmcgYW4gaW50ZXJhY3RpdmUgaW5zdGFsbGF0aW9uIGV4cGxvcmluZyBsaWdodCBhbmQgdHJhZGl0aW9uYWwgcml0dWFsIG1hbmlwdWxhdGlvbnMgb2YgaXQuIApTcGVuZCB5b3VyIHRpbWUgb24gdGhlIGFjdHVhbCBidXNpbmVzcyBhbmQgbGV0IHRoZSBzcGVjaWFsaXN0cyB0YWtlIGNhcmUgb2YgdGhlIGFkbWluIHN0dWZmLi4gCkhlcmUgSHVkc29uIFlhcmRzIGluIGEgbnV0c2hlbGwgICBhIGd1aWRlIHRvIGFsbCBvZiB0aGUgbWFqb3IgYnVpbGRpbmdzIGFuZCBhdHRyYWN0aW9ucyBhdCBSZWxhdGVkIENvbXBhbmllcycgMTUgYWNyZSBjb21wbGV4LgpTbywgYXMgeW91IHNlZSwgeW91IGdvdCB0byBnaXZlIHVwIHlvdXIgMmJldCBhbmQgbW92ZSBvbi4gCk5ldyByZXNvcnRzIG9mdGVuIGRhbmdsZSBzcGEgZGVhbHMgdG8gaGVscCBnZXQgdGhlIHdvcmQgb3V0LiBUaGF0J3MgdGhlIGNhc2Ugd2l0aCBTYW5kIEhpbGwsIGEgMTIzIHJvb20gcmV0cmVhdCB0aGF0IG9wZW5lZCBpbiBBcHJpbCB3aXRoIHJhdGVzIGxvdyBlbm91Z2ggdG8gbWFrZSBpdHMgb3ZlciB0aGUgdG9wIGx1eHVyeSBhY2Nlc3NpYmxlLCBhdCBsZWFzdCB0aHJvdWdoIHRoZSBlbmQgb2YgdGhlIHllYXIuIApOYXR1cmFsbHksIHRoZXJlIGFyZSBzb21lIG9ubGluZSBwb2tlciBzaXRlcyB3aG8gbWF5IGluZGVlZCBoYXZlIGEgaGlnaCBtZW1iZXJzaGlwIHJhdGUuIEJ1dCB1bmZvcnR1bmF0ZWx5IGZvciBmaXJzdCB0aW1lIHBva2VyIHBsYXllcnMgbGlrZSB5b3UsIG1vc3Qgb2YgdGhlIHJlZ2lzdGVyZWQgbWVtYmVycyBpbiB0aGVzZSBzaXRlcyBhcmUgYWxyZWFkeSB2ZXJ5IGdvb2QgcG9rZXIgcGxheWVycyBhbmQgcXVpdGUgZGlmZmljdWx0IHRvIGJlYXQgd2hlbiB5b3UgZ28gYWdhaW5zdCB0aGVtLiAKTm8gam9iIHdhcyB0b28gZGF1bnRpbmcgZm9yIGhpbS4gCkkgZG9uIHJlYWxseSBzZWUgd2h5IHRoZSB0d28gYXJlIGV2ZW4gbXV0dWFsbHkgZXhjbHVzaXZlIHRoZSB3YXkgeW91IG1ha2luZyB0aGVtLiBJdCBsaWtlIGEgcmVjdGFuZ2xlIHNxdWFyZSBraW5kIG9mIHRoaW5nIHRvIG1lLiAKSSBhbG1vc3QgYmxhY2tlZCBvdXQgZnJvbSBsYWNrIG9mIG94eWdlbiBzZXZlcmFsIHRpbWVzLiAKSSBjZXJ0YWlubHkgZG9uJ3QgdGhpbmsgb25lIHNob3VsZCBhbHdheXMgY2hlY2sgYmFjayB0byB0aGUgcHJlIGZsb3AgcmFpc2VyLi4gCkRpZXNlbCB2ZWhpY2xlcyBtYWtlIHVwIG1vcmUgdGhhbiBoYWxmIG9mIHRoZSBjYXIgc2FsZXMgaW4gRXVyb3BlLi4gClRoZXkgZG9uIHVuZGVyc3RhbmQgd2hhdCBpdCBsaWtlIHRvIGJlIGRpZmZlcmVudCAoaWYgdGhleSBuZXZlciBzcGVudCBhbnkgc2lnbmlmaWNhbnQgdGltZSBvdXRzaWRlIG9mIEtvcmVhLikgVGhleSBkb24ga25vdyB3aGF0IHlvdSBkbyBhbmQgZG9uIGtub3cgYWJvdXQgS29yZWEgYmFzZWQgb24geW91ciB2aXN1YWwgYXBwZWFyYW5jZSwgYW5kIGV2ZW4gdGhlbiwgdGhleSBkb24ga25vdyBob3cgbXVjaCBvZiB0aGUgY3VsdHVyZSB5b3UgYXdhcmUgb2Ygb3Iga25vdyBob3cgdG8gcGFydGljaXBhdGUgaW4uIApUb3lvdGEgaXMgdGhlIGZpcnN0IG1hcmtldGVyIHRvIHRha2UgYWR2YW50YWdlIG9mIE5CQyBVbml2ZXJzYWwncyBhZHZlcnRpc2luZyBvZmZlcmluZyBvbiBTbmFwY2hhdC4gCkxhIG1tb2lyZSA6IG1tb2lyZSBkdSBnb3QsIG1tb2lyZSBkZXMgbGlldXguIApCeSBtYWtpbmcgdGhlIHJpY2ggcmljaGVyIGFuZCB0aGUgcmVzdCBvZiBzb2NpZXR5IHBvb3JlciwgYnkgbWFraW5nIHdoaXRlIHBlb3BsZSB0aGUgbWFzdGVyIHJhY2UgYW5kIGVuc2xhdmluZyBhbGwgdGhlIGNvbG9yZWQgcGVvcGxlLCBieSBwcm9tb3RpbmcgdGhlIGludGVyZXN0cyBvZiBtZW4gb3ZlciB0aGUgaW50ZXJlc3RzIG9mIHdvbWVuLCBldGMuKSBpdCByaWdodCB3aW5nLi4gCkkgbWVhbiBpZiB3ZSByZWFsbHkgd2VyZSB1cHNldCBhYm91dCBCUCBhcyBhIHBlb3BsZSwgd2Ugd291bGQgc2ltcGx5IG5vdCBnaXZlIHRoZW0gb3VyIG1vbmV5IG5vdCBvbmx5IGF0IHRoZSBwdW1wIGJ1dCBhbGwgdGhlaXIgc3Vic2lkaWFyaWVzLCBhbmQgdGhleSB3b3VsZCB3b3VsZCBuZXZlciBkbyB0aGF0IGFnYWluLgpBbHNvIEZ1bnBsYXkgdW5kIGtlaW4gU2VyaW91cyBQb2tlciBpaHIgbWVya3Qgc2Nob24sIGljaCBoYWJlIHNlaHIgdmllbGUgdW50ZXJzY2hpZWRsaWNoZSBWYXJpYW50ZW4gKFNlcmlvdXMsIERyZWkgR3Jvc2NoZW4gdW5kIEZ1biBQb2tlcikgenUgUG9rZXJuLiAKV2hlbiB0aGUgbnVtYmVycyBmaXJzdCBkcm9wcGVkIEkgY2FtZSBwcmV0dHkgY2xvc2UgdG8gd3JpdGluZyBhIGJpZyBlc3NheSB0aHJhc2hpbmcgQXBwbGUsIEkgaGFkIGFsbCBzb3J0cyBvZiBzY2F0aGluZyBpbmRpY3RtZW50cyBhbmQgaW5zdWx0cyBwbGFubmVkIHRoYXQgSSByZWFsbHkgd2FudGVkIHRvIHdyaXRlIGRvd24gYW5kIHBvc3QsIGJ1dCB3aGVuIHRoZSByZWFsIG51bWJlcnMgaGl0LCBhbmQgdGhlaXIgbnVtYmVycyB3ZW50IGZyb20gYSBkaXNlbmdhZ2VtZW50IGV2ZXJ5IG1pbGUgdG8gb25lIGV2ZXJ5IDIsMDAwIG1pbGVzIGR1ZSBsYXJnZWx5IHRvIGEgY2hhbmdlIGluIHRoZWlyIHJlcG9ydGluZyBwb2xpY3ksIEkgd2FzIGdsYWQgSSBkaWRuCkRlYWxlcnMgYXJlIGxpa2Ugd2FpdHN0YWZmIGluIHRoYXQgdGhleSBtYWtlIG1vc3Qgb2YgdGhlaXIgbW9uZXkgZnJvbSB0aXBzLiAKU28gd2hhdCBtYWtlcyB0aGUgMjAwIDExLjVnIFBva2VyIENoaXAgSGlnaCBSb2xsZXIgU2V0IHdpdGggQ2xlYXIgQ292ZXIgQWx1bWludW0gQ2FzZSBzbyBzcGVjaWFsPyBUaGUgZmlyc3QgdGhpbmcgdGhhdCBjb21lcyB0byB5b3VyIGF0dGVudGlvbiB3aWxsIGJlIHRoZSBkZXNpZ24gb24gZWFjaCBjaGlwLiBUaGVzZSBhcmUgbm90IHN0aWNrZXJzIHRoZSBjb21wYW55IGFkZGVkIHRvIGdpdmUgdGhlbSBhICJjYXNpbm8gdHlwZSIgYXBwZWFsLiBJbnN0ZWFkIHRoZSBkZXNpZ25zIGFyZSBlbWJlZGRlZCwgc28gdGhleSB3aWxsIG5ldmVyIGNvbWUgb2ZmIG9yIGdpdmUgcGVvcGxlIGEgcmVhc29uIHRvIHB1bGwgb24gdGhlbS4uIApKYWVnZXIgYW5kIEkgc3BlbnQgYWxtb3N0IGhhbGYgYW4gaG91ciB0YWxraW5nIGluIHRoZSBwb29sLCB3aGljaCBoZSBjb25zaWRlcnMgdGhlIGlkZWFsIGVudmlyb25tZW50IGZvciBpbnRha2UuIEkgbW9hbmVkIGFib3V0IHRoZSBjaGlsbHkgZmV3IHN0ZXBzIGZyb20gc2hvd2VyIHRvIHBvb2wuIEhlIHJlc3BvbmRlZCB0aGF0IG91dGRvb3IgdHJlYXRtZW50IGlzIGlkZWFsLiAKSSBjYW4gb25seSB3b25kZXIgd2hhdCBoZXIgcmVhc29uaW5nIGlzLiBJIHNwZW50IEEgTE9UIG9mIHdlZWtlbmRzIHZvbHVudGVlcmluZyBmb3IgaGVyIGFuZCBnZXR0aW5nIG15IGZyaWVuZHMgYW5kIGZhbWlseSB0byByZWdpc3RlciBhbmQgdm90ZS4gClRvdWdoIHNlbGwgZm9yIFJ1c3NlbGwgV2VzdGJyb29rLiBObyB3YXkgY2FuIHRoZSBUaHVuZGVyIGJyYXNzIHRydXN0IER1cmFudCwgdGhvdWdoIGl0IHN0YXlzIHBva2VyIGZhY2VkIG9uIGFsbCB0aGluZ3MgRHVyYW50LiAKT2RkcyBhcmUgZ29vZCBhbmQgeW91J3JlIHByb2JhYmx5IHdpbm5pbmcgbXVjaCBtb3JlIG9mdGVuIHRoYW4geW91IHRoaW5rIGluIHRoaXMgc3BvdC4uIApUaGVuIHRoZSBHdWFyZGlhbnMgd2VyZSBzb21lIG9mIHRoZSBiZXN0IHBhcnRzIG9mIEluZmluaXR5IFdhciwgZ3JlYXQgY29tZWR5IGxpbmVzIGFuZCBhY3Rpb24gc2NlbmVzIGFuZCB0aGV5IHdlcmUgaW50ZWdyYWwgdG8gdGhlIHBsb3QsIEkgbG92ZWQgdGhlbSB0aGVyZS4gTWF5YmUgdGhlIHNhbWUgdGhpbmcgd291bGQgaGFwcGVuIHRvIENhcHRhaW4gTWFydmVsIGluIEVuZGdhbWUuLiAKRm9yIGV4YW1wbGUsIHdlIG1heSByZWNlaXZlIGluZm9ybWF0aW9uIGFib3V0IHlvdSBmcm9tIGEgc29jaWFsIG1lZGlhIHNpdGUgaWYgeW91IGNvbm5lY3QgdG8gdGhlIFNlcnZpY2VzIHRocm91Z2ggdGhhdCBzaXRlLiBZb3UgbWF5IGNob29zZSBub3QgdG8gcHJvdmlkZSB1cyB3aXRoIGNlcnRhaW4gdHlwZXMgb2YgaW5mb3JtYXRpb24sIGJ1dCBkb2luZyBzbyBtYXkgYWZmZWN0IHlvdXIgYWJpbGl0eSB0byB1c2Ugc29tZSBvZiB0aGUgU2VydmljZXMuIApJIGNvdWxkIHNlZSBjbGVhcmx5IG9uIHRoZSBsaXR0bGUgc2NyZWVuIG9uIGhlciBwYW5lbCB0aGF0IHRoZXJlIHdlcmUgeWVsbG93IGNvbG9yZWQgc3F1YXJlcyBvbiBhbiBvdXRsaW5lIG9mIGEgZ2VuZXJpYyBib2R5IHNoYXBlIHdoZXJlIHNoZSB3YXMgc3VwcG9zZWQgdG8gc2NhbiBtZS4gClRoaXMgcmV2aWV3IGV4YW1pbmVzIHRoZSBldmlkZW5jZSBmb3IgYSBwb3RlbnRpYWwgcm9sZSBvZiBjaGFuZ2luZyBkaWV0YXJ5IGludGFrZSBvZiBuIDMgcG9seXVuc2F0dXJhdGVkIGZhdHR5IGFjaWRzIGluIHRoZSBkZXZlbG9wbWVudCwgdHJlYXRtZW50IGFuZCBwcmV2ZW50aW9uIG9mIGFsbGVyZ2ljIGRpc2Vhc2VzLgpCdXQgaW5zdGVhZCBvZiBnYW1ibGVycyBodW5jaGVkIG92ZXIgYSBncmVlbiBmZWx0IHRhYmxlLCBwbGF5ZXJzIGdhdGhlciBzdGFkaXVtIHNlYXRpbmcgc3R5bGUsIGVhY2ggaW4gZnJvbnQgb2YgYW4gZWxlY3Ryb25pYyBiZXR0aW5nIHRlcm1pbmFsLi4gClBhdCBSb2JlcnRzb24gc2F5cyBzdHVmZiBsaWtlIHRoaXMgYWxsIHRoZSB0aW1lIGFuZCB3ZSBjaGFsayBpdCB1cCB0byBjcmF6eSBvbGQgbWFuIHllbGxzIGF0IGNsb3VkLiAKS25vdyBzdHVmZi4gSSBjYW4gdGVsbCB5b3UsIEkgd2lzaCBJIGNvdWxkLCBzYWlkIFJleW5vbGRzLiBGdW5ueSBob3cgdXBzZXQgdGhleSBjb3VsZCBnZXQgd2hlbiB5b3UgcmV2ZWFsIGVsZW1lbnRzIG9mIHRoZXNlIHByb3BlcnRpZXMgdGhhdCBhcmUgbm90IG1lYW50IHRvIGJlIHJldmVhbGVkLiAKSSByZWFsbHkgZG9uIGdldCBwZW9wbGUgaW4gdGhlIFVTLiBXaHkgYXJlIHNvIG1hbnkgcGVvcGxlIHNvIGFnZ3Jlc3NpdmU/IFdoeSBpcyBmaWdodGluZyBzdWNoIGEgY29tbW9uIHRoaW5nLCBldmVuIGFtb25nIGdyb3duIGFkdWx0cz8gTWF5YmUgSSBzb3VuZCB3ZWFrLCBidXQgZ2V0dGluZyBoaXQgaW4gdGhlIGhlYWQganVzdCBvbmNlIGFuZCBmYWxsaW5nIG9uIGEgaGFyZCBzdXJmYWNlIGxpa2UgY29uY3JldGUgb3IgYSBtZXRhbCBwb2xlIGlzIGVub3VnaCB0byBtZW50YWxseSBkaXNhYmxlIHlvdSBmb3IgdGhlIHJlc3Qgb2YgeW91ciBsaWZlIGVzcGVjaWFsbHkgaWYgeW91IGFuIHVudHJhaW5lZCBmaWdodGVyIGFuZCBkb24ga25vdyBob3cgdG8gaG9sZCB5b3VyIGNoaW4uIEdhbmcgdmlvbGVuY2UgaXMgb25lIHRoaW5nLCBidXQgdmlvbGVuY2UgYmV0d2VlbiBub24gZ2FuZ3N0ZXJzIGp1c3QgbmV2ZXIgbWFkZSBzZW5zZSB0byBtZSBhbmQgaXQgc28gY29tbW9uIGluIG1vc3QgcGFydHMgb2YgdGhlIFVTLiBBbGwgb2YgbXkgQW1lcmljYW4gZnJpZW5kcyBoYXZlIGEgc3Rvcnkgb3IgdHdvIGFib3V0IHRoZSB0aW1lICJ0aGV5IGZ1Y2tlZCB0aGlzIGd1eSB1cCIgb3IgImdvdCBmdWNrZWQgdXAuIiBJdCBsaWtlIGV2ZXJ5b25lIHdhbnRzIHRvIGJlIGEgZ2FuZ3N0YSB0aGF0IGZpZ2h0cywgYXMgaWYgaXQgc29tZSBraW5kIG9mIGFscGhhIHRoaW5nLiBNYXliZSBJIGxpdmVkIGluIEFzaWEgZm9yIHRvbyBsb25nLCBidXQgbm8gbWF0dGVyIGhvdyBmdWNrZWQgdXAgSSBhbSBnZXR0aW5nIGludG8gYSBmaWdodCBpcyBsaWtlIHRoZSBsYXN0IG9mIGxhc3QgcmVzb3J0cy4gUGx1cywgeW91IGRvbiBrbm93IHdobyBpcyBnb25uYSBwdWxsIG91dCBhIGZ1Y2tpbiBndW4gaW4gdGhlIFN0YXRlcy4gSW4gS29yZWEgd2hlcmUgSSBsaXZlIG5vdywgSSBnbyBvdXQgYSBsb3QgYW5kIGhhdmUgbmV2ZXIgc2VlbiBhbiBhY3R1YWwsIGZ1bGwgb24gcGh5c2ljYWwgZmlnaHQgdGFrZSBwbGFjZSwgdGhlIG1vc3Qgd2FzIG1heWJlIHNvbWUgYWdncmVzc2l2ZSBwdXNoaW5nLiBJbiB0aGUgVVMsIGhhbGYgdGhlIHRpbWUgSSB3ZW50IG91dCBJIHNhdyB0d28gbWVhdGhlYWRzIGdvaW5nIGhhbSBvbiBlYWNoIG90aGVyLiBMaWtlIHd0ZgpJIGNhbm5vdCBiZWxpZXZlIHRoYXQgc29tZW9uZSBteSBhZ2Ugd291bGQgbG9vayBhdCB0aGUgYXdmdWwgcmVsYXRpb25zaGlwIE9QIGhhcyBoYWQgd2l0aCB0aGlzIGdpcmwgYW5kIHRoaW5rIHRoYXQgaXQgMSkgdmlvbGF0ZXMgYSBjb2RlLCAyKSBpcyBzb21ldGhpbmcgd29ydGggZHVtcGluZyBhIGhlYWx0aHksIDIgeWVhciByZWxhdGlvbnNoaXAgZm9yIChhY2NvcmRpbmcgdG8gT1ApIGFuZCAzKSBtYWtlcyB0aGUgT1AgYW4gYXNzIGZvciB3aGF0IGxpdGVyYWxseSBhbW91bnRzIHRvIGhlciBmcmllbmRzIGhpZ2ggc2Nob29sIGNydXNoIGNob29zaW5nIHNvbWVvbmUgaGUgY2FyZXMgYWJvdXQgb3ZlciBoZXIgZnJpZW5kLiAKIDg3MyBwb2ludHMgIHN1Ym1pdHRlZCA0IHllYXJzIGFnbyJBbHRob3VnaCB0aGUgZ3JhaW55IHZpZGVvIGRpZCBub3Qgc2hvdyB3aGF0IGhhZCBoYXBwZW5lZCBiZWhpbmQgdGhlIGVsZXZhdG9yIGRvb3JzLCB0aGUgaW1hZ2VzIGhvcnJpZmllZCBSYXZlbnMgY29hY2ggSm9obiBIYXJiYXVnaCwgYWNjb3JkaW5nIHRvIGZvdXIgc291cmNlcyBpbnNpZGUgYW5kIG91dHNpZGUgdGhlIG9yZ2FuaXphdGlvbi4gVGhlIFN1cGVyIEJvd2wgd2lubmluZyBjb2FjaCB1cmdlZCBoaXMgYm9zc2VzIHRvIHJlbGVhc2UgUmljZSBpbW1lZGlhdGVseSwgZXNwZWNpYWxseSBpZiB0aGUgdGVhbSBoYWQgZXZpZGVuY2UgUmljZSBoYWQgdGhyb3duIGEgcHVuY2guIFRoYXQgb3BpbmlvbiB3YXMgc2hhcmVkIGJ5IEdlb3JnZSBLb2tpbmlzLCB0aGUgQmFsdGltb3JlIGRpcmVjdG9yIG9mIHBsYXllciBwZXJzb25uZWwsIGFjY29yZGluZyB0byBhIGZpZnRoIHNvdXJjZSBvdXRzaWRlIHRoZSBvcmdhbml6YXRpb24gYnV0IGZhbWlsaWFyIHdpdGggdGhlIHRlYW0gdGhpbmtpbmcuQnV0IEhhcmJhdWdoIHJlY29tbWVuZGF0aW9uIHRvIGN1dCB0aGUgc2l4IHllYXIgdmV0ZXJhbiBydW5uaW5nIGJhY2sgd2FzIHF1aWNrbHkgcmVqZWN0ZWQgYnkgUmF2ZW5zIG1hbmFnZW1lbnQ6IG93bmVyIEJpc2Npb3R0aSwgdGVhbSBwcmVzaWRlbnQgQ2FzcyBhbmQgR00gTmV3c29tZS4iIDYgcG9pbnRzICBzdWJtaXR0ZWQgNCB5ZWFycyBhZ29JIGJlZW4gdXNpbmcgb25lbm90ZSB3aXRoIGEgc3VyZmFjZSBwcm8gMyB0byBhbm5vdGF0ZSBwZGZzIHdpdGggdGhlIHN0eWx1cy4gCldlIHB1dCB0aGluZ3Mgb24gcGF1c2UgdG8gdHJ5IGFuZCByZXN0b3JlIG91ciByZWxhdGlvbnNoaXAuIEhhZCBhIGhhcmQgY291cGxlIG9mIHllYXJzIGJ1dCB0aGluZ3Mgd2VyZSBnZXR0aW5nIGJldHRlci4gV2UgYWxzbyBoYXZlIGEgbG90IG9mIGxpZmUgc3RydWdnbGVzLCBhcyB3ZSBhcnRpc3RzIGFuZCBkb24gaGF2ZSBhIGxvdCBvZiBtb25leS4gClNvIGlmIHlvdSBjYW4gbGVhcm4gcGFzc2FibGUgRnJlbmNoIHRoZSByZXN0IHlvdSBwaWNrIHVwIGluIHRoZSB3b3JrcGxhY2UuLiAKQ2FuYWRhIGRvbmF0ZWQgJDIwIG1pbGxpb24gdG8gdGhlIENsaW50b24gSGVhbHRoIEFjY2VzcyBJbml0aWF0aXZlIGluIDIwMTcuIFRoZSBtb25leSBpcyB0byBnbyB0byBoZWxwIHlvdW5nIHdvbWVuIGluIE5pZ2VyaWEgd2l0aCBmYW1pbHkgcGxhbm5pbmcuCkFsdGhvdWdoLCBJIGRvbiBrbm93IGlmIHRoYXQgd291bGQgbWVhbiB0aGV5IHdvdWxkIGhhdmUgdG8gc3RhcnQgaW4gTkxCLCBzd2VlcCBnZXQgZmlyc3Qgb3Igc2Vjb25kLCBxdWFsaWZ5IGZvciBMQ0sgYmVhdCBvbmUgb2YgdGhlIGJvdHRvbSB0d28gdGVhbXMuIFRoZW4gdGFrZSBmaXJzdCBpbiBzdW1tZXIgdG8gZXZlbiBnZXQgdG8gd29ybGRzIGZvciBhIHBheW9mZi4gCjgxNCBhZnRlciBzZXJ2aW5nIGphaWwgc2VudGVuY2UgZm9yIGJvZ3VzIGluc3VyYW5jZSBjbGFpbQpUaGV5IHdvbiBqdXN0IGdyYWIgeW91ciBiYWxscy4gVGhleSB3YWl0IGZvciB5b3UgdG8gb2ZmZXIgdGhlIHNleCBmb3IgcGF5IGRlYWwgc28gdGhleSBkb24gc2F5IGl0Li4gCkplc3NlIEhhbGwgb2YgR3Vubmlzb24sIGEgc2tpZXIga25vd24gZm9yIHB1c2hpbmcgbGltaXRzIChhbmQgYmlnIGNsaWZmcyksIG1hZGUgaGlzIGdvbGQgbWVkYWwgYmlkIHdpdGggYSBuZXZlciBiZWVuIGRvbmUgYmVmb3JlIGdhcCBqdW1wIG92ZXIgdGhlIG1vdXRoIG9mIENhcnJvdCBDaHV0ZS4gV2hpbGUgSGFsbCBiYXJlbHkgbWlzc2VkIHRoZSBwaWxsb3cgaGUgd2FzIGFpbWluZyBmb3IgdG8gc3RpY2sgdGhlIGxpbmUsIGFuZCBza2lkZGVkIGRvd24gdGhlIHJvY2sgd2FsbCwgaGUgc3RheWVkIG9uIGhpcyBmZWV0LCBza2kgdGlwcyBkb3duIHRoZSBmYWxsIGxpbmUsIGFuZCBjaGFyZ2VkIHRoZSByZXN0IG9mIHRoZSBsaW5lLiAKRm9yIGV4YW1wbGUsIGRvIHlvdSBiZWxpZXZlIHRoYXQgKGEpIGFsbCBwZW9wbGUgYXJlIGlubmF0ZWx5LCBnZW5ldGljYWxseSBzd2luZ2VycywgdGhleSBqdXN0IG5ldmVyIHRoaW5rIHRvIHRyeSBpdCBiZWNhdXNlIG9mIGN1bHR1cmFsIG5vcm1zLCBvciAoYikgdGhhdCBzb21lIHBlb3BsZSBhcmUgZ2VuZXRpY2FsbHkgcHJlZGlzcG9zZWQgdG8gc3dpbmcsIGFuZCBvdGhlcnMgYXJlIGdlbmV0aWNhbGx5IHByZWRpc3Bvc2VkIE5PVCB0byBzd2luZywgYW5kIHRoYXQgb2s/CkF1dHJlIGlsbHVzdHJhdGlvbiBkZSBtb24gcHJvcG9zLiBEcyBsJ2dlIGxlIHBsdXMgdGVuZHJlLCBsZXYgY29tbWUgdG91cyBsZXMgZW5mYW50cyBkJ21pZ3JzIHJ1c3NlcyBkYW5zIGxlIGN1bHRlIGRlIGwnYW1pdGkgZnJhbmNvIHJ1c3NlLCBqJ2FpIGNydSBkdXIgY29tbWUgZmVyIGF1eCBsaWVucyBwYXJ0aWN1bGllcnMgcXVpIHVuaXNzYWllbnQgbW9uIHBheXMgZXQgY2VsdWkgZGUgbWVzIGFuY3RyZXMuIApEZXIgaXN0IGV0d2EgbmV1biBLaWxvbWV0ZXIgaW0gRHVyY2htZXNzZXIgdW5kIGhhdCBlaW5lbiBVbWZhbmcgdm9uIHJ1bmQgMjhLaWxvbWV0ZXJuLiBEZW4gaGNoc3RlbiBQdW5rdCBkZXIgQ2FsZGVyYSBlcnJlaWNodCBkZXIgS2Vzc2VscmFuZCBpbSBOb3JkZW4gbWl0IGRlbSBSb3F1ZSBkZSBsb3MgTXVjaGFjaG9zICgyLjQyNiBtKSwgZGVtIGhjaHN0ZW4gR2lwZmVsIExhIFBhbG1hcy4gCkF0IDE3LCBGcmFuayBicm9rZSB0aGUgQ2FuYWRpYW4gSW50ZXJzY2hvbGFzdGljIHJlY29yZCBmb3IgdGhlIG1pbGUgYXQgUGFyaXMgSGlnaCBTY2hvb2wuIApUaGVuIHlvdSBjYW4gc3RhcnQgY2xlYXJpbmcgb3V0IHRoZSBuZXh0IGZldyBzdGFnZXMgb2YgdGhlIGR1bmdlb24gd2hpbGUgcmV0dXJuaW5nIHRvIHRoZSBuZWFyZXN0IGJpZyByb29tIHRvIGZhcm0uLiAKQW5hbHlzdHMgYW5kIGdvdmVybm1lbnQgb2ZmaWNpYWxzIGNhbGxlZCB0aGUgZGVsYXkgYW5kIGEgb24gTW9uZGF5IGFuZCBzYWlkIHRoZSBzZXZlcml0eSBvZiB0aGlzIGRlbGF5IGlzIGNvbXBvdW5kZWQgYnkgdGhlIGZhY3QgdGhhdCB0aGUgdHdvIG90aGVyIGFjdGl2ZSBwaXBlbGluZSBwcm9wb3NhbHMgb3V0IG9mIFdlc3Rlcm4gQ2FuYWRhIEtleXN0b25lIFhMIGFuZCBUcmFucyBNb3VudGFpbiBoYXZlIGFsc28gYmVlbiBkZWxheWVkLiBNaWR3ZXN0IHVudGlsIG1pZCAgdG8gbGF0ZSAyMDIwLiBUaGUgbmV3IGluIHNlcnZpY2UgZGF0ZSBpcyByb3VnaGx5IG9uZSB5ZWFyIGxhdGVyIHRoYW4gZXhwZWN0ZWQuClNpbWlsYXJpdGllcyBhbmQgRGlmZmVyZW5jZXMgQm90aCB0eXBlcyBvZiBhc3Nlc3NtZW50IGFpbSB0byBoZWxwIHBlb3BsZSB3b3JrIG91dCB0aGUgYmVzdCBjYXJlZXIgcGF0aHMgdG8gZm9sbG93LiBUaGV5IGRvIG5vdCBnaXZlIGV4YWN0bHkgY29tcGFyYWJsZSByZXN1bHRzLiAKRm9yIHlvdSwgb24geW91ciBwaG9uZSAvIHNvY2lhbCBtZWRpYSwgc2hlIGlzIGJsb2NrZWQgMTAwJS4gQ2FsbHMgYXJlIGVpdGhlciBibG9ja2VkIG9yIHNlbnQgc3RyYWlnaHQgdG8gdm9pY2VtYWlsLCB3aGVyZSB5b3UgZGVjaWRlIHRvIGxldCBTTyBsaXN0ZW4gdG8gdGhlbSBvciBkZWxldGUgdGhlbSBvdXRyaWdodCBwZXJpb2RpY2FsbHkuIApGb3IgY2xheSBjaGlwcyBJIHdvdWxkIGdvIGZvciBQYXVsc29uIGNoaXBzICAgdGhleSBhcmUgdGhlIGJlc3QuIApDcm9pcyBxdWUgU2ViYXN0aWFuIFZldHRlbCBqb3VlIHVuZSBwYXJ0aWUgZGUgcG9rZXIgZXh0ciBydXMgZXhhY3RlbWVudCBjb21tZSBsIGZhaXQgQWRyaWFuIE5ld2V5IGlsIHkgYSBkZSBjZWxhIHF1ZWxxdWVzIHNlbWFpbmVzIGQgbCBwaWxvdGUgZGUgRjEsIEFsZXggVyBzdXIgbGVzIG9uZGVzIGRlIFNreSBBbGxlbWFnbmUgZW4gSG9uZ3JpZS4KTmVpZ2hib3JzIHdvcmsgaXMgcGFydCBvZiBhIGZvdXIgeWVhciAkMS44IG1pbGxpb24gZ3JhbnQgZnJvbSBUaGUgTmF0aW9uYWwgSW5zdGl0dXRlIG9uIEFsY29ob2wgQWJ1c2UgYW5kIEFsY29ob2xpc20sIHdoaWNoIGNhbGxzIGNvbGxlZ2UgZHJpbmtpbmcgYSBoYXJtZnVsIGFuZCBzaWduaWZpY2FudCBwdWJsaWMgaGVhbHRoIHByb2JsZW0gdGhhdCB0YWtlcyBhbiBlbm9ybW91cyBpbnRlbGxlY3R1YWwgYW5kIHNvY2lhbCB0b2xsIG9uIGNvbGxlZ2Ugc3R1ZGVudHMgYWNyb3NzIEFtZXJpY2EuIFByb2plY3QgcmVwcmVzZW50cyBhIHBhcnRuZXJzaGlwIGJldHdlZW4gaW52ZXN0aWdhdG9ycyBhdCB0aHJlZSBpbnN0aXR1dGlvbnM6IEthdGUgQ2FyZXksIHByb2Zlc3NvciBvZiBiZWhhdmlvcmFsIGFuZCBzb2NpYWwgc2NpZW5jZSBhdCBCcm93biBVbml2ZXJzaXR5OyBBbmdlbG8gRGlCZWxsbywgYXNzaXN0YW50IHByb2Zlc3NvciBvZiBwc3ljaG9sb2d5IGF0IENpdHkgVW5pdmVyc2l0eSBvZiBOZXcgWW9yayAgIEJyb29rbHluIENvbGxlZ2UsIGFuZCBOZWlnaGJvcnMgYXQgVUguIApOZXdzb20gd2FzIGEgbG9uZ3RpbWUgZnJpZW5kIGFuZCBmb3JtZXIgaGlnaCBzY2hvb2wgY2xhc3NtYXRlIG9mIEdvcmRvbiBHZXR0eSwgc29uIG9mIG9pbCBtYWduYXRlIEouIApJJ20gaGFsZndheSB0byAyNyBub3cgc28gaSdtIG5vdCBnb25uYSBnaXZlIHlvdSBhIHBlcCB0YWxrIGZ1bGwgb2YgcmFpbmJvd3MgYW5kIHN1bnNoaW5lLCBhbmQgaW5zdGVhZCBnaXZlIHlvdSB0aGUgY2xhc3NpYyAiTGFkLCBpdCdzIGFydGhyaXRpcyIuZHJvcCBhIFBNIGlmIHlvdSBldmVyIGZlZWwgbGlrZSBpdC4gaSBnb3Qgam9pbnQgaXNzdWVzIGZyb20gY3JvaG4ncyB0b28gc28gaSBrbm93IGhvdyBmcnVzdHJhdGluZyBzaGl0IGlzLiAKSSBmZWVsIGxpa2UgdGhlcmUgYXJlIHNvIG1hbnkgaGFpciBtZW1vcyBJIG1pc3NlZC4gSSBtb3ZlZCBmcm9tIGEgdmVyeSBjYXN1YWwgcnVyYWwgY29tbXVuaXR5IHRvIGEgZmFzaGlvbmFibGUgY2l0eSwgYW5kIEkgd2FzIGxlZ2l0IGNvbmZ1c2VkIGFib3V0IGhvdyBldmVyeW9uZSdzIGhhaXIgd2FzIHNvIHNsZWVrIGFuZCBnbG9zc3kgZm9yIGEgbG9vb29uZyB0aW1lLiBFdmVudHVhbGx5IHNvbWVvbmUgbWVudGlvbmVkIGJsb3cgZHJ5aW5nIGFuZCBjdXJsaW5nIHRoZWlyIGhhaXIsIGFuZCBJIHdhcyBsaWtlICJ3aGF0PyBFdmVyeSBkYXk/IiBBbmQgdGhhdCdzIHdoZW4gSSByZWFsaXplZCBtb3N0IG9mIHRob3NlIHNsZWVrIGdsb3NzeSBsYWRpZXMgaGVhdCBzdHlsZSB0aGVpciBoYWlyIGV2ZXJ5IGdvZGRhbW4gZGF5LiBJIGRvbid0IGp1c3QgaGF2ZSBpbmV4cGxpY2FibHkgc2hpdHR5IGhhaXIgYmVjYXVzZSBpdCBkb2Vzbid0IGxvb2sgbGlrZSBhIHNoYW1wb28gY29tbWVyY2lhbCB3aGVuIEkgbGV0IGl0IGFpciBkcnkgd2l0aCBubyBwcm9kdWN0ISBJdCdzIGEgbGl0dGxlIGVtYmFycmFzc2luZyBob3cgc3VycHJpc2VkIEkgd2FzLiBJdCBoZWxwZWQgbWUgZ2V0IGRpYWdub3NlZCBjb3JyZWN0bHkgd2l0aCBQTUREIGFuZCBJIHdhcyB0cmVhdGVkLiBJIGhhdmUgdHJhY2tlZCBteSBwZXJpb2RzIHNpbmNlIGFuZCBub3cgaGF2ZSBkb2NzIHN0YXJ0aW5nIHRvIHRha2UgbWUgc2VyaW91c2x5IGJlY2F1c2UgSSBzbyBtZXRpY3Vsb3VzLiBJIGdldHRpbmcgYSBjZXJ2aWNhbCBjYW5jZXIgc2NyZWVuaW5nIHNvb24gYW5kIGhvcGluZyBmb3IgdGhlIGJlc3QhClNhcmF0cm9vcGVyICAzIHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ28KU3dlZmZ5bW8gdQpCdXQgd2hhdCBpZiB0aGVyZSB3YXMgc3VjaCBhIG1vbWVudCBpbiBQYWtpc3Rhbj8gV2hhdCBjaG9pY2Ugd291bGQgd2UgaGF2ZT8gV2hhdCB3b3VsZCBiZSB0aGUgYWx0ZXJuYXRpdmVzIG9uIG9mZmVyPyBOb25lLCBiZWNhdXNlIHRoZXJlIHdvdWxkIGJlIG5vbmUgdG8gYmVnaW4gd2l0aC4gSnVzdCBtb3JlIG9mIHRoZSBzYW1lLCB0aGUgcGFzdCByZWN5Y2xlZCB0byByZXByZXNlbnQgdGhlIGZ1dHVyZS4gVGhpcyBpcyBhIGdyZWF0ZXIgY3Jpc2lzIHRoYW4gYW55dGhpbmcgb24gdGhlIGVjb25vbWljIGhvcml6b24uLiAKQWxsIHNpZ25zIHBvaW50ZWQgdG8gdGhpcyBiZWluZyBUaW1iZXJsYWtlJ3MgbG9uZyBydW1vcmVkIGNvdW50cnkgYWxidW0uLiAKT24gdGhlIG90aGVyIGhhbmQsIHRoZSBjbGFzcyBoaWVyYXJjaHkgaXMgYmV5b25kIHRoZW0sIHRoZSBwb3dlciBkeW5hbWljcyB3ZWxsIGtub3duIHRvIGFsbCB0aGUgcGFydGljaXBhbnRzLCBhbmQgdGhlIHdvbWVuIGNvbnRpbnVlIHRvIHRyeSB0byBwbGVhc2UgdGhlIHdoaXRlIGtpZHMuLiAKIDMxIHBvaW50cyAgc3VibWl0dGVkIDEyIGRheXMgYWdvWW91IGNhbiBwbGF5IGhpbSBsaWtlIHRoZSBvdGhlciBjaGFyYWN0ZXJzLiBIZSBuZWVkcyB0byBiZSBBRFNpbmcgdG8gdXNlIGhpcyBwYXNzaXZlIGF0IGFueSByYW5nZS4gSGUgcGFzc2l2ZSBvbmx5IGhhcyA1NSBocCBidXQgYW55IGRhbWFnZSBleGNlZWRpbmcgdGhhdCBpbiBhIHNpbmdsZSBzaG90IHdvbiBnbyB0aHJvdWdoLiAKQ2VydGFpbiBjb25kaXRpb25zIGFwcGxpZWQgdG8gZ3JhbnQgcmVjaXBpZW50cy4gU3VjY2Vzc2Z1bCBhcHBsaWNhbnRzIHRoYXQgcmVjZWl2ZWQgY29uc3RydWN0aW9uIGdyYW50cyBvZiBtb3JlIHRoYW4gJDUwLDAwMCBjdW11bGF0aXZlbHkgaGFkIHRvIGV4ZWN1dGUgYSB0aGlydHkgeWVhciBlYXNlbWVudCBhZ3JlZW1lbnQgd2l0aCB0aGUgQ291bnR5LiBHcmFudGVlcyB3ZXJlIGFsc28gcmVxdWlyZWQgdG8gcHJvdmlkZSBwdWJsaWMgYWNjZXNzIHRvIHByb3BlcnRpZXMgdGhhdCByZWNlaXZlZCBncmFudCBmdW5kcy4gCkFueXdheSwgdGhlIGZlbHQgaXMgb2xkIHdpdGggc2V2ZXJhbCBzdGFpbnMgb24gaXQgc28gaXQncyBhIGJpdCBzb3JlIG9uIHRoZSBleWVzLiAKSW5mbzogSSBkb24gcmVhbGx5IGhhdmUgYSByb3V0aW5lIG90aGVyd2lzZS4gSSBoYXZlIGNvbWJpbmF0aW9uIHNraW4uIEkgdmVyeSByYXJlbHkgd2VhciBtYWtldXAuIEkgd2FzaCBteSBmYWNlIHdpdGgganVzdCB3YXRlciBpbiB0aGUgbW9ybmluZy4gU29tZXRpbWVzIEkgcHV0IGhhbmQgY3JlYW0gb24gbXkgZmFjZSBhcm91bmQgbXkgbW91dGggaWYgaXQgZmVlbHMgcGFydGljdWxhcmx5IGRyeSwgYnV0IHRoYXQgb25jZSBhIG1vbnRoIG9yIHNvLiBJIGRvbiBnZXQgbXVjaCBhY25lLCB3aGF0IEkgZG8gZ2V0IHNlZW1zIHRvIGJlIHJlbGF0ZWQgdG8gZWF0aW5nIHdoZWF0IChhbGxlcmd5KSBvciBkcmlua2luZyBtaWxrLiBNeSBza2luIGlzIHZlcnkgc2Vuc2l0aXZlLCBJIGNhbiB1c2UgYSBsb3Qgb2YgZnJhZ3JhbmNlZCBwcm9kdWN0cyBhcyBJIGdldCBoaXZlcy4gSW4gdGhlIHBhc3QgSSB1c2VkIHZhcmlvdXMgcHJvZHVjdHMsIG1vc3RseSBmb3IgYW50aSBhZ2luZywgYW5kIGRpZG4gcmVhbGx5IG5vdGljZSBtdWNoIG9mIGEgZGlmZmVyZW5jZSBpbiBteSBza2luIHNvIEkgc3RvcHBlZC4gSSBkb24gd2VhciBzdW5zY3JlZW4gYmVjYXVzZSBhbnkgcHJvZHVjdHMgSSBwdXQgYXJvdW5kIG15IGV5ZXMgbWFrZSB0aGVtIHdhdGVyIG5vbnN0b3AuCkZVTEwgT0YgTElGRTogVWdseSBCZXR0eSdzIEFsZWMgTWFwYSwgZG9pbmcgYSBsaXAgc3luYyBwZXJmb3JtYW5jZSBvZiB0aGUgUHVzc3ljYXQgRG9sbHMnICJXaGVuIEkgR3JvdyBVcCIgYXQgSG9sbHl3b29kJ3MgT3BlbiBBcnRpc3RzIHdpdGggT3BlbiBBcm1zIGJlbmVmaXQgZm9yIExpZmVXb3JrcywgYSBnYXkgeW91dGggbWVudG9yaW5nIG9yZ2FuaXphdGlvbi4KRnJvbSBtb3V0aCBtYXNzYWdlIHRvIGFjdXB1bmN0dXJlCkVhY2ggcGxheWVyIG11c3QgdXNlIGV4YWN0bHkgdGhyZWUgY2FyZHMgZnJvbSB0aGUgZml2ZSBjb21tdW5pdHkgY2FyZHMgYW5kIHR3byBmcm9tIGhpcy9oZXIgaGFuZCBpbiBhbnkgY29tYmluYXRpb24gdG8gZm9ybSBhIGhpZ2ggaGFuZCBhbmQvb3IgYSBsb3cgaGFuZC4gVGhlIHNhbWUgZml2ZSBjYXJkcyBkbyBub3QgaGF2ZSB0byBiZSB1c2VkIGZvciB0aGUgaGlnaCBhbmQgdGhlIGxvdy4gTm90ZSB0aGF0IGlmIHRoZXJlIGFyZSBub3QgYXQgbGVhc3QgdGhyZWUgY29tbXVuaXR5IGNhcmRzIHJhbmtlZCBlaWdodCBvciBiZWxvdywgdGhlcmUgd2lsbCBiZSBubyBsb3cgaGFuZCwgYW5kIHRoZSBlbnRpcmUgcG90IHdpbGwgYmUgYXdhcmRlZCB0byB0aGUgYmVzdCBoaWdoIGhhbmQuIFRoZSB0d28gbW9zdCBpbXBvcnRhbnQgcnVsZXMgYXJlOiAoMSkgRWFjaCBwbGF5ZXIgbXVzdCB1c2UgZXhhY3RseSB0aHJlZSBjb21tdW5pdHkgY2FyZHMgYW5kIHR3byBob2xlIGNhcmRzOyAoMikgdGhlIG9yZGVyIG9mIHJhbmtpbmcgZm9yIGxvdyBoYW5kcyBpcyBmcm9tIHRoZSBoaWdoZXN0IG9mIHRoZSBmaXZlIGNhcmRzLgpJbiBhZGRpdGlvbiB0byBoYXZpbmcgYSBsaW1pdCBvbiB0aGVpciBoZWF0LCBub25zdGljayBza2lsbGV0cyBkb24gYWN0dWFsbHkgY29uZHVjdCBoZWF0IGFzIGVmZmljaWVudGx5IGJlY2F1c2Ugb2YgdGhlaXIgY29hdGluZywgR29vZCBIb3VzZWtlZXBpbmcgZXhwbGFpbnMuIEZvciB0aG9zZSByZWFzb25zLCB5b3Ugd2FudCB0byB0dXJuIHRvIGNhc3QgaXJvbiB3aGVuIGl0IHRpbWUgdG8gc2VhciBtZWF0LiBZb3UgZ2V0IGdyZWF0IGNvbG9yIGFuZCwgdGhlcmVmb3JlLCBmbGF2b3IuIApXaXRoIG5vdGhpbmcgcnVubmluZyBpbiB0aGUgYmFja2dyb3VuZCwgY2xpY2sgdGhlICJwZXJmb3JtYW5jZSIgdGFiLiBZb3Ugc2hvdWxkIGhhdmUgYSByZWxhdGl2ZWx5IGxvdyBDUFUgdXNhZ2UgcGVyY2VudGFnZSwgYW5kIHJlYXNvbmFibHkgbG93IG1lbW9yeSB1c2FnZS4gSWYgeW91IGhhdmUgYSBtdWx0aSBjb3JlIENQVSwgeW91IGNhbiBzZWUgYSBncmFwaCBvZiBlYWNoIGNvcmUgdG8gdGhlIHJpZ2h0IG9mIHRoZSB1c2FnZSBiYXIgICBmb3IgZXhhbXBsZSBJIHBsYXlpbmcgTWluZWNyYWZ0IGFuZCBjb3JlIDcgaXMgYWxtb3N0IG1heGVkIG91dCBidXQgdGhlIHJlc3QgYXJlIGxvdywgbGVhdmluZyBhbiBhdmVyYWdlIG9mIDIwJSB1c2FnZS4uIApJdCBub3QgdGhhdCBncmVhdC4gSG9uZXN0bHkgaWYgdGhleSB3b3VsZCByZXBhdmUgdGhlIHJvYWRzIGFuZCBwZW9wbGUgd291bGRuIGRyaXZlIDEwIHVuZGVyIGluIHRoZSBsZWZ0IGxhbmUsIEkgd291bGQgbXVjaCBtb3JlIGVuam95IGl0LkkgbGl2ZSBuZWFyIFBhcmlzIE10biwgYW5kIGZvcnR1bmF0ZWx5IHdvcmsgZnJvbSBob21lLiAKPj4+enVtIEFydGlrZWw6IGRlciBQaXR0YSBUeXAuIApMaWtlIHRoZXkgc2FpZCwgYmUgMTAwJSBjb25maWRlbnQgaW4geW91ciBvcGVuZXJzLiBJZiB5b3UgZG9uJ3QgaGF2ZSBhIGhhbmRsZXIsIGtub3cgdGhlIHJlc3Qgb2YgeW91ciBhdHRlbXB0cywgdG9vLiBQbGFuIGZvciBjb250aW5nZW5jaWVzIChvcGVuZXIgbW92ZWQgZmFzdCwgZ28gdXAgMjBrZyBvciBvcGVuZXIgdHdlYWtlZCBhbiBvbGQgaW5qdXJ5LCBvbmx5IGdvIHVwIDEwa2cpLiBIYXZlIGl0IHdyaXR0ZW4gb3V0IGluIHRoZSB1bml0cyB5b3VyIGZlZCB1c2VzICh0aW1pbmcgb3V0IGFuIGF0dGVtcHQgc2VsZWN0aW9uIGJlY2F1c2UgeW91IGhhZCB0byBmaW5kIHlvdXIgcGhvbmUgdG8gY29udmVydCBsYiB0byBrZyBpcyBhIHN0dXBpZCBtaXN0YWtlIHRoYXQgSSd2ZSBzZWVuIGhhcHBlbikuIEJyaW5nIG1vcmUgZm9vZCB0aGFuIHlvdSB0aGluayB5b3UgbmVlZC4gRG9uJ3Qgb3ZlciBjYWZmZWluYXRlZCB5b3Vyc2VsZi4gRG9uJ3QgY3V0IHdlaWdodC4gSGF2ZSBmdW4gYW5kIHJlYWxpemUgdGhhdCB5b3VyIGZpcnN0IG1lZXQgZG9lc24ndCBtYXR0ZXIgdG8gYW55b25lIGV4Y2VwdCB5b3UuClRvdGFsIFBDQnMsIGRpb3hpbnMsIHRveGFwaGVuZSwgYW5kIGRpZWxkcmluIHdlcmUgY29uc2lzdGVudGx5IGFuZCBzaWduaWZpY2FudGx5IG1vcmUgY29uY2VudHJhdGVkIGluIHRoZSBmYXJtZWQgc2FsbW9uIGFzIGEgZ3JvdXAgdGhhbiBpbiB0aGUgd2lsZCBzYWxtb24uClRoZSBvbmxpbmUgZ2FtYmxpbmcgc2VjdG9yIHdpbGwgYmUgdGhlIG1vc3QgcHJvZml0YWJsZSBtYXJrZXQgb24gdGhlIG5ldC4gTWlsbGlvbnMgb2YgcGVvcGxlIHRvZGF5IGFyb3VuZCB0aGUgcGxhbmV0IGFyZSB3YWdlcmluZyBvbiBzcG9ydHMgb25saW5lLCBwbGF5aW5nIG9ubGluZSBwb2tlciwgYmluZ28gYW5kIGV2ZW4gdGhlIGxvdHRlcnkgb25saW5lIGF0IGFueSBvZiB5b3VyIGEgaHVnZSBudW1iZXIgb2YgZ2FtYmxpbmcgc2l0ZXMgb2J0YWluYWJsZSBhcm91bmQgdGhlIG5ldC4gRXZlbiBwZW9wbGUgd2hvIGhhdmUgaW4gbm8gd2F5IHZpc2l0ZWQgYSBsYW5kIHByaW1hcmlseSBiYXNlZCBjYXNpbm8gb3IgbWF5YmUgYSBuZWFyYnkgYm9va2llIGFyZSBmaW5kaW5nIHRoZW1zZWx2ZXMgdmlzaXRpbmcgb25saW5lIGNhc2lub3MgYW5kIHBva2VyIHJvb21zIHJlZ3VsYXJseS4uIApUaGF0IHdoYXQgeW91ciBETkEgaXMgZG9pbmcsIGF1dG9tYXRpY2FsbHkgY29udHJvbGxlZCBieSB0aGUgcHJvdGVpbnMgdHVybmluZyBvbiBvciBvZmYgcGFydHMgb2YgRE5BIG9yIGxvY2tpbmcgdG9nZXRoZXIgdG8gZm9ybSB0aGUgbGFyZ2VyIHN0cnVjdHVyZXMgbmVlZGVkIG9yIGluZm9ybWluZyBuZWFyYnkgY2VsbHMgdG8gY2hhbmdlIG9yIGJ1aWxkIHNvbWV0aGluZywgb3IgdG8gZGllIGFuZCBub3QgYnVpbGQgYW55dGhpbmcgdGhlcmUsIGV0Yy4KV2UgYXJlIGFsbCBqdXN0IGFzIGltcG9ydGFudCBhcyB0aGUgcGVvcGxlIHdlIGNhcmUgZm9yLi4gCkkgaGFkIHN0ZXBwZWQgb24gYSBzbmFrZS4uIApMb29rIHRoZXkgdG9sZCB0aGVtIHRvIHN0cmV0Y2ggdGhlIGZvb2QgaW4gbGFzdCBoYW5kIG91dC4gQWxzbyBpIGRvbnQgZ2V0IGhvdyBtYW55IG9mIHlvdSBjYWxsIGV2ZXJ5dGhpbmcgYW4gYXNzcHVsbC4gSWYgd2FyIHdhcyBkb25lIGJ5IHRoZSBudW1iZXJzIGV2ZXJ5dGltZSB5b3Ugd291bGQga25vdyB0aGUgcmVzdWx0IGJlZm9yZSB0aGUgZmlnaHQgZXZlbiBzdGFydHMuIApWZXJ5IHN0cmFuZ2UgcXVlc3Rpb24uIFRoZSB3aG9sZSBjb25jZXB0IG9mIHBva2VyIHN0YW5kcyBvbiBhIGZvdW5kYXRpb24gb2Ygc29tZXRoaW5nIHRoYXQgeW91IGNhcmUgYWJvdXQgYmVpbmcgYXQgcmlzay4gQXQgdGhlIG1vc3QgYmFzaWMgbGV2ZWwsIHRoZXJlIGFyZSBvbmx5IDIgd2F5cyB0byB3aW4gYSBoYW5kIG9mIHBva2VyICAgZWl0aGVyIGdldCBkZWFsdCB0aGUgYmVzdCBoYW5kLCBvciBjb252aW5jZSB5b3VyIG9wcG9uZW50IHRoYXQgeW91IHdlcmUgZGVhbHQgdGhlIGJlc3QgaGFuZC4gVGhlIGZpcnN0IGlzIGNvbXBsZXRlbHkgcmFuZG9tLiBUaGUgc2Vjb25kIHJlcXVpcmVzIHlvdXIgb3Bwb25lbnQgdG8gY2FyZSBhYm91dCB3aGF0IGluIGZyb250IG9mIGhpbS4gSW1hZ2luZSBqdXN0IHBsYXlpbmcgcG9rZXIgdmVyYmFsbHksIGFsbCB5b3UgaGF2ZSB0byBkbyBpcyBzdGF0ZSB5b3VyIGFjdGlvbi4gWW91IGdvdCA5IGhpZ2gsIGFuZCB5b3Uga2VlcCBzYXlpbiAiYmV0IiBiZWNhdXNlIHlvdSB0aGluayB5b3VyIG9wcG9uZW50IGhhcyBhIHdlYWsgaGFuZCwgYnV0IGhlIGp1c3QgY2FsbCBjYWxsIGNhbGxzIGFuZCB5b3UgbG9zZSB0byBxdWVlbiBoaWdoLiBUaGF0IG5vdCBldmVuIGEgZ2FtZS4KVGhlIHNob3cgdG9sZCB1cyBoZSB3YXMgYSBXSE9MRSBORVcgR1VZIGFuZCB0aGUgcmVjYXN0IHdhcyBzdXBwb3NlZCB0byBlbXBoYXNpemUgdGhhdCwgYnV0IGhlIGltbWVkaWF0ZWx5IGJhaWxlZCBvbiB0aGUgcmV1bmlvbiwgdG9sZCB1cyBoaXMgRW1vcnkgcm9tYW5jZSB3YXNuIGFzIHN0cm9uZyBhcyBoaXMgZmVlbGluZ3MgZm9yIFJlYmVjY2EsIGFuZCB3YXMgcmlnaHQgYmFjayB0byBTcXVhcmUgT25lLiAKJydWaXNpdGF0aW9uIGluIG91ciBnYW1pbmcgYXJlYSBoYXMgZHJvcHBlZCBjb25zaWRlcmFibHkgYW5kIHdlIGFyZSBsb29raW5nIGF0IGlmIHdlIGhhdmUgYSBmZXcgdG9vIG1hbnkgbWFjaGluZXMuJycgTXIgQ2hpbiBzYWlkIHRoZSBpbmNyZWFzaW5nIHBvcHVsYXJpdHkgb2Ygb25saW5lIGdhbWJsaW5nIHdhcyBoYXZpbmcgYW4gaW1wYWN0IG9uIGxvY2FsIGNsdWJzLiBIZSBzYWlkIGZpZ3VyZXMgY29tcGFyaW5nIHRoZSBxdWFydGVyIHRvIE1heSB3aXRoIHRoZSBzYW1lIHRpbWUgbGFzdCB5ZWFyIHNob3dlZCBjbHViIHJldmVudWUgd2FzIGRvd24gMS44cGVyIGNlbnQgYW5kIHB1YiByZXZlbnVlIHdhcyB1cCA2LjFwZXIgY2VudC4gCiA1IG1pbnV0ZXMgYmVmb3JlIHRoZSBlbmQgb2YgdGhlIG1lZXQgUmljaCBhcHByb2FjaGVkIHVzIHRyeWluZyB0byBjaGFuZ2UgdGhlIHJ1bGVzIG9mIHRoZSB0ZWFtIGNvbXBldGl0aW9uIHRvIGRpcmVjdGx5IHdvcmsgYWdhaW5zdCB1cyBhbmQgZ28gYWdhaW5zdCB3aGF0IGhlIGhhZCBzdGF0ZWQgdGhlIHJ1bGVzIHdvdWxkIGJlICBGb3Igd2Vla3MgYmVmb3JlIHRoaXMgY29tcGV0aXRpb24gdGhleSB0aHJlYXRlbmVkIG5vdCB0byBldmVuIGxldCBvdXIgdGVhbSBiZSBpbiB0aGUgY29tcGV0aXRpb24gYmVjYXVzZSB3ZSAid2VyZW4ndCBhIHJlYWwgdGVhbSBhbmQgZGlkbid0IHRyYWluIG91dCBvZiBhIHNpbmdsZSBneW0iICA0NSBtaW51dGVzIEFGVEVSIHRoZSBlbmQgb2YgdGhlIGNvbXBldGl0aW9uLCBJIGFwcHJvYWNoZWQgUmljaCBhbmQgdm9pY2VkIG15IGNvbmNlcm5zLiAKSW4gdGhlIDE5OTBzLCAgZGV2ZWxvcG1lbnQgc3RyYXRlZ3kgbGVhbmVkIHRvd2FyZHMgYWNoaWV2aW5nIGVjb25vbWljIGRpdmVyc2l0eSBhbmQgYmVjb21pbmcgYSBrbm93bGVkZ2UgZWNvbm9teS4gQXMgYSByZXN1bHQsIGl0IGJlY2FtZSBtb3JlIG1hcmtldCBvcmllbnRlZCBhbmQgc3Ryb3ZlIHRvIG1lZXQgaW52ZXN0b3JzIG5lZWRzLCB0aHJvdWdoIG9mZmVyaW5nIGJldHRlciBpbnRlbGxlY3R1YWwgcHJvcGVydHkgcmlnaHRzIHByb3RlY3Rpb24sIGxvd2VyIGNvcnBvcmF0ZSB0YXhlcywgZ3JlYXRlciBlYXNlIGluIG9idGFpbmluZyBwZXJtYW5lbnQgcmVzaWRlbnQgc3RhdHVzIGFuZCBtb3JlIGZsZXhpYmxlIGxhYm91ciBwb2xpY2llcy4gClJlbGF0ZWRLaW5nc3ZpbGxlIGZpcmUgY2hpZWYgYWNjdXNlZCBvZiBzZXggb2ZmZW5jZXMgaW52b2x2aW5nIGEgbWlub3JNb3JlIGFsbGVnZWQgdmljdGltcyBvZiBzZXggY3JpbWVzIGNvbWUgZm9yd2FyZCBhZ2FpbnN0IEtpbmdzdmlsbGUgZmlyZSBjaGllZlNleCB0cmlhbCBoZWFycyBvZiBhbGxlZ2VkIG1hc3NhZ2VzLCBzbGVlcG92ZXJzIHdpdGggZXggZmlyZSBjaGllZlNleHVhbCBjb250YWN0IHdpdGggZmlyZSBjaGllZiBkZWZlbmNlIHRlbGxzIGFzc2F1bHQgdHJpYWwgYXNrZWQgbWUgdG8sIHNheXMgZm9ybWVyIEtpbmdzdmlsbGUgZmlyZSBjaGllZiBhYm91dCBzZXh1YWwgY29udGFjdCB3aXRoIHRlZW5LaXNzbmVyIGFsc28gaW5zaXN0ZWQgdGhhdCBoZSB3YXMgbm90IHNleHVhbGx5IGF0dHJhY3RlZCB0byB0aG9zZSB3aG9zZSBnZW5pdGFscyBoZSB0b3VjaGVkIGRlc3BpdGUgdGVzdGlmeWluZyB0aGF0IGhlIHRvdWNoZWQgdGhlIGdyb2luIG9mIG9uZSBvZiB0aGUgYWR1bHQgY29tcGxhaW5hbnRzIHVwd2FyZHMgb2YgNTAgdGltZXMuCkF0IGxlYXN0IGluIGhpcyBvdGhlciBibG9hdGVkIG5vdmVscywgbGlrZSB0aGUgdW5hYnJpZGdlZCBlZGl0aW9uIG9mIFRoZSBTdGFuZCwgdGhlIHJhbmRvbSAidW5uZWNlc3NhcnkiIHRhbmdlbnRzIHdlcmUgdXN1YWxseSBlbnRlcnRhaW5pbmc6IHRoZSBkZXNjcmlwdGlvbnMgb2YgaG93IHNvbWUgb2YgdGhlIHBvcHVsYXRpb24gb2YgZmx1IHN1cnZpdm9ycyB3ZW50IG9uIHRvIGRpZSBpbiBvdGhlciB3YXlzLCBUcmFzaGNhbiBNYW4gZW5jb3VudGVyIHdpdGggdGhhdCBwc3ljaG8gZ3JlYXNlciBkdWRlIG9uIHRoZSB3YXkgdG8gVmVnYXMsIGV0Yy4uIApDcmlzdCBaaW1tZXIgIFJveSwgR2xlbiwgRWRuYSBhbmQgUnV0aCwgc3BlbnQgU3VuICB3aWxsIHNwZW5kIHRoZSB3ZWVrIHdpdGggZGF5IHdpdGggV2lsZmlhbSBLdWhuIGFuZCBmYW1pbHksIHRoZW0gaGVyby4gCkFjdHVhbCBjb21iYXQgcGhvdG9zIGRpc3RyaWJ1dGVkIGJ5IHRoZSBOZXdzIFBob3RvIFNlcnZpY2UgYWdlbmNpZXMgd2VyZSBub3QgYSBoaWdoIHByaW9yaXR5LCB1bmxlc3MgdGhleSBkZXBpY3RlZCByb3V0ZWQgb3IgcmV0cmVhdGluZyBvciBiZWluZyBkZWZlYXRlZCBHZXJtYW5zIGl0IHdhcyBub3QgYSBwb3B1bGFybHkgZGlzdHJpYnV0ZWQgc3ViamVjdCwgbWFpbmx5IGZvciBwcm9wYWdhbmRpc3QgcHVycG9zZXMuLiAKIlRoZXNlIG1vYnN0ZXJzIHNlZW1lZCB0byB1c2UgZXZlcnkgc2NoZW1lIGtub3duIHRvIHVzLCBmcm9tIGFyc29uIHRvIHNoYWtlZG93bnMsIHZpb2xlbmNlLCBoZWFsdGggY2FyZSBmcmF1ZCwgYW5kIGV2ZW4gdW50YXhlZCBjaWdhcmV0dGVzIHRvIGtlZXAgdGhlIHJhY2tldCBnb2luZywiIE5ldyBZb3JrIFBvbGljZSBDb21taXNzaW9uZXIgV2lsbGlhbSBCcmF0dG9uIHNhaWQuClRoZXJlIGEgaHVnZSBkZWJhdGUgb3ZlciB0aGF0IGV4YWN0IHF1ZXN0aW9uLiAKUGVyaGFwcyB0aGUgb25seSAic3VycHJpc2UiIGlzIGhvdyBtYW55IEFtZXJpY2FucyBkb24gZ2V0IGl0ICBkb24gZ2V0IHRoYXQgd2UgY2FuIHNwZW5kIGFsbCBvdXIgbW9uZXkgb24gZ3VucyBhbmQgc3RpbGwgaGF2ZSBhbnkgbGVmdCBvdmVyIGZvciAiYnV0dGVyLiIgaWYgdGhlICJXYXIgaXMgTWFraW5nIFlvdSBQb29yIiBiaWxsIHBhc3NlZCwgd2Ugc3RpbGwgaGF2ZSBwbGVudHkgb2YgIGFjdHVhbGx5IHdheSB0b28gbWFueSAgZ3VucyBhbmQgYSB3ZWUgYml0IG9mIGJ1dHRlci4gCkRhdHRpZXIgVWx5c3NlIE9keXNzCldlIGFyZSB0d28gRmlubmlzaCBkZXNpZ25lcnMgY29tYmluaW5nIG91ciB0YWxlbnRzIHRvIGNyZWF0ZSBvcmlnaW5hbCBwcmludCBhbmQgc3VyZmFjZSBwYXR0ZXJucyBmb3IgYXJjaGl0ZWN0dXJlLCBpbnRlcmlvciB0ZXh0aWxlcywgZmFzaGlvbiBhbmQgaG9tZSBkIFdlIHdvcmsgcmVtb3RlbHkgZnJvbSB0aGUgb3Bwb3NpdGUgc2l0ZSBvZiB0aGUgd29ybGQ6IFAgViBhbiBhcnRpc3QgYW5kIHRleHRpbGUgZGVzaWduZXIsIGxpdmVzIGFuZCB3b3JrcyBpbiBWaWVubmEsIEF1c3RyaWEsIGFuZCBQZXRyYSBLYWtzb25lbiwgYSBncmFwaGljIGRlc2lnbmVyLCBpcyBiYXNlZCBpbiBWYW5jb3V2ZXIuUS4gClNoZSBpcyBkaXNtaXNzaXZlIG9mIGEgY2xhaW0gbWFkZSBpbiBCZWhpbmQgU2FkIEV5ZXMsIGEgcmVjZW50LCB1bm9mZmljaWFsIGJpb2dyYXBoeSBvZiBIYXJyaXNvbiBieSBNYXJjIFNoYXBpcm8sIHRoYXQgd2hlbiBHZW9yZ2UgZmlyc3QgbWV0IE9saXZpYSBhdCBhIHBhcnR5IGluIDE5NzQsIGhlIGhhZCBoZXIgImNoZWNrZWQgb3V0IiBieSBpbnZlc3RpZ2F0b3JzIGJlZm9yZSB0aGV5IGJlZ2FuIGRhdGluZy4gU3VwcG9zZWRseSwgdGhpcyB3YXMgYmVjYXVzZSBoZSB3YXMgc3RpbGwgYnVybnQgYnkgUGF0dGkgQm95ZCBsZWF2aW5nIGhpbSB0byBoYXZlIGFuIGFmZmFpciB3aXRoLCBhbmQgbGF0ZXIgbWFycnksIGhpcyBmcmllbmQgRXJpYyBDbGFwdG9uLi4gCkkgYW0gbm90IGFtZXJpY2FuIHNvIEkgZG9uIHJlYWxseSBrbm93IGFib3V0IHRoaXMgcHJpc29uIGJ1dCBJIGRvbiBzZWUgd2hhdCB3cm9uZyB3aXRoIHRoaXMgZnJvbSBhIGJyaWVmIGdsYW5jZSBhdCB0aGUgYXJ0aWNsZS4gClRoZSBDaGVhdGluZyBDYXJkcyBBcmUgRGVzaWduZWQgV2l0aCBMYXRlc3QgTHVtaW5vdXMgVGVjaG5vbG9neS4gClRoZSBjcm93ZCByb2FyZWQgb24gQ291cnQgNSB3aGVuIElzbmVyIGZpbmFsbHkgd29uIGEgZ2FtZSBhZnRlciAzMiBtaW51dGVzIHRvIHRyYWlsIDIgMSBpbiB0aGUgc2Vjb25kIHNldC4gCkRhdmlkc29uIGJlZ2FuIHdvcmtpbmcgZm9yIExvYmxhdywgd2hlcmUgc2hlIGxlYXJuZWQgYWxsIHNoZSBjb3VsZCBhYm91dCB0aGUgZ3JvY2VyeSBpbmR1c3RyeSBpbmNsdWRpbmcgaG93IHRvIGJlIGEgYnV5ZXIgYW5kIGhvdyB0byBzb3VyY2UgcHJvZHVjdHMsIHdoaWNoIGxlZCB0byBoZXIgYmVjb21pbmcgYSBjYXRlZ29yeSBtYW5hZ2VyIGJlZm9yZSBtb3ZpbmcgdG8gYSByb2xlIGFzIHByb2R1Y3QgYnJhbmQgbWFuYWdlciBmb3IgUHJlc2lkZW50IENob2ljZS4gCjUgICA4ICwgZGVwZW5kaW5nIHdoZXJlIHlvdSBhcmUuCkkgZ2V0IHlvdXIgZnJ1c3RyYXRlZCBiZWNhdXNlIHlvdSB1c2UgdG8gYWx3YXlzIGNvbWluZyBmaXJzdCBidXQgeW91IG5lZWQgdG8gc3VjayBpdCB1cCBsaWtlIHlvdSBkbyBvbiB0aGUgZGF5cyB5b3UgZG9uIGZlZWwgbGlrZSB0cmFpbmluZy4gCkhpcyBleHBsYW5hdGlvbiwgUGF0ZWwgdG9sZCB1cyB0aGF0IGhlIHRvb2sgYSBjYXNoIGxvYW4gb2YgUnMxMiBsYWtoIGZyb20gS2FsZ2kgdG8gc2V0dGxlIGEgY2xhaW0gb2YgaGlzIGRpc3B1dGVkIGxhbmQuIFRodXMsIGhlIGdhdmUgYSBjaGVxdWUgb2YgUnMyNSBsYWtoIHRvIEthbGdpLi4gClNvIG9uIGFuZCBzbyBmb3VydGguIElmIHlvdSBjYW4ga2VlcCB3aW5uaW5nd2hpbGUgYWR2YW5jaW5nIHVwIHRvIGxldHMgc2F5IGZpZnR5IHRvIG9uZSBodW5kcmVkIGRvbGxhcnRvdXJuYW1lbnRzLCB0aGVuIHlvdSBuZWVkIHRvIGNhc2ggb3V0IGEgZmV3IGh1bmRyZWQgZnJvbSB0aGV3aW5uaW5ncyBhbmQgZ28gZmluZCBhICJsaXZlIiBnYW1lIGF0IGEgY2FzaW5vIG5lYXIgeW91LiAKU28gd2UgZnVja2luZyBraWxsZWQgdGhlbSBhbGwuLiAKVW5kIGRlciBTdHJhbmQgd2lyZCBuaWNodCBiZXdhY2h0LiAKU28sIHdoaWxlIGZhbnMgbWF5IGJlIHN1ZmZlcmluZyB0aHJvdWdoIHNob3J0L3NwbGl0IHNlYXNvbnMgbm93LCB0aGUgZGlzYXBwb2ludGluZyBzY2VuYXJpbyBjb3VsZCBwb3RlbnRpYWxseSBwYXkgb2ZmIGluIHRoZSBmb3JtIG9mIGEgc3Bpbm9mZiAobWF5YmUpLiAiSWYgeW91J3JlIGEgY3JlYXRvciBvbiBhIHNob3csIGhhdmluZyBvbmUgb2YgdGhlc2Ugc3BsaXQgc2Vhc29ucywgb3IgaGF2aW5nIHR3byBmaW5hbCBzZWFzb25zIGdpdmVzIHlvdSBhIHBvaW50IHRvIGFpbSBmb3IsIG5hcnJhdGl2ZWx5LCIgRmllbmJlcmcgc2F5cy4gIkl0IGxldHMgeW91IGtub3cgd2hlcmUgeW91J3JlIGhlYWRlZCwgYW5kIGhvdyBtYW55IGVwaXNvZGVzIHlvdSBoYXZlIHRvIGdldCB0aGVyZSBhbmQgb2Z0ZW4gZ2l2ZXMgeW91IGEgYnJlYWsgaW4gdGhlIG1pZGRsZSBmb3Igd3JpdGluZyBvciBqdXN0IGZvciBwcmVwYXJpbmcgZm9yIHRoZSBzY2FsZSBvZiB0aGUgY2xvc2luZyBlcGlzb2Rlcy4gU29tZXRpbWVzIHRoYXQgcmVzdWx0cyBpbiB0aGUgZmlyc3Qgc2Vhc29ucyBpbiB0aGVzZSBydW5zIGJlaW5nIG1vcmUgYWJvdXQgc3RhZ2luZyBzbyB0aGF0IHRoZSBwaWVjZXMgYXJlIGluIHBsYWNlIGZvciBhIGJpZyBjbGltYXgsIGFzIGhhcHBlbmVkIHdpdGggdGhlIHR3byBoYWx2ZXMgb2YgdGhlICdCcmVha2luZyBCYWQnIGZpbmFsIHNlYXNvbi4iCkFsbCB5b3UgbmVlZCB0byBkbyBpcyBhZHZhbmNlIHN0ZXAgYnkgc3RlcC4gVGhlIEFsb25uZSBLbmlnaHRzIHdpbGwgY2hhcmdlIGF0IHlvdSBhcyB5b3UgZW50ZXIgdGhlaXIgYWdncm8gcmFuZ2UuIEJsb2NrIHRoZWlyIGF0dGFjayBhbmQgZ2l2ZSB0aGVtIHR3byBxdWljayBib25rcyB3aXRoIHlvdXIgYmx1bnQgd2VhcG9uLCByaW5zZSBhbmQgcmVwZWF0LiAKTm93IGZvciBjYXNpbm9zIHRoYXQgYXJlIG9uIHRoZSBBdGxhbnRpYyBDaXR5IHNpZGUgb2YgdGhlIGVxdWF0aW9uLCBUaGUgVGFqIE1haGFsIGhhcyB0aGUgYmVzdCBwb2tlciByb29tIGF2YWlsYWJsZSB3aXRoIHdlbGwgb3ZlciA4MCBkaWZmZXJlbnQgdGFibGVzLiAKTmVnb3RpYXRlZCBzZXR0bGVtZW50cyBhcmUgdGhvdWdodCB0byBiZSB0aGUgcHJlZmVycmVkIHdheSB0byByZXNvbHZlIGZhbWlseSBsYXcgaXNzdWVzIGFzIHRoZXNlIHNldHRsZW1lbnRzIGF2b2lkIGxpdGlnYXRpb24uIApObyBBdXN0cmFsaWFuIGhhcyB3b24gdGhlR2lybywgd2l0aCBFdmFucycgdGhpcmQgbGFzdCB5ZWFyIHRoZSBiZXN0IG92ZXJhbGwgcmVzdWx0LiAKUmV2ZWxlcnMgd2VyZSBhbHNvIHRyZWF0ZWQgdG8gb24gc2l0ZSBlbmdyYXZpbmcgdG8gcGVyc29uYWxpemUgdGhlaXIgUEFYIGRldmljZXMgYW5kIGEgcHJpdmF0ZSBwZXJmb3JtYW5jZSBmcm9tIFByZXR0eSBMaWdodHMgTXVzaWMncyBTdXBlcnZpc2lvbi4gW3Bob3RvIGNvdXJ0ZXN5IFJpc2luZyBTdW4gUGhvdG9nXS4gClJvY2tldGJvb2sgRXZlcmxhc3QgUmV1c2FibGUgU21hcnQgTm90ZWJvb2sKVGhlIHNxdWF0IGdhaW5zIGFyZSBjb21wYXJhdGl2ZWx5IGxvdyBiZWNhdXNlIEkgd2FzIHdvcmtpbmcgb24gc29tZSBmb3JtIGlzc3Vlcy4gCk1heWJlLCBzaW5jZSB5b3UgZXhwZXJpZW5jZWQgdGhpcyB5b3Vyc2VsZiwgeW91IGNvbWluZyBhdCBoaW0gZnJvbSBhbiBhZ2dyZXNzaXZlIGludGVybmFsIHBsYWNlLiAKQWx0aG91Z2gsIGl0J3MgYSB0aG91Z2h0IGZvciBkb3duIHRoZSByb2FkLiAKSnVkZ21lbnQgYW5kIFBlcmNlcHRpb24gQXQgdGltZXMsIG1hc3NhZ2UgdGhlcmFwaXN0cyBtdXN0IGRlY2lkZSB3aGV0aGVyIGEgc2Vzc2lvbiB3b3VsZCB3b3JzZW4gYSBjbGllbnQncyBjb25kaXRpb24sIHN1Y2ggYXMgYSBtZWRpY2FsIGNvbmRpdGlvbiB0aGF0IGlzIGJleW9uZCB0aGUgc2NvcGUgb2YgbWFzc2FnZSB0aGVyYXB5LiBUaGV5IG1pZ2h0IGhhdmUgdG8gZGVjbGluZSB0cmVhdG1lbnQgb3IgY2hvb3NlIGEgdGVjaG5pcXVlIG90aGVyIHRoYW4gdGhlIG9uZSB0aGUgY2xpZW50IHJlcXVlc3RlZC4gRHVyaW5nIGEgc2Vzc2lvbiwgdGhleSBtdXN0IGJlIGFibGUgdG8gdGVsbCB3aGV0aGVyIGEgY2xpZW50IGlzIHJlYWN0aW5nIG5lZ2F0aXZlbHkgdG8gdHJlYXRtZW50IGFuZCBhZGp1c3QgYWNjb3JkaW5nbHkuLiAKRGVhciBGZXJndXNvbiBmYW1pbHksIEkgd2FzIHNhZGRlbmVkIHRvIGhlYXIgb2YgSmltcyBwYXNzaW5nLiAgdG8gYWxsIG9mIHlvdS4gSSBqdXN0IHdhbnRlZCB0byBzYXkgdGhlIHNob3J0IHRpbWUgd2UgaGFkIHRvZ2V0aGVyIHdhcyBncmVhdGx5IGFwcHJlY2lhdGVkIGFuZCBKaW1zIGh1bW91ciB3aWxsIGxpdmUgb24uIEJldHR5IHRoYW5rIHlvdSBmb3Igb3VyIGNoYXRzIGFuZCBzaGFyaW5nIHlvdXIgaG9tZSB3aXRoIG1lIGl0IHdhcyB0cnVseSBhIHBsZWFzdXJlLiBHb2QgQmxlc3NBdW50aWUgQmV0dHksIERhdmlkLCBEb3VnbGFzIGFuZCBTY290dCxTbyBzb3JyeSB0byBoZWFyIGFib3V0ICBKaW0uIE91ciB0aG91Z2h0cyBhcmUgd2l0aCB5b3UuClRoaXMgd291bGQgYmUgaW5jcmVkaWJseSBlYXN5IHRvIGdldCBhd2F5IHdpdGggaWYgeW91IGdvdCBjYXVnaHQuIEp1c3QgbGVhdmUgeW91ciB3YWxsZXQgaW4geW91ciBjYXIgKGhpZGRlbiwgb3IgeW91IGhhdmUgYSBicm9rZW4gd2luZG93IGFuZCBubyB3YWxsZXQpLCBhbmQgaWYgc29tZW9uZSBzdG9wcyB5b3UganVzdCBzYXkgeW91ICJmb3Jnb3QiIHlvdXIgd2FsbGV0IGluIHlvdXIgY2FyLiBBY3Qgb2ZmZW5kZWQgdGhhdCB0aGV5IHdvdWxkIHRyZWF0IHlvdSBsaWtlIHNvbWUga2luZCBvZiBjcmltaW5hbCwgbGVhdmUgdGhlIGJhc2tldCBhbmQgc3Rvcm0gb3V0IGRlY2xhcmluZyB5b3UgbmV2ZXIgc2hvcHBpbmcgdGhlcmUgYWdhaW4uLiAKQ2hvcHRoaXMgdQpIZSdzIGp1c3QgYW5vdGhlciBvbmUgb2YgdGhvc2UganVtcGVkIHVwIGFzc2hvbGVzIHdobyB0aGlua3MgdGhhdCBldmVyeW9uZSBzaG91bGQga25lZWwgZG93biBhbmQgYmxvdyB0aGVtIGJlY2F1c2Ugb2YgdGhlIGpvYiB0aGV5IG1hZGUgdGhlIHBlcnNvbmFsIGNob2ljZSB0byB0YWtlLiAKSSBvbmx5IGxhc3RlZCAyOCBtaW51dGVzICEgU29tZSBwbGF5ZXJzIHdlcmUgc3RpbGwgc2lnbmVkIHVwIGFuZCBoYWRuJ3QgZXZlbiBzYXQgZG93bi4gCkl0IHNlZW1zIHRvIGhhdmUgYSBiaXQgZm9yd2FyZCBhbmQgYmFja3dhcmRzIGZvciBNb2xpbm8uIApUaGlzIHdhcyBzdHJvbmdlciBpbiBFc3RvbmlhLCB3aGljaCB3YXMgaW5kZXBlbmRlbnQgZnJvbSAxOTE4IHRvIDE5NDAsIHRoYW4gaW4gTW9sZG92YSwgd2hpY2ggd2FzIHJ1bGVkIGJ5IFJvbWFuaWEgb3IgUnVzc2lhIGZvciBjZW50dXJpZXMuIApDaGlvcyBFbmVyZ3kgQ291cnNlc0NoaW9zIEVuZXJneSBGaWVsZCBIZWFsaW5nIGlzIGEgY29tcHJlaGVuc2l2ZSBzeXN0ZW0gb2YgcG93ZXJmdWwgYW5kIGVmZmVjdGl2ZSBhdXJhIGFuZCBjaGFrcmEgaGVhbGluZyB0ZWNobmlxdWVzIGNyZWF0ZWQgYnkgU3RldmVuIEJhcnJldHQuIApQYXIgZXhlbXBsZSwgaidhaSBhcHByaXMgcXUnSW50ZXJwb2wgbWV0dGFpdCBlbiBvZXV2cmUgdW5lIHRlY2huaXF1ZSBkJ2lkZW50aWZpY2F0aW9uIHBhciBsYSBmYW9uIHF1J3VuIGluZGl2aWR1IHV0aWxpc2Ugc29uIG9yZGluYXRldXIuIApXaGVuIHRoZSBidXR0ZXIgc3RhcnRzIHRvIGZvYW0uIEFkZCB0aGUgbXVzaHJvb21zIGFuZCB0aHltZTsgYW5kIHNlYXNvbiB3aXRoIHNhbHQgYW5kIHBlcHBlci4gU3RpciBldmVyeXRoaW5nIHRvZ2V0aGVyIGZvciBhIGZldyBtaW51dGVzLiAKSXQgd2FzIHRoZSBvbmx5IHRpbWUgV2FybmUgd291bGQgYWdyZWUgdG8gc3BlYWsgdG8gVGhlIFN1bmRheSBBZ2UgYnV0IGhlIHN0aWxsIHJlZnVzZWQgdG8gYW5zd2VyIGRldGFpbGVkIHF1ZXN0aW9ucyBhYm91dCB0aGUgZm91bmRhdGlvbiBmaW5hbmNlcyBvciBwcm92aWRlIHRoZSBmdWxsIHNldCBvZiBhbm51YWwgcmVwb3J0cy4gClNvIGl0IGEgd2F5IHdvcnNlIGdhbWUgbm93IGZvciBldmVyeW9uZS4uIApBZ2FpbiwgaG9sZCB0aGVtIGluIGxvdmluZyBraW5kbmVzcyAgIHVzZSB3aGljaGV2ZXIgb2YgdGhlIHdheXMgd29ya3MgdGhlIGJlc3QuIExldCBhbnkgZGlzdHJhY3Rpb25zIGdvLiBJZiB5b3Ugc3RhcnQgdGhpbmtpbmcgYWJvdXQgdGhlIGxhc3QgdGltZSB5b3Ugc2F3IHRoZW0gb3IgdGhlIG5leHQgdGltZSB5b3Ugd2lsbCBzZWUgdGhlbSwgdGhlbiBnZW50bHkgYnJpbmcgeW91ciBtaW5kIGJhY2sgdG8gaG9sZGluZyB0aGVtIGluIG5vbiBqdWRnZW1lbnRhbCBsb3Zpbmcga2luZG5lc3MuIFVzZSBpbWFnZXMsIHdvcmRzICgnbWF5IHNoZSBiZSB3ZWxsLCBtYXkgc2hlIGJlIGhhcHB5LCBtYXkgc2hlIGxpdmUgaW4gcGVhY2UnKSwgZmVlbGluZ3Mgb3IgYW55IG9mIHRoZSB0aHJlZSB0byBkbyBzby4KSXMgYSBncm91cCB0aGF0IGlzIHZlcnkgbmVhciBhbmQgZGVhciB0byBvdXIgaGVhcnRzIGFzIHJpZGVycyBiZWNhdXNlIHdlIGFsbCBrbm93IHNvbWVvbmUgd2hvIGhhcyBiZWVuIGluIGFuIGFjY2lkZW50IGFuZCBoYXMgbmVlZGVkIHRoZSBoZWxwIGZyb20gSEFMTyAgIGl0IGEgdmVyeSBpbXBvcnRhbnQgY2F1c2UgZm9yIGEgbG90IG9mIHBlb3BsZSBpbiB0aGUgYXJlYS4geWVhciBGdWVsIEJvb3N0ZXIgUG9rZXIgUnVuIGlzIHNsYXRlZCBmb3IgSnVuZSAyMC4gTW9yZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgYnkgc2VhcmNoaW5nIGZvciB0aGUgUmlkZXJzIGZvciBIYWxvIG9uIEZhY2Vib29rLgpXZSBwdXQgaGltIG9uIHRoZXNlIHNwZWNpZmljIG1lZGljYXRpb25zIHRvIGhlbHAgd2l0aCBoaXMgaW1wdWxzZXMgKGxpa2UganVtcGluZyBmcm9tIGhpZ2ggc3VyZmFjZXMsIGJvbHRpbmcgZnJvbSB1cyBpbiBwdWJsaWMsIHJ1bm5pbmcgaW50byB0aGUgc3RyZWV0LCBldGMpIGFuZCB0aGVzZSBiZWhhdmlvcnMgaGF2ZSBjb21wbGV0ZWx5IGdvbmUgYXdheSB3aGlsZSBzdGlsbCBrZWVwaW5nIGhpcyBxdWlya3kgcGVyc29uYWxpdHkuIEkgbmV2ZXIgd2FudGVkIHRvICJkcnVnIiBteSBjaGlsZCwgYnV0IGhpcyBzYWZldHkgaXMgbW9yZSBpbXBvcnRhbnQgdGhhbiBhbnlvbmUgb3BpbmlvbnMgYWJvdXQgaXQuLiAKSSBpbWFnaW5lIGZvciBhIGZyZW5jaCBzcGVha2VyIGl0IG11c3QgYmUgYSBkZWxpZ2h0ZnVsIHdhdGNoLCBidXQgSSB3YXMgc3RydWdnbGluZyB0byBiZSBob25lc3QuLiAKVGhhdCBpcyBzdGF0aXN0aWNhbGx5IGZhbHNlLiBNYW55IGZhY3RvcnMgd2lsbCBkZXRlcm1pbmUgaG93IHlvdSBtb3ZlLCBpZiBhdCBhbGwsIGluIHRoZSBjbGFzcyBoaWVyYXJjaHksIGFuZCBtYW55IGZhY3RvcnMgZGV0ZXJtaW5lIHdoZXJlIHlvdSB3aWxsIGVuZCB1cCBpbiBsaWZlLiBUaG9zZSBmYWN0b3JzIGhhdmUgbGFyZ2VseSBsaXR0bGUgdG8gZG8gd2l0aCBtZXJpdCwgbW9zdCB0byBkbyB3aXRoIHlvdXIgYmlydGhyaWdodC4KQnV0IEkgd2Fzbid0IHN1cmUgaG93IHRvIGRvIGl0IGFuZCBub3cgSSBoYWQgdGhpcyBpZGVhIHRoYXQgY291bGQgd29yaywgc28gSSB3b3VsZCBsb3ZlIHRvIGhlYXIgeW91ciBpZGVhIGFib3V0IGl0LiAKVGhlIGZlZWxpbmcgeW91IGV4cGVyaWVuY2luZyBhIGZldyBkYXlzIGFmdGVyIHRyYWluaW5nIGlzIGNhbGxlZCBEZWxheWVkIE9uc2V0IE11c2NsZSBTb3JlbmVzcyAoRE9NUykuIFVuZGVyIG5vcm1hbCBjb25kaXRpb25zLCB5b3VyIG11c2NsZXMgY2FycnkgYSBjZXJ0YWluIGNvbmNlbnRyYXRpb24gb2YgYXJhY2hhZG9uaWMgYWNpZC4gVHJhaW5pbmcgY2F1c2VzIHRoZSBhcmFjaGFkb25pYyBhY2lkLCBhIHByZWN1cnNvciBmb3IgcHJvc3RvZ2xhbmRpbnMsIHRvIGJlIHJlbGVhc2VkIHdoaWNoIGluaXRpYXRlcyB0aGUgaW5mbGFtbWF0b3J5IHJlc3BvbnNlIHRoYXQgdGFrZXMgYSBmZXcgZGF5cyB0byBzZXR0bGUuClRoZSBnZW5lcmFsIGFuYWVzdGhldGljIG1hZGUgbWUgdmVyeSBncm9nZ3kgYW5kIGEgYml0IGFsbCBvdmVyIHRoZSBwbGFjZS4gSSBzdGFydGVkIG91dCB3aXRoIHNvbWUgbWlub3IgcGFpbiBraW5kIG9mIGhpZ2ggdXAgdW5kZXIgbXkgbGVmdCBicmVhc3QsIGFuZCBpdCBjb21lcyBhbmQgZ29lcy4gCkluIFNlcHRlbWJlciwgNSB3ZXJlIHBhc3NlZCBpbnRvIGxhdzogRGVmZW5zZSwgVmV0ZXJhbnMsIEhIUywgTGVnaXNsYXRpdmUsIGFuZCBFbmVyZ3kvTmF0dXJhbCBSZXNvdXJjZXMuIApUbyBtZSBpdCB3YXMgcXVpdGUgc2lsbHkgaW4gdHJ5aW5nIHRvIHN0b3AgaXQgKHNpbmNlIGl0IHdpbGwgaGFwcGVuIGFnYWluOyBpdCBoYWQgYmVlbiBzaHV0IGRvd24gYSBmZXcgdGltZXMgYmVmb3JlKSBhbmQgaXQgd2FzIGJ5IGx1Y2sgdGhhdCB0aGV5IGdvdCBzaHV0IGRvd24uIFRoZXkgaGFkIGEgcG9pbnQgc3lzdGVtIHdoZXJlIGlmIHlvdSBwb3N0IHN0dWZmIHlvdSBjYW4gZ2FpbiBtb3JlIGFjY2VzcyB0aGUgc2l0ZSBhbmQgaXRzIGZlYXR1cmVzLiAKVGhlc2UgZ3V5cyBhcmUganVzdCBzbyBtdWNoIGJldHRlciB0aGFuIGFueW9uZSBlbHNlIHRoYXQgdGhleSBvbmx5IGFjdHVhbGx5IGhhdmUgYWJvdXQgMzAwIDQwMCBwZW9wbGUgdGhhdCB0aGV5IGNhbiBldmVuIG1hdGNoIHdpdGggYW5kIGdldCBhIGRlY2VudCBnYW1lIGFuZCB0aG9zZSBwZW9wbGUgd291bGQgYWxsIGhhdmUgdG8gYmUgb24gYXQgdGhlIHNhbWUgdGltZSBmb3IgZ29vZCBkZWNlbnQgdGltZXMuIElmIHRoZXkgd2FudCBnb29kIG1hdGNoZXMsIHBsYXkgYW4gaW5ob3VzZSBsZWFndWUuIAogOCBwb2ludHMgIHN1Ym1pdHRlZCAyOCBkYXlzIGFnb0V1IHNlbXByZSBqdWxnbyBpbXBvcnRhbnRlIGlkZW50aWZpY2FyIHF1YWwgIGEgY29pc2EgcHJpbmNpcGFsIGRvIHF1ZSBlbGVzIHBlZGVtLCBhIGRlcGVuZGUgZG8gbm9tZSBlIGRhIGRlc2NyaW8gZGEgdmFnYSEgSiBtZSBhcGxpcXVlaSBwcmEgdnJpYXMgcXVlIGV1IHRpbmhhIHRpcG8gMS8zIGRvIHF1ZSBwZWRpYW0sIGUgZXNzZSAxIGVyYSBvICJjb3JlIiBkYSBwb3Npby4gU2FiZW5kbyBzZSB2aXJhciBubyByZXN0byAoZSBkaXplciBpc3NvIGNvbSBjb25maWFuYSBlIHNpbmNlcmlkYWRlLCB1bSAiZXUgbm8gdGVuaG8gdGFudGEgZXhwZXJpbmNpYSBjb20gaXNzbywgbWFzIGNvbSBjZXJ0ZXphIHZvdSBtZSBlc2ZvcmFyIHByYSBlbmNvbnRyYXIgYSBtZWxob3IgbWFuZWlyYSBkZSBmYXplciAvIGFwcmVuZGVyIiksIGQgcHJhIGlyIHByYSBmcmVudGUgZW0gdnJpb3MgcHJvY2Vzc29zLiAKVG91ZmZleiBtb2kgY2V0dGUgbW90aW9uIHF1ZSBqZSBuZSBzYXVyYWlzIHJlc3NlbnRpci4gCkd1eSBqdXN0IHRoaXMgcGFzdCB5ZWFyIGtpbGxlZCBoaXMgZ3JhbmRtb3RoZXIgYW5kIGR1bXBlZCBoZXIgYm9keSBpbiB0aGUgbGFrZSAobm90IGV2ZW4gdHJ5aW5nIHRvIGJlIHNlY3JldGl2ZSkgYW5kIGl0IHdhcyBkaXNjb3ZlcmVkIGJ5IGEgZGl2ZXIgYSB3ZWVrIG9yIHR3byBsYXRlci4gClBsYXllcnMsIGZ1bGwgdGltZSBvbmxpbmUgcHJvIElzYWFjIEhheHRvbiBzdGFydGVkIHRoaW5raW5nIGFib3V0IG1vdmluZyBvdmVyc2Vhcy4gCkFib3V0IFNoZWVoYW4gZ29lcyBvbmUgb24gb25lIHdpdGggdGhlIHRvdWdoZXN0LCBidXRjaGVzdCBnYXkgc29sZGllciBpbiB0aGUgVVMgZm9yY2VzIGFuZCB3ZSBwdXQgaXQgb24gcmVhbGl0eSBUVj8gc29ydCBvZiBleHRyZW1lIGNvbWJhdCBtZWV0cyBzaWNrIG1pbGl0YXJpc3RpYyBob21vZXJvdGljIHlldCBzdGlsbCBob21vcGhvYmljIGZhbnRhc3kgc2hvdz8gdGhlIGxvc2VyLCB3aGljaCB3aWxsIGRlZmluaXRlbHkgYmUgdGhhdCBjYW5keSBhc3NlZCBTaGVlaGFuLCBoYXMgdG8gbGljayB0aGUgd2lubmVyIGNvbWJhdCBib290cy4uIApUaGV5IGNhbiBlYXNpbHkgYmUgbHVyZWQgYnkgYSBibHVmZi4gSG93ZXZlciwgd2hlbiB0aGV5IHNlZSBzaWducyBvZiBpbnRpbWlkYXRpb24sIHRoZXkgZm9sZC4gCk9ubGluZSBjYXNpbm9zIGFsc28gb2ZmZXIgcHJvZ3Jlc3NpdmUgc2xvdCBnYW1lcy4gClRoYXQgd2hhdCBrZWVwcyBtZSBpbiB0aGUgZ2FtZS4gCkl0IHdhcyBzdXBwb3NlZCB0byBiZSBhIHNvY2lldHkgd2hlcmUgd29ya2VycyB3ZXJlIGluIGNoYXJnZSBhbmQgdGhlIGRvbWluYW50IGNsYXNzLCBub3QgbmVjZXNzYXJpbHkgYSBsaXRlcmFsIEZyZW5jaCBSZXZvbHV0aW9uIHN0eWxlIGRpY3RhdG9yc2hpcC4gClBlb3BsZSB0aGluayB0aGF0IHBva2VyIGlzIGFsbCBhYm91dCByZWFkaW5nIGZhY2lhbCBleHByZXNzaW9ucywgYnV0IGl0J3MgYWN0dWFsbHkgYWxsIGFib3V0IG1hdGguIEluIGZhY3QsIG1hbnkgcG9rZXIgcHJvcyAgIGVzcGVjaWFsbHkgdGhlIG9ubGluZSBwbGF5ZXJzICAgYXJlIG91dHJpZ2h0IHN0YXRzIGp1bmtpZXMsIGVudGVyaW5nIHRoZSBkZXRhaWxzIG9mIGV2ZXJ5IHNpbmdsZSBzZXNzaW9uIGludG8gYW5hbHlzaXMgcHJvZ3JhbXMgdG8gY2FsY3VsYXRlIHRoZWlyIG92ZXJhbGwgd2luIHJhdGUgYW5kIGhlbHAgdGhlbSBmaXggYW55IGhvbGVzIGluIHRoZWlyIGdhbWVzLiAKRmVzdGl2YWwgZmF2ZSBYYXZpZXIgRG9sYW4gZmlyc3QgRW5nbGlzaCBsYW5ndWFnZSBmZWF0dXJlIFRoZSBEZWF0aCBhbmQgTGlmZSBvZiBKb2huIEYuIApJdHMgYSBwcmV0dHkgdHlwaWNhbCBub3J0aGVybiBDYWxpZm9ybmlhIHBva2VyIHJvb20uIFBsZW50eSBvZiBsb3NlIHNsb3dseSByZWd1bGFycyhXaGVyZSBJIHdvdWxkIHBsYWNlIG15c2VsZiBhdG0pLCBhIGhhbmQgZnVsbCBvZiB3aW5uaW5nIHBsYXllcnMsIGFuZCBhIHNtYWxsIGJ1dCBhY3RpdmUgY29ycHMgb2YgYWN0aW9ucyBwbGF5ZXJzIHRoYXQgaGF2ZSBiZWVuIHRyYW5zcGxhbnRlZCBmcm9tIHRoZSAxMDEgY2FzaW5vIHNpbmNlIEdyYXRvbiBvcGVuZWQuIE5vdGhpbmcgdG9vIHNwZWNpYWwgYWJvdXQgdGhlIHJvb20gb3RoZXIgdGhhbiBpdCBjbG9zZSB0byB3aGVyZSBJIGdyZXcgdXAgYW5kIHRoZXJlIGlzIG5vdGhpbmcgYXMgY2xvc2Ugb3IgYXMgYnVzeSBpbiB0aGUgYXJlYS4uIApJbCBmYXV0IHNhdm9pciBxdWUgbGEgY2lyY29uc2NyaXB0aW9uIGNyZSByZWdyb3VwZSBnYWxlbWVudCBsZXMgOGUgZXQgOWUgYXJyb25kaXNzZW1lbnRzLiAKRGVjaGFpb3MgIDEgcG9pbnQgIHN1Ym1pdHRlZCAyIGRheXMgYWdvCjE1LDAwMCBzcGVjaWFsIGJvdW50eSBmb3Iga25vY2tpbmcgb3V0IHRoZSBBZGRhNTIgUHJvcy5PbiB0aGlzIDcwdGggSW5kZXBlbmRlbmNlIERheSwgcG9rZXIgcGxheWVycyBjYW4gZ2V0IHRoZWlyIGhhbmRzIG9uIGFkZGl0aW9uYWwgcHJpemUgcG9vbCBvZiBScy4gNzAsMDAwIGFzIHRoZSBwb2tlciBzaXRlIHdpbGwgYmUgaG9zdGluZyBQcm9ncmVzc2l2ZSBCb3VudHkgRXZlbnQuLiAKRXZlbiB3aXRoIGFsbCBvZiB0aGVzZSBpc3N1ZXMgYW5kIFNFIGxhY2sgb2Ygc3VwcG9ydCBvZiB0aGUgZ2FtZSBJIHdvdWxkIDExMCUgcmVjb21tZW5kIGF1dG9tYXRhLCBpdCBtYXkgb3IgbWF5IG5vdCBiZSB0ZWxsaW5nIFNFIHRoYXQgdGhlaXIgcGF0Y2hpbmcgcHJhY3RpY2VzIGFyZSBhY2NlcHRhYmxlLCBidXQgaXQgZGVmaW5pdGVseSB0ZWxscyBwbGF0aW51bSBnYW1lcyBwZW9wbGUgbGlrZSB0aGVpciBnYW1lcywgZXNwZWNpYWxseSBzaW5jZSB0aGV5IG5lYXJseSB3ZW50IGJhbmtydXB0IGZyb20gc2NhbGVib3VuZC4KQ3JpY2tldDcxMiAgMiBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KRnJlc2ggZG93bmxvYWRhYmxlIGNvbnRlbnQgd2lsbCBiZSBvZmZlcmVkIG9uIG11bHRpcGxlIHBsYXRmb3JtcywgYW5kIHBsYXllcnMgY2FuIG5vdyBzaHJlZC4gCklmIHlvdSBrZWVwIHVwIHlvdXIgcGxheWluZyBwYWNlLCB0aGUgZHJpbmtzIHdpbGwga2VlcCBjb21pbmcuIApKdW50YSBjaGllZiBQcmF5dXQgQ2hhbiBPIENoYSB3YW50cyB0byByZXR1cm4gdG8gZ292ZXJubWVudCBhcyBhIGNpdmlsaWFuIGxlYWRlci4KRnVuLCBoYXBweSwgZnJpZW5kbHksIGxvdHMgb2Ygc21pbGVzLCB0YWxrYXRpdmUgYW5kIGFmZmVjdGlvbmF0ZSwgd2l0aCBzZXJ2aWNlYWJsZSBFbmdsaXNoIGFuZCBnb29kIHBpbGxvdyB0YWxrLiBFbnRodXNpYXN0aWMgYW5kIHZlcnkgZW5lcmdldGljIGR1cmluZyB0aGUgc2V4IGFuZCBzZWVtZWQgdG8gZW5qb3kgaXQuIEEgdmVyeSBnb29kIEdGRS4xMC8xMAoiS2h2IHBldXQsIGVuIGVmZmV0LCBzZSBsaXJlICJrYSBoYXYiICgpLCBjb21tZSB1biBwcmUuIApEZWVwZXIgdGlzc3VlIHN0cm9rZXMgdGhhdCBhcmUgbW9yZSBzcGVjaWZpYy4gCkkgYmVlbiBhIHBybyBmb3IgYWJvdXQgNCB5ZWFycyBwbGF5aW5nIGEgbWl4IG9mIG1heWJlIDY1JSBvbmxpbmUgMzUlIGxpdmUuIEZvciB0aGUgZmlyc3QgeWVhciBvciB0d28geW91IGFyZSBkZWZpbml0ZWx5IGNvcnJlY3QgYWJvdXQgc3BlbmRpbmcgdG9vIG11Y2ggb24gdXBzd2luZ3MgYW5kIGJlaW5nIG5pdHR5IG9uIGRvd25zd2luZ3MsIGJ1dCBhZnRlciB5b3UgaGl0IGEgY2VydGFpbiBiYW5rcm9sbCB5b3Ugbm8gbG9uZ2VyIGhhdmUgdG8gcmVhbGx5IHdvcnJ5IGFib3V0IGFueSBvZiB0aGF0IGFuZCB0aGluZ3MgYmVjb21lIGEgbG90IGVhc2llci4gCklmIHRoZXkgZGlnIGluIHRoZWlyIGhlZWxzIGFuZCBmaXggbm9uZSBvZiB0aG9zZSwgdGhlbiB0aGUgZ2FtZSBpcyBkZWFkLiAKWW91IHdvcmtpbmcgYSBmdWNraW5nIDkgNSBtYWtpbmcgJDkvSFIganVzdCB0byBzY3JhcGUgYnkuIApZZXMsIHllcywgbm8sIGFyZSB5b3Uga2lkZGluZz8sIGFuZCB5ZXMuIApEaXNjaXBsaW5hcnkgcG9pbnRzIChyZWQgY2FyZCA9IDMgcG9pbnRzLCB5ZWxsb3cgY2FyZCA9IDEgcG9pbnQsIGV4cHVsc2lvbiBmb3IgdHdvIHllbGxvdyBjYXJkcyBpbiBvbmUgbWF0Y2ggPSAzIHBvaW50cyk7Ckd1bnNsaW5nZXJzLCBwb2tlciBwbGF5ZXJzLCBhbmQgY2hpY2tlbnMgMTogRGVjaXNpb24gbWFraW5nIHVuZGVyIHBoeXNpY2FsIHBlcmZvcm1hbmNlIHByZXNzdXJlIGluIGVsaXRlIGF0aGxldGVzLiAKVGhhdCB3YXMgdGhlIEVwc3RlaW4gc2l0dWF0aW9uLiBXaGljaCBhbHNvIGNhbWUgYmFjayB0byBUcnVtcC4gSSByZWFkIHllc3RlcmRheSBvbmUgb2YgdGhlIHZpY3RpbXMgd2hvIHN1ZWQgRXBzdGVpbiBpbiB0aGF0IGNhc2Ugd2FzIHJlY3J1aXRlZCBmcm9tIGhlciBqb2Igd29ya2luZyBhcyBzb21lIGtpbmQgb2YgYXR0ZW5kYW50IGF0IE1hciBhIGxhZ28uIFNoZSB3YXMgbGlrZSAxNSBvciBzb21ldGhpbmcgYXQgdGhlIHRpbWUuIFRoZXNlIHBlb3BsZSBhbGwga25vdyBlYWNoIG90aGVyIGFuZCBhcmUgaW4gdGhlIHNhbWUgc2NlbmUgZG93biB0aGVyZSBpbiBGTC4gVGhpcyBpcyBhbiB1bmJlbGlldmFibGUgYW1vdW50IG9mIGNvbm5lY3Rpb25zIHRvIFRXTyBzZXggdHJhZmZpY2tpbmcgb3BlcmF0aW9ucyB0aGF0IGRpcmVjdGx5IGNvbm5lY3QgaW50byBEb25hbGQgVHJ1bXAgdGhyb3VnaCBoaXMgZnJpZW5kcyBkb3duIGluIEZsb3JpZGEgICBhbmQgaW4gdGhhdCBjYXNlLCBoaXMgb3duIGNsdWIuClRoaW5rIGFib3V0IHRoYXQsIGFuZCBsZXQgaXQgc2luayBpbi4gCkRpc25leSdzIGNvbnRyaWJ1dGlvbiB0byB0aGUgdmlsbGFpbiBjaGFyYWN0ZXI6ICJNYWtlIGhpbSBicm93bmVyLiIKSW52ZXN0aWdhdGl2ZSBqb3VybmFsaXN0cyByb3V0aW5lbHkgY3V0IHRocm91Z2ggbW91bnRhaW5zIG9mIGxpZXMgYW5kIHByZXRlbnNlIHRvIGdldCB0byB0aGUgdHJ1dGguIElmIHlvdSdyZSBsb29raW5nIHRvIHNoYXJwZW4geW91ciBza2VwdGljJ3MgZXllLCB5b3UgcHJvYmFibHkgZG9uJ3QgbmVlZCB0byBnbyB0byBqb3VybmFsaXNtIHNjaG9vbCwgYnV0IHlvdSBtYXkgYmVuZWZpdCBmcm9tIHJlc2VhcmNoaW5nIGFuZCB3YXRjaGluZyBob3cgam91cm5hbGlzdHMgY29heCBmYWN0cyBmcm9tIHRoZWlyIHN1YmplY3RzIGluIG9uZSBvbiBvbmUgaW50ZXJ2aWV3cy4KTGF3IGVuZm9yY2VtZW50IG1heSBiZSBnYXRoZXJpbmcgbXVjaCBtb3JlIGV2aWRlbmNlIGFuZCBtYXkgYmUgcHJlcGFyaW5nIGEgY2FzZSBmb3IgdGhlc2UgdHlwZXMgb2YgYnVzaW5lc3NlcyBhbHJlYWR5LiAKIlRoZSB0cmFpbiBzaGVkIHdhcyBub3QgaW5pdGlhbGx5IGJ1aWx0IGZvciBlbGVjdHJpZmljYXRpb24gc28gd2UgZG8gaGF2ZSB0byBwdXQgdG9nZXRoZXIgYSBwbGFuIG9uIGhvdyB3ZSBjYW4gZG8gdGhhdCwiIEFpa2lucyBzYWlkLCBub3RpbmcgdGhhdCB0aGUgcGxhbiBpcyBhYm91dCA3NSBwZXIgY2VudCBjb21wbGV0ZS4gIkFyZSB3ZSBnb2luZyB0byByYWlzZSB0aGUgcm9vZiBhIGNvdXBsZSBpbmNoZXM/IExvd2VyIHRoZSByYWlsIGEgY291cGxlIG9mIGluY2hlcz8gVGhlcmUgaXMgYSB2YXJpZXR5IG9mIHRoaW5ncyB0aGF0IHdlIGNhbiBkby4iCkhvdGVsIGRldmVsb3BtZW50IHBpcGVsaW5lIGNvbXByaXNlcyAyLDc0NSBwcm9qZWN0cyB0b3RhbGluZyAzMDQsODI1IHJvb21zLCBhY2NvcmRpbmcgdG8gdGhlIEF1Z3VzdCAyMDEyIFNUUi9NY0dyYXcgSGlsbCBDb25zdHJ1Y3Rpb24gRG9kZ2UgUGlwZWxpbmUgUmVwb3J0LiBUaGlzIHJlcHJlc2VudHMgYSAzLjUgcGVyY2VudCBkZWNyZWFzZSBpbiB0aGUgbnVtYmVyIG9mIHJvb21zIGluIHRoZSB0b3RhbCBhY3RpdmUgcGlwZWxpbmUgY29tcGFyZWQgdG8gQXVndXN0IDIwMTEuIFRoZSB0b3RhbCBhY3RpdmUgcGlwZWxpbmUgZGF0YSBpbmNsdWRlcyBwcm9qZWN0cyBpbiB0aGUgSW4gQ29uc3RydWN0aW9uLCBGaW5hbCBQbGFubmluZyBhbmQgUGxhbm5pbmcgc3RhZ2VzIGJ1dCBkb2VzIG5vdCBpbmNsdWRlIHByb2plY3RzIGluIHRoZSBQcmUgUGxhbm5pbmcgc3RhZ2UuLiAKTm90IHJlbGlnaW91cyBidXQsIHlvdSBjYW4gcXVvdGUgcGFzc2FnZXMgZnJvbSBMZXZpdGljdXMgYWxsIGRheSBidXQgdGhhdCdzIG5vdCBnb2luZyB0byBtZWFuIHNoaXQgdG8gdGhlbS4gTW9zdCBDaHJpc3RpYW5zIG5vdyBhZGF5cyBmb2xsb3cgbmV3IHRlc3RhbWVudCB3aGljaCBlc3NlbnRpYWxseSBtYWtlcyBhbGwgdGhlIGZpcmUgYW5kIGJyaW1zdG9uZSBzaGl0IG51bGwgYW5kIHZvaWQuIEFmdGVyIEplc3VzIGRpZWQgZm9yIG91ciBzaW5zLCBhbGwgdGhlIG9sZCBydWxlcyB3ZW50IHdpdGggaGltLiBIZW5jZSB3aHkgSmV3cyBkb24ndCB0eXBpY2FsbHkgdHJpbSBmYWNpYWwgaGFpci4gVGhlIE9sZCBUZXN0YW1lbnQgaXMgdGhlIGJvb2sgb2YgIEp1ZGFpc20uIE15IGJpbyBtb20gKGEgZGV2b3V0IFByZXNieXRlcmlhbihzcD8pIHdvcmQgZm9yIHdvcmQ6IEkgYmVsaWV2ZSBpdCBpcyB0aGVpciBjaG9pY2UsIGJ1dCBJIGRvbid0IHdhbnQgdG8gaGF2ZSB0aGVtIGluIG15IGxpZmUuCkkgdGFrZSBjYXJlIG5vdCB0byB0cm91YmxlIG15c2VsZiB3aXRoIGFueSBlbmVtaWVzLCBsaWtlIHdpbm5pbmcgYW5kIGxvc2luZywgdGhhdCB3b3VsZCBjYXVzZSBtZSB0byBsb3NlIHNsZWVwIGF0IG5pZ2h0LiAKVGhlIG5leHQgZGF5IHNoZSBwaWNrZWQgaGltIHVwIGZyb20gdGhlIGphaWwgYW5kIHBhaWQgaGlzIGJhaWwuLiAKV2UgaGVhZGVkIGJhY2sgdG8gdGhlIHJvb20gYXJvdW5kIDc6NDUgYW5kIHByZXBhcmVkIGZvciBkaW5uZXIhIFdlIHNob3dlcmVkIHVwIGFuZCB0aGVuIHdlIGdvdCBkcmVzc2VkIGZvciBmb3JtYWwgbmlnaHQhClRoYXQgc2FpZCwgSSBrbm93IGl0IHdvbiBhbHdheXMgYmUgbGlrZSB0aGlzLiBIZSB2ZXJ5IHlvdW5nIGFuZCBzdGlsbCBsZWFybmluZyB0byBlbW90aW9uYWxseSByZWd1bGF0ZS4gRGVhbGluZyB3aXRoIGl0IGluIHRoZSBub3csIGhvd2V2ZXIsIGlzIG5vIHNtYWxsIHRhc2suClJpZ2h0IG5vdyB0aG91Z2ggYWxsIEkgY2FuIHJlYWxseSBzYXkgaXMgdGhhdCB0aGUgZW5kIGRhdGUgZm9yIHRoZSByYW5nZSBvZiBwb3NzaWJsZSBmaXJzdCBwdWJsaWNhdGlvbiBkYXRlcyBmb3IgSmFjcXVldCBEcm96IGlzIDE5MDMuMS4gUGllcnJlIEphcXVldCBEcm96IGRvXTsgMTcyMSAxNzkwKSB3YXMgYSB0aGUgbGF0ZSBlaWdodGVlbnRoIGNlbnR1cnkuIApJIGdvdCB0byB0aGUgVW5pdGVkIFN0YXRlZCBhbmQgSSByZW1lbWJlciBpdCB3YXMgY29sZCAobXkgbWVtb3J5IG1pZ2h0IGJlIGZ1enp5IG9uIHRoaXMsIGJ1dCBJIGNsZWFybHkgcmVtZW1iZXIgd2VhcmluZyBhIGphY2tldC4gUGljdHVyZSB0byBjb21lKSBhbmQgSSB3YXMgc29vbyBzY2FyZWQgYmVjYXVzZSBJIGhhZCB0byBub3cgYWRqdXN0IHRvIGEgd2hvbGUgbmV3IGxpZmUsIGxpa2Ugc29tZWhvdyBhdCB0aGUgYWdlIG9mIDEwIEkgd2VudCBpbnRvIHdpdG5lc3MgcHJvdGVjdGlvbi4gSSB3ZW50IHRvIHNjaG9vbCBvbmx5IGtub3dpbmcgeWVzIGFuZCB0aGFuayB5b3UuIEkgaGFkIHRoZSBoZWxwIG9mIG15IGNvdXNpbiBidXQgc2hlIHdhbnQgd2l0aCBtZSBpbiBldmVyeSBjbGFzcyBzbyBJIGhhZCB0byBmZW5kIGZvciBteSBzZWxmLgpDb3NtaWNNb25rZXlQb28gdQpBbHRob3VnaCB0aGVyZSBpcyBtb3JlIGFuZCBtb3JlIGluZmx1ZW5jZSBmcm9tICJzb2Z0IG1vbmV5IiBpbiBVUyBwb2xpdGljcywgdGhlcmUgaGFzIGJlZW4gYXQgbGVhc3Qgc29tZSBlZmZvcnQgdG8gY29udHJvbCBjYW1wYWlnbiBmaW5hbmNpbmcuIAogMjMyIHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ29FU0guIApJbiBwb2tlciBhbG1vc3QgZXZlcnkgdGFibGUgaGFzIGEgdmVyeSB0aWdodCBwbGF5ZXIuIApUaGUgMTk0MHMgdmVyc2lvbiBpcyB0aGVyZWZvcmUgY29zaWVyIGFuZCBtdWNoIGxlc3MgZGFyaW5nLiBBcyBmb3IgTXIgSHlkZSwgdGhlIHRyYW5zZm9ybWF0aW9uIGFuZCB1c2Ugb2Ygc3BsaXQgc2NyZWVuIHdvcmtzIHdlbGwsIGJ1dCBTcGVuY2VyIFRyYWN5IGlzIGRpc2d1aXNlZCBhcyBIeWRlIGJ5IGEgZnVubnkgd2lnLCBhIGJpZyBub3NlIGFuZCBmb3JlaGVhZCBwcm9zdGhldGljLCB3aGljaCBpcyBsZXNzIGVmZmVjdGl2ZSB0aGFuIHRoZSBlYXJsaWVyIGZpbG0ncyBzdHVubmluZyBtYWtlIHVwLiBOb3QgZXZlbiBzb21lb25lIHdobyBpcyBmb29sZWQgYnkgQ2xhcmsgS2VudCB0YWtpbmcgb2ZmIGhpcyBnbGFzc2VzIHRvIHRyYW5zZm9ybSBpbnRvIFN1cGVybWFuIHdvdWxkIGZhaWwgdG8gc3BvdCB0aGF0IEpla3lsbCBpcyBIeWRlLiBUaGlzIHZlcnNpb24gZG9lcyBnaXZlIG1vcmUgZGlhbG9ndWUgdG8gbW9yZSBmZW1hbGUgY2hhcmFjdGVycyBzbyBpdCBwYXNzZXMgdGhlIEJlY2hkZWwgdGVzdCB3aXRoIGVhc2UgICB0aG91Z2ggdGhleSBzdGlsbCBoYXZlIGxpdHRsZSBpbXBhY3Qgb24gdGhlIHBsb3QuCkluIG9yZGVyIHRvIHVuZGVyc3RhbmQgaG93IHRoaXMgY291bGQgcG9zc2libHkgaGFwcGVuLCB3ZSBoYXZlIHRvIGdvIGJhY2sgdG8gdGhlIFByb2plY3QgZm9yIGEgTmV3IEFtZXJpY2FuIENlbnR1cnkoUE5BQyksIG5vdyBrbm93biBhcyB0aGUgRm9yZWlnbiBQb2xpY3kgSW5pdGlhdGl2ZSAoRlBJKS4gTm8gZG91YnQgdGhleSBjaGFuZ2VkIHRoZWlyIG5hbWUgYmVjYXVzZSBtYW55IEFtZXJpY2FucyByZWNvZ25pemVkIGhvdyBjcmVlcHkgaXQgd2FzIHRoYXQgdGhpcyBvZGQgY29sbGVjdGlvbiBvZiBuZW8gY29ucyB3YXMgc2hhcGluZyBmb3JlaWduIHBvbGljeSBpbiBhIHZlcnkgZGlyZWN0IHdheS4gSW4gY2FzZSB5b3UgZG9uIHJlbWVtYmVyIHRoZW0sIFBOQUMgd2FzIHBhcnQgb2YgdGhhdCBuZW9jb24gZmFudGFzeSB0aGF0IGFmdGVyIHRoZSBDb2xkIFdhciwgdGhlIFVTIHdhcyB0aGUgb25seSBzdXBlcnBvd2VyIHN0YW5kaW5nLCBidXQgdGhhdCBvdXIgc3VwZXJwb3dlciBzdGF0dXMgd2FzIGJhc2VkIG9uIGFtYXNzaW5nIHRoZSBsYXJnZXN0IG1pbGl0YXJ5IHRoZSB3b3JsZCBoYWQgZXZlciBrbm93bi4gClRoZSB1bnVzdWFsbHkgc2hhcnAgcmVtYXJrcyBieSBGb3JlaWduIE1pbmlzdGVyIFdhbmcgWWkgcmVwcmVzZW50ZWQgdGhlIGZpcnN0IHRpbWUgdGhlIENoaW5lc2UgZ292ZXJubWVudCBhZGRyZXNzZWQgYSBsYXdzdWl0IGZpbGVkIHRoaXMgd2VlayBieSB0aGUgdGVjaG5vbG9neSBnaWFudCwgd2hpY2ggaXMgYXJndWluZyBpbiBjb3VydCB0aGF0IGl0IG9wZXJhdGVzIGluZGVwZW5kZW50bHkgb2YgQmVpamluZyBhbmQgaGFzIGJlZW4gdW5mYWlybHkgc3RpZ21hdGl6ZWQgYnkgY29uZ3Jlc3Npb25hbCBsYXdtYWtlcnMgd2hvIGNsYWltIGl0IHBvc2VzIGFuIGVzcGlvbmFnZSB0aHJlYXQgdG8gdGhlIFVuaXRlZCBTdGF0ZXMuIGFjdGlvbnMgYWdhaW5zdCBIdWF3ZWkgYW5kIGl0cyBleGVjdXRpdmVzIGFzICJieSBubyBtZWFucyBhIHB1cmUganVkaWNpYWwgY2FzZSwgYnV0IGEgZGVsaWJlcmF0ZSBwb2xpdGljYWwgbW92ZSB0byBicmluZyB0aGVtIGRvd24iIGFuZCBwbGVkZ2VkIEJlaWppbmcncyBzdXBwb3J0LgpUaGVyZSBpcyBhIG1lZGl1bSBzaXplZCByZWNlcHRpb24gYXJlYSB3aXRoIGEgYmFyIGFuZCBiYXJzdG9vbHMgYW5kIHNvbWUgc2VhdHMgZmFjaW5nIHRoZSBmaXNoYm93bC4gWW91IGNhbiBzaXQgYXQgdGhlIGJhciBhbmQgaGF2ZSBhIGRyaW5rIGZpcnN0IGlmIHlvdSB3YW50IHRvIHRha2UgeW91ciB0aW1lIGFuZCB0YWxrIHRvIHRoZSBtYW1hc2FuLCB3aG8gc3BlYWtzIGdvb2QgRW5nbGlzaCBhbmQgbWFrZXMgcmVjb21tZW5kYXRpb25zLiAKSG91c2Ugb2YgQ29tbW9ucyBBZG1pbmlzdHJhdGlvbiBtYW5hZ2VzIGEgc3VtbWVyIHN0dWRlbnQgZW1wbG95bWVudCBwcm9ncmFtLCBvZmZlcmluZyBwb3NpdGlvbnMgaW4gYSB2YXJpZXR5IG9mIGRpc2NpcGxpbmVzIGluY2x1ZGluZyBpbmZvcm1hdGlvbiBzZXJ2aWNlcywgZmluYW5jZSwgcHJvY2VkdXJhbCBzZXJ2aWNlcywgdGhlIE9mZmljZSBvZiB0aGUgQ2xlcmsgYW5kIGh1bWFuIHJlc291cmNlcwpIb3cgVG8gU2VkdWNlIHlvdXIgSHVzYmFuZCBhZnRlciAyMCB5ZWFycyBvZiBNYXJyaWFnZQpPbmUgb2YgdGhlIGNyaXRpY2FsIHByb3Zpc2lvbnMgb2YgdGhlIDIwMTAgY29tcGFjdCwgZ2l2aW5nIHRoZSB0cmliZSBvdmVyIGJhbmtlZCBjYXJkIGdhbWVzLCBzdWNoIGFzIGJsYWNramFjaywgZXhwaXJlZCBpbiAyMDE1LiBUaGF0IHNwYXduZWQgYSBwcm90cmFjdGVkIGxlZ2FsIGJhdHRsZSBhbmQgcHJldmlvdXNseSBmdXRpbGUgYXR0ZW1wdHMgYnkgbGF3bWFrZXJzIHRvIHNlYWwgYSBuZXcgZGVhbC4KSW5nZW5pb3VzIHBhcnQgb2YgdGhpcyBpZGVhIHdhcyB0aGF0IGVhY2ggb25lIG9mIHRoZSBjYXJkcyB3aXRoIHRoZSBkZXNjcmlwdGl2ZSBjaGFyYWN0ZXJpc3RpYyB3ZXJlIG51bWJlcmVkLiAKRmVhci4gCkhhZCB0aGUgd29yc3QgcnVuIG9mIG15IGxpZmUgdG9kYXkgKFN1bmRheSkuIFdhcyBzdXBwb3NlZCB0byBkbyAxNiBtaWxlcywgd2l0aCAxMCBtaWxlcyBhdCBtYXJhdGhvbiBwYWNlLCBidXQganVzdCBwYXN0IHRoZSA4IG1pbGUgbWFyayBteSBzdG9tYWNoIHN1ZGRlbmx5IHN0YXJ0ZWQgaHVydGluZyBiYWRseS4gU28gSSBzdG9wcGVkIGFuZCB3ZW50IHRvIHRoZSByZXN0cm9vbS4gQ2FtZSBiYWNrLCByYW4gYW5vdGhlciBtaWxlLCBoYWQgdG8gc3RvcCBhZ2FpbiBmb3IgdGhlIHJlc3Ryb29tLiBSZXBlYXQgdW50aWwgbWlsZSAxMywgYXQgd2hpY2ggcG9pbnQgSSBqdXN0IGdhdmUgdXAgYW5kIHdlbnQgaG9tZSAoSSB3YXMgcnVubmluZyB0aGUgdHJhY2sgYXQgbXkgYWxtYSBtYXRlcikKUmVndWxhdGlvbnMgYXBwbGljYWJsZSB0byBnaXZlbiBjb2xsZWdlcyBtYXkgYmUgb2J0YWluZWQgZnJvbSB0aGUgcmVzcGVjdGl2ZSBkZWFucy5HZWV6LCBpdCBhbG1vc3QgbGlrZSB0aGV5IGhhdmUgcHJvZmVzc2lvbmFscyB3aG8gaGF2ZSBzdHVkaWVkIGFuZCB3b3JrZWQgZm9yIHllYXJzIHRvIGRyYWZ0IHRoZXNlIGRvY3VtZW50cy4gQ3JhenksIGh1aD8gMCBwb2ludHMgIHN1Ym1pdHRlZCAxMCBob3VycyBhZ29CZWNhdXNlIGl0J3MgdG90YWxseSBmYWlyIHRoYXQgYSBzdHVkZW50IGNhbiBzcGVuZCA0IHllYXJzIG9uIGNhbXB1cywgY29tcGxldGUgYWxsIHJlcXVpcmVtZW50cyBvZiB0aGVpciBkZWdyZWUsIGJlIHBsYWNlZCB1bmRlciBpbnZlc3RpZ2F0aW9uIGFzIHRoZWlyIGRpcGxvbWEgaXMgYmVpbmcgcHJpbnRlZCwgYW5kIGJlIGRlbmllZCB0aGUgZnJ1aXRzIG9mIHRoZWlyIGxhYm9yLiAKTGlrZSB3aGF0IGlzIHRoZSBsb25nZXN0IGJsb29kbGluZSB3ZSBjYW4gdHJhY2UgKG5vdCBkeW5hc3R5LCBub3Qgcm95YWwsIGFueSBmYW1pbHkpPyBUaGUgYW5zd2VycyB0aGF0IEkgZm91bmQgd2FzIENvbmZ1Y2l1cyBhbmQgUmFtc2VzIElJIChwZW9wbGUgZm91bmQgb3V0IHRoZXkgYXJlIGxpa2VseSBkZXNjZW5kYW50cyBmcm9tIGhpbSwgaGUgaGFkIDEwMCBjaGlsZHJlbikuIApHcmFlYm90ICAxNiBwb2ludHMgIHN1Ym1pdHRlZCAzIGRheXMgYWdvClVTJCBpbiBkZW4gQmF1IGRlciBIb2Noc2NodWxnZWJ1ZGUuIApFYXJsaWVyIHRoYXQgZGF5LCB0aGF0ICJmYW1vdXMiIDI5IHllYXIgb2xkIHdhbGtlZCBvdXQgb2YgdGhlIGZpdmUgc3RhciBsdXh1cnkgSG90ZWwgTWlyYSBpbiBLb3dsb29uIGFuZCBzcGFya2VkIGFuIGludGVuc2l2ZSBnbG9iYWwgbWFuaHVudCBub3Qgc2VlbiBzaW5jZSB0aGUgc2VhcmNoIGZvciBhbCBRYWVkYSdzIE9zYW1hIEJpbiBMYWRlbiBhZnRlciB0aGUgU2VwdC4gMTEsIDIwMDEsIGJvbWJpbmdzLiBnb3Zlcm5tZW50IG9uIGl0cyBvd24gY2l0aXplbnMgYW5kIGdvdmVybm1lbnRzIGFyb3VuZCB0aGUgd29ybGQuICAgaGlzIGxhd3llcnMgbWFkZSBoaW0gdmlydHVhbGx5IGRpc2FwcGVhciBmb3IgdHdvIHdlZWtzIGZyb20gSnVuZSAxMCB0byBKdW5lIDIzLCAyMDEzLCBiZWZvcmUgaGUgZW1lcmdlZCBvbiBhbiBBZXJvZmxvdCBhaXJwbGFuZSBib3VuZCBmb3IgTW9zY293LCB3aGVyZSBoZSByZW1haW5zIHN0cmFuZGVkIHRvZGF5IGluIHNlbGYgaW1wb3NlZCBleGlsZS4gZ292ZXJubWVudCBiZWFyaW5nIGRvd24gb24gaGltLiBJIGRpZCB3aGF0IEkgaGFkIHRvIGRvLCBhbmQgY291bGQgZG8sIHRvIGhlbHAgaGltLCIgUm9iZXJ0IFRpYmJvLCB0aGUgd2hpc3RsZWJsb3dlcidzIGxlYWQgbGF3eWVyIGluIEhvbmcgS29uZyB0b2xkIHRoZSBQb3N0IGluIGEgd2lkZSByYW5naW5nIGludGVydmlldywgdGhlIGZpcnN0IGRldGFpbGluZyB0aGUgY2hhb3RpYyBkYXlzIG9mIFNub3dkZW4ncyBlc2NhcGUgdGhyZWUgeWVhcnMgYWdvLiAiVGhleSB3YW50ZWQgdGhlIGRhdGEgYW5kIHRoZXkgd2FudGVkIHRvIHNodXQgaGltIGRvd24uIE91ciBncmVhdGVzdCBmZWFyIHdhcyB0aGF0IEVkIHdvdWxkIGJlIGZvdW5kLiIKSSBoYXZlIHR3byB3b29kZW4gbWljZS4gCkkgbmVhcmx5IGRyb3BwZWQgbXkgY29mZmVlIG11ZyB0aGlzIGFtIHdoZW4gSSBoZWFyZCBzb21lIGJsb2tlIG9uIHRoZSBCQkMgIldvcmxkIiBzYXlpbmcgInRoZXJlIG5vIGV4cGxhbmF0aW9uIiBmb3Igc3VjaCB2aW9sZW5jZSBzaW5jZSBoZSB3YXMgYSBtaWRkbGUgY2xhc3MgR2VybWFuIGtpZCBmcm9tIGEgImdvb2QgaG9tZSIgKG1lYW5pbmcgbWlkZGxlIGNsYXNzICB3aGljaCBJIHN1cHBvc2UgbWVhbnMgdGhhdCBtaWRkbGUgY2xhc3MgaG9tZXMgYXJlIHBhdGhvbG9neSBmcmVlPykKe1BVTklRQklOR0lNQUdFfSB7L1BVTklRQklOR0lNQUdFLiAKMzYpIEx1diBVIFN1bSBieSBDSiBIb2xsYW5kIGZlYXR1cmluZyBMYWR5IEdhR2EuIFNlYXJjaCBZb3V0dWJlIGZvciB0aGlzIHNvbmcuIApVc2UgeW91ciB0aHVtYnMgdG8gcHV0IGZvcmNlIG9uIHRoZSBzb2xlIG9mIHlvdXIgZm9vdCwgZ3JhZHVhbGx5IHJlbG9jYXRpbmcgZnJvbSB0aGUgdG9lcyB0byB0aGUgaGVlbC4gClNwYXJ0YW4yNDcwICAxMjQgcG9pbnRzICBzdWJtaXR0ZWQgMTMgaG91cnMgYWdvCkhhZCBhIGNvYWNoIHRlbGwgbWUgYmVmb3JlIHRoYXQgSSB3b3VsZCBuZXZlciBnZXQgdG8gdGhlIG5leHQgbGV2ZWwgYmVjYXVzZSBJIHdhcyBhIGxvdCBzbWFsbGVyIGFuZCBub3QgYXMgZmFzdCBhcyB0aGUgb3RoZXIgZ3V5cywgc28gdGhhdCBtb21lbnQgdGF1Z2h0IG1lIHRvIG5ldmVyIGdpdmUgdXAsIHNoZSB0b2xkIENOTi4gdGhhdCBtb21lbnQgdGhlbiBJIHRvbGQgbXlzZWxmIG5vIG9uZSBldmVyIGdvaW5nIHRvIGRlY2lkZSB3aGF0IEkgYW0gZ29pbmcgdG8gZG8gd2l0aCBteSBsaWZlLiBUaGF0IG15IGRlY2lzaW9uLiBtb3RoZXIgc2FpZCBIYXJyaXMgaXMgdmVyeSBoZWFkc3Ryb25nLgpTaG9wOiBTaWx2ZXJwZWFrLCA1MjAgRS4gTWFybGV5IE5hdHVyYWwgQ3J5c3RhbCBBc2h0cmF5LCAkNzUgUm9sbGluZyBUcmF5LCAkNzgKS2VyYmVyJ3MgbmV4dCBtYXRjaCBpcyBhZ2FpbnN0IEhzaWVoIFN1IHdlaSwgd2hvIGZvbGxvd2VkIHVwIGhlciB3aW4gb3ZlciBXaW1ibGVkb24gY2hhbXBpb24gR2FyYmluZSBNdWd1cnV6YSB3aXRoIGEgNiAyLCA3IDUgd2luIGFnYWluc3QgTm8uIDI2IEFnbmllc3prYSBSYWR3YW5za2EgdG8gcmV0dXJuIHRvIHRoZSBmb3VydGggcm91bmQgYXQgTWVsYm91cm5lIFBhcmsgZm9yIHRoZSBmaXJzdCB0aW1lIGluIGEgZGVjYWRlLgpJIGhvbmVzdGx5IGxvdmVkIGRvaW5nIGl0LCBpdCB3YXMganVzdCB1bnN0YWJsZSBhcyBhbiBpbmNvbWUgZm9yIGEgbWFsZSBMTVQsIGFuZCBJIGRpZG4gYXBwcmVjaWF0ZSB0aGUgd29vIGFsbCBteSBjb3dvcmtlcnMgc3Vic2NyaWJlZCB0by4gCk5vdyB0aGUgRGVwYXJ0bWVudCBvZiBIdW1hbiByaWdodHMgaXMgZmlsaW5nIHN1aXQgYWdhaW5zdCBDU0wgZm9yIHZpb2xhdGluZyB0aGUgTWlubmVzb3RhIEh1bWFuIFJpZ2h0cyBBY3QgICB0dXJuaW5nIEphbWVzIGF3YXkgYmVjYXVzZSBvZiBoZXIgZ2VuZGVyIGlkZW50aXR5LiBJZiB0aGUgc3VpdCBpcyBzdWNjZXNzZnVsLCBDU0wgY291bGQgYmUgcmVxdWlyZWQgdG8gcGF5IEphbWVzIHVwIHRvIHRocmVlIHRpbWVzIHdoYXQgc2hlIGxvc3QgaW4gZG9uYXRpb24gbW9uZXksIHBsdXMgZGFtYWdlcyBmb3IgbWVudGFsIGFuZ3Vpc2ggYW5kIHN1ZmZlcmluZy4KSXQgd2lsbCBpbmNsdWRlIGEgdGVsZXZpc2lvbiBjb21tZXJjaWFsIHNob3dpbmcgYSBjcmVhdHVyZSBtYWRlIG91dCBvZiBwb2tlciBtYWNoaW5lcyBjcmF3bGluZyB0aHJvdWdoIHRoZSBzdHJlZXRzLgpKZXNzIHdhcyB3YWxrZWQgaW4gb24gYnkgb25lIG9mIENocmlzdGlhbiByb29tbWF0ZXMhIHdhcyBub3QgZXZlbiBpbiB0aGUgc2hvd2VyIHlldCBidXQgaGFkIHRoZSBsdWNrIG9mIG1lZXRpbmcgaGltIGZhY2UgdG8gZmFjZSBidXR0IG5ha2VkLiAKUGx1cywgVGhpZWwgZ2V0dGluZyBOWiBjaXRpemVuc2hpcCBpcyBhIHNsZWF6ZWJhbGwgbW92ZSBmcm9tIHRoZSBwb2ludCBvZiB2aWV3IG9mIHRoZSBVUyBhcyB3ZWxsLiBIZSBpcyBvbmUgb2YgdGhlIGJpZ2dlc3QgVHJ1bXAgc3VwcG9ydGVycywgYW5kIGF0IHRoZSBzYW1lIHRpbWUsIGhlIG1ha2VzIGhpbXNlbGYgYW4gb3B0aW9uIHRvIGJ1Z2dlciBvZmYgdG8gdGhlIGtpd2lzIGluIGNhc2UgVHJ1bXAgcnVpbnMgdGhlIGNvdW50cnkuCklzIGhlIHRoZSBiZXN0IGJveGVyIGV2ZXIgbWFkZSwgYWJzb2x1dGVseS4gCkdvdmVybm1lbnQgc2VjdXJpdGllcyBkZXNwaXRlIGEgcmVib3VuZGluZyBlY29ub215IGFuZCBhIENvbmdyZXNzIHRoYXQsIGFnYWluc3QgdGhlIG9kZHMsIGhhcyBoYW1tZXJlZCBvdXQgYW4gYWdyZWVtZW50IG9uIHNwZW5kaW5nIGFuZCBzZWVtcyBjYXBhYmxlIG9mIGRvaW5nIHNhbWUgb24gb3VyIHVuc3VzdGFpbmFibGUgJDE0LjIgdHJpbGxpb24gaW4gZGVidC4gUyBpcyBzaG9ja2VkLCBzaG9ja2VkLCB0byBkaXNjb3ZlciB0aGF0IHdlJ3ZlIGJvcnJvd2VkIHRvbyBtdWNoIHRvIGdldCB0aGUgY291bnRyeSBvdXQgb2YgdGhlIG1lc3MgdGhhdCBTIGhlbHBlZCBnZXQgdXMgaW50by4gCidMeW5jaGluZycgbGluZSBnZXRzIERvdWcgTWNMZW9kIHlhbmtlZCBvZmYgS1NUQyA0NSBob2NrZXkgdG91cm5hbWVudApIZXIgcHVzc3kgd2FzIHRpZ2h0LCB3ZXQgYW5kIHNpbGt5LiBJIGRvbiBrbm93IGhvdyBJIGxhc3RlZCBhcyBsb25nIGFzIEkgZGlkIGJ1dCBmaW5hbGx5IEkgY2FtZSBoYXJkIGFzIEkgZ3JvdW5kIGludG8gaGVyIGluIHRoZSBzcG9vbnMgcG9zaXRpb24uIApGb3IgZnVydGhlciBjb250ZXh0OyBzaGUgaXMgcGV0cmlmaWVkIG9mIHNwaWRlcnMuIApUaGFua3Mgc3RyYW5nZXIuTWlzc05pZXR6c2NoZSAgW3Njb3JlIGhpZGRlbl0gIHN1Ym1pdHRlZCA3IGRheXMgYWdvSmVzdXMgQ2hyaXN0LCB3b21hbiwgbm8gd29uZGVyIHlvdSBoYXZpbmcgaXNzdWVzIHdpdGggdGhpcy4gSSBkZWZpbml0ZWx5IHRoaW5rIGl0IHN0aWxsIHBvc3NpYmxlLCBhcyBwZXJzb25hbGl0eSBkb2VzIG5vdCBkaWN0YXRlIG9uZSBsaWZlIChhbmQgb2YgY291cnNlLCB0aGUgdmFsaWRpdHkgb2YgTUJUSSBpcyBhIGJpdCBhd3J5KSwgYnV0IEkgY2FuIGRlZmluaXRlbHkgc2VlIGhvdyBhbiBFTlRQIGZlbWFsZSB3b3VsZCBoYXZlIGEgdG9uIG9mIGlzc3VlcyBmaXR0aW5nIGludG8gdGhlIFJQVyBtb2xkLlJQVyBpcyBwcm9iYWJseSBtb3N0IGlkZWFsIGZvciB0aGUgWFhGSiB0eXBlcywgSU5GUCwgYW5kIG1heWJlIEVORlAgKEVTRlAgYXMgd2VsbCBpZiBzaGUgY2FuIGhvbmUgaW4gYXR0ZW50aW9uIHNlZWtpbmcgYmVoYXZpb3JzKS4gClRoZXJlIGFyZSBPTUMgaW4gVmVnYXMsIFN0LiAKVGhlIHNjaG9vbCBpcyBoaWdobHkgcmVjb2duaXplZCBmb3IgaXRzIGV4Y2VsbGVudCBob2xpc3RpYyBwcm9ncmFtLCB3aGljaCBpcyBjb21wcmVoZW5zaXZlLCB0aG9yb3VnaCwgYW5kIHdoaWNoIHNldHMgYSBoaWdoIHN0YW5kYXJkIGZvciBwcm9mZXNzaW9uYWwgbWFzc2FnZSB0cmFpbmluZy4gSXQgYWxzbyBoYXMgZXhjZXB0aW9uYWwgdGVhY2hpbmcgc3RhZmYgd2hvIGFyZSB3YXJtLCBjYXJpbmcsIGV4dHJlbWVseSBrbm93bGVkZ2VhYmxlLCBleHBlcmllbmNlZCwgYW5kIHBhc3Npb25hdGUuIE91ciB0ZWFjaGVycyBrbm93IGhvdyB0byBtYWtlIHRoZSBlZHVjYXRpb25hbCBleHBlcmllbmNlIGFuIGFic29sdXRlIGpveS4gCkFzIGlmIHRoZXkgdGhlbXNlbHZlcyBjb3VsZG4gYmUgdG94aWMuU2hlIHdhcyBhIG1pbm9yIHdoZW4gc2hlIHdhcyBiZWluZyBwaW1wZWQgb3V0IGJ5IGEgMjQgeWVhciBvbGQgbWFuLiBBIDQzIHllYXIgb2xkIHJlYWwgZXN0YXRlIGFnZW50IHdobyBwYWlkIHRvIHNsZWVwIHdpdGggaGVyIHB1bGxlZCBvdXQgYSBndW4sIHNoZSBmZWFyZWQgZm9yIGhlciBsaWZlLCBhbmQgc2hlIHNvbWVob3cgd2FzIGFibGUgdG8ga2lsbCBoaW0gZmlyc3QuQ291cnRzIGRpZCBub3Qgc2VlIHRoaXMgYXMgYmVpbmcgc2VsZiBkZWZlbnNlLCBiZWNhdXNlIHNoZSB3YXMgYWxzbyBjaGFyZ2VkIHdpdGggcHJvc3RpdHV0aW9uLCBhbmQgdGhhdCBtYWRlIGhlciBzZWVtIG11Y2ggbGVzcyBpbm5vY2VudCwgbXVjaCBsZXNzIG9mIGEgdmljdGltLlRoZXkgY2hhcmdlZCBoZXIgYXMgYW4gYWR1bHQgYW5kIGdhdmUgaGVyIGEgbGlmZSBzZW50ZW5jZS4gU2hlIGhhcyBiZWVuIGluIHByaXNvbiBzaW5jZSAyMDA0IGFuZCBpcyBvbmx5IGZpbmRpbmcgbGV2ZXJhZ2UgZm9yIGNsZW1lbmN5IGluIGEgMjAxMiBTdXByZW1lIENvdXJ0IHJ1bGluZyBzdGF0aW5nIGxpZmUgc2VudGVuY2VzIGZvciBqdXZlbmlsZXMgd2l0aG91dCBwYXJvbGUgaXMgY3J1ZWwgYW5kIHVudXN1YWwuIApIZSBzbG93ZWQgYW5kIGFjY3VyYXRlbHkgbGluZWQgdXAgYW5kIGRyaWZ0ZWQgaW4uIApNYXNzYWdlIGlzIGEgaGFuZHMgb24gYWN0aXZpdHkgICB5ZWFoISBCdXQgYWZ0ZXIgYSBmZXcgaW50ZW5zZSBtaW51dGVzIGxvb3NlbmluZyBoaXMgc2hvdWxkZXIgbXVzY2xlcywgeW91ciBmaW5nZXJzIGFuZCB3cmlzdHMgd2lsbCBzdGFydCBmZWVsaW5nIHRoZSBidXJuLiAKU28geW91IGhhdmUgdG8gaW5zZXJ0IGEgdHJpcCB0byB0aGUgU0NPVFVTIHRvIGtpbGwgdGhhdCBpZGVhLi4gCkluZGlhIGRlcGVyaWRzIG9uIGNhdHRsZSwgcGVyaGFwcyBtb3JlIHRoYW4gYW55IG90aGVyIGNvdW50cnksIGFzIGFuIGltcG9ydGFudCBwcm9wIG9mIHRoZSBlY29ub215LiBXaXRoIG11Y2ggb2YgSW5kaWEgYWdyaWN1bHR1cmFsIGFuZCBtaW51cyBtZWNoYW5pemF0aW9uLCB0aGUgYnVsbCBwdWxscyBwbG93cyBvciBoYXVscyBsb2FkcyB0byBtYXJrZXRzLiBEYWlyeSBwcm9kdWN0cyBwcm92aWRlIF5taWxsaW9ucyBvZiBJbmRpYW4gdmVnZXRhcmlhbnMgdGhlaXIgb25seSBwcm90ZWluLiAKU29tZSBvdGhlciBnb29kIE9tZWdhIDMgYXJ0aWNsZXMKMCBwb2ludHMgIHN1Ym1pdHRlZCA0IG1vbnRocyBhZ28uIApBbnkgb2YgdGhlIDMgcmVtYWluaW5nIDUncyBvciA5J3MgaW4gdGhlIGRlY2sgd291bGQgZ2l2ZSB5b3UgYXQgbGVhc3QgYSBwYWlyLiAKSWYgeW91IGJvdHRsZSBmZWVkaW5nLCBjb25zaWRlciBnZXR0aW5nIGEgbWluaSBmcmlkZ2UgZm9yIGJlc2lkZSB0aGUgc2VhdCB3aGVyZSB5b3UgZmVlZCBiYWJpZXMgdGhlIG1vc3QuIFVzZSB0aGF0IGZyaWRnZSBmb3IgYm90aCBtaWxrIEFORCBkcmlua3MgZm9yIHlvdSwgYmVjYXVzZSBpdCBpcyBlYXN5IHRvIGZvcmdldCB0byBkcmluayBmb3IgeW91Li4gCkFyYWJzIG1ha2UgdXAgYWJvdXQgMjAgcGVyIGNlbnQgb2YgSXNyYWVsJ3MgOSBtaWxsaW9uIHJlc2lkZW50cy4gVGhleSBob2xkIGZ1bGwgY2l0aXplbnNoaXAgcmlnaHRzIGJ1dCBoYXZlIGZhY2VkIGRlY2FkZXMgb2YgZGlzY3JpbWluYXRpb24uCjQuIFRoZXNlIHJpc2sgZmFjdG9ycyBpbmNyZWFzZSB5b3VyIHJpc2sgb2YgaW5qdXJ5IGluIGEgcmVhciBpbXBhY3QgY29sbGlzaW9uOiBsb3NzIG9mIGNlcnZpY2FsIGxvcmRvdGljIGN1cnZlLCBwcmUgZXhpc3RpbmcgYXJ0aHJpdGljIGNoYW5nZXMsIHRoZSB1c2Ugb2Ygc2VhdCBiZWx0cyBhbmQgc2hvdWxkZXIgaGFybmVzcyAoYXQgc2xvdyBzcGVlZHMpLHBvb3IgaGVhZCByZXN0cmFpbnQgZ2VvbWV0cnksIG5vbiBhd2FyZW5lc3Mgb2YgdGhlIGltcGVuZGluZyBjb2xsaXNpb24sIGZlbWFsZSBnZW5kZXIsW215IGNvbW1lbnQgaGVyZTpsaWdodGVyIGJvZHkgbWFzcyBhbmQgbGVzcyBtdXNjdWxhdHVyZV0sIGFuZCBoZWFkIHJvdGF0aW9uIGF0IGltcGFjdC4uIApSZWZ1c2VkIHRvIGFuc3dlciBjYWxscyBhYm91dCBkYXljYXJlLCBzY2hvb2wgc3R1ZmYsIG9yIHNjaGVkdWxlIGNoYW5nZXMuLiAKVGhlIExvcmQgaGFzIG5vdGhpbmcgdG8gZ2FpbiBieSBlbmdhZ2luZyBpbiBhY3Rpdml0eSwgYnV0IHdpdGhvdXQgc3VjaCBhY3Rpdml0eSwgdGhlIExvcmQgd291bGQgYmVjb21lIHRoZSBjYXVzZSBvZiBkZXN0cnVjdGlvbiBvZiB0aGUgd29ybGRzIGFzIGV2ZXJ5b25lIHdvdWxkIGZvbGxvdyBIaXMgZXhhbXBsZSBhbmQgYmVjb21lIGluYWN0aXZlLiAKSSBuZWVkIHRvIGtub3cgd2hhdCBhY3Rpdml0aWVzIHRoaXMgcGFpbiBhZmZlY3RzIHNvIHdlIGNhbiBiaWxsIHlvdXIgaW5zdXJhbmNlIGZvciB0aGUgbWFzc2FnZS4iIEkgdXN1YWxseSBqdXN0IGdpdmUgdGhlbSBhIGhpbnQgb2Ygc29tZXRoaW5nIHRvIGtlZXAgdGhpbmtpbmcgYWJvdXQsIGFuZCBiZXR3ZWVuIHRoYXQgYW5kIGdldHRpbmcgdXNlZCB0byB0aGUgcmh5dGhtIG9mIG15IHF1ZXN0aW9ucyAoZWcgdGhlIDJuZCB0aW1lIHRoZXkgaGVhciAiZGVzY3JpYmUgdGhhdCBzZW5zYXRpb24gd2l0aCB3b3JkcyBvdGhlciB0aGFuIG9yIHRoZXkgZG8gYSBsb3QgYmV0dGVyLiBUaGV5IGdpdmUgbWUgYSBsb3QgYmV0dGVyIGluZm8uLiAKRm9yZWlnbiBjdXJyZW5jeSBvciBmb3JleCB0cmFkaW5nIGlzIHJlYWxseSBDaGVhcCBHb2xkZW4gR29vc2UgRGVsdXhlIEJyYW5kIFdvbWVuJ3MgU25lYWtlcnMgeGNoYW5nZSB0byBkbyB3aXRoIG9uZSBuYXRpb24ncyBjdXJyZW5jeSB3aXRoIHRoZSBhbm90aGVyIGp1c3Qgb25lLiBTaW1wbHkgcHV0LCBhcyBhbm90aGVyIGZvcmV4IHRyYWRlciwgeW91IHNob3VsZCBjZXJ0YWlubHkgYmUgYnV5aW5nIGFuZCBzZWxsaW5nIG1vbmV5LiBXaGVuIGNvbnNpZGVyaW5nIGV4YW1wbGUsIG9uZSBjb3VsZCB0cnkgdG8gYmUgc2VsbGluZyBNZW4gYW5kIHdvbWVuIERvbGxhcnMgYnV0IGJ1eWluZyBFdXJvcywgb3IgYnV5aW5nIFVTIFBvbmRzIGFuZCBzaGFyaW5nIFN3aXNzIEZyYW5jcy4gSW4gcHJldHR5IHJlc3BlY3RzLCB0aGUgbWFpbiBwcmljZSBhbW9uZyBhIHN0YXRlJ3MgY3VycmVuY3kgaXMgcHJvYmFibHkgZGVwZW5kYW50IHRvd2FyZHMgdGhlIGludGVyY29ubmVjdGlvbiBiZXR3ZWVuIGhvdyB0aGUgdHdvIGZpbmFuY2lhbCBzeXN0ZW1zIGFuZCB0aGVpciB2ZXJ5IG93biBwcm9zcGVjdGl2ZSBmdXR1cmVzIHRyYWRpbmcuIEl0cyBzd2FwIHJhdGUgZGVwZW5kcywgYW1vbmcgYSBmZXcgb3RoZXIgdGhpbmdzLCBvbiB0aGUgbmF0aW9uJ3MgZWNvbm9teSBlcXVhbCBpbiBwb3Jwb3J0aW9uIHRvIGEgbnVtYmVyIG9mIGVjb25vbWllcy4gUHVyY2hhc2luZyBhIG5hdGlvbidzIGN1cnJlbmN5IHdpbGwgYmUgbGlrZSBidXlpbmcgYSBzaGFyZSBvZiBpbiB3aGljaCBwYXJ0aWN1bGFyIG5hdGlvbidzIGVjb25vbXkuIEFuZCBpZiB0aGUgbmF0aW9uJ3MgZWNvbm9teSBlbmdhZ2VzIGluIHdlbGwsIGFsbCBvZiB0aGUgdmFsdWUgb2ZmIHlvdXIgZm9yZWlnbiBtb25leSB3aWxsIGluY3JlYXNlIHdoaWNoIHNob3BwZXJzIGNhbiBtYWtlIG1vbmV5IG9ubGluZSBmcm9tLgpBcnRpY2xlIGluIHRoZSBOZXcgWW9yayBUaW1lcyB5ZXN0ZXJkYXksICJJIG5lZWQgdG8gdmVudC4gCktuaXR0aW5nIHdhcyBvbmUgb2YgaGVyIHRydWUgbG92ZXMgYW5kIHRhbGVudHMuIAooSSBoYXZlIG5vIHN5bXBhdGh5IGZvciBoaW0sIEkganVzdCB0aGlua2luZyBhYm91dCB0aGUgcmVhbGl0eSBvZiB0aGUgc2l0dWF0aW9uLikKU2luY2UgdGhlIHByb3RvY29sIGlzIGltbWVuc2VseSBsaW1pdGVkLCB0aGVyZSBjYW4gYmUgYW55IHNvbHV0aW9uIHRvIHRob3NlIHByb2JsZW1zLiAKVGhlIHBvaW50IGlzIHRoYXQgd2l0aCBtdWx0aXBsZSBkaWZmZXJlbnQsIGluZGVwZW5kZW50IGJyb3dzZXIgZW5naW5lcywgdGhlcmUgaXMgYSBtdWNoLCBtdWNoIHNtYWxsZXIgY2hhbmNlIG9mIG5hc3R5IHZ1bG5lcmFiaWxpdGllcyBsaWtlIHRoaXMgYWZmZWN0aW5nIGFsbCBvZiB0aGVtIGF0IG9uY2UuIElmIGV2ZXJ5b25lIGp1c3QgdXNlcyBDaHJvbWl1bSwgdGhlbiBhdHRhY2tzIGxpa2UgdGhpcyBzdWRkZW5seSBiZWNvbWUgYSBsb3Qgc2NhcmllciBhbmQgYSBsb3QgbW9yZSBkYW5nZXJvdXMsIGJlY2F1c2UgZXZlcnlvbmUgb24gdGhlIFdlYiBpcyBhdCByaXNrIHJlZ2FyZGxlc3Mgb2Ygd2hpY2ggZmxhdm9yIG9mIENocm9tZSB5b3UgcnVubmluZy4uIApBbmQgdGhlIE1leGljYW5zIGhhdmUgZ29vZCBuZWdvdGlhdG9ycyAgIGFuZCB0aGV5IHdpbGwgcGljayBvdXQgcHJvZHVjdHMgdGhhdCBhcmUgdmVyeSBoYXJtZnVsIHRvIHRoZSBwb2xpdGljaWFucyB3aG8gc3VwcG9ydCBUcnVtcCIgYW5kIHB1dCBhIHRhcmlmZiBvbiB0aGVtLCBvciBhIHF1b3RhIHRvIG1ha2UgaXQgZGlmZmljdWx0IGZvciB0aGVtIHRvIGNvbXBldGUuICJUaGV5IGNhbiBkbyB0aGF0IGdhbWUuIApyZW1hcmsgcnVicyBLZW5ueSB0aGUgd3Jvbmcgd2F5CkFsYnVyeSBhbmQgMTIgb3RoZXIgbG9jYXRpb25zICAgdGhlIG1ham9yaXR5IGluIG1ldHJvcG9saXRhbiBTeWRuZXkgICBoYXZlIGJlZW4gdGFyZ2V0ZWQgYXMgcGFydCBvZiBhbiBlZmZvcnQgdG8gY3JhY2sgZG93biBvbiBwcm9ibGVtIGdhbWJsaW5nLiAKSSBkb24gaGF2ZSBmb25kIGNoaWxkaG9vZCBtZW1vcmllcyBvZiAidGhhdCBob3VzZSBpbiB0ZXJyaWJsZSBjb25kaXRpb24gd2l0aCBhIHdyZXRjaGVkIHlhcmQsIiBidXQgbWF5YmUgSSBtaXNzZWQgb3V0IG9uIHRoYXQgcGFydCBvZiBjaGlsZGhvb2Qgc29tZWhvdz8gSSBsaXZlZCBvbiBhIGNvbXBvdW5kIHdpdGggc3RhbmRhcmQgbWFpbnRlbmFuY2UgZG9uZSBieSBhIHNwZWNpZmljIGNvbXBhbnksIGFuZCB0aGVyZSB3YXMgYSB0b24gb2YgZ3JlZW4gc3BhY2Ugd2UgYWxsIHJhbiBhcm91bmQgaW4gdG9nZXRoZXIsIGFuZCBldmVyeSBzaW5nbGUgaG91c2UgbG9va2VkIGRpZmZlcmVudC4gClRoZXkgaGF2ZSAkOTM3LDAwMCBvZiBtb3J0Z2FnZSBkZWJ0LiBUaGUgbWFya2V0IHZhbHVlIG9mIHRoZSByZW50YWxzIGlzIGFib3V0ICQxLjYgbWlsbGlvbiBzbyB0aGV5IGhhdmUgJDY2MywwMDAgZXF1aXR5IGluIHByb3BlcnR5LiBQcm9wZXJ0eSBpcyA4MyBwZXIgY2VudCBvZiB0aGVpciB0b3RhbCBhc3NldHMuIApJIHJlbWVtYmVyIGEga2lkIG5lZWRlZCBhIENUQSBoZWFkIGFuZCBuZWNrIGJ1dCB0aGV5IGtuZXcgdGhleSBjb3VsZG4gcGF5IGZvciBpdCBzbyB0aGV5IHNldHRsZWQgb24ganVzdCBhIENUQSBoZWFkLiAKQSBwb3JjaCBvciBiYWxjb255IGlzIG1hZGUgY296aWVyIGJ5IGEgY29tZm9ydGFibGUgcm9ja2luZyBjaGFpciB0aGF0IHlvdSBjYW4gc2l0IG9uIHdoaWxlIHJlYWRpbmcgYSBib29rIG9yIGp1c3QgYWRtaXJpbmcgdGhlIHZpZXcuIApNYWlzIG5vdXMgc2F2b25zIHF1ZSBjZSBuJ2VzdCBwYXMgZm9yY21lbnQgdHJzIGFpcyBkZSBtYWludGVuaXIgZGVzIHF1aXBlcyBkZSBwb2xpY2llcnMgZGVzIGFubmVzIHN1ciB1biBhcnJvbmRpc3NlbWVudCAuIApBcyBmb3IgY2xlYW5pbmcsIGdldCBhIGZpdmUgaW4gb25lIHBhaW50ZXJzIHRvb2wsIGxvb2tzIGxpa2UgYSBmdW5ueSBsb29raW5nIGNoaXNlbCB3aXRoIGEgY3VydmVkIHBhcnQgb24gaXQuIApUaWpkZW5zIG1pam4gZGlhZ25vc3RpZWsgZW4gdGhlcmFwaWUgdG9ldHMgdmFuIEZMUCA2IGJldm9uZCBpayBtaWogaW4gZGUgcm9sIHZhbiBiZWhhbmRlbGVuZCBmeXNpb3RoZXJhcGV1dC4gTWlkZGVscyBlZW4gYWRlcXVhdGUgYW5hbW5lc2UgZW4gb25kZXJ6b2VrIG1vZXN0IGlrIGJlaGFuZGVsZG9lbHN0ZWxsaW5nZW4gb3BzdGVsbGVuIHZvb3IgZGUgcGF0aW50LiBNaWRkZWxzIGhldCB1aXR2b2VyZW4gdmFuIGVlbiBuZXVyb2xvZ2lzY2ggZW4gZnVuY3Rpb25lZWwgYWN0aWVmIG9uZGVyem9layBiaWogZWVuIHBhdGludCBtZXQgTVMgaGViIGlrIGRlIGp1aXN0ZSBpbmZvcm1hdGllIGt1bm5lbiB2ZXJrcmlqZ2VuLiBNZXQgZGV6ZSBpbmZvcm1hdGllIGtvbiBpayBkZSBmeXNpb3RoZXJhcGV1dGlzY2hlIGRpYWdub3NlbiBzdGVsbGVuIGVuIG9wIGJhc2lzIGRhYXJ2YW4gZWVuIGJlaGFuZGVscGxhbiBvcHN0ZWxsZW4uIERlIGRvY2VudCBoZWVmdCBtaWRkZWxzIGhldCBiZW9vcmRlbGluZ3Nmb3JtdWxpZXIgaGV0IG9uZGVyZGVlbCBvbmRlcnpvZWtlbiBydWltIHZvbGRvZW5kZSBiZW9vcmRlZWwuIERlIGRvY2VudCBoZWVmdCBhYW5nZWdldmVuIGRhdCBoZXQgb25kZXJ6b2VrIGdvZWQgZW4gbmF1d2tldXJpZyBpcyB1aXRnZXZvZXJkLgpUaGUgcHJvbnVuY2lhdGlvbiBzdHVmZiBpcyBhY3R1YWxseSBub3QgdmVyeSBjb21wbGljYXRlZC4gRm9yIGZpbmFsIGNvbnNvbmFudHMgaW4gYSB3b3JkIHRoZXkganVzdCBlbmQgaW4gYW4gdW52b2ljZWQgdmVyc2lvbiBvZiB3aGF0ZXZlciBzb3VuZCB0aGV5IG5vcm1hbGx5IHdvdWxkIG1ha2UgICB0aGUgb25seSBleGNlcHRpb24gSSBjYW4gdGhpbmsgb2YgaXMgIHdoaWNoIG1ha2VzIGEgVCBzb3VuZCBpZiBpdCBpcyB0aGUgZmluYWwgY29uc29uYW50IGluIGEgd29yZC4gClRhcmdldCBtYXJrZXQgaXMgMTggIHRvIDM1IHllYXIgb2xkcywgYnV0IGl0IGFwcGVhbHMgdG8gcGVvcGxlIG9mIGFsbCBhZ2VzLiAKWW91IHNob3VsZCBpZGVudGlmeSB3aGljaCBDbGF5IFBva2VyIENoaXBzIHRoYXQgeW91IHdhbnQgdG8gcHJvdmlkZSB0byB5b3VyIGN1c3RvbWVycywgYW5kIHRoZSBtYXJrZXRpbmcgcGxhbiB0aGF0IHlvdSBwbGFuIHRvIHVzZSB0byBsZXQgcG90ZW50aWFsIGN1c3RvbWVycyBrbm93IGFuZCB1bmRlcnN0YW5kIHdoYXQgcHJvZHVjdHMgdGhhdCB5b3UgaGF2ZSB0byBvZmZlci4uIApBIGxpZnRlZCByaWIgY2FnZSBwcm9qZWN0IGEgc3Ryb25nIGEgY29uZmlkZW50IHBlcnNvbiB3aG8gaXMgbm90IGNhcnJ5aW5nIHRoZSB3ZWlnaHQgb2YgdGhlIHdvcmxkIG9uIGhpcyBvciBoZXIgc2hvdWxkZXJzLiBSZW1lbWJlciwgeW91ciBwb3N0dXJlIGRlbW9uc3RyYXRlcyB0byB0aGUgd29ybGQgaG93IHdlbGwgeW91IGRlYWwgd2l0aCBsaWZlJ3Mgc3RyZXNzZXMuLiAKQWxvcnMgcXVlIGNlbGEgdmEgYmllbnR0IGZhaXJlIHNpeCBhbnMgcXVlIFRvbSBDcnVpc2UgbidhIGFwcGFyZW1tZW50IHBhcyB2dSBzYSBmaWxsZSBTdXJpIENydWlzZSwgbmUgZGUgc29uIHVuaW9uIGF2ZWMgS2F0aWUgSG9sbWVzIGV0IGF1am91cmQnaHVpIGdlIGRlIDEyIGFucywgbGVzIHBsdXMgZm9sbGVzIHNwY3VsYXRpb25zIGdyYXZpdGVudCBhdXRvdXIgZGUgbCdhY3RldXIgc2NpZW50b2xvZ3VlLiAKIkkgZG8gdGhpbmsgd2UgaGF2ZSBhIHJlc3BvbnNpYmlsaXR5IHRvIG1ha2Ugb3VyIGZhbWlseSBjb3VydHMgYmV0dGVyLCB0byBtYWtlIHRoZW0gbW9yZSB0cmFuc3BhcmVudCwgdG8gYnVpbGQgcHVibGljIGNvbmZpZGVuY2UgaW4gdGhlbS4gVG8gYWR2b2NhdGUgbGVhdmluZyBhbHRvZ2V0aGVyIGRvZXNuJ3Qgc29sdmUgdGhlIHByb2JsZW0gZm9yIHRoZSB2YXN0IG1ham9yaXR5IG9mIGNoaWxkcmVuIGFuZCBwYXJlbnRzIHdobyBuZWVkIG91ciBjb3VydHMgdG8gYmUgYXMgZ29vZCBhcyB0aGV5IHBvc3NpYmx5IGNhbiBiZS4iCkJ1dCB0aGluZ3MgYXJlIGNoYXJnaW5nIGJhY2sgaW50byB0aGUgYmlnIHRpbWUgdGhpcyB3ZWVrLCB3aXRoIEZlYnJ1YXJ5IDIyIGFuZCB0aGUgZm9sbG93aW5nIHdlZWsgTWFyY2ggMSBib3RoIGxvb2tpbmcgbGlrZSBiZWluZyBTdXBlciBTYXR1cmRheXMgYW5kIHRoZXJlIGFyZSBzb21lIHJlYWxseSBpbnRlcmVzdGluZyBob21lcyBvbiBvZmZlciBhY3Jvc3MgTWVsYm91cm5lIGluIHRoYXQgJDEuNSBtaWxsaW9uIHRvICQzIG1pbGxpb24gcGx1cyBwcmljZSByYW5nZS4KTmV3IFlvcmsgZ2FuZ3MgYXJlbid0IGp1c3QgYSBmcmlnaHRlbmluZyBtZW5hY2UgZHJpdmluZyB1cCBjcmltZSBpbiB0aGUgY2l0eS4gVGhleSBvcGVyYXRlIGluIGEgc2hhZG93eSB1bmRlcndvcmxkIHdpdGggdGhlaXIgb3duIHNpZ25zLCBzaWduYWxzIGFuZCB0ZXJtaW5vbG9neS4KRG9lcyBpcyBlZmZlY3QgeW91IGluIGFueSB3YXk/IE5vcGUuLiAKUGFyZW50cyBhcmUgaW5zYW5lIGFuZCBwdXQgcmlkaWN1bG91cyBleHBlY3RhdGlvbnMgb24gdGhlaXIgeW91bmcgY2hpbGRyZW4gdG8gd2luLiAKWW91IGZvbGxvdz8gUHJvYmFibHkgbm90LiAKUG9ydGFnZSBkb2VzbiBvZmZlciBhbnkgZGF5IHRvIGRheSBiZW5lZml0cywgYnV0IHRoZSBkYXkgdG8gZGF5IGlzIGdvaW5nIHRvIGJlIG1vc3RseSBzdGFibGUgZm9yIGFueSBzZXQgb2Ygd29ya2Zsb3dzIHRoYXQgeW91IGhhdmUgb24gYW55IHN5c3RlbS4gVGhlIHF1ZXN0aW9uIGlzIG1vcmUgd2hldGhlciB0aGVyZSBhcmUgdG8gZGF5cyB0aGF0IHlvdSBjYW4gbmV2ZXIgaGF2ZSBiZWNhdXNlIHlvdSBhcmUgb24gY2VydGFpbiBzeXN0ZW1zLCBvciB0aGF0IHlvdSBhdm9pZCBiZWNhdXNlIGl0IGlzIHRvbyBtdWNoIG9mIGEgcGFpbiB0byBnZXQgdGhlbSB3b3JraW5nIG9uIGEgZ2l2ZW4gZGlzdHJvLiBQb3J0YWdlIGdpdmVzIHlvdSBzaWduaWZpY2FudGx5IG1vcmUgcG93ZXIgaW4gY29udHJvbGxpbmcgZXhhY3RseSB3aGF0IHNvZnR3YXJlIGlzIGFuZCBjYW4gYmUgaW5zdGFsbGVkIG9uIHlvdXIgc3lzdGVtLiBGb3IgZXhhbXBsZSBoYXZpbmcgc2FuZSBtYW5hZ2VtZW50IG9mIG11bHRpcGxlIHZlcnNpb25zIG9mIGEgc2luZ2xlIGxpYnJhcnkgdmlhIHRoZSBTTE9UUyBtZWNoYW5pc20gbWVhbnMgdGhhdCB5b3UgZG9uIGhhdmUgdG8gbWFuYWdlIGFuIGFkaG9jIHN5c3RlbSBmb3IgaW5zdGFsbGluZyBsaWJyYXJpZXMgaW4gYSBjdXN0b20gbG9jYXRpb24ganVzdCB0byB1c2UgYSBwaWVjZSBvZiBzb2Z0d2FyZSB0aGF0IGRlcGVuZHMgb24gYW4gb2xkZXIgdmVyc2lvbi4gV2hpbGUgdGhpcyBtaWdodCBiZSBjb25zaWRlcmVkIGEgY29yb2xsYXJ5IHRvIGN1c3RvbWl6YWJpbGl0eSwgSSB0aGluayBpdCBpcyBhY3R1YWxseSBhIGJpdCBkZWVwZXIgYmVjYXVzZSBpdCBjYW4gc3VwcG9ydCBkaXZlcnNpdHkgd2l0aGluIHRoZSBzYW1lIHN5c3RlbSwgbm90IGp1c3Qgb25lIHJlYWxseSBzcGVjaWZpYyBzZXQgb2Ygb3B0aW9ucy4KVGhpcyBzZWd1ZWQgaW50byBvdXIgZGlzYWdyZWVtZW50IGFib3V0IHNvdWxzIGFuZCB0aGUgYWZ0ZXJsaWZlLi4gClNhbml0YXJ5IG5hcGtpbgpBbGxpYW5jZUJlcm5zdGVpbidzIENpdHkgcmVxdWlyZW1lbnQgaXMgZm9yIDIwMCwwMDAgdG8gMjUwLDAwMCBzcXVhcmUgZmVldC4KWW91IGdlbmVyYWxseSB3YW50IHRvIHN0YXJ0IHdpdGggb25lIHByb2R1Y3QgYXQgYSB0aW1lIHNvIHlvdSBrbm93IGRlZmluaXRpdmVseSB3aGljaCBwcm9kdWN0IGlzIGhlbHBpbmcgdnMgaHVydGluZy4gU2luY2UgeW91IGhhdmUgb2lseSBza2luLCBJIHNheSBzdGFydCB3aXRoIHRoZSBjbGVhbnNlciBhbmQgdXNlIHRoYXQgc2V2ZXJhbCB0aW1lcyBhbG9uZSBzbyB5b3UgY2FuIGdldCBhIGZlZWwgZm9yIGl0LiAKV2hhdCBNb3RpdmF0ZXMgUGh5c2ljaWFucz8gRm9sbG93IHRoZSAiTGVhZGVyIiBTaGlmdGluZyBDYXJlIEJhYnkgU3RvcnkgQ28gQ2FyZSBUaG91Z2h0cyBJVUQgTXVzdCBSZWFkIFNpdGVzISBHaWZ0cyBHQlMgTW9yZSBTdGlsbCBubyBiYWJ5IEEgUG9lbSBBYm91dCBhbiBBbW5pb3RpYyBFbWJvbGlzbSBUaGlzIGFydGljbGUgbmVhcmx5IGdhdmUgbWUgYSBjb3JvbmFyeS4gCkNvbmZlcmVuY2UgY2FsbC4gCkxhc3QgeWVhciBpbiBFdXJvcGUsIEpvaG5zb24gSm9obnNvbiBiZWdhbiBzZWxsaW5nIHRoZSBmaXJzdCBwcmVzY3JpcHRpb24gZHJ1ZyBkZXNpZ25lZCBzcGVjaWZpY2FsbHkgZm9yIHRyZWF0aW5nIFBFLiBJdCdzIGNhbGxlZCBQcmlsaWd5LCBhbmQgY2xpbmljYWwgdHJpYWxzIHJldmVhbCB0aGF0IGl0IGNhbiB0cmlwbGUgdGhlIHRpbWUgdG8gZWphY3VsYXRpb24gZm9yIG1lbiB3aG8gbm9ybWFsbHkgbGFzdCBqdXN0IGEgbWludXRlIG9yIHR3by4gUmlnaHQgbm93IGl0J3MgYXZhaWxhYmxlIGluIGEgaGFuZGZ1bCBvZiBjb3VudHJpZXMsIGluY2x1ZGluZyBHZXJtYW55LCBTcGFpbiwgYW5kIEl0YWx5LiAKSSBoYWQgYSBidW5jaCBvZiBCcm9va3Mgc2hvZXMgKG9sZGVyIFJhdmVubmFzLCBzcGVjaWZpY2FsbHkpIHRoYXQgcmVhbGx5IGRpZG4gZmVlbCBnb29kIHVudGlsIDUwIDYwIG1pbGVzIGJ1dCBhZnRlciB0aGF0IHdlcmUganVzdCBoZWF2ZW5seS4uIApBY2NvcmRpbmcgdG8gaGlzb2JpdHVhcnksIEthbWlvICAgYSBSaWNobW9uZCwgQ2FsaWYuIG5hdGl2ZSAgIGF0dGVuZGVkIHRoZSBVbml2ZXJzaXR5IG9mIENhbGlmb3JuaWEsIEJlcmtlbGV5LCBhbmQgZW50ZXJlZCB0aGUgYmFua2luZyBhbmQgZmluYW5jZSB3b3JsZCBhZnRlciBncmFkdWF0aW5nIGluIDE5NzguIEFmdGVyIG1vdmluZyB0byBCb3N0b24sIGhlIG9wZW5lZCB0aGUgZmlyc3QgQW5uYSdzIGxvY2F0aW9uIGluIEJyb29rbGluZSBpbiAxOTk1LiBUaGUgY29uY2VwdCAgYSBmYXN0IGNhc3VhbCBNZXhpY2FuIHJlc3RhdXJhbnQgc2VsbGluZyB0YWNvcywgcXVlc2FkaWxsYXMsIGJvd2xzLCBhbmQsIG1vc3Qgbm90YWJseSwgZ2FyZ2FudHVhbiBidXJyaXRvcyAgY2F1Z2h0IG9uIHF1aWNrbHksIGFuZCBub3cgYm9hc3RzIGVpZ2h0IGxvY2F0aW9ucyBhY3Jvc3MgdGhlIGNpdHk6IENvb2xpZGdlIENvcm5lciwgSkZLIENvcm5lciwgUG9ydGVyIFNxdWFyZSwgTUlULCBEYXZpcyBTcXVhcmUsIEJlYWNvbiBIaWxsLCBOZXd0b24gSGlnaGxhbmRzLCBhbmQgdGhlIFBydWRlbnRpYWwgQ2VudGVyLgpCLyBMYSB2aWUKU2hvcnQgU3RhY2tpbmcgdnMgRnVsbCBCdXlpblRoZXJlIGFyZSB0d28gcnVzaCBwb2tlciBzdHJhdGVnaWVzIHBlb3BsZSB1c2UgdG8gbWFrZSBhIHByb2ZpdC4gWW91IHdpbGwgaGF2ZSB0b3VuZGVyc3RhbmQgeW91ciBwbGF5aW5nIHN0eWxlIHRvIGZpdCBpbnRvIG9uZSBvZiB0aGVzZSBzdHJhdGVnaWVzLiBZb3UgaGF2ZSB0byBhc2t5b3Vyc2VsZiBhcmUgeW91IGEgc2hvcnQgdGVybSBvciBsb25nIHRlcm0gcGxheWVyPyBXaGF0IEkgbWVhbiBpcyBkbyB5b3UgcGxheSBhIGZld2hhbmRzIG1ha2UgYSBwcm9maXQgYW5kIGxlYXZlIGEgdGFibGUgb3Igc2l0IGZvciBob3VycyBtYWtpbmcgYXMgbXVjaCBtb25leSBhcyB5b3VjYW4gYmVmb3JlIGxlYXZpbmcgdGhlIHRhYmxlPy4gCkknbSBub3QgYXR0YWNraW5nIEdlbmVyYWwgQ0YgbWV0aG9kb2xvZ3ksIG5vdCBoZXJlLiBJJ20gc3BlY2lmaWNhbGx5IHRhbGtpbmcgYWJvdXQgdGhlIHBsYWNlcyBJJ3ZlIHNlZW4gd2hlcmUgdGhlIGNvYWNoIHdyaXRlcyBhIHNpbmdsZSBzdHJlbmd0aCBwcm9ncmFtIGZvciBhbiBlbnRpcmUgZ3ltLCBkZXNwaXRlIGEgZG96ZW4gb2YgdGhlaXIgY2xpZW50cyBub3QgbmVlZGluZyBoYWxmIG9mIHByb2dyYW0uLiAKTW9yZSBTdG9yaWVzIEJpa2VycyBiYW5kIHRvZ2V0aGVyIGZvciB2ZXRlcmFucycgTWVtb3JpYWwgUmlkZSBQbGFjZXMgcmVtYWluIGF2YWlsYWJsZSBpbiBWaWV0bmFtIFZldGVyYW5zIFBva2VyIFJ1bgpUcmFkZXMgbm90IGFsbCBpdCdzIGNyYWNrZWQgdXAgdG8gYmUgaWYgeW91IGhhdmUgdGhlIGludGVsbGlnZW5jZSBmb3IgYSBDUyBkZWdyZWUuLiAKVGhlIGVudGlyZSB0aW1lbGluZSBvZiBob3cgdGhlIGhlYWQgd291bmQgdXAgaW4gQmVsbGFuZ2VyJ3MgYXR0aWMgaXMgc3RpbGwgYSBwYXJ0aWFsIG15c3RlcnkuIApJIHZpc2l0ZWQgaG9tZSBsYXN0IHdlZWssIGFuZCB0aGV5IHN0aWxsIGhhdmUgaXQsIGFuZCBpdCBzdGlsbCB3b3Jrcy4gVGhleSBwbGF5IGl0IHJlZ3VsYXJseSwgYW5kIGl0IGhhc24gaGFkIGFueSBpc3N1ZXMgYXNpZGUgZnJvbSBvdmVyaGVhdGluZy4gCldvcmxkIExhcmdlc3QgUGFzc2VuZ2VyIFBsYW5lIEFycml2ZXMgQXQgTUlBQWlyYnVzIEEgMzgwIEx1ZnRoYW5zYSBMYW5kcyBBdCBNSUEwNkx1ZnRoYW5zYSdzIEFpcmJ1cyBBIDM4MCwgdGhlIHdvcmxkJ3MgbGFyZ2VzdCBhaXJwbGFuZSwgdGF4aXMgaW4gYWZ0ZXIgbGFuZGluZyBmb3IgdGhlIGZpcnN0IHRpbWUgYXQgTUlBIG9uIEZyaWRheSwgSnVuZSAxMCwgMjAxMS4gKENCUzQpTHVmdGhhbnNhJ3MgQWlyYnVzIEEgMzgwLCB0aGUgd29ybGQncyBsYXJnZXN0IGFpcnBsYW5lLCB0YXhpcyBpbiBhZnRlciBsYW5kaW5nIGZvciB0aGUgZmlyc3QgdGltZSBhdCBNSUEgb24gRnJpZGF5LCBKdW5lIDEwLCAyMDExLiAoQ0JTNCkKQmVoYXIgd2FzIHF1ZXN0aW9uZWQgYWZ0ZXIgYSAyMDE2IGNsaXAgb2YgIlRoZSBWaWV3IiBlbWVyZ2VkIHNob3dpbmcgdGhlIGNvIGhvc3Qgc2hvd2Nhc2luZyBhIHBob3RvIG9mIGhlcnNlbGYgZHJlc3NlZCBhcyAiYSBiZWF1dGlmdWwgQWZyaWNhbiBxdWVlbiIgYXQgYSBIYWxsb3dlZW4gcGFydHkgd2hlbiBzaGUgd2FzIDI5LgpJIGltYWdpbmUgc29tZXRoaW5nIG9mIGEgc2hpZnRpbmcgYmVsbCBjdXJ2ZSBvZiBiZWxpZXZhYmlsaXR5LCB3aXRoIHRoZSBwZWFrKHMpIGluIGRpZmZlcmVudCBwbGFjZXMgZGVwZW5kaW5nIG9uIHRoZSBwYXJ0aWN1bGFyIGF1ZGllbmNlLiBCdXQgb25lIHRoaW5nIGlzIGNlcnRhaW46IHdlIGxhY2sgc291cmNlcyB0aGF0IHdvdWxkIGhhdmUgcG9sbGVkIHZhcmlvdXMgZ3JvdXBzIG9uIHRoZWlyIHBlcnNwZWN0aXZlcyBvbiBzdWNoIGEgdG9waWMuIFRodXMsIHdlIGFyZSBsZWZ0IHRvIGNvbmplY3R1cmUuLiAKV2l0aCBIYWdlbiBjaGlsZGhvb2QgZnJpZW5kIE1hcmN1cyBhbmQgU2FiaW5lLCB3ZSBsb2FkZWQgdXAgYW5kIGRyb3ZlIHRvIEFscGJhY2gsIEF1c3RyaWEuIEFscGJhY2ggaXMgdGhpcyBnb3JnZW91cyBtb3VudGFpbiB2aWxsYWdlIGluIHRoZSBBbHBzIHdoZXJlIElyZW5lIGlzIGZyb20uLiAKV0hPIHdhcyBjb2xsdWRpbmc/IFRISVMgd2FzIGEgY29uc3BpcmFjeSBhbmQgZW50cmFwbWVudCAxMDEuIApUaGVzZSBpbmNsdWRlZCByYXBpZCB1cmJhbiBncm93dGgsIHRoZSBleHBhbnNpb24gb2YgY29tbWVyY2UsIGFuZCBmb3JtcyBvZiBtYXNzIGN1bHR1cmUgc3VjaCBhcyByYWRpbyBhbmQgY2luZW1hLCB3aGljaCBiZWNhbWUgd2lkZXNwcmVhZCBmb3IgdGhlIGZpcnN0IHRpbWUuICIiSW4gc2hvcnQsIFNvdXRoIEtvcmVhIGdyZXcgb24gdGhlIHNob3VsZGVycyBvZiB0aGUgY29sb25pYWwgYWNoaWV2ZW1lbnQsIHJhdGhlciB0aGFuIGVtZXJnaW5nIG91dCBvZiB0aGUgYXNoZXMgbGVmdCBieSB0aGUgS29yZWFuIFdhciwgYXMgaXMgc29tZXRpbWVzIGFzc2VydGVkLiJGdXNpb25HZWxTZXggUGFudGhlciBieSBPZGVvbi4gClRoZSBkZXBhcnRpbmcgcm9vbW1hdGUgd291bGQgdGhlbiBoYXZlIHRvIGdvIGFmdGVyIHRoZSBzdWJsZXR0ZXIgZm9yIHRoZWlyIG93biBkYW1hZ2VzLi4gCkV2ZXJ5IG90aGVyIHR1cm4gaXMgcHJldHR5IGJhZCBhbmQgd2UgZG9uIHdhbnQgdG8gYmV0LCBidXQgd2UgYWxzbyBjYW4gZm9sZCBvbiByZWFsbHkgYW55IHJpdmVyIHRvIGFueSBzaXplZCBiZXQgYmVjYXVzZSB0aGUgU1BSIGlzIHNvIGxvdy4gU28sIG9uIGdvb2QgdHVybnMgd2UgY2FuIGJldCBhbmQgbm90IGdldCBtdWNoIHZhbHVlIG9yIHdlIGNhbiBjaGVjayBhbmQgdHJ5IGFnYWluIG9uIHRoZSByaXZlci4gCkF4aXMgYW5kIEFsbGllcyBpcyBhIFdvcmxkIFdhciBJSSBiYXNlZCBnYW1lIHdoaWNoIGhhcyBtYW55IHNpbWlsYXJpdGllcyB0byBSSVNLLCBidXQgbWFueSBtb3JlIGNvbXBsZXhpdGllcyBhcyB3ZWxsLiBZb3UgaGF2ZSB0byBrZWVwIHVwIGFuIGVjb25vbXkgYW5kIHNwZW5kIHlvdXIgcmVzb3VyY2VzIHdpc2VseSBvbiBkaWZmZXJlbnQgdW5pdCB0eXBlcy4gCklmIHRoZXJlIGFyZSBob3N0ZWxzLCBlc3BlY2lhbGx5IGluZGVwZW5kZW50IG9uZXMsIGFuZCB5b3UgZ2V0IHRoZXNlIG91dHNpZGUgdGhlIGNpdGllcyBhcyB3ZWxsIGluIHNvbWUgY291bnRyaWVzLCB5b3UgYmUgZmluZSBtZWV0aW5nIG90aGVyIHBlb3BsZSB5b3VyIGFnZSBpbiB0aGUgZXZlbmluZ3MuLiAKRm9yIGxvdHMgb2YgcGVvcGxlIHdobyBsaWtlIHRvIHZpZXcgc3BvcnRzIGFuZCB0YWtlIHBhcnQgaW4gc29tZSBzcG9ydHMgYmV0dGluZywgaXQgaXMgYWJvdXQgZnVuIGFuZCBleGNpdGVtZW50LiBVbmZvcnR1bmF0ZWx5LCB5b3Ugd2lsbCBmaW5kIHRob3NlIHVuc2NydXB1bG91cyBwZW9wbGUgd2hvIHJlYWxseSB3YW50IHRvIHJ1aW4gYSBncmVhdCB0aW1lIGJ5IGVuc3VyaW5nIHRoYXQgdGhleSByaXAgeW91IG9mZi4gCldlYXJpbmcgcmVkIGNhbiBldmVuIGNoYW5nZSB5b3VyIHBoeXNpb2xvZ3kgYW5kIGJhbGFuY2Ugb2YgaG9ybW9uZXMgYW5kIGFsdGVyIHlvdXIgcGVyZm9ybWFuY2UgaW4gYSBmb290YmFsbCBtYXRjaC4gClNhbWUgd2l0aCBiZWluZyBhIHJlbnQgYSBjb3AuIApUaGlzIGxpdHRsZSB0YXNrIHRvb2sgbWUgc28gbXVjaCB0aW1lLCBiZWNhdXNlIEkgd2FzIG9ic3RydWN0IGJ5IGVuZW15IFNhdGFuIGluIG1hbnkgZm9ybXMuIAonQ3JvY3MgYXJlIGFib3V0IGFzIHVuIHJvY2sgYXMgaXQncyBwb3NzaWJsZSB0byBiZS4gClRoZSBjb250ZXh0IHRoZXkgZXhpc3QgaW4gaXMgZGlmZmVyZW50IHRoYW4geW91cnMuIApOb3QgdG8gbWVudGlvbiBub3QgaGF2aW5nIHRvIHBheSBwZW9wbGUgb3ZlcnRpbWUgdG8gcGF0Y2ggc3lzdGVtcyBhdCAyIGFtIG9uIGEgU2F0dXJkYXkuLiAKU2hlIHdpbGwgYmUgc2VlbiBpbiB0aGUgVG9tIEFybm9sZCBwZW5uZWQsIFBlbmVsb3BlIFNwaGVlcmlzIGRpcmVjdGVkIFRoZSBLaWQgSSBsYXRlciB0aGlzIHllYXIuIApUcnkgdG8gZG8gaXQgd2hlbiB5b3UgYXJlIG5vdCBmZWVsaW5nIGRvd24sIHRoYXQgbWFrZXMgaXQgYSBiaXQgZWFzaWVyLiAKRGVzIHZhY2FuY2VzLCBkb25jLCBPSy4gTWFpcyB2ICggdiBmYWJyaXF1IGF1IFF1IGRlIHZpYW5kZS4KS2luZG5lc3MgaGFzIG5vIGJvdW5kYXJpZXMgYW5kIG1ha2VzIHRoZSB3b3JsZCBhIHdvbmRlcmZ1bCBwbGFjZSEuIApNb3JlIHRoYW4gNCw1MDAgZXhoaWJpdG9ycyBmcm9tIDE2MCBjb3VudHJpZXMgcmV0dXJuZWQgdG8gdGhlIExhcyBWZWdhcyBDb252ZW50aW9uIENlbnRlciBhbmQgMTAgb3RoZXIgcHJvcGVydGllcyBhY3Jvc3MgdGhlIHZhbGxleSB0aGlzIHdlZWsgdG8gZGlzcGxheSB0aGVpciBsYXRlc3QgYW5kIGdyZWF0ZXN0IHRlY2ggZm9yIGp1c3QgYWJvdXQgZXZlcnkgaW5kdXN0cnkgaW1hZ2luYWJsZS4gV2hpbGUgdGhlICwgZGV2ZWxvcGVkIGJ5IEtvcmVhIGJhc2VkIEJvZHlmcmllbmQsIHdvbid0IHJlYWNoIHNwZWVkcyBvZiAyMDAgbWlsZXMgcGVyIGhvdXIsIHNvdW5kcyBvZiBhIHJldnZpbmcgZW5naW5lIGFjY29tcGFuaWVkIGJ5IGEgc2xldyBvZiBtYXNzYWdlIGZlYXR1cmVzIGlzIHRoZSBsYXRlc3Qgd2F5IGZvciB0aGUgSXRhbGlhbiBhdXRvbW9iaWxlIGNvbXBhbnkgdG8gYnJpbmcgdGhhdCBleHBlcmllbmNlIHRvIGFmaWNpb25hZG9zJyBsaXZpbmcgcm9vbXMuLiAKSGVucmkgTGVjbGVyYyBlc3QgbiAgUGFyaXMgbGUgNSBvY3RvYnJlIDE4NzAsIGMgZHVyYW50IGxlIHNpZ2UgZGUgbGEgY2FwaXRhbGUgcGFyIGxlcyB0cm91cGVzIGFsbGVtYW5kZXMuIFR1ZGlhbnQgZW4gbWRlY2luZSBkYW5zIGxlcyBhbm5lcyAxODkwLCBpbCBzZSBsaWUgZCBhdmVjIHVuIGNlcnRhaW4gUGF1bCBWZXJsYWluZSBldCB1biBjZXJ0YWluIEpvcmlzIEthcmwgSHV5c21hbnMsIHBvdXJ0YW50IHRvdXMgbGVzIGRldXggZGUgcGx1cyBkZSAyMCBhbnMgc29uIGFuIChWZXJsYWluZSBldCBuIGVuIDE4NDQsIEh1eXNtYW5zIGVuIDE4NDgpLiAKQW5kIHRoZW4gYWdhaW4gaW4gQW1zdGVyZGFtLi4gCkluIE5vdmVtYmVyIDIwMTYsIHNoZSB3YXRjaGVkIGFzIHR3byBzZXBhcmF0ZSBtYWxlIGN1c3RvbWVycyB3YWxrZWQgdG8gT3JjaGlkIGFmdGVyIHBhcmtpbmcgbW9yZSB0aGFuIGEgYmxvY2sgYXdheS4gVG8gUm9iZXJ0cywgdGhpcyB3YXMgdHlwaWNhbCBiZWhhdmlvciBmb3IgcGVvcGxlIHNlZWtpbmcgaWxsZWdhbCBzZXggc2VydmljZXMuIFdoZW4gc2hlIGVudGVyZWQgT3JjaGlkLCBzaGUgZm91bmQgdGhhdCBvd25lciBXYW5nIHdhcyBvdXQgZm9yIGx1bmNoLCBsZWF2aW5nIHRoZSBzcGEgaW4gdGhlIGNoYXJnZSBvZiBhIHdvbWFuIHdobyBjb3VsZG4ndCBwcm92aWRlIGlkZW50aWZpY2F0aW9uIGFzIGFuIGVtcGxveWVlLCBhbmQgY2xhaW1lZCB0byBiZSB0aGVyZSBmb3IgYSBqb2IgaW50ZXJ2aWV3Li4gCkkgd291bGRuIGJlIHN1cnByaXNlZCBhdCBhbGwgaWYgdGhlIHNoaXBzIHN0YXJ0ZWQgdGFraW5nIHdhdGVyIHdoaWxlIE92ZXJ3YXRjaCB3YXMgaW4gYmV0YS4uIApNdW1iYWksIE5vdmVtYmVyIDIyLCAyMDE3SE9XTCAgIFRoZSBpbmN1bWJlbnQgRSBDb21tIGFuZCBEaWdpdGFsIEFnZW5jeSwgaGFzIGJlZW4gcmVjZW50bHkgYXNzaWduZWQgdGhlIGRpZ2l0YWwgZHV0aWVzIGZvciBCYWFkc2hhaCBHYW1pbmcsIGEgb25lICBvZiBpdHMga2luZCBvbmxpbmUgcG9ydGFsIHRoYXQgb2ZmZXJzIFBva2VyLCBGYW50YXN5IExlYWd1ZSBhbmQgUnVtbXkgdW5kZXIgb25lIHJvb2YuIFRoZSBtYW5kYXRlIGVudGFpbHMgYnVpbGRpbmcgYW5kIGF1Z21lbnRpbmcgdGhlIGJyYW5kJ3MgZGlnaXRhbCBwcmVzZW5jZSB0aHJvdWdoIHN0cmF0ZWdpYyBwbGFubmluZyBhY3Jvc3MgZGlnaXRhbCBwbGF0Zm9ybXMuIApFbnRlcnRhaW5tZW50IEFydGljbGVzICBTZXB0ZW1iZXIgMTksIDIwMDYKV2hlbiBhIHBsYXllciBkb2VzIHJlYWNoIG9yIGV4Y2VlZCB0aGUgZ2l2ZW4gc2NvcmUsIHRoZSBwbGF5ZXIgd2l0aCB0aGUgZmV3ZXN0IHBvaW50cyB3aW5zLgpKdXN0IGZvdXIgd2Vla3MgYWZ0ZXIgbGF1bmNoaW5nLCB0aGUgUmVkZWxtZWllcnMgYW5kIE1yLiBFZ2xpIGVudGVyZWQgdGhlIERlbi4gVGhleSBoYWQgJDIwLDAwMCBpbiBzYWxlcyBhdCB0aGUgdGltZSBhbmQgdGhleSBoYWQgYWxzbyBzdGFydGVkIHRhbGtpbmcgdG8gb3RoZXIgT250YXJpbyB2aW5leWFyZHMgdG8gYm9vc3QgdGhlaXIgc3VwcGx5IG9mIHBvbWFjZS4gZ29hbCB3YXMgcmVhbGx5IHRvIGhlbHAgcHJvbW90ZSB3aGF0IHdlIGRvaW5nLCBNci4gIGEgZGVhbCB3aXRoIHRoZSBEcmFnb25zIGlzIGVmZmVjdGl2ZWx5IGxpa2UgZ2V0dGluZyBhIHRoaXJkIHBhcnR5IGVuZG9yc2VtZW50LiBZb3UgY2FuIGJ1eSBhZHZlcnRpc2luZyBsaWtlIHRoYXQuIGRlYWwgVGhlIGVudHJlcHJlbmV1cnMgYXNrZWQgZm9yICQxMDAsMDAwIGluIGV4Y2hhbmdlIGZvciBhIDE1JSBzdGFrZSBvZiB0aGUgQmlvZmxhdmlhIGJ1c2luZXNzLiBUaGUgbW9uZXkgd291bGQgYmUgdXNlZCB0byBmdW5kIGxlZ2FsIGNvc3RzLiBFZ2xpIHNheXMuIHRob3VnaHQgaWYgd2UgY291bGQgZ2V0IGFsbCB0aHJlZSB0aGF0IHdvdWxkIGJlIGdyZWF0LiBUaGV5IGVuZGVkIHVwIHRha2luZyBhIGRlYWwgd2l0aCBNcy4gRGlja2luc29uIHdobyBvZmZlcmVkICQxMDAsMDAwIGZvciBhIDM1JSBlcXVpdHkgc3Rha2UuCklmIHlvdSBoYXZlIGEgbG9uZyBvdmVyIG5pZ2h0IHNlY3RvciBhIHNlbGVjdGlvbiBvZiBzbmFja3Mgc3VjaCBhcyBwb3QgaGlnaGx5IGluIGRlbWFuZCBvZiBhbGwgdHJhdmVsaW5nIGhlYWx0aCBjYXJlIHByb2Zlc3Npb25hbHMuIERpc2FibGUgRmFzdCBUcmF2ZWwgU2t5cmltIGRvZXNuJ3QgZ2l2ZSB5b3UgYW4gb3B0aW9uIHRvIGRpc2FibGUgZmFzdCB0cmF2ZWwgYXZlcmFnZSwgYWx0aG91Z2ggc29tZSB0cmF2ZWwgbnVyc2VzIGhhdmUgYmVlbiBpbiBvbmUgbG9jYXRpb24gZm9yIHR3byB5ZWFycyBvciBsb25nZXIuIEl0IGlzIGEgZGlldCBsYWNraW5nIGluIHNvbWUgb2YgdGhlIG51dHJpZW50cyB0aGF0IHRoZSB5b3VyIHNwb3VzZSBjYW4gYmUgZG9uZSwgZXNwZWNpYWxseSB3aGVuIGEgZ2l2ZSBtb20gYSBtYXNzYWdlIHdoZW4geW91IGdldCBob21lIGlzIG9uIHRoZSBjYWxlbmRhciEgVGhlIGtpZHMgd2FrZSB1cCBodW5ncnkgYW5kIG5lZWR5IGFuZCBnZXR0aW5nIGV2ZXJ5b25lIG91dCBzYXZlIHRoZSBmaWxlOiBbR2FtZVBsYXldIGJTaG93RmxvYXRpbmdRdWVzdE1hcmtlcnM9MCBiU2hvd1F1ZXN0TWFya2Vycz0wIFRoZSBuZXh0IHRpbWUgeW91IGxvYWQgdXAgU2tyeWltIHRoZSBmbG9hdGluZyBxdWVzdCBtYXJrZXJzIGFuZC9vciBxdWVzdCBtYXJrZXJzIHdpbGwgYmUgZ29uZS4gVGhlcmUgYXJlIGNvdW50bGVzcyBvcHRpb25zOiB3aHkgbm90IHNwZW5kIGEgd2ludGVyIGluIHRoZSBDb2xvcmFkbyBSb2NraWVzIGFzIGEgc2tpIHNjaG9vbCBvZiB0aGUgYmFkIGJhY3RlcmlhIHRoYXQgeW91ciBib2R5IGhhcyBhY3F1aXJlZCBieSBzbG93aW5nIHRoZSBwcm9jZXNzIG9mIHRoZSBkaWFycmhlYS4gWW91IHdpbGwgZmluZCB0aGF0IHdpdGgganVzdCBhIGZldyBvZiB0aGUgYmFzaWMgd29yZHMgYW5kIHBocmFzZXMgZXNjYXBlZCB0aGUgQnViYmxlIEludmFkZXIsIHlvdSBhcmUgYWxtb3N0IGhvbWUgZnJlZS4gQm90aCBncm91cHMgbGVhcm4gYWJvdXQgdGhlIG90aGVyIGN1bHR1cmUsIGdpdmluZyBvZiB3aGF0IHRoZXkgaGF2ZSBhbmQgdGltZXMgdG8gZW5zdXJlIHRoYXQgdGhlIHRyYWNrIGlzIGZyZWUgb2YgZGVicmlzIEJhY2twYWNrIFN0cmFwcyBQYWNraW5nIG1vcmUgdGhhbiB0aGUgYmFyZSBlc3NlbnRpYWxzIHdpbGwgbW9zdCBjZXJ0YWlubHkgbGVhZCB0byBicm9rZW4gc3RyYXBzLgpUdXJuaXRpbiB1c2VzIGEgInByb3ByaWV0YXJ5IHNlYXJjaCBhbGdvcml0aG0iIHRoYXQgImNyYXdscyBhbmQgaW5kZXhlcyBjdXJyZW50IGFuZCBhcmNoaXZlZCB3ZWIgcGFnZXMsIGFuZCBpcyBjb21wYXJhYmxlIHRvIG1ham9yIHNlYXJjaCBlbmdpbmVzLCIgYXMgdGhlaXIgQWJvdXQgcGFnZSBwdXRzIGl0LiBUaGV5IGFnZ3JlZ2F0ZSBjb250ZW50IGZyb20gc2Nob2xhcmx5IGRhdGFiYXNlcyB0aGF0IG1pZ2h0IG5vdCBiZSBhcmNoaXZlZCBieSBHb29nbGUsIGluY2x1ZGluZyAicGVyaW9kaWNhbHMsIGJpb2dyYXBoaWVzLCBicm9jaHVyZXMsIGVuY3ljbG9wZWRpYXMsIG1hZ2F6aW5lcywgam91cm5hbHMsIGJvb2tzIGFuZCBhYnN0cmFjdHMsIiBhcyB3ZWxsIGFzIG1lZGljYWwgcmVzb3VyY2VzLCB0ZW5zIG9mIG1pbGxpb25zIG9mIGFydGljbGVzIGZyb20gdGhlIGFjYWRlbWljIHJlc2VhcmNoIHB1Ymxpc2hlciBHYWxlIGFuZCB0ZXh0Ym9va3MgYm90aCBuZXcgYW5kIG91dCBvZiBwcmludCBmcm9tIFBlYXJzb24gYW5kIE1jR3JhdyBIaWxsLiBJZiBzb21lb25lIGxlZ2l0aW1hdGUgcHVibGlzaGVkIGl0LCBUdXJuaXRpbiBtb3N0IGxpa2VseSBoYXMgaXQgaW4gdGhlaXIgc2VydmVycy4uIApBbmQgeWV0LCBsaWtlIHRoZSBVUyBkZWZlYXQgYXQgdGhlIFdvcmxkIEN1cCwgdGhlIGJlc3QgZGVmZW5zZSBpcyBhIGdvb2Qgb2ZmZW5zZS4gV2hvIHdhbnRzIHRvIHBsYXkgaXQgYW55d2F5PyBBZmdoYW5pc3Rhbj8gTGV0IGVpdGhlciB0dXJuIGl0IGludG8gYSByZWFsIEFtZXJpY2FuIHN0eWxlIGZvb3RiYWxsIG1hdGNoIGFuZCBraWxsIHRoZSBiYXN0YXJkcyBvciBnZXQgdGhlIGhlbGwgb3V0IG9mIHRoZSBnYW1lLiBSb3NzIERvdXRoYXQgcG9pbnRzIG91dCBpbiB0b2RheSBOZXcgWW9yayBUaGlzIGdyaW0gcG9zc2liaWxpdHkgaXMgaW1wbGljaXQgaW4gdGhlIFJvbGxpbmcgU3RvbmUgcHJvZmlsZSB0aGF0IHVuZGlkIEdlbi4gCllvdSB3YW50IHRvIHBpY2sgdGhlIHBva2VyIHJvb20gdGhhdCBoYXMgdGhlIGJlc3QgZGVwb3NpdCBib251cy4gCllvdSBtYXkgYWxzbyB3YW50IHRvIGdvIHRvIGEgc3BlY2lhbGlzdCBydW5uaW5nIHNob3Agb3Igc3BvcnRzIHNob3AgYW5kIGdldCBhIHJlY29tbWVuZGF0aW9uIG9uIHNob2VzLiAKMjAwIFRyaUNvbG9yIFRyaXBsZSBDcm93biBQb2tlciBDaGlwIFNldCB3aXRoIENsZWFyIENvdmVyIGFuZCBBbHVtaW51bSBDYXNlIFJldmlldwpFeGVyY2lzaW5nIG1heSBub3QgYmUgZWFzeSB3aGVuIHlvdSBmaXJzdCBzdGFydCBvdXQsIGVzcGVjaWFsbHkgaWYgeW91IGFyZW4ndCBub3JtYWxseSBhY3RpdmUuIFBlb3BsZSB3aG8gZXhlcmNpc2Ugd2l0aCBzb21lb25lIHdobyBoYXMgYSBzaW1pbGFyIGZpdG5lc3MgbGV2ZWwgYW5kIHNpbWlsYXIgZml0bmVzcyBnb2FscyBhcmUgbW9yZSBsaWtlbHkgdG8gZW5qb3kgdGhlbXNlbHZlcyBhbmQgc3RpY2sgdG8gcmVndWxhciBleGVyY2lzZS4KSSBzdHVtYmxlZCB1cG9uIHRoaXMsIGEgZmluZSBub3RpY2Ugb24gYSBtYXR0ZXIgb2YgZmFjdCB0aGF0IHdhcyBzb21ld2hhdCBvYnNjdXJlZCwgdGhlbiBhbmQgbm93IHRoYXQgdGhlIHN1cnJvZ2F0ZSBjaGllZiBlbmdpbmVlciBvZiB0aGUgQnJvb2tseW4gQnJpZGdlIHdhcyBFbWlseSBXYXJyZW4gUm9lYmxpbmcsIHRoZSB3aWZlIG9mIHRoZSBpbGwgYW5kIGRpc2FibGVkIFdhc2hpbmd0b24gUm9lYmxpbmcuIApGb3IgYnVkZ2V0IG1pbmRlZCBwbGF5ZXJzLCB5b3UgY2FuIGZpbmQgY2hpcHMgZ2VuZXJhbGx5IGFzIGxvdyBhIGRpbWUgYSBwaWVjZSwgaWYgeW91IHNob3AgaW4gdGhlIHJpZ2h0IHBsYWNlcy4gCkkgRmlsaXBpbm8gYW5kIGRpZG4gZmVlbCBkaXNjcmltaW5hdGVkIGFnYWluc3QuIApZb3VyIGZhbWlseSBvZiBvcmlnaW4gbWF5IG5vdCBiZSBhbnkgb2YgdGhvc2UgdGhpbmdzLiBGYW1pbHkgb2YgY2hvaWNlIGhhc24gZ290dGVuIGVub3VnaCBhdHRlbnRpb24gaW4gbWVkaWEgdGhyb3VnaG91dCB0aGUgYWdlcywgYnV0IGl0IGlzIGEgYmVhdXRpZnVsIHRoaW5nLi4gCkZvciBqdW5pb3IgYXNzb2NpYXRlcyBhbmQgb3RoZXJzIHdobyBkcmFmdCBsZWdhbCBkb2N1bWVudHMsIHdyaXR0ZW4gY29tbXVuaWNhdGlvbiBza2lsbHMgYXJlIGNyaXRpY2FsLiAKTVA0LDNHUC4gQXZhdGFyIHVua25vd24uIDQ1LDQzNy4gCklscyBuZSBjZXNzZW50IGQgdW5lIGNob3NlIGFwcnMgbCBiaWVuIHF1ZSBsZXVyIGNhcyBwdWlzc2UgcGFyYXRyZSBzYW5zIGVzcG9pci4gCiJJbmNpZGVudHMgbGlrZSB0aGVzZSwgd2hpY2ggY2hhbGxlbmdlIHRoYXQgc2FmZSBhbmQgZW5qb3lhYmxlIGVudmlyb25tZW50IGFuZCBkYW1hZ2UgdGhlIHJlcHV0YXRpb24gb2Ygb3VyIHNwb3J0LCBoYXZlIG5vIHBsYWNlIGluIG91ciBnYW1lIGFuZCBtdXN0IGJlIGRlYWx0IHdpdGggYXBwcm9wcmlhdGVseSB0byBwcm90ZWN0IG91ciBnYW1lIGFuZCB0aGUgdmFzdCBtYWpvcml0eSBvZiBwYXJ0aWNpcGFudHMgd2hvIHJlc3BlY3QgaXRzIHJ1bGVzLCIgaGUgc2FpZC4KVmFyaWNvc2UgdmVpbnMsIGFsc28ga25vd24gYXMgc3BpZGVyIHZlaW5zLCBoYXBwZW4gd2hlbiB5b3VyIGJsb29kIGNpcmN1bGF0aW9uIHNsb3dzIGRvd24uIApJdCB3b24gYmUgaGFyZCB0byBib29zdCBpbmNvbWUgdG8gdGhlIHRhcmdldCBsZXZlbCwgRWdhbiBzYXlzLiBUaGVpciBmaW5hbmNpYWwgYXNzZXRzIGV4Y2x1ZGluZyBIYXJyeSAkMTE4LDAwMCBSUklGIGFuZCBhc3N1bWluZyB0aGF0ICQ0MCwwMDAgb2YgTG91aXNhIG5vbiBSUlNQIGludmVzdG1lbnRzIGlzIHVzZWQgdG8gcGF5IG9mZiBoZXIgaG9tZSBlcXVpdHkgbG9hbnMgb2YgJDI5NywwMDAsIGF0IDMgcGVyIGNlbnQgYWZ0ZXIgaW5mbGF0aW9uLCB3b3VsZCBncm93IHRvICQzMjQsNTAwIGluIHRocmVlIHllYXJzLiBBZGRpbmcgYmFjayBIYXJyeSAkMTE4LDAwMCBSUklGIGF0IGhlciBhZ2UgNjYgd291bGQgcHJvdmlkZSBhIGJhc2Ugb2YgJDQ0Miw1MDAuIApTbyBJIHJ1biB3aXRoIHdhdGVyIGFuZCBhbHNvIGRyaW5rIGF0IGV2ZXJ5IHdhdGVyIHN0YXRpb25zLiBCZXR0ZXIgdG8gaGF2ZSB0b28gbXVjaCB0aGVuIHJ1biBvdXQuIE9uIHRoZSBvdGhlciBoYW5kLCBJIGtub3cgcnVubmVycyB3aG8gZG9uIHdhbnQgdGhlIGhhc3NlbCBvZiBjYXJyeWluZyBhbnl0aGluZy4gCkFuZCBub3RoaW5nIGhhcHBlbmVkLiAKU29jaWFsIG5ldHdvcmsKRHVhbCBjbGFzcyBtZWFucyB5b3UgaGF2ZSB0byBjaG9vc2UgYSBwb2ludCB3aGVyZSB5b3UgaWdub3JlIGFsbCB0aGUgeHAgeW91IGhhdmUgZ290dGVuIHVwIHVudGlsIHRoYXQgcG9pbnQgYW5kIHN0YXJ0IGZyZXNoIGluIGFub3RoZXIgY2xhc3MuIFlvdSBkb24gZ2V0IGZ1bmN0aW9uYWxpdHkgZnJvbSB5b3VyIG9sZCBjbGFzcyB0aWxsIHlvdSBwYXNzIHRoZSB4cCB5b3UgaGFkIGluIHRoZSBmaXJzdC4gU3VwZXIgZnVja3kuIApUcmVhdG1lbnRzIGluIGluY2x1ZGVkIHN0dWRpZXMgdmFyaWVkIHdpZGVseSBhbmQgaW5jbHVkZWQgcHN5Y2hvIGVkdWNhdGlvbiwgY29nbml0aXZlIHJlc3RydWN0dXJpbmcsIG1vZGlmaWNhdGlvbiBvZiBjb2duaXRpdmUgZXJyb3JzLCBhbmFseXNpcyBvZiB0cmlnZ2VycyBhbmQgcmlzayBzaXR1YXRpb25zLCBwcm9ibGVtIHNvbHZpbmcsIHNvY2lhbCBza2lsbHMgb3IgYXNzZXJ0aXZlbmVzcyB0cmFpbmluZywgaW4gdml2byBleHBvc3VyZSwgYXZlcnNpb24gdGhlcmFweSwgcmVsYXhhdGlvbiBhbmQgb3RoZXIgbW9kYWxpdGllcy4gTW9zdCB0cmVhdG1lbnRzIHdlcmUgZGVsaXZlcmVkIGluIG9uZSB0byBvbmUgc2Vzc2lvbnMuIE51bWJlciBhbmQgZHVyYXRpb24gb2YgdHJlYXRtZW50IHNlc3Npb25zIHZhcmllZCBiZXR3ZWVuIHN0dWRpZXMuIE1vc3Qgc3R1ZGllcyBwcmVkb21pbmFudGx5IGhhZCBtYWxlIHBhcnRpY2lwYW50cyBhbmQgdXNlZCB0aGUgRFNNIElJSSBvciBJViBjcml0ZXJpYSB0byBkaWFnbm9zZSBwYXRob2xvZ2ljYWwgZ2FtYmxpbmcuIFRoZSBtb3N0IGZyZXF1ZW50IGdhbWJsaW5nIGJlaGF2aW91ciB3YXMgdXNlIG9mIHNsb3QgbWFjaGluZXMsIHBva2VyLCBsb3R0ZXJ5LCBob3JzZSBvciBkb2cgcmFjaW5nLCBnYW1ibGluZyBtYWNoaW5lcyBhbmQgZWxlY3Ryb25pYyBnYW1ibGluZy4gT3V0Y29tZSBtZWFzdXJlcyBpbmNsdWRlZCBkaXJlY3QgbWVhc3VyZXMgKGZyZXF1ZW5jeSBvZiBnYW1ibGluZyBhbmQgZHVyYXRpb24gb2YgZ2FtYmxpbmcgaW4gYSBzcGVjaWZpZWQgdGltZSBwZXJpb2QsIHBhcnRpYWwgb3IgY29tcGxldGUgYWJzdGluZW5jZSBmcm9tIGdhbWJsaW5nKSBvciBsZXNzIGRpcmVjdCBtZWFzdXJlcyAocHJlb2NjdXBhdGlvbiwgc2VsZiBjb250cm9sIG9yIHVyZ2UgdG8gZ2FtYmxlKS4gTW9zdCBvZiB0aGUgc3R1ZGllcyB3ZXJlIGNvbmR1Y3RlZCBpbiBVU0Egb3IgQ2FuYWRhOyB0aGUgcmVzdCB3ZXJlIGNvbmR1Y3RlZCBpbiBTcGFpbiBhbmQgQXVzdHJhbGlhLiBUaW1lIHBvaW50cyBvZiBkYXRhIGNvbGxlY3Rpb24gcmFuZ2VkIGZyb20gaW1tZWRpYXRlIHRvIG5pbmUgeWVhcnMuClRoZSBmb3JtZXIgTkJBIHN0YXIgaXMgc2NoZWR1bGVkIHRvIHBsYXkgaW4gYSBjZWxlYnJpdHkgcG9rZXIgdG91cm5hbWVudCBhdCB0aGUgMjAwOCBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgb24gSnVseSAyLiBUaGUgIkFudGUgVXAgZm9yIEFmcmljYSIgZXZlbnQgaXMgZGVzaWduZWQgdG8gcmFpc2UgbW9uZXkgYW5kIGF3YXJlbmVzcyBmb3IgdGhlIGNyaXNpcyBpbiB0aGUgRGFyZnVyIHJlZ2lvbiBvZiBTdWRhbi4gcHJlc2lkZW50aWFsIGVudm95IHRvIFN1ZGFuLiBQbGF5ZXJzIGluIHRoZSBwb2tlciB0b3VybmFtZW50IHB1dCB1cCBVUyQ1LDAwMCB0byBwbGF5LCBhbmQgYXJlIGFza2VkIHRvIGRvbmF0ZSBhdCBsZWFzdCBoYWxmIHRoZWlyIHdpbm5pbmdzLiAKSW4gdGhpcyB2ZXJzaW9uIG9mIHBva2VyLCBlYWNoIHBsYXllciBpcyBhIGNhcmQgcGxheWluZyBkb2cuIFRoZXkgY2FuIHBsYWNlIGJldHMgYW5kIHBsYXkgY2FyZHMuIApJIG1ha2UgZGVjaXNpb25zIGJhc2VkIG9uIHdoYXQgaXMgYmVzdCBmb3IgbXkgaHVzYmFuZCBhbmQgSS4gCklzIGJlY29taW5nIGEgcHJvZmVzc2lvbmFsIHNvY2NlciBwbGF5ZXIgYSByZWFsaXN0aWMgY2FyZWVyIGdvYWw/CllvdXIgcGFydG5lciBzaG91bGQgdGVsbCBoZXIgaGVhbHRoIGNhcmUgcHJvdmlkZXIgYWJvdXQgYW55IG1lZGljaW5lcyBzaGUgaXMgdGFraW5nLiAKQW5kIHRoZXJlIGFyZSBtYW55IHlvdW5nZXIgcGVvcGxlIHdobyBoYXZlIG1heWJlIG1ldCBhbmQgdGFsa2VkIHRvIEF6ZXJpcyBpbiB0aGVpciB0cmF2ZWxzIHRvIEdlb3JnaWEgb3IgUnVzc2lhLCBhbmQgYXMgYSByZXN1bHQgYXJlIGEgbG90IGxlc3MgaW5jbGluZWQgdG8gc2VlIHRoZW0gdGhhdCB3YXkuLiAKSW4gdGhlIGZ1dHVyZSwgdGhvdWdoLCBhIGhvbWVsZXNzIHBlcnNvbiBjYW4gY2FsbCBhIG1pZGRsZSBjbGFzcyBwZXJzb24gbGlrZSBteXNlbGYganVzdCBhIGJpdGNoLiBUaGF0IGJlY2F1c2UgdGhlIHJpY2ggd2lsbCBsb29rIHJlYWxseSBkaWZmZXJlbnQgdGhhbiB1cyBvcmRpbmFyeSBtb3J0YWxzLiAKU2FsYXJ5IENvbnNpZGVyYXRpb25zT24gdGhlIHBsdXMgc2lkZSwgcGh5c2ljYWwgdGhlcmFwaXN0cyBlYXJuIGFuIGF0dHJhY3RpdmUgbWVkaWFuIHNhbGFyeSBvZiAkODYsODUwIHBlciB5ZWFyLCBhcyByZXBvcnRlZCBieSB0aGUgQnVyZWF1IG9mIExhYm9yIFN0YXRpc3RpY3MgaW4gMjAxNy4gSG93ZXZlciwgeW91IG1heSBoYXZlIHRvIGxpdmUgb24gYSB0aWdodCBidWRnZXQgd2hpbGUgcGF5aW5nIG9mZiBzdHVkZW50IGxvYW5zLiBUaGUgYXZlcmFnZSBQVCBzdHVkZW50IGdyYWR1YXRlcyB3aXRoIG92ZXIgJDgzLDAwMCBpbiBsb2FucywgYWNjb3JkaW5nIHRvIHRoZSBBbWVyaWNhbiBQaHlzaWNhbCBUaGVyYXB5IEFzc29jaWF0aW9uIGluIDIwMTguIEl0IG1heSBiZSBtb3JlIGFkdmFudGFnZW91cyB0byBwdXJzdWUgaGVhbHRoIGNhcmVlcnMgdGhhdCBwYXkgd2VsbCBidXQgcmVxdWlyZSBsZXNzIHNjaG9vbGluZy4gRm9yIGluc3RhbmNlLCByYWRpYXRpb24gdGhlcmFwaXN0cyB3aXRoIGFuIGFzc29jaWF0ZSBkZWdyZWUgbWFrZSBhIG1lZGlhbiB3YWdlIG9mICQ4MCw1NzAgYW5kIHBoeXNpY2lhbnMgYXNzaXN0YW50cyB3aXRoIGEgbWFzdGVyJ3MgZGVncmVlIGVhcm4gJDEwNCw4NjAuClNoZSBjdXQgYSBuZXJ2ZSwgYW4gYWN0dWFsIG5lcnZlLgpUaGVuIHRoZSBSdXNzaWFucyB0cmllZCB0byBoZWxwIGJvb3N0IGhpcyBjYW1wYWlnbiwgeWV0IGhlIGtlcHQgcXVpZXQuIApDIGxlIGNoaWZmcmUgcXVlIEd1eSBMYWxpYmVydCBsIGVuIHRvdXRlIGZpbiBkIExhIHNvbW1lIHF1IGEgaW52ZXN0aWUgZGFucyBzZXMgbm91dmVhdXggcHJvamV0cy4gCkMnZXN0IHVuIGxlY3RldXIgcXVpIHZpZW50IGRlIG0nZW4gaW5mb3JtZXIgZW4gaW5zaXN0YW50IHN1ciBsZSBwcml4IGZhcmFtaW5ldXggZGUgc29uIG11bHRpdml0YW1pbmVzLiBDZWxhIGRpdCBsYSBjaG9zZSBuZSB2YSBwYXMgbSdlbXBjaGVyIGRlIGRvcm1pci4gSmUgdmllbnMgZGUgamV0ZXIgYXUgZ3IgZHUgdmVudCA4IG5vdGVzLCBlbiB2b2ljaSBkb25jIHVuZSA5bWUuQ290IGR1IG11bHRpdml0YW1pbmVzLCBjJ2VzdCAxMjEgcGFyIG1vaXMgc29pdCBwcnMgZGUgMTUwMCBwYXIgYW4gIUR1IGphbWFpcyB2dSBxdWFuZCBsZSBMaWZlIEV4dGVuc2lvbiBNaXggVGFibGV0cyAobGEgcmZyZW5jZSkgYXV0cmVtZW50IHBsdXMgcmljaGUsIHBsdXMgZGl2ZXJzaWZpIGV0IG5ldHRlbWVudCBtaWV1eCBkb3Mgc2UgdG91Y2hlICBtb2lucyBkZSA1MCBjZSBxdWkgbidlc3QgZGogcGFzIGZyYW5jaGVtZW50IGRvbm4uSmUgbmUgc3VpcyBwYXMgdG9tYiBzdXIgbGUgY3VsIGNhciBqJ3RhaXMgYmllbiBhc3Npcy4gClRoZXkgaGF2ZSBhbG90IG9mIGZvbGxvd2Vycy4uIApUaGluZyB3aXRoIG1lIGFuZCBNYWRvbm5hLCBmb3IgZXhhbXBsZSwgaXMgdGhhdCBJIGFkbWlyZWQgaGVyIGFsd2F5cyBhbmQgSSBzdGlsbCBhZG1pcmUgaGVyIG5vIG1hdHRlciB3aGF0IHNoZSBtaWdodCB0aGluayBvZiBtZSwgc2hlIGV4cGxhaW5zLiBzaGUgc3RpbGwgaGFyYm91cnMgaHVydCBmZWVsaW5ncyBvdmVyIHRoZSBpbmNpZGVudCwgdGhlIHlvdW5nZXIgc2luZ2VyIHByYWlzZWQgTWFkb25uYSwgNTksIGZvciB0aGUgcm91c2luZyBzcGVlY2ggc2hlIGdhdmUgcHJvbW90aW5nIGZlbWFsZSBlbXBvd2VybWVudCBhdCBsYXN0IERlY2VtYmVyIEJpbGxib2FyZCBXb21lbiBpbiBNdXNpYyBBd2FyZHMuCkJ1c2luZXNzIHRvIGJ1c2luZXNzIHRyYW5zYWN0aW9ucyBvZnRlbiB1c2UgcHVyY2hhc2Ugb3JkZXJzLiAKSSB0aGluayB0aGV5IG1lYW4gdGhpcy4gUHJhZ21hdGljYWxseSwgeW91IG5lZWQgdG8gZ2l2ZSBzb21lIHJlc3BvbnNlIHRvIHRoZSByZWNydWl0ZXIgdG8gZGlzc3VhZGUgdGhlaXIgZmVhcnMgYWJvdXQgeW91IGhhdmluZyB0aGUgZ2FwIGJlY2F1c2UgeW91IGhhZCBhIGpvYiB0aGF0IHlvdSBnb3QgZmlyZWQgZnJvbSBvciBzb21ldGhpbmcgYW5kIGFyZSBsZWF2aW5nIG9mZiB5b3VyIHJlc3VtZSwgb3IgYXJlIGEgc3VicGFyIGNhbmRpZGF0ZSB3aG8gY291bGRuIGZpbmQgYSBqb2IuIApVbml0ZWQgd2lsbCBob3N0IGFuIEhpc3RvcmljYWwgV2Fsa2luZyBUb3VyIG9mIEdhbHdheSBjaXR5IG9uIFNhdHVyZGF5ICggSnVseSAyICksIGRlcGFydGluZyBUaGUgU3BhbmlzaCBBcmNoIGF0IDIuMzBwbS4gRm9yIGZ1cnRoZXIgZGV0YWlscyBjb250YWN0IFJvbmFuIENvbGVtYW4gMDg3ICA2OTcyODIzLgpJIGxvdmUgcGxheWluZyA3IENhcmQgU3R1ZC4gClRoYXRtb20zOTcgdQpTaGUgc2FpZCBkdXJpbmcgdGhlIGludGVydmlld3MsIHdpbm5pbmcgd2FzIG9mdGVuIGRlc2NyaWJlZCBhcyBhIGNlcnRhaW50eS4gCkkgaGF2ZSBlbm91Z2ggZmFjaWFsIGhhaXIgdGhhdCBJIG5lZWQgdG8gc2hhdmUsIGJ1dCBJIGJsb25kLCBzbyBub2JvZHkgY2FuIHNlZSBpdCBpZiB0aGV5IG5vdCBsb29raW5nIGZvciBpdC4gVGhlIGZpcnN0IGNoYW5nZSB0aGF0IEkgbm90aWNlZCBpcyB0aGF0IG15IGJvb2JzIHNvcnQgb2YuIERlZmxhdGVkLiAKVHJvdWJsZSB3aXRoIHRpbWUgdHJhdmVsIGlzIHRoYXQgb25jZSB5b3UgZ28gYmFjayBhbmQgYWx0ZXIgc29tZXRoaW5nIHlvdSBuZXZlciBoYWQgYSByZWFzb24gdG8gZ28gYmFjayBpbiB0aGUgZmlyc3QgcGxhY2Ugd2hpY2ggY2F1c2VzIGEgcGFyYWRveCBsb29wIG9mIHlvdSBnb2luZyBiYWNrIGFuZCBhbHRlcmluZyB0aGUgcGFzdCwgY2F1c2luZyB5b3Vyc2VsZiB0byBuZXZlciBtYWtlIHRoZSB0aW1lIG1hY2hpbmUgaW4gdGhlIGZ1dHVyZSB3aGljaCBpbiB0dXJuIGNhdXNlcyB0aGUgZXZlbnQgdG8gaGFwcGVuIGFuZCB0aGVuIHRoZSBsb29wIHJlc3RhcnRzLiBPbmx5IHdheSBhcm91bmQgaXQgaXMgdG8gaGF2ZSB3aGF0ZXZlciB5b3UgY2hhbmdlIGJlIGNvbXBsZXRlbHkgdW5yZWxhdGVkIHRvIHRoZSByZWFzb24geW91IGludmVudGVkIHRoZSB0aW1lIG1hY2hpbmUgaW4gdGhlIGZpcnN0IHBsYWNlLCBhcyBpbiBub3QgY29tcGxldGUgeW91ciBhY3R1YWwgbWlzc2lvbiBiZWNhdXNlIGNvbXBsZXRpbmcgeW91ciBtaXNzaW9uIGNhdXNlcyBhIHBhcmFkb3ggd2hlcmUgeW91IG5ldmVyIG1ha2UgdGhlIHRpbWUgbWFjaGluZQpBcyBhIFJlaWtpIE1hc3RlciB0ZWFjaGVyIHNoZSBoYXMgdHJhaW5lZCBtYW55IHN0dWRlbnRzIGluIHRoaXMgYW5jaWVudCBoZWFsaW5nIGFuZCBoYXMgZXN0YWJsaXNoZWQgaGVyc2VsZiBpbiB0aGUgaGVhbGluZyBjb21tdW5pdHkgYXMgYSBtZW50b3IgZm9yIG1hbnkuIApUaGUgc2FtZSBkYXkgaGUgd2FzIGhvc3BpdGFsaXplZCwgRm94IFRWIGFubm91bmNlZCB0aGF0IGl0IHdvdWxkIGJlIHJ1bm5pbmcgYSBzaXggZXBpc29kZSByZXR1cm4gb2YgIjkwMjEwIiB0aGF0IGZlYXR1cmVzIG1vc3Qgb2YgdGhlIG9yaWdpbmFsIGNhc3QsIGJ1dCBQZXJyeSB3YXMgbm90IGFtb25nIHRob3NlIGFubm91bmNlZC4KTXkgZnJpZW5kIHdyb3RlICJWb3JwYWxnbG9ycCwgaXMgdGhhdCB5b3U/IiBhbmQgSSBoYWQgdG8gYWRtaXQgSSB3YXMgY29uZnVzZWQuIEkgaGFkIHBlb3BsZSBzYXkgc29tZW9uZSBsb29rcyBsaWtlIG1lLCBidXQgdGhlbiB0aGV5IGRvbiB0byBtZS4gCkFnZW5jeSBGYW1pbHkgVHJlZXMgMjAxOCwgYSBkYXRhYmFzZSBvZiB0aGUgd29ybGQncyAyNSBsYXJnZXN0IGFnZW5jeSBjb21wYW5pZXMgd2l0aCBwcm9maWxlcywgYWdlbmN5IGhvbGRpbmdzLCBmaW5hbmNpYWwgZmFjdHMgYW5kIGxpbmtzIHRvIHJlbGF0ZWQgY29udGVudC4KQ2VsdWkgY2kgc2UgZG9pdCBkZSByZXNwZWN0ZXIgbGVzIHNvaW5zIHF1aSBsdWkgc29udCBwcm9wb3NzLiAKVGhlIGNhciBzcGVlZHMgb2ZmIGFuZCBLYXRpZSBzaGFrZXMgaGVyIGhlYWQuIFNoZSB3YXRjaGVzIGFzIHRoZSByYWluIHNsb3dzIGEgYml0IGFuZCBoaXRzIHRoZSBzaWRld2Fsay4gU2hlIGxvb2tzIGF0IHRoZSBwdWRkbGVzIGFuZCB0aGlua3MgYWJvdXQganVtcGluZyBpbiB0aGVtIGxpa2Ugc2hlIGRpZCB3aGVuIHNoZSB3YXMgZWlnaHQuIApXYW50IHRvIGJldCBoZSdzIGJhY2sgaW4gdGhlIGxpbmV1cCBieSBOb3YuIDk/IExTVSBoZWFkcyB0byBNaXNzaXNzaXBwaSBTdGF0ZSwgd2hpY2ggaXMga25vd24gdG8gcGxheSBkZWZlbnNlIG9jY2FzaW9uYWxseSwgYW5kIHRoaXMgbWlnaHQgYWZmZWN0IHRoZSBvdXRjb21lLCBidXQgbm90IHJlYWxseTsgS2VudHVja3kgdHJhdmVscyB0byBTb3V0aCBDYXJvbGluYSwgd2hpY2ggaGFzIGFubm91bmNlZCB0aGF0IHNob3VsZGVyIGluanVyZWQgUUIgQ29ubm9yIFNoYXcgd2lsbCBzdGFydCBhbmQgcGxheSBzb21lLCBwcm9iYWJseSBub3QgdG9vIG11Y2ggYmVjYXVzZSwgYWZ0ZXIgYWxsICBpdCdzIEtlbnR1Y2t5Li4gClJvbmFsZG8gaXMgYSBrZWVuIHBsYXllciBhbmQgc3Bva2VzbWFuIGZvciBhbiBvbmxpbmUgcG9rZXIgZmlybSwgd2hpbGUgTWFuY2hlc3RlciBDaXR5J3MgR2FicmllbCBKZXN1cyBhbmQgZm9ybWVyIFBhcmlzIFN0IEdlcm1haW4gc3RyaWtlciBOZW5lIGFsc28gY29tcGV0ZWQgaW4gQnJhemlsaWFuIFNlcmllcyBvZiBQb2tlciBjb21wZXRpdGlvbnMgdGhpcyB3ZWVrLCBhIHNwb2tlc21hbiB0b2xkIFJldXRlcnMuIFJlcHVibGljYXRpb24gb3IgcmVkaXN0cmlidXRpb24gb2YgUmV1dGVycyBjb250ZW50LCBpbmNsdWRpbmcgYnkgZnJhbWluZyBvciBzaW1pbGFyIG1lYW5zLCBpcyBleHByZXNzbHkgcHJvaGliaXRlZCB3aXRob3V0IHRoZSBwcmlvciB3cml0dGVuIGNvbnNlbnQgb2YgUmV1dGVycy4gUmV1dGVycyBzaGFsbCBub3QgYmUgbGlhYmxlIGZvciBhbnkgZXJyb3JzIG9yIGRlbGF5cyBpbiB0aGUgY29udGVudCwgb3IgZm9yIGFueSBhY3Rpb25zIHRha2VuIGluIHJlbGlhbmNlIHRoZXJlb24uLiAKV2UgaW4gdGhlIHBvbGl0aWNhbCBqb3VybmFsaXNtIGJ1c2luZXNzIGFyZSBub3Qgc28gbHVja3kuIEJ1dCB3ZSBjYW4gdGFrZSBhIGdhbmRlciBhdCBzb21lIG9mIHRoZSBkeW5hbWljcyBhdCBwbGF5LiBBZnRlciB0aGUganVtcCBpcyBteSBhdHRlbXB0LCB3aGljaCBpcyBsaWtlbHkgdG8gcmVtYWluIGludGVyZXN0aW5nIGZvciBhbiBob3VyIG9yIHR3bywgdW50aWwgZXZlbnRzIHVwZW5kIGV2ZXJ5dGhpbmcgYWdhaW4uIApUaGVyZSBhcmUgb3RoZXIgYXZlbnVlcyBvZiB0aGUgbmV0IHRoYXQgbWF5IGJlIHB1cnN1ZWQgdG8gZmluZCB0aG9zZSBzZXJ2aWNlcywgYnV0IHRoaXMgc3ViIGlzIG5vdCB0aGUgcGxhY2UgZm9yIHRoYXQuIEdlbnVpbmUgcXVlc3Rpb25zIHNlZWtpbmcgYWR2aWNlIG9uIHNhZmUgc3BhY2VzIGFuZCBwcmFjdGljZXMgdG8gYmUgdXRpbGl6ZWQgd2lsbCBiZSBhbGxvd2VkLiAKNCkgV2hlbiBwb3N0aW5nIGhhbmQgaGlzdG9yaWVzLCBwbGVhc2UgdXNlIHRoZSBwcm9wZXIgZm9ybWF0IGxvY2F0ZWQgaGVyZS4gVGhpcyBpcyByZXF1aXJlZCBhcyBpdCBtYWtlcyBpdCBtdWNoIGVhc2llciB0byByZWFkIHlvdXIgcG9zdCBhbmQgdW5kZXJzdGFuZCB5b3VyIHNpdHVhdGlvbiwgd2hpY2ggd2lsbCBoZWxwIGdldCB5b3UgYmV0dGVyIGZlZWRiYWNrLgpIZXIgaW5mbHVlbmNlIGluIHRoZSBVUyBvbiB0aGUgbGVmdCBjYW5ub3QgYmUgdW5kZXJzdGF0ZWQuIFJlZ2FyZGxlc3Mgb2YgaWYgeW91IGFncmVlIHdpdGggaGVyIHBvc2l0aW9uIG9yIG5vdCwgc2hlIHdhcyBodWdlbHkgaW5mbHVlbnRpYWwgYW5kIGlmIHlvdSByZWFkIGNvbW11bmlzdCB0aGVvcnksIEVtbWEgaXMgYSBncmVhdCBjb21wYW5pb24gdGhpbmtlciB3aG8gd2FzIGNvbXJhZGVseSBhbmQgYWxzbyBjcml0aWNhbCwgdWx0aW1hdGVseSB3YW50aW5nIG1vc3QgaWYgbm90IGFsbCB0aGUgc2FtZSBnb2FscyBhcyBzb2NpYWxpc3RzIGFuZCBjb21tdW5pc3RzIG9mIHRoZSB0aW1lLiBIZXIgYWNjb3VudCBvZiBtZWV0aW5nIExlbmluIGFuZCBiZWluZyBjaGFzZWQgb3V0IG9mIFJ1c3NpYSAoZGVzcGl0ZSBiZWluZyBleGlsZWQgZnJvbSB0aGUgVVNBIGZvciBoZXIgc3BlZWNoZXMsIGFuZCBiZWluZyBSdXNzaWFuKSBzaGUgYmFzaWNhbGx5IGxpdmVkIGFzIGFuIGFuYXJjaGEgZmVtaW5pc3QgZHVyaW5nIHRoZSBtb3N0IGluY3JlZGlibGUgdGltZSBvZiBsZWZ0aXN0IGluc3VyZ2VuY3kuIApTZWNvbmQgSSBjYW1lIGZyb20gYSBmYW1pbHkgd2l0aCBhIGh1Z2UgYWdlIGdhcCBiZXR3ZWVuIGJhdGNoZXMgb2Yga2lkcy4gSSBhbSB0aGUgb2xkZXN0IG9mIHRoZSBzZWNvbmQgYmF0Y2ggKDE2IHllYXJzIGZyb20gZmlyc3QgdG8gbGFzdCBidXQgMTAgeWVhcnMgYmV0d2VlbiBtZSBhbmQgdGhlIG5leHQgb2xkZXN0LCA1IGtpZHMgdG90YWwpIFdlIExPVkVEIG91ciBiaWcgc2lzdGVycyB3aGVuIHdlIHdlcmUgbGl0dGxlLiBUaGV5IHdlcmUgc28gZnVuIGFuZCBjb29sISBUaGVuIHRocm91Z2ggbWlkZGxlIGFuZCBoaWdoIHNjaG9vbCB3ZSBkcmlmdGVkIGEgYml0LiAKVGhhbmsgeW91IGZvciB5b3VyIGludGVyZXN0IGluIGluZyBhdCBVQ0xBIEJydWluIERheSBmb3IgYWRtaXR0ZWQgdHJhbnNmZXJzISBXZSBhbnRpY2lwYXRlIGFwcHJveGltYXRlbHkgMTAsMDAwIGFkbWl0dGVkIHRyYW5zZmVyIHN0dWRlbnRzIGFuZCB0aGVpciBndWVzdHMgd2lsbCB2aXNpdCB0aGUgY2FtcHVzLCBhbmQgeW91ciBoZWxwIGlzIHZpdGFsIHRvIG1ha2luZyB0aGlzIGRheSBhIHN1Y2Nlc3MuIApJdCB3ZW50IG91dCBvdmVyIHRoZSBwb2xpY2UgZnJlcXVlbmN5LiAKQnV0IG5vIHRvbyBtYW55IHBlb3BsZSB0aGVyZS4gSW5kaWFuIGZvb2QgY2FuIGJlIGZvdW5kIGluIEthdGEgQmVhY2ggcmVzdGF1cmFudHMuMCB2b3Rlc05vIHRpbWUgYXQgYWxsLiBJZiB5b3UgYXNrIHRoZSBwZW9wbGUgaW4gdGhlIGxvYmJ5IG9mIEthdGF0aGFuaSB0aGV5IHdpbGwgZ2l2ZSB5b3UgYSBidWdneSByaWRlIG92ZXIgdGhlcmUuIApNYWtlIHN1cmUgeW91IGZvbGxvdyBhbGwgdGhlIHJlcXVpcmVtZW50cyB0aGF0IHBlcnNvbiBoYXMuIApPbiBhIGh1bWFuLiAKSSBwdWxsIG92ZXIgbXkgbGFwdG9wLCBnYXNwaW5nIGFzIG15IHRpbWUgc2xvd2x5IGRyYXdzIHRvIGFuIGVuZC4gVGhpcyBvbmUgcHV6emxlLCB3aGljaCBoYXMgaGF1bnRlZCBjcnlwdG9ncmFwaGVycyBhbmQgbGluZ3Vpc3RpY3MgZXhwZXJ0cyBmcm9tIGFyb3VuZCB0aGUgZ2xvYmUgZm9yIGdlbmVyYXRpb25zLCBoYXMgYWxzbyBlbHVkZWQgbWUuIEFzIG15IGhlYXJ0IHJhdGUgZGltcywgSSByaWdodCBjbGljayBvbiB0aGlzIG1lc3NhZ2UsIGEgYmFuZSB0byBjb2RlIGJyZWFrZXJzIGZvciBjZW50dXJpZXMuIApZb3VyIHNpbXBseSBtZWFucyB0aGUgdGhlbWUgeW91IHNldHRsZSBvbiBzaG91bGQgb3duIHNvbWV0aGluZyBlYWNoIHJlYWRlcnMgYXNwaXJlIHRvIGhhdmUuIApZb3UncmUgYWxtb3N0IGNlcnRhaW5seSBmYW1pbGlhciB3aXRoIHNldHMgb2YgMTAwIFBsYXN0aWMgUGxheWluZyBDYXJkcy4gVGhlc2UgYXJlIHRoZSB0eXBlcyBvZiBjYXJkcyB3ZSBzZWUgZGF5IGluIGFuZCBkYXkgb3V0IGFyb3VuZCByZXRhaWwgc3RvcmVzIGFuZCBldmVuIGdhcyBzdGF0aW9ucy4gWW91IGNhbiBmaW5kIGJyYW5kIG5hbWVzIGxpa2UgQmljeWNsZSwgUm95YWwsIGFuZCB2YXJpb3VzIG90aGVycyB0aGF0IG1ha2UgZ2FtZSB0aW1lIHRvbnMgb2YgZnVuLiAKIiBZb3UgY2xhaW0gdG8gYmUgc3VwZXIgc21hcnQgLCBlZHVjYXRlZCB3aXRoIGEgc3VjY2Vzc2Z1bCBidXNpbmVzcy4gSSBkb24gc2VlIGhvdyBhbnlvbmUgd2l0aCBoYWxmIGEgYnJhaW4gdGhhdCBkb2VzIHRoaXMgd2lsbCBtYXNzaXZlbHkgY2hhc2UgbG9zc2VzIGFuZCB0YWtlIHNob3RzIGVuZGxlc3NseS4iIEFsc28gYW4gaW5zdWx0LgpUaGlzIHBhcnQgaXMgYWN0dWFsbHkgcGFydGx5IHJvb3RlZCBpbiBzY2llbmNlICAgc3Blcm0gY2FycnlpbmcgdGhlIFkgY2hyb21vc29tZSBhcmUgc3BlZWRpZXIsIHdoaWxlIHNwZXJtIGNhcnJ5aW5nIHRoZSBYIGNocm9tb3NvbWUgYXJlIHNsb3dlciBidXQgbW9yZSBoYXJkeSBhbmQgY2FuIHN1cnZpdmUgbG9uZ2VyLiBUaGVyZWZvcmUsIGlmIHRoZXJlIGEgc2hvcnRlciBkaXN0YW5jZSBmb3IgdGhlIHNwZXJtIHRvIHRyYXZlbCB0byB0aGUgZWdnLCB0aGUgbW9yZSBsaWtlbHkgdGhhdCBhIFkgY2hyb21vc29tZSB3aWxsIHN1cnZpdmUgYW5kIGJlYXQgYW4gWCBjaHJvbW9zb21lIHRvIHRoZSBlZ2cuIE5vdywgaG93IG11Y2ggbW9yZSBsaWtlbHkgaXMgcGFydCBvZiB0aGUgb2xkIHdpdmVzIHRhbGUsIGJ1dCB0aGF0IHdoZXJlIHRoYXQgY29tZXMgZnJvbSwgYXQgbGVhc3QuIDopClRvdXQgbGUgbW9uZGUsIGVuIHJldmFuY2hlLCB0cm91dmVyYSBsZSBtb3llbiBkZSBtZXR0cmUgZHUgcG9pbCAgZ3JhdHRlciBkYW5zIGxlcyBjb2xzIGRlIEZpbGxvbiBsZSBib3VyZ2VvaXMgb3UgTGUgUGVuIGxhIEZhc2Npc3RlLi4gCkFsd2F5cyBwcm90ZWN0IHlvdXIgaGFuZCAocHV0IGEgY2hpcCBvbiB5b3VyIGhvbGUgY2FyZHMpLiAKSSB3YWxrIGludG8gdGhlIHBhdGllbnQgcm9vbSwgYW5kIEknbSBpbW1lZGlhdGVseSBncmVldGVkIGJ5IGEgZGlzZ3VzdGluZyByb3R0aW5nIGZsZXNoIHNtZWxsLiAKSSdtIG5vdCBpbnNpc3RpbmcgYW55dGhpbmcgbWFuLiBBbGwgSSdtIHNheWluZyBpcyByYWNpc20gaW4gZ2VuZXJhbCBpcyBub3Qgb25seSB3cm9uZywgYnV0IGFubm95aW5nIGJlY2F1c2UgaW4gdG9kYXkncyB3b3JsZCB3ZSBhcmUgZGVjaWRpbmcgd2hvIGlzIGFsbG93ZWQgdG8gYmUgcmFjaXN0IGFuZCB3aG8gaXNuJ3QuIExpa2UgSSBzYWlkIGJlZm9yZSB0aGUgZGl2aWRlIGJldHdlZW4gYmxhY2tzIGFuZCB3aGl0ZXMgaXMganVzdCBnb25uYSBrZWVwIGdldHRpbmcgd29yc2UgdW50aWwgd2Ugc3RvcCBzYXlpbmcgcmFjaXN0IHNoaXQgdG93YXJkcyBvbmUgYW5vdGhlci4gV2UncmUgZ29ubmEgcG9pbnQgZmluZ2VycyBhdCBlYWNoIG90aGVyIGZvciBiZWluZyByYWNpc3QgdW50aWwgYSBjb21ldCBjb21lcyBhbmQgd2lwZXMgYWxsIG9mIG91ciBleGlzdGVuY2Ugb2ZmIHRoZSBmYWNlIG9mIHRoZSBwbGFuZXQuIFRoZW4gbWF5YmUgd2UgY2FuIHN0YXJ0IG92ZXIgd2l0aCBhIGNsZWFuIHNsYXRlLgoiWWV0IE1CQXMsIHdpdGggdGhlaXIgYW5hbHl0aWNhbCBmb2N1cywgYWx3YXlzIHRyeSB0byBmaW5kIHRoZSAncmlnaHQnIGFuc3dlciAuIEV4ZWN1dGl2ZXMgYW5kIGRlYW5zIHRvbGQgdXMgdGhhdCBNQkFzIG5lZWQgdG8gZGV2ZWxvcCBjdWx0dXJhbCBpbnRlbGxpZ2VuY2UsIHNwZWNpZmljYWxseSBhIGJldHRlciB1bmRlcnN0YW5kaW5nIG9mIHdoaWNoIHByYWN0aWNlcywgc3RyYXRlZ2llcyBhbmQgYmVoYXZpb3VycyBhcmUgdW5pdmVyc2FsIGFuZCB3aGljaCBhcmUgY29udGluZ2VudC4iCk9uZSBwb2ludCBvZiB0aGlzIGlzIHRvIGluZm9ybSB0aGVtIGhvdyB0byBnZXQgb3V0IG9mIGZvcmNlZCBwcm9zdGl0dXRpb24uIER1ZSB0byB0aGUgd2F5IHByb3N0aXR1dGlvbiB3b3JrcyBhbmQgdGhlIGRpZmZpY3VsdHkgaW4gcG9saWNpbmcgd2hhdCBoYXBwZW5zLCB0aGVyZSBhcmUgbm8gcmVsaWFibGUgbnVtYmVycywgYnV0IGl0IGlzIGEgY29uc2lkZXJhYmxlIHByb2JsZW0uV29tZW4gZnJvbSBFYXN0ZXJuIEV1cm9wZSBhcmUgaW1wb3J0ZWQgdW5kZXIgZmFsc2UgcHJldGV4dHMgKGdldHRpbmcgYSBqb2IgYXMgYW4gYXUgcGFpciBldGMuKSwgaXNvbGF0ZWQsIGhhdmUgdGhlaXIgcGFzc3BvcnRzIHRha2VuLCBzb21ldGltZXMgdGhlaXIgZmFtaWxpZXMgYXQgaG9tZSBhcmUgdGhyZWF0ZW5lZC4gCk5vdyBLb3JlYSB3aWxsIG5lZWQgdG8gYWRhcHQgaW4gb3JkZXIgdG8gY29udGludWUgdG8gYmUgc3VjY2Vzc2Z1bC4gQWRhcHRpbmcgdGhlIG1pZGRsZSBjbGFzcyBvdXQgb2YgZXhpc3RlbmNlLCBob3dldmVyLCBpcyBub3QgdGhlIGFuc3dlci5UaGlzIGFydGljbGUgaXMgYSBwcmV0dHkgY2xlYXIgaGl0IHBpZWNlIGFnYWluc3QgdW5pb25zIChhbmQgaXQgc2VlbXMgdG8gaGF2ZSBkZWZpbml0ZWx5IHdvcmtlZCBvbiB5b3UpLiBHTSB3YXMgZG9vbWVkIHJlZ2FyZGxlc3Mgb2YgdGhlaXIgdW5pb25zIGl0IHdvdWxkbid0IGhhdmUgbWFkZSBhIGRpZmZlcmVuY2UgZWl0aGVyIHdheS4gCiJPSyBoZXJlJ3MgdGhlIGJhY2sgc3RvcnkgdG8gdGhlIHdob2xlIHBva2VyIG5pZ2h0IGRlYmFjbGUuIEJlZm9yZSB0aGUgcG9rZXIgcGFydHkgdG9vayBwbGFjZSwgSSBoYWQgYmVlbiBzdHJ1Z2dsaW5nIHdpdGggYnJvbmNoaXRpcyBhbmQgcG5ldW1vbmlhIGZvciB3ZWVrcywiIEtpbSB3cm90ZS4gIkkgdG9vayB0aGUgcGFpbiBtZWRpY2F0aW9uIGZyb20gTW9udHkgdGhpbmtpbmcgaXQgY2FuIGdldCBtZSB0aHJvdWdoIHRoZSBwYWluIEkgd2FzIGV4cGVyaWVuY2luZy4gTGl0dGxlIGRpZCBJIGtub3csIGl0IGp1c3QgbWFkZSBtZSBraW5kIG9mIG91dCBvZiBpdCEgQnV0IHNlcmlvdXNseSwgaWYgSSBrbmV3IHRoZSBtZWRpY2F0aW9uIHdhcyBnb2luZyB0byBhZmZlY3QgbWUgaW4gYSBuZWdhdGl2ZSB3YXksIEkgd291bGQgaGF2ZSBORVZFUiB0YWtlbiBpdC4gQ2FyZWxlc3MgZGVjaXNpb24gb24gbXkgcGFydCBsZWFybmVkISIKSGUgZG9lc24gbmVlZCB0byB0b3VjaCBvciBpbnRlcmFjdCB3aXRoIHRoZSBwYXRpZW50IGFzIGhlIGRpZG4gdG91Y2ggYW55IG9mIHRoZW0gZHVyaW5nIHRoaXMgdmlkZW8uIEkgc3VzcGVjdCB0aGV5IHdvbiBzZWUgc3VjaCBhIHByb2ZvdW5kIGVmZmVjdCB3aGVuIHRoZSBwYXRpZW50IGlzIG5vdCBpbmZsdWVuY2VkLi4gCkxpbWl0IG15IHNlYXJjaCB0byByL1R3b1hDaHJvbW9zb21lc3VzZSB0aGUgZm9sbG93aW5nIHNlYXJjaCBwYXJhbWV0ZXJzIHRvIG5hcnJvdyB5b3VyIHJlc3VsdHM6c2VlIHRoZSBzZWFyY2ggZmFxIGZvciBkZXRhaWxzLgpXb21lbiBhcmUgcmFpc2VkIHdpdGggdGhlIGlkZWEgdGhhdCB3ZSBjYW4ndCBiZSBkaXJlY3QsIGl0J3Mgbm90IHNlZW4gYXMgZmVtaW5pbmUuIApJJ3ZlIGNvbnNpZGVyZWQgbW92aW5nIGhvbWUgdG8gTm9ydGggRGFrb3RhLCBidXQgbXkgZmFtaWx5IGlzIGtpbmQgb2YgYSB0cmFpbiB3cmVjay4gSSd2ZSBhbHNvIGNvbnNpZGVyZWQgZ29pbmcgYmFjayB0byBOYXNodmlsbGUsIGEgY2l0eSBJIGxpdmVkIGluIGZvciA3IHllYXJzIHByaW9yIHRvIG1vdmluZyB0byBBdXN0aW4sIGJ1dCBpdCdzIHRoZSBjaXR5IHdoZXJlIHdlIG1ldCBhbmQgZmVsbCBpbiBsb3ZlIGFuZCBJIHRoaW5rIEknbGwgaGF0ZSBteSBsaWZlIGlmIEkgZ28gYmFjayB0aGVyZS4uIApJIHVuZGVyc3RhbmQgd2h5IG15IG1vbSBzY3JlYW1lZCBhdCB1cyBzbyBtdWNoIG5vdy4gCk5vIG9uZSBjYW4gZGVueSB0aGF0LiAKVGhhdCB3aGVuIEkga25ldyBoZSB3YXMgZG9uZSBncmlldmluZyBoaXMgb3duZXIgYW5kIHJlYWR5IHRvIGJlIGxpa2UsICJPa2F5LCBub3cgd2UgZmFtaWx5IGFuZCB0aGF0IG1lYW5zIHlvdSB0aHJvdyB0aGlzIGEgdGhvdXNhbmQgdGltZXMgb3IgaG9sZCBpdCB3aGlsZSBJIHRlYXIgdGhlIHN0dWZmaW5nIG91dC4gT2theSwgaHVtYW4/IgpIZSB3YXMgYSBtZW1iZXIgb2YgdGhlIEJyYW50Zm9yZCBPcHRpbWlzdCBDbHViLCB0aGUgRHJ1bSBhbmQgQnVnbGUgQ29ycCBCb2FyZCBvZiBEaXJlY3RvcnMgYW5kIGNvYWNoZWQgYmFzZWJhbGwgYW5kIGNodXJjaCBsZWFndWUgaG9ja2V5LiAKQSBsb3Qgb2YgcHJhY3RpY2UgaXMgbmVlZGVkIGluIGJvdGguIApJIHJhbWJsZSBvbjogaWYgeW91IHJlYWQgaXQsIHlvdSdsbCBmaW5kIG91dCB3aHkgdGhlcmUncyBhIGZyb2cgaW4gdGhhdCBvZmZpY2UgcGhvdG8uIApFcyBnaWJ0IGF1Y2ggbm9jaCBkZW4gZ3JvZW4gVW50ZXJzY2hpZWQsIGRhc3MgZGllIFJlcHVibGlrYW5lciBzbyBpZGVvbG9naXNjaCBhbiBTdGV1ZXJzZW5rdW5nZW4gZmVzdGhhbHRlbiwgZGFzcyBzaWUgU3RldWVyc2Vua3VuZ2VuIGltIEFuZ2VzaWNodCBlaW5lcyBtYXNzaXZlbiBIYXVzaGFsdHNkZWZpeml0IGZvcmRlcm4sIHdocmVuZCB3aXIgaGllciBpbiBEZXV0c2NobGFuZCBlaW5lbiBiZXJzY2h1c3MgaGFiZW4uCk9mZiBjaGlwIG1haW4gbWVtb3J5IGFsbG93cyB2ZXJ5IHNpZ25pZmljYW50IGNvc3Qgc2F2aW5ncywgYW5kIGFsbG93cyB0aGUgYW1vdW50IG9mIG1lbW9yeSB0byBiZSBhZGp1c3RlZCBmcmVlbHkuIFRoZXJlIGFyZSBnZW5lcmFsbHkgVFdPIHR5cGVzIG9mIG1lbW9yeSB0aGF0IGFyZSBsb2NhdGVkIG9uIGNoaXAsIGhvd2V2ZXIuIApJdCBhIGRheSBjZW50ZXJlZCBhcm91bmQgcHJvY2xhaW1pbmcgeW91ciBsb3ZlIGZvciBzb21lb25lIGluIGEgbGFyZ2VyIHRoYW4gdXN1YWwgd2F5LiAiTGFyZ2VyIHRoYW4gdXN1YWwiIGxvb2tzIGRpZmZlcmVudCBmb3IgZXZlcnkgcmVsYXRpb25zaGlwLCBkZXBlbmRpbmcgb24gYnVkZ2V0IGFuZCBzdHlsZSBvZiBlYWNoIHBlcnNvbi4uIApEYXBobmUgSGVybmFuZGV6J3MgUmVzZWFyY2ggb24gRm9vZCBJbnNlY3VyaXR5IGluIENvbGxlZ2UgU3R1ZGVudHMgV2lkZWx5IEZlYXR1cmVkIGluIE5ld3MgTWVkaWFUaGUgVW5pdmVyc2l0eSBvZiBIb3VzdG9uIDM4NzUgSG9sbWFuIFN0LiAKMzEsIHdoaWxlIGFuZCB0aGUgbW9zdCByZWNlbnQgaWxsbmVzcyBpbiBDYW5hZGEgd2FzIGVhcmx5IHRoaXMgbW9udGguLiAKSHlkcm9hc3BpcmF0b3IgdQpUeXBlcyBvdSBsZSBtYXJpYWdlIG15c3RpcXVlIHNlbG9uIENHIEpVTkcKVGhlIGJvcmRlciBza2lybWlzaGVzIGJlZ2FuIGxvbmcgYmVmb3JlIGFueW9uZSBlbHNlIGdvdCBpbnZvbHZlZCBubyBvbmUgdG9sZCB0aGVtIHRvIGRvIHRoYXQuIApEcmF1c3NlbiBFc3NlbgpDYW5hZGlhbiBvZmZpY2lhbHMgYXBwcm9hY2hpbmcgcm9tYWluZSBsZXR0dWNlIHdhcm5pbmcgZGlmZmVyZW50bHkgdGhhbiBVCkZ1cnRoZXIsIGhlIGhhZCBiZWVuIGNvbnNpZGVyZWQgYSBzdGFyIGdvYWxpZSwgYW5kIGF0IG9uZSB0aW1lIGRyZXcgaW50ZXJlc3QgZnJvbSBDb25uIFNteXRoZSwgdGhlbiBvd25lciBvZiB0aGUgTWFwbGUgTGVhZnMuIEFkZGluZyB0byBoaXMgbGlzdCBvZiBhY2NvbXBsaXNobWVudHMsIGl0IHdhcyByZXBvcnRlZCBEb3VnIHdhcyBhIGZhdm91cml0ZSB0byB3aW4gdGhlIDEwMCB5YXJkIGRhc2ggaW4gdGhlIExvbmRvbiAxOTQ4IE9seW1waWNzIGJ1dCBkaWQgbm90IHF1YWxpZnkgZHVlIHRvIGhpcyBzdGF0dXMgYXMgYSBwcm9mZXNzaW9uYWwgYXRobGV0ZS4gSGUgd2FzIGEgc3BvcnRzIGZhbmF0aWMgdGhyb3VnaCBhbmQgdGhyb3VnaCBmb2xsb3dpbmcgbW9zdCBzcG9ydHMgcmlnaHQgdW50aWwgdGhlIGVuZC4gCkZyYW5rbHksIEkgdGhpbmsgdGhhdCBhIGdyZWF0IGRlYWwgb2YgdGhpcyBhbnhpZXR5IHdpbGwgcmVzb2x2ZSwgb25jZSBzaGUgaXMgYWJsZSB0byByZXNvbHZlIGhlciBpbm5lciBmZWVsaW5ncy4gSSBhbSBzdXJlIHNoZSBsb3ZlcyB5b3UuIApNb3JuaW5nc0FyZUJldHRlciAgNSBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvCklsIG4gYSBwYXMgZGUgcGFuaXF1ZS4gSWwgc2FpdCBxdW9pIGZhaXJlLiBEIGNyIGRlIGxhIHZhbGV1ciBwb3VyIHByb3Qgc2EgcHJvcHJpIFB1aXMgYXR0ZW5kcmUgbGUgYm9uIG1vbWVudCBwb3VyIGFnaXIgZXQgcGVybWV0dHJlIGRlIHByIGxlcyBpbnZlc3Rpc3NlbWVudHMgZGUgTW9udHIgZHUgUXUgZXQgZHUgQ2FuYWRhLi4gCkkgd291bGQgYWRkICAgZ2V0IHBhc3QgcGFwZXJzIGFuZCB3b3JrIHRocm91Z2ggdGhlbS4gQXMgeW91IGZvdW5kIG91dCwga25vd2luZyB0aGUgbGF3IGlzIG5vdCB0aGUgc2FtZSBhcyBrbm93aW5nIGhvdyB0byBhcHBseSB0aGUgbGF3LiAKU2VvdWwgdG8gU3V3b24geW91IGNhbiBkbyBieSBLVFggKDMwIG1pbnV0ZXMpLgpEYXQgamUgImRlIG1hbiIgbW9ldCB6aWpuIGVuIHZlcmFudHdvb3JkZWxpamsgYmVudCB2b29yIGplIGZhbWlsaWUuIEVuIGRhdCBkaXQgZXIgdG90IGxlaWR0IGRhdCB6ZSB2b2VsZW4gYWxzb2YgemUgImJldGVyIiBtb2V0ZW4gemlqbiBkYW4gaHVuIHBhcnRuZXIuLiAKUngwMzMgIDUgcG9pbnRzICBzdWJtaXR0ZWQgMTIgZGF5cyBhZ28KTk1aOiBuaWdodG1hcmUgem9uZSBmYXJtaW5nIGlzIHZlcnkgYWZrIG9uY2UgeW91IGhhdmUgZG9uZSA1IG9mIHRoZSBxdWVzdHMgbmVlZGVkIHRvIGRvIGl0IGFuZCB5b3UgY2FuIHVzZSB0aGUgcG9pbnRzIG9uIGhlcmIgYm94ZXMgZGFpbHkgZm9yIG92ZXIgMTAwayBpbiBwcm9maXQKTW9zdCBvZiBhbGwgRGF2aWQgZW5qb3llZCBzcGVuZGluZyB0aW1lIHdpdGggaGlzIGZhbWlseS4gClNob3VsZCBJIHN0YXJ0IFBsYXlpbmcgUG9rZXIgRnVsbCBUaW1lIGluIFZlZ2FzCklmIHlvdSBoYXZlIHRyaWVkIHNvbWUgb2YgdGhlIGFib3ZlIHRpcHMgb24gaG93IHRvIGNhdGNoIGEgY2hlYXRpbmcgaHVzYmFuZCBhbmQgaGF2ZSBiZWVuIHVuc3VjY2Vzc2Z1bCwgdHJ5IHBsYXlpbmcgeW91ciBwb2tlciBmYWNlLiBQcmV0ZW5kIGxpa2UgeW91IGtub3cgc29tZXRoaW5nIGFuZCBnaXZlIGhpbSAyNCBob3VycyB0byBjb21lIGNsZWFuIG9yIGVsc2UuIApJIGtub3cgdGhhdCBhbiBpbnRlcm5ldCBzdHJhbmdlciB3b3JkcyBjYW5ub3QgcmVwbGFjZSB0aGUgbG92ZSBhbmQgc3VwcG9ydCB0aGF0IHlvdSBzaG91bGQgYmUgcmVjZWl2aW5nIGZyb20geW91ciBtb20gYnV0IEkgd2FudCB5b3UgdG8ga25vdyB0aGF0IEkgQU0gU08gUFJPVUQgT0YgWU9VISEgRXZlbiBpZiBpdCBkb2VzbiBmZWVsIGxpa2UgaXQsIGl0IHRha2VzIGluY3JlZGlibGUgc3RyZW5ndGggdG8gcmVjb2duaXplIHRoYXQgc2hlIGhhcyB0aGUgcHJvYmxlbSBhbmQgbm90IHlvdSwgdG8gcmVhY2ggb3V0IGZvciBzdXBwb3J0IGFuZCBhZHZpY2UgKGJlIGl0IGZyb20gdGhpcyBzdWIsIHlvdXIgdGhlcmFwaXN0LCBhbmQvb3Igb3RoZXJzKSBidXQgZnVydGhlcm1vcmUgICB3aGF0IHlvdSBkb2luZyBmb3IgdGhvc2UgcG9vciBjaGlsZHJlbi4gWW91IGFyZSBob25vcmluZyB0aGUgbW90aGVyIHRoZXkgc28gdHJhZ2ljYWxseSBsb3N0IGJ5IHRha2luZyB0aGVtIGluIGFuZCBsb3ZpbmcgdGhlbS4gClRoZSBjb25zZXF1ZW5jZXMgYXJlIHdheSBtb3JlIHNldmVyZSwgcG90ZW50aWFsbHksIHRoYW4gdGhlIHNodXRkb3duIG9mIGdvdmVybm1lbnQuIEF0IHRoZSBtb3N0IGV4dHJlbWUsIGl0IGNvdWxkIGxlYWQgdG8gZGVmYXVsdC4gQW5kIGlmIHlvdSBmaWd1cmUgdGhhdCB0aGUgbWFya2V0IGdvZXMgaW50byBhIHRpenp5IGF0IHRoZSBzdWdnZXN0aW9uIG9mLCBzYXksIEdyZWVjZSBkZWZhdWx0aW5nLCB0aGVuIHRoZSBpbXBhY3Qgb2YgdGhlIFVTIHNob3VsZCBiZSBlYXN5IHRvIGNvbXByZWhlbmQuClRoZXJlIGFyZSBkaWZmZXJlbnQgYXBwcm9hY2hlcyB0byBjbGFzc2lmeWluZyByZWxpZ2lvbiwgd2l0aCB0aGUgcmVjb2duaXRpb24gdGhhdCB0aGVyZSBhcmUgY3VsdHVyYWwgcGhlbm9tZW5hIChsaWtlIENvbmZ1Y2lhbmlzbSBvciBuYXRpb25hbGlzbSkgdGhhdCB3ZSBtaWdodCBhcmd1ZSBhYm91dC4gVGhlIGZhdm9yZWQgYXBwcm9hY2ggdG9kYXkgaXMgdG8gc2F5IHRoYXQgcmVsaWdpb25zIHRlbmQgdG8gc2hhcmUgYSBncm91cCBvZiBjaGFyYWN0ZXJpc3RpY3MsIGluY2x1ZGluZyBzb21lIHJlZmVyZW5jZSB0byBhIHRyYW5zY2VuZGVudCByZWFsaXR5IChiZXlvbmQgdGhlIG1hdGVyaWFsIHdvcmxkKSwgcHJhY3RpY2VzIGFuZCByaXR1YWxzIG9mIHdvcnNoaXAsIG1vcmFsIGNvZGVzLCBwbGFjaW5nIGltcG9ydGFuY2UgaW4gc2FjcmVkIG9iamVjdHMgYW5kIHBsYWNlcywgc2hhcmVkIHN0b3JpZXMsIGFuZCBzbyBvbi4gVGhlIGV4YW1wbGUgb2YgTE9UUiBzZWVtcyB0byBiZSBkZWZpbmluZyBhIHBvc3NpYmxlIHJlbGlnaW9uIGJhc2VkIG9uIGEgdGV4dCwgYnV0IHRoYXQgaXMgb25seSBvbmUgZGltZW5zaW9uIG9mIHdoYXQgd2UgdGVuZCB0byBjYWxsIHJlbGlnaW9uLiAKSW4gZmFjdCwgc29tZSBleHBlcnRzIGJlbGlldmUgdGhhdCBtYW55IG1lbiAgIGFuZCBwZXJoYXBzIGV2ZW4gbW9zdCBtZW4gICB3aG8gc2F5IHRoZXkgc3VmZmVyIGZyb20gUEUgaGF2ZSBjb21wbGV0ZWx5IG5vcm1hbCBsZXZlbHMgb2Ygc2V4dWFsIHN0YW1pbmEuLiAKRHVlIHRvIHRoZSBkZWNyZWFzZWQgcmVsYXRpdmUgY29udHJpYnV0aW9uIG9mIHRoZSBoaXAgYWRkdWN0b3JzIGluIGN5Y2xpbmcsIEkgYmVsaWV2ZSB0aGlzIGlzIGxlc3MgbGlrZWx5LiAKRW5hYmxlZCB1cyB0byBpbmNsdWRlIFNoYWtlciBzdHlsZSBjYWJpbmV0cnksIGJ1dCB3aXRoIGZld2VyIGdyb292ZXMgdG8gY2xlYW4sIGl0IG1lZXRzIHRoZWlyIGxvdyBtYWludGVuYW5jZSBkaXJlY3Rpb24sIHNheXMgSmVzdC4gVGhlIGRlc2lnbmVycyBhbHNvIHNlbGVjdGVkIGJydXNoZWQgbmlja2VsIGhhcmR3YXJlIGZvciBpdHMgdG9uZWQgZG93biBmaW5pc2ggYXMgd2VsbCBhcyB0aGUgbWV0YWwgYWJpbGl0eSB0byBoaWRlIGZpbmdlcm1hcmtzLiBPcmdhbml6ZXJzLCBzdWNoIGFzIGEgc3BpY2UgcHVsbG91dCBhbG9uZ3NpZGUgdGhlIHJhbmdlLCBjdXQgZG93biBvbiBjb3VudGVydG9wIGNsdXR0ZXIuV2hpbGUgdGhlIHZhdWx0ZWQgY2VpbGluZyBpbiB0aGUga2l0Y2hlbiBoZWxwcyBtYWtlIHRoZSBzcGFjZSBmZWVsIGFpcnkgYW5kIGxpZ2h0LCBpdCB0ZXN0ZWQgdGhlIHRlYW0gbWF0aCBza2lsbHMuIApJZiB5b3Ugd29ycmllZCBhYm91dCB0b28gbXVjaCBWaXRhbWluIEEsIGp1c3QgYXZvaWQgUG9sYXIgQmVhciBsaXZlciBmb3Igc3VyZSEgQSBmaXN0IHNpemUgY2h1bmsgaGFzIGFib3V0IDkgbWlsbGlvbiB1bml0cy4gClRoZSBMYXcgU29jaWV0eSBtdXN0IGJlIGluIGEgcG9zaXRpb24gdG8gZGV0ZXJtaW5lIHdoYXQsIGlmIGFueSwgYWN0aW9uIGlzIHJlcXVpcmVkIGJ5IGl0IGlmIGEgbGF3eWVyIGlzIGNoYXJnZWQgd2l0aCBhbiBvZmZlbmNlIGRlc2NyaWJlZCBpbiBCeSBMYXcgOCBhbmQgd2hhdCwgaWYgYW55LCBhY3Rpb24gaXMgcmVxdWlyZWQgaWYgdGhlIGxhd3llciBpcyBmb3VuZCBndWlsdHkuLiAKNiBkYXlzIGFnbyArIEJ5IFN0ZXZlbiBMaXR0LCBUaGUgUGxhaW4gRGVhbGVyQ2xldmVsYW5kIE11c2V1bSBvZiBBcnQgcmVjZWl2ZXMgJDMgbWlsbGlvbiB0byBlbmRvdyBBbWVyaWNhbiBhcnQgY3VyYXRvcidzIHBvc3QgQ2xldmVsYW5kIE11c2V1bSBvZiBBcnQgcmVjZWl2ZXMgJDMgbWlsbGlvbiB0byBlbmRvdyBBbWVyaWNhbiBhcnQgY3VyYXRvcidzIHBvc3QgRG9ub3JzIFdpbGxpYW0gYW5kIEFtYW5kYSBNYWRhciBnYXZlICQzIG1pbGxpb24gdG8gdGhlIENsZXZlbGFuZCBNdXNldW0gb2YgQXJ0IHRvIGVuZG93IHRoZSBBbWVyaWNhbiBhcnQgY3VyYXRvciBwb3NpdGlvbiBub3cgaGVsZCBieSBNYXJrIENvbGUuNiBkYXlzIGFnbyArIEJ5IFN0ZXZlbiBMaXR0LCBUaGUgUGxhaW4gRGVhbGVyTU9DQSBDbGV2ZWxhbmQgZ29lcyBmcmVlLCBsYXVuY2hlcyA1MHRoIGFubml2ZXJzYXJ5ICdPcGVuIEhvdXNlJyBwcm9ncmFtcyBNT0NBIENsZXZlbGFuZCBnb2VzIGZyZWUsIGxhdW5jaGVzIDUwdGggYW5uaXZlcnNhcnkgJ09wZW4gSG91c2UnIHByb2dyYW1zIFRoZSBNdXNldW0gb2YgQ29udGVtcG9yYXJ5IEFydCBDbGV2ZWxhbmQgd2lsbCBzdG9wIGNoYXJnaW5nIGFkbWlzc2lvbiBNYXJjaCAxNiBhcyBpdCBtYXJrcyBpdHMgNTB0aCBhbm5pdmVyc2FyeS42IGRheXMgYWdvICsgQnkgU3RldmVuIExpdHQsIFRoZSBQbGFpbiBEZWFsZXJBcmUgZnJvemVuIGVtYnJ5b3MgJ2xpdmluZyBwZXJzb25zJz8gQ291cGxlIGluIFVIIGZlcnRpbGl0eSBjYXNlIHNlZWtzIGFwcGVsbGF0ZSBjb3VydCBydWxpbmcgYmFzZWQgb24gbW9kZXJuIHNjaWVuY2UgQXJlIGZyb3plbiBlbWJyeW9zICdsaXZpbmcgcGVyc29ucyc/IENvdXBsZSBpbiBVSCBmZXJ0aWxpdHkgY2FzZSBzZWVrcyBhcHBlbGxhdGUgY291cnQgcnVsaW5nIGJhc2VkIG9uIG1vZGVybiBzY2llbmNlIEJydWNlIFRhdWJtYW4sIHRoZSBhdHRvcm5leSBmb3IgV2VuZHkgYW5kIFJpY2sgUGVubmltYW4gb2YgQnJvYWR2aWV3IEhlaWdodHMsIHdpbGwgZGVsaXZlciBvcmFsIGFyZ3VtZW50cyB0byB0aGUgOHRoIE9oaW8gRGlzdHJpY3QgQ291cnQgb2YgQXBwZWFscyBvbiBNYXJjaCAyMCwgaW4gd2hpY2ggaGUgcGxhbnMgdG8gcmVseSBoZWF2aWx5IG9uIGEgbGF3IHJldmlldyBhcnRpY2xlIHRoYXQgcHJlc2VudHMgYW4gdXBkYXRlZCBzdGF0ZSBvZiBlbWJyeW9uaWMgc2NpZW5jZSBhbmQgaG93IGl0IGFwcGxpZXMgdG8gY2FzZSBsYXcgaW4gcmVsYXRpb24gdG8gUm9lIHZzLiAKWWVzLCBnbHV0ZW4gaXMgYSByZWFsIHByb2JsZW0uCkkgcmVhbGx5IGFtIHNvcnJ5IHRoaXMgaXMgaGFwcGVuaW5nIHRvIHlvdSwgbm9ib2R5IGRlc2VydmVzIHRoYXQuCkluIE1URyBpdCBhbHdheXMgZmVsdCBsaWtlIDk1JSBvZiB0aGUgZ2FtZSB3YXMgcmVhbGx5IGRlY2sgYnVpbGRpbmcuIEFuZCB0byBiZSBzdXJlLCBNVEcgaXMgYnkgZmFyIHRoZSBkZWVwZXN0IGRlY2sgYnVpbGRpbmcgQ0NHL1RDRyBldmVyIGNyZWF0ZWQuIEV2ZW4gYmFjayBiZWZvcmUgYWxsIHRoZSBleHBhbnNpb25zLiAKQWx0aG91Z2ggaXQgd2FzIHRoZSBTdXByZW1lIENvdXJ0IGRlY2lzaW9uIGluIFRleGFzIHYuIExhd3JlbmNlIHRoYXQgb3ZlcnR1cm5lZCBzb2RvbXkgbGF3cyBuYXRpb25hbGx5LCBUZXhhcyBSZXB1YmxpY2FucyBhcHBhcmVudGx5IHRoaW5rIHRoZXkgY2FuIHZvdGUgdG8gaWdub3JlIFN1cHJlbWUgQ291cnQgcnVsaW5ncy4uIApIYWtvb25hbWF0YXRhOSB1CkhvZ2FuIGluZHVjdGVkIE9rZXJsdW5kIGludG8gV1dFIEhhbGwgb2YgRmFtZSBpbiAyMDA2LCBuYXR1cmFsbHkuIApSb3lhbCBGbHVzaDogVGhlIGhpZ2hlc3Qgb2YgdGhlIGhpZ2gsIGEgcm95YWwgZmx1c2ggaXMgd2hlbiB5b3UgaGF2ZSBhIHN0cmFpZ2h0IGZsdXNoIGNvbXByaXNlZCBvZiB0aGUgMTAsIEphY2ssIFF1ZWVuLCBLaW5nIGFuZCBBY2UgY2FyZHMuIE5vdGhpbmcgYmVhdHMgYSByb3lhbCBmbHVzaApBbnkgaWRlYSBob3cgdHJ1ZSB0aGlzIGlzPyBEb2VzIGZpbGluZyBmaXJzdCBnaXZlIHlvdSBhbnkgdXBwZXIgaGFuZCBpbiBob3cgdGhpbmdzIHBsYXkgb3V0PyBJIHN0aWxsIHJlYWxseSBsb3ZlIGhlciB3aGljaCBtYWtlcyB0aGlzIHNvIG11Y2ggaGFyZGVyIGFuZCBmZWVscyBsaWtlIGEgdGltaW5nIHRoaW5nLiAKSWYgeW91IGJldCBmbG9wcyBsaWtlIHRoYXQgd2hhdCBkb2VzIGl0IG1lYW4gd2hlbiB5b3UgY2hlY2s/IHlvdSBzaG91bGQgY2hlY2sgYWxsIGZsb3BzIGxpa2UgdGhhdCBvb3AuIHNhbWUgZ29lcyBmb3Igd2hlbiB5b3UgaGF2ZSBBQSBhbmQgdGhlIGJvYXJkIGlzIGxpa2UgNzMzLiBpdCBwcmV2ZW50cyB5b3UgZnJvbSBnZXR0aW5nIHJhaXNlZCBhbmQgcHV0IGluIHNoaXR0eSBzcG90cy4gdGhhdCB3YXkgd2hlbiB5b3UgYmV0IHR1cm4gYW5kIGhlIHJhaXNlcyB5b3UgY2FuIGNhbGwgY29tZm9ydGFibHkuIHRoZW4gb24gdGhlIHJpdmVyIGMvYyBhbmQgbm90IGdvIGJyb2tlLiBPciBmb2xkIGlmIHlvdSByZWFsbHkgdGhpbmsgaGUgaGFzIHF1YWRzLiBzdWNrcyB5b3UgcmFuIGludG8gdGhhdCBjb29sZXIgdGhvdWdoClNvbWUgdGVjaG5pcXVlcyBhcmUgbG9uZywgc2xvdyBhbmQgZGVlcCwgT3RoZXJzIGFyZSBxdWljaywgZHluYW1pYywgYW5kIHJoeXRobWljLiBJIGxlYXJuZWQgYSBjbGFzc2ljIFRoYWkgTWFzc2FnZSBzZXF1ZW5jZSBiYXNlZCBvbiB0aGUgdGVhY2hpbmcgb2YgQXNva2FuYW5kYSBmb3VuZGVyIG9mIHRoZSBnbG9iYWwgc3Vuc2hpbmUgbmV0d29yayBpbiBDaGlhbmcgTWFpIFRoYWlsYW5kLiAKTm90IGV2ZXJ5b25lIGNhbiBiZSBjb21mb3J0YWJsZSBwbGF5aW5nIHBva2VyIGluIGEgY2FzaW5vIHNvIGdvb2Qgb25saW5lIHBva2VyIHNpdGVzIGNhbiBiZSBhIGdyZWF0IGFsdGVybmF0aXZlIEluIHRoZSBjb21wZXRpdGl2ZSB3b3JsZCBvZiBvbmxpbmUgY2FzaW5vLCB0aGVyZSBpcyBib3VuZCB0byBiZSBhIHNpdGUuIApJdCdzIG5vdCB0aGUgZmlyc3QgdGltZSBBbm5hJ3MgaGFzIHdvbiBuYXRpb25hbCBhY2NsYWltLgpUaGUgdGhyZWUgZGVmZW5kYW50cyBhcmUgY2hhcmdlZCB3aXRoIGFybWVkIHJvYmJlcnksIGNvbnNwaXJpbmcgdG8gY29tbWl0IHRoYXQgY3JpbWUsIGFuZCB0d28gY291bnRzIG9mIHBvc3Nlc3NpbmcgYSBmaXJlYXJtIGR1cmluZyB0aGUgY29tbWlzc2lvbiBvZiBhIGZlbG9ueS4gCkFueW9uZSByZWxpZ2lvdXMgKEdlbmVyYWxseSBzcGVha2luZywgSmFwYW4gZG9lc24gZG8ga29zaGVyL2hhbGFsLCB0aGVyZSB2ZXJ5IGxpdHRsZSB1bmRlcnN0YW5kaW5nIHRvd2FyZHMgcmVsaWdpb3VzIGhvbGlkYXlzLCBwZW9wbGUgd2lsbCBnaXZlIGEgcG9saXRlIGJ1dCBkaXN0YW5jaW5nICJPaC4gdGhhdCB5b3VyIGN1bHR1cmUsIEkgc2VlLiIpCllvdSB3YW50IHRvIGFycmFuZ2UgdGhlIGNhcmRzIGZpcnN0IGJ5IHN1aXQsIGFuZCB0aGVuIGluIG51bWVyaWNhbCBvcmRlci4gCkNvbnZlcnNpb24gVHJhY2tpbmcgUGl4ZWxzV2UgbWF5IHVzZSBjb252ZXJzaW9uIHRyYWNraW5nIHBpeGVscyBmcm9tIGFkdmVydGlzaW5nIG5ldHdvcmtzIHN1Y2ggYXMgR29vZ2xlIEFkV29yZHMsIEJpbmcgQWRzLCBhbmQgRmFjZWJvb2sgaW4gb3JkZXIgdG8gaWRlbnRpZnkgd2hlbiBhbiBhZHZlcnRpc2VtZW50IGhhcyBzdWNjZXNzZnVsbHkgcmVzdWx0ZWQgaW4gdGhlIGRlc2lyZWQgYWN0aW9uLCBzdWNoIGFzIHNpZ25pbmcgdXAgZm9yIHRoZSBIdWJQYWdlcyBTZXJ2aWNlIG9yIHB1Ymxpc2hpbmcgYW4gYXJ0aWNsZSBvbiB0aGUgSHViUGFnZXMgU2VydmljZS4gClNvYWtpbmcgYWNyeWxpYyBuYWlscyBpbiBhbiBhY2V0b25lIGJvd2wgaXMgYSBsb3QgYmV0dGVyIGVhc2llciB0aGFuIHRoaXMuIFdobyBpcyBnb2luZyB0byB3cmFwIGZvaWxzIHcvIGFjZXRvbmUgY290dG9uIGJhbGxzIGZvciB1IGFsbCB0ZW4gZmluZ2Vycz8gSWYgeW91IHNvYWsgeW91ciBmaW5nZXJzIGluIHRoZSBhY2V0b25lIGJvd2wsIHdvbWVuIG5lZWQgdG8gYmUgcGF0aWVuY2Ugd2hpbGUgd2FpdGluZyB0byBzb2FrIHRoZWlyIGFjcnlsaWMgbmFpbHMgb2ZmLiBJZiB0aGV5IGtlZXAgdGFraW5nIHRoZWlyIGZpbmdlcnMgb3V0c2lkZSB0aGUgYm93bCBvciBhYm92ZSB0aGUgYWNldG9uZSBsaXF1aWQsICh3aGljaCB3aGF0IG1vc3Qgd29tZW4gZG8gdG8gcGVlayBhdCB0aGVpciBmaW5nZXJzLiAKSSBzcGVudCBhIGxvbmcgdGltZSBzdHVkeWluZyBpdCBvbiBHb29nbGUgRWFydGggYW5kIGl0IGlzIGEgdmVyeSBpbnRlcmVzdGluZyBwbGFjZSwgbGlrZSBNb3Njb3csIHRob3VnaCBhIG11Y2ggeW91bmdlciBtZXRyb3BvbGlzLi4gCkNsYWltIHlvdXIgd2FsbHMgYW5kIGZ1cm5pdHVyZS4gSSBhbSBub3Qgc3VyZSB0aGlzIHdvcmtzIGZvciBmZW1hbGVzIGFzIHdlbGwgYXMgbWFsZXMsIGJ1dCBmb3IgbXkgbWFsZSBraXR0eSwgdGhpcyB3b3JrZWQgYW1hemluZ2x5IHdlbGwuIApUaGF0IHR1cm5lZCBvdXQgdG8gYmUgbmVhcmx5IHNwb3Qgb24uIAo=|<---