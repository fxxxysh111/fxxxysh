<!DOCTYPE html>
<html lang="ko">
 <head>
  <meta content="ziH-Uv4M-yDcCI3T4bCnOoxDylMca6nRFhSqtg_GHvI" name="google-site-verification"/>
  <meta charset="utf-8"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="" http-equiv="Content-Security-Policy">
   <meta content="nosniff" name="X-Content-Type-Options">
    <meta content="1" name="X-XSS-Protection"/>
    <meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no" name="viewport"/>
    <meta content="부산시 인터넷뉴스 부산이야기" name="author">
     <meta content="5244b746f6ebd236f274c7d6974548e649a497c1" name="naver-site-verification"/>
     <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
     <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
     <meta content="부산시 인터넷뉴스 부산이야기" name="copyright"/>
     <meta content="website" property="og:type"/>
     <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title"/>
     <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
     <meta content="http://news.busan.go.kr/resource/img/media/common/logo.png" property="og:image"/>
     <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
     <title>
      [area1][mkey1][keyword1][symbolx][area1][keywordx][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
     </title>
    </meta>
   </meta>
  </meta>
 </head>
 <body>
  <div id="skipNav">
   [ahref]
   
  </div>
  <header id="header">
   <div class="headerUtil">
    <div class="headerUtilInnr">
     <div class="utilLogo">
      <a href="r">
      </a>
     </div>
     <div class="util">
      <ul class="menus">
       <li>
        [link]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [link]
        
       </li>
      </ul>
      <div class="language">
       <label class="hidden" for="selcLanguage">
        언어선택
       </label>
       <select id="selcLanguage">
        <option value="http://english.busan.go.kr">
         English
        </option>
        <option value="http://japanese.busan.go.kr">
         日本語
        </option>
        <option value="http://chinese.busan.go.kr">
         简体中文
        </option>
        <option value="http://tchinese.busan.go.kr">
         繁體中文
        </option>
       </select>
       <span class="btn">
        <button class="btnGo" id="selcSiteLanguage" name="selcSiteLanguage" title="새 창" type="button">
         GO
        </button>
       </span>
      </div>
     </div>
    </div>
   </div>
   <div class="headerInnr">
    <h1 class="logo">
     <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
    </h1>
    <button class="btnNav" type="button">
     메뉴보기
    </button>
    <nav id="topNav">
     <div class="topNavInnr">
      <ul class="topNavMenus">
       <li>
        <a href="/totalnews01">
         <strong>
          전체기사
         </strong>
        </a>
        <button class="btnMenuDropDown" type="button">
         하위메뉴열기
        </button>
        <div class="topNavSub">
         <div class="topNavSubTit" style="background-image:url('/humanframe/theme/news/assets/img/common/topnavsub_visual01.png');">
          <h2>
           [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
          </h2>
         </div>
         <ul>
          <li>
           [ahref]
           
          </li>
         </ul>
        </div>
       </li>
       <li>
        <a href="/snsbusan01">
         <strong>
          소통부산
         </strong>
        </a>
        <button class="btnMenuDropDown" type="button">
         하위메뉴열기
        </button>
        <div class="topNavSub">
         <div class="topNavSubTit" style="background-image:url('/humanframe/theme/news/assets/img/common/topnavsub_visual01.png');">
          <h2>
           <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
          </h2>
         </div>
         <ul>
          <li>
           [ahref]
           
          </li>
          <li>
           [link]
           
          </li>
          <li>
           <a href="/snsbusan03">
            <strong>
             경제
            </strong>
           </a>
          </li>
          <li>
           <a href="/snsbusan04">
            <strong>
             시민생활
            </strong>
           </a>
          </li>
          <li>
           [link]
           
          </li>
         </ul>
        </div>
       </li>
       <li>
        [ahref]
        
        <button class="btnMenuDropDown" type="button">
         하위메뉴열기
        </button>
        <div class="topNavSub">
         <div class="topNavSubTit" style="background-image:url('/humanframe/theme/news/assets/img/common/topnavsub_visual01.png');">
          <h2>
           [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
          </h2>
         </div>
         <ul>
          <li>
           [ahref]
           
          </li>
          <li>
           [link]
           
          </li>
          <li>
           [link]
           
          </li>
          <li>
           <a href="/cardnews">
            <strong>
             카드 뉴스
            </strong>
           </a>
          </li>
          <li>
           [link]
           
          </li>
         </ul>
        </div>
       </li>
       <li>
        <a href="/storyreport">
         <strong>
          시민소통
         </strong>
        </a>
        <button class="btnMenuDropDown" type="button">
         하위메뉴열기
        </button>
        <div class="topNavSub">
         <div class="topNavSubTit" style="background-image:url('/humanframe/theme/news/assets/img/common/topnavsub_visual01.png');">
          <h2>
           <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
          </h2>
         </div>
         <ul>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a href="/birthcon">
            <strong>
             탄생축하 사진공모
            </strong>
           </a>
          </li>
         </ul>
        </div>
       </li>
       <li>
        <a href="/letterview">
         <strong>
          뉴스레터
         </strong>
        </a>
        <button class="btnMenuDropDown" type="button">
         하위메뉴열기
        </button>
        <div class="topNavSub">
         <div class="topNavSubTit" style="background-image:url('/humanframe/theme/news/assets/img/common/topnavsub_visual01.png');">
          <h2>
           [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
          </h2>
         </div>
         <ul>
          <li>
           [link]
           
          </li>
          <li>
           [link]
           
           <ul>
            <li>
             <a href="/subscriptinfo">
              회원 구독신청 안내
             </a>
            </li>
           </ul>
          </li>
         </ul>
        </div>
       </li>
       <li>
        [link]
        
        <button class="btnMenuDropDown" type="button">
         하위메뉴열기
        </button>
        <div class="topNavSub">
         <div class="topNavSubTit" style="background-image:url('/humanframe/theme/news/assets/img/common/topnavsub_visual01.png');">
          <h2>
           [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
          </h2>
         </div>
         <ul>
          <li>
           <a href="/pdfviewer?articlNo=1">
            <strong>
             다이내믹부산
            </strong>
           </a>
           <ul>
            <li>
             [link]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [link]
             
            </li>
           </ul>
          </li>
          <li>
           [ahref]
           
           <ul>
            <li>
             [link]
             
            </li>
           </ul>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [link]
           
          </li>
         </ul>
        </div>
       </li>
       <li>
        [link]
        
        <button class="btnMenuDropDown" type="button">
         하위메뉴열기
        </button>
        <div class="topNavSub">
         <div class="topNavSubTit" style="background-image:url('/humanframe/theme/news/assets/img/common/topnavsub_visual01.png');">
          <h2>
           [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
          </h2>
         </div>
         <ul>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [link]
           
          </li>
         </ul>
        </div>
       </li>
      </ul>
     </div>
     <button class="btnClose" type="button">
      메뉴 닫기
     </button>
    </nav>
    <div class="topSearch">
     <form action="/totalnews01/list" id="srchFrm" method="get" name="srchFrm">
      <button class="btnSearch" type="button">
       통합검색
      </button>
      <div class="topSearchBar">
       <fieldset class="search">
        <legend>
         통합검색
        </legend>
        <label class="hidden" for="srchText">
         검색어 입력
        </label>
        <button class="btnSearchGo" type="submit">
         검색
        </button>
       </fieldset>
       <button class="btnClose" type="button">
        통합검색 닫기
       </button>
      </div>
     </form>
    </div>
   </div>
  </header>
  <div id="container">
   <main id="contents">
    <article class="mainNewsHeadlineWrap">
     <div class="mainNewsHeadline">
      <h3 class="hidden">
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <ul class="mainNewsHeadlineList">
       <li class="headline01">
        <div style="background-image:url('/comm/getFile?srvcId=MAINNEWS&amp;upperNo=9270&amp;fileTy=IMG&amp;fileNo=1');">
         [link]
         
        </div>
       </li>
       <li class="headline02">
        <div style="background-image:url('/comm/getFile?srvcId=MAINNEWS&amp;upperNo=9271&amp;fileTy=IMG&amp;fileNo=1');">
         [link]
         
        </div>
       </li>
       <li class="headline03">
        <div style="background-image:url('/comm/getFile?srvcId=MAINNEWS&amp;upperNo=9260&amp;fileTy=IMG&amp;fileNo=1');">
         [link]
         
        </div>
       </li>
       <li class="headline04">
        <div style="background-image:url('/comm/getFile?srvcId=MAINNEWS&amp;upperNo=9259&amp;fileTy=IMG&amp;fileNo=1');">
         [ahref]
         
        </div>
       </li>
      </ul>
     </div>
    </article>
    <div class="mainSectionWrap">
     <section class="mainSection">
      <article class="sectionBox sectionArticle">
       <div class="imgListWrap">
        <h3 class="titSection">
         [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
        </h3>
        <div class="imgListCont slickSlider">
         <div class="imgListType1 slides">
          [link]
          
          [ahref]
          
          [ahref]
          
          [link]
          
          [link]
          
          [link]
          
         </div>
        </div>
       </div>
      </article>
      <div class="sectionBox sectionSns">
       <div class="snsWrap">
        <h3 class="titSection">
         [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
        </h3>
        <div class="subscribeLinkCont">
         <div class="subscribeLink type1">
          <div class="item newspaper">
           <div class="cont">
            [link]
            
           </div>
          </div>
          <div class="item magazines">
          </div>
         </div>
         <div class="subscribeLink type2">
          <div class="item blog">
           <div class="cont">
            [ahref]
            
           </div>
          </div>
          <div class="item foreign">
           <div class="cont">
            [link]
            
           </div>
          </div>
         </div>
        </div>
        <div class="snsLinkCont">
         <div class="snsLink">
          <div class="item facebook">
           [ahref]
           
          </div>
          <div class="item twitter">
           <a href="/BusanCityGovt" target="_blank" title="새창">
            <div class="info">
             <p class="tit">
              [link]<li>[link]</li>[search]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search][search][search]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][link]<li>[link]</li>[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>[search]
             </p>
            </div>
           </a>
          </div>
          <div class="item youtube">
           [ahref]
           
          </div>
          <div class="item kakao">
           [ahref]
           
          </div>
         </div>
        </div>
       </div>
      </div>
      <article class="sectionBox sectionEnjoy">
       <div class="imgListWrap">
        <h3 class="titSection">
         [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
        </h3>
        <div class="imgListCont">
         <ul class="imgListType1">
          <li class="item">
           <div>
            [link]
            
           </div>
          </li>
          <li class="item">
           <div>
            [link]
            
           </div>
          </li>
          <li class="item">
           <div>
            [link]
            
           </div>
          </li>
         </ul>
         <div class="btnAddWrap">
          [ahref]
          
         </div>
        </div>
       </div>
      </article>
      <article class="sectionBox sectionNotice">
       <div class="NoticeWrap">
        <div class="NoticeTabWrap">
         <ul class="NoticeTab" data-function="tab" data-tabname="noticeTab">
          <li class="active">
           [ahref]
           
           <div class="tabContWrap" data-tabname="noticeTab" id="noticeTabCont1">
            <h3 class="hidden">
             [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
            </h3>
            <div class="noticeListWrap">
             <ul class="noticeList">
              <li>
               <a href="/nbnews/1353325" target="_blank" title="새창열기">
                <span class="tit">
                 화명수목원관리사업소 공무직 채용시험 서류전형 합격자 및 면접,실기시험 시행공고
                </span>
                <span class="date">
                 2018-12-12<li>[search]</li>[link]<li>[link]</li>[ahref][search]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][search][link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[link][ahref][link]<li>[link]</li>
                </span>
               </a>
              </li>
              <li>
               [link]
               
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               <a href="/nbnews/1352986" target="_blank" title="새창열기">
                <span class="tit">
                 2019년 부산박물관 교육홍보팀 상반기 학예인턴 서류합격자 공고
                </span>
                <span class="date">
                 2018-12-11[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[ahref]<li>[ahref]</li><li>[link]</li>
                </span>
               </a>
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [link]
               
              </li>
              <li>
               <a href="/nbnews/1352655" target="_blank" title="새창열기">
                <span class="tit">
                 부산광역시 대표 홈페이지 만족도 설문조사 당첨자 알림[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>
                </span>
                <span class="date">
                 2018-12-10
                </span>
               </a>
              </li>
              <li>
               [link]
               
              </li>
             </ul>
            </div>
            [ahref]
            
           </div>
          </li>
          <li>
           [link]
           
           <div class="tabContWrap hide" data-tabname="noticeTab" id="noticeTabCont2">
            <h3 class="hidden">
             [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
            </h3>
            <div class="noticeListWrap">
             <ul class="noticeList">
              <li>
               [ahref]
               
              </li>
              <li>
               <a href="/nbtnews/1353298" target="_blank" title="새창열기">
                <span class="tit">
                 오거돈 시장, 고시촌 화재취약지구 직접 점검 나서<li>[ahref]</li><li>[ahref]</li><li>[ahref]</li><li>[link]</li>[ahref]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[link][search][search][ahref][ahref][link]<li>[ahref]</li><li>[search]</li><li>[link]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
                </span>
                <span class="date">
                 2018-12-12<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][link][search]<li>[link]</li><li>[link]</li><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search][search]<li>[search]</li>
                </span>
               </a>
              </li>
              <li>
               [link]
               
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [link]
               
              </li>
              <li>
               <a href="/nbtnews/1353092" target="_blank" title="새창열기">
                <span class="tit">
                 - 언제나 어디서나 책 읽는 부산 만든다! - 부산시, 시청사 내 「꿈+도서관」 조성
                </span>
                <span class="date">
                 2018-12-12
                </span>
               </a>
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               <a href="/nbtnews/1353090" target="_blank" title="새창열기">
                <span class="tit">
                 - 대형 유통기업 현지 법인화로 지역 업체와 상생 발전 기반 마련 - 이케아, 오시리아 관광단지 내 동부산점 착공[ahref][search][ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>
                </span>
                <span class="date">
                 2018-12-12<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[search]</li>[ahref]
                </span>
               </a>
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [link]
               
              </li>
             </ul>
            </div>
            [link]
            
           </div>
          </li>
          <li class="NoticeTab3">
           [ahref]
           
           <div class="tabContWrap hide" data-tabname="noticeTab" id="noticeTabCont3">
            <h3 class="hidden">
             [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
            </h3>
            <div class="noticeListWrap">
             <ul class="noticeList">
              <li>
               [ahref]
               
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [link]
               
              </li>
              <li>
               [link]
               
              </li>
              <li>
               <a href="/nbanser/1350812" target="_blank" title="새창열기">
                <span class="tit">
                 채널A에 보도된 ｢부산 일부지역 타르 수도관 물공급｣ 제목의 기사에 대한 해명자료
                </span>
                <span class="date">
                 2018-11-22<li>[ahref]</li>[search]<li>[link]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[link]</li><li>[link]</li><li>[search]</li><li>[search]</li>[search][search][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][search]
                </span>
               </a>
              </li>
              <li>
               <a href="/nbanser/1348620" target="_blank" title="새창열기">
                <span class="tit">
                 국제신문에 보도된 ｢부산시-상수도본부 엇박자 해수담수화 갈수록 꼬인다｣ 보도내용에 대한 설명자료
                </span>
                <span class="date">
                 2018-11-08[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[ahref][search]
                </span>
               </a>
              </li>
              <li>
               <a href="/nbanser/1348579" target="_blank" title="새창열기">
                <span class="tit">
                 부산일보에 보도된 ｢기초연금도 구‧군에 떠넘기려는 부산시」 보도내용에 대한 해명자료임[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][search][search]<li>[search]</li>[search]
                </span>
                <span class="date">
                 2018-11-08
                </span>
               </a>
              </li>
              <li>
               <a href="/nbanser/1348406" target="_blank" title="새창열기">
                <span class="tit">
                 부산일보에 보도된 ‘기장군 부군수 임명권 기장군으로 가닥’이라는 보도내용에 대한 해명자료임
                </span>
                <span class="date">
                 2018-11-07<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search][link]<li>[search]</li><li>[search]</li>[ahref][link][ahref]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
                </span>
               </a>
              </li>
              <li>
               [link]
               
              </li>
             </ul>
            </div>
            [link]
            
           </div>
          </li>
         </ul>
        </div>
       </div>
      </article>
     </section>
    </div>
    <article class="mainBadaTvWrap">
     <div class="mainBadaTv">
      <div class="titSectionGroup">
       <h3 class="titSection">
        [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
       </h3>
       <p>
        부산의 이야기를 생생한 영상으로 만나보세요.
       </p>
      </div>
      <div class="imgListCont">
       <ul class="imgListType2">
        <li class="item">
         [link]
         
        </li>
        <li class="item">
         [link]
         
        </li>
        <li class="item">
         [ahref]
         
        </li>
        <li class="item">
         [ahref]
         
        </li>
       </ul>
       <div class="btnAddWrap">
        [ahref]
        
       </div>
      </div>
     </div>
    </article>
   </main>
  </div>
  <footer class="footerOtherSiteType" id="footer">
   <div class="footerInnrMenuWrap">
    <div class="footerInnrMenu">
     <div class="footOtherSiteWrap">
      <ul class="footSns">
       <li>
        [link]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
      <ul class="footOtherSiteList">
       <li>
        [ahref]
        
        <ul id="accOtherSiteList4">
         <li>
          [ahref]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/youth" target="_blank" title="새 창">
           금련산청소년수련원
          </a>
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/southport" target="_blank" title="새 창">
           남항관리사업소
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/bymarket" target="_blank" title="새 창">
           반여농산물도매시장관리사업소
          </a>
         </li>
         <li>
          [link]
          
         </li>
         <li>
          <a href="/busan" target="_blank" title="새 창">
           부산시립박물관
          </a>
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/egmarket" target="_blank" title="새 창">
           엄궁농산물도매시장관리사업소
          </a>
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/green" target="_blank" title="새 창">
           푸른도시가꾸기사업소
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [link]
          
         </li>
        </ul>
        <button class="btnClose" type="button">
         직속기관/사업소 목록 닫기
        </button>
       </li>
      </ul>
      [link]
      
     </div>
     <div class="footMenuWrap">
      <ul class="footMenu">
       <li>
        [ahref]
        
       </li>
       <li>
        [link]
        
       </li>
       <li>
        <a href="/vprivacy1" target="_blank" title="새 창">
         <strong class="pribacy">
          개인정보 처리방침
         </strong>
        </a>
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
   </div>
   <div class="footerInnrOfficeWrap">
    <div class="footerInnr">
     <address>
      <div class="logo">
      </div>
      <span class="txt">
       (우편번호 47545) 부산광역시 연제구 중앙대로 1001(연산동)[ahref][link][ahref]<li>[search]</li><li>[ahref]</li><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li><li>[link]</li>
      </span>
      <span class="txt">
       민원대표전화: (051)120<li>[search]</li>[ahref]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[search]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
      </span>
      <p class="txt">
       본 홈페이지에 게시된 이메일 주소가 자동 수집되는 것을 거부하며, 이를 위반시 정보통신망법에 의해 처벌됨을 유념하시기 바랍니다.
      </p>
      <p class="copyright">
       Copyright © Busan Metropolitan City. All rights reserved.[link][search][link]<li>[search]</li>[ahref]<li>[ahref]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
      </p>
     </address>
    </div>
   </div>
  </footer>
  <noscript>
  </noscript>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0478
  </b>
 </body>
</html>