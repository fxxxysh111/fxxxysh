--->|RGVlcFN0YWNrIGV4dGVuZHMgdGhlIGFiaWxpdHkgdG8gdGhpbmsgYWJvdXQgZWFjaCBzaXR1YXRpb24gZHVyaW5nIHBsYXkgdG8gaW1wZXJmZWN0IGluZm9ybWF0aW9uIGdhbWVzIHVzaW5nIGEgdGVjaG5pcXVlIGNhbGxlZCBjb250aW51YWwgcmUgc29sdmluZy4KR2FhYWguIAoxOTg1IHdhcyBhIHJlYWxseSB3b3JuIGNvcHkuLiAKTUg6IENhbnVja3Mgc2NvcmUhIERhbmllbCBmcm9tIEhlbnJpay4gU2Vjb25kIGFzc2lzdCB0byBLdXJ0IFNhdWVyLiBGdW4gZmFjdDogQ29sb3JhZG8gaGFzIGEgZ3V5IG5hbWVkIEZpbmdlciBwbGF5aW5nIHRvbmlnaHQuIEkgYW0gbm90IG1ha2luZyB0aGlzIHVwLgpBbmRyZXcgV2lsa2llJ3MgYWNjdXNhdGlvbiB0aGF0IGEgY2FzaW5vIGhhZCBpbGxlZ2FsbHkgdGFtcGVyZWQgd2l0aCBtYWNoaW5lcyBjb3VsZCB3ZWxsIGJlIHRoZSB0dXJuaW5nIHBvaW50IGFudGkgcG9raWUgYWN0aXZpc3RzIGhhdmUgYmVlbiB3YWl0aW5nIGZvci4gUGljdHVyZTogR2FyeSBSYW1hZ2UKV29ya2luZyB3aXRoaW4gdGhlIHBhcmFtZXRlcnMgb2YgYSBtZWRpY2FsIHN0YWZmIGR5bmFtaWNzIGlzIHBhcmFtb3VudCB0byB0aGUgc3VjY2VzcyBvZiB0aGUgY2hpcm9wcmFjdG9yLlRoZSBQRkNTIEFubnVhbCBFZHVjYXRpb24gU3ltcG9zaXVtIGlzIGhlbGQgZWFjaCB5ZWFyIGluIEluZGlhbmFwb2xpcywgY29pbmNpZGluZyB3aXRoIHRoZSBORkwgU2NvdXRpbmcgQ29tYmluZS5FYWNoIHllYXIsIG1vcmUgdGhhbiAzMDAgb2YgdGhlIGJlc3QgY29sbGVnZSBmb290YmFsbCBwbGF5ZXJzIGFyZSBpbnZpdGVkIHRvIHBhcnRpY2lwYXRlIGluIHRoZSBjb21iaW5lLlRvcCBleGVjdXRpdmVzLCBjb2FjaGluZyBzdGFmZnMsIHBsYXllciBwZXJzb25uZWwgZGVwYXJ0bWVudHMgYW5kIG1lZGljYWwgcGVyc29ubmVsIGZyb20gYWxsIDMyIE5GTCB0ZWFtcyBhcmUgb24gaGFuZCB0byBldmFsdWF0ZSB0aGUgbmF0aW9uIHRvcCBjb2xsZWdlIGZvb3RiYWxsIHBsYXllcnMgZWxpZ2libGUgZm9yIHRoZSB1cGNvbWluZyBkcmFmdC5UaGlzIGludGVuc2UsIGZvdXIgZGF5IGpvYiBpbnRlcnZpZXcgaXMgYW4gZXhjaXRpbmcgdGltZSBmb3IgdGhlIGF0aGxldGVzIGFuZCBhIHZpdGFsIHN0ZXAgaW4gYWNoaWV2aW5nIHRoZWlyIGRyZWFtcyBvZiBwbGF5aW5nIGluIHRoZSBORkwuVGhlIFBGQ1Mgc3ltcG9zaXVtIGlzIGEgcmVzdWx0IG9mIHRoZSBkZXNpcmUgdG8gc2hhcmUga25vd2xlZGdlLCBlZHVjYXRlIGNoaXJvcHJhY3RvcnMsIGFuZCBiZSBhIHJlc291cmNlIHRvIHRoZSBwcm9mZXNzaW9uLldoYXQgc3RhcnRlZCBvdXQgYXMgYSBzbWFsbCBtZWV0aW5nIG9mIGEgZmV3IHRlYW0gY2hpcm9wcmFjdG9ycyBoYXMgZ3Jvd24gaW50byBhIHR3byBkYXkgZXZlbnQgd2l0aCBleHBlcnQgcHJlc2VudGVycywgaGFuZHMgb24gdHJhaW5pbmcsIGFuZCBhIHdlZWtlbmQgb2YgbmV0d29ya2luZyB3aXRoIHNvbWUgb2YgdGhlIHByb2Zlc3Npb24gYmVzdCBzcG9ydHMgY2hpcm9wcmFjdG9ycy5UaGlzIHllYXIsIGluIGFkZGl0aW9uIHRvIERyLiAKRG9pbmcgdGhlIHNhbWUgdGhpbmcgZGF5IGluIGFuZCBkYXkgb3V0ICAgd2l0aG91dCBtYWtpbmcgbWlzdGFrZXMuIApPdmVyIHRpbWUsIHRoZSBjb21wbGV4aXR5IG9mIElUIHByb2N1cmVtZW50IGhhcyBpbmNyZWFzZWQgZ2VvbWV0cmljYWxseS4gSW4gb25lIGRpbWVuc2lvbiwgdGhlIG92ZXJhbGwgc2NvcGUgb2YgSVQgZXhwYW5kcyBjb25zdGFudGx5IGJ1c2luZXNzZXMgZmluZCBuZXcgdXNlcyBmb3IgZGF0YSwgZGVtYW5kaW5nIHRoYXQgdGhleSBzdG9yZSwgcHJvY2VzcywgYW5hbHl6ZSBhbmQgYWN0IG9uIGluZm9ybWF0aW9uIHRvIGVuaGFuY2UgZXhpc3RpbmcgcHJvY2Vzc2VzIGFuZCBsYXVuY2ggbmV3IGFjdGl2aXRpZXMuIApJIGZlZWwgc28gc3R1cGlkIGJlY2F1c2UgSSBmZWVsIHNvIGJyb2tlbiwgYW5kIG1heWJlIEknbSBvbmUgb2YgdGhlIHBlb3BsZSB3aG8gc2hvdWxkbid0IGhhdmUgYmFiaWVzLCBiZWNhdXNlIG1heWJlLCBsaWtlIG15IEF1bnQgRG9yYSBhbGwgbXkgY2hpbGRyZW4gYXJlIG1lbnQgdG8gZGllLiAKQnV5IGEgY2hpcCBwYWNrYWdlIChQbGVhc2Ugbm90ZSB0aGlzIG9wdGlvbiBpcyBvbmx5IGF2YWlsYWJsZSBhcyBhbiBpbnRyb2R1Y3RvcnkgVklQIG9mZmVyLCBpZiB5b3UgaGF2ZSBiZWVuIGEgVklQIGJlZm9yZSB5b3UgbXVzdCBjYXNoIGluIHRoZSAxIE1pbGxpb24gQ2hpcHMpIE9uY2UgeW91IGhhdmUgZG9uZSB0aGlzLCBjbGljayB0aGUgZ29sZCBWSVAgVGFibGVzIHRhYiBvbiB0aGUgbWFpbiBwb2tlciBwYWdlIHRvIHRha2UgYWR2YW50YWdlIG9mIHRoaXMgcGVya3MgZmlsbGVkIGZlYXR1cmUuIEFzIGEgVklQLCB5b3UnbGwgYmUgYWJsZSBhY2Nlc3MgdG8gb3VyIFZJUCB0YWJsZXMsIGdldCBmcmVlIGRyaW5rcywgYmVuZWZpdCBmcm9tIGluY3JlYXNlZCBkYWlseSBjaGlwIGJvbnVzZXMgYW5kIHNob3cgb2ZmIHlvdXIgc3RhdHVzIGF0IHRoZSB0YWJsZXMuIApUaGVyZSBhcmUgbXVsdGlwbGF5ZXIgcmFjZXMgYXMgd2VsbCBhcyBhIHRlYW0gUnVzaCBtb2RlIHR5cGUgbWF0Y2hlcy4KSWwgdHJhaXRlIE1vbnRtYXJ0cmUgcHJlc3F1ZSBydWUgcGFyIHJ1ZSwgbWFpc29uIHBhciBtYWlzb24sIG5vdXMgZW50cm9ucyBkYW5zIGxlIHNlY3JldCBkZSBNb250bWFydHJlIGNvbW1lIGxlIHRpdHJlIGxlIGxhaXNzZSBwcnZvaXIuLiAKUHJvdmlkZSBleHRyYSBhdHRlbnRpb24gZm9yIHlvdXIgc2lkZWJ1cm5zLiBUaGUgc2lkZWJ1cm5zIGFyZSB1c3VhbGx5IGEgZm9yZ290dGVuIGFyZWEgd2hlbiBpdCBjb21lcyB0byBncm9vbWluZywgc2luY2UgdGhleSBhcmUgbm90IHVzdWFsbHkgY292ZXJlZCBieSBzaGFtcG9vaW5nIGZvciB0aGUgaGFpciBvciBjbGVhbnNpbmcgZm9yIGZhY2lhbCBza2luLiBUbyBrZWVwIHlvdXIgc2lkZWJ1cm5zIGNsZWFuLCBtYWtlIHN1cmUgdGhhdCB5b3UgdXNlIHRoZSBmYWNpYWwgd2FzaCB0byBjbGVhbiB0aGUgYXJlYSBzdXJyb3VuZGluZyB0aGUgc2lkZWJ1cm5zLiBEdXJpbmcgc2hvd2VyLCBkYWIgYSBsaXR0bGUgc2hhbXBvbyBvbnRvIHlvdXIgaGFuZHMgYW5kIGNyZWF0ZSBsYXRoZXIuIEFwcGx5IHRoaXMgdG8geW91ciBzaWRlYnVybnMgYW5kIG1hc3NhZ2UgZm9yIGEgZmV3IG1pbnV0ZXMuIFJpbnNlIHRob3JvdWdobHkuIFlvdSBjYW4gYWxzbyBhcHBseSBjb25kaXRpb25lciBvY2Nhc2lvbmFsbHkuCiJJIGEgYnJlYWsgZXZlbiBwbGF5ZXIuIiBUaGF0IHRoZSBtYW50cmEgb2YgYSBsb3NpbmcgcGxheWVyIHdobyBoYXMgd2lsbGluZ2x5IGxpZWQgdG8gaGltc2VsZi4KTm9ydGggRGVsdGEgc3RlYWxzIHNob3csIHRob3VnaCwgdGhhbmtzIHRvIGxhdGUgYmFua2VkIHNob3QgdGhyZWUgcG9pbnRlciBmcm9tIHdvdW5kZWQgc3RhciBHYWhpciBMQU5HTEVZICBUaGUgTG9yZCBUd2VlZHNtdWlyIFBhbnRoZXJzLCB3aG8gZmluaXNoZWQgdGhpcmQgaW4gdGhlIEZyYXNlciBWYWxsZXkgem9uZSBxdWFsaWZpZXIsIGFuZCB0aGUgS2Vsb3duYSBPd2xzLCB3aG8gbmV2ZXIgY2FtZSBpbiBhbnkgaGlnaGVyIHRoYW4gTm8uIDkgaW4gYW55IG9mIHRoZSAxMiBlZGl0aW9ucyBvZiB0aGUgd2Vla2x5IHByb3ZpbmNpYWwgcmFua2luZ3MsIHdpbGwgbWVldCBpbiB0aGUgUXVhZCBBIGJveXMgYmFza2V0YmFsbCBmaW5hbCBTYXR1cmRheSBuaWdodCBhdCB0aGUgTGFuZ2xleSBFdmVudHMgQ2VudHJlLi4gClRoZW5vdG9yaW91c25lZWtzICAgMjIgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnbwpXaGlsZSBDaXZlcmlub3MgaW4gRWRpbmJ1cmdoLCB3aGljaCBzdGFydGVkIGFzIGEgc3RyZWV0IGZvb2QgY2FydCBhbmQgdHJhbnNmb3JtZWQgaW50byBhIHJlc3RhdXJhbnQgaW4gMjAxNSwgdGFrZXMgc2V2ZW50aCBzcG90LgpBZnRlciB0aGUgcGxlYSwgYSB1bmlvbiBzcG9rZXNtYW4gc2FpZCBKb2huIERvdWdoZXJ0eSBoYWQgbm90IGJlZW4gcGFydHkgdG8gYW55IGZyZWUgd29yayBhbmQgaGFkIG5ldmVyIGFncmVlZCBvciBleHBlY3RlZCB0byBwYXkgYW55dGhpbmcgb3RoZXIgdGhhbiBhIGZhaXIgcHJpY2UuClJlY2VudGx5LCB0aGUgY2FzaW5vcyBzdGFydGVkIGlzc3VpbmcgY29tbWVtb3JhdGl2ZSBjaGlwcyBmb3IgY2VydGFpbiBldmVudHMuIFRoZSBNR00gR3JhbmQgcHV0IG91dCBhIGNoaXAgZm9yIHRoZSBHZW9yZ2UgRm9yZW1hbiBmaWdodCwgdGhlIFRyb3BpY2FuYSBpc3N1ZWQgb25lIGZvciB0aGUgS2VudHVja3kgRGVyYnksIGFuZCBDYWVzYXJzIFBhbGFjZSBjZWxlYnJhdGVkIEdlb3JnZSBCdXJucyBodW5kcmVkdGggYmlydGhkYXkgd2l0aCBvbmUuIApJZiB5b3UgdW5jb21mb3J0YWJsZSB3aXRoIG5vdCBiZWluZyBhYmxlIHRvIGNvbnRyb2wgeW91ciBkYXRhIHRoYXQgZmluZSwgYnV0IHdpdGhlciBsZWFybiBvciBrZWVwIGl0IHRvIHlvdXJzZWxmIGJlY2F1c2UgdGVsbGluZyBoaW0gb2ZmIGZvciBub3QgaGF2aW5nIHRoZSBhbnN3ZXIgaXMganVzdCBhcyB3cm9uZyBhcyBzdXBwb3J0aW5nIHRoZSB3cm9uZyBzaWRlIG9mIHRoZSBlcXVhdGlvbiB3aWxsaW5nbHkuCjcuIFNsb3cgZG93biB5b3VyIG1vdmVtZW50cy4gQSB3b21hbiB3aG8gbW92ZXMgc2xvd2x5IGFuZCBkZWNpc2l2ZWx5IGhhcyBiZWNvbWUgYSByYXJpdHkuIAooUHJpdmFjeSBQb2xpY3kpR29vZ2xlIE1hcHNTb21lIGFydGljbGVzIGhhdmUgR29vZ2xlIE1hcHMgZW1iZWRkZWQgaW4gdGhlbS4gKFByaXZhY3kgUG9saWN5KUdvb2dsZSBBZFNlbnNlIEhvc3QgQVBJVGhpcyBzZXJ2aWNlIGFsbG93cyB5b3UgdG8gc2lnbiB1cCBmb3Igb3IgYXNzb2NpYXRlIGEgR29vZ2xlIEFkU2Vuc2UgYWNjb3VudCB3aXRoIEh1YlBhZ2VzLCBzbyB0aGF0IHlvdSBjYW4gZWFybiBtb25leSBmcm9tIGFkcyBvbiB5b3VyIGFydGljbGVzLiAKSXQgaXMgYmVjb21pbmcgaW5jcmVhc2luZ2x5IGRpZmZpY3VsdCB0byBmb2xsb3cgYWxsIHRoZSBuZXcgc2l0ZXMgdGhhdCBzZWxsIGJ1dCBJIGFzc3VyZSB5b3UgdGhlIG9sZGVyIGFuZCBtb3JlIGV4cGVyaWVuY2VkIHNpdGVzIHdpbGwgbW9zdCBsaWtlbHkgZG8geW91IHdlbGwgZm9yIGEgY29tcGV0aXRpdmUgcHJpY2UuIFdJTiB0aGVtISBZZXMsIHRoZSBnYW1lIG5vdyBnaXZlcyBhIGxvdCBtb3JlIGNoYW5jZXMgdG8gd2luIHBva2VyIGNoaXBzLCBhbmQgYSBsb3QgbW9yZSB0aGFuIGJlZm9yZS4gCkFzIGZvciB0aGUgU3VuIENpdHkgY29uc3VsdGluZywgdGhleSBoYXZlIG5vdCB3b24gb25lIHJhY2UuIENhcmwgUm9iaW5zb24gd291bGQgaGF2ZSB3b24gaWYgaGUgbmV2ZXIgbGVmdCBoaXMgaG91c2UuIApBZnRlciB0aGUgZ2FtZQooSXQgd2FzIFRhbGxib3ksIGJ0dy4pLiAKU3RhbGxvbmUgcGxheXMgcHJvZmVzc2lvbmFsIGVzY2FwZSBhcnRpc3QsIFJheSBCcmVzbGluICAgaGUgZXNjYXBlcyBmcm9tIHByaXNvbnMgdG8gc3BvdCBzZWN1cml0eSBpc3N1ZXMgICBjaGFyZ2VkIHdpdGggZXNjYXBpbmcgYW4gaW5lc2NhcGFibGUgZmFjaWxpdHkgdGhhdCBoYXMgYmVlbiBkdWJiZWQgIlRoZSBUb21iLiIgSG93ZXZlciwgb25jZSBoZSdzIGltcHJpc29uZWQsIGl0IGJlY29tZXMgY2xlYXIgdGhhdCBzb21lb25lIHdhbnRlZCBoaW0gdGhlcmUgZm9yIHJlYWwsIGFuZCBoZSdsbCBoYXZlIHRvIGVzY2FwZSBmb3IgcmVhbCB3aXRoIHRoZSBoZWxwIG9mIGZlbGxvdyBpbm1hdGUgRW1pbCBSb3R0bWF5ZXIgKFNjaHdhcnplbmVnZ2VyKSB0byBmaW5kIG91dCB3aHkuIEl0J3MgYW4gaW50ZXJlc3RpbmcgcHJlbWlzZSB3aXRoIGxlYWRzIHRvbyBvbGQgdG8gYmUgZG9pbmcgd2hhdCB0aGV5J3JlIGRvaW5nLCBidXQgaXQncyBzdGlsbCBTdGFsbG9uZSBhbmQgU2Nod2FyemVuZWdnZXIuIFRoZXkncmUgYWN0aW9uIG1vdmllIGtpbmdzLiAKU29tZXRoaW5nIGZpc2h5IGhlcmUuIApBbmQgcHJvbWluZW50IHRoZV9kb25hbGQgdXNlciB0aGF0IGtpbGxlZCBoaXMgb3duIGZhdGhlci4gCjYuIFJ1bm5pbmcgU2hvZXM6IEZvciB0aGUgZGFkIHdobyBsb3ZlIGZpdG5lc3MsIGFkdmVudHVyZSBhbmQgc3BvcnRzIHJ1bm5pbmcgc2hvZXMgYWxvbmcgd2l0aCBhIGZldyBzcG9ydHMgYWNjZXNzb3JpZXMKQ2hvaWNlIGlzIHJlYXNvbmVkIGFuZCBiYXNlZCBvbiBzb3VuZCBqdWRnbWVudDsgaXQgbWF5IGJlIGluZmx1ZW5jZWQgYnkgb25lJ3MgaW50ZW50aW9uIHRvIGNvbXBseSB3aXRoIHRoZSBub3JtcyBvZiBvdGhlcnMuLiAKQWxzbywgeWVhaCBJJ20gbm90IHRyeWluZyB0byBibGF0YW50bHkgY3V0IGxpbmVzIG9yIGFueXRoaW5nIGxpa2UgdGhhdCBhbmQgSSBuZXZlciBnaXZlIHRoZSBmbG9vciBhIGhhcmQgdGltZSB3aXRoIHdhaXQgbGlzdHMsIHRoZXkgaGF2ZSBubyBjb250cm9sIG92ZXIgc2VhdHMgb3BlbmluZyB1cC4gSSBoYWQganVzdCBoZWFyZCBvbmxpbmUgdGhhdCBzb21lIHBlb3BsZSB0aXAgdGhlIGZsb29yIGFuZCBhcmUgYWJsZSB0byBnZXQgcHJlZmVyZW50aWFsIHRyZWF0bWVudC4gClRoZSBvbmx5IHRoaW5nIHRoYXQgaGVscGVkIG1lIGlzIEwgR2x1dGFtaW5lLiBJIHRha2UgaXQgZXZlcnkgc2luZ2xlIGRheSwgYW5kIGl0IGhhcyBoZWxwZWQgbWUgdHJlbWVuZG91c2x5LiAKRXNwZWNpYWxseSBpZiB5b3UncmUgYWxvbmUuIEkgaGF2ZW4ndCBoYWQgc2VyaW91cyBpc3N1ZXMgd2hlbiB0cmF2ZWxsaW5nIGluIFdlc3Rlcm4gRXVyb3BlIGJ1dCBJIGhhdmUgZXhwZXJpZW5jZWQgcmFjaXNtIGZyb20gRWFzdGVybiBFdXJvcGVhbnMgYW5kIEkgd2Fzbid0IGV2ZW4gaW4gRWFzdGVybiBFdXJvcGUuIApZb3Uga25vdy4gV2Ugd2VyZSBraWRzLCB3ZSB1c2VkIHRvIGVhdCBkaXJ0LiBub3cgd2UgZ3Jvd24gYW5kIHdhc2ggb3VyIGhhbmRzLgpBYmlsaXR5IHRvIGhlbHAgcHJldmVudCBudW1lcm91cyBkaXNlYXNlcyBpcyB3ZWxsIGRvY3VtZW50ZWQsIGJ1dCBub3cgd2Ugc2VlIHRoYXQgREhBIG9yIG9uZSBvZiBpdHMgYnlwcm9kdWN0cyBtaWdodCBzZXJ2ZSBhcyB0aGUgc3RhcnRpbmcgcG9pbnQgZm9yIGEgbmV3IGNsYXNzIG9mIGFudGkgY2FuY2VyIGRydWdzLiBOb3RlOkJ1eSBmcm9tIHJlcHV0YWJsZSBjb21wYW5pZXMhIEl0IGRvZXNuJ3QgcGF5IHRvIGZpbmQgdGhlIGNoZWFwZXN0IGZpc2ggb2lsIHByb2R1Y3RzLiAKVGhleSB0b29rIG92ZXIgc28gdGhleSBnZXQgdGhlIGNyZWRpdCBmb3IgdGhlIGhvcnJpYmxlIGVjb25vbWljIHJlY29yZCB0aGF0IGltcG92ZXJpc2hlZCBnZW5lcmF0aW9ucywgcmlnaHQ/IENhbiBoaWRlIGZyb20gdGhlIHRydXRoLgpQbGFuYXJvdXRidXJzdGNhbiBjL3IgdW5sZXNzIHlvdSBvb3AKU3VzdW5hbiBhY2FyYSBwZXJwaXNhaGFuIHNla29sYWg7IHNvZnR3YXJlIGthbWVyYSB0ZW1idXMgcGFuZGFuZyBwYWthaWFuIHVudHVrIGdhbGF4eSBtaW5pOyBnYW1lIGhwIGNyb3NzIGNiODN0OyBjb250b2ggbmFza2FoIHBlbWJhd2EgYWNhcmEgcGVycGlzYWhhbiBzZWtvbGFodGFyemFuIG1lZ2F2aWRlbywgcG9udG8gY2FwaXRvbmUgY29tbyBmYXplciwgbWFrYWxhaCBwYW5jYXNpbGEgcmVmb3JtYXNpLCBjb2RpZ29zIHBhcmEgbG9zIGNlbHVsYXJlcyBsR0lQICA0MzBOLCBuYXNrYWggcGVtYmF3YSBhY2FyYSBwZXJwaXNhaGFuIHNla29sYWgsClJhY2Y1OTkgIDQyNyBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpSb3VsZXR0ZSBpcyBwbGF5ZWQgYXQgYW4gZWxvbmdhdGVkIHRhYmxlLiBBdCBvbmUgZW5kIGlzIGEgd2hlZWwsIHdpdGggYSBub3RjaCBpbiB0aGUgdGFibGUgd2hlcmUgdGhlIGRlYWxlciBzdGFuZHMuIFRoZSB0YWJsZSBpcyBjb3ZlcmVkIHdpdGggYSBmZWx0IGxheW91dCB3aXRoIGJveGVzIGZvciB0aGUgbnVtYmVycyAxIHRocm91Z2ggMzYgYXJyYW5nZWQgaW4gdGhyZWUgY29sdW1ucyBhbmQgMTIgcm93cy4gQXQgdGhlIGVuZCBvZiB0aGUgcG9ydGlvbiBvZiB0aGUgbGF5b3V0IGNsb3Nlc3QgdG8gdGhlIGRlYWxlciwgYWJvdmUgdGhlIG51bWJlcnMgMSwgMiwgYW5kIDMsIGFyZSBib3hlcyBmb3IgMCBhbmQgMDAuIEVhY2ggb2YgdGhlIG51bWJlcnMgMSB0aHJvdWdoIDM2IGlzIHN1cnJvdW5kZWQgYnkgZWl0aGVyIGEgcmVkIG9yIGJsYWNrIG92YWwgb3IgcmVjdGFuZ2xlLiBUaGUgMCBhbmQgMDAgaGF2ZSBncmVlbiBiYWNrZ3JvdW5kcy4gVGhpcyByZWN0YW5ndWxhciBncmlkLCB3aXRoIGEgYm94IGZvciBlYWNoIG51bWJlciwgaXMgdXNlZCBmb3Igd2FnZXJzIGNhbGxlZCAiaW5zaWRlIGJldHMuIgpJIHdhcyBvbmx5IGFibGUgdG8ga2VlcCBpdCBmb3IgYSB3ZWVrIGJlZm9yZSBJIGxvc3QgaXQgaW4gNiBob3Vycy4gClRoZSBidWlsZGluZ3MgaW4gdGhlIGRldmVsb3BtZW50IHdvdWxkIGJlIGJ1aWx0IHRvIGNyZWF0ZSBhbiB1cmJhbiBmZWVsLiBQbHVzLCB0aGUgdmlsbGFnZSBzaXRlIGlzIGNsb3NlIHRvIHRoZSBsb2NhdGlvbiBvZiB0aGUgTWlscGl0YXMgQkFSVCBzdGF0aW9uIGFzIHdlbGwgdGhlIGxpZ2h0IHJhaWwgbGluZXMgb24gTm9ydGggRmlyc3QgU3RyZWV0LiBUaGUgZGV2ZWxvcGVycyBhbHNvIGludGVuZCB0byBwcm92aWRlIHNodXR0bGVzIHRvIHRoZSBuZWFyYnkgcmFpbCBsaW5lcy4KSW4gS21mIHJlICBULiBPZiB0aHQgaW4gLl8uX19fXyAnZnJUIF9fXyBfXyAgaiAuIApIYWxmd2F5IHRocm91Z2ggdGhlIE1CQSwgSSByZWFsaXplZCB3ZSByZWFsbHkgaGFkIHNvbWV0aGluZyBleGNpdGluZywgaGUgc2FpZC4uIApJY2ggaGFiZSBtaWNoIGVudHNjaGllZGVuIHdpZWRlciBiZWkgU3VuUG9rZXIgenUgc3BpZWxlbiwgd2VpbCBzaWUgbWVpbmVzIEVyYWNodGVucyBkZW4gZWluZW4gc2VociBndXRlbiBTdXBwb3J0IHVuZCBlaW4gdW5zY2hsYWdiYXJlcyBMb3lhbGl0dHNwcm9ncmFtbSBoYWJlbi4uIApJZiB5b3UgcmVhbGx5IGFyZSBnZXR0aW5nIHVubHVja3kgd2l0aCB0aGUgY2FyZHMsIGxvb2sgYXQgdGhlIGNhcmRzIGNvbWluZyBkb3duLCBzZWUgaWYgeW91IGNhbiBwdXQgb3RoZXJzIGluIGJlbGllZiB5b3UgaGF2ZSBhIGJldHRlciBoYW5kLCBoaWdoIHJpc2sgY2FuIHBheSBvZmYsIGJ1dCBkbyBub3QgdHJ5IHRoaXMgdG9vIG11Y2ggaW4gYSBnYW1lLCBhcyBldmVyeSB0aW1lIHlvdSBhcmUgcHV0dGluZyB5b3VyIHRvdXJuYW1lbnQgb24gdGhlIGxpbmUuIApJdCBkaXJlY3QgZnVlbCBmb3Igc2V4dWFsIHVyZ2VzLiAKQWdyZWUgd2l0aCBiYWRSTHBsYXllci4gSGlzIGV4YW1wbGVzIGFyZSBpbmNyZWRpYmx5IHN1cGVyZmljaWFsLiBJIHdvdWxkIGFyZ3VlIFBHSCBoYXMgZG9uZSBhbiBpbmNyZWRpYmxlIGFtb3VudCBvZiBkYW1hZ2UgdG8gdGhlIGRpdmVyc2l0eSBvZiByb2xlcyB3b21lbiBhcmUgc2VlbiBhcyBjYXBhYmxlIG9mIHN1Y2NlZWRpbmcgaW4uIE15IHdpZmUgKGtvcmVhbikgZnVtZXMgYXQgaG93IGhlciBpbmNvbXBldGVuY2Ugb3IgZmFpbHVyZSBpcyBhdCB0aW1lcyBwb3J0cmF5ZWQgYXMgYmVpbmcgcmVsYXRlZCB0byBoZXIgZ2VuZGVyLCBvZnRlbiBhcyBhbiBleGN1c2UgcHV0IGZvcnRoIGJ5IGhlciBvd24gdWx0cmFjb25zZXJ2YXRpdmUgc3VwcG9ydGVycy4gSSB3b3VsZCBhcmd1ZSB0aGF0IHNoZSB3YXMgY2hvc2VuIGFsbW9zdCBlbnRpcmVseSBiYXNlZCBvbiBoZXIgY29ubmVjdGlvbiB0byBoZXIgZmF0aGVyLCByYXRoZXIgdGhhbiBkdWUgdG8gaGVyIHF1aXRlIG1lYWdlciBsZWdpc2xhdGl2ZSBhY2NvbXBsaXNobWVudHMgcHJpb3IgdG8gYmVjb21pbmcgcHJlc2lkZW50LiBTbyBJIGJlbGlldmUgaGVyIGxlZ2FjeSBpcyBkYW1hZ2luZyB0byB3b21lbiB3aG8gd2FudCB0byBhY2hpZXZlIGluIEtvcmVhIHRocm91Z2ggdGhlaXIgaGFyZCB3b3JrIGFuZCBhYmlsaXR5LgpJZiBzaGUgdHVybmVkIG9uIGhlciBhcm0gaW4gaGVyIHNsZWVwLCB0aGUgcGFpbiB3YXMgc28gc2hhcnAgaXQgd291bGQgd2FrZSBoZXIuIEJlbm5ldHQgd2Fzbid0IHN1cmUgd2hldGhlciB0aGUgcGFpbiB3YXMgZnJvbSBhbiBvbGQgdGVhciBpbiBoZXIgcm90YXRvciBjdWZmIHRoYXQgaGFkIGZsYXJlZCBvciBmcm9tIHNvbWV0aGluZyBlbHNlLi4gCkp1c3QgYXMgeW91J3JlIGRvaW5nIG5vdywgdGFrZSB0aGUgdGltZSB0byBkbyByZXNlYXJjaC4gCjQgcG9pbnRzICBzdWJtaXR0ZWQgMTYgZGF5cyBhZ28uIApQZW9wbGUgYXQgdGhlaXIgYWdlIGFyZSBhbHJlYWR5IHN0YXJ0aW5nIHRvIHRoaW5rIGFib3V0IHRoZWlyIGZ1dHVyZSwgc2F2aW5nIG1vbmV5LCBnZXR0aW5nIG1hcnJpZWQsIGhhdmluZyBraWRzLiBXaGlsZSBzaGUgc3RpbGwgY2hhc2luZyBhIGRyZWFtIHRvIHRyYXZlbCBmb3IgYSB5ZWFyLiBUaGV5IGFyZSBpbiBhIGNvbXBsZXRlbHkgZGlmZmVyZW50IHN0YXRlcyBvZiBtaW5kLiBJIGFtIG5vdCBqdWRnaW5nIGFueW9uZSBidXQgdW5kZXIgdGhvc2UgY2lyY3Vtc3RhbmNlcyBoaXMgZGVjaXNpb24gaXMgdW5kZXJzdGFuZGFibGUuCkF0IGZpcnN0LCB0aGUgbWFzc2V1c2Ugd2FzIGRvaW5nIGEgbG92ZWx5IGpvYiBhbmQgSSB3YXMgZW5qb3lpbmcgaXQsIGJ1dCBpdCBzb29uIHR1cm5lZCBvdXQgdG8gYmUgdGhlIG1vc3QgaG9ycmVuZG91cyBleHBlcmllbmNlIGZvciBtYXNzYWdlLiAKVGhlIHZhcmlldHkgb2Ygb3Bwb25lbnRzIGlzIGFsc28gYnJvYWRlciBpbiBsaXZlLCBmcm9tIHRoZSA1JSB2cGlwIDElIHBmciBPTUNzIHRvIHRoZSAxMDAlIHZwaXAgZHJ1bmtlbiBtYW5pYWMuICJHb29kIiBwbGF5IGhhcyBsaXR0bGUgdG8gZG8gd2l0aCBiYWxhbmNlIGFuZCBhIGxvdCB0byBkbyB3aXRoIHBsYXlpbmcgdGhlIG9wcG9uZW50LiAKSSB3YXMgbHVja3kgZW5vdWdoIHRvIGdvIHRvIHRoZSBNb250ZXJleSBCYXkgQXF1YXJpdW0gd2hlbiB0aGV5IGhhZCBhIGJhYnkgZ3JlYXQgd2hpdGUgaW4gdGhlaXIgYmlnIHRhbmsuIFRoZXkgaGFkIGl0IHRoZXJlIGZvciBhIHdoaWxlICgxOTggZGF5cywgYWNjb3JkaW5nIHRvIGEgR29vZ2xlIHNlYXJjaCwgd2hpY2ggaXMgYWJvdXQgc2l4IGFuZCBhIGhhbGYgbW9udGhzKSBhbmQgZ290IGl0IHRvIGVhdCB0aGUgZm9vZCB0aGV5IGdhdmUgaXQuIEl0IGh1bmcgb3V0IG5pY2VseSBlbm91Z2ggd2l0aCB0aGUgb3RoZXIgY3JpdHRlcnMgYnV0IHRoZW4gaGFkIHRvIGJlIHJlbGVhc2VkIHdoZW4gaXQgYXR0YWNrZWQgdHdvIG90aGVyIHNoYXJrcyBpdCBzaGFyZWQgYSB0YW5rIHdpdGguIFRoZSB0YW5rIHRoZXkga2VwdCBpdCBpbiBpcyBtb25zdHJvdXMgKG9uZSBtaWxsaW9uIGdhbGxvbnMpIGFuZCBpcyBob21lIHRvIHRvbnMgb2YgYW5pbWFscyB0aGF0IGFsbCBsaXZlIHRvZ2V0aGVyLiBJZiB0aGUgZ3JlYXQgd2hpdGUgaGFkIHRoZSBwbGFjZSB0byBpdHNlbGYgaXQgcHJvYmFibHkgd291bGQgaGF2ZSBmYXJlZCBiZXR0ZXIsIGJ1dCB0aGF0IGh1bmRyZWRzIG9mIGNyaXR0ZXJzIHRoYXQgd291bGQgbmVlZCB0byBiZSByZSBob21lZCwgcGx1cyB3aG8ga25vd3MgaWYgdGhlIEdXUyB3b3VsZCBoYXZlIGJlZW4gaGFwcGllciBmb3IgbG9uZ2VyLCBvciBpZiBzaGUgd291bGQgaGF2ZSBiZWNvbWUganVzdCBhcyBkZXByZXNzZWQgb3IgYWdncmVzc2l2ZSwgb3Igd2hhdCBlbHNlIGNvdWxkIGhhdmUgaGFwcGVuZWQuCkluIEJlbGdpIGlzIGVyIG51IGVlbiBqb25nZSB2b2V0YmFsbGVyIHZhbiAyMCBqYWFyIGRpZSB6aWpuIG9wbGVpZGluZyBiaWogUFNWIGdlbm90ZW4gaGVlZnQgZW4gYmlqIHdpZSBBTFMgd2VyZCB2YXN0Z2VzdGVsZC4gTWV0IFBTViBwbGFhdHMgdmluZGVuIG9tIG1ldCBhbGxlIGluZ2V6YW1lbGRlIG1pZGRlbGVuIGVlbiBiZWhhbmRlbGluZyBpbiBDaGluYSB0ZSBrdW5uZW4gYWZrb3Blbi4gClRpamRlbnMgbWlqbiBkaWFnbm9zdGllayBlbiB0aGVyYXBpZSB0b2V0cyB2YW4gRkxQIDYgYmV2b25kIGlrIG1paiBpbiBkZSByb2wgdmFuIGJlaGFuZGVsZW5kIGZ5c2lvdGhlcmFwZXV0LiAKSGUgZW5qb3lzIHBsYXlpbmcgdGhlIFRpdGFuaWMgdGhlbWUgd2hlbiBoZSB0YWtlcyBuZXJ2b3VzIHNhaWxvcnMgb3V0LiBTYWlsaW5nIGhlbHBzIGhpbSBjb3BlIHdoZW4gdGhlIGJsYWNrIHRob3VnaHRzIGNyb3dkIGhpcyBtaW5kLiBIZSB0YWtlcyBjb21mb3J0IGZyb20ga25vd2luZyBoaXMgc3RhdGVtZW50IHRvIHBvbGljZSBpbiAyMDA3IGxhdW5jaGVkIFN0cmlrZSBGb3JjZSBHZW9yZ2lhbmEsIGFuZCBpdHMgaW52ZXN0aWdhdGlvbnMgcHJvdmlkZWQgcHJvb2Ygb2YgdGhlIG5lZWQgZm9yIGEgcm95YWwgY29tbWlzc2lvbiB3aGljaCBoYXMgZXhwb3NlZCB0aGUgdHJ1dGggYWJvdXQgY2hpbGQgc2V4dWFsIGFidXNlIGluIEF1c3RyYWxpYW4gaW5zdGl0dXRpb25zLiAKQW4gZXh0ZW5zaW9uIG9mIHRoZSBFbGl6YWJldGggUm9vbSB3aWxsIHJlcXVpcmUgdGhlIHNub29rZXIgcm9vbSB0byBiZSByZWR1Y2VkIGZyb20gc2V2ZW4gdG8gZml2ZSB0YWJsZXMsIGJ1dCBmb2xkaW5nIGRvb3JzIHdpbGwgZW5hYmxlIHRoZSB0d28gc3BhY2VzIHRvIGJlIHVzZWQgdG9nZXRoZXIgaW4gYW4gZWlnaHQgdGFibGUgc25vb2tlciB0b3VybmFtZW50LiAKSSB3YXMgdHJhaW5pbmcgdG8gYmVjb21lIGEgZ2VuZXJhbCBtYW5hZ2VyIG9mIGEgdmFwZSBzaG9wIGxhc3QgeWVhciwgYnV0IHNhZGx5IHRoZXkgY2xvc2VkIHRoZWlyIGRvb3JzIGR1ZSB0byBjb25jZXJucyB0aGF0IGEgZmxhdm9yIGJhbiB3b3VsZCBoaXQgYW5kIHRoZSBzaG9wIHdvdWxkIGdvIHVuZGVyIGZpbmFuY2lhbGx5LiAKSXQgaW1wb3NzaWJsZSB0byBoYXZlIGEgY29udmVyc2F0aW9uIGFib3V0IEZHTSBieSBpdHNlbGYuCkhhcnJpbmd0b24gd29uIHRoZSB0aXRsZSBvZiB3b3JsZCBwb2tlciBjaGFtcGlvbiBiYWNrIGluIDE5OTUuIAooRm9yIHB1cmlzdHMsIHN0cmFpZ2h0IHBvdXJzIG9mIGFsbCBCbHVlQmlyZCBzcGlyaXRzIGFyZSBhdmFpbGFibGUgICB0aGUgYmVzdCBzZWxsZXIgaXMgdGhlIGZvdXIgZ3JhaW4gYm91cmJvbiwgd2l0aCB0aGUgc3dlZXRuZXNzIG9mIHdoZWF0IGFuZCBzcGljaW5lc3Mgb2YgcnllICAgYXMgYXJlIGJvdHRsZXMgdG8gdGFrZSBob21lLikuIApUYXJ1aGFuIGFrYW4gZGltdWxhaSBkYXJpIHNpc2kga2lyaSBiYW5kYXIuRHVhIHBlbWFpbiBwZXJ0YW1hIGRpIHNpc2kga2lyaSBiYW5kYXIgaGFydXMgYmVydGFydWggc2VjYXJhIG90b21hdGlzIGFnYXIgcm9uZGVyIHBlcm1haW5hbm55YSBiaXNhIGRpbXVsYWkuIApJdCB3YXMgYm90aCBmYXIgYW5kIGFmdGVyIERhbnViZSwgc28gaGFyZCB0byBydWxlIGRpcmVjdGx5Lk1vbnRuZWdybyBpcyBtb3VudGFuaW91cywgKEJvc25pYSBpcyBtb3VudGFuaW91cyBhcyB3ZWxsIGJ1dCBzb21lIHBlb3BsZSB3ZXJlIE11c2xpbSBhbmQgaXQgaGFkIHNpbHZlciBtaW5lcywgdGhpcyBpcyB3aHkgaXQgd2FzIGluY29ycGFyYXRlZCB0byBlbXBpcmUuIApUaGUgZmlndXJlIGhlbGQgb3BlbiBoaXMgZXllbGlkIGFuZCB3YXMgc2hpbmluZyBhIHNtYWxsIGZsYXNobGlnaHQgaW4gZWFjaCBvZiBoaXMgZXllcy4gSGUgZm9yY2VkIGhpbXNlbGYgdG8gZm9jdXMgb24gdGhlIHBlcnNvbiB1bnRpbCB0aGUgYmx1cnJpbmVzcyByZXNvbHZlZCBpbnRvIGEgY2xlYXIgaW1hZ2Ugb2YgYSB3b21hbiBpbiBhIHBhcmFtZWRpY3MgdW5pZm9ybS4gCkNvbnNpZGVyIGhvdyBsYXJnZSB5b3Ugd2FudCB5b3VyIHBpY3R1cmVzIHRvIGJlIGluIHlvdXIgZmluYWwgY29sbGFnZS4gCiJCb2IgYm91Z2h0IGl0IGluIGdvb2QgZmFpdGgsIiBXcmlnaHQgc2FpZC4KT3RoZXJzIGFyZSBleHBsb3JpbmcgdGhlIG9wdGlvbnMgYW5kIGhvcGVmdWxseSB3ZSBjYW4gZGlzY3VzcyB0aGlzIHRvcGljIGxhdGVyIGluIHRoZSB5ZWFyIGFuZCBjb21lIHVwIHdpdGggYSByb2FkIG1hcCBmb3IgUHJvdG8gaW4gdGhlIGZ1dHVyZS4uIApBbmQgZG9uJ3QganVzdCB0cnkgdG8gdGFsayB0byBoZXIgYWJvdXQgeW91ciByZWxhdGlvbnNoaXAsIGFzayBoZXIgYWJvdXQgaG93IHNoZSdzIGRvaW5nIGluIGdlbmVyYWwuIFNvbWV0aW1lcyBpdCdzIHVzZWZ1bCB0byBoYXZlIGluZm9ybWF0aW9uIGdhdGhlcmluZyBjb252ZXJzYXRpb25zIGZpcnN0LCBhbmQgdGhlbiBkaWdlc3QgdGhhdCwgYmVmb3JlIG1vdmluZyBvbiB0byBwcm9ibGVtIHNvbHZpbmcgY29udmVyc2F0aW9ucy4uIApUaGVyZSBhcmUgbnVtZXJvdXMgc2l0ZXMgdGhhdCBvZmZlciB5b3UgYSBjaGFuY2UgdG8gcGxheSB0aGUgZ2FtZS4gSXQgaXMgZXNzZW50aWFsIGZvciB5b3UgdG8gaGF2ZSBiYXNpYyB1bmRlcnN0YW5kaW5nIG9uIGhvdyB0byBwbGF5IHNsb3RzIG9ubGluZS4gClByaW1ldGltZSBpbiBhIGNsdWIgaXMgbGlrZSAxIDEzMC4gR2V0IGluIHRoZXJlIGxhdGUgZ2V0IHRvIHdvcmsgYW5kIGxlYXZlIHdpdGggc29tZXRoaW5nIGJ5IDIgMjMwIGF0IHRoZSBsYXRlc3QuIApHdW5zbGluZ2VycywgcG9rZXIgcGxheWVycywgYW5kIGNoaWNrZW5zIDE6IERlY2lzaW9uIG1ha2luZyB1bmRlciBwaHlzaWNhbCBwZXJmb3JtYW5jZSBwcmVzc3VyZSBpbiBlbGl0ZSBhdGhsZXRlcy4gCkdlbmVyYWxseSwgaXQgaXMgcHJlZmVyYWJsZSB0byBzaXQgdG8gdGhlIGltbWVkaWF0ZSBsZWZ0IG9mIGFuIGFnZ3Jlc3NpdmUgcGxheWVyIHNvIHRoYXQgeW91IGNhbiBhY3QgYWZ0ZXIgaGltLiAKSGVyIGNvbW1vcmF0aXZlIHBpY3R1cmUgcmVwcmVzZW50cyBub3Qgb25seSBtZSBmaW5pc2hpbmcgdGhlIGdhbWUgYnV0IGFsbCB0aGF0IHRpbWUgd2Ugc3BlbnQgdG9nZXRoZXIgb24gaXQgb3ZlciB0aGUgeWVhcnMuIEl0IG9uZSBvZiBteSBncmVhdGVzdCB0cmVhc3VyZXMuLiAKV2UgZnVuY3Rpb25lZCBvbiBsZXNzIHRoYW4gNCA1IGhvdXJzIG9mIHNsZWVwIGZvciBtb250aHMuIApJbnRlcm5ldCBBcnRpY2xlcyAgSmFudWFyeSA2LCAyMDExClZlcnksIHZlcnkgZmV3IG1lbiBnZXQgdG8gbGl2ZSB0aGlzIGxpZmVzdHlsZSBhbmQgSSdtIHRoYW5rZnVsIEkgY2FuIHByb3ZpZGUgaGltIHdpdGggdGhlIG9wcG9ydHVuaXR5IHRvIGhhdmUgc28gbXVjaCBmcmVlZG9tLi4gClRvb2sgbWUgdGhlIHJlc3Qgb2YgdGhlIHllYXIgdG8gZ2V0IG9mZiB0aGUgY29ydGlzb25lIGFuZCBnZXQgd2VsbCwgc2hlIHRvbGQgbWUuIFRoZSBzZWNvbmQgZW5kb2NyaW5vbG9naXN0IGxvd2VyZWQgbXkgQXJtb3VyIGRvc2UsIEknZCBuZXZlciBoYWQgYW55IGFzdGhtYSBvciBvdGhlciBicmVhdGhpbmcgcHJvYmxlbXMuIApTb21ldGltZXMgdGhlc2UgdHdvIGNlbnRlcnMgY29tcGV0ZSB3aXRoIGVhY2ggb3RoZXIgYXMgdGhleSBhcmUgbm93IGRvaW5nIGluIHRoZSBDb25nby4pUmVzaXN0IGFueSBhdHRlbXB0IHRvIG91dGxhdyB0aGUgQ29tbXVuaXN0IFBhcnR5LkRvIGF3YXkgd2l0aCBhbGwgbG95YWx0eSBvYXRocy4gCk1vc3QgY29va2llcyB3b24ndCBjb2xsZWN0IGluZm9ybWF0aW9uIHRoYXQgaWRlbnRpZmllcyB5b3UsIGFuZCB3aWxsIGluc3RlYWQgY29sbGVjdCBtb3JlIGdlbmVyYWwgaW5mb3JtYXRpb24gdG8gaGVscCB1cyBhbmFseXNlIGhvdyB3ZWxsIG91ciBXZWJzaXRlIGFuZCBBcHBzIGFyZSBwZXJmb3JtaW5nIG92ZXJhbGwgc28gd2UgY2FuIHRyeSBhbmQgaW1wcm92ZSB0aGVtLkhvdyB3ZSB1c2UgY29va2llc0JNSiB1c2VzIGNvb2tpZXMgb24gaXRzIFdlYnNpdGUgYW5kIEFwcHMgdG8gcGVyZm9ybSBkaWZmZXJlbnQgZnVuY3Rpb25zLiBUaGVzZSBhcmUgZ3JvdXBlZCBpbnRvIGZvdXIgbWFpbiBjYXRlZ29yaWVzOlRlY2huaWNhbGx5IG5lY2Vzc2FyeSBjb29raWVzLiAKQWZ0ZXIgdGFnZ2luZyBNb3JhIHdpdGggaGFyZCBzaG90cyBhdCB0aGUgZW5kIG9mIHJvdW5kIG9uZSwgSmFjb2JzIGNvbnRpbnVlZCB0byBjb21lIGZvcndhcmQgYW5kIHNlbnQgTW9yYSB0byB0aGUgY2FudmFzIHdpdGggYSBmbHVycnkgbGF0ZSBpbiB0aGUgc2Vjb25kIHJvdW5kLiBNb3JhIGFwcGVhcmVkIHRvIGluanVyZSBoaXMgcmlnaHQgbGVnIG9uIHRoZSBrbm9ja2Rvd24gYW5kIHdhcyB1bmFibGUgdG8gY29udGludWUuIFRoZSBvZmZpY2lhbCBzdG9wcGFnZSBjYW1lIDI6NTUgaW50byByb3VuZCB0d28uClNvbWUgcGVvcGxlIGNhbGwgdGhpcyBnYW1lIENoaW5lc2UgUG9rZXIgYmVjYXVzZSBpdCBvcmlnaW5hdGVkIGluIEFzaWEuIApXYXJtIHVwIGFuZCBsb29zZW4uIApBbGwgdGhlIG5hdGlvbnMgb2YgdGhlIHdvcmxkIGdhdGhlciBhcm91bmQgdG8gc2VlIHRoZSBtaWdodHkgd29ya3MgYW5kIGZhdm9yIG9mIHRoZSBMT1JEIGZvciBIaXMgcGVvcGxlLiBUaGUgZnVsZmlsbG1lbnQgb2YgdGhlIHByb3BoZWN5IGluIHZlcnNlIDggaGFzIGNvbWUgdG8gcGFzcy4gClBoYXJtYWNvbG9neSAuIApUaGUganVyeSBmb3VuZCB0aGF0IEdyYW5kaXNvbiBoaXJlZCBWZXJub24gRXZhbnMgdG8ga2lsbCB0aGUgcGFpciBhIGZldyBkYXlzIGJlZm9yZSBQaWVjaG93aWN6IHdhcyB0byB0ZXN0aWZ5IGFnYWluc3QgR3JhbmRpc29uIGluIGEgZmVkZXJhbCBkcnVnIGNhc2UuIApCZWxsIGNyaWVkIHRocm91Z2hvdXQgdGhlIGhlYXJpbmcuIFdoZW4gaXQgd2FzIGhlciB0dXJuIHRvIHNwZWFrLCBzaGUgc2FpZCwgIkkgd2FudCB0byB0ZWxsIG15IGJhYnkgaG93IHNvcnJ5IEkgYW0sIiBhbmQgdGhhdCBzaGUgc2hvdWxkIGhhdmUgcHJvdGVjdGVkIGhpbSBiZXR0ZXIuCkFzIG1hbnkgcGVvcGxlIGhhdmUgY29tcGxhaW5lZCwgcG9zdHMgbGlrZSB0aGVzZSBoYXZlIGJlZ3VuIHRvIHNob3cgdXAgb24gdGhpcyBzdWIgbW9yZSBhbmQgbW9yZSwgYW5kIGl0IG91ciBqb2JzIGFzIG5ldyBtb2RzIGFuZCBvbGQgbW9kcyBhbGlrZSB0byB0cnkgYW5kIGVuc3VyZSB0aGF0IHRoZSBjb250ZW50IHRoYXQgcmVtYWlucyBoZXJlIGlzIGNvbnRlbnQgdGhhdCBmaXRzIG91ciBzdWIuIFRoYXQgYmVpbmcgc2FpZCwgd2UgZG8gbWlzcyBzb21lIHRoaW5ncywgYW5kIHNvbWV0aW1lcyB3ZSBsb2cgaW4gdG8gc2VlIGEgcG9zdCB0aGF0IGRvZXNuIGZpdCB0aGUgc3ViIHBvc3QgZ3VpZGVsaW5lcyAoaW4gdGhpcyBjYXNlLCB0aGUgcG9zdCBpcyBzaW1wbHkgaW50ZW50aW9uYWxseSBmdW5ueSwgbm90IGZ1bm55IG9uIGFjY2lkZW50IGR1ZSB0byBob3cgaG9ycmlibGUgaXQgaXMpIHRoYXQgaGFzIGFtYXNzZWQgdGhvdXNhbmRzIG9mIHVwdm90ZXMuIFR5cGljYWxseSwgd2UgbGVhdmUgdGhlc2UgcG9zdHMgdXAgcmF0aGVyIHRoYW4gcmVtb3ZpbmcgdGhlbSBkdWUgdG8gdGhlIGJhY2tsYXNoIHRoYXQgbWF5IGNyZWF0ZSwgYnV0IGtub3cgdGhhdCB3ZSBhcmUgdHJ5aW5nIHRvIG1vdmUgYXdheSBmcm9tIHRoZXNlIGtpbmRzIG9mIHBvc3RzLiAKVGhhdCBhc2lkZSwgSSB0aGluayBnaXZpbmcgdGhlIGl0ZW1zIGhlIGFza2VkIGZvciB0byB0aGUgc29uIHdvdWxkIGJlIHRoZSByaWdodCB0aGluZyB0byBkby4gCjMsIDIwMTcgZmlsZSBwaG90bywgYSBMYXMgVmVnYXMgcG9saWNlIG9mZmljZXIgc3RhbmRzIGJ5IGEgYmxvY2tlZCBvZmYgYXJlYSBuZWFyIHRoZSBNYW5kYWxheSBCYXkgY2FzaW5vIGluIExhcyBWZWdhcy4gCkZ1bm55IGVub3VnaCwgbXkgcGVyaW9kcyBuZXZlciBzdG9wcGVkLCBldmVuIGF0IHdlbGwgb3ZlciA0MDAgcG91bmRzLiBJIGhhZCBoZWFsdGggYW5kIGRlbnRhbCBpbnN1cmFuY2UgZm9yIHRoZSBwYXN0IDggbW9udGhzLCBhbmQgSSBzdGlsbCBoYXZlbiBiZWVuIHRvIHRoZSBkb2N0b3IuIEJ1dCBJIGRpZCBnbyB0byB0aGUgZGVudGlzdC4uIApBcyBtYW55IHBlb3BsZSBoYXZlIGNvbXBsYWluZWQsIHBvc3RzIGxpa2UgdGhlc2UgaGF2ZSBiZWd1biB0byBzaG93IHVwIG9uIHRoaXMgc3ViIG1vcmUgYW5kIG1vcmUsIGFuZCBpdCBvdXIgam9icyBhcyBuZXcgbW9kcyBhbmQgb2xkIG1vZHMgYWxpa2UgdG8gdHJ5IGFuZCBlbnN1cmUgdGhhdCB0aGUgY29udGVudCB0aGF0IHJlbWFpbnMgaGVyZSBpcyBjb250ZW50IHRoYXQgZml0cyBvdXIgc3ViLiBUaGF0IGJlaW5nIHNhaWQsIHdlIGRvIG1pc3Mgc29tZSB0aGluZ3MsIGFuZCBzb21ldGltZXMgd2UgbG9nIGluIHRvIHNlZSBhIHBvc3QgdGhhdCBkb2VzbiBmaXQgdGhlIHN1YiBwb3N0IGd1aWRlbGluZXMgKGluIHRoaXMgY2FzZSwgdGhlIHBvc3QgaXMgc2ltcGx5IGludGVudGlvbmFsbHkgZnVubnksIG5vdCBmdW5ueSBvbiBhY2NpZGVudCBkdWUgdG8gaG93IGhvcnJpYmxlIGl0IGlzKSB0aGF0IGhhcyBhbWFzc2VkIHRob3VzYW5kcyBvZiB1cHZvdGVzLiBUeXBpY2FsbHksIHdlIGxlYXZlIHRoZXNlIHBvc3RzIHVwIHJhdGhlciB0aGFuIHJlbW92aW5nIHRoZW0gZHVlIHRvIHRoZSBiYWNrbGFzaCB0aGF0IG1heSBjcmVhdGUsIGJ1dCBrbm93IHRoYXQgd2UgYXJlIHRyeWluZyB0byBtb3ZlIGF3YXkgZnJvbSB0aGVzZSBraW5kcyBvZiBwb3N0cy4gClVnaC4gSSBoYXRlIHRoYXQgdGhleSBkb2luZyB0aGF0LiBCbG9jayB0aG9zZSBmb29scy4gQW5kIEkgc2VyaW91c2x5IGRvdWJ0IGFueW9uZSBoYWlyIGlzIG5vdyBncm93aW5nIGJhY2sgZnJvbSB0aGF0IHNoaXQuIE5vbmUgb2YgbXkgRkIgZnJpZW5kcywgb3IgSUcgZnJpZW5kcywgc2VsbCB0aGF0IGNyYXAuIFRoZXkgYWxsIHNlZW0gdG8gZ3Jhdml0YXRlIHRvd2FyZHMgbWFrZXVwIGFuZCBvaWxzLiBCdXQgaXQgYWxsIHRoZSBzYW1lIGF0IHRoZSBlbmQgb2YgdGhlIGRheS4gSSBoYXZlIGEgZnJpZW5kIHRoYXQgYWN0dWFsbHkgZmVlZHMgb2lscyB0byBoZXIga2lkcy4gSSBjcmluZ2UgZXZlcnkgdGltZSBJIHNlZSBoZXIgcG9zdCBmb29kIGFuZCBzYXkgdGhhdCBpbnN0ZWFkIG9mIGFjdHVhbCBsZW1vbiBqdWljZSwgc2hlIHVzZWQgdGhlIG9pbHMuIFVoLiBUaG9zZSBwb29yIGtpZHMuIEJ1dCB5b3UgZmlnaHRpbmcgdGhlIGdvb2QgZmlnaHQuIEl0IHN1Y2tzLiBJIGhhdGUgc3VnZ2VzdGluZyB0byBibG9jayB0aGVtLCBiZWNhdXNlIHRoZXkgdGFrZSB0aGF0IGFzIGEgdmljdG9yeS4gQnV0IHRoZXkgYXJlbiB3b3J0aCBhbnkgc3RyZXNzIG9yIHN0cmlmZS4KQWZ0ZXIgc29tZSB0aW1lIHlvdSBuZWVkIHRvIHRlbGwgdGhlbSB0aGF0IHlvdSBjYW4gZ2V0IHRoZSBjYXJkcyB0aGF0IGhhdmUgYmVlbiByZXZlYWxlZC4gTm93LCBnZXQgdGhlIGNhcmRzIHdoaWNoIHdlcmUgcGxhY2VkIGF0IHRoZSBib3R0b20gb2YgdGhlIGRlY2tzIGFuZCBpZiBwZW9wbGUgY2FuIHBlcmZvcm0gdGhzaSB0cmljayB3ZWxsLCBpdCBjYW4gc3VyZWx5IGFtdXNlIHRoZSBhdWRpZW5jZS4gKEZ1bGwgQW5zd2VyKS4gClByZXNpZGVudCBPYmFtYSB3aWxsIHZpc2l0IENJQSBoZWFkcXVhcnRlcnMgdG9kYXkgdG8gdGFsayB0byBlbXBsb3llZXMgYW5kIG9uY2UgYWdhaW4gZXhwcmVzcyB0d28gY29udHJhZGljdG9yeSB0aG91Z2h0czoKU2hlIHRoaW5rcyB0aGF0IGFzIGxvbmcgYXMgdGhleSBhcmVuIGZvcmNpbmcgaGVyIHRvIGhhdmUgc2V4LCB0aGF0IG5vcm1hbC4gR2V0dGluZyBiZWF0IG9uLCBwcmVzc3VyZWQgdG8gZHJ1ZyBhZGRpY3Rpb24sIGFuZCBkcmFnZ2VkIGFyb3VuZCBpbnRvIHdoYXRldmVyIGRhbmdlcm91c2x5IGV4dHJlbWUgcG9saXRpY2FsIGJhbmRzIHRoZXkgaW50byBpcyBqdXN0IGZpbmUsIGFzIGxvbmcgYXMgdGhleSBkb24gcmFwZSBoZXIuIApadWNrZXJiZXJnJ3MgbmV3ICJwcml2YWN5IGZvY3VzZWQgdmlzaW9uIiBmb3IgRmFjZWJvb2sgbG9va3MgbGlrZSBhIHRyYW5zZm9ybWF0aXZlIG1pc3Npb24gc3RhdGVtZW50IGZvciB0aGUgbXVjaCBjcml0aWNpemVkIHNvY2lhbCBuZXR3b3JrLiAKVGhlIFNlbmF0ZSBSZXB1YmxpY2FuIGxlYWRlciwgTWl0Y2ggTWNDb25uZWxsIG9mIEtlbnR1Y2t5LCBzYWlkIE9iYW1hIHNob3VsZCBmb2xsb3cgdGhlIG1pbGl0YXJ5IGFkdmljZS4gTWNDb25uZWxsIHNhaWQgUGV0cmFldXMgImRpZCBhIGdyZWF0IGpvYiB3aXRoIHRoZSBzdXJnZSBpbiBJcmFxLiBJIHRoaW5rIGhlIGtub3dzIHdoYXQgaGUgZG9pbmcuIEdlbi4gTWNDaHJ5c3RhbCBpcyBhIHBhcnQgb2YgdGhhdC4gV2UgaGF2ZSBhIGxvdCBvZiBjb25maWRlbmNlIGluIHRob3NlIHR3byBnZW5lcmFscy4gSSB0aGluayB0aGUgcHJlc2lkZW50IGRvZXMgYXMgd2VsbC4iCktleSBXZXN0IFRvIE9mZmVyIEZsaWdodHMgVG8gQ3ViYVRoZSBDb25jaCBSZXB1YmxpYydzIHNvdXRoZXJubW9zdCBjaXR5IHdpbGwgc29vbiBiZSBvZmZlcmluZyBmbGlnaHRzIHRvIHRoZSBSZXB1YmxpYyBvZiBDdWJhLiBLZXkgV2VzdCBJbnRlcm5hdGlvbmFsIEFpcnBvcnQgaGFzIGJlZW4gZ2l2ZW4gZmVkZXJhbCBhcHByb3ZhbCB0byBvZmZlciBjaGFydGVyIGZsaWdodHMgdG8gQ3ViYS4KS2FsbSBzYWlkIGhlIHByZWZlcnMgdG8gaGF2ZSBtb3JlIHJvb21zIHNvIGNoYXJpdGllcyBjYW4gaG9zdCBnYW1lcyBjbG9zZSB0byB0aGVpciBob21lIGJhc2UgaW5zdGVhZCBvZiB0cmF2ZWxpbmcgYWNyb3NzIHRoZSBzdGF0ZS4uIApBbHNvIHdvcnRoIG5vdGluZzogdGhlIG1vZGVybiB3b3JsZCBjaHVybnMgb3V0IHBlb3BsZSBhcyB3aXNlIGFzIFBsYXRvLCBhcyBzbWFydCBhcyBBcmNoaW1lZGVzLCBhbmQgYXMgcG9saXRpY2FsbHkgc2F2dnkgYXMgUGVyaWNsZXMgZXZlcnkgd2Vlay4gVGhlIEdyZWVrcyB3ZXJlbiBzdXBlcm1lbiwgdGhleSBqdXN0IHN0b29kIHRhbGxlciB0aGFuIHRoZSBzdWJzaXN0ZW5jZSBmYXJtZXJzIGFyb3VuZCB0aGVtLCBhbmQgc29sdmVkIHByb2JsZW1zIHRoYXQgbm9ib2R5IGluIGh1bWFuIGhpc3RvcnkgaGFkIGV2ZXIgcHJldmlvdXNseSBoYWQgdGltZSB0byBjb25zaWRlci4gClRoZSBzYW5kIGlzIGV2ZXJ5dGhpbmcgZWxzZSB0aGUgc21hbGwgc3R1ZmYuICJJZiB5b3UgcHV0IHRoZSBzYW5kIGludG8gdGhlIGphciBmaXJzdCwiIGhlIGNvbnRpbnVlZCwgInRoZXJlIGlzIG5vIHJvb20gZm9yIHRoZSBwZWJibGVzIG9yIHRoZSBnb2xmIGJhbGxzLiBUaGUgc2FtZSBnb2VzIGZvciBsaWZlLiBJZiB5b3Ugc3BlbmQgYWxsIHlvdXIgdGltZSBhbmQgZW5lcmd5IG9uIHRoZSBzbWFsbCBzdHVmZiB5b3Ugd2lsbCBuZXZlciBoYXZlIHJvb20gZm9yIHRoZSB0aGluZ3MgdGhhdCBhcmUgaW1wb3J0YW50IHRvIHlvdS4KSSBkaWRuJ3QgcmVhbGl6ZSBzaGUgd291bGQgaGF2ZSB0byByZXR1cm4gdG8gQnJhemlsIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgSzEgdmlzYSBpZiBzaGUgd2FudGVkIHRvIHJlbWFycnkgYW5kIHN0YXkgaGVyZSBpbiB0aGUgVVMuIEkgaGF2ZSBhIGZlZWxpbmcgaGVyIGxhd3llcnMgYXJlIHRoZSByZWFzb24gc2hlIHN0b3BwZWQgcG9zdGluZyBhbGwgdGhvc2UgcGFydHkgcGljcyB3aXRoIGhlciBuZXcgYm95ZnJpZW5kLiBUaGF0IGNhbid0IGxvb2sgdG9vIGdvb2QgZm9yIGhlciBjYXNlLiBJbiBhbiBlZmZvcnQgdG8gbWFrZSBDb2x0IGplYWxvdXMsIHNoZSBsaWtlbHkgc2NyZXdlZCBoZXJzZWxmIG92ZXIgcmVnYXJkaW5nIGhlciBpbW1pZ3JhdGlvbiBzdGF0dXMuIFRoYXQgd291bGQgYmUgc3dlZXQsIHN3ZWV0IGthcm1hIGlmIHRoZXkgc2VudCBoZXIgYmFjayBiYXNlZCBvbiBoZXIgc29jaWFsIG1lZGlhIHBvc3RzLiBTaGUgd2lsbCBob3BlZnVsbHkgZ2V0IGhlcnNlbGYgZGVwb3J0ZWQuClRoZXJlIG1heSBiZSBub3RoaW5nIHdyb25nIHdpdGggdGhlIHRoeXJvaWQgZ2xhbmQgaXRzZWxmLiBUaGUgcGl0dWl0YXJ5IGlzbid0IHNlbmRpbmcgaXQgdGhlIHJpZ2h0IG1lc3NhZ2VzLi4gClRyYWRlIGFncmVlbWVudHMgYXJlIG9mIGNvdXJzZSB3b3J0aGxlc3MgaWYgdGhleSBhcmUgbm90IGltcGxlbWVudGVkLiAiSXQncyBvbmUgdGhpbmcgdG8gd3JpdGUgZG93biB0aGUgdGVybXMgYW5kIHRoZSBjb25kaXRpb25zOyBpdCdzIGFub3RoZXIgdGhpbmcgdG8gdGhpbmsgYWJvdXQgZW5mb3JjZW1lbnQsIiBzYWlkIFpoYW8uIAooMTEpIE1vc3QgaW1wb3J0YW50bHksIHN1YiBvY2NpcGl0YWwgbXVzY2xlcyBwcm9wcmlvY2VwdGl2ZSBpbnB1dCAoYWxvbmcgd2l0aCB2ZXN0aWJ1bGFyIG9yZ2FuIGFuZCBvY3Vsb21vdGVyIGFmZmVyZW50IGlucHV0KSBkbyBtdWNoIG1vcmUgdGhhbiBtb25vc3luYXB0aWMgZXhjaXRhdGlvbiBvZiBhbHBoYSBtb3RvbmV1cm9ucy4gVGhleSBzZW5kIGFmZmVyZW50IGlucHV0IHRoYXQgaW50ZWdyYXRlcyBhdCBudW1lcm91cyByZWdpb25zIG9mIHRoZSBuZXVyb2F4aXMsIGluY2x1ZGluZyB0aGUgdmVzdGlidWxhciBudWNsZXVzLCB2aXN1YWwgcmVsYXlzIGluIHRoZSBtZXNlbmNlcGhhbG9uICh3aGVyZSB0aGUgcGVyaWFxdWVkdWN0YWwgZ3JheSBsaXZlcyksIHRoZSB0aGFsYW11cywgYW5kIHRoZSBjb3J0ZXguCjIwMTEgbWFya2VkIHRoZSBmaXJzdCB5ZWFyIEZUUCBoYXMgZ3Jvd24gdGhlaXIgb3duIHByb2R1Y2UgZm9yIGRpc3RyaWJ1dGlvbi4gUGFydG5lcmluZyB3aXRoIERvdWcgYW5kIEhlaWRpIE1vaXIgYXQgUmVkdGFpbCBGYXJtLCB0aGUgZG9uYXRlZCBsYW5kIHByb2R1Y2VkIDEsNTAwbGJzIG9mIGNhcnJvdHMsIGdyZWVuYmVhbnMsIHJhZGlzaGVzIGFuZCBtb3JlLiAKSXQgdGFrZXMgYW4gYWN0IG9mIHdpbGwgYW5kIGEgc3BlY2lhbCBjb250cmFjdCB3aXRoIHlvdXJzZWxmIHRvIGNvbWJhdCB0aGVzZSB0ZW5kZW5jaWVzLiBEdWtlIGFkdm9jYXRlcyB0b3VnaCBzZWxmIGxvdmUgaW4gdGhlIHNlcnZpY2Ugb2YgInRydXRoc2Vla2luZy4iIE5vIHdoaW5pbmcgYWJvdXQgYmFkIGx1Y2suIE5vIHBhdHRpbmcgb3Vyc2VsdmVzIG9uIHRoZSBiYWNrLiAKSXQgd2FzIHRoZSBvbmdvaW5nIGlnbm9yYW5jZSBhYm91dCB0aGlzIGNsaW5pY2FsIGVudGl0eSB0aGF0IG1vdGl2YXRlZCB0aGUgZm91bmRlcnMgb2YgdGhpcyBzb2NpZXR5IHRvIGVzdGFibGlzaCBhIGZvcm1hbCBvcmdhbml6YXRpb24uIE9uZSBvZiBvdXIgZ29hbHMgaXMgZm9yIHRoaXMgZW50aXR5IHRvIGJlIGFjY2VwdGVkIGludG8gdGhlIGdlbmVyYWwgaGVhZGFjaGUgY2xhc3NpZmljYXRpb24sIGFuZCB1bnRpbCB0aGlzIGhhcHBlbnMsIGxhcmdlIG51bWJlcnMgb2YgcGF0aWVudHMgd2lsbCBjb250aW51ZSB0byBzdWZmZXIgdW5uZWNlc3NhcmlseS4gCkl0J3Mgbm8gd29uZGVyIFBhY2tlciBmYW5zIGNoZWVyIGZvciB3aG9ldmVyIGlzIHBsYXlpbmcgdGhlIFZpa2luZ3MuLiAKVGhvbWFzIHNhaWQgVHJ1bXAgd2FzICJvdXRzaWRlIHRoZSBub3JtLCIgd2hpY2ggbWFkZSBoaW0gYW4gaW50ZXJlc3Rpbmcgc3ViamVjdDoKUGVvcGxlIG9uIHRoZSBXaXNjb25zaW4gc2lkZSBvZiB0aGUgU3QgQ3JvaXggUml2ZXIgdXNlIHRoZSBleHByZXNzaW9uIGV2ZXJ5IGRheSwgd2hpbGUgcGVvcGxlIGEgbWlsZSBhd2F5IG9uIHRoZSBNaW5uZXNvdGEgc2lkZSBoYXZlIG5ldmVyIGV2ZW4gaGVhcmQgdGhlIGV4cHJlc3Npb24gKGFuZCB0aGVyZSBpcyBhbiBpbnRlcnN0YXRlIGFuZCBzaG9ydCBicmlkZ2UgY29ubmVjdGluZyB0aGUgMiBhcmVhcyEpLi4gClBvc3RzIGFuZCBjb21tZW50cyBtdXN0IGJlIG1hZGUgZnJvbSBhbiBhY2NvdW50IGF0IGxlYXN0IDEwIGRheXMgb2xkIHdpdGggYSBtaW5pbXVtIG9mIDIwIGNvbW1lbnQga2FybWEuIEV4Y2VwdGlvbnMgbWF5IGJlIG1hZGUgb24gYSBkaXNjcmV0aW9uYXJ5IGJhc2lzLgpGdWxsIGRpc2Nsb3N1cmUsIEkgd29ya2VkIHdpdGggY3JvY29kaWxlcywgY2FwdHVyZWQgdGhlbSAod2hpY2ggcmVxdWlyZXMgd3Jlc3RsaW5nIHRoZW0pIGFuZCBhbGwgdGhhdC4gRXZlcnlvbmUgSSB3b3JrZWQgd2l0aCBsb3ZlZCBoaW0gYW5kIHJlc3BlY3RlZCBhbGwgdGhlIHdvcmsgaGUgZGlkIHRvIGNvbnNlcnZlIHdpbGRsaWZlLiBIZSB1c2VkIGFsbCBoaXMgbW9uZXkgYW5kIHNldCB1cCBodWdlIHJlc2VydmVzLiBIZSB3YXMgYSBncmVhdCBndXkgaW4gdGhhdCByZXNwZWN0LiBCdXQuClRoZXJlIGlzIGEgY291bnRlcnBhcnQgb2YgdGhlIG9ubGluZSBwb2tlciBzaG93IGZyZWVyb2xsLiBJdCBpcyBhIGRpZmZlcmVudCwgYnV0IHN0aWxsIGFzIHBvcHVsYXIgdG91cm5leSBjYWxsZWQgdGhlIHBsYXkgbW9uZXkgdG91cm5hbWVudC4iCkZvciBhbGwgb2Ygb3VyIHJlbGlnaW9uLCBwaGlsb3NvcGh5IGFuZCBzY2llbmNlLCBtdWNoIG9mIHdoYXQgZHJpdmVzIHVzIGVhY2ggYW5kIGV2ZXJ5IGRheSBhcmUgaW5zdGluY3R1YWwgbW90aW9ucyBhbmQgaW50ZW50aW9ucy4uIApQbHVzIHRoZXJlIGlzIGp1c3Qgc29tZXRoaW5nIGFib3V0IGxheWluZyBvbiBhIG1hc3NhZ2UgdGFibGUgd2l0aCB0aGUgbGlnaHRzIGRpbW1lZCBhbmQgc29mdCBtdXNpYyBwbGF5aW5nIHRoYXQgbWFrZXMgaXQgc2VlbXMgc28gbXVjaCBtb3JlIHNwZWNpYWwuIDEgcG9pbnQgIHN1Ym1pdHRlZCAyIGRheXMgYWdvClRob3VzYW5kcyBvZiB5ZWFycyBiZWZvcmUgY29tbWVyY2lhbCBwcm9kdWN0cyB3ZXJlIGF2YWlsYWJsZSwgYW5jaWVudCBFZ3lwdGlhbnMgbWFkZSBwb3dkZXJzLCBvaW50bWVudHMgYW5kIGxvdGlvbnMgYnkgY29tYmluaW5nIHBsYW50IGV4dHJhY3RzIHdpdGggbmF0dXJhbCBvaWxzIFtzb3VyY2U6IFNsYXBha10uIApUaGlzIGNvbW1lbnQgaGFzIGJlZW4gcmVtb3ZlZC5UZXh0IGFuZCBsaW5rIHBvc3RzIHNob3VsZCBiZSBwcm9wZXJseSBzcG9pbGVyIHRhZ2dlZCBhbmQgc2hvdWxkIGluY2x1ZGUgdGhlIG5hbWUocykgb2YgdGhlIHNob3cocykgcmVmZXJlbmNlZCBpbiB0aGUgdGl0bGUuIFRleHQgcG9zdHMgbWF5IG9wdCB0byB0YWcgc3BvaWxlcnMgaW4gdGhlIFRleHQgcG9zdCBpbnN0ZWFkLiAKSXQgb2Z0ZW4gdGFrZXMgYSBsb3QgdG8gc3RheSB3aXRoIHlvdXIgaW5uZXIgZ29kZGVzcywgc3RheSB3aXRoIHlvdXIgc2Vuc3VhbGl0eSwgd2hlbiBleHBsb3JpbmcgdGhlIGZpZWxkIG9mIHNlZHVjdGlvbiwgYXMgeW91IGhhdmUgdG8gcmVtZW1iZXIgdGhhdCB5b3VyIGhlYXJ0IGlzIGJlYXV0aWZ1bCB3aGV0aGVyIHlvdXIgZWdvIGNvbWVzIGluIGFuZCBkZXN0cm95cyB0aGUgZGFuY2UgeW91IGp1c3QgcHJlcGFyZWQgYnkgbWFraW5nIHlvdSB0cmlwIHVwLCBvciB5b3UgZG8gdGhlIHBlcmZlY3QgZGFuY2UuIApObyBhbW91bnQgb2YgZW5mb3JjZW1lbnQgb3IgcHVuaXNobWVudCB3aWxsIGhhdmUgYW55IGVmZmVjdCwgYnV0IGl0IHdpbGwgY29zdCB1cyBhIHRyZW1lbmRvdXMgYW1vdW50IG9mIG1vbmV5LiAKRmFsayB0aHJvd3MgMyBURHMsIE5vLiAxOSBXYXNoaW5ndG9uIFN0YXRlIGJlYXRzIFV0YWggMzMgMjVXYXNoaW5ndG9uIFN0YXRlIHYgVXRhaFNBTFQgTEFLRSBDSVRZLCBVVCAgIE5PVkVNQkVSIDExOiBIZWFkIGNvYWNoIE1pa2UgTGVhY2ggb2YgdGhlIFdhc2hpbmd0b24gU3RhdGUgQ291Z2FycyB0YWxrcyB3aXRoIGhpcyBwbGF5ZXJzIG9uIHRoZSBzaWRlbGluZSBkdXJpbmcgdGhlIHNlY29uZCBoYWxmIG9mIHRoZWlyIDMzIDI1IHdpbiBvdmVyIHRoZSBVdGFoIFV0ZXMgYXQgUmljZSBFY2NsZXMgU3RhZGl1bSBvbiBOb3ZlbWJlciAxMSwgMjAxNyBpbiBTYWx0IExha2UgQ2l0eSwgVXRhaC4gKFBob3RvIGJ5IEdlbmUgU3dlZW5leSBKci9HZXR0eSBJbWFnZXMpLiAKQWNjb3JkaW5nIHRvIGRhdGEgZnJvbSBBbGxpYW56IEdsb2JhbCBBc3Npc3RhbmNlLCBhIGxlYWRpbmcgdHJhdmVsIGluc3VyYW5jZSBjb21wYW55LCBzdGF0aXN0aWNzIHNob3cgdGhhdCBOZXcgWW9yayBDaXR5IGNsYWltcyB0aGUgbnVtYmVyIG9uZSBzcG90IGZvciByb21hbnRpYyBkZXN0aW5hdGlvbnMgaW4gMjAxOSBmb3IgdGhlIHRoaXJkIHllYXIgaW4gYSByb3cuIApBIFN3aXNzIHN0dWR5IG9mIDI2NSBwc3ljaG90aWMgcGF0aWVudHMgcHVibGlzaGVkIGluIEZyb250aWVycyBvZiBGb3JlbnNpYyBQc3ljaGlhdHJ5IGxhc3QgSnVuZSBmb3VuZCB0aGF0IG92ZXIgYSB0aHJlZSB5ZWFyIHBlcmlvZCwgeW91bmcgbWVuIHdpdGggcHN5Y2hvc2lzIHdobyB1c2VkIGNhbm5hYmlzIGhhZCBhIDUwIHBlcmNlbnQgY2hhbmNlIG9mIGJlY29taW5nIHZpb2xlbnQuIFRoYXQgcmlzayB3YXMgZm91ciB0aW1lcyBoaWdoZXIgdGhhbiBmb3IgdGhvc2Ugd2l0aCBwc3ljaG9zaXMgd2hvIGRpZG4ndCB1c2UsIGV2ZW4gYWZ0ZXIgYWRqdXN0aW5nIGZvciBmYWN0b3JzIHN1Y2ggYXMgYWxjb2hvbCB1c2UuIApQdXJzdWFudCB0byBDaXR5IG9mIEZvcnQgTGF1ZGVyZGFsZSBPcmRpbmFuY2UgQyAxOSAwMywgU2VjLiAKWW91IGNhbiBhbHdheXMgY2hlY2sgdGhlIGRvd25sb2FkIHByb2dyZXNzLCBwYXVzZSBvciByZXN1bWUgZnJvbSB5b3VyIHBlcnNvbmFsIHVzZXJzLiAKRXZlbnQgaXMgYWxsIHJ1biBieSBzcG9uc29yc2hpcCBkb2xsYXJzIGFuZCB0aGF0IGlzIGhvdyB3ZSBhcmUgYWJsZSB0byBtYWtlIGl0IGEgZnJlZSBldmVudCwgc2FpZCBNaWNoZWxlIFN0b2tlbHksIGNvIGNyZ2FuaXplciBmb3IgdGhlIGFubnVhbCBldmVudC4gCk9ubHkgdGhpbmcgIm1hcnJpZWQiIGd1YXJhbnRlZXMgaXMgdGhhdCBib3RoIHdpbGwgaGF2ZSBhIGNsYWltIHRvIGFueSBhbmQgYWxsIHByb3BlcnRpZXMsIGluY2x1ZGluZyBjaGlsZHJlbi4uIApUaGUgYWR2ZW50dXJlcyBhcm91bmQgdGhlIGxha2UgYW5kIHRoZSBpc2xhbmRzIHdlcmUgYWx3YXlzIHJlbGlzaGVkLCBidXQgdGhlIG1vbWVudHMgYXJvdW5kIHRoZSBib24gZmlyZXMsIHRoZSB0YWxraW5nLCB0aGUgbGlzdGVuaW5nLCB0aGUgc3RvcmllcywgdGhlIGJ1aWxkaW5nIG9mIHRob3NlIGdyZWF0IGJpZyBmaXJlcywgd2VsbCwgdGhleSB3ZXJlIHByaWNlbGVzcy4gCldpdGhpbiB3YWxraW5nIGRpc3RhbmNlIG9mIHRoZSBHaWxhIFJpdmVyIEFyZW5hIFdlc3RnYXRlIENpdHkgQ2VudGVyLCBlbmpveSBlYXN5IGFjY2VzcyB0byBkb3dudG93biBQaG9lbml4IEdsZW5kYWxlIGF0dHJhY3Rpb25zLgpJbiBhIGpvbHRpbmcgcmVzdHJ1Y3R1cmluZyB1bnZlaWxlZCBUdWVzZGF5LCBDRU8gQm9iIFNhdWVyYmVyZyBvZiBkb21lc3RpYyBDb25kIE5hc3QgUHVibGljYXRpb25zIHdhcyBib3VuY2VkIGFuZCBJbnRlcm5hdGlvbmFsIENFTyBKb25hdGhhbiBOZXdob3VzZSB3YXMgbmFtZWQgY2hhaXJtYW4gb2YgYSAibmV3IENvbmQgTmFzdCIgdGhhdCB3aWxsIGNvbWJpbmUgZG9tZXN0aWMgYW5kIG92ZXJzZWFzIHVuZGVyIG9uZSB1bWJyZWxsYS4KSSBnZXQgaXQsIHNvbWV0aW1lcyB5b3UgZ28gb24gZGF0ZXMgd2l0aCBwZW9wbGUgYW5kIHRoZXkgY3JlZXB5IG9yIGFnZ3Jlc3NpdmUuIFByb3BlciByZXNwb25zZSBpcyBzYXkgImZ1Y2sgb2ZmIi4gSWYgdGhleSBkb24gdGhlbiBpbmRlZWQsIGNhbGwgdGhlIGZ1Y2tpbmcgcG9saWNlLCBJZiB0aGV5IGRvPyBGdWNraW5nIGdldCBvdmVyIGl0IGFuZCBtb3ZlIG9uIHdpdGggeW91ciBsaWZlIGxpa2UgYSBnb2RkYW1uIGFkdWx0LiAKQWxzbywgZ2VuZXJhbCBib3NzIHRpcDogVGhlIG1vc3Mgc2hpZWxkIHdoaWNoIHlvdSBnZXQgcHJldHR5IGVhcmx5IChjYW4gcmVtZW1iZXIgd2hlbiBleGFjdGx5KSBtYWtlcyBtb3N0IGJvc3MgZmlnaHRzIG11Y2ggZWFzaWVyLiBJdCBoYXMgUyBUb3VnaG5lc3Mgd2l0aCBsb3cgc3RhdCByZXF1aXJlbWVudHMsIHRoZSBkb3duc2lkZSBiZWluZyB0aGF0IGl0IGRyYWlucyBzdGFtaW5hIHdoZW4gaG9sZGluZyBibG9jay4gClRoZXJlIGFsc28gcnVwYSwgYW5vdGhlciBmcnVpdCBvZiBjaXR0YSwgd2hpY2ggaXMgdGhlIGJvdW5kYXJ5IG9mIHRoZSBjb2duaXplZCBvYmplY3QuIApBY3RpdmF0ZWQsIHRoZXkgc2hvdCBwaWxvdHMgdGhyb3VnaCB0aGUgcGxhc3RpYyBjYW5vcHkgbGlrZSBodW1hbiBjYW5ub25iYWxscy4gU29tZXRpbWVzIG1lbiB3ZXJlIGtpbGxlZCBieSBhY2NpZGVudGFsIGVqZWN0aW9ucy4gT3RoZXJzIGxvc3QgbGltYnMgYW5kIGZhY2VzLCB0b3JuIG9mZiBieSB0aGUgcmltIG9mIHRoZSBjb2NrcGl0IG9yIHRoZSBsZXRoYWwgd2FsbCBvZiBhaXIuIApJIHdhbnQgc29tZXRoaW5nIG1vcmUgdGhhbiBqdXN0IGNob29zaW5nIGRpZmZlcmVudCB0eXBlcyBvZiBndW5zIGFuZCBtYXliZSBhIHN3b3JkIG9mIHNvbWUga2luZCB3aGVuIGl0IGNvbWVzIHRvIGNvbWJhdC4gCkFzIHN0YXRlZCBhYm92ZSwgdGhlIG1vc3QgaW1wb3J0YW50IGRlY2lzaW9uIHlvdSBtYWtlIGFzIGEgSG9sZCdlbSBwbGF5ZXIgaXMgd2hldGhlciBvciBub3QgdG8gZW50ZXIgdGhlIHBvdCAob3IgcGxheSBmb3IgdGhlIHBvdCkuIApUaXBzIGFuZCBTdHJhdGVneQpEaWQgeW91IGhlYXIgbWU/IHNvcnJ5LCBNb20uIFllcywgSSBoZWFyZCB5b3UuIEl0IGJlZW4gc28gbG9uZyBzaW5jZSBJIHRob3VnaHQgb2ZoaW0uIEkgc29ycnksIGJ1dCBJIGhvbmVzdGx5IHRob3VnaHQgaGUgZGllZCB5ZWFycyBhZ28sIEphY2sgc2FpZCBoZSBkaWRuIGZvcmdldCB5b3UuIEV2ZXJ5IHRpbWUgSSBzYXcgaGltIGhlIGFzayBob3cgeW91IHdlcmVkb2luZy4gSGUgcmVtaW5pc2NlIGFib3V0IHRoZSBtYW55IGRheXMgeW91IHNwZW50IG92ZXIgc2lkZSBvZnRoZSBmZW5jZSBhcyBoZSBwdXQgaXQsIE1vbSB0b2xkIGhpbS4KR2VkdXJlbmRlIG1pam4gRUZMUCAxIHN0YWdlIG1vY2h0IGlrIHplbGZzdGFuZGlnIG1hYXIgb25kZXIgc3VwZXJ2aXNpZSBwYXRpbnRlbiBvbmRlcnpvZWtlbiBlbiBiZWhhbmRlbGVuLiAKVGhlIG9yaWdpbiBvZiBjYXRzIGlzIHBlcmhhcHMganVzdCBhcyBtdWNoIG9mIGEgbXlzdGVyeSBhcyB0aGUgc3BlY2llcyBpdHNlbGYuIE1vc3QgZXhwZXJ0cyB3aWxsIGFncmVlIHRoYXQgdGhlIGNhdCBpcyBhIGRlc2NlbmRhbnQgb2YgdGhlIEFmcmljYW4gd2lsZCBjYXQsIGJ1dCBob3cgZGlkIGl0IGdvIGZyb20gd2lsZCBodW50ZXIgdG8gZG9tZXN0aWMgcGV0PyBXZSB1c2VkIHRvIHRoaW5rIHRoYXQgZG9tZXN0aWMgY2F0cyBlbWVyZ2VkIGluIGFuY2llbnQgRWd5cHQgbW9yZSB0aGFuIDMsMDAwIHllYXJzIGFnbywgYnV0IHJlY2VudGx5LCBleHBlcnRzIGNvbmR1Y3RlZCBhIHN0dWR5IGFuZCB0cmFjZWQgdGhlIGRvbWVzdGljIGNhdCBhbGwgdGhlIHdheSBiYWNrIHRvIHRoZSBGZXJ0aWxlIENyZXNjZW50LCBhbiBhbmNpZW50IEFzaWFuIGhvdCBzcG90IG9mIGNpdmlsaXphdGlvbiwgc29tZSAxMCwwMDAgeWVhcnMgYWdvIFtzb3VyY2U6IFNjaWVudGlmaWMgQW1lcmljYW5dLgpTbywgTHltb25kIGFza3MgQ2hyaXN0aWFuIGFib3V0IEpDLiAKVGhlIGlzb2xhdG9yIGVsaW1pbmF0ZXMgYW55IGV4cG9zdXJlIHRvIG91dHNpZGUgYWlyLCBjb250YW1pbmFudHMsIGFuZCBjb21tZW5zYWwgYmFjdGVyaWEuIE11Y2ggb2YgdGhpcyB3b3JrIGRyYXdzIHVwb24gc3RhbmRhcmQgYW5pbWFsIGJlaGF2aW9yYWwgdGVzdHMgdGhhdCBtZWFzdXJlIGFjdGl2aXR5LCBhcHByb2FjaCwgYW5kIGF2b2lkYW5jZS4gTWljZSBoYXZlIGEgbmF0dXJhbCB0ZW5kZW5jeSB0byBleHBsb3JlIHRoZWlyIGVudmlyb25tZW50IHdoaWxlIGF2b2lkaW5nIG9wZW4gYW5kIGJyaWdodGx5IGxpdCBhcmVhcy4gVGhlIGVsZXZhdGVkIHBsdXMgbWF6ZSwgYSBiZWhhdmlvcmFsIGFwcGFyYXR1cyB0aGF0IGlzIGVsZXZhdGVkIGFib3ZlZ3JvdW5kIChGaWcuIApIZWFsdGggaW5zdXJhbmNlIGhhcyB0byBiZSBub24gcHJvZml0LiAKSSBqdXN0IHJlbWVtYmVyZWQgdGhpcyBhcyB3ZWxsOgpDb21wcm9taXNlIGludm9sdmVzIGdpdmluZyBzb21lb25lIHNvbWV0aGluZyB0aGV5IHdhbnQsIG5vdCB3aGF0IHlvdSB0aGluayB0aGV5IHdhbnQuCkl0IGZ1bm55LCB0aG91Z2guIFdlIGhhZCBhIHByZXR0eSBiaWcgYmV0IGluIDIwMTMgMTQuIApJdCBpcyBhbHNvIGtub3duIGFzIGEgYnJvbmNoaWFsIHNtb290aCBtdXNjbGUgcmVsYXhhbnQuLiAKSGFkIGFkdmVudHVyZXMuLiAKVHdvIGJvdXRzIG9mIHZ1bHZhciBtZWxhbm9tYSB3aXRoaW4gOSBtb250aHMgb2YgZWFjaCBvdGhlciBhbmQgcG9zc2libGUgZnVydGhlciB0cmVhdG1lbnQgYW5kIHBvdGVudGlhbGx5IG1vcmUgbWVsYW5vbWEgYWxsIG92ZXIgbXkgYm9keSBhbmQgSSBjYW4gZmluZCBhIGRlcm1hdG9sb2dpc3Qgd2hvIHdpbGwgc2VlIG1lLiAKWW91IG5vdCBiZWNvbWUgcHJvZmVzc2lvbmFsIGpvdXJuYWxpc3QgeW91IGdvdCB0byBkbyBqb2IgYmV0dGVyLCBIZXh0YWxsIGFuZCBIYWtzdG9sIG5lZWQgMTAgeWVhcnMgc28gYWxsIHRoZXJlIGZsb3dlcnMgY2FuIGJsb29tIGl0IHRha2VzIGxvbmcgdGltZSB0byBibG9vbSBqdXN0IGxpa2UgdW5pdmVyc2UgdG9vay4gCkkgZm91bmQgdGhlIGNsYXNzIGEgdHdvIG9uIGEgMTAgcG9pbnQgc2NhbGUgb2YgaW50ZW5zaXR5LiBUaGUgeW9nYSBmbG93IHdhcyBzaW1wbGUgYW5kIGFwcHJvcHJpYXRlIGZvciBiZWdpbm5lcnMuIEl0IHdhc24ndCBhYm91dCBnZXR0aW5nIHRoZSBoZWFydCByYXRlIHVwLCBhcyBtdWNoIGFzIGl0IHdhcyBhYm91dCBvcGVuaW5nLiAKIDE0IHBvaW50cyAgc3VibWl0dGVkIDYgZGF5cyBhZ28iVGhvc2Ugd2hvIGRlc2lyZSB0byBnaXZlIHVwIGZyZWVkb20gaW4gb3JkZXIgdG8gZ2FpbiBzZWN1cml0eSB3aWxsIG5vdCBoYXZlLCBub3IgZG8gdGhleSBkZXNlcnZlLCBlaXRoZXIgb25lLiBBbnkgc29jaWV0eSB0aGF0IHdvdWxkIGdpdmUgdXAgYSBsaXR0bGUgbGliZXJ0eSB0byBnYWluIGEgbGl0dGxlIHNlY3VyaXR5IHdpbGwgZGVzZXJ2ZSBuZWl0aGVyIGFuZCBsb3NlIGJvdGguIApJZiB5b3UgY29uY2VybmVkIGFib3V0IHlvdXIgcGV0IGhlYWx0aCwgcGxlYXNlIGNvbnRhY3QgeW91ciB2ZXQgZm9yIGFkdmljZS4gSWYgdGhleSB1bmF2YWlsYWJsZSwgcGxlYXNlIGNhbGwgYW4gZW1lcmdlbmN5IGFuaW1hbCBob3NwaXRhbCBhcyBzb29uIGFzIHBvc3NpYmxlIHRvIG1ha2Ugc3VyZSB5b3UgY2FuIGdldCB0aGUgaW5mb3JtYXRpb24sIGFkdmljZSwgb3IgaGVscCB5b3UgbmVlZCEgVGhleSBjYW4ganVkZ2Ugd2hldGhlciBpdCBzYWZlIHRvIHdhaXQgdW50aWwgeW91ciByZWd1bGFyIHZldCBpcyBhdmFpbGFibGUsIG9yIGlmIHlvdXIgZG9nIG5lZWRzIHRvIGJlIHNlZW4gaW1tZWRpYXRlbHkuIApKZSBtJ2VmZm9yY2VyYWkgZCdlbiBwdWJsaWVyIHVuIGNvbXB0ZSByZW5kdSB2b2lyIHVuIHJzdW0gZGUgY2VydGFpbnMgcGFzc2FnZXMuIAooRnJvbSBsZWZ0IHRvIHJpZ2h0KSBFbWVyZ2VuY3kgRGVwYXJ0bWVudCBwc3ljaGlhdHJpYyBudXJzZXMgTWFyeSBTaGVydmluIGFuZCBTaGlybGV5IFdpbmdvLCB3aXRoIERyLiBIZSBtYXkgYmUgdGFsa2luZyB0byB0aGUgd2FsbHMsIG9yIHNjcmVhbWluZyBhbmQgcG91bmRpbmcgd2FsbHMsIG9yIHNpdHRpbmcgcXVpZXRseSBmb2N1c2VkIG9uIHRoZSBkZWx1c2lvbnMgc3dpcmxpbmcgdGhyb3VnaCBoaXMgYnJhaW4uIApSdXNzaWEgZGlkIGRvIG1vc3Qgb2YgdGhlIHdvcmsgYmVhdGluZyB0aGUgTmF6aSBidXQgdGhlcmUgaXMgbm8gaW5kaWNhdGlvbiB0aGV5IHdvdWxkIGJvdGhlcmVkIHRvIHN0b3Agdy9vIGEgZnJlc2ggZm9yY2UgaG9sZGluZyB0aGUgb3RoZXIgaGFsZiBvZiBFdXJvcGUgKGFzIGV2aWRlbmNlZCBieSBmYWN0IHRoYXQgdGhlIElyb24gQ3VydGFpbiBiZWNhbWUgYSB0aGluZykuIE1lbiBhbmQgbWF0ZXJpYWwgYWxzbyBrZXB0IHlvdSBmcm9tIGJlaW5nIHJ1biBvdmVyIGluIHRoZSBibGl0ei4gCldlIHJlIGF0IGZpdmUgaHVuZHJlZCBkb2xsYXJzIGFuZCBjb3VudGluZy4gRGVhciBsb3JkLCBvd25pbmcgYSBjYXIgaXMgZXhwZW5zaXZlLCBidXQgaXQgYmVhdHMgcHVibGljIHRyYW5zcG9ydGF0aW9uLiBJIGhhZCB0byB0YWtlIHRoZSBidXMgaW50byB3b3JrIHRvZGF5IGFuZCBtdXN0IGhhdmUgZm9yZ290dGVuIHRvIHRha2UgdGhhdCBsaXR0bGUgc2lnbiBvZmYgbXkgZm9yZWhlYWQgdGhhdCBzYWlkICJJZiB5b3UgcmUgYSBmcmVhayBwbGVhc2UgdGFsayB0byBtZS4iIE15IGlQb2QgZGlkIG5vdGhpbmcgdG8gZGV0ZXIgdGhlIENoYXR0eSBDYXRoeXMuIApUaGUgMTg0NSBBcmN0aWMgZXhwZWRpdGlvbiBvZiBDYXB0YWluIFNpciBKb2huIEZyYW5rbGluIGZvdW5kIHRoaXMgb3V0IHRoZSBoYXJkIHdheSwgYXMgdGhleSBwZXJpc2hlZCB0byB0aGUgbGFzdCBtYW4gaW4gYSBjb25nYSBsaW5lIG9mIHRyYWdlZHk6IHNoaXB3cmVjaywgZGlzZWFzZSwgbGVhZCBwb2lzb25pbmcgZHVlIHRvIGJhZGx5IHRpbm5lZCBmb29kIGFuZC9vciBmYXVsdHkgZGlzdGlsbGVkIHdhdGVyIHN5c3RlbXMsIGFuZCB0aGUgZmFjdCB0aGF0IHRoZXkgd2VyZSBkZXNlcnRlZCBpbiB0aGUgZ29kZGFtbiBBcmN0aWMgd2l0aG91dCBhZGVxdWF0ZSBlcXVpcG1lbnQsIGV2ZW50dWFsbHkgZHJvdmUgdGhlIDEyOSBzdHJvbmcgZ3JvdXAgdG8gY2FubmliYWxpc20gYW5kIGFuIGVhcmx5IGdyYXZlLiBUaGF0J3MgLiAKRm9yIHRoaXMgc3RyYXRlZ3kgdG8gd29yaywgdGhlIGZhc2Npc3QgZmFjdGlvbiBhbmQgdGhlaXIgZmFuYm9pcyBpbiB0aGUgTXVyZG9jaCBwcmVzcyBuZWVkIHRvIGF0IGxlYXN0IGFwcGVhciB0byBmYWxsIGluIGxpbmUgYmVoaW5kIHRoZWlyIG5ldyBnb2xkZW4gYm95IER1dHRvbi4gTXkgd29ycnkgbGF0ZWx5IGlzIHRoYXQgdGhleSBoYXZlIGJlZW4gZG9pbmcgdGhpcyBhIGxpdHRsZSB0b28gd2VsbCwgYW5kIGl0IGhhcyBvZiBjb3Vyc2UgYWxsIGdvbmUgdG8gRHV0dG9uIGhlYWQuIEkgdGhpbmsgQWJib3R0IG1heSBoYXZlIGEgZmlnaHQgb24gaGlzIGhhbmRzIHdoZW4gdGltZSBjb21lcyBmb3IgaGlzIHBhd24gdG8gcmVsaW5xdWlzaCB0aGUgdGhyb25lLi4gCkluIE1hcmNoIG9mIDIwMDQsIHNoZSBsb2NhdGVkIHRoZSBvcmlnaW5hbCBlbmRvY3Jpbm9sb2dpc3Qgd2hvIGhhZCBwdXQgaGVyIG9uIDYgZ3JhaW5zIG9mIEFybW91ciBpbiB0aGUgZWFybHkgMTk3MHMuIEhlciBwdXQgaGVyIGJhY2sgb24gdGhhdCBkb3NlLiAKT2ssIHNvIGR1ZGUsIGl0IG5vdCAxOTg1IGFuZCBJIGNhbiBwcmV0dHkgZWFzaWx5IGp1c3QgZ29vZ2xlIHRoYXQgc2hpdCBhbmQgdGVsbCB5b3UgdGhhdCB5b3UgZG9uIGJ1dCBldmVuIGlmIGl0IFdFUkUgMTk4NSwgaXQgZ3JlYXQgdGhhdCB5b3UgaG9sZCB0aGF0IHJlY29yZCAgIHRlbGwgeW91ciBmcmllbmRzIGFib3V0IGl0ICAgYnV0IG1heWJlIGRvbiBsZWFkIHdpdGggaXQgd2hlbiB0aGV5IGFzayB3aHkgeW91IHRoaW5rIHlvdSBhIGdvb2QgZml0IGZvciB0aGUgam9iLiBCdXQsIEkgZGlncmVzcywgd2Ugd2VyZSB0YWxraW5nIGFib3V0IHdvcmxkIHJlY29yZHMuIApGZWVsIHByZXNzdXJlIHRvIG1ha2UgYSBjbGVhbiBzd2VlcCwgb3IgeW91IG1pZ2h0IHJlZ3JldCBnZXR0aW5nIHJpZCBvZiBzb21ldGhpbmcuIAo/IFZpbGtldCBmIGx0IGFyYmV0ZSBwYXNzYXIgZGlnIHNvbSB5cmtlIGVsbGVyIGJ1c2luZXNzICAgciBkZ2l2bmluZywgU2hvdyBSb29tLCBGcmFuY2hpc2UsIE1lcmNoYW5kaXNpbmcsIGdpdmFuZGUgb2NoIHRpbGxmcmVkc3N0IGxsYW5kZSwgZCBkdSBwbGFuZXJhciBhdHQgYXZzbHV0YSBvY2ggc3RhcnRhIGV0dCBmIHJldGFnIGVsbGVyIGtvbW1hIGluIGkgbiBnb24gYW5uYW4gZm9ybSBhdiBlZ2VuZiByZXRhZ2FuZGUgZWxsZXIgZW50cmVwcmVuIHJza2FwLiBEZXNzYSBueSBvbmxpbmUgdGVrbmlrIHIgbCBtcGFkZSBhdHQgaGFudGVyYSBpbm5laCBsbCBpcyB0dG5pbmcgZnIgbiBmbGVyYSBzdGF0aW9uIG9wZXJhdGlvbmVyIGVsbGVyIHJhZGlvIG4gdHZlcmsgbmF2LCBkIHIgc3R1ZGlvIHYgeGxpbmcgb2NoIHNpZ25hbCBkYXRhIHByZWNpcyBmcmFtZiByIGVsbGVyIGR1IGthbiB2IGxqYSBncmF0aXMgYmV0aiBuYWQuIEthbGxhIG4gdHRlciBkcmFyIGksIGthbiBkZXQgdmFyYSBmIHIgbXlja2V0IHNwZWwgc29tIGR1IGhhciBoIHJ0IHRhbGFzIG9tIG1lbiBkZXQgZmlubnMgcyBtIG5nYSBmbGVyLiBIdXIgZGlnaXRhbCBrYWthbiBzbXVsYXIgdGVrbmlza2EgYmVyb2VuZGUgZyByIG9udCBtIG5nYSBJbnF1aXJpbmcgc2lubmVuIHZpbGwgZyBybmEgdmV0YSBvY2ggc251cnJhIGlnZW4gcyBhdHQgdW5oZWxkIGhqdWxlbiB0YSBpbiBueWEgcmVzdWx0YXQuIFMgbWVkYW4gZGV0IG9zYW5ub2xpa3QgZW4gd2ViYnBsYXRzIGtvbW1lciBhdHQgcGxhbmEgdXQgc2tldmEgc2t1bGxlIGRldHRhIGludGUgdmFyYSBlbiBicmEgYWZmIHJzbW9kZWxsIGYgciBuIGdvbiBvbmxpbmUgZ2FtaW5nIG9yby4gUHJvZHVrdCByZWNlbnNpb25lciB2aXNzYSBmIHJldGFnIHMgcnNraWx0IG55YSBha3QgcmVyIGkgZW4gZHUgZyByIGVsbGVyIGggbGxhIHNpZyB0aWxsIGVuIHZpc3MgdmVuIGVmdGVyIHNsIGVuIGphY2twb3QuCk1heWJlIEkgZGlkbiB3b3JkIGl0IGNvcnJlY3RseS4gSWYgeW91IGNvbXBhcmUgdGhlIGltcG9ydGFuY2Ugb2YgcXVhZHMgdG8gbG93ZXJiYWNrLCBoYW1zdHJpbmdzIGFuZCBnbHV0ZXMgdGhleSBwbGF5IGEgZmFyIHNtYWxsZXIgcm9sZSBmb3IgYWNoaWV2aW5nIGEgYmlnIHRvdGFsIGVzcGVjaWFsbHkgb24gcGVvcGxlIHRoYXQgc3F1YXQgbG93IGJhciB3aGljaCBpbiBteSBleHBlcmllbmNlIGlzIHRoZSBtYWpvcml0eSBvZiBwZW9wbGUgdGhhdCBjb21wZXRlIGJ1dCB0aGF0IG1pZ2h0IGp1c3QgYmUgbXkgcmVnaW9uLgpMZSB0b3Vybm9pIG9mZnJlIDEsNSBtaWxsaW9uIGRlIGRvbGxhcnMgZGUgZ2FpbnMgZXQgcmFzc2VtYmxlIDE2MjVqb3VldXJzIHZlbnVzIGRlIHBhcnRvdXQgZGFucyBsZSBtb25kZSwgcnBhcnRpcyBzdXIgcHJzIGRlIDE1MHRhYmxlcy4gClRoZSBzdG9yeSBvZiBob3cgV2lsbGlhbSBTbGltIHR1cm5lZCB0aGUgMTR0aCBCcml0aXNoIEFybXkgaW50byBhIGZvcm1pZGFibGUgZm9yY2UgdGhhdCBpbmZsaWN0ZWQgdGhlIGxhcmdlc3QgSmFwYW5lc2UgZGVmZWF0IG9uIGxhbmQgaGFzIGJlY29tZSB0aGUgc3RhbmRhcmQgbmFycmF0aXZlIHN1cnJvdW5kaW5nIFNsaW0uIEkgd3JpdHRlbiBhbiBvdmVydmlldyBvZiB0aGUgY2FyZWVyIG9mIFdpbGxpYW0gU2xpbSB3aGljaCBmb2xsb3dzIHRoaXMgbmFycmF0aXZlLi4gClRva2VrY293Ym95ICAyIHBvaW50cyAgc3VibWl0dGVkIDYgbW9udGhzIGFnbwpJIGRpZCBwYXJ0IHRpbWUgZXZlbmluZyByZXRhaWwgd2hlbiBteSBvbGRlc3QgKGFsbW9zdCA1KSB3YXMgNiBtb250aHMgb2xkLiBJIGRpZCBpdCBmb3IgYWJvdXQgMi41IHllYXJzIGFuZCBJIEhBVEVEIGl0LiBJdCB3YXMgYm9yaW5nLCBzb3VsIHN1Y2tpbmcgYW5kIEVWRVJZT05FIEkgd29ya2VkIHdpdGggd2VyZSBzbyBtdWNoIHlvdW5nZXIgdGhhbiBtZSBhbmQgSSBjb3VsZCBub3QgcmV0YXRlIHRvIGFueW9uZS4gCk5lY28yMyAgNiBwb2ludHMgIHN1Ym1pdHRlZCAyIHllYXJzIGFnbwpMYXN0IHllYXIgaW4gRXVyb3BlLCBKb2huc29uIEpvaG5zb24gYmVnYW4gc2VsbGluZyB0aGUgZmlyc3QgcHJlc2NyaXB0aW9uIGRydWcgZGVzaWduZWQgc3BlY2lmaWNhbGx5IGZvciB0cmVhdGluZyBQRS4gSXQncyBjYWxsZWQgUHJpbGlneSwgYW5kIGNsaW5pY2FsIHRyaWFscyByZXZlYWwgdGhhdCBpdCBjYW4gdHJpcGxlIHRoZSB0aW1lIHRvIGVqYWN1bGF0aW9uIGZvciBtZW4gd2hvIG5vcm1hbGx5IGxhc3QganVzdCBhIG1pbnV0ZSBvciB0d28uIFJpZ2h0IG5vdyBpdCdzIGF2YWlsYWJsZSBpbiBhIGhhbmRmdWwgb2YgY291bnRyaWVzLCBpbmNsdWRpbmcgR2VybWFueSwgU3BhaW4sIGFuZCBJdGFseS4gTWF0dCwgaG93ZXZlciwgaXMgb3V0IG9mIGx1Y2sgICBQcmlsaWd5IGlzbid0IGZvciBzYWxlIGluIHRoZSBVbml0ZWQgU3RhdGVzLiBJbiAyMDA1LCB0aGUgRkRBIHJlamVjdGVkIEpvaG5zb24gSm9obnNvbidzIGFwcGxpY2F0aW9uIGZvciBhcHByb3ZhbCwgYWx0aG91Z2ggYSBjb21wYW55IG9mZmljZXIgc2F5cyBpdCBoYXMgYSByYWZ0IG9mIG5ldyByZXNlYXJjaCBhbmQgcGxhbnMgdG8gcmVuZXcgZGlzY3Vzc2lvbnMgd2l0aCB0aGUgRkRBLgpCYWNrIGluIFdyYXRoIGkgbGVkIGEgbG90IG9mIFB1Z3MgYW5kIGRpZG50IHVzZSBHZWFyc2NvcmUuIEkgc3Rvb2QgaW4gRGFsYXJhbiBhbmQgaW5zcGVjdGVkIHBlb3BsZSBmb3IgR2Vhci9FbmNoYW50cy9TcGVjL0FjaGlldmVtZW50cyBhbmQgY291bGQganVnZGUgcHJldHR5IGVhc2lseSBpZiBzb21lb25lIHdvdWxkIGJlIGFibGUgZG8gZG8gYXQgbGVhc3QgZGVjZW50bHkuIEJ1dCBub3cgaSBvbmx5IGhhdmUgdGhlIG9wdGlvbiB0byBsb29rIGF0IGlsZXZlbHMgYW5kIHBvc3NpYmx5IHdoaXNwZXJlZCBhaGNoaWV2bWVudHMuIApXZSBoYWQgc29tZSBzaHNoIGthYm9iIGFuZCBiZWVyIGFuZCBqdXN0IHBlb3BsZSB3YXRjaGVkLi4gClRoZSBhbWF0ZXVycyBjb250ZXN0IHRoZSBsYXN0IGFuZCBGZXJkeSBNdXJwaHkgc2FkZGxlcyB0aGUgZmF2b3VyaXRlIGluIHRoZSBzaGFwZSBvZiBQb2tlciBEZSBTaXZvbGEuIE5pbmEgQ2FyYmVycnkgbG9va3MgYSBzaWduaWZpY2FudCBqb2NrZXkgYm9va2luZyBhbmQgdGhlIHN0YWJsZSBoYXZlIGEgcmVwdXRhdGlvbiBvZiByYXJlbHkgYmVpbmcgZmFyIGF3YXkgd2hlbiB0aGUgbW9uZXkgaXMgZG93bi4gCkwnYXJ0aWNsZSA1NSBkdSBDb2RlIGNpdmlsIGRpc3Bvc2UgcXVlICBsZXMgZGNsYXJhdGlvbnMgZGUgbmFpc3NhbmNlIHNvbnQgZmFpdGVzIGRhbnMgbGVzIHRyb2lzIGpvdXJzIGRlIGwnYWNjb3VjaGVtZW50LCAgbCdvZmZpY2llciBkZSBsJ3RhdCBjaXZpbCBkdSBsaWV1IC4gTGUgbW9tZW50IGRlIGxhIG5haXNzYW5jZSBhcHBhcmF0IGRvbmMgcHJpbW9yZGlhbC4gRHMgbG9ycywgdG91dCBob21tZSBhY3F1aXJlIGxhIHBlcnNvbm5hbGl0IGp1cmlkaXF1ZSBhdSBtb21lbnQgbyBpbCBuYWl0LiAKTXkgZGF1Z2h0ZXJzIGFuZCBJIHJlY2VudGx5IG1vdmVkIHRvIE1vbnRyZWFsLiBJIGFtIG9uIHNhYmJhdGljYWwgZnJvbSBteSBqb2IgYXMgYSBwcm9mZXNzb3IgaW4gVmVybW9udCBhbmQgSSB3YW50ZWQgdGhlbSB0byBleHBlcmllbmNlIGV2ZXJ5dGhpbmcgdGhhdCBjaXR5IGxpZmUgaGFzIHRvIG9mZmVyIChub3QgdG8gbWVudGlvbiBsZWFybiBGcmVuY2gpLiBPbmUgb2YgdGhlIHRoaW5ncyBJIG1pc3MgbW9zdCB3aGVuIEkgbGl2ZSBpbiBWZXJtb250IGlzIHRoZSBleGNlc3MgY29sbGVjdGl2ZSBlbmVyZ3kgb2Ygc28gbWFueSBkaWZmZXJlbnQgc29ydHMgb2YgcGVvcGxlIGphbW1lZCBpbnRvIHN1Y2ggYSByZWxhdGl2ZWx5IHNtYWxsIHNwYWNlLiBDaXRpZXMgaGF2ZSBhIHNvcnQgb2YgZXhjZXNzIG9mIGRpZmZlcmVuY2UgdGhhdCBmb3JjZXMgdXMgdG8gYmUgbW9yZSBhd2FyZSBhbmQgc29tZXRpbWVzIGV2ZW4gbW9yZSB0b2xlcmFudC4KSW4gdGhlIHZpZGVvIHRoZSBiYXQgd2FzIGhpZGluZyBieSB0aGUgd2FsbCBpbiBteSBjdXJ0YWlucyBJIHRocmV3IHNvbWV0aGluZyBuZWFyIGl0IHRvIGtpbmQgb2Ygc3RpciB1cCB0aGUgYmF0IHRvIG1ha2UgaXQgZmx5IGFnYWluLCBob3BpbmcgaXQgd291bGQgbm90aWNlIHRoZSBvcGVuIHdpbmRvdy4gCkVhcmxpZXIgdGhpcyB3ZWVrLCBKb2huIFBhcHBhcywgdGhlIGdyb3VwJ3MgZXhlY3V0aXZlIGRpcmVjdG9yLCBlc3RpbWF0ZWQgdGhlIGN1cnJlbnQgbnVtYmVyIGlzIG5vIGhpZ2hlciB0aGFuIDIgbWlsbGlvbi4uIApOb3cgeW91IHB1dHRpbmcgd29yZHMgaW4gaGlzIG1vdXRoIHRvIG1vdmUgdGhlIGdvYWxwb3N0LiBPZmNvdXJzZSBub2JvZHkgb3dlcyBoaW0gc2hpdCwgYW5kIGlmIHlvdSB1bmhhcHB5IGFib3V0IGhpbSBpdCBwcm9iYWJseSBkb2VzbiBib3RoZXIgaGltLiBZb3VyIGRpc3BsYXlzIG9mIGVudGl0bGVtZW50IG9mIGhpcyB3b3JrcyBzdGlsbCBzaGluZXMgdGhyb3VnaCB0aG91Z2gsIHlvdSBkb24gcmVhbGx5IHNlZW0gdG8gZ2V0IGl0LiBUaGUgd29ybGQgb2YgYXNvaWFmIGRvZXNuIGJlbG9uZyB0byB5b3UsIGFuZCBuZXZlciBoYXMuIE5vdCBjb21wbGV0aW5nIGEgYm9vayBkb2VzbiBtYWtlIGhpbSBhIG5hcmNpc3Npc3QsIGJ1dCB5b3UgZGVtYW5kaW5nIGl0IG1ha2VzIHlvdSBvbmUuIEhpbSBtYWtpbmcgbW9uZXkgb2YgdGhlIGJvb2tzIGlzbiBiZWNhdXNlIG9mIHlvdSwgaXQgYmVjYXVzZSBvZiB3aGF0IGhlIGFjY29tcGxpc2hlZC4gWW91IGxpa2luZyB0aGUgd29ya3MgYXJlIGp1c3QgYSBieXByb2R1Y3Qgb2YgaGltIGRvaW5nIHRoZSB3b3JrLgpBbmQgaWYgeW91IGZvciBpbnN0YW5jZSBhcmUgaW4gYSB2ZXJ5IGdvb2QgcG9rZXIgZ2FtZSwgeW91IGRvbid0IHF1aXQgc2ltcGx5IGJlY2F1c2Ugb2YgaG93IHlvdSBhcmUgZG9pbmcuIApEaWUgSW5oYWx0ZSB1bnNlcmVyIFNlaXRlbiB3dXJkZW4gbWl0IGdydGVyIFNvcmdmYWx0IGVyc3RlbGx0LiAKVGhlaXIgY2FsbHMgb24gdGhlIHJpdmVyIGFjdHVhbGx5IGltcHJvdmUgeW91ciBwb3Qgb2RkcyBiZWNhdXNlIHlvdSBjYW4gYWRkIHRoZXNlIGJldHMgaW50byB5b3VyIGNhbGN1bGF0aW9ucy4gSW4gdGhpcyBpbnN0YW5jZSwgeW91IGNhbiBzYWZlbHkgZmlndXJlIG9uIGFkZGluZyBhdCBsZWFzdCBvbmUgYW5kIHByb2JhYmx5IHR3byBiZXRzIHRvIHRoZSBwb3QuIApZb3UgbW9yZSBhc2tpbmcgYWJvdXQgYmFua3JvbGwgbWFuYWdlbWVudCB0aHJlc2hvbGRzLCBhbmQgZm9yIHRoYXQgSSB3b3VsZCBqdXN0IHNob3QgdGFrZSB3aGVuIHlvdSBoYXZlIGEgc3VmZmljaWVudCBiYW5rcm9sbCBhbmQgbm90IHdvcnJ5IGFzIG11Y2ggYWJvdXQgd2luIHJhdGUuIFdpbiByYXRlIGlzIGltcG9ydGFudCBidXQgaXRzIGFsd2F5cyBzaGlmdGluZyBhbmQgc28gaXRzIGltcG9zc2libGUgdG8gbWVhc3VyZSBhY2N1cmF0ZWx5LiBUaGF0IGluIGFkZGl0aW9uIHRvIHRoZSBiZW5lZml0cyBieSBwYXlpbmcgbGVzcyBwcm9wb3J0aW9uYWwgcmFrZSBhcyB5b3UgbW92ZSB1cCB0aGUgcmFua3MgbWFrZXMgdGhlIGluY2VudGl2ZSB0byBnZXQgb3V0IG9mIHRoZSBtaWNyb3MgYXNhcC4gSSBkb3VidCB5b3UgbGl2aW5nIG9mZiB5b3VyIDEwTkwgd2FnZXMgc28gaWYgeW91IGhhdmUgdG8gYm91bmNlIGJldHdlZW4gMTBOTCBhbmQgMjVOTCAzMCB0aW1lcyBpdCB3b250IHJlYWxseSBtYWtlIGEgZGlmZmVyZW5jZSB0byB5b3VyIGxpZmUuIEhvdyB5b3UgZGVmaW5lIHlvdXIgQlJNIGlzIHVwIHRvIHlvdS4gSSBzaG90IHRvb2sgYXQgMjUgYnV5IGlucyB0aHJvdWdoIDIwME5MIGFuZCBtb3ZlZCBkb3duIGF0IDIwLiBJIHdhcyBjb25maWRlbnQgSSB3YXMgcGxheWluZyB3ZWxsIHRob3VnaC4gTW92aW5nIHRvIDUwME5MIEkgd2FudCB0byBoYXZlIGNsb3NlciB0byA1MCBidXkgaW5zIGJlY2F1c2UgSSBkb24gZmVlbCBuZWFybHkgYXMgZ29vZCBhYm91dCBteSBlZGdlIGFzIEkgaGF2ZSBpbiB0aGUgcGFzdC4KTGl2ZSBwb2tlciBpcyB2ZXJ5IGRpZmZlcmVudCBmcm9tIG9ubGluZSwgYW5kIGhvbWUgZ2FtZXMgLyB1bmRlcmdyb3VuZCBnYW1lcyBhcmUgZGlmZmVyZW50IGZyb20gY2FzaW5vIGdhbWVzLiAKTXlzdGVyeSBraWxsZXIgd2hhbGVzIHNwb3R0ZWQgYnkgc2NpZW50aXN0cyBvZmYgY29hc3Qgb2YgQ2hpbGUgdG8gYmUgbmV3IHNwZWNpZXMgL3JlYWN0IHRleHQgID5BIGtpbGxlciB3aGFsZSB0aGF0IGNvdWxkIGJlIGEgbmV3IHNwZWNpZXMgaXMgdG8gYmUgc3R1ZGllZCBieSBzY2llbnRpc3RzIGZvciB0aGUgZmlyc3QgdGltZSBhZnRlciBpdCB3YXMgc2VlbiBvZmYgdGhlIGNvYXN0IG9mIHNvdXRoZXJuIENoaWxlLiAKQ3VycmVudGx5LCBJIHdvcmtpbmcgdGhyb3VnaCB0d28gZ3JhbW1hcnMuIE9uZSBpcyBBIFJlZmVyZW5jZSBHcmFtbWFyIG9mIE9rbGFob21hIENoZXJva2VlIChNb250Z29tZXJ5IEFuZGVyc29uIDIwMDgpIGFuZCB0aGUgb3RoZXIgaXMgVGhlIElrIGxhbmd1YWdlOiBEaWN0aW9uYXJ5IGFuZCBncmFtbWFyIHNrZXRjaCAoU2Nocm9jayAyMDE0KSBhbmQgSSBmaW5kIHRoZW0gdG8gYmUgcGFydGljdWxhcmx5IGdvb2QgcmVhZHMgb2YgdmVyeSB1bmlxdWUgbGFuZ3VhZ2VzLiBIb3dldmVyLCB0aGVyZSBhcmUgYSB0b24gb3V0IHRoZXJlIHRoYXQgYXJlIGRlZmluaXRlbHkgd29ydGggeW91ciB0aW1lLiBJIHVzdWFsbHkgcmVhZCB0aGVzZSBiZWZvcmUgYmVkICh3aXRoIGEgdmVyeSBkaW0gc2NyZWVuIGFuZCBuaWdodCBtb2RlKSBzaW5jZSBpdCBoZWxwcyBtZSByZWxheC4KTGl0ZXJhbGx5IG5vbmUgb2YgeW91ciBwb2ludHMgYXJlIHRvdWNoaW5nIG9uIGFueSBvZiBtaW5lLiBZb3UgZG9uIHNlZW0gdG8gYmUgYWJsZSB0byBhcmd1ZSB0aGUgaWRlb2xvZ2llcyBidXQgb25seSB0aGUgZWZmZWN0IG9mIHRoZSBpZGVvbG9naWVzLiBZb3Ugc2VlbSB0byB0aGluayB0aGV5IGFyZSBzb21lIGhvdyBzeW5vbnltb3VzIHdoaWNoIEkgZG9uIHVuZGVyc3RhbmQgYXQgYWxsLiBJIGFtIG5vdCBpbnRlcmVzdCBpbiBnb2luZyB0aHJvdWdoIGhpc3RvcnkgYW5kIGFuZCBjb21wYXJpbmcgcGVvcGxlIHdobyBjbGFpbWVkIHRvIGhhdmUgZm9sbG93ZWQgZWFjaCBpZGVvbG9neSBiZWNhdXNlIGFzIEkgc3RhdGVkIG1hbnkgdGltZXMsIHBlb3BsZSBjYW4gc2F5IG9uZSB0aGluZywgYnV0IGFjdCBhIGNvbXBsZXRlbHkgZGlmZmVyZW50IHdheS4gVGhlIG9ubHkgdHdvIHBlb3BsZSB3aG8gY2FuIGRvIHRoaXMsIGFzIEkgaGF2ZSBwb2ludGVkIG91dCBtaWxsaW9ucyBvZiB0aW1lcyBidXQgeW91IGF2b2lkIGxpa2UgdGhlIHBsYWd1ZSwgaXMgTW9oYW1tZWQgYW5kIEplc3VzLiBNeSBhcmd1bWVudCBpcyBjZW50ZXJlZCBhcm91bmQgY29tcGFyaW5nIHRoZSBsaXZlcyBvZiB0aGVzZSB0d28gcGVvcGxlIGJlY2F1c2Ugb24gdGhlIG1vc3QgYmFzaWMgbGV2ZWwsIHRoZXNlIGFyZSB0aGUgcGVvcGxlIGVhY2ggcmVzcGVjdGl2ZSByZWxpZ2lvbiBmb2xsb3dlcnMgYXJlIHN1cHBvc2UgdG8gZW11bGF0ZS4gWW91IGFyZSBmYW1pbGlhciB3aXRoIFdXSkQgd3Jpc3QgYmFuZHM/IEhvd2V2ZXIsIHlvdSBjYWxsIGl0IGFyYml0cmFyeSB3aGVuIHRoZXkgbGl0ZXJhbGx5IGFyZSB0aGUgTU9TVCBJTVBPUlRBTlQgZmlndXJlcyBvZiB0aGVzZSByZWxpZ2lvbnMgYW5kIHRoZW4geW91IGdvIG9uIGFuZCB0YWxrIGFib3V0IGhvdyBwZW9wbGUgaW50ZXJwcmV0ZWQgaXQgbGlrZSBzb21laG93IHRoZWlyIGxpdmVzIGEgYmV0dGVyIGV4YW1wbGUgb2YgdGhlIGlkZW9sb2d5IHRoYW4gdGhlIGFjdHVhbCBmaWd1cmVoZWFkcyBvZiB0aGUgcmVzcGVjdGl2ZSByZWxpZ2lvbnMuIENvbWUgb24gdGhhdCBsdWRpY3JvdXMuClRoaXMgaGFzIG5ldmVyIGhhcHBlbmVkIHRvIG1lIGluIGFueSBvdGhlciBwbGFjZSEgSSB3YXMgcHJvcGVybHkgZHJlc3NlZCBhbmQgYmVoYXZlZCB3aXRoIGNvdXJ0ZXN5LiAKV2hhdCBPblRoaW5ncyB0byBkb0Zvb2QgYW5kIERyaW5rVGhlYXRyZSBhbmQgQXJ0c1RWIEd1aWRlUGVvcGxlIGFsbCBhcm91bmQgdGhlIHdvcmxkIGhhdmUgYmVlbiBwbGF5aW5nIGNhcmRzIGV2ZXIgc2luY2UgdGhlIGlkZWEgb3JpZ2luYXRlZCBpbiBDaGluYSBhYm91dCBBRCA4MDAgYW5kIHNwcmVhZCB0aHJvdWdob3V0IEV1cm9wZSBkdXJpbmcgdGhlIE1pZGRsZSBBZ2VzLiBNb3N0IG9mIHVzIGdyZXcgdXAgd2l0aCBjYXJkIGdhbWVzIHN1Y2ggYXMgT2xkIE1haWQsIEdvIEZpc2ggYW5kIFNuYXAuIFNvbWUgb2YgdXMgbW92ZWQgb250byAgIG9yIGF0IGxlYXN0IHNhdyBvdXIgcGFyZW50cyBwbGF5ICAgbW9yZSBjb21wbGV4IGdhbWVzIGxpa2UgRXVjaHJlLCBDcmliYmFnZSwgNTAwLCBHaW4gUnVtbXkgYW5kIFBva2VyLiAKSSBsaWtlIHRoZSBQZW5pbnN1bGEgSG90ZWwgYmVjYXVzZSBpdCBmZWVscyBub3N0YWxnaWMsIHdpdGggaXRzIGFmdGVybm9vbiB0ZWEuIApMb29rcyBsaWtlIHRoZSBldmlkZW5jZSBpcyBwcmV0dHkgZGFtbmluZyBhZ2FpbnN0IEtyYWZ0LCB0aG91Z2guIFRoZXJlIHdlcmUgaGlkZGVuIGNhbWVyYXMgaW4gdGhlIHNwYSByZWNvcmRpbmcgdGhlIGFjdHVhbCBzZXggYWN0cy4uIApTbG93bHkgd2hpc2sgaW4gdGhlIHJlbWFpbmluZyAyNDBtbCBhcHBsZSBjaWRlciwgcmVtYWluaW5nIGNoaWNrZW4gc3RvY2sgYW5kIHRoZSBzdG9jay9jaWRlciBtaXh0dXJlLiBDb29rIHVudGlsIHRoZSBtaXh0dXJlIGhhcyB0aGlja2VuZWQgYW5kIHJlYWNoZWQgYSBncmF2eSBjb25zaXN0ZW5jeS4gVGFzdGUgYW5kIGFkanVzdCB0aGUgc2Vhc29uaW5nLiAKIiBTZ3QuIFJheSBLZWxseTogQXJlIHlvdSBnZXR0aW4nIGtpbmQgb2YgZmFtb3VzIGluIHRoZSBwb2tlciB3b3JsZD8gRXJuaWUgU2NoZXJlcjogSSdtIHZlcnkgd2VsbCBrbm93biBpbiB0aGUgcG9rZXIgd29ybGQuIAoiUG9rZXIsIGxpa2UgZ29sZiwgaXMgY29uc2lkZXJlZCBhbiBlbGl0ZSBnYW1lLCB3aGVyZSB5b3UgY2FuIG1ha2UgYSBsb3Qgb2YgY29udGFjdHMsIiByZWFzb25zIHJlYWwgZXN0YXRlIGNvbnN1bHRhbnQgVmFpYmhhdiBTaGFoIHdobyBzdGFydGVkIHBsYXlpbmcgcG9rZXIgb25saW5lIGFuZCBoYXMgbm93IGdyYWR1YXRlZCB0byBwbGF5aW5nIGF0IHBva2VyIG5pZ2h0cyBhdCBoaXMgaG9tZSBhbmQgbW9yZSBzbyBkdXJpbmcgRGl3YWxpLi4gCkFib3V0IDYwIHBlciBjZW50IG9mIHBva2VyIG1hY2hpbmUgcmV2ZW51ZSBjb21lcyBmcm9tIHRoZSBoZWF2aWVzdCAxNSBwZXIgY2VudCBvZiB1c2VycywgYW5kIHRoZSBvbmUgb3IgdHdvIHBlciBjZW50IG9mIHByb2JsZW0gZ2FtYmxlcnMgY29udHJpYnV0ZSBhIHRoaXJkIG9mIHRoYXQgcmV2ZW51ZS4gCkFsc28gSSBhbSBiZWluZyB2YWd1ZWx5IHJhY2lzdC4gCkV2aWwgRW1waXJlIHZzLiBGcmVlZG9tIEZpZ2h0ZXJzLiAKSGUgY2FtZSBiYWNrIG1vc3RseSB1bmRlciBzb21lb25lIGVsc2UgbmFtZSAoc2VlIHRoZSBsaW5rIGFib3ZlIGZvciBoaXMgc2NyZWVud3JpdGluZyBjcmVkaXRzLCB3aGljaCBhcmUgc3Vic3RhbnRpYWwpIGFuZCBhY2tub3dsZWRnZWQgc2hvcnRseSBiZWZvcmUgaGUgZGllZC4uIApBcyBmb3IgVW5pb25zLCBJIG15c2VsZiBhbSBub3QgYSBmYW4uIApObyBsb25nZXIgY29uc2lkZXJlZCBhIGZyaW5nZSBlbGVtZW50LCBhY3VwdW5jdHVyZSBoYXMgYmVlbiBlbmRvcnNlZCBieSB0aGUgQW1lcmljYW4gT3N0ZW9wYXRoaWMgQXNzb2NpYXRpb24sIHRoZSBBbWVyaWNhbiBDaGlyb3ByYWN0aWMgQXNzb2NpYXRpb24sIGFuZCB0aGUgQW1lcmljYW4gVmV0ZXJpbmFyeSBNZWRpY2FsIEFzc29jaWF0aW9uLi4gCk15IG1vbSwgZGVzcGl0ZSBhbHdheXMgY3J5aW5nIGFib3V0IGhlciAicG9vciBtZW1vcnksIiBjYW4gcmVtZW1iZXIgZXZlcnkgdGlueSBtb3JzZWwgb2YgaW5mb3JtYXRpb24gdGhhdCBzdWdnZXN0cyBJIGFtIHZ1bG5lcmFibGUsIGFuZCB3aWxsIG5vdCBoZXNpdGF0ZSB0byB1c2UgaXQgd2hlbiBzaGUgd2FudHMgdG8gYXR0YWNrLiAKQnV0IGhlJ3Mga2luZCBvZiBhIGplcmssIHRoZSBjb252ZXJzYXRpb24gaXMgb25lIHNpZGVkIGFuZCBpdCdzIHVzdWFsbHkgYWxsIGFib3V0IGhvdyBtdWNoIG9mIGEgbG9zZXIgeW91IGFyZSBmb3Igc3BlbmRpbmcgYSBodW5kcmVkIGhvdXJzIHNpZnRpbmcgdGhyb3VnaCB0aGUgc3BlY2lhbCBmZWF0dXJlcyBvbiB5b3VyIEZpcmVmbHkgRFZEIGp1c3QgdG8gZmluZCBzb21ldGhpbmcgSm9zcyBXaGVkb24gc2xhcHBlZCB0b2dldGhlciBpbiBmaXZlIG1pbnV0ZXMuLiAKTXkgbGlmZSBoYXMgY2hhbmdlZCBjb21wbGV0ZWx5LiAKQSBnb29kIHJlcG9ydGVyIG9yIHBhbmVsIG9mIG1vZGVyYXRvcnMgd2lsbCBiZSBhYmxlIHRvIGFzayBmb2xsb3cgdXAgcXVlc3Rpb25zIGJhc2VkIG9uIHRoZWlyIGNhbm5lZCBhbnN3ZXJzLi4gClRob21wc29uIHNhaWQuLiAKRHIgU2FtdWVsIEtpbU1CQlMgRlJBQ1AgTVBILCBDYXJkaW8gVGhvcmFjaWMgU3VyZ2VvbiwgR29vbmVsbGFiYWgsIE5TVywgQnJpc2JhbmUsIFFsZApCdXQgbGlrZS4gV2hhdCBraW5kIG9mIHNvbGlwc2lzdGljIGFieXNzIGRvIHlvdSBoYXZlIHRvIGxpdmUgaW4sIHRvIGRlbWFuZCBwb2ludCBibGFuayB0aGF0IFNPTUVPTkUgRUxTRSBsaXRlcmFsbHkgYnJlYWsgdGhlaXIgYmFjayBmb3IgTk9USElORyBtb3JlIHRoYW4geW91ciBjb21mb3J0PyBBbmQgaXQgaXMgY29tZm9ydDsgZGFuZ2xpbmcgZnJvbSBhIGxpZnQgaW4gYSBoYXJuZXNzIGlzIGZyaWdodGVuaW5nLiBCZWluZyBzdXBwb3J0ZWQgYnkgaHVtYW4gaGFuZHMgaXMgY29tZm9ydGluZy4gCjMuIFBhcnQgb2YgdGhlIHJ1bGluZyByZWFkcyBhcyBmb2xsb3dzOgpKYW5lIFBvcnRlciwgZGllIGdlbWVpbnNhbSBtaXQgaWhyZW0gVmF0ZXIgbmFjaCBBZnJpa2Ega2FtLCB1bSBHb3JpbGxhcyB6dSBmYW5nZW4sIG11c3MgZXJrZW5uZW4sIGRhc3MgZXMgc2ljaCBiZWkgZGVuIFByaW1hdGVuIHVtIFdlc2VuIGhhbmRlbHQuIApPbmUgbmlnaHQsIGhlIGFuZCBhIGZyaWVuZCBjYW1lIHRvIHZpc2l0IG1lIGF0IHVuaXZlcnNpdHksIHdoZXJlIHdlIGVuZGVkIHVwIGhhdmluZyB0byBzaGFyZSBteSBiZWQgYXMgc3BhY2Ugd2FzIHZlcnkgbGltaXRlZCBpbiBteSBvbmUgYmVkcm9vbSBhcGFydG1lbnQuIFRoZSBuZXh0IGRheSBhZnRlciB0aGV5IGhhZCBsZWZ0LCBJIGZvdW5kIGEgbm90ZSB1bmRlciBteSBwaWxsb3cgYXNraW5nIGlmIEkgd291bGQganVzdCBnaXZlIGhpbSBvbmUgY2hhbmNlLiAKSSB3b3JrIGZyb20gaG9tZSBhbmQgbXkgd2lmZSB3b3JrcyAib24gc2l0ZSIgYXJvdW5kIHRoZSBjaXR5LiBUaGVyZSBhIGZldyB0aW1lcyBhIHdlZWsgdGhhdCBoZXIgc2NoZWR1bGUgcnVucyBwYXN0IDVwbS4gSWYgSSBhdCBob21lIHcgYm90aCBteSBraWRzIGFuZCBuZWVkIHNvbWV0aGluZyBmcm9tIHRoZSBjb3JuZXIgc3RvcnksIGkgZ2V0IHRoZW0gYm90aCByZWFkeSBhbmQgdGFrZSB0aGVtIHdpdGggbWUuIApUaGlzIGlzIGEga2V5IGFzcGVjdCBpbiBzbG93aW5nIHRoZSBhZ2luZyBwcm9jZXNzIGFuZCBwcmV2ZW50aW5nIGRlZ2VuZXJhdGl2ZSBkaXNlYXNlcywgYXMgdGhlIG1pdG9jaG9uZHJpYSByZXNwb25zaWJsZSBmb3IgQVRQIGVuZXJneSBwcm9kdWN0aW9uIGlzIHByb25lIHRvIGRhbWFnZSBmcm9tIG94eWdlbiBmcmVlIHJhZGljYWxzLiBXaGVuIHRoaXMgb2NjdXJzLCBpdHMgYWJpbGl0eSB0byBwcm9kdWNlIEFUUCBlbmVyZ3kgZm9yIHRoZSBjZWxsIGNhbiBiZWNvbWUgc2V2ZXJlbHkgY29tcHJvbWlzZWQsIGxlYWRpbmcgdG8gYSBkZWNsaW5lIGluIGNlbGx1bGFyIGZ1bmN0aW9uLi4gClNwZWNpZmljIHRlcm1zIG9mIHRoZSBpbnZlc3RtZW50IHdlcmUgbm90IGRpc2Nsb3NlZC4gClRleGFzIEhvbGQnZW0gaXMgdXN1YWxseSBwbGF5ZWQgd2l0aCBuaW5lIG9yIHRlbiBwbGF5ZXJzIGF0IGEgZnVsbCB0YWJsZSB3aXRoIGEgcm90YXRpbmcgYmxpbmQgc3lzdGVtLiAKVGhhdCB0aGUgcG9pbnQuIApJdCBmZWVscyBhcyBnZW50bGUgYXMgdGhlIHNlbnNhdGlvbiBvZiBhIHNpbmdsZSBmZWF0aGVyIGdlbnRseSBtb3ZpbmcgYWNyb3NzIHlvdXIgc2tpbi4gCkRhbmRydWZmIGlzIGNhdXNlZCBieSBhIG1pY3Jvc2NvcGljLCB5ZWFzdCBsaWtlIGZ1bmd1cyBjYWxsZWQgbWFsYXNzZXppYS4gTWFsYXNzZXppYSBpcyBhbHNvIGZvdW5kIG9uIGhlYWx0aHkgaHVtYW4gaGVhZHMgYnV0LCBmb3Igc29tZSB1bmtub3duIHJlYXNvbiwgaXQgZ2V0cyBvdXQgb2YgY29udHJvbCBvbiB0aGUgc2NhbHBzIG9mIGFuIHVubHVja3kgZ3JvdXAgb2YgcGVvcGxlLiBUaGUgY2VsbCB0dXJub3ZlciB0aGF0IHdvdWxkIHRha2UgMjcgb3IgMjggZGF5cyBvbiBhIGhlYWx0aHkgaGVhZCwgdGFrZXMgdHdvIHdlZWtzIG9yIGxlc3Mgb24gdGhlIHNraW4gb2Ygc29tZW9uZSB3aXRoIGRhbmRydWZmLiBUaG9zZSBkZWFkIGNlbGxzIHRlbmQgdG8gY2x1bXAgdG9nZXRoZXIgYW5kIHRoZW4gICBiZWNhdXNlIG9mIG5hdHVyYWwgb2lscyAgIHN0aWNrIG9uIHlvdXIgaGVhZCBhbmQgY2xvdGhpbmcsIHJlZnVzaW5nIHRvIGhhcm1sZXNzbHkgZHJpZnQgYXdheS4gVGhhdCdzIHRoZSBzY2llbmNlIG9mIHRoZSBtYXR0ZXI7IGJlbG93IGFyZSBzb21lIHNvbHV0aW9ucy4KVGVsbHMgbWUgaXRzIHRoZSB3cm9uZyBhZGRyZXNzLCB0aGUgcmVhbCBvbmUgaXMgc3VjaCBhbmQgc3VjaCwgYW5kIGFmdGVyIHR5cGluZyBpdCBpbnRvIGdwcywgaXQgc2F5cyBpdCAxMCBtaW5zIGF3YXkuIAogSW4gc29tZSBtaW5pbmcgamFyZ29uLCBhIGhlYWRpbmcgaXMgYSBjb21tdW5pY2F0aW9uIHR1bm5lbCB3aGljaCBpcyBiZWluZyBleHRlbmRlZCBpbiBhIGdpdmVuIGRpcmVjdGlvbi4gKEZ1bGwgQW5zd2VyKS4gCkJhbWJvbyBzbXV0IGlzIG9uZSBvZiB0aGUgbW9zdCBoYXJtZnVsIGJhbWJvbyBkaXNlYXNlcy4uIApSZXZpZXdzIEZ1bGxTZXJ2aWNlQktLCihOZWdhdGluZyBzZWxmIGRhbWFnZSBpcyBnb29kKQpBIGxhcmdlIHBvcnRpb24gb2YgUnVzc2lhbiBvaWwgYm91bmQgZm9yIFdlc3Rlcm4gRXVyb3BlIHBhc3NlcyB0aHJvdWdoIFVrcmFpbmUuIEFuZCB0d2ljZSBpbiB0aGUgcGFzdCBkZWNhZGUsIGluIDIwMDYgYW5kIDIwMDksIFJ1c3NpYSBoYXMgdHVybmVkIG9mZiBuYXR1cmFsIGdhcyBzaGlwbWVudHMgdG8gVWtyYWluZSBkdXJpbmcgZGlzcHV0ZXMgb3ZlciBnYXMgcHJpY2VzLiBUaGF0IGluIHR1cm4gY3JlYXRlZCBzaG9ydGFnZXMgaW4gc29tZSBFVSBtZW1iZXIgbmF0aW9ucy4gSW4gcmVzcG9uc2UsIHRoZSBFVSBoYXMgYXR0ZW1wdGVkIHRvIGNvbWUgdXAgd2l0aCBhbHRlcm5hdGl2ZXMgdG8gaXRzIGN1cnJlbnQgZGVwZW5kZW5jeSBvbiBSdXNzaWFuIG9pbCBhbmQgZ2FzLiAKTG9ja2VkIHVwIGJlaGluZCBiYXJzLCBhbmQgd2UnbGwgc2VlIGJldHRlciBzb2NpYWxwcm9zZWN1dGlvbi4gVGhpcyBsYXcgY2hhbmdlIHdpbGwgc2F2ZUpvdXJuYWxpc20gSGFzIEEgUHJvYmxlbTogSXQncyBDYWxsZWQgQ2FwaXRhbGlzbU11Y2ggaGFzIGJlZW4gd3JpdHRlbiBvZiBsYXRlIGFib3V0IHRoZSAncHJvYmxlbXMnIG9mIHRoZSBKb3VybmFsaXNtIGluZHVzdHJ5IGFuZCBpbiBwYXJ0aWN1bGFyIHRoZSBpbXBhY3RzIG9mIGNvbnNvbGlkYXRpb24gYW5kIGxheW9mZnMgb24gbG9jYWwgbmV3cyBjb3ZlcmFnZS4gSG93ZXZlciwgSSB3b3VsZCBwcm9wb3NlIHRoYXQgdG8gdGhlIGV4dGVudCB0aGF0IEpvdXJuYWxpc20gZG9lcyBpbiBmYWN0IGhhdmUgYSBwcm9ibGVtLCB0aGF0IHByb2JsZW0gaXMgc2ltcGx5IGFuIGV4dGVuc2lvbiBvZiB0aGUgbWFya2V0IGZhaWx1cmVzIG9mIENhcGl0YWxpc20uIEFuZCB0byB0aGUgZXh0ZW50IHRoYXQgc29sdXRpb25zIGV4aXN0LCB0aGV5IG11c3QgYmUgc29sdXRpb25zIHRoYXQgYWxsb3cgam91cm5hbGlzbSB0byBtb3ZlIG91dHNpZGUgb2YgdGhlIGJyb2tlbiBzeXN0ZW0gdGhhdCBoYXMgY2F1c2VkIHRoaXMgc2l0dWF0aW9uLiBUaGlzIGlzIGEgZ2xvYmFsIHByb2JsZW0uIE1vcmU+PkRpcnR5IFBvbGl0aWNzIENsZWFudXA6IE5pY2t5IEhhZ2VyIFNldHRsZXMgV2VzdHBhYyBEaXNwdXRlVW5kZXIgdGhlIHNldHRsZW1lbnQgYWdyZWVtZW50IGFubm91bmNlZCB0b2RheSwgV2VzdHBhYyB3aWxsIGJlIHNpZ25pZmljYW50bHkgdGlnaHRlbmluZyBpdHMgY29udHJhY3R1YWwgdGVybXMgaW4gcmVsYXRpb24gdG8gdGhlIHJlbGVhc2Ugb2YgY3VzdG9tZXIgaW5mb3JtYXRpb24gdG8gZ292ZXJubWVudCBhZ2VuY2llcywgaW5jbHVkaW5nIHRoZSBQb2xpY2UgV2VzdHBhYyBoYXMgYXBvbG9naXNlZCB0byBNciBIYWdlciBmb3IgcmVsZWFzaW5nIGhpcyBpbmZvcm1hdGlvbiBhbmQgaGFzIGFncmVlZCB0byBwYXkgaGlzIGNvc3RzIGFuZCBjb21wZW5zYXRpb24uIE1vcmU+PgpGaWZ0ZWVuIG9mZmljZXJzIGFuZCB0d28gb3RoZXIgbWVuIHdobyBoYWQgcHJldGVuZGVkIHRvIGJlIGxhdyBlbmZvcmNlbWVudCBvZmZpY2lhbHMgd2VyZSBjaGFyZ2VkIHdpdGggY29uc3BpcmFjeSB0byBwb3NzZXNzIGFuZCBkaXN0cmlidXRlIGNvY2FpbmUgb3IgaGVyb2luIG9yIGJvdGguCkNvdXJ0IEFmZmlybXMgTGlmZSBTZW50ZW5jZXMgSW4gMjAwOSBTdWIgU2hvcCBBYmR1Y3Rpb24KKGFuZCkgSSBjb3VsZCBnaXZlIHlvdSBleGFtcGxlIGFmdGVyIGV4YW1wbGUgd2hlcmUgdGhlaXIgc3RhdGVtZW50cyBiYWNrZmlyZWQuIi4gClRoaXMgY2FuIHdvcmsgdG8gdGhlIHRyYWRlciBkZXRyaW1lbnQsIEJsdW1lIHN0YXRlcy4gRm9yIGV4YW1wbGUsIHRoZSB0b3Agb2YgdGhlIGJvb2sgaW4gYSBDaGljYWdvIGV4Y2hhbmdlIG1pZ2h0IGxpc3QgYW4gb2ZmZXIgdG8gc2VsbCAxMDAgc2hhcmVzIG9mIFhZWiBDb3JwLiAKWW91IGtub3cgZ2FtYmxpbmcgaXMgYSBzdGFwbGUgb2Ygb3JnYW5pemVkIGNyaW1lLiAKTm9uc3RpY2sgc2tpbGxldHMgYXJlIGFsc28gb3VyIGdvIHRvIGZvciBwYW5jYWtlcywgYmVjYXVzZSB0aGV5IGRvbiBsZXQgYml0cyBvZiBidXR0ZXIgYW5kIGJhdHRlciBidXJuIG9udG8gdGhlaXIgc3VyZmFjZXMsIGNvbXBhcmVkIHRvIHN0YWlubGVzcyBzdGVlbCBza2lsbGV0cyBhbnl3YXkuLiAKSSB3YXMganVzdCBhdCB0aGUgZ3JvY2VyeSB0aGUgb3RoZXIgZGF5ICg1MSxNKSBhbmQgdGhlIGxhZHkgaW4gZnJvbnQgb2YgbWUgaGFkIGEgbmV3Ym9ybiBhbmQgYSBmdWxsIGNhcnQgb2YgZ3JvY2VyaWVzIGF0IHRoZSBjaGVja291dC4gU2hlIHdhcyBpbiBmcm9udCBvZiB0aGUgY2FydCB1bmxvYWRpbmcgd2hpbGUgaGVyIGJhYnkgd2FzIGluIGEgY2FyIHNlYXQgZmFjaW5nIG1lLiBUaGUgYmFieSBkcm9wcGVkIHRoZSBwYWNpZmllciBhbmQgYmVnYW4gdG8gZnVzcy4gSSB0b2xkIHRoZSBsYWR5IGFuZCBhc2tlZCBpZiBpdCB3YXMgb2sgdG8gZ2V0IGl0IGZvciBoZXIuIFNoZSBzYWlkIHllcyBhbmQgSSBkaWQuClVuIG51bXJvIGRlIHRscGhvbmUgeSBlc3QgaW5kaXF1LCB0b3V0IGNvbW1lIGxlcyBoZXVyZXMgZCdvdXZlcnR1cmUgOiBkZSA5IGggIDIzIGgsIDcgam91cnMgcGFyIHNlbWFpbmUuLiAKSXQgZnVubnksIHRob3VnaC4gCkEgbWVtb3JpYWwgc2VydmljZSBmb3IgSmFtZXMgS25vd2xlcyBzaGFsbCBiZSBoZWxkIG9uIFNhdHVyZGF5LCBKdWx5IDE2dGgsIDIwMTEgYXQgS25veCBQcmVzYnl0ZXJpYW4gQ2h1cmNoLCA1OTEgU3QuIFZpbmNlbnQgU3RyZWV0LCBNZWFmb3JkLCBPbnRhcmlvLiBSZWNlcHRpb24gdG8gZm9sbG93Li4gCkl0J3MgYWxzbywgbW9yZSBmdW5kYW1lbnRhbGx5LCBhYm91dCBhIHNlbnNlIG9mIGJlaW5nIGEgZ29vZCBwZXJzb24uIApCZWVuIG1hbnkgdGltZXMgYW5kIG5ldmVyIGxlZnQgbm90IGhhcHB5LiBPbiB0aGUgb3RoZXIgaGFuZCBiZWVuIHRvcCBwbGFjZXMgdGhhdCBzZWVtIHRvIGhhdmUgcmF2ZSByZXZpZXdzIGFuZCB3YWxrZWQgb3V0IHRoaW5raW5nIHdoYXQgYWxsIHRoZSBib3RoZXIgaW4gYWJvdXQuIEFubmllIGlzIGEgZmlybSBlYXN5IHllcy4gCkkgdGhpbmsgdGhlcmUgaXMgbWFqb3IgY2xpaW1hdGUgZW5naW5lZXJpbmcgZ29pbmcgb24gaW4gdGhlIHdvcmxkIGFuZCBhbHNvIGhlcmUgaW4gdGhlIENlbnRhbCBQYWNpZmljLiBUaGlzIG1vcm5pbmcgd2hlbiBJIHdva2UgdXAgaXQgd2FzIDYxIGRlZ3JlZXMuIEkga25vdyB0aGF0IGlzIGxhdWdoYWJsZSB0byB5b3UgbWFpbmxhbmRlcnMsIGJ1dCB0aGUgd2VhdGhlciBoZSBoYXMgYmVlbiBiaXphcnJlIHRoaXMgd2ludGVyLiAKSXQgaXMgbW9yZSB0aGFuIGEgbGl0dGxlIGNyaW5neSBhdCB0aGlzIHBvaW50LiAKRWRpdDogSnVzdCBjaGVja2VkIG15IG5vdGVzIG9uIGJsb29kIGRvcGluZzogaW4gc2hvcnQgaGlzIGJvZHkgYnJpbmdzIG1vcmUgb3h5Z2VuIHRvIGhpcyBtdXNjbGVzIHdoaWNoIGlzIGEgY2xlYXIgYWR2YW50YWdlIGluIGFuIGVuZHVyYW5jZSBzcG9ydCBzdWNoIGFzIGNyb3NzIGNvdW50cnkgc2tpaW5nLiBBbmQgaWYgaXQgaXMgaGlzIG93biBibG9vZCBpdCBpcyByZWFsbHkgaGFyZCB0byB0cmFjay4gCkFuZCBhZnRlciB0aGUgbmVhciB0aGVyYXBldXRpYyBib2R5IHJ1YiBmb2xsb3dlZCBieSB0aGUgZ2VudGxlIHNjcmF0Y2hpbmcgYm9keSBydWIsIGxldCdzIG1vdmUgb24gdG8gdGhlIGVwaWRlcm1hbCBib2R5IHJ1Yi4gVGhpcyBzZXNzaW9uIGlzIGRlc2lnbmVkIHRvIHN0aW11bGF0ZSB0aGUgb3V0ZXIgbGF5ZXIgb2Ygc2tpbi4gSXQgaXMgdW5saWtlbHkgeW91IGhhdmUgZXZlciBmZWx0IHRoZSBleHRyZW1lIHBsZWFzdXJlIHRoYXQgdGhpcyB0eXBlIG9mIHN0aW11bGF0aW9uIHByb3ZpZGVzLiAKSW4gdGhlIHNhbWUgeWVhciB0aGF0IHRob3NlIGJvdHRvbSAyMCBtaWxsaW9uIHRheHBheWVycyBwYWlkIDUwYm4gaW4gaW5jb21lIHRheCwgdGhlIG5ldCB3ZWFsdGggb2YgdGhlIFVLIHJvc2UgYnkgbmVhcmx5IGhhbGYgYSB0cmlsbGlvbiBwb3VuZHMsIHlldCBhbG1vc3Qgbm9uZSBvZiB0aGF0IGdhaW4gd2FzIHRheGVkLiBBcyB0aGUgY2hhbmNlbGxvciBsaW5lcyB1cCB0aGUgc3ByaW5nIHN0YXRlbWVudCwgdGhlIGRlYmF0ZSBzaG91bGQgbm90IGJlIGFib3V0IGluY29tZSB0YXggb3IgcGVyc29uYWwgYWxsb3dhbmNlcywgYnV0IGhvdyB3ZSByZW9yaWVudGF0ZSB0aGUgdGF4IHN5c3RlbSB0byB3aGVyZSB0aGUgbW9uZXkgcmVhbGx5IGxpZXMuIApJbiBBbGJlcnRhLCBhIG1hbiB3ZSBjYWxsIEZyZWQsIDU1LCBoYXMgdGhyaXZlZCBpbiBoaXMgY2FyZWVyIGFzIGEgbWFya2V0aW5nIHJlc2VhcmNoZXIsIGJ1aWxkaW5nIHVwIG5ldCB3b3J0aCBvZiAkOTUyLDUwMCBvbiBhIHNhbGFyeSBvZiAkOCwxNTAgcGVyIG1vbnRoIGJlZm9yZSB0YXggYW5kICQ1LDI5OCBhZnRlciB0YXggYW5kIGJlbmVmaXRzIGRlZHVjdGlvbnMuIEhlIGxpdmVzIGluIGEgJDI1MCwwMDAgY29uZG8gYW5kIGhhcyBhIGZvcmVpZ24gcmVudGFsIHByb3BlcnR5IHdpdGggYW4gZXN0aW1hdGVkIHZhbHVlIG9mICQyMDAsMDAwLiBGcmVkIGhhcyBwbGFubmVkIHdlbGwgZm9yIHJldGlyZW1lbnQsIGJ1dCB3b3JyaWVzIGFib3V0IHRoZSBkdXJhYmlsaXR5IG9mIGhpcyBqb2IuLiAKVGVhIEtldHRsZSBXaGlzdGxlICAgRnJlZSBTb3VuZCBFZmZlY3QgICBNcDMgV2F2IERvd25sb2FkLiBKYW4gMTgsIDIwMTQgLiBUZWEgS2V0dGxlIFdoaXN0bGUgMDEgU291bmQgRWZmZWN0IE1wMyAgIFNvdW5kIEVmZmVjdHMgICBTb3VuZEdhdG9yLiAKR2lmdHMgdG8gdGhlIGZvdW5kYXRpb24sIGxpc3RlZCBpbiBJUlMgUHVibGljYXRpb24gNzgsIEN1bXVsYXRpdmUgTGlzdCBvZiBPcmdhbml6YXRpb25zIGFuZCBkZXNjcmliZWQgaW4gQ29kZSAxMChjKSgzKSBvZiB0aGUgSW50ZXJuYWwgUmV2ZW51ZSBDb2RlLCBhcmUgdGF4IGRlZHVjdGlibGUgYXMgcGVybWl0dGVkIGJ5IGxhdy4gCldoaWxlIHlvdSBjYW4gc3BlbmQgYSBsb3Qgb2YgdGltZSBsb29raW5nIGZvciB0aGUgcmlnaHQgREFXIChtdXNpYyBwcm9ncmFtLCBiYXNpY2FsbHkpLCBWU1RzICh2aXJ0dWFsIGluc3RydW1lbnRzLCBiYXNpY2FsbHkpIGFuZCBzdWNoLCBpbiB0aGUgZW5kIGl0IGdvaW5nIHRvIGJlIGEgcGFpbiB0byB3cml0ZSBhbnkgc2NvcmUgaWYgeW91IGhhdmUgbm8gaWRlYSB3aGF0IHlvdSBkb2luZyB3aXRoIHRoZSBwcm9ncmFtcy4uIApWYXJpYW5jZSBpcyBuYXR1cmFsbHkgYSB0aGluZyBpbiBwb2tlciBhbnl3YXkuIE1vc3QgaGFuZHMgeW91IGNhbGwgdGhlIGNoZWNrIHJhaXNlIHdpdGggb24gdGhlIGZsb3Agc3RpbGwgY29udGludWVzIG9uIHRoZSB0dXJuIHZzIGhpZ2hlciBzaXppbmcuIApIYWQgdGhlIGF1ZGFjaXR5IHRvIGdvIGludG8gdGhlIGxhYiB0byBjb29rIHVwIGEgb25jZSBpbiBhIGdlbmVyYXRpb24gYXRobGV0ZSB3aG8nZCB0cmFuc2NlbmQgYm91bmRhcmllcyB2ZXJ5IGZldyBldmVyIGhhdmUuIApBbHNvLCBvbmNlIHF1YWxpZmllZCwgdGhlcmUgYXJlIGEgbnVtYmVyIG9mIGNhcmVlciBvcHBvcnR1bml0aWVzIGZvciBzcG9ydCBtYXNzYWdlIHByb2Zlc3Npb25hbHMuIFRoZXNlIGluY2x1ZGU7IHNlbGYgZW1wbG95ZWQgd29yaywgd29ya2luZyBpbiBoZWFsdGggYW5kIGxlaXN1cmUgY2x1YnMsIHdvcmtpbmcgZm9yIHNwb3J0cyBjbHVicyBhbmQgd29ya2luZyB3aXRoaW4gaGVhbHRoIHNlcnZpY2VzIHN1Y2ggYXMgdGhlIE5IUy4gCk1vcmUgdGhhbiA5MCUgb2Ygc3VjaCBwcm9jZWR1cmVzIGFyZSBwZXJmb3JtZWQgYnkgY2hpcm9wcmFjdG9ycy4gClNoZSBhbHNvIGdyZXcgdXAgb24gdGhlIHNvdW5kcyBvZiBSZWJhIE1jRW50aXJlLCBHYXJ0aCBCcm9va3MgYW5kIFRpbSBNY0dyYXcgYW5kIGNhbiBiZSBmb3VuZCB0cmF2ZXJzaW5nIHRoZSBjb3VudHJ5c2lkZSBpbiBzZWFyY2ggb2YgdGhlIHNvdW5kcyBvZiBhIHN0ZWVsIGd1aXRhci4gCkkgbGl2ZWQgaW4gQ2hpbmEgZm9yIDggeWVhcnMgYW5kIGhhZCBmcmVxdWVudCBhc3RobWEgYW5kIGFzdGhtYSBhdHRhY2tzIHVudGlsIEkgc3RhcnRlZCB0YWtpbmcgc3RlcHMgdG8gZW5zdXJlIG15IGhlYWx0aC4KV2F0ZXIxMiBvei4gCkl0IGRvZXMsIGhvd2V2ZXIgSSBwdXJjaGFzZWQgdGhlIG5vbiBEQVAgb3B0aW9uIGZvciB0aGUgcmVwbGFjZW1lbnQgbWlycm9ycywgc28gSSBsb3N0IHRoYXQgb3B0aW9uICh5b3UganVzdCBsZWF2ZSB0aGUgREFQIHdpcmUgdW5wbHVnZ2VkIGluIHRoZSBkb29yLCBzbyBpdCBjb21wbGV0ZWx5IHJldmVyc2libGUgaWYgeW91IGRlY2lkZSB0byBnbyBiYWNrKS4gSXQgd2FzIGFib3V0ICQzMDAgYWxsIGluIGZvciBub24gREFQIGFuZCBpdCB3b3VsZCBoYXZlIGJlZW4gb3ZlciAkNjAwIHRvIGJ1eSB0aGUgREFQIHZlcnNpb24uIEkgbmV2ZXIgY2FyZWQgZm9yIHRoZSBEQVAgb3B0aW9uIGFueXdheSBzbyBpdCBjZXJ0YWlubHkgd2FzbiB3b3J0aCBkb3VibGUgdGhlIHByaWNlIGZvciBtZS4gSSBkb24gbmVlZCBhIGxpdHRsZSB5ZWxsb3cgbGlnaHQgdG8gdGVsbCBtZSB0aGVyZSBhIGNhciBiZXNpZGUgbWUhIEkgZGlkIHJlYWQgYSBmZXcgY29tbWVudHMgb2YgcGVvcGxlIHRoYXQgYm91Z2h0IHRoZSBub24gREFQIG1pcnJvcnMgYW5kIHN3aXRjaGVkIGFsbCBvZiB0aGUgd2lyaW5nIGZyb20gdGhlaXIgT0VNIERBUCBtaXJyb3JzIGJ1dCBpdCB3YXNuIHdvcnRoIHRoZSByaXNrL3Ryb3VibGUgZm9yIG1lLgpJIHdvdWxkIGZvbGxvdyBNaW5zYyBkaXJlY3Rpb24gdG8gdGhlIHN0cm9uZ2hvbGQgdG8gdGhlIFNvdXRod2VzdCB0byBnZXQgc29tZSBleHBlcmllbmNlLiBBbHNvLCB2ZW50dXJlIHRvIEhpZ2ggSGVkZ2UgZGlyZWN0bHkgV2VzdCBvZiBCZXJlZ2hvc3QgYW5kIGJ1eSBzb21lIHNwZWxsIHNjcm9sbHMgdG8gdGVhY2ggeW91ciBtYWdlIHNvbWUgZ29vZCBsb3cgbGV2ZWwgc3BlbGxzLiBTbGVlcCBpcyBhbWF6aW5nIGZvciB0aGUgdGhpbmdzIHlvdSBhcmUgYWJvdXQgdG8gYmUgZG9pbmcuIApGYWNlIGNhcmRzIHRoYXQgd291bGQgYmUgdGhlIHJveWFsIGNvdXBsZSwgdGhlIGtpbmcgYW5kIHF1ZWVuLCBhbmQgb2YgY291cnNlLCB0aGUgdGhpcmQgd2hlZWwsIHRoZSBqYWNrIGFyZSBlcXVpdmFsZW50IHRvIHRlbiB3aGlsZSB0aGUgYWNlIGNhbiBiZSBjYWxjdWxhdGVkIGFzIG9uZSBvciBlbGV2ZW4uIFlvdSBhbG9uZSBzaGFsbCBiZSBhYmxlIHRvIGRldGVybWluZSB3aGV0aGVyIHlvdXIgY2FyZHMgd291bGQgYmUgYmV0dGVyIG9mZiB3aXRoIGFuIGFjZSB3b3J0aCBvbmUgcG9pbnQgb3IgZWxldmVuLi4gCkV2ZW50dWFsbHksIHRoZSB0cmVlIHNpdCB3YXMgcHJvdGVzdGluZyBiYWQgdHJlYXRtZW50IG9mIHRoZSBob21lbGVzcywgYW5kIGNsYWltaW5nIE9obG9uZSBvd25lZCB0aGUgcGFyay4KT25jZSBpdCBpcyBmcmVlLCBzdGFydCBzbG93bHkgdW5zY3Jld2luZyB0aGF0IGxhc3QgYm9sdC4gCldlIGhvcGUgdGhhdCBDYXJkIEVudGh1c2lhc3RzIHdlcmUgcHJlc2VudGVkIHdpdGggYSBjb21wZWxsaW5nIGVub3VnaCBjYXNlIHRvIHRha2UgdXAgdGhpcyBiZWF1dGlmdWwgY2FyZCBnYW1lID8gaWYgdGhleSBoYWRuP3QgeWV0ID8gd2hpY2ggY2FuIGJlIGVuam95ZWQgaW4gaXRzIG15cmlhZCBmb3Jtcywgd2hhdCB3aXRoIHRoZSBiZWVyIGZsb3dpbmcgYW5kIHRoZSBoaWdoIHN0YWtlcyBhY3Rpb24gdGhhdCB1bmZvbGRlZCBhdCBlYWNoIG9mIHRoZXNlIFBva2VyIGV2ZW50cyEgQ29uY2VybnMgcmVnYXJkaW5nIHRoZSBnYW1lP3MgbGVnaXRpbWFjeSBhcyBhbiBhY3Rpdml0eSB0aGF0IGNhbiBiZSBmcmVlbHkgcHVyc3VlZCBhY3Jvc3MgSW5kaWEgaGF2ZSBhbHdheXMgY29tZSBpbiB0aGUgd2F5IG9mIGl0cyB3aWRlc3ByZWFkIGFjY2VwdGFuY2UuIApFdmVuIGluIGxpZ2h0IG9mIHRoaXMgcG93ZXJmdWwgZXZpZGVuY2UgdG8gdGhlIGNvbnRyYXJ5LCBDbGV2ZWxhbmQgd2FzIGFjdHVhbGx5IHRoZSBsZWFzdCBpbnNhbmUgcGVyc29uIGluIHJlZ2FyZCB0byBleGVjdXRpb25zIGluIEVyaWUgQ291bnR5LiBCZWZvcmUgaGUgdG9vayBvZmZpY2UsIHRoZSBCdWZmYWxvIGRlYXRoIHBlbmFsdHkgc2NlbmUgaGFkIGVuam95ZWQgYSAiY2lyY3VzIGF0bW9zcGhlcmUsIiB3aXRoIHBlb3BsZSBnYXRoZXJpbmcgdG9nZXRoZXIgb24gbmVhcmJ5IHJvb2Z0b3BzIHRvIGVuam95IHRoZSBzcGVjdGFjbGUgb2YgYSBmZWxsb3cgaHVtYW4gYmVpbmcgc3Bhc21pbmcgb3V0IGhpcyBsYXN0IGhvcnJpZnlpbmcgbW9tZW50cyBvZiBsaWZlIHdoaWxlIGRhbmdsaW5nIGZyb20gdGhlIGVuZCBvZiBhIHJvcGUgbGlrZSBhIGNhdCB0b3kuIE90aGVyIHRoYW4gQ2xldmVsYW5kLCB0aGUgbHVja3kgc29uIG9mIGEgZ3VuLi4gCiBGcmFuayBKLiAKQWRkIGFub3RoZXIgd2VlayBpZiB0aGV5IHRyeSB0byBza2lydCBhcm91bmQgdGhlIGlzc3VlIGFuZCBjb250aW51ZSBkaXNyZXNwZWN0aW5nIHlvdXIgaHVzYmFuZC4gCk9FQUMgb2YgQmFsdGltb3JlIHdhcyBwZXJmb3JtaW5nIGEgZGFpbHkgcm91dGluZSBvZiBoaWdoIGltcG9ydGFuY2UgYW5kIG5lY2Vzc2l0eSBleGNlcHQgdGhhdCB0aGVyZSB3YXMgYSBoaWdoIHBvc3NpYmlsaXR5IG9mIG9mZmVuZGluZyBicml0dGxlIHNvY2lhbCB2aXJ0dWVzIGlmIHRoZXJlIHdhcyBhIGRlc2NyaXB0aW9uIG9mIHdoYXQgdGhlIGNvbXBhbnkgYWN0dWFsbHkgZGlkIHdpdGhvdXQgdXNpbmcgZmFyIHRvbyBtYW55IHdvcmRzLiAKKGEpIGJlbG9uZ2luZyB0byB0aGUgRW1wZXJvcihiKSBlbWJhbG1lZChjKSB0YW1lKGQpIHN1Y2tpbmcgcGlncyhlKSBzaXJlbnMoZikgZmFidWxvdXMoZykgc3RyYXkgZG9ncyhoKSBpbmNsdWRlZCBpbiB0aGUgcHJlc2VudCBjbGFzc2lmaWNhdGlvbihpKSBmcmVuemllZChqKSBpbm51bWVyYWJsZShrKSBkcmF3biB3aXRoIGEgdmVyeSBmaW5lIGNhbWVsIGhhaXIgYnJ1c2gobCkgZXQgY2V0ZXJhKG0pIGhhdmluZyBqdXN0IGJyb2tlbiB0aGUgd2F0ZXIgcGl0Y2hlcihuKSB0aGF0IGZyb20gYSBsb25nIHdheSBvZmYgbG9va3MgbGlrZSBmbGllc0kgbGlrZSB0byB0aGluayB0aGF0IEknZCBiZSBhICdrJyAuIEZhaWxpbmcgdGhhdCBhbiAnbicuIApCdXQgeW91IG5lZWQgbm90IHdvcnJ5LCBiZWNhdXNlIHlvdSBtYXkgdXNlIHdoaXRlbmluZyBmYWNpYWwgY3JlYW0gdG8gYWNoaWV2ZSB0aGUgc25vd3kgd2hpdGUgc2tpbiB5b3UgZGVzaXJlLiAKVGhlIGVhc2llc3Qgd2F5IHRvIHRoaW5rIGFib3V0IGV4cGVjdGVkIHZhbHVlIGlzIHRocm91Z2ggYW4gZXhhbXBsZSBnaXZlbiBieSBCaWxseSBNdXJwaHkgb2YgRm9yZXZlciBKb2JsZXNzLiBJbWFnaW5lIHlvdSdyZSBwbGF5aW5nIGEgY29pbiBmbGlwcGluZyBnYW1lIHdpdGggYSBmcmllbmQsIGFuZCB5b3Ugd2FnZXIgJDEuIElmIHRoZSBjb2luIGNvbWVzIHVwIGhlYWRzLCB5b3Ugd2luICQyLCBidXQgaWYgdGhlIGNvaW4gY29tZXMgdXAgdGFpbHMsIHlvdSBsb3NlIHlvdXIgb3JpZ2luYWwgJDEgaW52ZXN0bWVudC4gVGhlcmUncyBhIDUwIHBlcmNlbnQgY2hhbmNlIHlvdSdsbCBnYWluICQxIGFuZCBhIDUwIHBlcmNlbnQgY2hhbmNlIHlvdSdsbCBsb3NlICQxLiBUaGUgZXhwZWN0ZWQgdmFsdWUgb2YgdGhlIHNjZW5hcmlvLCB0aGVuLCBpcyAkMCwgbWFraW5nIGl0IGEgbmV1dHJhbCBpbnZlc3RtZW50LgpCZWZvcmUgaGUgbGVhcm5lZCBhYm91dCB0aGUgYW5vbnltb3VzIGdhbWJsZXIncyBnaWZ0LCBHYW1ib2Egc2FpZCBoZSB3YXNuJ3QgaW4gaXQgZm9yIHRoZSBtb25leS4KSXQgaXMsIGluZGVwZW5kZW50IG9mIGl0cyBzaXplLCBvbmUgb2YgdGhlIGJlc3Qgc3BlY2ltZW5zIG9mIHN1YnN0YW50aWFsLCB3ZWxsIG1hZGUgYnJpY2t3b3JrIGluIGV4aXN0ZW5jZS4iIFNlcHRlbWJlciA4LCAxODk1LCBQYWdlIDE3LCBUaGUgTmV3IFlvcmsgVGltZXMgQXJjaGl2ZXMuIApCYWNrIHRvIGtpc3NpbmcgaW4gZnJvbnQgb2YgYW4gYXVkaWVuY2UsIGZvciBtZSwgaXQgcHJldHR5IG11Y2ggYW4gaW50aW1hY3kgdGhpbmcuIEkgZG9uIHRoaW5rIEkgZXZlciBiZWVuIHdpdGggYW55b25lIHdobyB3YW50ZWQgdG8gZmxhZ3JhbnRseSBraXNzIHdpdGggYSBidW5jaCBvZiBwZW9wbGUgd2F0Y2hpbmcsIHF1aXRlIHRoZSBvcHBvc2l0ZS4gQW5kIGV2ZXJ5b25lIEkgY2xvc2UgdG8gSVJMIGJlaGF2ZXMgaW4gYSBzaW1pbGFyIHdheS4gClBoeXNpb3N3aXNzIGt1cnogdm9yIGRlbSBaaWVsCihPbmx5IG11Y2ggbGF0ZXIgd2FzIG1lc3N5IGNoYXJjb2FsIGFuZCBpbmVkaWJsZSBzYWx0cGV0ZXIgYWRkZWQgc28gdGhhdCwgb25jZSBpZ25pdGVkLCBpdCB3b3VsZCBjb250aW51ZSBidXJuaW5nLikgU2luY2UgbW9zdCBvZiB0aGUgaGVyYnMgd2VyZSBoaWdobHkgYW50aXNlcHRpYywgd2hlbiBydWJiZWQgb24gdGhlIHNraW4gYW5kIG1lbHRlZCBieSBib2R5IGhlYXQsIHRoZXkgcmVsZWFzZWQgYSBzY2VudCBhbmQgZGlzaW5mZWN0ZWQgd291bmRzLiAKV29ybGRzIGJldHRlci4gCkJlZm9yZSBHMUknbGwgYmUgcG9zdGluZyBjb25zb2xlIHJvdXRlcy9zdHJhdHMgc3RhcnRpbmcgbmV4dCB3ZWVrLiBJJ2xsIHBvc3QgQ2xhaXJlIEIgdG9tb3Jyb3cuIEkgcmVhbGl6ZSB0aGF0IGJlY2F1c2UgdGhpcyBpcyBQQyB2ZXJzaW9uIGFuZCBJIHVzZSB0aGUga25pZmUgZXhwbG9pdCBvbiB0d28gKGltbW9iaWxpemVkKSBib3NzZXMgKHdoaWNoIHJlYWxseSBkb2Vzbid0IGNoYW5nZSBtdWNoIEkndmUgZm91bmQgaW4gZnVydGhlciBleHBlcmltZW50YXRpb24pIHRoYXQgY29uc29sZSBwbGF5ZXJzIGNhbid0IHJlcGxpY2F0ZSBteSBzdHJhdHMgdmVyYmF0aW0uIEkgd2lsbCBoYXZlIGJldHRlciBzdHJhdHMgdG8gc2hhcmUgd2l0aCBjb25zb2xlIGJyb3Mgc29vbi4KTU9TRVIgaGFzIGJlZW4gYXJvdW5kIGxvbmcgZW5vdWdoIHRvIGhhdmUgc2VlbiB0aGUgb3JpZ2luYWwgUmFtb25lcyBpbiBhIHNtYWxsIGNsdWIgaW4gTmV3IEplcnNleSwgVTIgZnJvbSB0aGUgZm91cnRoIHJvdyBvZiBhIHRoZWF0ZXIgYW5kIEJvYiBEeWxhbidzIGJvcm4gYWdhaW4gdG91cnMuIEJ1dCBoZSBhbHNvIGhhcyB0aGUgbnVtYmVyIGZvciBBbGwgQW1lcmljYW4gUmVqZWN0cycgTmljayBXaGVlbGVyIG9uIGhpcyBjZWxsIHBob25lLCB3cm90ZSB0aGUgZmlyc3Qgc3RvcnkgZXZlciBkb25lIG9uIEphY2sncyBNYW5uZXF1aW4gYW5kIGh1bmcgb3V0IGluIFdpeiBLaGFsaWZhJ3MgaG90ZWwgcm9vbS4uIApCdXQgaW4gMTk3MCBTbGltIGJlc3QgZnJpZW5kLCB0aGUgb25lIHRpbWUgRGFsbGFzIGJvb3RsZWdnZXIgQmVubnkgQmluaW9uLCBpbnZpdGVkIGhpbSB0byB0YWtlIHBhcnQgaW4gdGhlIGZpcnN0IFdvcmxkIFBva2VyIENoYW1waW9uc2hpcHMuIFRoZSB2ZW51ZSB3YXMgdGhlIEhvcnNlc2hvZSwgQmluaW9uIGNhc2lubyBpbiBMYXMgVmVnYXMgcmVub3duZWQgZm9yIGFjY2VwdGluZyBhbnkgYmV0LCBubyBtYXR0ZXIgaG93IGJpZy4gCkZvdXIgbWFjaGluZXMgaGF2ZSBiZWVuIHNlaXplZCBmcm9tIElsbGF3YXJyYSBob21lcyBpbiByZWNlbnQgdGltZXMsIHdoaWNoIHdpbGwgc29vbiBiZSBkZXN0cm95ZWQgYnkgcG9saWNlLiBTZ3QgS2VldmVycyBzYWlkIHBvbGljZSBnYXZlIG5vdGljZSB0byBvd25lcnMgdGhhdCBpdCB3YXMgaWxsZWdhbCB0byBvd24gYSBtYWNoaW5lLCByYXRoZXIgdGhhbiBjaGFyZ2luZyB0aGVtLCBhcyB0aGUgb2ZmZW5jZSBhbmQgcGVuYWx0aWVzIHdlcmUgbm90IHdpZGVseSBrbm93bi4gSGUgc2FpZCB0aGUgbGFzdCBjaGFyZ2UgZm9yIHN1Y2ggYW4gb2ZmZW5jZSB3YXMgaW4gMjAxMiwgcmVzdWx0aW5nIGluIGEgJDUwMCBmaW5lLgpFZGl0OiBzYXlpbmcgcGxheWVycyBhdCBFTE8gMTYwMCAxODAwIGFyZW4gZ29vZCBpcyB2ZXJ5IHJlbGF0aXZlLiBUaGVyZSBhcmUganVzdCA1MDAgYWNjb3VudHMgKGZld2VyIHBsYXllcnMpIGF0IHRoYXQgc2tpbGwgbGV2ZWwgaW4gdGhlIHdvcmxkLiBBbmQgZm9yIG1lLCB0aGF0IEkgd29yayA0MGgvd2VlayBhbmQgY2FuIHBsYXkgbmVhcmx5IGFzIG11Y2ggYXMgYSB0ZWVuYWdlciBpbiBoaWdoIHNjaG9vbCwgSSBjb25zaWRlciB0aGF0IGEgcmVhbGx5IGdvb2QgcGVyc29uYWwgYWNoaWV2ZW1lbnQuIE5vdGUgdGhhdCBtb3N0IG9mIG15IGdhbWVzIGFyZSBwbGF5ZWQgZHVyaW5nIHRoZSAxaCBicmVhayBJIGdldCBmb3IgbHVuY2ggYW5kIGFyZSBwbGF5ZWQgb24gbXkgcGhvbmUuIE5vIGRhbWFnZSBjYWxjdWxhdG9yIG9yIGEgcmVhbGx5IGdvb2QgZW52aXJvbm1lbnQgdG8gZm9jdXMuCkkgYmVlbiB3aGVyZSB5b3UgYXJlLiAKSGUgbWFuYWdlZCB0byB1bml0ZSBhbmQgbWFrZSB1cyBhbGwgc2hhcmUgb25lIGhlYXJ0LiAKSGUgaXMgZmlyc3QgdG8gYWN0IHBvc3RmbG9wIGFuZCBqYW1zIHRoZSBmbG9wIGludG8gbWUgYW5kIEkgc25hcCBjYWxsIHdpdGggdG9wIHNldCBvZiBhY2VzIGFuZCB0aGUgbnV0IGZsdXNoIGRyYXcgYWxvbmcgd2l0aCBhIGd1dHRlciB0byB0aGUgbnV0cy4gTWFkZSBteSBmbHVzaCBvbiB0aGUgZmlyc3QgYm9hcmQgYW5kIHF1YWRzIG9uIHRoZSBzZWNvbmQgZm9yIHRoZSBudXRzIG9uIGJvdGggYm9hcmRzIGFuZCBzaG9ydGx5IGFmdGVyd2FyZHMgSSBjYXNoIG91dCBteSBwb2tlciBzdGFjayBhbG9uZyB3aXRoIHRoZSBjaGlwcyBJIHBvY2tldGVkIGZyb20gYmxhY2tqYWNrLiBUaGUgbGFkeSBiZWhpbmQgdGhlIGNvdW50ZXIgYW5ub3VuY2VzIDE1NTQuNTAuLiAKWW91IHN1cHBvc2VkIHRvIGJlIGFibGUgdG8gdGVsbCBpdCB0byBwZW9wbGUgeW91IGNhbiB0cnVzdCB0byBzYWZlbHkgY29uZmlkZSBpbi4gSXNuIHRoYXQgYXQgbGVhc3QgYSBzbWFsbCBwYXJ0IG9mIGl0PyBUYWtpbmcgYXdheSB0aGUgcG93ZXIgb2YgeW91ciBleHBlcmllbmNlIGJ5IHNheWluZyBpdCBvdXQgbG91ZCBhbmQgbm90IGZlZWxpbmcgbGlrZSB5b3Ugc2hvdWxkIGJlIGFzaGFtZWQgaXMgYSBodWdlIHBhcnQgb2YgaXQgSSB0aGluay4uIApXZSBzdG9vZCBzdGlsbCwgYW5kIGV2ZW4gSmltIHN0b29kIHN0aWxsIGZvciBhIHNlY29uZCwgYW5kIHdlIGZsYXNoZWQgb3VyIGxpZ2h0cyBvbiB0aGUgb2xkIGFiYW5kb25lZCBtb3J0dWFyeSByZWZyaWdlcmF0ZWQgY2hhbWJlcnMsIHdoZXJlIHRoZSBib2RpZXMgd2VyZSBzdG9yZWQuIEFuZCBoZXJlIGlzIHRoZSByZWFzb24gdGhpcyBzdG9yeSBpcyBhYm91dCBKaW0uIEhlIHdlbnQgcmlnaHQgb3ZlciB0aGVyZSBhbmQgb3BlbmVkIG9uZSBvZiB0aG9zZSBkb29ycywgcHVsbGVkIG91dCB0aGUgZ3VybmV5LCBhbmQgbGFpZCBkb3duIG9uIGl0LiAKVyBjemFzaWUgcHJlenlkZW50dXJ5IFJvYmVydGEgQmllZHJvbmlhIHcgU3Vwc2t1IGR1ZyBtaWFzdGEgc3BhZCBvIDIwJSAgIDUwIG1pbGlvbncgem90eWNoLiBUbyByZWRuaW8gNjAgdHlzaWN5IHpvdHljaCBkemllbm5pZS4gT3NpZ25saW15IHRvIGR6aWtpIG9kcG93aWVkemlhbG5laiBwb2xpdHljZSBmaW5hbnNvd2VqLCBwb2N6b25laiB6IG9kd2FueW1pIGlud2VzdHljamFtaSBzcG9lY3pueW1pLiIKV2hlbiBpIHdhcyBhIGtpZCBJIHdhdGNoZWQgYSBtYXJpb25ldHRlIGFjdGlvbiBzaG93IGNhbGxlZCBTdXBlcmNhciBpdCBoYWQgYSBoaWdoIGNyZWVwIGZhY3RvciB0byBpdCB3aGF0IHdpdGggdGhlIG1hcmlvbmV0dGUgZXllcyBhbmQgbW91dGhzIGFuZCBhbGwsIGJ1dCBJIHdhdGNoZWQgaXQgYW55d2F5LCBJIGd1ZXNzLCBiZWNhdXNlIHRoYXQgd2FzIHByb2JhYmx5IHRoZSBvbmx5IGNhcnRvb24gYmVpbmcgYnJvYWRjYXN0IGF0IHRoYXQgaG91ci4gKEl0IHdhcyBmaWxtZWQgaW4gIlN1cGVybWFyaW9uYXRpb24iLCB3aGljaCB1dGlsaXplZCBlbGVjdHJpYyBtb3ZpbmcgcGFydHMgaW4gdGhlIG1hcmlvbmV0dGVzIGluIGFkZGl0aW9uIHRvIHN0cmluZyBjb250cm9scy4gCkNoYW5jZXMgYXJlLCBhIHRlbmFudCBpcyBub3QgZ29pbmcgdG8gbW92ZSBvdmVyICQxNSBvciAkMjAsIGJ1dCBrZWVwaW5nIHVwIHdpdGggaW5mbGF0aW9uIGFuZCByaXNpbmcgZXhwZW5zZXMgaXMgYW4gaW1wb3J0YW50IHdheSB0byBtYWtlIHN1cmUgeW91IGFyZW4gdGhyb3dpbmcgYXdheSBtb25leSBlYWNoIG1vbnRoLiBIb3dldmVyLCBJIHN0aWxsIGlzc3VlIGEgbGF0ZSBmZWUgZXZlcnkgdGltZS4KVGhlIHBhcnR5IG1ha2V1cCBpcyBhcyBmb2xsb3dzOgpDaG9vc2UgYSB0eXBlIG9mIHBva2VyIGdhbWUgeW91IHdhbnQgYW5kIGJlIHRoZSBiZXN0IHlvdSBjYW4gYmUuIApNeSBkYWQgaXMgYW4gZXggY29ycmVjdGlvbmFsIG9mZmljZXIsIGFuZCBvZiBjb3Vyc2UgYSBUcnVtcCBzdXBwb3J0ZXIuIApTdGlnbWEgaXMgbGVzc2VuaW5nLCBwZW9wbGUgYXJlIG5vdCBhcyBob3JyaWZpZWQgYW55bW9yZSwgdGhleSBtb3JlIGFjY2VwdGluZy4gCkhlJ3MgaGFkIHJlbGF0aW9uc2hpcHMgd2l0aCB3b21lbiBhbmQgeW91IGNhbiBpbWFnaW5lIGlmIGEgZmFtb3VzIGZvb3RiYWxsIHBsYXllciBzdGFydHMgYSBuZXcgcmVsYXRpb25zaGlwLCBpdCdzIGFsbCBvdmVyIHRoZSBtYWdhemluZXMgYW5kIGxvdHMgb2YgdGhlIHN0b3JpZXMgd2VyZSBwcm9iYWJseSBub3QgdHJ1ZSBIZSBnb3QgdGlyZWQgb2YgdGhhdC4nLiAKSG91c2luZyBvcHRpbWlzbSBoYXMgYWxzbyBkZXRlcmlvcmF0ZWQgdGhlIHNoYXJlIG9mIHJlc3BvbmRlbnRzIHdobyBleHBlY3QgbG9jYWwgcmVhbCBlc3RhdGUgdmFsdWVzIHRvIGRlY3JlYXNlIGluIHRoZSBuZXh0IHNpeCBtb250aHMgcm9zZSB0byAxOS42IHBlciBjZW50LCBmcm9tIDE2LjMgcGVyIGNlbnQgYSBtb250aCBlYXJsaWVyLCB0aG91Z2ggdGhhdCBjb2hvcnQgcmVtYWlucyBvdXRudW1iZXJlZCBieSB0aG9zZSBleHBlY3RpbmcgcHJpY2UgaW5jcmVhc2VzIDM3LjEgcGVyIGNlbnQgb2YgcmVzcG9uZGVudHMsIGxpdHRsZSBjaGFuZ2VkIGZyb20gYSBtb250aCBlYXJsaWVyLgpUaGlzIHBlcnNvbiBjYW4gZ2V0IGEgbWVjaGFuaWNhbCBsaWZ0LCB0aGV5IGNhbiBiZSBob3NwaXRhbGl6ZWQgKHdoZXJlIHRoZXkgd2lsbCBiZSBoYW5kbGVkIHdpdGggYSBtZWNoYW5pY2FsIGxpZnQpLCBvciB0aGV5IGNhbiwgZXZlbnR1YWxseSwgZGllLiBUaGUgaGVhZCBob25jaG8gaGVyc2VsZiB3ZW50IG91dCB0byBsYXkgZG93biB0aGUgbGF3LCBtdWNoIHRvIHVzIHVuZGVybGluZ3Mgc2F0aXNmYWN0aW9uLi4gCkkgYW5zd2VyIGFsbCBteSBjaGlsZHJlbidzIGxldHRlcnMgICBzb21ldGltZXMgdmVyeSBoYXN0aWx5ICAgYnV0IHRoaXMgb25lIEkgbGluZ2VyZWQgb3Zlci4gCkp1c3QgZ3JpbmRzIG15IGdlYXJzIHdoZW4gcGVvcGxlIGxpa2UgdG8gYXBwbHkgdGhpcyBzaGl0IHRvIEFtZXJpY2FuIHBvbGl0aWNzIGFuZCBzdGFydCByZWZlcmVuY2luZyBob3cgdGhlIGxpYmVyYWxzIGFyZSBhbGwgc29jaWFsaXN0IGRpY3RhdG9ycyBhbmQgdGhlIHJlcHVibGljYW5zIGFyZSBzb21lIG5hemkgcmVnaW1lLiBMaWtlIHlhIGtub3cgd2hhdCwgbm8uIE1heWJlIGdlbyBwb2xpdGljYWwgc2l0dWF0aW9ucyBhcmUgYSBiaXQgbW9yZSBjb21wbGV4IGFuZCBuZWl0aGVyIHBhcnR5IGluIEFtZXJpY2FuIHBvbGl0aWNzIGlzIGxpa2UgZWl0aGVyIG9mIHRob3NlIGV4dHJlbWVzLi4gCkFzIHRoZSBvZmZpY2lhbCBJbnRlcm5ldCBEb2N0b3Igb2YgdGhpcyB0aHJlYWQsIEkgYW0gZGlhZ25vc2luZyBhbGwgb2YgeW91IGRvd252b3RlcnMgd2l0aCBtb2RlcmF0ZSBzZXZlcmUgYXV0aXNtLi4gCkluIG90aGVyIHdvcmRzLCB5b3VyIG5ldyBjYXIgaXMgYWxsIHNldCB1cCB0byBjb21tdW5pY2F0ZSB3aXRoIHRoZSBBcHBsZSBkZXZpY2VzIHRoYXQgdGhlIGF1dG8gbWFudWZhY3R1cmVyIGFzc3VtZXMgbW9zdCBwZW9wbGUgaGF2ZSwgYW5kIGl0IGRvZXNuJ3QgcmVhbGx5IG1hdHRlciB3aGV0aGVyIG9yIG5vdCBzdWNoIGFuIGFzc3VtcHRpb24gaXMgY29ycmVjdC4gClBvbGl0aWNhbCBSZXNlYXJjaCBBc3NvY2lhdGVzCkxhZHlFbGxhT2ZGcmVsbCAgMSBwb2ludCAgc3VibWl0dGVkIDYgZGF5cyBhZ28KV2hpY2ggd2FzIHNob2NraW5nIGJlY2F1c2UgaGUgd2FzIGtub3duIHRvIGJlIGEgZmlyZSBidWcsIGhpcyBtb20gZXZlbiBzYWlkIGhlIG5ldmVyIGRvbmUgYW55dGhpbmcgbGlrZSB0aGlzIGJ1dCBhcyBhIG5lYXIgc3RyYW5nZXIgSSBhbHdheXMga25ldyBzb21ldGhpbmcgd2FzIG9mZiwgaGlzIG1vbSBoYWQgb25jZSB0b2xkIHVzIHRvIGtlZXAgbGlnaHRlcnMgYXdheSBmcm9tIGhpbSBiZWNhdXNlIGhlIGhhcyBhIGZhY2luYXRpb24gd2l0aCBmaXJlLiAKQXNzZXNzIHRoZSBzdHVkZW50J3MgcHJvZ3Jlc3MuIE9uY2UgeW91IGhhdmUgZXhwbGFpbmVkLCB3b3JrZWQgdGhyb3VnaCBwcm9ibGVtcyB0b2dldGhlciwgYW5kIHByYWN0aWNlZCBhIHNwZWNpZmljIGNvbmNlcHQsIHlvdSBzaG91bGQgdGVzdCB0aGUgc3R1ZGVudCdzIHVuZGVyc3RhbmRpbmcgb2YgdGhlIGNvbmNlcHQuIERlcGVuZGluZyBvbiB0aGUgc2V0dGluZyBvZiB5b3VyIHRlYWNoaW5nLCB5b3UgbWF5IHNpbXBseSBwcm92aWRlIHRoZW0gd2l0aCBhIGZldyBwcm9ibGVtcyB0byBjb21wbGV0ZSBzbyB5b3UgY2FuIHNlZSB3aGljaCBxdWVzdGlvbnMgdGhleSBnZXQgd3JvbmcgYW5kIHdoaWNoIHRoZXkgZ2V0IHJpZ2h0LCBvciB5b3UgbWlnaHQgaGF2ZSB0byBjb25kdWN0IHRlc3RpbmcgdGhhdCB3aWxsIGRldGVybWluZSBhIGdyYWRlIHBvaW50IGF2ZXJhZ2UgZm9yIHRoZSBjb3Vyc2UuLiAKQWZ0ZXIgU291dGggQWZyaWNhIHdlcmUgYm93bGVkIG91dCBmb3IgNTAwLCB3aXRoIGEgbGVhZCBvZiAxNjYsIEthbGxpcyB3YXMgc2Vjb25kIGxhc3Qgb3V0IG9mIHRoZSBjaGFuZ2Ugcm9vbS4gCkdvb2QgbHVjaywuClNpbmdhcG9yZS4gU2luZ2Fwb3Jld2FzIHRoZSBmaXJzdCBBc2lhbiBjb3VudHJ5IGluIHdoaWNoIEkgZXZlciBsYW5kZWQsIGJhY2sgaW4gMjAxMS4gCkhhbmd0ZW5pbmVhc3RiZXJsaW4gIDIwIHBvaW50cyAgc3VibWl0dGVkIDE0IGRheXMgYWdvCihTbnlkZXJtYW4sIFdlaWwgMjAwMikuLiAKRXRzc3Vja3NoYXJkICAxIHBvaW50ICBzdWJtaXR0ZWQgMSBkYXkgYWdvCllvdSBzZWUgdGhhdCBjaGFuZ2luZz8gUHJvZmVzc29yIFBhbnQgYXNrZWQuIHRhbGVudCBnb2luZyB0byBiZWNvbWUgZXZlbiBtb3JlIGZ1bmdpYmxlIHRoYW4gYmVmb3JlIGJlY2F1c2UgY3VsdHVyYWwgYmFycmllcnMgdG8gc3VjY2VzcyBnbyBkb3duPwogMyBmaWdodGluZyBzZWVtcyByZWFsbHkgaGFyc2gsIGFuZCArMyBzcGVsbGNhc3RpbmcgaXMgcHJhY3RpY2FsbHkgb3ZlcnJpZGluZyB0aGUgIHdpeiBhbGwgYnkgaXRzZWxmIChvaywgbWF5YmUgbm90IHJlYWxseSwgYnV0IHN0aWxsKS4gClRoZSBMYXMgVmVnYXMgbmF0aXZlIGlzIGNvbWluZyBvZmYgYSBzZWNvbmQgY29uc2VjdXRpdmUgdG9wIGZpdmUgcnVuLCB0aGlzIHRpbWUgYXQgaGlzIGhvbWUgdHJhY2ssIGFuZCBmZWx0IGFzIGlmIGhpcyBDaGlwIEdhbmFzc2kgUmFjaW5nIHRlYW0gYW5kIGl0cyBDaGV2cm9sZXQgcG93ZXIgd2FzIGZpbmFsbHkgY2F0Y2hpbmcgdXAgdG8gdGhlIEZvcmQgYW5kIFRveW90YSB0ZWFtcyB0aGF0IGhhdmUgZG9taW5hdGVkIHRoZSBlYXJseSBwYXJ0IG9mIHRoZSBOQVNDQVIgc2Vhc29uLgpUcnVseSwgeW91ciBjb25maWRlbmNlIGluIG1lIGhhcyBibGVzc2VkIG1lIHBlcnNvbmFsbHkgYW5kIGVuYWJsZWQgbWUgdG8gYWR2YW5jZSB5b3VyIGFnZW5kYSBiZXlvbmQgd2hhdCBhbnlvbmUgYW50aWNpcGF0ZWQgYXQgdGhlIGJlZ2lubmluZyBvZiB5b3VyIEFkbWluaXN0cmF0aW9uLiAKQWZ0ZXIgdGhlIE9seW1waWNzLCBicmluZyB1cCBOYXRlIFNjaGllcmhvbHR6IGFuZCBsZXQgaGltIHBsYXkgZXZlcnlkYXkgaW4gU2VwdGVtYmVyLiBTb21lIG9mIHlvdSBoYXZlIG1lbnRpb25lZCBEb3VibGUgQSBjYXRjaGVyIFBhYmxvIFNhbmRvdmFsLiAKU2hlIG1heSBkaXNndWlzZSB0aGlzIGJ5IGxvb2tpbmcgYXQgaGVyIHBob25lIG9yIGEgYm9vay4gTm90aGluZyBzY2FyZXMgbWVuIGxpa2UgYmVpbmcgcmVqZWN0ZWQgYnkgYSBsYWR5IHRoZXkgYXJlIHZlcnkgYXR0cmFjdGVkIHRvLiBJZiBzaGUgaXMgbG9va2luZyB5b3UgZGlyZWN0bHkgaW4gdGhlIGV5ZXMsIHNoZSB3YW50cyB0byBnZXQgdG8ga25vdyB5b3UuIApXaGVuIEpvbiBzdGFydHMgZ2F0aGVyaW5nIG1lbiB0byBhdHRhY2sgdGhlIEJvbHRvbnMsIG5vIG9uZSAoZXhjZXB0IG1heWJlIFJhbXNheSwgb25jZSkgcXVlc3Rpb25zIHRoZSBmYWN0IHRoYXQgaGUgaGFzIGxlZnQgdGhlIE5pZ2h0IFdhdGNoLiBFaXRoZXIgaGUgYSBkZXNlcnRlciBhbmQgYnkgdGhlaXIgbGF3cyBzaG91bGQgYmUgZXhlY3V0ZWQsIG9yIGhlIGRpZWQgYW5kIGNhbWUgYmFjayB0byBsaWZlLCB3aGljaCB0byB0aGVtIHdvdWxkIGJlIGFuIGFic3VyZCBzdWdnZXN0aW9uLiAKQ3JlZGl0IHF1YWxpdHkgaXMgZGV0ZXJpb3JhdGluZyBpbiBDYW5hZGEKVGhleSBvdmVyaHlwZSB0aGVtIGFuZCBvdmVyZXhwb3NlZCB0aGVtIGluIGEgc2hvcnQgcGVyaW9kIG9mIHRpbWUgd2l0aCBubyBzdG9yeWxpbmUvYSBtZWFuaW5nbGVzcyBzdG9yeWxpbmUgYW5kIHRoZW4gYWJhbmRvbiB0aGVtIGZyb20gdHYgZm9yIGEgd2hpbGUgYmVjYXVzZSB0aGV5IGhhdmUgbm90aGluZy4gCihDTk4pICAgVGhlcmUncyBhIG5ldyBraWQgb24gdGhlIGJsb2NrLCBhbmQgY2hhbmNlcyBhcmUgaGUncyBpbiBhIHN0cm9sbGVyIGJlaW5nIHB1c2hlZCBieSBhIHN0YXkgYXQgaG9tZSBkYWQuIApPdXIgZnJlZSBmb3JtIExhZ29vbiBzd2ltbWluZyBwb29sIGlzIGNvbnNpZGVyZWQgb25lIG9mIHRoZSBsYXJnZXN0IG9mIGl0cyBraW5kIGluIFNvdXRoIEVhc3QgQXNpYS4gVGFrZSBhIHN0cm9sbCBhbG9uZyB0aGUgcHJpdmF0ZSBiZWFjaCBhbmQgYSBzcGxhc2ggaW4gdGhlIGdsaXR0ZXJpbmcgd2F0ZXJzIG9mIHRoZSBjYWxtIGFuZCBjbGVhbiBBbmRhbWFuIFNlYSAuIAooTm8sIEkgbm90IGEgbGF3eWVyLCBzbyBJIG5vdCB2ZXJ5IGNsZWFyIG9uIHRoZSBkaWZmZXJlbmNlIGVpdGhlciwgc29ycnkuKSBXaGF0IHRoYXQgbWVhbnMgaXMgdGhhdCB5b3VyIGNvbW1lbnQgdGhlbiBiZWNvbWVzIGEgY3JlZGlibGUgYW5kIHBvc3NpYmxlIHN1Z2dlc3Rpb24gdGhhdCB0aGUgT1AgZG8gc29tZXRoaW5nIHRoYXQgY291bGQgbGFuZCB0aGVtIGluIGEgbG90IG9mIGxlZ2FsIHRyb3VibGUsIG5vdCBzaW1wbHkgYSBmdW5ueSBvZG9yaWZlcm91cyBtZWFucyBvZiBpbiBsYXcgcmVwZWxsZW50Li4gCklmIG5vdCwgSSB3b3VsZCByZWNvbW1lbmQgeW91IHRvIGhhdmUgYSBsb29rIGludG8gaXQsIGJlY2F1c2UgSSBmb3IgZXhhbXBsZSBzdHVkaWVkICdidXNpbmVzcyBpbmZvcm1hdGljcycgYW5kIGkgd29uJ3QgdG91Y2ggY29kZSBpbiBteSBsaWZlIGFnYWluLiBCdXV1dCwgaWYgeW91J3JlIGFibGUgdG8gY29kZSAvIGVzcGVjaWFsbHkgaW4gdGhlIGN1cnJlbnQgbWFya2V0LCBlc3BlY2lhbGx5IGluIGFiYXAgKGF0IGxlYXN0IHRoYXQnYSBteSBvY2N1cGF0aW9uKSBidXQgSSB0aGluayBhbHNvIGluIGFueSBvdGhlciBsYW5ndWFnZSwgeW91IHdpbGwgbmV2ZXIgYm90aGVyIGFib3V0IGEgam9iIG9yIG1vbmV5IGFnYWluLiAKQ2FzaW5vIGluZHVzdHJ5LCBzYWlkIGl0IGlzIHJldmlld2luZyB0aGUgb3BpbmlvbiBhbmQgaXRzIGltcGxpY2F0aW9ucyBvbiB0aGUgaW5kdXN0cnksIGNvbnN1bWVycyBhbmQgZWlnaHQgc3RhdGVzIHRoYXQgY3VycmVudGx5IG9mZmVyIGxlZ2FsLCByZWd1bGF0ZWQgc3BvcnRzIGdhbWluZy4gCkkgaGF2ZSBubyBhdmFpbGFibGUgRmVtYWxlIEZhbWlseSBtZW1iZXJzIGluIG15IENvdXJ0IHRvIG1hcnJ5IG9mZiBmb3IgYSBOb24gQWdyZXNzaW9uIFBhY3QuIEkgaG9waW5nIGhlIGp1c3QgZm9jdXNlcyBvbiB0aGUgcmVtYWluaW5nIE11c2xpbSB0ZXJyaXRvcmllcyBpbiB0aGUgU291dGh3ZXN0LCBwbHVzIGhpcyBkZSBqdXJlIHRlcnJpdG9yeSB1bmRlciBCYXJjZWxvbmEgKEhlIEp1c3QgdG9vayBVcmdlbGwuKSBhbmQgbGVhdmVzIG1lIGFsb25lIGZvciBhIGdvb2Qgd2hpbGUsIGJ1dCBJIGtpbmQgb2YgZmVlbCBsaWtlIEkgaGF2ZSBhIHN3b3JkIG9mIERhbW9jbGVzIGhhbmdpbmcgb3ZlciBteSBoZWFkIG5vdy4uIApBbmQgZXZlbiB3aGVuIGl0IGhhcHBlbnMgdGhhdCBpbmRpdmlkdWFsIGV2ZW50dWFsbHkgZW1wbG95ZWVzIGEgdGVhbSB0byBoZWxwLiAKVGVhc2luZykuIApJIHRoZSBPUCAgIG9uIG15IHJlZGRpdCBJIGRvbiBoYXZlIEZvcm1hdHRpbmcgSGVscC4gSSB0cmllZCB1c2luZyB0aGUgZ3JlYXRlciB0aGFuIHN5bWJvbCBhbmQgaXQgaGFkIG5vIGVmZmVjdC4gSXQgdGhlcmUgbm93LiBJIGhhdmUgYWN0dWFsIHRleHQgZWRpdGluZyB0b29scyBpbiBteSBjb21tZW50IGJveCBidXQgbm9uZSBvZiB0aGVtIHF1b3RlIG9yIHNocmluayB0ZXh0IHRoZSB3YXkgSSB1c2VkIHRvIGFjaGlldmUgdGhpcyB3aXRoIHRoZSBncmVhdGVyIHRoYW4gc3ltYm9sLgpOZXR3b3JrIG1lY2hhbmlzbXMgb2YgaW50ZW50aW9uYWwgbGVhcm5pbmcuIE5ldXJvSW1hZ2UuIDEyNywgcHAuIApJZiBJIHRlbGwgeW91IEkgaGF2ZSBhIHBhaXIgb2YgZ2FyZGVuIHNoZWFycyBpbiBteSBnYXJhZ2UsIHdvdWxkIHlvdSBiZWxpZXZlIG1lPyBQcm9iYWJseS4gSWYgeW91IHdhbGsgaW50byBhbnkgcmFuZG9tIGdhcmFnZSBpbiB0aGUgVVMsIGNoYW5jZXMgYXJlIGdvb2QgeW91IHdpbGwgZmluZCBhIHBhaXIgb2YgZ2FyZGVuIHNoZWFycy4gClRoZSBwaGVub21lbmFsIGluY3JlYXNlcyBpbiBpdHMgdmFsdWUgYXJlIGxpa2VseSB0byBiZSBmcmVlIGZyb20gY2FwaXRhbCBnYWlucyB0YXguIApBbmQgTXJzLiBDaGFybGVzIEouIApDb25zaWRlcmluZyB0aGUgY29zdCBvZiBpbGxlZ2FscyB0byB0aGUgY291bnRyeSBldmVyeSB5ZWFyIGlzIG92ZXIgMTAwIGJpbGxpb24gKGZhY3QsIGxvb2sgaXQgdXApLiBMZXQgc2F5IHRoZSBjb3N0IG9mIElMTEVHQUwgYWxpZW5zIHRvIHRoZSBjb3VudHJ5IGdvZXMgZG93biBldmVuIDEwIGJpbGxpb24gZG9sbGFycywgd2hpY2ggd291bGQgYmFzaWNhbGx5IG1lYW4gdGhlIHdhbGwgcGF5cyBmb3IgaXRzZWxmIGFuZCB0aGVuIHNvbWUsIHRoZW4gd2lsbCBhbGwgb2YgeW91IGNsb3ducyBlYXQgeW91ciB3b3JkcyBhbmQgYWRtaXQgaXQgd2FzIHRoZSByaWdodCBjYWxsPyBPciB3aWxsIHlvdSBmaW5kIHNvbWUgb3RoZXIgcmVhc29uIHdoeSBpdCB3YXMgd3JvbmcgYW5kIHVuanVzdCBhbmQgcmFjaXN0IGFuZCB3aGF0ZXZlciBlbHNlIHlvdSBiZWVuIGZlZCBieSBNU00uIApBVHMsIEFKcywgS0pzLCBRSnMsIFFRICAgaGlnaCBwYWlyIGhhbmRzLCBhbGwgY2FsbGluZwpEYXRhIHNjaWVuY2UgYW5kIHNvZnR3YXJlIGVuZ2luZWVyaW5nIGFyZSBub3QgbXV0dWFsbHkgZXhjbHVzaXZlLiBBcyBzb21lb25lIHdvcmtpbmcgaW4gZGF0YSBzY2llbmNlIHlvdSB3aWxsIG5lZWQgdG8gaW4gbWFueSBjYXNlcyB3cml0ZSB5b3VyIG93biB0b29sIHRvIGRvIHlvdSBhbmFseXNpcy4gU29tZSBCSSB0b29scyBsaWtlIFRhYmxlYXUgZG8gZXhpc3QuIApQbGVhc2UsIGJ1Y2tsZSB5b3VyIGJlbHQgdXAgYW5kIHNpdCB0aWdodC4gWW91IHdpbGwgYmUgaW4gdGhlIHllYXIgb2Ygb3VyIExvcmQgMTkwOCBzb29uLiAKV2l0aCBhbGwgdGhlIFNJRHMgdHJhaW5pbmcsIHlvdSBhbmQgeW91ciBwYXJ0bmVyIG1heSBiZSB0ZXJyaWZpZWQgdG8gbGVhdmUgdGhhdCBjaGlsZCB1bnN1cGVydmlzZWQgZm9yIG1vcmUgdGhhbiAxMCBzZWNvbmRzLiBXZSB3ZXJlLiBUaGF0IHByZXNzdXJlIGFkZHMgdG8gdGhlIHN0cmVzcyBhbmQgZXhoYXVzdGlvbi4gT25lIG9mIHRoZSBtb3JlIHZhbHVhYmxlIHBpZWNlcyBvZiB3aXNkb20gSSBmb3VuZCB3YXMgInRoZSBiYWJ5IGNhbid0IGZhbGwgZnJvbSB0aGUgZmxvb3IuIgpUaGUgYmVzdCB0aW1lIHRvIHRha2Ugcmlza3MgaXMgd2hlbiB5b3UncmUgZG93biBieSBhIGxpdHRsZSBidXQgc3RhbmQgdG8gd2luIGEgbG90LgpQcm90ZWluIHNjb29wcyBhcmUgZ29vZCBidXQgZ29vZCBJIGRlZmluaXRlbHkgcmVjb21tZW5kIGZvb2Qgb3ZlciBzY29vcHMuIEZvb2QgaGFzIGEgbG90IGJldHRlciBxdWFsaXR5IHByb3RlaW4gaW4gaXQuIFNjb29wcyBkbyBoZWxwIHRob3VnaCwgSSB1c3VhbGx5IHRha2UgYSBzY29vcCBhZnRlciBJIHdvcmtvdXQuIApUaGlzIGlzIGFic29sdXRlIGJ1bGxzaGl0LiBNaW5lIGlzIGJhY2sgdXAuIApFc3RpbWF0ZWQgY29zdCBvZiB0aGUgMzAgbmV3IGFydGljdWxhdGVkIGJ1c2VzIGlzICQzMCBtaWxsaW9uLiAKQ2x1YiBtZW1iZXJzIGdhaW4gYWNjZXNzIHRvIGFmZm9yZGFibGUgZmFjaWxpdGllcywgbWVhbHMgYW5kIHNlcnZpY2VzIGluIGV4Y2hhbmdlIGZvciBtZW1iZXJzaGlwIGZlZXMuICJUaGUgY2x1YiBpcyB0aGUgbW9kZXJuIGRheSB0b3duIHNxdWFyZSB3aGVyZSBwZW9wbGUgY2FuIGNvbWUgdG9nZXRoZXIsIiBNciBCYWxsIHNhaWQuICJDbHVicyBhcmUgbXVjaCBtb3JlIHRoYW4gYnJpY2tzIGFuZCBtb3J0YXIsIHBva2VyIG1hY2hpbmVzIGFuZCBhIGJhci4gIlRoZXkgcGFydCBvZiB0aGUgc29jaWFsIGZhYnJpYyBvZiB0aGUgSWxsYXdhcnJhIGFuZCB0aGF0IG5lZWRzIHRvIGJlIHByb3RlY3RlZCBhbmQgbWFpbnRhaW5lZC4iIE1yIE8gc2FpZCBJbGxhd2FycmEgZWNvbm9teSB3YXMgcmVmbGVjdGVkIGluIHRoZSBjbHVicywgYWRkaW5nIHRoYXQgaGUgaGFkIG5vdGljZWQgYSBkcm9wIGluIHRoZSBudW1iZXIgb2YgdHJhZGllcyBoYW5naW5nIGFyb3VuZCBmb3IgYSBkcmluayBpbiB0aGUgcGFzdCBzaXggbW9udGhzLiAKVGhhdCBzYWlkLCBhbHdheXMgd2VhciB5b3VyIHN1bmJsb2NrIGFueXdheS4KQXNrIHlvdXIgZ2lybGZyaWVuZCBpZiB0aGUgcHJlc3N1cmUgeW91ciBhcmUgcHV0dGluZyBvbiBoZXIgYmFjayBpcyBlbm91Z2ggb3IgaWYgeW91IG5lZWQgdG8gYWRkIG1vcmUuIFN0YXJ0IG1hc3NhZ2luZyBoZXIgYmFjayB1c2luZyBzbG93LCBzb2xpZCBzdHJva2VzLiBNb3ZlIGZyb20gaGVyIGJhY2sgdG8gaGVyIHNob3VsZGVycyBhbmQgdGhlbiB0byBoZXIgbG93ZXIgYmFjay4gClRoYXQncyBob3cgbWFueSBvZiB1cyB3aWxsIGZpbmQgb3VyIGhhcHBpbmVzcyB0aGlzIHllYXIuIApBbGwgZml4ZXMgdGhhdCBQZXRlcnNvbiBpcyBhdCBhIGxvc3MgdG8gZXhwbGFpbiwgYnV0IGlzIHJvbGxpbmcgd2l0aCBub25ldGhlbGVzcywgZ2l2ZW4gdGhlIHJlc3VsdHMuUGV0ZXJzb24gbWV0YXBob3JpY2FsIGJ1c2luZXNzIGRpZXQgaGFzIGJlZW4gbW9yZSB2YXJpZWQgYW5kLCBsaWtlIG1hbnkgZW50cmVwcmVuZXVycywgZmVhdHVyZXMgc29tZSBzcGVjdGFjdWxhciBtaXNzZXMuVGhleSBjb21wdXRlcml6ZWQgdGhlIHRlc3QsIGFkYXB0ZWQgaXQgYXMgYW4gZW1wbG95ZWUgc2NyZWVuaW5nIHRvb2wgYW5kIGR1YmJlZCBpdCB0aGUgRXhhbUNvcnAgTSBTRUFPQy4gClBvbGl0aWNhbCB0aGVvcmlzdCBKdWRpdGggU2hrbGFyIHVzZWQgdG8gbWFpbnRhaW4gdGhhdCB3b3JrIGlzIG1vcmUgY3J1Y2lhbCB0byBkZW1vY3JhY3kgYW5kIGNvbW11bml0eSB0aGFuIGFsbW9zdCBhbnl0aGluZyBlbHNlLiBTaGUgbWlnaHQgaGF2ZSBiZWVuIGNvcnJlY3QsIHNpbmNlIHRoZSBsYWNrIG9mIGdvb2QgZW1wbG95bWVudCBjb2luY2lkZXMgd2l0aCB0aGUgbG9zcyBvZiB0cnVzdCwgd2l0aCBzY2hpc21zIGluIGNpdmlsIHNvY2lldHksIGFuZCB3aXRoIHRoZSBlcm9zaW9uIG9mIG91ciBwdWJsaWMgbGlmZS4gVGhpbmdzIGZlZWwgbGVzcyBhbmQgbGVzcyBzdXN0YWluYWJsZS4KVGhlIGZvdW5kZXJzIG9mIHRoZSBwYXJlbnQgY29tcGFueSBvZiBZb3VUdWJlIGNoYW5uZWxzICAgRGljZSBNZWRpYSAoMS43IG1pbGxpb24gc3Vic2NyaWJlcnMpLCBGaWx0ZXIgQ29weSAoNC4zIG1pbGxpb24gc3Vic2NyaWJlcnMpIGFuZCBHb2JibGUgKDEwMWsgc3Vic2NyaWJlcnMpLCBBbmlydWRoIFBhbmRpdGEsIEFkaXRpIFNocml2YXN0YXZhIGFuZCBBc2h3aW4gU3VyZXNoIHNwb2tlIGFib3V0IHRoZWlyICdzdGFydHVwIGpvdXJuZXknIGF0IHZkb254dCBhc2lhIDIwMTksIGhlbGQgbGFzdCBtb250aCBpbiBNdW1iYWkuIApTZSBhY2VyYyBhIGxvcyBpbnZlcnNpb25pc3RhcyBhY2VyY2EgZGUgdW4gbmVnb2NpbyBkZSBsb2xsaXBvcCBwZXJvIGRlamFyb24gcHJvbnRvLiBMIHNlIGhpem8gY2FyZ28gZGUgbGEgY29tcGFhIGEgcyBtaXNtbyB5IGNvbnN0cnV5ZXJvbiBsYXMgcHJpbWVyYXMgbXF1aW5hcyBkZSBwcm9kdWNjaW4gY29uIHN1cyBwcm9waWFzIG1hbm9zLi4gCkJlbG93IGlzIHRoZSBleHBsYW5hdGlvbiBvZiB0aGUgY29udGV4dCBvZiBhYnVzZSBydWxlLiBXZSBoYXZlIHRoaXMgcnVsZSBzcGVjaWZpY2FsbHkgYmVjYXVzZSBzdXJ2aXZvcnMgb2YgbmFyY2lzc2lzdGljIGFidXNlIGFyZSBjb25zdGFudGx5IHRvbGQgdGhleSB3cm9uZyBvciBleGhhdXN0aXZlbHkgcXVlc3Rpb25lZCBvbiB0aGVpciBqdWRnZW1lbnQuIFRoZSBwcm9ibGVtIGlzIHlvdSBhY3RpdmVseSBxdWVzdGlvbmluZyBPUCBqdWRnZW1lbnQuIFdlIG5vdCBoZXIgdG8gYXJiaXRyYXRlIGp1ZGdlbWVudCBvbiBzb21lb25lIGVsc2UgbGlmZSwgd2UgaGVyZSB0byBwcm92aWRlIGVtb3Rpb25hbCBzdXBwb3J0LgpIaXMgd2lmZSBMYXVuYSBhbmQgc29ucyBLeWxlIGFuZCBCcmFuZG9uIHdlcmUgUm9uJ3Mgd2hvbGUgbGlmZSBhbmQgaWYgeW91J3ZlIGV2ZXIgbWV0IHRoZW0geW91IHdvdWxkIGtub3cgd2h5LiBHcmVhdCBwZW9wbGUgc2VlbSB0byBiZSBhIHJhcml0eSBpbiB0aGlzIHdvcmxkIHNvbWV0aW1lcywgYnV0IHRoZSBNYXJ0aW4gZmFtaWx5IGlzIGp1c3QgdGhhdCBhbmQgdGhleSBhcmUgYW4gYXdlc29tZSBncm91cCBvZiBwZW9wbGUuIApXYXRjaCB3aGF0IHlvdXIgZnJpZW5kcyBkbyB3aGVuIHRoZXkncmUgYWxsIGluLiBXYXRjaCB3aGF0IHRoZXkgZG8gd2hlbiB0aGV5IHJhaXNlLCB3aGVuIHRoZXkgY2FsbCwgd2hlbiB0aGV5IGZvbGQuIFdhdGNoIGhvdyB0aGV5IHJlYWN0IG9uIGRpZmZlcmVudCBmbG9wcy4gCkhlIHNhaWQgaGUgbmV2ZXIgaGVhcmQgb2YgVW5pdmVyc2FsIE1lZGljaW5lLiAKTWF5YmUgdGhpcyBzZWVtcyBleGNlc3NpdmUuIEJ1dCBsZXQgbWUgc2F5IHRoaXM6IEkgYW0gYSByYXRoZXIgYXNwaXJpbmcgcGVyc29uIGFuZCB1c2VkIHRvIHRoaW5rIEkgbmVlZCB0byBzbGVlcCBsZXNzIHRvIGJlIHN1Y2Nlc3NmdWwgKCJzbGVlcCA2IGhvdXJzIGxpa2UgYSBtYW5hZ2VyISIpIGFuZCB0aGF0IGdvaW5nIHRvIGJlZCBlYXJsaWVyIG1lYW50IGEgY3V0IHRvIG15IHRpbWUgYnVkZ2V0LiBJIHdhcyB3cm9uZy4gCldoZW4gcGxheWVycyBtYWtlIG1pc3Rha2VzIGJlY2F1c2Ugc29tZXRoaW5nIHVwc2V0cyB0aGVtIGVtb3Rpb25hbGx5LCBpdCBpcyBjYWxsZWQgYSAidGlsdCIgb3IgImJlaW5nIG9uIGEgdGlsdC4iIEFuIGV4YW1wbGUgaXMgYSBwbGF5ZXIgd2hvIGlzIGEgaHVnZSBmYXZvcml0ZSBpbiBhIGhhbmQgYnV0IGxvc2VzIHRvIGFuIG9wcG9uZW50IHdobyBoaXRzIGEgbWlyYWNsZSBjYXJkIChvZnRlbiBjYWxsZWQgYSAiYmFkIGJlYXQiKS4gClRoZSB0cmVhdG1lbnQgb2YgY2hyb25pYyBwcm9zdGF0aXRpcyBpcyBkaXNtYWwuIEFudGliaW90aWNzLCBhbnRpIGluZmxhbW1hdG9yeSBhZ2VudHMsIGFscGhhIGJsb2NrZXJzLCBhbnRpc3Bhc21vZGljcywgYW5hbGdlc2ljcywgYWxsb3B1cmlub2wsIG11c2NsZSByZWxheGFudHMsIGFuZCB2YXJpb3VzIG1vZGFsaXRpZXMgb2YgaW52YXNpdmUgYW5kIG1pbmltYWxseSBpbnZhc2l2ZSBzdXJnaWNhbCBwcm9jZWR1cmVzIGhhdmUgYmVlbiBhZHZvY2F0ZWQgYW5kIGVhY2ggYW5kIGV2ZXJ5IG9uZSBoYXMgc2hvd24gc29tZSBkZWdyZWUgb2YgZWZmaWNhY3kgaW4gYSBzbWFsbCBtaW5vcml0eSBvZiBwYXRpZW50cyAoMSkuIEhvd2V2ZXIsIGZvciB0aGUgbWFqb3JpdHkgb2YgcGF0aWVudHMsIHRoZXNlIHRyZWF0bWVudHMgZG8gbm90IHJlc3VsdCBpbiBjdXJlIGFuZCBwYXRpZW50cyBhcmUgbGVmdCB0byB3YW5kZXIgZnJvbSBvbmUgcGh5c2ljaWFuIHRvIGFub3RoZXIsIGhvcGluZyB0aGF0IHRoZSBuZXh0IHdpbGwgaGF2ZSB0aGUga2V5IHRvIGFtZWxpb3JhdGluZyBoaXMgc3ltcHRvbXMuIAoiUGFpciIgbWVhbnMgeW91IGhhdmUgMiBjYXJkcyBvZiB0aGUgc2FtZSByYW5rLCBwbHVzIDMgb3RoZXIgdW5tYXRjaGVkIGNhcmRzLgpJZiB5b3VyIGVuZHMgYXJlIHNwbGl0LCB0aGVyZSBpcyBubyBhbW91bnQgb2YgdHJlYXRtZW50IHRoYXQgd2lsbCB1biBzcGxpdCB0aGVtLiAKVmlvbGEgd2FzIGZpbmVkIDI2IGRvbGxhcnMgKHRvZGF5LCB0aHJlZSBodW5kcmVkIGRvbGxhcnMpLiBTaXggb2YgdGhvc2UgZG9sbGFycyB3ZXJlIGF3YXJkZWQgdG8gdGhlIG1hbmFnZXIgb2YgdGhlIFJvc2VsYW5kIFRoZWF0cmUsIGxpc3RlZCBpbiB0aGUgcHJvY2VlZGluZ3MgYXMgcHJvc2VjdXRvci4gClNvIGZhciwgZG93bnRvd24gTWFuaGF0dGFuIGhhcyBoZWxkIHVwIHJlbWFya2FibHkgY29tcGFyZWQgdG8gTWlkdG93biwgd2l0aCB2YWNhbmN5IHJhdGVzIGF0IDggcGVyY2VudC4gClBsZWFzZSBub3RlOiBBaXJsaW5lIGxvdW5nZSBtZW1iZXJzaGlwcyBhcmUgYXQgdGhlIHBlcnNvbmFsIGNvc3Qgb2YgYW55IHRyYXZlbGxlciB3aXRoIHRoZSBleGNlcHRpb24gb2YgZnJlcXVlbnQgdHJhdmVsbGVycywgcGxlYXNlIHJlZmVyIHRvIHRoZSBUcmF2ZWwgRW50ZXJ0YWlubWVudCBQb2xpY3kgdG8gZGV0ZXJtaW5lIGVsaWdpYmlsaXR5LgpOZWVkbGVzcyB0byBzYXkgaXQgdGhlIG9ubHkgdGltZSBJIHRoaW5rIEkgZ290dGVuIGEgZ2lybCBvZmYgaW4gbGl0dGxlIG1vcmUgdGhhbiBhIG1pbnV0ZS4gCkZvcmdldCB5b3VyIG9sZCBmb2FtIHJvbGxlci4gTm90IGV2ZW4gdGhlIGtub2JieSB0eXBlcyBvZmZlciB3aGF0IHRoZSBzdHVyZHkgUm9sbCBSZWNvdmVyeSBSOCBwcm92aWRlczogYSBwb2lnbmFudCwgZGVlcCB0aXNzdWUgbWFzc2FnZSB0aGF0IHNxdWVlemVzIGZhdGlndWUgcmlnaHQgb3V0IG9mIHRoZSBsZWdzLgpZb3UgY2FuIGhhdmUgYSAybmQgYW5kIDNyZCBwcml6ZSBhbHNvLCBzcGxpdCBhcyB5b3UgbGlrZS4gCkl0IGlzIHZlcnkgdGhpY2ssIG5lZWRzIHdheSBtb3JlIHdhdGVyLCBpbW8uIEl0IGFsc28gdmVyeSBzbW9vdGggdGhvdWdoLCBub3QgZ3JhaW55IGlyIGFueXRoaW5nLiAKWW91IGNob3NlbiBTTy4gWW91ciBtb3RoZXIgaGFzIHByb3ZlbiBpbmNhcGFibGUgb2YgYmVpbmcgc3VwcG9ydGl2ZSBvciBkZWNlbnQuIFRoZSBiZXN0IHRoaW5nIHlvdSBjYW4gZG8gdG8gcHJvdGVjdCBzaGVzIGNhcmUgZm9yIHNvIGlzIGtlZXAgeW91ciBtb3RoZXIgYXdheSBmcm9tIGhlciwgY3JlYXRlIGEgVE9OIG9mIGRpc3RhbmNlLCBhbmQgcmVmdXNlIHRvIGRpc2N1c3Mgc28gd2l0aCB5b3VyIG1vdGhlciBBVCBBTEwuIApJdCBzaG93cyBhbGwgdGhlIHBsYXllcnMgaGFuZHMuIFRoZW4gY2xpY2sgZXhpdCBnYW1lYWdhaW4sLiAKVGhlIHN1ZGRlbiBjbG9zaW5nIGNyZWF0ZXMgdGhlIHNvdW5kIHdlIGFsbCBrbm93IGFzIGEgaGljY3VwLi4gCkZpbmFsIHBvaW50IG9uIEdvZCBvZiB0aGUgR2FwczogQ2hyaXN0aWFuaXR5IHNheXMgaHVtYW5zIGFyZSBmYWxsaWJsZSBhbmQgaGlnaCBoZWFydGVkLiBUbyBibGFtZSB0aGUgaWRlYSBvZiBHb2QgZm9yIHRoZSBpZ25vcmFudCBjbGFpbXMgb2YgbW9ydGFsIG1lbiBpcyBhIHBoaWxvc29waGljYWwgZmF1eCBwYXMuIFRoYXQgYW5kIHRoZXJlIHdpbGwgYWx3YXlzIGJlIGNlcnRhaW4gZ2FwcyB5b3UgY2FuIGZpbGwgd2l0aCBhbnl0aGluZyBleGNlcHQgc29tZXRoaW5nIHdoZXRoZXIgeW91IGxpa2UgdGhhdCB3b3JkIG9yIG5vdC4KaGlyZSBwbG90IG9yY2hlc3RyYXRlZCBieSBob2NrZXkgc3RhciBodXNiYW5kIHNlbnRlbmNlZCB0byBsaWZlIGluIHByaXNvbgpIZXJlIGEgZmV3IEkgdGhpbmtpbmcgb2Y7IGZyaWVuZHMgb2YgbWluZSBoYXZlIGEgYnVzaCBibG9jayBkb3duIGluIHRoZSBLaW5nIENvdW50cnkuIFBsYW4gdG8gYnVpbGQgYSBzbWFsbGlzaCBob3VzZSBhbmQgdGhlbiByZXRpcmUgdGhlcmUgaW4gYSBkZWNhZGUgb3IgdHdvLiBIb3cgd291bGQgdGhpcyB0YXggYWZmZWN0IHRoZW0gaWYgdGhleSBoYWQgdG8gc2VsbCB0aGVpciBob21lIGluIHRoZSBUcm9uPyBBbmQgaWYgdHdvIG9sZGVyIHBlb3BsZSwgZGl2b3JjZWQgd2l0aCB0aGVpciBvd24gaG91c2VzLCBmYWxsIGZvciBlYWNoIG90aGVyIGFuZCBjb25zb2xpZGF0ZSB0aGVpciBsaXZpbmcgYXJyYW5nZW1lbnRzLCB3b3VsZCBvbmUgb2YgdGhlbSBzZWxsaW5nIHRoZWlyIGhvdXNlIHRyaWdnZXIgc2FpZCB0YXg/CkF0IG9uZSBwb2ludCwgaGUgc2F5cywgZXZlcnlvbmUgZ3Jhdml0YXRlZCB0byB0aGUgd2luZG93IHRvIGxvbmdpbmdseSBsb29rIG91dHNpZGUuICJUaGVyZSB3YXMgdGhpcyBndXksIHdlIHRoaW5rIGhlJ3MgYW4gYWRtYW4sIGJ1dCB3ZSBkb24ndCBrbm93LCBoZSB3YXMganVzdCBseWluZyBpbiBhIGdyYXkgc3VpdCB3aXRoIHNoYWRlcyBvbiB0aGUgYmVhY2guIApUb2RheSwgc2hlIHByZWZlcnMgbWl4ZWQgdG91cm5hbWVudHMgZGVtb25zdHJhdGluZyB0aGVyZSBhbiBleGNlbGxlbnQgZ2FtZS4uIApCQiBmb2xkcy4gVXRnIGZvbGRzLiBWaWxsaWFuIHRoaW5rcyBmb3IgYSBmZXcsIHRoZW4gY2FsbHMuIAozLiBQcm9kdWNlIG5vdCBqdXN0IGluY3JlbWVudGFsIGdhaW5zIGJ1dCBleHBvbmVudGlhbCBnYWlucyBieSByZWNvZ25pemluZyBob3cgeW91ciBidXNpbmVzcyByZWFsbHkgbWFrZXMgbW9uZXkuIEZvciBleGFtcGxlLCBDb3N0Y28gc3R1ZGllZCBpdHMgbnVtYmVycyBhbmQgcmVhbGl6ZWQgaXQgbWFkZSBtb3JlIG1vbmV5IGZyb20gc2VsbGluZyBtZW1iZXJzaGlwcyB0aGFuIGZyb20gc2VsbGluZyBnb29kcyBpbiBpdHMgc3RvcmVzISBTbyBpdCB0YWlsb3JzIGl0cyBhZHZlcnRpc2luZyBhbmQgbWFya2V0aW5nIHRvIGJyaW5nIHBlb3BsZSBiYWNrIGludG8gdGhlIHN0b3JlcyB0byBidXkgdGhpbmdzIG9uIGEgcmVndWxhciBiYXNpc3NvIHRoZXkgd2lsbCBjb250aW51ZSB0byBrZWVwIHRoZWlyIG1lbWJlcnNoaXBzIGluIGdvb2Qgc3RhbmRpbmcuIApJIGdyb3duIHRvIGFwcHJlY2lhdGUgQ2luZHkgTG91IE1hbml6ZXIsIGl0IGdpdmVzIG15IGZhY2UgYSBnb3JnZW91cyBzb2Z0IGdsb3cgYW5kIHNpbmNlIEkgYmVlbiB3ZWFyaW5nIGdyb3Rlc3F1ZSBhbW91bnRzIG9mIGJsdXNoIGxhdGVseSBpdCBiZWVuIGEgZ3JlYXQgYWRkaXRpb24gdG8gbXkgYWxsIHBpbmsgYWxsIHRoZSB0aW1lIHBoYXNlLiAKVGhlIG1vc3QgY29tbW9ubHkgYWNjZXB0ZWQgZGVyaXZhdGlvbnMgb2YgJ0xvcmUnIG9yICdMdXJlJyBhcmUgJ3RyZWFjaGVyb3VzJyBvciAnZGVjZWl0ZnVsJywgYXMgd2VsbCBhcyAnZmFpcmllcyc7IGJ1dCBhcyB3aXRoIG1vc3Qgb2xkIG5hbWVzLCBub3RoaW5nIGlzIGNlcnRhaW4gYW5kIG90aGVyIGV4cGxhbmF0aW9ucyBleGlzdC4gCkhlcmUgbXkgaWRlYS4gRm9yIHRoZSBiaWcgYXNzIHNraSBqdW1wLiBBbmQgSSB2b3RlIHdlIGNvbnRpbnVlIHRvIGNhbGwgaXQganVzdCB0aGF0LCB3ZSBzaG93IHRoZSByZWFsIE9seW1waWMganVtcHMgdGhlbiBjdXQgdG8gYSBtaWRkbGUgYWdlZCBwZXJzb24sIGEgbGl0dGxlIHRoaWNrIGluIHRoZSBtaWRkbGUgYXR0ZW1wdGluZyB0byBzbG93bHkganVtcCBvdmVyIGEgdHdvIGZvb3QgZm9vdCBidW1wLiAKSXQgdGVhY2hlcyBhIHBlcnNvbiBtYXRoZW1hdGljcywgcHJvYmFiaWxpdHksIHRoZSBnYW1lIHRoZW9yeSBhbmQgcHN5Y2hvbG9neSAgIHNraWxscyB0aGF0IHN1Y2Nlc3NmdWwgYnVzaW5lc3NtZW4gcmVseSBvbi4KUydpbCB5IGEgZHUgc2FuZyBzdXIgbGVzIHZ0ZW1lbnRzLCB2ZXJzZXogbGUgcGVyb3h5ZGUgZGlyZWN0ZW1lbnQgc3VyIGxhIHRhY2hlLiBMYWlzc2V6IGxlIHJlcG9zZXIgdW5lIG1pbnV0ZSwgcHVpcyBmcm90dGV6IGV0IHJpbmNleiBhdmVjIGRlIGwnZWF1IGZyb2lkZS4gCkhlIGdhbWJsZWQgYWJvdXQgJDEgbWlsbGlvbiBhIHllYXIKTGFtYmVydCwgdGhlIG93bmVyIG9mIGEgZ2xhc3N0b3BwZWQgc3RvdmUgdGhhdCB3YXMgc2NyYXRjaGVkIHdpdGggYSByYXpvciBibGFkZSwgdGFza2VkIGhpbXNlbGYgd2l0aCBkZXZlbG9waW5nIGEgc2FmZXIgd2F5IHRvIGNsZWFuIHRoZSBzdXJmYWNlLiAKSSBrbmV3IHdlIGNvdWxkIGtpY2sgaGlzIGFzcywgYnV0IHlvdSBuZXZlciBrbm93IHdpdGggZHJ1bmsgcGVvcGxlIHdoYXQgdGhleSdyZSBjYXBhYmxlIG9mIG9yIGFibGUgdG8gZGVhbCB3aXRoIHNpbmNlIGFsY29ob2wgY2FuIGxlc3NlbiBwYWluLiAKQmVuamFtaW4gRnJhbmtsaW4sIGEgTS4gCkN0c214NTAwICAxIHBvaW50ICBzdWJtaXR0ZWQgMTQgZGF5cyBhZ28KSXQncyBmdW5ueSBJJ3ZlIHNlZW4gc28gbWFueSBwb3N0cyBmcm9tIHBlb3BsZSBsYXRlbHkgZ29pbmcgb24gYW5kIG9uIGFib3V0IGVhcm5pbmcgYSBsb3Qgb2YgbW9uZXkgaW4gY2hpbmEuIFlvdSBhbGwgcmVhbGl6ZSB0aGF0IHRoZSBjb3N0IG9mIGxpdmluZyBpcyBsb3dlciBoZXJlIHJpZ2h0PyBJIGVhdCBvdXQgKGxvY2FsIGZvb2QpIDMgNCB0aW1lcyBhIHdlZWsuIApBIGdvb2QgZnJpZW5kIG9mIG1pbmUgcmVjb21tZW5kZWQgdGhpcy4gU2hlIGlzIGFuIGFlcm9iaWNzIGluc3RydWN0b3IgaW4gb25lIG9mIHRoZSBtb3N0IHByZXN0aWdpb3VzIGd5bXMgb2YgdGhlIGNpdHkgYW5kIHRha2VzIGF0IGxlYXN0IDIwIG1pbnV0ZXMgYSBkYXkgdG8gcGxheSBoZXIgZmF2b3JpdGUgbXVzaWMgYW5kIHByYWN0aWNlIHRoZSBuZXcgbW92ZW1lbnRzIGZvciB0aGUgZGlzY290aGVxdWUgKG5vdCBmb3IgaGVyIGNsYXNzKS4gU2hlIHNheXMgaXQgaXMgd29uZGVyZnVsIHRvIGZlZWwgdGhlIG11c2ljIGluc2lkZSBhbmQgbGV0IHlvdXIgYm9keSBnbyB3aXRoIHRoZSBzb3VuZHMuIAoiTGFzdCB5ZWFyLCB0aGUgc3VydmVpbGxhbmNlIGRlcGFydG1lbnQgZGVsYXllZCBwcm92aW5nIHRoZWlyIHN1cnZlaWxsYW5jZSBjb3ZlcmFnZSB0byBvdXIgYWdlbnRzIHVudGlsIHR3byBkYXlzIGJlZm9yZSB0aGUgZXZlbnQsIiBTY2h1bGVyIHdyb3RlIGluIGFuIGVtYWlsIHRvIGEgQ2xldmVsYW5kIGFyZWEgcG9rZXIgYWR2b2NhdGUgbGFzdCB3ZWVrLiAiRGVzcGl0ZSBvdXIgY29uY2VybnMsIHdlIGFsbG93ZWQgdGhlbSB0byBwcm9jZWVkIHdpdGggdGhlaXIgcHJvcG9zZWQgY29uZmlndXJhdGlvbiBpbiBvcmRlciB0byBzZWUgaG93IGl0IHdvcmtlZCBpbiBwcmFjdGljZS4gSXQgZmFpbGVkIHRvIG1lZXQgdGhlIHJlcXVpcmVtZW50cy4gCklzIGl0IDMyIEJpdD8gWWVzLiBQbGVhc2Ugc2VlZCB0aGlzIGZvciBhcyBsb25nIGFzIHBvc3NpYmxlLiAKSSdtIHByYXlpbmcgSSBjYW4gY29udmluY2UgdGhlbSB0byBnaXZlIG1lIGEgZGF0aW5nIHNjYW4uLiAKVW5lIGJvbm5lIHBhcnRpZSBkZSBsYSBjaXJjdWxhdGlvbiBhdXRvbW9iaWxlIGRhbnMgbGEgR291dHRlIGQnT3IgbidhIHBhcyBkZSByYXBwb3J0IGF2ZWMgbGUgcXVhcnRpZXIsIGNlcyB2aGljdWxlcyBzZSBjb250ZW50YW50IGRlIHRyYXZlcnNlciBsZSBxdWFydGllciwgdHJvdXZhbnQgaWNpIGRlcyAiaXRpbnJhaXJlcyBtYWxpbnMiIHBvdXIgdml0ZXIgbGVzIGJvdWxldmFyZHMuIApBbmQgd2UgY2VydGFpbmx5IGhhdmUgYSBzdHJhdGVneSByaWdodCBub3cgYWJvdXQgaG93IG11Y2ggd2UncmUgZ29pbmcgdG8gc2F5IGFuZCBob3cgbWFueSBvZiB0aGVzZSB0aGluZ3Mgd2UncmUgZ29pbmcgdG8gZG8uLiAKTWlhbWkgSGVyYWxkIHNhaWQgaXQgd2FzIHRoZSBkZWFsIG9mIGEgbGlmZXRpbWUKMTcgRkJJIGFnZW50cyByYWlkZWQgb25lIG9mIG15IGdhbWVzIGFuZCBJIHdhc24ndCBhdCB0aGF0IGdhbWUuIEFuZCB0aGF0IHdhcyB0ZXJyaWZ5aW5nLiBBbmQgSSBsb2dnZWQgaW50byBteSBiYW5rIGFjY291bnRzIGFuZCB0aGV5IHdlcmUgYWxsIHNlaXplZCwgYWxsIGZyb3plbi4gU28gdGhhdCB3YXMgYSBwcmV0dHkgY2xlYXIgaW5kaWNhdGlvbiB0aGF0IEkgd2FzIGluIHRyb3VibGUuIEFuZCB5b3UgZGlkbid0IGhhdmUgYW55IG1vbmV5LiAKV2hhdCBpdCB3aWxsIGRvIHRob3VnaCBpcyBnaXZlIHlvdSBhIGZvdW5kYXRpb24gYW5kIG1ha2UgeW91IHJlYWxpemUsIG9rIGkgbmVlZCB0byBkbyB4IG9uIHkgYm9hcmQgYnV0IHRoZW4geW91IGFsc28gbmVlZCB0byBmYWN0b3IgeW91ciBvcHBvbmVudCwgbGV0IHNheSB5b3VyIG9wcG9uZW50IGNiZXRzIDEwMCBwZXJjZW50IGFuZCBndG8gaXMgYy9yaW5nIGEgYm9hcmQgNDAgcGVyY2VudCBvZiB0aGUgdGltZSB5b3UgY2FuIHByb2JhYmx5IHVzZSB0aGF0IHN0cmF0ZWd5IHRvIGMvciB3aXRoIGEgbXVjaCBoaWdoZXIgZnJlcXVlbmN5IGFzIHlvdSBiZSBleHBsb2l0aW5nIHlvdXIgb3Bwb25lbnQgdGhhdCB3YXkuLiAKSSBjYW4gcmVhZCBjb21tZW50cyBleHBsYWluaW5nIChhbHNvIHdpdGggdmVyeSB3ZWFrIHNjaWVudGlmaWMgYmFzaXMsIGxpa2UgY29tbWVudCBuby4gNjksIHRvbyBjaGlsZGlzaCB0byBiZSByZWFsLCBhdCBsZWFzdCBJIGhvcGUuKSB0aGF0IHRoaXMgaXMgbGlrZSBhIG5hdHVyYWwgZXZlbnQgZm9yIGJ1bGxzLCBidXQgYWN0dWFsbHkgdGhlcmUgaXMgYSBzaGFycCBkaWZmZXJlbmNlIGJldHdlZW4gdGhpcyBhbmQgbmF0dXJlOiB3aWxkIGFuaW1hbHMgZGllIG1heWJlIGluIHdvcnNlIHdheXMsIGxpdGVyYWxseSBlYXRlbiBieSBvdGhlcnMgb3IgYWZ0ZXIgYSBkZXNwZXJhdGUgZmlnaHQsIGJ1dCB0aGVyZSBpcyBubyBjcnVlbHR5IGluIG5hdHVyZTogb25seSBpbnN0aW5jdDsgaGVyZSB0aGV5IGRpZSBmb3Igc29tZW9uZSBlbHNlJ3MgZnVuLgpBcyBJIG1lbnRpb25lZCBpbiBvdGhlciB0aHJlYWRzIGxhc3Qgd2VlaywgeWVzdGVyZGF5LCAyLzI0IHdhcyB0aGUgSHlhbm5pcyBNYXJhdGhvbi4gCkEgc2hvdCBmb3IgdGhlIHdpbiBpbiB0aGUgMTF0aCBlbmQuIAooVGh1cnNkYXksIERlYy4gKEZyaWRheSwgRGVjLiBUcnkgaG90IG11bGxlZCB3aW5lIGF0IFJlYmVsIFJlYmVsLCBzcGljeSBtaXNvIHNvdXAgYXQgdGhlIG5ld2x5IG9wZW5lZCBTYXVzLCBNb20ncyBsYXNhZ25hIGF0IEJ1ZW5hcywgYW5kIG1vcmUgc2Vhc29uYWwgdHJlYXRzLiAKV2Ugc2F5IGEgY2hhaXIgaXMgc2VwYXJhdGUgZnJvbSB0aGUgZmxvb3IuIApUaGF0IHdoZW4gYXF1YXJpdW0gc3RhZmYganVtcGVkIGludG8gYWN0aW9uLCBtYWtpbmcgcGxhbnMgdG8gcmV0dXJuIHRoZSB0b3ksIGJ1dCBub3QgYmVmb3JlIGdpdmluZyBQeXRoaWUgdGhlIHNhbWUgdHJlYXRtZW50IHRoZXkgb2ZmZXIgdG8gYW55IGxvc3QsIHdvdW5kZWQgYW5pbWFsIHRoYXQgbWFrZXMgaXRzIHdheSB0byB0aGUgYXF1YXJpdW0uIEtlbHNleSBTbWl0aCwgYXNzaXN0YW50IG1hbmFnZXIgb2YgdmlzaXRvciBleHBlcmllbmNlLCB0dXJuZWQgdGhlIHNuYWtlIG92ZXIgdG8gaGVhZCB2ZXRlcmluYXJpYW4gRHIuIE1hcnRpbiBIYXVsZW5hLCB3aG8sIGFsb25nIHdpdGggdGhlIGFxdWFyaXVtJ3MgdmV0ZXJpbmFyeSB0ZWFtLCBnYXZlIHRoZSBzbmFrZSBhIHRob3JvdWdoIHBoeXNpY2FsIGV4YW0uCkluIHRoZSAxMCB5ZWFycyBiZXR3ZWVuIDE5NzAgYW5kIDE5ODAsIHN1cnJvZ2FjeSB3ZW50IGZyb20gYmVpbmcgcHJhY3RpY2FsbHkgdW5rbm93biB0byBwb3AgY3VsdHVyZSBmYXNjaW5hdGlvbi4gSW4gMTk4MCwgb25lIENhbGlmb3JuaWEgdGhlcmFwaXN0IGVzdGltYXRlZCB0aGVyZSB3ZXJlIGJldHdlZW4gNDAwIGFuZCA1MDAgc3Vycm9nYXRlcyB3b3JraW5nIGluIHRoZSBVbml0ZWQgU3RhdGVzLgpTaGUgYmVjYW1lIGhlYWQgY2hlZXJsZWFkZXIgd2hlbiBzaGUgd2FzIGEgZnJlc2htYW4uIFF1aXRlIGEgZmVhdCBmb3IgYSB0aW55IGNoaWxkLi4gClRoZXNlIHRoZXkgcHV0IG9uIGJvYXJkIHRoZSBTaGlwIGJlZm9yZSB0aGV5IHdvdWxkIHZlbnR1cmUgdGhlbXNlbHZlcy4gClVzZWQgdG8gZm9sbG93IFRlcnJlbGwgT3dlbnMsIGFuZCBoZSB3YXMgYmlnIHdpdGggbWFuaWN1cmVzIGFuZCBwZWRpY3VyZXMsIEpvcmRhbiBzYWlkLiBGZWV0IHRha2UgY2FyZSBvZiBtZSwgc28gSSBnb3QgdG8gdGFrZSBjYXJlIG9mIG15IGZlZXQuIEFuZCB0aGVuLCB5b3Uga25vdywgbXkgbGFkeSBkb24gbGlrZSBteSBmZWV0IHNjcmF0Y2hpbmcgaGVyIGluIHRoZSBiZWQsIHNvIEkgZ290IHRvIG1ha2Ugc3VyZSBJIGdldCBteSBmZWV0IHRha2VuIGNhcmUgb2YuIApCdXQgSSB3b24gaGltIG92ZXIgaW4gdGhlIGVuZCBhbmQgaGUgYnJvdWdodCBtZSB0byB0aGUgZmluYWwgdHdvLCBzaGUgYmVhbWVkIGFmdGVyIHRoZSBmaW5hbGUuLiAKT24gdGhlIHN1cmZhY2UsIHRoaXMgZXF1YWwgdHJlYXRtZW50IHNlZW1zIGVtaW5lbnRseSBmYWlyLCBidXQgb24gY2xvc2VyIGFuYWx5c2lzLCBpdCByZXByZXNlbnRzIGEgbmF2ZSB2aWV3IG9mIGhvdyB0cmFkaW5nIHRha2VzIHBsYWNlIGFtb25nIGRpZmZlcmVudCB0eXBlcyBvZiBpbnZlc3RvcnMuLiAKSW4gMTg5OSwgV2lsbGlhbSBXYWxzaCBhbmQgS2VhdGluZyBhcHBlYXJlZCBiZWZvcmUgdGhlIE5vcnRoIE1lbGJvdXJuZSBDb3VydCBvbiBjaGFyZ2VzIG9mIGluc3VsdGluZyBiZWhhdmlvdXIgdG93YXJkcyB0d28gcG9saWNlbWFuLgpUaGUgdGhlb3J5IGJlaGluZCBzbWFsbCBiZXRzIGlzIHRoYXQgaXQga2VlcHMgVmlsbGFpbiByYW5nZSB3aWRlIGFuZCB3ZWFrIHdoaWxlIGFsc28gZGVueWluZyBlcXVpdHkgYmVjYXVzZSBpbiBwcmFjdGljZSBtb3N0IHBlb3BsZSB3b24gZGVmZW5kIGVub3VnaCBhZ2FpbnN0IHNtYWxsIGJldHMuIE1ERiBhZ2FpbnN0IGEgMjAlIFBTQiBpcyA4MyUgbWVhbmluZyB5b3Ugd2lsbCBoYXZlIHRvIGNhbGwgYSBUT04gb2YgdHJhc2ggLyBhaXIgdG8gZGVmZW5kIHByb3Blcmx5LiAKR2VybmUgc3RlbGx0IGVyIHNlaW5lIFdlcmtlIGF1Y2ggaW4gQmFycyB1bmQgQ2FmcyBhdXMsIG1pdCBkZXIgWmllbHNldHp1bmcgZWluZW4ga25zdGxlcmlzY2hlbiB1bmQga3VsdHVyZWxsZW4gQXVzdGF1c2NoIHp3aXNjaGVuIGRlbiBNaXR3aXJrZW5kZW4gdW5kIEdzdGVuIHp1IGVybWdsaWNoZW4uIApDb25kaW1lbnRpYSAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxNyBkYXlzIGFnbwpXZXJuZXIgdm9uIFdpZGVyc3BydWNoClllcy4gSW4gaHVtYW5zIHRoaXMgcHJpb24gaW5kdWNlZCBkaXNlYXNlIGlzIGNhbGxlZCBDcmV1dHpmZWxkdCBKYWNvYiBkaXNlYXNlLCBpbiBzaGVlcCBpdCBjYWxsZWQgc2NyYXBlIChwcm9ub3VuY2VkICJzY3JhcGUgZWUiIGJlY2F1c2UgdGhleSB3ZXJlIGZvdW5kIHRvIHNjcmFwZSB0aGVtc2VsdmVzIGFnYWluc3QgZmVuY2VzIGFzIHRoZXkgYmVjYW1lIG1vcmUgZGVtZW50ZWQpLiBDb3dzIGZlZCBmZWVkIGZyb20gaW5mZWN0ZWQgY293cyBnZXQgIm1hZCBjb3ciIGRpc2Vhc2UgKHJlbWVtYmVyIHRoZSAxOTkwIGluY2lkZW50cyBpbiBFdXJvcGUpLiAKU28gb3ZlcmFsbCBpdCBiZSBuaWNlIGJ1dCBhKSB3ZSBoYXZlIHRvIGtlZXAgaXQgdXAgZm9yZXZlciBhbmQgYikgd2UgY291bGRuIGRvIGl0IG9uIGEgbGFyZ2UgZW5vdWdoIHNjYWxlLiBQZWF0IGJvZ3MgYXJlIGFjdHVhbGx5IG11Y2ggYmV0dGVyIGF0IHNlcXVlc3RlcmluZyBjYXJib24gcGVyIGFjcmUgdGhhbiBmb3Jlc3RzLgpBbmQgSSBhbHdheXMgZmVsdCB0aGVyZSB3YXMgc29tZXRoaW5nIG1pc3NpbmcgICBvYnZpb3VzbHkuIApUcnVtcCBldmVuIHdvbiBQZW5uc3lsdmFuaWEgYW5kIFdpc2NvbnNpbiwgYW5kIHdhcyBsZWFkaW5nIGluIE1pY2hpZ2FuLCBwZXJlbm5pYWwgRGVtb2NyYXRpYyBlbmNsYXZlcywgYW5kIGp1c3QgYmFyZWx5IGxvc3QgVmlyZ2luaWEsIHdoZXJlIENsaW50b24gcnVubmluZyBtYXRlIFRpbSBLYWluZSB3YXMgZ292ZXJub3IuCkknbSBuZXcgdG8gdGhlIGZpZWxkIG9mIEFJLiBGcm9tIG15IGRhdGEgc3RydWN0dXJlcyBjbGFzcyBhdCBjb2xsZWdlLCBJIGtub3cgYmFzaWMgYnVpbGRpbmcgYmxvY2tzIGxpa2UgQkZTIGFuZCBERlMsIGJhY2t0cmFja2luZywgRFAsIHRyZWVzLCBncmFwaHMsIGV0Yy4gSSdtIGxlYXJuaW5nIHJlZ2V4LCBzdHVkeWluZyBmb3IgdGhlIFNDSlAgYW5kIHRoZSBTQ0pEIGFuZCBJJ2xsIHNob3J0bHkgdGFrZSBhIChkZW5zZSkgc3RhdGlzdGljcyBjb3Vyc2UuLiAKT3VpLCB1biBqZXVkaS4gQyd0YWl0IG5vdHJlIGpvdXJuZSBkZSByZXBvcy4gClRoZXJlIGlzIHNvIG11Y2ggdG8gZXhwbG9yZSB0aGVyZSB0aGF0IHlvdSB3b3VsZCBiZSBoYXJkIHByZXNzZWQgdG8gZG8gZXZlcnl0aGluZyEgSW5kb25lc2lhIGlzIGFuIGFtYXppbmcgY291bnRyeSwgd2l0aCBzbyBtYW55IG5hdHVyYWwgd29uZGVycywgYW5kIHRoZSBjb3VudHJ5IGNhbiBiZSBiYWNrcGFja2VkIGEgYnVkZ2V0IGV2ZXJ5d2hlcmUgKGFwYXJ0IGZyb20gQmFsaSwgd2hlcmUgaXQgbm90aWNlYWJseSBtb3JlIGV4cGVuc2l2ZSkuIAoiSGUgY29tZXRoIGluIHNwcmluZ2luZyB0aW1lIGFuZCB3YXJuZXRoIG9mIG5vdmVsdHkgb2YgdGltZSB3aXRoIGdyb2FuaW5nIHZvaWNlLiBBbmQgaW4gd2ludGVyIGhlIGxvc2V0aCBoaXMgZmVhdGhlcnMsIGFuZCB0aGVuIGhlIGhpZGV0aCBoaW0gaW4gaG9sbG93IHN0b2Nrcy4gQW5kIGFnYWluc3Qgc3VtbWVyLCBpbiBzcHJpbmdpbmcgdGltZSwgd2hlbiBoaXMgZmVhdGhlcnMgc3ByaW5nIGFnYWluLCBoZSBjb21ldGggb3V0IG9mIGhpcyBob2xlIGluIHRoZSB3aGljaCBoZSB3YXMgaGlkLCBhbmQgc2Vla2V0aCBjb252ZW5hYmxlIHBsYWNlIGFuZCBzdGVhZCBmb3IgdG8gYnJlZWQgaW4uIApTbywgWUVTLCBJIGRvIHJlYWxseSBkbyBmZWVsIGdvb2QuIEkgZ2VudWluZWx5IGdvb2QgaW4gdGhlIHJlZ2lvbiBvZiB0aGlzIHByb2dyYW0sIGFuZCBiZWNhdXNlIEkgYWNxdWlyZSBtYWRlIGEgcGFydGljdWxhciB2ZXJ5IHJpZ2h0IGFuZCBwcmFjdGljYWwgZmluYW5jaWFsIHB1cmNoYXNlLi4gCkluIHRoZSB0ZWV0aCBvZiBJbiBkaXJlY3Qgb3Bwb3NpdGlvbiB0bzsgc3RyYWlnaHQgYWdhaW5zdCwgd2l0aG91dCBhIGJ1ZmZlcjsgY29uZnJvbnRpbmcsIGZhY2UgdG8gZmFjZTsgaW4gZGVmaWFuY2Ugb3IgaW4gc3BpdGUgb2YuIFRoaXMgZXhwcmVzc2lvbiBvZiB1bmtub3duIG9yaWdpbiBkYXRlcyBmcm9tIHRoZSAxM3RoIGNlbnR1cnkuIFRoZSBvbGRlc3QgZXhhbXBsZXMgb2YgaXRzIHVzZSBkZXNjcmliZSBkaXJlY3QgY29uZnJvbnRhdGlvbiBiZXR3ZWVuIHR3byBmb3JjZXM6ClRoaXMgY29tYmluYXRpb24gb2YgYWN1cHVuY3R1cmUgYW5kIGhlcmJhbCB0aGVyYXB5IGlzIGFwcGxpZWQgb2Z0ZW4gaW4gdGhlIFdlc3QsIHdoZXJlIG1vc3QgcGVvcGxlIG11c3QgcGF5IG91dCBvZiB0aGVpciBvd24gcG9ja2V0cyBmb3IgYWN1cHVuY3R1cmUgdHJlYXRtZW50cy4gCkkgYWxyZWFkeSBmaW5pc2hlZCBjb2xsZWdlLCBzbyBJIHN0aWxsIGxvb2tpbmcgZm9yIGEgam9iLiAKSWYgdGhlIGJ1c2luZXNzIHdvcmtzIGRpcmVjdGx5IGFnYWluc3QgdGhlIHdvcnRoeSBjYXVzZSBpdCB0cmllcyB0byBsZWdpdGltaXplIGl0c2VsZiB3aXRoLCB0aGF0IGlzIGEgc2VsZiBjb250cmFkaWN0aW9uIGFuZCBpdCB1bmRlcm1pbmVzIHRoZSBjYXVzZS4uIApKb3NlcGggR29yZG9uIExldml0dCBoYXMgdGhhdCByYXJlIGdpZnQgdG8gdHVybiBqdXN0IGFib3V0IGFueXRoaW5nIGhlIGRvZXMgaW50byBnb2xkLiBHb3Jkb24gTGV2aXR0IHBsYXlzIEpvbiBNYXJ0ZWxsbywgYSBsYWRpZXMnIG1hbiB3aXRoIGFuIGFmZmluaXR5IGZvciBidXQgYSBmZXcgdGhpbmdzOiBoaXMgYm9keSwgaGlzIGdpcmxzIGFuZCBoaXMgcG9ybm9ncmFwaHkuIE9mIGNvdXJzZSwgYSBnaXJsIHNob3dzIHVwIChKb2hhbnNzb24pIHdobyBjaGFsbGVuZ2VzIGV2ZXJ5dGhpbmcgaGUgdGhpbmtzIGhlIGtub3dzIHdpdGggaGVyIHRyYWRpdGlvbmFsIGlkZWFzIGFib3V0IG1lbiwgd2hpY2ggYXJlIGluc3BpcmVkIGJ5IGNsYXNzaWMgSG9sbHl3b29kIHJvbWFuY2VzLiAKSXQgaXMgdGhlIG9ubHkgdHJ1bHkgc291dGhlcm4gY2l0eSB3aG9zZSBwb3B1bGF0aW9uIGhhcyBzZXJpb3VzbHkgYm91Z2h0IGludG8gInNtYXJ0IGdyb3d0aCIgYW5kIHNlcmlvdXMgZGV2ZWxvcG1lbnQgYW5kIGltcHJvdmVtZW50IG9mIHB1YmxpYyB0cmFuc3BvcnQuLiAKIkhhdmUgeW91IHJlYWxseSBwcm9vZiB0aGF0IGhlIHNhaWQgdGhhdCwgQ29ybmVsaWE/IgoiTXkgZmlyc3QgdGhvdWdodCBpcyB0aGF0IGl0IGlzIHNhZCBhbiBpbnRlcm5pc3QgY2FuJ3QgZWFybiBlbm91Z2ggdGhhdCB0aGV5IGhhdmUgdG8gcmVzb3J0IHRvIGRvaW5nIEJvdG94IGFuZCBmaWxsZXJzIHdpdGggYSBnaW1taWNrLCIgSGFuZGxlciB0b2xkIEh1ZmZQb3N0LgpUaGlzIHdpbGwgZW5hYmxlIHlvdSB0byBjb250YWN0IGRpcmVjdGx5LCBhbnkgb2YgdGhlIHByYWN0aXRpb25lcnMgdG8gZmluZCBvdXQgd2hhdCB0aGV5IGNhbiBvZmZlciBpbiByZXNwZWN0IG9mIHlvdXIgbmVlZHMgYW5kIGhvdyB0aGVpciBhcHByb2FjaCBtYXkgYmVuZWZpdCB5b3UuIApBbGwgdGhhdCB0byBzYXkgZnJvbSBteSBsaW1pdGVkIGV4cGVyaWVuY2UgaW4gcG9rZXIsIHdoZW4gbW9zdCBwZW9wbGUgc2F5IHRoZXkgbG92ZSB0byBnbyBwcm8sIHRoZXkgbGlrZWx5IG11Y2ggYmV0dGVyIG9mZiBrZWVwaW5nIGl0IGFzIGEgaG9iYnkuIEl0IGVhc3kgdG8gZ2V0IHR1bm5lbCB2aXNpb24gd2l0aCAiSSBsb3ZlIHBsYXlpbmcsIiAiSSBjYW4gd2luIHNldmVyYWwgaHVuZGVyZCBpbiBhIGZldyBob3VycywgY2FuIGRvIHRoYXQgYXQgbXkgam9iIiAibm8gYm9zcyBvciB0aW1lY2xvY2siLiAKSWYgeW91IGhhdmUgYSBzaGl0IHBlcnNvbmFsaXR5IG5vIG9uZSB3aWxsIHdhbnQgdG8gYmUgZnJpZW5kcyB3aXRoIHlvdS4gCk9uY2UgYXQgdGhlIHNvbGQgb3V0IHNob3csIHRoZSBmYW1pbHkgZ290IGEgdGV4dCBmcm9tIHRoZSBtYW5hZ2VyIGFuZCBzb29uIGhhZCBWSVAgcGFzc2VzLiBUaGV5IGhhZCBkcmlua3MgYmFja3N0YWdlIGhlYWQgc3BpbnMgYXJvdW5kIGluIGEgMzYwIGRlZ3JlZSBjaXJjbGUgc2VlaW5nIGlmIEkgY2FuIHJlY29nbml6ZSBzb21lb25lLCBMYXBlbmF0IHJlY2FsbGVkIGFuZCB0aGUgZ2lybHMgZ290IGZyZWUgbWVyY2ggYW5kIHNwb3R0ZWQgYmFuZG1lbWJlcnMgd2l2ZXMuCkNhZGlsbGFjbW9tICAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxMSBob3VycyBhZ28KVGhlIGZpbmFuY2lhbCBpbmNlbnRpdmVzIGZvciBidXNpbmVzc2VzIHRvIGVuY291cmFnZSBhIGZ1biB3b3JrIGVudmlyb25tZW50IGFyZSBwYXJ0aWN1bGFybHkgc3RyaWtpbmcgd2hlbiB5b3UgY29tcGFyZSB0dXJub3ZlciByYXRlcyBiZXR3ZWVuIGVtcGxveWVlIGZyaWVuZGx5IGNvbXBhbmllcyBhbmQgb25lcyB0aGF0IGZvY3VzIGxlc3Mgb24gZW1wbG95ZWUgd2VsbGJlaW5nLiAKVGhleSBhbHNvIHNlZW0gdG8gaGF2ZSBodXJ3aXR6IGFuZCB0aW1wZXIgd2hvIGNvdWxkIHBvc3NpYmx5IGJlIG1ham9yIGxlYWd1ZXJzLiAKQW5kIG15IGZhbWlseSBpcyAxNTAgcGVvcGxlLiAKQ3JpY2ssIGluY2lkZW50YWxseSwgdGhvdWdodCB0aGF0IFdpbGthbnMgYW5kIEZyYW5rbGluIHdvdWxkIGhhdmUgZ290IHRoZSBOb2JlbCBQcml6ZSBmb3IgQ2hlbWlzdHJ5LCBoYWQgc2hlIG5vdCBkaWVkLiBXYXRzb24sIENyaWNrIGFuZCBXaWxrYW5zIGdvdCB0aGUgTm9iZWwgcHJpemUgZm9yIE1lZGljaW5lLgpXZSBhbGwgYmxvZyBmb3Igb3VyIG93biByZWFzb25zLiBTb21lIG9mIHVzIHdhbnQgdG8gc2hhcmUgb3VyIGlubmVybW9zdCB0aG91Z2h0cyBhbmQgaWRlYXMgd2l0aCB0aGUgd29ybGQuIFNvbWUgb2YgdXMgd2FudCB0byBleHBvc2Ugb3VyIHRhbGVudCBpbiB3cml0aW5nLCBwaG90b2dyYXBoeSwgcHJvZ3JhbW1pbmcgb3IgZXZlbiBodW1vci4gQW5kIG1vc3Qgb2YgdXMgc2VlayB0byBiZSBjb21wZW5zYXRlZCBmb3Igb3VyIGVmZm9ydCB3aXRoIG1vbmV5LCBwcmVmZXJhYmx5LCBvciB3aXRoIGZyZWUgc3R1ZmYgb2ZmZXJlZCBpbiBleGNoYW5nZSBmb3Igb3VyIHdvcmsuIEJ1dCB0byBlYXJuIG1vbmV5IG9yIGJlIHJlYWNoZWQgb3V0IHRvIGJ5IGFkdmVydGlzZXJzLCB3ZSBuZWVkIHRvIGJlIEFuZCB0aGUgZWFzaWVzdCB3YXkgdG8gYmUgdGhhdCBpcyB0aHJvdWdoIHB1Ymxpc2hpbmcgb3VyIGNvbnRhY3QgZGV0YWlscyBvbiBvdXIgYmxvZy4KRkdNIGNhbiBpbnZvbHZlIG5vdGhpbmcgbW9yZSB0aGFuIGEgc3ltYm9saWMgcGluIHByaWNrIChUeXBlIElWKS4gSXQgaXNuIGFsd2F5cyB3b3JzZSB0aGFuIGNpcmN1bWNpc2lvbiBhbmQgdGhlIHBvaW50IGlzbiBhbHdheXMgdG8gImRlc3Ryb3kgdGhlIHBvc3NpYmlsaXR5IG9mIHRoZW0gZW5qb3lpbmcgc2V4Ii4gCldoZW4gdGhhdCBoYXBwZW5zIGF0dGVtcHRzIGFyZSBtYWRlIGJ5IHRoZSBwZXJzb24gd2hvIGludml0ZWQgdGhhdCBwZXJzb24gaW50byB0aGUgbGVhZ3VlIHRvIGNvbGxlY3QuIApBcyBzb21lb25lIHdobyBoYXMgcGxheWVkIGl0IGFsbW9zdCBzaW5jZSBpdCB3YXMgcmVsZWFzZWQsIGFuZCBzcGVudCB0aGUgbWFqb3JpdHkgb2YgbXkgTmV0cnVubmVyIHRpbWUgZmluZGluZyBuZXcsIHNpbGx5IGFuZCBvY2Nhc2lvbmFsbHkgc3R1cGlkbHkgZWZmZWN0aXZlIGNvbWJvcywgSSB3aWxsIG1pc3MgaXQgZGVhcmx5IDooLiAKQnJva2VyIFZpY2tleSBCYXJyb24sIHdobyBoYXMgc29sZCBpbiBTdXR0b24gUGxhY2UsIHNheXMgaXQgIm1pZ2h0IGFzIHdlbGwgYmUgR3VhbS4iIFRoYXQgbWlnaHQgZXhwbGFpbiBpbiBwYXJ0IHdoeSBub2JvZHkgYXQgdGhlIGJ1aWxkaW5nIGlzIGN1cnJlbnRseSB0cnlpbmcgdG8gc2VsbCAgIG1vc3QgcmVjZW50IHNhbGVzIGhhdmUgYmVlbiBmcm9tIHRoZSBlc3RhdGVzIG9mIGxhdGUgb3duZXJzLiAKQWRkaXRpb25hbGx5LCBIYW5zZW4gaGFzIHBsYXllZCBhIHNpZ25pZmljYW50IHJvbGUgaW4gIkRhdGVsaW5lJ3MiIGNvdmVyYWdlIG9mIHRoZSB3YXIgb24gdGVycm9yIGFuZCBob21lbGFuZCBzZWN1cml0eSBpc3N1ZXMuIEhlIHdhcyByZXNwb25zaWJsZSBmb3IgbXVjaCBvZiAiRGF0ZWxpbmUncyIgY292ZXJhZ2Ugb2YgdGhlIFNlcHRlbWJlciAxMSB0ZXJyb3Jpc3QgYXR0YWNrcywgd2l0aCBicmVha2luZyBpbnZlc3RpZ2F0aXZlIHN0b3JpZXMgdGhhdCBmb2N1c2VkIG9uIHRoZSB0ZXJyb3Jpc3RzIGFuZCBvcGVyYXRpb25zIG9mIHRoZSBBbCAgUWFlZGEgbmV0d29yay4gSGFuc2VuIGV4cG9zZWQgaG93IGEgZ3JvdXAgd2l0aCBsaW5rcyB0byBPc2FtYSBCaW4gTGFkZW4gYW5kIEFsIFFhZWRhIHRyaWVkIHRvIGJ1eSBzdGluZ2VyIG1pc3NpbGVzIGFuZCBvdGhlciBkZWFkbHkgd2VhcG9ucywgaW5jbHVkaW5nIGNvbXBvbmVudHMgZm9yIG51Y2xlYXIgZGV2aWNlcyBmcm9tIEFtZXJpY2FuIGNpdGl6ZW5zLiAKRmxleGlyZW50IGdhdmUgc2FsZXNtZW4gYSBjb21taXNzaW9uIGJhbGFuY2UgdGhhdCB0aGV5IGNvdWxkIGNhc2ggaW4gdG8gcHJlcGFpZCBjcmVkaXQgY2FyZHMgb24gdG9wIG9mIHRoZSBjb21taXNzaW9uIHlvdSBnZXQgZnJvbSB0aGUgc3RvcmUgc2FsZS4gCkV2ZW4ga25vd2luZyB3ZSBoYXZlIHRlcm1pbmF0ZWQgaWYgd2UgaGFkIGEgcHJvYmxlbSBzaG93IHVwIGluIHRob3NlIGZpcnN0IHRyaW1lc3RlciB0ZXN0cywgd2Uga25ldyBpdCB3YXNuIGEgZ3VhcmFudGVlIHdlIGhhdmUgYSBoZWFsdGh5IGtpZC4gClJpY2UgaXMgaW5jcmVkaWJseSBnb29kIGF0IGJ1aWxkaW5nIHRlbnNpb24gYW5kIEkgaGFkIHRvIHRha2UgZnJlcXVlbnQgYnJlYWtzIHRvIGFsbGV2aWF0ZSBteSBkcmVhZC4gSSBhbHNvIHJlYWxpemVkIHRoYXQgSSB3b3VsZCBiZSB0ZXJyaWJsZSBhdCBzdXJ2aXZpbmcgaWYgd2UgZXZlciBsb3N0IHBvd2VyLiAKTXkgbWFpbiBzbmFja3Mgb2YgY2hvaWNlIGR1cmluZyBnYW1lIHRpbWUgd2VyZSBzYWxhZHMuIiBBbmQsIG9mIGNvdXJzZSwgYWxjb2hvbCB3YXMgY29tcGxldGVseSBvZmYgbGltaXRzLi4gClRoZSBvbmx5IHN0YW5kIG91dCB0aGluZyBhYm91dCBDaGluYSBkZXZlbG9wbWVudCBpcyB0aGF0IENoaW5hIHN1Y2ggYSBodWdlIGNvdW50cnkgICBhbmQgdGhhdCB3aGF0IG1hZGUgQ2hpbmEgdG8gImJlY29tZSBzdWNoIGEgd29ybGQgcG93ZXIgaW4gc3VjaCBhIHNob3J0IHRpbWUsIiBpdCBub3QgdGhhdCBDaGluYSBkb25lIHNvbWV0aGluZyBzcGVjaWFsIG90aGVyIGNvdW50cmllcyBoYXZlbiBqdXN0IHRoYXQgQ2hpbmEgaXMgaHVnZS4gQW5kIGl0IHNlZW1zIEluZGlhIGlzIGNvbWluZyByaWdodCB1cCBiZWhpbmQgQ2hpbmEuCk15IGd1ZXNzIGlzIHRoYXQgdGhlIGhpc3BhbmljIGNvbW11bml0eSB0aGVyZSB3b3VsZCBiZSBlc3RhYmxpc2hlZCBmb3IgYSBmZXcgZ2VuZXJhdGlvbnMuIApJIGtub3cgaXQncyBub3QgbXVjaCBidXQgSSd2ZSBhbHdheXMgd2FudGVkIHRvIGJlIGEgVmV0ZXJpbmFyaWFuLiBUaGUgcnVsZSB3YXMgZXBsYWluZWQgYW5kIGV4YW1wbGVzIGdpdmVuIGluIHRoZSBhbm5vdW5jZW1lbnQgYXMgd2VsbCBhcyBpbiB0aGUgdGhyZWFkLiAKTXVzY2xlIHBhaW4gaXMgdGhlIG1vc3QgY29tbW9uIHBhaW4gZXhwZXJpZW5jZWQuIFRoaXMgaXMgY2F1c2VkIGJ5IHRvbyBtdWNoIHN0cmVzcyBvbiB0aGUgbXVzY2xlcy4gClEuIFdoZW4gc2hvdWxkIEkgZ2V0IG1hc3NhZ2UsIGJlZm9yZSBvciBhZnRlciBhIGdvbGYgZ2FtZT8KVGhpcyBpc24gc2xpcHBlcnkgc2xvcGU7IGl0IGlzIGEgY29yZSBodW1hbiByaWdodCBvZiBmcmVlZG9tIHRoYXQgSSBub3QgYmUgY29tcGVsbGVkIHRvIHNwZWFrIGFnYWluc3QgbXkgd2lsbCB1bmRlciB0aGUgdGhyZWF0IG9mIGltcHJpc29ubWVudC4gSSBkb24ga25vdyBob3cgeW91IHNpbXBseSBkb24gdW5kZXJzdGFuZCB0aGF0LgpQcm92aWRlIHlvdXIgYmFkZ2VyIHdpdGggYSB3YXJtIHBsYWNlIHRvIHNsZWVwIGluIGZyZWUgb2YgZHJhZnRzLiAKU3RhcnQgRWFybHkgYW5kIFVwZGF0ZSBZb3VyIE9iamVjdGl2ZXMgRXZlcnkgWWVhciBUaGUgIlJvdXRlcyB0byBTZWxmIEltcHJvdmVtZW50IiBjYXJlZXIgdHJhaW5pbmcgd2Vic2l0ZSByZWNvbW1lbmRzIHRoYXQgeW91IHNldCB5b3VyIGNhcmVlciBvYmplY3RpdmVzIGJ5IHZpc3VhbGl6aW5nIHlvdXIgZGVzaXJlZCBmdXR1cmUgY2FyZWVyLCB0aGUgZmllbGQsIHRoZSBwb3NpdGlvbiwgYW5kIHRoZSBza2lsbHMgeW91IG5lZWQgdG8gZ2V0IHRoZXJlLiBTZXQgeW91ciBvYmplY3RpdmVzIGluaXRpYWxseSBsYXRlIGluIGhpZ2ggc2Nob29sLCBvciBpbiBjb2xsZWdlIG9yIHVuaXZlcnNpdHkgcHJpb3IgdG8gYXBwbHlpbmcgZm9yIGEgam9iLiBPbmNlIHlvdSBzdGFydCB3b3JraW5nLCBtYWtlIGEgY29tbWl0bWVudCB0byByZXZpZXcgYW5kIHVwZGF0ZSB5b3VyIGNhcmVlciBvYmplY3RpdmVzIGF0IGxlYXN0IG9uY2UgYSB5ZWFyIHRvIHJlZmxlY3QgeW91ciBwZXJzb25hbCBncm93dGguIHN0ZXBzLiBLZWVwIHlvdXIgb2JqZWN0aXZlcyBzcGVjaWZpYywgc3VjaCBhcyBjb21wbGV0aW5nIGFuIG9ubGluZSBNaWNyb3NvZnQgRXhjZWwgdHV0b3JpYWwgYnkgbmV4dCBtb250aC4gU2V0IHRoZSB0cmFpbmluZyBhbmQgZXhwZXJpZW5jZSB5b3UgbmVlZCBhbmQgbWVhc3VyZSBob3cgbXVjaCBtb3JlIHlvdSBuZWVkIHRvIGFjaGlldmUgdG8gcmVhY2ggeW91ciBvYmplY3RpdmVzLiBTZXQgYW4gYXR0YWluYWJsZSBvYmplY3RpdmUuIFlvdSBtaWdodCB3YW50IGEgc3RhcnRpbmcgc2FsYXJ5IG9mICQxMDAsMDAwLCBidXQgcmVhbGlzdGljYWxseSBhIGNhcmVlciBvYmplY3RpdmUgb2YgJDQwLDAwMCBpcyBtb3JlIGF0dGFpbmFibGUuIExldCB5b3VyIGV4cGVyaWVuY2UgZ2l2ZSB5b3VyIGNhcmVlciBwYXRoIGRpcmVjdGlvbi4gQmluZCB5b3Vyc2VsZiB0byBhIHRpbWVsaW5lLCBwZXJoYXBzIGZvciB0aHJlZSBtb250aHMsIGluIHdoaWNoIHRvIG1lZXQgeW91ciBjYXJlZXIgb2JqZWN0aXZlcy4KWW91IHJpZ2h0IGluIHRoYXQgaGUgZXNwZWNpYWxseSB2aXNpYmxlIGJlY2F1c2UgaGUgVHVya2lzaCwgYnV0IGl0IGRpc2luZ2VudW91cyB0byBwcmV0ZW5kIGhlIHRoZSBleGNlcHRpb24gcmF0aGVyIHRoYW4gdGhlIHJ1bGUgaW4gcmVnYXJkcyB0byBoaXMgdmlld3BvaW50Lkkga25vdyBidXQgaXQganVzdCB0aGF0IG1vZGVybiBhcmd1bWVudHMgZm9yIGFjY2VwdGFuY2Ugb2YgdGhlIHRlcm0gZ2Vub2NpZGUgcmVnYXJkaW5nIHRoZSBldmVudHMgYWxtb3N0IGFsd2F5cyB1c2UgVGFuZXIgQWtjYW0gYXMgYW4gc3VwcG9ydCB0byBiYWNrIHVwIHRoZWlyIGNsYWltcy4gCkRhcyBzdGltbXQgbWVpbmVyIEVyZmFocnVuZyBuYWNoIG5pY2h0LiBJc3QgbWlyICAgdW5kIGVzIGhhdCBtaXQgbWVpbmVtIFBzaW9uIHZpZWxlIGR1emVuZGUgTWFsZSBnZXBpZXBzdCBpbiB2ZXJzY2hpZWRlbmVuIExkZW4gYmVyIE1vbmF0ZSAgIG5pZSBwYXNzaWVydC4gCldlJ3JlIHByZXR0eSBwb3NpdGl2ZSBzaGUncyBlaXRoZXIgYSBzdHJpcHBlciBvciBhbiBlc2NvcnQuIApTcGVjaWZpYyB0aGVyYXBldXRpYyBleGVyY2lzZXMgYXJlIHVzZWQsIGNvbnNpc3RlbnQgd2l0aCBwYXRpZW50IHByb2dyZXNzLiBJbXBvcnRhbnQgaG9tZSBjYXJlIGluc3RydWN0aW9ucyBhbmQgc3VwcGxlbWVudHMgYXJlIGEgY3J1Y2lhbCBwYXJ0IG9mIHRyZWF0bWVudHMuCkJpcnRoIGNlcnRpZmljYXRlIGFuZCBoaWdoIHNjaG9vbCByZXBvcnQgY2FyZHMgZmVlbCBtb3JlIG91dGxhbmRpc2ggYW5kIG9mZiB0aGUgY3VmZi4gSWYgc29tZW9uZSBoYXMgdmFsaWQgY2l0aXplbnNoaXAgdG8gcXVhbGlmeSBmb3IgUHJlc2lkZW5jeSwgdGhlbiBsZXQgdGhlbS4gCkluIGEgQ2FyaWJiZWFuIFN0dWQgUG9rZXIsIGEgbmljZSBwb2tlciBzdHJhdGVneSBkZWFscyB3aXRoIHdoZW4gdG8gYmV0IHRpbWVseSBhbmQgYXBwcm9wcmlhdGVseS4gQSBnb29kIHBva2VyIHN0cmF0ZWd5IHdpbGwgcmVxdWlyZSB5b3UgdG8gbWFpbnRhaW4gYSBwYWlyIG9yIGJldHRlci4gSW4gdGhlIGV2ZW50IHRoYXQgdGhlIGRlYWxlciBzaG93ZWQgMTAgb3IgbGVzcyBhbmQgbWF0Y2hlcyBvbmUgb2YgeW91cnMgYW5kIHlvdSBoYXZlIGFuZCBBY2UgS2luZyBvciBiZXR0ZXIsIGRvbid0IGhlc2l0YXRlIHRvIGJldC4gClZpc2l0b3JzIHdpbGwgYWxzbyBub3RpY2UgbmV3LCByZWQgYXduaW5ncyBvdXRzaWRlIHRoZSBjYXNpbm8sIHJlcGxhY2luZyBibGFjayBvbmVzLCBhbmQgY2FzaW5vIHN0YWZmIHdlYXJpbmcgcmVkIFQgc2hpcnRzIGZvciB0aGUgZmlyc3QgbW9udGguIFRoZSBzaGlydHMgaGF2ZSBzYXlpbmdzIG9uIHRoZSBiYWNrIGxpa2UsIGl0IHVwIHRvbmlnaHQsIHdlIGFsbCBnb2luZyB0byBiZSBlYXRpbmcgdGFwaW9jYSBpbiBCb2NhIFJhdG9uIHNvbWVkYXkuIApPdmVydmlldyBmb3IgU3RpbGxBbGl2ZUdhbWVyCldobyBrbm93cyBhbnltb3JlPyBXb3VsZG4ndCBzdXJwcmlzZSBtZSBpZiBEdXJhbnQncyBoYW5kbGVycyBuZXZlciBoYWQgYW55IGludGVudGlvbiBvZiBoaW0gYXR0ZW5kaW5nIENvbGxpc29uJ3MgbmlnaHQgYnV0IG1lcmVseSB3YW50ZWQgdG8gbGF1bmNoIGEgcHVibGljIHJlbGF0aW9ucyBzYWx2byBpbiB0cnlpbmcgdG8gcmVidWlsZCBEdXJhbnQncyBpbWFnZS4gQXNrIHRoZSBUaHVuZGVyIGZvciBwZXJtaXNzaW9uIHRvIGF0dGVuZCwgbWF5YmUgdGhlIFRodW5kZXIgc2F5cyB5b3UndmUgZ290IHRvIGJlIGtpZGRpbmcsIER1cmFudCBsZWFrcyBpdCB0byB0aGUgcHJlc3MgYW5kIGNsYWltcyB0aGUgbW9yYWwgaGlnaCBncm91bmQuIApBbiBlc3RpbWF0ZWQgMSw1MDAgcGVvcGxlIHBhY2tlZCBhIGJhbGxyb29tIGFuZCBvdmVyZmxvdyByb29tIGluIHRoZSBzdHVkZW50IHVuaW9uIHRoaXMgd2VlayBmb3IgdGhlIGZpcnN0IHB1YmxpYyBtZWV0aW5nIG9mIE5ldmFkYW5zIGZvciB0aGUgQ29tbW9uIEdvb2QsIGEgYnJvYWQgYmFzZWQgaW50ZXJmYWl0aCBvcmdhbml6YXRpb24gZGVkaWNhdGVkIHRvIHRhY2tsaW5nIE5ldmFkYSdzIHRvdWdoZXN0IHByb2JsZW1zLgpPZiBjb3Vyc2UsIGF1dG8gZG91YmxlIHVwIGhhbmRzIGp1c3QgZG9uJ3QgY29tZSBhcm91bmQgdGhhdCBvZnRlbiBhbmQgcGxheWluZyBtYXJnaW5hbCBoYW5kcyBoYXZlIGFuIGFubm95aW5nIGhhYml0IG9mIG1ha2luZyB5b3UgZ28gYnJva2UgcXVpY2tseS4gClRoZSBxdWVzdGlvbiBpcyBob3cgZmFyIGNhbiB0aGF0IGJlIHRha2VuIGFuZCB0aGF0IGxpdGVyYWxseSBkZXBlbmRzIG9uIGNvbm5lY3Rpb25zLiAKTWlyIGlzdCBhdWNoIGtsYXIsIGRhc3MgZGllIG5ldWVuIE1lZGllbiBkYXMgS2luZGVyIGVyemllaGVuIGdhbnogYmVzdGltbXQgbmljaHQgZWluZmFjaGVyIGdlbWFjaHQgaGFiZW4uIEFiZXIgZGFzcyBuZGVydCBuaWNodHMgZGFyYW4sIGRhc3MgZGllIEVsdGVybiBmciBkaWVzZSBFcnppZWh1bmcgdmVyYW50d29ydGxpY2ggc2luZC4gRGFzIEludGVybmV0IHVuZCBDb21wdXRlcnNwaWVsZSBzaW5kIGtlaW5lIEJhYnlzaXR0ZXIuIDIgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnbwpBbmQgeWVzLCBzb21lIHBlb3BsZSB3b24gdGFrZSBhIGhpdCB0byB0aGVpciBsaWZlc3R5bGUsIGJ1dCBzbyB3aGF0PyBJZiBsaXZpbmcgd2l0aCB5b3VyIHBhcmVudHMgd29ya3MgZm9yIHlvdSwgYW5kIHRoZSBhbHRlcm5hdGl2ZSBpcyB0byBsaXZlIGluIGEgc2hpdCBob2xlIHdpdGggcGVvcGxlIHlvdSBkb24ga25vdywgd2hhdCBpcyBzbyBiYWQgYWJvdXQgc3RheWluZyBhdCBob21lPyBNeSBmcmllbmQgbGl2ZWQgd2l0aCBoaXMgcGFyZW50cyB1bnRpbCBoZSB3YXMgYWxtb3N0IDMwLiBHdWVzcyB3aGF0IGhlIGRpZD8gWWVhaCBoZSBzYXZlZCB1cCBhIGRlcG9zaXQgb24gYSBob3VzZS4gVmlydHVhbGx5IGltcG9zc2libGUgZm9yIGhpbSB0byBkbyB0aGF0LCBpbiB0aGF0IHRpbWUgZnJhbWUsIGlmIGhlIGhhdmUgcmVudGVkIGxpa2UgdGhlIHJlc3Qgb2YgdXMgc2NobXVja3MuCkxldCBzYXkgdGhlIG90aGVyIHRoZW9yaWVzIGFyZSBqdXN0IGFzIGxpa2VseSBhcyBBR1csIGdpdmVuIHRoZSBleHRyZW1lbHkgbmVnYXRpdmUgY29uc2VxdWVuY2VzIHRvIGNpdmlsaXphdGlvbiwgaXQgd291bGQgc2VlbSB0aGF0IHdlIHNob3VsZCB0aGVuIGFjdCBldmVuIHdpdGggb25seSA1MCUgY2VydGFpbnR5ClNheWluZyBpZiB0cnVtcCB3YXMgd29ycmllZCBhYm91dCB0aGUgQ29oZW4gc3RhdGVtZW50cywgdGhlbiBoZSBoYXZlIG1hZGUgYW55IGRlYWwgaGUgY291bGQgdG8gc2hpZnQgdGhlIG5ld3MuIApCZWNhdXNlIHdlIHdlcmUgYWxsIGZyaWVuZHMgZmlyc3QsIHRoZSBhdG1vc3BoZXJlIG5ldmVyIGdldHMgY29udGVudGlvdXMgb3IgYnJhZ2d5LCBhbmQgd2UgdGVuZCB0byBnZXQgcmVhbGx5IGludmVzdGVkIGluIGVhY2ggb3RoZXIgcHJvamVjdHMgYW5kIGNoYXJhY3RlcnMuIFdlIGFsd2F5cyBlYWNoIG90aGVyIGZpcnN0IGJldGEgcmVhZGVycyBhbmQgaGF2ZSBtYWRlIGVhY2ggb3RoZXIgd29yayBzbyBtdWNoIGJldHRlci4gKEFuZCBiZWNhdXNlIHdlIGNvbWUgZnJvbSBhIGZhbmRvbSBiYWNrZ3JvdW5kLCBpdCBhbHNvIGp1c3QgYSBsb3Qgb2YgZnVuIHRvIGp1bXAgaW50byB0aGUgZ3JvdXAgY2hhdCBsaWtlICJPaCBteSBnb2QsIEphbmUsIHlvdSBoYXZlIHRvIGxpc3RlbiB0byB0aGlzIHNvbmcgSSBmb3VuZCB0aGF0IGlzIFRPVEFMTFkgeW91ciBwcm90YWdvbmlzdC4iKSBJdCBkZWZpbml0ZWx5IGp1c3QgZmVsbCBpbnRvIG15IGxhcCwgYnV0IEkgY3JlZGl0IHRoZW0gd2l0aCBrZWVwaW5nIG1lIHByb2R1Y3RpdmUgYW5kIG1ha2luZyBtZSB3b3JrIGhhcmRlciEuIApTb21ldGltZXMgSSdkIGxpbXAgd2l0aCBoYW5kcyBsaWtlIDEwOHNzIGtub3dpbmcgaWYgSSBoaXQgdGhlIG51dHMgSSBjb3VsZCBqdXN0IHNob3ZlIGFuZCBhbHdheXMgZ2V0IGNhbGxlZC4uIApCdXQgSSBkb24ga25vdyBpZiB0aGV5IGFyZSwgc28gSSB3b3VsZCBuZWVkIHRvIGFzc2VzcyB0aGF0LiBMYWNvYiByZWFzc2VydGVkIHRoYXQgaGUgcGxhbnMgdG8gYmUgYSB2ZXJ5IGhhbmRzIG9uIG93bmVyLCBhbmQgaGUgY29uZmlybWVkIGhlIG1hZGUgdGhlIGNhbGwgdG8gc2lnbiBKZXJlbXkgTGluLi4gCkFsc28gZnJvbSBteSB1bmRlcnN0YW5kaW5nIHNvbHZlcnMgaGF2ZSBiZWVuIG91dCBmb3IgeWVhcnMgYnV0IG5vIG9uZSBoYXMgc29sdmVkIE5MSEUgeWV0LiAKQXVyaWxpYSBwaW5jaCBoaXRzIGZvciBJc2hpa2F3YTogQW55b25lIGVsc2UgdGhpbmsgaXQgd2FzIG9kZCBmb3IgQnJ1Y2UgQm9jaHkgdG8gcGluY2ggaGl0IGZvciBUcmF2aXMgSXNoaWthd2EgdGhhdCBlYXJseSBpbiB0aGUgZ2FtZSBvbiBTdW5kYXk/IEkgbWVhbiBpdCB3YXMgdGhlIDR0aCBpbm5pbmcuIApZb3VyIHN0b3J5IGlzIGluY3JlZGlibHkgdG91Y2hpbmcgYW5kIHNhZCwgSSBmZWVsIGxpa2UgSSBqdXN0IHJlYWQgc29tZXRoaW5nIGZyb20gY2hpY2tlbiBzb3VwIGZvciB0aGUgc291bCwgd2UganVzdCBoYXZlbnQgcmVhZCB0aGUgcmVhbGx5IGhhcHB5IGVuZGluZyB5ZXQgPV0uIEFuZCB0aGF0cyB3aGF0IEkgYmVsaWV2ZSwgQSBtb3RoZXIgc2hvdWxkIE5FVkVSIGhhdmUgdG8gYnVycnkgaGVyIGNoaWxkLCBhbmQgZm9yIHRoYXQgSSBhbSBpbmNyZWRpYmx5IGhlYXJ0YnJva2VuIGZvciB5b3UsIGJ1dCB5b3UgaGF2ZSBiZWVuIGJsZXNzZWQgd2l0aCBhbm90aGVyIGJlYXV0aWZ1bCBjaGlsZCB3aG8gd2UgZG9udCBrbm93IGlmIHRoZXkgYXJlIGVmZmVjdGVkIHlldCBvciBub3QuIEFuZCBNZWRpY2FsIHNjaWVuY2UgaGFzIGRldm9sb3BlZCBzbyBtdWNoIGFuZCBzbyBmYXIgaW4gc3VjaCBhIHNob3J0IHBlcmlvZCBvZiB0aW1lIHRoYXQgZmF0YWxpdGllcyBhcmUgZ3Jvd2luZyBzbWFsbGVyIGFuZCBzbWFsbGVyIGV2ZW4gd2l0aCB0aGUgbW9zdCBwZXJpbG91cyBvZiBkaXNlYXNlcyBhbmQgY29uZGl0aW9ucy4gCkZvciBleGFtcGxlLCBwZW9wbGUgcmVzcG9uZCB0byBtZXJjdXJ5IGV4cG9zdXJlIGRpZmZlcmVudGx5IGFuZCBkZXRveGlmeSBpdCBhdCBkaWZmZXJlbnQgcmF0ZXMuIFRoZXJlIGlzIGEgY2xhc3NpYyBiZWxsIGN1cnZlIHRvIHRoZSBzcGVlZCB3aXRoIHdoaWNoIHBlb3BsZSBkZXRveCBtZXJjdXJ5LCBidXQgdGhlbiB0aGVyZSBpcyBsYXJnZSBwb3B1bGF0aW9uIChvdmVyIDEwIHBlcmNlbnQpIHRoYXQgZGV0b3hpZnkgbWVyY3VyeSB2ZXJ5IHNsb3dseS4gVGhlc2UgcGVvcGxlIG11c3QgbGltaXQgdGhlaXIgZXhwb3N1cmUgYW5kIG5lZWQgYWRkaXRpb25hbCBudXRyaWVudHMgdG8gaGVscCByZW1vdmUgbWVyY3VyeSBmcm9tIGJ1aWxkaW5nIHVwIGluIHRoZSBib2R5LjUpIFRoZSBrZXkgdG8gZGlhYmV0ZXMgcHJldmVudGlvbiBpcyBhIHN0cm9uZyBhbmQgcmVjZXB0aXZlIGNlbGwgbGlwaWQgbGF5ZXIuWW91IG5lZWQgc3VmZmljaWVudCBhbWlubyBhY2lkcyB0byBidWlsZCB0aGUgcHJvdGVpbiBzdHJ1Y3R1cmUgb2YgZWFjaCBjZWxsLiAKSWYgeW91IGhhdmUgZXZlciB3YW50ZWQgYSBiZWhpbmQgdGhlIHNjZW5lcyBsb29rIGF0IHRoZSBsaWZlIG9mIHRoZSBtb20gb2YgYSBoaWdoIHByb2ZpbGUgd29ybGQgcmVub3duZWQgcmFwIGFydGlzdCwgdGhpcyBib29rIHdpbGwgZ2l2ZSB5b3Ugd2hhdCB5b3UgYXJlIGxvb2tpbmcgZm9yLiBXaXRoIGl0cyBoaWdoZXN0IGhpZ2hzIGFuZCBsb3dlc3QgbG93cywgQmV2ZXJseSBCcm9hZHVzIEdyZWVuIGludGltYXRlbHkgc2hhcmVzIGhlciBqb3VybmV5IGZyb20gaGVyIHJvb3RzIGluIHRoZSBkZWVwIHNvdXRoIHRvIHRoZSBicmlnaHQgbGlnaHRzIG9mIEhvbGx5d29vZC4gU2hlIGdpdmVzIGFuIGV4Y2VwdGlvbmFsIGdsaW1wc2UgaW50byB3aGF0IGl0IHJlYWxseSB0YWtlcyB0byBsaXZlIGEgbGlmZSB5b3UgdHJ1bHkgbG92ZS4gCk9uZSB0aGluZyBJIHdpbGwgdGVsbCB5b3UgdGhvdWdoIGlzIGlmIHlvdSBtYWtlIHN1cmUgdG8gZG8gYW55dGhpbmcgd2l0aCB0aGlzIGluZm9ybWF0aW9uYWwgbWF0ZXJpYWwsIG1ha2Ugc3VyZSB0byB3YXRjaCB0aGUgdmlkZW9zLiAKVGhpcyBpcyB1bmRlcnN0YW5kYWJsZSBzaW5jZSB0aGV5IHRoZSBvbmVzIHdobyBoYXZlIGJlZW4gdXAgaW4gdGhlIGFpciBmb3IgMjAwKyBtaWxsaW9uIHllYXJzIChvciBhdCBsZWFzdCBsYXRlIEp1cmFzc2ljKSwgd2hpbGUgaHVtYW5zIGhhdmUgYmVlbiBpbiB0aGUgYWlyIGZvciBvbmx5IGFib3V0IC4wMDAxJSBvZiB0aGF0IHRpbWUgaW4gb3VyIGNvbnRyb2xsZWQgZmFsbGluZy4gCkJyYXZlcyBmYW5zIGFyZSBleGNlcHRpb25hbGx5IHVwc2V0IGJlY2F1c2UgdGhleSB0aG91Z2h0IGl0IHdvdWxkIGJlIGRpZmZlcmVudCBidXQgQUEgYW5kIExpYmVydHkgTWVkaWEgaGF2ZSBzaG93biBtb3JlIG9mIHRoZSBzYW1lIGxhY2sgb2YgY29tbWl0dGluZyB0byBwYXlyb2xsIGFzIG90aGVyIG93bmVycyBoYXZlLiAKIldlIHdpc2ggaGUgd2FzIGhlcmUuIE1hdHR5LCB3ZSBtaXNzIHlvdSwiIExlQmxhbmMgc2F5cyBpbiB0aGUgY2xpcC4KVGhlIG1hbmFnZXIganVzdCB0ZWxscyB0aGVtIHdoaWNoIHBsYXllcnMgdGhleSB3YW50LiAKVGhlcmUgd2VyZSB2YXJpb3VzIHBvbGljZSBjaGVja3BvaW50cyBhbG9uZyB0aGUgd2F5IGFuZCB0aGUgcG9saWNlIHdvdWxkIHNheSAiaGVsbG8gYW5kIHdlbGNvbWUhIiBhbmQgdGhlbiB3YXZlIHVzIGFsb25nLi4gCklmIHdlIGhhZCBlbGltaW5hdGVkIDMgb2YgdGhlIDYgcGxheWVycyB0aGUgYXZlcmFnZSBjaGlwcyBzdGFjayB3b3VsZCBoYXZlIGJlZW4gMjAwLDAwMCBhbmQgdGhlIGJsaW5kcyB2IGF2ZS4gQ2hpcCBzdGFjayByYXRpbyB3b3VsZCBiZSBtb3JlIG5vcm1hbC4gClNoZSBsb2NhdGVkIGFib3V0IDYwIG9mIHRoZW0gd2hvIGxpdmUgYXJvdW5kIHRoZSBjb3VudHJ5IGFuZCBhYnJvYWQuIApZZXMsIHRoZXkgZG8uIApJIGFza2VkIHRoZSBxdWVzdGlvbiBpbiB0aXRsZSB0byBhIHByb2Zlc3Npb25hbCBNVFQgcGxheWluZyBmcmllbmQgb2YgbWluZS4gSGUgYSBsaXZlIHBybyB0aGF0IHBsYXlzICQ1MDAwICQxMDAwMCBidXlpbiB0b3VybmFtZW50cyBhcm91bmQgdGhlIHdvcmxkLCBpbmNsdWRpbmcgdGhlIFdTT1AgTWFpbiBFdmVudCwgQXVzc2llIE1pbGxpb25zLCBTSFJQTywgRVBUIGFuZCBXUFQgbWFpbiBldmVudHMuIEhlIGdhdmUgbWUgc29tZSBnb29kIGluc2lnaHQuIEhlIHNheXMgdGhhdCBpdCByZWFsbHkgZG9lc24gbWF0dGVyIHdoaWNoIGZvcm1hdCBvZiBwb2tlciB5b3UgZGVjaWRlIHRvIHBsYXksIGJ1dCB5b3VyIHN1Y2Nlc3MgcHJpbWFyaWx5IGRlcGVuZHMgb24geW91ciBkZWRpY2F0aW9uIHRvIHRoZSBnYW1lIGFuZCBzZWxmIGRpc2NpcGxpbmUuIEhlIG5ldmVyIHNwZWNpZmljYWxseSBhbnN3ZXJlZCB3aGljaCBvZiB0aGUgdGhyZWUgb3B0aW9ucyB3YXMgZWFzaWVzdCB0byBiZWF0LCBidXQgaGUgZGlkIHRlbGwgbWUgdGhhdCBzb21lYm9keSBwbGF5aW5nIChhIHNvbGlkIGdhbWUpIGxpdmUgY2FzaCBpbiBWZWdhcywgQXRsYW50aWMgQ2l0eSwgTG9zIEFuZ2VsZXMsIG9yIEZsb3JpZGEgd291bGQgd2luIG1vbmV5IGNvbnNpZGVyYWJseSBmYXN0ZXIgKG9uIGF2ZXJhZ2UpIHRoYW4gYSBwbGF5ZXIgd2hvIHBsYXlzICQ1MDAgJDEwMDAgdG91cm5hbWVudHMsIGxpdmUgb3Igb25saW5lLiBIZSBkb2VzbiBwbGF5IG9ubGluZSBtdWNoLCBvdGhlciB0aGFuIHRoZSBjb3VwbGUgV1NPUCBvbmxpbmUgYnJhY2VsZXQgZXZlbnRzIGV2ZXJ5IHllYXIsIGFuZCB0aGlua3MgdGhhdCBvbmxpbmUgaXMgbXVjaCB0b28gaGFyZCB0byBiZWF0IG5vd2FkYXlzLiBIZSBzYXlzIHRoYXQgdGhlIGF2ZXJhZ2UgcGxheWVyIGluIGFuIG9ubGluZSB0b3VybmFtZW50IGlzIG9ubHkgdGhlcmUgdG8gd2luIG1vbmV5IHdpdGggdGhlaXIgZ2FtZSB0aGF0IHRoZXkgYmVlbiBzdHVkeWluZy9wcmFjdGljaW5nIGZvciBodW5kcmVkcyBvciB0aG91c2FuZHMgb2YgaG91cnMuIEFuZCB3aGVuIHlvdSBsb29rIGF0ICQ1MDAgJDEwMDAgb25saW5lIHRvdXJuYW1lbnRzLCBtb3N0IG9mIHRoZSBwZW9wbGUgcGxheWluZyB0aGVtIGFyZSB0aGUgb25lcyB3aG8gaGF2ZSB3b24gbWlsbGlvbnMgb2YgZG9sbGFycyBvbmxpbmUuIEZsaXAgb3ZlciB0byAkNTAwICQxMDAwIGxpdmUgdG91cm5hbWVudHMsIHdoZXJlIHlvdSBzZWUgdG91cm5hbWVudHMgbGlrZSBNU1BULCBXUFREZWVwc3RhY2tzIGFuZCBXU09QIENpcmN1aXQsIHdoZXJlIGEgc2l6YWJsZSBhbW91bnQgb2YgdGhlIHBsYXllcnMgdGhlcmUgd2FudCB0byBjYXNoLCBidXQgdGhleSBkb250IHB1dCBhbnkgdGltZSBpbnRvIHN0dWR5aW5nIHRoZWlyIGdhbWUsIG90aGVyIHRoYW4gdGhhdCBvbmUgRGFuaWVsIE5lZ3JlYW51IHRyYWluaW5nIHZpZGVvIHRoZXkgd2F0Y2hlZCBvbiBZb3VUdWJlIHVwbG9hZGVkIGluIDIwMDkuIFRoZXkgaGF2ZSBiYXNpY2FsbHkgemVybyBjaGFuY2Ugb2Ygd2lubmluZyB0aGVzZSB0b3VybmFtZW50cyB3aXRoIHRoZWlyIG91dGRhdGVkIEFCQyAyMDA5IHN0cmF0ZWd5LCBidXQgdGhleSBzdGlsbCBrZWVwIGNvbWluZyBiYWNrIGZvciB0aGUgZXhwZXJpZW5jZSBhbmQgdGhhdCBkcmVhbSBvZiB3aW5uaW5nLgpGdWVnb2RpZWdPSCAgMjEsMjA3IHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvClNlbG9uIEZyYW5vaXMgVEVSUkUgZXQgRG9taW5pcXVlIEZFTk9VSUxMRVQgKFByY2lzIERhbGxveiwgcCA6IDcpLCAgbGEgcGVyc29ubmFsaXQganVyaWRpcXVlIGVzdCBsJ2FwdGl0dWRlICB0cmUgdGl0dWxhaXJlIGFjdGlmIGV0IHBhc3NpZiBkZSBkcm9pdHMgcXVlIGxlIGRyb2l0IG9iamVjdGlmIHJlY29ubmF0ICBjaGFjdW4gLiBJbCBleGlzdGUgZGV1eCBjYXRnb3JpZXMgZGUgcGVyc29ubmVzIGRvdHMgZGUgY2V0dGUgcGVyc29ubmFsaXQganVyaWRpcXVlIDogbGVzIHBlcnNvbm5lcyBwaHlzaXF1ZXMgZXQgbGVzIHBlcnNvbm5lcyBtb3JhbGVzLiAKWW91IGRvbid0IG5lZWQgdG8gYWx0ZXIgeW91cnNlbGYgdG8gZmluZCBsb3ZlIGFuZCB5b3UgYXJlIGdyZWF0IGp1c3QgYXMgeW91IGFyZS4uIApCZWNhdXNlIHNoZSBhbmQgb3RoZXJzIGFyZSBhYmxlIHRvIGFjdHVhbGx5IHNob290IGRvd24gdGhlIGFjY3VzYXRpb25zIGJleW9uZCBqdXN0IFR3ZWV0IHNob3V0aW5nLCAiV2l0Y2ggSHVudCEhISIsIHdoZXJlIGFjdHVhbCBtdWx0aXBsZSBpbmRpY3RtZW50cywgd2l0aCBwcmlzb24gc2VudGVuY2VzIGhhdmUgYmVlbiBoYW5kZWQgZG93biBpbiByZWdhcmQgdG8gTXVlbGxlciBpbnZlc3RpZ2F0aW9uLCB3aGljaCBpcyBzaW5ndWxhciBpbiBzY29wZS4gVGhlIEdPUCBjb250cm9sbGVkIENvbmdyZXNzIGFicm9nYXRlZCBpdHMgb3ZlcnNpZ2h0IG9ibGlnYXRpb25zIGR1cmluZyBUcnVtcCBmaXJzdCB0d28geWVhcnMgaW4gb2ZmaWNlLCBhbmQgd2hhdCB3ZSBzZWVpbmcgbm93IGlzIGEgY29ycmVjdGlvbiwgZXNwZWNpYWxseSBhcyBpdCBtYXkgcGVydGFpbiB0byB3aGF0IGhvb2tzIGZvcmVpZ24gaW50ZXJlc3RzIGhhdmUgaW4gVHJ1bXAgYW5kIGhpcyBjbGFuLiBJdCB3b3VsZCBoZWxwZWQgaWYgVHJ1bXAgaGFkIHJlbGVhc2VkIGhpcyB0YXggcmV0dXJucyBhbmQgaGFkIGRpdmVzdGVkIGhpbXNlbGYsIG9yIHB1dCBpbnRvIGJsaW5kIHRydXN0LCBoaXMgYnVzaW5lc3MgaW50ZXJlc3RzLgpVc2Ugc29tZXRoaW5nIGxpa2UgTGFzdHBhc3MgZm9yIGJ1c2luZXNzIHRvIG1hbmFnZSBwYXNzd29yZHMgZm9yIHNlY3VyaXR5LiBZb3UgZG9uJ3Qgd2FudCBzb21lb25lIGdldHRpbmcgbWFkIGF0IHlvdSBnb2luZyBpbiBhbmQgc2Fib3RhZ2luZyB5b3VyIHBsYXRmb3Jtcy4uIApTYW1lIGhlcmUuIApZb3UgcGVvcGxlIGFyZSBjb21wbGV0ZWx5IG1pc3NpbmcgbXkgcG9pbnQuClRoZSByZXZlbnVlIEZER0QgYnJpbmdzIGludG8gTmVkZXJsYW5kIGlzIHF1aXRlIHNpZ25pZmljYW50LiBJbiBpdHMgZmlyc3QgeWVhciB0aGUgc2luZ2xlIGRheSBldmVudCBhdHRyYWN0ZWQgMSw3MDAgYXR0ZW5kZWVzLiBJbiByZWNlbnQgeWVhcnMsIHRoZSAzIGRheSBldmVudCBoYXMgYmVlbiBlc3RpbWF0ZWQgdG8gZHJhdyAyNSwwMDAgZm9sa3MgbG9va2luZyB0byB0YWtlIGluIGZyb3plbiBUIHNoaXJ0IGNvbnRlc3RzLCBpY2UgY2FydmluZyBjb21wZXRpdGlvbnMsIGljZSB0dXJrZXkgYm93bGluZyBhbmQgc25vd3kgaHVtYW4gZm9vc2JhbGwuCkdhbWJsaW5nIFBva2VyIFBsYXllcnMgcHV0IHRoZWlyIG1vbmV5IHdoZXJlIHRoZWlyIG1vdXRoIGlzLi4gCkxldCBzYXkgKEhVU05HKSB5b3UgcGxheWluZyBhZ2FpbnN0IGEgcGxheWVyIHdobyB5b3Ugbm90aWNlIGZvbGRzIGFsbCBvZiB0aGUgdGltZSBpbiB0aGUgYmlnIGJsaW5kIHRvIGEgc2hvdmUgZnJvbSB0aGUgYnV0dG9uLiBNYXhpbXVtICtFViB3b3VsZCBiZSB0byBzaG92ZSBhbGwgb2YgdGhlIHRpbWUgd2l0aCBhbGwgb2YgeW91ciBob2xkaW5ncy4gQnV0IHRoaXMgaXMgbm90IGEgR1RPIHN0cmF0ZWd5LCBhcyBpdCBjYW4gYmUgZXhwbG9pdGVkLgpJbiBmYWN0LCBJIHN1cmUgdGhleSB3b24gYmVjYXVzZSB0aGlzIGlzIGEgZGlmZmVyZW50IHRpbWUsIGFuZCB0aGV5IGhhdmUgeW91ciBzdXBwb3J0LCBhbmQgYWNjZXNzIHRvIGV2ZW4gbW9yZSByZXNvdXJjZXMuIApTYWRseSwgSSBsZWFybmVkIG5vdCB0byBnZXQgdG9vIGV4Y2l0ZWQgb3ZlciBuZXdzIGxpa2UgdGhpcy4gUGVvcGxlIHdlcmUgc2F5aW5nIGEgeWVhciBhZ28gdGhhdCB0aGluZ3Mgd2VyZSBnb2luZyB0byBzdGFydCBtb3ZpbmcuIEkgcmVhbGl6ZSB0aGluZ3MgaGF2ZSBoYXBwZW5lZCBhbmQgdGhpbmdzIGFyZSBkZWZpbml0ZWx5IG1vdmluZyBub3csIGJ1dCBJIGdvaW5nIHRvIHNpdCBiYWNrIGFuZCB3YWl0IHVudGlsIGEgbW91bnRhaW4gb2Ygc2hpdCBnb2VzIHRocm91Z2ggYSBqZXQgdHVyYmluZS4gT25jZSB0aGF0IGhhcHBlbnMsIEkgZ29pbmcgdG8gYmUgb24gY2xvdWQgbmluZSBhbmQgZW5qb3lpbmcgZXZlcnkgbW9tZW50IG9mIGl0LgpGb3IgdGhvc2UgdGhhdCBkb24gaGF2ZSB0aGlzIGNvbmRpdGlvbiwgaW1hZ2luZSB0aGUgc2Vuc2F0aW9uIG9mIGNob2tpbmcgYnV0IHN0aWxsIGJlaW5nIGFibGUgdG8gYnJlYXRoLiAKUGx1cyB0aGUgcmlkZSB0byBnZWJlbGUgaXMgdmVyeSBwcmV0dHkuIEFzayBmb3IgYSAiZG9udXogbHVsZXNpIiBhbmQgYSAia2FydG9zaGthIGx1bGVzaSIgKGdyb3VuZCBwb3JrIGtlYmFiIGFuZCBtYXNoZWQgcG90YXRvIGtlYmFiKS4gClRoZSBhbW91bnQgb2YgbmF0dXJhbCBsaWdodCBpbGx1bWluYXRpbmcgdGhlIGdhbWluZyBmbG9vcnMgc2VuZHMgYW4gaW1tZWRpYXRlIG1lc3NhZ2UgdGhhdCBnb25lIGFyZSB0aGUgZGF5cyBvZiB0aGUgZGFyaywgc21va3kgY2FzaW5vIGhvdGVscyB0aGF0IG1ha2UgdXAgbXVjaCBvZiB0aGUgcG9wdWxhciBnYW1ibGluZyBob3Qgc3BvdCBMYXMgVmVnYXMsIE5ldmFkYS4gCklsIHMnYWdpdCBkJ3VuIHByb2dyYW1tZSBvcmlnaW5hbCBxdWkgZmFpdCBhbHRlcm5lciBkYW5zIGxhIG1tZSBzb2lyZSBkZXMgYXRtb3NwaHJlcyB0b3RhbGVtZW50IGRpZmZyZW50ZXMsIGNlbGxlIHRycyBpbnRpbWlzdGUgZGVzIGNoYW5zb25zIGVzcGFnbm9sZXMgZHUgWFZJSW1lIHNpY2xlIGF2ZWMgcXVlbHF1ZXMgY29tcG9zaXRldXJzICBkY291dnJpciBKdWFuIEhpZGFsZ28gKGNsYXZlY2luaXN0ZSAgbGEgQ2hhcGVsbGUgcm95YWxlIGRlIE1hZHJpZCkgb3UgZW5jb3JlIENsZW1lbnRlIEltYWduYSwgUy4gCkkgbmV2ZXIgc2VlbiB0aGlzIGtpdCBiZWZvcmUgaW4gbXkgbGlmZS4gQXBwYXJlbnRseSwgbXkgc2lzdGVyIHdlbnQgaW50byBoZXIgYmVkcm9vbSBhbmQgZGlzY292ZXJlZCBpdCBvdXRzaWRlIG9mIGhlciB3aW5kb3cgcHJvcHBlZCB1cCBsaWtlIHNvbWVvbmUgaGFkIHNldCBpdCB0aGVyZS4gT2gsIGFsc28sIGhlciBiZWRyb29tIGlzIG9uIHRoZSAybmQgZmxvb3IuIApIb3cgZG8geW91IGNoZWF0IGF0IGdvdmVybm9yIG9mIHBva2VyClN1cHJlbWUgQ291cnQgZGVjaXNpb24gb3V0bGF3aW5nIG1hbmRhdG9yeSBsaWZlIHNlbnRlbmNlcyBmb3IgcGVvcGxlIHdobyBjb21taXQgY3JpbWVzIGFzIGp1dmVuaWxlcy4uIAoyOSBwb2ludHMgIHN1Ym1pdHRlZCAyMyBkYXlzIGFnbwpQbGVzZSBwb3NpdGlvbi4gClRoZSBiYXNpYyBwcmluY2lwbGUgb2YgdGhlIGdhbWUgaXMga25vd24gYXMgIkFCQyBQb2tlciIuIFRoZXJlIGFyZSBwbGVudHkgb2YgZ3VpZGVzIG91dCB0aGVyZSB0aGF0IEdvb2dsZSB3aWxsIGZpbmQgZm9yIHlvdSB0aGF0IGdvIGRlZXBlciBpbnRvIGV4YWN0bHkgaG93IHRvIHBsYXksIGJ1dCB0aGUgZ2lzdCBvZiBpdCBpcyB0aGF0IHBva2VyIGlzIGEgdmVyeSB3ZWxsIG1hdGhlbWF0aWNhbGx5IGRlZmluZWQgZ2FtZSwgYW5kIGdvb2QgcGxheSBpbnZvbHZlcyBtYWtpbmcgY29ycmVjdCBkZWNpc2lvbnMgYmFzZWQgb24gdGhlIHN0YXRpc3RpY2FsIG91dGNvbWUgb2YgcGxheS4gTm90aGluZyBmYW5jeSwganVzdCBzb2xpZCBwbGF5LiAKQmVzdCByZWdhcmRzLCBPcGFzIEdlbmVyYWwgbWFuYWdlclJlc3BvbnNlIGZyb20gT3BhcyBELCBHZW5lcmFsIE1hbmFnZXIgYXQgQ2VudGFyYSBWaWxsYXMgUGh1a2V0UmVzcG9uZGVkIDMwIEphbiAyMDE5RGVhciBSaWNoYXJkIEosIEdyZWV0aW5ncyBmcm9tIFBodWtldCwgVGhhbmsgeW91IGZvciBzdGF5aW5nIHdpdGggdXMgYW5kIGZvciBoYXZpbmcgc2hhcmVkIHlvdXIgcmV2aWV3IG9uIFRyaXBhZHZpc29yLiBJIHVuZGVyc3RhbmQgdGhhdCBvdmVyYWxsIHlvdSBlbmpveWVkIGEgc3RheS4gCk5BU0NBUiBpcyBhIHNwb3J0IHRoYXQgaXMgZm9yIHRoZSBmYW5zLCB0aGUgcmVsYXRpb25zaGlwIHdpdGggdGhlIGZhbnMsIGFzIGZhciBhcyBJIGNhbiBzZWUsIGlzIHZlcnkgdGlnaHQsIGFuZCBJIHRoaW5rIHRoYXQncyB3aGF0IHdlJ3JlIGFmdGVyLiIuIApCZSBkZWNlbnQuIFJhY2lzbSBvciBiaWdvdHJ5IGluIGFueSBmb3JtIGlzIG5vdCBhbGxvd2VkIGFuZCB3aWxsIGJlIHJlbW92ZWQuIFJlcGVhdCBvZmZlbmRlcnMgd2lsbCBiZSBpbiBjb25zaWRlcmF0aW9uIGZvciByZW1vdmFsIGZyb20gdGhpcyBzcGFjZS4gTm8gaGF0ZSBtYXRlcmlhbCwgc3VibWlzc2lvbnMgb3IgY29tbWVudHMsIHdpbGwgYmUgYWNjZXB0ZWQuIFJhY2lzbSBpcyBhbiBpbnN0YW50bHksIHBlcm1hbmVudGx5IGJhbm5hYmxlIG9mZmVuc2UuIFRoaXMgcnVsZSBkb2VzIG5vdCBwcmVjbHVkZSBzcGlyaXRlZCBkZWJhdGUgYW5kIGludGVuc2UgY3JpdGljaXNtOyBob3dldmVyLCB0aHJlYWRzIHRoYXQgaGF2ZSBnb25lIGJleW9uZCB0aGUgc2NvcGUgb2YgZGViYXRlIGFuZCBkZXZvbHZlZCB0byB0aGUgcG9pbnQgb2Ygb25seSBwZXJzb25hbCBhdHRhY2tzIHdpbGwgYmUgc3ViamVjdCB0byB0aGUgaXNzdWluZyBvZiB3YXJuaW5ncyBvciBiYW5zLiAvci9QYWdhbiBkb2VzIG5vdCBwdXQgZm9ydGggYW55IHByZXRlbnNlIG9mIGJlaW5nIGEgIkZyZWUgU3BlZWNoIiBjb21tdW5pdHk7IHRoaXMgcnVsZSB3aWxsIGJlIGVuZm9yY2VkIGF0IHRoZSBtb2RlcmF0b3IgZGlzY3JldGlvbi4KSW4gdGhlIGVhcmx5ICc4MHMsIFBva2VyIEFsaWNlIHNhc2hheWVkIGludG8gU2lsdmVyIENpdHksIE5ldyBNZXhpY28sIGFuZCBwcm9tcHRseSBicm9rZSB0aGUgYmFuayBhdCBhIGZhcm8gdGFibGUgaW4gbGVzcyB0aGFuIGZvdXIgaG91cnMuIFVzaW5nIGhlciAkNiwwMDAgd2lubmluZ3MsIHNoZSBoZWFkZWQgZm9yIE5ldyBZb3JrIGZvciBhIHdlZWtsb25nIHNwZW5kaW5nIHNwcmVlIGJ1eWluZyB0aGUgYmVzdCBpbiB0aGUgbGF0ZXN0IGZhc2hpb25zLCBkaW5pbmcgaW4gdGhlIGJlc3QgcmVzdHJhaW50cywgYXR0ZW5kaW5nIHRoZSB0aGVhdGVyLCBhbmQgZ2VuZXJhbGx5IGluZHVsZ2luZyBoZXJzZWxmLiBXaGVuIHRoZSBtb25leSBwbGF5ZWQgb3V0IGhlIHNoZSByZXR1cm5lZCB0byB0aGUgS2Fuc2FzIGNhdHRsZSB0b3ducyBhbmQgdGhlbiBvbiB0byB0aGUgT2tsYWhvbWEgVGVycml0b3J5IHdoZXJlIHNoZSByYW4gaGVyIGdhbWVzIGluIEd1dGhyaWUuIFNoZSB3b3JrZWQgaW4gdGhlIEJsdWUgQmVsbCBTYWxvb24sIEJpbGwgVGlsZ2htYW4ncyBUdXJmIEV4Y2hhbmdlLCBhbmQgdGhlIFJlYXZlcyBCcm90aGVycyBDYXNpbm8uCkRyLiBBbG9uc28sIHdobyBmb3VuZGVkIHRoZSBDZW50ZXIgZm9yIFBzeWNob2FuYWx5dGljIFN0dWRpZXMgYXQgTWFzc2FjaHVzZXR0cyBHZW5lcmFsIEhvc3BpdGFsLCB3aGVyZSBzaGUgaGFkIHdvcmtlZCBzaW5jZSAxOTc4LCBkaWVkIGF0IHRoZSBob3NwaXRhbCBvbiBBdWcuIDIyIG9mIGNvbXBsaWNhdGlvbnMgZnJvbSBzdXJnZXJ5LiBTaGUgd2FzIDczIGFuZCBoYWQgbGl2ZWQgaW4gQ2FtYnJpZGdlLgpEZWFsL2RyYXcgYnV0dG9uOiBPbiB0aGUgcmlnaHQgc2lkZSBvZiB0aGUga2V5Ym9hcmQgaXMgdGhlIGRlYWwgZHJhdyBidXR0b24uIEFmdGVyIGVhY2ggaGFuZCwgaGl0IHRoZSBidXR0b24gdG8gZ2V0IHRoZSBuZXh0IGhhbmQgZGVhbHQgdG8geW91LiAKIFtzY29yZSBoaWRkZW5dICBzdWJtaXR0ZWQgMTYgaG91cnMgYWdvSGFoYWhhaGEsIFllYWggSSBrbm93LCBJIG1lYW4sIEkgcmVhbGx5IGRpZCB0aGluayBpdCB3YXMgZ29pbmcgdG8gYmUgcmV2ZWFsZWQgb24gdGhlIHdlZWtlbmQsIGJ1dCBCcmlhbiBIZXJiZXJ0IGlzIHRha2luZyBoaXMgdGltZSB3aXRoIGl0LiBJIGRvbiBsaWtlIGtlZXBpbmcgc2VjcmV0cywgYnV0IGluIHRoZXNlIGNhc2VzLCBJIGhhdmUgdG8uIApUaGUgb3RoZXIgdGhpbmcgd2FzLCB0aGF0IFR5c29uIHdhc24ndCBpbiBjaGFyZ2Ugb2YgaGlzIG93biB3ZWFsdGguIAozKSB0aGV5IHRyaWVkIHRvIHNoYW1lIG1lIGFib3V0IG5vdCBiZWluZyBhYmxlIHRvIHJlY2FsbCB0aGUgZ3V5J3MgbGFzdCBuYW1lLiBJIHRvbGQgdGhlbSBJIGhhZCBzZWVuIGl0IG9uIGhpcyBsaWNlbnNlIG9uZSB0aW1lLgpCbHVld29sZmN1YiB1CkRpZG4gd2FudCB0aGUgZGlmZmVyZW50IHdvb2RzIHRvIGZpZ2h0IGVhY2ggb3RoZXIgc28gd2UgbmVlZGVkIHRoZSBwZXJmZWN0IHRvbmUgZm9yIHRoZSB3aGl0ZSBvYWssIHNheXMgSmVzdC4gCllvdSBzaG91bGRuIGhhdmUgYSBndW4gaWYgeW91IGFyZSBicmVha2luZyB0aGUgbGF3LCBlc3BlY2lhbGx5IGlmIGl0cyByZWxhdGVkIHRvIGRydWdzLCBiZWNhdXNlIG9mIGdhbmcgdmlvbGVuY2UgYW5kIGRydWcgcmVsYXRlZCB2aW9sZW5jZS4gCkV2ZW4gaWYgc2hlIGNvb3BlcmF0aW5nLiAKQmVpbmcgYSB5b3VuZyBraWQgYW5kIHBsYXlpbmcgZm9yIHRoZSBNb250cmVhbCBDYW5hZGllbnMsIHlvdSBjYW4gc29tZXRpbWVzIGJlIG92ZXJ3aGVsbWVkLiBGb3IgdGhlbSB0byB0YWtlIG1lIGluIGFuZCBmb3IgbWUgdG8gb25seSBoYXZlIHRvIHdvcnJ5IGFib3V0IG9uZSBsaXR0bGUgZGV0YWlsIChob2NrZXkpIE1hZ2dpZSAoR29yZ2VzIHdpZmUpIHRvb2sgY2FyZSBvZiBldmVyeXRoaW5nIGVsc2UuIApXaGF0IEFtYXpvbiBpcyBtaXNzaW5nIGlzIGJldHRlciB0ZWNobm9sb2d5IGFuZCBkYXRhIHRvIG1ha2Ugc2Vuc2Ugb2YgaXRzIHNwcmF3bGluZyBtYXJrZXRpbmcgcGxhdGZvcm0gYW5kIHVuaXRlIGl0cyBkaXNwYXJhdGUgZm9ybWF0cy4gQWR2ZXJ0aXNlcnMgc2F5IHRoZSBkZXNpZ24gb2YgaXRzIHNlbGYgc2VydmUgYWQgbWFuYWdlbWVudCBwbGF0Zm9ybSBpcyBvdXRkYXRlZCBhbmQgY2x1bmt5LiAKQW5kIFN3ZWRpc2ggZWxlY3RyaWNpdHkgcHJvZHVjdGlvbiByZWxpZXMgaGVhdmlseSBvbiBudWNsZWFyIGFuZCBoeWRybyBzbyBldmVuIHRoZSB0cmFpbnMgYXJlIHZlcnkgY2xlYW4uIE1lYW53aGlsZSBvdXIgZW52aXJvbm1lbnRhbCBwYXJ0eSB3YW50cyB0byBkbyB0aGUgc2FtZSByZWZvcm1zIGhlcmUgcHJhY3RpY2FsbHkgbWVhbndoaWxlIHRoZWlyIGxlYWRlciBmbGllcyBiZXR3ZWVuIEFybGFuZGEgYW5kIEJyb21tYSBhaXJwb3J0ICh0aGUgdHdvIGFpcnBvcnRzIG9mIFN0b2NraG9sbSkgYW5kIG5vdCBqdXN0IG9uY2UuIApZb3UgbWlnaHQgdGhpbmsgYSBIYXdhaWlhbiBvciBiZWFjaCB0aGVtZSB3ZWRkaW5nIGlzIGp1c3QgcGVyZmVjdCBmb3IgYSBzdW1tZXIgd2VkZGluZy4gV2VsbCwgeW91J3JlIHJpZ2h0LiAKR3JlYXQgRGVwcmVzc2lvbgpTaG9yZWhhbSBhaXJzaG93IGNyYXNoIHBpbG90IGNsZWFyZWQgb3ZlciBkZWF0aHMgb2YgMTEgcGVvcGxlQW5kcmV3IEhpbGwgc2FpZCBoZSBleHBlcmllbmNlZCAnY29nbml0aXZlIGltcGFpcm1lbnQnIHdoaWxlIGF0IHRoZSBjb250cm9scyBvZiB0aGUgdmludGFnZSBqZXQuIFBob3RvZ3JhcGg6IFN1c3NleCBwb2xpY2UvQ1BTL1BBVGhlIDExIHdobyBkaWVkIHdlcmUgTWF1cmljZSBBYnJhaGFtcywgNzY7IER5bGFuIEFyY2hlciwgNDI7IFRvbnkgQnJpZ2h0d2VsbCwgNTM7IE1hdHRoZXcgR3JpbXN0b25lLCAyMzsgTWF0dCBKb25lcywgMjQ7IEdyYWhhbSBNYWxsaW5zb24sIDcyOyBEYW5pZWxlIFBvbGl0bywgMjM7IE1hcmsgUmVldmVzLCA1MzsgSmFjb2IgU2NoaWx0LCAyMzsgUmljaGFyZCBTbWl0aCwgMjY7IGFuZCBNYXJrIFRydXNzbGVyLCA1NC4gQSBzYWZlIGhlaWdodCB3b3VsZCBoYXZlIGJlZW4gYWJvdXQgNCwzMDBmdCwgdGhlIGNvdXJ0IHdhcyB0b2xkLiBIZSBqb2luZWQgdGhlIFJBRiBhZnRlciBDYW1icmlkZ2UsIGFuZCBhcyBhIHRvcCBwZXJmb3JtaW5nIHBpbG90IGhlIHdhcyBzZWxlY3RlZCBhcyBhbiBpbnN0cnVjdG9yLiBTb21lIHN1c3RhaW5lZCB0ZXJyaWJsZSBidXJucy4gT2YgdGhvc2Ugd2hvIGRpZWQsIGZpdmUgd2VyZSBpbiB2ZWhpY2xlcy4gU2hlIGFkZGVkOiAiTWFueSBmYW1pbGllcyBkbyBub3QgbG9vayBmb3IgY29tcGVuc2F0aW9uLiBUaGV5IHdhbnQgYW5zd2VycyBzbyB0aGF0IGZ1dHVyZSBkZWF0aHMgY2FuIGJlIHByZXZlbnRlZC4iU2hlIHNhaWQgdGhlIGZhbWlsaWVzIGhhZCBoYWQgdG8gInBhaW5mdWxseSByZWxpdmUgdGhlIGNpcmN1bXN0YW5jZXMgb2YgdGhlaXIgbG92ZWQgb25lJ3MgZGVhdGggYWdhaW4gYW5kIGFnYWluIi4gIldlIHdpbGwgbm90IG1lZXQgaGVyIGFuZCBoYXZlIG9uZSByZXF1ZXN0IGZvciBNcnMgQnJhZGxleSwgYW5kIHRoYXQgaXMgZm9yIGhlciB0byByZXNpZ24gaW1tZWRpYXRlbHksIiBzYWlkIEpvaG4gVGVnZ2FydCwgd2hvc2UgZmF0aGVyLCBEYW5ueSwgd2FzIHNob3QgMTQgdGltZXMgYnkgc29sZGllcnMgaW4gQmFsbHltdXJwaHksIGluIHdlc3QgQmVsZmFzdCwgaW4gMTk3MS4gVGVuIHBlb3BsZSBkaWVkIGluIEJhbGx5bXVycGh5IGR1cmluZyBhbiBhcm15IG9wZXJhdGlvbi4gQW4gaW5xdWVzdCBpcyB1bmRlciB3YXkuIEhvd2V2ZXIsIERvd25pbmcgU3RyZWV0IGhhcyBleHByZXNzZWQgc3VwcG9ydCBmb3IgdGhlIG1pbmlzdGVyLiBCcmFkbGV5IGhhcyBzYWlkIHNoZSBtaXNzcG9rZSwgYW5kIHRoYXQgaGVyIGNvbW1lbnRzIHdlcmUgZmFjdHVhbGx5IGluY29ycmVjdCBhbmQgZGlkIG5vdCByZWZsZWN0IGhlciB2aWV3cy4gU2hlIHNhaWQgc2hlIHdhcyAiZGV2YXN0YXRlZCIgdG8gdGhpbmsgc2hlIGhhZCB3b3JzZW5lZCBiZXJlYXZlZCByZWxhdGl2ZXMnIHBhaW4uICJJIHdhbnQgdG8gZ2V0IG9uIGFuZCBnZXQgdGhpcyBqb2IgZG9uZSwiIHNoZSBzYWlkLiBEYW4gU2FiYmFnaCB3YXMgbW9zdCByZWNlbnRseSBhc3NvY2lhdGUgZWRpdG9yLCBiYXNlZCBpbiBXZXN0bWluc3RlciwgaGF2aW5nIHByZXZpb3VzbHkgYmVlbiB0aGUgR3VhcmRpYW4ncyBuYXRpb25hbCBuZXdzIGVkaXRvciBmcm9tIDIwMTMgdG8gMjAxNy4gVHJhZmZpYyBmcm9tIG91dHNpZGUgb2YgdGhlIFVLIG5vdyByZXByZXNlbnRzIGFyb3VuZCB0d28gdGhpcmRzIG9mIHRoZSBHdWFyZGlhbidzIHRvdGFsIGRpZ2l0YWwgYXVkaWVuY2UuCkEgcGxhY2Ugd2hlcmUgaGUgd2FzIGxvdmVkIHVuY29uZGl0aW9uYWxseSBhbmQgdGltZSB3YXMgbmV2ZXIgYSBxdWVzdGlvbi4gQSBwbGFjZSBoZSB3b3VsZCBnbyB3aXRoIGEgYm94IGZ1bGwgb2YgY2hhbmdlIGFuZCBhbiBhZnRlcm5vb24gb2YgcG9rZXIgYW5kIGEgZ29vZCBjdXAgb2YgT21hJ3MgY29mZmVlLiAKSnVzdCB0byBnaXZlIHlvdSBhIFBPU1NJQkxFIGluc2lnaHQgdG8gdGhlIGRvd252b3Rlczogd2hlbiBhbiBhbnRpIHNlZXMgdGhpbmdzIGxpa2UgaG9sc3RlcnMgb3IgZ3VucyBpbiBnZW5lcmFsLCB0aGV5IG9mdGVuIG1ha2Ugc2ltaWxhciBjb21tZW50cyBhYm91dCB3aGV0aGVyIG9yIG5vdCB5b3UgIm5lZWQiIHRvIGJlIGNhcnJ5aW5nIGEgd2VhcG9uIG9yIHdoZXRoZXIgaXRzIGFwcHJvcHJpYXRlIHRvIGhhdmUgYSAiZnVsbHkgYXV0bywgc2VtaSBhdXRvLCBoaWdoIGNsaXAsIGhpZ2ggdmVsb2NpdHksIHBvd2VyIGJhYnkga2lsbGVyIHdpdGggdGhlIHRoaW5nIHRoYXQgZmxpcHMgdXAgc29sZGllciBkZWF0aCByaWZsZSIuIERvIEkgaGF2ZSBhIHBsYXRlIGNhcnJpZXI/IE5vLCB0aGF0IG5vdCBmb3IgbWUuIEJ1dCBzb21lIHBlb3BsZSB3YW50IGVtLiAKV2VkZGluZ3MgYXNpZGUsIGRhbmNpbmcgaXNuJ3Qgc29tZXRoaW5nIHlvdXIgYXZlcmFnZSBKb2UgaXMgaW50by4gCkVkaXQ6IEFuZCBmb3IgeW91IHRvIHNheSB0aGF0IHBlb3BsZSBnb2luZyB2ZWdhbiB3b3VsZCBmaXggNzIuOSUgb2YgdGhlIHByb2JsZW0gbWVhbnMgeW91IGFic29sdXRlbHkgZmluZSB3aXRoIHRoZSBlbnZpcm9ubWVudGFsIGRlc3RydWN0aW9uIHRoZSBpbmR1c3RyaWFsIGZhcm1pbmcgb2Ygc295IGlzIGNhdXNpbmcgYXQgdGhpcyB2ZXJ5IG1vbWVudCwgYXMgbG9uZyBhcyB0aGUgcHJvZHVjdCBnb2VzIHRvIGh1bWFuIG1vdXRocyBpbnN0ZWFkIG9mIGxpdmVzdG9jay4gCllvdSBjYW4gZ2V0IHRocm91Z2ggdGhpcy4gCllvdSBhcmUgcHJvYmFibHkgYWxzbyBtb3JlIGluc2VjdXJlIHNvIHlvdSBhcmUgbW9yZSB3aWxsaW5nIHRvIHRyeSB0byBtZWV0IHRoYXQgYmFyLi4gClRoYXQncyBva2F5LiAKSXQgZ29pbmcgdG8gZGVwZW5kIG9uIHRoZSBwcm9ncmFtLiBBdCB0aGlzIHBvaW50IHRoZSB3b3JzdCB0aGV5IGNhbiBkbyBpcyBkZWNpZGUgbm90IHRvIHJhbmsgeW91LiBZb3UgY2FuIGtub3cgd2hpY2ggb25lcyB3b24gcmFuayB5b3UgYmFzZWQgb24gYSBmYWlsZWQgZWxlY3RpdmUsIHNvIGl0IHNob3VsZCBub3QgYWZmZWN0IHRoZSB3YXkgeW91IGJ1aWxkIHlvdXIgUmFuayBPcmRlciBMaXN0LiBSZW1lbWJlciB0aGF0IGV2ZXJ5IHByb2dyYW0gdGhhdCBpbnRlcnZpZXdlZCB5b3UgZGlkIHNvIHdpdGggdGhlIGtub3dsZWRnZSB0aGF0IHlvdSBmYWlsZWQgYSAxc3QgeWVhciBjbGFzcyBhbmQgc3VyZ2VyeSBjbGVya3NoaXA7IGlmIHRoZXkgaW50ZXJ2aWV3ZWQgeW91IGluIHNwaXRlIG9mIHRoaXMsIHRoZXkgaGFkIHRvIGhhdmUgYSBnb29kIHJlYXNvbi4gSG93ZXZlciwgaXQgYWxzbyBzaG93cyB0aGF0IHlvdSBoYXZlIGFuIG9uZ29pbmcgcGF0dGVybiBvZiBmYWlsaW5nIGNsYXNzZXMsIHdoaWNoIGlzIG5vdCBhIGdvb2QgdHJhamVjdG9yeS4KQ29uZmVyZW5jZSBkZWxlZ2F0ZXMgd2lsbCBiZWdpbiB0aGVpciBzZXJpb3VzIGJ1c2luZXNzIG9uIE1vbmRheSB3aXRoIHRoZSBBbGJ1cnkgRW50ZXJ0YWlubWVudCBDZW50cmUgaG9zdGluZyBzZXNzaW9ucyB3aGljaCB3aWxsIGluY2x1ZGUgbW90aW9ucyBhbmQgYW4gYWRkcmVzcyBieSBOU1cgTG9jYWwgR292ZXJubWVudCBNaW5pc3RlciBHYWJyaWVsbGUgVXB0b24uIApUaGUgS25veHZpbGxlLCBUZW5uLiwgbWVkaWEgY29tcGFueSBoYXMgcHJvZHVjZWQgbW9yZSB0aGFuIDMsMDAwIGVwaXNvZGVzIGZvciAyMSBUViBuZXR3b3Jrcy4gSXRzIGNyZWRpdHMgaW5jbHVkZSBjYWJsZSBoaXRzICJUcmFkaW5nIFNwYWNlcyIgYW5kICJXb3JsZCBTZXJpZXMgb2YgUG9rZXIuIgpJIG1ldCBhbmQga25vd24gYSBmZXcgMTIgc3RlcHBlcnMgYW5kIHNlZW4gaXRzIHBvc2l0aXZlIGVmZmVjdCBvbiB0aGVpciBsaXZlcy4gCkhlciBleWVzIGRvbid0IHNlZW0gcXVpdGUgcmlnaHQsIGhlciBtb29kcyBhcmUgd2VpcmQsIHNoZSBqdXN0IGRvZXNuJ3Qgc2VlbSBhbGwgdGhlcmUuIApQaG9zcGhvc2lkZXJpdGVsb3ZlciAgMTcgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KQnV0IGl0IGlzbiB0aGUgZ2FtZSB0aGF0IG1ha2VzIHRoZXNlIG1lbiBub2lzeSBhbmQgb2Jub3hpb3VzLiAKVGhlIGRlcG9zaXQgaXMgYXZhaWxhYmxlIGluc3RhbnRseSBzbyB0aGF0IGlzIG5pY2UuIEkgaGF2ZSBhbHNvIHRha2luZyBzb21lIG9mIG15IHdpbm5pbmdzIG91dCBieSBkb2luZyB0aGUgcmV2ZXJzZSBhbmQgd2hpbGUgaXQgaXMgcHJldHR5IHNpbXBsZSAgIGl0IHRha2VzIGEgbG90IGxvbmdlci4gCklmIHlvdSBhbHdheXMgbG9vayBmb3IgbG9naWNhbCBleHBsYW5hdGlvbnMsIG9kZHMgYXJlIHlvdSBnb25uYSBoYXZlIGEgYmFkIHRpbWUuIE1laW5lIEJlb2JhY2h0dW5nOiJuaWNodCBzemVuZWZyZW1kIiBzdGltbXQgc2Nob24sIGlzdCBhYmVyIHppZW1saWNoIHdlaXQgZ2VmYXNzdC4gRHUgc29sbHRlc3QgZWluZmFjaCBuaWNodCBzbyBhdXNzZWhlbiwgYWxzIG9iIGR1IGJlcmhhdXB0IG5pY2h0IHJlaW5wYXNzdCwgZGFzIGlzdCBhYmVyIGF1Y2ggc2Nob24gYWxsZXMuIApTdWdhcnMgYXJlIHN1Y2ggImhhbmRlZCIgbW9sZWN1bGVzLiAKUGVyc29uYWxseSBJIHZhbHVlIGZsZXhpYmlsaXR5ICAgYW5kIGJlaW5nIGFibGUgdG8gd29yayByZW1vdGVseSAoZXZlbiBqdXN0IGEgZmV3IGRheXMgYSB3ZWVrKSBiZXR0ZXIgcHJvdmlkZXMgbWUgd29yayBsaWZlIGJhbGFuY2UgYW5kIGF1dG9ub215LiAKIkFzIHRoZSBHcm91cCBncm93cyBhbmQgY29udGludWVzIHRvIGRldmVsb3Agb3VyIGJ1c2luZXNzIGdsb2JhbGx5IGFuZCBhY3Jvc3MgbXVsdGlwbGUgcGxhdGZvcm1zIGFuZCBicmFuZHMsIHdlIG5lZWQgdG8gc3RyZW5ndGhlbiB0aGUgbGVhZGVyc2hpcCBvZiBpdHMgaW5jcmVhc2luZ2x5IGNvbXBsZXggb3BlcmF0aW9ucywiIHNhaWQgU2NoZWluYmVyZy4gIlJhZmkgaXMgYSBmaW5lIGV4ZWN1dGl2ZSB3aXRoIG91dHN0YW5kaW5nIG1hbmFnZW1lbnQgYW5kIHBlb3BsZSBza2lsbHMgYW5kIGhhcyBiZWVuIHZlcnkgc3VjY2Vzc2Z1bCBkaXJlY3RpbmcgdGhlIG9wZXJhdGlvbmFsIGNvbXBsZXhpdGllcyBvZiBhIGdsb2JhbCBnYW1pbmcgY29tcGFueS4gSSBhbSB2ZXJ5IGhhcHB5IHRoYXQgaGUgd2lsbCBicmluZyB0aGF0IGV4cGVydGlzZSB0byBvdXIgc2VuaW9yIG1hbmFnZW1lbnQgdGVhbS4iLiAKVGhleSBhY2NlcHRlZCBhbiBvZmZlciBmcm9tIEppbSBUcmVsaXZpbmcsIERhdmlkIENoaWx0b24gYW5kIEFybGVuZSBEaWNraW5zb24gZm9yICQzMDAsMDAwIGluIGV4Y2hhbmdlIGZvciBhIDMwJSBzdGFrZS4gTXIuIFRyZWxpdmluZyBhbmQgTXIuIENoaWx0b24gd2Fsa2VkIGF3YXkgZnJvbSB0aGUgZGVhbCBkdXJpbmcgZHVlIGRpbGlnZW5jZS4gVGhlIGVudHJlcHJlbmV1cnMgYXJlIG5vdyB3YWl0aW5nIHRvIGhlYXIgaWYgTXMuIERpY2tpbnNvbiB3aWxsIG1vdmUgZm9yd2FyZCB3aXRoIGEgZGVhbC4gU2hlIHdhcyB1bmF2YWlsYWJsZSBmb3IgY29tbWVudCBmb3IgdGhpcyBhcnRpY2xlLiBNZWFud2hpbGUgdGhlIHBhaXIgYXJlIGFjdGl2ZWx5IGxvb2tpbmcgZm9yIGEgc3RyYXRlZ2ljIHBhcnRuZXIgYW5kIGhhdmUgaGFkIGRpc2N1c3Npb25zIHdpdGggaW52ZXN0bWVudCBncm91cHMuCkl0IGhlbHBzIGV4Y2F2YXRlIHdobyB5b3UgYXJlLi4gCk5vIFN0ZXBoZW5zLiBObyBPd2VuIEhpbGwuIApJZiB5b3UgbG9jayBpdCwgc2hlIHVzZXMgYSBrbmlmZSB0byBtZXNzIHdpdGggdGhlIGxvY2suIFRoZSBzcGVuZGluZyBsZXNzIHRpbWUgYXQgdGhlIGhvdXNlIHNvdW5kcyBsaWtlIGEgZ29vZCBpZGVhLiAKVG9kYXksIHRob3VnaCwgd2UgaGF2ZSBwcm9ibGVtcyB0aGF0IHdlIGtub3cgZm9yIGEgZmFjdCBhcmUgMTAwJSBnb2luZyB0byBoYXBwZW4uIApJZiBJIHdhcyBzdHJ1Z2dsaW5nIGZvciB3aW5yYXRlIEkgbWlnaHQgc3RhcnQgYWdhaW4gdGhvdWdoLi4gClRoZSBmaW5hbCBzdHJhdyBmb3IgdGhpcyBndXkgd2FzIHdoZW4gaGUgd2FzIHdvcmtpbmcgYSBtYWNoaW5lIHRoYXQgd2FzIG1ha2luZyBwYXJ0cyB0aGF0IGV2ZXJ5Ym9keSBoYXRlZCB3b3JraW5nIG9uLCBldmVuIG1lLiBUaGUgbWFjaGluZSBwdW1wcyBvdXQgNCBwYXJ0cyBvbmNlIGEgbWludXRlIGFuZCB5b3UgbmVlZCB0byBncmFiIHRoZSBob3QgcGFydHMgYW5kIHNuaXAgdGhlIGVuZHMgd2l0aCB3aXJlIGN1dHRlcnMgd2hpbGUgdGhleSBhcmUgc3RpbGwgaG90IG9yIGl0IHdpbGwgYmVjb21lIGRyYW1hdGljYWxseSBoYXJkZXIgdG8gY3V0LiBTbyB0aGlzIGp1c3QgcmVxdWlyZWQgeW91IHRvIGp1c3Qgc2l0IGJ5IHRoZSBtYWNoaW5lIHRoZSB3aG9sZSBzaGlmdCBhbmQgZG8gaXQsIHByZXR0eSBzaW1wbGUuIApMZXMgaW52ZXN0aWdhdGlvbnMgbWVuZXMgZGVwdWlzIG1haSBkZXJuaWVyIHBhciBsYSBCUlAgb250IHBlcm1pcyBkJ3RhYmxpciBxdSd1biBzdHVkaW8gc2l0dSBydWUgU2FpbnQgTWF0aGlldSwgZGFucyBsZSBzZWN0ZXVyIGRlIGxhIFpTUCBCYXJicyBDaHRlYXUgUm91Z2UgKDE4ZSksIHRhaXQgZGRpICBsJ2FjdGl2aXQgZGUgdHJvaXMgcHJvc3RpdHVlcyBuaWdyaWFuZXMgcXVpIHJhY29sYWllbnQgYm91bGV2YXJkIEJhcmJzIGV0IHkgY29uZHVpc2FpZW50IGxldXJzIGNsaWVudHMuIExlIGxvY2F0YWlyZSBlbiB0aXRyZSBkZXMgbGlldXgsIHVuIGhvbW1lIGQndW5lIHF1YXJhbnRhaW5lIGQnYW5uZXMsIGF2YWl0IG1pcyBjZSBsb2dlbWVudCAgbGV1ciBkaXNwb3NpdGlvbiBkZXB1aXMgc2VwdGVtYnJlIDIwMTIgZXQgY2UganVzcXUnZW4ganVpbGxldCBkZXJuaWVyLiAKVGhlIGJveXMnIHNlYXJjaCBmb3IgdGhlaXIgbWlzc2luZyBmYXRoZXIgd2FzIHByZXNlbnRlZCBieSB0aGUgU3VwZXJuYXR1cmFsIGFkdmVydGlzaW5nIGNhbXBhaWducyBhcyB0aGUgbWFpbiBwbG90IG9mIHRoZSBzaG93LCBhIHBhcmFsbGVsLCBwcmVzdW1hYmx5LCB0byBNdWxkZXIncyBzZWFyY2ggZm9yIGhpcyBzaXN0ZXIgaW4gdGhlIFggRmlsZXMuIApKb25hdGhhbiBMaXUsIGEgc3Bva2VzbWFuIGZvciB0aGUgQ0lBLCBzYWlkOiBkbyBub3QgY29tbWVudCBvbiB0aGUgYXV0aGVudGljaXR5IG9yIGNvbnRlbnQgb2YgcHVycG9ydGVkIGludGVsbGlnZW5jZSBkb2N1bWVudHMuIEludGVsbGlnZW5jZSBjb21tdW5pdHkgYXQgdGhlIGhhbmRzIG9mIFdpa2lMZWFrcyBhbmQgaXRzIGFsbGllcywgd2hpY2ggaGF2ZSByZXBlYXRlZGx5IGh1bWJsZWQgV2FzaGluZ3RvbiB3aXRoIHRoZSBtYXNzIHJlbGVhc2Ugb2YgY2xhc3NpZmllZCBtYXRlcmlhbCwgaW5jbHVkaW5nIGh1bmRyZWRzIG9mIHRob3VzYW5kcyBvZiBkb2N1bWVudHMgZnJvbSB0aGUgU3RhdGUgRGVwYXJ0bWVudCBhbmQgdGhlIFBlbnRhZ29uLi4gClRoaXMgYXJ0aWNsZSBpcyBpbnRlbmRlZCB0byBoZWxwIHlvdSB0byByZXBhaXIgeW91ciBYYm94IDM2MCBmcmVlemluZyBwcm9ibGVtLCBvbmNlIGFuZCBmb3IgYWxsLi4gCk5vdCBvbmx5IGRvIEkgZ2V0IGEgZGFpbHkgcmVtaW5kZXIgb2YgaG93IGJhZCB0aGluZ3Mgc3RpbGwgYXJlIG91dCB0aGVyZSBJIGdldCB0byBiZSBvZiBzZXJ2aWNlIHRvIG90aGVyIGFkZGljdHMuIApCeSBzZWVpbmcgZW5vdWdoIGludmVzdG1lbnQgb3Bwb3J0dW5pdGllcywgeW91IGRldmVsb3AgdGhlIGFiaWxpdHkgdG8gc3BvdCBvdmVycHJpY2VkIG9yIHVuZGVycHJpY2VkIGFzc2V0cy4gCkFzIHRoZSBqdWRnZSBvYnNlcnZlZCwgdGhlIHdvcmRpbmcgaW4gdGhlIGFjdCBpcyBidXQgaXQgaXMgYWxzbyB2ZXJ5IHdpZGUgaW4gaXRzIHNjb3BlIGFzIHRvIHdoYXQgY29uc3RpdHV0ZXMgaW5jb21lLiBJbiBvdGhlciB3b3JkcywgaXQgY2FzdHMgYSB2ZXJ5IHdpZGUgbmV0IGFuZCBzcGVjaWZpY2FsbHkgaW5jbHVkZXMgZ3JhdHVpdGllcyByZWNlaXZlZCBieSBhIHRheHBheWVyLiB0aGUgdGF4cGF5ZXIgYXJndW1lbnRzIHRoYXQgdGhlIHRpcHMgc2hvdWxkIGJlIHRheCBleGVtcHQgYmVjYXVzZSB0aGV5IHdlcmUgZ2FtYmxpbmcgcHJvY2VlZHMsIHRoZSBqdWRnZSBkaXN0aW5ndWlzaGVkIGJldHdlZW4gdGhlIG1vbmV5IHdvbiBpbiB0aGUgaGFuZHMgb2YgdGhlIGdhbWJsZXIgYW5kIHRoZSBtb25leSB0dXJuZWQgb3ZlciB0byB0aGUgYXR0ZW5kYW50LiBBIGphY2twb3Qgd2lubmVyIGRvZXNuIGhhdmUgdG8gcGF5IHRheCBvbiBhbnkgd2lubmluZ3MsIGJ1dCB3aGVuIHBhcnQgb2YgdGhlc2Ugd2lubmluZ3MgYXJlIHRoZW4gcGFpZCB0byBhIGNhc2lubyBlbXBsb3llZSBpbiByZWNvZ25pdGlvbiBvZiB0aGUgc2VydmljZXMgdGhhdCB0aGUgcGF0cm9uIHJlY2VpdmVkLCBuYXR1cmUgb2YgdGhhdCBhbW91bnQgY2hhbmdlcyBmcm9tIGJlaW5nIG5vbiB0YXhhYmxlIHRvIGEgdGF4YWJsZSBhbW91bnQgaW4gdGhlIGhhbmRzIG9mIHRoZSBlbXBsb3llZS4ganVkZ2UgYW5hbG9naXplZCB0aGUgc2l0dWF0aW9uIHRvIGEgY2FzaW5vIHBhdHJvbiB0aXBwaW5nIGEgc2VydmVyIGluIGEgcmVzdGF1cmFudCB1c2luZyBwcm9jZWVkcyBvZiBoaXMgamFja3BvdCB3aW4uIENsZWFybHksIHRoZSBzZXJ2ZXIgdGlwIHdvdWxkIGJlIHRheGFibGUgaW5jb21lIHRvIHRoZSByZXN0YXVyYW50IGVtcGxveWVlIGFuZCBub3QgZGVlbWVkIHRvIGJlIHRheCBmcmVlIGdhbWJsaW5nIHByb2NlZWRzLgpGb3IgaW5zdGFuY2UsIGN1cnJlbnQgbGVhZGVyIGhhcyA3MiwgaGVybyBoYXMgNjUsIGJvYXJkIGlzIDQ0MzMuIApUaGUgYmlnZ2VzdCBiYXJyaWVyIHRoZXJlIGlzIHdpbGwgcG93ZXIuIApUaGUgY29tcGFueSdzIG1haW4gY2hhcml0YWJsZSBwcmlvcml0eSBpcyB0aGUgc3VwcG9ydCBhbmQgZGV2ZWxvcG1lbnQgb2Ygc3Ryb25nIGNvbW11bml0aWVzLiBUaGUgY29tcGFueSBpcyBhIGRlc2lnbmF0ZWQgSW1hZ2luZSBDYW5hZGEgY29tcGFueSBhbmQgZG9uYXRlZCAkNjQgbWlsbGlvbiBpbiBjYXNoIGFuZCBpbiBraW5kIGRvbmF0aW9ucyB0byBjaGFyaXRpZXMgYW5kIG5vbiBwcm9maXQgY29tbXVuaXR5IGluaXRpYXRpdmVzLiAKSSBjYW4gZXhwYW5kIGEgYml0IG9uIHRoaXMgaWYgeW91IHdhbnQgbWUgdG8uLiAKTmVzc2UgbW9tZW50bywgZXNzZSBwb2xpY2lhbCBtYW5kYSBtZXVzIGRvaXMgYW1pZ29zIGZpY2FyZW0gZW0gcCBuYSBjYWxhZGEgZSBkaXNzZSBwcmEgbWltICJ2b2MgdmVtIGFxdWkiLiBFbGUgYW5kb3UgY29taWdvIGFsZ3VucyBwYXNzb3MsIHNlIGNvbG9jb3UgZGUgZnJlbnRlIHByYSBtaW0sIGEgdW5zIDEwIGNlbnRtZXRyb3MgZG8gbWV1IHJvc3RvLCBlIGNvbWVvdSBhIHRlbnRhciBtZSBpbnRpbWlkYXIuIERpc3NlIHF1ZSBhIHZvbnRhZGUgZGVsZSBlcmEgZGUgcHIgdW1hIGJhbGEgbmEgbWluaGEgY2FiZWEsIGUgcXVlIGVyYSBwb3IgY2F1c2EgZGUgdmFnYWJ1bmRvcyBjb21vIGV1IHF1ZSBjb2xlZ2FzIGRlbGUgbW9ycmlhbSB0b2RvcyBvcyBkaWFzLiBFdSBlbnRvIG9saGVpIHByYSBmYXJkYSBkZWxlIHBhcmEgZ3VhcmRhciBvIG5vbWUuIEVsZSBwZXJjZWJldSBlIGF1bWVudG91IG8gdG9tIGRhIGludGltaWRhbywgZGl6ZW5kbyBxdWUgbm8gaWEgYWRpYW50YXIgcG9ycmEgbmVuaHVtYSBzYWJlciBvIG5vbWUgZGVsZSBlIHF1ZSBlcmEgcHJhIGV1IGNvbnRpbnVhciBvbGhhbmRvIHByYSBlbGUuCklmIGhlIHNvIGNvbmNlcm5lZCBvdmVyIHRoZSBmb29kIHRlbXBlcmF0dXJlIG9yIG1ldGhvZCBvZiB0cmFuc3BvcnQgd2h5IGRvZXNuIGhlIFBST1ZJREUgVEhFTSBXSVRIIEEgRk9PRCBWQU4gYXMgaGlzIGNvbnRyaWJ1dGlvbj8gSSBzdXJlIHRoZSBjb3VuY2lsIGhhcyBhY2Nlc3MgdG8gc3VjaCB2ZWhpY2xlcy4gCkFsc28sIHlvdSBjYW4gd2F0Y2ggd2hhdCB0aGUgb3RoZXIgcGxheWVycyBhcmUgdGlwcGluZyB0byBnZXQgYW4gaWRlYS4gUmVtZW1iZXIgdGhvdWdoIHRoYXQgZXZlcnkgZG9sbGFyIHRoYXQgZ29lcyB0byB0aGUgZGVhbGVyIGlzIHJlZHVjaW5nIHlvdXIgd2lubmluZ3MuIApCYXRoZWQgaW4gbmF0dXJhbCBsaWdodCwgYWNjZW50ZWQgYnkgc21vb3RoIHN0b25lIGZsb29yaW5nLCBkYXJrIHdvb2RzIGFuZCBjYXNjYWRpbmcgd2F0ZXJmYWxscywgUXVhIGlzIHRoZSBpZGVhbCBhdG1vc3BoZXJlIGZvciBsZWFybmluZyB0aGUgYXJ0IG9mIHJlbGF4ZWQgIlNvY2lhbCBTcGEgaW5nIiAoYSBuZXcgY29uY2VwdCBpbiB0aGUgc3BhIHdvcmxkKSBhcyB3ZWxsIGFzIGluZGl2aWR1YWwgZXhwZXJpZW5jZXMuLiAKSGFwcGllc3QgZGF5IGluIEtvcmVhClRoaXMgYXJ0aWNsZSBpcyBhYm91dCBob3cgd2hpdGUgcGVvcGxlIGNhbiBiZSAiaG9ub3JhcnkgQXNpYW5zIiBiZWNhdXNlIHRoZSBwZW9wbGUgd2hvIHJlZmVyIHRvIHRoZW1zZWx2ZXMgYXMgc3VjaCB1c2UgQXNpYW4gY3VsdHVyZSBhcyBhIGNvc3R1bWUuIFlvdSBjYW4gZWF0IG91ciBmb29kLCB3YXRjaCBvdXIgc2hvd3MsIGFuZCB0cmF2ZWwgdG8gdGhlIG9sZCBjb3VudHJ5LCBidXQgeW91IGRvbiBuZWVkIHRvIHdvcnJ5IGFib3V0IHlvdXIgaGVhZCBiZWluZyBzbGFtbWVkIGFnYWluc3QgdGhlIGJhbWJvbyBjZWlsaW5nIG9yIGJlaW5nIHNlZW4gYXMgYSBwZXJwZXR1YWwgZm9yZWlnbmVyLgpLYXJtZWwgcHJvamVjdHMgdGhhdCBjb3VsZCBjYXVzZSB1cCB0byBhIDEwIHBlcmNlbnQgcmVkdWN0aW9uIGluIGFudGljaXBhdGVkIHJldmVudWVzLCB3aGljaCBpbml0aWFsbHkgd2VyZSBlc3RpbWF0ZWQgYXQgJDYwMCBtaWxsaW9uIGFubnVhbGx5LiAKSHVnZSBzZXQgcGllY2VzIHRoYXQgd2VyZSByZWFsbHkgaW1wcmVzc2l2ZSBvbiB0aGUgYmlnIHNjcmVlbi4gQnV0IGFzIGFuIGFjdHVhbCBtb3ZpZSBpdC4gCkJyb3duX0V5ZXM1MTIgIDE5IHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvCldlbGwgSSBtaWdodCBiZSBzdGVwcGluZyBvbiBzb21lIGdyZXkgYXJlYXMgYnV0IHRoZSBzYXlpbmcgZG9lcyBoYXZlIGEgc29tZXdoYXQgYWNjdXJhdGUgbWVhbmluZyB0byBpdC4gClB1cmUgY2FuZSBzdWdhciAgIEV4Y2VsbGVudCBhcyBhIGdlbnRsZSBleGZvbGlhdG9yLgowIHBvaW50cyAgc3VibWl0dGVkIDEgeWVhciBhZ29CdXQgYXQgdGhlIHNhbWUgdGltZSwgaWYgc29tZXRoaW5nIGlzbiBkb25lIGF0IHRoZSBsZWdpc2xhdGl2ZSBsZXZlbCwgdGhlbiBpdCBnb2luZyB0byBrZWVwIGhhcHBlbmluZywgYW5kIG5leHQgdGltZSB3aWxsIGJlIGJpZ2dlciwgYXMgdGhlIGhpc3Rvcnkgb2YgdGhlc2UgZXZlbnRzIGhhdmUgcHJvdmVuLldoZW4gaXQgY29tZXMgdG8gYSBkaXNjdXNzaW9uIG9mIHdoYXQgdG8gZG86IERvIHlvdSB0cnkgdG8gbWFrZSB0aGUgYmlnZ2VzdCBzd2VlcGluZyBjaGFuZ2UsIHRoYXQgd2lsbCBiZSBoYXJkIGZvdWdodCAgIG9yIGRvIHlvdSBnbyBmb3IgYSBxdWljayBpbXBsZW1lbnRhdGlvbiB0aGF0IHdpbGwgYmUgcmVhc29uYWJsZSBhbmQgbmVhcmx5IGltbWVkaWF0ZT8gSWYgd2UgdGFrZSBhdCBsZWFzdCB0aGUgcXVpY2sgaW1wbGVtZW50YXRpb24gcmlnaHQgbm93LCB3ZSBjYW4ga2VlcCB0aGUgY29weWNhdHMgYXQgYmF5LCBidXQgdGhlIG5leHQgbWFzcyBjYXN1YWx0eSBldmVudCB3aWxsIGFsd2F5cyBjb21lIGFzIGEgc2hvY2suIEl0IGNvdWxkIGJlIGEgdHJ1Y2ssIGJvbWJzLCBhY2lkLCBrbml2ZXMsIGdhcywgZ3Vucy4gClRoaXMgaXMgdGhlIHB1cmUgZW5lcmd5LiAKSkI6IE9uZSBDcm93biBhbmQgY29rZSBkb3duLiBPbmUgbW9yZSBvbiB0aGUgd2F5LiBIYWxmb3JkIGFza3MgdG8gc2VlIGEgbWVudS4gYSBzYWxhZCBhIHNhbGFkIGEgc2FsYWQuIENhbnVja3MgdG8gdGhlIHBvd2VyIHBsYXkuIFBhdWwgUmVpbmhhcnQgaXMgYmFjayBvbiB0aGUgcG9pbnQuCkNlcnRhaW5seSBwbGF5aW5nIG1vcmUgaXNuJ3QgYSBiYWQgdGhpbmcgaWYgaXQncyBzb21ldGhpbmcgeW91IGVuam95ICAgYSBmcmllbmQgb2YgbWluZSBtYWRlIGEgc2l6YWJsZSBkb3duIHBheW1lbnQgb24gaGlzIGhvdXNlIGFuZCBsaXZlZCBhIHZlcnkgbmljZSBsaWZlc3R5bGUgd2hlbiB3b3JraW5nIGhpcyBkYXkgam9iICsgcGxheWluZyBwb2tlciBvbmxpbmUgYW5kIEIrTSBvbiB0aGUgc2lkZS4gQnV0IGhlIGRpZCB0aGlzIHdoaWxlIGJlaW5nIHJlYWxpc3RpYyBhYm91dCB3aGF0IHRoZSBsaW1pdHMgb2YgaGlzIHNraWxsIGFuZCByZXF1aXJlbWVudHMgb2YgbWFpbnRhaW5pbmcgZmluYW5jaWFsIHNvbHZlbmN5IHdlcmUuCkFmdGVyIHRoZSBBRmliIGRldGVjdGluZyBLYXJkaWFCYW5kIGdhcm5lcmVkIHNvIG11Y2ggYXR0ZW50aW9uLCBBcHBsZSBjdXQgb3V0IHRoZSBtaWRkbGUgbWFuIGFuZCBhcm1lZCB0aGUgbmV3ZXN0IEFwcGxlIFdhdGNoIHdpdGggYW4gaW5zYW5lbHkgYWNjdXJhdGUgaXJyZWd1bGFyIGhlYXJ0YmVhdCBtb25pdG9yIHRoYXQgZXZlbiBpbXByZXNzZWQgdGhlIEFtZXJpY2FuIEhlYXJ0IEFzc29jaWF0aW9uIGluIHByZWNsaW5pY2FsIHN0dWRpZXMuIElmIHRoZSB3YXRjaCBkZXRlY3RzIHNvbWV0aGluZyB1bnNldHRsaW5nLCBpdCdzIG9idmlvdXNseSB1cCB0byB0aGUgdXNlciB0byBzZWUgYSBkb2N0b3IgIGJ1dCBldmVuIGdldHRpbmcgYSB3YXJuaW5nIGxpa2UgdGhpcyBmcm9tIHlvdXIgd2F0Y2ggY291bGQgcG90ZW50aWFsbHkgc2F2ZSBsaXZlcy4KSSBmaW5kIGkgY2FuIGJyYWNlIG15IGNvcmUgYSBsb3QgZWFzaWVyIHdpdGggdGhlIGJlbHQuIEkgYmFzaWNhbGx5IGp1c3QgZmxleCBhbmQgcHVzaCBteSBiZWxseSBpbnRvIHRoZSBiZWx0LiAKQmUgY2l2aWwuIEJlaW5nIG90aGVyd2lzZSB3aWxsIGdldCB5b3UgYmFubmVkLiBSZWRkaXF1ZXR0ZQpUaGVyZSBhcmUgYWxzbyBsb3RzIG9mIG9wcG9ydHVuaXRpZXMgb3V0IHRoZXJlIGZvciBzZXBhcmF0ZSByZXNlYXJjaCBwcm9qZWN0cyB3aGVyZSB5b3UgbGVhdmUgbWVkaWNhbCBzY2hvb2wgZm9yIGEgeWVhci4gCkFwcGFyZW1tZW50LCBmZXVpbGxlcyBldCBzZW1lbmNlcyB0YWllbnQgY29udmllcyBwb3VyIHNlIHNvaWduZXIuIApUaGVyZSBhcmUgZGVza3RvcCBjaXJjdWl0IGJvYXJkICJwcmludGVycyIuIFNvbWUgYXJlIENOQyByb3V0ZXJzIHRoYXQgbWlsbCBhd2F5IGNvcHBlciBmcm9tIGJsYW5rIGJvYXJkcywgYW5kIHRoZXJlIG9uZSAoVm9sdGVyYSBWIE9uZSkgdGhhdCBwcmludHMgb24gYm9hcmRzIHVzaW5nIGNvbmR1Y3RpdmUgaW5rLCBhbmQgY2FuIGFsc28gdXNlIGEgZHJpbGxpbmcgaGVhZCB0byBtYWtlIHRocm91Z2ggaG9sZXMuIEkgYWN0dWFsbHkgaGF2ZSBhIFYgT25lIEkgZm91bmQgaW4gYSBkdW1wc3RlciwgYW5kIGRpc2Fzc2VtYmxlZCBpdCB0byBmaW5kIGl0IGxpdGVyYWxseSBhIHR5cGljYWwgM0QgcHJpbnRlciBhdCBoZWFydC4gCldpdGggdGhlIGRpc2FzdGVyIEZhbGxvdXQgNzYgaGFzIGJlY29tZSwgSSBhbSBhbHNvIGJldHRpbmcgdGhleSB3aWxsIHdhbnQgdG8gc2hvdyB1cyBTdGFyZmllbGQgdG8gYmV0dGVyIGFzc3VyZSB1cyB0aGF0IEZhbGxvdXQgNzYgaXNuIHRoZSBlbmQgb2YgdGhlaXIgY29tcGFueS4gClRoZSBmaXJzdCB0aW1lIEkgZXZlciBoYWQgbG9ic3RlciB3YXMgb24gYSBzaGlwLiAKVGhpcyBvZmZlciBpcyBhdmFpbGFibGUgb25seSB0byB0aG9zZSBjb21pbmcgZnJvbSB0aGUgVW5pdGVkIEtpbmdkb20gYW5kIElyZWxhbmQgYW5kIGNhbm5vdCBiZSBjbGFpbWVkIGJ5IG90aGVycy4gVUsgYW5kIElyaXNoIGNpdGl6ZW5zIGNhbiBjbGFpbSBpdCBvbmx5IGJ5IGRlcG9zaXRpbmcgdmlhIGEgY3JlZGl0IG9yIGRlYml0IGNhcmQuIE90aGVyIHBheW1lbnQgbWV0aG9kcyBhcmUgbm90IHZhbGlkIGZvciB0aGlzIHdlbGNvbWUgcHJvbW8uIEl0J3MgdmVyeSBzaW1wbGU6IGlmIHlvdSBkZXBvc2l0IDEwIHlvdSB3aWxsIGdldCBhIGJvbnVzIG9mIDEwLCBvciBpZiB5b3UgZGVwb3NpdCAyNSB5b3Ugd2lsbCBnZXQgYSBib251cyBvZiAyNS4gCkN1cmVzZWFyY2ggYW5kIFRob24gdG9nZXRoZXIuIFRoYXQgc291bmRzIGxpa2UgYSBncmVhdCB3YXkgdG8gaGVscCBib3RoIHNpZGVzIG9mIHRoZSBwcm9ibGVtLgoyNiwgdGhhdCBpdCByYWlzZWQgJDE3LjMgbWlsbGlvbiBpbiBhIFNlcmllcyBBIGZ1bmRpbmcgcm91bmQsIGJyaW5naW5nIGl0cyB0b3RhbCBvdXRzaWRlIGJhY2tpbmcgdG8gJDI0LjYgbWlsbGlvbi4gVGhlIHJvdW5kIHdhcyBsZWQgYnkgdGhyZWUgZmlybXMsIG9uZSBvZiB3aGljaCBpcyBQYXJrd29vZCBDb3JwLiwgdGhlIHByaXZhdGUgdHJ1c3Qgc2VydmljZSBvZmZpY2Ugb2YgQ2xldmVsYW5kJ3MgTWFuZGVsIGZhbWlseS4gClVzZSB0aGUgbG9nbyB5b3VyIGRlc2lnbmVyIGNyZWF0ZXMgdG8gZ2V0IGEgZGVjYWwgY3JlYXRlZCBmb3IgdGhlIHZlaGljbGUgeW91IHBsYW4gdG8gdXNlIHdoZW4geW91IHRyYXZlbCB0byBlYWNoIGFwcG9pbnRtZW50Li4gCkFzIGZvciB0aGUgdHJhZGl0aW9uYWwgV2VzdGVybiBndW5maWdodCBhcyBkZXBpY3RlZCBpbiBtb3ZpZXMsIHRoZSBpbmFjY3VyYWN5IG9mIGhhbmRndW5zIGF0IHRoZSB0aW1lIHdvdWxkIGhhdmUgbWFkZSBxdWljayBkcmF3aW5nIHNraWxsIGlycmVsZXZhbnQ6IEl0IHdhcyBzaW1wbHkgc28gdW5saWtlbHkgeW91J2QgaGl0IGEgZ3V5IG9uIHRoZSBmaXJzdCwgc2Vjb25kIG9yIHRoaXJkIHNob3QgdGhhdCBpdCBkaWRuJ3QgcmVhbGx5IG1hdHRlciB3aGljaCBndXkgZ290IG91dCBoaXMgZ3VuIGZpcnN0LiBUaGUgY2xvc2VzdCBoaXN0b3J5IGdvdCB0byBoaWdoIG5vb24gc2hvdyBkb3ducyB3YXMgZHVlbGluZywgd2hlcmUgcGVvcGxlIGp1c3Qgc3Rvb2QgYWNyb3NzIGZyb20gb25lIGFub3RoZXIgd2l0aCB0aGVpciBndW5zIG91dCwgYWltZWQgYW5kIGZpcmVkIHVudGlsIHNvbWVvbmUgZ290IGx1Y2t5LCBhbmQgc29tZW9uZSBlbHNlIHdhcyBkZWFkLiAKZGUgbGEgY2FuYXN0YSBkZSBQYXNjdWEKV2l0aCBDYWwgQ2x1dHRlcmJ1Y2sgb2ZmIGZvciB0cmlwcGluZywgS2Vzc2VsIHRvb2sgYSBwYXNzIGZyb20gTHVwdWwsIGN1cmxlZCBpbnNpZGUgdGhlIElzbGFuZGVycyBibHVlIGxpbmUgYW5kIHNuYXBwZWQgYSBzaG90IGZyb20gaW5zaWRlIHRoZSByaWdodCBjaXJjbGUgcGFzdCBQb3VsaW4ncyBibG9ja2VyIGhhbmQuCkJ1dCB0aGVyZSBhcmUgYWxzbyBwcml2YXRlIHBva2VyIGZyZWVyb2xscy4gClJlbm9MYW0gIDAgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KQWdhaW4sIGhlIGFuZCBoaXMgdGhyZWUgc2libGluZ3MgYWxzbyBtYWRlIGl0IG91dC4gCktleSBmYWN0b3JzIGluY2x1ZGU6IGxlbmd0aCBvZiBhcHBvaW50bWVudHMsIHRpbWUgb2YgZGF5LCB0aW1lIG9mIHllYXIgKHRheCBzZWFzb24sIENocmlzdG1hcywgTmV3IFllYXJzLCBKdWx5IDQsIGNvbXBhbnkgY2VudGVubmlhbCwgZXRjLiksIG51bWJlciBvZiBob3VycywgbG9jYXRpb24sIGRheSBvZiB0aGUgd2VlaywgZXRjLiAKSSB3b3JrIGF0IG9uZS4gCldlIGhhdmUgbm90IHNlZW4gdGhhdCB3aXRoIEZyYW5kc2VuLiBJdCBwYXJ0aWN1bGFybHkgbm90ZXdvcnRoeSB0aGF0IGhlIGNhbiBoaXQgYSBsaWNrIG9mZiBvZiBwaXRjaGVycyB3aG8gYXJlIG1ha2luZyB0aGVpciBtYWpvciBsZWFndWUgZGVidXRzIG9yIHdobyBhcmUgdmVyeSwgdmVyeSBlYXJseSBpbiB0aGVpciBjYXJlZXJzIGFuZCBtaWdodCBiZSBleHBlY3RlZCB0byBtb3JlIG5lcnZvdXMgdGhhbiBGcmFuZHNlbiBvdWdodCB0byBiZSBieSB0aGlzIHBvaW50LiAKSW4gb3RoZXIgd29yZHMsIHRoZSBhbnN3ZXIgY2FtZSBmcm9tIHNvbWVvbmUgdGhhdCBkb2Vzbid0IGtub3cgYW55dGhpbmcgYWJvdXQgdGhlIHNpdGUgaW4gcXVlc3Rpb24gYW5kIGhhcyBubyBjbHVlIGFib3V0IHRoZSByZWFsaXR5IG9mIG9ubGluZSByZWFsICBtb25leSBwb2tlciBzaXRlcywgdGhlcmVmb3JlIEkgaGFkIG5vIHByb2JsZW0gd2l0aCBvdXRyaWdodCBkZWxldGluZyBpdC4gCk1pY2hhZWwgU2hhY2tsZWZvcmQsIHdobyBydW5zIGEgZ2FtYmxpbmcgc3RyYXRlZ3kgd2Vic2l0ZSBjYWxsZWQgVGhlIFdpemFyZCBvZiBPZGRzLCBzYWlkIGJhc2VkIG9uIHdoYXQgaXMga25vd24gb2YgUGFkZG9jayBsaWZlLCB0aGUgZ3VubWFuIHNlZW1zIHRvIGhhdmUgYmVlbiB3aGF0IHRoZSBjYXNpbm9zIHJlZmVyIHRvIGFzIGEgbWFzcyBwbGF5ZXIgb25lIHdobyBiZXRzIGluIGhpZ2hlciBhbW91bnRzLCB3aXRoIGEgYmV0dGVyIHVuZGVyc3RhbmRpbmcgb2YgdGhlIGdhbWUgdGhhbiB0aGUgdHlwaWNhbCBwbGF5ZXIuClNpbXBseSBwdXQsIHdoZW4gdGhlIGRlY2sgaXMgaW4geW91ciBmYXZvciBiZXQgdG8gdGhlIG1heGltdW0sIHdoZW4gaXQgd2l0aCB0aGUgZGVhbGVyIGJldCBtaW5pbXVtLi4gCkNORVQgcmF0aW5nOiAzLjUgc3RhcnMgb3V0IG9mIDUgKHZlcnkgZ29vZCkKU3R1IFVuZ2FyIGlzIGdlbmVyYWxseSBicm91Z2h0IHVwIGFzIHRoZSBoYXZpbmcgdGhlIG1vc3QgInB1cmUgdGFsZW50IiBldmVyLiAKVGhlIHNlY3JldCBvZiBMeWRpYSdzIGxpZmUgaXMgYSBzY2FuZGFsLiBXaXRob3V0IGdpdmluZyB0b28gbWFueSBvZiB0aGUgZGV0YWlscyBhd2F5LCBzdWZmaWNlIGl0IHRvIHNheSBCbGVzc2luZ3Mgd2FzIHRoZSBwZXJmZWN0IHJldHJlYXQgZm9yIGEgeW91bmcgZ2lybCBpbiB0cm91YmxlLiBIZXIgbW90aGVyIHNlbnQgaGVyIHRoZXJlIGFuZCB0aGVuIGRlZWRlZCB0aGUgaG91c2UgdG8gaGVyLCBzaGFja2xpbmcgTHlkaWEncyBmYXRlIHRvIHRoZSB3aGl0ZSBlbGVwaGFudCBvZiBhIGhvdXNlIGFuZCBlbmRpbmcgaGVyIGxpZmUgaW4gTmV3IFlvcmsgcGVybWFuZW50bHkuIEhlciB0aW1lIG5vdyBpcyBzcGVudCBkcmlmdGluZyBhcm91bmQgdGhlIGNydW1ibGluZyBlbXBpcmUsIExhZHkgSGF2ZXJzaGFtIHN0eWxlLCByZWNvdW50aW5nIHRoZSBkYXlzIG9mIG9sZC4gVGhlc2Ugc3RvcmllcyBvZiBsb3ZlIGxvc3QgYW5kIGhhbmQgZm9yY2VkIGdpdmUgdXMgY29tcGFzc2lvbiBmb3IgdGhlIG90aGVyd2lzZSBiaXR0ZXIgd29tYW4sIGFuZCBoZWxwIHVzIGRlYnVuayB0aGUgY29tcGxleCBmb3J0cmVzcyBhcm91bmQgaGVyIHBzeWNoZS4KVGhlIGNvbmdyZXNzbWFuIGZyb20gT2hpbyB3YXMgbm93IGEgbmF0aW9uYWwgZm9yY2UgdG8gYmUgcmVja29uZWQgd2l0aC4uIApJZiB5b3UgZ29pbmcgdG8gZ28gdG8gYWxsIHRoZSBlZmZvcnQgb2YgZ2V0dGluZyB5b3VyIGtpZCBhIGNhciwgeW91IHNob3VsZCBhdCBsZWFzdCBmaW5kIG91dCB3aGF0IGNvbG9yIHRoZXkgbGlrZS9kb24gbGlrZS4uIApJIGdldCB1cCBhbmQgZXZlcnlib2R5IGlzIHNheWluZyAiT2ggaGUgaGl0IGEgc2V0LiAKSWYgYSBjaGVhdGVyIGtuZXcgaG93IHRvIGNoZWF0LCB0aGV5IGNlcnRhaW5seSB3b3VsZG4ndCBhZHZlcnRpc2UuIEl0IGlzIGluZGVlZCBwb3NzaWJsZSB0byBjb21wcm9taXNlIHRoZSBzaXRlcyBob3dldmVyLCBhbmQgaXQncyBiZWVuIGRvbmUgaW4gdGhlIHBhc3QuIApBbm9yYWtKaW1pICA2IHBvaW50cyAgc3VibWl0dGVkIDUgZGF5cyBhZ28KVGhlIHNlcmllcywgd2hpY2ggaXMgb24gYSBtaWRzZWFzb24gYnJlYWssIHJldHVybnMgTWFyY2ggMTMgd2l0aCBuaW5lIGVwaXNvZGVzLiBTZXZlbiBlcGlzb2RlcyB3ZXJlIGFscmVhZHkgY29tcGxldGVkIGJlZm9yZSBTbW9sbGV0dCB3YXMgY2hhcmdlZCBsYXN0IHdlZWsgd2l0aCBmZWxvbnkgZGlzb3JkZXJseSBjb25kdWN0IGZvciBhbGxlZ2VkbHkgZmlsaW5nIGEgZmFsc2UgcG9saWNlIHJlcG9ydC4KQnV0IGFueXdheSwgSSBhbnN3ZXIgeW91ciBxdWVzdGlvbiBtb3JlIHNwZWNpZmljYWxseTogd2hhdCBkb2VzIHRoZSBSdlIgc29mdHdhcmUgbmVlZD8KUHJvYmxlbXMgd2l0aCB2YXJpY29zZSB2ZWlucy4gTWFueSBwZW9wbGUgYWNjZXB0IHZhcmljb3NlIHZlaW5zIGFzIGEgbmVjZXNzYXJ5IGV2aWwgZWl0aGVyIGFzIGEgc2lnbiBvZiBnZXR0aW5nIG9sZGVyIG9yIGEgcHJlZGlzcG9zaXRpb24gaW5oZXJpdGVkIGZyb20gTW9tIG9yIERhZC4gClNlY29uZCBvZiBhbGwsIHdoaWxlIHRoZXJlIGFyZSBhbHdheXMgbmV3IHVzZXJzIGpvaW5pbmcgdGhlIHNpdGUsIHRoZXJlIGFyZSBhbHNvIG1hbnkgbW9yZSBwZW9wbGUgd2hvIGhhdmUgYmVlbiBhcm91bmQgbG9uZyBlbm91Z2ggdG8gcmVjb2duaXplIHJlY3ljbGVkIGNvbnRlbnQgd2hlbiB0aGV5IHNlZSBpdC4gQXMgb25lIG9mIHRoZSBsYXJnZXN0IGNvbW11bml0aWVzIG9uIFJlZGRpdCwgd2UgZmVlbCBhIGNlcnRhaW4gcmVzcG9uc2liaWxpdHkgdG8ga2VlcCB0aGluZ3MgYXMgZnJlc2ggYW5kIGVudGVydGFpbmluZyBhcyBwb3NzaWJsZS4gVGhlIHZhc3QgbWFqb3JpdHkgb2Ygb3VyIHN1YnNjcmliZXJzIGhhdmUgYWxzbyBleHByZXNzZWQgdGhlaXIgcHJlZmVyZW5jZSBmb3IgdGhpcyB3aGVuZXZlciB0aGUgcXVlc3Rpb24gaGFzIGJlZW4gcmFpc2VkLgpBbmQgdGhlbiB5b3UgZ28gZXZlbiBmdXJ0aGVyIGFzIHRvIHNwZXcgbW9yZSBidWxsc2hpdCBzYXlpbmcgbnBjIGFyZSBnb2luZyB0byByZWNvZ25pemUgeW91IG5vIG1hdHRlciB3aGF0ICh3aGljaCBwcm92ZXMgbXkgcG9pbnQgcmlnaHQgdGhlcmUgZm9yIG9uZSkgYWxzbyB5b3UgY2xlYXJseSBkb250IGtub3cgdGhlIGdhbWUgb3IgdGhlIHdvcmxkIGl0IHNldCBpdCBjdXogbm90IGV2ZXJ5b25lIGtub3dzIHRoZXkgYXJlIG91dGxhd3MgYW5kIHlvdSBldmVuIGJlY29tZSBhIGRlcHV0eSBhdCBvbmUgcG9pbnQuIApUcmFpbmludGhlZGlzdGFuY2UgIDIgcG9pbnRzICBzdWJtaXR0ZWQgNCBtb250aHMgYWdvClNvLCB0aGV5IHRoaW5rIHRoYXQgeW91IGFyZSBsb2dpY2FsbHkgdHJ5aW5nIHRvIGdldCBhcyBtYW55IGNoaXBzIGludG8gdGhlIHBvdCwgb3V0IG9mIHRoZWlyIHN0YWNrcyBhcyB5b3UgY2FuLiBJdCB0YWtlcyBndXRzIHRvIGNhcnJ5IG91dCB0aGUgY29uc2lzdGVudCBwYXR0ZXJuIHRvIHNldCB1cCBhIGZldyBnb29kIGJsdWZmcywgYmVjYXVzZSB5b3UgY291bGQgYmUgdXAgYWdhaW5zdCBhIGJldHRlciBoYW5kLCBidXQgaWYgaXQncyBkb25lIHJpZ2h0IGl0IGNhbiB3b3JrIHByZXR0eSBvZnRlbiwgd2l0aCBsdWNrLCBhbmQgaWYgeW91IHN0YXkgYWxlcnQgZW5vdWdoIHRvIGtub3cgd2hlbiB0byBmb2xkIHRvIHNhdmUgeW91ciBzdGFjay4uIApUaGV5IGRlY2lkZWQgdG8gaG9sZCBhIG11dHVhbCBmdW5lcmFsIGZvciB0aGUgYmFiZXMgYW5kIGJ1cnkgdGhlbSB0b2dldGhlci4gVGhleSBoYWQgdG8gY2FsbCB0aGUgcGVvcGxlIHRoYXQgd2VyZSBtYWtpbmcgdGhlIGhlYWRzdG9uZSBhbmQgdGVsbCB0aGVtIHRvIHN0b3AgYmVjYXVzZSB0aGV5IG5lZWRlZCB0byBhZGQgYW5vdGhlciBuYW1lLiBTdG9yZXMgYXJvdW5kIHRvd24gcHV0IHVwIGNvaW4gY29sbGVjdGlvbiB0aW5zIHRvIGhlbHAgcmFpc2UgbW9uZXkgZm9yIHRoZSBleHRyYSB3b3JkcyBhbmQgbGV0dGVycyBvbiB0aGUgaGVhZHN0b25lLiBUaGVyZSB3ZXJlIHNvbWUgdmVyeSBnZW5lcm91cyBhbm9ueW1vdXMgZG9ub3JzIHRoYXQgaGVscGVkIHJhaXNlIGVub3VnaCB0byBoYXZlIGV2ZXJ5dGhpbmcgZG9uZSBpbiB0aW1lLgpNYWNobyBtZW4sIGV2ZW4gd2VsY29tZSB0aGVtIGludG8gdGhlIHByaWVzdGhvb2QsIGJ1dCBiYXIgbWVuIHdobyBsb3ZlIG90aGVyIG1lbiBmcm9tIHNlcnZpbmcgbWFsZSBkZWl0aWVzLiBJbiB3YXlzIHRoYXQgcGVydmVydCB0cnV0aCBhbmQgbG9naWMuIApXaW5kb3dzIHhwIHByb2Zlc3Npb25hbCA2NCBiaXQgZWRpdGlvbiBrZXlnZW4sIHhnZmksIGNhZCBzdXJ2ZXksIGJyZSwgc2xhcHQgZ2V0LiAKVGhlIG9ubHkgcGFydCBoZSByaWdodCBhYm91dCBpcyB0aGF0IGludGVyIGRpbWVuc2lvbmFsIGJlaW5ncyB0aGF0IGV4aGliaXQgaW50ZWxsaWdlbmNlIGFyZSByZWFsLiAKRGEgd2lyIGtlaW5lIEFsbCBpbmNsdXNpdmUgUGF1c2NoYWwgVG91cmlzIHNpbmQsIGRpZSBzaWNoIGFiIFVybGF1YnNhbnRyaXR0IGluIGRpZSBPYmh1dCBlaW5lciBkZXV0c2Noc3ByZWNoZW5kZW4gUmVpc2VsZWl0ZXJpbiBmbCBoYWJlbiB3aXIgZGllIEhlcmF1c2ZvcmRlcnVuZyBhY2ggbmVlLCBkYXMgc2FndCBtYW4gamEgamV0enQgbmljaHQgbWVociwgenUgYWJnZWRyb3NjaGVuLiBKZXR6dCBzcHJpY2h0IG1hbiB2b24gT3Bwb3J0dW5pdHkgISEgZGVyIEFucmVpc2UgbmF0IG1pdCBCcmF2b3VyIGJlc3RhbmRlbi4gRGFmIG11c3N0ZW4gd2lyIG51ciBlaW5lbiBrbGl0emVrbGVpbmVuIG1laHJzdCBVbXdlZyBpbSBSZWlzZWJ1cyBuYWNoIEFnaW9zIEtvbnN0YW50aW5vcyBoaW50ZXIgdW5zIGJyaW5nZW4sIHVtIGRhbm4gZW5kbGljaCBlaW5lIEYgbmFjaCBTa2lhdGhvcyBiZXRyZXRlbiB6dSBrIERpZSBSZWlzZSBoIHNpY2ggdW0gbWluZGVzdGVzIHp3ZWkgU3R1bmRlbiB2ZXJrIHdlbm4gZGVyIEJ1cyBuaWNodCBhbiBqZWRlciBaaWVnZW5taWxjaGthbm5lIGdlaGFsdGVuIGggdW0gZWluIEIgaW5zIHdlaXRlIE5pY2h0cyB6dSBlbnRsYXNzZW4uIEFiZXIgc28gbGVybnQgZGVyIG5vY2ggZXR3YXMgbGVpY2h0IEZlcm5yZWlzZW5kZSB3ZW5pZ3N0ZW5zIHNjaG9uIG1hbCBkaWUgZXJzdGUgTGVrdGlvbiBpbSBFbnRzY2hsZXVuaWdlbi4gV2VubiBhdWNoIHdpZGVyd2lsbGlnIHVuZCBuaWNodCBvaG5lIHNlaW5lbiBSZWlzZXBhcnRuZXIgYmVpIGplZGVtIEhhbHQgZWluZSBuZXVlIE1ldGhvZGUgenVyIEVmZml6aWVuenN0ZWlnZXJ1bmcgZGVyIFRyYW5zcG9ydGxvZ2lzdGlrIGFtIEJlaXNwaWVsIGRlcyBncmllY2hpc2NoZW4gbmFoZSB6dSBicmluZ2VuLgpFdmVyeXRoaW5nIHlvdSBuZWVkIHRvIGtub3cgYWJvdXQgdGhlIGVuaGFuY2VkIENQUCAgIGZyb20gaG93IG11Y2ggeW91J2xsIHBheSB0byBob3cgbXVjaCB5b3UnbGwgZ2V0V2hhdCByZXRpcmVlcyBuZWVkIHRvIGtub3cgaWYgdGhleSBwbGFuIHRvIGRlZmVyIE9sZCBBZ2UgU2VjdXJpdHkgYmVuZWZpdHMgdW50aWwgNzBIb3cgeW91IGRyYXcgZG93biB5b3VyIHJldGlyZW1lbnQgc2F2aW5ncyBjb3VsZCBzYXZlIHlvdSB0aG91c2FuZHMgICB0aGlzIHByb2dyYW0gcHJvdmVzIGl0RXZlbiBzbywgdGhlcmUgYXJlIGF0IGxlYXN0IHRocmVlIGdvb2QgcmVhc29ucyBmb3IgY29udGludWluZyB0byB1c2UgUlJTUHMsIGVzcGVjaWFsbHkgaWYgeW91IGEgaGlnaGVyIGluY29tZSBlYXJuZXIgaW4gb3IgbmVhciB0aGUgdG9wIHRheCBicmFja2V0cy4gSWYgc28sIHlvdSBzaG91bGQgbWF4aW1pemUgeW91ciBhbm51YWwgUlJTUHMgY29udHJpYnV0aW9ucyBldmVyeSB5ZWFyIHlvdSBlYXJuaW5nIHRoZSBiaWcgYnVja3MuIEFuZCBpZiB5b3UgbWFraW5nIHRoYXQga2luZCBvZiBtb25leSwgeW91IGNhbiBhZmZvcmQgdG8gY29udHJpYnV0ZSB0byBURlNBcyBhcyB3ZWxsLgpUaGFuayB5b3UgZm9yIHN1YnNjcmliaW5nV2UgaGF2ZSBtb3JlIG5ld3NsZXR0ZXJzU2hvdyBtZVNlZSBvdXIgcHJpdmFjeSBub3RpY2UKVGhlIHBhcnRuZXJzaGlwIHdhcyBhIG5hdHVyYWwgZml0LCBzYWlkIERhbmllbCBQcmVzZWRvLCBzb2Z0d2FyZSBzcGVjaWFsaXN0IGF0IEFkb2JlLCBiZWNhdXNlICJhIGxvdCBvZiBmb2xrcyBvbiB0aGUgUGhvdG9zaG9wIHRlYW0gcGxheWVkIEQgd2hlbiB0aGV5IHdlcmUgeW91bmdlci4iCk5vdCB0byBtZW50aW9uLCBJIGFjdHVhbGx5IGRvdWJ0IHRoZXkgY291bGQuIApGb3JlaWduZXJzIGFyZSB1c3VhbGx5IGFsbG93ZWQgaWYgeW91IHBheSBtb3JlICgxMDArKS4uIApMaWtlIGFub3RoZXIgcG9zdGVyLCBJIGhhdmUgYSAyMFcgUmF5Y3VzIGZpYmVyIGxhc2VyLiBJIGRvIG5vdCBrbm93IHdoYXQgeW91IG5lZWQgdG8gc3RhcnQgY3V0dGluZyBwcmVjaW91cyBtZXRhbHMgb2YgdGhhdCBnYXVnZSwgYnV0IEkgYW0gaW50ZXJlc3RlZCB0byBoZWFyIHlvdXIgZXhwZXJpZW5jZS4gSSB3aWxsIGJlIGxvb2tpbmcgdG8gZ2V0IGEgZmliZXIgbGFzZXIgZm9yIGN1dHRpbmcgaW4gdGhlIG5leHQgeWVhciBvciBzbywgaWYgbXkgYml6IGJ1ZGdldCBjYW4gaGFuZGxlIGl0LgpBbmQgdGhlbiBwcm9jZWVkcyB0byByZXByZXNlbnQgdGhlIGludGVyZXN0cyBvZiBiaWcgYmFua3MsIGJpZyBidXNpbmVzcywgYW5kIGJpZyBtaWxpdGFyeSBvdmVyIGFuZCBhYm92ZSBldmVyeXRoaW5nIGVsc2UuIEF0IGxlYXN0IGluIHRoZSBmdXR1cmUsIHdlIGJlIGFibGUgdG8gY2hvb3NlIGNhbmRpZGF0ZXMgbm90IGJ5IG1lYW5pbmdsZXNzIHBhcnR5IGxvZ29zIHdoZXJlIGJvdGggcGFydGllcyByZXByZXNlbnQgdGhlIHNhbWUgY29ycG9yYXRlIGludGVyZXN0cywgYnV0IGJ5IHRoZSBDb2tlIG9yIEdlbmVyYWwgRHluYW1pY3Mgb3IgRW5yb24gbG9nb3MgdGhhdCBhcHBlYXIgbmV4dCB0byB0aGVpciBuYW1lcy4KUG9rZXIgU2l0ZXMKU3RlcCBpbnRvIGEgQk9EWUNPTUJBVCB3b3Jrb3V0IGFuZCB5b3UgcHVuY2ggYW5kIGtpY2sgeW91ciB3YXkgdG8gZml0bmVzcywgYnVybmluZyB1cCB0byA3NDAgY2Fsb3JpZXMgYWxvbmcgdGhlIHdheS4gVGhpcyBoaWdoIGVuZXJneSBtYXJ0aWFsIGFydHMgaW5zcGlyZWQgd29ya291dCBpcyB0b3RhbGx5IG5vbiBjb250YWN0IGFuZCB0aGVyZSBhcmUgbm8gY29tcGxleCBtb3ZlcyB0byBtYXN0ZXIuIEEgTEVTIE1JTExTIGluc3RydWN0b3Igd2lsbCBjaGFsbGVuZ2UgeW91IHRvIHVwIHRoZSBpbnRlbnNpdHkgYW5kIG1vdGl2YXRlIHlvdSB0byBtYWtlIHRoZSBtb3N0IG9mIGV2ZXJ5IHJvdW5kLiAKVGhlcmUgYSBzbWFsbCBhcHByb2FjaCByYW1wIHdpdGggc29tZSByb2NrIGNsaW1iaW5nIGRpZmZpY3VsdGllcyB1cCB0byBhYm91dCA1LjYsIHdoaWNoIGZlbHQgYSBsaXR0bGUgaGFyZGVyIHNpbmNlIHdlIHdlcmUgaW4gYm9vdHMuIFdlIGJlbGF5ZWQgYSAxNW0gcGl0Y2ggaGVyZSB0byBiZSBzYWZlLgpIZSBvcGVucyBVVEcgdG8gJDcgYW5kIEkgcmFpc2VkIHdpdGggMTBzIHRvICQyNCBhbmQgaGUgbWluIHJhaXNlZCB0byAkNTAgYW5kIEkgc2hpcCBpdCBpbiBleHBlY3Qgc2FtZSByZXN1bHQuIApIdW1haW5zLCBxdSdpbCBtbGFpdCBhdmVjIGR1IGZ1bWllciBhbmltYWwgYXBwb3J0IHBhciBqZSBuZSBzYWlzIHBsdXMgcXVlbCBib25ob21tZSBkdSBtbWUgZ2UgcXVlIGxlIHNpZW4gOiBsJ2dlIGRlIGxhIGd1ZXJyZSAxNCAxOC4uIApUaGUgYnVzIGRyaXZlciBjYWxsZWQgdGhlIHBvbGljZSBhbmQgdGhlIGR1ZGUgZ290IGFycmVzdGVkIGZvciBwdWJsaWMgaW50b3hpY2F0aW9uIGFuZCBJIHRoaW5rIHBvc3Nlc3Npb24uIFRoZW4gd2UgaGFkIHRvIHdhaXQgYXJvdW5kIGZvciBhIG5ldyBidXMuIApCcmVmLiAKVG91cm5hbWVudHMuIE1hbnkgYmVnaW5uaW5nIG9ubGluZSBwb2tlciBwbGF5ZXJzIGxvb2sgZm9yIHRoZXNlIHNpdGVzCkNhbXN5MzQgdQpUaGUgZWNvc3lzdGVtIGJhbGFuY2VzIGl0c2VsZiBtb3N0IG9mIHRoZSB0aW1lLCBzdXJ2aXZhbCBvZiB0aGUgZml0dGVzdCBhbmQgc3VjaC4gSW4gdGhlIHdvcnN0IGNhc2UgeW91IGdldCBhIGNvcmFsIHJlZWYgb2YgbW9sZCwgd2hpY2ggYWxzbyBsb29rcyBjb29sLi4gCkEgd2FzbiByZWFsbHkgYSBSUEcgdHlwZSBhIGdhbWVyIGVpdGhlci4gQSB3b3VsZCBtb3N0bHkgcGxheSBQdlAgdHlwZSBnYW1lcy4gClRob3NlIHdobyBkbyBkZWNpZGUgdG8gcHV0IG9uIHRoZWlyIG93biBtaW5pIGZpcmV3b3JrcyBzaG93IGZvciBmcmllbmRzIGFuZCBuZWlnaGJvcnMgc2hvdWxkIHRha2UgY2VydGFpbiBwcmVjYXV0aW9ucy4gUGFyZW50cyBzaG91bGQgY2xvc2VseSBzdXBlcnZpc2UgY2hpbGRyZW4gd2hlbiBsaWdodGluZyBwZXJzb25hbCBmaXJld29ya3MgYW5kIGJ5IHB1cmNoYXNpbmcgb25seSBsZWdhbCBmaXJld29ya3MuIEl0IGltcG9ydGFudCBmb3IgcGFyZW50cyB0byBiZSBwcmVzZW50IHdoZW4gZmlyZXdvcmtzIGFyZSBpZ25pdGVkLCBhbmQgdG8gZW5zdXJlIHRoYXQgdGhlIG1hdGVyaWFscyBhcmUgbGl0IGluIGFuIG9wZW4gYXJlYSBhd2F5IGZyb20gaG9tZXMsIHZlaGljbGVzIGFuZCBhbnkgY29tYnVzdGlibGVzLi4gCllvdSBhcmUgYmFzaWNhbGx5IHNheWluZyB0aGF0IHdoZW4gd2UgYXJlIGZpbGxlZCB3aXRoIHRoZSBob2x5IHNwaXJpdCB0aGF0IHdlIGFyZSBHb2Qgd2hpY2ggaXMgbm90IHRydWUuIEkgZG9uIHVuZGVyc3RhbmQgaG93IHlvdSBjYW4gbWFrZSBhc3N1bXB0aW9ucyBhYm91dCBteSBsaWZlIGV2ZW4gdGhvdWdoIHlvdSBrbm93IHNvIGxpdHRsZSBhYm91dCBtZS4gCkl0J3MgYWxsIGFib3V0IG15IG1hbiwiIHRoZSBHcmFtbXkgd2lubmVyIHJldmVhbGVkLiAiSSBoYXZlbid0IHJlYWxseSB0aG91Z2h0IGFib3V0IGFueXRoaW5nIHNwZWNpZmljIHlldCwgYnV0IHdoYXRldmVyIGl0IGlzLCBpdCB3aWxsIGJlIHRvdGFsbHkgZm9yIGhpbS4iLiAKVGhlIGJpZyBibGluZCBpcyB1c3VhbGx5IHRoZSBtaW5pbXVtIGJldCBhdCB0aGUgdGFibGUgeW91IGFyZSBwbGF5aW5nIGF0LCBhbmQgdGhlIHNtYWxsIGJsaW5kIGlzIHVzdWFsbHkgaGFsZiBvZiB0aGF0IGFtb3VudCAoZm9yIGluc3RhbmNlLCBpZiB0aGUgdGFibGUgbWluaW11bSBpcyAkMTAsIHRoZSBiaWcgYmxpbmQgd291bGQgYmUgJDEwIGFuZCB0aGUgc21hbGwgYmxpbmQgd291bGQgYmUgJDUpLiAKQmFzaWNhbGx5LCB5b3UgaGF2ZSB0byB0YWtlIGEgY2hhbmNlIGJlY2F1c2UgeW91ciBzdGFjayBzaXplIHJlbGF0aXZlIHRvIHRoZSBibGluZHMgcHV0cyB5b3UgaW4gYSBwb3NpdGlvbiB3aGVyZSB5b3UncmUgZ29pbmcgdG8gYmUga25vY2tlZCBvdXQgc29vbiBhbnl3YXkuIApPbmUgb2YgdGhlbSBvcGVuZWQgaGlzIGJsYWNrIGxpcHMsIGFuZCByZXZlYWxlZCB0d28gbG9uZyBmYW5ncy4gU2FsaXZhIGRyaXBwZWQgZnJvbSB0aGVtLCBzbyB0aGF0IHRoZXkgcmVzZW1ibGVkIG1lbHRpbmcgYmxlYnMgb2YgaWNlLlRoZSB2YW1waXJlcyB3ZXJlIHNob3J0LCBhbmQgSSB3b25kZXJlZCBmb3IgYSBtb21lbnQgd2hldGhlciBhIGRpZXQgb2YgYmxvb2QgYW5kIGEgbm9jdHVybmFsIGxpZmVzdHlsZSBoYWQgc3R1bnRlZCB0aGVpciBncm93dGguIFRoZW4gSSBub3RpY2VkIHRoZSBwbGFzdGljIHB1bXBraW4gZW1lcmdpbmcgbGlrZSBhIGRpc3RlbmRlZCBzdG9tYWNoIGZyb20gdGhlIHJvYmUgb2Ygb25lIG9mIHRoZSB2YW1waXJlcywgYW5kIGhlYXJkIGJvdGggb2YgbXkgdmlzaXRvcnMgc3F1ZWFsICdUcmljayBvciB0cmVhdCEnLCBhbmQgaGVhcmQgdGhlIHNhbWUgZ3JlZXRpbmcgZWNob2luZyB0aHJvdWdoIHRoZSB0d2lsaWdodCBmcm9tIGEgbmVpZ2hib3VyJ3MgcG9yY2guIApBbmQgSSBmaW5kIHR3byBwcmV0dHkgaGFyZCB0byBiZWxpZXZlLiAKKHRoYXQgdGltZSB3YXMgYWN0dWFsbHkgYSBoaWdobGlnaHQgb2YgdGhlIHRyaXAsIGp1c3QgaGFuZ2luZyBvdXQgd2l0aCB0aGlzIGZhbWlseSBzYWZlIGZyb20gdGhlIHJhaW4gKHRoZXkgYWxzbyBmZWQgdXMgYSBUT04pKS4gCk5vdCBxdWl0ZSBhIGRpbm5lciBkaW5pbmcgdGFibGUgZm9yIGFuIGVudGlyZSBmYW1pbHkuIApIZSBpcyBwcm91ZCB0aGF0IHRoZSBJbnRlcmxhY2UgaXMgOTAlIG9jY3VwaWVkLCAidW5saWtlIG1hbnkgdXBzY2FsZSB0b3dlcnMgdGhhdCBoYXZlIGJlY29tZSBnaG9zdCB0b3ducyBiZWNhdXNlIGFwYXJ0bWVudHMgYXJlIGJvdWdodCBmb3Igc3BlY3VsYXRpb24gYW5kIHNpdCBlbXB0eS4iLiAKU2VtaSBibHVmZmluZzogU2VtaSBibHVmZmluZyBpcyBhIHdheSB0byB3aW4gYSBoYW5kIGluIHR3byB3YXlzLiAKVGhlIGZhY3Qgb2YgdGhlIG1hdHRlciBpcyBpdCBkb2VzbiBtYXR0ZXIgd2hvIGRpZCB3aGF0LiBXaGF0IHRydWx5IGFuZCByZWFsbHkgbWF0dGVycyBpcyB3aGF0IHRoZSBQcmVzaWRlbnRzIGFuZCBDb25ncmVzcyBkbyBub3QgZG8gZm9yIEFMTCBvZiBVUyBhbmQgdGhleSBBTEwgc2hvdWxkIGJlIGFjY291bnRhYmxlLiBUaGV5IGFyZSBzbyBibGluZCB0byB0aGUgc2VwYXJhdGlvbiB0aGV5IHdhbnQgYmV0d2VlbiBldmVyeW9uZSB0aGF0IHRoZXkgbGV0IGdvIG9mIHZhbHVlcyB0byBwaWNrIGEgc2lkZSB0aGF0IHRoZXkgbmVlZCB0byBmZWVsIHJpZ2h0ZW91cyBvbi4gCiJEdWRlLCBJIGhlYXJkIHRoZSBsYXN0IGZlc3RpdmFsIHdhcyBkb3ducmlnaHQgbWFnaWNhbCAgd2UgaGF2ZSB0byBnbyEiRWRpdDI6IEd1eXMsIDIwMGsgaXMgbm90IHRoYXQgZGlmZmljdWx0IGlmIHlvdSBsaXZlIGluIHRoZSBtaWR3ZXN0IG9yIHRoZSBzb3V0aC4gVGhhdCBoYWxmIHRoZSBjb3VudHJ5LiBUaGlzIHNxdWFkIGlzIGp1c3QgYXMgcHV0IHRvZ2V0aGVyIGFzIHRoZSBXQ0Ygd2l0aCBXaWxsaWFtcyBCb296ZXIgIGp1c3QgbW9yZSBpbnRlbnNlIGEgY29uZmVyZW5jZS4gClVOREVSIDE2J3MgMjAxNSBORVRCQUxMIFRSSUFMUwpUaGUgc2l0ZSBoYXMgdHVybmVkIEdvb2dsZSBNYXBzIGludG8gYSB0ZXh0IGVkaXRvciwgYWxsb3dpbmcgcGVvcGxlIHRvIHNlZSBob3cgbG9uZyBhIGdpdmVuIHRleHQga2VlcHMgdGhlaXIgZXllcyBvZmYgdGhlIHJvYWQuIEl0IHRvbGQgbWUgdHlwaW5nIG91dCAiRGlkIHUgcmVhZCBteSBzdG9yeSIgYXQgNTAgbXBoIHdvdWxkIGJlIDIwOCBtZXRlcnMgb24gQmVldGhvdmVuc3RyYWF0IGluIFZpbHZvb3JkZSwgQmVsZ2l1bS4gCllvdSBjYW4gcHV0IG9uZSB0aGluZyBpbiBteSBicmllZmluZyBhbmQgdGhlbiBjb3JyZWN0IG1lISBKb2huc29uIHNheXMgYWZ0ZXIgYW4gYWlkZSBzdG9wcyBoaW0uCklmIHlvdSdyZSBpbnRlcmVzdGVkLCBnbyBiYWNrIGFuZCBnZXQgdGhyb3VnaCBUaGUgTWF0cml4IGlmIHlvdSBoYXZlbid0IGFscmVhZHkuIFNlY29uZCB3YXMgb2ssIHRoaXJkIHdhcyBzbyBiYWQgSSBsZWZ0IHRoZSB0aGVhdGVyIGJvcmRlcmxpbmUgZGVwcmVzc2VkLi4gClRoaXMgZG9lc24gYWNjb3VudCBmb3IgcGVvcGxlIHdobyBmZWVsaW5ncyBvZiBpZGVudGl0eSBhcmUgYWZmaXJtZWQgYnkgdGhlIGdlbmRlciBiaW5hcnkuSG93ZXZlciBJIGRpZG4gYXR0YWNrIHBlb3BsZSB3aG8gZml0IG91dHNpZGUgdGhlIGJpbmFyeSBzbyBJIG5vdCBzdXJlIHdoeSBwZW9wbGUgYXJlIHNvIHVwc2V0LiBJIGhhdmUgbm8gaXNzdWUgd2l0aCBub25iaW5hcnkgcGVvcGxlLiAKSGFycnkgR3JheSwgSm9obiBMZWUsIEZyYW5rIEJlbGwsIFdpbGxpYW0gU2xhd3Nvbi4gCkkgaGFkIGEgdGlueSBzcGlkZXIgd2FsayB1cCB0aGUgaW5zaWRlIG9mIG15IHdpbmRzaGllbGQgYW5kIEkgc3RhcnRlZCBmcmVha2luZyBvdXQuIApXaXRoaW4gYSBmZXcgbW9udGhzIEVkd2FyZCBJSSB3YXMgZGVhZCBhbmQgaGlzIGhlYXJ0IGRlbGl2ZXJlZCBpbiBhIHNpbHZlciBjYXNrZXQgdG8gSXNhYmVsbGEgYXQgV29yY2VzdGVyLgpJIHNheSB0aGlzIGJlY2F1c2UgeW91IGFyZSByaWRpbmcgYWJvdXQgYXJ0IGxvdyBzcGVlZHMgYW5kIGZhbWlsaWFyaXppbmcgeW91cnNlbGYgd2l0aCB0aGUgYmlnZ2VyIGJpa2VzIGVyZ29ub21pY3MuIEdldHRpbmcgYSBmZWVsIGZvciB0aGUgY2x1dGNoIHB1bGwsIGJyYWtlcywgaG93IHF1aWNrIHNoZSBnZXRzIG9uLCBob3cgbXVjaCB5b3UgaGF2ZSB0byBzbGlwIHRoZSBjbHV0Y2ggY29tcGFyZWQgdG8gdGhlIHNtYWxsZXIgYmlrZSAoaWYgYXQgYWxsKSBhbmQgYSB3aG9sZSBsb3Qgb2Ygb3RoZXIgbWludXRlIGl0ZW1zIHlvdSBtYXkgbm90IGV2ZW4gcmVhbGl6ZSB5b3UgZ2V0dGluZyBhY2NsaW1hdGVkIHdpdGguIApGb3IgZXhhbXBsZSBzdXBwb3J0IGZvciBNZWRpY2FyZSBmb3IgYWxsIGlzIGNvbnN0YW50bHkgZmFsbGluZyBhbmQgY3Jhc2hlcyB0byAzNSUgd2hlbiBwZW9wbGUgYXJlIHRvbGQgdGhleSB3b24ndCBoYXZlIHRoZWlyIHByaXZhdGUgaW5zdXJhbmNlIGFueW1vcmVZb3Uga2VlcCBiZWxpZXZpbmcgdGhpcyBjb3VudHJ5IGlzIGNlbnRyaXN0IGFuZCBsb3NlIGFub3RoZXIgZWxlY3Rpb24gdG8gVHJ1bXAuVGhlIGNvdW50cnkgSVMgbW9kZXJhdGUgdGhhdCBpcyB3aHkgaW4gMjAxOCBvbmUgb2YgdGhlIGxhcmdlc3QgZmxpcHMgaW4gaG91c2UgaGlzdG9yeSBoYXBwZW5lZCwgbGVkIGJ5IG1vZGVyYXRlcy4gCkl0IHdhcyBjbGVhcmx5IGh5cGVyYm9sZSwgYW5kIGRlZXAgZG93biBtb3N0IG9mIHVzIGtub3cgdGhhdCBpZiB5b3UgYSBjZWxlYnJpdHksIHllYWgsIGl0IHByb2JhYmx5IGVhc3kgdG8gdXNlIHRoYXQgdG8gZnVjayBhdHRyYWN0aXZlIHdvbWVuLi4gClRoZSBwZW9wbGUgd2VyZSBDb250aW51YWxseSBhdCB3b3JrIHVwb24gdGhlIEZvcnQsIGFuZCB0aGUgTmF0aXZlcyB3ZXJlIHNvIGZhciByZWNvbmNpbGVkIHRvIHVzIHRoYXQgdGhleSByYXRoZXIgYXNzaXN0ZWQgdXMgdGhhbiBub3QuIFRoaXMgZGF5IHdlIG1vdW50ZWQgNiBTd2l2ZWxzIGF0IHRoZSBGb3J0LCB3aGljaCB3YXMgbm93IG5lYXJseSBmaW5pc2hlZC4gCk91ciBldmVudCBvcmdhbml6ZXJzIGhhZCBhIHdlYnNpdGUgYW5kIHNvY2lhbCBtZWRpYSBjYW1wYWlnbiBnb2luZywgc28gdGhleSB3ZXJlIGRvaW5nIGFsbCBzb3J0cyBvZiB0aGluZ3MgdG8gbWFya2V0IHRoZSBldmVudCBvbmxpbmUgd2hpbGUgaXQgd2FzIGdvaW5nIG9uIGFuZCB1cmdlZCBwZW9wbGUgdG8gdmlzaXQgdGhlIHdlYnNpdGUgdG8gZG9uYXRlLiBXZSBoYWQgc2V2ZXJhbCBjYW1lcmFzIHNldCB1cCB0aGF0IHdlcmUgbGl2ZXN0cmVhbWluZyBpdCB0b28uIApUaGUgc2hvdyBhbHNvIGRvZXMgYSB3b25kZXJmdWwgam9iIG9mIHNob3dpbmcgaG93IHF1aWNrbHkgeW91IGNhbiBmYWxsIGJhY2sgaW50byBvbGQgcGF0dGVybnMgbm8gbWF0dGVyIGhvdyBmYXIgeW91IGNvbWUuIApTdXJlLCBJIHByZWZlciBhIGJldHRlciByZWNvcmRpbmcgYW5kIEkgcmVhbGx5IHdpc2ggYWxsIHRob3NlIHBlb3BsZSB3aXRoIHRoZWlyIHBob25lcyB3b3VsZG4gZG8gdGhhdCwgYnV0IGRhbW4gSSB1c2VkIHRvIGxpdmUgZm9yIGNob3JhbCBtb21lbnRzIGxpa2UgdGhhdC4gCk5vbiBjb25zZW50IHdpbGwgcmVzdWx0IGluIENvbVNjb3JlIG9ubHkgcHJvY2Vzc2luZyBvYmZ1c2NhdGVkIHBlcnNvbmFsIGRhdGEuIChQcml2YWN5IFBvbGljeSlBbWF6b24gVHJhY2tpbmcgUGl4ZWxTb21lIGFydGljbGVzIGRpc3BsYXkgYW1hem9uIHByb2R1Y3RzIGFzIHBhcnQgb2YgdGhlIEFtYXpvbiBBZmZpbGlhdGUgcHJvZ3JhbSwgdGhpcyBwaXhlbCBwcm92aWRlcyB0cmFmZmljIHN0YXRpc3RpY3MgZm9yIHRob3NlIHByb2R1Y3RzIChQcml2YWN5IFBvbGljeSkuIApJIHdhcyBzdXBlciBkZXByZXNzZWQsIGdhaW5lZCBhIHRvbiBvZiB3ZWlnaHQgd2hlbiBJIGhhZCBhbHdheXMgYmVlbiBhbiBhdGhsZXRlLCBhbmQgd2FzIGFsd2F5cyBpbiBjb25zdGFudCBhZ29uaXppbmcgcGFpbi4gCkl0IGFsc28gY29udHJpYnV0ZXMgdG8gUE1TLCB1dGVyaW5lIGZpYnJvaWQsIGFuZCBicmVhc3QgZmlicm9pZC5MZWFreSBHdXQgU3luZHJvbWUgaXMgb2Z0ZW4gdGhlIHJlYWwgYmFzaXMgZm9yIGNocm9uaWMgZmF0aWd1ZSBzeW5kcm9tZSBhbmQgcGVkaWF0cmljIGltbXVuZSBkZWZpY2llbmNpZXMuTGVha3kgR3V0IFN5bmRyb21lIGlzIHJlYWNoaW5nIGVwaWRlbWljIHByb3BvcnRpb25zIHdpdGhpbiB0aGUgcG9wdWxhdGlvbi4gCllvdSB3aWxsIG5ldmVyIGJlIGFibGUgdG8gZ28gZm9yIGFuIGV4dGVuZGVkIGFtb3VudCBvZiB0aW1lIGFuZCBub3QgaGF2ZSByYWluLiBCdXQgSSB0aGluayB0aGVyZSB3ZXJlIG9ubHkgYSBjb3VwbGUgZGF5cyB3aGVyZSBpdCB0aGVyZSB3YXMgYSBzaWduaWZpY2FudCBhbW91bnQgb2YgcmFpbi4gClNoZSBoYXMgYWxzbyBiZWVuIHB1Ymxpc2hlZCBpbiBCcmFuc29uIEluc2lkZXIgbmV3c3BhcGVyLiBHcmlmZmluIGlzIGEgQ1BSL2ZpcnN0IGFpZCBpbnN0cnVjdG9yIHRyYWluZXIgZm9yIHRoZSBBbWVyaWNhbiBSZWQgQ3Jvc3MsIG93bnMgYSBidXNpbmVzcyBhbmQgY29udGludWVzIHRvIHdyaXRlIGZvciBwdWJsaWNhdGlvbnMuIFNoZSByZWNlaXZlZCBhIEJhY2hlbG9yIG9mIEFydHMgaW4gRW5nbGlzaCBjb21wb3NpdGlvbiBmcm9tIFZhbmd1YXJkIFVuaXZlcnNpdHkuLiAKQnV0IG15IGxhdGVzdCBhY3JvbnltPyBJJ20gbm93IG9mZmljaWFsbHkgYW4gQUNPRCwgYW4gQWR1bHQgQ2hpbGQgb2YgRGl2b3JjZS4iVGhlcmUgYXJlIHVzZWZ1bCBnaWZ0IHN1Z2dlc3Rpb25zIGFuZCB0aGVuIHRoZXJlJ3MgYSBzdG9yeSBhYm91dCBvbmUgb2YgV2FsbG5lcidzIGZyaWVuZHMgd2lzaGluZyBzaGUgaGFkIHB1dCBhIHRyYW5zaXRpb24gcm9vbSBpbiBoZXIgaG9tZS4gV2hhdCdzIHRoYXQ/IEkgYXNrZWQgdGhlIHNhbWUgcXVlc3Rpb24uIEFwcGFyZW50bHkgdGhlIHBlcmZlY3QgaG91c2UgaGFzIG1vdmVkIGZyb20gdGhlIG11c3QgaGF2ZSBzcGEgbGlrZSBlbnN1aXRlIHRvIGFsc28gbmVlZGluZyBhIHRyYW5zaXRpb24gcm9vbS4gCkl0IGlzbid0IHRoZSBwcmVjaXNlIG1hc3NhZ2UgdGhhdCBpcyBpbmNyZWFzaW5nIGNpcmN1bGF0aW9uLCBuZXZlcnRoZWxlc3MgaXQgYWlkcyB0aGUgYm9keSB0byBwcm92b2tlIGl0cyBwZXJzb25hbCBwdXJlIHRoZXJhcGV1dGljLi4gCkRpY2sgV2lsc29uClRoaXMgaXMgdGhlIGZpcnN0IHN0dWR5IHRvIHN5c3RlbWF0aWNhbGx5IGNvbXBhcmUgY2hpcm9wcmFjdGljIHBhdGllbnRzIHdpdGggdGhvc2Ugd2hvIHNhdyBvdGhlciBwcm92aWRlcnMgZm9yIGJhY2sgcGFpbi4KU3RhY3kgTWl0Y2hlbGwKWW91IGNhbiBhbHdheXMgdGVsbCBob3cgZGV2ZWxvcGVkIGEgY291bnRyeSBpcyBieSBpdCdzIGltbWlncmF0aW9uLCBJIGZpbmQuIFdlbGwsIGxldCdzIGp1c3Qgc2F5IHRoYXQgdGhlIGltbWlncmF0aW9uIHdhcyBzdWNoIGEgY2x1c3RlciBhbmQgdGhlcmUgd2VyZSBzbyBtYW55IHBlb3BsZSB0aGF0IHRoZXJlIHdhcyBhIGJhY2t1cCBvbiB0aGUgZXNjYWxhdG9yIGFuZCBwZW9wbGUgd2hvIHJvZGUgaXQgZG93biBjb3VsZG4ndCBzdGVwIG9mZiBhbmQgdGhlcmVmb3JlIGhhZCB0byBydW4gYmFja3dhcmRzIHVwIHRoZSBlc2NhbGF0b3IuIApJdCBpbXBvcnRhbnQgZm9yIGtpZHMgdG8gbGVhcm4gdG8gYmUgcGFydCBvZiBhIGdyb3VwIGFuZCB0byBsZWFybiB0aGF0IG90aGVyIHBlb3BsZSBoYXZlIGRpZmZlcmVudCB0aG91Z2h0cywgaWRlYXMsIGFuZCBwZXJzcGVjdGl2ZXMuIApEb2luZyB0aGlzIHdpbGwgYWxsb3cgb25lIHRoZSBhYmlsaXR5IHRvIDEwMCUgY2VydGFpbiBwdXp6bGVzIHdpdGhvdXQgYW55IGhhc3NsZXMgYW5kIHJlbGlhbmNlIHVwb24gZmluZGluZyBhbmQgc3BhbW1pbmcgZWxlbWVudGFsIGNhbmlzdGVycy4uIApUaGV5IGJlbGlldmUgdGhlcmUncyBhbiBvdmVyc3VwcGx5IG9mIG1lYXQsIGhlIHNhaWQsIGFuZCBDYW5hZGlhbnMgYXJlIGVhdGluZyBsZXNzIGFuaW1hbCBwcm90ZWluLiBJbnN0ZWFkLCB0aGV5J3JlIHNob3dpbmcgbW9yZSBpbnRlcmVzdCBpbiBhbHRlcm5hdGl2ZSBwcm90ZWlucywgbGlrZSBxdWlub2EgYW5kIGxlbnRpbHMuClRoaXMgRFZEIGNvbWVzIHVwIHdpdGggaW4gZGVwdGggYW5hbHlzaXMgYW5kIGRldGFpbGVkIGV4cGxhbmF0aW9ucyBvZiBkaWZmZXJlbnQgYmV0dGluZyBtb3Zlcy4gCkkgd291bGRuIGJhcmUgZG93biBvbiB5b3Vyc2VsZiBmb3Igd2hhdCB5b3UgaGF2ZW4gZG9uZSBhdCBhZ2UgMjgsIGFzIEkgc3VyZSB5b3UgaGFkIG1hbnkgZXhwZXJpZW5jZXMgYW5kIGxpdmVkIHZlcnkgaW50ZXJlc3RpbmcgdGFsZXMgdGhhdCBwZW9wbGUgb2YgYW55IGFnZSB3b3VsZCBiZSBlbnZpb3VzIG9mISBZb3VyIGpvdXJuYWwgc2VlbXMgbGlrZSBhIGdyZWF0IGlkZWEuIApFdmVuIGlmIGhpcyBzb24gb2J0YWluZWQgdG8gb2J0YWluIGluZm9ybWF0aW9uLCBpZiBoZSBkaWRuIGdldCBpdCBvciBkaWRuIGdpdmUgYW55dGhpbmcgZm9yIGl0LCBpdCBub3QgY29sbHVzaW9uLiAKVGhhdCBub3Qgd2hhdCBpIHdhcyBzYXlpbmcgYW5kIHRoYXQgbm90IHdoYXQgaXQgKHN0YXRlbWVudCBvZiBDb2hlbiBzaW5jZXJpdHkgb24gYSBwb3N0ZXJib2FyZCBmcm9tIHRoZSBTb3V0aGVybiBEaXN0cmljdCBvZiBOWSkgc2F5cy4gSSB3YXMgdGVsbGluZyB0aGUgZ2VudGxlbWFuIGhpcyBmYWN0cyB3ZXJlIHdyb25nLiBJIG93biBNWSBtaXN0YWtlcyBhbmQgSSBhbSBnb2luZyB0byBwcmlzb24gZm9yIHllYXJzICAgYXdheSBmcm9tIG15IGZhbWlseS4gClNpbmNlIHlvdSBkb24ga25vdyB3aGF0IHlvdSBkb2luZyB3aXRoIHRheCBmaWxpbmcgYW5kIHlvdSBjYW4gYWZmb3JkIGEgcHJvZmVzc2lvbmFsLCBJIHN1Z2dlc3QgY2hlY2tpbmcgdGhlIENSQSB3ZWJzaXRlIGZvciBmcmVlIHRheCBjbGluaWNzLiBUaGVyZSBhcmUgYSBodWdlIG51bWJlciBvZiB0aGVzZSB3aGVyZSB2b2x1bnRlZXJzIGhlbHAgcGVvcGxlIHRvIGZpbGUgdGhlaXIgcmV0dXJucywgYW5kIEkgc3VyZSB0aGVyZSB3aWxsIGJlIG9uZSBuZWFyYnkgZm9yIHlvdS4gVGFrZSBldmVyeXRoaW5nIHlvdSBoYXZlIChiYW5rIHN0YXRlbWVudHMsIHBheSBzdHVicywgYW55dGhpbmcgeW91IGNhbiBnZXQgZnJvbSB0aGUgQ1JBIHdlYnNpdGUsIGFuZCBvZiBjb3Vyc2UgYW55IHRheCBmb3JtcyB5b3UgYmVlbiBnaXZlbikgYW5kIHNvbWVvbmUgd2lsbCBoZWxwIHlvdSB0byBnbyB0aHJvdWdoIHlvdXIgcGFzdCB5ZWFyIHJldHVybnMgYW5kIGdldCBldmVyeXRoaW5nIHVwIHRvIGRhdGUuCllvdSBhcmUgYSBiZWF1dGlmdWwsIHN0cm9uZyBwZXJzb24sIHdobyBoYXMgbWFkZSBhIGdyZWF0IGxpZmUgZm9yIHlvdXJzZWxmIGRlc3BpdGUgdGVycmlibGUgYWR2ZXJzaXR5LiAKIldlIG5vcm1hbGx5IGhhdmUgYSBob3RlbCBmb3IgZm91ciB3ZWVrcyBiZWZvcmUgb3BlbmluZywgdG8gdHJhaW4gdGhlIHN0YWZmIHVwLCBidXQgd2UgZGlkbid0IHdpdGggQnJvd24ncy4gCk5aUyBiZWVyIGZhY3RvcnkgKHBpdmUgemF2b2R1KSBhcyB3ZWxsIGFzIGEgd2FsayBhcm91bmQgdGhlIHN1cnJvdW5kaW5nIG5laWdoYm9yaG9vZCAodmVyeSBkaWZmZXJlbnQgZnJvbSB0aGUgY2VudGVyKQpXb3JraW5nIHdpdGhpbiB0aGUgcGFyYW1ldGVycyBvZiBhIG1lZGljYWwgc3RhZmYgZHluYW1pY3MgaXMgcGFyYW1vdW50IHRvIHRoZSBzdWNjZXNzIG9mIHRoZSBjaGlyb3ByYWN0b3IuVGhlIFBGQ1MgQW5udWFsIEVkdWNhdGlvbiBTeW1wb3NpdW0gaXMgaGVsZCBlYWNoIHllYXIgaW4gSW5kaWFuYXBvbGlzLCBjb2luY2lkaW5nIHdpdGggdGhlIE5GTCBTY291dGluZyBDb21iaW5lLkVhY2ggeWVhciwgbW9yZSB0aGFuIDMwMCBvZiB0aGUgYmVzdCBjb2xsZWdlIGZvb3RiYWxsIHBsYXllcnMgYXJlIGludml0ZWQgdG8gcGFydGljaXBhdGUgaW4gdGhlIGNvbWJpbmUuVG9wIGV4ZWN1dGl2ZXMsIGNvYWNoaW5nIHN0YWZmcywgcGxheWVyIHBlcnNvbm5lbCBkZXBhcnRtZW50cyBhbmQgbWVkaWNhbCBwZXJzb25uZWwgZnJvbSBhbGwgMzIgTkZMIHRlYW1zIGFyZSBvbiBoYW5kIHRvIGV2YWx1YXRlIHRoZSBuYXRpb24gdG9wIGNvbGxlZ2UgZm9vdGJhbGwgcGxheWVycyBlbGlnaWJsZSBmb3IgdGhlIHVwY29taW5nIGRyYWZ0LlRoaXMgaW50ZW5zZSwgZm91ciBkYXkgam9iIGludGVydmlldyBpcyBhbiBleGNpdGluZyB0aW1lIGZvciB0aGUgYXRobGV0ZXMgYW5kIGEgdml0YWwgc3RlcCBpbiBhY2hpZXZpbmcgdGhlaXIgZHJlYW1zIG9mIHBsYXlpbmcgaW4gdGhlIE5GTC5UaGUgUEZDUyBzeW1wb3NpdW0gaXMgYSByZXN1bHQgb2YgdGhlIGRlc2lyZSB0byBzaGFyZSBrbm93bGVkZ2UsIGVkdWNhdGUgY2hpcm9wcmFjdG9ycywgYW5kIGJlIGEgcmVzb3VyY2UgdG8gdGhlIHByb2Zlc3Npb24uV2hhdCBzdGFydGVkIG91dCBhcyBhIHNtYWxsIG1lZXRpbmcgb2YgYSBmZXcgdGVhbSBjaGlyb3ByYWN0b3JzIGhhcyBncm93biBpbnRvIGEgdHdvIGRheSBldmVudCB3aXRoIGV4cGVydCBwcmVzZW50ZXJzLCBoYW5kcyBvbiB0cmFpbmluZywgYW5kIGEgd2Vla2VuZCBvZiBuZXR3b3JraW5nIHdpdGggc29tZSBvZiB0aGUgcHJvZmVzc2lvbiBiZXN0IHNwb3J0cyBjaGlyb3ByYWN0b3JzLlRoaXMgeWVhciwgaW4gYWRkaXRpb24gdG8gRHIuIAozLiBHcmFjZSBQZXJpb2QgYW5kIFN1YnNjcmlwdGlvbiBBdXRvIFJlbmV3YWwKV2hhdCBPblRoaW5ncyB0byBkb0Zvb2QgYW5kIERyaW5rRmFtaWx5IGFuZCBLaWRzTXVzaWMgYW5kIEdpZ3NUViBHdWlkZU1JQ0hBRUwgRml0enBhdHJpY2sgaGFzIGJlZW4gbmFtZWQgdGhlIGxhdGVzdCB3aW5uZXIgb2YgdGhlIEtlbHNvIEhpZ2ggQ2FtcHVzIERlY2FkZSBBd2FyZC4gTXIgRml0enBhdHJpY2sgd2FzIGF0IHRoZSBzY2hvb2wgZnJvbSAxOTg2IHRvIDE5OTAgYW5kIGhhcyBnb25lIG9uIHRvIGhhdmUgYSBzdWNjZXNzZnVsIGNhcmVlciBpbiB0aGUgcmFkaW8gaW5kdXN0cnkuIFRoZSBLZWxzbyBIaWdoIENhbXB1c0RlY2FkZSBBd2FyZCByZWNvZ25pc2VzIGEgc3R1ZGVudCB3aG8gY29tcGxldGVkIHRoZWlyIHNlY29uZGFyeSBlZHVjYXRpb24gYXQgS2Vsc28gSGlnaCBDYW1wdXMgbW9yZSB0aGFuIDEwIHllYXJzIGFnb2FuZCBoYXMgYWNoaWV2ZWQgb3V0c3RhbmRpbmcgc3VjY2VzcyBpbiB0aGVpciBjaG9zZW4gZmllbGQuIApTcGVha2luZyB0byBSb2xsaW5nIFN0b25lIG1hZ2F6aW5lLCBzaGUgc2FpZDogIkkgY2FuIGJlIG15IHdlaXJkZXN0IHNlbGYgYXJvdW5kIGhpbS4gSXQncyBzbyByZWxheGluZyB0byBiZSBhcm91bmQgc29tZW9uZSB3aGVyZSB5b3UgY2FuIGJlIGEgMTAwIHBlciBjZW50IGhvdyB5b3UgZmVlbC4iCklmIHNvbWVvbmUgYmFkbW91dGhzIG1lLCBJIGNhbiBmZWVsIGZyZWUgdG8gbGl0ZXJhbGx5IGludCB0aGUgZ2FtZSBhbmQgc3BhbSBwaW5nIHRoZW0gd2l0aG91dCBhbnkgcHVuaXNobWVudC4gCkhlIGFsc28gaGFkIG5pbmUgZ3JhbmRjaGlsZHJlbiBhbmQgdHdvIGdyZWF0IGdyYW5kY2hpbGRyZW4uIApIZSBzcGVudCA0OSBkZWxpdmVyaWVzIG1vdmluZyBmcm9tIDc4IHRvIDEwMCwgYW5kIDIwIG9mIHRoZW0gd2VyZSBpbiB0aGUgbmluZXRpZXMuIFBldGVyc2VuIHNhaWQgdGhlIGRyZXNzaW5nIHJvb20gbGl2ZWQgZXZlcnkgb25lIG9mIHRoZW0uICJXaXRoIDIwIHJ1bnMgdG8gZ28sIGFsbCB0aGUgYm95cyB3ZXJlIHBsYXlpbmcgdGhlIGlubmluZ3Mgd2l0aCBoaW0sIiBoZSBzYWlkLgpNYW55IG9ubGluZSB2aWRlbyBwb2tlciBnYW1lcyBjb21lIGluIHNpbmdsZSBoYW5kIGFuZCBtdWx0aSBoYW5kIHZhcmlldGllcy4gQSBsb3Qgb2YgcGxheWVycyBwcmVmZXIgdGhlIHRyYWRpdGlvbmFsIG9uZSBoYW5kIGdhbWVzLCBidXQgZm9yIHRob3NlIHdobyBjcmF2ZSB0aGUgcG93ZXJmdWwgcHJvZml0IHBvdGVudGlhbCBvZiBwbGF5aW5nIHVwIHRvIDEwMCBoYW5kcyBhdCBhIHRpbWUsIHRoaXMgd2lsbCBhbHNvIGFmZmVjdCB5b3VyIGRlY2lzaW9uIHdoZW4gc2Vla2luZyBvdXQgdGhlIGJlc3QgdmlkZW8gcG9rZXIgY2FzaW5vLi4gCkkgYW0gZnJhbmtseSBzYWQgdG8gYmUgd3JvbmcgYWJvdXQgb25lIHBhcnRpY3VsYXIgcmFyZSBleGFtcGxlLCBidXQgbGV0J3MgYmUgZmFpciB0aGF0J3MgdXR0ZXJseSBmdWNrZWQgdXAuCk1vb24gc2VydmVzIG9uIHRoZSBTcGluYWwgUmVmbGV4IFRoZXJhcHkgSW50ZXJuYXRpb25hbCBDb21wYW55IE9yZ2FuaXphdGlvbiBhcyBhIGNvcmUgdGVhbSBkaXN0cmlidXRvciwgZnVsbCB0aW1lIHByYWN0aXRpb25lciBhbmQgdGVhY2hlci4gCk8yIHdhcyBhIGJyYW5kIGlkZW50aXR5IGNyZWF0ZWQgYnkgTGFtYmllIE5haXJuIHdoZW4gdGhlIGJ1c2luZXNzIHdhcyBkZSBtZXJnZWQgZnJvbSBCcml0aXNoIFRlbGVjb20uIFByZXZpb3VzbHkga25vd24gYXMgQlQgQ2VsbG5ldCwgaXQgd2FzIGEgdHJvdWJsZWQgYnVzaW5lc3MsIGxvc2luZyBncm91bmQgdG8gY29tcGV0aXRvcnMgYW5kIGFuIHVucmVtYXJrYWJsZSBicmFuZCBjaGFyYWN0ZXJpemVkIGJ5IHJhdGlvbmFsIHByb2R1Y3QgY2xhaW1zIHRoYXQgaGFkIGxvc3QgdGhlaXIgcG90ZW5jeS4gVGhlIGluaXRpYWwgcHVibGljIG9mZmVyaW5nIG9uIHRoZSBMb25kb24gc3RvY2sgbWFya2V0IHZhbHVlZCB0aGUgYnVzaW5lc3MgYXQgNiBiaWxsaW9uIGluIE5vdmVtYmVyIDIwMDEsIGFuZCB0aGUgcmVuYWlzc2FuY2UgYmVnYW4uIApXaGVuIEkgd2FzIGFib3V0IDE1LCB0aGlzIGdyb3VwIG9mIGJveXMgaW4gbXkgeWVhciB1c2VkIHRvIGdldCBhIGxvdCBvZiBmdW4gb3V0IG9mIGFza2luZyBtZSBydWRlIHF1ZXN0aW9ucywgbGlrZSBpZiBJIHdhdGNoZWQgcG9ybiBvciBzdHVmZiBsaWtlIHRoYXQuIFRoZWlyIHJpbmdsZWFkZXIgd2FzIHRoaXMgYWJzb2x1dGUgdHVyZCBvZiBhIFlvdW5nIFRvcnkgd2l0aCBoYWlyIGxpa2UgSmVkd2FyZCB3aG8gZGlkbiB0aGluayBHeXBzaWVzIEFsbG93ZWQgc2lnbnMgaW4gY2FmZXMgd2VyZSByYWNpc3QgYmVjYXVzZSBsaWtlLCBwb2xsdXRlIHRoZSBwbGFuZXQsIGFuZCBzdHVmZiBObywgSSBhbSBub3Qga2lkZGluZy4gWWVzLCBJIGRpZCBnbyB0byBwcml2YXRlIHNjaG9vbC4uIApBdmVuYXR0aSBzYWlkIHRoZSB2aWRlbyBpc24ndCB0aGUgc2FtZSBldmlkZW5jZSB1c2VkIGluIEtlbGx5J3MgMjAwOCB0cmlhbCwgd2hlbiBoZSB3YXMgYWNxdWl0dGVkIG9uIGNoaWxkIHBvcm5vZ3JhcGh5IGNoYXJnZXMuIApOb3cgdGFsa3Mgc2hpdCBhYm91dCBDaHJpcywgd2hvIGZyb20gdGhlIHNvdW5kcyBvZiBpdCwganVzdCB3YW50ZWQgdG8gaG9vayB1cCB3aXRoIGhlciBidXQgc2hlIHRyaWVkIHRvIHRyYXAgaGltIHdpdGggYSBiYWJ5LgpJIHRha2UgaXQgSSBoYXZlIG5vdCB3b24gdGhvdWdoIGJlY2F1c2UgSSBzdGlsbCBoYXZlIG15IHRyYWRlbWFyayBwb3J0bHkgZmlndXJlLCBlc3BlY2lhbGx5IGFmdGVyIHNpbmtpbmcgbW9yZSB0aGFuIGEgZmV3IHBpbnRzIG9mIHRoZSBhZm9yZW1lbnRpb25lZCBiaXR0ZXIuClRoYXQgd2FzIGEgZGlzYXN0ZXIuIElmIGhlIGRvZXNuIHdhbnQgdG8gaGVhciBmcm9tIHlvdSBvbiBob3cgdG8gdHJlYXQgeW91IHJpZ2h0LiBIZSBpcyBub3Qgd29ydGggeW91ciB0aW1lIS4gClNvIHRsO2RyLCB0aGUgcG9pbnQgaXMgdGhhdCBSb2NrZXQgTGVhZ3VlIG1pcnJvcnMgdGhlIHRob3VnaHQgcHJvY2Vzc2VzIGFuZCBwaHlzaWNhbCBpbnRlcmFjdGlvbnMgb2YgcmVhbCBsaWZlIHNwb3J0cyBzbyB3ZWxsIHRoYXQgaXQgYmFzaWNhbGx5IGlzIGEgc3BvcnQsIHJhdGhlciB0aGFuIHRyeWluZyB0byBiZSBhIGdhbWUgYWJvdXQgYSBzcG9ydC4KV2hlbiBldmVyIGkgaW52YWRlIGlmIGkgZG9udCBnZXQgbW9yZSB0aGVuIDIga2lsbHMgaXRzIGJlY2F1c2UgaSB3YXMgYW4gaWRpb3Qgb3IgdGhlIGVuZW15IHRlYW0gb3V0cGxheWVkIG1lLiAKV293LiBUaGlzIGlzIHByZWZlY3QuIFRoYW5rcyBmb3IgcHV0dGluZyBpdCBhbGwgdG9nZXRoZXIuIHRoZW4gYWdhaW4gdGhhdCBwZXJzb24gbWF5IGhhdmUuIHByb3RlY3Rpb24gYXQgdGhpcyBwb2ludCB3b3VsZCBiZSBjcnVjaWFsLiBBbmQgaW4gdGhpbmtpbmcgYmFjayB0aGlzIGlzIGEgZG91YmxlIGxheWVyIGNyaW1lLiBJIGFsc28gd2FzIHRvbGQgYXQgb25lIHBvaW50IHRoYXQgdGhlcmUgd2FzIGRydWcgYWN0aXZpdHkgYW1vbmdzdCBjZXJ0YWluIHBlb3BsZSB3aG8gbGl2ZSBhdCBBU1kuIE1ha2VzIHNlbnNlIHRvIG1lIG5vdy4KQmxhdGFudCBCUy4gSW5kdXN0cmlhbCBIZW1wIGhhcyBjbG9zZSB0byAxJSwgMiUgZG9lcyBub3QgZ2V0IHlvdSBoaWdoLCBubyBzdHVkeSBpcyBsaW5rZWQgaW4gdGhlIGFydGljbGUgdG8gcHJvb2YgdGhpcyBjbGFpbS4KVHVybiBjb21lcyBhIDcgd2hpY2ggaXMgcmVhbGx5IGEgYnJpY2sgSU1PIHdpdGggdGhlIHJhbmdlcyBJIGRvbnQgc2VlIHZpbGxpYW4gMyBiZXR0aW5nIDg5cyBhbmQgZ2V0dGluZyBlcXVpdHkgaGVyZSBhbmQgSSB0aGluayBoZSBpcyBqdXN0IHN0YWJiaW5nIHdpdGggYSB3ZWFrIGFjZSBhbmQgc3VpdGVkIGJyb2Fkd2F5cyB0aGF0IGhpdCB0aGlzIGJvYXJkLiBNeSBwcm9ibGVtIGhlcmUgaXMgdGhhdCB3aGlsZSB0aGUgWC9SIGxpbmUgdHVybiBoYXMgYSBsb3Qgb2YgcG93ZXIgd2hhdCBjb21ib3MgYXJlIGJldHRlciBmb3IgdXMgdG8gY2hvc2UgYW5kIHdoYXQgZG8gd2UgYmxvY2sgdGhhdCB3b3VsZCBiZSBjYWxsaW5nIHVzPyBXaGF0IGVxdWl0eSBkbyB3ZSBoYXZlIHdoZW4gY2FsbGVkPy4gCkFyZSB0aGVyZSBhbnkgc3VydmV5cyB5b3UgY2FuIGNvbXBsZXRlIHRoYXQgZ2l2ZSB5b3UgWnluZ2EgcG9rZXIgY2hpcHMKTWFueSBvZiB1cyBhcmUgbm93IHBsYW5uaW5nIG91ciBzdW1tZXIgdmFjYXRpb25zLiBXaGV0aGVyIHlvdSBhcmUgaGVhZGluZyB0byBMYXMgVmVnYXMsIHRha2luZyBhIGNydWlzZSwgb3Igc2ltcGx5IHN0YXlpbmcgaG9tZSwgdGhlcmUncyBhIGdvb2QgY2hhbmNlIHlvdSBtYXkgdmlzaXQgYSBjYXNpbm8gZHVyaW5nIHlvdXIgdGltZSBvZmYgZnJvbSB3b3JrLiBXZSB3ZW50IGJlaGluZCB0aGUgc2NlbmVzIHRvIGZpbmQgb3V0IHdoaWNoIGdhbWVzIGdpdmUgeW91IGFuIGVkZ2UuCllvdSBoYXZlIHRvIGJlIG9uIHRoZSBsb29rb3V0IGFzIHRvIHdoYXQgeW91IHNheSBhbmQgZG8uIEV4cGFuZCB5b3VyIGJ1c2luZXNzIHdpdGggaWJhY2twYWdlLiBQZXJoYXBzIHlvdSBhcmUgYSBjb3VwbGUgbG9va2luZyBmb3IgYW5vdGhlciBjb3VwbGUuIEFsbCBvZiB0aGUgTmVicmFza2EgZXNjb3J0IGxpc3RlZCBoZXJlIGNoYXJnZSBmb3IgdGhlaXIgdGltZSBvbmx5IGFuZCBhbnl0aGluZyB0aGF0IG9jY3VycyBvZiBhIHNleHVhbCBuYXR1cmUgaXMgYSBtYXR0ZXIgb2YgY29pbmNpZGVuY2UgYmV0d2VlbiB0d28gY29uc2VudGluZyBhZHVsdHMuIEVzY29ydHMgTm9ydGggUGxhdHRlIE5lIGVzY29ydHNpcyB0aGUgYmVzdCBjbGFzc2lmaWVkIGFkcyBwb3N0aW5nIHdlYnNpdGUgaW4gTm9ydGggUGxhdHRlLCBpZiB5b3UgYXJlIGxvb2tpbmcgZm9yIGJhY2twYWdlIE5vcnRoIFBsYXR0ZSBvciBjcmFja2VyIE5vcnRoIFBsYXR0ZSB0aGVuIHlvdSBhcmUgYXQgdGhlIHJpZ2h0LgpXZSBhcmUgYSBwZXJmZWN0IHBsYWNlIGZvciBhbiBhZnRlcm5vb24gZHJpdmUgdGhyb3VnaCB0aGUgYmVhdXRpZnVsIE5ldmFkYSBkZXNlcnQuIApUaGlzIGlzIHVzdWFsbHkgdGhlIHJlYXNvbiB3aHkgcGVvcGxlIGluIEluZGlhIHByZWZlciB0byBwbGF5IHBva2VyIGF0IGhvbWUgcmF0aGVyIHRoYW4gcGxheWluZyBzdHJhaWdodCBhd2F5IGluIGEgY2FzaW5vLiBQbGF5aW5nIHBva2VyIGF0IGhvbWUgbm90IG9ubHkgaW1wcm92ZXMgdGhlIHBva2VyIHBsYXlpbmcgYWJpbGl0eSBvZiBhbiBpbmRpdmlkdWFsIGJ1dCBhbHNvIGhlbHBzIGhpbSB0byBnZW5lcmF0ZSBuZXcgc2tpbGxzIHdoaWxlIHBsYXlpbmcgcG9rZXIuIApZb3Ugd2FudCB0byBzZXQgdXAgYW4gaW5oZXJpdGFuY2UgYmVmb3JlIHlvdSBkaWUsIHRoZXJlIGNhbiBiZSB0YXggYWR2YW50YWdlcyB0byBhIHRydXN0QSBiaWcgcGFydCBvZiBpdCBpcyB0aGUgZXhhY3Qgc2FtZSB0aGluZyBpc24gYWx3YXlzIGV4YWN0bHkgdGhlIHNhbWUuClRoZSBvbmUgbW9udGggdHJlayB3YXMgYSBnYW1ibGUuIApHYXRlcyBmcmllbmQsIHRyYWN0b3Igb3duZXIgYW5kIGNvdW50cnkgbXVzaWMgc2luZ2VyIFNhbGx5IEdvZXJuZXIsIHdobyBhbHNvIHByb3ZpZGVkIGVudGVydGFpbm1lbnQgZm9yIHRoZSBkYXksIGFsc28gbGVudCBhIGhhbmQgaW4gcmVzdG9yYXRpb25zLiBBIDE5NDkgSm9obiBEZWVyZSBEIDIgY3lsaW5kZXIgd2l0aCAzMC44IGRyYXdiYXIgaG9yc2Vwb3dlciwgMzguClByZSBpbmp1cnksIDIwMTYgQ2FyciBoYWQgdGhlIHBvdGVudGlhbCB0byBiZSB0aGF0IHR5cGUgb2YgcGxheWVyLiBDYXJyIGhhcyBhbiBhcm0sIGFuZCBub3QgbWFueSBwZW9wbGUgcmVhbGl6ZSB0aGlzLCBidXQgaGUgb25lIG9mIHRoZSBmYXN0ZXIgc3RhcnRpbmcgUUJzIGluIHRoZSBsZWFndWUgKDQuNjkgNDAgdGltZSkgYW5kIGNvdWxkIGJlIG1vYmlsZSBsaWtlIFJvZGdlcnMuIEFuZCBoZSB3YXMgdW5iZWxpZXZhYmx5IGNsdXRjaCBpbiB0aGUgNHRoIHF1YXJ0ZXIgdGhhdCB5ZWFyLCBqdXN0IGxpa2UgUm9kZ2VycyBpcy4gCkFudG9uaW8gQnJvd24gKGJvcm4gSnVseSAxMCwgMTk4OCkgaXMgYW4gQW1lcmljYW4gZm9vdGJhbGwgd2lkZSByZWNlaXZlciBhbmQgcmV0dXJuIHNwZWNpYWxpc3QgZm9yIHRoZSBQaXR0c2J1cmdoIFN0ZWVsZXJzIG9mIHRoZSBOYXRpb25hbCBGb290YmFsbCBMZWFndWUgKE5GTCkuIApEaWUgS2Fzc2VuIHdlcmRlbiBtaXQgZGVyIExpc3RlIGRlciBNZWRpRGF0YSBhYmdlZ2xpY2hlbiB1bmQgZXJyZWljaGVuIHNvIGltbWVyIGRpZSByaWNodGlnZSBaYWhsc3RlbGxlIG1pdCBkZW4ga29ycmVrdGVuIERhdGVuLiAKQWNjZXNzaWJpbGl0eSBvZiBxdWFsaXR5IGluZm9ybWF0aW9uICAgcG9rZXIgc3RyYXRlZ3kgdXNlZCB0byBiZSBsaW1pdGVkIHRvIGEgaGFuZGZ1bCBvZiBib29rcyBsaWtlIFN1cGVyIFN5c3RlbS4gVGhlbiBpdCBncmV3IHdpdGggb25saW5lIHBva2VyIHdpdGggcHJlbWl1bSB0cmFpbmluZyBzaXRlcyBsaWtlIENhcmRSdW5uZXJzLCBQb2tlclhGYWN0b3IsIERldWNlc0NyYWNrZWQsIGV0Yy4gVGhvc2Ugc2l0ZXMgd2VyZSB0aGUgdHJhaWxibGF6ZXJzIHdpdGggcmVnYXJkcyB0byBzb21lIHN0cmF0ZWdpZXMgdGhhdCwgd2hpbGUgbm93IHNlZW0gZmFpcmx5IGJhc2ljLCB3ZXJlIHJldm9sdXRpb25hcnkgKDMgYmV0dGluZyBsaWdodCwgaXNvbGF0aW5nIHJhaXNlcnMsIGV0YykgaW4gc29hcmluZyB3aW4gcmF0ZXMuLiAKU2VpdCAyMCBKYWhyZW4gZmFocmUgaWNoIG51biBuYWNoIExhIFBhbG1hIHVuZCBkYXMgQ2hpcGkgQ2hpcGkgaXN0IG5hY2ggd2llIHZvciB1bnNjaGxhZ2Jhci4gCkF0IHRoZSB2ZXJ5IGxlYXN0IGRvbiBhc3N1bWUgdGhhdCBhIGRlYWxlciB3aG8gd2lsbGluZyB0byBzdGVhbCBmcm9tIG9uZSBwYXJ0eSBpc24gd2lsbGluZyB0byBzdGVhbCBmcm9tIHlvdS4gVGhleSB3aWxsIHRoYXQgaG93IHRoaWV2ZXMgd29yay4gQW5kIHRoZSBmYWN0IHRoYXQgeW91IGtub3cgdGhhdCBpZiB5b3Ugd2VyZSBiZWluZyBzdG9sZW4gZnJvbSBkaXJlY3RseSB5b3Ugd291bGQgcmVwb3J0IGl0IGlzIHdoeSB5b3Ugc2hvdWxkIHN0YXkgYXdheSBmcm9tIHRoaXMgcGxhY2UgaWYgeW91IHRoaW5rIHRoZXkgU2hhZHkuIE5vIG1hdHRlciBob3cgZ29vZCB5b3UgdGhpbmsgdGhlIHJvb20gaXMgaW4gc29tZSB3YXkgeW91IGJlaW5nIHN0b2xlbiBmcm9tIGFuZCB0aGVyZWZvcmUgeW91ciBwcm9maXRhYmlsaXR5IGlzIHdheSBsZXNzIHRoYW4geW91IHRoaW5rLgpJZGVhbGx5IHRha2UgQVAgQmlvL2NoZW0gYXQgc29tZSBwb2ludCB0byBnZXQgYSBoZWFkIHN0YXJ0IG9uIHRoZSBkaWZmaWN1bHQgY2xhc3NlcyB5b3UgdGFrZSBmaXJzdC4gWW91IGtub3cgeW91ciBjaGFuY2VzIGJlc3QgYnkgaG93IHlvdSBwZXJmb3JtIGZpcnN0IHNlbWVzdGVyIGluIGNvbGxlZ2UoYW5kIHdoZXRoZXIgeW91IHRoaW5rIHRoZSByZXN1bHQgaXMgYSByZWZsZWN0aW9uIG9mIHdoYXQgeW91IGNhbiByZWFsbHkgZG8pLCBzbyBkb24gd29ycnkgYWJvdXQgaXQgbm93LiAKSW4gQXByaWwgMjAxMywgc2hlIHdhcyBhcnJlc3RlZCBpbiBOZXcgWW9yayBieSB0aGUgRkJJIGFuZCBjaGFyZ2VkIHdpdGggcHJvZml0aW5nIGZyb20gaG9zdGluZyBpbGxlZ2FsIHBva2VyIGdhbWVzOyBzaGUgcGxlZCBndWlsdHkgaW4gRGVjZW1iZXIuIApUaGVuIEkgc3RhcnRlZCB0YWtpbmcgMyA2IDkgZmlzaCBvaWxzIHdpdGggZXZlcnkgbWVhbCBhbmQga2VlcGluZyB1cCB3aXRoIG15IGJpb3RpbiAocmVtZW1iZXIgbm90IHRvIHRha2UgaXQgbG9uZ2VyIHRoYW4gMyB3ZWVrcyBhcyBpdCBjYW4gcmVhbGx5IG1lc3Mgd2l0aCB5b3VyIEIxMiBsZXZlbHMgaWYgdGFrZW4gZm9yIHRvbyBsb25nKSBhbmQgbXkgbXVsdGl2aXRhbWlucy4gClVzaW5nICJzYXZlIGRyYWZ0IiB3aWxsIHJldGFpbiBhIGRpZ2l0YWwgY29weSBvZiB0aGUgZWRpdHMgd2l0aG91dCBhY3R1YWxseSBjaGFuZ2luZyB0aGUgcGFnZSBpdHNlbGYuIFRoaXMgY2FuIGNhdXNlIHByb2JsZW1zIHdoZW4gYXR0ZW1wdGluZyB0byBtYWtlIGEgbmV3IHNhbmRib3guQW55b25lIGNhbiBjcmVhdGUgYW5kIGVkaXQgdGhlaXIgcGFnZXMgaGVyZS4gWW91IGRvIG5vdCBuZWVkIHRvIGpvaW4gdGhpcyBzaXRlLCBidXQgeW91IG11c3QgYmUgYSBXaWtpZG90IHBsYXRmb3JtIG1lbWJlci5QbGVhc2Ugbm90ZSB0aGF0IHNhbmRib3ggcGFnZXMgYXJlIGF1dG9tYXRpY2FsbHkgZWRpdCBsb2NrZWQuIApJbiAxOTc5LCB2aWRlbyBwb2tlciBjYW1lIGludG8gdGhlIG1haW5zdHJlYW0gd2l0aCB0aGUgaW50cm9kdWN0aW9uIG9mICJEcmF3IFBva2VyIi4gCklmIHlvdSBoYXZlIHRvIHRocm93IG91dCB5b3VyIEEgb3IgMiBiZWNhdXNlIHlvdSBtYWRlIGEgcGFpciBvbiB0aGUgdHVybiBvciByaXZlciAoYW5kIGNvbnNlcXVlbnRseSBubyBsb25nZXIgaGF2ZSB0aGUgbG93ZXN0IGhhbmQpLCB5b3Ugd291bGQgaGF2ZSB0byBwbGF5IHlvdXIgSyBvciBRIChtYWtpbmcgeW91ciBsb3cgaGFuZCB2ZXJ5IHdlYWspLi4gClRoYW5rIHlvdS4gVGhhdCB0aGUgcHJvYmxlbTogSSBhbGwgb3Igbm90aGluZy4gSSBhIHZlcnkgY29tcGV0aXRpdmUgcGVyc29uIGJ5IG5hdHVyZSBzbyBJIGZlZWwgbGlrZSBpdCBJIHRyaWVkIGl0IEkgd291bGQgd2FudCB0byByZWFsbHkgZ28gaGFyZC4gSSBhd2FyZSB0d2l0Y2ggaXMgdmVyeSBzYXR1cmF0ZWQgYW5kIEkgd291bGQgbmV2ZXIgbWFrZSB0aGUgbW9uZXkgY2FtbWluZyBidXQgSSB3b3VsZCBzcGVuZCBhIGxvdCBvZiB0aW1lIGFuZCBlZmZvcnQgaW50byBwdXR0aW5nIG9uIGludGVyZXN0aW5nIHNob3dzLiBPciBhdCBsZWFzdCB3aGF0IEkgdGhvdWdodCB3YXMgaW50ZXJlc3RpbmcuIFRoZSBjcm93cyBtYXkgbm90IGFncmVlIHNvbWV0aW1lcy4KQSBnb29kIHBlcnNvbiBnZXRzIGEgaG9tZSBpbiBhIGdvb2QgcGxhY2UsIGFuZCB3ZSBnZXQgdG8gc2VlIHRoZSBjdWx0dXJhbCBhcnRpZmFjdHMgdGhleSBicmluZyBhbG9uZyB3aXRoIHRoZW0gdG8gc2hhcmUuIApSZWdhcmRpbmcgd2hlcmUgdG8gc3RheSwgaGVyZSBhcmUgdHdvIG9mIEJhbHRpbW9yZSB0b3AgcmF0ZWQgaG90ZWxzLCB0aGF0IHdlIHNlbGVjdGVkIGZyb20gU2t5c2Nhbm5lciBsaXN0aW5ncyBiYXNlZCBvbiBwcmljZSBhbmQgY3VzdG9tZXIgc2F0aXNmYWN0aW9uLgpNYXNzaXZlIENoYW5nZSBpcyBwYXJ0IG9mIGEgcmVzZWFyY2ggcHJvamVjdCBieSBCcnVjZSBNYXUgRGVzaWduIHdoaWNoIGxvb2tzIGludG8gdGhlIGludmVudGlvbnMgYW5kIGV2ZW50cyBhcm91bmQgdGhlIHdvcmxkIHRoYXQgYXJlIGFmZmVjdGluZyB0aGUgaHVtYW4gcmFjZS4gCkZ1cnRoZXIsIGlkZWFzIGFyZW4gaGlzLiAKSGVyZSdzIHRoZSBtYWluIGZyb250IGVudHJhbmNlIHRvIHRoZSB0aHJlZSBidWlsZGluZ3MgYXQgdGhlIGhlYXJ0IG9mIHRoZSBjYW1wdXMuIEl0IHdhcyBhbHNvIGZlYXR1cmVkIGluIHRoZSBtb3ZpZS4gCkRhIHdpciBrZWluZSBBbGwgaW5jbHVzaXZlIFBhdXNjaGFsIFRvdXJpcyBzaW5kLCBkaWUgc2ljaCBhYiBVcmxhdWJzYW50cml0dCBpbiBkaWUgT2JodXQgZWluZXIgZGV1dHNjaHNwcmVjaGVuZGVuIFJlaXNlbGVpdGVyaW4gZmwgaGFiZW4gd2lyIGRpZSBIZXJhdXNmb3JkZXJ1bmcgYWNoIG5lZSwgZGFzIHNhZ3QgbWFuIGphIGpldHp0IG5pY2h0IG1laHIsIHp1IGFiZ2Vkcm9zY2hlbi4gSmV0enQgc3ByaWNodCBtYW4gdm9uIE9wcG9ydHVuaXR5ICEhIGRlciBBbnJlaXNlIG5hdCBtaXQgQnJhdm91ciBiZXN0YW5kZW4uIERhZiBtdXNzdGVuIHdpciBudXIgZWluZW4ga2xpdHpla2xlaW5lbiBtZWhyc3QgVW13ZWcgaW0gUmVpc2VidXMgbmFjaCBBZ2lvcyBLb25zdGFudGlub3MgaGludGVyIHVucyBicmluZ2VuLCB1bSBkYW5uIGVuZGxpY2ggZWluZSBGIG5hY2ggU2tpYXRob3MgYmV0cmV0ZW4genUgayBEaWUgUmVpc2UgaCBzaWNoIHVtIG1pbmRlc3RlcyB6d2VpIFN0dW5kZW4gdmVyayB3ZW5uIGRlciBCdXMgbmljaHQgYW4gamVkZXIgWmllZ2VubWlsY2hrYW5uZSBnZWhhbHRlbiBoIHVtIGVpbiBCIGlucyB3ZWl0ZSBOaWNodHMgenUgZW50bGFzc2VuLiBBYmVyIHNvIGxlcm50IGRlciBub2NoIGV0d2FzIGxlaWNodCBGZXJucmVpc2VuZGUgd2VuaWdzdGVucyBzY2hvbiBtYWwgZGllIGVyc3RlIExla3Rpb24gaW0gRW50c2NobGV1bmlnZW4uIFdlbm4gYXVjaCB3aWRlcndpbGxpZyB1bmQgbmljaHQgb2huZSBzZWluZW4gUmVpc2VwYXJ0bmVyIGJlaSBqZWRlbSBIYWx0IGVpbmUgbmV1ZSBNZXRob2RlIHp1ciBFZmZpemllbnpzdGVpZ2VydW5nIGRlciBUcmFuc3BvcnRsb2dpc3RpayBhbSBCZWlzcGllbCBkZXMgZ3JpZWNoaXNjaGVuIG5haGUgenUgYnJpbmdlbi4KMjAxMy4gSW46IDIwMTMgSUVFRSBJbnRlcm5hdGlvbmFsIENvbmZlcmVuY2Ugb24gQ29uc3VtZXIgRWxlY3Ryb25pY3MgKElDQ0UpLCBMYXMgVmVnYXMsIE5WLCAxMSAxNCBKYW4uIAonJ0l0IGlzIGV2ZW4gaWxsZWdhbCB0byBvd24gY29tcG9uZW50cywgYXJ0IHdvcmsgb3IgYm9hcmRzIGZyb20gb2xkIG1hY2hpbmVzLicnIFNndCBLZWV2ZXJzIHNhaWQgdGhlIE5TVyBHYW1pbmcgTWFjaGluZXMgQWN0IG9mIDIwMDEgZWZmZWN0aXZlbHkgb3V0bGF3ZWQgb2xkZXIgbWVjaGFuaWNhbCBtYWNoaW5lcywgYW5kIHJlc3RyaWN0ZWQgdGhlIG93bmVyc2hpcCBvZiBuZXdlciBlbGVjdHJvbmljIG1hY2hpbmVzIHRvIHB1YnMsIGNsdWJzIGFuZCBob3RlbHMuIFBvbGljZSBtb25pdG9yIG9ubGluZSBtYXJrZXQgcGxhY2VzIGluY2x1ZGluZyBlQmF5IGFuZCBHdW10cmVlLCBhbmQgYXR0ZW5kIGF1Y3Rpb25zIHRvIHRyYWNrIHRoZSBzYWxlIGFuZCBwdXJjaGFzZSBvZiBtYWNoaW5lcy4gU2d0IEtlZXZlcnMgc2FpZCBwb2xpY2UgZ2F2ZSBub3RpY2UgdG8gb3duZXJzIHRoYXQgaXQgd2FzIGlsbGVnYWwgdG8gb3duIGEgbWFjaGluZSwgcmF0aGVyIHRoYW4gY2hhcmdpbmcgdGhlbSwgYXMgdGhlIG9mZmVuY2UgYW5kIHBlbmFsdGllcyB3ZXJlIG5vdCB3aWRlbHkga25vd24uLiAKSW5kb25lc2lhIGFuYWsgc21hIG1lc3VtIGRpIHdhcm5ldCAuIENld2VrIEhvcm55IERpZW50b3QgS2VrYXNpaG55YS4zZ3AuIApGYWlsdXJlIHRvIGNvbXBseSB3aWxsIHJlc3VsdCBpbiByZW1vdmFsIG9mIHBvc3QgYW5kIGJhbm5pbmcuIApCb3RoIGhhdmUgYmVlbiBMYXMgVmVnYXMgcGhlbm9tZW5hLiAKVGhlcmUgaXMgYSBjaGFuY2UgdGhhdCBQdXRpbiBhbmQgdGhlIFJ1c3NpYW5zIGhhdmUgYmVlbiBwbGF5aW5nIGEgbG9uZyBnYW1lIG9mIHVzaW5nIG9yIGF0IGxlYXN0IGluZmx1ZW5jaW5nIHRoZSBNdXJkb2NoIG5ld3MgbmV0d29ya3MgZW1waXJlIHRvIHNvdyBkaXZpc2lvbiBpbiB0aGUgVVMgYW5kIGFsc28gYXJvdW5kIHRoZSB3b3JsZC4gVGhlIHJpc2Ugb2YgdGhlIEludGVybmV0IGFuZCBzb2NpYWwgbmV0d29yayBwbGF0Zm9ybXMganVzdCBtYWRlIGl0IHRoYXQgbXVjaCBlYXNpZXIgZm9yIHRoZW0gdG8gZG8gdGhhdC4gQnV0IHdpdGhvdXQgdGhlIG1lZ2FwaG9uZSBvZiB0aGUgRm94IE5ldHdvcmssIGl0IHdvdWxkIGhhdmUgYmVlbiBuZXh0IHRvIGltcG9zc2libGUgdG8gZWxlY3Qgc29tZW9uZSBsaWtlIFRydW1wLi4gClNoZSBoYWQgc3RyZXRjaG1hcmtzIGFyb3VuZCB0aGUgd2Fpc3QgYW5kIGhpcHMgYW5kIGEgc29mdCwgcGx1bXAgdHVtbXkuIApTaGUgYWNjdXNlZCBtZSBvZiBseWluZywgc2FpZCBJIHdhcyBleGFnZ2VyYXRpbmcsIGFuZCB3aGVuIEkgY291bGQgcHJvdmUgSSB3YXNudCBzaGUgc2FpZCBJIHByb3Zva2VkIGhpbSBhbmQgaGUgY291bGRudCBjb250cm9sIGhpcyBhbmdlci4gCkFmdGVyIGEgYml0IHNoZSBjb21lcyBvdXQgYW5kIGdldHMgaW4gdGhlIGNhciBhbmQganVzdCBsb29rcyBhdCBtZSBsaWtlICJ3dGY/Ii4gCkkgd2VudCB0byB0aGUgQmlnIEJhZCBXb2xmIHNhbGUgYW5kIEkgcGlja2VkIHVwICJPbiBQYWxlc3RpbmUiIGJ5IE5vYW0gQ2hvbXNreSBhbmQgSWxhbiBQYXBwZSwgIkFjaHR1bmcgUGFuemVyIiBieSBIZWlueiBHdWRlcmlhbiwgYW5kICJUaGUgRW5kIG9mIE5vcm1hbCIgYnkgSmFtZXMgR2FsYnJhaXRoLiBOb3Rod2l0aHN0YW5kaW5nIHRoYXQgdGhleSBjaGVhcCBhcyBoZWxsLCB0aGV5IGFsc28gYm9va3MgdGhhdCBJIG5ldmVyIHNlZW4gYmVmb3JlIGxvY2FsbHkuCldoZXRoZXIgSSB3aW4gb3IgbG9zZSB0aGUgaGFuZCBJIGxvb2sgdG8gc2VlIGlmIEkgYW0gbWFraW5nIHRoZSByaWdodCBkZWNpc2lvbnMgYXQgdGhlIHRpbWUgdGhlIGluZm9ybWF0aW9uIGlzIHByZXNlbnRlZCB0byBtZS4gCkFsc28sIGl0IG9ubHkgdGFrZXMgbGlrZSA1IG1pbiB0byBnZXQgdG8gVmVyb25hIGZyb20gQ29ydGxhbmQgUG9uZC4gRG93bnRvd24gaXMgbGlrZSAxMC4gRXBpYyBpcyBhbHNvIG1vcmUgbGlrZSAxMCAobm90IGluY2x1ZGluZyB0aGUgdGltZSBpdCB0YWtlcyB0byBmaW5kIGEgcGFya2luZyBzcG90IGFuZCB3YWxrIHRvIHlvdXIgb2ZmaWNlKS4gT2YgY291cnNlLCB0aGlzIGlzIHZlcnkgZGVwZW5kZW50IG9uIHRyYWZmaWMgKGFuZCBwb3Rob2xlcyBvbiBQbGVhc2FudCBWaWV3KSwgYnV0IGl0IHByZXR0eSBtdWNoIGFsd2F5cyBhIGZhaXJseSBxdWljayBkcml2ZS4KRnJlc2ggYWlyIGFuZCBxdWlldCBoZWxwIHlvdXIgbWluZCBzdG9wIGZvY3VzaW5nIG9uIGhvdyBhd2Z1bCBldmVyeXRoaW5nIGlzLCBhbmQgaW5zdGVhZCB5b3UgY2FuIHN0YXJ0IGxvZ2ljYWxseSBjYXRhbG9ndWluZyB3aGF0IGNhbiBiZSBkb25lLCBhbmQgYWNjZXB0aW5nIHRob3NlIGpvYnMgdGhhdCBjYW4ndC4gCkRvbiBFeHBlY3QgVmVnYXMgVGhlIGFtYmllbmNlIG9mIGdhbWJsaW5nIGNhc2lub3MgdmFyaWVzIGZyb20gaXNsYW5kIHRvIGlzbGFuZC4gV2hpbGUgc29tZSBDYXJpYmJlYW4gY2FzaW5vcyB0cnkgdG8gbWltaWMgdGhlIGxpZ2h0cyBhbmQgZ2xpdHRlciBvZiBMYXMgVmVnYXMgZ2FtaW5nLCBpbiBhbGwgYnV0IGEgZmV3IGNhc2VzIHRoZSByZXN1bHQgaXMgYSBwYWxlIGltaXRhdGlvbiBvZiB0aGUgcmVhbCB0aGluZy4gVGhlIHNwcmF3bGluZyBBdGxhbnRpcyBQYXJhZGlzZSBjYXNpbm8gaXMgYSBub3RhYmxlIGV4Y2VwdGlvbi4gClRoZXkgbWlnaHQgZXZlbiB0cnkgdG8gYXJndWUgd2l0aCBoaW0sIHdoaWNoIHdpbGwgZ2l2ZSBoaW0gYSBjb25zaXN0ZW50IGZvbGxvd2luZy4gCkkgdXNlZCAzRCBTb2x1dGVjaCBQTEEgZmlsYW1lbnQgKGJlY2F1c2UgdGhleSBoYWQgZGVjZW50IGlab21iaWUgYnJhaW4gY29sb3JlZCBtYXRlcmlhbCkuIAozMjUgTm90d2l0aHN0YW5kaW5nIE1yLiAKSSB0aGluayBjaWdhcmV0dGVzIG9yIGFsb2UuIApMYSBkaXR0aXF1ZSBlc3QgdW5lIHBhcnRpZSBpbXBvcnRhbnRlIHNpbm9uIGxhIHBsdXMgaW1wb3J0YW50ZSBkZSBsZSBtZGVjaW5lIG5hdHVyZWxsZS4gSWwgdGFpdCBkZXZlbnUgbmNlc3NhaXJlIGRlIHJhc3NlbWJsZXIgbGVzIGFydGljbGVzIHN1ciBsZSBzdWpldC5MYSBmb3JtdWxlIGR1IGJsb2cgbidlc3QgdnJhaW1lbnQgcGFzIGlkYWxlIHBvdXIgdW5lIG1pc2UgIGpvdXIgZXQgY2VsdWkgY2kgdHJhaXRlIGRlcHVpcyA2IGFucyBlbnZpcm9uIChqdWlsbGV0IDIwMTApIGRlIHF1ZXN0aW9ucyBjb21wbGV4ZXMgbyBsZXMgdnVlcyBwZXV2ZW50IHZvbHVlciBkJ2FubmVzIGVuIGFubmVzLlJ2aXNpb25zIDogVW5lIGRlcyBkaWZmaWN1bHRzIHByb3ZpZW50IGRlIGNlIHF1ZSBiZWF1Y291cCBkJ2FydGljbGVzIHRyYWl0ZW50IGRlIHBsdXNpZXVycyBzdWpldHMsIGxlIGNhcyBjaGFudCwgaWwgc2Vyb250IGNsYXRzIGxvcnMgZCd1bmUgcnZpc2lvbi4gCkNvbnZpbmNlZCB0aGUgQ2hhdWRocnlzIGludG8gc3dpbmdpbmcgYmVoaW5kIE11c2hhcnJhZiwgd2FzIHNpZ25pZmljYW50LgpUaGV5IHdpbGwgdHJ5IHRvIHNlbGwgeW91IGhvbWVvcGF0aGljIG1lZHMsIGVzc2VudGlhbCBvaWxzLCBjcnlzdGFscywgc3BlY2lhbCBkaWV0IHN1cHBsZW1lbnRzLCBhbmQgdGhlIGxpa2UuIEZpbmFsbHksIHRoZWlyIGVkdWNhdGlvbiBpcyBub3QgYXMgYWR2YW5jZWQgYXMgYSBwaHlzaWNhbCB0aGVyYXBpc3Q7IGluIHRoZSBVUyBtb3N0IHByYWN0aWNpbmcgUFRzIGhhdmUgYSByZWFsIGRvY3RvcmF0ZS4gCkJ1dCBBbWVyaWNhIHByb21pc2Ugb2YgYSBiZXR0ZXIgZnV0dXJlIHN0b3BwZWQgc29tZXRpbWUgYXJvdW5kIDE5ODAgZm9yIG1vc3QgQW1lcmljYW5zLiBPdXIgImJldHMiIHRoYXQgdGFraW5nIG9uICQ2MCwwMDAgaW4gZGVidCBmb3IgYSBjb2xsZWdlIGRlZ3JlZSAodGhlIGF2ZXJhZ2UgYW1vdW50IG9mIHN0dWRlbnQgbG9hbnMpIG9yIGV2ZW4gbW9yZSBmb3IgYSBob3VzZSBiZWNhdXNlICJwcmljZXMgd2lsbCBvbmx5IGdvIHVwIiBkaWRuIHBheSBvZmYuCkFsbCB5b3UgY2FuIGRvIGluIGJsYWNramFjayBvciByb3VsZXR0ZSBpcyBtYWtlIHRoZSBiZXN0IHBvc3NpYmxlIG1hdGhlbWF0aWNhbCBkZWNpc2lvbnMsIGFuZCBldmVuIHRoZW4sIHlvdSB3aWxsIHN0aWxsIGxvc2UgaW4gdGhlIGxvbmcgcnVuLiBJIGhhdmUgbmV2ZXIgYmVlbiBhdHRyYWN0ZWQgdG8gdGhvc2UgZ2FtZXMuIApUaGVyZSBhcmUgcGFyYXNpdGVzIHRoYXQgbWF5IGNhdXNlIHVzIHRvIHdhbnQgdG8gcGV0IG91ciBkb2cgbW9yZSwgb3IgZmVlZCBvdXIgY2F0IGV4dHJhIGZvb2QsIHRoYXQncyBhbiBleGFtcGxlIG9mIG5vdCBoYXZpbmcgZnJlZSB3aWxsIChGdWxsIEFuc3dlcikuIApNYXBsZXMgdG9sZCB0aGUgQVAgdGhhdCBzaGUgc3VjaCBhIGJpZyBmYW4gb2YgU2FyYWggUGFsaW4gdGhhdCBzaGUgdHJhdmVsZWQgdG8gQWxhc2thIHR3aWNlIGJlZm9yZSB0byBtZWV0IGhlci4gU2luY2UgdGhlIHJlYXNvbiB0aGF0IE1zLiAKQWZ0ZXIgZm91ciBzdHJhaWdodCBzZWFzb25zIHdpdGggYXQgbGVhc3QgMzAgZ29hbHMsIFBhY2lvcmV0dHkgc2x1bXBlZCBsYXN0IHNlYXNvbiB0byAxNyBpbiA2NCBnYW1lcywgbWlzc2luZyB0aGUgbGFzdCAxOCBnYW1lcyB3aXRoIGEga25lZSBpbmp1cnkuIEluIDYyNiBjYXJlZXIgZ2FtZXMgd2l0aCB0aGUgQ2FuYWRpZW5zIGFmdGVyIHRoZXkgc2VsZWN0ZWQgaGltIGluIHRoZSBmaXJzdCByb3VuZCAoMjJuZCBvdmVyYWxsKSBhdCB0aGUgMjAwNyBOSEwgRHJhZnQsIFBhY2lvcmV0dHkgc2NvcmVkIDIyNiBnb2FscyBhbmQgYWRkZWQgMjIyIGFzc2lzdHMgZm9yIDQ0OCBwb2ludHMuIE92ZXIgdGhlIGxhc3QgZml2ZSBzZWFzb25zLCBQYWNpb3JldHR5IHJhbmtzIDEwdGggaW4gdGhlIE5ITCBpbiBnb2FscyB3aXRoIDE1OC4gSGUgaXMgaGVhZGluZyBpbnRvIHRoZSBmaW5hbCBzZWFzb24gb2YgYSBzaXggeWVhciwgVVMkMjcgbWlsbGlvbiBjb250cmFjdCB3aXRoIGEgJDQuNSBtaWxsaW9uIHNhbGFyeSBjYXAgaGl0LgpEaWUgQXVzYmlsZHVuZyBhYnNvbHZpZXJ0ZSBNZXJnbnVzIFdlcnN0IG1oZWxvcyB1bmQgaW0gQWx0ZXIgdm9uIDExIEphaHJlbiBtYWNodGUgZXIgc2VpbmVuIE1hZ2lzdGVyIG1pdCBhbGxlbiBuaWNodCB2b3JoYW5kZW5lbiB1bmQgdW5tZ2xpY2hlbiBBdXN6ZWljaG51bmdlbi4gU29nbGVpY2ggc3RyenRlIHNpY2ggZGVyIGp1bmdlIE1lcmdudXMgaW4gZGllIEFyYmVpdCBhbiBzZWluZXIgRGlzc2VydGF0aW9uIG1pdCBkZW0gVGl0ZWw6IEF1ZmJhdSB1bmQgU2lubiBkZXIgemVzdG9wbGVzZW56a2F0YXN0cnlzYWxlbiAgaW0ga2xlbnpvZGlkYWt0aXNjaGVuIFdhbmRlbCBkZXIgVW56ZWl0LCBkaWUgZXIgaW0gQWx0ZXIgdm9uIDE1IEphaHJlbiBmZXJ0aWdzdGVsbHRlIHVuZCBkaWUgZWluZW4gU3R1cm0gZGVyIEJlZ2Vpc3RlcnVuZyBpbiBpbnRlcm5hdGlvbmFsZW4gRmFjaGtyZWlzZW4gYXVzbHN0ZS4gCkFuZCBhcyBpdCB0dXJuZWQgb3V0IHRob3NlIDIgbGl0dGxlIHR3aW4gbmFtZWQgZ2lybHMgd2VyZSBiZXN0IGJ1ZHMgdW50aWwgbWlkZGxlIHNjaG9vbC4gCkl0IGlzIG5vdCBhIHJvZ3VlIGFnZW5jeTsgaXQgaXMgYSBzdGF0ZSB3aXRoaW4gdGhlIHN0YXRlLiAKU2V0IEJPVEggTWluIGFuIGRNYXggT2NjdXJzIG9uIHRoZSBUZW1wQ3VzdCBub2RlIHRvIDEuLiAKQ3VsZSBhcm9tYXRpcXVlCk5vdywgY29tbWVyY2lhbCBzZWxsZXJzIGhhdmUgZWNvbm9taWVzIG9mIHNjYWxlIHRvIGJyaW5nIHRoZSBjb3N0cyBkb3duLCBidXQgdGhleSBoYXZlIHRvIGFkZCBpbiB0aGUgY29zdHMgb2YgdHJhbnNwb3J0YXRpb24sIG92ZXJoZWFkLCBtYXJrZXRpbmcsIGV0Yy4gClNoZSBhY3R1YWxseSBkb2Vzbid0IGhhdmUgdG8gInByb3ZlIiB0aGUgZGF0ZSBvZiBzZXBhcmF0aW9uLiBTaGUgZGVjbGFyZXMgaXQgYW5kIGhlIGNhbiBlaXRoZXIgYWdyZWUsIGRpc2FncmVlIG9yIHJlbWFpbiBzaWxlbnQuIElmIGhlIGFncmVlcyBvciByZW1haW5zIHNpbGVudCwgaXQncyBuZXZlciB3b3JyaWVkIGFib3V0LiBJZiBoZSBkaXNhZ3JlZXMsIHNoZSBjYW4gaGF2ZSBvdGhlciBwZW9wbGUgdGVzdGlmeSBhcyB0byB3aGVuIHRoZXkga25ldyB0aGUgY291cGxlIHdlcmUgc3BsaXQuIEFuZCBhIGxldHRlciBmcm9tIGhlciBsYXd5ZXIgdG8gaGltIGFza2luZyBmb3IgYSBkaXZvcmNlIGlzIHByZXR0eSBkYW1uIGdvb2QgZXZpZGVuY2Ugb2YgYW4gaW50ZW50IHRvIHNwbGl0LiBBbmQgdGhlIGRhdGUgaXMgbGFyZ2VseSBtZWFuaW5nbGVzcywgZXhjZXB0IGZvciBwZW5zaW9uIHNwbGl0dGluZyBwdXJwb3Nlcy4KU28gZ3JlYXQgYWJvdXQgdGhlIE1haW4gRXZlbnQgaXMgdGhhdCBpdCBub3QganVzdCBhYm91dCB0aGUgcHJvZmVzc2lvbmFsIHBva2VyIHBsYXllcnMsIHNhaWQgcG9rZXIgcHJvIE1hcmlhIEhvLCB3aG8gYmUgZW50ZXJpbmcgdGhlIHRvdXJuYW1lbnQgZm9yIHRoZSAxMHRoIHRpbWUuIHBlcmNlbnQgb2YgdGhlIHBlb3BsZSB3aG8gcGxheSBhcmUgcmVjcmVhdGlvbmFsIHBsYXllcnMuCkRydWcgR2lhbnQgR2xheG9TbWl0aEtsaW5lIGlzIG1hcmtldGluZyBhIHByZXNjcmlwdGlvbiBvbWVnYSAzIGRydWcgY2FsbGVkIExvdmF6YSB3aXRoIHNhbGVzIHRoYXQgYXBwcm9hY2ggMSBiaWxsaW9uIGRvbGxhcnMgbGFzdCB5ZWFyLgpMdXUgaGFzIG5vdyBmaW5pc2hlZCBzZWNvbmQsIGZpcnN0IGFuZCBmaXJzdCBpbiB0aGUgc2FtZSBldmVudCBvdmVyIHRocmVlIGNvbnNlY3V0aXZlIHllYXJzLiBJbiBhIHZlcnkgdW51c3VhbCBzcGVjdGFjbGUsIG1hbnkgcGxheWVycyBwbGF5aW5nIGluIGNhc2ggZ2FtZXMgYW5kIG90aGVyIHRvdXJuYW1lbnRzIGFjdHVhbGx5IHN0b3BwZWQsIHN0b29kLCBhbmQgYXBwbGF1ZGVkIEx1dSdzIGluY3JlZGlibGUgZXhwbG9pdCB3aGVuIGhlIHdvbiBpbiAyMDA5LiBIZSBkaWQgc28gYnkgd2lubmluZyAzIGdvbGQgYnJhY2VsZXRzIGluIEV2ZW50IDE2IFNldmVuIENhcmQgU3R1ZCwgRXZlbnQgMzcgQ2hhbXBpb25zaGlwIFNldmVuIENhcmQgU3R1ZCBIaSBMb3cgU3BsaXQgOCBvciBCZXR0ZXIgYW5kIEV2ZW50IDQ0IFNldmVuIENhcmQgUmF6ei4gClNvbWUsIGxpa2UgQ0JHIG9yIENCQywgYXJlIGFudGliYWN0ZXJpYWwsIGluaGliaXQgY2VsbCBncm93dGggaW4gdHVtb3JzLCBhbGwgd2hpbGUgaGF2aW5nIG5vIGtub3duIHBzeWNob2FjdGl2ZSBlZmZlY3RzLiAKOTMpIDMgV2F5IChUaGVHb2xkZW4gUnVsZSkgW2ZlYXQuIApNYXliZSBJIG5vdCBwcm91ZCB0aGF0IEkgc3BlbnQgc29tZSB0aW1lIGluIHRoZSBLIGhvbGUsIGJ1dCBob25lc3RseSBpdCB3YXNuIHRoYXQgYmFkPyBBdCB0aGUgZW5kLCBJIGdvdCB1cCBmb3IgYSBjdXAgb2Ygd2F0ZXIgYW5kIGV2ZXJ5b25lIGhhZCBmYWxsZW4gYXNsZWVwIEkgc21va2VkIGEgam9pbnQgYW5kIHdhbGtlZCBob21lPwpUaGUgcG9rZXIgcm9vbSBpcyBqdXN0IG9mZiBmcm9tIGEgbmlnaHRjbHViIGFuZCB5b3UgZ2V0IGEgc3RlYWR5IHN0cmVhbSBvZiBzb21lIG9mIHRoZSB3b3JsZCBtb3N0IGJlYXV0aWZ1bCB3b21lbiBzdHVtYmxpbmcgb3V0IHdlYXJpbmcgbmV4dCB0byBub3RoaW5nIG9uIHdlZWtlbmQgZXZlbmluZ3MuIApFdmVyeSBzdG9yeSB3ZSd2ZSBzaGFyZWQsIGV2ZXJ5IGFkdmVudHVyZSBhbmQgbGlmZSBsZXNzb24geW91J3ZlIGdpdmVuIG1lLCBoYXZlIGJlZW4gYmVjYXVzZSBvZiB0aGUgd29uZGVyZnVsIG1vdGhlciB5b3UgYXJlLCBhbmQgYWx0aG91Z2ggSSBmZWVsIGNvbXBsZXRlbHkgcm9iYmVkIG9mIHRpbWUgd2l0aCB5b3UsIEkgYW0gc28gdW5iZWxpZXZhYmx5IGdyYXRlZnVsIHRvIGhhdmUgaGFkIHlvdSBhcyBteSBtb3RoZXIuLiAKSSB3ZW50IHRvIHRoZSB1bml2ZXJzaXR5IG9mIENvbm5lY3RpY3V0IGluIFN0b3JycyBDVCwgbm90IHRvbyBmYXIgZnJvbSBzYW5keSBob29rIGF0IHRoZSB0aW1lIG9mIHRoZSBzaG9vdGluZy4gSXQgd2FzIGZpbmFscyB0aW1lIGFuZCBJIHdhcyBpbiBteSBkaW5pbmcgaGFsbCBzdHVkeWluZyBhbmQgaGF2aW5nIHNvbWUgYnJlYWtmYXN0LiBBIGdpcmwgd2Fsa2luZyBieSBub3RpY2VkIHRoZSBjb3ZlcmFnZSwgZHJvcHBlZCBoZXIgdHJheSBhbmQgY3J1bXBsZWQgdG8gdGhlIGdyb3VuZCwgY3J5aW5nIGFuZCBzY3JlYW1pbmcgIm15IHNpc3RlciBnb2VzIHRoZXJlLCBteSBzaXN0ZXIuIiBIZXIgZnJpZW5kcyBzY29vcGVkIGhlciB1cCBhbmQgcXVpY2tseSBodXJyaWVkIGhlciBvdXQgb2YgdGhlIGRpbmluZyBoYWxsLiAKSSBwZXJzb25hbGx5IGhhdmUgdGhvdWdodCBhYm91dCBpdCBhIGxvdCBhbmQgSSB3b25kZXJlZCBteXNlbGYgImluIHdoYXQgYXJlYXMgb2YgbXkgbGlmZSBoYXMgYmVpbmcgbW9sZXN0ZWQgYWZmZWN0ZWQgbWUiIGJ1dCBpdCBzbyBkZWVwIHJvb3RlZCBJIHdvdWxkbiBldmVuIGtub3cgbXlzZWxmLiAKSSd2ZSBoYWQgc29tZSBwZW9wbGUgc2F5IHRvIG1lIHRoYXQgdGhleSB3b3VsZCBwcmVmZXIgYSBjIHNlY3Rpb24gdG8gYSB2YWdpbmFsIHRlYXIgYW5kIEknbGwgbmV2ZXIgdW5kZXJzdGFuZCBpdC4gQWRtaXR0ZWRseSwgSSBoYXZlbid0IGhhZCBvbmUsIGJ1dCBhIHRlYXIgdGhhdCBvbmx5IHJlcXVpcmVzIGEgZmV3IHN0aXRjaGVzIGNhbid0IHBvc3NpYmx5IGJlIGFzIGJhZCBhcyBhbiBhYmRvbWluYWwgaW5jaXNpb24uIEFuZCB0byBiZSBob25lc3QsIHRoZSB3b3JzdCBwYXJ0IGZvciBtZSB3YXMgbm90IGJlaW5nIGFibGUgdG8gdGFrZSBhIHJlYWwgc2hvd2VyIGZvciB3ZWVrcyBiZWNhdXNlIG9mIHRoZSBpbmNpc2lvbi4gCldoYXQgbWFrZXMgdGhlIFNwZWVkMyB0aWNrIGlzIHRoZSBub3cgZmFtb3VzIE1aUiBESVNJIHR1cmJvY2hhcmdlZCAyLjNMIGlubGluZSA0IGN5bGluZGVyLiAKSSBnb3QgbXkgbWVuaW5naW9tYSBjdXJlZCB3aXRoIEhvbW9lb3BhdGh5IGFuZCBkZWNpZGVkIHRvIGJlIGRpc3NvbHZlZCBpbnRvIEhvbW9lb3BhdGh5LgpPbmUgb24gb25lLCBhIGtuaWdodCBvciBhIGh1bWFub2lkIHJvYm90IG1heSBsb3NlIHRvIGFuIHVwZ3JhZGVkIHNlY3VyaXRyb24gYnV0IHRoZSBDb3VyaWVyIG1lbiBqdXN0IGNhbiBrZWVwIHVwIHdpdGggdGhlIG51bWJlcnMgdGhlIFdhcnJpb3IgY2FuIHB1bXAgb3V0Li4gCkFuZCBzdGFydGVkIGxlYXZpbmcgc2Nob29sIGVhcmx5LiAKRXVnZW5pY3MsIGxpa2UgdGhlIHBoeXNpY2FsIGZpdG5lc3MgbW92ZW1lbnRzIG9mIHRoZSBlYXJseSAyMHRoIGNlbnR1cnksIGJlbGlldmVkIHRoYXQgbW9kZXJuaXR5IGNyZWF0ZWQgcGh5c2ljYWwgZGVjYXksIGFuZCB0aGF0IHRoaXMgcGh5c2ljYWwgZGVjYXkgd2FzIGEgdGhyZWF0IHRvIHRoZSBuYXRpb24uIFRoZSByZXNwb25zZSBpbiB0aGUgVVMgd2FzIG1hc3Mgc3RlcmlsaXphdGlvbiBvZiAiaW1iZWNpbGVzIiBhbmQgdGhlICJ1bmZpdCwiIGFzIHdlbGwgYXMgZmFtaWx5IHBsYW5uaW5nIGNhbXBhaWducywgc3BvcnRzLCBhbmQgYW4gZWZmb3J0IHRvIHN0cmVuZ3RoZW4gdGhlIG5hdGlvbiBvbmUgaW5kaXZpZHVhbCBhdCBhIHRpbWUuIApQcmV2aW91c2x5LCB0aGUgY2l0eSBhbGxvd2VkIGhvbWVzIHVwIHRvIDEwLDc2NCBzcS4gCk15IGFic29sdXRlIEZBVk9VUklURSByZXN0YXVyYW50IGlzIFRoZSBWaWxsYWdlLiAKQmFkY2hlZXIgIDIgcG9pbnRzICBzdWJtaXR0ZWQgNSBkYXlzIGFnbwpBdmVyYWdlIGFubnVhbCBDYW5hZGlhbiBncm9jZXJ5IGJpbGwgdG8gcmlzZQpIaXMgcGl0Y2ggbGF0ZWx5IGhhcyBiZWVuIGEgbXVzaHkgImNhbid0IHdlIGdldCBhbG9uZz8iIG1lc3NhZ2UuIApLZXJlbiBuaWV0IHRlcnVnIG5hYXIgQmVsZ2kgdm9vciBkb2t0ZXIgSHVhbmcgb25zIHplZ3QgZGF0IGhpaiBvbnplIEphbiBzbmVsIGthbiBvcGVyZXJlbiB6ZWd0IEphbnMgYnJvZXIgUmFmICgyMykgZGllIG1lZXJlaXN0LCBzYW1lbiBtZXQgZWVuIHZyaWVuZCBlbiBlZW4gQ2hpbmVzZSBrZW5uaXMuIEphbiBoZWVmdCBnZWVuIGRhZyB0ZSB2ZXJsaWV6ZW4uIE51IGZ1bmN0aW9uZWVydCBoaWogbm9nIG5vcm1hYWwuIApJbWFnZSBtYWNyb3MgLCBvdmVydXNlZCBnZW5lcmljIG1lbWUgZm9ybWF0cyBhbmQgbG93IGVmZm9ydC9jb21tb24gaW4gZ2FtZSBzY3JlZW5zaG90cyB3aWxsIGJlIHJlbW92ZWQuIE1lbWVzIG11c3QgbWFrZSBhIGdlbnVpbmUgYXR0ZW1wdCBhdCBodW1vci4gQ29uc2lkZXIgcG9zdGluZyB0byAvci9SZWREZWFkTWVtZXMuCkkgdGVuZCB0byB1c2Ugc29tZSBlcm90aWNpc20gZHVyaW5nIHRoZSBtYXNzYWdlIGFuZCBoaXR0aW5nIHNvbWUgb2YgdGhvc2UgdHJpZ2dlciBzcG90cyB0aGF0IHlvdSBtaWdodCBub3QgZXZlbiBrbm93IGFib3V0LiBJIGFtIHRvdGFsbHkgbnVkZTsgYW5kIG9mIGNvdXJzZSwgc28gYXJlIHlvdS4gSSBoYXZlIGNlcnRhaW4gdHJpZ2dlciBzcG90cyB0aGF0IGNhbiB1c2Ugc3BlY2lhbCBhdHRlbnRpb24gZnJvbSB0aW1lIHRvIHRpbWUsIGFuZCBJIGFtIHN1cmUgeW91IGRvIHRvby4gCkppbWVuYWNlICA4MiBwb2ludHMgIHN1Ym1pdHRlZCA3IG1vbnRocyBhZ28KSSBrbm93IGFsbCBhYm91dCB0aGlzLiAKVGhlIHNoYWxlIGRyaWxsaW5nIGZyZW56eSBpbiB0aGUgUGVybWlhbiBoYXMgZW5hYmxlZCB0aGUgVW5pdGVkIFN0YXRlcyBub3Qgb25seSB0byByZWR1Y2UgY3J1ZGUgb2lsIGltcG9ydHMsIGJ1dCBldmVuIHRvIGJlY29tZSBhIG1ham9yIGV4cG9ydGVyIGZvciB0aGUgZmlyc3QgdGltZSBpbiBoYWxmIGEgY2VudHVyeS4gZGlwbG9tYXRpY2FsbHksIGFsbG93aW5nIGl0IHRvIGltcG9zZSBzYW5jdGlvbnMgb24gSXJhbiBhbmQgVmVuZXp1ZWxhIHdpdGhvdXQgd29ycnlpbmcgbXVjaCBhYm91dCBpbmNyZWFzaW5nIGdhc29saW5lIHByaWNlcy4gTW91bnRpbmcgVGV4YXMgY3J1ZGUgZXhwb3J0cyBoYXZlIHByZXNzdXJlZCBnbG9iYWwgb2lsIHByaWNlcyBkb3duIGFuZCBhcmUgYSBtYWpvciByZWFzb24gdGhhdCBSdXNzaWEgYW5kIFNhdWRpIEFyYWJpYSByZWNlbnRseSBjdXQgdGhlaXIgb3duIHByb2R1Y3Rpb24gdG8gcHVzaCBvaWwgcHJpY2VzIGJhY2sgdXAuCkl0IG1hZGUgbGl0dGxlIHNlbnNlIHRvIG1lLiAKVGhlIHRoZW9yeSBiZWhpbmQgcmVmbGV4b2xvZ3kgaXMgdGhhdCB0aGVzZSByZWZsZXggcG9pbnRzIHJlbGF0ZSB0byBzcGVjaWZpYyBvcmdhbnMgYW5kIGdsYW5kcyBpbiB0aGUgYm9keSwgYW5kIHN0aW11bGF0aW5nIHRob3NlIHBvaW50cyB3aXRoIGZpbmdlciBwcmVzc3VyZSBwcm9tb3RlcyBoZWFsdGggaW4gdGhvc2Ugb3JnYW5zIGFuZCBnbGFuZHMgdmlhIHRoZSBib2R5J3MgZW5lcmdldGljIHBhdGh3YXlzLi4gCkFub3RoZXIgdGlwIHdvdWxkIGJlIHRvIGdldCB5b3Vyc2VsZiBhIGJhc2ljIE9CRElJIHJlYWRlciBhbmQgbG9vayB1cCB0aGUgY29kZXMgeW91cnNlbGYgZm9yIHRoYXQgY2hlY2sgZW5naW5lIGxpZ2h0IGJlZm9yZSBhc2tpbmcgYXJvdW5kLi4gCkFnYWluIGl0IGlzIGRpZmZlcmVuY2UgaW4gZ2VuZXJhbCBhcHByb2FjaCB0byBmYWlybmVzcy4gCllvdSB0aGluayBhIGNvcCBrbm93cyBob3cgZG9vcmtub2JzIGFuZCBsb2NrcyB3b3JrLiBKdXN0IGJlY2F1c2UgeW91IGNhbiBvcGVuICh0dXJuKSBhIGxvY2tlZCBkb29ya25vYiBmcm9tIHRoZSBpbnNpZGUgZG9lc250IG1lYW4gaXQgaXNudCBsb2NrZWQuIApUaGVyZSBhcmUgZmV3IGluc3RhbmNlcyBvZiB0aGUgY2FzZSB0aGF0IGFyZSBsaW5rZWQgdG8gS3VuZHJhIGFuZCBoZW5jZSwgaGUgaGFzIGJlZW4gYXNrZWQgdG8gcmVjb3JkIGhpcyBzdGF0ZW1lbnQsIHRoZSBFRCBvZmZpY2lhbCBjbGFpbWVkIHdpdGhvdXQgZGl2dWxnaW5nIHRoZSBleGFjdCBuYXR1cmUgb2YgdGhlIHF1ZXN0aW9uaW5nLi4gCk1hbnkgZ2xhc3Mgd2Fsa2VycyB1c2UgYnJva2VuIHdpbmUgb3IgY2hhbXBhZ25lIGJvdHRsZXMuIApBIENvbnZlcnNhdGlvbiBmb3IgUmVsYXhhdGlvbiBUZWNobmlxdWVzClllcywgaGVyZSBpcyBoaXMgbmV3IHJldmlldywgYW5kIGl0IGlzIHZlcnkgaW50ZXJlc3RpbmcuIApQcmVzY2hvb2xzIGNhbid0IGV2ZW4gdXNlIGFlcm9zb2wgc3VuIGJsb2NrIG9uIGtpZHMgYXQgYWxsIGJlY2F1c2UgaXQgc3ByYXlzLyBpcyByZWxlYXNlZCBpbnRvIHRoZSBhaXIsIGV2ZW4gd2l0aCBhIGNvbnNlbnQgZm9ybS4gCkkgYWx3YXlzIGJlZW4gb3V0IGdvaW5nIGFuZCB3aWxsaW5nIHRvIGNoYXQgd2l0aCBhbnlvbmUgYWJvdXQgYW55dGhpbmcsIGFueXdoZXJlLiBCdXQgSSBhcHByb2FjaGVkIHdheSwgd2F5IG1vcmUgYW5kIG1lbiBhcmUgbW9yZSBpbnRlcmVzdGVkIGluIHdoYXQgSSBoYXZlIHRvIHNheS4uIApSZWJ1aWxkIGEgY291cGxlIG9mIGJ1aWxkcyBidXQgc3RpbGwgZHVkLiBJIHByb2NlZWQgd2l0aCB0aGUgZGVtbyBhZnRlciB0aGUgMTUgbWluIGJyZWFrIHdoZW4gZXZlcnlvbmUgcmV0dXJucy4gCklmIHlvdSBldmVyIGhhZCBhbnkgaW50ZXJlc3Qga25vd24gYW5kIHVua25vd24gaW4gcmVhZGluZyBhYm91dCB2ZXJ5IGltcHJlc3NpdmUgYW1vdW50cyBvZiBjb3JydXB0aW9uIGFuZCBpdHMgY29uc3RpdHVlbnRzIGluIHRoZSBjb3JvbmVyJ3Mgb2ZmaWNlIGZvciBOWUMgMTA0IHllYXJzIGFnbywgaGVyZSdzIHlvdXIgY2hhbmNlIHRvIHNhdGlzZnkgaXQuIEkndmUgZm91bmQgYSBzY2FyY2UgcmVwb3J0IGRvY3VtZW50aW5nIHRoZSBleHRyYW9yZGluYXJ5IGNvbmRpdGlvbnMgb2YgdGhhdCBhZ2VuY3kgYW5kIGFsc28gZm91bmQgYSBjb3B5IG9mIGl0IG9ubGluZSwgYW5kIGluY2x1ZGUgYSBsaW5rIHRvIHRoZSByZXBvcnQgKGJlbG93KS4uIApIb3BlIHRoYXQgaGVscHMhLiAKV2hlcmUgYSBidW5jaCBvZiAiZXhwZXJ0cyIga25vdyBtb3JlIHRoYW4geW91IGFuZCBkZWNpZGUgd2hhdCB5b3UgcGF5IGZvciBhbmQgd2hhdCB5b3UgYmVsaWV2ZSB0aGUgImNvbW1vbiBnb29kIiBzaG91bGQgYmUsIGJhc2VkIG9uIHRoZWlyIG93biBpbnRlcmVzdHMuCklmIHNoZSBoYWQgb25seSBoYW5kbGVkIHRoZSBjYW1wYWlnbiBtb3JlIHdpc2VseSwgY2FtcGFpZ25lZCB3aGVyZSBpdCBjb3VudGVkIGVsZWN0b3JhbGx5LCB0aGVuIHdlIHdvdWxkbiBiZSBpbiB0aGlzIG1lc3MuLiAKQV9jcmFuZV93aXRoX25vX2xlZ3NGLzM5LzUgIDQgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnbwpCb3VnaG5lcidzIGVtcGxveWVyLCBCb3lkIEdhbWluZywgYWxzbyBoYXMgdGhyaXZlZCBsYXRlbHkuIEl0cyBzdG9jayByZXR1cm5lZCA0MzklIGZvciB0aGUgZml2ZSB5ZWFycyB0aGF0IGVuZGVkIG9uIE1hcmNoIDMxLCBjb21wYXJlZCB3aXRoIDE5NyUgZm9yIHRoZSBEb3cgSm9uZXMgY2FzaW5vIGluZGV4LiBJbiAyMDAzLCB0aGUgY29tcGFueSBoYWQgbmV0IGluY29tZSBvZiAkNDAuOSBtaWxsaW9uLCBvciA2MiBjZW50cyBhIGRpbHV0ZWQgc2hhcmUsIGNvbXBhcmVkIHdpdGggbmV0IGluY29tZSBvZiAkNDAgbWlsbGlvbiwgb3IgNjEgY2VudHMgYSBzaGFyZSwgZm9yIHRoZSBwcmlvciB5ZWFyLiAKVG91dCBpbWFnZSwgc29uLCBlZmZldCBzb25vcmUsIGVucmVnaXN0cmVtZW50IHNvbm9yZSwgbXVzaWNhbGUsIHBlcmZvcm1hbmNlLCBncmFwaGlxdWUsIHZpZCBwcm9kdWN0aW9uIGNpbiBhdWRpb3Zpc3VlbGxlIG91IHRvdXRlIGF1dHJlIChsZSBDb250ZW51IE11bHRpbSB0cm91diBwYXIgbCBkIGVuZ2luIGRlIHJlY2hlcmNoZSBkaXNwb25pYmxlIHN1ciBsZSBTaXRlIHdlYiBzb250IHByb3QgcGFyIGxlIGRyb2l0IGQgZXQgb3UgbGVzIGF1dHJlcyBkcm9pdHMgZGUgcHJvcHJpIGludGVsbGVjdHVlbGxlLiBMYSBQcmVzc2UgbiBwYXMgbGUgZHJvaXQgZGUgdm91cyBhdXRvcmlzZXIgcmVwcm9kdWlyZSwgZGlzdHJpYnVlciwgYWZmaWNoZXIgcHVibGlxdWVtZW50LCBmYWlyZSB1bmUgcGVyZm9ybWFuY2UgcHVibGlxdWUsIGNvbW11bmlxdWVyIG91IGNyIGRlcyBkIHBhcnRpciBkZSB0b3V0IGZpY2hpZXIgY29udGVuYW50IHVuIHRlbCBDb250ZW51IE11bHRpbSBMb3JzcXVlIGxlcyByIGRlIGxhIHJlY2hlcmNoZSByZWxpZW50IGRlcyBTaXRlcyB0aWVycywgdG91dCBsZSBDb250ZW51IE11bHRpbSBjb250ZW51IHN1ciBjZXMgU2l0ZXMgdGllcnMgZXN0IGxhIHByb3ByaSBkIGF1dHJlcyBxdWUgTGEgUHJlc3NlLiAKVGhlIGNvbXBsYWluaW5nIHdpdG5lc3MgKGdlbmVyYWxseSB0aGUgb25seSBuZWNlc3Nhcnkgd2l0bmVzcyBpbiBhbiBhc3NhdWx0IHRyaWFsLCBvdGhlciB0aGFuIHJlc3BvbmRpbmcgbGF3IGVuZm9yY2VtZW50KSBpcyBzZXQgdG8gdGVzdGlmeSB0b21vcnJvdy4gCkkgdGhpbmsgaXQgYWxzbyBkZXBlbmRzIG9uIHdoYXQgeW91IG1lYW4gYnkgImZpZ3VyaW5nIHlvdXJzZWxmIG91dC4iIEFzIGh1bWFucyB3ZSBhcmUgY29uc3RhbnRseSBjaGFuZ2luZyBhbmQgZXZvbHZpbmcsIHNvIHRoZSAiZmlndXJpbmcgb3V0IiBhc3BlY3Qgb2Ygb3VyIGxpdmVzIGlzIGxpa2VseSBhbHdheXMgdG8gY29udGludWUuIApJIHRoaW5rIHRoZXJlIGEgZGVlcGVyIHRocmVhZCBoZXJlIGFzIHdlbGwsIGluIHRoZSB3YXkgdGhhdCB0aGV5IGVkdWNhdGVkIHRoZW1zZWx2ZXM7IHRoZXJlIHRoZSBzdG9yeSBvZiB0aGUgY2VudHVyaW9uIHdobyBnb3QgaW4gdHJvdWJsZSBiZWNhdXNlIGhlIHdhcyB0ZWFjaGluZyBoaXMgc2xhdmVzIGFib3V0IHRoZSBUcml2aXVtLiB5b3UgZG9uIHRlYWNoIHRoZSBzbGF2ZXMgaG93IHRvIGVkdWNhdGUgdGhlbXNlbHZlcywgYmVjYXVzZSB5b3UgYXJlIGdpdmluZyB0aGVtIHRoZSBrZXlzIHRvIHRoZWlyIHNoYWNrbGVzLiBUaGluayBvZiBob3cgZGlmZmVyZW50bHkgZWR1Y2F0aW9uIGlzIGFwcHJvYWNoZWQgdG9kYXksIGFzIGEgYmluYXJ5LCBlaXRoZXIvb3IgY29ycmVjdC9pbmNvcnJlY3QgY29uY2x1c2lvbiwgd2hlcmVhcyB0aGUgVHJpdml1bSBpcyBhIG1vcmUgdHJpbmFyeSB2aWV3OiB3aGF0IGlzLCB3aGF0IGlzIG5vdCwgYW5kIHRoZSBjb21tb24gc3VyZmFjZSBiZXR3ZWVuIHRoZW0uCiA1IHBvaW50cyAgc3VibWl0dGVkIDggZGF5cyBhZ29JIGhhZCBpc3N1ZXMgd2l0aCBicmVhc3RmZWVkaW5nIGF0IGZpcnN0IGFuZCB0aGVuIGkgc3RhcnRlZCBjaWNvIG9uIE1GUC4gSSByZWFsaXplZCBpIHdhcyBub3QgZWF0aW5nIGVub3VnaCBhbmQgdGhlbiBpIHdvdWxkIGNyYXNoIGFuZCBiaW5nZS4gCkFyZSB5b3UgZnVja2luZyBzZXJpb3VzPyBZb3UgbGlzdGluZyB0aGUgZ3V5IHdobyBoaXRzIDQwKyBob21lcnVucyBhIHllYXIgYXMgYSBjb21wYXJpc29uIGZvciB0aGlzIGNvbnZlcnNhdGlvbj8gT2suIEdyZWF0IHRhbGsuR2VuZGVyIGRvZXMgbWF0dGVyIGluIHRoaXMgY29udGV4dC4gCkV2ZW50dWFsbHkgaXQgZ290IHRvIHRoZSBwb2ludCB3aGVyZSBzaGUgZGVjaWRlZCBzaGUgd2FudGVkIHRvIGVuZCB1cCBsaXZpbmcgY2xvc2VyIHRvIGhvbWUuIApMZWFmcyBzdGFyIFBoaWwgS2Vzc2VsIGlzIG9mdGVuIGNvdW50ZWQgb24gdG8gYmUgdGhlIGRpZmZlcmVuY2UgbWFrZXIsIGJ1dCBoZSB0b29rIG9ubHkgZml2ZSBzaGlmdHMgaW4gdGhlIHNlY29uZCBhbmQgc2l4IGluIHRoZSB0aGlyZCBmb3IgYSB0b3RhbCBpY2UgdGltZSBvZiAxNToyNy4gQ2FybHlsZSBqdWdnbGVkIGhpcyBsaW5lcyBpbiB0aGUgdGhpcmQgcGVyaW9kLCBwcm9tb3RpbmcgQ29sdG9uIE9yciB0byBwbGF5IGFsb25nc2lkZSBLYWRyaSBhbmQgUmF5bW9uZCwgd2hpbGUgS2Vzc2VsIHdhcyBhIG5vbiBmYWN0b3IuLiAKVGhlIHNhbWUgcHJpY2VzIGFuZCBzZXJ2aWNlcyB3ZXJlIGFsbGVnZWRseSBvZmZlcmVkIGFnYWluIHRvIGFuIHVuZGVyY292ZXIgYWdlbnQgb24gTWF5IDE3LgpUaGUgcmljaCBkbyBnZXQgcmljaGVyLiAKWW91IG11c3QgYmUgYW4gYWN0aXZlIGFuZCBwYXJ0aWNpcGF0aW5nIG1lbWJlciBvZiBvdXIgY29tbXVuaXR5IGJlZm9yZSB5b3UgYWxsb3dlZCB0byBsaW5rLiAKVGhleSBhcmUgd2VsbCBvbiB0aGVpciB3YXksIGZvciB0aGV5IG93biB0aGVpciBob21lIHdpdGggbm8gbW9ydGdhZ2UuIFRoZSBwcm9ibGVtIGlzIHRoYXQsIGFsdGhvdWdoIHRoZWlyIHByZXNlbnQgZmluYW5jZXMgYXJlIGluIGV4Y2VsbGVudCBzaGFwZSwgdGhleSBoYXZlIHlldCB0byBidWlsZCBzdWZmaWNpZW50IHNhdmluZ3MgdG8gbWFrZSB0aGVpciBwbGFuIHdvcmsgc3RhcnRpbmcgaW4gMTYgeWVhcnMuIFRoZXkgaGF2ZSAkMzU1LDAwMCBpbiBSUlNQIGFuZCBURlNBIHNhdmluZ3MsICQ2OCwwMDAgaW4gdGhlaXIgY2hpbGRyZW4gUmVnaXN0ZXJlZCBFZHVjYXRpb24gU2F2aW5ncyBQbGFuLCBhbmQgYSBmYWlybHkgZXhwZW5zaXZlIHdheSBvZiBsaWZlIHdpdGggdGhyZWUgY2FycywgYW5kIGEgJDEyLDAwMCBhbm51YWwgZ29sZiBjbHViIG1lbWJlcnNoaXAuIApBc3NvY2lhdGUncyBEZWdyZWVMUE5zIGNhbiByZWdpc3RlciBmb3IgYW4gTFBOIHRvIFJOIGNvdXJzZSBhdCBhIGNvbW11bml0eSBjb2xsZWdlLiBUaGUgbGVuZ3RoIG9mIHRoZSBwcm9ncmFtIHZhcmllcyBieSBzY2hvb2wgYnV0IHR5cGljYWxseSByYW5nZXMgZnJvbSB0d28gdG8gZm91ciBzZW1lc3RlcnMuIApBbGV4IGpvaW5lZCBDcmltZSBpbiBTdGVyZW8uIApDb21wYXJleiBjZSBxdWUgdm91cyBhdmV6ICBnYWduZXIgZXQgY2UgcXVlIHZvdXMgYXZleiAgcGVyZHJlIGRhbnMgbGUgcG90IHBvdXIgdm91cyBhaWRlciAgcHJlbmRyZSBjZXR0ZSBkY2lzaW9uLiAKVGhlcmUgSXMgQW5vdGhlciBDYXRlZ29yeSBPZiBQbGF5ZXJzIFdobyBCZWxpZXZlIEluIFdpbm5pbmcgVGhlIEdhbWUgQnkgSG9vayBPciBDcm9vayBCeSBTaW1wbHkgVXNpbmcgU3B5IFBsYXlpbmcgQ2hlYXRpbmcgTWFya2VkIENhcmRzLiAKQW5kIGFueSB0cnVlIGV4cG9zdXJlIGlzIGVhc2lseSBqdXN0IGJydXNoZWQgb2ZmLCBhbmQsIHNpY2tlbmluZ2x5LCBvZnRlbiB3ZWxsIHJlcGVhdGVkIGJ5IHRoZSBnZW5lcmFsIHB1YmxpYywgd2l0aCB0aGUgYmFsZGx5IGN5bmljYWwgIm9uZSBiYWQgYXBwbGUiIHBsZWEuLiAKSSBjbG9zZWQgdGhhdCBhY2NvdW50IGFuZCBvcGVuZWQgYW5vdGhlci4gCldoeT8gQmVjYXVzZSBpdCBjcmVhdGluZyBhbmltb3NpdHkgYmV0d2VlbiB1c2VycyBhbmQgbW9kcyB0aGF0IHdvdWxkbiBiZSB0aGVyZSB3aXRob3V0IGl0LiAKU29tZSBhbnRpIG51dHJpZW50cyAobGlrZSBsZWN0aW5zKSBhcmUgYXQgbGVhc3QgcGFydGlhbGx5ICJkaXNhcm1lZCIgYnkgaXQuIApQYXQgVGlsbG1hbiBmb3IgVGlsbG1hbiwgd2hvIHdhcyBraWxsZWQgaW4gYWN0aW9uIGluIEFmZ2hhbmlzdGFuIEFwcmlsIDIyLCAyMDA0LCBhdCB0aGUgU2FuIEpvc2UgTXVuaWNpcGFsIFJvc2UgR2FyZGVuIE1heSAzLCAyMDA0IGluIFNhbiBKb3NlLCBDYWxpZm9ybmlhLiBUaWxsbWFuIHR1cm5lZCBkb3duIGEgbHVjcmF0aXZlIE5GTCBjb250cmFjdCB0byBzZXJ2ZSB3aXRoIGFzIGEgVVMgQXJteSBSYW5nZXIuIFRoZSBpbnN0aXR1dGUgaXMgbG9jYXRlZCBpbiBQaG9lbml4IGFuZCB0aGUgJ011aGFtbWFkIEFsaSBBd2FyZHMnIGFyZSBhIHdheSB0byBhY2tub3dsZWRnZSBsZWFkZXJzIGluIHRoZSBzcG9ydHMsIGVudGVydGFpbm1lbnQgYW5kIGJ1c2luZXNzIGNvbW11bml0aWVzIHdobyBiZXN0IHJlcHJlc2VudCB0aGUgcXVhbGl0aWVzIGFzc29jaWF0ZWQgd2l0aCBBbGkncyBmaWdodCB0byBmaW5kIGEgY3VyZS4gCkluIFNlcHRlbWJlciwgVGhlIFN1bmRheSBBZ2UgaGFkIGFwcGxpZWQgZm9yIGFjY2VzcyB0byB0aGUgZm91bmRhdGlvbiBhbm51YWwgcmVwb3J0cyB1bmRlciBhbiBvYnNjdXJlIGRpc2Nsb3N1cmUgcHJvdmlzaW9uIG9mIFZpY3RvcmlhIEZ1bmRyYWlzaW5nIEFjdC4gUmVmdXNpbmcgdG8gcmVsZWFzZSB0aGVtIHdpdGhpbiAyMSBkYXlzIHdvdWxkIHB1dCB0aGUgZm91bmRhdGlvbiBpbiBicmVhY2ggb2YgdGhlIGxhdywgbGVhZGluZyB0byBwb3RlbnRpYWwgcHJvc2VjdXRpb24gYW5kIGEgcHVibGljIHJlbGF0aW9ucyBtZXNzLiAKTmV3Y2FzdGxlIEhlcmFsZEFwcmlsIDI4IDIwMTggICAxMDozNUFNLiAKIkkndmUgZ290IGEgY291cGxlIG9uIHRoZSBsaW5lIG5vdyB0aHJvdWdoIDEwIG9yIDE1IHR3ZWV0cyB3aG8gc3RpbGwgaGF2ZW4ndCBmaWd1cmVkIGl0IG91dC4gQSBsb3QgSSd2ZSByZXBsaWVkIHRvIG9uY2UgYW5kIHRoZXkgcmVwbHkgYW5kIHNheSAnSSBjYW4ndCBiZWxpZXZlIHlvdSBzZW50IHNvbWV0aGluZyBiYWNrJyBhbmQgdGhlbiBhIGZldyB3aG8gaGF2ZSByZSB0d2VldGVkIGFuZCBzYWlkIGxvb2sgYXQgdGhpcyByaWRpY3Vsb3VzIHRoaW5nIENocmlzIFdhbGxhY2Ugb2YgRm94IE5ld3Mgc2FpZC4iLiAKTG9jYXRlZCBiZXR3ZWVuIEFSSUEgUmVzb3J0IENhc2lubyBhbmQgQmVsbGFnaW8sIFZkYXJhIG9mZmVycyBhY2Nlc3MgdG8gYWxsIG9mIHRoZSBlbnRlcnRhaW5tZW50LCBnYW1pbmcsIHNob3BwaW5nLCBkaW5pbmcgYW5kIG5pZ2h0bGlmZSBhdCBDaXR5Q2VudGVyIGFuZCBpbiBMYXMgVmVnYXMsIHdoaWxlIGFsc28gcHJvdmlkaW5nIGEgcmV0cmVhdCBmcm9tIGl0IGFsbC4KU3Bva2VuIGF1ZGlvIChwb2RjYXN0cyksIDIuIHJhY2luZyBnYW1lcyAoaSBsaWtlIHRoZW0gbG91ZCEpLCAzLiBuZXRza3kgZXRjYW1wIG11c3QgaGF2ZSAzLjVtbSBpbnB1dCwgb3B0aWNhbCBpbnB1dCwgYmx1ZXRvb3RoLCAzLjVtbSBvdXRwdXRzcGVha2VycyB3aWxsIHByb2JhYmx5IGJlIDYgZnQgYXdheSwgcm9vbSBzaXplIGlzIG1lZGl1bSAoMTJ4MTQpIDIgcG9pbnRzICBzdWJtaXR0ZWQgNSBkYXlzIGFnb0l0IGxvb2tzIGxpa2UgdGhlcmUgYWxsIGtpbmRzIG9mIGdvb2QgYWR2aWNlIGhlcmUgYWxyZWFkeSwgc28gSSBqdXN0IGFkZHJlc3Mgb25lIHBvaW50OlRoZSBkaW1pbmlzaGluZyByZXR1cm4gaXMga2luZCBvZiBhbHdheXMgdGhlcmUuIApJIGNhbiBkZWZpbml0ZWx5IHJlbGF0ZSB0byB5b3UgcmVnYXJkaW5nIHRoaXMuIFRoZXJlIGlzIG5vdGhpbmcgd3Jvbmcgd2l0aCBzZXBhcmF0aW5nIHRoZXNlIHBhcnRzIG9mIHlvdXIgcGVyc29uYWxpdHkuIApCdXQgYmVmb3JlIHlvdSBzdGFydCBkb3duIHRoYXQgcm9hZCwga2VlcCBhIGZldyB0aGluZ3MgaW4gbWluZCB0byBoZWxwIHlvdSBnZXQgdGhlIG1vc3Qgb3V0IG9mIHlvdXIgcGxheSB0aW1lLiBGaXJzdCwgbWFrZSBzdXJlIHRoYXQgeW91IGNvbXBsZXRlbHkgdW5kZXJzdGFuZCBob3cgdGhlIGJvbnVzZXMgd29yay4gRXZlcnkgb25saW5lIGNhc2lubyBtdXN0IGhhdmUgY2VydGFpbiBzdGlwdWxhdGlvbnMgaW4gcGxhY2UgdG8gY3VyYiBwb3RlbnRpYWwgbG9zcyBhbmQgY3JlYXRlIGEgZmFpciBpbmNlbnRpdmUgZm9yIGV2ZXJ5b25lLiAKSG93ZXZlciwgbm90ZSB0aGF0IGluIHNvbWUgdmVyc2lvbnMgb2YgQ2FzaW5vIEhvbGRlbSB5b3UgbXVzdCBjaG9vc2UgdG8gQ2FsbCB0byB3aW4gdGhlIEFBIHNpZGUgYmV0OyBpZiB5b3UgY2hvb3NlIHRvIEZvbGQsIHlvdSB3aWxsIGFsc28gbG9zZSB0aGUgc2lkZSBiZXQuIApBVyBTZXJpZXMgMjogQWdhaW4gbm8gY29tcGxhaW50cyBoZXJlLiBJIHdpc2ggdGhleSBoYWQgYSBsb25nZXIgQXBwbGVDYXJlKyB3YXJyYW50eSBmb3Igc2NyZWVuIGRhbWFnZSBjYXVzZSBpdCdzIGEgd2F0Y2gsIGJ1dCB3aGF0ZXZlci4KVGhvc2UgdGhyZWUgdGhpbmdzIHNob3VsZCByZWR1Y2UgdGhlIHNtZWxsL3Rhc3RlIGJ5IDk1JS4gCjIpIFZpdGFtaW4gRCBpcyBhIGZhdCBzb2x1YmxlIHZpdGFtaW4gYW5kIGl0IGlzIHN0b3JlZCBpbiB5b3VyIGZhdCBjZWxscy4KTGFkeSBHYUdhKSwgR3JlYXRlc3QsIEhvbGx5d29vZCBbTGl2ZUF0IHRoZSBCaXR0ZXIgRW5kIDEvMjAvMDZdICxTb21ldGltZXMgLiAKSXQncyB0aGUgc2NpZW50aWZpYyBlcXVpdmFsZW50IG9mIGZha2UgbmV3cywgYW5kIHRoZXJlJ3Mgc28gbWFueSBwZW9wbGUgd2hvIGhhdmUgcnVzaGVkIHRvIHBhc3MganVkZ2VtZW50IG9uIGl0IGFuZCBhcmUgZXhoYXVzdGluZyBpdC4gSnVzdCByZWFkIHRocnUgdGhlIGNvbW1lbnRzISBJdCdzIHRoZSBlcGl0b21lIG9mIGN1cnJlbnQgc3RhdGUgb2YgY2xpbWF0ZSBzY2llbmNlLlRoZXJlJ3MgcGxlbnR5IG9mIHBlb3BsZSB3aG8gYXJlIHByb21pbmVudCBzY2llbnRpc3RzIHdobyBoYXZlIGJlZW4gY2xpbWF0b2xvZ2lzdHMgdGhlaXIgZW50aXJlIHByb2Zlc3Npb25hbCBsaXZlcyB3aG8gYXJlIHNheWluZyBzb21ldGhpbmcgdmVyeSBkaWZmZXJlbnQgdGhlbiB0aGUgaGFuZCBzZWxlY3RlZCBDQUdXIGNyb3dkIGF0IE5PQUEsIE5BU0EsIGFuZCB3b3JzdCBvZiBhbGwgSVBDQy4gCkkgbm90IGdvbm5hIHN1Z2FyY29hdCBpdCB0byBhdm9pZCBodXJ0aW5nIHBlb3BsZSBmZWVsaW5ncy4gQWxzbywgdGhpcyBwb3N0IGlzbiB0aGUgcmVhc29uIHRoZSBGR0MgaGF0ZXMgdXMuIApQaGlsIGFsd2F5cyBsb29rZWQgZm9yd2FyZCB0byB0aGUgZ29vZCB0aW1lcyB3aXRoIGhpcyBzaWduYXR1cmUgZ3Jpbi4gClRoZXNlIGJvZGllcyAibmVlZCIgdG8gYmUgZml4ZWQ7IHRoZSBzdXJnZXJ5IG9uIHRoZW0gaXMgInJlY29uc3RydWN0aXZlIiByYXRoZXIgdGhhbiAiY29zbWV0aWMuIiBBZ2luZyB3aGl0ZSB3b21lbiwgaG93ZXZlciwgY29tZSBpbiBvdmVyIGFuZCBvdmVyIGZvciB0aGUgc2lnbnMgb2Ygb3JkaW5hcnkgdWdsaW5lc3MgIHNhZ2dpbmcgYnJlYXN0cywgd3JpbmtsZXMsIHR1bW1pZXMgdGhhdCBidWxnZSwgYW5rbGVzIHRoYXQgYXJlIHNvIHN0dXJkeSBhcyB0byBiZSB0YW5rbGVzLCBldmVuIHZhZ2luYXMgdGhhdCBzYWcuLiAKTm90IHRoZSBhbG1pZ2h0eSBydXBlZSwgYnV0IHRoZSBhbG1pZ2h0eSBkb2xsYXIuIEFuZCBjYXBpdGFsaXN0IFBha2lzdGFuIGlzIGFzIGtuZWUgZGVlcCBpbiBlbGl0ZSBwYXRyb25hZ2UgcG9saXRpY3MgYXMgdGhlIFBQUCBpcy4gClNvIG5vdyBjb21lcyBhIHJhY2UgYWdhaW5zdCB0aGUgY2xvY2sgb3IgaXMgdGhhdCBldmVuIHRydWU/IHRvIEphbi4gMTksIHdoZW4gdGhlIE5DQyBpcyB0byBvZmZpY2lhbGx5IHRlcm1pbmF0ZSB0aGUgYWdyZWVtZW50IHdpdGggUmVuZGV6Vm91cyBMZUJyZXRvbiBhbmQgcHV0IGZvdXIgeWVhcnMgb2YgZWZmb3J0IG9uIGEgc2hlbGYuIApUaGUgZmlyc3Qgc3BlbGwgTWVybGUgY2FzdCBpbiB0aGUgU3VmZmVyaW5nIEdhbWUgYXJjIHdhcyBtaW5vcmx5IHdlYWtlbmVkIChoZWFsIG9mIDIxIHdlYWtlbmVkIHRvIDE5IG91dCBpbiB0aGUgRmVsaWNpdHkgV2lsZHMpLiBJdCB3YXNuIHVudGlsIHRoZSBlbmQgb2YgdGhlIGFyYyBhbmQgdGhlIGJlZ2lubmluZyBvZiB0aGUgcmV1bmlvbiB0b3VyIHRoYXQgaGlzIHBvd2VycyB3ZXJlIHRlbXBvcmFyaWx5IGN1dCBvZmYudXJ1dGFwdSAgNSBwb2ludHMgIHN1Ym1pdHRlZCAxMCBkYXlzIGFnb0kgcmVhbGx5IGFtIGVuam95aW5nIHRoZSBzdG9yeSwgYnV0IGluIGFjdGlvbiBzY2VuZXMgdGhlcmUgbm8gbW9tZW50dW0gYXQgYWxsLiAKTWlrZSBkaWQgbWFrZSBhIG1pc3Rha2UsIGhlIGEgYW50aSBoZXJvIGluIHRoZSBzZW5zZSBoZSBhbiBob25vcmFibGUgdGhpZWYsIGJ1dCBoYXMgdG8gd2FsayBhIGxpbmUgYmV0d2VlbiBsb3lhbHR5IGFuZCB3aGF0IHJpZ2h0LiBIZSBkaWQgYSBsb3Qgb2Ygd2hhdCB3YXMgcmlnaHQsIHNhdmVkIHRoZSB3aWZlLiBIb3dldmVyIGhlIGRpZCBoYXZlIGEgY2hhbmNlIHRvIGxldCBoaW0gZ28sIG5vIG9uZSB3b3VsZCBoYXZlIHByb2JhYmx5IGJlZW4gdGhlIHdpc2VyLGJ1dCBpdCB3YXMgc21hcnQgZm9yIGhpbSB0byBraWxsIFdlcm5lciwgaGUgcmVhbGx5IHBsYXlpbmcgd2l0aCBmaXJlIHRvIGV2ZW4gY3Jvc3MgR3VzIGEgYml0Li4gCi8vRWRpdDogYSBsb3Qgb2YgZm9sa3MgYXJlIHJlcGx5aW5nIHNheWluZyB0aGF0IEkgd3JvbmcuIEkgd29yayBpbiBtZWRpY2FsIGRldmljZXMgYW5kIEkgY2FuIHNheSBmb3Igc3VyZSB0aGF0IHdlIGRvbiBsb3NlIG1vbmV5IG9uIG91ciBwcm9kdWN0cywgYW5kIG1hbnkgb3RoZXIgcGVvcGxlIGFyZSBpbiBzaW1pbGFyIHNpdHVhdGlvbnMgd2l0aCB0aGVpciBzdWJmaWVsZHMuIE1heWJlIEkgbWlzcmVtZW1iZXJpbmcuIApUaGluayBhYm91dCB0aGUgcmFuZG9tIGpvYiBhbmQgaG93IG11Y2ggdGhhdCAiY29udHJpYnV0ZXMgdG8gc29jaWV0eS4iIEZ1cnRoZXIsIHRoaW5rIGFib3V0IGhvdyBtdWNoIG9mIHlvdXIgcGVyc29uYWwgY29udHJpYnV0aW9ucyBjb21lIGZyb20gdGhpbmdzIGV4dGVybmFsIHRvIHlvdXIgY2FyZWVyLiAKSGFrb2IgQXZldHlhbiBob2xkcyBhIHR3byBoZWFkZWQgY2FsZiBpbiB0aGUgQXJtZW5pYW4gdmlsbGFnZSBvZiBTb3RrLCBvbiBKYW51YXJ5IDI4LCAyMDExLiBUaGUgYmFieSB0aGUgZmlyc3QgdG8gYmUgYm9ybiBvZiB0aGVpciBzcGVjaWVzIGluIGNhcHRpdml0eSBpbiB0aGUgem9vLiBUaGUgZ2liYm9uLCBib3JuIG9uIFdlZG5lc2RheSB3ZWlnaGluZyBiZXR3ZWVuIDMwMCAgIDQwMGcsIGhhcyB5ZXQgdG8gYmUgc2V4ZWQgYW5kIG5hbWVkLiAKT3ZlcnZpZXcgZm9yIGFtYnJvc2UKVG9kYXkgaXMgbXkgMjQ1dGggYmlydGhkYXkgYW5kIEkgZG9uJ3Qga25vdyB3aHkgYnV0IHllcyBJIHN0aWxsIGtlZXAgdHJhY2suIEh1bWFuaXR5IGlzIGJ1aWxkaW5nIHRoZSB3b3JsZCBhbmV3IGFuZCBJLCBhbG9uZyB3aXRoIDk5IG90aGVyIGltbW9ydGFscyBoYXZlIHNwbGl0IHVwIHRoZSB3b3JsZCB0byBydWxlIGFzIHdlIHNlZSBmaXQuIApFbiBkcm9pdCwgbCdhYnNlbmNlIGNvcnJlc3BvbmQgIGxhIGRpc3Bhcml0aW9uIHNhbnMgYXZvaXIgZG9ubiBkZSBub3V2ZWxsZXMgOiBsYSBwZXJzb25uZSBuJ2VzdCBwYXMgcHJzZW50ZSBsIG8gZWxsZSBlc3QgY2Vuc2UgdHJlIChjaGV6IGVsbGUsIGF1IHRyYXZhaWwsIGVuIHJlbmRleiB2b3VzLCBldGMuKS4gRHMgbG9ycywgb24gbmUgcGV1dCBwYXMgc2F2b2lyIHNpIGxhIHBlcnNvbm5lIGVzdCBtb3J0ZSBvdSBzaSBlbGxlIGVzdCB2aXZhbnRlLiBDZXR0ZSBzaXR1YXRpb24gdGFpdCByZ2llIHBhciBkZXMgZGlzcG9zaXRpb25zIGNvbXBsZXhlcyBkYXRhbnQgZGUgMTgwNCAocGFzIGRlIGRpc3NvbHV0aW9uIGR1IG1hcmlhZ2UsIHBhcyBkZSBzdWNjZXNzaW9uIG91dmVydGUpLCBhdmFudCBsYSByZm9ybWUgZGUgbGEgbG9pIGR1IDI4IGRjZW1icmUgMTk3NyBxdWkgZGltaW51ZSBsZXMgZGxhaXMgZXQgaW5zdGF1cmUgdW5lIGRpc3RpbmN0aW9uIGVudHJlIGwnYWJzZW5jZSBwcnN1bWUgZXQgZGNsYXJlLiAKVGhlIG5leHQgbW9ybmluZywgdGhleSBwb3N0ZWQgdGhlIHJ1bGVzIGFuZCBvbmUgc2FpZCB0aGF0IGlmIGl0IHdhcyBkb3duIHRvIHR3byBwZW9wbGUsIHRob3NlIHBlb3BsZSBjb3VsZCBhZ3JlZSB0byBzcGxpdCB0aGUgcG90LiBJIG1hZGUgYSBqb2tlIGFib3V0IHRoaXMgYmVpbmcgInRoZSBmbGVlY2luZyBvZiBBbWVyaWNhIiB0aGF0IEkgd2FzbiBnaXZlbiB0aGF0IG9wdGlvbi4gT25lIG9mIHRoZSBicmlzdGx5IG1lbiBzYWlkICJZb3Ugd2VyZSB0b2xkIHRoZSBydWxlcyBhaGVhZCBvZiB0aW1lLiIgSSBtYWRlIHN1cmUgdG8gc2F5IEkgd2FzIGpva2luZyBhbmQgdGhhdCB0aGUgb3RoZXIgZ3V5IHdvbiBmYWlyIGFuZCBzcXVhcmUsIGFuZCByZWl0ZXJhdGVkIHdoYXQgYSBncmVhdCB0aW1lIEkgaGFkLi4gCkdlc3R1cmVzIGFuZCBwb3N0dXJpbmcgYXJlIGVhc3kgdG8gd2FsayBhd2F5IGZyb20uIApXZSBxdWl0ZSBpbiBzaG9jayBhbmQgc3VycHJpc2UsIGhlIGxvb2tlZCB1cCB0byBmaW5kIGEgbG90IG1vcmUgbmVnYXRpdmUgcmV2aWV3cyB0aGFuIHRoZXJlIHVzZWQgdG8gYmUsIGFuZCB0aGV5IHNlZW0gdG8gYWxsIGJlIGFib3V0IHRoZSBzYW1lIHRoaW5nLCBub3Qgc3RhbmRpbmcgYmVoaW5kIHRoZSBjdXN0b21lciB3aGVuIHRoZSBzaGlwcGluZyBpcyBzaGl0dHkuIApBIERhaWx5IERpc3BhdGNoIG9mIFJlbGF0aW9uc2hpcCBhbmQgRGF0aW5nIEFkdmljZQpZYW5rZWVzMTAzMCB1ClRoZSBjaHVyY2ggdW5kZXJzdGFuZHMgdGhpcyBhbmQgdGhlIG1pc3Npb25hcmllcyBkbyB0by4gClNvIGlmIHlvdSByZW1lbWJlciwgb3IgaWYgc2hlIGdldHMgYSBwaW5raXNoL3B1cnBsZSBmb3Jlc3Qgd2l0aCBhIGRlZXIgcG9zdGNhcmQgdGhhdCBzaGUgY2FudCByZWFkOyBqdXN0IGxldCBoZXIga25vdyBpdCBnbG93cyB3aGVuIHlvdSBjaGFyZ2UgaXQgaW4gbGlnaHQuLiAKSW5zdGVhZCBvZiBzZWVpbmcgaXQgYXMgYW5vdGhlciBjcmlzaXMgdG8gbWFuYWdlLCBsb29rIGF0IGl0IGFzIGFuIG9wcG9ydHVuaXR5IHRvIHNob3cgeW91ciBlbXBsb3llZSBob3cgbXVjaCB5b3Ugd2FudCB0aGlzIG9yZ2FuaXphdGlvbiB0byBiZSBhIGZ1bGZpbGxpbmcgcGxhY2UgdG8gd29yay4uIApXb29keSBCYWlsZXkgc2F5cyB0aGUgYm9hdCByYWNpbmcgbWF5IHJldHVybiBpbiB0aGUgZnV0dXJlLCBlc3BlY2lhbGx5IGlmIHRoZSBlY29ub215IGNvbnRpbnVlcyB0byByZWJvdW5kLiBIb3dldmVyLCB0aGlzIHllYXIncyBmaW5hbmNpYWwgbnVtYmVycyBkaWQgbm90IGp1c3RpZnkgc3RhZ2luZyB0aGUgZXZlbnRzLgpPcGluaW9ucyBvbiAzeCB2cyAyeCB3ZWVrIHNxdWF0dGluZz8gSSBoYXZlIGJlZW4gZG9pbmcgM3ggcGVyIHdlZWsgc3F1YXR0aW5nIHRoZSBsYXN0IGZldyBtb250aHMgYW5kIHdoaWxlIGl0cyBibGFzdGVkIG15IHNxdWF0IGhpZ2hlciwgdGhlIGxhc3QgZmV3IHdlZWtzIGhhdmUgZmVsdCBsaWtlIGl0cyBzbG93aW5nIGRvd24gYW5kIGltIGdldHRpbmcgcGlubmVkIGF0IGFyb3VuZCB0aGUgc2FtZSB3ZWlnaHQuIE15IHNlc3Npb25zIGFyZSBkYW0gaGlnaCBpbiB2b2x1bWUgKCsgYWNjZXNzb3JpZXMpLiAKSXQgaXMgYWxzbyBhIHNwb3J0IHRoYXQgbGVuZHMgaXRzZWxmIHZlcnkgd2VsbCB0byBlbmdhZ2luZyB2aWV3ZXJzLiBJdCdzIG5pY2UgdG8gd2F0Y2gsIHNvIHdoZW4gSSBnb3QgdGhlIG9mZmVyIHRvIHdvcmsgd2l0aCB0aGUgUG9rZXIgU3BvcnRzIExlYWd1ZSBJIHNhdyBpdCBhcyBhIGdyZWF0IG9wcG9ydHVuaXR5LgpOb3cgdGhlIFNFQyBpcyBhbGxlZ2luZyB0aGF0IE11c2sgYnJva2UgdGhlIHRlcm1zIG9mIHRoYXQgYWdyZWVtZW50IHdpdGggYSBGZWIuIDE5IHR3ZWV0IHByb2plY3RpbmcgdGhhdCBUZXNsYSB3b3VsZCBtYWtlIGFib3V0IDUwMCwwMDAgY2FycyB0aGlzIHllYXIuIEFib3V0IDQgMS8yIGhvdXJzIGFmdGVyIHRoYXQgdHdlZXQsIE11c2sgY29ycmVjdGVkIGhpcyBzdGF0ZW1lbnQgLCBzYXlpbmcgaGUgbWVhbnQgdGhhdCBUZXNsYSBoYWQgc3RhcnRlZCB0byBtYW51ZmFjdHVyZSBjYXJzIGF0IGEgd2Vla2x5IGNsaXAgdGhhdCB3b3VsZCB0cmFuc2xhdGUgaW50byA1MDAsMDAwIGNhcnMgZHVyaW5nIHllYXJsb25nIHBlcmlvZCwgYnV0IG5vdCBuZWNlc3NhcmlseSBmb3IgY2FsZW5kYXIgMjAxOS4uIApIb3dldmVyLCBNciBBY2h0ZXJzdHJhYXQgc2F5cyB0aGUgYXVkaXQgZm91bmQgdGhlIGd1aWRlbGluZXMgd2VyZSAidmFndWUgb24gd2hhdCBjYW4gYmUgZnVuZGVkIi4gCkl0IGZlbHQgbGlrZSB0aGUgcG93ZXIgYnV0dG9uIHRoaW5neSBvbiBhIGNvbXB1dGVyLiBZb3UgcGx1ZyB0aG9zZSB0aW55IHBsdWdzIGludG8gdGhlaXIgcGlucyBhbmQgaWYgeW91IGZ1Y2sgdXAgaXQganVzdCBkb2VzbiB3b3JrIHByb3Blcmx5IGFuZCB5b3Ugc3dpdGNoIHRoZW0gYXJvdW5kIGFuZCBsb29rIGF0IHRoZSBtYW51YWwgb25jZSBhZ2FpbiBhbmQgdGhlcmUgeW91IGdvIG5vIGhhcm0gZG9uZS4uIApJdCBhbiBhY2tub3dsZWRnZW1lbnQgb2Ygc29tZSBvZiBvdXIgYmFzZXN0IG5hdHVyZTogdG8gc2VlayBzb21ldGhpbmcgYmV0dGVyIHRoYW4gb3VyIGN1cnJlbnQgc3RhdGlvbi4gVG8gcmVhY2ggYXMgZmFyIGFzIG91ciBhcm1zIHdpbGwgYWxsb3csIGFuZCB0aGVuIHRvIGF0dGVtcHQgdG8gcHVzaCBldmVuIGZ1cnRoZXIuaHVtYW4gY2FwYWJsZSBvZiBsaWZ0aW5nIGEgY2FyIG92ZXIgaXRzIGhlYWQgd2l0aG91dCBsZWF2aW5nIGhpcyByZXN0aW5nIGhlYXJ0IHJhdGUgd2hpbGUgc2ltdWx0YW5lb3VzbHkgY2FsY3VsYXRpbmcgb3JiaXRhbCB0cmFuc2ZlciB2ZWN0b3JzIHRvIHRoZSBtb29uLCBNYXJzLCBhbmQgYSB0b3VyIG9mIHRoZSBtb29ucyBvZiBKdXBpdGVyIGF0IHRoZSBzYW1lIHRpbWUgd291bGQgbm90IGxpa2VseSBiZSBjb250ZW50IHdpdGggaGVscGluZyBjaGlsZHJlbiB3aG8gY2FuIGJhcmVseSB0aWUgdGhlaXIgc2hvZXMgYXZvaWQgZWF0aW5nIHBhaW50IGNoaXBzLkkgcmVhbGl6ZSB0aGlzIG1heSBzZWVtIGxpa2UgYSBibGVhayBwb3J0cmF5YWwgb2YgaHVtYW5pdHksIGNvbnRyYXJ5IHRvIHRoZSBvdmVyYWxsIGJyaWdodG5lc3Mgb2Ygd2hhdCBodW1hbml0eSBoYXMgYmVjb21lLiAKQnV0IGl0J3Mgbm90IGluIHRoZSBwb3dlciBvZiBteSBnaWZ0LiAKRWFjaCByZXNlcnZlIHByb21vdGVzIHNvbHV0aW9ucyByZWNvbmNpbGluZyB0aGUgY29uc2VydmF0aW9uIG9mIGJpb2RpdmVyc2l0eSB3aXRoIGl0cyBzdXN0YWluYWJsZSB1c2UuIApVc2VydXIgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMTQgZGF5cyBhZ28KVGhlIHJlYXNvbiBmb3IgdGhpcyBpcyBjb3N0ICAgcHJvdmlkaW5nIG1lbW9yeSBpbnNpZGUgdGhlIENQVSBpcyBoaWRlb3VzbHkgZXhwZW5zaXZlLCB0aGVyZSBpcyBhIGxpbWl0IHRvIGhvdyBtdWNoIGNhbiBiZSBwdXQgdGhlcmUsIGFuZCB0aGUgYW1vdW50IGNhbiBuZXZlciBjaGFuZ2UuIApTaW5jZSBpdCdzIHZpZGVvIHBva2VyLCB3ZSBjYW4gYXNzdW1lIHRoYXQgdGhlIG9ubHkgY2FyZHMgZHJhd24gYXJlIHRoZSBvbmVzIHlvdSBzdGFydGVkIHdpdGguIFRoZXJlIGFyZSBleGFjdGx5IDQ3IGNhcmRzIGxlZnQgaW4gdGhlIGRlY2suIFRoZXJlIGFyZSA2IHNlcmllcyBvZiBkcmF3cyB5b3UgY2FuIGdldCB0aGF0IHdpbGwgZ2l2ZSB5b3UgYWNlLCBxdWVlbiwgYW5kIDEwICgzISwgb3IgM3gyeDEpLiBUaGlzIHdvcmtzIG91dCB0byAxIGluIDE2LDIxNSAuIChGdWxsIEFuc3dlcikKTm8gbWF0dGVyIHdoYXQgeW91ciBtZWRpY2FsIGNvbmNlcm4gaXMsIGNoZWNrIG91dCBvdXIgc2l0ZS4gCkNlcnRhaW5zIHRyb3R0b2lycyAocnVlcyBNeXJoYSwgTG9uLCBDYXYsIGRlcyBQb2lzc29ubmllcnMuKSBzb250IGltcHJhdGljYWJsZXMgcG91ciBsZXMgcGl0b25zLiAKQnV0IHdlIGRvIG9mZmVyIGEgc3BlY2lhbCB0YWJsZSBnYW1lcyBib251cyBmb3IgQmxhY2sgSmFjaywgUG9rZXIsIFJvdWxldHRlIGFuZCBWaWRlbyBQb2tlcnMgdG8gcmVndWxhciBwbGF5ZXJzLiAKT3VyIGhvdXNlIGlzIGNvbnZlbmllbnRseSBsb2NhdGVkIGluIFdlc3QgRmVybmllIGp1c3QgMiBtaW5zIGZyb20gdGhlIG1vdW50YWluIGhpdGNoaW5nIHBvaW50IGFuZCBvbmx5IDEwIG1pbiB3YWxrIHRvIGRvd250b3duLlRoZSBob3VzZSBpcyBmdWxseSBmdXJuaXNoZWQgd2l0aCBraXRjaGVuLCB3YXNoaW5nIG1hY2hpbmUsIGR1Y3RlZCBoZWF0aW5nLCBpbnRlcm5ldCwgcG9rZXIgc2V0LCBkcnlpbmcgcm9vbSwgYW1wbGUgc3RvcmFnZSBzcGFjZS5CYXNlbWVudCByb29tIGlzIG5vdCBmdXJuaXNoZWQuIApUaGUgY29uZnJvbnRhdGlvbiB0aGF0IGVuc3VlZCBiZWNhbWUgb25lIG9mIHRoZSBwaXZvdGFsIGVwaXNvZGVzIG9mIHRoZSBDb2xkIFdhci4uIApUbyBtZSB0aGlzIGlzIG9kZC4gClRoZSBlYXNpZXN0IHdheSB0byByYW5rIGxvdyBoYW5kcyBpcyB0byByZWFkIHRoZW0gYmFja3dhcmQgYXMgYSBudW1iZXIgd2l0aCB0aGUgbG93ZXN0IG51bWJlciB3aW5uaW5nLiBGb3IgZXhhbXBsZTogMiAzIDQgNiA4IHdvdWxkIGJlIHJlYWQgOCA2LCA0IDMgMiBhbmQgMyA0IDUgNiA3IHdvdWxkIGJlIHJlYWQgNyA2LCA1IDQgMywgd2hpY2ggd291bGQgYmUgdGhlIGxvd2VyIG9mIHRoZSB0d28gaGFuZHMuIE1hbnkgdGltZXMgdHdvIHBsYXllcnMgd2lsbCBoYXZlIHRoZSBzYW1lIGxvdyBoYW5kIGFuZCBzcGxpdCB0aGUgbG93IGhhbGYgb2YgdGhlIHBvdC4gVGhpcyBpcyBvZnRlbiBjYWxsZWQgImdldHRpbmcgcXVhcnRlcmVkLiIKWmNhc2ggaGFzIHRoZSBzYW1lIGxpbWl0ZWQsIGNhcHBlZCBzdXBwbHkgYXMgQml0Y29pbiBhdCAyMSBtaWxsaW9uIGNvaW5zLiBJdCBkZWZsYXRpb25hcnkgaW4gbmF0dXJlLiBUaGUgbmV4dCBoYWx2aW5nIHdpbGwgYmUgaW4gMjAyMC4gCk5vdywgd2UgbGl2ZSBpbiBhIHNvY2lldHkgd2hlcmUgbWFueSBvZiB1cyB3aG8gd2VyZSBib3JuIGluIHRoZSBsYXN0IDQwIHllYXJzIGNhbiBzZWUgdGhlIGZhdGFsIGZsYXcgb2YgdGhpcyBjb250aW51ZWQgd2F5IG9mIGxpdmluZy4gClRoZSByZXdhcmRzIG9uZSBzdGFuZHMgdG8gcmVhcCBhdCB3b3JrIHBlcnNvbmFsIGFuZCBwcm9mZXNzaW9uYWwgZ3Jvd3RoLCBoYXBweSBjbGllbnRzLCByZWNvZ25pdGlvbiBmcm9tIGEgYm9zcyBvciBjb2xsZWFndWUgYXJlIHNvbWV0aW1lcyBmYXIgYW5kIGZldyBiZXR3ZWVuLiBCdXQgd2hhdCBhYm91dCB0aG9zZSBjb21wYW5pZXMgd2hlcmUgdGhlIGRpc3RhbmNlIGlzIG5vdCBzbyBncmVhdCBiZXR3ZWVuIHRoZSBzd2VhdCB5b3UgcHV0IGludG8geW91ciBqb2IgYW5kIHRoZSBzYXRpc2ZhY3Rpb24gdGhhdCB5b3UgZ2V0IGRvaW5nIGl0PwpXZSBhbHNvIHRyeSB0byBhbnN3ZXIgdGhlIHF1ZXN0aW9uIG9mIGF0IHdoYXQgdGltZSBwb2ludCB0aGUgc2lnbmFsIGZvciBwcmVkaWN0aW5nIGlmIGEgcGxheWVyIHdpbGwgZm9sZCBpcyBzdHJvbmdlc3QuIFdlIHVzZSBzdGF0ZSBvZiB0aGUgYXJ0IEZBQ1MgQWN0aW9uIFVuaXQgZGV0ZWN0b3JzIHRvIGF1dG9tYXRpY2FsbHkgYW5ub3RhdGUgdGhlIHBsYXllcnMgZmFjaWFsIGV4cHJlc3Npb25zLCB3aGljaCBoYXZlIGJlZW4gcmVjb3JkZWQgb24gdmlkZW8uIAoyIGNlbnRzIG5iaWcgYmxpbmRzLkkgY2FuIGJlYXQgbXkgZnJpZW5kcyBvZiBob21lIGdhbWVzLCBvZiBzdGFrZXMgdGhhdCBhcmUgc29tZXRpbWVzIGhpZ2guIApBZ2FpbiwgaGUgaW1tZWRpYXRlbHkgYXR0ZW1wdGVkIHRvIHNlbGwgaXQsIGFza2luZyBmb3IgdHJpcGxlIHRoZSBwcmljZS4gWWV0IGhlIGZvdW5kIGEgYnV5ZXIgYW5kIHBvY2tldGVkIGEgMjAwJSBwcm9maXQuIEhlIGFsc28gZXBpdG9taXplZCBzdHJhdGVnaWMgaW50ZWxsaWdlbmNlOiBIZSBhY2N1cmF0ZWx5IGdyYXNwZWQgdGhhdCBzb21lIHRyYWRlcnMgd2VyZSBuYXZlLCBzbyBpdCBtYWRlIHNlbnNlIHRvIGJ1eSBhbiBvdmVyIHByaWNlZCBhc3NldCBiZWNhdXNlIGhlIGZvcmVzYXcgZmxpcHBpbmcgaXQgYXQgYW4gZXZlbiBoaWdoZXIgcHJpY2UuIApPdmVydmlldyBmb3IgbWFydHVzZmluZQpQb2tlcnRyYWNrZXIsIGhvbGRlbSBtYW5hZ2VyLCBhbmQgZHJpdmVodWQgYXJlIGN1cnJlbnRseSB0aGUgYmVzdCBvdXQgdGhlcmUuIEkgdXNlZCBhbGwgMyBub3csIGFuZCBjdXJyZW50bHkgbWFpbmx5IHVzZSBkcml2ZWh1ZC4gClNoZSBrbmV3IHdoYXQgSSB3YXMgYnV0IGZlbHQgbGlrZSBJIG1hZGUgaGltIGhhcHB5IHNvIGl0IGRpZG4gYm90aGVyIGhlci4gT25lIGRheSBJIHN0b3BwZWQgaGVhcmluZyBmcm9tIGhpbSwgaGUgd2FzIGEgcmVndWxhciBjbGllbnQgZm9yIG92ZXIgYSB5ZWFyIHNvIEkgd29uZGVyZWQgd2hhdCBoYWQgaGFwcGVuZWQuIFNvbWUgZ3V5cyBnZXQgYm9yZWQgYW5kIGZpbmQgYSBuZXcgZ2lybCBidXQgaW4gdGhpcyBjYXNlIGl0IHNlZW1lZCBvdXQgb2YgY2hhcmFjdGVyLi4gCkFub3RoZXIgbWFuIGV2ZW50dWFsbHkgcHV0IGEgcmVkIGJhbmRhbmEgb3ZlciB0aGUgdmljdGltIGZhY2UuSXQgaXMgdW5jbGVhciBmcm9tIHRoZSB3aXRuZXNzIHN0YXRlbWVudCB3aGV0aGVyIHRoZSB3b21hbiBkaWVkLlRoaXMgaXMgdGhlIHNlY29uZCBpbiBhIHNlcmllcyBvZiBpbnZlc3RpZ2F0aW9uIG1hdGVyaWFscyBtYWRlIHB1YmxpYyBhZnRlciBtZWRpYSBvcmdhbml6YXRpb25zLCBpbmNsdWRpbmcgQ05OLCB3ZW50IHRvIGNvdXJ0IHBldGl0aW9uaW5nIGZvciB0aGVpciByZWxlYXNlLi4gClRoYXQgbm90IGhvdyBpdCB3b3Jrcy4gCk9mdGVuIHRpbWVzIHRob3NlIHdobyBhcmUgaW4gdGhlIHN0cm9uZ2VzdCBwb3NpdGlvbiB0byBzdG9wIHN5c3RlbWljIHZpb2xlbmNlIGRvIG5vdCBzaW1wbHkgYmVjYXVzZSB0aGV5IHdhbnQgdG8gcGFydGljaXBhdGUgaW4gaXQuIEl0IG1heSB2ZXJ5IHdlbGwgYmUgYSBzdHJvbmcgcGFydCBvZiB3aGF0IGRyb3ZlIHRoZW0gdG8gdGhlIHBvc2l0aW9uIHRoZXkgYXJlIGluLiAKMTUgWWVhcnMgaW4gV2F5bmUgQ291bnR5IERlcHV0eQpGb3IgcmVmZXJlbmNlLCBJIGFsc28gaGF2ZSBkcml2ZW4gc3RpY2sgc2hpZnQgY2FycyBmb3IgdGhlIHBhc3QgOCB5ZWFycyBhbmQgbXkgY3VycmVudCBjYXIgd2FzIHN0aWNrLiAKV2VudCBpbiBpdCBzYXlpbmcgaWYgd2UgY291bGQgbWFrZSBvdXIgdGVhbSBiZXR0ZXIgb3IgaGVscCBvdXIgdGVhbSB3aXRob3V0IHRha2luZyBhbnl0aGluZyBvZmYgaXQgYW5kIGRvaW5nIGl0IGF0IGEgcHJpY2UgdGhhdCB3ZSB3ZXJlIGNvbWZvcnRhYmxlIHdpdGggdGhlbiBzdXJlIHdlIGxpa2UgdG8gZG8gaXQsIHNhaWQgRmxhbWVzIEdNIEJyYWQgVHJlbGl2aW5nLCB3aG9zZSB0ZWFtIG93bnMgdGhlIGJlc3QgcmVjb3JkIGluIHRoZSBXZXN0ZXJuIENvbmZlcmVuY2UuIFRob3NlIG9wcG9ydHVuaXRpZXMgd2VyZW4gdGhlcmUgZm9yIGl0LiAKSW4gdGhlIGNhc2Ugb2YgRGFzYW4sIG15IHNvbiwgb25lIG9mIHRoZSBhcmVhcyBvZiBoaXMgbGlmZSBhZmZlY3RlZCBieSB0aGlzIGRpc29yZGVyIG1hZGUgaGltIG9mZmljaWFsbHkgYSBub24gdmVyYmFsIGNoaWxkLiBOb3cgdGhlIHF1ZXN0aW9uIGlzOiAiSG93IHRvIGNvbW11bmljYXRlIHdpdGggYSBub24gdmVyYmFsIGNoaWxkPyIuIApXaW5uZXJzIG9mIHRoZSBhd2FyZCByZWNlaXZlIHJlY29nbml0aW9uIGFuZCBhIG1vbmV0YXJ5IGF3YXJkIGZyb20gdGhlIFZvbHVudGVlciBDZW50ZXIuLiAKU28geW91IGRvbid0IGxvc2UgdGhlbSBieSBmb2N1c2luZyBtb3JlIG9uIGNsYXNzLCBJTU8uIAonTWFkZSBpbiBDaGluYSAyMDI1JwpBIHF1aWNrIGNhbGN1bGF0aW9uIHNheXMgSSBoYXZlIGEgMTYlIGNoYW5jZSB0byBoaXQgbXkgc3RyYWlnaHQgaWYgSSBnbyB0byB0aGUgdHVybiwgYW5kIGEgMzIlIGNoYW5jZSB0byB3aW4gaWYgSSBnbyB0byB0aGUgcml2ZXIuIERlcGVuZGluZyBvbiB3aGF0IHlvdSdyZSBvcHBvbmVudCBpcyBob2xkaW5nLCBhbmQgd2hhdCB0aGV5IGhhdmUgaGFzIGFscmVhZHkgaGl0LCB5b3VyIG9kZHMgd2lsbCBjaGFuZ2UuIApRdWFudHVtY29vbmV5ICAxIHBvaW50ICBzdWJtaXR0ZWQgMSB5ZWFyIGFnbwpSb3VsZXR0ZSBoYXMgYmVlbiBjYWxsZWQgdGhlICJLaW5nIG9mIENhc2lubyBHYW1lcyIsIHBvc3NpYmx5IGJlY2F1c2UgaXQncyBhbiB1dHRlcmx5IHNraWxsIGZyZWUgcGFyb2R5IG9mIGV2ZXJ5b25lIHdobyBwbGF5cyBpdC4gSXQgd2FzIGludmVudGVkIGJ5IGdlbml1cyBwaHlzaWNpc3QgQmxhaXNlIFBhc2NhbCBpbiB3aGF0IGhlIHRoaW5rcyB3YXMgYSBmYWlsZWQgYXR0ZW1wdCB0byBjcmVhdGUgYSBwZXJwZXR1YWwgbW90aW9uIG1hY2hpbmUuIEhlIGRpZG4ndCBsaXZlIHRvIHNlZSB0aGUgd2hlZWwgY29udGludWFsbHkgcmUgc3B1biBieSB0aGUgaW5maW5pdGUgZW5lcmd5IHNvdXJjZSBvZiBodW1hbiBzdHVwaWRpdHksIHByb3ZpbmcgaGUnZCBhY3R1YWxseSBzdWNjZWVkZWQhLiAKT3ZlciB0aGUgd2Vla2VuZCwgSmFwYW5lc2UgcGxheWVycyBhbmQgZmFucyB3YXRjaGluZyBpdHMgbGF1bmNoIHRoZXJlIHNhdyBzdHJlYW1pbmcgZ28gZGFyaywgbm90aW5nIHRoYXQgTGVmdCBBbGl2ZSBpcyBhbHJlYWR5Li4gCkl0IHNlZW1zIHRoYXQgdGhpcyBpcyBhbiBhY3R1YWwgYmF0dGxlIHNjZW5lLCB3aGljaCB3YXMgYSB2ZXJ5IHVuY29tbW9uIHRoaW5nIGFtb25nIHdhciBwaG90b2dyYXBocyBmb3IgdGhlIEdyZWF0IFdhciBtb3JlIHNvIGZvciB0aGlzIGdyb3VwIG9mIHBob3RvZ3JhcGhzIChOZXdzIFBob3RvIFNlcnZpY2UpIHByb2R1Y2VkIGJ5IHBvb2wgcGhvdG9ncmFwaGVycyBmb3IgZXF1YWwgZGlzdHJpYnV0aW9uIGFtb25nIHN1YnNjcmliaW5nIG5ld3NwYXBlcnMgYW5kIHBlcmlvZGljYWxzLiAKQSBmZXcgdGltZXMsIEkgb2JzZXJ2ZWQgaGlzIHZvY2FsIHJlYWN0aW9uIHRvIGEgbmVpZ2hib3VyaG9vZCBjYXQgdHJ5aW5nIHRvIGdldCBpbnRvIHRoZSBob3VzZSB0aHJvdWdoIGFuIG9wZW4gd2luZG93LiBJJ20gc3RpbGwgbm90IHN1cmUgaWYgaXQgd2FzIGEgZ3JlZXRpbmcsIG9yIHNvbWUga2luZCBvZiB0ZXJyaXRvcmlhbCBjYWxsLCBidXQgdGhlIHNocmlla3MgYW5kIHN0cmFuZ2xlZCBjcmllcyBoZSBtYWRlIHdlcmUgZGVmaW5pdGVseSB1bmxpa2UgYW55dGhpbmcgSSdkIGhlYXJkIGZyb20gaGltIGluIG90aGVyIHNpdHVhdGlvbnMsIGFuZCBzb3VuZGVkIGFtYXppbmdseSBoYXVudGluZyBhbmQgdW5lYXJ0aGx5LiBJZiBvdGhlciBjYXRzIG1ha2Ugbm9pc2VzIGxpa2UgdGhhdCwgSSBjYW4gdW5kZXJzdGFuZCB3aHkgcGVvcGxlIGluIHRoZSBwYXN0IGFzc29jaWF0ZWQgZmVsaW5lcyB3aXRoIG9jY3VsdCBwcmFjdGljZXMuClRoaXMgaXMgZXNzZW50aWFsbHkgYSBodW1hbiByaWdodHMgaXNzdWUuIApHdWlsYmF1bHQgc2FpZCB0aGUgYWxsZWdhdGlvbnMgYWdhaW5zdCBQcnVkIHdobyBoYXMgbm90IGJlZW4gYXJyZXN0ZWQgb3IgY2hhcmdlZCB3aXRoIGEgY3JpbWUgYXJlIGFuZCBjb21wbGV4LiBTaGUgc2FpZCB0aGUgZ292ZXJubWVudCBoYWQgdG8gcXVpY2tseSBhbmQgaW4gb3JkZXIgdG8gcHJvdGVjdCB0aGUgaW50ZWdyaXR5IG9mIHRoZSBpbnN0aXR1dGlvbiB0aGF0IGlzIHRoZSBTdXJldGUgZHUgUXVlYmVjIGFuZCBjaXRpemVucyB0cnVzdCBpbiB0aGVpciBpbnN0aXR1dGlvbnMuIERvcmUsIGEgcmV0aXJlZCBRdWViZWMgcHJvdmluY2lhbCBwb2xpY2Ugb2ZmaWNlciB3aG8gYWxzbyB3b3JrZWQgZm9yIEludGVycG9sLCBzYWlkIHBlb3BsZSBleHBlY3QgbW9yZSBmcm9tIHRoZWlyIHBvbGljZSBmb3JjZXMgdGhhbiB0aGV5IGRpZCB3aGVuIGhlIHN0YXJ0ZWQgd29ya2luZyBpbiBsYXcgZW5mb3JjZW1lbnQgaW4gdGhlIGxhdGUgMTk3MHMuCkZ1Y2sgdGhlIHR1cmtleXMsIEkgbG92ZSBteSBjYXQuIApUaGV5IG5ldmVyIGhhdmUsIGhpc3RvcmljYWxseS4gCkZpbmFsbHksIHJlbWVtYmVyIHRoZXJlIGEgbG90IG1vcmUgY29udHJpYnV0aW9uIHJvb20gZm9yIFJSU1BzLiBUaGUgbmV3IG1heGltdW0gYW5udWFsIGNvbnRyaWJ1dGlvbiBmb3IgVEZTQXMgaXMgJDYsMDAwLCBjb21wYXJlZCB0byAkMjYsMjMwIGZvciBSUlNQcyBpbiBjYWxlbmRhciAyMDE4LCBhc3N1bWluZyB5b3UgZWFybiAkMTQ1LDcwMCBhbmQgaGF2ZSBubyBQZW5zaW9uIEFkanVzdG1lbnQgZnJvbSBjb3Jwb3JhdGUgcGVuc2lvbnMuIFRoYXQgdXAgZnJvbSAkMjYsMDEwIGluIDIwMTcsIGFuZCB0aGUgbGltaXQgcmlzZXMgdG8gJDI2LDUwMCBpbiAyMDE5IGFuZCB0byAkMjcsMjMwIGluIHRoZSAyMDIwIHRheCB5ZWFyLCBzYXlzIE1hc3RyYWNjaS4KQWZ0ZXIgbGVhdmluZyBJY3kgU3RyYWl0LCB0aGUgbmV4dCBzdG9wIHdhcyBKdW5lYXUuIE5lc3RsZWQgaW4gdGhlIG5vcnRoZXJuIHJlYWNoZXMgb2YgdGhlIEluc2lkZSBQYXNzYWdlLCB0aGUgQWxhc2thbiBjYXBpdGFsIHdhcyBmb3VuZGVkIGR1cmluZyBhIGdvbGQgcnVzaCBpbiAxODgwLiBWZXN0aWdlcyBvZiB0aGUgV2lsZCBXZXN0IHJlbWFpbiAgIHlvdSBjYW4gY2hlY2sgb3V0IHRoZSBSZWQgRG9nIFNhbG9vbiB3aGVyZSBhIHBhaXIgb2YgV3lhdHQgRWFycCBwaXN0b2xzIHdlcmUgbGVmdCBiZWhpbmQgICBidXQgdG91cmlzbSBpcyBub3cgdGhlIG1haW4gbW9uZXkgc3Bpbm5lci4uIApBbmQgdGhlIG9uZSB0aGF0IGNhdXNlZCB0aGlzIHdyZXRjaGVkIGV4aXN0ZW5jZS4gCiJQYW50aGVycyBHcm91cCBoYXMgYmVlbiBhbiBlbm9ybW91cyBoZWxwIHRvIHVzIHRocm91Z2ggdGhpcyBwcm9jZXNzIGFuZCB0aGlzIGlzIGEgZ29vZCBzdG9yeSBmb3IgdGhlIG5ldyBlbnRpdHkuICJQYW50aGVycyBoYXZlIGJlZW4gZmluYW5jaWFsbHkgaGVscGZ1bCBhbmQgYWxzbyB0aHJvdWdoIHRoZWlyIGxlZ2FsIGV4cGVyaWVuY2Ugb2YgdGhlIGRlIGFtYWxnYW1hdGlvbiBwcm9jZXNzLCB0aGV5IGhhdmUgYmVlbiBlbm9ybW91c2x5IHN1cHBvcnRpdmUuIiBCb3RoIGNvbW1pdHRlZSBtZW1iZXJzIHdlcmUgcG9zaXRpdmUgdGhlIG5ldyBlbnRpdHkgd2lsbCBiZSBhIHN1Y2Nlc3MuIApGaW5kaW5nIGEgTG9jYXRpb25XaGVuIHlvdSBzdGFydCBvdXQsIHlvdSBtYXkgbm90IHdhbnQgdG8gbGVhc2UgYSBsb2NhdGlvbiByaWdodCBhd2F5LiBBcyBhbiBhbHRlcm5hdGl2ZSwgeW91IGNhbiB3b3JrIG91dCBvZiB5b3VyIGhvbWUgICBhc3N1bWluZyBsb2NhbCBsYXdzIHBlcm1pdCB5b3UgdG8gaGF2ZSBhIGhvbWUgYnVzaW5lc3MgaW4geW91ciB6b25lLiBBbm90aGVyIG9wdGlvbiBpcyB0byBsZWFzZSBhIHNwYWNlIGZyb20gYW5vdGhlciBtYXNzYWdlIHRoZXJhcGlzdCBvciBvdGhlciBoZWFsdGggcHJhY3RpdGlvbmVyLi4gCk1lZGFsIG9mIEZyZWVkb20KRW5yaXF1ZVNhZ2dlc2UgdQpUaGUgcm9hZCBmcm9tIG15IGhvdXNlIGlzIGEgdHdvIHdheSBpbnRlcnNlY3Rpb24gSSBoYXZlIGEgc3RvcCBzaWduIGJ1dCB0aGUgZm9sa3MgY29taW5nIGZyb20gdGhlIGxlZnQgb3IgcmlnaHQgZG8gbm90LiBJIG5vdCBvbmx5IG5vdCB3YXZlZCwgYnV0IGdpdmVuIGZvbGtzIHRoZSBiaXJkIHdobyBjYW1lIHRvIGEgZnVsbCBzdG9wIHRvICJsZXQgbWUgZ28uIiBUaGF0IG5vdCBiZWluZyBuaWNlLCB0aGF0IGJlaW5nIHN0dXBpZCwgYW5kIGl0IHRvb2sgbW9yZSB0aW1lIGZvciB0aGVtIHRvIHN0b3AgYW5kIGZvciBtZSB0byByZWFsaXplIHdoYXQgZHVtYmFzcyBtb3ZlIHRoZXkgYXJlIHRyeWluZyB0byBtYWtlIHRoYW4gaWYgdGhleSBqdXN0IGtlcHQgZHJpdmluZyBhbmQgSSBwdWxsZWQgb3V0IGJlaGluZCB0aGVtLiAKUGh5c2ljYWwgbGVnYWN5IG9mIHRoZSAzMCB5ZWFyIHdhciBzdXJyb3VuZHMgdXMgR2VybWFucywgb3IgYXQgbGVhc3QgdGhlIG1vcmUgd2VsbCBpbmZvcm1lZCwgZXZlcnlkYXkuIEZvciBleGFtcGxlIGZyb20gbXkgbGl0dGxlIHZpbGxhZ2Ugb2YgNTAwIHBlb3BsZSBhbmQgaXRzIHNvcnJvdW5kaW5nczoKVGhlIHJlc3VsdHMgZ2F2ZSBzb21lIGhvcGUgZm9yIHByb2dyZXNzIGluIE1vbGRvdmEuIEFuIGFsbGlhbmNlIG9mIHJlZm9ybWlzdCBwYXJ0aWVzIGNhbGxlZCBBQ1VNLCBoZWFkZWQgYnkgdHdvIGNvcnJ1cHRpb24gZmlnaHRlcnMsIE1haWEgU2FuZHUgYW5kIEFuZHJlaSBOYXN0YXNlLCB0b29rIDI3IG9mIHBhcmxpYW1lbnQncyAxMDEgc2VhdHMuIEJ1dCB0aGUgU29jaWFsaXN0IFBhcnR5IChQU1JNKSwgYWxpZ25lZCB3aXRoIHRoZSBSdXNzaWEgZnJpZW5kbHkgcHJlc2lkZW50LCBJZ29yIERvZG9uLCBnb3QgMzQuIApTaGUgZ2l2ZXMgdXMgY2FyZHMgYW5kIGdpZnRzIGZvciBldmVyeSBob2xpZGF5LCBhbmQganVzdCByYW5kb21seSBidXlzIHVzIHRoaW5ncy4gCkdvIHRvIHlvdXR1YmUgYW5kIHR5cCBob3cgdHUgdXNlIGNoZWF0IGVuZ2luZSAxMjM0NTY3ODkwcm9ja3k6IENoZWF0IGVuZ2luZSBpcyB1c2VkIHRvIGNoYW5nZSB0aGUgbWVtb3J5IG9mIGdhbWVzLiAiaGFja2luZyIuIApJJ20gbm90IGV2ZW4gNDAgYW5kIHRoZSB3b3JsZCBoYXMgY2hhbmdlZCBzbyBtdWNoLiAKQW5kIHByYWN0aWNlLiAKSGUgd2FzIGp1c3QgYmVpbmcgaGVscGZ1bCBhbmQgcHJvYmFibHkgd2FzIGp1c3Qgd2F0Y2hpbmcgbXkgZXhjaGFuZ2Ugd2l0aCB0aGUgZmxvb3IgYmVjYXVzZSBoZSB3YXMgY3VyaW91cyBhYm91dCBob3cgdGhlIHByb21vdGlvbiBpcyBwYWlkIG91dCBJIGd1ZXNzLiAKTHVja2lseSB0aGUgQ3Jvd24gc2F5cyBzaW1wbHkgYmVpbmcgb24gQ3Jvd24gbGFuZCBpcyBub3QgYSBjcmltZSBhcyBpdCBmcmVlIHVzZSBzbyB0aGUgUG9saWNlIGNhbiBub3QgZW5mb3JjZSBhbiBJRCBjaGVjayBhbmQgeW91IG9ubHkgaGF2ZSB0byBwcm92aWRlIE5hbWUsIERPQiBhZGRyZXNzKS4gClBsYXVzaWJsZSBkZW5pYWJpbGl0eSBpcyBtb3JlIGRlY2lzaXZlIHRoYW4gZmlyZXBvd2VyIGluIHRoZSBpbmZvcm1hdGlvbiBhZ2UsIGFuZCB0aGlzIGlzIGRyaXZpbmcgd2FyIGludG8gdGhlIHNoYWRvd3MuIFJ1c3NpYSBjb3VsZCBoYXZlIGJsaXR6a3JpZWdlZCB0aHJvdWdoIFVrcmFpbmUsIGJ1dCBpbnN0ZWFkIHVzZWQgY292ZXJ0IG1lYW5zOiBzcGVjaWFsIGZvcmNlcywgImxpdHRsZSBncmVlbiBtZW4sIiBwcm94eSBtaWxpdGlhcyBhbmQgbWVyY2VuYXJpZXMgYWxsIHdoaWxlIHdhZ2luZyBhIGRpc2luZm9ybWF0aW9uIGNhbXBhaWduLiBUaGUgS3JlbWxpbidzICJraWxsIHdpdGggY29uZnVzaW9uIiBzdHJhdGVneSB3b3JrZWQuIEJ5IHRoZSB0aW1lIHRoZSBpbnRlcm5hdGlvbmFsIGNvbW11bml0eSBmaWd1cmVkIGl0IG91dCwgUnVzc2lhIGNvbnF1ZXN0IG9mIENyaW1lYSB3YXMgYSBmYWl0IGFjY29tcGxpLiBNb3Jlb3ZlciBob3cgY2FuIHRoZSBXZXN0IHJhbGx5IHRoZSB3b3JsZCB0byBkZWZlbmQgVWtyYWluZSB3aGVuIHRoZSBiYXNpYyBmYWN0cyBhcmUgaW4gcXVlc3Rpb24/IEl0IGNhbid0LiBXYXIgaXMgYmVjb21pbmcgZXBpc3RlbW9sb2dpY2FsOiB0ZWxsaW5nIHdoYXQgaXMgcmVhbCBmcm9tIGZha2Ugd2lsbCBkZWNpZGUgd2lubmVycyBhbmQgbG9zZXJzLgpDaG9pY2Ugd2FzIGVhc3kgd2hlbiBkZWNpZGluZyBvbiB0aGUgQmVsbCA0MDdHWCBzYWlkIEtpbmcgQ2FzaW5vIFByZXNpZGVudCBMZW9uIFRzb3VrZXJuaWsuIEhhdmUgZmxvd24gQmVsbCBoZWxpY29wdGVycyBpbiB0aGUgcGFzdCwgYW5kIHRoZSBleGNlcHRpb25hbCBwZXJmb3JtYW5jZSBhbmQgc2VydmljZSBpbiBFdXJvcGUgaGF2ZSBtYWRlIG1lIGEgbG95YWwgY3VzdG9tZXIuIE9uIHRoZSBwcm92ZW4gcGVyZm9ybWFuY2UgYW5kIHJlbGlhYmlsaXR5IG9mIHRoZSBCZWxsIDQwNyBwbGF0Zm9ybSwgdGhlIEJlbGwgNDA3R1ggZmVhdHVyZXMgdGhlIEdhcm1pbiBHMTAwMEggZmxpZ2h0IGRlY2ssIHByb3ZpZGluZyBjcml0aWNhbCBmbGlnaHQgaW5mb3JtYXRpb24gYXQgYSBnbGFuY2UgZm9yIGdyZWF0ZXIgc2l0dWF0aW9uYWwgYXdhcmVuZXNzIGFuZCBpbmNyZWFzZWQgc2FmZXR5LiAKVGhpcyBsb2dpY2FsIGNvbmNsdXNpb24gaXMgYmFzZWQgb24gdGhlIGZhbGxhY3kgb2YgY29ycmVsYXRpb24gYXMgY2F1c2F0aW9uLiAKVW50aWwgaGUgc3RvcHMgZGVmZW5kaW5nIGhpbXNlbGYuIFRoZXJlIGlzIG5vIG1hZ2ljIG51bWJlciBvZiBrbm9ja2Rvd25zIHdoZXJlIHlvdSBzdG9wIHRoZSBmaWdodCwgYnV0IHlvdSBzZWVtIHRvIGJlIGNvbmZ1c2VkIGluIHRoaW5raW5nIHRoZXJlIGlzLiBJdCBkb2VzbiBtYXR0ZXIgaWYgeW91IGdldCBrbm9ja2VkIGRvd24gMTAgdGltZXMgaWYgeW91IGRlZmVuZGluZyB5b3Vyc2VsZi4gRmVyZ3Vzb24gd2FzIGRyb3BwZWQgNCB0aW1lcyBpbiAxMCBzZWNvbmRzIGFnYWluc3QgaGlzIGZpZ2h0IHdpdGggTGFuZG8uCklmIHlvdSBiZXQgZmxvcHMgbGlrZSB0aGF0IHdoYXQgZG9lcyBpdCBtZWFuIHdoZW4geW91IGNoZWNrPyB5b3Ugc2hvdWxkIGNoZWNrIGFsbCBmbG9wcyBsaWtlIHRoYXQgb29wLiBTYW1lIGdvZXMgZm9yIHdoZW4geW91IGhhdmUgQUEgYW5kIHRoZSBib2FyZCBpcyBsaWtlIDczMy4gClRoZSB0cmFjaywgdG8gaXRzIGNyZWRpdCwgZGlzY29udGludWVkIGl0cyBjb250cmFjdCB3aXRoIHRoZSBrZW5uZWwgb3BlcmF0b3IsIFdhc2hidXJuIE9yZWdvbiBUcmFpbCBLZW5uZWwsIGZvciAyMDA4Li4gClN1Y2ggYSBiZW5lZml0IHNob3VsZCBuZXZlciBiZSBvdmVyc3RhdGVkIGJlY2F1c2UgaXQgY2FuIGNvbnRyaWJ1dGUgZ3JlYXRseSB0byB0aGUgYWN0dWFsIGVuam95bWVudCBvZiB1c2luZyB0aGUgY2hpcHMgaW4gYSBmcmllbmRseSBnYW1lLi4gCkFicmEgc3VhIG1lbnRlLiBRdWFuZG8gYSBtZW50ZSBvdXZlIGFsZ28gcXVlIHBhcmVjZSBib2JhZ2VtIGFic29sdXRhIGVsZSBkZXNsaWdhIGUgbm8gb3V2ZS4gQSBtYW5laXJhIGRlIGFicmlyIHN1YSBtZW50ZSAgZGl6ZXIgcGFyYSBzaSBtZXNtbyBxdWFuZG8gYSBwZXNzb2EgZXN0IGZhbGFuZG8gY29tIHZvYywgImlzc28gIGNlcnRvLCBpc3NvICB2ZXJkYWRlIiwgbWFpcyBlIG1haXMuIApJIGhhdmUgaW50ZXJucyBhbmQgSSBnaXZlIHRoZW0gZ3VpZGFuY2UgYW5kIHN0cnVjdHVyZS4gCkJ1eSBOT04gUEFDS0FHRUQgc3BpbmFjaCB0aG91Z2ggYXMgaXQncyBtdWNoIGNoZWFwZXIuIEp1c3QgYnV5IHRoZSBmcmVzaCBidW5jaCBmb3IgYWJvdXQgJDEuIFdhc2ggaXQgdGhvcm91Z2hseSBhcyBzcGluYWNoIGlzIGdyb3duIGluIHNhbmQgYW5kIGl0J3MgZ3JpdHR5LiAKQWN1cGV0ZXIgIDUgcG9pbnRzICBzdWJtaXR0ZWQgMSB5ZWFyIGFnbwpIb3cgaXMgaXQgT3J3ZWxsaWFuPyBEbyB5b3UgaGF2ZSBhIHBhc3Nwb3J0LCBhIGRyaXZlcnMgbGljZW5zZSwgb3IgYSBjYXJlIGNhcmQ/IElmIHllcywgdGhlbiBpdCBub3QgYSBiaWcgZGVhbCB0byBhbHNvIGdldCBvbmUgaWYgeW91IGFyZSBpbm5pdGF0ZWQgaW50byB0aGUgS2hhbHNhIFBhbnRoLiBJIG5vdCBwcm9wb3NpbmcgdGhhdCB3ZSBwdXQgcm9ib3QgY2hpcHMgaW4gcGVvcGxlIGhlYWRzIG9yIHNvbWV0aGluZywgSSB0YWxraW5nIGFib3V0IGJhc2ljIHZlcmlmaWNhdGlvbi4KSW50ZWdyaXR5IENvbW1pc3Npb25lciBpcyBsb29raW5nIGF0IHRoZSBjaXJjdW1zdGFuY2VzIGFyb3VuZCBUYXZlcm5lciBoaXJpbmcsIGFuZCBUYXZlcm5lciBoYWQgYXNrZWQgZm9yIGhpcyBhcHBvaW50bWVudCB0byBiZSBkZWxheWVkIHVudGlsIHRoYXQgaW52ZXN0aWdhdGlvbiB3YXMgY29tcGxldGUuIFRoZSBpbnRlZ3JpdHkgb2ZmaWNlIGRpZCBub3QgaW1tZWRpYXRlbHkgcmVzcG9uZCB0byBhIHF1ZXN0aW9uIFRodXJzZGF5IGFib3V0IHRoZSBzdGF0dXMgb2YgaXRzIHByb2JlLi4gCiJXaGF0IHlvdSBuZWVkZWQgd2FzIG9uZSBvZiB0aGUgZmluZXN0IGFjdHJlc3NlcyBpbiB0aGUgd29ybGQsIiBoZSBleHBsYWluZWQgYXQgdGhlIG1vdmllJ3MgVG9yb250byBJbnRlcm5hdGlvbmFsIEZpbG0gRmVzdGl2YWwgcHJlc3MgY29uZmVyZW5jZS4gIlRoZXJlIHdhcyBhIG51YW5jZSB0byB0aGlzIHJvbGUsIGEgc3RyZW5ndGgsIGEgdmVyeSBpbnRlcmVzdGluZyBzZW5zZSBvZiBodW1vci4gSmVzc2ljYSBmaXQgdGhlIGJpbGwgbGlrZSBubyBvdGhlciwgYW5kIGl0IHdhcyBhIG1hdHRlciBvZiB3b29pbmcgaGVyIHRvIGdldCBoZXIgdG8gcHV0IGhlciBjb25zaWRlcmFibGUgcmVwdXRhdGlvbiBpbnRvIHRoZSBoYW5kcyBvZiBhIHBlcnNvbiB3aG8gaGFkIG5ldmVyIGRpcmVjdGVkIGEgbW92aWUgYmVmb3JlLiIuIApBcyB0aGUgY2VsbHMgYXJlIHB1c2hlZCB1cHdhcmQgZnJvbSB0aGUgZm9sbGljbGUncyBiYXNlLCB0aGV5IGhhcmRlbiBhbmQgdW5kZXJnbyBwaWdtZW50YXRpb24uIApBbW1hIGtpbGxlZCBNYWUgYmVjYXVzZSBvZiBqZWFsb3VzeSBidXQgYWxzbyBzdGF0ZWQgdGhhdCB0aGUgaXZvcnkgZmxvb3Igd2FzIG5vdCBjb21wbGV0ZWQgYW5kIHRoYXQgTWFlJ3MgaGFpciByZW1pbmRlZCBoZXIgb2YgdGhlIGNhcnBldCBpbiBDYW1pbGxlJ3Mgcm9vbS4gCkhlIHNhaWQgSSdkIGhhdmUgdG8gY29tZSBhbmQgc2VlIGhpbSBpbiBNYW5jaGVzdGVyIHNvIG5vIG9uZSB3b3VsZCBzZWUgdXMuIEhlIHdhcyBzbyBzY2FyZWQgb2YgaGlzIGdpcmxmcmllbmQgZmluZGluZyBvdXQuIApQb2xpdGljaWFucyBpbiB0aGUgYXJyb25kaXNzZW1lbnQgYXJlIGRvaW5nIHdoYXQgdGhleSBjYW4gdG8gcmVzcG9uZCB0byByZXNpZGVudHMnIGNvbmNlcm5zOiBpbmZvcm1hdGlvbiBhYm91dCB0aGUgc3RyZWV0IGhhcyBiZWVuIHRha2VuIGRvd24gZnJvbSBvZmZpY2lhbCB0b3VyaXN0IHNpdGVzLCBhbmQgdGhleSBwbGFuIHRvIGxvb2sgYXQgdGhlIHByZXNlbmNlIG9mIHRvdXJpc3QgYnVzZXMgdGhhdCBwYXJrIG5lYXJieSBhbmQgY29uc2lkZXIgcmVndWxhdGluZyBhY2Nlc3MgdG8gdGhlIHN0cmVldC4gCkkgZG9uIGtub3cgaG93IEkgbWFkZSBpdCBvdXQgb2YgdGhhdCBjb252ZXJzYXRpb24gYnV0IEkgZ2xhZCBpdCBvdmVyLiAKV2UgZGlzY3Vzc2VkIHdoeSB0aGVyZSBhcmUgc28gbWFueSBpc3N1ZXMgd2l0aCBnbHV0ZW4gYW5kIGhvdyB5b3UgY2FuIGdldCB0ZXN0ZWQgZm9yIGFuIGltbXVuZSByZWFjdGlvbiB0byBpdC4uIAo0KSBXZWFyaW5nIG5vdmVsdHkgbm9uc2Vuc2UgcGllY2VzIGxpa2UgY2hhcmxpZSBjYXJyZWwgb3IgRm9zc2lsbWFuIG9yIFBoaWwgTGFhay4gU2VlbXMgcG90ZW50aWFsbHkgK0VWLgpIb3dldmVyLCBwcm9wZXJ0eSBtYXJrZXQgdmFsdWVzIHZhcnkgd2hpbGUgd2hhdCB0aGV5IG93ZSB0byBsZW5kZXJzIGlzIGRlZmluaXRlLiAKSWYgeW91IGRvIGxpdmUgaW4gdGhlIFVTLCB5b3UgY2FuIHN0aWxsIGRvIHBsYXkgbW9uZXkgaG9tZSBnYW1lcywgYW5kIG1heWJlIGhhdmUgYW4gaG9ub3Igc3lzdGVtIG9yIHNvbWV0aGluZyB3aGVyZSBldmVyeW9uZSBkZXBvc2l0cyByZWFsIG1vbmV5IGludG8gYSBzaGFyZWQgYmFuayBhY2NvdW50LCBhbmQgeW91IGNhbiB3aXRoZHJhdyBhdCB0aGUgZW5kIG9mIHggcGVyaW9kIG9mIHRpbWUgaW4gcmF0aW8gb2Ygd2hhdCB5b3UgcGxheW1vbmV5IHJvbGwgaXMgdG8gdGhlIG9yaWdpbmFsLiAKSW4gYW4gdW5saWtlbHkgdHdpc3QsIFNwcmluZ2VyIGFkbWl0dGVkIGhlIGhhZCBkb25lIHdyb25nLCBjYW1wYWlnbmVkIHRocm91Z2ggdGhlIHNjYW5kYWwgYW5kIGluIDE5NzUgd29uIGJhY2sgaGlzIHNlYXQuSW4gMTk3NywgU3ByaW5nZXIgYWNoaWV2ZWQgdGhlIGhpZ2hlc3Qgb2ZmaWNlIGhlIHdvdWxkIGV2ZXIgaG9sZCB3aGVuIGhlIHdhcyBhcHBvaW50ZWQgTWF5b3Igb2YgQ2luY2lubmF0aSBieSB0aGUgY291bmNpbC4gCkJha2VyIHNhaWQgUm9ja3Npbm8ncyBDbHViIFZlbHZldCBjYW4gYWNjb21tb2RhdGUgcHJpdmF0ZSBnYXRoZXJpbmdzIGZyb20gMjAgdG8gMjUwIHBlb3BsZSwgZGVwZW5kaW5nIG9uIHRoZSByb29tIHNldHVwLiBUaGUgc3RhZ2Ugb2ZmZXJzIGEgcGxhY2UgZm9yIHByZXNlbnRhdGlvbnMsIGFuZCB0aGUgc3BhY2UgaXMgZnVsbHkgZXF1aXBwZWQgd2l0aCBhIHNvdW5kIHN5c3RlbSBhbmQgYSB2aWRlbyBzY3JlZW4uIEluIHRoZSBwYXN0LCBzaGUgbm90ZWQsIG9yZ2FuaXphdGlvbnMgc3VjaCBhcyBBa3JvbiBDaGlsZHJlbidzIEhvc3BpdGFsIGFuZCBTdXNhbiBHLiBLb21lbiBoYXZlIGhvc3RlZCBmdW5kcmFpc2VycyBhdCBDbHViIFZlbHZldCBieSBoaXJpbmcgYSByZWNvcmRpbmcgYXJ0aXN0IHRvIHBlcmZvcm0gYW5kIHNlbGxpbmcgdGlja2V0cyB0byBndWVzdHMuCk15IGZpcnN0IHNlcmlvdXMgYm95ZnJpZW5kIHRvbGQgbWUgaGUga2lsbCBoaW1zZWxmIGlmIGkgZXZlciBsZWZ0IGhpbSwgYW5kIGkgYmVsaWV2ZWQgaGltIGZvciBhIHllYXIgYW5kIGEgaGFsZi4gClRoaXMgaGFzIGluY3JlYXNlZCB0aGUgc2FsZXMgb2YgcHJvZHVjdHMgbGlrZSBUaGUgTnV0eiBGYWNlcyBQb2tlciBDYXJkIFByb3RlY3Rvci4gQWNjb3JkaW5nIHRvIHRoZSBidXNpbmVzcyBlbnRyZXByZW5ldXJzLCB0aGVzZSBwcm9kdWN0cyBhcmUgc2VsbGluZyBsaWtlIGhvdGNha2VzLiBJZiB5b3Ugd2FudCB0byBrZWVwIHlvdXIgY2FyZHMgc2FmZSBmb3JldmVyLCB5b3Ugd2lsbCBkZWZpbml0ZWx5IG5lZWQgb25lIG9mIHRoZXNlIGNhcmQgcGllY2VzLi4gCkFib3V0IDI3IHBlciBjZW50IG9mIGl0cyBjb3Vyc2VzIGFyZSBmdWxsIHllYXIsIGluY2x1ZGluZyBtYW55IGVucmljaGVkIGNsYXNzZXMuIApJdCBmb3IgeW91ciBvd24gc2FmZXR5LCB0aGUgc2FmZXR5IG9mIHRoZSBwbGFuZSwgcGlsb3RzIGFuZCBtYW55IG90aGVyIHBlb3BsZS4gClRoZXkgZ28gdGhyb3VnaCBsaWZlIHB1bGxpbmcgc3R1bnRzIGxpa2UgdGhpcyBiZWNhdXNlIHRoZXkgbmV2ZXIgZmFjZWQgcmV0YWxpYXRpb24uIFRoZXkgd2lsbCBjb250aW51ZSB0aGVpciBiYWQgYmVoYXZpb3IsIGhhcmFzc2luZyBwZW9wbGUgd2hldGhlciB0aGV5IGFyZSBpbiB0aGUgcmlnaHQgb3Igbm90LiAKQ2hhbWJlcnMgUGF1bCBEb3VnbGFzCkdldCBhIGpvYiBub3Qgb24gdGhlIGJhc2lzIG9mIHlvdXIgY29ubmVjdGlvbnMgICB5b3VyIGZhdGhlciwgeW91ciBmcmllbmRzIG9yIHdoYXRldmVyICAgYnV0IG9uIHRoZSBiYXNpcyBvZiB5b3VyIHBlcmZvcm1hbmNlLiBXZSBoYXZlIGVxdWFsIG9wcG9ydHVuaXRpZXMgZm9yIHNjaG9vbGluZywgaGVhbHRoLCBhbmQgSSB3b3VsZCBzYXksIGxpZmUuCkZveCBvd24gZWRpdGluZyBjaG9pY2UgYWRkZWQgYSBkb3duZXIgdG8gYSBuaWNlIG1vbWVudCwgY3V0dGluZyB0byBhIGNhbWVyYSBzaG90IG9mIE5ldyBFbmdsYW5kIHNjb3dsaW5nIGNvYWNoIEJpbGwgQmVsaWNoaWNrIGFzIHRoZSBzb25nIGVuZGVkLgpUaGUga2V5IHRvIHRoZSBhcHByb2FjaCBJIHJlY29tbWVuZCBpcyB0byBoZXIgdG8gYXNzb2NpYXRlIGFuYWwgc2Vuc2F0aW9ucyB3aXRoIHNleHVhbCBwbGVhc3VyZS4gVGhlIG5leHQgdGltZSB5b3UncmUgZ29pbmcgZG93biBvbiBoZXIgKHR3aWNlIGFzIG1hbnkgd29tZW4gb3JnYXNtIGZyb20gb3JhbCBzZXggYXMgZnJvbSBpbnRlcmNvdXJzZSksIG1vdmUgeW91ciBoYW5kcyBhcm91bmQgYW5kIGN1cCBoZXIgYnV0dCBjaGVla3MsIHNxdWVlemUgYW5kIG1hc3NhZ2UgdGhlbSwgYW5kIHRoZW4gbGV0IHlvdXIgZmluZ2VyKHMpIHdhbmRlciBpbnRvIGhlciBjcmFjayBhIGxpdHRsZSBiaXQuIEdldCBoZXIgdG8gcHVsbCBoZXIgbGVncyBiYWNrIHRvd2FyZHMgaGVyIGhlYWQgKHNvIHlvdSBjYW4gaGF2ZSBiZXR0ZXIgYWNjZXNzIHRvIGhlciB2YWdpbmEpLCBhbmQgbGlnaHRseSBiaXRlL25pYmJsZSBhcm91bmQgaGVyIGJ1dHQgaW4gcGxhY2VzIHlvdSBjYW4gcmVhY2gsIGFuZCBydW4geW91ciB0b25ndWUgYXMgY2xvc2UgdG8gaGVyIGNyYWNrIGFzIHlvdSBjYW4gY29tZm9ydGFibHkgKGZvciB5b3UgYW5kIGhlcikuCllvdXIgc2Nob29sIG1heSBldmVuIGhhdmUgYSBkZWRpY2F0ZWQgZ3JvdXAgZm9yIHN0dWRlbnRzIGRvaW5nIHJlc2VhcmNoLiBUaGVyZSBhcmUgYWxzbyBsb3RzIG9mIG9wcG9ydHVuaXRpZXMgb3V0IHRoZXJlIGZvciBzZXBhcmF0ZSByZXNlYXJjaCBwcm9qZWN0cyB3aGVyZSB5b3UgbGVhdmUgbWVkaWNhbCBzY2hvb2wgZm9yIGEgeWVhci4gClZvcnBhbGdsb3JwICAyIHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnbwpPbiBNb25kYXkgbmlnaHQsIE1jSHVnaCBoYWQgbWFkZSBpdCBpbnRvIHRoZSBsYXN0IHNldmVuIGFuZCB3YXMgYmFjayBvbiB0aGUgc21hbGwgc2NyZWVuLiAKTm90IHRoZSBiZXN0IHZhbHVlIGZvciBtZSBidXQgaWYgeW91IGxpa2UgbG93IGF2ZXJhZ2Ugc3Rha2UgaXQncyBnb29kIGFzIG1vc3QgcGxheWVyIGhhdmUgdW5kZXIgMTAwYmIKV2Ugd2VyZW4gaGFwcHkgd2l0aCB0aGVpciB0b3duIGJlY2F1c2UgaXQgd2FzIGEgbGl0dGxlIFRPTyBpbiB0aGUgZGlyZWN0aW9uIHlvdSBkZXNjcmliaW5nLCBpdCBtYWRlIHVzIHNvdW5kIGxpa2Ugd2FycmlvcnMgdGhhdCB3ZSBhcmVuIHRoaW5rIHRoZSBvdGhlciBjb21tZW50cyByZWZlciB0byBvdXIgZ2VuZXJhbCBpbmFiaWxpdHkgdG8gYXJ0aWN1bGF0ZSBvdXIgZW1vdGlvbnMuIEkgd2FzIGluIHRoZSBob3NwaXRhbCB3aXRoIGhpbSBsaXRlcmFsbHkgRVZFUlkgZGF5IHdoZW4gaGUgd2FzIGZpcnN0IGRpYWdub3NlZC4gCk1hdGhlbWF0aWNhbGx5LCBpdCBkZXBlbmRzIG9uIHRoZSBudW1iZXIgb2Ygb3Bwb25lbnRzLiBUaGUgcHJvYmFiaWxpdHkgdGhhdCB5b3Ugd2lsbCB3aW4gZ29lcyBkb3duIGFzIHRoZSBudW1iZXIgb2Ygb3Bwb25lbnRzIGdvZXMgdXAsIGJlY2F1c2UgdGhlcmUgYXJlIG1vcmUgd2F5cyBmb3IgeW91IHRvIGJlIGJlYXRlbi4gU29tZSBoYW5kcyBwbGF5IHdlbGwgYWdhaW5zdCB2ZXJ5IGZldyBvcHBvbmVudHMsIHdoaWxlIG90aGVycyBwbGF5IHdlbGwgYWdhaW5zdCBtYW55IG9wcG9uZW50cy4gCkZvciB5ZWFycyAoZGVjYWRlcykgd2UgYmVlbiB0b2xkIGhvdyBwZW9wbGUgYXJlIHZpb2xhdGVkLCB0b3J0dXJlZCwga2lsbGVkIGJ5IGNhcnRlbHMuIFRoZW4gd2UgdHJ5IHRvIG5vdCBnaXZlIHBlb3BsZSBhc3lsdW0/IEhvdyBkb2VzIHRoYXQgbWFrZSBzZW5zZT8KVGhlIG5vdmVsIGlzIHNvbGVseSB3cml0dGVuIGluIENhbWlsbGUncyBwZXJzcGVjdGl2ZSwgYnV0IGZyb20gdGhlIHNob3csIHdlIGNhbiBzZWUgZ2xpbXBzZXMgb2YgY2hhcmFjdGVycyB3aGVuIENhbWlsbGUgaXNuJ3QgYXJvdW5kLkFzIGZvciBDYW1pbGxlJ3MgZGFkLCB3ZSBsZWFybiBhYm91dCBhcyBtdWNoIGluIHRoZSBzZXJpZXMgYXMgdGhlIGJvb2sgdGhyb3VnaCB0aGUgY29udmVyc2F0aW9ucyBhdCB0aGUgZHJlc3Mgc3RvcmUgYW5kIG9uIHRoZSB2ZXJhbmRhICh3aGVyZSBBZG9yYSBjb21wYXJlcyBDYW1pbGxlIHRvIGhlciBkYWQpIGFuZCBmcm9tIEphY2tpZS4gCklmIHlvdSBjYW4ndCByYWlzZSB3aXRoIGl0IHRoZW4gZm9sZC4gUGxheSBwb3NpdGlvbi4gQmUgYWdncmVzc2l2ZS4gClRoaXMgaXMgYSBtYXR0ZXIgb2YgYmFsYW5jaW5nIHB1YmxpYyBzYWZldHkgYW5kIHdvcmtlcnMgcmlnaHRzLCBMYXBvcnRlIHNhaWQuIEhlIHBvaW50ZWQgb3V0IHRoYXQgdm9pY2UgcmVjb3JkZXJzIGhhdmUgYmVlbiB1c2VkIG9uIHBsYW5lcyBhbmQgc2hpcHMgZm9yIHllYXJzLgpJIGRvbiB1bmRlcnN0YW5kIHlvdXIgcG9pbnQgYWJvdXQgdGhlIGhpZ2ggMy80IGJldCBwZXJjZW50YWdlCklmIG9uZSBvZiB0aGUgYmFua2VyJ3MgaGFuZHMgaXMgaWRlbnRpY2FsIHRvIHRoZSBwbGF5ZXIncyBoYW5kLCB0aGUgcGxheWVyIGlzIGNvbnNpZGVyZWQgdG8gaGF2ZSBhICJjb3B5IiBoYW5kIGFuZCB0aGUgYmFua2VyIHdpbnMgdGhhdCBoYW5kLiAKSW50ZXJtZW50IGluIFdpbmRlY2tlciBDZW1ldGVyeS4gSW4gbGlldSBvZiBmbG93ZXJzIGRvbmF0aW9ucyB0byB0aGUgUmVnaW9uYWwgUmVoYWJpbGl0YXRpb24gQ2VudHJlIG9yIHRoZSBIYWxkaW1hbmQgV2FyIE1lbW9yaWFsIEhvc3BpdGFsIHdvdWxkIGJlIGFwcHJlY2lhdGVkLi4gCkFzIGZvciBtb3ZlbWVudC4gSSB3b3VsZCBsaWtlIHRvIHRoaW5rIGl0IGNvdWxkIGdldCBzbW9vdGhlciwgYnV0IGV4cGVyaWVuY2UgaGFzIHRhdWdodCBtZSB0aGF0IEJldGhlc2RhIGdhbWVzIGFyZSBnZW5lcmFsbHkgc3RpZmYuIFRoZXkgbm90IG1lY2hhbmljYWxseSBzdHJvbmcgZ2FtZXMsIHRoZXkgdGhlbWF0aWNhbGx5IC8gZW52aXJvbm1lbnRhbGx5IHN0cm9uZyBnYW1lcy4gRXZlbiBzb21lIG1pbGQgaW1wcm92ZW1lbnRzIHdvdWxkIGJlIGEgYmxlc3NpbmcgdGhvdWdoLgpTb24gaW4gbGF3IG9mIE1hcmlhbiBCZXR0ZXJpZGdlIGFuZCBEb25hbGQgKERlY2Vhc2VkKS4gSm9obiB3aWxsIGJlIHNhZGx5IG1pc3NlZCBieSBoaXMgSW4gTGF3cywgbmllY2VzLCBuZXBoZXdzLCBjbyB3b3JrZXJzIGFuZCBtYW55IGZyaWVuZHMuIApJdCBvbmUgb2YgdGhvc2Ugc2l0dWF0aW9ucyB3aGVyZSBJIGRvbiB0aGluayBhbnlvbmUgYXQgdGhlIGNvbXBhbnksIG9yIGF0IGxlYXN0IHRoZSBmb3J3YXJkIGZhY2luZyBwZXJzb25hbGl0aWVzIG9mIHRoZSBjb21wYW55LCBpcyBob21vcGhvYmljIG9yIGhhdGVmdWwgb3V0cmlnaHQsIGJ1dCB0aGVyZSBhcmUgZGVmaW5pdGVseSBzb21lIHBlb3BsZSB3aG8gc3RpbGwgZG8gYW5kIHNheSBzdHVmZiB0aGF0IHByZXR0eSB0ZWxsaW5nIG9mIGhvdyB0aGV5IGFjdHVhbGx5IGZlZWwgYW5kIHdoYXQgdGhleSB2aWV3IGlzIGFjY2VwdGFibGUsIGFsbCB3aGlsZSBiYWxraW5nIGF0IHRoZSBpZGVhIG9mIGJlaW5nIGhvbW9waG9iaWMgd2hlbiBpdCBjYWxsZWQgb3V0LiBZb3UgY2FuIGRvIGhvbW9waG9iaWMvdHJhbnNwaG9iaWMvcmFjaXN0L2dlbmVyYWwgc2hpdHR5IHRoaW5ncyB3aXRob3V0IGJlaW5nIGFuIG92ZXJ0IGhvbW9waG9iZS90cmFuc3Bob25lL3JhY2lzdC9zaGl0IHBlcnNvbiBpbiBnZW5lcmFsLiAKVGhlcmUgaXMgYSBzcGVjaWFsIHdheSB5b3UgbXVzdCBob2xkIHlvdXIgYm93LiBXaGVyZSB0aGUgbGl0dGxlIGRvdCBvbiB0aGUgYm90dG9tIChub3QgdGhlIHRpcCkgb2YgdGhlIHZpb2xpbiBpcywgcGxhY2UgeW91ciByaW5nIGZpbmdlciBhbmQgdGh1bWIuIFBvaW50IHlvdXIgcG9pbnRlciBmaW5nZXIgYW5kIHJlc3QgeW91ciBwaW5reSBmaW5nZXIgb24gdGhlIG1ldGFsIHBpZWNlIG9uIHRoZSBlbmQuIApUaGUgNjYgeWVhciBvbGQncyBvZmZpY2UgaXMgZGVjb3JhdGVkIHdpdGggdHdvIHBvcnRyYWl0cyBvZiBoaW1zZWxmLgpJbiBoaXMgZmlyc3QgcmVtYXJrcyBvbiB0aGUgYXNzYXVsdCwgUGhpbGlwcGluZSBQcmVzaWRlbnQgUm9kcmlnbyBEdXRlcnRlIHNhaWQgdGhhdCB0aGUgYXR0YWNrZXIgd2FzIHNpbXBseSAiY3JhenkuIiBIZSBxdWVzdGlvbmVkIHdoYXQgdGhlIGd1bm1hbiB3YXMgZ29pbmcgdG8gZG8gd2l0aCB0aGUgJDIgbWlsbGlvbiBob3JkZSBvZiBwb2tlciBjaGlwcyBoZSBoYWQgdHJpZWQgdG8gaGF1bCBhd2F5LiBIZSBhbHNvIGRpc2NvdW50ZWQgYW55IGxpbmtzIHRvIHRoZSBJc2xhbWljIFN0YXRlIGdyb3VwLCBzYXlpbmcgdGhpcyAiaXMgbm90IHRoZSB3b3JrIG9mIElTSVMuIFRoZSB3b3JrIG9mIHRoZSBJU0lTIGlzIG1vcmUgY3J1ZWwgYW5kIGJydXRhbC4iClVudGlsIHZlcnkgcmVjZW50bHksIEkgY291bGQgb25seSBzcGVhayBpdCBpbiB0aGUgcHJlc2VudCB0ZW5zZSwgd2hpY2ggbWFkZSB0YWxraW5nIGFib3V0IGxhc3QgeWVhciBvciBuZXh0IHdlZWsgcXVpdGUgZGlmZmljdWx0LiAKVGhlIG1ham9yaXR5IG9mIHdoYXQgcG9saWNlIGhhdmUgYXJlIGF2YWlsYWJsZSB0byBjaXZpbGlhbnMsIGFzIHdlbGwgKG1vc3QsIG5vdCBhbGwpLiBQb2xpY2UgZGVwYXJ0bWVudHMgaGF2ZSB0YW5rcywgeWVzLCBidXQgdGhleSB1bmFybWVkLiBXZSBub3QgdGFsa2luZyBhYm91dCBBYnJhbXMgdGFua3Mgcm9sbGluZyBkb3duIHRoZSBzdHJlZXRzLCBiYXNpY2FsbHkgTVJBUCB3aG9zZSBjYXBhYmlsaXR5IGlzIGVudGlyZWx5IGRlZmVuc2l2ZSAodGhleSBsaWdodCBvbiBvZmZlbnNpdmUgd2VhcG9ucnkgYW55aG93LCBhbmQgYXJlIHRvdGFsbHkgc3RyaXBwZWQgYmVmb3JlIGJlaW5nIHNvbGQgdG8gcG9saWNlKS4uIApJdCBoYXMgYSBmYXIgbGFyZ2VyIG1lYW5pbmcgYW5kIG1pc3Npb24gaW4gdGhhdCBpdCBjYWxscyBmb3IgcmVzdG9yYXRpb24gb2YgdGhlIGZvY3VzIG9mIG1lZGljaW5lIG9uIGhlYWx0aCBhbmQgaGVhbGluZyBhbmQgZW1waGFzaXplcyB0aGUgY2VudHJhbGl0eSBvZiB0aGUgcGF0aWVudCBwaHlzaWNpYW4gcmVsYXRpb25zaGlwLiBJbiBhZGRpdGlvbiB0byBwcm92aWRpbmcgdGhlIGJlc3QgY29udmVudGlvbmFsIGNhcmUsIGludGVncmF0aXZlIG1lZGljaW5lIGZvY3VzZXMgb24gcHJldmVudGl2ZSBtYWludGVuYW5jZSBvZiBoZWFsdGggYnkgcGF5aW5nIGF0dGVudGlvbiB0byBhbGwgcmVsYXRpdmUgY29tcG9uZW50cyBvZiBsaWZlc3R5bGUsIGluY2x1ZGluZyBkaWV0LCBleGVyY2lzZSwgc3RyZXNzIG1hbmFnZW1lbnQsIGFuZCBlbW90aW9uYWwgd2VsbCBiZWluZy5JdCBpbnNpc3RzIG9uIHBhdGllbnRzIGJlaW5nIGFjdGl2ZSBwYXJ0aWNpcGFudHMgaW4gdGhlaXIgaGVhbHRoIGNhcmUgYXMgd2VsbCBhcyBvbiBwaHlzaWNpYW5zIHZpZXdpbmcgcGF0aWVudHMgYXMgd2hvbGUgcGVyc29ucyBtaW5kcywgY29tbXVuaXR5IG1lbWJlcnMsIGFuZCBzcGlyaXR1YWwgYmVpbmdzLCBhcyB3ZWxsIGFzIHBoeXNpY2FsIGJvZGllcy4gClNvIEkgbGVmdCB0aGUgc3RldywgcGxvZGRpbmcgb24gb3ZlciB0byB0aGUgZG9vciwgYW5kIHF1aWNrbHkgdGhydXN0IGl0IG9wZW4sIGhvcGluZyB0byBnZXQgdGhlIHBhaW4gb3ZlciB3aXRoIHF1aWNrLgpHb29nbGUgRm9vZCBmb3IgQnJlYWtmYXN0CkluIERDIHRoZSBUcnVtcCBob3RlbCBpcyBpbiB0aGUgb2xkIHBvc3Qgb2ZmaWNlIGJ1aWxkaW5nLiBZb3UgY2FuIGdvIGFyb3VuZCB0byBvbmUgc2lkZSwgd2l0aG91dCBnb2luZyB0aHJvdWdoIHRoZSBob3RlbCBpdHNlbGYsIHRvIGdvIHVwIGludG8gdGhlIHRvd2VyIGZvciBvbmUgb2YgdGhlIGJlc3Qgdmlld3Mgb2YgdGhlIGNpdHksIGFuZCBpdCBpcyBmcmVlIHRvIHZpc2l0LiBUaGVyZSBhcmUgcGFyayByYW5nZXJzIHdhdGNoaW5nIHRoZSBlbGV2YXRvcnMgYXQgc3RyZWV0IGxldmVsIGFuZCB1cCBpbiB0aGUgdG93ZXIgYW5zd2VyaW5nIHF1ZXN0aW9ucy4gSSB0aGluayB0aGUgc2V0IHVwIHByZWRhdGVzIHRoZSBvbGQgcG9zdCBvZmZpY2UgYmVpbmcgYSBUcnVtcCBwcm9wZXJ0eSBiZWNhdXNlIHlvdSBjb3VsZCBkbyB0aGUgc2FtZSB0aGluZyBiYWNrIGluIHRoZSA4MHMgd2hlbiBpdCB3YXMganVzdCBhIG1hbGwuCkJ1dCB0aGVuIHN1cGVyc2VkaW5nIHJ1bW91cnMgZGVuaWVkIHRoYXQgZWl0aGVyIFNhZGF0IG9yIEJhcmdob3V0aSB3b3VsZCBiZSBpbmNsdWRlZC4gCiJLZWxpIHdhcyBub3QgdGhlIHR5cGUgdG8gc2hhcmUgaW50aW1hdGUgcGVyc29uYWwgZGV0YWlscywiIHNoZSBzYXlzLiBOb3cgTGFuZSBsaWZlIGlzIHRvIGJlIGxhaWQgYmFyZS4gCkxpc3RpbmcgdGFrZXMgaW50byBhY2NvdW50IGhpc3RvcmljYWwgYW5kIGFyY2hpdGVjdHVyYWwgaW50ZXJlc3QuIApXaGlsZSBpdCBtaWdodCBiZSBva2F5IHRvIHN0YXJ0IGJlaW5nIG1vcmUgY29tZm9ydGFibGUgd2l0aCB5b3VyIHBhcnRuZXIgY2hpcHBpbmcgaW4gZm9yIGdyb2NlcmllcyBvciBwYXlpbmcgZm9yIGEgbWVhbCBub3cgYW5kIHRoZW4gYXQgMyBtb250aHMsIGl0IGlzIGZhciBmcm9tIG9rYXkgdG8gc3RyYWlnaHQgdXAgYXNrIGZvciBzb21lb25lIGF0IHRoYXQgc3RhZ2UgdG8ganVzdCBnaXZlIHlvdSB0aGF0IG11Y2ggbW9uZXksIGV2ZW4gYXMgYSBsb2FuLiAK|<---