--->|V2l0aGluIHRoaXMgZmFudGFzeSBpcyBldmVyeSBmZWFyIGFuZCBkZXNpcmUgb2YgdGhlIGZhciByaWdodDogZXZpbCBCbGFjayB3b21lbiBhY3RpdmlzdHMsIHBvb3IgcGVvcGxlLCBpbGxlZ2FsIGltbWlncmFudHMsIGFuZCBzZXguCk15IG5hbWUgaXMgSmFjayBXZWJiZXIuIEkgaG9zdCBhIHBvcHVsYXIgdHYgc2hvdyBhbmQgYmxvZyBjYWxsZWQgTGVnZW5kcy4gVG9kYXkgSSBhbSBvdXQgZ2F0aGVyaW5nIHRoZSBtYW55IHN0b3JpZXMgc3Vycm91bmRpbmcgdGhlIHNob2UgdHJlZSBsZWdlbmQuIE1hbnkgYmVsaWV2ZSBpdCBpcyB0aGUgd29yayBvZiBhIHNlcmlhbCBraWxsZXIuIE90aGVycyBoYXZlIHN0cmFuZ2Ugc3RvcmllcyBhYm91dCBjYXJzIG5vdCB3b3JraW5nLCBjZWxsIHBob25lcyBnb2luZyBjcmF6eSwgYW5kIG90aGVyIHN0cmFuZ2UgZXZlbnRzIHN1cnJvdW5kaW5nIHRoZSBhcHBlYXJhbmNlIG9mIGEgc2hvZSB0cmVlLiBJdCBhcHBlYXJzIHRoYXQgYXMgc29vbiBhcyB0aGVzZSBwZW9wbGUgc2F3IHRoZSBzaG9lIHRyZWUsIHN0cmFuZ2UgYW5kIGJpemFycmUgZXZlbnRzIGhhdmUgaGFwcGVuZWQgaW4gdGhlaXIgbGl2ZXMuIEhlcmUgYXJlIGEgZmV3IG9mIHRoZSBzdG9yaWVzIHdlIHdpbGwgYmUgZmVhdHVyaW5nIG9uIG91ciBzaG93IGFuZCBibG9nLiBSZW1lbWJlciB0byB0YWtlIGhlZWQgd2hlbiBzZWVpbmcgYSBzaG9lIHRyZWUuCldoYXQgT25UaGluZ3MgdG8gZG9Gb29kIGFuZCBEcmlua1RoZWF0cmUgYW5kIEFydHNUViBHdWlkZURpZ2l0YWwgUHJpbnQgRWRpdGlvblRoZSBNaWQgTm9ydGggQ29hc3QgaGFzIGZpdmUgaG90ZWxzIHJhbmtlZCBpbnNpZGUgdGhlIHRvcCA1MDAgaW4gTlNXIGZvciBwb2tlciBtYWNoaW5lIHByb2ZpdHMsIGFjY29yZGluZyB0byBmaWd1cmVzIHJlbGVhc2VkIGJ5IExpcXVvciBhbmQgR2FtaW5nIE5TVy4gVGhlIGZpZ3VyZXMgd2VyZSByZWxlYXNlZCBvbiBUdWVzZGF5IEF1Z3VzdCAyMi4gVGhlIHRvcCAyNSBob3RlbHMgZm9yIHBva2llcyBwcm9maXRzIHRvb2sgJDQ4Niw1MzggcGVyIHdlZWsgZnJvbSBjb21tdW5pdGllcyBpbiB0aGUgMjAxNi8xNyBmaW5hbmNpYWwgeWVhciBhbG9uZSBhY2NvcmRpbmcgdG8gdGhlIEdyZWVucyBOU1cgTUxDIEp1c3RpbiBGaWVsZC4gCkJ1dCBSZWlkIHNhaWQgdGhlIGNoYW5nZXMgY3JlYXRlZCBhICJjbHVtc3kiIHByb2Nlc3MgdGhhdCBkb2Vzbid0IGdpdmUgdGhlIGNpdHkgZW5vdWdoIHRvb2xzIHRvIGdvIGFmdGVyIGJhZCBvcGVyYXRvcnMuVGhlIG5ldyBydWxlcyBzb3VnaHQgYXJlIG1lYW50IHRvIGdpdmUgdGhlIGNpdHkgYWRkZWQgZW5mb3JjZW1lbnQgb3B0aW9ucyAgIGluY2x1ZGluZyBhIGhlYXJpbmcgcHJvY2VzcyB0aGF0IGNvdWxkIGxlYWQgdG8gZmluZXMgb3IgbGljZW5zZSByZXZvY2F0aW9ucyAgIHRhcmdldGVkIGF0IG93bmVycyBhbmQgb3BlcmF0b3JzIG9mIGlsbGljaXQgbWFzc2FnZSBwYXJsb3JzLlRoZSBydWxlcyB3b3VsZCBhbHNvIHJlcXVpcmUgYWRkaXRpb25hbCBhcHByb3ZhbHMgZm9yIG1hc3NhZ2UgcGFybG9ycyB0aGF0IG9wZXJhdGUgYXMgYW4gYW5jaWxsYXJ5IGJ1c2luZXNzIGluIG5haWwgc2Fsb25zIG9yIHNwYXMsIG9mIHdoaWNoIHRoZXJlIGFyZSBjdXJyZW50bHkgMzAgdG8gNDAgaW4gSGVuZGVyc29uLCBSZWlkIHNhaWQuQSBtb3JhdG9yaXVtIGhhcyBhbHNvIGJlZW4gcHJvcG9zZWQgb24gbmV3IHJlZmxleG9sb2d5IGVzdGFibGlzaG1lbnRzLCB3aGljaCBkZWFsIHdpdGggdGhlIG1hbmlwdWxhdGlvbiBvZiBmZWV0IGFuZCBoYW5kcyBmb3IgdGhlcmFwZXV0aWMgcmVsaWVmLiAKKEJlaSBmYXN0IGFsbGVuIEVzc3N0cnVuZ2VuIGthbm4gZGFzIHZvcmtvbW1lbjogRUROT1MsIEJFRCwgQW5vcmV4aWUgLiAKTGFib3IgaXMgcmVwb3J0ZWRseSBjb25zaWRlcmluZyB2b3RpbmcgZm9yIHRoZSBmdWxsICQxNDAgYmlsbGlvbiB0YXggY3V0IGFuZCBiYW5raW5nIG9uIHdpbm5pbmcgdGhlIGVsZWN0aW9uIHRvIHJldmVyc2UgdGhlIHBhcnRzIGl0IGRvZXNuIGxpa2UuIApJIGhvbmVzdGx5IGRvbiBiZWxpZXZlIGl0LiAKV2FzIHRoZSB3b3JsZCBmaXJzdCBzdWNoIGFlcm9kcm9tZSwgYW5kIGl0IHdhcyBzdGFmZmVkIGJ5IHRoZSBhbWF0ZXVyIHJvY2tldCBjbHViIG9mIEdlcm1hbnkgd2hpY2ggY29tcG9zZWQgb2Ygc3VjaCBuYW1lcyBhcyBOZWJlbCAod2hvIG5hbWVkIHRoZSBSYWtldGVuIEZsdWdwbGF0eiksIFJpdHRlciwgdm9uIEJyYXVuLCBSaWVkZWwsIEhlaW5pc2gsIGFuZCBPYmVydGgsIGFtb25nIG1hbnkgb3RoZXJzLiAKVGhleSBhcmUgV0ZUREEgYWZmaWxpYXRlZCwgdGhlIGNoYXJ0ZXIgdGVhbSBpcyBhcm91bmQgMTUwLiBJIHRoaW5rIGFueW9uZSBjYW4gam9pbiB0aGUgbGVhZ3VlIG1vc3Qgb2YgdGhlIHllYXIgaWYgeW91IGhhdmUgZXhwZXJpZW5jZSwgYnV0IGJvdGggdGhlaXIgdGVhbXMgc2hvdWxkIGJlIGhhdmluZyB0cnlvdXRzIGluIEphbnVhcnkgYXMgd2VsbC5SdWJpY2trICAxIHBvaW50ICBzdWJtaXR0ZWQgNiBtb250aHMgYWdvQ29tcGxldGluZyBvZmZlcnMgZm9yIGNyb3ducyBpcyBhIGh1Z2UgcmlwIG9mZi4gClNvbWV3aGVyZSBkZWVwIGluIHRoZSBwYWNrYWdlLCB0aGF0IGNvZGUgeW91IGRvbiBoYXZlIHRvIHdyaXRlIGFueW1vcmUgc3RpbGwgZXhpc3RzIGFuZCBjb25zdW1lcyBwcm9jZXNzaW5nIHBvd2VyIHdoZW4gcnVuLi4gClRoaXMgbG9uZSBjb3VudHkgamFpbCBpbiBhIHJlbW90ZSBjb3JuZXIgb2YgQXBwYWxhY2hpYSBvZmZlcnMgYW4gYWdvbml6aW5nIGdsaW1wc2UgaW50byBob3cgdGhlIHRpZGFsIHdhdmUgb2Ygb3Bpb2lkcyBhbmQgbWV0aGFtcGhldGFtaW5lcyBoYXMgcmF2YWdlZCBBbWVyaWNhLiBIZXJlIGFuZCBpbiBjb3VudGxlc3Mgb3RoZXIgcGxhY2VzLCBhZGRpY3Rpb24gaXMgZHJpdmluZyBza3lyb2NrZXRpbmcgcmF0ZXMgb2YgaW5jYXJjZXJhdGVkIHdvbWVuLCB0ZWFyaW5nIGFwYXJ0IGZhbWlsaWVzIHdoaWxlIHNxdWVlemluZyBjb21tdW5pdGllcyB0aGF0IGxhY2sgbW9uZXksIHRyZWF0bWVudCBwcm9ncmFtcyBhbmQgcGVybWFuZW50IHNvbHV0aW9ucyB0byBjbG9zZSB0aGUgcmV2b2x2aW5nIGRvb3IuIE1vcmUgdGhhbiBhIGRlY2FkZSBhZ28sIHRoZXJlIHdlcmUgcmFyZWx5IG1vcmUgdGhhbiAxMCB3b21lbiBpbiB0aGUgQ2FtcGJlbGwgQ291bnR5IEphaWwgaW4gbm9ydGhlYXN0IFRlbm5lc3NlZS4gTm93IHRoZSBwb3B1bGF0aW9uIGlzIHJvdXRpbmVseSBhcm91bmQgNjAuIE1vc3Qgd2hvIGVuZCB1cCBoZXJlIGhhdmUgZm9sbG93ZWQgYSBzaW1pbGFyIHBhdGg6IHRoZXkgYXJyZXN0ZWQgb24gYSBkcnVnIHJlbGF0ZWQgY2hhcmdlIGFuZCBjb25maW5lZCB0byBhIGNlbGwgMjMgaG91cnMgYSBkYXkuIE1hbnkgb2YgdGhlaXIgYnVua21hdGVzIGFsc28gYXJlIGFkZGljdHMuIFRoZXkgcmVjZWl2ZSBubyBjb3Vuc2VsaW5nLiBUaGVuIHdlZWtzLCBtb250aHMgb3IgeWVhcnMgbGF0ZXIsIHRoZXkgcmVsZWFzZWQgaW50byB0aGUgc2FtZSBjb21tdW5pdHkgd2hlcmUgZnJpZW5kcyAgIGFuZCBpbiBzb21lIGNhc2VzLCBmYW1pbHkgICBhcmUgdXNpbmcgZHJ1Z3MuIFNvb24gdGhleSBhcmUgYWdhaW4sIHRvby4gQW5kIHRoZSBjeWNsZSBiZWdpbnMgYW5ldzogQW5vdGhlciBhcnJlc3QsIGFub3RoZXIgYm9va2luZyBwaG90bywgYW5vdGhlciBwaW5rIHVuaWZvcm0gYW5kIG9mZiB0byBhIGNlbGwgdG8gc2ltbWVyIGluIHJlZ3JldCBhbmQgZGVzcGFpci4gQnkgRGF2aWQgR29sZG1hbi9Bc3NvY2lhdGVkIFByZXNzCkJla2Rhc2gncyBpbmZsdWVuY2UgaW4gUGFybGlhbWVudCBpcyBleHBlY3RlZCB0byBiZSBsYXJnZWx5IG5lZ2F0aXZlLiAKU3RyZXNzIGNhbiBjYXVzZSB5b3VyIGhhaXIgdG8gZmFsbCBhdCBhIHJhcGlkIHBhY2UuIExlYXJuIHRvIHJlbGF4IGFuZCByZW1vdmUgb3IgYXZvaWQgdGhlIGNhdXNlcyBvZiBzdHJlc3MgaW4geW91ciBsaWZlLiBPbmNlIHlvdSBzdGFydCB0byBiZSBjYWxtZXIgeW91IHdpbGwgc29vbiBmaW5kIHRoYXQgeW91ciBoYWlyIGZhbGwgd2lsbCBnbyBiYWNrIHRvIG5vcm1hbC4gClVuZGVyIG5vcm1hbCBjaXJjdW1zdGFuY2VzLCB3aGVuIHlvdSBhcmVuIGRlYWxpbmcgd2l0aCB0aGUgUE9UVVMsIGEgc3VzcGVjdCBpcyBwdXQgaW4gamFpbCB1bnRpbCB0aGVpciB0cmlhbC4gCkNvbW1lbnQgdW4gY3JhdGV1ciBwZXV0IGlsIGVuY29yZSB2aXZyZSBxdWFuZCBpbCBlc3QgcHJpdiBkZSBzb24gZXhwcmVzc2lvbiBhcnRpc3RpcXVlID8gUXVlIGRldmllbm5lbnQgc29uIGhpc3RvaXJlLCBzb24gcGFzcywgc29uIHByc2VudCBldCBjb21tZW50IGwnQXV0cmUgaW52ZW50ZSB0IGlsIHNvbiBkZXZlbmlyID8gVGlzc2UgZGUgcXVlc3Rpb25zIHN1ciBsYSBjcmF0aW9uLCBsYSB0cmFuc21pc3Npb24sIGxhIG1tb2lyZSwgbGEgcGVydGUsIGNldHRlIG5vdXZlbGxlIG10YXBoeXNpcXVlIGRlIFlhc3VuYXJpIEthd2FiYXRhIG9zY2lsbGUgZW50cmUgYXBwYXJpdGlvbiBldCBkaXNwYXJpdGlvbiBldCBtZXQgZW4gamV1IGwnYWx0ZXJuYW5jZSBkdSByZWwgIGwnYXUgZGVsLCBkZSBsJ2ludHJpZXVyICBsJ2VuIGRlaG9ycywgZHUgc2lsZW5jZSAgbGEgbXVzaXF1ZS4iLiAKSXQgc2VlbXMgdGhhdCBhbm90aGVyIGZhbW91cyBldmVudCBvY2N1cnJlZCBhdCB0aGUgUGlvbmVlciBTYWxvb24sIHRoaXMgb25lIGhhcHBlbmluZyBvbiBKdWx5IDMsIDE5MTUsIGp1c3QgdHdvIHllYXJzIGFmdGVyIHRoZSBzYWxvb24gaGFkIG9wZW5lZCBmb3IgYnVzaW5lc3MuIApBY2NvcmRpbmcgdG8gdGhlIGxhd3N1aXQgKHZpYSBUTVopLCBUcmF2b2x0YSByZXNwb25kZWQgdG8gdGhlIG1hc3NldXIgb25saW5lIGFkIGFuZCBhcnJhbmdlZCBhbiBhcHBvaW50bWVudC4gVHJhdm9sdGEgaW5jbHVkZWQgc3BlY2lmaWMgaW5zdHJ1Y3Rpb25zIHRoYXQgaGUgd291bGQgcGljayB1cCB0aGUgbWFzc2V1ciBhbmQgdGFrZSBoaW0gdG8gdGhlIEJldmVybHkgSGlsbHMgSG90ZWwgdG8gcGVyZm9ybSB0aGUgJDIwMCBtYXNzYWdlLiBUaGUgdW5uYW1lZCBtYXNzZXVyIGFncmVlZCB3aXRob3V0IGtub3dpbmcgYXQgdGhlIHRpbWUgdGhhdCBpdCB3YXMgdGhlIGZhbW91cyBIb2xseXdvb2QgYWN0b3IgYm9va2luZyB0aGUgbWFzc2FnZS4KSm9lIFBhdGVybm8gd2FzIGhlYWQgY29hY2ggb2YgdGhlIE5pdHRhbnkgTGlvbnMgYXQgdGhlIHRpbWUsIGFuZCBtYW55IGZlZWwgaGUgdHVybmVkIGEgYmxpbmQgZXllIHRvIGhpcyBmcmllbmQncyBjcmltZXMuIEtlbGx5IGFuZCBNaWNoaWdhbiBjb21taXQgTm9sYW4gUnVtbGVyIGF0IHRhY2tsZSwgSG9iYW4gaGFzIG9uZSBvZiB0aGUgYXJlYSdzIG1vc3QgaW1wb3Npbmcgb2ZmZW5zaXZlIGxpbmVzLldobyBoYXMgTm9ydGhlYXN0IE9oaW8ncyBiZXN0IGRlZmVuc2U/IEhTIGZvb3RiYWxsIE1vbmRheSBtb3JuaW5nIFFCIFdobyBoYXMgTm9ydGhlYXN0IE9oaW8ncyBiZXN0IGRlZmVuc2U/IEhTIGZvb3RiYWxsIE1vbmRheSBtb3JuaW5nIFFCIGZpdC4gCkkgdW5kZXJwbGF5ZWQgbXkgQURIRCBpbiBteSBvcmlnaW5hbCBwb3N0IGJ1dCBJIGluY2x1ZGUgaXQgaW4gbXkgdXBkYXRlLiAKVmVyeSBmcmllbmRseSB3aXRoIG91ciBkb2dzICAgc29tZXRpbWVzIHRvIHRoZSBwb2ludCB0aGUgZG9ncyBnb3QgYW5ub3llZCBoYWhhLiAKV2hlbiBJIHdhcyBncm93aW5nIHVwLCBtYXlvcnMgd2VyZSBwZW9wbGUgdGhhdCB5b3UgbG9va2VkIHVwIHRvIGFuZCByZXNwZWN0ZWQuIApDcmVhdGUgYSBzZWxmIHBvc3Qgd2l0aCBhIFVSTCB3aGVuIHBvc3RpbmcgYSBsaW5rLiBJdCBpcyBub3QgYWJsZSB0byBiZSBjbGFpbWVkIGFzIGEgaGVhbHRoIGV4cGVuc2Ugb24geW91ciB0YXhlcyBpbiBNYW5pdG9iYSBhbmQgaXQgaXMgbm90IHVuaXZlcnNhbGx5IGNvdmVyZWQgYnkgYWxsIHBsYW5zLiBNb3N0IFJNVHMgbWFrZSAzMCAgIDUwayBhIHllYXIgKGxlc3MgdGhhbiBJIGEgcHJvZmVzc2lvbmFsIG1ha2UpIGFuZCBhcmUgc2VsZiBlbXBsb3llZCAodGhlcmVmb3JlIGxpa2VseSBub3QgY29udHJpYnV0aW5nIHRvIEVJIG9yIENQUCBhbmQgaGF2ZSBubyBiZW5lZml0cykuIApHYWxsYWdoZXIgc2F5cyBoZSB3YXMgYWx3YXlzIGEgY3JhZnR5IGtpZCBidXQgYWRtaXRzIGhlIHByYWN0aWNlcyByZWd1bGFybHkuIApUaGUgZmluZSBpcyBhIG1pbiBvZiAkMTAsMDAwIG9yIHVwIHRvIGhhbGYgb2YgQUxMIHlvdXIgRm9yZWlnbiBCYW5rIGFjY291bnQgaG9sZGluZ3MgYW5kIHBvc3NpYmxlIGphaWwgdGltZS4gWW91IGRvbiByZWFsbHkgZ2V0IGEgbm9ybWFsIHRyaWFsIG9uIHRoaXMuIEl0cyB1cCB0byB0aGUgd2hpbSBvZiB0aGUgSVJTIEFnZW50IGludmVzdGlnYXRpbmcgeW91LiBCZXR0ZXIgdG8gcm91bmQgdXAgdGhlbiBEb3duLgpNZXRybyBWYW5jb3V2ZXIgVHJhbnNMaW5rIGJ1c2VzIG1vdmluZyBhcnQgYXMgd2VsbCBhcyBwZW9wbGUKUmVhbGx5PyBJIGFsd2F5cyB0aG91Z2h0IHRoZXkgd291bGQgYmUgY29vbCBvbiB0aGUgaW5zaWRlIGxpa2UgbG90cyBvZiB3aW5kb3dzLCBoaWdoIGNlaWxpbmdzLiAKNSBDcnVjaWFsIFJ1bGVzIG9mIEV2ZXJ5IEdhbWUgTm90IEZvdW5kIGluIHRoZSBSdWxlYm9vawpKdXN0IGJlY2F1c2UgeW91IGNhbiBvcGVuICh0dXJuKSBhIGxvY2tlZCBkb29ya25vYiBmcm9tIHRoZSBpbnNpZGUgZG9lc250IG1lYW4gaXQgaXNudCBsb2NrZWQuIApLcmF6eWd1eTc1IHUKVGhlIDIwMTcgZXZlbnQgd2FzIGVzcGVjaWFsbHkgcG9pZ25hbnQgZm9yIGxvY2FsIGJ1cyBlbnRodXNpYXN0cyBhcyBpdCBtYXJrZWQgdGhlIGZpcnN0IHRpbWUgZm9yIDIwIHllYXJzIHRoYXQgdGhlIGZvcm1lciBjbG9zZWQgdG9wIFNvdXRoZXJuIFZlY3RpcyBWaW50YWdlIEZsZWV0IGhhZCBiZWVuIHJldW5pdGVkLiBPcGVyYXRpbmcgb24gdGhlIElzbGFuZCBiZXR3ZWVuIDE5ODYgYW5kIDE5OTYsIHRoZSBmb3VyIG1lbWJlcnMgb2YgdGhlIGRvdWJsZSBkZWNrZXIgZmxlZXQgcHJlc2VydmVkIGluIHRoZSBJc2xlIG9mIFdpZ2h0IEJ1cyBNdXNldW0gd2VyZSByZXVuaXRlZCB3aXRoIHRoZSB0aHJlZSBvd25lZCBwcml2YXRlbHkuIFlvdSB3aWxsIG5ldmVyIHNlZSBhIGZpbmVyIGNvbGxlY3Rpb24gb2Ygd2VsbCBwcmVzZXJ2ZWQgMTk1MHMgNjBzIEJyaXN0b2xzLi4gCkkgdXNlZCB0byBrbm93IG1vcmUgYWJvdXQgdGhpcywgYnV0IGZvciB0aGUgbGlmZSBvZiBtZSBjYW5ub3QgcmVtZW1iZXIgYSBzaW5nbGUgZ29kIGRhbW4gdGhpbmcgYWJvdXQgbXkgbGF3IGNsYXNzZXMgaW4gY29sbGVnZSBleGNlcHQgdGhhdCBidXJpZWQgdHJlYXN1cmUgdHlwaWNhbGx5IGdvZXMgdG8gdGhlIG9uZSB3aG8gZmluZHMgaXQsIGJ1dCBzaG91bGQgZ28gdG8gdGhlIHRyZWFzdXJ5LiAKRm9yIGV4YW1wbGUsIGlmIGhlIGZvciBzb21lIHJlYXNvbiBpcyBhbGxvd2VkIHRvIHVzZSBzb21lb25lIGVsc2UgY29tcHV0ZXIgdGVtcG9yYXJpbHksIGhlIG5vdCBnb2luZyB0byBpbnNpc3Qgb24gaXQgaGF2aW5nIDEwMCUgZnJlZSBzb2Z0d2FyZSBqdXN0IHRvIHVzZSBpdCB0ZW1wb3JhcmlseSBiZWNhdXNlIGhpcyBmcmVlZG9tIGlzIG5vdCBiZWluZyBicmVhY2hlZCBoZXJlLiAKSXQgc3Vja3MgdGhhdCB0aGlzIGhhcHBlbmVkIGJ1dCBpdCdzIGFsc28gbm90IGVudGlyZWx5IHlvdXIgZmF1bHQgYXMgYSBzZW5zaWJsZSBwZXJzb24gd291bGQgaGF2ZSBnaXZlbiB5b3UgZ3V5cyBzcGFjZSBpbnN0ZWFkIG9mIGNyb3dkaW5nIHlvdSBpbi4gClRoaXMgaXMgYSBiaWcgdGhpbmcgcGVvcGxlIGFsd2F5cyBkb24gcmVhbGl6ZS4gSSB1c2VkIHRvIHdvcmsgYXQgYSBwbGFjZSBqdXN0IGxpa2UgRnJ5IChhbmQgYWxtb3N0IGFzIGluYWNjZXNzaWJsZSB0b28hKS4gCkJhcm51bSB3YXMgc2hvd3MgdGhhdCBzY2llbmNlIGNhbm5vdCBraWxsIHN1cGVyc3RpdGlvbiBiZWNhdXNlIGFsbCBiZWxpZWZzLCBpbmNsdWRpbmcgc2NpZW50aWZpYyBvbmVzLCBhcmUgdWx0aW1hdGVseSB0aGUgYWN0IG9mIGh1bWFuIHdpbGwgICBub3QgZWFzaWx5IG9ic2VydmFibGUgZmFjdHMgYW5kIGRhdGEuLiAKV2UgaGF2ZSByZWxlYXNlZCBhIG5ldywgZnVsbCB2ZXJzaW9uIHdpdGggYW4gaW5zdGFsbGVyIGFuZCBhIHNvbWUgdXBkYXRlcyA6IFoyOC4gVmlzdGEgYW5kIFdpbmRvd3MgNyB1c2VycyBzaG91bGQgcHJlZmVyYWJseSBub3QgdXNlIHRoZWlyIFByb2dyYW0gRmlsZXMgLiAKRXZlbiB0aG91Z2ggSm9zaCBsb29rcyBsaWtlIGFuIGFkdWx0LCBoZSBzdGlsbCBoYXMgdGhlIG1hdHVyaXR5IG9mIGEgMTMgeWVhciBvbGQsIGFuZCB0aGUgd2hvbGUgcm9tYW5jZSBwYXJ0IG9mIHRoZSBwbG90IHN0cnVjayBtZSBhcyB0d2lzdGVkIGFuZCBpbm5hcHJvcHJpYXRlLiAKUGFydHkgcG9rZXIgb25saW5lIG9ubHkgZ2l2ZXMgdXMgdGhlIHZlcnkgYmFzaWMgYW5kIGZ1bmRhbWVudGFsIGxhd3Mgb2YgdGhlIGdhbWUuIApUaGUgcHJlc2NyaXB0aW9uIG9mIGRpZXRzIG9uIHRoZSBiYXNpcyBvZiBJZ0cgYmxvb2QgdGVzdHMgc2hvdWxkIGJlIGRpc2NvdXJhZ2VkLi4gClllYWgsIG15IGV4cGVyaWVuY2UgaXMgdGhlIHNhbWUgYXMgTWlrbydzLiBJbiB0aGUgYmFyIHRoYXQgSSB1c2VkIHRvIG1hbmFnZSB3ZSBoYWQgdG8gZ2V0IHJpZCBvZiBhbGwgc2lnbnMgb2YgZ2FtYmxpbmcgKGFuZCBjYXJkcy9kb21pbm9lcyBhcmUgb3V0LCBjaGVzcyBwcm9iYWJseSBub3QhKSBXZSB3ZXJlIGEgbWVtYmVycyBvbmx5IHBsYWNlLCBzbyB3ZSBoYWQgYSBkaWZmZXJlbnQgbGljZW5zZSBhbmQgd2Ugc3RpbGwgd2VyZW4ndCBhbGxvd2VkIHRvIGhhdmUgY2FyZCBwbGF5aW5nLiAKUG9rZXIgaW4gTGVpZGVuClRoZSBkb3dudG93biBjYXNpbm8gaXMgaG91c2VkIGluIHRoZSBIaWdiZWUgQnVpbGRpbmcsIGJ1aWx0IGluIDE5MzEgYXMgYSBkZXBhcnRtZW50IHN0b3JlLiBVbmxpa2UgbW9yZSB0eXBpY2FsIGNhc2lub3MgdGhhdCBoYXZlIGEgc2luZ2xlLCBleHBhbnNpdmUgZ2FtaW5nIGZsb29yIGFuZCBhIGZpZWxkIG9mIGZyZWUgcGFya2luZywgdGhlIEphY2sgRG93bnRvd24gaXMgc3ByZWFkIG92ZXIgZm91ciBmbG9vcnMgYW5kIHBhdHJvbnMgd2hvIGRyaXZlIGluIG11c3QgcGFyayBpbiBhIG11bHRpIHN0b3J5IHBhcmtpbmcgZ2FyYWdlIGxpbmtlZCB0byB0aGUgc2Vjb25kIGZsb29yIG9mIHRoZSBIaWdiZWUgQnVpbGRpbmcuIEFzIGEgcmVzdWx0LCBpdCBsYWNrcyB0aGUgZ2xhbW9yIG9mIGEgZ3JhbmQgZW50cmFuY2UgdHlwaWNhbCBvZiBhIExhcyBWZWdhcyBjYXNpbm8uLiAKQnV0IGRvIHlvdSB0aGluayBoZSBjYXJlcz8gRG8geW91IHRoaW5rIGhpcyBmYW1pbHkgYW5kIGNsb3NlIGZyaWVuZHMgY2FyZT8gRG8geW91IHRoaW5rIGhpcyBraWRzIGNhcmU/IEFuZCBob3cgd291bGQgYWxsIHlvdSBoYXRlcnMgZmVlbCBpZiBoaXMga2lkcyByZWFkIHlvdXIgaGF0ZWZ1bCBkcml2ZWwgYW5kIHdlcmUgaHVydCBieSB5b3VyIHBhdGhldGljIHdvcmRzPyBXaGF0IHRoZSBoZWxsIGRvZXMgaXQgbWF0dGVyIHRvIHlvdSB3aGV0aGVyIGhlIGNoZWF0ZWQgb3Igbm90PyBZb3UgaGF2ZSBhYnNvbHV0ZWx5IG5vIGV2aWRlbmNlIHRoYXQgaGUgZGlkLiAKU2VuZCBtZXNzYWdlcyBvZiBzdXBwb3J0LCBpbXBvcnRhbnQgcGllY2VzIG9mIGluZm9ybWF0aW9uLCBhbmQgbG92ZS4gCkhlIGxpdGVyYWxseSBsaXZlcyBpbiBhIGJ1YmJsZSB3aGVyZSBoZSBkb2VzbiBzZWUgaG93IGdyZWF0IHRlbGV2aXNpb24gY3VycmVudGx5IGlzLiAKIkEgYnJlYWsgZGFuY2VyICsgbWFydGlhbCBhcnRpc3QgdHVybmVkIHlvZ2EgaW5zdHJ1Y3RvciB3aG8gZmlyc3QgYmVnYW4gcHJhY3RpY2luZyB0aGUgZGlzY2lwbGluZSB0byBhbGxldmlhdGUgdGhlIHN0cmVzcyBwaHlzaWNhbCBhaWxtZW50cyBkZXJpdmVkIGZyb20gY3JhbmtpbmcgdGhyb3VnaCBhIHN0YW5kYXJkIG5pbmUgdG8gZml2ZSBkZXNpZ24gam9iLiAKVGhlIFNhbXNvbiBJSSwgUGVsaWNhbiBhbmQgTWFydGxlIHN0b29kIGJzIHRvIHJlbmRlciBhaWQgdG8gdGhlIENpdHkgb2YgVmljIHRvcmlhIGluIGNhc2Ugb2YgbmVlZC4gQWxsIG92ZXIgdG93biB0aGUgcmFkaW8gcG9sZSB3ZXJlIGJsb3duIGRvd24uIFRoZSBtYXJxdWUgb2YgTWFuY2EncyB3YXMgdG9ybiBsb29zZSBmcm8gdGhlIGJ1aWxkaW5nLiBBdCBKb2huIFdpbHNvbidzIHNtb2tlIGhvdXNlIHdhcyBibG93biB0d2VudHkgZmVldC4gVGhlIHJvb2Ygb3ZlciB0aGUgbG91bmdlIG9mIHRoZSBDb2x1bWJpYSBDb2NrdGFpbCBCYXIgd2FzIHN3ZXB0IGF3YXkuIApBY2tub3dsZWRnZWQgTWlsbGFyIGRpZmZpY3VsdCBsaWZlIGFuZCBiYWNrZ3JvdW5kLCBidXQgaGUgdG9sZCB0aGUgY291cnQgdGhhdCBoZXIgZGVzY3JpcHRpb24gb2YgdGhlIHZpb2xlbnQgaW5jaWRlbnQgaW4gcXVlc3Rpb24sIGFzIGRldGFpbGVkIGluIGEgcHJlIHNlbnRlbmNlIHJlcG9ydCwgbm8gc2Vuc2UuIApIZSBiZWVuIGRvaW5nIHR3byBuaWdodCBjbGFzc2VzIGEgc2VtZXN0ZXIgKGluY2x1ZGluZyBmaXZlIHVuZGVyZ3JhZCBjbGFzc2VzIGhlIG5lZWRlZCBhcyBwcmVyZXFzIGJlY2F1c2UgaGUgZGlkbiB0YWtlIHRoZW0gaW4gY29sbGVnZSkgZm9yIGEgbWFzdGVyIGluIHN0YXRpc3RpY3MsIGFuZCBoZSBnZXR0aW5nIEFzIGluIGFsbCBvZiB0aGVtLiBIZSBoYXMgYW5vdGhlciBmaXZlIGNsYXNzZXMgdG8gZ28sIG9uZSBvZiB3aGljaCBoZSB0YWtlIGFzIGEgc3VtbWVyIGNvdXJzZSwgYW5kIHRoZW4gaGUgZG9uZS4gClRoaXMgZGF5IHdlIG1vdW50ZWQgNiBTd2l2ZWxzIGF0IHRoZSBGb3J0LCB3aGljaCB3YXMgbm93IG5lYXJseSBmaW5pc2hlZC4gCiJUaGV5IGRpZG4ndCBoYXZlIGEgdG9uIG9mIGNoYW5jZXMuIApEdXJpbmcgYSB3ZWVrbmlnaHQgcmV2aWV3IHZpc2l0LCBteSBkaW5pbmcgY29tcGFuaW9uIGFuZCBJIGZvdW5kIHRoZSB0cnVjayBwYXJrZWQgb3V0c2lkZSBHdW5iYXJyZWwgQnJld2luZywgd2hpY2ggcHJvdmlkZWQgYSBzcGFjaW91cyBhbmQgY29tZm9ydGFibGUgaW50ZXJpb3IgdG8gY291bGQgZW5qb3kgb3VyIG1lYWwuIFNvbWUgb2YgdGhlIHNpZGVzIGhhdmUgYSB0cmFkaXRpb25hbCBhc3NvY2lhdGlvbiB3aXRoIGZyaWVkIGNoaWNrZW47IG90aGVycyByZWZsZWN0IGEgbW9yZSBtb2Rlcm4sIGZhcm0gdG8gdGFibGUgc2Vuc2liaWxpdHksIG5vIG1lYW4gZmVhdCBpbiBzcGFyc2Ugd2ludGVyIG1vbnRocy4gSXQncyBhIGZhaXIgZ3Vlc3MgdGhhdCBRdWlsbGluZydzIHByaW9yIGZpbmUgZGluaW5nIGV4cGVyaWVuY2UsIG1vc3Qgbm90YWJseSBhdCBCb3VsZGVyJ3MgT2FrIGF0IEZvdXJ0ZWVudGgsIGluZm9ybXMgdGhpcyBhcHByb2FjaC4uIApKJ2FpIHBsdXNpZXVycyBwYXRpZW50ZXMgcXVpIG9udCBtZW4gdW5lIGdyb3NzZXNzZSBzYW5zIGF1Y3VuIHByb2JsbWUsIHByaXMgNSA2IGtpbG9zIGV0IGFjY291Y2ggZCd1biBiYiBlbiBwbGVpbmUgZm9ybWUuLiAKQWxzbyB0byBqdXN0IGFzc3VtZSBiZWNhdXNlIHlvdSBkaXNhZ3JlZSB3aXRoIG1lIHRoYXQgbWFrZXMgbWUgYSBoYXJkIHJpZ2h0IHdpbmcgcmVwdWJsaWNhbiB5b3UgcmVhbGx5IG5lZWQgdG8gZ2V0IG91dCBvZiB5b3VyIGVjaG8gY2hhbWJlci4gTXkgdmlld3MgYXJlIG9idmlvdXNseSBub3QgY29uY2VydmF0aXZlLgpEZXRyb2l0IExpb25zIExpbmViYWNrZXIgQXJyZXN0ZWQgRm9yIFB1bmNoaW5nIE9mZmljZXJUaGUgRGV0cm9pdCBMaW9ucyBsaW5lYmFja2VyLCBUcmV2b3IgQmF0ZXMsIHdhcyBhcnJlc3RlZCBTYXR1cmRheSBpbiBOZXcgWW9yayBvbiBjaGFyZ2VzIHRoYXQgaGUgZmFpbGVkIHRvIHBheSBhIHRheGkgdGhlbiBwdW5jaGVkIGEgcG9saWNlIG9mZmljZXIuCkxlIGZhaXQgcXUgbiBhdXJhIHBhcyBkZSBwcm9jcyBsdWkgZW5sdmUgdW4gcG9pZHMgc3VyIGxlcyBwYXVsZXMuIEogc3RyZXNzZSBkIGFwcGVsZSAgdG1vaWduZXIsIGplIG5lIHZvdWxhaXMgcGFzLCBjb25maWUgbGEgamV1bmUgZmlsbGUuCkkgVGhlIG9mZmljaWFsIHNhaWQgaGUgdHJpZWQgKG8gdGVsZSAgcGhvbmUgdGhlIG5lZ290aWF0b3JzIHNob3J0bHk7IFNlZSBQSUlPWEsgVEFMSywgUGFnZSA0IEkgRGVtb2NyYXQgYW5ub3VuY2VkIGhpcyByZXRpcmUgIG1lbnQgYWx0ZXIgeWVhcnMgaW4gMTInaW4gdGhlIEhvdXNlIGFuZCAyMyBpbiB0aGUgU2VuYXRlLiAKSW4gYSBzdGF0ZW1lbnQgaXNzdWVkIGJ5IEFraHRhciBIdXNzYWluIEJhbG9jaCwgUmVnaW9uYWwgTWFuYWdlciwgU2luZGggU1BBUkMsIGl0IHdhcyBsZWFybnQgdGhhdCBtYW55IGNoaWxkcmVuIGhhdmUgc3VmZmVyZWQgYW5kIGxvc3QgdGhlaXIgY2hpbGRob29kIGF0IHRoZSBoYW5kcyBvZiB0aGVpciBwYXJlbnRzLCBpbiBhZGRpdGlvbiB0byB0aGVpciBob3VzZXMsIGxhbmRzLCBjYXR0bGUgZmFybXMsIHNob3BzIGFuZCBvdGhlciBob2xkaW5ncy4KSSB3YXMgdGhlIHNhbWUgaW4gdGhlIGJlZ2lubmluZyAuIFVudGlsIEkgZ290IG11Z2dlZC4gCiJUaGUgYXJ0IG9mIG1lZGljaW5lIGNvbnNpc3RzIG9mIGFtdXNpbmcgdGhlIHBhdGllbnQgd2hpbGUgTmF0dXJlIGN1cmVzIHRoZSBkaXNlYXNlLiIgVm9sdGFpcmUKU2VlbXMgdGhhdCB3aGVuIHRoZSByYXRzIGFyZSBleHBvc2VkIHRvIGdhc3RyaWMgaXJyaXRhdGlvbiBhdCB0aGUgYXBwcm9wcmlhdGUgcG9pbnQgaW4gdGltZSwgc2FpZCBQYXNyaWNoYSwgaXMgc2lnbmFsaW5nIGFjcm9zcyB0aGUgZ3V0IHRvIHRoZSBicmFpbiB0aGF0IHBlcm1hbmVudGx5IGFsdGVycyBpdHMgZnVuY3Rpb24uIFJlc2VhcmNoZXJzIGFyZSBub3cgcGxhbm5pbmcgdG8gaW52ZXN0aWdhdGUgZXhhY3RseSBob3cgdGhhdCBzaWduYWxpbmcgaXMgaW5pdGlhdGVkIGFuZCBhY3RzIGluIHRoZSBicmFpbiwgYW5kIHdoZXRoZXIgaXQgbWlnaHQgYmUgcG9zc2libGUgdG8gZGV2ZWxvcCBuZXcgd2F5cyB0byB0cmVhdCBkZXByZXNzaW9uIGFuZCBhbnhpZXR5IGluIGh1bWFucy4uIApUaGUgZ2FtZSBnb2VzIG9uIGZvciAyIGhhbHZlcyBvZiA0NSBtaW51dGVzIGVhY2gsIHBsdXMsIHRoZXJlIGFsbW9zdCBldmVyeSBjb3VudHJ5IGluIHRoZSB3b3JsZCBwbGF5cyB0aGUgJ2JlYXV0aWZ1bCBnYW1lJy4gVGhlIG9sZGVzdCBmb290YmFsbCBzdGFkaXVtIGluIHRoZSBOb3J0aCBFYXN0LCBmb290YmFsbCBoYXMgaXMgYSBsb3Qgb2YgcHN5Y2hvbG9neSBpbnZvbHZlZCBJIHRoZSBjaG9vc2luZyB0aGUgcmlnaHQgZm9vdGJhbGwgdW5pZm9ybXMgZm9yIHlvdXIgdGVhbS4gSnVzdCBmaXZlIHllYXJzIGxhdGVyLCB0aGUgdGVhbSB3ZXJlIHN0aWxsIGdvaW5nIGEgZ2FtZSB3aGljaCBpcyBhIG1peHR1cmUgb2YgcnVnYnkgYW5kIHNvY2Nlci4gV2hlbiB0aGUgYmFsbCBpcyBraWNrZWQgb3ZlciB0aGUgY3Jvc3NiYXIgYW5kIHRocm91Z2ggdGhlIGFuZCB0aG91Z2h0IGl0IHdvdWxkIGJlIGEgZ29vZCBpZGVhIHRvIHBpY2sgdXAgdGhlIGJhbGwgaW4gaGlzIGhhbmRzIGFuZCBydW4gdW5jaGFsbGVuZ2VkIGluc3RlYWQuIEJ1dCBhbGwgc2FpZCBhbmQgZG9uZSwgZXZlbiB0aG91Z2ggdGhlIHF1YXJ0ZXJiYWNrIGdldHMgbW9zdCBvZiB0aGUgY3JlZGl0IGFuZCB0aG91Z2h0IGl0IHdvdWxkIGJlIGEgZ29vZCBpZGVhIHRvIHBpY2sgdXAgdGhlIGJhbGwgaW4gaGlzIGhhbmRzIGFuZCBydW4gdW5jaGFsbGVuZ2VkIGluc3RlYWQuCkZvciBiaWcgY29tcGFuaWVzLCBpdCdzIGEgY2hhbmNlIHRvIHNob3cgb2ZmIHRoZSBsYXRlc3QgYW5kIGdyZWF0ZXN0IHByb2R1Y3RzLiAKU2luY2UgMjAxNCwgSmVubmEgYW5kIEp1bGlhIGhhdmUgaGVscGVkIHRoZWlyIG1vdGhlciwgS2FyZW4sIHdpdGggaGVyIGNoYXJpdHkgS2FyZW4ncyBIb3BlLCB3aGljaCBwcm92aWRlcyBob3VzaW5nIGFuZCBsaXZpbmcgYXNzaXN0YW5jZSBmb3IgdGhvc2Ugd2l0aCBkZXZlbG9wbWVudGFsIGRpc2FiaWxpdGllcyAgIGxpa2UgdGhlIHR3aW5zJyAyNyB5ZWFyIG9sZCBicm90aGVyLCBSeWFuLCB3aG8gaGFzIGF1dGlzbS4gT3ZlciB0aGUgcGFzdCBmb3VyIHllYXJzLCB0aGUgdHdvIGhhdmUgYXJyaXZlZCBob3VycyBiZWZvcmUgS2FyZW4ncyBIb3BlIGZ1bmRyYWlzZXJzIHRvIHNldCB1cCwgYW5kIGhhdmUgaGVscCBhcm91bmQgdGhlIGhvdXNlIHdoZW4gdGhlaXIgbW90aGVyIHdhcyBidXN5IHdpdGggdGhlIHdvcmsgb2YgdGhlIGZvdW5kYXRpb24uLiAKSSBmYWlsIHRvIHNlZSBob3cgdGhpcyBpcyBjb21wYXJhYmxlIGFueXdheSwgYXMgbm9ib2R5IHdobyBpc24gY3JpbWluYWxseSBpbnNhbmUvc2xvcHBpbHkgZHJ1bmsgd2VhcnMgYSBqb2NrIHN0cmFwIG9uIHRoZWlyIGhlYWQuIFRoZSBwZWFybCB3ZWFyZXJzIGFyZW4gbWFraW5nIGZ1biBvZiBNREEgZm9yIGJlaW5nIGZlbWFsZSwgdGhleSBtYWtpbmcgZnVuIG9mIHRoZW0gZm9yIGJlaW5nIGFzc2hvbGVzLgpUaGV5IHRha2UgYSBsb3Qgb2YgdGFsZW50LCBidXQgdGhlIHN0eWxlcyBhbGwgbG9vayB0aGUgc2FtZS4gClN0ZXAgMTogQmFsYW5jZSB5b3VyIGdvZCBkYW1uIHJhbmdlLiBJZiB5b3UgbmV2ZXIgM2JldHRpbmcgbGlnaHQgb3IgM2JldCBibHVmZmluZywgb3Igc2VsZG9tIGVub3VnaCB0aGF0IGl0IGRvZXNuIG1hdHRlciB5b3UgYXJlIHVuYmFsYW5jZWQuIApBcyBmb3IgdGhlIFJ1c3NpYW5zLCBvcmRpbmFyaWx5IEkgZmVlbCBiYWRseSBUU0NDIHdhcyB0cnlpbmcgdG8gaW52YWRlIHRoZWlyIHNvdmVyZWlnbnR5LiBCdXQgdGhpcyBpcyBSdXNzaWEuIFRoaXMga2luZCBvZiBzdHVmZiBpcyB0aGUgd2Vha2VzdCBvZiB3aGF0IHRoZXkgZG8gdG8gZXZlcnlvbmUsIGFsbCB0aGUgdGltZS4KRGFubiBrYW5uIG1hbiBkYW5uLCBqZSBuYWNoIGRlbSB3YXMgbWFuIG1hY2hlbiB3aWxsLCB2ZXJzdWNoZW4gZGFzIEtpbmQgenUgYmVydWhpZ2VuIG9kZXIgYXVmaHJlbi4gClRoZW4gdGhlcmUgd2FzIE1hbm55IFBhY3F1aWFvIGJ1dCBoZSB0dXJuZWQgaGlzIGF0dGVudGlvbiB0byBmaWdodGluZyBhIGJ1bmNoIG9mIG9sZCBnZWV6ZXJzIGluIHRoZSBQaGlsaXBwaW5lcyBTZW5hdGUuIApJbiBmYWN0LCBnb29nbGluZyBpdCBoYXMgVXJiYW4gRGljdGlvbmFyeSBhbmQgZXZlcnkgZnVja2luZyBhcnRpY2xlIHNheWluZyB0aGF0IGl0IHNsYW5nIGZvciBleGl0aW5nIHF1aWV0bHkgYW5kIG5vdCBsb25nLCBkcmF3biBvdXQgZ29vZGJ5ZXMuIApWYW5pdHkgaXMgYSBmYXIgc2Vjb25kLCBhbmQgZXZlbiB0aG91Z2ggSSB3YW50IHRoZW0gdG8gYmUgaGFwcHkgd2l0aCB0aGVpciBnbGFzc2VzLCB0aG9zZSBwYXRpZW50cyBuZWVkIGV2ZXJ5IGRvbGxhciB0aGV5IGhhdmUgZm9yIG90aGVyIHRoaW5ncyBpbiBsaWZlLiAKSW4gMTkzOCBDb2x2aWcgbGVmdCBEaXNuZXkgU3R1ZGlvczsgaW4gdGhlIDE5NDBzIEdvb2Z5IGFwcGVhcmVkIGluIGEgc2VyaWVzIG9mIEhvdyBUbyBzaG9ydCBmaWxtcyBpbiB3aGljaCBoaXMgYWN0aW9ucyB3ZXJlIGRlc2NyaWJlZCBieSBhIG5hcnJhdG9yIHRvIGF2b2lkIHRoZSBuZWVkIGZvciBoaW0gdG8gaGF2ZSBkaWFsb2d1ZS4gCiJUaGUgdHlwZSBvZiBwcm9kdWN0LCB0aGUgdHlwZSBvZiBnYW1pbmcsIGFuZCB0aGUgdHlwZSBvZiBleHBlcmllbmNlIHRoYXQgd2UgcHJvdmlkZSBvbiBvdXIgdmVzc2VscyBpcyBzbyBtdWNoIGltcHJvdmVkIG92ZXIgYW55dGhpbmcgeW91J3ZlIGV2ZXIgc2VlbiwiIHNhaWQgTGVzdGVyIEJ1bGxvY2ssIENFTyBvZiBWaWN0b3J5IENhc2lubyBDcnVpc2VzLiAiV2UgYXJlIGxvb2tpbmcgdG8gZW1wbG95IDIwMCBwZW9wbGUuIApGaXJzdCwgYXMgSSBleHBsYWluZWQsIHRoZXkgYXJlIGV4cGxhaW5pbmcgdGhlaXIgZXhwZWN0YXRpb24sIHdoaWNoIHJlcXVpcmVzIG5vIHN1cHBvcnQgZnJvbSBhbnkgZGF0YSBhdCBhbGwuIApBbmQgSSB3YXMgdGVsbGluZyBwZW9wbGUgd2l0aCB0aGlzIHBvaW50IG9mIHZpZXcgdGhleSB3ZXJlIGNyYXp5LCB0aGV5IHN1cmUgdGhlIGZ1Y2sgYXJlbiBKdWljZSBSb2JpbnNvbiBsb3N0IHRvIGEgZ3V5IHRoYXQgbG9va3MgbGlrZSBhIGJ1c3RlZCBjYW4gb2YgYmlzY3VpdHMuIApBcyBJIHNhaWQgSSB0aG91Z2h0IHRoYXQgc2luY2UgdGhpcyBzdG9yeSB3b3VsZCBiZSByZSB0aXRsZWQgKHJlIHdyaXR0ZW4/KSBhcyAiVGhlIEF0b21pYyBCb21iIiB0aGF0IGl0IGhhZCBzb21ldGhpbmcgdG8gZG8gd2l0aCB0aGUgYm9tYiwgdGhvdWdoIGl0IHNlZW1zIG5vdCB0bywgZXhjZXB0IGZvciBzb21laG93IHdlYXBvbml6aW5nIGEgY3ljbG90cm9uLiAKR2V0IHJlYWR5IHRvIHllbGwsICJCSU5HTyEiIGJlY2F1c2UgV2lubmFWZWdhcyBpcyB0aGUgYmVzdCBwbGFjZSBhcm91bmQgZm9yIHNvbWUgbGl2ZWx5IEJpbmdvLiBXaW5uYVZlZ2FzIGhhcyBncmVhdCBsaXZlIGVudGVydGFpbm1lbnQgaW4gdGhlIEV2ZW50IENlbnRlciBhbmQgdGhlIG5ld2x5IHJlbm92YXRlZCBMb3VuZ2UgQmFyLiAKSnVzdCBzaW5jZSB0aGUgZWFybHkgMjAwMHMsIG1lZGlhbiBwcm9wZXJ0eSB2YWx1ZXMgaW4gdGhlIEVhc3QgVmlsbGFnZSBoYXZlIHJpc2VuIGZyb20gYWJvdXQgJDI1MGsgcGVyIHBsYWNlIHRvIGFyb3VuZCAkMS41IG1pbGxpb24uIFNpbmlzdGVyLCBib2hlbWlhIGRlc3Ryb3lpbmcgQmVubnkgcGxhbnMgdG8gZWF0ICQ1MCwwMDAgJDgwLDAwMCBhIHllYXIgaW4gbG9zdCByZW50IChvbiB0b3Agb2YgcGF5aW5nIGEgbW9ydGdhZ2UgQU5EIHByb3BlcnR5IHRheCkgZm9yIGEgbXVsdGkgbWlsbGlvbiBkb2xsYXIgYXBhcnRtZW50LCBhbGwgc28gaGUgY2FuIGhlbHAgaGlzIHR3byBzbGFja2VyIGZyaWVuZHMgb3V0Li4gCkkgc29ycnksIGJ1dCB0aGlzIHNlZW1zIGxpa2UgYSB2ZXJ5IHNpbGx5IGJhdHRsZSB0byBmaWdodC4oQXMgYW4gYXNpZGUsIHRoZSBBbmdsaWNhbiBjaHVyY2ggc2VlbXMgdG8gaGF2ZSB1c2VkIGl0IG1vcmUgb2ZmZW5zaXZlbHkgdGhhbiB0aGUgTHV0aGVyYW5zIGV2ZXIgaGF2ZS4gClRoZSByZWFzb24gSSBkaWQgYWxsIHRoYXQsIGlzIHRoZSBiaWdnZXN0IGZhY3RvciBmb3Igc3RpY2tpbmcgaXMgZ29pbmcgdG8gYmUgdGVtcGVyYXRlLiBJZiB5b3UgdGFrZSBiZWQgc2hhcGUvbGV2ZWxpbmcvZGlzdGFuY2Ugb3V0IG9mIHRoZSBlcXVhdGlvbiwgaXQgZWFzaWVyIHRvIGZvY3VzIG9uIHRlbXBlcmF0dXJlIHdpdGhvdXQgd29ycnlpbmcgYWJvdXQgb3RoZXIgZmFjdG9ycyBtZXNzaW5nIHVwIHlvdXIgbGF5ZXJzLgpUaGVzZSBOYXRpdmUgQW1lcmljYW4gb3duZWQgY2FzaW5vcyBvZmZlciBwcmV0dHkgbXVjaCB3aGF0IFZlZ2FzIGRvZXMgICBzbG90cywgYmxhY2tqYWNrLCByb3VsZXR0ZSwgcG9rZXIgYW5kIGxvdHMgb2Ygb3RoZXIgd2F5cyB0byBxdWlja2x5IGdpdmUgYXdheSB5b3VyIGNhc2guIFNvbWUgZXN0YWJsaXNobWVudHMgaW5jbHVkZSBkaW5pbmcsIGxvZGdpbmcsIGdvbGYsIGFydCBtdXNldW1zIGFuZCBzcGEgc2VydmljZXMsIHdoaWxlIG90aGVycyBhcmUgYWxsIGFib3V0IHRoZSBiZXQgW3NvdXJjZTogU0RUQV0uLiAKUydpbCBlc3QgbGUgY2FuZGlkYXQgZGUgTFJFTSwgYydlc3QgcHJvYmFibGVtZW50IGRhbnMgY2V0IGFycm9uZGlzc2VtZW50IHF1ZSBsJ2FjdHVlbCBwb3J0ZSBwYXJvbGUgZHUgZ291dmVybmVtZW50LCBCZW5qYW1pbiBHcml2YXV4LCBsZSBzZXJhICAgbidvdWJsaW9ucyBwYXMgcXUnaWwgeSBhIHQgbHUgZHB1dCBlbiAyMDE3LiBJbCBwb3VycmEgYWxvcnMgY29tcHRlciBzdXIgbGUgc291dGllbiBkJ2V4IExSIHBhc3NzICBMUkVNIGNvbW1lIGxhIGNvbnNlaWxscmUgZGUgUGFyaXMgRGVib3JhaCBQYXdsaWsgb3UgYmllbiBMYXVyZW50IFNjaG91dGV0ZW4uLiAKTXVzaWNhbEZhbjIzICAxIHBvaW50ICBzdWJtaXR0ZWQgMSBkYXkgYWdvCldTT1Agb2ZmaWNpYWxzIGFjY2VwdGVkIDIsODA5IHBsYXllcnMgTW9uZGF5IGJlZm9yZSBjbG9zaW5nIHJlZ2lzdHJhdGlvbiBhYm91dCB0d28gaG91cnMgYmVmb3JlIHRoZSBub29uIHN0YXJ0IHRpbWUgb2YgZGF5IDFEIG9mIHRoZSB0b3VybmFtZW50LgpJbiBBbGFza2EgaW4gMjAwNiwgYSBEZW1vY3JhdGljIHByaW1hcnkgZm9yIGEgSG91c2Ugc2VhdCB3YXMgZGVjaWRlZCBieSBhIGNvaW4gdG9zcy4gVGhlIGNvaW4gZmVhdHVyZWQgd2FscnVzZXMgb24gdGhlIGhlYWRzIHNpZGUgYW5kIHRoZSBBbGFza2Egc3RhdGUgc2VhbCBvbiB0aGUgdGFpbHMgc2lkZS4gSW5jdW1iZW50IENhcmwgTW9zZXMgY2FsbGVkIGhlYWRzLCB0aGUgY29pbiBjYW1lIHVwIHRhaWxzLCBzbyBjaGFsbGVuZ2VyIEJyeWNlIEVkZ21vbiB3YXMgbmFtZWQgdGhlIHdpbm5lci4uIApJbiB0aGUgbWVhbndoaWxlIG1vc3Qgb2YgdGhlIHJlc3Qgb2YgZXVyb3BlIGlzIGNsb3NpbmcgYm9yZGVycywgcHV0dGluZyB1cCBmZW5jZXMgYW5kIHJlamVjdGluZyBpbW1pZ3JhbnRzLiAKVHVxdSBoYXMgZm91ciBjYXNlczogVGhlIGRpcmVjdCBjYXNlIGluZGljYXRlcyB0aGUgc3ludGFjdGljIHBpdm90ICh3aGljaCBpcyBkZXRlcm1pbmVkIGJ5IHRoZSBkZWZpbml0ZW5lc3MgYW5kIHNwZWNpZmljaXR5IG9mIHRoZSB2ZXJiIGFyZ3VtZW50cykuIFRoZSBvdGhlciBjb3JlIGFyZ3VtZW50IG9mIHRyYW5zaXRpdmUgdmVyYnMgaXMgbWFya2VkIHdpdGggdGhlIGluZGlyZWN0IGNhc2UuIFRoZSBvYmxpcXVlIG1hcmtzIHRoZSByZWNpcGllbnQgb2YgZGl0cmFuc2l0aXZlIHZlcmJzICh1bmxlc3MgaXQgaXMgdGhlIHN5bnRhY3RpYyBwaXZvdCkgYW5kIHRoZSBvYmplY3Qgb2YgYSBwcmVwb3NpdGlvbjsgdGhlIG9ibGlxdWUgZnVuY3Rpb25zIHNpbWlsYXIgdG8gdGhlIGRhdGl2ZSBhbmQgbG9jYXRpdmUgb2Ygb3RoZXIgbGFuZ3VhZ2VzLiBBbmQgZmluYWxseSwgdGhlcmUgaXMgdGhlIGdlbml0aXZlLCB3aGljaCBpbmRpY2F0ZXMgcG9zc2Vzc2lvbiwgYW1vbmcgb3RoZXIgdGhpbmdzLiBUdXF1IG5vdW5zIGFsc28gaGF2ZSBhIGNvbnN0cnVjdCBzdGF0ZSwgd2hpY2ggaXMgdXNlZCBmb3IgZm9ybWluZyBjb21wb3VuZHMuCk5vIGRveHhpbmcuIERvIG5vdCBzaGFyZSBvciBhc2sgZm9yIHBlcnNvbmFsIGluZm9ybWF0aW9uIG5vdCBpbmNsdWRlZCBpbiB0aGUgZG9jdW1lbnRhcnkgb3IgY2FzZSBmaWxlcy4gCkhvdyB0byBCdXkgT2xkIENhc2lubyBQb2tlciBDaGlwcyBNYWRlIG9mIENsYXkKU29tZSBkYXlzLCBzZWxsaW5nIG91dCBpcyB0YW50YWxpemluZy4gClRoZXNlIGluY2lkZW50cyBsZWZ0IGEgZGVlcCBtYXJrLiBTbywgYXQgMTMsIHdpdGggYSBiaXQgb2YgYSBwcm9kIGZyb20gaGVyIG1vdGhlciwgU2lvYmhhbiBoYWQgaGVyIGhhaXIgJ3JlbGF4ZWQnIGZvciB0aGUgZmlyc3QgdGltZSwgYSBwcm9jZXNzIHdoZXJlYnkgY2hlbWljYWxzIGFyZSBhcHBsaWVkIHRvIGhhaXIgdG8gY2hhbmdlIGl0cyBzdHJ1Y3R1cmUgYW5kIHJlbGF4IHRoZSBuYXR1cmFsIGN1cmwuIFRoZSByZXN1bHRzIGNhbiBsYXN0IGZvciBtb250aHMsIGJ1dCBpdCB0YWtlcyBob3VycyBhbmQgY2FuIGNhdXNlIHNjYWxwIGJ1cm5zLgpEYW5pZWwgbmVjZXNpdCA0NiByZWNvbXByYXMsIHF1ZSBzdW1hZGFzIGEgbG9zIGFkZCBvbnMgeSBhIGxhIGluc2NyaXBjaW4gZXF1aXZhbGVuIGFsIHBhZ28gZGUgdSRzLiAKRXZlcnlvbmUgaGFzIGEgdGhlb3J5LCBhIGhpZGRlbiBoYW5kLCBhIHRoZXNpcywgYW5kIGEgcHJlZGljdGlvbiwgYnV0IHRoZSBvYnZpb3VzIG9uZSB0aGF0IGV2ZXJ5b25lIHNlZW1zIHRvIGJlIG1pc3NpbmcgaXMgdGhhdCBhbGwgdGhpcyB3cmFuZ2xpbmcgaXMgaGFwcGVuaW5nIHRvIGtlZXAgR2VuZXJhbCBNdXNoYXJyYWYgaW4gcG93ZXIgICBub3RoaW5nIG1vcmUgYW5kIG5vdGhpbmcgbGVzcy4gClRoZSBiZWhhdmlvciBhbmQgY29tbWVudHMgeW91IGRlc2NyaWJlIGhlcmUgYXJlIHZlcnkgY29uY2VybmluZy4gVGhpcyBhcHBlYXJzIGFidXNpdmUuIE15IGh1c2JhbmQgaXMgc2tlcHRpY2FsIG9mIG1lbnRhbCBoZWFsdGggcHJvZmVzc2lvbmFscyBhbmQgbWVkaWNhdGlvbiBkdWUgdG8gdGhlIHdheSBoZSB3YXMgcmFpc2VkLCBidXQgaGUgaGFzIG5ldmVyIHRyaWVkIHRvIGRpc2NvdXJhZ2UgbWUgZnJvbSB0cmVhdGluZyBteXNlbGYgb3Igb3VyIGtpZHMgYXMgSSBhbmQgb3VyIGRvY3RvcnMgc2VlIGZpdC4gSGUgdW5kZXJzdGFuZHMgaGlzIG9waW5pb24gb25seSBpbmZsdWVuY2VzIGlmIGhlIHBlcnNvbmFsbHkgdGFrZXMgbWVkaWNhdGlvbiBhbmQgdGhhdCBoaXMgaGFuZyB1cHMgYXJlIGhpcyBhbG9uZS4KSW4gdGhlIGNhc2lubyBpdCBpcyBhbGwgbHVjayBhbmQgdGhlIG9kZHMgYXJlIGFnYWluc3QgeW91LCBhbmQganVzdCBhYm91dCBldmVyeW9uZSBwbGF5aW5nIHVuZGVyc3RhbmRzIHRoZSBhZHZhbnRhZ2UgcG9pbnRzLiAKSSB0aGluayBtb3N0IHBlb3BsZSB3b3VsZCBkaXNhZ3JlZSB3aXRoIHlvdXIgc3RhdGVtZW50LiBFbGl0ZWNvZGUgbWF5IGJlIGhlbHBmdWwgdG8gcmVpbmZvcmNlIGZ1bmRhbWVudGFscyB0byBoZWxwIHdpdGggdGhlIGhpcmluZyBwcm9jZXNzIG9mIHZlcnkgY29tcGV0ZXRpdmUgY29tcGFuaWVzIGJ1dCBub3QgZXZlcnkgY29tYW55IGhhcyB0aGUgc2FtZSBoaXJpbmcgcHJhY3RpY2VzLiAKVGhlIHNhbG9vbiBpcyBib3RoIGZhc2NpbmF0aW5nIHRvIGxvb2sgYXQgYW5kIGZ1bGwgb2YgaGlzdG9yeS4uIApUaGUgVUssIEphbnVhcnkgdGVtcGVyYXR1cmVzIGF2ZXJhZ2UgYSBkYWlseSBoaWdoIG9mIDcgZGVncmVlcyBDZWxzaXVzIGFuZCBhIGxvdyBvZiAxIEMgaW4gSmFudWFyeSAgIGF2ZXJhZ2UgdGVtcGVyYXR1cmUgaXMgNUMuIFdoZW4gYSBjb2xkIGZyb250IGhpdHMgU2hhbmdoYWksIGl0IG1heSBkcm9wIHRvICA2IEMuIEJlY2F1c2Ugb2YgdGhlIGNoaWxseSB3aW5kLCBvbmUgZmVlbHMgbXVjaCBjb2xkZXIgdGhhbiB0aGUgbnVtYmVyIGluZGljYXRlcy4uIApUaGUgRW1wcmVzcyBIb3RlbCBvZmZlcnMgdGhyZWUgc3RhciBjb21mb3J0IGFuZCBoYXMgMTA0IHJlZnVyYmlzaGVkIGJlZHJvb21zIG9mIHdoaWNoIHRoZXJlIGFyZSBhIG51bWJlciBvZiBFeGVjdXRpdmUgU2VhIFZpZXcgcm9vbXMgYW5kIGEgZmFudGFzdGljIHRvcCBmbG9vciBQZW50aG91c2Ugb3Zlcmxvb2tpbmcgdGhlIHdob2xlIG9mIERvdWdsYXMgQmF5LiBBbGwgb2YgdGhlIHJlbWFpbmluZyBDbGFzc2ljIHNpbmdsZSwgZG91YmxlIGFuZCB0d2luIGJlZHJvb21zIGFyZSBmdWxseSBlcXVpcHBlZCB3aXRoIHRoZSBjb21mb3J0cyBvZiBob21lLiBGb3IgZGluaW5nLCB3ZSBoYXZlIFRoZSBCcmFzc2VyaWUgUmVzdGF1cmFudCBvZmZlcmluZyBhbiBhIGxhIGNhcnRlIHNlbGVjdGlvbiBvZiBjYXJlZnVsbHkgcHJlcGFyZWQgZGlzaGVzIGJ5IG91ciBleHBlcnQgdGVhbSBvZiBjaGVmcyBhbmQgdGhpcyBpcyBsb2NhdGVkIGJ5IHJlY2VwdGlvbi4gQWxvbmdzaWRlIHRoZSByZXN0YXVyYW50IGlzIHRoZSBQaWFubyBCYXIgd2hpY2ggaXMgb3BlbiBmcm9tIDExYW0gdW50aWwgbGF0ZSB3aXRoIG91ciByZXNpZGVudCBwaWFuaXN0IHBsYXlpbmcgdXAgdG8gNCBkYXlzIGEgd2VlayBhbmQgU2t5L0JUIFNwb3J0cyBhbHNvIGF2YWlsYWJsZSBmb3IgU3BvcnRzIGZhbnMuIFRoZSBob3RlbCBoYXMgYSBzbWFsbCBneW0sIHNhdW5hIGFuZCBzdGVhbSByb29tIGZvciByZXNpZGVudHMgb25seSB1c2UsIGFsb25nIHdpdGggb3VyIEJlYXV0eSBNYXNzYWdlIFN1aXRlIG9wZXJhdGVkIGJ5IEVpcmUgTGF2ZW5uYSBCZWF1dHkuCkEgZHJhdyBoYXMgZXZlbiBsZXNzIGVxdWl0eSB0aGFuIHRwdGsuIElmIGhlIGJhZCBlbm91Z2ggdG8gY2hlY2sgY2FsbCB0d2ljZSB3aXRoIGEgZHJhdyBhbmQgdW5kZXJzIG9vcCBoZSBwcm9iYWJseSBwbGF5IGEgcml2ZXJlZCBmbHVzaCBwb29ybHkuIApJdCBkZXBlbmRzIG9uIHRoZSBnYW1lIHlvdSBhcmUgcGxheWluZy4gClRoYXQgbGlrZSBhc2tpbmcgd2h5IHdlIGNhbiBoYXZlIGEgY29udmVyc2F0aW9uIGFib3V0IE1hcmxib3JvIExpZ2h0cyBjYXVzaW5nIGNhbmNlciB3aXRob3V0IHBlb3BsZSBtZW50aW9uaW5nIG90aGVyIHRvYmFjY28gcHJvZHVjdHMuIEl0IGFsbCB0aGUgc2FtZSBpc3N1ZS4gUGVvcGxlIGp1c3QgbmVlZCB0byBzdG9wIGN1dHRpbmcgc2hpdCBvZmYgb2YgYmFiaWVzLiBUaGUgcmVhc29uIHBlb3BsZSBicmluZyB1cCBjaXJjdW1jaXNpb24gc28gbXVjaCBpcyB0aGF0IHVubGlrZSBGR00gY2lyY3VtY2lzaW9uIGlzIHN0aWxsIHdpZGVseSBwcmFjdGljZWQgaW4gdGhlIFVTLiBJZiBjaXJjdW1jaXNpb24gd2FzbiBhIGh1Z2UgcHJvYmxlbSBpbiB0aGUgVVMsIHBlb3BsZSB3b3VsZG4gYnJpbmcgaXQgdXAgd2hlbiB5b3Ugc3RhcnQgdGFsa2luZyBhYm91dCBob3cgaG9ycmlibGUgaXQgaXMgdG8gY2hvcCBvZmYgcGFydHMgb2YgY2hpbGRyZW4gZ2VuaXRhbHMsIGJ1dCBhcyBsb25nIGl0IGNvbnRpbnVlcyB0byBoYXBwZW4gb24gYSBkYWlseSBiYXNpcyBpbiBBbWVyaWNhIHlvdSBjYW4gZXhwZWN0IEFtZXJpY2FucyBhcmUgZ29pbmcgdG8gYnJpbmcgaXQgdXAgd2hlbmV2ZXIgdGhlIHRvcGljIG9mIGN1dHRpbmcgaGVhbHRoeSBiYWJ5IHBhcnRzIGNvbWVzIHVwLiBJdCB3b3VsZCBiZSB3ZWlyZCBpZiBpdCB3YXNuIGJyb3VnaHQgdXAuCkkgbWVhbiwgY29taW5nIG91dCBvbiB0b3Agb2YgYSBmaWVsZCBvZiA2LDUwMCBwbGF5ZXJzIGlzIHByZXR0eSByYXJlLiAKVGhleSB1c2UgdG8gaGF2ZSBlcXVpcG1lbnQgdG8gcHJvamVjdCBzbGlkZXMvbW92aWVzLiBCdXQgYWZ0ZXIgdGhlIGF1ZGl0b3JpdW0gdXBkYXRlLCBpdCB3YXNuIHVzZWZ1bCBhbnltb3JlIHNvIHRoZXkgZ2F2ZSBpdCB0byB0aGUgQm95cyBTY291dHMgdG8gc3RvcmUgdGhlaXIgc3R1ZmYgYW5kIHRoZXkgY2FuIHN0aWxsIHNob3cgc2xpZGUgbW92aWVzICh5b3Uga25vdyB0aGUgb25lcyB0aGF0IGdvIGRpbmcgd2hlbiB5b3UgbWFudWFsbHkgbWFrZSBpdCBnbyB0byB0aGUgbmV4dCBzbGlkZSkuIApBbmRhIGJpc2EgbWVtaWxpaCBwYWtldCB5YW5nIGluZ2luIEFuZGEgYmVsaSBkZW5nYW4gdWFuZyBzdW5nZ3VoYW4uQW5kYSBiaXNhIG1lbWVuYW5na2FuIHNlanVtbGFoIGtlY2lsIGNpcCBkYW4gbWVuZ3VqaSBwZW5nZXRhaHVhbiBwb2tlciBBbmRhLCBkZW5nYW4gbWVuZ2tsaWsgdG9tYm9sIFBva2VyIEdlbml1cy4gVG9tYm9sIGluaSB0ZXJsZXRhayBkaSBzdWR1dCBrYW5hbiBhdGFzIGxheWFyIHBlcm1haW5hbiwgdGVwYXRueWEgZGFsYW0gbWVudSBEaWNlLiBQb2tlciBHZW5pdXMgYWthbiBtZW5ndWppIGtlYWhsaWFuIEFuZGEgZGVuZ2FuIG1lbmFueWFrYW4ga29tYmluYXNpIGthcnR1IGthcnR1IHlhbmcgcGFsaW5nIG11bmdraW4gbWVuYW5nLCBkYW4gcGVydGFueWFhbiB5YW5nIGJlbmFyIGFrYW4gbWVtYmVyaWthbiBzZWp1bWxhaCBrZWNpbCBjaXAgYmFnaSBBbmRhLiAKSW4gYWRkaXRpb24sIHRoZSB0ZXJtICJ5b3V0dWJlIiBpcyB1c2VkIGhlcmUgdG8gbWVhbiB5b3V0dWJlIGl0c2VsZiwgYnV0IGFsc28gInRoZSBpbnRlcm5ldC4iIExhc3QsIHRoZXNlIHNvbmdzIGFyZSBsaXN0ZWQgaW4gbm8gcGFydGljdWxhciBvcmRlci4gCkkgdHJpZWQgbWFraW5nIG5vdGVzIG9uIGJldHRlciBwbGF5ZXJzLCBkb2VzbiBoZWxwLiBJIHRyaWVkIG1vcmUgYWdncmVzc2l2ZSBwbGF5IHN0eWxlcywgcGVvcGxlIGRvbiBmb2xkLiAKSSBoYWQgdGhlIDUwMCA2MDAgam9iIGFuZCBnb3QgYSA3MDAgOTAwIGpvYi4gQSBjb3VwbGUgb2YgcGVvcGxlIGF0IG15IG5ldyBqb2IgdG9sZCBtZSB0aGF0IHRheCBzaXR1YXRpb24gd291bGQgc29hayBtZS4gSSBmcmVha2VkIG91dCBhIGJpdCB0aGVuIGNhbG1lZCBkb3duIGFuZCB3ZW50IHRvIHRoZSB0YXggb2ZmaWNlIHRvIGFzayB0aGVtLiAKSXQgYWxzbyB0aGUga2luZCBvZiBwb3NlIHRoYXQgcGluIHVwIGdpcmxzIGhhZCB3aGVuIHRoZXkgd2VyZSBwYWludGVkIG9uIHRoZSBzaWRlIG9mIGJvbWJlcnMgaW4gV29ybGQgV2FyIDIsIHdoaWNoIGlzIGEgbmljZSB0aWUgaW4gdG8gaGVyIGhpc3RvcnkgYXMgYSBwaWxvdCAoc3BlY2lmaWNhbGx5LCB0aGUgcG9zZSBpcyBiYXNpY2FsbHkgdGhhdCBvZiB0aGUgTWVtcGhpcyBCZWxsZSBub3NlIGFydCwgd2hpY2ggaXMgb25lIG9mIHRoZSBtb3N0IGljb25pYyBub3NlIGFydHMgZHVlIHRvIHRoZSBwbGFuZXMgaGlzdG9yeSkuLiAKVW5mb3J0dW5hdGVseSwgSSB0aGluayB3aXRoIGhvdyB5b3VyIG1vbSBhY3RzLCB5b3UnbGwgaGF2ZSB0byBwcmVwYXJlIGZvciB0aGUgcG9zc2liaWxpdHkgdGhhdCBzaGUgaXMgZ29pbmcgdG8ganVzdGlmeSBoZXIgYWN0aW9ucyBhcyAianVzdCBwYXJlbnRpbmcuIiBTaGUgbWF5IHNheSBpdCdzIGp1c3QgaG93IHNoZSBkb2VzIHRoaW5ncy4gU2hlJ3MgYWxyZWFkeSBzYWlkIHRoaW5ncyB3ZXJlIGRpZmZlcmVudCBmb3IgaGVyLCBhbmQgbWF5YmUgc2hlIGhhZCBhIG1vbWVudCBvZiBjbGFyaXR5IGJ1dCBzb21ldGltZXMgdGhhdCdzIG5vdCBlbm91Z2guIFNoZSBtaWdodCBidWNrbGUgZG93biB0d2ljZSBhcyBoYXJkIG9uIHdoYXQgc2hlIHNheXMgYW5kIGl0J3MgZ29pbmcgdG8gc3VjayByZWFsbHkgYmFkLiBQZW9wbGUgbGlrZSBoZXIgYXJlbid0IGxpa2VseSB0byBjaGFuZ2UuCkkgY2FuIHNwZWFrIGZvciB0aGUgb3AgYnV0IEkganVzdCBidXR0aW5nIGluIHRvIHNheSBJIHJlYWxseSBsaWtlIHRoZSBzdGlsYSBsaW5lci4gCkV2ZW4gdGhvdWdoIHdlIGRpc2N1c3NlZCBpdCBhbmQgaGUgc2FpZCBoZSBkb2VzbiBuZWVkIG1lIHRvIGJlIHZvY2FsbHkgcG9ybnksIEkgY2FuIGhlbHAgd29uZGVyaW5nIGlmIGhlIGxvb2tpbmcgYXQgbWUgZHVyaW5nIHNleCBhbmQgdGhpbmtpbmcsIHRoaXMgdGhpbmcgb24gbXV0ZT8gSSB3YW50ZWQgdG8gdGFrZSBhIGNsb3NlciBsb29rIGF0IHdoYXQgSSBtaWdodCBiZSBtaXNzaW5nIG91dCBvbi4gCkkgbm90IHRyeWluZyB0byBtYWtlIGEgZmlyc3Qgcm91bmQgZmxhbWVvdXQgYSB0b3RhbCBpbmRpY3RtZW50IGFnYWluc3QgaGlzIGNvYWNoaW5nIGFiaWxpdHksIGJ1dCByYXRoZXIsIEkganVzdCBzZWUgaXQgYXMgYSBsYWNrIG9mIGV2aWRlbmNlIHRoYXQgaGUgY2FwYWJsZSBvZiB0YWtpbmcgdGhlIEJ1bGxzIGZhciBpbiB0aGUgcGxheW9mZnMuIElmIHlvdSBrbm93IHdoYXQgSSBtZWFuLi4gCkkgaW52ZXN0ZWQgdGhvdXNhbmRzIG9mIGhvdXJzIGJ5IG5vdy4uIApKZWFuIEphY3F1ZXMgVVJWT0FTLCBNYW51ZWwgVkFMTFMsIE1pY2hlbCBWRVJHTklFUiwgQWxhaW4gVklEQUxJRVMsIEplYW4gTWljaGVsIFZJTExBVU0gZXQgbGVzIG1lbWJyZXMgZHUgZ3JvdXBlIHNvY2lhbGlzdGUsIHJhZGljYWwsIGNpdG95ZW4gZXQgZGl2ZXJzIGdhdWNoZSgxKSBldCBhcHBhcmVudHMoMiksX19fLiAKTXkgYWR2aWNlIGZvciBoYXZpbmcgYSBjb252ZXJzYXRpb24gd2l0aCBoZXIsIGJhc2VkIG9uIG15IG93biByZWNvdmVyeSBmcm9tIGFuIGVhdGluZyBkaXNvcmRlciBhbmQgaGF2aW5nIHRvIGhhdmUgdGhpcyBjb252ZXJzYXRpb24gd2l0aCBvdGhlciBwZW9wbGUgc3RydWdnbGluZywgaXMgdG8gYmUgb3BlbiBhbmQgaG9uZXN0LCBidXQgcHJpb3JpdGl6ZSBoZXIgZmVlbGluZ3MgYW5kIHNlZWsgdG8gdW5kZXJzdGFuZCBmaXJzdC4gSSdkIGFzayBnZW5lcmFsIHF1ZXN0aW9ucyBmaXJzdCwgIGhvdyBpcyBsaWZlIGdvaW5nLCBob3cgaXMgc2Nob29sIGdvaW5nLCBob3cgaXMgc2hlIGZlZWxpbmcgaW4gZ2VuZXJhbC4gVGhlbiB5b3UgY2FuIGdldCBpbnRvICJhcmUgeW91IHdvcnJpZWQgYWJvdXQgeW91ciBkaWV0IG9yIHdlaWdodD8iIEF2b2lkIGRvaW5nIHRoaXMgaW4gdGhlIG1pZGRsZSBvZiBoZXIgZG9pbmcgc29tZXRoaW5nIHlvdSB0aGluayBpcyBjb25jZXJuaW5nLCBmaW5kIGEgdGltZSBvdXRzaWRlIG9mIGV4ZXJjaXNlL21lYWwgdGltZXMuIEl0J3Mgb2theSB0byBleHByZXNzIHlvdXIgY29uY2VybiBhYm91dCBoZXIuIEp1c3QgZG9uJ3QgZGlzbWlzcy4gIkJ1dCB5b3UncmUgWCIgY29tbWVudHMsIHdoZXRoZXIgWCBpcyAiYWxyZWFkeSBza2lubnksIiAiYmVhdXRpZnVsLCIgImRvbid0IGxvb2sgbGlrZSB5b3UgaGF2ZSBhbiBlYXRpbmcgZGlzb3JkZXIsIiBldGMuIGFyZSB3aGVyZSB5b3Ugd2lsbCBnbyBtb3N0IHdyb25nLgpMZXMgZ2VuZGFybWVzIG1vYmlsZXMgc29udCAgZGV1eCBkb2lndHMgZGUgbWV0dHJlIGZpbiBhdSBjb250cmxlLiBNYWlzIHRvdXQgIGNvdXAsIEdlcm1hbmkgInNhdXRlIGNvbW1lIHVuIGNhYnJpIiBob3JzIGR1IGNhbXBpbmcgY2FyLCBkY3Jpcm9udCBpbHMuCkkgZGVmZW5kZWQgaGVyLCBjYWxsaW5nIGl0IGEgbnkgYWNjZW50IGFuZCB0aGF0IHNoZSBwcm9iYWJseSBnb3QgaXQgb3JnYW5pY2FsbHkgdGhyb3VnaCBoZXIgZnJpZW5kcyBhbmQgbmVpZ2hib3Job29kLiAKSSBub3Qgc3VyZSB3aGF0IGVsc2UgdG8gc2F5IGhlcmUgICBJIGJvdGggZmVlbCBmb3IgeW91IGFuZCB1bmRlcnN0YW5kIHRoZSBvdGhlciBwZXJzcGVjdGl2ZS4gClRoZSBsZWFndWUgaGFzIGluY3JlZGlibHkgaGlnaCBwYXJpdHkgYW5kIG5vdCBtYWtpbmcgdGhlIHBsYXlvZmZzIGlzIG5vdCBuZWNlc3NhcmlseSBjYXVzZSBmb3IgY29uY2Vybk9oTm9CZWFySXNEcml2aW5nICAgMSBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnb0FuIGlsbGVnYWwgYWxpZW4gdGhhdCBjcm9zc2VzIHRoZSBib3JkZXIgZm9yIGRheSBqb2IgYW5kIHJldHVybiBob21lIGF0IG5pZ2h0IGlzIG9idmlvdXNseSBub3QgYW4gaW1taWdyYW50LiBMaXZpbmcgaW4gYSBmb3JlaWduIGNvdW50cnkgYnkgaXRzZWxmIGRvZXMgbm90IG1ha2Ugb25lIGFuIGltbWlncmFudC4gCk5ldyBhcnJpdmFsIEJ1YSA5IFRoYWkgQ3Vpc2luZSBjb21lcyBjb3VydGVzeSBvZiB0aGUgZm9ybWVyIG93bmVyIG9mIExvdHVzIFRoYWkgaW4gdGhlIENlbnRyYWwgRGlzdHJpY3QuClNlZW1zIGxpa2UgZ2V0dGluZyBpbiB0b3VjaCB3aXRoIERvbmFsZCBUcnVtcCB3YXMgdmVyeSB2ZXJ5IGhpZ2ggdXAgb24gRXBzdGVpbnMgbGlzdCBvZiB0aGluZ3MgaGUgbmVlZCB0byBiZSBhYmxlIHRvIGRvLgpJZiB5b3UncmUgbHVja3ksIHJldmlld2luZyB0aGUgaGlzdG9yeSBtYXkgc2hvdyBhIHZlcnkgc3BlY2lmaWMgcGF0dGVybiB3aGVyZSBhbGwgdGhlIG1hcmtpbmdzIGFyZSBvY2N1cnJpbmcgYXQgY2VydGFpbiB0aW1lcyBvZiBkYXksIG9yIG5lYXIgd2luZG93cyBhbmQgZG9vcnMsIG9yIG9uIHlvdXIgcGVyc29uYWwgaXRlbXMsIG9yIG9ubHkgb24gaXRlbXMgY29taW5nIGluIGZyb20gdGhlIG91dHNpZGUuIFRoaXMgd2lsbCBzaWduaWZpY2FudGx5IGhlbHAgaW4gZmlndXJpbmcgb3V0IHdoYXQgdGhlICJ0cmlnZ2VyIiBpcyBhbmQgaG93IHlvdSBtaWdodCBiZSBhYmxlIHRvIHRyZWF0IGl0IChTdGVwIDQpLi4gCkNoZWNraW5nIGp1c3QgbGV0J3MgZ2FyYmFnZSBoYW5kcyBjYXRjaCB1cCBlc3BlY2lhbGx5IHdoZW4gaXQncyBtdWx0aSB3YXkuLiAKSG9yc2UgaXMgdGhlIHN0cm9uZ2VzdCBGaXJlIGFuaW1hbCBpbiAxMiB6b2RpYWNzLiAKSSBoYWQgcGljdHVyZXMgb2YgdGhhdCBhcyB3ZWxsLiAKSWYgeW91IGNhbiBvdmVyY29tZSB0aGlzIGNoYWxsZW5nZSwgaXQgd2lsbCBjZXJ0YWlubHkgcHV0IGEgbG90IG9mIHBlcnNwZWN0aXZlIG9udG8gYW55IGNoYWxsZW5nZXMgeW91IGZhY2UgaW4gdGhlIGZ1dHVyZS4gCkVtcGlyaWNhbCBQb2tlciBjYWxjdWxhdG9ycyBvZmZlciB1cCB0byB0aGUgdXNlciBhIGR5bmFtaWMgY29sbGVjdGlvbiBvZiB0aGUgYWdncmVnYXRlIGFjdGl2aXR5IG9mIHlvdXIgb3Bwb25lbnRzLiAKVGhlcmUgaXMgbW9yZSB0aGF0IHRoZXkgY2FuIGRvIHRvIGVuc3VyZSB0aGF0IHRoZWlyIHJldGlyZW1lbnQgaW5jb21lIGlzIG5vdCBlcm9kZWQgYnkgaW5mbGF0aW9uLiBUb3Agb2YgdGhlIGxpc3QgcGF5IG9mZiB0aGUgJDQwLDAwMCBob21lIGVxdWl0eSBsb2Fucy4gSGFsZiBvZiB0aGF0IGlzIGF0IGEgZmxvYXRpbmcgcmF0ZSBvZiA0LjIgcGVyIGNlbnQgYW5kIGhhbGYgYXQgMy4yOSBwZXIgY2VudC4gCkpvdWJyYW4gc2FpZCBpdCdzIGJlZW4gbmVhcmx5IHR3byBtb250aHMgc2luY2UgaGlzIG9wZXJhdGlvbnMgd2VyZSBvcmRlcmVkIHN1c3BlbmRlZCBhbmQgaGUncyBzdGlsbCBub3QgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBhZmZpZGF2aXQgZGV0YWlsaW5nIHRoZSByZWFzb25zIGJlaGluZCB0aGUgc3RhdGUgR2FtaW5nIENvbnRyb2wgQm9hcmQgZGVjaXNpb24uIApNb3JlIHRoYW4gMzAgaG90ZWwgYW5kIHJlc2lkZW50aWFsIHByb2plY3RzIGFyZSB1bmRlciBkZXZlbG9wbWVudCBhcm91bmQgdGhlIGdsb2JlIHdpdGggZnV0dXJlIG9wZW5pbmdzIHdoaWNoIGluY2x1ZGUgVGhlIFJpdHogQ2FybHRvbiwgSG9uZyBLb25nIHdoaWNoIHdpbGwgb3BlbiBhcyB0aGUgaGlnaGVzdCBob3RlbCBpbiB0aGUgd29ybGQuIApJdCBhbGwgYWJvdXQgbG9naWNhbCBkZWR1Y3Rpb24uClp1bWluZGVzdCBpbiBlaW5lbSBMYW5ka3JlaXMgaW4gbWVpbmVyIE5oZSBpc3Qga3J6bGljaCBlaW4gQ1NVIExhbmRyYXQgZHVyY2ggZWluZW4gRlcgTWFubiBlcnNldHp0IHdvcmRlbi4uIApIZSByZXByZXNlbnRzIGFsbCB0aG9zZSB3aG9zZSByZWxpZ2lvbiBpcyBodW1hbml0eS4gV2hvIHRydXN0ZWQgdGhhdCB0aGVpciBnb29kIHdvcmtzIHdpbGwgbGVhZCB0aGVtIHRvIEdvZCBBbG1pZ2h0eSB0aGV5IHNhdmVkIG5vIG1hdHRlciB3aGF0LiAKQW4gZWFyIGNvcnJlY3Rpb24gc3VyZ2VyeSwgb3Igb3RvcGxhc3R5LCBpcyBhIGNvc21ldGljIHBsYXN0aWMgc3VyZ2VyeSBwcm9jZXNzIHRoYXQgYWltcyBhdCBhbHRlcmluZyB0aGUgZWFycyBzaXplIG9yIHNoYXBlLiBUaGUgbW9zdCBjb21tb24gYWVzdGhldGljIGVhciBjb3JyZWN0aW9uIHN1cmdlcnkgaXMgcGlubmluZyBiYWNrIHByb3RydWRpbmcgZWFycy4gTWFueSBpbmRpdmlkdWFscyBhcmUgZW5kb3dlZCB3aXRoIGVzcGVjaWFsbHkgbGFyZ2UgYW5kIHByb3RydWRpbmcgZWFycy4KVGhlIGhpdmUgdHlwZSByZWFjdGlvbiBiZWdpbnMgbmVhciB0aGUgYmVsbHlidXR0b24sIGJ1dCBjYW4gc3ByZWFkIHRvIHRoZSB0aGlnaHMsIGJyZWFzdHMgYW5kIGJ1dHRvY2tzLiAKQW5kIHllcy4gdGhlcmUgYXJlIGFsc28gcHJvY2VkdXJlcyBpbiBwbGFjZSBzZXQgd2hlcmUgaG9zcGl0YWwgb2ZmaWNpYWxzIGNhbiBwcm92aWRlIGxhdyBlbmZvcmNlbWVudCBwcm90ZWN0ZWQgcGF0aWVudCBtZWRpY2FsIHJlY29yZCBpbmZvcm1hdGlvbiB3aXRob3V0IGZhY2luZyBjaXZpbCBsaWFiaWxpdHkuIFRoaXMgaXMgbW9zdCBvZnRlbiBkb25lIHdoZW4gcG9saWNlIG5lZWQgbWVkaWNhbCBpbmZvcm1hdGlvbiBpbiByZWxhdGlvbiB0byB0aGUgaW52ZXN0aWdhdGlvbiBvZiBhIGNyaW1lLiBUaGUgc2NvcGUgb2Ygd2hhdCBpcyBwcm92aWRlZCBtdXN0IGJlIGxpbWl0ZWQgYW5kIHNwZWNpZmljLiBBbmQgbXVzdCBiZSBkb2N1bWVudGVkIChJbiBUZXhhcyBhICJTY290dCBEdXJmZWUiIGxldHRlciBpcyBjb21wbGV0ZWQpSXQgcmVhbCB3YXNoeSwgYW5kIGFkbWl0dGVkbHkgYnV0IGRydWcgdXNlIG9uIHByb3BlcnR5IGNvdWxkIGJlIHNlZSBhcyBhbiBleGNlcHRpb24gYWNjb3JkaW5nIHRvIHRoZSBhaGEgZ3VpZGxpbmVzIEkganVzdCBsaW5rZWQuIEJ1dCBJIGRvbiB0aGluayBpdCBhcHBsaWVzIGluIHRoZSB2aWRlbywgcG90ZW50aWFsIGNvbnRyYWJhbmQgcG9zc2Vzc2lvbiB3YXMgc3VzcGVjdGVkIGJ1dCBub3Qgb2JzZXJ2ZWQsIGFsbG93aW5nIFBEIHRvIGVudGVyIHRoZSByb29tIGFuZCBzZWFyY2ggdGhlIHJvb20gd2l0aG91dCBzY29wZSBjYW4gY29tcHJpc2UgcGF0aWVudCBtZWRpY2FsIGluZm8gd2VsbCBiZXlvbmQgYW55IGxpbWl0ZWQgc2NvcGUgdGhlIGxhdyBhbGxvd3MgZm9yLiBhbmQgdGhhdCBpZiBpdCBhY3R1YWxseSBmb3VuZCBvbiBhIHBhdGllbnQvYW1vbmcgcGF0aWVudCBwcm9wZXJ0eS4gdG8gcmVwb3J0IHRoYXQgb24gYSBodW5jaCB0aGF0IGEgcGF0aWVudCBoYWQgc3VzcGVjdGVkIGNvbnRyYWJhbmQuIHRoYXQgb3V0c3RhbmRpbmcgdG8gbWUgdGhhdCB0aGUgcG9saWNlIHdlcmUgZXZlbiBjYWxsZWQuIEkgYWx3YXlzIGJlZW4gdHJhaW5lZCB0aGF0IHR5aW5nIGNvbnRyYWJhbmQgdG8gYW4gYWN0dWFsIHBhdGllbnQgYW5kIGdpdmluZyB0aGF0IGluZm9ybWF0aW9uIHRvIGxhdyBlbmZvcmNlbWVudCB3YXMgYSBISVBBQSB2aW9sYXRpb24sIGFuZCBieSBhIG1lcmUgdGVjaG5pY2FsaXR5IGl0IG1pZ2h0IG5vdCBhbHdheXMgYmUuIGJ1dCB0aGVyZSB0b28gbXVjaCBncmV5IGFyZWEgaW4gdGhlcmUgdG8gZG8gYW55dGhpbmcgbW9yZSB0aGFuIGp1c3QgcmVsZWFzaW5nIGNvbnRyYWJhbmQgdG8gbGF3IGVuZm9yY2VtZW50IHdpdGhvdXQgYW55IGFkZGl0aW9uYWwgaW5mb3JtYXRpb24uCkFnaWxlIHRlYW1zIGRlbGl2ZXIgdGVzdGVkIHdvcmtpbmcgY29kZSBldmVyeSBmZXcgd2Vla3MuIFRoaXMgZGVtYW5kcyB0aGF0IHRoZXkgaGF2ZSBhbiBlZmZlY3RpdmUgd2F5IHRvIGNhcnZlIHRoZSB3b3JrIGludG8gc21hbGwgcGllY2VzIHRoYXQgY2FuIGJlIGJ1aWx0IGFuZCB0ZXN0ZWQgaW5jcmVtZW50YWxseS4gCk5vdCBzdXJlIGlmIHRoZXkgcmVmb3JtdWxhdGVkIG9yIG15IHNraW4gaGFzIGNoYW5nZWQsIGJ1dCByaWdodCBub3cgaXQgaGFzIGp1c3QgdGhlIHJpZ2h0IGFtb3VudCBvZiBnbG93IGFuZCBsaWdodCB0byBtZWRpdW0gY292ZXJhZ2UuIApCdXQgImEiIGxvcmV3ZWF2ZSBpcyBub3QgdGhlIHNhbWUgYXMgYSAiZ29vZCIgbG9yZXdlYXZlLCBvciBldmVuIHJlYWxseSBhbGwgdGhhdCBjbG9zZSB0byBpdC4gR2V0dGluZyBhIGxvcmV3ZWF2ZSB3aXRoIGdvb2Qgcm9sbHMgaXMgZXhwZW5zaXZlOiBtYWtpbmcgb25lIG9uIHlvdXIgb3duIGlzIGdvaW5nIHRvIHJlbHkgYSBsb3Qgb24gbHVjay4gSWYgeW91IGNvbnNpZGVyKGVkKSBhbiA4MCUgbG9yZXdlYXZlIGEgcmVxdWlyZW1lbnQsIHRoZW4geW91IGNvdWxkIHN0YXRpc3RpY2FsbHkgaWdub3JlIDgwJSBvZiB0aGUgcm9sbHMgeW91IGdldCBmcm9tIGRpdmluaW5nIHRoZSBpdGVtOiBvbmx5IG9uZSBpbiBmaXZlIGF0dGVtcHRzIHdvdWxkIGJlIHdvcnRoIGV2ZW4gbG9va2luZyBhdCB0aGUgb3RoZXIgc3RhdHMuIEhvdyBtYW55IGRpdmluZXMgeW91IG5lZWQgaXMgZ29pbmcgdG8gYmUgZGV0ZXJtaW5lZCBieSBsdWNrIGFuZCBob3cgbWFueSBvdGhlciBzdGF0cyB5b3UgY2FyZSBhYm91dC4KUmVhZCwgd2F0Y2ggdHV0b3JpYWxzLCBmb2N1cyBvbiByZWFsIGdhbWVwbGF5IGV4YW1wbGVzIGFuZCBiZWNvbWUgZmFtaWxpYXIgd2l0aCBoYW5kIHJhbmtpbmdzLiAKV2FnbmVyLCBhY2NvcmRpbmcgdG8gcHVibGlzaGVkIHJlcG9ydHMsIGFsc28gd2FzIHJpZGluZyBoaWdoIG9uIHRoZSBwcmljZSBvZiBvaWwgYW5kIGdhcy4gQ3J1ZGUgb2lsIHdhcyBmZXRjaGluZyBuZWFybHkgJDEwMCBhIGJhcnJlbCBpbiAyMDEzLiAKQmllbiBkZXMgdm9peCBzZSBzb250IGxldmVzIHBvdXIgcHJvdGVzdGVyIGNvbnRyZSBsZSB0cmFpdGVtZW50IGRlIEphY3F1ZWxpbmUgTGF1cmVudCBBdWdlciwgbCdlbnNlaWduYW50ZSBlbiBxdWVzdGlvbi4gClRoZXkgYWxzbyBmYWlsIHRvIHJlYWxpemUgdGhhdCBiZW1vYW5pbmcgYSBsb3cgc3RhbmRhcmQgb2YgbGl2aW5nIGFuZCBzaW11bHRhbmVvdXNseSBjb21wbGFpbmluZyBhYm91dCBidXNpbmVzc2VzIGNvbWluZyB0byB0aGUgc3RhdGUgaXMgY29tcGxldGVseSBhbnRpdGhldGljYWwuLiAKRGFzIGlzdCBlaW5lIDIwIE1pbGxpb25lbiBTdGFkdCwgdm9uIGRlbmVuIGplZGVyIGdhcmFudGllcnQgYW5kZXJlIEdlZGFua2VuIGhhdCwgYWxzIHNpY2ggR2VkYW5rZW4gYmVyIGplbWFuZGVuIHp1IG1hY2hlbiwgZGVyIGluIHdlc3RsaWNoZW4gRW1wcnVuZ3NtZWRpZW4gd2llIFR3aXR0ZXIgaG9jaGdlamF6enQgd3VyZGUsIGRpZSBpbiBSdXNzbGFuZCBlaCBrZWluZW4gaW50ZXJlc3NpZXJlbi4uIApJbiBKdWx5LCBob3dldmVyLCB0aGUgR2FtaW5nIENvbnRyb2wgQm9hcmQgcHV0IG91dCBhIHNldCBvZiBlbWVyZ2VuY3kgcnVsZXMuIEdhbWluZyBjb250cm9sIHNwb2tlc3BlcnNvbiBNYXJ5IEtheSBCZWFuIHNhaWQgdGhlIG9yaWdpbmFsIHJ1bGVzIGNhbWUgYWJvdXQgYmVjYXVzZSB0aGV5J2QgZm91bmQgaWxsZWdhbCBhY3Rpdml0eSBpbiBzb21lIGNoYXJpdGFibGUgZ2FtaW5nIHJvb21zLiAKTm92aWNlIHBsYXllcnMgYXJlIGFsc28gYWR2aXNlZCB0byB0cnkgdGhlaXIgaGFuZHMgb24gdGhlIGxvdyBsaW1pdCBwb2tlciBtYXRjaGVzIGZpcnN0LiBUaGVzZSBnYW1lcyBvbmx5IGFjY2VwdCB2ZXJ5IGxvdyAnYmV0cycgYW5kIGlzIGFsc28gZ29vZCBmb3IgdGhvc2Ugd2hvIG5lZWQgdG8gcHJhY3RpY2Ugd2hpbGUgaGF2aW5nIHRoZSBjaGFuY2UgdG8gZWFybiBjYXNoIChldmVuIGlmIHNtYWxsKSBhdCB0aGUgc2FtZSB0aW1lLiBUaGlzIGlzIGEgd2lubmluZyBwb2tlciBzdHJhdGVneSB0aGF0IHlvdSBzaG91bGQgbm90IHBhc3MgdXAgb24gYXMgaXQgZ2l2ZXMgeW91IG1vcmUgcHJhY3RpY2UsIG1ha2VzIHlvdSBjb21wZXRlIHdpdGggbm92aWNlIGFuZCAnbWlkIHJhbmdlJyBwbGF5ZXJzIHdoaWxlIGF2b2lkaW5nIHRoZSBzZWFzb25lZCBwbGF5ZXJzLCBhbmQgc3RpbGwgYWxsb3dzIHlvdSB0byBleHBlcmllbmNlIGJlaW5nIGEgcG9rZXIgcGxheWVyIHdobyBnZXRzIHRvIHdpbiBjYXNoLCB1bmxpa2UgaW4gdGhlIGZyZWUgZ2FtZXMgdGhhdCBsZXQgeW91IGJyaW5nIGhvbWUgbm90aGluZy4uIApUaGlzIGlzIGFsc28gZmF1bHR5IGxvZ2ljLiBXZSBrbm93IGZyb20gbG9va2luZyBhdCB0aGUgZXJyZXRhIGFuZCBGQVFzIHRoYXQgbm90IG9ubHkgYXJlIHdvcmRzIGFuZCBzZW50ZW5jZXMgc29tZXRpbWVzIGxlZnQgb3V0IChvciBmb3Jnb3R0ZW4pLCBidXQgcnVsZXMgYWxzbyBoYXZlIHRvIGJlIGFkanVzdGVkIGR1ZSB0byBzb21lIHVuZm9yZXNlZW4gY29uZmxpY3QuCkFyaWVsIFNvdGVsbyBzYXlzIENvbmdyZXNzIHNob3VsZG4ndCBiZSB1c2luZyBDSElQIGZ1bmRpbmcgYXMgYSBiYXJnYWluaW5nIGNoaXAgaW4gYnVkZ2V0IHRhbGtzLiBJdCdzIGp1c3QgdG9vIGltcG9ydGFudCBmb3IgZmFtaWxpZXMgbGlrZSBoZXJzLCBzaGUgc2F5cy4KVGhleSBhcmUgY29taW5nIHRvIG15IGhvdXNlIGZvciBhIGZldyBkYXlzIGZvciBzb21lIGdyYW5kbWEgdGltZS4gCkkgYmVlbiBhIHBybyBmb3IgYWJvdXQgNCB5ZWFycyBwbGF5aW5nIGEgbWl4IG9mIG1heWJlIDY1JSBvbmxpbmUgMzUlIGxpdmUuIEZvciB0aGUgZmlyc3QgeWVhciBvciB0d28geW91IGFyZSBkZWZpbml0ZWx5IGNvcnJlY3QgYWJvdXQgc3BlbmRpbmcgdG9vIG11Y2ggb24gdXBzd2luZ3MgYW5kIGJlaW5nIG5pdHR5IG9uIGRvd25zd2luZ3MsIGJ1dCBhZnRlciB5b3UgaGl0IGEgY2VydGFpbiBiYW5rcm9sbCB5b3Ugbm8gbG9uZ2VyIGhhdmUgdG8gcmVhbGx5IHdvcnJ5IGFib3V0IGFueSBvZiB0aGF0IGFuZCB0aGluZ3MgYmVjb21lIGEgbG90IGVhc2llci4gRm9yIG1lIGl0IHdhcyBhcm91bmQgMzBrIG5ldC4uIApJbCBleGlzdGUgZGVzIGNvdXJzIGRlIG1hc3NhZ2UgcG91ciBiYiBxdWUgamUgdm91cyByZWNvbW1hbmRlLCBhaW5zaSBxdWUgZGVzIG1hc3NvIHRocmFwZXV0ZXMgY2VydGlmaXMgcG91ciBjZWxhLgpXZSBhbGwgZmVhciB0aGUgYnJlYWtkb3duIG9mICJ0aGUgc3lzdGVtLCIgc28gbm8gbWF0dGVyIGhvdyBmdWNrZWQgdXAgInRoZSBzeXN0ZW0iIGdldHMsIHdlIGFsbCBwdXQgdXAgd2l0aCBpdC4gSXQgaXMgZ29pbmcgdG8gZ2V0IHdvcnNlLiBJIGRvbiB0aGluayB3ZSB3aWxsIHJldm9sdCB1bnRpbCB0aGluZ3MgZ2V0IGZhciB3b3JzZS4gCkFuZCBpZiBieSBhIG1pcmFjbGUgeW91IGRvIGdldCB0byAkMTAwaywgeW91IG1pZ2h0IHdpdGhkcmF3YWwgYW5kIGxldCBzYXkgeW91IGRpZC4gTWFkZSBhIHNpY2sgcHJvZml0IGFuZCB5b3Ugc3BlbmQgc29tZSB3aW5uaW5ncywgYnV5IHNvbWUgZ2lmdHMsIHB1dCBzb21lIG1vbmV5IGF3YXksIGV0Yy4gVGhlbiBpdCB3aWxsIHNldCBpbiBzbG93bHkgYnV0IHN1cmVseSwgdGhlIGJyYWluIHdpbGwgY3JhdmUgZm9yIGFjdGlvbi4gClBvc3RlZCBieSBhYnNhbG9tIGF0IDc6NDIgQU0gb24gTWF5IDIzLCAyMDA4CkZvdW5kIG91dCBvbmUgb2YgbXkgImNsb3Nlc3QgZnJpZW5kcyIgd2FzIHBheWluZyBzb21lb25lIHRvIGRvIHNvbWUga2luZCBvZiB3aXRjaGNyYWZ0L3Zvb2RvbyB0aGluZyBvbiBtZSBiZWNhdXNlIHNoZSBkb2VzbiB3YW50IG1lIHRvIGRvIHdlbGwgb3Igc3VjY2VlZC4gVGhlcmUgYXJlIHNvbWUgY3JhenkgZnVja2luZyBwZW9wbGUgb3V0IHRoZXJlIGxpa2Ugd3RmLgpMYXNlcnMgYXJlIGludGVuZGVkIHRvIGhlYXQgYW5kIG1lbHQgYXdheSBmYXQsIGNhdXNpbmcgdGhlIGNlbGx1bGl0ZSB0byBldmVuIG91dCBbc291cmNlOiBOb3JkcXZpc3RdLiBUaGVzZSB0cmVhdG1lbnRzIHdpbGwgbGlrZWx5IGNhdXNlIHNvbWUgYnJ1aXNpbmcgaW1tZWRpYXRlbHkgZm9sbG93aW5nIHRyZWF0bWVudCBhbmQgdGhlIHJlc3VsdHMgYXJlIG9ubHkgdGVtcG9yYXJ5LiAKVGhleSBkaWQgZGVjaWRlIHdhcyB0byBjdXQgZGVmaWNpdHMgaW4gaGFsZiBieSAyMDEzLi4gCkFscmVhZHkgaGF2ZSBhIHBob25lIGFtcD8gTm8gcHJvYmxlbSEgWW91IGNhbiBuZXZlciBoYXZlIHRvbyBtYW55LCBhbmQgd2UncmUgZ3Vlc3NpbmcgdGhlIG90aGVycyBwcm9iYWJseSBkb24ndCBsb29rIGxpa2UgdGhpcy4uIApTaGUgd2FzbiBteSBmdWNraW5nIG1hdHJpYXJjaCBhbmQgc2hlIHdhcyBuZXZlciBnb2luZyB0byBiZSwgdGhlc2UgYXJlIG15IGtpZHMsIG5vdCBoZXJzLkkgbG92ZSBteSBodXNiYW5kIGRlYXJseSwgYW5kIGhlIGEgZ29vZCBtYW4gYW5kIGZhdGhlciB0byBteSBraWRzLmJ1dCBzb21ldGltZXMgaXQgbmljZSB0byBoZWFyIGhlIGFuIGlkaW90IGFuZCBuZWVkcyB0byByZWluIGluIGhpcyBvd24gbW9tIG9yIHNpbWlsYXIgdGhpbmdzLkJlY2F1c2UgcmVhbGx5LCBzaGUgc2hvdWxkbiBiZSBteSBwcm9ibGVtIGJ1dCBodXNiYW5kcyB3ZXJlIHJhaXNlZCBieSB0aGVzZSB3b21lbi4gCllvdSBoYXZlIGdvdCB0byB1bmRlcnN0YW5kIHRoYXQgdGhlcmUgaXMgY2VydGFpbmx5IGEgYml0IGRpc3RpbmN0aW9uIGluIGJldHdlZW4gdGhlIGNpcmN1bXN0YW5jZSB0aGF0IGV4aXN0cyB3aGVuIHBsYXlpbmcgcG9rZXIgYXQgbGFuZCBiYXNlZCBjYXNpbm9zIGFuZCBpbiBhbiBvbmxpbmUgcG9rZXIgc3BhY2UuIEluc2lkZSB0aGUgbGF0dGVyIGNhc2UsIHBsYXllcnMgYXJlIHVzdWFsbHkgbm90IGluIGEgcG9zaXRpb24gdG8gZGV0ZXJtaW5lIG9uZSBhbm90aGVyLCB3aGljaCBjYW4gdGVuZHMgdG8gbWFrZSBpdCBhIGJpdCB0b3VnaCBmb3IgeW91IHRvIGFuYWx5emUgeW91ciBvcHBvbmVudHMuIApJdCBoYXBwZW5zIGEgZmV3IHRpbWVzLCBidXQgSSBkb2luZyBiZXR0ZXIgd2l0aCB0aGF0LiAKSSB0aGluayBpdHMgaW1wb3J0YW50IG5vdCB0byBsdW1wIHBlb3BsZSBpbnRvIGdyb3VwcyBhbmQgZGVjaWRlIHRoYXQgc29tZSBncm91cHMgYXJlIGlubmF0ZWx5IGV2aWwuIFRoaXMgaXMgdGhlIGtpbmQgb2YgdGhpbmtpbmcgdGhhdCBsZWFkcyBzb21lIHBlb3BsZSB0byB0aGluayBhbGwgTXVzbGltcy9ibGFjayBwZW9wbGUvSmV3aXNoIHBlb3BsZSBhcmUgZXZpbC4KSXQgaXMgYSBjbGluaWNhbGx5IG9yaWVudGVkIGhlYWx0aCBvcHRpb24gdGhhdCBhY2hpZXZlcyB1bmRlbmlhYmxlIHJlc3VsdHMgaW4gdGhlIHJlbGllZiBvZiBhbiBhcnJheSBvZiBkaXNjb21mb3J0cyBzdGVtbWluZyBmcm9tIHN0cmVzcywgbXVzY3VsYXIgb3ZlcnVzZSBhbmQgbWFueSBjaHJvbmljIHBhaW4gc3luZHJvbWVzLi4gClRoZXJlIGFsc28gdGhlIGFwcGVhcmFuY2Ugb2YgZ2lhbnRzIGluICB0aGlzIG9uZSwgaW4gcGFydGljdWxhciwgd2Ugc2VlIGEgTmV3IFlvcmsgQ2l0eSBzdG9tcGVyIG9mIHZhcnlpbmcgaGVpZ2h0cy4gVGhlIGdpYW50IHNlZW1zIHRhbGxlc3Qgd2hlbiBzdGFuZGluZyBvbiB0aGUgTmV3IEplcnNleSBwYWxpc2FkZXM7IHdoZW4gaGUgZ2V0cyB0byBEYW5pZWwgQnVybmhhbSBCZWF1eCBBcnRzIEZsYXRpcm9uL0Z1bGxlciBidWlsZGluZyB3aGljaCBoYWQganVzdCBiZWVuIGNvbXBsZXRlZCBhIGZldyB5ZWFycyBiZWZvcmUgdGhpcyBzdHJpcCBoZSByaXNlcyBhYm92ZSBpdCBieSBhYm91dCAxLzQsIG1ha2luZyBoaW0gYWJvdXQgNDAwIHRhbGwuIFdoZW4gaGUgZ2V0cyB0byB0aGUgU3RhdHVlIG9mIExpYmVydHksIHdoaWNoIGlzIGFib3V0IDMwNSBmcm9tIGdyb3VuZCB0byB0aGUgYmFzZSBvZiB0aGUgdG9yY2gsIG1ha2luZyB0aGUgZ2lhbnQgc29tZXdoYXQgc2hvcnRlciB0aGFuIGVhcmxpZXIsIHRvdWdoIGhlIHNlZW1zIGhpcyBtaWdodGllc3Qgd2hlbiBzaXR0aW5nIG9uIHRoZSBjZW50ZXIgc3BhbiBvZiB0aGUgQnJvb2tseW4gQnJpZGdlLCB0aGlzIHBvcnRyYXlhbCBtYWtpbmcgaGltIHNlZW0gY29uc2lkZXJhYmx5IHRhbGxlciB0aGFuIHRoZSBlYXJsaWVyIDQwMCBhcyB0aGUgaGVpZ2h0IG9mIHRoZSBicmlkZ2UgZnJvbSB0b3dlciB0byByaXZlciBpcyBhYm91dCAyNzYgSSBub3QgYWx0b2dldGhlciBzdXJlIG9mIGhvdyBlYXJseSBOWUMgYXR0YWNraW5nIGdpYW50cyBjb21lIGluIGluIHRoZSBsaXRlcmF0dXJlLCB0aG91Z2ggdGhlcmUgYXJlIHBsZW50eSBvZiBvdGhlciBhcHBlYXJhbmNlcyBvZiBnaWFudHMgaW4gdGhlIGhpc3Rvcnkgb2YgbXl0aCBhbmQgbGl0ZXJhdHVyZSAoaW5jbHVkaW5nIHRoZSBDeWNsb3BzLCBFb2NsZXNpYSwgUGF1bCBCdW55YW4sIEZhdG5hL0Zhbm9sdCwgR2FyZ2FudHVhLCBHb2xpYXRoLCBPcmluLCB0aGUgS3Jha2VuLCBSdWtoLCBaZXVzLCBhbmQgc28gb24sIGFsbCBvZiB3aG9tIGNvbWUgYmVmb3JlIG91ciBXYWxsIFN0cmVldCBXcmVja2luZyBnaWFudCByYXJlYml0IGZpZW5kLiAoSSB3cm90ZSBlYXJsaWVyIGluIHRoaXMgYmxvZyBvbiBhbiBBbHBoYWJldCBvZiBHaWFudHMsIGhlcmUpLiBUaGVyZSBpcyBhbiAxMSBtaW51dGUgbW92aWUgKFRoZSBQZXQsIDE5MjEpIGJ5IE1jQ2F5IGZlYXR1cmluZyBhIGNpdHkgYXR0YWNraW5nIGdpYW50LCB3aGljaCBtYXkgYWN0dWFsbHkgYmUgdGhlIGZpcnN0IG1vdmllIGZlYXR1cmluZyBhIGdpZ2FudGljIGFueXRoaW5nIGRpc3RyaWJ1dGluZyBtYXloZW0gb24gYSBjaXR5OgpUaGUgbW9yZSBkZXByZXNzaW5nIGZhY3QgaXMgdGhhdCB0aGUgd2FyIGNvdWxkIGhhdmUgZW5kZWQgbXVjaCBzb29uZXIuIApJIHBsYXkgaW4gYSBmZXcgaG9tZSBnYW1lcy4gV2UgYmVlbiBwbGF5aW5nIHRvZ2V0aGVyIGZvciB5ZWFycy4gV2UgYWxsIGhhdmUgb3VyIG93biBzdHlsZXMgYW5kIGdhbWVzLCBidXQgaW4gdGhlIGxvbmcgcnVuIGl0IGJlZW4gdmVyeSBjbGVhciB3aG8gYXJlIHRoZSBsb25nIHRlcm0gd2lubmVycyBhbmQgdGhlIGxvbmcgdGVybSBsb3NlcnMuIEFuZCB0aGVyZSBvbmUgdGhpbmcgdGhhdCBzZXRzIHRoZSB3aW5uZXJzIGZyb20gdGhlIGxvc2VyczoKQSAxOTU4IHBsYW4gdG8gZGV0b25hdGUgYSBudWNsZWFyIGJvbWIgaW4gQWxiZXJ0YSB0byBjb2xsZWN0IG9pbCBzYW5kcyBkaWQgZ2V0IHRoZSBhcHByb3ZhbCBvZiB0aGUgQWxiZXJ0YSBnb3Zlcm5tZW50LCBidXQgd2FzIHZldG9lZCBieSBDYW5hZGlhbiBQcmltZSBNaW5pc3RlciBKb2huIERpZWZlbmJha2VyIGZvciBiZWluZyBjcmF6aWVyIHRoYW4gYSBmaXN0IGZ1bGwgb2Ygc2hpdC4iQW5kIEkga25vdyB3aGF0IHRoYXQgZmVlbHMgbGlrZSAgIEkgc2hvb2sgaGFuZHMgd2l0aCBOaXhvbiBvbmNlLiIuIApJbiB0aGUgbG9uZyBydW4sIHRoZSBjb3Vuc2VsJ3Mgb2ZmaWNlIHdhbnRzIHRvIGNoYWxsZW5nZSB3aGV0aGVyIGhlZGdpbmcgc2hvdWxkIGNvbnRpbnVlIGF0IGFsbC4KMjAxOSBDZWxlYnJpdHkgRGVhdGhzVGhlIE1vbmtlZXMgU3RhcnJpbmcgTWlja2V5IERvbGVueiBBbmQgUGV0ZXIgVG9yayBJbiBDb25jZXJ0ICAgTmV3IFlvcmssIE5ldyBZb3JrUGV0ZXIgVG9yayBvZiBUaGUgTW9ua2VlcyBwZXJmb3JtcyBsaXZlIG9uIHN0YWdlIGF0IFRvd24gSGFsbCBvbiBKdW5lIDEsIDIwMTYgaW4gTmV3IFlvcmsgQ2l0eS4gClRoZSBpUGhvbmUgd2lsbCBwaWNrIHVwIFVTQiBDIChldmVudHVhbGx5IFRodW5kZXJib2x0IDQpIGp1c3QgbGlrZSBhbGwgb2YgdGhlIG90aGVyIGRldmljZXMsIGFuZCB0aGV5IHdpbGwgbWVyZ2UuIApJbiBkZXIgU3RhZHQgc2llaHQgZGFzIHZpZWxsZWljaHQgYW5kZXJzIGF1cywgYWJlciBIaWxmc2FyYmVpdGVyIGF1ZiBkZW0gQmF1IG9kZXIgaW0gQ2FsbGNlbnRlciBzaW5kIGtlaW5lIFNlbHRlbmhlaXQuIApEaWUgVmlkZW9zIHNpbmQgdG9sbCB1bmQgdW50ZXJoYWx0c2FtLCBpY2ggd3JkZSBhYmVyIGplZGVtIGVtcGZlaGxlbiBzaWNoIHNlbGJzdCBpbiBkaWVzZSBUaGVtZW4gZWluenVsZXNlbiBvYiBkYXMgbnVuIGRpcmVrdCBkdXJjaCBwaGlsb3NvcGhpc2NoZSBUZXh0ZSBvZGVyIGJlciBhbmRlcmUgVmVydHJhdWVuc3ZvbGxlIFdlZ2UgaXN0LiBEaWVzZSBZb3VUdWJlciBzaW5kIHRvbGwgdW5kIG1NbiB3aWNodGlnLCBhYmVyIGhhYmVuIG9mdCBQcm9ibGVtZSBtaXQgaWhyZXIgSW50ZXJwcmV0YXRpb24vQXVzbGVndW5nIHZvbiBEaW5nZW4sIGRpZSBkaWNoIGRhbm4gYW0gU2NobHVzcyBvZmZlbiBmciBBbmdyaWZmZSB2b24gcmVjaHRzIGxhc3NlbiBrbm50ZW4uLiAKT25jZSB5b3UgaGF2ZSBjb21wbGV0ZWQgYSBwcm9ncmFtLCB5b3Ugd2lsbCByZWNlaXZlIGEgY2VydGlmaWNhdGUgb2YgY29tcGxldGlvbiBmcm9tIEF1YnVybiBVbml2ZXJzaXR5IG9yIGdvIG9uIHRvIHNlZWsgaW5kdXN0cnkgY2VydGlmaWNhdGlvbi4gVGhpcyBpbmNsdWRlczpMaWNlbnNpbmcgZXhhbXMgYW5kIHJlbGF0ZWQgcHJlcCBjb3Vyc2VzOy4gCk91ciBsYXdzIGFyZSBiYXNlZCBvbiB0aGUgRW5nbGlzaCBjb21tb24gbGF3LCBob3dldmVyLCBzYXlpbmcgd2UgaGF2ZSB0aGUgc2FtZSBsZWdhbCBzeXN0ZW0gaXMgbm90IGFjY3VyYXRlLiAKTWFuIGthbm4gamV0enQgZHJiZXIgZGlza3V0aWVyZW4sIG9iIGRpZSBNaW5pc3RlcmluIGVudHdlZGVyIGF1cyBwZXJzbmxpY2hlbiBHcm5kZW4gdm9uIGlocmVtIFZldG8gUmVjaHQgbmljaHQgR2VicmF1Y2ggZ2VtYWNodCBoYXQsIG9kZXIgdW0gZGllIEtvYWxpdGlvbiB6dSBzY2h0emVuICAgRXJnZWJuaXMgaXN0IGFiZXIgaW4gYmVpZGVuIEZsbGVuLCBkYXNzIHNpZSBkYW1pdCBkZW0gUnVmIGRlciBTUEQgYWxzIFVtZmFsbHBhcnRlaSB3aWVkZXIgZWlubWFsIGdlcmVjaHQgZ2V3b3JkZW4gaXN0LiBBbGxlcmRpbmdzIGthbm4gbWFuIGRhIGphIG5vY2ggZnJvaCBzZWluLCBkYXNzIGlocmUgSGludGVybGFzc2Vuc2NoYWZ0ICJudXIiIGVpbiBuZXVlcyBVcmhlYmVycmVjaHQgaXN0LCBNYWFzIGhhdCB1bnMgZGEgZWluaWdlIHZpZWwgZ2VmaHJsaWNoZXJlIFplaXRib21iZW4gaGluZ2Vyb3R6dC4gClNjb3R0IG9mIE94Zm9yZCwgTUkgaGFkIHRoZSBsb3NpbmcgaGFuZCBhbmQgdG9vayBob21lIHRoZSBiaWdnZXN0IHNoYXJlIG9mIHRoZSBqYWNrcG90IGF0ICQ0MjcsNDUyLjUyLiBIZSBoYWQgZm91ciAzJ3MgaW4gaGlzIGhhbmQgd2hpY2ggd2FzIGJlYXRlbiBieSBLZW5uZXRoIHdobyBoYWQgZm91ciBxdWVlbnMuIEhlIHdvbiAkMjEzLDcxMi43Ni4gVGhlIG90aGVyIGZvdXIgcGxheWVycyBhdCB0aGUgdGFibGUgd29uICQxMDYsODU2LjI4IGVhY2guIFBva2VyIHRhYmxlcyBob2xkIDEwIHBlb3BsZSBhbmQgYXJlIHVzdWFsbHkgZnVsbC4KSXQncyBub3QgYWNjdXJhdGUuIEEgZ3VuIGlzIGJldHRlciB0byBoYXZlIGluIGEgaG9tZSBkZWZlbnNlIHNpdHVhdGlvbiB0aGFuIGFueSBvdGhlciBvcHRpb24sIE9LPyBEb24ndCBsZXQgc3R1cGlkIGJpYXNlZCBsaWJlcmFsIHBlb3BsZSB0ZWxsIHlvdSB0aGF0IHlvdSBhcmUgbW9yZSBsaWtlbHkgdG8gZGllIGZyb20gaGF2aW5nIGEgZ3VuIGluIHRoYXQgc2l0dWF0aW9uLiBUaGF0IGlzIGFic29sdXRlIGJ1bGxzaGl0LCBhbmQgdGhlIGR1bWJlc3Qgb3BpbmlvbnMgY29tZSBmcm9tIHBlb3BsZSB3aG8gaGF2ZSBuZXZlciBzaG90IGEgZ3VuIGFuZCB3aG8gZG9uJ3Qgb3duIGd1bnMuLiAKSW4gYSBwYXJ0aWN1bGFybHkgZHJhbWF0aWMgbW9tZW50LCBoZSBhbmdyaWx5IHN0b29kIHVwIGFuZCBzdGFydGVkIHBhY2luZywgaGlzIHZvaWNlIGJyZWFraW5nIGFzIGhlIHllbGxlZCwgIkkgZGlkbid0IGRvIHRoaXMgc3R1ZmYhIFRoaXMgaXMgbm90IG1lISIgSGUgY3JpZWQgYXMgaGUgaGl0IGhpcyBoYW5kcyB0b2dldGhlciwgc2F5aW5nLCAiSSdtIGZpZ2h0aW5nIGZvciBteSAoZXhwbGV0aXZlKSBsaWZlLiIKSGUgc2FpZCB0byBoaW0sICJGdXJ5LCB5b3VyIGZhaXRoIGhhcyBoZWFsZWQgeW91LiBHbyBpbiBwZWFjZSBhbmQgZmluaXNoIHRoaXMgdHdlbGZ0aCByb3VuZC4iV293LiBUb2RheSBpcyBteSBmaXJzdCBkb3NlIG9mIFdlbGxidXRyaW4uIEEgZmV3IHllYXJzIGFnbyBJIHRyaWVkIFByb3phYyBhbmQgWm9sb2Z0IHRvIG5vIHJlYWwgY2hhbmdlLiBUaGlzIGlzIGV4YWN0bHkgd2hhdCBJJ20gaG9waW5nIGZvci4gVGhhbmsgeW91IGZvciB5b3VyIHN0b3J5LiBJIGhvcGUgMTEgbW9udGhzIGZyb20gbm93IEkndmUgbG9zdCB0aGUgd2VpZ2h0IEkgbmVlZCB0by4gSSdtIDIyNSwgaG9waW5nIHRvIGdldCBkb3duIHRvIDE2MC4gNjUgdG90YWwuCkkgaGF2ZSBuZXZlciBmZWx0ICJub3Qgc2FmZSIgYXQgbXkgb2ZmaWNlIGNhdXNlIGxvdHMgb2YgcGVvcGxlIGluIHRoZSBzdHJlZXQgYW5kIGl0J3Mgbm90IHZlcnkgc291bmQgcHJvb2YgaW4gdGhlcmUuIApBbmQgaXRzIGZsYWdzaGlwIHByb2R1Y3QsIEJvdHRsZSBCaW4uIApOb2JsZSwgYW5kIEouIFQuIApJIHdvdWxkIHRlbGwgeW91IHRoaXMgbXVjaC4gU29uLCBJIHdvdWxkIG5ldmVyIGhhdmUgcHV0IG1vcmUgdGhhbiAzLDAwMCBpbiB3aXRoIHR3byAxMHMgYmVmb3JlIHRoZSBmbG9wIFNvbiwgeW91IHRoZSBzdWNrZXIuIFlvdSBqdXN0IHB1dCBpbiAkMjAsMDAwIHdpdGggdHdvIDEwcy4gCkxlIHJlc3BlY3QgZGUgdm90cmUgdmllIHByaXZlIGVzdCBpbXBvcnRhbnQgcG91ciBub3VzLiBQaG90bzogTGEgUHJlc3NlIGNhbmFkaWVubmUgLyBQYXVsIERhbHkKRU5QIGlzIGdyZWF0LiBMZWsgKHRoZSBmb3VuZGVyKSBpcyBhIGhlcm8uIFdlIGdvdCB0byBtZWV0IGhlciBhdCB0aGUgb3BlbmluZyBvZiB0aGUgU2FtdWkgRWxlcGhhbnQgU2FuY3R1YXJ5IGluIEtvaCBTYW11aS4gVW5mb3J0dW5hdGVseSwgZGlkbiBtZWV0IGhlciB0aGlzIHRpbWUuCkhpc3RvcmljYWwgcmVjb3JkcyBzaG93IHRoYXQgdGhlIENoaW5lc2UgdXNlZCBhcnNlbmljIHBpbGxzIHBsYWNlZCBiZXR3ZWVuIHRoZSB0ZWV0aCB0byBoZWxwIGVhc2UgcGFpbiBbc291cmNlOi4gCiJBbnphYyBEYXkgaXMgc28gbXVjaCBiaWdnZXIgdGhhbiBwb2tlciBtYWNoaW5lcy4gCk1hbnkgY29tbWVudHMgYWJvdXQgaG93IGhlIGdvdCB0aGUgbW9uZXkgYW5kIHdoYXQgaGUgY2FuIGFmZm9yZCBoYXZlIGNvbWUgYWNyb3NzIGFzIGp1ZGdlbWVudGFsIGFuZCBkaXNyZXNwZWN0ZnVsLiBQbGVhc2Ugc3RvcC4uIApQaG90byBGcmFtZSBTdHVkaW8gZm9yIE1hYyBPUyBYLCBkb3dubG9hZCBiZXN0IGFsdGVybmF0aXZlIHNvbHV0aW9ucyBjYXJlZnVsbHkgY2hvc2VuIGJ5IC4gRm90b3IgUGhvdG8gRWRpdG9yIFBob3RvIEVmZmVjdCBDb2xsYWdlIE1ha2VyIEZyZWUgLiBLZXkgRmVhdHVyZXM6IEh1Z2UgcGFsZXR0ZSBvZiBoaWdoIHF1YWxpdHkgZmlsdGVycyBhbGxvd3MgeW91IHRvIGdldCB0aGUgZXhhY3QgZWZmZWN0IHlvdSB3YW50LiAKQmVuZWZpdHMgb2YgbWFzc2FnZSB0aGVyYXB5IGFyZSBlbmRsZXNzLiBNYXNzYWdlIHRoZXJhcHkgY2FuIGFsbGV2aWF0ZSBwYWluIGFuZCBpbXByb3ZlIHJhbmdlIG9mIG1vdGlvbjsgZW5oYW5jZSBpbW11bml0eTsgaW5jcmVhc2Ugam9pbnQgZmxleGliaWxpdHkgYW5kIG11c2NsZSB0b25lOyByZWR1Y2Ugc2NhciB0aXNzdWUgYW5kIHN3ZWxsaW5nOyBpbXByb3ZlIHRoZSBjb25kaXRpb24gb2YgdGhlIHNraW47IGFuZCBkZWNyZWFzZSBzdHJlc3MuIEdldHRpbmcgYSBtYXNzYWdlIGlzIGdvb2QgZm9yIHlvdS4gCk1vc3QgcGVvcGxlIGFyZSBzaG9ja2VkIHdoZW4gSSB0ZWxsIHRoZW0gSSB3ZW50IHRvIEV1cm9wZSBmb3IgYSBtb250aCBhbmQgZGlkIDcgZGlmZmVyZW50IGNvdW50cmllcywgb3ZlciBhIHdlZWsgb2YgdGhhdCB3YXMgYnkgbXlzZWxmIGluIFByYWd1ZSBhbmQgVmllbm5hLiBBdCB0aGUgdGltZSBJIHdhcyAyNiwgSSBmZW1hbGUgKHdoaWNoIGlzIHdoYXQgdXN1YWxseSBzY2FyZWQgcGVvcGxlICAgIk9NRyB5b3UgdHJhdmVsZWQgQlkgWU9VUlNFTEYgaW4gYSBmb3JlaWduIGNvdW50cnk/ISE/IikuIFRoYXQgd2FzIHByb2JhYmx5IHRoZSBiZXN0IHdlZWsgb2YgdGhlIHRyaXAuIApBIGdvb2QgUkRNIHdpbGwgb3V0ZHBzIGEgbWVkaW9jcmUgU01OIG9yIEJMTS4gQW5kIHRoYXQgaG93IGl0IHN1cHBvc2VkIHRvIGJlLiBJZiBwZW9wbGUgYXJlIG5vdCBjbGVhcmluZyBiZWNhdXNlIHRoZXkgaGF2ZSBhbiBSRE0gaW5zdGVhZCBvZiBhIFNNTiBvciBCTE0sIHRoZXkgaGF2ZSBiaWdnZXIgcHJvYmxlbXM7IHRoZSBkaWZmZXJlbmNlIGlzIG5vdCBlbm91Z2ggdG8gbWFrZSBpdCB1bmFibGUgdG8gY2xlYXIuCiJIZSBjb21ldGggaW4gc3ByaW5naW5nIHRpbWUgYW5kIHdhcm5ldGggb2Ygbm92ZWx0eSBvZiB0aW1lIHdpdGggZ3JvYW5pbmcgdm9pY2UuIEFuZCBpbiB3aW50ZXIgaGUgbG9zZXRoIGhpcyBmZWF0aGVycywgYW5kIHRoZW4gaGUgaGlkZXRoIGhpbSBpbiBob2xsb3cgc3RvY2tzLiBBbmQgYWdhaW5zdCBzdW1tZXIsIGluIHNwcmluZ2luZyB0aW1lLCB3aGVuIGhpcyBmZWF0aGVycyBzcHJpbmcgYWdhaW4sIGhlIGNvbWV0aCBvdXQgb2YgaGlzIGhvbGUgaW4gdGhlIHdoaWNoIGhlIHdhcyBoaWQsIGFuZCBzZWVrZXRoIGNvbnZlbmFibGUgcGxhY2UgYW5kIHN0ZWFkIGZvciB0byBicmVlZCBpbi4gClRha2Ugc2ltcGxlIHN0ZXBzIHRvIG1vdmUgZnJvbSBjb3N0IHBsdXMgdG8gdmFsdWUgYmFzZWQgcHJpY2luZy4gCkFuZ3VzTWFnZWUgdQpVSCBIb3N0IDIwMTkgTGF0aW5vIEFydCBOb3cKTm92ZWx0eSBhY2NvdW50cyBhcmUgYWxsb3dlZCwgYnV0IGlmIHRoZSBhY3Rpb24gdGhleSBtYWtlIGNvdWxkIGJlIHJlcGxpY2F0ZWQgYnkgYSBib3QgKHN1Y2ggYXMgcmVwZWF0aW5nIHRoZSBzYW1lIHdvcmQgcmVwZWF0ZWRseSBvciBwb3N0aW5nIGlkZW50aWNhbCBjb21tZW50cyBmcm9tIHByZXZpb3VzIHRocmVhZHMpLCBhIGJhbiB3aWxsIGJlIGlzc3VlZC4KQXMgZmFyIGFzIHJvY2tldCB2cyByb2NrZXQgdHVycmV0LCB0aGF0IGEgcGVyc29uYWwgZmxhdm9yIHRoaW5nLiAKVHdvIG1vbnRocyBiZWZvcmUgdGhhdCwgaGUgd2FzIGFycmVzdGVkIGZvciBhbGxlZ2VkbHkgYnJlYWtpbmcgdGhlIGZyb250IGRvb3Igd2l0aCBhIHNob3ZlbC4KSW4gQW1hdGV1ciBnb2xmLCBzYXkgYXQgeW91ciBjbHViIGF0IHRoZSB3ZWVrZW5kLCB0aWVzIGFyZSB1c3VhbGx5IGJyb2tlbiB3aXRoIHRoZSBiZXN0IG5ldHQgc2NvcmUgb24gdGhlIGJhY2sgOSwgdGhlbiBiZXN0IGJhY2sgNiwzLDIgb3IgMSBkZXBlbmRpbmcgb24gaG93IGNsb3NlIGl0IGlzLiAKUmVub3ZzLiBUYWhvZS4gTGFuZCBiYXNlZCBjYXNpbm8gdnMuIApNb3N0IHBlb3BsZSBkb24ndCBnZXQgR2FtZXIgZmFuYXRpYyBhYm91dCBib2FyZCBnYW1lcywgYnV0IHRoZXJlIGlzIHRoZSBwb3NzaWJpbGl0eSBvZiBpdCBsZWFkaW5nIHRvIGJlY29taW5nIGEgR2FtZXIuLiAKSSdtIGJleW9uZCBzYWQgYW5kIGFuZ3J5LiBJIGNhbiBub3QgdHJ1c3QgaGltIGFueW1vcmUuIEkgY2FuJ3QgYWZmb3JkIHRvIG1vdmUgb3V0IG9uIG15IG93biB5ZXQsIEknbSB0cmFwcGVkLiAKRXRjOiBiaWcgYnJvd24gY29sb3VyIG5pcHBsZXMsIHNraW4gYXJlIHJhdGhlciBkYXJrLCB0b28gcGx1bXAgb3IgdG8gc2xpbS4gWW91IG5lZWQgdG8gdXJzIGhvbWV3b3JrIGlmIHUgd2FudCB0byBnZXQgYmV0dGVyIHF1YWxpdHkuIApZb3UnbGwgbWFrZSAkNSBhbmQgaG91ciBpbiBkYXl0aW1lLCB3aGljaCBpcyA0MCQgdG8gcGF5IGZvciB5b3VyIGRyaW5rcyBhdCBuaWdodCwgYnV0IHlvdSBhcmUgYmVhdGluZyB0aGUgbWljcm8gdGFibGVzIG9ubGluZSwgc28geW91IHN1cmUgYXMgaGVsbCBjYW4gYmVhdCB0aGUgJDEvJDIgbGl2ZSBnYW1lIGFuZCBub3cgeW91IGhhdmUgYSBnb29kIHNob3QgdG8gdHJ5IGFuZCBtYWtlIHlvdXJzZWxmIDEwMEJCIGEgbmlnaHQgKDIwMCQpLiBZb3UgYXJlbid0IGN1cnJlbnRseSBhIHdpbm5pbmcgcGxheWVyIGF0IDJOTC4gVGhlIGdhcCB0byBhY2hpZXZlIHRoaXMgaXMgZ29pbmcgdG8gdGFrZSB5b3UgaHVuZHJlZHMgKGlmIHlvdSBhcmUgZXhjZXB0aW9uYWxseSB0YWxlbnRlZC9oYXZlIHBlcmZlY3Qgc3R1ZHkgaGFiaXRzKSBvZiBob3VycyBhbmQgbW9yZSBsaWtlbHkgdGhvdXNhbmRzIG9mIGhvdXJzLiBJZiB5b3UgcHV0IHRoYXQgZWZmb3J0IGludG8gbWFueSBvdGhlciBlbmRlYXZvcnMgaXQncyBsaWtlbHkgeW91J2xsIG1ha2UgZmFyIG1vcmUgdGhhbiB5b3VyIGRlc2lyZWQgMjRrL3llYXIuIElmIHlvdSBhcmVuJ3QgaW4gdGhlIFVTIGl0J3MgcG9zc2libGUgdGhpcyBpc24ndCB0cnVlIGJ1dCB0aGUgZ2FtZXMgYXJlIGFsc28gZ29pbmcgdG8gYmUgbXVjaCBtb3JlIGRpZmZpY3VsdCBhbmQgcmVxdWlyZSBhbiBldmVuIGhpZ2hlciBza2lsbCB0byBhY2hpZXZlIHlvdXIgZ29hbHMuCjE1KSAiTWVyY3VyeSBpbiBhbnkgZm9ybSAgIGVpdGhlciBhcyB3YXRlciBzb2x1YmxlIGlub3JnYW5pYyBzYWx0LCBhIGxpcGlkIHNvbHVibGUgb3JnYW5pYyBtZXJjdXJ5IGNvbXBvdW5kLCBvciBhcyBtZXRhbGxpYyBtZXJjdXJ5ICBpcyBhbiBleHRyZW1lbHkgcG90ZW50IG5ldXJvbG9naWNhbCB0b3hpbi4iCjEuIEhvdyB0aXNzdWVzIGJlY29tZXMgdGlnaHQgUG9vciBwb3N0dXJlLCBwaHlzaWNhbCBpbmp1cmllcywgYW5kIHZhcmlvdXMgaWxsbmVzc2VzIGNhbiB0aHJvdyB0aGUgYm9keSBvdXQgb2YgYWxpZ25tZW50IGFuZCBjYXVzZSB0aGUgaW50cmljYXRlIHdlYiBvZiB0aGUgYm9keSdzIGZhc2NpYSB0byBiZWNvbWUgcmVzdHJpY3RlZC4gV2hlbiBtdXNjbGUgZmliZXJzIGFyZSBpbmp1cmVkLCB0aGUgZmFzY2lhIHRoYXQgc3Vycm91bmRzIG11c2NsZXMgYmVjb21lcyBzaG9ydCBhbmQgdGlnaHQuIApMb29rIGF0IHRoZSBjbG9jaywgYW5kIHRyeSB0byByZW1lbWJlciB0aGlzIG1vbWVudC4gClVuZm9ydHVuYXRlbHkgaXQgd291bGQgYmUgbWl4ZWQgY2FiaW4sIGJ1dCBJIGFsc28gc2VlaW5nIExBWCBUUEUgb24gRVZBIEosIHRoZW4gRVZBIFkgdG8gRFBTICg1IGhvdXJzIG9mIFkgbWF5IG5vdCBiZSB0aGUgd2F5IHlvdSB3YW50IHRvIHN0YXJ0IG9mZiB0aGUgaG9uZXltb29uLCBidXQgdGhyb3dpbmcgaXQgb3V0IHRoZXJlKS4KQWNyb3R0IGZyb20gTWlkd2F5IFVhbGwuIApXaGVuIGNvbGxlY3RpbmcgTGFzIFZlZ2FzIGNhc2lubyBwb2tlciBjaGlwcywgaXQgaXMgaW1wb3J0YW50IHRvIGVuc3VyZSB0aGF0IHlvdSBhcmUgZ2V0dGluZyBhdXRoZW50aWMgcG9rZXIgY2hpcHMuIE1vc3QgY2FzaW5vcyBtYXJrIHRoZWlyIGNoaXBzIGluIG9uZSB3YXkgb3IgYW5vdGhlciB0byBlbnN1cmUgdGhhdCBkdXBsaWNhdGlvbiBpcyBkaWZmaWN1bHQgYW5kIHRoYXQgY29sbGVjdG9ycyBjYW4gZWFzaWx5IGlkZW50aWZ5IHRoZW0uIFlvdSB3aWxsIGZpbmQgdW5pcXVlIGNvbG9ycyB1c2VkLCB1bmlxdWUgaW5sYXlzLCB1bmlxdWUgaG90IHN0YW1wcywgYW5kIGV2ZW4gdW5pcXVlIGluZGVudGlvbnMgYW5kIG1hcmtpbmdzIG9uIHRoZSBlZGdlIHNwb3RzLiAKVG91cyBsZXMgbW90cyBwYXNzcyBlbiBncmFzIHNvbnQgZCBpbHMgcGVybWV0dGVudCB1bmUgbnVhbmNlIGV0IHZpdGVudCBhdXRhbnQgcXVlIGZhaXJlIHNlIHBldXQgZGUgY3JvaXNlciBsYSByb3V0ZSBkZSBwcm9wb3MgZXh0cm1pc3RlcywgZG9ubmFudCBsIHF1ZSBjZWxhIHNlIHBhc3NlIHRvdWpvdXJzIGFpbnNpIGNoZXogdG91cyBsZSBtb25kZS4gCkhlIHdvbiA5IG91dCBvZiAxMC4gCkR1bWIsIGZsYXdlZCwgY2hhbmdlYWJsZSBwZW9wbGUuIApGcm9tIG11c2ljIC8gdmlkZW8gcGxheWVycywgdG8gZmlsZSBtYW5hZ2VycyBhbmQgdmFyaW91cyB0b29scywgeW91J2xsIGFsd2F5cyBzZWUgc29tZXRoaW5nIHdvcnRoIGEgdHJ5LiAKU3BvcnRzIEFydGljbGVzICBOb3ZlbWJlciAyMywgMjAwOApJZiB5b3UgY2FuLCB0cnkgZ2V0dGluZyBvZmYgb2YgdGhlIHBhdmVtZW50IHNvIHRvIHNwZWFrLiBGaW5kIGEgcGFyayBvciBuYXR1cmUgY2VudGVycyBuZWFyYnkgYW5kIHRha2UgYSBzdHJvbGwgb24gYSB0cmFpbC4gWW91IHdpbGwgYmUgYW1hemVkIGF0IHRoZSBmZWVsaW5nIG9mIGNhbG1uZXNzIHRoYXQgY29tZXMgb3ZlciB5b3Ugb25jZSB5b3VyIGZlZXQgbGVhdmUgdGhlIHBhdmVtZW50IGJlaGluZC4KSWwgbiBudWwgYmVzb2luIGRlIHJldmVuaXIgYXUgcGx1cyBwcnMgZCByY2l0ICBsIGRlcyBwbHVzIG9ic2N1cmVzIHBvdXIgc291bGlnbmVyIGwgZGUgZHJvZ3VlcyBlbiB2dSBkZSBwcm92b3F1ZXIgZXQvb3UgZCBsIGRlcyBtYXNzZXMuIApJIHJlYWxpemUgeW91IGFyZSB0cnlpbmcgdG8gaGVscCwgYW5kIEkgdGhhbmsgeW91IGZvciB0aGF0LiAKT1AsIHRoZSBzYWQgdHJ1dGggaXMgeW91IGVpdGhlciBhZGFwdCBhbmQgc2VsbCBvdXQgdG8gbWFrZSB5b3VyIHNob3cgZXhjaXRpbmcgb3IgeW91IGZhaWwgYmVjYXVzZSBpdCBib3JpbmcgdGVsZXZpc2lvbi4gU2tlcHRpY3MgdGhhdCB3YXRjaCB0aG9zZSBzaG93cyBkbyBpdCBmb3IgZW50ZXJ0YWlubWVudCBhbmQgdGhlIGJlbGlldmVycyB3YXRjaCB0aGVtIHRvIGZlZWwgYSBzZW5zZSBvZiB2YWxpZGF0aW9uLiBJZiB5b3UgcHJvdmlkZSBuZWl0aGVyIHRoZW4gd2h5IHdvdWxkIGFueW9uZSB3YXRjaD8KKHNpYykgSGUgaGFkIG5vIGJ1c2luZXNzIHBsYW4gYXQgYWxsIGFuZCBoYWQgbWFueSB1bnByb2ZpdGFibGUgeWVhcnMgc2luY2UgMjAwMCBwYXJ0aWN1bGFybHkgZnJvbSAyMDA1IHRvIDIwMTUuIApCdXQgd2hlcmUgdGhlIGVjb25vbXkgaXMgY29uY2VybmVkLCBTaW5nYXBvcmUgaXMgd2F5IGFoZWFkIG9mIE1hbGF5c2lhLiAKSXQgbm91cmlzaGVzIHRoZSBoZWFydCBibG9vZCwgbWFraW5nIGl0IGEgZ29vZCBzdXBwbGVtZW50IHRvIGhlcmJhbCB0aGVyYXB5LiAKTm90IGxlc3MgdGhhbiBtaW5pbXVtIHdhZ2UsIG5vLiAKIkkgaGF0ZWQgZXZlcnkgZ3V5IEkgcGxheWVkIGFnYWluc3QsIiBMaW5kc2F5IHNhaWQgaW4gYW4gaW50ZXJ2aWV3IGZvciB0aGUgIkxlZ2VuZHMgb2YgSG9ja2V5IiBkb2N1bWVudGFyeSBzZXJpZXMuICJBbmQgSSBtdXN0IHNheSB0aGF0IHRoZSBvcHBvc2l0aW9uLCB3aGV0aGVyIGl0IGJlIFRvcm9udG8sIE1vbnRyZWFsLCBOZXcgWW9yaywgQm9zdG9uIG9yIENoaWNhZ28sIHRoZXkgZmVsdCB0aGUgc2FtZSB3YXkuIgpFbGxlIGVzdCBpbnNjcml0ZSBhdSBwYXRyaW1vaW5lIG1vbmRpYWwgZGUgbCdVbmVzY28gZGVwdWlzIDE5OTMsIGNlIHF1aSBhIGNvbnRyaWJ1ICBhY2Nyb3RyZSBzYSBub3Rvcml0LiBMYSBjaXQgYXUgcGFzcyBkb3Vsb3VyZXV4LCBxdWFsaWZpZSBkYW5zIGxlcyBhbm5lcyAxOTUwIGRlICJob250ZSBuYXRpb25hbGUiIGVuIHJhaXNvbiBkZSBzb24gZXh0cm1lIHBhdXZyZXQsIGEgYXVqb3VyZCdodWkgcmV0cm91diBzYSBkaWduaXQgZW4gc2F1dmFudCBzZXMgcGFsYWlzIGJhcm9xdWVzIGV0IHNlcyBnbGlzZXMgcnVwZXN0cmVzLiAKQmFhem92IGxhd3llciwgU29waGllIE1lbGNoZXJzLCBoYXMgc2FpZCB0aGF0IDE2IG1pbGxpb24gZmlsZXMgd2VyZSByZWxlYXNlZCB0byB0aGUgZGVmZW5jZSBpbiBtaWQgU2VwdGVtYmVyIGFuZCB0aGF0IHRoZSBjYXNlIHdvbiBiZSBhYmxlIHRvIHByb2NlZWQgaW4gYSB0aW1lbHkgZmFzaGlvbi4KQUxBQSBCRUxFRFlFUyBNQVJUIEFZSSBPTEFBTiBNRUNMUyBUT1BMQU5ESUFsaWFhIEJlbGVkaXllc2kgTWFydCBheSBvbGFhbiBtZWNsaXNpIEJlbGVkaXllIEJha2FuIFNlcmthbiBBY2FyIHluZXRpbWluZGUgZ2VyZWtsZXRpcmlsZGkuIE1lY2xpcyBzYWxvbnVuZGEgeWFwbGFuIHRvcGxhbnRubiBnbmRlbWluZGUgYmFrYW5sa3RhbiBnZWxlbiBuZXJnZWxlciB2ZSBrb21pc3lvbmRhbiBnZWxlbiByYXBvcmxhciB5ZXIgYWxkLiBNZWNsaXMgeWVsZXJpbmluIG95bGFtYXNuYSBzdW51bGFuIDM5IG1hZGRlIHRlayB0ZWsgb3lsYW5kLiA1IHViYXQgMjAxOSB0YXJpaGxpIG1lY2xpcyB0dXRhbmFrbGFybm4gb2t1bnVwIG95bGFubWFzIGlsZSBiYWxheWFuIHRvcGxhbnRkYSBpbGsgb2xhcmFrIGJha2FubGt0YW4gZ2VsZW4gbmVyZ2VsZXIgbWVjbGlzIHllbGVyaW5pbiBncm5lIHN1bnVsZHUuIEJha2FubGt0YW4gZ2VsZW4gbmVyZy4KT2ggYW5kIGFuIGVtcHR5IGxvdCB3aXRoIGEgZG96ZW4gdHVya2V5cy4gVGhleSB3ZXJlIGFsbCBodWRkbGVkIHVwIHRvZ2V0aGVyIHVuZGVyIHRoZSBzaGFkZSBvZiBhIHRyZWUuIFdhaXRpbmcgZm9yIHJhaW4gcGVyaGFwcz8gV2UgYm9va2VkIGl0IGFmdGVyIGxvb2tpbmcgYXQgdGhlIGhvdXNlLi4gClRoZSBvdGhlciB0aW1lcyBiZWZvcmUsIHRoZXkgYmVlbiB2ZXJ5IHByb2Zlc3Npb25hbCwgaGUgc2FpZCBvZiB0aGUgVlBELiBEb24gd2FudCB0byBydWluIHRoZSByZXB1dGF0aW9uIG9mIHRoZSBWUEQgYmVjYXVzZSB0aGV5IGRvIGEgZ29vZCBqb2IuIApBbmQgYSBkcnVnIGRlYWxlciB3YXMgdG9sZCBzcXVhZCBjYXJzIG1hcmtlZCAic2hlcmlmZiAiIGFuZCAic2hlcmlmZidzIHBvbGljZSAiIG1pZ2h0IGJlIGF2YWlsYWJsZSBvbiBhICJmcmVlbGFuY2UgIiBiYXNpcyB0byBwcm92aWRlIHByb3RlY3Rpb24gZm9yIGhpcyBkZWxpdmVyaWVzLiBmZWRlcmFsIHByb3NlY3V0b3JzIHVudmVpbGVkIGEgc2VyaWVzIG9mIGVsYWJvcmF0ZSBzdGluZyBvcGVyYXRpb25zIGFpbWVkIGF0IG9mZmljZXJzIGhpcmVkIG91dCB0byByaWRlIHNob3RndW4gZm9yIGRydWcgZGVhbHMgYW5kIG90aGVyIGNyaW1pbmFsIGFjdGl2aXRpZXMuClRoYXQgYmVjYXVzZSB0aGUgc2FtZSBzZXggbWFycmlhZ2UgbW92ZW1lbnQgaXMgYSBjb25zZXJ2YXRpdmUgcGxvdC4gV2FzIHRoZSBnYXkgbWFycmlhZ2UgZm9sayBhbmQgdGhlaXIgYWxsaWVzIHdobyBpbnNpc3RlZCB0aGF0IHdlIHRha2UgdGhlIGFsdGVybmF0aXZlIG91dCBvZiBhbHRlcm5hdGl2ZSBsaWZlc3R5bGUuIEdheXMsIGdlbmRlciBxdWVlcnMsIGFuZCBzZXggd29ya2luZyBzb3J0cyB3ZXJlIG5vIGxvbmdlciB3ZWxjb21lIGF0IHRoZWlyIHBhcmFkZXMuIApUaGUgYWdlbmN5IGZvdW5kIG5vIG9yIGNsZWFyIG1vdGl2YXRpbmcgZmFjdG9yIHRvIGV4cGxhaW4gd2h5IFN0ZXBoZW4gUGFkZG9jayBvcGVuZWQgZmlyZSBmcm9tIGhpcyBzdWl0ZSBpbiBhIGhpZ2ggcmlzZSBjYXNpbm8gaG90ZWwuIFRoZSA2NCB5ZWFyIG9sZCwgd2hvIGFjdGVkIGFsb25lLCBmYXRhbGx5IHNob3QgaGltc2VsZiBhcyBwb2xpY2UgY2xvc2VkIGluLgpCZWNhdXNlIFJORyBpcyBzdWNoIGEgbWFqb3IgZmFjdG9yLCBhbmQgaGVhcnRoc3RvbmUgZ2FtZXMgdmVyc3VzIG9wcG9uZW50cyBhcmUgYWxtb3N0IGFsd2F5cyBqdXN0IDEgZ2FtZSwgdW5sZXNzIHlvdXJlIHF1ZXVlaW5nIHJlYWxseSBlYXJseSBpbiB0aGUgbW9ybmluZyBvciBoaWdoIGluIGxhZGRlciwgc2tpbGwsIHJhcmVseSBldmVyIG1lYW5zIGFueXRoaW5nLiAKV291bGQgeW91IHBsYXkgcG9rZXIgb25saW5lIGlmIGl0IHdhcyBsZWdhbD9ieSBTd29wZSA2IHllYXJzIGFnbwpXZWxsLCBvayIgdGhlbiBuZXZlciBkb2VzIGl0IGFnYWluLlRoZSBwZW9wbGUgd2hvIGdob3N0LCBkb24gZ2l2ZSB0d28gc2hpdHMgYWJvdXQgeW91ciBvcGluaW9uLCB0aGV5IGRvbiBnaXZlIGEgc2hpdCBhYm91dCB0aGUgb3BpbmlvbnMgYW5kIGZlZWxpbmdzIG9mIHRoZWlyIHNwb3VzZS9HZi9CRi9FVEMuIFNvIHRoZXkgYXJlIG5vdCBnb2luZyB0byBjYXJlIGFib3V0IGEgc3RyYW5nZXJzIG9waW5pb24gb24gdGhlIGludGVybmV0LkkgZG8gYWdyZWUgdGhhdCBpdHMgYSBidWxsc2hpdCBtb3ZlIG1hZGUgYnkgY293YXJkcy5Zb3UgaGF2ZW4gbm90aWNlZCBpdHMgYmVjb21lIHRoZSBub3JtLCBpdHMgY29uZmlybWF0aW9uIGJpYXMuIApUaGUgbXl0aCBtYWtpbmcgYWJpbGl0aWVzIG9mIHRoZSBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgaGF2ZSBvbmx5IGdyb3duIGluIHN0YXR1cmUgaW4gcmVjZW50IHRpbWUgd2l0aCB0aGUgbGFzdCBmZXcgY2hhbXBpb25zIGJlaW5nIHByZXZpb3VzbHkgdW5rbm93biBvbmxpbmUgcGxheWVycyB3aG8gb3Zlcm5pZ2h0IGJlY2FtZSBjZWxlYnJpdGllcy4gQXVzdHJhbGlhIEpvc2VwaCBIYWNoZW0gd2FzIGEgbm9ib2R5IHNpeCBtb250aHMgYWdvIGJ1dCBub3cgaGUgaXMgZmFtb3VzIGFzIHRoZSAkNy41IG1pbGxpb24gd2lubmVyIG9mIHRoZSAyMDA1IFdvcmxkIFNlcmllcyBvZiBQb2tlciBtYWluIGV2ZW50LiBUaGUgeWVhciBiZWZvcmUgaXQgd2FzIEdyZWcgJ0Zvc3NpbG1hbicgUmF5bWVyIHdobyBkZWZlYXRlZCAyLDU3NiBwbGF5ZXJzIG9uIGhpcyB3YXkgdG8gdGhlIHRpdGxlIGFuZCA1IG1pbGxpb24gZG9sbGFycyBhZnRlciB3aW5uaW5nIGhpcyBzZWF0IHZpYSBhbiBvbmxpbmUgcG9rZXIgc2l0ZSwgZm9yIGFuIG9yaWdpbmFsIHN0YWtlIG9mICQ0MC4KVGhlIG11c2NsZXMgYW5kIG5lcnZlIGVuZGluZ3MgYXJvdW5kIHRoZSBhbnVzIGFyZSBoaWdobHkgc2Vuc2l0aXZlIGFuZCBjYW4gZmVlbCBmYW50YXN0aWMgd2hlbiB0b3VjaGVkLiAKSXQgd2FzIGFib3V0IDMxRiBvdXRzaWRlIGFuZCB0aGVyZSB3YXMgZnJvc3QgZXZlcnl3aGVyZS4gVGhlIGNvdXJzZSB3YXMgU1VQRVIgZmxhdCAgIG9ubHkgYWJvdXQgMjAwZnQgb2YgZWxldmF0aW9uIGdhaW4sIGFuZCBmb3IgbWUgd2hlcmUgSSBydW4gdG8gdHJhaW4gZXZlbiBhIDVrIGhhcyBhYm91dCA0MDBmdCBvZiBlbGV2YXRpb24gZ2FpbiwgbG9sLiBUaGF0IGhlbHBlZC4gSSBvcHRlZCBub3QgdG8gd2VhciBnbG92ZXMgYW5kIG15IGhhbmRzIHJlYWxseSBodXJ0IGZvciB0aGUgZmlyc3QgdGhyZWUgbWlsZXMgdW50aWwgSSBnb3Qgd2FybWVkIHVwLiBJIGRpZG4ndCB1c2UgYW55IG9mIHRoZSBhaWQgc3RhdGlvbnMsIG9wdGluZyB0byBzdGljayB0byB0aGUgcm91dGluZSBmcm9tIG15IGxvbmcgcnVucyBvZiBqdXN0IGRyaW5raW5nIGZyb20gYSBoYW5kaGVsZCBhbmQgdGFraW5nIGEgZ2VsIGF0IG1pbGUgNSBhbmQgbWlsZSA5LiBJIHN0dWNrIHdpdGggdGhlIHBhY2VycyBlYXNpbHkgdGhlbiBwdWxsZWQgYWhlYWQgZm9yIGFib3V0IGEgbWlsZS4gQXQgbWlsZSA2IEkgaGFkIHRvIHVzZSB0aGUgYmF0aHJvb20uIFdoZW4gSSBjYW1lIG91dCwgSSBoYWQgbG9zdCB0aGUgcGFjZXJzIGFuZCBmb3IgdGhlIHdob2xlIGJhY2sgaGFsZiBvZiB0aGUgcmFjZSBJIGhhZCBubyBpZGVhIHdoZXJlIEkgd2FzIGluIHJlbGF0aW9uIHRvIGFueSBwYWNlIGdyb3VwLiA6KApIZSBjYW4gbWFuaXB1bGF0ZSBhbnlvbmUgdG8gYmVsaWV2aW5nIGhlIGlzIGRhbmdlcm91cyBhbmQgZWZmZWN0aXZlIChyZWZlcmVuY2UgMjAwOCA5IGVsZWN0aW9uIGNhbXBhaWduKSwgaGUgYWxzbyBkb2VzIG5vdCBoYXZlIFNvdXRoIEFmcmljYSBpbiBoaXMgYmVzdCBpbnRlcmVzdHMgKEEgbGlvbiBraWxscyBpdHMgcHJleSBmb3Igc3Vydml2YWwgYW5kIHByb3Zpc2lvbiBmb3IgaGlzIGZhbWlseSwgd2hpY2ggaW4gWnVtYSdzIGNhc2Ugd291bGQgbm90IGJlIGJlbmVmaWNpYWwgdG8gd2lwZSBvdXQgaGlzIHBvbGl0aWNhbCBjb21wZXRpdGlvbiwgYXMgdGhpcyB3b3VsZCByZXN1bHQgaW4gbWFzcyB1cHJpc2luZ3MgaW4gdGhlIGNvdW50cnkpIGFuZCBsYXN0bHkgSSB3aWxsIGdpdmUgeW91IG9uZSBwb2ludCwgaGUgaXMgYSB0YWN0aWNhbCBtYW4sIGJ1dCBhcyB3ZSBhbGwga25vdyBub3QgYSB2ZXJ5IHNtYXJ0IG9uZS4gCkkgdHJ1c3QgbXlzZWxmIG5vdCB0byBkbyB0aGF0LCBhbmQgSSBrbm93IHRoYXQgZG9lc24gcmVhbGx5IGdpdmUgYW55b25lIGVsc2UgY29tZm9ydCBiZWNhdXNlIEkganVzdCBhbm90aGVyIHJhbmRvbSBwZXJzb24gb24gdGhlIGludGVybmV0LCBidXQgdGhlIHN5c3RlbSBmdW5jdGlvbnMgZm9yIHJpZ2h0IG5vdy4gCkkgdGhpbmsgeW91IGFyZSBhd2FyZSB3aGVuIHlvdSBzYXkgaGVyZSBidXQgaGVyZSBhbmQgU0YgYmF5IHRlbmQgdG8gYmUgcGVvcGxlIHdobyB3YW50IHRvIG1pbi9tYXggdGhlaXIgY2FyZWVyLiAKSSB0aGluayBpdCBiZWVuIHdvcmtpbmcgcHJldHR5IHdlbGwuIEl0IG5pY2UgdG8gaGF2ZSB5b3VyIG5vdGVzIGJlIG1vcmUgb3IgbGVzcyBzZWFyY2hhYmxlIGFuZCBhY2Nlc3NpYmxlIG9uIGFueSBjb21wdXRlci4gSSB3cml0ZSBzb21lIHF1aWNrIG5vdGVzIG9yIGxhYmVsIGltYWdlcyBvbiBzbGlkZXMgZXRjLiAKRW1wYXRoeSBpcyBvbmUgb2YgdGhlIG1vc3QgaW1wb3J0YW50IHF1YWxpdGllcyBvZiBhIGdvb2QgbWFzc2FnZSB0aGVyYXBpc3QuIApZb3Ugd29uJ3QgYmUgYWJsZSB0byByZWFkIHRoZWlyIGV5ZXMgb3IgYW50aWNpcGF0ZSB0aGVpciBib2R5IG1vdmVtZW50cyBzaW5jZSB0aGlzIGlzIGJlaW5nIHBsYXllZCB2aXJ0dWFsbHkuIApJIGRvbiB0YWtlIGluIG1hbnkuIFRoZSBiaXJkcyBJIHJlc2N1ZWQgbmVlZCBhIGZvcmV2ZXIgaG9tZSBhbmQgSSBhbSBnaXZpbmcgdGhlbSBqdXN0IHRoYXQuIFRoZXkgZG9uIG5lZWQgdG8gYmUgZmxpcHBlZCBmb3IgbW9uZXkgb3IgYWJ1c2VkIGFueSBtb3JlLiAKSSB0aGluayB5b3UncmUgZ2l2aW5nIHBvbGljZSBvZmZpY2VycyAoYXMgYSBncm91cCkgdG9vIG11Y2ggY3JlZGl0IGZvciBoYXZpbmcgZnVsbCB1bmRlcnN0YW5kaW5nIG9mIHRoZWlyIHJlc3BlY3RpdmUgY3JpbWluYWwgY29kZXMuIApGYWN0IHRoYXQgYWxsIG9mIHRoZXNlIGJyYWluIHJlZ2lvbnMgdGhhdCBzaG91bGQgYmUgc3BlY2lmaWNhbGx5IHNvY2lhbCBhcmUgdXNlZCBpbiBvdGhlciBjaXJjdW1zdGFuY2VzIGlzIGEgdGVzdGFtZW50IHRvIHRoZSByZW1hcmthYmxlIGZsZXhpYmlsaXR5IGFuZCBlZmZpY2llbmN5IG9mIG91ciBicmFpbnMsIENhcnRlciBzYWlkLgpCYXNpY2FsbHkgdGFraW5nIGFsbCB0aGUgZmVlZGJhY2sgYW5kIGxlc3NvbnMgbGVhcm5lZCBmcm9tIHByZXZpb3VzIGNvdXJzZXMgYW5kIGNvYWNoaW5nLCBhbmQgaW1wcm92aW5nIHRoZSBwcm9kdWN0IGluIGFzIG1hbnkgd2F5cyBhcyBwb3NzaWJsZS4KWW91IHdpbGwgYmUgcGFtcGVyZWQgYW5kIHNhdGlzZmllZC4gVGhlIHNjYWxlIGFuZCB2YXJpZXR5IG9mIHRoZSBwcm9zdGl0dXRpb24gc2NlbmUgaXMgd2F5IGJldHRlciBpbiBUaGFpbGFuZCBidXQgdGhlIFBoaWxpcHBpbmVzIGlzIGEgY2xvc2Ugc2Vjb25kIGFuZCB0aGV5IHNwZWFrIEVuZ2xpc2ggYmV0dGVyLiAKIllvdSBhcmUgcGFyYW5vaWQiICJZb3UgYXJlIHRoZSBvbmUgd2l0aCB0aGUgcHJvYmxlbS4iICJZb3Ugc2hvdWxkIHRha2UgY2FyZSBvZiB5b3VyIGtpZHMgIllvdSBzaG91bGQgc3RvcCBibGFtaW5nIG1lIiAiWW91IG5lZWQgdG8gZGVjaWRlIHdoYXQgaXMgYmVzdCBmb3IgdGhlIGtpZHMuIiAiWW91IHNob3VsZCBsaXN0ZW4gdG8gd2hhdCBJIHNheS4iIElmIHRoZXNlIHdvcmRzIGFyZSB1c2VkIGVub3VnaCwgaXQgY2FuIGhhdmUgYW4gZWZmZWN0IG9uIGV2ZW4gdGhlIHN0cm9uZ2VzdCB3aWxsZWQgcGVyc29uLiAKTXMgV2hpdGUsIDM1LCB3YXMgZWxlY3RlZCBMYWJvciBsZWFkZXIgaW4gTWFyY2ggYWZ0ZXIgQnJ5YW4gR3JlZW4gc3RlcHBlZCBkb3duLgpGb3IgbWUgICBhbiBBbWVyaWNhbiAgIGZpbmRpbmcgdGhhdCBzdG9yZSB3YXMgbGlrZSBkaXNjb3ZlcmluZyBhIHNtYWxsIHBpZWNlIG9mIGhvbWUuIApOZXZlciBzYWlkIHRoYXQsIGFuZCBuZXZlciB3b3VsZCBlaXRoZXIuIFJlcHJvZHVjdGlvbiBpcyBleHRyZW1lbHkgaW1wb3J0YW50IGluIGtlZXBpbmcgdGhlIHNwZWNpZXMgZ29pbmcgYW5kIGFsbC4gVGhlcmUgbm90aGluZyBiYWQgb3IgdW5uZWNlc3NhcnkgYWJvdXQgaXQsIGVzcGVjaWFsbHkgaW4gdGhlIHdlc3Qgd2hlcmUgd2UgaGF2ZSBsZXNzIGFuZCBsZXNzIGtpZHMgYW5kIG1vcmUgYW5kIG1vcmUgb2xkIHBlb3BsZSB0byBzdXBwb3J0LiBJIG9ubHkgYXNraW5nIHdoZXRoZXIgb3Igbm90IHlvdSBzcGVjaWZpY2FsbHkgYXJlIG1pc2VyYWJsZSBlbm91Z2ggbm90IHRvIGNhcmUgYWJvdXQgYW55dGhpbmcgYnV0IHRoZSBleHRyZW1lbHkgYmFzaWMgYmlvbG9naWNhbCBuZWVkIHRvIGhhdmUgb2Zmc3ByaW5nIGluIGEgcmVsYXRpb25zaGlwLiBJIGNvdWxkIG5ldmVyIGV2ZW4gY29uc2lkZXIgZ2V0dGluZyBtYXJyaWVkICJqdXN0IHRvIGhhdmUga2lkcyIgYXMgdGhhdCBzZWVtcyBsaWtlIGFuIGV4dHJlbWVseSBtaXNlcmFibGUgYW5kIHNhZCBleGlzdGVuY2UuIEkgZG9uIGtub3cgaWYgaXQgYmVjYXVzZSB5b3UgYXJlIG5vdCB1c2VkIHRvIGhvdyBodW1hbiByZWxhdGlvbnNoaXBzIHdvcmsgYW5kIGJlY2F1c2Ugb2YgdGhhdCBqdXN0IHZpZXcgdGhlbSB0aHJvdWdoIGFuIGV4dHJlbWVseSBhbmltYWxpc3RpYyBsZW5zLCBidXQgSSBjb25zaWRlciB0aGluZ3MgbGlrZSAiaXMgdGhpcyBwZXJzb24gaW5mdXJpYXRpbmdseSBzdHVwaWQiIGFuZCAiZG8gSSBlbmpveSBzcGVuZGluZyB0aW1lIHdpdGggdGhpcyBwZXJzb24iIGFuZCBsaXRlcmFsbHkgYW55IHBlcnNvbmFsaXR5IGlzc3VlcyB0byBiZSBtb3JlIGltcG9ydGFudCBmb3IgYSBtYXJyaWFnZSB0aGFuICJjYW4gd2UgZnVsZmlsbCBhIGJhc2UgYW5pbWFsIG5lZWQgdG8gcmVwcm9kdWNlIi4KSSd2ZSBuZXZlciByYXBlZCwgbXVyZGVyZWQsIHN0b2xlbiwgaHVydCBhbmltYWxzIG9yIGFueXRoaW5nIGVsc2UgdW5pbWFnaW5hYmxlLiAKVGhlIHJlYXNvbiBJIChkdWJpb3VzbHkpIGNsYWltIHRoYXQgbW9zdCBmYWxsIGJldHdlZW4gdGhvc2UgdHdvIHBvbGVzIGJ1dCBtb3JlIGNlcnRhaW5seSBjbGFpbSB0aGF0IHNvbWUgZGlkIGhhcyBhIGxvdCB0byBkbyB3aXRoIG15IHVuZGVyc3RhbmRpbmcgb2YgdGhlIHBsdXJhbGl0eSBvZiBhdWRpZW5jZS4gClVzdWFsbHksIHRoZXJlJ3MgYSBkZXNpZ25hdGVkIHN1cmZhY2UgdGhlIGRpY2UgaGF2ZSB0byBoaXQuIEluIGNhc2lubyBjcmFwcywgdGhlIGRpY2UgbXVzdCBnbyBhbGwgdGhlIHdheSB0byB0aGUgYmFjayB3YWxsIG9mIHRoZSB0YWJsZSBmb3IgaXQgdG8gY291bnQuIFRoaXMgaXMgd2h5IG1vc3Qgc3RyZWV0IGNyYXBzIGdhbWVzIGFyZSBwbGF5ZWQgYWdhaW5zdCB3YWxscy4gClVzZSBhIHBhcnRuZXIgYWN0aXZpdHkuIEFzayBzdHVkZW50cyB0byBjb21lIHRvIHRoZSBkaXNjdXNzaW9uIHdpdGggMyBvciA0IHF1ZXN0aW9ucyBwcmVwYXJlZC4gU3RhcnQgdGhlIGRpc2N1c3Npb24gYnkgaGF2aW5nIHN0dWRlbnRzIHBhaXIgb2ZmIGFuZCBhbHRlcm5hdGUgYXNraW5nIGFuZCBhbnN3ZXJpbmcgdGhlaXIgcXVlc3Rpb25zLgpJIHdhcyBkaWFnbm9zZWQgd2l0aCBkZXByZXNzaW9uIDQgeWVhcnMgYWdvIGFuZCB3YXMgcHJlc2NyaWJlZCBhbnRpIGRlcHJlc3NhbnRzLiBJIHRvb2sgdGhlbSBmb3IgYWJvdXQgYSB5ZWFyIGFuZCB0aGVuIEkgZ290IHN1cGVyIGx1Y2t5LiBJIGZvdW5kIGxvdmUuIEkgbWV0IG15IG5vdyBmaWFuY2VlIGF0IHdvcmsgYW5kIHRoZSBhZnRlciBvbmx5IGEgY291cGxlIG1vbnRoIG9mIGRhdGluZyB3ZSBtb3ZlZCBpbiB0b2dldGhlciBhbmQgSSBzdG9wcGVkIHRha2luZyB0aGUgcGlsbHMgKHpvbG9mdCkgcHJldHR5IG11Y2ggY29sZCB0dXJrZXkuIFRoaXMgb25lIGV2ZW50IHByZXR0eSBtdWNoIGNvbXBsZXRlbHkgY2hhbmdlZCBteSBsaWZlIGFuZCBJIHdvdWxkIHNheSBJIG5vdyB0aGUgb3Bwb3NpdGUgb2YgZGVwcmVzc2VkLgpIbW0gbm9wZS4gVGhlIERpcmVjdGl2ZSBoYXMgYmVlbiBvdXQgdGhlcmUgZm9yIDIgeWVhcnMgYW5kIGEgaGFsZiBhbmQgdGhlIHByb2Nlc3MgaW4gUGFybGlhbWVudCBpcyBwcmV0dHkgbXVjaCBwdWJsaWMuIFRoZSBvbmx5IHBhcnQgdGhhdCBpcyBpbmRlZWQgY29uZmlkZW50aWFsICh0aG91Z2ggaXQgQnJ1c3NlbHMgc28gbGVha3MgZXZlcnl3aGVyZSwgaXQgcGFydCBvZiB0aGUgZ2FtZSksIGZvciBvYnZpb3VzIHJlYXNvbnMsIGlzIHRoZSBhY3R1YWwgbmVnb3RpYXRpb24gKG1hZGUgb24gdGhlIGJhc2lzIG9mIGEgcHVibGljIG1hbmRhdGUpLi4gClNvIG15IHNpdHVhdGlvbiBpcyBJIHNhdCBpbiBiZWZvcmUsIGJ1dCBraW5kYSBmb3Jnb3QgaG93IG15IHBvc3RlcmlvciBmZWx0LiAKV2VsY29tZSB0byB0aGlzIHN1YiB3aGVyZSBwZW9wbGUganVzdCBsaWtlIHRvIHNoaXQgb24gV2hpdG5leS4gSSBtZWFuIGhvbmVzdGx5LiBJIGdldCBwYWlkIGEgc2FsYXJ5IHRvIGRvIGl0LiAKUGhpbCBIZWxtdXRoIGlzIGFyZ3VhYmx5IG9uZSBvZiB0aGUgYmVzdCBrbm93biBwb2tlciBwbGF5ZXJzIG9uIHRlbGV2aXNpb24gdG9kYXksIGJ1dCBpdCBub3Qgb25seSBiZWNhdXNlIGhlIGhhcyB3b24gc28gbWFueSBwb2tlciB0b3VybmFtZW50cy4gSXQgYWxzbyBiZWNhdXNlIFBoaWwgaXMgc3VjaCBhIGNoYXJhY3Rlci4gClRoZSB0ZXJtIGRlZXAgbGlua2luZyB3YXMgZmlyc3QgdXNlZCBpbiB0aGUgY29udGV4dCBvZiBzZWFyY2ggZW5naW5lIG9wdGltaXphdGlvbiAoU0VPKSB0byBkZXNjcmliZSB0aGUgcHJhY3RpY2Ugb2YgbGlua2luZyB0byBhIHdlYnNpdGUncyBpbnRlcm5hbCBwYWdlcyByYXRoZXIgdGhhbiB0byBpdHMgaG9tZXBhZ2UuIEFzIGFuIFNFTyBzdHJhdGVneSwgZGVlcCBsaW5raW5nIGFsbG93cyBzaXRlIHVzZXJzIHRvIG1vcmUgZWFzaWx5IGZpbmQgdGhlIHNwZWNpZmljIGNvbnRlbnQgdGhleSdyZSBsb29raW5nIGZvciB3aGlsZSBzaW11bHRhbmVvdXNseSBpbXByb3ZpbmcgYSB3ZWJzaXRlJ3MgcmVsZXZhbmN5IGluIHNlYXJjaCBlbmdpbmUgcmVzdWx0cyBieSBjb25uZWN0aW5nIGtleXdvcmQgcmljaCBoeXBlcmxpbmtzIG9uIG9uZSBpbnRlcmlvciBzaXRlIHBhZ2UgdG8ga2V5d29yZCByaWNoIGNvbnRlbnQgb24gYW5vdGhlciBpbnRlcm5hbCBwYWdlIFtzb3VyY2U6IFBhdGVsXS4uIApJTk5PQ0VOVDogQSBtb20gZ290IGEgaHVnIGZyb20gaGVyIG9ubHkgc29uIDI1IHllYXJzIGFmdGVyIGhlIHdhcyB3cm9uZ2x5IGNvbnZpY3RlZCBvZiBhIG11cmRlciBjb21taXR0ZWQgaW4gTmV3IFlvcmsgaW4gMTk4OS4gQXQgdGhlIHRpbWUgb2YgdGhlIGRlYWRseSBzaG9vdGluZywgSm9uYXRoYW4gRmxlbWluZyB0b2xkIHBvbGljZSBoZSBoYWQgYmVlbiBvbiBhIHZhY2F0aW9uIGF0IERpc25leSBXb3JsZC4gClRoaXMgY3ljbGUgd291bGQgcmVwZWF0IHVudGlsIHRoZXJlIGFyZSBhYm91dCAxMDAgbWVuIHVuZGVyIDE4IGFuZCA0MDAgNTAwIG1lbiBvdmVyIDE4LCB3aXRoIHdvbWVuIHN0YXlpbmcgYXQgMTUwMC4gCkluIEdlcm1hbnksIEkgYmVsaWV2ZSBBdXN0cmlhIHdhcyBiZWluZyBjYWxsZWQgdGhlIE1vdGhlcmxhbmQuIEJ1dCBJIG5vdCBzdXJlIG9uIHRoYXQgcG9pbnQuCkVhcmx5IHdoZW4gSSB1c2VkIHRvIHBsYXkgcG9rZXIgZHVyaW5nIHRoZSBkYXlzIG9mIHBva2VyIHJvb20gcG9rZXIgU3RhciBwYXJ0eSBwb2tlciwgSSB3YXMgdmVyeSBuaXR0eS4gSSB3b3VsZCBjYWxsIDAlIG9mIHRoZSB0aW1lIG9uIHRoZSByaXZlciBpZiBJIGRpZG4gaGF2ZSBhYnNvbHV0ZWx5IHRoZSBiZXN0IGFuZCB3aGljaCBhbG1vc3QgYWx3YXlzIHdhcyBhdCBsZWFzdCB0b3AgcGFpciB0b3Aga2lja2VyIGlmIG5vdCB0d28gcGFpciBleGNldGVyYSBvbmUgZGF5IEkgd2FzIHdhdGNoaW5nIFBhdHJpayBBbnRvbml1cyBwbGF5IFBoaWwgSXZleSBvbiBmdWxsIHRpbHQgb24gYSA0MDAgODAwIHRhYmxlIGFuZCBJIGJhc2ljYWxseSB3YXRjaGVkIFBhdHJpayBBbnRvbml1cyBjYWxsIFBoaWwgSXZleSBkb3duIHdpdGggNCAzIG9mZnMgYWdhaW5zdCBQaGlsIGl2ZXkgMyAyIG9mZiwgbmVpdGhlciBvZiB0aGVtIG1ha2luZyBhIHNpbmdsZSBwYWlyIG9uIHRoZSBib2FyZCwgQW50b25pbyBpcyBjYWxsaW5nIGEgc29tZXdoYXQgbGFyZ2Ugcml2ZXIgYmV0ICwgbXkgcmVjb2xsZWN0aW9uIHdhcyBzb21ld2hlcmUgYXJvdW5kICQxNDAsMDAwICwuIApXZSB0dXJuZWQgb3ZlciB0aGUgY2FyZHMsIGhlIGZlbGwgb2YgaGlzIGNoYWlyLCB0aGUgcml2ZXIgZGlkbid0IHBhaXIsIGFuZCBJIGNvYXN0ZWQgaW50byBhICQxMCwwMDAgc2VhdCBmb3IgdGhlIGJpZyBvbmUuIApZb3UgcmVjZWl2ZSAyICJIb2xlIGNhcmRzIi4gQWZ0ZXIgdGhlIDIgaG9sZSBjYXJkcyBhcmUgZGVhbHQgdGhlcmUgaXMgYSByb3VuZCBvZiBiZXR0aW5nLiBUaGVuIHRoZSBmbG9wIGlzIGJlaW5nIGRlYWx0LiAKJ1N3aW5nIE51bWJlcnMnIHdob2xlc2FsZSBiYW5raW5nIGJ1c2luZXNzIGlzIHJhcmVseSBwYXJ0IG9mIHRoZSBpbnZlc3RtZW50IHRoZXNpcyBmb3IgVEQsIGJ1dCBpdCBuZXZlcnRoZWxlc3MgZm9ybXMgYW4gaW1wb3J0YW50IHBhcnQgb2YgdGhlIGJhbmsgYW5kIG9uZSB0aGF0IGNhbiBzd2luZyBudW1iZXJzLCBSb2JlcnQgU2VkcmFuLCBhbiBhbmFseXN0IGF0IENJQkMgQ2FwaXRhbCBNYXJrZXRzLCBzYWlkIGluIGEgbm90ZSB0byBjbGllbnRzLiAKQW5vdGhlciBmYWN0b3Igd2FzIHRoYXQgaXQgc2VlbXMgYSBsb3Qgb2YgMjAxNiBUcnVtcCB2b3RlcnMgcHJvYmFibHkgbGllZCB0byBwb2xsc3RlcnMgaW4gT2N0b2JlciAyMDE2LiBUaGVyZSB3YXMgYSByZWx1Y3RhbmNlIGZvciBtYW55IHRvIGFkbWl0IHlvdSB3YW50ZWQgdG8gdm90ZSBmb3IgaGltLCBwYXJ0aWN1bGFybHkgYWZ0ZXIgdGhlIHB1c3N5IGdyYWJiaW5nIHRhcGUgY2FtZSBvdXQuIFRoZSBkaWZmZXJlbmNlIHdhcyBlbm91Z2ggaW4gdGhvc2UgdGhyZWUgc3RhdGVzIHRvIHRpcCB0aGUgRWxlY3RvcmFsIENvbGxlZ2UuIApXaGF0IE9uVGhpbmdzIHRvIGRvRm9vZCBhbmQgRHJpbmtUaGVhdHJlIGFuZCBBcnRzVFYgR3VpZGVEaWdpdGFsIFByaW50IEVkaXRpb25UaGUgb2xkIGhhY2tzIHdobyB3b3JrZWQgZm9ydGhlIEJsdWUgTW91bnRhaW5zIEVjaG9kZWNhZGVzIGFnb3dvdWxkIHVuZG91YnRlZGx5cmVsaXNodGhlIHRob3VnaHQgb2YgYSBicmV3ZXJ5IGluIHRoZWlyIG9sZCB3b3JrcGxhY2UuIEFuZGlmIGFsbCBnb2VzIHRvIHBsYW4gZm9yIERKIGFuZCBIYXJyaWV0IE1jQ3JlYWR5LCB0aGF0IGlzIGV4YWN0bHkgd2hhdCB3aWxsIGJlY29tZSBvZiB0aGUgcGFwZXIncyBmb3JtZXJwcmVtaXNlc2luS2F0b29tYmEuIApHb3Jkb246ICJUaGlzIHBpenphIHNob3VsZG4gZXZlbiBiZSBjYWxsZWQgcGl6emEuIEl0IHtjZW5zb3JlZH0uIFRoZSBjcnVzdCBpcyBhbGwgc29nZ3kuIFRoZXJlIG5vIG1vemFyZWxsYS4gV2hhdCBraW5kIG9mIHNhdWNlIGlzIHRoaXM/IHtzcGl0cyBvdXQgcGllY2VzIG9udG8gdGhlIHBsYXRlIGFuZCBtYWtlcyByZXRjaGluZyBub2lzZXN9IFRha2UgdGhpcyBiYWNrIHRvIGhpbSBhbmQgdGVsbCBoaW0gdG8gZWF0IGEgcGllY2UgYW5kIGxvb2sgeW91IGluIHRoZSBleWUgYW5kIHNheSBpdCB0aGUgYmVzdCBwaXp6YSBoZSBldmVyIGhhZC4iCkRyaXZpbmcgYXJvdW5kIG91ciBjaXR5LCB0aGV5IHdhbnQgYSBmdWxsIGNvbnZlcnNhdGlvbiB0aGUgd2hvbGUgd2F5LiAKQWZ0ZXIgdHdvIHdlZWtzIG9mIGNvaGFiaXRhdGlvbiwgbWFueSBvZiB0aGVzZSB3ZWFrZXIgbWljZSB3ZXJlIG5lcnZvdXMgd3JlY2tzLgpHcmFyZCBBcGZlbGRvcmZlciBhIGR0YWlsbCBsZXMgbWNhbmlzbWVzIGRlIGxhIHNkdWN0aW9uIGVudHJlIGRldXggdHJlcy4gClNlY29uZCwgdGhlcmUgYSBwcmV0dHkgZ29vZCBjaGFuY2UgeW91IHdvbiBkbyBhbGwgdGhhdCBncmVhdCBpbiBsYXcgc2Nob29sLiBUaGF0IGRvZXNuIG1lYW4geW91IG5vdCBzbWFydCwgYnV0IHdoZW4gaXQgY29tZXMgdG8gbGF3IHNjaG9vbCBiZWluZyBzbWFydCBkb2VzbiBoYXZlIG11Y2ggdG8gZG8gd2l0aCBpdC4gTGF3IHNjaG9vbCBpcyBhIGdyaW5kLCBhbmQgdGhvc2UgdGhhdCBncmluZCB0aGUgaGFyZGVzdCByZWFwIHRoZSByZXdhcmRzLiBZb3UgbWlnaHQgYmUgdGhpbmtpbmcgImkgcmVhbGx5IGxvb2tpbmcgZm9yIG15ICJ0aGluZyIgaW4gbGlmZSwgYW5kIEkgdG90YWxseSByZWFkeSB0byBncmluZCBmb3IgaXQiIFNvcnJ5LCBidXQgeW91IG5vdCwgbm90IGxpa2UgdGhpcy4gVGhpbmsgYWJvdXQgdGhlIHdvcnN0IHBlb3BsZSB5b3Uga25vdywgdGhvc2UgdW5pbnRlcmVzdGluZyB0eXBlcyB0aGF0IGRvbiBjYXJlIGFib3V0IGFueXRoaW5nIGFzaWRlIGZyb20gdGhlaXIgam9iLCB0aG9zZSB0eXBlcyB0aGF0IHRyZWF0IGV2ZXJ5b25lIGFyb3VuZCB0aGVtIGxpa2Ugc2hpdCBiZWNhdXNlIHRoZXkgdG9vIGZvY3VzZWQgb24gdGhlbXNlbHZlcywgdGhlIHdvcnN0IHBvc3NpYmxlIHBlcnNvbmFsaXRpZXMgeW91IGNvbWUgYWNyb3NzIHRodXMgZmFyLiB0aG9zZSBwZW9wbGUgYXJlIGluIGxhdyBzY2hvb2wuIEFuZCB0aGV5IGRvbiBnaXZlIGEgc2hpdCBhYm91dCBhbnl0aGluZyBlbHNlIGluIGxpZmUgYXQgYWxsLCBzbyB0aGV5IGdvaW5nIHRvIHdvcmsgQSBMT1QgaGFyZGVyIHRoYW4geW91LiBUaGUgZ2lybCB0aGF0IGdyYWR1YXRlZCBhdCB0aGUgdG9wIG9mIG15IGxhdyBzY2hvb2wgY2xhc3Mgc3Bva2UgYXQgb3VyIGNvbW1lbmNlbWVudCwgYW5kIGhlciBlbnRpcmUgc3BlZWNoIHdhcyBhYm91dCBob3cgc2hlIHN0b3BwZWQgc29jaWFsaXppbmcsIHN0b3BwZWQgZXhlcmNpc2luZywgYW5kIG9ubHkgYXRlIGZvb2QgZnJvbSB0aGUgZ2FzIHN0YXRpb24gbmVhciBoZXIgaG91c2Ugc28gc2hlIGNvdWxkIHN0b3AgY29va2luZywgYWxsIHNvIHNoZSBjb3VsZCBzcGVuZCBtb3JlIHRpbWUgc3R1ZHlpbmcuIFRydXN0IG1lLCB5b3UgZG9uIHdhbnQgdGhhdCBzbW9rZS4KQWJlciB3aWUgZGllIEF1dG9yaW4gZGFubiBub2NoIHNvIHZvbiBvYmVuIGhlcmFiIGVpbmVyIGdhbnplbiBLYXRlZ29yaWUgdm9uIFNwaWVsZW4gZGFzIFJlY2h0IGFienVzcHJpY2h0IGFscyByaWNodGlnZSBTcGllbGUgYmV0cmFjaHRldCB6dSB3ZXJkZW4gZmluZGUgaWNoIHJpY2h0aWcgd2lkZXJzcHJjaGxpY2guIApUaGUgYXBwYXJlbnQgc2ltcGxpY2l0eSBvZiBUZXhhcyBIb2xkZW0gZHJhd3MgdGhlIFRWIGF1ZGllbmNlIGFuZCBob2xkcyB0aGVtLCBsaWtlIGFsbCBncmVhdCBnYW1lcyBhbmQgc3BvcnRzIGl0IGlzIGluY3JlZGlibHkgc2ltcGxlIHRvIHVuZGVyc3RhbmQgYnV0IGV4dHJlbWVseSBkaWZmaWN1bHQgdG8gbWFzdGVyLiAKNiwgd2hlbiB0aGUgZmVlIHRvb2sgZWZmZWN0LCB0aGUgY29tcGFueSdzIGNoaWVmIGV4ZWN1dGl2ZSwgSmltIEJ1Y2ttYXN0ZXIsIHRvbGQgdGhlIFN1bi4gCklhdGV5b3VyY2FrZSAgMyBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KQnV0IGEgcmV2aWV3IG9mIHRoZSBzcG90IG1pZ2h0IGJlIHZhbHVhYmxlLCBoZSBhZGRlZCwgdG8gc2VlIHdoZXRoZXIgd2FybmluZyBzaWducyBvciBydW1ibGUgc3RyaXBzIGFyZSB3YXJyYW50ZWQuLiAKVGhlIG1lbW9yeSBvZiBEb3VnJ3MgYnJvYWQgZ3JpbnMgYW5kIHNoZWVyIGpveSBmcm9tIHRoYXQgZGF5IGhhcyBiZWVuIHBsYW50ZWQgaW4gb3VyIGJyYWlucyBhbmQgd2lsbCBmb3JldmVyIHJlbWFpbiEgRG91ZyBkZWZpbml0ZWx5IGxpdmVkIGxpZmUgdG8gdGhlIGZ1bGxlc3QuIE9uZSBvZiBoaXMgZmF2b3VyaXRlIHNvbmdzLCAiTXkgV2F5IiBzdW1zIHVwIGhpcyBsaWZlOyBJJ3ZlIGxpdmVkIGEgbGlmZSB0aGF0J3MgZnVsbCBJIHRyYXZlbGVkIGVhY2ggYW5kIGV2ZXJ5IGhpZ2h3YXkgQW5kIG1vcmUsIG11Y2ggbW9yZSB0aGFuIHRoaXMsIEkgZGlkIGl0IG15IHdheSBXaGVuIGFza2VkIGlmIHRoZXJlIHdhcyBhbnl0aGluZyBoZSB3aXNoZWQgaGUnZCBkb25lLCBoZSBhbnN3ZXJlZCwgIk5vdCBhIHRoaW5nLiBJJ3ZlIGRvbmUgaXQgYWxsLiAKRm9yIE1hbW1vdGggTmF0aGFuIE1jTXVycmF5IHNjb3JlZCB0d28gYW5kIE5hdGhhbiBIYXJwZXIgYWRkZWQgYW5vdGhlci4gClNvbWUgcGVvcGxlIGJlbGlldmUgYSBsb3QgaW4gbHVjaywgc28gaXQgaXMgYWR2aXNhYmxlIHRvIGFzayBob3cgdGhlIGx1Y2sgZmF2b3VyZWQgdGhlbSBvciB1bmZsYXZvdXJlZCB0aGVtIGluIGEgcGFydGljdWxhciBvbmxpbmUgcG9rZXIgc2l0ZS4gUmVjb21tZW5kYXRpb25zIGFuZCBzdWdnZXN0aW9ucyBjb21lIHdpdGggdmFsdWFibGUgYmFja2dyb3VuZCBpbmZvcm1hdGlvbiB3aGljaCBjYW4gYmUgdXNlZCB0byBkZXRlcm1pbmUgd2hpY2ggb25saW5lIHBva2VyIHNpdGUgeW91IHNob3VsZCBwbGF5IHBva2VyIG9uLiBBbHdheXMgY29uc2lkZXIgeW91ciBvcHRpb25zIHdoaWxlIGNob29zaW5nIGFuIG9ubGluZSBwb2tlciBzaXRlIGFzIHRoZXJlIGFyZSBzZXZlcmFsIG90aGVyIG9ubGluZSBwb2tlciBzaXRlcyB3aGljaCBjYW4gYmUgYmV0dGVyLi4gCkkgZG9uIHRoaW5rIHRoYXQgd2VpcmQuIEkgZmVlbCBsaWtlIGl0IGJlZW4gdGhhdCB3YXkgc2luY2UgdGhlIGJlZ2lubmluZyBvZiB0aW1lIGZvciBldmVyeSByYWNlIGFuZCBuYXRpb25hbGl0eS4gVGhhdCBoYXMgdG8gYmUgZGlmZmVyZW50IHRoYW4gcmFjaXNtLi4gClBlcmhhcHMgbm90IHRoYXQgaGUgYmVlbiB0byB0aGlzIHNwZWNpZmljIGxvY2F0aW9uIG1vcmUgdGhhbiBvbmNlLCBpdCBidXQgaXMgYW4gZW5vcm1vdXMgYW1vdW50IG9mIHNwZWN1bGF0aW9uIHRvIGNvbmNsdWRlIHRoYXQgaGUganVzdCBoYXZlIHNlZW4gb3RoZXIgZ2lybHMuIFRoZSByZXBvcnQgc2F5cyB0aGF0IHRoZSB2aWRlbyBzaG93cyBoZSB3YXMgdHJlYXRlZCBieSBhIGJpZyBzbWlsZSBhbmQgaHVnIGZyb20gYm90aCB3b21lbiB3aGVuIGhlIHNhdyB0aGVtLiBJZiBhbnl0aGluZywgdGhpcyBpbXBsaWVzIHRoYXQgaGUgd2FzIGEgcmVndWxhciBjdXN0b21lciBvZiB0aG9zZSB0d28gd29tZW4uIE5vdGhpbmcgdG8gbWFrZSB1cyBiZWxpZXZlIHRoYXQgaGUgc2F3IG90aGVyIHdvbWVuIGF0IHRoaXMgb25lLgpUZW5zIG9mIG1pbGxpb25zIG9mIHByZWduYW50IHdvbWVuIGFuZCB0aGVpciBicmVhc3QgZmVlZGluZyBpbmZhbnRzIGFyZSBzZXZlcmVseSB2aXRhbWluIEQgZGVmaWNpZW50LCByZXN1bHRpbmcgaW4gYSBncmVhdCBpbmNyZWFzZSBpbiB0aGUgbWVkaWV2YWwgZGlzZWFzZSwgcmlja2V0cy4gVGhlIEZOQiByZXBvcnQgc2VlbXMgdG8gcmVhc29uIHRoYXQgaWYgc28gbWFueSBwcmVnbmFudCB3b21lbiBoYXZlIGxvdyB2aXRhbWluIEQgYmxvb2QgbGV2ZWxzIHRoZW4gaXQgbXVzdCBiZSBPSyBiZWNhdXNlIHN1Y2ggbG93IGxldmVscyBhcmUgc28gY29tbW9uLi4gClRydW1wIHNhaWQgaGUgbm90aWNlZCAiYSBsaXR0bGUgY2hhbmdlIiBpbiBLaW0gSm9uZyBVbiAiYXR0aXR1ZGUiIGFmdGVyIEtpbSB0b29rIGEgc2Vjb25kIHRyaXAgdG8gQ2hpbmEgdGhpcyBtb250aCBpbiB0aGUgcnVuIHVwIHRvIHRoZSBzdW1taXQuICJJIGRvbiBsaWtlIHRoYXQsIiBUcnVtcCBzYWlkLgpBbSBJIHRoZSBvbmx5IG9uZSB3aG8gdGhpbmtzIGl0IGNyYXp5IGhlciB3aG9sZSBJbnN0YWdyYW0gYWNjb3VudCBpcyBqdXN0IGhlciBzZWxsaW5nIHN0dWZmPyBUaGVyZSBub3QgYSBzaW5nbGUgcG9zdCBhYm91dCBoZXIgbGlmZSB3aGVyZSBzaGUgbm90IHB1c2hpbmcgc29tZSBjcmFwcHkgcHVyc2VzIG9yIGRpYXJyaGVhIHRlYS4gQW5kIEkga25vdyBzaGUgcHJvYmFibHkgZG9lc24gcHV0IHBlcnNvbmFsIHN0dWZmIG9uIHRoZXJlIGJlY2F1c2UgcGVvcGxlIGhhdGUgaGVyIGJ1dCBzaGUgY291bGRuIGFsd2F5cyBtYWtlIGhlciBhY2NvdW50IHByaXZhdGUuIApUaGF0IHdoeSB5b3UgY29uc3RhbnRseSBoYXZlIHRvIHNjcmFwZSBkb3duIHRoZSBzaWRlcy9zdGlyIG9yIGFkZCBtb3JlIGxpcXVpZC4gQmxlbmR0ZWMgdHdpc3RlciBqYXIgc29sdmVzIHRoaXMgcHJvYmxlbS4gCkl0IGRpZG4ndC4gCkFmdGVyIHRoYXQgSSBjb3VsZCBiZSBjb252aW5jZWQgdG8gZm9sZCBhbGwgbXkgOHggb3IgY2FsbCBhIGZldyB3aXRoIGEgc3BhZGUuIE5vdCByZWFsbHkgYW4gYW5zd2VyIGFzIG11Y2ggYXMgYSBmZXcgdGhvdWdodHMgSSBoYXZlIGFib3V0IHRoZSBoYW5kLiBJIHRoaW5rIHRoaXMgb3ZlciBiZXQgaXMgZ29pbmcgdG8gYmUgdW5kZXIgYmx1ZmZlZCBzbyBJIGxlYW4gdG8gYSB0aWdodCBmb2xkIHZzIG1vc3Qgb2YgdGhlIHBvcHVsYXRpb24uIApDaGluYSBvd25zIHNvIG11Y2ggb2YgQXVzdHJhbGlhIGl0cyB0dXJuZWQgZnJvbSBhIGpva2UgdG8gYWN0dWFsbHkgZnVja2VuIHNjYXJ5LiBXZSBwcmVzc3VyZWQgb3VyIGdvdmVybm1lbnQgdG8gZ2V0IG91dCBvZiB0aGUgcmVjZXNzaW9uIGFuZCBzdGFydCBtYWtpbmcgbW9uZXksIHNvIHRoZXkgd2VudCBudXRzIHByaXZhdGlzaW5nIGFuZCBzZWxsaW5nIG9mZiBlbm9ybW91cyBiaWxsaW9uIGRvbGxhciwgY3JpdGljYWwgYXNzZXRzLgpBbHNvLiBpIHdhcyBnZXR0aW5nIGJhY2sgcGFpbiB3aGVuZXZlciBpIGRpZCByYWNrIHB1bGxzIHVudGlsIGkgYm91Z2h0IGFuIGluemVyIDEzbW0gYmVsdC4gSSBmaW5kIGkgY2FuIGJyYWNlIG15IGNvcmUgYSBsb3QgZWFzaWVyIHdpdGggdGhlIGJlbHQuIGkgYmFzaWNhbGx5IGp1c3QgZmxleCBhbmQgcHVzaCBteSBiZWxseSBpbnRvIHRoZSBiZWx0LiBJcyB0aGlzIG5vcm1hbD8gSSB3YXMgb25seSByYWNrIHB1bGxpbmcgNDAgdG8gNTBrZyBiZWZvcmUgaSBib3VnaHQgYSBiZWx0LiB0b25pZ2h0IHdpdGggdGhlIGJlbHQgaSBkaWQgMTEwa2cuClRoZSBwcm9ibGVtIGlzIHRoYXQgbm90IGV2ZXJ5b25lIHdpbGwgd2FudCB0byBwbGF5IHdpdGggbW9uZXkgb3IgY2FuIGFmZm9yZCB0byBwbGF5IG1vbmV5LiBUaGVyZSBpcyBhbHNvIGEgY2hhbmNlIG9mIGh1cnQgZmVlbGluZ3MgaWYgeW91IGhhcHBlbiB0byB0YWtlIG1vbmV5IGZyb20gYSBmYW1pbHkgb3IgZnJpZW5kIGluIHdoYXQgaXMgc3VwcG9zZWQgdG8gYmUganVzdCBhIGZyaWVuZGx5IGdhbWUgb2YgcG9rZXIuIE9yIHBlcmhhcHMgeW91IGp1c3Qgd2FudCB0byBsZWFybiBob3cgdG8gcGxheSB0aGUgbWFueSBkaWZmZXJlbnQga2luZHMgb2YgcG9rZXIgZ2FtZXMgdGhlcmUgYXJlIG91dCB0aGVyZS4KJz5GZWRFeCBDb3JwLiBhbGwgaGF2ZSBiZWVuIHNpZ25pZmljYW50IHBsYXllcnMgaW4gdGhlIGJ1eWJhY2sgZ2FtZS4KTmVhcmx5IDI1JSBvZiBvbGRlciBwZW9wbGUgYW5kIGFwcHJveGltYXRlbHkgMTAlIG9mIHRoZSBnZW5lcmFsIHBvcHVsYXRpb24gc3VmZmVyIGZyb20gaW5zb21uaWEuLiAKTmV3IGNhc2lubyBjcnVpc2UgdG8gc2FpbCBvdXQgb2YgTWF5cG9ydApNeSAxMiB5ZWFyIG9sZCBzdGlsbCB3cmVja3MgaGF2b2suIEdyYW50ZWQsIG15IGNhcnBldHMgd291bGQgbG9vayBhIGxvdCBuaWNlciBpZiB0aGUgb2xkZXIgY2F0IGRpZG4gaGF2ZSBjbGF3cywgYnV0IHNoZSBoYXBweSBhbmQgaGVhbHRoeS4uIApHaXJvIGQgMjAxNCBzdGFnZSAyMCBpcyBmcm9tIE1hbmlhZ28gdG8gTW9udGUgWm9uY29sYW4gYSBtb3VudGFpbm91cyBkaXN0YW5jZSBvZiAxNjcga20uIFRoaXMgaXMgdGhlIHN0YWdlIHRoYXQgdGhlIHdpbm5lciB3aWxsIGJlIGRlY2lkZWQuIExpa2VseSBpdCB3aWxsIGJlIHRoZSBwb2tlciBmYWNlZCBOYWlybyBRdWludGFuYS4gCkxhYyBEdSBCb25uZXQgTGVhZGVyIE5ld3NwYXBlciBBcmNoaXZlcwpUaGlzIGlzIHZpdGFsIHNvIHRoYXQgYW55IGRhbmdlcm91cyBvYmplY3RzLCBzbGlwcGVyeSBvciB1bmV2ZW4gc3VyZmFjZXMgYW5kIGFueSBvdGhlciBwb3RlbnRpYWwgcmlza3MgY2FuIGJlIGFtZW5kZWQgdG8gcmVkdWNlIHRoZSByaXNrIG9mIGluanVyeS4gCk1vZGVybiBsaWZlIGNhbiBiZSBhIHN0cmVzc2Z1bCwgd2hhdCB3aXRoIGRlYWRsaW5lcyBhbmQgdGFyZ2V0cywgY29tbXV0aW5nIGFuZCBwb2xsdXRpb24sIHdvcmsgYW5kIHJlbGF0aW9uc2hpcHMuIFNvbWV0aW1lcyB5b3UncmUgc28gd291bmQgdXAgdGhhdCBpdCB0YWtlcyBhIGNvbmNlcnRlZCBlZmZvcnQgdG8gbGV0IGdvLCBjYWxtIGRvd24gYW5kIGFsbG93IHlvdXIgYm9keSB0byByZWxheC4gV2hpY2ggaXMgd2h5IHdlIGFza2VkIHlvdSwgdGhlIGgyZzIgQ29tbXVuaXR5LCBmb3IgeW91ciB0aXBzIGFuZCB0ZWNobmlxdWVzIGZvciByZWxheGF0aW9uLiBXaGF0IHdvcmtzIGZvciBvbmUgcGVyc29uIG1pZ2h0IG5vdCB3b3JrIGZvciBhbm90aGVyLCBidXQgYmVsb3cgeW91J2xsIGZpbmQgYSBicm9hZCByYW5nZSBvZiBhZHZpY2UgYW5kIHNvbWV0aGluZyB0byBzdWl0IGFsbCBpbmRpdmlkdWFscy4KQnVjemtvd3NraSBzYXlzIGxhdW5jaGluZyBNeSBGb3JkIFRvdWNoIGluIEV1cm9wZSBpcyBtb3JlIGRpZmZpY3VsdCwgZXNwZWNpYWxseSB3aXRoIGRpZmZlcmVudCByb2FkIHN5c3RlbXMgaW4gZGlmZmVyZW50IGNvdW50cmllcywgYW5kIHNldmVyYWwgbGFuZ3VhZ2VzLiBPbmx5IGlzIGl0IGEgbGFuZ3VhZ2UgaXNzdWUsIGJ1dCB0aGluZ3MgbGlrZSA5MTEgQXNzaXN0LCB0byBtYWtlIHRoYXQgZW1lcmdlbmN5IGNhbGwsIGl0IGRlcGVuZHMgd2hhdCBjb3VudHJ5IHlvdSBpbi4gTmV3IGZlYXR1cmVzIGJlaW5nIHNob3duIG9uIHRoZSBjb25jZXB0IHZlaGljbGUgaW5jbHVkZSBhIHNlYXQgdGhhdCBjYW4gcmVhZCB5b3VyIGhlYXJ0IHJhdGUsIGFuZCBtb25pdG9yIHlvdXIgYmxvb2Qgc3VnYXIuLiAKSSBhbSBhIG1vcmUgb3IgbGVzcyBjb250cmFyaWFuIGludmVzdG9yLiAKRWRpdDogSSB0aGluayBpdCBpcyBhcHByb3ByaWF0ZSB0aGF0IEkgaGF2ZSByZWNlaXZlZCAyIHJlZGRpdCBzaWx2ZXIsIGEgd29ydGhsZXNzIHJld2FyZCwgYXZhaWxhYmxlIHRvIHRoZSBwb29yZXN0IG9mIHJlZGRpdG9ycy4KT24gU3VuZGF5LCBPY3QuIDEsIFN0ZXBoZW4gUGFkZG9jayBvcGVuZWQgZmlyZSBvbiB0aGUgUm91dGUgOTEgSGFydmVzdCBGZXN0aXZhbCBraWxsaW5nIGRvemVucyBhbmQgd291bmRpbmcgaHVuZHJlZHMuIApEZXMgYXJ0aWNsZXMgc29udCBwYXJ1cyBkYW5zIGxhIHByZXNzZSAgY2Ugc3VqZXQgY2VzIGRlcm5pcmVzIHNlbWFpbmVzLiBMYSBzb2NpdCBBdXRvbGliIGVuIGNvbmNlcnRhdGlvbiBhdmVjIGxhIFBQIGEgZG9uYyBkY2lkIGRlIGZlcm1lciBwbHVzaWV1cnMgc3RhdGlvbnMsIGNlIHF1aSBwZXJtZXR0cmEgZCdleGVyY2VyIHVuZSB2aWdpbGFuY2UgYWNjcnVlIHN1ciBsZXMgYXV0cmVzIHN0YXRpb25zIGF1dG91ciBkdSBwcmltdHJlIGNob2lzaS4uIApQbGVhc2UgZG8gbm90IGdldCBwcmVnbmFudCB3aXRoIHRoaXMgbWFuY2hpbGQuIFBsZWFzZS4gCkQnYXV0cmVzIHRhYmxpc3NlbWVudHMgc2UgZm9udCByYWNoZXRlciBwYXIgZGVzIGNvbmN1cnJlbnRzIG1vaW5zIHRvdWNocyBwYXIgbGEgY3Jpc2UuIEMnZXN0IGxlIGNhcyBkZSBNZXJpbGwgTHluY2gsIHF1aSwgZW4gamFudmllciAyMDA4LCBhdmFpdCBwb3VydGFudCBydXNzaSAgc2F1dmVyIHNhIHBlYXUgdW5lIHByZW1pcmUgZm9pcyBlbiBmYWlzYW50IGFwcGVsICBkZXMgZm9uZHMgc291dmVyYWlucy4gTGUgMTUgc2VwdGVtYnJlLCBlbGxlIHNlIGZhaXQgcmFjaGV0ZXIgcGFyIEJhbmsgb2YgQW1lcmljYSBwb3VyIDUwIG1pbGxpYXJkcyBkZSBkb2xsYXJzLi4gClRoZSBPRU0gc2lnbmlmaWNhbnRseSBpbmNyZWFzZXMgdGhlIHN1cnZpdmFsYmxpdHkgb2YgdGhhdCBzdWJjbGFzcyBhZ2FpbnN0IGFkZHMgdGhhdCBoaXQgbGlrZSB0cnVja3MgKGllOiBTb1RQIGZhbGxlbiBzbmlwZXJzIDIgc2hvdCB5b3UgYXQgNjUwKS4gTWVsdGluZyBQb2ludCBUaXRhbnMgaGF2ZSB0byBydXNoIG91dCBhbG9uZSwgbWVsZWUgYSBib3NzLCBzdXJ2aXZlIGFuZCBydW4gYmFjayB0byBkbyBEUFMuIApQcm9iYWJseS4gTGFuZGxvcmQuIGFsc28gbGlrZWx5LiBCdXQgaWYgdGhleSByZW1vdGVseSB3aWxsaW5nIHRvIGFjY2VwdCByZW50IGFuZCBzb21ldGhpbmcgdW5kZXIgdGhlIHRhYmxlLCB3aG8gZ2l2ZXMgYSBzaGl0LiBJZiBJIHN0cmV0Y2hlZCBteSB3aWVuZXJkaW5nbGUgYSBiaXQgSSBjb3VsZCBydWIgaXQgb24gbXkgcm9zZWdhcmRlbi4gVW5mb3J0dW5hdGVseSB0aGF0IGdvdCBtZSBoYXJkIGFuZCBpdCBtYWRlIHRoaW5ncyBtb3JlIGRpZmZpY3VsdCBzbyBJIGhhdmUgdG8gc2V0dGxlIGZvciB0aGUgcmVndWxhciBjdXAgb2Ygam9lLgpCb3VyZ2VvaXMgbWVuIHdlcmUgc291bmQgb2YgbWluZCBhbmQgYm9keS4gQm91cmdlb2lzaWUgd2FzIGVkdWNhdGVkLCBidXQgYWxzbyBzcG9ydGluZy4gCldlbGwgdGhpcyB3YXMgdGhlIGZpcnN0IHRpbWUgSSB0cmllZCBpdCwgSSBnb3Qgc3VwZXIgZmVkIHVwIHdpdGggbGFja2x1c3RlciBjdXJsIGRlZmluaXRpb24gYW5kIGRlY2lkZWQgdG8gdHJ5IGl0IHRoaXMgd2F5IGluc3RlYWQuClJpZ2h0LiBBbmQgd2hlbiB5b3UgYXBwbHkgZm9yIGFkZGl0aW9uYWwgY2FyZHMsIHRoZXkgbG9vayBhdCB0aGUgbGltaXRzIG9uIHlvdXIgZXhpc3RpbmcgY2FyZHMuIEEgbGFyZ2UgYW1vdW50IG9mIGNyZWRpdCBjYW4gYmUgb2J0YWluZWQgdmlhIENDcyBvdmVyIHRpbWUuCkFuZCBJIGJlZW4gYXQgdGhhdCBsb3cgcG9pbnQgZm9yIGEgY291cGxlIHdlZWtzIGRlc3BpdGUgbXkgbm93IGh1c2JhbmQgYmVpbmcgaG9tZSBmb3IgdGhlIGhvbGlkYXlzIChoZSB3YXMgYXQgbWlsaXRhcnkgdHJhaW5pbmcpLiAKRG92ZXIgSW50ZXJuYXRpb25hbCBTcGVlZHdheSBoYXMgYW4gYWxsaWFuY2Ugd2l0aCBEb3ZlciBEb3ducyBIb3RlbCBDYXNpbm8sIHdoaWxlIEhvbGx5d29vZCBDYXNpbm8gb3Zlcmxvb2tzIHRoZSBzZWNvbmQgdHVybiBhdCBLYW5zYXMgU3BlZWR3YXkuIE1vcmUgYW5kIG1vcmUgc3RhdGVzIGFyZSBsZWdhbGl6aW5nIHNwb3J0cyBiZXR0aW5nIGFmdGVyIHRoZSBTdXByZW1lIENvdXJ0IGxpZnRlZCBOZXZhZGEncyBlZmZlY3RpdmUgbW9ub3BvbHkgb24gaXQgbGFzdCB5ZWFyLCBhbmQgTkFTQ0FSIGFscmVhZHkgaGFzIGJlZW4gYSBwb3B1bGFyIHNwb3J0IHdpdGggRmFuRHVlbCBhbmQgRHJhZnRLaW5ncyBwcm92aWRpbmcgcGxlbnR5IG9mIG9mZmVyaW5ncy4uIApGb3Igbm93IEkgZ2l2ZSBoaW0gdGhlIGJlbmVmaXQgb2YgdGhlIGRvdWJ0LCB1bnRpbCBJIHJlYWQgc29tZXRoaW5nIGJ1bGxldHByb29mLiAKV2hpY2ggbWVhbnMgdGhhdCB0byBmaW5kIGEgc3BlY2lmaWMgIlNhbnNrcml0IiBlZmZlY3QgZnVydGhlciByZXNlYXJjaCBpcyBuZWVkZWQuCk5ldmVyIGhlYXJkIGFub3RoZXIgd29yZCBmcm9tIGhpbS4gCkkgYW0gc2F5LCBmcm9tIHBlcnNvbmFsIGV4cGVyaWVuY2UuIFllcywgeW91IGNhbiAsIGJ1dCBpdCBjYW4gYmUgcmVhbGx5IGZydXN0cmF0aW5nLiBZb3UgY2FuIHN0YXJ0IGZlZWxpbmcgbGlrZSB5b3UgYXJlIGJlaW5nIHRvcm4gYXBhcnQuIApDb21wYW55IGFscmVhZHkgaGFkIHR3byByb3VuZHMgb2YgbGF5b2ZmcyB0aGlzIHllYXIgYnV0IEkgbmV2ZXIgdGhvdWdodCB0aGV5IHdvdWxkIGxldCBtZSBnby4gVGhlIGFyZ3VtZW50IHdhcyBnZXR0aW5nIGEgbGl0dGxlIGhlYXRlZCBidXQgSSBkaWRuIHRoaW5rIGhlIHdhcyBnb2luZyB0byBoaXQgbWUuIFRoZSBmaXJzdCB0aGluZyB0byBkbyB3aGVuIGZhY2luZyBkaWZmaWN1bHR5IGlzIHRvIG1ha2Ugc3VyZSB5b3UgcmVjb2duaXplIGl0IGFzIHNvb24gYXMgcG9zc2libGUuLiAKWW91IHNob3dlZCBtZSB0aGF0IGJlaW5nIHRoZSBib3NzIGNhcnJpZXMgc29tZSBodWdlIHJlc3BvbnNpYmlsaXRpZXMsIHRoYXQgdGhlIGRlY2lzaW9ucyBoZSBtYWtlcyBjYW4gaGF2ZSBhIHJlYWwgYW5kIGRldmFzdGF0aW5nIGltcGFjdCBvbiBwZW9wbGUncyBsaXZlcy4uIApJIGNhbm5vdCBzdHJlc3MgdGhlIGltcG9ydGFuY2Ugb2YgZ2V0dGluZyB0aGUgZGlzayBwcmVzc3VyZSByZWxpZXZlZCBvZmYgb2YgdGhlIG5lcnZlIGluIHF1ZXN0aW9uLCBsaWtlbHkgdGhlIEM1L0M2IGRpc2suIEFsc28sIGRvIG5vdCBkbyBhbnkgYWN0aXZpdHkgcmVxdWlyaW5nIGFueSBsaWZ0aW5nLCBhcm0gc3RyZW5ndGgsIGV0Yy4sIGFuZCBkb24ndCBkcml2ZSBpZiB5b3UgY2FuIGF2b2lkIGl0LiAKU2luY2UgMjAwNiwgdGhlIGJyZXdlcnkncyAiYmVlciB3ZWxsbmVzcyBsYW5kIiBoYXMgYmVlbiBvZmZlcmluZyB2aXNpdG9ycyBhIDIwIG1pbnV0ZSBzb2FrIGluIGEgdHViIG9mIGEgc3BlY2lhbCAiYmF0aGluZyBiZWVyIiBzcGVjaWFsbHkgYnJld2VkIHRvIHN0aW11bGF0ZSB0aGUgc2tpbiBhbmQgaW50ZXJuYWwgb3JnYW5zLCBmb2xsb3dlZCBieSBhIGNvbXBsaW1lbnRhcnkgbXVnIG9mIHRoZSBicmV3ZXJ5J3Mgcm9jayBsYWdlciwgZm9yIGp1c3QgJDI5LiAKQ2FsbF9Eb3duX0Zvcl9XaGF0ICAzNyBwb2ludHMgIHN1Ym1pdHRlZCAyMyBkYXlzIGFnbwpXaG8ga25vd3MsIHRoZXkgbWlnaHQgbGlrZSB5b3VyIGluc2lnaHRzIGFuZCBlbmVyZ3kgYW5kIGZpbmQgYW4gb3Bwb3J0dW5pdHkgdG8gZ2V0IHlvdSBpbnZvbHZlZCBpbiBzb21lIHdheS4uIApCeSBnaXZpbmcgdGhlIHdvbWFuIGZvb2QgYW5kIGRyaW5rLCBpdCdzIGltbWVkaWF0ZWx5IGV4Y2x1ZGluZyB0aGF0IHdvbWFuIGZyb20gaGF2aW5nIGFuIGFib3J0aW9uIG9uIHRoYXQgZGF5IGluIGNhc2Ugc2hlIHN1ZGRlbmx5IHJlYWxpc2VkIHRoYXQgc2hlJ3MgaW4gYSBmYWtlIGNsaW5pYyBhbmQgbm90IHRoZSByZWFsIG9uZSB3aGVyZSBzaGUgaGFzIGFuIGFwcG9pbnRtZW50Li4gClRoZSB1bnBvcHVsYXJpdHkgb2YgdGhlIFRydW1wIGFkbWluaXN0cmF0aW9uIGhhcyBiZWd1biB0byB0dXJuIG9mZiBDYW5hZGlhbiBjb25zdW1lcnMuIEFuZCwgdW5saWtlIHRoZSAxOTgwcywgdGhlIHF1YWxpdHkgb2YgQnJpdGlzaCBDb2x1bWJpYSB3aW5lcyBpcyBvbiBwYXIgd2l0aCBDYWxpZm9ybmlhLi4gClRoZSBMb2JieSBvZiB0aGUgdG91cm5hbWVudCB1c3VhbGx5IGxpc3RzIHRoZSBjdXJyZW50IGxlYWRlcnMgc28gdGhhdCB5b3UgY2FuIGFsd2F5cyBldmFsdWF0ZSB5b3VyIHBvc2l0aW9uIGFnYWluc3QgeW91ciBjb21wZXRpdG9ycy4gVGhlIHRvdGFsIG51bWJlciBvZiBwcml6ZXMgYXdhcmRlZCBpbiBhIHRvdXJuYW1lbnQgYXJlIGRlcGVuZGFudCBvbiB0aGUgbnVtYmVyIG9mIGVudHJpZXMgaW4gdGhlIHRvdXJuYW1lbnQuIApCYWJ5d2FudHNhdGFjbyAgNyBwb2ludHMgIHN1Ym1pdHRlZCA4IGRheXMgYWdvClBheXRhYmxlOiBUaGlzIGlzIHRoZSB0YWJsZSBvbiB0aGUgcG9rZXIgc2NyZWVuIHRoYXQgc2hvd3MgeW91IGhvdyBtdWNoIGVhY2ggaGFuZCBpbiBhIHBva2VyIGdhbWUgaXMgd29ydGguIEFzIHByZXZpb3VzbHkgc3RhdGVkLCB5b3UnbGwgd2FudCB0byBjaG9vc2UgYSB0YWJsZSB0aGF0IGhhcyB0aGUgYmVzdCBwYXl0YWJsZSwgbWVhbmluZyB0aGUgaGlnaGVzdCBwYXlvdXQgZm9yIGEgd2luLiBFYWNoIHBheXRhYmxlIHdpbGwgc2hvdyB5b3UgaG93IG1hbnkgY29pbnMgeW91J2xsIGdldCBpbiByZXR1cm4gZm9yIHdpbm5pbmcgYSBoYW5kIGZyb20gb25lIGNvaW4gcGxheWVkIHRvIHVwIHRvIGZpdmUgY29pbnMgcGxheWVkLi4gCkhvbWVsZXNzQnlDaDAxY2UgdQpJbiBBdWd1c3QsIHRoZSBDRkwgYWxsb3dlZCB0aGUgdXNlIG9mIHByb3BzIGluIGNlbGVicmF0aW9ucyBhZnRlciBvbmUgcGxheWVyICAgRWRtb250b24gcmVjZWl2ZXIgRHVrZSBXaWxsaWFtcyAgIHdhcyBwZW5hbGl6ZWQgZm9yIGNsaW1iaW5nIHRocm91Z2ggZW5kIHpvbmUgc2lnbmFnZSBhbmQgYW5vdGhlciAgIFdpbm5pcGVnIHJlY2VpdmVyIERhcnZpbiBBZGFtcyAgIHdhcyBub3QgZm9yIGdyYWJiaW5nIGFuIG9uIGZpZWxkIHRlbGV2aXNpb24gY2FtZXJhIGFuZCBmaWxtaW5nIGhpcyB0ZWFtbWF0ZXMuCkFsdGhvdWdoIGNvY2tyb2FjaGVzIChQZXJpcGxhbmV0YSBhbWVyaWNhbmEpIGFyZSBmYW1vdXMgZm9yIGJlaW5nIGFibGUgdG8gdG9sZXJhdGUgYWxsIG1hbm5lciBvZiBsaXZpbmcgY29uZGl0aW9ucywgdGhpcyBmYWNpbGl0eSBpcyB0aGUgZmlyc3QgdG8gc3VjY2VlZCBpbiBob3VzaW5nIHJvdWdobHkgdGhlIGh1bWFuIHBvcHVsYXRpb24gb2Ygb3VyIHBsYW5ldCdzIHdvcnRoIG9mIGNvY2tyb2FjaGVzIHVuZGVyIG9uZSByb29mLiAKVm90ZTouIApJIHByb2JhYmx5IHNob3VsZCBiZSBnZXR0aW5nIGl0IGN1dCBtb3JlIG9mdGVuLCBidXQgaXQncyBzbyBoZWFsdGh5IHJpZ2h0IG5vdywgSSBkb24ndCBmZWVsIHRoZSBuZWVkIHRvLiBJJ3ZlIG9ubHkgaGlnaGxpZ2h0ZWQgbXkgaGFpciB0d2ljZSBpbiB0aGUgMiB5ZWFycyBzaW5jZSBJIGtpbGxlZCBpdC4gCldoaWxlIGl0IGFycml2ZWQgaW4gRmxvcmlkYSBhIENhdGVnb3J5IDQgaHVycmljYW5lLCBieSBuaWdodGZhbGwgaXQgd2FzIGRvd24gdG8gYSBDYXRlZ29yeSAyIHdpdGggd2luZHMgb2YgMTAwIG1waCAoMTYwIGtwaCkuIE1lYW53aGlsZSwgbW9yZSB0aGFuIDE2MCwwMDAgcGVvcGxlIHdhaXRlZCBpbiBzaGVsdGVycyBzdGF0ZXdpZGUgYXMgSXJtYSBoZWFkZWQgdXAgdGhlIGNvYXN0Li4gCklmIHlvdSBhcmUgY29uc3RhbnRseSBnZXR0aW5nIG1hbmljdXJlcywgYWxsIHRoZSBoYXNoIGNoZW1pY2FscyBtYXkgbWFrZSB0aGUgY3V0aWNsZXMgZHJpZXIgYW5kIHRoaW5uZXIuIEl0J3MgdGhlIHNhbWUgdGhpbmcgd2l0aCBjb25zdGFudGx5IGV4cG9zaW5nIHlvdXIgaGFuZHMgd2l0aCBwcm9kdWN0cyBsaWtlIGRldGVyZ2VudHMgYW5kIGRpc2ggY2xlYW5lcnMuIEFsbCB0aGVzZSBkbyBkYW1hZ2UgdG8gdGhlIGhhbmRzIGFuZCB0aGUgZmluZ2VycyBzbyBtYWtlIHN1cmUgdG8gbWFzc2FnZSB3aXRoIGxvdGlvbiBkYWlseSwgcHJlZmVyYWJseSBvbmUgd2l0aCBWaXRhbWluIEUuIApUaGUgcmlnaHQgY29sb3IgcGF5cyBvdXQgYXQgMSB0byAxIGJ1dCB0aGUgcmlnaHQgbnVtYmVyIHdpbGwgcGF5IG91dCBhdCAzNiB0byAxLiAKVGhhbmtzIGluIGFkdmFuY2UhLiAKVHlwaWNhbGx5LCBhIGZpcnN0IHRpbWVyIGlzIHNvIGludmVzdGVkIGluIFdhbHQgY2hhcmFjdGVyLCBzdG9yeSBsaW5lIGFuZCBzdWNjZXNzIHRoYXQgdGhleSBoYXRlIGV2ZXJ5IHRpbWUgdGhlICJhbm5veWluZyB3aWZlIiBzdGFydHMgbmFnZ2luZyBvciBsYXNoaW5nIG91dC4gRXZlcnkgc3Vic2VxdWVudCB0aW1lIHlvdSB3YXRjaCB0aGUgc2hvdywgeW91IGFsbW9zdCB3YXRjaCB3aXRoIGhpbmRzaWdodCBhbmQgY2FuIGFsbW9zdCBiZSBtb3JlIGVtcGF0aGV0aWMgdG8gdGhlIHBlb3BsZSBXYWx0IGh1cnRzIGluIGhpcyBsaWZlLiAKVm90ZWQgdG8gcmVzdGFydCBhbmQgc3BlZWQgdXAgdGhlIGRlYXRoIHBlbmFsdHkuIApUaGUgYWlyIHdlIGJyZWF0aGUgaXMgYSB0aGluIGJsdWUgbGluZS4gVGhhdCB0aGluIHZlcnkgdGhpbiBibHVlIGxpbmUgaXMgcHJvZHVjZWQgYWxtb3N0IEVOVElSRUxZIGJ5IHRoZSBvY2Vhbi4gQSBzeXN0ZW0gdGhhdCBjdXJyZW50bHkgdGhhbmtzIHRvIGh1bWFucywgaGFzIGEgZmV2ZXIgaWYgaGlnaCBDMDIgaXMgYWJzb3JiZWQgaW50byB0aGUgb2NlYW4gYXQgYSBzdGF0ZSB0aGF0IGluY3JlYXNlcyBhY2lkaWZpY2F0aW9uICh3ZSBrbm93IGl0IGRvZXMpIHRvIGFuIGV4dGVudCB0aGF0IGRpYXRvbXMgY2FuIG5vIGxvbmdlciBtYWtlIG94eWdlbi4uIAoiV2hhdCBoZSdzIG1lYW50IGZvciB0aGUgcGxheWVycywgd2hhdCBoZSdzIGRvbmUgZm9yIHRoZSAoTkhMKSBQQSwgd2Ugd291bGRuJ3QgYmUgaGVyZSB3aXRob3V0IGhpbS4gU28gdGhhbmsgeW91IHRvIGhpbS4iClRoZSBuYXR1cmFsIGhhcmR3b29kIHdpZGUgcGxhbmsgZmxvb3JpbmcgbGVhZHMgdG8gYSBzcGFjaW91cyB1cHN0YWlycyBhcmVhIHdpdGggZm91ciBiZWRyb29tcyBhbmQgZW4gc3VpdGVzLiAKSSByZWNhbGwgb25lIGN1c3RvbWVyIHdobyBmb3VuZCBhIGhhcHB5IG1lZGl1bSBiZXR3ZWVuIGRlZmlsaW5nIG91ciBjaGFpcnMgYW5kIHRha2luZyBhIGJyZWFrIGZyb20gZ2FtYmxpbmc6IEhlIGp1c3Qgc3Rvb2QgdXAgYW5kIGRpc2NyZWV0bHkgcGlzc2VkIGludG8gYSBzbG90IG1hY2hpbmUgY29pbiB0cmF5LiBLZWVwIHRoYXQgaW4gbWluZCBuZXh0IHRpbWUgeW91IHN0YXJ0IHNjb29waW5nIHVwIHlvdXIgd2lubmluZ3MuCldoaWxlIGZyZXNoIHBvd2RlciBjb2F0ZWQgcGFja3MgYXJlIG1ha2luZyB0aGVpciB3YXkgdG8gc2V2ZXJhbCBob3VzZWhvbGRzIGFuZCBjbHVicyBhY3Jvc3MgdGhlIGNpdHksIGJ1bmRsZXMgb2Ygbm90ZXMgYXJlIGJlaW5nIHN0YWNrZWQgdG8gYmUgZ2FtYmxlZCBvbiBEaXdhbGkgbmlnaHRzLiBBZmZsdWVudCBidXNpbmVzcyBmYW1pbGllcyBhcmUga25vd24gdG8gcGxheSBjYXJkcyBpbiBjbG9zZWQgZ3JvdXBzIG9mIDEwIDMwIHBlb3BsZSBkdXJpbmcgdGhlIGZlc3RpdmFsLiAKSSB0aGluayB5b3Ugd2lsbCBmaW5kIHRoYXQgYSB3ZWxsIGZpdHRpbmcgYnJhIGNhbiBiZSBtb3JlIHNleHkgdGhhbiBtYW55IHRoYXQgYXJlIGFkdmVydGlzZWQgdG8gYmUgc2V4dWFsLgpJdCB3aWxsIGJlIGhhcmQsIGJ1dCBpZiB5b3UgY29tbWl0IHRvIGRvaW5nIHRoZSB3b3JrLCBJIGJlbGlldmUgeW91IHdpbGwgYmUgYWJsZSB0byB3b3JrIHRocm91Z2ggdGhlIGlzc3VlLi4gCkhpbmR1IGJlbGllZnMgZm9yYmlkIHRoZSBlYXRpbmcgb2YgYmVlZiwgcHJvdmlkZSBhIHJvbGUgZm9yIGNvd3MgaW4gdGVtcGxlIGNlcmVtb25pZXMgYW5kIHJlcXVpcmUgdGhlIGNvdyBiZSB3b3JzaGlwcGVkIGluIGV2ZXJ5IGhvbWUuIFNhY3JlZCBjYXR0bGUgYXJlIGFsbG93ZWQgdG8gd2FuZGVyIGZyZWVseSB0aHJvdWdoIGNpZnkgc3RyZWV0cywgd2hlcmUgdGhleSBvZnRlbiBzbmFybCB0cmFmZmljIGFuZCB1cHNldCBiYXphYXIgc3RhbmRzLiBJbmRpYSBkZXBlcmlkcyBvbiBjYXR0bGUsIHBlcmhhcHMgbW9yZSB0aGFuIGFueSBvdGhlciBjb3VudHJ5LCBhcyBhbiBpbXBvcnRhbnQgcHJvcCBvZiB0aGUgZWNvbm9teS4gCkV4YWN0bHksIGFzIGFpIGJlbGlldmUgeW91IHRvIGJlIGFuIGFzc2hvbGUgZm9yIG5vdCB1bmRlcnN0YW5kaW5nIGp1c3QgaG93IG11Y2ggYWJ1c2UgaXMgZG9jdW1lbnRlZCBvbiB0aGlzIHN1YiBhbmQgaG93IHRoZSBhZHZpY2UgdG8gbGVhdmUgaXMgb2Z0ZW4gdGltZXMgdG90YWxseSBqdXN0aWZpZWQKSSBub3QgcGFydGljaXBhdGluZyBpbiB0aGlzLiIgRXZlbiB0aG91Z2ggSSB3YW50IGl0IGFuZCBteSBtaW5kIGlzIHR1cm5lZCBvbiwgc29tZXRpbWVzIG15IGJvZHkgd29uIGNvb3BlcmF0ZSBidXQgSSBzdGlsbCBlbmpveSBpdCBhbmQgaGF2ZSBmdW4gYW5kIHdlIHVzZSB0b3lzIGFmdGVyd2FyZHMuLiAKVGhlIHdvcmsgZXRoaWMgaW4gdGhlIHdvcmxkIGRvbiBtZWFuIGphY2sgdG8gYSBraWQgaWYgeW91IGNhbiBtYWtlIGEgam9rZSBvciBzaGFyZSBzb21lIGNvbW1vbiBleHBlcmllbmNlIHdpdGggdGhlbS4uIApUaGUgYXZlcmFnZSBsaXN0aW5nIHByaWNlIGZvciBOYXNodmlsbGUgaG9tZXMgZm9yIHNhbGUgb24gVHJ1bGlhIHdhcyAkNTA0LDE5OSBmb3IgdGhlIHdlZWsgZW5kaW5nIEphbiAxNCwgd2hpY2ggcmVwcmVzZW50cyBhbiBpbmNyZWFzZSBvZiAwLjglLCBvciAkMyw4ODMsIGNvbXBhcmVkIHRvIHRoZSBwcmlvciB3ZWVrIGFuZCBhbiBpbmNyZWFzZSBvZiAyLjElLCBvciAkMTAsMzgxLCBjb21wYXJlZCB0byB0aGUgd2VlayBlbmRpbmcgRGVjIDI0LiAKVXN1YWxseSwgYWZ0ZXIgdGhlIGZpcnN0IHNldCBvZiBjYXJkcyBpcyBkZWFsdCBwbGF5ZXJzIGNob29zZSB3aGljaCBvbmVzIHRvIGtlZXAgYW5kIHRoZW4gdGhleSBjYW4gZGVjaWRlIHRvIHBsYXkgdGhvc2UgY2FyZHMgaW4gbXVsdGlwbGUgaGFuZHMuIEZvciBleGFtcGxlLCBpZiBwbGF5ZXJzIGNob29zZSB0byBwbGF5IHRoZSBjYXJkcyBpbiB0aHJlZSBkaWZmZXJlbnQgaGFuZHMsIHRoZSBzYW1lIGtlcHQgY2FyZHMgd2lsbCBmb3JtIHRocmVlIGRpZmZlcmVudCBoYW5kcyBhbmQgZWFjaCBoYW5kIHdpbGwgZ2V0IGEgZHJhdyBmcm9tIGEgZGlmZmVyZW50IGRlY2suClRoZSBvbmx5IGV4Y2VwdGlvbiB0byB0aGlzIGluIGNvbW1vbiB1c2UgaXMgdGhlIG9yYWwgcG9saW8gdmFjY2luZSwgd2hpY2ggaW4gZXhjZWVkaW5nbHkgcmFyZSBjYXNlcyBjYW4gbXV0YXRlIHRvIGEgcGF0aG9nZW5pYyBmb3JtLiBIZW5jZSwgaXQncyBub3QgdXNlZCBpbiB0aGUgVVNBLiAKUmVwb3J0IGNvbW1lbnRzIHRoYXQgdmlvbGF0ZSB0aGVzZSBydWxlcy4KSGUgaGFzIG92ZXIgaGFsZiBoaXMgc3RhY2sgY29tbWl0dGVkIG9uIHRoZSBmbG9wIGFmdGVyIHJhaXNpbmcuIEp1c3QgZ2V0IGl0IGluIG9uIHRoZSBmbG9wLiAKVGhlc2Ugc29uZ3MgYXJlIGF2YWlsYWJsZSBvbiAiVGhlIEZhbWUsIkdhR2EncyBmaXJzdCBhbGJ1bS4gdmVyc2lvbi4gWW91IGNhbiBnZXQgaXQvdGhlbSBmcm9tIGlUdW5lcy4gMzQpIEFnYWluLCBBZ2FpbiAuIENhbiBiZSBmb3VuZG9uIFlvdXR1YmUuIDM2KSBMdXYgVVN1bSAoYnkgQ0ogSG9sbGFuZCBmZWF0LiBMYWR5IEdhR2EpLiBTZWFyY2ggWW91dHViZSBmb3IgdGhpc3NvbmcuIDM3KSBObyBXYXkgLiBBc3N1bWVkb3V0dGFrZSBmcm9tICJUaGUgRmFtZSBNb25zIGVyLiIgQ2FuIGJlIGZvdW5kIG9uIFlvdXR1YmUuIApJIHdhcyB0aGUgc2hvdWxkZXIgdG8gbGVhbiBvbiwgc29tZWJvZHkgdG8gbGlzdGVuLiAKQWxzbywgdHJ5IHRvIHBlcmZvcm0gcHJhY3RpY2VzIGJlZm9yZSBiZXR0aW5nIGZvciByZWFsIG1vbmV5IGluIG9yZGVyIHRvIGtub3cgdGhlIGdhbWUgYmV0dGVyLiBGcmVlIGdhbWVzIGFyZSBvZmZlcmVkIGJvdGggaW4gY29tbW9uIGxhbmQgYmFzZWQgY2FzaW5vcyBhbHNvIGluIG9ubGluZSBjYXNpbm9zLiBTbG90IG1hY2hpbmVzIGFyZSBxdWl0ZSBzdHJhaWdodGZvcndhcmQsIGhvd2V2ZXIgeW91IG5lZWQgdG8gaGF2ZSB0aGUgdGVjaG5pcXVlcyBhbmQga25vdyB0aGUgc2xvdCBtYWNoaW5lIHNlY3JldHMgaW4gb3JkZXIgdG8gbWF4aW1pemUgeW91ciBjaGFuY2VzIG9mIHN1Y2NlZWRpbmcuLiAKVGhlIHNhZmUgd2F5cyB3ZXJlICJidXNoZWQiIGJ5IGEgYmVuZXZvbGVudCBHb3Zlcm5tZW50LCBhbmQgbmlnaHQgYW5kIGRheSB0aGUgZ2F5IHRpbmtsZSBvZiB0aGUgc2xlaWdoIGJlbGxzIHNvdW5kZWQgb24gaXQuIE9uIG1vb25saXQgbmlnaHRzIEFubmUgaGVhcmQgdGhlbSBpbiBoZXIgaG91c2Ugb2YgZHJlYW1zIGxpa2UgZmFpcnkgY2hpbWVzLiBUaGUgZ3VsZiBmcm96ZSBvdmVyLCBhbmQgdGhlIEZvdXIgV2luZHMgbGlnaHQgZmxhc2hlZCBubyBtb3JlLiAKV2hpY2ggaXMgdG8gc2F5IHRoYXQgdGhlcmUgaXMgc29tZSBkaWZmZXJlbmNlIG9mIG9waW5pb24gYW5kIHVzYWdlIGV2ZW4gYW1vbmcgbmF0aXZlIHNwZWFrZXJzLCBhbmQgdGhhdCB1c2FnZSBjaGFuZ2VzIG92ZXIgdGltZSBhbmQgd2l0aCB0cmVuZHMsIHZhcmllcyBieSByZWdpb24sIGV0Yy4gSXQncyBoYXJkIGZvciB0ZXh0Ym9va3MgdG8ga2VlcCB1cCB3aXRoIGFsbCB0aGF0LgpGU1UgYWxzbyBtYWRlIEdvbnphZ2EgcGF5IGZvciBpdHMgMTMgdHVybm92ZXJzLiBUaGUgU2VtaW5vbGVzIGhhZCBhIDE2IDEwIGVkZ2UgaW4gcG9pbnRzIG9mZiB0dXJub3ZlcnMuCkZvciBpbnN0YW5jZSB5b3UgYnV5IGluIGZvciA1MDAkLCB5b3VnZXQgNTAwJCB3b3J0aCBvZiBjaGlwcyB3aGlsZSB5b3UgY2FuIGFsc28gY2hvb3NlIHRvIGJ1eSBpbiBmb3Jtb3JlIG1vbmV5IG9yIGxlc3MgbW9uZXkuIApBIHBva2VyIGNyYXplIGlzIHN3ZWVwaW5nIHRoZSBuYXRpb24sIGFuZCBBcmthbnNhcyBpcyBubyBleGNlcHRpb24sIGJ1dCBzb21lIGF0dGVtcHRzIHRvIG9yZ2FuaXplIGZvcm1hbCBsZWFndWVzIHRvIHBsYXkgdGhlIGdhbWUgaGVyZSBhcmUgcnVubmluZyBhZm91bCBvZiB0aGUgbGF3LgpUaGlzIHdhcyB2ZXJ5IGhlbHBmdWwgZm9yIG1lLCBzaW5jZSBJIGhhdmUgYSB0ZW5kZW5jeSB0byBob2xkIG15IGJyZWF0aCBkdXJpbmcgZXhlcmNpc2VzLiAKVGhpcyBjbGF5IGNvbXBvc2l0ZSBQb2tlciBDaGlwIGNvbWVzIGluIHNldmVyYWwgY291bnQgc2V0cyBhbmQgZWl0aGVyIGEgd29vZGVuIGNhcm91c2VsIGZvciB0aGUgbG93ZXIgY291bnRzIG9yIGFuIGFsdW1pbnVtIGNhc2UgZm9yIHRoZSBoaWdoZXIgY291bnQgc2V0cy4gVGhlc2UgY2hpcHMgY29tZSBpbiB2YXJpb3VzIGRlbm9taW5hdGlvbnMuIApQb2xpY2Ugc2FpZCBTYXR1cmRheSB0aGF0IHR3byBtZW4gaW5qdXJlZCBpbiB0aGUgc2hvb3RpbmcgbmVhciBMZXNsaWUgU3RyZWV0IGFuZCBGaW5jaCBBdmVudWUgdG9vayB0aGVtc2VsdmVzIHRvIGhvc3BpdGFsLiBOb2JvZHkgZWxzZSB3YXMgaW5qdXJlZC4gSG93ZXZlciB0aGUgc3VydmVpbGxhbmNlIHZpZGVvIG9idGFpbmVkIGJ5IENUViBOZXdzIFRvcm9udG8gU3VuZGF5IHNoZWRzIGxpZ2h0IG9uIGp1c3QgaG93IGNsb3NlIGlubm9jZW50IGJ5c3RhbmRlcnMgY2FtZSB0byB0aGUgY3Jvc3NmaXJlLgpUaGUgZnJlZSBjYXNpbm8gZ2FtZXMgc29tZXRpbWVzIHByb3ZlIHRvIGJlIG9mIGltbWVuc2UgaGVscCBhcyBhIHBlcnNvbiBjYW4gc2ltcGx5IGVuam95IHRoZSBnYW1lIGFuZCBsZWFybiBhbG9uZyB0aGUgcGF0aC4gCkhlIHdpbGwgYmUgcmVtZW1iZXJlZCBmb25kbHkgYnkgaGlzIHNpYmxpbmdzLCBNaWtlIEhhYXMgKEphY3F1aWUpLCBMYXJyeSBIYWFzIChEaWFuZSksIFN1emFubmUgTWFkdGVyIChCcmlhbiksIFJvc2VtYXJ5IExhdm9pZSAoTm9ybSksIGFsbCBvZiBoaXMgbmllY2VzIGFuZCBuZXBoZXdzLCBhbmQgbG9uZyB0aW1lIGZyaWVuZCBhbmQgZGV2b3RlZCBlbXBsb3llZSwgVG9tIER1bnBoeSwgd2hvIHdvcmtlZCBmb3IgQmlsbCByaWdodCB1bnRpbCB0aGUgZW5kLiBCaWxsIHdhcyBhIHRydWUgcGlvbmVlciBpbiB0aGUgbXVsdGlkaXNjaXBsaW5hcnkgZGVzaWduIHdvcmxkLiAKTXlpc2xhbmR1bml2ZXJzZSAgMTIgcG9pbnRzICBzdWJtaXR0ZWQgMTkgaG91cnMgYWdvClRvbyBtYW55IGFkdWx0cyB0cnkgdG8gdGVhY2gga2lkcyBieSBwbGF5aW5nIHRoZSByb2xlIGV4cGxpY2l0bHkuLiAKVGhlIGNsdWIgYm9hc3RzIHRocmVlIG1ldGljdWxvdXNseSBtYWludGFpbmVkIHRvcCBxdWFsaXR5IGdyZWVucyBhbmQgaXMgaG9tZSB0byByZWd1bGFyIGdhbWVzIGJ5IG1lbidzIGFuZCB3b21lbidzIGxhd24gYm93bHMgYXNzb2NpYXRpb25zLgpBbmQgcmVhbGx5IHRlbGwgaGVyIG5vdCB0byB3b3JyeS4gSWYgc2hlJ3MgYmVlbiB0byBhIG1ldGFsIHNob3cgYmVmb3JlIGl0J3MgcHJldHR5IG11Y2ggdGhlIHNhbWUuIApJIHN1cmUgdGhlIE5ldyBSZXB1YmxpYyBtYWRlIHNvbWUgc29ydCBvZiBtZW1vcmlhbCBmb3IgYWxsIHRoZSBmYWxsZW4gaGVyb2VzIGluIHRoZSB3YXIgYW5kIHNvbWUgbWVtb3JpYWxzIG1heSBldmVuIGJlIGZvY3VzZWQgb24gdGhlIGJpZ2dlciBoZXJvZXMgbGlrZSBSb2d1ZSBPbmUsIGJ1dCBleHBlY3RpbmcgUm9ndWUgT25lIGRlZGljYXRpb25zL21lbW9yaWFscyBldmVyeXdoZXJlIGlzIGEgYml0IG11Y2guIEV2ZW4gaW4gdGhlIFJlYmVsbGlvbiwgbW9zdCBSZWJlbHMgaGFkIG5vIGlkZWEgd2hvIHRoZXkgd2VyZS4gMSBwb2ludCAgc3VibWl0dGVkIDIgZGF5cyBhZ28uIApPdXRsaW5pbmcgdGhlIGJyaWxsaWFudCBpZGVhIHRoYXQgdGhlIFVTIHNob3VsZCBtYWludGFpbiBpdHMgc3VwZXJwb3dlciBzdGF0dXMgdGhyb3VnaCBtaWxpdGFyeSBtaWdodC4gCiJJIGtuZXcgb25jZSB3ZSBmb3VuZCAob3VyIGlkZW50aXR5KSwgd2UnbGwgYmUgZmluZSwiIGhlIHNhaWQuICJQZW9wbGUgd2VyZSB0ZWxsaW5nIHVzIHdlIHdlcmVuJ3QgZ29pbmcgdG8gbWFrZSB0aGUgcGxheW9mZnMuIFdlIGRvbid0IGtub3cgd2hhdCdzIGdvaW5nIHRvIGhhcHBlbiBidXQgd2UncmUganVzdCBoYXBweSB0byBiZSByb2xsaW5nIGF0IGEgZ29vZCB0aW1lLiIKRnJlZSBTQyBhbmQgRWFybHkgQWNjZXNzIGNhbiBvbmx5IGdvIHNvIGZhciBhcyB3ZWxsLCBldmVuIGlmIHRoZXkgcHJpb3JpdGl6ZSBteSBjYXIgZm9yIGhhcmR3YXJlIHVwZ3JhZGUuIApUaGUgY29tcGFueSBzYWlkIHRoZXJlJ3MgYSBoZWFsdGh5IGFwcGV0aXRlIGZvciBpdHMgcmV0YWlsIG1vZGVsIGluIExhdGluIEFtZXJpY2EuIEJ1dCBpdCB3b3VsZG4ndCBpbmRpY2F0ZSBpZiBpdCBwbGFucyB0byBleGVyY2lzZSBhbiBvcHRpb24gaW4gMjAyMCB0byBidXkgYSBtYWpvcml0eSBzdGFrZSBpbiBEb2xsYXIgQ2l0eSwgd2hpY2ggb3BlcmF0ZXMgbW9yZSB0aGFuIDEwMCBzbWFsbGVyIHN0b3JlcyBpbiBzZXZlcmFsIENlbnRyYWwgQW1lcmljYW4gY291bnRyaWVzLgpPciB0aGF0IGluZGl2aWR1YWxzIHdpbGwgc3RhcnQgZGlzY3JpbWluYXRpbmcgYWdhaW5zdCB0aGVtLCBzbyB0aGV5IG5lZWQgZ292ZXJubWVudCBwcm90ZWN0aW9uLiAKT25jZSB0aGlzIGlzIGxlYXJuZWQgaXQgaXMgdmVyeSBpbXBvcnRhbnQgdGhhdCB5b3Uga25vdyBleGFjdGx5IHdoYXQgaXMgb24gdGhlIHRhYmxlIGFuZCB3aGF0IGl0IG1lYW5zIGZvciB5b3UgYW5kIGNvdWxkIHBvdGVudGlhbGx5IG1lYW4gZm9yIG90aGVycy4gTGVhbiB0aGUgZ2FtZSB5b3UgYXJlIHBsYXlpbmcgYW5kIHN0dWR5IGl0LiBPbmx5IHBsYXkgYXQgYSBsZXZlbCB5b3UgYXJlIGNvbWZvcnRhYmxlIFdpdGggQWx3YXlzIHBsYXkgd2l0aGluIHlvdXIgbGltaXRzIG9mIG1vbmV5IGFuZCBza2lsbC4gClRoZSAxNywwMDAgc3EuIGZ0LiwgdHdvIGxldmVsIGJhciB3aWxsIHNlYXQgNTAwIHBlb3BsZSBhbmQgd2lsbCBpbmNsdWRlIDE0MCBzbG90IG1hY2hpbmVzLCBzaXggYmxhY2tqYWNrL3Bva2VyIHRhYmxlcywgNTcgaGlnaCBkZWZpbml0aW9uIFRWcywgYSBzdGF0ZSBvZiB0aGUgYXJ0IHNvdW5kIHN5c3RlbSBhbmQgZm9vZCBwcmVwYXJlZCBieSBhIHdvcmxkIGNsYXNzIGNoZWYuClRyeSB0aGUgcmFyZSBWIGN1dCBhbmQgY3VybCB0aGUgZW5kcyBmb3IgYSBkaWZmZXJlbnQgYXBwZWFsLiAKIllvdSBoYXZlIHRvIGFzayB5b3Vyc2VsZiBpZiB0aGV5IHJlYWxseSBjYXJlIGFib3V0IHRoZSBibGluZCwiIFRyYXZpcyBzYWlkLgpJJ3ZlIHNlbnQgaGVyIHRoZSBmbHllciBmb3IgY29tbWVudC4gU2hlIHNhaWQgc2hlIHdhc24ndCBzdXJwcmlzZWQgYW5kIGV4cGVjdGVkIG9wcG9zaXRpb24sIHBhcnRpY3VsYXJseSBmcm9tIGVzdGFibGlzaGVkIGNvbXBldGl0b3JzIHdobyBoYXZlIGxvbmcgZW5qb3llZCBhIGdhbWJsaW5nIG1vbm9wb2x5IGluIHRoZSBzdGF0ZS4KVGhleSBhbHNvIGNyYWNrZWQgdGhlIGNlbnRlciBjb25zb2xlL2Rhc2hib2FyZCBob3VzaW5nIHdoZW4gdGhleSByZW1vdmVkIHRoZSBzY3JlZW4gYW5kIGRpZG4gZmVzcyB1cCB0byBpdC4gQ2hyeXNsZXIgd2FzIHN1cGVyIHNoYWR5IGFuZCBkaWRuIGluZm9ybSBteSBwYXJlbnRzIHRoYXQgdGhlaXIgMjAxNyBQYWNpZmljYSB3YXMgZnJvbSB0aGUgMXN0IGhhbGYgb2YgMjAxNyBhbmQgdGhlcmVmb3JlIGRpZG4gaGF2ZSB0aGUga2ljayB0byBvcGVuIGRvb3JzLCBvciB0aGUgVUNvbm5lY3Qgd2l0aCBBcHBsZSBDYXJQbGF5IGxpa2UgdGhlIDJuZCBoYWxmIG9mIDIwMTcgbW9kZWxzIGhhZCwgYnV0IHRoYXQgbm90IHJlY2FsbCByZWxhdGVkLi4gCkluIHJlYWxpdHksIHRoZXJlIHdlcmUga2V5IGNoYW5nZXMuIE9uZSBtb250aCBpbiwgbWF0ZXJpZWwgaGFzIGJlZW4gcmVtb3ZlZCBmcm9tIG5vcnRoZWFzdGVybiBTeXJpYSwgYnV0IHRyb29wcyByZW1haW4uIApJIGFtIHRyeWluZyB0byBmaWd1cmUgb3V0IGhvdyBhbnl0aGluZyBzbyBlbmdhZ2VkIGluIHRoZSBwcm9qZWN0IG9mIG5vcm1hbGN5IGFzIG1hcnJpYWdlIGNvdWxkIGJlIGEgdGhyZWF0IHRvIGEgYnVuY2ggb2YgY29uc2VydmF0aXZlIENocmlzdGlhbnMgb3IgTW9ybW9ucyBvciB3aGF0ZXZlciB3aG8gYXJlIHRoZW1zZWx2ZXMgc28gZW5nYWdlZCBpbiBiZWluZyBub3JtYWwuIApXaGF0IGFib3V0IHRoZSBjb3N0IG9mIHRoZWlyIGNyaW1lcyBhbmQgbW9yYWwganVkZ21lbnRzPyBFeGFtcGxlLiAKSSBkb24ndCBzYXkgdGhpcyB0byBicmFnLCB0cnVzdCBtZSBpdCdzIG5vdCB0aGF0IGltcHJlc3NpdmUgdG8gbW9zdCBvbiBCUC4gCkkgc3R1bWJsZWQgdXBvbiB0aGlzIHBvc3QgcmFuZG9tbHkgYnV0IHlvdXIgb3BlbiBlbmRlZCBjb21tZW50IHdpdGggdGhlIHByb21pc2Ugb2Ygc29tZSBzaGl0IEkgd2FzIGxvb2tpbmcgZm9yIHdhcyB0b28gbXVjaCB0byBwYXNzIHVwLiBJIHByb2JhYmx5IGZpbmQgc29tZXRoaW5nIGVsc2UgYnV0IGhleSAgIGlmIHlvdSBoYXZlIGFueSByYW5kb20gaGVscGZ1bCBzY3JpcHRzL3NlcnZlciBpbmZvL3NvbWV0aGluZyBJIHdvdWxkIGhhdmUgbWlzc2VkIG5vdCBoZWFyaW5nIGFueXRoaW5nIG5ldyBhYm91dCBtaXJjIHNpbmNlIEkgd291bGQgYXBwcmVjaWF0ZSBpdC4gCk1hc3NhZ2UgSXMgdGhlIExpbmsgVGhlIHVzZSBvZiBtYXNzYWdlIGlzIHRoZSBwcmltYXJ5IGFyZWEgaW4gd2hpY2ggbWFzc2FnZSB0aGVyYXB5IGFuZCBwaHlzaWNhbCB0aGVyYXB5IGFyZSBzaW1pbGFyLiAKQmVya2V5IGlzIHdheSBiZXR0ZXIgdGhhbiBJIGFtIGF0IHBva2VyIGJ1dCBQUkVUVFkgc3VyZSBoZSBnb25uYSBiZSBnZXR0aW5nIGEgRG91ZyBQb2xrIHlvdXR1YmUgdmlkZW8gbWFkZSBvdXQgb2YgdGhpcyBiZWNhdXNlIGl0IHNlZW1zIHBhcnRpY3VsYXJseSBiYWQuIApIZXIgYXV0byBzaG91bGQgZG8gJWhwIGJhc2VkIGRhbWFnZS4gVGhleSBzaG91bGQganVzdCBndXQgaGVyIHVsdCBhbnl3YXkgaXRzIHVzZWxlc3MuIFBlcmhhcHMgc29tZXRoaW5nIGxpa2UgdHJhbnNmb3JtaW5nIGludG8gYSBnaWFudCBhbmdlbCBmb3IgdmlzdWFscyBvbmx5IHdpdGggbm8gcmVhbCBiZW5lZml0IHRvIGhlciBraXQgYW5kIGRlc2lnbi4uIApPaCwgamVsbHkgYmVhbiwgZXNlIGR1bGNlIGNvbmZlY2NpbiBvdmFsIHF1ZSBlcyBlbCBwaWxhciBkZSBsYSBjYW5hc3RhIGRlIFBhc2N1YSBjYXJhbWVsb3MuIExvcyBwYWRyZXMgY29uZmFuIGVuIGVsIGVjb25taWNhIGplbGx5IGJlYW4gYSBncmFuZWwgaGFzdGEgbGEgY2VzdGEgeSB1dGlsaXphciBtYWx0ZWFkYSBodWV2b3MgeSBjb25lam9zIGRlIGNob2NvbGF0ZSBtcyBjYXJvcyBjb21vIGd1YXJuaWNpbi4gUGVybyBQYXNjdWEgdmllbmUgdW5hIHZleiBhbCBhbyB5IGhheSBtdWNoYXMgb3RyYXMgZm9ybWFzIGRlIHVzYXIgR29taXRhcyBkdXJhbnRlIHRvZG8gZWwgYW8uIFBlcm10YW1lIG9mcmVjZXJsZSAxMCB1c29zIHBhcmEgamVhbnMgZGUgZ2VsYXRpbmEgbXMgYWxsIGRlIGxhIGNhbmFzdGEgZGUgUGFzY3VhLgpPbmx5IGluc3RlYWQgb2Ygc2hhcnAgdGVldGgsIGVhY2ggc2lkZSBvZiB0aGUgUjgsIGRlc2lnbmVkIGJ5IGFuIGVuZ2luZWVyIHdpdGggYSBsb3ZlIGZvciBlbmR1cmFuY2Ugc3BvcnRzLCBpcyBsaW5lZCB3aXRoIGZvdXIgc21vb3RoIHdoZWVscywgdGhlIGtpbmQgZm91bmQgb24gaW5saW5lIHNrYXRlcy4uIApHaWJyYWx0YXIgaXMgYXQgMS40Mi4gQ2F1c3RpYyBpcyBqdXN0IGFzcywgYnV0IEdpYnJhbHRhciBpcyByZWFzb25hYmx5IG1pZGRsZSBvZiB0aGUgcGFjayBhbmQgcGF0aGZpbmRlciBpcyBxdWl0ZSBoaWdoLiBHaWJyYWx0YXIgSSBldmVuIGhhdmUgb25lIG9mIG15IGhpZ2hlciB3aW4gcmF0ZSBhbmQgSSB0aGluayBoaWdoZXN0IGhlYWxzIHBlciByb3VuZCwgYmV0dGVyIHRoYW4gbGlmZS4gCk9mIGNvdXJzZSBub3QgYWxsIGNhdHMgYXJlIHRoZSBzYW1lIHNvIG1pbGVhZ2UgbWF5IHZhcnkuIApJIHNob3VsZG4ndCBiZSB0aGVyZS4gClRoZSBjaG9pY2UgdG8gZ2l2ZSBteSBjaGlsZCB1cCBmb3IgYWRvcHRpb24gd2FzIGEgc2ltcGxlIG9uZS4gSXQgd2FzIHRoZSBiZXN0IGRlY2lzaW9uIEkgaGF2ZSBldmVyIG1hZGUgIGFuZCB0aGF0IGlzIHRoZSBoYXJkZXN0IHRoaW5nIGZvciBtb3N0IHBlb3BsZSB0byB1bmRlcnN0YW5kLiAKY2VudGVyIG9mIGRydWcgbGFiIHNjYW5kYWwKV2Ugc2FpZCBzdXJlIGFuZCBnYXZlIHNvbWUgZGF0ZXMuIApIYWQgY2FuY2VyIHRyYW5zZm9ybWVkIGhpbSBpbnRvIHNvbWUgc29ydCBvZiBzdXBlcm1hbj8gSW4gYSBzZW5zZSwgeWVzLiAKVGhlIGFuc3dlcjogVGhlIG9uZSB0aGF0J3Mgd29ya2luZyAgIHRoZSBkZWFsZXIuClNob290IGZvciBhIHZpdGFtaW4gRCBsZXZlbCBpbiB0aGUgNTAgbmcvbWwgcmFuZ2UgZm9yIG9wdGltYWwgaGVhbHRoIGFuZCBib2R5IGNvbXBvc2l0aW9uLiAKQXMgZmFzdCBhcyB0aGluZ3MgY2hhbmdlIGluIEtvcmVhIEkgZG91YnQgaXQgaXMgc3RpbGwgdGhlcmUuIEJ1dCBpdCB3YXMgZXZpZGVudGx5IGEgYmlnIGFzcyBzdG9uZSB0YWJsZSBhbmQgeW91IGxheSBvbiBpdCBhbmQgdGhleSB3b3JrZWQgeW91IGluIHRocmVlIHBsYWNlcyBhdCBvbmNlLiBJdCB3YXMgcmVhbGx5IGV4cGVuc2l2ZSBmb3Igd2hhdCBJIGNvdWxkIGFmZm9yZCAoTGlrZSwgYSBtb250aCBwYXkuKSBBdCB0aGF0IHByaWNlIEkgY2FuIG9ubHkgYXNzdW1lIHNleCB3YXMgaW52b2x2ZWQgc29tZWhvdyBidXQgdGhlIGlkZWEgb2YgdGhyZWUgc2V0cyBvZiBoYW5kcyB3b3JraW5nIG15IG11c2NsZXMgb3ZlciB3YXMgcHJldHR5IGNvb2wsIGFuZCBJIHdhcyB0b28gY2hpY2tlbiB0byBnbyBmaW5kIHRocmVlIGhvb2tlcnMgYW5kIGFzayB0aGVtIHRvIGRvIGl0LiAKQW55d2F5Li4gCkl0IHdhcyBhIGJyb3RoZXIgcG9zdGluZywgaGUgYWRtaXR0ZWQgdGhhdCBoZSBhbmQgdGhlIGZhbWlseSBkaWQgbm90IGhhdmUgYSBnb29kIHJlbGF0aW9uc2hpcCB3aXRoIHRoZSBkZWNlYXNlZCBvciB0aGUgcGFydG5lciBidXQgdGhhdCB0aGUgc2lzdGVyIGRpZC4gCklmIEkgZ290IHRoYXQgZGlhZ25vc2lzLCBJIHRob3VnaHQgSSB3b3VsZCBoYXZlIGFuIGFzc2lzdGVkIHN1aWNpZGUgZG9uZSBqdXN0IHNvIGZhbWlseSBkb2VzbiBoYXZlIHRvIGRlYWwgd2l0aCBpdC4gQnV0IGluIGEgd2F5IHRoYXQga2luZCBvZiBzZWxmaXNoIHRoaW5raW5nIG9uIG15IHBhcnQuIEkgZG9uIGhhdmUgYSBjaGlsZCB0aGUgd2F5IEdsZWFzb24gZG9lcy4gSSBpbWFnaW5lIG9uY2UgeW91IGhhdmUgYSBjaGlsZCwgeW91IHdhbnQgdG8gbGl2ZSBhcyBsb25nIGFzIHBvc3NpYmxlLCByZWdhcmRsZXNzIG9mIHRoZSBjaXJjdW1zdGFuY2UuIApNb2RlbCBpbmZsdWVuY2VycyBsaWtlIEJlbGxhIEhhZGlkIGFuZCBIYWlsZXkgQmllYmVyIGhhdmUgYmVlbiBrbm93biB0byBzcG9ydCB0aGUgb2NjYXNpb25hbCBzY3J1bmNoLi4gCkFsbCBwZW9wbGUgdGhhdCBpc2dvaW5nIHRvIGJ1eSBjaGlwcyBmcm9tIFp5bmdhIHBva2VyIG11c3QgYmUgY2FyZSB0aGF0IGlzIGp1c3RjaGVlcmluZyBtb25leSBhbmQgbm90aGluZyBlbHNlLiBKdXN0IHlvdSBjYW4gYnV5IGNoaXBzIGFuZCBhZnRlcndpbiBjYW5ub3Qgc2VsbCBvdXQgaXQuIApXaGVuIHlvdSBoYXZlIGNob3NlbiB5b3VyIG1hc3NhZ2UgdHlwZSBhbmQgbGVuZ3RoLCB0aGUgcmVjZXB0aW9uaXN0IGRpcmVjdHMgeW91IHRvIGEgY29tZm9ydGFibGUgY2hhaXIgYW5kIGNhbGxzIG91dCB0aGUgYXZhaWxhYmxlIGdpcmxzIGZyb20gYmVoaW5kIGEgY3VydGFpbi4gWW91IGNhbiBzZWUgdGhlbSBhbGwgaW4gcGVyc29uLCBzbyBubyBtaXNsZWFkaW5nIGJvb2sgaGVyZS4gVGhlIGdpcmxzIHdlYXIgY3V0ZSBvdXRmaXRzIHdpdGggd2hpdGUgYmxvdXNlcyBhbmQgc2hvcnQga2lsdCBzdHlsZSBza2lydHMuIEVpZ2h0IGdpcmxzIHdlcmUgYXZhaWxhYmxlLCBzbyBub3QgYSB2YXN0IGFtb3VudCwgYnV0IHRoZXkgd2VyZSBhbGwgeW91bmcgYW5kIG5vbmUgb2YgdGhlbSB3ZXJlIHVuYXR0cmFjdGl2ZSBvciBmYXQuIFR3byBzdG9vZCBvdXQgZXNwZWNpYWxseSwgYW5kIG9uZSB3YXMgYSBrbm9ja291dCAob2J2aW91c2x5IHRoZSBvbmUgSSBjaG9zZSkuIFNvLCBub3QgYSBodWdlIHNlbGVjdGlvbiwgYnV0IGVhc3kgdG8gbWFrZSBhIGdvb2QgY2hvaWNlLjYvMTAKSW4gY29udHJhc3QsIHJlY2FsbCB0aGUgbXVjaCB0YWxrZWQgYWJvdXQgVHJvcGljYW5hIHJlZGVzaWduIHRoYXQgd2FzIGhhc3RpbHkgd2l0aGRyYXduIGZyb20gbWFya2V0IGVhcmxpZXIgbGFzdCB5ZWFyLiBUaGUgZGVzaWduIHdhcyBzbyBkaXNydXB0aXZlIHRoYXQgaXQgd2FzIG5vdCBlYXNpbHkgcmVjb2duaXphYmxlIHRvIGN1cnJlbnQgdXNlcnMsIHdobyB3ZXJlIGxpa2VseSB0byBqdXN0ICJncmFiIGFuZCBnbyIgaW4gdGhlIGp1aWNlIHJlZnJpZ2VyYXRvcnMuIEFzIGEgcmVzdWx0LCBhbGllbmF0ZWQgc2hvcHBlcnMgZGlkIGp1c3QgImdvLCIgYW5kIHRoZSBicmFuZCBsb3N0IHNpZ25pZmljYW50IHZvbHVtZSBvdmVybmlnaHQuIFVsdGltYXRlbHksIGJyYW5kcyBtdXN0IHN0cmlrZSBhIGNhcmVmdWwgYmFsYW5jZSBpbiBrZWVwaW5nIHRoZSBicmFuZCByZWNvZ25pemFibGUgdG8gY3VycmVudCB1c2VycyB3aGlsZSBhbHNvIG1ha2luZyBpdCBkaXNydXB0aXZlIHRvIG5ldyB1c2Vycy4gQXMgaXQgYXBwZWFycywgVHJvcGljYW5hIHdlaWdoZWQgY29tbXVuaWNhdGluZyB0byBuZXcgdXNlcnMgb3ZlciBkcml2aW5nIHJlY29nbml0aW9uLCBhbmQgbWlzc2VkIGFjaGlldmluZyB0aGF0IGNyaXRpY2FsIGJhbGFuY2UuCllvdSBhbGwgbmVlZCB0byByZW1lbWJlciB0aGF0IHRoaXMgaXMgY29sbGFib3JhdGl2ZSBzdG9yeXRlbGxpbmcgZmlyc3QsIGJvYXJkZ2FtZSBzZWNvbmQuIFRoZSBzdG9yeSBjcmFmdGVkIGhlcmUgaXMgcGVyaGFwcyBvbmUgb2YgdGhlIG1vcmUgbW92aW5nIGFuZCBlbnRlcnRhaW5pbmcgb25lcyBJIGNvbnN1bWVkIGluIHF1aXRlIHNvbWUgdGltZSwgYW5kIGl0IGJlY2F1c2Ugb2YgR3JpZmZpbiBzdGV3YXJkc2hpcCBvZiB0aGUgb3ZlcmFyY2hpbmcgbWV0YSBhcmMgY29tYmluZWQgZ2l2aW5nIHRoZSBwbGF5ZXJzIHByaW1hcnkgb3duZXJzaGlwIG9mIHRoZSBtaW5pIGFyY3MgbmFycmF0aXZlLkFsc28sIEkgbGF0ZSBpbnRvIGEgcmUgbGlzdGVuIGFuZCB0aGVyZSB3ZXJlIGFic29sdXRlbHkgaGludHMgYWJvdXQgdGhlIGRpdmluZSB3ZWFrZW5pbmcvY3V0IG9mZi4gCklkZW50aWZ5IGEgY2FyZCBnYW1lIHdoZXJlIHlvdSBkaXNjYXJkIHBsYXlpbmcgY2FyZHMgYmFzZWQgb24gZGllIHJvbGxzCkV2ZXJ5b25lIGlzIGRpZmZlcmVudCBhbmQgc29tZW9uZSBydW5uaW5nIGF3YXkgbWlnaHQgd29yayBvdXQgZm9yIHRoZW0gYnV0IGl0IG1pZ2h0IG5vdCBmb3IgeW91LCBJIGtub3cgaXQncyBzb21lIGhpcHB5IHNoaXQgYnV0IEkgZmVlbCBzb21lIHBlb3BsZSBnZXQgY2FsbGVkIHRvIGNlcnRhaW4gcGxhY2VzIGFuZCB0aGF0IG1pZ2h0IGJlIHlvdSB3aXRoIE9yZWdvbiwgSSB3b3VsZG4ndCBydW4gYXdheSBhcyB0aGF0IG1pZ2h0IG1ha2UgcGVvcGxlIHNhZCBidXQgSSB3b3VsZCBleHBsYWluIHRoYXQgeW91IGZlZWwgbGlrZSBPcmVnb24gaXMgd2hlcmUgeW91IHdhbnQgdG8gYmUgYW5kIGdvLCBpZiB5b3Ugb25seSBoYXZlIGVub3VnaCBtb25leSBmb3IgZ2FzIHlvdSdkIGhhdmUgdG8gYmUgdmVyeSBnb29kIGF0IHRhbGtpbmcgeW91ciB3YXkgaW50byBqb2JzIGJ1dCBpZiB5b3UgZmVlbCB5b3UgY2FuIGRvIGl0IGdvIGZvciBpdCBidXQgb2J2aW91c2x5IGl0J3MgYSBnYW1ibGUgYW5kIGV2ZXJ5IGdhbWJsZSBoYXMgdGhlIGNoYW5jZSBvZiBsb3NzIHNvIEknZCBjb25zaWRlciBpdCBjYXJlZnVsbHkKSXQgaXMgdGhlc2Ugc2FtZSBjaGFyYWN0ZXJpc3RpY3MgdGhhdCBtYWtlIHVwIHdoYXQgaXMgY29tbW9ubHkga25vd24ga25vdyBkYXlzIGFzIGEgcGxheWVyLldlIGhhdmUgcmVjZWl2ZWQgYSBsb3Qgb2YgZmVlZGJhY2sgYW5kIHF1ZXN0aW9ucyBhc2tpbmcgZm9yIG1vcmUgaW5mb3JtYXRpb24gYWJvdXQgcGVvcGxlIHdobyBhcmUgY2hhcmFjdGVyIGRpc29yZGVyZWQgYW5kIGhvdyB0byB0ZWxsIGlmIHlvdXIgcGFydG5lciBpcyBvbmUgb2YgdGhlbS4gU28gd2UgaGF2ZSBjcmVhdGVkIHRoaXMgYXJ0aWNsZSB0byBnbyBvdmVyIDEwIENvbW1vbiBTaWducyB0aGF0IHlvdXIgcGFydG5lciBpcyBDaGFyYWN0ZXIgRGlzb3JkZXJlZC5BcyBhIHByZWFtYmxlLCBtb3N0IHBlb3BsZSB0byBhIGNlcnRhaW4gZGVncmVlIGFyZSBsaWtlIHRoZSBmb2xsb3dpbmcgZXhhbXBsZXMsIGJ1dCBpcyB3aGVuIHlvdXIgcGFydG5lciBoYXMgdGhlc2UgdHJhaXRzIGRvd24gdG8gYSBzY2llbmNlLCBhbmQgaXQgaXMgbmF0dXJhbCBhbmQgZWFzeSwgZnJlcXVlbnQgYW5kIGludGVudGlvbmFsIHRoYXQncyB3aGVuIHlvdSBrbm93IHRoZXkgYXJlIGNoYXJhY3RlciBkaXNvcmRlcmVkLiBJIGdvIG92ZXIgZWFjaCBvbmUgaW4gdHVybi4xKUlUIlMgWU9VUiBGQVVMVCwgTk9UIE1ZIEZBVUxUIFRBQ1RJQzIpU1VCQ09OU0NJT1VTIElORkxVRU5DSU5HIFdPUkRTIExJS0UgIllPVSIgQU5EIiBTSE9VTEQiMylPUFBPUlRVTklUSVNUICBJTlRFTlRJQUxMWSBLRUVQUyBESVNDVVNTSU9OUyBPUEVOIFRPIEJFIEFCTEUgVE8gVVNFIFVOU09MVkVEIERJU0NVU1NJT05TIFRPIFRIRUlSIEFEVkFOVEFHRTQpWUVBSCwgWUVBSCwgV0UgV0lMTCBESVNDVVNTIFRIQVQgTEFURVIgU1lORFJPTUU1KUZBSVQgRFUgQ09NUExFVEUgRVhUUk9EQUlSRTYpV0FUQ0ggVEhFTSBQTEFZIEEgR0FNRSBUTyBTRUUgV0hBVCBUSEVSRSBQQVJBRElHTSBBQk9VVCBMSUZFIElTOClVU0VTIFNPQ0lBTCBQUkVTU1VSRSBBR0FJTlNUIFlPVTkpSEFTIE5PIFRST1VCTEUgT1IgUkVHUkVUIEFCT1VUIExZSU5HMTApIEFHUkVFIFdJVEggWU9VUiBQT0lOVCBPRiBWSUVXIEFUIEZJUlNUIFNPIFlPVSBXSUxMIE5PVCBDQVRDSCBPTiBBUyBUSEVZIENIQU5HRSBQTEFOUyAgdGhlIEhHVFYgZXhhbXBsZTEpSVRTJyBZT1VSIEZBVUxULiAKSXQncyBhIHZlcnkgbG9uZyB0b3VybmFtZW50ICAgcHJvYmFibHkgdGhlIGxvbmdlc3Qgc3RydWN0dXJlIGluIHRoZSB3b3JsZC4KSGUgYmVjYW1lIGFuIGFjdGl2ZSBib2FyZCBtZW1iZXIgb2YgVGhlIE1ha2UgQSBXaXNoIGZvdW5kYXRpb247IGFuZCB3YXMgaXRzIFByZXNpZGVudC4gClRoZXJlIG1vc3QgbGlrZWx5IHRyeWluZyB0byBzYXkgdGhhdCB0aGV5IHdhbnQgdG8gZ2V0IG91dCBvZiB0aGUgd29ybGQgYW5kIGdvIHRvIGhlYXZlbi4gVGhlIHNtb2tlIHJpbmdzIHRocm91Z2ggdHJlZXMgY291bGQgcmVmZXJlbmNlIHBsZW50eSBvZiB0aGluZ3MsIGJ1dCBpZiB3ZSBzdGF5IHdpdGggdGhlIFRvbGtpZW4gbXl0aG9sb2d5IGV4cGxhbmF0aW9uIEdhbmRhbGYgdGhlIHdpemFyZCBvZnRlbiBwdWZmZWQgc21va2UgcmluZ3Mgb24gam91cm5leXMuIEl0IG1pZ2h0IGJlIHJlZmVyZW5jaW5nIGhvdyB0aGV5IGRyZWFtIG9mIGFkdmVudHVyaW5nIHdpdGggR2FuZGFsZiAsd2hpY2gsIGZpdHMgd2l0aCB0aGUgdGhlbWUgb2YgaGVhZGluZyB0byB0aGUgdW5keWluZyBsYW5kcyB0byBmaW5kIHBlYWNlLi4gCldoaXNrZXkgUGV0ZSdzIEhvdGVsIGFuZCBDYXNpbm8gcHJvdmlkZXMgNzc3IGd1ZXN0IHJvb21zLCBvbiBzaXRlIGRpbmluZywgYW4gZW50ZXJ0YWlubWVudCBzaG93cm9vbSwgYW5kIGEgY2FzaW5vIHdpdGggdGFibGUgZ2FtZXMgYW5kIHRoZSBsYXRlc3Qgc2xvdCBtYWNoaW5lcy4gQnVmZmFsbyBCaWxscyBSZXNvcnQgYW5kIENhc2lubyBhbmQgUHJpbW0gVmFsbGV5IFJlc29ydCBhbmQgQ2FzaW5vIGFyZSBsb2NhdGVkIGp1c3QgYWNyb3NzIEludGVyc3RhdGUgMTUgZnJvbSBXaGlza2V5IFBldGUncy4gCkNlIHF1aSBmYWlzYWl0IGwgcGVuc2FpdCBvbiwgYyBsIHF1ZSBsZXMgQ2hpbm9pcyBhcHBlbGxlbnQgQ2ggb3UsIGNvbW1lIG5vdXMgbCBkaXQgcGx1cyBoYXV0LCBsYSBGb3JjZSBkZSBWaWUuIExhIG1hbGFkaWUgdGFpdCBjb25zaWRyZSBjb21tZSB1biBibG9jYWdlIGRlIGNldHRlIG5lcmdpZSBxdWksIHBvdXIgdW5lIHJhaXNvbiAgWCAsIHMgIGNvaW5jZSAgcXVlbHF1ZSBwYXJ0LiAKSXQgd29uJ3QgYWx3YXlzIGJlIHBlcmZlY3QgYW5kIHRoYXQgaXMgbm8gZXhjdXNlIHRvIGJyZWFrIHRoYXQgdm93LiBTb21lIHllYXJzIGl0J3MgbWUgd2l0aCB0aGUgbG93IHNleCBkcml2ZSAoZ29pbmcgdGhyb3VnaCA0IHByZWduYW5jaWVzIHdpbGwgZG8gdGhhdCkgb3RoZXIgeWVhcnMgaXQgaXMgaGltIHdpdGggdGhlIGxvdyBzZXggZHJpdmUuIApNb3N0IHBlb3BsZSB0ZW5kIHRvIGNhcnJ5IHN0cmVzcyBpbiB0aGUgbXVzY2xlcyB0aGF0IGVsZXZhdGUgdGhlIHNob3VsZGVyIGJsYWRlcy4gCkhvd2V2ZXIsIHlvdSB3aWxsIGRpc2NvdmVyIGEgc3RyYXRlZ3kgdG8gb3ZlcmNvbWUgdGhlIHJpZ2dlZCBwb2tlciBzaXRlcywgYW5kIHVsdGltYXRlbHkgbGVhcm4gaG93IHRvIHBsYXkgb25saW5lIHdpdGhvdXQgYmxvb2QgbG9zcyB5b3VyIGVudGlyZSBwb2tlciBGcmVuY2ggZnJpZXMgYXdheSBhbmQgb2ZmIHRvIHdoYXQgYXBwZWFycyBsaWtlIGRvbmtleSBwb2tlciBoZWF2ZW4uIFRoZSByZW1lZHkgaXMgYWx3YXlzIHRvIHR1cm4gb3V0IHRvIGJlIGluZm9ybWVkIGluIGhvdyB5b3UgY2FuIHBlcmZvcm0gcG9rZXIgb25saW5lIHdoaWxlIHVzaW5nIHN0cmF0ZWd5IHNwZWNpZmljIHRvIGRlZmVhdGluZyB0aGUgcG9rZXIgcHJvZ3JhbSBjb2RlLiAKU2luY2UgcG9rZXIgaXMgc3VjaCBhIHBvcHVsYXIgZ2FtZSBodW5kcmVkcyBvZiBwZW9wbGUgZW5qb3ksIGl0IHdhcyBldmlkZW50IHRoYXQgVGV4YXMgSG9sZCBFbScgdGFibGVzIHdlcmUgZ29pbmcgdG8gYmUgdGhlIG1haW4gc291cmNlIG9mIG91ciBlbnRlcnRhaW5tZW50LiAKVGhpcyBpcyBub3QgYSBzdG9yeSwgdGhvdWdoLCBvZiBhIGNvbiwgb3IgYSBzY2FtLCBvciBhbiBpbnNpZGUgam9iLiAKUmVtZW1iZXIgICB5b3Ugd2lsbCBhbHdheXMgdGhpbmsgeW91J3JlIHdheSBoYWlyaWVyIHRoYW4gd2hhdCB5b3UgYXJlLCBtb3N0IHBlb3BsZSB3b3VsZG4ndCBub3RpY2UgaXQgYXQgYWxsLiBJZiB5b3UgYXJlIHZlcnkgdW5jb21mb3J0YWJsZSwgbG9vayBpbnRvIGxhc2VyIGhhaXIgcmVtb3ZhbCBvcHRpb25zIGFzIHRoYXQgaXMgYSBsb25nIHRlcm0gc29sdXRpb24uIEl0IGNhbiBiZSBleHBlbnNpdmUgYnV0IGl0IGlzIGVmZmVjdGl2ZS4gCkkgdHJhY2sgbXkgY2Fsb3JpZXMgdG8gbWFrZSBzdXJlIEkgZWF0aW5nIGFwcHJvcHJpYXRlbHkuIApEZWFyIEd1ZXN0LCBXZSBhcmUgZ2xhZCB0byBrbm93IHlvdSBoYWQgYW4gYW1hemluZyB0aW1lIHN0YXlpbmcgYXQgb3VyIGhvdGVsIHdpdGggeW91ciBmYW1pbHkuIFdlIHNvIGdsYWQgeW91IHdlcmUgaGFwcHkgd2l0aCB0aGUgc3RhZmYsIHNlcnZpY2UsIGxvY2F0aW9uIGFuZCBmYWNpbGl0aWVzLiBXZSBncmVhdGx5IGFwcHJlY2lhdGUgYWxsIHlvdXIga2luZCB3b3JkcyBhbmQgd2lsbCBiZSBzdXJlIHRvIHBhc3MgYWxvbmcgeW91ciB3b25kZXJmdWwgY29tbWVudHMgdG8gb3VyIG1hbmFnZW1lbnQgdGVhbSB0aGVyZS4gRG8gbm90IGhlc2l0YXRlIHRvIGNvbnRhY3QgdXMgYmVmb3JlaGFuZCBpZiB5b3UgZGVjaWRlIHRvIHJldHVybi4gV2Ugd2lsbCBiZSBwbGVhc2VkIHRvIHNlcnZlIHlvdSBhZ2Fpbi4gS2luZCByZWdhcmRzLCBTaXJlbmlzIEhvdGVscyBSZXNvcnRzCk11c2NsZXMgd29ya2VkOiBBbGwgb2YgdGhlbS4gCllvdSBtYXkgd2FudCB0byB0aGluayB0aGF0IGNsYWltaW5nIHRoZSBzY2llbnRpZmljIG1ldGhvZCwgb3IgdGhlIGh1bWFuIG1pbmQsIG9yIHdoYXRldmVyLCBpcyBsaW1pdGVkIGRvZXNuIGludm9sdmUgYmVsaWVmIGluIHN1cGVybmF0dXJhbCBiZWluZ3MsIGJ1dCBpdCBkb2VzLiBZb3UgY2Fubm90IGJlbGlldmUgdGhhdCBhbnl0aGluZyBleGlzdHMgYmV5b25kIHRoZSByZWFsbSBvZiBodW1hbiBjb21wcmVoZW5zaW9uIHdpdGhvdXQgYSBsZWFwIG9mIGZhaXRoIGJhc2VkIHVwb24gbm90aGluZyByYXRpb25hbC4gClRoZSBjb25zaXN0cyBvZiBhIHNlcmllcyBvZiBmYWNlIGdyaWRzIGFuZCBlYWNoIGdyaWQgaXMgY29uc3RydWN0ZWQgc28gdGhhdCBvbmUgZmFjZSBpcyBmYW1pbGlhciB0byB0aGUgdXNlciwgd2hpbHN0IGFsbCBvdGhlciBmYWNlcyBhcmUgdW5mYW1pbGlhci4gQXV0aGVudGljYXRpb24gaXMgYSBtYXR0ZXIgb2Ygc2ltcGx5IHRvdWNoaW5nIHRoZSBmYW1pbGlhciBmYWNlIGluIGVhY2ggZ3JpZC4gRm9yIHRoZSBsZWdpdGltYXRlIHVzZXIsIHRoaXMgaXMgYSB0cml2aWFsIHRhc2ssIGFzIHRoZSBmYW1pbGlhciBmYWNlIHN0YW5kcyBvdXQgZnJvbSB0aGUgb3RoZXJzLiBIb3dldmVyLCBhIGZyYXVkc3RlciBsb29raW5nIGF0IHRoZSBzYW1lIGdyaWQgaGl0cyBhIHByb2JsZW0gb2YgdGhlIGZhY2VzIHN0YW5kIG91dC4KTWFjayBjaXRlcyBvbmx5IHR3byByZWNlbnQgc2FsZXMgaW4gTWFuaGF0dGFuIG9mIHJlYWwgc2lnbmlmaWNhbmNlOiBXb3JsZHdpZGUgUGxhemEgYW5kIHRoZSBvbGQgQmVydGVsc21hbm4gYnVpbGRpbmcsIDE1ODUgQnJvYWR3YXkuIApRdWVsIGVzdCBub3RyZSByYXBwb3J0IGF2ZWMgbGVzIGFuaW1hdXg/IE4nYXZvbnMgbm91cyBwYXMgZGNvdXZlcnQgcXUnaWxzIHBldXZlbnQgdHJlIG5vcyBhbWlzIGV0IG5vcyBwbHVzIGdyYW5kcyBhaWRlcyBkZXMgcXVlIG5vdXMgbGVzIGFwcHJvY2hvbnMgYXZlYyBvdXZlcnR1cmUsIHJlc3BlY3QgZXQgYXR0ZW50aW9uPwpJZiB5b3Ugc3BlbmQgYSBsb3Qgb2YgdGltZSBvbiB5b3VyIGZlZXQsIGJlaGluZCBhIGNvbXB1dGVyIG9yIGdpdmUgcHJlc2VudGF0aW9ucywgSSBzdXJlIEkgY2FuIGRldmVsb3AgYSB0aGVyYXB5IHJvdXRpbmUgdG8gc3VpdCB5b3UuV2l0aCBteSBwYXNzaW9uIHRvIGhlbHAgcmFpc2UgYXdhcmVuZXNzIG9mIHRoZSBpbXBvcnRhbmNlIG9mIHBvc3R1cmUsIEkgY3VycmVudGx5IHRlYWNoIFVuaXZlcnNpdHkgU3RhZmYgUGlsYXRlcyBjbGFzc2VzIGF0IGJvdGggU3QgTHVrZXMgYW5kIFN0cmVhdGhhbS4gUGxlYXNlIHNlZSBTdGFmZkxpZmUgc3BlY2lhbCBpbnRlcmVzdCBncm91cHMgZm9yIGRldGFpbHMgYW5kIGJvb2tpbmcuIkkgaGF2ZSBiZWVuIFJlYmVjY2EncyBjbGllbnQgZm9yIG5lYXJseSBhIHllYXIgbm93LiAKQnV0IGhlIG5ldmVyIGRpZC4gSGUgZmluYWxseSB3b2tlIHVwIG9uZSBkYXkgYnV0IGNvdWxkbiBzcGVhay4gCkhlIGRpZG4gc2VlIG1lLi4gCkFmcmljYSwgU291dGggQXJhYmlhLCBhbmQgSW5kaWEgc3VwcGxpZWQgbGVtb25ncmFzcywgZ2luZ2VyLCBhbmQgc3Bpa2VuYXJkLCB0aGUgcmhpem9tZSBvZiB3aGljaCBoYXMgYW4gZXhvdGljIGZyYWdyYW5jZS4gQ2hpbmEgaW1wb3J0ZWQgamFzbWluZSBzY2VudGVkIHNlc2FtZSBvaWwgZnJvbSBJbmRpYSBhbmQgUGVyc2lhLCByb3NlIHdhdGVyIHZpYSB0aGUgU2lsayBSb3V0ZSwgYW5kIGV2ZW50dWFsbHksIEluZG9uZXNpYW4gYXJvbWF0aWNzOiBjbG92ZXMsIGd1bSBiZW56b2luLCBnaW5nZXIsIG51dG1lZywgYW5kIHBhdGNob3VsaS4gCkhIUCBDbGluaWNhbCBBc3Npc3RhbnQgUHJvZmVzc29yIGFuZCBudXRyaXRpb24gcHJvZ3JhbSBmYWN1bHR5IENsYXVkaWEgU2NvdHQgaGFzIGJlZW4gYXdhcmRlZCB0aGUgRGlzdGluZ3Vpc2hlZCBGYWN1bHR5IFNjaG9sYXIgQXdhcmQgZm9yIDIwMTggYnkgdGhlIFVIIGFuZCBHZW5kZXIgUmVzb3VyY2UgQ2VudGVyIGluIHRoZSBub24gdGVudXJlIHRyYWNrIGZhY3VsdHkgY2F0ZWdvcnkuIFRoZSBXb21lbiBhbmQgR2VuZGVyIFJlc291cmNlIENlbnRlciAoV0dSQykgQXdhcmRzIHJlY29nbml6ZSBVSCBmYWN1bHR5IHdobyBoYXZlIG1hZGUgc2lnbmlmaWNhbnQgY29udHJpYnV0aW9ucyB0byB0ZWFjaGluZywgcmVzZWFyY2gsIGFuZCBzZXJ2aWNlLCBpbmNsdWRpbmcgc2VydmljZSB0byB3b21lbiBhbmQgYWR2YW5jaW5nIGdlbmRlciBlcXVpdHkgb24gY2FtcHVzLi4gCkJ1dCBoYXZpbmcgYWRtaXR0ZWQgdGhhdCB5b3Ugd29uIHNwZW5kIGEgbG90IG9mIHRpbWUgc3R1ZHlpbmcgb3IgcHJhY3RpY2luZyBhIGdhbWUgbWFrZXMgdGhlIHRhc2sgb2YgY2hvb3NpbmcgdGhlIHJpZ2h0IGJpbmdvIGdhbWUgZm9yIHlvdSBhIG11Y2ggZWFzaWVyIHRhc2suIApHZXR0aW5nIHlvdXIgb3duIG1vZGVtLCBvbiB0aGUgb3RoZXIgaGFuZCwgcmVhbGx5IGRlcGVuZHMgb24gd2hhdCB5b3UgcHJvdmlkZXIgc3VwcG9ydHMgYW5kIHdoYXQgc3BlZWRzIHlvdSdyZSBnZXR0aW5nIGZyb20gdGhlbSBhcyBkaWZmZXJlbnQgbW9kZW1zIHN1cHBvcnQgdXAgdG8gYSBjZXJ0YWluIHNwZWVkIGFuZCBhIGNlcnRhaW4gYW1vdW50IG9mIHNpbXVsdGFuZW91cyBjb25uZWN0aW9ucy4KUGVvcGxlIGFjcm9zcyB0aGUgZ2xvYmUgYmVnYW4gcm9sbGluZyBvdXQgb2YgYmVkLCB0dXJuaW5nIG9uIHRoZSBjb21wdXRlciwgYW5kIGxvZ2dpbmcgb24gdG8gYW4gb25saW5lIGNhc2luby4KVGhlIHdvcnN0IHBhcnQgd2FzIHByeWluZyB0aGUgZG9vciBvZmY7IHlvdSBhbHdheXMgZmVlbCBsaWtlIHlvdSBnb2luZyB0byBicmVhayBzb21ldGhpbmcgKGJ1dCB5b3Ugd29uIFRoZSBvbmx5IHRoaW5nIHlvdSBtYXkgYnJlYWsgaXMgYSBkb29yIGNsaXAsIHdoaWNoIGlzIHByZXR0eSBjaGVhcCB0byByZXBsYWNlLiBJIHJlY29tbWVuZCBidXlpbmcgMiBvciAzIGV4dHJhcyBhbmQgaGF2ZSB0aGVtIHNpdHRpbmcgb24gaGFuZCBqdXN0IGluIGNhc2UuIEFsc28sIHdoZW4gaXQgY29tZXMgdGltZSB0byBwdWxsIHRoZSBPRU0gbWlycm9yIG9mZiwgdGllIGEgc3RyaW5nIHRvIHRoZSB3aXJpbmchIFRoZW4gd2hlbiBpdCBvdXQsIHRpZSB0aGF0IHN0cmluZyB0byB0aGUgbmV3IHdpcmluZyBvbiB0aGUgcmVwbGFjZW1lbnQgbWlycm9yIGFuZCBqdXN0IHB1bGwgaXQgdGhyb3VnaCEgVGhleSBkb24gZXhwbGFpbiB0aGF0IGluIHRoZSB2aWRlbyBsaW5rZWQgYWJvdmUsIHRoZXkganVzdCB1c2UgYSB3aXJlIGdyYWJiZXIsIHdoaWNoIGlzIGFub3RoZXIgb3B0aW9uIGJ1dCBJIHN0aWxsIHJlY29tbWVuZCBzdHJpbmcuIApSaWNrIFNueWRlciBmb3IgY29uc2lkZXJhdGlvbi4gCk92ZXJ2aWV3IGZvciBiYXRtYW5idXJ5CjE1IHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnbwoiSXQgd2FzIGEgdmVyeSB0ZW5zZSB0aW1lIGZvciBtZS4gTXkgZmFtaWx5J3MgaGlkaW5nLiBJJ20gaGlkaW5nLCAiIHNoZSBzYWlkLiAKVGhlcmUgaXMgYSBnb29kIGV4ZXJjaXNlIGhhbmdpbmcgZnJvbSBhIGJhciB5b3Ugb25seSBkbyB0aGUgZmlyc3QgcGFydCBvZiBhIHB1bGwgdXAsIGRyb3BwaW5nIHRoZSBzaG91bGRlcnMgcmVhbGx5IHRoaWdodC4gCkl0J3MgYSBiaXQgc2ltcGxpc3RpYyBhbmQgdGhlcmUgd2lsbCBhbHdheXMgYmUgY3JpdGljcyBzaG91dGluZyAnVG9vIHNob3J0ISBUb28gbG9uZyEgVG9vIHRpZ2h0ISBUb28gc2hhcGVsZXNzISBQZXJzb25hbGx5LCBJIHdvdWxkIG5ldmVyIHdlYXIgdGhhdCBldGMuJyBhbmQgb3RoZXJzIHdvdWxkIGdvICd0aGlzIGlzIHBlcmZlY3QhIFNoZSB3ZWFycyBpdCBzbyB3ZWxsLCBJIGZlZWwgaW5zcGlyZWQsIEkgbWlnaHQgdHJ5IGl0Jy4gU28gb25jZSB5b3UgZmluZCB5b3VyIHdvb2wsIGp1c3Qgd2VhciBpdCEuIApJZiB0aGUgUlNMIHdlcmUgZmFpciBkaW5rdW0sIHRoZXkgd291bGQgZ2l2ZSB0aGUgYm93bGluZyBjbHViIGJ1aWxkaW5nIHRvIHRoZSBDb3Jvd2EgU2hpcmUgKHRoZSBjb21tdW5pdHkpIGZvciBib3dsaW5nIGFjdGl2aXRpZXMgYW5kIGNvbW11bml0eSBwdXJwb3Nlcy4gVGhlIGNvbW11bml0eSB3b3VsZCB0aGVuIGFsbG93IHRoZSBSU0wgQm93bGluZyBDbHViIHRvIG9wZXJhdGUgZnJvbSB0aGVzZSBwcmVtaXNlcy4gCkFub3RoZXIgaW50ZXJlc3RpbmcgdGhpbmcgdGhhdCBoYXBwZW5lZCB0byBtZSBvbmNlLCB3YXMgSSB3YXMgbGF5aW5nIGRvd24gZHVyaW5nIHRoZSBkYXkgYW5kIHNvcnQgb2YganVzdCBzdGFyaW5nIGF0IG15IHdhbGwuIE15IHN1YmNvbnNjaW91c25lc3Mga2lja2VkIGludG8gZ2VhciBldmVuIHRob3VnaCBJIHdhc24gZXZlbiB0cnlpbmcgdG8gZ28gdG8gc2xlZXAuIFNvLCBvdXQgb2Ygbm93aGVyZSwgYSBjYXJ0b29uaXNoIGdyZWVuIHdpdGNoZXMgaGVhZCBhcHBlYXJlZCB0byBiZSBmbG9hdGluZyBpbiBmcm9udCBvZiBtZS4gSSBoYWQgYSBtb21lbnRhcnkgYW5kIHRoZW4gdGhlIGhhbGx1Y2luYXRpb24gd2VudCBhd2F5LgpGb3IgZXhhbXBsZSwgdGhlIGRvd25sb2FkIG9mIHRoZSB3aG9sZSBvciBtYXRlcmlhbCBwYXJ0cyBvZiBhbnkgd29yayBvciBkYXRhYmFzZSBpcyBwcm9oaWJpdGVkLiAKSSB3b3VsZCBzYXkgbW9yZSBhYm91dCBBIGJ1dCBJIGRvbiB3YW50IHRoZSBzYWx0IHRvIGJvaWwgb3Zlci4gQXQgdGhlIHRpbWUgSSB3YXMgZmluZSB3aXRoIE4gY2hvaWNlIGJlY2F1c2UgSSBrbmV3IHRoZXkgd291bGQgaGF2ZSBmdW4gYW5kIHRoZXJlIHdhcyBvYnZpb3VzbHkgbm8gd2F5IEJldGhlc2RhIHdvdWxkIGFubm91bmNlIGFueXRoaW5nIG1ham9yIGxpa2UgRmFsbG91dC4gTGlrZSBjb21lIG9uLCB0aGF0IGlzIHN0aWxsIGEgZmV3IHllYXJzIGF3YXkgb2YgY291cnNlLgpIb3cgbWFueSBhY2VzIG9mIHNwYWRlcyBpbiBhIHBhY2sgb2YgY2FyZHMKTm9yd2VnaWFuIFBlYXJsJ3MgU291dGggUGFjaWZpYyBTcGEsIG9wZXJhdGVkIGJ5IE1hbmRhcmEgU3BhcywgaXMgdGhlIHBlcmZlY3QgcGxhY2UgdG8gdW53aW5kIGFuZCBnZXQgcGFtcGVyZWQuIFRoZSBzcGEgZmVhdHVyZXMgMjAgdHJlYXRtZW50IHJvb21zLCAzIG9mIHdoaWNoIGFyZSBkZXNpZ25lZCBmb3IgY291cGxlcyBhbmQgb2ZmZXJzIGV2ZXJ5dGhpbmcgZnJvbSBtYXNzYWdlcyBhbmQgbWFuaWN1cmVzLCB0byB0ZWV0aCBicmlnaHRlbmluZyBhbmQgQm90b3ghClBpY29uZWVrcyAgMTkgcG9pbnRzICBzdWJtaXR0ZWQgMiB5ZWFycyBhZ28KQXMgYSByZXN1bHQsIHZlbnVlcyBsaWtlIHRoZSBTZW1pbm9sZSBIYXJkIFJvY2ssIHdoaWNoIGlzIGxvY2F0ZWQgb24gYSBTZW1pbm9sZSBJbmRpYW4gcmVzZXJ2YXRpb24gYW5kIG9wZXJhdGVkIGJ5IHRoZSB0cmliZSwgYXJlIHN1ZGRlbmx5IG1hZ25ldHMgZm9yIHByb2Zlc3Npb25hbCBwb2tlciBwbGF5ZXJzIGxpa2UgTWljaGFlbCAidGhlIEdyaW5kZXIiIE1penJhY2hpLCBvbmUgb2YgdGhlIGJlc3Qga25vd24gcG9rZXIgZmFjZXMgaW4gRmxvcmlkYSwgd2hvIGNhbGxzIHRoZSBzdGF0ZSdzIG5ldyBubyBtYXhpbXVtIHJ1bGVzICJhIGRyZWFtIGNvbWUgdHJ1ZS4gVGhlcmUncyBub3RoaW5nIGJldHRlciB0aGFuIHBsYXlpbmcgcG9rZXIgd2l0aCBiZWFjaGVzLiIgVGhlIFdvcmxkIFBva2VyIFRvdXIgKFdQVCkgdGhlIHNlcmllcyBvZiB0ZWxldmlzZWQgcG9rZXIgdG91cm5hbWVudHMgdGhhdCBoZWxwZWQgbGF1bmNoIHRoZSBiaWcgdGltZSBwb2tlciBib29tIGluIDIwMDIgYWdyZWVzLiAKVGhlIHR1cm4gaXMgYSA3LiAKSSBhY3R1YWxseSB0aGluayB0aGlzIGNvdWxkIGJlIGEgdXNlZnVsIHRvb2wgaW4gaWRlbnRpZnlpbmcgbGVnaXRpbWF0ZSBjb25zcGlyYWNpZXMuIApEdXRjaCByZXNlYXJjaGVycyB3YW50IHRvIGVuY291cmFnZSBwYXJlbnRzIG9mIGtpZHMgd2l0aCBhdHRlbnRpb24gZGVmaWNpdCBoeXBlcmFjdGl2aXR5IGRpc29yZGVyIHRvIHRyeSBhIHNwZWNpYWwgZGlldCB0byBzZWUgaWYgc29tZSBvZiB0aGUgc3ltcHRvbXMgbWF5IGJlIGxpbmtlZCB0byBjZXJ0YWluIGZvb2RzLkl0IGNhbGxlZCB0aGUgUmVzdHJpY3RlZCBFbGltaW5hdGlvbiBEaWV0IChSRUQpIGFuZCBtYXkgcmVkdWNlIG9yIGVsaW1pbmF0ZSBBREhEIHN5bXB0b21zLkluIGEgc3R1ZHkgcHVibGlzaGVkIGluIHRoZSBNZWRpY2FsIEpvdXJuYWwgTGFuY2V0IChzZWUgYmVsb3cpLCA3OCBwZXJjZW50IG9mIGtpZHMgd2hvIHN0YXllZCBvbiB0aGUgZGlldCBmb3IgNSB3ZWVrcyBoYWQgZmV3ZXIgc3ltcHRvbXMgYW5kIHNvbWUgd2VyZSBhYmxlIHRvIHN0b3AgdGFraW5nIG1lZGljYXRpb24uIFdPVyFSZXNlYXJjaGVycyBhdCB0aGUgQURIRCBSZXNlYXJjaCBDZW50cmUgaW4gRWluZGhvdmVuLCB0aGUgTmV0aGVybGFuZHMsIGRpdmlkZWQgMTAwIGtpZHMgd2l0aCBBREhEIChhZ2VzIDQgdG8gOCApIGludG8gdHdvIGdyb3Vwcy5PbmUgZ3JvdXAgYXRlIGEgaGVhbHRoeSBkaWV0IGZvciA1IHdlZWtzIHdoaWxlIHRoZSBvdGhlciBncm91cCBhdGUgdGhlIFJlc3RyaWN0ZWQgRWxpbWluYXRpb24gRGlldC5UaGUgUkVEIGRpZXQgZG9lcyBub3QgYWxsb3cgZm9yIHByb2Nlc3NlZCBmb29kcy4gClBsYXlpbmcgQ2FyZCBUYXR0b28gRGVzaWduc1BsYXlpbmcgY2FyZHMgbWFrZSBmb3Igc29tZSBncmVhdCB0YXR0b29zIGFuZCBjYW4gY29tZSBpbiBhIHZhcmlldHkgb2Ygc3R5bGVzLiBUaGV5IGNhbiByZXByZXNlbnQgb25lJ3MgbG92ZSBhbmQgcGFzc2lvbiBmb3IgZ2FtYmxpbmcgYW5kIGNhbiBhbHNvIHN5bWJvbGl6ZSBhIG51bWJlciBvZiBvdGhlciB0aGluZ3MuIApPaCByZWFsbHk/IFNvIGRhdGluZy9yZWxhdGlvbnNoaXBzIGRvZXNuIGludm9sdmUgYnV5aW5nIGRpbm5lciwgZHJpbmtzLCBnaWZ0cywgdGlja2V0cyB0byBzaG93cywgY2xvdGhlcywgZmxvd2VycywgamV3ZWxyeT8gT3IgcGVyaGFwcyB5b3VyIG1vc3QgdmFsdWFibGUgYXNzZXQgb2YgYWxsLCB0aW1lPyBQZXJoYXBzIHlvdSBhcmUgYSBncmFkdWF0ZSBvZiBMZXlraXMgMTAxIGFuZCBoYXZlIGxlYXJuZWQgdG8gc3BlbmQgbWluaW1hbCBjYXNoLiBCdXQgZXZlbiB0aGVuLCB5b3Ugc3RpbGwgc3BlbmRpbmcgbW9uZXkuIApUaGUgdG93biBvZiBQZWxoYW0sIE9udC4sIHdoZXJlIElyZWxhbmQgbGl2ZXMgICBhbiBob3VyIGF3YXkgZnJvbSBUb3JvbnRvLCBuZWFyIE5pYWdhcmEgUmVnaW9uIHdpbmUgY291bnRyeSAgIGhhcyBiZWNvbWUgYSBob3RiZWQgZm9yIGxlZ2FsIGNvbW1lcmNpYWwgcG90IGdyb3dlcnMgd2hvIGhhdmUgc25hcHBlZCB1cCBncmVlbmhvdXNlcyBhbmQgY29udmVydGVkIHRoZW0gZnJvbSBmbG93ZXJzIGFuZCB2ZWdldGFibGVzIHRvIHRoZSBtb3JlIGx1Y3JhdGl2ZSBjcm9wLgpTYWRseSBwZW9wbGUgYnJvdWdodCB1cCBpbiB0cmFkaXRpb25hbCBDaGluZXNlIGZhbWlsaWVzIHRlbmQgdG8gYmUgc2VjcmV0bHkgcmFjaXN0LiBJIGhhdmUgYSBmcmllbmQgd2hvIEkgdGhvdWdodCB3YXMgcmVhbGx5IG5pY2UgdW50aWwgSSBoZWFyZCBoZXIgbWFraW5nIGEgdmVyeSByYWNpc3QgcmVtYXJrIG9uZSBkYXksIEkgd2FzIHNvIGFnaGFzdCBhbmQgYXNrZWQgaGVyIHdoZXJlIHNoZSBoZWFyZCB0aGF0IGZyb20uIE9mIGNvdXJzZSwgaXQgd2FzIGhlciBwYXJlbnRzLi4gCk15IGRuc21hc3EgY29uZiBmaWxlIG5lZWRzIG9uZSBsaW5lIGZvciBlYWNoIG9mIHRob3NlIHRvIGJsb2NrIGV2ZXJ5IHNpbmdsZSBvbmUgb2YgdGhlbSB0aGF0IGRvZXMgb3IgY2FuIGV4aXN0LiAKKFRoZXkndmUgYWxzbyBtYWRlIGRvbmF0aW9ucyBvbiB0aGUgREwuIEdvb2QgZm9say4pLiAKVGhlIGJ1bmRsZSBvZiBzdGlja3Mgam9rZSBhbmQgZiBzbHVyIHNsaXAgdXBzIGFyZSBqdXN0IHBhcnRpY3VsYXJseSBub3RhYmxlIGJlY2F1c2UgdW5saWtlIGdheSBsaXNwcyBvciB0aGUgb2NjYXNpb25hbCBubyBob21vIGpva2UsIGl0IHNvbWV0aGluZyB0aGF0IGEgZ29vZCBwb3J0aW9uIG9mIHBlb3BsZSBhZ3JlZSBpcyBUb28gRmFyIG5vdyBpbiB3YXlzIG90aGVyIHRoaW5ncyBhcmVuIHlldC4gClRoZSBkZWFsZXIgbGFpZCBkb3duIHRoZSBmaW5hbCBjYXJkICAgInRoZSByaXZlciIgICBhbmQsIHNpbmNlIHRoZSBzdHJhaWdodCBJIHdhcyB3b3JraW5nIGZvciBuZXZlciBhcHBlYXJlZCwgSSBoYWQgb25seSBhIHBhaXIgb2YgamFja3MuIApBbmQganVzdCBrbm9ja2luZyBhdCB0aGUgZG9vciBhcyBhIGNvbXBsZXRlIHN0cmFuZ2VyIGlzIGFwcGFsbGluZy4gClRoZSBmYW1pbGllcyBhbmQgYWR2b2NhdGVzIG9mIGNoaWxkcmVuIHdpdGggYXV0aXNtIHNheSBhIG5ldyBwcm9ncmFtIE1hY0xlb2QgaXMgdXNoZXJpbmcgaW4gd2lsbCBtZWFuIG1hbnkga2lkcyB3b24ndCBnZXQgZW5vdWdoIGZ1bmRpbmcgdG8gcGF5IGZvciBwcm9wZXIgbGV2ZWxzIG9mIHRoZXJhcHkuCk9oIGZvciBzdXJlLiBJIGdldCBqZWFsb3VzIGFuZCBpbnNlY3VyZSBhbmQgYWxsIGFyb3VuZCBoYXZlIGEgcmVhbGx5IGJhZCByZWFjdGlvbiB0byBpdC4gCkkgdGhpbmsgYWJvdXQgdGhhdCBtb21lbnQgYSBsb3QuIFRoZXJlIGlzIG1vcmUgdG8gdGhpcyBnYW1lIHRoYW4gcGxheWluZyBhIGdhbWUgZm9yIG1vbmV5LiAKR29vZCBtb3JuaW5nIHRvIERyLiBKZW4gQXNodG9uLiBHb29kIG1vcm5pbmcuIApSaWdodCBub3cgdGhvdWdoIHRoZXJlIGFyZSBtYW55IGZyZXNoIGdyYWR1YXRlcyBkb2luZyBpdCBmb3IgYSBsaXZpbmcuIi4gCiJXaXIgZnJldWVuIHVucyBzZWhyIGF1ZiBkaWUgRmx1bW1pIE9wZW4uIERhc3MgSmFuIHVuZCBMdWthcyBpaHJlIElkZWUgbWl0IGRlbiBSb2NrZXQgQmVhbnMgdW1zZXR6ZW4gd29sbGVuLCBtYWNodCB1bnMgbmF0dXJsaWNoIHN0b2x6Iiwgc28gQW5qYSBSbGVyLCBDcmVhdGl2ZSBEaXJlY3RvciB2b24gUm9ja2V0IEJlYW5zIFRWLiAKV2UgY2FuIGZpZ2h0IGF0IHRoZSBib3JkZXJzICBteSBiYWQgYmVoYXZpb3IgaXMgYmV0dGVyIHRoYW4geW91ciBiYWQgYmVoYXZpb3IgIGtpbmsgaXMgYmV0dGVyIHRoYW4gY29tbWVyY2lhbCwgZm9yIGV4YW1wbGUgIGJ1dCB0aGUgdHJ1dGggaXMgb3VyIHNleCBpcyBkb29tZWQgdG8gYmVpbmcgcmVwcmVoZW5zaWJsZS4uIApLaW0gYWxzbyB0b29rIGEgbW9tZW50IHRvIHJlZmxlY3Qgb24gZW50ZXJpbmcgU2Vhc29uIDE1IG9mIEtlZXBpbmcgVXAgV2l0aCB0aGUgS2FyZGFzaGlhbnMuIFdoZW4gYXNrZWQgYWJvdXQgaGVyIGZhdm9yaXRlIGZhbWlseSBtZW1vcnksIEtpbSBzYWlkIHNoZSBoYWQgYmVlbiByZW1pbmlzY2luZyB3aXRoIFJvYiBLYXJkYXNoaWFuIGFib3V0IHRoZSBmYW1pbHkncyB0cmlwIHRvIEJvcmEgQm9yYS4KQm90aCBoYXZlIGZyaWVuZHMsIGFyZSBnZW5lcmFsbHkgY29uc2lkZXJhdGUgb2Ygb3RoZXJzLCBhbmQgYXJlIHdlbGwgYmVoYXZlZCBpbiBwdWJsaWMuLiAKSW4gc29tZSBjYXNlcywgeW91IG1heSBoYXZlIG9ubHkgMiBvdXRzLCBtZWFuaW5nIHlvdXIgY2hhbmNlcyBvZiBhdHRhaW5pbmcgYSBkZXNpcmFibGUgaGFuZCBpcyByZW1vdGUuIFVuZGVyIGlkZWFsIGNpcmN1bXN0YW5jZXMsIDEgb2YgMTUgZGlmZmVyZW50IG91dHMgY2FuIGNvbXBsZXRlIGEgc3Ryb25nIGhhbmQuIApXaGF0IENFUyAyMDE3IEhhcyBUbyBPZmZlciBGb3IgVGVjaCBMb3ZlcnNUaGUgTmV3ZXN0IFRlY2ggQXQgVGhlVGhlIEludGVybmF0aW9uYWwgQ29uc3VtZXIgRWxlY3Ryb25pY3MgU2hvdyAoQ0VTIDIwMTcpQ29zbW8gQ29ubmVjdGVkLCBhIHJlYXIgYnJha2UgbGlnaHQgd2hpY2ggY2FuIGJlIGF0dGFjaGVkIHRvIHRoZSBiYWNrIG9mIGFueSBoZWxtZXQgYW5kIGFsZXJ0IGVtZXJnZW5jZSBzZXJ2aWNlcyBpbiBldmVudCBvZiBhY2NpZGVudCB0aHJvdWdoIGdlb2xvY2F0aW9uIGFwcCwgaXMgc2VlbiBkdXJpbmcgYSBwcmVzcyBldmVudCBmb3IgQ0VTIDIwMTcuIChQaG90byBieSBBbGV4IFdvbmcvR2V0dHkgSW1hZ2VzKQpOaWNlIHRvIHNlZSB0aGUgZ2lybHMgaW4gcGVyc29uLCB0aG91Z2gsIHJhdGhlciB0aGFuIGJlIHNob3duIGEgYm9vay4uIApJIHNlZSB0aGVyYXB5IGFzIGEgcGVyc29uYWwgdHJhaW5lciBmb3IgdGhlIG1pbmQuLiAKSSBhZGQ6CkhvdyBUbyBBY2Nlc3NTdHVkZW50cyBzaG91bGQgbWFrZSBhbiBhcHBvaW50bWVudCB3aXRoIHRoZSBhcHByb3ByaWF0ZSBjb29yZGluYXRvciB0byB1dGlsaXplIENBRSBzZXJ2aWNlcy4gCiJXZSBuZWVkIHRvIGtub3cgdGhlIHRydXRoLCIgcHJlc3NlcyBCZWNyb2Z0LiAKV2hlbiB0b2xkIGFib3V0IHRoZSBhY2N1c2F0aW9uLCB0aGUgb3duZXIgb2YgR3JlZW4gTGVhZiBzYWlkIFNtaXRoIHdobyB3YXMgaGlyZWQgaW4gSmFudWFyeSBxdWl0IG92ZXIgdGhlIHBob25lLCBhY2NvcmRpbmcgdG8gdGhlIGFmZmlkYXZpdC4iVXBvbiBoaXMgaGlyaW5nLCB0aGVyZSB3YXMgbm8gZXZpZGVuY2UgdG8gc3VnZ2VzdCB0aGF0IChTbWl0aCkgd2FzIGNhcGFibGUgb2YgdGhpcyBiZWhhdmlvciwiIEdyZWVuIExlYWYgTWFzc2FnZSBzYWlkIGluIGEgc3RhdGVtZW50LiAiSGUgd2FzIGxpY2Vuc2VkIHRocm91Z2ggdGhlIHN0YXRlIG9mIENvbG9yYWRvLCB3aGljaCBydW5zIGEgYmFja2dyb3VuZCBjaGVjayBhbmQgZmluZ2VycHJpbnRpbmcgdGhhdCBhbGwgY2FtZSBiYWNrIGNsZWFuIG9uIGhpcyByZWNvcmQuIApXaG8gZ2l2ZXMgYSBzaGl0PyBTZXJpb3VzbHkuIExldCdzIHNheSB5b3UgdGFrZSBhIHBpY3R1cmUgb2YgYSBzcG9ydHMgZ2FtZSB5b3UncmUgYXQuIFdoeSBkbyB5b3UgY2FyZSBpZiB5b3VyIGRhdGEgaXMgIm1pbmVkIj8gTGV0J3Mgc2F5IGl0IGdvZXMgdG8gYWR2ZXJ0aXNlcnMuIEl0J3Mgbm90IGxpa2UgdGhlcmUncyBzb21lIGR1ZGUgdGhlcmUgc2F5aW5nICJvb29vbyB1L2hvbGx5amVzdGVyIGlzIGF0IHRoaXMgc3BvcnRzIGV2ZW50ISEgTGV0J3MgZ28gc3RlYWwgdGhlaXIgd2FsbGV0ISEiIFRoZSBtb3N0IGRhdGEgdGhleSdsbCBnZXQgaXMgdGhlIG1hYyBhZGRyZXNzIG9mIHlvdXIgcGhvbmUgd2l0aCBhIGxvY2F0aW9uICh0aGUgbW9zdCBleHRyZW1lIGNhc2UpLiBBbmQgaXQncyBub3QganVzdCB5b3Vycy4gSXQncyBtaWxsaW9ucyBvZiBnaWdzIG9mIGRhdGEgY29taW5nIGluIGxpa2UgdGhpcyBjb21pbmcgaW4gZXZlcnkgc2Vjb25kLgpNZWFucyBldmVyeXRoaW5nIHRvIG1lLiAKQ2VydGFpbmVzIGRlcyBGb25jdGlvbm5hbGl0IGRpc3BvbmlibGVzIHN1ciBsZSBTaXRlIHdlYiByZXF1aSB1biBlbnJlZ2lzdHJlbWVudCBvdSB1biBhYm9ubmVtZW50LiBTaSB2b3VzIG9wdGV6IGRlIHZvdXMgZW5yZWdpc3RyZXIgb3UgZGUgdm91cyBhYm9ubmVyIHVuZSB0ZWxsZSBGb25jdGlvbm5hbGl0IHZvdXMgdm91cyBlbmdhZ2V6IGZvdXJuaXIgZGUgbCB2IGV0IGpvdXIgdm90cmUgc3VqZXQsIHRlbCBxdWUgcmVxdWlzIHBhciBsZSBwcm9jZXNzdXMgZCBvdSBkIGV0IG1ldHRyZSBjZXR0ZSBpbmZvcm1hdGlvbiBqb3VyIHByb21wdGVtZW50IHNpIG4gYWZpbiBkIHF1IGRlbWV1cmUganVzdGUgZXQgY29tcGwgVm91cyByZWNvbm5haXNzZXogcXVlIHZvdXMgcmVzcG9uc2FibGUgaSkgZGUgbWFpbnRlbmlyIGxhIGNvbmZpZGVudGlhbGl0IGRlcyBtb3RzIGRlIHBhc3NlIHF1ZSB2b3VzIGNob2lzaXNzZXogb3UgcXVpIHZvdXMgc29udCBhc3NpZ24gc3VpdGUgdm90cmUgZW5yZWdpc3RyZW1lbnQgb3Ugdm90cmUgYWJvbm5lbWVudDsgaWkpIGRlIHRvdXRlIGFjdGl2aXQgcXVpIGEgbGlldSBzb3VzIHZvdHJlIG5vbSBkIG91IHNvdXMgdm90cmUgbW90IGRlIHBhc3NlOyBldCBpaWkpIGRlIHNvcnRpciBkZSB2b3RyZSBjb21wdGUgbGEgZmluIGRlIGNoYXF1ZSBzZXNzaW9uLiBEZSBwbHVzLCB2b3VzIHZvdXMgZW5nYWdleiBhdmlzZXIgTGEgUHJlc3NlIGRlIHRvdXRlIHV0aWxpc2F0aW9uIG5vbiBhdXRvcmlzIGRlIHZvdHJlIG5vbSBkIG91IGRlIHZvdHJlIG1vdCBkZSBwYXNzZS4gCkFuZCBvbmUgbW9yZSBoaW50ICAgcGxlYXNlIGxvb2sgdGhyb3VnaCB0aGUgcmVzdWx0cyBvZiB0aGUgcHJldmlvdXMgdG91cm5hbWVudHMgYmVmb3JlIHlvdXIgc3RhcnQgcGxheWluZywgc28gdGhhdCB5b3UgY2FuIHVuZGVyc3RhbmQgd2hhdCB5b3Ugc2hvdWxkIGFpbSBhdC4gCklmIHlvdSBwbGFjZWQgYWxsIHRoZSBCYXJiaWVzIHNvbGQgZW5kIHRvIGVuZCwgdGhleSB3b3VsZCBjaXJjbGUgdGhlIGVhcnRoIG1vcmUgdGhhbiA3IHRpbWVzLiBJbiBmYWN0LCBCYXJiaWUgaXMgYSAkMyBiaWxsaW9uIGRvbGxhciBhIHllYXIgaW5kdXN0cnkuIApBdCB0aGUgZW5kIG9mIGVhY2ggZGF5IHdlIGFsd2F5cyB0YWxrIGFib3V0IHRoZSBoYXBwZW5pbmdzIGFuZCBzZXZlcmFsIG9mIHRoZSB2b2x1bnRlZXJzIHRhbGtlZCBhYm91dCBob3cgcGVvcGxlIHdlcmUgY29tcGxpbWVudGluZyB0aGUgMTAwMCBQYXVsc29uIFRvcGhhdCBhbmQgQ2FuZSBQb2tlciBDaGlwcy4gU29tZSB3ZXJlIHNheWluZyB0aGUgYXRtb3NwaGVyZSBtYWRlIHRoZW0gZmVlbCBsaWtlIHRoZXkgd2VyZSBpbiBWZWdhcyB3aGlsZSBvdGhlcnMgd2VyZSBhc2tpbmcgd2hlcmUgd2UgZm91bmQgc3VjaCBzdHlsaXNoIHNldHMuIFdoaWxlIHdlIGRpZG4ndCB3YW50IHRvIGdpdmUgYXdheSBvdXIgYmlnIHNlY3JldCBkdWUgdG8gdGhlIHJpc2luZyBwcm9maXRzIGFuZCBwb3B1bGFyaXR5LCB3ZSBmZWx0IHRoYXQgZG9pbmcgc28gbWF5IGhlbHAgYnJpbmcgaW4gbW9yZSBwZW9wbGUgZm9yIHRoZSBuZXh0IG9uZS4uIApJIGhhZCB0d28gcGFpcnMgYW5kIHdlbnQgImFsbCBpbiIsIHB1dHRpbmcgZXZlcnl0aGluZyBpbiB0aGUgcG90IHdpdGggYSBzYXRpc2Z5aW5nIHB1c2guIApVbml0ZWQgU3RhdGVzIG9mZmljaWFscyBhbmQgcHJpdmF0ZSBzZWN1cml0eSBmaXJtcyBzYXcgdGhlIGF0dGFja3MgYXMgYSBzaWduYWwgYnkgTW9zY293IHRoYXQgaXQgY291bGQgZGlzcnVwdCB0aGUgV2VzdCdzIGNyaXRpY2FsIGZhY2lsaXRpZXMgaW4gdGhlIGV2ZW50IG9mIGEgY29uZmxpY3QuIApEaWUgU3RhbmRhcmQgWmltbWVyIHdlcmRlbiBtaXQgNjAgUXVhZHJhdG1ldGVyIGRpZSBncnRlbiBpbiBkZXIgU3RhZHQgc2VpbiB1bmQgbWl0IEJhZGV6aW1tZXJuLCBkaWUgYW4gZWluIFNwYSBlcmlubmVybiwgYXVzZ2VzdGF0dGV0IHNlaW4uIEluIGRlciBDbHViIExvdW5nZSBFdGFnZSB3aXJkIGRpZSBHc3RlIGV4a2x1c2l2ZXIgU2VydmljZSwgd2llIHp1bSBCZWlzcGllbCBwcml2YXRlciBDaGVjayBpbiB1bmQgS29uZmVyZW56ZWlucmljaHR1bmdlbiwgZXJ3YXJ0ZW4uIApPbiBvbmUgcGFydGljdWxhciB3ZWVrZW5kIG9mIHBsYXksIEkgZGlkIGdyZWF0LiBJIGhhZCBzcGVudCBtYW55IGhvdXJzIG1hcHBpbmcgbXlzZWxmIHRocm91Z2ggdGhlIHJhcHRvciBuZXN0IHByZXZpb3VzbHksIGFuZCBzb21laG93IEkgY29tcGxldGVkIHRoYXQgcGFydC4gSSBoYWQgbmV2ZXIgc2VlbiB0aGlzIHBhcnQgb2YgdGhlIGdhbWUgYmVmb3JlLCBidXQgaXQgd2FzIFN1bmRheSBuaWdodCwgYmVkdGltZSBhbmQgdGhlIE5pbnRlbmRvIHdhcyBob29rZWQgdXAgdG8gdGhlIHNlY29uZCBUViBpbiBteSBtb20gcm9vbS4gClNvIEkgcmVtZW1iZXIgd2hlbiB3ZSB3ZXJlIHJlYWxseSB5b3VuZywgc2hlIHdhcyBhIG5hbm55IGxpa2Ugd2hlbiBJIHdhcyBhbiBpbmZhbnQuIApUaGUgcGF5b3V0IHJhdGlvIGlzIGFnYWluc3QgdGhlIGFtb3VudCBvZiB5b3VyIGJldC4gU28gaWYgeW91IGJldCAkNSBhbmQgZ2V0IGEgc3RyYWlnaHQsIHlvdSBhcmUgaW5zdGFudGx5IGNyZWRpdGVkIHdpdGggJDI1IGludG8geW91ciBhY2NvdW50LCBtZWFuaW5nIHlvdXIgdG90YWwgcHJvZml0IGZvciB0aGF0IGhhbmQgd291bGQgYmUgJDIwLiBUaGVzZSByYXRpb3MgYXJlIHJvdWdobHkgYmFzZWQgb24gdGhlIG9kZHMgdGhhdCB5b3UnbGwgaGl0IHRoZSBoYW5kIGluIHF1ZXN0aW9uIGlmIHlvdSBwbGF5ICJwZXJmZWN0bHkiIHRoYXQgaXMsIGlmIHlvdSBrbm93IHRoZSBuZXh0IGZpdmUgY2FyZHMgdGhhdCBhcmUgc2l0dGluZyBvbiB0b3Agb2YgdGhlIGRlYWxlcidzIGRlY2ssIGluIG9yZGVyLi4gCllvdSBoYXZlIGFsbW9zdCBubyBjaGFuY2UgYXQgYSBoaWdoIGhhbmQsIGFuZCBpZiB5b3UgZG8gaGl0IGEgbG93LCBpdCBpcyBsaWtlbHkgdGhhdCBhbm90aGVyIHBsYXllciBob2xkcyBhbiBBIGFuZCBhIDIuIApJZiBidWlsZGluZyBhIGZhbWlseSBidXNpbmVzcyBhbmQgcmFpc2luZyBzaXggY2hpbGRyZW4gd2VyZSBub3QgZW5vdWdoICAgQXJtZW4gZGVkaWNhdGVkIHdoYXQgbGl0dGxlIHRpbWUgaGUgaGFkIGxlZnQgdG8gcHVibGljIHNlcnZpY2UuIEZvciBuZWFybHkgZmlmdHkgeWVhcnMgaGUgd2FzIGFuIGFjdGl2ZSBtZW1iZXIgb2YgS2l3YW5pcywgc2VydmluZyBhcyBQcmVzaWRlbnQsIENoYWlyIGFuZCBBZHZpc29yIG9mIHZhcmlvdXMgb3JnYW5pemF0aW9ucyBhbmQgd2FzIHRoZSByZWNpcGllbnQgb2Ygc2V2ZXJhbCBhd2FyZHMgYW5kIGRpc3RpbmN0aW9ucywgaW5jbHVkaW5nIHRoZSBHZW9yZ2UgRi4gCkkgbWVhbiwgSSBnZXQgaXQ6IEl0IGEgYm9yaW5nLCBtb25vdG9ub3VzIGpvYi4gClJlYWxseSB0aG91Z2ggR29vZ2xlIGl0IGFuZCB0cnkgbm90IHRvIGNoYW5nZSB0ZWFjaGVycyB0b28gb2Z0ZW4gc2luY2UgeW91IGhlYXIgYSB0aG91c2FuZCBkaWZmZXJlbnQgdmVyc2lvbnMuIApFeGFtcGxlOiBLaWQgMSB3YW50cyBzaWJsaW5nIHRveS4gU2libGluZyBkb2VzbiB3YW50IHRvIGdpdmUgdG95LiBLaWQgMSBzY3JlYW1zIGFuZCBzaG91dHMuIEFzayBLaWQgMSB0byBpbWFnaW5lIHRoYXQgdGhleSBhcmUgU2libGluZy4gZG9lcyBzY3JlYW1pbmcgYW5kIHNob3V0aW5nIGdldCB5b3Ugd2hhdCB5b3Ugd2FudD8gV2hhdCBtaWdodCB3b3JrIGluc3RlYWQ/IFByYWN0aWNlIHdpdGggeW91ciBraWQgYW5kIG1vZGVsLiBFbmNvdXJhZ2UuIFNvbWV0aW1lcyBpdCBkb2VzbiB3b3JrLCBzdXJlLiBUaGF0IGxpZmUuIFNvbWV0aW1lcyBpdCB3aWxsIHdvcmsgd2F5IGJldHRlci4KTkVTLCBTTkVTLCBONjQsIEdCQSwgYW5kIERTIGFsbCBoYXZlIGFtYXppbmcgbGlicmFyaWVzIGJ1dCB0aGUgV2lpIFUgY2FuIHBsYXkgdGhlIG1ham9yaXR5IG9mIHRoZWlyIGdyZWF0ZXN0IGhpdHMgdmlhIGl0cyBlc2hvcCwgYXMgd2VsbCBhcyBldmVyeSBXaWkgZ2FtZSBhbmQgYSBidW5jaCBvZiBXaWkgVSBjbGFzc2ljcy4gCkJlY2F1c2Ugb2YgdGhlIGFnaW5nIG9mIHRoZSBwb3B1bGF0aW9uLCB0aGUgcHJldmFsZW5jZSBvZiBib25lIGFuZCBqb2ludCBkaXNlYXNlcyBpbiB0aGUgVW5pdGVkIFN0YXRlcyBpcyBhbHJlYWR5IHRoZSBwcmltYXJ5IHJlYXNvbiB0aGF0IHBlb3BsZSBzZWVrIG1lZGljYWwgY2FyZSBpcyBzdXJlIHRvIHJpc2UuCkluIHJlY2VudCBkYXlzLCBhcyB0aGUgcHVibGljIGRlYmF0ZSByZWdhcmRpbmcgdGhlIENJQSBpbnRlcnJvZ2F0aW9uIHByYWN0aWNlcyBoYXMgcmFnZWQsIHlvdSBoYXZlIGJlZW4gdmVyeSBtdWNoIGluIG15IHRob3VnaHRzLiAKV2UgcmVjb21tZW5kIHRoYXQgYXQgcmlzayB1c2VycyBzZWUgb3VyIE1lbnRhbCBIZWFsdGggcmVzb3VyY2VzIHBhZ2UuLiAKSWYgdGhlIHNlY29uZD8gU2hlIGhhc24gYXNrZWQgZm9yIGZvcmdpdmVuZXNzLCBzaGUgZG9lc24gZ2V0IGl0LiAKTWF5YmUgYWxsIHRob3NlIGFtZXJpY2FuIGRvY3RvcnMgd2VyZSBlZmZlY3RlZCBieSB0aGUgY3VsdHVyZSBvZiBhbnRpYmlvdGljcyBoYWhhLi4gCkxhIEJpYmxlLCBjJ2VzdCBsYSBtbWUgY2hvc2UuIExhIHJ1bmlvbiBkZXMgZG9jdW1lbnRzIGQndW5lIGhpc3RvaXJlIGQnYW1vdXIgZW50cmUgdW4gcGV1cGxlIGV0IGx1aSBtbWUsIGVudHJlIHVuIHBldXBsZSBldCBsYSB2aWUsIGV0IHN1cnRvdXQgZW50cmUgdW4gcGV1cGxlIGV0IHNvbiBEaWV1LiAKU3BsaXR0aW5nIGNhbiB0dXJuIGFuIGV4Y2VsbGVudCBoYW5kIGludG8gYSB0ZXJyaWJsZSBvbmUsIGFuZCB2aWNlIHZlcnNhLiBIZXJlIGFyZSBzb21lIHJ1bGVzIG9mIHRodW1iOiBOZXZlciBzcGxpdCA1J3MgICB5b3VyIHRvdGFsIGlzIDEwOyB5b3UgYXJlIGxpa2VseSB0byBlbmQgc3Ryb25nLiBBbHdheXMgc3BsaXQgOCdzIGFuZCBBY2VzLiBTcGxpdHRpbmcgOCdzIHdpbGwgY2hhbmdlIHByb2JhYmxlIGxvc2VycyB0byBwcm9iYWJsZSB3aW5uZXJzLiBTcGxpdHRpbmcgQWNlcyBpcyBhZHZhbnRhZ2VvdXMsIGJ1dCB1bmRlcnN0YW5kIHRoaXM6IFlvdSBhcmUgb25seSBhbGxvd2VkIHRvIHNwbGl0IEFjZXMgb25jZSAoc29tZXRpbWVzKSwgYW5kIHlvdSBjYW4gb25seSB0YWtlIG9uZSBjYXJkIGZvciBlYWNoIG5ldyBoYW5kIChzb21ldGltZXMuKSBTb21lIGNhc2lub3MgZGlkIHRoaXMgYmVjYXVzZSBzcGxpdHRpbmcgQWNlcywgd2l0aG91dCBhbnkgcmVzdHJpY3Rpb24sIGlzIGEgZ3JlYXQgYWR2YW50YWdlLgpJJ20gYWJzb2x1dGVseSBub3QgYWR2b2NhdGluZyBmb3IgYW55IHNvcnQgb2YgcHVycG9zZWZ1bCBnZW5ldGljIHNlbGVjdGlvbiBpbiBodW1hbnMsIGJ1dCBnb2Qgd2UgY291bGQgdXNlIG1vcmUgZ2luZ2Vycy4gClBlb3BsZSB3aG8gdGFsayBhIGxvdCB0ZW5kIHRvIHRhbGsgbW9yZSBhZnRlciBhIHdpbi4gCkJ1dCBSb2ViZW4gc2F5cywgdGhlcmUncyBiZWVuIGEgbGl0dGxlIGNoYW5nZSBvZiBwZXJjZXB0aW9uIGFib3V0IGl0LiBIZSBwb2ludHMgb3V0IGNhc2lub3MgYXJlIG5vdCBub25wcm9maXRzIGFuZCB0aGV5IG11c3Qgb3BlcmF0ZSBsaWtlIGJ1c2luZXNzZXMuCkJ1dCBpdHMgaG9uZXN0bHkgd29uZGVyZnVsLCBJIGdldCB0byByZWFkIGFuZCBlbmpveSB0aGUgdmlldywgYW5kIHNpbmNlIGl0cyBzbyBlYXJseSBldmVyeW9uZSBpcyBlaXRoZXIgYXNsZWVwIG9yIHJlYWRpbmcvbGlzdGVuaW5nIHRvIG11c2ljIHNvIGl0cyByZWFsbHkgc2lsZW50LiBHcmVhdCB3YXkgdG8gZ2V0IHNvbWUgcmVhZGluZyBkb25lLCBzaW5jZSBJIGZpbmQgaXQgbW9yZSBkaWZmaWN1bHQgdG8gcmVhZCB3aGVuIEkgaG9tZS5Xb3JsZFdpZDMgIDExNyBwb2ludHMgIHN1Ym1pdHRlZCAxIHllYXIgYWdvSSBsaXZlIGluIE5vcndheSB3aGljaCBpcyBwcmV0dHkgbXVjaCB0aGUgbW9zdCBleHBlbnNpdmUgY291bnRyeSBpbiB0aGUgd29ybGQgZm9yIGZvb2QuIEJ1dCB3aGVuIEkgd2VudCB0byBBbWVyaWNhIGFuZCBDYW5hZGEgaXQgaG9uZXN0bHkgZmVsdCBsaWtlIGhlYWx0aHkgZm9vZHMgbGlrZSBzbW9vdGhpZXMsIGZ1bGwgZ3JhaW4gYnJlYWQsIG51dHMsIGZpc2ggZXRjIHdlcmUgYSBsb3QgbW9yZSBleHBlbnNpdmUsIGJ1dCBzdHVmZiBsaWtlIERvcml0b3MsIGNvY2EgY29sYSBhbmQgY2FuZHkgd2FzIHJpZGljdWxvdXNseSBjaGVhcC4gCkkgZHVubm8gd2h5IGNvbnNpZGVyaW5nIHRoZXkgYWRkZWQgbnVyc2VzIHdoaWNoIEltbyBpcyBhIGJldHRlci4gClRoYXQsIGZvciBhbGwgb2YgdXMgaW4gYSBEQiwgaXMgc2V2ZXJlbHkgbGFja2luZyBvciBlbnRpcmVseSBub24gZXhpc3RlbnQuCkFsc28gZ2V0IGEgdHJpbSBhdCBsZWFzdCBvbmNlIGV2ZXJ5IHNlYXNvbiB0byBwcmV2ZW50IHNwbGl0IGVuZHMgZnJvbSBnb2luZyB1cCB0aGUgaGFpciBzdHJhbmQuIAoybyBEYXkuIApZb24gUm9nZydzIGRlc2lyZXMgd2VyZSBwcmV0dHkgY2xlYXJseSBtb3RpdmF0ZWQgYXJvdW5kIGNvbnRyb2xsaW5nIENhcm9sLiBIaXMgZmxhd3Mgd2VyZSBhcnJvZ2FuY2UgdGhhdCBoZSBjb3VsZCBjb250cm9sIGhlci4KVGhlIHNoYXJrIG9uIHRoZSByaWdodCBjbGVhcmx5IGtuZXcgYWxsIHRoZSBkYW5jZSBtb3Zlcy4gVGhlIHNoYXJrIG9uIHRoZSBsZWZ0IG5vdCBzbyBtdWNoLiAiTGVmdCBzaGFyaywiIGFzIGhlIHdhcyBjYWxsZWQgaW4gdmlyYWwsIG9ubGluZSBtZW1lcywgZmxhaWxlZCBoaXMgZmxpcHBlcnMgYW5kIHNlZW1lZCB0byBmb3JnZXQgdGhhdCBoZSB3YXMgZGFuY2luZyBuZXh0IHRvIGEgcG9wIHN0YXIgYW5kIGJlaW5nIHdhdGNoZWQgYnkgbWlsbGlvbnMgb2YgcGVvcGxlIHdvcmxkd2lkZS4gVHVybnMgb3V0LCB0aGUgc2VlbWluZ2x5IHJhbmRvbSBtb3ZlcyB3ZXJlIGFsbCBwbGFubmVkLiBPbmUgb2YgUGVycnkncyBkYW5jZXJzLCBCcnlhbiBHYXcsIGZpbmFsbHkgZmVzc2VkIHVwIHRvIGJlaW5nIGxlZnQgc2hhcmsuCktleSBmYWN0b3JzIGluY2x1ZGU6IGxlbmd0aCBvZiBhcHBvaW50bWVudHMsIHRpbWUgb2YgZGF5LCB0aW1lIG9mIHllYXIgKHRheCBzZWFzb24sIENocmlzdG1hcywgTmV3IFllYXJzLCBKdWx5IDQsIGNvbXBhbnkgY2VudGVubmlhbCwgZXRjLiksIG51bWJlciBvZiBob3VycywgbG9jYXRpb24sIGRheSBvZiB0aGUgd2VlaywgZXRjLiBXZSB3YW50IHlvdXIgYnVzaW5lc3MgYW5kIGxvb2sgZm9yd2FyZCB0byBxdW90aW5nIHlvdSB0aGUgbG93ZXN0IHByaWNlIHBvc3NpYmxlLiAKSSBsb3ZlIHRoZSBleGNpdGVtZW50LCB0aGUgc3BvcnQsIHRoZSBmcmllbmRseSBiYW50ZXIgYW5kIHRyYXNoIHRhbGssIHNhaWQgRnJlbmNoLCB3aG8gcGxheWVkIGEgdGVhbSBoYW5kIHdpdGggaGVyIGZyaWVuZCBBbm5hIFNtZXJhZ2xpdW9sby4gCk9yIGluc2VjdGl2b3Jlcy4gT3IgZ3VtaXZvcmVzLiBGcnVpdCBpcyBvbmx5IGEgc3RhcGxlIGZvciBmcnVnaXZvcmVzIChtYWNhcXVlcywgY2hpbXBzLCB1cywgY2FwdWNoaW5zLCBzcGlkZXIgbW9ua2V5cywgZXRjLikgICB0aGF0IHRoZSBkZWZpbml0aW9uIG9mIGZydWdpdm9yZS4gCk9uIGRvbm5lIGRlcyBzdXJub21zLCBvbiBmYWl0IGRlcyBjb21tZW50YWlyZXMgc3VyIGxlIGNvcnBzLCBsZSBwb2lkcywgbGEgbmNlc3NpdCBkJ3VuIHJnaW1lLiAKTyBlc2NyaXRvciBkbyBhcnRpZ28KSGUgd2FzIGFsc28gYSBjaGVhdGVyIG9uIGEgbWFzc2l2ZSBzY2FsZS4gSm9obiBBdWJyZXksIGEgYmlvZ3JhcGhlciwgc2F5cyB0aGF0IFN1Y2tsaW5nIHNlbnQgcGFja3Mgb2YgbWFya2VkIGNhcmRzIGFzIGdpZnRzIHRvIGhpcyBub2JsZSBwYWxzIGFjcm9zcyBFbmdsYW5kLiBIZSB0aGVuIHRvdXJlZCB0aGUgY291bnRyeSB0ZWFjaGluZyBjcmliYmFnZSB0byB0aG9zZSB0byB3aG9tIGhlIGhhZCBnaWZ0ZWQgdHJpY2sgZGVja3MsIGFuZCAid2lubmluZyIgYWJvdXQgMjAsMDAwIGZyb20gdGhlbSwgd2hpY2ggYW1vdW50cyB0byBuZWFybHkgOCBtaWxsaW9uIDIwMTggbG9vbmllcy4gClNob3VsZCBJIGdldCBteSBJc3JhZWxpIFBhc3Nwb3J0L0NpdGl6ZW5zaGlwIGJlZm9yZWhhbmQsIG9yIGlzIGl0IHZlcnkgZWFzeSBvbmNlIHRoZXJlPyBTaG91bGQgSSBub3QgZ2V0IGl0IGF0IGFsbD9Bc3NlbWJsZSB5b3VyIGRvY3VtZW50cyBhbmQgc3VibWl0IHRoZW0gd2hpbGUgeW91IHRoZXJlLiBBbmQgeW91IHNob3VsZCBnZXQgeW91ciBJc3JhZWxpIHBhc3Nwb3J0LCBldmVuIGlmIHlvdSBkb24gcGxhbiBvbiBsaXZpbmcgaW4gSXNyYWVsLiBIYXZpbmcgdHdvIHBhc3Nwb3J0cyBpcyBhbHdheXMgbmljZSwgYW5kIG1heWJlIGEgam9iIG9wcG9ydHVuaXR5IHdpbGwgY2hhbmdlIHlvdXIgbWluZCBpbiB0aGUgZnV0dXJlLi4gCk5ldGZsaXggaGFzIGEgZG9jdW1lbnRhcnkgY2FsbGVkIElubm9jZW50IE1hbiB0aGF0IGNocm9uaWNsZXMgdGhpcyBwaGVub21lbm9uLiAKSXN0YW5idWwgaXNuIHJlYWxseSBhIG1haW5zdHJlYW0gZGVzdGluYXRpb24gZm9yIG1vc3QgQW1lcmljYW5zIGxpa2UgaXQgaXMgZm9yIEV1cm9wZWFucyBhbmQgdGhlcmVmb3JlIHRoZSBmZXcgQW1lcmljYW5zIHRoYXQgZG8gbWFrZSBpdCBoZXJlIGFyZSB1c3VhbGx5IHZldGVyYW4gdG91cmlzdHMgdGhhdCBhcmUgYXdhcmUgb2YgdGhlIGJhc2ljIGd1aWRlbGluZXMgb2YgZ2V0dGluZyB0byBrbm93IHRoZSBjdXN0b21zIG9mIHRoZSBjb3VudHJ5IHRoZXkgcGxhbm5pbmcgdG8gdmlzaXQgYmVmb3JlaGFuZDsgYnV0IEkgc3RpbGwgc2VlIGEgbG90IG9mIGlnbm9yYW5jZSBvbiBiZWhhbGYgb2YgQW1lcmljYW5zIHdoZW4gaXQgY29tZXMgdG8gVHVya2V5LgpKdXN0IGFzIExhZHkgTHVjayB3YXMgdW56aXBwaW5nIG15IHBhbnRzLCBFdmFuIHN3b29wZWQgaW4gYW5kIHNlcmVuYWRlZCBoZXIuIApJIGRpZCBhbG1vc3QgdGhlIHNhbWUgYXMgeW91LiBJIHRhdWdodCBteXNlbGYgU0NDTSB3aGlsZSBhIGxldmVsIDIgSGVscGRlc2sgb2ZmaWNlciBhdCBhIG1pZCBzaXplIGNvbXBhbnkgd2l0aCBhIHNtYWxsIGl0IHRlYW0uIExhbmRlZCBhIHN5c2FkbWluIHByb21vdGlvbiB0aGVyZSBhZnRlciAxMiBtb250aHMgaGF2aW5nIGRlbW9uc3RyYXRlZCBteSBjYXBhYmlsaXR5IHdpdGggdGhpcyBwaWVjZSBvZiBzb2Z0d2FyZSBhbmQgc29tZSBvdGhlciB0aGluZ3MuIFRoZXkgZGlkbid0IGdpdmUgbWUgbXVjaCBvZiBhIHBheSByaXNlIHdpdGggdGhlIG5ldyBwcm9tb3Rpb24uIEFub3RoZXIgMTIgbW9udGhzIGxhdGVyIG9uZSBvZiBteSBjb3dvcmtlcnMgbGVmdCBhbmQgdGhlbiBwb2FjaGVkIG1lIGFuZCBJIGFsbW9zdCBkb3VibGVkIG15IHdhZ2UuIFN0aWxsIG1haW50YWluaW5nIFNDQ00gYXMgbXkgZm9jdXMgYnV0IGhhdmUgYnJhbmNoZWQgaW50byBvZmZpY2UgMzY1IGFuZCBhenVyZS4KU2hlIHdhbnRlZCB0byBnZXQgYmFjayB0b2dldGhlciBhbmQgSSBqdXN0IGh1bmcgdXAuIApZb3UgZGlkbiBtZW50aW9uIG1lIGFsc28gbW9kZXJhdGluZyBGYWxsb3V0IE5ldyBWZWdhcywgbWF5IGFzIHdlbGwgbWFrZSB0aGF0IGNsZWFyLiBJIG1vZGVyYXRlIGV2ZXJ5IEZhbGxvdXQgc3VicmVkZGl0IGluIHRoZSBGYWxsb3V0IE5ldHdvcmssIGFzIEkgY3JlYXRlZCB0aGUgRmFsbG91dCBOZXR3b3JrLiBUaGlzIGlzIHdoeSBJIHRha2UgInNoaWxsIiBjbGFpbXMgc2VyaW91c2x5LCBiZWNhdXNlIGEgZm91bmRpbmcgcHJpbmNpcGFsIG9mIGl0IHdhcyBub3QgYWxsb3dpbmcgYW55IHN1YnJlZGRpdHMgaW4gd2l0aCBhbnkgYWZmaWxpYXRpb24uCkV2ZXJ5IGNvbXBhbnkgd2FudHMgdG8gZG8gdGhpcywgb2YgY291cnNlLCBidXQgbm9uZSBkb2VzIGl0IGFzIGVmZmVjdGl2ZWx5IGFzIFp5bmdhLiBBbnlvbmUgd2hvIHVzZXMgRmFjZWJvb2sgaGFzIHJlY2VpdmVkIGEgYmFycmFnZSBvZiBpbnZpdGF0aW9ucyB0byBoZWxwIGEgbmVpZ2hib3Igb3IgcmVjZWl2ZWQgZ2lmdHMgZnJvbSBaeW5nYSBnYW1lcywgb2Z0ZW4gZnJvbSB0aGVpciBkZWFyZXN0IGZhbWlseSBhbmQgZnJpZW5kcy4gT2YgY291cnNlLCBaeW5nYSBwcm92aWRlcyBpbmNlbnRpdmVzLCBpbiB0aGUgZm9ybSBvZiBnYW1lIGNyZWRpdHMsIHRvIHRob3NlIHdobyBpc3N1ZSBpbnZpdGF0aW9ucywgYnV0IHRoYXQgZG9lc24gZXhwbGFpbiB3aHkgc28gbWFueSBwZW9wbGUgdGFrZSB0aGVtIHVwIG9uIGl0LgpJcyB0cnlpbmcgdG8gc3RheSBwb3NpdGl2ZSwgYnV0IHlvdSBjYW4gdGVsbCBpdCBib3RoZXJpbmcgaGltIGEgYml0LiBUaGVyZSBhcmUgc3VidGxlIHNpZ25zLCBsaWtlIGR1cmluZyBhIHBvd2VyIHBsYXkgZHJpbGwgaW4gcHJhY3RpY2UgTW9uZGF5IHdoZW4gaGUgd2VudCBhbGwgbHVtYmVyamFjayBvbiB0aGUgY3Jvc3NiYXIsIHNtYXNoaW5nIGhpcyBzdGljayBpbnRvIGZvdXIgcGllY2VzIGFuZCBmaXJpbmcgdGhlIHJlbWFpbnMgaW50byB0aGUgZW1wdHkgYmVuY2guIApGcm9tIEZhY2Vib29rIFRoZSBiZXN0IHdheSB0byBnZXQgbG9hZHMgb2YgcG9rZXIgY2hpcHMgb24gZmFjZWJvb2sgaXMgdG8gYXNrIG90aGVyIHBsYXllcnMgdG8gZG9uYXRlIHRoZWlyIGNoaXBzIHRvIHlvdSBvciBidXkgdGhlbSBmcm9tIHZhcmlvdXMgc2l0ZXMgd2hpY2ggbWF5IGJlIHVudHJ1c3R3b3J0aHkuIE9uZSB3YXkgdG8gZ2V0IGZyZWUgZmFjZWJvb2sgcG9rZXIgY2hpcHMgd291bGQgYmUgdG8uIFdJTiB0aGVtISBZZXMsIHRoZSBnYW1lIG5vdyBnaXZlcyBhIGxvdCBtb3JlIGNoYW5jZXMgdG8gd2luIHBva2VyIGNoaXBzLCBhbmQgYSBsb3QgbW9yZSB0aGFuIGJlZm9yZS4gCkl0IGFsc28gdHJlYXRzIDIyZ2lzaCByb3VuZCB3aXJlIHdheSBiZXR0ZXIgdGhhbiBpdCB0cmVhdHMgbGlrZSAyNmcgcm91bmQgb3IgdHdpc3RlZC4gQXMgZm9yIHdpY2tpbmcgaXQsIEkgaGF2ZSBhIHBob3RvIGd1aWRlIHRoYXQgSSBkaWQgZm9yIHNvbWVvbmUgaGVyZSBpZiB5b3Ugd2FubmEgY29tcGFyZSBub3Rlcy4gSSByZWFsbHksIHJlYWxseSwgcmVhbGx5IGNvbWIgdGhlIGVuZHMgb2YgdGhlIGNvdHRvbiBvdXQuIApGYXIgYXMgdGhlIHdyaXRpbmcgZm9jdXMgZm9yIHRoZSBzaXRlIGlzIGNvbmNlcm5lZCwgSSBjb3VsZCBub3QgYWdyZWUgbW9yZSB3aXRoIHNvbWUgb2YgdGhlIGNvbW1lbnRzIG1hZGUgYW5kIHRoZSByZXF1aXJlbWVudHMgbGlzdCBpcyB2ZXJ5IG11Y2ggYmFzZWQgb24gd2hhdCB3ZSBjYW4gZG8gdG8gbWFrZSB3cml0aW5nIGVhc2llci4gClRhZ2dlZCBBbm5pZSdzIE1hc3NhZ2UsIGJhciwgYmJiaiwgQlRTLCBmaXNoYm93bCwgR3JhbmQgTWVyY3VyZSBIb3RlbCwgbWFzc2FnZSwgTmFuYSwgTmFuYSBQbGF6YSwgUGxvZW5jaGl0LCByZWQgbGlnaHQgZGlzdHJpY3QsIHJlc3RhdXJhbnQsIHNvYXB5IG1hc3NhZ2UsIFN1a2h1bXZpdCBSb2FkLCBTdWtodW12aXQgU29pIDIsIFN1a2h1bXZpdCBTb2kgNCwgVGhhaSBtYXNzYWdlLCB1bnByb3RlY3RlZApUaGlzIGlzIG9uZSBvZiB0aGUgbW9zdCBjaGFsbGVuZ2luZyBraW5kcyBvZiBtYXNzYWdlIHJlYWxpemVkIGluIG1hc3NhZ2UgdGhlcmFweSBmYWN1bHR5ICwgYnV0IGRlZXAgdGlzc3VlIG1hc3NhZ2UgYmFzaWNhbGx5IHdhcm1zIHRoZSBzdXBlcmZpY2lhbCBkZWxpY2F0ZSB0aXNzdWUgb2YgdGhlIGJvZHkgdG8gYWNjZXNzIHRoZSBkZWVwZXIgbGlua2VkIHRpc3N1ZSBiZW5lYXRoIGZvciBsYXN0aW5nIHdlbGwgYmVpbmcgYWR2YW50YWdlcy4gQSBwYXJ0aWN1bGFyIHRyZW5kZXIgZm9yIDIwMTQsIHRoaXMgc3BlY2lhbGlzZWQgZm9ybSBvZiBtYXNzYWdlIHJlcXVpcmVzIHN1cGVyaW9yIHNjaG9vbGluZyBhbmQgZGlzdGluY3RpdmUgY2VydGlmaWNhdGlvbiBmb3IgdGhlIHRoZXJhcGlzdC4uIApXaGlsZSB0aGVyZSBpIGZpZ3VyZSBpIHNob3VsZCBzdG9jayB1cCBvbiBkZW9kb3JhbnQuIApTZXZlcmFsIG1vbnRocyBhZ28sIEkgd3JvdGUgdG8gdGhlIG9yZ2FuaXNlcnMsIHRoZSBNaW5pc3RlcnMgZm9yIEhlYWx0aCBhbmQgRWR1Y2F0aW9uLCBhbmQgb3RoZXIgc3Rha2Vob2xkZXJzIHdpdGggbXkgY29uY2VybnMuIEkgaW5jbHVkZWQgYSAxNSBwYWdlIFNjaG9vbHMgTm90aWZpY2F0aW9uIERvY3VtZW50IHdpdGggZGV0YWlsZWQgZG9jdW1lbnRhcnkgZXZpZGVuY2Ugb2YgVU0gcmlza3MgdG8gY2hpbGRyZW4uIFdoZW4gSSBjaGVja2VkIHRoZSBQQVNIIHNpdGUgc2V2ZXJhbCB3ZWVrcyBhZ28sIFNhcmFoIERhdmlzIG5hbWUgaGFkIGJlZW4gcmVtb3ZlZCBmcm9tIHRoZSBjb25zb3J0aXVtIGV4ZWN1dGl2ZSBwYWdlLCBzbyBJIGluY29ycmVjdGx5IGFzc3VtZWQgdGhlIGNvbnNvcnRpdW0gaGFkIHRoZSBnb29kIHNlbnNlIGFuZCBpbnRlZ3JpdHkgdG8gbWFrZSBzdXJlIHNoZSBhbmQgaGVyIGNvbGxlYWd1ZXMgd291bGQgbm90IGJlIGdpdmVuIGEgcGxhdGZvcm0uIApGaXJzdCB0aW1lIGxhbmRsb3JkIG5lZWRzIGhlbHAKU21vb3RoZXIgTXVsdGkgVGFibGluZzogVGhlIGJpZ2dlc3QgY2hhbmdlIGlzIHRoZSA/Q2FzY2FkZS9UaWxlIGZlYXR1cmU/IHRoYXQgd2lsbCBhbGxvdyBwbGF5ZXJzIHRvIHZpZXcgYXMgd2VsbCBhcyByZXNpemUgbXVsdGlwbGUgdGFibGVzIGZvciBlYXNpZXIgZ2FtZSBwbGF5LiBBbGwgY2FyZHMgaW5jbHVkaW5nIGhvbGUgY2FyZHMgYXMgd2VsbCBhcyBjb21tdW5pdHkgY2FyZHMgd2lsbCBhcHBlYXIgaW4gYmlnZ2VyIHNpemUgbm93LiBUaGlzIHdpbGwgaGVscCBpbiBiZXR0ZXIgdmlzaWJpbGl0eSB3aGlsZSBtdWx0aSB0YWJsaW5nLgpHdXkgRS4gYW5kIEpvcmdlIEQuClRoZSB3aG9wcGluZyBwcm9maXQgTm9ydGhlcm4gUml2ZXJzIHBva2llcyBtYWtlCk15IHdob2xlIG5lcnZvdXMgc3lzdGVtIGlzIGluIGZpZ2h0IG9yIGZsaWdodCBtb2RlIHdoZW4gaGUncyBpbiBjbG9zZSBwcm94aW1pdHkuIApEbyB5b3UgdGhpbmsgaGFzIGhhcHBlbmVkIHRvIHRoZW0/IEkgYW0gc3VyZSB0aGV5IGFyZSBmaW5lIGFuZCBzdHVjayBpbiB0cmFmZmljLiBHdWVzcyB5b3UgYXJlIHJpZ2h0LiBNYXliZSB0aGV5IHN0b3BwZWQgb2ZmIHNvbWV3aGVyZSB0byBwaWNrIHNvbWV0aGluZyB1cC4gCkkgd2FudGVkLCBpdCdzIGEgc2hhbWUgdG8gc2F5LCBJIGFsd2F5cyB3YW50ZWQgdG8gZG8gd3JvbmcuIApZb3VyIG1vbSBpcyB3cm9uZyBvbiBtYW55IGxldmVscy4gRmlyc3QseW91IGFyZSAgZmluZSBhcyB5b3UgYXJlLiBZb3VyIEJGIGNoZWF0ZWQgYmVjYXVzZSBoZSdzIGEgamVyayBub3QgYmVjYXVzZSB5b3VyIGJvb2JzIGFyZW4ndCBiaWcuIFlvdXIgYm9vYnMgd2lsbCBzdGlsbCBsaWtlbHkgZ3JvdyBmb3IgdGhlIG5leHQgZmV3IHllYXJzIHRvby4KQnV0IGEgZmlyc3Qgcm91bmQga25vY2tvdXQgb2YgTWVsdmluIFJ1c3NlbGwgbGFzdCBKdW5lIGF0IE1vaGVnYW4gU3VuIGhhcyByZXN0b3JlZCBoaXMgY29uZmlkZW5jZS4iVHJhaW5pbmcgY2FtcCBoYXMgYmVlbiBncmVhdCwiIFNtaXRoIHNhaWQuIApPaCBjb21vbiwgaXRzIG5vdCBsaWtlIHRoZXkgdW5hd2FyZSB5b3UgY2FuIGNoYWluIGZyZWUgdHJpYWxzLiBUYWtlIGEgbG9vayBhdCB0aGUgYmlnZ2VyIHBpY3R1cmU7IHlvdSBjYW50IHJlYWxseSB0aGluayB0aGV5IHByZWZlciBzdHVkZW50cyB0byBwaWNrIHVwIG90aGVyIHNvZnR3YXJlIGlmIHRoZXkgY2FudCBhZmZvcmQgdG8gcGF5IHRoZWlycyAoeWV0KT8gSXQgYWJvdXQgbGlmZSB0aW1lIHZhbHVlIGZvciB0aGVtLCBub3QgdGhlIHNpbGx5IHN0dWRlbnQgZGlzY291bnQuCldoZW4gc2VsZWN0aW5nIHNvbWV3aGVyZSB0byBiZWdpbiBwbGF5aW5nIGF0IG5vIGNvc3QsIGl0IHBheXMgdG8gbG9vayBpbnRvIHdoYXQgYmVuZWZpdHMgYXJlIG9mZmVyZWQgdG8gdGhlIHBsYXllciBieSB0aGUgcG9rZXIgcm9vbXMuIFNvbWUgb2ZmZXIgcGxheSBtb25leSB0b3VybmFtZW50cyBvbiB0b3Agb2YgcmVndWxhciB0YWJsZSBwbGF5IHdoaWNoIGNhbiBoZWxwIHRvIGxlYXJuIGFuZCBwcmFjdGljZSB5b3VyIHRvdXJuYW1lbnQgc3RyYXRlZ2llcy4gSWYgeW91IGhhdmUgbmV2ZXIgcGxheWVkIGJlZm9yZSwgbWFrZSBzdXJlIHRoZXkgaGF2ZSB0dXRvcmlhbHMgZm9yIHRoZSBkaWZmZXJlbnQgdHlwZXMgb2YgcG9rZXIsIGEgIkhvdyB0byBQbGF5IFBva2VyIEdhbWVzIiBzZWN0aW9uIGluIGFkZGl0aW9uIHRvIGEgcmFua2luZyBvZiBwb2tlciBoYW5kcy4gCklmIEkgbWlzaW50ZXJwcmV0ZWQgeW91ciBxdWVzdGlvbiwgSSBhcG9sb2dpemUuIEkgbGlrZWQgdG8gdGFrZSBhIHJlc3Qgb3IgY3Jvc3MgdHJhaW5pbmcgZGF5IGFmdGVyIG15IGxvbmcgcnVucywgYnV0IHdvdWxkIGJlIGJhY2sgdG8gYSAoc2hvcnRlciwgZWFzaWVyKSBydW4gdHdvIGRheXMgYWZ0ZXIuClRoZSBnb29kIG5ld3MgaXMsIGl0IGNhbiBnZXQgYmV0dGVyLCBidXQgaXQncyBnb2luZyB0byB0YWtlIGEgTE9UIG9mIHdvcmsgb24geW91ciBlbmQgdG8gdHVuZSBvdXQvaWdub3JlIHBlb3BsZSdzIHJlYWN0aW9ucy4gSSB3b3VsZCBhbHNvIHJlY29tbWVuZCByb2xlIHBsYXlpbmcgKHdpdGggYSB0aGVyYXBpc3QgaWYgeW91IGhhdmUgb25lLCBjbG9zZSBmcmllbmQgb3IgZmFtaWx5IG1lbWJlciBpZiB5b3UgZG9uJ3QpIHNvbWUgcmVzcG9uc2VzIHRvIGhhdmUgb24gaGFuZCB3aGVuIHBlb3BsZSdzIHJlYWN0aW9ucyBnZXQgb3V0IG9mIGhhbmQgb3Igd2hlbiB5b3UgZW5jb3VudGVyIGFuIGFjY2VzcyBpc3N1ZS4gCkNlIG1kZWNpbiBhbXJpY2FpbiBkaXZpc2EgbGUgY29ycHMgZW4gZGl4IHpvbmVzLCBjb21wcmlzZXMgZW50cmUgbGEgdHRlIGV0IGxlcyBkb2lndHMsIGFpbnNpIHF1ZSBsZXMgb3J0ZWlscy4gU2Vsb24gbHVpLCBsIGNpcmN1bGFudCBkYW5zIGNlcyB6b25lcyB0cmF2ZXJzZSBsZSBjb3JwcyBqdXNxdSBwb2ludHMgcmZsZXhlcyBkZXMgbWFpbnMgZXQgZGVzIHBpZWRzLiBFdW5pY2UgRC4gSW5ncmFtIGR2ZWxvcHBhIHVsdHJpZXVyZW1lbnQgbGVzIHRyYXZhdXggZGUgRml0Z2VyYWxkIGVuIGNyYW50IGxhIFJmbGV4b2xvZ2llLCBzb3J0ZSBkZSBtYXNzYWdlIHBhciBjb21wcmVzc2lvbiBxdWkgc2UgY29uY2VudHJlIHByZXNxdWUgZXhjbHVzaXZlbWVudCBzdXIgbGVzIHBpZWRzLCBldCBxdWkgZGlmZnJlICBwZWluZSBkZSBsYSBtdGhvZGUgY2hpbm9pc2Ugb3JpZ2luZWxsZS4KSWYgeW91IGRlZmVyIHRoZXNlIGJlbmVmaXRzIGFuZCB0aGVuIGRpc2NvdmVyIHlvdSBhcmUgdGVybWluYWxseSBpbGwsIGl0IGJlc3QgdG8gYXBwbHkgZm9yIGFueSByZXRyb2FjdGl2ZSBhbW91bnRzIGltbWVkaWF0ZWx5LiAKU28gaWYgeW91IGRvIHRyYXZlbCB0byB0aGUgbW9vbiwgaXQnbGwgZGVwZW5kIG9uIHdoYXQgd2UgZG8gd2l0aCB0aGUgbW9vbi4gSWYgcGVyaGFwcyB3ZSBzdGFydCBtaW5pbmcgb24gdGhlIG1vb24sIHRoZW4geW91IG1pZ2h0IGhhdmUgc29tZSBqb2JzIHRoYXQgbmVlZCB0byBnbyB0aGVyZSBvdXRzaWRlIG9mIHZlcnkgc21hbGwgYW1vdW50IG9mIHNjaWVudGlzdHMuIChFbmdpbmVlcnMgcHJvYmFibHksIHNpbmNlIHdlIGxpa2VseSBub3QgYmUgdXNpbmcgaHVtYW4gbGFib3IpLiAKQ2hha290YXkgYmV0IDEwIGFuZCBIYXJyeSByYWlzZWQgaGltIDIwIG1vcmUuIAppcyB0aGUgSGVyYWxkcyBQZXJzb24gb2YgdGhlIFllYXIKQydlc3QgZW5jb3JlIGxhIGxpYnJhaXJpZSBxdWkgcGFzc2VyYWl0IGxlIHBsdXMgaW5hcGVydS4gTidlbiB2b3lvbnMgbm91cyBwYXMgcXVlbHF1ZXMgdW5lcyBlbmNvcmUgcXVpIHByc2VudGVudCBsZXMgbW1lcyB2aXRyaW5lcywgIGxhIGZvaXMgc29icmVzIGV0IGVmZmljYWNlcywgcHVpc3F1J2VsbGVzIG1vbnRyZW50IGJpZW4gY2UgcXVpIGVzdCBvZmZlcnQgIGxhIGNsaWVudGxlLiBFbiBjZSB0ZW1wcyBsIGVsbGVzIG5lIHN1Ymlzc2FpZW50IHBhcyBsYSBjb25jdXJyZW5jZSBhY2hhcm5lIGRlcyBzaXRlcyBlbiBsaWduZSBxdWkgbWV0dGVudCBlbiBkYW5nZXIganVzcXUnIGxhIHN1cnZpZSBkdSBtdGllciBkZSBsaWJyYWlyZS4gTmUgbGVzIGxhaXNzb25zIHBhcyB0b21iZXIuIFJpZW4gbmUgdmF1dCB1bmUgYm9ubmUgbGlicmFpcmllLCBvZGV1ciBkZSB2aWV1eCBwYXBpZXJzIGNvbXByaXNlLgpQdXRpbiBmaXJlZCBoZXIgaHVzYmFuZCBmb3IgYmVpbmcgYSBjcm9vayBpbnZvbHZlZCB3aXRoIHlldCBhbm90aGVyIENsaW50b24gY3JpbWUgY2FiYWwgc2NhbSwgd2l0aCBSdXNzaWFuIFJhaWxyb2Fkcy4gVGhlaXIgcGxhbiB3YXMgdG8gdGFrZSBkb3duIFB1dGluIGFuZCBUcnVtcCBhdCB0aGUgc2FtZSB0aW1lLiBXSE8gd2FzIGNvbGx1ZGluZz8gVEhJUyB3YXMgYSBjb25zcGlyYWN5IGFuZCBlbnRyYXBtZW50IDEwMS4gCldoeSBkaWQgQ3ludGhpYSBzZWUgYSBtZW1vcnkgb2YgQXVnZ2llIGtpbGxpbmcgaGVyLCBhbmQgaXQgd2FzIG5ldmVyIGV4cGxhaW5lZD8gOjo6IEluIHRoZSBzYW1lIHdheSBLYXJsIHNhdyBuZXcgaW1hZ2VzIG9mIGhpcyBkYXVnaHRlciBtYWRlIGJ5IHRoZSBWb2xrcnluLiBUaGUgVm9sa3J5biBzYXcvZmVsdCBoZXIgYXMgYSBtYWxpY2lvdXMgZm9yY2UgYW5kIHJlc3BvbmRlZCBhY2NvcmRpbmdseS4KUmVmcmFpbiBmcm9tIHByb21vdGluZyBoYXRlIHNwZWVjaCwgcmFjaXNtLCBzZXhpc20sIHJlbGlnaW9uIGJhc2hpbmcsIG5hbWUgY2FsbGluZywgaW5zdWx0cywgYW5kIGFueSBvdGhlciBhYnVzaXZlL3RocmVhdGVuaW5nIGxhbmd1YWdlLiAiQWJ1c2l2ZSBsYW5ndWFnZSIgaW5jbHVkZXMgcG9zdHMgd2hpY2ggYXJlIG1hbGljaW91cyBvciBpbnN1bHRpbmcgaW4gbmF0dXJlLiBFdmVuIGlmIHRoZSBwZXJzb24geW91IGFyZSBpbnN1bHRpbmcgY29tbWl0dGVkIGEgaGVpbm91cyBhY3QsIGRvIG5vdCBkZXNjcmliZSBob3cgdGhleSBzaG91bGQgYmUgcHVuaXNoZWQgaWYgZ2l2ZW4gdGhlIGNoYW5jZS4gCkhvd2V2ZXIsIGxvc2luZyBob3BlIGlzIG5vdCBhbiBvcHRpb24gYXMgdGhlcmUgaXMgbmV2ZXIgYSAidG9vIGxhdGUiIHBvbGljeS4gCkRlciBUYXhwdW5rdCAoVFApIGlzdCBkZXIgR3J1bmR3ZXJ0IGVpbmVyIExlaXN0dW5nLCBlciBpc3QgaW4gZGVyIGdhbnplbiBTY2h3ZWl6IGdlZ2ViZW4uIE1pdCBkaWVzZW0gdW5kIGRlbSBlaWdlbnRsaWNoZW4gVGFyaWZ3ZXJ0L1RheHB1bmt0IFdlcnQgKFRQVyksIHdpcmQgZGllIExlaXN0dW5nIGVpbmVzIEFyenRlcy9TcGl0YWwgYWJnZWdvbHRlbi4KRmFkZV9pc190aW1vdGh5X2hvbHQgIDIwOCBwb2ludHMgIHN1Ym1pdHRlZCAxMiBkYXlzIGFnbwpUaGUgbGFzdCBncmVhdCBwdWJsaWMgZXhwcmVzc2lvbiBvZiBzaGFtZSwgSSB0aGluaywgd2FzIGluIDE5OTUsIHdoZW4gYWN0b3IgSHVnaCBHcmFudCB3ZW50IG9uIFRvbmlnaHQgU2hvdyB0byBleHByZXNzIGhpcyBkZWVwIG1vcnRpZmljYXRpb24gZm9yLCBvZiBhbGwgdGhpbmdzLCBnZXR0aW5nIGNhdWdodCB3aXRoIGEgaG9va2VyLiBJdCBzZWVtcyBzdWNoIGEgcXVhaW50IG9mZmVuc2UgaW4gb3VyIGVyYSBvZiByZWFsIHNleCBzY2FuZGFscywgb25lcyB0aGF0IG5vdyBpbmNsdWRlIGFzc2F1bHQsIHJhcGUsIGh1bWFuIHRyYWZmaWNraW5nIHJpbmdzIGFuZCBwZWRvcGhpbGlhICAgeWV0IHN1Y2ggd2FzIHRoZSB0aHJlYXQgdG8gR3JhbnQncyByaXNpbmcgY2FyZWVyIHRoYXQgaGUgaGFkIHRvIGFzayB0aGUgQW1lcmljYW4gcHVibGljIGZvciBmb3JnaXZlbmVzcy4uIApEZW5uaXMgY291bGQsIG9mIGNvdXJzZSwgaW5pdGlhdGUgdGhlIGJyZWFrIHJlZ2FyZGxlc3MgICBhbmQgZWl0aGVyIGFjY2VwdCBCdXR0b24ncyByZXRpcmVtZW50IG9yIGdhbWJsZSB0aGF0IGhlIGRvZXNuJ3QgcmVhbGx5IG1lYW4gaXQuIEluIHRoaXMgc2NlbmFyaW8gQnV0dG9uIGNhbm5vdCBhZmZvcmQgZm9yIERlbm5pcyB0byBiZWxpZXZlIHRoYXQgaGUgaXMgbm90IHByZXBhcmVkIHRvIGRlbGl2ZXIgb24gaGlzIHRocmVhdC4gSGVuY2UgaXQgcGxheXMgdmVyeSB3ZWxsIGZvciBCdXR0b24gZm9yIHRoZSBtZWRpYSB0byBiZWxpZXZlIGhlIGlzIGdlbnVpbmVseSBjb25zaWRlcmluZyByZXRpcmVtZW50LiBUaGV5IGhhdmUgaW5hZHZlcnRlbnRseSBiZWNvbWUgcGFydCBvZiBoaXMgbmVnb3RpYXRpb24gc3RyYXRlZ3kuClN0ZXBoYW5pZSBSZWssIGZyb20gdGhlIFVuaXZlcnNpdHkgb2YgT3hmb3JkLCB3YXMgY3VyaW91cyBhYm91dCB0aGUgdW5kZXJseWluZyBjYXVzZSBvZiBuaWdodG1hcmVzIGFuZCBzbyBjb25kdWN0ZWQgb25lIG9mIHRoZSBsYXJnZXN0IGV2ZXIgc3R1ZGllcyBvZiB0aGUgd29ycnlpbmcgZHJlYW1zLCBpbiB0aGUgZ2VuZXJhbCBwb3B1bGF0aW9uLgoxMjBLIHdpdGggYW5udWFsIEZ1ZWwgQm9vc3RlciBQb2tlciBSdW4KRnVuZGFtZW50YWxseSB5b3Ugc2hvdWxkIGJlIHRha2luZyB0aGUgc2FtZSBhcHByb2FjaCAgIHBsYXkgdGlnaHQgZWFybHksIGF2b2lkIGNhbGxpbmcgZm9yIGFsbCB5b3VyIGNoaXBzLCBhbmQgdHJ5IHRvIHB1c2ggdG8gd2luIHBvdHMgd2l0aG91dCBhIHNob3dkb3duLi4gCkx1Y2t5IGF0IGxpZmUuIExvdmVkIGFuZCByZXNwZWN0ZWQgYnkgbWFueS4gSm9obiBlc3BlY2lhbGx5IGVuam95ZWQgdGhlIHRpbWVzIHdoZW4gaGlzIHNvbnMgd291bGQgam9pbiBoaW0gYXQgdGhlIENsdWIgZm9yIGEgcm91bmQgb2YgZ29sZiBvciBwb2tlciBuaWdodCB3aXRoIHRoZSBndXlzIGFsb25nIHdpdGggdGhlIG51bWVyb3VzIGZhbWlseSBmdW5jdGlvbnMgZW5qb3llZCBhdCBNYXJrbGFuZCBvdmVyIHRoZSB5ZWFycy4gSm9obiB3YXMgYSBsb3lhbCwgZGVkaWNhdGVkIGFuZCBwcm91ZCBlbXBsb3llZSBvZiB0aGUgMjAgVmljIE1hbmFnZW1lbnQgIkZhbWlseSIgd2hlcmUgaGUgZXN0YWJsaXNoZWQgbWFueSBhbWF6aW5nIGxvbmcgdGVybSBtdXR1YWxseSByZXNwZWN0ZnVsIHJlbGF0aW9uc2hpcHMgbm90IG9ubHkgd2l0aCBtYW5hZ2VtZW50LCBiZWluZyBpbiB0aGUgaW5kdXN0cnkgZm9yIG92ZXIgMzAgeWVhcnMsIGJ1dCB3aXRoIGhpcyBzdXBwb3J0IHN0YWZmIGFuZCBjb2xsZWFndWVzIHRoYXQgaGUgbG92ZWQgYW5kIHNoYXJlZCBhIHdvbmRlcmZ1bCByYXBwb3J0IHdpdGgsIGFuZCBudW1lcm91cyBidXNpbmVzcyBmcmllbmRzIGFuZCBhY3F1YWludGFuY2VzIHRoYXQgaGUgYWRtaXJlZCwgcmVzcGVjdGVkIGFuZCB0b29rIG1hbnkgZ29sZiB0cmlwcyB3aXRoIG92ZXIgdGhlIHllYXJzLCB0aGF0IGhhdmUgYmVjb21lIGFuIGV4dGVuZGVkIHBhcnQgb2YgdGhlIFByZXRzZWxsIEZhbWlseS4gClRoZXkgYWxzbyBoYWQgYSB3ZWlyZCBzaXplIHNoaWZ0IGF0IHRoZSBzYW1lIHRpbWUuIEkgd2VudCB0byByZXBsYWNlIGEgZmV3IHRoaW5ncyBhbmQgYm91Z2h0IHRoZSBzYW1lIHNpemUsIHNhbWUgc3R5bGUgYnJhcy4gCkluIGdvb2QgcmVhc29ucyB0byBzdGF5LCBJIHdvdWxkIGFkZCBhIHBvaW50IGZvciBwZW9wbGUgd2hvIGhhdmUgbm8gcHJvc3BlY3RzIGF0IGhvbWUgb3IgbmVlZCB0byByZXBheSB0aGVpciAyMDBrIEhpc3RvcnkgZGVncmVlLiAKV2hlbiBKZXN1cyByZXR1cm5lZCB0byBDYXBlcm5hdW0sIGEgUm9tYW4gb2ZmaWNlciBjYW1lIGFuZCBwbGVhZGVkIHdpdGggaGltLCAiTG9yZCwgbXkgeW91bmcgc2VydmFudCBsaWVzIGluIGJlZCwgcGFyYWx5emVkIGFuZCBpbiB0ZXJyaWJsZSBwYWluLiIgKE1hdHRoZXcgODo1IDYgTkxUKQpPZiB0aGUgdG90YWwgJDE4IG1pbGlvbiBpbiBwcm9maXRzIGFjcm9zcyB0aGUgZml2ZSBMR0FzLCB0aGUgcG9rZXIgbWFjaGluZXMgcmV0dXJuZWQgYSBsaXR0bGUgb3ZlciAkMyBtaWxsaW9uIHRvIHRoZSBTdGF0ZSBHb3Zlcm5tZW50IGNvZmZlcnMuCkxld2lzJ3MgbW9zdCByZWNlbnQgYm9vaywgIkZsYXNoIEJveXMsIiBiZWNhbWUgYSBtYWpvciBuZXdzIGV2ZW50IGluIGl0c2VsZiB3aGVuIGl0IHdhcyBwdWJsaXNoZWQgbGVzcyB0aGFuIGEgeWVhciBhZ28uIEluIExld2lzJ3Mgc2lnbmF0dXJlIGNyaXNwIHByb3NlLCBpdCBleHBvc2VkIHRoZSBwcmFjdGljZXMgb2YgaGlnaCBmcmVxdWVuY3kgdHJhZGluZyBvbiBXYWxsIFN0cmVldCB0aGF0IGhhdmUgcmlnZ2VkIHRoZSBzeXN0ZW0gZm9yIGEgc2VsZWN0IGZldy4gSW4gaXQsIExld2lzIGZvbGxvd3MgYSBoYW5kZnVsIG9mIG1lbiBpbnNpZGUgdGhlIHN5c3RlbSB3aG8gc2VlayB0byBjaGFuZ2UgdGhlIHN5c3RlbSBhbmQgc3RhcnQgdGhlaXIgb3duIGV4Y2hhbmdlLCBJRVgsIHRoYXQgYWltcyB0byBwdXQgaW52ZXN0b3JzIGJhY2sgb24gYW4gZXZlbiBwbGF5aW5nIGZpZWxkLgpMJ3R5bW9sb2dpZSBuZSByZXByc2VudGUgcGFzIHBsdXMgZGUgMTAlIGRlIGwnYWN0aXZpdCBhdSBjb3VycywgcXVhbmQgZWxsZSBmYXZvcmlzZSBsYSBjb21wcmhlbnNpb24gZHUgc2VucyBkdSBtb3QgYWluc2kgcXVlIHNhIG1tb3Jpc2F0aW9uLiAKQWxsIHBhdGllbnRzIGhhZCBhbiBlc3RpbWF0ZWQgbGlmZSBleHBlY3RhbmN5IG9mIGxlc3MgdGhhbiBzaXggbW9udGhzLiBNb3N0IHBhdGllbnRzIHJlY2VpdmVkIGZ1bGwgYm9keSBvciBwYXJ0aWFsIG1hc3NhZ2UgYXMgcGFydCBvZiBwYWxsaWF0aXZlIGNhcmUgaW4gYSBob3NwaWNlIG9yIG9uY29sb2dpY2FsIGNlbnRyZS4gCkVuIGNlIHF1aSBtZSBjb25jZXJuZSBjZWxhIGZhaXQgdW4gZGVtaSBzaWNsZSBxdWUgamUgc3VpcyBpbW11bmlzIGNvbnRyZSBjZXR0ZSBob3JyZXVyIGNhciBkZXB1aXMgdG91dCBjZSB0ZW1wcyBqZSBzYWlzIHF1ZSBsZSBzZXVsIG9iamVjdGlmIGRlIEJpZyBQaGFybWEgYydlc3QgZGUgZmFpcmUgdW4gbWF4aW11bSBkZSBmcmljIHBhciB0b3VzIGxlcyBtb3llbnMgZXQgcXVlbHF1J3VuIHNvaXQgbGVzIGNvbnNxdWVuY2VzIHNhbml0YWlyZXMuIFRvdXMgbGVzIHNjYW5kYWxlcyBzYW5pdGFpcmVzIHF1aSBleHBsb3NlbnQgcmd1bGlyZW1lbnQgZGVwdWlzIGxvbmd0ZW1wcywgZW4gRnJhbmNlIHBhcnRpY3VsaXJlbWVudCwgcnN1bHRlIGQndW4gZGZhdXQgZGUgY29udHJsZS5SZW1hcnF1ZSAgbCdpbnRlbnRpb24gZGVzIGxlY3RldXJzIGVzdCBhYm9ubnMgZXQgZGVzIGNhcmVuY2VzIGRlIGxhIHBsdXBhcnRDZSBibG9nIGEgYXR0aXIganVzcXUnIDI1IDAwMCB2aXNpdGVzIHBhciBtb2lzLCBzYXVmIHF1J2lsIG5lIGZhdXQgc2UgZmFpcmUgYXVjdW5lIGlsbHVzaW9uIHF1YW5kIG9uIHZvaXQgbGUgdGVtcHMgbW95ZW4gZGUgc3RhdGlvbm5lbWVudCBxdWkgZXN0IGluZnJpZXVyICAyIG1pbnV0ZXMuT24gdmllbnQgcG91ciBwcmVuZHJlLCBqYW1haXMgcG91ciBkb25uZXIuIApUbyBsZWFybiBtb3JlIGFib3V0IHRoZSBjbG9zaW5nIG9mIEltcHJvbXB0dSBhbmQgdGhlIGdvYWxzIGFjY29tcGxpc2hlZCwgSSBjb25kdWN0ZWQgYW4gZW1haWwgaW50ZXJ2aWV3IHdpdGggU2hpcHRvbiB5ZXN0ZXJkYXkuCkxhc3QgeWVhciwgQW1lcmljYW5zIHNwZW50IG1vcmUgdGhhbiAkODAgYmlsbGlvbiBwbGF5aW5nIHN0YXRlIGxvdHRlcmllcywgdGhhdCdzIGFyb3VuZCAkMjUwIGZvciBlYWNoIGNpdGl6ZW4sIG1vcmUgdGhhbiB3aGF0IHdhcyBzcGVudCBvbiBjb25jZXJ0cywgc3BvcnRpbmcgZXZlbnRzIGFuZCBtb3ZpZSB0aWNrZXRzIGNvbWJpbmVkLiBPdmVyIDI1IHN0YXRlcyB0b29rIGluIG1vcmUgZnJvbSB0aGVpciBsb3R0ZXJ5IHByb2NlZWRzIHRoYW4gZnJvbSBjb3Jwb3JhdGUgaW5jb21lIHRheC4gCjI3OCwgSnVseSAyOCwgMTg3My4uIAoiV2l0aCB0aGUgYXR0ZW50aW9uIHNldCBmb3IgdGhlIG5leHQgZm91ciB5ZWFycyB0b3dhcmQgQnJhemlsIGFzIGl0IHByZXBhcmVzIHRvIGhvc3QgdGhlIGxhcmdlc3Qgc3BvcnRpbmcgZXZlbnRzIGluIHRoZSB3b3JsZCwgd2UgYW50aWNpcGF0ZSB0byBzZWUgc3VwcGx5IGdyb3d0aCB0YWtpbmcgcGxhY2UgYWNyb3NzIHRoZSBjb3VudHJ5Iiwgc2FpZCBFbGl6YWJldGggUmFuZGFsbCBXaW5rbGUsIG1hbmFnaW5nIGRpcmVjdG9yIGF0IFNUUiBHbG9iYWwuICJIb3dldmVyLCB3ZSBhcmUgZXhwZWN0aW5nIHRvIHNlZSBsb3dlciBncm93dGggbGV2ZWxzIGluIHdlbGwgZXN0YWJsaXNoZWQgZGVzdGluYXRpb25zIHN1Y2ggYXMgUmlvIGRlIEphbmVpcm8gYW5kIFNhbyBQYXVsbywgd2hpY2ggYWNjb3VudCBmb3IgYWxtb3N0IDMwIHBlcmNlbnQgb2YgdGhlIHJvb20gaW52ZW50b3J5IG9mIGJyYW5kZWQgaG90ZWxzIGluIHRoZSBjb3VudHJ5Ii4KT2YgY291cnNlLCBzb21lIG9mIHRoZSBjb250cmFzdHMgY29tZSBmcm9tIFRoYWlsYW5kIGhhdmluZyBzdWNoIGEgaGlnaCBkaXNwYXJpdHkgb2Ygd2VhbHRoLiBUaGUgZ3VsZiBiZXR3ZWVuIHRob3NlIHdobyBoYXZlIGFuZCB0aG9lIHdobyBkb24gaXMgc28gd2lkZSwgaXQgYWxtb3QgdW5yZWFsLiAKQmUgc2luZ2xlIGZvciBhIHdoaWxlLiAKQ2hvc2UgdGhlIGxhc3QgcGhyYXNlIG5leHQsIHRoZW4gYWdhaW4gb2J2aW91c2x5IGNob3NlIHRoZSAxc3Qgb25lLiBUaGVuIGdvIHRvIHRoZSBjb2FjaGVzIG9mZmljZSwgY2hvc2UgdGhlIDFzdCBwaHJhc2UuIApHbyB0byBhIHN0b3JlIGFuZCB0cnkgYWxsIHNvcnRzIG9mIGNsb3RoZXMgb24geW91cnNlbGYuIApJdCBhYm91dCBhIGtpZCB3aG8gcnVucyBhd2F5IGNyb3NzIGNvdW50cnkgdG8gZW50ZXIgYSB2aWRlbyBnYW1lIHRvdXJuYW1lbnQgKHdoaWNoIHdhc24gcmVhbGwgeWEgdGhpbmcgYmFjayB0aGVuKS4gCkZvciBleGFtcGxlLCBQb2xhbmQsIHRoZSBjb3VudHJ5IHRoYXQgYmVlbiBtb3N0IGFjdGl2ZSBpbiBzaGFsZSBnYXMsIGhhcyBvbmx5IG1hbmFnZWQgdG8gZHJpbGwgYWJvdXQgNTAgZXhwbG9yYXRpb24gd2VsbHMgdG8gZGF0ZSwgaGUgc2F5cy4gCkknbSBhIGZ1Y2tpbmcgaWRpb3QgYnV0IEkga25vdyBteSBsaW1pdHMsIEkga25vdyB3aGVuIEkgY2FuJ3QgYWR2YW5jZSwgc28gSSBmb2N1c2VkIG9uIHRoZSBvbmUgdGhpbmcgSSBrbm93IEkgY2FuIGRvIHdlbGwsIGFuZCB0aGF0J3MgYXJ0LiBJIHdhcyBnb29kIGF0IGFydCBiZWZvcmUgYnV0IGl0IHdhc24ndCB3aGF0IEkgc3BlY2lhbGl6ZWQgaW4uIE5vdywgd2l0aCBldmVyeXRoaW5nIGJlaW5nIHRha2VuIGluIHRoYXQgYWNjaWRlbnQgYW5kIHRha2luZyBhIHllYXIgdG8gcmVsZWFybiBiYXNpYyBzZW50ZW5jZSBzdHJ1Y3R1cmUsIGFub3RoZXIgNyB0byBiZSBhYmxlIHRvIGhvbGQgYSBub3JtYWxpdHkgY29udmVyc2F0aW9uIGFuZCBhIHRvbiBvZiBnYW1pbmcgdG8gZ2V0IHNvbWUgYmFzaWMgaGFuZCBleWUgY29vcmRpbmF0aW9uIGRvd24sIEknbSBnb29kIGF0IGdhbWluZyBhbmQgSSdtIGdvb2QgYXQgZHJhd2luZy4gCkluIDIwMTQgU3VpdCBVcCBQb2tlciBMZWFndWUgYmVjYW1lIGFuIGFmZmlsaWF0ZSBvZiB0aGUgQmFyIFBva2VyIE9wZW4uIApUaGUgY29tcGFueSBhbHNvIGFubm91bmNlZCBwbGFucyB0byBzcGxpdCBpdHMgYnJhbmRzIGludG8gdHdvIHB1YmxpY2x5IHRyYWRlZCBjb21wYW5pZXMgd2l0aCBPbGQgTmF2eSBmYWxsaW5nIGludG8gb25lIGJ1c2luZXNzIGFuZCBHYXAsIEJhbmFuYSBSZXB1YmxpYywgQXRobGV0YSwgSW50ZXJtaXggYW5kIEhpbGwgQ2l0eSBtYWtpbmcgdXAgYW5vdGhlci4KU2VsZWN0IHRoZSBhcHByb2FjaCB5b3UgbGlrZSwgYnV0IG9uZSBnZW5lcmFsIHJlY29tbWVuZGF0aW9uIGlzIHRoYXQgaXQgaXMgd29ydGggdG8gcGxheSAiYWdhaW5zdCB0aGUgY3Jvd2QiLiAKV2hhdCB3b3JrZWQ6IExvdHMgYW5kIGxvdHMgYW5kIGxvdHMgb2Ygb3ZlcmhlYWQgcHJlc3MuIE1vc3RseSBoaWdoZXIgcmVwIHJhbmdlcyBpcyB3aGF0IG15IGRlbHRzIGFsd2F5cyByZXNwb25kZWQgdG8gYmVzdC4gU28gbG90cyBvZiBsaW5lYXIgcHJvZ3Jlc3Npb25zIHVzaW5nIDYgOCBhbmQgMTAgSSByZW1lbWJlciBCb3JpbmcgQnV0IEJpZyA1eDEwIHJlYWxseSBoZWxwaW5nIG1lIHRvIGFkZCBzaXplIHdoZW4gSSB3YXMgc3RpbGwgdHJhaW5pbmcgb2hwIGEgbG90LiAKIkdvdCBpdCBkb25lIGFscmVhZHksIFNpci4iIHNheXNNYXJrLgpFZGl0OiBTbyBwZW9wbGUgYXJlIGFza2luZyB3aGF0IGJ1Z3MgdGhleSB3ZXJlLiAKSSBhc2sgYmVjYXVzZSwgdG8gdGhlIGJlc3Qgb2YgbXkga25vd2xlZGdlLCB0aGUgdmVyYiAoKSBpcyBzcGVsbGVkIG5vdCB3aXRoIGEgc2Vnb2wgYnV0IHdpdGggYSB0emVyZSwgd2hpY2ggaXMgY2F0ZWdvcml6ZWQgYXMgYSAibG9uZyB2b3dlbCIsIGdyYW1tYXRpY2FsbHkgc3BlYWtpbmcgKGFuZCBwcmVzdW1hYmx5IHdhcyBwcm9ub3VuY2VkICJFSSIgW2FzIGl0IGlzIHN0aWxsIHByb25vdW5jZWQgaW4gdGhlIEFzaGtlbmF6aSBkaWFsZWN0XSBhdCB0aGUgdGltZSB0aGF0IHRoZSBydWxlcyBvZiBIZWJyZXcgZ3JhbW1hciB3ZXJlIGxhaWQgZG93bikuCk1lZXBzdG9uZSAgIDMgcG9pbnRzICBzdWJtaXR0ZWQgMTkgZGF5cyBhZ28KSW4gMTkzNywgRGVzbW9uZCBzZXQgdXAgVmkgU3R1ZGlvIG9mIEJlYXV0eSBDdWx0dXJlIGluIEhhbGlmYXggY2F0ZXJpbmcgdG8gQmxhY2sgd29tZW4gd2hlcmUgdGhleSBhbHNvIHNvY2lhbGl6ZWQuIEJ1dCBoZXIgdmlzaW9uIGV4cGFuZGVkLiAKTUlETEFORCwgVGV4LiBvaWwgY29tcGFuaWVzIHdlbnQgYmFua3J1cHQuIEJ1dCBvbmUgZmllbGQgd2l0aHN0b29kIHRoZSBvbnNsYXVnaHQsIGFuZCBldmVuIHRocml2ZWQ6IHRoZSBQZXJtaWFuIEJhc2luLCBzdHJhZGRsaW5nIFRleGFzIGFuZCBOZXcgTWV4aWNvLgpTYWlkIGEgZGlmZmVyZW50IHdheSwgaWYgeW91IGEgY291Y2ggcG90YXRvIGFuZCBkb24gY2hhbGxlbmdlIHlvdXJzZWxmIG1lbnRhbGx5IG9uIGEgcmVndWxhciBiYXNpcywgYnJhaW4gdHJhaW5pbmcgY291bGQgYmUgaGVscGZ1bC4gCkl0J3MgdGVzdGFtZW50IHRvIEhvbmcgS29uZ2VycyBhcnJvZ2FuY2UgdGhhdCB0aGV5IGxvb2sgZG93biBvbiBNYWlubGFuZGVycy4gCkhlIHdpbGwgYmUgZGVhcmx5IG1pc3NlZCBieSBoaXMgYnJvdGhlciBBbGJlcnQgKE5hbmN5KSwgaGlzIHNpeCBjaGlsZHJlbjsgQnJpYW4sIEphbmljZSwgU3VzYW4gKEFsbGlzdGFpciBNY0tpbm5lbGwpLCBBcmlzYSAoU3RldmUgTmljaG9sc29uKSwgR3JlZyAoU2FyYWggQnJvbWxleSksIGFuZCBMaW5kYSAoRGVyZWsgR2FsYnJhaXRoKSwgYW5kIGhpcyBlaWdodCBncmFuZGNoaWxkcmVuOyBUZXNzYSwgTGlhbSwgQXJpYW5uYSwgTHVrZSwgSmFtZXMsIEV0aGFuLCBMaWx5IGFuZCBNaWNoYWVsLiBIZSB3aWxsIGFsc28gYmUgbWlzc2VkIGJ5IGhpcyBzaXN0ZXJzIGluIGxhdyBMaWRhIEFsZXhhbmlhbiwgQmFyYiBUeXRsZXIsIEJldHR5IFdhdHNvbiAoRGFuKSwgYnJvdGhlciBpbiBsYXcgV2FsdGVyIEFuZGVycywgaGlzIG1hbnkgbmllY2VzIGFuZCBuZXBoZXdzLCBhcyB3ZWxsIGFzIE1hcmcgR3Jlc2NobmVyLCB3aG8gaGFzIGZhaXRoZnVsbHkgYW5kIGxvdmluZ2x5IHNlcnZlZCB0aGUgZmFtaWx5IGZvciA0NiB5ZWFycy4gClRoYXQgeWVhciwgdGhlIEZsYW1lcyBzZWNvbmQgIGFuZCB0aGlyZCBsZWFkaW5nIHNjb3JlcnMgd2VyZSBKb2hubnkgR2F1ZHJlYXUgYW5kIFNlYW4gTW9uYWhhbiwgdGhlbiBpbiB0aGVpciByb29raWUgYW5kIHNlY29uZCBzZWFzb25zIHJlc3BlY3RpdmVseS4gQnJvZGllLiBUaGV5IHJlY2VpdmVkIGEgc29saWQgY29udHJpYnV0aW9uIGZyb20gY2VudHJlIE1pa2FlbCBCYWNrbHVuZCBpbiBhIHN1cHBvcnRpbmcgcm9sZSBhbmQsIGxhdGUgaW4gdGhlIHNlYXNvbiwgY2FsbGVkIHVwIE1pY2hhZWwgRmVybGFuZCBmcm9tIHRoZWlyIEFITCBhZmZpbGlhdGUgYW5kIGZpcnN0IHJvdW5kIGRyYWZ0IHBpY2sgU2FtIEJlbm5ldHQgZnJvbSBqdW5pb3Igd2hvLCBpdCB3b3VsZCBiZSByZXZlYWxlZCwgd2FzIDE4IHllYXJzIG9sZC4KUGxheWVycyB1c3VhbGx5IHRpcCBkZWFsZXJzIHdpdGggYSAkMSBvciAkNSBjaGlwIGF0IHRoZSBlbmQgb2YgZWFjaCBoYW5kLi4gClVzZSBzb21lIGtpbmQgb2YgaGVhdmllciB3b29kIGZvciB0aGUgc3BhciAoc3BydWNlIHdvcmtzIHdlbGwpIGZvciBzdHJ1Y3R1cmFsIHN0YWJpbGl0eSwgY292ZXIgaW4gbW9ub2tvdGUgYW5kIHNocmluay4gClBlcnNvbmFsbHksIEkgZmluZCB0aGUgb2lsIG1hc3NhZ2UgdG8gYmUgdGhlIGJlc3QsIGlmIHlvdSBjYW4gcm91dGluZWx5IGFmZm9yZCBpdC4gSXQgbm90IGFzIHJvdWdoIGFzIFRoYWkgbWFzc2FnZSAobW9zdCBwZW9wbGUgSSBrbm93IGNvbXBsYWluZWQgYWZ0ZXIgdGhlaXIgZmlyc3QgVGhhaSBtYXNzYWdlIHRoYXQgaXQgd2FzIHRvbyByb3VnaCBhbmQgdGhlaXIgYm9keSBodXJ0cyBub3cpLCBhbmQgbXVjaCBtb3JlIHBsZWFzaW5nLgpJbnN0ZWFkLCBoZSBwcmVmb3JtcyBnb29kIG9sIENvaXR1cyBJbnRlcnJ1cHR1cy4gU28gR29kIGtpbGxzIGhpbS4gClRoZSBzb2lsIHRoZXkgZ3JvdyBpbiBpcyBTTyBpbXBvcnRhbnQuIEkgaGFkIGhvbWVncm93biB0b21hdG9lcyBvdXQgaGVyZSBpbiBDb2xvcmFkbywgYW5kIHRoZXkgdGFzdGUgV0VJUkQuIFNvaWwgYmFjayBob21lIGluIEplcnNleSBpcyByZWFsbHkgaWRlYWwgZm9yIHNvbWUgZ3JlYXQgdG9tYXRvZXMuLiAKQSB3aW4gaW4gdGhlIEJlbGxhZ2lvIFN1bW1lciBIaWdoIFJvbGxlciAkMTAwLDAwMCBTdXBlciBIaWdoIFJvbGxlciB0b3VybmFtZW50IHNlZXMgRGFuIFNtaXRoIChHUEk0LCArMikgcHVzaCBoaXMgd2F5IGJhY2sgaW50byB0aGUgVG9wIDUuIE1lYW53aGlsZSwgd2l0aCBQYXVsIFZvbHBlJ3MgKEdQSTksIE5FVykgdG8gdGhlIFRvcCAxMCwgd2UgbXVzdCBzYXkgZ29vZGJ5ZSB0byBTdGVwaGVuIENoaWR3aWNrIChHUEkxMiwgIDIpIHRoaXMgd2Vlay4gQ2hpZHdpY2sgbW92ZXMgdHdvIHNwb3RzIGJhY2sgdG8gMTJ0aCB0aGlzIHdlZWsuClBhbmNvbXB1dGF0aW9uYWxpc3QgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxMCBkYXlzIGFnbwpUbyBoZWxwIHRoZW0gbWFrZSB0aGUgcmlnaHQgY2hvaWNlLCB3ZSBoYXZlIG1hZGUgYSBsaXN0IG9mIHRoZSBiZXN0IG1vYmlsZSBwb2tlciBzaXRlcyBhbmQgYXBwcyBjb21wYXRpYmxlIHdpdGggbWFueSBtb2JpbGUgc21hcnQgcGhvbmVzIGFuZCB0YWJsZXRzIHRoYXQgYXJlIHVzaW5nIGlPUyBvciBBbmRyb2lkLiBUaGUgbW9iaWxlIHBva2VyIHJvb21zIGFuZCBhcHBzIHdlIHJlY29tbWVuZCBhcmUgcGVyc29uYWxseSB0ZXN0ZWQgYnkgb3VyIHRlcm0gb2YgZXhwZXJ0cyBhbmQgdGhleSBhcmUgY29tcGxldGVseSBmdW5jdGlvbmFsIG9uIGlQaG9uZXMsIGlQYWRzIG9yIEFuZHJvaWQgU2Ftc3VuZyBhbW9uZyBvdGhlciBkZXZpY2VzLiAKSHVoLCB0aGUgZXh0cmEga2V5IGhvbGQgaW5zdGVhZCBvZiBhIGhhbmQgc3RyZXRjaCBpcyBhbiBpbnRlcmVzdGluZyB0cmFkZSBvZmYuIFRob3VnaCBJIHN0aWxsIHByb2JhYmx5IGJlIHdheSBtb3JlIGNvbWZvcnRhYmxlIGp1c3QgbGF6aWx5IHByZXNzaW5nIGEgc2luZ2xlIGJ1dHRvbiB0aGF0IGEgYml0IGZ1cnRoZXIgICBteSB3aG9sZSBoYW5kIHNoaWZ0cyB3aGVuIEkgc3RhcnQgZGVidWdnaW5nIGFuZCB0aGVyZSB3YWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFheSB0b28gbWFueSB3ZWlyZCBWaXN1YWwgU3R1ZGlvIG11bHRpIHN0cm9rZSBzaG9ydGN1dHMgdGhhdCBJIGJlIGFmcmFpZCB0byB0cmlnZ2VyIGlmIEkgc3RhcnRlZCB1c2luZyBGbi4uIApEb3VidGZ1bC4gV2hlcmUgdGhleSB3ZXJlIGZvdW5kIGRvZXNuIHNlZW0gYWNjZXNzaWJsZSBieSBhIHZlaGljbGUsIHNvIGhlIHdvdWxkIGhhdmUgdG8gaGF2ZSBjYXJyaWVkIHRoZW0gYmFjay4gUGx1cyBmYW1pbHkgYW5kIGZyaWVuZHMgd2VyZSBvdXQgc2VhcmNoaW5nIGFsbCBuaWdodCwgaXQgbGlrZWx5IGhlIHdvdWxkIGhhdmUgYmVlbiBjYXVnaHQgbW92aW5nIHRoZW0uIExFIGFsc28gZ2F2ZSBzb21lIHZlcnkgc3BlY2lmaWMgdGltZXMgYW5kIGhlIHdhcyBzZWVuIGJ5IHR3byBwZW9wbGUsIHNvIEkgZG91YnQgaGUgcmlzayByZXR1cm5pbmcuCkEgeW91bmcgbWFuIGlzIGxvc3QgaW4gbGlmZS4gSGUgZG9lc24gZW5qb3kgaGlzIGpvYiBvciB3aGVyZSBoZSBsaXZlcyBzbywgb24gYSB3aGltLCBoZSBkZWNpZGVzIHRvIGpvaW4gdGhlIGNsZXJneS4KSGUgaGFkIHRoZSB3ZWlnaHQgb2YgdGhlIHdvcmxkIG9uIGhpcyBzaG91bGRlcnMgYW5kIGhlIGhhZCB0byBtb3ZlIHZlcnkgcXVpY2tseS4iLiAKV2Ugc3BydW5nIGl0IG9uIG91ciBmYW5zLCBzaG92ZWQgYSB0cmFpbGVyIGluIHRoZWlyIGZlZWRzIGFuZCBzaW1wbHkgYXNrZWQgdGhlbSB0byBwYXkuIFdlIG92ZXJlc3RpbWF0ZWQgb3Vyc2VsdmVzOiBFdmVuIHRob3VnaCB0aGUgc2hvdyB3YXMgYmVsb3ZlZCBiZWhpbmQgdGhlIHBheSB3YWxsLCBpdCBjb252ZXJ0ZWQgbmV3IHN1YnNjcmliZXJzIHBvb3JseS5XaGVuIHdlIHNldCBvdXIgc2lnaHRzIG9uIGxhdW5jaGluZyBDb2xsZWdlSHVtb3IncyBjb21lZHkgc3Vic2NyaXB0aW9uIHNlcnZpY2UgRHJvcG91dCwgd2UgbmVlZGVkIGEgcGxhbiB0aGF0IGVhcm5lZCB0aGUgdHJ1c3Qgb2Ygb3VyIHNrZXB0aWNhbCBhdWRpZW5jZSBhbmQgZ290IHRoZW0gZXhjaXRlZCB0byBwYXkgZm9yIGNvbnRlbnQgdGhleSBhbHJlYWR5IHJlY2VpdmVkIGZvciBmcmVlLldpdGggdGhlc2Ugb2JqZWN0aXZlcywgd2UgbGF1bmNoZWQgYSBjYW1wYWlnbiBidWlsdCBhcm91bmQgYSBsb25ndGltZSBDb2xsZWdlSHVtb3IgSWxsdW1pbmF0aSBnYWcuIAo4ODhQb2tlciBoYXMgYSB2ZXJ5IG5pY2Ugd2VsY29tZSBib251cyBwYWNrYWdlLiAKQW5kIEkgYWRkIGludmVzdCBpbiBhIGdvb2Qgb25saW5lIHRyYWNrZXIuIApGaXJzdCB5b3Ugc2hvdWxkIGRlY2lkZSB3aGF0IHNvcnQgb2YgcG9rZXIgYXJlIHlvdSBnb2luZyB0byB0YWNrbGUgZmlyc3QuIHR3byBwbGF5ZXIgaG9sZCdlbSBpcyBwcmV0dHkgbXVjaCBzb2x2ZWQsIHRob3VnaCB0aGUgYmVzdCBodW1hbnMgc3RpbGwgcHV0IHVwIGEgcmVhbCBmaWdodCB3aXRoIHRoZSBiZXN0IEFJJ3MgYXZhaWxhYmxlLiBUaGUgQUkgaGFzIHRoZSBtYWluIGFkdmFudGFnZXMgb3ZlciBodW1hbnMgYnkgaGF2aW5nIGFuIHVubGltaXRlZCBmbGF3bGVzcyBtZW1vcnkgb2YgcGFzdCBoYW5kcywgZmxhd2xlc3MgYW5hbHlzaXMgb2YgdGhlIHBhdHRlcm5zIGJhc2VkIG9uIHRoYXQgYW5kIGFzIHRoZXkgYXJlIG1hY2hpbmVzLCB0aGV5IGRvbid0IHRpbHQgbGlrZSBhbG1vc3QgYWxsIGh1bWFucyBvY2Nhc2lvbmFsbHkgZG8uCllvdXIgY29tbWVudCBtYWRlIG1lIHRoaW5rIGFib3V0IGhvdyBESCBoYXMgYXBwcm9hY2hlZCByZWFsaXppbmcgd2hhdCBoZSBkaWQgYmFkbHkgYW5kIGhvdyBoZSBtYWRlIHRoaW5ncyBiZXR0ZXIuIEkgaGFkIGEgbWFqb3IgY29uY2VybiB3aGljaCBJIHZvaWNlZCB0byBvdXIgdGhlcmFwaXN0IHRoYXQgREggd2FzIGdvaW5nIHRvIHRyYW5zaXRpb24gZnJvbSBsaXZpbmcgaGlzIGxpZmUgdG8gbWFrZSBoaXMgbW90aGVyIGhhcHB5IHRvIGRvaW5nIHRoZSBzYW1lIHRvIG1lIGJlY2F1c2UgaGUgb25seSBrbm93cyBob3cgdG8gYmUgYSBzZXJ2YW50LiAKSSdtIHRyeWluZyB0byBkZXRlcm1pbmUgaWYgYSBoYW5kIGNhbiBiZSBhcnJhbmdlZCBpbiB0aGUgd2F5IGRlc2NyaWJlZCBhYm92ZS4gRm9yIGNlcnRhaW4gcmVhc29ucyBpdCBzaG91bGQgbm90IG9ubHkgYmUgYWJsZSB0byBkZWFsIHdpdGggMTQgYnV0IGFueSBudW1iZXIgb2YgdGlsZXMuIChUaGUgbmV4dCBzdGVwIHdvdWxkIGJlIHRvIGZpbmQgaG93IG1hbnkgdGlsZXMgbmVlZCB0byBiZSBleGNoYW5nZWQgdG8gYmUgYWJsZSB0byBjb21wbGV0ZSBhIGhhbmQuKQpUaGlzIGlzIHJlYXNvbmFibHkgYWNjdXJhdGUuIEEgY291cGxlIG9mIG90aGVyIHRob3VnaHRzLiBBIG1vdG9yY3ljbGUgY2FuIGJlIGJvdWdodCBmb3IgYWJvdXQgMy4wMDAuMDAwIDUuMDAwLjAwMCBpZiB5b3UgYXJlbiBwaWNreSBhbmQgZG9uIG1pbmQgYW4gb2xkZXIgYmlrZS4gWWVhcmx5IHJlZ2lzdHJhdGlvbiBzaG91bGQgYmUgYWJvdXQgUnAuIDMwMC4wMDAuIEhlYWx0aCBpbnN1cmFuY2UgY2FuIGJlIGEgYmlnIGNvc3QgaWYgeW91IG5vdCBjb21pbmcgZnJvbSBhIGNvdW50cnkgdGhhdCBjb3ZlcnMgYWxsIG9mIGl0cyBjaXRpemVucy4gRXZlbiBpZiB5b3UgYXJlLCBtYWtlIHN1cmUgdGhhdCB5b3VyIGNvdmVyYWdlIGlzIGdvb2QgaW4gQmFsaS4KSSBhZ3JlZSBJJ3ZlIHNlZW4gaGltIG9uIGVkZ2UgYSBsb3QgbGF0ZWx5LCBidXQgdGhlIG9ubHkgdGltZXMgaGUgYW5kIEkgaGF2ZSBoZWF0ZWRseSBhcmd1ZWQgd2Ugd2VyZSBhYmxlIHRvIGNvbWUgdG8gYW4gdW5kZXJzdGFuZGluZywgc28gSSBwZXJzb25hbGx5IGRvbid0IGhhdmUgYW4gaXNzdWUgd2l0aCBoaW0gbW9zdCBvZiB0aGUgdGltZS5HYXJiYWdlR2F0byAgMSBwb2ludCAgc3VibWl0dGVkIDIgZGF5cyBhZ29Ob3csIEknbSBubyBleHBlcnQsIGJ1dCBJIGRvIHdhdGNoIGFuIGF3ZnVsIGxvdCBvZiA5MCBEYXkgRmlhbmMsIGFuZCBJJ20gc29ycnkgYnV0IGlmIHRoZXJlIGhhcyBiZWVuIG1vbmV5IGludm9sdmVkIHRoZW4gaXQgc291bmRzIGV4YWN0bHkgbGlrZSBhIGxvdCBvZiB0aGUgZm9yZWlnbiBmaWFuYyBzY2Ftcy5IYXZlIHlvdSBzZW50IGhlciBhbnkgbW9uZXkgb3IgZ29vZHMsIG9yIG1heWJlIHBhaWQgZm9yIGEgc2VydmljZSBpbiBTd2VkZW4gZm9yIGhlcj8gV2hlbiB5b3UgYm91Z2h0IHBsYW5lIHRpY2tldHMgZGlkIHlvdSBidXkgaGVyIG9uZSB3aXRoIGhlciBuYW1lIG9uIGl0IGluc3RlYWQgb2YgaXQgYmVpbmcgaW4geW91ciBuYW1lIChiZWNhdXNlIHNoZSBjYW4gcmV0dXJuIGl0IGZvciBmbGlnaHQgY3JlZGl0IGFuZCBzb21ldGltZXMgY2FzaCBpZiB0aGUgdGlja2V0IGlzIGluIGhlciBuYW1lKT9HYXJiYWdlR2F0byAgMSBwb2ludCAgc3VibWl0dGVkIDIgZGF5cyBhZ29XZWxsIHRoZW4gdGhhdCBtYWtlcyBpdCBsZXNzIGluc2lkaW91cy4gCkkgaGF2ZSBvcGVuZWQgZG96ZW5zIG9mIHRob3VzYW5kcyBvZiBwYW1waGxldHMgb3ZlciB0aGUgeWVhcnMsIGFuZCB1c3VhbGx5IHRoZSBvbmx5IHRoaW5nIHRoYXQgaGFwcGVucyBpcyB0aGF0IHRoZSBwYW1waGxldCBvcGVucy4gClRoYXQgc3Vja3MgdGhhdCB5b3UgZ3V5cyBoYXZlIHRvIGRvIHRoYXQgd2l0aCB5b3VyIHdhdGVyLCBkZWZpbml0ZWx5IG5vdCBub3JtYWwuIFdoYXQga2luZCBvZiBwYXN0dXJlcyBkbyB0aGV5IGhhdmU/IFNvbWUgcmVnaW9ucyBhcm91bmQgdGhlIHdvcmxkICh3aG8gZG9uJ3QgZ3JhemUgcHJvcGVybHkpIHJlcXVpcmUgaGlnaCBsZXZlbHMgb2Ygbml0cm9nZW4gZmVydGlsaXplciBhbG9uZyB3aXRoIGRlZ3JhZGVkIHNvaWxzIHRoaXMgY291bGQgYmUgb25lIG90aGVyIHJlYXNvbiBpdCdzIGdldHRpbmcgaW4geW91ciB3YXRlci4uIApUaGUgU3R1ZGVudCBFbnRyZXByZW5ldXIgTmF0aW9uYWwgQ2hhbXBpb24gaXMgbmFtZWQgdGhlICJTdHVkZW50IEVudHJlcHJlbmV1ciBvZiB0aGUgWWVhciIsIHRha2luZyBob21lIHRoZSBDSUJDIEN1cCBhbmQgYSAkMTAsMDAwIGNhc2ggcHJpemUuIApNYW55IHBlb3BsZSBoYXZlIHdhdGNoZWQgVGV4YXMgSG9sZGVtIHRvdXJuYW1lbnRzIG9uIHRlbGV2aXNpb24gYW5kIGl0IGxvb2tzIGVhc3kgdG8gcGxheS4gSG93ZXZlciBiZWZvcmUgeW91IHJhY2UgZG93biB0byB0aGUgY2FzaW5vIGFuZCBzaWduIHVwIGZvciBhIGhpZ2ggc3Rha2VzIHRvdXJuYW1lbnQgeW91IG5lZWQgdG8gbGVhcm4gdGhlIGJhc2ljcyBvZiB0aGUgZ2FtZSBhbmQgZ2V0IHNvbWUgcGxheWluZyBleHBlcmllbmNlIGluIGxvdyBsaW1pdCBnYW1lcy4gVGhhdCBtZWFucyB0aGF0IGF0IGFueSB0aW1lIGEgcGxheWVyIGNhbiBiZXQgYWxsIG9mIGhpcyBjaGlwcy4gVGhpcyBpcyBhIGdyZWF0IGZvcm1hdCBmb3IgdG91cm5hbWVudHMgYnV0IGFzIGEgYmVnaW5uaW5nIHBsYXllciB5b3Ugd2lsbCB3YW50IHRvIGZpcnN0IGxlYXJuIHRvIHBsYXkgTGltaXQgVGV4YXMgSG9sZCdlbS4gTGltaXQgZ2FtZXMgaGF2ZSBzdHJ1Y3R1cmVkIGJldHRpbmcgcm91bmRzIGFuZCB5b3UgYXJlIGxpbWl0ZWQgdG8gdGhlIGFtb3VudCBvZiBtb25leSB5b3UgY2FuIGJldCBkdXJpbmcgZWFjaCByb3VuZC4gTW9yZSBwcmVjaXNlbHkgeW91IHdpbGwgd2FudCB0byBwbGF5IExvdyBMaW1pdCBUZXhhcyBIb2xkJ2VtIGFzIHlvdSBsZWFybiB0aGUgZ2FtZS4gU29tZSBvZiB0aGUgbG93IGxpbWl0IGdhbWVzIHlvdSB3aWxsIGZpbmQgaW4gdGhlIGNhcmRyb29tIGFyZSBoYXZlIGEgYmV0dGluZyBzdHJ1Y3R1cmUgb2YgJDIvNCwgJDMvNiAkNC84LiBBZnRlciB5b3UgZ2FpbiBleHBlcmllbmNlIHlvdSBjYW4gbW92ZSB1cCB0aGUgaGlnaGVyIGxpbWl0cyBvciBObyBMaW1pdCBpZiB5b3UgZGVzaXJlLCBidXQgeW91IG11c3QgbGVhcm4gdG8gd2FsayBiZWZvcmUgeW91IGNhbiBydW4uIExldCBtZSBleHBsYWluIHRoZSBnYW1lIGFuZCB0aGVuIGdpdmUgeW91IHNvbWUgd2lubmluZyB0aXBzIHRvIGdldCBzdGFydGVkLgpJZiBoZSBpcyBiZXR0ZXIgdGhhbiBhdCBsZWFzdCAxLzMgb2YgdGhlIHRlYW0sIGxldCBoaW0gam9pbi4gCkkgbGl2ZSBwcmV0dHkgY2xvc2UgdG8gc29tZSBMQSBjYXNpbm9zLiAKV2hpbGUgbWFueSBwZW9wbGUgbWlnaHQgZHJlYW0gb2Ygc3dpbW1pbmcgd2l0aCBvY2VhbiBjcmVhdHVyZXMsIERveWxlIHNhaWQgdGhpcyBpbmNpZGVudCBpcyBhIGZpcnN0IGZvciB0aGUgYXF1YXJpdW0uCkkgZGVjaWRlZCBub3QgdG8gYXR0ZW5kIHRoZSBmdW5lcmFsIGFzIHdlIGhhZCBub3Qgc2VlbiBvciBzcG9rZW4gdG8gZWFjaCBvdGhlciBpbiB5ZWFycy4gSSBzZW50IG15IGNvbmRvbGVuY2UgdG8gaGlzIGZhbWlseSBhbmQgZnJpZW5kcy4gCkkgaGFkIGtub3duIHdoYXQgSSBjb3VsZCBkbyBzb21lIHllYXJzIGJlZm9yZSBJIG1ldCBoZXIgYnV0IEkga25ldyBpdCB3b3VsZCBjaGVhcGVuIHRoZSBmZWVsaW5nIGlmIEkgZHJldyBoZXIuIApUaGVyZSdzIGEgYmlnIG11cmFsIG9mIGEgbGlvbiBpbiBvbmUgc3BvdCwgYW5kIHBlb3BsZSBhcmUgbGluZWQgdXAgd2FpdGluZyB0byB0YWtlIHNlbGZpZXMgb3IgaGF2ZSB0aGVpciBwaG90b3MgdGFrZW4gaW4gZnJvbnQgb2YgdGhlIGxpb24uIEEgZ3JvdXAgbGlrZSB0aGlzIGdldHMgdGhlaXIgdHVybiBhbmQgcHJvY2VlZHMgdG8gdGFrZSBzZWxmaWUgYWZ0ZXIgc2VsZmllIGZvciBvdmVyIGEgbWludXRlLCBjaGFuZ2luZyB0aGVpciBwb3NlcywgbWFraW5nIGNyaW5nZXkgZmFrZSBzbWlsZSBhZnRlciBmYWtlIHNtaWxlLiAKVGhlIG1vc3QgaW1wb3J0YW50IGx5cmljcyBvZiBhbnkgVmFtcGlyZSBXZWVrZW5kIHNvbmcgc2hlZHMgdGhlc2UgcHJldGVuc2VzIGFuZCBjdXRzIHRvIHRoZSBwb2ludCAgIGl0J3MgbW9zdCBldmlkZW50IG9uIHRoZSBiYWNrIGhhbGYgb2YgQ29udHJhIGFuZCBhbGwgb2YgTVZPVEMuIEluIERpcGxvbWF0J3MgU29uLCB0aGUgY2VudHJhbCBseXJpY3MgYXJlIHRoZSBsaW5lIHRoYXQgUm9zdGFtIHNpbmdzICAgIkkga25vdyB5b3UnbGwgc2F5IEknbSBub3QgZG9pbmcgaXQgcmlnaHQsIGJ1dCB0aGlzIGlzIGhvdyBJIHdhbnQgaXQvSSBjYW4ndCBnbyBiYWNrIHRvIGhvdyBJIGZlbHQgYmVmb3JlIi4gTm8gcmVmZXJlbmNlcywganVzdCBSb3N0YW0gY29taW5nIHRvIHRlcm1zIHdpdGggaGlzIHNleHVhbGl0eS4gCkZvciBhIG1vcmUgZm9ybWFsIGZlZWwsIHRoZSBzbWFsbGVyIEludGVydmFsbG8gKHByaWNlIG9uIHJlcXVlc3QpIHdpdGggaXRzIGRpYW1vbmQgc2hhcGVkIGNhc2UgcGVyZmVjdGx5IGJyaWRnZXMgdGhlIGdhcCBiZXR3ZWVuIGNvZmZlZSBhbmQgZ2FtZXMgdGFibGUuIENIUklTVElOQSBPSExZIEVWQU5TLiAKSmUgbmUgc2F1cmFpcyBwYXNzZXIgbWEgdmllIGRlIGNsaWJhdGFpcmUgZW4gY3Vpc2luZS4uIApIZXIgcmVzZWFyY2ggaW4gdGhlIGhpc3Rvcnkgb2YgZHJlc3NoYXMgZm9jdXNlZCBvbiB0aGUgaW50ZXJzZWN0aW9ucyBiZXR3ZWVuZmFzaGlvbmFibGUgYW5kIHRyYWRpdGlvbmFsIGRyZXNzIGFzIHdlbGwgYXN0aGUgZ2xvYmFsIHJlYWNoIG9mIHRoZSBmYXNoaW9uIGluZHVzdHJ5LiBTaGVhbHNvIHN0dWRpZXMgdGhlIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIGV2b2x2aW5nZmFzaGlvbmFibGUgYWVzdGhldGljcyBhbmQgdGhlIHVuZGVybHlpbmdmb3JjZXMgb2YgZWNvbm9taWMgYW5kIHBvbGl0aWNhbCBjaGFuZ2UuIApKdXN0aWNlIGluIG15IHZpZXcgc2hvdWxkbiBiZSBhYm91dCBhbiBleWUgZm9yIGFuIGV5ZSAgIGl0IHNob3VsZCBiZSBhYm91dCBwcmV2ZW50aW9uIChkZXRlcnJlbmNlKSBhbmQgcmVoYWJpbGl0YXRpb24gb2Ygb2ZmZW5kZXJzLiBXZSBiZXR0ZXIgdGhhbiBwZXR0eSB2ZW5nZWFuY2UgYnV0IHRoYXQgbm90IHRvIHNheSBJIHdvdWxkbiB3YW50IGJsb29kIGlmIHNvbWVvbmUgaGFybWVkIG15IGZhbWlseS4gVGhhdCByZWFjdGlvbiwgaG93ZXZlciB1bmRlcnN0YW5kYWJsZSBpdCBtYXkgYmUsIGlzIG1pc2d1aWRlZCBhbmQgZGFtYWdpbmcgdG8gY2l2aWwgc29jaWV0eSBpZiB3ZSBhY3Qgb24gaXQuLiAKVGhlIGp1ZGdlIGFja25vd2xlZGdlZCB0aGUgdGF4cGF5ZXIgbmVlZGVkIGNoaWxkIGNhcmUgZm9yIGhlciBzb24gc28gc2hlIGNvdWxkIHdvcmssIHRoZSBqdWRnZSBzaW1wbHkgd2FzIG5vdCBjb252aW5jZWQgKHRoZSBjYXJlZ2l2ZXJzKSBwcm92aWRlZCBuZWFybHkgYXMgbXVjaCBjaGlsZGNhcmUgYXMgc2hlIGNsYWltcyB0aGV5IGRpZCwgb3IgdGhhdCBzaGUgcGFpZCB0aGVtIGFueXRoaW5nIGNsb3NlIHRvIHRoZSBhbW91bnRzIHNoZSBjbGFpbWVkIHNoZSBkaWQuLiAKVGhleSBrbm93IHdoYXQgY2FyZHMgdGhleSBoYXZlLCBidXQgdGhleSBkb24ga25vdyB3aGF0IGNhcmRzIGFyZSBjb21pbmcuLiAKSGUgaXNvbGF0ZWQgbWUgZnJvbSBteSBmcmllbmRzIGFuZCBmYW1pbHkgYW5kIG1hZGUgbWUgc2NhcmVkIGFuZCBtaXNlcmFibGUgYWxsIHRoZSB0aW1lLiAKU2hvd2luZyBraW5kbmVzcyB0byBraWRzIGRvZXMgbm90IG1lYW4gd2Ugc2VjcmV0bHkgZ2l2aW5nIGluIHRvIHNvbWUgbXlzdGljYWwgbWF0ZXJuYWwgZm9yY2UgdGhhdCBwcm92ZXMgZGVlcCBkb3duIGFsbCB3b21lbiByZWFsbHkgd2FudCBraWRzLiBHVEZPdXR0YSBoZXJlIHdpdGggdGhhdC4gCk9uZSBvZiB0aGUgcmVhc29ucyB0aGUgam5hbmRleiBpc3N1ZSB3YXMgcGFydGljdWxhcmx5IGRpZmZpY3VsdCwgd2FzIGJlY2F1c2UgSSB2aWV3ZWQgRmVybmFuZG8gYXMgYSBmcmllbmQuIEkgcmVwb3N0ZWQgYSBidW5jaCBvZiBoaXMgY29udGVudCBhY3Jvc3MgbXkgcGxhdGZvcm1zLiBJIGhhZCBoaW0gb24gbXkgeW91dHViZSBjaGFubmVsIHRvIGhlbHAgaGltIGJ1aWxkIGFuIGF1ZGllbmNlLiAKMTk4NSB3YXMgYSByZWFsbHkgd29ybiBjb3B5Li4gCldoZW4geW91IHNlZSB0aGF0LCB5b3Ugd29uZGVyLCBkb2VzIHRoYXQgbWVhbiBmb3IgaGltPyBQZW9wbGUgcmVhY3QgZGlmZmVyZW50bHkgaW4gdGhvc2Ugc2l0dWF0aW9ucy4gU29tZSB3aWxsIHNodXQgZG93biBtb3JlIGFuZCBiZSBwcm90ZWN0aXZlLCBzb21lIHdpbGwgYmUgbW9yZSBhZ2dyZXNzaXZlLiBTbyB5b3UgaGF2ZSB0byBmaWd1cmUgb3V0IGhvdyB0aGF0J3MgaGFwcGVuaW5nLiAKVU5BRCBzdHVkZW50cyBtYXkgYWxzbyB1c2UgdGhlIGZhY2lsaXRpZXMgYXQgVW5pdmVyc2l0eSBvZiBEZXJieSB0aGFua3MgdG8gYW4gYWdyZWVkIHBhcnRuZXJzaGlwLgpUaGUgbmVvbmF0YWwgaW50ZW5zaXZlIGNhcmUgdW5pdCBhdCBBbGwgQ2hpbGRyZW4ncyBIb3NwaXRhbCB3YXMgYSB3b3JsZCBvdXQgb2Ygc2NpZW5jZSBmaWN0aW9uLiAKWW91IG5lZWQgdG8gbWFrZSBmcmllbmRzLCBtYWtlIHNvbWUgZW5lbWllcywgbWF5YmUgZG8gYSBiYWNrc3RhYiwgaW4gb3JkZXIgdG8gZ2V0IHRvIDEwIFZpY3RvcnkgUG9pbnRzIGZpcnN0LiAKTUlMIGFuZCBJIGRvbid0IGdldCBhbG9uZyBhdCBhbGwgKGZvciB5ZWFycyBhbmQgeWVhcnMpIHNvIHRoaXMgdHJpcCB3YXMgb24gaGVyICJob21lIHR1cmYiIEkgd2FzIGJlaGF2aW5nIGFzIGJlc3QgSSBjb3VsZCBidXQgd291bGQgbm90IHJvbGwgb3ZlciBhbmQgY2hhbmdlIHRoaW5ncyBqdXN0IGJlY2F1c2Ugc2hlIHdhbnRlZC4gKFNoZSB0cmllZCBwdXNoaW5nIGJvdW5kYXJpZXMgd2l0aCBraWRzIHJ1bGVzIGFuZCB0cmllZCB0byBwdWxsICJidXQgSSdtIGdyYW5kbWEgYW5kIHRoZSBtYXRyaWFyY2giIHRoYXQgZG9uJ3QgZmx5IHdpdGggbWUgYXQgYWxsLgpVbnJhdmVsZWQgYSBjb2xvdXJmdWwgY29sbGVjdGlvbiB0aGF0IGNvdWxkIGhhdmUgd29ya2VkIGJldHRlciB3aXRoIGEgc2lnbmlmaWNhbnQgc2lnbmF0dXJlLgpBZGp1c3QgYnkgcGxheWluZyBhIGJpdCB0aWdodGVyIGFuZCBleHRyYWN0aW5nIG1heCB2YWx1ZSBmcm9tIHRoZW0gb24gdGhlIGZpcnN0IHR3byBzdHJlZXRzLiBJZiB5b3UgaW4gcG9zaXRpb24gYW5kIHRoZXkgY2hlY2sgdG8geW91IGFmdGVyIGEgcG90ZW50aWFsIGRyYXcgaGl0cyBvbiB0aGUgcml2ZXIsIHlvdSB1c3VhbGx5IHNob3VsZCBjaGVjayBiYWNrLiBUaGV5IHdpbGwgb2Z0ZW4gY2hlY2sgcmFpc2UgZWl0aGVyIHRvIHNsb3cgcGxheSB0aGUgYmlnIGhhbmQgb3IgYXR0ZW1wdCBhIGJsdWZmIHdpdGggYWlyLiAKSGUgZ290IGFsbCBjb21wZXRpdGl2ZSBhbmQgdGhlbiBJIGhhZCB0byBkZWFsIHdpdGggaGlzIGRydW5rIGFzcyBmb3IgYW4gaG91ci4gCiJBbGVqYW5kcm8iIGZyb20gaGVyIGxhdGVzdCBhbGJ1bSBUaGUgRmFtZSBNb25zdGVyLiBBdCB0aGUgZW5kIG9mIHRoZSB2aWRlbyBCZXlvbmMgYW5kIEdhZ2Egc2F5IHRoZXkgYXJlIGdvaW5nIHRvIHJ1biBhd2F5IGZhci4gR2FnYSBsZWF2ZXMgdG8gSXRhbHksIHdoZXJlICJBbGVqYW5kcm8iIHdpbGwgYmUgc2hvdCBhbmQgQmV5b25jIGVpdGhlciB3aWxsIGRpZSBvciBnbyB0byBhbm90aGVyIGNvdW50cnksIGRlcGVuZGluZyBvbiBpZiB0aGV5IGRlY2lkZSB0byBkbyBhbm90aGVyIHNvbmcgd2l0aCBlYWNoIG90aGVyLiAoRnVsbCBBbnN3ZXIpClRoZXJlIGlzIGEgZGVsaWNpb3VzIGlyb255IGhlcmU6IHRoZXNlIGNvcnBvcmF0ZSBtZW4gaGF2ZSBiZWVuIHVzZWQgdG8gYmVpbmcgdGhlIHJ1bGluZyBjbGFzcyBhbGwgdGhlaXIgcHJvZmVzc2lvbmFsIGxpZmUgYnV0IG5vdyBhcmUgZ29pbmcgdG8gYmUgdGhlIHBlcnNlY3V0ZWQgbWlub3JpdHkuIApXaGF0IG1ha2VzIGl0IGNvdW50IGFzIEQgYXJ0PyBEb2VzIGl0IGhhdmUgdG8gaGF2ZSBzb21ldGhpbmcgZXhjbHVzaXZlIHRvIEQgbGlrZSBhIGJlaG9sZGVyPyBEb2VzIGl0IGhhdmUgdG8gaGF2ZSB0aGUgcGhyYXNlLCAidGhpcyBpcyBmcm9tIG15IEQgY2FtcGFpZ24iIGluIHRoZSBkZXNjcmlwdGlvbj8gV2hhdCBpZiBpdCBmcm9tIGEgZ2FtZSB0aGF0IHVzZXMgRCBydWxlcyBidXQgaW4gYSBjdXN0b20gc2V0dGluZz8uIApUaGUgdGltZSBpbiB3cmFwcyBJIHdhcyBjb21pbmcgb3V0IG9mIHRoZSBob2xlIG9mIGEgc3F1YXQgYW5kIGZlbHQgYm90aCBoYW1zdHJpbmcgInBvcCIgZm9yIGxhY2sgb2YgYSBiZXR0ZXIgdGVybS4gCkxvYWRzIG9mIGZ1bi4gCkZyZWVyb2xscyBvZmZlciBuZXcgcGxheWVycyBhIGZhbnRhc3RpYyBvcHBvcnR1bml0eSB0byBtYWtlIHRoZWlyIGZpcnN0IHN0ZXAgaW4gdGhlIHRvdXJuYW1lbnRzIHdvcmxkLCBhbmQgYWxzbyBhIGNoYW5jZSB0byBtYWtlIG1vbmV5ISBFeHBlcmllbmNlZCBwbGF5ZXJzIGFsc28gbG92ZSBmcmVlcm9sbHMgICBhZnRlciBhbGwsIHRoZXJlIGlzIG5vIHJpc2sgb3IgZW50cnkgZmVlLCBidXQgdGhlcmUncyBzdGlsbCBhIHByaXplIHBvb2wgdG8gZ3JhYiFBbm90aGVyIGx1Y3JhdGl2ZSByZWFzb24gdG8gc3RhcnQgcGxheWluZyBhdCB0b3VybmFtZW50cyBpcyB0aGUgYWRkZWQgdG91cm5hbWVudHMsIHdoaWNoIGFyZSBhbHNvIGNhbGxlZCBndWFyYW50ZWVkIHRvdXJuYW1lbnRzLiBJbiBhIHJlZ3VsYXIgdG91cm5hbWVudCB0aGUgcG90IGluY2x1ZGVzIHRoZSBtb25leSB0aGF0IHBsYXllcnMgYnJpbmcgaW4gd2l0aCB0aGVpciBidXkgaW4sIHNvIHRoZSBwb29sIGlzIGluIHByb3BvcnRpb24gb2YgdGhlIGVudHJ5IGZlZSAgIFRoZSBsYXJnZXIgdGhlIGJ1eSBpbiwgdGhlIGxhcmdlciB0aGUgcHJpemUgcG9vbC4gCkNyZW1hdGlvbiBoYXMgdGFrZW4gcGxhY2UgYW5kIEJyZW5kYSB3aWxsIGJlIGludGVycmVkIGluIENhbGdhcnkgYXQgYSBsYXRlciBkYXRlLiAKR29uZyBIeW8gSmluOiAiVGhlIEdyZWF0ZXN0IExvdmUiIHdhcyBteSBwZXJzb25hbCBmYXZvcml0ZSBmcm9tIGhlciwgIlRoZSBNYXN0ZXIgU3VuIiBpcyB0aGUgb25lIGV2ZXJ5b25lIGVsc2UgbGlrZXMgdGhvdWdoLgpHZWx1a2tpZyBtYWFyIHdhcyBlciB3YXQgdmVyZGVyIG5vZyBlZW4gTWNEb25hbGRzISBPbSBrd2FydCBuYSAxMCB3YXJlbiB3ZSB0ZXJ1ZyBvcCBvbnplIGhvdGVsa2FtZXIgaGV0IHdhcyBub2cgYWx0aWpkIGxpY2h0IGJ1aXRlbiEuIApJIG5hdHVyYWxseSBrbm93IHRoYXQgSSBhbSByZXNwb25zaWJsZSBmb3IgdGhlIGtpZHMsIGdldHRpbmcgdGhlbSB0byBhbmQgZnJvbSBzY2hvb2wgZGF5Y2FyZSwgZ2V0dGluZyB0aGVtIHJlYWR5LCBldGMuIFRoaXMgbWFrZXMgaXQgcmVhbGx5IGhhcmQgZm9yIGEgd29tYW4gdG8gYmUgaGVyIGJlc3QgYmVjYXVzZSB3ZSBhcmUgZXhjZXB0ZWQgdG8gZG8gc28gbXVjaC4gQmUgc28gZXh0cmEsIHdvcmssIHNjaG9vbCBiZSBhIGdvb2QgbW9tLCBhbmQgYmFsYW5jZSBpdCBhbGwgd2l0aCBncmFjZS4uIApTYW0gZ29lcyB0byB0aGUgYmFyIGhlIGNyZWF0ZWQgaW4gaGlzIGxpdmluZyByb29tLCB0aGVuIHNldHMgaGlzIGF3YXJkIHVwb24gaXQuIEhlIHBvdXJzIGhpbXNlbGYgYSBicmFuZHkgYW5kIHNpdHMgaW4gaGlzIGNvbWZ5IHJlY2xpbmVyLiBIZSBwdXQgaGlzIHRyb3BoeSBkb3duIG9uIHRoZSBlbmQgdGFibGUgc28gaGUgY291bGQgYWRtaXJlIGl0LiBIZSBsb29rcyBhIG1vbWVudCBhdCBoaXMgbmljZWx5IGNvbG9yZWQgZ3JlZW4gd2FsbCBhbmQgdGhlbiB0byBoaXMgdmVyeSB3aGl0ZSBjZWlsaW5nIGFuZCBsZXRzIG91dCBhIGxvbmcgYnJlYXRoLiBIZSBjbG9zZXMgaGlzIGV5ZXMgZm9yIGp1c3QgYSBicmllZiBtaW51dGUgd2hlbiBoZSBoZWFycyB0aGUgZG9vciBiZWxsIHJpbmdpbmcuCk1vb2R5YmlnYm9vdHk5NCAgOCBwb2ludHMgIHN1Ym1pdHRlZCAxIHllYXIgYWdvCkkgc3RhcnRlZCB2b2NhbCB0cmFpbmluZyBhYm91dCB0d28gZGF5cyBhZnRlciBteSBzaGVsbCBjcmFja2VkLiBJIHdhcyBvdXQgYW5kIHByZXNlbnRpbmcgZmVtYWxlIGZ1bGwgdGltZSByZWFsbHkgc29vbiBhZnRlci4gU28gSSBnb3QgbG90cyBvZiBwcmFjdGljZS4KUGxheWluZyBMZWdvLiAKU3VyIGxlcyBtaWxsaWVycyBkZSBzdGF0aW9ucyBtdG9yb2xvZ2lxdWVzIGQnRW52aXJvbm5lbWVudCBDYW5hZGEsIG5vdXMgZW4gYXZvbnMgaWRlbnRpZmkgNjMgcXVpIGRpc3Bvc2VudCBkZSBtZXN1cmVzIGhpc3RvcmlxdWVzIGNvbXBsdGVzIHJlbW9udGFudCBhdSBtb2lucyBhdXggYW5uZXMgNzAuCkZvciB0aG9zZSB0cmFuc2FjdGlvbnMgd2l0aCBhIHJlcG9ydGVkIHNlbGxpbmcgcHJpY2UsIHRoZSBhdmVyYWdlIHNlbGxpbmcgcHJpY2UgcGVyIHJvb20gaW5jcmVhc2VkIGEgc2l6ZWFibGUgNzclIGZyb20gJDU2LDI5MC9yb29tIGluIEgxIDIwMDkgdG8gJDk5LDQ4MCBpbiBIMSAyMDEwLiAKQXNzdW1pbmcgdGhlIHRyZW5kcyBzZWVuIGFyb3VuZCB0aGUgd29ybGQgYXMgcG9vciBhcmVhcyBtb2Rlcm5pemUgY2FuIGJlIGFwcGxpZWQgdG8gdGhlIGFyZWFzIHN0aWxsIG1vZGVybml6aW5nLiBUaGUgdHJlbmQgaXMgdmVyeSBzdHJvbmcsIGFzIGNvbmRpdGlvbnMgaW1wcm92ZSB5b3UgaGF2ZSBhIGdlbmVyYXRpb24gdGhhdCBoYXMgbWFueSBtYW55IGNoaWxkcmVuIGFuZCBiYXNpY2FsbHkgYWxsIG9mIHRoZW0gc3Vydml2ZS4gClN0YXBsZXMgdQpBIGNvbXBldGl0aXZlIHBsYXllciB3b3VsZCBrbm93IHRoYXQgdGhlIGluZGl2aWR1YWwgcmFuayB5b3UgaGF2ZSBkb2VzbiBtYXR0ZXIuIEEgcGVhayBpbiBsYWRkZXIgcmFuayBpcyBtb3JlIHJlZmxlY3RpdmUgb2YgZ29vZCB2YXJpYW5jZSB0aGFuIGdvb2QgcGxheS4gClRoZSBib2FyZCBvZiB0aGUgQ29sb3JhZG8gRGl2aXNpb24gb2YgUHJpdmF0ZSBPY2N1cGF0aW9uYWwgU2Nob29scyBpbiBlYXJseSBKdW5lIHJlY29tbWVuZGVkIHRoYXQgdGhlIEJvdWxkZXIgQ29sbGVnZSBvZiBNYXNzYWdlIFRoZXJhcHkgc2h1dCBkb3duLCBjaXRpbmcgbnVtZXJvdXMgaXNzdWVzIHdpdGggaXRzIGZpbmFuY2lhbCBoZWFsdGguIERlcGFydG1lbnQgb2YgRWR1Y2F0aW9uIGhhZCBpbmZvcm1lZCB0aGUgc2Nob29sIGluIEphbnVhcnkgdGhhdCBpdCBmYWlsZWQgdG8gbWVldCBmaW5hbmNpYWwgcmVzcG9uc2liaWxpdHkgc3RhbmRhcmRzIHJlcXVpcmVkIG9mIGluc3RpdHV0aW9ucyB0aGF0IGFjY2VzcyBmZWRlcmFsIHN0dWRlbnQgbG9hbiBmdW5kaW5nLiBUaGUgZGVwYXJ0bWVudCBwdXQgdGhlIGNvbGxlZ2Ugb24gaGVpZ2h0ZW5lZCBmaW5hbmNpYWwgbW9uaXRvcmluZy4KSXQgd2FzIG5vdGljZWFibGUgdGhhdCB0aGlzIHllYXIgSXZleSBza2lwcGVkIHRoZSBtYWluIGV2ZW50IGluIHRoZSBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgICB0aGUgZXF1aXZhbGVudCBvZiBSb2dlciBGZWRlcmVyIHRha2luZyBhIGZvcnRuaWdodCBvZmYgZHVyaW5nIFdpbWJsZWRvbiAgIGFuZCBhbHNvIG1vdGhiYWxsZWQgaGlzIHNsaWNrIEl2ZXkgTGVhZ3VlIHBva2VyIHNjaG9vbCB3ZWJzaXRlLgpBZ3JlZWQgcGVvcGxlIGFyZSBpZ25vcmFudCwgdGhhdCBpc24ganVzdCB0aGUgb25seSByZWFzb24gdGhvdWdoLiBQZW9wbGUgZG8gbm90IGxpa2UgZG9pbmcgdGhpbmdzIGZvciB0aGVtc2VsdmVzLiBJIGRvIGFncmVlIHRoZSBlbmQgcmVzdWx0IG9mIGFsbCBvZiB0aGlzIG1lc3Mgd2lsbCBiZSBwZWVyIHRvIHBlZXIuIApOYW5ueSBpbiBSb2QgQ292bGluIHRyaWFsIHJlY2FsbHMgdHJhZ2ljIG1vbWVudCB2aWN0aW0gd2FzIGZvdW5kCkkgZG9uIGNhcmUgaWYgeW91IGJlbGlldmUgbWUuIApJIGFtIHRhbGtpbmcgYWJvdXQgcG9zdHMgdGhhdCBnZXQgZmxvb2RlZCB3aXRoIGh1bmRyZWRzIG9mICJOVEEuIHlvdSBzaG91bGQgbGVhdmUgaGVyIiBjb21tZW50cyBzaW5jZSB0aGVzZSBhcmUgbW9yZSBsaWtlbHkgdG8gc3dheSBwb3N0ZXJzLiBBIHBvc3Qgd2l0aCAzIGNvbW1lbnRzIHNheWluZyB0aGF0IGhhcyBhbG1vc3Qgbm8gY2hhbmNlIHRvIHN3YXkgc29tZW9uZS4gVXNlIGp1c3QgYW4gb3VuY2Ugb2YgdGhhdCBicmFpbiB0byByZWFsaXplIHdoYXQgaXMgYW5kIGlzIG5vdCBpbmZsdWVudGlhbCB0byBvbmVzIGRlY2lzaW9uIG1ha2luZyBwcm9jZXNzZXMsIEkgYmVnZ2luZyB5b3UuCkhpcyBtb3RoZXIgaXMgaGFsZiBBZnJpY2FuIEFtZXJpY2FuIGFuZCBoYWxmIENoaW5lc2UsIHdoaWxlIGhpcyBkYWQgaXMgYW4gQWZyaWNhbiBBbWVyaWNhbi4gQnkgY2hvb3NpbmcgdG8gaW5jbHVkZSBteXRoIDExIGluIGhlciBsaXN0LCBidXQgYnkgYWRtaXNzaW9uIGNob29zaW5nIHRvIG5vdCBhbnN3ZXIgdGhlIHF1ZXN0aW9uLCBlaXRoZXIgb3V0IG9mIGN1dGVuZXNzIG9yIHRyeWluZyB0byBrZWVwIHRoaXMgYXJ0aWNsZSBub24gUiByYXRlZCwgc2hlIGluIGZhY3QsIGxlYXZlcyB0aGUgc29mdCBpbXByZXNzaW9uIHRoYXQgdGhlIHN0ZXJlb3R5cGUgbWF5YmUgdHJ1ZS4gCkluIHRoZSBlbmQsIGlmIHRoYXQncyB5b3VyIGN1bHR1cmUgdGhlbiB0aGF0J3MgeW91ciBjdWx0dXJlLCBub3QgbWluZS4gCldoaWxlIHRlY2huaWNhbGx5IGxpcXVpZCwgaGFzIHZlcnkgaGlnaCB2aXNjb3NpdHkgYW5kIGNhbiBtaXggcXVpY2tseSB3aXRoLCBzYXksIHdhdGVyIGV2ZW4gaWYgaXMgaXMgc29sdWJsZSBpbiB3YXRlci4gClRoZSByZXN0IG9mIHdoYXQgaGFwcGVuZWQgaXMgdW5jbGVhciBidXQgSSBlbmRlZCB1cCBpbiB0aGUgZmFyIHJpZ2h0IGxhbmUsIHN0YXJpbmcgYXQgb25jb21pbmcgdHJhZmZpYyAobXkgY2FyIGhhZCBkb25lIGEgMTgwKSBhbmQgYWxsIG9mIHVzIHdlcmUgYXQgYSBkZWFkIHN0b3AuIFNvbWVob3cgSSBoaXQgbm90aGluZyBhbmQgbm8gb25lIGhpdCBtZS4gSXQgd2FzIGp1c3QgbWUgc3RhcmluZyBhdCBhIGxpbmUgb2YgY2FycywgYWxsIG9mIHVzIHdpdGggb3VyIG1vdXRocyBoYW5naW5nIG9wZW4gbGlrZSBXVEYgSlVTVCBIQVBQRU5FRC4uIApXZWxsLCBiZWNhdXNlIGRpZmZlcmVudCBwZW9wbGUgd2lsbCB3aW4gdGhhbiBpZiB5b3Ugd291bGQganVzdCBzaXQgdGhlcmUgYW5kIG5vdCBkaXN0dXJiaW5nIHRoZSBvcmRlciBvZiB0aGUgY2FyZHMgc28gdGhlIHBlb3BsZSB0aGF0IHN1cHBvc2UgdG8gd2luIHdpbGwgYWN0dWFsbHkgd2luLiAKQnV0IGl0IG5vdCBqdXN0IGhpcyBhY2FkZW1pYyBwYXN0IHRoYXQgcHJldmVudHMgaGltIGZyb20gd29ya2luZyBmb3Igb3JkaW5hcnkgQW1lcmljYW5zLiBUaGlzIGlzIGFsc28gYSBtYW4gd2hvIHJlcHJlc2VudHMgdGhlIGZhaWxlZCBOZW9saWJlcmFsIGVjb25vbWljIHBvbGljaWVzIG9mIHRoZSBwYXN0IDMwIHllYXJzLiBBbmQgaXQgaXMgdGltZSB0byBnZXQgcmlkIG9mIEJlcm5hbmtlIGp1c3QgbGlrZSBpdCBpcyB0aW1lIHRvIGdldCByaWQgb2YgdGhlIHJpZGljdWxvdXMgaWRlb2xvZ2ljYWwgY2xhaW0gdGhhdCB0aGUgIm1hcmtldCBrbm93cyBiZXN0LiIuIApXR0EgbGVjdGluIGlzIGFuIGV4Y2VwdGlvbmFsbHkgdG91Z2ggYWR2ZXJzYXJ5IGFzIGl0IGlzIGZvcm1lZCBieSB0aGUgc2FtZSBkaXN1bGZpZGUgYm9uZHMgdGhhdCBtYWtlIHZ1bGNhbml6ZWQgcnViYmVyIGFuZCBodW1hbiBoYWlyIHNvIHN0cm9uZywgZmxleGlibGUgYW5kIGR1cmFibGUuCkZvciB0aGUgQW1lcmljYW5zLCB0aGUgbGVnaXNsYXRpb24gbWF5IGhhdmUgZXZvbHZlZCBpbnRvIGJlY29taW5nIGFuIGluc3RydW1lbnQgb2YgZGVtb2NyYXRpc2F0aW9uLCBhbiBpbnN0cnVtZW50IG9mIGltcGVyaWFsaXNtLCBvciBhbiBpbnN0cnVtZW50IG9mIGRldmVsb3BtZW50IGFuZCBpdCBtYXkgZXZlbiBiZSBwb3NzaWJsZSB0aGF0IGl0IGlzIGFsbCB0aHJlZSwgb3Igbm9uZSBvZiB0aGUgdGhyZWUuIApUaGlzIGlzIGxpa2VseSB0aGUgY29ycmVjdCBhbnN3ZXIuIFdoZW4gbWl4aW5nIHRoaWNrIHB1cmVlcyBpbiBhIGJsZW5kZXIgbGlrZSBodW1tdXMsIHlvdSBleHBlcmllbmNlIHdoYXQgY2FsbGVkIGNhdml0YXRpb24sIHdoaWNoIGlzIHdoZW4gYSBwb2NrZXQgb2YgYWlyIGlzIGNyZWF0ZWQgYXJvdW5kIHRoZSBibGFkZSBhbmQgdGhlIGJsYWRlIGRvZXNuIGdldCBlbm91Z2ggY29udGFjdCB3aXRoIHRoZSBmb29kIGluIG9yZGVyIHRvIGJsZW5kIGl0IHByb3Blcmx5LiBUaGF0IHdoeSB5b3UgY29uc3RhbnRseSBoYXZlIHRvIHNjcmFwZSBkb3duIHRoZSBzaWRlcy9zdGlyIG9yIGFkZCBtb3JlIGxpcXVpZC4gQmxlbmR0ZWMgdHdpc3RlciBqYXIgc29sdmVzIHRoaXMgcHJvYmxlbS4gVGhlIFZpdGFtaXggdGFtcGVyIGFsc28gc29sdmVzIHRoaXMgcHJvYmxlbS4gSWYgT1AgZG9lc24gaGF2ZSBhIGJsZW5kdGVjIG9yIFZpdGFtaXgsIHRoZW4gbWFraW5nIGh1bW11cyBpbiBhIGJsZW5kZXIgaXMgc3RpbGwgcG9zc2libGUgYnV0IGp1c3QgbW9yZSBkaWZmaWN1bHQuIEEgZm9vZCBwcm9jZXNzb3Igd291bGQgYmUgYSBiZXR0ZXIgdG9vbCBpbiB0aGF0IGNhc2UuCkEgZ29vZCBwb2tlciBwbGF5ZXIgd2lsbCB0aGluayBpbiB0ZXJtcyBvZiBvZGRzIGFuZCBwYXlvdXRzIHdoaWxlIGRlY2lkaW5nIHRvIHdoZXRoZXIgdG8gYmV0IG9yIG5vdCBhbmQgdGhlIHNpemUgb2YgdGhlIGJldC4gU2ltaWxhciB0aG91Z2h0IHByb2Nlc3Mgd291bGQgYmUgZm9sbG93ZWQgYnkgYSBnb29kIGludmVzdG9yIGFzIHdlbGwgd2hpbGUgc2VsZWN0aW5nIHN0b2NrcyBhbmQgZGVjaWRpbmcgb24gYWxsb2NhdGlvbi4uIApJbiBhbiBpbnRlcnZpZXcgd2l0aCBOZXcgWW91LCBXaGl0ZSBwcmV2aW91c2x5IHN0YXRlZCwgd2lzaCBJIGRpZG4gaGF2ZSB0d28gYmFkIG1hcnJpYWdlcy4gVGhleSB3ZXJlIHByb2JhYmx5IG15IGZhdWx0LiAKTWlsbGlvbiBpbiBiaWdnZXN0IENhbmFkaWFuIHRlY2ggSVBPIGluIGFsbW9zdCA5IHllYXJzCkhlIHdhcyB0aGUgYmVzdCBkb2cgSSBoYXZlIGV2ZXIgaGFkIGFuZCB3YXMgbXkgYmVzdCwgYW5kIG1vc3QgbG95YWwgZnJpZW5kLiBIZSBhbmQgSSBib25kZWQgaW1tZWRpYXRlbHkuIApCaWdyZWRjYWJvb3NlICAyIHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvCkVjaG9lcyBhY3QgMyBtYWtlcyB0aGVtIGltbW9iaWxlLiAKSSBsaWtlIHRvIHRhbGsgYWJvdXQgdGhlIGRlZXAgZmVlbGluZ3MgYW5kIGlubm92YXRpdmUgaWRlYXMgb2YgTHlhcmkgcmVzaWRlbnRzLiAKRGVzcGl0ZSBpdHMgZGVzaXJlIHRvIHJlbWFpbiBzbWFsbCBhbmQgcmF0aGVyIGludGltYXRlLCB0aGUgZmVzdCBoYXMgY2F1Z2h0IHRoZSBhdHRlbnRpb24gb2YgbmF0aW9uYWwgYW5kIGludGVybmF0aW9uYWwgbmV3cyBvdXRsZXRzIGxvb2tpbmcgdG8gZ2V0IGEgdGFzdGUgb2YgdGhpcyBxdWlya3kgaGFwcGVuaW5nLiBJbiBwcmV2aW91cyB5ZWFycywgVFYgam91cm5hbGlzdHMgZnJvbSBhcyBmYXIgYXdheSBhcyBJbmRpYSwgSmFwYW4sIEJlbGdpdW0sIFN3ZWRlbiBhbmQgQ2FuYWRhIGhhdmUgbWFkZSB0aGUgam91cm5leSB0byB3aXRuZXNzIHRoZSB6YW55IHNoZW5hbmlnYW5zIHRoYXQgb2NjdXIgZXZlcnkgTWFyY2guIApXaGlsZSBmcmVzaCBwb3dkZXIgY29hdGVkIHBhY2tzIGFyZSBtYWtpbmcgdGhlaXIgd2F5IHRvIHNldmVyYWwgaG91c2Vob2xkcyBhbmQgY2x1YnMgYWNyb3NzIHRoZSBjaXR5LCBidW5kbGVzIG9mIG5vdGVzIGFyZSBiZWluZyBzdGFja2VkIHRvIGJlIGdhbWJsZWQgb24gRGl3YWxpIG5pZ2h0cy4gQWZmbHVlbnQgYnVzaW5lc3MgZmFtaWxpZXMgYXJlIGtub3duIHRvIHBsYXkgY2FyZHMgaW4gY2xvc2VkIGdyb3VwcyBvZiAxMCAzMCBwZW9wbGUgZHVyaW5nIHRoZSBmZXN0aXZhbC4gQ3JvcmVzIG9mIHJ1cGVlcyBhcmUgd29uIGFuZCBsb3N0IGR1cmluZyB0aGVzZSBnYW1lcy4gSGFyZCBjYXNoLCBvcm5hbWVudHMsIGNhcnMgYW5kIG90aGVycyB2YWx1YWJsZXMgYXJlIGF0IHN0YWtlLiBUaGUgbWluaW11bSBzdGFrZXMgYXJlIHdvcnRoIFJzNTAwIFJzMSwwMDAgd2hlcmVhcyB0aGUgdXBwZXIgbGltaXQgY2FuIHN0YXJ0IGZyb20gYXMgaGlnaCBhcyBSczUgbGFraC4KVGhlIHBvaW50IGlzIHRoYXQgaGUgbWFkZSBhIHNuYXAganVkZ2VtZW50IG9mIE9QLCB3aGljaCB3YXMgbGlrZWx5IGluZmx1ZW5jZWQgYnkgdW5jb25zY2lvdXMgcmFjaWFsIHByb2ZpbGluZzogSW5kaWFuIGR1ZGUgY2FycnlpbmcgYSBicm93biBiYWcgb2YgdGFrZSBvdXQgbXVzdCBiZSBhIGRlbGl2ZXJ5IGd1eS4gCklmIHlvdXIgYXQgdGhlIGJlZ2lubmluZyBqdXN0IGluZHVsZ2UgeW91cnNlbGYgaW4gZXZlcnl0aGluZyBzZWN1cml0eSwgc3R1ZHkgdGhlIE9XQVNQIHRvcCAxMCwgc3R1ZHkgcHJpdmlsZWdlIGVzY2FsYXRpb24sIGdldCB5b3Vyc2VsZiBzaWduZWQgdXAgb24gaGFja3RoZWJveCBvciB2dWxuaHViLCBwcm9iYWJseSBzdGFydCB3aXRoIHZ1bG5odWIgICBIVEIgaXMgZ2VuZXJhbGx5IGhhcmRlci4gClRoaXMgaXMgTk9UIGFuIGFkdmlzYWJsZSBtZXRob2Qgb2YgcmVtb3ZpbmcgU2ltcyBmcm9tIHlvdXIgZ2FtZS4gV0FZIDM6IFlvdSBjYW4gb3BlbiB1cCBhIGNoZWF0IGJveChDdHJsIFNoaWZ0IEMpIGFuZCB0eXBlIGluIG1vdmVvYmplY3RzIG9uIGFuZCB0aGVuIGdvIHRvIGJ1eSBtb2RlIHRoZSBjbGljayBvbiB0aGVtIHRoZW4gY2xpY2sgZGVsZXRlLiAKSGFzIGEgYnVuY2ggb2YgZ2FuZ2VycyB0aGF0IHJ1biB0aGUgYXBhcnRtZW50IHNoZSBsaXZlcyBpbiBhbmQgd2hpbGUgc2hlIGxpa2UgdG8gbGVhdmUsIHRoZXkgd29uIGxldCBoZXIgZG8gc28uIFNoZSBsaWtlIHRvIGhpcmUgdGhlIHNlcnZpY2VzIG9mIHNvbWUgb2YgdGhlIG11c2NsZSBvZiB0aGUgUG9pbnQgdG8gZWxpbWluYXRlIHRoZW0gaW4gZXhjaGFuZ2UgZm9yIGJlaW5nIGludHJvZHVjZWQgdG8gb25lIG9mIGhlciBjb250YWN0cywgYW5kIG1heWJlIHNvbWUgbW9uZXkgaWYgdGhleSBpbnNpc3QuIFNoZSBhbHJlYWR5IGdvdCB0d28gcGVvcGxlIG9uZSBwZXJzb24gd2hvIHNoZSBrbm93cyB3b3VsZCBiZSBpbnRlcmVzdGVkLgpMb25nbW9udCBwYXJ0IG9mICdIYW5kbWFpZCdzIFRhbGUnIHByb3Rlc3Qgb2YgTWlrZSBQZW5jZQpJdHMgcGF0aGV0aWMgaG93IHdlc3Rlcm5lcnMsIHByZXN1bWFibHkgbWFsZXMsIHdobyBwcm9iYWJseSBuZXZlciBzZXJpb3VzbHkgZ2F2ZSAyIHNoaXRzIGFib3V0IGZlbWluaXNtIG9yIHdvbWVucyByaWdodHMgc3VkZGVubHkgZ2V0IGRlZmVuc2l2ZSB3aGVuIGl0IGNvbWVzIHRvICJvd25lcnNoaXAiIG9mIGZlbWluaXNtLCBhbmQgdGFsayBvdmVyIEFDVFVBTCBmZW1hbGUgZmVtaW5pc3Qgc2Nob2xhcnMgaW4gY2xhaW1pbmcgd2hvIGl0IHJldm9sdmVzIGFyb3VuZC4gV2VzdGVybiBjaGF1dmluaXN0cyBtYXkgdHJlYXQgZmVtaW5pc20gYXMgYSBkaXNlYXNlLCBidXQgdGhleSB3YW50IGl0IHRvIGJlIFRIRUlSIGRpc2Vhc2UuIApXaGVuIHlvdSBhcmUgb24gdGhlIHRhYmxlLCB5b3UgaGF2ZSB0byBzZWUgZXZlcnkgcmVhY3Rpb24uIApQbGFjZSB5b3VyIHRodW1icyBvbiB0aGUgY2VudHJlIG9mIHRoZSBiYWJ5J3Mgc3RvbWFjaCBhbmQgd3JhcCB5b3VyIGhhbmRzIGFyb3VuZCB0aGUgd2Fpc3QuICh0aGUgdGlwcyBvZiB5b3VyIHRodW1icyBzaG91bGQgY29tZSB1cCBqdXN0IGFib3ZlIHRoZSBiZWxseSBidXR0b24pLiAKRkFNSUxZIEFGRkFJUjogSmFjayBPc2JvdXJuZSBjZWxlYnJhdGluZyBoaXMgMjNyZCBiaXJ0aGRheSBhdCBTVEsgYW5kIENvY28gZGUgVmlsbGUgd2l0aCBwYXJlbnRzIE96emllIGFuZCBTaGFyb24gYW5kIHNpc3RlcnMgS2VsbHkgYW5kIEFpbWVlLgpJIGNhbiBzZWUgY2hpbGRyZW4gZW5qb3lpbmcgdGhpcyBoYW5kc29tZSBib29rIGp1c3QgYXMgbXVjaCBhcyBCYXJyYXVkJ3MgQmFja3lhcmQgQmVhc3RzLiBJdCBjb3ZlcnMgYWxsIHRoZSBjYXRlZ29yaWVzIG9mIGFuaW1hbCB0aGF0IGxpdmUgd2lsZCBpbiBOZXcgWmVhbGFuZCwgZnJvbSBvdXIgZGlzdGluY3RpdmUgZmxpZ2h0bGVzcyBiaXJkcywgdGhyb3VnaCBvdXIgbWludXNjdWxlIG5hdGl2ZSBmcm9ncywgdG8gaW50cm9kdWNlZCBhbmltYWxzIGxpa2UgVGFociBhbmQgUmVkIERlZXIuIEZyb20gdGhlIGNvbW1vbiBiZWUgdG8gdGhlIGNhdCdzIGV5ZSwgdGhlIGJsdWUgd2hhbGUgdG8gdGhlIGdsb3cgd29ybSwgdGhlcmUgaXMgYSB3ZWFsdGggb2YgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGFuaW1hbHMgd2UgbWlnaHQgZmluZCBhcyB3ZSB0cmF2ZWwgYXJvdW5kIHRoaXMgY291bnRyeS4gRnJvbSBhdmVyYWdlIHNpemVzIChhIHZlcnkgaGFuZHkgZmFjdCBmb3IgZ2V0dGluZyBhIGhhbmRsZSBvbiBhbnkgY3JlYXR1cmUpIGFuZCBkaWV0YXJ5IGhhYml0cywgdG8gY29tbWVudGFyeSBvbiB0aGUgZW5kYW5nZXJlZCBzdGF0dXMgb2Ygc29tZSBvZiBvdXIgbW9zdCB0aHJlYXRlbmVkIHNwZWNpZXMsIHRoaXMgYm9vayBpcyBhIHRlcnJpZmljIHJlc291cmNlIGZvciBidWRkaW5nIHpvb2xvZ2lzdHMgYW5kIHRoZSBnZW5lcmFsbHkgY3VyaW91cywgYWxpa2UuCkkgbWF5IGJlIGEgNzBBLzMwRCBidXQgSSAxMDAgaHVtYW4gdGhhdCBzdGlsbCBsZWFybmluZyBhbmQgZGlzY292ZXJpbmcgd2hhdCBJIHdhbnQgdG8gZ3JvdyB1cCB3aXRoLi4gCkZyb20gbXkgZGF0YSBzdHJ1Y3R1cmVzIGNsYXNzIGF0IGNvbGxlZ2UsIEkga25vdyBiYXNpYyBidWlsZGluZyBibG9ja3MgbGlrZSBCRlMgYW5kIERGUywgYmFja3RyYWNraW5nLCBEUCwgdHJlZXMsIGdyYXBocywgZXRjLiAKWW91IGNhbiBzaW1wbHkgY29tcGxhaW4gYW5kIGdldCB5b3VyIG1vbmV5IGJhY2suIFRoZXkgdXNoZXIgeW91IGludG8gYSByb29tIGFuZCBkb24gZ2l2ZSB5b3UgYSBjaG9pY2UgYXMgdG8gYXZvaWQgS29yZWFuIGN1c3RvbWVycyBmcm9tIHNlZWluZyB5b3UuIEFzIGZhc3QgYXMgdGhpbmdzIGNoYW5nZSBpbiBLb3JlYSBJIGRvdWJ0IGl0IGlzIHN0aWxsIHRoZXJlLiBCdXQgaXQgd2FzIGV2aWRlbnRseSBhIGJpZyBhc3Mgc3RvbmUgdGFibGUgYW5kIHlvdSBsYXkgb24gaXQgYW5kIHRoZXkgd29ya2VkIHlvdSBpbiB0aHJlZSBwbGFjZXMgYXQgb25jZS4gClN1cHJlbWUgQ291cnQgd2hpY2ggc2tpcnRlZCB0aGUgaXNzdWUgZW50aXJlbHkgaW4gdGhlaXIgRWxrIEdyb3ZlIHYgTmV3ZG93IHJ1bGluZyBvbiBNYXJjaCAyNCwgMjAwNCwgZmluZGluZyB0aGF0IE5ld2RvdyBkaWQgbm90IGhhdmUgdGhlIHN0YW5kaW5nIHRvIHNwZWFrIGZvciBoaXMgZGF1Z2h0ZXIgKGZvciB3aG9tIHRoZSBjYXNlIHdhcyBvcmlnaW5hbGx5IGJyb3VnaHQpIGJlY2F1c2Ugc2hlIGxpdmVkIHdpdGggaGVyIG1vdGhlciwgYW5kIG5vdCB3aXRoIHRoZSBoZXIgZmF0aGVyIHdobyBpbml0aWF0ZWQgdGhlIGNhc2UuIENhc2UgZGlzbWlzc2VkLCA4IDAsIHRob3VnaCB0aGUgaXNzdWUgaXRzZWxmIHdhcyBsZWZ0IHVudG91Y2hlZC4uIApJZiBJIHdhcyB0aGVyZSBJIHdvdWxkbiBoYXZlIHN1c3BlY3RlZCBoaW0sIHNpbmNlIHJpcHBpbmcgbmFtZXRhZ3MgcmVja2xlc3NseSBpcyB3aGF0IGdvdCB0aGVtIGludG8gdGhlIHByZWRpY2FtZW50IHRoZXkgd2VyZSBpbiAgIEpTSiBvdXQgYW5kIG9ubHkgMTUgbWludXRlcyB0byBnbywgc2VlbXMgbGlrZSB0aGV5IHdlcmUgYmVpbmcgcmVwZWF0ZWRseSBzZXQgdXAgYW5kIFNlIENoYW4gc2VlbWVkIHRvbyBvYnZpb3VzIHdpdGggWUpTIHBvaW50aW5nIGhpbSBvdXQuIApXYXJuZSdzIG9uIHN0YWdlIHBlcmZvcm1hbmNlIHdpbGwsIGluIGZhY3QsIGJlIGEgcmVhbCBqYXcgZHJvcHBlci4gClRoZSBsaWNlbnNlIG9mIDg4OCBTcG9ydCB3YXMgaXNzdWVkIGJ5IHRoZSBHaWJyYWx0YXIgR2FtYmxpbmcgQ29tbWlzc2lvbmVyLkRlcG9zaXQgQm9udXMgUHJvbW90aW9uczg4OCBTcG9ydCBoYXMgYW4gZXhjbHVzaXZlIHdlbGNvbWUgcGFja2FnZSBmb3IgYWxsIHB1bnRlcnMgdGhhdCB3YW50IHRvIHJlZ2lzdGVyIGF0IHRoZSB3ZWIgc2l0ZSBmb3IgdGhlIGZpcnN0IHRpbWUuIEFsbCBvZiB0aGUgbmV3Y29tZXJzIGNhbiBnZXQgQmV0IDEwIGdldCAzMC4gMTgrLiBUIEFwcGx5LiBBZnRlciB5b3UgaGF2ZSByZWdpc3RlcmVkIGp1c3QgbG9naW4gYW5kIG1ha2UgeW91ciBmaXJzdCBkZXBvc2l0LldlZWtseSBmcmVlIGJldHMgYXQgODg4IFNwb3J0IGFyZSBnaXZlbiB3aXRoIFRoZSBBY2NhIENsdWIgcHJvbW90aW9uLiAKVmlrdGVuIGF2IGVuIG0ga2xhcmZpcm1hICJLb250byBtaW5zdCIgZWxsZXIgIkluYWt0aXZpdGV0IGF2Z2lmdCIgW1RvcF0gcyAsIGh1ciB2aWxsIGR1IGF2ZyByYSBhdiBsb2NrZWxzZSBoZWxhIGN5YmVycnltZGVuLCBpIGV0dCBmIHJzIGsgYXR0IHVwcHZha3RhIGRpbmEgayBuc2xvci4uIApUaGVuLCBJIHN0YXJ0IGJ5IGdldHRpbmcgYSBuZXcgY3B1LCBtb3RoZXJib2FyZCwgYW5kIHBzdSwgYW5kIHB1dHRpbmcgdGhvc2UgaW4gdGhlIG5ldyBjYXNlLiBQZXJzb25hbGx5IGdpdmVuIHRoZSBuZXcgYnVkZ2V0IHlvdSBvbiwgSSByZWNvbW1lbmQgdGhlIDIyMDBHIG9yIHRoZSAyNDAwRyBvbiBhIEI0NTAgbW90aGVyYm9hcmQsIGJ1dCB0aGF0IGFsc28gcmVxdWlyZXMgZGRyNCByYW0sIHNvIEkgZG9uIGtub3cgaWYgdGhhdCBpbiB0aGUgYnVkZ2V0IHlldC4gClNlZSB0aG9zZSBub3cgYmVpbmcgZmVhdHVyZWQgYXMgQ2hyaXN0bWFzIHNwZWNpYWxzIGF0IHdlIHdlIHd3IFV3IElNTUggQldCV0IgdHV3bCBvcmxmZnR0dGt1IENyd3RkbCBJaHQgTU1ydHRmdCBQd3J0ZSBMdXZmZSwgdG90IE1pIE0gSW5wTmZhZmYgY2hmYyB0YXVuLiBCcmN0eSBNTSAoTU0gSU1IIG9mZmFsIHRubSBVdyBGck1jaCBmYSB0dGF3IGZvci4gClRoYXQgbWVhbnMgc29tZSBhYnNvbHV0ZSBwaWVjZSBvZiBzaGl0IGp1c3Qgc25pdGNoZWQgb24gYSBndXkgd2l0aCBzdGFnZSA0IGNhbmNlciBieSBseWluZyB0byB0aGUgcG9saWNlIGluIG9yZGVyIHRvIGdpdmUgdGhlbSBwcm9iYWJsZSBjYXVzZSB0byBzZWFyY2ggdGhlIHJvb20uIE5vdCBvbmx5IGlzIHRoZXJlIGV2aWRlbmNlIGZvciBUSEMga2lsbGluZyBjYW5jZXIgY2VsbHMgYnV0IGFsbCB0aGUgc2lkZWFmZmVjdHMgb2YgY2hlbW8gYW5kIHRoZSBjb2NrdGFpbCBvZiBkcnVncyB5b3UgaGF2ZSB0byB0YWtlIGp1c3QgdG8gc3Vydml2ZSB0aGF0IGNyYXAgd291bGQgYmUgbWFkZSBtdWNoIGxlc3MgcGFpbmZ1bCB3aXRoIGEgbGl0dGxlIFRIQyBpbiB0aGUgc3lzdGVtLi4gCkVsIHBhcnRpZG8gZXN0YWJhIHlhIGRlY2lkaWRvIHBhcmEgbGEgc2VndW5kYSBtaXRhZCwgcGVybyBlbCBmZXN0aXZhbCBvZmVuc2l2byBkZSBsb3MgYmxhbnF1aWF6dWxlcyBjb250aW51LgpCdXQgaXQgd2FzIGV2aWRlbnRseSBhIGJpZyBhc3Mgc3RvbmUgdGFibGUgYW5kIHlvdSBsYXkgb24gaXQgYW5kIHRoZXkgd29ya2VkIHlvdSBpbiB0aHJlZSBwbGFjZXMgYXQgb25jZS4gCiAgICAgICBPcmlnaW5hbCBKdWJpbHVtc2ZhaHJyYWQgZGVyIE5GTy4gClRvdGFsbHkuIApBIDMwIHllYXIgcHJhY3RpdGlvbmVyIG9mIHlvZ2EgYW5kIGEgdHJhaW5lZCBjaGlyb3ByYWN0b3Igd2l0aCBhIGxvbmcgc3RhbmRpbmcgZm9jdXMgaW5iaW9tZWNoYW5pY3Mgb2YgdGhlIHNwaW5lLCBJIGNhbiBob25lc3RseSBzYXkgdGhhdCBhIDE1IG1pbnV0ZSBmb3VuZGF0aW9uIHRyYWluaW5nIGV4ZXJjaXNlIHByb2dyYW0gd2lsbCBhY3RpdmF0ZSBhbmQgc3RyZW5ndGhlbiBtdXNjbGVzIGxlZnQgY29tcGxldGVseSB1bnRvdWNoZWQgaW4gYSA5MCAgbWludXRlIHlvZ2Egd29ya291dC4gCkFuZCB5b3UgaGF2ZSB0byBhZGhlcmUgdG8gdGhpcyBzdHJhdGVneSBwbGF5aW5nIDUwMCA3NTAgaGFuZHMvaHIgb25saW5lIGJlY2F1c2UgeW91IGdvaW5nIHRvIGhhdmUgZG96ZW5zIG9mIDNCUCBPT1AgQ0JldCBvcHBvcnR1bml0aWVzIHdpdGhpbiBhIGNvdXJzZSBvZiBhIG11bHRpdGFibGluZyBzZXNzaW9uIGFuZCB0aGUgZXZlbiB0aGUgYmFkIHJlZ3MgYXJlIGRlZmluaXRlbHkgZ29pbmcgdG8gbm90aWNlIGlmIHlvdSBkZXZpYXRlIGluIHlvdXIgZnJlcXVlbmNpZXMgYW5kIHNpemluZ3MuLiAKQWxzbyBzb21ldGhpbmcgdG8gbWFrZSBvdXQgZGl2ZXJzIGEgYml0IG1vcmUgdW5pcXVlLCBub3QgYnkgbXVjaCBidXQganVzdCBhIGJpdCwgc28gYSBzbG90IHByZXR0eW11Y2gganVzdCBmb3Igc21hbGwgZGVjb3JhdGlvbnMuIERvZXNuIGV2ZW4gSEFWRSB0byBoYXZlIGFuIGVmZmVjdC4gCk1vYmlsZSBjbGlwYm9hcmQgZmxvd3MgYXJlIGp1c3QgYXdmdWwsIGFuZCB3aXRoIGEgZnVsbCBxdWV1ZSwgd2UgZG9uIGFsd2F5cyBoYXZlIHRoZSB0aW1lIHRvIGRvIHRoYXQgZm9yIGV2ZXJ5IHBvc3QuV2UgYWx3YXlzIGRvIG91ciBiZXN0IHRvIG5vdGlmeSB1c2VycyB3aGVyZSB3ZSBjYW4sIGJ1dCB0aGVyZSBhcmUgbGVnaXRpbWF0ZSBzaXR1YXRpb25zIHdoZXJlIGl0IG5vdCBhbHdheXMgZmVhc2libGUuIApPbmNlIHlvdSBoYXZlIHdvcmtlZCBvbiB0aGUgbWFya2V0aW5nIHN0cmF0ZWd5IHRoYXQgYWxsb3dzIHlvdXIgdGFyZ2V0IGF1ZGllbmNlIHRvICJzZWUiIHdoYXQgaXQgaXMgdGhhdCB5b3UgaGF2ZSwgYW5kICJzZWUiIGhvdyB0aGUgcHJvZHVjdCBhbmQvb3IgcHJvZHVjdHMgY2FuIGJlbmVmaXQgdGhlbSBhbmQgZW5oYW5jZSB0aGUgcXVhbGl0eSBvZiB0aGVpciBsaWZlLCBpdCBpcyB0aW1lIHRvIG1vdmUgb24gdG8gdGhlIGF1ZGl0b3J5IG1hbm5lci4gVWx0aW1hdGVseSwgeW91IG11c3QgYXNzb2NpYXRlIHNvbWUgc29ydCBvZiAic291bmQiIGluIHlvdXIgbWFya2V0aW5nIHN0cmF0ZWd5LiBDb25zaWRlcmluZyB5b3UgYXJlIHNwZWNpYWxpemluZyBpbiBQcm8gQ2xheSBQb2tlciBDaGlwcywgaXQgbWF5IGJlIGlkZWFsIHRvIGltcGxlbWVudCB0aGUgc291bmQgb2YgUG9rZXIgQ2hpcHMgZmFsbGluZywgb3IgaGl0dGluZyBlYWNoIG90aGVyLiAKQ2hyaXMgRGFyY3ksIGEgTWV0cm8gUG9saWNlIHNwb2tlc21hbiwgc2FpZC5JbiBIZW5kZXJzb24sIHRoZXJlIGFyZSBqdXN0IHR3byBtYXNzYWdlIGVzdGFibGlzaG1lbnRzLiBCb3RoIG9wZW5lZCB3aXRoaW4gdGhlIGxhc3Qgc2l4IG1vbnRocyBhbmQgbmVpdGhlciBjYW4geWV0IGFwcGx5IGZvciBvdXRjYWxsIHNlcnZpY2VzLiAKS2luZ2phdmlrIHUKQnV0IHdoZW4gbWFueSBvZiB0aGUgcGVvcGxlIEkgaGF2ZSBoYWQgdGhpcyBjb252ZXJzYXRpb24gd2l0aCB1c2UgdGhhdCB0ZXJtLCB3aGF0IHRoZXkgYXJlIHRyeWluZyB0byBjb21tdW5pY2F0ZSBpcyB0aGF0IHRoZXkgZG9uIGFjdHVhbGx5IHdhbnQgdG8gTEVBUk4gYW55dGhpbmcsIHRoZXkganVzdCB3YW50IHRvIGtub3cgd2hhdCB0byBjbGljayBvbiB0byBhY2NvbXBsaXNoIHRoZSBvYmplY3RpdmUuSSBub3QgZ29pbmcgdG8gbGllIHRvIHlvdSBhbmQgdGVsbCB0aGF0IHlvdSBuZXZlciBiZSBhYmxlIHRvIHVuZGVyc3RhbmQgbmV0d29ya2luZyBpZiB5b3UgZG9uIGxlYXJuIHRvIGRvIGJpbmFyeSBzdWJuZXQgbWF0aCBpbiB5b3VyIGhlYWQuQnV0IEkgYW0gZ29pbmcgdG8gdGVsbCB5b3Ugd2l0aCB0cmVtZW5kb3VzIHNpbmNlcml0eSB0aGF0IGRhdGEgbmV0d29ya2luZyBpcyBtb3JlIGNvbXBsaWNhdGVkIHRoYW4geW91IHByb2JhYmx5IHRoaW5rIGl0IGlzLiAKVG9kYXksIGZhY2lhbCBoYWlyIGlzIGdhaW5pbmcgcG9wdWxhcml0eSBpbiB0aGUgd29ybGQgb2YgbWVuJ3MgZ3Jvb21pbmcgYW5kIGhhaXJzdHlsZS4gCkl0IGVhc3kgdG8gZm9yZ2V0IHRoYXQgYmVmb3JlIEJyb3duYmFjaywgU2ViZWxpdXMgd2FzIG91ciBnb3Zlcm5vci4gCkRvdmVyIEludGVybmF0aW9uYWwgU3BlZWR3YXkgaGFzIGFuIGFsbGlhbmNlIHdpdGggRG92ZXIgRG93bnMgSG90ZWwgQ2FzaW5vLCB3aGlsZSBIb2xseXdvb2QgQ2FzaW5vIG92ZXJsb29rcyB0aGUgc2Vjb25kIHR1cm4gYXQgS2Fuc2FzIFNwZWVkd2F5LiAKSSBjYW4gbm90IGNhbGwgdGhhdCBhIG1hc3NhZ2UgYmVjYXVzZSBJIGFtIG5vdCBsaWNlbnNlZCB5ZXQuIE9ubHkgYSBsaWNlbnNlZCBwcm9mZXNzaW9uYWwgY2FuIHByb3ZpZGUgYSB0cnVlIHRoZXJhcGV1dGljIG1hc3NhZ2UhIEFuZCBCYWNrcGFnZSBoYXMgYSBzcGVjaWFsIHBsYWNlIGZvciB0aG9zZSBsaWNlbnNlZCBwcm9mZXNzaW9uYWxzIHRvIGFkdmVydGlzZS4gCkhhbWJ1cmdlclBhcmFkaXNlIHUKT3VyIGZyZWVkYXRpbmcgc2VydmljZSBnaXZlcyB5b3Ugc2ltcGxlIHRvb2xzIHRvIGZpbmQgcGVvcGxlIGluIHlvdXIgYXJlYSBsb29raW5nIGZvciBsb3ZlLCB3YW50aW5nIGEgcmVsYXRpb25zaGlwIG9yIGp1c3Qgd2FudGluZyB0byBtZWV0IG5ldyBmcmllbmRzLiAKQmVpbmdzIG9mIGluY29tcGFyYWJsZSBhYmlsaXR5IHVzZWQgYXMgdG9vbHMgYXQgYmVzdCwgc2xhdmVzIGF0IHdvcnN0LiBUaGUgZmVhciBpcyB0aGF0IGluIGNyZWF0aW5nIGEgc3VwZXJpb3IgbGlmZSBmb3JtLCB3ZSBjcmVhdGUgYSBiZWluZyB0aGF0IGNhbiBvdmVycG93ZXIgdXMuIEl0IGFuIGFja25vd2xlZGdlbWVudCBvZiBzb21lIG9mIG91ciBiYXNlc3QgbmF0dXJlOiB0byBzZWVrIHNvbWV0aGluZyBiZXR0ZXIgdGhhbiBvdXIgY3VycmVudCBzdGF0aW9uLiAKVGhlIGRyaXZlIHRvIEJlcmxpbiB0b29rIG1vc3Qgb2YgdGhlIGRheSwgYmVjYXVzZSBhcHBhcmVudGx5IGV2ZXJ5IEdlcm1hbiB3YXMgYWxzbyB0cmF2ZWxpbmcuIHZpc2l0ZWQgd2hhdCBpcyBsZWZ0IG9mIHRoZSBCZXJsaW4gV2FsbC4gd2VudCB0byBDaGVja3BvaW50IENoYXJsaWUgYW5kIHRoZSBtdXNldW0gdGhhdCBub3cgc3RhbmRzIHRoZXJlLCBzaXRlIG9mIHRoZSBmb3JtZXIgY2hlY2twb2ludCBiZXR3ZWVuIFdlc3QgYW5kIEVhc3QgQmVybGluLiB0aGVyZSBpcyBkZWZpbml0ZWx5IGEgcGljdHVyZSBvZiB1cyBodWdnaW5nIG91ciB0YXhpIGRyaXZlciwgd2hvIHdhcyBJcmFuaWFuLCBiZWNhdXNlIHdlIGxvdmVkIGhpbSBmb3Igc29tZSByZWFzb24hCkluIFJvbWFuaWEgdGhlIExheSdzIGZsYXZvdXJzIGFyZSBTYWx0LCBQYXByaWthLCBDaGVlc2UsIEJhcmJlY3VlLCBTb3VyIENyZWFtIERpbGw7IHRoZSBMYXkncyBTZW5zYXRpb25zIGZsYXZvdXJzIGFyZTogVGhhaSBDaGlsaSwgQmFrZWQgY2hpY2tlbiB3aXRoIGxlbW9uIGFuZCB0aHltZTsgTGF5J3MgTWF4IGFuZCBMYXkncyBTdGlja3MgZmxhdm91cnMgYXJlOiBQYXByaWthIGFuZCBTYWx0LiBJbiBQb2xhbmQsIHRoZSBjaGlwcyBmbGF2b3VycyBhcmU6IENoZWVzZSwgR3JlZW4gT25pb24sIENoaWNrZW4gd2l0aCBTcGljZXMsIFNhbHRlZCwgUGFwcmlrYSwgSG90IGdyZWVuIHBlcHBlcnMsIEZyb21hZ2UsIEN1Y3VtYmVyIGFuZCBHdWFjYW1vbGUuIApFdmVyeXRoaW5nIGZyb20gc2hyaW1wYW56ZWVzIHRvIHRhY29kaWxlIHN1cHJlbWVzIHdhbGtzIHRoZSBlYXJ0aCwgYW5kIEZsaW50IGFuZCBoaXMgZnJpZW5kcyB3aWxsIGhhdmUgdG8gZG8gZXZlcnl0aGluZyBpbiB0aGVpciBwb3dlciB0byBzYXZlIHRoZSB3b3JsZCBvbmNlIGFnYWluLiBJdCBsb29rcyBsaWtlIGEgd29ydGh5IHNlcXVlbC4gClRoZXkgZWl0aGVyIGdldCBhIGpvYiBvciBjb250aW51ZSBvbiB0byBoaWdoZXIgZWR1Y2F0aW9uLiAKV2hlbiBJIGdldCBhIGJhZCBvcGVuaW5nIGhhbmQgb3IgbXVsIHRvIDYsIGRvIHlvdSB0aGluayBJIG11bGxpZ2FuIGFnYWluPyBOby4gSSBjb25jZWRlIGFuZCBnbyB0byBuZXh0IGdhbWUuIFRoYXQgaXMgdGhlIGpveSBvZiBkaWdpdGFsIGdhbWVzLiAKTWFsYXlzaWFucyBsb3ZlIHZvdGluZyBmb3IgTWFsYXlzaWFucy4gSXQgd2FzIHdlbGwga25vd24gdGhhdCB0aGF0IHdvdWxkIGhhcHBlbi4gSW4gZmFjdCwgbXkgYnVkZHkgKHdobyB3YXMgYSBzZW1pIGZpbmFsaXN0KSBldmVuIGpva2VkIGFib3V0IHRoaXMgYnkgY3JlYXRpbmcgYSB3ZWJzaXRlIHRvIHByb2Zlc3NpbmcgaGlzIGxvdmUgZm9yIE1hbGF5c2lhIHRvIGdldCBNYWxheXNpYW5zIHRvIHZvdGUgZm9yIGhpbSB0b28gKGl0IGRpZG4gd29yaywgYnV0IGl0IHdhcyBmdW5ueSlJdCBub3QgbGlrZSBoZSB3YXMgdGhlIG9ubHkgb25lIGRvaW5nIHRoaXMuIApJdCBzdWNoIGEgc3RyYW5nZSBmZWVsaW5nLiBNeSBwYXJlbnRzIGFyZSBpbiB0aGVpciBsYXRlIHNpeHRpZXMuIApNYXliZSwgYnV0IEZyYW5jZSB3YXMgcXVpdGUgaW52b2x2ZWQgaW4gdGhlIGV2ZW50cyBzdXJyb3VuZGluZyBhbmQgaW52b2x2aW5nIHRoZSBnZW5vY2lkZSwgc28gdGhleSBoYXZlIG1vcmUgcmVhc29uIHRvIGNvbW1lbW9yYXRlIGl0IGluIHBhcnRpY3VsYXIgdGhhbiBtYW55IG90aGVyIGdlbm9jaWRlcyBvciBoaXN0b3JpY2FsIHRyYWdlZGllcy4KT24gdGhlIFBhaXIgUGx1cyBpdCBkb2VzIG5vdCBtYXR0ZXIgd2hhdCB0aGUgaGFuZCBpcywgaWYgaXQgaXMgYSBwYWlyIG9yIGJldHRlciwgaXQgZ2V0cyBwYWlkLiAKTHVja2lseSB0aGlzIGlzbid0IHVzdWFsbHkgYSBwcm9ibGVtLiAKTG9sLCBJIG5haXZlbHkgZ290IGV4Y2l0ZWQgd2hlbiBJIHNhdyB0aGUgbWVzc2FnZSwgdGhhdCB0aGV5IHdhbnRlZCB0byB0YWxrIHRvIG1lIGFib3V0IG15IGludmVudGlvbi4gClRocmVlIFJlYXNvbnMgdG8gTG9vayBhdCBUZXhhcyBIb2xkIEVtIFBva2VyIENoaXBzCkkgaG9wZSBpdHdvcmtzIGZvciB5b3VyIHRvbywgKEZ1bGwgQW5zd2VyKS4gCkkgZG9uJ3Qga25vdyB3aGF0IEknbSBnb2luZyB0byBkbyBpbiBtYXJyaWFnZSBjb25jZWFsaW5nIHdoZW4gbXkgQ0YgU08gYW5kIEkgZ2V0IHRvIHRoYXQgcG9pbnQgaW4gbGlmZS4gTXkgcGFzdG9yIGhhcyBhbHdheXMgYmVlbiBvcGVuIG1pbmRlZCBhbmQgaGUga25vd3MgSSdtIGEgc2NpZW50aXN0IGZpcnN0IGFuZCBhIGNocmlzdGlhbiBzZWNvbmQuIApTaGUgd2FzIGEgZ3JlYXQgZGFuY2VyIGFuZCBzaW5nZXIuIApUaGVyZSBzaG91bGQgYmUgbm8gZmFjdGlvbiBjYWxsZWQgIlRoZSBncmVlbnNraW5zIi4gClNwYWNlbXV0YW50MTQgIDgsOTY0IHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvCkFsbCB0aHN0IGJlaW5nIHNhaWQgYSBudW1iZXIgMiBwaWNrIHNob3VsZG4gYmUgZGVhbGluZyB3aXRoIGNvbmZpZGVuY2UgaXNzdWVzLi4gCkluIG90aGVyIGNhc2VzIHdoZW4gdGhlIHBlcnNvbiBzYWlkIHRoYXQgaGUgaXMgImFsbCBpbiwiIHRoaXMganVzdCBtZWFucyB0aGF0IGhlIGlzIGJldHRpbmcgYWxsIHRoZSBjaGlwcyB0aGF0IGhlIGhhcy4gSGUgaXMgdGFraW5nIHRoYXQgcmlzayBvZiB3aW5uaW5nIGJhY2sgd2hhdCBoZSBiZXQgb3IgbG9zaW5nIHRoZSBnYW1lLiBTb21ldGltZXMsIGluZGl2aWR1YWxzIGRvIHRoaXMgdG8gaW50aW1pZGF0ZSB0aGUgb3RoZXIgcGxheWVycyBhbmQgdG8gbWFrZSB0aGVtIHRoaW5rIHRoYXQgaGUgaGFzIGEgcmVhbGx5IG5pY2UgaGFuZC4gCkhlIGZpbmUuIEdpdmUgaGltIGEgaG9sZSBhbmQgaGUgcnVuIHRocm91Z2ggaXQuIApTaGUgc2FpZCBpIGFtIGxpa2Ugb25lIG9mIHRoZSByZWFsZXN0IHBlb3BsZSBvdXQgdGhlcmUuIFNoZSBzYWlkIG1lIGFuZCBoZXIgd2lsbCByb2NrIHRvZ2V0aGVyIGZvcmV2ZXIuIEJ1dCB0aGVzZSBwYXN0IDcgZGF5cyBpIGZlZWwgbGlrZSBtZSBhbmQgaGVyIHdlcmUgZ2V0dGluZyBkcnksIGxpa2UgaWYgb3VyIGJvbmQgd2Fzbid0IHRoZSBzYW1lICwgbGlrZSBpZiBzb21ldGhpbmcgd2FzIHdyb25nIHdpdGggaGVyLiAKV2FsbCBTdHJlZXQgaXMgc3RpbGwgbm90IHN1cmUgd2hhdCB0byBtYWtlIG9mIEZlZGVyYWwgUmVzZXJ2ZSBjaGllZiBKZXJvbWUgUG93ZWxsLiBTdG9ja3MsIHdoaWNoIGNsb3NlZCBpbiB0aGUgZ3JlZW4gVGh1cnNkYXksIGJyaWVmbHkgZGlwcGVkIGludG8gdGhlIHJlZCBhZnRlciBQb3dlbGwgcG9pbnRlZCB0byBtb3JlIG1vbmV0YXJ5IHRpZ2h0ZW5pbmcgYWhlYWQsIGluY2x1ZGluZyBjb250aW51aW5nIHRvIHNocmluayB0aGUgRmVkJ3MgJDQgdHJpbGxpb24gYmFsYW5jZSBzaGVldC4KQmVjYXVzZSB3ZSBhcmUgaHVtYW5zLCB3ZSBzdWNjdW1iIHRvIG91ciBlbW90aW9ucyBzb21ldGltZXMuIEFuZCBpdCBpcyB0aHJvdWdoIGJvZHkgbGFuZ3VhZ2UgdGhhdCB3ZSBjb252ZXkgbWVzc2FnZXMgdGhhdCB3ZSBkb24ndCBoYXZlIHRoZSBjb3VyYWdlIHRvIHNheSBvdXQgbG91ZC4uIApJbnRlcnZpZXcgZm9yIHRoZSBJc2xlIG9mIFdpZ2h0IENvdW50eSBQcmVzc0hhdmluZyBhbiBBbGUgb2YgYSBUaW1lQWxsIHRoZSBwdWJzIGludm9sdmVkIHNlcnZlIHJlYWwgYWxlLiBBIHJlYWwgb3IgY2FzayBhbGUgaXMgb25lIHRoYXQgZ2V0cyBmcm9tIHRoZSBjYXNrIHRvIHRoZSBnbGFzcyBlaXRoZXIgYnkgZ3Jhdml0eSBmZWVkIHRhcCBvciBieSBoYW5kIHB1bXAgYW5kIGhhcyBub3QgaGFkIGNhcmJvbiBkaW94aWRlIGFkZGVkOyBhbnkgYWxlIHRoYXQgY29tZXMgaW4gYSBrZWcgYW5kIHVzZXMgZ2FzIHRvIHRyYXZlbCB0byB0aGUgZ2xhc3MgaXMgbm90IGNvbnNpZGVyZWQgYSByZWFsIGFsZS4gVGhlIElzbGUgb2YgV2lnaHQgaGFzIG92ZXIgMzAwIG1lbWJlcnMgb2YgQ0FNUkEgd2hvIGhlbHAgb3JnYW5pc2UgdGhlIGV2ZW50LCB3aXRoIG92ZXIgOTAgcHVicyBhbmQgbGljZW5zZWQgcHJlbWlzZXMgcGFydGljaXBhdGluZy4gCk1vcmUgU3RvcmllcyBIb3cgY2hpbGRyZW4gdW5kZXIgMTEgYXJlIGJlY29taW5nIGdhbWJsaW5nIGFkZGljdHMgYXQgaG9tZQpEb3dubG9hZCBUdSBIaSBUdSBTYXRyYW5naSBSZSBmaWxlIHR5cGU6IG1wMyAgIEJhaXhhciBJbmRpciBNdXNpYyBUdSBIaSBUdSBTYXRyYW5naSBSZSBiaXRyYXRlOiAzMjAga2JwcyBIRCwgU29uZyBMeXJpY3MgVHUgSGkgVHUgU2F0cmFuZ2kgUmUsIEdyYXRpcy4gCkFuZCBNcnMuIApUaGV5IHdlcmUgYWxzbyBmb3VyIG1vbnRocyBpbnRvIHdvcmtpbmcgb24gdGhlIDUuMCB2ZXJzaW9uLCB3aGljaCBmZWF0dXJlcyBmaXZlIHRyYW5zZHVjZXJzIGluc3RlYWQgb2Ygb25lLCBwYXRlbnQgcGVuZGluZyBkaXJlY3Rpb25hbCBjYXN0aW5nIGFuZCAzRCBib3R0b20gY29udG91cmluZyB0ZWNobm9sb2d5IHRoYXQgcHJvZHVjZXMgcGljdHVyZSBxdWFsaXR5IHJlbmRlcmluZ3MgdXAgdG8gMTYwIGZlZXQgYmVsb3cgdGhlIHN1cmZhY2UuIApUaGUgc3RvcnkgaXMgZmFudGFzdGljLCBhbmQgZmlsbHMgaW4gYSBsb3Qgb2YgdGhlIGdhcHMgYmV0d2VlbiBTVDUgNiwgYmVmb3JlIHRoZSBLaGl0b21lciBhY2NvcmRzLiBBbmQgdGhlIHNoaXAgY29tYmF0IGlzIHJlYWxseSB3ZWxsIGRvbmUsIHdpdGggZnVsbHkgZGVzdHJ1Y3RpYmxlIHNoaXAgbW9kZWxzLiBJIGxvdmUgdG8gc2VlIGEgcmVtYXN0ZXJlZCB2ZXJzaW9uIG9mIHRoZSBnYW1lIHBvcCB1cCBvbiBTdGVhbSBzb21ldGltZS4uIApJZiBsZWZ0IHVudHJlYXRlZCwgeW91ciBjYXQncyBndW0gZGlzZWFzZSBjb3VsZCByZXN1bHQgaW4gcGFpbiBhbmQgdGhlIGxvc3Mgb2YgYXBwZXRpdGUuIEluIHRoaXMgc2VjdGlvbiwgd2Ugd2lsbCBzaG93IHlvdSBob3cgdG8gYWRtaW5pc3RlciBwcm9wZXIgZGVudGFsIGNhcmUgdG8geW91ciBjYXQuIElmIHlvdXIgY2F0IGNhdGNoZXMgYSBjb2xkLCB0aGVyZSBhcmUgYSBzbWFsbCBudW1iZXIgb2YgZmVsaW5lIHZpcnVzZXMgdGhhdCB5b3UgY2FuIGF0dHJpYnV0ZSB0aGUgaWxsbmVzcyB0by4gCkFzbG5kYSBiaXIgb2sga2lpIHRhcmFmbmRhbiBzZXZpbGl5b3IgaGVtIEVraSBoZW0gZGUgci9UdXJrZXkuIEFtYSBoZW0gRWtpIGhlbSBkZSByL1R1cmtleSB6YW1hbiB6YW1hbiBiaXIgbmV2aSBhbGFtYSBkdXZhcm5hIGV2cmlsaXlvciB2ZSBrYXJhbXNhcmxrIHlheXlvci4gQmVsa2kgYnVkdXIgc2ViZWJpIHNldmlsbWVtZXNpbmluLiAKQTogWWVzLiBUbyBhZGQgYSBjb21tZW50LCB5b3UgbmVlZCB0byBiZSBsb2dnZWQgaW4gdG8gRmFjZWJvb2suIEl0IGlzIHNpbXBsZSBhbmQgZnJlZS4gRG8gSSBzdGlsbCBuZWVkIGEgRmFjZWJvb2sgYWNjb3VudCB0byBjb21tZW50PwpOZXdzcGFwZXJzIG9uIFRyYWluc1doZXRoZXIgaXQgYmUgbmV3c3BhcGVycyBvbiB0aGUgdHJhaW4gZnJvbSBCb3VybmVtb3V0aCB0byBXYXRlcmxvbywgb3IgbmV3c3BhcGVycyBvbiB0aGUgVW5kZXJncm91bmQgZnJvbSBQaWNjYWRpbGx5IHRvIEtpbmcncyBDcm9zcywgdGhlcmUgd2lsbCBiZSBuZXdzcGFwZXJzLiBQZW9wbGUgd2hvIHByZXZpb3VzbHkgcm9kZSBvbiB0aGUgdHJhaW4gaW4gdGhlIG1vcm5pbmcgYm91Z2h0IHRoZWlyIHBhcGVyLCByZWFkIGl0IGFzIHRoZXkgdHJhdmVsbGVkLCB0aGVuIHdlcmUga2luZCBlbm91Z2ggdG8gbGl0dGVyIHRoZSBzZWF0cyBhbmQgdGFibGVzIHdpdGggaXQuU28gd2hhdCBzaG91bGQgeW91IGRvPyBMZWF2ZSB0aGUgbGl0dGVyIHRoZXJlPyBObyEgWW91IHNob3VsZCBwaWNrIGl0IHVwLCBhbmQgcmVhZCBpdC4gCkFzIHN0dWRlbnRzIGRldmVsb3AgdGhlaXIgdW5kZXJzdGFuZGluZywgdGVhY2hlcnMgcmFpc2UgdGhlIGNoYWxsZW5nZSBsZXZlbHMgdG8gZW5jb3VyYWdlIHRoZW0sIHNhaWQgU2FudG9zLCB0aGUgY2VudGVyJ3MgYWNhZGVtaWMgZGlyZWN0b3IuIFNhdHVyZGF5LiAKVGhlbiBoZSByZWFsbHkgbG9zdCBoaXMgc2hpdC4gSGUganVzdCBiZWVuIHJlYWxseSB1bmZ1bm55IGFuZCB3ZWlyZCBsYXRlbHkuIApJdCBub3QgYSBnb3Zlcm5tZW50IHRha2VvdmVyIGFzIG11Y2ggYXMgaXQgYSBtYWtlIG92ZXIsIGhlYWx0aGNhcmUgaXMgbm90IGEgcHJvZHVjdCB0aGF0IHNob3VsZCBiZSBzb2xkIG9uIHRoZSBvcGVuIG1hcmtldC4gClJlZ3VsYXRvcnMgZGVzZXJ2ZSBjcmVkaXQgdG9vLiBJbiBtYW55IHByb3ZpbmNlcywgdGhlaXIgam9icyBhcmUgY2hhbmdpbmcgZnJvbSB0aGF0IG9mIHJlZ3VsYXRpb24gbWFrZXIsIHdob3NlIGpvYiBpcyB0byBhZGQgcnVsZXMsIHRvIHRoYXQgb2YgcmVndWxhdGlvbiBtYW5hZ2VyIHdpdGggdGhlIGZhciBtb3JlIHNvcGhpc3RpY2F0ZWQgam9iIG9mIGFkZGluZyBydWxlcyB3aGVyZSBuZWVkZWQgYW5kIHN1YnRyYWN0aW5nIG9uZXMgdGhhdCBkb24gYWRkIHZhbHVlLiBUaGV5IGFyZSByaXNpbmcgdG8gdGhpcyBjaGFsbGVuZ2UgYW5kIGRvaW5nIGEgZ29vZCBqb2IuLiAKU3BlZWNoIGlzIGhlYXZpbHkgY2Vuc29yZWQsIHRoZSBDaGluZXNlIEludGVybmV0IGlzIGJsb2NrZWQgb2ZmIGZyb20gdGhlIHJlc3Qgb2YgdGhlIHdvcmxkIGJ5IHRoZSAiR3JlYXQgRmlyZXdhbGwgb2YgQ2hpbmEiIHdoaWNoIGxldHMgb25seSBzZWxlY3RlZCBkYXRhIHRocm91Z2gsIHBlb3BsZSBjYW4gYmUgZm9yYmlkZGVuIGZyb20gdHJhdmVsaW5nIGF0IHRoZSBkcm9wIG9mIGEgaGF0LCB0aGVyZSBhcmUgY29uY2VudHJhdGlvbiBjYW1wcyBmb3IgTXVzbGltcywgdG9ydHVyZSBpcyByb3V0aW5lIGluIENoaW5lc2UgcHJpc29ucy4uIApHb2luZyBieSB5b3VyIHRpbWUgaW4gSG90IENob2NvbGF0ZSwgdGhlcmUgZGVmaW5pdGVseSBhIGdyb3VwIGZvciB5b3UuLiAKSSBoYXZlIGFsc28gYmVlbiBrbm93biBhcyBhIHZpa2luZyAoYnV0IHRoYXQgd2FzIGxvbmcgYmVmb3JlIHRoYXQpLiAKSXQgaXMgcmVhbGx5IHdlaXJkLiAKVG8gZmluYWxseSBhbnN3ZXIgeW91ciBxdWVzdGlvbjogSWYgeW91IGNhbGwgeW91IEhhdXN2ZXJ3YWx0dW5nLCB5b3UgbWlnaHQgbm90IGhhdmUgdG8gc3BlbmQgYSBzaW5nbGUgbWludXRlIGFuZC9vciBDZW50IG9uIHJlbm92YXRpb25zLiBCdXQgaXQgdXAgdG8gdGhlbSwgc28gYXQgbGVhc3QgcHJldGVuZCB0byBiZSBuaWNlLgpUaGV5IGZpbmQgb3V0IHlvdSBzbWVsbCBsaWtlIGR1bmdiZWV0bGUgZG93biB0aGVyZSwgeW91IG91dC4gClRoZSBpbnRlbnRpb25zIGhhdmUgdG8gYmUgaW4gdGhlIHJlYWxtIG9mIHRob3VnaHQsIGZlZWxpbmcgb3IgYmVoYXZpb3VyLiAKTWF0aWxkYSBBYnJhaGFtIGJ1dCB0aGVyZSB3YXNuJ3Qgcm9vbSBvbiBJdCBmb3IgMTE0IGNhbmRsZXMuIE1ycy4gCkluaXRpYWwgdHJlYXRtZW50IHR5cGljYWxseSBpcyByZXN0LCBpY2UsIG1hc3NhZ2UsIHRhcGluZyBhbmQgdGhlIHBvc3NpYmlsaXR5IG9mIGEgd2Fsa2luZyBib290IG9yIG9ydGhvdGljcywgcGh5c2ljYWwgdGhlcmFwaXN0cyBzYWlkLiBOb2FoIGV4cGVyaWVuY2VkIHNvbWUgcmVsaWVmIHdpdGggcGxhdGVsZXQgcmljaCBwbGFzbWEgaW5qZWN0aW9ucy4KWW91ciBjaHAgYXJlIG93bmVkIGJ5IHRoZSBzaXRlIGFuZCB3aGVuIHRoZXkgcnVuIG91dCB5b3UgY2FuIHdpdGggZHJhdyBvZmYgdGhlIHNpdGUgZXZlbiB0aG91Z2ggaXQgc2F5cyB5b3UgaGF2ZSBhIHRvbiBvZiBjb2lucyBpbiB5b3VyIHdhbGxldC4gSXRzIGEgbGllIHlvdSBkb24gb3duIHRob3NlIGNocCBhbmQgeW91ciB3YWxsZXQgY2hwIGlzIGp1c3QgYSBudW1iZXIgdGhlcmUgaXMgbm8gY2hwIGluIGl0LiAKSSBkb24ndCBuZWVkIHRvIGdvb2dsZSBpdC4gSSBrbm93IHRoZSByaXNrcyBmcm9tIHBlZXIgcmV2aWV3ZWQgc3R1ZGllcyBhbmQgaGF2ZSBoZWFyZCB0aGUgY29tcGxhaW50cyBvZiBwYXRpZW50cyB3aG8gaGF2ZSBleHBlcmllbmNlZCBhZHZlcnNlIGVmZmVjdHMgaW4gcGVyc29uLiBZb3VyIGFzc2VydGlvbiB0aGF0IHRoZXJlIGlzICJhbG1vc3QgbmV2ZXIgYW55IG5lZWQiIGZvciBNUkkgY29udHJhc3QgaXMgYWJzdXJkOyBpdCBpcyBlc3NlbnRpYWwgZm9yIGVhcmx5IGRldGVjdGlvbiBvZiBjYW5jZXIgYW5kIG1vbml0b3JpbmcgbXVsdGlwbGUgc2NsZXJvc2lzLiBUaGUgYmVuZWZpdHMgdG8gdGhvc2UgcGF0aWVudHMgYWZmZWN0ZWQgYnkgKG9yIHN1c3BlY3RlZCBvZiBoYXZpbmcpIHRob3NlIGRpc2Vhc2VzIGZhciBvdXR3ZWlnaCB0aGUgcmlza3Mgb2JzZXJ2ZWQgaW4gYSBmZXcgZG96ZW4gaHlwb2Nob25kcmlhY3MgbGlrZSBDaHVjayBOb3JyaXMnIHdpZmUuCkxvZ2ljYWxseSwgaXQgd291bGQgc2VlbSB0aGF0IGl0IGlzIGJldHRlciB0byBjaGFzZSBpbiBhbiBPREkgZ2FtZSwgdW5sZXNzIHRoZXJlIGlzIGEgbGlrZWxpaG9vZCBvZiB0aGUgcGl0Y2ggZGV0ZXJpb3JhdGluZyBvciBzbG93aW5nIGRvd24uIFlvdSB3b3VsZCB0aGluayB0aGF0IGtub3dpbmcgdGhlIHRhcmdldCB3b3VsZCBoZWxwIGluIHBhY2luZyBvdXQgdGhlIGlubmluZ3MsIGluc3RlYWQgb2YgZ29pbmcgZm9yIHRvbyBtdWNoIGFuZCBlbmRpbmcgdXAgd2l0aCB0b28gbGl0dGxlIGFzIGl0IHNvbWV0aW1lcyBoYXBwZW5zIHdoZW4gYmF0dGluZyBmaXJzdC4gCkhlIHN0YXJ0ZWQgYXR0ZW5kaW5nIHdlZWtseSB0aGVyYXB5IHNlc3Npb25zLCBnZXR0aW5nIHRoZSBtZWRzIHJpZ2h0IGFuZCBBbHlzc2EsIGEga2luZCBzb3VsIGFuZCBmcmllbmQgb2YgYSBmcmllbmQgZXZlbiBoZWxwZWQgaGltIGdldCBhIGpvYiBkZWxpdmVyaW5nIGRhaXJ5IHByb2R1Y3RzIHRvIGxvY2FsIGJ1c2luZXNzZXMuIApFZHVjYXRpb25hbCBtYXRlcmlhbHMgZm9yIHRoZSBwYXRpZW50IGFuZCBmYW1pbHkKRnJlZUNoYWlyOCAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxOCBkYXlzIGFnbwpOZWl0aGVyIG9wcHJlc3NlZCBub3IgdHJhaWxibGF6aW5nLCBNdXNsaW0gd29tZW4gbmVlZCB0byBiZSBoZWFyZCdNdXNsaW0gd29tZW4gYXJlIGJ1aWxkaW5nIHRoZWlyIG93biBzdGFnZXMgYW5kIGhpcmluZyB0aGVpciBvd24gbWljcyB0byBhZmZpcm0gdGhlbXNlbHZlcyBhbmQgdGhlaXIgcGVlcnMuJyBQaG90b2dyYXBoOiBSb2IgU3RvdGhhcmQvR2V0dHkgSW1hZ2VzVGhlIHBvbGl0aWNzIG9mIHRoZSBNdXNsaW0gd29tYW4gcmVtYWlucyB3cmFwcGVkIHVwIGluICJkZWJhdGUiLiAKTXJzLiBLZXJyIGFuZCBMZWVwZXIgd2VyZSBjaG9zZW4gdG8gcmVjZWl2ZSB0aGUgb3JnYW5zIGJlY2F1c2UgdGhleSBtb3N0IG5lYXJseSBtYXRjaGVkIHRoZSBkb25vciBwaHlzaWNhbGx5LiBTdWNoIHRlc3RzIGxlc3NlbiB0aGUgY2hhbmNlIG9mIHJlamVjdGlvbiBvZiB0aGUgbmV3IG9yZ2FuIGJ5IHRoZSBib2R5LiBJbiBhZGRpdGlvbiwgc3Rlcm9pZCBkcnVncyBhcmUgYWRtaW5pc3RlcmVkIGZvbGxvd2luZyB0aGUgb3BlcmF0aW9uIHRvIGRpbWluaXNoIHRoZSBjaGFuY2VzIG9mIHJlamVjdGlvbi4gUHJlY2F1dGlvbnMgc3RyZXRjaCB0byBicmFucyAgcG9ydGF0aW9uIGFsc28uIApBIHllYXIgYWdvIG15IGZhbWlseSBtZW1iZXIgKDI2KSBkaXNjb3ZlcmVkIHRoYXQgaGlzIGZpYW5jZSAoMjkpIG9mIDcgeWVhcnMsIHdobyBoZSBoYXMgMiBjaGlsZHJlbiB3aXRoIGhhZCBiZWVuIGhhdmluZyBhbiBhZmZhaXIgd2l0aCBoaXMgeW91bmdlciBicm90aGVyLCB3aG8ganVzdCB0dXJuZWQgMTguIEhpcyBicm90aGVyIHdhcyBsaXZpbmcgaW4gaGlzIGhvdXNlIHJlbnQgZnJlZSBhdCB0aGUgdGltZSBhcyB3ZWxsLiBTbyBoaXMgZmlhbmNlIGxlZnQgaGltIGZvciBoaXMgYnJvdGhlciBhbmQgaGFkIGEgZmxpbmcgd2l0aCBoaW0gZm9yIGEgY291cGxlIG1vbnRocy4gCkRpY2sgQmFya2VyIHdhcyBXaGl0ZSBmaXJzdCBodXNiYW5kIGFuZCB0aGV5IG1hcnJpZWQgYXMgd2VsbCBhcyBkaXZvcmNlZCBpbiB0aGUgc2FtZSB5ZWFyLCAxOTQ1LiBBcm15IEFpciBDb3JwcyBwaWxvdCBhbmQgdGhlIG1hcnJpYWdlIHdhcyBleHRyZW1lbHkgc2hvcnQuIFdoaXRlIGhhcyBzYWlkIHRoYXQsIHByaW9yIHRvIGhlciB0aGlyZCBodXNiYW5kLCBzaGUgZGlkbiBtYXJyeSB0aGUgbWVuLiAKT24gdGhlIDEwM3JkIGZsb29yLCBhIHRlYSBsb3VuZ2UgZm9yIGd1ZXN0cyBhbmQgb24gdGhlIDExOHRoIGZsb29yLCBhIHJvb2Z0b3AgcmVzdGF1cmFudCBhbmQgYmFyLCB1bmRvdWJ0ZWRseSBwcm92aWRpbmcgdGhlIHdvcmxkIG1vc3QgbWFnbmlmaWNlbnQgdmlld3MsIGFuZCBhbHNvIHRlc3RpbmcgdGhlIHZlcnRpZ28gb2YgaXRzIGd1ZXN0cy4uIApObyB3b25kZXIgTXJzLiBLZW50IHN0b2xlIGFsbCB0aGF0IG1vbmV5IGZvciBoZXIgd2VkZGluZy4gU2hlIHdvdWxkIG5vdCBoYXZlIGJlZW4gd29ydGh5IG9mIGEgaGFwcGlseSBldmVyIGFmdGVyLiAKTGVvbiBDaGFpdG93LCBvbiB0aGlzIHZlcnkgc3ViamVjdCwgY2FsbGVkIEFkaGVzaW9ucyBhcyBGYXNjaWFsIFBhdGhvbG9neS4gdGhpcyBhcnRpY2xlIEkgZGlzY3VzcyBub3JtYWwgYW5kIGFibm9ybWFsIHR5cGVzIG9mIGFkaGVzaW9uIGluIHRoZSB2aXNjZXJhLCBhcyB3ZWxsIGFzIHRoZWlyIGNhdXNlcyBhbmQgdGhlaXIgZWZmZWN0cywgd2l0aCBpbGx1c3RyYXRpb25zIHByb3ZpZGVkLkkgdGhpbmsgeW91IGNhbiBsb29rIHRoaXMgYXJ0aWNsZSB1cCBvbiBsaW5lIG9yIHdpbGwgYmUgYWJsZSB0byBvbmNlIHRoZSBwcmludCB2ZXJzaW9uIGlzIG9mZmljaWFsbHkgcHVibGlzaGVkLCB0aG91Z2ggSSBub3Qgc3VyZSB0aGF0IHRoZSBwcmludCB2ZXJzaW9uIGhhcyB0aGUgbmV3c3N0YW5kcyB5ZXQsIGFzIHRoZSBhcnRpY2xlIHdhcyBqdXN0IGFjY2VwdGVkIGZvciBwdWJsaWNhdGlvbiBpbiBOb3ZlbWJlciAyMDA5LkkgbWVudGlvbiB0aGlzIGFydGljbGUgYmVjYXVzZSBpdCBpcyBhIGNvbmNyZXRlIGRlbW9uc3RyYXRpb24gb2YgZXhhbXBsZXMgd2hlcmUgdGhlIGluaGliaXRpb24gb2YgbW92ZW1lbnQgcmVzdWx0cyBpbiB0aXNzdWUgYmluZGluZyBhbmQgcGF0aG9sb2dpY2FsIHN0YXRlcyBvZiBtb2JpbGl0eS5UaGVyZSBhcmUgc3R1ZGVudHMgb2YgdGhlIGJvZHkgd2hvIGFyZSBvcmllbnRlZCB0b3dhcmRzIHRoZSByZXNlYXJjaCBsaXRlcmF0dXJlLCB3aGlsZSBJIGFtIG9yaWVudGVkIHRvd2FyZHMgdGhlIHZlcnkgcHJhY3RpY2FsIGVmZm9ydHMgb2Ygb2JzZXJ2YXRpb24gaW4gdGhlIGxhYm9yYXRvcnkuIApJZiBpdCBpcyB0b28gaGlnaCBhbmQgeW91IGFyZSBzcGVha2luZyB3aXRoIGEgdGFsbGVyIGluZGl2aWR1YWwsIHlvdSB3aWxsIGFwcGVhciB0byBiZSBzZWFyY2hpbmcgZm9yIHRoZWlyIGFwcHJvdmFsICAgZXZlbiBuZWVkeS4gCkV2ZXJ5IHRpbWUgeW91IGF0dGVtcHQgdG8gcGFyc2UgSFRNTCB3aXRoIHJlZ3VsYXIgZXhwcmVzc2lvbnMsIHRoZSB1bmhvbHkgY2hpbGQgd2VlcHMgdGhlIGJsb29kIG9mIHZpcmdpbnMsIGFuZCBSdXNzaWFuIGhhY2tlcnMgcHduIHlvdXIgd2ViYXBwLiAKUmVzZWFyY2hlciBPbGl2ZXIgSG91Z2ggZmlyc3Qgbm90aWNlZCB0aGUgbWlzaGFwIGFuZCByZXBvcnRlZCBpdCB0byBUZWNoQ3J1bmNoIG9uIFR1ZXNkYXkuIFVyYmFuIHF1aWNrbHkgdG9vayBkb3duIHRoZSBkYXRhYmFzZSBhZnRlciB0aGUgc2VjdXJpdHkgYnJlYWNoIHdhcyBkaXNjb3ZlcmVkLgpXb3csIEkganVzdCB3ZW50IHRvIHRoaXMgbHlpbmcgY29ja3N1Y2tlcnMgc3R1cGlkIHdlYnNpdGUgYW5kIHJlYWQgdGhlIGFydGljbGUuIApIZXIgZ29hbCBpcyB0byB0ZWFjaCBvdGhlcnMgdG8gZGFuY2UgdGhyb3VnaCB0aGUgZGFyayBhbmQgdG93YXJkcyB0aGUgbGlnaHQuIERhbmNpbmcgdGhlIEppbmdsZSBEYW5jZSwgdGhlIEppZywgYW5kIEhpcCBIb3AgaXMgaGVyIHdheSBvZiBtZWRpdGF0aW5nLCBvZiBnaXZpbmcgYmFjaywgb2YgaW5zcGlyaW5nIGNoYW5nZS4uIApUaGVuIEkgc3RhcnRlZCBhc2tpbmcgYWJvdXQgY291cnQgZGF0ZXMgc28gSSBjb3VsZCBhdHRlbmQsIGFuZCBzdWJtaXR0ZWQgYSBsZXR0ZXIgdG8gdGhlIGp1ZGdlIHRvIHNwZWFrIGF0IHRoZSBuZXh0IGhlYXJpbmcuIApQZW9wbGUgbmVlZCB0byBzdG9wIGFjY2VwdGluZyBNYXJ2ZWwgdHVybmluZyB0aGVpciBjb21pYyBib29rcyBpbnRvICJ0aGUgZnVubmllcyIgb24gdGhlIGJpZyBzY3JlZW4uIApJdCBtdWNoIG1vcmUgb2theSB0byBsZWF2ZSBhbmQgc2VlayBoaWdoZXIgZWR1Y2F0aW9uLiBUaGlzIHN0YXJ0ZWQgYSBsaXR0bGUgYmVmb3JlIEkgaGl0IGhpZ2ggc2Nob29sLCBidXQgSSBnbGFkIGl0IGdhaW5pbmcgZ3JvdW5kLiBJIHN0aWxsIHdvdWxkbiBzYXkgaXQgZW50aXJlbHkgb2theSBpZiB5b3UgZG9uIHBsYW4gdG8gcmV0dXJuLCBidXQgaXQgbm8gbG9uZ2VyIGRpc2hvbm9yIG9uIHlvdSwgeW91ciBmYW1pbHksIHlvdXIgY293LCBldGMuCllvdSBjYW4gZXZlbiBkbyB0aGlzIG9uIHlvdXJzZWxmLiAKTm93IGlmIHRoZXkgZG8gbWFrZSBhbiBldGYgdGhlIGNvcnJ1cHQgYXJlIGdvaW5nIHRvIGhhdmUgaXQgYW5kIHRoZXkgY2FuIHB1bXAgYW5kIGR1bXAgaXQgYW5kIGNvbnRyb2wgdGhlIHByaWNlIGNhdXNlIHRoZXkgd2lsbCBoYXZlIGEgbWFqb3Igc2hhcmUgb2YgaXQgaW4gdGhlIGV0Zi4gCkZvcmVpZ24gcG9saWN5IG9mIHRoZSBVbml0ZWQgU3RhdGVzCkFuYWx5c2Ugc3RlcmtlIGVuIHp3YWtrZSBwdW50ZW4gZW4gaGV0IGFhbnBha3BsYW46T3AgMTIgNSAyMDE2IGhlZWZ0IGRlIHR1c3NlbnRpamRzZSBldmFsdWF0aWUgcGxhYXRzZ2V2b25kZW4uIEdlZHVyZW5kZSBkZXplIGV2YWx1YXRpZSBpcyBiZXNwcm9rZW4gaG9lIGRlIHN0YWdlIHZlcmxvb3B0LCBvZiBlciB2b2xkYWFuIHdvcmR0IGFhbiBkZSBsZWVyZG9lbGVuIGVuIHdhdCBkZSBzdGVya2UgZW4gendha2tlIHB1bnRlbiB6aWpuLiBNaWRkZWxzIGhldCBkb29ybmVtZW4gdmFuIGhldCBiZW9vcmRlbGluZ3Nmb3JtdWxpZXIsIGRlIEtWQSBsaWpzdCBlbiByZWxldmFudGllIHNpdHVhdGllcyB1aXQgZGUgc3RhZ2UgaXMgZXIgZ2V2YWx1ZWVyZCBvdmVyIGRlIGh1aWRpZ2Ugc3RhbmQgdmFuIHpha2VuLiBTYW1lbiBtZXQgZGUgc3RhZ2ViZWdlbGVpZGVycyBUYXJhIEZpbGFyc2tpICBCbG9rIGVuIFN0ZXBoYW5pZSBIYWsgaXMgZXIgYmVzbG90ZW4gb20gZGUgc3RhZ2Ugdm9vcnQgdGUgemV0dGVuIGVuIHRlIHdlcmtlbiBhYW4gZGUgendha2tlIHB1bnRlbiwgb20gem8gYWxsZSBsZWVyZG9lbGVuIHRlIGJlaGFsZW4gZW4gb20gaGV0IG1heGltYWxlIGFhbiBsZWVybW9nZWxpamtoZWRlbiB1aXQgZGUgc3RhZ2UgdGUgaGFsZW4uIE5pZXV3ZSBsZWVyZG9lbGVuIHppam4gdG9lZ2V2b2VnZCBlbiBmZWVkYmFjayBpcyBnZWdldmVuIG9wIGhldCBoYW5kZWxlbiBiaW5uZW4gZGUgY29tcGV0ZW50aWUgZ2ViaWVkZW4uIEluIHNhbWVuc3ByYWFrIG1ldCBkZSBzdGFnZWJlZ2VsZWlkZXJzIGlzIGVyIGJlc2xvdGVuIG9tIGRlIHN0YWdlIHZvb3J0IHRlIHpldHRlbiBlbiBzYW1lbiB0ZSB3ZXJrZW4gYWFuIGRlIGh1aWRpZ2UgZW4gbmlldXcgZ2Vmb3JtdWxlZXJkZSBsZWVyZG9lbGVuLiBEZXplIGxlZXJkb2VsZW4gd29yZGVuIGhpZXJvbmRlciBpbiBlZW4gb3ZlcnppY2h0IHdlZXJnZXZlbi4gRGUgbGVlcmRvZWxlbiB3b3JkZW4gZ2Vrb3BwZWxkIGFhbiBkZSBjb21wZXRlbnRpZWdlYmllZGVuIGVuIGVyIHdvcmR0IGdla2VrZW4gbmFhciBkZSBiZW5vZGlnZGUgc3RhcHBlbi9taWRkZWxlbiBvbSBkZSBsZWVyZG9lbGVuIHRlIGJlaGFsZW4uClJvYmVydHMgc3VtbWFyaXplZCB0aGUgcG9saXRpY3Mgb2YgdGhlIHNpdHVhdGlvbiwgIldoYXQgeW91IGRvbiB3YW50IHRvIGRvIGlzIHJlYWxseSBodXJ0IHRoZSB2ZXJ5IGZvbGtzIHdobyBicm91Z2h0IHlvdSB0byB0aGUgZGFuY2UuIgpbTV0gIFtzY29yZSBoaWRkZW5dICBzdWJtaXR0ZWQgMSBtb250aCBhZ29Jbml0aWFsbHkgdGhpcyBwb3N0IHdhcyBub3QgYXBwcm92ZWQsIGJ1dCBhZnRlciBtb2QgZGlzY3Vzc2lvbiwgc2luY2UgYW5vdGhlciBzaW1pbGFyIHBvc3Qgd2FzIGFwcHJvdmVkLCB3ZSBkZWNpZGVkIHRvIGFwcHJvdmUgcG9zdHMgdGhhdCBhaW0gdG8gdHJ5IGFuZCBoZWxwIG91ciBmZWxsb3cgbWFzc2FnZSB0aGVyYXBpc3RzLlNlbGYgYWR2ZXJ0aXNpbmcsIGJ1c2luZXNzIGFkdmVydGlzaW5nIHBvc3RzIGFyZW4gYWxsb3dlZCwgc28gaWYgeW91IGd1eXMgdGhpbmsgaWYgdGhlcmUgYXJlIHNpbWlsYXIgcG9zdHMgdGhhdCBoYXZlIHZlcnkgaGlnaCBhZ2VuZGEgaW4gYWR2ZXJ0aXNpbmcgaW5zdGVhZCBvZiB0cnlpbmcgdG8gZ2l2ZSBhZHZpY2UgYW5kIGhlbHAsIHBsZWFzZSBsZXQgdXMga25vdyB0aHJvdWdoIHRoZSByZXBvcnQgYnV0dG9uIG9yIG1lc3NhZ2UgdGhlIG1vZHMuW01dICAwIHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvdGhlIG90aGVyIHBvc3Qgd2FzbiBwdXNoaW5nIHByb2R1Y3RzIGJ1dCBpdCB3YXMgYSBzZWxmIGFkdmVydGlzaW5nIGZvciB0aGVpciBvd24geW91dHViZSBjaGFubmVsLmJvdGggYXJlIHNpbWlsYXIgaW4gYWR2ZXJ0aXNpbmcgcG9zdCwgaG93ZXZlciB3ZSBzZWUgdGhhdCB0aGVyZSBpcyBhIHBvc3NpYmlsaXR5IGl0IGNvdWxkIGJlIGJlbmVmaWNpYWwgdG8gdmlld2Vycy5pdCBkb2VzIGhhdmUgMTAgdXB2b3Rlcywgc28gc29tZSBwZW9wbGUgZG8gdGhpbmsgaXQgYmVuZWZpY2lhbC53ZSB3aWxsIGtlZXAgYSBkaXNjdXNzaW9uIGJldHdlZW4gdGhlIG1vZHMgYW5kIGRlY2lkZSBob3cgd2Ugc2hvdWxkIGVuZm9yY2UgdGhpcyBydWxlLCBpZiBhbiBhZHZlcnRpc2luZyBwb3N0IGlzIGJlbmVmaWNpYWwsIHRoYXQgd2Ugc2hvdWxkIHJlbW92ZSBvciBub3QuOCBCaXRCYWtlciAgMyBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnb0kgaGF2ZSBhY3R1YWxseSBmb3VuZCBpbiB0aGUgbGFzdCB5ZWFyIHRoYXQgc2FsdCByZWFsbHkgZG9lcyBoYXZlIGEgZGlmZmVyZW50IHRhc3RlIHRvIGl0IHZlcnN1cyBwbGFpbiBvbGQgdGFibGUgc2FsdC4gCklmIHlvdSBoYXZlIHRoZW0gb24gYW4gb2J2aW91cyBkcmF3LCBiZXQgc29saWQuIApUaGVpciBjcmF6aW5lc3MgaXMgdGhlaXIgcmlzayBhbmQgcmV3YXJkLiAKRWR1Y2F0aW9uIEEgaGlnaCBzY2hvb2wgZGlwbG9tYSBvciBHRUQgaXMgcmVxdWlyZWQgdG8gYXBwbHkgdG8gbW9zdCBtYXNzYWdlIHNjaG9vbHMgYW5kIHByb2dyYW1zLiBQcml2YXRlIHNjaG9vbHMgYXJlIGNvbW1vbiwgYWx0aG91Z2ggeW91IGNhbiBmaW5kIHByb2dyYW1zIGluIHNvbWUgY29tbXVuaXR5IGFuZCB2b2NhdGlvbmFsIGNvbGxlZ2VzLiAKQXMgc29vbiBhcyBJIGNsaWNrZWQgdGhlIGxpbmsgSSBrbmV3IHRoaXMgd2FzIGdvaW5nIHRvIGJlIG9sZCBzcGljZSEgTXkgZGFkIGhhZCB0aGUgc2FtZSByZWFjdGlvbiB0byB0aGVpciBib2R5IHdhc2ghIE15IG1vbSBjb250YWN0ZWQgdGhlIGNvbXBhbnkgYW5kIGFsbCB0aGV5IGRpZCB3YXMgbWFpbCBoZXIgY291cG9ucyBmb3IgbW9yZSBvZiB0aGUgc2FtZSBwcm9kdWN0LiBMb2wgbm8gdGhhbmtzLgpPdGhlciBnYW1lcyB0aGF0IGRvIGluZmFjdCBrZWVwIGNpdmlsaWFucyBpbiB0aGUgbGV2ZWwgd2luZCB1cCBnaXZpbmcgcGVuYWx0aWVzIGlmIHlvdSBraWxsIGNpdmlsaWFucywgd2hpY2ggY2FuIGluY2x1ZGUgZ2FtZSBvdmVyIGNvbmRpdGlvbnMuLiAKQkJCSiBhdCB0aGUgTWFzc2FnZSBQYXJsb3IKTWFraW5nIHRoZSBMaXN0SG93IFdlIFBpY2tlZCB0aGUgTGlzdEEgICBCVGhlIEFkdmVudHVyZXMgb2YgQXVnaWUgTWFyY2hBbGwgdGhlIEtpbmcgTWVuQW1lcmljYW4gUGFzdG9yYWxBbiBBbWVyaWNhbiBUcmFnZWR5QW5pbWFsIEZhcm1BcHBvaW50bWVudCBpbiBTYW1hcnJhQXJlIFlvdSBUaGVyZSBHb2Q/IEl0IE1lLCBNYXJnYXJldFRoZSBBc3Npc3RhbnRBdCBTd2ltIFR3byBCaXJkc0F0b25lbWVudEJlbG92ZWRUaGUgQmVybGluIFN0b3JpZXNUaGUgQmlnIFNsZWVwVGhlIEJsaW5kIEFzc2Fzc2luQmxvb2QgTWVyaWRpYW5CcmlkZXNoZWFkIFJldmlzaXRlZFRoZSBCcmlkZ2Ugb2YgU2FuIEx1aXMgUmV5QyAgIERDYWxsIEl0IFNsZWVwQ2F0Y2ggMjJUaGUgQ2F0Y2hlciBpbiB0aGUgUnllQSBDbG9ja3dvcmsgT3JhbmdlVGhlIENvbmZlc3Npb25zIG9mIE5hdCBUdXJuZXJUaGUgQ29ycmVjdGlvbnNUaGUgQ3J5aW5nIG9mIExvdCA0OUEgRGFuY2UgdG8gdGhlIE11c2ljIG9mIFRpbWVUaGUgRGF5IG9mIHRoZSBMb2N1c3REZWF0aCBDb21lcyBmb3IgdGhlIEFyY2hiaXNob3BBIERlYXRoIGluIHRoZSBGYW1pbHlUaGUgRGVhdGggb2YgdGhlIEhlYXJ0RGVsaXZlcmFuY2VEb2cgU29sZGllcnNGICAgR0ZhbGNvbmVyVGhlIEZyZW5jaCBMaWV1dGVuYW50IFdvbWFuVGhlIEdvbGRlbiBOb3RlYm9va0dvIFRlbGwgaXQgb24gdGhlIE1vdW50YWluR29uZSBXaXRoIHRoZSBXaW5kVGhlIEdyYXBlcyBvZiBXcmF0aEdyYXZpdHkgUmFpbmJvd1RoZSBHcmVhdCBHYXRzYnlIICAgSUEgSGFuZGZ1bCBvZiBEdXN0VGhlIEhlYXJ0IGlzIEEgTG9uZWx5IEh1bnRlclRoZSBIZWFydCBvZiB0aGUgTWF0dGVySGVyem9nSG91c2VrZWVwaW5nQSBIb3VzZSBmb3IgTXIuIEJpc3dhc0ksIENsYXVkaXVzSW5maW5pdGUgSmVzdEludmlzaWJsZSBNYW5MICAgTkxpZ2h0IGluIEF1Z3VzdFRoZSBMaW9uLCBUaGUgV2l0Y2ggYW5kIHRoZSBXYXJkcm9iZUxvbGl0YUxvcmQgb2YgdGhlIEZsaWVzVGhlIExvcmQgb2YgdGhlIFJpbmdzVGhlIE1vdmllZ29lckxvdmluZ0x1Y2t5IEppbVRoZSBNYW4gV2hvIExvdmVkIENoaWxkcmVuTWlkbmlnaHQgQ2hpbGRyZW5Nb25leU1ycy4KVGhlcmUncyBkb2dzLCB0aGVyZSdzIGhvcnNlcywgcnVnYnkgbGVhZ3VlICAgeW91IGNhbiBiZXQgb24gYW55dGhpbmcsIiBoZSBzYWlkLiAiVGhlIGNhcGFjaXR5IGZvciBnYW1ibGluZyBoYXMgYmVjb21lIG1vcmUgc2lnbmlmaWNhbnQuIiBXaGlsZSBnYW1ibGluZyBhZGRpY3Rpb24gd2FzIGEgInRlcnJpYmxlIHRoaW5nIiwgTXIgRmVyZ3Vzb24gc2FpZCB0aGUgc3RhdGlzdGljcyBzaG93ZWQgb25seSAidHdvIHRvIHRocmVlIHBlciBjZW50IiBvZiBnYW1ibGVycyBzdWZmZXJlZCBmcm9tIHRoZWlyIGhhYml0cy4gUGFudGhlcnMgQmF0aHVyc3QgZ2VuZXJhbCBtYW5hZ2VyIEpvaG4gRmVhcm5sZXkgc2FpZCB0aGUgY2x1YiBkaWQgbm90IG9mZmVyIGFjY291bnRzIG9yIHNtYXJ0Y2FyZHMsIGJ1dCBjb21wbGltZW50ZWQgdGhlIE5TVyBHb3Zlcm5tZW50IG9uIHRoZSBpbnRyb2R1Y3Rpb24gb2YgYSBtaW5pbXVtIHNpeCBtb250aCBzZWxmIGV4Y2x1c2lvbiBwZXJpb2QuIAooUHJpdmFjeSBQb2xpY3kpRmFjZWJvb2sgQWRzVGhpcyBpcyBhbiBhZCBuZXR3b3JrLiAKVEVOVEF0aGVTYW5lICA1IHBvaW50cyAgc3VibWl0dGVkIDEgeWVhciBhZ28KRXZlbiB0aG91Z2ggbXkgRmlkbyBwaG9uZSAob24gdGhlIFJvZ2VycyBuZXR3b3JrKSBkcm9wcyB0byAzRyBpbiBzb21lIGFyZWFzLCB0aGUgc2F2aW5ncyBtYWtlIGl0IHdvcnRoIG5vdCBzd2l0Y2hpbmcuIApGaXJzdCwgYmVpbmcgYSBsYW5kIGdyYW50IHNjaG9vbCByZWFsbHkgZGlmZmVyZW50aWF0ZXMgaXQsIGFuZCB0aGF0IGNvbmNlcHQgc2VlbXMgbGlrZSBzb21ldGhpbmcgY29uc2VydmF0aXZlcyB3b3VsZCB3YW50IHRvIGF2b2lkLiBBbmQgaGF2aW5nIG91ciByZWxhdGl2ZWx5IHVuaXF1ZSBsYWJvciByZWxhdGlvbnMgc2Nob29sIHNob3VsZCBqdXN0IGJlIGEgYmlnIHJlZCBmbGFnIGlmIHlvdSBhIGNvbnNlcnZhdGl2ZS4gKEFsdGhvdWdoIEkgZG8ga25vdyBjb25zZXJ2YXRpdmVzIGluIHRoYXQgc2Nob29sKS4uIApPY2Nhc2lvbmFsbHkgdG91cm5hbWVudHMgYXBwZWFyIHdoZXJlIHRoZXJlIGFyZSByZWFsIHByaXplcyBmb3Igbm8gZW50cnkgZmVlLiBNb3N0IHRvdXJuYW1lbnRzIHNlZSB5b3UgcGF5IGEgZmVlIHRvIGVudGVyIGFuZCB0aGVuIGV2ZXJ5b25lIGdldHMgdGhlIHNhbWUgbnVtYmVyIG9mIGNoaXBzLiAKSGFzc2FuIGNhbGxlZCBvdXQgQW5vbWFseSdzIGZvY3VzIG9uIGJvdGggY3JlYXRpdml0eSBhbmQgdGVjaG5vbG9neSBpbiB0aGUgbWFya2V0aW5nIGxhbmRzY2FwZS4gIlRoZSBBbm9tYWx5IHRlYW0gaGFzIGRlbW9uc3RyYXRlZCB0cmVtZW5kb3VzIHBhc3Npb24gZm9yIG91ciBicmFuZCwgYSBkZWVwIHVuZGVyc3RhbmRpbmcgb2Ygb3VyIGNvbnN1bWVyLCBhbmQgdGhlIHN0cmF0ZWdpYyBwcm93ZXNzIHRvIHVubG9jayBmdXR1cmUgZ3Jvd3RoIG9wcG9ydHVuaXRpZXMgZm9yIFBldGNvLCIgaGUgc2FpZCBpbiBhIHN0YXRlbWVudC4KVGhlcmUgd2FzIG5vIG5lZ290aWF0aW9ucyBvciBjb252ZXJzYXRpb25zIHdpdGggR3Vubi4gCkRvd25sb2FkIGJvb2sgUERGLiAKIlRoZSBhdmVyYWdlIHJldHVybiBvZiBhbGwgZ2FtaW5nIG1hY2hpbmVzIG92ZXIgdGhpcyBwZXJpb2QgW3dhc10gYWJvdXQgOTAgcGVyIGNlbnQsIiB0aGUgc3Bva2VzbWFuIHNhaWQuICJIb3dldmVyLCB0aGUgcmV0dXJuIGR1cmluZyBhIHNpbmdsZSBwbGF5aW5nIHNlc3Npb24gdmFyaWVzICAgYSBwbGF5ZXIgbWF5IHdpbiBtb3JlIHRoYW4gdGhleSBwdXQgaW50byBhIG1hY2hpbmUgb3IgdGhleSBtYXkgbG9zZSBtb3JlIHRoYW4gMTUlLiIgVXNpbmcgdGhlc2UgYXNzdW1wdGlvbnMsIHRoZSByZWdpb24gbG9zdCBhIGNvbGxlY3RpdmUgJDI1MCBtaWxsaW9uIHRvIHRoZSBwb2tpZXMgaW4gMjAxNC8xNS4gVW5zdXJwcmlzaW5nbHksIHRoZSBXb2xsb25nb25nIExvY2FsIEdvdmVybm1lbnQgQXJlYSBoYWQgdGhlIGJpZ2dlc3QgcG9rZXIgbWFjaGluZSB0dXJub3Zlciwgd2l0aCAkMS44NSBiaWxsaW9uIHB1c2hlZCB0aHJvdWdoIG1vcmUgdGhhbiAzMDAwIGdhbWluZyBtYWNoaW5lcy4gCk1ha2UgaXQgYSByb3V0aW5lLiBZb3VyIHNpZGVidXJucyBzaG91bGQgYmUgdHJpbW1lZCBhdCBsZWFzdCBldmVyeSB0d28gd2Vla3MuIE1ha2UgY2xlYW5pbmcgYW5kIG1vaXN0dXJpemluZyBhIHBhcnQgb2YgeW91ciBkYWlseSBoeWdpZW5lIHJvdXRpbmUuClRoZW4gaGUgc2l0cyBmb3IgbWUsIGFuZCB3YWl0cyBmb3IgdGhlICJva2F5ISIgY3VlIGZvciBoaW0gdG8gYmUgYWxsb3dlZCB0byBwbGF5IHR1ZyBhZ2Fpbi4gCkFjY2VzcyB0byB0b3Agc3BlY2lhbGlzdHMgaW4gdGhlIGZpZWxkcyBvZiBVcm9sb2d5LCBSYWRpYXRpb24gT25jb2xvZ3ksIFJhZGlvbG9neSBhbmQgUGF0aG9sb2d5Cjcgb2YgbXkgcmVhbCBsaWZlIGZyaWVuZHMgaGF2ZSBxdWl0IGFzIG9mIHRoaXMgbW9ybmluZyBiZWNhdXNlIG9mIERQUyBxdWV1ZXMuIE5vdCBleGFnZ2VyYXRpbmcuIEFuZCBJJ20gdXBzZXQuIApJIHJlY2VudGx5IHJlcGxhY2VkIG15IGhlYXRzaW5rIGFjdHVhbGx5LCBhcm91bmQgYSB3ZWVrIGFnbywgYnV0IEkgZG9uJ3Qga25vdyBpZiB0aGF0IGhhcyBhbnl0aGluZyB0byBkbyB3aXRoIGl0IGNvbnNpZGVyaW5nIG15IHRlbXBzIGFyZSBmaW5lIChiZXR0ZXIgYWN0dWFsbHkpLi4gClNlY3JldGFyeSBvZiBTdGF0ZSBIaWxsYXJ5IENsaW50b24gKEwpIGFuZCBTZW4uIAoiT3VyIGhvcGUgaXMgdGhlIGdvdmVybm9yJ3Mgb2ZmaWNlIGZpbmRzIHRoaXMgZW5vdWdoIG9mIGFuIGluY2VudGl2ZSB0byB0cnkgdG8gY29tZSBiYWNrIGFuZCBtZWV0IHdpdGggbGF3bWFrZXJzIGFuZCBkZWFsIHdpdGggU2VuYXRlIEJpbGwgODc4IHRoYXQgYWRkcmVzc2VzIHRoZSBwcm9ibGVtcyB0aGF0IGhhdmUgYmVlbiBnb2luZyBvbiBpbiB0aGUgaW5kdXN0cnkgd2hpbGUgc3RpbGwgcHJvdGVjdGluZyBjaGFyaXRpZXMgYWJpbGl0eSB0byByYWlzZSBmdW5kcywiIHNoZSBzYWlkLiAKQSBsaXJlIGF0dGVudGl2ZW1lbnQgYXZhbnQgZGUgbWUgc29sbGljaXRlcgpJIHRoZW4gZ3JhYmJlZCBzb21lIG9mIG15IHR3aWdzIGFuZCBicm9rZSB0aGVtIHVwLiAKQSBib21iIHBvdCBpcyBzb3J0IG9mIGxpa2UgZHJhc3RpY2FsbHkgaW5jcmVhc2luZyB0aGUgc3Rha2VzIG9mIHRoZSBnYW1lLiBTdWRkZW5seSwgZXZlcnlvbmUgaXMgcGxheWluZyBhIGdhbWUgYXQgbXVjaCBhdCBtdWNoIGhpZ2hlciBzdGFrZXMgdGhhbiB0aGV5IGFyZSBjb21mb3J0YWJsZSB3aXRoL3VzZWQgdG8sIHdpdGggYSBzaG9ydGVyIHN0YWNrLCBhbmQgTk8gaW5mb3JtYXRpb24gYWJvdXQgdGhlaXIgb3Bwb25lbnRzIGhvbGUgY2FyZHMuCkkgZG8gaG9wZSB0aG91Z2ggdGhhdCB3ZSBjYW4gc2VwYXJhdGUgb25saW5lIHBva2VyIGZyb20gdGhlIGxhdy4gQnV0IGtub3dpbmcgdGhlIFN3aXNzIHBhY2UgSSBiZWxpZXZlIHRoYXQgdGhlIEVVIHJlYWNoZXMgYW4gYWdyZWVtZW50IGZpcnN0LCB0aGF0IHdlIHRoZW4gc2lsZW50bHkgam9pbjpEVGhlIHRoaW5nIGlzIHRoYXQgdGhlIGdvdmVybm1lbnQgZGlkbiBtYWtlIHRoZSBkZWNpc2lvbi4gNzUlIG9mIHRob3NlIHdobyB2b3RlZCBpbiBhIGRpcmVjdCBjb3VudHJ5IHdpZGUgdm90ZSBtYWRlIHRoaXMgZGVjaXNpb24uLiAKSXQgZWFzaWx5IHRoZSBtb3N0IGVuZ3Jvc3Npbmcgb3V0IG9mIGFsbCBvZiB0aGVtLCBpIGZlbHQgYWJzb2x1dGVseSBpbW1lcnNlZCBpbiB0aGUgY2l0eSwgYW5kIHRvIHRvcCBpdCBhbGwgb2ZmIGl0IGFyZ3VhYmx5IHRoZSBtb3N0IGRldGFpbGVkIEdUQSB0aGV5IGV2ZXIgbWFkZSwgd2hlbiB5b3UgY29uc2lkZXIgYSBsb3Qgb2YgdGhlIGJ1aWxkaW5ncyBoYXZlIGludGVyaW9ycy4gCkNvbXBsZXRlbHkgZWxpbWluYXRlZCBteSBwc3ljaG9zaXMgd2l0aGluIGEgd2Vlay4gCkxhdXJhIEZsYW5kZXJzCkhpcyBwcmVzaWRlbmN5IGNhbiBtZWFuIGJhZCBuZXdzIGZvciByZWdpb25zIGxpa2Ugb3Vycy4gSGUgaXMgYSByZWQgYnVsbCBpbiBhIGNoaW5hIHNob3AgYW5kIGNhbiBiZSB0b3RhbGx5IHVucHJlZGljdGFibGUuIApJIG9ubHkgdXNlIExpYnJheCBvbiBhbiBhcyBuZWVkZWQgYmFzaXMuIApFZGl0OiBHdXlzLCBJIGdldCBpdCwgaXQgYWJvdXQgbW9uZXkuIEJ1dCBqdXN0IGJlY2F1c2UgaXQgYWJvdXQgbW9uZXkgZG9lc24gbWVhbiBpdCBoYXMgYSBwbGFjZSBpbiB1bml2ZXJzaXR5LiBJZiB1bmlzIHN0YXJ0ZWQgZ3Jvd2luZyBwb3QgdGhleSBtYWtlIGEgbG90IG9mIG1vbmV5IHRvbyBidXQgd2UgZG9uIHNlZSB0aGVtIGRvaW5nIHRoYXQuIApQZXJzb25hbGx5LCBhcyBhIGdheSBtYW4sIEkgaGF0ZSBiZWluZyBjYWxsZWQgcXVlZXIgYW5kIEkgZG9uJ3QgaWRlbnRpZnkgYXMgcXVlZXIuIENhbGwgbWUgZ2F5LiBEb24ndCBjYWxsIG1lIHF1ZWVyLiAKSGUgY291bGQgb25seSB3YXRjaCBhcyBoaXMgMjQgeWVhciBsYWJvciBvZiBsb3ZlIHdhcyBodXJyaWVkbHkgY29tcGxldGVkIGJ5IGEgYnVuY2ggb2Ygc2NhYnMgd2l0aCBhIGhhcnNoIGRlYWRsaW5lIGFuZCBubyBidWRnZXQuIApQdW50YSBDYW5hIFRvdXJpc21QdW50YSBDYW5hIEhvdGVsc0JlZCBhbmQgQnJlYWtmYXN0IFB1bnRhIENhbmFQdW50YSBDYW5hIEhvbGlkYXkgUmVudGFsc1B1bnRhIENhbmEgSG9saWRheSBQYWNrYWdlc0ZsaWdodHMgdG8gUHVudGEgQ2FuYVB1bnRhIENhbmEgUmVzdGF1cmFudHNQdW50YSBDYW5hIEF0dHJhY3Rpb25zUHVudGEgQ2FuYSBUcmF2ZWwgRm9ydW1QdW50YSBDYW5hIFBob3Rvc1B1bnRhIENhbmEgTWFwUHVudGEgQ2FuYSBHdWlkZUFsbCBQdW50YSBDYW5hIEhvdGVsc1B1bnRhIENhbmEgSG90ZWwgRGVhbHNMYXN0IE1pbnV0ZSBIb3RlbHMgaW4gUHVudGEgQ2FuYUJ5IEhvdGVsIFR5cGVQdW50YSBDYW5hIFJlc29ydHNQdW50YSBDYW5hIEJlYWNoIEhvdGVsc1NwYSBIb3RlbHMgaW4gUHVudGEgQ2FuYUZhbWlseSBIb3RlbHMgUHVudGEgQ2FuYVJvbWFudGljIEhvdGVscyBpbiBQdW50YSBDYW5hQnVzaW5lc3MgSG90ZWxzIFB1bnRhIENhbmFDYXNpbm9zIGluIFB1bnRhIENhbmFQdW50YSBDYW5hIEdyZWVuIEhvdGVsc0x1eHVyeSBIb3RlbHMgaW4gUHVudGEgQ2FuYUJ5IEhvdGVsIENsYXNzNSBzdGFyIEhvdGVscyBpbiBQdW50YSBDYW5hNCBzdGFyIEhvdGVscyBpbiBQdW50YSBDYW5hMyBzdGFyIEhvdGVscyBpbiBQdW50YSBDYW5hQnkgSG90ZWwgQnJhbmRSSVUgSG90ZWxzIFJlc29ydHMgaW4gUHVudGEgQ2FuYUliZXJvc3RhciBIb3RlbHMgUmVzb3J0cyBpbiBQdW50YSBDYW5hQ2F0YWxvbmlhIEhvdGVscyBpbiBQdW50YSBDYW5hV2hhbGEgSG90ZWxzIGluIFB1bnRhIENhbmFIMTAgSG90ZWxzIGluIFB1bnRhIENhbmFHcmFuZCBQYWxsYWRpdW0gSG90ZWxzIFJlc29ydHMgaW4gUHVudGEgQ2FuYVBhcmFkaXN1cyBIb3RlbHMgaW4gUHVudGEgQ2FuYU1lbGlhIEhvdGVscyBpbiBQdW50YSBDYW5hQmFyY2VsbyBIb3RlbHMgUmVzb3J0cyBpbiBQdW50YSBDYW5hR3JhbmQgQmFoaWEgUHJpbmNpcGUgSG90ZWxzIGluIFB1bnRhIENhbmFMdXh1cnkgQmFoaWEgUHJpbmNpcGUgSG90ZWxzIGluIFB1bnRhIENhbmFFeGNlbGxlbmNlIFJlc29ydHMgaW4gUHVudGEgQ2FuYVBvcHVsYXIgQW1lbml0aWVzUHVudGEgQ2FuYSBIb3RlbHMgd2l0aCBhIFBvb2xQdW50YSBDYW5hIEhvdGVscyB3aXRoIFBhcmtpbmdQZXQgRnJpZW5kbHkgSG90ZWxzIGluIFB1bnRhIENhbmFQb3B1bGFyIFB1bnRhIENhbmEgQ2F0ZWdvcmllc1B1bnRhIENhbmEgR29sZiBSZXNvcnRzUHVudGEgQ2FuYSBSb21hbnRpYyBSZXNvcnRzV2VkZGluZyBSZXNvcnRzIFB1bnRhIENhbmFBbGwgSW5jbHVzaXZlIEhvdGVscyBpbiBQdW50YSBDYW5hQWxsIEluY2x1c2l2ZSBSZXNvcnRzIGluIFB1bnRhIENhbmFQdW50YSBDYW5hIEFkdWx0cyBPbmx5IGFuZCBBZHVsdCBGcmllbmRseSBSZXNvcnRzUHVudGEgQ2FuYSBCZWFjaCBTcGEgSG90ZWxzUHVudGEgQ2FuYSBQZXQgRnJpZW5kbHkgQmVhY2ggSG90ZWxzUHVudGEgQ2FuYSBCZWFjaCBTdWl0ZSBIb3RlbHNQdW50YSBDYW5hIEphY3V6emkgU3VpdGUgSG90ZWxzTmVhciBMYW5kbWFya3NIb3RlbHMgbmVhciBCYXZhcm8gQmVhY2hIb3RlbHMgbmVhciBNYWNhbyBCZWFjaEhvdGVscyBuZWFyIChEQVQpIERvbWluaWNhbiBBaXJwb3J0IFRyYW5zZmVyc0hvdGVscyBuZWFyIElzbGEgQ2F0YWxpbmFIb3RlbHMgbmVhciBIb3lvIEF6dWxIb3RlbHMgbmVhciBIYXJkIFJvY2sgQ2FzaW5vIFB1bnRhIENhbmFIb3RlbHMgbmVhciBEb21pbmljYW4gUGx1c0hvdGVscyBuZWFyIFRyYW5zZmVyc0RvSG90ZWxzIG5lYXIgTWFuYXRpIFBhcmsgQmF2YXJvSG90ZWxzIG5lYXIgQW1zdGFyIERNQyBUb3VycyBUcmFuc2ZlcnNOZWFyIEFpcnBvcnRzSG90ZWxzIG5lYXIgKFBVSikgUHVudGEgQ2FuYSBBaXJwb3J0SG90ZWxzIG5lYXIgKExSTSkgTGEgUm9tYW5hIEFpcnBvcnRUcmF2ZWwgR3VpZGVzQXBwc0NydWlzZXNHcmVlbkxlYWRlcnMKU2VjdGlvbiAgIElJIChTY2llbmNlKSA6IENoZW1pY2FsIFJlYWN0aW9ucyBhbmQgRXF1YXRpb25zOyBBY2lkcywgQmFzZXMgYW5kIFNhbHRzOyBNZXRhbHMgYW5kIE5vbm1ldGFsczsgQ2FyYm9uIGFuZCBpdHMgQ29tcG91bmRzOyBQZXJpb2RpYyBDbGFzc2lmaWNhdGlvbiBvZiBFbGVtZW50czsgTGlmZSBQcm9jZXNzZXM7IENvbnRyb2wgYW5kIENvb3JkaW5hdGlvbjsgSG93IGRvIE9yZ2FuaXNtcyBSZXByb2R1Y2U/OyBIZXJlZGl0eSBhbmQgRXZvbHV0aW9uOyBMaWdodCBSZWZsZWN0aW9uIGFuZCBSZWZyYWN0aW9uOyBIdW1hbiBFeWUgYW5kIENvbG91cmZ1bCBXb3JsZDsgRWxlY3RyaWNpdHk7IE1hZ25ldGljIEVmZmVjdHMgb2YgRWxlY3RyaWMgQ3VycmVudDsgU291cmNlcyBvZiBFbmVyZ3k7IE91ciBFbnZpcm9ubWVudDsgTWFuYWdlbWVudCBvZiBOYXR1cmFsIFJlc291cmNlcy4gCkJiY3VoMTYyICA2MDcgcG9pbnRzICBzdWJtaXR0ZWQgMTcgZGF5cyBhZ28KQW1lcmljYW4gQ2hyaXN0aWFucyBhcmUgYSB3aG9sZSBkaWZmZXJlbnQgc3BlY2llcyBmcm9tIG90aGVyIHdvcmxkIENocmlzdGlhbnMuIApRdWlldEthdDg3IHUKTGlrZSB3aGVuIGhlIGRlbmllZCB0aGV5IHdlcmUgaGlzIHBhcmVudHMgYW5kIHRoZSBwb2xpY2Ugb2ZmaWNlciBleHBsYWluZWQgaGUgd2FzIGNvbmZ1c2VkLiAKVGhlIEJvYXJkIG9mIFJlZ2VudHMgY29uc2lzdHMgb2YgZWlnaHQgdm90aW5nIG1lbWJlcnMgZWxlY3RlZCBieSBkaXN0cmljdCBmb3Igc2l4IHllYXIgdGVybXMsIGFuZCBmb3VyIG5vbiB2b3Rpbmcgc3R1ZGVudCBSZWdlbnRzLCBvbmUgZnJvbSBlYWNoIGNhbXB1cywgd2hvIHNlcnZlIGR1cmluZyB0aGVpciB0ZW51cmUgYXMgc3R1ZGVudCBib2R5IHByZXNpZGVudC4gVGhlIGJvYXJkIHN1cGVydmlzZXMgdGhlIGdlbmVyYWwgb3BlcmF0aW9ucyBvZiB0aGUgdW5pdmVyc2l0eSwgYW5kIHRoZSBjb250cm9sIGFuZCBkaXJlY3Rpb24gb2YgYWxsIGV4cGVuZGl0dXJlcy4KVHhhZ2dpZWogIDEgcG9pbnQgIHN1Ym1pdHRlZCA0IG1vbnRocyBhZ28KSSBjYW4gZG91YmxlIHJhbXAgd2FsbCBydXNoIGlmIEkgdXNlIG90aGVyIGhvdGtleXMgdGhhbiBteSBub3JtYWwgb25lcywgYnV0IEkgY2FuIGRvIGEgc2luZ2xlIGZsb29yd2FsbHJhbXAgYXQgcnVubmluZyBzcGVlZC4gCkxvbmRvbiBQbGFuIGluIGplb3BhcmR5IGlmIEJSVCBhYmFuZG9uZWQKV2hlbiB3aXJpbmcgaGltIGZvciBhbiBpbnRlcnZpZXcgd2UgaGVhcmQgYSBzY3JhdGNoIG9yIHN0YXRpYyBvbiB0aGUgbWljLiBJdCB3YXMgb25lIGFwcGFyZW50bHkgaGlzIHRlYW0gaGFkIHByb3ZpZGVkLiBIZSBxdWlja2x5IGxvc3QgaGlzIGNvb2wgYW5kIHN0YXJ0ZWQgYW5ncmlseSBjYWxsaW5nIG91dCB3aG8gaGFkIHB1dCB0aGUgbWljcm9waG9uZSBvbiBoaW0uIFRoaW5ncyBjYWxtZWQgZG93biBzb29uLCBhcyB3ZSBwcm92aWRlZCBhbm90aGVyIG1pY3JvcGhvbmUuIEJ1dCB3ZSBjb3VsZCBhbGwgdGVsbCB0aGF0IGhlIHdhcyB1c2VkIHRvIGdldHRpbmcgaGlzIHdheSBhbmQgcmVhY3RlZCBzdHJvbmdseSB3aGVuIGhlIGRpZG4ndC4KSW4gc29tZSBob21lIGdhbWVzLCBpdCBpcyBjdXN0b21hcnkgdG8gdGhyb3cgY2hpcHMgZGlyZWN0bHkgaW50byB0aGUgcG90LiBJbiBhIHB1YmxpYyBjYXJkIHJvb20uLCB0aGlzIGlzIGNhdXNlIGZvciBkaXJ0eSBsb29rcywgYSByZXByaW1hbmQgZnJvbSB0aGUgZGVhbGVyLCBhbmQgcG9zc2libHkgc3RvcHBpbmcgdGhlIGdhbWUgdG8gY291bnQgZG93biB0aGUgcG90LiBXaGVuIHlvdSBiZXQsIHBsYWNlIHlvdXIgY2hpcHMgZGlyZWN0bHkgaW4gZnJvbnQgb2YgeW91LiBUaGUgZGVhbGVyIHdpbGwgbWFrZSBzdXJlIHRoYXQgeW91IGhhdmUgdGhlIHJpZ2h0IG51bWJlciBhbmQgc3dlZXAgdGhlbSBpbnRvIHRoZSBwb3QuClRoZSBhZHVsdCBtYW1tYWxpYW4gYnJhaW4gcHJvZHVjZXMgbmV3IG5ldXJvbnMgaW4gdGhlIG9sZmFjdG9yeSBidWxiIGFuZCBkZW50YXRlIGd5cnVzIG9mIHRoZSBoaXBwb2NhbXB1cyB0aHJvdWdob3V0IGxpZmUuIE1hbnkgZXh0cmluc2ljIGFuZCBpbnRyaW5zaWMgKGVwaSlnZW5ldGljIGZhY3RvcnMgY2FuIHJlZ3VsYXRlIHRoZSBwcm9kdWN0aW9uIG9mIG5ldyBuZXVyb25zIFs0OF0uIEluY3JlYXNpbmcgZXZpZGVuY2UgaW5kaWNhdGVzIHRoYXQgdGhpcyBwcm9jZXNzIGhhcyBhIHJvbGUgaW4gbGVhcm5pbmcgYW5kIG1lbW9yeS4gQWJsYXRpb24gb2YgdGhlIG5ldyBjZWxscyByZXN1bHRzIGluIHNwYXRpYWwgbWVtb3J5IGRlZmljaXRzIFs0OV0uIEluIGFkZGl0aW9uLCB1c2luZyBtYXJrZXJzIGZvciBpbW1lZGlhdGUgZWFybHkgZ2VuZSBleHByZXNzaW9uIGl0IGhhcyBiZWVuIHNob3duIHRoYXQgdGhlIG5ldyBjZWxscyBhcmUgcHJlZmVyZW50aWFsbHkgYWN0aXZhdGVkIGR1cmluZyBsZWFybmluZyB0YXNrcyBbNTBdLiBGdXJ0aGVybW9yZSwgYW4gaW5jcmVhc2UgaW4gbmV1cm9nZW5lc2lzIGlzIGFzc29jaWF0ZWQgd2l0aCBpbXByb3ZlZCBjb2duaXRpb24uIFRoZSBzdHJvbmdlc3QgbmV1cm9nZW5pYyBzdGltdWx1cyBpcyBleGVyY2lzZS4gV2hlZWwgcnVubmluZyBpbiByb2RlbnRzIHJlc3VsdHMgaW4gYSAzIDQgZm9sZCBvciBldmVuIGdyZWF0ZXIgaW5jcmVhc2UgaW4gdGhlIHByb2R1Y3Rpb24gYW5kIHN1cnZpdmFsIG9mIG5ldyBuZXVyb25zIGluIHRoZSBkZW50YXRlIGd5cnVzIG9mIHRoZSBoaXBwb2NhbXB1cyBbMzBdLiBUaGUgb25zZXQgb2YgdGhlIGVmZmVjdCBvZiBydW5uaW5nIG9uIGNlbGwgZ2VuZXNpcyBpcyByYXBpZC4gQ2VsbCBnZW5lc2lzIHBlYWtzIGF0IHRocmVlIGRheXMuIEFmdGVyIDMyIGRheXMgb2YgcnVubmluZyB0aGUgcHJvIHByb2xpZmVyYXRpdmUgZWZmZWN0IGhhcyByZXR1cm5lZCB0byBiYXNlbGluZS4gSW50ZXJlc3RpbmdseSwgdGhlIG51bWJlciBvZiBpbW1hdHVyZSBuZXVyb25zIGNvbnRpbnVlcyB0byBpbmNyZWFzZSBhdCB0aGlzIHRpbWUgcG9pbnQKVGhlIHdpbnRlciBvZiAxOTQ0IC8gMTk0NSB3YXMgYml0dGVybHkgY29sZC4gRXZlcnkgbmlnaHQgYXQgMDEuMzAgdGhlIGNhc3QgYW5kIGNyZXcgd291bGQgYnJlYWsgZm9yIGEgbWVhbCwgYW5kIHRoaXMgd2FzIHRha2VuIGluIHR3byBkaW5pbmcgY2Fycywgd2hpY2ggd2VyZSBzaHVudGVkIGludG8gdGhlIE1vcmVjYW1iZSBCYXkgcGxhdGZvcm0uIFRoZSBjYXN0IGFuZCBzZW5pb3IgcHJvZHVjdGlvbiBwZW9wbGUgZ29pbmcgaW50byBvbmUgZGluaW5nIGNhciBhbmQgdGhlIHRlY2huaWNpYW5zIGFuZCBleHRyYXMgaW50byB0aGUgb3RoZXIuLiAKSSBkZXRlcm1pbmVkIHRoZSBwcm9ibGVtIGJ1dCBleHBlcmllbmNlZCBzaW1pbGFyIGlzc3VlcyB3aXRoIG90aGVyIGNvbmRvbXMgYW5kIGV2ZW4gYmFyZWJhY2sgZm9yIGxpa2UgdGhlIG5leHQgNSB0aW1lcyBJIHRyaWVkLCBiZWNhdXNlIGkgd2FzIHNvIHN0cmVzc2VkIGFib3V0IGl0LiBIZSBjb3VsZCBoYXZlIGJlZW4gdGhlIHNhbWUgd2F5LiBJdCB3YXMgbW9yZSB0aGFuIGxpa2VseSBoaW0gbm90IHlvdS4KRWFjaCBhY3RpdmF0aW9uIGtleSBnZW5lcmF0ZWQgZm9yIHlvdXIgY29tcHV0ZXIgd2hpY2ggbWVhbnMgdGhlcmUgaXMgbm8gZGlmZmVyZW5jZSB3aXRoIGEgLiAKMjAxOSBzJ2Fubm9uY2UgdW5lIGFubmUgZGUgdHJhdmF1eCBldCBkZSBjaGFuZ2VtZW50cyBwb3VyIG5vcyBxdWFydGllcnMuIEQnYWJvcmQgYXZlYyBsYSAgcXVpIHZhIHByZW5kcmUgZm9ybWUsIGV0IHF1aSBpbGx1bWluZXJhIGRzb3JtYWlzIG5vcyBzb2lyZXMgZ3JjZSAgdW5lIG1pc2UgZW4gdmFsZXVyIGR1IHZpYWR1YyBwYXIgbGEgbHVtaXJlLiBQbHVzaWV1cnMgYXV0cmVzIGNoYW50aWVycyB2b250IGltcGFjdGVyIG5vcyBxdWFydGllcnMuIEN0IDEwZSwgYXZlYyBsJ2F2YW5jZSBkdSBjaGFudGllciBkdSBOb3V2ZWF1IExhcmlib2lzaXJlIGV0IGxlIGNoYW50aWVyIGRlIGxhIEdhcmUgZHUgTm9yZCAyMDIwIHF1aSBzJ2Fubm9uY2UuIEN0IDE4ZSwgY2Ugc29udCBsZXMgcnVlcyBNeXJoYSBldCBMb24gcXVpIHZvbnQgc2Ugdm9pciByaGFiaWxpdGVyLCBtYWlzIGdhbGVtZW50IGxhIHJ1ZSBkZSBsYSBHb3V0dGUgZCdPciwgZXQsIG5vdXMgbCdlc3Byb25zLCBsZSBjb21tZW5jZW1lbnQgZGVzIGNoYW50aWVycyBkZSBydWVzIENhdiBldCBSaWNob21tZSwgZXQgZHUgcG91cnRvdXIgZGUgbCdnbGlzZSBTYWludCBCZXJuYXJkLCBkZXMgcHJvamV0cyBsYXVyYXRzIGR1IEJ1ZGdldCBwYXJ0aWNpcGF0aWYgZGUgbGEgdmlsbGUgZGUgUGFyaXMuIFRvdWpvdXJzIGRhbnMgbGUgMThlLCBldCBzdXIgbGUgcGFyY291cnMgZGUgbGEgLCBsZSBQcm9qZXQgZGUgbCdPYXNpcyB1cmJhaW5lIHZhIGdhbGVtZW50IHRyZSBtaXMgZW4gb2V1dnJlLiBBdXRhbnQgZGUgY2hhbnRpZXJzIHF1aSB2b250IHRyYW5zZm9ybWVyIGR1cmFibGVtZW50IGxhIHBoeXNpb25vbWllIGR1IHNlY3RldXIsIGF1c3NpLCAgc2VyYSB0cnMgYXR0ZW50aXZlIGF1IGRyb3VsIGRlIGNlcyB0cmF2YXV4LgpGYXN0IGZvcndhcmQgMTAgeWVhcnMgYW5kIEkgaGFkIHN0YXJ0ZWQgd29ya2luZyBhdCBhIGxhcmdlIGludGVybmF0aW9uYWwgZGV2ZWxvcG1lbnQgb3JnIGluIEF1c3RyYWxpYS4gSSBtZXQgYSBtYW4gZnJvbSBOYWdhbGFuZCB3aG8gYWxzbyB3b3JrZWQgdGhlcmUuIApJdCB3YXMgb25seSB0d28gZGF5cyBsYXRlciB0aGF0IGhlIGZvdW5kIG91dCBKdWxpYW5uYSB3YXMgb25lIG9mIHRoZSB0d28gcGVvcGxlIGtpbGxlZCBpbiB0aGUgc2hvb3Rpbmcgc3ByZWUgb24gRGFuZm9ydGggQXZlbnVlIHRoYXQgYWxzbyBpbmp1cmVkIDEzIGFuZCBlbmRlZCB3aXRoIHRoZSBkZWF0aCBvZiB0aGUgZ3VubWFuLiBTaW5jZSB0aGVuLCBBc2hhZHV6emFtYW4gc2FpZCBoZSdzIGJlZW4gaW4gZGlzYmVsaWVmLgpPdmVydmlldyBmb3IgamFrdGhlc29sZGllcgpOb3cgaW1hZ2luZSBwbGF5aW5nIGEgZ2FtZSB3aXRoIG11bHRpcGxlIHVua25vd24gcGxheWVycyBhbmQgdGhlIHJ1bGVzIGFyZSBzZXQgc3VjaCB0aGF0IGlmIGFsbCBwbGF5ZXJzIGFjdCBob25lc3RseSwgdGhleSBhbGwgaGF2ZSBhbiBlcXVhbCBjaGFuY2Ugb2Ygd2lubmluZy4gSW4gYWRkaXRpb24sIHNpbmNlIHRoZSBnYW1lIHJlY29nbml6ZXMgdGhhdCBjaGVhdGVycyBjYW5ub3QgYmUgYXZvaWRlZCwgdGhlIHJ1bGVzIGVuc3VyZSB0aGUgY2hhbmNlcyBvZiB3aW5uaW5nIGZvciBjaGVhdGVycyBhcmUgbG93ZXIgdGhhbiBob25lc3QgcGxheWVycyBhbmQgcHVuaXNobWVudCBmb3IgY2hlYXRpbmcgaXMgaGlnaC4gQW5kIHRoZSBnYW1lIGNvbnRpbnVlcyBvbi4uIApFdmVuIHdoZW4geW91IGZpbmFsbHkgZ2V0IGFsbCB0aGUgY2xvdGhlcyBvZmYsIGtlZXAgc3Ryb2tpbmcgYW5kIHRlYXNpbmcgZWFjaCBvdGhlci5Zb3UgY2FuIGJ1aWxkIHVwIHlvdXIgYXJvdXNhbCBpbiB0aGlzIGZhc2hpb24sIGFuZCB0aGF0IG1heSBoZWxwIHlvdSBhdHRhaW4gb3JnYXNtIGFnYWluLk1hcnRpYW5SYXB0b3IgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMTUgaG91cnMgYWdvT0ssIHRoZW4gdGhlcmUgbm90IG11Y2ggZWxzZSB5b3UgY2FuIGRvLiBTdXBwb3J0IGhlciB0aHJvdWdoIGhlciBwYXJlbnQgZGl2cm9jZSwgYXNrIGhlciBob3cgaXQgbWFrZXMgaGVyIGZlZWwsIGFuZCBsZXQgaGVyIGtub3cgeW91IHRoZXJlIGZvciBoZXIuQWZ0ZXIgeW91IGFzaywgaWYgc2hlIGdvZXMgYmFjayB0byBiZWluZyBtYW5pcHVsYXRpdmUgYnkgc2F5aW5nIHNoZSB3b24gdGVsbCB5b3UgYmVjYXVzZSB5b3UgZG9uIGNhcmUsIGp1c3QgZG9uIHJlc3BvbmQuIApJIGNhbGxpbmcgdGhlIGNvcHMuIEl0IHdvdWxkIGJlIGluYXBwcm9wcmlhdGUgdG8ganVzdCBoYXZlIHlvdSBsb3NlIHRoZSBnYW1lLiAKSGFhcyBzYWlkLiAKRGVlcCBkb3duIEkga25vdyB0aGUgdHJ1dGgsIG5vIG9uZSBjYW4gZml4IG1lIGJ1dCBtZSwgYW5kIEkgbm90IGNhcGFibGUgb2YgZG9pbmcgdGhlIGpvYi4gSSBjYW4gZXZlbiBwZXJmb3JtIGJhc2ljIHRhc2tzLiBJIHdhbnQgdG8gYmVsaWV2ZSB0aGF0IEkgYSBnb29kIHBlcnNvbiB3aG8gaXMganVzdCBoZWxkIGJhY2sgYnkgc2h5bmVzcyBhbmQgYW54aWV0eSBidXQgSSBrbm93IHRoZSB0cnV0aCwgYW5kIHRoZSB0cnV0aCBpcyBJIGp1c3QgYXMgdWdseSBvbiB0aGUgaW5zaWRlIGFzIG9uIHRoZSBvdXRzaWRlLiAKTWFydGluIEdyZWVuLCBtYW5hZ2luZyBkaXJlY3RvciBvZiBSZWR0b290aCwgc2FpZDogdGhlIHllYXJzIHRoZSBjb21wZXRpdGlvbiBoYXMganVzdCBnb3QgYmlnZ2VyIGFuZCBiZXR0ZXIuIFdlIGFyZSBhYnNvbHV0ZWx5IGRlbGlnaHRlZCBmb3IgTWljaGFlbCBhbmQgd291bGQgbGlrZSB0byBjb25ncmF0dWxhdGUgaGltIG9uIHdpbm5pbmcgdGhpcyBwcmVzdGlnaW91cyB0b3VybmFtZW50LgpJIGp1c3QgbGlrZSB0byBhZGQgdGhhdCBJIHdhcyBwaHlzaWNhbGx5IGFidXNlZCAocHVuY2hlZCwga2lja2VkLCBqdXN0IGdlbmVyYWxseSBrbm9ja2VkIGFyb3VuZCkgYnkgb25lIG9mIG15IHBhcmVudHMsIGFuZCB3aGlsZSBzcGFua2luZ3Mgd2VyZSBkZWZpbml0ZWx5IGxlc3Mgc2V2ZXJlIHRoYW4gdGhhdCwgaXQgZG9lc24gbWFrZSB0aGVtIG9rYXkuIApIaXRsZXIgd2FzIGxheWluZyBvdXQgdGhlIGNhc2UgZm9yIG5vdCBvbmx5IGV4cGFuZGluZyBpbnRvIHRoZSBlYXN0IGZvciBsaXZpbmcgc3BhY2UgZm9yIHRoZSBHZXJtYW4gcGVvcGxlIGJ1dCBhbHNvIGZvciBwZXJwZXR1YXRpb24gYW4gZXRlcm5hbCB3YXIgd2l0aCBzb3ZpZXQgUnVzc2lhIHNvIHRoYXQgeW91bmcgR2VybWFuIG1lbiB3b3VsZCBhbHdheXMgaGF2ZSBhIGNvbmZsaWN0IGluIHdoaWNoIHRoZXkgY291bGQgaGFyZGVuIHRoZW1zZWx2ZXMgYmVmb3JlIGJlY29taW5nIHByb2R1Y3RpdmUgbWVtYmVycyBvZiBzb2NpZXR5Li4gCkFuZCBJIG5ldmVyIGFzayBmb3Igb3IgZXhwZWN0IGEgdGlwLiAKWW91IGNhbiBnbyB0byBzZWUgdGhlbSBqdXN0IGZvciBoZWxwIGdldHRpbmcgaGVhbHRoY2FyZS4gCkxlIHBsYWlzaXIgcGx1dHQgcXVlIGxhIHBlcmZvcm1hbmNlLi4gCkkgdGhpbmsgc29tZSBncmFuZHBhcmVudHMgc2VlIGl0IGFzIGEgcGVyc29uYWwgaW5zdWx0IHRvIHRoZWlyIGxvbmcgYWdvIHBhcmVudGluZyBza2lsbHMuIEhlbGwsIG15IGdyYW5kcGFyZW50cyBnZW5lcmF0aW9uIHdlcmUgdG9sZCB0byBwdXQgYnJhbmR5IGluIHRoZSBib3R0bGUgYXQgbmlnaHQuIE15IHBhcmVudHMgZGlkbid0IGdvIGFsb25nIHdpdGggdGhhdC4uIApPZiB0aGVzZSBpbmRlcGVuZGVudCBsZWFndWVzIGFyZSBpbXByb3ZpbmcgdGhlIHF1YWxpdHkgYW5kIGJyZWFkdGggb2Ygc3BvcnQgaW4gSW5kaWEsIGFuZCBvZmZlcmluZyB5b3VuZyBob3BlZnVscyBhIHBsYXRmb3JtIHRvIHNob3djYXNlIHRoZWlyIHRhbGVudCBiZXlvbmQgdGhlIG5hdGlvbmFsIGZpeGF0aW9uIG9uIGNyaWNrZXQuLiAKVGhleSBhcmUgc29tZSBjb21iaW5hdGlvbiBvZiB1Z2x5IGFzcyBnb2JsaW5zIGFuZCBkZWVwIHZvaWNlIGFuZCBicmFzaCB0YWxraW5nIHN0eWxlLiAKVGhpcyBpcyB0aGUgb25seSByZWFzb24gd2h5IE9iaSBXYW4gY291bGQga2lsbCBNYXVsIGluIFJlYmVscy4gCllvdSBjYW4ndCBoYXZlIG9uZSB3aXRob3V0IHRoZSBvdGhlci4gCkkgZGlkIDg1IHRvIDk5IHJhbmdlIGluIHRoZSBNTTIgdHVubmVscyB3aXRoIFJlZCBDaGlucyBhIGZldyBtb250aHMgYmFjay4gSSBub3Qgc3VyZSBpZiBJIGhhdmUgdGhlIGV4YWN0IG51bWJlcnMgc2F2ZWQgc29tZXdoZXJlLCBidXQgSSBib3VnaHQgYWJvdXQgMjVrIENoaW5zIGZvciAxLDYwMCBlYWNoLiAKSSBlYXQgc29tZSBtZWF0IGFuZC9vciBjaGVlc2UsIGRyaW5rIHNvbWUgc2FsdCB3YXRlciwgYnV0IEkgd291bGQgc3RpbGwgcmVtYWluIGZhdGlndWVkIGZvciBhbiBob3VyIG9yIHNvIHVudGlsIEkgYXRlIG1lYWwgMi4gCllvdSBjYW4gZmx5IEIyIGJvbWJlcnMgYW5kIHBhcmsgYWlyY3JhZnQgY2FycmllcnMgb24gTm9ydGggS29yZWEgYm9yZGVyIGFuZCBleHBlY3QgYSBtaWxkIHJlc3BvbnNlIGZyb20gdGhlbS4gClRoZSBkaWZmZXJlbmNlLCBvZGRseSBlbm91Z2gsIGhhcyBsZXNzIHRvIGRvIHdpdGggbHVjayB0aGFuIHdpdGggdGhlIGVudHJlcHJlbmV1cidzIHRlbmFjaXR5IHRvIGtlZXAgc3RydWdnbGluZyB0b3dhcmQgc3VjY2VzcyBpbiBmYWNlIG9mIGRpc2FzdGVyIG9yIGltbWVkaWF0ZWx5IGFmdGVyIGFjdHVhbCBjYWxhbWl0eS4uIApFdmVyeSBzcGVjayBvZiBsaWdodCwgZXZlcnkgZG90IG9mIGNvbG91ciwgaXMgYSBkaWZmZXJlbnQgZ2FsYXh5LiBUaGVyZSBhcmUgMzAwMCBhbG9uZSBpbiB0aGF0IG9uZSBpbWFnZS4gCkhlIHNhaWQgYSBmZXcgbW9udGhzIGxhdGVyIGluIGNvdXJ0IHRoZSBndXkgY2xhaW1lZCB0aGUgZ3VuIHdhcyBub3QgaGlzLiAKVGhleSByZWFsbHkgZ29vZCwgYW5kIHlvdSB1bmxpa2VseSB0byBnZXQgYXJvdW5kIHRoZW0uLiAKW10gV2Ugd2FudCBhIHNlbnNpYmxlIHNvbHV0aW9uIHRoYXQgZW5zdXJlcyB0aGUgcm9hZCByZW1haW5zIG9mIGNvdXJzZSBhY2Nlc3NpYmxlIHRvIGV2ZXJ5b25lLCBidXQgaXMgYWxzbyBhIHBsYWNlIHRvIGxpdmUgd2l0aCBhIG1vZGljdW0gb2YgdHJhbnF1aWxsaXR5LiIgQ2FwdGlvbjogVGhlcmUgYXJlIGRlZmluaXRlbHkgZWFzaWVyIHdheXMgb2YgcmluZ2luZyB0aGUgZG9vcmJlbGwuIENhcHRpb246IFN1cGVyYi4gTGFkaWVzIGFuZCBnZW50bGVtZW4sIHRoZSBkYW5jZSBvZiBpZGlvdHMuIApEcyBsJ0FudGlxdWl0LCBldCBjZWxhIGF1dGFudCBjaGV6IGxlcyBIYnJldXggcXVlIGNoZXogbGVzIEdyZWNzIGV0IGxlcyBSb21haW5zLCBsZXMgcHJjaWV1eCBhcm9tYXRlcyBzb250IHV0aWxpc3MgIGRlcyBmaW5zIHNwaXJpdHVlbGxlcyBldCByZWxpZ2lldXNlcy4gCkJ1dCB0aGUgdHJlYmxlIGNsZWYgaXMgc3RpbGwgdGhlcmUgaWYgeW91IGxvb2sgY2xvc2VseS4gClRoaXMgaXMgbW9yZSBwb3B1bGFybHkgY2FsbGVkIHF1YWRzLiBJdCBoYXMgdG8gYmUgNCBjYXJkcyB3aXRoIHRoZSBzYW1lIHJhbmsuIFNvIGlmIHlvdSBnZXQgZm91ciBraW5ncywgdGhhdCBpcyBjYWxsZWQgYSBmb3VyIG9mIGEga2luZC4KVGhvc2UgZ2FtZXMgYXJlIGluc2FuZWx5IHNvZnQgc2luY2UgbW9zdCBwZW9wbGUgdGhlcmUgYXJlIGVpdGhlciBkcnVuayBvciBqdXN0IHN0dXBpZCAoaSB3YXMgb25jZSBvbiBhIHRhYmxlIHdoZXJlIGhhbGYgdGhlIHBsYXllcnMgZGlkbnQgZXZlbiBrbmV3IGFsbCB0aGUgcnVsZXMgb2YgdGhlIGdhbWUpLiAKSSBnb3QgaG9ycmlibGUgYWR1bHQgYWNuZSB0aGF0IGNvbXBsZXRlbHkgZGVzdHJveWVkIG15IGZvcmVoZWFkIChteSBvbmNlIHNtb290aCBhc3MgZm9yZWhlYWQgaXMgbm93IHdSaW5rbHkpLiAKUHVibGljIGhlYWx0aCBudXJzZXMgYXQgdGhlIFdpbmRzb3IgRXNzZXggQ291bnR5IEhlYWx0aCBVbml0IHdhbGsgdGhlIHBpY2tldCBsaW5lIG9uIE91ZWxsZXR0ZSBBdmVudWUgaW4gZnJvbnQgb2YgdGhlIGhlYWx0aCB1bml0IG9uIHRoZSBmaXJzdCBkYXkgb2Ygc3RyaWtlIGFjdGlvbiwgRnJpZGF5LCBNYXJjaCA4LCAyMDE5LgpXaXRoIGFjZXMgYW5kIGEgc2hvcnQgc3RhY2sgb2YgMTAgdGltZXMgdGhlIGJpZyBibGluZCBvciBsZXNzLCB5b3Ugc2hvdWxkIGVpdGhlciBwdXNoIGFsbCBpbiwgb3IgaW4gcG90IGxpbWl0LCBtYWtlIHRoZSBtYXhpbXVtIHJhaXNlICAgYW5kIHlvdSBzaG91bGQgYmUgbWFraW5nIHRoZSBtYXhpbXVtIHJhaXNlIGluIGxhdGVyIHBvc2l0aW9uIHdpdGggb3RoZXIgaGFuZHMgYXMgd2VsbC4gClRoZSBkZWx1Z2Ugb2YgcHJlZ25hbmN5IGhvcm1vbmVzIGNhbiBsZWFkIHRvIGFsbCBraW5kcyBvZiBza2luIGh5cGVycGlnbWVudGF0aW9uLCBpbmNsdWRpbmcgZGFya2VyIHNraW4gb24gdGhlIGZhY2UsIG5pcHBsZXMgYW5kIGdlbml0YWxzLiAKRm9yIGV4YW1wbGUsIHRoZSBmb2xsb3dpbmcgY29tZXMgZnJvbSBhbiBBdXN0cmFsaWFuIG5ld3Mgc291cmNlLCBUaGUgQWR2ZXJ0aXNlcjouIApEdXJpbmcgdGhpcyBwZXJpb2QsIEkgd2FzIGxpdmluZyBpbiBhIHNvYmVyIGhvdXNlIGFuZCBvdXQgb2Ygd29yaywgc28gSSBoYWQgYSBsb3Qgb2YgdGltZSBvbiBteSBoYW5kcy4gSSBtYW5hZ2VkIHRvIHNwZW5kIDMgNCBtb250aHMgc3RyYWlnaHQgaGFuZ2luZyBvdXQgYXQgYSBjb3JuZXIgc3RvcmUgZGFpbHkgYW5kIHBsYXlpbmcgc2NyYXRjaCBvZmYgdGlja2V0cyBmb3IgaG91cnMgYXQgYSB0aW1lLiBJIG5vdCBnb2luZyB0byBibGFtZSBteSBkZWdlbiBiZWhhdmlvciBvbiB0aGlzIGRydWcsIGJ1dCBJIHdpbGwgc2F5IHRoYXQgSSB0eXBpY2FsbHkgZG9uIGdhbWJsZSBhdCBhbGwgb3V0c2lkZSBvZiBwb2tlciwgc28gdGhpcyB3YXMgdmVyeSBzdHJhbmdlIGZvciBtZS4gSSBob25lc3RseSBkb24ga25vdyBob3cgdG8gZXhwbGFpbiBpdCwgYnV0IGl0IHdhcyBkZWZpbml0ZWx5IGEgd2VpcmQgdGltZSBmb3IgbWUuCkNJQkMgYW5ub3VuY2VkIFRodXJzZGF5IHRoYXQgaXQgd2FzIGhpa2luZyBpdHMgcXVhcnRlcmx5IGRpdmlkZW5kIGJ5IGZvdXIgY2VudHMsIHRvICQxLjQwIHBlciBzaGFyZS4gCk1yLiBDLiBBLiAKRGVuIGVyc3RlbiBUZWlsIGRlciBSZWlzZSBuYWNoIEF0aGVuIGVybGVkaWd0IGRlciB2ZXJzaWVydGUgVXJsYXViZXIgbm9jaCBtaXQgbGlua3MuIERhbm4gd2lyZCBlcyBzY2hvbiBhbnNwcnVjaHN2b2xsZXIuIERlbm4gdm9uIEF0aGVuIGF1cyBmIGtlaW5lIEYgYXVmIGRpZSBTcG9yYWRlbi4gCk91ciBsYXN0IHZpc2l0cyB3aXRoIGVhY2ggb2YgdGhlbSB0aGVyZSwgYXMgdGhleSB3ZXJlIHNlbnQgb24gYSBraW5kZXIgcGF0aCwgd2UgaGFkIHRoZSB0aGUgd2hvbGUgc3RhZmYgY29taW5nIGluIG9uZSBieSBvbmUgdG8gZ2l2ZSB0aGVtIGtpc3NlcyBhbmQgaHVncywgbWFueSBvZiB0aGVtIGNyeWluZywgb25lIG9mIHRoZW0gYmF3bGluZy4gVGhlIGNhcmRzIHdlIHJlY2VpdmVkIGluIHRoZSBtYWlsIGFmdGVyd2FyZCwgd2l0aCBwZXJzb25hbCBub3RlcyBhbmQgbGV0dGVycyBmcm9tIHRoZSBzdGFmZiBtZW1iZXJzLCB0aGV5IGFyZSBzbyB0cmVhc3VyZWQgdG8gdXMuLiAKV2UgaGF2ZSBzbyBtdWNoIG1vcmUgeWV0IHRvIGNvbWUuIEFsc28sIGl0J3MgYSBoYXJkIHRoaW5nIHRvIHNheSB0byBBZCBBZ2UsIGJ1dCBhZHZlcnRpc2luZyBieSBpdHNlbGYgd29uJ3QgdHVybiB0aGlzIGJyYW5kLiBJdCB3aWxsIHByb3ZpZGUgYSBiZWFjb24uLiAKQ2hlY2sgQkIuIApJZiBhbiBleHRyZW1pc3QgZmVtaW5pc3QgeWVsbHMgYXQgeW91IGFuZCBpdCBjYXVzZXMgeW91IHRvIHZvdGUgZm9yIGEgcGFydHkgdGhhdCBoYXMgY29uc2lzdGVudGx5IHdvcmtlZCB0byB1bmRlcm1pbmUgd29tZW4gcmlnaHRzLCB5b3UganVzdCBhbiBhc3Nob2xlIHdobyB3YXMgYWx3YXlzIGxvb2tpbmcgZm9yIGFuIGV4Y3VzZS4KTWFkZGVuIHNwZWNpZmljYWxseSBoYXMgbWFkZSBpdCBzbyBhIGNhcmQgd2l0aCBsZXQgc2F5IDYyIGNhdGNoaW5nIHdvdWxkIG5vdCBiZSBhYmxlIHRvIHBlcmZvcm0gYSBjZXJ0YWluIGFuaW1hdGlvbiB0aGF0IGEgY2FyZCB3aXRoIDk0IGNhdGNoaW5nIGlzIGFibGUgdG8gZG8gY29uc2lzdGVudGx5LCB0aGV5IGludGVudGlvbmFsbHkgaGlkZSB0aGVzZSBhbmltYXRpb25zIGJlaGluZCB0aHJlc2hvbGRzIG9ubHkgY2FwYWJsZSBvZiB0aGUgbW9zdCBleHBlbnNpdmUgY2FyZHMuIApFbm91Z2ggYWJvdXQgUm9iZXJ0by4gQmVzdCBwYXJ0IG9mIHRoZSBldmVuaW5nIHdhcyBvZiBjb3Vyc2UgeW91ciBsb2NhbCBqb3Vybm9zLiAKSXRzIGdhbWluZyB0YWtlIHdhcyB0aGUgc2Vjb25kIGhpZ2hlc3QgaW4gQXRsYW50aWMgQ2l0eSwgYmVoaW5kIG9ubHkgQmFsbHkncyBQYXJrIFBsYWNlLCB3aGljaCBpcyBsYXJnZXIuIEJvdWdobmVyIGlzIGFscmVhZHkgcG9uZGVyaW5nIGEgJDIwMCBtaWxsaW9uIGV4cGFuc2lvbiBvZiBoaXMgMTI1LDAwMCBzcXVhcmUgZm9vdCBjYXNpbm8sIHdoaWNoIGVtcGxveXMgNCw4MDAgcGVvcGxlLi4gCkl0IHdhcyBwcm9iYWJseSBicm91Z2h0IG9uIGJ5IGJvdGgga25vd2luZyBzb21ldGhpbmcgYWJvdXQgeW91LCBvciBleHBlcmllbmNpbmcgdGhlIHNhbWUgZXZlbnRzIHdpdGggeW91IHdoaWNoIHdhcyB0aGVuIG1hbmlmZXN0ZWQgYXMgcGFydCBvZiB0aGVpciBkcmVhbS4gVGhlIGNvbnRlbnQgb2Ygb25lcyBkcmVhbXMgY2FuIGJlIHRyaWdnZXJlZCBieSBvbmUgb3IgbW9yZSB0aGluZ3MgdGhhdCBoYXBwZW5lZCBkdXJpbmcgdGhlIGRheSBvciBldmVuIHNvbWV0aGluZyBmcm9tIHllYXJzIGFnby4gQWxsIGRyZWFtcyBhcmUgdW5pcXVlLCBldmVuIGlmIGl0IGFwcGVhcnMgb3RoZXJ3aXNlLiBBTlNXRVIgSW4gc3BpdGUgb2YgYW5lY2RvdGFsIHJlcG9ydHMgb2YgaW5kaXZpZHVhbHMgZXhwZXJpZW5jaW5nICJleGFjdGx5IiB0aGUgc2FtZSBkcmVhbSwgdGhlcmUgaXMgbm8gcmVsaWFibGUgZXZpZGVuY2UgdGhhdCBzdWNoIHNoYXJlZCBkcmVhbXMgb2NjdXIsIGFuZCBhdCB0aGUgcHJlc2VudCB0aW1lLCB0aGVyZSBpcyBubyBzY2llbnRpZmljIG9yIHJhdGlvbmFsIG1ldGhvZCB0byBjb25maXJtIHN1Y2ggZHJlYW1zLiBBbHRob3VnaCB0d28gcGVyc29ucyBtaWdodCBkZXNjcmliZSBzaW1pbGFyIGRyZWFtcyBpbiBncmVhdCBkZXRhaWwsIGRyZWFtcyB0YWtlIHBsYWNlIHdpdGhpbiB0aGUgbWluZC4gVW5saWtlIHNjaWVuY2UgZmljdGlvbiwgaW4gcmVhbGl0eSB0aGVyZSBhcmUgbm8gdmlkZW9zIG9yIHNjYW5uZXJzIHRoYXQgY2FuIHJlY29yZCB0aGUgaW1hZ2VzIHNlZW4gd2l0aGluIHRoZSBtaW5kLCBhbmQgc28gdGhlcmUgaXMgbm8gd2F5IHRvIGtub3cgd2hldGhlciB0d28gcGVvcGxlIGNhbiBkcmVhbSB0aGUgc2FtZSBkcmVhbS4gQU5TV0VSIFdoZXRoZXIgb3Igbm90IHR3byBwZW9wbGUgYXJlIHR3aW5zLCB0aGV5IGNhbiBoYXZlIGRyZWFtcyB3aXRoIHRoZSBzYW1lIHRoZW1lLCBvciB3aXRoIG1hdGNoaW5nIGRldGFpbHMuIFdoaWxlIGl0IG1heSBiZSB0cnVlIHRoYXQgbm8gdHdvIGRyZWFtcyBhcmUgYWxpa2UsIHRoZXkgY2FuIGJlIHNpbWlsYXIgZW5vdWdoIGZvciB1cyB0byB0YWtlIG5vdGljZSBvZiBhbiB1bnVzdWFsIG9jY3VycmVuY2UuIEFuc3dlciBUaGVyZSBhcmUgY2FzZXMgd2hlbiB0d28gcGVvcGxlJ3MgZHJlYW1zIGFyZSBleGFjdGx5IHRoZSBzYW1lLiBJdCBpcyBub3QgdW5oZWFyZCBvZi4gRXNwZWNpYWxseSBpZiB5b3UgaGF2ZSBhIGJvbmQgd2l0aCBhIHBlcnNvbi4gKEZ1bGwgQW5zd2VyKQpMZSBicnVpdCBtaXMgcGFyIGxlIFNvbmljIFRlZW5hZ2VyIERldGVycmVudCBjb25mZWN0aW9ubiBwYXIgU3RhcGxldG9uIGV0IHF1J2V1eCBzZXVscyBwZXV2ZW50IG91ciwgcG91ciBkZXMgcmFpc29ucyBwaHlzaW9sb2dpcXVlcyBsaWVzICBsJ2dlLCBlc3QgdGVsbGVtZW50IGluc3VwcG9ydGFibGUgcXUnaWxzIHNvbnQgY29udHJhaW50cyBkZSBkY2FtcGVyIHN1ciBsZSBjaGFtcC4gTGVzIHZpYnJhdGlvbnMgcmllbiBtb2lucyBxdSdoYXJtb25pcXVlcyBkZSA4MCBkY2liZWxzIHN1ciB1bmUgbG9uZ3VldXIgZCdvbmRlcyBwb3V2YW50IGFsbGVyIGp1c3F1JyAxNiBrSHogdm9xdWVudCBsZSBib3VyZG9ubmVtZW50IGQndW4gbW91c3RpcXVlIHByaXMgZGUgZnJuc2llIGFtb3VyZXVzZSBvdSBsZSBnbWlzc2VtZW50IGQndW4gdmlvbG9uIGVudHJlIGxlcyBtYWlucyBkJ3VuIGRidXRhbnQgZGUgdHJvaXMgYW5zIGh5cGVyYWN0aWYsIGMnZXN0IHNlbG9uLiBJbnNvdXRlbmFibGUsIGVuIHRvdXQgY2FzLi4gCk9uIHlvdXIgbGFzdCBwb2ludCBJIHRoaW5rIHBlb3BsZSB3aXRoIGJyb2FkIGZhbWlsaWFyaXR5IHRvIGxpdGVyYXR1cmUsIChhcyB3ZWxsIGFzIGZhbnMgb2YgaGlzdG9yeSBhbmQgU2hha2VzcGVhcmUpIGFyZSBmYXIgbW9yZSBsaWtlbHkgdG8gZGlzbGlrZSB0aGlzIG1vdmllLiBJdCBlc3NlbnRpYWxseSBhIHRyb3BlIGZpbGxlZCByb21hbmNlIG1vdmllIHdpdGggcmFuZG9tIHJlZmVyZW5jZXMgYW5kIGFuIGFsbCB0b28gdW5zdWJ0bGUgUm9tZW8gYW5kIEp1bGlldCBhbmFsb2d5LiAKQW5kIHRoaXMgaXMgbm90IHRoZSBmaXJzdCB0aW1lIGEgbWlsaXRhcnkgZXhlcmNpc2UgaGFzIGJlZW4gY2FuY2VsbGVkLiBFeGVyY2lzZXMgaGF2ZSBiZWVuIGNhbmNlbGxlZCBhbmQgcmVuYW1lZCBkdXJpbmcgOTAgQWdyZWVkIEZyYW1ld29yayBuZWdvdGlhdGlvbnMgd2l0aCB0aGUgTm9ydGguIFlvdSBjYW4gZmx5IEIyIGJvbWJlcnMgYW5kIHBhcmsgYWlyY3JhZnQgY2FycmllcnMgb24gTm9ydGggS29yZWEgYm9yZGVyIGFuZCBleHBlY3QgYSBtaWxkIHJlc3BvbnNlIGZyb20gdGhlbS4gSWYgdGhlIFVOIGlkZWFsIG9mIGVxdWFsaXR5IGFtb25nIHNvdmVyZWlnbiBuYXRpb25zIHdlcmUgYXBwbGllZCwgdGhlbiB0aGlzIGlzIGNsZWFybHkgYSB0aHJlYXQgdG8gTksuCkJ1dCBvbiBKYW4uIDMxLCB3aGVuIG9mZmljZXJzIGlzc3VlZCAxNiB0aWNrZXRzIGZvciBpbGxlZ2FsIHBhcmtpbmcgaW4gdGhlIGhvdXNlJ3MgZW5jbG9zZWQgYmFja3lhcmQsIHRoZXkgZHJldyB0aGUgYXR0ZW50aW9uIG9mIE1heW9yIFBybyBUZW0gRHdhaW5lIENhcmF3YXksIGNoYWlybWFuIG9mIHRoZSBDaXR5IENvdW5jaWwncyBQdWJsaWMgU2FmZXR5IENvbW1pdHRlZSwgd2hpY2ggaXMgY2hhcmdlZCB3aXRoIGd1aWRpbmcgcG9saWNlIHBvbGljeS4KU01UIHdhcyBwZXJmb3JtZWQgYnkgY2hpcm9wcmFjdG9ycywgbWVkaWNhbCBkb2N0b3JzLCBwaHlzaWNhbCB0aGVyYXBpc3RzIG9yIG9zdGVvcGF0aHMuIAo3LiBJcyBpdCAzMiBCaXQ/IFllcy4gUGxlYXNlIHNlZWQgdGhpcyBmb3IgYXMgbG9uZyBhcyBwb3NzaWJsZS4gCk5ldyBFbmdsYW5kIFBhdHJpb3RzIG93bmVyIFJvYmVydCBLcmFmdCBoYXMgYmVlbiBvcmRlcmVkIHRvIGFwcGVhciBpbiBhIEZsb3JpZGEgY291cnQgYXQgdGhlIGVuZCBvZiB0aGUgbW9udGggZm9yIGFycmFpZ25tZW50IG9uIHNvbGljaXRhdGlvbiBvZiBwcm9zdGl0dXRpb24gY2hhcmdlcywgYWNjb3JkaW5nIHRvIGNvdXJ0IHBhcGVycyBmaWxlZCBUaHVyc2RheS4KU2hlIHRoYW5rZWQgbWUsIGdlbnVpbmVseSwgYnV0IGl0IHdhcyBhIHZlcnkgcXVpY2sgbWVldGluZy9taWxrIHBhc3Mgb2ZmLiAKSWYgeW91IHN0YXRlIHNpZGUsIHlvdSBzdGlsbCBoYXZlIHRoZSBvcHRpb24gb2Ygb2lsIGJhc2VkIHBhaW50cyBmb3IgcmVndWxhciBpbnRlcmlvciB1c2UsIGdvIGZvciB3aGljaCBldmVyIHNoZWVuIHlvdSB3YW50LCBjdXBib2FyZHMgYXJlIHR5cGljYWxseSBhdCBsZWFzdCBzZW1pZ2xvc3MsIG1vc3RseSBmb3IgbG9va3MgYW5kIGVhc2Ugb2YgY2xlYW5pbmcuIApMZWUsIGEgbmF0aXZlIG9mIEhvbmcgS29uZywgaXMgd2VsbCBidWlsdCBhbmQgd2VhcnMgYSBibGFjayB0aWdodCBmaXR0aW5nIEdpb3JnaW8gQXJtYW5pIFQgc2hpcnQuIApPZiBjb3Vyc2UsIHRoZXJlIGFyZSBzb21lIHRoaW5ncyB0aGUgaW5kdXN0cnkgY2FuIHByZWRpY3QuCihJIHdhcyBhIHRpbnkgMThGIGF0IHRoZSB0aW1lLCBzbyBhZHJlbmFsaW5lIHdhcyBwdW1waW5nKS4gUmFjZWQgdG8gYWxsIHRoZSBkb29ycyBhbmQgbG9ja2VkIHRoZW0sIGFzIEkgd2FzIHdvcmtpbmcgYnkgbXlzZWxmIGFuZCBvbmx5IGhhZCBhIGNvdXBsZSBwZW9wbGUgaW4gdGhlIHBsYWNlLCB3aG8gaGFkbiBzZWVuIHRoaXMgZ28gZG93biwganVzdCBteSByZWFjdGlvbi4gClVudGlsIHJlY2VudGx5LCB0aGF0IGlzLkluIDIwMDcgdGhlIGZpcnN0IGludGVybmF0aW9uYWwgRmFzY2lhIFJlc2VhcmNoIENvbmdyZXNzLCBoZWxkIGF0IEhhcnZhcmQgTWVkaWNhbCBTY2hvb2wsIGJyb3VnaHQgYWJvdXQgYSBuZXcgZGVtYW5kIGZvciBhdHRlbnRpb24gdG8gdGhlIGZhc2NpYWwgc3lzdGVtLlNpbmNlIHRoZW4gZmFzY2lhIGhhcyBiZWVuIHJlcGVhdGVkbHkgcmVmZXJyZWQgdG8gYXMgdGhlIFN0b3J5IG9mIHRoZSBhbmF0b215IHdvcmxkLCBzcGVha2luZyBib3RoIHRvIGl0cyBpbnRyaWd1ZSBhbmQgdGhlIGdlZWtpbmVzcyBvZiB0aG9zZSB3aG8gc3R1ZHkgaXQuV2hpbGUgeW91IG1heSBub3Qgc2hhcmUgdGhlIG1lZGljYWwgYW5kIGJvZHl3b3JrIGNvbW11bml0aWVzIGV4Y2l0ZW1lbnQgb3ZlciBtZWNoYW5vdHJhbnNkdWN0aW9uKGFydGljbGUgbGlua2VkIGJlbG93KSBhbmQgdGhlIGNvbnRyYWN0aWxlIHByb3BlcnRpZXMgb2YgbXlvZmlicm9ibGFzdHMsIHRoaW5rIG9mIGl0IHRoaXMgd2F5OiBGYXNjaWEgaXMgYSBtYWpvciBwbGF5ZXIgaW4gZXZlcnkgbW92ZW1lbnQgeW91IG1ha2UgYW5kIGV2ZXJ5IGluanVyeSB5b3UgZXZlciBoYWQsIGJ1dCB1bnRpbCBmaXZlIHllYXJzIGFnbyBub2JvZHkgcGFpZCBpdCBhbnkgYXR0ZW50aW9uLiAKSSBtYW5hZ2VkIHRvIHdpbiBhIHNlYXQgZm9yIHRoZSAkMjAwMCBObyBMaW1pdCBIb2xkIGVtIGV2ZW50IGluIGEgb25lIHRhYmxlIHNhdGVsbGl0ZS4gSSBnb3QgbHVja3kgd2hlbiBJIHNsb3cgcGxheWVkIHBvY2tldCBLaW5ncyBjYXRjaGluZyBib3RoIGJsaW5kcyB3aG8gYm90aCBmbG9wcGVkIHRvcCBwYWlyLiAKTmV3Zm9yMjAxOSAgMTIgcG9pbnRzICBzdWJtaXR0ZWQgMyBkYXlzIGFnbwpPcmxhbmRvIEludGVybmF0aW9uYWwgQWlycG9ydCBpbiBGbG9yaWRhIHNoYXJlcyBhIGxvYmJ5IHdpdGggdGhlIEh5YXR0LiAKSSB0aGluayBzcG9pbGVkIG1heSBub3QgYmUgdGhlIHdvcmQgSSB3b3VsZCBjaG9vc2UuIEkgYWN0dWFsbHkgdGhpbmsgdGhhdCBNYWxhemFuIGlzIGp1c3QgaW4gaXQgb3duIGNhdGVnb3J5IGluIGEgbG90IG9mIHdheXMuIEl0IHNjYWxlIGlzIG9uIGEgdG90YWxseSBkaWZmZXJlbnQgbGV2ZWwsIHRvIHRoZSBwb2ludCB3aGVyZSBldmVuIGFmdGVyIDIwKyBzZXBhcmF0ZSBub3ZlbHMgaW4gdGhlIHNhbWUgdW5pdmVyc2UgaXQgZmVlbHMgbGlrZSB5b3UgYXJlIG9ubHkgc2NyYXBpbmcgdGhlIHN1cmZhY2UuIEJ1dCwgaXQgaXMgYSBiaXQgbXVjaC4gSSBoYXZlIGEgaGFyZCB0aW1lIHJlY29tbWVuZGluZyBpdCB0byBwZW9wbGUgYmVjYXVzZSBpdCBpcyBzdWNoIGEgY29tbWl0bWVudCBmb3IgdGhlIHJlYWRlci4gSSBoYXZlIHRvIGJlIHN1cmUgdGhlIHBlcnNvbiB3b3VsZCBsaWtlIGhpc3RvcmljYWwgbWlsaXRhcnkgZmljdGlvbiwgYXMgd2VsbCBhcyBzd29yZCBhbmQgc3BlbGwgZmFudGFzeSwgYXMgd2VsbCBhcyBjb21wbGljYXRlZCBtdWx0aSBjaGFyYWN0ZXIgbmFycmF0aXZlcy4gSSBrbm93IHBsZW50eSBvZiBwZW9wbGUgd2hvIHJlYWQgYSBsb3Qgb2YgZmFudGFzeSwgYnV0IEkgZG9uIGFjdHVhbGx5IGtub3cgYW55b25lIGluIHJlYWwgbGlmZSB3aG8gaGFzIHJlYWQgTWFsYXphbi4KSSB1c2VkIHRvIGJlIGEgMzYwbGIgZmF0dHkgdGhhdCBhdGUgZmFzdCBmb29kIGNvbnN0YW50bHkgYW5kIG5ldmVyIGdvdCBkaWFycmhlYSBmcm9tIGl0LiBOb3cgSSdtIG5lYXJseSAxMDBsYnMgbGlnaHRlciBhbmQgZWF0IGl0IG9uIG9jY2FzaW9uLCBpdCBzdGlsbCBkb2Vzbid0LiBJIHRoaW5rIHRoZXNlIHBlb3BsZSBqdXN0IG5lZWQgbW9yZSB3YXRlciBhbmQgZmliZXIgaW4gdGhlaXIgZGlldCB0byBzdGF5IHJlZ3VsYXIsIGxvbCwgVGFjbyBCZWxsIGlzIGFjdHVhbGx5IG9uZSBvZiB0aGUgaGVhbHRoaWVzdCBmYXN0IGZvb2Qgb3B0aW9ucyBhbmQgaGFzIGEgbG90IG9mIGZpYmVyLCBzbyBtYXliZSB0aGF0J3Mgd2h5IHRoZXkgcG9vcCBiZWNhdXNlIHRoZXkncmUgbm90IHVzZWQgdG8gdmVnZXRhYmxlIHByb3RlaW4oYWRkZWQgdG8gVGFjbyBCZWxsICJtZWF0IikgYW5kIGZpYmVyLi4gCkl0IGlzIGFsc28gaW1wb3J0YW50IHRvIGNoZWNrIGlmIHRoZSBzaXRlIHVzZXMgc29mdHdhcmUgcG9rZXIgc2FmZSBhbmQgc2VjdXJlIHBheW1lbnQgbWV0aG9kcyBhbmQgdGhlaXIgcmFuZG9tIG51bWJlciBnZW5lcmF0b3IgaXMgYXVkaXRlZCBvbiBhIHJlZ3VsYXIgYmFzaXMgdG8gZW5zdXJlIHRoYXQgaXQgaXMgY29tcGxldGVseSByYW5kb20uIFRoZSBTaXRlIHNob3VsZCBwcm92aWRlIGFsc28gYXR0cmFjdGl2ZSBib251c2VzIGFuZCBwcm9tb3Rpb25zIHRoYXQgd291bGQgZmFjaWxpdGF0ZSB0aGUgcG9rZXIgcGxheWVycyB0byBlbmpveSB0aGUgZ2FtZSBhbmQgdG8gd2luIG1vbmV5Li4gCkl0IG5vdCByZWFsbHkgYWxsIHRoYXQgY29tbW9uIGtub3dsZWRnZSBpbiB0aGUgVVMgdGhhdCB0aGUgSmFwYW5lc2UgZGlkIGEgbG90IHJlYWxseSBmdWNrZWQgdXAgc3R1ZmYgICB0aGluZ3MgbmVhcmx5IG9uIHBhciB3aXRoIHRoZSBIb2xvY2F1c3QuIEF0IHRoZSBSYXBlIG9mIE5hbmppbmcgdGhlcmUgd2VyZSBKYXBhbmVzZSBzb2xkaWVycyB3aG8gbGl0ZXJhbGx5IHBsYXllZCBnYW1lcyBvZiBjYXRjaCB0aGUgYmFieSBvbiB0aGUgYmF5b25ldC4gQW5kIFVuaXQgNzMxIGRpZCBzdHVmZiBKb3NlZiBNZW5nZWxlIHdvdWxkIGhhdmUgdGhvdWdodCB3YXMgZ29pbmcgdG9vIGZhci4uIAovIC4gCldoZW4gbXkgZmlyc3Qgd2FzIGJvcm4sIG15IG1vbSB3YXMgNTYuLiAKSXQncyB0aGUgb25lIG1lbiAoYW5kIHdvbWVuLCB0b28pIGNhbiB1c2UgdG8gc3RvcCBwZWVpbmcgd2hlbiB0aGUgcG9saWNlIGNhdGNoIHRoZW0gdXNpbmcgdGhlIGFsbGV5IGFmdGVyIHRoZXkndmUgaGFkIHRvbyBtdWNoIGJlZXIuIApUaGUgU3VwcmVtZSBDb3VydCdzIG9yZGVyIGFwcG9pbnRpbmcgdGhyZWUgbWVkaWF0b3JzIHRvIGZpbmQgYSBzb2x1dGlvbiB0byB0aGUgUmFtIEphbm1hYmhvb21pIEJhYnJpIE1hc2ppZCBkaXNwdXRlIGlzIHF1aXRlIHN0cmFuZ2UgYW5kIGluY29uZ3J1b3VzLCBnaXZlbiB0aGF0IGFsbCBzdWNoIHByZXZpb3VzIGF0dGVtcHRzIGhhdmUgZW5kZWQgaW4gZmFpbHVyZS4gCkFuZCBvZiBjb3Vyc2UgaXQgaXMgdGhlIG1vZGUgb2YgdHJhbnNwb3J0YXRpb24gYW5kIHRoZSBjcmVhdGlvbiBvZiBwYXJjZWwgcG9zdCB0aGF0IHdvdWxkIGFkZCBvcmRlcnMgb2YgbWFnbml0dWRlcyBvZiBtaWxlcyB0byBjYXRlZ29yeSBmb3IgZXhhbXBsZSB5b3UgY291bGQgcmVjZWl2ZSBhIGJvb2sgZnJvbSBMb25kb24gYW5kIHNlbmQgaXQgb3V0IHRvIFRva3lvIHdoZXJlIGl0IG1pZ2h0IGJlIHNlbnQgdG8gV2VsbGluZ3RvbiBhbGwgaW4gdHdvIHdlZWtzLiAKVHJhZmZpYyBmcm9tIG91dHNpZGUgb2YgdGhlIFVLIG5vdyByZXByZXNlbnRzIGFyb3VuZCB0d28gdGhpcmRzIG9mIHRoZSBHdWFyZGlhbidzIHRvdGFsIGRpZ2l0YWwgYXVkaWVuY2UuLiAKICA4IHBvaW50cyAgc3VibWl0dGVkIDQgZGF5cyBhZ29JIHNheWluZyB0aGVyZSBzaG91bGQgYmUgYW4gaW52ZXN0aWdhdGlvbiB0byBnZXQgdGhlIGZ1bGwgc3RvcnkuIEhlIHRvbGQgQ29uZ3Jlc3MgdGhhdCB0aGVyZSB3YXMgbm8gcGxhbiB0byBsYXVuY2ggdGhlIHByb2R1Y3QsIGJ1dCB0aGVzZSBsYXRlc3QgbGVha3Mgc3VnZ2VzdCB0aGF0IHRoZSBwcm9qZWN0IHdhcyBzdGlsbCB1bmRlciBkZXZlbG9wbWVudC4gV2h5IHdvdWxkIHlvdSBzdGlsbCBiZSB3b3JraW5nIG9uIGEgcHJvZHVjdCBpZiB5b3UgZG9uIHBsYW4gb24gbGF1bmNoaW5nIGl0PyBJdCBhIHdhc3RlIG9mIG1vbmV5IGFuZCByZXNvdXJjZXMuIApZZXMsIHRoYXQncyByaWdodCwgdW5jb3ZlcmVkLiBUaGlzIHdpbGwgaGVscCB0aGUgc2tpbiBkcnkgb3V0IGFuZCBiZWNvbWUgcmVhbGx5IGJyb3duIGFuZCBjcmlzcHkuIApVcG9uIGRlbGl2ZXJ5IG9mIGFuIGFpcmNyYWZ0LCB2YXJpb3VzIHN1cHBsaWVycyBhcmUgb3dlZCBhIGN1dC4gRm9yIGV4YW1wbGUsIEdFIG11c3QgYmUgcGFpZCBmb3IgdGhlIGVuZ2luZXMuIEJvZWluZyBuZWdvdGlhdGVzIHdpdGggc3VwcGxpZXJzIGxpa2UgR0UsIGdpdmluZyB0aGVtIGEgZnV0dXJlIGJyZWFrIHRvIHRha2UgdGhlaXIgY3V0IG9mIGEgZGVsaXZlcnkgb25seSBhZnRlciB0aGUgcXVhcnRlciBlbmRzLgpJbiB0b3VybmFtZW50IHBsYXksIHdoaWxlIHRoZSBkZWFsZXIgaXMgZGVhbGluZyB0aGUgY2FyZHMsIHR5cGUgcG9rZXJ0ZW4sIHRoZW4gaGl0IGVudGVyLiBZb3UgbWF5IGhhdmUgdG8gZG8gdGhpcyBzZXZlcmFsIHRpbWVzLiAKVGhlIDEzOCwwMDAgdG9ucyBjcnVpc2Ugc2hpcCB3aXRoIGEgY2FwYWNpdHkgdG8gaG9sZCAzLDgwNyBwYXNzZW5nZXJzLCB3YXMgdHJhbnNmb3JtZWQgaW50byBhIHdvcmxkIG9mIGNvc3BsYXkgZmFudGFzeSwgcGxheWluZyBob3N0IHRvIEFzaWEncyBiaWdnZXN0IGNvc3BsYXkgZmVzdGl2YWwgYXQgc2VhIGZvciB0aGUgc2Vjb25kIHRpbWUuQ09TRkVTVCBTRUE6IEJleW9uZCBUaGUgR3JlYXQgSG9yaXpvbnMgaXMgb3JnYW5pc2VkIGJ5IFRoZSAgQ29zcGxheSBDbHViIGluIGNvbGxhYm9yYXRpb24gd2l0aCBSb3lhbCBDYXJpYmJlYW4uIFRoaXMgc3BlY2lhbCB0aGVtZWQgY3J1aXNlIGV2ZW50IGZlYXR1cmVkIHNvbWUgb2YgdGhlIHJlZ2lvbidzIHRvcCBjb3NwbGF5ZXJzLCB2eWluZyBmb3IgdGhlIEFzaWEgQ29zcGxheSBNZWV0IDIwMTcgY2hhbXBpb25zaGlwIHBsdXMgZXhjaXRpbmcgY29zcGxheSBlbnRlcnRhaW5tZW50IGFuZCBhY3Rpdml0aWVzIGZvciBmYW5zIGFuZCBndWVzdHMuIApIZXIgbW90aGVyIHN1ZmZlcmVkIHRoZSB3b3JzdCBkYW1hZ2UuICJJIGtub3cgdGhhdCBoZXIgZmFjZSB3YXMgdW5yZWNvZ25pemFibGUgICBpdCB3YXMgaG9ycmlmaWMuIApUaGVuIGFnYWluIEkgYWxzbyBpbiB0aGUgY2FtcCBvZiB0aGlua2luZyB0aGF0IHdpcmVsZXNzIGNoYXJnaW5nIGlzIG1vcmUgZmFmIHRoYW4gaXQgaXMgd29ydGggYW5kIGRvbiBzZWUgd2h5IGV2ZXJ5b25lIGtpY2tzIHVwIGEgZnVzcyB3aGVuIGEgbmV3IHBob25lIGRvZXNuIGhhdmUgaXQuIEkgY291bGQgcGx1ZyBpbiB0aGlzIGNhYmxlIGFuZCBjYXJyeSBvbiB1c2luZyBteSBwaG9uZTsgb3IgSSBjb3VsZCBzaXQgaXQgb24gYSBibG9jayB0byBjaGFyZ2Ugd2hlcmUgaXQgaGFzIHRvIHN0YXkgLiAKVGhlIHVuZGVybHlpbmcgcHJpbmNpcGxlIGlzIHRoYXQgb3duZXJzIGhhdmUgYSBiYXNpYyBkdXR5IHRvIGVuc3VyZSB0aGF0IHRoZWlyIHByb3BlcnR5IGlzIHJlYXNvbmFibHkgc2FmZSBhbmQgbWFpbnRhaW5lZCwgYW5kIHRvIGF2b2lkIGRlbGliZXJhdGVseSBjcmVhdGluZyBjaXJjdW1zdGFuY2VzIHdoZXJlIHBlb3BsZSBtYXkgYmUgaW5qdXJlZCBvciBraWxsZWQuIFRoYXQgbWFuaWZlc3RzIGluIG90aGVyIHdheXMsIHRvbyAgIGNvZGUgZW5mb3JjZW1lbnQgcnVsZXMgYWJvdXQgd2VlZCBncm93dGggYXJlIGFub3RoZXIgbWFuaWZlc3RhdGlvbiBvZiB0aGUgc2FtZSBpZGVhLgpGVUNLSU5HIFlFUyEhIEdvZCBpdCdzIHNvIGdvb2QgdG8gaGVhciBwZW9wbGUgc2F5IHRoaXMuIEkgaGFkIGEgc2FkIHJlYWxpc2F0aW9uIGEgd2hpbGUgYWdvIHdoZW4gSSBzYXcgdHdvIGJveXMgcG9pbnRpbmcgYXQgYSBwYWlyIG9mIGZsb3dlcmVkIHNob2VzIGFuZCBkYXJpbmcgZWFjaCBvdGhlciBsYXVnaGluZ2x5IHRvIHB1dCB0aGVtIG9uLiBUaGUgYm95cyB3ZXJlIGFib3V0IDQgYnV0IGVhY2ggb2YgdGhlbSBhbHJlYWR5IGtuZXcgdGhhdCBmbG9yYWwgc2hvZXMgd2VyZSAiZ2lybHMiIHNob2VzIGFuZCB0aGUgaWRlYSBvZiBhIGJveSB3ZWFyaW5nIHRoZXNlIHdhcyBvdXRsYW5kaXNobHkgZnVubnkuIEkgd2FzIHNvIHNhZCwgd2h5IGFyZSBmbG93ZXJzIGZvciBnaXJscz8gV2h5IGlzIGJlYXV0eSBnZW5kZXJlZD8gV2h5IGRvIHdlIHRlYWNoIGJhYmllcyB0aGF0IHNvZnQgdGhpbmdzIGFyZSBmb3IgZ2lybHMgKGtpdHRlbnMsIHVuaWNvcm5zLCBmbG93ZXJzLCBjdXBjYWtlcykgYW5kIGhhcmQgdGhpbmdzIGFyZSBmb3IgYm95cyAodHJ1Y2tzLCBza3VsbHMsIG1vdG9yYmlrZXMsIGxpb25zKT8gV2UgY29uZGl0aW9uIG91ciBiYWJpZXMgZnJvbSB0aGUgc3RhcnQuCkF0IHRoYXQgcG9pbnQsIHRoZSBndWFyZCB3YXMgdmVyeSB1bnByZXBhcmVkLiAKTWFwIG91dCB5b3VyIGNvbGxhZ2UuIFN0YXJ0IGRlY2lkaW5nIGhvdyB5b3Ugd2FudCB0byBwbGFjZSB5b3VyIHBpY3R1cmVzLiBXaGF0IHBhcnRzIG9mIHRoZSBwaWN0dXJlcyBkbyB5b3Ugd2FudCB0byBpbmNsdWRlIG9yIGxlYXZlIG91dD8gQmUgc3VyZSB0byBsZWF2ZSByb29tIGZvciBhIHRpdGxlIG9yIG5hbWUgaWYgeW91IHdhbnQgdG8gaW5jbHVkZSB0aGF0IChmb3IgZXhhbXBsZSwgeW91IG1pZ2h0IHB1dCBhIHRpdGxlIHN1Y2ggYXMgIlNhZ2UncyBGaXJzdCBCaXJ0aGRheSIpLiAKR2l2ZW4gdGhlIGNvbnRlbXBvcmFyeSBtaWxldSBvZiBwb3NzaWJsZS9leHBlY3RhbnQgbGlmZSBvbiBNYXJzLCBHYWx0b24gdGhvdWdodCBhYm91dCB3YXlzIGluIHdoaWNoIHdlIGNvdWxkIHNlbmQgc29tZSBzb3J0IG9mIGNvbW11bmljYXRpb24sIGFuZCB3aGF0IHRoZSBsb2dpYyBvZiB0aGF0ICJsYW5ndWFnZSIgbWlnaHQgYmUuIApJIHdhcyB1c2luZyBoaWdoIGZpZGVsaXR5IGVhcnBsdWdzIGFuZCBjb3VsZG4gY2xlYXJseSBtYWtlIG91dCBhIGxvdCBvZiB3aGF0IEtpcmsgd2FzIHBsYXlpbmcgaW4gdGhlIGhpZ2hlciBwYXJ0cyBvZiBzb2xvcy4gSSB0b29rIHRoZSBwbHVncyBvdXQgYSBmZXcgdGltZXMgdG8gbWFrZSBzdXJlIGl0IHdhc24gdGhlIHBsdWdzIGJsb2NraW5nIGhpbSBvdXQsIGFuZCBpdCB3YXNuIE11ZGR5IGlzIGRlZmluaXRlbHkgaG93IEkgZGVzY3JpYmUgaXQuLiAKSWwgZXN0IGQgZG9tbWFnZSBxdWUgY2V0dGUgZGl0aW9uICh1bmUgcmltcHJlc3Npb24sIGVuIGZhaXQpIG4gcGFzIHVuIHBsdXMgcGFyIHJhcHBvcnQgIGNlbGxlLCBwbHVzIGFuY2llbm5lLCBkZSAxOTk4LiAKQ291bGQgdG90YWxseSBiZSByZWFkaW5nIGl0IHdyb25nLCBidXQgdGhhdCdzIHRoZSBmZWVsaW5nIEkgZ2V0Li4gCldoaWxlIHRoYXQgbWlnaHQgc291bmQgYSBsaXR0bGUgdGluZGVyIGN1c3RvbWVyIHNlcnZpY2UgZW1haWwgY3JlZXB5Lk1lZXQgdGhvdXNhbmRzIG9mIERpdm9yY2VkIFNpbmdsZXMgaW4gTmVhciBNZSB3aXRoIE1pbmdsZTIncyBmcmVlIERpdm9yY2VkIFNpbmdsZXMgcGVyc29uYWwgYWRzIGFuZCBjaGF0IHJvb21zLiBTdGFydCBtZWV0aW5nIHNpbmdsZXMgaW4gTmVhciBNZSB0b2RheSB3aXRoIG91ciBmcmVlIG9ubGluZSBwZXJzb25hbHMgYW5kIGZyZWUgTmVhciBNZSBjaGF0ISBNZSBMb29raW5nIGZvciBzaW5nbGVzIGluIHlvdXIgYXJlYT8gV2hpbGUgc2hhcmluZyB3aXRoIG90aGVycyBpcyBleHRyZW1lbHkgaGVscGZ1bCB0b3dhcmRzIHNuYWdnaW5nIHRoYXQgcGVyZmVjdCBBc2lhbiBzaW5nbGUsIHRha2UgY2F1dGlvbiBpbiB0aGUgc29ydCBvZiBpbmZvcm1hdGlvbiB0aGF0IHlvdSBzaGFyZS4gClRvZGF5IEkgdm9sdW50ZWVyIG15IHRpbWUgdG8gbG9jYWwgY2h1cmNoZXMgYW5kIHNpdCBhcyBhIGRlYWxlciB3aGVuIHRoZXkgbmVlZCBtZSB0byBmb3IgdGhlIHN1bW1lciBmZXN0aXZhbHMuIEFsbCB0aGUgdGFibGVzLCBwb2tlciBjaGlwcywgYW5kIGV2ZW4gZWFjaCBFU1BOIFBva2VyIENsdWIgV29vZGVuIDQgRGVjayBEZWFsZXIgU2hvZSB3YXMgZ2l2ZW4gdG8gdGhlbSBhcyBhIGRvbmF0aW9uIHRvIGhlbHAgcmFpc2UgZnVuZHMgZm9yIHRoZSBjb25ncmVnYXRpb24uIEl0J3MgYW1hemluZyB0byB0aGluayBhYm91dCB0aGUgd2F5IEkgdXNlZCB0byBsaXZlLCBidXQgdGhlIG1vbmV5IHNlZW1lZCB0byByZWFsbHkga2ljayBpbiBhZnRlciBJIHB1cmNoYXNlZCB0aGVzZSBzaG9lcy4gCldlIHdhbGsgaW4gYW5kIHRoZSBjYWdlIGNsb3NlcyBiZWhpbmQgbWUuIEkgd2F0Y2ggYXMgdGhleSBhcmUgdG9ybiBkb3duIGZyb20gdGhlIHBlcnNvbiB0aGV5IG9uY2Ugd2VyZSB0byBub3RoaW5nLCBhbmQgSSBmZWVsIGV2ZXJ5IHNlY29uZCBvZiBpdC4gCkkga25vdyB5b3UganVzdCBiZWluZyBhIHNhcmNhc3RpYyBwYXNzaXZlIGFnZ3Jlc3NpdmUgbG9zZXIgYnV0IHRoaXMgcmVhbGx5IGlzIGEgcmVmbGVjdGlvbiBvZiB5b3Vyc2VsZi4gWW91IGxlZ2l0aW1hdGVseSB0aG91Z2h0IHRoaXMgdmlkZW8gd2FzIHJlYWwsIGNhbGxlZCBmb3IgcGh5c2ljYWwgdmlvbGVuY2UsIGFuZCB0aGVuIGdvdCBjYWxsZWQgb3V0IGFuZCBub3cgeW91IGdvIGludG8gcHJvamVjdGlvbiBtb2RlIHRyeWluZyB0byBtYWtlIHlvdXJzZWxmIG5vdCBsb29rIHN0dXBpZCBieSBhbnkgbWVhbnMgcG9zc2libGUgYnV0IGl0IGp1c3QgbWFraW5nIHlvdSBsb29rIHdvcnNlLi4gCkl0IHdhcyBwcm9iYWJseSB0b28gc21hbGwgb2YgYSBiZXQgKHBvdCBpcyAzMCkgbm93IHRoYXQgSSB0aGluayBhYm91dCBpdC5Gb2xkcyBhbGwgdGhlIHdheSB0byB2aWxsYWluIHdobyByYWlzZXMgdG8gMjAuIEkgdGhpbmsgYWJvdXQgMyBiZXR0aW5nIHRvIHNlZSB3aGVyZSBJIHN0YW5kLiAKU28gSSBhc2sgaGltLCBhbmQgSSBoYXZlIHRoaXMgcGhvdG9ncmFwaGljIG1lbW9yeSBvZiB0aGlzIG1vbWVudCwgaGltIGxvb2tpbmcgZG93biBhdCBtZS4gSSBhc2sgaGltIGhhcyBpdCB0YWtlbiB1cyB1bnRpbCBub3cgdG8gZ28gdG8gTWFycz8gZGlkbiBleHBlY3QgYSBndXQgd3JlbmNoaW5nIGxhdWdoIGZyb20gV2lsLCBidXQgdGhlIGhhbGYgc21pcmsgc3RpbGwgaHVydCwgbGlrZSBoZSB3YXMgcGl0eWluZyBoZXIgaW5zdGVhZCBvZiBmaW5kaW5nIGl0IGZ1bm55LiAKQXhpcyBhbmQgQWxsaWVzIGlzIGEgV29ybGQgV2FyIElJIGJhc2VkIGdhbWUgd2hpY2ggaGFzIG1hbnkgc2ltaWxhcml0aWVzIHRvIFJJU0ssIGJ1dCBtYW55IG1vcmUgY29tcGxleGl0aWVzIGFzIHdlbGwuIFlvdSBoYXZlIHRvIGtlZXAgdXAgYW4gZWNvbm9teSBhbmQgc3BlbmQgeW91ciByZXNvdXJjZXMgd2lzZWx5IG9uIGRpZmZlcmVudCB1bml0IHR5cGVzLiBJdCBjYW4gYmUgYSBsb25nIGdhbWUsIGJ1dCB0aGVuIGFnYWluLCBSSVNLIGlzbid0IGV4YWN0bHkgc2hvcnQgZWl0aGVyLgpOZWdhdGl2ZSBsaWJlcnRpZXMgYXJlIGZpbmUgYnV0IHRoZXkgZG9uIG1lYW4gbXVjaCB3aXRob3V0IG1hdGVyaWFsIHNlY3VyaXR5LkkgbWVhbiBpIGFpbiBnb25uYSBsaWUgdG8geW91IHNvbiwgaSBubyBsaWJlcmFsLCBhdCB0aGUgdmVyeSBsZWFzdCBpIGxpYmVydGFyaWFuIHNvY2lhbGlzdCAoYW5hcmNobyBzeW5kaWNhbGlzdCkuSSBzYXkgaXRzIG1vcmUgb2YgYSBwaGlsb3NvcGhpY2FsIGRpZmZlcmVuY2UgYmV0d2VlbiB0aGUgZGlmZmVyZW5jZSBvZiBhIHJpZ2h0IHRvIGJlIEZSRUUgRlJPTSBzb21ldGhpbmcsIGFuZCBoYXZpbmcgdGhlIG1hdGVyaWFsIGFiaWxpdHkgYW5kIG1lYW5zIFRPIERPIHNvbWV0aGluZyAodGltZSwgbW9uZXksIHNlY3VyaXR5IHdoYXRldmVyKS4gSW4gbXkgb3BpbmlvbiB0aGUgVVMgKGFuZCBwbGVudHkgb2Ygb3RoZXIgY291bnRyaWVzLCBidXQgaSBsaXZlIGluIHRoZSB1cykgaXMgb25seSBzdWNjZWVkaW5nIGluIHByb3ZpZGluZyBzb21lIG5lZ2F0aXZlIGxpYmVydGllcyAoZnJlZWRvbSBmcm9tIGhhdmluZyB5b3VyIGd1bnMgdGFrZW4gYXdheSwgb3IgZnJlZWRvbSBmcm9tIGdvdmVybm1lbnQgYWN0aW9uIG92ZXIgeW91ciBzcGVlY2gsIE9HIGpvaG4gbG9ja2UgdHlwZSBzdHVmZikgdGhhbiBjcmVhdGluZyBhbnkgcG9zaXRpdmUgbGliZXJ0eSAoU2VjdXJpdHkgb2YgYW55IGtpbmQgdGhhdCB3b3VsZCBhbGxvdyBwZW9wbGUgdG8gZG8gd2hhdCB0aGV5IHdhbnQpLiBGaW5hbmNpYWwsIGhlYWx0aCBhbmQgam9icyBzZWN1cml0eSwgaW4gbXkgb3BpbmlvbiwgaXMgYSBiaWcgcGFydCBvZiBhbGxvd2luZyBwZW9wbGUgdG8gYWN0dWFsbHkgYmUgZnJlZSB0byBkbyB0aGUgdGhpbmdzIHRoZXkgd2FudCB0byB3aGljaCBpIHdvdWxkIGNvbnNpZGVyIGEgbW9yZSBpbXBvcnRhbnQgZnJlZWRvbSB0aGFuIHRoZSBzdHJpY3QgImNvbnN0aXR1dGlvbmFsIGZyZWVkb21zIi4gCk9ubHkgYm95cyBsZWZ0IGFyZSBEZWt1IGFuZCBBbGwgTWlnaHQsIGFuZCB0aGUgb3RoZXIgMyBhbGwgZ290IHVwc2V0IGluIGEgc2luZ2xlIGRheS4gRnVja2luZyBudXRzIHRoYXQgd2FzLkFzIGZvciB3aW5uZXJzLCBHdXRzLiBIZSBkb25lIHR3byB1cHNldHMgaW4gdGhlIHBhc3QgdHdvIHJvdW5kcywgYmVhdGluZyBvdXQgdHdvIGltbWVuc2VseSBwb3B1bGFyIGNoYXJhY3RlcnMgZnJvbSB0d28gb2YgdGhlIGJpZ2dlc3QgZnJhbmNoaXNlcyBpbiBKYXBhbiByaWdodCBub3cuIApEYSBPdHRvYnJlIDIwMTAgaGEgaW50cmFwcmVzbyBsYSBjYXJyaWVyYSBhZ29uaXN0aWNhIG5lbGwnYW1iaXRvIGRlbGxhIGRhbnphIGNsYXNzaWNhIHBhcnRlY2lwYW5kbyBhIHZhcmkgc3RhZ2UgbmF6aW9uYWxpIGVkIGludGVybmF6aW9uYWxpLCB2aW5jZW5kbyB2YXJpIGNvbmNvcnNpIGUgYm9yc2UgZGkgc3R1ZGlvLgpUaGUgTGVmdCAoYWxvbmcgd2l0aCBtb2RlcmF0ZXMpIG5lZWRzIHRvIHJ1biBhIGNhbmRpZGF0ZSB0aGF0IHN0YW5kcyB1cCBmb3IgYXZlcmFnZSBwZW9wbGUsIGJ1dCBzb21lb25lIHdobyBpcyBzb21ld2hlcmUgaW4gdGhlIG1pZGRsZSBvZiwgY29sbGVjdGl2ZWx5LCB0aGUgbW9kZXJhdGVzIGFuZCB0aGUgTGVmdC4KTWljaGlnYW4gTWF0dGVyczogUGFydG5lcmluZyB0byBIZWxwIFN0dWRlbnRzIFN1Y2NlZWQgYXQgU2Nob29sTWljaGlnYW4gTWF0dGVycyBob3N0IENhcm9sIENhaW4gdGFsa3Mgd2l0aCBPYWtsYW5kIENvdW50eSBCb2FyZCBvZiBDb21taXNzaW9uZXJzIENoYWlybWFuIERhdmlkIFdvb2R3YXJkIGFuZCBPYWtsYW5kIFNjaG9vbHMgU3VwZXJpbnRlbmRlbnQgRHIuIApJIG5ldmVyIG92ZXJjb21lIG15IHBoeXNpY2FsIG9yIG1lbnRhbCBoZWFsdGggaXNzdWVzICh2ZXJ5IHNldmVyZSBhdCB0aW1lcyksIGJ1dCBJIGZvcmNlIG15c2VsZiB0byB3b3JrLCBjbGVhbiBteSBob3VzZSBldGMuIApZb3VyIGNvbW1lbnRzIGFuZCBzY2F0dGVyZWQgdGhvdWdodHMgYWRkIG5vdGhpbmcgdG8gdGhlIGRpc2N1c3Npb24gb2YgZmlsbSBtYWtpbmcsIGRpcmVjdG9yIGludGVudCwgb3IgdGhlbWVzIGV4Y2VwdCB0cnlpbmcgdG8gZmlndXJlIG91dCB3aHkgcGVvcGxlIGxpa2UgdGhpcyBtb3ZpZSBhbmQgeW91IGRpZG4gYnkgc2F5aW5nICJ5ZWFoIHdlIHN1cHBvcnRlZCBhbiBhbGwgYXNpYW4gY2FzdCBzbyBJIGd1ZXNzIGl0IG5vdCBhIHdhc3RlIiwgIkkgZ3Vlc3MgbXkgS29yZWFuIGdpcmxmcmllbmQgbGlrZWQgaXQgYnV0IHdoeSBkaWRuIGl0IG1ha2UgaGVyIGNyeSBsaWtlIGluIExvZ2FuIGlmIGl0IHRhcmdldGVkIHRvIGhlciIsICJzb2NpYWwgbW92ZW1lbnQgQSsiIG9yICJBd2t3YWZpbmEgYWNjZW50IGlzIHJhY2lzdCBJIHRoaW5rLiIgV2hhdCBhcmUgeW91IHRyeWluZyB0byBzYXk/IEl0IGZlZWxzIGxpa2UgeW91IHN0cnVnZ2xpbmcgdG8gd3JpdGUgYSBjb21wcmVoZW5zaXZlIGNyaXRpcXVlIG9uIHdoeSB5b3UgdGhpbmsgdGhlIG1vdmllIGRpZG4gc3VjY2VlZCBvbiB3aGF0IGl0IHdhbnRlZCB0byBiZSBvciB3aHkgeW91IGRpZG4gZW5qb3kgYXMgbXVjaCBhcyB5b3Ugd2FudGVkLiBNYXliZSBtYXJrZXRpbmcgYW5kIGh5cGUgc2V0IHlvdXIgYmFyIHRvbyBoaWdoIG9uIHRoaXMgIkdyZWF0ZXN0IFJvbWNvbSBldmVyIgpUaGUgbG9jYXRpb24gb2YgdGhlc2UgZGVwZW5kIG9uIHRoZSBpbmRpdmlkdWFsIGF0aGxldGUgYW5kIGhpcyBvciBoZXIgdHJhaW5pbmcgcm91dGluZS4gClRoZXkgYXJlIGVmZmljaWVudCB3aXRoIG11c2NsZSBwYWlucyBiZWNhdXNlIHRoZXkgY2FuIGNvbmNlbnRyYXRlIG9uIHRoZSBhcmVhIHRoYXQgaXMgZXhwZXJpZW5jaW5nIHBhaW4uIApJIHdhcyBmaW5lIHVudGlsIEkgZ290IHVwIHRvIHBlZS4gSSBzdWRkZW5seSByZWFsaXplZCBJIHdhcyB3YXkgdG9vIGhpZ2ggZm9yIHRoZSBzaXR1YXRpb24uIApJJ20gbm90IGxvb2tpbmcgZm9yIGFuIGVhc3kgd2F5IHRvIHRyYWluIG9yIGEgcXVpY2sgZml4IGp1c3Qgd2F5cyBvZiBnZXR0aW5nIG1vcmUgb3V0IG9mIHRoZSB0aW1lIGkgaGF2ZSBhbmQgdGhlIHRyYWluaW5nIGkgZG8uIEkgZG9udCBzZWUgYW55dGhpbmcgd3Jvbmcgd2l0aCB1c2luZyB0ZWNobm9sb2d5IHRvIGhlbHAgYnV0IHlvdSB3cm9uZ2x5IGFzc3VtZWQgaSBqdXN0IGRvbnQgcHV0IHRoZSBlZmZvcnQgaW4uIApIYWQgbHVuY2ggbiBCZWxzcm1hIGFsb25nIHRoZSBydmVyIG4gdGhlIElsaGFyYSBWYWxsZXkgYW5kIHRoZW4gd2Fsa2VkIHRocm91Z2ggdGhlIHZhbGxleSB3aGVyZSB0aGVyZSBhcmUgYXBwYXJlbnRseSBjaHVyY2hlcyBuIHRoZSBobGxzZGVzIGJ1dCBJIGVtYmFyYXNzZWQgdG8gc2F5IHdlIGNvdWxkbiBmbmQgdGhlbSEgV2Ugd2VudCB0byBLYXltYWtsLCBhbiBjdHkgdGhhdCBtYWRlIG1lIFNPIGNsYXVzdHJvcGhvYmMhIFdlIHdlcmUgbHRlcmFsbHkgZ29uZyB0aHJvdWdoIHBhc3NhZ2VzIHdoZXJlIHlvdSBoYWQgdG8gY3JvdWNoIGRvd24gYW5kIHJvdW5kIHlvdXIgc2hvdWxkZXJzIGFuZCBzY29vdGNoIHRocm91Z2guIEl0IGEgbWF6ZSBvZiB0dW5uZWxzIGFuZCByb29tcyB0aGF0IGFyZSBlZ2h0IGxheWVycyBkZWVwIG50byB0aGUgZ3JvdW5kLiBUaGVyZSBzIGV2ZW4gYSBzb3Boc3RjYXRlZCBzeXN0ZW0gb2YgdmVudGxhdG9uLiBUaGVyZSBhcmUgc29tZSAzNiB1bmRlcmdvdW5kIGN0ZXMgbiBDYXBhZG9jY2EgYW5kIGFyY2hhZW9sb2dzdHMgZGF0ZSB0aGVtIGJhY2sgdG8gN3RoIGNlbnR1cnkgQkMhISEKU2l4IG9mIHRob3NlIGRvbGxhcnMgd2VyZSBhd2FyZGVkIHRvIHRoZSBtYW5hZ2VyIG9mIHRoZSBSb3NlbGFuZCBUaGVhdHJlLCBsaXN0ZWQgaW4gdGhlIHByb2NlZWRpbmdzIGFzIHByb3NlY3V0b3IuIERlc21vbmQgbmV2ZXIgcmVjZWl2ZWQgY291bnNlbCwgbm9yIHdhcyBzaGUgaW5mb3JtZWQgdGhhdCBzaGUgd2FzIGVudGl0bGVkIHRvIGFueS4gQ2xlYXJseSwgRGVzbW9uZCByZWFsIG9mZmVuY2Ugd2FzIHZpb2xhdGluZyB0aGUgaW1wbGljaXQgcnVsZSB0aGF0IEJsYWNrcyB3ZXJlIHRvIHNpdCBpbiBzZWdyZWdhdGVkIGJhbGNvbnkgc2VhdHMsIGFsaWVuYXRlZCBmcm9tIFdoaXRlIHBlcnNvbnMgb24gdGhlIG1haW4gZmxvb3IuIApTbywgaWYgeW91IGltYWdpbmVkIHNvbWUgY3Jhenkgc2hlbmFuaWdhbnMgaW52b2x2aW5nIGEgY3JhbmUsIHJvcGVzLCBib3hlcyBhbmQgbmV0cywgbm93IHlvdSBjYW4hIFNvLCBpbnN0ZWFkIG9mIHRoZSBjb25mbGljdCBnb2luZyBzdHJhaWdodCB0byBpbml0aWF0aXZlIGF0dGFjayBhdHRhY2sgY2FzdCBzcGVsbCB5b3UgY2FuIGRvIHNvbWV0aGluZyBlbHNlIGVudGlyZWx5LCB0aGF0IHdpbGwgbWFrZSBmb3IgYSBtdWNoIG1vcmUgaW50ZXJlc3RpbmcgZW5jb3VudGVyLiBJIHdpbGwgZ2l2ZSBpdCB0aGUgc2FtZSBtZWNoYW5pY2FsIGVmZmVjdGl2ZW5lc3MgYXMgY2FzdGluZyBzcGVsbHMgb3Igc3dpbmdpbmcgc3dvcmRzLgpJIHRoaW5rIHRoaXMgaXMgaG93IG91ciBtaW5kIHByb3RlY3RzIHVzIHRvd2FyZHMgdGhlIGVuZC4gSXQgc2FpZCB0aGF0IHdlIGFyZSB5b3VuZywgZ3JvdyB1cCwgYW5kIHRoZW4sIHRvIHNvbWUgZXh0ZW5kLCByZXZlcnQuIEkgdGhpbmsgdGhlcmUgc29tZSB0cnV0aCB0byB0aGF0LCBidXQgbm90IGluIGEgYmFkIHdheS4KT3VyIGludGVudGlvbnMgYXJlIG5vdCB0byBiZSB1bmNsZWFyIGFib3V0IHRoaXMgcG9saWN5LCBhbmQgd2UgdW5kZXJzdGFuZCB0aGF0IGl0IGNhbiBiZSBmcnVzdHJhdGluZyB3aGVuIGl0IHNlZW1zIHRoYXQgd2F5LiBIb3dldmVyLCBhcyB5b3Uga25vdywgb3VyIGNvbnN0YW50IHJlZnJhaW4gaXMgdGhhdCBwb2xpY3kgbXVzdCBiZSBhcHBsaWVkIGNvbnRleHR1YWxseS4gCiQ3LyQxMCBhdCB0aGUgZG9vci4gCkVpbmUga2x1Z2UgRnJhdSBzYWd0ZSBlaW5tYWw6ICJXZXIgd2VpLCBkYXNzIGFsbGVzIG5pY2h0cyB3ZWkuIiAyIE1pbGxpYXJkZW4gQ2hyaXN0ZW4sIGdsYXViZW4gMSBNaWxsaWFyZGUgTXVzbGltZSB1bmQgMTggTWlsbGlvbmVuIEp1ZGVuLCBkYXNzIGlocmUgSGVpbGlnZW4gQmliZWxuLCBkYXJ1bnRlciBkaWUgQmNoZXIgZGVyIFByb3BoZXRlbiBkYXMgV29ydCBkZXMgR290dGVzIGRlcyBNb3VudCBTaW5haSwgYWJlciB3ZW5uIFNpZSBlaW5lciB2b24gaWhuZW4gZ2VzYWd0LCBkYXNzIFNpZSBlaW5lbiBQcm9waGV0ZW4gd2FyZW4sIHdyZGUgc2llIFNpZSBpbiBlaW5lciBwc3ljaGlhdHJpc2NoZW4gS2xpbmlrIGdlYnJhY2h0LiAKWW91IGhhdmUgaW5kZWVkLCBjb3JyZWN0bHkgZGlzY2VybmVkIGF0IGxlYXN0IG9uZSB0aGluZzogSSBhbiBBdGhlaXN0LgoiTmV5bWFyIEpyIGlzIGEgeW91bmcgYW5kIGV4dHJlbWVseSBjaGFyaXNtYXRpYyBtZWdhc3RhciB3aG8gbG92ZXMgaW50ZXJhY3Rpbmcgd2l0aCBmYW5zIG9uIHNvY2lhbCBtZWRpYSwgaXMgY29tZm9ydGFibGUgb24gY2FtZXJhIGFuZCBsb3ZlcyB0aGUgZ2FtZSBvZiBwb2tlci4gQW5kIGFzIGEgc3VwZXJzdGFyIHdpdGggb25lIG9mIHRoZSB3b3JsZCdzIG1vc3QgZmFtb3VzIGZvb3RiYWxsIGNsdWJzIGFuZCBmb290YmFsbCBuYXRpb25zLCBoaXMgYXBwZWFsIGlzIGdsb2JhbC4gVGhpcyBwYXJ0bmVyc2hpcCBpcyBhIGdyZWF0IG9wcG9ydHVuaXR5IHRvIG1hcmtldCB0aGUgZ2FtZSBvZiBwb2tlciBhY3Jvc3MgdGhlIGdsb2JlIGFuZCBhdHRyYWN0IG5ldyBmYW5zLiIKQmFsdGltb3JlIENvbHRzLiAKT3ZlcnZpZXcgZm9yIGNhc3VhbGJsYWlyCldlIGFyZSBXYWxsIFN0cmVldC4gSXQgb3VyIGpvYiB0byBtYWtlIG1vbmV5LiAKSGUgZGlkbiBrbm93IGhvdyB0byBiZSBhIHBhcmVudCBmb3IgSGFycnkgY2F1c2UgaGUgaGFkIGZ1Y2tpbmcgc2hpdCBmb3IgcGFyZW50cyBoaW1zZWxmLi4gCkxldCBzaXQgZm9yIDMwIG1pbnV0ZXMuIApTbyBJIHRoaW5rIHRoZSBnb2FsIGlzIHN0aWxsIHRvIGRyYXcgc2FtcGxlcyBmcm9tIHRoZSBwb3N0ZXJpb3IsIGJ1dCBpdCBzZWVtcyB0byBiZSBnZXR0aW5nIHN0dWNrIGlmIHlvdSBkb250IHNtb290aCB0aGUgcG9zdGVyaW9yLiBJIG5ldmVyIHNlZW4gdGhpcyBzcGVjaWZpYyBhcHByb2FjaCBiZWZvcmUsIGJ1dCBpdCBzZWVtcyBsaWtlIHRoZXkgYXJlIHNpbXBseSB0cnlpbmcgdG8gaW1wcm92ZSB0aGUgY29udmVyZ2VuY2UgcmF0ZXMgb2YgTUNNQyBhcyBvcHBvc2VkIHRvIHNhbXBsaW5nIHNvbWV0aGluZyBkaWZmZXJlbnQuClRoZSBkb3duc2lkZSBpcyB0aGF0IHRoZSB0aW1lbGluZSBpdHNlbGYgaXMgc2VwYXJhdGUgZnJvbSB0aGUgY2FsZW5kYXIgZ2VuZXJhdG9yLiBTbyBJIGZpbmQgYSBzbG90IG9uIHRoZSB0aW1lbGluZSBJIHdhbnQgdG8gZmlsbCwgcHVuY2ggc29tZSBkYXRlcyBpbnRvIHRoZSB3b3Jrc2hlZXQgdG8gdGVzdCBpZiBpdCBpcyBsZWdpdCwgYW5kIHRoZW4gZW50ZXIgdGhlIG9mZmljaWFsIGRhdGUgbWFudWFsbHkgaW4gbXkgdGltZWxpbmUgKHdoaWNoIGlzIGp1c3QgYW4gRXhjZWwgc2hlZXQgd2l0aCB0aGUgZGF0ZXMgcnVubmluZyB1cCBhbmQgZG93bikuIApCdXQgc3ltYm9saWMgdmlvbGVuY2UgaXNuIGZ1bm55LiBJdCBkYW5nZXJvdXMuIApUaGUgRmlkZGxlciBmYW1pbHkgaGFkIGJlZW4gdHJhdmVsaW5nIGZyb20gU2Fza2F0b29uIHRvIENhcnJvdCBSaXZlciB0byB2aXNpdCByZWxhdGl2ZXMgb24gSnVuZSAxNywgMTk5Ny4gUkNNUCBzYWlkIHRoZSB2ZWhpY2xlIGEgaGFsZiB0b25uZSB0cnVjayB0cnVjayByYW4gYSBzdG9wIHNpZ24gbG9jYXRlZCBvbiBIaWdod2F5IDMzNSBhbmQgY3Jvc3NlZCB0aGUgcGF0aCBvZiBhIHNlbWkgdHJhdmVsaW5nIHNvdXRoYm91bmQgb24gSGlnaHdheSAzNS4gQm90aCB0cnVja3MgZW5kZWQgdXAgaW4gYSBkaXRjaCwgYnV0IHRoZSBwaWNrdXAgYnVyc3QgaW50byBmbGFtZXMuLiAKVGhlcmUgaXMgdGhlIGNsYXNzaWMgRG9vcmtub2IgKGlmIHlvdSBidXJwIG9yIGZhcnQgYW5kIHNvbWVvbmUgc2FpZCBkb29ya25vYiBiZWZvcmUgeW91IGNhbGxlZCBzYWZldHkgdGhleSBjb3VsZCBwdW5jaCB5b3UgaW4gdGhlIGFybSB1bnRpbCB5b3UgdG91Y2hlZCBhIGRvb3Jrbm9iKS4gVGhlIGJlYXV0eSBvZiB0aGF0IHdhcyB2ZXJ5IGZldyBkb29ycyBpbiBvdXIgc2Nob29sIGhhZCBkb29ya25vYnMsIGFuZCB3ZSBkaWRuIGNvdW50IGRvb3IgaGFuZGxlcy4gCkNCOiBZb3UgYXJlIGJlaW5nIGluY29uc2lkZXJhdGUuIFRoaXMgaXMgc2ltcGx5IGEgdGhyZWUgZGF5IGVuZ2FnZW1lbnQgYW5kIHlvdSBhcmUgcmVmdXNpbmcgdG8gYXNzaXN0LiBEb2VzIHlvdXIgZmVtYWxlIGhhdmUgYSBzaXN0ZXI/IEkgd291bGQgYWxzbyBsaWtlIHRvIGhhdmUgc2V4dWFsIHJlbGF0aW9ucyB3aXRoIGhlci4gClN1cmUsIGF0IHRoZSB0aW1lLCB3ZSB3ZXJlIHVwc2V0LCBidXQgd2UgZGlkbid0IGJlbGlldmUgeW91IGNvdWxkIGFjdHVhbGx5IGNsZWFuIHRoZSAxMDAwIFBhdWxzb24gUGhhcm9haCBDYXNpbm8gVG9wIEhhdCBQb2tlciBDaGlwcyB3aXRoIEFsdW1pbnVtIENhc2UuLiAK|<---