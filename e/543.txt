--->|VG90YWwgb24gdGhpcyBsaXN0OiAxMTAgMSAxNCkgIkJvcm4gVGhpcyBXYXkgKE9yaWdpbmFsQWxidW0pICI6IE1hcnJ5IFRoZSBOaWdodC9Cb3JuIFRoaXNXYXkvR292ZXJubWVudCBIb29rZXIvSnVkYXMvQW1lcmljYW5vL0hhaXIvU2NoZWllIC8gQmxvb2R5IE1hcnkgLyBCYWQgS2lkcy9IaWdod2F5IFVuaWNvcm4gKFJvYWQgVG8gTG92ZSkvSGVhdnlNZXRhbCBMb3Zlci9ZbyBhbmQgSS9UaGUgRWRnZSBPZiBHbG9yeS4gR2V0IHRoaXMgbmV3ZXN0IGFsYnVtZnJvbSBpVHVuZXMhIDE1KSBSZXRybyBEYW5jZUZyZWFrIC4gCkkgYmVlbiBwbGF5aW5nIHBva2VyIGZvciBzZXZlcmFsIG1pbGxpb24gaGFuZHMsIGFuZCBJIG9ubHkgc2VlbiBxdWFkcyBsb3NlIG9uY2UsIGFuZCBpdCB3YXMgcXVhZCA1cyBvbiBhIGJvYXJkIHdoZXJlIHRoZXJlIHdlcmUgdGhyZWUgNnMgb24gdGhlIGJvYXJkLiAKV2hhdCB3ZSBjYW1lIHVwIHdpdGggaXMgdGhpcyBvbmxpbmUgcG9rZXIgcmV2aWV3IG9uIGhvdyB0byBtYWtlIG1vcmUgY2FzaCBhdCBObyBMaW1pdCBUZXhhcyBIb2xkZW0uIEhlcmUgYXJlIGEgZmV3IHRpcHMgd2UgdGhpbmsgYXJlIHJlYWxseSBpbXBvcnRhbnQgdG8gbGVhcm4uLiAKWW91IHdpbGwgbmVlZCBsZWFybiBldmVyeXRoaW5nIGFib3V0IGEgcHJvZmVzc2lvbmFsIHBva2VyIHBsYXllci4gCkkgaGF2ZSB0aGUgKHJlaXNzdWVkKSBkZWdyZWUgb24gbWUgbm93LiBBbSBhbiBBbWVyaWNhbiBjaXRpemVuIGN1cnJlbnRseSBsaXZpbmcgaW4gU291dGggS29yZWEuCkZvciBteSBzaXN0ZXJzJyBzaG93ZXIgKHNoZSdzIGhhdmluZyBvbmUgZ2lybCkgd2UgYXJlIGRvaW5nIGEgc3RvcnkgYm9vayBraW5kIG9mIHByaW5jZXNzIHRoZW1lIGFuZCBvbiB0aGUgaW52aXRhdGlvbiB3ZSBwdXQgImluIGxldWkgb2YgY2FyZHMgcHV0IGEgc3BlY2lhbCBtZXNzYWdlIGluIGEgYm9vayBmb3IgdGhlIGJhYnkiLiAKTWFrZSBzdXJlIHRoYXQgd2hhdGV2ZXIgeW91IGJ1eSBoYXMgc2lnaHRzIG9uIGl0IG9yIHlvdSBnb25uYSBoYXZlIHRvIHNoZWxsIG91dCBtb3JlIG1vbmV5IGZvciBhbiBvcHRpYyBvciBpcm9uIHNpZ2h0cy4gSSBhbHNvIHN1Z2dlc3Qgc2F2aW5nIGEgbGl0dGxlIGJpdCBtb3JlIG1vbmV5IHNvIHRoYXQgeW91IGNhbiBzcGVuZCBhcm91bmQgJDUwMCBvbiBhIHJpZmxlLiBUaGF0IGFtb3VudCBzaG91bGQgZ2V0IHlvdSBhIHByZXR0eSBnb29kIHBhY2thZ2UgdG8gZ2V0IHN0YXJ0ZWQuIApIYXMgc3R1ZGllZCBtdWx0aXBsZSBmb3JtcyBvZiBFbmVyZ3kgSGVhbGluZywgTWVkaXVtIHNoaXAsIEhlcmJvbG9neSwgQXJvbWF0aGVyYXB5LCBDcnlzdGFsIEhlYWxpbmcsIGFuZCBDYXJkIFJlYWRpbmcuIApJIHJlbWVtYmVyIHRoaXMgdGhyZWFkIGJ1dCBpIGRpZG4gdmlldyBpdCBpbiBjb250ZXh0IG1vZGUuIApUaGUgaWRlYWwgZXllIGV4cHJlc3Npb24gaXMgcmVsYXhlZCwgeWV0IGVuZ2FnaW5nLi4gCkVsZWN0cm9uaWMgY2FzaW5vIGdhbWVzIHN1Y2ggYXMgc2xvdCBtYWNoaW5lcyBjYW4gYWxzbyBiZSBmb3VuZCBib3RoIG9ubGluZSBhbmQgYnJpY2sgYW5kIG1vcnRhciBjYXNpbm9zLiBPbmxpbmUgVmlkZW8gUG9rZXIgZ2FtZXMgYXJlIGFsc28gaW5jcmVhc2luZ2x5IHBvcHVsYXIuClRoZXNlIHR5cGVzIG9mIG1hY2hpbmVzIGVsaW1pbmF0ZSB0aGUgcG9zc2liaWxpdHkgb2Ygb25lIHBsYXllciBnZXR0aW5nIGJldHRlciBoYW5kcyB0aGFuIHRoZSBvdGhlciBwbGF5ZXJzIGluIHlvdXIgYnJpZGdlIGdhbWUuIApPZiB0aGUgbG9jYWwgYXJyZXN0cywgNDcgd2VyZSBhZHVsdHMgYXJyZXN0ZWQgb24gcHJvc3RpdHV0aW9uIGNoYXJnZXMsIG9uZSBhZHVsdCB3YXMgY2hhcmdlZCB3aXRoIHBhbmRlcmluZyBhbmQgb25lIHdhcyBjaGFyZ2VkIHdpdGggcGFuZGVyaW5nIGFuZCBsaXZpbmcgZnJvbSB0aGUgZWFybmluZ3Mgb2YgYSBwcm9zdGl0dXRlLCBWaWduYSBzYWlkLgpTbyB3aGVuIEphbWVzIHB1c2hlcyAkMiBpbnRvIHRoZSBtaWRkbGUgb2YgdGhlIHRhYmxlLCBJIGFtIHNrZXB0aWNhbC4gCiJJIGFsd2F5cyBzYXkgdGhlIGJpZ2dlc3QgZ2FtZSBvZiB0aGUgc2Vhc29uIGlzIHRoZSBuZXh0IHdlZWssIiBIb3Bzb24gc2FpZC4gIkluIGZvb3RiYWxsLCB3ZSBjb3VudCBvdXIgcG9rZXIgY2hpcHMgdXAgYXQgdGhlIGVuZCwgYnV0IHRoaXMgaXMgYSBiaWcgZm9vdGJhbGwgZ2FtZS4gCldhdGNoaW5nIGhvdyBxdWlja2x5IHRoZSBhZG1pbmlzdHJhdGlvbiBkZWNpZGVkIHdlIG5lZWQgdHJvb3BzLCB0cm9vcHMsIGFuZCBtb3JlIHRyb29wcyBpbiBBZmdoYW5pc3RhbiBoYXMgYmVlbiBhIGxpdHRsZSBjaXZpY3MgbGVzc29uIGluIGhvdyB0aGluZ3Mgd29yayBpbiB0aGlzIGNvdW50cnkuCkEgZGlmZmljdWx0IG5vdmVsIGluIHRoZSBndWlzZSBvZiBhIHBvcHVsYXIgb25lLCBpdCBpcyB2aXJ0dWFsbHkgZ3VhcmFudGVlZCB0byBkaXNhcHBvaW50LiBUaGUgYm9vaydzIEdvb2RyZWFkcyBpbmZhbXkgaXMgbGVnZW5kYXJ5LiAKSSBoYXZlIGEgcXVlc3Rpb24gYWJvdXQgdGhlICJuYXR1cmFsaXR5IiBvZiBzb21lIG1vcnBob2xvZ2ljYWwgZmVhdHVyZXMgSSB3YXMgdGhpbmtpbmcgYWJvdXQgYWRkaW5nIHRvIGFuIGEgcHJpb3JpIGxhbmcuIEJhc2ljYWxseSwgdGhlIGlkZWEgaXMgdG8gYWx0ZXIgdGhlIGluZmxlY3Rpb24gb2YgYSBub3VuIGRlcGVuZGluZyBvbiB0aGUgdHlwZSBvZiBjbGF1c2UgaXQgaXMgcGxhY2VkIGluLiBBdCB0aGUgbW9zdCBiYXNpYyBsZXZlbCB0aGF0IHdvdWxkIGludm9sdmUgbWFya2luZyBub3VucywgYWRqZWN0aXZlcyBhbmQgdmVyYnMgdGhhdCBhcmUgcGFydCBvZiBhIHN1YmNsYXVzZS4gU28gc2F5ICBYIHdhcyBhIHN1ZmZpeCBkZW5vdGluZyB0aGF0IGEgdmVyYiBvciBub3VuIHdhcyBwYXJ0IG9mIGEgc3ViY2xhdXNlLCB0aGF0IHdvdWxkIGdpdmUgdXMgc29tZXRoaW5nIGxpa2UgIkhlIHNhaWQgaGUgWCBsaWtlZCBYIG1lIFgiLiBBdCBmaXJzdCB0aGlzIG1pZ2h0IGxvb2sgc2ltaWxhciB0byBhIHN1Ymp1bmN0aXZlLCBidXQgZmlyc3RseSBJIGV4cGxpY2l0bHkgZG9uIHdhbnQgaXQgdG8gYmUgYWJvdXQgdmVyYmFsIG1vb2QsIGJ1dCBwdXJlbHkgYWJvdXQgc3ludGFjdGljIHBvc2l0aW9uOyBzZWNvbmRseSB0aGlzIHdvdWxkIGV4dGVuZCB0byBtYXJraW5nIG90aGVyIHdvcmQgdHlwZXMgc3VjaCBhcyBub3VucyBhbmQgYWRqZWN0aXZlczsgc28gZG9lcyBhbnl0aGluZyBsaWtlIHRoaXMgb2NjdXIgaW4gbmF0bGFuZ3MsIGFuZCAoZXZlbiBpZiBub3QpIHdoYXQgd291bGQgYmUgc29tZSBmaXR0aW5nIHRlcm1pbm9sb2d5IGZvciBzdWNoIGEgcGhlbm9tZW5vbj8gSW5zdGluY3RpdmVseSBJIG1pZ2h0IGhhdmUgY2FsbGVkIGl0IGEgInN1Ym9yZGluYXRpbmcgbW9kZSIgb3Igc29tZXRoaW5nIGxpa2UgdGhhdCwgb3IgYmFzZWQgb24gdGhlIHRlcm0gImNvbXBsZW1lbnRpemVyIiwgc29tZXRoaW5nIGxpa2UgImNvbXBsZW1lbnRpemVkIG1vZGUiLgpBcyBhIHJlc3VsdCwgQUogd2FzIGtpbmQgb2YgbWVzc3kgaW4gc29tZSBwbGFjZXMgYW5kIGl0IGxlZnQgdGhlIHNlcmllcyB3aXRob3V0IGEgZ29vZCBzZW5zZSBvZiBkaXJlY3Rpb24gb24gd2hlcmUgdG8gZ28gYWZ0ZXIgdGhhdC4gCldoZXJlYXMgd2l0aCBDb2xvcmFkby9DYW55b25zLCB0aGVyZSBpc24gYSBsb25nIGhpc3Rvcnkgb2YgdGhlc2UgYmVpbmcgb2ZmIHJvYWQgbW9uc3RlcnMgYW5kIHRyYWlsIGJlYXN0cy4gV2hpbGUgb2ZmIHJvYWQgcGFja2FnZXMgYXJlIG9mZmVyZWQsIHRoZSBtYWpvcml0eSBvZiB1bml0cyBzb2xkIHdpbGwgYmUgbm9ybWFsIHRyaW1zIGFuZCB3aWxsIGJlIGtlcHQgc3RvY2suCkFuZCBhIGhvdXNld2lmZSBldmVuIHdhc24ndCBhcyBpZHlsbGljIGluIHRoZSAxOTQwcyA2MHMgYXMgd2UgdGhpbmsgbm93LiBJIG1lYW4sIG1vc3QgbGl2ZWQgb24gbGVzcyBhbmQgd29ya2VkIG1vcmUgdGhhbiB3ZSBkbyBub3cuIE1pZGRsZSBjbGFzcyBuZWNlc3NpdGllcyBhcmUgZGlmZmVyZW50IHRoYW4gdGhleSB1c2VkIHRvIGJlIChubyBqdWRnbWVudCwgc3RhbmRhcmRzIGNoYW5nZSBhbmQgaXQncyBoYXJkIHRvIGJ1Y2sgdGhvc2Ugc3RhbmRhcmRzKS4gCkkgaW4gZXhhY3RseSB0aGUgc2FtZSBib2F0LCBleGFjdGx5IHRoZSBzYW1lIGZvcm1zIHJlcXVlc3RlZCwgYW5kIHRoZXkgdG9sZCBtZSBleGFjdGx5IHRoZSBzYW1lIHRoaW5nLiBPbiB0aGUgcGx1cyBzaWRlLCBzZW5kaW5nIHRoZW0gZm9ybSA4OTYyIGluY3JlYXNlZCBteSByZWZ1bmQgYnkgJDMwMC4KQWNjb3JkaW5nIHRvIGEgc3R1ZHkgYnkgdGhlIEFtZXJpY2FuIFBvbGl0aWNhbCBTY2llbmNlIEFzc29jaWF0aW9uLCBieSAxOTkwLCB0aGUgVVMgaGFkIHRoZSBtb3N0IHVuZXF1YWwgaW5jb21lIGRpc3RyaWJ1dGlvbiBvZiBhbnkgaW5kdXN0cmlhbGl6ZWQgY291bnRyeUFuZCB5ZXQgQW1lcmljYW5zIGtlcHQgb24gZHJlYW1pbmcuIApMYXRlciBpbiB0aGUgZXBpc29kZSB2aWV3ZXJzIGxlYXJuZWQgS2ltIHdlbnQgdG8gdGhlIGhvc3BpdGFsLiBXaHk/IEFjY29yZGluZyBoZXIgYmxvZyBsYXN0IHdlZWsgc2hlIHdhcyAic3RydWdnbGluZyB3aXRoIGJyb25jaGl0aXMgYW5kIHBuZXVtb25pYSBmb3Igd2Vla3MuIgpQcm9mZXNzaW9uYWwgZGVhbGVycyBhcmUgcmVxdWlyZWQgdG8gZG8gdGhpcyBpbiBhbGwgbGl2ZSBnYW1lcy4gCklmIEkgaG9sZCB0aGUgYnV0dG9uIGRvd24gdG9vIGxvbmcgdGhlIGRhbW5lZCBzdHVmZiBidXJzdHMgaW50byBmbGFtZSwgaW5zdGFudGx5IHR1cm5pbmcgdGhlIG1vdXRocGllY2UgaW50byBhIGdvZCBkYW1uZWQgbWluaSBibG93dG9yY2gsIHNob290aW5nIGEgZmxhbWUgaW50byBteSBtb3V0aC4gSXQgZnVja2luZyBob3JyaWJsZS4uIAoiVGhpcyBtb21lbnQgbm90IG9ubHkgcmVhZmZpcm1zIHdobyB3ZSBhcmUsIGFuZCBvdXIgcHJvdGVjdGlvbiB1bmRlciB0aGUgbGF3IGluIE9udGFyaW8gYW5kIGluIENhbmFkYSwgYnV0IGl0J3MgYSByZWxpZWYgYmVjYXVzZSB3ZSBhcmUgY291bnRlZC4gVGhhdCdzIHF1aXRlIGFuIGluY3JlZGlibGUgZmVlbGluZywgYmVjYXVzZSBpdCBtYWtlcyBpdCBjbGVhciB0aGF0IHdlIGV4aXN0LiIKVGhlcmUgd2FzIG9uZSB2aWRlbyB3aGVyZSBTYXVjZTEyMyBhbmFseXplcyBhIDZ4IHNob3ZlIG9uIHRoZSByaXZlciBieSBPVEJfUmVkQmFyb24gYW5kIGl0IHJlYWxseSBnb3QgbWUgdGhpbmtpbmcgb3V0c2lkZSBteSBub3JtYWwgbGV2ZWwuIFRoZXkgYWxzbyBkbyBhIGJ1bmNoIG9mIFBJTyB3b3JrIHNvIGl0cyBoZWxwZnVsIHRvIHNlZSB3aGF0IHJhbmdlcyB0aGV5IGFzc3VtZSB3aGVuIHJ1bm5pbmcgc2ltcyBhbmQgaG93IHRoZXkgc2ltcGxpZnkgYSB0b24gb2YgaW5mb3JtYXRpb24gdG8gbWFrZSBpdCBmaXQgaW50byBhbiBvdmVyYWxsIHBsYXlhYmxlIHN0cmF0ZWd5LiAKVGhpcyBjaXR5LCBpdHMgaWRlbnRpdHkgYW5kIHNlbGYgcGVyY2VwdGlvbiwgY2FuIGJlIHRyYWNlZCBiYWNrIGRpcmVjdGx5IHRvIHRoZSBpbmR1c3RyeSBhbmQgcGhpbGFudGhyb3B5IG9mIEVhc3RtYW4uIEhlIGNyZWF0ZWQgdGhpcyBjaXR5IGFzIGEgbW9kZWwgb2YgYSBzdWNjZXNzZnVsLCB3ZWxsIHJvdW5kZWQgY29tbXVuaXR5LCBvbmUgdGhhdCBoYWQgYSBoYXJtb25pb3VzIGJhbGFuY2UgYmV0d2VlbiBidXNpbmVzcywgc2NpZW5jZSwgYXJ0cyBhbmQgY3VsdHVyZS4gCkFuZCB0aGlzIHdhcyBub3QgZXZlbiB1bmRlciBpbnZlc3RpZ2F0aW9uLllldCwgdGhlIFBvcnNjaGVzIGdvdCBwZW5hbHRpZXMgZm9yIGFic29sdXRlbHkgZXZlcnl0aGluZy4gClRoZSBBbGlzYWwgR3Vlc3QgUmFuY2ggUmVzb3J0IGlzIGxvY2F0ZWQgaW4gdGhlIGJlYXV0aWZ1bCBTYW50YSBZbmV6IFZhbGxleSBhbmQgcmVub3duZWQgU2FudGEgQmFyYmFyYSBDb3VudHkgd2luZSBjb3VudHJ5LiBQcml2YXRlbHkgb3duZWQgYW5kIG9wZXJhdGVkIHNpbmNlIDE5NDYsIHRoZSBBbGlzYWwgaXMgYSB3b3JraW5nIGNhdHRsZSByYW5jaCBhbmQgZnVsbCBzZXJ2aWNlIHJlc29ydC4gVGhpcyBoaXN0b3JpYyByYW5jaCBpcyBvbmUgb2YgZm91ciBvcmlnaW5hbCBTcGFuaXNoIGxhbmQgZ3JhbnRzIG9uIHRoZSB3ZXN0IGNvYXN0IGdpdmVuIHRvIGNvbnF1aXN0YWRvciBSYWltdW5kbyBDYXJyaWxsbyBpbiB0aGUgbGF0ZSAxNzAwJ3MuIApGcmFua2xpbiBQZWFsZSwgIlRhYmxlIG9mIFByb3BlcnRpZXMgb2YgdGhlIE1ldGFscywgdGFrZW4gZnJvbSBhIHRhYmxlIGJ5IE0uIENoYXVkZXQgb2YgdGhlIFBhcmlzIE1pbnQiLCBwcCAzNzUgMzg1LiBUaGlzIGlzIGJhc2ljYWxseSBhIHRhYnVsYXIgcmVwb3J0IG9uIDM0IG1ldGFscywgbGlzdGVkIGFscGhhYmV0aWNhbGx5LCBhbmQgaW5jbHVkaW5nIGRhdGVzIG9mIGRpc2NvdmVyeSBhbmQgdGhlIG5hbWVzIG9mIGRpc2NvdmVyZXJzLCBwbHVzIHRoZSBuYW1lcyBhbmQgbG9jYXRpb25zIG9mIHRoZSBwcmluY2lwbGUgbWluZXMsIHBsdXMgY29sb3IsIGNoYXJhY3Rlciwgc3RhYmlsaXR5LCBzcGVjaWZpYyBncmF2aXR5LCBzdGF0ZSBpbiB3aGljaCB0aGUgbWV0YWxzIGFyZSBmb3VuZCwgYW5kIHNldmVyYWwgb3RoZXIgcHJvcGVydGllcy4gSm91cm5hbCBvZiB0aGUgRnJhbmtsaW4gSW5zdGl0dXRlLCBQaGlsYWRlbHBoaWEsIDE4MzY7IHZvbHVtZSAxNyAobmV3IHNlcmllcykgYW5kIHZvbHVtZSAyMSBvdmVyYWxsLCB3aXRoIHRleHQgaWxsdXN0cmF0aW9ucyBhbmQgZm91ciBwbGF0ZXMsIDQ0MCBwcApJZiBJIGxvb2sgYXQgdGhpcyBpbiBkZWJ1ZyB2aWV3IG9uIG15IGlQaG9uZSBpdCBsb29rcyBleGFjdGx5IGFzIEkgd2FudCBpdCB0by4gCldlIGFsc28gdGFrZSBhZHZhbnRhZ2Ugb2YgYW1wbGlmaWNhdGlvbiBvZiBzaWduYWwuIFNlZWluZyBvbmUgbW9sZWN1bGUgaXMgcG9zc2libGUgYnV0IHJlcXVpcmVzIHNvcGhpc3RpY2F0ZWQgZXF1aXBtZW50IGFuZCB0cmFpbmluZy4gCkl0IHN0cm9uZywgc2xpcHBlcnkgYW5kIHdldC5JdCBjcmVhdGVzIGEgc2hlYXRoIGFyb3VuZCBlYWNoIG11c2NsZTsgYmVjYXVzZSBpdCBzdGlmZmVyLCBpdCByZXNpc3RzIG92ZXIgc3RyZXRjaGluZyBhbmQgYWN0cyBsaWtlIGFuIGFuYXRvbWljYWwgZW1lcmdlbmN5IGJyZWFrLkl0IGNvbm5lY3RzIHlvdXIgb3JnYW5zIHRvIHlvdXIgcmlicyB0byB5b3VyIG11c2NsZXMgYW5kIGFsbCB5b3VyIGJvbmVzIHRvIGVhY2ggb3RoZXIuSXQgc3RydWN0dXJlcyB5b3VyIGluc2lkZXMgaW4gYSBmZWF0IG9mIGVuZ2luZWVyaW5nLCBiYWxhbmNpbmcgc3RyZXNzb3JzIGFuZCBjb3VudGVyIHN0cmVzc29ycyB0byBjcmVhdGUgYSBtb2JpbGUsIGZsZXhpYmxlIGFuZCByZXNpbGllbnQgYm9keSB1bml0LiAKRXZlcnkgb3RoZXIgbmF0aW9uIGNhbiBiZSBjb250YWluZWQgYnkgYmFsYW5jaW5nIGNvYWxpdGlvbnMgb2YgbG9jYWwgc3RhdGVzLiAKNzYgc2hvd3MgdXAgb3V0IG9mIG5vd2hlcmUgdG8gZGVhbCB3aXRoICJMb3MgTXVlcnRvcyIgYSBNZXhpY2FuIGNyaW1pbmFsIGdhbmcgd2hpY2ggbWVhbnMgInRoZSBkZWFkIi4gV2h5IHdvdWxkIDc2IGdvIGFmdGVyIGEgcmFuZG9tIGdhbmc/IEl0IHRydWUgdGhhdCBoZSBpcyB2ZXJ5ICJicmluZyBqdXN0aWNlIHRvIHRoZSBiYWQgZ3V5cyIgYnV0IHRoZSBzdGF0ZW1lbnQgdGhhdCBoZSB0cnlpbmcgdG8gYnJpbmcgZG93biB0aG9zZSB3aG8gZGVzdHJveWVkIE92ZXJ3YXRjaCBtYWtlcyBhIGxvdCBvZiBzZW5zZSBoZXJlLiAKUml2ZXIgUm9jayBpbiByaWNobW9uZCB1c2VkIHRvIGJlIHN1cGVyIHBvcHVsYXIgYnV0IGl0J3MgYSBwcmV0dHkgZGVhZCBzY2VuZSBub3csIHRvdGFsIG9mIGZpdmUgdGFibGVzIGJ1dCB0aGV5IGp1c3QgZ290IG5ldyB0YWJsZSBmZWx0IHJlY2VudGx5IHNvIG1heWJlIGl0IHdpbGwgcGljayB1cCBhIGJpdC4gSXQncyBhbHNvIG5leHQgdG8gdGhlIG5pZ2h0bWFya2V0IGFuZCB0aGF0J3MgZGVmaW5pdGVseSBzb21ldGhpbmcgdG8gY2hlY2sgb3V0IGR1cmluZyB0aGUgc3VtbWVyLi4gCkl0IGRvZXMgc291bmQgc21hcnQgdG8gaGF2ZSB0aGUgc2Vjb25kIGtpZCBub3cuIAoyIE9ORSBXQVkgdG8gY29tYmF0IHRoZSBoaXR0ZXIgY29sZCB0ZW1wZXJhdHVyZSBpcyB0byBrZWVwIG1vdmluZy4nIEFuZCB0aGF0IElzIGp1c3Qgd2hhdCBtb3JlIHRoYW4gZmlPTyBFbHlyaWFucyBkaWQgeWVzdGVyZGF5IGF0IC4gCk5vIGRlcHJlc3Npb24gYW5kIHRoZSBmYWN0IHRoYXQgeW91IGp1c3QgdHJpZWQgaXNuIGVub3VnaC4gWW91IGNhbiBlYXNpbHkgc2F5ICJJIGZlZWwgYmV0dGVyLCBJIHdhbnQgdG8gZ28gaG9tZSIgYW5kIHRoZXkgbGV0IHlvdSBnby4gSSBkb24gdGhpbmsgY3V0dGluZyBpcyBlbm91Z2gsIG9uZSBvZiBteSBmcmllbmRzIHdhcyBkb2luZyBzby4uIApJIHB1bGwgdGhlIGxhdW5kcnkgb3V0IG9mIHRoZSBkcnllciBpbnRvIHRoZSBiYXNrZXQgYW5kIHdhbGsgaXQgYmFjayB0byB0aGUgYmVkcm9vbSB0byBmb2xkLiBJIGxlYXZlIGl0IGF0IHRoZSBmb290IG9mIHRoZSBiZWQgYW5kIGdvIGJhY2sgdG8gcHVsbCB0aGUgbGF1bmRyeSBmcm9tIHRoZSB3YXNoZXIgYW5kIHBsYWNlIGl0IGludG8gdGhlIGRyeWVyLiAKUmVxdWlyZXMgc29tZSBjb21wYXNzaW9uYXRlIGxpc3RlbmluZywgYW5kIHNvbWUgY3VyaW9zaXR5IG9uIHRoZSBwYXJ0IG9mIHRoZSBoZWFsdGggY2FyZSB3b3JrZXIgYWJvdXQgaG93IHRoZXNlIGRvdWJ0cyBwZXJzaXN0LCBhbmQgd2hhdCB0aGUgZG9taW5hbnQgaGVhbHRoIGNhcmUgaW5zdGl0dXRpb25zIGhhdmUgZG9uZSBpbiB0aGUgcGFzdCB0aGF0IGhhdmUgY29udHJpYnV0ZWQgdG8gdGhlc2UgYW54aWV0aWVzLCBoZSBzYWlkLgpJZiB5b3UgYXJlIHN1ZmZlcmluZyBmcm9tOiBTcG9ydHMgSW5qdXJpZXMsIFNwcmFpbnMsIFN0cmFpbnMsIENhciBhY2NpZGVudCwgSGVybmlhdGVkIERpc2MsIERpc2MgQnVsZ2UsIERlZ2VuZXJhdGl2ZSBEaXNjIERpc2Vhc2UsIE5lY2sgcGFpbiwgSGVhZGFjaGVzLCBMb3cgYmFjayBwYWluLCBvZiBqdXN0IHdhbnQgdG8gZmVlbCBiZXR0ZXIgYW5kIGhhdmUgYmV0dGVyIGxpZmUgcGVyZm9ybWFuY2UgIHBsZWFzZSBjYWxsIG91ciBvZmZpY2UgaW4gSXJ2aW5lLCBDYWxpZm9ybmlhICBhdCA5NDkuODU3LjE4ODggb3IgdmlzaXQgb3VyIHdlYnNpdGUgYXQgQURKVVNUMklUIHRvIGxlYXJuIG1vcmUgYWJvdXQgRnVuY3Rpb25hbCBGaXRuZXNzIENoaXJvcHJhY3RpYywgU3BvcnRzIG1hc3NhZ2UsIE15b2Zhc2NpYWwgUmVsZWFzZSwgQ29ycmVjdGl2ZSBFeGVyY2lzZSwgTm9uIFN1cmdpY2FsIFNwaW5hbCBEZWNvbXByZXNzaW9uLCBDbGFzcyBJViBsYXNlciwgRnVuY3Rpb25hbCBFbmRvY3Jpbm9sb2d5IGFuZCBGdW5jdGlvbmFsIE51dHJpdGlvbi4KSW5mbHVlbmNlIHNvY2lhbGUgc3VyIGxhIHNhbnQKVGhlIG1haW4gYmlsbCwgLCBzYXcgY2hhbmdlcyB1bmRlciBhIHN1YnN0aXR1dGUgaW50cm9kdWNlZCBUaHVyc2RheSBuaWdodC4KSSBrbm93IHRoYXQgbm90IGEgZ3JlYXQgZXhhbXBsZSwgYnV0IGF0IHRoZSB0aW1lIGl0IHdhcyB2ZXJ5IHNvYmVyaW5nIGFzIGEgY2hpbGQuIEkgd2FzIGRpZmZlcmVudCwgYW5kIG5vYm9keSBhcm91bmQgbWUgZ2F2ZSBhIGRhbW4gaWYgbXkgZmVlbGluZ3Mgd2VyZSBodXJ0LiAKVGhpcyBjYW4gYmUgdGhyb3VnaCB0d2l0Y2hpbmcsIHNoYWtpbmcsIG9yIGEgbXVsdGl0dWRlIG9mIGVtb3Rpb25hbCByZWxlYXNlcy4gSSBzZWVuIGxhdWdoaW5nLCBjcnlpbmcsIGFuZ2VyLiAKRXhjbHVzaXZlIG9ubGluZSBxdWFsaWZpZXJzIGZvciBXUFQ1MDAgTGFzIFZlZ2FzIG9uIEFkZGE1MgoiSWYgdGhlIGNvbW11bml0eSBsaWtlcyBpdCwgYW5kIHRoZXkgY29tZSwgdGhleSByaWRlIGF0IHRoZSBjb252ZW50aW9uIGNlbnRyZSBhbmQgdGhleSBzYXkgJ1RoaXMgaXMgZ3JlYXQuIEl0J3MgY29tZm9ydGFibGUuIEl0J3MgZmFzdC4gSXQncyBhd2Vzb21lLicgV2VsbCwgdGhlcmUgYXJlIG90aGVyIHBsYWNlcyBpdCBjYW4gZ28sIiBEYXZpcyBzYWlkLgpKdXN0IGhvcGUgdGhhdCBJIGNhbiBjb250aW51ZSBhbmQgZW5qb3kgdGVubmlzIGluIHRoaXMgc2Vhc29uLCBzYWlkIHRoZSBDemVjaCwgd2hvIHdvbiBmaXZlIFdUQSB0aXRsZXMgdG8gcmV0dXJuIHRvIHRoZSB0b3AgMTAgaW4gMjAxOC4gCk90aGVyIG9uZXMsIHRob3VnaCwgYXJlIHN0aWxsIG9mZiBsaW1pdHMgYmVjYXVzZSB0aGV5IGNhbiBzZXQgb2ZmIHV0ZXJpbmUgY29udHJhY3Rpb25zLi4gClBycHNseWRpc3RyYWN0ZWQgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxOSBob3VycyBhZ28KQylNZW1icmFuZSBsZWFrYWdlIGFsbG93cyBjYWxjaXVtIGluZmx1eCBpbnRvIHRoZSBuZXVyb24sIHJlc3VsdGluZyBpbiBuZXVyb25hbCBpbmp1cnkuCiA2IHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ29UaGVyZSBpcyBwcmVjZWRlbnQgZm9yIGNoaWxkcmVuIG9mIGEgVGFyZyBhbmQgbm9uIFRhcmcgdW5pb24gaGF2aW5nIGEgbWl4IG9mIHRyYWl0cy4gV2UgaGF2ZSBCYWVsb3IgQnJlYWtzcGVhciwgUmhhZW55cyAoZGF1Z2h0ZXIgb2YgQWVtb24pLCBSaGFlbnlzIChkYXVnaHRlciBvZiBSaGFlZ2FyKSwgQml0dGVyc3RlZWwsIEJsb29kcmF2ZW4sIGFuZCBpbmZhbW91c2x5IEphY2UsIEx1a2UsIGFuZCBKb2ZmIFZlbGFyeW9uLiBKb24gU25vdyBtYXkgYmUgYW5vdGhlciBleGFtcGxlLkV2ZW4gVGFyZ2FyeWVucyB3aXRoIDIgVGFyZyBwYXJlbnRzIGNhbiBoYXZlIG5vbiB0cmFkaXRpb25hbCBmZWF0dXJlcy4gCklmIHlvdSdyZSByZWFsbHkgdGhhdCB3b3JyaWVkLCBnb29nbGUgc29tZSBob3RlbCByYXRlcy4gQmUgcHJlcGFyZWQgdG8gZ28gc3RheSB0aGVyZSB3aXRoIHRoZSBiYWJ5IGlmIHNoZSBraWNrcyBvZmYuIEkgcmVhbGx5IGZlZWwgZm9yIHlvdSwgaG9uZXksIGl0J3MgYSBob3JyaWJsZSBzaXR1YXRpb24gdG8gYmUgaW4uClRoZSBmaXJzdCByb3VuZCB3YXMgcmVhbGx5IHByZXR0eSBzZXQgYW5kIEkga25ldyBJIHdvdWxkIGxhbmQgWmlubm8gYXQgZml2ZS4gClNpbWlsYXJseSwgR29lcnR6IGV0IGFsLiAKU2V2ZXJhbCBhbWVuZG1lbnRzIHdlcmUgYWRkZWQgdG8gdGhlIGJpbGwsIHdoaWNoIHB1c2hlcyB0aGUgaXNzdWUgaW50byAyMDE2Li4gCkkgd291bGRuIHNheSBCKyBpcyBhbiBvdXRyaWdodCBwb29yIENpbmVtYVNjb3JlIGZvciBhbnl0aGluZyBzaG9ydCBvZiBpbnNwaXJhdGlvbmFsIG9yIGZhbWlseSBmYXJlLCBtb3Jlc28gbWl4ZWQgYXMgeW91IG1lbnRpb25lZC4gUmVnYXJkbGVzcyBvZiB0aGF0IHF1aWJibGUsIHRob3VnaCwgSSBmZWVsIGxpa2UgSW5jZXB0aW9uIGhlbGQgc28gd2VsbCBkZXNwaXRlIGl0cyBDaW5lbWFTY29yZSBiZWNhdXNlIGl0IGdvdCBwZW9wbGUgdGFsa2luZyBhYm91dCBpdHMgdHdpc3RzIGFuZCB0dXJucyBhbmQgYW1iaWd1aXR5IG9mIG1lYW5pbmcuIFRoYXQgYnV6eiBwcm9kdWNlZCBhIHdhbnQgdG8gc2VlIGVmZmVjdCBkZXNwaXRlIGFwcGFyZW50IG1peGVkIHdvcmQgb2YgbW91dGggaW4gaXRzIHRpbWUsIHNvbWV0aGluZyB0aGF0IGFsc28gb2NjdXJyZWQgb24gYSBzbWFsbGVyIHNjYWxlIHdpdGggZm9yIGV4YW1wbGUgICBldmVuIHRob3VnaCB0aGF0IG1vdmllIGhhZCBhIHBhdGhldGljIEMgQ2luZW1hU2NvcmUuClRoZXJlJ3Mgbm90IGFsbCB0aGF0IG11Y2ggcmVzZWFyY2ggaGFwcGVuaW5nIG9uIHRoaXMgb25lLCB0aG91Z2guIApZZWFoLCB0aGlzIHdob2xlIHRoaW5nIGlzIGNyYXp5LiBUaGUgZmxvb3Igc2hvdWxkbiBldmVuIGJlIGF0IHRoZSB0YWJsZSB0byBpbnRlcmFjdCB3aXRoIHBsYXllcnMgdW5sZXNzIHRoZXkgYmVlbiBzcGVjaWZpY2FsbHkgY2FsbGVkIG92ZXIgZm9yIGNsb2NrIG9yIGEgcnVsaW5nLiBCdXQgdGhlbiAiZW5mb3JjaW5nIiBydWxlcyB0aGF0IGVpdGhlciBkb24gZXhpc3Qgb3IgYXJlIG9ubHkgdXNlZCBieSBzdGlja2xlcnMgaW4gb3V0bGllciBzcG90cyAobm8gdGFsa2luZywgd2hpY2ggaXMgdXN1YWxseSBub3QgYSBydWxlIGluIEhVIHBsYXksIGFuZCBzaG93aW5nIGJvdGggaGFuZHMgaW4gYW4gYWxsIGluIHNwb3QsIHdoaWNoIGlzIHVzdWFsbHkgbm90IGEgcnVsZSBmb3IgY2FzaCkuIApJIGp1c3Qgd2VudCBhbG9uZyB3aXRoIHRoZSBvcmRlcnMgYW5kIGhvcGVkIHRoYXQgZXZlcnl0aGluZyB3b3VsZCB3b3JrIG91dCBmb3IgbWUsIGJ1dCBhZnRlciBhbGwgdGhhdCBoYXBwZW5lZDsgeW91IGtub3cgd2hhdCBJIGxlYXJuZWQ/IEl0IG5vdCBhYm91dCBoYXRpbmcgdGhlIGd1eSBvbiB0aGUgb3RoZXIgc2lkZSBiZWNhdXNlIHNvbWVvbmUgdG9sZCB5b3UgdG8sIEkgbWVhbiwgeW91IHNob3VsZCBoYXRlIHNvbWVvbmUgYmVjYXVzZSB0aGV5IGFuIGFzc2hvbGUsIG9yIGEgcGVydmVydCwgb3Igc25vYiwgb3IgdGhleSBsYXp5LCBvciBhcnJvZ2FudCBvciBhbiBpZGlvdCBvciBhIGtub3cgaXQgYWxsLCB0aG9zZSBhcmUgcmVhc29ucyB0byBkaXNsaWtlIHNvbWVib2R5LCB5b3UgZG9uIGhhdGUgYSBwZXJzb24gYmVjYXVzZSBzb21lb25lIHRvbGQgeW91IHRvLCB5b3UgaGF2ZSB0byBsZWFybiB0byBkZXNwaXNlIHBlb3BsZSBvbiBhIHBlcnNvbmFsIGxldmVsLCBub3QgYmVjYXVzZSB0aGV5IHJlZCwgb3IgYmVjYXVzZSB0aGV5IGJsdWUsIGJ1dCBiZWNhdXNlIHlvdSBrbm93IHRoZW07IGFuZCB5b3Ugc2VlIHRoZW0gZXZlcnkgc2luZ2xlIGRheSBhbmQgeW91IGNhbiBzdGFuZCB0aGVtIGJlY2F1c2UgdGhleSBhIGNvbXBsZXRlIGFuZCB0b3RhbCBmdWNraW5nIGRvdWNoZSBiYWcuLiAKSW4gMTk0OCwgdGhlIFBhbGVzdGluaWFucyByZWplY3RlZCB0aGUgUGFydGl0aW9uIFBsYW4uIApUaGUgbWFya2V0IGlzbiAiZnJlZSIgZXZlbiBpbiB0aGUgYmVzdCBvZiBjb25kaXRpb25zIGFuZCB1bnRpbCB3ZSBhZ3JlZSB0aGF0IGFsbCBwcm9maXQgbWFraW5nIG11c3QgY29uc2lkZXIgYWxsIHRoZSBjb3N0cyAgaHVtYW4sIGVjb2xvZ2ljYWwsIGV0Yy4gIGFuZCB0aGF0IHRoZSBwb2ludCBvZiBidXNpbmVzcyBzaG91bGRuIGJlIHByb2ZpdCBidXQgcHJvZHVjdHMgIG5lY2Vzc2FyeSwgZWNvbG9naWNhbGx5IHNvdW5kLCBwcm9kdWNlZCBhdCBhIGxpdmFibGUgd2FnZSBpbiBjbGVhbiBhbmQgc2FmZSBjb25kaXRpb25zIHByb2R1Y3RzICB0aGVuIHdlIGNhbm5vdCByZWZvcm0gdGhlIHN5c3RlbS4uIApIYXZpbmcgcmVhZCBKdXN0IEtpZHMgKFNtaXRoJ3MgdGVsbGluZyBvZiB0aGVpciBzdG9yeSksIGl0J3MgaW1wb3NzaWJsZSBub3QgdG8gZHJhdyBjb21wYXJpc29ucyBiZXR3ZWVuIHRoZSB0d28uIFNtaXRoJ3MgYm9vayBpcyBhbiBhdXRvYmlvZ3JhcGhpY2FsIHdvcms7IHRoZSBmaWxtIGlzIGEgY29sb3IgYnkgbnVtYmVycyB0YWxsIHRhbGUuIApIZSB0aG9yb3VnaGx5IGVuam95ZWQgYSBnb29kIGdhbWUgb2YgZ29sZiB3aXRoIGhpcyBmcmllbmRzLiAKWW91IGtub3csIG91ciBidWlsZGluZ3MgbWFkZSBhIFUgc2hhcGUgYXJvdW5kIHRoZSBwYXJraW5nIGxvdCBhbmQgSSB3YXMgMm5kIGZyb20gdGhlIGluc2lkZSBjb3JuZXIuIFRoZSBuZWlnaGJvciBvbiB0aGUgbmV4dCBidWlsZGluZyBvbiB0aGUgY29ybmVyIHVuaXQgd2VyZSBhbHNvIGJsYWNrIGJ1dCBhbHdheXMgc28gcXVpZXQgdGhhdCBpIGFsbW9zdCBmb3Jnb3QgYWJvdXQgaGltLiBCdXQgaGUgd2FzIGluc2FuZWx5IGhlbHBmdWwgd2hlbiBpIG1vdmVkIGluIG9uIGluZm8gYWJvdXQgdGhlIG5laWdoYm9yaG9vZCBhbmQgdGhlIGJlc3QgcGxhY2UgdG8gd2FsayBteSBkb2cgYW5kIHN1Y2guLiAKT24gdGhlIG90aGVyIGhhbmQuIFJlYWRpbmcgYSBmZW1pbmlzdCBvciBmZW1hbGUgcHJpbWF0b2xvZ2lzdCBhcHByb2FjaCB0byB0aGlzIHN1YmplY3QgaXMgdmVyeSBkaWZmZXJlbnQuIApXaGVuIEkgc3RhcnRlZCwgYXBwcyBsaWtlIFRpbmRlciB3ZXJlIHN0YXJ0aW5nIHRvIGdldCBwb3B1bGFyLCBidXQgSSBkaWRuJ3Qgd2FudCB0byB3YWl0IHRvIG1lZXQgdXAgd2l0aCBhIGdpcmwsIGdvIG9uIGEgZGF0ZSBhbmQgd29vIGhlci4gSSBqdXN0IHdhbnRlZCB0byBnZXQgdG8gdGhlIHNleC4uIApTaGUgaGFzbnQgYmVlbiAncGVyZmVjdGx5JyBoYXBweSBhYm91dCB0aGluZ3MgZm9yIGEgZmV3IHllYXJzLiBTaGUganVzdCB0aG91Z2h0IGl0IHdhcyBhZ2UgY3JlZXBpbmcgdXAuIApUaGVyZSBhcmUgb3RoZXIgZmFjdG9ycywgYXMgd2VsbCwgaW5jbHVkaW5nIHRoZSBwcmVzZW5jZSBvciBhYnNlbmNlIG9mIGxpdmVyIGRpc2Vhc2UsIGFuZCBtYW55IG90aGVycy4gClRoZXNlIHN0dWRlbnRzIGFyZSBjaGFsbGVuZ2VkIHRvIGFkZHJlc3MgcmVhbCB3b3JsZCBidXNpbmVzcyBhbmQgZWNvbm9taWMgaXNzdWVzIGluIHRoZWlyIG93biBlbnRyZXByZW5ldXJpYWwgdmVudHVyZXMgYW5kIGluIHRoZWlyIGNvbW11bml0aWVzLiAKSW4gc3Vic2VxdWVudCBwbGF5dGhyb3VnaHMgSSBoYXZlIHByaW9yaXRpemVkIHRoZSBqdW1wIGpldCB1cGdyYWRlIG9uIHRoZSBzdWl0LCB3aGljaCBtYWtlcyBhbGwgb2YgdGhlIGRlZXAgam91cm5leXMgbXVjaCBtb3JlIG1hbmFnZWFibGUgd2l0aG91dCBiZWluZyBPUC4KRWFjaCBjaGFyYWN0ZXIgaXMgY29tcGxldGVseSByZWxhdGFibGUgdG8gc29tZW9uZSwgYW5kIHdhdGNoaW5nIHRoZW0gb3ZlcmNvbWUgdGhlaXIgZmxhd3MsIG9yIGxlYXJuIHRvIGhvdyB0byBkZWFsIHdpdGggdGhlbSB3aGVuIHRoZXkgYmVjb21lIGFuIGlzc3VlLCBpcyBsaWtlbHkgdG8gY29tcGVsIHRoZSBhdWRpZW5jZSB0byBiZSBpbnRyb3NwZWN0aXZlLiBSb2JpbiBuZWVkcyB0byBsZWFybiB0byBiZSB2dWxuZXJhYmxlIGFuZCBkZXBlbmQgb24gcGVvcGxlIGluIGEgaGVhbHRoeSB3YXksIExpbHkgYW5kIE1hcnNoYWxsIHNob3djYXNlIHRoZSBzdHJ1Z2dsZXMgb2YgZmluZGluZyAidGhlIG9uZSIgc28geW91bmcgdGhhdCB5b3UgaGF2ZW4ndCBmb3VuZCB5b3Vyc2VsZiB5ZXQsIGFuZCBCYXJuZXkgaXMgZXZlcnl0aGluZyB3cm9uZyB3aXRoIGhvb2sgdXAgY3VsdHVyZS4gSSB3aXNoIFRlZCBoYWQgbGV0IGdvIG9mIFJvYmluLCBhbmQgUm9iaW4gYW5kIEJhcm5leSBoYWQgc3RheWVkIHRvZ2V0aGVyLiAKQW4gZWZmb3J0IHRvIGFsd2F5cyByYWlzZSBtb25leSBmb3IgY2hhcml0aWVzLCBpZiBkaWZmZXJlbnQgZXZlbnRzIGFyZSBhYmxlIHRvIHVzZSB0aGF0IG9ubGluZSBzdHJlYW0gYXMgd2VsbCwgdGhleSB3aWxsIGhvcGVmdWxseSBzZWUgYSBiaWdnZXIgcmV0dXJuIHNpbWlsYXIgdG8gd2hhdCBpcyBoYXBwZW5pbmcgaW4gb3RoZXIgcHJvdmluY2VzLiBUaGUgTG9uZG9uIEtuaWdodHMgQWx1bW5pIEZvdW5kYXRpb24gcnVucyB0aGUgZHJhd3MgZHVyaW5nIHRoZSB0ZWFtIGdhbWVzLCB3aXRoIHJldmVudWVzIGdvaW5nIHRvIHN1cHBvcnQgb3JnYW5pemF0aW9ucyBhY3Jvc3MgdGhlIGNpdHkuIEJ1dCBhbGwgdGlja2V0cyBhcmUgYm91Z2h0IGF0IHRoZSBhcmVuYSBkdXJpbmcgdGhlIGdhbWUuLiAKUGxlYXNlIGFsbG93IG1lIHRoaXMgb3Bwb3J0dW5pdHkgdG8gdGhhbmsgeW91IGZvciBsb29raW5nIGF0IG15IHBvc3RpbmcgYW5kIGNvbWluZyB0byB0aGlzIHNpdGUuIApXaGF0J3MgZHJhc3RpY2FsbHkgaW4gb2ZmaWNlIGJ1aWxkaW5ncyBhY3Jvc3MgY2FuJ3QgYmUgZml4ZWQgYnkgdXNpbmcgSFIgc29mdHdhcmUgcGFja2FnZXMuQWxsIHlvdXIgZW50aXJlIGZhbWlseSBuZWVkIGlzIGp1c3QgdG8gcmVyZWFkIHRoZSB5b3VyIGNoaWxkJ3Mgc3RvcnksIEFsbCBHb29zZSB0aGUgTGFpZCB5b3Ugc2VlLCB0aGUgR29sZGVuIEVnZyBjZWxsLiBSZW1lbWJlciB0aGF0IGNhbiBzdG9yeSB0aGUgc2VsZmlzaCBmYXJtZXIgd2hvIHdhbnRlZCBtb3JlIHRoYW4gb25lIGdvbGRlbiBvdnVtIGVhY2ggZXZlbmluZz8gQnkgZ2VuZXJhbGx5IHN0b3J5J3MgZW5kLCBoZSBzdWZmZXJlZCBraWxsZWQgd2hpY2ggdGhlIGNoZWFwIGdvbGRlbiBnb29zZSBzbmVha2VycyBhcyB3YXMgbGVmdCBvdmVyIHdpdGggbid0IGFueSBnb2xkZW4gZWdncyBhdCBqdXN0LlRoZSB3aWxkIHBhcnQgaXMgY29uc2lkZXJlZCBkb2luZyB0aGF0IGl0IHdpdGggcGlsZmVyZWQgbW9uZXkgd2hlbiB5b3UgY29uc2lkZXIgdGhhdCB0aGUgZXhwZW5zZSBvZiBsZXRkb3duIGlzIG1hbnkgaGlnaGVyLiAKV2lsbCBiZSB0aGUgYmlnZ2VzdCBhbmQgYmVzdCBzbyBmYXIsIHNhaWQgRGFuIE9saXZlciwgc2VjcmV0YXJ5IG9mIHRoZSBQYXRyaW90cyBNb3RvcmN5Y2xlIENsdWIgVXRhaCBDaGFwdGVyIElWLiB3YW50IGV2ZXJ5b25lIGluIHRoZSBjb21tdW5pdHkgdG8gY29tZSBhbmQgc3VwcG9ydCB0aGlzIGdyZWF0IGNhdXNlIHdoZXRoZXIgdGhleSByaWRlIGEgbW90b3JjeWNsZSBvciBub3QuIFBlb3BsZSBhcmUgd2VsY29tZSB0byBkbyB0aGUgcG9rZXIgcnVuIGluIHRoZWlyIGNhcnMgYXMgd2VsbC4gYXJlICQyIGFuZCBjYW4gYmUgcHVyY2hhc2VkIGJ5IGVtYWlsb3IgYnkgY2FsbGluZyA0MzUgNjMzIDE2OTkuCkhpZGRlbnRvZnVEYWlzeSAgIE1hbHRlc2UgU2hpaCBUenUgTWl4ClBpZXJyZSBBLiBSaWZmYXJkIGVuIGRvbm5lIGxhIGRmaW5pdGlvbiBzdWl2YW50ZTogRXNwYWNlIHN5bWJvbGlxdWUgZCBzaXR1IG1hY3Jvc2NvcGlxdWVtZW50IGRhbnMgbCBbaGF1dGVzIHNwaHJlc10gZXQgbWljcm9jb3NtaXF1ZW1lbnQgZGFucyBsZSB2ZW50cmljdWxlIGdhdWNoZSBkdSBjdXIsIGVzcGFjZSBvIHMgdG91dGVzIGxlcyBwYXJvbGVzLCBhY3Rpb25zLCBwZW5zZXMgZGUgbCB0b3VzIGxlcyB0cmVzIGV0IHZuZW1lbnRzIGR1IG1vbmRlLiBDZXQgZXNwYWNlLCBjZSBtaXJvaXIgbWFnaXF1ZSBlc3QgbHUgZGVzIGluaXRpcy4KQSBzbG90IG1hY2hpbmUgaXMgYSBtYWNoaW5lIG1hZGUgZm9yIGdhbWJsaW5nIHdoaWNoIG1ha2VzIGEgd2hlZWwgYXR0YWNoZWQgdG8gaXQgcm90YXRlIHdoZW5ldmVyIGEgYnV0dG9uIGFzc29jaWF0ZWQgdG8gaXQgaXMgcHJlc3NlZC4gClRoaXMgcGFuZWwgb2Ygc3RhZmYgbG9va3MgZm9yIHN0dWRlbnRzIHdobyBoYXZlIHRob3VnaHRmdWxseSByZWZsZWN0ZWQgb24gdGhlaXIgZXhwZXJpZW5jZXMgYW5kIHBoaWxvc29waHkgcmVsYXRpbmcgdG8gd2hhdCBpdCBtZWFucyB0byBiZSBhIGxlYWRlciB0aHJvdWdoIGNvbW11bml0eSBzZXJ2aWNlLiBUaGUgQXdhcmQgaXMgYWRtaW5pc3RyYXRpdmVseSBydW4gb3V0IG9mIHRoZSBPZmZpY2Ugb2YgdGhlIERlYW4gb2YgU3R1ZGVudHMuLiAKSW50cmFtdXNjdWxhciBlbGVjdHJvZGVzIHdlcmUgaW5zZXJ0ZWQgaW4gZGVlcCBzdXBlcmZpY2lhbCBNdWx0aWZpZHVzIGFuZCBzdXJmYWNlIGVsZWN0cm9kZXMgd2VyZSBwbGFjZWQgb3ZlciB0IGRlbHRvaWRzIHRvIHJlY29yZCBFTUcgYWN0aXZpdHkgZHVyaW5nIHJhcGlkIGFybSBmbGV4aW9uIGV4dGVuc2lvbiB0byBjb21wYXJlIHQgb25zZXQgb2Ygc2hvcnQgbG9uZyBNdWx0aWZpZHVzIGZpYmVycyByZWxhdGl2ZSB0byB0IGRlbHRvaWRzLgpOb3Qgb25seSBhcmUgeW91IGFibGUgdG8gcHVyY2hhc2UgdGhlc2UgdHlwZXMgb2YgY2FyZHMgb25saW5lIGF0IHN1Y2ggcmV0YWlsZXJzLCBidXQgdGhlcmUgYXJlIGxpa2VseSBtYW55IGxvY2FsIHJldGFpbGVycyBpbiB5b3VyIGxvY2FsIGNvbW11bml0eSB0aGF0IGZvY3VzIG9uIHNlbGxpbmcgc3VjaCBjYXJkcy4gCkFzcGVuIFRpbWVzIFdlZWtseSBCb29rIFJldmlldwpEZXBlbmRzIGhvdyBoZSBicmluZ3MgaXQgdXAuIAo4LiBQb2tlciwgdGhlIGJ1bGsgb2Ygd2hhdCBnb2VzIG9uIGlzIHdhdGNoaW5nLiBBbiBleHBlcmllbmNlZCBwbGF5ZXIgd2lsbCBjaG9vc2UgdG8gcGxheSBvbmx5IGFib3V0IDIwJSBvZiB0aGUgaGFuZHMgdGhleSBhcmUgZGVhbHQsIGZvcmZlaXRpbmcgdGhlIG90aGVyIDgwJSBvZiB0aGUgaGFuZHMgYmVmb3JlIGV2ZW4gZ2V0dGluZyBwYXN0IHRoZSBmaXJzdCByb3VuZCBvZiBiZXR0aW5nLiAKQnV0IHdlIGRvbiBjYXJlIGFib3V0IHRoZW0uIApTb21lIG9mIHRoZSBjb25kaXRpb25zIHRyZWF0ZWQgYnkgcGVkaWF0cmljIHR1aSBuYSwgb3IgbWFzc2FnZSwgYXJlIGRpYXJyaGVhLCB2b21pdGluZywgcG9vciBhcHBldGl0ZSwgY29tbW9uIGNvbGQsIGZldmVyLCBiZWQgd2V0dGluZywgYW5kIGNyeWluZyBhdCBuaWdodC4gCkkgaW5jbGluZWQgdG8ga2VlcCBwbGF5aW5nIG9uIHRoZSBsYXp5IHNpZGUsIGFzIGl0IGhhcyBlbmFibGVkIG1lIHRvIHByb2R1Y2UgYSBwcmV0dHkgbmljZSBzdHJlYW0gb2YgcmVzdWx0cyBvdmVyIHRpbWUgdGhhdCBJIG5ldmVyIHdvdWxkIGhhdmUgY29uc2lkZXJlZCBpZiBJIHdhcyBzdGFuZGluZyBvbiB0aGUgb3RoZXIgc2lkZSBvZiB0aGUgZGViYXRlLi4gCk5vdCBvbmx5IGRvZXMgdGhlIEludGVybmV0IGVuYWJsZSB5b3UgdG8gcGxheSB2YXJpb3VzIGV4Y2l0aW5nIHZlcnNpb25zIG9mIGJpbmdvLCByb3VsZXR0ZSwgc2xvdCwgYW5kIGNyYXAgYnV0IGFsc28gZmFjaWxpdGF0ZXMgaW50ZXJhY3Rpb24gYWNyb3NzIHRoZSBjeWJlciB3b3JsZC4gVGhlIGNoYXQgcm9vbXMgb2ZmZXIgZ3JlYXQgbWVkaXVtIHRvIHRyYW5zZmVyIGluZm9ybWF0aW9uIGFuZCBlbmhhbmNlIHRoZSBleHBlcnRpc2Ugb2YgdGhlIHBsYXllcnMuIEludGVybmV0IGNhc2lubyBzaXRlcyBhbGxvdyB5b3UgdG8gcGxheSBjYXNpbm8gZ2FtZXMgb3IgZ2FtYmxpbmcgb24gdGhlIHdlYi4uIApIYXZpbmcgNSBtaWxsaW9uIHRvbiB3YXJzaGlwcyBmbG9hdGluZyBpbiBhdG1vc3BoZXJlIGJlZm9yZSB3YXJwaW5nIDEwLjAwMCBsaWdodHllYXJzIGF3YXkgaW4gYSBtYXR0ZXIgb2YgaG91cnMgaXMgYWxzbyBub3QgeWV0IGZlYXNpYmxlIHRvIHVzLiBXZSByZWFsbHkgaGF2ZSBubyBpZGVhIGFib3V0IHRoZSBsaW1pdGF0aW9ucyBvZiBTdGFyIFdhcnMgc2NpZW5jZS4gSGF2ZSB5b3Ugc2VlbiBwcm9zdGhldGljcyBtb3ZlPyBWYWRlciBpcyBzdGlsbCBhIGZhaXIgYml0IG1vcmUgYWdpbGUgdGhhbiB0aGF0LCBidXQgcGVyaGFwcyB0aGF0IGFzIGdvb2QgYXMgaXQgZ2V0cywgd2hpbGUgdGhlcmUgbWlnaHQgYmUgbm8gbGltaXQgb24gZGlyZWN0IGJyYWluIGludGVncmF0aW9uLiAKWWVzLiBBcHBhcmVudGx5LCBwZW9wbGUgd2l0aCBoaWdoIGZyZXF1ZW5jeSBicmFpbndhdmVzIGNhbiB0ZWxlcGF0aGljYWxseSBjbyBkcmVhbS4gQWxzbywgaSd2ZSBoZWFyZCB0aGF0IGlkZW50aWNhbCB0d2lucyBoYXZlIHZlcnkgc2ltaWxhciBicmFpbndhdmVzIGFuZCBzbyBjYW4gb2Z0ZW4gJ3NoYXJlJyBkcmVhbXMuIC4KT3RoZXIgZ3V5IHNheXMsICJMZXQga2VlcCBwbGF5aW5nIHRoZW4sIGl0IGJlIGluIG15IGFjY291bnQgc29vbi4iClNvY2lhbGx5IGNvbnNjaW91cyBsaWJlcmFscyBtYXkgd3JpbmtsZSB0aGVpciBub3NlcyBhdCB0aGUgdmVyeSBpZGVhIG9mIG1vdmluZyB0byBUZW5uZXNzZWUgICB3aGVyZSBEYXZ5IENyb2NrZXR0IHdhcyBib3JuIG9uIGEgbW91bnRhaW50b3AgICBidXQgQmlnIEFwcGxlIGRlbml6ZW5zIHBheSB0aGUgaGlnaGVzdCB0YXhlcyBpbiB0aGUgbmF0aW9uIGFuZCBmYWNlIGV2ZXIgcmlzaW5nIGNvc3RzLiBTbywgdGhvc2Ugd2hvIHdvcnJ5IGFib3V0IHRoZWlyIGNvbXBhbnkncyBib3R0b20gbGluZSBnZXQgaXQuIApGaW5kIGEgYm9hcmQgZ2FtZSB0aGUgdHdvIG9mIHlvdSBsaWtlIHRvIHBsYXkgdG9nZXRoZXIgICBpdCBoZWxwcyBpZiBpdCBoYXMgYSB0aGVtZSB5b3UgYm90aCBvciBleHBhbnNpb25zIHRoYXQgbWFrZSBpdCBhbiBvbmdvaW5nIHRoaW5nLiBNeSBib3lmcmllbmQgYW5kIEkgbG92ZSBwbGF5aW5nIHRoZSBBcmtoYW0gSG9ycm9yIGxpdmluZyBjYXJkIGdhbWUgdG9nZXRoZXIgYW5kIGl0IGJlY29tZSBhIGNvbnN0YW50IGFjdGl2aXR5IHdlIGNhbiB0dXJuIHRvLiBXZSBoYXZlIHlldCB0byByZXBsYXkgYSBzY2VuYXJpbyBiZWNhdXNlIG5ldyBjaGFwdGVycyB0byB0aGUgc3Rvcnkga2VlcCBjb21pbmcgb3V0LgpJIGFncmVlIHRoYXQgcmVwbHlpbmcgYmFjayBhdCB0aGlzIHBvaW50IHdvdWxkIG9ubHkgZW5jb3VyYWdlIHlvdXIgbW90aGVyIHNpbmNlIGl0IG1lYW5zIHRoYXQgaWYgc2hlIGhhcmFzc2VzIHlvdSBlbm91Z2gsIHlvdSByZXBseSwgdGh1cyByZXdhcmRpbmcgaGVyLgpNb3VudGFpbiByZWxpZXMgdXBvbiBoaWdobHkgcXVhbGlmaWVkIHByb2Zlc3Npb25hbHMgdG8gZGVzaWduIGFuZCBpbXBsZW1lbnQgc29sdXRpb25zIHRoYXQgYXJlIGVmZmVjdGl2ZSBhbmQgY29tcGxpYW50LCBpdCBzYWlkLiBBbiBlbmdpbmVlcmluZyBhbmQgaGFiaXRhdCBwZXJzcGVjdGl2ZSB0aGUgU3Rld2FydCBTbG91Z2ggY3Jvc3NpbmcgaXMgZnVuY3Rpb25pbmcgYXMgZGVzaWduZWQuIApJIGxpa2UgdGhlIGZyYW1ld29yayAgIGFkYXB0aW5nIGhvdHRlciBjb2xkZXIgaXMgY2xldmVyLCBhbmQgaW4gbWFueSBnYW1lcyB3b3VsZCBoYXZlIGEgc3VwZXJuYXR1cmFsIHJhdGlvbmFsaXphdGlvbi4KVGhlIGJvb3N0IGV4dGVuZHMgYmV5b25kIGp1c3QgdGhlIFhQIGFuZCBnb2xkIGluY3JlYXNlcy4gCkRhaXN5dGF0IHUKNyB5ZWFycyBhZ28gSSB3YW50ZWQgdGhlIGNoZWFwZXN0IGNhdCBldmVyLiBBbGwgb2YgdGhlbSB3ZXJlIHRvbyBleHBlbnNpdmUgYXMgYSBjb2xsZWdlIHN0dWRlbnQuIApNZWRpY2luZSBhdCB0aGlzIHRpbWUgaGFkIGEgbWlhc21pYyB0aGVvcnkgb2YgZGlzZWFzZSwgd2hpY2ggc3VnZ2VzdGVkIHRoYXQgZGlzZWFzZSB3YXMgY2F1c2VkIGJ5IGJhZCBnYXNlcyB0aGF0IGdvdCB0cmFwcGVkIGluIGNyYW1wZWQgc3BhY2VzIGxpa2UgbGl0dGxlIHN0cmVldHMpLiAKRGVhbGVycywgd2hvIHdvcmsgZm9yIHRoZSBjYXJkcm9vbSwgaGF2ZSBkb2xlZCBvdXQgdGhlIGNoaXBzIHRvIHRoZSBvdGhlciBwbGF5ZXJzIGF0IHRoZSB0YWJsZS4gCkFsc28sIEFkYW0gd29yayBvbiB0aGUgUG9saXRpY3Mgb2YgTWVhdCBoZWxwIGhpZ2hsaWdodCBzb21lIG9mIHRoZSBjdWx0dXJhbCB2YWx1ZXMgYXJvdW5kIG1lYXQuIApZb3UgZG9uIHdhbnQgdG8gYmUgaW4gc28gbXVjaCBwYWluIHRoYXQgaXQgaXMgY291bnRlcmFjdGluZyB0aGUgcmVsYXhpbmcgYmVuZWZpdHMgb2YgdGhlIG1hc3NhZ2UsIGFuZCB0byBtZSAicmVhbGx5IGh1cnQiIGFuZCAic2VyaW91c2x5IGJydWlzZWQiIHNvdW5kcyBsaWtlIGl0IHdhcyBwcm9iYWJseSB0b28gbXVjaC4gCldoYXQgZGlmZmVyZW5jZSBkb2VzIGl0IG1ha2Ugd2hhdCBwZW9wbGUgdGhpbms/IFdoeSBzaG91bGQgdGhhdCBiZSB0aGUgZHJpdmVyIGJlaGluZCB3aGF0IHRoZSBpZGVhbCBwb2xpY3kgb3IgbWFrZXMgb25lIG90aGVyd2lzZSBwcml2aWxlZ2VkIHBlcnNvbiAoaGFzIGFjY2VzcyB0byBoaWdoZXIgZWR1Y2F0aW9uIGF0IGFsbCkgc29tZWhvdyBub3cuIApCb3VycXVlIG5pZ2h0Y2x1YiBkZWFsIGNhbWUgd2l0aCBhICQzMDAsMDAwIGRlYnQgaW5jdXJyZWQgYnkgdGhlIHByZXZpb3VzIG93bmVycyBidXQgdGhhdCBkaWRuIHN0b3AgaGltIGZyb20gcHVyc3VpbmcgdGhlIG9wcG9ydHVuaXR5LCBoZSBzYXlzLiBXYW50ZWQgJDEwLDAwMCBmb3IgbWUgdG8gdGFrZSBpdCBvbi4gSSB0aG91Z2h0LCBJIDI0LCBsaXZpbmcgaW4gYSBiYXNlbWVudCBhbmQgYWxsIEkgaGF2ZSBpcyBhIGNhciB3b3J0aCAkNTAwLiAKV2hlbiBoZXIgb3duIGZ1bmRzIHJhbiBsb3csIEhhcnJvZCBzaW1wbHkgd2l0aGRyZXcgbW9uZXkgZnJvbSB0aGUgdHJ1c3RzLCB0aGVuIGFsdGVyZWQgdGhlIGJvb2tzIHNvIHRoZSBhY2NvdW50cyBhcHBlYXJlZCBiYWxhbmNlZCBhdCB0aGUgZW5kIG9mIHRoZSBtb250aC4gSXQgd2FzIGFuIGVsYWJvcmF0ZSBzY2hlbWUgdGhhdCBwbGF5ZWQgb3V0IGZvciB0aGUgYmVzdCBwYXJ0IG9mIDE4IG1vbnRocywgdW50aWwgSGFycm9kIGZhdGhlciBwaWNrZWQgdXAgdGhlIGlycmVndWxhcml0aWVzIGluIEphbnVhcnkgMjAxMiBhbmQgY2FsbGVkIHRoZSBEZXBhcnRtZW50IG9mIEZhaXIgVHJhZGluZy4gCklsIGVzdCBsIGRlcyBhcmJyZXMgcXVpIGwgbGUgcGx1cyAgZGlyZSB2cmFpLCBjZSBxdWkgbiBwYXMgZCBtYW5xdWVyIGQgcmVtYXJxdSBwYXIgbGVzIHBvcHVsYXRpb25zIHF1aSBwZXVwbGFpZW50IGwgaWwgeSBhIGRlIGNlbGEgZGVzIG1pbGxuYWlyZXMuIApIb3NwaXRhbGl0eSBpbmR1c3RyeSBoYXMgaGlnaCB0dXJub3ZlciBpbiBhIGxvdCBvZiBlbnRyeSBsZXZlbCBqb2JzLiBSb2JvdHMgYXJlIGdvb2QgYXQgZG9pbmcgcmVwZXRpdGl2ZSB0YXNrcyBsaWtlIGZvb2QgcHJlcCwgY2xlYW5pbmcgYW5kIGV2ZW4gZGVsaXZlcnksIHNhaWQgQm93ZW4uIGFscmVhZHkgc2VlaW5nIHNvbWUgbGFyZ2UgaG90ZWxzIHJlcGxhY2UgZnJvbnQgZGVzayBwZXJzb25uZWwgd2l0aCBhdXRvbWF0ZWQga2lvc2tzLiBNYWNoaW5lcyB3aWxsIGJlIHRha2luZyBvdmVyIHRoZXNlIHBvc2l0aW9ucywgd2hpY2ggY291bGQgcHJvZHVjZSBhIG1vcmUgZXJyb3IgZnJlZSBwcm9kdWN0LiBsYWJvciBzaG9ydGFnZXMgcGxheSBhIHJvbGUgaW4gdGhlIGRlbWFuZCBmb3Igcm9ib3RzLCBhbG9uZyB3aXRoIHRoZSBuZWVkIHRvIGNvbW11bmljYXRlIHdpdGggYW4gaW5jcmVhc2luZyBudW1iZXIgb2YgaW50ZXJuYXRpb25hbCB0cmF2ZWxlcnMsIGFjY29yZGluZyB0byB0aGUgc3R1ZHksIGhvc3BpdGFsaXR5IGluZHVzdHJ5OyB0aGUgcm9ib3RzIGFyZSBjb21pbmcuIFJvYm90aWMgaG90ZWwgY2hlY2sgaW4gc3lzdGVtcyB3aWxsIGJlIGFibGUgdG8gcmVzcG9uZCB0byBjb3VudGxlc3MgbGFuZ3VhZ2VzIGFuZCByZWFjdCB0byBjdWx0dXJhbCBkaWZmZXJlbmNlcyBhbmQgZXhwZWN0YXRpb25zLiBTZXZlcmFsIExhcyBWZWdhcyBob3RlbHMgYWxyZWFkeSB1c2Ugcm9ib3RzIHRvIGRlbGl2ZXIgYW1lbml0aWVzIGFuZCBmb29kIGRpcmVjdGx5IHRvIGEgZ3Vlc3Qgcm9vbS4KQW55d2F5LCBzbyBhYm91dCBhbiBob3VyIG9yIHNvIGluLCB0aGlzIGhhbmQgY29tZXMgdXAuIEEgYnVuY2ggb2YgcGVvcGxlIGxpbXAgaW4sIGFuZCB0aGUgZmxvcCBjb21lcyBUOTcuIEEgZ3V5IGJldHMgc21hbGwgYW5kIGdldHMgYSBmZXcgZm9sZHMgYW5kIGEgZmV3IGNhbGxlcnMuClJlYWQgIkFwcGxpY2F0aW9ucyBvZiBOTCBIb2xkIGJ5IE1hdHRoZXcgSmFuZGEuIEl0IGlsbHVzdHJhdGVzIGhvdyB0byBjYWxjdWxhdGUgdGhpcyBjb25zdHJ1Y3RpbmcgcmFuZ2VzLiBSZW1lbWJlciwgcG9rZXIgaGVhZHMgdXAgaXMgYSB6ZXJvIHN1bSBnYW1lIGFuZCBoYXMgImVzc2VudGlhbGx5IiBiZWVuIHNvbHZlZCBieSBtYXRoIGF0IHRoaXMgcG9pbnQuIApWb25zd2lzaGEgIDMxIHBvaW50cyAgc3VibWl0dGVkIDI2IGRheXMgYWdvCkhhdmluZyBiZWVuIGhhcnNobHkgcmVtaW5kZWQgb2YgdGhlIHRydWUgbmF0dXJlIG9mIHJlYWxpdHkgYnkgQWxhYmFtYSBsYXN0IHdlZWssIGxvcXVhY2lvdXMgcXVhcnRlcmJhY2sgQm8gV2FsbGFjZSBhbmQgMyAxIE9sZSBNaXNzLCBoYW5naW5nIGluIGF0IE5vLiAyNCBpbiB0aGUgbmF0aW9uLCB0cmF2ZWwgdG8gQXVidXJuLiBUaGUgUmVicyBjb3VsZCB1c2UgYSBib29zdCBiZWZvcmUgYSBuYXN0eSB0d28gZ2FtZSBPY3RvYmVyIGhvbWUgc3RhbmQgYWdhaW5zdCBUZXhhcyBBIGFuZCBMU1UuLiAKRGVmaW5pdGVseSB3b3J0aCB0aGUgOTkgdGhvdWdoLCBhbmQgdGhhdCB3aXRob3V0IHNtb2tpbmcgaXQgeWV0LiAgMSBwb2ludHMgIHN1Ym1pdHRlZCAxNiBkYXlzIGFnby4gCkkgY291bGRuIGhlbHAgYnV0IGZlZWwgZ3VpbHR5LiBJIHdvbmRlcmVkIHdoYXQgdGhlIHN0b3J5IHdhcyBiZWhpbmQgdGhlc2UgZ2lybHMuIElmIHRoZXkgd2VyZSBpbiBkZWJ0LCBpZiB0aGV5IHdlcmUgYmVpbmcgZm9yY2VkIHRvIGhhdmUgc2V4LiBCdXQgSSBzdGlsbCBsaWtlZCBmdWNraW5nIHRoZW0sIGFuZCBJIGNvdWxkIG5vdCBiZSBib3RoZXJlZCBlbm91Z2ggdG8gc3RvcC4gVGhlbiBzb21ldGhpbmcgYmlnIGhhcHBlbmVkLiBUaGlzIHdhcyBodWdlIG5ld3MgYW5kIHRoZXJlIHdlcmUgc3RvcmllcyBhYm91dCBob3cgaXQgd2FzIGFsbCBmb3JjZWQgc2V4IGxhYm9yLiBJIGNhbGxlZCB0aGUgQkJCSiBnaXJsLiBUaGFuayBnb29kbmVzcywgc2hlIHdhcyBub3QgY2F1Z2h0IGluIHRoZSBtZXNzLiBXZSB3ZW50IG91dCB0byBkaW5uZXIgdGhhdCBkYXkuIEkgYXNrZWQgaGVyIGlmIGdpcmxzIHdlcmUgcmVhbGx5IGJlaW5nIGZvcmNlZCB0byBwcm9zdGl0dXRlIHRoZW1zZWx2ZXMuIEhlciByZXBseSB3YXMsICJUaGF0IGFsbCBidWxsc2hpdC4gVGhleSBhbGwgY2hvb3NlIHRvIGRvIGl0LiIKSSBnbyBjcmF6eSBpZiBpdCBiZWVuIG1vcmUgdGhhbiA0IG1vbnRocyBhbmQgSSBoYXZlbiBlc2NhcGVkIHNvbWV3aGVyZSBmb3IgYXQgbGVhc3QgYSBiaXQuIE9QLCB3aGF0IHlvdSBkZXNjcmliZWQgYXMgdGhhdCBsb3ZlIG9mIGV4cGxvcmluZyBuZXcgY2l0aWVzLCBuZXcgY3VsdHVyZXMsIGZvb2QsIGV4cGVyaWVuY2luZyBob3cgb3RoZXIgaHVtYW5zIHRyeSB0byBsaXZlIHRoZWlyIGxpdmVzIHRoZSBzYW1lIHdheSB3ZSBkbyBidXQgd2l0aCBkaWZmZXJlbnQgcmVzb3VyY2VzLCBpdCBqdXN0LiBJbmRlc2NyaWJhYmxlLiAKSXQgc28gYml6YXJyZSBhbmQgc29tZXRoaW5nIHRoYXQgSSBkb24gdGhpbmsgYW55b25lIHJlYWxpemVzIGFuZCBpcyBkb25lIHN1YmNvbnNjaW91c2x5LiAKTGVmdG9uIENoaW5hIEJ1dHRlciBEaXNoLiBWaW9sZXQgQ2hpbnR6IHBhdHRlcm4uIExpZCBvZiBidXR0ZXIgZGlzaCBpcyBoYW5kcGFpbnRlZCB3aXRoIGJlYXV0aWZ1bCB2aW9sZXRzLiBMaWQgaXMgaW4gZXhjZWxsZW50IGNvbmRpdGlvbi4gVHJheSBoYXMgYSBmZXcgbWlub3IgY2hpcHMgLgpIaXMgcGFyZW50cyBkaXZvcmNlZCB3aGVuIGhlIHdhcyAxNiBhbmQgaGUgbW92ZWQgdG8gQW1hcmlsbG8sIFRleGFzLCB0byBsaXZlIHdpdGggaGlzIGZhdGhlci4gClNhbXN0YWcgbGFnIGVpbiBCcmllZiBkZXIgYWx0ZW4gQmF1Z2Vub3NzZW5zY2hhZnQgaW0gUG9zdGthc3RlbiwgZGF0aWVydCBhdWYgbGV0enRlbiBEb25uZXJzdGFnLCBkYXNzIG1hbiBtb3JnZW4gTmFjaG1pdHRhZyBpbiBkaWUgV29obnVuZyBtc3NlIGZyIEF1Zm5haG1lIHp3ZWNrcyBCYWxrb25wbGFudW5nLgpEaXNuZXkncyBvcmlnaW5hbCBhbGwgc3RvY2sgb2ZmZXIgaW4gRGVjZW1iZXIgd2FzIGZvciAkMjggcGVyIEZveCBzaGFyZS4gVGhhdCBvZmZlciBpcyBub3cgdmFsdWVkIGF0ICQ1Mi42IGJpbGxpb24gYmFzZWQgb24gdGhlIGxhdGVzdCBudW1iZXIgb2Ygb3V0c3RhbmRpbmcgc2hhcmVzIHByb3ZpZGVkIGJ5IEZveC4gCkhlciBmcmF1ZHVsZW50IHJ1biB3YXMgZXZlbnR1YWxseSBoYWx0ZWQgYnkgaGVyIGZhdGhlciwgSmltIEhhcnJvZCwgd2hvIHJlcG9ydGVkIGhpcyBkYXVnaHRlcidzIGNyaW1lcyB0byBGYWlyIFRyYWRpbmcgaW4gZWFybHkgMjAxMi4KSGUgbWlnaHQgdHJ5IGFueXdheXMgICBpZiB5b3Ugc2VydmVkLCBnZXQgYSBsYXd5ZXIgICBidXQgaXQgbGlrZWx5IGhlIGhvcGluZyBmZWFyIG9mIHRoZSBsZWdhbCBzeXN0ZW0gd2lsbCBzY2FyZSB5b3Ugb2ZmLCBpbnN0ZWFkLiAKSGVjayB0aGUgbW9kZWwgeW91IGxpa2UgZG9lc24gZXZlbiBoYXZlIGEgdGFjaG9tZXRlci4gCk5hdHJpdW0sIGRhcyBpbSBTYWx6IGVudGhhbHRlbiBpc3QsIGlzdCBmciBkaWUgQXVmcmVjaHRlcmhhbHR1bmcgd2ljaHRpZ2VyIExlYmVuc2Z1bmt0aW9uZW4gZGVzIG1lbnNjaGxpY2hlbiBPcmdhbmlzbXVzIHVuYmVkaW5ndCBlcmZvcmRlcmxpY2guIDUwJSBkZXMgTmF0cml1bXMgaW4gdW5zZXJlbSBPcmdhbmlzbXVzIGJlZmluZGV0IHNpY2ggaW4gZGVyIGludGVyemVsbHVscmVuIEZsc3NpZ2tlaXQsIDQwJSAgIGluIEtub2NoZW4gdW5kIEtub3JwZWwsIHVuZCB1bmdlZmhyIDEwJSAgIGluIGRlbiBaZWxsZW4uIApXaGVuIEkgd29rZSBpbiB0aGUgaG9zcGl0YWwgaXQgd2FzIHRoZSBuZXh0IGRheSBhbmQgSSB3YXMgaW4gbW9yZSBwYWluIHRoYW4gSSB3aWxsIHByb2JhYmx5IGV4cGVyaWVuY2UgZm9yIHRoZSByZXN0IG9mIG15IGxpZmUgdGhpcyBpcyB0aGUgcGFydCB0aGF0IGlzIHJlbGV2YW50IHRvIHRoaXMgcG9zdC4gMyBkYXlzIGxhdGVyIEkgaGFkIHRvIGhhdmUgc3RhcGxlcyByZW1vdmVkIHNvIHRoZXkgY291bGQgZG8gYW5vdGhlciBza2luIGdyYWZ0IGZyb20gbXkgb3V0ZXIgdGhpZ2guIFB1bGxpbmcgb3V0IHRoZXNlIHN0YXBsZXMgaXMgZnVja2luZyB0ZXJyaWJsZSBhbmQgSSB3b3VsZG4gd2lzaCBpdCBvbiBhbnkgcGVyc29uLgpUaGV5IG9ubHkgcmVjb3JkIHdoYXQgdGhleSBvYnNlcnZlIGFuZCBiYXNlZCBvbiB0aGVpciBvYnNlcnZhdGlvbiwgdGhlcmUgbm8gcmVhc29uIHRvIG5vdCBjb25zaWRlciBBQVZFIGEgZGlhbGVjdCB0aGUgc2FtZSB3YXkgVGV4YXMgRW5nbGlzaCBpcyBhIGRpYWxlY3Qgb3IgQ29ja25leSBvciB3aGF0ZXZlci4uIApSb20sIDIxeW8sIEIgY3VwIG9mIGdvb2Qgc2hhcGUsIGxvbmcgYnJ1bmV0dGUsIHByZXR0eSwgcGV0aXRlLCBwYXNzaW9uYXRlIGtpc3NlciwgYSBtZW1iZXIgb2YgdGVhbSBCZXR0eSwgb25lIHllYXIgYXQgU2hhcmtzLiAKIkplZmZlcnNvbiB2YWkgbW9ycmVyIGVtIGJyZXZlIGUsIGVtIHNlZ3VpZGEsIHZpciB1bWEgcnVuYSBob3JydmVsIGRlIHBlc3NvYXMgZSBhbmltYWlzLCB1bWEgdmV6IHVtIHZhaSB2ZXIgdmluZ2FuYSwgY2VtIHBvZGVyZXMsIHNlZGUsIGZvbWUsIHF1YW5kbyBvIGNvbWV0YSB2YWkgcGFzc2FyLiIgKFNjdWxvIDIsIHF1YWRyYSA2MikgIk8gYW50aSBDcmlzdG8gYmVtIGNlZG8gYW5pcXVpbGFyIHRycywgdmludGUgZSBzZXRlIGFub3MgcXVlIGR1cmFyIHN1YSBndWVycmEuIE9zIGluY3JkdWxvcyBlc3RvIG1vcnRvcywgY2F0aXZvcywgZXhpbGFkb3M7IGNvbSBzYW5ndWUsIGNvcnBvcyBodW1hbm9zLCBndWEgZSB2ZXJtZWxobyBncmFuaXphbSBjb2JyaW5kbyBhIHRlcnJhLiIgKFNjdWxvIDgsIHF1YWRyYSA3NykuIFNpbXBzb24gZG9taW5hbmRvIGEgbm90Y2lhPyBHZW9yZ2UgQnVzaCBlc3QgdGVudGFuZG8gcHJvdm9jYXIgbyBBcG9jYWxpcHNlIGUgY2FwdHVyYSBvIG11bmRvIHBhcmEgbyBjcmlzdGlhbmlzbW8sIHBhcmEgcXVlIGVsZSBwb3NzYSBhdGVuZGVyIGEgSmVzdXMgQ3Jpc3RvIGVtIEplcnVzYWxtICAgZmFsYXIgc29icmUgYWxwaW5pc3RhcyBzb2NpYWlzLiBDb21vIHBvZGVyaWFtIDMgYmlsaGVzIGRlIHBlc3NvYXMgc2VyIHRvIGJyYWlud2FzaGVkIHF1ZSBlbGVzIGFjcmVkaXRhbSBxdWUgZ3VlcnJhIG51Y2xlYXIgZG8gbXVuZG8gMyAgbyBjYW1pbmhvIHBhcmEgYSBwYXogZXRlcm5hIG5hIHRlcnJhIHF1YW5kbyB0b2RvIGNpZW50aXN0YSBzYWJlIHF1ZSAgbyBjYW1pbmhvIHBhcmEgYSBleHRpbm8gZGEgdmlkYSBuYSB0ZXJyYSBwYXJhIHNlbXByZT8gQSBxdWVzdG8gbm8gICJTZXIgcXVlIG5zIGV2b2x1bW9zPyIsIG1hcyAiSXIgcG9kZW1vcyBldm9sdWlyIHBhcmEgdW1hIGVzcGNpZSBwYWNmaWNhIHBhcmEgYWRhcHRhciBhIG5vc3NhIG11ZGFuYSBkZSBjaXJjdW5zdG5jaWFzLCA1MC4wMDAgYm9tYmFzIGRlIDEwMCBtZWdhdG9ucyBudWNsZWFyZXMgbmEgdGVycmEgaG9qZT8iIE9zIGRvaXMgZW0gSGlyb3NoaW1hIGUgTmFnYXNha2kgZXJhbSBmb2dvcyBkZSBhcnRpZmNpbywgNTAgcXVpbG90b25zLiBBY2hvIGtpbG9ieXRlcyBlIG1lZ2FieXRlcy4gTyBtdW5kbyBlc3QgcHJlc3RlcyBhIGV4cGxvZGlyIGUgdG9kbyBtdW5kbyAgZnJlbnRpY28gc29icmUgc3VhIFNFUlAuClRoZSBndXkgYXNrZWQgbWUgdG8gc3BlYWsgdXAgc2V2ZXJhbCB0aW1lcy4gCkluIG1hbnkgY2FzZXMsIHRoZSBjb25maWRlbnRpYWwgZmluYW5jaWFsIHNldHRsZW1lbnRzIGNhbWUgb25seSBhZnRlciBFcHN0ZWluJ3MgYXR0b3JuZXlzIGV4cG9zZWQgZXZlcnkgZGFyayBjb3JuZXIgb2YgdGhlaXIgbGl2ZXMgaW4gYSBzY29yY2hlZCBlYXJ0aCBlZmZvcnQgdG8gcG9ydHJheSB0aGUgZ2lybHMgYXMgZ29sZCBkaWdnZXJzLi4gClRoZXJlIGlzIGEgbG90IEkgZGlkbid0IGdldCBpbnRvIGluIG15IG9yaWdpbmFsIHBvc3QgYmVjYXVzZSBJJ20gZHJhaW5lZCBmcm9tIGRlcHJlc3Npb24gYW5kIHdhc24ndCBleHBlY3RpbmcgYSB3ZWxsIHRob3VnaHQgb3V0IHJlc3BvbnNlIHRvIGEgcG9zdCB3aXRoIHNvbWUgcHJldHR5IHBvb3Igd3JpdGluZy4KVGhlcmUgYXJlIG1vcmUgZ2FsYXhpZXMgb3V0IHRoZXJlIGFyb3VuZCB1cyB0aGFuIHRoZXJlIGFyZSBzdGFycyBpbiB0aGUgTWlsa3kgV2F5LiBMaXRlcmFsbHkuClN1Ym1pc3Npb25zIHdpdGggW2luIGRlcHRoXSBpbiB0aGUgdGl0bGUgaGF2ZSBzdHJpY3RlciBwb3N0IGxlbmd0aCBhbmQgcXVhbGl0eSBndWlkZWxpbmVzCktpZCBQb2tlciB3b3VsZCBlYXJuICQ2Myw5NDAgZm9yIGhpcyAxMXRoIHBsYWNlIGZpbmlzaCBpbiAyMDAxIC4gMTQgeWVhcnMgbGF0ZXI/IEhlIGdldHMgdG8gdGFrZSBob21lICQ1MjYsNzc4IGFzIGEgY29uc29sYXRpb24gcHJpemUgYXMgcG9rZXIgZmFucyBhcmUgYWxsIGxlZnQgd29uZGVyaW5nIHdoYXQgaWYgTmVncmVhbnUgaGFkIG1hZGUgdGhlIE5vdmVtYmVyIE5pbmU/IE9uZSB0aGluZyBpcyBmb3Igc3VyZSwgRVNQTiByYXRpbmdzIHdvdWxkIGhhdmUgYmVlbiB0aHJvdWdoIHRoZSByb29mIGFzIGxpdmUgY292ZXJhZ2Ugb2YgdGhlIGZpbmFsIHRhYmxlYmVnaW5zIG9uIFN1bmRheSwgTm92ZW1iZXIgOCBhdCA4OjMwcG0gRVQuClNoZSB3b3VsZCBub3Qgc2F5IHdoZXRoZXIgdGhlIHdvbWVuIHJlcG9ydGVkIHRoZXNlIGNhc2VzIHRvIHRoZSBkZXBhcnRtZW50IG9yIHBvbGljZSwgY2l0aW5nIGNvbmZpZGVudGlhbGl0eSByZWFzb25zLi4gCkJ1dCB0aGlzIGlzIGp1c3QgYSBmcmVlIGNvbnRlbnQgdXBkYXRlLkl0IHJlYWxseSBpcyBub3QgYW5hbG9nb3VzIHRvIHZpZGVvIGdhbWUgdmlvbGVuY2UgYW5kIHlvdSBjYW4gdGFrZSByZXN1bHRzIG9mIHN0dWRpZXMgZnJvbSBvbmUgYW5kIGFwcGx5IGl0IHRvIHRoZSBvdGhlci4gUGVvcGxlIChzYW5lIG9uZXMpIGRvbiBib290IHVwIENhbGwgb2YgRHV0eSBzZWVraW5nIHRvIHNhdGlzZnkgdGhlaXIgdXJnZSB0byBraWxsIHNvbWVvbmUuIFBlb3BsZSBkbyBzZWFyY2ggb3V0IHBvcm5vZ3JhcGh5IHRvIHNhdGlzZnkgdGhlaXIgc2V4dWFsIHVyZ2VzIGFuZCBkZXNpcmVzLiAKSSBsaWtlIHRoYXQgQmlvV2FyZSBpcyBzbyB0cmFuc3BhcmVudCB3aXRoIHRoZSBkZXZlbG9wbWVudCB0aGlzIHRpbWUsIGRvaW5nIGxpdmVzdHJlYW1zIGFuZCBzaG93aW5nIHRoZSBnYW1lIHRvIHVzLiBJIGRvbiBtaW5kIGlmIHRoZSBnYW1lIGRvZXMgZW5kIHVwIGJlaW5nIGRlbGF5ZWQgYSBmZXcgbW9udGhzLCBhcyBsb25nIGFzIHRoZSByZXN0IG9mIEFudGhlbSBsb29rcyBqdXN0IGFzIGdyZWF0LgpMIGRlIEhlcm5pY290IGV0IGNlbGxlIGQgZXQgTWlsZXMgc29udCBpbnRyZXNzYW50ZXMgIHBsdXMgZCB0aXRyZS4gCkl0IHdhcyBmb3IgYSBtZWRpY2FsIG1hcmlqdWFuYSBwaHlzaWNpYW4gcmVjb21tZW5kYXRpb24sIG9uY2UgSSBnb3QgdGhlIHBhcGVycyBJIGRpZG4ndCBldmVuIGNoZWNrIHVudGlsIEkgZ290IGhvbWUuIFRoZSBjbGluaWMgd2FzIGFscmVhZHkgY2xvc2VkIGZvciB0aGUgd2Vla2VuZCBhbmQgaXQgaXMgc29tZW9uZSdzIGVsc2UncyByZWNvbW1lbmRhdGlvbi4KVGhlIGJlc3QgcGFydCBpcyB0aGF0IHlvdSBjYW4gZXZlbiBwbGF5IHNpdHRpbmcgaW4gdGhlIGNvbWZvcnRzIG9mIHlvdXIgb3duIGhvdXNlIGluIHlvdXIgdmVyeSBvd24gcm9vbSBpdHNlbGYuIApTb21lIHRoaW5ncyB3b3JrIG91dCBqdXN0IGFzIHlvdSBwbGFuLi4gCkV2ZW4gZm9yIGJ1c2luZXNzIHBlb3BsZSBvdXRzaWRlIHRoZSBnYW1ibGluZyBpbmR1c3RyeSwgdGhlIEJvcmdhdGEncyBwb3B1bGFyaXR5IHByb3ZpZGVzIGEgbGVzc29uIGFib3V0IGhvdyB0byBhcHByb2FjaCBhIGJpZywgYm9sZCBwcm9qZWN0LiAiSWYgeW91IGtub3cgYW4gaW5kdXN0cnksIHlvdSBkb24ndCBuZWVkIGEgY29uc3VsdGFudCB0byB0ZWxsIHlvdSB3aGV0aGVyIHRvIGRvIHNvbWV0aGluZywiIEJvdWdobmVyIGV4cGxhaW5zLiAKQSBxdWljayBjYWxjdWxhdGlvbiBzYXlzIEkgaGF2ZSBhIDE2JSBjaGFuY2UgdG8gaGl0IG15IHN0cmFpZ2h0IGlmIEkgZ28gdG8gdGhlIHR1cm4sIGFuZCBhIDMyJSBjaGFuY2UgdG8gd2luIGlmIEkgZ28gdG8gdGhlIHJpdmVyLiAKU21va2luZyBhbmQgRHJlc3MgQ29kZXM6IG5vIG1hdHRlciBpZiB0aGF0IHlvdSBhcmUgYSBzbW9rZXIgb3IgbWF5YmUgYSBub24gc21va2VyLCBhZnRlciB5b3UgYXJlIGdhbWJsaW5nIG9ubGluZSB5b3UgYXJlIGFic29sdXRlbHkgZnJlZSBmcm9tIG9iZXlpbmcgdGhlIGd1aWRlbGluZXMuIFNpbWlsYXIgZ29lcyBmb3IgZHJlc3NpbmcsIGVhdGluZyBhbmQgZHJpbmtpbmc7IHlvdSBtYXkgZWl0aGVyIHNtb2tlIG5vbiBxdWl0IG9yIHN0YXkgd2l0aGluIGEgbm9uIHNtb2tpbmcgZW52aXJvbm1lbnQ7IHB1dCBvbiB5b3VyIHNsb3BwaWVzdCBjbG90aGluZyBvciByZW1haW4gbmFrZWQ7IGVhdCwgZHJpbmssIHRhbGsgYXJvdW5kIHRoZSB0ZWxlcGhvbmUsIHdhdGNoIFRlbGV2aXNpb24sIHdoYXQgZXZlci4gClVuIHN0YWdlIGVuIGRlaG9ycyBkZXMgc2VudGllcnMgYmF0dHVzICBmcnF1ZW50ZXIgcGFyIHRvdXMgbGVzIHBhc3Npb25ucyBkZXMgdHJhaXRlbWVudHMgZGUgbGEgc3BocmUgVXJvZ3luY28hIE5lIHBhcyB2ZW5pciAgY2Ugc3RhZ2UgcG91ciB5IHRyb3V2ZXIgdW4gZW5zZWlnbmVtZW50IGNsYXNzaXF1ZSAsIG1jYW5pcXVlIC4gaWwgZmF1dCBzZSBsYWlzc2VyIHBvcnRlciAuIEMnZXN0IHVuZSB0cmFuc21pc3Npb24gcmFyZSBldCB1bmlxdWUgZW4gb3N0b3BhdGhpZSBxdWkgdG91Y2hlIGF1IHNhdm9pciB0cmUsIHF1aSBzJ2FkcmVzc2UgYXV4IHRhdHMgZCdtZXMgdGlzc3VsYWlyZXMuIApBbHNvLCBpdCBkYW5nZXJvdXMgdG8gc3BlYWsgb3V0IGFnYWluc3QgdGhlIHN0YXR1cyBxdW8sIGFuZCBpbiB0aGlzIGdhbWUgb2YgcG93ZXIsICh3aGljaCBpcyBhbGwgbGlmZSBpcykgd2UgYmUgcmVtaXNzIGlmIHdlIGRpZG4gaWRlbnRpZnkgdGhlIGluaGVyZW50IGRhbmdlcnMgb2Ygc3BlYWtpbmcgb3V0IGFnYWluc3QgZmVtaW5pc20uLiAKVGhlcmUsIHRoZXkgaGF2ZSBhIHdheSBmb3IgeW91IHRvIG1ha2UgaXQgdG8gdGhlIFdvcmxkIFNlcmllcyBmb3IgYXMgbGl0dGxlIGFzICQxLiBJdCB0YWtlcyBzaXggc3RlcHMgYW5kIHdvcmtzIGxpa2UgdGhpczouIAoxMDAwIFBhdWxzb24gVG9waGF0IGFuZCBDYW5lIFBva2VyIENoaXBzIENyaXRpY2FsIE92ZXJ2aWV3CkhpcyB3YXkgb2YgdGhpbmtpbmcgaXMgaW5mZWN0aW91cyBhbmQgaW5oZXJlbnRseSBkZXN0cnVjdGl2ZS4gCiJFdmVuIHdoZW4gSSBoYXZlIGFyZ3VtZW50cyB3aXRoIG15IGh1c2JhbmQgaW4gVGhpbmdzIHRvIENvbWUsIHRvIGtlZXAgdGhpcyBjb25zdGFudCBzbGlnaHQgaGludCBvZiBpcm9ueSBhdm9pZHMgcHV0W3RpbmddIHRvbyBtdWNoIFtvZiBhXSBidXJkZW4gb24gd2hhdCB5b3UgZG8uIEl0J3MgZG9pbmcgYSBzdGVwIGJhY2suIFlvdSBrZWVwIHRoZSBkcmFtYSwgeW91IGtlZXAgdGhlIGh1cnQsIHlvdSBrZWVwIGV2ZXJ5dGhpbmcsIGJ1dCBpdCBiZWNvbWVzIGxpZ2h0ZXIuIi4gCjEwIHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvLiAKWW91IHdpbGwgS05PVyBpbW1lZGlhdGVseSBpZiB5b3UgbWlzcmVhZCB0aGUgc2l0dWF0aW9uIG9mIG5vdC4KT25saW5lIEhvbGRlbSBwb2tlciBpcyBhcyBwb3B1bGFyLCBpZiBub3QgbW9yZSwgYXMgbGFuZCBiYXNlZCBUZXhhcyBIb2xkJ2VtIHBva2VyLiAKSSB3YXMgcmVhbGx5IGhvcGluZyBpdCBoYWQgYWxyZWFkeSBsZWFrZWQgc29tZXdoZXJlIG9ubGluZS4gSSB3b3VsZCBiZSB3YXJ5IGlmIEkgd2FzIG9uZSBvZiB0aGVpciBtb3JlIHRyYWRpdGlvbmFsIGVtcGxveWVlcy4gTm90IHRvIG92ZXJzdGF0ZSB0aGUgInJldm9sdmluZyBkb29yIiBvZiBlbXBsb3llZXMsIGJ1dCB0aGV5IGxvc3QgYSBzaWduaWZpY2FudCBjaHVuayBvZiB0aGVpciBwZXJzb25uZWwgYW5kIHRoZXkgcHVibGljbHkgYWlyZWQgdGhlICJkaXJ0eSBsYXVuZHJ5IiBvZiBvbmUgc3VjaCBsb3N0IGVtcGxveWVlLCBpdCBhIGJpdCB3b3JyeWluZyBmcm9tIHNvbWV0aGluZyBvZiBhIHByb2Zlc3Npb25hbCBzdGFuZHBvaW50IGFib3V0IHlvdXIgcG9zc2libGUgcHJvc3BlY3RzIGFmdGVyIHdvcmtpbmcgd2l0aCB0aGVtLiBJdCBzZWVtcyBsaWtlIGEgZnJhbnRpYyB3b3JrIGVudmlyb25tZW50IHdoZXJlIHlvdSBkb24ga25vdyB3aGF0IGNvbWluZyBuZXh0IG9yIHdoYXQgdG8gZXhwZWN0IGZyb20gdGhlIG9wcG9ydHVuaXRpZXMgQ0MgcHJvdmlkZXMsIGdvb2Qgb3IgaWxsLgogOTIgcG9pbnRzICBzdWJtaXR0ZWQgNCB5ZWFycyBhZ29UaGUgZGlmZmVyZW5jZSBpcyBTY29yc2VzZSBwcm9iYWJseSB3YXRjaGVzIGEgdG9uIG9mIG90aGVyIGRpcmVjdG9yIG1vdmllcy4gVmluY2UgTWNNYWhvbiBoYXMgc2FpZCBtYW55IHRpbWVzIGhlIGRvZXNuIHdhdGNoIG1hbnkgbW92aWVzIG9yIHRlbGV2aXNpb24uIApXYXMgc3VycHJpc2luZ2x5IGVhc3kgdG8gZ2V0IGFuIFViZXIgdG8gdGhlIGdhbWUgd2hpY2ggd2FzIGx1Y2t5LCBhbmQgd2UganVzdCBob3BwZWQgb24gdGhlIGJ1c2VzIGFmdGVyIHRoZSBnYW1lLiBUaGUgc3RhZGl1bSBiZWluZyBzbyBmYXIgYXdheSB3YXMga2luZCBvZiBzdHJhbmdlIGFuZCBhIHBhaW4gdGhvdWdoLiBTb3V0aCBDYXJvbGluYSBmYW5zIHdlcmUgcHJldHR5IGNoaWxsIG92ZXJhbGwsIGJ1dCBpZiBJIGV2ZXIgaGVhciBTYW5kc3Rvcm0gYWdhaW4gaXQgd2lsbCBiZSB0b28gc29vbi4gVGhlIGNvbnN0YW50IHJvb3N0ZXIgY3Jvd2luZyB3YXMgYW5ub3lpbmcgYXMgaGVsbCB0b28uIE92ZXJhbGwgaXQgd2FzIGEgcmVhbGx5IGZ1biB0cmlwLiBKdXN0IHdpc2ggd2UgaGFkIHdvbiA6KApOb29vbywgZXZlcnlvbmUgd2FzIG9yZGVyaW5nIGJ1cmdlcnMsIGZyaWVzLCBjb3JuZG9ncywgY2hpbGlkb2dzLCBldGMsIGV0Yy4gQWZ0ZXIgc2VlaW5nIG15IHNjcmVlbiBtYXggb3V0IGF0IDEwIHBhZ2VzIHdvcnRoIG9mIGZvb2Qgb3JkZXJzIGFuZCBteSB3b3J0aGxlc3MgdHJhc2ggb2YgbWFuYWdlciByZWZ1c2luZyB0byBoZWxwIHRoZSBjb29rIGFyZWEsIEkgc251Y2sgb3V0IG9mIHRoZSBjb29rIGFyZWEsIGdyYWJiZWQgbXkgY2xvdGhlcywgY2hhbmdlZCBvdXQgaW4gdGhlIGJhdGhyb29tIGFuZCBsZWZ0IHRocm91Z2ggdGhlIGJhY2sgZG9vciB0aGVuIGJvb2tlZCBpdCBvbiBmb290IHRvIG15IGhvdXNlIG1ha2luZyBzdXJlIGV2ZXJ5b25lIGF0IGRyaXZlIHRocm91Z2ggc2F3IHRoYXQgSSB3YXMgZXNjYXBpbmcuIAoxLiAKV2FybnMgSHVmYmF1ZXI6ICJNZXhpY28gaXMgbm90IGp1c3QgYSBwdXNob3Zlci4gSSBkb24ndCB0aGluayBpdCBjb3VsZCBzdXJ2aXZlIHBvbGl0aWNhbGx5LiBXaGF0ZXZlciB0aGUgcmV0YWxpYXRpb24gbWlnaHQgY29zdCwgZm9yIHJlYXNvbnMgb2YgbmF0aW9uYWwgcHJpZGUsIE1leGljbyB3aWxsIGRvIGl0LiAKV291bGRuJ3QgbGllIHRvIHlvdSwgbWFuLicgSGlzIG9wcG9uZW50IGhhZCBnb3R0ZW4gY29uZnVzZWQuIApJZiBpdCBkaWQgcmFpbiBhdCBuaWdodCB0aGVuIHdlIHdvdWxkIGp1c3QgZmluZCBhIHB1YmxpYyBwYXJrIHRoYXQgaGFkIGEgcGF2aWxpb24gYW5kIHNsZWVwIGRyeSB1bmRlciB0aGF0LiBXaGVuIHdlIGNvdWxkbiBmaW5kIGEgcGF2aWxpb24gdGhlbiB3ZSBqdXN0IGJvdWdodCBhIGh1Z2UgdGFycCBhdCBhIGhhcmR3YXJlIHN0b3JlIGluIFNhcHBvcm8gYW5kIHdoZW4gaXQgd291bGQgcmFpbiB3ZSB3b3VsZCBzdHJpbmcgaXQgdXAgd2l0aCBwYXJhY29yZCBhbmQgc2xlZXAgdW5kZXIgdGhhdC4gV2UgZXZlbiBzbGVwdCB1bmRlciBhIGJ1bGxldCB0cmFpbiBvdmVycGFzcywgaW4gYSBidXMgc3RvcCwgYW5kIGEgY291cGxlIG9mIG90aGVyIGNyZWF0aXZlIHBsYWNlcyB3aGVuIGl0IHJhaW5lZC4KSSBqdXN0IHByZWZlciBpZiB5IGRvbiBtaXNsZWFkIHBlb3BsZSBvbiByL2Jhc2ViYWxsIHdobyBkb24ga25vdyBtdWNoIGFib3V0IHdyZXN0bGluZyB0aGlua2luZyB0aGF0IGlzIHRoZSBtb3N0IGEgY3Jvd2QgaGFzIGV2ZXIgYm9vZWQsIHRoYXQgYWxsLiAKVGhlY2hpZWZEVUIgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpZb3UgbWF5IGRvIHRoaXMgYnkgcmVhZGluZyBib29rcywgZW5yb2xsaW5nIGluIG1hc3NhZ2Ugc2Nob29scywgb3IgYnkgc3VyZmluZyB0aGUgSW50ZXJuZXQuIApXZSBvdXRsYXdlZCBkcnVncy4gCkNvbnRyYWlyZW1lbnQgIGNlIHF1aSBlc3QgZGl0IGljaSBvdSBsIGV0IG1tZSBtZW50aW9ubiBydWUgQ2xhdXplbCBwYXIgdW5lIHBsYXF1ZSBhcHBvc2Ugc3VyIHVuIGltbWV1YmxlLCBNYXVwYXNzYW50IG4naGFiaXRhaXQgcGFzIGF1IG4xOSBtYWlzIGF1IG4xNy4gSmUgdm91cyBsYWlzc2UgbGUgc29pbiBkZSBsaXJlICBSdWUgQ2xhdXplbCwgdW5lIGVycmV1ciBzdXIgbCdhZHJlc3NlIGRlIEd1eSBkZSBNYXVwYXNzYW50IC4uIApOb3cgY291bnQgaGVhbHRoIGNhcmUsIGZvb2QsIHRyYXZlbCAoZXZlbiBpZiBpdCdzIGJ5IGJ1cyksIGNlbGwgcGhvbmUuIFllYWggaXQncyBub3QgaGFwcGVuaW5nLiBUaGF0J3Mgd2h5IEkgd29yayBmdWxsIHRpbWUsIEknbSBpbiBzY2hvb2wsIEkgcXVhbGlmeSBmb3IgZm9vZCBzdGFtcHMsIEFORCBteSBtb20gaGFzIHRvIHBheSBhbGwgb2YgbXkgcmVudCwgaW5zdXJhbmNlLCBhbmQgcGhvbmUgYmlsbCwgYW5kIGJvdWdodCBtZSBteSBjYXIuIApJIHRoaW5rIG9mIHRoaXMgZWFjaCB0aW1lIEkgcmV2aWV3IGEgaGFuZHMuIFdoZXRoZXIgSSB3aW4gb3IgbG9zZSB0aGUgaGFuZCBJIGxvb2sgdG8gc2VlIGlmIEkgYW0gbWFraW5nIHRoZSByaWdodCBkZWNpc2lvbnMgYXQgdGhlIHRpbWUgdGhlIGluZm9ybWF0aW9uIGlzIHByZXNlbnRlZCB0byBtZS4gCkF0IHRpbWUgb2Ygd3JpdGluZyBpdCdzIHF1aXRlIGEgbmV3IGZvcm1hdCBvZiB0b3VybmFtZW50IGFuZCBJIGFtIHBsZWFzZWQgcGVvcGxlIGFwcGVhciB0byBiZSBhZG9wdGluZyBpdC4gCkkgb2JzZXJ2ZSBldmVyeSBkZXRhaWwgb2YgbXkgYm9keS4gCldoYXQgbGFuZ3VhZ2VzIHVzZSB0aGUgbW9zdCAicyIgc291bmRzPwpCdXQgYWZ0ZXIgRXJuaWUgbGVmdCBOZXcgT3JsZWFucywgdGhpcyB3b21hbiBkZWNpZGVkIHRvIEdvb2dsZSBoaXMgbmFtZS4gIiAiVGhhdCdzIHdoZW4gSSBmb3VuZCBvdXQgaGUgd2FzLCBpbmRlZWQsIGEgcHJvZmVzc2lvbmFsIGdhbWJsZXIuIEFuZCB0aGF0IGhpcyBwYXJlbnRzJyBtdXJkZXIgaGFkIGhhcHBlbmVkIGEgbW9udGggYW5kIGEgaGFsZiBiZWZvcmUsICIgc2hlIHNhaWQuICJBbmQgdGhlIG1vcmUgSSByZWFkLCB0aGUgbW9yZSBJIHJlc2VhcmNoZWQsIGxpdGVyYWxseSwgcGh5c2ljYWxseSwgdGhlIHNpY2tlciBJIGdvdC4gCkFsc28gZm9yIGEgbGl0dGxlIGJpdCBtb3JlIGluZm9ybWF0aW9uLCBhbGwgb2YgdGhlIGVsZXZhdG9yIGZ1bmN0aW9ucyBhcmUgY29udHJvbGxlZCBieSBhIFBMQywgdGhpcyBpbmNsdWRlcyB0aGUgcGxhY2UgdGhlIGVsZXZhdG9yIHN0b3BzLgpPbmUgb2YgdGhlIHRvdWdoIHRoaW5ncyBhYm91dCB0aGlzIHN1YiBpcyBob3cgc3ViamVjdGl2ZSBpdCBpcy4gClRlZW5zIHNoYXJlIGEgbG92ZSBmb3IgYmlvbG9neSBidXQgd2VyZW4gc3VyZSB3aGVyZSB0byBzdGFydCBvciB3aGF0IHRvIGRvIHdpdGggdGhhdCBwYXNzaW9uLiAKSSB3b25kZXIgaWYgc3ViIHNpemUgaGFzIGFueXRoaW5nIHRvIGRvIHdpdGggaXQuLiAKVGhleSB3ZXJlIHJlbGVnYXRlZCB0byB0aGUgZGVlcGVzdCByZWNlc3NlcyBvZiBvdXIgbmF0dXJlIHRvIGJlIGZvcmV2ZXIgZm9yZ290dGVuLCBmb3IgYSBzcGxpdCBzZWNvbmQgb2YgZWxhdGlvbi4gCldpdGhvdXQgQ2xheSwgU2hlbGxpIGxvc3QgYWxsIGhlciBhbWJpdGlvbiBhbmQgbWFyYmxlcy4KVGhhdCdzIGF3ZXNvbWUhIEhlIHNlZW1zIGxpa2UgYSBjb29sIGd1eS4gWW91ciBzdG9yeSBpcyBzaW1pbGFyIHRvIGhvdyBJIGZvdW5kIG91dCBJJ20gcmVsYXRlZCB0byBDaW5keSBDcmF3Zm9yZCwgZXhjZXB0IHRoYXQgdGhlIHNob3cgd2FzIFdobyBEbyBZb3UgVGhpbmsgWW91IEFyZS4gKEJ1dCBpZiB5b3Ugd2F0Y2hlZCBoZXIgZXBpc29kZSwgSSBoYXZlIGEgbG90IG9mIGlzc3VlcyB3aXRoIGhvdyB0aGV5IHBvcnRyYXllZCBvdXIgYW5jZXN0b3IsIFRob21hcyBUcm93YnJpZGdlLiBIZSBsZWZ0IGhpcyBzb25zIHVuZGVyIHRoZSBjYXJlIG9mIGEgc2VydmFudCB0byBnbyBiYWNrIHRvIEVuZ2xhbmQgdG8gc29ydCBvdXQgYWZmYWlycyBhZnRlciBoaXMgd2lmZSBkaWVkLiBJIGRvbid0IGtub3cgdGhlIGV4dGVudCBvZiBoZXIgd2VhbHRoLCBidXQgSSBrbm93IHRoYXQgaGVyIGZhdGhlciBhbmQgZ3JhbmRmYXRoZXIgd2VyZSBtYXlvciBvZiBFc3NleCBbSSBiZWxpZXZlXSBhbmQgVGhvbWFzIGhpbXNlbGYgd2FzIGEgc3VjY2Vzc2Z1bCBtZXJjaGFudC4gVGhhdCB3YXMgYXJvdW5kIHRoZSB0aW1lIHRoZSBFbmdsaXNoIENpdmlsIFdhciBicm9rZSBvdXQgYW5kIGhlIHNlcnZlZCBhcyBhIENhcHRhaW4gaW4gdGhlIFJvdW5kaGVhZCBhcm15LiBBZnRlciB0aGF0LCBJIGFzc3VtZSBoZSB3YXMgdG9vIGlsbCB0byB0cmF2ZWwgb3Igc29tZSBvdGhlciBkaWZmaWN1bHRpZXMgYXJvc2UgdG8gcHJldmVudCBoaW0gZnJvbSB0cmF2ZWxpbmcuIEhlIGRpZG4ndCBqdXN0IGxlYXZlIHRoZW0gYW5kIGJlIGxpa2UsICJsb2wgbGF0ZXIgZGF5ei4iKQpUaGV5IG5ldmVyIHJlYWxseSBzcHJlYWQgYW55dGhpbmcgaGlnaGVyIHN0YWtlcyB0aGFuICQxLzIgYW5kIHRoZWlyIHRvdXJuYW1lbnRzIGFyZSBsb3cgYnV5aW4uIApUaGVuIEkgd2FrZSB1cCB0byB0aGUgc21lbGwgb2YgY3JhY2tsaW5nIC91L01hc3NpdmVHcm93dGg5LiBJdCBpcyBkZWxpY2lvdXMsIGl0IGdvb2QgZm9yIG1lLiBJdCB0aGUgcGVyZmVjdCB3YXkgdG8gc3RhcnQgdGhlIGRheS4gCkZvciBvbmUsIHRoZSBzZXBhcmF0aW9uIGZyb20gRmlhdCBBdXRvIHdhcyBwYWluZnVsIGZvciBHZW5lcmFsIE1vdG9ycy4gVGhlbiwgb3VyIGNyZWRpdG9yIGJhbmtzIGhhZCB0byBjb252ZXJ0IHRoZSBtYW5kYXRvcnkgY29udmVydGlibGUgbG9hbiBhdCBhIHByZW1pdW0sIHdoaWxlLCBvbiB0aGUgb3RoZXIgaGFuZCwgY29udGludWUgdG8gc3VwcG9ydCB0aGUgRmlhdCBncm91cCBpbiBpdHMgcmVzdHJ1Y3R1cmluZy4gQW5kIEVsZWN0cmljaXRlIGRlIEZyYW5jZSBoYWQgdG8gY29tcGxldGUgdGhlIHRyYW5zYWN0aW9uIHRvIGJ1eSBvdXIgSXRhbGVuZXJnaWEgc3Rha2UuCkxhIHZ1ZSBkZSBjZSBWaXNhZ2UsIHlldXggY2xvcywgZW4gbGUgY3VyLCAgbWUsIGxlcyB5ZXV4IHRyZW1ibGVudCBkJ3VuZSBqb2llIHB1cmUuIEF2ZSBkb3V4IEluc3RhbnQuIEplIGRldmllbnMgbCdJbnN0cnVtZW50IGN1cmlldXggZGUgdGEgVmFsc2UsIG1haXMgZW4gcmllbiBjZWxhIG5lIG1lIGRyYW5nZS4KSWYgeW91IGFyZSBhIGdvb2QgcGxheWVyIGFuZCBjYW4gYWRhcHQgdG8gdGhlIG90aGVyIHBsYXllcnMgYW5kIGZpdCBpbiB0byB0aGUgZ2FtZSB5b3UgY2FuIHNlcmlvdXNseSBiZWF0IHRoZXNlIGd1eXMgZm9yIFlFQVJTLiAKVGhlIHN1c3BlY3Qgd2FzIGd1bm5lZCBkb3duLCByZXBvcnRlZGx5IGJ5IGZvcm1lciBGbGludCBQb2xpY2UgQ2hpZWYgQnJhZGZvcmQgQmFya3NkYWxlLCB3aG8gd2FzIHBsYXlpbmcgcG9rZXIgdGhlcmUgYXQgdGhlIHRpbWUuIApBbG9uZyB3aXRoIHRoYXQgdGhlIHN1bSBvZiB0aGUgcHN5Y2hvbG9naWNhbCBwYXJ0cyBkb2VzIG5vdCBlcXVhbCB0aGUgaW5kaXZpZHVhbC5JIG5vdCBzdXJlIHdoYXQgeW91IG1lYW4gaGVyZS5BbnkgcmVmZXJlbmNlcyB0byBiYWNrIHRoZXNlIGNsYWltcyB1cD8gQW55IHBzeWNob2xvZ2ljYWwgb3Igc29jaW9sb2dpY2FsIHN0dWRpZXM/VGhhdCBwZW9wbGUgZ2V0IHRyZWF0ZWQgZGlmZmVyZW50bHkgd2hlbiB0aGV5IGNvbmZpZGVudCBvciBhZ2dyZXNzaXZlIG9yIHRhbGw/IFRoYXQgaHVtYW5zIGFyZSBzb2NpYWwgYW5pbWFscz8gVGhhdCB3ZSBoYXZlIGhpZXJhcmNoaWVzP1VoLCB5ZWFoLiBUaGF0IGFsbCBwcmV0dHkgY29tbW9uIGtub3dsZWRnZS4gCkRvcG8gZGkgY2hlLCBvZ251bm8gZGV2ZSBwcmVuZGVyZSBjb3NjaWVuemEgY2hlICBwYXJ0ZSBpbnRlZ3JhbnRlIGRpIHF1ZXN0YSBzb2NpZXQsIGNvbXVucXVlIGVzc2Egc2lhLCBlIGNoZSwgcHJpbWEgZGkgY2VyY2FyZSBxdWFsY29zYSBkaSBhc3RyYXR0byBjaGUgbm9uIGNpIGludmVzdGUgZGlyZXR0YW1lbnRlLCBvY2NvcnJlIGNlcmNhcmUgZGkgbWlnbGlvcmFyY2kgc2luZ29sYXJtZW50ZS4KRGFuZGVsaW9uIHRlYS4gVGhpcyBpcyB2ZXJ5IGhlbHBmdWwgaW4gYWxsZXZpYXRpbmcgc3dlbGxpbmcgYW5kIGVkZW1hLiBJdCBpcyBhbHNvIGNsYWltZWQgdG8gY3VyZSBlbmRvbWV0cmlvc2lzIGJ5IGxpZ2h0ZW5pbmcgdGhlIGNvbmdlc3Rpb24gaW4gdGhlIHBlbHZpcy4KVGhpbmsgdGhlcmVzIGEgU2hlbCBTaWx2ZXJzdGVpbiBwaWN0dXJlIGFib3V0IHRoYXQuIEkgYmVsaWV2ZSBpbiB5b3VyIGFiaWxpdHkgdG8gZGVmaW5lIHlvdXJzZWxmIGFuZCBsb3ZlIHlvdXJzZWxmLCBhbmQgSSBiZWxpZXZlIGlmIHlvdSBrZWVwIHRyeWluZyBuZXcgdGhpbmdzIHRoYXQgcG90ZW50aWFsIGZ1dHVyZXMgd2lsbCBiZWNvbWUgYXBwYXJlbnQuIApUaGlzIGNvbXBsZXhpdHkgaGFzIGJlY29tZSBhIHNpZ25pZmljYW50IGlzc3VlIGluIG1vc3QgYnVzaW5lc3Nlcy4gT24gdGhlIG9uZSBoYW5kLCBJVCBwcm9mZXNzaW9uYWxzIGFyZSBub3QgdHJhaW5lZCBhcyBwcm9jdXJlbWVudCBleHBlcnRzLiAKWHl6elhDYW5jZXIgIDIgcG9pbnRzICBzdWJtaXR0ZWQgNiBkYXlzIGFnbwpNb3JlIHRhc3R5IEFkZWxhaWRlIGZhcmUuIApUaGUgbGlxdWlkcyB0aGVuIGZsb3cgb3V0IGludG8gdGhlIGRyYWluIGZpZWxkICh0aG9zZSBwaXBlcykuIFRoZSB3YXRlciByZXR1cm5zIHRvIHRoZSBlYXJ0aC4gCkNvb3JzIExpZ2h0IGV4ZWMgZGlzaGVzIG9uIHRoZSBicmFuZCdzIGNvbWViYWNrIHBsYW4KRXQgYXVzc2ksIGR1IGZhaXQgZGUgbGEgc3BpcmFsZSBkZXMgcmdpbWVzIHBhcmZvaXMgaW5pdGllIHRycyB0dCwgZHMgbCdlbmZhbmNlLiBKZWFubmUgU2lhdWQgRmFjY2hpbiBhIHJhcHBlbCwgdW4gcGV1IGRhbnMgbGEgbGlnbmUgZGUgbCdhbm5lIGRlcm5pcmUsIGxlcyBjb25zcXVlbmNlcyBkZXMgY2FyZW5jZXMgYWZmZWN0aXZlcy4gClVuZm9ydHVuYXRlbHkgZm9yIERvYywgdGhvdWdoLCBoZSBjb250cmFjdGVkIGNvbnN1bXB0aW9uIGhpbXNlbGYuLiAKSW4gYSBqb2x0aW5nIHJlc3RydWN0dXJpbmcgdW52ZWlsZWQgVHVlc2RheSwgQ0VPIEJvYiBTYXVlcmJlcmcgb2YgZG9tZXN0aWMgQ29uZCBOYXN0IFB1YmxpY2F0aW9ucyB3YXMgYm91bmNlZCBhbmQgSW50ZXJuYXRpb25hbCBDRU8gSm9uYXRoYW4gTmV3aG91c2Ugd2FzIG5hbWVkIGNoYWlybWFuIG9mIGEgIm5ldyBDb25kIE5hc3QiIHRoYXQgd2lsbCBjb21iaW5lIGRvbWVzdGljIGFuZCBvdmVyc2VhcyB1bmRlciBvbmUgdW1icmVsbGEuCjV3aWNreSB1CkVoIGJpZW4sIGxlcyB6ZXN0ZXMgZGUgY2l0cm9uIGNvbnRpZW5uZW50IGp1c3F1JyA1ICAxMCBmb2lzIHBsdXMgZGUgdml0YW1pbmVzIHF1ZSBsZSBqdXMgZGUgY2l0cm9uIGx1aSBtbWUuIEV0IG91aSwgYydlc3QgY2UgcXVlIHZvdXMgYXVyaWV6IGdhc3BpbGwuIApJbCB5IGEgZXUgYXVzc2kgaW4gZXh0cmVtaXMgdW5lIG1vZWxsZXVzZSBvbWVsZXR0ZSBhdXggZ2lyb2xsZXMsIHJzdWx0YXQgZCd1bmUgY3VpbGxldHRlIGR1IG1hdGluIHF1J29uIGEgZmFpdGUgZW4gZm9ydC4KU0UgT3B0aW1pemF0aW9uIEFydGljbGVzICBKdW5lIDIzLCAyMDA4CldpdGggdGhlIGNlcnRpZmljYXRpb24gb2YgdGhvc2Ugdm90ZXMsIGhlIGJlY2FtZSB0aGUgZmlyc3Qgc2l0dGluZyB2aWNlIHByZXNpZGVudCBzaW5jZSBNYXJ0aW4gVmFuIEJ1cmVuIHRvIGJlIGVsZWN0ZWQgUHJlc2lkZW50LiAKTXkgcGxheSBoYXMgYmVjb21lIGEgbG90IHRpZ2h0ZXIsIG9ubHkgYmVjYXVzZSBvZiBiZWluZyBhZnJhaWQgb2YgbG9zaW5nIHNvIG11Y2ggbW9yZSB0aGFuIGkgc2VlIG90aGVyIHBlb3BsZSBsb3NpbmcuLiAKVGhlbiB3ZSBvZmYgdG8gYSBzdGFuZCB0byBidXkgYWNoaW90ZSBwYXN0ZSwgdGhlIGhhbGxtYXJrIG9mIE1heWEgZmxhdm91ciwgbWFkZSB3aXRoIGFubmF0dG8gc2VlZHMgYW5kIHNwaWNlcyBsaWtlIGN1bWluLCBjbG92ZXMsIGNpbm5hbW9uLCBhbGxzcGljZSwgb3JlZ2Fuby4gVGhlIGFubmF0dG8gc2VlZHMgdHVybiBpdCBhIGRlZXAgb3JhbmdlLi4gClBlcmhhcHMgSSBqdXN0IG1pc3NlZCB0aGVzZSBkaXNwbGF5cywgYXMgSSBkb24gYWN0dWFsbHkgcHVyc3VlIHRoaXMgYXMgYW4gaW50ZXJlc3QgdGhvdWdoIGJlY2F1c2Ugb2YgbXkgd29yayBJIGhhdmUgYSBsb3Qgb2YgZXhwb3N1cmUgdG8gc3VjaCBzdHVmZiBhbmQgYW0gd2VsbCBzaXR1YXRlZCB0byB0YWtlIGFkdmFudGFnZSBvZiBhIGNoYW5jZSBmaW5kIGFuZCB0aGlzIGlzIHdoYXQgaGFwcGVuZWQgdG9kYXksIHdpdGggdGhlIGZvbGxvd2luZyBtYXAgaGFwcGlseSBhcHBlYXJlZCBpbiBteSBoYW5kcyBhcyBpZiBieSBtYWdpYzouIApJIGZpbmQgaXQgYml6YXJyZSB3aGVuIHdvbWVuIGd1ZXN0cyBnbyByZWFsbHkgb3ZlciB0aGUgdG9wIGFuZCBjbGVhcmx5IHdhbnQgdG8gYmUgbm90aWNlZCB3aGVuIGd1ZXN0cyBhdCBhIHdlZGRpbmcuIApGYW50YXN5RnVuRm9yZXZlciB1CklUIGd1eSBoZXJlLiBTbyBpdCBzZWVtcyBsaWtlIHlvdXIgT1MgY2Fubm90IGZpbmQgeW91ciBkZXNrdG9wIGZvbGRlciBmb3IgeW91ciB1c2VyLiBJdCBkZWZhdWx0cyB0byB0aGUgb25lIGluIFN5c3RlbSAzMi4gClJhdGhlciB0aGFuIHJlc3BvbmQgdG8gbWUsIGhlIHR1cm5zIHRvIHRoZSBmaXJlZmlnaHRlcnMgYW5kIHNheXMgIkRpZCBJIG5vdCBqdXN0IGZ1Y2tpbiBhc2sgdGhpcyBndXkgb3IgZGlkIEkgbm90IGp1c3QgZnVja2luIGFzayB0aGlzIGd1eSBpZiBoZSB3YW50cyBzb21lIGljZT8iIFRoZW4gaGUgdHVybnMgdG8gbWUgYW5kIHNheXMgIllhIG1hZGUgdXAgeW91ciBtaW5kIHlldCBwYWw/IExhc3QgY2hhbmNlISIgYW5kIHNsaWRlcyBtZSBhIGN1cCBvZiBpY2UuIAo4LiBGIGRpbiBmbGlja3ZuIGF0dCBoamxwYS4gVW5kZXJ0ZWNrbmEgZW4gdmlsbGlnIGJla2FudHNrYXAgZWxsZXIgZmxpY2t2biBoaXQgcCBkaW4gbWFrZSBwIGVuIGZydXRiZXN0bWQgcGxhdHMgYXR0IHNlIG9tIGhhbiBrb21tZXIgYXR0IGJpdGEuIERldCByIGJyYSBvbSBob24gYnIgZW4gYmFuZHNwZWxhcmUgaSBzaW4gcGxuYm9rIHMgZHUgZnIgaHJhIGhvbm9tLgpUaGUgV2FzaGluZ3RvbiBTdC4gbG9vcCBpcyBzb21ldGhpbmcgbGlrZSAwLjk1a20sIHdoaWNoIGlzIGdyZWF0IGZvciBqb2dnaW5nLCBidXQgeW91IGNhbiBhbHNvIGZpbmQgc2NlbmljIHJvdXRlcyB0aHJvdWdoIG5laWdoYm9yaG9vZHMgaWYgeW91IHdhbnQgbm9uIHJlcGVhdGluZyBzY2VuZXJ5LgpDYXJkIHRyaWNrcyBsZWFybmVkIGR1cmluZyB0aGlzIHBlcmlvZCBmYXNjaW5hdGVkIHRoZSBncmFuZGNoaWxkcmVuLiBJbiAyMDAxLCBmb2xsb3dpbmcgc2V2ZXJhbCB5ZWFycyBvZiBkZWNsaW5pbmcgaGVhbHRoLCBNb20gYW5kIERhZCByZXR1cm5lZCB3ZXN0IHRvIEJyYW5kb24sIE1hbi4gCkFuaXRhYmVsbGUgdQpBYm91dCBVcyAgIFNtYWxsIG1lbnUgdG8gZGVsaXZlciwgdGhlIHJlc3RhdXJhbnQgaXMgYW1hemluZyBhbmQgY2hhbmdlcyB0aGUgbWVudSBvZnRlbiBidXQgZGVsaXZlcnkgaXMgYSBzbWFsbCBjaG9pY2UgYXMgdGhleSBzbyBidXN5LiBUaGUgYnJhaXNlZCBwb3JrIHNldCBpcyBncmVhdC4KSG9uZXN0bHkgYmVjYXVzZSBJJ20gc3RpbGwgaW4gdGhhdCBzd2VldCBzd2VldCBkZXByZXNzaXZlIGxvdywgaXQncyBoYXJkIHRvIGZlZWwgZ29vZCBhYm91dCBteSBhY2NvbXBsaXNobWVudC4gCk1heWJlIHRoaXMgaXMgd2h5IHBlb3BsZSBhcmUgYWx3YXlzIGJ1eWluZyBtb3JlIGZvb2QgdGhhbiB0aGV5IGNhbiBlYXQgYW5kIHRocm93aW5nIGl0IG91dC4gSWYgdGhpcyBpcyByZWFsbHkgcGFydCBvZiBLb3JlYW4gY3VsdHVyZSwgSSBzZWUgbm8gcmVhc29uIHRvIGFjY2VwdCBpdCwgYmVjYXVzZSBpdCBpbGxvZ2ljYWwgYW5kIGJhZCBmb3IgdGhlIGVudmlyb25tZW50IGFuZCBwZXJzb25hbCBmaW5hbmNlcy4uIApQb2tlciBpcyBib29taW5nLiBBbmQgbWFueSBwZW9wbGUgcGxheSBmcmVlIHBva2VyIGdhbWVzIG9ubGluZS4gCiJIdW1hbnMgb24gdGhlIG90aGVyIGhhbmQgZG8gc3RpbmssIGlmICgxKSB0aGV5IG1vdmUgb3IgKDIpIGlmIGluIG5vdCBtb3ZpbmcgdGhleSBkeWluZyBvciBkZWFkLCBhbmQgdGhlbiBzdGluayBieSBkZWZhdWx0LiAxIGNhbiBiZSBtZWRpYXRlZCBhbmQgcmVtZWRpZWQgaWYgdGhhdCBvdXRjb21lIGlzIGZhdm9yZWQsIHRob3VnaCB0aGlzIGhhcyBub3QgYWx3YXlzIGJlZW4gdGhlIGNhc2UsIGFuZCB3aGljaCBpcyBhbHNvIChmb3IgdGhlIGxhcmdlIG1ham9yaXR5IG9mIHRoZSBodW1hbiBwb3B1bGF0aW9uKSBvZiByZWxhdGl2ZWx5IHJlY2VudCBpbnZlbnRpb24uIi4gCkhlIHNhaWQgaGUnZCBzZWVuIGJ1eWVycyBhdCB0aGUgTmF0aW9uYWwgR3JleWhvdW5kIEFzc29jaWF0aW9uIGhlYWRxdWFydGVycyBpbiBLYW5zYXMgcGF5IHVwIHRvICQ2MCwwMDAgb3IgJDcwLDAwMCBmb3Igb25lICJ0cmFjayByZWFkeSIgZ3JleWhvdW5kLiAKNS4gQ29vbCBHcmVlbiBDb3VudHJ5IGluIExpc21vcmU6IENvb2wgR3JlZW4gQ291bnRyeSBpcyB0aGUgb2ZmaWNpYWwgZnVuZHJhaXNlciBmb3IgVGhlIEdyZWVucyAyMDE5IE5TVyBlbGVjdGlvbiBjYW1wYWlnbi4gUHJlc2VudGVkIGJ5IEppbW15IFdpbGxpbmcgd2l0aCBTLiBTb3JyZW5zb24gYW5kIEJyaXNiYW5lIEJlcnRpZSBQYWdlLiBDb3VudHJ5IHJvY2sgYW5kIHJvbGwgdmV0ZXJhbnMgVGhlIFJlIE1haW5zIHdpbGwgYWxzbyBwZXJmb3JtIGF0IHRoZSBmdW5kcmFpc2VyLiBKaW1teSBXaWxsaW5nIFRoZSBSZWFsIEdvbmUgSGljayBVcHMgYXJlIGFsc28gb24gdGhlIGxpbmUgdXAgYXMgdGhlIE5vcnRoZXJuIFJpdmVycyBmYXZvdXJpdGUgaGVlbCBhbmQgdG9lIHByb3BvbmVudHMuIEFsc28gb24gdGhlIGJpbGwgd2lsbCBiZSBNZWxib3VybmUgU2VhbiBNY01haG9uLCBCcmlzYmFuZSBkdW8gVHV4ZWRvIEtpdHRlbiBhbmQgTm9ydGhlcm4gUml2ZXJzIG11c2ljaWFuIEJyb2FkaWUgQnV0dG9ucywgYW1vbmdzdCBvdGhlcnMuIEF0IHRoZSBMaXNtb3JlIENpdHkgQm93bGluZyBDbHViIHRoaXMgU2F0dXJkYXkgZnJvbSA1cG0uClRoZW4gZWFjaCBvbmUgb2YgdGhlbSBoYWQgdG8gbWF0Y2ggdGhlIGRlY29yIHRoYXQgd2FzIHN1cnJvdW5kaW5nLiAKRGVHcmF3LCBhZG1pdHRlZCBNYXlhIExlaWJtYW4sIHByZXNpZGVudCwgQUFkdmFudGFnZSBMb3lhbHR5IFByb2dyYW0uLiAKQXMgYSBiZWdpbm5lciwgdGhlcmUgYXJlIGEgbG90IG9mIHRoaW5ncyB5b3UgaGF2ZSB0byBmYW1pbGlhcml6ZSB5b3Vyc2VsZiB3aXRoIGJlZm9yZSB5b3UgY2FuIHN0YXJ0IGJlaW5nIGdvb2QgYXRvbmxpbmUgZ2FtZXMgcG9rZXIuIFRvIGhlbHAgeW91IG91dCwgd2Ugd2lsbCB0ZWFjaCB5b3UgaG93IHRvIHJhbmsgaGFuZHMgZnJvbSBoaWdoZXN0IHRvIGxvd2VzdC4KSGlzICJjb25jZXNzaW9ucyIgYXJlIGFjdHVhbGx5IGFja25vd2xlZGdlbWVudHMgb2YgdGhlIGV4aXN0aW5nIGluanVuY3Rpb25zIGlzc3VlZCBieSB0aGUgY291cnRzIHRoYXQgYXJlIHByZXZlbnRpbmcgdGhlIGdvdmVybm1lbnQgZnJvbSBhY3RpdmVseSBkZXN0cm95aW5nIHRoZXNlIHBvbGljaWVzIGluIHRoZSBmaXJzdCBwbGFjZSwgYnV0IHdpdGggcHJvbWlzZWQgdGltZWxpbmVzIHRoYXQgZXh0ZW5kIGJleW9uZCBUcnVtcCB0ZXJtLCBhbmQgYXJlIHRoZXJlZm9yZSBpcnJlbGV2YW50LiBFdmVuIHNvLCB0aGV5IHRlbXBvcmFyeSBzdGF5cyB0aGF0IGluIG5vIHdheSBhdHRlbXB0IHRvIGFkZHJlc3MgYW55IHVuZGVybHlpbmcgaXNzdWVzLCBhbmQgaWYgeW91IHJlY2FsbCBwcmV2aW91cyBEQUNBL0RSRUFNZXIgbmVnb3RpYXRpb24gYnJlYWtkb3ducywgdGhpcyBnb3Zlcm5tZW50IGhhcyBubyBpbnRlcmVzdCBpbiBhZGRyZXNzaW5nIHRoZW0uIFRoZXJlIGlzIHplcm8gcG9pbnQgaW4gYmxpbmRseSBraWNraW5nIGEgY2FuIGRvd24gdGhlIHJvYWQuCllvdSBoYXZlIHRvIGRvIHNvbWUgd29yayB0byBnZXQgaXQgZ29pbmcgb24gdGhlIFBDLiBZb3Ugd2lsbCBoYXZlIHRvIGxvYWQgYSBwcm9ncmFtIHRvIHBsYXkgdGhlIHJvbSB0aHJvdWdoIGFuZCBkb3dubG9hZCB0aGUgcm9tIGZvciB0aGUgZ2FtZS4gCkl0IHNhZmUgdG8gYXNzdW1lIGFsbCB0aGUgQVRNcyBhdCB0aGUgYWlycG9ydCB3aWxsIGFjY2VwdCB5b3VyIGNhcmQuIApTbyB3aGF0IGlzIGl0PyBXaGVuIGluIGRvdWJ0LCBnbyB0byB0aGUgZGljdGlvbmFyeS4gVGhlIE94Zm9yZCBFbmdsaXNoIERpY3RvbmFyeSBkZWZpbmVzIGFuIG9yZ2FzbSBhcyAiYSBzdWRkZW4gbW92ZW1lbnQsIHNwYXNtLCBjb250cmFjdGlvbiwgb3IgY29udnVsc2lvbiBbLl0gYSBzdXJnZSBvZiBzZXh1YWwgZXhjaXRlbWVudC4iIE1lcnJpYW0gV2Vic3RlciBnZXRzIG1vcmUgZGVzY3JpcHRpdmUsIHN0YXRpbmcgdGhhdCBpdCdzICJhbiBleHBsb3NpdmUgZGlzY2hhcmdlIG9mIG5ldXJvbXVzY3VsYXIgdGVuc2lvbnMgYXQgdGhlIGhlaWdodCBvZiBzZXh1YWwgYXJvdXNhbCB0aGF0IGlzIHVzdWFsbHkgYWNjb21wYW5pZWQgYnkgdGhlIGVqYWN1bGF0aW9uIG9mIHNlbWVuIGluIHRoZSBtYWxlIGFuZCBieSB2YWdpbmFsIGNvbnRyYWN0aW9ucyBpbiB0aGUgZmVtYWxlLiIgVGhlIGZhbW91cyBzZXggcmVzZWFyY2hlciBEci4gQWxmcmVkIEtpbnNleSBvbmNlIHNhaWQgdGhhdCBhbiBvcmdhc20gImNhbiBiZSBsaWtlbmVkIHRvIHRoZSBjcmVzY2VuZG8sIGNsaW1heCwgYW5kIHN1ZGRlbiBzdGlsbG5lc3MgYWNoaWV2ZWQgYnkgYW4gb3JjaGVzdHJhIG9mIGh1bWFuIGVtb3Rpb25zIC4gClRoYXQgbWFkZSBtZSB0cmVtYmxlIHdpdGggZmVhci4gCkxpdGVyYWxseSB0aG91Z2h0IEkgd2FzIGdvaW5nIHRvIGhhdmUgdG8gYWJhbmRvbiBteSBjYXJ0IGFuZCBqdXN0IGdvIGhvbWUuIE1hbmFnZWQgdG8gZmluaXNoIHVwIG15IHRyaXAsIHNraXBwaW5nIGEgYnVuY2ggb2YgYWlzbGVzLCBsZWFuaW5nIG9uIHRoZSBjYXJ0IHRoZSB3aG9sZSB3YXksIGp1c3QgZmVlbGluZyBsaWtlIEkgd2FzIGluIGEgZm9nLiAKV2hhdCBPblRoaW5ncyB0byBkb0Zvb2QgYW5kIERyaW5rVGhlYXRyZSBhbmQgQXJ0c0ZhbWlseSBhbmQgS2lkc011c2ljIGFuZCBHaWdzVFYgR3VpZGVEaWdpdGFsIFByaW50IEVkaXRpb25JdGlzIGFuIG9mZmVuY2UgY2FycnlpbmcgYW4gJDExLDAwMCBmaW5lIGFuZCAxMiBtb250aHMgaW4gamFpbCwgYnV0IGl0IGlzIG9uZSBwb2xpY2Ugc2F5IG1hbnkgcGVvcGxlIGhhdmUgbm8gaWRlYSBhYm91dC4gCkxldmVsIDEgd2FyZGluZyBwYXR0ZXJucyBhbmQgbGV2ZWwgMSBzdHJhdGVnaWVzIGZvciByZWQvYmx1ZSBjYW4gYmUgcHJlIGJha2VkIHRvIHNvbWUgZXh0ZW50IGFuZCBhcHBsaWVkIGF0IHJhbmRvbSBkdXJpbmcgYSA1IGdhbWUgc2VyaWVzLiBDZXJ0YWluIGNoZWVzZSBzdHJhdGVnaWVzIChsZXZlbCAyIGdhbmtzIC8gYmFyb24gb3IgZHJhZ29uIHNuZWFrcykgY2FuIGFsc28gYmUgYXR0ZW1wdGVkIHdpdGggc29tZSBkZWdyZWUgb2YgcmFuZG9tbmVzcyB0aG91Z2ggdGhpcyBvbmUgaXMgaGFyZGVyIHRvIGFjaGlldmUgYW5kIHRlYW0gY29tcCBpcyBhbHdheXMgZmFjdG9yLiAKVGhlIEFtZXJpY2FuIHZlcnNpb24gb2YgdGhlIDMwIEluY2ggUm91bGV0dGUgV2hlZWwgaGFzIHBvY2tldHMgd2hpY2ggYXJlIG51bWJlcmVkIGZyb20gMSB0byAzOCwgaW50ZXJjaGFuZ2luZyBmcm9tIHJlZCB0byBibGFjay4gVGhpcyBBbWVyaWNhbiBSb3VsZXR0ZSBXaGVlbCBhbHNvIGhhcyBhIGdyZWVuIHBvY2tldCBudW1iZXJlZCAwMC4gVGhlIEFjdHVhbCBSb3VsZXR0ZSBXaGVlbCBpcyBzcHVuIGluIG9uZSBkaXJlY3Rpb24gYW5kIGEgYmFsbCBpcyBzcHVuIGluIHRoZSBvdGhlci4gCkJyaWdodCBvcmFuZ2Ugc2hvcnRzLCB0aGVyZSdzIENvZHkuIApJZiB5b3Ugd2FudCB0byB1c2UgaXQgb3BlbiB0aGUgZG9vcnMgdG8gb3RoZXIgRXVyb3BlYW4gY291bnRyaWVzIHRoZW4gSSBmaW5kIHRoaXMgZGVzcGljYWJsZS4uIAonRG9pbmcgaXQgdGhlIHJpZ2h0IHdheSdDcm93IHNhaWQgaGUgaGFkIGJlZW4gcG9pc2VkIHRvIHNpZ24gYSBsZWFzZSB0byBleHBhbmQgaW50byBEYWxsYXMgbGFzdCBtb250aCB3aGVuIHRoZSBvdGhlciBjbHVicyBzaHV0IGRvd24uIERhbGxhcyBwb2xpY2Ugd29uJ3QgZ2l2ZSBoaW0gYSBzdHJhaWdodCBhbnN3ZXIgYWJvdXQgd2hhdCdzIGFsbG93ZWQsIGhlIHNhaWQuCkkgc3RhcnRlZCBzY3JlYW1pbmcgYWxsIG92ZXIgYWdhaW4gYW5kIGhlIGtlcHQgY3J5aW5nLCBzaGUgc2FpZC4gTmVpdGhlciBvZiB1cyBjb3VsZCBiZWxpZXZlIGl0LlNoZSBhZGRlZCBzaW5jZSBzaGVzIHdvbiB0aGUgdG9wIHByaXplIG9uIHRoaXMgdGlja2V0LCBzaGVsbCBoYXZlIHRvIGZpbmQgYSBuZXcgZmF2b3JpdGUuQSBjb3VwbGUgeWVhcnMgYmFjaywgc2hlIHdvbiAkMSwwMDAgb24gYSBDYXNoV29yZHMgdGlja2V0LlRoZSBmaXJzdCBvbmUgSSBsb3N0IG9uLiAKVGhlIGZpcnN0IGJlYXV0eSBzcGEgbWF5IGhhdmUgYmVlbiB0aGUgcGVyZnVtZSBmYWN0b3J5IG93bmVkIGJ5IENsZW9wYXRyYSBhdCBFbiBHZWRpLCBieSB0aGUgRGVhZCBTZWEuIEluZGl2aWR1YWxzIHdlcmUgYXBwYXJlbnRseSBvZmZlcmVkIGhlYWx0aCBhbmQgYmVhdXR5IHRyZWF0bWVudHMsIHNpbmNlIHRoZSBydWlucyBvZiB0aGUgZmFjdG9yeSBzaG93IHNlYXRzIGluIHdoYXQgYXJlIGJlbGlldmVkIHRvIGhhdmUgYmVlbiB3YWl0aW5nIGFuZCB0cmVhdG1lbnQgcm9vbXMuIApGYWNlICBjZWxhLCBsZSBDb2xsZ2UgSmVhbiBkZSBCcmJldWYgZmFpdCBhdWpvdXJkJ2h1aSBzb24gbWVhIGN1bHBhLiAKQ2FsbGVkIE1vbnVtZW50IGZvciBFYXN0IFZhbmNvdXZlciwgdGhlIHB1YmxpYyBhcnQgd29yayB3YXMgb25lIG9mIHRoZSBhcnRpc3QgaW5pdGlhdGVkIHByb2plY3RzIGZvciB0aGUgT2x5bXBpYyBhbmQgUGFyYWx5bXBpYyBBcnQgUHJvZ3JhbS4gVGhlIGNpdHkgc3BlbnQgJDgwMCwwMDAgb24gc2V2ZXJhbCBhcnQgd29ya3MgZm9yIE1hcHBpbmcgYW5kIE1hcmtpbmcgYnV0IHRoZSBjcm9zcyBoYXMgZWFzaWx5IGJlY29tZSB0aGUgb25lIHdpdGggdGhlIGdyZWF0ZXN0IHB1YmxpYyBpbXBhY3QuTHVtIGhhcyBzYWlkIHRoYXQgZ3Jvd2luZyB1cCBpbiBFYXN0IFZhbmNvdXZlciwgaGUgcmVtZW1iZXJlZCBzZWVpbmcgdGhlIHN5bWJvbCBkcmF3biBpbiBjaGFsayBvbiBzaWRld2Fsa3MgYW5kIGJlaGluZCBncm9jZXJ5IHN0b3Jlcy4gCkV2ZW4gR3JpbmcgaGltc2VsZiBzYWlkIGhlIHdhcyBmdWxsIG9mIHNoaXQsIHNpbmNlIHRoZXkgY291bGQndmUgb3BwcmVzc2VkIHRoZSBjb21tdW5pc3RzIHdpdGggb3Igd2l0aG91dCB0aGUgZmlyZS4gClRyYWNrbGVzcyB0cmFtIHJvdXRlcyBhcmUgbXVjaCBjaGVhcGVyIHRvIHByb3ZpZGUgdGhhbiBsaWdodCByYWlsIHJvdXRlcyBidXQgaGF2ZSBuZWFybHkgYWxsIG9mIHRoZSBiZW5maXRzIG9mIGEgdHJhbS4gCkl0IHNlZW1zIHlvdSBoYXZlIEJ1cnJvd3MgdG8gdGhhbmsgZm9yIHRoYXQgY2hlbWlzdHJ5IHlvdSBjYW1lIHRvIGtub3cgYW5kIGxvdmUgZm9yIDEwIHNlYXNvbnMuIFRoZSBGcmllbmRzIGNhc3QgaXMganVzdCBvbmUgb2YgbWFueSBmYW1vdXMgVFYgcmV1bmlvbnMgaGFwcGVuaW5nIG9uIFN1bmRheSwgRmViLiAyMS4gVGhlIGNhc3RzIG9mIFRheGksIFdpbGwgR3JhY2UsIENoZWVycywgVGhlIEJpZyBCYW5nIFRoZW9yeSwgTWlrZSBNb2xseSwgVHdvIGFuZCBhIEhhbGYgTWVuIGFuZCBtb3JlIGFyZSBhbGwgY29taW5nIHRvZ2V0aGVyIHRvIHBheSB0cmlidXRlIHRvIEJ1cnJvd3MuClRlbGwgaGltIGhpcyBwb2tlciBuaWdodHMgYXJlIGZpbmUsIGJ1dCBldmVyeSB0aW1lIGhlIGhhcyBhIHBva2VyIG5pZ2h0LCB5b3Ugd2lsbCBnbyBvdXQgZm9yIHRoZSBzYW1lIGFtb3VudCBvZiB0aW1lIHRoZSBuZXh0IGRheS4gQW5kIGRvIGl0LiBHbyBvdXQgd2l0aCBnaXJsZnJpZW5kcywgZ2V0IGEgcGVkaSwgb3IganVzdCBkbyB3aGF0ZXZlciB5b3Ugd2FudC4gTGV0IGhpbSBzZWUgd2hhdCBoYXZpbmcgYSBiYWJ5IGhvbWUgYWxvbmUgaXMgbGlrZS4gClRoaXMgbGVhZHMgdGhlIHBlcnNvbiB0byBzdGFydCB0byByZWx5IG9uIGFsY29ob2wgdG8gbWFrZSBoYXBweSBqdWljZXMsIGFuZCBzb21ldGltZXMgdG8gZmVlbCBhbnl0aGluZyBvdGhlciB0aGFuIHNhZC4gClRoaXMgaXMgYWZ0ZXIgaGUgaGVhcmQgZnJvbSBoaXMgTmF2eSBicm90aGVyLiBUaGF0IGhlbHBmdWwgaGludCBhYm91dCBob3cgQXJhYnMgYmVhdCBvZmYuIFRoZSBraWQgbG9va3MgYXJvdW5kIGZvciBzb21ldGhpbmcgdGhhdCBtaWdodCBkbyB0aGUgam9iLiAKVHdvLCBpdCB3aWxsIGFsbG93IFBhY3F1aWFvIHRvIHJlc3QgaGlzIGFnaW5nIGJvZHkgYW5kIGdpdmUgaGltIHNvbWUgdGltZSB0byBnZXQgYXdheSBmcm9tIHRoZSBzcG9ydCB0byByZSBldmFsdWF0ZSB0aGluZ3MuIEJ5IGRvaW5nIHRoaXMsIFBhY3F1aWFvIHdpbGwgc3VyZWx5IG1pc3MgdGhlIHNwb3J0IGhlIGxvdmVzLCBhbmQgaGUgd2lsbCByZSBkZWRpY2F0ZSBoaW1zZWxmIGFuZCBjb21lIGJhY2sgc3Ryb25nZXIgdGhhbiBldmVyLiBJdCBoYXBwZW5lZCB0byBGbG95ZCBpbiAyMDA3LCAyMDA5LCBhbmQgMjAxMC4gCklzIE1hbnppZWwgdGhlIG1hbj8gSGUgaXMgYWxyZWFkeSB0aGUgbW9zdCBmYW1vdXMgKG9yIGluZmFtb3VzKSBwbGF5ZXIgaW4gdGhlIENGTCBhbmQgaGUgaGFzIGJhcmVseSBzZWVuIGFjdGlvbi4gQnV0IE1vbnRyZWFsIGlzIGEgY2l0eSB0aGF0IGxpa2VzIGl0cyBjaGFyaXNtYSBob3QsIGZyb20gUm9ja2V0IFJpY2hhcmQgdG8gUm9kZ2VycywgZnJvbSBHdXkgTGFmbGV1ciB0byBBbGV4IEtvdmFsZXYsIGZyb20gVGltIFJhaW5lcyB0byBTdWJiYW4uIE1hbnppZWwgc2hvdWxkIGJlIGEgcGVyZmVjdCBmaXQsIGFzc3VtaW5nIGhlIGNhbiBwbGF5LgpERCBUb3VybmFtZW50IFBva2VyVGhpcyBwb2tlciBzb2Z0d2FyZSBpcyBzYWlkIHRvIGJlIHBlcmZlY3QgZm9yIGJlZ2lubmVycyBhbmQgZXhwZXJpZW5jZWQgcGxheWVycyBhbGlrZS4gNTAwMCBjb21wdXRlciBvcHBvbmVudHMgYXJlIGF2YWlsYWJsZSBpbiB0aGlzIHByb2dyYW0gYW5kIG9uZSBjYW4gY2hvb3NlIGZyb20gdGhyZWUgc2tpbGwgbGV2ZWxzLiBQb2tlciBhZmljaW9uYWRvcyBhbHNvIGhhdmUgdGhlIGNob2ljZSBvZiBwbGF5aW5nIGEgcHJlIGRlZmluZSB0b3VybmFtZW50IG9yIHRvIGN1c3RvbWl6ZSBvbmUgdGhhdCB3aWxsIG1lZXQgdGhlaXIgc3BlY2lmaWNhdGlvbnMuLiAKV2hlbiBoZSBjYWxsZWQgbWUsIEkgaGFkIGEgZ3Jvd24gbWFuIGNyeWluZyBhbmQgc2F5aW5nLCAiaXQgd2FzIHNvIHNjYXJ5ISBJIHdhcyBzbyBzY2FyZWQhIi4gClBsZWFzZSBkb24gbWlzdW5kZXJzdGFuZCBteSBzdG9yeSwgSSBkbyBub3QgZW5jb3VyYWdlIGFueW9uZSB0byB0aGluayB0aGF0IHRoZWlyIHByb2JsZW1zIG9yIG1pc2ZvcnR1bmVzIGNvbWUgZnJvbSBhIGN1cnNlIG5vciBhbSBJIHNheWluZyB0aGF0IGlmIGEgcHN5Y2hpYyB0ZWxscyB5b3Ugc29tZXRoaW5nIGFib3V0IGEgZnJpZW5kIG9yIGZhbWlseSBtZW1iZXIgeW91ciBzaG91bGQgYmVsaWV2ZSB0aGVtIGFuZCBhY3QgYWdhaW5zdCB0aGVtIG9yIHdoYXRldmVyLiBBZ2FpbiwgSSBqdXN0IHdhbnRlZCB0byBzaGFyZSBteSBleHBlcmllbmNlLCBzb21ldGhpbmcgdGhhdCBoYXBwZW5lZCB0byBtZSB0aGF0IGV2ZW4gSSBjYW4gZnVsbHkgdW5kZXJzdGFuZC4gVGhhdCBhbGwuLiAKQmVjYXVzZSBpbiB0aGUgcGFzdCBJIGhhZCBzb21lIHJlYWxseSBhbm5veWluZyBwYXltZW50IHByb2Nlc3NvcnMgd2hvIHJlZnVzZWQgbXkgVmlzYSBEZWJpdCBjYXJkLiBBbmQgdGhlIE1ycyBBbmQgbXkgb3RoZXIgVmlzYSBkZWJpdC4gQW5kIG9mIGNvdXJzZSwgdGhleSBkb24gYWNjZXB0IHBheXBhbCwgZWl0aGVyLgpTbmlwcGVkIHRoZSBlbmRzIG9mIGJvdGggc2lkZXMgd2l0aCBzY2lzc29ycy4KIkknZCBjb25zaWRlciBteXNlbGYgYSBwcmV0dHkgZ29vZCBwb2tlciBwbGF5ZXIsIiBoZSBzYWlkLi4gCkxlIEdvdXZlcm5lbWVudCBwcm9wb3NlIGxlcyBsb2lzLCBldCBmYWl0IGxlcyByZ2xlbWVudHMgbmNlc3NhaXJlcyBwb3VyIGFzc3VyZXIgbGV1ciBleGN1dGlvbiAoQXJ0aWNsZSA0NCkuIApJZiB0aGVyZSdzIHNvbWV0aGluZyBDb25zY2lvdXNuZXNzIGhhdGVzLCBpdHMgQk9SRURPTS4gU28gcmVzdCBhc3N1cmVkIHRoYXQgd2hlbiB5b3VyIHRpbWUgaW4gdGhpcyBjdXJyZW50IG1lYXRzdWl0IGlzIGNvbXBsZXRlLCB5b3Ugd2lsbCByZXVuaXRlIHdpdGggbWVtYmVycyBvZiB5b3VyIHNvdWwgZmFtaWx5IGluIG9yZGVyIHRvIHBsYW4geW91ciBuZXh0IGdyYW5kIGFkdmVudHVyZS4gClRoZSBtb3JlIHllYXJzIHlvdSBwdXQgaW4sIHRoZSBtb3JlIFBUTyB5b3UgZ2V0IGVhY2ggeWVhci4gCkkgZmluZCBpdCBiaXphcnJlIHdoZW4gd29tZW4gZ3Vlc3RzIGdvIHJlYWxseSBvdmVyIHRoZSB0b3AgYW5kIGNsZWFybHkgd2FudCB0byBiZSBub3RpY2VkIHdoZW4gZ3Vlc3RzIGF0IGEgd2VkZGluZy4gClRocm91Z2hvdXQgbXkgbGlmZSwgb25lIG9mIHRoZSBmZXcgY29uc3RhbnRzLCBhcyB3ZWxsIGFzIG9uZSBvZiB0aGUgZ3JlYXQgam95cywgaGFzIGJlZW4gcGxheWluZyBwb2tlci4gCldoYXQgT25UaGluZ3MgdG8gZG9Gb29kIGFuZCBEcmlua1RoZWF0cmUgYW5kIEFydHNGYW1pbHkgYW5kIEtpZHNNdXNpYyBhbmQgR2lnc1RWIEd1aWRlRGlnaXRhbCBQcmludCBFZGl0aW9uTm8gZXh0cmEgcG9rZXIgbWFjaGluZXMgd2lsbCBiZSBhbGxvd2VkIGlucHVicyBhbmQgY2x1YnMgaW4gV2FycmF3b25nLCBXaW5kYW5nLCBCZXJrZWxleSBhbmQgV2FyaWxsYSwgYXMgcGFydCBvZiBhIGdvdmVybm1lbnQgY3JhY2sgZG93biBvbiBwcm9ibGVtIGdhbWJsaW5nLiAKVGhlIGhhbmQgd2luZGluZyBmZWVscyBwZXJmZWN0IGFuZCB0aGUgd2F0Y2ggaXMga2VlcGluZyBncmVhdCB0aW1lLiBIZSBhbHNvIHRvb2sgY2FyZSBvZiB0aGUgc2VhbHMgdGhhdCB3ZXJlIGRyeSBhbmQgY2F1c2luZyB0b28gbXVjaCBmcmljdGlvbiBvbiB0aGUgc3RlbS4gSSBhbHdheXMgbG92ZWQgdGhlIGxvb2tzIG9mIHRoZSBTS1ggYW5kIG5ldmVyIGZlbHQgbGlrZSB0aGUgYWVzdGhldGljIG1vZHMgd2VyZSBhbnl0aGluZyBJIHdhbnRlZC4gCjIgcG9pbnRzICBzdWJtaXR0ZWQgNyBkYXlzIGFnb1RoYW5rcyBzbyBtdWNoLiBTZXJpb3VzbHksIGYgbW9uby4gSXQgdGhlIHNpY2tlc3QgSSBldmVyIGJlZW4gaW4gbXkgbGlmZS4gCkkgY2FsbGVkIHdpdGggMyw0IG9mIGNsdWJzLCBpbnRlbmRpbmcgdG8gYmx1ZmYgdGhlIGZsb3AuIApIb3dldmVyIG5vdyB3ZSBhcmUga25vY2tpbmcgb24gdGhlIGRvb3IgdG8gYW4gZXJhIHdoZW4gd2UgYmVnaW4gdG8gdGFrZSBqb2JzIGF3YXkgZnJvbSBodW1hbiBpbnRlbGxlY3QgYXMgd2VsbC4gCiA3IHBvaW50cyAgc3VibWl0dGVkIDkgZGF5cyBhZ29UaGUgcHJlc3N1cmUgdGhhdCB3YXRlciBjYW4gZGVsaXZlciBpcyB0cml2aWFsIGNvbXBhcmVkIHRvIHdoYXQgYmVpbmcgYnVyaWVkIHVuZGVyIHN0b25lIGNhbiBkZWxpdmVyLiAKSW4gaXRzIG5hdGl2ZSBoYWJpdGF0LCBLLiBSb29wZXJpIGZsb3dlcnMgaW4gd2ludGVyLCBmcm9tIEp1bmUgdW50aWwgU2VwdGVtYmVyLiAKTGlzdGVuIHRvIGJyZWFrIHVwIHNvbmdzIChKb24gTWNMYXVnaGxpbiBoYXMgdGhlIGJlc3QpIGNyeSBhbmQgZWF0IGp1bmsgZm9vZC4gClNjcmlwdHVyZXMgcmVsYXRlZCB0byBzYWludHMgYmVpbmcgYWxpdmUgaW4gQ2hyaXN0LCBldCBjZXRlcmE6IEpvaG4gNjo0NyA1MSwgSm9obiA1OjI1IDI5LCBKb2huIDExOjIzIDI3LCBKb2huIDg6NTEsIE1hdHRoZXcgMjc6NTEgNTMsIE1hdHRoZXcgMjI6MzIsIEx1a2UgMjA6MzgsIEx1a2UgMTU6NywgUmV2ZWxhdGlvbiAyMToyNywgUmV2ZWxhdGlvbiA1OjggMTAsIFJldmVsYXRpb24gMTE6MTYgMTgsIFJldmVsYXRpb24gODozLCBIZWJyZXdzIDEyOjEsIEhlYnJld3MgMTI6MjIgMjMgMiBwb2ludHMgIHN1Ym1pdHRlZCA0IGRheXMgYWdvCkl0IGtpbmQgb2YgZGVwZW5kcyBvbiB3aGF0IHlvdSBnb2luZyBmb3IuIApTdGltdWxhdGUgdGhlIG5lcnZvdXMgc3lzdGVtIHRvIGhlbHAgcmVkdWNlIG11c2NsZSBhdHJvcGh5OyBpbmNyZWFzZSBtdXNjbGUgdG9uZTsgc3RpbXVsYXRlIHRoZSBmdW5jdGlvbnMgb2YgdGhlIHNraW4gb3IgYW4gb3JnYW4gZGVlcCBpbnNpZGUgdGhlIGJvZHk7IHNlZGF0ZSB0aGUgbmVydm91cyBzeXN0ZW0gdG8gaGVscCBlYXNlIG11c2NsZSB0ZW5zaW9uLCBzcGFzdGljaXR5LCBzdHJlc3MgcmVsYXRlZCBzeW1wdG9tcyBhbmQgaGVhZGFjaGVzOyBib29zdCB0aGUgZnVuY3Rpb25pbmcgb2YgdGhlIGltbXVuZSBzeXN0ZW0gYW5kIG1haW50YWlucyBoZWFsdGggd2hlbiBkb25lIHJlZ3VsYXJseTsgc3RpbXVsYXRlIHNsdWdnaXNoIGNpcmN1bGF0aW9uIG9yIHNsb3cgZG93biB0aGUgY2lyY3VsYXRpb24gb2Ygc29tZW9uZSB3aG8gaGFzIGp1c3QgcnVuIGEgbWFyYXRob24gd2hlbiB1c2luZyBmcmljdGlvbiBtYXNzYWdlIHRlY2huaXF1ZXM7IGFsbG93IGJldHRlciByYW5nZSBvZiBtb3Rpb24gYW5kIHN1cHBvcnQgdGhlIGNvbm5lY3RpdmUgdGlzc3VlIGFuZCBtdXNjbGVzIGluIGJlY29taW5nIHN0cm9uZyBhbmQgaGVhbHRoeSB3aGVuIGRvaW5nIHNpbXBsZSBqb2ludCBtb3ZlbWVudHMgYW5kIGpvaW50IHN0cmV0Y2hpbmcuIEl0cyBtYW55IGhlYWxpbmcgYmVuZWZpdHMgYXJlIGltcG9ydGFudCBpbiBvdXIgaGlnaCB0ZWNoIHdvcmxkIGJlY2F1c2Ugb2Ygb3VyIGJhc2ljIGh1bWFuIG5lZWQgdG8gYmUgbnVydHVyZWQgdGhyb3VnaCB0b3VjaC4gClN0cmVuZ3RoZW5pbmcgWW91ciBBYnM6IEkndmUgaGFkIG1hbnkgUGh5c2ljYWwgVGhlcmFwaXN0cyB0ZWxsIG1lIHRoZXkgaGF0ZSBzaXQgdXBzISBNYW55IG92ZXIgemVhbG91cyBwdXJzdWVycyBvZiBiZXR0ZXIgZml0bmVzcyBmb2N1cyBpbiBzaXQgdXBzIGFuZCBwdXNoIHVwcywgd2hpY2ggdGlnaHRlbiBhbmQgc2hvcnRlbiBtdXNjbGVzIHRoYXQgYWxyZWFkeSB0ZW5kIHRvIGJlIHNob3J0LCBzdHJvbmcsIGFuZCB0aWdodCAoYW5kIGFyZSB0aHVzIGNhdXNpbmcgcGFpbiBpbiB0aGUgb3Bwb3NpbmcgbXVzY2xlcyB0aGF0IGFyZSBzbWFsbGVyIGFuZCBoYXZlIHRvIHdvcmsgdG9vIGhhcmQgaW4gYSBuZXZlciBlbmRpbmcgdHVnIG9mIHdhciEpLgpPZiB0aGUgd2F5cyB0byBkbyB0aGF0IHdhcyB0byBzdWJqZWN0IGl0IHRvIGFkZGl0aW9uYWwgc3RyaW5nZW50IHRlc3RzLCBsaWtlIHJlYWwgd29ybGQgdmlhYmlsaXR5LCBhbmQgZXZlbiBwcm9maXRhYmlsaXR5LiBJdCBpcyBvbmUgdGhpbmcgdG8gcHJvZHVjZSBzb21ldGhpbmcsIGJ1dCBpdCBpcyBhIHdob2xlIG90aGVyIHRoaW5nIHRvIG1hcmtldCBpdCwgc2VsbCBpdCBhbmQgbWFrZSBpdCBwcm9maXRhYmxlLiBQZXRlcnNvbiBGZWxsb3dzaGlwIGF0IEFjdG9uLCBhZHZlcnRpc2VkIGFzIGFuIE1CQSB3aXRoIGEgcGhpbG9zb3BoeSB0aGF0IGlzIGFsaWduZWQgd2l0aCBEci4gCldlIHdlcmUgbGFzdCA3IHBsYXllcnMuIFRoZSBidWJibGUgYWNjb3JkaW5nIHRvIHRoZSBydWxlIHdhcyA1IHBsYXllcnMuIApObyBmaXhlZCBkYXRlIHdhcyBzZWxlY3RlZCBmb3IgdGhlIG9ic2VydmFuY2UuMTkxMSBBcyBhIHJlc3VsdCBvZiB0aGUgQ29wZW5oYWdlbiBpbml0aWF0aXZlLCBJbnRlcm5hdGlvbmFsIFdvbWVuJ3MgRGF5IHdhcyBtYXJrZWQgZm9yIHRoZSBmaXJzdCB0aW1lICgxOSBNYXJjaCkgaW4gQXVzdHJpYSwgRGVubWFyaywgR2VybWFueSBhbmQgU3dpdHplcmxhbmQsIHdoZXJlIG1vcmUgdGhhbiBvbmUgbWlsbGlvbiB3b21lbiBhbmQgbWVuIGF0dGVuZGVkIHJhbGxpZXMuIApGZXJyZXIsIHdlYXJpbmcgZ2xhc3Nlcywgc2FpZCBsaXR0bGUgZHVyaW5nIGhpcyBicmllZiBjb3VydCBoZWFyaW5nLCBhY2tub3dsZWRnaW5nIGhlIHdhcyB3YWl2aW5nIGV4dHJhZGl0aW9uLgpUb2xkIG1lIHRvIGdldCByZWFkeSBmb3IgYSBuaWdodG1hcmUgYW5kIGZ1Y2sgbWUgaXQgd2FzLiAKSSBhYnNvbHV0ZWx5IGFncmVlLiBJIHdvdWxkIG5ldmVyIHdhbnQgdG8gZ2V0IHJpZCBvZiBIUi4gQnV0IGZpbmRpbmcgYW5kIGhpcmluZyBjYW5kaWRhdGVzIGlzIGEgZGlmZmVyZW50IHByb2JsZW0gdGhhbiBsb29raW5nIGFmdGVyIHRoZW0uIE9uY2UgSSBhcyBhIGhpcmluZyBtYW5hZ2VyIGRlY2lkZSB0byBtYWtlIGFuIG9mZmVyIEkgaGFwcHkgdG8gaGF2ZSB5b3UgaGFuZGxlIGl0IGZyb20gdGhlcmUuIFlvdSBqdXN0IGNhbiBwb3NzaWJseSBoYXZlIGFueSB2YWx1ZSBhZGQgdG8gdGhpcyBwcm9jZXNzIGJlY2F1c2UgaXQgcmVhbGx5IGJyZWFrcyBkb3duIHRvIHR3byB0aGluZ3MgdGhhdCBhbHJlYWR5IGhhdmUgc3ViamVjdCBtYXR0ZXIgZXhwZXJ0cyB3b3JraW5nIG9uIHRoZW0uIFRoZSBmaXJzdCBpcyBkZWNpZGluZyB3aGF0IGtpbmQgb2YgcGVvcGxlIHdlIG5lZWQsIGFuZCB0aGUgaGlyaW5nIG1hbmFnZXIgaXMgdGhlIGV4cGVydCBvbiB0aGF0LiBUaGV5IHdpbGwgd29yayBvbiBoaXMgdGVhbSBhbmQgdG93YXJkIGhpcyBnb2FscyB0aGF0IGFyZSBhbGlnbmVkIHdpdGggdGhlIGNvbXBhbnkgVGhlIHNlY29uZCBpcyBmaW5kaW5nIHRob3NlIHBlb3BsZSB3aGljaCB0aGUgcmVjcnVpdGVyIGlzIG9idmlvdXNseSB0aGUgZXhwZXJ0IGF0LgpUaGUgd29yc3QgcGFydCwgdG8gbWUsIGlzIHRoYXQgaXQgZW5jb3VyYWdlcyB0aGUgcG9hY2hpbmcgb2Ygb3VyIHN0b3JpZXMgYW5kIHRyb2xscyBhbmQgbWFrZXMgdGhlIHN1YiBhIGxlc3Mgc2FmZSBwbGFjZSB0byBiZS4gSSBoZWFyZCB0aGUgIkkgZ290IGEgbGl2ZSBiYWJ5IHJ1YmJlZCBvbiBtZSIgc3Rvcnkgb24gbXkgbG9jYWwgcmFkaW8gYW5kIHRoZXkgaWRlbnRpZmllZCBpdCB3YXMgUmVkZGl0IGFuZCBpdCBqdXN0IHN1Y2tzIChub3RlLCBub3Qgc2F5aW5nIEkgYmVsaWV2ZSB0aGF0IHN0b3J5IHdhcyBmYWtlKS4gSSByZWFsbHkgY2FuIGJsYW1lIGFueW9uZSBmb3Igbm90IHdhbnRpbmcgdG8gc2hhcmUgdGhlaXIgc3RvcmllcyBhbmQgYXNrIGZvciBoZWxwIHdoaWxlIHRoZXJlIGFyZSBmYWtlIG9yIG92ZXJzZW5zYXRpb25hbGl6ZWQgc2FnYXMgZ29pbmcgb24gYmVjYXVzZSB0aGVyZSBhcmUgb2J2aW91c2x5IGV4dHJhLCB1bnNhZmUgZXllcyBvbiB0aGUgYm9hcmQgbG9va2luZyB0byBwb2FjaCBhbmQgcHVibGljaXplLiAKVGhlIGNvbW1vbiBzZW5zZSBvZiB0aGUgVGVhIFBhcnR5IGlzIHRoYXQgd2hpdGUsIHN0cmFpZ2h0LCBydXJhbCBBbWVyaWNhbnMgb3VnaHQgdG8gYmUgYmVuZWZpdGluZyBmcm9tIHRoZSBzeXN0ZW0uIApUaGVyZSBpcyBidXQgSSBkb24ndCByZW1lbWJlci4gU3RheWluZyBvbiBGYWNlYm9vayhzdGF5IG9uIHRoZSB3ZWJzaXRlIEkgZGlkbid0IHdlbnQgYW55d2hlcmUgZWxzZSkgYW5kIGxvb2tpbmcgZm9yIGl0IHdoaWxlIHBsYXlpbmcgdGhlIGdhbWUsIHlvdSB3b3VsZCBwcm9iYWJseSBmaW5kIHRoZSBzdXJ2ZXkuIEJhc2ljYWxseSBhbGwgeW91IHRvIGRvIHdhcyByZWdpc3RlciBhbmQgcGxheSB0d28gdHJpdmlhIGdhbWVzLihEaWRuJ3QgbWF0dGVyIGlmIHlvdSBhbnN3ZXJlZCBpdCB3cm9uZyBvciBub3QpLiAKV2h5PyBCZWNhdXNlIGFueXRoaW5nIG1vcmUgdGhhbiAxIGNhcmF0IGxvb2tzIGRpc3Byb3BvcnRpb25hbCBvbiBteSB0aW55IGFzcyBmaW5nZXJzLiBJZiB5b3UncmUgZ29ubmEgc3BlbmQgdGhhdCBtdWNoIG1vbmV5LCBtYWtlIHN1cmUgaXQgZml0cyB3aXRoIHRoZSBhZXN0aGV0aWNzIGFuZCBwcmFjdGljYWxpdHkgb2YgaGVyIGhhbmQuLiAKSW4gbW9zdCBwb2tlciB2YXJpYW50cywgc3VjaCBhcyBUZXhhcyBIb2xkICdFbSBhbmQgT21haGEsIHRoZXJlIGFyZSA1IHNoYXJlZCBjYXJkcywgb3IgY29tbXVuaXR5IGNhcmRzIGRlYWx0LiBUaGlzIGlzIHNpbXBseSBiZWNhdXNlIHRoZSBydWxlcyBhcmUgYXMgc3VjaC4gCkxhZHkgR2FHYSksIEJpZyBHaXJsTm93IChmZWF0LiBMYWR5IEdhR2EpLCBDaGlsbGluIChmZWF0LiBMYWR5IEdhR2EpIC4gOTcgOTkpIiBCb3JuIFRoaXMgV2F5IChEZWx1eGUgQWxidW0gQm9udXNTb25ncykiIEJsYWNrIEplc3VzICsgQW1lbiBGYXNoaW9uLCBGYXNoaW9uIG9mIEhpcyBMb3ZlLCBUaGVRdWVlbi4gQ2FuIGdldCB0aGVzZSBkZWx1eGUgYWxidW0gc29uZ3MgZnJvbSBpVHVuZXMhIDEwMCkgWW91IGFuZCBJLiBIZXJlLCB0aGUgMTAxc3QsIDEwM3JkIDEwNHRoc29uZ3MgY2FuIGJlIGZvdW5kIG9uIGlUdW5lcywgd2hpbGUgdGhlIDEwMm5kIGNhbiBiZSBmb3VuZCBvbnlvdXR1YmUuIApXZSBnb3QgYmFjayBlYXJseSB0aGlzIG1vcm5pbmcgZnJvbSBncm9vbWluZyB0aGUgbm9ydGggaGFsZiBvZiBvdXIgdHJhaWxzLiAKQWZ0ZXIgaGlzIHJlbGVhc2UgYW5kIG1hcnJpYWdlIHRvIGhpcyBzZWNvbmQgd2lmZSBBbWFuZGEgKGhpcyBmaXJzdCBtYXJyaWFnZSBmb3VuZGVyZWQgZHVyaW5nIGhpcyBmaXJzdCBqYWlsIHRlcm0pLCBoZSBkZWNpZGVkIHRvIGdvIHN0cmFpZ2h0LCByZWZsZWN0aW5nIHRoYXQgbm90aGluZyBncmVhdCBhYm91dCBiZWluZyBsb2NrZWQgdXAgaW4gYSBjZWxsIDIzIGhvdXJzIGEgZGF5IGFuZCBwZWVpbmcgaW4gYSBidWNrZXQgSGUgdXNlZCBoaXMgd2lubmluZ3MgYW5kIGhpcyB3aWZlIHNhdmluZ3MgdG8gb3BlbiBhIHBhd25icm9rZXJzIHdoaWNoIGhlIGxhdGVyIGV4cGFuZGVkIGludG8gYSBqZXdlbGxlcnkgYnVzaW5lc3MsIGFuZCBoZWxkIHJlZ3VsYXIgcG9rZXIgZ2FtZXMgaW4gYSByb29tIGF0IHRoZSBiYWNrIG9mIHRoZSBzaG9wLgpXaGF0IGhlbHBlZCBtZSB3aGVyZSBtYWlubHkgdHdvIHRoaW5nczoKSGV5LCBJJ20gYWxzbyBsb29rIGludG8gZ2V0dGluZyBoZXIgYSBGVUxMIHdvcmsgdXAgb24gZXZlcnl0aGluZy4gSG9ybW9uYWwgY2hhbmdlcyAoaXQncyBoYXBwZW5lZCBoZXJlIGJlZm9yZSwgdGhhdCB0aGV5IGdvIG9uIGhydCBhbmQgc3VkZGVubHkgdGhleSdyZSBuaWNlIGFnYWluKSwgYnJhaW4gaXNzdWVzIGV0YywgY2FuIHJlYWxseSBlZmZlY3QgYnJhaW4gZnVuY3Rpb24sIHBhaW4gYWxzbyBtYWtlcyB5b3UgYW4gYXJzZS4gTm90IHNheWluZyB0aGF0IGl0IGhlbHBzLgpQZXJtYW5lbnQgY2FwaXRhbCBmdW5kcyBmb2N1cyBsZXNzIG9uIGV4aXRpbmcgaW52ZXN0bWVudHMgaW4gYSBkZWZpbmVkIHBlcmlvZCAgIGFuZCB0aGUgZW1waGFzaXMgaXMgbW9yZSBvbiBnZW5lcmF0aW5nIHBvdGVudGlhbElBTlMgSW5kaWEgUHJpdmF0ZSBMaW1pdGVkCldoZW4gaXQgc3RhcnRlZCBwb3VyaW5nIHJhaW4gYXJvdW5kIGRpbm5lcnRpbWUsIHdlIHdlcmUgc3RpbGwgb24gdGhlIHJvYWQgYW5kIHdlIHdlcmUgYSBsaXR0bGUgYnVtbWVkIG91dC4gClRoZSBpbnRlbnRpb25zIGhhdmUgdG8gYmUgaW4gdGhlIHJlYWxtIG9mIHRob3VnaHQsIGZlZWxpbmcgb3IgYmVoYXZpb3VyLiBUaGUgb25seSBpbnRlbnRpb25zIHlvdSBjYW4ndCBicmluZyBhcmUgaW50ZW50aW9ucyByZWxhdGluZyB0byB5b3VyIHBoeXNpY2FsaXR5IGxpa2UgJ0kgd2FudCB0byBoZWFsIFggZGlzZWFzZScuLiAKVGhleSBkb24ndCBvZmZlciBBc2lhbiBoYW5kaWNhcCB0byBzb21lIG9mIHRoZSBmb290YmFsbCBsZWFndWVzIGFuZCB0aGVpciBsaW1pdHMgYXJlIGEgYml0IGxvd2VyIGZvciBsZXNzIGtub3duIG9uZXMuIFRoZSBvbmx5IGV4cGxhbmF0aW9uIHdoeSB0aGVyZSBhcmUgc28gbWFueSBFdXJvcGVhbiBmb290YmFsbCBsZWFndWVzIGNvdmVyZWQgYXQgVW5pYmV0IGlzIHRoYXQgdGhleSBhcmUgb24gdGhlIG1pc3Npb24gdG8gY292ZXIgYW55IHBvc3NpYmxlIGZvb3RiYWxsIGNvbXBldGl0aW9uIGluIEV1cm9wZS4gIHB1bnRlcnMgY2FuIHBsYWNlIGJldHMgZGFpbHkgb24gb3ZlciAxNSAwMDAgb2ZmZXJpbmdzLCBvbiBsZWFndWVzIGZyb20gRW5nbGFuZCwgU2NvdGxhbmQsIFNwYWluLCBJdGFseSwgR2VybWFueSwgQXVzdHJhbGlhLCBBdXN0cmlhLCBXYWxlcywgTWV4aWNvIGFuZCBtYW55IG1vcmUuVW5pYmV0IGFyZSBjb25zaWRlcmVkIGlubm92YXRvcnMgaW4gbGl2ZSBzcG9ydHMgc3RyZWFtaW5nLiAKNC4gQ29zdGEgUmljYSBmb3IgbmF0dXJlIGxvdmVycwpHZXQgcHJvYWN0aXZlIGFib3V0IHRoaXMgbm93LiAKKDIpIFRoYXQgZm9yIHRoZSBMb00gbW9kcyB0byBmaWd1cmUgb3V0LiBNeSBwZXJzb25hbCB2aWV3IHdvdWxkIGJlIHRvIGRvIGEgYmV0dGVyIGpvYiBvZiBsb2NraW5nIGRvd24gYnJpZ2FkZXMgc28gdGhleSBkb24gc3BpcmFsIG91dCBvZiBjb250cm9sLCBhbmQgdG8gZG8gYSBiZXR0ZXIgam9iIG9mIG1vZGVyYXRpbmcgY29tbWVudHMuIFRoZSBtb2RoYXRlIGNpcmNsZWplcmsgbWlnaHQgYmUgY2F0aGFydGljLCBidXQgaXQgZG9lcyBub3RoaW5nIHRvIGZ1cnRoZXIgdGhlIHB1cnBvc2Ugb2YgdGhlIHN1YjogZGlzY3Vzc2lvbi4uIApJbnN0ZWFkIG9mIGFza2luZyBoZXIgdG8gdHJ5IGFuYWwgc2V4LCBpdCBiZXR0ZXIgdG8gbWFrZSBoZXIgd2FudCBhbmFsIHNleC4gV2hldGhlciB5b3UganVzdCBjdXJpb3VzIGF0IHRoaXMgc3RhZ2Ugb3IgYWxyZWFkeSB3aWxsaW5nIHRvIGluZHVsZ2UgeW91ciBhZHZlbnR1cm91cyBzaWRlLCBjaGVjayBvdXQgdGhlc2Ugc2l4IGRvIGFuZCBkb24gb2YgYW5hbCBzZXguLiAKVGhpcyBtYXkgdGFrZSBsb25nZXIgdGhhbiB5b3UgdGhpbmsgaXQgd291bGQuIApEYW5TaGVwcyB1ClRoZXkgYXJlIHRoZSB3b3JsZCBsYXJnZXN0IGJvbmV5IGZpc2gsIHdlaWdoaW5nIHVwIHRvIDUsMDAwIHBvdW5kcy4gClNIRSBMRVQgSElNIElOIEFORCBMRUZUIFVTIEFMT05FICJUTyBUQUxLIiBJTiBIRVIgS0lUQ0hFTi4gClRoZSBVU1NSIGNvbGxhcHNlcyBhbmQgUHV0aW4sIGEgZm9ybWVyIEtHQiBhZ2VudCB3aG8gYmxhbWVzIHRoZSBVUyBmb3IgVVNTUidzIGNvbGxhcHNlIGFuZCB3YW50cyB0byByZXN0b3JlIHRoZSBTb3ZpZXQgVW5pb24sIGJlY29tZXMgdGhlaXIgbGVhZGVyIGFuZCB1cCB1bnRpbCAzIHllYXJzIGFnbywgaGUgd2FzIG1ha2luZyBldmVyeWJvZHkgb24gYm90aCBzaWRlcyBvZiB0aGUgcG9saXRpY2FsIHNwZWN0cnVtIG5lcnZvdXMuLiAKRGVwZW5kaW5nIG9uIHRoZSBzcGEsIHNvbWUgc2VydmljZSBwcm92aWRlcnMgYWN0dWFsbHkgaGFkIHRvIGdldCBhICJsb2FuIiBmcm9tIHRoZWlyIHJlYWwgIm93bmVycyIgYmFjayBpbiBDaGluYSB0byBiZSBhYmxlIHRvIHRyYXZlbCBhbmQgd29yayBpbiB0aGVzZSBzcGVjaWZpYyBzcGFzLiAKUmFscGggTW9yc2Ugd2lsbCBiZSB0b2FzdG1hc3Rlci4gCkl0IGlzIGFsbCB0b28gZWFzeSB0byBpbWFnaW5lIGEgd29ybGQgd2hlcmUgYSBnb3Zlcm5tZW50IHNwb25zb3JlZCBmb3JtIG9mICJpZGVudGlmaWNhdGlvbiIgd291bGQgYmUgcmVxdWlyZWQgdG8gdXNlIGFueSBmb3JtIG9mIGVsZWN0cm9uaWMgcGF5bWVudC4gVGhpcyB3b3VsZCBnaXZlIHRoZSBnb3Zlcm5tZW50IGNvbXBsZXRlIGNvbnRyb2wgb3ZlciB3aG8gY291bGQgdXNlICJ0aGUgc3lzdGVtIiBhbmQgd2hvIGNvdWxkIG5vdC4gVGhlIHBvdGVudGlhbCBmb3IgdmFyaW91cyBmb3JtcyBvZiBjb2VyY2lvbiBhbmQgdHlyYW5ueSBpbiBzdWNoIGEgc2NlbmFyaW8gaXMgb2J2aW91cy4uIApCdXQsIGluIHRoaXMgbW9kZXJuIGFuZCB1bmFyZ3VhYmx5IHVuc3VzdGFpbmFibGUgZWNvbm9teSwgdGhlcmUgaXMgYSBzdHJvbmcgY29ycmVsYXRpb24gYmV0d2VlbiB0aGUgYW1vdW50IG9mIG1vbmV5IHNwZW50IG9uIHNvbWV0aGluZywgYW5kIHRoZSBDTzIgZW1pc3Npb25zIHJlcXVpcmVkIHRvIGJ1aWxkIHRoYXQgdGhpbmcgZnJvbSBzY3JhdGNoLCB3aXRoIGEgZmV3IGV4Y2VwdGlvbnMgKGJ1eWluZyBhIGZvcmVzdCB0byBwcmVzZXJ2ZSBpdCwgaW52ZXN0aW5nIGluIHN0ZWFkaWx5IGltcHJvdmluZyBuZXh0IGdlbmVyYXRpb24gc29sYXIgYW5kIGJhdHRlcnkgdGVjaG5vbG9naWVzKS4gRXZlbiB0aG91Z2ggdGhpcyBob3VzZSBpcyBtYWRlIG9mIHdvb2QsIGl0IHRvb2sgYSBsb3Qgb2Ygb2lsIHRvIG1ha2UgaXQsIGFuZCBnaXZlbiB0aGUgZGVjaWR1b3VzIHRyZWVzLCBhIGxvdCBvZiBjb2FsIGFuZCBtZXRoYW5lIGxlYWtpbmcgIm5hdHVyYWwiIGdhcyBpcyByZXF1aXJlZCB0byBoZWF0IHRoaXMgaG91c2UuIDIgcG9pbnRzICBzdWJtaXR0ZWQgMTkgZGF5cyBhZ28KRnJleXNpbmdlciBzYWlkIENoYXJpdHkgUG9rZXJzIFNvbHV0aW9ucyBpcyBlYXN5IHRvIHdvcmsgd2l0aCBhbmQgcHJvZHVjZXMgcmVzdWx0cy4gCkNhdXNpbmcgZnVydGhlciBzZXZlcmFuY2UgYW5kIGRpdmlkZSBkb2VzbiBoZWxwLCBiZWNhdXNlIHlvdSBzdGlsbCBzaGFyZSBhIGNvdW50cnkgd2l0aCB0aGUgcGVvcGxlIG9uIHRoZSBvcHBvc2l0ZSBzaWRlLiBDb21tb24gZ3JvdW5kIGhhcyB0byBiZSBmb3VuZCBvciBpdCB3aWxsIGp1c3QgYmVjb21lIG1vcmUgYW5kIG1vcmUgY29uZmxpY3QuIERlbW9jcmF0cyB3aW5uaW5nIDIwMjAgaXMgbm90IGdvaW5nIHRvIGJlIHRoZSBmaW5hbCBzb2x1dGlvbiB0byB0aGUgcHJvYmxlbTsgaXQgd2lsbCBwdXQgdGhlIHJpZ2h0IHNpZGUgaW50byBhIHN0aXIganVzdCBhcyAyMDE2IGRpZCBmb3IgdGhlIGxlZnQuLiAKNTQuIExlb25hcmQgTGF1ZGVyLCQ4LjIgYmlsbGlvbiwgV2hhcnRvbi4gClRoZSBsb3dlciB0aGUgY291bnQgdGhlIGJldHRlciBpbiBteSBvcGluaW9uLiBTdWJkaXZpZGluZyBzdGlsbCBjcmVhdGVzIGEgaGlnaGVyIHBvbHkgdGhvdWdoIGRvZXNuIGl0Py4gCkkgd2FzIHNvIGVhcmx5IEkgdm9sdW50ZWVyZWQgYXQgdGhlIGRvb3IgdGFraW5nIG1vbmV5IGFuZCBzZWxsaW5nIHNuYWNrcyB0aHJvdWdoIGludGVybWlzc2lvbi4gV2UgaGFkIHR3byBjaHVyY2ggZ3JvdXBzIGFuZCBhIGxhcmdlIGNvbnRpbmdlbmN5IGZyb20gUm9tYW5pYS4gSXQgd2FzIGEgYmlnIGNyb3dkIGFuZCB0aGV5IHNlZW1lZCB0byByZWFsbHkgZW5qb3kgdGhlIHNob3cuIFdoZW4gaXQgd2FzIHRpbWUgZm9yIG15IGdyb3VwIHRvIGdvIG9uIGFyb3VuZCAxMDozMHBtLCB3ZSBzdGlsbCBoYWQgYSBmdWxsIHRoZWF0cmUuIFdlIGRpZCBhIG5pY2UgbG9uZyBmb3JtIGltcHJvdiBzaG93IGNhbGxlZCBDbG9zZSBRdWFydGVycywgd2hlcmUgYWxsIHNjZW5lcyB3ZXJlIHdpdGhpbiAxNSBtaW51dGVzIG9mIGVhY2ggb3RoZXIgYW5kIGluIHRoZSBzYW1lIGxvY2F0aW9uIChhIHByaXNvbiBhcyBpdCB0dXJuZWQgb3V0KS4gVGhlIGF1ZGllbmNlIGxhdWdoZWQgYSBsb3QgYW5kIEkgaGFkIGEgaGFyZCB0aW1lIG5vdCBjcmFja2luZyB1cCBteXNlbGYgd2hlbiBCcm9va2UgYXNrZWQgbWUgIkFyZSB5b3UgbG9va2luZyBmb3IgbG92ZT8iIEkgcmVhbGx5IHdhc24ndCB0aGF0IG5lcnZvdXMgd2hlbiBJIGdvdCBvbiBzdGFnZSB0aGlzIHRpbWUuIEkgc3VwcG9zZSBJJ20gZWl0aGVyIGdldHRpbmcgdXNlZCB0byBpdCBvciB0dXJuaW5nIGludG8gYSBtZWFuZXIgcGVyc29uLgpBIGNvdXBsZSBvZiB3ZWVrcyBiZWZvcmUgeW91IHRpZSB0aGUga25vdCwgcGxheSBob29reSBhbmQgc3BlbmQgYSBkYXkgYXQgYSBzcGEgICBhd2F5IGZyb20gd29yayBhbmQgd2VkZGluZyBob29wbGEuIApOZXZlcnRoZWxlc3MsIGhpcyB0aXRsZXMgd2VyZSBpbXBvcnRhbnQgdG8gaGltLCBhbmQgdGhleSBhcmUgbmV2ZXIgbmV1dHJhbC4gCk1pdCBpaHJlciBJZGVlLCBpaHJlIGJldGFndGVuIE5hY2hiYXJuIG1pdCBkZW0gS3Vuc3Rwcm9qZWN0IFRyaWJ1dGUgenUgZWhyZW4gdW5kIGlobmVuIGF1ZiBzbyBVbnN0ZXJibGljaGtlaXQgaW4gZGllc2VyIHZvbiBWZXJnIGdlemVpY2huZXRlbiBHZWdlbmQgenUgZ2ViZW4sIHdhciBDYW1pbGxhIGltIFNlcHRlbWJlciAyMDA5IGF1ZiBkZW0gRmVzdGl2YWwgdmVydHJldGVuLiBUYXRrciB1bnRlcnN0IHZvbiBEb25hIFZpb2xldGEsIERvbmEgTWFyZ2FyaWRhLCBTZW5ob3IgTWlyYSwgU2VuaG9yIEFudG9uaW8gdW5kIGFsbGVuIGFuZGVyZW4gQmV3b2huZXJuIGRlciBCZWNvIGRhcyBGYXJpbmhhcy4uIApTYW1lIHRoaW5nIHdpdGggc291bmRpbmcgdGhlIGFsYXJtIG92ZXIgZ2x5cGhvc2F0ZSBsZXZlbHMgaW4gb3VyIGZvb2QgY2hhaW4gMjAgeWVhcnMgYWdvLiJjcmF6eSIuIApFc3BlY2lhbGx5IHNpbmNlIHRoZXNlIHRvdXJuYW1lbnRzIHRlbmQgdG8gcnVuIGxvbmcgYXMgdGhlcmUgYXJlIGEgbG90IG9mIHNwbGl0IGFsbCBpbiBwb3RzLCBibGluZCBzdGVhbGluZyBvZiB0aGUgcmVsYXRpdmVseSBsYXJnZSBibGluZHMgaXMgdGhlIGtleSB0byB2aWN0b3J5LiAKQmxhY2tqYWNrIHRvdXJuYW1lbnRzIGZvciB0aGUgbW9zdCBjb21wZXRpdGl2ZSBnYW1ibGVycyBleGlzdCBvbiBhbGwgc2hpcHMsIHdoaWxlIFRleGFzIEhvbGQgJ0VtIGlzIG9mZmVyZWQgb24gbW9zdC4gT24gc2VsZWN0IHNoaXBzLCBwbGF5IGZpdmUgY2FyZCBDYXJpYmJlYW4gU3R1ZCBQb2tlciB0byB3aW4gYXQgbGVhc3QgJDE1LDAwMCwgYmF0dGxlIGZvciB0aGUgYmVzdCBoYW5kIHdpdGggTGV0IEl0IFJpZGUgb3IgdmlzaXQgdGhlIHN0YXRlIG9mIHRoZSBhcnQgVGV4YXMgSG9sZCAnRW0gUG9rZXIgdGFibGUgZGVzaWduZWQgdG8gcmVkdWNlIHBsYXllciB3YWl0IHRpbWVzIGJ5IDUwIHRvIDYwIHBlcmNlbnQuIApDeW50aGlhIERhbGUgcmV0dXJucyB0byByZXZlcmVkICdTdHJlZXQgTGVnYWwnIHJvbGUgMjUgeWVhcnMgYWZ0ZXIgb3JpZ2luYWwKQW5kIGdhbWJsaW5nIGlzbid0IHBlcm1pdHRlZCBhbnl3aGVyZSBleGNlcHQgd2hlcmUgaXQncyBleHByZXNzbHkgYWxsb3dlZC4gCkhvYmJlcyBob2JiaWVzICAyIHBvaW50cyAgc3VibWl0dGVkIDMgbW9udGhzIGFnbwpEdSBoYXIgYWxsdGlkIGVyZmFyZW4gcGVyc29uYWwgcnVudCBkaWcgc29tIGthbiBoamxwYSBkaWcgb20gZHUgciBvc2tlciBwIG5nb3QuRXR0IGpvYmIgaW5vbSBzZXJ2aWNlL2hhbmRlbCByIGRvY2sganVzdCBldHQgam9iYiBpbm9tIHNlcnZpY2UvaGFuZGVsLiBBdHQgZ3JhIGt1bmRlbiBuamQgciBoZ3N0YSBwcmlvLCBvYXZzZXR0IG9tIGR1IHR5Y2tlciBhdHQga3VuZGVuIHIgZW4gaWRpb3QgZWxsZXIgaW50ZS4gVmlzc2EgZGFnYXIga29tbWVyIGR1IGhhdGEgZGl0dCBqb2JiIGZyIGF0dCBhbGxhIHJ1bnRvbSBkaWcgciBpZGlvdGVyLCB2aXNzYSBkYWdhciBoYXIgZHUgb3Ryb2xpZ3Qga3VsIG9jaCBkZXQgciByb2xpZ3QgYXR0IGcgdGlsbCBqb2JiZXQuIApIZSB0aGVuIHBsYXkgdGhlIGdhbWUgdG8gdGhlIHBvaW50IHRoYXQgTm8gT25lIGlzIGF0dGFja2luZyBoaW0gZm9yIGhpcyBoaWdobHkgYWRkaWN0aXZlIGRydWcsIHdlIGF0dGFjayB0aGUgZG9jdG9ycyB3aG8gcHJlc2NyaWJlZCBpdC5oZSB0YWxrIHRvIGV2ZXJ5b25lIGFib3V0IGhvdyBpdCBpcyB2aXRhbCB0aGF0IHdlIGFsbCBoZWxwIG91ciBmZWxsb3cgbWFuLiBUaGF0IHdlIHNob3VsZCBhbGwgc2hhcmUgdGhlIHN1bmxpZ2h0IG9mIHN1Y2Nlc3MgYW5kIHByb3NwZXJpdHkgd2l0aCB0aG9zZSB3aG8gaGF2ZSBsZXNzIHRoYW4gd2hhdCB3ZSBoYXZlLiAKQnkgdGhlIHdheSwgd2h5IHNob3VsZCBhbnlvbmUgYmVsaWV2ZSB0aGF0IHRoZSBOYXppcywgYWxvbmUgYW1vbmcgYWxsIHRoZSBwb2xpdGljaWFucyBpbiBFYXJ0aCBoaXN0b3J5LCBtZWFudCB0byBrZWVwIGFsbCB0aGVpciBjYW1wYWlnbiBwcm9taXNlcz8gWW91IHB1dCBmYXIgdG9vIG11Y2ggZmFpdGggaW4gYSBwcm9ncmFtIHRoYXQgd2FzIGEgZGVjYWRlIG91dCBvZiBkYXRlIHdoZW4gSGl0bGVyIHRvb2sgcG93ZXIuCkhhbmQgMikgSSB0aGluayB5b3UgY2FuIG1ha2UgYSBjYXNlIGZvciBjYmV0IG9yIGNoZWNrIGhlcmUgYnV0IEkgbGlrZSBjYmV0IGEgbGl0dGxlIG1vcmUsIGVzcGVjaWFsbHkgaWYgeW91IGhhdmUgYSBjbHViIGluIHlvdXIgaGFuZC4gWWVzIEJUTiBoYXMgc29tZSBRUSBUVCBhbmQgSlRzIGluIGhpcyByYW5nZSBidXQgSSBzZWVuIHBsYXllcnMgZG8gdGhpcyB3aXRoIGhhbmRzIGxpa2UgQVEsIEFUIEFKcywgOTkgNzcsIGFuZCBzb21lIHN1aXRlZCBjb25uZWN0b3JzLiBCdXQgeW91IGJsb2NrIGhhbmRzIGxpa2UgQUogS0ogQVQgYW5kIEtULiBJZiB5b3UgYmV0IHNtYWxsIGFuZCBtYW5pYWMgY2FsbHMgb3IgcmFpc2VzIEkgd291bGRuIGJlIHNob2NrZWQgaWYgeW91IHN0aWxsIGhhdmUgdGhlIGJlc3QgaGFuZCBzbyBJIGJlIHN0aWNraW5nIGFyb3VuZCBoZXJlIGZvciBhIGxpdHRsZSBsb25nZXIuCllvdSBjYW4gYWxzbyBnbyB0byBNaWFyaSBUZXhhcyBvciBqdXN0IGdvIHRvIEhvb2tlciBIaWxsIHdoaWNoIEkgYWN0dWFsbHkgZG8gbm90IHJlY29tbWVuZC4uIApMYWR5R2FHYSkuIApIaXMgZmF0aGVyIHdhcyBpbiB0aGUgY29uc3RydWN0aW9uIGluZHVzdHJ5IGFuZCBoaXMgbW90aGVyIHNvbGQgc3RvY2sgZm9yIFBHIE5ld3NvbSBtYXJyaWVkIGhpcyB3aWZlLCBUZXNzYSwgaW4gMTk2NiBhbmQgdGhlIGNvdXBsZSBoYWQgdGhlaXIgc29uIEdhdmluIGEgeWVhciBsYXRlciBhbmQgYSBkYXVnaHRlciwgSGlsYXJ5IG5vdyBIaWxhcnkgTmV3c29tIENhbGxhbiBpbiAxOTY4LiAKQmV0dGluZyBvbiB0d28gb2YgdGhlIHNlY3Rpb25zIG9yIHR3byBvZiB0aGUgY29sdW1ucywgb25lIGhhcyBhbiBhbG1vc3QgdHdvIGluIHRocmVlIGNoYW5jZSBvZiBhIHdpbm5pbmcgYmV0LiBUaG91Z2ggdGhlIHBheW91dCB3b3VsZG4ndCBiZSBzcGVjdGFjdWxhciwgaXQgd291bGQga2VlcCBtZSBpbiB0aGUgZ2FtZSwgcmlnaHQ/LiAKT24gdGhlIGxhc3QgU2F0dXJkYXkgb2YgZXZlcnkgRmVicnVhcnksIHN3b3JkIHN3YWxsb3dlcnMgZ2F0aGVyIGF0IFJpcGxleSBCZWxpZXZlIEl0IG9yIE5vdCBtdXNldW1zIHRocm91Z2hvdXQgQW1lcmljYSB0byBjb21tZW1vcmF0ZSBXb3JsZCBTd29yZCBTd2FsbG93ZXIgRGF5LiBJdCBhIHNpZGVzaG93IHNvIGRhbmdlcm91cyB0aGVyZSBhcmUgb25seSBhIGZldyBkb3plbiBmdWxsIHRpbWUgcHJvZmVzc2lvbmFscywgYWNjb3JkaW5nIHRvIHRyYWRlIGFzc29jaWF0aW9uIFN3b3JkIFN3YWxsb3dlcnMgQXNzb2NpYXRpb24gSW50ZXJuYXRpb25hbCAoU1NBSSkuIFRoZSBzb2NpZXR5IGNsYWltcyBzd29yZCBzd2FsbG93aW5nIHRha2VzIDMgMTAgeWVhcnMgdG8gbGVhcm4sIHRob3VnaCBzb21lIHNheSB0aGV5IG1hc3RlcmVkIGl0IGluIHNpeCBtb250aHMuIFdlIHRhbGtlZCB0byBmaXZlIHByb2Zlc3Npb25hbHMgYWJvdXQgaG93IGl0IGRvbmUgYW5kIGhvdyBpdCBoYXMgYWxtb3N0IGtpbGxlZCB0aGVtLgpNeSBmcmllbmQgdGhpbmtzIHRoaXMgaXMgYSBnb29kIGlkZWEgYW55d2F5LiAKU29tZUludGVybmV0UmFuZG8gIDggcG9pbnRzICBzdWJtaXR0ZWQgMTggaG91cnMgYWdvCkZvciBldmVyeSAxMCBwbGF5ZXJzIGluIHRoZSB0b3VybmFtZW50IHRoZXJlIHdvdWxkIGJlIGEgcHJpemUgcG9vbCBvZiAkMTMsNTAwLCBlbm91Z2ggZm9yIHRoZSBzaW5nbGUgYnV5IGluIHRvIHRoZSBXU09QIGFuZCBzb21lIGV4dHJhIGZvciBzcGVuZGluZyBtb25leS4gCkR1ZGUgbm8sIGRvbiBtb3ZlIGluIHdpdGggdGhpcyBndXkuIEFsc28sIGNoZWNrb3V0IHIvSlVTVE5PTUlMLiBXaGlsZSBJIHN5bXBhdGhpemUgd2l0aCB5b3VyIGJveWZyaWVuZCBkb2luZyB3aGF0IGhlIGRvaW5nIG91dCBvZiBGZWFyLCBPYmxpZ2F0aW9uIGFuZCBHdWlsdCAoY29tbW9ubHkgcmVmZXJyZWQgdG8gYXMgdGhlIEZPRyksIHlvdSBzaG91bGQgbm90IHN1YmplY3QgeW91cnNlbGYgdG8gaXQgYW5kIHNob3VsZG4gcHJvY2VlZCBpbiBhIHJlbGF0aW9uc2hpcCB3aXRoIGFub3RoZXIgYWR1bHQgd2hvIGNhbiBzZXQgY2xlYXIgYm91bmRhcmllcyB3aXRoIGhpcyBmYW1pbHkuIApUZXJyYW4gcmVhcGVyIHJ1c2guIApSb2xsLCB3aG8gd2FzIGd1bm5lZCBkb3duIGR1cmluZyB0aGUgc2hvb3RpbmcgcmFtcGFnZSBpbiBUdWNzb24uIFNlbi4gSm9obiBNY0NhaW4gKFIgQVopIGR1cmluZyB0aGUgZnVuZXJhbCBzZXJ2aWNlIGR1cmluZyB0aGUgZnVuZXJhbCBzZXJ2aWNlIGZvciBuaW5lIHllYXIgb2xkIENocmlzdGluYSBUYXlsb3IgR3JlZW4gYXQgU3QuIApJIG5vdCBmcm9tIEJ1ZmZhbG8sIGJ1dCBJIGxvdmUgdGhlIEJ1ZmZhbG8gU2FicmVzLiBJIGp1c3Qgc3RhcnRpbmcgdG8gdGhpbmsgdGhlIGZyYW5jaGlzZSBoYXMgYSBsb3NlciBtZW50YWxpdHkuIFdlIGRvbiB3YW50IHRvIGxvc2UsIGJ1dCBpdCBlYXNpZXIgdG8gY29udmluY2Ugb3Vyc2VsdmVzIGl0cyBPSyB0byBsb3NlIHdoZW4gaXQgc3RhcnRzIGhhcHBlbmluZy4gCkhvcm4gdHJhaW5lciwgR2xlbm4gUnVzaHRvbiwgaGFkIHNuYXBwZWQgYSBjb3VwbGUgb2YgcGhvdG9zIG9mIFBhY3F1aWFvIGxpa2UgYW4gZXhjaXRlZCBmYW4gd2hlbiB0aGV5IHdlcmUgb24gc3RhZ2UgZm9yIHRoZSB3ZWlnaCBpbi4gV2hlbiBoZSBjYW1lIGRvd24gb2ZmIGl0LCBoZSB3YXMgdGFsa2luZyB1cCBoaXMgYm95LiAiSW4gdGhlIGxhdGVyIHN0YWdlcyBvZiB0aGlzIGZpZ2h0IHdlIHRoaW5rIGl0IGlzIGdvaW5nIHRvIFN1bmRheSwgQmxvb2R5IFN1bmRheSwiIFJ1c2h0b24gcHJvbWlzZWQuIApQb2tlciBpcyBhIHBvcHVsYXIgY2FyZCBnYW1lIHRoYXQgaXMgdXN1YWxseSBiZWluZyBwbGF5ZWQgaW4gY2FzaW5vcyBhbmQgYmVjYXVzZSBvZiBpdHMgcG9wdWxhcml0eSBtb3JlIHBsYXllcnMgaGFzIGJlY29tZSBlbnRodXNpYXN0aWMgb24gcGxheWluZyBpdC4gVGhlIGdhbWUgaGFzIGFscmVhZHkgYmVlbiBrbm93biBmb3IgYSBsb25nIHRpbWUgYW5kIGl0IGNvbnRpbnVlcyB0byBiZSBrbm93biB0aGF0IGl0IGV2ZW4gY29ucXVlcmVkIHRoZSB3b3JsZCBvZiBpbnRlcm5ldC4KSXQgdGhlIHF1YWxpZnlpbmcgdG90YWwgZm9yIHJlZ2lvbmFscyAoQ1BVKSwgc28gaXQgYmUgYSBtb3RpdmF0aW5nIGdvYWwuV2hlbiBJIGZpcnN0IHN0YXJ0ZWQgcnVubmluZywgSSBjb3VsZG4gcnVuIGZvciBtb3JlIHRoYW4gMyBtaW51dGVzLCBidXQgSSBoYWQgYSBnb2FsIG9mIHJ1bm5pbmcgYSBzdWIgMzAgbWluIDVrLiBJIGVuZGVkIHVwIG1lZXRpbmcgdGhhdCBpbiBhYm91dCB0d28gbW9udGhzLCBhbmQgSSBkaXNjb3ZlcmVkIHRoYXQgSSByZWFsbHkgbGlrZSBzZXR0aW5nIGdvYWxzIHRoYXQgKDEpIGFyZSBtb2RlcmF0ZWx5IGNoYWxsZW5naW5nLCBidXQgZG9hYmxlOyAoMikgYXJlIGFjaGlldmFibGUgd2l0aCBwcm9wZXIgY29uc2lzdGVuY3kuIApUaGlzIGlzIG5vdCBhYm91dCBwcm9maXRzIHRvIHNoYXJlaG9sZGVycywgdGhpcyBpcyBhYm91dCB0aGUgYWJpbGl0eSB0byBwYXkgZG9jdG9ycyBmb3IgdGhlaXIgd29yay4gSWYgYSBob3NwaXRhbCBpc24gbWFraW5nIGVub3VnaCBtb25leSBiZWNhdXNlIHRoZSBnb3Zlcm5tZW50IGNhbiBvciB3b24gcGF5IHRoZW0gd2hhdCB0aGV5IGFyZSB3b3J0aCwgdGhleSB3aHkgd291bGQgdGhleSBjb250aW51ZSBpbiB0aGF0IGZpZWxkPyBUaGUgb25seSB3YXkgdG8gY29udHJvbCB0aGUgY29zdCBhdCB0aGF0IHBvaW50IGlzIHRocm91Z2ggcmF0aW9uaW5nIG9yIGJ5IG5vdCBwYXlpbmcgZG9jdG9ycyBzdWNoIGEgaGlnaCBzYWxhcnkuIApOb3Qgc3VyZSBpZiB0aGlzIGlzIGFsd2F5cyBhIGJvbnVzLCBidXQgSSB0aGluayBmb3IgdGhpcyB0cmlwIGZvciBtZSB0aGlzIHRpbWUgaXQgd2FzOiB0aGUgcHJvbW90aW9ucy4gClZvaWQgc2h1ZmZsZURlYWwgKGludCBteUNhcmQxLGludCBteUNhcmQyLCBpbnQgblBsYXllcnMsIGludGRlY2spe2ZvciAoaT0wO2kKSnVzdCBlbm91Z2ggcGVvcGxlIHRvIGJlIGluIGhpcyBzaWRlLiAKQXMgYW4gZXhhbXBsZSwgaGUgY2l0ZXMgaGlzIGZpcnN0IGNvdXJzZSBiZWV0IGRpc2guIEl0cyBpbmdyZWRpZW50cyBhcmUgYSBmYW1pbGlhciBjb21iaW5hdGlvbjogYmVldHMsIGdvYXQgY2hlZXNlIGFuZCBiYWxzYW1pYyB2aW5lZ2FyLiBUaGUgYmVldHMgYXJlIHJvYXN0ZWQgYW5kIHVzZWQgaW4gYSBkcmVzc2luZyAgIHNvIGZhciwgbm90aGluZyB0b28gdW51c3VhbC4gCldoYXQgQ0VTIDIwMTcgSGFzIFRvIE9mZmVyIEZvciBUZWNoIExvdmVyc1RoZSBOZXdlc3QgVGVjaCBBdCBUaGVUaGUgSW50ZXJuYXRpb25hbCBDb25zdW1lciBFbGVjdHJvbmljcyBTaG93IChDRVMgMjAxNylDb3NtbyBDb25uZWN0ZWQsIGEgcmVhciBicmFrZSBsaWdodCB3aGljaCBjYW4gYmUgYXR0YWNoZWQgdG8gdGhlIGJhY2sgb2YgYW55IGhlbG1ldCBhbmQgYWxlcnQgZW1lcmdlbmNlIHNlcnZpY2VzIGluIGV2ZW50IG9mIGFjY2lkZW50IHRocm91Z2ggZ2VvbG9jYXRpb24gYXBwLCBpcyBzZWVuIGR1cmluZyBhIHByZXNzIGV2ZW50IGZvciBDRVMgMjAxNy4gKFBob3RvIGJ5IEFsZXggV29uZy9HZXR0eSBJbWFnZXMpCkkgd29ya2VkIG9uIGEgaG91c2Ugc2hvdyAod2hlcmUgdGhlIGFjdG9ycyBsaXZlIHRvZ2V0aGVyIGZvciBhbiBhbGxvdHRlZCB0aW1lIGFuZCBhcmVuIGFsbG93ZWQgdG8gbGVhdmUpIGFuZCB0aGF0IHdhcyBtdWNoIG1vcmUgb24gdGhlIHJlYWxpdHkgZW5kICAgYXMgY2xvc2UgYXMgeW91IGNhbiBiZSB3aGlsZSBtYWtpbmcgYW55dGhpbmcgZm9yIGVudGVydGFpbm1lbnQuIEZpbG1pbmcgMjQvNywgaGlkZGVuIGNhbWVyYXMgZXZlcnl3aGVyZS4gVGhlIHByb2R1Y2VycyBsZWdpdGltYXRlbHkgdHJpZWQgdG8gaGlkZSBpbmZvcm1hdGlvbiBmcm9tIHRoZSBjYXN0LCBsaWtlIHdoYXQgdGhlIGNoYWxsZW5nZXMgd291bGQgYmUsIHNvIHRoZSBzdXJwcmlzZSB3b3VsZCBiZSBnZW51aW5lIGFuZCB0aGV5IHdvdWxkbiBiZSBhYmxlIHRvIHBsYW4gYWhlYWQuIApTaGUgYWxzbywgaG93ZXZlciwgc2VlcyBjaGFsbGVuZ2VzOiB3aWxsIGJlIGNyaXRpY2FsIGFzIHdpbGwgdGhlIG5lZWQgdG8ga2VlcCBjb250ZW50IGZyZXNoLCBpbnRlcmVzdGluZyBhbmQgbWFya2V0aW5nIFtpcyBpbXBvcnRhbnRdIHNvIHBlb3BsZSBrbm93IHRoaXMgcHJvZHVjdCBleGlzdHMuIApTaW5jZSBsYXN0IHllYXIsIHRoZSB3b3JsZCdzIHR3byBsYXJnZXN0IGVjb25vbWllcyBoYXZlIGV4Y2hhbmdlZCB0aXQgZm9yIHRhdCB0YXJpZmZzIG9uIG1vcmUgdGhhbiAkMzYwIGJpbGxpb24gaW4gdHdvIHdheSB0cmFkZSwgd2l0aCB0aGUgbGFyZ2VzdCBhbW91bnQsIG1vcmUgdGhhbiAkMjUwIGJpbGxpb24sIGltcG9zZWQgYnkgV2FzaGluZ3Rvbi4KTWlkZGxlIG1hbmFnZW1lbnQgZXhwYXRzOiBzZWNvbmQgcmF0ZSB3b3JrZXJzIHdobyBjYW4gY3V0IGl0IGJhY2sgaG9tZS4KVGhlcmUgaGF2ZSBiZWVuIGluc3RhbmNlcyBpbiB0aGUgcGFzdCBvZiB0aGUgcHJvZ3JhbXMgYmVpbmcgdXNlZCBieSB3ZWIgc2l0ZXMgYmVpbmcgY29tcHJvbWlzZWQgdG8gb3V0c2lkZSBwYXJ0aWVzIHdobyB0aGVuIGV4cGxvaXRlZCB0aGUgcHJvZ3JhbSB0byBjaGVhdCBhdCB0aGUgZ2FtZSBpdHNlbGYuIApXZWxsLCBJIGNhbWUgZnJvbSBhIHJlYWxseSBzbWFsbCB0b3duIGFuZCB3ZWVkIGhhZCBiYXJlbHkgbWFkZSBpdCB0aGVyZS4gCmhvdXNlIGFnZW5jeSB0YWxrIGRvbWluYXRlcyBzdGFnZSBhdCBBTkEKSSBiZXQgd2UgYmUgcGxheWluZyBhcyBhIGh1bWFuLCBidXQgdGhlcmUgd2lsbCBiZSBhIGxvdCBvZiBhbGllbnMgd2UgY2FuIGludGVyYWN0IHdpdGggaW4gdGhlIGdhbWUgYXMgTlBDcyBhbmQgcHJvYmFibHkgaGF2ZSBhcyBjb21wYW5pb25zLiAKTGF0aW4gQW1lcmljYQpOb3QgZGVhZCBkZWFkLCBidXQgcGVyaGFwcyBpdHMgc2luZ2xlIGRlZmluaW5nIHRyYWl0IHdhcyB3ZWFrZW5lZCBmcm9tIHR3byBkaWZmZXJlbnQgd2F5cy4gQW5kIHJlbWVtYmVyIHdpdGggYSBzdGF0IGxpa2UgK21heCByZXMsIGl0IGJlbmVmaXRzIGZyb20gaW5jcmVhc2luZyByZXR1cm5zOiBnb2luZyBmcm9tIDc4ID44MCBpcyBhIGJpZ2dlciBib29zdCB0aGFuIDc1ID43Ny4KRWRpdDogSSBkbyBpdCBqb3lmdWxseSwgcmVncmV0dGluZyBub3RoaW5nLCBldmVuIGFzIEkgZGllIHB1bmNoaW5nIHRoZSBwdXJwbGUgYXJtb3VyIG9mIHRoZSBndXkgd2hvIHR1cm5zIGFyb3VuZCBhbmQgdW5sb2FkcyBhIHByZWNpc2lvbiBjaG9rZWQgcGVhY2VrZWVwZXIgaW50byBteSBoZWFkLiBJIHdpbGwgaGF2ZSBmZWx0IG1vcmUgYWxpdmUgaW4gdGhvc2UgZmV3IHNlY29uZHMgdGhhbiB0aGUgZW50aXJlIHRpbWUgZm9sbG93aW5nIHRoYXQgZmF0IGZ1Y2sgaW50byB0aGUgYmFycmVuIGhhdGUgZmlsbGVkIGxhaXIgb2YgbWlzZXJ5IGFuZCBkb29tIHRoYXQgbWFrZXMgTW9yaWEgbG9vayBsaWtlIHRoZSB0aHJpdmluZyBoYWxscyBvZiBnbG9yeSBHaW1saSBleHBlY3RlZC4uIApUaGUgZmFjdCB0aGF0IEkgc2F5IEhleSB5ZWFoIEkgZG8gc3VwcG9ydCBsaWZlLCBCdXQgSSBzdXBwb3J0IHlvdSwgYW5kIGVtcGF0aGl6ZSB3aXRoIHlvdSBhbmQgeW91ciBzdHJ1Z2dsZXMuIApBbWF6b24gaXMgZXNzZW50aWFsbHkgdGhlIGxhcmdlc3Qgc3VwcGx5IGFuZCBzaGlwcGluZyBjb25kdWl0IGZvciB0aGUgY291bnRyeSwgc28geW91IHdvdWxkIGJlIHRocm93aW5nIG91ciBlY29ub215IGZvciBhIGh1Z2UgbG9vcC4gClRoZXkgZ290IGhpbSBhIGRpZ2l0YWwgY2FtZXJhIHRvIHVzZSBvbmNlIGJhYnkgd2FzIGJvcm4gYW5kIHNvbWUgY29vbCBjYXIgb3JnYW5pemVycyBmb3IgaGlzIHByaWRlIGFuZCBqb3khLiAKVGhlIEtpbmcgT2YgRmlnaHRlcnMgOTggVWx0aW1hdGUgTWF0Y2ggRmluYWwgRWRpdGlvbiBQQyBHYW1lIE92ZXJ2aWV3LiAKVGhlcmUgaXMgYSBnb29kIGV4ZXJjaXNlIGhhbmdpbmcgZnJvbSBhIGJhciB5b3Ugb25seSBkbyB0aGUgZmlyc3QgcGFydCBvZiBhIHB1bGwgdXAsIGRyb3BwaW5nIHRoZSBzaG91bGRlcnMgcmVhbGx5IHRoaWdodC4gCkFyZSB0aGVyZSBhbnkgc29sdXRpb25zIGJlc2lkZXMgdGhlIGF0dGFjaG1lbnRzIHRoYXQgZ28gb24gYSBzaG91bGRlciBzdHJhcC4gVW5mb3J0dW5hdGVseSBJIHRoaW5rIEkgY291bGQgY3VzdG9tIG9yZGVyZWQgcG9ja2V0cyBJIGNvdWxkIHJlYWNoIGJldHRlci4uIApBbHRlcm5hdGl2ZWx5LCB5b3UgY2FuIHdhaXQgYW5vdGhlciB5ZWFyIGFuZCBzaWduIHVwIGltbWVkaWF0ZWx5IGFmdGVyIHRoZSAyMDE5IG1hcmF0aG9uLCB3aGVuIDIwMjAgaXMgYXQgaXRzIGxvd2VzdCBjb3N0IDtQLiAKR2VudWluZSBxdWVzdGlvbnMgc2Vla2luZyBhZHZpY2Ugb24gc2FmZSBzcGFjZXMgYW5kIHByYWN0aWNlcyB0byBiZSB1dGlsaXplZCB3aWxsIGJlIGFsbG93ZWQuIApMZWFybiBtb3JlIGFib3V0IFJheSBCcmFuZG9uCkl0IGh1cnQgaGltIHRoYXQgUmV2aXZhbCB3YXNuJ3QgcmVjZWl2ZWQgd2VsbCB3aGljaCBtZWFucyBoZSBjYXJlZCBhYm91dCBpdCBhbmQgdGhhdCBpdCB3YXMgdGhlIGFsYnVtIGhlIHdhbnRlZCB0byBtYWtlIGFuZCByZWxlYXNlIGF0IHRoZSB0aW1lLktpbmdhc2toYW4gIDYgcG9pbnRzICBzdWJtaXR0ZWQgMTIgZGF5cyBhZ29OYWggaW0gcHJldHR5IHN1cmUgeW91IHJlZnVzZSB0byB1bmRlcnN0YW5kIG1lLCBpbSBzYXlpbmcgRW0gZG9lc250IHNvbGVseSBoYXZlIHRvIHJlbHkgb24gYW5nZXIgaW4gb3JkZXIgdG8gbWFrZSBhIHNvbmcgZ29vZCwgaGUgaGFzIGV2ZXJ5dGhpbmcgdGhhdCBpIGhhdmUgbGlzdGVkIGluIG15IG9yaWdpbmFsIGNvbW1lbnQsIGFuZCBwdXR0aW5nIGVtb3Rpb25zIG9uIHRvcCBvZiBhbGwgdGhvc2UsIHllYWgsIHRoYXQganVzdCBoYXBwZW5lZCB0byBiZSBhbmdlciB3aGVuIGl0IGNhbWUgdG8gS2FtaWthemUsIGJ1dCBpdCBkb2VzbnQgaGF2ZSB0byBiZSBqdXN0IGxpbWl0ZWQgdG8gYW5nZXIuVGhlIHJlYXNvbiB3aHkgUmV2aXZhbCB3YXMgc2hpdCB3YXMgYmVjYXVzZSBldmVyeXRoaW5nIGZyb20gaGlzIGZsb3cgdG8gZmVhdHVyZXMgdG8gcHJvZHVjdGlvbiB3YXMgdGVycmlibGUsIG5vdCBqdXN0ICJsYWNrIG9mIGFuZ2VyIi4gSG9uZXN0bHkgaWYgdGhpcyBjb21tZW50IGlzbnQgZW5vdWdoIGZvciB5b3UgaWRrIGhvdyBlbHNlIHRvIHB1dCBpdC4uIApXaHk/IFRoZSBjb25zdGFudCBhbmQgZnVuIGVuZ2FnZW1lbnQuIFlvdXIgbmV4dCByb2xsIG9mIGhlcm9lcywgZmluYWxseSBnZXR0aW5nIHRoYXQgdGhyZWUgc3RhciBoZXJvLCB0aGUgc3RyZWFrIG9mIGZpZ2h0cyBiZWluZyB3b24sIHNsb3dseSBvdmVyY29taW5nIHN0cm9uZyBvcHBvbmVudHMsIGFkYXB0aW5nIHlvdXIgc3RyYXRlZ3kgYmVjYXVzZSBhbm90aGVyIHBsYXllciBoYXMgc25hZ2dlZCBzb21ldGhpbmcgeW91IG5lZWQsIGV0Yy4gCkhlIGhhZCBhbiBlbXBoYXNpcyBpbiBuZXVyb2xvZ3kgYW5kIGhhcyBhIGJlc3Qgc2VsbGVyIHRoZSBzZWNvbmQgZWRpdGlvbiBvZiBQaHlzaWNhbCBNZWRpY2luZS4gClNvbWUgb2YgdGhlIGxlc3MgZGVhZGx5IGFuZCBtb3JlIGZ1biBhbmltYWxzIGFyZSB0aGUgbW9ua2V5cywgc2xvdGhzIGFuZCBzdGFydGVkIGFuZCBwZW9wbGUgd2VyZSBqdXN0IG1pbGxpbmcgYWJvdXQgbG9va2luZyBmb3IgYSBjb3JuZXIgYW5kIGdldHRpbmcgYSBkcmluayBvcmFuZ2VhZGUgdGhhdCBpcyAuIApDZXJ0YWluIGZhY3RvcnMgaW4gTVRUIHBsYXkgaGF2ZSBpbmhlcmVudCB2YWx1ZSBvbiB5b3VyIGhvbGUgY2FyZHMuIEFLb3MgaXMgbXVjaCBtb3JlIHBvd2VyZnVsIHdoZW4geW91IGFyZSBhIGJpZyBzdGFjaywgYXMgY29tcGFyZWQgdG8gd2hlbiB5b3UgYXJlIGFtb25nc3QgdGhlIHNob3J0IHN0YWNrcyBhbmQgcGxheWluZyBvbiB0aGUgYnViYmxlLiAKTGVzIGxpZW5zLCBsYSB0ZW5kcmVzc2UsIGxlcyByZW5jb250cmVzLCBsJ2Ftb3VyLCBsZXMgY29udGFjdHMgcGh5c2lxdWVzLCBzZXJyZXIgcXVlbHF1J3VuIGRhbnMgc2VzIGJyYXMsIHVuZSByZWxhdGlvbiBhdmVjIHVuIHRocmFwZXV0ZSBlbXBhdGhpcXVlLCBiZWF1Y291cCBkZSBjaG9zZXMgcGV1dmVudCBhdSBmaWwgZHUgdGVtcHMgY29udHJpYnVlciAgInJwYXJlciIgbGUgbWFucXVlIG91IGxhIGJsZXNzdXJlIHBzeWNoaXF1ZS4uIApUaGlzIHdhcyBhIHNpZ25pZmljYW50IHJlcG9ydC4gQXMgaXQgdHVybnMgb3V0IE1vcnNlIG1ha2VzIHRoZSBmaXJzdCBwdWJsaWMgZGVtb25zdHJhdGlvbiBvZiBoaXMgYW5kIEFsZnJlZCBWYWlsIHJlY29yZGluZyBlbGVjdHJvbWFnZW50aWMgdGVsZWdyYXBoIG9uIEphbnVhcnkgNiAxODM4IGF0IFNwZWVkd2VsbCBJcm9ud29ya3MgbmVhciBNb3JyaXN0b3duLCBOZXcgSmVyc2V5LCBqdXN0IHdlZWtzIGJlZm9yZSB0aGlzIEpGSSBhcHBlYXJhbmNlLgpJdCBpcyBzdXBwb3J0ZWQgYnkgbW9yZSB0aGFuIDEwMDAgY2FycGFya2luZyBzcG90cyB3aXRoIHRoZSBjZW50cmUgdW5kZXJnb2luZyBpdHMgbW9zdCByZWNlbnQgcmVkZXZlbG9wbWVudCBpbiAyMDA1LgpKdXN0IHRhbGtpbmcgYWJvdXQgdGhlIG1pY3JvIHRyYW5zYWN0aW9ucy4gSW4gYXBleCB0byBidXkgYW55dGhpbmcgeW91IGhhdmUgdG8gYnV5IHRva2VuIHBhY2tzLCB0aGUgcHJpY2luZyBpcyBub3QgaG9uZXN0IGFuZCBidWlsdCB0byBiZSB2ZXJ5IHByZWRhdG9yeS4gCkMuIApXZSB0b2xkIHRoZW0gdGhhdCB3ZSBmb3VuZCB0aGVzZSBjdXRlIHRoaW5ncyBhbmQgaGFkIHRvIHNoYXJlLiAKU2FsdHl0aG90aCAgMTI1IHBvaW50cyAgc3VibWl0dGVkIDIwIGRheXMgYWdvCkFuYWx5c2Ugc3RlcmtlIGVuIHp3YWtrZSBwdW50ZW4gZW4gaGV0IGFhbnBha3BsYW46T3AgMTIgNSAyMDE2IGhlZWZ0IGRlIHR1c3NlbnRpamRzZSBldmFsdWF0aWUgcGxhYXRzZ2V2b25kZW4uIEdlZHVyZW5kZSBkZXplIGV2YWx1YXRpZSBpcyBiZXNwcm9rZW4gaG9lIGRlIHN0YWdlIHZlcmxvb3B0LCBvZiBlciB2b2xkYWFuIHdvcmR0IGFhbiBkZSBsZWVyZG9lbGVuIGVuIHdhdCBkZSBzdGVya2UgZW4gendha2tlIHB1bnRlbiB6aWpuLiAKVGVjaG5pY2FsbHkgdGhlIENhdGhvbGljIENodXJjaCBpcyBzdGlsbCBvbmUgb2YgdGhlIGxhcmdlc3QgbGFuZCBvd25lcnMgaW4gRXVyb3BlLCBidXQgdGhhdCBkb2VzbiBtYWtlIHRoZW0gZmlsdGh5IHJpY2guIChOb3RlIHRoYXQgSSBoYXZlIG5vIHJlYWwga25vd2xlZGdlIG9mIHRoZSBDaHVyY2ggZmluYW5jaWFsIHNpdHVhdGlvbiBnbG9iYWxseS4pIFRoZXkgb3duIGEgbG90IG9mIGNodXJjaGVzLCBjYXRoZWRyYWxzIGFuZCB0aGUgbGlrZSBidXQgbWFpbnRhaW5pbmcgdGhvc2UgYnVpbGRpbmdzIGlzbiBjaGVhcCBhbmQgdGhleSBub3QgZXhhY3RseSBwcm9maXRhYmxlLiBBIGxvdCBvZiB0aGVtIGFyZSBhbHNvIHByb3RlY3RlZCBzaXRlcyB3aGljaCBoYXMgaXRzIG93biBzZXQgb2YgcHJvYmxlbXMuLiAKU21hcnRwaG9uZSBjb21wYXRpYmlsaXR5OiBZb3VyIHNtYXJ0cGhvbmUgaXMgcHJvYmFibHkgb25lIG9mIHRoZSBtb3N0IGltcG9ydGFudCB0ZWNoIGRldmljZXMsIHNvIGl0IG1pZ2h0IGJlIGhlbHBmdWwgdG8gZmluZCBhIGZpdG5lc3MgdHJhY2tlciB0aGF0IGNvbm5lY3RzIHdpdGggaXQuIApNeSBuZXBoZXcgc2FpZCBteSA3IHllYXIgb2xkIFBDIGlzIHByaW1pdGl2ZS4gCkdld2Vya3NjaGFmdGVuIHNvbGx0ZW4gZGllIGVpbnppZ2VuIHNlaW4gZGllIGRhcyBkcmZlbi4gCkdyZWF0IGpvYi5UaGV5IG1vc3RseSBvbmx5IGVhdCBqZWxseWZpc2ggYmVjYXVzZSBvZiBjb3Vyc2UgdGhleSBkbywgdGhleSBjb3VsZCBvbmx5IGVhdCBzb21ldGhpbmcgdGhhdCBoYXMgbm8gYnJhaW4gYW5kIGEgcG9zc2liaWxpdHkgb2YgZHJpZnRpbmcgaW50byB0aGVpciBtb3V0aHMgSSBndWVzcy4gCkh1bnRlciBleHBsYWlucyB0aGF0IG9mIHRoZSA0LDAwMCBuYXRpdmUgQW1lcmljYW4gYmVlIHNwZWNpZXMsIG5vbmUgbWFrZSBob25leS4gSXQgd2FzIEV1cm9wZWFuIGNvbG9uaXN0cyBiYWNrIGluIHRoZSAxNjAwcyB3aG8gYnJvdWdodCBob25leWJlZXMgdG8gTm9ydGggQW1lcmljYSBmb3IgYSBzb3VyY2Ugb2Ygc3dlZXRuZXNzIGluIHRoZWlyIGRpZXQuIApWYWx1ZSB0aGUgcGVyc29uIGFsd2F5cy4gVGhhdCBkb2Vzbid0IG1lYW4geW91IGhhdmUgdG8gbGlrZSB0aGVtLiBJZiB0aGV5IGhhdmUgcGVyc29uYWxpdHkgZGlzb3JkZXJzIGl0IGlzIHByb2JhYmx5IHBydWRlbnQgdG8gc2lnbnBvc3QgdGhlbSBmb3IgREJUIHJhdGhlciB0aGFuIGtlZXAgdGhlbSBpbiBwZXJzb24gY2VudHJlZCBjb3Vuc2VsbGluZyBhcyBhIHNpbmd1bGFyIHRoZXJhcHkuClVybiBiZWFyZXJzIGFyZSBncmFuZGRhdWdodGVycyBMaW5kc2F5IGFuZCBKZW5uaWZlci4gSG9ub3JhcnkgdXJuIGJlYXJlcnMgYXJlIGFsbCBvZiBoaXMgZnJpZW5kcyBwYXN0IGFuZCBwcmVzZW50LiAKSSBhbSB2ZXJ5IGNvbmZ1c2VkLiBIb3cgY2FuIFNBU0FNUyBiZSBpbXBsZW1lbnRlZCBpbiBmb3VuZGF0aW9uIHBoYXNlLCBlc3BlY2lhbGx5IGF0IGdyYWRlIG9uZSBsZXZlbC4gV2UgZG8gbm90IHdvcmsgd2l0aCBwZXJjZW50YWdlcy4gQ2hpbGRyZW4gaW4gdGhlIGZvdW5kYXRpb24gcGhhc2UgcHJvZ3Jlc3MgYXMgdGhlIHllYXIgZ3Jvd3MuIFRlcm0gMSBpcyBhIGxvdCBvZiB0aGUgcHJldmlvdXMgeWVhcnMgd29yayBhbmQgdGhlcmVmb3IgdGhlIGNoaWxkcmVuIGdldCBoaWdoIHN5bWJvbHMuIEFzIHRoZSB5ZWFyIHByb2dyZXNzIHNvbWUgb2YgdGhlbSBmYWxsIGJlaGluZCwgYnV0IGJlY2F1c2UgdGhlaXIgZmlyc3QgdGVybSBtYXJrIG1pZ2h0IGJlIGhpZ2ggdGhlaXIgeWVhciBtYXJrIGlzIGhpZ2hlciB0aGFuIHdoYXQgdGhlIGNoaWxkIGlzIGFjdHVhbGx5IGFibGUgdG8gZG8gYnkgdGhlIGVuZCBvZiB0aGUgeWVhciBhbmQgbWlnaHQgZ2V0IGFuIG92ZXJhbGwgbWFyayBvZiBhIDQgZm9yIHRoZSB5ZWFyIGFuZCBwYXNzLiBIb3dldmVyLCBoZSBkaWQgcG9vcmx5IGluIHRlcm0gMyBhbmQgNC4gSG93IGNhbiBhIGNoaWxkIHRoZW4gcGFzcyBhbmQgcHJvY2VlZCB0byB0aGUgbmV4dCBncmFkZSBpZiBoaXMgbWFya3Mgd2VyZSBkZXRlcmlvcmF0aW5nLCBidXQgaGlzIHllYXIgbWFyayBhY2NvcmRpbmcgdG8gc2FzYW1zLCBwYXNzIGhpbS4KSG9sbWdlaXIgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KRXZlbiB3aXRoIHdvcmtpbmcgdXAgdGhlIGNoYXJ0cyBJIHdvdWxkIG5vdCBiZSB0b28gaG9wZWZ1bCBvZiBmaW5kaW5nIGEgcGF0dGVybi4gQXMgYW1hemluZyBhcyB0aGUgaW5jcmVtZW50IG9mIHRpbWUgZWxhcHNlZCBhcHBlYXJzIHRvIGJlLCBhIGNvbnN0YW50IG9mIDExIHllYXJzIGJldHdlZW4gdGhlIGFnZXMgd2hlbiB5b3UgdHVybiB1cCBtYXRoZW1hdGljYWxseSB0byB0aGUgIm5leHQgb2N0YXZlIiBhbmQgdGhlIGRpZ2l0cyByZXBlYXQgdGhlbXNlbHZlcywgcGx1cyBvbmUgb2YgY291cnNlLgpJbiBhIDIwMDYgY291cnQgZmlsaW5nLCBQYWxtIEJlYWNoIHBvbGljZSBub3RlZCB0aGF0IGEgc2VhcmNoIG9mIEVwc3RlaW4ncyBob21lIHVuY292ZXJlZCB0d28gaGlkZGVuIGNhbWVyYXMuIApCdWRkYU11dGEgIDE1IHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvCkdhZ2EgaXNuJ3Qga25vd24gdG8gZG8gYW55dGhpbmcgaGFsZiB3YXksIHNvIGlmIHNoZSB3YXMgZ29pbmcgdG8gcGVyZm9ybSBoZXIgZ3JlYXRlc3QgaGl0cywgc2hlIHdhcyBnb2luZyB0byBpbmNsdWRlIHRoZSBvcmlnaW5hbCBjaG9yZW9ncmFwaHkuIFN1Y2ggd2FzIHRoZSBjYXNlIGR1cmluZyAiQmFkIFJvbWFuY2UiIGFuZCAiUG9rZXIgRmFjZSwiIHdoZW4gc2hlIHN0YXJ0ZWQgZ29pbmcgdGhyb3VnaCB0aGUgY2xhc3NpYyBtb3ZlbWVudHMgZWFzaWx5IGlkZW50aWZpYWJsZSBieSBhbnkgYm9uYWZpZGUgbGl0dGxlIG1vbnN0ZXIuClRoZW4geW91IGNvbnRpbnVlIHlvdXIgZGF5IGFuZCBzb21lIGplcmsgY3V0cyB5b3Ugb2ZmIG9uIHRoZSBmcmVld2F5IGFuZCBtYW4gaGUgcmVhbGx5IHBpc3NlZCB5b3Ugb2ZmIGxpa2UgaGUgbWVhbnQgdG8gZG8gdGhhdCBzaGl0LCBzbyB5b3UgZm9sbG93IGhpbSB0byBoaXMgZGVzdGluYXRpb24gYW5kIHlvdSBnZXQgb3V0IGFuZCB5b3UgZmlnaHQgdGhpcyBndXkgaW4gZnJvbnQgb2YgaGlzIGtpZHMgYW5kIGl0IGNvbXBsZXRlbHkganVzdGlmaWVkIGluIHlvdXIgbWluZCBiZWNhdXNlIGhlIGZ1Y2tpbmcgZGlkIHRoYXQgb24gcHVycG9zZS4uIApUaGVyZSBhcmUgdGhyZWUgV29sdmVzIGRlZmVuZGVycyBiZXR3ZWVuIEtvbGFzaW5hYyBhbmQgQXViYW1leWFuZywgYW5kIHRoZSB2aXNpdG9ycyBvdXRudW1iZXIgQXJzZW5hbCBmaXZlIHRvIHR3byBpbiB0aGlzIHNpdHVhdGlvbi4gClNvbiBkaXJlY3RldXIgY2FuYWRpZW4sIEdlb2ZmIEZhcmR5LCBhc3N1cmUgZGFucyB1biBjb21tdW5pcXUgcXVlIGxlIFF1YmVjIGVzdCBsZSBmb3llciBkdSBwb2tlci4uIApOb3csIGxldCdzIHNheSBQbGF5ZXIgQSBoYXMgcGxheWVkIGluIHRlbiBnYW1lcywgc28gaGlzIHRvdGFsIGJ1eSBpbiBpcyAgJDEwMCAoMTB4JDEwIHdlZWtseSBidXkgaW4pLiBOb3csIG91dCBvZiB0aG9zZSAxMCBnYW1lcywgb3VyIGludHJlcGlkIE1yLiBBIHdvbiB0d28gZ2FtZXM6Ckhvc3BpdGFsaXR5IGluZHVzdHJ5IGhhcyBoaWdoIHR1cm5vdmVyIGluIGEgbG90IG9mIGVudHJ5IGxldmVsIGpvYnMuIFJvYm90cyBhcmUgZ29vZCBhdCBkb2luZyByZXBldGl0aXZlIHRhc2tzIGxpa2UgZm9vZCBwcmVwLCBjbGVhbmluZyBhbmQgZXZlbiBkZWxpdmVyeSwgc2FpZCBCb3dlbi4gQWxyZWFkeSBzZWVpbmcgc29tZSBsYXJnZSBob3RlbHMgcmVwbGFjZSBmcm9udCBkZXNrIHBlcnNvbm5lbCB3aXRoIGF1dG9tYXRlZCBraW9za3MuIApZb3UgYmUgYWJsZSB0byBsaWZ0IHRoYXQgZW5kIG9mIHRoZSBqYWNrLCB0aGVuIGRvIHRoZSBzYW1lIHRoaW5nIG9uIHRoZSBsZWFkcyBjbG9zZXN0IHRvIHRoZSBlZGdlIG9mIHRoZSBib2FyZC4gCk15IGZhdm9yaXRlIGJpdCBpcyB0aGUgQmxhY2sgQmFsc2FtL1Rlbm5ldCBNb3VudGFpbiBhcmVhIGZ1cnRoZXIgc291dGggYnkgdGhlIHBhcmt3YXksIHdoaWNoIGlzIGV4cG9zZWQgYW5kIHNjcnViYnksIDM2MCBkZWdyZWUgdmlld3MgKHdoaWNoIGFsc28gbWVhbnMgd2luZHkgYW5kIGNvbGQpLiBSaWdodCBvZmYgdGhlIGFjY2VzcyByb2FkIGZyb20gdGhlIHBhcmt3YXkgYXQgdGhlIGJhc2Ugb2YgQmxhY2sgQmFsc2FtIGlzIGEgaHVnZSBmbGF0IHBpbmUgZm9yZXN0IHdoZXJlIHBlb3BsZSBzb21ldGltZXMgY2FtcCwgYW5kIHRoZXJlIHNob3VsZCBiZSBhIHNwcmluZyBvciB0d28gYWxvbmcgdGhlIHJvYWQgYXMgd2VsbC4KRXZlbiB0aGUga2luZ3Mgb2YgYWxsIHRoZSBmYW1vdXMgZHluYXN0aWVzIGhhdmUgdGhlaXIgb3duIGNhcmQgc3R5bGVzLiAKRGllIGR1cmNoIGRpZSBTZWl0ZW5iZXRyZWliZXIgZXJzdGVsbHRlbiBJbmhhbHRlIHVuZCBXZXJrZSBhdWYgZGllc2VuIFNlaXRlbiB1bnRlcmxpZWdlbiBkZW0gZGV1dHNjaGVuIC4gRGllIFZlcnZpZWxmbHRpZ3VuZywgQmVhcmJlaXR1bmcsIFZlcmJyZWl0dW5nIHVuZCBqZWRlIEFydCBkZXIgVmVyd2VydHVuZyBhdWVyaGFsYiBkZXIgR3JlbnplbiBkZXMgZXMgYmVkcmZlbiBkZXIgc2NocmlmdGxpY2hlbiBadXN0aW1tdW5nIGRlcyBqZXdlaWxpZ2VuIEF1dG9ycyBiencuIEVyc3RlbGxlcnMuIApUaGFua3MgZm9yIHRoZSByZXNwb25zZS4gVGhlIGFydGljbGUgYWxzbyBtZW50aW9ucyBTY3JlZW4gU2l6ZSBQb2ludHMgYW5kIGluZGljYXRlcyB0aGF0IHRob3NlIGFyZSB3aGF0IGlzIHVzZWQgZm9yIENTUy4gSW4gdGVybXMgb2YgdGhhdCBtZWFzdXJlbWVudCwgaXQgZ2l2ZXMgYSB3aWR0aCBvZiAzNzVweCBmb3IgdGhlIGlQaG9uZSA2LzcvOC4gCjQpIFByZWhlYXQgdGhlIHNtb2tlciB0byAxMDBDLiAKRG8geW91IHRoaW5rIHRoYXQgYWxsIHB1YmxpY2x5IHRyYWRlZCBOWiBjb21wYW5pZXMgcHV0IHRvZ2V0aGVyIG9ubHkgcGF5ICQxMzBNIGluIHRheGVzPyBPZiBjb3Vyc2Ugbm90LiAKVGhlIERvSiBoYWQgY2xhaW1lZCB0aGUgQ0ZBIEluc3RpdHV0ZSBkaXNjcmltaW5hdGVkIGFnYWluc3QgQW1lcmljYW4gd29ya2VycyBieSBicmluZ2luZyBpbiBzdGFmZiBmcm9tIG92ZXJzZWFzIHRvIGdyYWRlIGl0cyBleGFtIHBhcGVycy4gVGhlIENGQSBJbnN0aXR1dGUgc2F5cyBpdCB3aWxsIHVzZSAidm9sdW50ZWVycyIgZm9yIGdyYWRpbmcgZ29pbmcgZm9yd2FyZCwgYSBtb3ZlIHRoYXQgd2lsbCAidGFrZSBpbmNvbWUgYXdheSBmcm9tIGFsbCAuIApVTSBHbG9iYWwgTWFuYWdpbmcgUGFydG5lciBKdXN0aW4gV3JvZSBvbmNlIGZsZXcgdG8gUnVzc2lhIGZvciBhIDMwIG1pbnV0ZSBtZWV0aW5nIHRoZW4gdHVybmVkIGFyb3VuZCB0byBmbHkgcmlnaHQgYmFjayB0byBOZXcgWW9yay4gUGl0Y2ggQ0VPIFJhY2hlbCBTcGllZ2VsbWFuIGNoYW5nZWQgaGVyIGVudGlyZSBvdXRmaXQgaW4gdGhlIHNlY3VyaXR5IGxpbmUgYXQgTydIYXJlIEludGVybmF0aW9uYWwgQWlycG9ydCB3aXRob3V0IGZsYXNoaW5nIGFueSBub24gd29yayBhcHByb3ByaWF0ZSBza2luIChhbmQgcmVjZWl2ZWQgYXBwbGF1c2UgZnJvbSBhIGZlbGxvdyB0cmF2ZWxlcikuIERlbnRzdSBBZWdpcyBHcm91cCBQcmVzaWRlbnQgb2YgQnJhbmQgU29sdXRpb25zIE1hdHQgU2VpbGVyIGh1bmcgdXAgaGlzIHN1aXQgaW4gdGhlIGZyb250IG9mIGEgcGxhbmUsIGFsbCB0aGUgd2hpbGUgdGhpbmtpbmcgdG8gaGltc2VsZiwgIlRoaXMgaXMgYSBiYWQgaWRlYS4gCkl0J3MgZGVmaW5pdGVseSBwb3NzaWJsZSwgYnV0IEkgY2FuJ3QgcmVjYWxsIGFueXRpbWUgaXQgaGFzIGhhcHBlbmVkIGluIE1NQSBhbmQgaXRzIGluZnJlcXVlbmN5IG1ha2VzIG1lIHZlcnkgbXVjaCBkb3VidCB0aGUgaWRlYSB0aGF0IFJvYmJpZSB3YXMgaW5ldml0YWJseSBnb2luZyB0byBnbyBvdXQgaW4gdGhhdCBwb3NpdGlvbi4uIApPaCwgc28gdGhhdCBnb29kIG5ld3MuIFRoZSBlY29ub215IGlzIGZpbmUgKGRlc3BpdGUgYWxsIGluZGljYXRpb25zIHRvIHRoZSBjb250cmFyeSkgYW5kIGl0IGZpbmUgYmVjYXVzZSBCaWRlbiBhbmQgT2JhbWEgc2F2ZWQgaXQgYnkgYmFpbGluZyBvdXQgdGhlIGJhbmtlcnMuIApTZWxmIGh5cG5vc2lzQ2hvb3NlIGEgcGljdHVyZSBpbiB5b3VyIG1pbmQgb2Ygc29tZXdoZXJlIHRoYXQgeW91IGZlZWwgc2VjdXJlIGFuZCBzYWZlLiBWaXN1YWxpc2UgYXMgbXVjaCBkZXRhaWwgb2Ygc21lbGwsIGNvbG91ciBhbmQgc28gb24gYXMgeW91IGNhbi4gU291bmRzIGNhbiBhbHNvIGJlIGJyb3VnaHQgaW4uIEl0IHNob3VsZCBoYXZlIHN0ZXBzIGxlYWRpbmcgZG93biB0byBpdC4KTGFzdGx5LCBzb21lIGNvbW1vbiB0ZWxscyBJIHNlZW4gaW4gbXVsdGlwbGUgcGxheWVycyBvZiB0aGlzICJhcmNoZXR5cGUiOgpTaG9ydCBkZWNrIGlzIGJvcmRlcmxpbmUgdW5wbGF5YWJsZSB3aXRoIHN0YW5kYXJkIGhhbmQgcmFua2luZ3MsIGl0IGp1c3QgYSBwdXJlIHNldG1pbmUgZmVzdC4gCklmIHRoZXJlIGFyZSBNdXNsaW1zIHdobyBkbyBzaGFyZSBsaWJlcmFsIGJlbGllZnMsIHdoYXQgZG8gd2UgZ2FpbiBieSBhdHRhY2tpbmcgdGhlbSBldmVuIGlmIHRoZXkgbm90IGluIHRoZSBtYWpvcml0eT8gRG8geW91IHRoaW5rIHRob3NlIG1vZGVyYXRlIHZvaWNlcyBhcmUgZ29pbmcgdG8gYmUgbW9yZSBsaWtlbHkgdG8gc3VwcG9ydCB1cyBvciBsaWJlcmFsIGlkZW9sb2dpZXMgaWYgd2Ugc2VlbiBhcyBhdHRhY2tpbmcgYWxsIE11c2xpbXMsIHJlZ2FyZGxlc3Mgb2YgdGhlaXIgaW5kaXZpZHVhbCBiZWxpZWZzPyBZb3UganVzdCBtYWtpbmcgaXQgZWFzaWVyIGZvciB0aGUgaGFyZGxpbmVycyB0byBzYXkgInNlZSwgZXZlbiB3aGVuIE11c2xpbXMgYWN0IGxpa2UgV2VzdGVybmVycyB0aGV5IHN0aWxsIGhhdGVkIi4uIApJIGxvb2tlZCBiYWNrIGFuZCBzYXcgdGhlIGR1ZGUgaGFkIHByb2plY3RpbGUgdm9taXRlZCBhbGwgb3ZlciB0aGUgcGxhY2UgYW5kIHdhcyBzaXR0aW5nIGh1bmNoZWQgb3ZlciB3aXRoIGhpcyBoZWFkIGJ5IGhpcyBrbmVlcy4gVGhlIGJ1cyBkcml2ZXIgY2FsbGVkIHRoZSBwb2xpY2UgYW5kIHRoZSBkdWRlIGdvdCBhcnJlc3RlZCBmb3IgcHVibGljIGludG94aWNhdGlvbiBhbmQgSSB0aGluayBwb3NzZXNzaW9uLiBUaGVuIHdlIGhhZCB0byB3YWl0IGFyb3VuZCBmb3IgYSBuZXcgYnVzLiAKMi4gSW1wcm92ZSBCcmFpbiBGdW5jdGlvbiBhbmQgRmlnaHQgRGVwcmVzc2lvbgpJIGhhdGUgaXQuIApBbmQgZXZlbiB0aGVuIHRoYXQgc3BsYXNoIGlzIG1pbm9yIGF0IGJlc3QsIHNpbmNlIHRoZSBkYW1hZ2UgZnJvbSB0aGUgZ3JlbmFkZSBkcm9wcyBvZmYgcXVpY2tseS4gWW91IGVzc2VudGlhbGx5IG5lZWQgdG8gbGFuZCBhIGdyZW5hZGUgd2l0aGluIGhhbGYgYSBmb290IHRvIGtpbGwuIApVc3VhbGx5IHBlb3BsZSBlbmQgdXAgbWFraW5nIGEgbG90IG1vcmUgc2VsbGluZyBkcnVncyBhbmQgcnVubmluZyB0aGFuIGlmIHRoZXkgZ2V0IGEgam9iLiAKVGhlIHJvYmJlcnkgc3VzcGVjdCB3YXMgZmF0YWxseSBzaG90IGFuZCBhbm90aGVyIHBva2VyIHBsYXllciBhdCB0aGUgYXBhcnRtZW50IHdhcyBpbmp1cmVkLCBQdXNzZWhsIHNhaWQuIFRoZSBpbmp1cmVkIHBva2VyIHBsYXllciB3YXMgaW4gc3RhYmxlIGNvbmRpdGlvbiBhdCBDb3ZlbmFudCBIZWFsdGhDYXJlIGluIFNhZ2luYXcuCkNvY29udXQgd2F0ZXIgaXMgbmF0dXJhbGx5IGZvdW5kIGluc2lkZSB5b3VuZyBjb2NvbnV0cywgYW5kIGl0IGNvbnRhaW5zIGEgd2lkZSB2YXJpZXR5IG9mIG1pbmVyYWxzLCB2aXRhbWlucywgY2FyYm9oeWRyYXRlcywgYW1pbm8gYWNpZHMsIGFuZCBlbnp5bWVzLkl0IGNvbnRhaW5zIG5lZ2xpZ2libGUgZmF0dHkgYWNpZHMgY29tcGFyZWQgdG8gY29jb251dCBtaWxrLCB3aGljaCBpcyBhIGxpcXVpZCBvYnRhaW5lZCBieSBncmF0aW5nIHRoZSBzb2xpZCBpbnNpZGUgb2YgdGhlIGNvY29udXQuIApJZiB5b3UgZG91YnQgdGhpcywganVzdCBjb25zaWRlciB3aGF0IGp1c3QgaGFwcGVuZWQgdG8gYSB5b3VuZyBhbmQgcHJvbWlzaW5nIEdvb2dsZSBlbXBsb3llZTouIApUaGF0IGxpa2UgYXJndWluZyB0aGF0IHRvIGdldCB0aGUgImNvbXBsZXRlIiBjb2xsZWdlIGV4cGVyaWVuY2UgeW91IGhhdmUgdG8gYnV5IGV2ZXJ5IGJvb2sgaW4gdGhlIGJvb2tzdG9yZS4KV2hvbGUgaWRlYSBvZiBSZWd1bGF0aW9uIE5NUyBpcyB0aGF0IGV2ZXJ5Ym9keSB3aWxsIGJlIGJldHRlciBvZmYgaWYgeW91IGhhdmUgYWJzb2x1dGUgc3Vuc2hpbmUgZXZlcnl3aGVyZSwgaGUgc2F5cy4gQnV0IHRoZSBuYXRpb25hbCBtYXJrZXQgc3lzdGVtIGlzIGxpa2UgYSBwb2tlciBnYW1lOiBldmVyeW9uZSBoYXMgdGhlaXIgaGFuZHMgZXhwb3NlZCB3aGVuIHlvdSBwbGF5LCB0aGUgc3lzdGVtIGlzIG5vdCBnb2luZyB0byB3b3JrIHZlcnkgd2VsbC4gCllvdSBjYW4gY29ycmVjdCBpcnJpdGF0aW9uIGJ1bXBzIGluIHRob3NlIHNpdHVhdGlvbnMgYnkgY2hhbmdpbmcgdGhlIGpld2Vscnkgb3IgeW91ciBjbGVhbmluZyByb3V0aW5lLi4gCkkgd2FzIGp1c3QgdGhpbmtpbmcgYWZ0ZXIgSSByZWFkIHlvdXIgcmVwbHkgdGhhdCBJIHdvbmRlciBpZiBwYXJ0IG9mIHRoZSByZWFzb24gc2hlJ3Mgd2l0aCB0aGlzIG5ldyBndXkgaXMgYmVjYXVzZSBzaGUgdGhpbmtzIGhlIHdpbGwgaGVscCBoZXIga2VlcCBoZXIgc3BvdCBvbiB0aGUgc2hvdyBuZXh0IHNlYXNvbi4gU2hlIG1pZ2h0IGJlIHVzaW5nIGhpbSBmb3IgbW9uZXkgKGFueW9uZSBoYXMgbW9yZSB0aGFuIHNoZSBkb2VzIHNpbmNlIHNoZSBkb2Vzbid0IGhhdmUgYSBqb2IhKSwgc28gc2hlJ3Mgc3RheWluZyB3aXRoIGhpbSBmb3IgdGhlIHRpbWUgYmVpbmcgc28gaGUgY2FuIHN1cHBvcnQgaGVyLiBTaGUgY291bGQgYWxzbyBiZSB1c2luZyBoaW0gdG8gc3RheSBpbiB0aGUgY291bnRyeS4gClNvIGFmdGVyIGEgZml2ZSBob3VyIHRvdXIgb2YgSm9yZGFuLCB3ZSBwdWxsZWQgdXAgdG8gdGhlIFZhbGxleSBTdGFycyBJbm4gaW4gV2FkaSBNdXNhLCAyNTUga20gc291dGggb2YgQW1tYW4sIHdoZXJlIE1vc2VzIHN1cHBvc2VkbHkgZHJldyB3YXRlciBvdXQgb2Ygcm9ja3MuIFdlIGZlbHQgdGhhdCBzdGF5aW5nIGF0IHRoaXMgaG90ZWwgd2FzIG1lYW50IHRvIGJlLCBzaW5jZSAod2l0aG91dCBhIGd1aWRlYm9vaykgd2UgaGFkIGJvdGggYmVlbiBzZWFyY2hpbmcgb25saW5lIGZvciBob3RlbHMgaW4gUGV0cmEgYW5kIGF0IHRoZSBleGFjdCBzYW1lIHRpbWUsIHN1Z2dlc3RlZCB0aGlzIG9uZS4gSXQgcnVuIGJ5IGEgZ3V5IG5hbWVkIElicmFoaW0gd2hvIHNwZWFrcyBwZXJmZWN0IEVuZ2xpc2ggYW5kIGlzIGEgZ3JlYXQgYnVzaW5lc3NtYW4uIApRLiBUaGlzIG1vbnRoIEknbSBwbGFubmluZyB0byBkbyBzb21lIGluZG9vciBzZWVkaW5nIG9mIHNvbWUgbGV0dHVjZXMsIGNhYmJhZ2UgYW5kIHN1bW1lciBmbG93ZXJzLiBJJ3ZlIGJlZW4gdG9sZCB0byBkYW1wZW4gZmlsbGVkIHNlZWRpbmcgZmxhdHMgYW5kIHBvdHMgd2l0aCBob3Qgd2F0ZXIuIERvIHlvdSBjb25zaWRlciB0aGF0IHNhZmUsIGFuZCBhIHVzZWZ1bCBpZGVhPyBBbnkgb3RoZXIgdGlwcz8KSSBhbHdheXMgdGlwIG15IFJNVCBhbmQgdGlwIGV4dHJhIGF0IFhNQVMuIFRoZXkgYWxzbyB3b3JrIGV2ZW5pbmdzL3drbmRzIHNvbWV0aGluZyBtYW55IHByb2Zlc3Npb25hbHMgZG9uIG5lZWQgdG8gZG8uIApTZXB0ZW1iZXIgMTEgYXR0YWNrcwpEb3VnbGFzIHdyb3RlIG1hbnkgb2YgdGhlIGZpcnN0IEVudHJpZXMgdG8gYXBwZWFyIG9uIEgyRzIuIEFzIHdlbGwgYXMgY29sbGF0aW5nIGFsbCBoaXMgY29udHJpYnV0aW9ucyB0byB0aGUgc2l0ZSwgdGhpcyBwYWdlIGFsc28gaGFzIGxpbmtzIHRvIGFsbCB0aGUgQXBwcm92ZWQgRW50cmllcyB3cml0dGVuIGJ5IG1lbWJlcnMgb2YgdGhlIGNvbW11bml0eSB0aGF0IGFyZSBhYm91dCBBZGFtcyBhbmQgaGlzIHdvcmsuIApJbiBvdGhlciB3b3JkcywgbW9uc3RlcnMgd2lsbCBoYXZlIG1vcmUgaGl0IHBvaW50cywgaGlnaGVyIGFybW9yIGNsYXNzLCBtb3JlIHBvd2VyZnVsIGFuZCB2YXJpZWQgYXR0YWNrcywgZGlmZmVyZW50IHRhY3RpY3MsIGV0Yy4gSXQgcmVxdWlyZXMgbW9yZSB0ZWFtd29yaywgc2tpbGwsIGFuZCB0b2tlbnMgdG8gcGxheSBhdCBtb3JlIGRpZmZpY3VsdCBsZXZlbHMsIGJ1dCBpdCBpcyBlc3NlbnRpYWxseSB0aGUgc2FtZSBnYW1lIGFzIHBsYXlpbmcgYXMgYSBiZWdpbm5lci4uIApPaCBJIGhhdmUuIExvbCBJJ3ZlIGJlZW4gaW50ZXJlc3RlZCBmb3IgYSB5ZWFyIGFuZCBhIGhhbGYgb3Igc28uIEkndmUgbWFkZSBhIGZldyB0aGluZ3MgaGVyZSBhbmQgdGhlcmUuCkNoYXBlbCBpcyBsb2NhdGVkIGluIEUgV2luZywganVzdCBwYXN0IE1jTGF1Z2hsaW4gQXVkaXRvcml1bS4gSWYgZGVzaXJlZCwgaW4gbGlldSBvZiBmbG93ZXJzLCBkb25hdGlvbnMgY2FuIGJlIG1hZGUgdG8gU3Vubnlicm9vayBWZXRlcmFucyBDZW50cmUuLiAKSWRrLCB0aGVyZSBpcyBzb21ldGhpbmcgY29tZm9ydGluZ2x5IGp1ZGdtZW50YWwgYWJvdXQgbXkgZGF1Z2h0ZXIuIE9uZSBkYXkgc29tZXRoaW5nIGNhbWUgb24gYW5kIHNoZSBqdXN0IHJvbGxlZCBoZXIgZXllcyBhbmQgcHJvbm91bmNlZCBpdCAiTWFsZSBkZWdlbmVyYWN5LiIgSSBkb24ndCBldmVuIGNhcmUgd2hldGhlciBvciBub3QgaXQgd2FzLiBTaGUgd2Fzbid0IHJlcGVhdGluZyB0aGluZ3MgaGVyIGZhdGhlciBvciBJIGhhZCBzYWlkLCBqdXN0IGRpYWdub3NpbmcgbWFsZSBkZWdlbmVyYWN5IHdoZXJlIHNoZSBzYXcgaXQuIAoiVGhlIEV1cm9wZWFuIFVuaW9uIGhhcyBiZWVuIHN0cm9uZ2x5IGVuY291cmFnaW5nIGJ1c2luZXNzIGxlYWRlcnMgdG8gam9pbiB0aGUgV29tZW4gRW1wb3dlcm1lbnQgUHJpbmNpcGxlcyBjb21tdW5pdHkgYW5kIHVzZSB0aGVtIGFzIGd1aWRhbmNlIGZvciBhY3Rpb25zIHRoYXQgd2UgY2FuIGFsbCB0YWtlIGluIHRoZSB3b3JrcGxhY2UsIG1hcmtldHBsYWNlIGFuZCBjb21tdW5pdHkgdG8gZW1wb3dlciB3b21lbiBhbmQgYmVuZWZpdCBib3RoIGJ1c2luZXNzZXMgYW5kIHBlb3BsZSwiIHNhaWQgQW1iYXNzYWRvciBvZiB0aGUgRXVyb3BlYW4gVW5pb24gdG8gQ2FuYWRhIFBldGVyaXMgVXN0dWJzLiAiV2UgYXJlIHBhcnRpY3VsYXJseSBwbGVhc2VkIHRoYXQgdGhlIE5FTyBFeGNoYW5nZSB3YXMgdGhlIGZpcnN0IENhbmFkaWFuIFN0b2NrIEV4Y2hhbmdlIHRvIGNvbW1pdCB0byB0aGUgV29tZW4ncyBFbXBvd2VybWVudCBQcmluY2lwbGVzLCBkZW1vbnN0cmF0aW5nIHRoYXQgTkVPIHJlY29nbml6ZXMgdGhlIGltcG9ydGFuY2Ugb2Ygbm90IG9ubHkgcmFpc2luZyBhd2FyZW5lc3MgZm9yIGdlbmRlciBkaXZlcnNpdHkgYnV0IHRha2luZyBhY3Rpb24gdG8gZW5hYmxlIGl0LiIuIApCdXQgaWYgd2Ugd2VyZSB0byBoaXQgdGhlbSBpbiB0aGVpciBzdHVwaWQgaGVhZCBhbmQgdGFrZSB0aGVpciBtb25leSwgd2UnZCBiZSBjcmltaW5hbHMuLiAKVGhlIGlzbGFuZCBpcyB0aGUgbW90b3JpbmcgcHVibGljIHBvcnRpb24gb2YgdGhlIHJvYWQgdHlwaWNhbGx5IDEyMCAxNTAgZmVldCBpbiBsZW5ndGggYW5kIGlzIGRlc2lnbmVkIHRvIGJlIGZhaWwgc2FmZS4gClNpYmxpbmdzIG9mIGJvdGggUGFkZG9jayBhbmQgRGFubGV5IHNhaWQgdGhleSBzaGFyZWQgYSBsb3ZpbmcgcmVsYXRpb25zaGlwLiBJbiBhIHN0YXRlbWVudCByZWxlYXNlZCBieSBoZXIgbGF3eWVyLCBEYW5sZXkgd2hvIHNhaWQgUGFkZG9jayBzZW50IGhlciB0byB0aGUgUGhpbGlwcGluZXMgYWJvdXQgdHdvIHdlZWtzIGJlZm9yZSB0aGUgc2hvb3RpbmcgZGVzY3JpYmVkIGhpbSBhcyAiYSBraW5kLCBjYXJpbmcsIHF1aWV0IG1hbi4gSSBsb3ZlZCBoaW0gYW5kIEkgaG9wZWQgZm9yIGEgcXVpZXQgZnV0dXJlIHRvZ2V0aGVyIHdpdGggaGltLiIuIApJIGRvbiBoYXZlIGFueXRoaW5nIG9mZmhhbmQgYnV0IEkgY2FuIGZpbmQgaXQgaW4gYSBmZXcgbWludXRlcyBpZiB5b3Ugd2FudC5IdW1hbiBiZWhhdmlvciBpcyBtdWNoIG1vcmUgY29tcGxleCB0aGVuIHRyYWRpdGlvbmFsIGFuaW1hbCBiZWhhdmlvci5UaGUgYWxwaGEgLyBiZXRhIHRoaW5nIGlzbiBldmVuIGFjY3VyYXRlIGFuaW1hbCBiZWhhdmlvci4gVGhhdCBub3QgaG93IHdvbHZlcyB3b3JrLiBEb24gdGhpbmsgb2YgaXQgYXMgYXBwbHlpbmcgYW5pbWFsIGNvbmNlcHRzIHRvIGh1bWFucy4gClRoZSBwZXJzb24gcmVwbHlpbmcgdG8gbWUgd2FzIHNlbGYgaWRlbnRpZnlpbmcgYXMgYW4gZXhwZXJ0IGluIHRoZSBmaWVsZCwgeWV0IGNhbm5vdCBzcGVhayB0byB0aGUgYWN0dWFsIHByb2JsZW1zIHRoYXQgZG9lcyBwbGFndWUgdGhlIGJyZWVkIGFuZCB2ZXJ5IGxpa2VseSBpbXBhY3RzIGxpZmVzcGFucy4gSSBhbSBub3QgYW4gZXhwZXJ0IGFuZCBuZXZlciBjbGFpbWVkIHRvIGJlLiBKdXN0IGEgcGVyc29uIHdobyBnaXZlcyBhIGRhbW4uCkFub3RoZXIgdGhpbmcgdGhlIE1vaGVnYW4gVHJpYmFsIFBvbGljZSBjYW4gZG8gaXMgaW52ZXN0aWdhdGUgY3JpbWVzIGFuZCBoYXVsIHlvdXIgYXNzIG9mZiB0byBjYXNpbm8gamFpbCwgd2hpY2ggdGhleSB3aWxsIGRvIGlmIHlvdSB0cnkgdG8gY2hlYXQuIApUaGUgbW9zdCBjb21tb24gdHlwZSBvZiBoYWlyIGxvc3MgaXMgbWFsZSBvciBmZW1hbGUgcGF0dGVybiBiYWxkbmVzcyAgIG9yIGFuZHJvZ2VuZXRpYyBBbG9wZWNpYSAgIHdoaWNoIGlzIGNhdXNlZCBieSBnZW5ldGljcy4gCkkganVzdCBnb3QgbXkgZmlyc3QgbGVuZ3RoeSB0cmlwIG91dCBvZiBteSBNTEQgUHJvcGhldCBhbmQgSSBhbSBzdHVjayBoYXRpbmcgdGhlIHdhdGVyIGJvdHRsZSBwb2NrZXQgc2V0IHVwIHRvIHRoZSBwb2ludCB0aGF0IEkgYW0gY29uc2lkZXJpbmcgdW5sb2FkaW5nIHRoZSBwYWNrIG9uIFVMIEdlYXIgVHJhZGUgYW5kIGdvaW5nIGEgZGlmZmVyZW50IGRpcmVjdGlvbi4gVGhlIHRhbGwgd2F0ZXIgYm90dGxlIHBvY2tldHMgYXJlIG15IG9ubHkgcmVhbCBncmlwZSwgYXMgSSBsb3ZlIGV2ZXJ5dGhpbmcgZWxzZSBhYm91dCB0aGUgcGFjaywgYnV0IEkganVzdCBjYW4gbm90IGVhc2lseSByZWFjaCBteSB3YXRlciBib3R0bGUgd2l0aCBwYWNrIG9uLCBhbmQgdGhhdCBwcm9ibGVtIGZlbHQgZXhhY2VyYmF0ZWQgYWZ0ZXIgYSB3ZWVrIGxvbmcgdHJpcC4gQXJlIHRoZXJlIGFueSBzb2x1dGlvbnMgYmVzaWRlcyB0aGUgYXR0YWNobWVudHMgdGhhdCBnbyBvbiBhIHNob3VsZGVyIHN0cmFwLiAKU2hlIHdhcyBiZWxvdyB0aGUgbGVnYWwgYWdlIG9mIDE4IHRvIGdldCBhIHRhdHRvbyBpbiBoZXIgaG9tZSBzdGF0ZSBvZiBOZXcgWW9yayBzbyBzaGUgdXNlZCBhIGZha2UgSUQuIApJIHRyeSBhbmQgZHJlc3MgdmVyeSBzaW1wbGUgYnV0IGZlbWluaW5lLiBJIHdlYXIgdiBjdXQgdCBzaGlydHMgYSBjdXRlIGNhcmRpZ2FuLCBkYXJrIGplYW5zIGFuZCBjdXRlIGJvb3RzLiBUaGVuIEkgY2hhbmdlIHVwIG15IGFjY2Vzc29yaWVzLCBzaW1wbGUgYW5kIHByZXR0eSBkb2VzIHRoZSB0cmljayEKIldlJ3ZlIGJlZW4gb24gcmVjb3JkIGZvciBtYW55IHllYXJzIGZvciBzYXlpbmcgdGhlIHBva2VyIG1hY2hpbmVzIHNob3VsZCBjb21lIG91dCBvZiBvdXIgbGVhc3QgYWR2YW50YWdlZCBzdWJ1cmJzLiJBcHJpbCAxMCAyMDE2ICAgNjo1NVBNLiAKTWF5YmUgZXZlbiB0cHRrLiAKSm9uIEthYmF0IFppbm4gKDE5OTApIEZ1bGwgQ2F0YXN0cm9waGUgTGl2aW5nOiBVc2luZyB0aGUgV2lzZG9tIG9mIFlvdXIuIEhlcmUgb24gdGhlIHNpdGVtYXAgYXJlIGxpc3RlZCBhbGwgdGhlIGJvb2tzIHdlIG9mZmVyIGZvciBmcmVlIGRvd25sb2FkLiAKTHVueSBqb2luZWQgdGhlIENvYXN0IEd1YXJkIGR1cmluZyBXb3JsZCBXYXIgSUkgYW5kIHJlbWFpbmVkIHVudGlsIGFmdGVyIHRoZSBXYXIuIEhlLCBKb2UgSW5jZSBhbmQgSmltbXkgRGVycmljayB3ZW50IGludG8gYnVzaW5lc3MgYW5kIGZvcm1lZCBXaXJlIExpbmUgU2VydmljZSBDb21wYW55LiAKVG8gYmUgc3VyZSwgY29hY2ggcGFzc2VuZ2VycyBhcmUgc2VlaW5nIHNvbWUgaW1wcm92ZW1lbnRzIHRoZXNlIGRheXMsIHN1Y2ggYXMgbGl2ZSBUViBhbmQgV2kgRmkgc2VydmljZSBvbiBzZWxlY3QgYWlybGluZXMuIEFuZCB0aGV5IGNhbiBlbmpveSBvdGhlciBzbWFsbCBsdXh1cmllcyBmb3IgYSBmZWUuIFNlYXRzIHdpdGggYSBmZXcgZXh0cmEgaW5jaGVzIG9mIGxlZyByb29tIHN0YXJ0IGF0ICQ5LiBEYWlseSBsb3VuZ2UgcGFzc2VzIGNvc3QgJDUwLiBBbWVyaWNhbiBldmVuIG9mZmVycyBhIGNlbGVicml0eSB0cmVhdG1lbnQsIHdpdGggYW4gYWdlbnQgZXNjb3J0aW5nIHBhc3NlbmdlcnMgZnJvbSB0aGUgY3VyYiB0byB0aGUgZ2F0ZSBmb3IgJDEyNS4KVGlkYWsgYWRhIGhlbnRpbnlhIGF0YXMgbmlrbWF0IGRhbiBrYXJ1bmlhIEFsbGFoLCBidWt1IGt1bHR1bSAuIApIZSB3ZW50IHRvIFN0LiBMb3VpcyBHcmFkZSBTY2hvb2wgYW5kIHdhcyBhIGdyYWR1YXRlIG9mIENhdGhlZHJhbCBIaWdoIFNjaG9vbCBpbiAxOTY1IGFuZCBhdHRlbmRlZCBTdXBlcmlvciBTdGF0ZSBVbml2ZXJzaXR5LiBIZSBlbnRlcmVkIGludG8gdGhlIFVuaXRlZCBTdGF0ZXMgQXJteSB3aXRoIHRoZSAxMzNyZCBNZWRpY2FsIEdyb3VwIGluIEphbnVhcnkgb2YgMTk2NyBhbmQgcHJvdWRseSBzZXJ2ZWQgaGlzIGNvdW50cnkgdW50aWwgaGlzIGhvbm9yYWJsZSBkaXNjaGFyZ2UgYXQgdGhlIHJhbmsgb2YgU1A1IGJhY2sgdG8gdGhlIFR3aW4gUG9ydHMgaW4gSmFudWFyeSBvZiAxOTczLgpUaGF0J3Mgd29uZGVyZnVsLiBCdXQgc3R1ZGllcyBoYXZlIHNob3duIHRoYXQgY29uc2VydmF0aXZlcyB1bmRlcnN0YW5kICJsaWJlcmFsJ3MiIHBvc2l0aW9ucyBtb3JlIHRoYW4gdGhlIG90aGVyIHdheSBhcm91bmQsIGFuZCBJIHRoaW5rIHRoaXMgaXMgYSBjYXNlIG9mIHRoYXQgaGVyZTogWW91J3JlIGNvbmZ1c2luZyBub3Qgd2FudGluZyB0byBmb3JjZSBvdGhlcnMgdG8gZW5nYWdlIGluIGNoYXJpdHkgd2l0aCBub3Qgd2FudGluZyB0byBoZWxwIHBlb3BsZSB0aGV5IGRvbid0IGtub3cuCkFnYWluLCBJIG0gc28gc29ycnkgZm9yIHRoZSBsb3NzZXMgeW91IGhhdmUgc3VmZmVyZWQgTWFtYS4gCkluIG9yZGVyIHRvIGJyZWVkIGEgd2VsbCBtYXRjaGVkIHN0dWQgYW5kIGJpdGNoIHlvdSB3aWxsIHJlcXVpcmUgY2hlY2tpbmcgdGhlaXIgcGVkaWdyZWVzLiAKVGhvc2Ugc2FtZSBsaXR0bGUgd2hpdGUgZmxha2VzIHRoYXQgc2VsbCBtaWxsaW9ucyBvZiBkb2xsYXJzIG9mIG1lZGljYXRlZCBzaGFtcG9vIHRvIGh1bWFuIGNvbnN1bWVycyBjYW4gYWZmbGljdCBjYXRzIGFzIHdlbGwuIFNpbmNlIGEgY2F0IGhhcyBoYWlyIGFsbCBvdmVyIGhpcyBib2R5LCBkYW5kcnVmZiBpcyBlYXN5IHRvIHNwb3QuIERhbmRydWZmIGlzIGFjdHVhbGx5IGRlYWQsIGRyaWVkIG91dCBza2luIGNlbGxzLiAKVGhpcyBnaXZlcyB5b3UgY29udHJvbCBvZiB0aGUgZGVwdGggb2YgZmllbGQgYW5kIHRoZSBjYW1lcmEgd2lsbCB0YWtlIGNhcmUgb2YgdGhlIHJlc3QuIApJIHdhcyBsb29raW5nIGF0IHRob3NlIGFuZCBzdGFydGVkIGRpZ2dpbmcgdGhyb3VnaCBwaWN0dXJlcy4gCkJ1dCwgb2theS4gSSB3YXMgcGFuaWNraW5nIGFuZCBJIGhhZCBhIGh1bmRyZWQgYmV0dGVyIHF1ZXN0aW9ucyBidXQgSSBmb3Jnb3QgdGhlbSBhbGwsIGFuZCBJIHRoaXMgbGl0dGxlIHBlbmNpbCBuZWNrZWQgZ2lybCB3aXRoIGJyYWNlcywgeW91IHNlZS4gCkkgd2lsbCBmb3JldmVyIGJlIGdyYXRlZnVsIGZvciB0aGUgd29yayBvZiAoZm9ybWVyIFVGQyBib3NzZXMpIExvcmVuem8gYW5kIEZyYW5rIEZlcnRpdHRhLCBhcyB3ZWxsIGFzIChVRkMgcHJlc2lkZW50KSBEYW5hIFdoaXRlIGFuZCBhbGwgVUZDIGVtcGxveWVlcyBmb3IgZ2l2aW5nIG1lIHRoZSBvcHBvcnR1bml0eSB0byBzaG93Y2FzZSBteSBza2lsbHMgYmVmb3JlIHRoZSB3b3JsZCwgZnJvbSBVRkMgNDYgdG8gVUZDIDIxNy4uIApJZiB5b3UgbGlrZWQgY2xpbWJpbmcgb3V0c2lkZSwgSSBzdWdnZXN0IHRyeWluZyB0byBmb2N1cyBvbiB0aGF0LiBZb3UgY2FuIGxvb2sgdXAgZWFzeSByb3V0ZXMgbmVhciB5b3UsIGFuZCBlYWNoIHJvdXRlIGlzIGFuIGFjY29tcGxpc2htZW50IG9mIHdoYXQgeW91ciBicmFpbiBib2R5IHRvZ2V0aGVyIGNhbiBkby4gCkF0IHByZXNlbnQgYW1vbmcgUG9rZXIgcm9vbXMgYXJlIG1vcmUgcG9wdWxhciBpbnRlcmVzdCBwb2tlciBib251c2VzIG9uIHRoZSBmaXJzdCBkZXBvc2l0ICAgMjAgMjUlIHBva2VyIGJvbnVzIHVwIHRvICQxMDAuIEZpeGVkIHBva2VyIGJvbnVzZXMgZXhpc3QgKGFib3V0ICQ1MCkgYW5kIGluIHBva2VyIHJvb21zIHdpdGggQ3J5cHRvbG9naWMgc29mdHdhcmUgbW9udGhseSBwb2tlciBib251c2VzIGZvciB0aGUgdGltZSBvZiBwb2tlciBwbGF5aW5nIGFyZSAkNSBwZXIgaG91ci4gVGhlIHdhZ2VyIHJlcXVpcmVtZW50IGlzIGV4cHJlc3NlZCBieSB0aGUgbnVtYmVyIG9mIHBsYXllZCBkZWFscyBvciB0aGUgYW1vdW50IG9mIGJldCBtb25leS4KQmVzdCBQbGFjZXMgdG8gV29yayAyMDE3CkkgbWlnaHQgaGF2ZSBiZWVuIHByZXR0eSBkdW1iIGJ1dCBJIGRpZG4gdGhpbmsgYWJvdXQgZ2V0dGluZyBhZGRpY3RlZCB0byBjYWZmZWluZSBldmVuIHRob3VnaCBJIGtuZXcgdGhhdCB3YXMgYSB0aGluZy4gCkFsbCBJIGFza2luZyBpcyB0aGF0IHlvdSBkb250IGJlIHNvIGZ1Y2tpbmcgbWlzZXJhYmxlIHRoZSBlbnRpcmUgdGltZS4gTWF5YmUgdGhlIG9jY2FzaW9uYWwgc21pbGUuIE1heWJlIGEgc2ltcGxlICJoZXkgaG93IGFyZSB5b3UiLiAKQnV0IHlvdSBhcmUgdW5pcXVlLiBZb3UgY2FuIHRha2Ugb25lIGlkZWEgZnJvbSB0aGUgd29ybGQgYXJvdW5kIHlvdSBhbmQgZml0IGl0IHRvIHlvdXJzZWxmLiBUaGUgb25seSB0aGluZyB5b3UgY2Fubm90IHByZXRlbmQgaXMgdG8gYmUgZXhhY3RseSBsaWtlIGFueW9uZSBlbHNlLi4gCldvcmsgYWxsIHlvdXIgbGlmZSBmb3Igb25lIHRoaW5nIGFuZCBJIGp1c3QgdHJ5aW5nIHRvIGVuam95IHRoaXMgYW5kIHRha2UgYWR2YW50YWdlIG9mIGl0IHRoZSBtb3N0IEkgY2FuLiAKSSBrbm93IGV2ZXJ5IHNpbmdsZSBpbmRpdmlkdWFsIHdobyBwZXJmZWN0bHkgcmVsYXRlZCB0byBNb29ubGlnaHQsIGZvciBleGFtcGxlLCBwcm9iYWJseSBjYW4ndCByZWxhdGUgdG8gTG92ZSwgU2ltb24gcGVyZmVjdGx5LiBJLCBmb3Igb25lLCBhcyBhIHNjaG9vbCBjb3Vuc2Vsb3Igd2hvIHNlZXMgdGhlc2UgaXNzdWVzIGluIHN0dWRlbnRzIHF1aXRlIG9mdGVuLCBhbSBUSFJJTExFRCB3aXRoIHRoaXMgbW92aWUuIApIYXZpbmcgR2F0b3JhZGUgb3IgcGVkaWFseXRlIGluIHlvdXIgcm9vbSBpcyBhbHdheXMgYSBnb29kIGlkZWEgaW4gYWRkaXRpb24gdG8gVHlsZW5vbC9pYnVwcm9mZW4gYW5kIHNuYWNrcyBhcyB3ZWxsLiBBIGhhdCBpc24ndCBhIGJhZCBpZGVhIHNvIHlvdSBkb24ndCBnZXQgeW91ciBmYWNlIGFic29sdXRlbHkgY29va2VkLi4gCk1hYXIgamEsIHdhdCBudXQgaGVlZnQgaGV0IG9tIHpvaWV0cyBzdGVlZHMgdGUgaGVyaGFsZW4gd2FudCB0ZWdlbndpbmQga3JpamcgamUgdm9vcnpla2VyLi4gClBhcmVudHMgYXNrZWQgbWUgd2hhdCBoYXBwZW5lZCBjYXVzZSBteSBrbmVlcyB3ZXJlIGFsbCBzY3JhdGNoZWQgYmxvb2R5IGFuZCBJIGp1c3QgdG9sZCBoZW0gSSBmZWxsIGRvd24gb24gdGhlIHJvYWQgbG9sCkhlcmUgYXJlIGEgY291cGxlIG9mIHBpY3R1cmVzLiBUaGUgb25lIG9uIHRoZSBsZWZ0IGlzIHRpdGxlZCAiVmFnaW5hIGFzIFBlbmlzIiBmcm9tIHN1cGVyIGNvb2wgYW5hdG9taXN0IEFuZHJlYXMgVmVzYWxpdXMgMTU0MyBib29rIERlIGh1bWFuaSBjb3Jwb3JpcyBmYWJyaWNhIChPbiB0aGUgRmFicmljIG9mIHRoZSBIdW1hbiBCb2R5KSwgYW5kIHRoZSBvbmUgb24gdGhlIHJpZ2h0IGlzIEl0YWxpYW4gc3VyZ2VvbiBWaWR1cyBWaWRpdXMgdW5kZXJzdGFuZGluZyBvZiB0aGUgdmFnaW5hIGFuZCB1dGVydXMgZnJvbSBEZSBhbmF0b21lIGNvcnBvcmlzIGh1bWFuaSAoMTYxMSkuLiAKR3Jvd2luZyB1cCwgbXkgcGFyZW50cyBkZWNsYXdlZCBzb21lIGNhdHMsIGJ1dCBub3Qgb3RoZXJzLiBCYXNpY2FsbHksIGlmIHRoZSBjYXQgZGFtYWdlZCBmdXJuaXR1cmUsIGl0IGdvdCBkZWNsYXdlZCwgd2l0aCB0aGUgZXhjZXB0aW9uIG9mIG15IGNhdC4gCldlZWRlIHNheXMgdGhlIG51bWJlciBvZiBzZXhwZXJ0cyBpbiBCb3VsZGVyIHNlZW1zIHRvIGJlIGRpc3Byb3BvcnRpb25hdGVseSBoaWdoLCBjb21wYXJlZCB3aXRoIG1hbnkgb3RoZXIgdHlwaWNhbCBBbWVyaWNhbiBjaXRpZXMuIApUaGVuIGhlIHdhcyBwbGF5aW5nIGdyZWF0IGF0IHRoZSBiZWdpbm5pbmcgb2YgdGhpcyBzZWFzb24sIGJ1dCBnb3QgaW5qdXJlZCBhZ2FpbiAoYWxvbmcgd2l0aCBTdWJiYW4sIEZvcnNiZXJnLCBBcnZpZHNzb24sIFNtaXRoLCBTaXNzb25zLCBTYWxvbWFraSwgUmluYWxkbyBhbmQgc29tZSBvdGhlcnMgSSBzdXJlIEkgZm9yZ2V0dGluZyAgIHdobyB3ZXJlIGFsbCBvdXQgZm9yIGV4dGVuZGVkIHBlcmlvZHMgc2luY2UgRGVjZW1iZXIvSmFudWFyeSBhdCB0aGUgc2FtZSB0aW1lKSBhbmQgaGFzIGJlZW4gY29tcGxldGVseSBpbnZpc2libGUgc2luY2UgaGUgcmV0dXJuZWQuSSB3aWxsIHNheSBpdCBub3Qgb25seSBoaW0uIE1vc3Qgb2YgdGhlIHBsYXllcnMgd2hvIHJldHVybmVkIGZyb20gaW5qdXJ5IGhhdmUgYmVlbiBwbGF5aW5nIHBvb3JseSBzaW5jZSB0aGV5IHJldHVybmVkLCBtb3N0IG5vdGljZWFibHkgRm9yc2JlcmcuIFN0aWxsLCBpdCBzZWVtcyBsaWtlIHdlIG9ubHkgZ290dGVuIGFib3V0IGEgZ29vZCAzIDQgbW9udGhzIG9mIHNvbGlkIGhvY2tleSBmcm9tIGhpbSBzaW5jZSBoZSB3YXMgdHJhZGVkIHRvIHVzIGxhc3Qgc2Vhc29uLkkgcmVjb21tZW5kIGEgMzQwaSBvciA0NDBpLCBjaGVhcGVyIHRoYW4gbTIuIApXaXRoIHNpcmVucyBzdXJyb3VuZGluZyB0aGVpciBOb3J0aCBTdCBob21lLCBzb21lIHBlcnNvbm5lbCBzYXcgdGhlIGZ1bm55IHNpZGUgb2YgdGhlaXIgZXhwbGFuYXRpb24uCk9uIHRoZXNlIGlzc3VlcywgSSB3b3VsZCBhcmd1ZSB0aGF0IHRoZSBtb2RlcmF0ZSB2aWV3cG9pbnQgdGVuZHMgdG8gYmUgbW9yZSBlbmxpZ2h0ZW5lZCBjb21wYXJlZCB0byBhIHN0YW5jZSBvbiBlaXRoZXIgb2YgdGhlIGV4dHJlbWUgZW5kcyBzaW1wbHkgYmVjYXVzZSB0aGUgbW9kZXJhdGUgcG9zaXRpb24gZ2VudWluZWx5IGNvbnNpZGVycyB0aGUgbWVyaXRzIG9mIGJvdGggc2lkZXMgYW5kIHVsdGltYXRlbHkgd2VpZ2hzIHRoZXNlIG1lcml0cyBhbmQgY29ucyB0byBhcnJpdmUgYXQgYSBxdWFsaWZpZWQgbW9kZXJhdGUgcG9zaXRpb24gKGlkZWFsbHkpLi4gClplaXJhbXN5IHUKSXQgYWxzbyBhbGxvd2VkIHVzIHRvIHNlZSBkZWVwZXIgaW50byBqdXBpdGVycyBhdG1vc3BoZXJlLCBhbmQgZ2VuZXJhdGVkIHNvIG1hbnkgaW50ZXJlc3RpbmcgZWZmZWN0cyAobGlrZSB3YXZlcyBvZiBnYXMgdHJhdmVsaW5nIGFyb3VuZCB0aGUgcGxhbmV0IGR1ZSB0byB0aGUgaW1wYWN0cykuLiAKU2kgY2UgbiBsYSBwcmluY2lwYWxlLCBkdSBoaWF0dXMgbm9saXRoaXF1ZSBhdmVjIGxlcyB0YWJvdXMgc3VyIGxlcyBtdGF1eCAoZXQgcHJvYmFibGVtZW50IHN1ciBsIHF1aSBvbnQgbG9uZ3RlbXBzIHN1cnZjdS4gRW4gdG91dGUgbG9naXF1ZSBsZSB0ZXN0YW1lbnQgbGd1YWl0IGxhIGNvbm5haXNzYW5jZSBkZXMgbmVyZ2llcyB2aXRhbGVzLCBjb3Ntb3RlbGx1cmlxdWVzIGV0IHNwaXJpdHVlbGxlcy4gTGVzIHVuZXMgc2Vyb250IG1hZ25pZmllcyBwYXIgbGUgbWdhbGl0aGlzbWUsIGxlcyBhdXRyZXMgZW5zZWlnbmVzICB0cmF2ZXJzIGxlcyBteXN0cmVzIGRlIHZpZSwgbW9ydCBldCByZW5haXNzYW5jZSBsZXMgZGV1eCwgZW5zZW1ibGUsIHNlcm9udCAgbCBkZSBsYSBnb2dyYXBoaWUgc2FjcmUgbm9saXRoaXF1ZSBldCBsZSBtYXRyaWFyY2F0LiAKSGUga25vd3MgdGhhdCB0aGUgYm93bGVyIHdpbGwgYmUgc3dlYXRpbmcganVzdCBhcyBtdWNoIGFzIGhpbSB0aGUgY2xvc2VyIHRoZXkgZ2V0IHRvIHRoZSBmaW5pc2ggbGluZSwgYW5kIGlzIGp1c3QgYXMgbGlrZWx5IGFzIHRoZSBiYXRzbWFuIHRvIGxvc2UgaGlzIG5lcnZlIGFuZCBib3dsIGEgbG9vc2UgYmFsbC4gCkJlcm5hcmQgb24gQXR3b29kIGFuZCBTdC4gRGVubmlzOyBteSBlbGRlc3QgYXR0ZW5kcyBzY2hvb2wgYXQgdGhlIGxhdHRlcikgYW5kIHRoZXkgbGVhbiBvbiB0aGUgbGliZXJhbCBzaWRlLiBJIGNoZWNrZWQgd2l0aCBteSB3aWZlIHdobyBpcyBtb3JlIHBsdWdnZWQgaW4gdG8gdGhlIG90aGVyIGNodXJjaGVzIGluIHRoZSBkaW9jZXNlcywgYW5kIHNoZSBhZ3JlZWQgdGhhdCBRdWVlbiBvZiBQZWFjZSBpcyBhbHNvIG1vcmUgbGliZXJhbCwgdGhhbiBzYXkgTWFyaWEgR29ycmV0dGkuIApUSVBTIFRPIFBPTkRFUiBCRUZPUkUgQlVZSU5HIEEgUE9LRVIgVEFCTEUKTm90IHRvIG1lbnRpb24gdGhhdCBldmVyeSBvdGhlciBraWQgaW4gdGhlIHNjaG9vbCB3b3VsZCBrbm93IHRoYXQgeW91IGNhbiBob25rIHRoZSBsaWJyYXJpYW4ncyBib29iIGFuZCBub3QgZ2V0IGluIHRyb3VibGU/IFdoYXQgdGhlIGhlbGwgd2VyZSB5b3Ugc3VwcG9zZWQgdG8gZG8/IEFsc28gaXQncyByZWFsbHkgYmFkIGZvciBjaGlsZHJlbiB0byBnZXQgbm8gY29uc2VxdWVuY2VzIGZvciBzaGl0IHRoZXkgZG8uIFdoYXQga2luZCBvZiBEYWQgd291bGQgdGhpcyBndXkgYmUgdG8geW91ciBjaGlsZHJlbiBhbmQgd2hhdCBraW5kIG9mIGxlc3NvbnMgd291bGQgaGUgdGVhY2ggdGhlbSBhYm91dCBob3cgdG8gdHJlYXQgd29tZW4/SSB0aGluayBpdCBpcyBhbiBhY2NvbXBsaXNobWVudCB0aGF0IFdIRU4geW91IGluZHVsZ2UgT0NDQVNJT05BTExZIHRoYXQgaXQgZW5kcyB0aGVyZSBhbmQgeW91IG1vdmUgb24gd2l0aCB5b3VyIGdvb2QgaGFiaXRzIHRoYXQgeW91IHN0aWNrIHRvIG1vc3Qgb2YgdGhlIHRpbWUuIEl0J3MgYmV0dGVyIHRoYW4gdGhlIGFsdGVybmF0aXZlIG9mIHNsaXBwaW5nIHVwIGFuZCB0aGVuIGhhdGluZyB5b3Vyc2VsZiBhbmQgZ2l2aW5nIHVwIGFuZCBub3QgbW92aW5nIG9uIHdpdGggeW91ciBoZWFsdGh5IHBsYW4gYWdhaW4gZm9yIDYgbW9udGhzLiAKVHdvIHdheXMgdG8gYmVjb21lIGEgYmV0dGVyIHBva2VyIHBsYXllciBhcmUgdG8gd2F0Y2ggYSByZWFsbHkgZ29vZCBwbGF5ZXIgYW5kIHRvIHBsYXkgdGhlIGdhbWUuCjcpIENlcnZpY2FsIGRpc2NzIGFyZSBub3QgdGhlIG1vc3QgY29tbW9uLCBwcmltYXJ5IHNvdXJjZSBvZiBuZWNrIHBhaW4uClRoZSBkcmVhbSB3b3VsZCBiZSB0byBkZXZlbG9wIGEgbG9jYWwgdGFsZW50IG5ldHdvcmssIHdoZXJlIHdlIGNhbiByZWFjaCBvdXQgYW5kIGZpbmQgcGVvcGxlIHRvIGNvbGxhYm9yYXRlIHdpdGggb3IgdGVhbSB1cCB3aXRoIHRvIGZ1cnRoZXIgb3VyIGNyZWF0aXZlIGVuZGVhdm91cnMuIFBsZWFzZSBhdm9pZCB0aGluZ3MgbGlrZSBwb2xhcml6aW5nIHBvbGl0aWNhbCB2aWV3cyBpZiB0aGV5IGFyZSBzaW1wbHkgdG8gYXJndWUgb24gdGhlIGludGVybmV0LiBBbnkgdG91Y2h5IHN1YmplY3RzIHRoYXQgY2FuIHlpZWxkIGhlYWx0aHkgZGlzY3Vzc2lvbiBhcmUgZmluZSwgYnV0IGxldCBhdm9pZCBuZWVkbGVzcyBpbnRlcm5ldCBiaWNrZXJpbmcuIFJlbWVtYmVyIGFydCBpcyBhcnQsIHlvdSBtYXkgbm90IGxpa2UgaXQgZm9yIHdoYXRldmVyIHJlYXNvbiwgYnV0IHlvdSBjYW4gc3RpbGwgdGFsayBhYm91dCBpdCBvYmplY3RpdmVseSA6KQpXaGVuIFBhZGRvY2sgYm91Z2h0IGEgaG91c2UgaW4gQnJldmFyZCBDb3VudHksIEZsb3JpZGEsIGluIDIwMTMsIGhlIHRvbGQgbmVpZ2hib3JzIGhlIGxpdmVkIGluIExhcyBWZWdhcywgYnV0IHdhbnRlZCB0aGUgaG9tZSBhcyBhIGJhc2UgdG8gc2VhcmNoIGZvciBhIHBsYWNlIGZvciBoaXMgbW90aGVyLiBIZSBnYXZlIG5leHQgZG9vciBuZWlnaGJvciBEb24gSnVkeSBhIHNldCBvZiBrZXlzIGFuZCBhc2tlZCBoaW0gdG8gY2hlY2sgdGhlIHBsYWNlIHdoZW4gaGUgd2FzbiBhcm91bmQuIApUaGlzIHdlZWtlbmQsIHNlZWsgb3V0IHRoaXMgdmljdGltIGltcGFjdCBzdGF0ZW1lbnQsIHJlYWQgaXQsIGFuZCB0aGVuIGRlY2lkZSBuZXZlciB0byB0YWtlIHRoYXQgY2hhbmNlIGFnYWluLiBIb3cgbWFueSBtb3JlIG1vdGhlcnMgZG8gd2Ugd2FudCBseWluZyBiZXNpZGUgdGhlaXIgZGVhZCBjaGlsZCBvdmVybmlnaHQsIGFjY29tcGFueWluZyB0aGVtIGFzIHRoZXkgbGllIGNvbGQsIHJ1YmJpbmcgdGhlIGhhbmRzIHRoYXQgd2VyZSBvbmNlIHdhcm0gYW5kIHZpYnJhbnQgYW5kIGxvdmluZy4uIApUaGUgcGV0aXRpb25lciBhdHRvcm5leSBkb2VzIG5vdCBoYXZlIHlvdXIgYmVzdCBpbnRlcmVzdHMgYXQgaGVhcnQsIGFuZCB5b3Ugc2hvdWxkIHRyZWF0IHRoZWlyIG9mZmVyIHdpdGggYSBoZWZ0eSBkb3NlIG9mIHNhbHQuIEV2ZW4gaWYgdGhleSBrbm93IHRoZSBwZXRpdGlvbiBoYXMgdmVyeSBsaXR0bGUgbWVyaXQsIHRoZXkgY2FuIGFuZCBsaWtlbHkgc2hvdWxkIHNlZWsgdG8gZ2V0IHlvdSB0byBhZ3JlZSB0byBpdCB2b2x1bnRhcmlseS4gClRoZXNlIGRheXMsIEkgd291bGQgZGVmaW5lIG15IHJlbGlnaW91cyB2aWV3cyBieSBzYXlpbmcgdGhhdCBJIGJlbGlldmUgaW4gYSBoaWdoZXIgcG93ZXIgYnV0IHRoYXQgaXQgaXMgbm90ICJHb2QiLiAKQXMgaWYgaGUgdGhvdWdodCBJIHNob3VsZCBoYXZlIGRlZmVuZGVkIGhpcyBzdHVmZiB3aXRoIGEgOW1tIGluIG15IGZhY2UuLiAKUGF0YWdvbmlhUGxhbmluZyBSb2xsIFRvcCBQYWNrICgkMTI5KS4gClRoZTFtb29ubWFuICA2MCBwb2ludHMgIHN1Ym1pdHRlZCAxNCBkYXlzIGFnbwpXaXRoIHRob3NlIHR3byBjYXJkcywgeW91IHNob3VsZCBiZSBhYmxlIHRvIGRvIHRoZSBmb2xsb3dpbmc6IGRldGVybWluZSB3aGV0aGVyIGl0IGhhcyBhIGdvb2QgY2hhbmNlIG9mIHdpbm5pbmcsIGRldGVybWluZSB5b3VyIGNoYW5jZXMgYWdhaW5zdCB0aGUgb3RoZXIgcGxheWVycyBhbmQgZGV0ZXJtaW5lIHdoZXRoZXIgaXQgdGltZSB0byBmb2xkIGluIHRoZSBzdWNjZXNzaXZlIHJvdW5kcy4uIApPbmUgb2YgdGhlIHN1cmdpY2FsIHJlc2lkZW50cyBoZXJlIGFwcGFyZW50bHkgaGFzIGEgaG9ycmVuZG91cyB0cmFjayByZWNvcmQgZm9yIHRyZWF0aW5nIHRob3NlICJiZWxvdyIgaGVyIHJhbmsgYW5kIHRoZSBnb3NzaXAgc2F5cyBvdXIgaG9tZSBpbnN0aXR1dGlvbiBpc24ndCBnb2luZyB0byBtYXRjaCBoZXIgZm9yIGZlbGxvd3NoaXAgaGVyZS4gCldoYXRldmVyIGhlIGxvdmVkIGhlIGxvdmVkIGl0IHRvdGFsbHkgYW5kIHdpdGhvdXQgY2FyaW5nIHdoYXQgYW55b25lIHRob3VnaHQuIEhlIG5ldmVyIHRyaWVkIHRvIGJlIGFueXRoaW5nIG90aGVyIHRoYW4gaGltc2VsZiBhbmQgdGhhdCB3YXMgYW1hemluZy4gCk5vIHBlcnNvbmFsIGF0dGFja3MuClNpdHRpbmcgb24gdGhlIGJhbGw6IFNpdCBvbiB0aGUgYmFsbCB3aXRoIHlvdXIgZmVldCBmbGF0IG9uIHRoZSBmbG9vciBhbmQgYmUgc3VyZSB0byBtYWludGFpbiBjb3JyZWN0IHBvc3R1cmUuIE1vc3QgcGVvcGxlIGhhdmUgd2VhayBtaWQvdXBwZXIgYmFjayBtdXNjbGVzIGFuZCB0aGlzIGFjdGl2aXR5IGlzIGEgZ3JlYXQgd2F5IHRvIGltcHJvdmUgZW5kdXJhbmNlIGluIHRoZXNlIHBvc3R1cmFsIG11c2NsZXMuIElmIHlvdSBzdGFydCBzbG91Y2hpbmcsIHN0b3AgYW5kIGdpdmUgeW91ciBtdXNjbGVzIGEgcmVzdC4KMSBwb2ludCAgc3VibWl0dGVkIDEgeWVhciBhZ28KQXMgYSBxdWljayByZXZpZXcsIHRob3VnaCwgYWxsIHBsYXllcnMgYXJlIGRlYWx0IHR3byBjYXJkcyBkb3duLCBhbmQgdGhlcmUgaXMgYSByb3VuZCBvZiBiZXR0aW5nLiBCZXR0aW5nIGFjdHVhbGx5IGJlZ2lucyB3aXRoIHRoZSBibGluZHMsIHdoZXJlIHRoZSB0d28gcGxheWVycyB0byB0aGUgbGVmdCBvZiB0aGUgZGVhbGVyIHB1dCBpbiBiZXRzIGJlZm9yZSB0aGUgZmxvcCBiZWZvcmUgc2VlaW5nIHRoZWlyIGNhcmRzLiAKU2VpdGVuIEF1cyBNb2VsbGVyIEdydW5kbGFnZW4gRGVyIEVsZWt0cm90ZWNobmlrICg2MDAgRFBJKS4gClRoZSBzdXNwZWN0IHdhcyBndW5uZWQgZG93biwgcmVwb3J0ZWRseSBieSBmb3JtZXIgRmxpbnQgUG9saWNlIENoaWVmIEJyYWRmb3JkIEJhcmtzZGFsZSwgd2hvIHdhcyBwbGF5aW5nIHBva2VyIHRoZXJlIGF0IHRoZSB0aW1lLiAKU28sIFlFUywgSSBkbyByZWFsbHkgZG8gZmVlbCBnb29kLiBJIGdlbnVpbmVseSBnb29kIGluIHRoZSByZWdpb24gb2YgdGhpcyBwcm9ncmFtLCBhbmQgYmVjYXVzZSBJIGFjcXVpcmUgbWFkZSBhIHBhcnRpY3VsYXIgdmVyeSByaWdodCBhbmQgcHJhY3RpY2FsIGZpbmFuY2lhbCBwdXJjaGFzZS5BbmQgZmluYWxseSwgdGhlIGlzc3VlIGJ1ZyByZW1haW5zIGJpdGluZyByZXN0cmljdGluZyBlbmQgVG9ueSBhZGFtb3dpY3ogTW9lYWtpIGxvY2F0ZWQgaW4gdGhlIGdsdXRlcyAob3IgYWN0dWFsbHksIGluIGFsbCBhcm0gcmVzdWx0aW5nIGluIGEgYnJva2VuIHNob3VsZGVyIGRvaW5nIHRoZSBTdGVlbGVycyBnYW1lKSwgYXMgaXQgY29tcG9uZW50IGhhcyB5b3VyIENoaWVmcyBsZWFkaW5nIG9mZmljZSBsb29raW5nIGZvciBmb3IgaW5kaXZpZHVhbHMgdGhhdCBkb2VzIHN0YXkgYWx3YXlzIG9uIHRoZSBsaW5lIG9mIGJ1c2luZXNzIGFzIGEgbWFqb3IgMyBHb2xkZW4gR29vc2UgRnJhbmN5IFNuZWFrZXJzIGVzdHJpY3RlZCBlbmQuIAoiSW4gdGhlIGh1ZGRsZSwgSSB0b2xkIEJyaWFuIHRvIGp1c3QgdGhyb3cgaXQgdXAgYW5kIGdpdmUgbWUgYSBjaGFuY2UgYW5kIGhlIGRpZCwiIERhdmlzIHNhaWQuCkkgc2VlbiB0aGlzIHBocmFzZSBtdWx0aXBsZSB0aW1lcyBmcm9tIFlMIHBlb3BsZSwgYnV0IEkgc2VlbiBhbiBhY3R1YWwgdHJhaW5lZCBhcm9tYXRoZXJhcGlzdCBzYXkgaWYgeW91IGRvbiBsaWtlIGl0LCB5b3UgZG9uIG5lZWQgaXQuIFlldCwgbm8gWUwgZGlzdHJpYnV0b3IgY2FuIGNpdGUgYSBzb3VyY2UgYmVjYXVzZSB0aGV5IGhlYXJkIGl0IGZyb20gc29tZW9uZSBpbiB0aGVpciB1cGxpbmUsIGFuZCBubyBvbmUgcmVjZWl2ZXMgYW55IHRyYWluaW5nIGluIHRoaXMgc3R1ZmYgYmVjYXVzZSBpdCAiYWxsIG5hdHVyYWwiIGFuZCB0aGVyZWZvcmUgbXVzdCBiZSBoYXJtbGVzcy4gU29ycnkuIApUaGF0IHdlbnQgc3RyYWlnaHQgaW50byB0aGUgZ2FtZS4KQW1vbmcgdGhlIGlzc3VlcyBhdCBwbGF5Oi4gCjEuIExpc3RlbiB0byB5b3VyIGN1c3RvbWVycy4gVGhlbiBsaXN0ZW4gc29tZSBtb3JlLgpUaGVzZSBhcmUgZGV0YWlscyBvZjoxLiAKVGhlcmUncyBkb2dzLCB0aGVyZSdzIGhvcnNlcywgcnVnYnkgbGVhZ3VlICAgeW91IGNhbiBiZXQgb24gYW55dGhpbmcsIiBoZSBzYWlkLiAiVGhlIGNhcGFjaXR5IGZvciBnYW1ibGluZyBoYXMgYmVjb21lIG1vcmUgc2lnbmlmaWNhbnQuIiBXaGlsZSBnYW1ibGluZyBhZGRpY3Rpb24gd2FzIGEgInRlcnJpYmxlIHRoaW5nIiwgTXIgRmVyZ3Vzb24gc2FpZCB0aGUgc3RhdGlzdGljcyBzaG93ZWQgb25seSAidHdvIHRvIHRocmVlIHBlciBjZW50IiBvZiBnYW1ibGVycyBzdWZmZXJlZCBmcm9tIHRoZWlyIGhhYml0cy4gUGFudGhlcnMgQmF0aHVyc3QgZ2VuZXJhbCBtYW5hZ2VyIEpvaG4gRmVhcm5sZXkgc2FpZCB0aGUgY2x1YiBkaWQgbm90IG9mZmVyIGFjY291bnRzIG9yIHNtYXJ0Y2FyZHMsIGJ1dCBjb21wbGltZW50ZWQgdGhlIE5TVyBHb3Zlcm5tZW50IG9uIHRoZSBpbnRyb2R1Y3Rpb24gb2YgYSBtaW5pbXVtIHNpeCBtb250aCBzZWxmIGV4Y2x1c2lvbiBwZXJpb2QuIApObyBzdWNoIHRoaW5nIGhhcHBlbmVkIHdpdGggaHVtYW5zLi4gCkh5ZHJvY2hsb3JpYyBhY2lkIHN1cHBsZW1lbnRzIGZvciBoZWFsdGgKUGVyaGFwcyBpdCB3b3VsZCBoYXZlIGNvbnRpbnVlZCB0byBtYWtlIHNlbnNlIGlmIEhlbmxleSBoYWQgbWFuYWdlZCB0byBzaXQgcXVpZXRseSBpbiBwcmlzb24gd2hpbGUgaGlzIGxhd3llcnMgYXBwZWFsZWQgdGhlIGNvbnZpY3Rpb24uIE1heWJlIGhlJ2QgaGF2ZSBnb3R0ZW4gYSBuZXcgdHJpYWwuIApMaWtlbHkgZ29lcyBpbiBhbmQgZmlsbHMgb3VyIGd1eSBzcG90LCBzYWlkIENhbnVja3MgZGlyZWN0b3Igb2Ygc2NvdXRpbmcgSnVkZCBCcmFja2V0dCBvbiB0aGUgZHJhZnQgZmxvb3IsIHJlZmVyZW5jaW5nIHRoZSBsaWtlbGlob29kIHRoYXQgTWFkZGVuIGlzIGNhcGFibGUgb2YgZmlsbGluZyB0aGUgYmlnIGhvbGUgbGVmdCBieSBmZWxsb3cgQ2FudWNrcyBwcm9zcGVjdCBhbmQgSG9iZXkgQmFrZXIgQXdhcmQgd2lubmVyIEFkYW0gR2F1ZGV0dGUuClNhY3JlZCBIZWFydApJZiBvbmx5IHRoZSBUaW1lcyB3b3VsZCBjaGFuZ2UgaXRzIG5hbWUgdG8gUHJhdmRhLCB3ZSBjb3VsZCBwcmV0ZW5kIGl0IGlzIHRoZSB0aW1lIG9mIEJyZXpobmV2IGFuZCBLaHJ1c2hjaGV2ICB3aGVyZSB5b3UgY291bGQgdm90ZSBmb3IgdGhlIENvbW11bmlzdCBQYXJ0eSBvciB0aGUgQ29tbXVuaXN0IFBhcnR5LiAKUGFjaWZpYyBQb2tlciBvZmZlcnMgZWFzeSB0byBiZWF0IGdhbWVzLCB3aGljaCBhcmUgYSBtYWpvciBoaXQgYW1vbmcgbmV3IGNvbWVycywgYW5kIHRoaXMgc2l0ZSBzcGVjaWFsaXplcyBpbiBubyBsaW1pdCB0b3VybmFtZW50cyBvZiBIb2xkJ2VtIHBva2VyLiAKJ0kgbGlrZWQgaGF2aW5nIHNleCB3aXRoIGRpZmZlcmVudCBwZW9wbGUgYW5kIHlvdSdkIGdldCBwYWlkIGZvciBpdC4gSG93IHdvbmRlcmZ1bC4gV2hhdCBhIGdyZWF0IHdheSB0byBtYWtlIGEgbGl2aW5nLicKMTcgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KV2hhdCBzaG91bGQgdGhlIENsZXZlbGFuZCBCcm93bnMgZG8gYWJvdXQgdGhhdD8zIGRheXMgYWdvICsgQnkgVGVycnkgUGx1dG8sIFRoZSBQbGFpbiBEZWFsZXJDbGV2ZWxhbmQgQnJvd25zOiBUYWxraW4nIHRydXRoIGFib3V0ICdnb2luZyBmb3IgaXQnIGFuZCB3aGF0IG1ha2VzIHNlbnNlIGluIDIwMTkgICBUZXJyeSBQbHV0byBDbGV2ZWxhbmQgQnJvd25zOiBUYWxraW4nIHRydXRoIGFib3V0ICdnb2luZyBmb3IgaXQnIGFuZCB3aGF0IG1ha2VzIHNlbnNlIGluIDIwMTkgICBUZXJyeSBQbHV0byBUaGUgQ2xldmVsYW5kIEJyb3ducyBoYXZlIGEgZ29vZCB5b3VuZyBxdWFydGVyYmFjaywgYnV0IEdNIEpvaG4gRG9yc2V5IGtub3dzIHRoZSB0ZWFtIG5lZWRzIHNvIG11Y2ggbW9yZS42IGRheXMgYWdvICsgQnkgVGVycnkgUGx1dG8sIFRoZSBQbGFpbiBEZWFsZXJDbGV2ZWxhbmQgSW5kaWFuczogV2h5IEhhbmxleSBSYW1pcmV6PyBIb3cgYWJvdXQgc29tZSBnb29kIG5ld3MgZnJvbSBHb29keWVhcj8gICBUZXJyeSBQbHV0byBDbGV2ZWxhbmQgSW5kaWFuczogV2h5IEhhbmxleSBSYW1pcmV6PyBIb3cgYWJvdXQgc29tZSBnb29kIG5ld3MgZnJvbSBHb29keWVhcj8gICBUZXJyeSBQbHV0byBXaGVuIHRoZSBJbmRpYW5zIHdlbnQgc2hvcHBpbmcgZm9yIGEgYmFyZ2FpbiBiYXQsIHRoZXkgc2V0dGxlZCBvbiBIYW5sZXkgUmFtaXJlei4gVGhleSBoYWQgYSBmZXcgb3RoZXIgY2hvaWNlcy42IGRheXMgYWdvICsgQnkgVGVycnkgUGx1dG8sIFRoZSBQbGFpbiBEZWFsZXJTaG1vbyBHb29kISBIb3cgSm9obiBDYXJyb2xsJ3Mgd29tZW4ncyB0ZWFtIGhhcyBidWlsdCB0aGUgYmVzdCBzZWFzb24gaW4gc2Nob29sIGhpc3RvcnkgICBUZXJyeSBQbHV0byBTaG1vbyBHb29kISBIb3cgSm9obiBDYXJyb2xsJ3Mgd29tZW4ncyB0ZWFtIGhhcyBidWlsdCB0aGUgYmVzdCBzZWFzb24gaW4gc2Nob29sIGhpc3RvcnkgICBUZXJyeSBQbHV0byBJbiB0aGUgcHJldmlvdXMgdHdvIHNlYXNvbnMsIHRoZSBKb2huIENhcnJvbGwgd29tZW4ncyBoYWQgYSBjb21iaW5lZCAxNSAzNiByZWNvcmQuIE5vdyB0aGV5IGFyZSBzdHJlYWtpbmcgaW50byB0aGUgRCAzIE5DQUEgdG91cm5hbWVudCB3aXRoIGEgMjIgNiByZWNvcmQuMSB3ZWVrIGFnbyArIEJ5IFRlcnJ5IFBsdXRvLCBUaGUgUGxhaW4gRGVhbGVyQ2xldmVsYW5kIEJyb3ducyBTY3JpYmJsZXM6IEdyZWcgUm9iaW5zb24sIEJyZXNoYWQgUGVycmltYW4gYW5kIEpvaG4gRG9yc2V5ICAgVGVycnkgUGx1dG8gQ2xldmVsYW5kIEJyb3ducyBTY3JpYmJsZXM6IEdyZWcgUm9iaW5zb24sIEJyZXNoYWQgUGVycmltYW4gYW5kIEpvaG4gRG9yc2V5ICAgVGVycnkgUGx1dG8gVGhlIENsZXZlbGFuZCBCcm93bnMgbWFkZSBhbiBpbXBvcnRhbnQgc2lnbmluZyBpbiBHcmVnIFJvYmluc29uLiAKVGhlIE1hcGxlIExlYWZzICgxMiA3IDEpIHBsYWNlZCBuZXdseSBhY3F1aXJlZCBjZW50cmUgUGF0cmljayBIb2xsYW5kIG9uIGl0cyB0b3AgbGluZSBiZXR3ZWVuIFBoaWwgS2Vzc2VsIGFuZCB2YW4gUmllbXNkeWssIHdoaWNoIGFsbG93ZWQgdmFuIFJpZW1zZHlrIHRvIG1vdmUgYmFjayB0byBoaXMgbmF0dXJhbCBwb3NpdGlvbiBhdCBsZWZ0IHdpbmcuIEhlIGxvb2tlZCBjb21mb3J0YWJsZSBiYWNrIG9uIHRoZSBsZWZ0IHNpZGUsIHNjb3JpbmcgaGlzIGVpZ2h0aCBhbmQgbmludGggZ29hbHMgb2YgdGhlIHNlYXNvbiBpbiB0aGUgZmlyc3QgcGVyaW9kLgpGaW5hbmNpYWxseSBhbmQgc29jaWFsbHksIHBva2VyIGlzIG1vdmluZyBvdXQgb2Ygc21va3kgYmFja3Jvb21zLCBpbnRvIGdsaXR6eSBhcmVuYS4gT25saW5lIHBva2VyIGhhcyBncm93biBpbnRvIGEgZ2xvYmFsIGluZHVzdHJ5IHdpdGggYSAxNSBiaWxsaW9uIHR1cm5vdmVyLiAKWW91IGFyZSBpbiByZXRhaWwsIEkgd291bGQgcmVjb21tZW5kIGRlZmluaXRlbHkgY29uc2lkZXIganVtcGluZyBjaGFubmVscy4gClRoZSBzcGluIG9uIHRpbWUgb2ZmIGJlaW5nIG1hZGUgdG8gbG9vayBsaWtlIGEgcGVyayBiZWNhdXNlIHlvdSBnZXQgdGhlIG9mIHdvcmtpbmcgcmVtb3RlbHkuIFRoaXMgd291bGQgYmUgaWxsZWdhbCB3aGVyZSBJIGxpdmUgICByZWdhcmRsZXNzIG9mIHlvdXIgd29ya3NwYWNlLCB5b3UgYXJlIGVudGl0bGVkIHRvIGxlYXZlLgpNb3N0IG91dHNvdXJjZSBzdGFmZiBhcmUgcHJldmlvdXNseSByZXRhaWwgYW5kIGhhdmUgYWJvdXQgYXMgbXVjaCBza2lsbCBhdCBjcmlzaXMgc3VwcG9ydCBhcy4gClVuZm9ydHVuYXRlbHkgdGhlIGVjb25vbWljIGluY2VudGl2ZXMgZHJpdmluZyBibGFjayBtYXJrZXQgbWFrZSBmZW50YW55bCBhbmQgZXZlbiBtb3JlIHBvdGVudCBhbmFsb2d1ZXMgYSBubyBicmFpbmVyLiBUaGUgc3R1ZGllcyBhbGwgc2F5IHRoYXQgZGVjcmltaW5hbGl6YXRpb24gaXMgdGhlIGNoZWFwZXN0IGFuZCBtb3N0IGVmZmVjdGl2ZSB3YXkgdG8gY29tYmF0IHRoaXMgYnV0IHBlb3BsZSBhcmUgc28gbW9yYWxseSBhbGlnbmVkIGFzICJhbnRpZHJ1ZyIgdGhhdCB0aGlzIGN1cnJlbnQgc2l0dWF0aW9uIGlzIGRvb21lZCB0byBjb250aW51ZSBhbmQgZ2V0IHdvcnNlLi4gCkFyZWtncmEgdQpBc3Ryb25hdXRzIGluIHNpeCBtaXNzaW9ucyBiZXR3ZWVuIEFwb2xsbyAxMSBpbiAxOTY5IGFuZCBBcG9sbG8gMTcgaW4gMTk3Mi4gClNlcmlhbCBrZXkgZm9yIG9wZW4gY2FudmFzIDQuNS4xOD8KVGhlIGVuZCBvZiB0aGUgZGF5LCBJIGRvbiBjYXJlIGlmIHRoZXkgYWRkIGEgbWlsbGlvbiBjdXN0b21pemF0aW9uIG9wdGlvbnMgb3IgaWYgdGhleSB0YWtlIHRoZW0gYWxsIGF3YXksIHRoZSBnYW1lIHdpbGwgYmUgZXhhY3RseSBlcXVhbGx5IGFzIG11Y2ggZnVuIGFzIGl0IGlzIHRvZGF5LiBJIG5vdCBhcmd1aW5nIGFnYWluc3QgdGhlIGFkZGl0aW9uIG9mIGNvbnRlbnQsIEkgbW9yZSBhcmd1aW5nIGFnYWluc3QgdGhlIHBlcmNlaXZlZCBuZWVkIGZvciBtb3JlIGNvbnRlbnQuCkFsc28gY29udGFpbnMgYSB3aG9sZSBjaGFwdGVyIGdpdmluZyBhdHRlbnRpb24gdG8gUHJvYmFiaWxpdHkgVGhlb3J5IGJhc2ljcywgZm9yIGFueWJvZHkgd2hvIGlzIGludGVyZXN0ZWQgaW4gcHJvYmFiaWxpdHkgY2FsY3VsdXMuIApNb250cmVhbCBpcyBlYXN5IGFuZCBhcyBhIFBSIHlvdSBjYW4gdGFrZSBGcmVuY2ggY291cnNlcyBvbiB0aGUgY2hlYXAuIE15IGh1c2JhbmQgcGFpZCA5MCQgZm9yIDEgeWVhciBvZiBsZXNzb25zLiAKVGhleSBsb3ZlIGFwcHJvYmF0aW9uIG9yIHByYWlzZTsgYW5kIGEgZG9nIGNhcnJ5aW5nIGEgYmFza2V0IGZvciBoaXMgbWFzdGVyIGV4aGliaXRzIGluIGEgaGlnaCBkZWdyZWUgc2VsZiBjb21wbGFjZW5jeSBvciBwcmlkZS4gClRoZSBsaWZlc3R5bGUgcGxheWluZyBvbmxpbmUgaXMgYW1hemluZy4gV29yayB5b3VyIG93biBob3Vycywgbm8gYm9zcywgZXRjLiAKQWZmZWN0IGV2ZXJ5Ym9keSwgc2FpZCBBbXkgRnJlZWRoZWltLCBhIHNlbmlvciBkZXB1dHkgcHJvc2VjdXRvciBpbiB0aGUgS2luZyBDb3VudHkgUHJvc2VjdXRvciBPZmZpY2Ugd2hvIGhhbmRsZXMgZmVsb255IHRyYWZmaWMgY3JpbWVzLiBPbiB0aGUgcm9hZCwgb3VyIGtpZHMgYXJlIG9uIHRoZSByb2FkLCBvdXIgc3BvdXNlcy4gQWxsIG9mIHVzIGFyZSB2dWxuZXJhYmxlIHRvIGFuIGltcGFpcmVkIGRyaXZlci4gCkluIGFkZGl0aW9uIHRvIGdhbWluZywgdGhlIHRvcCBkZWNrIHdpbGwgYmUgYSBuaWdodGNsdWIgd2l0aCBlbnRlcnRhaW5tZW50IGFuZCBldmVudHMuIENydWlzZXMgd2lsbCBjb3N0ICQxMC4gRm9vZCBvbiBib2FyZCBpcyBzb2xkIHNlcGFyYXRlbHkuIFBhdHJvbnMgY2FuIGVhdCBpbiB0aGUgZGluaW5nIHJvb20gZm9yICQxNSBvciBvcmRlciBpdGVtcyBhIGxhIGNhcnRlLCByYW5naW5nIGZyb20gJDYgdG8gJDEyLgpPbmRlciBrZW5uaXMgZGVsZW4gZW4gd2V0ZW5zY2hhcCBiZW9lZmVuZW4gdmVyc3RhIGlrIG1lZXJkZXJlIGRpbmdlbi4gCkhlIGhhc24gc3RvcHBlZCBjb21wbGFpbmluZyBhYm91dCBvdGhlciB3b3JrZXJzIHRvIGV2ZXJ5b25lIGhlIHRhbGtzIHRvLiBIZSB3aWxsIGNvbWUgaW50byBteSBvZmZpY2UgYW5kIGNvbXBsYWluIGFib3V0IHNwZWNpZmljIGVtcGxveWVlcyB3aG8gaGUgZG9lc250IGxpa2UgYmVjYXVzZSBvZiBkaXNjcmltaW5hdG9yeSByZWFzb24geCBvciB5LiBIZSBhbHNvIGRvZXNudCBoaXJlIGZlbWFsc3MgYmVjYXVzZSBoZSB0aGlua3MgdGhlIG1lbiB3aWxsIHVzZSB1cCB0aGVpciB0aW1lIGJ5ICJ0cnlpbmcgdG8gaGVscCIgYW5kIGZhd24gb3ZlciB0aGUgZ2lybCB0b28gbXVjaCB0aGF0IHdlIHdvbiBkbyBvdXIgd29yay4gODAlIG9mIG91ciBzdGFmZiBhcmUgbWFycmllZCBpbmNsdWRpbmcgdGhlIGRpcmVjdG9yIGJ1dCBoZSBpcyB0aGUgb25seSBvbmUgd2hvIHRhbGtzIGFib3V0ICJ0aGUgZ29vZCBvbGQgZGF5cyIgd2hlcmUgeW91IGNvdWxkIGhhdmUgc3RyaXBwZXJzIGluIHRoZSBvZmZpY2UuICAxIHBvaW50cyAgc3VibWl0dGVkIDEgeWVhciBhZ28KQSBjb21iaW5hdGlvbiBvZiBtaWxkIHRlbXBlcmF0dXJlcyBhbmQgcmVsYXRpdmVseSBkcnkgcm9hZCBzdXJmYWNlIGhhcyB0byBiZSBpbiBwbGFjZSBpbiBvcmRlciBmb3IgdGhlIG9wZXJhdGlvbiB0byBiZSBjYXJyaWVkIG91dCBzdWNjZXNzZnVsbHkuIE9uIFRodXJzZGF5LCBFbnZpcm9ubWVudCBDYW5hZGEgcHJlZGljdGVkIHRoYXQgdW5zZWFzb25hYmx5IGxvdyB0ZW1wZXJhdHVyZXMgd291bGQgcmlzZSB0byBhYm92ZSBmcmVlemluZyBvdmVyIHRoZSB3ZWVrZW5kIGEgd2FybWluZyB0cmVuZCBleHBlY3RlZCB0byBjb250aW51ZSB1bnRpbCBhdCBsZWFzdCBXZWRuZXNkYXkuRWFjaCB5ZWFyIG5lYXJseSAyMDAsMDAwIHBvdGhvbGVzIGFyZSBmaWxsZWQgaW4gTW9udHJlYWwuIApUaGlzIGlzIGEgZ29vZCB0aW1lIHRvIHBvaW50IG91dCBzb21ldGhpbmcgdGhhdCBpcyBvZnRlbiBjb25mdXNpbmcgdG8gYmVnaW5uaW5nIHBsYXllcnMgd2hlbiBjb21wdXRpbmcgcG90IG9kZHMuIApTbyB3aGVuIHlvdSBkbyBiZXQsIGFuZCBibHVmZiwgeW91IHdpbGwgYmUgdGFraW5nIG1vcmUgc2VyaW91c2x5LiBMZWFybmluZyB0aGlzIHNlY3JldCBoYXMgZW5hYmxlZCBteSBwb2tlciB3aW5zIHRvIGp1bXAsIGV2ZW4gd2hlbiBzb21lIHBlb3BsZSBkb24ndCBiZXQgYWdhaW5zdCBtZS4gClRoZW1vdmVmcm9tIHRoZSBjb3VudHJ5IHRvIExvbmRvbiB3YXMgcGVyaGFwcyBhIGxpdHRsZSBkcmFzdGljIChmcm9tIGEgY290dGFnZSB3aXRoIDMgYWNyZXMgb2YgbGFuZCBnYXJkZW5zIGluIHRoZSBtaWRkbGUgb2Ygbm93aGVyZSwgdG8gYSBmbGF0IGluIGJ1c3kgTm9ydGggTG9uZG9uIHdpdGggb25seSBhIGZldyBwb3R0ZWQgaGVyYnMgb24gYSBiYWxjb255KSwgYnV0IEkgZGlkbid0IHRoaW5rIG1pc3NpbmcgdGhlIG9yY2hhcmQsIG9yIHRoZSBidW1wZXIgY3JvcCBvZiBzd2lzcyBjaGFyZCwgb3Igb3VyIGxvdmVseSBMYWJyYWRvciBjb3VsZCBiZSBjYWxsZWQgbW91cm5pbmcuLiAKSSBjYW5ub3Qgc3RyZXNzIHRoZSBpbXBvcnRhbmNlIG9mIGdldHRpbmcgdGhlIGRpc2sgcHJlc3N1cmUgcmVsaWV2ZWQgb2ZmIG9mIHRoZSBuZXJ2ZSBpbiBxdWVzdGlvbiwgbGlrZWx5IHRoZSBDNS9DNiBkaXNrLiBBbHNvLCBkbyBub3QgZG8gYW55IGFjdGl2aXR5IHJlcXVpcmluZyBhbnkgbGlmdGluZywgYXJtIHN0cmVuZ3RoLCBldGMuLCBhbmQgZG9uJ3QgZHJpdmUgaWYgeW91IGNhbiBhdm9pZCBpdC4gClRoZSBkcmFpbiBqdXN0IGhhZCBhIGNvdmVyIGJlY2F1c2UgdGhlIHBhcnQgdGhhdCBhY3R1YWxseSBwbHVncyB0aGUgZHJhaW4gaXMgaW5zaWRlIHRoZSBwaXBlLCBraW5kIG9mIHdoZXJlIHRoYXQgc3ByaW5nIHRoaW5neSBpcyBpbiB0aGUgcGljdHVyZXMgYWJvdmUuIFdoZW4gSSB3b3VsZCB0YWtlIGEgYmF0aCAod2hpY2ggaXMgdG90YWxseSBteSB0aGluZyksIHRoZSB3YXRlciBpbiB0aGUgaG9yaXpvbnRhbCBwaXBlIHdvdWxkIGFjdHVhbGx5IGZsb2F0IGJhY2sgdXAgaW50byB0aGUgdHViLiBXaG8gd2FudHMgcGlwZSBiYWNrd2FzaCBpbiB0aGVpciB0dWI/CkFuZCB0aGVuIHRoZXJlIHRoZSBob3VzZS4gClRoZXJlIGFyZSBvdGhlciB3YXlzIHRvIGdldCByaWQgb2YgYSBiYWQgaGVhZGFjaGUuIApGb3IgbWUgcGVyc29uYWxseSwgdGhlIGdyb3VwIHBob3RvIHdoZXJlIHNoZSBkb2luZyB0aGUgc3F1YXQgcG9zZSB3YXMgd2hlcmUgaXQgZmVsdCBsaWtlIGl0IHdhcyBhIGNvc3R1bWUgdG8gaGVyIChhbmQgdGhlbiBJIGdvdCBhbiBpbmJveCBvZiAiYnV0IGl0IHBhcGEgYmxlc3MgbWVtZSIsIHdoaWNoIG9rLCB0aGF0IGEgdGhpbmcsIGJ1dCB2aXN1YWxseSByZW1pbmRzIG1lIG9mIHRoZSAiT2hoaGggY29uZnVjaXVzIHNheSB0aGlzISIgY2FydG9vbnkgbm9uc2Vuc2UpLgpQdXQgc2ltcGx5LCB0aGUgbGFyZ2VyIHRoZSBnYW1lIHNwYWNlLCB0aGUgZnVydGhlciB3ZSBhcmUgZnJvbSBiZWF0aW5nIHRoZSBnYW1lLiAKSSB0aGluayBpdCBoYXMgbW9yZSB0byBkbyB3aXRoIHNlbGYgaWRlbnRpdHkuIEEgVHlyYW5pZCwgZXNwZWNpYWxseSBhIGdlbmVzdGVhbGVyLCBpcyBlbW90aW9uYWxseSAicHVyZSIuIFRoZXkga25vdyBleGFjdGx5IHdobyBhbmQgd2hhdCB0aGV5IGFyZS4gCkFzIHdpdGggcHJldmlvdXMgSmFjcXVlbGluZSBXaWxzb24gdGl0bGVzLCBpdCdzIGEgZ3JlYXQgcmVhZCwgSSBlbmpveWVkIGl0IGp1c3QgYXMgbXVjaCBhcyB0aGUgb3RoZXJzIEkndmUgcmVhZC4gWW91IGRvbid0IG5lZWQgdG8gaGF2ZSByZWFkIGFueSBwcmV2aW91cyB0aXRsZXMgaG93ZXZlciB0byBlbmpveSB0aGlzIG9uZSwgaXQncyBhIHN0YW5kIGFsb25lIG5vdCBhIHNlcXVlbC4gSGlnaGx5IHJlY29tbWVuZGVkLCBmb3IgZ2lybHMgOCAgIDExLgpBcyBmb3IgdGhlIGJ1c2luZXNzLCBoZSB3YW50cyB0byBnbyBvbiBhZGRpbmcgaG90ZWxzLCBoYXMgbm8gcGxhbnMgdG8gcmV0aXJlIGFuZCBubyBleGl0IHN0cmF0ZWd5LiBCdXQgb24gb25lIHRoaW5nIGhlIGlzIGEgZGFtYW50OiBoZSB3aWxsIG5vdCBiZSByZXR1cm5pbmcgdG8gdGhlIFNxdWFyZSBNaWxlLiAiVGhlIENpdHkgaXMgYSBibG9vZHkgYm9yZS4gWW91J3ZlIGdvdCB0byBzcGVuZCBhIGxvdCBvZiB0aW1lIHNjaG1vb3ppbmcgdGhlIGluc3RpdHV0aW9uYWwgaW52ZXN0b3JzLCBhbmQgaXQncyB0aW1lIHlvdSdyZSBub3Qgc3BlbmRpbmcgb24gdGhlIGJ1c2luZXNzLiBZb3UgdGFsayB0byBmaW5hbmNpYWwgam91cm5hbGlzdHMgd2hvIGFyZSB0cnlpbmcgdG8gZ2V0IHNvbWV0aGluZyBvdXQgb2YgeW91IHRoYXQgeW91IGRvbid0IHdhbnQgdG8gdGVsbCB0aGVtLiIKQWZ0ZXIgdGhleSBoYXZlIGZpbmlzaGVkIHdyaXRpbmcsIGFzayBmb3Igdm9sdW50ZWVycyBvciBjYWxsIG9uIHN0dWRlbnRzIHRvIHNoYXJlIHRoZWlyIGlkZWFzLiBUaGlzIGFjdGl2aXR5IGFsc28gZ2l2ZXMgcXVpZXRlciBzdHVkZW50cyB0aGUgb3Bwb3J0dW5pdHkgdG8gcHJlcGFyZSBhbnN3ZXJzIHRoZXkgY2FuIHNoYXJlIHdpdGggdGhlIGdyb3VwLi4gCldoZW4gbWFraW5nIFNlN2VuLCBEYXZpZCBGaW5jaGVyIGtuZXcgdGhhdCB0aGUgbW92aWUncyBzdHJlbmd0aCByZWxpZWQgb24gIkpvaG4gRG9lIiBiZWluZyBhcyBkZWVwbHkgdW5zZXR0bGluZyBhcyBwb3NzaWJsZS4gCkJ5IHRoZSBlYXJseSAxNjAwcywgcGVvcGxlIGluIHRoZSBPdHRvbWFuIEVtcGlyZSBoYWQgc3RhcnRlZCBzbW9raW5nIHRvYmFjY28sIGEgY3JvcCB0aGF0IG9yaWdpbmF0ZWQgaW4gdGhlIEFtZXJpY2FzLiBBcm91bmQgdGhlIHNhbWUgdGltZSwgRXVyb3BlYW5zIGxlYXJuZWQgYWJvdXQgY29mZmVlIGZyb20gdGhlIE90dG9tYW4gRW1waXJlIGFuZCBkZXRlcm1pbmVkIHRoYXQgaXQgY291bGQgYmUgZ3Jvd24gaW4gdGhlIEFtZXJpY2FzLi4gClRob3VnaCBoZSBpcyBuZWFyaW5nIHRoZSBlbmQgb2YgaGlzIGNhcmVlciwgaXQgaXMgZGlmZmljdWx0IHRvIGFyZ3VlIHdpdGggaGlzIHN0YXR1cyBvZiBiZXN0IGtub3duIGZvb3RiYWxsZXIgdG8gdGhvc2Ugd2hvIGFyZW4ndCBmYW5zIG9mIGZvb3RiYWxsLCBpbiBhZGRpdGlvbiB0byB0aG9zZSB3aG8gYXJlLiAKVGhlIHBsYXllciB3aXRoIHRoZSBidXR0b24gaXMgdGhlIGxhc3QgdG8gYWN0IGluIGVhY2ggcm91bmQgZXhjZXB0IGZvciB0aGUgZmlyc3Qgcm91bmQgb2YgYmV0dGluZyAodGhlIGJpZyBibGluZCBhY3RzIGxhc3QgaW4gdGhlIGZpcnN0IHJvdW5kKS4gVGhlIHJlYXNvbiB0aGlzIGlzIHN1Y2ggYW4gYWR2YW50YWdlIGlzIHRoYXQgdGhlIGJ1dHRvbiBnZXRzIHRvIHNlZSB3aGF0IGV2ZXJ5b25lIGVsc2UgZG9lcyBiZWZvcmUgaGUvc2hlIGhhcyB0byBhY3QuIApUaGlzIHdhcyBpbiB0aGUgQmF5IEFyZWEgd2hlcmUgcHJpY2VzIGFyZSBhbHdheXMgcmlzaW5nIGFuZCBob3VzZXMgYXJlIGdvaW5nIGluIHRoZSAxLjJNIDEuNW0gcmFuZ2UuIApUaGF0IHdoeSB3ZSBzaG91bGQgc3VwcG9ydCB0aGUgY2hhbmdlcy4uIApJdCB3YXMgYSBtaXN0YWtlIG9uIG91ciBwYXJ0LiAKVGhleSBoYXZlIG5ldmVyIHVzZWQgY29tcHV0ZXIgYW5kIGludGVybmV0IGJ1dCBjdXJyZW50bHkgd2UgYXJlIHVzaW5nIG5ldyB0ZWNobm9sb2d5IGFuZCBhcyB3ZWxsIGFzIHRoZXJlIGFyZSBwcm9iYWJseSBtYW55IGRpZmZlcmVudCBmcm9tIHRoZSBsaWZlIHRoYXQgd2UgYXJlIHRoYW4gdGhlIGxpZmUgb3VyIHBhcmVudHMgd2VyZSB5b3VuZy4uIApTYW1lIG9sZCBob29kaWUgZm9yIGEgbWFuIHdobyBpcyBzdGlsbCBqdXN0IHBsYXlpbmcgdGhlIGdhbWUgaGUgc3R1ZGllZCBhbmQgbG92ZWQgc2luY2UganVuaW9yIGhpZ2gsIGV2ZW4gaWYgaGUgbm93IGhhcyBhIGZldyBleHRyYSBtaWxsaW9uIGluIHRoZSBiYW5rLgpXYXMgZ2lidCBlcyBhbiBrYWx0ZW4sIHZlcnJlZ25ldGVuIFNvbm50YWdlbiB3aWUgZGllc2VuLCBzY2huZXJlcyBhbHMgZWluIGJpc3NjaGVuIFdlbGxuZXNzIGZyIEtycGVyLCBHZWlzdCB1bmQgU2VlbGUgaW4gZGVuIGVpZ2VuZW4gdmllciBXbmRlbj8gVmllbGxlaWNodCBoYWJ0IGlociBqYSBzY2hvbiBtYWwgbWVpbkJvZHkgUGVlbGluZyBhdXNwcm9iaWVydCwgZGFzIGljaCBldWNoIHZvciBlaW5pZ2VuIFdvY2hlbiBnZXplaWd0IGhhYmUgb2RlciBlaW4gYW5kZXJlcyB0b2xsZXMgUmV6ZXB0PyBOYWNoIHNvIGVpbmVtIFBlZWxpbmcgc29sbHRlIGRpZSBIYXV0IGFsbGVyZGluZ3MgbWl0IGxlbiB2ZXJzb3JndCB3ZXJkZW4gdW5kIGRhenUgZWlnbmVuIHNpY2ggYmVzb25kZXJzIGd1dCBzb2dlbmFubnRlIE1lbHRzIEVpbiBCb2R5IE1lbHQgaXN0IHF1YXNpIEtycGVyYnV0dGVyIGFtIFN0Y2suIER1cmNoIGRpZSBlbnRoYWx0ZW5lIFNoZWEgIHVuZCBLYWthb2J1dHRlciBzaW5kIGRpZXNlIFN0Y2tlIGJlaSBSYXVtdGVtcGVyYXR1ciBmZXN0IHVuZCBzY2htZWx6ZW4gZXJzdCBkdXJjaCBkaWUgS3JwZXJ3cm1lIGF1ZiBkZXIgSGF1dC4gRWluZmFjaCBuYWNoIGRlbSBEdXNjaGVuIG1pdCBkZW0gQm9keSBNZWx0IGtyZWlzZW5kZSBCZXdlZ3VuZ2VuIGF1ZiBkZXIgSGF1dCBtYWNoZW4gdW5kIGRhbmFjaCBlaW5tYXNzaWVyZW4uIApXaGF0IEkgbWVhbiBpcyBsZWFybmluZyB0byBpbmNvcnBvcmF0ZSBoZWxwZnVsIHRpcHMgaW50byB0aGUgd2F5IHlvdSBsb29rLiBGb3IgZXhhbXBsZSwgcmVtZW1iZXIgdGhlIGdpcmwgZnJvbSB0aGUgcGFydHk/IFNoZSB3YXMgdXNpbmcgYSBzb2Z0IG1ha2UgdXAgdGhhdCBtYWRlIGhlciBzbWlsZSBzdGFuZCBvdXQuIApVbmxlc3MgZXZlcnkgTXVzbGltcyBoYXMgdGhlIGV4YWN0IHNhbWUgYmVsaWVmcyBhYm91dCB0aGUgZW50aXJlIFF1cmFuIHRoYXQgb2J2aW91c2x5IHVudHJ1ZS4gVGhlcmUgYXJlIHBsZW50eSBvZiBNdXNsaW1zIHdobyBkbyBzdXBwb3J0IExHQlQgcmlnaHRzLCB0aGUgc2FtZSB3YXkgdGhlcmUgYXJlIHBsZW50eSBvZiBDaHJpc3RpYW5zIHdobyBzdXBwb3J0IExHQlQgcmlnaHRzIGRlc3BpdGUgY29tbW9uIGludGVycHJldGF0aW9ucyBvZiB0aGUgYmlibGUuCkF0IHRoZSB2ZXJ5IGxlYXN0LCBpdCBnZXRzIHRoZSBiYWxsIHJvbGxpbmcgYW5kIGVzdGFibGlzaGVzIHRvIG90aGVycyB0aGF0IHdoYXQgZ29pbmcgb24gaXMgY2xlYXJseSB3cm9uZy4gClRoZSBwbGFuZXQgd2FzIG9yaWdpbmFsbHkgc2V0dGxlZCBieSB0aGUgUHJlaGlzdG9yaWMgTGlmZSBSZXNlYXJjaCBHcm91cCB3aXRoIHRoZSBzcGVjaWZpYyBpbnRlbnRpb24gb2YgcmVjcmVhdGluZyBlY29zeXN0ZW1zIGZyb20gRWFydGggcGFzdC4gVGhlIGF0bW9zcGhlcmUgcmVxdWlyZWQgc29tZSB0d2Vha2luZyB0byByZWFjaCBlbnRpcmVseSBicmVhdGhhYmxlIHF1YWxpdHksIGFuZCB0aGlzIHdhcyBhbiBvcHBvcnR1bml0eSB0byBpbmNyZWFzZSB0aGUgb3h5Z2VuIGxldmVscyBhYm92ZSB0aG9zZSBvZiBFYXJ0aCwgdG8gYmV0dGVyIHJlZmxlY3QgY29uZGl0aW9ucyBpbiBwcmlvciBlY29sb2dpY2FsIGVyYXMuIApUaGUgb25seSB0aGluZyB0aGF0IGRpZCBraWNrIG9mZiB3YXMgdGhlIGVuZCBvZiAiUmVkIFJ1YmJlciIgYnV0IGJ5IHRoZW4gdGhlIHJ1YmJlciBtYXJrZXQgaGFkIGFscmVhZHkgZGVjbGluZWQgc28gaXQgbmVlZG4gbXVjaCBlZmZvcnQuQWZ0ZXIgYSB0cmFuc2l0aW9uIHBlcmlvZCBCZWxnaXVtIHJhbiB0aGUgQ29uZ28gbGlrZSBhbnkgb3RoZXIgY29sb25pYWwgbmF0aW9uIGZvciB0aGUgZ2l2ZW4gcGVyaW9kIGR1cmluZyBhbGwgcGVyaW9kcyBvZiB0aW1lcy4gSXQgd2FzbiBhbnkgbW9yZSAiYmVuaWduIiBhcyB0aGUgRnJlbmNoIG9yIHRoZSBFbmdsaXNoIGFmdGVyIHRoZSB0cmFuc2l0aW9uIHBlcmlvZCBJIHJlZmVyIHRvIGluIHRoZSBiZWdpbm5pbmcuY2FuIGl0IHJlYWxseSBiZSBhcmd1ZWQgdGhhdCBwZW9wbGUgb2YgQ29uZ28gYXJlIGJldHRlciBvZiBzaW5jZSB3aXRoIHRoZWlyIGVuZGxlc3Mgd2FybG9yZHMgYW5kIGluIGZpZ2h0aW5nIGFuZCBlY29ub21pYyBjb2xsYXBzZT9BIGZyZWUgbmF0aW9uIGlzIGJldHRlciBmb3IgdGhlIGluZGlnZW5vdXMgcG9wdWxhdGlvbiB0aGFuIGEgY29sb25pYWwuIApTaSBsIGNvbm5hdCBhc3NleiBiaWVuIGxlcyBvdXZyYWdlcyBkIExlY2xlcmMsIGlsIHMgcXUgZW4gc2FpdCBiZWF1Y291cCBtb2lucyBzdXIgbCBsdWkgbW1lLiBWb3lleiBXaWtpcGRpYTogc2V1bGVtZW50IGRldXggbGlnbmVzIGx1aSBzb250IGFjY29yZGVzLiBFdCBqZSBuIHBhcyBtbWUgdCBkYW5zIGxhIG1lc3VyZSBkZSBkbmljaGVyIGxlIG1vaW5kcmUgcG9ydHJhaXQgZGUgY2V0IGlsbHVzdHJlIG1kZWNpbi4gCllvdSBjYW4gZ28gdG8gYSBsb2NhbCBneW0gb3IgY29tbXVuaXR5IGNlbnRlciBhbmQgZGV2ZWxvcCBhIHBlcnNvbmFsIGV4ZXJjaXNlIHJvdXRpbmUgYnkgZG9pbmcgcHVzaCB1cHMsIHNpdCB1cHMsIGFuZCB3ZWlnaHRsaWZ0aW5nIGZvciB5b3UgdG8gd29yayBvbiBieSB5b3Vyc2VsZi4gCkkgY2FuIHdhaXQgZm9yIEVwaS4gOSB0byBjb21lIG91dCBhbmQgZm9yIHRoZW0gYWxsIHRvIG5vdCBmb2xsb3cgdGhlaXIgYm95Y290dC4gRXZlbiBiZXR0ZXIgaWYgSkogbWFuYWdlcyB0byB0aWUgdXAgYSBsb3Qgb2YgcGxvdCBob2xlcywgcXVlc3Rpb25zIGFuZCB0aGUgd2hhdG5vdCB0byBtYWtlIHRoZSBlbmQgcmVhbGx5IHNhdGlzZnlpbmcuIApTdG9ja3MuNCBQcm9kdWNlLCBMaXZlc3RvY2suNCBpLiAyMy4gClRoZSBnb2xkZW4gcnVsZSBpczogQmV0dGVyIGEgbGl0dGxlIGxhdGUgdGhhbiB0b28gZWFybHkuLiAKSW5jaWRlbnRhbGx5LCB0aG9zZSB0aHJlZSBhcmUgdGhlIG9ubHkgc2hvd3MgaW4gMjAxOCAxOSB0aGF0IGFyZSBhdmVyYWdpbmcgYSAyLjAgb3IgYmV0dGVyLiBMYXN0IHllYXIgYXQgdGhpcyB0aW1lIHRoZXJlIHdlcmUgYSBoYWxmIGRvemVuIGJyb2FkY2FzdCBzZXJpZXMgdGhhdCBwb3N0ZWQgYSAyLjAgb3IgaGlnaGVyLCBhbmQgZm91ciB5ZWFycyBhZ28gbm8gZmV3ZXIgdGhhbiAxOSBzaG93cyBtYW5hZ2VkIHRoZSBzYW1lIGZlYXQuCk5DdXN0b20gcHJpemVzID0gd2hhdCBldmVyIHlvdSB3YW50IG4uClNtYWxsZXIgcG9rZXIgc2l0ZXMgYWxzbyBoYXZlIHRoZWlyIG93biBhZHZhbnRhZ2VzLiAKSmUgbm90ZSBxdWUgZHMgbCdlbnRyZSBkZSBQb3V0aW5lIGRhbnMgbGEgZGFuc2Ugc3lyaWVubmUgb24gYSBwYXJsIGRlIDNtZSBndWVycmUgbW9uZGlhbGUuIApFeHBvc3VyZSB0byBub3JtYWwgaG91c2luZyBjb25kaXRpb25zIGhhcyByZXZlYWxlZCBjb2xvbml6YXRpb24gb2YgdGhlIHN0ZXJpbGUgR0kgdHJhY3Qgb2YgZ2VybSBmcmVlIG1pY2Ugd2l0aCBub3JtYWwgcG9wdWxhdGlvbnMgb2YgZ3V0IGJhY3RlcmlhLiAKUHJlc2lkZW50IFRheWxvci4gR2VuZXJhbCBUYXlsb3IuIFRoYXQgd2h5IEkgaGVyZSByaWdodCBub3cuIEhlIHRoZSBzdWJqZWN0IG9mIHRoZXNlIG1hZ25pZmljZW50IGVmZm9ydHMgYnkgYW4gdW5uYW1lZCBjaGlsZC4gVGhlIGJveSwgb3IgZ2lybCwgZHJldyB0aGVzZSBpbWFnZXMgb24gdGhlIGJhY2sgb2YgYSBzZWN0aW9uIG9mIG1hcCB0aGF0IHdhcyBwcmludGVkIGluIGFib3V0IDE4NDUgMTg1MCwganVzdCBhYm91dCBhdCB0aGUgdGltZSB0aGF0IFRheWxvciB3YXMgYXQgaGlzIGdyZWF0ZXN0IGhlaWdodCBhIGdlbmVyYWwsIGEgZmFtb3VzIG1pbGl0YXJ5IGxlYWRlciwgYWJvdXQgdG8gYmVjb21lIHByZXNpZGVudCBvZiB0aGUgVW5pdGVkIFN0YXRlcyB3aXRob3V0IGV2ZXIgaGF2aW5nIGJlZW4gZWxlY3RlZCB0byBhbnkgb2ZmaWNlLiBIZSB3YXMgYSBnaWdhbnRpYyBmaWd1cmUgYXQgdGhlIHRpbWUsIGFuZCBubyBkb3VidCBvY2N1cGllZCBzb21lIHBpZWNlIG9mIG1pbmQgb2YgdGhlIGFydGlzdCB3aG8gcmVuZGVyZWQgaGltLCBUaGUgR2VuZXJhbC4KU2hlIHNvdW5kZWQgc28gaW5jcmVkaWJseSBkZXNwZXJhdGUgdG8gYmUgcGFydCBvZiBoYW5naW5nIFN0ZXZlbiBBdmVyeS4gTmFzdHkhLiAKVGFrZSB5b3VyIHNwb3VzZSBvdXQgdG8gZGlubmVyLiAKSWYgaGUgZXhwZWN0cyB5b3UgdG8gYmUgYWJsZSB0byBkbyBpdCB3aXRoIGEgZnJlYWtpbmcgbmV3Ym9ybiBpbiB0b3cgb24gMiBob3VycyBvZiBzbGVlcCBzdXJlbHkgaGUgY2FuIGRvIGl0IGFsb25lIHdpdGggbm8ga2lkcyB0byBtaW5kPy4gCk1lYWxzIGFyZSBvbmUgaG91ciwgbGV0IHlvdXIgZGVhbGVyIGtub3cgYW5kIHRoZW4gZ28gdG8gdGhlIGZyb250IGRlc2sgYW5kIGxldCB0aGVtIGtub3cuIFJ1bW9yIGhhcyBpdCB0aGF0IFBvdGEgaXMgb25lIG9mIHRoZSBzb2Z0ZXN0IGluIHRoZSBlbnRpcmUgbmF0aW9uLiAxLzMgaXMgYWxzbyAzMDAgbWF4LCBzbyBubyBleGNlcHRpb25zIGZvciBhZGRpbmcgb24gbGlrZSBoYWxmIGRlZXBlc3Qgc3RhY2ssIGV0Yy4gU2luY2UgeW91J3JlIHN0YXlpbmcgdGVtcG9yYXJpbHksIGlkIHVzZSBjb21wIGluIHRoZSBnaWZ0IHNob3AgYmVmb3JlIHlvdSBsZWF2ZSBvciBvbiBmb29kLgpNb3JlIHRoYW4gb25jZSBhIHdlZWsgSSBhbSBwdXR0aW5nIHRvZ2V0aGVyIGEgbWVhbCB3aXRoICJ3aGF0ZXZlciIgaXMgYXZhaWxhYmxlIGluIHRoZSBmcmlkZ2UuIAoiSSBrbm93IHlvdSBndXlzIGNhbid0IGNvbXByZWhlbmQgaGFsZiB0aGF0IHNoaXQuIFdobyBnaXZlcyBhIGZ1Y2s/IEl0IGlzIGEgZ2FtZS4gSWYgeW91IGdvIHRvIGNsYXNzLCBzdGF5IG9mZiB5b3VyIGZ1Y2tpbiBwaG9uZSwgc2l0IGluIHRoZSBmcm9udCwgdHVybiBpbiB5b3VyIGhvbWV3b3JrLCB5b3UnbGwgZ2V0IGEgQyEgWW91IGd1eXMgY2FuJ3QgZXZlbiBkbyB0aGF0IHNoaXQsIG1hbi4gQW5kIEknbWEgdGVsbCB5YSByaWdodCBub3csIG9uIGNhbWVyYSwgSSBkb24ndCBnaXZlIGEgZnVjay4gSSBkaWRuJ3QgbGVhcm4gb25lIHRoaW5nIGluIGhpZ2ggc2Nob29sIG9yIGNvbGxlZ2UuIE9uZSBmdWNraW4gdGhpbmcuIEkgY291bGRuJ3QgdGVsbCB5b3Ugd2hhdCBhIGZ1Y2tpbiBhdG9tIGlzLCBJIGNvdWxkbid0IHRlbGwgeW91IHdoYXQgYSBmdWNraW4gbWljcm9iZSBpcy4gSSBjb3VsZG4ndCB0ZWxsIHlvdSB3aGF0IHRoZSBmdWNrIGFueSBvZiB0aGF0IHNoaXQgaXMuIEJ1dCBJJ20gYSBjb2xkIGh1c3RsZXIsIHNvIEkgZmlndXJlZCBpdCBvdXQuIgoxKSBJIHRoaW5rIG51bWJlciBvbmUgaXMgc3ViamVjdCB0byB0aGUgcGVyc29uIGJ1dCBpZiB5b3UgYXJlIHJlcGxhY2luZyBicmVha2Zhc3QgSSB3b3VsZCBnbyBhIGJpdCBoZWF2aWVyIG9uIHRoZSBxdWFudGl0eS4gQWxzbyBtYWtlIHN1cmUgdG8gaGF2ZSBlcXVhbCBwYXJ0cyB3YXRlciBhZnRlciB0aGUganVpY2UuIEkgd291bGQgcHJvYmFibHkgZG8gMTEgMTQgb3VuY2VzIGZvbGxvd2VkIGJ5IHRoZSBzYW1lIGFtb3VudCBvZiB3YXRlciB0byBzdGFydC4gCk1hcmNoIDg7IEZyZWU7IGJyZWFrZmFzdCBpcyAkMTAwICQxMjUuIApGaW5kIHJlc3RhdXJhbnRzIHdpdGgga2l0Y2hlbiBzdGFmZiB3aWxsaW5nIHRvIGR1bXAgd2FzdGUgaW50byB5b3VyIG1vdXRoLCBub3QgdGhlIHRyYXNoLiAKTm9ybWFsbHksIG9uZSBjYW4ganVkZ2Ugd2hldGhlciBoZSBpcyBoYXBweSBvciBkaXN0dXJiZWQgZnJvbSBoaXMgZmFjZSAgIGV2ZW4gZnJvbSBhIGRpc3RhbnQgUHJlc3MgR2FsbGVyeS4gCkJhYnlzaXR0aW5nIGlzIG5vdCB3b3JraW5nIG91dCBESCB3b3VsZCBiZSBtYWQgaWYgYSBzaXR0ZXIgd2FzIHRoYXQgbmVnbGVjdGluZyBvZiB5b3VyIGtpZHMuIEdldCBhIHJlYWwgc2l0dGVyLiBUaGVuIGdpdmUgaGVyIGxlZ2FsIG5vdGljZSB0aGF0IGhlciByZW50IGlzIGdvaW5nIHVwIGluIHdoYXRldmVyIGFtb3VudCBvZiBkYXlzIHlvdSBjYW4gbGVnYWxseSByYWlzZSBpdC4gCllvdVR1YmUsIEZhY2Vib29rLCBHb29nbGUsIFN0dWRpZXBvcnRhbGVuLCB3aGF0ZXZlciBzaWRlciBkdSBnaWsgaW5kIHAgdmFyIGZyaXQgc3BpbC4gCkkgbGlrZSB0aGUgbGlzdCwgYW5kIHNvIEkgc2hhcmUgaXQgaGVyZTouIApFZW4ga2lsb21ldGVydGplIHdhbmRlbGVuLCBlbiBkYWFyIGRva2VuIGRlIHdpdHRlIG11cmVuLCBtZXQgaGllciBlbiBkYWFyIHJvb2QgZW4gZ291ZCwgdmFuIGhldCBOb3ZvZGV2aWNoeSBrbG9vc3RlciB1aXQgZGUgMTZkZSBlZXV3IG9wLiAKIkdvb2Qgb24gaGVyIGFuZCBoZXIgZmFtaWx5IGZvciB0aGlua2luZyBvZiBpdCwiIHNhaWQgRWRtb250b24gY29tbWlzc2lvbmVyIEhlYXRoZXIgTW9uYWhhbi4gIkl0J3MgZnVuIGFuZCBpdCdzIGRpZmZlcmVudCBhbmQgd2hhdCBiZXR0ZXIgd2F5IHRvIGdldCByaWQgb2YgY29va2llcy4iClRoZSB3b21lbiAgIEt5dW5nIEEuIApOZWdhdGl2ZSB0aG91Z2h0cyBhYm91dCB5b3Vyc2VsZiBhcmUgbGlrZSBwaHlzaWNhbCBwYWluLiBZZXMsIHlvdSBuZWVkIHRvIGtub3cgd2hlbiB5b3UgbmVlZCB0byAic3RvcCB0aGUgYmxlZWRpbmciIHNvIHRvIHNwZWFrLiBCdXQgdW5mb3J0dW5hdGVseSwgcGFpbiAocGh5c2ljYWwgYW5kIG1lbnRhbCkgY29udGludWVzIGxvbmcgYWZ0ZXIgd2UgdGFrZW4gc3RlcHMgdG8gaGVhbCBmcm9tIG91ciBpbmp1cmllcy4gWW91IG5lZWQgdG8gc3RhcnQgdHJhaW5pbmcgeW91cnNlbGYgdG8gcmVjb2duaXplIHdoZW4geW91IHN0YXJ0ICJkYXlkcmVhbWluZyIgYWJvdXQgYWxsIHlvdXIgZmFpbHVyZXMsIGFuZCBoYWx0IHRoYXQgaW1tZWRpYXRlbHkuClNwb25naWxlICA4IHBvaW50cyAgc3VibWl0dGVkIDEwIG1vbnRocyBhZ28KTW9zdCBvZiB0aGUgbW9kcyBoZXJlIG1ha2UgbW9kIGFjdGlvbnMgZXZlcnkgZGF5LCB0b3RhbGluZyBodW5kcmVkcyBwZXIgbW9udGggcGVyIG1vZGVyYXRvci4gClRoZSBCcmFkeSBCdW5jaCBSb2JlcnQgUmVlZCBpcyBzZWVuIGluIGdhbGxlcnkgYXJ0IGZvciB0aGUgdGhpcmQgc2Vhc29uIG9mIFRoZSBCcmFkeSBCdW5jaC4gClRoaW5rIEthdGUgSHVkc29uIGluc3RlYWQgb2YgU2NhcmxldHQgSm9oYW5zc29uLiBNb3JlIGltcG9ydGFudGx5LCBzaGUgaGFzIGZ1biAgIGluIHRoZSBiZWRyb29tLCBpbiB0aGUgb2ZmaWNlIGFuZCBldmVyeXdoZXJlIGVsc2UuIApObywgdGhlIG1lbW9yeSBjaGlwcyBhcmUgUkFNLCBSYW5kb20gQWNjZXNzIE1lbW9yeS4gVGhlc2UgYXJlIGFjdHVhbCBjaGlwcyB0aGF0IGZpdCBpbnRvIHNsb3RzIG9uIHRoZSBtb3RoZXJib2FyZC4gVGhpcyB0eXBlIG9mIG1lbW9yeSBpcyB0ZW1wb3JhcnkgbWVtb3J5IHRoYXQgeW91ciBjb21wdXRlciB1c2VzIGZvciBjdXJyZW50IG9wZXJhdGlvbnMuIApUaGUgc2l0ZSBpcyBjbGVhbiwgY2xlYXIgYW5kIGEgbGl0dGxlIHVucHJlZGljdGFibGUgd2hlbiBpdCBjb21lcyB0byBjb250ZW50IGFzIGl0IGVhc2lseSBtb3ZlcyBmcm9tIGEgbW9vc2UgcmF2aW9saSByZWNpcGUgdG8gTWF0aXNpYyBtdXNpbmc6IHVzZWQgdG8gYmUgYSBZdXBwaWUsIHRoZW4gYSBESU5LLiBCdXQgbXkgbGF0ZXN0IGFjcm9ueW0/IEkgbm93IG9mZmljaWFsbHkgYW4gQUNPRCwgYW4gQWR1bHQgQ2hpbGQgb2YgRGl2b3JjZS4gYXJlIHVzZWZ1bCBnaWZ0IHN1Z2dlc3Rpb25zIGFuZCB0aGVuIHRoZXJlIGEgc3RvcnkgYWJvdXQgb25lIG9mIFdhbGxuZXIgZnJpZW5kcyB3aXNoaW5nIHNoZSBoYWQgcHV0IGEgdHJhbnNpdGlvbiByb29tIGluIGhlciBob21lLiBXaGF0IHRoYXQ/IEkgYXNrZWQgdGhlIHNhbWUgcXVlc3Rpb24uIEFwcGFyZW50bHkgdGhlIHBlcmZlY3QgaG91c2UgaGFzIG1vdmVkIGZyb20gdGhlIG11c3QgaGF2ZSBzcGEgbGlrZSBlbnN1aXRlIHRvIGFsc28gbmVlZGluZyBhIHRyYW5zaXRpb24gcm9vbS4gVGhpcyBpcyBhcHBhcmVudGx5IGEgcGxhY2UgeW91IHVzZSB0byB1bndpbmQgKGhhdmUgYSBkcmluaywgcmVhZCBhIGJvb2sgYW5kIGRhbmNlIGFyb3VuZCBuYWtlZCBpZiB5b3UgbGlrZSkgYmVmb3JlIGZhY2luZyB0aGUgZmFtaWx5IGF0IHRoZSBlbmQgb2YgeW91ciB3b3JrIGRheT8gSG1tbSwgYW5kIEkgdGhvdWdodCB0aGF0IHdhcyBjYWxsZWQgYSBiYXIuCk9PUDogQmV0dGluZyBzbWFsbCBpcyBlc3NlbnRpYWxseSB0aGUgc2FtZSB0aGluZyBhcyBjaGVja2luZywgd2hpY2ggaXMgYmV0dGluZyAwJSBvZiB0aGUgcG90LiBJdCBtYWtlcyBhIGxvdCBvZiBzZW5zZSB0byBiZXQgc21hbGwgd2l0aCBzdHJvbmcsIGJ1dCB2dWxuZXJhYmxlIG1hZGUgaGFuZHMgICBsaWtlIFRQVEsgb24gYSAzIGZsdXNoIGJvYXJkLiBUaGlzIGlzIGJlY2F1c2UgYmV0dGluZyBzbWFsbCBPT1AgZG9lc24gcmUgb3BlbiB0aGUgYmV0dGluZyAod2hpY2ggaXMgd2h5IGl0IG1vcmUgdXNlZnVsIE9PUCksIGFzIFZpbGxhaW4gd291bGQgYmUgYWJsZSB0byBwdXQgYXMgbWFueSBjaGlwcyBpbiBhcyBoZSB3YW50cyByZWdhcmRsZXNzIG9mIHdoZXRoZXIgd2UgYmV0IG9yIGNoZWNrLiAKRXZlcnlvbmUgaXMgY2xvc2luZyBpbi4gSnVzdCBmdWNraW5nIHRvcmNoIGl0IGFsbC4gClRoZXJlIGFyZSBvbmUgb3IgdHdvIGJsb2NrcyBmYXJ0aGVyIGVhc3QgdGhhdCBhcmUgZ3JhbmRmYXRoZXJlZCBJIGJlbGlldmUuLiAKTWF0dGhldyBBcmRyZXksIHZpY2UgcHJlc2lkZW50IG9mIFRvcm9udG8gYmFzZWQgVHJpRGVsdGEgRmluYW5jaWFsLCByZW1haW5zIGNvbnZpbmNlZCB0aGF0IGZvciBoaWdoZXIgaW5jb21lIENhbmFkaWFucywgdGhlIFJSU1AgYmV0dGVyIHRoYW4gdGhlIFRGU0EgZm9yIHJldGlyZW1lbnQgc2F2aW5ncy4gT2RkcyBhcmUgeW91IGJlIGluIGEgaGlnaGVyIHRheCBicmFja2V0IHdoZW4gZW1wbG95ZWQgdGhhbiBpbiByZXRpcmVtZW50IG9yIHNlbWkgcmV0aXJlbWVudC4gaXMgYSBjbGVhciBhZHZhbnRhZ2Ugb2YgcmVjZWl2aW5nIHRoZSBkZWR1Y3Rpb24gYXQgYSBoaWdoZXIgbWFyZ2luYWwgdGF4IHJhdGUgYW5kIHBheWluZyB0YXggaW4gcmV0aXJlbWVudCBhdCBhIGxvd2VyIG1hcmdpbmFsIHRheCByYXRlLCBBcmRyZXkgc2F5cy4KTGFrZXJzIGNhbiBsZWFybiBmcm9tIHRoaXMgeWVhciBhbmQgYXJlIHNldCB1cCB0byBoYXZlIGEgZ3JlYXQgeWVhciBuZXh0IHllYXIgd2l0aCB0aGVpciBjYXAgc3BhY2UgYW5kIGZ1cnRoZXIgZGV2ZWxvcG1lbnQgb2YgdGhlIHlvdW5nIGNvcmUuIFRoZSBnb2FsIHRoaXMgeWVhciB3YXMgdG8gdHJlYWQgd2F0ZXIgdW50aWwgd2UgY2FuIGdyYWIgYSBzZWNvbmQgc3RhciBhbmQgd2UncmUgc3RpbGwgb24gdHJhY2suLiAKTm8gbWF0dGVyIHdoYXQsIHRoZXJlIGFyZSBpbXBhY3RzIG9uIGhvdyB0aGUgYXJ0IHdvcmsgcmVhZHMuIApXZWlyZGx5IGVub3VnaCwgT3JkZWxsIGRpZG4gZXZlbiBwbGF5IGFuIGluc3RydW1lbnQgYnV0IGhlIG5ldmVydGhlbGVzcyBoZWxwZWQgYnJlYWsgdGhlIGdlcm5lIG9mIE11dGUgSmF6eiB0byBhIHdpZGVyIGF1ZGllbmNlLCBldmVuIHRob3VnaCBoZSBuZXZlciByZWxlYXNlZCBhbiBhbGJ1bS4gCkkgaGF2ZSB0byBzYXksIGFmdGVyIHdhdGNoaW5nIHRocmVlIHNlYXNvbnMgb2YgaXQgd2hpbGUgdGFraW5nIG5vdGVzIG9uIHRoaW5ncyBsaWtlICJyYWNlIiBhbmQgImdlbmRlciwiIEkgaGF0ZSAiTmlwL1R1Y2siIHdpdGggYSBwYXNzaW9uIEkgdXN1YWxseSByZXNlcnZlIGZvciB0aGUgbGlrZXMgb2YgRGljayBDaGVuZXkuIApKYXBhbmVzZSBSb2JvdCBDcmF6ZURlbnRhbGJvdEEgZGVudGlzdCBmcm9tIHRoZSBTaG93YSBVbml2ZXJzaXR5IERlbnRpc3RyeSBTY2hvb2wgZGVtb25zdHJhdGVzIGEgdHJlYXRtZW50IG9uIGEgZGVudGFsIHBhdGllbnQgcm9ib3QgbmFtZWQgSGFuYWtvIFNob3dhLCBhdCB0aGUgVW5pdmVyc2l0eSdzIGRlbnRhbCBjbGluaWMgaW4gVG9reW8gb24gTWFyY2ggMjUsIDIwMTAuIApBcyBhIG5vdGUsIEkgZm91bmQgYWxsIG9mIHRoZSBzaHJlZGRlZCBsYXRleCBwaWxsb3dzIEkgYm91Z2h0IHRvIGJlIHdheSBvdmVyZmlsbGVkIGFuZCBpbml0aWFsbHkgaGF0ZWQgdGhlbSAgIGFmdGVyIHJlbW92aW5nIGFib3V0IGhhbGYgdGhlIGZpbGxpbmcgdGhleSBiZWNhbWUgbXkgZmF2b3JpdGUuLiAKVGhlIGZpcnN0IGZpc2hib3dsIGNvbnRhaW5zIHRoZSBhbmQgdGhlIHNlY29uZCB0aGUgcmVndWxhciBnaXJscy4uIApTY29yZTogMjcuIFRoZXJlIGFwcGFyZW50bHkgaXNuJ3QgdG9vIG11Y2ggbWlzc2luZyBmcm9tIHRoZSBvdmVyYWxsIHBhY2thZ2UuCkVuIHJldmFuY2hlLCBwb3VyIGQgdHJvdWJsZXMsIGwgc2UgZmFpdCBwbHVzIHByb2xpeGUuIFBydWRlbnQsIFRoaWVycnkgRm9sbGlhcmQsIGVuIHRhbnQgcXVlIG5hdHVyb3BhdGhlLCBzYWl0IHF1IHBldXQgaW5kaXF1ZXIgZGVzIHJlY2V0dGVzICBmYWlyZSBzb2kgbW1lIDogaWwgaW52aXRlIGRvbmMgbGUgbGVjdGV1ciAgbGVzIHBycGFyZXIgbHVpIG1tZSAgbGEgY29uZGl0aW9uIGV4cHJlc3NlIHF1IHNlIGRlc3RpbmVudCB1bmlxdWVtZW50ICB1biB1c2FnZSBleHRlcm5lLiAKSW5zdGVhZCBvZiBiZWluZyB0aGUgZmF0aGVyIHRoYXQgY2xlYW5lZCBoaXMgZ3VuLCBvciBzaGFycGVuZWQgaGlzIGtuaWZlIHdoZW4gdGhlIGJveWZyaWVuZCBjYW1lIG92ZXIsIEkgZGVjaWRlZCB0aGF0IHRoZSBiZXN0IHdheSB0byBoZWxwIG15IGRhdWdodGVyIG1ha2Ugc21hcnRlciBkZWNpc2lvbnMgYWJvdXQgYm95cyBpcyB0byB0cmVhdCBoZXIgbW90aGVyIHdpdGggbG92ZSBhbmQgcmVzcGVjdC4gCk5vdCBzdXJlIG9mIHRoZSBvZGRzLCBidXQgSSBuZXZlciBtYXN0dXJiYXRlZCBub3IgaGFkIHNleCBub3IgaGFkIGEgZ2lybGZyaWVuZCB1bnRpbCBJIHN0YXJ0ZWQgbWFzdHVyYmF0aW5nIGFyb3VuZCBhZ2UgMjcgKHllcywgb2RkLiAKSGksIHdoYXQgdHlwZSBvZiByYXRpbmdzIGFyZSB5b3UgZXhhY3RseSBsb29raW5nIGZvcj8gRmluZGluZyBhbGwgb2YgdGhlIHJhdGluZ3MgaW4gb25lIHBsYWNlIGlzIGtpbmQgb2YgaW1wb3NzaWJsZSBpZiB5b3UgZG9uIHdvcmsgZm9yIGEgbmV3c3BhcGVyIG9yIGtub3cgc29tZW9uZSBmcm9tIGEgVFYgdGhhdCByZWNlaXZlcyB0aGUgZnVsbCBOaWVsc2VuIHJlcG9ydC4gSG93ZXZlciwgaWYgeW91IHdpbGwgYmUgc2F0aXNmaWVkIHdpdGggdGhlIEwrMyBhbmQgTCs3IEExOCA0OSBhbmQgUDIrIHJhdGluZ3MsIGFzIHdlbGwgYXMgTWFsZS9GZW1hbGUgMTggMzQgLyAxOCA0OSB0aGVuIEkgd291bGQgc3VnZ2VzdCBnb2luZyB0aHJvdWdoIHRoZSBkYWlseSBmaW5hbCByYXRpbmdzIHBvc3RzIGF0IFByb2dyYW1taW5nIEluc2lkZXIuIApUaGUgY2hhbmNlIGZpbmFsbHkgYXJyaXZlZCBvbmUgZGF5ICAgZGF5IDcwLCBpbiBmYWN0IHdoZW4gYW4gb2xkIGZyaWVuZCBjYWxsZWQgYW5kIG9mZmVyZWQgbWUgd2hhdCB3b3VsZCBiZWNvbWUgYSBsaWZlIGNoYW5naW5nIG9wcG9ydHVuaXR5LiBNeSBmcmllbmQgaGFkIGJ1aWx0IGFuZCBvd25lZCBhIG1hcmtldGluZyBjb21wYW55IGFuZCBoYWQgcmVjZW50bHkgZmlyZWQgaGlzIG1hbmFnZXIuIEhlIG5lZWRlZCBzb21lb25lIHRvIGhlbHAgd2l0aCB0aGUgZGF5IHRvIGRheSBydW5uaW5nIG9mIGhpcyBidXNpbmVzcy4uIApPdXIgZ2FyYWdlIHdhcyBmYWlybHkgY2xlYW4gYnV0IHdlIGhhZCByYW5kb20gc3R1ZmYgaW4gdGhlcmUgZnJvbSB3aGVuIG15IGRhZCBsZWZ0LCBvbmUgb2YgdGhlIHdlaXJkIHN0dWZmIGJlaW5nIHF1aXRlIGEgZmV3IGFxdWFyaXVtcy4gSSB0cmllZCB0byBtYWtlIGEgdGVycmFyaXVtIGZvciB0aGUgc25hcHBpbmcgdHVydGxlIGFuZCB0aHJldyBhIGJ1bmNoIG9mIGJvbG9nbmEgaW4gaXQsIGZvciB0aGUgdHVydGxlIHRvIGVhdC4gClRoZWlyIHN0YW5jZSBpcyB0aGF0IGluIG9yZGVyIHRvIHJlcHJlc2VudCBnYXlzIHlvdSBoYXZlIHRvIEdheSAod2hhdGV2ZXIgdGhhdCBtZWFucz8hKS4gClRoaXMgbWVhbnMgeW91IGRvIG5vdCBoYXZlIHRvIHRha2UgY2hhbmNlIG9uIG1ha2luZyBhIGRvdWJsZS4gU28sIHNraXAgYmFkIGhhbmRzIGFuZCBwbGF5IHRpZ2h0IGluIGEgY2FzaCBnYW1lLi4gClRoZSBQU0EgYW5kIEtpYSBwbGFudHMgY2FtZSBhZnRlciBTbG92YWtpYSAoYW5kIG5pbmUgb3RoZXIgY2VudHJhbCBvciBNZWRpdGVycmFuZWFuIGNvdW50cmllcykgam9pbmVkIHRoZSBFVSBpbiAyMDA0LiAKQWNjb3JkaW5nIHRvIHRoaXMgcHJvcGhlY3kgdGhlIGRyYXN0aWMgc2hpZnQgdG93YXJkcyBldmlsIGNob2ljZXMgd2lsbCBiZSB3aXRuZXNzZWQgZ3JlYXRseTsgd2hlbiB0aGUgc3Bpcml0cyBvZiBkYXJrbmVzcyB3aWxsIHByZXZhaWwgZGVlcGVyIG9uIHBlb3BsZSdzIGhlYXJ0LCBtaW5kIGFuZCBzb3VsLiAKV2UgSW5kaWFucyBhcmUgd2VsbCBrbm93biBmb3Igc3RheWluZyBpbiAnYmFkIG1hcnJpYWdlcycgZm9yIGFsbCBzb3J0cyBvZiByZWFzb25zIGFuZCB3ZSBicmluZyB0aGUgc2FtZSBzZW5zaWJpbGl0aWVzIHRvIGJhbmtpbmcuCk90aGVyIHJlcXVpcmVtZW50cyBpbmNsdWRlIDMwIHdlZWtzIG9mIGNsaW5pY2FsIHRyYWluaW5nLiBBZnRlciBncmFkdWF0aW9uLCBwaHlzaWNhbCB0aGVyYXBpc3RzIG1heSBzcGVjaWFsaXplIGluIGFuIGFyZWEgbGlrZSBnZXJpYXRyaWNzIGFuZCB0aGVuIGFwcGx5IGZvciBhIHJlc2lkZW5jeSBmb2xsb3dlZCBieSBhIGZlbGxvd3NoaXAuIEFmdGVyIDIsMDAwIGNsaW5pY2FsIGhvdXJzIGluIGEgc3BlY2lhbGl6YXRpb24sIHBoeXNpY2FsIHRoZXJhcGlzdHMgbWF5IHNpdCBmb3IgYW4gZXhhbSB0byBiZWNvbWUgYm9hcmQgY2VydGlmaWVkLiAKSSB0aGluayBJJ2QgcmF0aGVyIGp1c3QgZGllLCBpdCdzIHByb2JhYmx5IHRoZSB3b3JzdCAic29sdXRpb24iIHRvIHNhdmUgYSBodW1hbiBsaWZlIHRoYXQgSSd2ZSBldmVyIGJlZW4gd2l0bmVzcyB0by4uIApUaGF0IGhhcyBmYWxsZW4gYnkgdGhlIHdheXNpZGUgYW5kIHdoYXQgSSByZWFsbHkgd2FudCBub3cgaXMgY3JhcCB0aGF0IHdvcmtzIHRoZSBmaXJzdCB0aW1lIGFuZCBldmVyeSB0aW1lLiAKVGhleSBsaXZlIGluIE9uaWRhLCBhbmQgTWF0dCBmYXJtcyB0aGUgZmFtaWx5IGZhcm0gd2l0aCBoaXMgRGFkIGFuZCBicm90aGVyLiBTaGUgc2VydmVzIHBhdGllbnRzIGZyb20gdGhlIFN1bGx5IFBvdHRlciBIdWdoZXMgQ291bnR5IGFyZWEgd2l0aCBDaGlyb3ByYWN0aWMgY2FyZSwgTkFFVCBhbGxlcmd5IHJlbGllZiwgYW5kIG90aGVyIG5hdHVyYWwgYWx0ZXJuYXRpdmVzZm9yIHRoZSBlbnRpcmUgZmFtaWx5Li4gCkkgc2V0IHRoZSBjYW1lcmEgb24gdG9wIG9mIG15IGRlc2sgYW5kIHNldCBkb3duIHRoZSBmaXJzdCBzaGVldCBvZiBwYXBlci4gCkJ1dCBpZiB5b3UgZ29pbmcgdG8gSmVvbmp1IGhhbm9rIHZpbGxhZ2UgeW91IG1pZ2h0IGNvbnNpZGVyIHdoZXRoZXIgeW91IHJlYWxseSBuZWVkIHRvIGRvIGJvdGguIApFZGl0OiBJIGFwb2xvZ2l6ZSBmb3IgdGhlIHVubmVjZXNzYXJpbHkgbG9uZyB3aW5kZWQgcmVzcG9uc2UhIEkgbm90IGV4YWN0bHkgaGFwcHkgd2l0aCBpdCAgIEkgZmVlbCBsaWtlIGl0IG1pc3Npbmcgc29tZXRoaW5nLCBhbmQgSSBkaWRuIHF1aXRlIGdldCB0aGUgbWVzc2FnZSBJIHdhbnRlZCBhY3Jvc3MsIGJ1dCBJIGdvaW5nIHRvIGxlYXZlIGl0IGFsb25lIG5vdy4KQmV5b25kIHRoYXQ6IGNhdmUgbGV2ZWwodGhpbmsgbWF6ZSB3aXRoIG5hcnJvdyB0dW5uZWxzKQpBZnRlciBhIHRlYWNoaW5nIHN0aW50IGluIHR3byByYWNpYWxseSBzZWdyZWdhdGVkIHNjaG9vbHMgc2hlIGJlZ2FuIHN0dWR5aW5nIGF0IHRoZSBNb250cmVhbCBGaWVsZCBCZWF1dHkgQ3VsdHVyZSBTY2hvb2wgd2hpY2ggYWNjZXB0ZWQgQmxhY2sgYXBwbGljYW50cy4gU2hlIGZ1cnRoZXJlZCBoZXIgdHJhaW5pbmcgaW4gQXRsYW50aWMgQ2l0eSBhbmQgTmV3IFlvcmsuIEluIDE5MzcsIERlc21vbmQgc2V0IHVwIFZpIFN0dWRpbyBvZiBCZWF1dHkgQ3VsdHVyZSBpbiBIYWxpZmF4IGNhdGVyaW5nIHRvIEJsYWNrIHdvbWVuIHdoZXJlIHRoZXkgYWxzbyBzb2NpYWxpemVkLiAKSXQgc2hvdWxkIGJlIG5vdGVkIGhvd2V2ZXIsIHRoYXQgaW4gY2VydGFpbiB0cmFuc2dlbmljIG1vdXNlIG1vZGVscyBmb3IgbmV1cm9sb2dpY2FsIGRpc2Vhc2UgdGhlIGJlbmVmaWNpYWwgZWZmZWN0IG9mIHBoeXNpY2FsIGFjdGl2aXR5IG9uIG5ldXJvZ2VuZXNpcyBpcyBlcXVpdm9jYWwgWzMwXS4gClRoZSBQcmVzaWRlbnQgbXVzdCBhY3R1YWxseSBwdXNoIHRoaXMgY291bnRyeSBpbiBhIGRpcmVjdGlvbiwgbm90IGdldCBzdHVjayBpbiB0aGUgbWlkZGxlIHdpdGggdGhlIHJlc3Qgb2YgdGhlIGNyb3dkLiAKTmljaG9sZnJpdHogdQpIb3cgdG8gTWF4aW1pemUgWW91ciBQb2tlciBFbmpveW1lbnQKWW91bmcgcGVvcGxlIG9mIFJlZGRpdCwgd2h5IGRvIHlvdSBzdGlsbCBzbW9rZT8gSSBnZXQgdGhlIG9sZGVyIGdlbmVyYXRpb25zIGRvIGJlY2F1c2UgZ3Jvd2luZyB1cCwgdGhleSBtYXkgbm90IGhhdmUga25vd24gYmV0dGVyLiAKQnkgbGF0ZSBNYXksIEkgaGFkIGxvc3QgMTAgcG91bmRzIGFuZCB3YXMgdXAgdG8gYXJvdW5kIDIwIG1pbGVzIHBlciB3ZWVrLiAKUmVlZiBpcyBhIGRvZyB3aG8gcHJlZmVycyB0byBzYXZlIGxpdmVzIGluIHRoZSB3YXRlciBvZmYgdGhlIEl0YWxpYW4gY29hc3QgYW5kIFJpY29jaGV0IGlzIGFuIGVtb3Rpb25hbCBzdXBwb3J0IGFuaW1hbCBmb3IgcGVvcGxlIHdpdGggUFRTRCBhbmQgb3RoZXIgc3BlY2lhbCBuZWVkcy4KSSBndWVzcyB0aGUgb25seSB0aGluZyB3ZSBjYW4gZG8gaXMgc29ydCBieSBuZXcgdG8gdHJ5IHRvIGhlbHAgdGhvc2Ugd2hvIG5lZWQgaXQgZm9yIHRoZWlyIG1vcmUgIm5vcm1hbCIgaXNzdWVzIGFuZCBhcmVuIGdldHRpbmcgaXQuLiAKSSdtIGp1c3Qgbm90IGVuYW1vcmVkIGJ5IHRoZSBpZGVhIG9mIHNheWluZyAibG9vaywgd2UgY291bGRuJ3QgYmUgYm90aGVyZWQgdG8gdHJ5IG1ha2UgdGhlIHJvYWRzIGEgc2FmZXIgcGxhY2UgZm9yIGFsbCBzbyBqdXN0IGdvIGhlcmUgaW5zdGVhZCIuIFRoZXJlJ3Mgbm90aGluZyB3cm9uZyB3aXRoIHN1Z2dlc3RpbmcgdGhhdCBhIGNoYW5nZSB0byB0aGUgZHJpdmluZyBjdWx0dXJlIGhlcmUgc2hvdWxkbid0IGJlIHVuZGVydGFrZW4gZXNwZWNpYWxseSBpZiBpdCdzIGJhZCBlbm91Z2ggdG8gd2FycmFudCBhIHJlc3BvbnNlIGxpa2UgdGhpcy5FRElUOiBzZWVtcyB0byBtZSB0aGF0IHRoZXJlIGEgZmV3IHBlb3BsZSBoZXJlIHdobyBkcml2ZSBsaWtlIGlkaW90cyBhbmQgZG9uIHdhbnQgdGhlICJkYW1uIGd1YiBpbiBub25lIi5kb2Rha2sgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ29Zb3Ugc2F5IGl0IGFzIHRob3VnaCB0aGVpciBvbmx5IHBvdGVudGlhbCBpbmNvbWUgaXMgdGhyb3VnaCBpbmNyZWFzaW5nIFJPSS4gCkEgbG90IG9mIHRpbWVzIFlvdSBqdXN0IG5lZWQgdG8gaWdub3JlIHlvdXIgZW1vdGlvbnMgYW5kIGZlZWxpbmdzLCBhbmQgZ28gd2l0aCB5b3VyIGd1dC4uIApJIGZlZWwgbGlrZSBldmVyeSBPU1UgZGluaW5nIHN0dWRlbnQgd29ya2VyIGxvb2tzIHNvIHVucmVhc29uYWJseSBzdHJlc3NlZCBkdXJpbmcgYnVzeSBob3Vycywgd2F5IG1vcmUgdGhhbiBwcmUgdGFwaW5nby4gSSBhc2tlZCBzb21lYm9keSBlbHNlIGluIHRoaXMgdGhyZWFkIGFib3V0IHRoZSBlZmZpY2llbmN5IG9mIHBsYWNlcyB0aGF0IGhhdmUgdGhlIHRhcGluZ28gdGFibGV0cyBmb3Igb3JkZXJpbmcgKHVuaW9uIG1hcmtldCwgbWlycm9yIGxha2UsIGp1aWNlL2NvdXJ0c2lkZSwgZXRjKSB2cyB0aGUgZWZmaWNpZW5jeSBvZiB0aGUgaHVtYW5zICsgdGFwaW5nbyBzeXN0ZW0gKGN1cmwsIHNsb29weSBldmVyeXdoZXJlIGVsc2UpLiBEb2VzIHRoaXMgbWFrZSBhIGRpZmZlcmVuY2Ugd2l0aCB0aGUgaW4gcGVyc29uIHZzIHRhcGluZ28gdG8gZ28gaXNzdWU/IERvIHlvdSB0aGluayBhIGZ1bGwgdGFwaW5nbyB0YWtlb3ZlciBpcyB3aGVyZSB3ZSBoZWFkaW5nPyBNYXliZSB3aXRoIHRoZSBleGNlcHRpb24gb2YgY29mZmVlIHNob3BzIHdoZXJlIHBlb3BsZSBnZXQgc3VwZXIgcGlja3k/ClNpIG9uIG5lIHMnZXN0IHBhcyBxdWlwIGF1IHByYWxhYmxlLiBCYWRvaXQsIGMnZXN0IGF1c3NpIHVuIHBhcnRlbmFyaWF0IGF2ZWMgbGUgY2hlZiBUaGllcnJ5IE1hcnggcXVpIGVzdCB2ZW51IGV4cGxpcXVlciBsZSBybGUgZGUgbCdlYXUgZGFucyBzYSBjdWlzaW5lLiAKVGhlcmUgaXMgYSBzbWFsbCAgIGFsYmVpdCBwZXJmZWN0bHkgZm9ybWVkICByZWNlcHRpb24gYXJlYSBidXQgbm8gbG9iYnkgb3IgbG91bmdlIGFzIHN1Y2guIFRoZSBzd2lmdCBhY2Nlc3MgZnJvbSB0aGUgc3RyZWV0IHRvIHRoZSByb29tcyBtaWdodCB3ZWxsIG1ha2UgdGhlIENyY3VsbyBHcmFuIFZhIGEgcG9wdWxhciBjaG9pY2UgZm9yIHBlb3BsZSB3aG8gZG8gbm90IHdpc2ggdG8gYmUgc2VlbiBmb3Igb25lIHJlYXNvbiBvciBhbm90aGVyLgpBbmQgZ29kIGhlbHAgeW91IGlmIHlvdSB0cnkgdG8gZmFrZSBpdCBpbiBDYXRhbGFuLi4gCkZvciBleGFtcGxlLCBpZiBEZWxsIHRyYWNrcyBlYWNoIGNvbXB1dGVyIHRocm91Z2ggdGhlIG1hbnVmYWN0dXJpbmcgYW5kIHNoaXBwaW5nIHByb2Nlc3MsIGN1c3RvbWVycyBjYW4gc2VlIGV4YWN0bHkgd2hlcmUgdGhlaXIgb3JkZXIgaXMgYXQgYW55IHRpbWUuIApJJ3ZlIHRyaWVkIHRvIG1ha2UgYSBwbGFuIG9uIHdoYXQgSSdsbCBkbyBpZiBoZSBzaG93cyB1cCB0byBhIGdhbWUuIFNpdCBpbiB0aGUgb3V0ZmllbGQ/IEJ1dCB0aGVuIEkgdGhpbmsgd2h5IHNob3VsZCBJPyBUaGlzIGlzIG15IGtpZCBJIHNob3VsZG4ndCBoYXZlIHRvIG1vdmUgdG8gYWNjb21tb2RhdGUgaGltLiAKSW4gZmFjdCwgT2JhbWEgZGlwbG9tYWN5IGluIFJ1c3NpYSBpcyBzbyBzaW1pbGFyIHRvIER1YmJ5YSB0aGF0IHRoZSBSdXNzaWFucyBhcmUgbm90IHJlYWxseSBzZWVpbmcgdGhlIGNoYW5nZS4uIApJIHRha2UgaGlzIG9yZGVyIGFuZCBJIGFzayBmb3IgYSBuYW1lIHRvIHB1dCBvbiB0aGUgb3JkZXIuIEhlIGNodWNrbGVzIGFuZCBzYXlzICJDaHJpcyIuIFdoeSBkaWQgaGUgY2h1Y2tsZT8gSSBkaWRuIGtub3cgYXQgdGhlIHRpbWUuIAooVGFsayBhYm91dCBidWlsZGluZyBhIHdhbGwuKS4uIApUaGUgc3RyZW5ndGggb2YgYSBwb2tlciBoYW5kICg1IGNhcmQgY29tYmluYXRpb24gaW4gbW9zdCBnYW1lcykgZGVwZW5kcyBvbiB0aGUgaGlnaGVzdCBwb3NzaWJsZSBjb21iaW5hdGlvbi4gClRoZSBhY3RpdmUgaW5ncmVkaWVudCwgV2l0Y2ggSGF6ZWwsIGhhcyBiZWVuIHVzZWQgZm9yIGNlbnR1cmllcyB0byB0b25lIGFuZCB0aWdodGVuIHRoZSBwb3Jlcywgd2l0aCBhZGRlZCBlc3NlbnRpYWwgb2lsIG9mIHJvc2UgdG8gc21vb3RoIGZpbmUgbGluZXMgYW5kIHdyaW5rbGVzLi4gClBsYXlpbmcgcHJldGVuZCB3aXRoIHlvdW5nZXIgc2libGluZ3MgaXNuIGEgYmFkIHRoaW5nLiBBZHVsdHMgZG8gaXQgd2l0aCB0aGVpciBvd24ga2lkcyBhbGwgdGhlIHRpbWUuIEl0IHdvbmRlcmZ1bCB0aGF0IGhlIGVuam95cyBzcGVuZGluZyB0aW1lIHdpdGggaGlzIHNpYmxpbmdzLgpBcyBhIGNvc21ldGljIHN1cmdlb24gZnJvbSBhIEd1bGYgc3RhdGUgdG9sZCBtZSwgaGUgdXNlZCB0byBvbmx5IHNlZSB3b21lbiBmb3Igbm9zZSBqb2JzIGJlY2F1c2UgaXQgd2FzIGNvbnNpZGVyZWQgdW5Jc2xhbWljIHRvIHNob3cgYSBtYWxlIGRvY3RvciB5b3VyIGJvZHkgZm9yIHJlYXNvbnMgb2YgdmFuaXR5IGFzIG9wcG9zZWQgdG8gaWxsbmVzcy4gSG93ZXZlciwgaGUgc2VlcyBtb3JlIGFuZCBtb3JlIChmdWxseSB2ZWlsZWQpIHdvbWVuIGZvciBib29iIGpvYnMgYW5kIGxpcG8uIElzIGEgdHJlbmQgaGUgaGltc2VsZiBzZWVzIGFzIGZ1bGx5IElzbGFtaWMgc2luY2UgR29kIGlzIGJlYXV0aWZ1bCBhbmQgdGhlcmVmb3JlIHdlIG11c3QgbG92ZSBiZWF1dHkuLiAKQSBjdXQgY2FyZC4gVGhpcyBjYW4gYmUgdXNlZnVsIGZvciBib3RoIGN1dHRpbmcgdGhlIGRlY2sgYW5kIHByZXZlbnRpbmcgdGhlIGJvdHRvbSBvZiB0aGUgZGVjayBmcm9tIGJlaW5nIGV4cG9zZWQuIEFkZGl0aW9uYWxseSwgaXQgc2VydmVzIHRvIHByZXZlbnQgcGxheWVycyBmcm9tIGRlYWxpbmcgb2ZmIHRoZSBkZWNrJ3MgYm90dG9tIHRvIGNoZWF0LiBUbyBjcmVhdGUgdGhpcyBhcnRpY2xlLCAyNCBwZW9wbGUsIHNvbWUgYW5vbnltb3VzLCB3b3JrZWQgdG8gZWRpdCBhbmQgaW1wcm92ZSBpdCBvdmVyIHRpbWUuIFRoaXMgYXJ0aWNsZSBoYXMgYWxzbyBiZWVuIHZpZXdlZCAzODYsNTk5IHRpbWVzLgpIb3dldmVyLCByZXNlYXJjaCBhbHNvIHN1Z2dlc3RzIHRoYXQgdGhlIHdpbnRlciBtb250aHMgcG9zZSBvdGhlciBoYXphcmRzIHRvIGhlYWx0aCBsaW5rZWQgdG8gdGhlIGJvdHRvbWluZyBvdXQgb2Ygdml0YW1pbiBEICAgYSBjcml0aWNhbCBudXRyaWVudCBtYWRlIGluIHRoZSBza2luIHRocm91Z2ggdGhlIGFjdGlvbiBvZiBzdW5saWdodC4KSW4gc29tZSBjYXNlcywgeW91IHdpbGwgZmluZCB0aGF0IHlvdSBoYXZlIGEgcG9rZXIgdGFibGUgdGhhdCB5b3Ugd291bGQgbGlrZSB0byByZWZ1cmJpc2ggYWZ0ZXIgeWVhcnMgb2YgYWJ1c2UsIG9yIHlvdSBtYXkgZmluZCB0aGF0IHlvdSBhcmUgaW50ZXJlc3RlZCBpbiBidWlsZGluZyB5b3VycyB1cCBmcm9tIHRoZSBncm91bmQhIEluIGVpdGhlciBjYXNlLCB5b3UgbmVlZCB0byB0aGluayBhYm91dCB0aGUgY2xvdGggdGhhdCB5b3UgYXJlIGxpbmluZyBpdCB3aXRoLCBhbmQgdGhpcyBpcyB3aGVyZSBjaG9vc2luZyB0aGUgZmVsdCBjb21lcyBpbi4KUGFydHkgb3IgdGFyZ2V0ZWQgTlAgY2hhcmdlIHNraWxsLiBXaXRoIG1heWJlIHJlbW92ZSBkZWJ1ZmYuCk1heWJlIHRlbGxpbmcgaGVyIHdoZW4gc2hlIGF3YWtlIHdpbGwgaGVscCBzb21lIG1vcmUuLiAKRmlyc3Qgb2YgYWxsLCB5b3VyICJyZWFsIGRvY3RvciIgY291c2luIGhhZCBhdCBtaW5pbXVtIDc1JSBsZXNzIGhvdXJzIG9mIFJhZGlvbG9neSBpbnN0cnVjdGlvbiBpbiBNZWRpY2FsIFNjaG9vbCB0aGFuIHRoZSBDaGlyb3ByYWN0b3IgZGlkLiBUaGlzIGlzIHVubGVzcyBoZSBpcyBhIFJhZGlvbG9naXN0IG9yIE9ydGhvcGVkaWMgU3VyZ2Vvbi4gVGhlcmVmb3JlLCBoZSBpcyB0b3RhbGx5IHVucXVhbGlmaWVkIHRvIGRpc3B1dGUgWCBSYXkgZmluZGluZ3Mgd2l0aCBhIENoaXJvcHJhY3Rvci4KQWxleCBCdWNoYW4sIExhbmRza2lwIERyYWZ0c21hbiB0byBNci4gCkkgdGhvdWdodCBhYm91dCBjaGFuZ2luZyB0aGUgY2FibGVzIGJ1dCBzaW5jZSBib3RoIHNwZWFrZXJzIGtpbmRhIHNpbWlsYXJseSBzaG93ZWQgcHJvYmxlbXMgd2l0aCBoYXZpbmcgc2VwZXJhdGUgY2FibGVzIGkga2luZGEgcnVsZWQgdGhhdCBvdXQgdG8gYmUgdGhlIFByb2JsZW0gYnV0IG1pZ2ggdHJ5LgpTYW0gZnJvbSBUcnVlIEJsb29kIHRyaWVkIHRvIGNvbWZvcnQgaGVyIG5lcnZlcyB3aXRoIGEga2lzcywgYW5kIHNoZSByZWFsaXplZCBKYWNrIGhhZCBiZWVuIHJpZ2h0IGFib3V0IFNhbSBmcm9tIFRydWUgQmxvb2QncyByZWFsIGludGVudGlvbnMuU2hlIGFuZCBKYWNrIGRlZnRseSBhdm9pZGVkIG5vdGljaW5nIGVhY2ggb3RoZXIgYXMgUmViZWNjYSB3ZW50IHRvIHRoZSBiYWNrIG9mIHRoZSB0aGVhdGVyIHRvIGNhbGwgaG9tZSBhbmQgbGVhdmUgYSBtZXNzYWdlIGZvciBoZXIgaHVzYmFuZCwgc2F5aW5nIHNoZSBsb3ZlZCBoaW0gYW5kIHdpc2hlZCBoZSB3YXMgdGhlcmUuTWVhbndoaWxlLCBKYWNrIHdhbmRlcmVkIGJhY2tzdGFnZSwgd2hlcmUgU2FtIGZyb20gVHJ1ZSBCbG9vZCBsZXQgaXQgc2xpcCB0aGF0IGhlICJjcm9zc2VkIGEgbGluZS4iIFNvIEphY2sgcHVuY2hlZCBoaW0gaW4gdGhlIG5vc2UsIGFuZCB0aGF0J3Mgd2hlbiBSZWJlY2NhIHJldHVybmVkLCBmdXJpb3VzLiAKMjogV2VudCB0byBhIGNhbGwgdG8gYSBjdXN0b21lcnMgcG9vbCBob3VzZSBBL1Ygc3lzdGVtIHRoYXQgd2FzICJhY3RpbmcgdXAiLiBUaGlzIGN1c3RvbWVyIHdhcyBhIERyLidzIHRyb3BoeSB3aWZlIHRoYXQgaGFkIG5vIHByb2JsZW0gZ3JlZXRpbmcgeW91IGluIGp1c3QgYSB0b3dlbCBhbmQgdGhlbiBsYXlpbmcgb3V0IG51ZGUgb24gdGhlIHBvb2wgZGVjayB3aGlsZSB5b3Ugd2VyZSB3b3JraW5nLiAKMjAgSW50ZXJlc3RpbmcgRmFjdHMgQWJvdXQgQXVzdHJhbGlhCkl0IGFsbCBjb21lcyBkb3duIHRvIHRoZSBxdWFsaXR5IG9mIHRoZSBwaXRjaGVzIGFuZCB0aGUgdW5kZXJseWluZyBidXNpbmVzc2VzIGFuZCBldmVuIHRoZW4gaXQgY2FuIHRha2UgeWVhcnMgdG8gbWFrZSBtb25leSB5b3Ugc2Vla2luZyBmdW5kaW5nLCB5b3UgaGF2ZSB0byBtYWtlIHN1cmUgeW91IGhhdmUgYWxsIHRoZSBwaWVjZXMgaW4gcGxhY2UgdG8gbWFrZSBpdCB0aHJvdWdoIGR1ZSBkaWxpZ2VuY2UuIFlvdSBoYXZlIHRvIGJlIGFibGUgdG8gc2hvdyB0aGF0IHlvdSB3ZXJlIGRvaW5nIHdoYXQgeW91IHNheSB3ZXJlIGRvaW5nLiBXZSBlbmRlZCB1cCBjbG9zaW5nIG9uIFN0ZWVwZWQgVGVhLCBDb2NvYSBKZXdlbHJ5LCBFblJpY2hlZCBBY2FkZW15IGFuZCBHb3QgYSBHcnVkZ2UgdGhhdCBsYXN0IG9uZSBpcyBzdGFsbGVkIHJpZ2h0IG5vdyBhcyB0aGUgZW50cmVwcmVuZXVyIHdobyBoYWQgYW4gaWRlYSBmb3IgYSB0ZWxldmlzaW9uIHNob3cgaXMgd2FpdGluZyB0byBzZWUgaWYgYSBuZXR3b3JrIHdpbGwgcGljayBpdCB1cCwgTXIuIFRyZWxpdmluZyBzYXlzLgpVbnRpbCBub3csIGRldGFpbHMgb2YgaG93IFNub3dkZW4gYXZvaWRlZCBkZXRlY3Rpb24sIGFuZCB3aGVyZSBhbmQgd2hvIHNoZWx0ZXJlZCBoaW0gaGF2ZSBiZWVuIGNsb3NlbHkgZ3VhcmRlZCBzZWNyZXRzIGtub3duIG9ubHkgYnkgdGhlIGZhbWVkIHdoaXN0bGVibG93ZXIgYW5kIGhpcyBIb25nIEtvbmcgYmFzZWQgbGF3eWVycy4gCklmIHRoYXQgdmVpbCBjYW4gYmUgdGhpbm5lZCwgYW5kIHRoZSBvYmplY3RpdmVzIGV4cGxhaW5lZCBpbiBhIHN0cmFpZ2h0Zm9yd2FyZCB3YXksIGl0J3MgbW9yZSBsaWtlbHkgdG8gYmUgZW1icmFjZWQuIApBIG1vcmUgY29nZW50IHBvaW50IGlzIHRoYXQgc29tZSBvcmdhbmljIHBlc3RpY2lkZXMgYXJlIGFjdHVhbGx5IG5vIGJldHRlciB0aGFuIHN5bnRoZXRpYyBvbmVzLCBhbmQgcG90ZW50aWFsbHkgZXZlbiB1bnNhZmVyLiBJZiB5b3UgZG9uIG5lZWQgdG8gd29yayBmb3IgZm9vZC90dWl0aW9uIG1vbmV5IGFuZCBhcmUgbmVhciB0aGUgQXBwYWxhY2hpYW4gVHJhaWwgb3IgUGFjaWZpYyBDb2FzdCBUcmFpbCB5b3UgY291bGQgZXZlbiB0dXJuIGl0IGludG8gYSBoaWtpbmcgdHJlay4gCkkgd2FzIHF1aXRlIG5lcnZvdXMgYXQgZmlyc3QsIGJ1dCBhZnRlciBhIGZldyBzZXNzaW9ucywgSSd2ZSByZWFsaXplZCB0aGF0IDIvNSBza2lsbCBsZXZlbCBpc24ndCByZWFsbHkgdGhhdCBoaWdoIGFuZCBJJ3ZlIGJlZW4gZG9pbmcgd2VsbCAoeWVzIEkga25vdywgbG9sIHNhbXBsZSBzaXplKS4gCkkga25ldyBpdCBkaWRuIHdvcmsgYW5kIGVuZGVkIHVwIHJlZnVzaW5nLCBvbmx5IHRpbWUgSSBldmVyIGdvdCBsZWdpdCBncm91bmRlZC4gQWxzbyBteSBlbnRpcmUgYmFnIG9mIEhhbGxvd2VlbiBjYW5keSB3YXMgdG8gYmUgcmF0aW9uZWQgdG8gb25lIGEgd2Vlay4gCklEOiA3NzkwNjggV2UgYXJlIG5vdCBhIHVuaW9uaXplZCByb29tLCB3ZSBkbyBub3Qgd2FudCBhIG1hc3NpdmUgcm9vbS4gCk1heSBJIGFzayBob3cgeW91IGdvdCBpbiB0byBjb3B5ZWRpdGluZyBmcm9tIGhvbWU/IEknbSB1bmFibGUgdG8gd29yayBhd2F5IGZyb20gaG9tZSBhbmQgaGF2ZSBiZWVuIGxvb2tpbmcgZm9yIHJlbW90ZSBwcm9vZnJlYWRpbmcgcGxhY2VtZW50cyBidXQgaW4gdGhlIFVLLCBhcyBmYXIgYXMgSSd2ZSBzZWVuLCB0aGV5J3JlIHZpcnR1YWxseSBub25leGlzdGVudC4gSSdtIGN1cnJlbnRseSBzdHVkeWluZyBhIGxpdGVyYXR1cmUgZGVncmVlIGFuZCBwZW9wbGUgaGF2ZSByZWNvbW1lbmRlZCB0aGF0IEkgdGVhY2guIApPbmUgaW1wb3J0YW50IHRoaW5nIHlvdSBzaG91bGQga25vdyBpcyB0aGF0IERpcnR5IEJvdXJib24gbGl2ZXMgdXAgdG8gaXRzIHNlbGYgaW1wb3NlZCBtb25pa2VyLCAiTmV3IE9ybGVhbnMgQmlnIEJyYXNzIENpcmN1cyBSb2NrLiIKSSBnb3QgbWFkZSByZWR1bmRhbnQgZnJvbSB0aGF0IGFuZCBtb3ZlZCB0byBhIHNpbWlsYXJseSBwYWlkIGpvYiB0aGF0IEkgaGF0ZWQgYW5kIG1hZGUgdGhlIGRlY2lzaW9uIHRvIHRyeSBhbmQgaW5jcmVhc2UgbXkgcG9rZXIgaW5jb21lIHNvIEkgY291bGQgdGFrZSBhIGxlc3Mgd2VsbCBwYWlkIGpvYiB0aGF0IGlzIHVsdGltYXRlbHkgbW9yZSByZXdhcmRpbmcuCkEgbWVzc2FnZSB0byBhbGwgbmV3IGNpdGl6ZW5zOiBXZSBzaW5jZXJlbHkgaG9wZSB5b3UgaW50ZWdyYXRlIGludG8gb3VyIGxvY2FsIGN1bHR1cmUgYW5kIG1ha2UgYXR0ZW1wdHMgdG8gYXNzaW1pbGF0ZSBhbmQgZW1icmFjZS8gYXBwcmVjaWF0ZSB0aGUgdmFyaW91cyBtdWx0aSBldGhuaWMgY3VsdHVyZXMgd2UgaGFkIGJ1aWx0IHVwIHNvIHBhaW5zdGFraW5nbHkgb3ZlciB0aGUgZGVjYWRlcy4gQmVjYXVzZSBhdCB0aGUgc2FtZSB0aW1lLCB3ZSBhcmUgZGVmaW5pdGVseSBvcGVuIHRvIHRha2luZyB0aGUgYmVzdCB0aGF0IHlvdSBoYXZlIHRvIG9mZmVyLCBhbmQgdG8gY3JlYXRlIG5ldyBhbmQgYmVhdXRpZnVsIFNpbmdhcG9yZWFuIHRoaW5ncy4uIApBbiBJU1AgdGhyb3R0bGluZyBhIGN1c3RvbWVyIGlzIHN1YnN0YW50aWFsbHkgZGlmZmVyZW50IHRoYW4gdGhlIHBlZXJpbmcgYW5kIHRyYW5zaXQgc2VydmljZXMgdGhleSBwcm92aWRlIHRvIGludGVybmV0IGJhY2sgaGF1bCBwcm92aWRlcnMuIApNeSBiYXNlIHdhcyBoaWdoZXIgYXQgQ0MgYnV0IG92ZXJhbGwgY29tcGVuc2F0aW9uIHdhcyBtdWNoIGxvd2VyIFJTVXMuIENDIHdhcyBhIG5pY2UgY29tcGFueSwgb2Z0ZW4gcmF0ZWQgYSByZWFsbHkgZ3JlYXQgb25lIHRvIHdvcmsgZm9yIGluIG15IHRvd24uIApUaGlzIGlzIHdoYXQgdGhlIEFtZXJpY2FuIGVjb25vbXkgaGFzIGJlZW4gbGlrZS4gU3QuIApJZiB0aGV5IGZhaWwgdGhhdCB0ZXN0IHRoZXkgYXJlIGluc3RydWN0ZWQgdG8ga2lsbCB0aGVtc2VsdmVzLiBJbiB0aGF0IHdhbGwgYWxsIHRoZSBzdWNjZXNzZnVsIGltbXVuZSBjZWxscyByZW1haW4gc2Vuc2l0aXZlIHRvIGNoZW1pY2FscyB0aGF0IGRvbiBtYXRjaCAic2VsZiIgSW52YWRpbmcgcGF0aG9nZW5zIGFyZSBjb3ZlcmVkIGluIHRoZXNlIHR5cGVzIG9mIGNoZW1pY2FsIHRyaWdnZXJzLiAKTm9uZSBvZiB0aGlzIHNvbWV0aW1lcyBwcm9zZWN1dGVkIGluIG9uZSBqdXJpc2RpY3Rpb24sIHNvbWV0aW1lcyBpbiBtdWx0aXBsZSwgZGVwZW5kaW5nIG9uIGhvdyBvcm5lcnkgdGhlIHByb3NlY3V0b3JzIGFyZSBmZWVsaW5nIHRoYXQgZGF5LiBBbnl0aGluZyBlbHNlIGp1c3QgbWFrZXMgbWUgaGF0ZSBvdXIgbGVnYWwgc3lzdGVtIGEgbGl0dGxlIGJpdCBtb3JlLiAKVGhlcmUgb25seSBhIGhhbmRmdWwgb2YgdGhlbSwgYW5kIGdlbmVyYWxseSB0aGV5IGp1c3QgZmVlbCBsaWtlIHBhcnRpY3VsYXIgY2xhc3NlcyBzaG91bGQganVzdCBoYXZlIHNvbWUgb2YgdGhlc2UgYWJpbGl0aWVzIGFueXdheSAgIEdyZWF0IFdlYXBvbiBNYXN0ZXIsIGZvciBleGFtcGxlLiAKTWUgICBFdmVyIHNpbmdsZXMgbmVhciBtZSB1ayB3b25kZXJlZCB3aGV0aGVyIHRoZXJlIGFyZSBhbnkgU2VuaW9yIFNpbmdsZXMgbmVhciB5b3U/IEdldCBjaGF0dGluZyB0byBzZW5pb3JzIGluIHlvdXIgbG9jYWwgYXJlYSBhbmQgc3RhcnQgZ29pbmcgb24gZGF0ZXMhIE1lZXQgVGFtaWwgc2luZ2xlcyBmcm9tIHlvdXIgY2l0eSBhbmQgYXJvdW5kIHRoZSB3b3JsZC4gCkFzIHNvb24gYXMgaGUgaGVhcmQgdGhhdCBhbmQgdGhlIHBvbGljZSBsZWF2aW5nIGhlIHRvcmUgZG93biB0aGUgd2FsbCAoaGVkIGFscmVhZHkgYmVlbiB3b3JraW5nIG9uIHRoaXMgYXBwYXJlbnRseSkgYW5kIHJvYmJlZCB0aGUgcGxhY2UgdGFraW5nIGhpcyBzd2VldCB0aW1lLiBFc2NhcGVkIHdpdGhvdXQgYW55b25lIG5vdGljaW5nIGFueXRoaW5nIGZvciBob3VycywgdW50aWwgdGhlIGpld2VsbGVycyBjYW1lIGJhY2sgaW4gdGhlIG1vcm5pbmcuCkhleSwgSSByaWdodCB0aGVyZSB3aXRoIHlhIG1hbi4gCk5vdyB0aGF0IHRoZXkncmUgYWR1bHRzIGFuZCBib3RoIGluIGNvbW1pdHRlZCByZWxhdGlvbnNoaXBzLCBtYWtpbmcgaW1tYXR1cmUgam9rZXMgaXMgb25lIHdheSB0byBmZWVsIGxpa2UgdGhleSdyZSBub3QgbG9zaW5nIHRoZWlyIGNhcmVmcmVlIHlvdXRoL2ZyZWVkb20uSGUgcHJvYmFibHkgZGlkbid0IHJlYWxpemUgaXQgd291bGQgaHVydCB5b3UgYmVjYXVzZSAxLiBJdCB3YXMgImEgam9rZSIgYW5kIDIuIGl0IHdhc24ndCBtZWFudCBmb3IgeW91LCB0aGVyZWZvcmUgeW91ICJzaG91bGRuJ3QiIGJlIG9mZmVuZGVkLiAoSSBrbm93LCBwcmVwb3N0ZXJvdXMuKVlvdXIgQkYgZGlkbid0IHN0YW5kIHVwIGZvciB5b3UgYmVjYXVzZSBpdCB3b3VsZCBoYXZlIHByb3ZlZCBoaXMgYnJvdGhlciByaWdodCBhbmQgcG90ZW50aWFsbHkgZWdnZWQgaGltIG9uLiAKVHdlbnR5IGZpcnN0IENlbnR1cnkgSmFjayBvIExhbnRlcm4gQ2FydmluZy4gVGhlIGZpcnN0IHRoaW5nIGlzIHRvIGNhcnZlIHRoZSBsaWQuIAoiRXNzZW50aWFsIGZhdHR5IGFjaWRzLCBib3RoIG4gNiBhbmQgbiAzLCBoYXZlIGJlZW4gcGFydCBvZiBvdXIgZGlldCBzaW5jZSB0aGUgYmVnaW5uaW5nIG9mIGh1bWFuIGxpZmUuIApIdW1hbnMgaGF2ZSBiZWVuIGNvb2tpbmcgZm9yIHdlbGwgb3ZlciBhIGh1bmRyZWQgdGhvdXNhbmQgeWVhcnMuIFNvbWUgbnV0cmllbnRzIGFyZSBlbmhhbmNlZCBieSBoZWF0LiAKVGhlIGNhc2VzIGNvdmVyIHR3byByZWNlc3Npb25zIGFuZCB0aGUgb2NjYXNpb25hbCBtYXJrZXQgd29iYmxlLCBzbyB3ZSBjYW4gZGlzdGluZ3Vpc2ggYmV0d2VlbiBzdHJhdGVnaWVzIGZvciB0aGUgZ29vZCB0aW1lcyBhbmQgdGhlIGJhZC4gQnkgY29tcGFyaW5nIHRoZSBjYXNlIHN0dWRpZXMgdGhhdCBnZW5lcmF0ZWQgdGhlIGxhcmdlc3QgYnVzaW5lc3MgZWZmZWN0cyB3aXRoIHRob3NlIHRoYXQgZ2VuZXJhdGVkIGxlc3MgaW1wcmVzc2l2ZSBlZmZlY3RzLCB3ZSBoYXZlIGJlZW4gYWJsZSB0byBleHBsb3JlIHdoaWNoIG1hcmtldGluZyBpbnB1dHMgdGVuZCB0byBwcm9tb3RlIHN1Y2Nlc3MgYW5kIHdoaWNoIGRvIG5vdC4gV2UgY2FuIGFsc28gc2VlIGhvdyB0aGlzIHZhcmllcyBkdXJpbmcgdGhlIGxpZmUgY3ljbGUgb2YgbWFya2V0IGNhdGVnb3JpZXMsIGZyb20gYmlydGggYW5kIGdyb3d0aCB0byBtYXR1cml0eSBhbmQgZGVjbGluZS4uIApJIHRoaW5rIEVtYmVyIHdvdWxkIGJlIHBlcmZlY3QgZm9yIHRoZSB0YWcgZGl2aXNpb24gcmlnaHQgbm93IHNpbmNlIHRoZSBtYWluIHRpdGxlIHNjZW5lIGlzIGEgYml0IG92ZXJmbG93aW5nIHdpdGggYmlnIGFjdHMgcmlnaHQgbm93LgpJdCBwcmVkYXRvcnkuLiAKVHJhbnNjcmlwdCBvZiBXaW5kb3dzIDcgVWx0aW1hdGUgICAzMiBCaXQgKEF1dG8gQWN0aXZhdGlvbikgICBDcmFja2VkIERvd25sb2FkIEZyZWUuIENsaWNrIHRvIGRvd25sb2FkLiAKQWNjb3JkaW5nIHRvIHRoZWlyIGxhbmRpbmcgcGFnZSwgdGhlIG1vbmV5IGlzIGF3ZXNvbWUuIFdoaWxlIHRoaXMgaXMgdGhlIGJlc3QgYmVuZWZpdCBvZiBsZWFybmluZyB0aGUgRGVhbCBQb2tlciBMaWtlIEEgUHJvIHN5c3RlbSwgeW91IGhhdmUgdG8gdGhpbmsgYWJvdXQgdGhlIG90aGVycyBhcyB3ZWxsLiAKSSB3b3VsZG4gYmUgbmVhcmx5IHNrZXB0aWNhbCBpZiB5b3UgZGlkbiBzYXkgeW91ICJjcnVzaGVkIiBmb3IgRk9VUiBZRUFSUywgdGhhdCBtYWtlcyBhYnNvbHV0ZWx5IG5vIHNlbnNlLiBZb3VyIDJuZCBwb3N0IG1hZGUgaXQgYWN0dWFsbHkgcHJldHR5IGltcG9zc2libGUuIFRoZXJlIG5vIHN0YWtlIG92ZXIgMS8yIHRoYXQgeW91IGNvdWxkICJjcnVzaCIgZm9yIDQgeWVhcnMgYnV0IGp1c3Qgbm93IGhhdmUgeW91ciBmaXJzdCA2IGZpZ3VyZSByZXN1bHRzLiAKVGhlIEEzODAgSnVtYm8gdHlwaWNhbGx5IGNvc3RzIGFyb3VuZCAkNDE0bSBwZXIgdW5pdC4gSXQgcmlzZXMgdG8gODBmdCBpbiBoZWlnaHQsIGhhcyBhIDIxLjVmdCBjYWJpbiB3aWR0aCBvbiB0aGUgbWFpbiBkZWNrIGFuZCAxOWZ0IG9uIHRoZSB1cHBlciBkZWNrLCBhbmQgaGFzIGEgd2hvcHBpbmcgMjYxZnQgd2luZ3NwYW4uIApBcyB0aGUgd29yayBwZXJtaXQgcnVucyBhIGJpZyBzdGFydCB1cCBwcmljZSBhbG9uZyB3aXRoIHRoZSBhbm51YWwgcmVuZXdhbHMuIEJ1dCB3b3J0aCBpdCBmb3IgdGhlIHBlYWNlIG9mIG1pbmQuLiAKQWZ0ZXIgcmVhZGluZyBhbmQgZ29vZ2xpbmcgdGhlIG5hbWVzIGhlIHJlYWxpemVkIGl0IHdhcyBmb3IgdGhlIG1vdmllIFByaWRlIGFuZCBQcmVqdWRpY2UgYW5kIFpvbWJpZXMuIApGb3IgYW55b25lIG5vdCBmYW1pbGlhciB3aXRoIHRoaXMgdHlwZSBvZiBhY2NvdW50cyAoYW5kIGhvdyB0aGV5IGh1cnQgcmVkZGl0KSwgdGhpcyBwYWdlIG1heSBoZWxwIHRvIGV4cGxhaW4uIC9yL3RoZXNlZnVja2luZ2FjY291bnRzIGFsc28gaXMgYSBnb29kIHJlc291cmNlIHRvIGxlYXJuIG1vcmUgYWJvdXQgdGhlbS4KS0VZIERFUEFSVFVSRVM6IFNlYmFzdGlhbiBHaW92aW5jbyAoU2F1ZGkgQXJhYmlhJ3MgQWwgSGlsYWwgRkMpLCBWaWN0b3IgVmF6cXVleiAoUWF0YXIncyBBbCBBcmFiaSBTQykuIFRoZSB0d28gY29tYmluZWQgZm9yIDQ1IGdvYWxzIGFuZCA0NiBhc3Npc3RzIHRoZSBsYXN0IHR3byBzZWFzb25zLgpJdCBkZWZpbml0ZWx5IGlzLiBUaGUgdHJhZGluZyBlY29ub215IGlzbiBzZWFtbGVzbHkgaW50ZWdyYXRlZCBpbnRvIHRoZSByZXN0IG9mIHRoZSBnYW1lIGFzIGEgc3lzdGVtLiBJZiBpdCB3YXMgbGlrZSB0aGUgU3RlYW0gbWFya2V0IGkgY29uc2lkZXIgaXQsIGJ1dCBpdCBub3QsIGl0IHJlcXVpcmVzIHBsZW50eSBvZiBwbGF5ZXIgaW50ZXJhY3Rpb24uIApCYWVsIG1heSBiZSBhcGFydCBvZiB0aGVpciBwb2xpdGljYWwgYmVsaWVmcyBidXQgdGhlaXIgbGFjayBvZiBhIHRydWUgZmFpdGggaXMgd2hhdCBhbGxvd3MgdGhlbSB0byBsb29rIGZvciBhIHdheSBvdXRzaWRlIG9mIHRoYXQuIE1jR2lsbGlzIGRvZXNuIHByZWRpY3QgdGhpcyBiZWNhdXNlIGp1c3QgbGlrZSBob3cgT3JnYSBpcyBibGluZGVkIGJ5IGhpcyBwcm9taXNlIHRvIE1pa2EsIGhlIGlzIGJsaW5kZWQgYnkgaGlzIG93biBiZWxpZWYgaW4gdGhlIG9mIEJhZWwgcG93ZXIuQnJpbmdpbmcgdXMgYmFjayB0byBteSBsaW5rZWQgaW1hZ2UsIHRoZXJlIG5vIHBvaW50IGJlaW5nIG9uIHRoZSB0aHJvbmUgaWYgeW91IGhhdmUgbm90aGluZyB0byBydWxlIG92ZXIgYXMgc2hvd24gYnkgaG93IGVtcHR5IHRoaXMgcm9vbSBpcyBub3cgZGVzcGl0ZSBmaW5hbGx5IGhhdmluZyBzb21lb25lIGF0IGl0cyBoZWFkLk1lZ2EgRHVuZSBzcG9pbGVycyBqdXN0IGJlY2F1c2UgSSBoYWQgYSB0aG91Z2h0R29pbmcgYmFjayB0byBteSBsaW5rZWQgcG9zdCBmcm9tIGEgY291cGxlIG9mIGVwaXNvZGVzLCB0aGUgZG93bmZhbGwgb2YgT3JnYSBoYXMgbW9zdGx5IGJlZW4gcHJvbXB0ZWQgYnkgdGhlIGdyb3dpbmcgYWJzZW5jZSBvZiB0aG9zZSBhcm91bmQgaGltLiAKIkhvd2V2ZXIsIEZCSSBhZ2VudHMgYW5kIGJlaGF2aW9yYWwgc3BlY2lhbGlzdHMgYmVsaWV2ZSBQYWRkb2NrIHdhcyBpbiBwYXJ0IGluZmx1ZW5jZWQgYnkgdGhlIG1lbW9yeSBvZiBoaXMgZmF0aGVyLCBhIGJhbmsgcm9iYmVyIGFuZCBmdWdpdGl2ZSB3aG8gYXQgb25lIHBvaW50IHdhcyBvbiB0aGUgRkJJJ3MgbW9zdCB3YW50ZWQgbGlzdC4gCkhvdyB3ZXJlIHRoZSBzdHVkaWVzIGNvbWJpbmVkP0RhdGEgZnJvbSBSQ1RzIHRoYXQgZXZhbHVhdGVkIHNpbWlsYXIgaW50ZXJ2ZW50aW9ucyB3ZXJlIGNvbWJpbmVkIHRvIGRldGVybWluZSBhIHdlaWdodGVkIGVzdGltYXRlIG9mIHJpc2sgZGlmZmVyZW5jZS4gCkNsdWIgc3RhbHdhcnQgbG9va3Mgb24gYnJpZ2h0IHNpZGUgTXIgQmFsbCBzYWlkIHRoZSBzbW9raW5nIGJhbnMgYW5kIGdhbWluZyB0YXggd2VyZSAiYSBkb3VibGUgYmxvdyIgdGhhdCBzcGFya2VkIHRoZSBiZWdpbm5pbmcgb2YgdGhlIGVuZCBmb3IgbWFueSBjbHVicywgcGFydGljdWxhcmx5IGZvciBzbWFsbGVyIG9uZXMgdGhhdCBkaWRuIGhhdmUgdGhlIGZpbmFuY2lhbCBjYXBhY2l0eSB0byBtYWtlIGNoYW5nZXMsIHN1Y2ggYXMgYWRkaW5nIG91dGRvb3IgZ2FtaW5nIGFyZWFzLiAiVGhlIGNsdWJzIGRpZCByZXNwb25kIHRvIHRoZSBwb2xpY3kgc2hvY2tzIGFuZCBpdCBkZXBlbmRlZCBvbiB0aGVpciBmaW5hbmNpYWwgY2FwYWNpdHkgb24gaG93IHRoZXkgY291bGQgcmVzcG9uZCwiIGhlIHNhaWQuIApUaGVyZSBhcmUgc28gbWFueSBpbXBvcnRhbnQgY2hvaWNlcyBvcGVuIHRvIHlvdSB0aGF0IHRoZSBtb3JlIHlvdSByZXNlYXJjaCwgdGhlIG1vcmUgbGlrZWx5IHlvdSBhcmUgZ29pbmcgdG8gYmUgdG8gZmluZCB0aGUgcmlnaHQgY2FzZSBhbmQgdGhlIHJpZ2h0IHBva2VyIHNldCBmb3IgeW91LiBSZW1lbWJlciB0aGF0IHRoZSBzaXplIG9mIHlvdXIgZ2FtZSBhbmQgdGhlIGtpbmQgb2ggZ2FtZSB0aGF0IHlvdSBwbGF5IGlzIGFsbCBnb2luZyB0byBjb250cmlidXRlIHRvIHRoZSBjaGlwIHNldCB0aGF0IHlvdSBidXkuIApUaGUgZWFybHkgc2V0dGxlcnMgbHVzdCBmb3IgZ29sZCB3YXMgc29vb29vIHN0cm9uZyB0aGF0IHRoZXkgZGlkbid0IGV2ZW4gdmlldyB0aGUgbmF0aXZlIEFtZXJpY2FucyBhcyBwZW9wbGUuIFRoZSBuYXRpdmUgQW1lcmljYW5zIHdlcmUgZXZlbiBkdW1iZm91bmRlZCBieSBvdXIgbHVzdCBmb3IgZ29sZC4gQW5kIHRoZSBzbGF2ZSB0cmFkZSBkaWRuJ3Qgc3RhcnQgd2l0aCB0aGUgYmxhY2tzLiBXZSB3ZXJlIHNoaXBwaW5nIE5hdGl2ZSBBbWVyaWNhbnMgdG8gRXVyb3BlIG1hbnkgeWVhcnMgYmVmb3JlLgpEZWFsIGhhcyBiZWVuIGh1Z2VseSBiZW5lZmljaWFsIGZvciBib3RoIGNvbXBhbmllcy4gWnluZ2EgaXMgYWJvdXQgdG8gZ28gcHVibGljIGF0IGEgdmFsdWF0aW9uIHRoYXQgd291bGQgaGF2ZSBzZWVtZWQgaW5zYW5lIHR3byB5ZWFycyBhZ28sIGJhc2VkIG9uIHJldmVudWVzIGFuZCBwcm9maXRzIHRoYXQgaGF2ZSBzaW1pbGFybHkgZXhwbG9kZWQuIApUaGFua3MuIEZyb20gd2hhdCBJIGdhdGhlciwgaXQgYWxsIHdvcmQgb2YgbW91dGggYW5kIHN0dWZmLiBMaWZlY29hY2ggaXMgY2xlYXJseSBzb21lIGxldmVsIG9mIGdvb2QgYXQgY2FyZCBnYW1lcyBhbmQgc29tZSBsZXZlbCBvZiByaWNoLiAKRHJlaSBHcm9zY2hlbiBQb2tlcgpCeSB0aGVuIHRoZSBjcm93ZCB3YXMgY2hlZXJpbmcgIktub2NrIGhpbSBvdXQhIEtub2NrIGhpbSBvdXQhIiBidXQgUGFjcXVpYW8gICBib3RoZXJlZCBieSBhIGNyYW1wIGluIGhpcyBsZWZ0IGxlZyBzaW5jZSB0aGUgZm91cnRoIHJvdW5kICAgZGlkbid0IGhhdmUgZW5vdWdoIHRvIGZpbmlzaCBoaW0gb2ZmLi4gClJlY29tbWVuZHMgY3JlYXRpbmcgYW4gYXJyYW5nZW1lbnQgb2YgZHJ5ICBvciBzYWx0IGN1cmVkIG1lYXRzIHN1Y2ggYXMgcHJvc2NpdXR0bywgamFtb24sIGJyZXNhb2xhIGFuZCB0aGUgbGlrZSwgb24gYSBib2FyZCBvciBwbGF0dGVyLiAKSWYgdGhlIFdTT1AgcmVnaXN0cmF0aW9uIGRlc2sgaXMgY2xvc2VkLCB0aGUgUmlvIE1haW4gQ2FnZSBpbiB0aGUgQ2FzaW5vIHdpbGwgYWx3YXlzIGFjY2VwdCByZWdpc3RyYXRpb24gZm9yIFdTT1AgZXZlbnRzLiBQbGF5ZXJzIGxvb2tpbmcgdG8gcGxheSBjYXNoIGdhbWVzLCBzYXRlbGxpdGVzIG9yIGRhaWx5IG5vbiBicmFjZWxldCBldmVudHMgbWF5IHN0aWxsIGJ1eSBpbiBhdCB0aGUgUmlvIENvbnZlbnRpb24gQ2VudGVyIHJlZ2lzdHJhdGlvbiBkZXNrLiAKIk5vYm9keSByZW1lbWJlcnMgaXQsIEkgZ3Vlc3MuIEFuZCBJIG5ldmVyIGJyb3VnaHQgaXQgdXAsIHdlbGwsIiBzaGUgc2FpZCwgcnViYmluZyBoZXIgYXJtLCAiYmVjYXVzZSBpdCBhIGJpdCBlbWJhcmFzc2luZy4gClRoZSBib25lLCBwb2ludGluZyBkb3duLCB3b3VsZG4gSSBndWVzcyByZWFsbHkgYmUgcmVwcmVzZW50YXRpdmUgb2YgYSBjb2NjeXgsIGJ1dCBtaWdodCBpbnN0ZWFkIGJlIHJ1bm5pbmcgZG93biB0byB0aGUgYW5hbCBmaW4/IEkgZGlkIGEgYmFkIGpvYiBvZiBleHBsYWluaW5nIHdoYXQgSSB0aG91Z2h0IEkgc2F3LiBTb3JyeS4uIApNdWNoIG1vcmUgZWZmZWN0aXZlIGNvb2xlciBmb3IgeW91ciA3NzAwSyAoYXNzdW1pbmcgeW91IHdpbGwgYmUgb3ZlcmNsb2NraW5nIGl0KS4KVGhlIGd1eSB3YWxraW5nIGhpcyBkb2csIHRoZSB3b21hbiB0YWtpbmcgYSBzbW9rZSBicmVhaywgcGVvcGxlIGRyaXZpbmcgYnksIEkgc3dvcmUgZXZlcnlvbmUga25ldyB3aGF0IEkgd2FzIHRoZXJlIGZvci4gSSBmaW5hbGx5IG1hZGUgaXQgdG8gdGhlIGFwYXJ0bWVudCBhbmQgdGhlIGRvb3Igb3BlbmVkLiAKVGhlIFN0b3JtIHdlbnQgb24gdG8gcGxheSBMZXRoYnJpZGdlIERhdmlzIFBvbnRhaWMgQ2hhb3Mgd2hvIHN0b2xlIHRoZSB3aW4gOSA0LiAKVW4gbW9tZW50LCBvbiBtIGRpdCBwYXIgcmFkaW8gb24gdGhlIGxlYWQgbGFwIExvcnMgZGUgbGEgZGVybmkgbmV1dHJhbGlzYXRpb24sIGogbGEgZGV1eGkgcGxhY2UuIApDb250ZXh0OiBJIHdhcyBicmlkZGluZyBpbiB0aGUgZGVlcCB3aWxkIHdoZW4gSSBzdHVtYmxlZCB1cG9uIHRoaXMgdW5pdC4gSGUgd2FzIGxldmVsIDg1IGFuZCBoYWQgYSAxMjAgbWFpbiBwcm90ZWN0aW5nIGhpbSBzbyBJIGtuZXcgdGhlcmUgd2FzIHBvdGVudGlhbCBmb3IgYmFuayBsb290LiBBdCB0aGF0IHBvaW50IEkgYmFycmFnZWQgaGltIGFuZCB0aGUgbWFpbiBzYXlzICI1bSBmb3Igb2ZmLiIgVW5mb3J0dW5hdGVseSBmb3IgaGltIEkgbGV2ZWwgNzMgc28gaGUgY291bGRuIGdldCBhIFBKLiAKIkknbSBwZXJzb25hbGx5IG5vdCBhIGZhbiBvZiBwdWxsaW5nIG91dCBzaGVldCBtYXNrcyBhbmQgd2lwZXMgYW5kIHNwcmF5cyAgIEkgZG9uJ3QgbWVzcyB3aXRoIGFueSBvZiB0aGF0LCIgc2F5cyBSb3VsZWF1LCB3aG8ncyBhbHNvIHRoZSBmb3VuZGVyIG9mIGhlciBlcG9ueW1vdXMgc2tpbiBjYXJlIGxpbmUuIFdoaWxlIGNlbGVicyBpbmNsdWRpbmcgQ2hyaXNzeSBUZWlnZW4sIEhhaWxleSBCYWxkd2luIGFuZCBCdXN5IFBoaWxpcHBzIHN3ZWFyIGJ5IHRoZSBtaWxlIGhpZ2ggS29yZWFuIGJlYXV0eSBzdGFwbGVzIHRvIGtlZXAgc2tpbiBzdXBwbGUsIFJvdWxlYXUgYWR2aXNlcyBoZXIgZmFtb3VzIGNsaWVudHMsIHdoaWNoIGluY2x1ZGUgIlJpdmVyZGFsZSIgc3RhciBMaWxpIFJlaW5oYXJ0IGFuZCBTb2ZhIFZlcmdhcmEsIGFnYWluc3QgZG9pbmcgdHJlYXRtZW50cyBpbiB0aGUgYWlyLiBBZnRlciBhbGwsIHNoZSBwb2ludHMgb3V0LCBwbGFuZXMgYXJlbid0IGV4YWN0bHkgc3RlcmlsZTogIlRoZSB3YXRlciBpbiB0aGUgc2luayBvbiB0aGUgcGxhbmUgaXMgZGlzZ3VzdGluZywiIGFuZCBhcHBseWluZyBwcm9kdWN0cyB3aXRoIGdlcm0gY29hdGVkIGZpbmdlcnMgaXMgbGVzcyB0aGFuIGlkZWFsLiBMb3JldHRhIENpcmFsZG8gYWdyZWVzIHRoYXQgbG90aW9ucyBhcmVuJ3QgdGhlIGJlc3QgaW4gZmxpZ2h0IHNraW4gc2F2aW9yLiBJbnN0ZWFkLCBzaGUnZCBsaWtlIHRvIHNlZSBwZW9wbGUgY292ZXJpbmcgdXAgbW9yZSB0aG9yb3VnaGx5IHRvIGF2b2lkIGluIGZsaWdodCBkZWh5ZHJhdGlvbi4gIkkgcmVjZW50bHkgZmxldyBmcm9tIE1hc3NhY2h1c2V0dHMgdG8gTWlhbWksIGFuZCBoYWxmIHRoZSBwZW9wbGUgd2VyZSBpbiBzaG9ydHMsIiBzaGUgc2F5cy4gIkkgdGhpbmsgdGhhdCdzIGEgbWlzdGFrZS4iIFRoZSBzdWIgMjAgcGVyY2VudCBodW1pZGl0eSBkb2Vzbid0IGRpc2NyaW1pbmF0ZSwgc2hlIGV4cGxhaW5zICAgaXQnbGwgaG9vdmVyIG1vaXN0dXJlIGZyb20gdGhlIGZhY2UsIGxlZ3MsIGZlZXQsIGhhbmRzIGFuZCBhbnl3aGVyZSBlbHNlIGxlZnQgZXhwb3NlZC4gVG8gd2FyZCBvZmYgZnVsbCBib2R5IGRyeW5lc3MsIHNoZSByZWNvbW1lbmRzIHdlYXJpbmcgbG9uZyBzbGVldmVzLCBwYW50cyBhbmQgY2xvc2VkIHRvZWQgc2hvZXMgaW4gZmxpZ2h0LiAiV2UndmUgZ290IHRvIGJlIGEgbGl0dGxlIGxlc3MgZmFjZSBvYnNlc3NlZCBhbmQgdGhpbmsgb2YgaXQgYXMgYSB3aG9sZSBwaWN0dXJlLCIgc2hlIHNheXMuCkRpdmluZyBoYXMgc2F2ZWQgSXRhbHkgZnJvbSB0d28gY291bnRyaWVzIHdob3NlIGNvbWJpbmVkIHBvcHVsYXRpb24gaXMgaGFsZiBvZiB0aGVpcnMgYW5kIGZvciB3aGljaCBmb290YmFsbCByYW5rcyBhcyByb3VnaGx5IHRoZSA1dGggb3Igd29yc3QgbW9zdCBwb3B1bGFyIHNwb3J0LiAxIHBvaW50ICBzdWJtaXR0ZWQgMSBtb250aCBhZ29UaGVyZSB3YXMgYSBtaW51c2N1bGUgYW1vdW50IG9mIHNoaXJ0IHB1bGxpbmcgdGhlcmUsIG5vIG1vcmUgdGhhbiB3aGF0IHRoZSBJdGFsaWFuIHBsYXllcnMgZGlkIHRoZW1zZWx2ZXMgaW4gdGhpcyBnYW1lIGFuZCBvdGhlcnMuIAoiT0ssIGplZXosIEknbGwgZG8gaXQuIEp1c3Qgc3RvcCB0cnlpbmcgdG8gbGljayBteSBleWViYWxscy4iCiJOb3RoaW5nIGdvb2QgY29tZXMgb2YgdGhpbmtpbmcgbGlrZSB0aGF0LiBXZSBuZXZlciBnb3QgZ29vZCBmb290YWdlIGZyb20gdGhhdCwgYnV0IGZyb20gd2hhdCB0aGUgY2FtZXJhIG9uIHRoZSBvcmJpdGVyIHNhdywgdGhvc2Ugc2hpZWxkcyBidXJudCB1cCBpbW1lZGlhdGVseSwiIFdpbCBzYWlkLiAiTm93IHdlIGdvdCBiYWNrdXBzLCBhbmQgYmFja3VwcyBvZiBiYWNrdXBzLCBhbmQgbm90IHNheWluZyB3ZSBjYW4gc2xhY2sgb2ZmLCBidXQgdGhhdCB3b24gaGFwcGVuIHRvIHVzLiAKV2hhdCBwcm9iYWJsZSBjYXVzZSBkbyB0aGUgb2ZmaWNlcnMgaGF2ZT8gQSBwaG9uZSBjYWxsZWQgcmVwb3J0PyBFdmlkZW5jZT8gV2FycmFudD8gIk9hdGggb3IgQWZmaXJtYXRpb24/IiBQcml2YXRlIHByb3BlcnR5IG1lYW5zIHByaXZhdGUgcnVsZXNldC4gCkkgd2FzIGFibGUgdG8gZ2V0IEFBIGFsbGluIHByZSBmbG9wIHZzLiAKU29pbCB3aGljaCBjb250YWlucyBhIGhpZ2ggY29uY2VudHJhdGlvbiBvZiBtaW5lcmFscyBjYW4gY2F1c2UgaW50ZXJmZXJlbmNlIGFuZCB3aWxsIHJlZHVjZSBkZXB0aCBwZW5ldHJhdGlvbi4uIApJIG1lYW4sIHdlIGNhbiB0cmFkZSBvZmYgdGVybXMsIGJ1dCB3ZSByZWFsbHkganVzdCBzYXlpbmcgdGhlIHNhbWUgdGhpbmcuIFNvbWVvbmUgdGFrZXMgb24gYSByaXNrIChpbiB0aGlzIGNhc2UgZGFuZ2VyIHRvIHRoZWlyIGhlYWx0aCkgaW4gdGhlIGNoYW5jZSB0aGF0IHRoZXkgZ2V0IHRoZSByaXNrIHByZW1pdW0gKGhpZ2hlciB0aGFuIGF2ZXJhZ2UgaW5jb21lKS4gTm8gb25lIGlzIGZvcmNpbmcgdGhlbSBpbnRvIHRoaXMgcG9zaXRpb24sIGJ1dCB5b3Ugc2FpZCB0aGF0IGlmIHRoZXJlIGlzbiBhIHByZW1pdW0gdGhlbiB0aGV5IGRvbiB0YWtlIG9uIHRoZSByaXNrLiAKRGVtb2NyYXRzIGFsc28gaGF2ZSBub3QgY2xvc2VkIGluIG9uIGhvdyBtdWNoIGFkZGl0aW9uYWwgcmV2ZW51ZSB0aGV5IHdhbnQgdG8gZ2VuZXJhdGUuIAo1JzkgZmVtYWxlIGhlcmUsIEkgbGlrZSB0YWxsIG1lbiwgaG93ZXZlciBJJ3ZlIG9ubHkgZXZlciBoYWQgbG9uZyByZWxhdGlvbnNoaXBzIHdpdGggc2hvcnQgbWVuLiAKVGhlIGZpdmUgcm91bmQgZmlnaHQgc3RhcnRlZCBhdCAxMjozOCBFVC4KS3VtcHVsYW4gQnJvYWRjYXN0IEJCTSBkYW4gQXV0b3RleHQgSW5kb25lc2lhIFRlcmJhcnUgMjAxMSBDZXJpdGEgS2lzYWggQXJ0aWtlbCBUZWJhayB0ZWJha2FuIEJsYWNrQmVycnkgTWVzc2VuZ2VyIEx1Y3UgVW5payBNZW5hcmlrIEluc3BpcmFzaSBDaW50YSBJbmZvIEtlc2VoYXRhbgpZb3UgaGF2ZSB0byBoYXZlIHRoZSBwb2tlbW9uIGJlZm9yZSB5b3UgYXJlIGFibGUgdG8gdHJhaW4gY2F0Y2hpbmcgaXQuIEFuZCB5b3UgY291bGQgZXZlbiBoYXZlIGxldmVscyBvZiBkaWZmaWN1bHR5IGxpa2UgdGhlIGJhdHRsZSBsZWFndWVzLiBIaWdoZXN0IGxldmVsIGFuZCB0aGUgbW9uIGlzIGp1c3QgZmxpcHBpbmcgb3V0IGp1bXBpbmcgYW5kIGF0dGFja2luZyBhIGxvdC4gCkV2ZW4gcGF5aW5nIG15IHBhcmVudHMgcmVudCwgSSBzdGlsbCBzYXZpbmcgJDEwMDArIG1vcmUgYSBtb250aCB0aGFuIEkgd291bGQgaWYgSSByZW50ZWQgYW4gYXBhcnRtZW50LiAKTWFzc2FnaW5nIGFsc28gc2VlbXMgdG8gZmFjaWxpdGF0ZSB0aGUgc3BlZWR5IGhlYWxpbmcgb2YgYnJ1aXNlcy4gCkFuZCBuYXR1cmFsIHZhcmlhdGlvbiB3aWxsIHN3YW1wIHdoYXRldmVyIGNvbnRyaWJ1dGlvbiBDbzIgZG9lcyBoYXZlLiBJIHRoaW5rIENvMiB3aWxsIGluZXZpdGFibHkgZm9sbG93IGEgcHVyZWx5IHBoeXNpY2FsIFN0ZXBoZW4gQm9sdHptYW5uIGRlcml2ZWQgYW1vdW50LCB3aGljaCBzaG91bGQgYmUgYWJvdXQgKyAxLjFDIGZvciB0aGlzIGZpcnN0IGRvdWJsaW5nLiAKQW1vbmcgaGlzIG1hbnkgb3RoZXIgaGlqaW5rcywgbGF0ZXIgaW4gbGlmZSBDaHJpc3RvcGhlciBDb2x1bWJ1cyBzZXQgdXAgYSBsdWNyYXRpdmUgc2V4IHNsYXZlIGJ1c2luZXNzIGZyb20gdGhlIE5ldyBXb3JsZC4gSGUgd3JvdGUgaW4gYSBsZXR0ZXIgdG8gYSBmcmllbmQgdGhhdCBuaW5lIHllYXIgb2xkIGdpcmxzIHdlcmUgYSBwYXJ0aWN1bGFybHkgaG90IGl0ZW0gd2l0aCB0aGUgZ29vZCBDaHJpc3RpYW4gbm9ibGVzIG9mIEV1cm9wZS4gCldlIGFjdHVhbGx5IGZpZ3VyZWQgb3V0IG1pbmUgZnJvbSAyM2FuZE1lLCBhbmQgbWUgcnVubmluZyB0aGUgcmF3IGRhdGEgdGhyb3VnaCBQcm9tZXRoZWFzZS4gCkxldHMgcGxheSBzb21lIHBva2VyISBUaGlzIGlzIG9mdGVuIGhlYXJkIGluIGEgTG9uZG9uIHBlbnNpb25lcnMgcmVzaWRlbnRpYWwgaG9tZSAgIHRoZSBtb3N0IHVubGlrZWx5IG9mIGFsbCBwbGFjZXMuIE1vcmUgYW5kIG1vcmUgcGVvcGxlIGFyZSB0dXJuaW5nIHRvIHBva2VyIHRoZXNlIGRheXMuIApJbiBWYW5jb3V2ZXIsIGF0IGxlYXN0LCB0aGlzIG5ldyBnZW5lcmF0aW9uIG9mIGNhc2lubyByZXNvcnQgaXMgbGlnaHQsIGJyaWdodCBhbmQgb2ZmZXJzIGJlYXV0aWZ1bCB2aWV3cyBvZiBWYW5jb3V2ZXIuIApUaGUgcGlsbCBpcywgb2YgY291cnNlLCBnaXZlbiBieSBtb3V0aC4gVGhlIHRyYW5zIGRlcm1hbCBnZWwgdHlwaWNhbGx5IGNvbWVzIGluIGEgc3BlY2lhbCBwZW4gdGhhdCBzcXVlZXplcyBvdXQgYSBzcGVjaWZpYyBhbW91bnQgb2YgbWVkaWNhdGlvbiBvbnRvIGFuIGFwcGxpY2F0b3IuIApUaGUgaGlnaGVzdCByYXRlcyB3aWxsIHRoZXJlZm9yZSBiZSBvYnRhaW5hYmxlIGZyb20gYSByZWFjdGlvbiBiZXR3ZWVuIHR3byBoeWRyb2dlbiBudWNsZWksIGJlY2F1c2UgaHlkcm9nZW4gaGFzIHRoZSBzbWFsbGVzdCBwb3NzaWJsZSBjaGFyZ2Ugb25lIHVuaXQuIApJIGJlbGlldmUgdGhhdCBpbiB0aGUgbmV4dCBmZXcgeWVhcnMgdGhlcmUgYXJlIGdvaW5nIHRvIGJlIGRvY3VtZW50YXJpZXMgYWJvdXQgdGhlIFJFQUwgYW5kIHByZXNlbnQgZGFuZ2VyIG9mIG1vbGQgZXhwb3N1cmUuIEkgcmVhbGx5IGhvcGUgdGhlcmUgaXMuIApKLiAKSSByZWNvbW1lbmQgU3R1ZGlvIFNhbG9uLCB0aGUgZGlyZWN0b3IgaXMgYSBCcml0IGFuZCBoYXMgdHJhaW5lZCB1cCBoaXMgc3RhZmYgdmVyeSB3ZWxsLiBNZW5zIGhhaXIgY3V0IGZyb20gYSBzdHlsaXN0IChub3QgZGlyZWN0b3IpIGlzIGFib3V0IDE1MFJNQmlzaC4KVGhlIHBvaW50IG9mIGVtb2ppcyBpcyB0byBzaG93IGVtb3Rpb25zLCBidXQgd2hhdCBlbW90aW9uIGRvZXMgdGhpcyBzaG93PyBEbyB5b3UganVzdCB3YWtlIHVwIGluIHRoZSBtb3JuaW5nIGFuZCB0aGluayAid293LCBJIHJlYWxseSBmZWVsIGxpa2UgYSBtYXNzaXZlIGZ1Y2tpbmcgc3RvbmUgdG9kYXkiPyBJdCB1c2VsZXNzLiAKSG9tZXRvd24gQ2FyZWVycyBjb21taXQgIHRlZSBtZW1iZXJzIHdpbGwgYmUgYXZhaWxhYmxlIGluIHRoZSBtYWluIGxvYmJ5IHRocm91Z2hvdXQgdGhlIGRheSB0byBhc3Npc3Qgc3R1ZGVudHMuIElubm9jZW50LCBzYXlzIFNtaXRoIGluIHNsYXlpbmcgVkVSTUlMSU9OIFBhdWwgU21pdGgsIG9wZW4gdG8gc3R1ZGVudHMgZ3JhZHVhdGluZyBJbiAzMywgb2YgUE9PIEFkYW1zIFN0LiwgcGxlYWRlZCAxOTY4IGZyb20gZWl0aGVyIHR3byBvciBmb3VyIHllYXIgaW5zdGl0dXRpb25zLiBUaGlzIHdpbGwgYXMgIGlubm9jZW50IGxhc3QgbmlnaHQgaW4gbXVuaWNpICBwYWwgY291cnQgdG8gYSBjaGFyZ2Ugb2YgZmlyc3QgIHN1cmUgdGhlIHJlY3J1aXRlciBvZiBpbW1lZGkgciBkZWdyZWUgbWFuc2xhdWdodGVyIGluIGNvbiAgYXRjbHkgZW1wbG95YWJsZSBwZXJzb25uZWwsIG5lY3Rpb24gd2l0aCB0aGUgQ2hyaXN0bWFzIGhpcyBicm90aGVyLiAKSW4gdGhpcyBoaWdoIHN0YWtlcyB3b3JsZCBvZiBwb2tlci4gV2hvIHdhcyB0eXBpY2FsbHkgc2l0dGluZyBhdCB5b3VyIHRhYmxlPyBUaGVyZSB3YXMgdmVyeSByZWNvZ25pemFibGUgZmFjZXMsIHN1Y2ggYXMgVG9ueSBNYWd1aXJlLCBMZW8gRGljYXByaW8sIEJlbiBBZmZsZWNrLiAKQ2FwdGFpbiBNYXJ2ZWwsIGNvbWluZyBvbmx5IGEgeWVhciBhZnRlciB0aGUgZmFudGFzdGljIEJsYWNrIFBhbnRoZXIsIGlzIGEgZGlzYXBwb2ludG1lbnQuIApZb3UndmUganVzdCBjaXRlZCBhbm90aGVyIHRoaW5nIHRoYXQgaGFzIGJlY29tZSBtb3JlIG15dGggdGhhbiBmYWN0OiBXaGVuIHRob3NlIGVkaXRzIHRoYXQgeW91IG1lbnRpb25lZCB3ZXJlIG1hZGUsIHRoZXkgd2VyZSBkb25lIHdpdGggdGhlIGludGVudGlvbiBvZiBiZWluZyB2ZXJ5IG9idmlvdXMuIEFuZCBvbmx5IG9uIGNvbW1lbnRzIHNwdXJpb3VzbHkgYWNjdXNpbmcgU3RldmUgb2YgYmVpbmcgYSBjaGlsZCBtb2xlc3Rlci4gVGhlIHN0YXRlZCBpbnRlbnRpb24gd2FzIHRvIGhpZ2hsaWdodCB0aGUgaW5oZXJlbnQgYWJzdXJkaXR5IG9mIHRoZSBhdHRhY2tzLCBhbmQgYWxzbyB0byBvcGVuIGEgZGlhbG9ndWUuIApUaGlzIGlzbiBzbGlwcGVyeSBzbG9wZTsgaXQgaXMgYSBjb3JlIGh1bWFuIHJpZ2h0IG9mIGZyZWVkb20gdGhhdCBJIG5vdCBiZSBjb21wZWxsZWQgdG8gc3BlYWsgYWdhaW5zdCBteSB3aWxsIHVuZGVyIHRoZSB0aHJlYXQgb2YgaW1wcmlzb25tZW50LiBJIGRvbiBrbm93IGhvdyB5b3Ugc2ltcGx5IGRvbiB1bmRlcnN0YW5kIHRoYXQuCkNyYWlnc2xpc3Qgbm93IGhhcyB5b3VyIG51bWJlcgpBaW5zaSwgYXlhbnQgcGFydGljaXAgIHVuIHV0aWxlIGNoYWxsZW5nZSB2aWRlIHBsYWNhcmRzIHByb3BvcyBwYXIgQ2xvdGlsZGUgRHVzb3VsaWVyLCBqJ2FpIGZhaXQgcmNlbW1lbnQgbGUgcG9pbnQgZGUgY2UgcXVpIGZpZ3VyYWl0IGRhbnMgbGVzIG1pZW5zIDogcmllbiBkZSB0cnMgZXhjZXNzaWYsIGludXRpbGUgb3UgcHJpbSBtYWlzIHF1YW5kIG1tZSBkZXMgZmFyaW5lcyAgbmUgcGFzIHRyb3AgZmFpcmUgdGFyZGVyLiAKSWYgeW91J3ZlIGdvdHRlbiB0aHJvdWdoIGFsbCB0aG9zZSBob29wcyBva2F5LCBpZiB5b3UgcGxheSB0aGUgaW5zdHJ1bWVudCBhbHJlYWR5IGFuZCBhcmUgYnV5aW5nIGEgbmV3IG9uZSwgeW91IHNob3VsZCBwcm9iYWJseSBwbGF5IGl0IHRvIHNlZSBpZiBpdCBmZWVscyBjb21mb3J0YWJsZSB0byB5b3UgYW5kIGlmIHlvdSBsaWtlIHRoZSB3YXkgaXQgc291bmRzLiAKU28sIGZvciBleGFtcGxlLCBpZiB5b3UncmUgcGxheWluZyBpbiBhICckMS8yIGxpbWl0JyBnYW1lLCB0aGUgbWluaW11bSBzaXplcyBvZiB0aGUgYmV0cyB3b3VsZCBiZTogLi4gCkFuZCB0aGUgc2hvcnQgdGVybSBsYWNrIG9mIHN1Y2ggaGFuZHMgYWx0ZXJzIHRoZSByZXR1cm4geW91IGNhbiBleHBlY3Qgd2hlbiB5b3UgcGxheSwgc2F5LCAxMDAwIGhhbmRzIG9mIHZpZGVvIHBva2VyLCB3aGljaCBpcyB0d28gb3IgdGhyZWUgaG91cnMgb2YgZ2FtaW5nLiBJIGRvbid0IHdhbnQgdG8gZ2V0IHRvbyBpbnZvbHZlZCB3aXRoIG1hdGhlbWF0aWNzIGhlcmUsIGJ1dCB0aGUgUm95YWwgRmx1c2ggYW5kIFN0cmFpZ2h0IEZsdXNoIGFkZCBhIHRvdGFsIG9mIDIuNTMlIHRvIHRoZSA5OS41NCUgcmV0dXJuIG9mIHRoZSBmdWxsIHBheSBKYWNrcyBvciBCZXR0ZXIgdmlkZW8gcG9rZXIgZ2FtZSB0aGF0IEkgbWVudGlvbmVkIGVhcmxpZXIuIApJdHMgQW5kcm9pZCBPUywgaW4gbGVzcyB0aGFuIGEgZGVjYWRlLCBoYXMgYmVjb21lIGluZHVzdHJ5IHN0YW5kYXJkIGZvciB0aGUgbmV3IGd1YXJkIG9mIHRoZSBwZXJ2YXNpdmUgV2ViLiAKNCkgWW91IGFsc28gbmVlZCB0byBsb29rIGF0IHdoZXJlIGVsc2UgY2FuIHlvdSBzYXZlL21ha2UgbW9uZXkuIApUaGUgdmljdGltIGlzIGFub3RoZXIgdHlwZSBvZiBlbmVyZ3kgdmFtcGlyZS4gIlRoZXkgYXJlIHdvZSBpcyBtZSBhbGwgb2YgdGhlIHRpbWUsIiBzaGUgc2F5cyBhbmQgaGF2ZSBsb3RzIG9mIHByb2JsZW1zLiBXaGlsZSB5b3UgbWlnaHQgdGhpbmsgYnJhaW5zdG9ybWluZyBvciBwcm9ibGVtIHNvbHZpbmcgbWlnaHQgaGVscCwgIkl0J3MgYSB3YXN0ZSBvZiBlbmVyZ3kiIEJlbGxldyBzYXlzLiAiWW91IGNvdWxkIGdpdmUgdGhlbSAxMDAgc29sdXRpb25zIGFuZCB0aGV5J2QgaGF2ZSAxMDAwIGV4Y3VzZXMuIgpJbnN0ZWFkIHlvdSdsbCBnZXQgYSB2b3VjaGVyIHRvIHN1Ym1pdCB0byBhbm90aGVyIGNvbXBhbnkuIApMaXN0IGdvZXMgb24uVGhlIHN1YnJlZGRpdCBpcyBhcmd1YWJseSBldmVuIHdvcnNlLiAKQ2FuIHJlY29tbWVuZCBpdCBlbm91Z2ghLiAKSSB1cCB2b3RpbmcgcHVyZWx5IGZvciB0aGUgZmlyc3QgcG9ydGlvbiBvZiB5b3VyIGNvbW1lbnQuIFlvdSBuZWVkIHRvIHRha2UgYSBzdGVwIGJhY2sgYW5kIHJlIGV2YWx1YXRlIGJlZm9yZSB5b3UgYmVnaW4gdG8gY2FsbCBzb21lb25lIGVsc2UgZGVjaXNpb25zICJzdHVwaWQuIiBDaGVjayB5b3Vyc2VsZi4gRG8geW91IHRoaW5rIHlvdSBrbm93IHdoYXQgeW91IHdvdWxkIGhhdmUgZG9uZSBoYWQgeW91IGJlZW4gaW4gdGhhdCBzaXR1YXRpb24/IFByb2JhYmx5LiBIYXZlIHlvdSBiZWVuIGluIHRoaXMgZXhhY3Qgc2l0dWF0aW9uPyBVbmxpa2VseS4gSGF2ZSB5b3UgYmVlbiBpbiB0aGlzIHNpdHVhdGlvbiB3aGlsZSBhbHNvIGluIHRoaXMgdmljdGltIHNob2VzPyBFeHRyZW1lbHkgdW5saWtlbHkuCkkgd2lsbCB0ZWFzZSB5b3VyIGJ1dHQgYW5kIHRoZSBpbnNpZGVzIG9mIHlvdXIgdXBwZXIgbGVncyB3aXRoIGZlYXRoZXJ5IHRvdWNoZXMgdGhhdCBhcmUgZXh0cmVtZWx5IHBsZWFzdXJhYmxlIS4gClBhcnRpciBkdSBtb21lbnQgbyBvbiBhIGRjb3V2ZXJ0IGxlIGNvZGUgZ250aXF1ZSwgb24gYSBjcnUgcXVlIGwnb24gcG91cnJhaXQgZXhwbGlxdWVyIGxhIHNhbnQsIGxhIG1hbGFkaWUgZXQgbW1lIG5vcyBjb21wb3J0ZW1lbnRzIGVuIGNvbXByZW5hbnQgbGUgcmxlIGV4YWN0IGpvdSBwYXIgY2hhY3VuIGRlcyBxdWVscXVlIDI1IDAwMCBnbmVzIHF1aSBjb21wb3NlbnQgbGUgY29kZSBnbnRpcXVlIGh1bWFpbi4gTWFpcyBvbiBzJ2VzdCByZW5kdSBjb21wdGUgcXVlIG1tZSBkZSB2cmFpcyBqdW1lYXV4LCBwb3NzZGFudCBleGFjdGVtZW50IGxlIG1tZSBjb2RlIGdudGlxdWUsIG5lIG1vdXJyYWllbnQgcGFzIGRlcyBtbWVzIG1hbGFkaWVzIGV0IG4nYXZhaWVudCBwYXMgbGUgbW1lIGRlc3Rpbi4gCkFuZC4gQWxzbyBiYXNlIGVuZ2luZWVyaW5nIGluIHNvZnR3YXJlIHJlcXVpcmVtZW50cyBmb3IgbGl2ZSBzdGVhbSBhcHBsaWNhdGlvbnMgZmFxcyBiYXIga25vd2xlZGdlYmFzZSBhc2tlZCBkYXRhZmlsZSBkZXNrIG5vbiBlbmNyeXB0ZWQgc29mdHdhcmUgaXRzZWxmIHRoZSBwcm92aWRlci4gVGhlIGFkZGl0aW9uYWwgaW5zdGFuY2VzKSBzZWN1cml0eSBzZXJ2aWNlIGFuZCB1c2IgYmFzZSB3ZWIgc3VwcG9ydCBoZWxwIGxpc3RzIGdpdmEgdGhlIG1hbnVhbHMgYXBpIHRoZSBzb2Z0d2FyZSBzb2Z0d2FyZSB0aGUgZW50aXJlIGluIGRlc2sga25vd2xlZGdlIGZyZWQgcmlnaHRhbnN3ZXJzLgpJZiBadWNrZXJiZXJnIHRoZW9yeSBpcyBjb3JyZWN0LCBaeW5nYSB3aWxsIGJlIHRoZSBmaXJzdCBvZiBtYW55IGNvbXBhbmllcyBidWlsdCBvbiBGYWNlYm9vayB1bmRlcnBpbm5pbmdzLgoiSSBmZWVsIGxpa2Ugd2UncmUgY2FsbGluZyBzb21lb25lJ3MgYmx1ZmYsIiBoZSBzYWlkLCBqb2tpbmcgdGhhdCBoZSB3YXMgaW4gZm9yICQzNjAsMDAwIHRvIGtlZXAgdGhlIGNvbnZlcnNhdGlvbiBnb2luZy4KRXIgd3Vzc3RlIG5hdHJsaWNoLCBkYXNzIGlociBkYXMgd2llZGVyIHNlaHIgcGVpbmxpY2ggd2VyZGVuIHdyZGUsIHdhaHJoZWl0c2dlbXNzIHp1IGFudHdvcnRlbi4gQmVpbSBLb2NoZW4sIGRhbm4gc3RlaGUgaWNoIHZvciBkZW0gSGVyZCB1bmQgZ3JlaWZlIG1pciBpbnMgSHNjaGVuLiAKVGhleSBhcmUgdGhlIGNyZWF0b3JzL3N0YXJzIG9mIHRoZSBwb3B1bGFyIFRWIHNob3dzIFRoZSBTaG9wcGluZyBCYWdzLCBBbm5hIEtyaXN0aW5hIEdyb2NlcnkgQmFnLCBhbmQgQW5uYSBLcmlzdGluYSBCZWF1dHkgQ2FsbC4gQW5kIGJ5IGNoYXJtIEkgbWVhbiB0aGUgYW50aSBNYXJ0aGEgU3Rld2FydCBraW5kIG9mIGNoYXJtLiAKSSB0aG91Z2h0IGhlIGhhZCBpbmFwcHJvcHJpYXRlIHJlbGF0aW9uc2hpcHMgd2l0aCB5b3VuZyBib3lzLiAKVGVldGRvZ3M0MjAgdQpUaGV5J3JlIG5vdCBuZWNlc3NhcnkgZm9yIGFlcm9iaWMgZml0bmVzcywgYW5kIGlmIHlvdXIgYm9uZXMgYW5kIG11c2NsZXMgY2FuJ3QgaG9sZCB1cCB1bmRlciB0aGUgYWRkZWQgc3RyYWluLCB5b3UgbWF5IGNyZWF0ZSBuZXcgaW5qdXJpZXMgYW5kIG90aGVyIGxhc3RpbmcgcHJvYmxlbXMgZm9yIHlvdXJzZWxmLi4gClRvIGFueW9uZSB3aG8ncyBkcml2ZW4gSSA1LCB0aGUgaWRlYSBvZiBzYWxtb24gaW4gQ29hbGluZ2EgaXMgYXN0b3VuZGluZy4uIApOb3csIGluIG15IG5laWdoYm9yaG9vZCBhIGxvdCBvZiBob21lcyBoYXZlIGVsZXZhdG9ycyBpbiB0aGVtLiAKMXN0IGdlbmVyYXRpb24gaGFkIGhlYXBzIG9mIHNpZGUgZWZmZWN0cyBhbmQgZGFuZ2Vycy4gV2hhdCBJIGdvdCByZWNvbW1lbmRlZCB0byBkbyB3YXMgdGFrZSBhbiBpbmhhbGVkIHN0ZXJvaWQgKG5hc2FsIHNwcmF5KSwgd2hpY2ggYnVpbGRzIHVwIGEgbW9yZSBzdGFibGUgcmVzaXN0YW5jZSB0byBhbGxlcmdlbnMgb3ZlciB0aW1lLiAKVGhlIGRheXMgYXJlIGZ1bGwuIEkgYmVlbiBwYWNraW5nIHRoZSBzbWFsbCBzaGF2aW5nIGtpdCBvZiBwZXJzb25hbCBpdGVtcyBJIGFsbG93ZWQgdG8gdGFrZSBpbiB0aGUgU295dXosIGNhcmVmdWxseSB3cmFwcGluZyBwZW5kYW50cyBhbmQgbWVkYWxzIGFuZCBLcmlzdGluIHdhdGNoLiAKTWlnaHQgYXMgd2VsbCBzaGFyZSBteSBleHBlcmllbmNlLiBJIGhhdmUgYmVlbiBzdHVkeWluZyBmb3IgYWJvdXQgMjc2IGRheXMgbm93LiBDdXJyZW50bHkgSSBkb2luZyAxMCBuZXcgY29yZSA2MDAwIHdvcmRzLCA3IG1pbmVkIHdvcmRzIGFuZCA1IG5ldyBLYW5qaXMgZXZlcnlkYXkgKFVzaW5nIEtLTEMpLiBBbHNvIGkgdXNlIGJ1bnBybyB0byBzdHVkeSBhbmQgcmV2aXNlIGdyYW1tYXIuCjEwMSBXaW5uaW5nIFRvdXJuYW1lbnQgUG9rZXIgTW92ZXMgT3ZlcnZpZXcKQWxsIFNBUnMgc2hvdWxkIGJlIG1hZGUgaW4gd3JpdGluZyB0byB0aGUgLiBUaGUgcmVxdWVzdCBmb3JtIGNhbiBiZSB1c2VkIGFuZCB3aWxsIGhlbHAgdG8gZW5zdXJlIHRoYXQgd2UgaGF2ZSBhbGwgdGhlIGluZm9ybWF0aW9uIHJlcXVpcmVkIHRvIGRlYWwgd2l0aCB5b3VyIHJlcXVlc3QuIApUaGlzIGhhcHBlbnMgd2hlbiBJIGdvIHRvIHByb2Zlc3Npb25hbCB3cmVzdGxpbmcgc2hvd3MuIEl0J3MgYnJ1dGFsLiAKTGVzIGdyb3MgcG9pc3NvbnMgcmlzcXVlbnQgZGF2YW50YWdlIGQndHJlIHBvbGx1cy5BdWdtZW50ZXogdm90cmUgY29uc29tbWF0aW9uIGQnYWNpZGVzIG1vbm8gaW5zYXR1cnMgYm5maXF1ZXMgcG91ciBsZSBjdXIgKG9saXZlKSBlbiBtYW5nZWFudCBwbHVzIGRlIG5vaXggZXQgZGUgZ3JhaW5lcywgZGVzIGFtYW5kZXMsIGVuIHBhc3NhbnQgcGFyIGxlcyBub2l4IGR1IEJyc2lsLCBsZXMgbm9peCBkZSBjb2NvLCBsZXMgbm9pc2V0dGVzLCBsZXMgbm9peCBkZSBtYWNhZGFtaWEsIGxlcyBub2l4IGRlIHBjYW5zLCBsZXMgcGlnbm9ucywgbGVzIHBpc3RhY2hlcyBldCBsZXMgZ3JhaW5lcyBkZSBzc2FtZS4gCk9oIHNoZSdzIG5ldmVyIGhhZCBhIGNoaWxkLiAKSGVtc2FlICAxIHBvaW50ICBzdWJtaXR0ZWQgMjcgZGF5cyBhZ28KSSBmZWxsIGluIGxvdmUgd2l0aCBFcmtpbiBLb3JheSBpbW1lZGlhdGVseSB3aGVuIEkgc2F3IHRoaXMgdmlkZW8gb2YgaGltIHBlcmZvcm1pbmcgdGhlIHNvbmcgQ2VtYWxpbSwgaGlzIGh5cG5vdGljIHZvY2FscywgdGhlIGR1c3R5IHBzeWNoZWRlbGljIHNvdW5kLCBoaXMgbGFpZCBiYWNrIHN3YWdnZXIuIFRoZSBnb29nbGUgc3RvcmUgaGFzIHRoaXMgYWxidW0gbGlzdGVkIGFzIE1lc2FmZWxlciBhbmQgaXQgYXBwYXJlbnRseSBzaG9ydCBhIHNvbmcgdGhhdCBvbiB0aGUgb3JpZ2luYWwgY3V0IChkaWdpdGFsIGFnZSB3b2VzKSBhbmQgaXQgc2VlbXMgdG8gYmUgdGhlIG9ubHkgYWxidW0gb24gdGhlcmUgdGhhdCBtb3N0bHkgY29tcGxldGUsIHRoZW4gaXQganVzdCBjb21waWxhdGlvbnMsIHdoaWNoIGlzIGZydXN0cmF0aW5nLCBidXQgYW55d2F5cy4gVGhlIG1hbiBpcyBhIHByZXR0eSBzaWduaWZpY2FudCBkaXNjb3ZlcnkgZm9yIG1lLCBtdXNpYyA3MHMgcHN5Y2hlZGVsaWMgbXVzaWMgZnJvbSBUdXJrZXkgaGFzIG5vIGNob2ljZSBidXQgdG8gYmUgaW50ZXJlc3RpbmcsIGFuZCBoZSBicmluZ3MgYSBzZWFtbGVzcyBibGVuZCBvZiBUdXJraXNoIGZvbGsgd2l0aCBwc3ljaGVkZWxpYyByb2NrLiBXb3cuIEkgd2FzIGJsb3duIGF3YXkuIE15IGJyb3RoZXIga2VwdCB0ZWxsaW5nIG1lIGhvdyBnb29kIHRoZXkgd2VyZSwgYW5kIEkgZGlkbiBiZWxpZXZlIGhpbS4KWW91IGFsc28gc2hvdWxkbid0IGJlIGxpdmluZy9jb2hhYml0YXRpbmcgd2l0aCB5b3VyIHBhcmFtb3VyLiBTaGUgd2lsbCBsb3NlIGFueSBhbmQgYWxsIHN1cHBvcnQgZnJvbSBDb2x0IGlmIHNoZSBpcyBsaXZpbmcgd2l0aCBzb21lb25lIGVsc2UuIApXaGlsZSB0aGUgY2l0eSBoYXMgYmVlbiByZWFsbHkgY29uY2VybmVkIGFib3V0IGJlaW5nIHNlbnNpdGl2ZSB0byB0aGF0LCBpdCdzIHN0aWxsIGEgZGlmZmljdWx0IHByb2Nlc3MgZm9yIHRoZSByZXNpZGVudHMsIGV2ZW4gdGhvc2UgdGhhdCBtYXkgYmUgdmVyeSBzdXBwb3J0aXZlIG9mIHRoZSBvdXRjb21lIGFuZCB0aGUgZGlyZWN0aW9uLiAKSGl0IHVwIHlvdXIgbG9jYWwgU2VwaG9yYSBvciBsaWNlbnNlZCBCdW1ibGUgc2Fsb24gYW5kIGFzayBmb3IgYSBzYW1wbGU7IG1vc3QgcGxhY2VzIGFyZSBtb3JlIHRoYW4gd2lsbGluZyB0byBsZXQgeW91IHRyeSBpdCBvdXQgYmVmb3JlIHlvdSBkcm9wICQ1MCBvbiBhIGJvdHRsZS4gSSB1c2VkIHRoaXMgc2hhbXBvbyBmb3IgYSBXRUVLIGFuZCBteSBoYWlyIHdhcyBWRVJZIG5vdGljZWFibHkgdGhpY2tlciBhbmQgdm9sdW1pbm91cyAoc2hpbnkgdG9vISEhKS4gClRyYWluZWQgc2FsZXMgcGVvcGxlIGFuZCBwZW9wbGUgd2hvIGtub3cgYSBsb3QgYWJvdXQgdGhlIHN1YmNvbnNjaW91cyBtaW5kIGFsc28gbWF5IHVzZSB0aGVzZSB0eXBlcyBvZiB3b3JkcyBpbnRlbnRpb25hbGx5LiAKVGhlIHNoYXBlIG9mIHRoZSBjdXRpY2xlIHRoYXQgbWFrZXMgb3VyIGhhaXIgY3VybHkgYWxzbyBtYWtlcyBpdCBtb3JlIGRpZmZpY3VsdCB0byByZXRhaW4gbW9pc3R1cmUgYW5kIGNvdHRvbiBpcyBub3RvcmlvdXNseSBtb2lzdHVyZSBhYnNvcmJlbnQuIAoiV2VyZSBvdXIgcGxlYXMgZm9yIHRoZSBvcGVuaW5nIG9mIHRoZSBkb29ycyBvZiBQYWxlc3RpbmUgaGVhZGVkIGluIHRoZSBwYXN0IGZldyB5ZWFycywgYXQgbGVhc3QgMzAwLDAwMCBsaXZlcyB3b3VsZCBoYXZlIGJlZW4gc2F2ZWQuIApJIGp1c3QgdGhpbmsgdGhhdCBldmVuIGlmIHlvdSB3ZXJlIHRvIHB1dCB0aGVzZSBwb3N0cyBpbiBhIHdlZWtseSB0aHJlYWQsIGl0IHdvdWxkbid0IGRvIG11Y2guIFdlIGFscmVhZHkgaGF2ZSBhIHdlZWtseSB0aHJlYWQgb2YgcGVvcGxlIHRvIHJlcXVlc3QgYW5kIG9mZmVyIHJlYWRpbmdzIHlldCB3ZWVrIGFmdGVyIHdlZWssIGl0IGRvZXNuJ3Qgc2VlbSBsaWtlIHBlb3BsZSByZXNwb25kIHRvIHRob3NlIHJlcXVlc3RzIG9mdGVuLgoiSWYgeW91IHB1dCB0aGUgc2FuZCBpbnRvIHRoZSBqYXIgZmlyc3QsIiBoZSBjb250aW51ZWQsICJ0aGVyZSBpcyBubyByb29tIGZvciB0aGUgcGViYmxlcyBvciB0aGUgZ29sZiBiYWxscy4gCkNpbmNlcmF0byAgMiBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KQ2VsYSBuIHBhcyB0b3V0ICBmYWl0IHVuIGhhc2FyZCBzaSBsZXMgaHVpbGVzIGVzc2VudGllbGxlcyBxdWkgZW4gY29udGllbm5lbnQgcHJzZW50ZW50IHBldSBvdSBwcm91IGRlcyBwcm9wcml0cyBhbnRpIGluZmVjdGlldXNlcyAoYmllbiBxdWUgY2UgbmUgc29pdCBwYXMgbCBsZXVyIGRvbWFpbmUgZGUgcHJkaWxlY3Rpb24pLlNpIGNldHRlIGZhbWlsbGUgcmVuZmVybWVudCBkZSBub21icmV1c2VzIG1vbGN1bGVzIGRpZmZyZW50ZXMgbGVzIHVuZXMgZGVzIGF1dHJlcywgb24gcGV1dCBkaXJlIHF1ZSwgZ2xvYmFsZW1lbnQsIGxlcyBodWlsZXMgZXNzZW50aWVsbGVzICBmb3J0ZSB0ZW5ldXIgZW4gc2VzcXVpdGVycG5lcyBzb250IGRvdGVzIGRlcyBwcm9wcml0cyB0aHJhcGV1dGlxdWVzIHN1aXZhbnRlcyA6QmllbiBzciwgaWwgcyBsIGQgdHJvbmMgY29tbXVuIGRlIHByb3ByaXRzIHRocmFwZXV0aXF1ZXMsIGQgaHVpbGVzIGVzc2VudGllbGxlcyAgc2VzcXVpdGVycG5lcyBwcnNlbnRhbnQgZGVzIHByb3ByaXRzIHBsdXMgc3BjaWZpcXVlcyBxdWUgbiBwYXMgbGVzIGF1dHJlcy4gCklmIHlvdSdyZSBjb25jZXJuZWQgYWJvdXQgeW91ciBzb24gYmVpbmcgcHVsbGVkIG91dCBmb3IgdGhlIG1ham9yaXR5IG9mIHRoZSBkYXksIG1ha2Ugc3VyZSB0byBhZGRyZXNzIGFuZCBzcGVhayB1cCBhYm91dCBoaXMgc2VydmljZSBkZWxpdmVyeSB0aW1lLiBXaGVuIG1ha2luZyBhbiBJRVAsIHRoZSBzZXJ2aWNlcyBhcmUgZGVzY3JpYmVkIGFzIFggdGltZXMgcGVyIHdlZWsgZm9yIFggYW1vdW50IG9mIG1pbnV0ZXM7IGlmIHlvdSBmZWVsIHRoYXQgdGhlIHNlcnZpY2UgZGVsaXZlcnkgdGhlaXIgb2ZmZXJpbmcgaXMgdG9vIG11Y2gsIGFkZHJlc3MgaXQuIEhvd2V2ZXIsIEkgd2lsbCBzYXksIHRoZXJlIGFyZSBtYW55IHNwZWNpYWwgZWR1Y2F0aW9uIHRlYWNoZXJzIHRoYXQgZG8gd29uZGVycyBmb3Igc3R1ZGVudHMgYW5kIGhlbHAgY2xvc2UgdGhlaXIgZWR1Y2F0aW9uYWwgZ2Fwcy4gSSBkb24ndCByZWNhbGwgaWYgeW91IG1lbnRpb25lZCB3aGF0IGdyYWRlIHlvdXIgc29uIGlzIGluLCBidXQgZWxlbWVudGFyeSBncmFkZSBzcGVjaWFsIGVkdWNhdGlvbiB0ZWFjaGVycyBhcmUgYWJsZSB0byBzcGVuZCBhIGxvdCBtb3JlIHRpbWUgd2l0aCBzdHVkZW50cyAoc21hbGwgZ3JvdXAgb3IgMSBvbiAxKSwgYnV0IG9uY2UgeW91ciBzb24gZ2V0cyB0byBtaWRkbGUgYW5kIGhpZ2ggc2Nob29sIHRoYXQgbWF5IGNoYW5nZS4gSSdtIHN1cmUgaXQgdmFyaWVzIGJ5IHN0YXRlLCBidXQgaW4gbXkgc3RhdGUgbWlkZGxlIGFuZCBoaWdoIHNjaG9vbHMgdXNlIHRoZSBjbyB0ZWFjaGluZyBtb2RlbCB3aGVyZSBzcGVjaWFsIGVkdWNhdGlvbiB0ZWFjaGVycyBhdHRlbmQgdGhlIGNvcmUgY2xhc3NlcyBhbmQgcHJvdmlkZSBzZXJ2aWNlIGRlbGl2ZXJ5IHdpdGhpbiB0aG9zZSBjbGFzc2VzIChubyBwdWxsIG91dCB0aW1lKTsgdGhpcyBpbmV2aXRhYmx5IG1lYW5zIHRoYXQgbWFueSBzdHVkZW50cyBkbyBub3QgZ2V0IGFsbCB0aGUgYXR0ZW50aW9uIHRoZXkgbmVlZCwgc29tZXRpbWVzIHRoZXJlIGFyZSB1cHdhcmRzIG9mIDE1IHN0dWRlbnRzIGluIHRoZSBjb3JlIGNsYXNzIHdpdGggSUVQcyBhbmQgdGhlIHNwZWNpYWwgZWR1Y2F0aW9uIHRlYWNoZXIgaXMgdHJ5aW5nIHRvIGRlbGl2ZXIgc2VydmljZXMgdG8gYWxsIG9mIHRoZW0gYXQgdGhlIHNhbWUgdGltZSB3aGlsZSB0aGUgbm9ybWFsIGNsYXNzIGxlc3NvbiBhbmQgaW5zdHJ1Y3Rpb25zIGFyZSBiZWluZyBkZWxpdmVyZWQgYnkgdGhlIGdlbiBlZCB0ZWFjaGVyLiBKdXN0IGFuIG9waW5pb24sIGlmIG15IGNoaWxkIHdhcyBzdGlsbCBpbiBlbGVtZW50YXJ5IHNjaG9vbCwgSSB3b3VsZCB3YW50IGFsbCB0aGUgYXR0ZW50aW9uIGhlIGNvdWxkIGdldCB3aGlsZSBoZSBoYXMgdGhlIHJlc291cmNlcyBlbGVtZW50YXJ5IHNjaG9vbHMgaGF2ZS4gSW5zdHJ1Y3Rpb25hbCBpbnRlbnNpdHkgaXMgb25lIG9mIHRoZSBtb3N0IHJlY29tbWVuZGVkIHN0cmF0ZWdpZXMgZm9yIGR5c2xleGlhLCBpbmNsdWRpbmcgbW9yZSB0aW1lLCBzbWFsbGVyIGdyb3VwcywgdGFyZ2V0ZWQgYXQgaW5kaXZpZHVhbCByZWFkaW5nIGxldmVsLCBzeXN0ZW1hdGljIHNlcXVlbmNlIG9mIGRlbGl2ZXJ5LCBleHRlbnNpdmUgb3Bwb3J0dW5pdHkgYW5kIGZlZWRiYWNrLgpUaGV5IGxvb2sgbGlrZSBvdmVyZ3Jvd24gcmF0cyB3aXRoIGJ1bGdpbmcgZXllcy4gSGlkZW91cy4gSSB1c2VkIHRvIGJlIG9wZW4gbWluZGVkLCBJIGRpZG4ndCB3YW50IHRvIHdyaXRlIG9mZiBhIHdob2xlIGJyZWVkICAgYnV0IHdoYXQgYXJlIHRoZSBvZGRzIHRoYXQgSSd2ZSBlbmNvdW50ZXJlZCBzbyBtYW55IG9mIHRoZXNlIHJhdHMgKHNpbmNlIHRoZXkgc2VlbSB0byBiZSBvZGRseSBwb3B1bGFyKSBhbmQgbm90IG9uZSBoYWQgYSBub3JtYWwsIHBsZWFzYW50IHRlbXBlcmFtZW50LiAKRXZlcnkgZGF5LCBCb3N0b24gR2xvYmUgYWR2aWNlIGNvbHVtbmlzdCBNZXJlZGl0aCBHb2xkc3RlaW4gdGFrZXMgb24gdGhlIHJlbGF0aW9uc2hpcCBwcm9ibGVtcyBvZiB0aG91c2FuZHMgb2YgZGVkaWNhdGVkIHJlYWRlcnMuIFRoZXkgbG9vayB0byBoZXIgZm9yIHdpc2RvbSBvbiBhbGwgbWF0dGVycyBvZiB0aGUgaGVhcnQgdG8gY29wZSB3aXRoIGRhdGluZyBmYXRpZ3VlIGFuZCBpbmZpZGVsaXR5LCB3b3JrIHJvbWFuY2VzLCB0aXJlZCBtYXJyaWFnZXMsIHRydWUgbG92ZSwgYW5kIHRydWUgbG9zcy4gClNldmVudGVlbiB5ZWFycyBvbGQgYXQgdGhlIHRpbWUsIGhlIGRlc2NyaWJlZCBhbiBhbGxlZ2VkIGluY2lkZW50IGluIHdoaWNoIEtpc3NuZXIgbXkgcGVuaXMgd2hpbGUgYm90aCB3ZXJlIHdhdGNoaW5nIGEgdHJhaW5pbmcgdmlkZW8uIEhlIGFsc28gZGVzY3JpYmVkIGEgc3Vic2VxdWVudCBtb3JuaW5nIGVuY291bnRlciBhdCB0aGUgY2hpZWYgaG91c2UgaW4gd2hpY2ggdGhlIGNvbXBsYWluYW50IHNhaWQgaGUgc2hlZCBoaXMgY2xvdGhlcyBpbiBLaXNzbmVyIGJlZHJvb20gYW5kIHdhcyBnaXZlbiBhIG1hc3NhZ2UgYmVmb3JlIGJvdGggZG9ubmVkIGJhdGhpbmcgc2hvcnRzIGZvciBhIGhvdCB0dWIgdmlzaXQgYW5kIG1vcmUgbWFzc2FnaW5nLgpCZWZvcmUgdGhlIERvdWdsYXMgQ291bnR5IFJlbGF5IGZvciBMaWZlIGZpbGxzIFdlc3NtYW4gQXJlbmEsIHRoZSBDdXJlIE1vd2VyIENhbmNlciBSYWNlIHdpbGwgaGVhdCB1cCBDb3BwZXIgQ3JlZWsgTW90b3JzcG9ydHMgUGFyay4gVGhlIGluYXVndXJhbCBsYXdubW93ZXIgcmFjZSB0YWtlcyBwbGFjZSBNYXkgMjIgb24gdGhlIGdyYXZlbCB0cmFjayBlaWdodCBtaWxlcyBzb3V0aCBvZiBTdXBlcmlvciwgb3JnYW5pemVkIGJ5IHRoZSBHYXJ5J3MgUmF5IG9mIEhvcGUgUmVsYXkgZm9yIExpZmUgdGVhbS5UaGVzZSBhcmUgbm90IHlvdXIgYmFja3lhcmQgdmFyaWV0eSBvZiBsYXdubW93ZXJzLiAKVGhlIHRocmVlIG1hbnVmYWN0dXJlcnMgdGhhdCBhcmUgZ2VuZXJhbGx5IHVzZWQgYnkgTGFzIFZlZ2FzIGNhc2lub3MgYXJlIFBhdWwgU29uLCBDaGlwY28sIGFuZCBCdWQgSm9uZXMuIFRoZXkgYWxsIHVzZSBkaWZmZXJlbnQgbWFudWZhY3R1cmluZyBwcm9jZXNzZXMuIFRoZSB0ZWNobmlxdWUgdXNlZCBieSBQYXVsIHNvbiBpcyBhIGNvbXByZXNzaW9uIG1vbGQgc3lzdGVtLCB1c2luZyBleHRyZW1lIHByZXNzdXJlIHRvIGZ1c2UgdGhlIGNvbG9ycyBpbnRvIGEgc29saWQgcGllY2UuIHdpdGggdW5ldmVuIHN0cmlwZXMgb2YgY29sb3Igb24gdGhlIHZlcnkgZWRnZSBvZiBlYWNoIGNoaXAgKGlmIHlvdSBwbGF5IHBva2VyIGluIFZlZ2FzLCB5b3UgaGF2ZSwgbm8gZG91YnQsIHNlZW4gcGxheWVycyB0cnlpbmcgdG8gc3RhY2sgdGhlaXIgY2hpcHMgYnkgZXZlbmluZyBvdXQgdGhlIHN0cmlwZXMgb24gdGhlIGVkZ2VzIG9mIGVhY2ggY2hpcCEpLgpNb3N0IHBlb3BsZSB3aWxsIGxvb2sgZm9yIHNoYWRlIGFuZCBwbGFjZSB0aGVpciB0b3dlbCBhbmQgYmVsb25naW5ncyBhd2F5IGZyb20gdGhlIHdhdGVyIGFuZCwgaWYgYXZhaWxhYmxlLCB1bmRlciBhIHNoYWRlIHRyZWUuIApZZXMgZmVsbGFzICAgeW91IHRvb2NhbiBiZSBHUSEhIEFsbGVuIExvZXcgaGFzIGEgc3Ryb25nIGludGVyZXN0aW4gaGlzdG9yeSwgcGFydGljdWxhcmx5IGluIHRoZSBWaWN0b3JpYW4gYW5kRWR3YXJkaWFuIGVyYS4gCkQuIExpdCAgdGxlcGFnZSBpbiBDaGljaGlnb2YsIHJldHVybmVkIGJ5IHBsYW5lIFRodXJzZGF5LiBTaW5jbGFpciBNY0NsZWxsYW4gaGFkIGd1ZXN0cyBpbiB0byB0ZWEgdGhpcyB3ZWVrIHRvIG1lZXQgTXJzLiBFbWlseSBTdHJhdWJlIG9mIExvcyBBbmcnZWxlcyBhbmQgRWQuIE11cnJheSwgd2hvIHdlcmUgcGFzc2VuZ2VycyBvbiB0aGUgYm9hdCBvbiBpdHMgcmV0dXJuIHRyaXAuIFRoZXkgaGF2ZSBzcGVudCB0aGUgbGFzdCBjb3VwbGUgb2Ygd2Vla3MgaGVyZS4gTUFTT05TIEFUVEVOVElPTiBUaGUgUHJlc2lkZW50IG9mIHRoZSBTaXRrYSBNYSAgc29uaWMgQ2x1YiByZXF1ZXN0cyB0aGUgcHJlc2VuY2Ugb2YgYWxsIE1hc29ucyBhdCBCYXJhbm9mIENhc3RsZSwgRnJpZGF5LCBGZWJydWFyeSA3dGguIApJIHNwZW50IGEgY291cGxlIG1vbnRocyB0aGVyZSBhbmQgaGFkIG5vdGhpbmcgYnV0IGdyZWF0IGV4cGVyaWVuY2VzLiAKSmFjayBVcnksIDk2IG9mIFRlcnJlIEhhdXRlLCBJbmQuLCBjb250aW51ZXMgdG8gaG9sZCB0aGUgaG9ub3IgYXMgdGhlIG9sZGVzdCBwbGF5ZXIgaW4gdGhlIFdvcmxkIFNlcmllcyBvZiBQb2tlciBObyBMaW1pdCBUZXhhcyBIb2xkIE1haW4gRXZlbnQuIApJbiBlYXJseSAxOTg3LCBNci4gVmFuIEVwcHMgbGVmdCB0aGUgcHJpdmF0ZSBwcmFjdGljZSBvZiBsYXcgdG8gZm9ybSBQaW9uZWVyIERldmVsb3BtZW50IENvbXBhbnkgd2l0aCBNaWNoYWVsIEouIEZhbGNvbmUuIE92ZXIgdGhlIGVuc3VpbmcgeWVhcnMsIE1yLiBWYW4gRXBwcyBzZXJ2ZWQgYXMgdGhlIGZvdW5kaW5nIHBhcnRuZXIgaW4gY2hhcmdlIG9mIGFsbCBsZWdhbCBhbmQgZmluYW5jZSBhY3Rpdml0aWVzIG9mIHRoZSBjb21wYW55IGJlZm9yZSByZXRpcmluZyBsYXN0IHllYXIuIE1yLiBWYW4gRXBwcyB3YXMgYSBtZW1iZXIgb2YgdGhlIE9ub25kYWdhIENvdW50eSBCYXIgQXNzb2NpYXRpb24sIHRoZSBOZXcgWW9yayBTdGF0ZSBCYXIgQXNzb2NpYXRpb24sIGFuZCB0aGUgQW1lcmljYW4gQmFyIEFzc29jaWF0aW9uLiAKRmluYWxseSwgZ2l2ZSB5b3Vyc2VsZiBhIG5haWwgdHJlYXRtZW50IHRvIHJlanV2ZW50YXRlIHlvdXIgbmFpbHMuIE1hc3NhZ2Ugb2xpdmUgb2lsIG9yIGhlYXZ5IGhhbmQgY3JlYW0gaW50byB5b3VyIG5haWxzIGFuZCBuYWlsIGJlZHMsIGFzIGFjZXRvbmUgaXMgZXh0cmVtZWx5IGRyeWluZy4gCkFjY29yZGluZyB0byB0aGlzIGxpbmsgb24gVGhlIEphbmUgR29vZGFsbCBJbnN0aXR1dGUgb2YgQ2FuYWRhJ3Mgc2l0ZSwgaWYgd2UgY29tYmluZSBwZXJjZW50YWdlIG9mIGluc2VjdHMgYW5kIG1lYXQvZWdncywgdGhlIHBlcmNlbnRhZ2UgZm9yIGNoaW1wcyBlYXRpbmcgYW5pbWFsIGZvb2RzIGluIHRoZSB3aWxkIHdvdWxkIGJlIHNvbWV0aGluZyBsaWtlIDEyJSwgbm90IGluY2x1ZGluZyBob25leSBhbmQgd2hhdGV2ZXIgZWxzZSBpc24ndCBsaXN0ZWQuIHlvdSBjYW4gc2F5IHRoYXQgc3BlY2llcyBhcmUgZXF1YWxseSBldm9sdmVkIGFuZCB0aGVuIHRhbGsgYWJvdXQgcHJpbWF0ZXMgd2hvIGFyZSBldm9sdmVkIFRoZSBsYW5ndWFnZSB5b3UgdXNlIHRvIHRhbGsgYWJvdXQgZXZvbHV0aW9uIG1hdHRlcnMgICB0aGUgd2F5IHlvdSB0YWxraW5nIGltcGxpZXMgYW4gaW5oZXJlbnQgcmFua2luZyBvZiBhbmQgcHJpbWF0ZXMuIFRoaXMgaXNuIGp1c3QgeW91ISBGb3IgZXhhbXBsZSwgdGhpbmsgb2YgdGhlIGRpc3RpbmN0aW9uIGJldHdlZW4gYXBlcyBhbmQgYXBlcyAgIHRoZSBtb3JlIGNvcnJlY3QgdGVybSBpcyBhbmQgYXBlcywgYnV0IHNjaWVudGlmaWMgcHVibGljYXRpb25zIHN0aWxsIHJlZmVyIHRvIGFwZXMgYXMgaWYgdGhlcmUgaXNuIHNvbWUgaW5oZXJlbnQganVkZ2VtZW50IGFib3V0IHRvIGh1bWFucyBpbiB0aGVyZS4KSSBkbyB0aGluayBhIGxvdCBvZiBwZW9wbGUgZmFpbCB0byB1bmRlcnN0YW5kIGp1c3QgaG93IG11Y2ggY29udGVudCB0aGV5IGNvbnN1bWUgZm9yIGZyZWUsIHRoYXQgaXNuIHJlYWxseSBmcmVlICAgaXQgYmVpbmcgc3Vic2lkaXplZCBieSBhZHMsIHByb2R1Y3Qgc2FsZXMsIHJlZmVycmFsIGxpbmtzLCBldGMgZXRjLiBQZW9wbGUgZG9uIGNyZWF0ZSB3ZWJzaXRlcyBsaWtlIHJlZGRpdCBvciBGYWNlYm9vayBhbmQgaW50ZW5kIGZvciBpdCB0byBiZSBmcmVlOyB0aGV5IHdhbnQgdG8gbWFrZSB0aGF0IGRvbGxhIGRvbGxhIGJpbGwgeWEgU3VyZSwgc29tZSB3ZWJzaXRlcyBhcmUgZnJlZSBhbmQvb3IgcmVseSBvbiBkb25hdGlvbnMgKGxpa2Ugd2lraXBlZGlhKSwgYnV0IHRob3NlIGFyZSB0aGUgZXh0cmVtZWx5IHJhcmUgZXhjZXB0aW9ucy4gV2l0aG91dCBhZHMsIHRoZSBpbnRlcm5ldCB3b3VsZCBsb29rIG5vdGhpbmcgbGlrZSBpdCBkb2VzIHRvZGF5LiAKSW4gYWRkaXRpb24sIGEgMTAgcGVyIGNlbnQgc3VwcGxlbWVudCBpcyBhdmFpbGFibGUgZm9yIHJlc2lkZW50cyBvZiBzbWFsbCBhbmQgcnVyYWwgY29tbXVuaXRpZXMgd2hvIGxpdmUgb3V0c2lkZSBhIENlbnN1cyBNZXRyb3BvbGl0YW4gQXJlYSAoYXMgZGVmaW5lZCBieSBTdGF0aXN0aWNzIENhbmFkYSksIHJlY29nbml0aW9uIG9mIHRoZWlyIGluY3JlYXNlZCBlbmVyZ3kgbmVlZHMgYW5kIHJlZHVjZWQgYWNjZXNzIHRvIGNsZWFuIHRyYW5zcG9ydGF0aW9uIG9wdGlvbnMuIEEgcmFyZSwgcmVmdW5kYWJsZSBjcmVkaXQsIHRoZSBDQUkgcGF5bWVudCB3aWxsIGZpcnN0IHJlZHVjZSBhbnkgYmFsYW5jZSBvd2luZyBmb3IgdGhlIHllYXIsIGFuZCBtYXkgaW5jcmVhc2UgYW55IHJlZnVuZC4uIApIb3cgdG8gcGljayB0aGUgcmlnaHQgY2xvdWQgcHJvdmlkZXJIb3cgdG8gcGljayB0aGUgcmlnaHQgY2xvdWQgcHJvdmlkZXJUaGUgY2xvdWQgb2ZmZXJzIGdyZWF0IGFkdmFudGFnZXMgZm9yIHNtYWxsIGFuZCBtaWRzaXplZCBidXNpbmVzc2VzLiBCdXQgYXMgdGhlIG51bWJlciBvZiBwcm92aWRlcnMgZXhwbG9kZXMsIHNlbGVjdGluZyB0aGUgcmlnaHQgb25lIGNhbiBiZSB0cmlja3kuCkJ5IHRoZSBlbmQgb2YgdGhlIG5pZ2h0IHdlIGhhZCBwbGF5ZWQgZml2ZSBkaWZmZXJlbnQgIndpbm5lciB0YWtlIGFsbCIgdG91cm5hbWVudHMgYW5kIEpvcmRhbiB3YXMgdXN1YWxseSB0aGUgZmlyc3Qgb3Igc2Vjb25kIHBlcnNvbiBvdXQuIApQb2xpY2UgQmVsaWV2ZSBhIERlYXJib3JuIEhlaWdodHMgTWFuIFB1cnBvc2VmdWxseSBCdXJudCBQcm9wZXJ0eSBPd25lZApTbyByZWNlbnRseSBteSBjb21wdXRlciBoYXMgYmVlbiBydW5uaW5nIGdyZWF0LCBidXQgYXMgb2YgbGF0ZSBpdHMgYmVlbiBibGFjayBzY3JlZW5pbmcgKHNvIGZhciB0d2ljZSkuIFRoZSBmaXJzdCB3YXMgYSBmZXcgZGF5cyBhZ28sIEkgc3RlcHBlZCBvdXQgb2YgbXkgcm9vbSB0byBnbyBkb3duc3RhaXJzIGZvciBhIHdoaWxlIGFuZCBkbyBzb21lIHRoaW5ncyBhbmQgd2hlbiBJIGNhbWUgYmFjayBJIG5vdGljZWQgdGhhdCBteSBtb25pdG9yIHdhcyBvZmYgKHBvd2VyIHN0aWxsIG9uLCBidXQgdGhlIHNjcmVlbiB3YXMgYmxhY2spLiBTbyBJIHRob3VnaHQgdG8gbXlzZWxmLCBvaCBpdCBqdXN0IHR1cm5lZCB0aGUgbW9uaXRvciBvZmYgYmVjYXVzZSBpdHMgYmVlbiAyMCBtaW51dGVzICh0aGF0cyB3aGF0IEkgaGF2ZSBpdCBzZXQgdG8pIGFuZCB3aGVuIEkgdHJpZWQgdG8gbWFrZSBpdCBjb21lIGJhY2sgaXQgd291bGRuJ3QuIApJIHdhcyByZWFsbHkgaW50byBvcmllbnRlZXJpbmcgd2hlbiBJIHdhcyBhIGtpZCBhbmQgSSB3YXMgYSBnaXJsLiBJIGhhZCBmcmllbmRzIChnaXJscykgd2hvIHdvdWxkIGhhdmUgcmVhbGx5IGVuam95ZWQgaXQgKHRoZXkgc2FpZCBzbyB0byBtZSkgYnV0IGRpZG4gdGhpbmsgdGhleSBzaG91bGQgYmMgdGhleSB3ZXJlIGdpcmxzIChhbmQgdGhvdWdodCBpIHdhcyB3ZWlyZCBmb3IgZ29pbmcpLiBJIGNvdWxkIHNlZSBpdCBiZWluZyB0aGUgc2FtZSBmb3IgYm95cyBpbiBkYW5jZSBvciBvdGhlciBnaXJsIGFzc3VtZWQgaW50ZXJlc3RzLi4gCkNlc2FyZWFuIFNjYXI6IFNhcmFoIFYuIENlc2FyZWFuIFNjYXI6IE5hc3Rhc3NqYSBILiBEci4gClJlc2VhcmNoIHVuaXZlcnNpdHkuLiAKSXQncyB0aGUgc2FtZSB0aGluZyBldmVyeSB0aW1lLCB0aGUgZmxpcnR5IGdyZWV0aW5nIG9mICJIZXksIGJhYnkgYm95LiIgVGhlbiBJIGxpZSBvbiB0aGUgYmVkIGFuZCBpdCdzIGJhY2sgbWFzc2FnZSwgbGVnIG1hc3NhZ2UsIGZsaXAgb3ZlciwgdHVnLCBjbGVhbiB1cCwgb3V0LiBGb3J0eSBkb2xsYXJzIGZvciB0aGUgaG91c2UsIGZvcnR5IGZvciB0aGUgdGlwLiAKT25lIG9mIHRoZSBiZXN0IGtub3duIGNoaXJvcHJhY3RvcnMgaW4gdGhlIE9seW1waWNzIGlzIERyLiBUZXJyeSBTY2hyb2VkZXIuRHIuIFdhdGVyIHBvbG8gdGVhbSwgd2hpY2ggYmVjYW1lIG9uZSBvZiB0aGUgdG9wIHN0b3JpZXMgb2YgdGhlIDIwMDggQmVpamluZyBPbHltcGljcy5UaGV5IHdvbiB0aGUgc2lsdmVyIG1lZGFsLiAKVGhlIG9yZGVyIG9mIHRoZSBHb29nbGUgY2FtcGFpZ24gaGFzIGFsc28gYmVlbiBkaXNydXB0ZWQuIApQb3RlbnRpYWxseSBlc2NobWFsaSB3b3VsZCBiZSBhbm90aGVyIGdvb2Qgc3ViIG9yIGluaGVyaXQsIGFsdGhvdWdoIGhlciBhY3RpdmUgb3ZlcnJpZGVzIGhpZWkgc2t5ZmFsbCBib29zdC4gCkZ1biBmYWN0LCBtaWxpdGFyeSBwZXJzb25uZWwgYXJlIGFsbG93ZWQgdG8gaWRlbnRpZnkgdGhlbXNlbHZlcyBhcyBiZWluZyBpbiB0aGUgbWlsaXRhcnkgYW5kIGFyZSBhbGxvd2VkIHRvIGhhdmUgcG9saXRpY2FsIG9waW5pb25zLiAKVHdvIHBhaXIgICBBIDUgY2FyZCBjb21iaW5hdGlvbiB3aXRoIHR3byB0aW1lIDIgb2YgdGhlIHNhbWUgY2FyZHMuIApJbiBhZGRpdGlvbiB0byBjYXNpbm9zIHBybyAgdmlkZSBhIHdpZGUgcmFuZ2Ugb2YgYXNzaXN0YW5jZSB0byBsb2NhbCBmcm9tIHNjaG9sYXJzaGlwcyB0byBtZW50b3JpbmcgcHJvZ3JhbXMuIEJ1dCB3aXRoIHNvbWUgb2YgdGhvc2Ugc2FtZSB5b3VuZyBwZW9wbGUgYmVjb21pbmcgaW5jcmVhc2luZ2x5IGZhc2NpbmF0ZWQgd2l0aCBzb21lIGNvbW11bml0aWVzIGFyZSBub3cgcXVlc3Rpb25pbmcgd2hldGhlciB0aGV5LiBTaG91bGQgYWNjZXB0IGFueSBsYXJnZXNzIGZyb20gdGhlIGNhc2lub3MgaW4gdGhlaXIgbmVpZ2hib3Job29kcy4gCkNvbXBsaW1lbnRhcnkgZmx1IHNob3RzIGF0IHdvcmssIGZvcm1hbCB3ZWxsbmVzcyBwcm9ncmFtIChmb2N1c2VzIG9uIHBoeXNpY2FsLCBtZW50YWwgYW5kIHNvY2lhbCB3ZWxsIGJlaW5nIGFuZCBpbmNsdWRlcyByZXNvdXJjZXMgYW5kIGluaXRpYXRpdmVzIHRvIGVkdWNhdGUsIGluY3JlYXNlIGF3YXJlbmVzcyBhbmQgc3VwcG9ydCBlbXBsb3llZXMnIG92ZXJhbGwgd2VsbCBiZWluZyksIG9uc2l0ZSBoZWFsdGggY2VudHJlcyBhdCB0aGUgVG9yb250byBhbmQgQnJhbXB0b24gbG9jYXRpb25zIChzdGFmZmVkIHdpdGggZG9jdG9ycywgbnVyc2VzLCBwaHlzaW90aGVyYXBpc3RzLCBtYXNzYWdlIHRoZXJhcGlzdHMgYW5kIG51dHJpdGlvbmlzdHMpLCBvdmVyIDEwMCBXZWxsbmVzcyBDaGFtcGlvbnMgYXQgb2ZmaWNlcyBhY3Jvc3MgQ2FuYWRhIChlbXBsb3llZSB2b2x1bnRlZXJzIHdobyB3b3JrIHRvIHByb21vdGUgaGVhbHRoIGFuZCB3ZWxsbmVzcyksIG5ldyAiSG93IEFyZSBZb3U/IiBtZW50YWwgaGVhbHRoIGF3YXJlbmVzcyBjYW1wYWlnbgpUaGV5IHNhaWQsIGRvbiB3YW50IHRvIGFycmVzdCB5b3UsIGJ1dCB5b3UgaGF2ZSB0byBsZWF2ZSB0b3duIGZvciBhIHllYXIuIFNpZ24gdGhpcyBkb2N1bWVudCBvciBmYWNlIGFycmVzdC4uIApTaWxlbnRNYXN0ZXIgdQpZZXMsIEkgc3RpbGwgaW4gVmVnYXMgYW5kIEkgc3VwcG9zZSB0aGF0IGhhcyBtZSB0aGlua2luZyBhYm91dCBob3cgb3V0IG9mIHBsYWNlIEkgYW0gaGVyZS4gSSBuZXZlciBmZWVsIG1vcmUgbGlrZSBhIE5ldyBZb3JrZXIgdGhhbiB3aGVuIEkgZW50ZXIgdGhlIHVwc2lkZSBkb3duIHdvcmxkIHRoYXQgaXMgTGFzIFZlZ2FzLiBNeSBzdHVwaWRseSBzb21iZXIgY2xvdGhlcyBvZiBibGFjayBhbmQgYnJvd24gY2xhc2ggd2l0aCB0aGUgcGFzdGVsIG1pbmkgc2tpcnRzIGFuZCBzdGlsZXR0byBoZWVscyB0aGF0IGNvbnN0aXR1dGUgZGFpbHkgYXR0aXJlIGZvciBldmVyeW9uZSBiZXR3ZWVuIHRoZSBhZ2VzIG9mIDEwIGFuZCA3NS4gCkZvciB0aGUgc3VtbWl0IHRoYXQgZW5kZWQgd2l0aG91dCBhbiBhZ3JlZW1lbnQsIiBSb2RvbmcgU2lubXVuLCB0aGUgbmV3c3BhcGVyIG9mIHRoZSBOb3J0aCBydWxpbmcgV29ya2VycyBQYXJ0eSwgc2FpZCBpbiBhIGNvbW1lbnRhcnkuIEluIGEgY29sbGFib3JhdGlvbiBiZXR3ZWVuIE5BU0EgYW5kIHRoZSBFdXJvcGVhbiBTcGFjZSBBZ2VuY3kgR2FpYSBvYnNlcnZhdGlvbiBjcmFmdCwgYSB0ZWFtIG9mIGV4cGVydHMgY2FsY3VsYXRlZCBvdXIgZ2FsYXh5IHRvIGJlIGFyb3VuZCAxLjUgdHJpbGxpb24gc29sYXIgbWFzc2VzLiBIaWdoIHJlc29sdXRpb24gc2F0ZWxsaXRlIGltYWdlcyByZXZpZXdlZCBieSAgb24gV2VkbmVzZGF5IGFsc28gc2hvd2VkIHRoYXQgdGhlIG1hZHJhc2EsIHNhaWQgdG8gYmUgcnVuIGJ5IG1pbGl0YW50IGdyb3VwIEphaXNoIGUgTW9oYW1tYWQsIGFwcGVhcnMgdG8gYmUgc3RpbGwgc3RhbmRpbmcgYW5kIHZpcnR1YWxseSB1bmNoYW5nZWQgZnJvbSBhbiBBcHJpbCAyMDE4IHNhdGVsbGl0ZSBwaG90byBvZiB0aGUgZmFjaWxpdHkuIApBY2NvcmRpbmcgdG8gYSByZWNlbnQgYXJ0aWNsZSBpbiB0aGUgR3VhcmRpYW4sIGhhdGluZyBpcyB0aGUgYnJhaW5jaGlsZCBvZiBjbHViIHByb2R1Y2VycyBNaWtlIFRvbGxlciBhbmQgQ2FybCBIaWxsLiAKSW4gSGFza2VsbCAod2l0aCBhIG5vbiBhbmNpZW50IEdIQykgbWFueSByZWN1cnNpdmUgZnVuY3Rpb25zIHJ1biB3aXRob3V0IHVzaW5nIHVwIGluY3JlYXNpbmcgc3RhY2ssIGVpdGhlciBieSB0YWlsIGNhbGwgb3B0aW1pemF0aW9uIG9yIGJ5IGxhemluZXNzLiAKMTAuIGlzIHRoZSBtb3N0IGltcG9ydGFudCBvbmUgc28gcGF5IGF0dGVudGlvbi4ga25vdyB0aGlzIGlzIGEgbG9uZyBibG9nIGFuZCBraW5kYSBwcmVhY2h5LCBidXQgaXQgYWltZWQgYXMgbXVjaCBhdCBtZSBhcyBhdCB5b3UuIGlzIGEgZmFyIGJldHRlciByZXNwb25zZSB0byB0aHJlYXQgdGhhbiBkZXByZXNzaW9uIG9yIGFwYXRoeS4gb3VnaHQgdG8gYmUgYW5ncnkgYW5kIHdlIGhhdmUgdG8gdXRpbGl6ZSB0aGF0IGFuZ2VyIGludG8gYWN0aW9uIG9yIHdlIHdpbGwgcGVyaXNoIGFzIGEgY291bnRyeSBhbmQgcG9zc2libHkgYXMgYSBzcGVjaWVzLiBjYW5ub3QgYWZmb3JkIHRvIHdhaXQgYW5kIHNlZS4gY2Fubm90IGFmZm9yZCB0byBhbGxvdyBoYWxmIG9mIHRoZSBjb3VudHJ5IHRvIGZsaXJ0IHdpdGggZmFzY2lzbS4gaGF2ZSB0byB3b3JrIG5vdyB0byBjb252aW5jZSBvdXIgZmVsbG93IEFtZXJpY2FucyB0byBzdG9wIHdvcnJ5aW5nIGFib3V0IGltYWdpbmFyeSB0aHJlYXRzIGFuZCBmb2N1cyBvbiB3aGF0IHJlYWxseSBnb2luZyBvbi4gaGF2ZSB0byB3b3JrIHJpZ2h0IG5vdyB0byBmb2N1cyBvdXJzZWx2ZXMgb24gd2hhdCBvdXIgcmVhbCBpbnRlcmVzdHMgYXJlIGFuZCBub3QgZ2V0IGRpc3RyYWN0ZWQgYnkgcHJldHR5IGxpdHRsZSBwaWVjZXMgb2YgcGxhc3RpYyAgbGlrZSBvdXIgbmV3IGkgcGhvbmVzIG9yIG91ciBuZXcgYnJlYXN0IGltcGxhbnRzLiBoYXZlIHRvIGJhbmQgdG9nZXRoZXIgYXMgYSBjbGFzcyBvZiBwZW9wbGUgd2hvIGFyZSBsZXNzIGVjb25vbWljYWxseSBzZWN1cmUsIGxlc3MgZW52aXJvbm1lbnRhbGx5IHNlY3VyZSwgbGVzcyBlbW90aW9uYWxseSBzZWN1cmUgdGhhbiBldmVyLiBpZiB3ZSBkb24gZmlndXJlIGEgd2F5IG91dCwgYXQgbGVhc3Qgd2UgcGVyaXNoIGtub3dpbmcgdGhhdCB3ZSBpbiB0aGlzIHRvZ2V0aGVyLgpJIGRvbiBtaW5kLCBidXQgSSBwcmVmZXIgdG8gZ2V0IGhpZ2hlciBzZXR0aW5ncyBpZiBwb3NzaWJsZSB3aGlsZSBzdGF5aW5nIGluIGJ1ZGdldC4gCk15IGh1c2JhbmQgYW5kIEkgaGFkIHRoaXMgaGFwcGVuIHRvIHVzIHdoZW4gd2Ugd2VyZSBmaXJzdCBtYXJyaWVkLCBhIHZlcnkga2luZCBvbGRlciBsYWR5IHdhcyBtb3ZpbmcgYW5kIHNvbGQgdXMgYmFzaWNhbGx5IGFsbCB0aGUgZnVybml0dXJlIHdlIG5lZWRlZCBmb3IgYWJvdXQgJDE1MCB3aGVuIGl0IHdhcyBwcm9iYWJseSB3b3J0aCAkMjAwMCsgKGl0IHdhcyBub3QgdmVyeSBvbGQgYW5kIGRlY2VudCBxdWFsaXR5ICAgY291Y2gsIGRpbmluZyB0YWJsZSBhbmQgY2hhaXJzLCBjb2ZmZWUgdGFibGUsIGVuZCB0YWJsZSwgYmVkIGZyYW1lLCBtYXR0cmVzcywgYm9va3NoZWxmLCBydWdzLCB0diBzdGFuZCwgZXZlcnl0aGluZy4pLiAKIlRvIGZhdm91ciBvciBub3QgZmF2b3VyIGEgcGxhbm5pbmcgYXBwbGljYXRpb24gb24gYW4gaW5kaXZpZHVhbCBjb3VuY2lsbG9yIHZpZXcgb2YgdGhlIGFwcGxpY2FudCBpbiBxdWVzdGlvbiBpcyBzb21ldGhpbmcgdGhhdCBpcyBmcmF1Z2h0IHdpdGggZGFuZ2VyLiIgSW4gTWF5IGxhc3QgeWVhciwgdGhlIE5TVyBQb2xpY2UgVGFza2ZvcmNlIFJhcHRvciByYWlkZWQgdGhlIHByZW1pc2VzIGFuZCBpZGVudGlmaWVkIHRoYXQgdGhlIGJ1aWxkaW5nIHdhcyBiZWluZyB1c2VkIGZvciBhIGNvbW1lcmNpYWwgcHVycG9zZSB3aXRob3V0IGNvdW5jaWwgY29uc2VudC4uIApPbmNlIHlvdSBoYXZlIHBpY2tlZCB1cCB0aGUgdG9vdGhicnVzaCwgZ2V0IHNvbWUgZGV0ZXJnZW50IHRoYXQgaXMgY29uc2lkZXJlZCB0byBiZSBtaWxkIGJ5IG5hdHVyZS4uIApBbm90aGVyIGFyZ3VtZW50IGFnYWluc3QgdGhhdCBub25zZW5zZSBpcyB3aHkgd291bGQgVHVya2V5IGdldCBpbnZvbHZlZCBpbiB0aGUgRiAzNSBwcm9qZWN0IG9ubHkgdG8gY29tcHJvbWlzZSB3aGF0IG1pZ2h0IGJlIFR1cmtleSBzdHJhdGVnaWMgYWR2YW50YWdlKGJlaW5nIG9uZSBvZiB0aGUgZmV3IGNvdW50cmllcyBpbiB0aGUgYXJlYSB0byBoYXZlIGEgNXRoIGdlbmVyYXRpb24gamV0KSB0byB0aGUgUnVzc2lhbnMgd2hvIGhhdmUgbm90aGluZyB0aGF0IGNvdWxkIGNvbXBldGUgd2l0aCBzdWNoIGEgcGxhdGZvcm0/IFRoZXkgYWN0aW5nIGxpa2UgVHVya2V5IGlzIGdvaW5nIHRvIGdpZnQgd3JhcCBGIDM1cyBhbmQgZGVsaXZlciB0aGVtIHRvIFJ1c3NpYSBkZXNwaXRlIHRoZSBmYWN0IGl0IGJlIGEgY29tcGxldGVseSBzdHVwaWQgYW5kIGlycmF0aW9uYWwgdGhpbmcgZm9yIGFueWJvZHkgdG8gZG8oZXZlbiBFcmRvZ2FuLiBJIG9ubHkgZXhwZWN0IGEgbW9yb24gbGlrZSBUcnVtcCB0byBhY3R1YWxseSB0cnkgc29tZXRoaW5nIGxpa2UgdGhhdCkuIDQgcG9pbnRzICBzdWJtaXR0ZWQgMjMgaG91cnMgYWdvLiAKVGhlIG5hbWUgb2YgdGhlIGVuenltZSBtZWRpY2luZXMgbGlrZSBJYnVwcm9mZW4gdGFyZ2V0IGlzIGNhbGxlZCBjeWNsbyBveHlnZW5hc2UsIG9yIENPWCBmb3Igc2hvcnQuIApVbmxpa2UgdGhlIG9uIGdvaW5nIGZhZCBub3dhZGF5cyBieSBzd2l0Y2hpbmcgdG8gbW9yZSBjb252ZW5pZW50IHdheXMgb2YgZW5qb3lpbmcgYSBwb2tlciBnYW1lLCBwbGF5aW5nIGxpdmUgcG9rZXIgaXMgc3RpbGwgdGhlIGJlc3QuIFRoZXJlIGFyZSBsb3RzIG9mIHBsYXllcnMgb3V0IHRoZXJlIHdobyB3b3VsZCBhdHRlc3QgdG8gdGhlIGZhY3QgdGhhdCB0aGUgbGF4aXR5IG9mIGdhbWVzIG1vc3QgcGVvcGxlIHdpbGwgZmluZCBpbiBsaXZlIHBva2VyIHJvb21zIGluIHRoZSBjYXNpbm9zIGNyZWF0ZXMgYW4gZW50aWNpbmcgcGhlbm9tZW5vbi4gTW9zdCBjYXNpbm9zIHdpdGggbGl2ZSBwb2tlciBvZmZlciBtb3JlIGxlbmllbnQgd2F5cyBvZiBwbGF5aW5nIGdhbWVzIGNyZWF0aW5nIGxlc3Mgc3RyZXNzIGJ1dCBhZGRpbmcgbW9yZSBwbGVhc3VyZS4uIApQcmV0dHkgc3RhbmRhcmQgZm9yIHRlbGV2aXNpb24gYXVkaWVuY2VzLiBZb3Ugd2FudCB0aGUgbW9zdCB2aXNpYmxlIG1lbWJlcnMgdG8gbWlycm9yIHRoZSBjb3JlIGRlbW9ncmFwaGljIG9mIHRoZSBzaG93LCBiZWNhdXNlIHRoYXQgd2hhdCBhZHZlcnRpc2VycyB3YW50LiBXaGlsZSBJIGFncmVlIGl0IHNvdW5kcyBsaWtlIGFuIGF3a3dhcmQgc2l0dWF0aW9uLCBib3RoIHlvdSBhbmQgdGhlIG9sZGVyIGNvdXBsZSBhcmUgYmVpbmcgYSBiaXQgbmFpdmUgdG8gc3VnZ2VzdCB0aGF0IHRoZSBwcm9kdWN0aW9uIGlzIGluIHRoZSB3cm9uZy4gVGhleSB0aGVyZSB0byBkbyBhIGpvYiBhbmQgc2VsbCBhIHByb2R1Y3QgYW5kIGFueSBzdGFnZSBtYW5hZ2VyIHdobyBwdXRzIGFuIG92ZXJ3ZWlnaHQsIG1pZGRsZSBhZ2VkIGNvdXBsZSBmcm9udCBhbmQgY2VudGVyIG9mIGEgeW91dGggb3JpZW50ZWQgcHJvZ3JhbSBpcyBnb2luZyB0byBiZSBsb29raW5nIGZvciBhIG5ldyBnaWcgYmVmb3JlIHRoZSBmaXJzdCByb3VuZCBvZiBzdHVkaW8gbm90ZXMgZ28gb3V0LgpJIGhhZCBpdCBoYXBwZW4gb25seSBhIGZldyB0aW1lcywgYW5kIHJlYWxseSBpdCB3YXNuIHJhZ2luZyBvciBhbnl0aGluZy4gCkJlaSBTb25uZW5zY2hlaW4gdW5kIHdhcm1lbiBUZW1wZXJhdHVyZW4gbCBlcyBzaWNoIGRvcnQgaW0gU2NoYXR0ZW4gdm9uIFppdHJvbmVuYiBzaWNoZXJsaWNoIGVpbmUgV2VpbGUgYXVzaGFsdGVuOiBpbiBlaW5lciBIYW5kIGVpbiBCdWNoLCBpbiBkZXIgYW5kZXJlbiBlaW4gayBHZXRyIHVuZCB2b3Igc2ljaCBkaWUgRCB1bmQgUGwgZGVyIFN0YWR0Li4gCkFjY29yZGluZyB0byB0aGUgcG9saWNlLCB0aGUgSW52ZXN0aWdhdGlvbiBUZWFtIG9mIHRoZSBTZW91bCBNZXRyb3BvbGl0YW4gUG9saWNlIEFnZW5jeSBoYXMgcmVjZWl2ZWQgdGhlIGNoYXRyb29tIGNvbnZlcnNhdGlvbiBpbiBxdWVzdGlvbiBhcyBhbiBFeGNlbCBmaWxlIGFuZCBhcmUgaW4gdGhlIHByb2Nlc3Mgb2YgYW5hbHl6aW5nIHRoZSBhdXRoZW50aWNpdHkgb2YgaXQuIApUaGVyZSBhcmUgbWFueSBhcHByb2FjaGVzIHRvIHJlZHVjaW5nIHRoZSB1c2Ugb2YgY2FyYm9uIGZ1ZWxzIGEgbWFqb3IgY29udHJpYnV0b3IgdG8gR0hHcyByYW5naW5nIGZyb20gcmVndWxhdG9yeSBsaW1pdHMsIGJhbnMgYW5kIGluY2VudGl2ZXMgdG8gcmUgcHJpY2luZyBtZWNoYW5pc21zLCBhbmQgaW4gdHJ1ZSBDYW5hZGlhbiBmYXNoaW9uIG91ciBnb3Zlcm5tZW50cyBhcmUgdXNpbmcgdGhlbSBhbGwuIFRoZSBhcHByb2FjaCBpcyBhbnl0aGluZyBidXQgY29uc2lzdGVudCBuYXRpb25hbGx5LCBidXQgYXQgbGVhc3QgdGhlIHByb3ZpbmNpYWwgYXBwcm9hY2hlcyBoYXZlIGJlZW4gcmVsYXRpdmVseSBldmVuIGhhbmRlZCBpbiBob3cgdGhleSBiYWxhbmNlIGNvc3RzIGFuZCBpbmNlbnRpdmVzLiBUaGUgZmVkZXJhbCBjYXJib24gYmFja3N0b3AgcGxhbiwgaG93ZXZlciwgc29vbiB0byBhcHBlYXIgaW4gT250YXJpbywgU2Fza2F0Y2hld2FuLCBNYW5pdG9iYSBhbmQgTmV3IEJydW5zd2ljaywgaXMgYW55dGhpbmcgYnV0LgpMZXQncyB1c2UgYW4gZXhhbXBsZS4gU2F5IHRoYXQgeW91J3JlIHRyeWluZyB0byBjb252aW5jZSBhIHJlbHVjdGFudCBmcmllbmQgdG8gYnV5IGEgdGlja2V0IHRvIGEgZnVuZHJhaXNlciB5b3UncmUgdGhyb3dpbmcuIApMZSBEciBUaWZmYW55IEZpZWxkLCBkaXJlY3RyaWNlIGR1IFRvdWNoIFJlc2VhcmNoIEluc3RpdHV0ZSAgbGEgVW5pdmVyc2l0eSBvZiBNaWFtaSBTY2hvb2wgb2YgTWVkaWNpbmUsIHVuIGNlbnRyZSBtb25kaWFsIGRlIHJlY2hlcmNoZSBzdXIgbGUgdG91Y2hlciB0aHJhcGV1dGlxdWUgZXhwbGlxdWUgcXVlIDogIGxlIG1hc3NhZ2Ugc3RpbXVsZSBsJ2FjdGl2aXQgZHUgbmVyZiB2YWd1ZSAobCd1biBkZXMgMTIgbmVyZnMgY3JuaWVucykgcXVpIHJhbGVudGl0IGV0IGR0ZW5kIGxlIHN5c3RtZSBuZXJ2ZXV4IGNlbnRyYWwuIENlbGEgcHJvZHVpdCBlbiByZXRvdXIgdW4gcmFsZW50aXNzZW1lbnQgZHUgcnl0aG1lIGNhcmRpYXF1ZSwgZGltaW51ZSBsYSBwcmVzc2lvbiBhcnRyaWVsbGUgZXQgbGEgcHJvZHVjdGlvbiBkZXMgaG9ybW9uZXMgZGUgc3RyZXNzLCB0ZWxsZXMgcXVlIGxlIGNvcnRpc29sIGV0IGxhIG5vcmFkcm5hbGluZS4gTGVzIGNoYW5nZW1lbnRzIGRhbnMgbGVzIHRyYWNzIGQnRUVHIHN1Z2dyZW50IHVuIHBsdXMgaGF1dCBuaXZlYXUgZGUgcmVsYXhhdGlvbiBldCBkZSBjb25jZW50cmF0aW9uLCBhbG9ycyBsYSBwZXJmb3JtYW5jZSBkZSB0b3V0ZSBsYSBjbGFzc2UgcydlbiB0cm91dmUgYW1saW9yZS4gTCdhdWdtZW50YXRpb24gZGVzIG5pdmVhdXggZGUgc3JvdG9uaW5lIGV0IGRlIGRvcGFtaW5lIGFtbGlvcmUgbCdodW1ldXIuCkkgbm90IHN1cmUgd2hlcmUgdG8gZmluZCBpdCwgYnV0IHRoZXJlIGlzIHNvbWUgbG9yZSByZWdhcmRpbmcgVHlyYW5pZCBpbnRlcmFjdGlvbnMgd2l0aCBDaGFvcy4gV2hpbGUgcGFydCBvZiB0aGUgaGl2ZW1pbmQgSSBwcmV0dHkgY29uZmlkZW50IHRoYXQgTnVyZ2xlIFJvdCBsb3NlcyBpdHMgd2FycCB0YWludCBwcm9wZXJ0aWVzIGFuZCBpcyByZWR1Y2VkIHRvIGJlaW5nIGEgIm5hdHVyYWwiIHN1cGVyIHZpcnVzLiBXaGlsZSBwYXJ0IG9mIHRoZSBoaXZlIGEgVHlyYW5pZCBzaG91bGRuIHNwYXduIGEgcGxhZ3VlYnJpbmdlci4gCldoYXQgT25UaGluZ3MgdG8gZG9Gb29kIGFuZCBEcmlua0ZhbWlseSBhbmQgS2lkc1RWIEd1aWRlRGlnaXRhbCBQcmludCBFZGl0aW9uVEhFIENyb29tZSBmYW1pbHkgY2FuIGNsYWltIHRvIGJlIG9uZSBvZiB0aGUgbW9zdCB0YWxlbnRlZCBvbiB0aGUgQm9yZGVyLiBPbiBTYXR1cmRheSBuaWdodCBpbmRpZSBzb25nc3RyZXNzIEhlbGVuIENyb29tZSwgYWthIEdvc3NsaW5nLCB3b3dlZCBhdWRpZW5jZXMgZHVyaW5nIHRoZSBvcGVuaW5nIG9mIFdvZG9uZ2EncyBuZXcgZW50ZXJ0YWlubWVudCBjZW50cmUuIFllc3RlcmRheSBpdCB3YXMgaGVyIG9sZGVyIGJyb3RoZXIncyB0dXJuLiAKVW5mb3J0dW5hdGVseSB0byB0aGlzIGRheSBJIHN0aWxsIGNhbiBzbW9rZSBsaWtlIEkgdXNlZCB0by4gCk15IHdpZmUgd2VudCB0byB0aGUgbGFzdCBQVEEgbWVldGluZyBhbmQgaGFkIHRoZSBsZWFkZXJzIGFzayBpZiB3ZSB3b3VsZCBkb25hdGUgdGhlIHVzZSBvZiB0aGUgdGFibGVzIGZvciBhIGxvY2FsIGNodXJjaCBmdW5kcmFpc2VyLiBUaGUgZmlyc3QgdGhvdWdodCB0aGF0IGNhbWUgdG8gbWluZCB3YXMgbm8sIGJ1dCBpbiB0aGUgZW5kIHdlIGRpZCBpdCBhbnl3YXlzIGZvciB0aGUgZ29vZCBvZiB0aGUgY29tbXVuaXR5Li4gCkFza2VkIHRvIGRlc2NyaWJlIHRoZSB0b3VjaGluZywgdGhlIHdpdG5lc3Mgc2FpZCBpdCB3YXMgbG90IG9mIG1hc3NhZ2luZyBvbiB0aGUgc2hvdWxkZXJzLiBIZSBhZGRlZCwgYWx3YXlzIHNlZW1lZCB0byBnZXQgY2xvc2UuIApNb2xseSBjYW1lIHRocm91Z2ggYSBzZXJpZXMgb2Ygb25saW5lIHRlc3RzLCBhcHBsaWNhdGlvbiBmb3JtcywgaW50ZXJ2aWV3cyBhbmQgYXNzZXNzbWVudCBleGVyY2lzZXMgdG8gZW1lcmdlIGFzIHRoZSB3aW5uZXIgb2YgdGhlIGF3YXJkIGJlYXRpbmcgb2ZmIGNvbXBldGl0aW9uIGZyb20gYSB2ZXJ5IHN0cm9uZyBmaWVsZCBvZiBleGNlbGxlbnQgc3R1ZGVudHMgZnJvbSB0b3AgdW5pdmVyc2l0aWVzIGluY2x1ZGluZyBZb3JrLCBCaXJtaW5naGFtLCBVbml2ZXJzaXR5IENvbGxlZ2UgTG9uZG9uLCBEdXJoYW0sIENhcmRpZmYsIFdhcndpY2sgYW5kIEltcGVyaWFsIENvbGxlZ2UuCiJUaGV5IHdlcmUgZHJvcHBlZCBvZmYgYnkgb2xkZXIgZmFtaWx5IG1lbWJlcnMuIFRoZXkgY2xhaW1lZCB0aGUgZGF5IGJlZm9yZSB0aGV5IGhhZCBkb25lIHNvbWUgc29ydCBvZiBzdXJmaW5nIGV4ZXJjaXNlIHRoYXQgaW5qdXJlZCB0aGVpciBiYWNrcywiIHNoZXJpZmYncyBzcG9rZXN3b21hbiBUd2lzIExpemFzdWFpbiBzYWlkIFdlZG5lc2RheS4KSXQgaXMgbGlrZWx5IHRoYXQgaXQncyB5b3VyIHBob25lIGF1eCBjb25uZWN0aW9uIHVuZm9ydHVuYXRlbHkuIApCdXQgUFBQIE5hdmVlZCBRYW1hciB3YXMgZG90IG9uLiBIZSBiZWxpZXZlZCBQYWtpc3RhbiBoYWQgb2JzZXJ2ZWQgc3RyaWN0IG5ldXRyYWxpdHkgb24gU3lyaWEgYW5kIGRlbWFuZGluZyBhIHRyYW5zaXRpb25hbCBnb3Zlcm5pbmcgYm9keSB3YXMgdGFudGFtb3VudCB0byBpbnRlcmZlcmluZyBpbiB0aGUgaW50ZXJuYWwgYWZmYWlycyBvZiBhIGNvdW50cnkuIEFyZSBjYWxsaW5nIGZvciBhIHJlZ2ltZSBjaGFuZ2UgYW5kIG9wcG9zaW5nIG1pbGl0YXJ5IG9wZXJhdGlvbnMgaW4gb3RoZXIgY291bnRyaWVzIGF0IGEgdGltZSB3aGVuIG91ciBvd24gbWlsaXRhcnkgaXMgY29uZHVjdGluZyBhaXIgc3RyaWtlcyBvbiB0ZXJyb3Jpc3RzLCBoZSBwb2ludGVkIG91dCwgYWRkaW5nLCBzaG91bGQgZ2V0IG91ciBvd24gaG91c2UgaW4gb3JkZXIgYmVmb3JlIGludGVyZmVyaW5nIGluIHRoZSBhZmZhaXJzIG9mIG90aGVycy4uIApPbmUgb2YgdGhlIHRoaW5ncyB0aGV5IGNvdWxkIGFsd2F5cyBjb3VudCBvbiB3YXMgdGhlaXIgRGFkJ3MgbG92ZSBhbmQgc3VwcG9ydC4gClNvYWsgaW4gYSBob3QgYmF0aC4gQWZ0ZXIgYSBoYXJkIGRheSwgaXQncyBuaWNlIHRvIGdldCBpbnRvIGEgaG90IHR1YiBhbmQgbGV0IHRoZSBob3Qgd2F0ZXIgZG8gaXRzIHRyaWNrLiAKQWxzbyB0ZWFtcyBkb24ndCB1c3VhbGx5IGdyb3VwIGluc2lkZSBhIHJhZGl1cyBhcyB0aWdodCBhcyBhIGdyZW5hZGUgZXhwbG9zaW9uLiAKVGhlIGNoaW1uZXkgd2FzIDQ1NCB0YWxsLCBhbmQgdGhlIHRhbGxlc3QgaW4gdGhlIHdvcmxkIGl0IHdhcyBhbHNvIG9uZSBvZiB0aGUgdGFsbGVzdCBtYXNvbnJ5IHN0cnVjdHVyZXMgaW4gZXhpc3RlbmNlLiAKQW5kIHlvdSBlbnRpcmVseSBpZ25vcmVkIHRoZSBsYXN0IHBvcnRpb24gb2YgbXkgY29tbWVudC4gUGxlYXNlLCBleHBsYWluIHRvIG1lIGhvdyBzZWVpbmcgc29tZW9uZSwgaGF2aW5nIHRoZW0gcmVtaW5kIHlvdSBvZiB5b3VyIHBhcmVudHMsIG9yIHJlbWluZCB5b3Ugb2YgdGhlIHByb2dyZXNzIHdlIGhhdmUgbWFkZSBhcyBhIHNvY2lldHksIGFuZCBpdCBnaXZpbmcgeW91IGEgd2FybSBmZWVsaW5nIGluc2lkZSBpcyByYWNpc3Q/IElmIEkgc2VlIGFuIG9sZCB3aGl0ZSB3b21hbiwgYW5kIHNoZSByZW1pbmRzIG1lIG9mIG15IGdyYW5kbW90aGVyIGFuZCBtYWtlcyBtZSB0aGluayAiYXd3IiwgaXMgdGhhdCBhbHNvIHJhY2lzdD8gV2hhdCBpZiBJIHNlZSBhbiBvbGRlciBibGFjayB3b21hbiBhbmQgc2hlIHJlbWluZHMgbWUgb2YgbXkgZ3JhbmRtb3RoZXIgZnJvbSBteSBvdGhlciBzaWRlIG9mIHRoZSBmYW1pbHk/IEFtIEkgYWxsb3dlZCB0byBmZWVsIHdhcm0gaW5zaWRlIHRoZW4/IFdoeSBvciB3aHkgbm90PwpXaXRoIGEgbW9udGggbGVmdCBpbiB0aGVpciB0cnVjZSwgc2VuaW9yIFVTIGFuZCBDaGluZXNlIG9mZmljaWFscyB3aWxsIG1lZXQgaW4gV2FzaGluZ3RvbiB0aGlzIHdlZWssIGhvcGluZyB0byBtb3ZlIHRvd2FyZCBhIGJhcmdhaW4gdG8gZW5kIHRoZWlyIHVucHJlY2VkZW50ZWQgdHJhZGUgd2FyLgpJIHRoaW5rIGl0IHJlYWxseSBjb21tb24gZm9yIHBlb3BsZSB0byBoaXQgYSB3YWxsIHdoaWxlIHRhcGVyaW5nLCB3aGVyZSB0aGV5IHRydWNraW5nIGFsb25nIGFuZCBjdXR0aW5nIDEwMG1nIG9mZiB0aGVpciBkb3NlIDVtZyBhdCBhIHRpbWUgZm9yIGEgbG9uZyB3aGlsZSBhbmQgdGhlbiBhbGwgb2YgYSBzdWRkZW4gaXQgbGlrZSB0aGUgYnJhaW4gcGlja3MgdXAgb24gd2hhdCBoYXBwZW5pbmcgYW5kIGdvZXMsICJOQUguIiBJIGFsd2F5cyB3YXJuIHBlb3BsZSBpdCBjb21pbmcgYW5kIHJlY29tbWVuZCB0aGV5IGdvIGJhY2sgdXAgdG8gdGhlIGRvc2UgdGhleSBsYXN0IGZlbHQgbm9ybWFsIGF0IGFuZCBoYW5nIG91dCB0aGVyZSBmb3IgYXQgbGVhc3QgMSBtb250aCwgYW5kIHRoZW4gZHJvcCAybWcgYW5kIHNlZSBob3cgdGhleSBmZWVsLiBJZiBhbGwgaXMgd2VsbCwga2VlcCBkcm9wcGluZyAybWcgZXZlcnkgMiB3ZWVrcywgYW5kIGluY3JlYXNlIHRoZSBtZ3MgeW91IGRyb3AgYXMgeW91IGZlZWwgYWJsZSB0by4gCkZhbnMgb2Ygc3RhbmQgdXAgY29tZWR5ICAgYW5kIGZyZWUgYmVlciAgIHNob3VsZCBib29rIHRpY2tldHMgdG8gb25lIG9mIHRoZXNlIEdvb2QgR29vZCBDb21lZHkgc2hvd3MuIFNpeCBjb21lZGlhbnMgd2lsbCBkZWxpdmVyIGFuIGhvdXIgb2YgbGF1Z2hzIGZvciBzaW5nbGVzLCBjb3VwbGVzLCBhbmQgYmV5b25kLiBUaGUgc3BvdCBpcyBCWU9CLCBzbyBpZiB5b3VyIGRhdGUgZG9lc24ndCB3YW50IGEgY2FuIG9mIEdlbmVzZWUsIGJyaW5nIHNvbWV0aGluZyBhIGxpdHRsZSBmYW5jaWVyLiBHb29kIEdvb2QgQ29tZWR5LiAyMTUgTi4gMTF0aCBTdC4gJDEyLiBXaGF0IGZhbW91cyBQaGlsYWRlbHBoaWEgY291cGxlcz8gVGhpbmsgUm9ja3kgYW5kIEFkcmlhbiwgd2hvIHdpbGwgYmUgcmVwcmVzZW50ZWQgYnkgd2hpc2tleSwgYml0dGVycywgYW5kIGRlbWVyYXJhOyBhbmQgY2hvY29sYXRlIHdhc2hlZCB3aGlza2V5LCBiaXR0ZXJzLCBhbmQgY2hlcnJ5LiBGZWIuIDEzLiwgTWFuYXRhd255IFN0aWxsIFdvcmtzJyBTb3V0aCBQaGlsYWRlbHBoaWEgVGFzdGluZyBSb29tLCAxNjAzIEUuIFBhc3N5dW5rIEF2ZS4gJDE4IHBlciBwYWlyIG9mIGNvY2t0YWlscy4gRW1vLCBwb3AgcHVuaywgYW5kIHBvc3QgaGFyZGNvcmUgdHVuZXMgYXJlIG9uIGRlY2sgZm9yIHRoZSBldmVuaW5nLCB3aGljaCB3aWxsIHN0cmV0Y2ggdGlsbCB0aGUgd2VlIGhvdXJzIG9mIEZyaWRheSBtb3JuaW5nLiAkMyBjb3Zlci4gSWYgeW91J3JlIGx1Y2t5LCB5b3UnbGwgcmVjZWl2ZSBhIGxpdHRsZSBleHRyYSBzdXJwcmlzZTogT25lIGRlbGl2ZXJ5IGN1c3RvbWVyIHdpbGwgZ2V0IGEgc2lsdmVyIExPVkUgbmVja2xhY2UgZnJvbSBTZXJtYW5pYSBKZXdlbHJ5LiBBbmQgaWYgeW91J3JlIG91dCBhbmQgYWJvdXQsIHlvdSBjYW4gZmluZCB0aGUgaGVhcnQgc2hhcGVkIHBpZXMgKHByaWNlZCB0aGUgc2FtZSBhcyB0cmFkaXRpb25hbCBvbmVzKSBhdCBhbGwgU2xpQ0UgbG9jYXRpb25zLiAxMHRoIFN0LjsgMTc0MCBTYW5zb20gU3QuOyA0MzEgRS4gUHJpY2UgdmFyaWVzIHdpdGggdG9wcGluZ3MuCkFsbCBvZiB0aGVzZSByYW5rcyBjb21lIGluIGZvdXIgZGlmZmVyZW50IHN1aXRzIHdoaWNoIGluY2x1ZGUgZGlhbW9uZHMsIGNsdWJzLCBoZWFydHMgYW5kIHNwYWRlcy4uIApUaGlzIGRyZWFtIGNvdWxkIGJlIGltcG9ydGFudCBhbmQgdHJ5aW5nIHRvIHRlbGwgeW91IHNvbWV0aGluZywgc28gZG8gc29tZXRoaW5nIGFib3V0IGl0LiBUZWxsIHNvbWVvbmUuIApUaGUgQnVybGluZ3RvbiBOb3J0aGVybiBSYWlscm9hZCB0cmFjayBzbGljZXMgZGlhZ29uYWxseSBhY3Jvc3MgTWFpbiBTdHJlZXQsIHNldmVyYWwgZnJlaWdodHMgYSBkYXkgc2hyaWVraW5nIHRvIGEgaGFsdCBpbiB0aGUgaW5uYXJkcyBvZiB0aGUgZmVlZCBtaWxsLi4gCkluIHRoZSBlbmQgaXQgb24gUmlvdC4uIApJbmRpcXVlIHF1J2F1IG1vbWVudCBkZSBsYSBkY2xhcmF0aW9uIGRlIG5haXNzYW5jZSwgbGVzIHBhcmVudHMgcGV1dmVudCBjaG9pc2lyIGxlIG5vbSBkdSBwcmUsIGxlIG5vbSBkZSBsYSBtcmUgb3UgbGUgbm9tIGR1IHByZSBldCBkZSBsYSBtcmUgYWNjb2xzIGRhbnMgbCdvcmRyZSBjaG9pc2kgcGFyIGV1eC4gSWwgY29udmllbnQgcXUnaWwgeSBhaXQgYWNjb3JkIGVudHJlIGxlcyBkZXV4IHBhcmVudHMsIGRhbnMgbGUgY2FzIGNvbnRyYWlyZSwgbGUgbm9tIGR1IHByZSBwcmRvbWluZS4gCkZvdXIgc3RvcnkgYXRyaXVtIHdpdGggaW5kb29yIHBvb2wsIG9wZW4gYWlyIHJlc3RhdXJhbnQsIGZpdG5lc3MgY2VudGVyLCBhbmQgZ2FtZSByb29tLiAKTm93LCBmb3IgbWFueSBvZiB1cywgd2UgZXhwZWN0IG5vdGhpbmcgYnV0IGJldHJheWFsT2YgY291cnNlLCBsaWtlIGFueSBkeXNmdW5jdGlvbmFsIHJlbGF0aW9uc2hpcCwgdGhlcmUgd2VyZSBjbHVlcyBpbW1lZGlhdGVseSB0aGF0IHdlIHNob3VsZCBzdGFydCBoYXJkZW5pbmcgb3Vyc2VsdmVzIHRvIHRoZSBmYW50YXN5IHRoYXQgd2Ugd291bGQgZmluYWxseSBoYXZlIGFuIGFkbWluaXN0cmF0aW9uIHRoYXQgd2FzIG91cnMgYW5kIG91cnMgYWxvbmUsIHJhdGhlciB0aGFuIGEgUHJlc2lkZW50IHRoYXQgaXMgYWx3YXlzIHNuZWFraW5nIG9mZiB0byBjYXZvcnQgd2l0aCBiaWcgbWlsaXRhcnkgYW5kIGJpZyBiYW5rcy4gCkEgaG9sZSBjYW4gc3VjayB5b3UgaW4gc28gZmFyIHlvdSBkb24gcmVhbGx5IHNlZSBhIHdheSBvdXQsIGJ1dCB3aXRoIGhlbHAgeW91IGNhbiBlc2NhcGUgaXQuIE5laXRoZXIgYW54aWV0eSBvciBkZXByZXNzaW9uIGNhbiBnbyBhd2F5IGp1c3QgYnkgdGVsbGluZyBzb21lb25lIHRvIGdldCBiZXR0ZXIuIAoiVGhlcmUncyBhIGxvdCBvZiBjb21wZXRpdGlvbiBvbiBMYWtlIFN0cmVldCwiIHNoZSBzYXlzLiAiQWxzbywgdGhlcmUgYXJlIHNvbWUgcGVvcGxlIHlvdSBoYXZlIHRvIHdhdGNoIG91dCBmb3IgbW9yZSBvdmVyIHRoZXJlLiIgUmFwZSBpcyBhbHdheXMgYSBkYW5nZXIuIEl0J3MgaGFwcGVuZWQgdG8gQW1iZXIgbW9yZSB0aGFuIG9uY2UuIEEgY2xpZW50IHBheXMsIHRoZW4gcmFwZXMsIHRoZW4gcm9icy4gSXQncyBvbmUgb2YgdGhlIGRhbmdlcnMgb2YgdGhlIGxpZmUuClBsYXlpbmcgd2l0aG91dCBmaW5hbmNpYWwgc2VjdXJpdHkgaXMgdmVyeSB0b3VnaC4gQWxzbywgbWFrZSBzdXJlIHRoZSBnYW1lIHlvdSBkZWNpZGUgdG8gcGxheSBpcyBvbmUgeW91IGhhdmUgYSBiaWcgZWRnZSBpbiwgb3RoZXJ3aXNlIHRoZSB2YXJpYW5jZSB0aGF0IGNvbWVzIHdpdGggcHVzaGluZyBhIHNtYWxsIGVkZ2Ugd2lsbCBzb29uIG1ha2UgeW91IHdpc2ggeW91IHdlcmUgYmFjayBpbiB0aGF0IG9mZmljZSB0ZW4gaG91cnMgcGVyIGRheS5oYXZlIGNhcHR1cmVkIHNvbWUgaGFuZHMgd2hlcmUgdGhlcmUgd2VyZSBzcG90cyB3aGVuIEkgd2FzIHF1ZXN0aW9uaW5nIG15c2VsZiwgb3IganVzdCBkaWRuIHJlYWxseSBrbm93IHRvIGFwcHJvYWNoIHRoZSBzaXR1YXRpb24uIApJZiBoZSB0b2xkIGV2ZXJ5b25lIGhlIGZyZWVkIHRoZSBhbmRyb2lkcywgdGhleSB3b3VsZCBibGFtZSBhbGwgdGhlIHJlYWxseSBiYWQgYW5kcm9pZCBiZWhhdmlvciBvbiBoaW0gKGxpa2UgRGFuaWVsIGFuZCBPcnRpeiBhbmRyb2lkKS4gQW5kIGFsc28gdGhleSB3b3VsZCBwcm9iYWJseSBkZWNpZGUgdGhhdCBkZXZpYW5jeSBJUyBqdXN0IGEgdmlydXMgYWZ0ZXIgYWxsIGFuZCB0aGF0IGFuZHJvaWRzIGRvbiBhY3R1YWxseSBoYXZlIGZyZWUgd2lsbCwgdGhhdCBpdCBqdXN0IHNvbWV0aGluZyBLYW1za2kgaW5zdGFsbGVkLi4gCkZsYW5uZWwgU2hlZXRzIEFuZCBQaWxsb3dzIFB1cmNoYXNlIGZsYW5uZWwgc2hlZXRzIGFuZCBwaWxsb3dzIGFuZCB1c2UgdGhlbSB0byBtYWtlIHlvdXIgbWFzc2FnZSB0YWJsZSBhIGNvbWZvcnRhYmxlIHBsYWNlIGZvciB5b3VyIGNsaWVudHMuIFNoZWV0cyBhcmUgdXNlZCB0byBjb3ZlciB0aGUgYm9keSBhcyB5b3VyIG1hc3NhZ2UgeW91ciBjbGllbnRzLCBhbmQgcGlsbG93cyBjYW4gYmUgdXNlZCB0byBoZWxwIHBvc2l0aW9uIHlvdXIgY2xpZW50cyBmb3IgbWF4aW11bSByZXN1bHRzIGR1cmluZyB0aGVpciBtYXNzYWdlIHNlc3Npb25zLiBQdXJjaGFzZSBib3RoIGluIG5ldXRyYWwgY29sb3JzLCBzbyB0aGF0IHRoZSBjb2xvcnMgYXJlbid0IGRpc3RyYWN0aW5nIG9yIGRpc3J1cHRpdmUgdG8gdGhlIGNhbG0sIHNvb3RoaW5nIG5hdHVyZSBvZiB5b3VyIG1hc3NhZ2UuClN1cGVyIE1ldHJvaWQgKFNORVMpQWJzb2x1dGVseSBkZXNlcnZlcyBpdHMgbWFzdGVycGllY2Ugc3RhdHVzLiBBbWF6aW5nIGF0bW9zcGhlcmUsIHNvdW5kdHJhY2ssIGFuZCB3b3JsZCBkZXNpZ24uIEl0J3MgdGhlIG1vc3Qgbm9uIGxpbmVhciBvZiB0aGVzZSBnYW1lcyAgIGl0IHJlYWxseSBmZWVscyBsaWtlIHlvdSdyZSBleHBsb3JpbmcgYW4gdW5rbm93biB3b3JsZCwgeWV0IHlvdSBuZXZlciBmZWVsIGNvbXBsZXRlbHkgbG9zdCBhbmQgdGhlcmUgYXJlIGFsd2F5cyBjbHVlcyBhcyB0byB3aGVyZSB0byBoZWFkIG5leHQuIChFeGNlcHQgaW4gTWFyaWRpYS4gRnVjayBNYXJpZGlhLikgSSBkaWQgbWlzcyBiZWluZyBhYmxlIHRvIHNlZSBkb29ycyBhbmQgY29sbGVjdGVkIGl0ZW1zIG9uIHRoZSBtYXAsIHRob3VnaCwgc2luY2UgSSBwbGF5ZWQgdGhlIEdCQSB0aXRsZXMgZmlyc3QuCkhlIHNheXMgaGlzIGZyaWVuZHMgdGhpbmsgaW0gaGlsYXJpb3VzLiAKVGhpcyB3b3VsZCBiZSBlbm91Z2ggdG8gdW5sZWFzaCBzY3JlYW1pbmcgY2FsbHMgKGFuZCB0cm9sbHMpIGZvciBmaW5kaW5nIG91dCB0aGUgYXJjaGl0ZWN0cyBvZiB0aGUgZGVhZGx5IHBsb3QgdG8gZGVmYW1lIHRoZSBhcm15Li4gCkFjY29yZGluZyB0byBLbGVpbiwgdGhlcmUgaXMgYSBjZXJ0YWluIGZvcm0gb2YgZ2xvYmFsIGNhcGl0YWxpc20sIG1vc3QgY2xvc2VseSBhc3NvY2lhdGVkIHdpdGggdGhlIGxpa2VzIG9mIE1pbHRvbiBGcmllZG1hbiBicmFuZCBvZiBlY29ub21pY3MgYW5kIHRoZSBwb2xpdGljcyBvZiBSb25hbGQgUmVhZ2FuLCB0aGF0IHByYXlzIGZvciB0aGVzZSBraW5kIG9mIHVwaGVhdmFscyB0aGUgd2F5IGZhcm1lcnMgaW4gYSBkcm91Z2h0IHByYXkgZm9yIHJhaW4uIFRoZSAicHJvIGJ1c2luZXNzIiBlbGl0ZSB3YWl0cyBmb3IgdGhlc2UgInNob2NrcyIgdG8gdGhlIHN5c3RlbSBzbyB0aGV5IGNhbiBydXNoIGluLCBtb3ZlIGV2ZXJ5b25lIG91dCBvZiB0aGUgd2F5LCBhbmQgc3RhcnQgImZyZWUgbWFya2V0IiBjYXBpdGFsaXNtIHdpdGggYSBjbGVhbiBzbGF0ZS4gQWNjb3JkaW5nIHRvIEtsZWluLFRoZSBpZGVhIG9mIGV4bG9pdGluZyBjcmlzaXMgYW5kIGRpc2FzdGVyIGhhcyBlZW4gdGhlIG1vZHVzIG9wZXJhbmRpIG9mLiAKVGhpcyBzeXN0ZW0gaW50cm9kdWNlcyBwdXJlIHJhbmRvbSBiZWhhdmlvdXIgaW50byB0aGVpciBwbGF5IHdoaWNoIGNhbm5vdCBiZSBhbmFseXNlZCBvciBwcmVkaWN0ZWQuIEl0IGRvZXMgbm90IHJlcGxhY2UgaW50ZWxsaWdlbnQsIHNraWxsZnVsIHBsYXkgYW5kIG9ubHkgd29ya3MgYXQgYSB2ZXJ5IGhpZ2ggbGV2ZWwgd2hlcmUgcGxheWVycyBhcmUgc2tpbGxmdWwgZW5vdWdoIHRvIGNvcnJlY3RseSBhbmFseXNlIHRoZWlyIG9wcG9uZW50cyBidXQgYXQgdGhpcyBsZXZlbCBpdCBjYW4gYmUgYSB1c2VmdWwgdG9vbCB0byBkZWZlbmQgeW91ciBwbGF5IHN0eWxlIGFnYWluc3QgaW50ZW5zZSBzY3J1dGlueS4KTm93LCBvbnRvIHRoZSBraWRzLiBEYXZpcyBsb29rcyBleGNpdGluZy4gSSB3b3VsZCBsb3ZlIHRvIHNlZSBzb21lIHNwZWVkIGZyb20gdGhlc2UgR2lhbnRzIHRlYW1zIGFuZCBoZSBjZXJ0YWlubHkgYnJpbmdzIGl0LiAKSGUgbm90IGdvaW5nIHRvIGJhY2sgRmFsbG9uLiAKRXMgaXN0IHRyb3R6ZGVtIGFiZXIgdm9tIEVpbnplbGZhbGwgYWJobmdpZyBvYiBlaW5lIFRpZXJoYWx0dW5nIGVybGF1YnQgd2VyZGVuIG11c3MuIEJlaSBlaW5lciBLYXR6ZSBnaWJ0IGVzIHNlaHIgd2VuaWcgR3JuZGUgZGFzIGFscyBWZXJtaWV0ZXIgenUgdW50ZXJzYWdlbi4gCkRldmFsdWF0aW9uaXN0cyBzaG91bGQgYmUgcGxlYXNlZCB0aGF0IHRoZSBib29zdCB0byBtYW51ZmFjdHVyaW5nIGluZGVlZCBzZWVtcyB0byBiZSBoYXBwZW5pbmcuIApJdCBkb2VzbiBtZWFuIHRoYXQgd2hhdCB5b3UgYXJlIGZlZWxpbmcgZG9lc24gbWF0dGVyLCBiZWNhdXNlIGl0IGRlZmluaXRlbHkgZG9lcywgYnV0IGF0IHRoZSBlbmQgb2YgdGhlIGRheSB5b3UgdHdvIHdpbGwgbmVlZCB0byBkZWNpZGUgaG93IG11Y2ggeW91IHdpbGxpbmcgdG8gcmVwYWlyIGFmdGVyLiAKR2V0IHJlZGRpdCBwcmVtaXVtIEZBUSAgUnVsZXMgYW5kIFBvbGljaWVzIEV4cGxhaW5lZCAgU3VibWl0IE9ubGluZSBmZWVkYmFjayB0byBSUmVkIERlYWQgUmVkZW1wdGlvbiAyIGlzIGFuIGVwaWMgdGFsZSBvZiBsaWZlIGluIEFtZXJpY2EncyB1bmZvcmdpdmluZyBoZWFydGxhbmQuIFRoZSBnYW1lJ3MgdmFzdCBhbmQgYXRtb3NwaGVyaWMgd29ybGQgd2lsbCBhbHNvIHByb3ZpZGUgdGhlIGZvdW5kYXRpb24gZm9yIGEgYnJhbmQgbmV3IG9ubGluZSBtdWx0aXBsYXllciBleHBlcmllbmNlLiBUaGlzIGlzIG5vdCB0aGUgcGxhY2UgZm9yIGhlYXRlZCBjb25zb2xlIGRlYmF0ZXMuLiAKTWV0YWwgZGV0ZWN0aW5nIGlzIGEgc2tpbGwgYW5kIG90aGVyIHRyZWFzdXJlIGh1bnRlcnMgYXJlIHBsZWFzZWQgYW5kIHByb3VkIHRvIHNoYXJlIHRoZWlyIGV4cGVydGlzZS4gVHJlYXN1cmUgaHVudGVycyBhcmUgZnJpZW5kbHkgZm9sa3M7IGxpc3RlbiwgYXNrIHF1ZXN0aW9ucyBhbmQgY2xvc2VseSB3YXRjaCBzb21lb25lIHdobyBoYXMgZXhwZXJpZW5jZS4gClF1ZSBzZSBjYWNoZSB0IGlsIGRvbmMgZGVycmlyZSBsZSBwYXJmdW0gPyBMZSBwYXJmdW0gZW5jZW5zZSBsZXMgZGlldXggbWFpcyBsZXMgY2Ftb3VmbGUgZGFucyBsZSBtbWUgdGVtcHMgY2FyIGVuIHRhbnQgcXUnb2JqZXQgc2FjciBpbCBuJ2VzdCBlbiBhdWN1biBjYXMgZW1wbG95IGVuIGRpcmVjdGlvbiBkJ3VzYWdlcyBwcm9mYW5lcy4gQydlc3QsIHRvdXQgZHUgbW9pbnMsIGxlIGNhcyBjaGV6IGxlcyBHcmVjcyBkb250IEJyaWdpdHRlIE11bmllciBub3VzIGRpdCBxdWUgIGxlIHBhcmZ1bSBlc3QgdW5lIHN1YnN0YW5jZSBzYWNyZSBxdWksIGRzIGxvcnMsIG5lIHBldXQgdHJlIGludHJvZHVpdGUgZGFucyBsYSB2aWUgcHJvZmFuZSBzYW5zIGRhbmdlciBvdSwgZHUgbW9pbnMsIHNhbnMgcHJhdGlxdWVzIGNvbXBsZXhlcyAgKDMpIHB1aXNxdWUgY2V0dGUgbWF0aXJlIG9kb3JhbnRlIHF1ZSBsJ29uIHF1YWxpZmllIGRlIHBhcmZ1bSBlc3QgdW5lIG1hbmlyZSBkJ2ltYWdlciB1bmUgcHVyZXQgcGh5c2lxdWUsIG1haXMgc3VydG91dCBtb3JhbGUgZXQgc3Bpcml0dWVsbGUuCiJUaGlzIGlzIG15IGZhbWlseSwgdGhpcyBjbHViIGFuZCB0aGlzIGNpdHksIiBBbHRpZG9yZSBzYWlkIGluIGEgc3RhdGVtZW50LiAKRnJvbSBQcmluY2UgUnVwZXJ0IEkgcm9hZCB0byB0aGUgSWNlZmllbGRzIGJldHdlZW4gSmFzcGVyIGFuZCBCYW5mZi4gQWxsIHRoZSBjYW1wIHNpdGVzIHdlcmUgYm9va2VkIHNvbGlkLCBhbmQgc2luY2UgaXQgd2FzIGRhcmsgSSBqdXN0IHB1bGxlZCBpbnRvIGEgcGFya2luZyBsb3QgYW5kIHNldCB1cCBjYW1wLiBMaXR0bGUgZGlkIEkga25vdyB3aHkgaXQgd2FzIHNvIGNvbGQgdW50aWwgSSB3b2tlIHVwIGFuZCBzYXcgYSBidW5jaCBvZiBnbGFjaWVycyBhcm91bmQgbWUuClRoZXJlIHdhcyBhIGNvbnN0YW50IGRydW1iZWF0IGFib3V0IHRoZSBuZWVkIGZvciBtYXJrZXRpbmcgZXhlY3MgdG8gInRha2Ugb3VyIGluZHVzdHJ5IGJhY2ssIiBhcyB0aGV5IGJhdHRsZSB0aHJlYXRzIGluY2x1ZGluZyB0aGUgb3BhcXVlIGRpZ2l0YWwgbWVkaWEgc3VwcGx5IGNoYWluLiBQcm9jdGVyIEdhbWJsZSBDby4gQ2hpZWYgQnJhbmQgT2ZmaWNlciBNYXJjIFByaXRjaGFyZCBzdWdnZXN0ZWQgdGhhdCAiaXQgZmVlbHMgbGlrZSBtYXJrZXRpbmcgbmVlZHMgYSBtYXJrZXRpbmcgY2FtcGFpZ24sIiBpbiBhIGNvbW1lbnQgdGhhdCBoaW50ZWQgYXQgdGhlIGluZHVzdHJ5IHBvc3NpYmx5IGxvc2luZyBpdHMgY29vbCBmYWN0b3IuIApQcmVzdGUgbXVpdGEgYXRlbm8gYW9zIHBlcXVlbm9zIGRldGFsaGVzIGUgdXNhciB0b2RvcyBvcyBzZXVzIHNlbnRpZG9zLCBwYXJhIHF1ZSB2b2Mgbm8gcGVyY2EgbyBzaW5hbCBkZSB1bSBtYXJpZG8gdHJhaWRvci4gQ2VydGlmaWNhciBzZSBkZSBxdWUgdm9jIG1hbnRlbmhhIHVtIGRpcmlvIGRlIGJvcmRvIGRlIGRlc2NyaWVzLCBkYXRhcyBlIGhvcnJpb3MgZGUgdG9kYXMgYXMgcGlzdGFzIHF1ZSB2b2MgZGVzY29icmlyLiAKRXZlbiBpZiBhbiBpbWFnZSBvZiBhIG1pbm9yIGlzIFNGVywgaWYgdGhlIGNvbW1lbnRzIGFuZCBkaXNjdXNzaW9uIGFyb3VuZCB0aGF0IGltYWdlIGFyZSBzdWdnZXN0aXZlLCB0aGVuIGEgdmlvbGF0aW9uIGlzIGNyZWF0ZWQuIFRoaXMgaXMgd2h5IHlvdSBtYXkgaGF2ZSBzZWVuIFNGVyBwaG90b3MgY29tZSBkb3duIHVuZGVyIHRoaXMgcG9saWN5Li4gCkVkaXQgSmVzdXMgdGhpcyB0b29rIG9mZiBtb3JlIHRoYW4gSSBleHBlY3RlZCwgSW0gaGF2aW5nIGEgZ2FzIHRpbWUgcmVzcG9uZGluZyB0byB5b3VzIGFuZCBhbSBsb3ZpbmcgeW91ciBzdG9yaWVzIGFib3V0IGNvbWluZyB0byBJcmVsYW5kIG9yIGhlYXJpbmcgZnJvbSB5b3VzIHdobyBhcmUgcGxhbm5pbmcgYSB0cmlwIGJ1dCBzb3JyeSBJIHByb2Igd29udCBnZXQgYSBjaGFuY2UgdG8gZ2l2ZSB5b3UgYWxsIHBlcnNvbmFsIHJlY29tbWVuZGF0aW9uZCBiYXNlZCBvbiB5b3VyIGl0aW5lcmFyaWVzLiBCdXQgSSBiZSBzdXJlIHRvIG1ha2UgYW5vdGhlciBlZGl0IGFuZCBwb3N0IHVwIGhlcmUgYSBmZXcgcmVjb21tZW5kYXRpb25zIGkgdGhpbmsgbWlnaHQgc3VpdCBhIGxvdCBvZiB5b3UhClRoZSBib29rIGlzIGFib3V0IGEgaHVuZHJlZCB0aW1lcyBiZXR0ZXIgdGhhbiB0aGUgbW92aWUuIEluIHRoZSBib29rLCB0aGUgZmFybWVyIHdhcyBhbmdyeSBhbmQga25ldyBoZSB3YXMgYmVpbmcgc2NyZXdlZCBvdmVyIGFuZCBkZWxpYmVyYXRlbHkgZGl2ZXJ0ZWQgdGhlIHdhdGVyLiBJbiB0aGUgbW92aWUsIHRoZSBmYXJtZXIgYWNjaWRlbnRhbGx5IGRpdmVydGVkIHRoZSB3YXRlciBieSBraWNraW5nIGF0IGEgdmFsdmUgaW4gZnJ1c3RyYXRpb24uIApBbm90aGVyIGNoZWFwIGFuZCBlYXN5IHdheSB0byBleGNoYW5nZSBtb25leSBmb3Igc2V4IGlzIHRoZSBzbyBjYWxsZWQgIkxhdWZoYXVzIi4gVGhvc2UgYXJlIHRoZSBtb3N0IGNvbW1vbiBpbiB0aGUgcmVkIGxpZ2h0IGRpc3RyaWN0cy4gCklmIHlvdSdyZSBzYXlpbmcgaXQncyBtaW5vciBwYWluLCBJIHdvdWxkbid0IGJlIHRvbyB3b3JyaWVkIGF0IHRoaXMgcG9pbnQuIE1pbm9yIHBpbmNoZXMgYW5kIGNyYW1wcyBhcmUgZmFpcmx5IGNvbW1vbiByaWdodCBub3cuIElmIHlvdSBoYWQgYW4gZWN0b3BpYyBwcmVnbmFuY3ksIHlvdSB3b3VsZCBrbm93LiAKTGFjZXkgYW5kIExhcmtpbiBhcmUgZm9ybWVyIG93bmVycyBvZiB0aGUgVmlsbGFnZSBWb2ljZSBhbmQgdGhlIFBob2VuaXggTmV3IFRpbWVzLiBJdCB3YXNuJ3QgY2xlYXIgd2hldGhlciB0aGV5IGhhZCBhdHRvcm5leXMgd2hvIGNvdWxkIGNvbW1lbnQuIEFuIGF0dG9ybmV5IHdobyBwcmV2aW91c2x5IHJlcHJlc2VudGVkIHRoZSB0d28gbWVuLCBNaWNoYWVsIE1hbm5pbmcsIHNhaWQgaGUgd2FzIG5vdCByZXByZXNlbnRpbmcgdGhlbSBpbiB0aGlzIGNhc2UuIFNlbi4gSm9obiBNY0NhaW4gYW5kIHdobyBoYXMgYmVlbiBsZWFkaW5nIGVmZm9ydHMgZm9yIHNldmVyYWwgeWVhcnMgdG8gZmlnaHQgaHVtYW4gdHJhZmZpY2tpbmcsIGNhbGxlZCBGZXJyZXIncyBhcnJlc3QgYSAiaHVnZSBnYW1lIGNoYW5nZXIiIGluIHRoZSBlZmZvcnRzIHRvIGNyYWNrIGRvd24gb24gdGhlIHRyYWZmaWNraW5nIG9mIHlvdW5nIGdpcmxzIGFuZCBib3lzIGZvciBzZXguCkZsdSBhbmQgYWxsZXJneSB0cmVhdG1lbnRzIGFib3VuZCwgYXMgd2VsbCBhcyBmaXJzdCBhaWQgYWR2aWNlIGFuZCBpbmZvcm1hdGlvbiBhYm91dCBjb3NtZXRpYyBzdXJnZXJ5LiAKR2FsbGVyeSBQYXJrbGFuZDogT25lIFllYXIgTGF0ZXJPbmUgWWVhciBBbm5pdmVyc2FyeSBPZiBEZWFkbHkgU2hvb3RpbmcgQXQgTWFyam9yeSBTdG9uZW1hbiBEb3VnbGFzIEhpZ2ggU2Nob29sIEluIFBhcmtsYW5kLCBGbG9yaWRhUEFSS0xBTkQsIEZMT1JJREEgICBGRUJSVUFSWSAxNDogUGVvcGxlIHBhdXNlIGZvciBhIG1vbWVudCBvZiBzaWxlbmNlIGF0IDEwOjE3YW0gbmVhciBNYXJqb3J5IFN0b25lbWFuIERvdWdsYXMgSGlnaCBTY2hvb2wgYXMgdGhleSByZW1lbWJlciB0aG9zZSBsb3N0IGR1cmluZyBhIG1hc3Mgc2hvb3RpbmcgYXQgdGhlIHNjaG9vbCBvbiBGZWJydWFyeSAxNCwgMjAxOSBpbiBQYXJrbGFuZCwgRmxvcmlkYS4gQSB5ZWFyIGFnbyBvbiBGZWIuIDE0dGggYXQgTWFyam9yeSBTdG9uZW1hbiBEb3VnbGFzIEhpZ2ggU2Nob29sIDE0IHN0dWRlbnRzIGFuZCB0aHJlZSBzdGFmZiBtZW1iZXJzIHdlcmUga2lsbGVkIGR1cmluZyB0aGUgbWFzcyBzaG9vdGluZy4gKFBob3RvIGJ5IEpvZSBSYWVkbGUvR2V0dHkgSW1hZ2VzKQpXaGVuIG15IGRhZCB3YXMgeW91bmcgaGUnZCBicmluZyBpbiAkMjAwIDMwMCBhIG5pZ2h0IHdvcmtpbmcgYXQgaGlnaCBlbmQgcmVzdGF1cmFudHMgYW5kIGNvdW50cnkgY2x1YnMuIEhlIG5ldmVyIGhhZCBhIGNhcmVlciBhbmQgYXMgaGUgYWdlZCBoZSBzdGFydGVkIGhhdmluZyBtb3JlIGFuZCBtb3JlIHRyb3VibGUgZmluZGluZyBzZXJ2aW5nIGpvYnMgdGhhdCB3b3VsZCBwYXkgdGhlIGJpbGxzLiBOb3QgYmVjYXVzZSBoaXMgY3VzdG9tZXJzIGRpZG4ndCBsb3ZlIGhpbSwgdGhleSBhYnNvbHV0ZWx5IGRpZCwgYnV0IGJlY2F1c2UgcmVzdGF1cmFudHMgdGVuZCB0byBub3QgaGlyZSBvbGRlciB3YWl0IHN0YWZmL2JhcnRlbmRlcnMuIApCb3RoIFByb3phYyBhbmQgUGF4aWwgKGFuZCBQcmlsaWd5KSBib29zdCBsZXZlbHMgb2Ygc2Vyb3RvbmluLCBhIG5ldXJvdHJhbnNtaXR0ZXIgdGhhdCBhZmZlY3RzIHN1Y2ggYmFzaWMgYm9keSBmdW5jdGlvbnMgYXMgYXBwZXRpdGUsIHNsZWVwLCBhbmQgc2V4dWFsIGRlc2lyZS4gV2hlbiB0aGVyZSBpc24ndCBlbm91Z2ggc2Vyb3RvbmluIGluIGEgc21hbGwgYXJlYSBvZiB5b3VyIGJyYWluIHN0ZW0ga25vd24gYXMgdGhlIChnZXQgcmVhZHkgbm93KSBudWNsZXVzIHBhcmFnaWdhbnRvY2VsbHVsYXJpcywgeW91ciB0aW1lIHRvIGVqYWN1bGF0aW9uIHNwZWVkcyB1cCwgc2F5cyBEci4gCkl0IG5vdyB0aGUgZG9taW5hbnQgZm9ybSBvZiBleGNoYW5nZSwgd2l0aCB0aGUgdHlwaWNhbCBBbWVyaWNhbiBhZHVsdCBzcGVuZGluZyBtb3JlIHRoYW4gYW4gaG91ciBhIGRheSBtYW5hZ2luZyB0aGUgaW5ib3guIApUaGlzIENocmlzdG1hcyBmYW1pbGllcyBldmVyeXdoZXJlIHdpbGwgYmUgZXhjaGFuZ2luZyBnaWZ0cy4gVGhpcyBpcyBhbiBhZ2Ugb2xkIHRyYWRpdGlvbi4gClRoZSBmaXJzdCB0aW1lIEkgZXZlciBoYWQgbG9ic3RlciB3YXMgb24gYSBzaGlwLiAKUHJlZmxvcDogQkIgaXMgJDEwLiAKQWNjb3VudGluZyBmaXJtIE1OUCBMTFAgcmVjb21tZW5kZWQgdGhlIHBlcnNvbmFsIGluY29tZSB0YXggYnJhY2tldCB0aHJlc2hvbGRzIHNob3VsZCBiZSBleHBhbmRlZCBvbiBhIGhpZ2hlciBtdWx0aXBsZSBvZiB0aGUgYm90dG9tIGJyYWNrZXQgdGhyZXNob2xkIGFuZCB0aGF0IHRoZSBjb21iaW5lZCBmZWRlcmFsL3Byb3ZpbmNpYWwgbWFyZ2luYWwgdGF4IHJhdGUgb2YgQ2FuYWRpYW5zIHNob3VsZCBub3QgZXhjZWVkIDUwIHBlciBjZW50LiBFeGNlc3NpdmVseSB0YXhpbmcgdGhlIHRhbGVudCB0aGF0IGZ1ZWxzIGEgbW9yZSBpbm5vdmF0aXZlLCBjcmVhdGl2ZSBhbmQgc3VjY2Vzc2Z1bCBlY29ub215IGlzIGNvdW50ZXJwcm9kdWN0aXZlLiAKVGhlIGNvbmNlcHQgdGhhdCBJIGFtIGFsd2F5cyB0cnlpbmcgdG8gZXhwbGFpbiB0byBwZW9wbGUgaXMgdGhlICJvdGhlciIgZGVmaW5pdGlvbiBvZiBtb25leSBtYW5hZ2VtZW50Li4gCkkgZ290IHRvIHRoZSBVbml0ZWQgU3RhdGVkIGFuZCBJIHJlbWVtYmVyIGl0IHdhcyBjb2xkIChteSBtZW1vcnkgbWlnaHQgYmUgZnV6enkgb24gdGhpcywgYnV0IEkgY2xlYXJseSByZW1lbWJlciB3ZWFyaW5nIGEgamFja2V0LiAKTWluZHk6IE9uZSBvZiB0aGVzZSB0aXBzIHdhcyByZWFsbHksIHJlYWxseSwgcmVhbGx5IGFtYXppbmcuIEkgbWVhbiB0aGV5J3JlIGFsbCBncmVhdCBidXQgb25lLCBJJ3ZlIG5ldmVyIGhlYXJkIGJlZm9yZSBhbmQgbWFrZXMgcGVyZmVjdCBzZW5zZSBvbmNlIHlvdSBleHBsYWluIGl0LiBCdXQgeW91IGtub3csIGFsbCBvZiB0aGVzZSBmaW5hbmNlIHN0dWZmLCBpZiB5b3UgdGhpbmsgYWJvdXQgaXQsIHlvdSBkb24ndCB0aGluayBhYm91dCBpdC4gClRoZSBndXkgZW5qb3lpbmcgaGlzIHJpZ2h0ZnVsbHkgZWFybmVkIDYgcGFjayBhZnRlciBhIGhhcmQgZGF5cyB3b3JrIHdvdWxkIGJlIGEgY3JpbWluYWwganVzdCBhIGZldyBkZWNhZGVzIGFnbyBoZXJlIGluIEFtZXJpY2EgYW5kIHN0aWxsIGlzIGluIHBsZW50eSBvZiBwbGFjZXMuIApUaGlzIGRheSB3ZSBtb3VudGVkIDYgU3dpdmVscyBhdCB0aGUgRm9ydCwgd2hpY2ggd2FzIG5vdyBuZWFybHkgZmluaXNoZWQuIApTY3JlYW1zLiBDb25mdXNpb24uIFRoZSBzaWxlbmNlIGluIHRoZSBjYWIgd2FzIGEgdmFjdXVtIGZvciB0aGUgY2hhb3MgaGFwcGVuaW5nIG91dHNpZGUuIENsdW1zaWx5LCBwZW9wbGUgaW4gdGhlIGNhYiByZWFjaGVkIGZvciB0aGVpciBwaG9uZXMgdG8gYXNrIGZvciBoZWxwLCB3aXRoIG5vIGx1Y2suIFJlY2VwdGlvbiB3YXMgZ29uZS4gT25seSBKb2huYXRoYW4gZGlkbiBib3RoZXIgdHJ5aW5nLiBIZSB3YXMgcmVseWluZyBvbiB0aGUgZWxldmF0b3IuCldoZXJlIGRvIHlvdSB1c3VhbGx5IGdvIHRvIGludmVzdGlnYXRlLCBwdWJsaWMgcGxhY2VzIG9yIHJlc2lkZW50aWFsIGhvbWVzLCBvciBldmVuIGVsc2V3aGVyZT8KSXQgcG9zc2libGUgdGhhdCBtYW55IHdpbGwgYXV0b21hdGljYWxseSBhc3N1bWUgeW91IGFuIGFjdHVhbCBBc2lhbiBpbW1pZ3JhbnQgaW5zdGVhZCBvZiBhbiBBbWVyaWNhbiwgc28geW91IG1pZ2h0IGhhdmUgdG8gdGVsbCB0aGVtLCBidXQgaXQgcmVhbGx5IGRvZXNuIG1ha2UgYSBkaWZmZXJlbmNlIGVpdGhlciB3YXkuIFRoZSB3b3JzdCBzY2VuYXJpbyBJIGNhbiBjb21lIHVwIHdpdGggaXMgdGhhdCBzb21lb25lIG1pZ2h0IGFzayB5b3UgYWJvdXQgZSBzcG9ydHMgb3IgR2FuZ25hbSBTdHlsZS4gCkhvdyB0byBGaW5kIENhc2lubyBQb2tlciBDaGlwcyBmb3IgU2FsZSBPbmxpbmUKRGlyaWdlciB1biBwYXlzIGNvcnJlY3RlbWVudCwgYyBzYXZvaXIgZmFpcmUgZGVzIGNvbmNlc3Npb25zLCBvdWkuIE9uIG5lIHBhcmxlIHBhcyBkIHJlbGF0aW9uIGR1Y2F0aXZlIG8gbGUgcGFyZW50IGRvaXQgc3ZpciBsb3JzcXVlIGwgZmFpdCB1biBjYXByaWNlLiBPbiBlc3QgZGFucyB1biBjYWRyZSBkIHBvbGl0aXF1ZSBxdWkgbmUgc3VyZ2l0IHBhcyBkZSBudWxsZSBwYXJ0LCBhbG9ycyBwZXUgaW1wb3J0ZSBzaSBvbiBlc3RpbWUgcXVlIGxlcyByZXZlbmRpY2F0aW9ucyBzb250IGxnaXRpbWVzIG91IG5vbiwgbGUgbWluaW11bSwgYyBkZSBmYWlyZSB1biBnZXN0ZSBjb25zcXVlbnQsIGV0IGEgbWluaW1hLCBkZSBiYWlzc2VyIGQgdG9uIGRhbnMgbGVzIHBhcm9sZXMgKHRycyB2aW9sZW50ZXMsIGV0IHF1aSBuZSBmb250IGRvbmMgcXVlIG1vbnRlciBsZXMgZnJhbmFpcyBsZXMgdW5zIGNvbnRyZSBsZXMgYXV0cmVzKS4gCk1PREVSQVRPUiBPRndoYXQncyB0aGlzP1RST1BIWSBDQVNFVGhleSBub3QgbmVjZXNzYXJpbHkgYmV0dGVyLiAKQSBsb3Qgb2YgY29tbWVudHMgYXJlIHNheWluZyBmb3JtIGZvbGxvd3MgZnVuY3Rpb24gYW5kIHRoaXMgaXMgdG90YWxseSB0cnVlLiAKTm90IGV2ZXJ5b25lIHdhbnRzIG1vcmUgb2YgdGhlIHN1YnN0YW5jZSB0aGV5IHVzaW5nIHRob3VnaCwgYW5kIG5pY290aW5lIGlzbiBlc3BlY2lhbGx5IGtub3duIGZvciByYW1waW5nIHVwL2RpbWluaXNoaW5nIHJldHVybnMgbGlrZSBjcmFjayBpcy4gCkx1b25nbyB3YXMgc28gbmVydm91cyBoZSByZXBvcnRlZGx5IGZsb3BwZWQgdG8gaGlzIHN0b21hY2ggYW5kIG1hZGUgYSBraWNrIHNhdmUuLiAKU3dlZGVuIGFuZCBVa3JhaW5lICAgbWF5YmUuIEFuIG92ZXIgcmF0ZWQgRnJhbmNlICAgaWYgeW91IGx1Y2t5LiBCdXQgaW4gdGhlc2Uga25vY2sgb3V0IGdhbWVzIHlvdSBwbGF5IHBva2VyIHdpdGggdGhlIGRldmlsIGlmIHlvdSBiZWxpZXZlIHlvdSBjYW4gd2l0aHN0YW5kIEl0YWxpYW4gd2lzZG9tLCB3aXRob3V0IHRoZSBiYWxsLCBleGNlcHQgaW4gYnJpZWYgcGhhc2VzLgpIZSBuZXZlciBkaWQgc28gbm93IEknbSBnaXZpbmcgaXQgdG8geW91LiIgSSBzdGlsbCBoYXZlIHRoZSBzaG90Z3VuIHRoYXQgZ2F2ZSBteSB1bmNsZSBhIGxpbXAgdGlsbCB0aGUgZGF5IGhlIGRpZWQgYW5kIGl0IGhvbGRzIG1vcmUgc2VudGltZW50YWwgdmFsdWUgdG8gbWUgdGhhbiBpdCdzIG1hcmtldCBwcmljZS4gSSBob3BlIHRvIGdpdmUgaXQgdG8gbXkgY2hpbGRyZW4gb25lIGRheS4uIApDb25zdWx0IHdpdGggeW91ciBkb2N0b3IuIApXZWxsLCB5ZXMsIHByYXllciBpcyB0YXVnaHQgaW4gcmVsaWdpb25zLCBidXQgdGhlIHJlbGlnaW9ucyBhcmUgb2Z0ZW4gY2hvY2sgZnVsbCBvZiB0b3hpYyBzaGFtZSwgc28gZ29vZCBsdWNrIHRoZXJlIS4gClRoZSBwbGF5ZXIgd2l0aCB0aGUgYmVzdCBoYW5kIGluIGVhY2ggcm91bmQgZ2V0cyBvdXQgb2YgdGhlIGdhbWUsIHNpbmNlIGl0J3MgYSBkcmlua2luZyBnYW1lIGFuZCB0aGUgZ29hbCBpcyBub3QgdG8gd2luIGJ1dCB0byBub3QgbG9zZS4gVGhlIGxhc3QgdHdvIHBsYXllcnMgcm9sbCBiZXN0IHR3byByb3VuZHMgb3V0IG9mIHRocmVlLCBhbmQgImEgaG9yc2Ugb24gbWUveW91IiBpcyBhIHNsYW5nIGNvbW1lbnQgZm9yIGxvc2luZyBvbmUgb2YgdGhvc2Ugcm91bmRzLiAKRnQuIApDbGFpcmUgTWFyaWUgTWlsbGVyIFNlbWluYXJzIG9mZmVyIGl0cyBjZXJ0aWZpY2F0aW9uIGNvdXJzZXMgYXQgMTQgZGlmZmVyZW50IGNpdGllcyBhY3Jvc3MgdGhlIGNvdW50cnksIHRocm91Z2hvdXQgdGhlIHllYXIuIApPdXRnb2luZyBmb290YmFsbCBuZXRiYWxsIGNsdWIgcHJlc2lkZW50IFBhdWwgU3BlbmNlciBoYXMgYXR0cmlidXRlZCB0aGUgc3BvcnRzIGNsdWIncyBsYWNrIG9mIGZpbmFuY2lhbCBzdXBwb3J0IGluIHJlY2VudCBzZWFzb25zIGFzIGEgbWFqb3IgcmVhc29uIGZvciB0aGUgZm9vdGJhbGwgY2x1YidzIHdvZXMuIFRoZSBwcm9wb3NlZCBjYXIgcGFyayBkZWFsIHdpdGggdGhlIGNvdW5jaWwgaXMgbWVudGlvbmVkIGluIHRoZSBzcG9ydHMgY2x1YidzIGFubnVhbCByZXBvcnQgb2YgT2N0b2JlciBsYXN0IHllYXIuIE1lbWJlcnMgdm90ZWQgdG8gbWFrZSB0aGUgY2FyIHBhcmsgYSAibm9uIGNvcmUiIGFzc2V0IHdoaWNoIGNsZWFyZWQgdGhlIHdheSBmb3IgaXRzIHNlbGwgb2ZmLiAKQm91bGRlciBDb3VudHkganVyeSBjb252aWN0cyBtYXNzYWdlIHRoZXJhcGlzdCBvZiBzZXh1YWxseSBhc3NhdWx0aW5nIDYgd29tZW4KVGhpcyBwb3N0IGlzIHNvIGlnbm9yYW50IHRvIHNjaWVuY2UsIGluIHRoZSBCb3JlYWwgZm9yZXN0IHRoZSB1c3VhbCByb3RhdGlvbiBhZ2Ugb2YgYSBzaW5nbGUgZm9yZXN0IHJhbmdlcyBmcm9tIDgwIDMwMCB5ZWFycyBkZXBlbmRpbmcgb24gdGhlIGZpcmUgY3ljbGUuIFRoaXMgaXMgdGhlIHNhbWUgYXMgdGhlIGhhcnZlc3QgY3ljbGUuIEFsbCB0cmVlcyBhcmUgcmVwbGFudGVkIGFuZCByZWdyb3cuIApTaGUgYWxzbyBub3RlZCB0aGF0IEdNIGhhZCBhbHJlYWR5IHdyaXR0ZW4gb2ZmIGl0cyAkMi40IGJpbGxpb24gaW52ZXN0bWVudCBpbiBGaWF0IGFuZCBzYWlkIEdNIGhhcyBhbXBsZSBsZWdhbCBwcm90ZWN0aW9ucyBpbiB0aGUgbWFzdGVyIGFncmVlbWVudCBpbiB0aGUgZXZlbnQgdGhhdCBHTSBhbmQgRmlhdCBhcmUgdW5hYmxlIHRvIHJlc29sdmUgdGhlaXIgZGlmZmVyZW5jZXMgYW1pY2FibHkuIkkgdGhpbmsgaXQncyB0b28gc29vbiB0byBzYXkgdGhpcyBoYXMgYWxsIGJlZW4gYmFkIGZvciBHZW5lcmFsIE1vdG9ycywgYmVjYXVzZSB3ZSBkb24ndCBrbm93IHRoZSBvdXRjb21lLCIgU2ltb25ldHRpIHNhaWQuICJUaGVyZSdzIGJlZW4gYSBsb3Qgb2YgYmVuZWZpdHMgZGVyaXZlZCBmcm9tIHRoZSBwYXJ0bmVyc2hpcCBmb3IgYm90aCBwYXJ0aWVzLCIgc2hlIGFkZGVkLkJ1dCBhbmFseXN0cyBhcmUgc2tlcHRpY2FsLCBzYXlpbmcgdGhlIEZpYXQgZGVhbCBjb3VsZCBwdXQgYSBiaWcgZGVudCBpbiBHTSdzIHNoZWV0IG1ldGFsLCBiZXlvbmQgdGhlICQyLjQgYmlsbGlvbiB3cml0ZSBkb3duLiJPVkVSIEEgQkFSUkVMIiJHTSBpcyBvdmVyIGEgYmFycmVsLiBJdCB3YXMgYSBiYWQgZGVjaXNpb24gYW5kIGFsbCB0aGV5IGNhbiBkbyBpcyBwYXkgdGhlaXIgd2F5IG91dCBvZiBpdCwiIHNhaWQgR3JhZW1lIE1heHRvbiBvZiBBdXRvcG9saXMsIGFuIGF1dG8gaW5kdXN0cnkgY29uc3VsdGFudCBpbiBCcml0YWluLlVuZGVyIHRoZSB0ZXJtcyBvZiB0aGVpciBkZWFsLCBpbnZlc3RtZW50IGJhbmtzIHdvdWxkIGRldGVybWluZSB3aGF0LCBpZiBhbnksIHZhbHVlIHRoZXJlIG1pZ2h0IGJlIGluIGhlYXZpbHkgaW5kZWJ0ZWQgRmlhdCBBdXRvLiAKQW1vbmcgdGhlIGluaXRpYWwgYmF0Y2ggb2YgY2FuZGlkYXRlczogTWVsYm91cm5lLCBNYWx0YSBhbmQgTWFkcmlkIGFsbCBwbGFjZXMgdGhhdCBhbGxvdyBnYW1ibGluZyBvbmxpbmUuICJVbHRpbWF0ZWx5LCBpdCBkb2Vzbid0IHJlYWxseSBtYXR0ZXIgd2hlcmUgSSBlbmQgdXAsIiBzYWlkIHRoZSAyNSB5ZWFyIG9sZCBIYXh0b24sIHdobyBjdXJyZW50bHkgbGl2ZXMgaW4gTGFzIFZlZ2FzLiAKU3VjaCBhbWJpZ3VpdHkgbWFrZXMgaW52ZXN0aW5nIGEgbXVjaCBtb3JlIGRpZmZpY3VsdCBnYW1lLi4gCldlaW5zdGVpbidzIGxhd3llciBhc2tzIGp1ZGdlIHRvIHRvc3MgQXNobGV5IEp1ZGQgbGF3c3VpdApDYXN0OiBTY2hudWNrZWwgQmVhLCBSaWNreSBUemF0emlja3lUaXRsZTogQXZhbnRnYXJkZSBTY2F0IEV4dHJlbWUgMzRHZW5yZTogT3JhbCwgQW5hbCwgUGlzcywgU2NhdCwgR2VybWFueSwgU2V4IFNjYXQsIEJsb3dqb2IsIFNleCBTaGl0LCBFYXRpbmcsIEthdmlhciBTY2F0LC4gQXZhbnRnYXJkZSBFeHRyZW1lIDU4LiAKSSBub3QgZGVmZW5kaW5nIHRoaXMgZ3V5IGFjdGlvbnMsIEkgc3VnZ2VzdGluZyB0aGF0IHlvdXIgcmVhY3Rpb24gaXMgbW9yZSBhYm91dCBob3cgdXBzZXQgeW91IGFyZSB0aGF0IHlvdXIgd29uZGVyZnVsIGdlbmVyb3NpdHkgaGFzIGJlZW4gdW5kZXJtaW5lZC4gQW5kIGFnYWluLCBJIGdldCBpdCB0aGF0IHN1Y2tzLiBCdXQgdGhpcyB3YXNuIHNvbWUgcHVuayBraWRzIGJlaW5nIGFzc2hvbGVzLCB0aGlzIHdhcyBhbG1vc3QgY2VydGFpbmx5IHNvbWVvbmUgd2hvIGlzIGFzIHNpY2sgYXMgdGhlIGtpZHMgeW91IGFyZSBzbyBjb25jZXJuZWQgZm9yIHlldCB5b3UgaGF2ZSBub3Qgb25seSBubyBlbXBhdGh5IGZvciBoaW0gYnV0IGhhdmUgZGVzY3JpYmVkIGhpbSBhcyBzdWIgaHVtYW4uCllvdSBzZWVtIHRvIHRoaW5rIHRoZXkgYXJlIHNvbWUgaG93IHN5bm9ueW1vdXMgd2hpY2ggSSBkb24gdW5kZXJzdGFuZCBhdCBhbGwuIApFYWNoIGNob2ljZSBnaXZlcyBvZmYgYW4gdW5iZWxpZXZhYmxlIGFwcGVhbCBhbmQgYXMgcHVyY2hhc2VycyBvdXJzZWx2ZXMsIHRoZSB0dXJub3V0cyBmb3Igb3VyIGxvY2FsIHBhcnRpZXMgaGF2ZSBvbmx5IGluY3JlYXNlZC4gV2hpbGUgd2UgY2FuJ3Qgc2F5IGl0J3MgYWxsIGJlY2F1c2Ugb2YgdGhlIFN1aXRlZCBHcmVlbiBQb2tlciBUYWJsZSBDbG90aCBpdCBkZWZpbml0ZWx5IGhlbHBzLi4gCkluc3RlYWQgb2YgZWR1Y2F0aW5nIHRoZW0gb24gd2hhdCB0byBicm93c2UgYW5kIHdoYXQgbm90IHRvIGJyb3dzZSwgdGhleSBmZWFyIGNoaWxkcmVuIHdpbGwgYmUgdGFpbnRlZCBieSBzZWVpbmcgYSB0aXR0eS4gS29yZWFuIHNvY2lldHkgaXMgc3RpbGwgaGVhdmlseSBiYXNlZCBvbiBwdXJpdHkgYW5kIGltYWdlLCBhbmQgd2hpbGUgSSBhbHdheXMgcmVzcGVjdCB0aG9zZSB3aG8gaGF2ZSBzZWxmIHJlc3BlY3QsIGl0IGp1c3Qgc2VlbXMgYmV0dGVyIHRvIGxldCB0aGUgcG9wdWxhdGlvbiBkbyB3aGF0IHRoZXkgd2FudCBpbnN0ZWFkIG9mIHRyeWluZyB0byBob2xkIGJhY2sgdGhlIGZsb29kZ2F0ZXMuIApJIHJlbWVtYmVyIGFza2luZyBpZiBJIHdhcyBhbGxvd2VkIHRvLiBJbiByZXRyb3NwZWN0IEkgdW5kZXJzdGFuZCBob3cgaG9ycmlibGUgb2YgYSBtb3ZlIHRoYXQgaXMsIGJ1dCBJIHdhcyBhIG5haXZlIGJlZ2lubmVyLCBJIGp1c3Qgd2FudGVkIHRvIGtub3cgbXkgcmlnaHRzLiAKQ29tcGFuaWVzIGluIHJlZ3VsYXRlZCBpbmR1c3RyaWVzIHRoYXQgZG9uIHRha2UgdGhpcyBhcHByb2FjaCBjb3VsZCByaXNrIGNvbXBsaWFuY2UgcHJvYmxlbXMsIGFzIHRoZXkgd2lsbCBiZSBydW5uaW5nIGFuIG9wZXJhdGluZyBzeXN0ZW0gdGhhdCBoYXMgbm90IGJlZW4gcGF0Y2hlZCBmb3Iga25vd24gdnVsbmVyYWJpbGl0aWVzLiAKQXBwYXJlbnRseSBnb2luZyBpbnRvIHRoZSBtaW5pc3RyeSBjYW4gZ2V0IHRoZW0gb3V0IG9mIGEgbG90IG9mIHRyb3VibGUgaWYgdGhleSBhcmUgd29ya2luZyB3aXRoIHRoZSBjb3VydCBzeXN0ZW0gYW5kIGFibGUgdG8gY29udmluY2UgdGhlIGp1ZGdlIGFuZCBUZWVuIENoYWxsZW5nZSB0aGF0IEdvZCBpcyBnb2luZyB0byB1c2UgdGhlbS4gCkhlIGRvZXNuJ3QgInNpdCIgYW5kICJkbyIgaGUgUlVOUyBhbmQgREVTVFJPWVMuIEknbSBub3Qgc2F5aW5nIHRoaXMgaW4gYSBiYWQgd2F5LCBsaWtlIGhlJ3MgYSBiYWQga2lkIG9yIHNvbWV0aGluZywgaGUncyBub3QhIEhlJ3MgcmVhbGx5IHN3ZWV0IGFuZCBsb3ZpbmcgYW5kIHF1aXRlIGhpbGFyaW91cy4gCkkgY2FuJ3QgcmVhbGx5IHNwZWFrIGZvciB0aGUgbWVuJ3MgdGVhbSBiZWNhdXNlIEkgY294ZWQgZm9yIHdvbWVuLiBJdCB3YXMgYSByZWFsbHkgZ3JlYXQgZXhwZXJpZW5jZSBhbmQgSSBoYWQgYSBnb29kIHRpbWUuIApOZXZlcnRoZWxlc3MsIHNoZSBnZXRzIGxpdHRsZSBzZW5zZSBvdXQgb2YgSnVhbiBSYW1pcmV6LCBhIHdhdGVyIHBvbG8gYXNzb2NpYXRlIG9mIExhbmUgd2hvIHJlbnRlZCBhIHJvb20gYXQgRHVuY2FuIEdpbGxpZXMgaG91c2UgaW4gc3VidXJiYW4gR2xhZGVzdmlsbGUuIFdoZW4gR2F1dCBpbnRlcnZpZXdlZCBoaW0gaW4gdGhlIGNvdXJzZSBvZiB0aGUgaW52ZXN0aWdhdGlvbiwgUmFtaXJleiBzYWlkIEdpbGxpZXMgaGFkIG9uY2UgdG9sZCBoaW0gdGhhdCBMYW5lIHdhcyBwcmVnbmFudCBhbmQgaGFkIGdvbmUgYXdheS4gCkV2ZXJ5dGltZSBJIGdldCBvbiB0aGVzZSBzdWJzIHRoZXJlIGlzIGp1c3Qgc28gbXVjaCBsaW5nbyBhbmQgamFyZ29uIEkgZG9udCB1bmRlcnN0YW5kLCBhbmQgc28gbWFueSBkaWZmZXJlbnQgY29tcG91bmRzIHRvIGNob29zZSBmcm9tIHRoYXQgSSBqdXN0IGdpdmUgdXAgdHJ5aW5nIHRvIHVuZGVyc3RhbmQuQ2FuIHNvbWVvbmUgdGVsbCBtZSBob3cgb25lIG1pZ2h0IGdvIGFib3V0IHRoaXMsIG9yIGxpbmsgbWUgdG8gYSBiZWdpbm5lciBwYWdlLldob29waXNraW4gIDcgcG9pbnRzICBzdWJtaXR0ZWQgMTUgZGF5cyBhZ29Db21wbGFpbnQ6IEEgbGl0dGxlIG92ZXIgYSBtb250aCBhZ28sIEkgaGFkIGEgcHJldHR5IHNldmVyZSBwYWluIHBvcCB1cCByYW5kb21seSBpbiB0aGUgb3V0c2lkZSBzaWRlIG9mIG15IGtuZWUgZHVyaW5nIG15IHJ1bi4gCiJXZSBoYXZlIHNlZW4gYSBiYXJyYWdlIG9mIG5ldyBhY2N1c2VycyBjbGFpbWluZywgJ01lLCB0b28sIicgZGVmZW5jZSBsYXd5ZXIgQW5nZWxhIEFncnVzYSBzYWlkIGxhc3QgeWVhciwgYXJndWluZyBhZ2FpbnN0IHRoZSAicHJpb3IgYmFkIGFjdCIgdGVzdGltb255LgpEYXJlMzAwMCAgMTQgcG9pbnRzICBzdWJtaXR0ZWQgMTIgZGF5cyBhZ28KVHJ1bXAgV29uIExhc3QgTmlnaHQKVGhleSB3aWxsIGFsc28gYmUgYWJsZSB0byBwcm92aWRlIHlvdSB3aXRoIGFuIG91dHNpZGUgb3BpbmlvbiBmcm9tIHNvbWVvbmUgd2hvIGlzIGxvb2tpbmcgb3V0IGZvciB5b3VyIGJlc3QgaW50ZXJlc3RzLi4gCk9uZSBjYW4gc2ltcGx5IGVuY291bnRlciB0aGUgcXVlcnkgb2Ygd2h5IHdvbWVuIGdhbWJsZSBvbmxpbmUgZWZmb3J0bGVzc2x5IGJ5IHNpbXBseSBzYXlpbmcgdG8gYXZvaWQgYm9yZWRvbSwgdGhlaXIgbG9uZWxpbmVzcyBhbmQgYWxzbyB0byBicmVhayBmcmVlLiBUaGUgYWZvcmVzYWlkIHJlYXNvbnMgYXJlIHRoZSBkeW5hbWljIGNhdXNlcyBmb3IgdGhlIHdvbWVuIHRvIGdhbWJsZSBvbmxpbmUgb24gU2xvdCBNYWNoaW5lcywgYW5kIFZpZGVvIFBva2VyLgpJbnNnZXNhbXQgdW50ZXJzY2hlaWRldCBtYW4gaW0gQXl1cnZlZGEgMTAgS29uc3RpdHV0aW9uc3R5cGVuLiAKSGVucnkgdGltb3JlICBhbmQgTXJzLiAKTm9uIHNldWxlbWVudCwgbGVzIENSUyBuJ29udCBwYXMgdm9jYXRpb24gIHRyZSBkZXMgYWN0ZXVycyBkZXMgb3ByYXRpb25zIGRlIGRtYW50bGVtZW50IGRlIHJzZWF1eCBkZSB2ZW50ZSBkZSBzdHVwZmlhbnRzIG8gZGUgcHJveG50aXNtZSwgbWFpcyBpbHMgc29udCB1biBsbWVudCBmb3J0IHBvdXIgc2lnbmlmaWVyIHF1ZSBjZSBxdWFydGllciBlc3Qgc291cyB0ZW5zaW9uLiBVbiBDUlMgc2UgbW9udHJlIGV0IG4nYWdpdCBxdWUgdHJzIHJhcmVtZW50LiBMZXVyIHByc2VuY2UgY3IgdW4gc2VudGltZW50IHRyYW5nZSBkJ3RyZSBkYW5zIHVuZSB6b25lIGQnZXhjZXB0aW9uLCBkYW5nZXJldXNlIGV0IGluc2N1cmUsIGNvbnRyYWlyZW1lbnQgIGxhIHByc2VuY2UgZGUgcG9saWNpZXJzICJub3JtYXV4IiBxdWkgZG9ubmVudCBwbHVzIGwnaW1wcmVzc2lvbiBkJ3RyZSBkYW5zIHVuIHF1YXJ0aWVyIGNvbW1lIGxlcyBhdXRyZXMuLiAKT2RkcyBhcmUgeW91IHdpbGwgbGlrZWx5IHNldHRsZSBvdXQgb2YgY291cnQgdGhlcmUgYW5kIGNhbiBwYXkgdG8gcmVwYWlyIHRoZSB3YWxsLiAKSWYgeW91IHRyeSB0byBtb3ZlIGl0IHVwIHRvIDE1IG1pbnV0ZSBzZXNzaW9ucyBhbmQgaXQgaHVydGluZyB5b3VyIDUvNSBoYWJpdCwganVzdCBiYWNrIHRoZSB0aW1lIGRvd24gYWdhaW4uIEkgY2FuIGdpdmUgeW91IGEgdmlkZW8gaWYgeW91IHdhbnQgb3IgYW5zd2VyIGFueSBxdWVzdGlvbnMgeW91IGhhdmUuIE1lZGl0YXRpb24gYnJpbmdzIGJsaXNzIGFuZCBjYW4gc29sdmUgYSBsb3Qgb2YgcHJvYmxlbXMgYnkgaXRzZWxmLCBvdmVyIHRpbWUuLiAKSGF2ZSB5b3UgZXZlciBzZWVuIGEgY2hpcCBzZXQgYXMgc3RyaWtpbmcgYXMgdGhlIDEwMCBQYXVsc29uIFBoYXJvYWhzIENsdWIgUG9rZXIgQ2hpcCBTZXQ/IEl0IGlzIGRvdWJ0ZnVsIHRoYXQgeW91IGhhdmUgY29uc2lkZXJpbmcgYWxsIHRoZSB1bmlxdWUgY3JhZnRzbWFuc2hpcCB0aGF0IGhhcyBnb25lIGludG8gdGhlIGRldmVsb3BtZW50IG9mIHRoZXNlIGNoaXBzLiBUaGVzZSBhcmUgbm90IGdlbmVyaWMgcG9rZXIgY2hpcHMgdGhhdCB5b3UgY2FuIHB1cmNoYXNlIGluIGEgY29udmVuaWVuY2Ugc3RvcmUuIApJZiBEZWFsZXIgcXVhbGlmaWVzLCBwbGF5ZXJzIG9uZSBhdCBhIHRpbWUgdHJpZXMgdG8gYmVhdCB0aGUgRGVhbGVycyBoYW5kIGFuZCBwYXlvdXRzIGFyZSBhcHByb3ByaWF0ZWx5IHBhaWQgb3V0LiAoRnVsbCBBbnN3ZXIpLiAKRnJvbSBoYXZpbmcgdG8gcmVhY3QgdG8gYSBmcmF1ZCBhdG9taWMgYm9tYi4gQWxlcnQ6IEx0LiBCeXJkIHN1Y2NlZWRzLCB0aGUgWm9yaWFucyBhcmUgZXhwb3NlZCwgYW5kIHRoZXkgb2YgY291cnNlIGJsb3cgdGhlbXNlbHZlcyB0byBraW5nZG9tIGNvbWUgaW4gdGhlIGVuZC4uIApIZSByYWlzZXMgYW5kIHNoZSB0ZWxscyBoaW0gdGhhdCBoZSBtYWtpbmcgYW4gYW1hdGV1ciBtb3ZlIGFuZCBzaGUgaG9wZXMgaGUgZW5qb3lzIHRoZSBmYWN0IHRoYXQgdGhlIGhvdXNlIHdpbGwgdGFrZSBoYWxmIHRoZSBwb3QgaW4gcmFrZSBpZiBpdCBnb2VzIHRvIGEgZmxvcC4uIApEaiB2b3F1IHBhciBsZSBwcmZldCwgSi4gUmlnb24gY29uZmlybWUgYmllbiBsZSBub3V2ZWF1IHByaW10cmUgZGUgbGEgWlNQLCAiIGxlIGJhc3NpbiAiIHBvdXIgcmVwcmVuZHJlIHNlcyB0ZXJtZXMuIApUaGUgc3VzcGVjdCB3YXMgYXJyZXN0ZWQgZm9yIHRoZWZ0IG9mIGRvbWVzdGljIGFuaW1hbCBhbmQgZGlzb3JkZXJseSBjb25kdWN0LiAKTm90IGV2ZXIgaGF2aW5nIGJvdWdodCBhIHByb3BlcnR5IHRoYXQgdGhlIHNlbGxlciB3YW50ZWQgdG8gdXNlIGEgMTAzMSBleGNoYW5nZSwgdGhlcmUgYXJlIHZlcnkgZmluZSBydWxlcyBhYm91dCBhIHByb3BlcnRpZXMgdGl0bGUgaW4gdGhlIHRyYW5zZmVyIG9mIGEgMTAzMSBleGNoYW5nZS4gCldBU0hJTkdUT04gKEFQKSAgIEFudG9uaW5TY2FsaWEsIHRoZSBpbmZsdWVudGlhbCBjb25zZXJ2YXRpdmUgYW5kIG1vc3QgcHJvdm9jYXRpdmUgbWVtYmVyIG9mIHRoZSBTdXByZW1lIENvdXJ0LCBoYXMgZGllZCwgbGVhdmluZyB0aGUgaGlnaCBjb3VydCB3aXRob3V0IGl0cyBjb25zZXJ2YXRpdmUgbWFqb3JpdHkgYW5kIHNldHRpbmcgdXAgYW4gaWRlb2xvZ2ljYWwgY29uZnJvbnRhdGlvbiBvdmVyIGhpcyBzdWNjZXNzb3IgaW4gdGhlIG1hZWxzdHJvbSBvZiBhIHByZXNpZGVudGlhbCBlbGVjdGlvbiB5ZWFyLiBTY2FsaWEgd2FzIDc5LiBNYXJzaGFscyBTZXJ2aWNlIGluIFdhc2hpbmd0b24uIFRoZSBjYXVzZSBvZiBkZWF0aCB3YXMgbm90IGltbWVkaWF0ZWx5IGtub3duLiBBIGdyYXkgaGVhcnNlIHdhcyBzZWVuIGF0IHRoZSBlbnRyYW5jZSB0byB0aGUgQ2lib2xvIENyZWVrIFJhbmNoLCBuZWFyIFNoYWZ0ZXIsIG9uIFNhdHVyZGF5IGFjY29tcGFuaWVkIGJ5IGFuIFNVVi4KT2JzZXJ2YXRpb25zVGhlIHJlcXVpcmVtZW50cyBmb3IgdGhlIGluaXRpYWwgb2JzZXJ2YXRpb25zIGFyZS4gClBsdXMgZGFya2dsYXNzIG1pY3JvdHViZXMgKGJ1dCBJIGRvdWJ0IHRoYXQgZml0IG15IHN0eWxlLCBJIGRvbiBrbm93IHRoZWlyIHZlcnNhdGlsaXR5IGFuZCBldmVyeSBkZW1vIHZpZGVvIGlzIGVzc2VudGlhbGx5IG1ldGFsIG9yIHNvbWV0aGluZyBtdWNoIG11Y2ggaGVhdmllciB0aGFuIEkgbmVlZCkuIFRoZXkgYWxzbyBoYXZlIHNvbWUgb2xkZXIgRWRlbnMgYW5kIGEgR2VueiBCZW56IFNodXR0bGUgMyAod2hpY2ggbWlnaHQgbm90IGhhdmUgZW5vdWdoIHBvd2VyIGZvciBtZSkuIApBIGN1cGNha2Ugd2l0aCBhIHNpZGUgb2YgaGVhbHRoIGNhcmUKSnVzdCBhZGQgUG9rZXIsIEJsYWNramFjaywgYW5kIG1heWJlIGEgZmV3IG90aGVyIGNhcmQgZ2FtZXMgYW5kIHNlcGFyYXRlIHRoZSBjdXJyZW5jeSB0byBwdXJlbHkgbm9uIHB1cmNoYXNhYmxlIGdvbGQgb3IgaXQgb3duIGNoaXBzLCBhbmQgb29vaGhoaCBib3kgeW91IGdldCBhIGJ1bmNoIG9mIHBsYXllcnMgYmFjay4gTm90IGV2ZW4gZXhhZ2dlcmF0aW5nLCB0aGVyZSBoYWQgYmVlbiBtdWx0aXBsZSB0aW1lcyB3aGVyZSBJIGp1c3QgcG9wIGludG8gdGhlIHNpbmdsZSBwbGF5ZXIsIHBsYXkgYSBmZXcgcm91bmRzIG9mIHBva2VyKG1vcmUgbGlrZSBhIGhvdXJzIHdvcnRoIG9mIHR3bykgYW5kIGRpcCBvdXQgd2hlbiBJIGxvc3QgdG8gbXVjaCBtb25leS4gSXQgd291bGQgYmUgc28gbXVjaCBtb3JlIGZ1biBhZ2FpbnN0IG90aGVyIHBsYXllcnMsIExJS0UgV0UgQ09VTEQgSU4gUkQxIQpZb3UgbWlnaHQgYmUgd29uZGVyaW5nIGFib3V0IHBsYXN0aWMgc3VyZ2VyeSwgc3BlY2lmaWNhbGx5IHdoZXJlIGl0IGNhbWUgZnJvbS4gClp3aWtzem9uZSB3cHl3eSB6IFZBVCBkemlraSBub3d5bSBtaWVqc2NvbSBwcmFjeSBpIHp3aWtzemVuaXUgcHJ6eWNob2R3IGdvc3BvZGFyc3R3IGRvbW93eWNoOiA1IDcgbWlsaWFyZHcgem90eWNoClRoZXkgYXJlIGNvbmZpZGVudCBpbiB0aGVpciBza2lsbHMgdG8gcmVhZCBwbGF5ZXJzIHRoYXQgdGhleSBkb24ndCBoYXZlIHRvIGJldCBvbiBldmVyeSAicG9zc2libGUiIGhhbmQgdGhleSBjb3VsZCBnZXQuIApUaGV5IG5vdCBjb21pbmcgYmFjayBpZiB0aGUgZ3V5IG5leHQgdG8gdGhlbSBzdGFuZHMgdXAgYW5kIHllbGxzIHdoZW4gaGlzIHRvcCBwYWlyIGRvZXNudCBob2xkIHVwLiAKV2VsY29tZSB0byBXaWxkZXJuZXNzIEJhY2twYWNraW5nCkZvciBTdGFyZmllbGQgdG8gYmUgaW4gYSBwbGF5YWJsZSBzdGF0ZSBieSB0aGVuLCBJIHNheSB0aGV5IHdlbGwgaW50byBmdWxsIHByb2R1Y3Rpb24gYW5kIHRoZW4gc29tZS4gCldoaWxlIHBvdHMgZG8gZ2V0IGJpZywgSSBmb3Igb25lIGxvc3QgYW4gOGsgcG90IGluIDUwMCBtYXggMi81IGdhbWUsIHRoZXkgYXJudCByZWFsbHkgdGhhdCBvdXQgb2YgY29udHJvbC4gCk11bHRpcGxlIHN0dWRpZXMgYXJlIHJlcXVpcmVkIHRvIHJlYWxseSBlc3RhYmxpc2ggc29tZXRoaW5nLilUZXhhczEwMyAgMSBwb2ludCAgc3VibWl0dGVkIDE5IGhvdXJzIGFnb0kgdGhpbmsgSSBhbSBub3QgYSBjbGltYXRlIHNjaWVudGlzdCwgYnV0IEkgZG8gaGF2ZSB0aGUgY2FwYWNpdHkgdG8gZXZhbHVhdGUgY2xpbWF0ZSByZXNlYXJjaC4gTWV0aG9kb2xvZ3ksIHN0YXRzLCBldGMgZXRjLCBhbmQgdG8gZXZhbHVhdGUgdGhlIG9waW5pb25zIG9mIG90aGVycy4gSSdtIHN1cmUgeW91IGRvIHRvbywgSSdtIG5vdCB0cnlpbmcgdG8gZGlzY3JlZGl0IG9yIHRocm93IG91dCBhcyBob21pbmVtIGF0dGFja3MuQnV0IHRoZSB0aXRsZSBvZiB0aGlzIHRocmVhZCB3YXMgYWJvdXQgYW4gYXJ0aWNsZSB0aGF0IGlzIGRlc2NyaWJlZCBhcyB0aGUgZ29sZCBzdGFuZGFyZCB0aGF0IGlzIGludGVycHJldGVkIGJ5IG1lZGlhIGFzIHByb29mIG9mIGdsb2JhbCB3YXJtaW5nLiAKSWYgeW91IG5vdCB3YW50aW5nIHRvIGdvIHRvIGEgZ3ltLCBteSBvbmx5IHN1Z2dlc3Rpb24gaXMgdG8gZ2V0IHNvbWUgd2VpZ2h0cyBhbmQgZG8gaXQgYXQgaG9tZS4gUGVyaGFwcyBzZWFyY2ggZm9yIGEgd2VpZ2h0IHRyYWluaW5nIERWRCB0aGF0IHlvdSBjYW4gZm9sbG93LgpSYXJlbHkgcGxheSBwb3QgbGltaXQgYmVjYXVzZSwgbGlrZSBubyBsaW1pdCwgb25lIG1pc3Rha2UgY2FuIGJlIGV4dHJlbWVseSBleHBlbnNpdmUuLiAKRGlkIHlvdSBoYXBwZW4gdG8gY2F0Y2ggdGhlIGZyb250IHBhZ2UgdGhyZWFkIGF3aGlsZSBiYWNrLCBhYm91dCBob3cgYW50aSBsaXR0ZXJpbmcgY2FtcGFpZ25zIHdlcmUgY3JlYXRlZCB0byBzaGlmdCBibGFtZSBmcm9tIHdhc3RlZnVsIGluZHVzdHJpZXMgb250byBjb25zdW1lcnMsIHNvIHRoYXQgdGhvc2UgaW5kdXN0cmllcyB3b3VsZG4gYmUgcmVndWxhdGVkPyBJdCByZWFsbHkgY2hhbmdlZCBteSB0aGlua2luZyBvbiB0aGlzLiBJdCBwb2ludGxlc3MgdG8gYXNrIHRlbnMgb2YgbWlsbGlvbnMgb2YgcGVvcGxlIHRvIGNoYW5nZSB0aGVpciBiZWhhdmlvciB3aGVuIHlvdSBjb3VsZCBqdXN0IHB1dCBjb21wbGV0ZWx5IHJlYXNvbmFibGUsIGNvbW1vbiBzZW5zZSwgYmVuZWZpY2lhbCB0byBhbGwgcmVndWxhdGlvbnMgb24gYSBoYW5kZnVsIG9mIGluZHVzdHJ5IHByYWN0aWNlcyBhbmQgc29sdmUgdGhlIHByb2JsZW0gYXQgaXRzIHJvb3QuIFRoZSBzYW1lIHRoaW5nIGNhbiBiZSBhcHBsaWVkIHRvIG91ciBwb2xpdGljYWwgc2l0dWF0aW9uOyBldmVuIGlmIFJlcHVibGljYW4gdm90ZXJzICJzaG91bGQiIGJlIGJsYW1lZCBiYXNlZCBvbiBzb21lIGFic3RyYWN0IGFyZ3VtZW50LCBpdCBjb21wbGV0ZWx5IGltcHJhY3RpY2FsIHRvIGRvIHNvLiAKVGhlIG1haW4gcmVhc29uIHNpbGljb24gaXMgdXNlZCBpcyBpdCBpcyB0aGUgbW9zdCB3ZWxsIGJlaGF2ZWQgc2VtaWNvbmR1Y3RvciBhbmQgaGFzIGluc3VsYXRpbmcgc29saWQgb3hpZGVzLiAKSSBkb24ndCBtYWtlIHVwIHRoZSBmYWN0cy4gClRoZSBiZXN0IG9mIGFsbCBpcyB0aGF0IHRoZSBwcmljZXMgZG9uJ3QgdGVuZCB0byBzdWZmZXIgYXMgYSByZXN1bHQgb2YgdGhhdC5TcG9ydHMgYW5kIEluIFBsYXlUaGUgYmV0dGluZyByYW5nZSBpcyBlcXVhbCB0byBwaGVub21lbmFsIGFuZCBiZXR0aW5nIG9wdGlvbnMgYXJlIG9mZmVyZWQgaW4gdGhlIHRyYWRpdGlvbmFsIGZvcm1zIHdpdGggYW4gYXJyYXkgb2YgZXhvdGljIGFuZCBwcm9wb3NpdGlvbiBiZXRzIGZvciBzcG9ydHMgbGlrZSBjeWNsaW5nLCB2b2xsZXliYWxsLCBnb2xmLCBib3hpbmcgZXRjLiwgYW5kIHNpbmNlIGJldDM2NSBpcyBhbiBpbnRlcm5hdGlvbmFsIHdlYiBzaXRlIGludGVuZGVkIGZvciB0aGUgdXNlIGJ5IHB1bnRlcnMgYWxsIG92ZXIgdGhlIHdvcmxkLCBpdCBvZmZlcnMgMyBkaWZmZXJlbnQgb2RkIGZvcm1hdHM6IGRlY2ltYWwsIGZyYWN0aW9uYWwgYW5kIEFtZXJpY2FuIGZvcm1hdC4gCkF0IHRoaXMgcG9pbnQgaXQgbm90IHJlYWxseSBhIGdyZWF0IFJPSSByZWxhdGl2ZSB0byByaXNrIGFuZCBlZmZvcnQgdW5sZXNzIHRoZSBwcm9wZXJ0eSB2YWx1ZSBjb250aW51ZXMgdG8gYXBwcmVjaWF0ZSAod2hpY2ggc2VlbXMgdW5saWtlbHkpLiBBZGRpdGlvbmFsbHkgc2VsbGluZyBhIHByb3BlcnR5IGlzIGEgbG90IG1vcmUgd29yayBhcyBhIG5vbiByZXNpZGVudCBzbyBhdCB0aGlzIHBvaW50IEkgcHJvYmFibHkganVzdCBnb2luZyB0byBzaXQgb24gaXQgdW50aWwgc3VjaCBhIHRpbWUgSSBtb3ZlIGJhY2sgb3IgcG9zc2libHkgd2hlbiBteSBtb3J0Z2FnZSBjb21lcyB1cCBmb3IgcmVuZXdhbC4KQW5kIHRvIGZ1cnRoZXIgdGhhdCBwb2ludCwgaGUgbmV2ZXIgY2FtZSBiYWNrLiBSZXBvcnRlcjogU2hlIHNheXMgRGFtb24ncyBwYWwsIEJlbiBBZmZsZWNrLCB3YXMgYSByZWd1bGFyIHdob3NlIHBlY2hhbnQgZm9yIGdhbWJsaW5nIGhhcyBtYWRlIHRoZSBuZXdzLiBTZWN1cml0eSBhdCB0aGUgaGFyZCByb2NrIGhvdGVsIGFuZCBjYXNpbm8gdG9sZCBBZmZsZWNrIHF1b3RlLCAiWW91J3JlIHRvbyBnb29kIiBhbmQgcG9saXRlbHkgZXNjb3J0ZWQgaGltIGF3YXkgZnJvbSB0aGUgYmxhY2tqYWNrIHRhYmxlLiAKSSBkb24gbmVlZCB0byBiZSBhIGNvYWNoIG9yIGEgdGVhbSBpbnNpZGVyIHRvIGtub3cgaGUgbm90IGEgZmlyc3QgY2hvaWNlIGNiLiAKU28gZGVmaW5pdGVseSB3YWl0aW5nIGZvciBjbG9zZXIgdG8gcmVsZWFzZSBhbmQgc29tZSBhY3R1YWwgdGhvcm91Z2ggbG9va3Mgb3IgcmV2aWV3cyBhdCB0aGlzIHBvaW50LgpSZWxlYXNlIG9mIG11c2NsZSB0ZW5zaW9uIGFuZCBwYWluCkJ1dCB0aHJlZSB5ZWFycyBhZ28sIG9uIEF1Zy4gMTQsIGFmdGVyIGEgdHdvIHdlZWsgc2llZ2UsIElTSVMgb3JkZXJlZCB0aGUgZW50aXJlIHBvcHVsYXRpb24gb2YgS29jaG8gdG8gYSBzY2hvb2x5YXJkLCB3aGVyZSB0aGV5IGFza2VkIHRoZSBsb2NhbCBsZWFkZXIgaWYgdGhlIHZpbGxhZ2VycyB3b3VsZCBjb252ZXJ0IHRvIElzbGFtLiAKQ2xpY2sgb24gJyh0aGlzIHdlZWsncyBkYXRlKSBGcm9udCBQYWdlJy4gCkl0IHNvdW5kcyBsaWtlIHRoZSBtb3J0Z2FnZSBoYWQgYSBsb3dlciBpbnRlcmVzdCByYXRlIHRoYW4gd2hhdCBNSUwgaXMgY2hhcmdpbmcsIGFuZCB5b3VyIHdpZmUgbWlzc2VkIG91dCBvbiB0YWtpbmcgdGF4IGRlZHVjdGlvbnMgZm9yIHRoZSBpbnRlcmVzdCBvbiB0aGUgbW9ydGdhZ2UuIEhlciBtb20gZGVsaWJlcmF0ZWx5IHB1dCBoZXIgaW4gZGVlcGVyIGRlYnQgc28gaGVyIG1vbSBjb3VsZCBlYXJuIG1vbmV5LgpTaW5jZSAxOTgwLCB0aGUgbnVtYmVyIG9mIHJlc2lkZW50cyBoYXMgbW9yZSB0aGFuIHF1YWRydXBsZWQgdG8gbW9yZSB0aGFuIHR3byBtaWxsaW9uIHRvZGF5LiBXaGlsZSB0aGUgR3JlYXQgUmVjZXNzaW9uIGJyaWVmbHkgZGVudGVkIHRoZSB0cmVuZCAgIHRoZSBwb3B1bGF0aW9uIGRyb3BwZWQgZm9yIHRoZSBmaXJzdCB0aW1lIGluIGdlbmVyYXRpb25zIHRocm91Z2ggMjAwOCwgYW5kIGFnYWluIGluIDIwMTEgICB0aGUgbGFzdCBmaXZlIHllYXJzIChQREYpIGhhdmUgc2VlbiBhIHJldHVybiB0byBtb2RlcmF0ZSBncm93dGguLiAKRGlkbiBsaWtlIG1lLiAKVGhlIG90aGVyIHRoaW5nIGlzIHRoYXQgcmVsYXRpb25zaGlwIGhhdmUgdXBzIGFuZCBkb3ducy4gTm93IGlmIHRoaXMgd2FzIGFsd2F5cyB0aGUgY2FzZSB0aGF0J3Mgb25lIHRoaW5nLCBidXQgaWYgdGhpcyBpcyBhIG5ld2VyIGlzc3VlICAgdGhhdCBjYW4gaGFwcGVuLiAKSSBzdXJlIENhbmFkYSBjYW4gcmVsYXRlIHRvIHRoYXQgc2luY2Ugd2Ugd2VyZSBhbGwgaW4gdGhlIE5ldyBXb3JsZC4uIApUaGVyZSBpcyBhIEtyaXNweSBLcmVhbSBkb3duIHRoZSBzdHJlZXQgZnJvbSB3aGVyZSBJIGxpdmUgYW5kIGl0IHNlZW1zIGxpa2Ugb25jZSBhIG1vbnRoIG9yIHNvIHRoZXkgZG8gc29tZSBraW5kIG9mIGZyZWUgcHJvbW90aW9uLiBFaXRoZXIgYnV5IGEgZG96ZW4gZ2V0IGEgZG96ZW4gZnJlZSwgb3IgdGhlaXIgdGFsayBsaWtlIGEgcGlyYXRlIGFuZCBnZXQgYSBmcmVlIGRvdWdobnV0IGRheSBldGMuIEV2ZXJ5IHRpbWUgdGhlcmUgaXMgYW4gaW5zYW5lIGxpbmUuLiAK|<---