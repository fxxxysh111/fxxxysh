<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html class="no-js" lang="ko" xml:lang="ko" xmlns:fb="http://ogp.me/ns/fb#">
 <head>
  <meta content="-FbcGJL6VLefS4uRfDR1U-NYpWg1gPzAgE7YPGk5M-c" name="google-site-verification"/>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="Hankyoreh, Inc" name="copyright"/>
  <meta content="262286613837221" property="fb:app_id"/>
  <meta content="article" property="og:type"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title"/>
  <meta content="http://img.hani.co.kr/imgdb/resize/2018/0830/1535616632_00502786_20180830.JPG" property="og:image"/>
  <meta content="image/jpeg" property="og:image:type"/>
  <meta content="334" property="og:image:width"/>
  <meta content="573" property="og:image:height"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
  <title>
   [area1][mkey1][keyword1][symbolx][area1][keywordx][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="이정하" property="dable:author"/>
  <meta content="arti/society/area/859966.html" property="dable:item_id"/>
  <meta content="http://flexible.img.hani.co.kr/v2/width108/imgdb/resize/2018/0830/1535616632_00502786_20180830.JPG" property="dable:image"/>
  <meta content="사회" property="article:section"/>
  <meta content="전국" property="article:section2"/>
  <meta content="2018-08-30T16:42:01+09:00" property="article:published_time"/>
  <meta content="751651498280110,113685238657736" property="fb:pages">
  </meta>
 </head>
 <body>
  <div class="skipMenu" title="스킵 메뉴">
   <a href="e">
    본문 바로가기
   </a>
  </div>
  <div class="ad_top" id="ad_top">
   <h3 class="blind">
    [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
   </h3>
   <span class="close" onclick="javascript:hideTopAd();">
   </span>
  </div>
  <div class="" id="header">
   <div id="header-logo-article">
    <h1 class="logo">
     [area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]
    </h1>
    <div class="menu-all" onclick="javascript:setMenuAllPosition(1); javascript:toggleLayerMenuSitemap(this);">
     <span class="icon">
      <span class="blind">
       메뉴 아이콘
      </span>
     </span>
    </div>
    <div class="header-ect">
     <h2 class="blind">
      [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
     </h2>
     <div id="login-box-parent">
      <div class="top_login" onclick="javascript:toggleLayerLoginMenu(this);">
       <span class="blind">
        로그인아이콘[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[link][search][search][link]
       </span>
      </div>
      <div class="off" id="login-box" style="opacity:0;height:0px;">
       <span class="icon-aw">
       </span>
       <div class="login-btn" onfocusin="javascript:openLayerLoginMenu(this);" onfocusout="javascript:closeLayerLoginMenu(this);">
        <a class="link1" href="/Hani/User?site=news" title="회원가입">
         회원가입
        </a>
        <a class="link2" href="/Hani/User?command=form&amp;formtype=login&amp;site=news&amp;nexturl=http%3A%2F%2Fwww.hani.co.kr%2Farti%2Fsociety%2Farea%2F859966.html" title="로그인">
         로그인
        </a>
       </div>
      </div>
     </div>
     <div id="search_form">
      <div class="open_search" onclick="javascript:openLayerSearchForm(this);jQuery('.form_search .form1 .text').focus();">
      </div>
      <div class="form_search off" style="opacity:0;">
       <span class="close" onclick="javascript:closeLayerSearchForm(this);">
       </span>
       <div class="form0">
        <div class="form1" onfocusin="javascript:openLayerSearchForm(this);" onfocusout="javascript:closeLayerSearchForm(this);">
         <form action="/Search" method="post" name="frmsearch" title="검색">
         </form>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
   <div id="top-fix-margin">
   </div>
   <div id="header-top-slide">
    <div class="header" id="header-slide">
     <div class="slide_box" data-slide-no="0" data-status="1">
      <ul class="slide_part slide_part0" onfocusin="javascript:slideHaniLayerGoLayer('#header-slide.header', 0);" style="left:0%;">
       <li class="first">
        [ahref]
        
       </li>
       <li class="">
        <a href="/arti/society/society_general/874107.html?_fr=st1">
         <strong>
          변호사들 “이재명 ‘형 강제입원’ 유죄면 지사직 유지 못해”
         </strong>
        </a>
       </li>
       <li class="">
        [ahref]
        
       </li>
       <li class="">
        [link]
        
       </li>
      </ul>
      <ul class="slide_part slide_part1" onfocusin="javascript:slideHaniLayerGoLayer('#header-slide.header', 1);" style="left:100%;">
       <li class="first">
        <a href="/arti/politics/assembly/874190.html?_fr=st1">
         <strong>
          구의역 사고 2년여…‘위험 외주화 방지법’ 손도 안 댄 국회
         </strong>
        </a>
       </li>
       <li class="">
        [ahref]
        
       </li>
       <li class="">
        [link]
        
       </li>
       <li class="">
        [link]
        
       </li>
      </ul>
      <ul class="slide_part slide_part2" onfocusin="javascript:slideHaniLayerGoLayer('#header-slide.header', 2);" style="left:100%;">
       <li class="first">
        [link]
        
       </li>
       <li class="">
        <a href="/arti/society/area/874133.html?_fr=st1">
         <strong>
          <font color="#f35213">
           [단독]
          </font>
          ‘박정희 예산’은 통과, ‘노동자 예산’은 싹둑
         </strong>
        </a>
       </li>
       <li class="">
        <a href="/arti/society/society_general/874192.html?_fr=st1">
         <strong>
          ‘제왕적 대법원장’ 그대로…대법원 사법개혁안 대폭 후퇴
         </strong>
        </a>
       </li>
       <li class="">
        [ahref]
        
       </li>
      </ul>
     </div>
     <div class="slide-btn-area" title="슬라이드컨트롤버튼">
      <button id="s-prev" onclick="javascript:slideHaniLayer('#header-slide.header', -1);" title="이전" type="button">
       <span class="blind">
        이전내용
       </span>
      </button>
      <button id="s-next" onclick="javascript:slideHaniLayer('#header-slide.header', +1);" title="다음" type="button">
       <span class="blind">
        다음내용<li>[search]</li>[link]<li>[link]</li>[ahref]<li>[ahref]</li>[link]<li>[link]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[link]</li>[search]
       </span>
      </button>
     </div>
    </div>
   </div>
   <div class="off" id="menu-all" style="opacity:0;">
    <div class="over-list article-plus">
     <div class="menu-all-box" onfocusin="javascript:openLayerMenuSitemap(this);" onfocusout="javascript:closeLayerMenuSitemap();">
      <table>
       <tbody>
        <tr class="first">
         <th>
          [link]
          
         </th>
         <td>
          <ul>
          </ul>
         </td>
        </tr>
        <tr class="">
         <th>
          [link]
          
         </th>
         <td>
          <ul>
           <li class="">
            <a href="/arti/politics/politics_general/home01.html">
             정치일반
            </a>
           </li>
           <li class="">
            <a href="/arti/politics/bluehouse/home01.html">
             청와대
            </a>
           </li>
           <li class="">
            <a href="/arti/politics/assembly/home01.html">
             국회·정당
            </a>
           </li>
           <li class="">
            [link]
            
           </li>
           <li class="">
            <a href="/arti/politics/defense/home01.html">
             국방·북한
            </a>
           </li>
           <li class="">
            [link]
            
           </li>
           <li class="last">
            [ahref]
            
           </li>
          </ul>
         </td>
        </tr>
        <tr class="">
         <th>
          <a href="/arti/society/home01.html">
           사회
          </a>
         </th>
         <td>
          <ul>
           <li class="">
            <a href="/arti/society/society_general/home01.html">
             사회일반
            </a>
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            [link]
            
           </li>
           <li class="">
            [link]
            
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            <a href="/arti/society/health/home01.html">
             의료·건강
            </a>
           </li>
           <li class="">
            [link]
            
           </li>
           <li class="">
            <a href="/arti/society/obituary/home01.html">
             궂긴소식
            </a>
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            <a href="/arti/society/ngo/home01.html">
             엔지오
            </a>
           </li>
           <li class="">
            <a href="/arti/society/schooling/home01.html">
             교육
            </a>
           </li>
           <li class="last">
            [link]
            
           </li>
          </ul>
         </td>
        </tr>
        <tr class="">
         <th>
          [ahref]
          
         </th>
         <td>
          <ul>
          </ul>
         </td>
        </tr>
        <tr class="">
         <th>
          <a href="/arti/economy/home01.html">
           경제 Weconomy
          </a>
         </th>
         <td>
          <ul>
           <li class="">
            [link]
            
           </li>
           <li class="">
            [link]
            
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            [link]
            
           </li>
           <li class="">
            <a href="/arti/economy/property/home01.html">
             부동산
            </a>
           </li>
           <li class="">
            <a href="/arti/economy/consumer/home01.html">
             쇼핑·소비자
            </a>
           </li>
           <li class="">
            [link]
            
           </li>
           <li class="">
            <a href="/arti/economy/working/home01.html">
             직장·취업
            </a>
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            [link]
            
           </li>
           <li class="last">
            [link]
            
           </li>
          </ul>
         </td>
        </tr>
        <tr class="">
         <th>
          [link]
          
         </th>
         <td>
          <ul>
           <li class="">
            [link]
            
           </li>
           <li class="">
            <a href="/arti/international/globaltopic/home01.html">
             해외토픽
            </a>
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            [link]
            
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            <a href="/arti/international/china/home01.html">
             중국
            </a>
           </li>
           <li class="">
            <a href="/arti/international/japan/home01.html">
             일본
            </a>
           </li>
           <li class="">
            <a href="/arti/international/arabafrica/home01.html">
             중동·아프리카
            </a>
           </li>
           <li class="">
            <a href="/arti/international/internationalunit/home01.html">
             국제기구·회의
            </a>
           </li>
           <li class="last">
            [ahref]
            
           </li>
          </ul>
         </td>
        </tr>
        <tr class="">
         <th>
          [link]
          
         </th>
         <td>
          <ul>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            <a href="/arti/culture/movie/home01.html">
             영화·애니
            </a>
           </li>
           <li class="">
            <a href="/arti/culture/entertainment/home01.html">
             방송·연예
            </a>
           </li>
           <li class="">
            <a href="/arti/culture/travel/home01.html">
             여행·여가
            </a>
           </li>
           <li class="">
            [link]
            
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            <a href="/arti/culture/book/home01.html">
             책과 생각
            </a>
           </li>
           <li class="last">
            [ahref]
            
           </li>
          </ul>
         </td>
        </tr>
        <tr class="">
         <th>
          [ahref]
          
         </th>
         <td>
          <ul>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            <a href="/arti/sports/baseball/home01.html">
             야구·MLB
            </a>
           </li>
           <li class="">
            <a href="/arti/sports/golf/home01.html">
             골프
            </a>
           </li>
           <li class="">
            <a href="/arti/sports/gameschedule/home01.html">
             경기일정
            </a>
           </li>
           <li class="">
            [link]
            
           </li>
           <li class="last">
            <a href="/arti/sports/baduk/home01.html">
             바둑
            </a>
           </li>
          </ul>
         </td>
        </tr>
        <tr class="">
         <th>
          <a href="/arti/science/home01.html">
           미래과학
          </a>
         </th>
         <td>
          <ul>
           <li class="">
            [link]
            
           </li>
           <li class="">
            [link]
            
           </li>
           <li class="">
            <a href="/arti/science/technology/home01.html">
             기술
            </a>
           </li>
           <li class="">
            [link]
            
           </li>
           <li class="last">
            <a href="/arti/issue/home01.html">
             시각
            </a>
           </li>
          </ul>
         </td>
        </tr>
        <tr class="">
         <th>
          [link]
          
         </th>
         <td>
          <ul>
           <li class="">
            <a href="/arti/animalpeople/wild_animal/home01.html">
             야생동물
            </a>
           </li>
           <li class="">
            <a href="/arti/animalpeople/companion_animal/home01.html">
             반려동물
            </a>
           </li>
           <li class="">
            <a href="/arti/animalpeople/farm_animal/home01.html">
             농장동물
            </a>
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="last">
            <a href="/arti/animalpeople/ecology_evolution/home01.html">
             생태와진화
            </a>
           </li>
          </ul>
         </td>
        </tr>
        <tr class="">
         <th>
          <a href="/arti/opinion/home01.html">
           오피니언
          </a>
         </th>
         <td>
          <ul>
           <li class="">
            <a href="/arti/opinion/editorial/home01.html">
             사설
            </a>
           </li>
           <li class="">
            <a href="/arti/opinion/column/home01.html">
             칼럼
            </a>
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="last">
            <a href="/arti/opinion/dica/home01.html">
             렌즈세상
            </a>
           </li>
          </ul>
         </td>
        </tr>
        <tr>
         <th class="title" colspan="2">
          <a href="/arti/cartoon/home01.html">
           만화
          </a>
          <span class="bar">
           |<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link][ahref]<li>[search]</li><li>[ahref]</li>
          </span>
          [ahref]
          
          <span class="bar">
           |
          </span>
          [link]
          
          <span class="bar">
           |[link][search][search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link]<li>[ahref]</li>[search]<li>[link]</li><li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][search][search]<li>[ahref]</li>[ahref]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
          </span>
          [link]
          
          <span class="bar">
           |[ahref][search]<li>[link]</li><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
          </span>
          <a href="/arti/THEME/quiz/home01.html">
           퀴즈
          </a>
          <span class="bar">
           |
          </span>
          <a href="/arti/SERIES/home01.html">
           연재
          </a>
          <span class="bar">
           |
          </span>
          [link]
          
          <span class="bar">
           |
          </span>
          <a href="/arti/SECTION/education/home01.html">
           함께하는교육
          </a>
          <span class="bar">
           |<li>[search]</li>[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
          </span>
          <a href="/arti/economy/heri_review/home01.html">
           헤리리뷰
          </a>
          <span class="bar">
           |[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[ahref]<li>[ahref]</li><li>[link]</li>[ahref][ahref][ahref][link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
          </span>
          <a href="/arti/THEME/people/home01.html">
           사람
          </a>
          <span class="bar">
           |
          </span>
          <a href="/arti/SECTION/exploratory/home01.html">
           탐사보도
          </a>
          <span class="bar">
           |[search][ahref]<li>[ahref]</li><li>[link]</li>[ahref]<li>[link]</li>[ahref][link]
          </span>
          [ahref]
          
         </th>
        </tr>
        <tr class="">
         <th>
          <a href="/" target="_blank">
           스페셜
          </a>
         </th>
         <td>
          <ul>
           <li class="">
            [link]
            
           </li>
           <li class="">
            <a href="/" target="_blank">
             휴심정
            </a>
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            <a href="/" target="_blank">
             사진마을
            </a>
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            <a href="/arti/SERIES/485">
             미래 창
            </a>
           </li>
           <li class="last">
            [link]
            
           </li>
          </ul>
         </td>
        </tr>
        <tr class="">
         <th>
          <a href="/">
           포토
          </a>
         </th>
         <td>
          <ul>
           <li class="">
            [link]
            
           </li>
           <li class="">
            [link]
            
           </li>
           <li class="">
            <a href="/photo/home01.html">
             최신포토뉴스
            </a>
           </li>
           <li class="last">
            <a href="/?sec=098">
             카드뉴스
            </a>
           </li>
          </ul>
         </td>
        </tr>
        <tr class="">
         <th>
          [link]
          
         </th>
         <td>
          <ul>
           <li class="">
            [link]
            
           </li>
           <li class="">
            <a href="/?mid=tv&amp;category=147" target="_blank">
             교양·라이프
            </a>
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            <a href="/?mid=tv&amp;category=149" target="_blank">
             스페셜
            </a>
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="last">
            [link]
            
           </li>
          </ul>
         </td>
        </tr>
        <tr class="">
         <th>
          <a href="#" target="_blank">
           뉴스서비스
          </a>
         </th>
         <td>
          <ul>
           <li class="">
            <a href="/" target="_blank">
             많이본기사
            </a>
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            [link]
            
           </li>
           <li class="">
            <a href="/" target="_blank">
             디지털초판
            </a>
           </li>
           <li class="">
            <a href="/PaperList.aspx" target="_blank">
             PDF서비스
            </a>
           </li>
           <li class="">
            <a href="/arti/RSS/">
             RSS서비스
            </a>
           </li>
           <li class="">
            <a href="/customer_report.html" target="_blank">
             기사제보
            </a>
           </li>
           <li class="last">
            [ahref]
            
           </li>
          </ul>
         </td>
        </tr>
        <tr class="">
         <th>
          <a href="/" target="_blank">
           커뮤니티
          </a>
         </th>
         <td>
          <ul>
           <li class="">
            [link]
            
           </li>
           <li class="">
            <a href="/story" target="_blank">
             이야기
            </a>
           </li>
           <li class="">
            <a href="/blog" target="_blank">
             블로그
            </a>
           </li>
           <li class="last">
            <a href="/today" target="_blank">
             SNS통하니
            </a>
           </li>
          </ul>
         </td>
        </tr>
        <tr class="">
         <th>
          <a href="#" target="_blank">
           매거진
          </a>
         </th>
         <td>
          <ul>
           <li class="">
            [link]
            
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="last">
            [link]
            
           </li>
          </ul>
         </td>
        </tr>
        <tr class="">
         <th>
          <a href="#" target="_blank">
           사업
          </a>
         </th>
         <td>
          <ul>
           <li class="">
            <a href="/" target="_blank">
             한겨레휴센터
            </a>
           </li>
           <li class="">
            <a href="/han2015han/" target="_blank">
             한겨레테마여행
            </a>
           </li>
           <li class="last">
            [ahref]
            
           </li>
          </ul>
         </td>
        </tr>
       </tbody>
      </table>
     </div>
     <span class="close" onclick="javascript:closeLayerMenuSitemap();" style="cursor:pointer;">
     </span>
    </div>
   </div>
   <div id="foot-fix">
    <div class="foot-fix" data-is-on="F" style="bottom:-194px;">
     <div class="title">
      <h3>
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
     </div>
     <div class="footer" id="header-slide">
      <div class="slide_box" data-slide-no="0" data-status="1">
       <ul class="slide_part slide_part0" onfocusin="javascript:slideHaniLayerGoLayer('#header-slide.footer', 0);" style="left:0%;">
        <li class="first">
         <a href="/arti/society/society_general/873971.html?_fr=st4">
         </a>
        </li>
        <li class="">
         <a href="/arti/society/society_general/873763.html?_fr=st4">
          <strong>
           여성 동료 경매한 대학생 동아리…문제 삼자 “페미는 밟아야”
          </strong>
         </a>
        </li>
        <li class="">
         <a href="/arti/economy/finance/873866.html?_fr=st4">
          <strong>
           4조5천억 회계사기 삼성바이오 ‘상장 유지’ 결정…봐주기 논란
          </strong>
         </a>
        </li>
        <li class="">
         <a href="/arti/international/europe/873952.html?_fr=st4">
          <strong>
           망명자 추방 막아라…네덜란드 교회 ‘무기한 예배’ 1100시간째
          </strong>
         </a>
        </li>
       </ul>
       <ul class="slide_part slide_part1" onfocusin="javascript:slideHaniLayerGoLayer('#header-slide.footer', 1);" style="left:100%;">
        <li class="first">
         <a href="/arti/opinion/column/873997.html?_fr=st4">
          <strong>
           [세상 읽기] 더불어한국당이 적폐다 / 권김현영
          </strong>
         </a>
        </li>
        <li class="">
         [ahref]
         
        </li>
        <li class="">
         <a href="/arti/politics/polibar/873720.html?_fr=st4">
          <strong>
           민주당 공약인데…장제원이 경부선 35억 예산 ‘찜’, 왜?
          </strong>
         </a>
        </li>
        <li class="">
         [ahref]
         
        </li>
       </ul>
       <ul class="slide_part slide_part2" onfocusin="javascript:slideHaniLayerGoLayer('#header-slide.footer', 2);" style="left:100%;">
        <li class="first">
         <a href="/arti/politics/bluehouse/873730.html?_fr=st4">
          <strong>
           문 대통령 “한반도 냉전 해체·평화 정착은 인권 위한 것”
          </strong>
         </a>
        </li>
        <li class="">
         [ahref]
         
        </li>
       </ul>
      </div>
      <div class="slide-btn-area" title="슬라이드컨트롤버튼">
       <button id="s-prev" onclick="javascript:slideHaniLayer('#header-slide.footer', -1);" title="이전" type="button">
        <span class="blind">
         이전내용
        </span>
       </button>
       <button id="s-next" onclick="javascript:slideHaniLayer('#header-slide.footer', +1);" title="다음" type="button">
        <span class="blind">
         다음내용<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[link][link][link][search][link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]<li>[link]</li>[ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
        </span>
       </button>
      </div>
     </div>
    </div>
   </div>
  </div>
  <div data-is-on="F" id="top-fix" style="visibility:hidden;opacity:0;">
   <div class="top-fix">
    <div class="article-head2">
     <h1 class="logo">
      <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
     </h1>
     <div class="menu-all" onclick="javascript:setMenuAllPosition(2); javascript:toggleLayerMenuSitemap(this);" style="top:10px;">
      <span class="icon">
       메뉴 아이콘[ahref][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[ahref]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
      </span>
     </div>
     <h4>
      [ahref]
      
      <span class="title">
       송도 아파트 ‘차량 방치 차주’와 ‘자물쇠 주민’…어떤 처벌 받을까요?<li>[ahref]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
      </span>
      [ahref]
      
     </h4>
     <ul class="top-sns" title="공유버튼">
      <li class="sns-f">
       <a href="/sharer/sharer.php?u=http%3A%2F%2Fwww.hani.co.kr%2Farti%2Fsociety%2Farea%2F859966.html" onclick="javascript:return popupHaniWindow(this, '', 800, 300, 'yes', 'yes');" target="_blank">
        <span class="sns-bubble">
         <em id="twCnt">
          <span class="facebook-count">
           0[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[search]</li>[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]
          </span>
         </em>
        </span>
       </a>
      </li>
      <li class="sns-t">
       <a href="/share?text=%EC%86%A1%EB%8F%84+%EC%95%84%ED%8C%8C%ED%8A%B8+%E2%80%98%EC%B0%A8%EB%9F%89+%EB%B0%A9%EC%B9%98+%EC%B0%A8%EC%A3%BC%E2%80%99%EC%99%80+%E2%80%98%EC%9E%90%EB%AC%BC%EC%87%A0+%EC%A3%BC%EB%AF%BC%E2%80%99%E2%80%A6%EC%96%B4%EB%96%A4+%EC%B2%98%EB%B2%8C+%EB%B0%9B%EC%9D%84%EA%B9%8C%EC%9A%94%3F&amp;url=http%3A%2F%2Fwww.hani.co.kr%2Farti%2Fsociety%2Farea%2F859966.html" onclick="javascript:return popupHaniWindow(this, '', 800, 450, 'yes', 'yes');" target="_blank">
       </a>
      </li>
      <li class="sns-s" onclick="javascript:toggleLayerBox(this, '.top-fix', '.sns-s', '#top-share-box');">
       <span class="icon">
        [search][ahref][ahref]<li>[search]</li><li>[link]</li>[search]
       </span>
      </li>
     </ul>
    </div>
    <div class="off" id="top-share-box" style="opacity:0;">
     <div class="top-share-box">
      <span class="icon-aw">
       [search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][search][search][search][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]
      </span>
      <ul class="top-share" title="공유버튼">
       <li class="share-g">
        [ahref]
        
       </li>
       <li class="share-n">
        [link]
        
       </li>
       <li class="share-k">
        [ahref]
        
       </li>
       <li class="share-c">
        <a href="/bi/bi_recommend_pop.php?url=http%3A%2F%2Fwww.hani.co.kr%2Farti%2Fsociety%2Farea%2F859966.html&amp;title_nobase64=%EC%86%A1%EB%8F%84+%EC%95%84%ED%8C%8C%ED%8A%B8+%E2%80%98%EC%B0%A8%EB%9F%89+%EB%B0%A9%EC%B9%98+%EC%B0%A8%EC%A3%BC%E2%80%99%EC%99%80+%E2%80%98%EC%9E%90%EB%AC%BC%EC%87%A0+%EC%A3%BC%EB%AF%BC%E2%80%99%E2%80%A6%EC%96%B4%EB%96%A4+%EC%B2%98%EB%B2%8C+%EB%B0%9B%EC%9D%84%EA%B9%8C%EC%9A%94%3F&amp;thumbnail=http%3A%2F%2Fimg.hani.co.kr%2Fimgdb%2Fresize%2F2018%2F0830%2F53_1535624736_00502725_20180830.JPG&amp;summary_nobase64=&amp;writer=%ED%95%9C%EA%B2%A8%EB%A0%88%EC%8B%A0%EB%AC%B8%EC%82%AC" onclick="javascript:return popupHaniWindow(this, '', 360, 300, 'yes', 'yes');">
         <span class="icon">
          싸이월드<li>[link]</li>[search]<li>[search]</li>[ahref]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][search][search][search]<li>[ahref]</li><li>[search]</li><li>[ahref]</li><li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search][link]<li>[ahref]</li>[link]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]
         </span>
        </a>
       </li>
       <li class="share-mail">
        [link]
        
       </li>
      </ul>
     </div>
    </div>
   </div>
  </div>
  <hr/>
  <div id="container">
   <div class="kisa" id="visual-ad_wind">
    <h3 class="blind">
     [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
    </h3>
    <div class="left_wing" id="left_wing">
    </div>
    <div class="right_wing" id="right_wing">
    </div>
   </div>
   <h2 class="blind">
    <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
   </h2>
   <div id="contents-article">
    <div class="visual-ad1" id="ad_kisa_t01">
     <h3 class="blind">
      [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
     </h3>
     <div class="top-ad">
     </div>
    </div>
    <div class="article-head" id="article_view_headline">
     <p class="category">
      <strong>
       [link]
       
      </strong>
      <span>
       <a href="/arti/society/area/home01.html">
        전국
       </a>
      </span>
     </p>
     <h4>
      <span class="title">
       송도 아파트 ‘차량 방치 차주’와 ‘자물쇠 주민’…어떤 처벌 받을까요?
      </span>
     </h4>
     <p class="date-time">
      [ahref][link]<li>[link]</li>[ahref][search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li>[search][search][search]<li>[link]</li>[ahref][link]
     </p>
    </div>
    <div class="article-body type01">
     <div class="a-left">
      <div id="a-left-scroll-start">
       <div id="a-left-scroll-in">
        <div class="article-tools">
         <ul class="tools">
          <li class="tool-f" data-status="1" onclick="javascript:return popupHaniWindow(this, 'http://www.facebook.com/sharer/sharer.php?u=http%3A%2F%2Fwww.hani.co.kr%2Farti%2Fsociety%2Farea%2F859966.html', 800, 300, 'yes', 'yes');" onmouseleave="javascript:hideObjectClassBound(this, 'span.icon1');" onmouseover="javascript:openObjectClassBound(this, 65);" title="페이스북 공유">
           <span class="icon icon1">
            <li>[search]</li>[search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[link]</li>[link]
           </span>
           <span class="blind">
            페이스북[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[ahref]
           </span>
           <div class="overlay">
            <div class="icon-area">
             <span class="icon icon2">
             </span>
             <em class="count-area">
              <span class="facebook-count">
               0[link][ahref]<li>[link]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[link]</li><li>[ahref]</li>[link]<li>[search]</li>
              </span>
             </em>
            </div>
           </div>
          </li>
          <li class="tool-t" data-status="1" onclick="javascript:return popupHaniWindow(this, 'http://twitter.com/share?text=%EC%86%A1%EB%8F%84+%EC%95%84%ED%8C%8C%ED%8A%B8+%E2%80%98%EC%B0%A8%EB%9F%89+%EB%B0%A9%EC%B9%98+%EC%B0%A8%EC%A3%BC%E2%80%99%EC%99%80+%E2%80%98%EC%9E%90%EB%AC%BC%EC%87%A0+%EC%A3%BC%EB%AF%BC%E2%80%99%E2%80%A6%EC%96%B4%EB%96%A4+%EC%B2%98%EB%B2%8C+%EB%B0%9B%EC%9D%84%EA%B9%8C%EC%9A%94%3F&amp;url=http%3A%2F%2Fwww.hani.co.kr%2Farti%2Fsociety%2Farea%2F859966.html', 800, 450, 'yes', 'yes');" title="트위터 공유">
           <span class="icon icon1">
           </span>
           <span class="blind">
            트위터
           </span>
           <div class="overlay">
            <div class="icon-area">
             <span class="icon icon2">
              <p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
             </span>
             <em class="count-area">
              <span class="twitter-count">
               0<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][search]<li>[ahref]</li>[ahref]<li>[link]</li>
              </span>
             </em>
            </div>
           </div>
          </li>
          <li class="tool-share" data-status="1" onclick="javascript:openObjectClassBound(this, 162);" onmouseleave="javascript:hideObjectClassBound(this, 'span.icon1');" title="기사 공유 더보기">
           <span class="icon icon1">
            <li>[search]</li><li>[ahref]</li><li>[link]</li><li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][search][link]
           </span>
           <span class="blind">
            공유
           </span>
           <div class="overlay">
            <div class="icon-area">
             <span class="icon icon2" onclick="javascript:toggleObjectClass(this.parentElement.parentElement.parentElement, '.tools', '.selected', 'selected');">
              <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[ahref]</li>
             </span>
             [ahref]
             
             <a class="s-n" href="/openapi/share?url=http%3A%2F%2Fwww.hani.co.kr%2Farti%2Fsociety%2Farea%2F859966.html" onclick="javascript:return popupHaniWindow(this, '', 780, 480, 'yes', 'yes');" title="네이버블로그 공유">
              <span class="blind">
               네이버블로그
              </span>
             </a>
             [link]
             
             <a class="s-c" href="/bi/bi_recommend_pop.php?url=http%3A%2F%2Fwww.hani.co.kr%2Farti%2Fsociety%2Farea%2F859966.html&amp;title_nobase64=%EC%86%A1%EB%8F%84+%EC%95%84%ED%8C%8C%ED%8A%B8+%E2%80%98%EC%B0%A8%EB%9F%89+%EB%B0%A9%EC%B9%98+%EC%B0%A8%EC%A3%BC%E2%80%99%EC%99%80+%E2%80%98%EC%9E%90%EB%AC%BC%EC%87%A0+%EC%A3%BC%EB%AF%BC%E2%80%99%E2%80%A6%EC%96%B4%EB%96%A4+%EC%B2%98%EB%B2%8C+%EB%B0%9B%EC%9D%84%EA%B9%8C%EC%9A%94%3F&amp;thumbnail=http%3A%2F%2Fimg.hani.co.kr%2Fimgdb%2Fresize%2F2018%2F0830%2F53_1535624736_00502725_20180830.JPG&amp;summary_nobase64=&amp;writer=%ED%95%9C%EA%B2%A8%EB%A0%88%EC%8B%A0%EB%AC%B8%EC%82%AC" onclick="javascript:return popupHaniWindow(this, '', 360, 300, 'yes', 'yes');" title="싸이월드 공유">
              <span class="blind">
               싸이월드
              </span>
             </a>
            </div>
           </div>
          </li>
          <li class="tool-scrap" onclick="javascript:toogleScrap('http%3A%2F%2Fwww.hani.co.kr%2Farti%2Fsociety%2Farea%2F859966.html','%EC%86%A1%EB%8F%84%20%EC%95%84%ED%8C%8C%ED%8A%B8%20%E2%80%98%EC%B0%A8%EB%9F%89%20%EB%B0%A9%EC%B9%98%20%EC%B0%A8%EC%A3%BC%E2%80%99%EC%99%80%20%E2%80%98%EC%9E%90%EB%AC%BC%EC%87%A0%20%EC%A3%BC%EB%AF%BC%E2%80%99%E2%80%A6%EC%96%B4%EB%96%A4%20%EC%B2%98%EB%B2%8C%20%EB%B0%9B%EC%9D%84%EA%B9%8C%EC%9A%94%3F','%EC%82%AC%ED%9A%8C');" title="기사 스크랩">
           <span class="icon">
            [ahref][link][link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link]
           </span>
           <span class="blind">
            스크랩[search][ahref][ahref][search][link][search][link][search]<li>[search]</li><li>[ahref]</li>
           </span>
          </li>
          <li class="tool-print" title="인쇄하기">
           [link]
           
          </li>
         </ul>
         <p class="font">
          [link]
          
          [link]
          
         </p>
        </div>
        <div class="article-text">
         <div class="article-text-font-size" itemprop="articleBody" style="line-height:2em;">
          <div class="subtitle">
           <font color="#278f8e">
            [더(The) 친절한 기자들]
           </font>
           <br>
            [search]<li>[search]</li>[ahref]<li>[search]</li><li>[ahref]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][link]
           </br>
           <br>
            [search]<li>[search]</li><li>[ahref]</li>[ahref][search][ahref]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]<li>[ahref]</li><li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link][ahref][link][search]
           </br>
           일반교통방해죄 인정시 최고 징역 10년 또는 벌금 1500만원
           <br>
            <li>[search]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[ahref]</li>[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li><li>[link]</li><li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><li>[search]</li><li>[link]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
           </br>
           승용차 옮긴 입주민 ‘자구행위’로 판단…처벌 못해
           <br/>
           바퀴에 자물쇠 채운 주민은 “사유재산권 침해 소지”
           <br/>
           <br/>
           차주, 30일 중고차 업체 대표 보내 견인시도
          </div>
          <div class="text">
           <div class="image-area">
            <div class="imageC" style="width:643px;">
             <div class="image">
             </div>
             <div class="desc" style="width:643px;">
              ‘불법주차 스티커’ 부착에 화가나 인천 송도국제도시의 한 아파트 주차장 진입로를 막은 50대 여성의 자동차.인천연수경찰서 제공.
             </div>
            </div>
           </div>
           인천 송도국제도시의 한 아파트에서 ‘불법주차 스티커’ 부착에 화가 나 아파트단지 주차장 진입로를 막은 50대 여성은 어떤 처벌을 받게 될까요? 또 차량을 치우고 자물쇠까지 채운 입주민은 어떤 처벌을 받게 될까요?
           <p align="justify">
            <p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<li>[link]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][search][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
           </p>
           지난 27일 인천 송도국제도시 한 아파트단지에서 황당한 일이 벌어졌습니다. 입주민 ㄱ(51·여)씨가 주차단속 스티커가 자신의 승용차 앞 유리에 부착된 것에 화가나 아파트 지하주차장 진입로를 승용차로 막았습니다. 이 여성 운전자는 “사과하고, 부착한 스티커를 떼지 않으면 차를 빼지 않겠다”며 자리를 떠났습니다.
           <p align="justify">
           </p>
           신고를 받고 경찰과 관할 연수구청까지 출동했지만, 차량을 견인하지 못했습니다. 일반도로가 아닌 사유지였기 때문입니다. 6시간째 불편을 참다못한 주민들은 ㄱ씨의 승용차를 밀어 인근 인도로 옮긴 뒤 못 움직이게 차량용 자물쇠를 설치했습니다.
           <p align="justify">
            [link][link][link]<li>[link]</li><li>[link]</li>
           </p>
           이 여성의 승용차 앞 유리에는 “불법 주차 탓에 입주민 차량의 극심한 교통 혼잡이 발생했다. 입주민 및 동대표들은 인력으로 상기 차량 인도로 이동 조치했고 경찰 신고를 통해 즉시 이동을 요청했으나 귀하는 이를 거부하고 있다”는 경고문도 붙었습니다. 격분한 입주민들도 ‘갑질 운전자’, ‘개념 상실’ 등의 내용이 담긴 포스트잇을 승용차 곳곳에 붙여 항의 뜻을 전했습니다. 전날 차량을 뒤덮었던 포스트잇은 30일 모두 제거됐습니다.
           <p align="justify">
           </p>
           <div class="image-area">
            <div class="imageC" style="width:580px;">
             <div class="image">
             </div>
             <div class="desc" style="width:580px;">
              30일 오전 인천시 연수구 모 아파트단지 정문 인도에 나흘째 방치된 캠리 승용차 옆에 가수 설현의 사진이 인쇄된 입간판이 세워져 있다. 한 입주민이 설치한 것으로 추정되는 이 입간판에는 주민 의사를 묻는 설문글이 적혀있다. 한편 이 승용차의 차주인 50대 여성은 자신의 차량에 아파트단지 불법주차 스티커가 부착된 것에 화가 나 27일 이 아파트단지 지하주차장 진입로를 차량으로 막아 물의를 빚었다. 2018.8.30 연합뉴스
             </div>
            </div>
           </div>
           ㄱ씨와 주민들의 대치 상황은 이날까지 나흘째 이어졌습니다. 그런데 이날 오후 입주민들을 당황시킨 일이 또 일어났습니다. 차주인 ㄱ씨가 아파트단지로 중고차 업체 대표를 보내 견인을 시도했기 때문입니다. ㄱ씨가 이 승용차를 중고차업체에 매각하겠다고 해 해당 업체에서 차량을 인도하러 온 것입니다.
           <p align="justify">
           </p>
           그러나 차량 바퀴에 걸린 자물쇠 탓에 차량을 인도하지 못했습니다. 이 자물쇠를 설치한 한 입주민은 ㄱ씨가 사과하지 않으면 자물쇠를 풀지 않겠다고 말한 것으로 전해졌습니다. 결국 중고차 업체 대표는 빈 손으로 되돌아갔습니다.
           <p align="justify">
            <li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[link][link]<li>[ahref]</li>[ahref][search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
           </p>
           한 주민은 “주민들이 캠리 승용차를 못 움직이도록 한 것은 ㄱ씨 사과를 요구하고 있기 때문인데 이런 식으로 승용차를 치워버리는 것은 사과를 회피하겠다는 것”이라며 “사과 한마디면 해결될 일을 왜 이렇게 어렵게 만드는 지 모르겠다”고 했습니다.
           <p align="justify">
            <li>[link]</li>[search]<li>[ahref]</li><li>[link]</li><li>[link]</li>
           </p>
           경찰은 ㄱ씨를 차량 통행을 방해한 혐의(일반교통방해)로 입건했습니다. 일반교통방해죄 혐의가 인정되면 형법상 10년 이하의 징역 또는 1500만원 이하의 벌금에 처해집니다. ㄱ씨는 9월2일 변호사와 함께 경찰에 출두해 조사를 받을 것으로 전해졌습니다. 인천연수경찰서는 “ㄱ씨와 소환 일정을 조율했고, 조사 뒤 구체적인 혐의를 특정할 예정”이라고 밝혔습니다.
           <p align="justify">
            <li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
           </p>
           ㄱ씨의 사유재산인 승용차를 옮긴 입주민들의 행위는 ‘자구행위’로 판단, 처벌을 받지 않을 것으로 보입니다. 자구행위란 자신의 권리를 침해당한 자가 국가권력의 보호를 받는 것이 불가능하거나 긴급한 상태에 처해있는 경우 그 권리를 회복·보존하기 위해 직접 사력을 행사하는 것을 말합니다. 지하주차장 진출입 방해에 따른 입주민의 권리를 찾기 위한 행위로 판단한 겁니다.
           <p align="justify">
           </p>
           다만, 승용차에 자물쇠를 채워 움직이지 못하도록 한 행위는 상황이 좀 다릅니다. 개인 재산을 자유로이 사용, 처분, 수익 할수 있는 사유재산권을 침해했을 가능성이 있다는 겁니다. 경찰 관계자는 “차주가 문제를 제기하게 되면, 구체적인 법리 검토가 필요한 사안”이라고 말했습니다.
           <p align="justify">
           </p>
           이정하 기자
           [ahref]
           
           <p align="justify">
            <li>[link]</li>[link][link]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
           </p>
           <p align="justify">
           </p>
           <p align="justify">
           </p>
          </div>
          <div class="kisa-sponsor-area type3">
           <h4 class="blind">
            후원하기
           </h4>
           <div class="kisa-sponsor-area-in">
            <div class="title">
             응원해주세요, 더 깊고 알찬 기사로 보답하겠습니다
            </div>
            <div class="title-desc">
            </div>
            <div class="kisa-sponsor-list">
             <ul>
              <li class="item01">
               <div class="item-check">
                <label class="itemArea" for="chk01" id="chk_box01">
                 <span class="item-photo">
                  [search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]<li>[ahref]</li>[ahref][link]<li>[link]</li><li>[ahref]</li>
                 </span>
                 <span class="item-text">
                  <span class="item-title">
                   후원하기
                  </span>
                  <span class="num_money">
                   1,000
                  </span>
                  <span class="txt_won">
                   원
                  </span>
                 </span>
                </label>
               </div>
              </li>
              <li class="item02">
               <div class="item-check">
                <label class="itemArea" for="chk02" id="chk_box02">
                 <span class="item-photo">
                  [ahref][link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref][search]<li>[link]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>
                 </span>
                 <span class="item-text">
                  <span class="item-title">
                   후원하기
                  </span>
                  <span class="num_money">
                   5,000<li>[ahref]</li><li>[ahref]</li><li>[ahref]</li><li>[search]</li><li>[link]</li><li>[link]</li>[search]<li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li>[ahref]
                  </span>
                  <span class="txt_won">
                   원
                  </span>
                 </span>
                </label>
               </div>
              </li>
              <li class="item03">
               <div class="item-check">
                <label class="itemArea" for="chk03" id="chk_box03">
                 <span class="item-photo">
                  [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[search]<li>[link]</li>[link][link][ahref][link][ahref][ahref]<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>[link]<li>[link]</li>[ahref]<li>[ahref]</li><li>[ahref]</li><li>[ahref]</li><li>[ahref]</li>[ahref]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
                 </span>
                 <span class="item-text">
                  <span class="item-title">
                   후원하기
                  </span>
                  <span class="num_money">
                   10,000
                  </span>
                  <span class="txt_won">
                   원
                  </span>
                 </span>
                </label>
               </div>
              </li>
              <li class="item-none">
               <div class="item-check">
                <label class="itemArea" for="chk_free" id="chk_box_free">
                 <span class="item-photo">
                  <li>[ahref]</li><li>[link]</li><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li><li>[link]</li>[link][search][link]
                 </span>
                 <span class="item-text">
                  [search]<li>[search]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>
                 </span>
                </label>
               </div>
              </li>
             </ul>
             <div class="kisa-sponsor-text">
              진실을 알리고 평화를 지키는 데 소중히 쓰겠습니다.
             </div>
            </div>
           </div>
           <div class="kisa-sponsor-btn">
            [ahref]
            
           </div>
          </div>
          <div class="relation-area bottom" title="관련기사">
           <h5>
            관련기사
           </h5>
           <ul class="relation-list">
            <li>
             [ahref]
             
            </li>
            <li>
             <a href="/arti/society/society_general/859718.html">
              주차위반 스티커 붙이자 주차장 입구 막고 ‘몽니 주차’
             </a>
            </li>
           </ul>
          </div>
          <div class="relation2-area serial" title="연재기사">
           <h5>
            <span>
             연재<li>[search]</li>[ahref][ahref]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][search][link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li><li>[search]</li>[search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[ahref]
            </span>
            <a href="/arti/SERIES/635/">
             더(The) 친절한 기자들
            </a>
           </h5>
           <ul class="relation2-list">
            <li>
             <a href="/arti/economy/finance/874168.html">
              [더친기] 페친들 신용등급 낮아졌다고, 내 신용등급 내린다면?
             </a>
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [link]
             
            </li>
           </ul>
          </div>
         </div>
        </div>
        <div class="ad_box01_area" id="ad_box01">
         <h3 class="blind">
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
        </div>
        <div class="ad_box04_area" id="ad_box04">
         <h3 class="blind">
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
         <ul class="ad_img3">
          <li>
          </li>
          <li>
          </li>
          <li class="last">
          </li>
         </ul>
        </div>
        <div class="photo-list">
         <h3 class="blind">
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
         <ul>
          <li class="kisa01">
           <a href="/arti/culture/culture_general/874173.html?_fr=st3">
           </a>
           <h4>
            [link]
            
           </h4>
          </li>
          <li class="kisa02">
           [link]
           
           <h4>
            [link]
            
           </h4>
          </li>
          <li class="kisa03">
           [ahref]
           
           <h4>
            [ahref]
            
           </h4>
          </li>
          <li class="kisa04">
           <a href="/slide.hani?sec1=002&amp;sec2=003&amp;sec3=085&amp;seq=4&amp;_fr=st3" onclick="javascript:popupHaniWindow(this, 'http://pictorial.hani.co.kr/slide.hani?sec1=002&amp;sec2=003&amp;sec3=085&amp;seq=4', 1031, 820, 'yes', 'yes'); return false;" target="_blank">
           </a>
           <h4>
            [ahref]
            
           </h4>
          </li>
          <li class="kisa05">
           <a href="/slide.hani?sec1=099&amp;sec2=032&amp;sec3=001&amp;slide_pos=0&amp;pos=10&amp;_fr=st3" onclick="javascript:popupHaniWindow(this, 'http://pictorial.hani.co.kr/slide.hani?sec1=099&amp;sec2=032&amp;sec3=001&amp;slide_pos=0&amp;pos=10', 1031, 820, 'yes', 'yes'); return false;" target="_blank">
           </a>
           <h4>
            [link]
            
           </h4>
          </li>
          <li class="kisa06">
           <a href="/arti/sports/soccer/874119.html?_fr=st3">
           </a>
           <h4>
            <a href="/arti/sports/soccer/874119.html?_fr=st3">
             한국 시청률도 ‘박항서 매직’
            </a>
           </h4>
          </li>
         </ul>
        </div>
        <div id="laAdArea" style="padding:10px 0 25px;">
         <h3 class="blind">
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
        </div>
        <div class="reply-box">
         <div id="livereContainer">
         </div>
         <div id="livereFbContainer">
         </div>
        </div>
        <div style="text-align:center; padding: 0 0 25px">
         <h3 class="blind">
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
        </div>
       </div>
      </div>
     </div>
     <div class="a-right">
      <div id="a-right-scroll-start">
       <div id="a-right-scroll-in">
        <div class="article-popularity" data-class="" data-fr-val="sr1" data-max-length="5" style="display:none;">
         <h3 class="section-title">
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
         <div class="list">
         </div>
         <div class="article">
         </div>
        </div>
        <div class="text-ad2" id="ad_kisa_r01">
        </div>
        <div class="visual-ad1" id="ad_kisa_r02">
        </div>
        <div class="hani-friend">
         <h3>
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
         <ul>
          <li class="icon-f on">
           <div class="icon-area" onclick="javascript:switchObjectClass(this.parentElement, '.hani-friend', '.on', 'on');">
            <span class="icon">
             <li>[search]</li><li>[search]</li><li>[ahref]</li>[link]<li>[ahref]</li><li>[search]</li>[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
            </span>
           </div>
           <div class="box-area">
            <div class="inner">
             <div class="fb-like" data-action="like" data-href="https://www.facebook.com/hankyoreh" data-layout="button_count" data-share="false" data-show-faces="false">
             </div>
            </div>
           </div>
          </li>
          <li class="icon-t">
           <div class="icon-area" onclick="javascript:switchObjectClass(this.parentElement, '.hani-friend', '.on', 'on');">
            <span class="icon">
             <li>[search]</li>[search][search]<li>[ahref]</li>[link]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[ahref]</li><li>[ahref]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[link]</li><li>[link]</li><li>[ahref]</li>[link]
            </span>
           </div>
           <div class="box-area">
            <div class="inner">
             [link]
             
            </div>
           </div>
          </li>
          <li class="icon-r">
           <div class="icon-area" onclick="javascript:switchObjectClass(this.parentElement, '.hani-friend', '.on', 'on');">
            <span class="icon">
            </span>
           </div>
           <div class="box-area">
            <div class="inner">
             <a href="/rss/" target="_blank">
              전체기사RSS
             </a>
             <span class="bar">
              |
             </span>
             <a href="/arti/RSS/" target="_blank">
              RSS페이지 목록
             </a>
            </div>
           </div>
          </li>
          <li class="icon-m">
           <div class="icon-area" onclick="javascript:switchObjectClass(this.parentElement, '.hani-friend', '.on', 'on');">
            <span class="icon">
            </span>
           </div>
           <div class="box-area">
            <div class="inner">
             <span class="app">
              [link]
              
              <span class="bar">
               |<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][ahref]<li>[ahref]</li><li>[ahref]</li>[link][ahref]<li>[search]</li>
              </span>
              <a href="/us/app/hangyeole/id420600963?l=ko&amp;ls=1&amp;mt=8" target="_blank">
               IOS
              </a>
             </span>
             <span class="app-n">
              <li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]<li>[search]</li>[search]<li>[search]</li>
             </span>
            </div>
           </div>
          </li>
         </ul>
        </div>
        <div class="article03 ">
         <div class="ad-300x180-area">
          <strong class="group">
           NativeLab : PORTFOLIO
          </strong>
          <p class="number">
           [link][link][ahref][link][search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[link]
          </p>
          <div class="slide_box">
           <iframe frameborder="0" height="250" marginheight="0" marginwidth="0" scrolling="no" src="http://ad.hani.co.kr/RealMedia/ads/adstream_sx.ads/www.hani.co.kr/news@x13?society&amp;kisano=859966" width="300">
           </iframe>
          </div>
         </div>
        </div>
        <div class="visual-ad1" id="ad_kisa_r03">
        </div>
        <div class="visual-ad2" id="ad_sub_photo">
         <ul class="photo-ad">
          <li class="left">
          </li>
         </ul>
        </div>
        <div class="article-like">
         <div data-widget_id="YG7Z3lWv" id="widget-YG7Z3lWv">
         </div>
        </div>
        <div class="text-ad2" id="ad_kisa_r04">
         <div id="adTopBox">
         </div>
        </div>
        <div class="visual-ad1" id="ad_kisa_r05">
        </div>
        <div class="visual-ad1" id="ad_kisa_bot">
        </div>
        <div class="padding_bottom">
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
  <hr/>
  <div class="close" id="sitemap">
   <div class="sitemap-title">
    [ahref]
    
   </div>
   <div class="sitemap-layer" onfocusin="javascript:openLayerUsingClass('#sitemap');" onfocusout="javascript:closeLayerUsingClass('#sitemap');">
    <div class="over-list article-plus">
     <table>
      <tbody>
       <tr class="first">
        <th>
         <a href="/arti/list.html">
          전체
         </a>
        </th>
        <td>
         <ul>
         </ul>
        </td>
       </tr>
       <tr class="">
        <th>
         [link]
         
        </th>
        <td>
         <ul>
          <li class="">
           [ahref]
           
          </li>
          <li class="">
           [link]
           
          </li>
          <li class="">
           [ahref]
           
          </li>
          <li class="">
           <a href="/arti/politics/administration/home01.html">
            행정·자치
           </a>
          </li>
          <li class="">
           [link]
           
          </li>
          <li class="">
           [link]
           
          </li>
          <li class="last">
           <a href="/arti/politics/polibar/home01.html">
            정치BAR
           </a>
          </li>
         </ul>
        </td>
       </tr>
       <tr class="">
        <th>
         <a href="/arti/society/home01.html">
          사회
         </a>
        </th>
        <td>
         <ul>
          <li class="">
           <a href="/arti/society/society_general/home01.html">
            사회일반
           </a>
          </li>
          <li class="">
           <a href="/arti/society/women/home01.html">
            여성
           </a>
          </li>
          <li class="">
           <a href="/arti/society/labor/home01.html">
            노동
           </a>
          </li>
          <li class="">
           [link]
           
          </li>
          <li class="">
           <a href="/arti/society/handicapped/home01.html">
            장애인
           </a>
          </li>
          <li class="">
           <a href="/arti/society/rights/home01.html">
            인권·복지
           </a>
          </li>
          <li class="">
           [ahref]
           
          </li>
          <li class="">
           <a href="/arti/society/media/home01.html">
            미디어
           </a>
          </li>
          <li class="">
           [ahref]
           
          </li>
          <li class="">
           [link]
           
          </li>
          <li class="">
           <a href="/arti/society/ngo/home01.html">
            엔지오
           </a>
          </li>
          <li class="">
           [link]
           
          </li>
          <li class="last">
           [ahref]
           
          </li>
         </ul>
        </td>
       </tr>
       <tr class="">
        <th>
         <a href="/arti/society/area/home01.html">
          전국
         </a>
        </th>
        <td>
         <ul>
         </ul>
        </td>
       </tr>
       <tr class="">
        <th>
         [ahref]
         
        </th>
        <td>
         <ul>
          <li class="">
           [link]
           
          </li>
          <li class="">
           <a href="/arti/economy/finance/home01.html">
            금융·증권
           </a>
          </li>
          <li class="">
           <a href="/arti/economy/marketing/home01.html">
            산업·재계
           </a>
          </li>
          <li class="">
           <a href="/arti/economy/car/home01.html">
            자동차
           </a>
          </li>
          <li class="">
           <a href="/arti/economy/property/home01.html">
            부동산
           </a>
          </li>
          <li class="">
           <a href="/arti/economy/consumer/home01.html">
            쇼핑·소비자
           </a>
          </li>
          <li class="">
           <a href="/arti/economy/it/home01.html">
            IT
           </a>
          </li>
          <li class="">
           [link]
           
          </li>
          <li class="">
           [link]
           
          </li>
          <li class="">
           [link]
           
          </li>
          <li class="last">
           <a href="/arti/economy/global/home01.html">
            글로벌워치
           </a>
          </li>
         </ul>
        </td>
       </tr>
       <tr class="">
        <th>
         [ahref]
         
        </th>
        <td>
         <ul>
          <li class="">
           <a href="/arti/international/international_general/home01.html">
            국제일반
           </a>
          </li>
          <li class="">
           <a href="/arti/international/globaltopic/home01.html">
            해외토픽
           </a>
          </li>
          <li class="">
           <a href="/arti/international/asiapacific/home01.html">
            아시아·태평양
           </a>
          </li>
          <li class="">
           <a href="/arti/international/america/home01.html">
            미국·중남미
           </a>
          </li>
          <li class="">
           [link]
           
          </li>
          <li class="">
           <a href="/arti/international/china/home01.html">
            중국
           </a>
          </li>
          <li class="">
           [link]
           
          </li>
          <li class="">
           [ahref]
           
          </li>
          <li class="">
           [link]
           
          </li>
          <li class="last">
           <a href="/arti/international/globaleconomy/home01.html">
            국제경제
           </a>
          </li>
         </ul>
        </td>
       </tr>
       <tr class="">
        <th>
         <a href="/arti/culture/home01.html">
          문화
         </a>
        </th>
        <td>
         <ul>
          <li class="">
           <a href="/arti/culture/culture_general/home01.html">
            문화일반
           </a>
          </li>
          <li class="">
           [link]
           
          </li>
          <li class="">
           <a href="/arti/culture/entertainment/home01.html">
            방송·연예
           </a>
          </li>
          <li class="">
           [ahref]
           
          </li>
          <li class="">
           <a href="/arti/culture/music/home01.html">
            음악·공연·전시
           </a>
          </li>
          <li class="">
           [link]
           
          </li>
          <li class="">
           [ahref]
           
          </li>
          <li class="last">
           <a href="/arti/culture/jejuand/home01.html">
            제주&amp;
           </a>
          </li>
         </ul>
        </td>
       </tr>
       <tr class="">
        <th>
         <a href="/arti/sports/home01.html">
          스포츠
         </a>
        </th>
        <td>
         <ul>
          <li class="">
           <a href="/arti/sports/sports_general/home01.html">
            스포츠일반
           </a>
          </li>
          <li class="">
           [link]
           
          </li>
          <li class="">
           <a href="/arti/sports/baseball/home01.html">
            야구·MLB
           </a>
          </li>
          <li class="">
           <a href="/arti/sports/golf/home01.html">
            골프
           </a>
          </li>
          <li class="">
           [ahref]
           
          </li>
          <li class="">
           [link]
           
          </li>
          <li class="last">
           [ahref]
           
          </li>
         </ul>
        </td>
       </tr>
       <tr class="">
        <th>
         <a href="/arti/science/home01.html">
          미래과학
         </a>
        </th>
        <td>
         <ul>
          <li class="">
           [ahref]
           
          </li>
          <li class="">
           <a href="/arti/science_general/home01.html">
            과학
           </a>
          </li>
          <li class="">
           <a href="/arti/science/technology/home01.html">
            기술
           </a>
          </li>
          <li class="">
           <a href="/arti/society/environment/home01.html">
            환경
           </a>
          </li>
          <li class="last">
           [ahref]
           
          </li>
         </ul>
        </td>
       </tr>
       <tr class="">
        <th>
         [ahref]
         
        </th>
        <td>
         <ul>
          <li class="">
           [link]
           
          </li>
          <li class="">
           <a href="/arti/animalpeople/companion_animal/home01.html">
            반려동물
           </a>
          </li>
          <li class="">
           <a href="/arti/animalpeople/farm_animal/home01.html">
            농장동물
           </a>
          </li>
          <li class="">
           <a href="/arti/animalpeople/human_animal/home01.html">
            인간과동물
           </a>
          </li>
          <li class="last">
           <a href="/arti/animalpeople/ecology_evolution/home01.html">
            생태와진화
           </a>
          </li>
         </ul>
        </td>
       </tr>
       <tr class="">
        <th>
         <a href="/arti/opinion/home01.html">
          오피니언
         </a>
        </th>
        <td>
         <ul>
          <li class="">
           [link]
           
          </li>
          <li class="">
           [link]
           
          </li>
          <li class="">
           [ahref]
           
          </li>
          <li class="last">
           [ahref]
           
          </li>
         </ul>
        </td>
       </tr>
       <tr>
        <th class="title" colspan="2">
         <a href="/arti/cartoon/home01.html">
          만화
         </a>
         <span class="bar">
          |[link][link][ahref]<li>[link]</li>[ahref]<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
         </span>
         <a href="/arti/specialsection/esc_section/home01.html">
          ESC
         </a>
         <span class="bar">
          |
         </span>
         <a href="/arti/SECTION/saturday/home01.html">
          토요판
         </a>
         <span class="bar">
          |
         </span>
         [ahref]
         
         <span class="bar">
          |
         </span>
         [link]
         
         <span class="bar">
          |<li>[link]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]
         </span>
         [link]
         
         <span class="bar">
          |<li>[ahref]</li><li>[search]</li>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li>
         </span>
         <a href="/arti/ISSUE/home01.html">
          이슈
         </a>
         <span class="bar">
          |
         </span>
         <a href="/arti/SECTION/education/home01.html">
          함께하는교육
         </a>
         <span class="bar">
          |
         </span>
         <a href="/arti/economy/heri_review/home01.html">
          헤리리뷰
         </a>
         <span class="bar">
          |
         </span>
         <a href="/arti/THEME/people/home01.html">
          사람
         </a>
         <span class="bar">
          |<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li><li>[ahref]</li><li>[link]</li>
         </span>
         [ahref]
         
         <span class="bar">
          |
         </span>
         [link]
         
        </th>
       </tr>
       <tr class="">
        <th>
         [link]
         
        </th>
        <td>
         <ul>
          <li class="">
           <a href="/health" target="_blank">
            기찬몸
           </a>
          </li>
          <li class="">
           [ahref]
           
          </li>
          <li class="">
           [ahref]
           
          </li>
          <li class="">
           [link]
           
          </li>
          <li class="">
           <a href="/" target="_blank">
            베이비트리
           </a>
          </li>
          <li class="">
           [ahref]
           
          </li>
          <li class="last">
           <a href="/arti/SERIES/1046/">
            기후이야기
           </a>
          </li>
         </ul>
        </td>
       </tr>
       <tr class="">
        <th>
         [ahref]
         
        </th>
        <td>
         <ul>
          <li class="">
           [ahref]
           
          </li>
          <li class="">
           <a href="/special/home01.html">
            포토스페셜
           </a>
          </li>
          <li class="">
           <a href="/photo/home01.html">
            최신포토뉴스
           </a>
          </li>
          <li class="last">
           [ahref]
           
          </li>
         </ul>
        </td>
       </tr>
       <tr class="">
        <th>
         [link]
         
        </th>
        <td>
         <ul>
          <li class="">
           <a href="/?mid=tv&amp;category=145" target="_blank">
            시사·보도
           </a>
          </li>
          <li class="">
           <a href="/?mid=tv&amp;category=147" target="_blank">
            교양·라이프
           </a>
          </li>
          <li class="">
           <a href="/?mid=tv&amp;category=148" target="_blank">
            엔터테인먼트
           </a>
          </li>
          <li class="">
           <a href="/?mid=tv&amp;category=149" target="_blank">
            스페셜
           </a>
          </li>
          <li class="">
           [ahref]
           
          </li>
          <li class="last">
           [link]
           
          </li>
         </ul>
        </td>
       </tr>
       <tr class="">
        <th>
         <a href="#" target="_blank">
          뉴스서비스
         </a>
        </th>
        <td>
         <ul>
          <li class="">
           [link]
           
          </li>
          <li class="">
           <a href="/" target="_blank">
            날짜별한겨레
           </a>
          </li>
          <li class="">
           <a href="/" target="_blank">
            지난톱기사
           </a>
          </li>
          <li class="">
           <a href="/" target="_blank">
            디지털초판
           </a>
          </li>
          <li class="">
           <a href="/PaperList.aspx" target="_blank">
            PDF서비스
           </a>
          </li>
          <li class="">
           [link]
           
          </li>
          <li class="">
           <a href="/customer_report.html" target="_blank">
            기사제보
           </a>
          </li>
          <li class="last">
           [search]
           
          </li>
         </ul>
        </td>
       </tr>
       <tr class="">
        <th>
         <a href="/" target="_blank">
          커뮤니티
         </a>
        </th>
        <td>
         <ul>
          <li class="">
           [link]
           
          </li>
          <li class="">
           [ahref]
           
          </li>
          <li class="">
           <a href="/blog" target="_blank">
            블로그
           </a>
          </li>
          <li class="last">
           [link]
           
          </li>
         </ul>
        </td>
       </tr>
       <tr class="">
        <th>
         <a href="#" target="_blank">
          매거진
         </a>
        </th>
        <td>
         <ul>
          <li class="">
           <a href="/" target="_blank">
            한겨레21
           </a>
          </li>
          <li class="">
           [link]
           
          </li>
          <li class="last">
           [ahref]
           
          </li>
         </ul>
        </td>
       </tr>
       <tr class="">
        <th>
         <a href="#" target="_blank">
          사업
         </a>
        </th>
        <td>
         <ul>
          <li class="">
           [link]
           
          </li>
          <li class="">
           [link]
           
          </li>
          <li class="last">
           [ahref]
           
          </li>
         </ul>
        </td>
       </tr>
      </tbody>
     </table>
    </div>
   </div>
   <span class="fold">
    <a href="p" onclick="javascript:toggleLayerUsingClass('#sitemap'); return false;" title="서비스 전체보기 열기">
    </a>
   </span>
  </div>
  <hr/>
  <div id="footer">
   <p class="logo">
    <a href="r" title="한겨레 바로가기">
    </a>
   </p>
   <div class="footer-inner">
    <div class="footer-link first-child">
     <h4>
      한겨레 신문
     </h4>
     <ul class="links">
      <li>
       [ahref]
       
      </li>
      <li>
       <a href="/customer/customer_main.html" target="_blank">
        구독신청
       </a>
      </li>
      <li>
       [link]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       <a href="/sp?pname=etc.index&amp;spname=etc_01" target="_blank">
        사업제휴
       </a>
      </li>
      <li>
       <a href="/sp?pname=recruit.index&amp;spname=recruit_01_02" target="_blank">
        채용
       </a>
      </li>
      <li>
       [link]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       <a href="/">
        고객센터
       </a>
      </li>
      <li class="last-child">
       [link]
       
      </li>
     </ul>
     <ul class="social">
      <li>
       [ahref]
       
      </li>
      <li>
       <a class="twitter" href="/hanitweet" target="_blank" title="한겨레 twitter 바로가기">
        <span class="blind">
         twitter[search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]<li>[ahref]</li>[link]<li>[search]</li>
        </span>
       </a>
      </li>
     </ul>
    </div>
    <div class="footer-link">
     <h4>
      사이트 운영
     </h4>
     <ul class="links">
      <li>
       <a href="/Hani/User?command=form&amp;formtype=copyright">
        저작권
       </a>
      </li>
      <li>
       <a href="/Hani/User?command=form&amp;formtype=memberclause">
        회원약관
       </a>
      </li>
      <li>
       <b>
        <a href="/Hani/User?command=form&amp;formtype=privatepolicy">
         개인정보취급방침
        </a>
       </b>
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [link]
       
      </li>
      <li class="last-child">
       [ahref]
       
      </li>
     </ul>
     <div class="close" id="family-sites" onmouseleave="javascript:closeLayerUsingClass('#family-sites');">
      [ahref]
      
      <div id="select-layer" onfocusin="javascript:openLayerUsingClass('#family-sites');" onfocusout="javascript:closeLayerUsingClass('#family-sites');">
       <ul class="site-list">
        <li>
         <a href="/" target="_blank">
          하니누리
         </a>
        </li>
        <li>
         <a href="/" target="_blank">
          한겨레출판
         </a>
        </li>
        <li>
         <a href="/" target="_blank">
          한겨레경제사회연구원
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         <a href="/" target="_blank">
          한겨레S&amp;C
         </a>
        </li>
        <li>
         <a href="/" target="_blank">
          사람과디지털연구소
         </a>
        </li>
       </ul>
      </div>
     </div>
    </div>
   </div>
   <p class="copyright">
    Copyright ⓒ The Hankyoreh.  All rights reserved.
   </p>
  </div>
  <div id="fb-root">
  </div>
  <div id="scroll_top_button">
   [ahref]
   
  </div>
  <div id="foot-fix-margin">
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0058
  </b>
 </body>
</html>