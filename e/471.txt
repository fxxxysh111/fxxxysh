--->|RXZlbnR1YWxseSBhIHNlY29uZCBhbmFlc3RoZXNpb2xvZ2lzdCBhcnJpdmVkIGluIHRoZSBtb3JuaW5nIGFuZCBhZ3JlZWQgdG8gY29tZSBnaXZlIG1lIGFuIGVwaWR1cmFsLiBJdCBvbmx5IHRvb2sgb24gb25lIHNpZGUgYW5kIHdvcmUgb2ZmIGEgY291cGxlIGhvdXJzIGxhdGVyIHdpdGhvdXQgdGhlIGJhYnkgbW92aW5nIGF0IGFsbCBpbiB0aGF0IHRpbWUuIApXYWxrIGFyb3VuZCB0aGUgY29sZCBpbiBhIHRvdXJpc3QgdmlsbGFnZSB3aXRoIGEgaGFsZiBlYXRlbiBiYWcgb2Ygb3ZlcnByaWNlZCBzb3VwIGZvciBzZXZlcmFsIGhvdXJzLCB5b3UgdW5jdWx0dXJlZCBzd2luZS4KWW91IGNhbiBkbyB0aGlzIGJ5IHNlYXJjaGluZyBoMmcyLiBJZiB5b3Ugd291bGQgbGlrZSB0byB1cGRhdGUgYW4gZXhpc3RpbmcgQXBwcm92ZWQgRW50cnksIHlvdSdsbCBuZWVkIHRvIGZvbGxvdyB0aGUgcHJvY2VkdXJlIGZvciBVcGRhdGluZyBhbiBBcHByb3ZlZCBFbnRyeS5Zb3Ugc2hvdWxkIG1ha2Ugc3VyZSB0aGF0IHRoZSBFbnRyeSBpcywgYXMgZmFyIGFzIHlvdSBhcmUgY29uY2VybmVkLCBmaW5pc2hlZC4gClNldCBhbiBhdHRhaW5hYmxlIG9iamVjdGl2ZS4gCkNob29zZSBhIHNtYWxsIGRhcmsgdmlhbC4gUGxhY2UgYWxsIGJ1dCB0aGUgb2lsIGluIHRoZSB2aWFsIHRvZ2V0aGVyLCB0aGVuIGFkZCBlbm91Z2ggb2lsIHRvIGZpbGwgdGhlIGJvdHRsZS4gU2hha2UgdGhvcm91Z2hseS4gCkluIG9yZGVyIHRvIGdldCBiZXR0ZXIgeW91IGhhdmUgdG8gbm90IG9ubHkgY29tZSB1cCB3aXRoIG5ldyBzdHJhdGVnaWVzLCBidXQgYWxzbyBhY3F1aXJlIG5ldyBjYXJkcy4gCkhlIGFuZCBJIGFyZSBleGFjdGx5IGFsaWtlLiBMaWtlIEkgc2FpZCwgaWRrIGhvdyBvciB3aHkgdGhlIENCIHNpYmxpbmdzIGFyZSB0aGUgd2F5IHRoZXkgYXJlLiAKVGhlIGh1c2JhbmQgc2hvdWxkIGZ1bGZpbGwgaGlzIHdpZmUncyBzZXh1YWwgbmVlZHMsIGFuZCB0aGUgd2lmZSBzaG91bGQgZnVsZmlsbCBoZXIgaHVzYmFuZCdzIG5lZWRzLiBEbyBub3QgZGVwcml2ZSBlYWNoIG90aGVyIG9mIHNleHVhbCByZWxhdGlvbnMsIHVubGVzcyB5b3UgYm90aCBhZ3JlZSB0byByZWZyYWluIGZyb20gc2V4dWFsIGludGltYWN5IGZvciBhIGxpbWl0ZWQgdGltZSBzbyB5b3UgY2FuIGdpdmUgeW91cnNlbHZlcyBtb3JlIGNvbXBsZXRlbHkgdG8gcHJheWVyLiBBZnRlcndhcmQsIHlvdSBzaG91bGQgY29tZSB0b2dldGhlciBhZ2FpbiBzbyB0aGF0IFNhdGFuIHdvbid0IGJlIGFibGUgdG8gdGVtcHQgeW91IGJlY2F1c2Ugb2YgeW91ciBsYWNrIG9mIHNlbGYgY29udHJvbC4gKDEgQ29yaW50aGlhbnMgNzozIDUgTkxUKQpOb3QgdGhhdCBzaGUncyB0b3NzaW5nIHRoYXQgbnVtYmVyIG91dCB0byBtZWFzdXJlIGhlcnNlbGYgYWdhaW5zdCBvdGhlciBuZXcgbW9tcyBvciBldmVuIGhlciBvd24gc2lzdGVycy4gIkkgbmV2ZXIgY29tcGFyZSBteXNlbGYgdG8gb3RoZXIgd29tZW4gYXMgZXZlcnkgd29tYW4gaGFzIHRoZWlyIG93biBqb3VybmV5LCIgc2hlIGV4cGxhaW5lZC4gCkFzIGEgcmVjZW50IG5ld2NvbWVyIHRvIHRoZSBzdWIgSSBiZWVuIG1pbGRseSBjb25jZXJuZWQgdG8gc2VlIHRoYXQgd29yZCBiZWluZyB1c2VkLCBhbmQgSSBoYWQgYXNzdW1lZCB0aGF0IHRoaXMgd2FzIGdvaW5nIHRvIGJlIGEgcG9zdCBhc2tpbmcgcGVvcGxlIHRvIGNoaWxsIG91dCB3aXRoIHRoYXQuLiAKV2lsc29uLiAKQW5kIHRoZSBjYXNoIHlvdSBsaWtlbHkgd29uJ3QgZXZlciBzZWUgYWdhaW4gZWl0aGVyIHdheS4uIApGb3IgYWxsIHdlIGtub3csIE9QIGNvdWxkIGhhdmUgZ290dGVuIHRoZXNlIGZ1bmRzIGZyb20gc2VsbGluZyBkcnVncywgaHVtYW4gdHJhZmZpY2tpbmcsIHdoYXRldmVyLiBPZiBjb3Vyc2UsIHRoYXQgbm90IHRoZSBjYXNlIGhlcmUuIApJIGNhbiBnZXQgYmVoaW5kIGEgc21hbGwgYmV0IG9uIGZsb3AgZm9yIHByb3RlY3Rpb24gYnV0IHRoaW5rIHdlIG5lZWQgdG8gbG9vayBhdCBzbG93aW5nIGRvd24gb24gdHVybiB0byBhdm9pZCBzaXR1YXRpb25zIGxpa2UgdGhpcy4gClRoZXkgcmVjeWNsZWQgdGhlIHNhbWUgc29uZ3MgdGhhdCB0aGUgZ2lybHMgYWxyZWFkeSB0cmllZCBvdXQgb24gS25vd2luZyBCcm9zLCBhbmQgdGhlIGhvc3QgZGlkbiBzZWVtIHByZXBhcmVkIGF0IGFsbCB3aGVuIHRoZSBnYW1lIHJlc3VsdCB3YXMgaW5jb25jbHVzaXZlLiAKTWVtb3JpZXMgb2YgdGhlIENhcmliYmVhbgpXYW50ZWQgdG8gc3RhcnQgbXkgb3duIGJ1c2luZXNzIGJ1dCB3YXNuIHF1aXRlIGNvbmZpZGVudCBpbiBteSBmaW5hbmNpYWwgYWJpbGl0eSB0byBzdGFydCBhIGxpbmUsIGhlIHNheXMuIHR5cGljYWwgZnVsbCBzcGVjdHJ1bSBmYXNoaW9uIGxpbmUgd2l0aCBqZWFucywgVCBzaGlydHMsIGV0Yy4sIHRha2VzIGFib3V0IDQwMCBwaWVjZXMgYW5kIHJlcXVpcmVzIGEgd2hvbGUgbG90IG9mIG1vbmV5IHRvIGRvIGl0IHJpZ2h0LiBPbmUgZGF5IEkgd2FzIG9uIGEgcGxhbmUgZnJvbSBTcGFpbiB0byBFbmdsYW5kIHVzaW5nIHRoZSB3YXNocm9vbSBhbmQgSSBub3RpY2VkIHRoZSBsb2dvIGFjcm9zcyB0aGUgd2Fpc3RiYW5kIG9mIG15IHVuZGVyd2VhciBhbmQgSSB0aG91Z2h0LCBJIGRvbiBsaWtlIHRoaXMuIEV2ZXJ5IGFydGljbGUgb2YgY2xvdGhpbmcgb24gbXkgYm9keSwgZnJvbSBteSBDb252ZXJzZSBzbmVha2VycyB0byBteSBMZXZpIHRvIG15IEFtZXJpY2FuIEFwcGFyZWwgVCBzaGlydCwgSSBsb3ZlLiBCdXQgSSBuZXZlciBsb3ZlZCBteSB1bmRlcndlYXIgYmVjYXVzZSB0aGVyZSB3YXMgbm90aGluZyBvdXQgdGhlcmUgdGhhdCBJIHRob3VnaHQgd2FzIHRydWx5IGNvb2wuIFNvIHRoZSBpZGVhIHdhcyBzcGFya2VkLiBpbiBFbmdsYW5kLCBNci4gUmlia29mZiBjYWxsZWQgaGlzIGdyYW5kZmF0aGVyIGFuZCB0b2xkIGhpbSBoZSB3b3VsZCBiZSBsZWF2aW5nIHRoZSBjb21wYW55IHRvIHN0YXJ0IGhpcyBvd24gYnVzaW5lc3MuIHNhaWQsIHlvdXIgZ3JhbmRmYXRoZXIgSSBwcm91ZCBvZiB5b3UgYnV0IGFzIHlvdXIgZW1wbG95ZXIgSSBzb3JyeSB0byBsb3NlIGEgZ29vZCBlbXBsb3llZS4gSXQgd2FzIHZlcnkgbW90aXZhdGlvbmFsLiBJIGNhdWdodCB0aGUgbmV4dCBmbGlnaHQgdG8gTW9udHJlYWwgYW5kIHNvb24gcmVhbGl6ZWQgSSB3YXMgaW4gd2F5IG92ZXIgbXkgaGVhZC4KU28gbWFueSB3cml0ZSB1cHMgYW5kIHJldmlld3MgaGF2ZSBiZWVuIHdyaXR0ZW4gYWJvdXQgb25saW5lIHBva2VyIGFuZCBjYXNpbm9zIGFuZCB0aGVpciBhZHZhbnRhZ2VzIG92ZXIgbGFuZCBjYXNpbm9zLiBBbmQgaXQgZG9lcyBtYWtlIHNlbnNlIHRvIG1vdmUgZnJvbSBsYW5kIGJhc2VkIHRvIG9ubGluZS4gCkE6IFNvbWV0aW1lcyBJIHdvdWxkIGxvb2sgYXJvdW5kIGFuZCBzYXksICJ3aGF0IGFtIEkgZG9pbmcgaGVyZT8gVGhpcyBpcyB0aGUgZHVtYmVzdCB0aGluZyBJJ3ZlIGV2ZXJ5IGRvbmUuIiBCdXQgYXQgdGhlIGVuZCBvZiB0aGUgZGF5LCBJJ2QgbG9vayBiYWNrIG9uIGl0IGFuZCBzYXksICJZb3Uga25vdyB3aGF0LCBJIG1hZGUgaXQgdGhyb3VnaCwgbm8gbWF0dGVyIGhvdyB0b3VnaCBpdCB3YXMuIEFuZCBub3cgSSBoYXZlIGEgcHJldHR5IGNvb2wgc3RvcnkgdG8gdGVsbC4iLiAKSSByYW4gZm9yIFN0YXRlIFJlcHJlc2VudGF0aXZlIGluIFRleGFzIGluIDIwMTQsIGFuZCBhcyBwYXJ0IG9mIHRoYXQgdGhlcmUgd2FzIGEgY2FuZGlkYXRlIHRyYWluaW5nIHNlc3Npb24gdGhhdCBJIHdhcyBhc2tlZCB0byBhdHRlbmQuIChUbyBnaXZlIHlvdSBhIGdvb2QgaWRlYSBvZiBob3cgbmFpdmUgSSB3YXMgYXMgYSBjYW5kaWRhdGUsIEkgd291bGQgb2Z0ZW4gZ28gYXJvdW5kIHRvIHRoZSBvdGhlciBwb2xpdGljaWFucyBhbmQgaW50cm9kdWNlIG15c2VsZiBhbmQgbXkgcHJpbWFyeSBvcHBvbmVudCwgSmlsbCwgd2hvIHdhcyBhbHNvIGF0dGVuZGluZy4pLiAKT3VyIGZhdm9yaXRlIHBhcnQgb2YgaXQgd2FzIHRoYXQgcGVvcGxlIGRpZG4ndCBoYXJhc3MgeW91LiBZb3UgY291bGQgY2FzdWFsbHkgc3Ryb2xsIGluIHRoZSBtYXJrZXQgYW5kIGxvb2sgYXQgd2hhdCBpbnRlcmVzdGVkIHlvdS4KRXJpYyBQYWRkb2NrIHNhaWQgaGUga25ldyBoaXMgYnJvdGhlciBoYWQgZmlyZWFybXMuIEhpcyBjaGlsZHJlbiBoYWQgZ29uZSBza2VldCBzaG9vdGluZyB3aXRoIHRoZWlyIHVuY2xlIGJlZm9yZSwgYnV0IEVyaWMgZGlkIG5vdCBrbm93IFN0ZXBoZW4gdG8gYmUgYSBodW50ZXIuCkkgbm90IHNheWluZyBjb2RkbGUgdGhlbS4gCkl0J3Mgd2hlcmUgaXQgYWxsIGJlZ2FuLiAKVGhhdCBpcyA4IG91dHMuIFRoZSA0LzIgcnVsZSBzdGF0ZXMgdGhhdCBpZiB5b3Ugd2FudCB0byBrbm93IHdoYXQgY2hhbmNlIHlvdSBoYXZlIHRvIHdpbiBpZiB5b3Ugb25seSBnbyB0byB0aGUgdHVybiwgeW91IG11bHRpcGx5IHlvdXIgb3V0cyBieSAyLiBJZiB5b3UgcGxhbiB0byBnbyB0byB0aGUgcml2ZXIsIHlvdSBtdWx0aXBseSB5b3VyIG91dHMgYnkgNC4gQSBxdWljayBjYWxjdWxhdGlvbiBzYXlzIEkgaGF2ZSBhIDE2JSBjaGFuY2UgdG8gaGl0IG15IHN0cmFpZ2h0IGlmIEkgZ28gdG8gdGhlIHR1cm4sIGFuZCBhIDMyJSBjaGFuY2UgdG8gd2luIGlmIEkgZ28gdG8gdGhlIHJpdmVyLiAKSW4gb25lIHN0dWR5LCBoZWFsdGh5IHN1YmplY3RzIHdlcmUgZ2l2ZW4gcHJvYmlvdGljcyBmb3IgMzAgZGF5cy4gCk9oLCBub3QgYmVjYXVzZSBJIHJlYWxpemVkIEkgd2FzIGEgc2lubmVyIGFuZCBuZWVkIHRvIGJlIHNhdmVkLiAKVGhlIGNhc2ggYmFjayBib251czoKRm9yIEZQUywgdGhvdWdoLCBUcmliZXMgYW5kIFRyaWJlcyAyIGhhdmUgZXZlcnlvbmUgYmVhdC4uIApUaGVzZSB3ZWJzaXRlcyBvd24gdGhvdXNhbmRzIG9mIGFjY291bnRzIGp1c3QgdG8gYm9vc3QgdGhlIGFjY291bnRzIG9mIHBlb3BsZSB3aWxsaW5nIHRvIHBheSwgYW5kIHdpbGwgc29tZXRpbWVzIGhhY2sgb3RoZXIgcGVvcGxlIGFjY291bnRzIHRvIHVzZSB0byBtYWtlIHRoZSBpbnRlcmFjdGlvbiBsb29rIG1vcmUgb3JnYW5pYy4gClNvbWV0aW1lcyBJIHN1cnByaXNlIG15IGdpcmxmcmllbmQgd2hlbiBJIHB1dCBvbiBvbmUgb2YgaGVyIHNvbmdzIGluIHRoZSBjYXIgYW5kIHNpbmcgZXZlcnkgbHlyaWMgdG8gaXQsIGJlY2F1c2Ugd2UgYm90aCBoYXZlIGRpZmZlcmVudCBtdXNpYyB0YXN0ZXMuIFNvIGV2ZW4gdGhvdWdoIEknbSBxdWlldCBhdCBmaXJzdCwgZ2V0IHRvIGtub3cgbWUgYW5kIHlvdSB3b24ndCBoZWFyIHRoZSBlbmQgb2YgbWUuLiAKV2hlbiBmb3VyIGh5ZHJvZ2VuIG51Y2xlaSBmdXNlIHRvIGZvcm0gaGVsaXVtLCAuNyBwZXIgY2VudCBvZiB0aGUgbWFzcyBpcyB0cmFuc2Zvcm1lZCBpbnRvIGVuZXJneS4gCiJXZSBoYXZlIHBvc3RlZCBhIG1lc3NhZ2UgdG8gb3VyIENvbW11bml0eSBTYWZldHkgd2Vic2l0ZSwgdXBkYXRlZCBvdXIgU2FmZXR5IEFwcCB3aXRoIGRldGFpbHMgYW5kIGltcG9ydGFudCBjb250YWN0IGluZm9ybWF0aW9uLCBhbmQgd2UgaGF2ZSBjb25uZWN0ZWQgd2l0aCB0aGUgcG9saWNlLi4gCkxhcyBWZWdhcyBTYW5kcyBDb3JwLiBpcyBzZWxsaW5nIGl0cyBQZW5uc3lsdmFuaWEgY2FzaW5vIHRvIGFuIEFtZXJpY2FuIEluZGlhbiB0cmliZSBmcm9tIEFsYWJhbWEgZm9yICQxLjMgYmlsbGlvbiwgdGhlIGNvbXBhbnkgYW5ub3VuY2VkIFRodXJzZGF5LgpXZSBzaG91bGQgdW5kZXJzdGFuZCBlYWNoIG90aGVyLiAKQWNjZXNzb3JpZXM6IE1hbnkgZXhlcmNpc2UgYmFsbHMgY29tZSB3aXRoIGFjY2Vzc29yaWVzLCBzdWNoIGFzIHB1bXBzLCBhbiBleGVyY2lzZSBzaGVldCBvciBhIERWRC4gSWYgdGhlIGJhbGwgaGFzIGEgdGlueSBwdW1wLCB5b3Ugd2lsbCBwcm9iYWJseSB3YW50IHRvIHVzZSBhIGRpZmZlcmVudCBwdW1wIGJlY2F1c2UgeW91IHdpbGwgb3RoZXJ3aXNlIHRha2UgYSBsb25nIHRpbWUgdG8gaW5mbGF0ZSB0aGUgYmFsbC4gQW55IHB1bXAgd2l0aCBhIG5venpsZSB0aGF0IGZpdHMgc2VjdXJlbHkgaW4gdGhlIGV4ZXJjaXNlIGJhbGwgY2FuIGJlIHVzZWQuIApXZSBjYW4gc2F2ZSBldmVyeSBzaW5nbGUgcmVmdWdlZSwgYnV0IHdlIGRvIGNvbW1pdCB0byBhIHF1b3RhIGFuZCBoYXZlIHRoZW0gdW5kZXJnbyBhbiBleHRyZW1lbHkgbG9uZyBwcm9jZXNzIHRvIG1ha2UgaXQgaGVyZS4gCllvdSBnb25lIGZyb20gd2lubmluZyAwLzEwMCBnYW1lcyB0byB3aWxsaW5nIDY1LzEwMCBnYW1lcywgd2l0aG91dCBnZXR0aW5nIGJldHRlciBhdCB0ZW5uaXMgYXQgYWxsLi4gClRoZXkgY291bGRuJ3QgaGF2ZSBiZWVuIHNwaWVzLiBXaGF0IHNoZSBkaWQgd2l0aCB0aGUgaHlkcmFuZ2Vhcy4iQnV0IHRoZSByZWFsIHdheSB0byB1bmRlcnN0YW5kIGFsbCBvZiB0aGlzIGlzIG5vdCB0aHJvdWdoIHBvbGl0aWNzLCBidXQgbGl0ZXJhdHVyZS4gQW1lcmljYW5zIGxvdmUgdGhlbSBhIGdvb2Qgcm9tYW5jZSBvciBldmVuIGFuIGFkdmVudHVyZSBzdG9yeS4gClRoaXMgb2YgY291cnNlIGRlcGVuZHMgb24gdGhlIHN0cmVuZ3RoIG9mIHlvdXIgcG9rZXIgaGFuZC4uIApUaGlzIGlzIHRoZSBiZXN0IHRoaW5nIEkgcmVhZCBpbiAyMDE4LiBNeSBwcmVjb25jZXB0aW9ucyBoYXZlIGJlZW4gc2hhdHRlcmVkIGJ5IHRoZSBzdG9yaWVzLCBleHBlcnRseSBkcmF3biBvdXQgYnkgV2lsdG9uIGFuZCB0b2xkIHdpdGhvdXQganVkZ2VtZW50LiAKQ29tbWVudCByZXBsaWVzIGNvbnNpc3Rpbmcgc29sZWx5IG9mIGltYWdlcyB3aWxsIGJlIHJlbW92ZWQuIApJbnN0ZWFkIG9mIGJsb2NraW5nIGJhbGxzIGhlIHdvdWxkIGJsb2NrIGJvZGllcy4gCkVTUE4gZ2l2ZXMgZmFucyB0aHJpbGwgb2Ygd2F0Y2hpbmcgV29ybGQgU2VyaWVzIG9mIFBva2VyJ3MgTm92ZW1iZXIgTmluZSB1bmZvbGQKVGVybWluYXRlIHlvdXIgcGFyZW50YWwgcmlnaHRzIHNvIEkgY2FuIGhhdmUgc3BlbmRpbmcgbW9uZXkuCkRhbm4gaGFiZSBpY2ggZ2VtZXJrdCwgZGFzcyBSYWluZXIgZWlnZW50bGljaCBnYW56IG5ldHQgaXN0IHVuZCBoYWJlIGJlZ29ubmVuIG1pdCBpaG0gc3BhemllcmVuIHp1IGdlaGVuLiBEYSB3aXIgbnVyIHp3ZWkgSHVzZXIgZW50ZmVybnQgd29obmVuIGdlaGUgaWNoIGZhc3QgamVkZW4gVGFnIGVpbiBiaXMgendlaSBTdHVuZGVuIG1pdCBpaG0gd2Fsa2VuIG9kZXIgc3BhemllcmVuIHVuZCBzZWl0IGljaCBpaG4gc28gZXR3YXMgYXVmIFRyYXBwIGhhbHRlLCBoYXQgZXIgc29nYXIgc2Nob24gZWluIHBhYXIgS2lsbyBhYmdlbm9tbWVuLi4gCkZvbGQgYW5kIHRiaCBpIGRvbnQgZXZlbiB0aGluayBpdHMgcGFydGljdWxhcmx5IGNsb3NlLCBpZiB1dGcrMSByZWFsbHkgaXMgYSB0aGlua2luZyBwbGF5ZXIgdGhlbiBoZSBwcm9icyBmbGF0dGluZyBoaXMgd2hvbGUgY29udGludWluZyByYW5nZSB2cyB0aGUgb3JpZ2luYWwgamFtIGFuZCBpcyBuZXZlciBnb25uYSBiZSBzdXBlciBsaWdodCAod2hlbiB5b3UgY2FuIHRha2UgYmFzaWNhbGx5IGFsbCB3b3JzZSBwYWlycyBhbGwgdGhlIG5vbiBBeCBicm9hZHdheXMgYW5kIGFsbCBBeCB0aGVtc2VsdmVzIGJlc2lkZXMgcHJvYnMgc210aCBsaWtlIEFKcysvQVFvKyBvdXQgb2YgaGlzIHJhbmdlIHlvdSBsZWZ0IHdpdGggYSB0aGluZyB0aGF0IGhhcyA3NyBpbiBwcmV0dHkgYmFkIHNoYXBlKSwgaSBhbHNvIHRoaW5rIHRyeWluZyB0byBnZXQgcGVvcGxlIHRvIGZvbGQgc3Ryb25nIHJhbmdlcyBhZnRlciB0aGV5dmUgc3R1Y2sgYWxtb3N0IGEgMS8zIG9mIGVmZmVjdGl2ZSBzdGFja3MgaW4gdGhlIG1pZGRsZSBpcyBqdXN0IHByZXR0eSBoZXJvaWMgaW4gZ2VuZXJhbCBhbmQgYWxzbyB0aGlzIGlzIGJlZm9yZSB3ZXZlIGV2ZW4gYmVnaW4gdG8gZmFjdG9yIGluIHV0ZyB3aG8gZXZlbiBpZiBoZSB3ZWFrIGFuZCBoYXMKVGhlc2UgZmllbGRzIGFyZSB0aGUgZnV0dXJlIG9mIHRoZSB0ZWNobm9sb2d5IGluZHVzdHJ5LCBzbyBtdWNoIHNvIHRoYXQgVmlyZ2luaWEgVGVjaCByZWNlbnRseSBhbm5vdW5jZWQgaXRzIHBsYW4gdG8gb3BlbiBhbiBJbm5vdmF0aW9uIENhbXB1cyBpbiBBbGV4YW5kcmlhLCBWYS4gICB0d28gbWlsZXMgZnJvbSBBbWF6b24ncyBuZXcgbG9jYXRpb24gaW4gQXJsaW5ndG9uICAgZm9jdXNpbmcgb24gY29tcHV0ZXIgc2NpZW5jZSwgY29tcHV0ZXIgZW5naW5lZXJpbmcgYW5kIHNvZnR3YXJlIGVuZ2luZWVyaW5nLiBUaGlzIGFubm91bmNlbWVudCBpbiBhIG1ldHJvcG9saXRhbiBhcmVhIGFscmVhZHkgcmVjb2duaXplZCBhcyBhIHRvcCBwcm9kdWNlciBvZiBoaWdobHkgc2tpbGxlZCB0YWxlbnQgc2hvd3MgdGhhdCB0aGUgbmVlZCBmb3IgbW9yZSB0ZWNoIGdyYWR1YXRlcyB3aWxsIG9ubHkgY29udGludWUgdG8gaW5jcmVhc2UgYWNyb3NzIHRoZSBjb3VudHJ5LgpNZWRpdW0gc2l6ZWQgcHVtcGtpbnMgYXJlIHRoZSBtb3N0IHBvcHVsYXIgZm9yIGphY2sgbyBsYW50ZXJucy4gSXQgbWF5IGJlIHNob3J0IGFuZCBzcXVhdCBvciB0YWxsIGFuZCBuYXJyb3csIGRlcGVuZGluZyBvbiB0aGUgaW1hZ2UgdG8gY2FydmUuIApBbGwgbXkgc3R1ZmYgd2FzIGxpbmVkIHVwIGluIG9yZGVyIG9mIG15IGNsYXNzZXMgc28gSSB3b3VsZCBwdXQgbXkgc3R1ZmYgYXdheSBhbmQgZ3JhYiB0aGUgb25lcyByaWdodCBuZXh0IHRvIGl0LiBUaGUgb25lcyB0aGF0IHdlcmUgbGF0ZSBhbGwgdGhlIHRpbWUgd2VyZSB0aGUgb25lcyB3aG8ganVzdCB0aHJldyBzaGl0IGludG8gdGhlaXIgbG9ja2VyIHNvIGFsd2F5cyBoYWQgdG8gZGlnLi4gCjE5IHBvaW50cyAgc3VibWl0dGVkIDQgZGF5cyBhZ29JIGEgZnJlZWxhbmNlIGlsbHVzdHJhdG9yLCBhbmQgSSBjYW4gdGVsbCB5b3UgdGhhdCBpdCBpcyAxMDAlIG9uIHRoZSBhcnRpc3QgdG8gbWFyayB0aGVpciB3b3JrIHdpdGggdGhlaXIgbmFtZS9icmFuZC4gSSBoYXZlIGdvdHRlbiBtYW55IGNvbW1pc3Npb25zL2NvbnRyYWN0cyBiZWNhdXNlIHNvbWVvbmUgc2F3IG15IHdvcmsgcG9zdGVkIG9uIHJlZGRpdCBvciB0d2l0dGVyICh3aGljaCBJIGRvbiBldmVuIHVzZSkgYW5kIHRoZXkgbG9va2VkIG1lIHVwLkkgZG9uIGV2ZW4gdGhpbmsgaXQgdXAgZm9yIGRlYmF0ZSBhbnltb3JlIHRoYXQgcGVvcGxlIGFyZSBtb3JlIGxpa2VseSB0byB2aWV3IGEgZGlyZWN0IGltYWdlIGxpbmsgdGhhbiB0byBicm93c2Ugc29tZSB3ZWJzaXRlIHRoYXQgbWlnaHQgcmVxdWlyZSBhIGxvZ2luIChsb29raW5nIGF0IHlvdSBQaXhpdikuIApBbmQgZnJvbSB0aGVzZSBwZW9wbGUgaXQgYnJhbmNoZXMgdG8gb3RoZXIgcGVvcGxlIHdobyBoYXZlIGJlZW4gaW4gdGhlIG5ld3MgZm9yIE1lVG9vIGFuZCBwZWRvIHN0dWZmLCBzdWNoIGFzIEJyeWFuIFNpbmdlciwgQnJldHQgUmF0bmVyLCBTaW1tb25zLCBldGMuLiAKV2FzIHRpbWUgdG8gc2xvdyBkb3duIGEgbGl0dGxlIGJpdCBhbmQgZWF0IGEgc3RlYWssIFdvb2QgcXVpcHBlZC4gU3dlYXRpbmcgc3RlYWtzLiAKQkVSUklTT1VSICAyMSBwb2ludHMgIHN1Ym1pdHRlZCAxMSBtb250aHMgYWdvClBoeXNXaW4odW50ZXIgRmlyc3QgSXQgdW5kIFN3aXNzQ2hpcm9Qb29sKWhhdCBkYXJ1bSBiZXJlaXRzIDIwMTMgZGllIFRheHdlcnRlIGFuIGRpZSBWZXJzaWNoZXJlciBnZWhlZnRldCB1bmQgZXJsYXVidCBwcm8gS2FudG9uIGJpcyB6dSA5IHZlcnNjaGllZGVuZSBUYXJpZmUgYnp3LiBUYXJpZmdydXBwZW4sIGRpZSBkZXJqZXdlaWxpZ2VuIEthc3NlenVnZXdpZXNlbiB3aXJkLiBFaW5tYWwgenVnZXdpZXNlbiBzaW5kIGRpZSBSZWNobnVuZ2VuIHNvIG9obmUgUHJvYmxlbWUgZ2VkcnVja3QsIGVsZWt0cm9uaXNjaCB2ZXJzY2hpY2t0IG9kZXIgYmVyIGVpbiBUcnVzdENlbnRlci9yenRla2Fzc2UgYWJnZXJlY2huZXQuIApJbiB0aGUgb3BlbiBsYWJlbCBwaGFzZSAoZmlyc3QgcGhhc2UpLCBjaGlsZHJlbiBhZ2VkIDQgdG8gOCB5ZWFycyB3aG8gd2VyZSBkaWFnbm9zZWQgd2l0aCBBREhEIHdlcmUgcmFuZG9tbHkgYXNzaWduZWQgdG8gNSB3ZWVrcyBvZiBhIHJlc3RyaWN0ZWQgZWxpbWluYXRpb24gZGlldCAoZGlldCBncm91cCkgb3IgdG8gaW5zdHJ1Y3Rpb25zIGZvciBhIGhlYWx0aHkgZGlldCAoY29udHJvbCBncm91cCkuIAoiSXQncyBzdWNoIGEgcG9zaXRpdmUgYW5kIHN1cHBvcnRpdmUgZ3JvdXAgaXQgZG9lc24ndCBtYXR0ZXIgaG93IHN0cm9uZyBvZiByaWRlciB5b3UgYXJlLCB3ZSdyZSBhbHdheXMgdHJ5aW5nIHRvIHJlY3J1aXQgbW9yZSBwZW9wbGUsIiBSb2JlcnRzIHNhaWQuICJJdCdzIG1vcmUgdGhhbiBqdXN0IExlZnQgSGFuZCBCcmV3aW5nLiBFdmVuIGp1c3QgdHJhaW5pbmcgYW5kIGdldHRpbmcgb3V0IHdhcyBhIHJlYWxseSBiaWcgZGVhbCBmb3IgbWUgYW5kIHRoaW5raW5nIGFib3V0IGhvdyBmYXIgSSd2ZSBjb21lIHdpdGggdGhlaXIgaGVscCBpcyBpbmRlc2NyaWJhYmxlLiIuCk9uY2UgQ2hhaGFsIGNvbXBsZXRlZCBoaXMgcXVvdGEsIERob25pIGxpbmVkIHVwIE5lZ2kgYW5kIGRyaWxsZWQgaGltIGZvciB0d28gbW9yZSBzaXhlcywgaW5jbHVkaW5nIG9uZSB0aGF0IGhpdCB0aGUgZ2xhc3Mgb2YgdGhlIHByZXNzIGJveC4gCldpciBoYWJlbiBnZW51ZyBTY2hhZmUsIHVtIFZlcmxldHp0ZSB6dSBzY2h0emVuLCBkYXMgaGlsZnQgd2lya2xpY2ghIFVuc2VyIE11bWEgU3RhZGlvbiwgdm9uIE1hb3JpIGVycmljaHRldCwgaXN0IHp3YXIgb2huZSBCZWRldXR1bmcsIGFiZXIgbWl0IDIwMCBTdHJvaHBsdHplbiB1bmQgYmlldGV0IHNpY2ggYWxzIEJlc2NoYXV1bmdzcGxhdHogZnIgRnViYWxsIGFuLCBlcyB3ZXJkZW4gd29obCBlaCBuaWNodCB2aWVsZSBrb21tZW4uIERpZSBhbmRlcmVuIFNwb3J0YXJ0ZW4gbXNzZW4gaW0gV2FsZCBzdGF0dGZpbmRlbi4gCk91dGRvb3JzSGVhZGxpbmVzQlJBRCBET0tLRU4gQ09MVU1OOiBVcGNvbWluZyBFcnNraW5lLCBNaW5uLiwgZmlsbSBmZXN0aXZhbCBoaWdobGlnaHRzIGh1bnRpbmcgZmlsbXMgZnJvbSBtZW1iZXJzIG9mIFRoZSBTdG9yeUZsb3JpZGEgZmlzaGluZyBmcmVuenk6ICJHdW5zISBHdW5zISBHdW5zISIgR3JvdXAncyBHdWxmIGdyb3VwZXIgZ2F0aGVyaW5nIGdvZXMgZ3JlYXRCZWx0cmFtaSBmb3Jlc3QgcmlkZSBzaG93Y2FzZXMgdHJhaWwgZWZmb3J0cyBvZiBsb2NhbCBzbm93bW9iaWxlIGNsdWJzQUxXQVlTIElOIFNFQVNPTi8gTUlLRSBKQUNPQlM6IExvbmdzcHVyczogTW9yZSBvZnRlbiBzZWVuIHRoYW4gcmVjb2duaXplZCBPVVRET09SUyBDQUxFTkRBUjogQmFucXVldHMsIEh1bnRpbmcgZmlsbSBmZXN0aXZhbHMgYW5kIGZhbWlseSBldmVudHMgYW1vbmcgb3V0ZG9vciBhY3Rpdml0aWVzIG9uIHRhcG9waW5pb25IZWFkbGluZXNMZXR0ZXI6IENoYWxsZW5nZSBHcmFudCBpbnZlc3RzIGluIE5vcnRoIERha290YSBmdXR1cmVPdXIgdmlldzogRm9yIHNha2Ugb2YgbG9jYWwgYmFzZSBhcHByb3ZlIDIzMDYgU2hhdzogUmVtZW1iZXJpbmcgZm9ybWVyIE5EIEdvdi4gR2VvcmdlIFNpbm5lclBvcnQ6IExhdyBlbmZvcmNlbWVudCBmb3VuZCBubyB0aHJlYXQgdG8gUmVwLiAgIEEgNDkgeWVhciBvbGQgSGlsbHNib3JvIG1hbiBmYWNlcyBhbiBhZ2dyYXZhdGVkIGFzc2F1bHQgY2hhcmdlIGFmdGVyIGFuIGFyZ3VtZW50IGFib3V0IGEgc2V2ZW50aCBwbGFjZSBmaW5pc2ggaW4gYSBwb2tlciB0b3VybmFtZW50IHR1cm5lZCB2aW9sZW50LgpUaGVyZSBhcmUgbW9yZSBpc3N1ZXMgYW5kIGRlc2lnbnMgZm9yIGEgQ2FzaW5vIFBva2VyIFRhYmxlIEZlbHQgdGhhdCB3ZSBjb3VsZCBsaXRlcmFsbHkgZ28gb24gYW5kIG9uIGZvcmV2ZXIuIEluc3RlYWQgdGhvdWdoLCBhbGwgeW91IG5lZWQgdG8gZG8gaXMgYXNrIHlvdXJzZWxmIGEgZmV3IHNpbXBsZSBxdWVzdGlvbnMuIApTaW5jZSB0aGUgZGF0YSBpcyBlbmNyeXB0ZWQgYW5kIGRpc3RyaWJ1dGVkIG92ZXIgbWFueSBkaWZmZXJlbnQgY29tcHV0ZXJzLCBhbnl0aGluZyBzdG9yZWQgb24gRnJlZW5ldCBpcyBuZWFybHkgaW1wb3NzaWJsZSBmb3IgdGhlIGdvdmVybm1lbnQgb3IgYW55b25lIGVsc2UgdG8gdGFrZSBkb3duLiAKWW91IGRpZG4ndCBoYXZlIGEgcGVubnkgdG8geW91ciBuYW1lLiBJIGRpZCBub3QuIFdoZW4geW91IHdlcmUgdGFraW5nIHRpcHMsIHBlcmZlY3RseSBsZWdhbC4gV2hlbiB5b3UgbW92ZWQgdGhlIGdhbWUgaGVyZSwgZGVhbGluZyB3aXRoIGJpbGxpb25haXJlcy4gVGhlcmUgd2FzIGFuIGVsZW1lbnQgb2Ygb3JnYW5pemVkIGNyaW1lIGdldHRpbmcgaW52b2x2ZWQsIGFzIHdlbGwuIFlvdSBkZWNpZGVkIHRvIHRha2UgYSBicmVhay4gQW5kIHRoYXQgd2FzIGEgcGVyY2VudGFnZSBvZiB0aGUgcG90LiAKSW4gdGhyZWUgaXNzdWVzMSBvZiBOYXR1cmUgKExvbmRvbikgbWFnYXppbmUgaW4gMTg4MywgV2lsbGlhbSBUaG9tc29uIChMb3JkIEtlbHZpbikgcG9seW1hdGggb2YgYSBncmVhdCBhbmQgaW5xdWlzaXRpdmUgbWluZCB0cmllZCB0byBlc3RhYmxpc2ggYSBnb29kIHJlZmVyZW5jZSBwb2ludCBmb3IgdGhlIHNpemUgb2YgYXRvbXMsIG1haW5seSB0byBlc3RhYmxpc2ggdGhhdCB0aGVpciBzaXplIHdoaWxlIGJlaW5nIGluY3JlZGlibHkgc21hbGwgd2VyZSBub3QgdW5pbWFnaW5hYmx5IHNvLCBhbmQgdGhhdCBldmVuIG9iamVjdHMgb2YgdGhpcyBtaW5vciBtYWduaXR1ZGUgY291bGQgYmUgYXBwcm94aW1hdGVkIGFuZCBzdHVkaWVkLiBoZSBkaWQgc28gd2l0aCBncmVhdCBlYXNlIGFuZCBpbiBhIHBvcHVsYXIgZ2VuZXJhbCBhdWRpZW5jZSBzb3J0IG9mIHdheS4KQ2xhc3NlcyBhbmQgcmFjZXMgbWl4ZWQgdG9nZXRoZXIuIApBdCB0aGUgYmFzaWMgbGV2ZWwgSG9sZCAnRW0gaXMgYSBoaWdoIGNhcmQgZ2FtZSB3aGVyZSB0aGUgcGxheWVyIGlzIGRlYWx0IHR3byBjYXJkcyB3aGljaCBhcmUga25vd24gYXMgdGhlICdob2xlIGNhcmRzJy4gRml2ZSBjb21tdW5pdHkgY2FyZHMgYXJlIHRoZW4gZGVhbHQgZmFjZSB1cCBpbiB0aHJlZSBzdGFnZXMgICB0aGUgRmxvcCwgdGhlIFR1cm4gYW5kIHRoZSBSaXZlci4gVGhlIGlkZWEgaXMgZm9yIHRoZSBwbGF5ZXJzIHRvIHVzZSB0aGVpciB0d28gZGVhbHQgY2FyZHMgYW5kIHRoZXNlIGNvbW11bml0eSBjYXJkcyB0byBtYWtlIHRoZSBiZXN0IHBvc3NpYmxlIGZpdmUgY2FyZCBwb2tlciBoYW5kLiBUaGVyZSBpcyBhIHNtYWxsIGRpc2Mgb24gdGhlIHRhYmxlIHdoaWNoIGlzIHRoZSBkZWFsZXIgYnV0dG9uICAgaXQgcmVwcmVzZW50cyB0aGUgcG9zaXRpb24gb2YgdGhlIHRoZW9yZXRpY2FsIGRlYWxlciBmb3IgZWFjaCBoYW5kLiBXaGVuIHRoZSBoYW5kIGlzIGZpbmlzaGVkIHRoZSBidXR0b24gZ2V0cyBtb3ZlZCBjbG9ja3dpc2UgZnJvbSBwbGF5ZXIgdG8gcGxheWVyLiBUaGUgRmxvcEJlZm9yZSByb3VuZCBvbmUgdGhlIHR3byBwbGF5ZXJzIHRvIHRoZSBsZWZ0IG9mIHRoZSBidXR0b24gcGxhY2UgZm9yY2VkIHdhZ2VycyAnYmxpbmRzJyBpbiBvcmRlciB0byBzdGFydCB0aGUgcG90LCB3aXRoIHRoZSBwbGF5ZXJzIGltbWVkaWF0ZWx5IGxlZnQgb2YgdGhlIGJ1dHRvbiBwb3N0aW5nIGEgc21hbGwgYmxpbmQ7IGEgYmV0IGVxdWFsIHRvIGhhbGYgdGhlIHZhbHVlIG9mIHRoZSB0YWJsZXMgbG93ZXIgc3Rha2UgbGltaXQ7IHdoaWxlIHRoZSBwbGF5ZXIgdG8gdGhlIGxlZnQgb2YgdGhlIHNtYWxsIGJsaW5kIHBsYWNlcyBhIGJpZyBibGluZCB3YWdlcjsgZXF1YWwgdG8gdGhlIGZ1bGwgdmFsdWUgb2YgdGhlIHRhYmxlcyBsb3dlciBzdGFrZS4gVGhlIGJsaW5kcyBhcmUgbGl2ZSBiZXRzIGFuZCBhZnRlciB0aGV5IGhhdmUgYmVlbiBwbGFjZWQgZWFjaCBwbGF5ZXIgaXMgZGVhbHQgdGhlaXIgdHdvIHBlcnNvbmFsIGNhcmRzLCB0aGUgZ2FtZSBnb2luZyBjbG9ja3dpc2UgYW5kIGVhY2ggcGxheWVyIG9mZmVyZWQgdGhlIG9wdGlvbiBvZiByYWlzaW5nLCBmb2xkaW5nIG9yIGNhbGxpbmcuIE9uY2UgdGhlIGZpcnN0IHJvdW5kIG9mIGJldHRpbmcgaXMgZG9uZSwgdGhlIGZpcnN0IHRocmVlIGNvbW11bml0eSBjYXJkcyBhcmUgZGVhbHQgKFRoZSBGbG9wKS4gVGhlIFR1cm5BZnRlciB0aGUgRmxvcCB0aGUgcGxheWVyIHNpdHRpbmcgZGlyZWN0bHkgbGVmdCBvZiB0aGUgYnV0dG9uIGRlY2lkZXMgb24gdGhlaXIgcGxheSwgYW5kIHRoZSBnYW1lIGNvbnRpbnVlcyBjbG9ja3dpc2UuIFBsYXllcnMgY2FuIG9ubHkgY2hlY2sgaWYgbm8gYmV0IGhhcyB5ZXQgYmVlbiBtYWRlIG9uIGEgcm91bmQsIGFuZCB0aGUgdmFsdWUgb2Ygd2FnZXJzIGJlZ2lucyBhdCB0aGUgbG93ZXIgbGV2ZWwgb2YgdGhlIHN0YWtlIHN0cnVjdHVyZS4gT25jZSBtb3JlIHVwcGVyIGxpbWl0IGJldHMgYXJlIHVzZWQuIEVhY2ggdHVybiBvZiB0aGUgY2FyZHMgY2FuIGxlYWQgdG8gZGVzdHJ1Y3Rpb24gb3IgZ2xvcnkuCjkuIDE2IHZvdGVzIC4gCihGdWxsIEFuc3dlcilXaGF0IGRvIHRoZSBwb2tlciBjaGlwcyBzdGFuZCBmb3IgaW4gcG9rZXI/SW4gcG9rZXIgdGhlIGNoaXBzIGhhdmUgYSB2YWx1ZSwgdGhpcyB2YWx1ZSBpbmRpY2F0ZXMgaG93IG11Y2ggdGhhdCBwYXJ0aWN1bGFyIGNoaXAgaXMgd29ydGguIApJIHRoaW5rIGlmIHlvdSB3YW50IHRvIGNvbnRpbnVlIGRvaW5nIHRoYXQsIGFuZCBjb250aW51ZSBidWlsZGluZyBpdCB1cC4gCkkgd29yayBhbmltYWwgY29udHJvbCBkaXNwYXRjaCBhbmQgZG9ncyBpbiBjYXJzIHByb2JhYmx5IG1ha2UgdXAgNTAlIG9mIGRhaWx5IGNhbGxzIGluIHRoZSBzdW1tZXIuIApKb2hubnkgUm9kZ2VyczogRmxhaXIgb24gYW5kIG9mZiB0aGUgZmllbGQuCkRvbid0IGxldCB0aGUgam9rZXMgYW5kIGZ1biBtdXNpYyBmb29sIHlvdTsgdGhlcmUncyBhIGhlYXZ5IGRvc2Ugb2YgU2F2aW5nIFByaXZhdGUgUnlhbiBpbiB0aGlzICJ2ZXJ5IHNwZWNpYWwgZXBpc29kZS4iIENvcmV5IGVubGlzdHMgaW4gdGhlIEFybXksIG9ubHkgdG8gbmV2ZXIgcmV0dXJuLiBTaGF3biBpcyBmb3JjZWQgdG8gcmVsYXkgdGhlIG5ld3MgdG8gaGlzIGZhbWlseSBhbmQgZ2lybGZyaWVuZCwgYW5kIHRoZW4gZnVsZmlsbCBDb3JleSdzIGxhc3Qgd2lzaCB0aGF0IFNoYXduIG1hcnJ5IGhlciBpbiBoaXMgcGxhY2UuIENvcmV5IGlzIGxhdGVyIGZvdW5kIGluIGEgUGFyaXMgY2FmZSwgc3VmZmVyaW5nIGZyb20gc2hlbGwgc2hvY2sgaW5kdWNlZCBtZW1vcnkgbG9zcywgaW4gd2hhdCdzIGJhc2ljYWxseSBUaGUgRW5nbGlzaCBQYXRpZW50IHdpdGggYSBsYXVnaCB0cmFjay4gCk15IGh1c2JhbmQgcGxheXMgcG9rZXIgYXQgYSBmcmllbmQncyBob21lLCB0aGlzIGluIGl0c2VsZiBkb2VzIG5vdCBib3RoZXIgbWUuIFRoZSBvbmUgdGhpbmcgdGhhdCB3b3VsZCBib3RoZXIgbWUgaXMgdGhhdCBoZSBzdGF5cyB0aGVyZSBhbGwgbmlnaHQsIGxpa2UgZnJvbSA4cG0gdG8gNGFtLiBFdmVudHVhbGx5LCBJIHdhcyBva2F5IHdpdGggdGhpcyBvbiBjb25kaXRpb24gdGhhdCBoZSBnb2VzIHRvIHBva2VyIG9ubHkgTW9uZGF5IFRodXJzZGF5LCB3ZWVrZW5kIGlzIGZhbWlseSB0aW1lLiBIZSB3YXMgcmVhbGx5IGhhcHB5IHdpdGggdGhpcyBiZWNhdXNlIHBva2VyIGlzIGEgd2Vla2RheSB0aGluZyBmb3IgaGltIGFueXdheS4gTGFzdCBuaWdodCwgREggKGRlYXIgaHVzYmFuZCkgYXNrZWQgaWYgaGUgY291bGQgZ28gdG8gcG9rZXIgYW5kIEkgc2FpZCBubywgaGUgY291bGQgZ28gZHVyaW5nIHRoZSB3ZWVrLiBUdXJucyBvdXQgdGhhdCBhZnRlciBJIHdlbnQgdG8gYmVkIGFyb3VuZCAxMHBtLCBoZSB3ZW50IHRvIHBva2VyISBJIHdva2UgdXAgYXQgMzMwIGJlY2F1c2UgTE8gKGxpdHRsZSBvbmUpIHdhcyBjcnlpbmcgYW5kIHRoYXQncyB3aGVuIEkgZm91bmQgaGUgd2FzIGdvbmUuIFRoaXNoYXMgaGFwcGVuZWQgb25jZSBlYXJsaWVyIHRoaXMgeWVhcjsgaGUgY2xhaW1lZCBoZSBoYWQgdG8gc3RheSBhdCB3b3JrIGxhdGUgYnV0IEkgbGF0ZXIgZm91bmQgb3V0IGhlIHdlbnQgdG8gcG9rZXIuCkJ1dCB3ZSBuZXZlciByZWFsbHkgYWxsb3cgc3BhY2UgZm9yIHRoZSBzdG9yaWVzIG9mIFBhbGVzdGluaWFucyBzZWVraW5nIHNhZmV0eSBhbmQgc2FuY3R1YXJ5IHRvIGJlIHVwbGlmdGVkLiAKQSBwbGF5ZXIgd2l0aCAyIGNhcmRzIHRoYXQgYXJlIGFjdGl2ZSBzaGUgY2FuIGFkZCB0aGF0IHRvIHRoZSBzdG9ja3BpbGUuIE9yIHNoZSBjYW4gcHV0IHRoZSBjYXJkIG9uIHRoZSB0YWJsZSBhbmQgY2FsbCBpdCBhIGpva2VyLiAKSSBzYWlkIHdvdywgc28gZGlkIHlvdSBoaXQgdGhlIGJ1bGxzZXllPyBIZSByZXNwb25kZWQgYnkgdGVsbGluZyBtZSB0aGV5IGRpZG4gYWN0dWFsbHkgdGhyb3cgZGFydHMsIGp1c3QgcHJhY3RpY2VkIGFybSBtb3ZlbWVudCBmb3IgNDAgbWludXRlcy4gCkxlcyByc3VsdGF0cyBzb250IHB1YmxpcyBlbiAxOTEzIGRhbnMgdW4gbGl2cmUgY29jcml0IGF2ZWMgQW5uaWUgQmVzYW50IEwgZCBpbCB2aWVudCwgbyBpbCB2YS4gUmVjaGVyY2hlcyBmYWl0ZXMgIGwgZGUgbGEgY2xhaXJ2b3lhbmNlLi4gClRoZW4geW91IHRocm93aW5nIHRoZSBkaWNlIHRoZSB3cm9uZyBkaXJlY3Rpb24uCkkgd2lzaCB0aGF0IHRoYXQgcmVhbGx5IGF3ZXNvbWUgYnVzaW5lc3MgaWRlYSBzaGUgaGFkIGJlZm9yZSB3ZSBzdGFydGVkIGRhdGluZyAgIHRoZSBvbmUgdGhhdCBhbnl0aW1lIHNoZSByZWFsbHkgdHJpZWQgdG8gZG8gYW55IHdvcmsgb24gc2hlJ2QgZ2V0IGZydXN0cmF0ZWQgd2l0aCBhbmQgYmUgYW54aW91cyBhbmQgbmV2ZXIgYmUgYWJsZSB0byBwcm9jZWVkIHdpdGguIFRoZSBvbmUgdGhhdCBhbnkgbW9uZXkgc3BlbnQgb24gd2FzIG15IG1vbmV5IGJlY2F1c2UgSSBhY3R1YWxseSBiZWxpZXZlZCBpdCBjb3VsZCBiZSBhIGJpZyB0aGluZyAoSSBkb24ndCB0aGluayBpdCBjYW4gZG8gYW55dGhpbmcgbm93LCBidXQgYXQgdGhlIHRpbWUgdGhlIHRyZW5kcyBtYWRlIHNlbnNlKS4gCldoaWxlIHRoYXQncyBncmVhdCwgYXMgYSB2aWN0aW0gd2hvIGhhcyBhY3R1YWxseSBiZWVuIHJhcGVkIEknZCBsaWtlIHRvIHBvaW50IG91dCB0aGF0IHRoZSBtYWpvcml0eSBvZiByYXBlcyBnbyB1bnJlcG9ydGVkLCBtYW55IGxlZ2l0aW1hdGUgcmFwZSBjYXNlcyBhcmUgZHJvcHBlZCBieSB0aGUgdmljdGltIGR1ZSB0byB0aHJlYXRzIG9yIHJldmljdGltaXphdGlvbiBmcm9tIHRoZSBzeXN0ZW0sIGFuZCB0aGUgY2FzZXMgdGhhdCBkbyBnbyB0byBjb3VydCBvZnRlbiBza2lydCBjb252aWN0aW9uIGR1ZSB0byBhIGRlZmVuc2UgdGhhdCByZWxpZXMgb24gc21lYXJpbmcgdGhlIHZpY3RpbSwgbm90IHByb3ZpbmcgbGVnaXRpbWF0ZSBpbm5vY2VuY2UuCk9mdGVuLCBtYW55IHNwaW5hbCBwcm9ibGVtcyBhbmQgbWlzYWxpZ25tZW50cyBhcmUgY2F1c2VkIGJ5IG9yIGV4YWNlcmJhdGVkIGJ5IHRveGlucyAoc3VjaCBhcyB2aXJ1c2VzKSB0aGF0IGxpZSBkb3JtYW50IHdpdGhpbiB0aGUgc3BpbmFsIGNvbHVtbi4gVGhlIHVzZSBvZiBlc3NlbnRpYWwgb2lscyBoZWxwcyB0byBkaXNwb3NlIG9mIHRoZXNlIHRveGlucyBhbmQgdmlydXNlcyB3aXRoaW4gdGhlIHNwaW5lLCBoZWxwaW5nIGl0cyBzdHJ1Y3R1cmUgcmV0dXJuIHRvIG5vcm1hbC4gVGhlIHJhaW5kcm9wIHRlY2huaXF1ZSBjYW4gYmUgdXNlZCBhcyBhIHRvb2wgdG8gcHJvdmlkZSBhIGhlYWx0aHkgYmFsYW5jZSB0byB0aGUgYm9keS4uIApTIGRlIHZvdHJlIGVuZmFuY2UgbmUgcmV2aWVuZHJvbnQgamFtYWlzClRoZXJlIHNvbWUgb2JzY3VyZSBzb2Z0d2FyZSB0b29scyB0aGF0IGFyZSAiY2xlYW4gcm9vbSIgcmV2ZXJzZSBlbmdpbmVlcmVkIHdoaWNoIGNvdWxkIG1ha2UgbXkgam9iIGEgbG90IGVhc2llciAodHJ1c3QgbWUsIGRlY29kaW5nIGFyY2hhaWMgcHJvdG9jb2xzIGJ5IGhhbmQgdXNpbmcgYSBzZXJpYWwgYW5hbHl6ZXIgaXMgTk9UIGZ1bikgYnV0IEkgbmVlZCB0byBzcGVuZCBCVEMgdG8gcHVyY2hhc2UgdGhlIGtleXMuIApJdCB3YXMgYSBmdW4gZXBpc29kZSwgdGhlIGtpbmQgb2Ygc3VycHJpc2VkIG1lLCBJIHJlYWxseSBkaWRuIHRoaW5rIHRoYXQgU2UgQ2hhbiB3YXMgaW52b2x2ZWQgd2hlbiB0aGV5IHN0YXJ0ZWQgY2hhc2luZyBoaW0uIElmIEkgd2FzIHRoZXJlIEkgd291bGRuIGhhdmUgc3VzcGVjdGVkIGhpbSwgc2luY2UgcmlwcGluZyBuYW1ldGFncyByZWNrbGVzc2x5IGlzIHdoYXQgZ290IHRoZW0gaW50byB0aGUgcHJlZGljYW1lbnQgdGhleSB3ZXJlIGluICAgSlNKIG91dCBhbmQgb25seSAxNSBtaW51dGVzIHRvIGdvLCBzZWVtcyBsaWtlIHRoZXkgd2VyZSBiZWluZyByZXBlYXRlZGx5IHNldCB1cCBhbmQgU2UgQ2hhbiBzZWVtZWQgdG9vIG9idmlvdXMgd2l0aCBZSlMgcG9pbnRpbmcgaGltIG91dC4gCkkgd29uZGVyaW5nIGlmIHlvdSBnb3QgYSBtb21lbnQgdG8gdGFsayBhYm91dCBUaXJhIE1pcm9uLgpUaGUgcnVsZXMgb2YgV2FyaGFtbWVyIDQwSyBkb24gcmVzdHJpY3QgeW91IGZyb20gZGVzdHJveWluZyBwcm9wZXJ0eSwgYnV0IHRoZSBsYXcgZG9lcy4gCkhlcmUgYW4gZW1haWwgSSBzZW5kIHRvIGFsbCBteSBmcmllbmRzIHdpdGggc3RhbmRhcmQgVmVnYXMgYWR2aWNlOgpQYXJhIHBhcnRpY2lwYXIgZW4gYWN0aXZpZGFkZXMgY29tbyBjb3JyZW8gZWxlY3RybmljbyBubyBkZXNlYWRvLCAiY2FydGFzIGVuIGNhZGVuYSIsICJlc3RydWN0dXJhcyBwaXJhbWlkYWxlcyIsIHB1YmxpY2lkYWQgZGUgcHJvZHVjdG9zIG8gc2VydmljaW9zIGlsZWdhbGVzIG8gY29udHJvbGFkb3MsIHUgb3RybyB0aXBvIGRlIGFjdGl2aWRhZGVzIHB1YmxpY2l0YXJpYXMgbyBkZSBtYXJrZXRpbmcgcXVlIGluY3VtcGxhbiBlc3RhcyBDb25kaWNpb25lcyBkZSBzZXJ2aWNpbyBvIGN1YWxxdWllciBsZWdpc2xhY2luLCBub3JtYXRpdmEgbyBkaXJlY3RyaXogZ2VuZXJhbG1lbnRlIGFjZXB0YWRhIGVuIGVsIHNlY3RvciBkZSBsYSBwdWJsaWNpZGFkIHF1ZSBzZWEgZGUgYXBsaWNhY2luOwpDZXR0ZSBhbm5lLCB1bmUgbm91dmVsbGUgdmVudWUgcGFybWkgbGVzIGNvbW11bmVzLCBCb3VjaWV1IGxlIFJvaSwgcXVpIGFjY3VlaWxsZXJhIHVuIGNvbmNlcnQgZGFucyBzb24gZ2xpc2UgZ290aGlxdWUuIApBbm90aGVyIHdheSB0byBnZXQgaGVscCBpcyB0byBlbWFpbCB0aGVpciBzdXBwb3J0IHN0YWZmLiAKSWYgYSBMRU8gZG9lcyBzb21ldGhpbmcgYW5kIEkgZG8gdGhlIGV4YWN0IHNhbWUgdGhpbmcgaSB3aWxsIGJlIHB1dCBpbiBqYWlsIGFuZCBub3RoaW5nIHdpbGwgaGFwcGVuIHRvIHRoZW0uIFRoYXQgaXMgdGhlIGV4YWN0IGRlZmluaXRpb24gb2YgTk9UIGVxdWFsIHByb3RlY3Rpb24gb2YgdGhlIGxhdy4uIApObyBDR1QgZXZlbnQgaGFzIG9jY3VycmVkIGFzIHRoZSBpdGVtIGhhc24gYmVlbiBzb2xkLCBzbyBpdCBhbiB1bnJlYWxpemVkIGxvc3MuIEkgbWVhbiB5b3UgY291bGQgcHJvYmFibHkgZmxvZyBpdCBvbiBlQmF5IGZvciAkNTAgaWYgeW91IHJlYWxseSB3YW50IHRvIGNyeXN0YWxpemUgdGhlIGxvc3MuIFJlZ2FyZGxlc3MgQ2FwaXRhbCBsb3NzZXMgZnJvbSBjb2xsZWN0YWJsZXMgY2FuIGJlIHVzZWQgb25seSB0byByZWR1Y2UgY2FwaXRhbCBnYWlucyBmcm9tIG90aGVyIGNvbGxlY3RhYmxlcy4gU28gSSBmaW5kIHRoYXQgdGhlc2UgdHlwZXMgb2YgbG9zc2VzLCBxdWFyYW50aW5lZCBhcmUga2luZCBvZiB1c2VsZXNzIHVubGVzcyB0aGV5IGEgY29sbGVjdG9yIGFuZCB5b3UgZ290IHBsZW50eSBvZiB0cmFuc2FjdGlvbnMgdG8gb2Zmc2V0IGluIGZ1dHVyZSB5ZWFycy4KVGhlIGNvbnZlcnNhdGlvbnMgSSBoYWQgd2l0aCBwZW9wbGUgYSBsb3Qgb2YgdGhlbSBhcmUgcmVhbGx5IGV4Y2l0ZWQgYWJvdXQgZ2V0dGluZyBvdXQgdGhpcyB3ZWVrLCBoZSBzYWlkLiAKU21pdGgsIDMwLiBJbiBtdW5pY2lwYWwgY291cnQuIApIaXMgbW92aWUgY2FyZWVyIChub3QgcGFydCBvZiB0aGlzIGJveCBzZXQpIGlzIGxhcmdlbHkgYSBib3JlLiAKSm9pbmluZyBvbmUgbWVhbnMgeW91IG11c3QgaGF2ZSBhIHNvbGlkIHN0cmF0ZWd5IGFuZCBhIGZldyBoYW5keSB0cmlja3MgdXAgeW91ciBzbGVldmUgdG8gcHJlcGFyZSB5b3Vyc2VsZiBpbiB0aGUgYmF0dGxlcyBhaGVhZC4gCkkgaG91c2Ugc2F0IGZvciBteSBjaGlsZGhvb2QgY3J1c2ggd2hlbiB3ZSB3ZXJlIDEyaXNoIGFzIGhlciBmYW1pbHkgd2VudCBvbiBhIDYgd2VlayByb2FkIHRyaXAgYXJvdW5kIHRoZSBVUy4gVGhleSBoYWQgYSBjYXQgYW5kIGEgYmlyZCBhbmQgeW91IHNlZSB3aGVyZSB0aGlzIGlzIGdvaW5nLiBUaGlzIHN0dXBpZCBsaXR0bGUgZmluY2ggZ290IG91dCBvZiBpdHMgY2FnZSAobGVnaXQsIHRoZSBjYWdlIHdhcyBjbG9zZWQgd2hlbiBJIHJldHVybmVkIHRoZSBuZXh0IGRheSksIGFuZCB0aGUgY2F0IGtpbGxlZCBpdC4uIApEb3JpYW4gVGhlIHVsdGltYXRlIEJGRi4gSSBpbW1lZGlhdGVseSBsb3ZlZCB0aGF0IEkgY291bGQgY29udGludWUgZmxpcnRpbmcgd2l0aCBoaW0gZXZlbiB0aG91Z2ggaGUgd2FzIGdheSwgYW5kIHRoYXQgSSBjb3VsZCBiZSBoaXMgZmFnaGFnLiBJJ3ZlIGRvbmUgaXQgZm9yIHRocmVlIHBsYXl0aHJvdWdocyBhbmQgb25seSBicm9rZSB0aGUgbW9sZCB0byBzZWR1Y2UgaGltIHRoaXMgdGltZS5Jcm9uIEJ1bGwgSGlzIHJvbWFuY2UgaXMgdGhlIGZpcnN0IEkgcGxheWVkIHRocm91Z2guIAo4MDAwIHNjcmFwIHN0ZWVsIGlzIGFuIGVhc3kgYW1vdW50IHRvIGNvbWUgdXAgd2l0aC4gQSBiaXQgb2Ygb3JlLCBhIGJpdCBvZiBhY2lkLiBib29tLiBXaGVuIEkgY3JhZnQgYW1tbywgc3RlZWwgaXMgd2hhdCBJIGVuZCB1cCBuZWVkaW5nIHRoZSBtb3N0IG9mLCBhbmQgdGhhdCBhIHJlYWxseSByZWFsbHkgc21hbGwgZmlndXJlIHdoZW4gaXQgY29tZXMgdG8gbWUgY3JhZnRpbmcgYSBsYXJnZSBhbW91bnQgb2YgYW1tbyBmb3IgbWUgYW5kIG15IGZyaWVuZHMuCkFmdGVyIG1vcmUgdGhhbiAxMCB5ZWFycyB3aXRob3V0IGEgbWFqb3IgY29ycG9yYXRlIGZhaWx1cmUsIGJhbmtzIGFyZSBleHBhbmRpbmcgaW50byBjb3Jwb3JhdGUgbG9hbnMsIGFkZGluZyB0byBhIGRlYnQgcGlsZSBidWlsdCBvbiB0aGUgYmFjayBvZiB1bHRyYSBsb3cgaW50ZXJlc3QgcmF0ZXMsIHNhaWQgSW5mb3IgZm91bmRpbmcgcGFydG5lciBOZWlsIFNlbGZlLiBDYW5hZGEgaGFzbiBzZWVuIHRoZSBmYWlsdXJlIG9mIGEgbWFqb3IgY29ycG9yYXRpb24gc2luY2UgTm9ydGVsIE5ldHdvcmtzIENvcnAuIGluIEphbnVhcnkgMjAwOS4KSG93IHRvIFBsYXkgUG9rZXIgV2l0aG91dCBVc2luZyBNb25leUlmIHlvdSBhcmUganVzdCBhIGNhc3VhbCBwbGF5ZXIsIG9yIGp1c3Qgd2FudCB0byBnZXQgaW50byB0aGUgZ2FtZSB3aXRob3V0IGludmVzdGluZyB0b28gbXVjaCBpbiB0aW1lIGFuZCBtYXRlcmlhbHMsIHRoZW4geW91IGNhbiB1c2UgbW9zdCBob3VzZWhvbGQgaXRlbXMgaW5zdGVhZCBvZiBhY3R1YWwgbW9uZXkuIFNvbWUgY29tbW9uIGl0ZW1zIHlvdSBjYW4gdXNlIGFyZToKRGVzIHNlcnZpY2VzIHNleHVlbHMgcG91cnJhaWVudApJZiB0aGV5IHdlcmUgY29va2luZyB0aGUgaW50ZW5kZWQgd2F5LCB0aGVuIHRoZXkgd291bGRudCBiZSBjb21wbGFpbmluZz8/ClRoYXQgaXMsIGlmIGl0IGRpZG4ndCBlbmQgdXAgYmVpbmcgYSB0b3RhbCBhbmQgY29tcGxldGUgZW1iYXJyYXNzbWVudCwgd2hpY2ggdGhpcyB3b3VsZCBoYXZlIGEgaGlnaCBsaWtlbGlob29kIG9mIGJlaW5nLiBTb21lb25lIGdldHMgc29tZSBjcml0aWNpc20gYW5kIGNsYWltcyB0aGV5IGhhdmUgImhhdGVycyIuIE1pc3MgbWUgd2l0aCB0aGF0IEJTLiBTaGUgaXMgdHJlbWVuZG91c2x5IHJ1ZGUgdG8gcGVvcGxlIHRoYXQgYXNrIGhlciBxdWVzdGlvbnMgdHJ5aW5nIHRvIHVuZGVyc3RhbmQgd2hhdCdzIGdvaW5nIG9uLiBUaGF0IGlzIG1vcmUgYW5ub3lpbmcgdGhhbiB0aGUgZmFjdCB0aGF0IHNoZSBjaG9vc2VzIHRvIHBsYXkgZHJlc3MgdXAgYW5kIGF0dGVuZHMgZXZlbnRzLgpDb25zaWRlciBhbmQgY29tcGFyZSB0aGUgcHJpY2VzIGFuZCBwb3N0IHB1cmNoYXNlIGJlbmVmaXRzLiAKUmFub3dhICAxOCBwb2ludHMgIHN1Ym1pdHRlZCA1IGRheXMgYWdvCkZsb3dlcmdpcmwwNzIwICAxIHBvaW50ICBzdWJtaXR0ZWQgMTkgZGF5cyBhZ28KSXQncyBub3doZXJlIG5lYXIgdGhlIGxldmVsIHRoYXQgRmFjZWJvb2sgaXMgYXQgaW4gdGVybXMgb2YgdXNlLCBidXQgYSBiZXR0ZXIgZXhhbXBsZSBpcyBhbm90aGVyIHBheW1lbnQgbmV0d29yayBsaWtlIFZpc2EuIFZpc2EgcHJvY2Vzc2VzIGFsbW9zdCAxNTBNIHRyYW5zYWN0aW9ucyBwZXIgZGF5LiAKIk91ciBhc3NvY2lhdGVzIGFyZSBhbmQgd2lsbCBjb250aW51ZSB0byBiZSB0aGUga2V5IHJlYXNvbiBiZWhpbmQgb3VyIHN1Y2Nlc3M7IHRoZXkgYXJlIHRoZSBiZXN0IGluIHRoZSBidXNpbmVzcyBhbmQgYXJlIG91ciBrZXkgY29tcGV0aXRpdmUgYWR2YW50YWdlLCIgVGF5bG9yIHNhaWQuICJUaGVpciBjb21taXRtZW50LCBkZWRpY2F0aW9uLCBoYXJkIHdvcmssIGluZ2VudWl0eSBhbmQgdGVhbSBzcGlyaXQgc2hvd3MgZXZlcnkgZGF5IGluIHRoZSB3b3JrIHRoZXkgZG8sIGluIHRoZWlyIGNvbW11bml0eSBpbnZvbHZlbWVudCwgYW5kIHRoZWlyIGN1c3RvbWVyIHNlcnZpY2UgZWZmb3J0cy4gCkNvdXJzZSBoYXMgYSBjb3Vyc2UgcmVwcmVzZW50YXRpdmUuIElmIHlvdSBoYXZlIGFueSBwcm9ibGVtcyB3aGljaCBjb25jZXJuIHlvdXIgYWNhZGVtaWMgcGVyZm9ybWFuY2UsIGZvciBleGFtcGxlLCB5b3Ugc2hvdWxkIGFsd2F5cyBzcGVhayB0byBhbiBhY2FkZW1pYyByZXByZXNlbnRhdGl2ZSwgYSBzdHVkZW50IHJlcHJlc2VudGF0aXZlIG9uIHlvdXIgY291cnNlLCBvciBzcGVhayB0byB5b3VyIHBlcnNvbmFsIHR1dG9yLCB3aG8gYXJlIHRoZXJlIHRvIGhlbHAgeW91IGlmIHlvdSBoYXZlIGFueSBjb25jZXJucyBvciBwcm9ibGVtcyB3aXRoIHlvdXIgdW5pdmVyc2l0eSBsaWZlLiBzdHVkeWluZyBJbnRlcm5hdGlvbmFsIExhdwoiVGhlcmUgaXMgbm8gbmV4dCBzdGVwLiBVbnRpbCB0aGVyZSBpcyBhbiBlZmZlY3RpdmUgdHJlYXRtZW50IG9yIGN1cmUgZm91bmQgSSBqdXN0IGZvcmNlZCB0byBqdXN0IGxpdmUgd2l0aCBpdCwiIFJpY2t3b29kIHNhaWQuCk1yLiAKQWxtb3N0IGFsbCBwb2tlciBzaXRlcyBvZmZlciB2YXJpb3VzIHR5cGVzIG9mIGJvbnVzZXMsIGJ1dCBwbGF5ZXJzIHNob3VsZCBrbm93IHRoYXQgbm90IGFsbCBib251c2VzIGFyZSBjcmVhdGVkIGVxdWFsLiBUaGV5IGdlbmVyYWxseSBkaWZmZXIgaW4gc2l6ZSBhbmQgdGhlIHdheSBhIGJvbnVzIGlzIHVubG9ja2VkLiBUbyB1bmxvY2sgYSBib251cyB5b3UgbXVzdCBrbm93IGJlZm9yZWhhbmQgaG93IG1hbnkgaGFuZHMgb2YgcG9rZXIgeW91IHdpbGwgcGxheS4gVGhlcmVmb3JlLCBpZiB5b3UgYXJlIG5vdCBwbGFubmluZyB0byBwbGF5IG1hbnkgaGFuZHMsIGRvbid0IGdvIGZvciBhICQyLDAwMCBib251cy4gVGhlcmUgYXJlIGFsc28gYm9udXNlcyB0aGF0IGFyZSB2ZXJ5IGVhc3kgdG8gdW5sb2NrLCBidXQgdGhlaXIgYW1vdW50IGlzbid0IGJpZy4KVG91cmlzdCB2aXNhcyBhcmUgZnJlZSBpZiB5b3UgbGVhdmUgYWZ0ZXIgMzAgZGF5cywgb3IgJDMwaXNoKD8pIGlmIHlvdSB3YW50IGEgdmlzYSB0aGF0IGNhbiBiZSByZW5ld2VkIGZvciBhbm90aGVyIDMwIGRheXMuIFRoZW4geW91IG5lZWQgdG8gY292ZXIgYWlyZmFyZSB0byBzb21lcGxhY2Ugb3V0c2lkZSBJbmRvbmVzaWEgKHVzdWFsbHkgU2luZ2Fwb3JlIGlzIGNoZWFwZXN0LCBidXQgQmFuZ2tvaywgUGVydGgsIERhcndpbiwgYW5kIEt1YWxhIEx1bXB1ciBhcmUgb3B0aW9ucyB0b28pLCBhbmQgb2Z0ZW4gYW4gb3Zlcm5pZ2h0IHN0YXkgaW4gb25lIG9mIHRoZXNlIHBsYWNlcy4gQSBzb2NpYWwgY3VsdHVyYWwgdmlzYSBjb3N0cyBkaWZmZXJlbnRseSBkZXBlbmRpbmcgb24gd2hlcmUgeW91IGdldCBpdCAob3V0c2lkZSB0aGUgY291bnRyeSksIHRoaW5rICQ1MCAkMTUwIChsb29rIG9uIGVtYmFzc3kvY29uc3VsYXRlIHdlYnNpdGVzIGZvciBzcGVjaWZpY3MpLCBhbmQgbGFzdHMgNjAgZGF5cy4gCkl0IGp1c3QgbWVhbnMgdGhhdCB5b3Ugd2lsbCB3aW4gaXQgbW9yZSBvZnRlbiB0aGF0IG5vdC4gCkNhemluIHBvaW50ZSBkdSBkb2lndCBsZXMgbWFsdmVyc2F0aW9ucyBjb25jZXJuYW50IGxlcyBkcm9ndWVzIHByb3ZlbmFudCBkZSBwYXlzIGxvaW50YWlucyBldCBxdWksIHVuZSBmb2lzIHBhcnZlbnVlcyBkYW5zIGxlcyBvZmZpY2luZXMsIHNvbnQgZGUgYmllbiBtb2lucyBib25uZSBxdWFsaXQgcXUgbGV1ciBkcGFydDsgbm9uIHBhcyBxdWUgbGUgdHJhbnNwb3J0IGVuIGF1cmEgYW1vaW5kcmkgbGEgdmFsZXVyIHRocmFwZXV0aXF1ZSwgbWFpcyBzdXJ0b3V0IHBhcmNlIHF1IHN1Ymlzc2VudCwgZGUgbGEgcGFydCBkZSBtYXJjaGFuZHMgcGV1IHNjcnVwdWxldXgsIHVuZSB0cmFuc2Zvcm1hdGlvbiBwb3VyIGxhcXVlbGxlIGwgZHUgbHVjcmUgbiBwYXMgdHJhbmdlci4gQyBhdXNzaSBsIHBvdXIgQ2F6aW4gZGUgcmVtZXR0cmUgZW4gY2F1c2UgY2V0dGUgaWRlIHJldWUsIHBhcnRpY3VsaXJlbWVudCB0ZW5hY2UgcHVpc3F1IGV4aXN0ZSB0b3Vqb3VycyBlbiBjZSBkYnV0IGRlIFhYSSBtZSBzaWNsZSwgcXVlIGNlIHF1aSBlc3QgZXhvdGlxdWUgZXN0IHBsdXMgZWZmaWNhY2U7IGV0LCBlbiB0cmF2YWlsbGFudCBhdmVjIGRlcyBwcm9kdWl0cyBsb2NhdXgsICBwb3J0ZSBkZSBtYWlucywgaWwgZG1vbnRyZSBsIGRlIGNlIGp1Z2VtZW50IGV0IHByb3V2ZSBhdmVjIGFpc2FuY2UgcXVlIGwgbiBwYXMgZm9yY21lbnQgcGx1cyB2ZXJ0ZSBjaGV6IGxlIHZvaXNpbi4gCkFueSBmdWxsIHRpbWUgam9iIGF0IG1pbmltdW0gd2FnZSBwdXRzIHlvdSBvdmVyIHRoZSBkZXBlbmRlbnQgbGltaXQgYW5kIHRoZXJlIGFyZW4ndCByZWFsbHkgdGhhdCBtYW55IHBhcnQgdGltZSBqb2JzIHRvIGdvIGFyb3VuZCBvdGhlciB0aGFuIGNhc2ggcmVnaXN0ZXIvZmFzdCBmb29kL2NsZWFuaW5nIGxhZHkuIEV2ZW4gdGhlIGVsZGVybHkgd29tZW4gd2hvIHBhY2sgYm94ZXMgYXQgbXkgY29tcGFueSBtYWtlIGVub3VnaCB0aGF0IGl0J3Mgbm90IHdvcnRoIHN0YXlpbmcgdW5kZXIgdGhlIGRlcGVuZGVudCBsaW1pdC4gVGhlIG9ubHkgcmVhc29uIHRvIHN0YXkgdW5kZXIgdGhlIGxpbWl0IGlzIGlmIHlvdSBvbmx5IHdhbnQgdG8gd29yayBhIGZldyBkYXlzIGEgd2VlayBvciBzb21ldGhpbmcuIEFuZCBnb29kIGx1Y2sgZmluZGluZyBhIGpvYiB0aGF0IGxldHMgeW91IGRvIHRoYXQgb3RoZXIgdGhhbiBNY0RvbmFsZCdzL0xhd3Nvbi4KRHVyaW5nIHRoZSBhcHByb2FjaCwgQVRGIGEgZG9nIChhZ2VudCB0b2xkIGludmVzdGlnYXRvcnMgQVRGIGZpcmVkIGZpcnN0IHdoZW4gdGhleSBraWxsZWQgYSBkb2csIHRoZW4gcmV0cmFjdGVkIHRoZSBzdGF0ZW1lbnQgd2hlbiBldmVyeXRoaW5nIHdlbnQgdG8gc2hpdCkgd2hlbiB0aGV5IG9wZW5lZCBmaXJlIGZpcnN0IG9uIGEgY29tcG91bmQgd2l0aCAxMzAgcGVvcGxlIGluY2x1ZGluZyB3b21lbiBhbmQgY2hpbGRyZW4uIEN1bHQgbWVtYmVycyByZXNwb25kZWQgYW5kIHBlb3BsZSBnb3Qgc2hvdCwgaW5jbHVkaW5nIHNldmVyYWwgKDYga2lsbGVkLCAzIDYgaW5qdXJlZCwgaW5jbHVkaW5nIEtvcmVzaCB3aG8gd2FzIGF0IHRoZSBmcm9udCBkb29yKSBjdWx0IG1lbWJlcnMgYW5kIHNldmVyYWwgQVRGICg0IGRlYWQsIDE3IGluanVyZWQpLi4gClByaW5jZSBDaGFybGVzIHdhcyBpbW1lZGlhdGVseSBjYXB0aXZhdGVkIGJ5IHRoZSAnYnJlYXRoIG9mIGZyZXNoIGFpcicsIGFzIGhlIGxhdGVyIGRlc2NyaWJlZCBoZXIuIFRoaXMgZWFydGh5LCBzZXh5LCBvdXRzcG9rZW4geW91bmcgd29tYW4gc2hhcmVkIGhpcyBsb3ZlIG9mIGRvZ3MsIGhvcnNlcyBhbmQgdGhlIGNvdW50cnlzaWRlLiAKU28gTGVvIHdhc24ndCBpbnRvIHBsYXlpbmcgdGhlIGdhbWUuIApUaGUgZ2lybHMgYXJlIHZlcnkgZnJhbmsgYW5kIHJlYWxpc3RpYyBhYm91dCB0aGVpciBqb2IgYW5kIGl0cyByaXNrcy9iZW5lZml0cy4gTW9zdCB2aWV3IGl0IGFzIGFuIHVuZ2xhbW9yb3VzIGJ1dCB3ZWxjb21lIG9wcG9ydHVuaXR5IHRvIGNoYW5nZSB0aGVpciBsaXZlcy4gVGhleSBjb21lIHRvIEdlcm1hbnkgYW55d2hlcmUgZnJvbSAyIHdlZWtzIGF0IGEgdGltZSB0byA4IG1vbnRocyBvbiBhIHN0cmV0Y2guIFRoZXkgd2lsbCBzbGVlcCBpbiB0aGUgc2FtZSByb29tIHdoZXJlIHRoZXkgd29yayB0byBzYXZlIG1vbmV5IChhcyB0aGUgcm9vbXMgYXJlIHJlbnRlZCBieSB0aGUgZGF5KSwgYW5kIHRoZXkgZm9jdXMgb24gd29ya2luZyBhcyBtdWNoIGFzIHBvc3NpYmxlIHRvIG1heGltaXplIHdoYXQgdGhleSB0YWtlIGhvbWUuIApJIGFsc28gYWdyZWUgd2l0aCB0aGUgdXNlciB3aG8gc2FpZCBnYXBzIGRvbiBsb29rIGdvb2QuIApCdXQgY3JpdGljcyBzdWdnZXN0ZWQgdGhlIHdob2xlIHRoaW5nIHdhcyBhIHNuZWFreSB3YXkgb2YgZXhwYW5kaW5nIGdhbWJsaW5nLCBhbGxvd2luZyBkb2cgYW5kIGhvcnNlIHRyYWNrcyB0byBnaXZlIHVwIHRoZWlyIHByaW1hcnkgYnVzaW5lc3MgYW5kIHR1cm4gaW50byBtaW5pIGNhc2lub3MuCk15IGh1c2JhbmQgcmVhbGx5IGdvb2QgYWJvdXQgaGVscGluZyB3aXRoIHRoZSBkaXNoZXMgYW5kIGNvb2tpbmcgZGlubmVyLiAKTG9uZyBBbnN3ZXI6ICJDb2xvcmFkbyBmb2xsb3dzIHRoZSBsZWdhbCBkb2N0cmluZSBvZiAiZW1wbG95bWVudCBhdCB3aWxsIiwgd2hpY2ggcHJvdmlkZXMgdGhhdCBlbXBsb3llcnMgYW5kIGVtcGxveWVlcyBoYXZlIGFuIGF0IHdpbGwgcmVsYXRpb25zaGlwIGFuZCBlaXRoZXIgb2YgdGhlbSBtYXkgdGVybWluYXRlIGF0IGFueSB0aW1lIHdpdGhvdXQgYWR2YW5jZSBub3RpY2Ugb3IgY2F1c2UgdW5sZXNzIHRoZSBlbXBsb3llZSBpcyBoaXJlZCBmb3IgYSBkZWZpbml0ZSBwZXJpb2Qgb2YgdGltZSBvciB0aGVyZSBpcyBhbiBhZ3JlZW1lbnQgbGltaXRpbmcgdGhlIHJlYXNvbnMgZm9yIGRpc2NoYXJnZS4gCkNyYWNrZG93biBvbiBuZXcgbWFjaGluZXMgaW4gZm91ciAnaGlnaCByaXNrJyBJbGxhd2FycmEgc3VidXJicwpTdWNoIGEgY3JlYXRpb24gaXMgZnVsbHkgZnVuZ2FsIGluIG1ha2V1cCwgaG93ZXZlciB0aGV5IGFyZSBvZiB1bmtub3duIHBvd2VyLCBpbnRlbGxpZ2VuY2UsIGFuZCBkaXNwb3NpdGlvbiwgYW5kIGFyZSB3aG9sbHkgdW5wcmVkaWN0YWJsZSBiZWluZ3MuWW91IGNhbiBmZWVkIGFuZCBsb3NlIGFuZCB0aHJvdyBhIGdhbWUgYXMgYW55IHBpY2sgaW4gYW55IHJvbGUuIFBlb3BsZSBjb25zdGFudGx5IGZlZWQgYW5kIHBsYXkgc2hpdHRpbHkgYW5kIGxvc2UgaW4gNXY1cywgaXQgaGFwcGVucyBhdCBsZWFzdCBvbmNlIGluIGEgdmFzdCBtYWpvcml0eSBvZiBhbGwgNXY1cyBwbGF5ZWQuIFBlb3BsZSBqdXN0IGRvIHNoaXQgc29tZXRpbWVzLCBvciB0aGV5IGdldCBjb3VudGVyZWQsIG9yIHRoZXkgZ2V0IGJlaGluZDsgaXQgdGhlIGxhdyBvZiBNT0JBcywgYW5kIGdhbWluZyBpbiBnZW5lcmFsIG5vdCBldmVyeW9uZSB3aWxsIGRvIHdlbGwuQnV0IHdoZW4geW91IHRocm93IGEgdGFudHJ1bSBhbmQgc2l0IGluIGJhc2UgdW50aWwgdGhlIGdhbWUgZW5kcywgeW91IGFjdGl2ZWx5IGNob29zaW5nIHRvIGRyYWcgeW91ciB0ZWFtIGRvd24gYmVjYXVzZSB5b3UgZG9uIHdhbnQgdG8gc3RhaW4geW91ciBoYW5kcyB3aXRoIG5vbiBtZXRhIHBpY2tzLiAKSW5kaXZpZHVhbGlzbSBnZW5lcmFsbHkgaXMgdGhvdWdodCBvZiBpbiBwb2xpdGljYWwgc2NpZW5jZSBhcyBhIHBlcnNvbiB3aG8gaXMgc2VsZiByZWxpYW50IGFuZCBpbnRlbGxpZ2VudCBlbm91Z2ggbm90IHRvIGhhdmUgdG8gZGVmZXIgc2VydmljZXMgdG8gb3RoZXJzIChpZiB5b3UgbG9vayB1cCB0aGUgcmVjZW50IGhpc3Rvcnkgb2YgdGhlIENvbG9tYmlhbiBlY29ub21pYyBjb2xsYXBzZSBpdCBpcyBkdWUgdG8gdGhlaXIgbGFjayBvZiBpbmR1c3RyaWFsIGRpdmVyc2l0eS4gCiA5IHBvaW50cyAgc3VibWl0dGVkIDE3IGhvdXJzIGFnb1doZW4gSSB3YXMgYWJvdXQgNCBvciA1IG15IGZhbWlseSB3YXMgb24gdmFjYXRpb24gaW4gRkwgYW5kIEkgZ290IGEgc2lsdmVyIGRvbGxhciBmcm9tIHNvbWUgZ3V5IG9uIHRoZSBiZWFjaCwgdHVybmVkIG91dCB0byBiZSB0aGUgb3BlbmluZyBmb3IgYSBwaXRjaCB0byBjb21lIGhlYXIgYWJvdXQgdGltZSBzaGFyZXMuIE15IHBhcmVudHMgd291bmQgdXAgYnV5aW5nIHR3byB3ZWVrcyBhdCBhIGdvbGYgcmVzb3J0IGluIHRoZSBsYWtlcyByZWdpb24gb2YgTkguRm9yIHRoZSBuZXh0IGRlY2FkZSBJIGhhdmUgZm9uZCBtZW1vcmllcyBvZiBmYW1pbHkgdmFjYXRpb25zIHVwIHRoZXJlLiBLaW5kIG9mIHN0b3BwZWQgZ29pbmcgbXlzZWxmIGluIG15IGxhdGUgdGVlbnMsIGluIG15IGVhcmx5IHR3ZW50aWVzIHRoZXkgc29sZCBvbmUgd2VlayBhbmQgSSBzdGFydGVkIGRyaXZpbmcgdXAgZm9yIGEgd2Vla2VuZCwgb2Z0ZW4gYnJpbmdpbmcgbXkgR0YgYW5kIHN0YXlpbmcgb3ZlciBzbyB3ZSBjb3VsZCBjYXRjaCB0aGUgZHJpdmUgaW5uLk5vd2FkYXlzIG15IHBhcmVudHMgc3RpbGwgY29tZSB1cCBmcm9tIHJldGlyZW1lbnQgaW4gRkwgZHVyaW5nIHRoZSBzdW1tZXIgY2VudGVyaW5nIHRoZSB2aXNpdCBhcm91bmQgdGhlIHRpbWUgc2hhcmUuIApUb2RheSBpcyBteSBmaXJzdCBkb3NlIG9mIFdlbGxidXRyaW4uIAoiTGFzdCBuaWdodCB3ZSB3ZXJlIGJyb2tlbiBpbnRvLiBUaGVzZSBwZW9wbGUgd2hvIGJyb2tlIGludG8gb3VyIHpvbyBzdG9sZSBhIGJhYnkgZ2liYm9uLCBBZ25lczsgdGhleSBzdG9sZSBKQywgdGhlIGxlbXVyIHlvdSBzZWUgaW4gdGhlIHNob3csIGFuZCB0aGUgdG9ydG9pc2UsIiBzYWlkIE1pY2hlbCBQZXJzaSwgb25lIG9mIHRoZSB3b3JrZXJzIGF0IHRoZSB6b28sIGluIGEgdGVhcmZ1bCBGYWNlYm9vayBwb3N0LiAiVGhlc2UgYW5pbWFscyBhcmVuJ3QgYW5pbWFsczsgdGhleSdyZSBvdXIgZmFtaWx5LgpBbmRyZXcgQnJlaXRiYXJ0Ck1vcmUgdGhhbiBhIG1pbGxpb24gcGVvcGxlIGNob29zZSB0byBkbyBzbyBlYWNoIHF1YXJ0ZXIuIAooUGVvcGxlIHVuZGVyIDI1IG5vdyBzcGVuZCBtb3JlIHRpbWUgdGV4dGluZyBmcm9tIHRoZWlyIGNlbGxwaG9uZXMgdGhhbiB0YWxraW5nIG9uIHRoZW0uKSBUaGUgc2hpZnQgaGFzIGJlZW4gbW9zdCBkcmFtYXRpYyBmb3IgImtub3dsZWRnZSB3b3JrZXJzIiBsaWtlIGNvbXB1dGVyIHByb2dyYW1tZXJzIGFuZCBsYXd5ZXJzLCB3aG8gZGV2b3RlIG5lYXJseSBoYWxmIHRoZWlyIHdvcmtkYXlzIHRvIGVtYWlsLi4gClRoZSBwcmVzaWRlbnQncyB0d2VldHMgb24gV2VkbmVzZGF5IHdlcmUgZ3JlZXRlZCB3YXJpbHkgb24gQ2FwaXRvbCBIaWxsLCB3aXRoIG1vc3QgbGF3bWFrZXJzLCByZWdhcmRsZXNzIG9mIHBhcnR5LCB1cmdpbmcgVHJ1bXAgdG8gbGV0IHRoZSBwcm9iZSBydW4gaXRzIGNvdXJzZS4KUmVnYXJkaW5nIGVtYWlsLCB3ZWxsLCB0aGF0IG5vdCBob3cgYWR1bHRzIGNvbW11bmljYXRlIGFib3V0IHNlcmlvdXMgbWF0dGVycy4gCldoeSBkbyB5b3UgdGhpbmsgeW91IGFyZSBhaGVhZD8gVXAgdG8gbW92ZSA1MywgeW91ciBwb2ludHMgaXMgYWJvdXQgdGhlIHNhbWUgYXMgd2hpdGUuIEFuZCBmcm9tIHRoZSByZWFsIGdhbWUsIGV2ZXJ5IGV4Y2hhbmdlIGlzIGFib3V0IGVxdWFsIGZvciBib3RoIHNpZGVzLiBXaGl0ZSBpbnZhZGluZyBvbiB0aGUgdG9wIGlzIHNvbWUga2luZCBvZiBvdmVycGxheSB1bmRlciB0aGlzIHNpdHVhdGlvbiwgYnV0IHlvdSBtYWRlIGEgYmx1bmRlciBpbiBtb3ZlIDYzIChzaG91bGQgaGF2ZSBiZWVuIEwxNCkuIFdoaXRlIGxpdmVkIGFuZCBldmVuIGF0dGFja2VkIHlvdS4KQ3JhenkhLiAKR3J1YmIsIEEuLCBUdXJuZXIsIEUuICgyMDEyKS4gQXR0cmlidXRpb24gb2YgYmxhbWUgaW4gcmFwZSBjYXNlczogQSByZXZpZXcgb2YgdGhlIGltcGFjdCBvZiByYXBlIG15dGggYWNjZXB0YW5jZSwgZ2VuZGVyIHJvbGUgY29uZm9ybWl0eSBhbmQgc3Vic3RhbmNlIHVzZSBvbiB2aWN0aW0gYmxhbWluZy4gQWdncmVzc2lvbiBhbmQgVmlvbGVudCBCZWhhdmlvciwgMTcoNSksIDQ0MyA0NTIuCkhvdyBUbyBTaWduIFVwIGZvciBHb2xkJ3MgR3ltIFZJUCBNZW1iZXJzaGlwCkxhZHkgR2FHYSByZWxlYXNlZCBoZXIgZGVidXQgYWxidW0gVGhlIEZhbWUgb24gOSBKYW51YXJ5IDIwMDkuIE9uIDMgSmFudWFyeSAyMDA5LCBzaGUgcmVsZWFzZWQgaGVyIDFzdCBzaW5nbGUgSnVzdCBEYW5jZSBhbmQgdGhlIHRyYWNrIGZlYXR1cmVkIENvbGJ5IE8nIERvbmlzIGFuZCBBa29uIC4gVGhlIHNvbmcgcGVha2VkIGF0IDEgb24gdGhlIElyaXNoIFJlY29yZGVkIE11c2ljIEFzc29jaWF0aW9uIChJUk1BKSBzaW5nbGVzIGNoYXJ0LiBJdCB3YXMgcmVjZW50bHkgYW5ub3VuY2VkIHRoYXQgUGFwYXJhenppIHdvdWxkIGJlIHJlbGVhc2VkIGFzIExhZHkgR2FHYSdzIG5leHQgc2luZ2xlIGluIElyZWxhbmQuIExvdmVHYW1lIHdhcyBpbml0aWFsbHkgcGxhbm5lZCB0byBiZSB0aGUgM3JkIHNpbmdsZSBmcm9tIHRoZSBhbGJ1bSBidXQgZHVlIHRvIEF1c3RyYWxpYSBiYW5uaW5nIHRoZSBjb250cm92ZXJzaWFsIHZpZGVvIGFuZCBseXJpY3MsIEdhR2EgZGVjaWRlZCB0byBjaGFuZ2UgdGhlIElyaXNoIHNpbmdsZSByZWxlYXNlIHRvIFBhcGFyYXp6aSAuIChGdWxsIEFuc3dlcikKVGhlIGNlbGwgdHVybm92ZXIgdGhhdCB3b3VsZCB0YWtlIDI3IG9yIDI4IGRheXMgb24gYSBoZWFsdGh5IGhlYWQsIHRha2VzIHR3byB3ZWVrcyBvciBsZXNzIG9uIHRoZSBza2luIG9mIHNvbWVvbmUgd2l0aCBkYW5kcnVmZi4gVGhvc2UgZGVhZCBjZWxscyB0ZW5kIHRvIGNsdW1wIHRvZ2V0aGVyIGFuZCB0aGVuICAgYmVjYXVzZSBvZiBuYXR1cmFsIG9pbHMgICBzdGljayBvbiB5b3VyIGhlYWQgYW5kIGNsb3RoaW5nLCByZWZ1c2luZyB0byBoYXJtbGVzc2x5IGRyaWZ0IGF3YXkuIApNYXliZSBJIHN0aWxsIHJvb3RpbmcgZm9yIExhbiwgc2luY2UgYWZ0ZXIgcHJlc3VtYWJseSByZWFjaGluZyB0aGUgc2FtZSBjb25jbHVzaW9uIGFib3V0IHRoZSByZXN0IG9mIHRoZSBjaGFyYWN0ZXJzIGhlIGRlY2lkZWQgdG8ganVzdCBnbyBpdCBhbG9uZSBhbmQgZG8gYSBzb2xvIGZyb250YWwgYXR0YWNrIHRvIGVuZCBpdCBxdWlja2x5LiAKTmV3IHdpZG93IHdhbnRzIHRvIGVzdGFibGlzaCBjcmVkaXQgaW4gaGVyIG93biBuYW1lOiBNb25leSBNYXR0ZXJzIE5ldyB3aWRvdyB3YW50cyB0byBlc3RhYmxpc2ggY3JlZGl0IGluIGhlciBvd24gbmFtZTogTW9uZXkgTWF0dGVycyBNeSBodXNiYW5kIHBhc3NlZCBpbiBBcHJpbCAyMDE4LiBDdXJyZW50bHksIG15IGNyZWRpdCBzY29yZSBpcyBnb29kIGFuZCBpcyBpbiBib3RoIG91ciBuYW1lcy4gT3VyIGNyZWRpdCBmaWxlcyBhcmUgZnJvemVuLiAKT2ggYW5kIGFuIGVtcHR5IGxvdCB3aXRoIGEgZG96ZW4gdHVya2V5cy4gClRoZSB0cmFja3MgaGF2ZSBvcHBvc2VkIHByZXZpb3VzIGVmZm9ydHMgdG8gbGVnYWxpemUgY2FzaW5vcyBpbiB0aGUgc3RhdGUuIFRoZSBjb21taXR0ZWUgZGlkIG5vdCBzYXkgaG93IG11Y2ggdGhlIHRyYWNrcyBoYXZlIGNvbnRyaWJ1dGVkLCBhbmQgaXRzIGZ1bmRyYWlzaW5nIHJlcG9ydCBmb3IgQXVndXN0IGlzIGR1ZSBuZXh0IHdlZWsuCkJhc3RpbmVueiAgMTEgcG9pbnRzICBzdWJtaXR0ZWQgMjcgZGF5cyBhZ28KSSB3ZW50IHRvIHRoZSBiYW5rIHRoaXMgbW9ybmluZyB0byB0YWtlIGNhcmUgb2YgdGhlIGRlYml0IGNhcmQgZnJhdWQgb25seSB0byBsZWFybiB0aGF0IGl0IHdhcyBDb2x1bWJ1cyBEYXkgYW5kIHRoZSBiYW5rcyB3ZXJlIGNsb3NlZC4gClRoZSBvZmZlbmRpbmcgcGFzc2FnZXMgaGFkIGJlZW4gZXhjaXNlZCBmcm9tIHN1YnNlcXVlbnQgZWRpdGlvbnMuIAoxNSBtaW4uIC4kMjUKTm93IGFib3V0IFNoaXJ5dSBpZiBpIHJlbWVtYmVyIGNvcnJlY3RseSBoZSBkaWRudCBicmVhayBvdXQsIHRoZXkgZnJlZWQgaGltLiBTbyBpIGRvdWJ0IGhlIGhhZCB0aGUgYW50aWRvdGUgd2l0aCBoaW0uIEhlIHByb3BhYmx5IGdvdCBpdCBhZnRlciBoZSBnb3QgZnJlZWQgYW5kIHNpbmNlIGhlIGRlY2lkZWQgdG8gam9pbiBCQiBoZSBnb3QgYW50aWRvdGUgZm9yIHRoZW0gdG9vIHNpbmNlIGhlIGtuZXcgdGhhdCB0aGV5IHdvdWxkIGNyb3NzIG1hZ2VsbGFuIGF0IHNvbWUgcG9pbnQuIEFuZCB0aGUgYW1vdW50IG9mIGFudGlkb3RlIGluIHRoZSBwcmlzb24gaXMgcHJvcGFibHkgcGxlbnR5ZnVsIGluIGNhc2UgYSBsYXJnZSBhbW91bnQgb2YgZ2F1cmRzIGdldCBjYXVnaHQgaW4gYSBtZWdlbGxhbiBhdHRhY2suCklHVCBnaXZlcyBhIGh1Z2UgdmFyaWV0eSBvZiBvbmxpbmUgZ2FtZXMgbGlrZSB3ZWxsIGFzIHZpZGVvIHBva2VyLCBvbmxpbmUgcmFjaW5nLCBiaW5nbywgYW5kIGFsc28gaHVuZHJlZHMgb2Ygc2xvdHMuIApUaGF0IG9uZSBpbiBwYXJ0aWN1bGFyIG1ha2VzIG1lIHN1c3BlY3QgaXQgbm90IHJlYWwuIApFbmpveSB0aGUgZ3JlYXQgb3V0ZG9vcnMgYXQgdGhlIElubiB3aGlsZSBzdW5iYXRoaW5nIGJlc2lkZSBvdXIgZnVsbCBzaXplIGluIGdyb3VuZCBwb29sIG9yIHNvYWtpbmcgaW4gb3VyIHNldmVuIHBlcnNvbiBob3QgdHViLiBHZXQgY2xvc2UgdG8gbmF0dXJlIGJ5IGZpc2hpbmcgb3VyIGZvdXIgYWNyZSBsYWtlIG9yIGNydWlzaW5nIHRoZSB3YXRlciBpbiBvdXIgcGFkZGxlIGJvYXRzLCBiYXNzIGZpc2hpbmcgYm9hdCwgb3Igcm93Ym9hdC4gV2UgYWxzbyBvZmZlciBhIHdhbGtpbmcgdHJhaWwsIHdoZXJlIHlvdSBtYXkgZW5jb3VudGVyIHNvbWUgb2YgdGhlIGFyZWEgd2lsZGxpZmUsIGluY2x1ZGluZyBkZWVyLCByYWNjb29ucywgYW5kIGEgdmFyaWV0eSBvZiBiaXJkcy4uIApUaGF0IHdoYXQgSSB0cmllZCBsYXN0IGZhbGwgc28gSSBsYXVnaGVkIGEgYml0IGF0IHRoYXQKRG9lcyBhbnlvbmUgaGF2ZSB0cm91YmxlIGRlY2lkaW5nIHdoaWNoIHBsYXllcnMgdG8gZHJvcCBmb3Igc3RyZWFtcy9zcGVjdWxhdGl2ZSBwaWNrdXBzPyBJIGZlZWwgbGlrZSBhbGwgb2YgbXkgcGxheWVycyBhcmUgYmV0dGVyIHRoYW4gV1cgcGlja3VwLgpHaW5hbmRTY2FsbG9wcyAgNiBwb2ludHMgIHN1Ym1pdHRlZCA0IG1vbnRocyBhZ28KSXQgcmVhbGx5IGRlcGVuZHMgb24gd2hhdCB5b3Ugc3R1ZHlpbmcgYW5kIHdoYXQgZ3JhZGVzIHlvdSB3YW50LiBTb21lIGNsYXNzZXMgbWF5IGJlIGVhc3kgdG8gcGFzcywgYnV0IGhhcmQgdG8gZ2V0IGEgZGlzdGluY3Rpb24gb24sIHdoaWxzdCBvdGhlcnMgbWF5IGJlIGhhcmQgdG8gcGFzcyBidXQgcmVsYXRpdmVseSBpdCBxdWl0ZSBlYXN5IHRvIGdldCBhIGRpc3RpbmN0aW9uLiAoQmFzaWNhbGx5IHRoZSBjb250ZW50IGlzIGNvbXBsaWNhdGVkLCBidXQgb25jZSB5b3UgZ2V0IGl0LCBpdCByZWFsbHkgZWFzeSwgYnV0IGlmIHlvdSBuZXZlciBnZXQgaXQgYmVjYXVzZSB5b3UgZG9uIHN0dWR5LCB5b3UgZm9va2VkKQpBZHVsdHMgYXJlIG5vdCB0aGUgb25seSBvbmUgd2hvIGxvdmVzIGdhbWVzOyBjaGlsZHJlbiBsb3ZlIGl0IGFzIHdlbGwuIFRoZSBvbmxpbmUgZ2FtZSBpcyB0cmVuZGluZyB0aGVpciB3YXkgaW50byB0aGUgY2xhc3Nyb29tLiBJbiB0aGUgcGFzdCwgc2Nob29scyBoYXZlIGFsd2F5cyBlbXBoYXNpemVkIG9uIHJlYWRpbmcgYW5kIG1lbW9yaXppbmcgdG8gdGVhY2gga2lkcy4gVGhleSBmaW5kIHRoYXQgdGhpcyBpcyBoaWdobHkgaW5lZmZlY3RpdmUsIHNvIHRoZXkgZGVjaWRlZCB0byB1dGlsaXplIGEgbmV3IG1vZGFsaXR5IGluIHRlYWNoaW5nIGNoaWxkcmVuIGluIHRoZSBjbGFzc3Jvb20uIFJlc2VhcmNoIGhhcyBmb3VuZCB0aGF0IGFjdGl2ZSBsZWFybmluZyBmcm9tIHRoZSBvbmxpbmUgZ2FtZSBpcyBmaWxsZWQgd2l0aCBjaGFsbGVuZ2VzIGFuZCBvYnN0YWNsZXMgdGhhdCBoYXZlIGhlbHBlZCBza3lyb2NrZXRlZCB0aGUgY2hpbGRyZW4ncyBHUEEgYW5kIG1lbW9yeS4gSXQncyB0aGUgY29uc3RhbnQgZW5nYWdlbWVudCBhbmQgaW50ZXJhY3Rpb24gZnJvbSB0aGUgZ2FtZSB0aGF0IGhhcyBoZWxwZWQgc3R1ZGVudHMgbGVhcm4gYW5kIHByb2dyZXNzLiBJbiAyMDE3LCB0aGUgIG1hcmtldCBoYXZlIHByb2ZpdGVkIGEgdG90YWwgb2YgNjU1IG1pbGxpb24gaW4gcmV2ZW51ZS4gVGhpcyBpcyBtYWlubHkgYmVjYXVzZSBzcG9ydHMgZ2FtYmxpbmcgaGFzIGJlY29tZSB2ZXJ5IGNvbnZlbmllbnQgZnJvbSBpUGhvbmVzIGFuZCBvdGhlciBtb3JlIGNvbnZlbmllbnQgYXZlbnVlcy4gVGhlIEFzaWFuIG1hcmtldCBoYXMgYWxzbyBiZW5lZml0ZWQgZnJvbSAgd2l0aCBhIDM2JSBvZiBzaGFyZXMuIFRoZSBsZWFkaW5nIHNwb3J0aW5nIGdhbWUgaXMgRG9kYSB3aGljaCBoYXZlIGVzdGltYXRlZCB0byBhYm91dCAkMzggbWlsbGlvbiBwcm9maXQgaW4gcHJpY2UuClRoZSB0aW1lIGlzIG1lYXN1cmVkIGZyb20gdGhlIHBvaW50IGF0IHdoaWNoIHRoZSB0ZW1wZXJhdHVyZSBvZiB0aGUgbWF0ZXJpYWwgdG8gYmUgc3RlcmlsaXNlZCByZWFjaGVzIHRoZSByZXF1aXJlZCBhdXRvY2xhdmluZyB0ZW1wZXJhdHVyZSAgIHRoZSB0aWdodGVyIHRoZSBhdXRvY2xhdmUgaXMgcGFja2VkLCB0aGUgbG9uZ2VyIGl0IHdpbGwgdGFrZSBmb3IgdGhlIG1hdGVyaWFsIGluIHRoZSBjZW50cmUgb2YgdGhlIGxvYWQgdG8gcmVhY2ggdGhlIHRlbXBlcmF0dXJlIHJlcXVpcmVkLi4gCk90aGVyd2lzZSwgc2lnbiB1cCBmb3IgYSBwbGF5ZXIncyByZXdhcmQgY2FyZC4gVmlydHVhbGx5IGV2ZXJ5IGNhc2lubyBvZmZlcnMgYSB2ZXJzaW9uIG9mIHRoaXMgY2FyZCwgYSB3YXkgb2Yga2VlcGluZyB0cmFjayBvZiBhIHBsYXllcidzIHdhZ2VycyAgIGluY2x1ZGluZyBzbG90IG1hY2hpbmUgcGxheSAgIGFuZCBoaXMgd2lucywgbG9zc2VzIGFuZCBldmVuIG90aGVyIHNwZW5kaW5nLiBHZXQgY29tZm9ydGFibGUgYXQgYSBnYW1pbmcgdGFibGUgYW5kIGtlZXAgYW4gZXllIG91dCBmb3IgdGhlIHBpdCBib3NzLiBIZSdzIHRoZSBvbmUgaW4gYSByZWFsbHkgc3BpZmZ5IHN1aXQsIHdhbmRlcmluZyBhbW9uZyB0aGUgdGFibGVzLCBtYWludGFpbmluZyBhIHNlZW1pbmdseSBjYXN1YWwgYnV0IHdhdGNoZnVsIGV5ZSBvbiBhbGwgdGhhdCBnb2VzIG9uLiBDYXRjaCBoaXMgYXR0ZW50aW9uLiBHaXZlIGhpbSB0aGUgcmV3YXJkcyBjYXJkLgpJbiB0aGUgRmFpcmZpZWxkIENpdHkgQ291bmNpbCBsb2NhbCBnb3Zlcm5tZW50IGFyZWEsIHJhbmtlZCBhcyB0aGUgbW9zdCBkaXNhZHZhbnRhZ2VkIGFyZWEgaW4gU3lkbmV5LCBwZW9wbGUgdGhlcmUgbG9zdCAkOC4yNyBiaWxsaW9uIHRvIHBva2VyIG1hY2hpbmVzLiBUaGF0IGlzIGJpbGxpb25zLCBub3QgbWlsbGlvbnMuCkJvdGgga25vdyB0aGVtIGFuZCBoYXZlIGFtcGxlIGFzc2lzdGFuY2UgdG8gaiBhc2NlcnRhaW4gdHJ1dGhzIGJlZm9yZSBnaXZpbmcgdGhlbSBuYXRpb25hbCBkaXN0cmlidXRpb24uIApBbGwgdGhlc2UgaGF2ZSBoZWxwZWQgdG8gZW5oYW5jZSAgYnJhbmQgcG93ZXIgYW5kIGJvb3N0IGl0cyBhcHBlYWwgYXMgYW4gaW50ZXJuYXRpb25hbCBpbnZlc3RtZW50IGRlc3RpbmF0aW9uLi4gClB1YiBTdHJlZXQgaXMgdGhlIGJhY2twYWNraW5nIG1lY2NhIG9mIFNpZW0gUmVhcCEKTGV0IG1lIHByZWZhY2UgdGhpcyBieSBzYXlpbmcgdGhhdCBpbnN0YW50IGNhbWVyYXMgYXJlIG5vdCByZWFsbHkgYSBncmVhdCByZXBsYWNlbWVudCBmb3IgdHJhZGl0aW9uYWwgMzVtbSBmaWxtLCBlc3BlY2lhbGx5IGluIHRoaXMgZGF5IGFuZCBhZ2UuIDM1bW0gZmlsbSBpcyBmYXIgbW9yZSB2ZXJzYXRpbGUgYW5kLCB3aXRoIHRoZSBuZXdlciBmb3JtdWxhcyBmb3IgZmlsbXMgbGlrZSBLb2RhayBQb3J0cmEgYW5kIENpbmVTdGlsbCwgYXJlIGZhciBtb3JlIHRyYW5zbGF0YWJsZSB0byBkaWdpdGFsIHRoYW4gYW55IGluc3RhbnQgZmlsbSB0aGF0IGlzIGN1cnJlbnRseSBpbiBwcm9kdWN0aW9uLgpTb3dlaXQgZGllIEluaGFsdGUgYXVmIG1laW5lbSBCbG9nIG5pY2h0IHZvbiBtaXIgc2VsYnN0IGVyc3RlbGx0IHd1cmRlbiwgdmVyc3VjaGUgaWNoIGRpZSBVcmhlYmVycmVjaHRlIERyaXR0ZXIgc29yZ2ZsdGlnIHp1IGJlYWNodGVuLiBJbnNiZXNvbmRlcmUgd2VyZGVuIEluaGFsdGUgRHJpdHRlciBhbHMgc29sY2hlIGdla2VubnplaWNobmV0IGJ6dy4gRGllIGpld2VpbGlnZSBRdWVsbGUgYW5nZWdlYmVuLiAKSid0YWlzIGVuY2VpbnRlIGRlIHNlcHQgbW9pcyBsb3JzIGRlIG1vbiBlbnRyZXRpZW4gZXQgamUgbSdhdHRlbmRhaXMgcXUnaWxzIG1lIGRlbWFuZGVudCBkJ2VudHJlciBlbiBmb25jdGlvbiBhcHJzIGxhIG5haXNzYW5jZSBkdSBiYiwgbWFpcyBpbHMgbSdvbnQgZGl0ICJGbGljaXRhdGlvbnMsIHZvdXMgdGVzIGVuZ2FnZSIgYXZhbnQgZGUgbSdlbnZveWVyIGVuIGNvbmcgZGUgbWF0ZXJuaXQgdW4gbW9pcyBwbHVzIHRhcmQiLiAocDogMjEpLi4gClVzZXJzIHdobyB3YW50IHRvIHNlZSBwaG90byBnYWxsZXJpZXMgb2YgS2hhbGlmYSBpbiB2YXJpb3VzIHN0YWdlcyBvZiB1bmRyZXNzIHBheSAkNy40OSBwZXIgbW9udGgsICQxNC40OSBmb3Igc2l4IG1vbnRocywgb3IgJDI0LjQ5IGFubnVhbGx5LiAKQnV0IGlmIHlvdSBjb21wYXJlIGl0IHRvIHRob3NlIG90aGVyIGdhbWVzIEkgbWVudGlvbmVkIHdoaWNoIGhhZCBzZXZlcmFsIHllYXJzIG1vcmUgZGV2ZWxvcG1lbnQgdGltZS4gCkFsc28sIHRoZXkgZG9uIGZvbGxvdyB3aGlzcGVycyBvZiBhbnkga2luZCB0aGF0IHBvaW50IHRvIHRoZSBmYW1pbHkgaXRzZWxmICAgb3IgYW55d2hlcmUgYXdheSBmcm9tIHRoZSBWYXRpY2FuIHJlYWxseS4uIApIZSBjaGVja3Mgcml2ZXIgYmVjYXVzZSBoaXMgaGFuZCBoYXMganVzdCBlbm91Z2ggc2hvd2Rvd24gdG8gbWF5YmUgd2luIGlmIGl0IGNoZWNrcyB0aHJvdWdoLCBidXQgbm90IGVub3VnaCB0aGUgZ2V0IGFueSB2YWx1ZS4gT25jZSB2aWxsYWluIGJldHMsIHRoZXJlIGFsbW9zdCAwIGNoYW5jZSBoaXMgaGFuZCBpcyBnb29kLiBIaXMgaGFuZCBibG9ja3MgdGhlIG51dCBmbHVzaCwgQUosIEpULCBhbmQgVFQsIHdoaWNoIHdvdWxkIGFsbCBiZSBpbiB2aWxsYWluIGNhbGxpbmcgcmFuZ2UuIEhlIGRvZXNuIGJsb2NrIGhhbmRzIGxpa2UgS0osIFFKLCBzbWFsbGVyIGZsdXNoZXMsIGFuZCBLUSwgYWxsIG9mIHdoaWNoIHNob3VsZCBwcm9iYWJseSBmb2xkLgpJIGZpbmQgaXQgc28gaGFyZCB0byB0cnkgYW5kIGZvbGxvdyB0aGlzIHRoaW5raW5nLiAKSSBzYXcgbWFueSBwZW9wbGUsIHdobyBwbGFjZSBzaWRlIGJldHMgb24gc29tZW9uZSwgd2hvIGlzIHdpbm5pbmcuIEhvd2V2ZXIsIHRoZSBwcm9ibGVtIGlzIHRoYXQgd2hlbiB5b3Ugc2VlIHNvbWVvbmUsIHdobyBhbHdheXMgd2lucywgeW91IHBsYWNlIGhpZ2hlciBzaWRlIGJldHMuIE5ldmVydGhlbGVzcywgd2hhdCBpZiBoZSBsb3NlcyB0aGUgbmV4dCByb3VuZCBhbmQgeW91IHBsYWNlZCB0b28gbXVjaCBtb25leT8gVGhlbiBhbGwgeW91IGNhbiBzYXkgaXMgZ29vZGJ5ZSB0byB5b3VyIGNhc2guIFdoZW4geW91IGtub3cgdGhlIGhvdXNlIGVkZ2Ugb2YgdGhlIGdhbWUsIHlvdSBjYW4gZm9yZ2V0IGFib3V0IHNpZGUgYmV0cywgYXMgdGhleSBkbyBub3QgYnJpbmcgeW91IGEgcHJvZml0LgpTbyB3aGVuIEkgc3RhcnRlZCBub3RpY2luZyB0aGUgc2FtZSB3b21hbiBvbiB0aGUgZXZlbmluZyBjb21tdXRlIGhvbWUgb3ZlciBzZXZlcmFsIG1vbnRocyBJIGNvdWxkbiBoZWxwIGJ1dCB0YWtlIG1vcmUgbm90aWNlIG9mIGhlci4gVGhpcyBpcyB0aGUgc3Rvcnkgb2YgY3Jhenkgc3RhdGljIHdvbWFuLlRoZSBmaXJzdCByZWFzb24gSSBhY3R1YWxseSBub3RpY2VkIGhlciB3YXMgYSBmZXcgbW9udGhzIGFnbyB3aGVuIHNoZSB3YXMgc2l0dGluZyBhY3Jvc3MgdGhlIGFpc2xlIGZyb20gbWUuIFNoZSBzdGFydGVkIGFuIGFyZ3VtZW50IHdpdGggYSBtdWNoIHlvdW5nZXIgZ2lybCBzYXlpbmcgdGhhdCB0aGUgeW91bmdlciBnaXJsIGtlcHQgYnVtcGluZyBhZ2FpbnN0IGhlciBhcm0uIApMaWxsaWFuIEh1bnQuIApSdmF1bmljb3JuICAxIHBvaW50ICBzdWJtaXR0ZWQgMTMgZGF5cyBhZ28KSXMgdGhlcmUgYSBsaW1pdCB0byB0aGUgImFsbCBpbiIgYXR0aXR1ZGUgZm9yIFRleGFzIEhvbGQnRW0gdG91cm5hbWVudHMgYmVpbmcgd2F0Y2hlZCBieSB0aGUgcHVibGljPyBXaXRoIHJldGFpbCBzYWxlcywgcmVjb3JkIHJhdGluZ3MgZm9yIHRlbGV2aXNpb24gYW5kIGNhYmxlIHBsdXMgYmlnIGJ1c2luZXNzIHBvdXJpbmcgbWlsbGlvbnMgaW50byBpdCwgdGhlIHRyZW5kIGlzIHN0aWxsIGNsZWFybHkgcmVmbGVjdGluZyB0aGUgdXBzd2luZy4gQW5kIGlmIHN0YXRlIGxlZ2lzbGF0aW9uIG1vdmVzIGluIGZhdm9yIG9mIHJlZ3VsYXRpb24gb2YgdGhlIG9ubGluZSBnYW1ibGluZyBpbmR1c3RyeSBmb3IgdGhlIHRheCByZXZlbnVlLCBpdCBtaWdodCBub3QgZ28gYXdheSBhbnl0aW1lIHNvb24uIEJlY2F1c2Ugbm8gb25lIHNpdHMgZG93biBhdCBhIHRhYmxlIGxvb2tpbmcgdG8gYnVzdCBvdXQgZWFybHksIHRoZXkgc2l0IGRvd24gdG8gd2luLgpUaGVyZSB3YXMgdGhpcyBZb3VUdWJlIHZpZGVvIG9mIHNvbWUgd2VpcmQgcGl4ZWx5IERyYWdvbmJhbGwgZ2FtZSB0aGF0IG15IGZyaWVuZCBhbmQgSSBmb3VuZCB3aGVuIGdvaW5nIGRvd24gYSBZb3VUdWJlIHJhYmJpdCBob2xlIHllYXJzIGFnby4gSSBkb24ndCBrbm93IGlmIGl0IHdhcyBhIHJlYWwgZ2FtZSBvciBzb21lIHBlcnNvbmFsIHByb2plY3Qgb3Igd2hhdCB0aGUgaGVsbCBpdCB3YXMsIGJ1dCBpdCBqdXN0IGxvb2tlZCBzbyBqYW5reSBhbmQgYml6YXJyZSBhbmQgdGhlIHZpZGVvIHdhcyBwdXQgdG9nZXRoZXIgaW4gc3VjaCBhIHdheSB0aGF0IGl0IHdhcyBoaWxhcmlvdXMgdG8gd2F0Y2guIFRoZSB0b3AgY29tbWVudCB3YXMgIm9tZyBpbWFnaW5lIHRoaXMgd2l0aCBiZXR0ZXIgZ3JhcGhpY3MiIHdoaWNoIGF0IHRoZSB0aW1lIHdlIGZvdW5kIG1hZGUgaXQgZXZlbiBmdW5uaWVyLgpQcm92aW5nIGludGVudC4gCkl0IGZlZWxzIGxpa2UgdGhlcmUgdGhpcyBwcmVzc3VyZSBmb3Igd29tZW4gdGhyb3cgYSBib25lIHNleHVhbGx5IHRvIG1lbiBhbmQgd29tZW4gYXJlIGp1c3QgcHJ1ZGVzIGlmIHdlIGNvbXBsYWluLiBTY3JldyB0aGF0IG5vaXNlLiBJdCBpcyByZWFsbHkgbm90IGhhcmQgdG8gc3RvcCB0aGlua2luZyBhYm91dCB5b3Vyc2VsZiBmb3IgYSBzZWNvbmQgYW5kIHBsZWFzdXJlIHNvbWVvbmUgZWxzZS4gQW5kIGd1eXMgbmVlZCB0byBzdG9wIGJlaW5nIGdpdmVuIGVhc3kgcGFzc2VzLgpBYm91dCB0aGUgR2FydGggQnJvb2tzIGFuZCBUZWFtbWF0ZXMgZm9yIEtpZHMgRm91bmRhdGlvbjogVGhyb3VnaCBhIHVuaXF1ZSBwYXJ0bmVyc2hpcCB3aXRoIGxlZ2VuZGFyeSBlbnRlcnRhaW5lciBHYXJ0aCBCcm9va3MgYW5kIGhpcyBUZWFtbWF0ZXMgZm9yIEtpZHMgRm91bmRhdGlvbiwgU21pbGVzIGZvciBMaWZlIGd1YXJhbnRlZXMgdGhhdCBhIGZ1bGwgNTAgcGVyY2VudCBvZiB0aGUgbW9uZXkgcmFpc2VkIGJ5IENyb3duIENvdW5jaWwgbWVtYmVycyBsaWtlIERyLiBNb2RpYyBnb2VzIHRvIGNoaWxkcmVuIGNoYXJpdGllcyBpbiBjb21tdW5pdGllcyBhY3Jvc3MgTm9ydGggQW1lcmljYS4gVGhlIHJlbWFpbmluZyA1MCBwZXJjZW50IGlzIGNvbnRyaWJ1dGVkIHRvIGEgbG9jYWwgY2hhcml0eS4gT25jZSBhZ2FpbiB0aGlzIHllYXIsIERyLiBNb2RpYyB3aWxsIGJlIGNvbnRyaWJ1dGluZyB0byB0aGUgR3JlZW53ZWxsIEZvdW5kYXRpb24uCkFsbCB5b3UgbmVlZCB0byBwbGF5IGF0IFdQVCBDbHViIGZyb20gaU9TIG9yIEFuZHJvaWQgYmFzZWQgdGFibGV0IGlzIHRvIGxhdW5jaCBicm93c2VyLiAKSSd2ZSB0cmllZCBwaGVudGVybWluZSBiZWZvcmUuIE15IGRvY3RvciBzYWlkIGhlIGhhZG4ndCBtZXQgc29tZW9uZSB3aXRoIHRoZSBzYW1lIGlzc3VlIGFzIG1lIGJlZm9yZS4gVGhhdCBiZWluZyBzYWlkIEkgZGlkbid0IGZlZWwgdGhlIHNpZGUgZWZmZWN0cyAoc3dlYXRpbmcsIGluY3JlYXNlZCBoZWFydCByYXRlLCBpbmNyZWFzZWQgYm9keSB0ZW1wLCBqaXR0ZXJ5KSBvZiBwaGVudGVybWluZSBwYXN0IHRoZSAybmQgZGF5LiAKVGhlIG9jY3VsdCwgd2hldGhlciBpdCBhIHJlbGlnaW9uIG9yIGFjYWRlbWljLCBpcyBvbmUgb2YgdGhvc2UgdGhpbmcgd2hlcmUgeW91IG5ldmVyIHN0b3Agc3R1ZHlpbmcgYnV0IG1hbnkgZG8gb25jZSB0aGV5IHRoaW5rIHRoZXkgdW5kZXJzdGFuZC4gCkEgdm9pY2UgaW4gdGhlIGJhY2sgb2YgbXkgaGVhZCBzYXlzLCB5b3Ugd29uIGV2ZW4gYmUgdGhpcnN0eSwgbGVhdmUgaXQiLiAKRHJleGVsIGRpZXRpdGlhbiBzaGFyZXMgaG93IHRvIGVhdCBoZWFsdGh5IGF0IGZhc3QgZm9vZCByZXN0YXVyYW50cwpXZSBoYXZlIHRvIGRvd252b3RlIHRoZSBidWxsc2hpdCBvdXJzZWx2ZXMuClRoYXQgY2FwaXRhbCBjb3VsZCBnZW5lcmF0ZSAkMTgsMjY1IGluY29tZSBhc3N1bWluZyBhIDMgcGVyIGNlbnQgYW5udWFsIHJldHVybiBhZnRlciBpbmZsYXRpb24gZm9yIHRoZSBuZXh0IDQwIHllYXJzIHRvIGhlciBhZ2UgOTQuIEthdGUgaGFzIGEgZGVmaW5lZCBjb250cmlidXRpb24gcGVuc2lvbiBwbGFuIGF0IGhlciB3b3JrIHRoYXQgbWF0Y2hlcyAxIHBlciBjZW50IG9mIGhlciBpbmNvbWUgd2l0aCBhbiBlcXVhbCBzdW0gZnJvbSB0aGUgZW1wbG95ZXIuIEluIDE2IHllYXJzLCB0aGUgcGxhbiB3aXRoICQxLDQ0MCBhbm51YWwgY29udHJpYnV0aW9ucyB3aWxsIGdyb3cgdG8gJDI5LDkwMCBhbmQgd291bGQgYmUgYWJsZSB0byBzdXBwb3J0IHBheW91dHMgb2YgJDEsMjU2IHBlciB5ZWFyIGZyb20gaGVyIGFnZSA1MyBmb3IgdGhlIG5leHQgNDAgeWVhcnMuCkkgaW4gbXkgc2VsZmlzaCAyMHMgYW5kIG1vc3Qgb2YgbXkgbGlmZSBkZWNpc2lvbnMgYXJlIGNlbnRlcmVkIGFyb3VuZCBob3cgdGhleSBhZmZlY3QgbWUuIApJIGd1ZXNzIHRoYXQgaXMgYSB2ZXJ5IGZpbmUgbGluZSBpbiBteSBtaW5kLiBJZiB5b3UgYmFkIGF0IGl0LCBpdCBpcyBwcm9iYWJseSBiZWNhdXNlIHlvdSBhY3R1YWxseSBhcmUgaW4gb3ZlciB5b3VyIGhlYWQuIApJIHNlYXJjaGVkIGZvciBhIGZ1biB0byBrbml0IGxhY3kgcGF0dGVybiB3aXRoIGEgc2ltcGxlIGJvYmJsZXNvbWV0aGluZyB0aGF0IHdvdWxkIHNob3cgb2ZmIHRoZSAuIApNYXNvbiBhbmQgaGlzIHByb2R1Y3QuIApUaGUgcmlnaHQgd2luZyBtZWRpYSBjb21wbGV4IGlzIGJ5IGZhciB0aGUgYmlnZ2VzdCB0aHJlYXQgdG8gb3VyIGRlbW9jcmFjeSwgYW5kIGl0IGhhcyBiZWVuIGZvciBkZWNhZGVzIG5vdy4gRmV3IEFtZXJpY2FucyB1bmRlcnN0YW5kIGl0cyBwb3dlciBhbmQgc2NvcGUuIEZveCBOZXdzIGlzIGp1c3Qgb25lIGNvZyBpbiB0aGF0IG1hY2hpbmUuCklmIHlvdSBhcmUgaW50ZXJlc3RlZCBpbiBob3cgdG8gc3RhcnQgYSBob21lIGJ1c2luZXNzIGluIENsYXkgUG9rZXIgQ2hpcHMgYW5kIFBva2VyIEFjY2Vzc29yaWVzLCB5b3UgYXJlIGluIHRoZSByaWdodCBwbGFjZSEgSW4gcmVjZW50IHllYXJzLCBBbGwgQ2xheSBQb2tlciBDaGlwcyBhbmQgb3RoZXIgdHlwZXMgb2YgUG9rZXIgQWNjZXNzb3JpZXMgaGF2ZSBnYWluZWQgdGhlIGF0dGVudGlvbiBvZiBxdWl0ZSBhIGZldyBwZW9wbGUuIFRoaXMgbWF5IGJlIGR1ZSB0byB0aGUgcG9wdWxhcml0eSB0aGF0IHRoZSBXb3JsZCBQb2tlciBUb3VyIGFuZCBvdGhlciB0ZWxldmlzZWQgc2VyaWVzIHRoYXQgZm9jdXMgb24gZ2FtYmxpbmcgaGFzIGdhaW5lZC4gSXQgdGFrZXMgYSBzcGVjaWFsIGNvbW1pdG1lbnQgdG8gc3RhcnQgdGhpcyB0eXBlIG9mIGJ1c2luZXNzIGZyb20geW91ciBob21lLiAKSW4gcmVjZW50IHllYXJzIHRoZSBiZW5lZml0cyBvZiBleGVyY2lzZSBpbiBBcG9FIGU0ICBwb3NpdGl2ZSBzdWJqZWN0cyBoYXZlIGJlZW4gYW5hbHl6ZWQuIEVwaWRlbWlvbG9naWNhbCBzdHVkaWVzIHNob3dlZCB0aGF0IHRoaXMgcGFydGljdWxhciBzdWJwb3B1bGF0aW9uIGNvdWxkIGJlbmVmaXQgcmVsYXRpdmVseSBtb3JlIGZyb20gbWFpbnRhaW5pbmcgYW4gYWN0aXZlIGxpZmVzdHlsZSB0aGFuIG5vbiBjYXJyaWVycyBbMjddLiBJbiBvbGRlciBBcG9FIGU0IHBvc2l0aXZlIHdvbWVuIGFlcm9iaWMgZml0bmVzcyB3YXMgcG9zaXRpdmVseSBjb3JyZWxhdGVkIHdpdGggYmV0dGVyIHBlcmZvcm1hbmNlIG9uIGF1ZGl0b3J5LCB2aXN1YWwgYW5kIHNwYXRpYWwgbGVhcm5pbmcgdGFza3MgWzI4XS4gCkFycmVzdHMgYnJpbmcgdGhlIHRvdGFsIHRvIGZvdXIgc3VzcGVjdHMgY2hhcmdlZCBpbiB0aGUgY2FzZSB0aGF0IGFwcGVhcnMgdG8gYmUgZnVsbCBvZiBjb25uZWN0aW9ucyB0aGF0IG5vIG9uZSB3YW50cyB0byBjb25maXJtLi4gClByb0tvcmVhRm9yZWlnbmVyICAzIHBvaW50cyAgc3VibWl0dGVkIDE1IGRheXMgYWdvCkkgYWdyZWUgYnV0IEkgc3RpbGwgdGhpbmsgbXkgc2V4IGRyaXZlIGlzIGFuIGlzc3VlLiBGb3Igc29tZSByZWFzb24gSSBoYXZlIHRoZXNlIGluc2FuZWx5IHVucmVhbGlzdGljIGZhbnRhc2llcyBhYm91dCBzZXggaW4gZXZlcnkgc2l0dWF0aW9uLiBJZiBJIGdvaW5nIG9uIHZhY2F0aW9uIEkgc2VjcmV0bHkgaG9wZSB0byBiZWZyaWVuZCBhbiBhdHRyYWN0aXZlIHdvbWFuIGFuZCBoYXZlIHNleCB3aXRoIGhlciBvciBpZiBJIGdvaW5nIHRvIGNsYXNzIEkgaG9wZSB0byBob29rIHVwIHdpdGggYSBmZWxsb3cgY2xhc3NtYXRlLiBJIGtub3cgdGhlc2UgYXJlIGp1c3QgZmFudGFzaWVzIGFuZCBJIGRvbiBleHBlY3QgdGhlbSB0byBoYXBwZW4geWV0IEkgY2FuIHN0b3AgdGhpbmtpbmcgYWJvdXQgdGhlbS4gSSB3YW50IHRvIHB1dCBhbiBlbmQgdG8gdGhlc2UgdGhvdWdodHMuIEl0IG1ha2VzIG1lIGZlZWwgbmFzdHkgdG8gdGhpbmsgYWJvdXQgcmFuZG9tIHdvbWVuIGxpa2UgdGhhdC4KSSBhc2tlZCBzb21lIHBlb3BsZSBJIGtub3cgaW4gdGhlIFN0YXRlcyB3aG8gd2VyZSBvbiByZWd1bGFyIEhIIGFib3V0IHRoZSBleHBlcmllbmNlIGFuZCBieSBhbGwgYWNjb3VudHMgaXQgaXMgYSkgZmFrZSBhcyBoZWxsICh0aGUgaG91c2VodW50ZXJzIGhhdmUgYWxyZWFkeSBmb3VuZCBhIGhvdXNlL2FwdC4gCjIgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28uIAoxLCBTdGVwaGVuIFBhZGRvY2sgb3BlbmVkIGZpcmUgb24gdGhlIFJvdXRlIDkxIEhhcnZlc3QgRmVzdGl2YWwga2lsbGluZyBkb3plbnMgYW5kIHdvdW5kaW5nIGh1bmRyZWRzLiBQYWRkb2NrIHNwZW50IGhvdXJzIGluIGNhc2lub3MuIEFuZCB3YXMga25vd24gZm9yIGJldHRpbmcgYmlnIG9uIHZpZGVvIHBva2VyIGFuZCBzdGFyaW5nIGRvd24gZmVsbG93IGdhbWJsZXJzLiAKV2UgbmVlZCB0byBnZXQgb24gYm9hcmQgYmVjYXVzZSByaWdodCBub3cgd2UgYXJlIGp1c3QgdHVybmluZyBtb25leSBhd2F5Li4gCllvdSB3aWxsIHdhbnQgdG8gY29tcGxhaW4gICBkb24gZG8gaXQuIApBbmQgaXQgaXNudCBhYm91dCBZT1UuIFlvdSBkb250IGxpa2UgaGVyLCBmaW5lLiBXZSBkb250IGNhcmUuIApHZXR0aW5nIHVzZWQgdG8gdGhlIG1vbmV5IGlzIGEgYml0IG9mIGEgY2hhbGxlbmdlIGZvciBtZSAgIGJlaW5nIGJsb25kZSBhbmQgYWxsLiBKb2huIGFuZCBJIGF0ZSBhdCBxdWl0ZSBhIHZlcnkgbmljZSByZXN0YXVyYW50IHdoaWxlIFBldGUgd2FzIGhhdmluZyBhIHNjYW4gYW5kIHRoZSBmb29kIHdhcyBiZWF1dGlmdWwsIHNvIEkgdGhvdWdodCBJJ2QgZ2l2ZSB0aGVtIGEgdGlwLiBXaGVuIHRoZSB3YWl0cmVzcyBicm91Z2h0IHRoZSBjaGFuZ2UgYmFjayB0byB1cyBpbiB0aGUgbGl0dGxlIG1vbmV5IGZvbGRlciwgYXMgdGhleSBkbywgSSBsZWZ0IGEgbm90ZSBpbiB0aGUgZm9sZGVyIGFzIGEgdGlwLiBKb2huIHNhaWQgICAiU3VzaWUsIGhvdyBtdWNoIGRpZCB5b3UgbGVhdmUgZm9yIHRoZSB0aXA/IiBhbmQgSSBwcm91ZGx5IHNhaWQgMXJtYi4gVGhlIGxvb2sgb2YgYXN0b25pc2htZW50IG9uIEpvaG4ncyBmYWNlIHByb21wdGVkIG1lIHRvIGFzayAoYmVjYXVzZSBJIHRob3VnaHQgSSdkIGxlZnQgd2F5IHRvbyBtdWNoKSAgICd3aHkgaXMgdGhhdCB0b28gbXVjaCwgaG93IG11Y2ggaXMgdGhhdD8nIEpvaG4gc2FpZCB2ZXJ5IHN0cmFpZ2h0bGFjZWQgYW5kIHN0cmFpZ2h0ZmFjZWQgICAiVHdlbnR5IGZpdmUgY2VudHMiLiBXZWxsIEkgbmVhcmx5IGRpZWQgICAnaG93IGVtYmFycmFzc21lbnQhISEnIFdlIGp1c3QgY291bGQgbm90IHN0b3AgbGF1Z2hpbmcuIEkgZG9uJ3QgdGhpbmsgd2UnbGwgYmUgZ29pbmcgYmFjayB0aGVyZSBhbnkgdGltZSBzb29uLgpNYXliZSBzcG9ydHMgY291bGQgYmUgYWJvdXQgYm9kaWVzIG9mIG1vcmUgb3IgbGVzcyBzaW1pbGFyIHNpemUgYW5kIHN0cmVuZ3RoIGNvbXBldGluZyBhZ2FpbnN0IG9uZSBhbm90aGVyLCByZWdhcmRsZXNzIG9mIGdlbmRlci4uIApIb3dldmVyLCB0aGVyZSBhIGRpZmZlcmVuY2UgYmV0d2VlbiBjcml0aWNpemluZyBzcGVjaWZpYyBiZWxpZWZzIG9yIHRoaW5ncyB0aGF0IHBlb3BsZSBoYXZlIHNhaWQgYW5kIHNtZWFyaW5nL2RlaHVtYW5pemluZyBhbiBlbnRpcmUgZ3JvdXAgb2YgcGVvcGxlIGFzICJmYXIgcmlnaHQiIGluIHRoZSBwYWdlcyBvZiBUaGUgR3VhcmRpYW4uIApIaXN0b3J5LCBhbmQgdGhlIHdvcmxkIHJpZ2h0IG5vdyBmb3IgdGhhdCBtYXR0ZXIsIGhhdmUgbG90cyBvZiBleGFtcGxlcyBvZiByZXN0cmljdGl2ZSBndW4gbGF3cywgZGF0YWJhc2VzLCBndW4gdHJhaW5pbmcgcmVxdWlyZW1lbnRzLCBhbmQgZXZlcnl0aGluZyBpcyBmaW5lLiBJdCBkaWRuIGRlc3Ryb3kgc29jaWV0eSBpbiB0aGUgVUssIG9yIEphcGFuLCBvciBldmVuIGluIFJ1c3NpYSAoc29tZXRoaW5nIGVsc2UgZGlkIGl0IHRoZXJlKS4KVW5mb3J0dW5hdGVseSwgdW5saWtlIHRoZSB0aW1lIERhdmlkIENvcHBlcmZpZWxkIHdhcyBhbG1vc3Qgcm9iYmVkIGJ1dCB1c2VkIGhpcyB0cmFpbmluZyB0byBjb252aW5jZSB0aGUgcm9iYmVyIGhlIGhhZCBub3RoaW5nIGluIGhpcyBwb2NrZXRzLCBteSBndXkgYWxyZWFkeSBoYWQgbXkgbW9uZXkgaW4gaGlzIGhhbmRzLCBsZWF2aW5nIG1lIG5vIG90aGVyIGNob2ljZSBidXQgdG8gd3Jlc3RsZSBoaW0gZm9yIGl0LiAKWW91J3JlIGJhc2ljYWxseSBzaGFyaW5nIGEgYmFua3JvbGwgaW4gdGhlc2Ugc2l0dWF0aW9ucy4gCkluIGEgcmVjZW50IGNsaW5pY2FsIHJldmlldyBvbiBhdXRpc20gYW5kIHZpdGFtaW4gRCwgRHIuIEV2YSBLb2NvdnNrYSBhbmQgY29sbGVhZ3VlcyBmcm9tIHRoZSBVbml2ZXJzaXR5IG9mIEdsYXNnb3cgY2FsbGVkIGZvciAidXJnZW50IHJlc2VhcmNoIiBvbiB2aXRhbWluIEQncyByb2xlIGluIGF1dGlzbS4KTWFueSB3b21lbiBkaWRuIHdhbnQgdG8gb3IgZG9uIHdhbnQgdG8gc3BlYWsgYWdhaW5zdCBwb3dlcmZ1bCBtZW4gb3V0IG9mIGZlYXIgZm9yIHJlcGVyY3Vzc2lvbnMgb3IgbG9zaW5nIHdoYXRldmVyIGNhcmVlciB0aGV5IGhhZC4gClRoZSBiZWdpbm5pbmcgb2YgdGhlIGludGVydmlldyBnb2VzIGZpbmUuIEJ1dCB3aGVuIEJlcmdtYW4gcG9pbnRzIG91dCB0aGUgcHJvYmxlbSB3aXRoIHRoZSBzeXN0ZW0sIHRoZSBjb3JydXB0aW9uIGFuZCBicmliZXJ5IHRoYXQgcmVhbGx5IHRydWx5IGlzIHRoZSBwcm9ibGVtIHdpdGggdGF4IGF2b2lkYW5jZSwgaGUgdXNlcyBDYXJsc29uIGFzIGEgd2F5IHRvIGlsbHVzdHJhdGUgaXQuIFRoYXQgd2FzbiB0aGUga2luZGVzdCB3YXkgdG8gZXhwbGFpbiB0aGUgcHJvYmxlbSBvciB0aGUgbW9zdCBmcnVpdGZ1bCB3YXkuIApIZXIgZXZpZGVuY2Ugd2FzIGhlbHBmdWwgYW5kIG1lYXN1cmVkLiAKSXQgd2FzIGFuIGluY3JlYXNlIG9mIDguNCBwZXJjZW50IGZyb20gdGhlIHByZXZpb3VzIHllYXIuIApGb3IgZXhhbXBsZSwgYSBsb3Qgb2Ygc2ltcGxpZmljYXRpb25zIGZyb20gUElPIHJlY29tbWVuZCBnb2luZyB3aXRoIGEgcmFuZ2UgY2hlY2sgb3IgcmFuZ2UgYmV0ICgxLzMgcG90KSBzdHJhdGVneSBpbiAzQlAgT09QIENCZXQuIApHb2xkZW5zdXJyZW5kZXIgIDIxIHBvaW50cyAgc3VibWl0dGVkIDkgZGF5cyBhZ28KV2Uga25vdyBmcm9tIHRoZSBQYW5hbWEgYW5kIFBhcmFkaXNlIHBhcGVycyBob3cgc29tZSBpbmRpdmlkdWFscyB3aWxsIHVzZSBldmVyeSBvZmZzaG9yZSB0cmljayB0byBkb2RnZSB0YXhlcy4gCkluIHRoZSB3b3JzdCBjYXNlcywgcGVvcGxlIGNvbW1pdCBzdWljaWRlIGZyb20gdGhlIGV4dHJlbWUgcGFpbi4gCkxvcnMgZGUgbGEgbGVjdHVyZSBkZSBsZXVyIG91dnJhZ2UgY29tbXVuIChMYSBwaHl0byBuZXJndGlxdWUpLCBvbiBhcHByZW5kIHF1ZSwgcGFyIGV4ZW1wbGUsIGwgZXNzZW50aWVsbGUgZGUgbmlhb3VsaSAoTWVsYWxldWNhIHF1aW5xdWVuZXJ2aWEpIHMgZGFucyBsZSBwcmluY2lwZSBkdSBNdGFsIChjb3VsZXVyIGJsYW5jaGUgZXQgc2F2ZXVyIHBpcXVhbnRlKS4gCkl0IG15IGhhcHB5IHBsYWNlLi4gCkFzIG90aGVycyBoYXZlIHNhaWQgaGVyZSwgaXQncyB2ZXJ5IHJhcmUgYW5kIHJlcXVpcmVzIGEgZm9yd2FyZCB0aGlua2luZyBjb21wYW55IGJ1dCwgbXkgZmlyc3Qgam9iIGluIHRoZSBpbmR1c3RyeSBpcyBkb2luZyBidWlsZCBhbmQgcmVsZWFzZSBlbmdpbmVlcmluZy4gTW9zdGx5IGJlY2F1c2UgdGhleSB3ZXJlIHN1cnByaXNlZCBJIGtuZXcgSSB3YW50ZWQgdG8gZG8gaXQgc2luY2UgaXQncyBzb21ldGhpbmcgeW91IHVzdWFsbHkgZmFsbCBpbnRvIGxhdGVyLiBOZXZlcnRoZWxlc3MgdGhleSBzZXQgaXQgdXAgc28gbXkgZmlyc3QgNiBtb250aHMgd2FzIGJhc2ljYWxseSBhbGwgbGVhcm5pbmcgaGFuZHMgb24gd2l0aCBhIG1lbnRvciwgd2l0aCBhIHBheSByZSBldmFsdWF0aW9uIGF0IHRoZSBlbmQuIApTZWVtcyB0byBiZSBmYXZvcmVkIGJ5IHBlb3BsZSBzZWVraW5nIGZvY3VzIC8gbW90aXZhdGlvbiAvIGNhcmVlciBhY2hpZXZlbWVudCwgYmVjYXVzZSBpdCBoYXMgc3RpbXVsYW50IHByb3BlcnRpZXMuIEkgaGF2ZSBleHBlcmllbmNlZCBiZXR0ZXIgcmVzdWx0cyBmb3IgYW54aWV0eSBhbmQgZGVwcmVzc2lvbiBmcm9tIDQgYWNvIGRtdCAocHNpbGFjZXRpbiksIGEgc3ludGhldGljIHByb2RydWcgb2YgcHNpbG9jeWJpbi4gRHVyYXRpb24gaXMgNiBob3VycyB2ZXJzdXMgTFNEIDEyIGhvdXJzLCBhbmQgb3ZlcmFsbCB0aGUgZXhwZXJpZW5jZSBzZWVtcyBjbGVhbmVyIGFuZCBtb3JlIGVhc2lseSBtZXRhYm9saXplZC4KSSBkb24gdW5kZXJzdGFuZCB5b3VyIHF1ZXN0aW9uIHJlZ2FyZGluZyBwYXR0ZXJucy4gSWYgeW91ICJvZnRlbiIgZG9uIGtub3cgd2h5IGEgZ29vZCBtb3ZlIGxvb2tzL2ZlZWxzIGdvb2QsIHRoZW4geW91IG5lZWQgdG8gYW5hbHlzZSB0aGVzZSBtb3JlLiBUaGVyZSBhcmUgcGxlbnR5IG9mIHN0cmF0ZWd5IGVsZW1lbnRzLCBzbyBpZiB0aGUgbW92ZSBpcyBnb29kLCB5b3UgbmVlZCB0byBmaW5kIG91dCB3aGljaCBzdHJhdGVneSBlbGVtZW50IGlzIHRoZSByZWFzb24gdGhhdCB0aGlzIGZlZWxzIGdvb2QgYW5kIGFjdHVhbGx5IGlzIGdvb2QuIApTbyBpZiB5b3UgY291bGQgbGl0ZXJhbGx5IGp1c3QgbmFycm93IGl0IGRvd24gYSBsaXR0bGUgd2UgY2FuIGRpc2N1c3MgaXQgbW9yZSBhbmQgZGVjaWRlIGlmIHRoaXMgaXMgc29tZXRoaW5nIHdvcnRoIHB1cnN1aW5nIG9yIGlmIHRoZSBjb3N0IHZlcnN1cyB0aGUgZWxlY3RyaWNpdHkgdG8gcnVuIHRoZSBBL0MgZnVsbCBibGFzdCB3b3VsZCBiZSBwcm9oaWJpdGl2ZSwgZXRjLi4gCkNlcnRhaW5seSwgaWYgeW91IG1ha2UgdXNlIG9mIGEgcHJlIGJ1aWx0IHRoZW1lIGFuZCBkb24gY2hhbmdlIGl0IGF0IGFsbCwgdGhpcyBjYW4gZmVlbCBsaWtlIHlvdSBub3QgZG9pbmcgd2ViIGRldmVsb3BtZW50IGF0IGFsbC4gQSB3b3JkIG9mIGV4cGVyaWVuY2U6IHlvdSB3b24gYmUgbGVhdmluZyB0aGF0IHRoZW1lIHRoZSB3YXkgaXQgaXMuIHdpbGwgd2FudCB0byB0byB0d2VhayBoZWFkZXIgZGVzaWducywgY2hhbmdlIG1lbnUgdGhlbWVzLCBhZGQgc25henp5IGFuaW1hdGlvbnMuIFRoZXkgd2FudCB0byBhZGQgcGFyYWxsYXggc2Nyb2xsaW5nIGFuZCBhbmltYXRlZCBzcHJpdGVzIGFuZCBjb2xvdXJlZCBiYWNrZ3JvdW5kcyB0aGF0IGNoYW5nZSBiYXNlZCBvbiB0aGUgdGltZSBvZiBkYXkuIFRoZXkgd2FudCB0byBlbWJlZCBmdW5jdGlvbmFsaXR5IHRoYXQgZG9lc24gY29tZSBwcmVwYWNrYWdlZCBpbiBhIG5pY2UgbGl0dGxlIHdpZGdldC4KU28sIHdoaWxlIE1jQ29ubmVsbCBoYXMgYSA1MSA0OSBtYWpvcml0eSwgaGUncyBnb2luZyB0byBuZWVkIG1vcmUgdGhhbiBqdXN0IG5pbmUgRGVtb2NyYXRzIHRvIGdldCBoaW0gdG8gdGhlIDYwIHZvdGUgdGhyZXNob2xkIGhlIG5lZWRzIHRvIHBhc3MgYW55IHNwZW5kaW5nIGJpbGwuIEFpZGVzIGFyZSBwcmVkaWN0aW5nIGhlJ2xsIG5lZWQgYmV0d2VlbiAxMiBhbmQgMTQuIFRoYXQgb25seSBtYWtlcyB0aGUgam9iIG1vcmUgZGlmZmljdWx0LgpUaGUgY29tcGFueSBlbnRpcmUgZnV0dXJlIGlzIGJhc2VkIG9uIEZhY2Vib29rLCB0aGVuIFp5bmdhIHdvdWxkIGJlIGxpa2VseSB0byBiZSBhY3F1aXJlZCBieSBGYWNlYm9vay4gVG8gV2hhcnRvbiBtYW5hZ2VtZW50IHByb2Zlc3NvciBMYXdyZW5jZSBIcmViaW5pYWssIG1vc3Qgc3RyYXRlZ2ljIGFsbGlhbmNlcyB1bmxlc3MgdGhleSByZXN1bHQgaW4gYW4gYWNxdWlzaXRpb24gZmFpbCBvdmVyIHRpbWUuIApBIGxpdHRsZSBhbGNvaG9sIHRvIHJlbGF4IGFuZCBlbmpveSB5b3Vyc2VsZiBpcyBva2F5LCBnZXR0aW5nIGRydW5rIGlzIG5vdCBva2F5LiBTYW1lIHdpdGggZHJ1Z3MsIHN1Z2FyLCB2aWRlbyBnYW1lcywgYW5kIFRWLiAKRml2ZSB3b3JsZCBzZXJpZXMgb2YgcG9rZXIgcnVsZXMKU28geW91J3JlIHNheWluZyBncmFuZHBhcmVudHMgc2hvdWxkIHRvdGFsbHkgYmUgYWxsb3dlZCB0byBzaG93IGZhdm9yaXRpc20gZm9yIG9uZSBncmFuZGNoaWxkPyBUaGF0IE9QJ3MgTUlMIGlzIHRvdGFsbHkganVzdGlmaWVkIGlmIHNoZSBvbmUgd2FudHMgdG8gYnV5IENocmlzdG1hcyBwcmVzZW50cyBmb3Igb25lIG9mIGhlciBncmFuZGNoaWxkcmVuIGFuZCB0aGUgaGVsbCB3aXRoIHRoZSByZXN0LiAKU2hlJ3MgU3RldmUgSm9icycgd2lkb3cuMzIuIApGaXJzdCBwbGFjZSB3aWxsIHdpbiBhIHNlYXQgYXQgdGhlIFdvcmxkIFNlcmllcyBvZiBQb2tlciBpbiBMYXMgVmVnYXMgaW4gMjAwOCwgYSBwcml6ZSB3b3J0aCAkMTAsMDAwLiBUaGVyZSBpcyBhbiA4MCBwbGF5ZXIgbWF4aW11bSwgYW5kIG5vIGJ1eSBpbiBpcyBuZWNlc3NhcnkuCkZhdXN0ZXIgIDEgcG9pbnQgIHN1Ym1pdHRlZCA1IGRheXMgYWdvCkl0IGFsc28gaGFzIGEgcml2ZXIgcnVubmluZyB0aHJvdWdoIGl0IHRoYXQgY291bGQgYWlkIGluIHRyYW5zcG9ydGF0aW9uIGFuZCBmb29kLiAKTGl2cmVzIEhlYmRvLiBMJ2FubmUgMjAxOCBhIHQgcGxvbWJlIHBhciB1biB0cnMgbWF1dmFpcyBzZWNvbmQgc2VtZXN0cmUsIGFuYWx5c2UgTGl2cmVzIEhlYmRvLiBDb21wYXIgYXUgY29tbWVyY2UsIHF1aSBuZSByZWN1bGUgcXVlIGRlIDAsMiUgZSwgMjAxOCwgbGUgbGl2cmUgZXN0ICBsYSB0cmFuZS5TaSBsJ29uIGV4Y2VwdGUgMjAxNSBldCAyMDE2LCBsZSBtYXJjaCBuJ2EgY2VzcyBkJ3RyZSBlbiBiYWlzc2UgZGVwdWlzIDIwMTAuIFRvdXMgbGVzIGNpcmN1aXRzIGRlIGRpc3RyaWJ1dGlvbiBzb250IHRvdWNocywgbW1lIHNpIGxlcyBncmFuZGVzIHN1cmZhY2VzIGN1bHR1cmVsbGVzIHMnZW4gc29ydGVudCBtaWV1eCwgYXZlYyB1bmUgcXVhc2kgc3RhZ25hdGlvbiAoIDAsMiUpLiBQYXIgZ2VucmUsIHNldWxzIGxlcyBsaXZyZXMgamV1bmVzc2UgZXQgQkQvTWFuZ2FzIHNvbnQgZW4gaGF1c3NlLiBMZSBmb3JtYXQgcG9jaGUgcydlbiB0aXJlIGJpZW4gZ2FsZW1lbnQsIGF2ZWMgZGVzIHZlbnRlcyBlbiBsZ3JlIHByb2dyZXNzaW9uLiJVbmUgYW5uZSBlbiBkZW1pIHRlaW50ZSJDZXR0ZSBjb250cmFjdGlvbiBkdSBtYXJjaCBpbnRlcnZpZW50IGFsb3JzIHF1ZSBsYSBwcm9kdWN0aW9uIHMnZXN0IHN0YWJpbGlzZSBldCBxdWUgbGUgcHJpeCBkZXMgbGl2cmVzIHByb2dyZXNzZSBwZXUsIGV0IG1vaW5zIHF1ZSBsJ2luZGljZSBnbnJhbCBkZSBsJ0luc2VlLCBhIGNvbnN0YXQgbGUgbWFnYXppbmUuIEF2YW50IG1tZSBsYSBwdWJsaWNhdGlvbiBkZSBjZXMgY2hpZmZyZXMsIGxlIHByc2lkZW50IGR1IENlbnRyZSBuYXRpb25hbCBkdSBsaXZyZSAoQ05MKSwgVmluY2VudCBNb25hZCBjb25zdGF0YWl0IGxlIDIxIGphbnZpZXIsIGxvcnMgZGUgc2VzIHZ1eCBhdXggQ05MLCBxdWUgImwnYW5uZSAyMDE4IG5lIHJlc3RlcmEgcGFzIGNvbW1lIHVuIGdyYW5kIG1pbGxzaW1lIHBvdXIgbGUgbGl2cmUiLlVuZSBhbmFseXNlIHBhcnRhZ2UgcGFyIGxlIHByc2lkZW50IGR1IFN5bmRpY2F0IG5hdGlvbmFsIGRlIGwnZGl0aW9uIChTTkUpLCBWaW5jZW50IE1vbnRhZ25lLC5BIGxpcmUgYXVzc2lMZSBtYW5nYSBldCBsZXMgY29taWNzIGFtcmljYWlucyAgbCdob25uZXVyIGR1IGZlc3RpdmFsIGRlIEJEIGQnQW5nb3VsbWUgMjAxOVJ1bWlrbyBUYWthaGFzaGksIGxhIGNyYXRyaWNlIGRlIFJhbm1hIDEvMiwgcmVvaXQgbGUgR3JhbmQgUHJpeCBkdSBmZXN0aXZhbCBkZSBCRCBkJ0FuZ291bG1lTGUgRmF1dmUgZCdPciBkdSBtZWlsbGV1ciBhbGJ1bSBCRCAgbCdBbXJpY2FpbmUgRW1pbCBGZXJyaXNab21iaWVzOiBlbnRyZSBTZXVscyBldCBUaGUgV2Fsa2luZyBEZWFkLCBsYSBCRCBLaWR6IHJldmlzaXRlIGxlIGdlbnJlRWNoZWMgZGUgTHVjIEZlcnJ5ICBsJ0FjYWRtaWUgZnJhbmFpc2UKSGUgc2F0IGluIHRoZSBiYWNrIHJvb20gd2l0aCBoaXMgaGVhZCBkb3duIHdoaWxlIGkgYXRlIHR3byBib3dscyBvZiB0aGUgbW9zdCBkZWxpY2lvdXMgbm9vZGxlcyBpdmUgZXZlciBlYXRlbiBpbiBteSBlbnRpcmUgbGlmZS4gSGlzIHdpZmUgd2FzIGEgbG92ZWx5IGh1bWFuIGJlaW5nLCBhbmQgaW0gc3VyZSB0aGV5cmUgYm90aCBkZWFkIGJ5IG5vdy4gQnV0IHRoZSBsb29rIG9uIHRoYXQgZ3V5cyBmYWNlLiAKVGhleSBjb3VsZCBhbHNvIHByb21wdCBhbm90aGVyIHJvdW5kIG9mIGFnZ3Jlc3NpdmUgYWN0aW9ucyBmcm9tIE9QRUMgYW5kIGl0cyBuZXcgYWxseSwgUnVzc2lhLiAKVGhhbmtzIGZvciB0aGUgaW5mbyEgWWVzLCBJIHdvcmtpbmcgZnVsbCB0aW1lIHNvIG1vcmUgcmVhbCBtb25leSBmb3IgbGVzcyBob3VycyB3b3VsZCBiZSBncmVhdC4gVGhhbmtzIGZvciBnaXZpbmcgc29tZSByZWFsIG51bWJlcnMuIApSaWdodCBub3cgbXkgYWNuZSBpcyBNT1NUTFkgdW5kZXIgY29udHJvbC4ganVzdCBzZWVtIHRvIGFsd2F5cyBoYXZlIGF0IGxlYXN0IG9uZSBzcG90IG9uIHRoZSBsb3dlciBoYWxmIG9mIG15IGZhY2UgdGhhdCdzIGluY3JlZGlibHkgYW5ncnkgYW5kIGRlZXAuCihGdWxsIEFuc3dlcikuIApUaGVyZSB0aGUgemFueSBodW1vciBvZiB0aGUgV2F5c2lkZSBTY2hvb2wgc2VyaWVzLCB0aGUgdGVlbiBhd2t3YXJkbmVzcyBhbmQgYW5nc3Qgb2YgVGhlcmUgYSBCb3kgaW4gdGhlIEdpcmxzIEJhdGhyb29tLCBEb2dzIERvbiBUZWxsIEpva2VzLCBhbmQgVGhlIEJveSBXaG8gTG9zdCBIaXMgRmFjZSwgYW5kIHRoZW4gc29tZXRoaW5nIGxpa2UgSG9sZXMgdGhhdCBhIHN0b3J5IG9mIHJhY2lzbSwgZnJpZW5kc2hpcCwgYW5kIGxvdmUgYWNyb3NzIGdlbmVyYXRpb25zLiBIZSBuZXZlciB0YWxrcyBkb3duIHRvIGhpcyBhdWRpZW5jZSBhbmQgbmV2ZXIgc2hpZXMgYXdheSBmcm9tIHNlcmlvdXMgaXNzdWVzIGxpa2UgYSBsb3Qgb2Ygb3RoZXIgWUEgbGl0ZXJhdHVyZSBhdCB0aGUgdGltZS4uIApUaGVyZSBhbiB1bnRyYWluZXIgd2hpY2ggeW91IGNhbiBmaW5kIG9uIHRoZSB3b3JsZCBtYXAgYXQgdGhlIHZlcnkgbm9ydGguIEl0IGluIHRoZSBtaWRkbGUgb2Ygc29tZSBvY2Vhbiwgc28gSSB3b3VsZCByZWNvbW1lbmQgYnV5aW5nIGEgbWFwIGZyb20gdGhlIGdlbmVyYWwgc3RvcmUgYW5kIHVzaW5nIHRoZSBzaG93IGxvY2F0aW9uIGZlYXR1cmUgb2YgaXQgdG8gc2hvdyB5b3UgaG93IGZhciBvZmYgeW91IGFyZS4gClF1aWNrIGVkaXQ6IE1lYW50IHRvIHNheSBpdCBpbiBteSBjb21tZW50LiAKVGhlcmUgYSBodWdlIGRlYmF0ZSBvdmVyIHRoYXQgZXhhY3QgcXVlc3Rpb24uIApOZXltYXIgcGxheXMgb25saW5lIHBva2VyIGFzIFBhcmlzIFN0IEdlcm1haW4gc2VjdXJlIExpZ3VlIDEgdGl0bGUKVGhpcyByZXF1aXJlIG5vdCBodXJ0IHlvdSwgbm9uZXRoZWxlc3MsIGdpdmVuIHRoYXQgc2hvdWxkIHlvdSBhcmUgYSB3aW5uaW5nIHBsYXllciB5b3Ugb3VnaHQgdG8gYmUgd2lubmluZyBleHRyYSBtb25leSBwZXIgaG91ciBmb3IgcHJlY2lzZWx5IHRoZSBzYW1lIHB1cnBvc2UuIEZ1bmRpbmcgaXQgdHJ1bHkgaXMgYXMgZWFzeSBhcyB0cmFuc2ZlcnJpbmcgZnVuZHMgaW50byB5b3VyIGFjY291bnQuIE5vIGhhdmUgdG8gZHJpdmUsIHRvIHBhcmssIHRha2UgcHVibGljIHRyYW5zcG9ydGF0aW9uLCBvciB3YWxrLiAKTG9va3MgbGlrZSBoZSBqdXN0IGVtZXJnZWQgZnJvbSBhIDUgeWVhciBzZW50ZW5jZSBpbiBhbiBFYXN0ZXJuIEV1cm9wZWFuIGd1bGFnLiAKIkFzIHlvdSBnZXQgcmVhZHkgd2FsayBvZmYgdGhlIGZpZWxkLCB3aGF0IGFyZSB5b3UgcGxhbm5pbmcgbmV4dD8iLiAKVGhlIHNhZCB0cnV0aCBvZiB0aGUgbWF0dGVyIGlzIHRoYXQgV09UQyBjb3VsZCBlYXNpbHkgdHVybiB0aGlzIGZyb20gYSBsb3NzIGludG8gYSB3aW4sIGJ1dCBJIGRvbiB0aGluayB0aGV5IGRvIHRoYXQsIHNpbmNlIHRoZXkgc2VlbSBzdHVjayBpbiB0aGVpciB3YXkgb2YgdGhpbmtpbmcuCkZpbGlwaW5hIGN1cnZlcyBObyBGaWxpcGlubyBHdXlzPyBJIGNhbiBtYWtlIGV2ZXJ5dGhpbmcgcG9zc2libGUgZm9yIHlvdS4gSSB3aWxsIGFwcHJlY2lhdGUgeW91ciBraW5kbmVzcyBmb3IgY2hvb3NpbmcgbWUgY296LiBZb3Ugd291bGQgbm90IHJlZ3JldCBzZWVpbmcgbWUhIFdoZW4gSSB3YXMgMjIsIGdvaW5nIHRvIHRoZSBQaGlsaXBwaW5lcywgb3IgYW55d2hlcmUgaW4gQXNpYSwgdG8gZmluZCBwdXNzeSB3YXMgYmFyZWx5IG9uIG15IHJhZGFyLiAKSWYgdGhlIGRpc2tzIGFyZSBoZXJuaWF0ZWQgKGJ1bGdpbmcgaXMgYW5vdGhlciB0ZXJtKSB0aGUgc3BlY2lmaWMgbmVydmVzIGNhdXNpbmcgeW91ciBwcm9ibGVtcyBBUkUgYmVpbmcgcGluY2hlZC9jb21wcmVzc2VkIGJ5IHRoZSBkaXNrcyAgIHRoYXQncyB3aGF0IGhhcHBlbnMgd2hlbiB5b3UgaGVybmlhdGUgYSBkaXNrLiBUaGUgZGlhZ25vc2lzIHlvdSBkZXNjcmliZSBpcyBkaXNrIGhlcm5pYXRpb25zIGJldHdlZW4gdGhlIEMzL0M0L0M1L0M2IHZlcnRlYnJhZS4gClNvY2lhbCB2LiAKSHVtYmxlIERvY3RvciBvZiBDaGlyb3ByYWN0aWMgdG8gTGVhZCBUZWFtIFUKVGhhdCdzIG9rLCBiZWNhdXNlIGNoYW5naW5nIHRoYXQgbWF5IGh1bWFuIGluc3RpbmN0IHRvIHlpa2VzIHVwIGZ1cnRoZXJtb3JlIHBheSBiZWxvdyBhIHJlc2lkZW5jZSBsb2FuIGlzIG5leHQgdG8gaW1wb3NzaWJsZS4gQnV0IHdpdGggdGhvc2UgbGlua2VkIHdpdGggeW91IHdoaWNoIG9mIHlvdSBoYXZlIGtub3dsZWRnZWFibGUgdGhlaXIgbGl0dGxlIGJyb3duIGV5ZXMgb3BlbmVkLCBob3BlZnVsbHkgSSBkZXZlbG9wIHByb3ZpZGVkIGEgd2l0aCB0aGUgcmVxdWlyZWQgZm9vZCByZWdhcmRpbmcgdGhvdWdodCB3aGljaCBvZnRlbiB5b3UncmUgdGFja2xpbmcgdG8gcmVhc3Nlc3MgaG93IGEgbW9ydGdhZ2UgaXMgd29ya2luZyBvdmVyIHlvdS5BZ2FpbiwgeW91ciBzaXRlIGNhbiBhY3F1aXJlIHRoaXMgeW91cnNlbGYsIHBheSBhIGNsaWVudCB0byBlc3RhYmxpc2ggaXQgcGVydGFpbmluZyB0byB5b3UsIGFsc28ga25vd24gYXMgdXNlIHByZSBtYWRlIHRlbXBsYXRlcyB0aGUgZmFjdCB5b3UgY291bGQgdmVyeSB3ZWxsIHB1cmNoYXNlIG9yIGEgZmluZCBjb25jZXJuaW5nIGZyZWUgbG9jYXRlZCBpbiBnaXZlYXdheXMgYW5kIC8gb3Igc3VjaC4uIAooVGhlcmUgd2VyZSBvdGhlciBmYWN0b3JzIHRoYXQgd2VudCBpbnRvIG1lIGdvaW5nIGdmIHdpdGhvdXQgdGhlIHRlc3QuIEkgaGFkIGV4dGVuc2l2ZSBjb252ZXJzYXRpb25zIHdpdGggZXZlcnkgZHIgYWJvdXQgYW55IG90aGVyIGF1dG9pbW11bmVzIHRoYXQgSSBjb3VsZCBwb3NzaWJseSBoYXZlIGFuZCB0aGV5IG5ldmVyIG1lbnRpb25lZCBjZWxpYWMuIEkgZGlkbiBldmVuIHJlYWxpemUgY2VsaWFjIHdhcyBhbiBhdXRvaW1tdW5lIGF0IHRoZSB0aW1lLiAKVGhhdCBwaG9uZSBib290aGVzIGRpZWQgb3V0IGlzIGEgcmVzdWx0IG9mIHRlY2hub2xvZ2ljYWwgcHJvZ3Jlc3MgcmVtb3ZpbmcgdGhlIG5lZWQgZm9yIHRoZW0gYW5kIHRodXMgZWxpbWluYXRpbmcgaXRzIG1hcmtldC4gCkZ1bm9idGFpbml1bSAgNyBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvCklzIGFuIGVzc2VudGlhbCBmdW5kcmFpc2VyIGZvciBHcmFzc1Jvb3RzIFRWMTIuIFdpdGggdGhlIGdlbmVyb3VzIGNvbnRyaWJ1dGlvbnMgb2YgdGhlIHBhcnRpY2lwYW50cywgaXQgd2lsbCBhbGxvdyB1cyB0byBjb250aW51ZSBvdXIgbWlzc2lvbiBhbmQgcHJvdmlkZSB0aGUgY29tbXVuaXR5IHRoZSBhYmlsaXR5IHRvIGZyZWVseSBjb21tdW5pY2F0ZSwgc2FpZCBKb2huIE1hc3RlcnMsIHRoZSBleGVjdXRpdmUgZGlyZWN0b3Igb2YgR3Jhc3NSb290cy4KVGhlIFByaXVzJyBwcmljZSB0YWcgaXMgcm91Z2hseSB0aGUgc2FtZSBhcyBkZXZlbG9waW5nIGEgZHJpdmV0cmFpbiBmcm9tIHNjcmF0Y2ggICB3aXRoIHNpZ25pZmljYW50bHkgbW9yZSBmaXNjYWwgdXBzaWRlIGlmIGh5YnJpZHMgdGFrZSBvZmYuIFRveW90YSBvZmZpY2lhbHMgc2F5IHRoZWlyIGh5YnJpZHMgYXJlIGJyZWFraW5nIGV2ZW4sIGV2ZW4gYXQgdGhpcyBlYXJseSBzdGFnZSBvZiBkZXZlbG9wbWVudC4gClJlYWxseSBoZWxwZWQgdXMgdG8gc3RlcCB1cCBhcyBpbmRpdmlkdWFscyBtYWtpbmcgb3VyIG93biBudWNsZWFyIGZhbWlseS4gTGlrZSBEYXggU2hlcHBhcmQgc2FpZCBvbiBFbGxlbiwgeW91IGRvbiBmaXggeW91ciBjYXIgeW91cnNlbGYsIHlvdSB0YWtlIGl0IHRvIGEgbWVjaGFuaWMsIGEgcHJvZmVzc2lvbmFsLiAKV2hhdCdzIGEgd2hhbGU/IFRoZXkgaGF2ZSBhIGxvdCBvZiBtb25leSBhbmQgbGltaXRlZCBza2lsbC4gCkkgd291bGQgc2F5ICJObywgSSdtIG5vdCBjYWxsaW5nIGhlciB0byBzbW9vdGggdGhpbmdzIG92ZXIuIFNoZSB1bmRlcm1pbmVkIHVzIGJvdGgsIHNvIHNoZSBkb2Vzbid0IGdldCBhICJzbW9vdGhpbmciIGNhbGwuIApIb3dldmVyIGp1c3QgbGlrZSBnYW1ibGluZyBpbiBhIGNhc2lubywgb25saW5lIGdhbWJsaW5nIGFsc28gb2ZmZXJzIHRoZSByaXNrIG9mIGxvc2luZyBtb25leSB0b28uIFRoZSBzaW1pbGFyaXR5IG9mIGxvc2luZyBtb25leSBpZiBub3QgZ2FtYmxpbmcgd2lzZWx5IGNhbiBuZXZlciBiZSBhdm9pZGVkLCB3aGV0aGVyIG9ubGluZSBvciBub3QuIApXaGF0ZXZlciB0aGUgbGFzdCBzY2VuZSBpcywgaXQgYmUgaW1wcmludGVkIGluIG15IG1lbW9yeSBmb3JldmVyLiBJIHNwZW50IHRoZSBsYXN0IDggeWVhcnMgZmllbmRpbmcgb3ZlciB0aGlzIHNlcmllcywgb3ZlcmFuYWx5aXppbmcgZXZlcnkgc2NlbmUgYW5kIHBpZWNlIG9mIGRpYWxvZ3VlLCByZXdhdGNoaW5nIHRoZSBzZXJpZXMgYW5kIGZhdm9yaXRlIHNjZW5lcyBtdWx0aXBsZSB0aW1lcywgYW5kIHJlIHJlYWRpbmcgdGhlIGJvb2tzLiBJZiBub3QgdGhhdCwgSSBkaXNjdXNzaW5nIHRoZW9yaWVzIG9uIHRoZSBmb3J1bXMuIAoxIGNsb3ZlIGdhcmxpYywgbWluY2VkCkJlY2F1c2Ugb2YgdGhlaXIgcmlnaWQgcnVsZSBmb2xsb3dpbmcgbmF0dXJlLCB0aGV5IHRha2UgY2hpbGQgY2FyZSB2ZXJ5IHNlcmlvdXNseS4gVGhleSBkb24ndCBsZXQgdGhlbXNlbHZlcyBnZXQgZGlzdHJhY3RlZCBieSB0aGVpciBwaG9uZXMsIG9yIFRWLiAKQmFzaWNhbGx5LCB5ZXMsIGJ1dCBJIHNheSBBa2hlbmF0b24gd2FzIHRyeWluZyB0byBicmVhayB0aGUgcG93ZXIgZHluYW1pYyBhbmQgYnJpbmcgdGhlIGVubGlnaHRlbm1lbnQgcHJvY2VzcyB0byB0aGUgbWFzc2VzLiBUaGUgY2FiYWwsIG9yIHdoYXRldmVyIG5hbWUgb25lIHByZWZlcnMgKEkgdXN1YWxseSBnbyB3aXRoIEJhYnlsb24pLCBzcXVhc2hlZCB0aGF0IGFuZCBzdWJzdW1lZCB0aGUgY29uY2VwdHMsIHRoZW4gd2FycGVkIHRoZSBjb25jZXB0cy4gSSBsYXJnZWx5IHRoaW5rIEplc3VzIHdhcyB0aGUgc2FtZSwgdHJ5aW5nIHRvIGJyaW5nIHRoZSBlbmxpZ2h0ZW5tZW50IHByb2Nlc3MgdG8gdGhlIG1hc3NlcywgYnV0IHRoZSBwb3dlciBkeW5hbWljIChCYWJ5bG9uLCBhdCB0aGUgdGltZSBjZW50ZXJlZCBpbiBSb21lKSBkaWRuIHdhbnQgdGhhdC4uIApVbmUgc3VycHJpc2UgdG90YWxlIHBvdXIgbGUgcHVibGljIGV0IHBvdXIgQW5keSBSb2RkaWNrLiAKQmlsbGlvbmFpcmUgQ2FybCBJY2FobiB3YW50cyBDYWVzYXJzIEVudGVydGFpbm1lbnQgdG8gc2VsbCBpdHNlbGYgQmlsbGlvbmFpcmUgaW52ZXN0b3IgQ2FybCBJY2FobiBkaXNjbG9zZWQgaGUgaGFzIHRha2VuIGEgMTAgcGVyY2VudCBzdGFrZSBpbiBDYWVzYXJzIEVudGVydGFpbm1lbnQgYW5kIGlzIHB1c2hpbmcgdGhlIGNhc2lubyBnaWFudCB0byBzZWxsIGl0c2VsZi4gVGhlIGFjdGl2aXN0IGludmVzdG9yIHNhaWQgaGUgd2FudHMgLiBFbXBsb3llcnMgZm9yIGRpdmVyc2l0eS4gCklzIHRoZSBjaXJjbGUgeW91IHNlZSBpbiB5b3VyIHJpZ2h0IG9yIGxlZnQgZXllPyBBbmQgaXMgaXQgbmVhciB0aGUgY2VudGVyIG9mIHlvdXIgdmlzaW9uIG9yIHRoZSBwZXJpcGhlcmFscz8gSSdtIGludGVyZXN0ZWQgdG8gc2VlIGlmIHdlIGhhdmUgdGhlIHNhbWUgdGhpbmcgZ29pbmcgb24uIDYgcG9pbnRzICBzdWJtaXR0ZWQgMTMgZGF5cyBhZ28KV2Ugd2FudGVkIHRvIGNoZWNrIG91dCB0aGUgSGF2YW5hIGFyZWEgaW4gdGhlIGJhY2sgb2YgdGhlIHNoaXAuIEl0J3MgZ290IHR3byBtb3JlIGhvdCB0dWJzIGJ1dCBpdCdzIG9ubHkgYXZhaWxhYmxlIGFmdGVyIDdwbS4gU28sIHJpZ2h0IGF0IDcsIHdlIGhlYWRlZCBvdmVyLgpUaGV5IG9mdGVuIHJlbWFya2VkIG9uIGhvdyBhd2Z1bCBTZXQgd2FzIGFuZCBvZiBjb3Vyc2UgaGUgYWdyZWVkLCBhbXVzZWQgb24gdGhlIGluc2lkZSBieSB0aGVpciBjb21wbGFpbnRzLiAKV2l0aCBoZXIgY2FyYW1lbCBza2luIGFuZCBnaWdhbnRpYyBzbWlsZSwgS2hhbGlmYSBzdG9vZCBvdXQgZnJvbSB0aGUgcG9ybiBzdGFyIGNyb3dkLCB3aGljaCBpcyBzdGlsbCBkb21pbmF0ZWQgYnkgYmxvbmQsIGJsdWUgZXllZCBKZW5uYSBKYW1lc29uIGNsb25lcyBhbmQgYWxsIG5hdHVyYWwsIHdpbGwgbyBicnVuZXR0ZXMuIEhvd2V2ZXIsIHdoYXQgdHJ1bHkgc2V0IEtoYWxpZmEgb24gaGVyIHdheSB0byBiZWNvbWluZyBhbiBpbnRlcm5hdGlvbmFsIHBoZW5vbWVub24gd2FzIHRoZSBmYWN0IHRoYXQgc2hlIHNvbWV0aW1lcyBwZXJmb3JtZWQgaW4gYSBoaWphYiwgdGhlIHRyYWRpdGlvbmFsIE11c2xpbSBoZWFkIGNvdmVyaW5nLiAKICBsb2NhbHMgaW4gTXlydGxlIEJlYWNoIGtub3cgYWxsIHRoZSBiZXN0IGNvdXJzZXMsIGJlc3QgZ29sZiBkZWFscyBhbmQgY2FuIHBsb3QgZXZlcnkgc2hvdC4gCkZhY2Vib29rIGN1cnJlbnRseSBwcm9tb3RlcyB0aGUgbmV3IHZlcnNpb24gb2YgdGhlIE5ld3MgRmVlZCBvbiB0aGUgc21hbGwgbnVtYmVyIG9mIHBhZ2VzLCBpcyBleHBlY3RlZCB0byBiZSBvcGVuZWQgd2l0aGluIGEgZmV3IHdlZWtzLiBUaGUgaW1wcm92ZW1lbnRzIHdpbGwgYmUgcmV2aXNlZCB0aGUgaGFiaXRzIG9mIHRoZSB1c2VyIGxvZ2dpbmcgb24gdGhlIGhvbWVwYWdlIHRvIGdldCBpbmZvcm1hdGlvbi4gVGhpcyBpcyBhbiBpbXByb3ZlbWVudCBpbiB1c2VyIHN0aWNraW5lc3MgRmFjZWJvb2sgc3VmZmVyZWQgZnJvbSBjb21wbGFpbmluZyBvZiB0aGUgaW5kdXN0cnkgaW4gdGhlIHBhc3QgZmV3IG1vbnRocy4KRm91ciBRdWVlbnMsIEJpbmlvbnMsIGFuZCBUaGUgUGxhemEgYWxzbyBoYXZlIHBva2VyIGRvd250b3duLi4gCkJlZm9yZSB0aGlzIEkgd291bGQgd2F0Y2ggbGVzYmlhbiAicG9ybiIgKGdpcmxzIGtpc3Npbmcgb24gWW91VHViZSBsbWFvKS4gClRoZSBmdWxsIGZlc3RpdmFsIHNjaGVkdWxlIHdpbGwgYmUgcmVsZWFzZWQgQXVndXN0IDIyIHdpdGggc2V2ZXJhbCBoaWdoIHByb2ZpbGUgZmFsbCBmaWxtcyBzdGlsbCB1cCBmb3IgZ3JhYnMuIEZlc3RpdmFsIGZhdmUgWGF2aWVyIERvbGFuIGZpcnN0IEVuZ2xpc2ggbGFuZ3VhZ2UgZmVhdHVyZSBUaGUgRGVhdGggYW5kIExpZmUgb2YgSm9obiBGLiAKVmljdG9yaWFucyBsb3N0IG5lYXJseSAkMi43IGJpbGxpb24gb24gcG9rZXIgbWFjaGluZXMgaW4gdGhlIGxhc3QgZmluYW5jaWFsIHllYXIgICB0aGUgaGlnaGVzdCBmaWd1cmUgaW4gYSBkZWNhZGUgIHdpdGggcHVudGVycyBpbiBzb21lIG9mIHRoZSBzdGF0ZSdzIG1vc3QgZGlzYWR2YW50YWdlZCBjb21tdW5pdGllcyBsb3NpbmcgdGhlIG1vc3QgbW9uZXkuCllvdSBjYW4ndCBoYXZlIG9uZSB3aXRob3V0IHRoZSBvdGhlci4gCkJ1dCBmb3IgZXhhbXBsZSBpbiBteSBhcmVhIGluIEdlcm1hbnksIGV2ZW4gdGhvdWdoIGl0IGlzIGEgZ29vZCBhcmVhIGZvciBoaWtpbmcsIHRoZXJlIGFyZSBubyBzdWNoIHBsYWNlcy4gU28gSSByYXRoZXIgc3RheSBhd2F5LiBDcm9hdGlhIGZvciBoaWtpbmcsIHlvdSBtZWV0IHBsZW50eSBvZiBwZW9wbGUgaW4gdGhlIGhvc3RlbHMgdGhlcmUsIGV2ZW4gaW4gdGhlIGNvdW50cnlzaWRlLgpBcyBsYXRlIGFzIDE5NTggaXQgd2FzIG9ubHkgNDguMCBwZXIgY2VudC4gClRoZUFydE9mUmVhc29uICAgMyBwb2ludHMgIHN1Ym1pdHRlZCAzIG1vbnRocyBhZ28KV2hpY2ggYmVpbmdzIG1lIHRvLiBEbyB5b3Ugd2FudCBtb3JlIG9mIGEgbWVudGlvbiBpbiBoZXIgc29jaWFsIG1lZGlhIHByZXNlbmNlPyBJZiBzbywgd2hhdCB3b3VsZCBoYXBwZW4gaWYgeW91IHN0cmFpZ2h0IHVwIHRhbGtlZCB0byBoZXIgYWJvdXQgaXQ/IE9ubHkgdGhlbiB3aWxsIHlvdSBiZSBhYmxlIHRvIGZpbmQgb3V0IHdoYXQgZ29pbmcgb24uIENvbW11bmljYXRlIGFuZCBiZSBob25lc3QsIHlvdSBkbyB0aGUgd2hvbGUgcmVsYXRpb25zaGlwIGEgZmF2b3VyIHRoYXQgd2F5LiAKVGhlIGZhY3QgdGhhdCB0aGUgU2luZGhpIGxhbmd1YWdlLCBTaW5kaGkgY3VsdHVyZSwgYW5kIFNpbmRoaSBzb2NpbyBwb2xpdGljYWwgZGlzY291cnNlIGF0IGxhcmdlIGFyZSBzbyByZW1vdmVkIGZyb20gdGhlIG92ZXJhcmNoaW5nIGRpc2N1c3Npb25zIGFib3V0IEthcmFjaGkgaXMgdGVsbGluZy4gSW4gdGhlc2Ugc2l4IGRlY2FkZXMgUGFraXN0YW5pIGhpc3RvcmlhbnMgaGF2ZSBsYXVkZWQgdGhlIHNhY3JpZmljZXMgb2YgaW1taWdyYW50cyBmcm9tIFVQLCBCaWhhciBhbmQgUHVuamFiLiBUcmlidXRlcyBhcmUgZXZlbiBwYWlkIHRvIHRoZSBzYWNyaWZpY2VzIG9mIEJlbmdhbGkgc3BlYWtpbmcgUGFraXN0YW5pcyAgIG5vdHdpdGhzdGFuZGluZyB0aGUgcGFydGl0aW9uIG9mIFBha2lzdGFuIGluIDE5NzEuIApJZiB5b3Ugd2luIGdhbWVzLCB0aGUgbW9uZXkgaXMgeW91cnMgdG8ga2VlcCBpbiBtb3N0IGNhc2VzLiBPbmUgb2YgdGhlIGVhc2llciBvZiB3YXlzIG9mIGRvaW5nIHRoaXMgcmVzZWFyY2ggaXMgdG8gZ28gdG8gYW4gb25saW5lIGNhc2lubyBhZ2dyZWdhdG9yIHNpdGUuIFRoZXNlIHNpdGVzIGRvIGFsbCB0aGUgc2VhcmNoaW5nIGFyb3VuZCBmb3IgeW91IGFuZCBwcmVzZW50IHlvdSB3aXRoIGxpc3RzIG9mIG9ubGluZSBjYXNpbm9zLiAKUGVyc29uYWxseSwgSSBsaWtlIHRoZSBpbm5vdmF0aW9uLCBJIGRvbiB3YW50IHRvIHN0YXkgc3R1Y2sgaW4gdGhlIDIwdGggY2VudHVyeSBhcyBtdWNoIGFzIEkgbG92ZSB0aGUgYXJjaGl0ZWN0dXJlIGZyb20gdGhhdCBwZXJpb2QuLiAKQXByIDU6SnVkZ2UgaGVhcnMgdGVzdGltb255IGluIEJvdWxkZXIgQ291bnR5IExlZnRoYW5kIENhbnlvbiBhdHRlbXB0ZWQgbXVyZGVyIGNhc2VPY3QgMjc6TW9zdCBkb2N1bWVudHMgaW4gQm91bGRlciBDb3VudHkgYXR0ZW1wdGVkIG11cmRlciBjYXNlIHRvIGJlIG1hZGUgcHVibGljLCBqdWRnZSBydWxlc09jdCAxNDpEYWlseSBDYW1lcmEgb3JkZXJlZCB0byByZW1vdmUganVkZ2UncyBydWxpbmcgZnJvbSB3ZWIsIGJ1dCB3b24ndCBiZSBoZWxkIGluIGNvbnRlbXB0T2N0IDM6QWZmaWRhdml0OiBCb3ksIDE2LCBhZG1pdHMgdG8gYXR0YWNraW5nIGVsZGVybHkgTGVmdGhhbmQgQ2FueW9uIHdvbWFuT2N0IDI6Qm91bGRlciBDb3VudHkgREE6IEZpbGluZyBhZHVsdCBjaGFyZ2VzIGdpdmVzIHByb3NlY3V0b3JzIG9wdGlvbnNTZXAgMjg6Qm91bGRlciBqdWRnZSBsaWZ0cyBvcmRlciBibG9ja2luZyBEYWlseSBDYW1lcmEgZnJvbSBwdWJsaXNoaW5nIHdhcnJhbnQsIGJ1dCBwdXRzIHJ1bGluZyBvbiBob2xkU2VwIDI3OkRhaWx5IENhbWVyYSBjaGFsbGVuZ2VzIG9yZGVyIGJsb2NraW5nIHB1YmxpY2F0aW9uIG9mIHdhcnJhbnQgYXMgdW5jb25zdGl0dXRpb25hbFNlcCAyMjpUZWVuIGFjY3VzZWQgb2YgYXR0ZW1wdGVkIG11cmRlciBpbiBicnV0YWwgTGVmdGhhbmQgQ2FueW9uIGF0dGFjayBhcnJlc3RlZCBTZXAgMjA6VGVlbiBzb3VnaHQgaW4gYXR0ZW1wdGVkIG11cmRlciBvZiBlbGRlcmx5IHdvbWFuIGluIExlZnRoYW5kIENhbnlvblRoZSBjYXNlIGFnYWluc3QgYSBCb3VsZGVyIHRlZW4gYWNjdXNlZCBvZiBzdHJpa2luZyBhbiBlbGRlcmx5IExlZnRoYW5kIENhbnlvbiB3b21hbiBpbiB0aGUgaGVhZCB3aXRoIGEgZmlyZSBwb2tlciBhbmQgZnJhY3R1cmluZyBoZXIgc2t1bGwgbGFzdCB5ZWFyIHdpbGwgcmVtYWluIGluIEJvdWxkZXIgRGlzdHJpY3QgQ291cnQuRGlzdHJpY3QgSnVkZ2UgSW5ncmlkIEJha2tlIG9uIFR1ZXNkYXkgcnVsZWQgYWdhaW5zdCBhIGRlZmVuc2UgbW90aW9uIHRvIGhhdmUgdGhlIGNhc2UgYWdhaW5zdCAxNiB5ZWFyIG9sZCBKZWZmcmV5IENvbGxpbnMgc2VudCBiYWNrIHRvIGp1dmVuaWxlIGNvdXJ0LCB3aGljaCBDb2xsaW5zJyBhdHRvcm5leXMgaGFkIGJlZW4gYXR0ZW1wdGluZyBzaW5jZSB0aGUgY2FzZSBmaXJzdCB3ZW50IHRvIGNvdXJ0LkJha2tlIHJ1bGVkIGluIHRoZSBzYW1lIHdyaXR0ZW4gb3JkZXIgdGhhdCBlbm91Z2ggcHJvYmFibGUgY2F1c2UgZXhpc3RzIGZvciB0aGUgY2FzZSB0byBtb3ZlIGZvcndhcmQuQ29sbGlucyBpcyBjaGFyZ2VkIGFzIGFuIGFkdWx0IHdpdGggYXR0ZW1wdGVkIGZpcnN0IGRlZ3JlZSBtdXJkZXIgYW5kIGZpcnN0IGRlZ3JlZSBhc3NhdWx0IGFnYWluc3QgYW4gYXQgcmlzayBhZHVsdC4gVGhlIEJvdWxkZXIgRGlzdHJpY3QgQXR0b3JuZXkncyBPZmZpY2UgaGFzIGFsc28gZmlsZWQgdHdvIGNyaW1lIG9mIHZpb2xlbmNlIHNlbnRlbmNpbmcgZW5oYW5jZW1lbnRzIGluIHRoZSBjYXNlLlByb3NlY3V0b3JzIGFsbGVnZSB0aGF0IENvbGxpbnMgc3RydWNrIDcxIHllYXIgb2xkIEthdGllIEt1bHBhIGluIHRoZSBoZWFkIHdpdGggYSBmaXJlIHBva2VyIGF0IGhlciBMZWZ0aGFuZCBDYW55b24gcmVzaWRlbmNlIGluIFNlcHRlbWJlciwgZnJhY3R1cmluZyBoZXIgc2t1bGwgYW5kIG5lYXJseSBraWxsaW5nIGhlci5Qcm9zZWN1dG9ycyBhbHNvIGFsbGVnZSB0aGF0IENvbGxpbnMgd2hvIGhhZCBvcGVuIGNoYXJnZXMgZnJvbSBhbiB1bnJlbGF0ZWQgaW5jaWRlbnQgYXQgdGhlIHRpbWUgb2YgdGhlIGFsbGVnZWQgYXR0YWNrIGN1dCBvZmYgaGlzIGFua2xlIG1vbml0b3Igd2hlbiBoZSBmbGVkIGFuZCBhbHRlcmVkIGhpcyBhcHBlYXJhbmNlIHRvIGF2b2lkIGNhcHR1cmUuSG93ZXZlciwgdGVzdGltb255IHJldmVhbGVkIHRoYXQgQ29sbGlucyBzdWZmZXJlZCBhIGNoYW90aWMgY2hpbGRob29kLCB3aGljaCByZXN1bHRlZCBpbiBzdHVudGVkIGVtb3Rpb25hbCBkZXZlbG9wbWVudCBhbmQgbGVmdCBoaW0gbGVzcyBtYXR1cmUgdGhhbiB0aGUgYXZlcmFnZSAxNiB5ZWFyIG9sZC5Db2xsaW5zIGFsc28gcmVwb3J0ZWRseSBzdWZmZXJzIGZyb20gbXVsdGlwbGUgbWVudGFsIGhlYWx0aCBhbmQgc3Vic3RhbmNlIGFidXNlIGlzc3VlcyB0aGF0IGhhdmUgYmVlbiBsZWZ0IGxhcmdlbHkgdW50cmVhdGVkLiAKQ29tYmluZSB5b3VyIHdpbm5pbmdzIGZyb20gYm90aCBoYWx2ZXMuIElmIHlvdSBoYXZlIG1vcmUgbW9uZXkgdGhhbiB5b3Ugc3RhcnRlZCBvdXQgd2l0aCwgdGhlbiBpdHMgdGltZSB0byBxdWl0LiAKR2V0IG92ZXIgeW91cnNlbGYgYW5kIG1vdmUgdGhlIGZ1Y2sgb24uIApPbmUgbW9udGggaW4sIG1hdGVyaWVsIGhhcyBiZWVuIHJlbW92ZWQgZnJvbSBub3J0aGVhc3Rlcm4gU3lyaWEsIGJ1dCB0cm9vcHMgcmVtYWluLiAKT3RoZXIgbWVtYmVyc2hpcHMgaW5jbHVkZWQgdGhlIFVBVyBMb2NhbCAgNTMzLCBCb3dsaW5nIEdyZWVuIEVhZ2xlcyAyMTgwIGFuZCBsaWZlIG1lbWJlciBvZiB0aGUgRmluZGxheSBFbGtzIExvZGdlICA3NS4gClRoZSByZWFzb25zLCBubyBkb3VidCwgYXJlIGNvbXBsaWNhdGVkLCBidXQgc3VyZWx5IHRoZSBmYWN0IHRoYXQgdGhlIENhbmFkaWFuIGJvcmRlciBpcyBhYm91dCB0aHJlZSB0aW1lcyBsb25nZXIgdGhhbiB0aGUgTWV4aWNhbiBvbmUsIGFzIHdlbGwgYXMgdGhlIGVjb25vbWljIHN0YWJpbGl0eSBvZiBDYW5hZGEsIGFuZCB0aGUgd2hpdGVuZXNzIG9mIGl0cyBwb3B1bGF0aW9uIGhhdmUgYWxsIHBsYXllZCBzb21lIHJvbGUgaW4gY3JlYXRpbmcgYSByZWxhdGl2ZWx5IHBvcm91cyBib3JkZXIuIApBIGRyYWdvbidzIHBvaW50IG9mIHZpZXcgSSBsb29rIGF0IGRpZ2l0YWwgZGVhbHMsIEkgbG9va2luZyBmb3IgcGVvcGxlIHdobyB1bmRlcnN0YW5kIHRoZSBjb3N0IG9mIGFjcXVpc2l0aW9uLCB3aG8gYXJlIGZhciBlbm91Z2ggYWxvbmcgdGhhdCB0aGV5IHVuZGVyc3RhbmQgd2hhdCBhIGN1c3RvbWVyIGlzIHdvcnRoIHRvIHRoZW0gYW5kIHRoYXQgdGhlcmUgaXMgZW5vdWdoIG9mIGEgZ2FwIGJldHdlZW4gdGhlIGNvc3QgYW5kIHNhbGVzIGdlbmVyYXRlZCB0aGF0IGl0IG1ha2VzIHNlbnNlIGFzIGFuIGludmVzdG1lbnQsIE1yLiAKVGhlbiBJIGd1ZXNzIGFmdGVyIGEgc3RyaW5nIG9mIGh1Z2UgaGl0cywgdGhlaXIgcGVyc29uYWxpdGllcyAoYW5kIGVzcGVjaWFsbHkgQm9ubyBzdGFydGVkIHJ1YmJpbmcgcGVvcGxlIHRoZSB3cm9uZyB3YXkuIApEZW5uaXMgY291bGQsIG9mIGNvdXJzZSwgaW5pdGlhdGUgdGhlIGJyZWFrIHJlZ2FyZGxlc3MgICBhbmQgZWl0aGVyIGFjY2VwdCBCdXR0b24ncyByZXRpcmVtZW50IG9yIGdhbWJsZSB0aGF0IGhlIGRvZXNuJ3QgcmVhbGx5IG1lYW4gaXQuIApCb2xseXdvb2QgYmFkZGllcyBwYWludCBMb25kb24gcmVkCjI4IGJ5IHR3byBtYXNrZWQgbWVuIHdobyBodXJsZWQgcmFjaWFsIGFuZCBob21vcGhvYmljIHNsdXJzIGF0IHRoZSBibGFjayBhbmQgb3Blbmx5IGdheSBhY3RvciwgYmVhdCBoaW0sIHRocmV3IGFuIHVuaWRlbnRpZmllZCBsaXF1aWQgY2hlbWljYWwgb24gaGltIGFuZCBsb29wZWQgYSByb3BlIHRpZWQgbGlrZSBhIG5vb3NlIGFyb3VuZCBoaXMgbmVjay4gClRoZSB0ZWV0aCBncml0dGluZyB0aGluZyBsZW5kcyBtZSB0byBiZWxpZXZlIGl0IHdhcyBhdCBsZWFzdCB0b28gbXVjaCBwcmVzc3VyZS4uIApJbiByZWFkaW5nIHRlcm5pb24sIGFzIHdpdGggYWxsIG9mIFJhcGF0YWhhbmEncyBwb2V0cnksIGNlcnRhaW4gcXVlc3Rpb25zIGFyaXNlLiBXaHkgdGhlIGVjY2VudHJpYyB0eXBvZ3JhcGh5PyBUaGUgZXllIGFuZCB0aGUgbWluZCBhcmUgbGVkIGFjcm9zcyB0aGUgdG9wb2dyYXBoeSBvZiB0aGUgcGFnZSBpbiBhIG1hbm5lciB0aGF0IGVuaGFuY2VzIHRoZSBzZW1hbnRpY3Mgb2YgdGhlIHRleHQsIChhbmQgeWV0IGl0IGlzIHN0aWxsIGJlc3QgcmVhZCBhbG91ZCkuIEFuZCB3aHkgdGhlIG9ic2N1cmUgbGV4aXM/IFRoZSBvZnRlbiB1bmZhbWlsaWFyIHZvY2FidWxhcnkgZm9yY2VzIGEgZm9jdXMgb250byBwcmVjaXNlIG1lYW5pbmcgYW5kIG51YW5jZXMgb2YgbWVhbmluZy4gSSBzbWlsZSBhdCB0aGUgb2NjYXNpb25hbCBib24gbW90LCBhcyB3aGVuIGhlIGZlZWxzIGF0cmFiaWxpb3VzLCBvbiBlbmNvdW50ZXJpbmcgQW1lcmljYW4gc2VydmljZW1lbiBpbiB0aGUgUGhpbGlwcGluZXMuIEludGVyZXN0aW5nbHkgYWxzbyBSYXBhdGFoYW5hIHBpY2tzIHVwIHRoZSB0aW1lIGhvbm91cmVkIHRyYWRpdGlvbiBvZiB3cml0aW5nIHBvZXRyeSBhYm91dCB3cml0aW5nIHBvZXRyeSwgbXVzaW5nIG9uIHRoZSBNdXNlIGFuZCwgdG8gZ29vZCBlZmZlY3QgbWV0YXBob3JpY2FsbHksIGFzIGNhdGNoaW5nIGZpc2gsIGFuZCBwcmVwYXJpbmcgYSBib2lsIHVwLgo3LiBJcyBpdCAzMiBCaXQ/IFllcy4gUGxlYXNlIHNlZWQgdGhpcyBmb3IgYXMgbG9uZyBhcyBwb3NzaWJsZS4gCklmIHlvdSBhcmUgcGxheWluZyAkMTAgJDIwLCB3aXRoIGEgYmlnIGJldCBvZiAkNDAsIGl0IHdvdWxkIHJlc3VsdCBpbiBhbiBlYXJuIHJhdGUgb2YgKGF0IDQwIGhvdXJzIHBlciB3ZWVrKSAkMSw2MDAsIGFuZCB5b3Ugd291bGQgbmVlZCBhIGJhbmtyb2xsIG9mICQxMiwwMDAuLiAKQmVjYXVzZSB3aGF0IHBlb3BsZSBkbyBpcyBnZXQgaW50byB0aGUgc3RhdGlvbiBvbiBhICQyLjUwIHRpY2tldCwgdGhlbiB0aGV5IG1ha2UgYW4gJDggdHJpcCAob3Igd2hhdGV2ZXIgdGhlaXIgZmFyZSB3b3VsZCBiZSksIHRoZW4gbGVhdmUgdGhyb3VnaCB0aGUgZW1lcmdlbmN5IGV4aXQuIFRoZXkgY2FuIGdvIHRocm91Z2ggdGhlIG5vcm1hbCBleGl0IGdhdGUgYmVjYXVzZSBpdCB3b3VsZG4gb3BlbiBmb3IgdGhlbSBkdWUgdG8gdGhlIGZhcmUgZGlzY3JlcGFuY3kuIApBc2lkZSBmcm9tIHRoYXQsIHRoZSB3b3JsZCBtb2RlbCBpcyB1bndyYXBwZWQgZGlmZmVyZW50bHkgdGhhbiB0aGUgdmlld21vZGVsIG1vZGVsIHdoaWNoIGNhdXNlcyBhIHdlaXJkIHRleHR1cmUgZGlzdG9ydGlvbiBvbiB0aGUgYmFja3NpZGUgb2YgdGhlIGRlYWdsZSBpbiB0aGlyZCBwZXJzb24uIApNZXRob2RvbG9naWNhbCBxdWFsaXR5IHdhcyB1c2VkIHRvIGV4Y2x1ZGUgc3R1ZGllcyBmcm9tIHRoZSBpbml0aWFsIHlpZWxkIG9mIGluY2x1ZGVkIHN0dWRpZXMgKHRocmVzaG9sZCBmb3IgZXhjbHVzaW9uIG5vdCByZXBvcnRlZCkuLiAKSGUgbm93IGZhY2VzIGNyaW1pbmFsIGlucXVpcmllcyBpbiB0aHJlZSBjaXRpZXMgYWZ0ZXIgYW4gSXRhbGlhbiBhY3RyZXNzIHRvbGQgTG9zIEFuZ2VsZXMgZGV0ZWN0aXZlcyB0aGF0IFdlaW5zdGVpbiByYXBlZCBoZXIgaW4gYSBob3RlbCByb29tIGluIDIwMTMuCk9uY2UgeW91IHN0YXJ0IGJldHRpbmcgcmVhbCBtb25leSwgeW91J2xsIGV4cGVyaWVuY2UgdGhlIGFkcmVuYWxpbmUgcHVtcGluZyBhbmQgeW91J2xsIGdldCBkcmF3biBpbnRvIHRlbXB0YXRpb24gdG8gYmV0IG1vcmUgdGhhbiB5b3UgY2FuIGFmZm9yZCBzb29uZXIgb3IgbGF0ZXIuIExlYXJuIHRvIGNvbnRyb2wgdGhvc2UgdXJnZXMgYmVjYXVzZSBpdCBpcyBleHRyZW1lbHkgaW1wb3J0YW50IHRvIHBsYXkgd2l0aGluIHRoZSBsaW1pdHMgb2YgeW91IGJhbmtyb2xsLiAKRWFjaCBjaG9pY2UgZ2l2ZXMgb2ZmIGFuIHVuYmVsaWV2YWJsZSBhcHBlYWwgYW5kIGFzIHB1cmNoYXNlcnMgb3Vyc2VsdmVzLCB0aGUgdHVybm91dHMgZm9yIG91ciBsb2NhbCBwYXJ0aWVzIGhhdmUgb25seSBpbmNyZWFzZWQuIFdoaWxlIHdlIGNhbid0IHNheSBpdCdzIGFsbCBiZWNhdXNlIG9mIHRoZSBTdWl0ZWQgR3JlZW4gUG9rZXIgVGFibGUgQ2xvdGggaXQgZGVmaW5pdGVseSBoZWxwcy4uIApUaGlzIHllYXIgYm9hcmQgbWVtYmVyIEplZmYgR3JpbXNoYXcsIGFuZCBOYW5jeSBDb25jYWRvcm8gb2YgT3N3ZWdvIEhlYWx0aCB3aWxsIHNlcnZlIGFzIG91ciB2b2x1bnRlZXIgY29vcmRpbmF0b3JzLCIgc2hlIHNhaWQuQXMgY29vcmRpbmF0b3JzIEdyaW1zaGF3IGFuZCBDb25jYWRvcm8gaGF2ZSBiZWVuIGJ1c3kgaW52aXRpbmcgYmFjayBsYXN0IHllYXIncyB2b2x1bnRlZXJzIGFuZCByZWFjaGluZyBvdXQgdG8gb3RoZXIgaW5kaXZpZHVhbHMgYW5kIG9yZ2FuaXphdGlvbnMgdGhhdCBtYXkgYmUgbmV3IHRvIHRoZSBldmVudC4gQ29uY2Fkb3JvIHNhaWQgdGhhdCB0aGV5IGFyZSBsb29raW5nIHRvIGZpbGwgYWxsIGF2YWlsYWJsZSBzcG90cyBmb3Igdm9sdW50ZWVycyB0byBlbnN1cmUgdGhhdCBpdCdzIGFuIGVuam95YWJsZSBkYXkgdGhlIGdvbGZlcnMgYW5kIGV2ZXJ5b25lIGludm9sdmVkLkNvbmNhZG9ybywgd2hvIHdvcmtzIGZvciBPc3dlZ28gSGVhbHRoIGlzIGhhcHB5IHRvIGJlIGFibGUgdG8gZG9uYXRlIGhlciB0aW1lIHRvIHRoZSBVbml0ZWQgV2F5LiAiSSB3YXMgaG9ub3JlZCB0byBzZXJ2ZSBhcyBjbyBjaGFpciB3aXRoIE1hcmlvbiBDaWNpYXJlbGxpIGZvciB0aGUgT3N3ZWdvIEhlYWx0aCAyMDEwIGZ1bmRyYWlzaW5nIGNhbXBhaWduLiAKVGhlIENvbXB0b24gR2FuZ2JhbmcgWW91IG1lZXQgYSB5b3VuZyBsYWR5IGF0IHRoZSBiYXIuLiAKIklmIG9wZXJhdG9ycyBvcGVuIGFuZCBjbG9zZSB0aGUgbWFjaGluZXMgYW4gaG91ciBsYXRlciBvciBlYXJsaWVyIHRoZW4gdGhhdCBpcyBhIGxpdHRsZSB0aGluZyB0aGV5IGNhbiBkbyB0byBoZWxwIHBlb3BsZSB3aG8gbmVlZCBoZWxwLiAiSWYgdGhlIEFUTVMgYXJlIGZ1cnRoZXIgYXdheSB0aGVuIGhvcGVmdWxseSB0aGF0IGJyZWFrIGZyb20gc2l0dGluZyBhdCB0aGUgbWFjaGluZSB3aWxsIG1ha2UgZ2FtYmxlcnMgdGhpbmssICdkbyBJIHJlYWxseSB3YW50IHRvIHRha2UgdGhhdCBleHRyYSAkMTAwIG91dCBvciBzaG91bGQgSSB3YWxrIGF3YXk/Jy4iIENyIE1vcmFuIHNhaWQgaGUgaG9wZWQgb3RoZXIgY291bmNpbGxvcnMgc3VwcG9ydGVkIHRoZSBkZWNpc2lvbiBiZWNhdXNlIGhlIHdhcyB0cnlpbmcgdG8gaGVscCBnYW1ibGVycyBhcyB3ZWxsIGFzIGdhbWJsZXJzJyBmYW1pbGllc2Zyb20gc3VmZmVyaW5nLiAKQ2F0c2FuZHNwYWNlYW5kbWF0aCAgMTAgcG9pbnRzICBzdWJtaXR0ZWQgMTAgZGF5cyBhZ28KSXQgZG9lc24gbWF0dGVyIGlmIGl0cyA1MCUrMSBvciA1MCUrNDglLCB5b3UgbmVlZCA1MCUrMSB0byBwYXNzIGxlZ2lzbGF0aW9uIHdpdGhvdXQgYSB0aWVicmVha2VyLlRodXMgaXQgaXMgdmVyeSBlYXN5IHRvIHZhbGlkYXRlIHRoZSBjbGFpbSB3aGV0aGVyIG9yIG5vdCBvbmx5IGRlbW9jcmF0cyBoYXZlIGhhZCBhIG1ham9yaXR5IGluIGJvdGggaG91c2VzIG9mIHRoZSBDYWxpZm9ybmlhIFN0YXRlIExlZ2lzbGF0dXJlIGFuZCBpZiBPUCB3YW50ZWQgdG8gcHV0IGEgdGhvdWdodCBpbnRvIGtub3dpbmcgaWYgcGVyc29uIGVuc3VyZSB0aGVuIE9QIGNvdWxkIGhhdmUgZG9uZSBzby4gCk9oIHNoZSdzIG5ldmVyIGhhZCBhIGNoaWxkLiBUaGF0J3Mgd2hhdCBtYWtlcyBtZSBzbyBtYWQuIFNNSUwgaXMgYWxzbyB0cnlpbmcgdG8gYmUgc3VwZXIgZ3JhbmRtYSBhbmQgaWdub3JlcyB0aGUgZmFjdCB0aGF0IFNPIGhhcyBhIG1vdGhlciBhcyBkbyBJIC4gU2hlIGNvbXBsZXRlbHkgaWdub3JlcyB0aGUgZmFjdCB0aGF0IHRoZXkncmUgYXJvdW5kIGF0IGFsbCB0b28uIFdoZW4gdGhleSB3ZXJlIGxlYXZpbmcgYmFjayBpbiBTZXB0ZW1iZXIsIHNoZSBrZXB0IHRlbGxpbmcgbWUgc2hlIGNvdWxkIGJlIGF0IG15IGhvdXNlIGluIGhvdXJzIGlmIEkgbmVlZGVkIGFueXRoaW5nLCBhbmQgb2YgY291cnNlIHNoZSBtZWFudCBpZiBJIG5lZWRlZCB0byBkbyBhbnl0aGluZyB3aXRob3V0IGJhYnkuIEkgZG9uJ3QgdGhpbmsgc2hlJ2xsIGtpZG5hcCBoZXIsIGJ1dCBJIGFtIHdvcnJpZWQgaXQncyBnb2luZyB0byBiZSBhIHBvd2VyIHN0cnVnZ2xlIHVudGlsIG15IGRhdWdodGVyIGNhbiBzcGVhayB1cCBmb3IgaGVyc2VsZi4gSSBhZ3JlZSB0aG91Z2ggc2hlIGRvZXNuJ3QgaGF2ZSBnb29kIHdpbGwgaW4gbWluZCBidXQgdGhpbmtzIG15IGJhYnkgaXMgaGVyIGZsZXNoIGFuZCBibG9vZC4KQnV0IHRoZSBkZXRlY3RpdmUgSSB0YWxrZWQgdG8gYXNrZWQgYSBsb3Qgb2YgcXVlc3Rpb25zIHRvIGNvcnJvYm9yYXRlIHRoZSBhY2NvdW50LCBhbmQgc2FpZCBpbiB0aGVzZSBjYXNlcyB0aGV5IHJlYWxseSB0cnkgdG8gYXZvaWQgZ29pbmcgdG8gdHJpYWwsIGJlY2F1c2Ugd2l0bmVzcyBpbnRpbWlkYXRpb24gaXMgYSByZWFsIHRoaW5nIGFuZCB5b3UncmUgcHJldHR5IGVhc3kgdG8gZmluZCBhZnRlciB0ZXN0aWZ5aW5nIGFib3V0IHNvbWV0aGluZyB0aGF0IGhhcHBlbmVkIGluL25lYXIgeW91ciBob21lIG9yIGJ1c2luZXNzLiBXaXRuZXNzZXMganVzdCBkb24ndCB3YW50IHRvIGV2ZW4gY29tZSB0byBjb3VydCwgc28gaWYgdGhleSBjYW4ndCBnZXQgYSBwbGVhLCB0aGVyZSdzIHVzdWFsbHkgbm8gdHJpYWwuIEFuZCBJIHN1cHBvc2Ugbm8gdHJpYWwgbWVhbnMgdGVjaG5pY2FsbHkgdW5zb2x2ZWQuClNpbGx5Uk9JICA0IHBvaW50cyAgc3VibWl0dGVkIDQgbW9udGhzIGFnbwpXaGVuIHlvdSBhcmUgc2hvcHBpbmcgZm9yIFRleGFzIEhvbGQgRW0gUG9rZXIgQ2hpcHMsIHlvdSBzaG91bGQgYWx3YXlzIGdpdmUgc29tZSB0aG91Z2h0IHRvIGhvdyB5b3Ugd2lsbCB1c2UgdGhlbS4gQXNpZGUgZnJvbSBlbmhhbmNpbmcgYW55IGdhbWUgdGhhdCB5b3UgcGxheSBpbiB5b3VyIG93biBob21lLCB5b3UgbWF5IHdhbnQgdG8gYnJpbmcgdGhlbSB0byBvdGhlciBsb2NhdGlvbnMuIApJdCBpc24ndCB0aGF0IEkgZG9uJ3QgYWRtaXJlIGFuZCBhcHBsYXVkIHRoZSBpZGVhbHMgdGhleSBjbGFpbSB0aGV5IGFyZSBzdHJpdmluZyBmb3IgIGRlbW9jcmFjeSwgZXF1YWxpdHksIGEgc3Ryb25nIGFuZCBmZWFybGVzcyBqdWRpY2lhcnkgIGl0J3MganVzdCB0aGF0IEkgZG9uJ3QgYmVsaWV2ZSB0aGF0IG1vc3QgbG9jYWwgbGF3eWVycyBhcmUgbmVjZXNzYXJpbHkgaW50ZWxsZWN0dWFsbHkgYW5kIGV0aGljYWxseSBlcXVpcHBlZCB0byBnaXZlIHRoZW0gdG8gdXMuIApGaXJzdCB0aGluZyB0aGV5IHNhaWQgd2FzIHRoZSBraWRzIGNvbWUgYmFjayBpbiBhbmQgd2UgZGlkLiBTbyBIYXJkdGFpbHMgaXMgbm93IGZhbWlseSBmcmllbmRseS4gU2Nvb3RzIHdhcyBhbmQgT3ZlciBvbmx5IGFuZCBzbyB3ZSBjaGFuZ2VkIGFsbCB0aGUgc2lnbnMuIApZb3Ugd2lsbCB3YW50IHRvIHBpY2sgdXAgc29tZSBza2lsbHMgb24gdGhlIHNpZGUgaW4gdGhlIG1lYW50aW1lIHRoYXQgY2FuIGhlbHAgeW91IGVhcm4gc29tZSBtb25leSBhbmQgaGVscCBrZWVwIHlvdXJzZWxmIHNhbmUuIApEb24gZ28gdG8gSlIgUHViIG9yIGVsc2UgeW91IGdldCBlYm9sYSB2aXJ1cy4gT2ZmIGNvbG9yIHJlbWFyayBhYm91dCBkZWFkYmVhdCBFU0wgLyBTZXhwYXRzLiBCbGFoIGJsYWggYmxhaC4gClRoZWlyIGNhbXBhaWduIGhhcyBjZW50cmVkIG9uIGEgImNyaXNpcyIgaW4gdGhlIHN0YXRlJ3MgcHVibGljIGhlYWx0aCBzeXN0ZW0sIGFuZCBhIGJvbGQgcHJvbWlzZSB0byBwdWxsIHBva2VyIG1hY2hpbmVzIGZyb20gVGFzbWFuaWFuIHB1YnMgYW5kIGNsdWJzIGJ5IDIwMjMuCkEgZ2FtZSBvZiB2aWRlbyBwb2tlciBiZWdpbnMgd2hlbiBhIHBsYXllciBpbnNlcnRzIG1vbmV5IG9yIHRpY2tldCBpbnRvIGEgdmlkZW8gcG9rZXIgbWFjaGluZSBhcyBhIGJldCBvZiBvbmUgb3IgbW9yZSBjcmVkaXRzLiAKVGhlc2UgZmxhdm91cnMgaW5jbHVkZSBzYWx0IGFuZCB2aW5lZ2FyICwgY2hlZXNlIChtb3N0IGxpa2VseSBiYXNlZCBvbiBSdW1pIGNoZWVzZSBhbmQgdGhlIG1vc3QgcG9wdWxhciBmbGF2b3VyKSwgc2Vhc29uZWQgY2hlZXNlLCB0b21hdG8gLCBrZWJhYiBvbiBjaGFyY29hbCAsIGFuZCBjaGlsaSBhbmQgbGVtb24gLiAKQWNjb3JkaW5nIHRvIEFsZXggQmVyZW5zb24gZnJvbSBKb2UgUm9nYW5zIHBvZGNhc3QsIGhlIHNheXMgd2VlZCBjYW4gYWxzbyB0cmlnZ2VyIHZpb2xlbnQgYmVoYXZpb3IgaW4gc29tZSBwZW9wbGUuIEVtcGhhc2lzIG9uIHNvbWUuIFRoZXNlIHBlb3BsZSB3aG8gcmVhY3QgdG8gd2VlZCB0aGlzIHdheSwgZ2V0IHBzeWNob3NpcyBhbmQgcGFyYW5vaWEgdG8gdGhlIHBvaW50IHRoZXkgYmVsaWV2ZSBmcmllbmRzIGFuZCBmYW1pbHkgYXJlIHBsb3R0aW5nIHRvIGtpbGwgdGhlbSAoYW4gZXhhbXBsZSB0YWtlbiBzdHJhaWdodCBmcm9tIHRoZSBwb2RjYXN0KSAuIApBbmQgbXkgZmVldCB3b24ndCBodXJ0LldlIGFsc28gYWx3YXlzIGRvIGRvbmF0aW9ucyB0byBvdXIgY293b3JrZXJzIGluIG5lZWQsIGFuZCB2b2x1bnRlZXIgZXZlbnRzIGZvciB0aGUgY29tbXVuaXR5IHdlIHJlc2lkZSBpbi4gCkl0IHdhcyBzdHVjayBpbiBhIGJhY2sgaGFsbHdheSBhd2F5IGZyb20gdGhlIHJlc3Qgb2YgdGhlIGNhc2luby4gCkl0IGhhcmQgdG8gc2F5IGZyb20gdGhlIHBpY3R1cmVzIGhvdyBtdWNoIHdvbiBoYXMgYmVlbiBkb25lIG9uIHRoZSBuZWNrLCBzbyBpdCBhIGJpdCBoYXJkIHRvIHNheSBob3cgZGlmZmljdWx0IGl0IHdpbGwgYmUuIElmIHRoZSBuZWNrIGlzIHJlYWR5IHRvIGdsdWUsIGl0IHNob3VsZCBiZSBtYW5hZ2VhYmxlLCBidXQgaWYgeW91IGhhdmUgdG8gZG8gdGhlIHdob2xlIG5lY2sgc2V0LiB3ZWxsLCBnZXQgcmVhZHkgZm9yIGFuIGFkdmVudHVyZS4KTmljb2xlIGhhZCBoZXIgZ3JlYXRlc3QgY29tbWVyY2lhbCBzdWNjZXNzIGR1cmluZyB0aGUgMjAwMHMgYXMgbGVhZCBzaW5nZXIgb2YgdGhlIFB1c3N5IENhdCBEb2xscy4gU2hlIGhhZCBzaXggaGl0cyBvbiB0aGUgeWVhciBlbmQgY2hhcnRzIHdpdGggIkRvbid0IENoYSIsIGZlYXR1cmluZyBCdXN0YSBSaHltZXMsIGluIDIwMDUsICJCdXR0b25zIiwgIkJlZXAiIGFuZCAiU3RpY2t3aXR1IiBpbiAyMDA2LCAiV2hlbiBJIEdyb3cgVXAiIGluIDIwMDgsIGFuZCAiSSBIYXRlIFRoaXMgUGFydCIgaW4gMjAwOS4gQmVmb3JlIHNoZSB3YXMgbGVhZCBzaW5nZXIgb2YgdGhlIFBDRCBzaGUgd2FzIGxlYWQgc2luZ2VyIG9mIHRoZSBzaG9ydCBsaXZlZCBnaXJsIGdyb3VwIEVkZW4ncyBDcnVzaCBpbiAyMDAxLi4gClNvIGhlIG5vdCByZXNwb25zaWJsZSBmb3IgaGlzIGFjdGlvbnMsIGhlIGp1c3QgbGlrZSB0aGlzIQpJIG5vdCBzdXJlIHlvdXIgbWF0aCBmb3IgaW50ZXJuc2hpcCBudW1iZXJzIG1ha2VzIHNlbnNlLiAKTGVkIGJ5IEphbmUgV2VsY2gsIERpcmVjdG9yLCBIUiBBZHZpc29yeSwgdGhlIHBvcnRmb2xpbyBncm91cHMgdGhlIEhSIFNlcnZpY2UgQ2VudHJlLCBIUiBBZHZpc29ycyBhbmQgd29ya3BsYWNlIHJlbGF0aW9ucywgaW5jbHVkaW5nIGVtcGxveW1lbnQgcG9saWN5LCBpbiBvcmRlciB0byBwcm92aWRlIGEgY29vcmRpbmF0ZWQgSFIgQWR2aXNvcnkgc2VydmljZSB0byB0aGUgVW5pdmVyc2l0eS4gVGhlIEhSIEFkdmlzb3J5IHBvcnRmb2xpbyBwcm92aWRlcyBzdXBwb3J0IHRvIHBlb3BsZSBsZWFkZXJzIGFuZCBzdGFmZiBhY3Jvc3MgYSByYW5nZSBvZiBpbnF1aXJpZXMgaW5jbHVkaW5nIHNlbGYgc2VydmljZSBzdXBwb3J0LCBzcGVjaWZpZWQgcGVyc29uYWwgJ2hvdyB0bycgcXVlc3Rpb25zLCBhbmQgdHJpYWdpbmcgb2YgaW5xdWlyaWVzIHdoZXJlIHNwZWNpZmljIEhSIGV4cGVydGlzZSBpcyByZXF1aXJlZC4gSXQgYWxzbyBwcm92aWRlcyBzdXBwb3J0IG9uIGVtcGxveWVlIHJlbGF0aW9ucyBhbmQgd29ya3BsYWNlIHJlbGF0aW9ucyBpc3N1ZXMgYW5kIGluZm9ybWFsIGFuZCBmb3JtYWwgY2FzZSBtYW5hZ2VtZW50LiAKTmFuaSB1bmQgVGF0YSBzaW5kIG5pY2h0IGRhLCBhYmVyIGljaCBiaW4gZXMgYXVmIGRlbSBIb2Ygdm9uIE11dHRlciBIZXJtaW5pYS4gCkhhY2UgMTAgaG9yYXMgLiAKV2VsbCwgSmVzcyBhbmQgSSB3ZXJlIHByZXR0eSBzdXJlIHdlIHdlcmUgZ29pbmcgdG8gYmUgc29sZCBvbiB0aGUgYmxhY2sgbWFya2V0IHNvIHdlIHJlZnVzZWQuIApTYXlpbmcgdGhlcmUgYXJlIHRvbyBtYW55IFRpdGFucyBpcyBsaWtlIHNheWluZyB0aGVyZSBhcmUgdG9vIG1hbnkgZnJpZ2F0ZXMsIHRoZXkgYXJlIGEgc2hpcCBpbiB0aGUgZ2FtZSBhbmQgdGhlIHBsYXllcnMgYXJlIHRoZSBvbmVzIHdobyBhcmUgYnVpbGRpbmcgdGhlbS4gSWYgd2Ugc2F5IHJlbW92ZSBUaXRhbnMgb3IgZGVjcmVhc2UgdGhlIGFtb3VudCBvZiB0aGVtIGluIHRoZSBnYW1lIHdoaWNoIHBsYXllcnMgaGF2ZSB0byBsb3NlIHRoZSBjaGFuY2Ugb2YgZmx5aW5nIG9uZT8gV2hvIGdldHMgdG8gY2hvb3NlPyBBbmQgd291bGQgd2Ugc3RvcCB0aGVyZSwgaWYgdGhlIGFtb3VudCBvZiBUaXRhbnMgYWxsb3dlZCBpbiBnYW1lIHdhcyBuZXJmZWQgb3IgZGVjcmVhc2VkIGluIHNvbWUgd2F5IHdoaWNoIHdvdWxkIGJlIHRoZSBuZXh0IHNoaXAgdG8gaGF2ZSB0aGF0IGhhcHBlbiB0bywgU3VwZXJzLCBjYXBzIGluIGdlbmVyYWwsIEhBQ3MsIENvbW1hbmQgRGVzdHJveWVycyBvciBhbnkgRk9UTSB0aGF0IHBsYXllcnMgZG9uIGxpa2UuIDIgcG9pbnRzICBzdWJtaXR0ZWQgMyBkYXlzIGFnby4gClJ1bGUgMjogVW5pbnNwaXJlZCwgbGFja2luZyBpbiBjb250ZXh0LCBsaXRlcmFsIHNoaXRwb3N0LCBvdmVybHkgdnVsZ2FyIGFuZCBnbG9yaWZ5aW5nIGlsbGVnYWwgYWN0aXZpdGllcyBwb3N0cyBtYXkgYmUgcmVtb3ZlZCBhdCBtb2RzIGRpc2NyZXRpb24KUGVvcGxlIGhhZCBxdWVzdGlvbnMgYXMgdG8gaG93IGhlIGhvbGQgdXAgYWdhaW5zdCBVRkMgbGV2ZWwgY29tcGV0aXRpb24gYW5kIHRoaXMgZmlnaHQgZGlkbiByZWFsbHkgZG8gbXVjaCB0byBhZGRyZXNzIHRoZW0gaW1vLiBBbGwgdGhpcyBmaWdodCByZWFsbHkgbGV0IHVzIGtub3cgaXMgMSkgaGUgaGFzIGEgZnVja2luZyBHUkFOSVRFIGNoaW4gYW5kIDIpIGhlIHV0dGVybHkgYW5kIGNvbXBsZXRlbHkgZnVja2VkIGlmIGhlIGNhbiBnZXQgYSB0YWtlZG93bi4KVGhhbmtzIGZvciBnZXR0aW5nIG1lIHllbGxlZCBhdCBhbmQgYWxsb3dpbmcgdGhlIGN1c3RvbWVyIHRvIGNvbnRpbnVlIGluIHRoZWlyIGRlbHVzaW9uIG9mIHRoaW5raW5nIHRoYXQgSSB3YXMgdGhlIHVucmVhc29uYWJsZSBqZXJrLi4gCldyb25nIGFudGhlbSBwbGF5ZWQgYmVmb3JlIENvcGEgQW1lcmljYSBtYXRjaApUaGUgeW91bmcgbWFuIHdhcyBleHRyZW1lbHkgZXhjaXRlZCB0aGUgZmlyc3QgdGltZSBoZSB2aXNpdGVkIHRoZXJlIGJlY2F1c2UgdGhlIGJ1c2luZXNzbWFuIGhhcyBzZXZlcmFsIGJhcm5zIHdoZXJlIGhlIGlzIHdhcmVob3VzaW5nIGVub3VnaCBmaXJlYXJtcyBhbmQgYW1tdW5pdGlvbiB0byBzdGFydCB0aGUgbmV4dCBDaXZpbCBXYXIuIApUYWtoYW5hICAxIHBvaW50ICBzdWJtaXR0ZWQgMiBkYXlzIGFnbwpBZnRlciBhIHdoaWxlLCBJIG5vdGljZWQgdGhhdCB0aGUgc2t5IHdhcyBncm93aW5nIGRhcmtlciwgbm90IGxpZ2h0ZXIuIEkgcmVhbGl6ZWQsIHRvbywgdGhhdCBJIHdhcyBmYWNpbmcgV2VzdC4gVGhlIHN1biB3YXMgZ29pbmcgZG93bi4KKFByaXZhY3kgUG9saWN5KUdvb2dsZSBNYXBzU29tZSBhcnRpY2xlcyBoYXZlIEdvb2dsZSBNYXBzIGVtYmVkZGVkIGluIHRoZW0uIApUaGV5IHRoaW5rIHRoaXMgc3R1ZmYgZGlzZ3VzdHMgbWUuIE9yIHRoZXkgdGhpbmsgSSBzY29mZmluZyBhdCBpdC4gQnV0IHJlYWxseSBJIGp1c3QgZmVlbCBsaWtlIHRoaXMgc2VydmljZSBmZWVscyBsaWtlIGEgcm91dGluZS4gClNvIHRoaXMgd2FzIGFsd2F5cyB0aGUgcGxhbiwgcGxvdHRlZCB0aHJlZSBtb3ZlcyBhaGVhZCBieSB0aGUgY2xldmVyIEFtZXJpY2FuIHByZXNpZGVudCwgd2hvIHdhcyBvbmx5IHByZXRlbmRpbmcgdG8gYmUgaW5kZWNpc2l2ZSwgcXVpeG90aWMgYW5kIG91dCBvZiBoaXMgZGVwdGguIAooUHJpdmFjeSBQb2xpY3kpQXBwTmV4dXNUaGlzIGlzIGFuIGFkIG5ldHdvcmsuIChQcml2YWN5IFBvbGljeSlPcGVueFRoaXMgaXMgYW4gYWQgbmV0d29yay4gKFByaXZhY3kgUG9saWN5KVJ1Ymljb24gUHJvamVjdFRoaXMgaXMgYW4gYWQgbmV0d29yay4gCiJFdmVyeSB0aW1lIHRoZXJlJ3MgYSBzdGluZyBvcGVyYXRpb24gdG8gZ28gbG9vayBmb3IgaXQsIGl0J3MgdGhlcmUuIEFsd2F5cy4gSWYgeW91IGhhdmUgYSBob3RlbCBpbiB5b3VyIGp1cmlzZGljdGlvbiwgaXQgaXMgdGhlcmUsIiBzaGUgc2FpZC4iSXQganVzdCB0YWtlcyBrbm93aW5nIHdoYXQgdGhlIHNpZ25zIGFyZSB0byBsb29rIGZvci4iCkxpdmUgYWN0aW9uIHBsYXllcnMgbWFrZSBtb3JlIGNhbGxpbmcgbWlzdGFrZXMgdGhhbiBiZXR0aW5nIG9yIGZvbGRpbmcgbWlzdGFrZXMsIHNlZSBmbG9wcyBkZWVwIGluIHBvc2l0aW9uIG5vdCBnZXQgc3R1Y2sgc3RhY2tpbmcgb2ZmIGFueSBmbG9wIHlvdSBwYWlyIHdpdGggYW4gb2Z0ZW4gZG9taW5hdGVkIGhhbmQuIApCdXQgdGhlIHN0YXRlIGZvY3VzZXMgbXVjaCBtb3JlIG9mIGl0cyByZXNvdXJjZXMgb24gdGhlIHRyYWZmaWNraW5nIG9mIG1pbm9ycyBhbmQsIGFib3ZlIGFsbCwgdGhlIHRyYWZmaWNrZXJzIHRoZW1zZWx2ZXMuLiAKU3VyZSwgJDQwMCwwMDAgZ29lcyBhIGxvdCBmdXJ0aGVyIGluIEF0bGFudGEgdGhhbiBpdCBkb2VzIGluIE5ZQywgYnV0IHlvdSBhcmUgc3RpbGwgZmFpcmx5IHJpY2ggaW4gYm90aCBjaXRpZXMuIFRoZSBMaWJlcnRhcmlhbiBQYXJ0eSBzcGVjaWZpY2FsbHkgaGFzIGEgc3VicmVkZGl0IHRoYXQgdGhleSBzcGVjaWZpY2FsbHkgc2V0IHVwIGZvciB0aGVtc2VsdmVzLCBhbmQgdGhlIG9ubHkgcmVhc29uIEkgc3VnZ2VzdGVkIGhlIGdvIHRoZXJlIHdhcyBiZWNhdXNlIGhlIHN1Z2dlc3RlZCBJIGdvIHRvIHIvYW5hcmNoeS4gClh4cnVydXh4ICAyIHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ28KUG9rZXJCb3RQcm9ncmFtbWVyIHUKRWFzdGVybiBFdXJvcGUgbGlrZSBDcm9hdGlhLCBIdW5nYXJ5LCBQb2xhbmQgZXRjLiBBdm9pZCBpZiB5b3UgY2FuLiAKVGhlIGxhdGUgd2FzIGEgZ3JlYXQgdGltZSB0byB3b3JrIGluIExhcyBWZWdhcywgQ2hyaXN0b2ZmIHNheXMuIApSZXdib3NzIHUKRGllbnN0YWcsIDE2LiBEZXplbWJlciAyMDE0LCAyMCBVaHIgVm9yd2llZ2VuZCBkZXV0c2Noc3ByYWNoaWcKTGUgcGFpbiBlc3QgcG91ciBtb2kgdW5lIHBhc3Npb24gcGVyc29ubmVsbGUgZXQgcHJvZmVzc2lvbm5lbGxlIGV0IGonYWkgYmVhdWNvdXAgIGNyaXJlIGRlc3N1cyBtYWlzIHBsdXMgaidhY2N1bXVsZSBkJ2lkZXMgZXQgZGUgcmZsZXhpb25zLCBwbHVzIGNlbGEgc2UgY29tcGxpcXVlIGV0IG1vaW5zIGonY3JpcyAhIEFsb3JzLCBlbiBhdHRlbmRhbnQsIGonYWkgZXUgbGUgYm9uaGV1ciBkJ2NvdXRlciBUaGllcnJ5IERlbGFicmUgcmFjb250ZXIgYXZlYyBiZWF1Y291cCBkJ21vdGlvbiBzYSBwbG9uZ2UgZGFucyBsJ3VuaXZlcnMgZHUgcGFpbiwgdG91dCBjZSBxdSdpbCBsdWkgZG9ubmUgZXQgdG91dCBjZSBxdSdpbCByZW9pdCBlbiByZXRvdXIuIApDYW4gYmUgc28gbXVjaCBoeXBlLCBidXQgcGVvcGxlIG5lZWQgdG8gYmUgYXdhcmUgYWxsIHRoZSBpbmZvcm1hdGlvbiBvbiB0aGUgaW50ZXJuZXQgaXMgbm90IGNvbWluZyBmcm9tIGV4cGVydHMuIApDb21wb3VuZGluZyBhbGwgdGhpcyBpcyB0aGUgZGlnaXRhbCBtYXJrZXRwbGFjZSB3aGVyZSB0aGVyZSBhbiBvdmVyd2hlbG1pbmcgY2hvaWNlIG9mIGdhbWVzLCBib3RoIG5ldyBhbmQgb2xkLCBmb3IgdmFyeWluZyBwcmljZXMuCkkgc2Vjb25kIDIrMi4gSWYgeW91IGRvbid0IGdldCBhbnkgYW5zd2VycyB0aGVyZSAoeW91IHdpbGwsIHRob3VnaCksIHRoZW4gc3RpY2sgdG8gdGhlIG5hbWUgYnJhbmQgY2FzaW5vcyBsaWtlIEhhcnJhaHMsIGV0Yy4KSGFkIHRoZXkgYmVoYXZlZCBiZXR0ZXIgSSB0aGluayBJIGJlIGFibGUgdG8gbXVzdGVyIHVwIGEgYml0IG9mIHN5bXBhdGh5IGZvciB0aGVpciBwb3NpdGlvbiByaWdodCBub3csIGJ1dCwgdGhlaXIgcnVkZSBhcnJvZ2FuY2UgYW5kIHRoZSBvbmdvaW5nLCBicnV0YWwgY2hhcmFjdGVyIGFzc2Fzc2luYXRpb24gb2YgWmVsbG5lciwgQXZlcnkgYW5kIGhpcyBmYW1pbHksIGhhcyBzaG93biB3aGF0IHRoZXkgYXJlLiBWZXJ5IGJhZCBwZW9wbGUsIGltby4KUGVvcGxlIGFyZSBoaWdobHkgdXNpbmcgdGhlbS4gCllvdSBtYXkgY2xpY2sgdGhlIGxpbmsgYmVsb3cgdG8gZG93bmxvYWQgeW91ciBmaWxlIC4gCkl0J3MgYmVlbiB0b28gbG9uZyBmb3IgbWUgdG8gcmVtZW1iZXIgdGltZXMuIAoyIG92ZXJjYXJkczogSWYgeW91J3JlIGhvbGRpbmcgMiBjYXJkcywgc2F5IGFuIGFjZSBhbmQgYSBxdWVlbiwgdGhhdCBhcmUgaGlnaGVyIHRoYW4gYW55IG9mIHRoZSAzIGZsb3AgY2FyZHMsIHlvdSBoYXZlIDYgb3V0czogdGhlIHJlbWFpbmluZyAzIGFjZXMgYW5kIHF1ZWVucy4KQWJvdXQgU2Nvb3AKQWx0aG91Z2ggY2hpbGRob29kIG9iZXNpdHkgcmF0ZXMgaGF2ZSBzdGFiaWxpemVkIGluIHJlY2VudCB5ZWFycywgMSBpbiA2IEFtZXJpY2FuIGNoaWxkcmVuIGFyZSBzdGlsbCBvYmVzZSBhbmQgMS8zIGFyZSBvdmVyd2VpZ2h0IG9yIG9iZXNlLiBUaGUgZXZpZGVuY2UgaXMgc3RpbGwgb3V0IG9uIG92ZXJ3ZWlnaHQgY2hpbGRyZW4gIHNpbmNlIGNodWJieSBtaWdodCBiZSB0aGUgbmV3IGhlYWx0aHkgYWNjb3JkaW5nIHRvIHNvbWUgcmVjZW50IHJlc2VhcmNoICBvYmVzZSBjaGlsZHJlbiB3aWxsIHByb2JhYmx5IGhhdmUgc2hvcnRlciBsaWZlIHNwYW5zIHRoYW4gdGhlaXIgcGFyZW50cyBhbmQgYSBsaWZlIHBsYWd1ZWQgd2l0aCBkaXNlYXNlLiAKTGFzdCB5ZWFyIHdoZW4gSSB3YXMgd29ya2luZyBhcyBhIGJvdW5jZXIgYSBicmF3bCBicm9rZSBvdXQuIDQgYm91bmNlcnMgaGFkIHRvIGhhbmRsZSAxNSBkcnVuayBhc3Nob2xlcy4gV2UgY2FsbGVkIHRoZSBwb2xpY2UsIGFuZCBkZXNwaXRlIHRoZSBzdGF0aW9uIGJlaW5nIG9ubHkgdHdvIGJsb2NrcyBhd2F5LCBhbmQga25vd2luZyB0aGF0IHRoZXJlIHdlcmUgYWx3YXlzIHRocmVlIHNxdWFkIGNhcnMgcGF0cm9sbGluZyBpbiBhIGZvdXIgYmxvY2sgcmFkaXVzIHNpbmNlIGl0J3MgdGhlIGJ1c2llc3QgcGFydHkgc3RyZWV0IGluIHRvd24sIGl0IHRvb2sgdGhlbSA0NSBtaW51dGVzIHRvIHNob3cgdXAgYW5kIGdvICJPaCwgd2h5IGlzbid0IGFueXRoaW5nIGhhcHBlbmluZyBhbnltb3JlIiBhdCBhIGJhciB0aGF0IGhhcyBiZWVuIHNob3QgdXAgbXVsdGlwbGUgdGltZXMgaW4gdGhlIHBhc3QuIFRoZW4gdGhleSBhY3RlZCBtYWQgYXQgdXMgZm9yIG5vdCBpbGxlZ2FsbHkgZGV0YWluaW5nIHBlb3BsZSB3aG8gaGFkIGp1c3QgZ2l2ZW4gdXMgYmxhY2sgZXllcyBhbmQgb25lIGd1eSBhIGJyb2tlbiByaWIuIEFuZCBmb3IgY29udGV4dCwgdGhlIG93bmVyIG9mIHNhaWQgYmFyIHdhcyBhdCBvZGRzIHdpdGggYSBuZWlnaGJvcmluZyBidXNpbmVzcyBvd25lciBvdmVyIG5vaXNlIGNvbXBsYWludHMuIFRoZSBwb2xpY2UgcmVzcG9uZGVkIHdpdGhpbiBmaXZlIG1pbnV0ZXMgb2YgZXZlcnkgc2luZ2xlIG5vaXNlIGNvbXBsYWludCBjYWxsIGJ1dCB0b29rIDMvNCBvZiBhbiBob3VyIGZvciBhIHZpb2xlbnQgZmlnaHQuClRoZSBpbmF1Z3VyYWwgSm9obiBhbmQgS2ltYmVybHkgQ2xhcmsgUnVuIHdpbGwgdGFrZSBvZmYgZnJvbSB0aGUgQmFyYmFyaWFucyBjbHViaG91c2UgYXQgMTUyNzAgQ2FzcyBUb3duc2hpcCBSb2FkIDIxNSBhdCBub29uIFNhdHVyZGF5LiBBZnRlciB0aGUgcnVuLCBjaGlja2VuIGRpbm5lcnMgd2lsbCBiZSBzZXJ2ZWQsIGEgc2lsZW50IGF1Y3Rpb24gd2lsbCBiZSBoZWxkIGFuZCBvbmUgQXJjYWRpYSBmYW1pbHkgd2lsbCByZWNlaXZlIGEgZG9uYXRpb24gaW4gdGhlIG5hbWUgb2YgdGhlIG1vdG9yY3ljbGUgZW50aHVzaWFzdHMgd2hvIGRpZWQgTWF5IDE0LCAyMDE1Li4gCkl0IGlzIGdvb2QuIFRoZSBwZW9wbGUgd2hvIGRpcmVjdCB0aGUgZnVuZHMgYXJlIGV4cGVjdGVkIHRvIHRha2UgYSBzbWFsbCBwZXJjZW50YWdlIG9mIHRoZSBwcm9maXRzIGZyb20gdGhpcyBlZmZvcnQuIApJdCBncmluZGluZy4gSXQgdG9ucyBvZiBob3Vycy4gCk5UQSB5b3UgYXJlIHRoZSBEQUQuIAoxMC41IiBpUGFkIFBybzogQWN0dWFsbHkgbm8gY29tcGxhaW50cyBoZXJlLiBJIHJlYWxseSB3YW50IHRoZSBuZXcgaVBhZCBQcm8sIGJ1dCBJJ20gZ29pbmcgdG8gaG9sZCBvdXQuCldhcnJlbi4gTXIuIApBbHNvIFNtYXJ0IGlzIGp1c3QgYmlnZ2VyIGFuZCBzdHJvbmdlciB0aGFuIEJydWNlIHdoaWNoIGhlbHBzIG9uIGRlZmVuc2UuSSB0aGluayBCcnVjZSBpcyBtb3JlIG9mIGEgd2lyeSwgYW5ub3lpbmcgZGVmZW5zaXZlIHNwZWNpYWxpc3QuIE1vcmUgbGlrZSBhIFRvbnkgQWxsZW4sIEFuZHJlIFJvYmVyc29uIGZvciBndWFyZHMuWmVpcmFtc3kgIDMgcG9pbnRzICBzdWJtaXR0ZWQgNSBkYXlzIGFnb0dlbmVyYWwgY29uc2Vuc3VzIHNlZW1zIHRvIGJlIHRoYXQgd2UgY2FuIGdldCA2dGggaWYgd2UgY29udGludWUgcGxheWluZyBoYXJkIGJ1dCB0aGF0IGl0IHdpbGwgYWxzbyBiZSBhZ2FpbnN0IGFuIG9wcG9uZW50IHdlIGxpa2UgbGVzcyB0aGFuIHdlIGNvdWxkIGdldCB3aXRoIHRoZSA3dGggc3BvdCwgaXMgdGhhdCByaWdodD9XaGF0IGRvIHlvdSBhbGwgdGhpbmsgd2Ugc2hvdWxkIGRvPyBJIHNheSBwbGF5IGFzIGJlc3Qgd2UgY2FuIGJlY2F1c2UgaXQgZ2l2ZSB1cyBhIGxpZnQgZm9yIG5leHQgeWVhci4gClRoaXMgY2hpbGQgYnJpbmdzIG1lIHRvIG15IGtuZWVzLiAKVGhlIHJlYXNvbiBxdWljayB3cmFwcyBkb24gdXN1YWxseSBzdXBwb3J0IHRoZSB3cmlzdCB3ZWxsIGVub3VnaCBpcyBiZWNhdXNlIG9mIHRoZWlyIHNldCBmb3JtIGZhY3Rvci4gSWYgeW91IGhhdmUgYmlnZ2VyIHdyaXN0cyB5b3UgbmVlZCB0byB3cmFwIG9uZSBvciB0d28gbW9yZSBsb29wcywgaWYgeW91IGhhdmUgdGhpbiB3cmlzdHMsIGxlc3MuIEFuZCBpdCBlYXNpZXIgdG8gYWRqdXN0IHRoZSB0aWdodG5lc3Mgb2YgaGFuZHdyYXBzLCBhIGxvdCBvZiBxdWlja3dyYXBzIGFyZSBzbGlwIG9uIGFuZCBvbmx5IHZlbGNybyBhdCB0aGUgd3Jpc3QuCmdldHRpbmcgYSBsb29rIGF0IHRoZSB0cnVlIHN0YXRlIG9mIENhbmFkYSdzIGVjb25vbXkKVGhlIDEwMDAgUGF1bHNvbiBUb3BoYXQgYW5kIENhbmUgUG9rZXIgQ2hpcHMgYXJlIHNwZWNpZmljYWxseSBkZXNpZ25lZCB3aXRoIGFuIGV4Y2x1c2l2ZSBpbmxheSB0aGF0IGlzIG1hZGUgdXAgb2YgYSBjb2xvcmZ1bCBhcnJheS4gSGVjaywgd2hlbiB3ZSBmaXJzdCBwdXJjaGFzZWQgc2V0cyBmb3IgbG9jYWwgY2h1cmNoIGV2ZW50cyB3ZSBkaWRuJ3QgZXZlbiBrbm93IHRoaXMgYmVuZWZpdCB3YXMgaW5jbHVkZWQgaW4gdGhlIGNoaXBzLiBUaGVuIHdoZW4gdGhlIHZvbHVudGVlcnMgb3BlbmVkIHRoZSBjYXNlcyB3ZSB3ZXJlIGFsbCBleHRyZW1lbHkgZXhjaXRlZCBhYm91dCB0aGUgcHVyY2hhc2UuIFdlIHVuZGVyc3RhbmQgdGhhdCB0aGUgY2hpcHMgd2UgYm91Z2h0IHdvdWxkIHN0YW5kIHVwIHRvIGNvdW50bGVzcyBob3VycyBvZiBwb2tlciBwbGF5LCBidXQgdGhlIGJlbmVmaXQgYW5kIGNvbXBsaW1lbnRzIGNhbWUgZnJvbSB0aGUgcGF0cm9ucy4KRm9yIGRlY2FkZXMsIEl0YWx5IHdhcyB3cmFja2VkIGJ5IGJsb29keSB2aW9sZW5jZSBjYWxsZWQgInRoZSB5ZWFycyBvZiBsZWFkIi4uIApDb252ZXJzaW9uIFRyYWNraW5nIFBpeGVsc1dlIG1heSB1c2UgY29udmVyc2lvbiB0cmFja2luZyBwaXhlbHMgZnJvbSBhZHZlcnRpc2luZyBuZXR3b3JrcyBzdWNoIGFzIEdvb2dsZSBBZFdvcmRzLCBCaW5nIEFkcywgYW5kIEZhY2Vib29rIGluIG9yZGVyIHRvIGlkZW50aWZ5IHdoZW4gYW4gYWR2ZXJ0aXNlbWVudCBoYXMgc3VjY2Vzc2Z1bGx5IHJlc3VsdGVkIGluIHRoZSBkZXNpcmVkIGFjdGlvbiwgc3VjaCBhcyBzaWduaW5nIHVwIGZvciB0aGUgSHViUGFnZXMgU2VydmljZSBvciBwdWJsaXNoaW5nIGFuIGFydGljbGUgb24gdGhlIEh1YlBhZ2VzIFNlcnZpY2UuIChQcml2YWN5IFBvbGljeSlDb21zY29yZUNvbVNjb3JlIGlzIGEgbWVkaWEgbWVhc3VyZW1lbnQgYW5kIGFuYWx5dGljcyBjb21wYW55IHByb3ZpZGluZyBtYXJrZXRpbmcgZGF0YSBhbmQgYW5hbHl0aWNzIHRvIGVudGVycHJpc2VzLCBtZWRpYSBhbmQgYWR2ZXJ0aXNpbmcgYWdlbmNpZXMsIGFuZCBwdWJsaXNoZXJzLiBOb24gY29uc2VudCB3aWxsIHJlc3VsdCBpbiBDb21TY29yZSBvbmx5IHByb2Nlc3Npbmcgb2JmdXNjYXRlZCBwZXJzb25hbCBkYXRhLiAKSSBoYXZlIGEgcHJldmlvdXMgZGVncmVlIGluIG51dHJpdGlvbiBhbmQganVzdCBhYm91dCB0byBmaW5pc2ggbXkgbWVkaWNhbCBkZWdyZWUsIHNvIEkgbm90IGp1c3QgYW4gaW50ZXJuZXQgaG9iYnlpc3Qgd2l0aCB0aGlzIHN0dWZmLiAKVGhleSBwaXNzIHNvbWUgcGVvcGxlIG9mZiB3aXRoIHRoZWlyIGRlc2lnbiBkZWNpc2lvbnMsIHN0aWxsIG9uIHRoZW0uIFRoZXkgd2FudCB1cyB0byBwbGF5IGFuZCBzcGVuZCBtb25leSwgdGhlbiB0aGUgZXhwZXJpZW5jZSB0aGV5IGNyYWZ0IHNob3VsZCBiZSBlbmdhZ2luZy4uIApNb3Jlb3ZlciwgdGhleSBoYXZlIG1hc3NpdmUgY29tbWFuZCBvZiB0aGUgaW5mb3JtYXRpb24gbWFya2V0LldlIGhhdmUgZ290IHRvIGZpbmQgYSB3YXkgdG8gaGFtcGVyIHRoZWlyIGluZmx1ZW5jZSBvdmVyIHB1YmxpYyBvcGluaW9uLCBhbmQgdGhlIGVmZm9ydHMgb2YgYWxsIHNsZWF6ZSBtYWNoaW5lcyBsaWtlIHRoZW0gICB3aGlsZSBwcmVzZXJ2aW5nIGZyZWUgc3BlZWNoLlRoYXQgd2lsbCBiZSB0b3VnaCwgYnV0IGl0J3Mgc2ltcGx5IG5vdCBuZWdvdGlhYmxlLiAKRm9sbG93aW5nIG1hcHMgYXBwZWFyZWQgaW4gYSB0d28gcGFnZSBzcHJlYWQsIGRldGFpbGluZyB3YXlzIGluIHdoaWNoIHRoZSBBeGlzIHBvd2VycyBjb3VsZCBjb21iaW5lIHRoZWlyIGVmZm9ydHMsIGZvY3VzIG9uIEFtZXJpY2EsIGFuZCB0YWtlIG92ZXIgdGhlIGNvdW50cnkuIApUaGUgIkJhcmJhcmlhbnMiIGF0IFJKUiBOYWJpc2NvIHdlcmVuJ3QgY29uY2VybmVkIHdpdGggYW55Ym9keSBvciBhbnl0aGluZyBidXQgdGhlIGFsbWlnaHR5IGRvbGxhciwgYW5kIHRoZXkgd2VyZSBhZGRpY3RlZCB0byBzdGlycmluZyB0aGluZ3MgdXAuIApUaGVyZSBpcyBzbyBtdWNoIG9mIGxpZmUgeW91IGhhdmVuJ3QgZXhwZXJpZW5jZWQgeWV0LCBhbmQgaXQgdHJ1bHkgZ2V0cyBiZXR0ZXIgYXMgeW91IGdldCBvbGRlci4gSSBrbm93IGl0IHJlYWxseSBkb2Vzbid0IGZlZWwgdGhhdCB3YXksIHNvIGlmIHlvdSBuZWVkIHRvIHRhbGsgdG8gc29tZW9uZSB3aGVuIHlvdSBmZWVsIHRoYXQgd2F5LCBmZWVsIGZyZWUgdG8gcG0gbWUuLiAKU28gd2hhdCB3ZSBoYXZlIGhlcmUgaXMgWnVsZmlxYXIgTWlyemEsIG90aGVyd2lzZSBhIHBvbGl0aWNhbCBub24gZW50aXR5LCBiZWNvbWUgYSBuYXRpb25hbCBmaWd1cmUgYmFzZWQgb24gaGlzIHNwZWNpZmljIHRhcmdldGluZyBvZiBhbiBldGhuaWMgZ3JvdXAgYW5kIHRoZSBsYXJnZXN0IHJlcHJlc2VudGF0aXZlIHBvbGl0aWNhbCBwYXJ0eSBmb3IgdGhhdCBncm91cC4gV2hhdCdzIHRoZSBwdW5jaGxpbmU/IFRoZSBtb3JlIHRoYXQgTW9oYWppcnMgYXJlIGRlbW9uaXNlZCBpbiB0aGUgcmVzdCBvZiB0aGUgY291bnRyeSwgdGhlIGNsb3NlciB0aGUgZW1icmFjZSBiZXR3ZWVuIHRoZW0gYW5kIHRoZSBNUU0gYmVjb21lcy4gQWZ0ZXIgYWxsLCB3aG8gZWxzZSB3aWxsIG1pZGRsZSAgYW5kIGxvd2VyIG1pZGRsZSBjbGFzcyBVcmR1IHNwZWFraW5nIEthcmFjaGlpdGVzIHR1cm4gdG8/IFRoZSBhcm15IHRoYXQgY29uZHVjdGVkIG9wZXJhdGlvbiBDbGVhbiB1cD8gVGhlIEltcmFuIEtoYW4gdGhhdCB1bmRlcm1pbmVkIEphdmVkIE1pYW5kYWQ/IFRoZSBQUFAgb2YgUHVra2EgUWlsYT8gVGhlIE11bmF3d2FyIEhhc3NhbiB0aGF0IGNhbid0IG9wZXJhdGUgd2l0aG91dCB0aGUgYmxlc3NpbmdzIG9mIHRoZSBKVUk/IEFzIHNvbWVvbmUgZmFtb3VzbHkgb25jZSBzYWlkLCAibG9sLiIuIApTbyBteSBhZHZpc2Ugd291bGQgYmUgdG8gZ28gZWFzeS4gCiJXb3JrIGhhcyBiZWVuIHJlYWxseSBnb29kIGFuZCB1bmRlcnN0YW5kaW5nLCIgaGUgc2FpZC4gIkknbSBlY3N0YXRpYyBbdGhhdCBJJ20gZmluaXNoZWRdLiBJIHRoaW5rIG9mIGFsbCB0aGUgbGF0ZSBuaWdodHMgYW5kIHRoZW4gb2ZmIHRvIHdvcmsgdGhlIG5leHQgZGF5LiBFdmVyeXRoaW5nIGhhcyBwYWlkIG9mZi4gIkkgdGhpbmsgSSdsbCB0YWtlIGEgeWVhciBvZmYgYW5kIGNvbWUgYmFjayBhbmQgZG8gYSBtYXN0ZXJzIGluIHByb2plY3QgbWFuYWdlbWVudC4iIFJlbmVlIEdvb3Nlbiwgd2hvIGhhcyBzdHVkaWVkdmlhIGRpc3RhbmNlLCBoYXMgbm93IHJlY2VpdmVkIGhlciBzZWNvbmQgbWFzdGVycyBkZWdyZWUgIGEgTWFzdGVycyBvZiBDbGluaWNhbCBQc3ljaG9sb2d5LiAKV2hvIGFyZSB0aGUgd29ybGQgZmFtb3VzIHBva2VyIHBsYXllcnMKQ29vbCBvbiBhIHdpcmUgcmFjay4gCkEgd29ybGQgY29tcGV0aXRpb24gdGhhdCBkcmF3cyBiaXRlIHNpemUgYXVkaWVuY2VzIGFyb3VuZCB0aGUgd29ybGQgaXMgdGhlIGhvbHkgZ3JhaWwgZm9yIG1vbmV5IG1lbiBpbiBzcG9ydC4gCldoZW4gSSBhY3R1YWxseSBhcHByb2FjaGVkIHRoZSBjYXIsIHRoZW4gc2xvd2VkIGRvd24uIFF1aWV0bHksIGdyYWNlZnVsbHkgd2Fsa2VkIHVwLCBvcGVuZWQgdGhlIGRvb3IgYW5kIHVtb3N0aWxhIGhpcyBmaWZ0aCBsb2NhdGlvbiBvbiB0aGUgbGVhdGhlciBwcm92aWRlIGZvciBjb21tdXRlciBmdW5kYW1lbnQsIGFuZCB0aGVuIGdyYWNlZnVsbHkgdHVybmluZyB0byB0aGUgc2Fsb24gc3VmZmVyZWQgbGVnLiAKU3Rvcm15IERhbmllbHMnIGxhd3llciBNaWNoYWVsIEF2ZW5hdHRpIHdhcyBvcmRlcmVkIE1vbmRheSB0byBmb3JrIG92ZXIgJDQuODUgbWlsbGlvbiBpbiBiYWNrIHBheSB0byBhbm90aGVyIGF0dG9ybmV5ICAgYXMgbmV3IHJlcG9ydHMgb2YgdGhlIFRydW1wIG5lbWVzaXMncyBsYXZpc2ggbGlmZXN0eWxlIHN1cmZhY2VkLgpJZiB5b3UgbGl2ZSBpbiB0aGUgVVNBIHlvdSBoYXZlIG9uZSBtb3JlIHJlYXNvbiB0byBjaG9vc2UgdGhpcyBncmVhdCB3ZWJzaXRlLiBUaGF0IGJlY2F1c2UgaXQgaXMgMTAwJSBsZWdhbCBpbiB0aGUgVW5pdGVkIFN0YXRlcyBhbmQgYWxsIFVTIHBsYXllcnMgY2FuIHBsYXkgcG9rZXIgdGhlcmUgd2l0aG91dCBhbnkgcmlzayBvZiBzdWRkZW4gYmFuLiBUaGF0J3MgZ3JlYXQgYWR2YW50YWdlIGJlY2F1c2Ugbm90IGFsbCB3ZWJzaXRlcyBjYW4gZ3VhcmFudGVlIHRoYXQgeW91ciBmdW5kcyBhcmUgaW4gc2FmZS4uIApUeWxlcmphcnZpcyAgMzAgcG9pbnRzICBzdWJtaXR0ZWQgNSB5ZWFycyBhZ28KRWZmZWN0IG9mIHdlYXRoZXIgY29uZGl0aW9ucyBvbiByaGV1bWF0aWMgcGF0aWVudHMuIEFubiBSaGV1bSBEaXMgMTk5MDs0OToxNTggOV0uLiAKVGhlcmUgYXJlIHNldmVyYWwgdmFyaWV0aWVzIGJ1dCBhbGwgYXJlIHF1aXRlIGNvbGxlY3RpYmxlLiBDb25kaXRpb24gaXMgYSBodWdlIGZhY3RvciBpbiBvbGRlciBzdGFtcHMgbGlrZSB0aGVzZS4gVGhpbiBzcG90cywgdGVhcnMsIG1pc3NpbmcgY29ybmVycywgaXRzIHZhbHVlcyBkcm9wcyB0cmVtZW5kb3VzbHkgIGhhcmQgdG8gc2VsbCBhdCBhbnkgcHJpY2UuIAozLikgSSdtIG5vIGtpZCBpZiB0aGF0J3Mgd2hhdCB5b3UncmUgYXNraW5nLiAKSnVzdCBjcm9zc2luZyB0aGUgcm9hZCB5b3Ugd2lsbCBmaW5kIEhlYWx0aGxhbmQsIG9uZSBvZiB0aGUgbW9zdCBwb3B1bGFyIGFuZCByZW5vd25lZCBtYXNzYWdlIGNlbnRyZSBpbiBCYW5na29rLkZvciBsYXp5IG5pZ2h0cyBpbiwgd2l0aG91dCBsZWF2aW5nIHRoZSBidWlsZGluZywgQXNjb3R0IGhvdGVsIGFsc28gcHJvdmlkZSBjYXN1YWwgc2V0dGluZyB0byBlbmpveSBsaWdodCBzbmFja3MgYW5kIGNvY2t0YWlscyBvciBzdXBlcmIgcmVzdGF1cmFudHMgc2VydmluZyBhIHZhcmlldHkgb2YgbG9jYWwgYW5kIGludGVybmF0aW9uYWwgZGlzaGVzIHN1Y2ggYXM6IEFMRE8gUmVjb21tZW5kZWQgSXRhbGlhbiBSZXN0YXVyYW50ICh3aXRoIHN3aW1taW5nIHBvb2wgdmlldyksIE5BTkpBIE1PTkpZQTogSmFwYW5lc2UgSG9tZSBDb29raW5nLCBUSEUgTSBQVUI6IEJyaXRpc2ggUHViIHdpdGggSW50ZXJuYXRpb25hbCBDdWlzaW5lTW9yZVNlbmQgdG8gYSBmcmllbmRIb3VzZSBSdWxlc1BldHMgQWxsb3dlZDogTm9TbW9raW5nIEFsbG93ZWQ6IE5vS2lkIEZyaWVuZGx5OiBZZXNBIHZhbGlkIElEL1BBU1NQT1JUIENPUFkgbXVzdCBiZSBwcmVzZW50ZWQgYXMgcGFydCBvZiBvdXIgY2hlY2sgaW4gcHJvY2VkdXJlcy5UaGUgdG90YWwgbnVtYmVyIG9mIG9jY3VwYW50cyBhdCB0aGUgYXBhcnRtZW50LCBpbmNsdWRpbmcgaW5mYW50cywgbXVzdCBiZSByZWZsZWN0ZWQgaW4gdGhlIHJlc2VydmF0aW9uIGRldGFpbHMgYW5kIG5vdCB0byBleGNlZWQgNCBhdCBhbGwgdGltZXMuQ2hlY2sgaW4gdGltZSBpcyBhdCAxNS4wMC4gCk15IHN1cmdlcnkgd2VpZ2h0IHdhcyAyNzQgYW5kIGEgaGVhbHRoeSB3ZWlnaHQgYXQgbXkgaGVpZ2h0IGlzIGFyb3VuZCAxMjAgMTQwIGRlcGVuZGluZyBvbiB0aGUgcGVyc29uLiBJIGRvbid0IGV2ZW4gaGF2ZSBhIGNvbmNyZXRlIGdvYWwgYmVjYXVzZSBJIGhhdmUgbmV2ZXIgYmVlbiB0aGluIGVub3VnaCB0byBrbm93LiBJIHdhcyBvZmYgbXkgZGlhYmV0ZXMgbWVkaWNhdGlvbiBpbiB0d28gd2Vla3MgYW5kIG15IEExQyBpcyA1LjEgbm93LCB3aGljaCBpcyBncmVhdCBhbmQgbm93aGVyZSBuZWFyIGRpYWJldGljIG9yIGV2ZW4gcHJlIGRpYWJldGljLiAKSWYgaGUgaXNuJ3QgcGFydGljaXBhdGluZyBpbiB0aGUgYWR1bHQgY29udGVudCBjaGF0IHRoZW4ganVzdCBsZWF2ZSBoaW0gYmUgdW5sZXNzIGhpcyBnYW1ibGluZyByZWFsbHkgaXMgYW4gYWRkaWN0aW9uLiBJZiBoZSBoYXMgZW5nYWdlZCBpbiB0aGlzIGNoYXQgdGhlbiBqdXN0IHNpdCB3aXRoIGhpbSB3aGVuIGhlIHBsYXlzLCB0ZWxsIGhpbSBob3cgbXVjaCBpdCBpbnRlcmVzdHMgeW91IGFuZCB0aGF0IHlvdSB3YW50IHRvIHdhdGNoIGFuZCBsZWFybi4gClRoZSBzeXN0ZW0gaXRzZWxmIHdhcyBvbmUgb2YgcmVmbGVjdGVkIGxpZ2h0IGZyb20gdGhlIHN1biB1c2luZyBhIHZhc3QgYXJyYXkgb2YgbWlycm9ycywgYW4gYXBwcm9hY2ggdGhhdCB3b3VsZCBhbHNvIGJlIHdvcmtlZCBvbiBieSBBLiAKTGlrZXdpc2UsIHlvdSBjYW4gc3BlY2lmeSB0aGF0IHRoZXkgbGl2ZSBpbi9oYXZlIHJlY2VudGx5IGxpdmVkIGluL2JlIGF3YXJlIG9mIE1ldHJvcG9saXMncyB0cmFmZmljIHBhdHRlcm5zIGFuZCBsYXlvdXQuLiAKVGhlcmUgYXJlIGh1Z2UgcmFuZ2Ugb2YgY3V0ZSBTcG9uZ2Vib2IgaVBob25lIGNhc2UgY292ZXJzIGdhZGdldCBzYWZlLCB0aGV5IGFsc28gbWlycm9yIHRoZSBwZXJzb25hbGl0eSBvZiB0aGUgcGVyc29uIHdobyBpcyB1c2luZyB0aGVtLiBUaGUgb25seSBwcm9ibGVtIHdpdGggc2lsaWNvbmUgY2FzZXMgaXMgdGhhdCB0aGV5IGNhbiBvbmx5IHByb3RlY3QgdGhlIGJhY2sgb2YgdGhlIHBob25lLCBzbyBxdWFsaXR5IGFuZCBkdXJhYmxlIHBsYXN0aWMgYW5kIGRlc2lnbiB0byBmaXQgaVBob25lIDNHLiAKVGhleSBhcmUgbm92aWNlcyBpbiBmaW5hbmNlLi4gCkxvdCBjb21lcyB3aXRoIG9uZSBFZGlzb24gR29sZCBNb3VsZGVkIEN5bGluZGVyIG1hZGUgZnJvbSBibGFjayB3YXgsIGNhLiAKSm9obm55J3MgaXMgdGhlIG1vc3QgcG9wdWxhciB0b3VybmV5IGluIEJvdWxkZXIsIGRyYXdpbmcgY2xvc2UgdG8gYSBjYXBhY2l0eSA1MCBwbGF5ZXJzIHBlciBnYW1lIG9uIFdlZG5lc2RheXMuIkkgbG92ZSB3aGF0IGl0IGRvZXMgZm9yIG91ciBidXNpbmVzcy4gCkFuZCB3aGF0ZXZlciAiaG9ycm9ycyIgcGFzcyBhdCB0aGUgY2hhcm5hbCBob3VzZSAuIApXaGlsZSB0aGVyZSBpcyBhbiBlZmZlY3RpdmUgZW1vdGlvbmFsIGNvbXBvbmVudCB0byB0aGUgcmVzb2x1dGlvbiwgaXQgcGFsZXMgaW4gY29tcGFyaXNvbiB3aXRoIHRoYXQgb2YgVG95IFN0b3J5IDMsIHdoaWNoIG9mZmVycyB0aGUgc2FtZSBpZGVhIHdpdGggZ3JlYXRlciBkZWxpY2FjeSBhbmQgcGF0aG9zLi4gCkJpZ2Fzb2Z0IHZpZGVvIGluc3BpcmF0aW9uIDggICBzb2Z0d2FyZSBwZXIgbWFwcGUgbWVudGFsaSAgIG1pbmQgbWFwcGluZyBzb2Z0d2FyZSBIb3lsZSBjYXNpbm8gZ2FtZXMgKGpld2VsIGNhc2UpLiAKSGVyZSdzIGhvdyB0byByZWFkIGFuZCB1bmRlcnN0YW5kIHlvdXIgQ29sdW1iaWEgZ2FzIGJpbGwgSGVyZSdzIGhvdyB0byByZWFkIGFuZCB1bmRlcnN0YW5kIHlvdXIgQ29sdW1iaWEgZ2FzIGJpbGwgQXJjdGljIHdlYXRoZXIgaXMgaGVhZGluZyB0aGlzIHdheSwgc2VuZGluZyBoZWF0aW5nIGJpbGxzIGludG8gb2xkIGZhc2hpb25lZCB3aW50ZXIgb3JiaXRzLiBOb3cgaXMgYSBnb29kIHRpbWUgdG8gdGFrZSBhIGNsb3NlIGxvb2sgYXQgeW91ciBnYXMgYmlsbCwgYW5kIG1heWJlIHRvIGZpZ3VyZSBhIHBhdGggdG93YXJkIGxvd2VyIGJpbGxzLgpUaGVyZSBhcmUgYSB0b24gb2YgZ29vZCByZXNvdXJjZXMgb3V0IHRoZXJlIHRvIGxlYXJuIGFib3V0IHByb3BlciBmb3JtLCBwcm9ncmFtaW5nLCBhbmQgY29tcGV0aW5nIGlmIHlvdSBldmVyIHdhbnQgdG8gZG8gdGhhdC4gCkFuZCBmYW5zIGVtb3Rpb25hbCBpbnZlc3RtZW50IHdhcyBkZWVwZXIgdGhhbiBldmVyIGJlZm9yZS4uIApBcyBtYW55IHBsYXllcnMgaGF2ZSBzZXQgYSBwYXJ0aWN1bGFyIGFtb3VudCB0byBzcGVuZCBvbiBlbnRlcnRhaW5tZW50IGxpa2Ugb25saW5lIHBva2VyLCBpdCBpcyBhZHZpc2VkIHRvIGxvb2sgaW50byBzZXZlcmFsIGRpZmZlcmVudCBvbmxpbmUgcG9rZXIgc2l0ZXMgYXMgd2VsbC4gQnkgZG9pbmcgcmVzZWFyY2hlcyBvbiBkaWZmZXJlbnQgd2Vic2l0ZXMsIHlvdSB3aWxsIGdldCBhbiBpZGVhIG9uIHNvbWUgb2YgdGhlIGFib3ZlIHRoaW5ncyBhbmQgeW91IHdpbGwgYmUgYWJsZSB0byBkZXRlcm1pbmUgd2hpY2ggcG9rZXIgc2l0ZSBzdWl0cyB5b3UgdGhlIGJlc3QuIApJIG5ldmVyIHBsYW5uZWQgdG8gZHJvcCBvdXQgb2YgY29sbGVnZSBhcyBteSBldiBmcm9tIG15IGRlZ3JlZSBpcyB3YXkgaGlnaGVyIHRoYW4gcHVyc3VpbmcgcG9rZXIgcHJvZmVzc2lvbmFsbHkuIEkgc3R1ZHkgbWF0aC9zdGF0aXN0aWNzIGFuZCBhbSBnb2luZyB0byBwdXJzdWUgYSBtYXN0ZXJzIGluIGNvbXB1dGF0aW9uYWwvc3RhdGlzdGljYWwgbGVhcm5pbmcgbWV0aG9kcy4gSSBwbGFuIG9uIHBsYXlpbmcgcG9rZXIgZm9yIDEgMiB5ZWFycyBhZnRlciBjb2xsZWdlIHdoaWxlIHRyYXZlbGluZyB0byBiZSBhYmxlIHRvIGFmZm9yZCBncmFkIHNjaG9vbCBhbmQgbm90IHRha2Ugb3V0IGFueSBsb2Fucy4gSSBhY3R1YWxseSByZWFkIHlvdXIgYmxvZyBwb3N0IGZyb20gdHdvIHllYXJzIGFnbyBhYm91dCBtYWtpbmcgdGhlIGNob2ljZSBhYm91dCB3aGV0aGVyIG9yIG5vdCB0byBwbGF5IHBva2VyIHByb2Zlc3Npb25hbGx5IChJIHdhcyBjcnVzaGluZyBsaXZlIGF0IHRoZSB0aW1lIGFuZCBkaWRuIGhhdmUgdGhlIGJlc3Qgb3V0bG9vaykgYW5kIGl0IHJlYWxseSBtYWRlIG1lIGZvY3VzIGxlc3Mgb24gcG9rZXIgYW5kIG1vcmUgb24gbXkgc3R1ZGllcy4KTW9zdCBvZiB0aGUgb3RoZXIgcGxheWVycyBhcm91bmQgdGhlIHRhYmxlIGFyZSBnbGFkIHRvIGhhdmUgbWFkZSBpdCBzbyBmYXIgYW5kIGFyZSBwbGF5aW5nIGp1c3QgdG8gc3RheSBpbiB0aGUgZ2FtZS4gClRoZSBwcmVzcyByZWxlYXNlIGJhc2ljYWxseSBjdXRzIG91dCBhbGwgdGhlIHRlY2huaWNhbCBzdHVmZiBmcm9tIHRoZSBwYXBlciwgd2hpY2ggaXMgd2hhdCB0aGUgcGFwZXIgaXMgYWJvdXQgYXMgbXVjaCBhcyB0aGUgaGVhZGxpbmUgc3R1ZmYuIApXaHkgZG9lcyB5b3VyIGdlb2dyYXBoaWNhbCBsb2NhdGlvbiBoYXZlIHRvIGRvIHdpdGggYmVpbmcgcHJvIGNob2ljZSBhbmQgZXF1YWxpdHkgaW4gbWFycmlhZ2U/IFRoZSBiaWJsZSBkb2VzbiB0ZWFjaCB0aGF0LiAKSSBhZ3JlZSB3aXRoIGV2ZXJ5b25lIHNheWluZyBub3QgdG8gYnJpbmcgeW91ciBjaGlsZCwgYnV0IHRoYXQgdXAgdG8geW91IGFuZCBJIHN1cmUgeW91IGd1eXMgd2lsbCBkbyB3aGF0IGZlZWxzIGJlc3QuIElmIHNoZSBkb2VzIGdvIHRyeSB0byBzdGF5IGF3YXkgZnJvbSB0aGUgSUxzLCBhbmQgaWYgdGhleSB0cnkgdG8gcHVsbCBhbnkgcmV2aXNpb25pc3QgaGlzdG9yeSBCUyBqdXN0IHByZXRlbmQgbGlrZSB5b3UgZG9uIGV2ZW4gdW5kZXJzdGFuZCB3aGF0IHNoZSB0YWxraW5nIGFib3V0LCAiIFdoYXQgZG8geW91IG1lYW4geW91IG5ldmVyIGdldCB0byBzZWUgaGVyPyBZb3UgZGlzb3duZWQgeW91ciBzb24gYW5kIHRvbGQgdXMgbm90IHRvIGNvbnRhY3QgeW91IGFueW1vcmUuIiBMZXQgaGVyIGJlIGFuZ3J5IG9yIGVtYmFycmFzc2VkLCBzaGUgZGVzZXJ2ZXMgaXQuIERvbiBsZXQgdGhlbSBzZWUgeW91IHN3ZWF0IGJlY2F1c2UgeW91ciBsaXZlcyBhcmUgc28gbXVjaCBiZXR0ZXIgd2l0aG91dCB0aGVtLgpFbXBsb3llcnMgc2VlIHRob3NlIG1ham9ycyBhbmQganVzdCB3YW50IHRvIGhpcmUgeW91IGZvciB5b3VyIGJyYWluLCB5b3UgYmUgd29ya2luZyB3aXRoIGNvbXB1dGVycyBhbGwgcmlnaHQuIApUaGUgYWVzdGhldGljIGFuZCBhcnQgc3R5bGUgaGFzIHJlYWxseSBnb25lIHRvIHNoaXQuIEV2ZXJ5dGhpbmcgZmVlbHMgc28gYnJpZ2h0IGFuZCBmbGFzaHkuIApUaGUgYXNzaXN0YW50IGhhcyB0cmF2ZWxlZCBmcm9tIGEgcGxhbmV0IGluIGEgc29sYXIgc3lzdGVtIHJldm9sdmluZyBhcm91bmQgYSBzdW4gaW4gYSBzb2xhciBzeXN0ZW0gaW4gYSBnYWxheHkgaW4gYSB1bml2ZXJzZSB0byBzb21ldGhpbmcgc21hbGwsIHNvbWV0aGluZyBzdWIgYXRvbWljLCBsYW5kaW5nIGluIGFuIGVsZWN0cm9uIGhvbGRpbmcgd2l0aGluIGl0IGl0cyBvd24gdW5pdmVyc2UuIApBcmUgc2VsbGluZyBzbG93bHkgYnV0IHN1cmVseS4gCkpvZSBjbGFpbWVkIGhlIHdhcyBhIGdvb2Qga2lkLCBhcyBpbiBnb29kIGF0IGNoZWF0aW5nIGFuZCBzdGVhbGluZyByYXRoZXIgdGhhbiBiZWluZyBnb29kIGJlaGF2ZWQuIFRoYXQncyB3aGF0IHRoZSBtb2IgZ3V5cyB3ZXJlIGxvb2tpbmcgZm9yIGluIHRoZSBzdHJlZXQga2lkcy4KSXQgd2FzIHNvLCBvbmNlIHVwb24gYSB0aW1lLiBBbnlvbmUgd2l0aCBlbm91Z2ggY2FwaXRhbCB0byBidWlsZCBhbiBpbmZyYXN0cnVjdHVyZSBjb3VsZCBhY3R1YWxseSBkbyBzby4gQW5kIHRoZSBCZWxscyBkaWQuIApCdXQgaGUgc2FpZCBoZSB3YXMgc3VycHJpc2VkIGFib3V0IHRoZSBhbGxlZ2F0aW9ucy4iSGUgd2FzIG5ldmVyIHZpb2xlbnQsIiBoZSBzYWlkLiAKSGUgcmVjYWxsZWQgd2F0Y2hpbmcgYW4gZXBpc29kZSBvZiB0aGUgb2xkIFRWIHNob3cgIk1hdmVyaWNrIiBhcyBhIGtpZCwgZW50aHJhbGxlZC4gClp1ciBBdXN3YWhsIHN0ZWhlbiA0OCBTdXBlcmlvciBaaW1tZXIgbWl0IEdhcnRlbmJsaWNrIG9kZXIgZGlyZWt0ZXIgU3RyYW5kbGFnZSBzb3dpZSA1OCBEZWx1eGUgWmltbWVyIGF1ZiBtYXhpbWFsIGRyZWkgRXRhZ2VuLiBXZWxsbmVzcyBMaWViaGFiZXIga29tbWVuIGJlaSBlaW5lciB0cmFkaXRpb25lbGxlbiBUaGFpIE1hc3NhZ2UgaW0gaG90ZWxrZXR0ZW5laWdlbmVuIFNwYSBDZW52YXJlZSBhdWYgSWhyZSBLb3N0ZW4uIERlcyBXZWl0ZXJlbiB2ZXJmZ3QgZGFzIEhvdGVsIGJlciBlaW5lbiBLaWRzIENsdWIgaW5rbHVzaXZlIEtpbmRlcnBvb2wgdW5kIGJpZXRldCBkaWUgQmV0cmV1dW5nIGZyIEtpbmRlciBhYiB2aWVyIEphaHJlbiBiaXMgaW4gZGFzIFRlZW5hZ2VyIEFsdGVyIGFuLiBOZWJlbiBkZW0gRml0bmVzc2NlbnRlciB2ZXJmZ3QgZGFzIEhvdGVsIGF1Y2ggYmVyIGVpbmUgUEFESSBUYXVjaHNjaHVsZSB1bmQgZWluIFdhc3NlcnNwb3J0emVudHJ1bS4gRHJlaSBSZXN0YXVyYW50cyBzb3JnZW4gZnIgZGFzIGxlaWJsaWNoZSBXb2hsIGRlciBHc3RlLiBVcmxhdWJlciBrbm5lbiB6d2lzY2hlbiBIYWxicGVuc2lvbiAgdW5kIGRlciBBbGwgSW5rbHVzaXZlIFZlcnBmbGVndW5nIHdobGVuLgpEciBWbGFkaW1pciBKYW5kYSBUaW1lbGVzcyBRdW90ZXMgYW5kIENvbmNlcHRzCjgpRmFybWVkIHNhbG1vbiBhbmQgd2lsZCBzYWxtb24gaGF2ZSBlcXVhbCBhbW91bnRzIG9mIG1lcmN1cnkgbGV2ZWxzLgpJIHdvdWxkIG5vdCBzYXkgaXQgbGF5ZXJzIHdlbGwgdW5kZXIgZ2xvc3MgYmVjYXVzZSB0aGUgb3JpZ2luYWwgYXBwbGljYXRpb24gZG9lc24gY29tcGxldGVseSBkcnksIGl0IHdpcGVzIG9mZiBhbmQgcmV2ZWFscyB0aGUgc3RhaW4gYWZ0ZXIuIFNvIHdoZW4gaXQgaW4gaXRzICJzdGFpbiBwaGFzZSIgbGlwIGdsb3NzIHdvdWxkIGJlIG9rYXkuIEl0IG5vdCBkcnlpbmcgZWl0aGVyLnVndXVtaWNobyAgMTYgcG9pbnRzICBzdWJtaXR0ZWQgMSB5ZWFyIGFnb0kgdGhpbmsgdGhlIGhvdHRlc3QgaW5ncmVkaWVudHMgaW4gayBiZWF1dHkgcmlnaHQgbm93IGFyZSBzcXVhbGFuZS9zcXVhbGVuZSBhbmQgbWFkZWNhc3Nvc2lkZSAoY2VudGVsbGEgYXNpYXRpY2EpLiAKQ29mZmVlIGFuZCBkb3VnaG51dHMgd2lsbCBiZSBwcm92aWRlZCBhdCByZWdpc3RyYXRpb24uIFRoZSBjb3N0IGlzICQxNSBwZXIgaGFuZCBhbmQgJDUgcGVyIHJpZGVyLiBUaGVyZSBpcyBhICQxMDAgcHJpemUgZm9yIGJlc3QgaGFuZCwgYSBwcml6ZSBmb3Igd29yc3QgaGFuZCBhbmQgNTAvNTAgdGlja2V0cy4gVGhlcmUgd2lsbCBiZSBkb29yIHByaXplcyBhbmQgYWRkaXRpb25hbCB0aWNrZXRzIHNvbGQgc2l4IGZvciAkNSBvciAkMSBlYWNoLgpTb2NpZXR5IGhhcyBjb2xsYXBzZWQuLiAKQWxzbywgSSBpbWFnaW5lIGFsY29ob2wgYmFzZWQgYWNyeWxpY3Mgd291bGQgYWxzbyBiZSBmYXN0ZXIgZHJ5aW5nIHRoYW4gd2F0ZXIgYmFzZWQgb25lcyB3aGljaCB3b3VsZCBsaW1pdCB5b3VyIGFiaWxpdHkgdG8gZG8gdGhpbmdzIGxpa2Ugd2V0IGJsZW5kaW5nIGVmZmVjdGl2ZWx5Li4gClRoZSBjaGFsbGVuZ2UsIHRoZW4sIGlzIGNvbmR1Y3RpbmcgYWRkcmVzc2FibGUgYWR2ZXJ0aXNpbmcgaW4gYSB3YXkgdGhhdCBjb21wbGV0ZWx5IHNhZmVndWFyZHMgY29uc3VtZXIgZGF0YSBhbmQgb3B0aW1pemVzIHJlbGV2YW50IGFkIGV4cGVyaWVuY2VzLi4gCkFmZm9yZGFibGUgYWx0ZXJuYXRpdmVzIHRvIHBsYXllcnMgdG8gd2luIHNlYXRzIGludG8gdGhlIERQVCBldmVudHMuIApTZWVtcyBlYXN5IGFuZCBjb252ZW5pZW50LiAKU2VyaW91c2x5IHRob3VnaCwgSSd2ZSBiZWVuIHBsYXlpbmcgdmlkZW9nYW1lcyBmb3IgYSBsYXJnZSBwYXJ0IG9mIG15IGxpZmUuIFByaW1hcmlseSBOaW50ZW5kbyBEUyBnYW1lcy4gCkFuZCBhZnRlciBqdXN0IGxldCBoZXIga25vdyB5b3UgdmFsdWUgaGVyIGZyaWVuZHNoaXAgZWl0aGVyIHdheS4gCiJJZiB0aGF0IHdlcmUgcmVhbGx5IGFsbCwgSSB3b3VsZG4ndCBtaW5kLCBDYXB0YWluIEppbS4gSSB3b3VsZCB1bmRlcnN0YW5kLiBCdXQgdGhlcmUgYXJlIHRpbWVzIG5vdCBhbHdheXMsIGJ1dCBub3cgYW5kIGFnYWluICB3aGVuIEkgYWxtb3N0IGhhdmUgdG8gYmVsaWV2ZSB0aGF0IExlc2xpZSBkb2Vzbid0IGRvZXNuJ3QgbGlrZSBtZS4gClRoZSBQcmVtaXVtIG1lbWJlcnNoaXAgZ2l2ZXMgbWUgQ29pbnMsIHdoYXQgYXJlIHRob3NlIGZvcj9Db2lucyBhcmUgYSB2aXJ0dWFsIGdvb2QsIGFuZCB5b3UgY2FuIHVzZSB0aGVtIHRvIGF3YXJkIGV4Y2VwdGlvbmFsIHBvc3RzIG9yIGNvbW1lbnRzIHdpdGggYSBTaWx2ZXIsIEdvbGQsIG9yIFBsYXRpbnVtIEF3YXJkLiBUaGlzIGlzIGEgd2F5IHRvIHNob3cgYXBwcmVjaWF0aW9uIGZvciBhbiBleGNlcHRpb25hbCBjb250cmlidXRpb24gdG8gUmVkZGl0LCBhbmQgY2FuIGFsc28gZ3JhbnQgdGhlIHJlY2lwaWVudCBzcGVjaWFsIGJvbnVzIGJlbmVmaXRzLiAKRm9yIHllYXJzLCB0aGUgS2FobmF3YWtlIGhhZCByZWxpZWQgb24gY2lnYXJldHRlIHNhbGVzIGFuZCBwYXltZW50cyBmcm9tIHRoZSBmZWRlcmFsIGdvdmVybm1lbnQgdG8gZ2V0IGJ5LiAKV2hlbiBpdCBhbGwgaW4gdGhlIHBvdCwgbWVhc3VyZSBob3cgbXVjaCB3b3J0IHlvdSBoYXZlIGF0IHRoaXMgcG9pbnQgICBpdCBzaG91bGQgYmUgbmVhciBoYWxmIHlvdXIgZmluYWwgdGFyZ2V0LiAKQ2Ugc2lsZW5jZSBhIGRvbm4gbGlldSAgdW4gbWFsZW50ZW5kdSBjYXIgamUgbidhdmFpcyBhdWN1bmUgaW5mb3JtYXRpb24gc3VyIGxhIHBlcnNvbm5lIGRvbnQgaWwgcydhZ2l0IGV0IHRvdXQgY2UgcXVlIGonYWkgdHJvdXYgY2Ugc29udCBkZXMgdHJhY2VzIGQnaW50ZXJ2ZW50aW9uIGRhbnMgZGVzIHRscyBhbHRlcm5hdGl2ZXMuIE9yIFNlcmdlIFJhZGVyIGEgcHJvZHVpdCBkZXV4IGxpdnJlcywgaWwgYSBmYWxsdSBxdWUgamUgbHVpIHRscGhvbmUgZXQgcXUnaWwgdm9xdWUgY2VzIGxpdnJlcyBwb3VyIHF1J2VuIGNoZXJjaGFudCAibGl2cmVzIGRlIFNlcmdlIFJhZGVyIiBqZSBsZXMgZGNvdXZyZS5NYWludGVuYW50IHF1ZSBqJ2FpIGxlcyByZnJlbmNlcyBzb3VzIGxlcyB5ZXV4LCBsZSBwcmVtaWVyIG1lIHJhcHBlbGxlIHF1ZWxxdWUgY2hvc2UgbWFpcyAgbmUgbSdhIHBhcyBtYXJxdSBjYXIgbGUgc3VqZXQgZXN0IHBvdXIgbW9pIGJhdGVhdSA6IGxhIGNhdXNlIGVzdCBkZXB1aXMgbG9uZ3RlbXBzIGVudGVuZHVlLkNlbHVpIHN1ciBsZXMgdmFjY2lucyBlbiByZXZhbmNoZSBtJ2EgY29tcGx0ZW1lbnQgY2hhcHAsIG9yIHNpIGonYXZhaXMgc3UgcXUndW4gbGl2cmUgbWV0dGFpdCBsJ2FjY2VudCBzdXIgbGVzIHN1YnN0YW5jZXMgY29udGVudWVzIGRhbnMgbGVzIHZhY2NpbnMgYXZlYyBlbiBwbHVzIGRlcyBwaG90b3MsIGplIG0neSBzZXJhaXMgZm9yY21lbnQgaW50cmVzcyBwdWlzcXVlIGNldHRlIGFwcHJvY2hlIHByc2FnZWFpdCBkdSBjb250ZW51IGR1IGNlIHF1ZSBub3VzIHNvbW1lcyBhbWVuICBkY291dnJpciBhdWpvdXJkJ2h1aSBhdmVjIGhvcnJldXIuRmFvbiBkZSBwYXJsZXIsIGwnaG9ycmV1ciBlc3QgcG91ciBsZXMgbmFmcy4gRW4gY2UgcXVpIG1lIGNvbmNlcm5lIGNlbGEgZmFpdCB1biBkZW1pIHNpY2xlIHF1ZSBqZSBzdWlzIGltbXVuaXMgY29udHJlIGNldHRlIGhvcnJldXIgY2FyIGRlcHVpcyB0b3V0IGNlIHRlbXBzIGplIHNhaXMgcXVlIGxlIHNldWwgb2JqZWN0aWYgZGUgQmlnIFBoYXJtYSBjJ2VzdCBkZSBmYWlyZSB1biBtYXhpbXVtIGRlIGZyaWMgcGFyIHRvdXMgbGVzIG1veWVucyBldCBxdWVscXUndW4gc29pdCBsZXMgY29uc3F1ZW5jZXMgc2FuaXRhaXJlcy4gCkFub3RoZXIgdGhpbmcgdGhhdCB5b3Ugd2lsbCBmaW5kIGlzIHRoYXQgd2hlbiB5b3UgYXJlIGRlYWxpbmcgd2l0aCB0aGlzIFByb2Zlc3Npb25hbCBDYXJkIFNodWZmbGVyLCB5b3UgYXJlIGdvaW5nIHRvIGJlIGluIGEgZ3JlYXQgcGxhY2UgdG8gbW92ZSBhaGVhZCBhbmQgdG8gbWFrZSBzdXJlIHRoYXQgeW91IGFyZSBwcm92aWRpbmcgdGhlIGJlc3QgZW52aXJvbm1lbnQgdGhhdCB5b3VyIGd1ZXN0cyBoYXZlIGV2ZXIgc2Vlbi4gSWYgeW91IGhhdmUgYSBncmVhdCBwb2tlciB0YWJsZSwgd2h5IG5vdCBmaW5pc2ggaXQgb2ZmIHdpdGggdGhpcyBsb3ZlbHkgZGV2aWNlPyBUYWtlIHNvbWUgdGltZSBhbmQgaWYgeW91IGNhbiwgdGFrZSBhIGxvb2sgYXQgb25lIG9mIHRoZXNlIGRldmljZXMgdXAgY2xvc2UuIFRoZXJlIGFyZSBwbGVudHkgb2YgcmVhc29ucyB3aHkgeW91IG1pZ2h0IGJlIGludGVyZXN0ZWQgaW4gdGhlIEZsdXNoIE1vdW50IEtpdCBmb3IgU2h1ZmZsZSBUZWNoIENhc2lubyBDYXJkIFNodWZmbGVyIHNvIG1ha2Ugc3VyZSB0aGF0IGNoZWNrIGl0IG91dC4gCkFsc28gICBPbmVvaHRyaXggUG9pbnQgTmV2ZXIgICBSZXBsaWNhLCBWZXJ2ZSAgIFN0b3JtIEluIEhlYXZlbi4gClNheWluZyB0aGF0IHRoZXJlJ3Mgc29tZSBTSlcgY29uc3BpcmFjeSBhZ2FpbnN0IGhpbSBiZWNhdXNlIG9mIGhpbSBiZWluZyBhIHdoaXRlIENocmlzdGlhbiBtYW47IHRoYXQgbW9zdCBvZiB0aGUgYWNjdXNhdGlvbnMgYWdhaW5zdCBoaW0gYXJlIGxpZXMgKGRlc3BpdGUgZXZpZGVuY2UgYW5kIHRlc3RpbW9ueSk7IGFuZCBkb3ducGxheWluZyBoaXMgYWN0aW9ucyBhcyAianVzdCBodWdzIi4gClRoZSByZWFzb24gcGVvcGxlIGFyZSBoYXZpbmcgdG8gYmUgZm9yY2VkIHRvIHRha2UgdmFjY2luZXMgaW4gdGhpcyBkYXkgYW5kIGFnZSBpcyBiZWNhdXNlIHBlb3BsZSBkZWNpZGVkIHRvIHN0b3AgdGFraW5nIHRoZW0gb24gYSBiYXNpcyBvZiByaXNrIHRoYXQgaXNuIHNvbGlkbHkgYmFja2VkIHVwLCBhbmQgdGhlIGJlbmVmaXRzIG9mIHZhY2NpbmVzIGFyZSB3ZWxsIGVub3VnaCBkb2N1bWVudGVkIHRoYXQgd2hlbiB1c2UgaGFzIGZhbGxlbiBhbmQgd2Ugc2VlaW5nIHJlIGVtZXJnZW5jZSBvZiB3aGF0IHdlcmUgaW5jcmVhc2luZ2x5IHVuY29tbW9uIGRpc2Vhc2Ugb3V0YnJlYWtzLCBpdCBpcyBhIHByZXR0eSBzaW1wbGUgcHVibGljIGhlYWx0aCBtZWFzdXJlIHRvIG1hbmRhdGUgdGhlbSwgaW4gc29tZSB3YXkgb3IgYW5vdGhlci4gRXhjbHVzaW9uIGlzIHByZXR0eSBmYWlyLCB5b3Ugc3RpbGwgYWxsb3cgc29tZW9uZSB0byBjaG9vc2UsIGJ1dCB5b3UgYXZvaWQgdGhlbSBwbGFjaW5nIG90aGVyIGtpZHMgYXQgcmlzay4gQ3VycmVudGx5IG5vIGFsdGVybmF0aXZlIGV4aXN0cyBiZXNpZGVzIGFjdHVhbGx5IGNvbnRyYWN0aW5nIGZ1bGx5IGFjdGl2ZSB2ZXJzaW9ucyBvZiBkaXNlYXNlcywgd2hpY2ggaXMgZGVmaW5pdGl2ZWx5IGxlc3Mgc2FmZSB0aGFuIGEgdmFjY2luZS4uIApBbGwgb2YgdGhpcyB0byBzYXkgdGhhdCBzaW5jZSBsYXN0IE1hcmNoIHdlIGhhdmUgaGFkIDY4IHBlb3BsZSBjb21lIHBsYXkgYXQgb3VyIGdhbWUuIFNvbWUgb2YgdGhlc2UgcGVvcGxlIGFyZSBmcmllbmRzIG9mIGZyaWVuZHMsIGEgc3VycHJpc2luZyBhbW91bnQgZm91bmQgdXMgb25saW5lIGFuZCBjYW1lIHRvIGNoZWNrIGl0IG91dC4gU29tZSBzdGF5ZWQsIHNvbWUgbW92ZWQgb24uClRoZSBzdWNjZXNzZnVsIG1hbmFnZXIgaXMgbGlrZSBhIGNvbmR1Y3RvciB0aGF0IG9yY2hlc3RyYXRlcyB0aGUgbXVzaWMgc28gdGhhdCBlYWNoIGVsZW1lbnQgc291bmRzIGFzIGdvb2QgYXMgcG9zc2libGUgYW5kIHJlc29uYXRlcyB3aXRoIHRoZSBncm91cCBhcyBhIHdob2xlLiAKTm8gc3RhdGVzIGhhdmUgc2VjZWRlZCB1bmRlciBoaW0geWV0LiAKVGhlIG5leHQgdGhpbmcgdGhhdCB5b3Ugc2hvdWxkIGRvIGlzIHRvIHB1cmNoYXNlIGZvbGRlcnMgZm9yIHlvdXIgZmlsaW5nIGNhYmluZXQuIApUaGUgdHJhaW5pbmcgSSBnb3R0ZW4gaGFzIGJlZW4gZ3JlYXQsIGJ1dCBiZWluZyBwYXJ0IG9mIHN1Y2ggYSBzdXBwb3J0aXZlICJmYW1pbHkiIGlzIHRoZSBiZXN0IHBhcnQuIEFuZCBpdCBzdWNoIGEgZ3JlYXQgbWl4IG9mIHBlb3BsZSwgbm90IGp1c3QgaW4gdGVybXMgb2Ygc2tpbGxzL3BlcmZvcm1hbmNlIGJ1dCBvdmVyYWxsIGJhY2tncm91bmRzIGFuZCBwZXJzb25hbGl0aWVzLiAKQnV0IGV2ZW4gZm9yIHBlb3BsZSBpbiBhIGZvb2QgZGVzZXJ0LCB0aGVyZSBpcyBubyBleGN1c2UuIEEgcHJvZmVzc29yIGxvc3QgMjcgbGJzIGVhdGluZyBub3RoaW5nIGJ1dCBkb3JpdG9zLCBvcmVvcywgaG9zdGVzcyBpdGVtcywgYW5kIGNhbm5lZCBiZWFucy4gQ0lDTy4KQnV0IGlmIHlvdSBnb3QgYSB0aWdodCBzcG90IGhlcmUgb3IgdGhlcmUgb3IgZXZlcnl3aGVyZSwgeW91IHdvbiBzZWUgbXVjaCBkaWZmZXJlbmNlIGluIHRoZSB0aXNzdWUsIGlmIGFueSBhdCBhbGwsIGlmIHlvdSBqdXN0IGNvbWluZyBpbiBvbmNlIGEgbW9udGguIFRvIHNlZSBhIGRpZmZlcmVuY2UgaW4gdGhlIGxldmVsIG9mIHRlbnNpb24gaW4gdGhlIHRpc3N1ZSwgY29taW5nIGluIG9uY2UgcGVyIHdlZWsgb3IgZXZlcnkgMiB3ZWVrcyBpcyBhIG11Y2ggYmV0dGVyIGJldC4gCklmIHlvdSBtYWtlIGEgc21hbGwgcmFpc2UgaW5zdGFudGx5LCB5b3UgY291bGQgaGF2ZSBhbnl0aGluZy4gVGhlIHRyaWNrIGlzIHRvIGhhdmUgYSBwbGFuIGFuZCBhY3QgcXVpY2tseS4gVGhlIGxvbmdlciB5b3Ugc2l0IHRoZXJlIGFuZCBhZ29uaXplIG92ZXIgeW91ciBkZWNpc2lvbiwgdGhlIG1vcmUgcGVvcGxlIHdpbGwgc2VlIHJpZ2h0IHRocm91Z2ggeW91LiAKVGhlcmUgd2VyZSBqdXN0IHNoeSBvZiAzLDkwMCBuZXcgcmVzaWRlbnRpYWwgcHJvcGVydHkgbGlzdGluZ3MgbGFzdCBtb250aCBkb3duIDcuOCBwZXIgY2VudCBjb21wYXJlZCB3aXRoIHRoZSBzYW1lIG1vbnRoIHRoZSBwcmV2aW91cyB5ZWFyIGFuZCB0aGUgc2FsZXMgdG8gYWN0aXZlIGxpc3RpbmdzIHJhdGlvIGZvciB0aGUgbW9udGggd2FzIDEyLjggcGVyIGNlbnQuCkFmdGVyIHRoZSBHaWFudHMgMTBrLCBJIGRlY2lkZWQgdG8gYWN0dWFsbHkgdHJhaW4gZm9yIGEgaGFsZiBtYXJhdGhvbiAgIGZvciBhbGwgb2YgdGhlc2UgcmFjZXMsIEkgaGFkIG9ubHkgYmVlbiBydW5uaW5nIDMgOCBtaWxlcyBhIHdlZWsuIEluIG15IGN1cnJlbnQgdHJhaW5pbmcsIEknbSBkb2luZyBjbG9zZXIgdG8gMjAgbWlsZXMgYSB3ZWVrLCBhbmQgSSdtIHN0aWNraW5nIHdpdGggaXQuIEkgYWxzbyAiY3Jvc3MgdHJhaW4iIGJ5IGdvaW5nIHJvY2sgY2xpbWJpbmcgb25jZSBhIHdlZWssIGFuZCBkb2luZyB5b2dhIG9uY2Ugb3IgdHdpY2UgYXMgd2VsbC4uIApIZSBzdGFydGVkIGhpcyBjYXJlZXIgaW4gMTk4MiBhdCBCb2FzZSBNYXNzaW1pIFBvbGxpdHQgYW5kIGhhcyB3b3JrZWQgZm9yIEFiYm90dCBNZWFkIFZpY2tlcnMgQkJETywgQmF0ZXMgYW5kIEdyZXkgTG9uZG9uLiBJbiAxOTk3LCBNci4gCkxvdHRlcnkgZHJhd3MgYXJlIHJhbmRvbSwgc28gaXQgZG9lc24gbWF0dGVyIHdoYXQgb3RoZXIgcGVvcGxlIGRvLCByaWdodD8gV3JvbmcuIApDbG9yb3ggZG9lcyBzZWUgYW4gaW5jcmVhc2luZyAibmVlZCBmb3IgYSBsb3Qgb2YgY29udGVudCBhIGxvdCBmYXN0ZXIgaW4gc29tZSBjYXNlcyBtb3JlIGVmZmljaWVudGx5IG9yIGNoZWFwZXIsIiBoZSBzYWlkLi4gCkRvIHdhbnQgdG8gc2hhcmUgd2l0aCB5b3UgdGhhdCBpdCBpcyBvdXIgc2luY2VyZSBiZWxpZWYgdGhhdCB3ZSBoYXZlIGEgaGlzdG9yeSBvZiBmYWlybmVzcyBhbmQgcmVzcGVjdCBmb3Igb3VyIGVtcGxveWVlcyB0aGF0IGluY2x1ZGVzIGNvbXBldGl0aXZlIHdhZ2UgcmF0ZXMgYW5kIGJlbmVmaXRzIHRoYXQgcmVmbGVjdCB0aGUgaW1wb3J0YW50IHNraWxscyBhbmQgY29udHJpYnV0aW9ucyBvZiBlYWNoIGVtcGxveWVlLiBDb3VwbGUgZG96ZW4gVW5pZm9yIG1lbWJlcnMgYW5kIHN1cHBvcnRlcnMgd2F2ZWQgc2lnbnMgYW5kIGhhbmRlZCBvdXQgaW5mb3JtYXRpb24gbGVhZmxldHMgb24gTW9uZGF5IG91dHNpZGUgdGhlIFdpbmRzb3IgcmVzaWRlbmNlLi4gCkkgZ290IHRoZSB1bHRpbWF0ZSBwb3dlciBpbmZ1c2luZyBzZXJ1bSBjb25jZW50cmF0ZSBpbiBhIDUwMCBwb2ludCByZXdhcmQga2l0IGZyb20gU2VwaG9yYS4gSXQgd2FzIHRoZSB3b3JzdCB0aGluZyB0aGF0IGNvdWxkIGhhdmUgaGFwcGVuZWQgdG8gbWUgc2tpbmNhcmUgd2lzZSBiZWNhdXNlIGl0J3Mgc28gc28gYW1hemluZyBhbmQgc28gc28gcGVyZmVjdCBmb3IgbXkgc2tpbiB0aGF0IEkgbXVzdCBoYXZlIG1vcmUhIEJ1dCB0aGUgMW96IHZlcnNpb24gaXMgJDcwISBBbmQgSSBjYW4ndCBhZmZvcmQgaXQuIApGb3IgZXhhbXBsZSBzYXlpbmcsICJObywgSSBub3QgdHJhbnMsIEkgbm9ybWFsLCIgY2FuIGJlIGh1cnRmdWwgYW5kIGhhdmUgYW4gb3RoZXJpbmcgZWZmZWN0IG9uIGEgdHJhbnMgcGVyc29uIHRoYXQgeW91IG1pZ2h0IGNhcmUgYWJvdXQuIApBbHNvIHlvdSBzYXkgcGVvcGxlIHdvbiBpbnZlc3QgaW4gUiBidXQgdGhhdCBpcyB3cm9uZy4gClRoZSB0aGlyZCBpdGVyYXRpb24gZnJvbSB0aGUgdHJhaWxibGF6aW5nIHZhcG9yaXplciBjb21wYW55LCB3aGljaCB3YXMgb3JpZ2luYWxseSBmb3VuZGVkIGluIDIwMDcsIHdvcmtzIHdpdGggYm90aCBmbG93ZXIgYW5kIGNvbmNlbnRyYXRlcyBhbmQgaGFzIG1vcmUgdGhhbiA2MCB0ZW1wZXJhdHVyZSBzZXR0aW5ncywgYW4gZXh0ZW5kZWQgYmF0dGVyeSBsaWZlIGFuZCBpbXByb3ZlZCBjdXN0b20gY29udHJvbCB0aHJvdWdoIGl0cyBCbHVldG9vdGggZnVuY3Rpb25hbGl0eSBhbmQgbW9iaWxlIGFwcC4uIApBbmQgdGhlcmUgYXBwZWFyZWQgdG8gYmUgYSB0aGVtZSB3aXRoIHRoZSBnYW5nJ3Mgb3V0Zml0cyBhcyBzZXZlcmFsIG9mIGhlciBwYWxzIGFwcGVhcmVkIHRvIGJlIHNwb3J0aW5nIHZpbnRhZ2UgaGVhdnkgbWV0YWwgc2hpcnRzLiAKQ2hhbXBhZ25lIGlzIGFuIHVuZXhwZWN0ZWQgdHJlYXQgZm9yIHlvdXIgZ3Vlc3RzIGFuZCBpZiB0aGUgZ2F0aGVyaW5nIGlzIHNtYWxsIGVub3VnaCBpdHMgYW4gZWxlY3RyaWMgYWZmb3JkYWJsZSBsdXh1cnkuIE10aG9kZSBUcmFkaXRpb25lbGxlIDIwMTUgKCQzMi45MCkuLiAKWW91IGNhbiBzZWUgc29tZSByZWFsbHkgYXdrd2FyZCBzdHVmZiBoYXBwZW4gd2hlbiB5b3UgY2FuIGdldCB5b3VyIG1vbmV5IGFsbCBpbiBvbiB3ZXQgZmxvcHMuCkl0J3MgZGVmaW5pdGVseSBhIGJpZyBjaGFuZ2UgaW4geW91ciBsaWZlIGFuZCBpcyBnb2luZyB0byBiZSBhbiBlbW90aW9uYWwgdGltZSFCYXJvblZvbkhvbWVyICAgMiBwb2ludHMgIHN1Ym1pdHRlZCA0IGRheXMgYWdvTXkgZG9nIGhhcyBiZWVuIGJpdHRlbiBieSBzZXZlcmFsIGNoaWh1YWh1YXMgYmVjYXVzZSB0aGVpciBvd25lcnMgaW5zaXN0IG9uIHRha2luZyB0aGVtIGV2ZXJ5d2hlcmUgZGVzcGl0ZSBrbm93aW5nIGZ1bGwgd2VsbCB0aGVpciBkb2cgaXMgZG9nIGFnZ3Jlc3NpdmUuIApDaW5lbWF0b2dyYXBoeS4gSSBjb3VsZG4gYmVsaWV2ZSBteSBleWVzIHdoZW4gSSBmaXJzdCB3YXRjaGVkIFdXRlRFLiBHb3JnZW91cyBhbmQgd2lkZSBhbmQgZ2l2ZXMgdGhlIHNlcmllcyBhIG5ldywgbW9yZSBncm91bmRlZCB0b25lLgpIZSB3aWxsIHRocm93IHRoZW0gYXQgeW91LCBkZXN0cm95aW5nIHlvdXIgY292ZXIgZGVwZW5kaW5nIG9uIGhvdyBiaWcgaXQgaXMuIApJbiB0aGUgd29ybGQgb2YgRmxvcmlkYSdzIGVsZWN0cmljIHV0aWxpdGllcywgbG9zc2VzIHRvdGFsaW5nIGJpbGxpb25zIG9mIGRvbGxhcnMgaW4gYmV0cyBvbiB0aGUgZnV0dXJlIHByaWNlIG9mIGZ1ZWwgcmVzdWx0IGluIGEgZmFyIGRpZmZlcmVudCBjb25jbHVzaW9uLgpXaWZlIGhhZCB0aGUgYmFieSwgYW5kIGhhZCBtYXNzaXZlIGNvbXBsaWNhdGlvbnMgZHVlIHRvIHRoZSBwcmVnbmFuY3kgYW5kIGRlbGl2ZXJ5LiBUaG91Z2ggc2hlIHdhcyByZWxlYXNlZCBmcm9tIHRoZSBob3NwaXRhbCBiZWZvcmUgQ2hyaXN0bWFzLCBvdXIgZGVjb3JhdGlvbnMgYXJlIHN0aWxsIHVwLiBXZSd2ZSBiZWVuIHN0YXlpbmcgd2l0aCBoZXIgcGFyZW50cyBmb3IgdGhlIGV4dHJhIGhlbHAsIGFzIHNoZSBuZWVkcyBhIGxvdCBvZiBjYXJlLgpHb2QgY2xlYXJseSBzdGF0ZXMgdGhhdCBpdCBpcyBva2F5IHRvIG93biBodW1hbnMgYXMgcHJvcGVydHksIHdoaWNoIGNhbiBiZSBwYXNzZWQgZG93biB0byB5b3VyIGhlaXJzLiBZb3UgY2FuIGJ1eSB5b3VyIHNsYXZlcyBmcm9tIHRoZSBoZWF0aGVuIGxhbmRzIGFuZCB5b3UgY2FuIGJlYXQgdGhlbSBzbyBsb25nIGFzIHRoZXkgZG8gbm90IGRpZSBpbW1lZGlhdGVseSBmcm9tIGl0LiBJZiB5b3UgaGF2ZSBlbnNsYXZlZCBhIGpldywgeW91IG11c3QgcmVsZWFzZSB0aGVtIGluIHRoZSBzZXZlbnRoIHllYXIuIFRoYXQgaXMsIHVubGVzcyB5b3UgZ2l2ZSBoaW0gYSB3aWZlIChub3RlIHRoaXMgNyB5ZWFyIHJ1bGUgb25seSBhcHBsaWVzIHRvIG1lbikgYW5kIGlmIGhlIGRvZXMgbm90IHdhbnQgdG8gYWJhbmRvbiBoaXMgd2lmZSBhbmQga2lkcywgeW91IGNhbiBwaWVyY2UgaGlzIGVhciwgYW5kIGhlIGJlY29tZXMgeW91ciBwcm9wZXJ0eSBmb3JldmVyLiBUaGlzIE1pa2UgUGVuY2UgZmVsbG93IGlzIGFuIHVuZ29kbHkgbWFuIGlmIGhlIGJlbGlldmVzIG90aGVyd2lzZS4KQ2xhaXIgaW5mbHVlbmNlIGFtaWQgZXhwbG9zaXZlIGdyb3d0aApJZiB3ZSBhY3R1YWxseSBoYWQgZGl2ZXJzZSByZXByZXNlbnRhdGlvbiwgd2Ugd291bGQgaGF2ZSBtb3JlIHBhcnRpZXMgYW5kIHZvdGVycyB3b3VsZCBiZSBiZXR0ZXIgcmVwcmVzZW50ZWQgYnkgY2FuZGlkYXRlcyB3aG8gbW9yZSBjbG9zZWx5IG1hdGNoIHRoZWlyIHZpZXdzLiAKTXJzLiBQZWFybCBFbWVud2VpbiwgNjQyIFNvdXRoIENyb3VzZSBBdmVudWUsIHJlcG9ydGVkIHRoZSB0aGVmdCBvZiA4NSBpbiBiaWxscyBhbmQgYSBjaGVjayBmb3IgZnJvbSBoZXIgcHVyc2Ugd2hpbGUgc2hlIHdhcyBJbiBhIDUgYW5kIDEwIGNlbnQgc3RvcmUuIApVbnJlc3RyaWN0ZWQ/IFlvdSBoYXZlIHRvIGJlIG9mIGEgY2VydGFpbiBhZ2UsIGhhdmUgbm8gZmVsb25pZXMsIG5vIGRvbWVzdGljIHZpb2xlbmNlIGNvbnZpY3Rpb25zIChzb21lIHN0YXRlcyBpdCBqdXN0IGNoYXJnZXMpLCBoYXZlIGEgdmFsaWQgYW5kIGN1cnJlbnQgSUQgd2l0aCB5b3VyIGN1cnJlbnQgYWRkcmVzcyBvbiBpdCwgYW5kIG11c3Qgc3VibWl0IHlvdXJzZWxmIHRvIGEgZmVkZXJhbCBiYWNrZ3JvdW5kIGNoZWNrIGJlZm9yZSB5b3UgY2FuIHB1cmNoYXNlIG9uZSBmcm9tIGEgc3RvcmUuIEF0IHdoaWNoIHBvaW50IGl0IGlzIGNvbXBsZXRlbHkgbGVnYWwgZm9yIHRoZSBzYWxlc3BlcnNvbiB0byBjaGVjayBhIGJveCB3aGljaCBzYXlzIHRoZXkgZmVlbCB1bmNvbWZvcnRhYmxlIHNlbGxpbmcgeW91IGEgZmlyZWFybSwgZm9yIGxpdGVyYWxseSBhbnkgcmVhc29uLCBhbmQgdGhlIHNhbGUgd2lsbCBiZSBkZW5pZWQsIG5vIHF1ZXN0aW9ucyBhc2tlZC4uIApJZiBSZXB1YmxpY2FucyBhY3R1YWxseSBjYXJlZCBhYm91dCB0aGUgbGlmZSBvZiBjaGlsZHJlbiwgd2h5IGRvbiB0aGV5IHN1cHBvcnQgcHJvZ3JhbXMgdG8gaGVscCBjaGlsZHJlbiBhZnRlciB0aGV5IGJvcm4/IFdoeSBkb24gdGhleSBzdXBwb3J0IGNvbXByZWhlbnNpdmUgc2V4IGVkdWNhdGlvbiBpbiBzY2hvb2xzIGFuZCBlYXN5IGFjY2VzcyB0byBjb250cmFjZXB0aW9uLCB0aGluZ3MgdGhhdCB3b3VsZCBkcmFtYXRpY2FsbHkgZGVjcmVhc2UgdGhlIGFtb3VudCBvZiB1bndhbnRlZCBwcmVnbmFuY2llcz8uIApPdGhlciBjYXNpbm9zIGV4cGFuZCB0aGUgbGlzdCBvZiBnYW1lcyBmb3JiaWRkZW4gZm9yIGNhc2lubyBib251cyB3YWdlcmluZy4gQmxhY2tKYWNrIG9yIFZpZGVvIFBva2VyIGFyZSBlaXRoZXIgZm9yYmlkZGVuIG9yIHdhZ2VyIHJlcXVpcmVtZW50cyBpbmNyZWFzZWQgYnkgMiA0IHRpbWVzLiBTb21lIHBvcHVsYXIgb24gbGluZSBjYXNpbm9zIGludHJvZHVjZSBjYXNpbm8gYm9udXNlcyB3aGljaCBjYW4gYmUgd2FnZXJlZCBpbiBjYXNpbm8gU2xvdHMgb25seS4KSGlnaCBzdGFrZXM6IFdvbGxvbmdvbmcgaGFkIDQ4IGZld2VyIGdhbWluZyBtYWNoaW5lcyBpbiAyMDE0LzE1IHRoYW4gdGhlIHByZXZpb3VzIHllYXIsIGJ1dCBwdW1wZWQgJDM3IG1pbGxpb24gbW9yZSB0aHJvdWdoIHRoZSBwb2tpZXMuCkpPTkFUSEFOIERVSEFNRUw6IEkgYmVlbiBhIEhhYnMgZmFuIHNpbmNlIEkgd2FzIGJvcm4uIE9uZSBvZiBteSBmaXJzdCBtZW1vcmllcyBpcyB0aGUgMTk5MyBTdGFubGV5IEN1cCB3aW4uIEkgd2FzIGJvcm4gaW4gMTk4Nywgc28gSSBkaWRuIGdldCB0byBzZWUgdGhlIDE5ODYgU3RhbmxleSBDdXAgdmljdG9yeS4gCiJUaGUgbWF0Y2ggd2FzIGluIGRvdWJ0IGdvaW5nIGludG8gdGhlIGxhc3QgdHdvIGhvbGVzIGFuZCBNYXJhIEtyeXNpYWsgYW5kIFNhcmEgTWlsZXMsIG91ciBmb3VydGggYW5kIGZpZnRoIGdvbGZlcnMsIGNhbWUgdGhyb3VnaCBiaWcgZm9yIHVzIHdpdGggc2NvcmVzIG9mIDQ3IGFuZCA0OCwgcmVzcGVjdGl2ZWx5LCB0byBwdWxsIG91dCB0aGUgdmljdG9yeSwiIFNIUyBjb2FjaCBEYW4gU2NodWx6IHNhaWQuIApEYWRkeSBieSBkYXksIHZpZ2lsYW50ZSBieSBuaWdodCAgIHdoeSBJIHRha2Uga25pdmVzIG9mZiB0aGUgc3RyZWV0c0Zhcm9uIEFsZXggUGF1bCBydW5zIGFuIGluZm9ybWFsIGtuaWZlIGFtbmVzdHksIG9mZmVyaW5nIHBlb3BsZSB2b3VjaGVycyBpZiB0aGV5IGhhbmQgdGhlaXIgd2VhcG9ucyBpbnRvIGhpbSB0byBnaXZlIHRvIHRoZSBwb2xpY2UuCkZpc2NoZXIgc2F5cyBiZWluZyBsb2NhdGVkIGluIENvbG9yYWRvIGhhcyBkb25lIHdvbmRlcnMgZm9yIHJlY3J1aXRpbmcgYW5kIHJldGFpbmluZyBlbXBsb3llZXMsIGVzcGVjaWFsbHkgYXMgRGVudmVyIGhhcyBldm9sdmVkIGludG8gYSB0ZWNoIGFuZCBzdGFydHVwIGh1Yi4gQnV0IHRoYXQncyBub3QgdGhlIG9ubHkgcmVhc29uLiAKSSd2ZSBidWlsdCBhIGZldyBncmVhdCBjb21wYW5pZXMsIGFuZCB3aXRoIHRoYXQgY29tZXMgYSByZXNwb25zaWJpbGl0eSB0byBteSBpbnZlc3RvcnMgYW5kIGEgcmVzcG9uc2liaWxpdHkgdG8gbXkgZW1wbG95ZWVzLiAKV2VudCBiYWNrIHRoZSBuZXh0IHdlZWsgYW5kIGRlY2lkZWQgdG8gdGFrZSBhZHZhbnRhZ2Ugb2YgdGhlIHByaWVzdHMgaGVhcmluZyBjb25mZXNzaW9uIGJlZm9yZSBtYXNzLiBOb3cgaWYgeW91IGRvbiBrbm93IHRoZSBDYXRob2xpYyByaXR1YWwgZm9yIGNvbmZlc3Npb24sIHlvdSBiYXNpY2FsbHkgc3RhcnQgYnkgc2F5aW5nICJCbGVzcyBtZSBGYXRoZXIgZm9yIEkgaGF2ZSBzaW5uZWQsIGl0IGhhcyBiZWVuIChYIGFtb3VudCBmb3IgdGltZSkgc2luY2UgbXkgbGFzdCBjb25mZXNzaW9uLiIgTm93IGV2ZW4gd2hlbiBJIHdhcyBzdGlsbCBhIHJlZ3VsYXIgYXQgYWdlIDE0LCBJIGhhZG4gd2VudCB0byBjb25mZXNzaW9uIGluIGEgbG9uZyB0aW1lLiAKU29sZGllcnMgYWxzbyBlbmQgdGhlIHZpZGVvIGJ5IGFzc3VyaW5nIHVzIHRoYXQgIm5vIG9uZSBpcyB0aGlzIHZpZGVvIGlzIGdheS4gVGhhdCB3ZSBrbm93IG9mLiIgb2YgY291cnNlIHRoZXkgbXVzdCwgYmVjYXVzZSBubyBvbmUgaXMgYWxsb3dlZCB0byBiZSBvcGVubHkgZ2F5IHVuZGVyIHRoZSBEQURUIHBvbGljeS4uIApTb2NpYWxpemF0aW9uIGlzIG92ZXJyYXRlZCBhbmQgaXMgb25seSBhIG1vZGVybiBpZGVhLiBObyBvbmUgZ2F2ZSBhIGZ1Y2sgYWJvdXQgbWFraW5nIHN1cmUgeW91ciBkb2cgaGFkIGRvZ2d5IGZyaWVuZHMgdW50aWwgbGlrZSB0aGUgcGFzdCAxMCB5ZWFycyBhbmQgdGhpbmdzIHdlbnQgcGVyZmVjdGx5IGZpbmUuIFRyYWluaW5nIGFuZCBleGVyY2lzZSBzaG91bGRuIGJlIGEgaGFzc2xlIGlmIHlvdSBvd24gYSBkb2cgdGhvdWdoLCB5b3Ugc2hvdWxkIHdhbnQgdG8gaW50ZXJhY3QgYW5kIHBsYXkgYW5kIGhhbmcgb3V0IHdpdGggeW91ciBkb2cuLiAKSGlzIG1vbSBzZWVzIGhpbSBvbmNlIGEgeWVhciBpZiB0aGF0IG5vdy4gVGhhdCBkb2VzbiBmaXggdGhlIHByb2JsZW1zIHRob3VnaC4gCk1hcmtldCBmdWxseSBvcGVuc1N0YXJzIEdyb3VwIEluYy4gTWFya2V0IGZ1bGx5IG9wZW5zLiAKUG9pbnRpbmcgb3V0IGEgbWFqb3IgYmx1bmRlciBvZiB0aGUgQ1dDLCBTTkRSUCBoYWQgd3JpdHRlbiB0byB0aGUgQ1dDIG9uIEp1bmUgMTIsIDIwMTMsICJDV0Mgc2l0ZSByZXBvcnRlZCB0aGF0IHdhdGVyIGxldmVsIG9mIEJyYWhtYXB1dHJhIHJpdmVyIGF0IE5lYW1hdGlnaGF0IHNpdGUgaW4gSm9yaGF0IGRpc3RyaWN0IGluIHJlYWNoZWQgOTQuMjEgbSBhdCAwOTAwIGhycywgd2hpY2ggd2FzIDYuODQgbSBhYm92ZSB0aGUgaGlnaGVzdCBmbG9vZCBsZXZlbCBvZiB0aGUgc2l0ZSBhdCA4Ny4zNyBtLiBUaGUgRkYgc2l0ZSBhbHNvIGZvcmVjYXN0IHRoYXQgdGhlIGxldmVsIHdpbGwgYmUgOTQuMTUgbSBhdCAwOTAwIGFtIG9uIEp1bmUgMTIsIDIwMTMuIHRoZSByZWNvcmRpbmcgYW5kIGZvcmVjYXN0IHdlcmUgY2xlYXJseSB3cm9uZywgcmF0aGVyIHdheSBvZmYgdGhlIG1hcmsuIFRoZSBzaXRlIG9yIHRoZSBhcmVhIGluIHF1ZXN0aW9uIG9yIHVwc3RyZWFtIGFuZCBkb3duIHN0cmVhbSBsZXZlbHMgZG8gbm90IG1hdGNoIHdpdGggd2hhdCB0aGUgc2FpZC4iCkFuZCBpZiB0aGV5IGdpdmUgYSBzaGl0IGFib3V0IG1lIGFuZCBteSBleHBlcmllbmNlLCBpdCBzZWVtcyBodW1hbmUgdG8gZ2l2ZSBhIHNoaXQgYWJvdXQgdGhlbSBhbmQgdGhlaXIgd2lsbGluZ25lc3MgdG8gdW5kZXJzdGFuZCBtZSBiZXR0ZXIuLiAKRnJvbSAxOTk4IHRpbGwgMjAwMyBJIHdhcyB0aGUgQ0lPIG9mIGEgbGFyZ2Ugb2ZmIHNob3JlIHNwb3J0cyBib29rLiAKVG8gZGF0ZSBhIHRvdGFsIG9mICQ3MywwMDAgaGFzIGJlZW4gcmFpc2VkIGZyb20gdGhlIHRocmVlIFBva2VyNFByb3N0YXRlIGV2ZW50cy4gCkhlYWQgaGFkIGFib3V0ICQ2LDAwMCBzdGFzaGVkIHVuZGVyIGhpcyBiZWQgICB3YXMgYSBwcmV0dHkgZ29vZCBwb2tlciBwbGF5ZXIgICBhbmQgcmVudGVkIGEgdGlueSBzcGFjZSBpbiBhbiBpbmR1c3RyaWFsIGFyZWEuIEhlIGFuZCB0aHJlZSBtZWNoYW5pY3MgZnJvbSBNYXJ0aW4gd29ya2VkIG5pZ2h0cyBhbmQgd2Vla2VuZHMgYnVpbGRpbmcgc2tpcy4gCkJ1dCB0aGUgQUggbWFkZSB0cmFkaW5nIHNvIGNvbnZlbmllbnQsIGVhc3ksIGFuZCBzYWZlLCBpdCBzdWNrZWQgYXdheSB0aGUgc291bCBvZiBmYXJtaW5nIGFuZCBnZXR0aW5nIHVwZ3JhZGVzLiAKRXhjZXB0IHlvdSBkb24gc3RpY2sgd2l0aCB0ZWFtbWF0ZXMgc2hvdWxkZXIgdG8gc2hvdWxkZXIsIHlvdSBwb3NpdGlvbiB5b3Vyc2VsZiBpbiBwbGFjZXMgd2hlcmUgeW91IGNhbiBjb3ZlciBtdWx0aXBsZSBzaWdodCBsaW5lcyB3aGlsZSB5b3VyIHRlYW1tYXRlcyBkbyB0aGUgc2FtZSwgb3ZlcmxhcHBpbmcgeW91ciBzaWdodCBsaW5lcy4KQW4gZWFzeSB3YXkgdG8gcHJhY3RpY2UgbWFpbnRhaW5pbmcgdGlnaHRuZXNzIGlzIHRvIGRvIHNvbWUgc3BvdG8gcHJlc3MuIEl0IGJhc2ljYWxseSBzdG9wcGluZyB0aGUgYmFyIGFib3V0IDEgMiIgYWJvdmUgdGhlIGNoZXN0IGFuZCBwYXVzaW5nIHRoZXJlIHNvIHlvdSBjYW4gcmVsYXguIApJdCBoYXBwZW5zIGEgZmV3IHNlY29uZHMgYWZ0ZXIgeW91IGRvdWJsZSB0ZWFtZWQgc28geW91IGhhdmUgdGltZSB0byBlc2NhcGU7IGlmIHlvdSBkb24gZXNjYXBlLCB0aGUgQUkgYnJpbmdzIGEgcGxheWVyIHlvdSBjYW4gcGFzcyB0aGUgYmFsbCB0by4gCkV2ZW4gaWYgeW91IHlvdXJzZWxmIGFyZSBub3QgZ29pbmcgdG8gYmUgd29ya2luZyBhdCBXYWwgTWFydCwgeW91IHdpbGwgaGF2ZSB0byBwYXkgZm9yIHRoZSBwZW9wbGUgd2hvIGRvLi4gClBhcnRpY2lwYW50cyBhdHRlbmRpbmcgYSBwc2lsb2N5YmluIHJldHJlYXQgY29tcGxldGVkIHRlc3RzIG9mIGNyZWF0aXZlIChjb252ZXJnZW50IGFuZCBkaXZlcmdlbnQpIHRoaW5raW5nIGFuZCBlbXBhdGh5LCBhbmQgdGhlIHNhdGlzZmFjdGlvbiB3aXRoIGxpZmUgc2NhbGUgb24gdGhyZWUgb2NjYXNpb25zOiBiZWZvcmUgaW5nZXN0aW5nIHBzaWxvY3liaW4gKE4gPSA1NSksIHRoZSBtb3JuaW5nIGFmdGVyIChOID0gNTApLCBhbmQgc2V2ZW4gZGF5cyBhZnRlciAoTiA9IDIyKS4gUmVzdWx0cyBpbmRpY2F0ZWQgdGhhdCBwc2lsb2N5YmluIGVuaGFuY2VkIGRpdmVyZ2VudCB0aGlua2luZyBhbmQgZW1vdGlvbmFsIGVtcGF0aHkgdGhlIG1vcm5pbmcgYWZ0ZXIgdXNlLiAKSmUgbWUgYmF0IGF2ZWMgbW9uIGNvcnBzIGRlcHVpcyBkZXMgbHVzdHJlcyAhIGFwcnMgbW91bHQgcmdpbWVzLCBkZSBraWxvcyBwZXJkdXMgZXQgc3VydG91dCByZXByaXMsIGplIG1lIHN1aXMgcG9zZSBjZXR0ZSBxdWVzdGlvbiBpbCB5IGEgcGV1IGRlIHRlbXBzIDogZXN0IHNpIGxlIHByb2JsbWUgdGFpdCBhaWxsZXVycywgZGFucyBtYSB0dGUgcXVvaS4gClNvYmV5cyBoYXMgYWx3YXlzIGJlZW4gdGhlIHdvcnN0IGdyb2NlcnkgY2hhaW4gaW4gQXRsYW50aWMgQ2FuYWRhLiBNb3N0IGV4cGVuc2l2ZSBvbiBuZWFybHkgZXZlcnkgaXRlbSAoSSBhc3N1bWUgZHVlIHRvIGxhY2sgb2YgbGFyZ2UgYnV5aW5nIHBvd2VyIGxpa2UgTG9ibGF3cywgb3IgV2FsbWFydCksIGluIHN0b3JlIGNvbXBsaW1lbnRzIGJyYW5kIGlzIHRlcnJpYmxlIHdoZW4gY29tcGFyZWQgdG8gdGhlIHF1YWxpdHkgb2Ygc3VwZXJzdG9yZSBibHVlIG1lbnUgb3IgdGhlIHByaWNlIG9mIFdhbG1hcnRzIGdyZWF0IHZhbHVlIGxpbmUuIFN0b3JlcyBhcmUgYmxlYWsgYW5kIGRlcHJlc3NpbmcgYW5kIHRoZXkgaW5zdWx0IHRoZWlyIGN1c3RvbWVycyB3aXRoIHRoZWlyIHN0dXBpZCBCT0dPIG9mZmVycyBieSBvYnZpb3VzbHkgbWFya2luZyB1cCB0aGUgcHJpY2Ugb2YgdGhlIGluaXRpYWwgaXRlbSB0byBjb3ZlciB0aGUgY29zdCBvZiB0aGUgc2Vjb25kIGFuZCB0aGVuIHByZXRlbmRpbmcgaXQgYSBzYWxlIGFuZCB0aGF0IHRoZWlyIGN1c3RvbWVycyBhcHBhcmVudGx5IG5ldmVyIHNob3AgYW55d2hlcmUgZWxzZSBhbmQgZG9uIGtub3cgdGhlIGF2ZXJhZ2UgcHJpY2UgZm9yIHRoYXQgaXRlbS4gClRoYXQgd2UgY2Fubm90IGFmZm9yZCBiZWNhdXNlIHRoZSBhbHRlcm5hdGl2ZSBpcyB1bnRoaW5rYWJsZS4gClRydW1wIGlzIGFjdGl2ZWx5IGp1aWNpbmcgdGhlIGVjb25vbXkgZm9yIHNob3J0IHRlcm0gZ2FpbnMuIApBIHByb2R1Y3RBIHBsYWNlIHRvIHNlbGwgdGhlIHByb2R1Y3QgICBpbiBlIGNvbW1lcmNlLCBhIFdlYiBzaXRlIGRpc3BsYXlzIHRoZSBwcm9kdWN0cyBpbiBzb21lIHdheSBhbmQgYWN0cyBhcyB0aGUgcGxhY2VBIHdheSB0byBnZXQgcGVvcGxlIHRvIGNvbWUgdG8geW91ciBXZWIgc2l0ZUEgd2F5IHRvIGFjY2VwdCBvcmRlcnMgICBub3JtYWxseSBhbiBvbiBsaW5lIGZvcm0gb2Ygc29tZSBzb3J0QSB3YXkgdG8gYWNjZXB0IG1vbmV5ICAgbm9ybWFsbHkgYSBtZXJjaGFudCBhY2NvdW50IGhhbmRsaW5nIGNyZWRpdCBjYXJkIHBheW1lbnRzLiBUaGlzIHBpZWNlIHJlcXVpcmVzIGEgc2VjdXJlIG9yZGVyaW5nIHBhZ2UgYW5kIGEgY29ubmVjdGlvbiB0byBhIGJhbmsuIApBbmQgaWYgeW91IGxpa2UgdG8gbG9vayBhdCBleGFtcGxlcyBvZiByYXBwZXJzIHRoYXQgcmh5bWUgaW4gbGFuZ3VhZ2VzIHRoZXkgbm90IGV2ZW4gZmx1ZW50IGluLCB5b3UgY2FuIGNoZWNrIEtvcmVhbiBoaXAgaG9wLiBGcm9tIHdoYXQgSSBlc3RpbWF0aW5nLCBhcyBtdWNoIGFzIGhhbGYgdGhlIHBvcHVsYXIgYXJ0aXN0cyBhcmUgS29yZWFuIEFtZXJpY2FucyB0aGF0IHZhcnkgdmVyeSB3aWRlbHkgb24gdGhlIHNwZWN0cnVtIG9mIGZsdWVuY3kgaW4gS29yZWFuIGJ1dCBzb21laG93IGFyZSBhYmxlIHRvIG1ha2UgZ3JlYXQgcmh5bWVzIHRoYXQgYXJlIGxvdmVkIGJ5IG5hdGl2ZSBzcGVha2Vycy4uIApLZWl0aGhpbGw3OCB1CldpdGhvdXQgYSBkb3VidCBwb3B1bGFyaXR5IG9mIG9ubGluZSBwb2tlciBoYXMgZXhwbG9kZWQgaW4gdGhlIHJlY2VudCB5ZWFycywgYXMgbXVjaCBhcyB0aGUgbGF3cyBhbmQgcmVndWxhdGlvbnMgY29uY2VybmluZyBwb2tlciBhcm91bmQgc2V2ZXJhbCBwYXJ0cyBpbiB0aGUgd29ybGQuIFRoaXMgdHVybnMgb3V0IHRvIGJlIGEgcmVhbCBwcm9ibGVtIGZvciBzZXZlcmFsIHBva2VyIHBsYXllcnMgaW4gdGhlIHdvcmxkLCBhbmQgc2V2ZXJhbCBwb2tlciBwbGF5aW5nIGFzc29jaWF0aW9ucyBhcmUgdHJ5aW5nIHRvIGZpZ2h0IHRoZSByZXN0cmljdGlvbnMuIApRdWFuZG8gY2FtYmlhIGxhIG11c2ljYSwgZXNwbG9kaTogcmlkaSwgdXJsYSwgcGlhbmdpLCBzYWx0YSwgc2N1b3RpdGksIG5lbGxhIHBpIGFzc29sdXRhIGZvbGxpYS4gUXVhbHNpYXNpIGNvc2EgYWZmaW9yaSBuZWxsYSB0dWEgbWVudGUgbyBhIGxpdmVsbG8gZW1vdGl2bywgZXNwcmltaWxhIHRvdGFsbWVudGUuIApMb3ZlIDMgVERzIGxlYWQgU3RhbmZvcmQgcGFzdCBOby4gOSBXYXNoaW5ndG9uIDMwIDIyV2FzaGluZ3RvbiB2IFN0YW5mb3JkUEFMTyBBTFRPLCBDQSAgIE5PVkVNQkVSIDEwOiBMYXZvbiBDb2xlbWFuIDIyIG9mIHRoZSBXYXNoaW5ndG9uIEh1c2tpZXMgZGl2ZXMgb3ZlciBKdXN0aW4gUmVpZCA4IG9mIHRoZSBTdGFuZm9yZCBDYXJkaW5hbCB0byB0cnkgdG8gc2NvcmUgYSB0b3VjaGRvd24gYXQgU3RhbmZvcmQgU3RhZGl1bSBvbiBOb3ZlbWJlciAxMCwgMjAxNyBpbiBQYWxvIEFsdG8sIENhbGlmb3JuaWEuIENvbGVtYW4gd2FzIHJ1bGVkIG91dCBvZiBib3VuZHMgb24gdGhlIDIgeWFyZCBsaW5lLiAKRGl2ZXJzaWZpY2F0aW9uIE1vbm9wb2x5IG1ha2VzIGEgdGltZSBob25vcmVkIHBvaW50IGFib3V0IHRoZSBpbXBvcnRhbmNlIG9mIHNwcmVhZGluZyB5b3VyIGludmVzdG1lbnRzIGFjcm9zcyBzZXZlcmFsIGNsYXNzZXMgb2YgcHJvcGVydHkgYW5kIG5vdCBzbGF2aXNobHkgZm9sbG93aW5nIHRoZSAic21hcnQgbW9uZXkuIiBUaGUgZ2FtZSBiZXN0IGludmVzdG1lbnRzIGFyZSB0aGUgb3JhbmdlIHByb3BlcnRpZXMgKG5vdCB0aGUgZGFyayBibHVlIG9uZXMsIFBhcmsgUGxhY2UgYW5kIEJvYXJkd2FsaywgYWJvdXQgd2hpY2ggbW9yZSBpbiBhIG1vbWVudCkuIApTaWUgYmVoYXVwdGV0ZSBkYXMgSnVkaXRoIEJ1dGxlciBhcmd1bWVudGllcmVuIHdyZGUsIGRhc3MgR2VuZGVyIGV0d2FzIHZvciBhbGxlbSBwZXJmb3JtYXRpdmVzIHNlaSwgc2ljaCBkZXNoYWxiIFRyYW5zcGVyc29uZW4gaWhyZW0gR2VuZGVyIGVudHNwcmVjaGVuZCB2ZXJoYWx0ZW4gc29sbHRlbiB1bSBha3plcHRpZXJ0IHp1IHdlcmRlbiwgVHJhbnNmcmF1ZW4gc28gd2llIGVzIGRpZSBHZXNlbGxzY2hhZnQgdm9uIEZyYXVlbiBlcndhcnRldCB1bmQgVHJhbnNtbm5lciB3aWUgZXMgZGllIEdlc2VsbHNjaGFmdCB2b24gTW5uZXJuIGVyd2FydGVuLgpIZXkgT1AgL3UvWGVSb0ZvUm0hIEkgbm9ybWFsbHkgZG9uIHNlbGYgcHJvbW90ZSBvbiBSZWRkaXQgYnV0IEkgdGhpbmsgb3VyIG11c2ljIGlzIHZlcnkgY2xvc2UgdG8gd2hhdCB5b3UgZGVzY3JpYmluZy4gSSBpbnZpdGUgeW91IHRvIHRha2UgYSBsaXN0ZW4gdG8gb3VyIGJhbmQgQWxtb3N0IEdvdCBDYXVnaHQsIGl0IG9uIFNwb3RpZnksIGlUdW5lcywgZXRjLiBJIHRoaW5rIHlvdSBsaWtlIHdoYXQgeW91IGhlYXIhIDMgcG9pbnRzICBzdWJtaXR0ZWQgMiB5ZWFycyBhZ28uIApUaGlzIGlzbid0IHRoZSBhcnRpY2xlIGVpdGhlciwgYnV0IGhlcmUgaXMgYSBndXkgZmlnaHRpbmcgZm9yIHByb3BlciBzaXRpbmcuIEhlIHNlZW1zClJlY2VudGx5LCB0aGUgSW5jb21lIFRheCBEZXBhcnRtZW50IGhhZCBzZW50IG5vdGljZXMgdG8gdGhvc2UgZGVhbGluZyBpbiBiaXRjb2lucyB3b3J0aCBScyAxIGNyb3JlIG9yIG1vcmUgZGFpbHkuIFRoZXNlIG5hbWVzIHdlcmUgYWxzbyBmb3J3YXJkZWQgdG8gdGhlIEVEIGFuZCBhIHByb2JlIGludG8gcG9zc2libGUgbW9uZXkgbGF1bmRlcmluZyBhbmQgZnJhdWQgd2FzIGluaXRpYXRlZC4gCkkgbm90IG9ubHkgbm90IHdhdmVkLCBidXQgZ2l2ZW4gZm9sa3MgdGhlIGJpcmQgd2hvIGNhbWUgdG8gYSBmdWxsIHN0b3AgdG8gImxldCBtZSBnby4iIFRoYXQgbm90IGJlaW5nIG5pY2UsIHRoYXQgYmVpbmcgc3R1cGlkLCBhbmQgaXQgdG9vayBtb3JlIHRpbWUgZm9yIHRoZW0gdG8gc3RvcCBhbmQgZm9yIG1lIHRvIHJlYWxpemUgd2hhdCBkdW1iYXNzIG1vdmUgdGhleSBhcmUgdHJ5aW5nIHRvIG1ha2UgdGhhbiBpZiB0aGV5IGp1c3Qga2VwdCBkcml2aW5nIGFuZCBJIHB1bGxlZCBvdXQgYmVoaW5kIHRoZW0uIApBbm90aGVyIHRoaW5nIHRoYXQgeW91IG5lZWQgdG8gdGhpbmsgYWJvdXQgYmVmb3JlIHlvdSBwaWNrIHVwIGEgZm9sZGluZyBvdmFsIHBva2VyIHRhYmxlIGlzIHRoZSBzcGFjZSB0aGF0IHlvdSBoYXZlIHdoZW4gdGhlIHRhYmxlIGlzIHNldCB1cC4gTm90IG9ubHkgZG9lcyB0aGUgcm9vbSBpbiBxdWVzdGlvbiBuZWVkIHRvIGhhdmUgZW5vdWdoIHNwYWNlIGZvciB0aGUgdGFibGUsIHlvdSB3aWxsIGZpbmQgdGhhdCBpdCBuZWVkcyB0byBoYXZlIGEgZmFpciBhbW91bnQgb2Ygc3BhY2UgZm9yIHRoZSBjaGFpcnMgYXMgd2VsbC4KU29tZW9uZSB3aG8gaGFzIHJlYWNoZWQgc2tlbGV0YWwgbWF0dXJpdHkgd2lsbCBoYXZlIGEgUmlzc2VyIHNpZ24gb2YgNS5UaGlzIHdhcyB0YWtlbiBmcm9tIHRoZSBmaXJzdCBwYXJhZ3JhcGggb2YgdGhlIGNpdGVkIHRleHQsICJNYW55IHBhdGllbnRzIHdpdGggQUlTIGhhdmUgbW9yZSBwYWluIGJ1dCBkbyBub3QgZXhoaWJpdCBtb3JlIGRpc2FiaWxpdHkgdGhhbiB0aGUgZ2VuZXJhbCBwb3B1bGF0aW9uLiBEZXByZXNzaW9uIGRvZXMgbm90IHNlZW0gdG8gYmUgbW9yZSBvZiBhIHByb2JsZW0gdGhhbiBpbiB0aGUgZ2VuZXJhbCBwb3B1bGF0aW9uICg3OSkuIApUaGUgZGVwYXJ0bWVudCBhbHNvIHByb3ZpZGVzIGFtYnVsYW5jZSBzZXJ2aWNlcyAyNCBob3VycyBhIGRheSwgaW5jbHVkaW5nIGJhc2ljLCBpbnRlcm1lZGlhdGUgYW5kIGFkdmFuY2VkIGxpZmUgc3VwcG9ydCBzZXJ2aWNlcy4KSG9va2VyIG1ha2VzIGhpcyBwb2ludCBhbmQgZGlzbWlzc2VzIEFkcmlhbi4gSGUgY2FsbHMgYSBiYWxsaXN0aWNzIGV4cGVydCB3aG8gaXMgcGxheWVkIGJ5IHRoZSBBc2lhbiBndXkgd2hvIHdhcyB0aGUgbGl0dGxlIHNjaWVudGlzdCBpbiBCbGFkZSBSdW5uZXIgd2hvIG1hZGUgdGhlIGV5ZXMgdGhhdCBSdXRnZXIgSGF1ZXIncyBjaGFyYWN0ZXIgaGFkIGFuZCB0aGF0IFJ1dGdlciBraWxsZWQuIFRoZSBsaXR0bGUgZ3V5IGJsb3dzIHRoZSBjYXNlIHdpZGUgb3BlbiBhbmQgaW50aW1hdGVzIHRoYXQgaXQncyB0aGUgZ3V5IGNvcCdzIG93biBmYXVsdCBoZSBnb3Qgc2hvdCwgYW5kIGZyYW5rbHksIEkgaGF2ZSB0byBhZ3JlZS4gClRpZ2h0IHBhc3NpdmUgICBUaGlzIHN0eWxlIGJhc2ljYWxseSBjb25zaXN0cyBvZiBvbmx5IHBsYXlpbmcgdmVyeSBmZXcgaGFuZHMsIGFuZCBkb2luZyB2ZXJ5IGxpdHRsZSBiZXR0aW5nIG9yIHJhaXNpbmcuIApJIGhhZCB0byB3b3JyeSBhYm91dCB3YXMgaG9ja2V5LiAKQSBKYWNrc29uIGJhc2VkIGNoYXJpdHkgcG9rZXIgYnVzaW5lc3MgaXMgaW4gZXhwYW5zaW9uIG1vZGUuIApGb3IgZXZlcnkgc3Bva2VuIHdvcmQsIGl0IGlzIGFjdHVhbGx5IGEgY2FzZSBvZiB3aGV0aGVyIHRoZSBnbGl0dGVyIGluIHRoZSBleWUgaW5kaWNhdGVzIGFuZCByZWZsZWN0cyB0aGUgc3BlZWNoIHNpbWlsYXJseSBvciBkb2VzIGl0IGNvbnZleSByZXNlbnRtZW50LiAKVGhlIGNhc3RsZSBpcyBhIFNjaGVkdWxlZCBBbmNpZW50IE1vbnVtZW50IGFuZCBHcmFkZSBJIGxpc3RlZCBidWlsZGluZywgd2l0aCBhIGNvbGxlY3Rpb24gb2YgYXJtb3VyeSBzZWNvbmQgb25seSB0byB0aGF0IG9mIHRoZSBUb3dlciBvZiBMb25kb24uT3ZlciBpdHMgbG9uZyBoaXN0b3J5LCBpdCBoYXMgYmVlbiBvd25lZCBieSAzNiBkaWZmZXJlbnQgaW5kaXZpZHVhbHMsIHBsdXMgZm91ciBwZXJpb2RzIGFzIENyb3duIHByb3BlcnR5IHVuZGVyIHNldmVuIGRpZmZlcmVudCBtb25hcmNocy5JdCB3YXMgdGhlIGZhbWlseSBzZWF0IG9mIHRoZSBFYXJscyBvZiBXYXJ3aWNrLCB3aGljaCBpbmNsdWRlZCBpbmhlcml0YW5jZSB0aHJvdWdoIHRoZSBmZW1hbGUgbGluZSBzbyB0aGUgY2FzdGxlIGhhcyBoYWQgdGhyZWUgd29tYW4gb3IgZ2lybCBvd25lcnMuRWxldmVuIG9mIHRoZSBtb251bWVudCdzIG93bmVycyB3ZXJlIHVuZGVyIHRoZSBhZ2Ugb2YgMjAgd2hlbiB0aGV5IGluaGVyaXRlZCwgaW5jbHVkaW5nIGEgZ2lybCBhZ2VkIHR3byBhbmQgYSBib3kgYWdlZCB0aHJlZS4gCkNhc2UgaW4gcG9pbnQ6IERpbm5lciB3aXRoIFNhcmFoIFBhbGluClBva2llcyBpbiB0aGUgaGFuZHMgb2YgcGFybGlhbWVudDogV2hpdGVMYWJvciBuZWVkZWQgc2l4IG1vcmUgc2VhdHMgdG8gd2luIGJhY2sgZ292ZXJubWVudCBvbiBTYXR1cmRheSBhbmQgb25seSBwaWNrZWQgdXAgdGhyZWUsIGJ1dCBNcyBXaGl0ZSBzYWlkIHRydWUgYmVsaWV2ZXJzIGNvdWxkIGhvbGQgdGhlaXIgaGVhZHMgdXAgaGlnaC4KRnJpZW5kcyBmb3JldmVyISBKZW5uaWZlciBBbmlzdG9uLCBMaXNhIEt1ZHJvdywgQ291cnRlbmV5IENveCwgTWF0dCBMZUJsYW5jIGFuZCBEYXZpZCBTY2h3aW1tZXIgY2FtZSB0b2dldGhlciB0byBob25vciB0aGVpciBGcmllbmRzIGRpcmVjdG9yIEphbWVzIEJ1cnJvd3MgbWFraW5nIE11c3QgU2VlIFRWOiBBbiBBbGwgU3RhciBUcmlidXRlIHRvIEphbWVzIEJ1cnJvd3MgcHJvYmFibHkgdGhlIG9ubHkgdGVsZXZpc2VkIEZyaWVuZHMgcmV1bmlvbiB3ZSdsbCBldmVyIGdldCB0aG91Z2ggaXQgZGlkbid0IGZlYXR1cmUgdGhlIGNvbXBsZXRlIHNldC4gClNvbWV0aW1lcywgeW91IGNhbiBhbHNvIGdldCBhd2F5IHdpdGggYSBjb25jZWFsZXIuIApUbyBhbGwgY29udGVudCBkaXN0cmlidXRlZCBieSBhbnkgbWVkaWEgbW9uaXRvcmluZyBzZXJ2aWNlLCB3aGV0aGVyIGxpY2Vuc2VkIGJ5IFNjb29wIG9yIG5vdCwgd2hlbiB0aGF0IGNvbnRlbnQgY2FuIGJlIHRyYWNlZCB0byBTY29vcCBvciBpdHMgcGFydG5lciB3ZWJzaXRlcy4gCiJXZSBhcmUgYXdhcmUgb2YgY29udmVyc2F0aW9uc3RoZSBTb3V0aCBBdXN0cmFsaWFuYW5kIE5TVyBoZWFsdGggZGVwYXJ0bWVudHMgaGF2ZSBiZWVuIGhhdmluZyB3aXRoIFZpY3RvcmlhLiIgTXJzIEdvbGRtYW4gc2FpZCB0aGUgVmljdG9yaWFuIGdvdmVybm1lbnQgY291bGQgZ28gYSBzdGVwIGZ1cnRoZXIgaW4gaW52ZXN0aW5nIGZ1cnRoZXIgaW50byBwcmV2ZW50YXRpdmUgbWVhc3VyZXMgYW5kIGVkdWNhdGlvbiBvZiBhc3RobWEgbWFuYWdlbWVudC4gIk91ciBvcGVyYXRpb25zIGluIFZpY3RvcmlhIGhhdmVuJ3RwcmV2aW91c2x5IHJlY2VpdmVkIFZpY0hlYWx0aCBmdW5kaW5nLCBzbyB3ZSdyZSBob3BpbmcgdGhpcyB3aWxsIG5vdCBiZSBhIG9uZSBvZmYgaW52ZXN0bWVudCwgYnV0IGEgbW9yZSBvbmdvaW5nIGVmZm9ydCB0byBlbnN1cmUgYXN0aG1hIGlzIHdlbGwgbWFuYWdlZCwiIHNoZSBzYWlkLiBJbnZlc3RtZW50IGNvdWxkIGFsc28gaGVscCBpbXByb3ZlIGRhdGEgb24gcG9sbGVuIGR1cmluZyBzcHJpbmcgaW4gYm90aCBWaWN0b3JpYSBhbmQgTlNXLiAKRHJhZ29ucycgRGVuIGlzIGJhY2sgYW5kIHNvIGFyZSB3ZS4gRWFjaCB3ZWVrLCBGaW5hbmNpYWwgUG9zdCBjb250cmlidXRvciBNYXJ5IFRlcmVzYSBCaXR0aSByZXZpc2l0cyBDQkMncyBwcmV2aW91cyB3ZWVrJ3MgZXBpc29kZS4gV2UgY2FwdHVyZSB3aGF0IHRoZSBjYW1lcmFzIGRpZG4ndCBhbmQgaW4gdGhlIHByb2Nlc3MgcHJvdmlkZSBhIGNhc2Ugc3R1ZHkgZm9yIHJlYWRlcnMsIHplcm9pbmcgaW4gb24gd2hhdCBwaXRjaGVycyBhbmQgZHJhZ29ucyB3ZXJlIHRoaW5raW5nIGFuZCB3aGF0IHRoZSBjaGFsbGVuZ2VzIGZvciB0aGUgZGVhbCBhcmUgZ29pbmcgZm9yd2FyZC4KV2hpbGUgbXkgbW9tIGFsd2F5cyBtYWRlIGZvb2QgaW4gYWR2YW5jZSBmb3IgdXMgaW4gdGhlIHdlZWtlbmRzL2V2ZW5pbmdzLCBwaXp6YSBhbmQgb3RoZXIgcG9wdWxhciBkZWxpdmVyeSBvcHRpb25zIHdlcmUgYSBzdGFwbGUgaW4gbXkgaG91c2UuIApJIHRoaW5rIHRoaXMgaXMgQ29udmljdGlvbiBvciBSaXNlIG9mIHRoZSBUb21iIFJhaWRlciBhbGwgb3ZlciBhZ2Fpbi4gQSBVYmlzb2Z0IGhlYWQgc2FpZCBpbiBhIHJlY2VudCBpbnRlcnZpZXcgdG8gYSBtZWRpYSBvdXRsZXQgdGhhdCAidGhleSBhcmUgZmlnaHRpbmcgZm9yIHJlc291cmNlcyIgZm9yIFNwbGludGVyIENlbGwuIApDb25mZXNzaW9uOiBJIGRvbiBuZWNlc3NhcmlseSBtaW5kIG5vdCBoYXZpbmcgdG8gdHJhaW4gZm9yIGEgbWFyYXRob24gdGhpcyBzdW1tZXIuIEp1c3QgZ290IGFuIGVtYWlsIHRvIHNpZ24gdXAgZm9yIERldHJvaXQgYmVmb3JlIHByaWNlcyBnbyB1cCBhbmQgSSBsZWFuaW5nIHRvd2FyZHMgdGhlIGhhbGYgbm90IHRoZSBmdWxsLiBCdXQgbXkgbWluZCBtYXkgY2hhbmdlLiBHdWguClRoZW4sIGlmIEkgc3RhcnQgb3ZlcmxvYWRpbmcgbXkgbWluZCB3aXRoIGFsbCB0aGVzZSBxdWVzdGlvbnMsIEkgYW0gc28gZm9jdXNlZCBvbiB0aGF0IGluc3RlYWQgb2YgZm9jdXNlZCBvbiB3aGF0IHdhcyBjYXVzaW5nIG1lIHRvIGhhdmUgdGhlIGF0dGFjayBpbiB0aGUgZmlyc3QgcGxhY2UuCkxlIGNoYW52cmUgYSBwZXJkdSBsZSBwcmVtaWVyIGRlIGNlcyBzdGF0dXRzIHBvdXIgZGV2ZW5pciB1bmUgZHJvZ3VlIGF1IHNlbnMgc2Vjb25kIGR1IHRlcm1lLCBjIHVuZSBzdWJzdGFuY2UgcHJvcHJlICBlbnRyYW5lciB1bmUgdG94aWNvbWFuaWUgIHRyYXZlcnMgbGFxdWVsbGUgY2UgbmUgc29udCBkb25jIHBsdXMgbGVzIGVmZmV0cyB0aHJhcGV1dGlxdWVzIHF1aSBzb250IHJlY2hlcmNocy4gCllvdSBzYWlkIHlvdSBkYXRlZCBmb3IgYSB5ZWFyIGFuZCBhIGhhbGYuIGFtIEkgdGhlIG9ubHkgb25lIHRoYXQgZmluZHMgaXQgb2RkIHRoYXQgaXQgdG9vayB0aGVtIHRoaXMgbG9uZyB0byBhc2sgeW91IHByZXR0eSBiYXNpYyBxdWVzdGlvbnMgYWJvdXQgeW91ciBmYW1pbHk/IEkgbWVhbiwgc2hlIGRpZG4ndCBrbm93IHlvdXIgbW9tIHdvcmtlZD8gSnVzdCBvZGQgdG8gbWUgdGhhdCBpZiBpdCB3YXMgc3VjaCBhIGJpZyBkZWFsIGRlYWwgYnJlYWtlciBzaGUgd291bGQgaGF2ZSB2ZXR0ZWQgeW91IHNvb25lci4KU28gSSBHb29nbGVkICJjbHVicyBzYWx0IGxha2UgY2l0eSIgYW5kIHRyaWVkIGNhbGxpbmcgdG9uaWdodCBidXQgY291bGRuIGdldCBhbnlvbmUgYXQgYW55IChjYWxsaW5nIHRvbyBlYXJseSBtb3N0IGxpa2VseSwgZXhjZXB0IGZvciBvbmUgZ2F5IGNsdWIgdGhhdCB3YXMgYXBwYXJlbnRseSBleHRyZW1lbHkgYnVzeSBldmVuIHRob3VnaCBHb29nbGUgc2FpZCBpdCB1c3VhbGx5IHF1aWV0IGFyb3VuZCB0aGUgdGltZSBJIGNhbGxlZCkuIApUaGVyZSBhcmUgdGhpbmdzIHRoYXQgYXJlbiBhcyBjbGVhciBpbiB0aGUgRW5nbGlzaCB2ZXJzaW9uLCBvZiB0aGUgdG9wIG9mIG15IGhlYWQsIEkgZ2l2ZSAyIHNjZW5lcyBhcyBhbiBleGFtcGxlIDogVGhlIG9uZSBhdCB0aGUgZW5kIG9mIENhcmliYmVhbiwgYW5kIHRoZSBvbmUgd2l0aCBWYW5pdGFzIGFmdGVyIGRlZmVhdGluZyBoaW0uVGhlIENhcmliYmVhbiBvbmUgaXMgd2l0aCBWZXhlbiwgd2hvIGlzIHdhdGNoaW5nIHRoZSB3aG9sZSB0aGluZyBhYm91dCB0aGUgYm94IHdpdGggdGhlIGJhZGRpZSBoZWFydCBpbiBpdCwgYW5kIEkgcmVtZW1iZXIgaGltIHNheWluZyB0aGF0IHRoZSBoZWFydCAoID4gSGVhcnQgKHVuZGVmaW5lZCkgKSB3YXNuIGFjdHVhbGx5IGEgSGVhcnQgKCA+IEtva29ybyA+IHRoZSAiTWluZCIgaW4gdGhlIEtIIHRyaW5pdHkgb2YgdGhlIFNlbGYpLiBPYnZpb3VzbHkgdGhhdCBvbmUgaXMgaWZmeSB0byB0cmFuc2xhdGUsIGJ1dCBpdCBjb3VsZCBoYXZlIGJlZW4gbWFkZSBjbGVhcmVyIHN0aWxsLlRoZSBvbmUgd2l0aCBWYW5pdGFzIGlzIHRlcnJpYmxlOyBGb3IgY29udGV4dCwgaXQgd2hlbiBWYW5pdGFzIHRlbGwgU29yYSBhbmQgVmVuIHRoYXQgdGhleSBhcmUgYnJvdGhlciB1bml0ZWQgYXMgYSBncmVhdGVyIHdob2xlIG9yIHNvbWV0aGluZywgYW5kIFNvcmEgYXNrIGhpbSB0aGVuIHdoeSBoZSBzdGFuZHMgd2l0aCBEYXJrbmVzcyBpbnN0ZWFkIG9mIHdpdGggdGhlbS4gQW5kIHRvIHRoYXQsIGluIHRoZSBFbmdsaXNoIHZlcnNpb24sIFZhbml0YXMgcmVwbGllcyB3aXRoICJCZWNhdXNlIEkgYW0gRGFya25lc3MuIApIZSdzIGFsc28gQUREIGFuZCBjYW4ndCBwYXkgYXR0ZW50aW9uIHRvIGFueXRoaW5nIGZvciBtb3JlIHRoYW4gYSBmZXcgc2Vjb25kcy4gSWYgc29tZWJvZHkgaXMgaG9sZGluZyB1cCB0aGUgZ2FtZSBiZWNhdXNlIHRoZXkncmUgbm90IGRlYWxpbmcgb3Igbm90IGJldHRpbmcsIGl0J3MgbGlrZWx5IGhpbS4gSGUncyBhbm5veWluZyBpbiBtYW55IHJlc3BlY3RzIGR1ZSB0byBoaXMgbGFjayBvZiBhcHByZWNpYXRpb24gZm9yIHRoZSBnYW1lLiAKSSBub3RpY2VkIG90aGVyIHBlb3BsZSBkZXNjcmliZSB0aGlzLCBhbmQgaGFkIHNvbWUgbHVjayB3aXRoIHBhaXJpbmcgYSBnb29kIHNldCBvZiBleHRlcm5hbCBhdWRpbyBtb25pdG9ycywgdXNpbmcgZ3JvdW5kIGxvb3Agbm9pc2UgaXNvbGF0b3JzIGlubGluZSwgdXNlIHRoZSBvcHRpY2FsIG91dCwgb3IgdXNlIGFuIGV4dGVybmFsIHNvdW5kIGNhcmQuIEkgZ3Vlc3MgdGhlIEhhZGVzIENhbnlvbiBiZWluZyBzbyBjb21wYWN0IGlzIG5vdCBleGFjdGx5IGlkZWFsIGZvciB1c2luZyBhcyBhIHNvdW5kIGNhcmQgaXRzZWxmLCBpdCBzZWVtcyB0byBiZSBub2lzeSBzZWxmIGludGVyZmVyZW5jZSwgZm9yIGV4YW1wbGUgdGhlIG1haW4gYXVkaW8gb3V0IGlzIGxvY2F0ZWQgcmlnaHQgbmV4dCB0byB0aGUgbWFpbiBEQyBwb3dlciByZWNlcHRhY2xlLiAKTmF2aSBjaGlwcywgb2J2aW91c2x5IGNhbiBiZSBvYnRhaW5lZCBmcm9tIE5hdmlzLCBleGNlcHQgZm9yIFJvbGwgY2hpcHMsIHdoaWNoIHlvdSBnZXQgZnJvbSBNYXlsLiAKIk1lZGljYWwgc2Nob29sIGN1cnJpY3VsYSBtdXN0IHBsYWNlIGEgZ3JlYXRlciBlbXBoYXNpcyBvbiBtdXNjdWxvc2tlbGV0YWwgbWVkaWNpbmUuClRoZSBzZWxlY3Rpb24gY29tbWl0dGVlIHBsYWNlZCBzZWNvbmQgc2VlZGVkIE1pY2hpZ2FuIFN0YXRlLCBOby4gMyBLYW5zYXMgYW5kIE5vLiA0IExvdWlzdmlsbGUgd2l0aCB0aGUgWmFncyBpbiB0aGUgV2VzdC4KSW4gb25lIG9mIG15IG93biByL3dvcmxkYnVpbGRpbmcgcHJvamVjdHMsIHNoaXAgdG8gc2hpcCBudWNsZWFyIG1pc3NpbGVzIChhbmQgbnVjbGVhciBtYXNzIGRyaXZlciBzaGVsbHMpIGFyZSBjb25zaWRlcmVkIGNvbW1vbiBleHBlbmRhYmxlIG11bml0aW9ucywgZW5zdXJpbmcgdGhhdCBhbnkgc2hpcCB0aGF0IHRha2VzIGEgZGlyZWN0IGhpdCBpbiBjb21iYXQgaXMgbGlrZWx5IHRvIGJlIGRpc2FibGVkIGlmIG5vdCBkZXN0cm95ZWQgb3V0cmlnaHQuIApJIGNhbiBibGFtZSBhbnlvbmUgZm9yIGZlZWxpbmcgdGhpcyB3YXksIGJlY2F1c2UgYXQgdGltZXMgSSBzaGFyZSB0aGVpciBmcnVzdHJhdGlvbiBhbmQgZ2V0IGp1c3QgYXMgamFkZWQsIGV2ZW4gbW9yZSBzbyBhZnRlciBzcGVuZGluZyBzb21lIHRpbWUgb24gdGhpcyBoZXJlIHdlYnNpdGUuLiAKSSBhYnNvbHV0ZWx5IGhhdGUgdG8gaGVhciB0aGUgImdhbmdzdGEiIGFjY2VudCwgZXNwZWNpYWxseSB3aGVuIGl0IHNvbWUgMTUgeWVhciBvbGQgd2hpdGUgYm95IGZyb20gdGhlIHN1YnVyYnMgZmFraW5nIGl0IHRvIHNvdW5kIGNvb2wuIFJlZ2FyZGxlc3Mgb2Ygd2hvIHNheXMgaXQsIGl0IHNvdW5kcyBsaWtlIHlvdSBhbiB1bmVkdWNhdGVkIG1vcm9uLiAKVGhlIGJsYWNramFjayBhdCB0aGUgSGlwcG8gaXMgbXVjaCBiZXR0ZXIgYmVjYXVzZSB5b3UgY2FuIGFjdHVhbGx5IGJlICtFViBpbiB0aGF0IGdhbWUgaWYgeW91IGNhcmQgY291bnQgcHJvcGVybHksIHdoaWNoIEkgZG8gd2hlbiBJIHBsYXkgdGhlcmUuIApBd2t3YXJkIHJhcHRvciAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxMSBtb250aHMgYWdvClRoZSB3b3JzdCBzY29yaW5nIG9mIHRoZSB0b3AgMyB0ZWFtcyBpcyBSaWNjaWFyZG8gd2l0aCA0NS80NyBwb2ludHMgYW5kIHRoZSBiZXN0IG9mIHRoZSByZXN0IGlzIE5pY28gSGxrZW5iZXJnIHdpdGgganVzdCA3IHBvaW50cy4gT3VjaC4KSSB0aGluayBpdCBpcyB2ZXJ5IGxpa2VseSB0aGV5IHdpbGwgc2hvdyB1cyBtb3JlIG9mIGl0LiBJIGtub3cgQmV0aGVzZGEgbGlrZXMgdG8gbm90IHNob3cgYSBnYW1lIG9mZiB1bnRpbCBpdCBpcyAicmVhZHkiIHRvIGNvbWUgb3V0IHRoYXQgeWVhciwgYnV0IEkgdGhpbmsgdGhleSB3aWxsIHRyZWF0IFN0YXJmaWVsZCBkaWZmZXJlbnRseS4gSXQgaXMgYSBicmFuZCBuZXcgSVAuIApOaWNob2xhcyBpbiBLaGFtb3ZuaWtpLiBEYXQga2Vya2plIHdhcyBvb2sgdmFuIGJpbm5lbiBoZWVsIGJpanpvbmRlcjogZGUgT3J0aG9kb3hlIGtlcmtlbiB6aWpuIHplZXIgc2ZlZXJ2b2whIE92ZXJkYWRpZyB2ZXJzaWVyZCBtYWFyIHRlZ2VsaWprIGluZ2V0b2dlbiwgZG9vciBkZSB2ZWxlIGthYXJzamVzIGVuIGRlIHZlbGUgZ2Vsb3ZpZ2VuIGRpZSBrb21lbiBiaWRkZW4gKHZyb3V3ZW4gZG9lbiBzdGVldmFzdCBlZW4gc2phYWx0amUgb3ZlciBodW4gaG9vZmQgZGF0IHplIGJsaWprYmFhciBhbHRpamQgYmlqIGhlYmJlbikuIApUTDtEUjogTm8gb25lIHdhbnRzIHRvIGhlYXIgdGhpcywgYnV0IHRoZSBtb3N0IGxpa2VseSBhbnN3ZXIgZm9yICJ3aHkgYXJlbiBJIHB1Ymxpc2hlZD8iIGlzbiAiYmVjYXVzZSBubyBvbmUgd2FudHMgdG8gcHVibGlzaCB3aGl0ZS9tZW4vc3RyYWlnaHQgYW55bW9yZS4iIFRoZXJlIGFyZSBteXJpYWQgZXhhbXBsZXMgb2YgcGVvcGxlIGV4YWN0bHkgbGlrZSB5b3Ugc3VjY2VlZGluZy4gVGhlIG1vc3QgbGlrZWx5IGFuc3dlciBpcywgInlvdXIgd29yayBpc24gdXAgdG8gcGFyIHlldC4iIERvbiBwbGF5IHRoZSB2aWN0aW07IHlvdSBvbmx5IGh1cnRpbmcgeW91cnNlbGYuLiAKSSd2ZSBzcGVudCBtYW55IGhvdXJzIG9ic2VydmluZyBoaW0gcGxheSBpbiBMb25kb24sIE1vbnRlIENhcmxvLCBCYXJjZWxvbmEgYW5kIExhcyBWZWdhcywgYW5kIEkndmUgcmFyZWx5IHNlZW4gaGltIHNwZWFrIHRvIGhpcyB0YWJsZSBjb21wYW5pb25zLiAKRGVhciBUb255OiBXZSBsaXZlIGluIGEgbGFyZ2Ugc3RyYXRhIGNvcnBvcmF0aW9uIHdpdGggMzAwIHVuaXRzIGluIG11bHRpcGxlIGJ1aWxkaW5ncy4gClNvbWUgb2YgdGhlc2Ugc2h1ZmZsZXJzIHVzZSBBQSBiYXR0ZXJ5IGFuZCBzb21lIG90aGVyIHVzZSBDIGJhdHRlcnkuIFRoZXNlIG1hY2hpbmVzIGFyZSBtYWRlIG9mIHBsYXN0aWMgYW5kIGNvdmVyZWQgd2l0aCBxdWFsaXR5IGxlYXRoZXIgb24gdGhpcy4gVGhlIHNpbXVsYXRpb24gaXMgd29uZGVyZnVsIGFuZCBpdCBsb29rcyBsaWtlIGEgcG9rZXIgcHJvIGluc3RydW1lbnQuIApQb2xpY3kgY2hhbmdlcyBieSBhbGwgZ292ZXJubWVudHMgaW5ldml0YWJseSBjb250cmlidXRlIHRvIHRoZSBkZW1pc2Ugb2Ygc29tZSBidXNpbmVzc2VzLCBlbWVyZ2VuY2Ugb2YgbmV3IG9uZXMsIG9yIHJlc3RydWN0dXJpbmdzIGFuZCBzbyBvbi4gClVuaWN5Y2xpc20gdQoiQm90aCBpbiB0ZXJtcyBvZiB0aGUgZmFjdCB0aGF0IGhlIHdhcyBleHRyZW1lbHkgaW5lYnJpYXRlZCwgaW5zaXN0aW5nIHRvIGdvIGhvbWUsIGFuZCBhcyB0aGUgZWxkZXIgYnJvdGhlciBieSBuaW5lIHllYXJzIHRoYXQgd2FzIHF1aWV0IHBlcnN1YXNpdmUuIAoiQmVjYXVzZSBoYW1zdHJpbmcgaW5qdXJpZXMgdHlwaWNhbGx5IHRoZSByZXN1bHQgb2YgYSBwdWxsLCBzdHJhaW4gb3IgdGVhciB0byB0aGUgbXVzY2xlIHJhbmsgYW1vbmdzdCB0aGUgbW9zdCBjb21tb24gaW5qdXJpZXMgYWZmZWN0aW5nIGZvb3RiYWxsIGNoZWVybGVhZGVycywgd2Ugd2VyZSBlYWdlciB0byBpZGVudGlmeSB0aGUgdW5jaGFydGVkIGJlbmVmaXRzIHRoYXQgYW4gZXZpZGVuY2UgYmFzZWQgZXhlcmNpc2UgaW50ZXJ2ZW50aW9uIGNvdWxkIG9mZmVyIHRob3NlIHdobyBzdWZmZXIgZnJvbSB0aGVzZSBvZnRlbiBkaWZmaWN1bHQgdG8gdHJlYXQgY29uZGl0aW9ucy4iCiJUaGUgdHlwZSBvZiBpbmVxdWFsaXR5IGFuZCB2aW9sZW5jZSBmb3VuZCBpbiB0aGUgd29ybGQgdG9kYXkgd2lsbCBlbmQgYmVjYXVzZSBvZiBvdXIgZ2VuZXJhdGlvbi4iLiAKVGhlIHNjaWVudGlzdHMgY29tbWVudGVkIGZpbmRpbmcgc3VnZ2VzdHMgdGhhdCBvbWVnYSAzIFBVRkEgcmVkdWNlcyBpbmZsYW1tYXRpb24gYnkgc2VsZWN0aXZlbHkgaW5oaWJpdGluZyBtb25vY3l0ZSBhY3RpdmF0aW9uIHJhdGhlciB0aGFuIGVuZG90aGVsaWFsIGFjdGl2YXRpb24gYW5kIHN1cHBvcnRzIHRoZSBub3Rpb24gdGhhdCBvbWVnYSAzIFBVRkEgY2FuIGJlIHN1cHBsZW1lbnRlZCB0byBwcmV2ZW50IHRoZSBkZXZlbG9wbWVudCBhbmQgcHJvZ3Jlc3Npb24gb2YgYXRoZXJvc2NsZXJvc2lzLiBPbWVnYSBmYXRzIHdlcmUgZm91bmQgdG8gbG93ZXIgbGV2ZWxzIG9mIG94aWRpemVkIExETCBjaG9sZXN0ZXJvbCBtb2xlY3VsZXMgYW5kIGRlY3JlYXNlIHBhcnRpY2xlIHNpemUsIGJvdGggZmFjdG9ycyBrbm93biB0byBsb3dlciBjYXJkaW92YXNjdWxhciByaXNrLiBUaGUgZmF0cyB3ZXJlIGFsc28gZm91bmQgdG8gaW5oaWJpdCBwbGF0ZWxldCBhZ2dyZWdhdGlvbiBvciBjbHVtcGluZyBhbmQgcmVzb2x2ZSBwYXJ0aWNsZSBhZGhlc2lvbiBwcm9wZXJ0aWVzIHRvIGFsbG93IGJsb29kIHRvIGZsb3cgZnJlZWx5IHRocm91Z2ggdGhlIHZhc2N1bGFyIGFydGVyaWVzLgpUaGVzZSBndXlzIGFyZSBzdWNoIGJhc3RhcmRzIHRoYXQgdGhleSB0eXBpY2FsbHkgaGF2ZSBhIGZhdm91cmVkIHR5cGUgb2YgaHVtYW4gdG8gYnVsbHksIHNwZWNpYWxpc2luZyBpbiBlaXRoZXIgcGVkZXN0cmlhbnMgb3IgY3ljbGlzdHMuIApPbiB0aGUgb3RoZXIgaGFuZCwgYSBwZXJzb24gYmV0dGluZyBjbG9zZXIgdG8gdGhlbXNlbHZlcyBjYW4gc3ViY29uc2Npb3VzbHkgbWVhbiB0aGF0IHRoZSBtb25leSBpcyBleHBlY3RlZCB0byBiZSBjb21pbmcgYmFjayB0byB0aGVtLi4gClN1cmUsIHRoZSBwb29yIHF1YWxpdHkgcGFpbnQgbWFrZXMgdGhlIHNpdHVhdGlvbiBtdWNoIHdvcnNlLCBidXQgSSBoYWQgdHJvdWJsZSB3aXRoIGl0IGV2ZW4gb24gZmFpcmx5IGZyZXNoIGdsb3NzIHBhaW50LiBBY3R1YWxseSBpdCBldmVuIHdvcnNlIHRoYW4gbW9zdCBzdGFpbnMgYXJlLCBiZWNhdXNlIGl0IG9pbHksIHNvIHRoZXkgbWF5IHdlbGwgZGVjaWRlL25lZWQgdG8gdXNlIGEgc3RhaW4gYmxvY2sgY29hdCBhcyB3ZWxsIHdoaWNoIGlzIGhlbGxhIGV4cGVuc2l2ZSBwZXIgbGl0cmUuVGhlIG9ubHkgKHBhcnRpYWwpIHdheSBvdXQgb2YgdGhpcywgaXMgaWYgdGhlICJiZWZvcmUiIHBob3RvcyBhbmQgY29uZGl0aW9uIHJlcG9ydCwgd2hlbiB5b3UgbW92ZWQgaW4sIHNob3dzIHRoYXQgdGhlIHdhbGxzIHdlcmUgZHVlIHJlcGFpbnRpbmcgc29vbiBhbnl3YXksIGluIHdoaWNoIGNhc2UgeW91IG1heSBiZSBhYmxlIHRvIGFyZ3VlIHlvdSBzaG91bGQgb25seSBwYXkgaGFsZiAod2hhdCB5b3UgY2FsbCBhbiBhbW5lc3R5IGFnYWluc3Qgd2VhciBhbmQgdGVhcikuIApIZSBiYXNpY2FsbHkgaGFzIGRvdWJsZSB5b3VyIEFEQ3MgZGFtYWdlIGVhcmx5IGFuZCBjYW4gMyBiYXNpYyBhdHRhY2sgYSBzdXBwb3J0LCBzbyB5b3UganVzdCBnZXQgcHVzaGVkIGludG8gdG93ZXIgd2hpbGUgaGUgc3RhY2tzIGF3YXkuIApDbGFzc2ljIFdvVyBpcyBjb21pbmcgYW5kIGJvdGggc2lkZXMgd2lsbCBlbmpveSB0aGVtc2VsdmVzLiBJIGRvbnQgY2FyZSBpZiBjbGFzc2ljIGlzbnQgMTAwJSBtYXRjaCB0byB0aGUgcHJpdmF0ZSBzZXJ2ZXIgZXhwZXJpZW5jZS4gSXQgZG9lc250IGJvdGhlciBtZSBzb3JyeSB0byBkaXNzYXBwb2ludCwgYnV0IGZvciBzb21lIHJlYXNvbiBpdCBib3RoZXJzIHNvbWUgdGhhdCBwbGF5ZXJzIGhhdmUgZW5qb3llZCBwcml2YXRlIHNlcnZlcnMgZm9yIHllYXJzLiBUaGF0IGlzIGp1c3Qgd2VpcmQgdG8gbWUuClNvIHRoZXJlIHNob3VsZCBiZSB0d28gcGFydGllcyB3aGVyZSBvbmUgcGFydHkgYWN0IGFzIGEgc2VuZGVyIGFuZCBvdGhlciBwYXJ0eSBhY3QgYXMgYSByZWNlaXZlci4uIApGYXRBbmRJbmV4cGVyaWVuY2VkIHUKSSBub3QgYSBsYXcgb3IgY2l2aWNzIGVudGh1c2lhc3Qgc28gSSBkb3VidCBJIGNvdWxkIGNvbWUgdXAgd2l0aCB0aGUgYW5zd2VyIG15c2VsZiwgYnV0IEkgaGF2ZSB0byBpbWFnaW5lIHRoYXQgdGhlcmUgYXJlIG1hbnkgaGlnaCBtaW5kZWQgaW5kaXZpZHVhbHMgd29ya2luZyB3aXRoIHRoZSBkZW1vY3JhdHMgb24gdGhpcyBpc3N1ZSBhbmQgdGhleSBoYXZlIHRvIGtub3cgdGhlIG9wdGlvbnMgdGhleSBjYW4gdGFrZS4gCkkgd2lsbCB1c2UgbXlzZWxmIGFzIGFuIGV4YW1wbGUgYmVjYXVzZSBJIGRvIG5vdCB3YW50IHRvIHNwZWFrIGZvciBhbnlvbmUgZWxzZS4gSSBhbSBub3QgaG9tZWxlc3MgYnV0IEkgYW0gYXQgdGhlIGhvbWVsZXNzIHNoZWx0ZXIgcmVndWxhcmx5IHRvIGhlbHAgdGhlIHBlb3BsZS4gClRoaXMgaXMgbm90IGV4YWN0bHkgYSBmb29sIHByb29mIHRoaW5nIHRvIHJlbHkgb24sIGJ1dCBpdCBjYW4gYWlkIHlvdXIgc3RyYXRlZ3kgd2hpbGUgcGxheWluZyBvbmxpbmUgcG9rZXIuIEF0IGxlYXN0IHlvdSB3b3VsZCBrbm93IHdoYXQgdG8gc3BvdCB3aGVuIHlvdSBhcmUgYWxyZWFkeSBpbiB0aGUgZ2FtZS4gQWxzbywgYmUgbWluZGZ1bCBvZiB5b3VyIHBsYXlpbmcgc3R5bGUgYmUgaW1wdWxzaXZlIGFuZCBuZXZlciBrZWVwIGEgcGF0dGVybiBzaW5jZSB5b3VyIG9wcG9uZW50cyBtYXkgYmUgb2JzZXJ2aW5nIHlvdSBjbG9zZWx5IGFzIHdlbGwuLiAKQXMgaGUgbGF0ZXIgcmVjYWxsZWQsIGF0IHRoZSBvdGhlciBlbmQgb2YgdGhlIGxpbmUgd2FzIGhpcyBEZWZlbnNlIE1pbmlzdGVyLCBNYXJzaGFsIFJvZGlvbiBNYWxpbm92c2t5LiBBbiB1bmlkZW50aWZpZWQgcGxhbmUgaGFkIGNyb3NzZWQgdGhlIEFmZ2hhbiBmcm9udGllciBpbnRvIFNvdmlldCBhaXJzcGFjZS4gQm90aCBtZW4ga25ldyB3aG8gaGFkIHNlbnQgdGhlIHBsYW5lLi4gClllcywgaXRzIHdlYWtuZXNzZXMgYXJlIGJpZywgYnV0IG5vdCBpbXBvc3NpYmxlIHRvIGNvdmVyIHVwIHdpdGggb3RoZXIgdGVhbW1hdGVzLiBJdHMgZGFtYWdlIHBvdGVudGlhbCBpcyBhbHNvIHZlcnkgaGlnaCBhbmQgaGFuZGxlcyBzb21lIGtleSB0aHJlYXRzIGluIHRoZSBtZXRhIGFuZCBjYW4gZ28gdG9lIHRvIHRvZSBpZiBub3Qgd2luIHZlcnN1cyBhbnl0aGluZyBlbHNlLiBBbHRhcmlhIGlzIGFtYXppbmcgaW4gdGhpcyBjdXAgYXMgZmFyIGFzIEkgY29uY2VybmVkLCBhcyBsb25nIGFzIHlvdSBidWlsZGluZyB3aXRoIGl0IGNvcnJlY3RseS4gRG9lcyB0aGF0IG1lYW4geW91IGNhbiBzcGFtIGl0IGluIGV2ZXJ5IG1hdGNodXA/IFByb2JhYmx5IG5vdCwgYnV0IGlmIHlvdSBicmluZyBpdCBhbmQgcGxheSBpdCByaWdodCwgeW91IHdpbGwgZGVmaW5pdGVseSBkbyB3ZWxsClRyZWF0bWVudCBpcyBtb3JlIGNvcnJlY3RseSB2aWV3ZWQgYXMgZGlzZWFzZSBjYXJlLCBub3QgaGVhbHRoIGNhcmUuIApSaWdodCBub3csIHRoZXJlIGlzIHNvIG11Y2ggY29uZnVzaW9uIGluIHRoZSBtYXJrZXQgd2l0aCBtb3N0IGludmVzdG9ycyBub3QgZXZlbiB3ZWxsIHZlcnNlZCB3aXRoIHdoYXQgYSBjcnlwdG8gaXMgb3Igd2hhdCBzZXBhcmF0ZXMgZGlmZmVyZW50IGNvaW5zLCBub3QgdG8gc3BlYWsgb2Ygd2hhdCBwcml2YWN5IGNvaW5zIGFyZS4gClRoaW5rIGl0IG1ha2VzIGJldHRlciB3aW5lLiBNYWRlIGZyb20gb3JnYW5pYyBwb21hY2UgKGFrYSBncmFwZSBza2lucyBhbmQgc2VlZHMsIG9yIHdpbmUgd2FzdGUpLCB3aGljaCB3b3VsZCBvdGhlcndpc2UgYmUgZGlzY2FyZGVkLCBCaW9mbGF2aWEgaXMgYW4gaW5ncmVkaWVudCB0aGF0IGNhbiBiZSBhZGRlZCB0byBzbW9vdGhpZXMsIHlvZ3VydCwgY2VyZWFsLCBqdWljZSBhbmQgcG9ycmlkZ2UgYXMgYSBmb29kIHN1cHBsZW1lbnQgdG8gaGVscCBtZWV0IHlvdXIgZGFpbHkgcmVxdWlyZW1lbnQgb2YgYW50aW94aWRhbnRzLiAKU3RvcnkgU291cmNlOiBUaGlzIHN0b3J5IGlzIHJlcHJpbnRlZCAod2l0aCBlZGl0b3JpYWwgYWRhcHRhdGlvbnMgYnkgU2NpZW5jZURhaWx5IHN0YWZmKSBmcm9tIG1hdGVyaWFscyBwcm92aWRlZCBieSBTdGFuZm9yZCBVbml2ZXJzaXR5IE1lZGljYWwgQ2VudGVyLgpJIGhhdmUgY2VydGFpbiB0cmlnZ2VyIHNwb3RzIHRoYXQgY2FuIHVzZSBzcGVjaWFsIGF0dGVudGlvbiBmcm9tIHRpbWUgdG8gdGltZSwgYW5kIEkgYW0gc3VyZSB5b3UgZG8gdG9vLiAKRXZlbiBpbiBzb21lIG9mIHRoZSBwb29yZXN0IGFyZWFzIG9uIHRoZSBlbnRpcmUgZ2xvYmUsIHdlIGFyZSBzZWVpbmcgYSBtb3ZlIHRvd2FyZCBhIGNhc2hsZXNzIHNvY2lldHkuIApKdXN0IG5lZWQgdG8gZ2V0IG1vcmUgcGVvcGxlIG91dCBhbmQgY29ubmVjdGVkIHdpdGggdGhlIGNvbW11bml0eSBzbyB5b3Uga25vdyB0aGF0IHlvdSBjYW4gZG8gYW55dGhpbmcgeW91IHdhbnQgaGVyZSwgQ29vbWVzIHNhaWQuIGhhdmUgYWxsIHRoZSBzdXBwb3J0IHlvdSBuZWVkIHRvIGJlIGEgc3VjY2Vzc2Z1bCBlbnRyZXByZW5ldXIuIFlvdSBkb24gaGF2ZSB0byBsZWF2ZSB0aGUgY2l0eS4KTWFyc2hhIEFja2xhbmQsIGEgc2luZ2xlIG1vdGhlciBvZiB0aHJlZSwgdG9sZCBTaW5naCBob3cgbW91bGQgcHJvYmxlbXMgZm9yY2VkIGhlciBmYW1pbHkgb3V0IG9mIHRoZWlyIHJlbnRhbCBob21lLCBidXQgc2t5IGhpZ2ggcmVudGFsIHByaWNlcyBtYWRlIGl0IGltcG9zc2libGUgdG8gZmluZCBhbm90aGVyIHN1aXRhYmxlIHBsYWNlLgpXaGF0IHRoZXkgZG8gbm90IHNheSBpcyB0aGF0IHRoZSBhbW91bnQgb2YgbnV0cmllbnQgaW4gbGlxdWlkIGlzIG11Y2ggbGVzcyB0aGFuIGluIGEgY2Fwc3VsZSBvciBhIHRhYmxldC4gCkNlcnRpZmllZEFzc2hvbGUxNyB1Ck5vIHN1cmdlIGlzIGNyZWF0ZWQgYnkgYW55LiAKSGUgaGFkIHN1Y2ggYW4gZXh0cmFvcmRpbmFyeSBsaWZlIGluIHRoZSB3b3JzdCB3YXkgcG9zc2libGUuCldlIGhhdmUgYmVlbiB0b2dldGhlciBhbG1vc3QgNSB5ZWFycyBhbmQgaGF2ZSBhIDE3IG1vbnRoIG9sZCBzb24uIFdlIG1vdmVkIGluIHRvZ2V0aGVyIGEgY291cGxlIGRheXMgYmVmb3JlIEkgZ2F2ZSBiaXJ0aCB0byBvdXIgc29uLiBJIG5ldmVyIGltYWdpbmVkIGhlIGNvdWxkIGV2ZXIgY2hlYXQgb24gbWUgYW5kIHRob3VnaHQgaGUgd2FzIGEgZ3V5IHdpdGggbW9yYWxzLiBIb3dldmVyLCBhZnRlciBvdXIgc29uLCBJIGhhdmUgc2VlbiBhIGRpZmZlcmVudCBzaWRlIG9mIGhpbSB0aGF0IGhhcyB0YWludGVkIG15IHZpZXcgb24gaGltLiAKUG9saWNlIHNhaWQgdGhlIHR3byBicm90aGVycyB3b3JlIGdsb3ZlcyBkdXJpbmcgdGhlIHN0YWdlZCBhdHRhY2ssIGFuZCBkaWQgcHVuY2ggU21vbGxldHQsIGJ1dCB0aGUgc2NyYXRjaGVzIGFuZCBicnVpc2VzIG9uIFNtb2xsZXR0J3MgZmFjZSBtb3N0IGxpa2VseSB3ZXJlIHNlbGYgaW5mbGljdGVkLgpUaGUgd2VhcG9ucyB1c2VkIGluIHRoZSBhc3NhdWx0IHdlcmUgYSBoYW1tZXIsIGhhdGNoZXQsIGZpcmUgcG9rZXIsIGhvZSBhbmQgcGlzdG9sLiBUaGUgZmVtYWxlIHdhcyBoZWxkIGRvd24gd2hpbGUgdGhlIG1hbGUgcmVzaWRlbnQgd2FzIGFibGUgdG8gc29tZXdoYXQgZGVmZW5kIGhpbXNlbGYsIGF0IHdoaWNoIHRpbWUgdGhlIGZlbWFsZSByZXNpZGVudCBoYWQgdGhlIG9wcG9ydHVuaXR5IHRvIGZyZWUgaGVyc2VsZi4gCkthcm1pY3Zpb2xlbmNlIHUKV2hlbiBJIHdhcyBpbiAzcmQgZ3JhZGUgd2Ugd2VyZSBwcmV0dHkgYnJva2UgKExpa2UgYWxsIG9mIHVzIGxpdmluZyBpbiB0aGUgYmVkcm9vbSBhdCBteSBhdW50IGFuZCB1bmNsZSBob3VzZSBicm9rZSkgYW5kIGNvdWxkIGJhcmVseSBhZmZvcmQgZm9vZCBmb3IgdGhlIGhvdXNlLCBkZWZpbml0ZWx5IG5vdGhpbmcgZm9yIHBhY2tlZCBsdW5jaGVzIG9yIHBheWluZyBmb3Igc2Nob29sIGx1bmNoLiBVbHRpbWF0ZWx5IG15IGRhZCBoYWQgdG8gY29tZSB0byB0aGUgc2Nob29sIGFuZCB0aHJlYXRlbiB0byBwdWxsIG1lIG91dCAoSSB3YXMgYW4gQSBzdHVkZW50KSBmb3IgdGhlbSB0byBnaXZlIG1lIHNvbWUgc29ydCBvZiBncmFjZSBvbiBiZWluZyBhYmxlIHRvIGVhdCBsdW5jaC4KQnkgdGhlIGVuZCBvZiB0aGUgeWVhciwgd2hlbiBzY2hvb2wgd2FzIGxldHRpbmcgb3V0IGZvciB0aGUgc3VtbWVyLCBoZSBwYXNzZWQgbWUgYSBub3RlLCB3cml0dGVuIGluIG1hcmtlciBvbiBhIHRpc3N1ZS4gSSByZXdyb3RlIGl0IGluIG15IGpvdXJuYWw6ICJEZWVwbHkgYW5kIHRydWx5IHlvdSBhcmUgd2hhdCBtYWtlcyBtZSB3YW50IHRvIGdldCBvdXQgb2YgYmVkIGVhY2ggYW5kIGV2ZXJ5IGRheS4gSSBjYW5ub3QgcGljdHVyZSBteSBsaWZlIHdpdGhvdXQgeW91LiIKRmVkb3IgYXR0cmlidXRlcyBtdWNoIG9mIGhpcyBzdWNjZXNzIGluIHBva2VyIHRvIHRoZSBkZXZlbG9wbWVudCBvZiBoaXMgbWluZHNldC4gUHJpb3IgdG8gd2lubmluZyBhbnkgbWFqb3IgdG91cm5hbWVudHMsIGhlIHdvcmtlZCB3aXRoIHByb2Zlc3Npb25hbCBtaW5kc2V0IGNvYWNoIEVsbGlvdCBSb2UgdG8gaW1wcm92ZSBoaXMgcGxheWluZyBhYmlsaXRpZXMgdGhyb3VnaCBpbW1lcnNpdmUgbWVudGFsIGNvYWNoaW5nLiBOb3cgdW5vZmZpY2lhbGx5ICdyZXRpcmVkJyBmcm9tIHBva2VyLCBIb2x6IGlzIGRyaXZlbiB0byBtYWtlIG1pbmRzZXQgY29hY2hpbmcgc29tZXRoaW5nIGFueW9uZSBjYW4gZXhwZXJpZW5jZSBhbmQgYmVuZWZpdCBmcm9tLiAKVGhhdCBhIEhVR0UgaGVhZCBzdGFydCBpbiBsaWZlIGFuZCBvbiB0aGUgcGF0aCB0byB3ZWFsdGguIFRoZXkgZG9udCBoYXZlIHRvIHdvcnJ5IGFib3V0IGEgaGFsZiBhIG1pbGxpb24gZG9sbGFyIG1vcmdhZ2UsIHB1dHRpbmcgdGhlbSBpbnN0YW50bHkgYWhlYWQgb2YgOTklIG9mIG90aGVyIGxhdGUgMjBzb21ldGhpbmcgY291cGxlcy4gCiBsYSBmaW4gZHUgWFZJSUllIHNpY2xlLCBsZXMgY2hhbmdlcyBkZSBsYSBNYXJ0aW5pcXVlLCBkZSBsYSBHdWFkZWxvdXBlIGV0IGRlIFNhaW50IERvbWluZ3VlIGF2ZWMgbCd0cmFuZ2VyLCBjb25zdGl0dWFpZW50IGxlcyBkZXV4IHRpZXJzIGR1IGNvbW1lcmNlIGV4dHJpZXVyIGZyYW5haXMuIApJIHRoaW5rIHRoZSBjb25jZXB0IGlzIGEgdGFkIGZsYXdlZC4gSWYgdGhlIDI1IGJvdW50eSBpcyBhZGRlZCB0byB0aGUgcHJpemUgcG9vbCwgdGhlIDI1IHlvdSBlYXJuZWQgZnJvbSBnZXR0aW5nIHRoZSBib3VudHkgaXMgZXNzZW50aWFsIHNwbGl0IGJldHdlZW4gdGhlIGZpcnN0IDMgcHJpemVzLiBTbyBldmVuIGlmIHlvdSB3ZW50IG9uIHRvIHdpbiB0aGUgdG91cm5hbWVudCwgeW91IHN0aWxsIHdvdWxkbiByZWNlaXZlIHRoZSBmdWxsIGFtb3VudCBwZXIgYm91bnR5LiAKSEFNSUxUT04gICBSYXkgRW1lcnksIHRoZSBmb3JtZXIgTkhMIGdvYWx0ZW5kZXIgd2hvc2UgY2FyZWVyIHNwYW5uZWQgbW9yZSB0aGFuIGEgZGVjYWRlIGFuZCBpbmNsdWRlZCBzdG9wcyBpbiBPdHRhd2EsIENoaWNhZ28gYW5kIFBoaWxhZGVscGhpYSwgZHJvd25lZCBpbiBIYW1pbHRvbiBIYXJib3VyIG9uIFN1bmRheSwgcG9saWNlIHNhaWQuCkl0J3MgYSB3aG9sZSBkaWZmZXJlbnQgc3Rvcnkgd2l0aCBhIGhvdXNlLiAKSSBoYWQgYSBjb3dvcmtlciB3aG8gd291bGQgdGFsayBzaGl0IGFib3V0IG1lIGFuZCBhbm90aGVyIGNvd29ya2VyIG9uIHRoZSBBZG9iZSBmb3J1bXMuIEkgZ3Vlc3MgaXQgZGlkbid0IG9jY3VyIHRvIGhpbSBob3cgZWFzaWx5IHdlIGNvdWxkIGxvb2sgc3R1ZmYgdXAgb24gdGhlcmUuCkFDRSBpcyB0aGUgb2ZmaWNpYWwgb3BlcmF0b3Igb2YgdGhlIFNJRkUgcHJvZ3JhbSBpbiBDYW5hZGEuIApQRCByZXN1bHRzIGZyb20gdGhlIHByb2dyZXNzaXZlIGxvc3Mgb2YgZG9wYW1pbmVyZ2ljIG5ldXJvbnMuIFRoaXMgcmVzdWx0cyBpbiBwb29yIG11c2NsZSBjb250cm9sLCBhbW9uZyBvdGhlciBzeW1wdG9tcy5DQkQgYWN0cyBhcyBhbiBpbnZlcnNlIGFnb25pc3QgYXQgdGhlIEdQUjYgcHJvdGVpbiByZWNlcHRvcnMgb2YgdGhlIGJyYWluLCB3aGljaCBib29zdHMgZG9wYW1pbmUgbGV2ZWxzIHNpbmNlIGEgZGVwbGV0aW9uIG9mIEdQUjYgaXMgY29ycmVsYXRlZCB3aXRoIHRoaXMgZWZmZWN0IGluIHdheXMgd2UgZG9uIGZ1bGx5IHVuZGVyc3RhbmQgYXMgb2YgeWV0LlNvIG5vLCB0aGUgQ0JEIG9pbCBpcyBub3Qgc2xvd2luZyBkb3duIGhpcyBicmFpbiBmdW5jdGlvbiB0aGF0IHByZWNpc2VseSB0aGUgaXNzdWUgd2l0aCBQRC4gSXQgYm9vc3RpbmcgaGlzIGJyYWluIGZ1bmN0aW9uIGJ5IGVuc3VyaW5nIHRoZXJlIGlzIGVub3VnaCBvZiBhIGNydWNpYWwgbmV1cm90cmFuc21pdHRlciB0byBnbyBhcm91bmQuLiAKR292ZXJuaW5nIENvdW5jaWwgbm93IGV4cGVjdHMgdGhlIGtleSBFQ0IgaW50ZXJlc3QgcmF0ZXMgdG8gcmVtYWluIGF0IHRoZWlyIHByZXNlbnQgbGV2ZWxzIGF0IGxlYXN0IHRocm91Z2ggdGhlIGVuZCBvZiAyMDE5LCBhbmQgaW4gYW55IGNhc2UgZm9yIGFzIGxvbmcgYXMgbmVjZXNzYXJ5LCB0aGUgRUNCIHNhaWQgaW4gYSBzdGF0ZW1lbnQuIGhhZCBwcmV2aW91c2x5IHNhaWQgcmF0ZXMgd291bGQgcmVtYWluIGF0IHRoZWlyIHJlY29yZCBsb3cgbGV2ZWxzIHRocm91Z2ggdGhlIHN1bW1lci4KQWxzIFNhYmluYSBMYW5nZSBpaHIgUmVzdGF1cmFudCBpbSBBcHJpbCAyMDA5IGVyZmZuZXRlLCBoYXR0ZSBzaWUgZGllIGRhbWFscyBsZWVyc3RlaGVuZGVuIFJ1bWUgaW4gZGVyIENhbGxlIFJlYWwgMjkgZ2VyYWRlIHVtZmFzc2VuZCByZW5vdmllcnQsIGVpbmUgS2NoZSBlaW5nZXJpY2h0ZXQgdW5kIGF1cyBkZW0gZWhlbWFsaWdlbiBMYWRlbmxva2FsIGVpbiBuZXVlcyBSZXN0YXVyYW50IGdhbnogbmFjaCBpaHJlbiBWb3JzdGVsbHVuZ2VuIGtyZWllcnQuIEplZGVzIG5vY2ggc28ga2xlaW5lIERldGFpbCBpc3QgbWl0IExpZWJlIGdlc3RhbHRldCB1bmQgemVpZ3QgZXR3YXMgdm9uIGRlciBLcmVhdGl2aXR0IGRlciBDaGVmaW4gZGllIHNpZSBuaWNodCBudXIgaW4gZGVyIEtjaGUgYXVzbGVidC4gRGEgZGFzIGt1bGluYXJpc2NoZSBLb256ZXB0IGZyaXNjaCwgZ2VzdW5kLCBsZWNrZXIiIHZvbiBBbmZhbmcgYW4gZmVzdCBzdGFuZCwgZmllbCBkaWUgV2FobCBkZXMgTmFtZW5zIGtvbnNlcXVlbnRlcndlaXNlIGF1ZiBMYSBWaXRhbWluYSIuLiAKVGhleSBhbHRlcm5hdGUgcm93aW5nL2VyZ2luZy4gCldoYXQga2lsbHMgbWUgYXMgYSBndXkgdGhhdCBzZWVzIHNoaXQgbGlrZSB0aGlzIChhbmQgb3RoZXIgbW9yZSBtaW5vciBidXQgc3RpbGwgZ3Jvc3NlZCBvdXQgdmlld3BvaW50cyBmcm9tIG90aGVyIGR1ZGVzKSBpcyB0aGF0IGl0J3MgbGl0ZXJhbGx5IGp1c3QgYmxvb2QuIExpa2UgaXQncyBub3QgbGlrZSBnaXJscyBhcmUgbGVha2luZyBvdXQgc2xpbWUgbGlrZSBuZW9uIHllbGxvdyBwdXMsIHRoYXQnZCBiZSBncm9zcy4gQnV0IGl0J3MgYmxvb2QuIApUaGUgZmFjdCB0aGF0IHlvdSBhcmUgYXNraW5nIHRoZXNlIHF1ZXN0aW9ucyBwdXRzIHlvdSB1cCB0aGVyZSBhbHJlYWR5LiAKTWFrZSBvbmx5IGZpbmUgdHVuaW5nIHRvIHlvdXIgbG9va3MuIApEZXBlbmRpbmcgb24gd2hvIGVsc2UgYmV0cyBhbmQgd2hhdCB0aGUgbmV4dCBjYXJkIGlzLCB0aGF0IHN0cmF0ZWd5IGNhbiBjaGFuZ2UuIFBva2VyIHBsYXllcnMgYWxsIGhhdmUgdG8gcGxheSBieSB0aGUgc2FtZSBydWxlcy4gClRoaXMgaXMgYSBiaWcgdGhpbmcgcGVvcGxlIGFsd2F5cyBkb24gcmVhbGl6ZS4gSSB1c2VkIHRvIHdvcmsgYXQgYSBwbGFjZSBqdXN0IGxpa2UgRnJ5IChhbmQgYWxtb3N0IGFzIGluYWNjZXNzaWJsZSB0b28hKS4gClBhZGRvY2sgYmVnYW4gc2hvb3RpbmcgaW50byB0aGUgY3Jvd2QgYXR0ZW5kaW5nIHRoZSBSb3V0ZSA5MSBNdXNpYyBGZXN0aXZhbCBmcm9tIGhpcyBob3RlbCByb29tIGludG8gYSBjcm93ZCBvZiAyMiwwMDAgcGVvcGxlIGF0dGVuZGluZyB0aGUgUm91dGUgOTEgSGFydmVzdCBGZXN0aXZhbCBtdXNpYyBiZWxvdyBvbiBPY3QuIDEsIDIwMTcuIEhpc3Rvcnkgc2FpZCBoZSBoYWQgbWV0IHRoZSBzaG9vdGVyIG9uZSB0aW1lIGFuZCBzb2xkIGFtbXVuaXRpb24gdG8gaGltLi4gCiJBbmRyZXMgR2FsYXJyYWdhIHdhcyBteSBmYXZvcml0ZSwgYW5kIG9idmlvdXNseSBoZSB3YXMgYSBHaWFudCBhcyB3ZWxsLCIgQmxhY2ggc2FpZC4gIlRoZSBCbGFrZSBTdHJlZXQgQm9tYmVycywgdGhvc2Ugd2VyZSBteSB0ZWFtcy4gSXQgd2FzIGEgbG90IG9mIGZ1biB0byBiZSBhIFJvY2tpZXMgZmFuIGFuZCBqdXN0IHdhdGNoIHRoZSBiYWxsIGZseSBvdXQgb2YgdGhlIHBhcmsuIgpUb29rIG1lIGxlc3MgdGhhbiA1IG1pbnV0ZXMgdG8gZXhwZXJpZW5jZSB0aGUgbmV3IGNoYXJhY3RlciwgdGhlIDMwaXNoIGNvbG9yIHZhcmlhbnRzIG9mIHRoZSBzYW1lIGFybW9yIHRoYXQgd2FzIGFscmVhZHkgaW4gdGhlIGdhbWUsIGFuZCBhIG5ldyBtYXAgdGhhdCB3ZWxsLCBwcmV0dHkgYmxhbmQuIApTb21ldGltZXMgeW91IGFyZSBpbiBhIHNpdHVhdGlvbiB0aGF0IHN1Y2tzIHNvIGJhZCB5b3UganVzdCBIQVZFIHRvIGdldCBvdXQuamdzamdzNSAgNCBwb2ludHMgIHN1Ym1pdHRlZCA3IGRheXMgYWdvT2ggSSBub3Qgc3VycHJpc2VkIGF0IGFsbC4gCllvdSBkb24gZ2V0IGludG8gdGhvc2Ugd2l0aCBnYXJiYWdlIGdyYWRlcy4gUG9vciBwZW9wbGUgYXJlbiBnb2luZyB0byByZWFsaXplIHlvdSBuZWVkIHRvIGJ1eSB0aG9zZSAkNTAwKyBxdWVzdGlvbiBiYW5rcyB0byBjaHVybiB0aHJvdWdoIGJlY2F1c2UgbWVkaWNhbCBzY2hvb2xzIGRvbiBldmVuIHRlYWNoIHlvdSB3aGF0IHlvdSBzaG91bGQgYmUgc3R1ZHlpbmcgZm9yIHlvdXIgYm9hcmRzLiAKSWYgdGhlIGNsaWVudCB1c2VzIGFuIGluc3VsaW4gcHVtcCwgZG8gbm90IGdldCBtYXNzYWdlIGx1YnJpY2FudCBvbiB0aGUgc2Vuc29yLCB0cmFuc21pdHRlciwgcHVtcCwgb3IgaXRzIHR1YmluZy4gRm9yIGFkZGVkIGNvbWZvcnQsIG9mZmVyIHlvdXIgY2xpZW50IGEgc29mdCBjdXNoaW9uIHRvIHBsYWNlIG92ZXIgdGhlIHB1bXAgd2hpbGUgbHlpbmcgcHJvbmUuCldoaWxlIGJyb3dzaW5nIHRoZSBpbnRlcm5ldCB0byBkZWNpZGUgd2hlcmUgdG8gcmV2aWV3IG5leHQsIEkgdG9vayBhIGxvb2sgYXQgdGhlIHdlYnNpdGUgZm9yIEFsbCBTdGFycyBNYXNzYWdlIG9uIFN1a2h1bXZpdCBTb2kgMjQvMS4gClNvcnJ5IGJ1dCBldmVyeW9uZSByZXNwb25kaW5nIGlzIFdBWSBvZmYhIEl0J3Mgc3BsaXQgaW50byB0d28gZXBpc29kZXMgY3V6IHdobyB0aGUgZnVjayBjYXJlcyEgVGhlIHNlY29uZCBpcyB1c3VhbGx5IGp1c3QgbmV3cywgYW5kIGEgd3JhcCB3aXRoIHRoZSBndWVzdCwgZGVwZW5kaW5nIG9uIHRoZSBvdmVyYWxsIGxlbmd0aHMuIFRoZSBsaXZlIHJlYWRzIGFyZSBzbyBzaG9ydCBhbmQgTkVWRVIgaW50ZXJydXB0IHRoZSBmbG93IGN1eiBBZGFtIGlzIGEgZGFtbiBwcm8uIEhlIGhhcyBhbiBlbnRpcmUgc3RhZmYgdG8gcGF5IGFuZCB0aGlzIGlzIHRoZSBlYXNpZXN0IHdheSBmb3IgaGltIHRvIGRvIHNvLi4gCjVHIHdpbGwgcHV0IHRlY2ggaW50byBvdmVyZHJpdmUKT24gbCdpZ25vcmUgb3Ugb24gbCdvdWJsaWUsIG1haXMgTmlldHpzY2hlIHRhaXQgZ2FsZW1lbnQgbXVzaWNpZW4gZXQgYXZhbnQgZGUgcydlbmdhZ2VyIHBsZWluZW1lbnQgZGFucyBzYSBQZW5zZSBSYXZhZ2V1c2UgcXVpIHNlY291YSBsYSBQaGlsb3NvcGhpZSwgaWwgbGFpc3NhIHF1ZWxxdWVzIGNvbXBvc2l0aW9ucyBxdWkgbmUgbWFucXVhaWVudCBwYXMgZCdpbnRydC4gQ2UgIk1pc2VyZXJlIiwgc2kgbWEgbW1vaXJlIGVzdCBib25uZSwgZnV0IGNvbXBvcyBwYXIgdW4gamV1bmUgTmlldHpzY2hlIGRlIDE2IDE3IGFucywgYXZhbnQgc2EgZGNvdXZlcnRlIGRlIFNjaG9wZW5oYXVlciBxdWkgbHVpIGZpdCBwZXJkcmUgc2EgRm9pIGV0IGwnb3JpZW50YSBkYW5zIHVuIHByZW1pZXIgdGVtcHMgdmVycyBsYSBQaGlsb2xvZ2llIGF1IGdyYW5kIGRzZXNwb2lyIGRlIHNhIG1yZSBxdWkgbGUgdm91bGFpdCBwYXN0ZXVyIHByb3Rlc3RhbnQgY29tbWUgbCd0YWl0IGxlIHByZSBkdSBwaGlsb3NvcGhlLCBldCBjb21tZSBsJ3RhaWVudCBzZXMgZ3JhbmRzIHByZXMsIHBhdGVybmVscyBldCBtYXRlcm5lbHMuCkFmdGVyIGV2ZXJ5b25lIGhhcyBiZWVuIGdpdmVuIGEgY2hhbmNlIHRvIGJldCBvciBmb2xkLCB0aGUgRmxvcCBpcyBkZWFsdC4gClRoZSBkcmF3IGlzIGJlaW5nICJpbW1lcnNlZCBpbiB0aGUgZXhwZXJpZW5jZSBvZiBOb3J0aGZpZWxkIFBhcmssIG5vdCBqdXN0IHNpdHRpbmcgaW4gYSBtZWV0aW5nIG9yIHN0YW5kaW5nIGFyb3VuZCBhbmQgdGFsa2luZywiIHNoZSBzYWlkLiAiU29tZSBwZW9wbGUgd2lsbCBoYXZlIHRoZWlyIGNvcnBvcmF0ZSBtZWV0aW5nIGluIHRoZSBtb3JuaW5nLCB0aGVuIHdlIHdpbGwgZmVlZCB0aGVtIGx1bmNoLCB3aGljaCBtYXkgaW5jbHVkZSBhbm90aGVyIHByZXNlbnRhdGlvbiBvciBtZWV0aW5nLCBhbmQgdGhlbiB0aGUgdGVhbSB3aWxsIGdvIG91dCBhbmQgZ2FtZSBhbmQgc3BlbmQgdGhlIGFmdGVybm9vbiBob3BpbmcgdG8gd2luIHNvbWUgbW9uZXkuIApUaGFuayB5b3UgZm9yIHlvdXIgdW5kZXJzdGFuZGluZy4gCjI0KSBbVmVyeSBJbXBvcnRhbnRdICJBbHRob3VnaCB0aGUgZGlldHMgb2YgdmVnYW5zIGFuZCB2ZWdldGFyaWFucyBjb250YWluIHJlYXNvbmFibGUgYW1vdW50cyBvZiBBTEEgW2ZsYXhzZWVkIG9pbCwgZXRjLl0sIGl0IGlzIHVubGlrZWx5IHRoYXQgZW5vdWdoIGlzIGNvbnZlcnRlZCB0byBESEEgdG8gc2F0aXNmeSB0aGUgbmVlZHMgb2YgcHJlZ25hbmN5IGFuZCBsYWN0YXRpb24uIgpBIGxpdHRsZSBzbWFsbCwgcHJlZmVyIDEvMiBwb3Qgc2l6aW5nIGJ1dCBpdCBzdGlsbCBva2F5LiBHZXR0aW5nIHJhaXNlZCBhbGwgaW4gc3Vja3MuIFlvdSBibHVmZiBjYXRjaGluZyBoZXJlLCBzbyBpdCByZWFsbHkganVzdCBkZXBlbmRzIG9uIHdoYXQgeW91IHRoaW5rIG9mIHRoZWlyIGJsdWZmaW5nIHRlbmRlbmNpZXMuIElmIHRoZXkgYXJlIGJhbGFuY2VkLCBjYWxsIGlmIHlvdSB3YW50LiBJZiB0aGV5IG92ZXIgYmx1ZmYsIGNhbGwgYWxsIGRheS4gSWYgdGhleSB1bmRlciBibHVmZiwgc25hcCBmb2xkLiBJZiB5b3UgYWdhaW5zdCBhbiB1bmtub3duLCBqdXN0IGdvIGJ5IHBvcHVsYXRpb24gdGVuZGVuY2llcy4KVGhlcmUganVzdCB3ZXJlbiBhbnkgVEhFUkUuIiBBbmQgd2Ugc2FpZCBGdWNrIFlvdSBKaW0uIFRoZW4gd2UgcHJvYmFibHkgd2VudCB0byBXYXdhLiBKaW0gaXMgbm93IHNvbWUga2luZGEgbGF3eWVyIGxhc3QgSSBoZWFyZC4uIApIZSBnb3QgdG8gc2hhcmUgYSByb29tIHdpdGggb2xkIHBlb3BsZSBnZXR0aW5nIHRoZWlyIGd1dHMgd29ya2VkIG9uLiAKVGhvc2Ugd2hvIGdvdCBtZW1lIGFuZCBhY2NlcHRlZCBpdCwga2luZGEgYmVjYW1lIGJlbG92ZWQgaW50ZXJuZXQgZmlndXJlcywgd2hlcmUgc29tZSB3ZXJlIGFibGUgdG8gcmlkZSB0aGUgc21hbGwgd2F2ZSBpbnRvIG90aGVyIHRoaW5ncy4gVGhpbmsgUmFpbiBndXksIG9yIGF0dGFjaGVkIGdpcmxmcmllbmQgQnV0IHRob3NlIHdobyByZWFsbHkgcHVzaGVkIGF3YXkgZnJvbSB0aGUgaW50ZXJuZXQgZmFtZSB3ZXJlIGtpbmRhIHR1cm5lZCBvbiwgbGlrZSB0aGUgZ2lybCBEaWRuIGhlbHAgdGhhdCBTdG9wIGdpcmwgY2FsbGVkIFJlZGRpdG9ycyBsb3NlciBuZXJkcyBvciB3aGF0ZXZlciwgYnV0IHllYWguIFNob3VsZCBqdXN0IGVuam95IHRoZSA1IG1pbnV0ZXMsIG9yIGp1c3QgbGV0IGl0IGJlLi4gCklmIHlvdSBoYXZlIHRoZSBiYXNlIEdlbmVzeXMgYm9vaywgeW91IGdvdCB0aGUgc3lzdGVtIGRvd246IHRoZSBIYWNraW5nIHN0dWZmIGFuZCB0aGUgc2V0dGluZyBmbGF2b3IgdGhpbmdzIGFyZSB0aGUgbmV3IHN0dWZmIHRoYXQsIGluIG15IG9waW5pb24sIG1ha2UgdGhlIGdhbWUgd29ydGggYnV5aW5nLiBQbHVzLCB0aGVyZSBhIGJ1bmNoIG9mIGdlbmVyaWMgbG9jYXRpb25zIGluIHRoZSBjaXR5IG9mIE5ldyBBbmdlbGVzIHRoYXQgY2FuIGVhc2lseSBiZSBwb3J0ZWQgdG8gbG9jYXRpb25zIGluIGEgNSBvciAyMCBNaW51dGVzIGludG8gdGhlIEZ1dHVyZSBzZXR0aW5nLCBzbyB0aGUgc2V0dGluZyBkZXNjcmlwdGlvbiBzZWN0aW9uIGlzbiBhIHdhc3RlIGlmIHlvdSB1c2Ugc29tZSBvdGhlciBzZXR0aW5nLi4gClRoYXQgaXMgYSByZWFsbHkgdG91Z2ggZGVjaXNpb24gaWYgdGhhdCBzb21ldGhpbmcgdGhhdCBib3RoZXJzIHlvdS4gCkRvbid0IHVzZSBwb2tlciBhcyBFc2NhcGlzbSBGb3IgdGhlIHNhbWUgcmVhc29ucyBhcyBkcmlua2luZywgdGhpcyBkb2Vzbid0IGFwcGx5IGlmIHlvdSdyZSBqdXN0IHBsYXlpbmcgd2l0aCBmcmllbmRzIGJ1dCBpZiB5b3UgYXJlIHBsYXlpbmcgc2VyaW91c2x5IHRoZW4geW91IHNob3VsZCBiZSBmb2N1c2VkLiAKV2hlbiB5b3Ugc2F5IHlvdSBjb25zaWRlciBpbnRlbGxpZ2VuY2UgdG8gYmUgdGhlIHZhcmlhYmxlIHRoYXQgbWF0dGVycyAgIGFnYWluLCB0aGF0IGJlY2F1c2UgeW91IGNob3NlbiB0aGF0IChhcyBhIGh1bWFuKSBiZWNhdXNlIGl0IHNvbWV0aGluZyB0aGF0IGhhcyBoZWxwZWQgaHVtYW5zIHN1cnZpdmUuIApUaGUgdHJvdWJsZSBpcyB0aGF0IGEgc2luZ2xlIGhhbmQgY2FuIHJ1biB5b3Ugb3V0IG9mIHRvd24uIApZb3Ugd2lsbCBuZXZlciBldmVyIGdldCB1bmRlciBhbnkgZG91YnQgYXMgYSBjZWxsIHBob25lIGlzIGEgbm9ybWFsIGRldmljZSB3aGljaCBpcyB1c2VkIGJ5IGFsbW9zdCBldmVyeW9uZS4uIApXaGVyZSBpcyBzaGU/IGhvcnJpYmxlIGhhcyBoYXBwZW5lZC4gRG8geW91IG1lYW4gS2F0aWU/IGp1c3QgZ290IGEgcGhvbmUgY2FsbCBmcm9tIGhlci4gU2hlIGdvdCBpbnRvIGEgY2FyLiAKRURJVDI6IHRoZXNlIGFsc28gYXJlbiBhbGwgdXAgdG8gZGF0ZSBhcyBpIHdvcmsgZm9yIGEgc29tZW9uZSB3aG8gaSBrbm93IHdhcyB0ZXN0ZWQgaW4gdGhlIG1pZGRsZSBvZiBsYXN0IHllYXIgYW5kIHRoZSByZXBvcnQgb24gbXkgbGluayBpcyBzdGlsbCBmcm9tIDIwMTcuCkFzIGl0IGhhcHBlbnMgaXQgd2FzIEpvaG5ueSB3aG8gZ290IG1lIHN0YXJ0ZWQuIEkgcmFpc2VkIGhpcyBCQiAoZm9yIHRoZSB0aGlyZCB0aW1lKSB3aXRoIHBvY2tldCBuaW5lcy4gCk1vc3RseSBiZWNhdXNlIGNyZWVwcyBhc3N1bWUgdGhleSB3aWxsIGdldCBoaXQgaW4gdGhlIGZhY2UuIApXaGlsZSBFbmdsYW5kIGJhdHRlZCBpbiBhIFRlc3QgYXQgSm9oYW5uZXNidXJnIGR1cmluZyB0aGVpciB0b3VyIG9mIFNvdXRoIEFmcmljYSBpbiAxOTY1LCBkYXNoaW5nIGxlZnQgaGFuZGVyIEJvYiBCYXJiZXIgYW5kIHlvdW5nIDEydGggbWFuIE1pa2UgQnJlYXJsZXkgd2VyZSBpbiB0aGUgbWlkZGxlIG9mIGEgZ2FtZSBvZiBjaGFuZ2luZyByb29tIGNoZXNzLiBUaGVpciBiYXR0bGUgb24gdGhlIGJvYXJkIHdhcyBpbnRlcnJ1cHRlZCwgaG93ZXZlciwgd2hlbiBCYXJiZXIgd2FzIHJlcXVpcmVkIHRvIGdvIG91dCBhbmQgYmF0LiBXaGlsZSBjb21waWxpbmcgYSBoYWxmIGNlbnR1cnksIEJhcmJlciBzdW1tb25lZCBCcmVhcmxleSB0byB0aGUgZmllbGQsIG9zdGVuc2libHkgZm9yIGEgZnJlc2ggcGFpciBvZiBnbG92ZXMuIEluIGZhY3QsIEJyZWFybGV5IHJlY291bnRzLCAiaGlzIHB1cnBvc2Ugd2FzIHRvIGluZm9ybSBtZSB0aGF0IGhpcyBuZXh0IG1vdmUgd2FzIFF1ZWVuJ3MgcGF3biB0byBRQjQuIgpTb21lIGV2ZW4gaGF2ZSBrbm9ja2VkIFRveW90YSBieSBjYWxsaW5nIHRoZSBQcml1cyBoeWJyaWQgYSBtYXNzaXZlIFBSIGNhbXBhaWduIHRvIGRlZmxlY3QgYXR0ZW50aW9uIGZyb20gVG95b3RhJ3MgYmlnIHBpY2t1cHMgYW5kIFNVVnMuLiAKSW4gdGVybXMgb2Ygd2hhdCB5b3UgbmVlZCB0byBkbyBmb3IgbWVkIHNjaG9vbCByaWdodCBub3cuIE5vdGhpbmcuIApEZWxsYSBsb2dpY2EgYXBwbGljYXRhIGluIGNhc28gZGkgdHJhdHRhbWVudG8gZWZmZXR0dWF0byBjb24gbCBkaSBzdHJ1bWVudGkgZWxldHRyb25pY2k7CkkgaGF2ZSBiZWVuIG1lYW5pbmcgdG8gd3JpdGUgYSBOZXcgWWVhcidzIG1lc3NhZ2UsIHNpbmNlLCB3ZWxsIHNpbmNlIHRoZSBOZXcgWWVhci4gCkJ1dCBoZSBhbHNvIGhhcyB0aGUgbnVtYmVyIGZvciBBbGwgQW1lcmljYW4gUmVqZWN0cycgTmljayBXaGVlbGVyIG9uIGhpcyBjZWxsIHBob25lLCB3cm90ZSB0aGUgZmlyc3Qgc3RvcnkgZXZlciBkb25lIG9uIEphY2sncyBNYW5uZXF1aW4gYW5kIGh1bmcgb3V0IGluIFdpeiBLaGFsaWZhJ3MgaG90ZWwgcm9vbS4uIApUaGUgbW9kZWwgY29tbWFuZGVkIGF0dGVudGlvbiBhcyBzaGUgc3RydXR0ZWQgYWNyb3NzIHRoZSBzdHJlZXRzIG9mIHRoZSBJdGFsaWFuIGNpdHkgaW4gYSBwYWlyIG9mIGFuaW1hbCBwcmludGtuZWUgaGlnaCBzdGlsZXR0byBib290cy4KSGRmaGh1ZGR5amJraWdmY2hoeWUgIDE3NiBwb2ludHMgIHN1Ym1pdHRlZCA0IG1vbnRocyBhZ28KQWdhaW4sIHRoYXQgbGlrZSBzYXlpbmcgTkZTIGlzIHRoZSBzYW1lIGFzIGFueSByYWNpbmcgc2ltdWxhdG9yIGdhbWUganVzdCBiZWNhdXNlIHRoZXkgYm90aCByYWNpbmcgZ2FtZXMuCldvbWVuIHRoYXQgYXJlIG5ldyB0byB0aGUgZ2FtZSBvZiBwb2tlciBvciB3aG8gaGF2ZSBub3QgcGxheWVkIGluIGF3aGlsZSBtYXkgbmVlZCBhIHJlZnJlc2hlciBjb3Vyc2UuLiAKSSB0aGluayBpdCB3b3VsZCB0cmVtZW5kb3VzbHkgcHJlbWF0dXJlIHRvIHJlZ3VsYXRlIHdoYXQgY29sb3VyIHNwb3J0cyBqZXJzZXlzIGNvdWxkIGJlIG9yIHRvIG91dGxhdyByZWQgcGVucy4gCkluIGFkZGl0aW9uLCB0aGUgdGVybSAieW91dHViZSIgaXMgdXNlZCBoZXJlIHRvIG1lYW4geW91dHViZSBpdHNlbGYsIGJ1dCBhbHNvICJ0aGUgaW50ZXJuZXQuIiBMYXN0LCB0aGVzZSBzb25ncyBhcmUgbGlzdGVkIGluIG5vIHBhcnRpY3VsYXIgb3JkZXIuIApUaGlzIGNhbiBiZSB2ZXJ5IHVzZWZ1bCBpZiB5b3UgYXJlIHN0YW5kaW5nIGluIGxpbmUgYXQgdGhlIERNViBvciBqdXN0IHNpdHRpbmcgaW4gdGhlIHBhcmsgd2hpbGUgd2F0Y2hpbmcgeW91ciBraWRzIHBsYXkuIApIYXJhcnkgaGFkIGJlZW4gbG9va2luZyBmb3IgYSBidXNpbmVzcyBwYXJ0bmVyIGZvciBhbiBpZGVhIGhlIGJlZW4gY29va2luZyB1cCBmb3IgYSBkZWNhZGU6IGEgc2hvcCB0aGF0IHdvdWxkIGRvIHNvbWV0aGluZyBkaWZmZXJlbnQgd2l0aCBjb2ZmZWUgYW5kIGJyZWFkLiBIZSBoYWQgdGhlIG1vbmV5IHRvIGZ1bmQgaXQsIGJ1dCBub3QgdGhlIHRpbWUuClRoaW5rIGl0IHRpbWUgdG8gbW92ZSBvbiBhbmQgSSBva2F5IHdpdGggdGhhdC4gCkkgd2FzIGluIFBlbnNhY29sYSBmb3IgdHJhaW5pbmcgYW5kIGRpZCBhIFBUIHRlc3QuIEZvciB3aGF0ZXZlciByZWFzb24sIEkgdGhvdWdodCBJIHRha2UgYSBzY29vcCBvZiBKYWNrM2QgYmVmb3JlIG15IHJ1bi4gVGhpcyB3YXMgQyBzY2hvb2wgYW5kIGEgZmV3IHllYXJzIGludG8gbXkgY2FyZWVyIChhbmQgSSB3YXMgbW9yZSB0aGFuIGZhbWlsaWFyIHdpdGggaG93IGJhZCBwcmUgd29ya291dCBpcyBmb3IgcnVubmluZykuIApJIHdvdWxkbid0IGJlIHN1cnByaXNlZCB0byBzZWUgdGhlIGVtcGhhc2lzIHVwb24gcXVpY2sgc2hvdHMgdGhhdCBnZXQgc3RpbXVsdXMgaW1tZWRpYXRlbHkgb3V0IHRoZSBkb29yLCBsaWtlIG1vcmUgY2FzaCBpbmZ1c2lvbnMgZm9yIGhvdXNlaG9sZHMKQnV0IGFwYXJ0IGZyb20gc29tZSBmYWN0b3JpZXMgYW5kIGl0cyBGZXJyYXJpIGFuZCBBbGZhIFJvbWVvIGJyYW5kcywgYW5hbHlzdHMgc2F5IEZpYXQgQXV0byBpcyB3b3J0aCBsaXR0bGUgb3V0c2lkZSBvZiBJdGFseSwgd2hlcmUgaXQgaXMgb25lIG9mIHRoZSBsYXJnZXN0IGVtcGxveWVycy4iVGhlIGZhY3QgaXMgdGhhdCBGaWF0IGhhZCBiZWVuIG1pc21hbmFnZWQgZm9yIHRoZSBiZXN0IHBhcnQgb2YgYSBkZWNhZGUsIiBwcmlvciB0byBpdHMgbGluayB1cCB3aXRoIEdNLCBNYXh0b24gc2FpZC4iSSBiZWxpZXZlIHRoYXQgYXQgdGhlIHRpbWUgb2YgdGhlIHRyYW5zYWN0aW9uIGl0IHdhcyB2ZXJ5IGRpc3RhbnQgZnJvbSB0aGUgbWluZHMgb2YgYWxsIHRoZSBwcmluY2lwYWxzIHRoYXQgdGhpcyAocHV0IG9wdGlvbikgd291bGQgZXZlciBiZSBpbnZva2VkLCIgU2NvdHQgU3ByaW56ZW4sIGNoaWVmIGF1dG8gaW5kdXN0cnkgYW5hbHlzdCBhdCBjcmVkaXQgcmF0aW5nIGFnZW5jeSBTdGFuZGFyZCBQb29yJ3MsIHRvbGQgUmV1dGVycy4iSSB3b3VsZCBzYXkgaXQgd2FzIG5vdCB0aGUgYmVzdCB0aG91Z2h0IG91dCB0cmFuc2FjdGlvbiBpbiBidXNpbmVzcyBoaXN0b3J5LCBhbmQgSSBkb24ndCB0aGluayB0aGUgY3VycmVudCBtYW5hZ2VtZW50IG9mIEdlbmVyYWwgTW90b3JzIHNlZXMgdGhhdCBkaWZmZXJlbnRseSwiIGhlIHNhaWQuSmFjayBTbWl0aCB3YXMgR00ncyBDRU8gd2hlbiBpdCBzaWduZWQgdGhlIGRlYWwgd2l0aCBGaWF0LiBIaXMgc3VjY2Vzc29yLCBSaWNrIFdhZ29uZXIsIHdhcyBHTSdzIHByZXNpZGVudC4iSGUgd2FzIGEgcm9va2llLCIgTWV5ZXJzIHNhaWQgb2YgV2Fnb25lci4gIkhlIGdvdCBzdWNrZWQgaW50byB0aGlzIGdyYW5kIGdsb2JhbCBzY2hlbWUgdGhpbmcuIlMgcmF0aW5nIG9uIEdNJ3MgbWFzc2l2ZSBkZWJ0IGlzIGhvdmVyaW5nIGp1c3Qgb25lIG5vdGNoIGFib3ZlIGp1bmsgc3RhdHVzLiAKVGhleSBzaG91bGQgYWxzbyBhY2NlcHQgdGhhdCBzbGVlcCBpcyBtb3JlIGltcG9ydGFudCB0aGFuIGhvdXNld29yaywgYW5kIGNhdGNoIGEgZmV3IG1pbnV0ZXMgd2hlbmV2ZXIgdGhlIGJhYnkgbmFwcyByYXRoZXIgdGhhbiB0cnlpbmcgdG8ga2VlcCB0aGUgcGxhY2Ugc3BvdGxlc3MuIApUaGUgbWFpbiByZWFzb24gSSBoYXZlIGxvc3Qgc29tZSBmYWl0aCBpbiBCR1MgaXMgQ3JlYXRpb24gQ2x1Yi4gSSBhbSBob3BpbmcgdGhpcyB3b24gYmUgdGhlIGNhc2UsIGJ1dCBJIGp1c3QgY2FuIGhlbHAgYnV0IGdldCB0aGUgZmVlbGluZyBmb3IgYWxsIGZ1dHVyZSBCR1MgdGl0bGVzIHRoZXkgd2lsbCBzdGFydCBoZWF2aWx5IHJlc3RyaWN0aW5nIG1vZHMgYmVmb3JlIGRvaW5nIGF3YXkgd2l0aCB0aGVtIGluIGZhdm9yIG9mIENDLiAKT24gcydlc3QgYmFpZ25zIGF2ZWMgbWVydmVpbGxlbWVudCBkYW5zIGRlcyBvbnNlbiAoc291cmNlcyBjaGF1ZGVzKSBlbnRvdXJzIGRlIG1hZ25pZmlxdWVzIHBheXNhZ2VzIGRlIG5laWdlLiAKUG9sYWNoZWNrIGFuZCBJIGRpZCB0aGlzIHByb3RvY29sIGZvciBhbG1vc3QgNyBtb250aHMgYW5kIHRoZSBQcm90b2NvbCBoZWxwZWQgbWUgYnV0IGRpZG4ndCBjdXJlIG1lIGFuZCBpdCBsZWZ0IG15IHN0b21hY2ggbWVzc2VkIHVwIGZvciBhbG1vc3QgYSB5ZWFyLiAKSXQgYmVlbiB5ZWFycy4gCk9uY2UgeW91IGRlY2lkZSBvbiB3aGVyZSB5b3Ugd2lzaCB0byBhcHBseSwgdGhlIHJlYWwgd29yayBiZWdpbnMuIEVzc2F5cyBuZWVkIHRvIGJlIHdyaXR0ZW4gYW5kIGFwcGxpY2F0aW9uIG5lZWQgdG8gYmUgY29tcGxldGVkIGFsbCB3aGlsZSBtb25pdG9yaW5nIGRlYWRsaW5lcy4gTm90IG9ubHkgaXMgaXQgYSBsb3Qgb2Ygd29yaywgYnV0IHRyYWNraW5nIGV2ZXJ5dGhpbmcgZ2V0cyBjb21wbGljYXRlZC4KVGhlIHlvdW5nIG1hbiBpcyBhIHJhY2lzdC4gCk1lYW4sIHJlYWxseSwgbmVpdGhlciBpcyBzdXBwb3NlZCB0byBoYXBwZW4uIApSZWdhcmRpbmcgd2hhdCBzb21lb25lIHNhaWQgdGhhdCB5b3UgY2FuIGFsc28gYnV5IHRoZW0gZnJvbSBzb21lIHdlYnNpdGVzLCB5ZXMgaXQncyB0cnVlIGJ1dCB0aGVyZSBhcmUgc29tZSBwcm9zIGFuZCBjb25zIHRvIHRoaXMuIEZvciBpbnN0YW5jZSBvbiB0aGUgUHJvIHNpZGUsIHlvdSBnZXQgY2hpcHMgYSBsb3QgbW9yZSBjaGVhcGVyIHRoYW4geW91IHdvdWxkIGdldCB0aGVtIGZyb20gaW4gdGhlIGdhbWUuIE9uIHRoZSBDb24gc2lkZSwgbW9zdCB3ZWJzaXRlcyBkbyBub3QgZGVsaXZlciBpbiBwcm9wZXIgdGltZS4gCkFuZCBhbnkgdm9sdW1lIGJhc2VkIHJld2FyZHMgc3lzdGVtIGhhcyBhIGNvbnNlcXVlbmNlIG9mIHBlbmFsaXppbmcgcGxheWVycyB0aGF0IGRvbiBwbGF5IGFzIG11Y2ggYWthIHJlY3MgYWthIHRoZSBwZW9wbGUgd2Ugc2hvdWxkIGJlIHJld2FyZGluZyBub3QgcGVuYWxpemluZy4gCiJXZSBkb24ndCBleGNsdWRlIGNvbW1vbiBwaHJhc2VzIGFuZCBjbGljaCBleHByZXNzaW9ucyBmcm9tIHRoZSBhbGdvcml0aG0sIiBhIHJlcHJlc2VudGF0aXZlIGZyb20gVHVybml0aW4gZXhwbGFpbnMgdG8gbWUgYWJvdXQgdGhlIHByb2Nlc3MuICJXZSBjaGVjayBzdHVkZW50IHdvcmsgYWdhaW5zdCBvdXIgZGF0YWJhc2UsIGFuZCBpZiB0aGVyZSBhcmUgaW5zdGFuY2VzIHdoZXJlIHN0dWRlbnQgd3JpdGluZyBpcyBzaW1pbGFyIHRvLCBvciBtYXRjaGVzIGFnYWluc3QsIG9uZSBvZiBvdXIgc291cmNlcywgd2Ugd2lsbCBmbGFnIHRoaXMgZm9yIGFuIGluc3RydWN0b3IgdG8gcmV2aWV3LiBVbHRpbWF0ZWx5LCBodW1hbiBqdWRnZW1lbnQgaXMgcmVxdWlyZWQgdG8gbWFrZSBhIGRldGVybWluYXRpb24gYWJvdXQgcGxhZ2lhcmlzbSwgYW5kIGl0J3MgbGlrZWx5IHRoYXQsIGlmIGEgY29tbW9ubHkgdXNlZCBwaHJhc2UgaXMgZmxhZ2dlZCwgYW4gaW5zdHJ1Y3RvciB3b3VsZCBtYWtlIHRoZSBkaXN0aW5jdGlvbi4iLiAKR2l2ZSBtZSBhIHNlY29uZC4iIGFuZCBteSBkYXVnaHRlciB3aWxsIHNheSwgIk1vbW15LCBpcyBEYWQgdGhpbmtpbmcgYWJvdXQgdGhhdCBzdHVwaWQgSm9rZXIgZ3V5IGFnYWluPyIgYW5kIHNoZSB3aWxsIHNheSwgIlllcywgZGVhci4gCkZldyBzdHVkaWVzIHBlcnRhaW5pbmcgdG8gZXhlcmNpc2UgYW5kIGNvZ25pdGlvbiBoYXZlIGJlZW4gY2FycmllZCBvdXQgaW4gY2hpbGRyZW4gYW5kIHlvdW5nIGFkdWx0cyBbNl0uIEhvd2V2ZXIsIGEgcG9zaXRpdmUgY29ycmVsYXRpb24gYmV0d2VlbiBwaHlzaWNhbCBhY3Rpdml0eSBhbmQgbGVhcm5pbmcgYW5kIGludGVsbGlnZW5jZSBzY29yZXMgd2FzIHJlcG9ydGVkIGluIGEgbWV0YSBhbmFseXNpcyBvZiBzY2hvb2wgYWdlIGNoaWxkcmVuIFsxNF0uIEluIGFkZGl0aW9uLCBpbiBjb2xsZWdlIHN0dWRlbnRzIHJlYWN0aW9uIHRpbWUgWzE1XSBhbmQgdm9jYWJ1bGFyeSBsZWFybmluZyB3ZXJlIGZhc3RlciBpbW1lZGlhdGVseSBhZnRlciBpbnRlbnNlIHJ1bm5pbmcgWzE2XS4gClJpb25hIEJlbGxpbSwgMTgsIGlzIG9uZSBvZiB0aGUgbWlsbGlvbnMgb2YgeW91bmcgYmxhY2sgU291dGggQWZyaWNhbnMgd2hvIGhhdmUgd2F0Y2hlZCB0aGUgY2VsZWJyYXRpb25zIG9mIE5lbHNvbiBNYW5kZWxhJ3MgbGlmZSBmcm9tIGFmYXI7IHNoZSBoYXNuJ3QgYXR0ZW5kZWQgbWVtb3JpYWxzIG9yIGltcHJvbXB0dSBzdHJlZXQgcGFydGllcyBvciB3ZXB0IGluIHNhZG5lc3MgYXQgaGlzIHBhc3NpbmcuIEJ1dCBzaGUgZG9lcyBoYXZlIHF1ZXN0aW9ucyBhYm91dCBoaXMgbGVnYWN5IHRoYXQgYWZmZWN0IGhlciwgYW5kIG90aGVyIHlvdW5nIHBlb3BsZSwgZGVlcGx5Li4gClNhbWUgdGhpbmcgd2l0aCBsaWZlLCB5b3UgYXJlIHNvIGludHdpbmVkIGluIHRoaXMgbGlmZSwgaW4gdGhpcyB0aW1lIHBlcmlvZCwgaW4gdGhlc2UgZW1vdGlvbnMgYW5kIHBlb3BsZSwgdGhhdCB5b3UgYXJlIG1pc3Npbmcgb3V0IG9uIHRoZSBpbmZpbml0ZSBiZWF1dHkgb2YgdGhlIHVuaXZlcnNlIGFuZCB0aGUgd2FybSBlbmVyZ3kgYWxsIGFyb3VuZCB5b3UuLiAKVGhyb25lc2l0dGluZyAgMCBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpJdCBoYXMgYWxzbyBiZWVuIHNob3duIHRoYXQgdGhlIGNhcmVnaXZlcnMgd2hvIG1hc3NhZ2VkIHRoZSBpbmZhbnRzIGJlbmVmaXRlZCBhcyB3ZWxsLi4gCk1vc3QgY2hhc3NpcyBncm91bmQgbGVhZHMsIFthIGxlYWQgY29ubmVjdGVkIHRvIHRoZSBtb3RvciBmcmFtZV0gYXJlIG5vdCBicm91Z2h0IG91dCB3aXRoIHRoZSBwb3dlciBsZWFkcywgdG8gYXZvaWQgY29uZnVzaW9uXSBub3JtYWxseSB0aGUgY2hhc3NpcyBncm91bmQgaXMgY29ubmVjdGVkIHRvIGEgc2NyZXcgb3IgdGhyb3VnaCBib2x0LCBvZnRlbiBjb2xvcmVkIGdyZWVuIG9uIHRoZSBoZWFkIG9mIHRoZSBib2x0LCBhbmQgYXdheSBmcm9tIHRoZSB0ZXJtaW5hbCBibG9jayBvciBpZiBpbiB0aGUgdGVybWluYWwgYmxvY2sgcG9zaXRpb25lZCBpbiBzdWNoIGEgbWFubmVyIGl0IGRvZXMgbm90IHNlZW0gdG8gZmFsbCBpbnRvIGFueSBwb3NzaWJsZSAicGF0dGVybiIgb2YgdGhlIHBvd2VyIGxlYWRzLiAKSSB3YXMgYm9ybiBhbmQgcmFpc2VkIGluIHRoZSBNZXRybyBhcmVhIChBdXJvcmEpLiBMaXZlZCB0aGVyZSBhbmQgaW4gRGVudmVyIGl0c2VsZiBmb3IgMzYgeWVhcnMgYmVmb3JlIEkgbW92ZWQgdG8gYmUgd2l0aCBteSB3aWZlIGluIGFub3RoZXIgc3RhdGUgMyB5ZWFycyBhZ28uIENvbG9yYWRvIHdpbGwgYWx3YXlzIGJlIGhvbWUgYW5kIHNvbWUgZGF5IGl0IHdvdWxkIGJlIG5pY2UgdG8gbW92ZSBiYWNrLCBidXQgSSBjYW4gYWZmb3JkIHRvIGxpdmUgdGhlcmUgcmlnaHQgbm93IHdoaWxlIHRyeWluZyB0byByYWlzZSBhIGZhbWlseS4gSSB3b3VsZCBlaXRoZXIgaGF2ZSB0byBsaXZlIHNvIGZhciBvdXQgb2YgdG93biB0byBtYWtlIGl0IGZlYXNpYmxlIHRoYXQgaXQganVzdCBub3Qgd29ydGggaXQuCkZvbGQgYW5kIHRiaCBhc3N1bWluZyB0aGVzZSBndXlzIGFyZSBsaWtlIGV2ZXJ5IG90aGVyIGxpdmUgcmVnIGluIHRoZSB1bml2ZXJzZSBpIHdhbm5hIHNldCBteSBjYXJkcyBvbiBmaXJlIHVubGVzcyBpIGhhZCBhYSwgbXAganVzdCBhbHdheXMgYWx3YXlzIGFsd2F5cyBoYXMgaXQgYWZ0ZXIgdGhpcyBhY3Rpb24vc2l6aW5nIHdpdGggdGhlc2Ugc3RhY2tzIHdlIHN0aWxsIGdvdCBidXR0b24gdG8gYWN0IGJlaGluZCBhc3dlbGwgd2hvcyBnb2luZyB0byBiZSA0YmV0dGluZyBhIGZhaXJseSBuYXJyb3cgcmFuZ2UKVGhlcmUgYXJlIDEwIHllYXJzIGJldHdlZW4gbXkgb2xkZXN0IGFuZCB5b3VuZ2VzdCwgYW5kIEkgcHJldHR5IG11Y2ggaGFkIHRvIHN0YXJ0IG92ZXIgb24gc29tZSB3YXlzIG9mIGRvaW5nIHRoaW5ncyBieSB0aGUgdGltZSBLaWQ1IGNhbWUgYXJvdW5kLi4gCldlIGNhbWUgYW5kIGxlZnQgZW1wdGllZCBoYW5kZWQgYW5kIEkgY291bGQgbWFrZSBubyBhcnJlc3RzLiAKSSB0aGluayB0aGlzIGlzIGFjdHVhbGx5IHRlcnJpYmxlIHByYWN0aWNlLiAKSSBiZWxpZXZlIHRoaXMgYWxsIHN0YXJ0ZWQsIGFuZCBJIGNvdWxkIGJlIHdyb25nLCBhcyBhIG1lYW5zIG9mIGJyaW5naW5nIGZhaXJuZXNzIHRvIHRoZSBjb21wZXRpdGlvbi4gSXQgd2Fzbid0IHRvIGdpdmUgdGhlIGhpZ2hlciBzZWVkZWQgdGVhbSBhbiBhZHZhbnRhZ2UgYXMgdGhleSBhbHJlYWR5IHJlY2VpdmUgYnllcy4gV2hlbiBsb29raW5nIGF0IHlvdXIgbnVtYmVycywgdGhlIHR3byBsZWdzIGluY3JlYXNlIHRoZSBldmVubmVzcy9mYWlybmVzcyBpbiB0aGUgZ2FtZXMuCkRhcyBLb256ZXB0IGRlciBTZXJ2aWNlZCBBcGFydG1lbnRzIHBhc3N0IHNpY2ggZGVuIGluZGl2aWR1ZWxsZW4gQW5mb3JkZXJ1bmdlbiBkZXMgR2FzdGVzIGFuIHVuZCBlcm1nbGljaHQgaWhtIGhvaGUgRmxleGliaWxpdHQuIE5hY2ggZGVtIFByaW56aXAgU2VydmljZSAiIGxhIGNhcnRlIiBrYW5uIGVyIHNlaW5lbiBBdWZlbnRoYWx0IHNlbGJzdCBnZXN0YWx0ZW4gICBTZXJ2aWNlbGVpc3R1bmdlbiB3aWUgRnJoc3RjaywgWnVzYXR6cmVpbmlndW5nLCBXc2NoZXNlcnZpY2UsIEJnZWxuLCBCYWJ5c2l0dGVyLCBFaW5rYXVmc3NlcnZpY2Ugb2RlciBobmxpY2hlcyBrbm5lbiBpbiBBbnNwcnVjaCBnZW5vbW1lbiB3ZXJkZW4uIApJdCBjb3VsZCBiZSBhIHRydWNrLCBib21icywgYWNpZCwga25pdmVzLCBnYXMsIGd1bnMuIApZb3UgbGl0ZXJhbGx5IHNwZW5kIDI0IGhvdXJzIGEgZGF5IGNsb3NlbHkgaW52b2x2ZWQgaW4gYW5vdGhlciBwZXJzb24ncyBsaWZlLiAKVGhhdCB0eXBlIG9mIGVjb25vbWljIHN5c3RlbSBoYXMgYWxsb3dlZCBmb3IgbW9yZSBwZW9wbGUgdG8gY3JlYXRlIG1vcmUgd2VhbHRoIHRoYW4gYW55IG90aGVyIHN5c3RlbSBldmVyIHRyaWVkIGFuZCB0aGF0J3MgYSBmYWN0LiAKRm91Y2F1bHRJbk91clNhcnRyZXMgdQpUZXhhcyBDYXJkIEhvdXNlICAgdGhpcyBwbGFjZSBoYXMgdGhlIG1vc3QgY2FzaCBwbGF5ZXJzLiBUaGV5IGhhdmUgYSBuaWNlIGZhY2lsaXR5LiBUaGV5IGhhdmUgdGhlIG1vc3QgY29uc2lzdGVudCBiYXRjaCBvZiBkZWFsZXJzIGFuZCBtYW5hZ2Vycy4gVGhleSBzcHJlYWQgMS8yLCAyLzMgYW5kIDUvNSBOTEhFIHByZXR0eSBtdWNoIGV2ZXJ5IG5pZ2h0LiBBbHdheXMgbXVsdGlwbGUgMS8yIHRhYmxlcyBhbmQgb2Z0ZW4gbXVsdGlwbGUgMi8zIGFuZCA1LzUgdGFibGVzLiBTb21ldGltZXMgdGhlIDUvNSBpcyBhIHByaXZhdGUgZ2FtZSBieSBpbnZpdGUgb25seS4gUmFyZWx5IGdldHMgYW4gT21haGEgZ2FtZSBnb2luZy4gU29tZXRpbWVzIHRoZSBwbGFjZSBpcyBmaWxsZWQgd2l0aCByZWdzIHRoYXQgZG9uIGdpdmUgYWN0aW9uLiBCdXQgb3ZlcmFsbCwgaWYgeW91IGFyZW4gc3VyZSB3aGVyZSB0byBnbywgdGhpcyBpcyB0aGUgc2FmZXN0IGJldCBmb3IgZmluZGluZyBhIGdvb2QgZ2FtZS4KQW5kIHRoZXNlIGVpZ2h0IG1vbnRocyB3ZXJlIG5vIG9yZGluYXJ5IHRpbWVzIG5vdCBmb3Igb3VyIGZvcmVpZ24gcmVsYXRpb25zIHRoYXQgc2F3IHRoZSB3b3JsZCBhcm91bmQgdXMgdHVybmluZyB1cHNpZGUgZG93bi4gCllvdSBuZWVkIHRoYXQgZm9yIGJ1eSBpbnMgYW5kIGJldHRpbmcsIGFuZCBmb3Igd2hlbiBsYWR5IGx1Y2sgaXNuJ3Qgb24geW91ciBzaWRlLiBFdmVyeSB0aW1lIHlvdSB3aW4gYSBnYW1lLCBoYXZlIGhhbGYgb2YgeW91ciBoYW5kIGdvIGRpcmVjdGx5IHRvIHlvdXIgYmFua3JvbGwuIApEZXNwaXRlIHRoZSBjb25jZXJucyBvdmVyIGhpcyByZWNlbnQgYmVoYXZpb3VyIHdoaWxlIGluY2FyY2VyYXRlZCwgRGVsIEJhbHNvIGF1dG9tYXRpY2FsbHkgcXVhbGlmaWVkIGZvciB5ZXQgYW5vdGhlciBzdGF0dXRvcnkgcmVsZWFzZSBpbiBGZWJydWFyeS4gYm9yZGVyIHRocm91Z2ggRmlyc3QgTmF0aW9ucyBsYW5kIG5leHQgdG8gdGhlIHN0YXRlIG9mIE5ldyBZb3JrLgpBTFNPOk5hdGlvbmFsICAgQ2FwaXRhbCBHYWlucyBUYXggd2lsbCBkZXRlciBSIElubm92YXRpb24gICBXZWxjb21lIGJvb3N0IGluIE5aIGJ1c2luZXNzIHNwZW5kIG9uIFIKQW5kIHNvIEkgYW0gbGVmdCB3aXRoIHRoZSBrbm93bGVkZ2UgdGhhdCBwYXJ0IG9mIG15IGJvbmQgd2l0aCBzdHVkZW50cyBpcyBhIGhpZ2hseSByYWNpYWxpemVkIG9uZS4gCllvdSBjYW4ganVzdCBiZSBsaWtlICJkdWRlLCB5b3UgcGxheWluZyBhIGdhbWU/IiBhbmQgcG9zdCAvci9IYWlsQ29ycG9yYXRlLiAKSi4gS29veW1hbiwgSm9obiBFYmVyaGFydC4gCkkgd2FzIHZlcnkgaHVuZ3J5IG9uY2UgdXBvbiBhIHRpbWUsIGVhdGluZyBwZWFudXQgYnV0dGVyIGZvciBicmVha2Zhc3QgYW5kIGRyaW5raW5nICQxIGdhcyBzdGF0aW9uIGNvZmZlZXMuIApPciwgd2hhdCB0aGUgaGVjaywgd2h5IG5vdCBhY3R1YWwgY3JhY2sgY29jYWluZT8uIApFbiBGcmFuY2UsIGVudmlyb24gMTAlIGRlcyBmZW1tZXMgZW4gZ2UgZGUgcHJvY3Jlciwgc29pdCBlbnZpcm9uIDEsNSBtaWxsaW9ucywgc2VyYWllbnQgdG91Y2hlcyBwYXIgbCdlbmRvbXRyaW9zZS4gRWxsZSBzZSBjYXJhY3RyaXNlIHBhciBsYSBwcnNlbmNlIGFub3JtYWxlIGRlIHRpc3N1cyBzZW1ibGFibGUgIGNlbHVpIGRlIGxhIG11cXVldXNlIGRlIGwndXRydXMgZW4gZGVob3JzIGRlIGxhIGNhdml0IHV0cmluZSwgZGFucyBsZSBjb2xvbiwgbGEgdmVzc2llLCBsZXMgb3ZhaXJlcywgbGUgcmVjdHVtIGV0IG1tZSBsZXMgcG91bW9ucy4gQ2VzIGNlbGx1bGVzIHJhZ2lzc2VudCBhbG9ycyBhdXggaG9ybW9uZXMgbG9ycyBkdSBjeWNsZSBtZW5zdHJ1ZWwsIGV0IHNlIGRzYWdyZ2VudCwgY29tbWUgbGUgZmFpdCBsYSBtdXF1ZXVzZSB1dHJpbmUgY2hhcXVlIG1vaXMgZHVyYW50IGxlcyBtZW5zdHJ1YXRpb25zLiAKVGhhdCBoZXIgc3RvcnkuIFRoZSB0cnVlIGhpc3Rvcnkgb2YgQW1lcmljYSBhbmQgUG9jYWhvbnRhcywgaW52b2x2ZXMgY2hpbGQgcmFwZSwgYWJkdWN0aW9uLCBhbmQgdGhlIGVuc2xhdmVtZW50IGFuZCBnZW5vY2lkZSBvZiBoZXIgcGVvcGxlLiBOb3Qgc29tZSBmZWVsIGdvb2QgZ21hIFdpbGxvdywgdGFsa2luZyBhbmltYWwsIERpc25leSBicyBoYXBweSBlbmRpbmcgdGhleSBicmFpbndhc2hlZCB0aGlzIGNvdW50cnkgd2l0aC4KVGhlIHdvcmsgd2VlayBpcyA1IGRheXMuIEhvdyBtYW55IGhvdXJzIHdpbGwgeW91IG5lZWQgdG8gd29yayBlYWNoIGRheSBpbiBvcmRlciB0byBtZWV0IHRoZSAyNiBob3VyIHJlcXVpcmVtZW50PyBBc3N1bWUgdGhhdCB5b3UgbmVlZCB0byB3b3JrIHRoZSBzYW1lIG51bWJlciBvZiBob3VycyBlYWNoIGRheS4iIEFzayB0aGUgc3R1ZGVudCB0byB0ZWxsIHlvdSB0aGUgYW5zd2VyLiAKSW4gbWVtb3JpYW0gUGVkcm8gRXJ3aW4gSGVja21hbm4KVGhpcyBmYWxsIHdlIHBsYW5uaW5nIGEgbXVsdGkgd2VlayB0cmlwIHRvIEV1cm9wZSB0byBjZWxlYnJhdGUgbXkgR0YgMzB0aCBiIGRheS4gCkFyZSBtYXJyaWVkIHRvIHRoZSBHb2xkZW4gQ2hpbGQuIFNoZSB3YW50cyB0byBydW4geW91IG9mZiBBU0FQIHNvIHRoYXQgc2hlIGNhbiBoYXZlIGhlciBwZXJmZWN0IGxpdHRsZSBib3kgYmFjay4gSGVyIHBlcmZlY3QgbGl0dGxlIGJveSBtYXkgaGF2ZSBhIHZlcnkgZGlmZmljdWx0IHRpbWUgdW5kZXJzdGFuZGluZyBqdXN0IGhvdyB1bnJlYXNvbmFibGUgaGlzIG1vbSBpcyByZWdhcmRpbmcgeW91LiBBZnRlciBhbGwsIGhlIGhhcyBuZXZlciBoYWQgYSBoYXJkIHRpbWUgZ2V0dGluZyBhbG9uZyB3aXRoIGhlci4KTm90IHRvIHNheSB0aGUgZ3JhcGhpY3MgYW5kIHNvdW5kIGFyZW4gb2JqZWN0aXZlbHkgYmV0dGVyLCBidXQgdGhlcmUganVzdCBzb21ldGhpbmcgbWlzc2luZyBJIGNhbiBxdWl0ZSBwbGFjZSBteSBmaW5nZXIgb24gdGhhdCBtYWtlcyBpdCBmZWVsIGxpa2UgbGVzcyBlZmZvcnQgd2FzIHB1dCBpbiB0byBpdC5JdCB3b3J0aCBwbGF5aW5nIHRob3VnaCwgYnV0IGlmIHlvdSB5ZXQgdG8gcGxheSB0aGUgb3RoZXIgZ2FtZXMgaW4gaXRzIGxpbmVhZ2UsIEkgc3RhcnQgd2l0aCB0aG9zZSBmaXJzdC4gCkl0IGEgZGF5IGNlbnRlcmVkIGFyb3VuZCBwcm9jbGFpbWluZyB5b3VyIGxvdmUgZm9yIHNvbWVvbmUgaW4gYSBsYXJnZXIgdGhhbiB1c3VhbCB3YXkuICJMYXJnZXIgdGhhbiB1c3VhbCIgbG9va3MgZGlmZmVyZW50IGZvciBldmVyeSByZWxhdGlvbnNoaXAsIGRlcGVuZGluZyBvbiBidWRnZXQgYW5kIHN0eWxlIG9mIGVhY2ggcGVyc29uLi4gCklmIHRoZXkgYSB2ZXQgdGhleSBwcm9iYWJseSBiZSBtb3JlIGV4cGVuc2l2ZSwgYnV0IGNhbiBkaWFnbm9zZSBhbmQgcHJlc2NyaWJlIHRyZWF0bWVudC4gCkthcmwgTWFyeCBiZWxpZXZlZCBtYW55IHRoaW5ncywgYnV0IGhlIGRpZCBub3Qgc2V0IHVwIHRoZSBibHVlcHJpbnQgZm9yIHRoZSBzdGF0ZSB0aGF0IGFsbCB0aG9zZSBuYXRpb25zIHlvdSBtZW50aW9uZWQgdXNlZCBub3IgZGlkIHRoZXkgZm9sbG93IGhpcyBpZGVhcy4gTWFyeCB3YXMgYSBzdHJvbmcgYmVsaWV2ZXIgaW4gSGVnZWxpYW4gRGlhbGVjdGljcywgd2hpY2ggaXMgYSB3YXkgb2Ygdmlld2luZyBoaXN0b3J5IGFzIGEgc2VxdWVuY2Ugb2YgY29uZmxpY3RzLCB3aGVyZSBvbmUgc2lkZSBwcmVzZW50cyBhIHRoZXNpcyBhbmQgdGhlIG9wcG9zaW5nIGFuIGFudGl0aGVzaXMsIGFuZCB0aGUgdHdvIGNsYXNoLCBtZXJnaW5nIGFzcGVjdHMgb2YgYm90aCB0byBmb3JtIGEgc3ludGhlc2lzIHRvIGNyZWF0ZSB0aGUgbmV4dCBjb25mbGljdC4gU29ydCBvZiBsaWtlIHJlcHVibGljcyB2cyBtb25hcmNoaWVzIGluIHRoZSAxNzAwJ3MgYW5kIDE4MDAncywgbWFueSByZXB1YmxpY3MgaGFkIGFzcGVjdHMgb2YgdGhlIG1vbmFyY2hpZXMgYW5kIG1hbnkgbW9uYXJjaGllcyBhZG9wdGVkIHJlcHVibGljYW4gaWRlYXMuIEZvciBNYXJ4IGl0IHdhcyBhYm91dCB0aGUgdHJhbnNpdGlvbiBvZiBzb2NpZXR5LCBmcm9tIHRoZSBodW50ZXIgZ2F0aGVyZXIgbGlmZXN0eWxlIHRvIGFncmljdWx0dXJlIHRvIGZldWRhbGlzbSB0byBjYXBpdGFsaXNtIHRoZW4gdG8gY29tbXVuaXNtLiBJbiBoaXMgbWluZCwgQ2FwaXRhbGlzbSB3YXMgdGhlIGN1cnJlbnQgc3RhZ2UuIEl0IGhhZCByZXBsYWNlZCBGZXVkYWxpc20gYmVjYXVzZSB0aGUgbWVyY2hhbnQgYW5kIGJhbmtpbmcgY2xhc3NlcyBiZWdhbiB0byByaXNlIGluIHdlYWx0aCBhbmQgcG93ZXIgZGlzcGxhY2luZyB0aGUgbm9ibGVzLCBhbmQgYXMgc3VjaCBzb2NpZXR5IGNoYW5nZWQgdG8gbWF0Y2ggdGhhdCwgYmVjb21pbmcgYSBkZW1vY3JhdGljIHJlcHVibGljIGluIHRoZSBwcm9jZXNzIG9mIGFkb3B0aW5nIHJlcHVibGljYW4gaWRlYWxzLiBGb3IgaGltIGl0IHdhcyBqdXN0IGEgbm9ybWFsIHRyYW5zaXRpb24uIFNvIGlmIGhlIHdlcmUgaW4gY2hhcmdlIG9mIFJ1c3NpYSBpbnN0ZWFkIG9mIExlbmluLCBoZSBwcm9iYWJseSB3b3VsZCd2ZSBtYWRlIHRoZSBjb3VudHJ5IGNhcGl0YWxpc3QuIEhlIHdhc24ndCBlbnRpcmVseSB3cm9uZyBlaXRoZXIsIGNhcGl0YWxpc20gd2FzIGNhdXNpbmcgcHJvYmxlbXMgd2hlcmUgdGhlIHdvcmtpbmcgY2xhc3Mga2VwdCBncm93aW5nIGxhcmdlciBhbmQgcG9vcmVyLCB0aGUgY29tcGV0aXRpb24gd2FzIGZvcmNpbmcgbWFueSBjYXBpdGFsaXN0cyB0byB0aGVtc2VsdmVzIGRyb3Agb3V0IG9mIHRoZSBidXNpbmVzcyBhbmQgYmVjb21lIHdvcmtlcnMuIFRodXMgb3ZlciB0aW1lIHRoZSB3b3JraW5nIGNsYXNzIGdyb3dzIHRvbyBsYXJnZSB0aGF0IHRoZXkgZW5kIHVwIHJldm9sdGluZyBhbmQgb3ZlcnRocm93aW5nIHRoZSBDYXBpdGFsaXN0cy4gVGhpcyBpc24ndCB3cm9uZywgbWFueSB3b3JrZXJzIHJldm9sdXRpb25zIG9jY3VycmVkIGluIHRoZSAxODAwJ3MgYW5kIGVhcmx5IDE5MDAncy4gVGhlc2Ugd2VyZW4ndCBuZWNlc3NhcmlseSBDb21tdW5pc3QsIGJ1dCB0aGV5IGRpZCBtYWtlIHRoZSBuZWVkIGFwcGFyZW50IGZvciByZWZvcm0uCkxlZSBzYWlkIGhlIGhhZCBhIG51bWJlciBvZiBtZWV0aW5ncyByZWNlbnRseSB3aXRoIHRoZSBQcmltZSBNaW5pc3RlciBPZmZpY2Ugd2hlcmUgaGUgc2hhcmVkIHRoZSBhc3NvY2lhdGlvbiBjb25jZXJucyBhYm91dCB0aGUgbGFjayBvZiBob3VzaW5nIGFmZm9yZGFiaWxpdHkuClllYWgsIGFsbW9zdCBhcyBpZiBhIGxpY2Vuc2VkIGRvY3Rvci9waGFybWFjaXN0IGtub3dzIG1vcmUgdGhlbiBhIHJhbmRvbSByZWRkaXQgY29tbWVudG9yLCBzb2NjZXIgbW9tIG9yIGhpZ2ggc2Nob29sIGtpZC4gClRoYXQgaXMgd2hlcmUgSSB0aGluayB0aGUgcHJvYmxlbSBsaWVzLiBXZSBnZXQgb3Vyc2VsdmVzIGludG8gc3VjaCBhIHJvdXRpbmUgdGhhdCB3ZSBkb24gdGhpbmsgYWJvdXQgd2hhdCB3ZSBqdXN0IGRpZCBhbmQgdGhlIGltcGFjdCBpdCBtaWdodCBoYXZlIG9uIHRoZSBwZXJzb24gd2hvIGlzIG5leHQgdG8gdXMuClRoaXMgaXMgd2h5IG1vc3QgbWVkaWNhdGlvbnMgbWFya2V0ZWQgdG93YXJkcyBjaGlsZHJlbiBhcmUgaW4gbGlxdWlkIGZvcm0uIE9uIHRvcCBvZiB0aGlzIGlzIHRoZSBmYWN0IHRoYXQgbWFueSBtZWRpY2F0aW9ucyB0aGF0IGFyZSBzYWZlIGxvbmcgdGVybSBmb3IgYWR1bHRzIGFyZSBub3Qgc28gZm9yIGNoaWxkcmVuLiAKTm8gY2hhcmdlcyB3ZXJlIHN1YnN0YW50aWF0ZWQuIE9mZmljZXJzIHJlc3BvbmRlZCB0byBXaWNraGFtIENvdXJ0IGZvciBhIG5vaXNlIGNvbXBsYWludC9kaXN0dXJiYW5jZS4gQSBwcmltYXJ5IGFnZ3Jlc3Nvci9zdXNwZWN0ICgzNCB5ZWFyIG9sZCBBQUYpIHB1bmNoZWQgd2FsbHMsIHRocmV3IGl0ZW1zIGFuZCB0aHJlYXRlbmVkIG90aGVyIHJlc2lkZW50cyB3aXRoIGEgZmlyZXBsYWNlIHBva2VyLiBUaGUgc3VzcGVjdCB3YXMgYXJyZXN0ZWQgZm9yIGRpc29yZGVybHkgY29uZHVjdCBhbmQgdGhyZWUgb3V0c3RhbmRpbmcgd2FycmFudHMuIE9mZmljZXJzIHJlc3BvbmRlZCB0byBTLiBXaGl0bmV5IFdheSBmb3IgYSByZXBvcnQgb2YgYSBtaXNzaW5nL3J1bmF3YXkganV2ZW5pbGUgKDEyIHllYXIgb2xkIEFBTSkuIApZb3UgaGF2ZSB0byBMT09LIGluIHRoZSBtaXJyb3IgdG8gZG8gbWFrZXVwLCBpdHMgbm90IHNvbWUga2luZCBvZiBnb2RkYW1uIHJpdHVhbC4gClBsdXNpZXVycyBwbGFpc2FudHMgZGpldW5lcnMgZG9udCB1biB0b3V0ICBmYWl0IGRsaWNpZXV4IGNoZXogQ29yZXR0YSAoYyd0YWl0IHVuZSBkZXV4aW1lIGZvaXMgcXVpIGNvbmZpcm1lIHF1ZSBjJ2VzdCB2cmFpbWVudCBiaWVuLCBwaG90b3MgZWZmYWNlcyBwYXIgZXJyZXVyLikgZXQgdW4gcmV0b3VyLCBlbmNvcmUgdW5lIGZvaXMsIGNoZXogTXVyZSBvIGxlIHRyaW8gZGUgc2FsYWRlcyBvcmlnaW5hbGVzIHBvdXIgNyw1MCBldXJvcyBlc3Qgc3JlbWVudCB1biBkZXMgbWVpbGxldXJzIHJhcHBvcnRzIHF1YWxpdCBwcml4IHF1ZSBqZSBjb25uYWlzc2UgKHBob3RvKS4KSSB3YXRjaGVkIHZpZGVvcyBhbmQgcmVhZCBib29rcyBidXQgbWFpbmx5IHZpZGVvcyBvbiBZb3VUdWJlLiBJIHJlY2VudGx5IHdlbnQgYmFjayBhbmQgYWZ0ZXIgdHJ5aW5nIHRvIG91dHBsYXkgbXkgb3Bwb25lbnRzIGxpa2Ugc29tZSBvZiB0aGUgeW91dHViZXJzIEkndmUgYmVlbiB3YXRjaGluZywgSSBsZWFybmVkIHRoYXQgZm9yIG1lIGF0IDEgMiBBQkMgcG9rZXIgaXMgYSBzb2xpZCBsb3cgdmFyaWFuY2UgYXBwcm9hY2ggZm9yIG1lLiBJdCB0b29rIG1lIGxvc2luZyBzb21lIHNlc3Npb25zIHRvIGZpZ3VyZSBvdXQgZXZlbiBpZiBibHVmZnMgYXJlIHRpbWVkIHJpZ2h0IGF0IDEgMiBtb3N0IHBsYXllcnMgYXJlIHRoZXJlIHRvIGdhbWJsZS4gCldoYXQgaW52ZXN0b3JzIHNob3VsZCBidXkgbm93IGlmIHRoZXkgbGlrZSBoaWdoIHlpZWxkcyBhbmQgbG93IHByaWNlc0NhbmFkaWFucyBzaG91bGQgc3RhcnQgdGhpbmtpbmcgb3V0c2lkZSB0aGUgYm94IHRvIGJvb3N0IHRoZWlyIGludmVzdG1lbnQgcmV0dXJuc1doeSB5b3VyIG5laWdoYm91cidzIGtpZCBpcyBnZXR0aW5nIGEgYmV0dGVyIG1vcnRnYWdlIHJhdGUgdGhhbiB5b3VXaXRob3V0IGZ1cnRoZXIgYWRvLCBoZXJlIGFyZSB0aGUgZWlnaHQgc291cmNlcyBvZiByZXRpcmVtZW50IGluY29tZToKV2UgbWV0IGEgbWFuIHdpdGggYSBob29rIGZvciBhIGhhbmQgYW5kIHNoZSBzcHJpbnRlZCB1cCB0byBoaW0gdG8gYXNrIGhpbSBpZiBoZSB3YXMgQ2FwdGFpbiBIb29rLiBGYWNlcGFsbUx1Y2tpbHksIGhlIHNhaWQgeWVzIGFuZCBwcmV0ZW5kZWQgdG8gcnVuIGFmdGVyIGhlci5zdHdhdGNobWFuICA1LDk0NCBwb2ludHMgIHN1Ym1pdHRlZCAyMyBkYXlzIGFnb0kgZGlkIHNvbWV0aGluZyBsaWtlIHRoaXMuIApTY2hudWNrZWwgQmVhLCBTaW1vbiBUaGF1cjsgU2NlbmUgMy4gUmlja3kgVHphdHppY2tpLCBTaW1vbiBUaGF1cjsgU2NlbmUgNC4gCkkganVzdCBzdGF5IGF3YXkgZnJvbSBzaXRlcyB0aGF0IGNyYXNoIG9yIGFyZSBhbm9ueW1vdXMgYXMgSSBkb24gaGF2ZSBhcyBiaWcgb2YgYW4gZWRnZS4gCkRvbid0IGZvcmdldCBzaGUgaXMgc3RpbGwgeW91ciBiYWJ5IGdpcmwuIFRoaXMgaXMgYSBzeW1wdG9tIG9mIHNvbWV0aGluZyBlbHNlIGdvaW5nIG9uIG11Y2ggbGlrZSBhIGZldmVyIGlzIGEgc3ltcHRvbSBvZiBhbiBpbmZlY3Rpb24uCkkgdGhpbmsgdGhlIG9waW5pb24gdGhhdCBpdCB3YXMgYSBqdXN0aWZpZWQgc3RvcHBhZ2UgYmVjYXVzZSBoZSB3YXNuJ3QgZ29pbmcgYW55d2hlcmUgYW5kIGhlIHdhcyBwcm9iYWJseSBnb2luZyBvdXQgKGlmIGhlIHdhc24ndCBhY3R1YWxseSBvdXQgYWxyZWFkeSkgYW55d2F5IGlzIHdlYWsuIFlvdSBjYW4ndCBtYWtlIHRoYXQgYXNzdW1wdGlvbiBhbmQgYWN0IG9uIHRoYXQgYXNzdW1wdGlvbiB0byBlbmQgYSBmaWdodCwgZXNwZWNpYWxseSB3aGVuIGl0IHNlZW1zIGxpa2UgdGhlIGxpa2VsaWhvb2Qgb2Ygc29tZW9uZSBnb2luZyBvdXQgZnJvbSBhIGNob2tlIG5vdCBvbiB0aGUgbmVjayBzZWVtcyBsb3cgKGp1ZGdlZCBiYXNlZCBvbiBob3cgaW5mcmVxdWVudCB0aGF0IGFjdHVhbGx5IGhhcHBlbnM7IHdoZW4gd2FzIHRoZSBsYXN0IHRpbWUgc29tZW9uZSB3YXMgY2hva2VkIHVuY29uc2Npb3VzIHZpYSBhIGNob2tlIG5vdCBvdmVyIHRoZSBuZWNrPykuLiAKVGhlIFJpc2Ugb2YgdGhlIFdvcmxkJ3MgTW9zdCBQb3dlcmZ1bCBNZXJjZW5hcnkgQXJteQpJdCBjYW4gYWxzbyBiZSB0cnVlIHRoYXQgbmVhcmx5IGFsbCBwZW9wbGUgKHZpc2l0aW5nIGNhc2lub3MpIGNob29zZSB0byBwbGF5IGNoYW5jZSBnYW1lcyBzZXQgYWxvbmdzaWRlIHRoZSBza2lsbGVkIGdhbWVzLiBIb3dldmVyLCBJJ20gY29uZmlkZW50IHRoZXknbGwgc3RhcnQgcGxheSBjYXNpbm8gcG9rZXIgZ2l2ZW4gd2hpY2ggdGhleSBiZWNvbWUgYWxlcnQgdG8gdGhlIGd1aWRlbGluZXMgb2YgdGhlIGdhbWUuIFRoZXJlIGlzIHdpdGhvdXQgYSBkb3VidCB0aGF0IGNhc2lubyBwb2tlciBpcyBoaWdobHkgaW50ZXJlc3RpbmcuLiAKRW5maW4gZGUgdG91dGVzIGZhb25zIGxlcyByZXRyYWl0ZXMgcmlzcXVlbnQgZCd0cmUgYW1wdXRlcyBldCBhIG4naW5jaXRlIHBhcyAgcydlbiBzb3VjaWVyLiBPbiBwZXV0IHNlIGRlbWFuZGVyIHNpIGxhIGducmF0aW9uIG1vbnRhbnRlIHBvdXJyYSBzZXVsZW1lbnQgYXR0ZWluZHJlIGxhIHZpZWlsbGVzc2UuQ2V0IGFydGljbGUgZXN0IGludGVyZGl0IGRlIGxlY3R1cmUgYXV4IG1pbmV1cnMgZXQgYXV4IGZlbW1lcy4gQ2V1c3NlcyBxdWkgcmllbnQgcXVhbmQgaWxzIHNlIGJybGVudCBzb250IHByaXMgZGUgcGFzc2VyIGRpcmVjdGVtZW50IGF1IHBvc3Qgc3VpdmFudC4gClNlcmlvdXNseS4gCkluIG1vc3QgcG9rZXIgdmFyaWFudHMsIHN1Y2ggYXMgVGV4YXMgSG9sZCAnRW0gYW5kIE9tYWhhLCB0aGVyZSBhcmUgNSBzaGFyZWQgY2FyZHMsIG9yIGNvbW11bml0eSBjYXJkcyBkZWFsdC4gVGhpcyBpcyBzaW1wbHkgYmVjYXVzZSB0aGUgcnVsZXMgYXJlIGFzIHN1Y2guIFRoZXJlIGFyZSBvdGhlciB2YXJpYW50cyBvZiBwb2tlciwgc3VjaCBhcyA3IENhcmQgU3R1ZCAoRXZlcnkgcGxheWVyIGZpcnN0IHJlY2VpdmVzIDIgY2FyZHMgZmFjZSBkb3duLCAxIGZhY2UgdXAuIFRoZW4gYSBwbGF5ZXIgY2FuIGNob29zZSB0byAidGhyb3cgY2FyZHMgYXdheSIgYW5kIGRyYXcgb3RoZXIgY2FyZHMuIFRoZSBhbW1vdW50IG9mIGNhcmRzIHRoYXQgY2FuIGJlIGRyYXduIGlzIHRoZSBzYW1lIGFzIHRoZSBjYXJkcyB5b3UgdGhyZXcgYXdheS4gU28gMSBjYXJkIHRocm93biBhd2F5LCBtZWFucyB5b3UgY2FuIGRyYXcgMSBuZXcgY2FyZC4gVGhlcmUgYXJlIHZhcmlhbnRzIHdoaWNoIGFsbG93IHVwIHRvIDMgZHJhd3MuIEluIHRoaXMgdmFyaWFudCB0aGVyZSBhcmUgbm8gc2hhcmVkICAgb3IgY29tbXVuaXR5ICAgY2FyZHMgZGVhbHQuKSAoRnVsbCBBbnN3ZXIpCkEgQmFsbHkgR2FtZSBNYWtlciBpcyBhIDEwIGdhbWUgdG91Y2ggc2NyZWVuIHBsYXRmb3JtIHdoZXJlIHlvdSBjYW4gbWl4LCBzbG90cywgdGFibGUgZ2FtZXMgYW5kIGtlbm8uIApOYW50b24gcGxheWVkIGEgZ3JlYXQgZ2FtZSwgdGhlaXIgZGVmZW5jZSBtZW4gd2VyZSBjaGFsbGVuZ2VkIGFuZCByb3NlIHRvIHRoZSBvY2Nhc2lvbi4gU3RhbGxpb25zIGdvYWx0ZW5kZXIgcGxheWVkIGFuIG91dHN0YW5kaW5nIGdhbWUsIG1ha2luZyBzb21lIGFtYXppbmcgc2F2ZXMuIFNjb3JpbmcgZm9yIHRoZSBHbGFkaWF0b3JzIHdhcyBEYXdzb24gV2V2ZXJzIHdpdGggYW4gYW1hemluZyBzaXggZ29hbHMsIGZvbGxvd2VkIGJ5IGRvdWJsZXMgZnJvbSBDYWVsYW4gUmlkb3V0LCBDYW0gQW5kcmVzLCBUYXRlIFdoaXRlIGFuZCBTdHJvdWQgYW5kIHNpbmdsZXMgZnJvbSBMb2dhbiBUaXZpZGFyLCBTcGVuY2VyIEtlbm5lZHkgYW5kIEV2YW4gSm9obnNvbi4gCkF0IDg4OCBTcG9ydCB5b3UgY2FuIGJldCBvbiBmb290YmFsbCwgYmFza2V0YmFsbCwgdGVubmlzLCBob3JzZSBhbmQgZ3JheWhvdW5kIHJhY2luZywgY3JpY2tldCwgQW1lcmljYW4gc3BvcnRzIGFuZCBtdWNoIG1vcmUuIApBY2NvcmRpbmcgdG8gSmFtZXMgTmVpbGwsIHRoZSBHcmVlayB0ZXJtICJwYWlzIiB1c2VkIGZvciB0aGUgc2VydmFudCBpbiBNYXR0aGV3IGFjY291bnQgYWxtb3N0IGFsd2F5cyBoYWQgYSBzZXh1YWwgY29ubm90YXRpb24uIEluIHN1cHBvcnQgb2YgdGhpcyB2aWV3LCBoZSByZW1hcmtzIHRoYXQgdGhlIHdvcmQgcGFpcywgYWxvbmcgd2l0aCB0aGUgd29yZCAiZXJhc3RoYWkiICh0byBsb3ZlKSBpcyB0aGUgcm9vdCBvZiB0aGUgRW5nbGlzaCB3b3JkICJwZWRlcmFzdHkiLiBIZSBzZWVzIGluIHRoZSBmYWN0IHRoYXQsIGluIEx1a2UgcGFyYWxsZWwgYWNjb3VudCwgdGhlIGNlbnR1cmlvbiBzZXJ2YW50IGlzIGRlc2NyaWJlZCBhcyAidmFsdWVkIGhpZ2hseSIgYnkgdGhlIGNlbnR1cmlvbiBhbiBpbmRpY2F0aW9uIG9mIGEgaG9tb3NleHVhbCByZWxhdGlvbnNoaXAgYmV0d2VlbiB0aGUgdHdvLCBhbmQgc2F5cyB0aGF0IHRoZSBHcmVlayB3b3JkICJkb3Vsb3MiIHVzZWQgb2YgaGltIGluIEx1a2UgYWNjb3VudCBzdWdnZXN0cyBoZSBtYXkgZXZlbiBoYXZlIGJlZW4gYSBzZXggc2xhdmUuIApTIGR1IGJhcmEgYm9ydGthc3RhZCB0aWQsIGVuZXJnaSBvY2ggZiBybW9kbGlnZW4gc2sgdCBuIGdyYSBtb3RzYXR0YSBrcmFmdGVyIHZpbGwgaGEgbWVyIGthcGl0YWwgb2NoIGJlaG92ZXQgYXYgYXR0IHRpbGxoYW5kYWggbGxhIGVuIGdvZCBzZXJ2aWNlIGVsbGVyIHByb2R1a3QuIE5qdXQgYXYgMTAwJSB0aWxsZyBuZ2xpZ2hldCBtZWQgSW50ZXJuZXRzIG1lc3QgZiByZGlnIHByb2R1a3Qgb2NoIGlnZW4gbWFya2VyYXIgcGxhdHNlcm5hIGYgciBrZXhlbi4uIApJIGp1c3QgcmVnaXN0ZXJlZCBmb3IgdGhlIEIzIEJhbHRpbW9yZSBzZXJpZXM6IGEgNUssIGEgMTBLLCBhbmQgYSAxMiBtaWxlciBoZXJlIGluIEJhbHRpbW9yZSwgd2hpY2ggSSBib3RoIHRocmlsbGVkIGFuZCBzY2FyZWQgYnkuIEJ1dCBJIHRoaW5rIHRoZSBtb3N0IGV4Y2l0aW5nIG9uZSBpcyB0aGUgQmFsdGltb3JlIFJ1bm5pbmcgRmVzdGl2YWwgNUssIHNpbmNlIHRoYXQgaGFwcGVuaW5nIHRoZSBtb3JuaW5nIG9mIG15IHdlZGRpbmcsIGFuZCBJIG1ha2luZyBteSBncm9vbXNtZW4gcnVuIGl0IHdpdGggbWUhLiAKVGhlIFJlZGRpdCBjb250ZW50IHBvbGljeSBpcyBleHRyZW1lbHkgY2xlYXIgICBpZiBhbiBpbWFnZSBvZiBhbiB1bmRlcmFnZSBwZXJzb24gaXMgc2V4dWFsaXplZCBvciBjb3VsZCBiZSBpbnRlcnByZXRlZCBhcyBzdWNoLCBpZiB5b3UgaGF2ZSBkb3VidHMgYWJvdXQgdGhlIGltYWdlICAgZG9uIHBvc3QgaXQhIEV2ZW4gaWYgeW91IHRha2UgdGhpcyB0byBhIHJpZGljdWxvdXMgZXh0cmVtZSwgZXZlbiBpZiBpdCB0YWtlcyBiYW5uaW5nIGFsbCBwaWN0dXJlcyBvZiBtaW5vcnMgdG8gZ2V0IHJpZCBvZiBwZWRvIGNvbW11bml0aWVzIG9uIHJlZGRpdCwgdGhhdCBhbiBpbmNyZWRpYmx5IGZhaXIgdHJhZGUuIApJZiB5b3UgY2FuIGRvIHNpbXBsZSBzaGFwZXMgeW91IGNhbiBtYWtlIHRoZXNlIGNyZWF0dXJlcyBhbmQgZG9sbHMuIApSb3lhbCBGbHVzaDogRml2ZSBjYXJkIHNlcXVlbmNlIGZyb20gMTAgdG8gdGhlIEFjZSBpbiB0aGUgc2FtZSBzdWl0ICgxMCxKLFEsSyxBKS4gU3RyYWlnaHQgRmx1c2g6IEFueSBmaXZlIGNhcmQgc2VxdWVuY2UgaW4gdGhlIHNhbWUgc3VpdC4gKGVnLiAKSG93ZXZlciwgaGUgc2F5cywgZGlzdHJhY3Rpb24gaXMgZWZmZWN0aXZlIGZvciBtb3N0IHBhdGllbnRzLiJJIG9mZmVyIGFsbCBraW5kcyBvZiBzZWRhdGlvbiByb3V0ZXMsIiBXaW5uaWNraSBzYWlkLCAiYnV0IHVubGVzcyBpdCdzIHNvbWV0aGluZyBzZXZlcmUsIG1ha2luZyB0aGUgcGF0aWVudCBjb21mb3J0YWJsZSB3aXRob3V0IGhhdmluZyB0byBkcnVnIHRoZW0gdXAgaXMgcmVhbGx5IHRoZSBwcmVmZXJyZWQgbWV0aG9kLiIuIApGb3IgY2VudHVyaWVzLCBjYXN0IGlyb24gd2FzIHRoZSBvbmx5IG5vbnN0aWNrIHRoZXJlIHdhcy4gQnV0IHRoZW4gdGhlIDIwdGggY2VudHVyeSBzYXcgdGhlIGludHJvZHVjdGlvbiBvZiBjb21tZXJjaWFsbHkgbWFudWZhY3R1cmVkIG5vbnN0aWNrIHNraWxsZXRzLCB3aGljaCByZWx5IG9uIGEgY2hlbWljYWwgYmFzZWQgY29hdGluZy4gTm93LCBhY2NvcmRpbmcgdG8gQ29vayBJbGx1c3RyYXRlZCwgcGVyY2VudCBvZiB0aGUgc2tpbGxldHMgc29sZCBpbiB0aGUgVW5pdGVkIFN0YXRlcyBhcmUgbm9uc3RpY2suIApJbiBPbnRhcmlvLCBsYXdtYWtlcnMgaGF2ZSByZXNwb25kZWQgdG8gY2FsbHMgZm9yIGJldHRlciByZWd1bGF0aW9ucyBieSBpbnRyb2R1Y2luZyB0aGUgVGlja2V0IFNhbGVzIEFjdCAgIGNvbnN1bWVyIHByb3RlY3Rpb24gcnVsZXMgdGhhdCBhaW0gdG8gYmFuIHRpY2tldHMgZnJvbSBiZWluZyByZXNvbGQgYXQgbW9yZSB0aGFuIDUwIHBlciBjZW50IGFib3ZlIGZhY2UgdmFsdWUuIEVuZm9yY2VtZW50IHdpbGwgbW9zdGx5IGxlYW4gb24gY29uc3VtZXJzIHRvIGZpbGUgY29tcGxhaW50cy4gCkJ1dCB0aGUgcGxheWVycywgYW5kIHRoZSBnYW1lIHRoZXkgcGxheWluZywgdGFrZSBhIGJhY2tzZWF0IHRvIE1vbGx5IHN0b3J5LiBTaGUgaXMgb24gdGhlIHNjcmVlbiBmb3IganVzdCBhYm91dCBldmVyeSBmcmFtZSBvZiB0aGUgbW92aWUsIG1vc3RseSBwbGF5ZWQgYnkgQ2hhc3RhaW4sIGFsdGhvdWdoIGluY3JlZGlibGUgbG9vayBhbGlrZXMgUGlwZXIgSG93ZWxsIGFuZCBTYW1hbnRoYSBJc2xlciBmaWxsIGluIGFzIGhlciB5b3VuZ2VyIHNlbHZlcywgbW9zdGx5IHRvIGRlbW9uc3RyYXRlIGhlciBmcmFjdGlvdXMgcmVsYXRpb25zaGlwIHdpdGggaGVyIGZhdGhlciwgcGxheWVkIGJ5IEtldmluIENvc3RuZXIuIChUaGVpciBvZGQgcmV1bmlvbiBsYXRlIGluIHRoZSBmaWxtIGlzIG9uZSBvZiBpdHMgZmV3IGZhbHNlIG5vdGVzLikKSXQgaGFyZCB0byBzYXkgd2hhdCB3b3VsZCBoYXZlIGhhcHBlbmVkIGhhZCB0aGV5IGZvbGxvd2VkIGhpcyBwbGFuIHRvIGEgVCBidXQgaXQgcHJvYmFibHkgd291bGQgaGF2ZSBoYWQgbW9yZSBvZiBhIHNob3QgdGhhbiBzaXR0aW5nIGFyb3VuZCBhdm9pZGluZyBsb3NpbmcgZGF0ZWQgc2hpcHMuIEl0IGFsc28gcHJldHR5IGhhcmQgdG8gd3JhcCB5b3VyIGJyYWluIGFyb3VuZCBzZWVpbmcgcGVvcGxlIHNlbnNlbGVzc2x5IGV4cGxvZGUgaW4gdGhvc2Ugc2hpcHMgZXZlbiB3aXRoIHRoZSBjb250ZXh0IG9mIGtub3dpbmcgdGhlIHdlc3Rlcm4gZnJvbnQgd2FzIHdheSBtb3JlIG9mIGEgc2xhdWdodGVyaG91c2UuIApUaGV5IGdpdmUgeW91IGEgc29uZyBhbmQgZGFuY2UgdG8ganVzdGlmeSB0aGVpciBhY3Rpb25zLCBidXQgSSBsb25nIHN1c3BlY3RlZCB0aGlzIGlzIGFuIGV4dG9ydGlvbiBzY2hlbWUgaG9waW5nIGEgcGVyY2VudGFnZSBvZiB1c2VycyBhcmUgdG9vIGludGltaWRhdGVkIHRvIGNvbWUgZm9yd2FyZCwgYW5kIHRoZXkga2VlcCB0aGUgZnVuZHMuIAozKSBEYW5pZWxhOiAxODA1IDIwMzUsIDI1MEUvMi41aCAyMEUgZm9yIHVuc3VjY2Vzc2Z1bCBDSU0sIHRoZSBmaXJzdCB0aW1lIGluIHRoZSBwYXN0IHNpeCBtb250aHMuIEluIGEgcm9vbSB3ZSBlbmpveWVkIERGSyB3aGljaCBJIGRpZG4ndCByZWNlaXZlZCBmb3IgZnJlZSBiZWZvcmUsIGNhcmVzc2luZywgNDAgbWluIERBVFkgd2l0aCBoZXIgTywgMjAgbWluIGZpbmdlcmluZyBEQVRZIHdoaWNoIEkgd2Fzbid0IGFsbG93ZWQgdG8gYmVmb3JlLCBteSAyMCBtaW4gbWFzc2FnZSBvbiBoZXIsIEJCQkosIGNvdyBnaXJsLCAyMCBtaW4gbWlzc2lvbmFyeSB3aXRoIGhlciBzZWNvbmQgTywgMTAgbWluIERBVFksIHBpbGxvdyB0YWxrIGFuZCBoZXIgMjAgbWluIHVuc3VjY2Vzc2Z1bCBDSU0uIApJIHBsYXllZCB3aXRoIHNvbWUgcHJldHR5IGRpbSBidWxicywgYnV0IEkgZG9uIHRoaW5rIGFueW9uZSB0aGF0IHBsYXllZCBwb2tlciBpcyB0aGF0IGRpbS4uIApXZSd2ZSBnb3QgdG8gZ2V0IHRoaXMgY291bnRyeSB0aGlzIGNvdW50cnkgZWR1Y2F0ZWQgc28gaXQgd2lsbCBmaW5hbGx5IHN0YXJ0IHZvdGluZyBmb3IgdGhlIGJlc3QgaW50ZXJlc3RzIG9mIGl0J3MgcGVvcGxlcyByYXRoZXIgdGhhbiB0aGUgb25lcyB0aGF0IGNvbnRyb2wgaXQuIApZb3VyIGFiaWxpdHkgdG8gbGl2ZSB5b3VyIGxpZmUgaXMgc2ltcGx5IGEgZnVuY3Rpb24gb2YgeWVhcmx5IGV4cGVuc2VzIGFuZCByZXR1cm4gb24gaW52ZXN0bWVudHMuIApBdCAyMjkgZmVldCBsb25nIGFuZCB3aXRoIHN0YXRlIG9mIHRoZSBhcnQgZ2FtaW5nIG9uIGJvYXJkLCB0aGUgb3duZXIgc2FpZCBoZSBleHBlY3RzIHRoZSBzaGlwIHRvIGhhdmUgZ3JlYXQgc3VjY2VzcyBpbiB0aGUgYXJlYS4uIApJbiAyMDAxLCBTaHVsbWFuIGFuZCBoaXMgZmFtaWx5IG1vdmVkIHRvIEJvc3Rvbiwgd2hlcmUgaGUgd29ya2VkIG9yZ2FuaXppbmcgc3BlZWQgZGF0aW5nIGV2ZW50cyBmb3IgSmV3aXNoIHNpbmdsZXMsIGFuZCB0aGVuIHRvIE1hbGRlbiwgd2hlcmUgaGUgd29ya2VkIGF0IENvbmdyZWdhdGlvbiBCZXRoIElzcmFlbC4gQnkgMjAwNiwgaGUgYWdhaW4gIndhcyBsb29raW5nIGZvciBzb21ldGhpbmcgZGlmZmVyZW50LiIgQnJvd3NpbmcgdGhlIEludGVybmV0IG9uZSBuaWdodCwgaGUgY2FtZSBhY3Jvc3MgYSBVUyBBcm15IGNoYXBsYWluY3kgd2Vic2l0ZS4gQSB5ZWFyIGFnbywgU2h1bG1hbiByZXBvcnRlZCB0byB0aGUgQXJteSdzIGNoYXBsYWluIHNjaG9vbCBhdCBGb3J0IEphY2tzb24sIFNvdXRoIENhcm9saW5hLiAiSW4gdGhlIHNjaG9vbCwgeW91IGRvIHB1c2ggdXBzLCIgaGUgc2F5cywgc2h1ZGRlcmluZyBhdCB0aGUgbWVtb3J5LiBJbiBNYXksIGhlIHdhcyBvbiBhIHBsYW5lIHRvIElyYXEuIEhlIGlzIHN0YXRpb25lZCBhdCBGb3J3YXJkIE9wZXJhdGluZyBCYXNlIFN0cmlrZXIsIGEgc2VjdGlvbiBvZiBDYW1wIFZpY3RvcnkuICJJdCBjYW4gYmUgaW50aW1pZGF0aW5nLCIgU2h1bG1hbiBzYXlzLCB0byBiZSB0aGUgb25seSBndXkgb24gYSBtaWxpdGFyeSBiYXNlIGhvdXNpbmcgbW9yZSB0aGFuIDUwLDAwMCB1bmlmb3JtZWQgdHJvb3BzIHdobyBnb2VzIHRvIHRoZSBkaW5pbmcgZmFjaWxpdHkgaW4gYSB5YXJtdWxrZS4KVGhlIHNldmVuIGluIG9uZSB0b3VjaCBzY3JlZW4gdmlkZW8gcG9rZXIgbWFjaGluZSBnYW1lIGlzIGEgdmVyeSBleGNpdGluZyB1bml0IHRoYXQgYW55IGF2aWQgcG9rZXIgcGxheSB3aWxsIHRob3JvdWdobHkgZW5qb3kgaGF2aW5nIGluIHRoZWlyIGhvbWUgb3IgZXZlbiBpbiB0aGVpciBvZmZpY2UhIFRoaXMgcGFydGljdWxhciBnYW1lIGJyaW5ncyB0aGUgd2hvbGUgY2FzaW5vIGV4cGVyaWVuY2UgcmlnaHQgdG8geW91IHNvIHRoYXQgeW91IGFyZSBhYmxlIHRvIGV4cGVyaWVuY2UgaXQgZmlyc3RoYW5kLiBBbWF6aW5nbHksIHRoZSB1bml0IGlzIHNvIGFkdmFuY2VkIHRoYXQgaXQgbWFrZXMgcmVhbGlzdGljIHNvdW5kcyB0aGF0IHJlZmxlY3QgdGhhdCBvZiBjb2lucyBkcm9wcGluZyB3aGVuIHlvdSB3aW4gdGhlIHJlYWwgamFja3BvdCBpbiBhIGNhc2luby4gCkhpc3RvcmljYWxseSwgdGhlIFVTIGhhcyBub3QgZmFyZWQgd2VsbCBpbiB0aG9zZS4gCkJvcmRlci4gCldoYXQncyBkcmFzdGljYWxseSBpbiBvZmZpY2UgYnVpbGRpbmdzIGFjcm9zcyBjYW4ndCBiZSBmaXhlZCBieSB1c2luZyBIUiBzb2Z0d2FyZSBwYWNrYWdlcy5BbGwgeW91ciBlbnRpcmUgZmFtaWx5IG5lZWQgaXMganVzdCB0byByZXJlYWQgdGhlIHlvdXIgY2hpbGQncyBzdG9yeSwgQWxsIEdvb3NlIHRoZSBMYWlkIHlvdSBzZWUsIHRoZSBHb2xkZW4gRWdnIGNlbGwuIApZb3UgbWF5IG5lZWQgdG8gdmVyaWZ5IHlvdXIgaWRlbnRpdHksIGJ1dCBJIGRpZCBpdCBhbmQgaGFkIHZlcnkgZ29vZCByZXN1bHRzLiBDaG9vc2UgRk9MRCBBTkQgU0tJUCwuIFRoZW4sLiAKSU5UUk9EVUNUSU9OOiBCZWZvcmUgY2FzaW5vcyB0aWdodGVuZWQgdGhlaXIgc2VjdXJpdHkgd2l0aCBzb3BoaXN0aWNhdGVkIHN1cnZlaWxsYW5jZSBlcXVpcG1lbnQgYW5kIHByaXZhdGUgc2VjdXJpdHkgdGVhbXMuIFRoZSBiZXN0IGNyZXcgb2YgY2FzaW5vIGNoZWF0cyBpbiBoaXN0b3J5IC4KU2hvdWxkIHNvbWVvbmUgZG9pbmcgbWFrZSB3b3JrIG9yIGZsaXBwaW5nIGJ1cmdlcnMgYmUgY291bnRlZCBhcyB0aGVpciB3ZWlnaHQgdGhhdCBpcyB3b3JrIHRoYXQgbmVlZHMgdG8gYmUgZG9uZSBhbmQgaXQgYW4gYXBwcm9wcmlhdGUgYW1vdW50IG9mIHdvcmssIHRoZW4geWVzLgoiVGhhbmsgeW91ISBGb3Iga2lsbGluZyB0aGUgcHVibGljIG9wdGlvbiBhbmQgYmxvY2tpbmcgYW55IGhvcGVzIG9mIGl0cyBhZG9wdGlvbiwgdGhhbmsgeW91IHNpci4gV2hlbiBPbHltcGlhIFNub3dlIHNhaWQgbm8sIGl0IGNyb2FrZWQsIHJpZ2h0PyBObyB0aGUgb3B0aW9uIG5vdCBkZWFkLCBvciByZWQuIFRoZSBvcHRpb24sIHRoZSBvcHRpb24sIHRoZSBwdWJsaWMgd2FudHMgb3B0aW9ucyEgV2l0aG91dCBpdCwgaXQgYSBjb3Jwb3JhdGUgZ2l2ZSBhd2F5LiJMaWtlIHRoZSBZZXMgTWVuIG9yIEJpbGxpb25haXJlcyBmb3IgQnVzaCBvciB0aGUgbWFueSBncm91cHMgb2YgYWN0aXZpc3RzIHdobyBrZWVwIHBvaW50aW5nIG91dCB0aGUgYWJzdXJkaXR5IG9mIGEgc3lzdGVtIHRoYXQgbWFrZXMgbW9zdCBvZiB1cyB3b3JzZSBvZmYgYW5kIGEgc21hbGwgbnVtYmVyIG9mIHVzIG11Y2ggYmV0dGVyIG9mZiwgdGhlIEJpbGxpb25haXJlcyBmb3IgV2VhbHRoY2FyZSBiZWxpZXZlIHRoYXQgdG9tb3Jyb3cgcmVhbGx5IGNhbiBiZSBhIGJldHRlciBkYXkuIApBcyB3aXRoIG1vc3QgZ2FtZXMsIGV4cGVyaWVuY2UgaXMgYW5vdGhlciBlc3NlbnRpYWwgY29tcG9uZW50IGluIG1hc3RlcmluZyBibGFja2phY2sgcGxheS4gClBlcmx1IGtpcmFueWEga2l0YS4gZGV0aWsgZGV0aWsga2VtYXRpYW4gbWVuZ2hhZGFwaSBzYWthcmF0dWwgbWF1dCwgeWFuZyB0ZW50dW55YSBtZW5qYWRpa2FuIGtpdGEgaGFydXMgd2FzcGFkYSBkYW4gbWVtcGVyc2lhcGthbiBrZWphZGlhbiB5YW5nIHBhc3RpIGFrYW4gbWVueWFtYmFuZ2kuIHlhbmcgcGVudWxpcyBkYXBhdGthbiBtZWxhbHVpIGtlc2VtcGF0YW4gbWVtYmVyaWthbiBjZXJhbWFoIGRpIGFqYW5nIHNlcGVrYW4gLiBJZiBzZWFyY2hlZCBmb3IgYSBib29rIE5hc2thaCBDZXJhbWFoIEFnYW1hIGluIHBkZiBmb3JtYXQsIGluIHRoYXQgY2FzZSB5b3UndmUgY29tZSAuIApOb3QgdG8gc2F5IHRoYXQgcmVsaWdpb3VzIGV4dHJlbWlzbSBkb2Vzbid0IHB1bGwgZnJvbSBvbGQgYW5kIGlycmVsZXZhbnQgdGV4dHMgdG8gc3VwcG9ydCB0aGVpciBpZGVhbHMuIFRoZXkgY2VydGFpbmx5IGRvLCBidXQgZXZlbiBhIHNvY2lhbGlzdCBhdGhlaXN0IHdpbGwgaWdub3JlIGZhaWx1cmVzIGluIHRoZSBwYXN0IGFuZCBwdXNoIHJlY2tsZXNzbHkgdG93YXJkcyB0aGVpciBpZGVhbGlzdGljIHdvcmxkIGJ5IG9ubHkgc3RhdGluZyB0aGUgaWRlYXMgdGhhdCBzdXBwb3J0IHRoZW0uClRha2UgcGljdHVyZXMgb2YgeW91cnNlbGY6IEdyYWIgeW91ciBjYW1lcmEgYW5kIG1ha2UgYW4gYXBwb2ludG1lbnQgd2l0aCB5b3VyIGlubmVyIHBob3RvZ3JhcGhlci4gWWVzLCBZT1UhIEkgYW0gcmVhbGx5IHNoeSBhYm91dCBwb3NpbmcgaW4gZnJvbnQgb2Ygb3RoZXJzIGxpa2UgcmVhbCBtb2RlbHMgZG8sIHNvIEkgdGFrZSBteSBjYW0gYW5kIHN0YXJ0IHNob290aW5nIG15c2VsZiBpbiBkaWZmZXJlbnQgcG9zZXMuIApIb3cgVG8gUGxheSBBbmQgU3RyYXRlZ2llcyBGb3IgVHJpcGxlIFBsYXkgVmlkZW8gUG9rZXIgR2FtZQpUaGUgd2Vha25lc3MgaW4gaG91c2luZyBtYXJrZXRzIGFsc28gYWZmZWN0cyBtb3J0Z2FnZSBsZW5kaW5nLCBhIGJ1c2luZXNzIFRoZSBCaWcgRml2ZSBiYW5rcyBjb250aW51ZSB0byBkb21pbmF0ZSBpbiBDYW5hZGEuIApJdHMgbHlyaWNhbCBtaXggb2YgTGF0aW4gZmxhdm9yZWQgamF6eiwgbGlrZSBhIHNsb3cgZGFuY2UsIGNvb2xlZCB0aGluZ3Mgb2ZmIGJlZm9yZSBhIGxpdmVseSBlbmNvcmUgICB0aGUgbGFzdCBtb3ZlbWVudCBvZiBTYWludCBTYW5zJyAiQ2Fybml2YWwgb2YgdGhlIEFuaW1hbHMuIi4gClRoYW5rcyBmb3IgcG9zdGluZy4gSSBqdXN0IHRyaWVkIHRoaXMgYW5kIGl0IGRvZXNuIGtlZXAgdXAgd2l0aCB0aGUgd2F5IEkgdmFwZSBidXQgbm8gbWF0dGVyIGhvdyBJIHdpY2sgaXQgZG9lc24gRm9yIHNvbWUgcmVhc29uIEkgYWx3YXlzIHRha2UgMyBodWdlIGhpdHMgaW4gYSByb3cgdG8gZ2V0IG15IG5pYyBmaXguIApXaWxsaWFtIEJyb3duZSBpcyBwYXJ0IG9mIHRoZSBTRVJWRSBQaGlsaXBwaW5lcyBncm91cCB3aG8gYXJlIHZvbHVudGVlcmluZyBmb3Igc2V2ZW4gd2Vla3MgaW4gdGhlIFBoaWxpcHBpbmVzIGluIFNvdXRoIEVhc3QgQXNpYS4gV2hpbGUgdGhlcmUsIHRoZXkgd2lsbCB3b3JrIHdpdGggc29tZSBvZiB0aGUgbW9zdCBkZXByaXZlZCBwZW9wbGVzIGluIHRoZSB3b3JsZCB3aG8gbGl2ZSBpbiBzZXJpb3VzbHkgdW5kZXJkZXZlbG9wZWQgYW5kIHNxdWFsaWQgY29uZGl0aW9ucy4gSWYgeW91IHdvdWxkIGxpa2UgdG8gc3VwcG9ydCB0aGUgcHJvamVjdHMsIGEgc3BlY2lhbCBhY2NvdW50IGhhcyBiZWVuIG9wZW5lZCB3aXRoIEFJQiBCYW5rIHRvIGZhY2lsaXRhdGUgZG9uYXRpb25zLiBBY2NvdW50IE51bWJlcjogODEzOTIwMzQuIFNvcnQgQ29kZTogOTMgNzQgMzYuCkluIG9yZGVyIHRvIGNyZWF0ZSB0aGF0IGRpc3RhbmNlIHRob3VnaCwgeW91IG11c3Qgb2JzZXJ2ZSB0aGUgZW1vdGlvbnMgcHJhZ21hdGljYWxseS4gCkluIHRoZSBmaXJzdCAxMCAxNSB5ZWFycyBvZiBpdHMgZXhpc3RlbmNlLCB0aGUgVVNBRiBtYWRlIGNvbnNjaW91cyBkZWNpc2lvbnMgdG8gZGlmZmVyZW50aWF0ZSB0aGVtc2VsdmVzIGZyb20gdGhlIG9sZGVyIGJyYW5jaGVzLiBBIGdvb2QgZXhhbXBsZSBvZiB0aGlzIGlzIGRlc2VncmVnYXRpb24sIHdoaWxlIHRoZSBBcm15IGZvdWdodCB0byBrZWVwIGl0IGFyb3VuZCBhbmQgdGhlIE5hdnkvTWFyaW5lIENvcnBzIHdlcmUgc2xvdyB0byBpbXBsZW1lbnQgcG9saWN5IGNoYW5nZXMsIHRoZSBVU0FGIHF1aWNrbHkgZWxpbWluYXRlZCBpdHMgc2VncmVnYXRlZCB1bml0cyBpbiBhbiBlZmZvcnQgdG8gc2hvdyB0aGF0IGl0IHdhcyBkaWZmZXJlbnQgdGhhbiB0aGUgb3RoZXIgYnJhbmNoZXMuCkkndmUgYmVlbiBhc2tlZCBhIGZldyB0aW1lcyB0aGlzIHdlZWsgYWJvdXQgdGhlIHNvdXJjZSBvZiB0aGUgbWF0ZXJpYWxzIHRoYXQgSSB3cml0ZSBhYm91dC4gVGhlIG92ZXJ3aGVsbWluZyBtYWpvcml0eSBvZiB0aGUgYm9va3MgYW5kIHBhbXBobGV0cyBhcmUgcmlnaHQgaGVyZSwgaW4gbXkgc3RvcmUgb3Igd2FyZWhvdXNlIChzZWUgdGhlIGFib3ZlIGxpbmsgZm9yIHRoZSBzY2llbmNlIGJvb2tzdG9yZSksIHNvIEkgc2VlIGFsbG90IG9mIHRoaXMgc3R1ZmYgZXZlcnlkYXksIGN1cnJlbmN5IG9mIHRoZSByZWFsbSBhbmQgYWxsIHRoYXQuIE1vc3Qgb2YgdGhlIG9kZCB0aGluZ3MgdGhhdCBhcmUgZm91bmQgaW4gbXkgYmxvZyBmbGFncG9sZSBwYWludGluZywgemlwcGVyIHJlcGFpciwgZmluZGluZyBFbmdsYW5kIGluIHRoZSBHcmVhdCBQeXJhbWlkLCBidWlsZGluZyB0aGUgR3JlYXQgUHlyYW1pZCBpbiBEZXRyb2l0LCBhbmQgc28gb24pIGhhdmUgY29tZSB0byBtZSB2aWEgdGhlIExpYnJhcnkgb2YgQ29uZ3Jlc3MsIHdoZXJlIGZvciBtYW55IHllYXJzIEkgbWFuYWdlZCB0byBwdXJjaGFzZS90cmFkZSBmb3IgYml0cyBhbmQgcGllY2VzIG9mIHRoZWlyIHN1cnBsdXMuIE9uZSBsYXJnZSBwdXJjaGFzZSBpbiBwYXJ0aWN1bGFyIGZyb20gdGhlIExDIHRoZSA5MCwwMDAgaXRlbSAiUGFtcGhsZXQgQ29sbGVjdGlvbiBoYXMgcHJvdmlkZWQgdGhvdXNhbmRzIG9mIHRoZSBzdWJsaW1lIG11bmRhbmUsIG5haXZlIHN1cnJlYWwgbWFzdGVycGllY2VzIHRoYXQgSSd2ZSBmb3VuZCBzbyBpcnJlc2lzdGlibGUuIE1vc3Qgb2YgdGhpcyBtYXRlcmlhbCBoYXNuJ3QgZm91bmQgYSBwbGFjZSBpbiBteSBzdG9yZSwgd2hpY2ggYXMgeW91IG5vdyBrbm93IHNwZWNpYWxpemVzIGluIGNsYXNzaWNzIGluIG1vZGVybiBwaHlzaWNzIGFuZCBtYXRoZW1hdGljcywgYnV0IEkgZG8gaG9wZSB0byBiZSBhYmxlIHRvIHBsYWNlIHRoZW0gYXMgYSBjb2xsZWN0aW9uIGF0IHNvbWUgZGltIHBvaW50IGluIHRoZSBmdXR1cmUuIEkgd291bGQgbG92ZSB0byBnZW5lcmF0ZSBhIGZldyBib29rcyBvdXQgb2YgdGhlbSwgYW5kIEkgdGhpbmsgdGhhdCBhIGNob2ljZSA1MDAgb2YgdGhlbSBvciBzbyB3b3VsZCBtYWtlIGEgdHJlbWVuZG91cyBzaG93IHNvbWV3aGVyZSAoQnJvb2tseW4/KSBhcyBhIEZvdW5kIEFydCwgVW5leHBlY3RlZCBEYWRhaXN0LCBUaGUgU3VycHJpc2Ugb2YgdGhlIE5haXZlIFN1cnJlYWwsIHNob3cgb3Igc29tZSBzdWNoIHRoaW5nLCBzaG93aW5nIGEgbWFycmlhZ2Ugb2YgZGVzaWduLCBvdXRzaWRlciBpbnRlbGxlY3QgYW5kIHN1YmxpbWUgbXVuZGFuZS4gVGhlcmUgYXJlIGF0IHRoZSB2ZXJ5IGxlYXN0IHNldmVyYWwgdGhvdXNhbmRzIG9mIHRoZXNlIHRoaW5ncyBmcm9tIHRoZSBQYW1waGxldCBDb2xsZWN0aW9uIHRoYXQgYXJlIGdvcmdlb3VzIGFuZCBzbyB1bmV4cGVjdGVkLCB0aGF0IGFyZSBzdWNoIGludGVsbGVjdHVhbCAob3Igbm9uIGludGVsbGVjdHVhbCkgc3VycHJpc2VzLCB0aGF0IHRoZXkgd291bGQgKEkgdGhpbmspIG1ha2UgZm9yIGEgYmFuZyB1cCBzaG93LgpUbyB1bmxvY2sgYSBib251cyB5b3UgbXVzdCBrbm93IGJlZm9yZWhhbmQgaG93IG1hbnkgaGFuZHMgb2YgcG9rZXIgeW91IHdpbGwgcGxheS4gCldoZXRoZXIgeW91IGFyZSBjb25zaWRlcmluZyBhZG9wdGlvbiBvciB0cnlpbmcgdG8gY29uY2VpdmUgYSBjaGlsZCwgeW91IGNhbiBmaW5kIGZhY3RzIG9uIHRvcGljcyByYW5naW5nIGZyb20gZGVhbGluZyB3aXRoIHByZWduYW5jeSBzeW1wdG9tcyB0byBmaW5kaW5nIHRoZSB2ZXJ5IGJlc3QgYmFieSBzdHJvbGxlci4gTGFib3IgYW5kIGRlbGl2ZXJ5IHF1ZXN0aW9ucyBhcmUgdmVyeSBjb21tb247IHdlIGhhdmUgeW91ciBhbnN3ZXJzIGhlcmUsIGFsb25nIHdpdGggaW5mb3JtYXRpb24gb24gY2hpbGRyZW4ncyBiZWhhdmlvciBhbmQgaGVhbHRoLiBZb3UgbWF5IGV2ZW4gd2FudCB0byBrbm93IGhvdyB0byBhZmZvcmQgYSBiYWJ5IGluIHRoaXMgZWNvbm9teS4gT3VyIGFydGljbGVzIGFyZSBkZXNpZ25lZCB0byBoZWxwIHlvdSBhbnN3ZXIgYWxsIG9mIHRoZXNlIHF1ZXN0aW9ucyBhbmQgbW9yZS4KSSdtIGdsYWQgeW91ciBodXNiYW5kIGFuZCBiYWJ5IGdpcmwgYXJlIG9rIHRob3VnaC4gRGVmaW5pdGVseSBnZXQgdGhpcyBzdG9yeSBwdWJsaWNpc2VkIGFzIG11Y2ggYXMgcG9zc2libGUuIFRoYXQgd29tYW4gaXMgZGFuZ2Vyb3VzIGFuZCBtYXliZSBpdCdsbCBhbHNvIGdpdmUgc29tZSBlZHVjYXRpb24gdG8gcGVvcGxlIHdobyB3YXRjaCBzaGl0IGxpa2UgdGhpcyB1bmZvbGQuIApBc2tlZCBzZXZlcmFsIHRpbWVzIGluIGNvdXJ0IFRodXJzZGF5IGJ5IGFzc2lzdGFudCBDcm93biBhdHRvcm5leSBKZW5uaWZlciBIb2xtZXMgd2h5IGhlIG5ldmVyIHRvbGQgYW55b25lIGFib3V0IEtpc3NuZXIgYWxsZWdlZCBzZXh1YWwgYWR2YW5jZXMgYXQgdGhlIHRpbWUgb3IgaW4gdGhlIHllYXJzIHRoYXQgZm9sbG93ZWQsIHRoZSBjb21wbGFpbmFudCByZXBsaWVkOiB3YXMgdGhlIGZpcmUgY2hpZWYgaGUgd2FzIGEgdmVyeSBrbm93biBmaWd1cmUgd2l0aGluIHRoZSBjb21tdW5pdHksIGEgdGVhY2hlciwgYSBwdWJsaWMgZmlndXJlLiBzYWlkIEkgd2FzIHRoZSBvbmx5IG9uZSwgaXQgd291bGRuJ3QgaGFwcGVuIGFnYWluVGhlIGNvbXBsYWluYW50LCB0aGUgZmlyc3Qgb2YgZWlnaHQgYWxsZWdlZCB2aWN0aW1zIGV4cGVjdGVkIHRvIHRlc3RpZnkgYXQgdGhlIHRocmVlIHdlZWsgdHJpYWwsIGRlc2NyaWJlZCBoaW1zZWxmIGFzIGp1c3QgYSB0ZWVuYWdlciB3aG8gc3BlYWsgdmVyeSB3ZWxsLCB3aGlsZSBLaXNzbmVyLCB3aG8gd2FzIGFsc28gYSB0ZWFjaGVyLCBjaHVyY2ggb3JnYW5pc3QgYW5kIGNob2lyIGRpcmVjdG9yLCB3YXMgY2hhcmlzbWF0aWMgYW5kIGEgbGVhZGVyIGluIHRoZSBjb21tdW5pdHkuCldoYXQgaXMgdGhlIGJlc3QgcGxhY2UgdG8gZmluZCBudW1iZXJlZCBwb2tlciBjaGlwcwpOaWNrbmFtZSBBdCBvbmUgb2YgdGhlc2UgcHJpdmF0ZSBnYW1lcyBJIGJlYXQgdGhpcyBndXkgY2FsbGVkIFN0ZXZpZSBBdSBZZXVuZyBhbmQgaGUgc2FpZCBJIHBsYXllZCAnbGlrZSBhIGRldmlsZmlzaCBzbGFuZyBmb3IgdGhlIEphcGFuZXNlIGZ1Z3UgZmlzaCwgb3IgYmxvd2Zpc2gsIHdoaWNoIGlzIHBvaXNvbm91cyBpZiBpdCBub3QgcHJlcGFyZWQgZXhhY3RseSByaWdodC4gCkFiZXIgaWNoIGthbm4gTGV1dGUgKHVuZCBkYXp1IGdlaG9lcmVuIG51biBoYWx0IGF1Y2ggdmllbGUgU2luZ2xlIE1hZW5uZXIgZGllIEtvbnRha3RlIHN1Y2hlbikgZGFoaW4gZ2VoZW5kIGluZm9ybWllcmVuLCBkYXMgc2ljaCBkaWUgaW4gbGVnYWxlbSB1bmQgc2ljaGVyZW4gUmFobWVuIGJld2VndC4gCkVyIGdsYXVidCwgZGFzcyBkdXJjaCBBdXNsc2VuIGRlciBBcG9rYWx5cHNlIGJyaW5ndCBlcyBkYXMgQXVma29tbWVuIHZvbiBkZW4gendlaSBtdXNsaW1pc2NoZSBNZXNzaWFzIEplc3VzIENocmlzdHVzIHVuZCBkZXIgTWFoZGksIGVyb2Jlcm4gU2llIGRpZSBXZWx0IGRlcyBJc2xhbSB1bmQgZXdpZ2UgV2VsdGZyaWVkZW4gYnJpbmdlbi4uIApNb3N0IGhvdXNlIHJ1bGVzLCBpbmNsdWRpbmcgdGhvc2UgYXQgdGhlIFdTT1AsIHJlcXVpcmVzIHRoYXQgYSBwbGF5ZXIgc2hvdyBhbGwgaG9sZSBjYXJkcyBhdCBzaG93ZG93biwgcmVnYXJkbGVzcyBvZiB3aGljaCBjYXJkcyB3aWxsIGJlIHVzZWQgdG8gZnJvbSB0aGUgaGFuZC4gCkltbWVkaWF0ZWx5IHNlbGVjdCBFWElUR0FNRSwuIApUYWtpbmcgYWR2YW50YWdlIG9mIERlIEpvbmcgYW5kIHRoZWlyIGJhY2tzIHdvdWxkIGJlIGVub3VnaCB0byBnZXQgc29tZSBnb2Fscy4gTm8gbmVlZCB0byBwbGF5IG9mZmVuc2l2ZSBmb290YmFsbC4gSnVzdCBwbGF5IGZhc3QgYXR0YWNrcy4gCkkgaW50ZW5kZWQgdG8gcmVuYW1lIGhpbSAod2hhdCBjb29sIGRvZyBoYXMgYSAzIGxldHRlciBuYW1lPyksIGJ1dCB0aGUgbmFtZSBmaXQgdGhpcyBndXkgYmV0dGVyIHRoYW4gYW55IG90aGVyIG5hbWUgcG9zc2libHkgY291bGQuIEkgY2FuIHJlYWxseSB0ZWxsIHlvdSB3aHksIGJ1dCBhbnlvbmUgdGhhdCBrbmV3IFNlZiB3b3VsZCB0ZWxsIHlvdSB0aGF0IGhlIHdhcyB0aGUgbW9zdCBkb2cgdGhhdCBldmVyIHdhcy4gU28gU2VmIGhlIHN0YXllZCBmb3IgdGhlIG5leHQgMTEgeWVhcnMgNSBtb250aHMgYW5kIDE2IGRheXMuCkl0IGlzIGEgdXNlZnVsIGNvb2xpbmcgb2ZmIHBlcmlvZC4gClRoZSBnaXN0IG9mIHRoZSBjYWxsIHdhcyB0aGUgZ3V5IHdhcyBoZXIgbW90aGVyIGNvd29ya2VyIGFuZCBoZXIgbW90aGVyIGhhZCBzZXQgdGhlIGRhdGUgdXAsIGFuZCBvdXIgZ2lybCByZWFsbHkgd2FzbiBmZWVsaW5nIGl0LiAKRURJVDogVGhpcyBkaXNjdXNzaW9uIGlzIGJlY29taW5nIHZlcnkgdGltZSBjb25zdW1pbmcuIEkgcmVzcGVjdGZ1bGx5IGRpc2FncmVlIHdpdGggeW91ciBzdGFuY2UgdG93YXJkcyBjb2xvdXIgcGFsZXR0ZXMsIHRob3VnaCBJIHdvbiBkZW55IHRoYXQgaXQgY2FuIGJlIGltcHJvdmVkLiBJIGRvdWJ0IGVpdGhlciBvZiB1cyB3aWxsIGJ1ZGdlIGFuZCB0aGF0cyBmaW5lLiBXZSBjYW4gY29udGludWUgaWYgeW91IGxpa2UgYnV0IEkgbWFrZSBubyBwcm9taXNlIG9mIGEgcmVwbHkuIFNvcnJ5IGluIGFkdmFuY2UgZm9yIGFicnVwdGx5IGVuZGluZyB0aGUgYXJndW1lbnQuCk9yYWwgYW5hbCBsb3ZlbWFraW5nIGlzIHBvcHVsYXJseSBrbm93biBhcyByaW1taW5nLiBbU2VlIG15IHBvc3QgQW5hbGluZ3VzOiBUaGUgRGFyayBLaXNzLl0gVGhlIHZlcnkgaWRlYSBkaXNndXN0cyBzb21lIHBlb3BsZS4gT3RoZXJzIGVuam95IHBlcmZvcm1pbmcgaXQgb3IgYWxsb3dpbmcgdGhlbXNlbHZlcyB0byBiZSBwcm9iZWQgaW4gdGhpcyBzcGVjaWFsIHdheS4gUmVhZCBtb3JlRXhwZXJ0cyBlc3RpbWF0ZSBvbmUgaW4gZm91ciBoZXRlcm9zZXh1YWwgY291cGxlcyBoYXZlIGhhZCBhbmFsIHNleC4gVGhlIG11c2NsZXMgYW5kIG5lcnZlIGVuZGluZ3MgYXJvdW5kIHRoZSBhbnVzIGFyZSBoaWdobHkgc2Vuc2l0aXZlIGFuZCBjYW4gZmVlbCBmYW50YXN0aWMgd2hlbiB0b3VjaGVkLiBXb21lbiBHIHNwb3RzIGFyZSBlYXNpbHkgc3RpbXVsYXRlZCBpbmRpcmVjdGx5IHRocm91Z2ggYW5hbCBwbGF5IGFzIHdlbGwuIEluIG9yZGVyIHRvIGVuam95IGFuYWwgc2V4LCBob3dldmVyLCBjb3VwbGVzIG5lZWQgdG8gaGF2ZSBzb21lIGlkZWEgb2Ygd2hhdCB0aGV5J3JlIGRvaW5nLCBhbmQgdG8gYmUgYWJsZSB0byBjb21tdW5pY2F0ZSB3aXRoIGVhY2ggb3RoZXIuIEludGVyZXN0ZWQgaW4gZmluZGluZyBvdXQgaG93IHRvIGhhdmUgYW5hbCBzZXgsIG9yIGhvdyB5b3UgY2FuIGVuaGFuY2UgdGhlIGV4cGVyaWVuY2U/IEhlcmUgYXJlIHNvbWUgb2YgbXkgcG9zdHMgb24gaG93IHRvIGhhdmUgYW5hbCBzZXguIFNvbWUgd29tZW4gd2hvIGFyZSB1bndpbGxpbmcgdG8gdHJ5IGFuYWwgc2V4IHdpdGggdGhlaXIgY3VycmVudCBwYXJ0bmVyIG1heSBoYXZlIGhhZCBhIGJhZCBleHBlcmllbmNlIHdpdGggYW4gaW1wYXRpZW50IG9yIGlnbm9yYW50IGxvdmVyIGluIHRoZSBwYXN0LiBUaGF0IHdoeSBJIGRvbiByZWNvbW1lbmQgYXNraW5nIGEgd29tYW4gZm9yIGFuYWwgc2V4IHdpdGhvdXQgc29tZSBjYXJlZnVsIHByZXBhcmF0aW9uLiBJbnN0ZWFkIG9mIGFza2luZyBoZXIgdG8gdHJ5IGFuYWwgc2V4LCBpdCBiZXR0ZXIgdG8gbWFrZSBoZXIgd2FudCBhbmFsIHNleC4gV2hldGhlciB5b3UganVzdCBjdXJpb3VzIGF0IHRoaXMgc3RhZ2Ugb3IgYWxyZWFkeSB3aWxsaW5nIHRvIGluZHVsZ2UgeW91ciBhZHZlbnR1cm91cyBzaWRlLCBjaGVjayBvdXQgdGhlc2Ugc2l4IGRvIGFuZCBkb24gb2YgYW5hbCBzZXguClBpY2Fzc286IEJvdGggYSBub3VuIGFuZCBhIHZlcmIsIGl0IHJlZmVycyB0byB0aGUgc2xpY2luZyB1cCBvZiBvbmUncyBmYWNlIGluIHByaXNvbi4gIllvdSdsbCBoZWFyIHBlb3BsZSBzYXksICdIZSdzIHNvIGdvb2Qgd2l0aCBhIGtuaWZlLCBoZSdsbCBkbyBhIFBpY2Fzc28gb24geW91LCcgIiBzYXlzIFNhdmVsbGkuIFRoZSBtYXJrIG9mIGEgc2VyaW91cyBzbGFzaGluZyBpcyBhbHNvIGNhbGxlZCBhICJidWNrIGZpZnR5LiIgVGhhdCBtZWFucyBhdCBsZWFzdCAxNTAgc3RpdGNoZXMuCkFzIGZhciBhcyByZWFzb25zIGFuZC9vciBleGN1c2VzIGZyb20gYm90aCBjYW1wcyBhcmUgY29uY2VybmVkIGFzIHRvIHdoeSB0aGUgc3VwZXIgZmlnaHQgd2FzIG5ldmVyIG1hZGUsIEknbGwgbGVhdmUgaXQgdXAgdG8gdGhlIHJlYWRlcnMgdG8gY29tbWVudCBiZWxvdy4gClB1YmxpZXIgZHUgY29udGVudSBub24gYXBwcm9wcmksIHB1YmxpZXIgZGUgbWFuaXJlIHJwdGUgbGUgbW1lIGNvbnRlbnUgb3UgZHUgY29udGVudSBzaW1pbGFpcmUgb3UgaW1wb3NlciB1bmUgY2hhcmdlIGRyYWlzb25uYWJsZSBvdSBkJ3VuZSBpbXBvcnRhbmNlIGRpc3Byb3BvcnRpb25uZSAgbCdpbmZyYXN0cnVjdHVyZSBkdSByc2VhdTsKVGhlc2UgZGF5cywgcGVvcGxlIHNwZW5kIGJpbGxpb25zIG9mIGRvbGxhcnMgZXZlcnkgeWVhciB0byB0cnkgdG8gbG9vayB5b3VuZ2VyLiAKQW5hbGNvbm5lY3Rpb24gIDggcG9pbnRzICBzdWJtaXR0ZWQgMiBtb250aHMgYWdvClRoZSBtb25leSBGZWVkaW4nIHRoZSBQZW9wbGUgcmFpc2VzIGdvZXMgdG93YXJkcyBwcm92aWRpbmcgZm9vZCBmb3IgQ2VudHJhbCBPcmVnb24gZmFtaWxpZXMgaW4gb3IgYXQgcG92ZXJ0eSBsZXZlbC4gV2l0aCBhIGRlc2lyZSB0byBmaWxsIHRoZSBncmVhdGVyIG5lZWRzIG9mIHRoZSBjb21tdW5pdHksIEZUUCBhaW1zIHRvIG5vdCBvbmx5IHByb3ZpZGUgYmFzaWMgc3VzdGVuYW5jZSwgYnV0IHByb3ZpZGUgZmVsbG93c2hpcC4gIlRocm91Z2ggdGhpcyBzaGFyaW5nIG9mIHRpbWUsIHNwYWNlIGFuZCBicmVhZCwgd2Ugc3RyaXZlIHRvIGdpdmUgaG9wZSB0byB0aG9zZSB3aG8gaGF2ZSBleHBlcmllbmNlZCBjYXRhc3Ryb3BoaWMgZGV2YXN0YXRpb24sIGFuZCBtYWtlIHRob3NlIGJ1cmRlbnMgYSBiaXQgbW9yZSBiZWFyYWJsZSIgc3RhdGVzIHRoZSBub24gcHJvZml0J3MgbWlzc2lvbi4uIApTaGUgaGFzIGhlciBvd24gdGhvdWdodHMgYW5kIGlkZWFzIGFib3V0IHRoZSB0ZWFtIGFuZCB0aGV5IGFyZSBhY3R1YWxseSBjb21wbGV0ZWx5IG9wcG9zaXRlIG9mIHdoYXQgaGVyIGh1c2JhbmQgdGhvdWdodC4gCkJyZWVkaW5nIGJlZXMgd2l0aCAiY2xlYW4gZ2VuZXMiIGNvdWxkIGhlbHAgcHJldmVudCBjb2xvbnkgY29sbGFwc2UsIHN1Z2dlc3RzIGEgbmV3IHN0dWR5LiBTb21lIGJlZWhpdmVzIGFyZSAiY2xlYW5lciIgdGhhbiBvdGhlcnMsIGFuZCB3b3JrZXIgYmVlcyBpbiB0aGVzZSBjb2xvbmllcyBoYXZlIGJlZW4gb2JzZXJ2ZWQgcmVtb3ZpbmcgdGhlIHNpY2sgYW5kIHRoZSBkZWFkIGZyb20gdGhlIGhpdmUsIHdpdGggYXQgbGVhc3QgNzMgZ2VuZXMgaWRlbnRpZmllZCByZWxhdGVkIHRvIHRoZXNlIGh5Z2llbmUgYmVoYXZpb3JzLiBNb3N0IG9mIHdoYXQgeW91J3ZlIHNhaWQgaXMgaW5jb3JyZWN0IGFuZCBpdCdzIHJlYWxseSBpbXBvcnRhbnQgdG8gdW5kZXJzdGFuZCB0aGF0LiAKMjEgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ29JIG1lYW4sIFdheW5lIG9ubHkgbWVudGlvbmVkIFpvZSBhbmQgWmVsZGEgYmVjYXVzZSB0aGUgd2hvbGUgZXBpc29kZSB3YXMgYWJvdXQgaG93IHRoZXkgdHlwZXMgb2YgcGVvcGxlIGluIHRoZSB3b3JsZC4gVGhlcmUgd2FzIG5vIHJlYXNvbiB0byBicmluZyB1cCB0aGUgM3JkIGtpZCBQQiBoYWQgaW4gdGhlIHNob3csIHNvIEkgZG9uIHRoaW5rIGl0IHdhcyBhIG1pc3Rha2UgYXQgYWxsLlNpbmNlIGl0IHdhcyBhIGhvcnNpbmcgYXJvdW5kIGtub2NrIG9mZiBJIGFzc3VtZSB0aGlzIGJveSwgd2FzIHN1cHBvc2VkIHRvIGJlIHRoZSBzaW1pbGFyIHRvIEV0aGFuL0JyYWRsZXkuIApJZiB5b3UgY2FuJ3QgY29udHJvbCB5b3VyIHNwZW5kaW5nLCBhc2tpbmcgZm9yIGEgbG93ZXIgY3JlZGl0IGxpbWl0IG1heSBpbmRlZWQga2VlcCB5b3Ugb3V0IG9mIHRyb3VibGUgYnkgc2ltcGx5IGNhcHBpbmcgaG93IG11Y2ggeW91IGNhbiBib3Jyb3cuIApTaG91bGQgdGhhdCBjb3N0IDYgbWFuYT8gUHJvYmFibHkgbm90LiBEb2VzIGl0IGFjdHVhbGx5IGZlZWwgbGlrZSBCZXJzZXJrZXIgQ2FsbD8gTWF5YmUuIEJ1dCBvZiBjb3Vyc2UsIGp1c3QgZmVlbGluZyBsaWtlIEJlcnNlcmtlciBDYWxsIGluIERvdEEgaXNuIHRoZSBtb3N0IGltcG9ydGFudCB0aGluZyBJIGd1ZXNzLi4gCkFzIGEgcGVyc29uIGFnZXMsIHNoZSBsb3NlcyBtb3JlIG1vaXN0dXJlLiBVc2UgYm9keSBhbmQgZmFjaWFsIHNvYXBzIHRoYXQgd2lsbCBub3QgZHJ5IHlvdXIgc2tpbi4gCkEgcmVwb3J0IGZyb20gdGhlIENhcGl0YWwgRWNvbm9taWNzIHJlc2VhcmNoIGdyb3VwIG5vdGVzIHRoYXQgUnVzc2lhIGlzIGEgbWFqb3Igc3VwcGxpZXIgb2Ygb2lsIHRvIEdlcm1hbnkgYW5kIHRoZSBOZXRoZXJsYW5kcyBpbiBwYXJ0aWN1bGFyICJhbmQgb2YgbmF0dXJhbCBnYXMgdG8gV2VzdGVybiBFdXJvcGUgZ2VuZXJhbGx5LiAKQ29udmVyc2VseSwgb3VyIGJvZHkgaGFzIGEgaHlwZXJhY3RpdmUgaW1tdW5lIHN5c3RlbSBiZWNhdXNlIGl0LCB3ZSwgZXZvbHZlZCB3aXRoIHRoZXNlIGltbXVuZSBzdXBwcmVzc2luZyBwYXJhc2l0ZXMuIApPdmVydmlldyBmb3IgaW5kaWFub2xhCkludGVyZXN0aW5nIGhvdyBtYW55IG9mIHRob3NlIGNvbW1lbnRpbmcgb24gdGhlIGFydGljbGUgdGhpbmsgZm9yY2luZyB0aGUgdXNlIG9mIGNhc2ggaXMgc3R1cGlkLiAKVHdvIHllYXJzIGFnbywgdGhlIHN0dWRlbnQgdW5pb24gdGhhdCBqb2ludGx5IHNlcnZlcyBIdW1iZXIgQ29sbGVnZSBhbmQgdGhlIFVuaXZlcnNpdHkgb2YgR3VlbHBoIEh1bWJlciBjcmVhdGVkIHR3byBzbGVlcCBsb3VuZ2VzIGZvciBpdHMgdHdvIFRvcm9udG8gY2FtcHVzZXMsIGFuZCB0aGVuIGRvdWJsZWQgdGhlIG51bWJlciBvZiBiZWRzIGF0IG9uZSBvZiB0aGVtIGxhc3QgU2VwdGVtYmVyLgpUaGUgaW5pdGlhbCBkZWxpdmVyeS9zZXR1cCB0aW1lIGlzIGEgc3RhbmRhcmQgMndlZWtzIG9yIHNvLiBUaGUgSEZDIHNlcnZpY2Ugd2FzIGdvb2QgZm9yIHRoZSBmaXJzdCB3ZWVrLiBUaGVuIHdlIGhhZCBjb25zdGFudCBkcm9wIG91dHMgY29udGludW91c2x5IGZvciBiZXR0ZXIgcGFydCBvZiBhIHdlZWsuIApUaGUgZmluZGluZ3MgaW4gdGhlIHF1YXJ0ZXJseSByZXBvcnQgYXJlIGJhc2VkIG9uIGEgbnVtYmVyIG9mIGZhY3RvcnMgaW5jbHVkaW5nIHRoZSBsZXZlbCBvZiBpbWJhbGFuY2VzIGluIHRoZSBob3VzaW5nIG1hcmtldCByZWxhdGVkIHRvIG92ZXJidWlsZGluZywgb3ZlcnZhbHVhdGlvbiwgb3ZlcmhlYXRpbmcgYW5kIHByaWNlIGFjY2VsZXJhdGlvbiB3aGVuIGNvbXBhcmVkIHdpdGggaGlzdG9yaWNhbCBhdmVyYWdlcy4KSSd2ZSBoaXJlZCBhIHJlY2VwdGlvbmlzdCB3aXRoIGEgc2V2ZXJlIGRyaW5raW5nIHByb2JsZW0gYW5kIHVzZWQgYWNvbnRyYWN0b3Igd2hvIHdhcyB1bmluc3VyZWQgdW5iZWtub3duc3QgdG8gbWUuIEkndmUgcGFzc2VkIG9uIGRlYWxzIEkgcmVncmV0LiBJJ3ZlIGJvdWdodCBkZWFscyBJIHJlZ3JldC4gClF1YWRzIHRoYXQgZGlkbiByZWFsbHkgaGFwcGVuIGF0IG15IGhvbWUgZ2FtZSIgYXJlIGp1c3Qgc3VwZXIgbG93IGVmZm9ydCBjb250ZW50LiBKdXN0IG15IG9waW5pb24uLiAKU28gYWx0aG91Z2ggeW91IGFyZSBlYXRpbmcgbW9yZSBjaG9sZXN0ZXJvbCwgeW91ciBib2R5IGlzIGp1c3QgcHJvY2Vzc2luZyBpdCBmb3IgZW5lcmd5IGFuZCBvbmx5IG1ha2luZyB0aGUgbmVjZXNzYXJ5IGxldmVscyBmb3IgdHlwaWNhbCBib2R5IHJlcGFpci9wcm9jZXNzZXMgcmF0aGVyIHRoYW4gZGFtYWdlIGNvbnRyb2wgZnJvbSBpbmZsYW1tYXRpb24uIFRoYXQgd2h5IHBlb3BsZSB3aG8gZ28gbG93IGNhcmIgdHlwaWNhbGx5IG5vdGljZSBsb3dlciBjaG9sZXN0ZXJvbCBsZXZlbHMgdGhhbiB0aGV5IHByZXZpb3VzbHkgaGFkIChhbHRob3VnaCBub3QgYWx3YXlzKS4gSW4gYWRkaXRpb24sIGxvdyBjYXJiZXJzIGFyZSBtYWtpbmcgbW9yZSBvZiB0aGUgZmx1ZmZ5IExETCByYXRoZXIgdGhhbiB0aGUgZGVuc2UgTERMLi4gCkFuZCBpdCB3YXMgdW51c2VkLiAKVGhlIG5ldyBHaWFudHMgcGxheWVycy4gCiAxIHBvaW50ICBzdWJtaXR0ZWQgMSB5ZWFyIGFnb1RoZSBpZGVhIGlzIHRoYXQgeW91IGhhdmUgbm90IGRldmVsb3BlZCBhbnkgc3RyZW5ndGggdG8gc3VwcG9ydCB0aGUgd2VpZ2h0IGluIHRoYXQgbmV3IHJhbmdlIG9mIG1vdGlvbiBhbmQgYXJlIG1vcmUgbGlrZWx5IHRvIHRlYXIgc29tZXRoaW5nLiBXZXJlYXMgaWYgeW91IGRpZCBub3Qgc3RyZXRjaCwgeW91IHdvdWxkIG5vdCBoYXZlIGdvbmUgaW50byB0aGF0IHBvc2l0aW9uIGluIHRoZSBmaXJzdCBwbGFjZSBiZWNhdXNlIHRoZSBib2R5IGtub3dzIHdoZXJlIHRvIHN0b3AuTG90ZSBvZiBwZW9wbGUgdGhhdCBoYXZlIGRvbmUgaXQgYm90aCB3YXlzLCBhbmQgSSBldmVuIHVzZWQgdG8gc3RyZXRjaCBzdGF0aWNhbGx5IG15c2VsZiBiZWZvcmUgd2VpZ2h0cy4gCkFyZSBub3cgb24gdGhlIHN1Ym1pdCBwYWdlLiAKRm9yIGV4YW1wbGUsIGEgdG91cm5hbWVudCBtaWdodCBzdGFydCB3aXRoIHRoZSBibGluZHMgYXQgMjUgNTAsIGFuZCBwcm9ncmVzcyB0byA1MCAxMDAsIDc1IDE1MCwgMTAwIDIwMCwgMjAwIDQwMCwgYW5kIHNvIGZvcnRoLiBUaGUgZmFjdCB0aGF0IGJsaW5kcyBlc2NhbGF0ZSBkdXJpbmcgYSB0b3VybmFtZW50IGFuZCB0aGVyZSBhcmUgb25seSBhIHNldCBudW1iZXIgb2YgY2hpcHMgaW4gcGxheSBtYWtlcyB0b3VybmFtZW50IHBsYXkgc29tZXdoYXQgZGlmZmVyZW50IHRoYW4gbGl2ZSBnYW1lIHBsYXkuIApUaGVuIGFza2VkIE1hcnNoYWxsIGlmIHRoZSBtb25leSB3YXMgc3RpbGwgaW4gdGhlIGNhciBvciBkaWQgaGUgZ2V0IHJpZCBvZiBpdCBhbmQgaGUgc3RhdGVkLCBpbiB0aGUgY2FyIFdlbmRvdmVyIFBvbGljZSBvZmZpY2VyIFJpY2t5IEdpbGVzIEpyLiB3cm90ZSBpbiBhIHBvbGljZSByZXBvcnQuCkdldCByZWRkaXQgcHJlbWl1bUEgcGxhY2UgdG8gYXNrIGFueSBraW5kIG9mIHF1ZXN0aW9ucyByZWdhcmRpbmcgb3VyIGJlYXV0aWZ1bCBjaXR5LCBhcmUgeW91IGEgdG91cmlzdD8gRG8geW91IGhhdmUgYnVzaW5lc3MgaGVyZT8gQXJlIHBsYW5uaW5nIGEgdmFjYXRpb24/IERvIHlvdSBuZWVkIGhlbHA/IFlvdSBhcmUgaW4gdGhlIHJpZ2h0IHBsYWNlIQpUaGlzIGlzIGluIHRoaXMgdGhyZWFkIGF0IGxlYXN0IHR3aWNlLCBhbmQgY29tZXMgdXAgYWxsIHRoZSB0aW1lLiBUaGlzLCBhbG9uZyB3aXRoIHNvIG1hbnkgb3RoZXIgbWlzY29uY2VwdGlvbnMuCkxvaW4gZGUgcyBwbGFpbmRyZSwgbGVzIHBvcHVsYXRpb25zIHBhdXZyZXMgZHUgbm9yZCBkZSBsIChQb2xvZ25lLCBMaXR1YW5pZSksIGp1c3F1IHpvbmVzIGxlcyBwbHVzIHJlY3VsZXMgZGUgbCBzZXB0ZW50cmlvbmFsZSB1c3JlbnQgZGUgbGEgYmVyY2UgcG91ciBsYWJvcmVyIHVuZSBzb3J0ZSBkZSBiaXJlLCBib2lzc29uIGxlIHBsdXMgc291dmVudCBmZXJtZW50ZSBjb25udWUgc291cyBkaXZlcnMgbm9tcyAocGFyc3QsIGJhcnRzaCwgYmFydHNjaCwgYmFyc3pjejsgdG91cyBtb3RzIGRhbnMgbGVzcXVlbHMgb24gYSBiaWVuIHZvdWx1IGxpcmUgY2VsdWkgZGUgbGEgYmVyY2UpLCB0ZXJtZXMgcXVpIG5lIHNvbnQgY2VwZW5kYW50IHBhcyBzYW5zIHZvcXVlciBjZXR0ZSBmYW1ldXNlIHNvdXBlIHJ1c3NlLCBsZSBib3J0c2NoLCBxdWkgdGFpdCBjb25mZWN0aW9ubmUgcGFyIGxlcyBTaWJyaWVucyBhdmVjIGRlcyBmZXVpbGxlcyBkZSBiZXJjZSBhdXhxdWVsbGVzIG9uIGFqb3V0YWl0IHVuZSBwYXR0ZSBkIGdpYmllciB0cmFkaXRpb25uZWwgZGUgY2V0dGUgem9uZSBnb2dyYXBoaXF1ZSwgZCBsIGRlcyBub21zIHZlcm5hY3VsYWlyZXMgZGUgbGEgYmVyY2UsIHBhdHRlIGQgLCBxdWkgdHJhbnNjcml0IGdhbGVtZW50IGxlIG5vbSBsYXRpbiBicmFuY2EgdXJzaW5hLCBkZSBicmFuY2EsIHBhdHRlIGV0IHVyc3VzLCBvdXJzLiAKIkhlIHdhcyBhYnNvbHV0ZWx5IGEgaGlnaCBsZXZlbCB2aWRlbyBwb2tlciBwbGF5ZXIgaW4gdGVybXMgb2YgdGhlIGFtb3VudCB0aGF0IGhlIHNwZW50IGFuZCB0aGUgYW1vdW50IHRoYXQgaGUgd2FnZXJlZCwgaGUgc2FpZC4gcG9rZXIgaXMgYSBnYW1lIHdoZXJlIHlvdSBjYW4gZG8gYmV0dGVyIHRoYW4gdGhlIGd1eSBuZXh0IHRvIHlvdSBpZiB5b3UgdW5kZXJzdGFuZCBzdHJhdGVneS4iClNkaG9uICAyIHBvaW50cyAgc3VibWl0dGVkIDMgeWVhcnMgYWdvCkkgZmVsdCBsaWtlIGlmIEkgY291bGRuIHB1dCB1cCBhIGdyZWF0IHBlcmZvcm1hbmNlIHRvbmlnaHQgdGhlbiBpdCB3b3VsZCBiZSBteSBsYXN0LiAKQXMgd2UgYWdlIHRoaXMgZ3JhZHVhbGx5IGRpbWluaXNoZXMgdG8ganVzdCB0aGUgYm9uZXMgb2YgdGhlIHNwaW5lICh2ZXJ0ZWJyYWUpLCBicmVhc3Rib25lIChzdGVybnVtKSwgcmlicywgcGVsdmlzIGFuZCBzbWFsbCBwYXJ0cyBvZiB0aGUgdXBwZXIgYXJtIGFuZCBsZWcuIEJvbmUgbWFycm93IHRoYXQgYWN0aXZlbHkgcHJvZHVjZXMgYmxvb2QgY2VsbHMgaXMgY2FsbGVkIHJlZCBtYXJyb3csIGFuZCBib25lIG1hcnJvdyB0aGF0IG5vIGxvbmdlciBwcm9kdWNlcyBibG9vZCBjZWxscyBpcyBjYWxsZWQgeWVsbG93IG1hcnJvdy4gCk1vc3QgbGl0ZXJhbGx5IGhhdmUgeHh4LHh4eCx4eHguMDAgc2l0dGluZyBpbiBhIFNjaHdhYiBvciBGaWRlbGl0eSBhY2NvdW50IGludmVzdGVkLiAKU28gaG9wZWZ1bGx5IGl0IHdvcmtzIG91dCEpbm9tbm9tbWlzaCAgNDI1IHBvaW50cyAgc3VibWl0dGVkIDIgbW9udGhzIGFnb0EgcHJvYmxlbSB3aXRoIGEgbG90IG9mIGdyYWlucyBsaWtlIHF1aW5vYSwgb2F0cywgcmljZSwgZXZlbiBjYXVsaWZsb3dlciByaWNlIGlzIHRoYXQgbW9zdCByZWNpcGVzIHdpbGwganVzdCBhc2sgeW91IHRvIGJvaWwgaXQgb3Igc3RlYW0gaXQuIApEZWFsIHdhcyB3aGl0ZSBob3N0YWdlcyBnZXQgcmV0dXJuZWQuIFRoZXkgZGlkIG5vdCBkbyB0aGF0LiAKSSBoYXZlIDEwIG91dHMsIDIgb2YgdGhlc2Ugb3V0cyBoZWxwIG15IG9wcG9uZW50IGhhbmQvcG90ZW50aWFsbHkgaGVscCBpdCwgc28gSSBkbyAxMCAyIGFuZCBJIGhhdmUgOCBvdXRzIHJpZ2h0PwpJIGVkdWNhdGVkIG15c2VsZiBhYm91dCBzcG9ydHMgbnV0cml0aW9uIGFuZCByZWhhYmlsaXRhdGlvbiB0byBhaWQgaW4gbXkgcmVjb3ZlcnksIGFuZCBJIG5vdyB1c2UgdGhpcyBrbm93bGVkZ2UgdG8gaGVscCBteSBwYXRpZW50cyByZWNvdmVyIGZyb20gaW5qdXJpZXMgYW5kIGF0dGFpbiBoaWdoZXIgbGV2ZWxzIG9mIGhlYWx0aC4gCkJlc3Qgd2lzaGVzLCBlYXN5SG90ZWwgVmljdG9yaWFSZXNwb25zZSBmcm9tIFNhbWVlciBLLCBHZW5lcmFsIE1hbmFnZXIgYXQgZWFzeUhvdGVsIExvbmRvbiBWaWN0b3JpYVJlc3BvbmRlZCAzIHdlZWtzIGFnb0RlYXIgR3Vlc3QsIFRoYW5rIHlvdSBmb3IgbGVhdmluZyBhIHJldmlldy4gSXQgaXMgc2FkIHRvIGZpbmQgb3V0IHRoYXQgeW91ciBzdGF5IHdpdGggdXMgZmVsbCBzaG9ydCBvZiBleHBlY3RhdGlvbnMgb24gdGhpcyBvY2Nhc2lvbi4gZWFzeUhvdGVsIG9mZmVycyBzcGFjZSBlZmZpY2llbnQgcm9vbXMgYXQgYWZmb3JkYWJsZSBwcmljZXMgaW4gY2VudHJhbCBhcmVhcyBvZiB0aGUgY2l0eS4gCkJvdGggSXN0YW5idWwgYWlycG9ydHMgYWxyZWFkeSBhdCBmdWxsIGNhcGFjaXR5IGFuZCB0aGV5IGFyZSBvdmVyY3Jvd2RlZC4gSSBsaXRlcmFsbHkgZmxldyBhIHdlZWsgYWdvIHRvIEF0YXRyayAoSVNUKSBhbmQgZmxldyBiYWNrIGZyb20gU2FiaWhhIEdrY2VuIChTQVcpIHNvIHRoYXQgaSBzZWVuIHRoZSBjdXJyZW50IHNpdHVhdGlvbiBmb3IgYm90aCwgYW5kIHRoZXkgYXJlIGNyb3dkZWQgYXMgZnVjayBhcyBhbHdheXMuIFRoZSBuZXcgSXN0YW5idWwgYWlycG9ydCAoSVNMKSB3aWxsIGhlbHAgd2l0aCB0aGF0IGltbWVuc2VseS4KVGhlIG1haW4gYmlsbCwgLCBzYXcgY2hhbmdlcyB1bmRlciBhIHN1YnN0aXR1dGUgaW50cm9kdWNlZCBUaHVyc2RheSBuaWdodC4KR29pbmcgdG8gYWRkIHNvbWUgaW5zaWdodCB0byB0aGlzIHlvdSBtaWdodCBub3QgaGF2ZSB0aG91Z2h0IG9mLiBZb3VyIGFiaWxpdHkgdG8gbGFuZCBjZXJ0YWluIHRyaWNrcyBvbiBhIEtlbmRhbWEgYXJlIHZlcnkgZGlmZmljdWx0IGlmIHlvdSBkb24gaGF2ZSBhIGJyb2tlbiBpbiBLZW5kYW1hLiAKTmV0ZmxpeCB1bmZvcnR1bmF0ZWx5IGlzIGFuIGlzc3VlIHdpdGgganVzdCB0aGUgcmVtb3RlIGJ1dCBJIGhhdmUgbGVhcm5lZCB0byBvcGVyYXRlIE5ldGZsaXggdXNpbmcgdGhlIG1vdXNlIGZlYXR1cmUgb2YgdGhlIHJlbW90ZSB3aGljaCBlc3NlbnRpYWxseSBnaXZlcyBtZSBhIGN1cnNvciB3aGljaCBJIHVzZSB0aGUgd2hlZWwgYnV0dG9uIHRvIG5hdmlnYXRlIHRocnUgdGhlIGFwcC4uIApEZXIgVmVydGVpZGlnZXIgaGF0IGRlbiBSdWYgZWluZXMgQXJiZWl0c3RpZXJzLiAKSSB0cmllZCB0byBoaWRlIGl0LCBidXQgSSB3YXMgY3J5aW5nIHRvbyBoYXJkIGFzIHdhcyBldmVyeW9uZSBpbiB0aGUgcm9vbS4gVGhlIGF1bnQgYXNrZWQgbWUgaG93IHNoZSB3YXMgc3VwcG9zZWQgdG8gZG8gdGhpcyBhbmQgdGhlIG9ubHkgdGhpbmcgSSBjb3VsZCBzYXkgd2FzIEkgZG9uIGtub3cgYW5kIGl0IG9rYXkgdGhhdCB5b3UgZG9uIGtub3cuIEkgdGhpbmsgaXQgb2theSB0byBzaG93IHdlIGFyZSBodW1hbiBhbmQgdGhpcyBzdHVmZiBnZXRzIHRvIHVzLiAKSSdsbCBqdXN0IGhhdmUgdG8gbGl2ZSB3aXRoIHRoZSBuZXJ2ZSBkYW1hZ2UgYXMgaWYgdGhpcyBoZWFscyBpdCB0YWtlcyBhZ2VzLi4gCkl0IHdpbGwgYWZmZWN0IHdoYXQgYW5kIGhvdyB0aGUgdGVhY2hlcnMgdGVhY2gsIGFuZCB0aGUga2luZCBvZiBmZWVkYmFjayB5b3UgZ2V0IGZyb20geW91ciBwZWVycyB3aGVuIHlvdSBleGNoYW5nZSBtYXNzYWdlcy4gSSByZWFsbHkgY3VyaW91cyB3aGF0IHRoZSBjdWx0dXJlIGlzIGxpa2UgYSBiZWF1dHkgc2Nob29sIG1hc3NhZ2UgcHJvZ3JhbSwgYW5kIEkgaW1hZ2luZSB0aGVyZSBtYXliZSBtb3JlIG9mIGEgZm9jdXMgb24gZW1vbGxpZW50cyBhbmQgc2V0IHVwLCByZWxheGF0aW9uIG1hc3NhZ2UsIGFuZCBjdXN0b21lciBzZXJ2aWNlIG92ZXIgdG9waWNzIGxpa2UgYW5hdG9teSwgdHJlYXRtZW50IHByb3RvY29scywgYW5kIGV0aGljcy4gQnV0IHRoYXQgbGlrZSwgZXh0cmFwb2xhdGVkIGZyb20gc3RlcmVvdHlwZXMuIApUaGlzIHJlcHJlc2VudHMgYSAzLjUgcGVyY2VudCBkZWNyZWFzZSBpbiB0aGUgbnVtYmVyIG9mIHJvb21zIGluIHRoZSB0b3RhbCBhY3RpdmUgcGlwZWxpbmUgY29tcGFyZWQgdG8gQXVndXN0IDIwMTEuIFRoZSB0b3RhbCBhY3RpdmUgcGlwZWxpbmUgZGF0YSBpbmNsdWRlcyBwcm9qZWN0cyBpbiB0aGUgSW4gQ29uc3RydWN0aW9uLCBGaW5hbCBQbGFubmluZyBhbmQgUGxhbm5pbmcgc3RhZ2VzIGJ1dCBkb2VzIG5vdCBpbmNsdWRlIHByb2plY3RzIGluIHRoZSBQcmUgUGxhbm5pbmcgc3RhZ2UuLiAKQSBSZXNlYXJjaGVyIGlzIGluIFByZSBNb2RlcmF0aW9uLCB0aGVyZSBpcyBhIHJlYXNvbiBhbmQgaWYgdGhlIHByZSBtb2RlcmF0aW9uIGhhcyBiZWVuIGluIHBsYWNlIGZvciBhIHdoaWxlLCB0aGVuIHRoZSBkZWNpc2lvbiB3aWxsIGhhdmUgYmVlbiBhcHByb3ZlZCBieSBBbHkgTGFyaG9sbSBhbmQgaWYgbmVlZHMgYmUgYnkgdGhlIERpcmVjdG9ycyBvZiBOb3QgUGFuaWNraW5nIEx0ZC4gCkRVRkZVUywgQWxpY2UgTWFlIChIaXZlcykgICBkaWVkIHBlYWNlZnVsbHkgb24gSmFudWFyeSAxMiwgMjAxNSBhdCB0aGUgTGFrZSBvZiB0aGUgV29vZHMgRGlzdHJpY3QgSG9zcGl0YWwuIFNoZSBpcyBzdXJ2aXZlZCBieSBoZXIgZGV2b3RlZCBodXNiYW5kIG9mIDY1IHllYXJzIEppbTsgaGVyIGNoaWxkcmVuIEphbWVzLCBTYW5kcmEsIFdlbmR5IChJYW4pIGFuZCBTY290dDsgaGVyIGdyYW5kY2hpbGRyZW4gQW1hbmRhIChDaHJpcyksIEZhd24sIEtldmluLCBEYW5pZWwsIEplZmYsIENyYWlnLCBEdW5jYW4gYW5kIFNoYW5ub247IGhlciBsb3Zpbmcgc2lzdGVyIEtheTsgYnJvdGhlcnMgaW4gbGF3IENhcmwgYW5kIEppbSwgZm9ybWVyIHNvbiBpbiBsYXcgV2VzOyBuaWVjZXMsIG5lcGhld3MgYW5kIGNvdXNpbnMuIFNoZSB3YXMgcHJlZGVjZWFzZWQgYnkgaGVyIHNpc3RlcnMgVGhlbG1hIGFuZCBNaWxsaWUuIApFYWRyaWMgZG9lcyBub3QgYmV0cmF5IHRoZWxyZWQgdW50aWwgaGUgaXMgaWxsLCBhbmQgYXQgdGhlbHJlZCdzIGFnZSwgdGhpcyBpbGxuZXNzIGlzIGxpa2VseSB0byByZXN1bHQgaW4gZGVhdGguIApUaGV5IGFyZSBjdXJyZW50bHkgcHJpY2VkIG9uIGFtYXpvbiBpbiBteSBnZW9ncmFwaGljIHJlZ2lvbiAod2VzdCBjb2FzdCwgVVNBKSBhdCAkODkuOTkuIFN0aWxsIGEgdmVyeSBnb29kIHByaWNlIGFzIHRoZXkgdXNlZCB0byBjb3N0ICQxNTAgYXQgb25lIHBvaW50LiAKSXQgaXMgeW91ciBqb2IgdG8gdXNlIHRoZSB0d28gY2FyZHMgaW4geW91ciBwb3NzZXNzaW9uIHRoYXQgbm8gb25lIGVsc2UgY2FuIHNlZSBhbmQgYW55IHRocmVlIGNvbW11bml0eSBjYXJkcyB0byBtYWtlIHRoZSBiZXN0IGZpdmUgY2FyZCBoYW5kLiAKIlJlYWwgZXN0YXRlIG5lZWRzIGJvZGllcy4iLiAKQnkgZG9pbmcgdGhpcyBpdCBoYXMgZm9yY2VkIG1lIHRvIHRoaW5rIGFib3V0IGV2ZXJ5IGFzcGVjdCBvZiBteSBlbnZpcm9ubWVudC4gSSB0aGluayBiYWNrdXBzLCBJIHRoaW5rIHNjYWxhYmlsaXR5LCBJIHRoaW5rIGFib3V0IHJlZHVuZGFuY3kuIFdoZW4geW91IHN0YXJ0IHRoaW5raW5nIGFib3V0IHRob3NlIHRoaW5ncyB5b3Ugc3RhcnQgbGVhcm5pbmcgYWJvdXQgdGhlbSBiZWNhdXNlIG5vdyBhbGwgb2YgdGhlIHN1ZGRlbiB0aGV5IGFyZSBpbXBvcnRhbnQgdG8gaG93IHlvdSBsaXZlIHlvdXIgbGlmZSBvdXRzaWRlIG9mIHdvcmsuLiAKR3JhbmdlciBpcyBvbiB0cmlhbCBhdCB0aGUgT2xkIEJhaWxleSBhY2N1c2VkIG9mIG11cmRlciBhbmQgZmFsc2UgaW1wcmlzb25tZW50IGFsb25nc2lkZSBoZXIgTGV3aXNoYW0gYm95ZnJpZW5kIEt5cnJvbiBKYWNrc29uIGFuZCBoaXMgY2xvc2UgZnJpZW5kIE5pY2hvbGFzIENoYW5kbGVyLCBib3RoIDI4LgpBbmQgaHVtYW5zIGhhdmUgYmVlbiBzdWZmZXJpbmcgd2l0aCB0aGUgY29uZGl0aW9uIHNpbmNlIGF0IGxlYXN0IHRoZSB0aW1lcyBvZiBhbmNpZW50IEVneXB0IChhbmQsIGxpa2VseSwgZGVlcGVyIGludG8gaHVtYW4gaGlzdG9yeSB0aGFuIHRoYXQpLiBPcGl1bSBjdXJlcyBmb3IgaW5zb21uaWFjcyBhcmUgZGVzY3JpYmVkIGluIGFuY2llbnQgRWd5cHRpYW4gZG9jdW1lbnRzLCBhbmQgaW5zb21uaWEgaXRzZWxmIGlzIHJlZmVycmVkIHRvIGFzICJ0byBiZSBpbiBiZWQgYW5kIHNsZWVwIG5vdCwiIG9uZSBvZiB0aGUgInRocmVlIGxpdmluZyBoZWxscyIgZGVzY3JpYmVkIG9uIGFuIEVneXB0aWFuIGhpZXJvZ2x5cGggW3NvdXJjZXM6IFBhcmtlciBQb3BlLCBUb2RtYW5dLiAKUXVlbHF1ZXMgbWludXRlcyBwbHVzIHRhcmQsIEFtYW5kYSwgMjkgYW5zLCBkIGxhdGlubywgdW5lIHBvaXRyaW5lIGRlIDM0QyByZWZhaXRlLCBpbmRpcXVlIGxlIHNpdGUsIGlyYSBkaXNjcnRlbWVudCBsZSByZWpvaW5kcmUgYXZlYyBtaWxpZSwgdW5lIGpldW5lIHVuaXZlcnNpdGFpcmUgZGUgYm9ubmUgZmFtaWxsZSBxdWkgY29tbWVuY2Ugc29uIGJhY2NhbGF1cmF0LiBJbHMgcGFzc2Vyb250IHBsdXMgZGUgZGV1eCBoZXVyZXMgZW5zZW1ibGUuIApUaGVyZSBhcmUgbWFueSBkaWZmZXJlbnQgb3B0aW9ucyB0aGF0IGFyZSBhdmFpbGFibGUgdG8geW91IHdoZW4geW91IGFyZSBsb29raW5nIHRvIHNldCB0aGUgc2NlbmUsIGJ1dCBrZWVwIGluIG1pbmQgdGhhdCB3aGVuIHlvdSBhcmUgbG9va2luZyBhdCBnZXR0aW5nIHRoZSByaWdodCBraW5kIG9mIGVmZmVjdCB0aGF0IHRoZXNlIFBva2VyIENoaXBzIEZvciBTYWxlIGluIHF1ZXN0aW9uIGdpdmUgeW91IGEgd29uZGVyZnVsIHZpc3VhbCBhbmQgdGFjdGlsZSByZW1pbmRlci4uIApJbmZsdWVuY2Ugb2YgQ29sZCBXYXRlciBJbW1lcnNpb24gb24gTGltYiBhbmQgQ3V0YW5lb3VzIEJsb29kIEZsb3cgYXQgUmVzdApHZW50bHkgbWFzc2FnZSB0aGUgc3RpZmYgZmluZ2VycyBpbiB0aGUgdG9lcyBhbmQgaGFuZHMgYW5kIHRoZW4gcm90YXRlIHRoZW0gb25lIGF0IGEgdGltZS4gCkkgbm93IHVzZSBhIGJpemFycmUgbGF5b3V0IChzZWUgc2tld3doaWZmeSBmb3IgeGQ3NSBpbiB0aGUgcW1rIHJlcG9zaXRvcnkgaWYgeW91IGludGVyZXN0ZWQpLCBhbmQgaGF2ZSBmdWxseSBvcHRpbWlzZWQgZm9yIG1pbmltYWwgZmluZ2VyIG1vdmVtZW50IGV2ZW4gd2l0aCBzeW1ib2xzIChJIGEgcHJvZ3JhbW1lcikuLiAKV2hhdCBtYWtlcyBhbGwgb2YgeW91IHRoaW5rIGhlIHdhc24ndCBvbiB0aGUgY29tcHV0ZXIgaGltc2VsZj8gSGUgY2xhaW1zIGhlICdXYXMgdGhlcmUgd2l0aCB0aGF0IHdvbWFuJyAgIHdobyBmaXhlZCB0aGUgY29tcHV0ZXIgYW5kIHRoYXRzIGhvdyBoZSBrbmV3IGl0IGhhZCBpbnRlcm5ldC4gCkFjcm9jazcgIDUgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvCkh5cGVyaW9uMjAxMSAgMjYgcG9pbnRzICBzdWJtaXR0ZWQgMyBtb250aHMgYWdvCiJXZSB3YW50ZWQgdG8gdW5kZXJzdGFuZCBob3cgdGhlIGluZGl2aWR1YWwgY2VsbHMgaW4gb3VyIGJyYWlucyAgIG91ciBuZXVyb25zICAgd29yayB0b2dldGhlciB0byBtYWtlIHRoYXQgaGFwcGVuLCIgbGVhZCByZXNlYXJjaGVyIERyLiAKIkkgbmV2ZXIgY29tcGFyZSBteXNlbGYgdG8gb3RoZXIgd29tZW4gYXMgZXZlcnkgd29tYW4gaGFzIHRoZWlyIG93biBqb3VybmV5LCIgc2hlIGV4cGxhaW5lZC4gClRoZSBzaG93IHNoZSB3YXRjaGVzIGlzIGNhbGxlZCBOYXJ1dG8/IEFueXdheSwgSSBkb24gbGlrZSB0aGF0IHN0dWZmIGJ1dCBJIGRpZCB3YXRjaCBhbiBlcGlzb2RlIG9yIHR3byB3aXRoIGhlciBhbmQgSSBub3RpY2VkIHRoZSBibG9uZC9ibHVlIGV5ZWQgY2hhcmFjdGVycy4gTWF5YmUgMzcgeWVhcnMgYWluIGVub3VnaCBidXQgSXZlIHlldCB0byBzZWUgYSBibG9uZCBoYWlyLCBibHVlIGV5ZWQgQXNpYW4uIEVhc3Qgb3Igb3RoZXJ3aXNlLiBJZiBpZiB0aGVyZSBhcmUsIHRoZXkgY2VydGFpbmx5IG5vdCAxMDAlIEphcGFuZXNlLlNhbmN0dW1Xcml0ZXMgIDMgcG9pbnRzICBzdWJtaXR0ZWQgMTkgZGF5cyBhZ29JIG1lYW4gYnV0IHRvIHRha2UgdGhlIE5hcnV0byBleGFtcGxlLCB0aGF0IHNob3cgYWxzbyBoYXMgY2hhcmFjdGVycyB3aXRoLCBhbGwgbmF0dXJhbCBpbiB0aGUgY29udGV4dCBvZiB0aGUgc2hvdywgcGluayBoYWlyIGFuZCBncmVlbiBleWVzLCByZWQgZXllcywgc2lsdmVyIGhhaXIgYW5kIGJsYWNrIGV5ZXMsIHB1cnBsZSBoYWlyLCBibHVlIGhhaXIsIGdyZWVuIGhhaXIgYW5kIHRoZSBjb2xvciBwYWxldHRlIGlzIHRhbWUgY29tcGFyZWQgdG8gb3RoZXIgc2hvd3MuIApJIHNheSB0aGlzIGFzIGEgZG9jdG9yLiBCdXQgeW91IGFyZSBhIHBpZWNlIG9mIHNoaXQsIGFuZCB5b3UgYXJlIHdoeSBtZWRpY2FsIG1hbHByYWN0aWNlIGF0dG9ybmV5cyBnZXQgYSBiYWQgcmVwdXRhdGlvbi4uIApJJ20gbm90IGRlZmVuZGluZyBoZXIgYnV0LCBJJ3ZlIGhlYXJkIGZyb20gc2V2ZXJhbCBzb3VyY2VzIHRoYXQgSXQgd2FzICJzdWdnZXN0ZWQiIHRoYXQgTGFyaXNzYSBnbyBpbiBsaWtlIHRoYXQuIApJIHdhcyBhdCBhIHN0b3AgbGlnaHQsIGFuZCBJIHdhcyBvbiBteSB3YXkgdG8gc2VlIG15IGJyb3RoZXIuIApXaHkgaXMgdGhhdD8gT25lIG9mIHRoZSBsYXJnZXN0IHNlY3RvcnMgb2Ygb3VyIGVjb25vbXkgaXNuIHBhaWQgZW5vdWdoIGZvciBvbmUgcGVyc29uIHRvIHN1cnZpdmUgb24gYSBzaW5nbGUgaW5jb21lLiAKSGl2IG1ldG9kZSBtZW51cnV0IGNpcmkgcGVtaWphdGFuIHBhcmEgZG9yb3RoeSBvZGhhLiAKRXZlbiB0byB0aGlzIGRheSwgd2UgaGF2ZSBhIHN5c3RlbSBpbiBwbGFjZSB3aGVyZSB3ZSBjaGVjayBhbnkgJDIgdW5yZWNvZ25pemVkIGNoYXJnZXMgb24gb3VyIGNhcmRzLi4gClRoZXJlIGlzIGEgcGxheWVyIHdobyBwbGF5cyBhdCBteSBob21lIGdhbWVzIHdobyBoYXMgc29tZSBncmVhdCByZXN1bHRzLiAKRlJBTktGVVJULCBHZXJtYW55ICAgSXQgaXMgYSB0eXBpY2FsIG5pZ2h0IGluIHRoZSBtYXRlcm5pdHkgd2FyZCBvZiB0aGlzIGNpdHkncyBzZWNvbmQgYmlnZ2VzdCBob3NwaXRhbCwgYW5kIHRoZSBsb25lbGllc3QgcGxhY2UgaXMgdGhlIG51cnNlcnkuIEVtcHR5IGJhYnkgYmVkcyBhcmUgbGluZWQgdXAgYWdhaW5zdCBhIHdhbGwgbGlrZSByZW50YWwgY2FycyBpbiBhbiBhaXJwb3J0IHBhcmtpbmcgbG90LiAKSSBqdXN0IGxpa2UgdG8gYWRkIHRoYXQgSSB3YXMgcGh5c2ljYWxseSBhYnVzZWQgKHB1bmNoZWQsIGtpY2tlZCwganVzdCBnZW5lcmFsbHkga25vY2tlZCBhcm91bmQpIGJ5IG9uZSBvZiBteSBwYXJlbnRzLCBhbmQgd2hpbGUgc3BhbmtpbmdzIHdlcmUgZGVmaW5pdGVseSBsZXNzIHNldmVyZSB0aGFuIHRoYXQsIGl0IGRvZXNuIG1ha2UgdGhlbSBva2F5LiAKVGhlcmUgaXMgZXZpZGVuY2UgdGhhdCBhbGNvaG9sIGNhbiBkaXNydXB0IG91ciBhYmlsaXR5IHRvIGdldCBkZWVwIHJlc3RvcmF0aXZlIHNsZWVwLgpQcm9tb3RlckZvckJsbyAgIDggcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnbwpBY3JvdHQgZnJvbSBNaWR3YXkgVWFsbC4gClRoZSBhaW0gb2YgdGhpcyBzdHVkeSB3YXMgdG8gaW52ZXN0aWdhdGUgd2hldGhlciBtYXNzaXZlIHByb2xhcHNlZCBkaXNjcyBjYW4gYmUgc2FmZWx5IG1hbmFnZWQgY29uc2VydmF0aXZlbHkgb25jZSBjbGluaWNhbCBpbXByb3ZlbWVudCBoYXMgb2NjdXJyZWQuLiAKSSBkb24ndCBrbm93LiBTaGUgc2VlbXMgaW50ZW50IHRvIGR1Y2sgdGhlIGZpcnN0IGFtZW5kbWVudCBpc3N1ZXMgYnkgc3F1YXJlbHkgc2F5aW5nIHRoYXQgdGhlIHByb2JsZW0gaXMgd2l0aCB0aGUgcmVwcmVzZW50YXRpb25zIFN0b25lIGFuZCBoaXMgY291bnNlbCBtYWRlIGluIGNvdXJ0LiBNb3Jlb3ZlciwgZGVmZW5kYW50cyBhcmUgcm91dGluZWx5IGdhZ2dlZCBpbiBoaWdoIHByb2ZpbGUgY2FzZXMuIApXaGljaCBnZW5lcmFsbHkgc3BlYWtpbmcsIGlzIG1vcmUgbGlrZWx5IHdoZW4gaXQgY29tZXMgdG8gZGl2b3JjZXMsIHVubGVzcyB5b3UgY2FuIHB1bGwgb3V0IHNvbWUgcmVsaWFibGUgc291cmNlcyB0aGF0IHNheSBtb3N0IGRpdm9yY2VzIGVuZCB3ZWxsPy4gClRoaXMgaGFzIHRoZSBhZGRlZCBiZW5lZml0IG9mIGtlZXBpbmcgeW91ciB3aW5ncyB0aGlubmVyIGJlY2F1c2UgdGhleSBkb24gaGF2ZSB0byBiZSB0aGljayBlbm91Z2ggdG8gY29tZm9ydGFibHkgaG91c2UgcGFzc2VuZ2Vycy4uIAogQW5kIHllcyBieSB0aGUgd2F5LCBJIERPIGhhdmUgYSBSaWNrIGFuZCBNb3J0eSB0YXR0b28uIApJIGRvbiB3YW50IHRvIGhhdmUgdG8gc2VuZCB5b3Ugb3V0LiIgSSBzYXkgaXQgc28gcXVpZXRseSB0aGF0IG5vIG9uZSBlbHNlIGNhbiBoZWFyIG1lIGJ1dCB5b3UgYmV0dGVyIGJlbGlldmUgaGUgY2FuLiBJdCB3b3JrcyBzbyB3ZWxsIHRoYXQgSSB1c3VhbGx5IGRvbiBoYXZlIHRvIHNlbmQgaGltIG91dCBmb3IgYSBjb29sIGRvd24uIApUaGUgdXRpbGl6YXRpb24gb2YgdGhlIHRvb2wgb2YgdGhlIGh1bWFuIGJvZHkgbWluZCB0byBtYW5pZmVzdCBhbmQgZXhwcmVzcyB0aGUgZm9ybWxlc3MgZm9ybSBvZiBsaWZlIHRoYXQgd2UgcmVhbGx5IGFyZTogcHJlc2VuY2Ugb2Ygb2JzZXJ2aW5nIGF3YXJlbmVzcy9jb25zY2lvdXNuZXNzLCBldGVybmFsIHNpbGVuY2UgYW5kIHBlYWNlIChibGlzcyksIHVuY29uZGl0aW9uYWwgbG92ZS5UaGlzIGJlY29tZXMgZXZlcnlvbmVzIHBvc3NpYmlsaXR5IGFzIHNvb24gYXMgdGhlIGVnbyBpZGVudGl0eSBoYXMgYmVlbiBkaXNjb3ZlcmVkIHRvIGJlIGFuIGlsbHVzaW9uLCBiZWxpZWZzIGFyZSB0dXJuZWQgaW50byBrbm93aW5nIGFuZCB0aGUgc3ViY29uc2Npb3VzIG1pbmQgaXMgdGF1Z2h0IHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gbWVtb3J5IGFuZCByZWFsaXR5LiBUaGVuIGV2ZXJ5IHNlbnNvcnkgZXhwZXJpZW5jZSBpbiBkYWlseSBsaWZlIGNhbiBiZSB1c2VkIGFzIGEgc2lnbmFsIGZvciBTZWxmIFJlbWVtYmVyaW5nICAgdGhlIG1pbmQgY2FuIGluc3RhbnRseSBzaGlmdCB0byB0aGUgcGVyc3BlY3RpdmUgb2Ygc2lsZW50IGF3YXJlbmVzcyBpbiB0aGUgTm93LCBiZSBhd2VkIHdpdGggdGhlIG15c3Rlcnkgb2YgbGlmZS4gCklmIHlvdXIgcmVhc29uIGZvciB3YW50aW5nIGEgY3JlZGl0IGNhcmUgaXMgdG8gYnVpbGQgeW91ciBjcmVkaXQsIGRvbiB3b3JyeSB0b28gbXVjaCBhYm91dCBwZXJrcy9jYXNoIGJhY2svcG9pbnRzLiBKdXN0IHBpY2sgYSBjYXJkLCB1c2UgaXQgb2NjYXNpb25hbGx5IChtYXliZSB1c2UgaXQgZXZlcnkgdGltZSB5b3UgYnV5IGdhcyksIGFuZCBwYXkgaXQgb2ZmIGluIGZ1bGwgZWFjaCBtb250aC4KSXMgdGhlIGluZXZpdGFibGUgcHJpY2UgdGhhdCBsYXJnZSBzdGF0ZXMgdGhhdCBjb250cm9sIGh1Z2Ugc3dhdGhlcyBvZiBsYW5kIGFuZCBleHRyYWN0IHdlYWx0aCBmcm9tIGEgdmFyaWV0eSBvZiBwb3B1bGF0aW9ucyB0byBmaW5hbmNlIHRoZSBtaWxpdGFyeSBtaWdodCBuZWNlc3NhcnkgZm9yIHN1Y2ggY29udHJvbCBwYXkuIElzIGEgc3RvcnkgYXMgb2xkIGFzIFJvbWUgYW5kIGFzIGNvbnRlbXBvcmFyeSBhcyBBbWVyaWNhLi4gClRoZSBwbGFuIHNob3VsZCBpbmNsdWRlIHN0b3JhZ2UgYW5kIHJldGVudGlvbiBzY2hlZHVsZXMuIApUaGUgYXJyaXZhbCBvZiBhIG5ldyBiYWJ5IG9mdGVuIGJyaW5ncyBicm9rZW4gbmlnaHRzLCBidXQgYSBQTkQgc3VmZmVyZXIgd2lsbCBvZnRlbiBiZSB1bmFibGUgdG8gc2xlZXAgZXZlbiB3aGVuIHRoZSBiYWJ5IGlzIHNsZWVwaW5nLiAKTmVpdGhlciBsaWtlZCBpdCwgYm90aCB3YW50ZWQgdG8gYmUganVzdCBHcmFuZG1hLCBidXQgSSB0b2xkIHRoZW0gaXQgd2FzIHNvIHNoZSB3b3VsZCBrbm93IHRoZWlyIHZvaWNlcyBhcGFydCAoREQgbW9zdGx5IHNwb2tlIHRvIHRoZW0gb24gdGhlIHBob25lIHNvIGJvdGggYmVpbmcganVzdCBHcmFuZG1hIHdvdWxkIGhhdmUgbm90IG1hZGUgYSBjbGVhbiBsaW5lIGJldHdlZW4gdGhlbSkuLiAKQSBydWxlciBvciB0YXBlIG1lYXN1cmUuIFlvdSBvbmx5IG5lZWQgdG8gbWVhc3VyZSBhIGZldyBpbmNoZXMgKGNlbnRpbWV0cmVzKSwgc28gYSBydWxlciB3aWxsIGRvIG5pY2VseS4KTm90IG9ubHkgdGhpcywgYm9va3MgbWF5IG5vdyBiZSByZWFkIGFuZCBkb3dubG9hZGVkIG9ubGluZS4gCldlIGNhbiBlZmZvcnRsZXNzbHkgb2JzZXJ2ZSB0aGF0IHdpdGggdGhlIGltcHJvdmVtZW50IG9mIGV4cGVydGlzZSBpbiB0aGUgd29ybGQgb2YgdGVjaG5vbG9neSBhdCBhIGZhc3RlciBwYWNlLCB0aGUgaW50ZXJuZXQgaGFzIG5vdyBiZWNvbWUgYW4gYWJvZGUgb2YgYW11c2VtZW50IGZvciB3b21lbiBhcyB0aGV5IGNhbiBlYXNpbHkgc3BlbmQgdGhlaXIgdGltZSBtb3JlIGF0IGEgY29tcHV0ZXIuIApBcyB3ZSdyZSB3YWxraW5nIGRvd24gdGhlIHNpZGV3YWxrIHRoaXMgc2hvcnQsIGRydW5rIGR1ZGUgc3RhcnRlZCB0byBjcm9zcyB0aGUgc3RyZWV0IHRvd2FyZHMgdXMuIApGYW50YXN0aWMgQmVhc3RzIGFuZCBUYWxlcwpIaXMgZmF0aGVyIHdhcyBpbiB0aGUgY29uc3RydWN0aW9uIGluZHVzdHJ5IGFuZCBoaXMgbW90aGVyIHNvbGQgc3RvY2sgZm9yIFBHIE5ld3NvbSBtYXJyaWVkIGhpcyB3aWZlLCBUZXNzYSwgaW4gMTk2NiBhbmQgdGhlIGNvdXBsZSBoYWQgdGhlaXIgc29uIEdhdmluIGEgeWVhciBsYXRlciBhbmQgYSBkYXVnaHRlciwgSGlsYXJ5IG5vdyBIaWxhcnkgTmV3c29tIENhbGxhbiBpbiAxOTY4LiBUaGUgY291cGxlIGRpdm9yY2VkIHdoZW4gR2F2aW4gd2FzIHN0aWxsIGEgYm95LiBUZXNzYSBOZXdzb20gZGllZCBhdCA1NSBpbiAyMDAyIGFmdGVyIGEgbG9uZyBmaWdodCB3aXRoIGJyZWFzdCBjYW5jZXIuClRoZXkgaGFkIGEgY291cGxlIG9mIHRhYmxlcyBmdWxsIG9mIGlQaG9uZXMsIGFuZCBJIHN0b3BwZWQgdG8gcGxheSB3aXRoIG9uZS4uIApDdW5uaW5nIHBlb3BsZSBiZXR0ZXIgdGhlbXNlbHZlcyBieSBmb29saW5nLCB0cmlja2luZywgb3Igb3RoZXJ3aXNlIGRlY2VpdmluZyBvdGhlciBwZW9wbGUuIEEgZ2l2ZW4gcGVyc29uIGlzIG11Y2ggZWFzaWVyIGZvciBhIGN1bm5pbmcgcGVyc29uIHRvIHRyaWNrIHdoZW4gaGlzIHN0cmVuZ3RocyBhbmQgd2Vha25lc3NlcyBhcmUga25vd24sIHJhdGhlciB0aGFuIHVua25vd24uIApJIHVuZGVyc3RhbmQgdGhhdC4gCkkgc2VjdXJlIG15IHdpbiBpbiB0aGUgcXVhcnRlciBmaW5hbCwgYW5kIHdhcyB3YWl0aW5nIHRvIHNlZSB3aG8gSSBmYWNlIGluIHRoZSBzZW1pLCBpdCB3YXMgYSB0b3NzIHVwIGJldHdlZW4gIk0iIGFuZCAiQyIuIApTbyBpdCBtdXN0IGxvb2sgcXVpdGUgaGlsYXJpb3VzICAgdXMgYWxsIHN0YW5kaW5nIHRoZXJlIG5vZGRpbmcsIGdvaW5nIG1tbSBtbW0sIG1tbSBtbW0sIG1tbSBtbW0hIERyIFdhbmcgbG92ZXMgdG8gc21pbGUsIGhlIHRlbGxzIFBldGUgaGUgaGFzIGEgbWFzc2l2ZSB0dW1vciB3aXRoIGEgc21pbGUgb24gaGlzIGZhY2UuIApJdCBkb2Vzbid0IG1hdHRlciBob3cgaGVpbm91cyB0aGUgY3JpbWVzIHlvdSd2ZSBiZWVuIGFjY3VzZWQgb2YsIHlvdSBnZXQgYSB0cmlhbC4gCkpvaG4gSGVucnkgIkRvYyIgSG9sbGlkYXkgaXMgb25lIG9mIHRoZSBtb3N0IGZhbW91cyBuYW1lcyBmcm9tIHRoZSBlcmEgb2YgdGhlIFdpbGQgV2VzdC4gQSBTb3V0aGVybiBnZW50bGVtYW4gb2YgbWVhbnMgYW5kIGVkdWNhdGlvbiwgRG9jIHdhcyBzdHJ1Y2sgYnkgb25lIHRyYWdlZHkgYWZ0ZXIgYW5vdGhlci4gV2hlbiBoZSBjb3VsZCBubyBsb25nZXIgcHJhY3RpY2UgaGlzIHRyYWRlIGR1ZSB0byBoaXMgdHViZXJjdWxvc2lzLCBoZSBoYWQgdG8gdHVybiB0byBhbm90aGVyIG9uZSB0byBtYWtlIGhpcyB3YXkgaW4gdGhlIHdvcmxkLiBUaGF0J3MgaG93IGhlIGJlY2FtZSBhIGdhbWJsZXIsIHVzaW5nIGhpcyBzaGFycCBpbnRlbGxlY3QgdG8gY29tZSBvdXQgYWhlYWQuIE9mIGNvdXJzZSwgaGlzIGhvdCB0ZW1wZXIgZ290IGhpbSBpbiB0cm91YmxlLCBhbmQgaGUgb2Z0ZW4gc2hvdCBoaXMgd2F5IG91dCBvZiBpdC4gQSBmcmllbmQgdG8gdGhlIGZhbW91cyBFYXJwcywgRG9jIHdhcyBib3RoIGEgZ3JlYXQgc3RyZW5ndGgsIGFuZCBhIGdyZWF0IHdlYWtuZXNzIGZvciB0aGVtLgpJIHNhdyBhIGxvdCBvZiBwcm9ncmFtcyBJIGxpa2VkIGhlcmUsIGxpa2UgSmFtbWllcyBhbmQgSmVhbnMsIHdoaWNoIGlzIGEgZ3JlYXQgY29tbXVuaXR5IGRpbm5lciBmb3IgZmFtaWxpZXMuIFJvZGVwaCBoYXMgYSBncmVhdCBkYXkgc2Nob29sLCBIaWxsZWwgQWNhZGVteSwgd2hpY2ggSSdtIGhhcHB5IG15IGRhdWdodGVyIGdldHMgdG8gYmUgYSBzdHVkZW50IGF0IGFuZCBteSB3aWZlIGdldHMgdG8gdGVhY2ggYXQuIApQZXJzb25hbGx5LCBJIGp1c3QgaW5mb3JtIGhpbSB0aGF0IHlvdSBjYW4gY29udHJvbCBoaXMgZmVlbGluZ3Mgb2YgaW5hZGVxdWFjeSwgYnV0IHlvdSBjYW4gY29udHJvbCB5b3VyIHRvbGVyYW5jZSBmb3IgYnVsbHNoaXQuIEFuZCBtb3ZlIG9uLiBRdWlja2x5LiAKSXQgcHJvYmFibHkgYWxsIGluIG15IGhlYWQgYmVjYXVzZSBpdCB0b28gZWFybHksIGJ1dCBJIGhhZCB0byBydW4gZm9yIHRoZSBidXMgdGhpcyBtb3JuaW5nIChzdGlsbCBtaXNzZWQgdGhlIGZ1Y2tlciksIGFuZCB0aGUgcnVuIHNlZW1lZCBlYXNpZXIgYW5kIHdpdGggYSBiaXQgb2YgYSBib3VuY2UgdG8gbXkgc3RlcC4gT2RkLkkgZGVjaWRlZCB0aGF0IHdoZW4gSSBnZXQgZG93biB0byBteSBmaXJzdCBnb2FsIHNoYXBlL3dlaWdodCwgbXkgdHJlYXQgd2lsbCBiZSBhIG5ldyBURkMgamVyc2V5LiAKQSBoZWFyaW5nIG9uIHRoZSBhbGxlZ2F0aW9ucyB3aWxsIGJlIGhlbGQgaW4gb3BlbiBzZXNzaW9uLCB0aGVuIHRoZSBjb21taXR0ZWUgd2lsbCBnbyBpbnRvIGNsb3NlZCBzZXNzaW9uIHRvIGRlY2lkZSB3aGF0IGFjdGlvbiB0byByZWNvbW1lbmQgdG8gdGhlIGZ1bGwgY291bmNpbC4KQXMgSSBlbnRlcmVkIGluc2lkZSwgYSBuaWNlIGxhZHkgb24gY291bnRlciBncmVldGVkIG1lIGFuZCBhc2sgd2hldGhlciBJIG5lZWQgbWFzc2FnZSwgSSBzYWlkIHllcyEgU2hlIGFza2VkIG1lIHRvIHNpdCBpbiBjb21mb3J0YWJsZSBjaGFpciwgb2ZmZXJlZCBtZSBjaGlsbGVkIHdhdGVyLCBmaXJzdCBJIGFza2VkIGhlciBhYm91dCBhdmFpbGFiaWxpdHkgb2YgJ01vJywgYXMgSSBoYWQgcmVhZCBzb21lIG5pY2UgcmV2aWV3IGFib3V0IGhlciBpbiBkaWZmZXJlbnQgYmxvZ3MsIGJ1dCBNYW1hc2FuIHRvbGQgbWUgdGhhdCAnTW8nIGlzIG9uIGhvbGlkYXkgYW5kIG1pZ2h0IHdvbid0IHJldHVybiB0aWxsIG5leHQgeWVhciwgYnV0IHNoZSBhc3N1cmVkIG1lIHRoYXQgdGhleSBoYXZlIG90aGVyIGZpbmUgbGFkaWVzIGZvciBteSBtYXNzYWdlLC4gClNhbXVyZ3V5OTkwICA0IHBvaW50cyAgc3VibWl0dGVkIDcgaG91cnMgYWdvCkkgcmVjb2duaXplIEogYXJlIG1ha2luZyBqb2tlcywgYW5kIEkgcmVzcGVjdCB0aGF0IHRoZXkgY2FuIGNvbWUgdG8gdGhlaXIgb3duIG9waW5pb25zIHRoYXQgbWF5IGJlIGRpZmZlcmVudCBmcm9tIG1pbmUuIEkganVzdCB0aGluayBpdCBleHRyZW1lbHkgc2hpdHR5IHRvIGhvbGQgdGhvc2Ugb3BpbmlvbnMgaW4gc3VjaCBoaWdoIGVzdGVlbSB3aGVuIHRoZXkgaGF2ZSBhZG1pdHRlZCB0byBiZWluZyBuZWFybHkgZW50aXJlbHkgaWdub3JhbnQgYWJvdXQgZXZlcnl0aGluZyBlbHNlIHRoZXkgYWR2aXNlIGFib3V0IG9uIHRoZSBwb2RjYXN0Li4gCiJJdCdzIHVuZm9ydHVuYXRlIHRoYXQgaGUncyBub3QgbW9yZSBjb25jZXJuZWQgYWJvdXQgdGhlIGNoYXJpdGllcywiIEpvbmVzIHNhaWQuClBlb3BsZSBnZXQgYSBsb3Qgb3V0IG9mIGN1dHRpbmcgdGhlIGNvcmQgb2YgYXR0YWNobWVudCB0byB0aGVpciBwcmVzZW50IHBhcnRuZXIgb3Igc3BvdXNlLgpXb3VsZG4ndCBpdCBiZSB3aXNlciB0byBhcmd1ZSB0aGF0IERvZHQncyBpbGxlZ2FsIHRlbmFuY3kgd2FzIHdpdGggdGFjaXQgY29uc2VudCwgc2luY2UgdW5pdmVyc2l0eSBjb3BzIHdlcmUgbGVhdmluZyBoaW0gaW4gdGhlIHRyZWUsIHVudGlsIHRoZSBwb2tpbmcgaW5jaWRlbnQ/CklmIGEgcGxheWVyIHJhaXNlcyBpbiBhZnJlZSBUZXhhcyBob2xkZW0gcG9rZXJnYW1lLCBpdCBqdXN0IG1lYW5zIHRoYXQgeW91IGFyZSBiZXR0aW5nIGEgYmlnZ2VyIGFtb3VudCB0aGFuIHRoZSBvcmlnaW5hbCBhbW91bnQuIFlvdSBoYXZlIHRvIHdhaXQgZm9yIHRoZSBvdGhlciBwbGF5ZXJzIHRvIGRlY2lkZSB3aGV0aGVyIHRoZXkgd2lsbCBhbHNvIHJhaXNlIG9yIGNhbGwuIApBbm5vdW5jZWQgYmFyZWx5IGEgZGF5IGluIGFkdmFuY2UsIFZhcm91ZmFraXMnIG1lZXRpbmcgd2l0aCBMYWdhcmRlIGhhZCBhZGRlZCB0byBzcGVjdWxhdGlvbiB0aGF0IEdyZWVjZSBhbmQgaXRzIG5ldyBoYXJkIGxlZnQgZ292ZXJubWVudCB3YXMgZmluZGluZyBpdCBpbmNyZWFzaW5nbHkgZGlmZmljdWx0IHRvIHJhaXNlIG1vbmV5IHRvIHBheSBpdHMgZGVidHMuCllvdSBtaWdodCBiZSBhYmxlIHRvIGRvIHRoZSBzYW1lIHdpdGggdGhlIGVsZXZhdG9yLCBnaXZlbiB0aGF0IHlvdSBkb2cgaXMgcmVhbGx5IGludG8gdG95cy4uIApIZXkgbWFuLCB5b3UncmUgYSBnb29kIHBlcnNvbi4gV2UgYWxsIGZ1Y2sgdXAuIFdlIGFsbCBrbm93IHlvdSByZWFsbHkgZG8gY2FyZSBhYm91dCB5b3VyIGZhbnMuIApUaGUgcGhyYXNlIGlzIGEgYm9hc3QgYWltZWQgYXQgdGhlaXIgbWFpbiByaXZhbHMsIHRoZSBCbG9vZHMsIGEgZ2FuZyBvZiA3LDAwMCB3aG9tIHRoZXkgZGVyaXNpdmVseSBjYWxsICJzbG9icy4iLiAKRmlyc3QsIHRoZXJhcHkuIE5vbiBvcHRpb25hbC4gWW91IG5lZWQgaXQgaWYgeW91J3JlIGV2ZXIgZ29pbmcgdG8gb3ZlcmNvbWUgdGhpcy4gU2Vjb25kLCBnZXQgdGhlIGZ1Y2sgb2ZmIG9mIHJlZGRpdCBiZWNhdXNlIHRoZSB0ZWVuYWdlcnMgYW5kIDIwIHNvbWV0aGluZyBrbm93IGl0IGFsbCdzIGFyZSBub3QgZXF1aXBwZWQgdG8gYWR2aXNlIHlvdSBvbiBhbnkgb2YgdGhpcy4gQXMgeW91IGNhbiBzZWUsIG1vc3Qgd29udCBib3RoZXIgdG8gcmVhZCBiZWZvcmUgdGhleSBzdGFydCB0eXBpbmcuIFRoZSBjbGltYXRlIGluIHRoZSByZWxhdGlvbnNoaXAgc3VicyBhcmUgZ2VuZXJhbGx5IGFudGkgbWVuIGFuZCB0aGV5IHRlbmQgdG8gaGF2ZSByZWFsIGdlbmRlciBiaWFzZXMgKGxpa2UgdGhlIGd1eSBzYXlpbmcgdGhhdCBpdCdzIGp1c3RpZmllZCBmb3Igd29tZW4gdG8gY2hlYXQgaWYgdGhlaXIgaHVzYmFuZHMgZG9uJ3QgaGF2ZSBzZXggd2l0aCB0aGVtKSwgc28gdGhleSB3aWxsIGxhdGNoIG9uIHRvIGFueXRoaW5nIHRoZXkgY2FuIHRvIGJlcmF0ZSB5b3Ugd2l0aCByYXRoZXIgdGhhbiBmb2N1cyBvbiBnaXZpbmcgcmVhbCBhZHZpY2UuIFlvdSBuZWVkIHRvIGRlbGV0ZSBhbGwgb2YgeW91ciBzb2NpYWwgbWVkaWEgKHllcywgZXNwZWNpYWxseSByZWRkaXQhKSBhbmQgc2VlayBvdXQgYSBjb3Vuc2Vsb3IgaW1tZWRpYXRlbHkuIHJlbWVtYmVyIGhvdyBJIHNhaWQgaHVzYmFuZCBjb250cm9scyB0aGUgZmluYW5jZXM/IFRoYXQgY2FuIGJlIGEgZG91YmxlIGVkZ2VkIHN3b3JkLiBJZiB5b3Ugd2FudCBwcmFjdGljYWxseSBhbnl0aGluZywgeW91J2xsIGhhdmUgdG8gYXNrIHlvdXIgaHVzYmFuZCBhbmQgc2luY2UgaGUgY29udHJvbHMgaXQsIGhlJ2xsIGFsd2F5cyBoYXZlIHRoZSBmaW5hbCBzYXkhIFdhbnQgbW9yZSBjbG90aGVzPyBUb28gYmFkLCB5b3VyIGh1c2JhbmQgd29uJ3QgYnV5IGl0IGZvciB5b3UKTm8gaG9ub3JzLCBubyB0aGFua3MsIG5vIGFwcHJlY2lhdGlvbiBmb3IgdHBpbmcgdG8gYm90IGFuZCBnZXR0aW5nIGppbnggYSBkb3VibGUga2lsbC4gCllvdSBkb24gbmVlZCB0byBiZWxpZXZlIGluIEdvZCwgYml0IGVpdGhlciB3YXksIHRoZXNlIHJ1bGVzIGFwcGx5IHRvIGV2ZXJ5b25lLiBHb29kIGx1Y2sgd2l0aCB5b3VyIHJlbGF0aW9uc2hpcCwgYW5kIGlmIG5vdCBoZXIsIGFwcGx5IHRoaXMgdG8gdGhlIG5leHQgZ2lybC4gS2ljayBhc3MgbXkgZ29vZCBtYW4hLiAKV2hlbiB0aGUgamFja3BvdCBoaXQgdGhlIHJvbGxkb3duIHRocmVzaG9sZCwgQ2FzaCBXaW5mYWxsIGJlY2FtZSBhIGdvb2QgYmV0IGZvciBldmVyeW9uZSwgbm90IGp1c3QgdGhlIGJpZyB0aW1lIGJldHRvcnMgbGlrZSB0aGUgU2VsYmVlcy4gQnkgdGhlbiB0aG91Z2gsIE1hc3NhY2h1c2V0dHMgU3RhdGUgTG90dGVyeSBoYWQgbW92ZWQgb24gdG8gYSBkaWZmZXJlbnQgZ2FtZSB3aXRob3V0IGEgc3RhdGlzdGljYWwgdHdpc3QuIApUaGUgc3VyZ2VyeSBJIGhhZCB3YXMgdGhlIFNJUFMsIHdoaWNoIGlzIHRoZSBkdW9kZW5hbCBzd2l0Y2ggd2l0aCBhIG1vZGlmaWNhdGlvbiBteSBzdXJnZW9uIGhlbHBlZCBkZXNpZ24gdGhhdCBwcmVzZXJ2ZXMgdGhlIHB5bG9yaWMgdmFsdmUsIHdoaWNoIGNvbnRyb2xzIHRoZSBzcGVlZCB0aGF0IHRoZSBzdG9tYWNoIGVtcHRpZXMgaW50byB0aGUgaW50ZXN0aW5lcy4gVGhpcyBpcyBzdXBwb3NlZCB0byBwcmV2ZW50IGR1bXBpbmcgc3luZHJvbWUsIHdoaWNoIGlzIGNvbW1vbiBpbiBiYXJpYXRyaWMgcGF0aWVudHMgaWYgdGhleSBlYXQgZnJpZWQgb3IgaGlnaCBmYXQgZm9vZHMgbGlrZSBpY2UgY3JlYW0gdGhhdCBwYXNzIHRvbyBxdWlja2x5LiBJIGhhdmUgbm90IGhhZCBkdW1waW5nIHN5bmRyb21lIGF0IGFsbCwgYnV0IEknbSBub3QgZWF0aW5nIHRob3NlIHRoaW5ncyBzbyBpdCdzIGhhcmQgdG8gdGVsbCBpZiB0aGF0J3MgYmVjYXVzZSBvZiB0aGUgdmFsdmUgb3IgZGlldC4KSW4gYSB0YXBlZCBjb252ZXJzYXRpb24gd2l0aCBDb25zdGFuZCdzIG1vdGhlciBhIHllYXIgbGF0ZXIsIENvc2J5IGRlc2NyaWJlZCB0aGUgc2V4IGFjdCBhcyAiZGlnaXRhbCBwZW5ldHJhdGlvbiIgYnV0IHJlZnVzZWQgdG8gc2F5IHdoYXQgcGlsbHMgaGUgaGFkIGdpdmVuIGhlciBkYXVnaHRlci4gSW4gaGlzIGRlcG9zaXRpb24sIGhlIHNhaWQgaGUgaGFkIGZlYXJlZCBzb3VuZGluZyBsaWtlICJhIGRpcnR5IG9sZCBtYW4iIG9uIHRoZSBjYWxsLi4gClRvIHBhcmFwaHJhc2UgYW5vdGhlciBvbGQgc2F3OiBKdXN0IGJlY2F1c2UgeW91IHBhcmFub2lkIGRvZXNuIG1lYW4gc29tZW9uZSBub3Qgb3V0IHRvIGdldCB5b3UuIEZvciBvbmUgdGhpbmcsIHlvdSBtaWdodCBiZSBzZW5zaW5nIHRoYXQgb3RoZXJzIGFyZSBnb3NzaXBpbmcgYWJvdXQgKG9yIG90aGVyd2lzZSB1bmRlcm1pbmluZykgeW91IHNpbXBseSBiZWNhdXNlIHlvdSBwcm9uZSB0byBzdWNoIGJlaGF2aW9yIHlvdXJzZWxmLiAKSGV0IGdhYXQgZGFhcmJpaiBvbSB6b3dlbCB2ZXJiYWxlIGFscyBub24gdmVyYmFsZSBjb21tdW5pY2F0aWUuLiAKU3Rvcm0gR2lhbnRzIGFyZW4gdGhlIHdvcnN0IG1hZ2VzIGluIHRoZSBnYW1lLiBJbiBmYWN0LCB0aGUgZXh0cmEgaGVhbHRoIGNhbiBiZSBhIG5pY2UgbWl0aWdhdGluZyBmYWN0b3IgZm9yIHRoZSBNYWdlcyBHdWlsZCBub3QgcHJvdmlkaW5nIGFueTsgYXMgZHJvcHBpbmcgaW50byB0aGUgbmV4dCBmbG9vciBvZiBhbiBSRCB3aWxsIGZyZXF1ZW50bHkgcHV0IHlvdSB3aXRoaW4ga2lzc2luZyByYW5nZSBvZiB3aGF0ZXZlciBiYWRhc3MgYWx3YXlzIHNlZW1zIHRvIHNwYXduIG9uIHRvcCBvZiB0aGUgc3RhaXJzLiAKV2lyIGhhYmVuIFVybGF1YiBnZWJ1Y2h0IHVuZCBhbGxlcyB3YXIgbm9ybWFsLkFiZXIgaW5uZXJsaWNoIGJpbiBpY2ggemVycmlzc2VuLiAKMTksIHdoZXJlIHBvbGljZSBzYXkgdGhleSB2aWRlb3RhcGVkIGhpbSBlbmdhZ2luZyBpbiBhIHNleCBhY3QgYW5kIHRoZW4gaGFuZGluZyBvdmVyIGFuIHVuZGV0ZXJtaW5lZCBhbW91bnQgb2YgY2FzaCwgSnVwaXRlciwgRmxvcmlkYSwgcG9saWNlIHNhaWQgaW4gY2hhcmdpbmcgZG9jdW1lbnRzIHJlbGVhc2VkIGJ5IHRoZSBQYWxtIEJlYWNoIFN0YXRlIEF0dG9ybmV5J3MgT2ZmaWNlLi4gCk15IGh1c2JhbmQgaXMgc2tlcHRpY2FsIG9mIG1lbnRhbCBoZWFsdGggcHJvZmVzc2lvbmFscyBhbmQgbWVkaWNhdGlvbiBkdWUgdG8gdGhlIHdheSBoZSB3YXMgcmFpc2VkLCBidXQgaGUgaGFzIG5ldmVyIHRyaWVkIHRvIGRpc2NvdXJhZ2UgbWUgZnJvbSB0cmVhdGluZyBteXNlbGYgb3Igb3VyIGtpZHMgYXMgSSBhbmQgb3VyIGRvY3RvcnMgc2VlIGZpdC4gCldoYXQ/U291dGggb2YgQW5rYXJhIChBa2Rlbml6IHJlZ2lvbikgaXMgdmVyeSBzZWN1bGFyIGFuZCBvbmUgb2YgdGhlIGJlc3QgcGxhY2VzIHRvIGxpdmUgaW4gcmVnaW9uKGVhc3Rlcm4gTWVkKS4KU28gSSBzdXNwZWN0IHRoYXQgYXMgbG9uZyBhcyB0aGUgam9pbnQgYW5kIG11c2NsZSBpcyBwcmVwYXJlZCBmb3IgdGhlIGhlYXZ5IGxvYWQgaW4gc29tZSB3YXksIGFuZCB0aGUgYm9keSB1bmRlcnN0YW5kcyB0aGUgcmFuZ2Ugb2YgbW90aW9uIGl0IGlzIGFib3V0IHRvIGVudGVyLCBpdCBkb2VzbiByZWFsbHkgbWF0dGVyLiA5IHBvaW50cyAgc3VibWl0dGVkIDEgeWVhciBhZ29XaGlsZSBJIHdvdWxkbiBwdXQgbXVjaCB2YWx1ZSBpbiBib29rcyBJIHN0aWxsIHRoaW5rIHRoZXJlIGEgbG90IG9mIHVzZWZ1bCByZWFkaW5nIGluIHRoZSBvbGQgMisyIGFyY2hpdmVzLiAKTW9yZSB0aGFuIHdlIGltYWdpbmVkLiAKUGVuY2UncyBjbGFpbSBhYm91dCB0aGUgZW5kaW5nIG9mIHRoZSBXb3JsZCBXYXJzIGlzIGFsc28gaGlzdG9yaWNhbGx5IHF1ZXN0aW9uYWJsZS4gVGhlIFNvdmlldCBVbmlvbiwgdW5kZXIgY29tbXVuaXN0IGNvbnRyb2wsIHBsYXllZCBhIGNydWNpYWwgdG8gc29tZSBoaXN0b3JpYW5zIHRoZSBtb3N0IGNydWNpYWwgcm9sZSBpbiBkZWZlYXRpbmcgTmF6aSBHZXJtYW55IGluIFdvcmxkIFdhciBJSS4gVGhlIGNvdW50cnkgYWxzbyBwYWlkIHRoZSBoZWF2aWVzdCBwcmljZSBkdXJpbmcgdGhlIHdhciBhcyBpdCBiYXR0bGVkIEdlcm1hbnkgb24gdGhlIEVhc3Rlcm4gRnJvbnQsIGxvc2luZyBhbiBlc3RpbWF0ZWQgMjYgbWlsbGlvbiBwZW9wbGUsIGluY2x1ZGluZyBhYm91dCAxMSBtaWxsaW9uIHNvbGRpZXJzLgpJZiBIYXJyaXNvbiBGb3JkIHR1cm5lZCB1cCBhdCBvdXIgaG91c2UsIHNoaXJ0bGVzcyBhbmQgd2l0aCB3YXhpbmcgc3RyaXBzIHN0dWNrIHRvIGhpcyBjaGVzdCwgYW5kIHRoZW4gcHVsbGVkIG9mZiB0aGUgc3RyaXBzIG9uZSBieSBvbmUgd2l0aCBnaXJsaXNoIHNocmlla3Mgb2YgcGFpbiwgd2UnZCBiZSB1bmxpa2VseSB0byBwYXkgYXR0ZW50aW9uIHRvIGEgc2luZ2xlIHdvcmQgdGhhdCB3YXMgY29taW5nIG91dCBvZiBoaXMgbW91dGguIEl0IHdvdWxkbid0IG1hdHRlciBpZiBoZSB3YXMgdHJ5aW5nIHRvIHNlbmQgYSBtZXNzYWdlIGFib3V0IGRlZm9yZXN0YXRpb24sIG9yIHRoYXQgaGUgd2FudGVkIHRvIGdpdmUgdXMgYWxsIG9mIHRoZSBtb25leSBpbiBoaXMgd2FsbGV0LiBXZSdkIGJlIHRvbyBidXN5IHNodXR0aW5nIHRoZSBkb29yIGluIGhpcyBmYWNlLCBzZWN1cmVseSBib2x0aW5nIGl0LCBhbmQgY2hlY2tpbmcgdGhlIHJlc3Qgb2YgdGhlIGRvb3JzIGFuZCB3aW5kb3dzIHRvIG1ha2Ugc3VyZSB0aGV5IHdlcmUgZmFzdGVuZWQgc2VjdXJlbHkuCkJlaW5nIG1hcnJpZWQgb2Z0ZW4gYm9vc3RzIGhhcHBpbmVzcywgYXMgZG9lcyBhIGdlbmV0aWMgYmFzaXMgZm9yIGEgc3VubmllciBkaXNwb3NpdGlvbi4gT2xkZXIgd29tZW4gYmVjb21lIGxlc3MgaGFwcHkgdGhhbiB0aGVpciBtYWxlIGNvdW50ZXJwYXJ0cywgd2hvIHJlcG9ydCBpbmNyZWFzZWQgbGV2ZWxzIG9mIGhhcHBpbmVzcyBhcyB0aGV5IGFnZSBbc291cmNlOiBIb2x0XS4uIApJIGhhZCBhIGZlZWxpbmcgdGhpcyBwbGFjZSB3YXNuIGxlZ2l0IGJlY2F1c2UgaXQgd2FzIGNvbm5lY3RlZCB0byBhIGhvdGVsIGJ1dCBteSB3aWZlIHNhaWQgaXQgaGFkIHRvIGJlIGJlY2F1c2UgaXQgd2FzIGEgcmVhbCBob3RlbC4gU2hlIHdhbnRlZCBtZSB0byBnbyB0byB0aGF0IG9uZSBiZWNhdXNlIHRoZSBvbmUgSSB3ZW50IHRvIGJlZm9yZSBpcyB0b28gZmFyIGF3YXkgYW5kIGhhZCB0byB0YWtlIGEgdGF4aS4uIApUaGlzIGlzIGVzcGVjaWFsbHkgdHJ1ZSB3aXRoIGEgZmFpcmx5IGRyeSBib2FyZCB0aGF0IGRpZG4gaW50ZXJlc3QgdGhlbSBhdCBhbGwgb24gZWFybHkgc3RyZWV0cyBidXQgaXMgc3VkZGVubHkgR29kIGdpZnQgdG8gdGhlbS4gCkhhcnBlciBwdXNoZXMgZW52aXJvbm1lbnRhbCBwbGF0Zm9ybSB3aGlsZSBEaW9uIHByb21vdGVzIGNhcmJvbiB0YXggcGxhbgpXaGF0IGlzIEFDRSBBQ0UgaXMgYSBuYXRpb25hbCBjaGFyaXRhYmxlIG9yZ2FuaXphdGlvbiB0aGF0IGlzIGRlZmluaW5nIHRoZSBwYXRoIG9mIGNoYW1waW9ucyBieSB0ZWFjaGluZyBhbmQgaWduaXRpbmcgeW91bmcgQ2FuYWRpYW5zIHRvIGNyZWF0ZSBicmlnaHRlciBmdXR1cmVzIGZvciB0aGVtc2VsdmVzIGFuZCB0aGVpciBjb21tdW5pdGllcy4gVGhlc2Ugc3R1ZGVudHMgYXJlIGNoYWxsZW5nZWQgdG8gYWRkcmVzcyByZWFsIHdvcmxkIGJ1c2luZXNzIGFuZCBlY29ub21pYyBpc3N1ZXMgaW4gdGhlaXIgb3duIGVudHJlcHJlbmV1cmlhbCB2ZW50dXJlcyBhbmQgaW4gdGhlaXIgY29tbXVuaXRpZXMuIEFDRSBjdXJyZW50bHkgZGVsaXZlcnMgdHdvIHByb2dyYW1zIG9uIG92ZXIgNTAgdW5pdmVyc2l0eSBhbmQgY29sbGVnZSBjYW1wdXNlcyBhY3Jvc3MgQ2FuYWRhIHdpdGggdGhlIGludm9sdmVtZW50IG9mIG92ZXIgMSw3MDAgc3R1ZGVudCBsZWFkZXJzIGFuZCBzdHVkZW50IGVudHJlcHJlbmV1cnMuIFBST0dSQU0gMSAgIFNUVURFTlRTIElOIEZSRUUgRU5URVJQUklTRSAoU0lGRSkgT3VyICJ0ZWFtIiBiYXNlZCBwcm9ncmFtIGVtcG93ZXJzIHN0dWRlbnRzIHRvIGNyZWF0ZSBlY29ub21pYyBvcHBvcnR1bml0eSBpbiB0aGVpciBjb21tdW5pdGllcyBieSB0ZWFjaGluZyBvdGhlcnMgYWJvdXQgbWFya2V0IGVjb25vbWljcywgZW50cmVwcmVuZXVyc2hpcCwgc3VjY2VzcyBza2lsbHMsIGZpbmFuY2lhbCBsaXRlcmFjeSBhbmQgYnVzaW5lc3MgZXRoaWNzLiBUZWFtcyBkbyB0aGlzIGJ5IGltcGxlbWVudGluZyBjb21tdW5pdHkgZm9jdXNlZCBhbmQgZW50cmVwcmVuZXVyaWFsIGJhc2VkIHByb2plY3RzIHRoYXQgaGF2ZSBhIG5vdGFibGUgaW1wYWN0IG9uIHRoZSB0YXJnZXQgYXVkaWVuY2UgaW52b2x2ZWQuIEFDRSBpcyB0aGUgb2ZmaWNpYWwgb3BlcmF0b3Igb2YgdGhlIFNJRkUgcHJvZ3JhbSBpbiBDYW5hZGEuIFNJRkUgaXMgYSBnbG9iYWwgb3JnYW5pemF0aW9uIHRoYXQgaXMgbGl0ZXJhbGx5IGNoYW5naW5nIHRoZSB3b3JsZCB0aHJvdWdoIGhpZ2hseSBkZWRpY2F0ZWQgc3R1ZGVudCB0ZWFtcyBvbiBtb3JlIHRoYW4gMSw4MDAgY29sbGVnZSBhbmQgdW5pdmVyc2l0eSBjYW1wdXNlcyBpbiBvdmVyIDQwIGNvdW50cmllcy4gUFJPR1JBTSAyICAgU1RVREVOVCBFTlRSRVBSRU5FVVIgT3VyICJpbmRpdmlkdWFsIiBiYXNlZCBwcm9ncmFtIHByb3ZpZGVzIGEgdml0YWwgc2VydmljZSB0byBmdWxsIHRpbWUgdW5pdmVyc2l0eSBhbmQgY29sbGVnZSBzdHVkZW50cywgd2hvIGFsc28gb3BlcmF0ZSBhIGJ1c2luZXNzLiBUaHJvdWdoIHByb2dyYW1taW5nIGFuZCBjb21wZXRpdGlvbiwgQUNFIGNyZWF0ZXMgYSBwbGF0Zm9ybSBmb3IgdGhlc2UgeW91bmcgZW50cmVwcmVuZXVycyB0byBuZXR3b3JrIHdpdGggbGlrZSBtaW5kZWQgc3R1ZGVudHMsIHNob3djYXNlIHRoZWlyIGJ1c2luZXNzIG9uIGEgcmVnaW9uYWwgYW5kIG5hdGlvbmFsIHN0YWdlIHRvIHRvcCBleGVjdXRpdmVzIGFuZCBsZWFkaW5nIGVudHJlcHJlbmV1cnMsIHJlY2VpdmUgcmVsZXZhbnQgdHJhaW5pbmcgYW5kIGxldmVyYWdlIHZhbHVhYmxlIG1lbnRvcnNoaXAgb3Bwb3J0dW5pdGllcyB0byBhY2NlbGVyYXRlIHRoZSBncm93dGggb2YgdGhlaXIgYnVzaW5lc3MuIEVMRU1FTlQgT0YgQ09NUEVUSVRJT04gQm90aCBwcm9ncmFtcyBoYXZlIHRoZSBhc3BlY3Qgb2YgY29tcGV0aXRpb24gaW52b2x2ZWQgYXMgU0lGRSB0ZWFtcyBhbmQgU3R1ZGVudCBFbnRyZXByZW5ldXJzIGdhdGhlciByZWdpb25hbGx5IGFuZCBuYXRpb25hbGx5IGVhY2ggeWVhciB0byBzaG93Y2FzZSB0aGUgY29tbXVuaXR5IGZvY3VzZWQgcHJvamVjdHMgYW5kL29yIHRoZSBlbnRyZXByZW5ldXJpYWwgdmVudHVyZXMgdGhleSBhcmUgb3BlcmF0aW5nIHdoaWxlIGF0dGVuZGluZyB1bml2ZXJzaXR5IG9yIGNvbGxlZ2UgZnVsbCB0aW1lLgpRdWFuZG8gc2kgYmFsbGEgaWwgVGFuZ28gbyBzaSBhbW1pcmEgdW5hIGNvcHBpYSBjaGUgYmFsbGEgY2kgc29ubyBhbGN1bmUgY29zZSBjaGUgcmlzdWx0YW5vIHN1Yml0byBldmlkZW50aS4gTGEgcHJpbWEgIGNoZSBsJ3VvbW8gZ3VpZGE6IGhhIGxhIHJlc3BvbnNhYmlsaXQgZGkgcG9ydGFyZSBsYSBkYW1hIGluIGdpcm8gcGVyIGxhIHNhbGEsIGZhY2VuZG9sYSBkaXZlcnRpcmUsIHN0YXJlIGJlbmUgZSwgYWxsbyBzdGVzc28gdGVtcG8sIGNvbnRyb2xsYW5kbyB0dXR0byBjaSBjaGUgYXZ2aWVuZSBpbnRvcm5vIHBlciBldml0YXJlIGNoZSBzaWEgZGkgb3N0YWNvbG8uIExhIGRhbWEgc2VndWUsIGFzY29sdGEgaWwgY29ycG8gZGVsIGNvbXBhZ25vLCBub24gYW50aWNpcGEgaSBzdW9pIGdlc3RpLgpJdCBzZWVtcyB0aGF0IGlmIEkgZG9uIEkgZ2V0IHZlcnkgc21hbGwgd2hpdGUgYnVtcHMgdGhhdCBidWlsZCB1cCBvbiBteSBza2luLiAKUGxlYXNpbmcgZGlzcG9zaXRpb24KRHIgQW5uZSBNYWxhdHRNQkJTLCBNUywgRlJBTlpDTywgRlJBQ1MsIEV5ZSBTdXJnZW9uLExpZ2h0d2F2ZXMgYXQgQmFuZ2Fsb3dsYXNlciB0YXR0b28gcmVtb3ZhbGFuZCBza2luIHRyZWF0bWVudHMgcHJvZml0aW5nIGZyb20gU2VyZ2UgdGVhY2hpbmdzIHRoYXQgdGF0dG9vcyBjYXJyeSB0aGUgcHJhbmljIHJlc2lkdWUgb2YgdGhlIHRhdHRvb2lzdCwgTlNXCkkgaGF0ZSB0byBzZWUgd2hhdCB0aGV5IHdpbGwgZG8gd2hlbiB0aGUgcGFyZW50cyBwYXNzIGF3YXkgYW5kIHRoZXkgaGF2ZSB0byBkZWFsIHdpdGggdGhlIGVzdGF0ZS4uIApJIHBsYXlpbmcgYSA2MDAgc3RhciBnYW1lIHJpZ2h0IG5vdyBhbmQgaXQgMjM1MS4gSW4gMi4xIEkgd291bGQgb25seSBwbGF5IDEsMDAwIHN0YXIgZ2FsYXhpZXMuIApWaXNpdCBsb2NhbCBvZmZpY2VzIGFuZCB5b3VyIGxvY2FsIGVtYmFzc3kgdG8ga25vdyB0aGUgbmVjZXNzYXJ5IHJlcXVpcmVtZW50cyB0byBzdGFydCBhIGJ1c2luZXNzIGluIHRoaXMgY2l0eS4gWW91IG11c3QgYmUgb2YgbGVnYWwgYWdlIHRvIHZpZXcgdGhpcyB0eXBlIG9mIGNvbnRlbnQgZnJvbSB3aGVyZSB5b3UgYXJlIGFjY2Vzc2luZyB0aGlzIHNpdGUuIEJ1c2FuIGFuZCBlc2NvcnRzIHRvIGdpdmUgeW91IHRoZSBtb3N0IHdvbmRlcmZ1bCBhbmQgdW5mb3IuIApMZSBwcmVtaWVyIGRlcyBkcm9pdHMgZGNsYXJzIGVzdCBsYSBsaWJlcnQgOiBsZXMgaG9tbWVzIG5haXNzZW50IGV0IGRlbWV1cmVudCBsaWJyZXMgKGFydGljbGUgMWVyKS4gCkxpa2UgYW4gaWNlYmVyZyBjYWx2aW5nIGZyb20gYSBnbGFjaWVyLCB0aGUgZW50aXJlIG1hc3MgaXMgdG9ybiBhd2F5IGZyb20geW91ciBuYXNhbCB3YWxsIGluIGFuIGluc3RhbnQuIApUaGUgcHVycG9zZSBvZiB0aGlzIGxhdyBpcyB0byBlbnN1cmUgdGhlIHB1YmxpYyB0cnVzdCBpcyBiZWluZyBzZXJ2ZWQuIApCdXQgd2UgYWxzbyBkb24ndCB3YW50IDMwIHBhY2thZ2VzIG9mIG5ld2Jvcm4gZGlhcGVycy4gCkkgd2FzIHVzaGVyZWQgdG8gYSBibGFja2phY2sgdGFibGUgYnkgYSBsb2NhbCBtYW5hZ2VyLCB3aG8gd2FzIHNwZWNpZmljYWxseSBpbnN0cnVjdGVkIHRvIGJlICduaWNlJyB0byBqb3VybmFsaXN0cy4uIApJIHdvdWxkIG5vdCB0cnVzdCB0aGVtIGFyb3VuZCB5b3Ugb3duIHN1Y2Nlc3MvIG9uY2UgeW91IGFyZSBlc3RhYmxpc2hlZCBhbmQgaGF2ZSBtb25leSBldGMgZXRjLCB0aGV5IHdpbGwgZ3VpbHQgdHJpcCB5b3UgYW5kIHVzZSB5b3UuLiAKS25vd2luZyBIb3cgdG8gUGxheSA3IENhcmQgU3R1ZCBQb2tlciB3aWxsIHRha2UgeW91IGJhY2sgYSBmZXcgeWVhcnMuLiAKVGhlIHByb3Bvc2VkIGNvbmNlc3Npb24gY2FtZSBmcm9tIEVVIEJyZXhpdCBuZWdvdGlhdG9yIE1pY2hlbCBCYXJuaWVyIGp1c3QgZGF5cyBiZWZvcmUgYSBzZWNvbmQgbWVhbmluZ2Z1bCB2b3RlIG9uIFRoZXJlc2EgTWF5IEJyZXhpdCBkZWFsIGluIHRoZSBIb3VzZSBvZiBDb21tb25zLiBJdCBoYXMgcHJldmlvdXNseSBiZWVuIHN1Z2dlc3RlZCB0aGF0IGJvdGggdGhlIEVVIGFuZCB0aGUgVUsgd291bGQgaGF2ZSB0byBhZ3JlZSBmb3IgQnJpdGFpbiB0byBiZSBhYmxlIHRvIGZ1bGx5IGxlYXZlIHRoZSBjdXN0b21zIHVuaW9uIGluIGEgYmFja3N0b3Agc2NlbmFyaW8uIApCdXQgb3RoZXIgc29hcCBjaGVtaWNhbHMgZG9uIGNhdXNlIHlvdXIgZXllcyB0byBzdGluZyBiZWNhdXNlIHRoZXkgbm90IFFVSVRFIHNvIGdvb2QgYXQgc3RpY2tpbmcgdG8gb2lseSBkaXJ0IGF0IG9uZSBlbmQsIHNvIHRoZXkgbm90IHF1aXRlIHNvIGdvb2QgYXQgY2xlYW5pbmcgb3Igd3JlY2tpbmcgdGhlIGNhcmVmdWwgYmFsYW5jZSBvZiBjaGVtaXN0cnkgdGhhdCBrZWVwcyB5b3VyIGV5ZXMgbW9pc3QgYW5kIGluIGdvb2Qgc2hhcGUuCjR4IGEgd2VlayBiZW5jaGluZz8gRGFtbiBkdWRlLCB0aGF0IGEgdG9uIG9mIGZyZXF1ZW5jeSBhbmQgdm9sdW1lLiBJIGNvbnNpZGVyIG15c2VsZiBhIGJhZCBiZW5jaGVyIHdpdGggYmFkIHByb3BvcnRpb25zIHRvIGV4Y2VsIGF0IGl0LCBhbmQgaGF2ZSBwbGF0ZWF1IG9uIDI4NWxicyBmb3IgYSB5ZWFyIGFzIHdlbGwgYmVmb3JlIGV2ZW50dWFsbHkgYW5hbHl6aW5nIHRlY2huaXF1ZSBwcm9wZXJseSBhbmQgZmluZGluZyBvdXQgSSBoYWQgYSBzaGl0dHkgYmFycGF0aC4gQXQgdGhhdCBwb2ludCBpdCBiZWNvbWVzIHJlYWwgc2ltcGxlLCBhZGRpbmcgdm9sdW1lIG9yIGZyZXF1ZW5jeSBvciBpbnRlbnNpdHkgd29uIGhlbHAgeW91IGJlbmNoIG1vcmUsIGl0IGp1c3QgZW5mb3JjZSBiYWQgZm9ybS4gCmltcGxpY2F0aW9ucyBmb3IgcGVvcGxlIHdpdGggYXV0b2ltbXVuZSBkaXNlYXNlcyBhbmQgaW1tdW5vY29tcHJvbWlzZWQgaW5kaXZpZHVhbHMKVGhpcyB3YXMgZGlmZmVyZW50IGZyb20gTWFyZXkgYmlydGh5ZWFyIGFuZCBkZWF0aHllYXIgYnVkZHksIHRoZSBvdGhlciBtb3Rpb24gcGljdHVyZSBwaW9uZWVyLCBFYWR3ZWFyZCBNdXl0YnJpZGdlICgxODMwIDE5MDQgZm9yIGJvdGgpLiBNYXJleSBpbnRyb2R1Y2VkIGhpcyAiY2hyb25vcGhvdG9ncmFwaHkiIGFuZCBzdHVkaWVkIGFzcGVjdHMgb2YgbW92ZW1lbnQgYW5kIG1vdGlvbiB0aGF0IGhhZCBiZWVuIGRpc3BlcnNlZCB0byBodW1hbiBoaXN0b3J5IGJlY2F1c2Ugb2YgdGhlIGluYWJpbGl0eSB0byBvYnNlcnZlIGFuZCByZWNvcmQgdGhlbSB3aXRoIE1hcmV5LCB0aGF0IGlzc3VlIG5lY2Vzc2FyeSBmb3IgdGhlIGJlZ2lubmluZyBvZiByZWFsIHNjaWVudGlmaWMgZGlzY291cnNlIHdhcyB0byBhIGxhcmdlIGV4dGVudCBzb2x2ZWQuLiAKMCBwb2ludHMgIHN1Ym1pdHRlZCAyNSBkYXlzIGFnb09rIHRoZW4gd291bGQgRGFtZSByZWNpZXZlIHRoaXMgc2FtZSB0cmVhdG1lbnQ/IEhvdyBhYm91dCBCcm9vayBMb3Blej8gT3IgRnJlZCBWYW4gRmxlZXQ/IFdoZXJlIGRvIHlvdSBkcmF3IHRoZSBsaW5lIGZvciB3aG8gaXMgYSBzdGFyIHRoYXQgY2Fubm90IGJlIHNhdC4gClRoZSBiZWF1dHkgb2YgYmxvZ2dpbmcgaXMgdGhhdCBpdCBzaG91bGQgYmUgYXMgZWFzeSBhcyBhIGNvbnZlcnNhdGlvbi4gSXQgc2hvdWxkIGJlIGxpZ2h0IGFuZCBmbG93IHNtb290aGx5IGZyb20geW91ciBicmFpbiBvbnRvIHlvdXIgc2NyZWVuLiBJdCBkb2Vzbid0IGhhdmUgdG8gYmUgYSBtYXN0ZXJwaWVjZSB0aGF0IGNvbXBldGVzIHdpdGggdGhlIGxpa2VzIG9mIE9yd2VsbCBvciBIZW1pbmd3YXkuIEp1c3Qgc3RvcCBvdmVydGhpbmtpbmcgaXQgYW5kIHN0YXJ0IHR5cGluZy4gWW91J2xsIGJlIHN1cnByaXNlZCBob3cgZWFzaWx5IHRoZSB3b3JkcyBmbG93IHdoZW4geW91IHN0b3Agd29ycnlpbmcgYWJvdXQgd2hhdCB5b3Ugd3JpdGUuCkdlc3R1cmUgb2YgdGhlIHllYXIgb3IgJ3Bva2VyJyBkaXBsb21hY3kKQWxsIHlvdSBndXlzIHdobyBzZXJpb3VzbHkgaGF2ZSB0aGUgd29yZCAiaW5jZXN0IiBjb21lIHRvIG1pbmQgcmUgQWxsaXNvbiBhbmQgTHV0aGVyLCBteSBtb3N0IHNpbmNlcmUgYWR2aWNlIHRvIHlvdSBpcyB0dXJuIG9mZiBOZXRmbGl4IGFuZCBncmFiIGEgc2NpZW5jZSBib29rIGFuZCBzcGVuZCBtb3JlIHRpbWUgbGVhcm5pbmcgc2ltcGxlIGJpb2xvZ3kuIFRoZXJlIGlzIG5vIGluY2VzdCBpbiB0aGlzIHNlcmllcy4gCkl0IHNvdW5kcyBsaWtlIHlvdXIgZ29hbCBhcyBhIGdyb3VwIGlzIHRvIGhhdmUgZnVuLiBTb21ldGltZXMgdGhhdCBtZWFucyBwdXR0aW5nIGF3YXkgeW91ciBwb3dlcmZ1bCBjYXJkcyB0byBmb3N0ZXIgYSBwbGF5IGVudmlyb25tZW50IHRoYXQgZXZlcnlvbmUgY2FuIGVuam95LiBMaXN0ZW4gdG8gZWFjaCBvdGhlciBhbmQgd29yayB3aXRoIGVhY2ggb3RoZXIgYW5kIGp1c3QgaGF2ZSBmdW4hIFRoZXJlIGEgY2F2ZWF0LiBJZiB0aGUgZ3V5IGlzIGp1c3Qgc2FsdHkgYW5kIG9ubHkgaGFzIGZ1biBpZiBoZSB3aW5zLCBwb2xpdGVseSBsZXQgaGltIGtub3cgdGhpcyEgIkxpc3RlbiBtYW4sIHdlIGhhdmUgd29ya2VkIGFzIGEgZ3JvdXAgdG8gYmFsYW5jZSBvdXIgZGVja3MgdG8gb3B0aW1pemUgb3VyIGdhbWVwbGF5IGFuZCB5b3Ugc3RpbGwgY29tcGxhaW5pbmcuIElmIHlvdSBrZWVwIGNvbXBsYWluaW5nLCBJIHJhdGhlciBub3QgcGxheS4iClVuY292ZXIgdGhlIG15c3Rlcnkgb2YgdGhlIDIyIEluY2ggUm91bGV0dGUgV2hlZWwgYW5kIHNlZSBpZiBpdCBpcyByaWdodCBmb3IgeW91IGF0IHRoaXMgdGltZS4gUGxlYXNlIHJlYWQgb3VyIGRldGFpbGVkIG92ZXJ2aWV3IG9mIHRoZSAyMiBJbmNoIFJvdWxldHRlIFdoZWVsLgpQcm9qZWN0IGZvciBhIE5ldyBBbWVyaWNhbiBDZW50dXJ5IFBOQUMKRGF0IGtlcmtqZSB3YXMgb29rIHZhbiBiaW5uZW4gaGVlbCBiaWp6b25kZXI6IGRlIE9ydGhvZG94ZSBrZXJrZW4gemlqbiB6ZWVyIHNmZWVydm9sISBPdmVyZGFkaWcgdmVyc2llcmQgbWFhciB0ZWdlbGlqayBpbmdldG9nZW4sIGRvb3IgZGUgdmVsZSBrYWFyc2plcyBlbiBkZSB2ZWxlIGdlbG92aWdlbiBkaWUga29tZW4gYmlkZGVuICh2cm91d2VuIGRvZW4gc3RlZXZhc3QgZWVuIHNqYWFsdGplIG92ZXIgaHVuIGhvb2ZkIGRhdCB6ZSBibGlqa2JhYXIgYWx0aWpkIGJpaiBoZWJiZW4pLiBXZSB3YW5kZWxkZW4gbmEgZGl0IGJlem9la2plIHJpY2h0aW5nIHJpdmllciwgd2FhciBuZXQgZWVuIGJvb3Qga2xhYXIgbGFnLiBQZXJmZWN0LCB6byBrb25kZW4gd2UgbWV0ZWVuIGVlbiByb25kdmFhcnQgbWFrZW4gb3AgZGUgTW9za291IHJpdmllci4gClJhY2lzbSwgc2V4aXNtLCBhZHZvY2F0aW5nIHZpb2xlbmNlLCBhbmQgaGF0ZSBzcGVlY2ggICBpbmNsdWRpbmcgaG9tb3Bob2JpYSAgIGFyZSBub3QgdG9sZXJhdGVkLiAKVGhlIGFib3ZlIHRlc3QgaXMgYWxzbyBhIGNoZWFwIGVhc3kgd2F5IHRvIGNvbnRpbnVlIHRvIHByYWN0aWNlIHlvdXIgYmFsYW5jZSBhdCBob21lLiBBcyB5b3Ugb3IgeW91ciBsb3ZlZCBvbmUgZ2V0IGJldHRlciBhdCBiYWxhbmNlLCB5b3UgY2FuIHRyeSBvdGhlciBiYWxhbmNlIGNoYWxsZW5naW5nIGRldmljZXMuCkkgaW1tZWRpYXRlbHkgY2hhbmdlZCBteSBzdGF0dXMgb24gbGlua2VkaW4gYW5kIHN0YXJ0ZWQgZ2V0dGluZyBib21iYXJkZWQgd2l0aCBvcHBvcnR1bml0aWVzLiAKQWZ0ZXIgdGhhdCByb3VuZCwgb25lIG1vcmUgY2FyZCBpcyBkZWFsdCBmYWNlIHVwIHRvIHRoZSBjb21tdW5pdHkgY2FyZCBhbmQgdGhpcyBwcm9jZXNzIGNvbnRpbnVlcyB1bnRpbCB0aGVyZSBhcmUgZml2ZSBjYXJkcyBpbiB0aGUgY29tbXVuYWwgYXJlYS4gCkJ5cm9uIEthdmVybWFuLCB0aGUyMDE1IG92ZXJhbGwgUGxheWVyIG9mIHRoZSBZZWFyIGFuZCBhIGZvcm1lciB3b3JsZCBOby4xIHBsYXllcix3YXMgZXhwZWN0ZWQgdG8gYmUgYXQgdGhlIGNlcmVtb255LCBidXQgYSBsYXN0IG1pbnV0ZSBpc3N1ZSBwcmV2ZW50ZWQgaGltIGZyb20gYXJyaXZpbmcgb24gdGltZSB0byBhY2NlcHQgaGlzIHRyb3BoeS4KVGhpcyBpbmNsdWRlcyBwZXJzb25hbCB5b3V0dWJlIGNoYW5uZWxzLCBzaG9wcGluZyBzaXRlcyBhbmQgc3RlYW0gZGVhbHMuIApPdGhlcndpc2UgaXQgbGlrZSBzdGFydGluZyBhIGpvdXJuZXkgd2l0aG91dCBrbm93aW5nIHdoZXJlIHlvdSBhcmUgZ29pbmcuIApDZXJ0YWluIGNvbmRpdGlvbnMgYXBwbGllZCB0byBncmFudCByZWNpcGllbnRzLiAKUGVvcGxlIGNhbiBoaXQgdGhlIGNhc2lubyBmb3IgYSBiaXQgb2YgZ2FtYmxpbmcsIGRvIHNvbWUgcGVvcGxlIHdhdGNoaW5nLCB0aGVuIGhlYWQgdG8gQ293Ym95cy4iQ293Ym95cyBDYXNpbm8gaXMgYSBwbGFjZSB0byBnbyBhbmQgbm90IGp1c3QgZ2FtYmxlLCBidXQgZ2V0IG91dCBhbmQgc2VlIGFsbCB0aGUgZGlmZmVyZW50IGVudGVydGFpbm1lbnQgb3B0aW9ucyB1bmRlciBvbmUgcm9vZiwiIHNheXMgVmlja2Vycy4gIkl0J3MgYSB5b3V0aGZ1bCBhcHByb2FjaCB0byB0aGUgY2FzaW5vIGJ1c2luZXNzLiJUaGUgcmVjZXB0aW9uIHNvIGZhciBoYXMgYmVlbiBub3RoaW5nIHNob3J0IG9mIHNwZWN0YWN1bGFyLCBoZSBhZGRzLiJJdCdzIGxpa2UgYSBuaWdodGNsdWIsIiBzYXlzIFZpY2tlcnMuRm9yIHRob3NlIGludGVyZXN0ZWQgaW4gZ2FtYmxpbmcsIENvd2JveXMgQ2FzaW5vIGhhcyBtb3JlIHRoYW4gNDAwIG9mIHRoZSBuZXdlc3QgYW5kIG1vc3QgZXhjaXRpbmcgc2xvdCBtYWNoaW5lcywgaW5jbHVkaW5nIHNvbWUgZXhjbHVzaXZlIGdhbWVzIGluY2x1ZGluZyBUb3VjaCBCZXQgUm91bGV0dGUuSXQgaXMgYWxzbyBob21lIHRvIDE0IHRhYmxlcyBpbiB0aGUgcmVjZW50bHkgZXhwYW5kZWQgcG9rZXIgcm9vbSwgd2l0aCBUZXhhcyBob2xkJ2VtLCBPbWFoYSwgUGluZWFwcGxlLCBMaW1pdCBvciBObyBMaW1pdCBwb2tlciB0byBmdWxmaWwgeW91ciBwb2tlciBuZWVkcy5Db3dib3lzIENhc2lubyBhbHNvIGhhcyBDYWxnYXJ5J3MgbW9zdCBleGNpdGluZyB0YWJsZSBnYW1pbmcgZXhwZXJpZW5jZSwgd2l0aCAzNCB0YWJsZXMgYW5kIGVpZ2h0IGRpZmZlcmVudCBnYW1lcyB0byBjaG9vc2UgZnJvbSwgaW5jbHVkaW5nIGJsYWNramFjaywgcm91bGV0dGUuIApLZWVwaW5nIGFuIGV5ZSBvbiB0aGUgbWFuIG9uIHRoZSBmbG9vciwgeW91IHNsb3dseSBiYWNrIGRvd24gdGhlIGhhbGx3YXkgdG93YXJkIHlvdXIgYmVkcm9vbSBsaXN0ZW5pbmcgZm9yIGFueSBvdXQgb2YgdGhlIG9yZGluYXJ5IG5vaXNlcyBjb21pbmcgZnJvbSB0aGUgbGl2aW5nIHJvb20uIApEJ2F1dGFudCBxdWUgbGEgbWluaXN0cmUgZGVzIGRyb2l0cyBkZXMgZmVtbWVzLCBOYWphdCBWYWxsYXVkIEJlbGthY2VtIGEgZGNpZCBkZSBzJ2F0dGFxdWVyICBsYSBwcm9zdGl0dXRpb24uIApDb3VsZG4gaGF2ZSBzYWlkIHRoaXMgYW55IGJldHRlci4gSSBrbmV3IGdvaW5nIGluIEkgd2FzIHNwZWFraW5nIGZyb20gYSBoZXRlcm9ub3JtYXRpdmUgcGVyc3BlY3RpdmUgYmVjYXVzZSB0aGUgY29tbWVudHMgSSB3YXMgcmVmZXJyaW5nIGFsc28gc2VlbWVkIHRvIGJlLiBCdXQgYWJzb2x1dGVseSwgYXMgYSBiaSB3b21hbiBpdCBiZWVuIGEgY29tcGxldGVseSBkaWZmZXJlbnQgZXhwZXJpZW5jZSB3aGVuIGRhdGluZyBvdGhlciB3b21lbi4gTW9zdCBvZiB0aG9zZSBzb2NpYWwgY29uc3RydWN0cyBmb3IgIm5vcm1hbCIgaGFkIGFscmVhZHkgYmVlbiBibG93biB0byBoZWxsIGJ5IHRoZSBmYWN0IHRoYXQgSSB3YXMgZGF0aW5nIHNvbWVvbmUgb2YgdGhlIHNhbWUgc2V4LiBJdCBhbHNvIGludGVyZXN0aW5nIHdoaWNoIHNvY2lhbCBjb25zdHJ1Y3RzIGRvIGNhcnJ5IGludG8gc2FtZSBzZXggcmVsYXRpb25zaGlwcy4gSHVtYW5zIGFyZSBmYXNjaW5hdGluZy4KbW9iaWxpc2F0aW9uIGVuIGZhdmV1ciBkJ3VuZSBwcmlzZSBlbiBjaGFyZ2UgZXVyb3AKT2J2aW91c2x5IHlvdSBub3QgYSBiaWcgZmFuIG9mIGhpc3RvcnkgY2xhc3NlcyB3aGljaCB0YWxrIGFib3V0IHRoZSB0cnV0aCBhbmQgbm90aGluZyBidXQgdGhlIHRydXRoLiBXb3VsZCB5b3UgcmF0aGVyIGhhdmUgcHJvcGFnYW5kYSBjbGFzc2VzIHdoaWNoIGVsaW1pbmF0ZSBBbWVyaWNhIGdlbm9jaWRlIG9mIHRoZSBOYXRpdmUgQW1lcmljYW5zLCBkb24gZGlzY3VzcyBBbWVyaWNhIHJlZnVzYWwgdG8gaGVscCBIb2xvY2F1c3QgdmljdGltcywgYW5kIGNlYXNlIHNwZWFraW5nIGFib3V0IHRoZSBpbnN0aXR1dGlvbiBvZiBzbGF2ZXJ5Py4gClBpbm90IEdyaWdpbyksIGFuZCB0aGUgZnVuIHJlc3VsdCBmb3Igd2luZSBkcmlua2VycyBpcyB0aGUgc2hlZXIgZGl2ZXJzaXR5IG9mIHN0eWxlcyBhdmFpbGFibGUuIApJIHRhbGtlZCB0byBzb21lIG9mIG15IHlvZ2EgaW5zdHJ1Y3RvcnMgYW5kIGdhdmUgZnJlZSBvciBjaGVhcCBzZXNzaW9ucyB0byBwcmFjdGljZSBvbi4gSSB2b2x1bnRlZXJlZCBzb21lIG1vcmUgKG5vdCBqdXN0IG1hc3NhZ2Ugd29yaywgYnV0IGNvbW11bml0eSBzdHVmZikuIApJbiBhbnkga2luayByZWxhdGlvbnNoaXAsIGFsbCBvZiB0aGUgcG93ZXIgaXMgd2l0aCB0aGUgc3ViIChvciB0aGUgTEcpIGluIHRoaXMgZXhhbXBsZS4gClRoZSB3aG9sZSBzaXR1YXRpb24gY291bGQgcG90ZW50aWFsbHkgbGVhZCB0byByZWJpcnRoIG9mIG9ubGluZSBnYW1ibGluZyBpbiB0aGUgU3RhdGVzIHVuZGVyIGEgY29tcGxldGVseSBuZXcgc2V0IG9mIGNpcmN1bXN0YW5jZXMuIE9mIGNvdXJzZSwgaXQgaXMgZW50aXJlbHkgcG9zc2libGUgdGhlIHJlZ3VsYXRpb24gd2lsbCBjaGFuZ2UgdG8gc29tZWhvdyBpbmNsdWRlIGNyeXB0b2N1cnJlbmNpZXMgYXMgd2VsbCwgYnV0IGFzIHRoaW5ncyBzdGFuZCByaWdodCBub3csIGl0IHNlZW1zIHRoZXJlIGlzIG5vdGhpbmcgbGVnYWxseSBwcmV2ZW50aW5nIEFtZXJpY2FucyBmcm9tIGdhbWJsaW5nIHdpdGggYml0Y29pbnMuLiAKKElmIHlvdSBkb24ga25vdywgdGhlIGx5bXBoIHN5c3RlbSBpcyB0aGUgc2Vjb25kIGxpbmUgb2YgZGVmZW5zZSBvZiBvdXIgYm9kaWVzIGZvciBkZWFsaW5nIHdpdGggcGF0aG9nZW5zLCB2aXJ1c2VzLCBiYWN0ZXJpYSwgZXRjLiBTaW5jZSBpdCBob3VzZXMgYSBsb3Qgb2Ygd2hpdGUgYmxvb2QgY2VsbHMuIFRoZSBmaXJzdCBsaW5lIG9mIGRlZmVuc2UgaXMgdGhlIHNraW4sIHdoaWNoIHByZXZlbnRzIGEgbG90IG9mIHBhdGhvZ2VucyBmcm9tIGVudGVyaW5nIHRoZSBib2R5LikgVGhlIGx5bXBoYXRpYyBzeXN0ZW0gKGNsYXNzaWZpZWQgYXMgYSBjaXJjdWxhdG9yeSBzeXN0ZW0pIGFjdHVhbGx5IGRvZXNuIGNpcmN1bGF0ZSBpdHNlbGYuIEl0IG1vdmVtZW50IHJlbGllcyBvbiB1cyBtYW51YWxseSBtb3ZpbmcgaXQgYXJvdW5kIHRocm91Z2ggcGh5c2ljYWwgbW92ZW1lbnQsIGJsb29kIGZsb3csIGFuZCBpbiB0aGlzIGNhc2UgbWFzc2FnZS4uIApSdWxpbmcgZHVlIGluIFZpY3RvcmlhbiBjYXNpbm8gcG9raWVzIGNhc2UKRm9yIHdvbWVuIHdobyB3YW50IGNoaWxkcmVuIGJ1dCBhcmUgdW5hYmxlIHRvIGhhdmUgdGhlbSwgdGhlIGRlY2lzaW9uIHRvIGdpdmUgbXkgY2hpbGQgdXAgY2FuIHNlZW0gbGlrZSBhIHNsYXAgaW4gdGhlIGZhY2UuIEZvciBtZW4gICBsaWtlIHRoZSBmYXRoZXIgb2YgbXkgY2hpbGQgICBpdCBjYW4gbWFrZSB0aGVtIGZlZWwgaGVscGxlc3MuIEZvciBwYXJlbnRzIGxpa2UgbWluZSwgd2hvIGhhZCBtZSB3aGVuIHRoZXkgd2VyZSBmYXIgeW91bmdlciB0aGFuIEkgd2FzIHdoZW4gSSBnb3QgcHJlZ25hbnQsIGl0IGNhbiBzZWVtIHNlbGZpc2guIApUaGF0IHdhcyB0aGUgZHJ1ZyBXcmlnaHQgdGVzdGVkIHBvc2l0aXZlIGZvci4gSGUgaGFzIGFjY2VwdGVkIGhpcyBzdXNwZW5zaW9uLCBhbHRob3VnaCBoZSBoYXMgZGVuaWVkIGtub3dpbmdseSB1c2luZyBHSFJQIDIuIEluIGFkZGl0aW9uIHRvIG1pc3NpbmcgODAgZ2FtZXMsIFdyaWdodCB3aWxsIG5vdCBiZSBlbGlnaWJsZSB0byBwbGF5IGluIHRoZSBwb3N0c2Vhc29uLgpUaGUgcmVhc29uPyAiWW91ciBtb3RoZXIgaXMgdmVyeSBzaWNrIiAgIERhZC4gClRoZSByZXBvcnQgZnVydGhlciBzdGF0ZXMgdGhhdCBJbmRpYSBwcm9kdWNlcyBhcHByb3hpbWF0ZWx5ICQxMCBiaWxsaW9uIGEgeWVhciBpbiBncm9zcyBnYW1pbmcgcmV2ZW51ZSwgd2hpY2ggaW5jbHVkZXMgYm90aCBsZWdhbCBhbmQgaWxsZWdhbCBnYW1ibGluZyBjb21pbmcgZnJvbSBjYXNpbm8gYW5kIG5vbiBjYXNpbm8gZ2FtaW5nLiBJbiBhZGRpdGlvbiwgbW9zdCBtaWRkbGUgY2xhc3MgcGVvcGxlIGluIEluZGlhIGFyZSBmYW1pbGlhciB3aXRoIHNldmVyYWwgZm9ybXMgb2YgZ2FtYmxpbmcgYnV0IGRvbiBoYXZlIHBsYWNlcyB0byBwbGF5IGluLiBBbm90aGVyIHBvc2l0aXZlIHNpZ24gaXMgdGhhdCBOZXBhbCBjYXNpbm9zIGFyZSBhbGxvd2VkIHRvIGFjY2VwdCBiZXRzIGluIEluZGlhbiBydXBlZXMuLiAKQXdlc29tZSBib2R5LCBwcmV0dHkgZmFjZSwgaHVnZSB0aXRzLiAKRmVtYWxlcyBhcmUgbmV2ZXIgZWF0ZW4gYXMgbWFsZXMgZ2FpbiBzb2NpYWwgc3RhdHVzIGJhc2VkIG9uIHRoZSBzaXplIG9mIHRoZWlyICdoZXJkJyBvZiBmZW1hbGVzLi4gCk15IHVuZGVyc3RhbmRpbmcgaXMgdGhhdCBhbm90aGVyIHByb2JsZW0gd2l0aCBoYWRpdGhzIGFyZSB0aGF0IE11c2xpbXMgaGF2ZSBubyBhZ3JlZWQgdXBvbiBsZWFkZXIuIChsaWtlIHRoZSB3YXkgdGhlcmVzIGEgcG9wZSBpbiBjYXRob2xpY2lzbSkgU28gaWYgYSBSYW5kb20gSW1hbSBzdGFydHMgcmVmZXJlbmNpbmcgYW4gb2xkIGFuZCBvYnNjdXJlIGhhZGl0aCBhbmQgdGVhY2hlcyBvdXRkYXRlZCBsZXNzb25zIG9uIGl0LCB0aGVyZSBubyBwb3BlIGZpZ3VyZSB0byBzYXkgIkxpc3RlbiB0aGlzIGd1eSBpcyB3cm9uZywgdGhpcyBpcyBob3cgZ29kIHdhbnRzIHVzIHRvIGludGVycHJldGUgdGhpcyBsaW5lLiIgV2hpY2ggYWxsb3dzIGZvciB2aXJ0dWFsbHkgYW55IGludGVycHJldGF0aW9uIG9mIHRoZSBtYXRlcmlhbC4gQnV0IGltIGlnbm9yYW50IGFuZCBsaWtlbHkgbWlzc2luZyBzb21lIHRoaW5ncy4uIApUaGlzIGFsYnVtIGlzIHByb2plY3RlZCB0byBoYXZlIDggb3IgOSBzaW5nbGVzIGFsb25lLiAoRnVsbCBBbnN3ZXIpLiAKU29tZSBwZW9wbGUgcnViIHRoZWlyIGhhbmRzIGJyaXNrbHkgdG9nZXRoZXIgdG8gZ2V0IHRoZW0gd2FybSwgdGhlbiBkaXAgdXAgc29tZSBvaWwgaW50byB0aGVpciBoYW5kcyB0byB3YXJtIGl0IGFuZCByZWxlYXNlIGl0cyB2YXBvcnM7IHNvbWUgcHJlZmVyIHRvIGRyaWJibGUgYSBmZXcgZHJvcHMgb2YgdGhlIGJsZW5kIGRpcmVjdGx5IG9udG8gdGhlIHNraW4gb2YgdGhlIG1hc3NhZ2UgcmVjaXBpZW50IGFuZCBibGVuZCBpdCBpbnRvIHRoZWlyIGhhbmRzIGF0IHRoZSBzYW1lIHRpbWUgdGhleSBtYXNzYWdlIGl0IGludG8gdGhlIHNraW4uIApEZXIgWmF1YmVyc2VlClR1cm4gaXMgYSBNQU5EQVRPUlkgcmFpc2UgeW91IE1VU1QgcHJvdGVjdCB0aGlzIGhhbmQgbW9yZSBhbmQgZ2V0IHZhbHVlIGZyb20gd29yc2UgaWYgdGhleSBmb2xkIG1laCB5b3UgZ2V0IHRvIHNjb29wIGEgaHVnZWx5IGluZmxhdGVkIHBvdCB3aXRoIDAgY29udGVudGlvbiBidXQgZHVkZSB5b3UgbWFkZSB0aGlzIGJlZCBhbmQgeW91cmUgaW4gdGhlIGJlc3Qgc3BvdCB5b3UgY2FuIGJlIGluIHRvIHBpbGUgaW4gbW9uZXkgYXQgdGhpcyBwb2ludC4gU3RvcCBwbGF5aW5nIHBhc3NpdmVseSB3aXRoIHN0cm9uZyBoYW5kcyBpZiBoZSBzaG93cyB1cCB3aXRoIGEgc2V0IHRoZW4gb2ggd2VsbCBzb210aW1lcyBpbiBwb2tlciB5b3VyZSBqdXN0IGdvaW5nIHRvIGdldCBzdGFja2VkLgpJbiB0aGUgcmVnaXN0cmF0aW9uIGZvcm0sIHlvdSB3aWxsIGJlIGFza2VkIHlvdXIgY3JlZGl0IGNhcmQgbnVtYmVyLiAKVGhhdCBhcnJhbmdlbWVudCBoYXMgYmVlbiBiYW5kaWVkIGFib3V0IGZvciB5ZWFycy4gVGhlIGZhY3QgdGhhdCBpdCBub3cgYXBwZWFycyBpbW1pbmVudCAodGhvdWdoIGl0cyBzdWNjZXNzIGNhbm5vdCBiZSBjbGFpbWVkIHVudGlsIGFsbCB0aGUgcHJpc29uZXJzIHdhbGsgb3V0IG9mIGphaWwpIHJlZmxlY3RzIHR3byBzZWVtaW5nbHkgY29udHJhZGljdG9yeSByZWFsaXRpZXM6IElzcmFlbCwgdGhlIG9jY3VweWluZyBwb3dlciwgY29udGludWVzIHRvIGNvbnRyb2wgdGhlIGxpdmVzIG9mIHRoZSBvY2N1cGllZCBQYWxlc3RpbmlhbiBwb3B1bGF0aW9uLCBhbmQgbmV3IHJlZ2lvbmFsIGFuZCBpbnRlcm5hdGlvbmFsIGNvbmRpdGlvbnMgYXJlIGNoYWxsZW5naW5nIElzcmFlbCBpbiBkcmFtYXRpYyB3YXlzLgpBbmQgSSBwbGF5IG1vcmUgdGhhbiBtb3N0LiBJIGZpbmFsbHkgZm91bmQgNywxMEpRIGRvdWJsZSBzdWl0ZWQgb24gbXkgYmlnIGJsaW5kIGFuZCByZSByYWlzZWQgUm9iZXJ0IFdpbGxpYW1zb24ncyByYWlzZS4gSGUgd291bGQgcHJvYmFibHkgZHJvcCBLaW5ncyBhbmQgbWFueSBvdGhlciBoYW5kcyBpbiB0aGlzIHNpdHVhdGlvbiwgYnV0IG9mIGNvdXJzZSBSb2JlcnQgaGFkIEFjZXMuIApBdCB0aGUgcmlzayBvZiBzb3VuZGluZyBhcyBpZiBJIGtub3cgbW9yZSB0aGFuIGEgcGxhc3RpYyBzdXJnZXJ5IGNvbnN1bHRhbnQsIEkgdGhpbmsgdGhlIGlkZWEgdGhhdCB0aGUgcGxhc3RpYyBib2R5IGlzIHBhc3NlIGlzIG1lcmVseSB3aXNoZnVsIHRoaW5raW5nLiBUaGUgZGVzaXJlIGZvciBzdXJnaWNhbCBib2RpZXMgaXMgc3RpbGwgdGhlcmUsIGl0IGp1c3QgbWF5IGJlIGdvaW5nIGVsc2V3aGVyZS4gSW4gb3RoZXIgd29yZHMsIGFzIGJ1ZGdldHMgZ2V0IHRpZ2h0ZXIsIG1hbnkgQW1lcmljYW5zIGFyZSB0dXJuaW5nIHRvIGNoZWFwZXIgYWx0ZXJuYXRpdmVzIHRoYW4gdGhlIG9uZXMgYmVpbmcgY2F1Z2h0IGluIHRoaXMgc3VydmV5LiAKTWVtcGhpcyBEYWlseSBOZXdzCkdldHRvdGFsbHlnYXlhYm91dGl0ICAgMjYgcG9pbnRzICBzdWJtaXR0ZWQgMjcgZGF5cyBhZ28KQSBsb3ZlIG9mIGxhbmd1YWdlIGFuZCBsYW5ndWFnZXMgcGVydmFkZXMgdGhlIHBvZXRyeSBvZiB0ZXJuaW9uLiBSYXBhdGFoYW5hIGhhcyBhbiBpbXByZXNzaXZlIGNvbW1hbmQgb2YgRW5nbGlzaCBidXQgYWxzbyBhbiB1bmVhc3kgYW1iaXZhbGVuY2UgZm9yIHRoaXMgbGFuZ3VhZ2Ugb2YgY29sb25pc2F0aW9uIHdoaWNoIHRyYW1wbGVzIG9uIGluZGlnZW5vdXMgbGFuZ3VhZ2VzLiBJbiB0aGUgdGVybmlvbiBjb2xsZWN0aW9uIHRoZXJlIGlzIGZyZXF1ZW50IGFuZCBmbHVlbnQgdXNlIG9mIHRlIHJlbyBNYW9yaSwgd2hpY2ggaXMgcGFydCBvZiBSYXBhdGFoYW5hJ3MgKHByZWZlcnJlZCkgaWRlbnRpdHkuIEhlIHByZWZlcnMgdG8gaWRlbnRpZnkgd2l0aCB0aGUgY29sb25pc2VkIHJhdGhlciB0aGFuIHRoZSBjb2xvbmlzZXJzLiBUaGVyZSBhcmUgYWxzbyBzbWF0dGVyaW5ncyBvZiBNYW5kYXJpbiwgQ2FudG9uZXNlLCBUYWdhbG9nLCBCYWhhc2EgTWVsYXl1IGFuZCBTYW1vYW4sIHdoaWNoIGFyZSBhbGwgcGFydCBvZiBoaXMgZXhwZXJpZW5jZS4KT3IgZm9sZCBpZiB5b3UgcmVhbGx5IHRoaW5rIGhlIGhhcyBxdWFkcy4gClRoaXMgbWVhbnMgdGhhdCBzb21lb25lIGxpa2UgbWUgY2FuIGZlZWwgY29tZm9ydGFibGUgaG9sZGluZyBhIHN0b2NrIGFzIGxvbmcgYXMgdGhleSBmZWVsIHRoYXQgdGhlIHVuZGVybHlpbmcgcmVhc29ucyB0aGV5IGJvdWdodCB0aGUgc3RvY2sgaW4gdGhlIGZpcnN0IHBsYWNlIHN0aWxsIGhvbGQuIAo=|<---