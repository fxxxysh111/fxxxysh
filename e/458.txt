<!DOCTYPE html>
<html lang="ko" xml:lang="ko" xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <meta content="IE=Edge" http-equiv="X-UA-Compatible"/>
  <meta content="user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, width=device-width" name="viewport"/>
  <meta content="baa6b45b59c8698a89e027774b11a631e3a705b2" name="naver-site-verification"/>
  <meta content="7894CA377E1B201818FAF5CB2C4B4F6E" name="msvalidate.01"/>
  <title>
   [area1][mkey1][keyword1][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="Keywords"/>
 </head>
 <body class="body-warp subscribe_banner">
  <div id="subscribe_banner" style="display:none;">
   <div class="text_wrap">
   </div>
  </div>
  <noscript>
   <iframe height="0" src="//www.googletagmanager.com/ns.html?id=GTM-PFQZ6Z" style="display:none;visibility:hidden" width="0">
   </iframe>
  </noscript>
  <div id="divCaps" style="display:none;position:absolute;z-index:1000;">
   <table border="0" cellpadding="0" cellspacing="0">
    <tr>
     <td style="padding-left:5px;">
      <div class="css-arrow-multicolor">
      </div>
     </td>
    </tr>
    <tr>
     <td style="border:2px solid #003b83;height:20px;background-color:White;">
      <b>
       Caps Lock
      </b>
      이 켜져 있습니다.
      <br/>
      <b>
       대소문자
      </b>
      를 확인해주세요.
     </td>
    </tr>
   </table>
  </div>
  <div class="canvas-warp">
   <div id="dialog" style="display: none;" title="표지 이미지">
   </div>
   <div id="MultiLangInput" style="display:none;" title="다국어 입력기">
   </div>
   <div class="top-warp">
    <div class="top-navi-warp">
     <div id="skip_navi" style="display: none;">
      [link]
      
      [ahref]
      
      [ahref]
      
      [ahref]
      
     </div>
     <span>
      <li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][search][search][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
     </span>
     <span class="blank">
      |
     </span>
     <span>
      [link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[ahref]</li><li>[ahref]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][search]
     </span>
     <span class="blank">
      |
     </span>
     <span>
      [ahref]
      
     </span>
     <span class="blank">
      |[link]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][link][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]
     </span>
     <span>
      [ahref]
      
     </span>
     <span class="blank">
      |<li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li><li>[search]</li>[search]
     </span>
     <span>
      <br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]<li>[search]</li>[link]<li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>
     </span>
     <span class="blank">
      |<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>[search]<li>[link]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]
     </span>
     <span>
      [search][ahref][ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li><li>[search]</li>
     </span>
    </div>
    <div class="top-search-warp">
     <h1 class="top-logo">
      <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
     </h1>
     <form action="/SearchResult/TopSearch" id="SearchForm" method="get" name="SearchForm">
      <div class="top-search">
       <ul class="top-search-input">
        <li id="top-search-text">
         <div class="big-search">
          <div class="type_wrap">
          </div>
         </div>
         <div class="small-search">
          <div id="AKCDiv" style="display:none;z-index:998; position:absolute;">
           <iframe frameborder="0" id="AKCIfrm" marginheight="0" marginwidth="0" name="AKCIfrm" scrolling="no" src="/Html/akc_body.html" style="width:100%; height:0px;" title="자동완성">
           </iframe>
          </div>
         </div>
        </li>
        <li>
        </li>
        <li>
         <div>
          [ahref]
          
         </div>
         <div class="last">
          [ahref]
          
         </div>
        </li>
       </ul>
      </div>
     </form>
     <form action="/SearchResult/TopSearch" id="SpecificForm" method="get" name="SpecificForm">
     </form>
     <form action="/Export/exportMeta" id="ExportForm" method="post" name="ExportForm">
     </form>
     <div class="top-right">
      <div class="top-right-btn3">
       [link]
       
      </div>
     </div>
    </div>
    <div class="specific_check">
    </div>
   </div>
   <div class="top-menu-warp">
    <ul>
     <li class="top-menu-depth1">
      [ahref]
      
     </li>
     <li class="top-menu-depth1">
      [ahref]
      
      <div class="top-menu-depth2">
       <p>
        <li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[ahref]<li>[search]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
       </p>
       <p>
        [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[link][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[ahref]<li>[ahref]</li><li>[search]</li>
       </p>
       <p>
        [ahref]
        
       </p>
       <p>
        [link]
        
       </p>
       <p>
        <li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref]<li>[link]</li><li>[ahref]</li><li>[link]</li>[link][ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
       </p>
      </div>
     </li>
     <li class="top-menu-depth1">
      [ahref]
      
     </li>
     <li class="top-menu-depth1">
      <a href="/Author/AuthorList" id="GNB_Author" onclick="fn_statistics('G004','','')" tabindex="60" title="저자목록">
      </a>
     </li>
     <li class="top-menu-depth1">
      [link]
      
     </li>
     <li class="top-menu-depth1">
      [link]
      
      <div class="top-menu-depth3">
       <p>
        [ahref]
        
       </p>
       <p>
        [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[ahref]</li><li>[search]</li><li>[link]</li>[search]<li>[search]</li><li>[link]</li><li>[link]</li>
       </p>
       <p>
        [link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][search]
       </p>
       <p>
        [link]
        
       </p>
      </div>
     </li>
    </ul>
   </div>
   <div id="container">
    <div class="navi-warp a-none">
     [ahref]
     
     >
     [ahref]
     
     > 대한치과의사협회지
    </div>
    <div class="sub-warp">
     <div class="sub-left">
      <form action="/SearchResult/LeftBrowseSearch" id="Browse" method="get" name="Browse">
       <h3>
        [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
       </h3>
       <div class="sub-search">
        <p>
         <label for="SearchString">
          이 전자저널 내 검색
         </label>
        </p>
        <p>
         [search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li>[ahref][search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
        </p>
        <p>
         <select name="SearchField" title="search">
          <option value="0">
           전체
          </option>
          <option value="1">
           자료명
          </option>
          <option value="5">
           저자
          </option>
          <option value="7">
           목차+초록
          </option>
          <option value="6">
           키워드명
          </option>
         </select>
        </p>
       </div>
       <div class="sub-menu-noscroll">
        <p class="title b">
         <li>[link]</li><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search][link]<li>[search]</li>
        </p>
        <div class="sub-menu a-none">
         <p>
          [ahref]
          
         </p>
         <dl style="display:none;">
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
         </dl>
         <p>
          <li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[ahref][link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li><li>[link]</li>[ahref]
         </p>
         <dl style="display:none;">
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
         </dl>
         <p>
          [ahref]
          
         </p>
         <dl style="display:none;">
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           <a href="/Journal/ArticleList/VOIS00286053" onclick="fn_statistics('L801',fnGetB2BId(),fnGetB2CId())">
            제54권 제9호(통권 제568호)
           </a>
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
         </dl>
         <p>
          [link][link][ahref][search]<li>[search]</li><li>[link]</li><li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
         </p>
         <dl style="display:none;">
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           <a href="/Journal/ArticleList/VOIS00235684" onclick="fn_statistics('L801',fnGetB2BId(),fnGetB2CId())">
            제53권 제5호
           </a>
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
         </dl>
         <p>
          [ahref][ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[search]</li>[ahref][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
         </p>
         <dl style="display:none;">
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           <a href="/Journal/ArticleList/VOIS00229743" onclick="fn_statistics('L801',fnGetB2BId(),fnGetB2CId())">
            제52권 제8호
           </a>
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
         </dl>
         <p>
          [link]
          
         </p>
         <dl style="display:none;">
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           <a href="/Journal/ArticleList/VOIS00110400" onclick="fn_statistics('L801',fnGetB2BId(),fnGetB2CId())">
            제51권 제7호
           </a>
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
         </dl>
         <p>
          [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[search]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[link]</li>
         </p>
         <dl style="display:none;">
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           <a href="/Journal/ArticleList/VOIS00094643" onclick="fn_statistics('L801',fnGetB2BId(),fnGetB2CId())">
            제50권 제1호
           </a>
          </dt>
         </dl>
         <p>
          [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[ahref]<li>[link]</li>[search]<li>[ahref]</li><li>[link]</li><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li><li>[ahref]</li><li>[ahref]</li>
         </p>
         <dl style="display:none;">
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
         </dl>
         <p>
          [link]
          
         </p>
         <dl style="display:none;">
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
         </dl>
         <p>
          [search][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[search]</li><li>[link]</li>[ahref][link]<li>[search]</li>[search]<li>[ahref]</li>[search][ahref]<li>[ahref]</li>[search][link]<li>[link]</li>[ahref]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[search]</li>[search]
         </p>
         <dl style="display:none;">
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
         </dl>
         <p>
          [ahref]
          
         </p>
         <dl style="display:none;">
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           <a href="/Journal/ArticleList/VOIS00094598" onclick="fn_statistics('L801',fnGetB2BId(),fnGetB2CId())">
            제46권 제4호
           </a>
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
         </dl>
         <p>
          [link]
          
         </p>
         <dl style="display:none;">
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           <a href="/Journal/ArticleList/VOIS00094584" onclick="fn_statistics('L801',fnGetB2BId(),fnGetB2CId())">
            제45권 제2호
           </a>
          </dt>
          <dt>
           [ahref]
           
          </dt>
         </dl>
         <p>
          <p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
         </p>
         <dl style="display:none;">
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           <a href="/Journal/ArticleList/VOIS00094574" onclick="fn_statistics('L801',fnGetB2BId(),fnGetB2CId())">
            제44권 제4호
           </a>
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
         </dl>
         <p>
          [ahref]
          
         </p>
         <dl style="display:none;">
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           <a href="/Journal/ArticleList/VOIS00094567" onclick="fn_statistics('L801',fnGetB2BId(),fnGetB2CId())">
            제43권 제9호
           </a>
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
         </dl>
         <p>
          [ahref]<li>[ahref]</li><li>[link]</li>[link][ahref][ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]
         </p>
         <dl style="display:none;">
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
         </dl>
         <p>
          <li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<li>[link]</li>[search]<li>[search]</li>[link][ahref]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[search][ahref][ahref][link][search]<li>[search]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[search]</li>
         </p>
         <dl style="display:none;">
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           <a href="/Journal/ArticleList/VOIS00094543" onclick="fn_statistics('L801',fnGetB2BId(),fnGetB2CId())">
            제41권 제9호
           </a>
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
         </dl>
         <p>
          [link]
          
         </p>
         <dl style="display:none;">
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
         </dl>
         <p>
          [ahref]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][link]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
         </p>
         <dl style="display:none;">
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
         </dl>
         <p>
          [ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li><li>[search]</li><li>[search]</li>[link]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li><li>[ahref]</li>[ahref][search][search][link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[ahref]</li><li>[link]</li>[link][search][search]
         </p>
         <dl style="display:none;">
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
         </dl>
         <p>
          [ahref]
          
         </p>
         <dl style="display:none;">
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
         </dl>
         <p>
          [ahref]
          
         </p>
         <dl style="display:none;">
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
         </dl>
         <p>
          <p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[link][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][ahref][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
         </p>
         <dl style="display:none;">
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           <a href="/Journal/ArticleList/VOIS00094463" onclick="fn_statistics('L801',fnGetB2BId(),fnGetB2CId())">
            제35권 제1호
           </a>
          </dt>
         </dl>
         <p>
          [ahref]
          
         </p>
         <dl style="display:none;">
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
         </dl>
         <p>
          [link]
          
         </p>
         <dl style="display:none;">
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           <a href="/Journal/ArticleList/VOIS00094439" onclick="fn_statistics('L801',fnGetB2BId(),fnGetB2CId())">
            제33권 제1호
           </a>
          </dt>
         </dl>
         <p>
          <li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[search]</li><li>[ahref]</li>[search][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[ahref]
         </p>
         <dl style="display:none;">
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
         </dl>
         <p>
          [ahref]
          
         </p>
         <dl style="display:none;">
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
         </dl>
         <p>
          [ahref]
          
         </p>
         <dl style="display:none;">
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           <a href="/Journal/ArticleList/VOIS00094406" onclick="fn_statistics('L801',fnGetB2BId(),fnGetB2CId())">
            제30권 제4호
           </a>
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
         </dl>
         <p>
          [ahref]
          
         </p>
         <dl style="display:none;">
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           <a href="/Journal/ArticleList/VOIS00094395" onclick="fn_statistics('L801',fnGetB2BId(),fnGetB2CId())">
            제29권 제5호
           </a>
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
         </dl>
         <p>
          <li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link][search][ahref]<li>[search]</li><li>[link]</li>[search]
         </p>
         <dl style="display:none;">
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           <a href="/Journal/ArticleList/VOIS00094386" onclick="fn_statistics('L801',fnGetB2BId(),fnGetB2CId())">
            제28권 제8호
           </a>
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
         </dl>
         <p>
          [ahref][link][search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li>
         </p>
         <dl style="display:none;">
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
         </dl>
         <p>
          [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[search]
         </p>
         <dl style="display:none;">
          <dt>
           <a href="/Journal/ArticleList/VOIS00094366" onclick="fn_statistics('L801',fnGetB2BId(),fnGetB2CId())">
            제26권 제12호
           </a>
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
         </dl>
         <p>
          [ahref]
          
         </p>
         <dl style="display:none;">
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           <a href="/Journal/ArticleList/VOIS00094345" onclick="fn_statistics('L801',fnGetB2BId(),fnGetB2CId())">
            제25권 제3호
           </a>
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
         </dl>
         <p>
          <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[search]<li>[link]</li>[ahref][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref]
         </p>
         <dl style="display:none;">
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           <a href="/Journal/ArticleList/VOIS00094339" onclick="fn_statistics('L801',fnGetB2BId(),fnGetB2CId())">
            제24권 제9호
           </a>
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
         </dl>
         <p>
          [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>[ahref]<li>[ahref]</li>
         </p>
         <dl style="display:none;">
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
         </dl>
         <p>
          <p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]<li>[ahref]</li><li>[link]</li><li>[search]</li>
         </p>
         <dl style="display:none;">
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
         </dl>
         <p>
          [search]<li>[search]</li><li>[ahref]</li>[search][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[search]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><li>[link]</li>[ahref]
         </p>
         <dl style="display:none;">
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           <a href="/Journal/ArticleList/VOIS00094297" onclick="fn_statistics('L801',fnGetB2BId(),fnGetB2CId())">
            제21권 제3호
           </a>
          </dt>
          <dt>
           <a href="/Journal/ArticleList/VOIS00094296" onclick="fn_statistics('L801',fnGetB2BId(),fnGetB2CId())">
            제21권 제2호
           </a>
          </dt>
          <dt>
           [ahref]
           
          </dt>
         </dl>
         <p>
          [link]
          
         </p>
         <dl style="display:none;">
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
         </dl>
         <p>
          [ahref]
          
         </p>
         <dl style="display:none;">
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           <a href="/Journal/ArticleList/VOIS00094273" onclick="fn_statistics('L801',fnGetB2BId(),fnGetB2CId())">
            제19권 제3호
           </a>
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
         </dl>
         <p>
          <li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search][link][search]<li>[link]</li>[link]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[ahref]</li><li>[link]</li>[search]
         </p>
         <dl style="display:none;">
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
         </dl>
         <p>
          [link]
          
         </p>
         <dl style="display:none;">
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
         </dl>
         <p>
          <p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<li>[ahref]</li><li>[search]</li><li>[link]</li><li>[ahref]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]
         </p>
         <dl style="display:none;">
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
         </dl>
         <p>
          [link]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>
         </p>
         <dl style="display:none;">
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
         </dl>
         <p>
          <li>[search]</li>[ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref][link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
         </p>
         <dl style="display:none;">
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
         </dl>
         <p>
          <li>[link]</li><li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
         </p>
         <dl style="display:none;">
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
         </dl>
         <p>
          [link]
          
         </p>
         <dl style="display:none;">
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
         </dl>
         <p>
          <li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search][ahref]<li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
         </p>
         <dl style="display:none;">
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
         </dl>
         <p>
          <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>[search][search][ahref]
         </p>
         <dl style="display:none;">
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
         </dl>
         <p>
          [ahref]
          
         </p>
         <dl style="display:none;">
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
         </dl>
         <p>
          <li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]<li>[ahref]</li><li>[search]</li><li>[ahref]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
         </p>
         <dl style="display:none;">
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [ahref]
           
          </dt>
          <dt>
           [link]
           
          </dt>
         </dl>
         <p>
          <br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>[ahref]<li>[ahref]</li>
         </p>
         <dl style="display:none;">
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
         </dl>
         <p>
          <a href=";">
           1967
          </a>
         </p>
         <dl style="display:none;">
          <dt>
           [ahref]
           
          </dt>
         </dl>
         <p>
          [ahref]<li>[ahref]</li><li>[ahref]</li>[search]<li>[link]</li>
         </p>
         <dl style="display:none;">
          <dt>
           <a href="/Journal/ArticleList/VOIS00094137" onclick="fn_statistics('L801',fnGetB2BId(),fnGetB2CId())">
            제5권
           </a>
          </dt>
         </dl>
         <p>
          [link]
          
         </p>
         <dl style="display:none;">
          <dt>
           [link]
           
          </dt>
          <dt>
           [link]
           
          </dt>
         </dl>
         <p>
          [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li>[link][link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][link]
         </p>
         <dl style="display:none;">
          <dt>
           [ahref]
           
          </dt>
         </dl>
         <p>
          <li>[ahref]</li>[ahref][ahref]<li>[ahref]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[ahref]</li>[search][search]
         </p>
         <dl style="display:none;">
          <dt>
           [ahref]
           
          </dt>
         </dl>
         <p>
          <li>[ahref]</li><li>[ahref]</li><li>[link]</li><li>[search]</li>[ahref][search]<li>[search]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]
         </p>
         <dl style="display:none;">
          <dt>
           [ahref]
           
          </dt>
         </dl>
        </div>
       </div>
      </form>
     </div>
     <form action="/Journal/IssueList/PLCT00002094" id="global" method="get" name="global">
     </form>
     <div class="sub-contents">
      <div class="sub-title a-none">
       <h3 class="title-left">
        [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
       </h3>
       [ahref]
       
      </div>
      <div class="contents-warp">
       <form action="/Journal/IssueList/PLCT00002094" id="Issue" method="get" name="Issue">
        <div class="search-info">
         <dl>
          <dt class="search-img-btn">
          </dt>
          <dd>
           <p>
            <span class="dot-red b">
             발행기관
            </span>
            :
            [ahref]
            
           </p>
           <p>
            <li>[ahref]</li>[ahref]<li>[link]</li><li>[search]</li><li>[search]</li><li>[ahref]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>
           </p>
           <p>
            [search]<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]<li>[ahref]</li>
           </p>
           <p>
            <span class="dot-red b">
             ISSN
            </span>
            : 0376-4672(Print)
           </p>
           <p>
            주제분류[link]<li>[search]</li><li>[ahref]</li><li>[ahref]</li><li>[search]</li><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><li>[ahref]</li><li>[link]</li><li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search][ahref][ahref][link]<li>[search]</li>[ahref]
           </p>
           <p class="bar">
            - DBpia 구독분류 :
            [link]
            
           </p>
           <p class="bar">
            - DBpia 기본분류 :
            [link]
            
           </p>
           <div class="info_more_wrap">
            <div class="more_wrap">
             <p>
              [search][link]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][ahref][link]<li>[ahref]</li>[link]<li>[ahref]</li>[search][ahref][search]<li>[ahref]</li>[search][link]<li>[link]</li>
             </p>
            </div>
            [ahref]
            
           </div>
          </dd>
         </dl>
        </div>
        <div class="search_result_info">
         <table class="info_table">
          <caption>
           수록정보 및 DBpia 이용/인용 지표
          </caption>
          <colgroup>
           <col style="width:24%"/>
           <col style="width:10%"/>
           <col style="width:14%"/>
           <col style="width:10%"/>
           <col style="width:12%"/>
           <col style="width:14%"/>
           <col style="width:14%"/>
          </colgroup>
          <tbody>
           <tr>
            <th scope="row">
             수록정보
            </th>
            <td class="label">
             발행기간
            </td>
            <td class="border">
             1954~2018
            </td>
            <td class="label">
             총 권호수
            </td>
            <td class="border">
             594
            </td>
            <td class="label">
             총 논문수
            </td>
            <td>
             7,448
            </td>
           </tr>
           <tr>
            <th scope="row">
             DBpia 이용/인용 지표
            </th>
            <td class="label">
             이용수
            </td>
            <td class="border">
             120,832
            </td>
            <td class="label">
             피인용수
            </td>
            <td class="border">
             30
            </td>
            <td class="label">
             2016/2017 Usage Factor
            </td>
            <td>
             19
            </td>
           </tr>
          </tbody>
         </table>
         <div class="tooltip_box" id="tooltip_01">
          <div class="tooltip_wrap">
           <p>
            논문의 이용/인용 정보를 제공하는 DBpia의 Premium 서비스로, 기관회원/저자회원에게 제공됩니다.[ahref][link][link][search][link]<li>[ahref]</li>
           </p>
          </div>
         </div>
         <p class="info_text">
          <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][search]<li>[ahref]</li>[search]<li>[link]</li>[search]<li>[link]</li>[link][ahref]<li>[ahref]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[search]<li>[ahref]</li><li>[link]</li>[ahref][link][search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[link]</li>
         </p>
        </div>
        <div class="subSearchResultList search_result_header">
         <div class="tabWarp">
          [link]
          
          [link]
          
          [link]
          
         </div>
         <div class="tab_bottom">
          <div class="listWarp02">
           대한치과의사협회지 Vol.56 No.12(Wn.595), 2018.11
          </div>
         </div>
        </div>
        <div class="listFunctionBar">
         <div class="selectAll">
         </div>
         <div class="imgBtn">
          <ul>
           <li class="functionDiv">
           </li>
           <li class="dep1 m01">
            [ahref]
            
           </li>
           <li class="functionDiv">
           </li>
           <li class="dep1 m02">
            [link]
            
           </li>
           <li class="functionDiv">
           </li>
           <li class="dep1 m03">
            [link]
            
           </li>
           <li class="functionDiv">
           </li>
           <li class="dep1 m04">
            [ahref]
            
            <div class="subMenu left">
             <span class="boxTop">
              <p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li><li>[link]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[link]</li><li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li>
             </span>
             <ul class="sub_menu">
              <li>
               [ahref]
               
              </li>
              <li>
               [link]
               
              </li>
              <li>
               [link]
               
              </li>
              <li>
               [link]
               
              </li>
              <li>
               [link]
               
              </li>
              <li>
               [link]
               
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [link]
               
              </li>
              <li>
               [link]
               
              </li>
             </ul>
            </div>
           </li>
          </ul>
         </div>
         <div class="availableInfo">
          <ul>
           <li>
           </li>
           <li>
           </li>
           <li>
           </li>
          </ul>
         </div>
        </div>
        <div class="subSearchResultWarp" id="pagedIssueList" style="display:block;">
         <div class="subSearchResultList">
          <div class="listWarp">
           <ul class="textLayerPrice">
            <li class="checkWarp">
            </li>
            <li class="iconWarp">
             <dl>
              <dd>
              </dd>
              <dd class="icon">
              </dd>
             </dl>
            </li>
            <li class="imageWarp">
            </li>
            <li class="contentsWarp">
             <dl>
              <dt>
               <div class="titleWarp">
                [ahref]
                
                <span class="rtext fsize9">
                 [KCI등재후보]
                </span>
               </div>
              </dt>
              <dd class="content01Warp">
               편집부
              </dd>
              <dd class="content01Warp">
               [ahref]
               
               ,
               [link]
               
               [ahref]
               
               , 2018.11, 728-728
                            (1 page)
              </dd>
              <dd class="contentsBtnWarp">
               <ul>
                <div>
                 <li class="btn01">
                  [link]
                  
                 </li>
                </div>
                <li class="barNbsp">
                </li>
                <li class="btnView">
                 [ahref]
                 
                </li>
                <li class="barNbsp">
                </li>
                <li class="btn05" id="btn_NODE07567704_detl">
                 [ahref]
                 
                </li>
               </ul>
              </dd>
              <dd class="content01Warp red">
               이 자료는 저작권자 요청에 의해 개인 회원에게 무료로 제공됩니다. 로그인 후 이용 가능합니다.
              </dd>
             </dl>
            </li>
           </ul>
           <div class="textContentsWarp" id="NODE07567704_abs" style="display:none;">
           </div>
           <div class="detlWrap" id="NODE07567704_detl" style="display:none;">
           </div>
          </div>
          <div class="sections">
           <dl class="one">
            <dt class="titleWarp">
             MINI CONTENTS
            </dt>
           </dl>
          </div>
          <div class="listWarp">
           <ul class="textLayerPrice">
            <li class="checkWarp">
            </li>
            <li class="iconWarp">
             <dl>
              <dd>
              </dd>
              <dd class="icon">
              </dd>
             </dl>
            </li>
            <li class="imageWarp">
            </li>
            <li class="contentsWarp">
             <dl>
              <dt>
               <div class="titleWarp">
                [ahref]
                
                <span class="rtext fsize9">
                 [KCI등재후보][link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][search]<li>[link]</li><li>[search]</li>
                </span>
               </div>
              </dt>
              <dd class="content01Warp">
               편집부
              </dd>
              <dd class="content01Warp">
               [link]
               
               ,
               [ahref]
               
               [link]
               
               , 2018.11, 654-655
                            (2 pages)
              </dd>
              <dd class="contentsBtnWarp">
               <ul>
                <div>
                 <li class="btnUse">
                  [link]
                  
                 </li>
                </div>
                <li class="barNbsp">
                </li>
                <li class="btn04">
                 [link]
                 
                </li>
                <li class="barNbsp">
                </li>
                <li class="btn05" id="btn_NODE07567694_detl">
                 [link]
                 
                </li>
               </ul>
              </dd>
              <dd class="content01Warp red">
              </dd>
             </dl>
            </li>
           </ul>
           <div class="textContentsWarp" id="NODE07567694_abs" style="display:none;">
           </div>
           <div class="detlWrap" id="NODE07567694_detl" style="display:none;">
           </div>
          </div>
          <div class="sections">
           <dl class="one">
            <dt class="titleWarp">
             학술 : 논문
            </dt>
           </dl>
          </div>
          <div class="listWarp">
           <ul class="textLayerPrice">
            <li class="checkWarp">
            </li>
            <li class="iconWarp">
             <dl>
              <dd>
              </dd>
              <dd class="icon">
              </dd>
             </dl>
            </li>
            <li class="imageWarp">
            </li>
            <li class="contentsWarp">
             <dl>
              <dt>
               <div class="titleWarp">
                [ahref]
                
                <span class="rtext fsize9">
                 [KCI등재후보][ahref]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link][link]
                </span>
               </div>
              </dt>
              <dd class="content01Warp">
               [link]
               
               ,
               [link]
               
               ,
               [ahref]
               
              </dd>
              <dd class="content01Warp">
               [link]
               
               ,
               [ahref]
               
               [ahref]
               
               , 2018.11, 658-666
                            (9 pages)
              </dd>
              <dd class="contentsBtnWarp">
               <ul>
                <div>
                 <li class="btnUse">
                  [ahref]
                  
                 </li>
                </div>
                <li class="barNbsp">
                </li>
                <li class="btn04">
                 [ahref]
                 
                </li>
                <li class="barNbsp">
                </li>
                <li class="btn05" id="btn_NODE07567695_detl">
                 [ahref]
                 
                </li>
               </ul>
              </dd>
              <dd class="content01Warp red">
              </dd>
             </dl>
            </li>
           </ul>
           <div class="textContentsWarp" id="NODE07567695_abs" style="display:none;">
           </div>
           <div class="detlWrap" id="NODE07567695_detl" style="display:none;">
           </div>
          </div>
          <div class="listWarp">
           <ul class="textLayerPrice">
            <li class="checkWarp">
            </li>
            <li class="iconWarp">
             <dl>
              <dd>
              </dd>
              <dd class="icon">
              </dd>
             </dl>
            </li>
            <li class="imageWarp">
            </li>
            <li class="contentsWarp">
             <dl>
              <dt>
               <div class="titleWarp">
                [link]
                
                <span class="rtext fsize9">
                 [KCI등재후보][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[ahref]</li>[ahref]<li>[ahref]</li>[link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li><li>[search]</li><li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li>[ahref][search]
                </span>
               </div>
              </dt>
              <dd class="content01Warp">
               [ahref]
               
               ,
               [link]
               
               ,
               [link]
               
               ,
               [link]
               
               ,
               [ahref]
               
               ,
               [ahref]
               
              </dd>
              <dd class="content01Warp">
               [link]
               
               ,
               [ahref]
               
               [link]
               
               , 2018.11, 667-685
                            (19 pages)
              </dd>
              <dd class="contentsBtnWarp">
               <ul>
                <div>
                 <li class="btnUse">
                  [ahref]
                  
                 </li>
                </div>
                <li class="barNbsp">
                </li>
                <li class="btn04">
                 [ahref]
                 
                </li>
                <li class="barNbsp">
                </li>
                <li class="btn05" id="btn_NODE07567696_detl">
                 [ahref]
                 
                </li>
               </ul>
              </dd>
              <dd class="content01Warp red">
              </dd>
             </dl>
            </li>
           </ul>
           <div class="textContentsWarp" id="NODE07567696_abs" style="display:none;">
           </div>
           <div class="detlWrap" id="NODE07567696_detl" style="display:none;">
           </div>
          </div>
          <div class="listWarp">
           <ul class="textLayerPrice">
            <li class="checkWarp">
            </li>
            <li class="iconWarp">
             <dl>
              <dd>
              </dd>
              <dd class="icon">
              </dd>
             </dl>
            </li>
            <li class="imageWarp">
            </li>
            <li class="contentsWarp">
             <dl>
              <dt>
               <div class="titleWarp">
                [ahref]
                
                <span class="rtext fsize9">
                 [KCI등재후보]
                </span>
               </div>
              </dt>
              <dd class="content01Warp">
               [ahref]
               
               ,
               [link]
               
               ,
               [link]
               
               ,
               [link]
               
              </dd>
              <dd class="content01Warp">
               [link]
               
               ,
               [ahref]
               
               [ahref]
               
               , 2018.11, 686-694
                            (9 pages)
              </dd>
              <dd class="contentsBtnWarp">
               <ul>
                <div>
                 <li class="btnUse">
                  [ahref]
                  
                 </li>
                </div>
                <li class="barNbsp">
                </li>
                <li class="btn04">
                 [ahref]
                 
                </li>
                <li class="barNbsp">
                </li>
                <li class="btn05" id="btn_NODE07567697_detl">
                 [ahref]
                 
                </li>
               </ul>
              </dd>
              <dd class="content01Warp red">
              </dd>
             </dl>
            </li>
           </ul>
           <div class="textContentsWarp" id="NODE07567697_abs" style="display:none;">
           </div>
           <div class="detlWrap" id="NODE07567697_detl" style="display:none;">
           </div>
          </div>
          <div class="listWarp">
           <ul class="textLayerPrice">
            <li class="checkWarp">
            </li>
            <li class="iconWarp">
             <dl>
              <dd>
              </dd>
              <dd class="icon">
              </dd>
             </dl>
            </li>
            <li class="imageWarp">
            </li>
            <li class="contentsWarp">
             <dl>
              <dt>
               <div class="titleWarp">
                [link]
                
                <span class="rtext fsize9">
                 [KCI등재후보][link]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><li>[search]</li><li>[link]</li><li>[link]</li><li>[search]</li>
                </span>
               </div>
              </dt>
              <dd class="content01Warp">
               [link]
               
               ,
               [link]
               
               ,
               [link]
               
               ,
               [ahref]
               
               ,
               [ahref]
               
              </dd>
              <dd class="content01Warp">
               [ahref]
               
               ,
               [ahref]
               
               [ahref]
               
               , 2018.11, 695-706
                            (12 pages)
              </dd>
              <dd class="contentsBtnWarp">
               <ul>
                <div>
                 <li class="btnUse">
                  [link]
                  
                 </li>
                </div>
                <li class="barNbsp">
                </li>
                <li class="btn04">
                 [ahref]
                 
                </li>
                <li class="barNbsp">
                </li>
                <li class="btn05" id="btn_NODE07567698_detl">
                 [ahref]
                 
                </li>
               </ul>
              </dd>
              <dd class="content01Warp red">
              </dd>
             </dl>
            </li>
           </ul>
           <div class="textContentsWarp" id="NODE07567698_abs" style="display:none;">
           </div>
           <div class="detlWrap" id="NODE07567698_detl" style="display:none;">
           </div>
          </div>
          <div class="listWarp">
           <ul class="textLayerPrice">
            <li class="checkWarp">
            </li>
            <li class="iconWarp">
             <dl>
              <dd>
              </dd>
              <dd class="icon">
              </dd>
             </dl>
            </li>
            <li class="imageWarp">
            </li>
            <li class="contentsWarp">
             <dl>
              <dt>
               <div class="titleWarp">
                [ahref]
                
                <span class="rtext fsize9">
                 [KCI등재후보]
                </span>
               </div>
              </dt>
              <dd class="content01Warp">
               [link]
               
              </dd>
              <dd class="content01Warp">
               [ahref]
               
               ,
               [ahref]
               
               [link]
               
               , 2018.11, 707-713
                            (7 pages)
              </dd>
              <dd class="contentsBtnWarp">
               <ul>
                <div>
                 <li class="btnUse">
                  <a class="btn_search_use_02" href=";" onclick="_gaq.push(['_trackEvent', 'GetAccess', 'Start', '']);fn_statistics('Z140',fnGetB2BId(),fnGetB2CId());" prce="가격 : 6,000원" rel="acTrk" target="NODE07567699" trkval="147003|NODE07567699|7|2">
                   이용하기
                  </a>
                 </li>
                </div>
                <li class="barNbsp">
                </li>
                <li class="btn04">
                 [link]
                 
                </li>
                <li class="barNbsp">
                </li>
                <li class="btn05" id="btn_NODE07567699_detl">
                 [ahref]
                 
                </li>
               </ul>
              </dd>
              <dd class="content01Warp red">
              </dd>
             </dl>
            </li>
           </ul>
           <div class="textContentsWarp" id="NODE07567699_abs" style="display:none;">
           </div>
           <div class="detlWrap" id="NODE07567699_detl" style="display:none;">
           </div>
          </div>
          <div class="sections">
           <dl class="one">
            <dt class="titleWarp">
             MINI CONTENTS
            </dt>
           </dl>
          </div>
          <div class="listWarp">
           <ul class="textLayerPrice">
            <li class="checkWarp">
            </li>
            <li class="iconWarp">
             <dl>
              <dd>
              </dd>
              <dd class="icon">
              </dd>
             </dl>
            </li>
            <li class="imageWarp">
            </li>
            <li class="contentsWarp">
             <dl>
              <dt>
               <div class="titleWarp">
                [link]
                
                <span class="rtext fsize9">
                 [KCI등재후보]<li>[search]</li><li>[search]</li><li>[link]</li><li>[ahref]</li><li>[search]</li><li>[ahref]</li><li>[search]</li><li>[ahref]</li><li>[search]</li>
                </span>
               </div>
              </dt>
              <dd class="content01Warp">
               편집부
              </dd>
              <dd class="content01Warp">
               [link]
               
               ,
               [link]
               
               [ahref]
               
               , 2018.11, 714-725
                            (12 pages)
              </dd>
              <dd class="contentsBtnWarp">
               <ul>
                <div>
                 <li class="btnUse">
                  [ahref]
                  
                 </li>
                </div>
                <li class="barNbsp">
                </li>
                <li class="btn04">
                 [link]
                 
                </li>
                <li class="barNbsp">
                </li>
                <li class="btn05" id="btn_NODE07567700_detl">
                 [ahref]
                 
                </li>
               </ul>
              </dd>
              <dd class="content01Warp red">
              </dd>
             </dl>
            </li>
           </ul>
           <div class="textContentsWarp" id="NODE07567700_abs" style="display:none;">
           </div>
           <div class="detlWrap" id="NODE07567700_detl" style="display:none;">
           </div>
          </div>
         </div>
         <div class="paging">
         </div>
        </div>
        <div class="subSearchResultWarp" id="pagedRankList" style="display:none;">
         <div class="subSearchResultList">
          <div class="listWarp">
           <ul class="textLayerPrice">
            <li class="checkWarp">
            </li>
            <li class="iconWarp">
             <dl>
              <dd>
              </dd>
              <dd class="icon">
              </dd>
             </dl>
            </li>
            <li class="imageWarp">
            </li>
            <li class="contentsWarp">
             <dl>
              <dt>
               <div class="titleWarp">
                [ahref]
                
                <span class="rtext fsize9">
                 [KCI등재후보]<li>[ahref]</li>[link]<li>[link]</li>[search][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>
                </span>
               </div>
              </dt>
              <dd class="content01Warp">
               [ahref]
               
               ,
               [link]
               
               ,
               [ahref]
               
               ,
               [link]
               
               ,
               [ahref]
               
              </dd>
              <dd class="content01Warp">
               [ahref]
               
               ,
               [link]
               
               [ahref]
               
               , 2016.1, 67-83
                            (17 pages)
              </dd>
              <dd class="contentsBtnWarp">
               <ul>
                <div>
                 <li class="btnUse">
                  [ahref]
                  
                 </li>
                </div>
                <li class="barNbsp">
                </li>
                <li class="btn04">
                 [link]
                 
                </li>
                <li class="barNbsp">
                </li>
                <li class="btn05" id="btn_NODE06592499_detl">
                 [ahref]
                 
                </li>
               </ul>
              </dd>
              <dd class="content01Warp red">
              </dd>
             </dl>
            </li>
           </ul>
           <div class="textContentsWarp" id="NODE06592499_abs" style="display:none;">
           </div>
           <div class="detlWrap" id="NODE06592499_detl" style="display:none;">
           </div>
           <ul class="result_list_info">
            <li>
             <span class="label">
              이용수
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z230',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE06592499');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              660
             </span>
            </li>
            <li>
             <span class="label">
              피인용수<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>[link]<li>[search]</li>[search][ahref][link][ahref]<li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z231',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE06592499');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              0[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>
             </span>
            </li>
            <li>
             [link]
             
            </li>
           </ul>
          </div>
          <div class="listWarp">
           <ul class="textLayerPrice">
            <li class="checkWarp">
            </li>
            <li class="iconWarp">
             <dl>
              <dd>
              </dd>
              <dd class="icon">
              </dd>
             </dl>
            </li>
            <li class="imageWarp">
            </li>
            <li class="contentsWarp">
             <dl>
              <dt>
               <div class="titleWarp">
                [link]
                
                <span class="rtext fsize9">
                 [KCI등재후보]
                </span>
               </div>
              </dt>
              <dd class="content01Warp">
               [link]
               
              </dd>
              <dd class="content01Warp">
               [ahref]
               
               ,
               [ahref]
               
               [ahref]
               
               , 2004.11, 758-764
                            (7 pages)
              </dd>
              <dd class="contentsBtnWarp">
               <ul>
                <div>
                 <li class="btnUse">
                  [link]
                  
                 </li>
                </div>
                <li class="barNbsp">
                </li>
                <li class="btn04">
                 [link]
                 
                </li>
                <li class="barNbsp">
                </li>
                <li class="btn05" id="btn_NODE01991394_detl">
                 [ahref]
                 
                </li>
               </ul>
              </dd>
              <dd class="content01Warp red">
              </dd>
             </dl>
            </li>
           </ul>
           <div class="textContentsWarp" id="NODE01991394_abs" style="display:none;">
           </div>
           <div class="detlWrap" id="NODE01991394_detl" style="display:none;">
           </div>
           <ul class="result_list_info">
            <li>
             <span class="label">
              이용수
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z230',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE01991394');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              350
             </span>
            </li>
            <li>
             <span class="label">
              피인용수
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z231',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE01991394');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              0<li>[link]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][link]<li>[ahref]</li>
             </span>
            </li>
            <li>
             <a class="btn_link" href=";">
              DBpia 추천논문
              <span class="icon">
               >
              </span>
             </a>
            </li>
           </ul>
          </div>
          <div class="listWarp">
           <ul class="textLayerPrice">
            <li class="checkWarp">
            </li>
            <li class="iconWarp">
             <dl>
              <dd>
              </dd>
              <dd class="icon">
              </dd>
             </dl>
            </li>
            <li class="imageWarp">
            </li>
            <li class="contentsWarp">
             <dl>
              <dt>
               <div class="titleWarp">
                [ahref]
                
                <span class="rtext fsize9">
                 [KCI등재후보]<li>[ahref]</li><li>[link]</li><li>[search]</li><li>[search]</li><li>[ahref]</li>[search][search][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]
                </span>
               </div>
              </dt>
              <dd class="content01Warp">
               송근배
              </dd>
              <dd class="content01Warp">
               [link]
               
               ,
               [link]
               
               [ahref]
               
               , 2008.3, 132-138
                            (7 pages)
              </dd>
              <dd class="contentsBtnWarp">
               <ul>
                <div>
                 <li class="btnUse">
                  [link]
                  
                 </li>
                </div>
                <li class="barNbsp">
                </li>
                <li class="btn04">
                 [ahref]
                 
                </li>
                <li class="barNbsp">
                </li>
                <li class="btn05" id="btn_NODE01938404_detl">
                 [ahref]
                 
                </li>
               </ul>
              </dd>
              <dd class="content01Warp red">
              </dd>
             </dl>
            </li>
           </ul>
           <div class="textContentsWarp" id="NODE01938404_abs" style="display:none;">
           </div>
           <div class="detlWrap" id="NODE01938404_detl" style="display:none;">
           </div>
           <ul class="result_list_info">
            <li>
             <span class="label">
              이용수
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z230',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE01938404');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              537<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][ahref][link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li>[link]<li>[search]</li>
             </span>
            </li>
            <li>
             <span class="label">
              피인용수
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z231',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE01938404');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              0
             </span>
            </li>
            <li>
             [link]
             
            </li>
           </ul>
          </div>
          <div class="listWarp">
           <ul class="textLayerPrice">
            <li class="checkWarp">
            </li>
            <li class="iconWarp">
             <dl>
              <dd>
              </dd>
              <dd class="icon">
              </dd>
             </dl>
            </li>
            <li class="imageWarp">
            </li>
            <li class="contentsWarp">
             <dl>
              <dt>
               <div class="titleWarp">
                [link]
                
                <span class="rtext fsize9">
                 [KCI등재후보]
                </span>
               </div>
              </dt>
              <dd class="content01Warp">
               임회정
              </dd>
              <dd class="content01Warp">
               [link]
               
               ,
               [ahref]
               
               [ahref]
               
               , 2014.8, 478-490
                            (13 pages)
              </dd>
              <dd class="contentsBtnWarp">
               <ul>
                <div>
                 <li class="btnUse">
                  [ahref]
                  
                 </li>
                </div>
                <li class="barNbsp">
                </li>
                <li class="btn04">
                 [link]
                 
                </li>
                <li class="barNbsp">
                </li>
                <li class="btn05" id="btn_NODE06141856_detl">
                 [link]
                 
                </li>
               </ul>
              </dd>
              <dd class="content01Warp red">
              </dd>
             </dl>
            </li>
           </ul>
           <div class="textContentsWarp" id="NODE06141856_abs" style="display:none;">
           </div>
           <div class="detlWrap" id="NODE06141856_detl" style="display:none;">
           </div>
           <ul class="result_list_info">
            <li>
             <span class="label">
              이용수<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<li>[ahref]</li>[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z230',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE06141856');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              253[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<li>[ahref]</li>[link]<li>[search]</li>[search]
             </span>
            </li>
            <li>
             <span class="label">
              피인용수
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z231',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE06141856');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              0<li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>
             </span>
            </li>
            <li>
             [ahref]
             
            </li>
           </ul>
          </div>
          <div class="listWarp">
           <ul class="textLayerPrice">
            <li class="checkWarp">
            </li>
            <li class="iconWarp">
             <dl>
              <dd>
              </dd>
              <dd class="icon">
              </dd>
             </dl>
            </li>
            <li class="imageWarp">
            </li>
            <li class="contentsWarp">
             <dl>
              <dt>
               <div class="titleWarp">
                [ahref]
                
                <span class="rtext fsize9">
                 [KCI등재후보]
                </span>
               </div>
              </dt>
              <dd class="content01Warp">
               [ahref]
               
               ,
               [link]
               
               ,
               [ahref]
               
               ,
               [link]
               
              </dd>
              <dd class="content01Warp">
               [link]
               
               ,
               [ahref]
               
               [link]
               
               , 2017.12, 828-840
                            (13 pages)
              </dd>
              <dd class="contentsBtnWarp">
               <ul>
                <div>
                 <li class="btnUse">
                  [ahref]
                  
                 </li>
                </div>
                <li class="barNbsp">
                </li>
                <li class="btn04">
                 [link]
                 
                </li>
                <li class="barNbsp">
                </li>
                <li class="btn05" id="btn_NODE07272558_detl">
                 [ahref]
                 
                </li>
               </ul>
              </dd>
              <dd class="content01Warp red">
              </dd>
             </dl>
            </li>
           </ul>
           <div class="textContentsWarp" id="NODE07272558_abs" style="display:none;">
           </div>
           <div class="detlWrap" id="NODE07272558_detl" style="display:none;">
           </div>
           <ul class="result_list_info">
            <li>
             <span class="label">
              이용수
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z230',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE07272558');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              176
             </span>
            </li>
            <li>
             <span class="label">
              피인용수
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z231',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE07272558');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              0
             </span>
            </li>
            <li>
             [link]
             
            </li>
           </ul>
          </div>
          <div class="listWarp">
           <ul class="textLayerPrice">
            <li class="checkWarp">
            </li>
            <li class="iconWarp">
             <dl>
              <dd>
              </dd>
              <dd class="icon">
              </dd>
             </dl>
            </li>
            <li class="imageWarp">
            </li>
            <li class="contentsWarp">
             <dl>
              <dt>
               <div class="titleWarp">
                [link]
                
                <span class="rtext fsize9">
                 [KCI등재후보]
                </span>
               </div>
              </dt>
              <dd class="content01Warp">
               임회정
              </dd>
              <dd class="content01Warp">
               [link]
               
               ,
               [link]
               
               [ahref]
               
               , 2014.9, 558-569
                            (12 pages)
              </dd>
              <dd class="contentsBtnWarp">
               <ul>
                <div>
                 <li class="btnUse">
                  [link]
                  
                 </li>
                </div>
                <li class="barNbsp">
                </li>
                <li class="btn04">
                 [link]
                 
                </li>
                <li class="barNbsp">
                </li>
                <li class="btn05" id="btn_NODE06141870_detl">
                 [ahref]
                 
                </li>
               </ul>
              </dd>
              <dd class="content01Warp red">
              </dd>
             </dl>
            </li>
           </ul>
           <div class="textContentsWarp" id="NODE06141870_abs" style="display:none;">
           </div>
           <div class="detlWrap" id="NODE06141870_detl" style="display:none;">
           </div>
           <ul class="result_list_info">
            <li>
             <span class="label">
              이용수<li>[link]</li>[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z230',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE06141870');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              304
             </span>
            </li>
            <li>
             <span class="label">
              피인용수
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z231',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE06141870');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              0
             </span>
            </li>
            <li>
             [ahref]
             
            </li>
           </ul>
          </div>
          <div class="listWarp">
           <ul class="textLayerPrice">
            <li class="checkWarp">
            </li>
            <li class="iconWarp">
             <dl>
              <dd>
              </dd>
              <dd class="icon">
              </dd>
             </dl>
            </li>
            <li class="imageWarp">
            </li>
            <li class="contentsWarp">
             <dl>
              <dt>
               <div class="titleWarp">
                [link]
                
                <span class="rtext fsize9">
                 [KCI등재후보]
                </span>
               </div>
              </dt>
              <dd class="content01Warp">
               [ahref]
               
              </dd>
              <dd class="content01Warp">
               [ahref]
               
               ,
               [ahref]
               
               [link]
               
               , 1995.5, 322-324
                            (3 pages)
              </dd>
              <dd class="contentsBtnWarp">
               <ul>
                <div>
                 <li class="btnUse">
                  [link]
                  
                 </li>
                </div>
                <li class="barNbsp">
                </li>
                <li class="btn04">
                 [link]
                 
                </li>
                <li class="barNbsp">
                </li>
                <li class="btn05" id="btn_NODE01933188_detl">
                 [link]
                 
                </li>
               </ul>
              </dd>
              <dd class="content01Warp red">
              </dd>
             </dl>
            </li>
           </ul>
           <div class="textContentsWarp" id="NODE01933188_abs" style="display:none;">
           </div>
           <div class="detlWrap" id="NODE01933188_detl" style="display:none;">
           </div>
           <ul class="result_list_info">
            <li>
             <span class="label">
              이용수
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z230',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE01933188');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              477
             </span>
            </li>
            <li>
             <span class="label">
              피인용수
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z231',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE01933188');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              0
             </span>
            </li>
            <li>
             [ahref]
             
            </li>
           </ul>
          </div>
          <div class="listWarp">
           <ul class="textLayerPrice">
            <li class="checkWarp">
            </li>
            <li class="iconWarp">
             <dl>
              <dd>
              </dd>
              <dd class="icon">
              </dd>
             </dl>
            </li>
            <li class="imageWarp">
            </li>
            <li class="contentsWarp">
             <dl>
              <dt>
               <div class="titleWarp">
                [ahref]
                
                <span class="rtext fsize9">
                 [KCI등재후보]
                </span>
               </div>
              </dt>
              <dd class="content01Warp">
               [link]
               
               ,
               [link]
               
               ,
               [ahref]
               
              </dd>
              <dd class="content01Warp">
               [link]
               
               ,
               [ahref]
               
               [ahref]
               
               , 2015.2, 111-119
                            (9 pages)
              </dd>
              <dd class="contentsBtnWarp">
               <ul>
                <div>
                 <li class="btnUse">
                  [link]
                  
                 </li>
                </div>
                <li class="barNbsp">
                </li>
                <li class="btn04">
                 [ahref]
                 
                </li>
                <li class="barNbsp">
                </li>
                <li class="btn05" id="btn_NODE06104646_detl">
                 [link]
                 
                </li>
               </ul>
              </dd>
              <dd class="content01Warp red">
              </dd>
             </dl>
            </li>
           </ul>
           <div class="textContentsWarp" id="NODE06104646_abs" style="display:none;">
           </div>
           <div class="detlWrap" id="NODE06104646_detl" style="display:none;">
           </div>
           <ul class="result_list_info">
            <li>
             <span class="label">
              이용수
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z230',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE06104646');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              442
             </span>
            </li>
            <li>
             <span class="label">
              피인용수
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z231',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE06104646');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              0
             </span>
            </li>
            <li>
             [ahref]
             
            </li>
           </ul>
          </div>
          <div class="listWarp">
           <ul class="textLayerPrice">
            <li class="checkWarp">
            </li>
            <li class="iconWarp">
             <dl>
              <dd>
              </dd>
              <dd class="icon">
              </dd>
             </dl>
            </li>
            <li class="imageWarp">
            </li>
            <li class="contentsWarp">
             <dl>
              <dt>
               <div class="titleWarp">
                [link]
                
                <span class="rtext fsize9">
                 [KCI등재후보][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[ahref][ahref]
                </span>
               </div>
              </dt>
              <dd class="content01Warp">
               [link]
               
              </dd>
              <dd class="content01Warp">
               [ahref]
               
               ,
               [link]
               
               [ahref]
               
               , 2017.9, 640-656
                            (17 pages)
              </dd>
              <dd class="contentsBtnWarp">
               <ul>
                <div>
                 <li class="btnUse">
                  [link]
                  
                 </li>
                </div>
                <li class="barNbsp">
                </li>
                <li class="btn04">
                 [link]
                 
                </li>
                <li class="barNbsp">
                </li>
                <li class="btn05" id="btn_NODE07230379_detl">
                 [ahref]
                 
                </li>
               </ul>
              </dd>
              <dd class="content01Warp red">
              </dd>
             </dl>
            </li>
           </ul>
           <div class="textContentsWarp" id="NODE07230379_abs" style="display:none;">
           </div>
           <div class="detlWrap" id="NODE07230379_detl" style="display:none;">
           </div>
           <ul class="result_list_info">
            <li>
             <span class="label">
              이용수
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z230',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE07230379');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              154
             </span>
            </li>
            <li>
             <span class="label">
              피인용수
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z231',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE07230379');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              0[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][ahref][ahref]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[link]</li>[ahref]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[search]</li><li>[search]</li>
             </span>
            </li>
            <li>
             [link]
             
            </li>
           </ul>
          </div>
          <div class="listWarp">
           <ul class="textLayerPrice">
            <li class="checkWarp">
            </li>
            <li class="iconWarp">
             <dl>
              <dd>
              </dd>
              <dd class="icon">
              </dd>
             </dl>
            </li>
            <li class="imageWarp">
            </li>
            <li class="contentsWarp">
             <dl>
              <dt>
               <div class="titleWarp">
                [link]
                
                <span class="rtext fsize9">
                 [KCI등재후보]<li>[link]</li><li>[ahref]</li><li>[ahref]</li>[link]<li>[search]</li><li>[ahref]</li><li>[ahref]</li>
                </span>
               </div>
              </dt>
              <dd class="content01Warp">
               [link]
               
              </dd>
              <dd class="content01Warp">
               [ahref]
               
               ,
               [link]
               
               [ahref]
               
               , 2012.9, 544-551
                            (8 pages)
              </dd>
              <dd class="contentsBtnWarp">
               <ul>
                <div>
                 <li class="btnUse">
                  [link]
                  
                 </li>
                </div>
                <li class="barNbsp">
                </li>
                <li class="btn04">
                 [ahref]
                 
                </li>
                <li class="barNbsp">
                </li>
                <li class="btn05" id="btn_NODE01962203_detl">
                 [ahref]
                 
                </li>
               </ul>
              </dd>
              <dd class="content01Warp red">
              </dd>
             </dl>
            </li>
           </ul>
           <div class="textContentsWarp" id="NODE01962203_abs" style="display:none;">
           </div>
           <div class="detlWrap" id="NODE01962203_detl" style="display:none;">
           </div>
           <ul class="result_list_info">
            <li>
             <span class="label">
              이용수<li>[ahref]</li>[search][search][link]<li>[search]</li><li>[search]</li>[link][search]<li>[search]</li>
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z230',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE01962203');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              339
             </span>
            </li>
            <li>
             <span class="label">
              피인용수[link][search]<li>[ahref]</li>[link]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]<li>[search]</li><li>[search]</li><li>[link]</li>[link]<li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]<li>[link]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z231',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE01962203');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              0
             </span>
            </li>
            <li>
             [ahref]
             
            </li>
           </ul>
          </div>
          <div class="listWarp">
           <ul class="textLayerPrice">
            <li class="checkWarp">
            </li>
            <li class="iconWarp">
             <dl>
              <dd>
              </dd>
              <dd class="icon">
              </dd>
             </dl>
            </li>
            <li class="imageWarp">
            </li>
            <li class="contentsWarp">
             <dl>
              <dt>
               <div class="titleWarp">
                [link]
                
                <span class="rtext fsize9">
                 [KCI등재후보]
                </span>
               </div>
              </dt>
              <dd class="content01Warp">
               [ahref]
               
              </dd>
              <dd class="content01Warp">
               [link]
               
               ,
               [ahref]
               
               [link]
               
               , 2002.12, 969-970
                            (3 pages)
              </dd>
              <dd class="contentsBtnWarp">
               <ul>
                <div>
                 <li class="btnUse">
                  [ahref]
                  
                 </li>
                </div>
                <li class="barNbsp">
                </li>
                <li class="btn04">
                 [ahref]
                 
                </li>
                <li class="barNbsp">
                </li>
                <li class="btn05" id="btn_NODE01930567_detl">
                 [ahref]
                 
                </li>
               </ul>
              </dd>
              <dd class="content01Warp red">
              </dd>
             </dl>
            </li>
           </ul>
           <div class="textContentsWarp" id="NODE01930567_abs" style="display:none;">
           </div>
           <div class="detlWrap" id="NODE01930567_detl" style="display:none;">
           </div>
           <ul class="result_list_info">
            <li>
             <span class="label">
              이용수<li>[search]</li><li>[search]</li>[search][ahref]<li>[ahref]</li>[link]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][search]
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z230',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE01930567');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              272
             </span>
            </li>
            <li>
             <span class="label">
              피인용수[link][ahref]<li>[link]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z231',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE01930567');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              0<li>[search]</li><li>[search]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>
             </span>
            </li>
            <li>
             [ahref]
             
            </li>
           </ul>
          </div>
          <div class="listWarp">
           <ul class="textLayerPrice">
            <li class="checkWarp">
            </li>
            <li class="iconWarp">
             <dl>
              <dd>
              </dd>
              <dd class="icon">
              </dd>
             </dl>
            </li>
            <li class="imageWarp">
            </li>
            <li class="contentsWarp">
             <dl>
              <dt>
               <div class="titleWarp">
                [link]
                
                <span class="rtext fsize9">
                 [KCI등재후보]
                </span>
               </div>
              </dt>
              <dd class="content01Warp">
               [link]
               
               ,
               [ahref]
               
              </dd>
              <dd class="content01Warp">
               [ahref]
               
               ,
               [ahref]
               
               [ahref]
               
               , 2015.10, 678-687
                            (10 pages)
              </dd>
              <dd class="contentsBtnWarp">
               <ul>
                <div>
                 <li class="btnUse">
                  [ahref]
                  
                 </li>
                </div>
                <li class="barNbsp">
                </li>
                <li class="btn04">
                 [ahref]
                 
                </li>
                <li class="barNbsp">
                </li>
                <li class="btn05" id="btn_NODE06523550_detl">
                 [link]
                 
                </li>
               </ul>
              </dd>
              <dd class="content01Warp red">
              </dd>
             </dl>
            </li>
           </ul>
           <div class="textContentsWarp" id="NODE06523550_abs" style="display:none;">
           </div>
           <div class="detlWrap" id="NODE06523550_detl" style="display:none;">
           </div>
           <ul class="result_list_info">
            <li>
             <span class="label">
              이용수
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z230',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE06523550');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              224[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[search]</li><li>[ahref]</li>[ahref][ahref]<li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref][ahref]
             </span>
            </li>
            <li>
             <span class="label">
              피인용수
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z231',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE06523550');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              0
             </span>
            </li>
            <li>
             [ahref]
             
            </li>
           </ul>
          </div>
          <div class="listWarp">
           <ul class="textLayerPrice">
            <li class="checkWarp">
            </li>
            <li class="iconWarp">
             <dl>
              <dd>
              </dd>
              <dd class="icon">
              </dd>
             </dl>
            </li>
            <li class="imageWarp">
            </li>
            <li class="contentsWarp">
             <dl>
              <dt>
               <div class="titleWarp">
                [ahref]
                
                <span class="rtext fsize9">
                 [KCI등재후보][search][search][link]<li>[link]</li>[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link][link]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
                </span>
               </div>
              </dt>
              <dd class="content01Warp">
               [ahref]
               
              </dd>
              <dd class="content01Warp">
               [link]
               
               ,
               [link]
               
               [ahref]
               
               , 2011.5, 260-264
                            (5 pages)
              </dd>
              <dd class="contentsBtnWarp">
               <ul>
                <div>
                 <li class="btnUse">
                  [link]
                  
                 </li>
                </div>
                <li class="barNbsp">
                </li>
                <li class="btn04">
                 [link]
                 
                </li>
                <li class="barNbsp">
                </li>
                <li class="btn05" id="btn_NODE01908506_detl">
                 [link]
                 
                </li>
               </ul>
              </dd>
              <dd class="content01Warp red">
              </dd>
             </dl>
            </li>
           </ul>
           <div class="textContentsWarp" id="NODE01908506_abs" style="display:none;">
           </div>
           <div class="detlWrap" id="NODE01908506_detl" style="display:none;">
           </div>
           <ul class="result_list_info">
            <li>
             <span class="label">
              이용수
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z230',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE01908506');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              376
             </span>
            </li>
            <li>
             <span class="label">
              피인용수<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[search]<li>[link]</li>[ahref]<li>[search]</li><li>[search]</li>
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z231',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE01908506');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              0
             </span>
            </li>
            <li>
             [link]
             
            </li>
           </ul>
          </div>
          <div class="listWarp">
           <ul class="textLayerPrice">
            <li class="checkWarp">
            </li>
            <li class="iconWarp">
             <dl>
              <dd>
              </dd>
              <dd class="icon">
              </dd>
             </dl>
            </li>
            <li class="imageWarp">
            </li>
            <li class="contentsWarp">
             <dl>
              <dt>
               <div class="titleWarp">
                [ahref]
                
                <span class="rtext fsize9">
                 [KCI등재후보]<li>[ahref]</li>[ahref]<li>[link]</li>[ahref][link][link]<li>[ahref]</li><li>[ahref]</li>[ahref]
                </span>
               </div>
              </dt>
              <dd class="content01Warp">
               [link]
               
               ,
               [ahref]
               
               ,
               [ahref]
               
               ,
               [ahref]
               
               ,
               [link]
               
               ,
               [link]
               
               ,
               [ahref]
               
              </dd>
              <dd class="content01Warp">
               [link]
               
               ,
               [ahref]
               
               [link]
               
               , 2016.8, 604-612
                            (9 pages)
              </dd>
              <dd class="contentsBtnWarp">
               <ul>
                <div>
                 <li class="btnUse">
                  [link]
                  
                 </li>
                </div>
                <li class="barNbsp">
                </li>
                <li class="btn04">
                 [link]
                 
                </li>
                <li class="barNbsp">
                </li>
                <li class="btn05" id="btn_NODE06740095_detl">
                 [link]
                 
                </li>
               </ul>
              </dd>
              <dd class="content01Warp red">
              </dd>
             </dl>
            </li>
           </ul>
           <div class="textContentsWarp" id="NODE06740095_abs" style="display:none;">
           </div>
           <div class="detlWrap" id="NODE06740095_detl" style="display:none;">
           </div>
           <ul class="result_list_info">
            <li>
             <span class="label">
              이용수
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z230',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE06740095');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              159<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link][ahref][link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
             </span>
            </li>
            <li>
             <span class="label">
              피인용수<li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[ahref]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[search]</li>[ahref][ahref]<li>[search]</li>
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z231',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE06740095');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              0<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[search]</li>[search]<li>[link]</li>
             </span>
            </li>
            <li>
             [link]
             
            </li>
           </ul>
          </div>
          <div class="listWarp">
           <ul class="textLayerPrice">
            <li class="checkWarp">
            </li>
            <li class="iconWarp">
             <dl>
              <dd>
              </dd>
              <dd class="icon">
              </dd>
             </dl>
            </li>
            <li class="imageWarp">
            </li>
            <li class="contentsWarp">
             <dl>
              <dt>
               <div class="titleWarp">
                [link]
                
                <span class="rtext fsize9">
                 [KCI등재후보]
                </span>
               </div>
              </dt>
              <dd class="content01Warp">
               [link]
               
              </dd>
              <dd class="content01Warp">
               [link]
               
               ,
               [ahref]
               
               [ahref]
               
               , 1995.3, 188-190
                            (3 pages)
              </dd>
              <dd class="contentsBtnWarp">
               <ul>
                <div>
                 <li class="btnUse">
                  [ahref]
                  
                 </li>
                </div>
                <li class="barNbsp">
                </li>
                <li class="btn04">
                 [ahref]
                 
                </li>
                <li class="barNbsp">
                </li>
                <li class="btn05" id="btn_NODE01990364_detl">
                 [link]
                 
                </li>
               </ul>
              </dd>
              <dd class="content01Warp red">
              </dd>
             </dl>
            </li>
           </ul>
           <div class="textContentsWarp" id="NODE01990364_abs" style="display:none;">
           </div>
           <div class="detlWrap" id="NODE01990364_detl" style="display:none;">
           </div>
           <ul class="result_list_info">
            <li>
             <span class="label">
              이용수
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z230',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE01990364');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              225
             </span>
            </li>
            <li>
             <span class="label">
              피인용수
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z231',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE01990364');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              0
             </span>
            </li>
            <li>
             [link]
             
            </li>
           </ul>
          </div>
          <div class="listWarp">
           <ul class="textLayerPrice">
            <li class="checkWarp">
            </li>
            <li class="iconWarp">
             <dl>
              <dd>
              </dd>
              <dd class="icon">
              </dd>
             </dl>
            </li>
            <li class="imageWarp">
            </li>
            <li class="contentsWarp">
             <dl>
              <dt>
               <div class="titleWarp">
                [link]
                
                <span class="rtext fsize9">
                 [KCI등재후보]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[link]<li>[ahref]</li><li>[link]</li><li>[search]</li>
                </span>
               </div>
              </dt>
              <dd class="content01Warp">
               [ahref]
               
               ,
               [link]
               
              </dd>
              <dd class="content01Warp">
               [link]
               
               ,
               <a href="/Journal/IssueList/PLCT00002094" onclick="fn_statistics('Z206',fnGetB2BId(),fnGetB2CId())">
                대한치과의사협회지
               </a>
               [link]
               
               , 2013.3, 130-137
                            (8 pages)
              </dd>
              <dd class="contentsBtnWarp">
               <ul>
                <div>
                 <li class="btnUse">
                  [link]
                  
                 </li>
                </div>
                <li class="barNbsp">
                </li>
                <li class="btn04">
                 [ahref]
                 
                </li>
                <li class="barNbsp">
                </li>
                <li class="btn05" id="btn_NODE02142488_detl">
                 [ahref]
                 
                </li>
               </ul>
              </dd>
              <dd class="content01Warp red">
              </dd>
             </dl>
            </li>
           </ul>
           <div class="textContentsWarp" id="NODE02142488_abs" style="display:none;">
           </div>
           <div class="detlWrap" id="NODE02142488_detl" style="display:none;">
           </div>
           <ul class="result_list_info">
            <li>
             <span class="label">
              이용수
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z230',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE02142488');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              373
             </span>
            </li>
            <li>
             <span class="label">
              피인용수[search][link]<li>[ahref]</li>[ahref][ahref]<li>[search]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[ahref]<li>[ahref]</li><li>[ahref]</li><li>[link]</li>[search]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z231',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE02142488');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              0
             </span>
            </li>
            <li>
             [link]
             
            </li>
           </ul>
          </div>
          <div class="listWarp">
           <ul class="textLayerPrice">
            <li class="checkWarp">
            </li>
            <li class="iconWarp">
             <dl>
              <dd>
              </dd>
              <dd class="icon">
              </dd>
             </dl>
            </li>
            <li class="imageWarp">
            </li>
            <li class="contentsWarp">
             <dl>
              <dt>
               <div class="titleWarp">
                [link]
                
                <span class="rtext fsize9">
                 [KCI등재후보]
                </span>
               </div>
              </dt>
              <dd class="content01Warp">
               [link]
               
               ,
               [link]
               
              </dd>
              <dd class="content01Warp">
               [ahref]
               
               ,
               [ahref]
               
               [ahref]
               
               , 2016.11, 850-864
                            (15 pages)
              </dd>
              <dd class="contentsBtnWarp">
               <ul>
                <div>
                 <li class="btnUse">
                  [ahref]
                  
                 </li>
                </div>
                <li class="barNbsp">
                </li>
                <li class="btn04">
                 [link]
                 
                </li>
                <li class="barNbsp">
                </li>
                <li class="btn05" id="btn_NODE07059059_detl">
                 [link]
                 
                </li>
               </ul>
              </dd>
              <dd class="content01Warp red">
              </dd>
             </dl>
            </li>
           </ul>
           <div class="textContentsWarp" id="NODE07059059_abs" style="display:none;">
           </div>
           <div class="detlWrap" id="NODE07059059_detl" style="display:none;">
           </div>
           <ul class="result_list_info">
            <li>
             <span class="label">
              이용수<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[link]<li>[search]</li><li>[ahref]</li><li>[link]</li>
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z230',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE07059059');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              119<li>[search]</li><li>[search]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[search]</li>
             </span>
            </li>
            <li>
             <span class="label">
              피인용수
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z231',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE07059059');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              0<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]<li>[search]</li>
             </span>
            </li>
            <li>
             [ahref]
             
            </li>
           </ul>
          </div>
          <div class="listWarp">
           <ul class="textLayerPrice">
            <li class="checkWarp">
            </li>
            <li class="iconWarp">
             <dl>
              <dd>
              </dd>
              <dd class="icon">
              </dd>
             </dl>
            </li>
            <li class="imageWarp">
            </li>
            <li class="contentsWarp">
             <dl>
              <dt>
               <div class="titleWarp">
                [link]
                
                <span class="rtext fsize9">
                 [KCI등재후보]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link][link][link]
                </span>
               </div>
              </dt>
              <dd class="content01Warp">
               [link]
               
               ,
               [link]
               
               ,
               [link]
               
               ,
               [ahref]
               
              </dd>
              <dd class="content01Warp">
               [link]
               
               ,
               [ahref]
               
               [link]
               
               , 2015.4, 266-274
                            (9 pages)
              </dd>
              <dd class="contentsBtnWarp">
               <ul>
                <div>
                 <li class="btnUse">
                  [link]
                  
                 </li>
                </div>
                <li class="barNbsp">
                </li>
                <li class="btn04">
                 [ahref]
                 
                </li>
                <li class="barNbsp">
                </li>
                <li class="btn05" id="btn_NODE06270600_detl">
                 [link]
                 
                </li>
               </ul>
              </dd>
              <dd class="content01Warp red">
              </dd>
             </dl>
            </li>
           </ul>
           <div class="textContentsWarp" id="NODE06270600_abs" style="display:none;">
           </div>
           <div class="detlWrap" id="NODE06270600_detl" style="display:none;">
           </div>
           <ul class="result_list_info">
            <li>
             <span class="label">
              이용수
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z230',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE06270600');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              238<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[link]<li>[ahref]</li>
             </span>
            </li>
            <li>
             <span class="label">
              피인용수<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]<li>[link]</li><li>[search]</li>[link][search]<li>[ahref]</li>[link]<li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z231',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE06270600');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              0
             </span>
            </li>
            <li>
             [link]
             
            </li>
           </ul>
          </div>
          <div class="listWarp">
           <ul class="textLayerPrice">
            <li class="checkWarp">
            </li>
            <li class="iconWarp">
             <dl>
              <dd>
              </dd>
              <dd class="icon">
              </dd>
             </dl>
            </li>
            <li class="imageWarp">
            </li>
            <li class="contentsWarp">
             <dl>
              <dt>
               <div class="titleWarp">
                [ahref]
                
                <span class="rtext fsize9">
                 [KCI등재후보]
                </span>
               </div>
              </dt>
              <dd class="content01Warp">
               [ahref]
               
              </dd>
              <dd class="content01Warp">
               [link]
               
               ,
               [ahref]
               
               [link]
               
               , 2000.11, 1032-1041
                            (10 pages)
              </dd>
              <dd class="contentsBtnWarp">
               <ul>
                <div>
                 <li class="btnUse">
                  [ahref]
                  
                 </li>
                </div>
                <li class="barNbsp">
                </li>
                <li class="btn04">
                 [ahref]
                 
                </li>
                <li class="barNbsp">
                </li>
                <li class="btn05" id="btn_NODE01931450_detl">
                 [link]
                 
                </li>
               </ul>
              </dd>
              <dd class="content01Warp red">
              </dd>
             </dl>
            </li>
           </ul>
           <div class="textContentsWarp" id="NODE01931450_abs" style="display:none;">
           </div>
           <div class="detlWrap" id="NODE01931450_detl" style="display:none;">
           </div>
           <ul class="result_list_info">
            <li>
             <span class="label">
              이용수
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z230',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE01931450');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              319
             </span>
            </li>
            <li>
             <span class="label">
              피인용수<li>[search]</li>[search]<li>[search]</li><li>[search]</li>[ahref]<li>[search]</li>[ahref]
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z231',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE01931450');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              0
             </span>
            </li>
            <li>
             [ahref]
             
            </li>
           </ul>
          </div>
          <div class="listWarp">
           <ul class="textLayerPrice">
            <li class="checkWarp">
            </li>
            <li class="iconWarp">
             <dl>
              <dd>
              </dd>
              <dd class="icon">
              </dd>
             </dl>
            </li>
            <li class="imageWarp">
            </li>
            <li class="contentsWarp">
             <dl>
              <dt>
               <div class="titleWarp">
                [link]
                
                <span class="rtext fsize9">
                 [KCI등재후보]
                </span>
               </div>
              </dt>
              <dd class="content01Warp">
               [link]
               
              </dd>
              <dd class="content01Warp">
               [link]
               
               ,
               [ahref]
               
               [link]
               
               , 2017.2, 180-188
                            (9 pages)
              </dd>
              <dd class="contentsBtnWarp">
               <ul>
                <div>
                 <li class="btnUse">
                  [link]
                  
                 </li>
                </div>
                <li class="barNbsp">
                </li>
                <li class="btn04">
                 [ahref]
                 
                </li>
                <li class="barNbsp">
                </li>
                <li class="btn05" id="btn_NODE07118949_detl">
                 [link]
                 
                </li>
               </ul>
              </dd>
              <dd class="content01Warp red">
              </dd>
             </dl>
            </li>
           </ul>
           <div class="textContentsWarp" id="NODE07118949_abs" style="display:none;">
           </div>
           <div class="detlWrap" id="NODE07118949_detl" style="display:none;">
           </div>
           <ul class="result_list_info">
            <li>
             <span class="label">
              이용수
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z230',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE07118949');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              109
             </span>
            </li>
            <li>
             <span class="label">
              피인용수
             </span>
             <span class="value" onclick="javascript:fn_statistics('Z231',fnGetB2BId(), fnGetB2CId());insightPop('article','metrics','nodeId=NODE07118949');" style="cursor: pointer; color: #407fc0;" title="새 창 열기">
              0
             </span>
            </li>
            <li>
             [ahref]
             
            </li>
           </ul>
          </div>
         </div>
        </div>
        <div class="subSearchResultWarp" id="pagedNontList" style="display:none;">
         <div class="subSearchResultList">
         </div>
        </div>
       </form>
      </div>
     </div>
    </div>
    <iframe height="0" id="uSSO" name="uSSO" src="http://www.krpia.co.kr/account/nsso?key=034FFFC4405F48CC83AF9F670440B71CB94F02A7DE7A4624BDDA641EB48A7EA88D9348C8D6FE475A8AC504EDC57E4A16BD1AE1C87C854893B2467D334F5125CD" style="display:none;" title="" width="0">
    </iframe>
    <div class="" id="floating_menu_top">
     [ahref]
     
    </div>
   </div>
   <div class="bottom-copyright">
    <h2>
     <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
    </h2>
    <dl>
     <dt>
      <div class="bottom-navi">
       <a href="r" onclick="fn_statistics('014',fnGetB2BId(),fnGetB2CId())" target="_blank">
        회사소개
       </a>
       [link]
       
       [ahref]
       
       [link]
       
       [ahref]
       
       [link]
       
       [link]
       
       [link]
       
      </div>
      <p>
       ㈜누리미디어 대표이사: 최순일  사업자등록번호: 816-81-00840  통신판매업신고번호: 제2017-서울영등포-0801호
      </p>
      <p>
       대표전화: 02-707-0496  팩스: 02-717-4305  전자우편: dbpia@nurimedia.co.kr
      </p>
      <p>
       주소: (07281) 서울특별시 영등포구 선유로 63, 4층 (문래동 6가)
      </p>
      <p>
       Copyright(C)1997-2018 NURIMEDIA. ALL RIGHTS RESERVED.<li>[link]</li>[link][ahref]<li>[ahref]</li><li>[search]</li><li>[ahref]</li><li>[ahref]</li>[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][link][search]<li>[ahref]</li>[link]
      </p>
     </dt>
    </dl>
    <div class="bottom-db-warp">
     <form action="" method="post" name="certiFormView">
      [link]
      
      [ahref]
      
     </form>
    </div>
    <div class="bottom-family-warp">
     [link]
     
     [ahref]
     
    </div>
   </div>
   <div class="popup_preview_facet" style="display:none;">
    <span class="pos_arrow">
    </span>
    <div class="popup_wrap">
     <div class="popup_header">
      <p class="popup_title">
       <span id="PreviewTitle">
        [search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link]<li>[ahref]</li><li>[link]</li>
       </span>
       :
       <span id="PreviewText">
        <li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li><li>[link]</li>[search][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>
       </span>
      </p>
      <p class="popup_desc">
       [ahref]
       
      </p>
     </div>
     <div class="popup_content">
      <div id="preview_facet_layer">
       <ul class="popup_list">
       </ul>
      </div>
     </div>
    </div>
   </div>
  </div>
  <iframe allowtransparency="true" frameborder="0" height="0" id="uProcess" name="uProcess" src="about:blank" style="display:;" title="콘텐츠 새창 열림" width="0">
  </iframe>
  <div id="B2BLogo" style="display: none; left: 4px; position: absolute; top: 4px;">
  </div>
  <div id="MobileAlrim" style="background-color: #f1c208; border: solid 1px; display: none; height: 30px; left: 0; position: absolute; top: 168px; width: 100%; z-index: 1000;">
   <ul style="cursor: pointer; padding-top: 8px; width: 100%;">
    <li onclick="javascript:location.href = 'http://m.dbpia.co.kr';" style="display: inline-block; float: left; text-align: center; width: 80%;">
     많이 인용된 논문
    </li>
    <li onclick="javascript:$('#MobileAlrim').hide();" style="display: inline-block; float: left; text-align: center; width: 20%;">
     이전권호
    </li>
   </ul>
  </div>
  <div id="layerPopup" name="layerPopup" style="display: none; left: 0; position: absolute; top: 0; z-index: 2000;">
   <table border="0" cellpadding="0" cellspacing="0" style="line-height: 0px;">
    <tr>
     <td height="4" width="4">
     </td>
     <td alt="" background="/images/kr/layer/layerPopup_02.gif" height="4">
     </td>
     <td width="4">
     </td>
    </tr>
    <tr>
     <td alt="" background="/images/kr/layer/layerPopup_04.gif">
     </td>
     <td>
      <table border="0" cellpadding="0" cellspacing="0" width="100%">
       <tr>
        <td align="center" bgcolor="#dde5e7" class="hd" height="20">
         <span class="HD">
          [search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<li>[ahref]</li><li>[ahref]</li>[link]<li>[search]</li><li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link][link]<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]
         </span>
        </td>
       </tr>
       <tr>
        <td bgcolor="#FFFFFF">
         <div id="layerPopup_contents">
         </div>
        </td>
       </tr>
      </table>
     </td>
     <td background="/images/kr/layer/layerPopup_06.gif" width="4">
     </td>
    </tr>
    <tr>
     <td>
     </td>
     <td alt="" background="/images/kr/layer/layerPopup_08.gif" colspan="2">
      <table border="0" cellpadding="0" cellspacing="0" width="100%">
       <tr>
        <td>
        </td>
        <td alt="" background="/images/kr/layer/layerPopup_09.gif" height="24" width="144">
         <table align="right" border="0" cellpadding="0" cellspacing="0" width="134">
          <tr>
           <td>
           </td>
          </tr>
         </table>
        </td>
       </tr>
      </table>
     </td>
    </tr>
   </table>
   <div id="layerPopup_maps">
   </div>
  </div>
  <div id="layerPopupTemp" name="layerPopupTemp" style="display:none;left:0;position:absolute;top:0;z-index:2000;">
   <table border="0" cellpadding="0" cellspacing="0" width="700">
    <tr>
     <td>
     </td>
    </tr>
    <tr>
     <td>
     </td>
    </tr>
    <tr>
     <td>
      <map id="Map2" name="Map2">
       <area coords="613,2,661,21" href="#" onclick="closeLayer();" shape="rect"/>
      </map>
     </td>
    </tr>
   </table>
  </div>
  <div id="layerPopupNotice" name="layerPopup" style="display: none; left: 0; position: absolute; top: 0; z-index: 2000;">
   <table border="0" cellpadding="0" cellspacing="0" style="line-height: 0px;">
    <tr>
     <td height="4" width="4">
     </td>
     <td alt="" background="/images/kr/layer/layerPopup_02.gif" height="4">
     </td>
     <td width="4">
     </td>
    </tr>
    <tr>
     <td alt="" background="/images/kr/layer/layerPopup_04.gif">
     </td>
     <td>
      <table border="0" cellpadding="0" cellspacing="0" width="100%">
       <tr>
        <td align="center" bgcolor="#dde5e7" class="hd" height="20">
         <span class="HD">
          <font color="#888888">
           똑똑한 학술논문 지식베이스 DBpia!
          </font>
         </span>
        </td>
       </tr>
       <tr>
        <td bgcolor="#FFFFFF">
         <div id="layerPopup_contents_notice">
         </div>
        </td>
       </tr>
      </table>
     </td>
     <td background="/images/kr/layer/layerPopup_06.gif" width="4">
     </td>
    </tr>
    <tr>
     <td>
     </td>
     <td alt="" background="/images/kr/layer/layerPopup_08.gif" colspan="2">
      <table border="0" cellpadding="0" cellspacing="0" width="100%">
       <tr>
        <td>
        </td>
        <td alt="" background="/images/kr/layer/layerPopup_09.gif" height="24" width="144">
         <table align="right" border="0" cellpadding="0" cellspacing="0" width="134">
          <tr>
           <td>
           </td>
          </tr>
         </table>
        </td>
       </tr>
      </table>
     </td>
    </tr>
   </table>
   <div id="layerPopup_maps_notice">
   </div>
  </div>
  <div id="searchHistoryLayer">
   <div class="boxs">
    <ul class="txt">
     <li>
      검색식의 이름을 입력해 주세요.
     </li>
     <li>
      <span class="red">
       검색식 이름
      </span>
      :
     </li>
     <li>
      <div>
       현재 검색하신 검색식을 저장하실 수 있습니다.
       <br/>
       검색식은 별도의 이름을 붙여서 저장하실 수 있으며,
       <br>
        <li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li>
       </br>
       최대 50개까지 저장하실 수 있습니다.
      </div>
     </li>
     <li>
      저장하신 검색식은
      [ahref]
      
      의 내 검색식 관리를 통해 조회하실 수 있습니다.
     </li>
    </ul>
    <ul class="btns">
     <li>
      <span>
      </span>
      <span>
       <li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li>[ahref][link]<li>[link]</li>[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
      </span>
     </li>
    </ul>
   </div>
  </div>
  <div id="loginLayer">
   <form id="LoginForm" method="post" name="LoginForm">
    <div class="boxs">
     <div class="loginsub_popup" id="loginsub_sns">
      [ahref]
      
      <div class="popup_area inputbox">
       <div class="popup_content">
        <div class="popup_header" id="headerDiv1">
         <p>
          로그인하시고 소속기관의 구독 논문을 어디서든 무료로 이용하세요!
         </p>
        </div>
        <div class="popup_header" id="headerDiv2" style="display: none;">
         <p>
          로그인 해주세요.
         </p>
        </div>
        <div class="popup_text">
         <p>
          맞춤추천, 나만의 인용양식·파일명 설정,
          <br>
           <p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[search]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[link]
          </br>
          관심있는 신규 논문 알림 등 다양하고
          <br/>
          편리한 DBpia 회원 서비스를 만나보세요.
         </p>
        </div>
        <div class="social_login">
         [ahref]
         
         [link]
         
         [ahref]
         
        </div>
        <div class="dbpia_login">
         <p class="login_title">
          DBpia 아이디로 로그인<li>[link]</li>[search][search]<li>[ahref]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[ahref]</li>
         </p>
         <div class="check_area">
          <label class="check_box">
           아이디 저장
          </label>
         </div>
        </div>
        <div>
         <p class="loginLayer_desc" id="loginLayer_desc2">
          <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link][search][link][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
         </p>
        </div>
        <div class="btn_box">
         [link]
         
        </div>
       </div>
       <div class="popup_bottom">
        <div class="link_box">
         <p>
          [ahref][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[ahref]</li><li>[ahref]</li><li>[ahref]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>
         </p>
        </div>
        <div class="link_box" id="anonymousArea" style="display: none;">
         <p>
          [ahref]<li>[link]</li>[search]<li>[ahref]</li><li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li>[ahref]
         </p>
        </div>
        <div class="link_box" id="anonymousLayer" style="display: none;">
         <p>
          [ahref]
          
         </p>
        </div>
       </div>
      </div>
     </div>
    </div>
   </form>
  </div>
  <div id="IcstLoginLayer">
   <form id="IcstLoginForm" method="post" name="LoginForm">
    <div class="boxs">
     <div class="loginsub_popup loginsub_search" id="loginsub">
      [link]
      
      <div class="popup_area">
       <div class="popup_content">
        <div class="popup_header">
         <p>
          혹시 재학/재직 중이신가요?
          <br>
           [ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]
          </br>
          소속기관의 DBpia 구독 여부를 확인하세요.
         </p>
        </div>
        <div class="popup_text">
         <p>
          [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][search]<li>[search]</li><li>[search]</li><li>[search]</li>[search]<li>[link]</li>[link][link]<li>[ahref]</li><li>[ahref]</li>[link]<li>[ahref]</li><li>[ahref]</li><li>[link]</li>[link][link]<li>[ahref]</li>
         </p>
        </div>
        <div class="dbpia_login">
         <p class="login_title">
          소속기관 조회
         </p>
         <div class="input_box">
          <div id="AutoComplete">
          </div>
          <div>
           <p class="loginLayer_desc valid_msg" id="loginLayer_desc">
            소속되신 기관명을 입력하신 후 자동완성 목록에서 선택하세요.
            <br/>
            Tip. 소속기관이 없으시면 DBpia를 구독 중인 주변 공공도서관을 찾아보세요.
           </p>
          </div>
         </div>
         <div class="comp_box">
          <p class="login_title">
           기관 계정 입력[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[search]</li><li>[link]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][link][search][link]<li>[ahref]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[ahref]</li>[link][ahref][search]<li>[ahref]</li>[link][search][search][ahref][link]
          </p>
          <div>
           <p class="icstLoginLayer_desc">
            <li>[link]</li>[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li><li>[link]</li><li>[ahref]</li>[ahref][search]<li>[link]</li><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li><li>[ahref]</li>[link]
           </p>
          </div>
          <div class="btn_box">
           [ahref]
           
          </div>
         </div>
        </div>
       </div>
       <div class="popup_bottom">
        <div class="link_box">
         <p>
          <li>[link]</li><li>[ahref]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][link][ahref]<li>[link]</li><li>[link]</li>
         </p>
        </div>
       </div>
      </div>
     </div>
    </div>
   </form>
  </div>
  <div class="loginsub_popup" id="loginsub_auth">
   [ahref]
   
   <div class="popup_area">
    <div class="popup_content">
     <div class="popup_header">
      <p>
       님의  소속이 인증되었습니다.<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
      </p>
     </div>
     <div class="popup_text">
      <p>
       님은 앞으로 90일간 DBpia 로그인만으로  구독 자료를 어디서든 무료로 이용하실 수 있습니다.[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][ahref]<li>[search]</li><li>[ahref]</li><li>[search]</li>[search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
      </p>
      <p>
       90일이 지난 후에는 기관 인증된 상태에서 다시 로그인해 주시기 바랍니다.
      </p>
     </div>
     <div class="btn_box">
      [link]
      
     </div>
    </div>
   </div>
  </div>
  <div id="productLayer">
   <div class="boxs">
    <ul class="product" style="display: none;">
     <li>
      <div class="title" id="productLayer_title">
      </div>
     </li>
     <li>
      <div class="publisher" id="productLayer_publisher">
      </div>
      <div class="price">
       개인회원 판매가격:
       <span id="productLayer_price" style="color: #c6130d;">
        [ahref]<li>[ahref]</li>[link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>
       </span>
      </div>
      <div class="buttons">
      </div>
     </li>
    </ul>
    <ul class="krpia" style="display: none;">
     <li>
      [ahref]
      
     </li>
     <li style="height: 30px;">
      <div class="buttons">
      </div>
     </li>
    </ul>
   </div>
  </div>
  <div id="rcmLayer">
   <div class="boxs">
    <ul class="chapter" style="display: none;">
     <li>
     </li>
    </ul>
   </div>
  </div>
  <div id="multiLayer">
   <div class="boxs">
    <ul class="krpia" style="display: none;">
     <li>
      [ahref]
      
     </li>
    </ul>
   </div>
  </div>
  <div id="downloadLayer">
   <div class="boxs">
    <ul class="lgubun">
     <li>
      ‘모두저장’을 이용하시기 위해서는 프로그램 설치가 필요합니다.
      <br>
       [ahref][ahref]<li>[link]</li>[ahref][ahref]
      </br>
      설치 완료 후 선택하신 논문 다운로드가 진행됩니다.
     </li>
     <div class="box_in">
      <ul>
       <li>
        [link]
        
       </li>
      </ul>
     </div>
     <li>
      <font color="#D81015">
       <b>
        !!
       </b>
      </font>
      학술논문만 '모두 저장' 됩니다. 외부 연계자료 및 논문이 아닌 자료는 저장되지 않습니다.
     </li>
    </ul>
   </div>
   <div id="innomp_check_obj">
   </div>
  </div>
  <div class="_sknowledgeLayer" id="sknowledgeLayer">
  </div>
  <div id="QuickView" style="display: none;">
   <div class="boxs">
    <div id="pdfdownload">
    </div>
    <div class="show-pdf">
     <h4>
     </h4>
     <div class="scroller">
     </div>
    </div>
    <div id="template" style="display: none;">
     <div class="page-warp">
      <p class="page-number" id="pdfpage-{0}">
       Page {0}
      </p>
      <div class="pdf-page" id="pdfimage-{0}">
       <p id="indicator-{0}">
        {0} 페이지를 불러오고 있습니다.
       </p>
      </div>
     </div>
    </div>
   </div>
  </div>
  <div id="layer_mask">
  </div>
  <div class="paper_recommand" id="recommand_layer">
   <div id="inner_recommand_layer">
   </div>
   <div class="footer_wrap">
    [ahref]
    
    [link]
    
   </div>
  </div>
  <div class="popup_quote_setup popup_window" id="popup_download_setup" style="width: 550px;">
   <div class="popup_header">
    <p class="popup_title">
     다운로드 파일명 설정
    </p>
    [ahref]
    
   </div>
   <div id="inner_popup_download_setup">
   </div>
  </div>
  <div class="popup_quote quote2 popup_window" id="popup_quote">
   <div class="popup_header">
    <p class="popup_title logo-left-pad0">
     <li>[search]</li><li>[ahref]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[ahref]</li>
    </p>
    [link]
    
   </div>
   <div class="popup_content" id="inner_popup_quote">
   </div>
  </div>
  <div class="popup_quote_setup popup_window" id="popup_quote_setup">
   <div class="popup_header">
    <p class="popup_title">
     인용하기 양식 설정
    </p>
    [link]
    
   </div>
   <div class="popup_content" id="inner_popup_quote_setup">
   </div>
  </div>
  <div class="popup_search_use type_01 popup_window">
   <div class="popup_header">
    <p class="popup_title title">
     잠깐, 재학 혹은 재직중이신가요?[search][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[link][search][search][search]<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[ahref][search][ahref][ahref]
    </p>
    [ahref]
    
   </div>
   <div class="popup_content">
    <div class="use_wrap">
     <p>
      <li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[search]</li>[search]<li>[link]</li>
     </p>
     <p>
      소속기관에서 이 논문이 수록된 간행물을 구독하길 희망하시면 ‘자료 구독 신청’을 해주세요.
     </p>
     <div class="btn_wrap">
      [link]
      
     </div>
     <div class="popup_line">
     </div>
     <p>
      [ahref]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li><li>[search]</li><li>[ahref]</li>[link][search]<li>[link]</li>[ahref]
     </p>
     <div class="btn_wrap">
      [ahref]
      
     </div>
    </div>
   </div>
  </div>
  <div class="popup_search_use type_02 popup_window">
   <div class="popup_header">
    <p class="popup_title title">
     잠깐, 재학 혹은 재직중이신가요?<li>[link]</li>[search][search][search][search]<li>[link]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>
    </p>
    [link]
    
   </div>
   <div class="popup_content">
    <div class="use_wrap">
     <p>
      DBpia와 구독계약을 맺은 학교, 기관, 기업의 구성원이라면 계약된 범위 내에서 논문을 무료로 이용하실 수 있습니다. 귀하가 재학/재직중인 곳의 이름을 입력하시고, 이용권한을 확인해보세요.[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][search]<li>[ahref]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][search]<li>[search]</li>[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]<li>[link]</li>[search]<li>[ahref]</li>[link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
     </p>
     <div class="search_comp">
      <fieldset>
       <legend>
        검색
       </legend>
       <div class="search_box">
        [ahref]
        
        <div id="AutoCompleteCompLogin">
        </div>
       </div>
       <p class="desc compLogin_desc" id="compLogin_desc">
        * 소속기관명을 입력하시면 이용권한을 확인하실 수 있습니다.[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[link]<li>[ahref]</li>[link]<li>[ahref]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][ahref][ahref][search][search]<li>[link]</li><li>[ahref]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[search][ahref]<li>[ahref]</li>[search]<li>[link]</li>
       </p>
      </fieldset>
     </div>
     <div class="popup_line">
     </div>
     <p>
      논문을 직접 구매하시면 지금 바로 이용하실 수 있습니다. 논문을 구매하시겠습니까?<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]<li>[ahref]</li>[link]<li>[search]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref][search]<li>[ahref]</li>[search][link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]<li>[ahref]</li>[link][search]
     </p>
     <p>
      <span class="prce">
      </span>
     </p>
     <div class="btn_wrap">
      [link]
      
     </div>
    </div>
   </div>
  </div>
  <div class="popup_search_use type_03 popup_window">
   <div class="popup_header">
    <p class="popup_title title">
     잠깐, 재학 혹은 재직중이신가요?<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[link]</li>[search]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search][search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search][link]<li>[link]</li><li>[ahref]</li>[ahref][ahref]
    </p>
    [ahref]
    
   </div>
   <div class="popup_content">
    <div class="use_wrap">
     <p>
      [link][ahref][search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search][link]<li>[search]</li><li>[ahref]</li><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[ahref]<li>[ahref]</li>[ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>
     </p>
     <p>
      도서관의 '원문복사 서비스'를 이용하시면, 도서관을 통해 원문을 이용하실 수 있습니다.<li>[ahref]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
     </p>
     <div class="btn_wrap">
      [link]
      
     </div>
     <div class="popup_line">
     </div>
     <p>
      <li>[ahref]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
     </p>
     <div class="btn_wrap">
      [ahref]
      
     </div>
    </div>
   </div>
  </div>
  <div class="popup_search_use type_04 popup_window" style="height: 180px;">
   <div class="popup_header">
    <p class="popup_title title">
     잠깐, 재학 혹은 재직중이신가요?[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][search]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[ahref]<li>[ahref]</li>[link][ahref]
    </p>
    [ahref]
    
   </div>
   <div class="popup_content">
    <div class="use_wrap">
     <p>
      [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[search]</li>
     </p>
     <p style="padding-top: 7px;">
      논문을 구매하시면 지금 바로 이용하실 수 있습니다.
      <span class="prce">
       [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[link]<li>[link]</li>[link][link][search][search]
      </span>
     </p>
     <div class="btn_wrap">
      [link]
      
     </div>
    </div>
   </div>
  </div>
  <div class="popup_layer" id="popup_company_check" style="display: none;">
   <div class="popup_window">
    <div class="popup_header">
     <p class="popup_title">
      잠깐, 재학 혹은 재직중이신가요?[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]<li>[link]</li>[search]
     </p>
     [link]
     
    </div>
    <div class="popup_content">
     <div class="popup_text">
      <p>
       DBpia와 구독계약을 맺은 학교, 기관, 기업의 구성원이라면 계약된 범위 내에서 논문을 무료로 이용하실 수 있습니다. 귀하가 재학/재직중인 곳의 이름을 입력하시고, 이용권한을 확인해보세요.
      </p>
      <p class="desc">
       * 소속기관명을 입력하시면 이용권한을 확인하실 수 있습니다.[link]<li>[link]</li>[search][ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]
      </p>
     </div>
     <div class="company_check_box">
      <div class="input_box">
       [ahref]
       
      </div>
      <div class="autocomplete_list" id="AutoAuthComplete">
       <ul aria-activedescendant="ui-active-menuitem" class="ui-autocomplete ui-menu ui-widget ui-widget-content ui-corner-all" role="listbox" style="z-index: 1001; top: 0px; left: 0px; display: none;">
       </ul>
      </div>
      <p class="desc">
      </p>
     </div>
     <div class="popup_btn">
      [link]
      
     </div>
    </div>
   </div>
  </div>
  <div class="popup_layer" id="popup_member_benefit" style="display: none;">
   <div class="popup_window">
    <div class="popup_header">
     <p class="popup_title">
      개인회원 혜택 안내
     </p>
     [link]
     
    </div>
    <div class="popup_content">
     <div class="popup_text">
      <p>
       '마이페이지’는 DBpia 개인회원이 이용할 수 있는 메뉴입니다.[link]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>[link]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[ahref][search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
      </p>
      <p>
       DBpia 개인회원으로 가입하면 다음의 혜택을 누리실 수 있습니다.[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
      </p>
      <br/>
      <p>
       - 논문 PDF 파일 다운로드 시, 원하는 파일명 직접 설정 기능 제공
      </p>
      <p>
       - 개인별 참고문헌 양식 설정 기능 제공<li>[link]</li>[link]<li>[search]</li>[ahref]<li>[ahref]</li>
      </p>
      <p>
       - 빅데이터 기반의 개인맞춤 논문추천 서비스 제공
      </p>
      <p>
       - 간행물, 검색결과 등의 알림서비스 제공<li>[ahref]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]<li>[search]</li>[link]<li>[search]</li><li>[ahref]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
      </p>
      <br/>
      <p>
       DBpia 개인회원은 무료로 가입, 서비스를 이용하실 수 있으며,
       <br>
        <li>[ahref]</li><li>[link]</li><li>[ahref]</li><li>[ahref]</li><li>[ahref]</li><li>[search]</li><li>[search]</li><li>[link]</li>[search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li><li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[link]
       </br>
       네이버/구글 계정으로 간편하게 가입 및 로그인하실 수 있습니다.
      </p>
     </div>
     <div class="popup_btn">
      [link]
      
     </div>
    </div>
   </div>
  </div>
  <div id="partialSubscribe">
  </div>
  <div id="floating_menu" style="filter:alpha(opacity=0);opacity:0">
   <ul class="menu_list">
    <li class="menu recent_wrap">
     <p class="title">
      최근 열람 자료
     </p>
     <ul class="recent_list">
      <li>
       [ahref]
       
      </li>
      <li>
       [ahref]
       
      </li>
     </ul>
    </li>
   </ul>
  </div>
  <div id="researchArea">
  </div>
  <div class="popup_layer" id="popup_cartitem_confirm" style="display: none;">
   <div class="popup_window">
    <div class="popup_header">
     <p class="popup_title">
      구매동의[ahref]<li>[ahref]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>[search]
     </p>
     [ahref]
     
    </div>
    <div class="popup_content">
     <div class="popup_text">
      <p>
       구매하시려는 자료 중 3페이지 이하의 자료가 포함되어 있습니다.<li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><li>[search]</li><li>[link]</li>[ahref]<li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><li>[link]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
      </p>
      <p>
       이러한 자료는 논문 전체가 아니라, 논문의 초록 혹은 요약본일 수 있습니다.
      </p>
      <p>
       해당 자료를 다시 한번 확인해 주세요.[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][link][ahref]<li>[search]</li><li>[search]</li>[ahref]<li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link][ahref][ahref][search]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li>[link]<li>[ahref]</li><li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]
      </p>
      <br/>
      <p class="contents_highlight">
       3 페이지 이하 자료를 구매하시겠습니까?
      </p>
     </div>
     <div class="popup_checkbox_group">
      <div class="popup_checkbox_notice">
       <span>
        '예' 체크 후 구매가 가능합니다.
       </span>
      </div>
      <div class="popup_checkbox">
       예
      </div>
     </div>
     <div class="popup_btn_group">
      <div class="popup_btn_cancel">
       [ahref]
       
      </div>
      <div class="popup_btn_confirm">
       [ahref]
       
      </div>
     </div>
    </div>
   </div>
  </div>
  <div class="popup_merge_modify popup_window">
   <div class="popup_header">
    <p class="popup_title">
     [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[link]</li><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li>[search]<li>[ahref]</li>
    </p>
    [link]
    
   </div>
   <div class="popup_content">
    <div class="merge_panel active merge_step1">
     <div class="merge_header">
      <ul class="step_list step_01">
       <li>
        시작
       </li>
       <li>
        대표 저자명 선택
       </li>
       <li>
        논문 선택
       </li>
       <li>
        수정요청
       </li>
      </ul>
      <div>
       <p class="merge_title">
        <span class="authorCountSet">
        </span>
        대상 저자 확인
       </p>
       <p>
        요청하신
        <span class="authorCountSet">
        </span>
        대상 저자가 맞는 지 확인 후 시작해주세요.
       </p>
      </div>
     </div>
     <div class="merge_content merge_author_list">
      <table class="table_header">
       <colgroup>
        <col style="width:16%"/>
        <col style="width:20%"/>
        <col style="width:20%"/>
        <col style="width:20%"/>
        <col style="width:10%"/>
        <col style="width:14%"/>
       </colgroup>
       <thead>
        <tr>
         <th scope="col">
          저자명
         </th>
         <th scope="col">
          소속기관
         </th>
         <th scope="col">
          주요 연구분야
         </th>
         <th scope="col">
          논문 발행기간
         </th>
         <th scope="col">
          논문수
         </th>
         <th scope="col">
          피인용수
         </th>
        </tr>
       </thead>
      </table>
      <div class="table_scroll">
       <table class="table_content">
        <colgroup>
         <col style="width:16%"/>
         <col style="width:20%"/>
         <col style="width:20%"/>
         <col style="width:20%"/>
         <col style="width:10%"/>
         <col style="width:14%"/>
        </colgroup>
        <tbody class="step1List">
         <tr>
          <td class="c" colspan="6">
           잠시만기다려주세요..
          </td>
         </tr>
        </tbody>
       </table>
      </div>
     </div>
     <div class="btn_wrap">
      [ahref]
      
      [link]
      
     </div>
    </div>
    <div class="merge_panel merge_step2">
     <div class="merge_header">
      <ul class="step_list step_02">
       <li>
        시작
       </li>
       <li>
        대표 저자명 선택
       </li>
       <li>
        논문 선택
       </li>
       <li>
        수정요청
       </li>
      </ul>
      <p class="merge_title">
       대표 저자명 선택[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[search]</li>[search][link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[ahref]<li>[search]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>
      </p>
      <p>
       수정요청 대상 저자의 대표 저자명을 선택해주세요.[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[search]</li>[ahref][ahref][link]
      </p>
     </div>
     <div class="merge_content">
      <div class="select_author">
       <label for="select_author">
        대표 저자명
       </label>
       <select class="select_option_box" id="select_author">
        <option value="">
         잠시만기다려주세요..
        </option>
       </select>
      </div>
     </div>
     <div class="btn_wrap">
      [ahref]
      
      [link]
      
     </div>
    </div>
    <div class="merge_panel merge_step3">
     <div class="merge_header">
      <ul class="step_list step_03">
       <li>
        시작
       </li>
       <li>
        대표 저자명 선택
       </li>
       <li>
        논문 선택
       </li>
       <li>
        수정요청
       </li>
      </ul>
      <p class="merge_title">
       [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[link]<li>[ahref]</li>
      </p>
      <p>
       수정요청하신 저자의 논문을 선택해주세요.<li>[link]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][search]
      </p>
     </div>
     <div class="merge_content_step3 author_list">
      <p class="list_header">
       <label>
        전체
       </label>
      </p>
      <div class="list_scroll_step3">
       <ul class="list select_articleList">
        <li>
         <p class="list_title">
          서울시 조선족 밀집지 간 특성 분석과 정책적 함의
         </p>
         <p class="info">
          이석준, 김경민, 서울연구원, 서울도시연구 15(4), 2014, 1-16[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[ahref]</li>[search][ahref]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[search]</li>
         </p>
        </li>
       </ul>
      </div>
     </div>
     <div class="btn_wrap">
      [ahref]
      
      [ahref]
      
     </div>
    </div>
    <div class="merge_panel merge_step4">
     <form action="/Journal/IssueList/PLCT00002094" id="registForm2" method="post" name="registForm2">
      <div class="merge_header">
       <ul class="step_list step_04">
        <li>
         시작
        </li>
        <li>
         대표 저자명 선택
        </li>
        <li>
         논문 선택
        </li>
        <li>
         수정요청
        </li>
       </ul>
       <p class="merge_title">
        수정 요청하기[ahref][search][ahref]<li>[link]</li>[search][link]<li>[ahref]</li>[ahref][ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li><li>[search]</li>
       </p>
       <p>
        해당 저자의 정보수정(주요 연구분야, 논문목록 등)이 필요하신 경우, 요청자의 이름과 이메일을 입력 후 요청사항을 자세히 기재해주세요.[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link][search]<li>[search]</li><li>[ahref]</li>
       </p>
      </div>
      <fieldset>
       <legend>
        수정요청
       </legend>
       <div class="merge_content">
        <table class="modify_table">
         <colgroup>
          <col style="width:116px"/>
          <col style="width:534px"/>
         </colgroup>
         <tbody>
          <tr>
           <th scope="row">
            요청자 이름
            <span>
             *<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<li>[search]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[search]<li>[link]</li>[search]<li>[ahref]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[ahref]</li>[search][link][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>
            </span>
           </th>
           <td>
           </td>
          </tr>
          <tr>
           <th scope="row">
            요청자 이메일
            <span>
             *
            </span>
           </th>
           <td>
            <div class="email_input">
             @
             <select class="sel01" name="selEmailOpt" title="주 사용 이메일">
              <option value="">
               선택해주세요.
              </option>
              <option value="empal.com">
               empal.com
              </option>
              <option value="hotmail.com">
               hotmail.com
              </option>
              <option value="naver.com">
               naver.com
              </option>
              <option value="gmail.com">
               gmail.com
              </option>
              <option value="paran.com">
               paran.com
              </option>
              <option value="yahoo.co.kr">
               yahoo.co.kr
              </option>
              <option value="nate.com">
               nate.com
              </option>
              <option value="hanmail.net">
               hanmail.net
              </option>
              <option value="korea.com">
               korea.com
              </option>
              <option value="lycos.co.kr">
               lycos.co.kr
              </option>
              <option value="dreamwiz.com">
               dreamwiz.com
              </option>
              <option value="chollian.net">
               chollian.net
              </option>
              <option value="hanafos.com">
               hanafos.com
              </option>
              <option value="hanmir.net">
               hanmir.net
              </option>
              <option selected="selected" value="direct">
               직접입력
              </option>
             </select>
            </div>
           </td>
          </tr>
          <tr>
           <th scope="row">
            기타 요청사항
           </th>
           <td>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="btn_wrap">
        [ahref]
        
        [ahref]
        
       </div>
      </fieldset>
     </form>
    </div>
   </div>
  </div>
  <div class="popup_window" id="popup_total_alarm">
   <div class="popup_header">
    <p class="popup_title title">
     알림서비스 통합신청
    </p>
    [link]
    
   </div>
   <div class="popup_content" style="padding-bottom:0px;">
    <div class="alarm_top">
     <p>
      보고 계신 논문과 관련된 각 정보에 대한 알림서비스를 신청해보세요.<li>[ahref]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][link][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>
     </p>
     <p>
      E-mail로 최신 콘텐츠를 가장 빠르게 확인하실 수 있습니다.<li>[search]</li><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[link]<li>[ahref]</li><li>[ahref]</li><li>[search]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
     </p>
    </div>
    <div class="alarm_bottom" style="margin-bottom: 24px;">
     <div class="desc_box">
      <p>
       원하시는 알림서비스를 모두 선택하신 후 하단의 [신청하기] 버튼을 클릭하세요.
      </p>
      <p>
       <li>[ahref]</li><li>[search]</li>[link][link]<li>[search]</li><li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li>[search]<li>[search]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
      </p>
     </div>
     <div class="form_box">
      <form>
       <div class="input_box combine-alarm-iprd-box">
        <label class="check_box">
         <span class="icon">
         </span>
         <span class="text">
          <li>[search]</li>[ahref]<li>[search]</li>[search][search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
         </span>
        </label>
        <p class="desc">
         해당 발행기관에 새로운 권/호가 업데이트 될 때마다 알려드립니다.
        </p>
       </div>
       <div class="input_box combine-alarm-plct-box">
        <label class="check_box">
         <span class="icon">
          [search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
         </span>
         <span class="text">
          간행물 신규 권/호 알림서비스 :
          [ahref]
          
         </span>
        </label>
        <p class="desc">
         해당 간행물에 새로운 권/호가 업데이트 될 때마다 알려드립니다.
        </p>
       </div>
       <div class="input_box combine-alarm-auth-new-node-box">
        <label class="check_box">
         <span class="icon">
          [link]<li>[link]</li><li>[link]</li><li>[link]</li>[ahref][ahref]
         </span>
         <span class="text">
          저자 신규 논문 알림서비스 : <li>[search]</li>[search]<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]
         </span>
        </label>
        <p class="desc">
         선택하신 저자의 새로운 논문이 업데이트 될 때마다 알려드립니다.[ahref]<li>[link]</li><li>[search]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]
        </p>
        <div class="check_area">
        </div>
       </div>
       <div class="input_box combine-alarm-auth-notn-box">
        <label class="check_box">
         <span class="icon">
         </span>
         <span class="text">
          저자 피인용 논문 알림서비스 :
         </span>
        </label>
        <p class="desc">
         선택하신 저자의 논문을 인용한 새로운 논문이 업데이트 될 때마다 알려드립니다.<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][link]<li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><li>[search]</li>[ahref][search][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link][ahref]
        </p>
        <div class="check_area">
        </div>
       </div>
       <div class="input_box combine-alarm-node-notn-box">
        <label class="check_box">
         <span class="icon">
         </span>
         <span class="text">
          논문 피인용 알림서비스<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]<li>[link]</li><li>[search]</li><li>[link]</li>[link][search]<li>[ahref]</li><li>[ahref]</li><li>[ahref]</li><li>[search]</li>
         </span>
        </label>
        <p class="desc">
         보고 계신 논문을 인용한 새로운 논문이 업데이트 될 때마다 알려드립니다.
        </p>
       </div>
       <div class="input_box combine-alarm-keyword-box">
        <label class="check_box">
         <span class="icon">
         </span>
         <span class="text">
          키워드별 신규 논문 알림서비스<li>[ahref]</li>[ahref]<li>[search]</li><li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><li>[search]</li>
         </span>
        </label>
        <p class="desc">
         선택하신 키워드와 관련된 새로운 논문이 업데이트 될 때마다 알려드립니다.<li>[search]</li>[search][link]<li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
        </p>
        <div class="check_area">
         <ul class="check_list">
         </ul>
        </div>
       </div>
       <div class="input_box combine-alarm-main-subject-box">
        <label class="check_box">
         <span class="icon">
          [link]<li>[ahref]</li><li>[link]</li><li>[ahref]</li><li>[ahref]</li><li>[ahref]</li><li>[ahref]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
         </span>
         <span class="text">
          [link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li><li>[link]</li>[link]<li>[link]</li>[link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][link]
         </span>
        </label>
        <p class="desc">
         보고 계신 논문이 속한 주제에 새로운 간행물이 업데이트 될 때마다 알려드립니다.<li>[link]</li><li>[search]</li><li>[search]</li>[ahref]<li>[search]</li>
        </p>
       </div>
       <div class="btn_box">
        <div class="btn_confirm combine-alarm-submit-btn" onclick="fn_statistics('A002',fnGetB2BId(),fnGetB2CId())">
         신청하기
        </div>
       </div>
      </form>
     </div>
    </div>
   </div>
  </div>
  <div class="popup_window" id="popup_alarm_rcmd">
   <div class="popup_header">
    <p class="popup_title title">
    </p>
    [link]
    
   </div>
   <div class="popup_content">
    <div class="desc_box">
     <p class="sub-title-box">
      <br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref]<li>[ahref]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[link]</li><li>[search]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[link]</li>
     </p>
     <p class="list-info-box desc">
     </p>
    </div>
    <ol class="alarm_list">
    </ol>
    <div class="btn_box">
     <button class="btn_confirm set-alarm-rcmd-btn">
      신청하기
     </button>
    </div>
    <div class="bottom_box">
     <label class="check_box today_check">
      <span class="icon">
      </span>
      오늘 하루 열지 않기
     </label>
    </div>
   </div>
  </div>
  <div class="info_popup member-join-info-popup" style="display: none;">
   [ahref]
   
   <div class="info_wrap">
    <div class="text_box">
     <p class="info_title">
      DBpia 개인회원으로 가입하시면 논문 이용이 더욱 편리해집니다!
     </p>
     <p>
      회원으로 가입하시면 알림서비스, 월간 리포트, 보관함 기능 등 다양한 개인화 서비스를 이용하실 수 있습니다.
     </p>
     [ahref]
     
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0461
  </b>
 </body>
</html>