--->|U2hlIGNhbGxzIG1lIG92ZXIgYW5kIHRlbGxzIG1lIHNoZSBkaWRuJ3QgdGhpbmsgSSBnYXZlIGhlciBzYWxtb24uIExvb2tpbmcgYXQgaGVyIHBsYXRlIEkgY2FuIHNlZSB0aGUgZmlzaCBpcyBwaW5rIGFuZCBpcyB2ZXJ5IHZlcnkgY2xlYXJseSBzYWxtb24gKEkndmUgc2VydmVkIHRoZSBzYWxtb24gaHVuZHJlZHMgb2YgdGltZXMpIHNoZSBpbnNpc3RzIGkgR28gYXNrIHRoZSBraXRjaGVuIHdoYXQgZmlzaCBpdCB3YXMuIApUaGUgUHVibGljIEhlYWx0aCBDcmlzaXMgTm8gT25lIElzIFRhbGtpbmcgQWJvdXQKSSBncmV3IHVwIHRoaXMgd2F5LCBhbmQgc3RpbGwgaW4gbXkgbGF0ZSAyMHMgY2Fubm90IGhhbmRsZSBtdWNoIGZvb2QgYmVmb3JlIG5vb24uIApBYmVyIHdpZSBkaWUgQXV0b3JpbiBkYW5uIG5vY2ggc28gdm9uIG9iZW4gaGVyYWIgZWluZXIgZ2FuemVuIEthdGVnb3JpZSB2b24gU3BpZWxlbiBkYXMgUmVjaHQgYWJ6dXNwcmljaHQgYWxzIHJpY2h0aWdlIFNwaWVsZSBiZXRyYWNodGV0IHp1IHdlcmRlbiBmaW5kZSBpY2ggcmljaHRpZyB3aWRlcnNwcmNobGljaC4gV2VubiBtYW4gc2Nob24gaW5rbHVzaXYgc2VpbiB3aWxsIHVuZCBtZWhyIEZyYXVlbiBpbiBkZW0gU3BvcnQgdmVydHJldGVuIHNlaGVuIHdpbGwsIHNvbGx0ZSBtYW4gbmljaHQgYXVzZ2VyZWNobmV0IGRlciBLYXRlZ29yaWUgdm9uIFNwaWVsZW4gdW50ZXIgZGVuZW4gRnJhdWVuIGJlc3NlciB2ZXJ0cmV0ZW4gc2luZCBpaHJlIEJlZGV1dHVuZyBhYnNwcmVjaGVuLiBEYXMgaXN0IGRvY2ggdmxsaWcgaGV1Y2hsZXJpc2NoLgpNb3N0IG5vIGxpbWl0IHJpbmcgZ2FtZXMgaGF2ZSBhIHNldCBidXkgaW4gKGZvciBpbnN0YW5jZSwgJDIwMCkgb3IgYSByYW5nZSBvZiBidXkgaW5zIChmb3IgaW5zdGFuY2UsIHlvdXIgYnV5IGluIG1pZ2h0IGJlIGZvciBhbnkgYW1vdW50IGJldHdlZW4gJDIwMCBhbmQgJDQwMCkuIApZb3UgcmVhbGx5IHdhbnQgdG8gY29tcGFyZSBjaGlsZCBsYWJvciBsYXdzIHdpdGggYmVpbmcgYSBjaGVhcCBhc3Mgd2hlbiB5b3UgZ28gb3V0IHRvIGVhdD8gV2hhdCBraW5kIG9mIHdvcmsgZG8geW91IGRvPyBTb21laG93IEkgZG9uJ3QgdGhpbmsgeW91IGFyZSBjYXBhYmxlIG9mIHVuZGVyc3RhbmRpbmcgaG93IHlvdSBub3QgdGlwcGluZyBhIHNlcnZlciB3aG8gcHJvdmlkZWQgYSBzZXJ2aWNlIHRvIHlvdSBvbmx5IGh1cnRzIHRoYXQgc2VydmVyLiAKQW5kIHRoaXMgaXNuIHRoZSBmaXJzdCB0aW1lIHRoaXMgaGFzIGhhcHBlbmVkIGluIENoaW5hLiBIYWtrYSBoYXMgYWxsIGJ1dCBkaXNhcHBlYXJlZCBpbiBIb25nIEtvbmcsIGZvciBpbnN0YW5jZS4KRGVzcGl0ZWdpcmxzICAxOTggcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KQW5kIGRlcHJlc3Npb24gaW4gb25jb2xvZ2ljYWwgcGFsbGlhdGl2ZSBjYXJlIHBhdGllbnRzClRoZW4gaGUgd2FudGVkIHRvIHNlZSBhbGwgb3VyIHNhZmV0eSBwcm9ncmFtcyBsaWtlIGxvY2sgb3V0LCB0YWcgb3V0IGFuZCBwcm9ncmFtcyBsaWtlIHRoYXQuIEhlIHRoZW4gZm9sbG93ZWQgdXAgd2l0aCBhIHdhbGsgdGhyb3VnaCBvZiBvdXIgZmFjaWxpdHkgYnV0IHdlIHdvbiBrbm93IHdoYXQgaGUgZm91bmQgdW50aWwgaGUgZ2l2ZXMgdXMgYSByZXBvcnQuIApCdXQgdGhlIEZyZW5jaCBjYW4gYmUgc28gY295LiAKSXQgYSB0ZW5zaW9uIGJyb2tlbiBvbmx5IHdoZW4gV2VuZHkgYW5kIGhlciBmcmllbmRzIGFyZSB0b2dldGhlci4gCkhlIGRpZG4gc2VlIG1lLi4gClNpbXBsZSBDYXJkIEdhbWUgUHJvYmxlbXNDYXJkIGdhbWVzIGFyZSBhbiBleGNlbGxlbnQgb3Bwb3J0dW5pdHkgdG8gdGVzdCBhIHN0dWRlbnQncyB1bmRlcnN0YW5kaW5nIG9mIHNldCB0aGVvcnkgYW5kIHByb2JhYmlsaXR5IGNvbmNlcHRzIHN1Y2ggYXMgdW5pb24sIGludGVyc2VjdGlvbiBhbmQgY29tcGxlbWVudC4gSW4gdGhpcyBzZWN0aW9uLCB3ZSB3aWxsIG9ubHkgZ28gdGhyb3VnaCBwcm9iYWJpbGl0eSBwcm9ibGVtcywgYnV0IHRoZSBjb21iaW5hdG9yaWNzIHByb2JsZW1zIGZvbGxvdyB0aGUgc2FtZSBwcmluY2lwbGVzIChqdXN0IGxpa2UgYXQgdGhlIG51bWVyYXRvcnMgb2YgdGhlIGZyYWN0aW9ucykuLiAKVGhlIGlkZWFzIHNoZSBnYXZlIHlvdSB3aWxsIGdldCB5b3UgZmFyLCBidXQgeW91IGhhdmUgdG8gc3RheSBvbiB0aGUgcGFydCBmb3IgbW9udGhzLCBhbmQgbWF5IG5ldmVyIGdldCB0byBwdXQgdGhlIHBsdWcgaW4uIFdoYXQgc2hlIGRvbmUgaXMgY29udmluY2VkIHlvdSB0byBnaXZlIHlvdXIgZ2Ygb3Igd2lmZSBhIGJldHRlciBvcmdhc20sIHdpdGggbm8gcmV0dXJuLiAKVGhlcmUgYXJlIG90aGVyIGF2ZW51ZXMgb2YgdGhlIG5ldCB0aGF0IG1heSBiZSBwdXJzdWVkIHRvIGZpbmQgdGhvc2Ugc2VydmljZXMsIGJ1dCB0aGlzIHN1YiBpcyBub3QgdGhlIHBsYWNlIGZvciB0aGF0LiBHZW51aW5lIHF1ZXN0aW9ucyBzZWVraW5nIGFkdmljZSBvbiBzYWZlIHNwYWNlcyBhbmQgcHJhY3RpY2VzIHRvIGJlIHV0aWxpemVkIHdpbGwgYmUgYWxsb3dlZC4gCldlIHdlcmUgcmVmdXNpbmcgdG8gYmFjayBkb3duIGFuZCBvdXIgYWdlbnQgc2VudCBhbiBhZGRlbmR1bSB0aGF0IHRoZXkgaGFkIHRvIGJlIG91dCBGcmlkYXkgb3IgcmVpbWJ1cnNlIHVzIHRocm91Z2ggTW9uZGF5LiAKU2V2ZW4gQ2FyZCBJbnNwZWN0b3IgMlRoaXMgaXMgbGFiZWxlZCBhcyB0aGUgImxpdHRsZSBicm90aGVyIiBvZiB0aGUgSG9sZGVtIEluc3BlY3RvciAyIHBva2VyIHNvZnR3YXJlLiBUaG91Z2ggaXQgaGFzIHRoZSBhYmlsaXR5IHRvIHRyYWNrIHVwIGNhcmRzIGFuZCBvdXRzLCB0aGUgYXZhaWxhYmxlIHByb2ZpbGVzIGFyZSBub3QgdGhhdCBjb21tZW5kYWJsZS4gCkJ1eSBpbnRvIGZhciByaWdodCBzY2hlbWVzIHRoYXQgbWFrZSB0aGVtIGZlZWwgY29ubmVjdGVkIHRvIGEgd29ybGQgdGhleSBmZWVsIGlzIGxlYXZpbmcgdGhlbSBiZWhpbmQuCkR1cmluZyB0aGUgQnVzaCB5ZWFycywgd2hlbiB3YXIgYmVjYW1lIHBlYWNlLCBsaWVzIGJlY2FtZSB0cnV0aCwgZ3JlZWQgd2FzIGdvb2QgYW5kIGV2aWwgd2FzIG5lY2Vzc2FyeSwgSSBmYW50YXNpemVkIHRoYXQgRHViYnlhIHdvdWxkIGJlIGltcGVhY2hlZCBhbmQgdGhhdCBoaXMgZXZpbCBwdXBwZXQgbWFzdGVyIERpY2sgQ2hlbmV5IHdvdWxkIGFjdHVhbGx5IGdvIHRvIGphaWwgZm9yIGNyaW1lcyBhZ2FpbnN0IGh1bWFuaXR5LiAKSWYgaXQgaXMsIHRoZSBoYW5kIGlzIGRlY2xhcmVkICJmb3VsIiBhbmQgdGhlIHBsYXllciBmb3JmZWl0cyB0aGUgYmV0LiAKSXQgZG9lc24gbWVhbiBhbnl0aGluZywgb2YgY291cnNlLCBidXQgaXQgZG9lcyBoYXZlIGEgY2VydGFpbiBhbXVzZW1lbnQgdmFsdWUuIApUaGUgT2lsZXJzIGhhdmUgZG9uZSB0aGVtc2VsdmVzIG5vIGZhdm91cnMgYnkgb25seSBmb2N1c2luZyBvbiB0YWxlbnQgZnJvbSBOb3J0aCBBbWVyaWNhIGluIHJlY2VudCB5ZWFycy4gCkxhc3QgeWVhciB0aGUgY2x1YiBwb3VyZWQgJDQwMCwwMDAgaW50byB0aGUgY29tbXVuaXR5IGFzIHdlbGwgYXMgc3BvbnNvcmluZyBhIG51bWJlciBvZiBldmVudHMgaW5jbHVkaW5nIHRoZSBJcm9ubWFuIHRyaWF0aGxvbiBpbiBBcHJpbCBhbmQgdGhlIHBvcHVsYXIgUXVlZW4gb2YgdGhlIE5vcnRoIHJhY2UgZGF5LiBXaGlsZSB0aGUgY2x1YiBnZW5lcmFsIG1hbmFnZXIsIFRob21hcyBQYXludGVyLCBzYXlzIGhlIHdvdWxkIGxvdmUgdG8gY29udGludWUgZG9uYXRpbmcgbW9uZXksIGl0IHdhcyBiZWNvbWluZyBtb3JlIGRpZmZpY3VsdC4gCkkgYWxzbyBuZXZlciBzdGF0ZWQgU29jaWFsaXNtIGlzIGJhZCBvciB0aGF0IHRoYXQgd2hhdCB3cm9uZyB3aXRoIFZlbmV6dWVsYSAgIGp1c3QgcG9pbnRpbmcgb3V0IHRoYXQgTWFkdXJvIGlzIGEgZGljdGF0b3IgaXMgYWxsLiBidXQgd2hlbiBJIGRvIHRoaXMgTWFkdXJvIGJ1dHQgYm95cyBjb21lIG91dCBvZiB0aGUgd29vZHdvcmsgZGVmbGVjdGluZyBhbmQgcHV0dGluZyB3b3JkcyBpbiBwZW9wbGVzIG1vdXRocyB0byBjZW5zb3IgdGhlbS4KVG8gYmVjb21pbmcgYSBrb3JlYW4gY2l0aXplbi4gbG9hbnMsIGNvbnRyYWN0cywgYXBwbGljYXRpb25zLCBwb2xpY2UgcmVjb3JkcywgdHJhdmVsIGJ1dCBpdHMgbmV2ZXIgZW5vdWdoIHBhcGVyd29yayB0byBjb25zaWRlciBiZWNvbWluZyBhIG5hdGlvbmFsLiB5b3VyIGluc3VyYW5jZSBwcmVtaXVtcyBhcmUgbm90IGVsaWdpYmxlIGZvciBhcyBtYW55IGRpc2NvdW50cyBhcyBhIGtvcmVhbiBuYXRpb25hbCBzbyB5b3Ugd2lsbCBiZSBwYXlpbmcgYWJvdXQgMjAkIG1vcmUgcGVyIG1vbnRoIChhdmcpIGZvciB0aGUgcmVzdCBvZiB5b3VyIGxpZmUsIGFuZCBhbnkgb3RoZXIgaW5zdXJhbmNlIHByZW1pdW1zIHdpbGwgYmUgYSBiaXQgaGlnaGVyIGZvciB0aGUgZmlyc3QgZmV3IG1vbnRocyBjb21wYXJlZCB0byBrb3JlYW4gbmF0aW9uYWxzLgpXaGVuIGFzaCBidWlsZHMgdXAgdW5kZXIgdGhlIGdyYXRlIGl0IG5lZWRzIHRvIGJlIHJlbW92ZWQuIFRoZSBzaG92ZXMgaXMgc29ydCBvZiBsaWtlIGEgbG9uZyBoYW5kbGVkIGZpcmUgcmVzaXN0YW50IGR1c3QgcGFuLi4gClRvdGFsbHkgb2ZmIHRvcGljIGJ1dCBpIHRocmV3IGFsbCBteSBib29rcyB0byB0cmFzaCwgaXQgaGFwcGVuZWQgdG8gYmUgaW4gZnJvbnQgb2YgdGVhY2hlcnMgbG91bmdlIHNvIG15IHRlYWNoZXIgc2F3IG1lIGRvIGl0IHdpdGggYSBzbWlsZS4gV2hlbiBhc2tlZCB3aHkgaSBzYWlkIHRoYXQgaSBoYWQgcmVhZCB0aGVtIGFsbCBhbmQgbWFkZSBhbGwgdGhlIHdvcmsgc28gaSB3YXMgZG9uZSBhbmQgaSB3YW50ZWQgbmV3IGJvb2tzLiBJdCB3YXMgYWZ0ZXIgMiBtb250aHMsIHRoZSBkZWFyIG9sZCBsYWR5IHdobyB3YXMgbXkgdGVhY2hlciBmb3IgZmlyc3QgMiB5ZWFycyBoYWQgaGVyIHdvcmsgc2NoZWR1bGUgZnVsbCBqdXN0IHRyeWluZyB0byBpbnZlbnQgdGhpbmdzIGZvciBtZSB0byBkby4gClNjaHVsZW5iZXJnIHNhaWQgZmlyc3QgcmVzcG9uZGVycyB3ZXJlIG5vdCBhYmxlIHRvIGxvY2F0ZSBFbWVyeSByaWdodCBhd2F5LCBhbmQgc28gdGhleSBjYWxsZWQgaW4gdGhlIGRpdmUgdW5pdC4gSGUgc2FpZCB0aGUgc2VhcmNoIHRvb2sgbG9uZ2VyIHRoYW4gYW50aWNpcGF0ZWQgYmVjYXVzZSB0aGV5IGhhZCB0byBlbnN1cmUgdGhlIHNhZmV0eSBvZiB0aGUgZGl2ZSB0ZWFtLgpMYXcgZW5mb3JjZW1lbnQgZGVncmVlIHByb2dyYW1zIGNvbWJpbmUgY2xhc3Nyb29tIGFuZCBsYWJvcmF0b3J5IHdvcmsgdG8gcHJvdmlkZSBhcHBsaWNhdGlvbiBvZiBhY2FkZW1pYyBsZWFybmluZyB0byB0YWN0aWNhbCBwcmFjdGljZS4gCkRldGVycmVudHMgZG9uIHdvcmsgdG8gcHJldmVudCBjcmltZXMgdGhhdCBhcmUgZ2VuZXJhbGx5IHRob3NlIG9mIHBhc3Npb24gKHN1Y2ggYXMgc2hvb3RpbmcgeW91ciB3aWZlIGxvdmVyKSBvciBjb21taXR0ZWQgYnkgaW5zYW5lIHBlb3BsZSAoU2VyaWFsIGtpbGxlcnMpIGJ1dCBpdCBET0VTIHdvcmsgdG8gc3RvcCBwZW9wbGUgd2hvIGFyZSBjb21taXR0aW5nIGNyaW1lcyBiYXNlZCBvbiBhIHNpbXBsZSBjb3N0IHJld2FyZCBhbmFseXNpcy4gSWYgeW91IG1ha2UgdGhlIGNvc3Qgb2YgZG9pbmcgYmFkIHRoaW5ncyBwcm9oaWJpdGl2ZWx5IGhpZ2ggKGZvciBpbnN0YW5jZSwgaWYgdGhlIHBlbmFsdHkgaXMgeW91IGFuZCB5b3VyIGNyb25pZXMgYXJlIHB1dCBpbiBmcm9udCBvZiBhIGZpcmluZyBzcXVhZCksIHRoZW4geW91IG5vdCBsaWtlbHkgdG8gZG8gaXQsIHdoZXJlYXMgbm93IHRoZXJlIG5vIHJlYXNvbiB0byBOT1QgZG8gYWxsIHRoaXMgc2hpdCBiZWNhdXNlIG5vIG9uZSBpcyBldmVyIHB1bmlzaGVkIGZvciBpdC4uIApXaGV0aGVyIHRoaXMgd29ya3MgYW5kIHRoZSBpZGVhcyBzcHJlYWQgaXMgYWxzbyBkZXRlcm1pbnNpdGljLCBidXQgaXQgZG9lc24gbWFrZSBzZW5zZSB0byBub3QgZG8gYW55dGhpbmcgYmVjYXVzZSBleGlzdGVuY2UgaXMgZGV0ZXJtaW5pc3RpYy4gClN1cmUsIG15IG9yaWdpbmFsIHNlbGYgd291bGQgcGVyc29uYWxseSBleHBlcmllbmNlIGEgYmxlYWsgZW5kLCBidXQgdGhlcmUgd291bGQgYmUgbm8gYnJlYWsgaGVyZSwgbm8gbGlmZWxvbmcgZW50aXR5IG9mIGNvbnNjaWVuY2UgdGhhdCBjb21lcyB0byBhbiBlbmQgICBpdCB3b3VsZCBqdXN0IGJlIHRoZSBjYXNlIHRoYXQgb25lIHBhcnRpY3VsYXIgbWVhdCBjb21wdXRlciB3b3VsZCBzdG9wIGRvaW5nIGFueSBtb3JlIHByb2Nlc3NpbmcsIGFuZCBhIG5ldyBvbmUgd291bGQgdGFrZSBvdmVyOyBhbmQgSSB0cnVseSB3b3VsZG4ga25vdyBhbnkgYmV0dGVyLCBJIGhhdmUgbm8gcmVjb2xsZWN0aW9uIG9mIHN1Y2ggYSB0aGluZyB1bmxlc3MgdGhlIG1lbW9yaWVzIG9mIGl0IGhhcHBlbmluZyB3ZXJlIHRyYW5zZmVycmVkIHRvIHRoZSBjb3B5IHRvby4gCkZvciBleGFtcGxlIHJpZGluZyBiaWtlcyB1bnNhZmVseSwgY2xpbWJpbmcgdGhpbmdzIHRoZXkgc2hvdWxkbiBldGMuIApJZiBJIHdpbiBhbnkgbW9uZXkgdGhhdCdzIGp1c3QgYSBib251cyEuIApXaHkgYW55b25lIHdvdWxkIHRvdWNoIHRoYXQgc3Rpbmt5IGJpdGNoIEkgaGF2ZSBubyBpZGVhLiBKYW1lcyBkZWNpZGVkIHdlIHdlcmUgZ29ubmEgdGVhY2ggdGhhdCB1cHBpdHkgYml0Y2ggc29tZSBtYW5uZXJzLiAKSW4gdGhlIHNob3BwaW5nIGNlbnRyZSBJIHdhbGtlZCBwYXN0IGEgbWFzc2FnZSBzaG9wIHdpdGggYSB3b21hbiBvdXQgdGhlIGZyb250IChJIGRvbiBsaWtlIGdldHRpbmcgbWFzc2FnZXMgZnJvbSBtZW4pLiAKS29rZW11bGxlciBoYXMgYWRkaXRpb25hbCBwcm9mZXNzaW9uYWwgZXhwZXJpZW5jZSBpbiBtYXJrZXRpbmcsIHJldGFpbCBhbmQgc21hbGwgYnVzaW5lc3MuIEhlIGhvbGRzIGEgTWFzdGVyIG9mIEJ1c2luZXNzIEFkbWluaXN0cmF0aW9uIGZyb20gSW93YSBTdGF0ZSBVbml2ZXJzaXR5Li4gCiJJdCdzIGF3ZXNvbWUsIiBSZW5jayBzYWlkLCBwb2ludGluZyBvdXQgdGhhdCB3aGlsZSBoZSBoYXNuJ3QgaGFkIG11Y2ggdGltZSB0byBnZXQgaW4gcHJlc2Vhc29uIGJhc2ViYWxsIHJlcHMsIGhlIGV4cGVjdHMgdGhlIGJhc2tldGJhbGwgdGVhbSdzIHN1Y2Nlc3MgdG8gcGFybGF5IGludG8gdGhlIHVwY29taW5nIGJhc2ViYWxsIGNhbXBhaWduLiAiSXQgZ2l2ZXMgdXMgYSBsb3Qgb2YgY29uZmlkZW5jZSBiZWNhdXNlIHRoZSBiYXNlYmFsbCBndXlzIGNvbWUgdG8gb3VyIGJhc2tldGJhbGwgZ2FtZXMgYW5kIGl0IG1vdGl2YXRlcyB0aGVtIHRvIHNlZSB0aGUga2luZCBvZiBhdG1vc3BoZXJlIHdlIHBsYXkgaW4uIAoiVGhlIHByZXNpZGVudCBpcyBhIGd1eSB3aG8gbGlrZXMgdG8gYmx1ZSBza3kgYSBsb3QgYW5kIGVudGVydGFpbiBhIGxvdCBvZiBkaWZmZXJlbnQgaWRlYXMsIGJ1dCBoZSBtdWx0aXBsZSB0aW1lcyByZWFmZmlybWVkIHRoZSBwb2ludCB0aGF0IFRQUCBtaWdodCBiZSBlYXNpZXIgZm9yIHVzIHRvIGpvaW4gbm93LiIuIApTdGFsbGluZzogSSBhbHdheXMgZ2V0IGltcGluZ2VtZW50IGlzc3VlcyBpZiBJIGFtIGJlbmNoaW5nIGFuZCBvaHAgd2l0aGluIHRoZSBzYW1lIHdlZWssIG9yIGxvdyBiYXIgc3F1YXR0aW5nLiBTbyBpZiB5b3UgcmVhbGx5IHdhbnQgdG8gZ2V0IGJpZyBzaG91bGRlcnMgYW5kIHlvdSBoYXZlIHRoZXNlIHNhbWUgaXNzdWVzIEkgd291bGQgcmVjb21tZW5kIGJvYXJkIHByZXNzZXMgb24gYmVuY2gsIGFuZCBnZXR0aW5nIGFuIFNTQi4gQm90aCBjYW4gaGVscCByZWR1Y2Ugd2VhciBhbmQgdGVhciBvbiB0aGUgc2hvdWxkZXIgdG8gYWxsb3cgbW9yZSB2b2x1bWUgdG8gYmUgZGVkaWNhdGVkIHRvd2FyZHMgeW91ciBzaG91bGRlcnMKQSBza2lsbGZ1bCBwbGF5IGRvZXNuJ3QgbmVjZXNzYXJpbHkgbWVhbiB0aGF0IGl0IHdpbGwgYWlkIG9ubGluZSBwb2tlciBnYW1ibGVycyB0byB3aW4gZWFzeSBtb25leSBhdCBhbiBvbmxpbmUgcG9rZXIgcm9vbS4gV2h5LCB5b3UgYXNrPyBJdCBpcyBiZWNhdXNlIHdpbm5pbmcgbW9uZXkgYXQgb25saW5lIHBva2VyIHJvb21zIGlzIGJleW9uZCB0aGUgcmVhY2ggb2YgdGhlIGdhbWJsZXJzIG9yIHBsYXllcnMgb2YgdGhlIHBva2VyIGdhbWUgd2hhdGV2ZXIgdGhlaXIgc2tpbGwgbGV2ZWwgaXMuIFRoZSBza2lsbHMgdGhlIHRvcCBnYW1ibGVycyBpbiB0aGUgd29ybGQgYXJlIHNvIHByb3VkIG9mIGFyZSB1c2VsZXNzIGFnYWluc3QgYW4gb25saW5lIHBva2VyIHZpcnR1YWwgZ2FtYmxlci4uIApPdGhlciB0aGFuIFBpbm90IFNpdmkvR3Jpcy9HcmlnaW8sIEkgcHJvYmFibHkgYXZvaWQgb3RoZXIgaW50ZXJuYXRpb25hbCB2YXJpYXRhbHMuIFRoZXJlIGFyZSBzb21lIFBsYXZhYyBiYXNlZCBibGVuZHMgdGhhdCBpbmNsdWRlIFJob25lIG9yIGJvcmRlYXV4IHZhcmlhdGFscyB0aGF0IGNhbiBiZSBva2F5LCBidXQgdHlwaWNhbGx5IHRoZSBjYWJzLCBjaGFyZHMsIFNhdXYgQmxhbmNzLCBldGMuIApXaXRoIHRoYXQgaW4gbWluZCwgdGhlIHdlaXJkIGFtb3VudCBvZiBwcm8gVGVzbGEgLyBFbG9uIE11c2sgcG9zdHMgb24gc29jaWFsIG1lZGlhIGNlcnRhaW5seSB0YWtlIGEgbmV3IG1lYW5pbmcuLiAKIDcgcG9pbnRzICBzdWJtaXR0ZWQgOSBob3VycyBhZ29UaGVyZSBhbHNvIGhpZ2ggY2hvbGVzdGVyb2wsIGluY3JlYXNlZCBhZ2UsIHBvb3IgZGlldCwgcG9vciBzbGVlcCBzY2hlZHVsZSwgYW5kIHVuY2hlY2tlZCBhbmdlciBpc3N1ZXMgdGhhdCBwdXQgaGltIGF0IGhpZ2ggcmlzayBmb3IgYSBoZWFydCBhdHRhY2suIApBbHNvLCBhIGxvdCBvZiB0aGUgU3RhbiAiYmFkIiB0cmFkZXMgd2VyZSBtb3N0bHkgY2FwIHJlbGF0ZWQuIApUcmVuZHkgc3BvdHMgbGlrZSBUaGUgQmluZGVyeSBTaG9wIGFuZCBWaWN0b3JpYSBGb29kIFN0cmVldCBoYXMgc29tZXRoaW5nIHdhaXRpbmcgZm9yIGFsbCBhZ2VzLiBEb24ndCBmb3JnZXQgdG8ga2ljayBzdGFydCB5b3VyIGRheSBhdCBzb21lIG9mIFZpY3RvcmlhJ3MgZmluZXN0IGJyZWFrZmFzdCBwbHVnIGlucywgc3VjaCBhcyBDYWYgTWlnbm9uIGFuZCBUcmVhdHMuUmVhZCBtb3JlSE9URUwgU1RZTEVUaW1lIHNwZW50IGluICBpcyBhIHNsb3dlciBwYWNlZCBhZmZhaXIgdGhhbiBtb3N0IG90aGVyIENlbnRyYWwgTG9uZG9uIG5laWdoYm91cmhvb2RzLiAKWW91IGFyZSBvbmx5IHJla3QgYWdhaW5zdCA5IGNvbWJvcy4uIApJdCBhbHNvIHByb21vdGVzIGJsb29kIGZsb3csIHdoaWNoIGNhbiBoZWxwIGhlYWxpbmcgYW5kIGluZmxhbW1hdGlvbi4gCk9yLCBpbmRwZW5kYW1tZW50IGR1IHBvaWRzLCBpbCBlc3QgcHJvdXYgcXVlIGxhIGZjb25kaXQsIGVuIHBhcnRpY3VsaWVyIGZtaW5pbmUsIGRpbWludWUgYXZlYyBsJ2dlLiBJbCBlc3QgbW9pbnMgc2ltcGxlIGQnYXZvaXIgdW4gYmIgIDM4IGFucyBxdScgMjUuIApPY2Nhc2lvbmFsbHkgd2UgaGF2ZSBndWVzdCBhcnRpc3RzLCBzb21ldGltZXMgYWx1bW5pLCB3aG8gY29tZSBhbmQgc2NyZWVuIHRoZWlyIGZpbG1zIHRvIHVzLCBmb2xsb3dlZCBieSBhIFEgV2UgaGFkIHRoZSBkaXJlY3RvciBvZiBNSTogRmFsbG91dCwgdGhlIGVkaXRvciBvZiBUaG9yOiBSYWduYXJvaywgYW5kIERhbm55IE1jQnJpZGUsIHRoZSBsYXR0ZXIgdHdvIGJlaW5nIGFsdW1uaSBvZiB0aGUgc2Nob29sLiBTb21ldGltZXMgaWYgd2UgbHVja3ksIHdlIG9jY2FzaW9uYWxseSBzZWUgYSBmaWxtIGJlZm9yZSBpdCByZWxlYXNlZC4gQWxzbywgZXZlcnkgd2Vla2VuZCB0aGUgc2Nob29sIGhhcyByZWd1bGFyIHNjcmVlbmluZ3MgdGhhdCB5b3UgY2FuIGF0dGVuZCBhdCB5b3VyIGxlaXN1cmUuIApLTklDS0VSUyBmb3IgZ2lybHMgYWdlZCBzZXZlbiBiZWFyaW5nIHRoZSBzbG9nYW4gIllvdSBTY29yZWQiICAgc29sZCBhdCBQcmltYXJrLiAxMCBsb3cgY3V0IHBhZGRlZCBkaWFtYW50ZSBmb3IgZWlnaHQgeWVhciBvbGRzIHNvbGQgYnkgQkhTIG93bmVkIFRhbW15LiBicmlnaHRseSBjb2xvdXJlZCBwYWRkZWQgaW4gYSB0aW55IFNpemUgMjhBQSwgd2hpY2ggZml0cyBzZXZlbiB5ZWFyIG9sZHMsIHNvbGQgaW4gZ2lybHMgc2VjdGlvbnMgYXQgVGVzY28uCkJldHRpbmcgMTAwIGludG8gMTgwIGFuZCBwaWNraW5nIHVwIGEgY2FsbGVyID0gdGhlcmUgMzgwIGluIHRoZSBwb3QgYW5kIGhlIGhhcyAxMDUgYmVoaW5kLiBBbnlvbmUgd2hvIGhhcyBhIGNsdWUgaXMgZ29ubmEgcmVjb2duaXplIHRoYXQgaGUgaGF2ZSBhIHRpbnkgZnJhY3Rpb24gb2YgdGhlIHBvdCBiZWhpbmQgd2hlbiBjYWxsZWQgYW5kIHRodXMgY2FuIG5ldmVyIGJsdWZmIHR1cm5zLCBzaW5jZSBoZSBjYW4gYmUgYmx1ZmZpbmcgdHVybnMgaGUgY2FuIGJlIGJsdWZmaW5nIGZsb3AgZWl0aGVyLCBhcyBhIGZsb3AgYmV0IHdvdWxkIGJlIHNpemVkIHN1Y2ggdGhhdCBpZiBpdCBkb2VzbiB3b3JrIHRoZXJlIHdvdWxkIGJlIHN1ZmZpY2llbnQgcm9vbSB0byBtYW5ldXZlciBvbiB0aGUgbmV4dCBzdHJlZXQgYW5kIGRlY2lkZSB3aGV0aGVyIG9yIG5vdCB0byBmaXJlIGFuIGFkZGl0aW9uYWwgYmFycmVsLi4gClRoaXMgbGVkIHRvIHNvbWUgcHJldHR5IHJpZGljdWxvdXMgc2NlbmVzLiBZb3Ugd291bGQgd2FsayB1cCB0byBhbiBlbXB0eSByZXN0YXVyYW50IGFuZCBhc2sgdG8gYmUgc2VhdGVkLiAKQW5kIHRoZSBtb3ZpZSBpcyBmdWxsIG9mIGFkbWlyYXRpb24gZm9yIHdoYXQgc2hlIGFjaGlldmVkIGFzIGEgd29tYW4gZXhoaWJpdGluZyBwb3dlciBvdmVyIHBvd2VyZnVsIG1lbi4uIApJdCBpcyB2ZXJ5IGJpbmdlIGFibGUuIApIZXJlIGFub3RoZXIgaW50ZXJlc3RpbmcgdGhpbmcsIHRoZSBBa2lucyBhY2NlbGVyYXRvciB3YXMgYmFubmVkIGJlY2F1c2UgeW91IGRvbiBuZWVkIHR3byBoYW5kcyBhcyB0aGUgd2hvbGUgZ3VuIHJpZGVzIGluIGEgY2hhc3NpcyBhbmQgImF1dG9tYXRpY2FsbHkiIGN5Y2xlcyBvbiBzcHJpbmcgcmVjb2lsIGVuZXJneSB0byBidW1wZmlyZS4gU28gdGhlIEFURiBoYXMgYWxyZWFkeSwgcHJldmlvdXNseSBzaG93biBob3cgdGhleSBkcmF3IHRoZSBsaW5lLCBiYXNlZCBvbiB0aGUgb3JpZ2luYWwgbWVjaGFuaWNhbCBkaWZmZXJlbmNlIG9mIHRoZSBhY3Rpb24uClJpZ2h0LCBidXQgdGhlIGdvdmVybm1lbnQgY291bGRuIGNvcnJvYm9yYXRlIFRlZCBzdG9yeS4gVGhleSBvbmx5IGFzc3VtZWQgaXQgd2FzIHRoZSBjYXNlLiBGbGlnaHQgNzcgaGFkIHRoZSBsZWFzdCBjYWxscyBhcHBhcmVudGx5IC4gVGhleSBjYW4gYXR0cmlidXRlIGFsbCB0aGUgY2FsbHMgYnV0IDQsIHdoaWNoIHRoZXkgYXNzdW1lIGlzIEJhcmJhcmEgY2FsbGluZyBUZWQuIFRob2lnaCBUZWQgc3RhdGVzIGhlIG9ubHkgcmVjZWl2ZWQgMi4gU3VyZSwgaXQgcG9zc2libGUgZm9yIGFueXRoaW5nIC4gSSBvbmx5IHRyeWluZyB0byBwb2ludCBvdXQgdG8gZHVkZSB1cCB0aGVyZSB0aGF0IHRoZSB3aG9sZSBjZWxsIHBob25lIHRoaW5nIHdhcyB1c2VkIGJ5IG9mZmljaWFsIHBlcnNvbm5lbCBmaXJzdCwgYW5kIGxhdGVyIGNvbmZpcm1lZCBpbiBvZmZpY2lhbCBkb2N1bWVudHMsIGp1c3Qgbm90IGZvciB0aGUgb3JpZ2luYWwgcGVyc29ubmVsIHdobyBmaXJzdCBjbGFpbWVkIGl0IHRvIGJlIHNvLgpDbGFpcmV1cHZvdGVzICAyIHBvaW50cyAgc3VibWl0dGVkIDE2IGhvdXJzIGFnbwoxOSkgRmFzaGlvbiAuIENhbiBnZXR0aGlzIGJhYnkgZnJvbSBpVHVuZXMuIEl0J3MgZnJvbSB0aGUgZmlsbSBzb3VuZHRyYWNrIGNhbGxlZCJDb25mZXNzaW9ucyBvZiBhIFNob3BhaG9saWMuIiAyMCAzMykgSnVzdCBEYW5jZS9Mb3ZlZ2FtZS9QYXBhcmF6emkvUG9rZXIgRmFjZS8gRWgsRWggKE5vdGhpbmcgRWxzZSBJIENhbiBEYXkpL0JlYXV0aWZ1bCwgRGlydHksIFJpY2gvVGhlIEZhbWUvIE1vbmV5SG9uZXkvU3RhcnN0cnVjay9Cb3lzIEJveXMgQm95cy9QYXBlciBHYW5nc3RhL0Jyb3duIEV5ZXMvSSBMaWtlIEl0Um91Z2gvU3VtbWVyYm95IC4gClRoZSBwaXRjaCBBIHN0cmluZyBvZiB1bnBsYW5uZWQsIHNlZW1pbmdseSBkaXNjb25uZWN0ZWQgZXhwZXJpZW5jZXMgd2VyZSBleGFjdGx5IHRoZSBzdGVwcyBKYXNvbiBNYXNvbiBuZWVkZWQgdG8gdGFrZSB0byB0dXJuIGhpcyBwYXNzaW9uIGZvciBzbm93Ym9hcmRpbmcgaW50byBhIGJ1c2luZXNzOiBWYW5jb3V2ZXIgYmFzZWQgTWFzb24gSW5kdXN0cmlhbCBXZWFyLiBUaGUgY29tcGFueSBtYWtlcyB3YXRlciByZXBlbGxlbnQsIGFicmFzaW9uIHJlc2lzdGFudCwgMTAwJSBicmVhdGhhYmxlLCBsaW5lZCwgc3RyZXRjaCBkZW5pbSBwZXJmb3JtYW5jZSBvdXRlcndlYXIuCkFsb3JzLCBwZXRpdCBjb25zZWlsICBwcmVuZHJlIHNpIHZvdXMgZW4gYXZleiBlbnZpZSwgc2kgdm91cyBlbiByZXNzZW50ZXogbGUgYmVzb2luLCBwZW5zZXogIHZvdHJlIG5vdXZlbCBhbWkgU0FNIHVuIHBldSBjaGFxdWUgam91ciBldCBkZW1hbmRleiB2b3VzIHNpIHZvdXMgbHVpIHBydGV6IGFzc2V6IGQnYXR0ZW50aW9uLiBDYXIgc2kgdm91cyBsZSBmYWl0ZXMsIHZvdXMgdmVycmV6IHF1ZSB2b3VzIGFwcHJjaWVyZXouIEV0IHNpIHZvdXMgYXZleiBkZXMgbG1lbnRzIGRlIHZvdHJlIG1vZGUgZGUgdmllICBjaGFuZ2VyLCBwcmVuZXogdm90cmUgdGVtcHMsIGNvdXRleiB2b3VzLCBmYWl0ZXMgdm91cyBjb25maWFuY2UuClRoZSBwbGFjZSBoZXJlIGRvZXMgdGhhdCBhdCA4YW0gRnJpZGF5IG1vcm5pbmdzLCBhbHRob3VnaCBJIHdlbnQgYXQgN2FtIGFuZCBtYW5hZ2VkIHRvIGJlIHRoZSBzZWNvbmQgcGVyc29uIGluIGxpbmUuVGhlIGFsdGVybmF0aXZlIHdhcyB0byB3YWl0IHRocmVlIG9yIGZvdXIgd2Vla3MgZm9yIGFuIGFwcG9pbnRtZW50LCBhbmQgSSBkaWRuIHdhbnQgdG8gd2FpdC4gTWF5YmUgYXNrIGFyb3VuZCBpbiB5b3VyIGxvY2FsIGNvbW11bml0eSBzdWJyZWRkaXRzLCBvciBzaW5jZSB5b3UgdXNpbmcgYSB0aHJvd2F3YXksIGFzayBpbiBvbmUgb2YgdGhlIHN1YnJlZGRpdHMgKGxpa2UgL3Ivc3VpY2lkZXdhdGNoIG9yIG90aGVyIG9ubGluZSBjb21tdW5pdGllcykgdGhhdCBzcGVjaWFsaXplcyBpbiB0aGF0IGtpbmQgb2YgdGhpbmc/Y2hpdmVfbWFjaGluZSAgMSBwb2ludCAgc3VibWl0dGVkIDIgeWVhcnMgYWdvTXkgaGQ1NTAwIGlzIGluIHRoZSBwcm9jZXNzIG9mIGR5aW5nIGluIG15IHNpeCB5ZWFyIG9sZCBQQy4gCkNpdGl6ZW4sIHlvdSBoYXZlIGEgQ29uc3RpdHV0aW9uYWwgcmlnaHQgdG8gYSB0cmlhbC4gCkkgZG9uIGNhcmUgaWYgeW91IGJlbGlldmUgbWUuIEV2ZXJ5b25lIGluIHRoZSBjbGFzcyBsYXVnaGVkIG91ciBhc3NlcyBvZmYgYXQgaG93IGF1ZGFjaW91cyBhbmQgd2VsbCBkb25lIGl0IHdhcywgYW5kIHRoZSBnaXJsIHNoZSB3YXMgc2luZ2luZyB0byBjb3VsZG4gc3RvcCBjcnlpbmcgYW5kIGxhdWdoaW5nLCBhbmQgSSBsb3ZlZCBpdCBTTyBGVUNLSU5HIE1VQ0guIAoyLiAKRW5maW4gZGUgdG91dGVzIGZhb25zIGxlcyByZXRyYWl0ZXMgcmlzcXVlbnQgZCd0cmUgYW1wdXRlcyBldCBhIG4naW5jaXRlIHBhcyAgcydlbiBzb3VjaWVyLiBPbiBwZXV0IHNlIGRlbWFuZGVyIHNpIGxhIGducmF0aW9uIG1vbnRhbnRlIHBvdXJyYSBzZXVsZW1lbnQgYXR0ZWluZHJlIGxhIHZpZWlsbGVzc2UuQ2V0IGFydGljbGUgZXN0IGludGVyZGl0IGRlIGxlY3R1cmUgYXV4IG1pbmV1cnMgZXQgYXV4IGZlbW1lcy4gClVuIHByb2JsbWUgUGF5cGFsIGEgdCBsZXYuIAooT2xpdmUgb2lsIGFjY291bnRzIGZvciBtYW55IG9mIHRoZSBjYWxvcmllcyBpbiB0aGUgcm9hc3QgY2hpY2tlbiBtZWFsLCBmb3IgZXhhbXBsZS4pSW4gY29tcGFyaW5nIHByaWNlcyBvZiByZWFsIGZvb2QgYW5kIGp1bmsgZm9vZCwgSSB1c2VkIHN1cGVybWFya2V0IGluZ3JlZGllbnRzLCBub3QgdGhlIHByaWNpZXIgb3JnYW5pYyBvciBsb2NhbCBmb29kIHRoYXQgbWFueSBwZW9wbGUgd291bGQgY29uc2lkZXIgaWRlYWwuQnV0IGZvb2QgY2hvaWNlcyBhcmUgbm90IGJsYWNrIGFuZCB3aGl0ZTsgdGhlIGFsdGVybmF0aXZlIHRvIGZhc3QgZm9vZCBpcyBub3QgbmVjZXNzYXJpbHkgb3JnYW5pYyBmb29kLCBhbnkgbW9yZSB0aGFuIHRoZSBhbHRlcm5hdGl2ZSB0byBzb2RhIGlzIEJvcmRlYXV4LlRoZSBhbHRlcm5hdGl2ZSB0byBzb2RhIGlzIHdhdGVyLCBhbmQgdGhlIGFsdGVybmF0aXZlIHRvIGp1bmsgZm9vZCBpcyBub3QgZ3Jhc3MgZmVkIGJlZWYgYW5kIGdyZWVucyBmcm9tIGEgdHJlbmR5IGZhcm1lcnMnIG1hcmtldCwgYnV0IGFueXRoaW5nIG90aGVyIHRoYW4ganVuayBmb29kOiByaWNlLCBncmFpbnMsIHBhc3RhLCBiZWFucywgZnJlc2ggdmVnZXRhYmxlcywgY2FubmVkIHZlZ2V0YWJsZXMsIGZyb3plbiB2ZWdldGFibGVzLCBtZWF0LCBmaXNoLCBwb3VsdHJ5LCBkYWlyeSBwcm9kdWN0cywgYnJlYWQsIHBlYW51dCBidXR0ZXIsIGEgdGhvdXNhbmQgb3RoZXIgdGhpbmdzIGNvb2tlZCBhdCBob21lICAgaW4gYWxtb3N0IGV2ZXJ5IGNhc2UgYSBmYXIgc3VwZXJpb3IgYWx0ZXJuYXRpdmUuW1NpZGUgbm90ZSBmcm9tIG1lSSB0aGluayB5b3Ugc2hvdWxkIGJ1eSBHcmFzcyBmZWQgYmVlZiBhbmQgbG9jYWwgb3JnYW5pYyBmYXJtZXJzIHdoZW4gcG9zc2libGVhbmQgbm8gZ3JhaW5zIHRvIG1pbmltYWwgZ3JhaW5zLkV2ZW4gdGhlIG5lYXJseSA1MCBtaWxsaW9uIEFtZXJpY2FucyB3aG8gYXJlIGVucm9sbGVkIGluIHRoZSBTdXBwbGVtZW50YWwgTnV0cml0aW9uIEFzc2lzdGFuY2UgUHJvZ3JhbSAoZm9ybWVybHkga25vd24gYXMgZm9vZCBzdGFtcHMpIHJlY2VpdmUgYWJvdXQgJDUgcGVyIHBlcnNvbiBwZXIgZGF5LCB3aGljaCBpcyBmYXIgZnJvbSBpZGVhbCBidXQgZW5vdWdoIHRvIHN1cnZpdmUuU28gd2UgaGF2ZSB0byBhc3N1bWUgdGhhdCBtb25leSBhbG9uZSBkb2Vzbid0IGd1aWRlIGRlY2lzaW9ucyBhYm91dCB3aGF0IHRvIGVhdC5UaGVyZSBhcmUsIG9mIGNvdXJzZSwgdGhlIHNvIGNhbGxlZCBmb29kIGRlc2VydHMsIHBsYWNlcyB3aGVyZSBpdCdzIGhhcmQgdG8gZmluZCBmb29kOiB0aGUgRGVwYXJ0bWVudCBvZiBBZ3JpY3VsdHVyZSBzYXlzIHRoYXQgbW9yZSB0aGFuIHR3byBtaWxsaW9uIEFtZXJpY2FucyBpbiBsb3cgaW5jb21lIHJ1cmFsIGFyZWFzIGxpdmUgMTAgbWlsZXMgb3IgbW9yZSBmcm9tIGEgc3VwZXJtYXJrZXQsIGFuZCBtb3JlIHRoYW4gZml2ZSBtaWxsaW9uIGhvdXNlaG9sZHMgd2l0aG91dCBhY2Nlc3MgdG8gY2FycyBsaXZlIG1vcmUgdGhhbiBhIGhhbGYgbWlsZSBmcm9tIGEgc3VwZXJtYXJrZXQuU3RpbGwsIDkzIHBlcmNlbnQgb2YgdGhvc2Ugd2l0aCBsaW1pdGVkIGFjY2VzcyB0byBzdXBlcm1hcmtldHMgZG8gaGF2ZSBhY2Nlc3MgdG8gdmVoaWNsZXMsIHRob3VnaCBpdCB0YWtlcyB0aGVtIDIwIG1vcmUgbWludXRlcyB0byB0cmF2ZWwgdG8gdGhlIHN0b3JlIHRoYW4gdGhlIG5hdGlvbmFsIGF2ZXJhZ2UuQW5kIGFmdGVyIGEgbG9uZyBkYXkgb2Ygd29yayBhdCBvbmUgb3IgZXZlbiB0d28gam9icywgMjAgZXh0cmEgbWludXRlcyAgIHBsdXMgY29va2luZyB0aW1lICAgbXVzdCBzZWVtIGxpa2UgYW4gZXRlcm5pdHkuVGFraW5nIHRoZSBsb25nIHJvdXRlIHRvIHB1dHRpbmcgZm9vZCBvbiB0aGUgdGFibGUgbWF5IG5vdCBiZSBlYXN5LCBidXQgZm9yIGFsbW9zdCBhbGwgQW1lcmljYW5zIGl0IHJlbWFpbnMgYSBjaG9pY2UsIGFuZCBpZiB5b3UgY2FuIGRyaXZlIHRvIE1jRG9uYWxkJ3MgeW91IGNhbiBkcml2ZSB0byBTYWZld2F5Lkl0J3MgY29va2luZyB0aGF0J3MgdGhlIHJlYWwgY2hhbGxlbmdlLihUaGUgcmVhbCBjaGFsbGVuZ2UgaXMgbm90ICJJJ20gdG9vIGJ1c3kgdG8gY29vay4iIEluIDIwMTAgdGhlIGF2ZXJhZ2UgQW1lcmljYW4sIHJlZ2FyZGxlc3Mgb2Ygd2Vla2x5IGVhcm5pbmdzLCB3YXRjaGVkIG5vIGxlc3MgdGhhbiBhbiBob3VyIGFuZCBhIGhhbGYgb2YgdGVsZXZpc2lvbiBwZXIgZGF5LiAKVGhlIGJpZ2dlc3Qgb2JzdGFjbGUgdG8gaGVhbHRoeSBzaXR0aW5nIG1heSBiZSBvdXJzZWx2ZXMuIApMZXNsZXkgYW5kIERvbm55IE1jRWxoaW5leSdzIGhvbWUgaW4gQXBwbGV0b24sIFdpc2NvbnNpbiwgd2Fzbid0IHRoZSBzYW1lIGFmdGVyIHRoZWlyIG9uZSB5ZWFyIG9sZCB0YWJieSBFbWlseSBkaXNhcHBlYXJlZC4gQnV0IHNoZSBkaWRuJ3QganVzdCBkaXNhcHBlYXIsIHNoZSB3ZW50IG9uIGEgNCw1MDAgbWlsZSBhZHZlbnR1cmUhIEl0IHNlZW1zIEVtaWx5IHdhcyBvbiBoZXIgZXZlbmluZyBwcm93bCB3aGVuIHNoZSBmb3VuZCBoZXJzZWxmIG9uIGEgdHJ1Y2sgdG8gQ2hpY2FnbyBpbnNpZGUgYSBjb250YWluZXIgb2YgcGFwZXIgYmFsZXMuIApUaGUgbWFzc2FnZWQgbGVnIHNob3dlZCBzbG93ZXIgcHJvZHVjdGlvbiBvZiBpbnRlcmxldWtpbiA2IGFuZCB0dW1vciBuZWNyb3NpcyBmYWN0b3IgYWxwaGEsIGJvdGggbGlua2VkIHRvIGluZmxhbW1hdGlvbi4iLiAKTW9zdCBjYXJkIHJvb21zLiBHaXZlIGV2ZXJ5IHBsYXllciBhdCB0aGUgdGFibGUgdGhlIHJpZ2h0IHRvIHNlZSBhbGwgY2FyZHMgdGhhdCBjYWxsZWQgdG8gYSBzaG93ZG93biwgZXZlbiBpZiB0aGV5IGFyZSBtdWNrZWQgYXMgbG9zZXJzLiAKSWYgdGhpcyB3YXMgYSBwb2tlciBnYW1lLCBSZWlkIHdvdWxkIG5vdCBiZSBwdXR0aW5nIGFsbCBoaXMgY2hpcHMgaW4gdGhlIGFudGUgYmVjYXVzZSBoZSBrbm93cyBoZSBoYXMgYSBsb3NpbmcgaGFuZC4gSW5zdGVhZCwgaGUgd291bGQgY29udGludWUgdG8gdHJ5IHRvIGJsdWZmIGhpcyB3YXkgdGhyb3VnaCB0aGUgZ2FtZSwgYXR0ZW1wdGluZyB0byBwcm9sb25nIHRoZSBnYW1lIGFuZCBoaXMgZmEgb2YgaGF2aW5nIGEgd2lubmluZyAob3IgdHJ1ZSkgaGFuZC4gCiJBbGwgYmFzaWMgcmlnaHRzIHNob3VsZCBiZSBwcm90ZWN0ZWQgcmVnYXJkbGVzcyBvZiBzYWlkIFRoZW9kb3JlIFcuIFN0ZXBoZW5zLCBleGVjdXRpdmUgZGlyZWN0b3Igb2YgSFJDLiAiV2hvIGFyZSB3ZSB0byBzYXkgd2hhdCB0aGUgcmlnaHQgc2V4dWFsIHByZWZlcmVuY2UgU3RlcGhlbnMgc2FpZCBhIGxhdyBiYW5uaW5nIGRpcyAgY3JpbWluYXRpb24gaW4gRnJlZGVyaWNrIENvdW50eSAiY291bGQgYmUgYnV0IGFkZGVkIHRoYXQgdGhlIGNvdW50eSBjb3VsZCBub3QgZW5hY3QgdGhlIGxhdyB3aXRob3V0IGZpcnN0IGdvaW5nIHRvIHRoZSBHZW5lcmFsIEFzc2VtYmx5LiAKRHIuIEplc3MgaXMgYWxzbyBhIE5BRVQgbWVtYmVyIHNpbmNlIEFwcmlsIG9mIDIwMTEgYW5kIGlzIHF1YWxpZmllZCB0byBwZXJmb3JtIE5BRVQgKE5hbWJ1ZHJpcGFkIEFsbGVyZ3kgRWxpbWluYXRpb24gVGVjaG5pcXVlKSwgYSBub24gaW52YXNpdmUgdHJlYXRtZW50IGZvciBhbGxlcmd5IHN1ZmZlcmVycy4gClNvLCBob3cgZG9lcyBhIGNhc2lubyBlYXJuIG1vbmV5IGZyb20gYWxsIHRoZXNlIGNhc2lubyBib251cyBvZmZlcnM/CkJlaW5nIGhlbGQgY2FwdGl2ZSBmb3IgZm91ciBkYXlzIHdpdGggbm8gZm9vZCBvciB3YXRlciwgdGhlIGJhdHRlcmVkIHdvbWFuIHdhcyByZXNjdWVkIGFmdGVyIE9iaXJlayB3YXMgYWJsZSB0byB0YWxrIGhlciB3YXkgb3V0LiBTaGUgcnVzaGVkIHRoZSB2aWN0aW0gdG8gYSBob21lIGluIHRoZSAxMDAwIGJsb2NrIG9mIExpbmNvbG4gUm9hZCBhbmQgcG9saWNlIHdlcmUgYWxlcnRlZC4uIApJIGhhdmUgZm91bmQgc3RyZXRjaGVzIGhlbHAgYnV0IGtleSBpcyBhdm9pZGluZyBpbmZsYW1tYXRpb24uClRoaXMgY291bGQgYmUgZnJvbSBhIGxvdCBvZiBkaWZmZXJlbnQgYXNwZWN0cyB0aG91Z2ggbm90IG5lY2Vzc2FyaWx5IHRoZXJlIHBsYXRmb3JtLiAKSSBhbiBvcmFuZ2UgcmFuayBzaGFoZWVuIG1haW4sIHNvIHRha2UgYWxsIHRoaXMgd2l0aCBhIGdyYWluIG9mIHNhbHQuIApJZiB0aGF0IHRoZSBjb252ZXJzYXRpb24sIHRoZW4gSSBzdWdnZXN0IHdlIGhhdmUgaXQgYXQgYSBnbG9iYWwgc2NhbGUgbm90IG5hdGlvbmFsbHkuICQ0MGsgcHV0cyB5b3UgaW4gdGhlIHRvcCAyLjElIG9mIGluY29tZSB3aGVuIGFkanVzdGVkIGZvciBjb3N0IG9mIGxpdmluZywgZ2xvYmFsbHkuIFRoYXQgaW5jbHVkZXMgd2hhdCBwZW9wbGUgY2FuIGFmZm9yZCB0byByZW50IG9yIGJ1eS4gCk5vbmUgb2YgdGhlbSB3b3VsZCByaXNlIHRvIHRoZSBsZXZlbCBvZiBiZWluZyBvZiBwYXJ0aWN1bGFyIGNvbmNlcm4gZm9yIHVzLiAKQW5kIHRoZW4gaGUgY2FuIGRlY2lkZSBpZiBoZSB3aWxsIHN0YXkgdG94aWMgb3Igbm90IHNvcnJ5IG9wLiAKR29wYWxrcmlzaG5hbiBzYXlzIHRoYXQganVzdCBnZXR0aW5nIGxpa2VzIGFuZCBmb2xsb3dlcnMgaXMgbm90IGVub3VnaC4gCkFjY29yZGluZyB0byBwdWJsaXNoZWQgcmVwb3J0cywgaXQgY2VudHJlZCBvbiB3aXRoIG5laXRoZXIgc2lkZSB0cnlpbmcgdG8gcHV0IHRoZSBvdGhlciBvbiB0aGUgZGVmZW5zaXZlLi4gCkluIG15IG9waW5pb24sIFNhbG1hbiBzZWVtcyBub3cgdG8gYmUgb24gaGlzIHdheSBvdXQgYXMgdGl0dWxhciBsZWFkZXIgb2YgdGhlIEFyYWIvUGVyc2lhbi9NdXNsaW0gd29ybGQuIApJZiB5b3UgbWF4aW5nIG91dCB5b3VyIDQwMWssIGFmdGVyIHRheGVzIHlvdSBicmluZ2luZyBpbiAkNCw4MDAgYSBtb250aC4gRnJvbSA1IG1pbnV0ZXMgb2Ygc2VhcmNoaW5nLCBJIGZvdW5kIGEgJDE1MDAgc3R1ZGlvIGluIE5vYiBIaWxsLiBPbmx5IDMwIG1pbnV0ZXMgdG8gd2FsayBkb3dudG93biwgMTUgMjAgYnkgYnVzLiBUaGF0IGEgbGl0dGxlIG92ZXIgMzAlIG9mIHlvdXIgbW9udGhseSBpbmNvbWUgb24gcmVudC4KSXQncyBkZWZpbml0ZWx5IGhhcmQgdG8gZ2V0IGNhbG9yaWVzIGluIGZvciBlbmVyZ3ksIGVzcGVjaWFsbHkgaWYgeW91J3JlIHVzZWQgdG8gY2Fsb3JpZSBjb3VudGluZy4gCkkgZG9uIGtlZXAgaXQgZXZlbiwgYnV0IHRoYW5rcyB0byBhbGwgb2YgdGhlbSwgSSB0aGluayBJIGZpZ3VyZWQgaXQgb3V0LiAKMTQpICJNdXNjbGUgc3RyZW5ndGhlbmluZyBtYXkgYmUgbW9yZSBpbXBvcnRhbnQgdGhhbiBhZXJvYmljIHRyYWluaW5nIGluIGltcHJvdmluZyBmaXRuZXNzIGluIGZpYnJvbXlhbGdpYSBwYXRpZW50cy4iClRoZSB0ZXJyaWZ5aW5nIG9yZGVhbCBzZWVtZWQgdG8gYmUgYmFja2VkIHVwIGJ5IGEgRmFjZWJvb2sgcG9zdCBtYWRlIGJ5IENpbnF1aW5vLCB3aGljaCBoYXMgc2luY2UgYmVlbiBkZWxldGVkLgpUaGV5IGFsc28gYWxsb3cgcGxheWVycyB0byBicnVzaCB1cCBvbiB0aGVpciBza2lsbHMsIHdoaWxlY29tcGV0aW5nIGFnYWluc3QgcG9rZXIgZW50aHVzaWFzdHMgZnJvbSBhbGwgb3ZlciB0aGUgd29ybGQuIEZvciByZWFsIFRleGFzIEhvbGRlbSBnYW1lcywgeW91IGNhbiB2aXNpdCB5b3VyIG5lYXJlc3RjYXNpbm8uIApUaGUgdGVhbSBkb2VzbiBjYXJlIGFib3V0IHRyYW5zcGFyZW5jeS4KTGFjayBvZiBzbGVlcCBpcyBsaWtlIGEgYmFkZ2Ugb2YgaG9ub3IgaW4gbWFueSBtaWxpdGFyeSB1bml0cy4gCk1vcmVvdmVyLCBvbmxpbmUgcG9rZXIgcm9vbXMgYXJlIHRha2luZyBtb3JlIHNlY3VyZSBtZWFzdXJlcyB0byBtYWtlIGl0IGV2ZW4gbW9yZSBkaWZmaWN1bHQgZm9yIHRoZXNlIHBva2VyIGJvdHMgdG8gZ2V0IHRocm91Z2ggdGhlIHJvb21zJyB2aXJ0dWFsIGRvb3JzLi4gClRoYW5rcyEgQ3VycmVudGx5LCBpZiBJJ20gbHVja3kgbWluZSBydW4gNiA3IHdlZWtzIGFwYXJ0LiBPdGhlcndpc2UgaXQncyBtb250aGx5IGhvc3BpdGFsaXphdGlvbnMuIApBbmltYWxzIGtpbGwgZWFjaCBvdGhlciBhbGwgdGhlIHRpbWVzIGluIG9mdGVuIG1vcmUgYnJ1dGFsIHdheXMgdGhhbiB3ZSBkby4gQWxsIHlvdSBkb2luZyBpcyBpbGxpY2l0aW5nIGFuIGVtb3Rpb25hbCByZXNwb25zZSB0aGF0IGNhdGVnb3JpY2FsbHkgd29ydGhsZXNzLi4gCk9yIGdldCBhIHNpbmdsZSB3YWxsIHRlbnQgZnJvbSAxNG96IHRvIDIwb3ogbGlnaHRlciBkZXBlbmRpbmcgb24gaG93IG11Y2ggeW91IHdhbnQgdG8gc3BlbmQuIApQcm9ncmVzc2l2ZSB2aWRlbyBwb2tlciBnYW1lcyBkbyBub3Qgbm9ybWFsbHkgcmVxdWlyZSBwbGF5ZXJzIHRvIHB1dCBhIHNpZGUgYmV0LiBQcm9ncmVzc2l2ZSBqYWNrcG90cyBpbiB2aWRlbyBwb2tlciBhcmUgdHJpZ2dlcmVkIHdoZW5ldmVyIHlvdSBpcyBkZWFsdCB0aGUgcXVhbGlmeWluZyBoYW5kOiBhIFJveWFsIEZsdXNoLiBPdXQgb2YgdGhlIGJveCB0aGUgc2l0dWF0aW9uIHdpdGggQ2FyaWJiZWFuIFN0dWQgUG9rZXIsIHBsYXllcnMgY2FuIGVhcm4gdXAgdG8gMTAlIHdpdGggdGhlIHByb2dyZXNzaXZlIHBvb2wgZm9yIHF1YWRzIGFuZCBzdHJhaWdodCBmbHVzaGVzLi4gClRoZWxyZWQgdGhlIFVucmVhZHkncyByZWlnbiBvZiBFbmdsYW5kIHdhcyBub3QgYXMgc3VjY2Vzc2Z1bCBhcyBoaXMgZmF0aGVyIEVkZ2FyJ3MuIApXaGVuIHlvdSBkcm9wIGEgYm9tYiBvbiBhIGh1dCBpbiBBZmdoYW5pc3RhbiB5b3UgZG9uIGhhdmUgdG8gY29uc2lkZXIgdGhlIGNvc3Qgb2YgcmVidWlsZGluZyB0aGUgaW5mcmFzdHJ1Y3R1cmUgYW5kIGRlcGxldGluZyB5b3VyIHRheCBiYXNlLiBUaGV5IGNhbiBiZSAidW5yZXNlcnZlZGx5IiBieSB2ZXJ5IGRlZmluaXRpb24uLiAKSSBiZWVuIGxvb2tpbmcgaW50byByb2NrIGNsaW1iaW5nIGFuZCBtYXliZSBqb2luaW5nIGEgcnVnYnkgdGVhbS4gSSB0aGluayBpdCBiZSByZWZyZXNoaW5nLCBhbmQgYXMgYSBob3BlZnVsbHkgZnV0dXJlIHBoeXNpY2FsIHRoZXJhcGlzdCwgSSB0aGluayBoYXZpbmcgYSBicm9hZCByYW5nZSBvZiBleHBlcmllbmNlIG1heSBiZSBiZW5lZmljaWFsLiAzIHBvaW50cyAgc3VibWl0dGVkIDI1IGRheXMgYWdvV2FzIHRoZXJlIGFueSBicnVpc2luZz8gVGhpcyBzb3VuZHMgdmVyeSBzaW1pbGFyIHRvIHdoYXQgaGFzIGhhcHBlbmVkIHRvIG1lLCBib3RoIGluIHdyYXBzIGFuZCBvdXQuIApUaGF0IHNhaWQsIGNhbmRpZGF0ZXMgbGFja2luZyBjb3JlIGNvbXBldGVuY3kgd2l0aCBhdCBsZWFzdCBlaXRoZXIgYSBkZXZlbG9wbWVudCBvciBvcGVyYXRpb25zIGJhY2tncm91bmQgd291bGQgbm90IGdldCBwYXN0IG91ciBzY3JlZW5pbmcgcHJvY2Vzcy4gU28sIGdpdmVuIHRoYXQgeW91ciBza2lsbHMgd291bGQgZml0IHRoZSByZXF1aXJlbWVudHMgc28gaW4gbXkgY2FzZSBJIHdvdWxkIGJlIGxvb2tpbmcgZm9yIGFiaWxpdHkgdG8gY29sbGFib3JhdGUsIGRlc2lyZSB0byBsZWFybiwgZm9jdXMgb24gbWVudG9yc2hpcCwga25vd2xlZGdlIG9mIChhbmQgZGVzaXJlIHRvKSBhdXRvbWF0ZSByZW9jY3VycmluZyBwcm9jZXNzZXMsIGFuZCBhYmlsaXR5IHRvIHdvcmsgaW4gYSB0ZWFtLiBCZWNhdXNlIEkgcnVuIGEgZmFpcmx5IHNtYWxsIHRlYW0gdGhhdCBpbnRlcmZhY2VzIHdpdGggYSBsb3Qgb2Ygb3RoZXIgdGVhbXMgdGhlcmUgaXMgYWxzbyBhbiBpbXBsaWNpdCBuZWVkIHRvIGJlIGFibGUgdG8gYWRhcHQgYW5kIHNoYXJlIGtub3dsZWRnZSB3aXRoIHRoZW0uCk5vdCB0byBkaWdyZXNzIHRvbyBtdWNoIGJ1dCBtb3N0IG9mIGdlbiBYIHdhcyBkb25lIGdyb3dpbmcgdXAgYnkgdGhlIDkwIEkgZ3JhZHVhdGVkIGhpZ2ggc2Nob29sIGluIE1vc3Qgb2YgbXkgZ3Jvd2luZyB1cCB3YXMgZHVyaW5nIHRoZSA4MHMsIGJ1dCBJIHN0aWxsIHJlbWVtYmVyIG1lZXRpbmcgcGVvcGxlIGluIGhpZ2ggc2Nob29sIHNheWluZyB0aGV5IGhhZCBBREhELCBhbmQgaXQgd2FzIGtpbmQgb2YgbXlzdGVyaW91cy4gTGlrZSwgIk9oLCB3aGF0IHRoYXQ/ISIgSXQgd2FzbiBhIGNvbW1vbiB0aGluZyB5ZXQsIGJ1dCBieSAyMDAwIGl0IHNlZW1lZCBsaWtlIGV2ZXJ5b25lIGhhZCBpdC4KRGVjayBBdXRvbWF0aWMgQ2FyZApUaGlzIHBsYWNlIGlzIHJpZ2h0IGRvd24gdGhlIHN0cmVldCBmcm9tIG15IGFwYXJ0bWVudCEgSXQgaXMgaG9uZXN0bHkgdGhlIHN0cmFuZ2VzdCBlc3RhYmxpc2htZW50IEkgaGF2ZSBldmVyIHNlZW4uIEJvdGggdGltZXMgd2Ugd2VudCB3ZSBnb3QgYXdmdWwgZHJpbmtzIGFuZCB3ZWlyZCB2aWJlcywgc28gd2UgY29tcGxldGVseSBhdm9pZCBpdC4gVGhleSBhcmUgY3VycmVudGx5IGNsb3NlZCAoYW5kIGhhdmUgYmVlbiBzaW5jZSBlYXJseSBEZWNlbWJlcikgd2l0aCBzaWducyBvbiB0aGUgd2luZG93IHNheWluZyBzb21ldGhpbmcgbGlrZSB0aGUgImZpcmUgZGVwYXJ0bWVudCIgc2h1dCB0aGVtIGRvd24uIEJlZm9yZSB0aGV5IGNsb3NlZCB0aGVpciBkb29ycywgdGhlIGFkZGVkIGFuIG91dGRvb3IgYXhlIHRocm93aW5nIHNldHVwIGluIHRoZSBwYXJraW5nIGxvdCwgd2hpY2ggc2VlbWVkIGxpa2UgYSByZWFsbHkgZGFuZ2Vyb3VzIGlkZWEgKGRyaW5raW5nIGFuZCBheGUgdGhyb3dpbmcgaW4gdGhlIGRhcms/KS4gVGhlIGVudGlyZSBidXNpbmVzcyB3YXMgc28gcXVlc3Rpb25hYmxlICAgZnJvbSB0aGUgbmFtZSwgdG8gdGhlIHNrZXRjaHkgc3ByYXkgcGFpbnRlZCBzaWduLCB0byB0aGUgdGhlbWUgKHRoaW5rICAgb2xkIHRoYWkgcmVzdGF1cmFudCBtZWV0cyBkdW5nZW9ucyBhbmQgZHJhZ29ucywgYnV0IHdpdGggYW4gZXNwcmVzc28gYmFyLCBheGUgdGhyb3dpbmcsIGFuZCBhbiBvZmYgbGVhc2ggZG9nIGRlY2spIHRoYXQgbXkgU08gYW5kIEkgaGFkIGEgdGhlb3J5IHRoYXQgc29tZSBndXkgd2luIHRoZSBsb3R0ZXJ5IGFuZCBqdXN0IGRlY2lkZWQgdG8gc2F5ICJmdWNrIGl0LCBJIGFsd2F5cyB3YW50ZWQgdG8gb3BlbiBhIGJhciwgbGV0IGp1c3Qgc2VlIHdoYXQgaGFwcGVucyIuIE5vdyBpdCBzb3VuZHMgbGlrZSBzb21lb25lIHNwZW50IGEgYnVuY2ggb2YgbW9uZXkgaGUgZGlkbiBoYXZlIHRvIG1ha2UgdGhhdCBzaGl0IHNob3cgZXZlcnl0aGluZyBpdCB0dXJuZWQgb3V0IHRvIGJlLiBIZWFyaW5nIHRoZXNlIHRlcnJpYmxlIGV4cGVyaWVuY2VzIGZyb20gZm9ybWVyIGVtcGxveWVlcyBpc24gc3VycHJpc2luZyBjb25zaWRlcmluZyB0aGUgbWFubmVyIGJ5IHdoaWNoIHRoaXMgYmFyIG9wZW5lZCBhbmQgY2xvc2VkLCBidXQgbXkgY29uZG9sZW5jZXMgdG8gdGhlIHBlb3BsZSB3aG8gYXJlIGdldHRpbmcgdGhlaXIgcGF5Y2hlY2tzIHdpdGhoZWxkLiBJIGNhbiB3YWl0IGZvciBzb21lb25lIGVsc2UgdG8gYnV5IGl0IGFuZCBhY3R1YWxseSBmb3JtIGEgc3VzdGFpbmFibGUgYnVzaW5lc3MgdGhlcmUsIGJlY2F1c2UgaXQgdG9vIGdyZWF0IG9mIGEgbG9jYXRpb24gaW4gRnJlbW9udCB0byBiZSBhIHNoaXR0eSBjbG9zZWQgZG93biBiYXIhCkl0IHdpZGVseSBydW1vcmVkIHRoYXQgSSBoYXRlIHRoZSBkb2csIGFuZCBpdCBraW5kIG9mIGZ1biB0byBwZXJwZXR1YXRlIHRoZSBteXRoLiBUaGUgdHJ1dGggaXMsIEkgaGF2ZSBub3RoaW5nIGFnYWluc3QgTW9vc2UuIFRoZSBvbmx5IGRpZmZpY3VsdHkgSSBoYXZlIGlzIHdoZW4gcGVvcGxlIHN0YXJ0IGJlbGlldmluZyBoZSBhbiBhY3Rvci4gCkVuIG1haSwgbGVzIG1vaW5lYXV4IG5lIG1hbnF1YWllbnQgamFtYWlzIGRlIG1hcmF1ZGVyIG5vcyBjZXJpc2llcnMgc2FucyBqYW1haXMgYXZvaXIgIGN1ZWlsbGlyIHVuZSBjZXJpc2UuCklmIHlvdSBhcmUgaW50ZXJlc3RlZCBpbiBwbGF5aW5nIHZhcmlvdXMgdHlwZXMgb2YgcG9rZXIsIGl0IGlzIGxpa2VseSB0aGF0IHlvdSBhcmUgaW50ZXJlc3RlZCBpbiBob3cgdG8gY2hvb3NlIGNhc2lubyBwb2tlciBjaGlwcyB0aGF0IGFyZSByaWdodCBmb3IgeW91LiBJdCBpcyBlc3NlbnRpYWwgdGhhdCB5b3Uga25vdyBhbmQgdW5kZXJzdGFuZCwgcmlnaHQgdXAgZnJvbnQsIHRoYXQgcG9rZXIgY2hpcHMgYXJlIGEgZ2FtaW5nIGl0ZW0gdGhhdCBhcmUgbm90IGNyZWF0ZWQgZXF1YWxseS4gWW91IHNob3VsZCBsZWFybiB0aGF0IHRoZXkgYXJlIHR5cGljYWxseSBjb21wb3NlZCBvZiBkaWZmZXJlbnQgbWF0ZXJpYWxzLCBhbmQgdmFyeWluZyBhbW91bnRzIGFyZSBuZWVkZWQgdG8gcGxheSB3aGVuIGl0IGNvbWVzIHRvIGdyb3VwIGdhbWluZy4gCkkga25vdyB0aGF0IGtpbmQgb2YgdmFndWUsIHNvIGxldCBtZSBnaXZlIHNvbWUgZXhhbXBsZXMuIApJdCBhIGNsaWNoZSwgYnV0IHNsb3cgYW5kIHN0ZWFkeSBkb2VzIHdpbiB0aGUgcmFjZSwgaW4gdGVybXMgb2YgcHVzaGluZyB5b3VyIHByb2dyZXNzLiBBdHRlbXB0cyB0byBydW4gYmVmb3JlIHdlcmUgZGVmaW5pdGVseSBzdHltaWVkIGJ5IHRyeWluZyB0byBnbyB0b28gYmlnIHRvbyBzb29uIGFuZCBoYXRpbmcgdGhlIHdob2xlIHByb2Nlc3MuClNpb2JoYW4gcmVjYWxscyBob3cgaGVyIHJpbmdsZXRzIGdhdmUgcmlzZSB0byB1bmtpbmQgbmlja25hbWVzIGluIHRoZSBwbGF5Z3JvdW5kLiAnSSB1c2VkIHRvIHdlYXIgbXkgaGFpciBpbiBhIGhpZ2ggY3VybHkgcG9ueXRhaWwgYW5kIHdhcyBuaWNrbmFtZWQgcGluZWFwcGxlIGhlYWQgYnkgYSBib3kgYXQgc2Nob29sLCcgc2hlIGV4cGxhaW5zLiAnSSBkaWRuJ3QgdGhpbmsgSSB3YXNuJ3QgYmVhdXRpZnVsIGJ1dCBJIHdhcyBhd2FyZSB0aGVyZSB3YXMgc29tZXRoaW5nIGFib3V0IG1lIHRoYXQgbWFkZSBtZSBkaWZmZXJlbnQuClRlbmV6IDogbGUgcGx1cyBjb25udSBkYW5zIGxlIGdlbnJlICBob21tZSBkZXMgYm9pcyAgOiBUQVJaQU4uIFJlZ2FyZG9ucyBsJ2ltYWdlIEJEIGQnZW4gZGVzc291cy4gCkFmdGVyIGFsbCwgaWYgYm91cmdlb2lzIGJveXMgb25seSBrbmV3IHRoZSBzb2Z0IGhhbmRzIGFuZCBzb2Z0ZXIgc3RvbWFjaHMgb2YgZGVzayBqb2JzLCB0aGV5IHdvdWxkIGJlIGxpa2Ugd29tZW4gYW5kIHRoZSB3aGl0ZSBtaWRkbGUgY2xhc3Mgd291bGQgbG9zZSB0aGVpciBzdGF0dXMgYXMgdGhlIG1vc3QgZXZvbHZlZCBncm91cCBhbW9uZyBodW1hbnMuIApMaW5rIHRvIG1vZGVsIGJlZm9yZSBJIHN0cmlwZWQgdGhlIHBhaW50IG9mZi4KQWZ0ZXIgdGhlIHNldmVudGggY2FyZCBpcyBkZWFsdCwgZWFjaCByZW1haW5pbmcgcGxheWVyIHRha2VzIHR3byBjaGlwcyBhbmQgaGlkZXMgdGhlbSBiZWhpbmQgaGlzIGJhY2sgd2l0aCBib3RoIGhhbmRzLiBUaGUgcGxheWVycyB0aGVuIGJyaW5nIG9uZSBoYW5kIGZvcndhcmQgYW5kIHNpbXVsdGFuZW91c2x5IHJldmVhbCB0aGUgY29udGVudHMuIApUaGF0IGZpZ3VyZSB3YXMgc3Vic3RhbnRpYWxseSBkb3duIG9uIHRoZSAkNjgxLDQxMiBnYW1pbmcgbWFjaGluZSBzcGVuZGluZyBpbiAyMDEwIDIwMTEuCk9mIG91ciBkZWNvcmF0aW9ucyBoYXZlIHNlbnRpbWVudGFsIHZhbHVlLCBzYXlzIEppbGwuIFRoZSBudXRjcmFja2VycywgZm9yIGluc3RhbmNlLCBhcmUgcGFydCBvZiBhIGxhcmdlciBjb2xsZWN0aW9uIHNoZSBoYXMgYW1hc3NlZCBvdmVyIHRoZSB5ZWFycyBmb3IgU2Vhbiwgd2hpbGUgYSBjb2xsZWN0aW9uIG9mIHNub3cgZ2xvYmVzIGJlbG9uZyB0byB0aGVpciBvbGRlc3Qgc29uLCBSeWFuLgpUaGUgdW53aWxsaW5nIHRvIHdvcmsgcGFydCB3YXMgcmVtb3ZlZCBmcm9tIHRoZSBub24gYmluZGluZyByZXNvbHV0aW9uIGFueXdheS4KSSB0aGluayBJIHdhcyBub3QgZnVsbHkgcHJlcGFyZWQgZm9yIHRoZSBmYWN0IHRoYXQgbm90IGV2ZXJ5IEFzaWFuIHlvdSBtZWV0IGlzIHlvdXIgZnJpZW5kLiBOYWl2ZSwgSSBrbm93IEkgd2FzIGFyb3VuZCAxNiB3aGVuIEkgbW92ZWQgYmFjayB0byBTb0NhbC4gQnV0IEkgZ3JldyB1cCBpbiBwbGFjZXMgd2hlcmUgYW55b25lIHdobyBsb29rZWQgcmVtb3RlbHkgbGlrZSB5b3UgYmVjYW1lIGluc3RhbnQgZmFtaWx5LCByZWdhcmRsZXNzIG9mIHdoZXJlIHRoZXkgY2FtZSBmcm9tLiBNeSAiYWRvcHRlZCIgZ3JhbmRwYXJlbnRzIHdlcmUgYW4gb2xkZXIgSmFwYW5lc2UgY291cGxlIHdlIG1ldCBhdCBjaHVyY2gsIHRoZSBvbmx5IG90aGVyIEFzaWFucyB3aG8gYXR0ZW5kZWQuIEluIGVuY2xhdmVzIHdlIGNhbiBhZmZvcmQgdG8gc2VncmVnYXRlIG91ciBzb2NpYWwgZ3JvdXBzIGJ5IHdoaWNoIGNvdW50cnkgb3IgcmVnaW9uIHdlIGNhbWUgZnJvbS4gSSBlbmNvdW50ZXJlZCBwZW9wbGUgd2hvIHdpbGwgdGFrZSBhZHZhbnRhZ2UgYW5kIGZvc3RlciBhIGZhbHNlIHNlbnNlIG9mIGtpbnNoaXAgYmFzZWQgb24gc2hhcmVkIGhlcml0YWdlLiBQYXJ0IG9mIG15IGdyb3dpbmcgdXAgaW52b2x2ZWQgY29taW5nIHRvIHRoaXMgcmVhbGl6YXRpb24uCkluIG9yZGVyIHRvIHJlY2VpdmUgRWxlY3Ryb25pYyBDb21tdW5pY2F0aW9ucywgeW91IG11c3QgaGF2ZSBhIGRldmljZSBhbmQgb3BlcmF0aW5nIHN5c3RlbSBzb2Z0d2FyZSB0aGF0IHdpbGwgc3VwcG9ydCBhbmQgcGVybWl0IGEgY29ubmVjdGlvbiB0byB0aGUgaW50ZXJuZXQsIGEgc29mdHdhcmUgcHJvZ3JhbSB0aGF0IGNhbiByZWFkIGFuZCBkaXNwbGF5IFBERnMsIGFuZCBhbiBpbnRlcm5ldCBicm93c2VyIHN1cHBvcnRlZCBieSBTdW4gVGltZXMuIFlvdXIgYWNjZXNzIHRvIHRoaXMgcGFnZSB2ZXJpZmllcyB0aGF0IHlvdXIgc3lzdGVtIGFuZCBkZXZpY2UgbWVldCB0aGVzZSByZXF1aXJlbWVudHMuIFlvdSBhbHNvIGNvbmZpcm0gdGhhdCB5b3UgaGF2ZSBhY2Nlc3MgdG8gdGhlIG5lY2Vzc2FyeSBlcXVpcG1lbnQgYW5kIGFyZSBhYmxlIHRvIHJlY2VpdmUsIG9wZW4sIHN0b3JlLCBhbmQgcHJpbnQgRWxlY3Ryb25pYyBDb21tdW5pY2F0aW9ucy4gU3VuIFRpbWVzIHdpbGwgbm90aWZ5IHlvdSBpZiB0aGVyZSBhcmUgYW55IG1hdGVyaWFsIGNoYW5nZXMgdG8gdGhlIG5lY2Vzc2FyeSBoYXJkd2FyZSBvciBzb2Z0d2FyZSB0byByZWNlaXZlLCBvcGVuLCBzdG9yZSwgb3IgcHJpbnQgRWxlY3Ryb25pYyBDb21tdW5pY2F0aW9ucy4KQXBwcm92YWwgdm90aW5nIHdvdWxkIGNob29zZSB0aGUgbW9zdCB2aWFibGUgZ2VuZXJhbCBlbGVjdGlvbiBjYW5kaWRhdGUsIGFuZCB3ZSB3b24gZ2V0IEhpbGxhcnkgMjAxNiBzaXR1YXRpb24gYW55bW9yZSwgd2hlcmUgYSBjYW5kaWRhdGUgd2l0aCBodWdlIGFudGkgcmF0aW5nIGV2ZW4gYW1vbmcgRGVtb2NyYXRzIHdhcyBzZWxlY3RlZCB0byBydW4gYnkgdGhlIHBhcnR5Li4gCiJJIGhhdmUgYXR0ZW5kZWQgdGhlIGZpbmVzdCBwYXJ0aWVzIGFsbCBvdmVyIHRoZSB3b3JsZCwgYnV0IG5vdGhpbmcgdGhhdCBjb21wYXJlcyB0byB0aGlzLCIgcmVjb3VudHMgTXlyYSBKb25lcywgYSBNaWxhbiBiYXNlZCBmYXNoaW9uIG1vZGVsIHdobyB3b3VsZCBqZXQgaW4gZm9yIHRoZSBhbm51YWwgZXZlbnQuICJFdmVyeXRoaW5nIHlvdSB3YW50ZWQgd2FzIGF2YWlsYWJsZSBhdCBHdXkncyBwYXJ0aWVzICAgZHJ1Z3MsIHRoZSBiZXN0IG11c2ljIHNwdW4gYnkgZmFtb3VzIERKcyBmbG93biBpbiBmcm9tIEV1cm9wZSBhbmQgdGhlIFVTLCBhbmQgdGhlIHdpbGRlc3Qgc2V4IHlvdSBjb3VsZCBldmVyIGltYWdpbmUuIgpJIGRvbid0IHdhbnQgYW55IHNlY29uZCBoYW5kIGdvb2RzLCBiZWxpZXZlIE1FLiBBcyBmb3IgSG9yYWNlIEJheHRlciwgaGUgd2FzIGluIGZpbmFuY2lhbCBkaWZmaWN1bHRpZXMgYSB5ZWFyIGFnbyBsYXN0IHN1bW1lciwgYW5kIGhlIHByYXllZCB0byB0aGUgTG9yZCBmb3IgaGVscDsgYW5kIHdoZW4gaGlzIHdpZmUgZGllZCBhbmQgaGUgZ290IGhlciBsaWZlIGluc3VyYW5jZSBoZSBzYWlkIGhlIGJlbGlldmVkIGl0IHdhcyB0aGUgYW5zd2VyIHRvIGhpcyBwcmF5ZXIuIFdhc24ndCB0aGF0IGxpa2UgYSBtYW4/Ii4gCkZ1ZXIgYWxsZSBkaWUgc2ljaCBzY2hvbiBpbW1lciBnZWZyYWd0IGhhYmVuLCB3YXMgZGllIERpc2t1c3Npb24gbWl0IGRlbiBlbnRob3JudGVuIEtoZW4gYXVmIHNpY2ggaGF0LCBtY2h0ZW4gd2lyIFNpZSBnZXJuZSBlaW5sYWRlbiwgZWluIFN0Y2sgQWxsZ3VlciBFbW1lbnRhbGVyIGltIExhZGVuIHp1IHByb2JpZXJlbiwgbWl0IGRlbSBXaXNzZW4sIGRhc3M6CkEgbG90IG9mIG15IHBsYXkgKGxpdmUpIGlzIHJlYWxseSBkZXBlbmRlbnQgb24gdGhlIHBsYXllcnMgYW5kIHdoYXQgSSBsZWFybmVkIGZyb20gdGhlbS4uIApXZSBnb3QgdG8gdGFsa2luZyBhbmQgaGUgd2FzIHNheWluZyB0aGF0IGhlIGtuZXcgaGUgc2hvdWxkbiBoYXZlIGdvbmUgb3V0LCBidXQgaGlzIHNpY2sgd2lmZSBqdXN0IHdhbnRlZCBpY2UgY3JlYW0gYW5kIHdhbnRlZCB0byBnZXQgaXQgZm9yIGhlci4gCkl0IHdpbGwgbm90IHByb3ZpZGUgaG91c2luZyBvciBoZWFsdGhjYXJlIG9yIGdvb2Qgc2Nob29scyBvciBhIGNsZWFuIGVudmlyb25tZW50LiBTbyBiZWZvcmUgeW91IGdvIGFuZCBiZXQgdGhlIGZhcm0gYmVjYXVzZSBXYWxsIFN0LiAKOCwgOSBJbiBoZWFsdGh5IHBlb3BsZSwgdGhlcmUgaXMgY29uc2lkZXJhYmxlIHZhcmlhYmlsaXR5IGluIGd1dCBiYWN0ZXJpYWwgY29tcG9zaXRpb24sIGFuZCB5ZXQgaWYgdGhlIHNhbWUgcGVyc29uJ3MgZ3V0IGJhY3RlcmlhIGFyZSBleGFtaW5lZCBhdCBkaWZmZXJlbnQgdGltZXMgKGEgZmV3IG1vbnRocyBvciBtb3JlIGFwYXJ0KSwgdGhleSBoYXJkbHkgY2hhbmdlLjQsIDEwLCAxMiBCdXQgaW4gc3RyZXNzZnVsIHNpdHVhdGlvbnMsIG9yIGluIHJlc3BvbnNlIHRvIHBoeXNpb2xvZ2ljYWwgb3IgZGlldCBjaGFuZ2VzLCB0aGUgbWljcm9iaW90YSBwcm9maWxlIG1heSBpdHNlbGYgY2hhbmdlLCBjcmVhdGluZyBhbiBpbWJhbGFuY2UgaW4gaG9zdCBtaWNyb2Jpb3RhIGludGVyYWN0aW9ucy4gU3VjaCBjaGFuZ2VzIGNhbiBhZmZlY3QgdGhlIHBlcnNvbidzIGhlYWx0aC5HdXQgbWljcm9iaW90YSBhcmUgaW1wb3J0YW50IHRvIGhlYWx0aHkgYnJhaW4gZGV2ZWxvcG1lbnQuIApOWUdCYWJlMTMgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIHllYXIgYWdvCkhpa2VkIHRoZSBQQ1QgYW5kIGEgZnJpZW5kIHdpdGggTGVraSBoYWQgdG8gY2hhbmdlIGhpcyB0aXBzIDMgdGltZXMgd2hpbGUgdGhlIENQMyB0aXBzIGFyZSBzdGlsbCBnb2luZyBzdHJvbmcgKHRoaXMgbWlnaHQgYmUgcGFydGx5IGR1ZSB0byBoaWtpbmcgc3R5bGUsIGJ1dCBzYXcgc2ltaWxhciB0aGluZyB3aXRoIG90aGVyIHBlb3BsZSBhbmQgYnJhbmQgb2YgcG9sZXMgYXMgd2VsbCkuCkNoYXJpdGllcywgaG9zcGl0YWxzIGFuZCBjdWx0dXJhbCBlbmRlYXZvcnJzLgpMZXRzIHBsYXkgc29tZSBwb2tlciEgVGhpcyBpcyBvZnRlbiBoZWFyZCBpbiBhIExvbmRvbiBwZW5zaW9uZXJzIHJlc2lkZW50aWFsIGhvbWUgICB0aGUgbW9zdCB1bmxpa2VseSBvZiBhbGwgcGxhY2VzLiBNb3JlIGFuZCBtb3JlIHBlb3BsZSBhcmUgdHVybmluZyB0byBwb2tlciB0aGVzZSBkYXlzLiBQb2tlciBoYXMgc2hvd24gYW4gdW5wcmVjZWRlbnRlZCBncm93dGggaW4gcG9wdWxhcml0eSBpbiB0aGUgbGFzdCBmZXcgeWVhcnMuIApTZW5lY2EsIE1pc3NvdXJpIDY0ODY1CkhpZXJvbmRlciBzdGFhbiBkZSB6ZXZlbiBjb21wZXRlbnRpZWdlYmllZGVuLCB6b2FscyBiZXNjaHJldmVuIGRvb3IgZGUgS05HRiByaWNodGxpam4gdm9vciBoZXQgYmVyb2Vwc3Byb2ZpZWwgKDEpLCBlbiBkZSBiaWpiZWhvcmVuZGUgY29tcGV0ZW50aWVzIHpvYWxzIGdlZm9ybXVsZWVyZCBkb29yIGRlIGNvbXBldGVudGllYmVzY2hyaWp2aW5nIHZhbiBkZSBIb2dlc2Nob29sIHZhbiBBbXN0ZXJkYW0gKDIpLiBQZXIgY29tcGV0ZW50aWVnZWJpZWQgemlqbiBlciBkdXMgdmVyc2NoaWxsZW5kZSBjb21wZXRlbnRpZXMgb3BnZXN0ZWxkLCBkZXplIGNvbXBldGVudGllcyBiZXNjaHJpanZlbiBkZSBoYW5kZWxpbmdlbiBlbiB2ZXJlaXN0ZW4gZGllIHZhbGxlbiBvbmRlciBoZXQgYmlqYmVob3JlbmRlIGNvbXBldGVudGllZ2ViaWVkLiBBbHMgdG9ldm9lZ2luZyBoZWIgaWsgaGV0IGNvbXBldGVudGllcHJvZmllbCB2YW4gZGUgSG9nZXNjaG9vbCB2YW4gQW1zdGVyZGFtIG9uZGVyIGFhbiBkZSBwYWdpbmEgZ2VwbGFhdHN0LiBIaWogdG9vbnQgcHJvZmVzc2lvbmVlbCBnZWRyYWcgbmFhciBkZSBzdGFuZCB2YW4gaGV0IHZha2dlYmllZC4gSGlqIHZlcnphbWVsdCBlbiBpbnRlcnByZXRlZXJ0IGdlZ2V2ZW5zLCB6b2RhdCBoaWogaW4gaGV0IHNjcmVlbmluZ3MgLCBkaWFnbm9zdGlzY2hlIGVuIHRoZXJhcGV1dGlzY2hlIHByb2NlcyB2b2xnZW5zIGRlIHByaW5jaXBlcyB2YW4gRUJQIGJlc2xpc3NpbmdlbiBuZWVtdCBiaW5uZW4gZGUgZ3JlbnplbiB2YW4gaGV0IGJlcm9lcC4gSGlqIHZlcmxlZW50IHVwIHRvIGRhdGUsIGVmZmVjdGlldmUsIGN1cmF0aWV2ZSBlbiBwcmV2ZW50aWV2ZSB6b3JnIG9wIGV0aGlzY2ggdmVyYW50d29vcmRlIHdpanplLgpIb25leW1vb24gYW5kIEhpdGNoY29jayBTY3VsbHkgd2VyZSBzb2xpZCwgYnV0IGl0IHJlYWxseSBmZWxsIG9mZiBzaW5jZSB0aGVuLiAKV2hlbiB0cmVhdGVkIGFzIGEgc3VtbWFyeSBjb252aWN0aW9uLCB0aGUgbWF4aW11bSBwZW5hbHR5IGlzIHR3byB5ZWFycyBsZXNzIGEgZGF5IGFuZCB0aGUgbWluaW11bSBpcyA5MCBkYXlzS2luZ3N2aWxsZSBGaXJlIENoaWVmIEJvYiBLaXNzbmVyIHB1dHMgZG93biBweWxvbnMgYXQgdGhlIHNjZW5lIG9mIGEgY2FyIGNyYXNoIGF0IHRoZSBNYWluIFN0cmVldCBQbGF6YSBpbiBBcHJpbCAyMDA4T1BQIG9yaWdpbmFsbHkgc2FpZCBLaXNzbmVyIHdvdWxkIGF0dGVuZCBhIGJhaWwgaGVhcmluZyBpbiBXaW5kc29yIG9uIFN1bmRheS4gCkxvb2tpbmcgYmFjaywgdGhlIHRpbnkgYW1vdW50IG9mIEVWIHdhc24gcmVtb3RlbHkgd29ydGggcnVpbmluZyB0aGF0IGxhZHkgZXZlbmluZy4gSSB3YXMgc28gZXhjaXRlZCB0byByZWFsaXplIHRoYXQgSSBjb3VsZCBpbW1lZGlhdGVseSBuZXQgJDIwIGluIEVWLCB0aGF0IEkgZGlkbiByZWFsaXplIHRoYXQgdGhlIGNvc3Qgd2FzIG1lIGFjdGluZyBsaWtlIGEgdG9vbGJhZy4gCkYgRFNHVk8gLiBTdGFtbWVuIHVudGVyIGFuZGVyZW0gdm9uIGV4dGVybmVuIFdlcmJldW50ZXJuZWhtZW4gdW5kIHdlcmRlbiB2ZXJ3ZW5kZXQsIHVtIEluZm9ybWF0aW9uZW4gYmVyIGRpZSB2b20gTnV0emVyIGJlc3VjaHRlbiBXZWJzaXRlcyB6dSBzYW1tZWxuLCB1bSB6LiBCLiAKU2xhaW5lIHdhcyBhIGZyaWVuZCBvZiBtaW5lIHRvby4gCkZvciB0aGUgZmlyc3QgNyB5ZWFycyBvZiBteSBjaGlsZCBsaWZlLCBJIHdhcyBoaXMgb25seSBwYXJlbnQuIApJZiB5b3UgY2FuIHNlZSB5b3Vyc2VsZiBnb2luZyBpbnRvIGEgImZ1bGwgcmVsYXBzZSIgdGhlbiB3aGF0IHZhbHVlcyBkaWQgeW91IHJlYWxseSBob2xkIG9uIHRoZSB0b3BpYz8gSW1hZ2luZSB5b3Vyc2VsZiBzYXlpbmcgdGhlIHNhbWUgdGhpbmcgYWJvdXQgcmFjZSBoYXRyZWQuCjIyIG51bWJlciBvZiBvdXRzIGF0IHRoZSBtb21lbnQgKHByZWZsb3ApIGlzIG5vdCByZWxldmFudDsgSXQncyBBSyB3aG8gaXMgaW4gZGFuZ2VyLiBGaW5hbGx5LCBkb24ndCBmb3JnZXQgdGhhdCBBSyBpcyBzdGlsbCBsb3NlIGlmIGVpdGhlciBBIG9yIEsgZmxvcHMgdGhlIGJvYXJkIGFuZCBhbm90aGVyIDIgZ2V0cyBpbi4KWW91IGtlZXAgdGFsa2luZyBhYm91dCBob3cgZ3JlYXQgdGhlIE5IUyBpcywgSSB3b24gYXNrIHRvIGJyaW5nIG91dCBhIGNpdGF0aW9uIHRoYXQgdGVsbHMgdXMgdGhlIGNyaXRlcmlhIG9yIGNhdGVnb3JpZXMsIGl0IG5vdCBnZXJtYW5lIHRvIHRoZSBmYWN0IHRoYXQgaXQgdG90YWxseSBkZXBlbmRlbnQgb24gdGhlIGdvdmVybm1lbnQgZm9yIGZ1bmRpbmcuClNlY29uZCBtb3ZlOiBTZWxsIGJvdGggdW5wcm9maXRhYmxlIHJlbnRhbCBwcm9wZXJ0aWVzLiBDb25kbyAxIGhhcyBhbiBlc3RpbWF0ZWQgdmFsdWUgb2YgJDYyNSwwMDAgYW5kIGEgJDM2OCwwMDAgY29zdC4gCldlIHRoZW4gc29sZCA2LzEyIG1vbnRoIHBhY2thZ2VzIGFuZCBwcm9tb3RlZCB0aGlzIGNvdXJzZSBhY2NvcmRpbmdseS4gCkFzc2F1bHQgV2VhcG9uIG1lYW5pbmcgc2NhcnkgYmxhY2sgcmlmbGVzIChzZXJpb3VzbHkgICB0aGVyZSBhcmUgc28gbWFueSBvZnRlbiBjb25mbGljdGluZyBkZWZpbml0aW9ucyB0aGF0ICJzY2FyeSIgYW5kICJibGFjayIgaXMgYWJvdXQgdGhlIG9ubHkgc2VtaSBjb21tb24gcGllY2Ugb2YgdGhhdCB0ZXJtKQpBcyBhIHRyYW5zIHBlcnNvbiBpdCBnZXRzIHN1cGVyIGZ1Y2tpbmcgdGlyaW5nIGhhdmluZyB0byBjb25zdGFudGx5IHZpZXcgeW91cnNlbGYgYXMgcG90ZW50aWFsICJhbWJhc3NhZG9yIGZvciB5b3VyIHBlb3BsZSIuIApMb3ZlIGhhdmluZyBlaWdodCB0byAxMCBkaWZmZXJlbnQgZGlzaGVzIGZvciBmb3VyIHRvIHNpeCBndWVzdHMsIGhlIHNheXMuIGl0IGltcG9zc2libGUgdG8ga25vdyB3aGF0IGFsbCB5b3VyIGd1ZXN0cyBwcmVmZXIgdG8gZWF0LCBJIGxpa2UgdG8gaGF2ZSBhIGdvb2Qgc3ByZWFkIHRvIGd1YXJhbnRlZSB0aGVyZSBpcyBzb21ldGhpbmcgZm9yIGV2ZXJ5b25lLiBTZXJ2ZSBzaW1wbGUsIHdlbGwgcHJlcGFyZWQgZGlzaGVzIHdpdGggbGl0dGxlIGZ1c3MuIGFuZCBzZWFzb25hbGl0eQpTbywgaG93IGRvZXMgYSBjYXNpbm8gZWFybiBtb25leSBmcm9tIGFsbCB0aGVzZSBjYXNpbm8gYm9udXMgb2ZmZXJzPwpUaGUgdHdvIGZpbGwgb3V0IHRoZSBzb3VuZCB3ZWxsIHdpdGhvdXQgYW55IGFwcGFyZW50IGRvdWJsZSB0cmFja2luZyBvZiB0aGVpciBpbnN0cnVtZW50cy4gUGx1dGEgaXMgYSB2aXJ0dW9zbyBvbiBEb2JybywgYW5kIHRoZXkgbWl4IHRoZWlyIGd1aXRhciBwYXJ0cyBzZWFtbGVzc2x5LiBQbGFpbnRpdmUsIGFsbW9zdCBnaXJsaXNoIHZvaWNlIGFuZCBHb3Jkb24ncyBsb3cga2V5IGRlbGl2ZXJ5IGZpdCByaWdodCBpbnRvIHRoZWlyIEFwcGFsYWNoaWFuIHNvdW5kLiAKSXQncyBhIGdvb2QgaWRlYSB0byBzZWl2ZSBmbG91ciBiZWZvcmUgYWRkaW5nIGl0IHRvIGdldCBtb3JlIGFpciBpbiBpdC4gCkJ5IGdldHRpbmcgaW50byB0aGVzZSBoYWJpdHMsIHlvdSB1bHRpbWF0ZWx5IHNhdmUgbW9uZXkgaW4gdGhlIGxvbmcgcnVuIGFuZCBiZSBwcmVwYXJlZCBmb3IgdGhvc2UgZXZlbmluZ3Mgd2hlbiB5b3UgbWlnaHQgYmUgcnVzaGVkIG9yIGxhY2tpbmcgaW4gZnVuZHMuLiAKSW5zdGVhZCBvZiBlZHVjYXRpbmcgdGhlbSBvbiB3aGF0IHRvIGJyb3dzZSBhbmQgd2hhdCBub3QgdG8gYnJvd3NlLCB0aGV5IGZlYXIgY2hpbGRyZW4gd2lsbCBiZSB0YWludGVkIGJ5IHNlZWluZyBhIHRpdHR5LiBLb3JlYW4gc29jaWV0eSBpcyBzdGlsbCBoZWF2aWx5IGJhc2VkIG9uIHB1cml0eSBhbmQgaW1hZ2UsIGFuZCB3aGlsZSBJIGFsd2F5cyByZXNwZWN0IHRob3NlIHdobyBoYXZlIHNlbGYgcmVzcGVjdCwgaXQganVzdCBzZWVtcyBiZXR0ZXIgdG8gbGV0IHRoZSBwb3B1bGF0aW9uIGRvIHdoYXQgdGhleSB3YW50IGluc3RlYWQgb2YgdHJ5aW5nIHRvIGhvbGQgYmFjayB0aGUgZmxvb2RnYXRlcy4gCkRlc3BpdGUgdGhlIHJpc2tzLCBtb3N0IGV4cGVydHMgYXQgV2hhcnRvbiBzYXkgdGhleSB3b3VsZCBoYXZlIHRha2VuIHRoZSBzYW1lIGRlYWwgdGhhdCBaeW5nYSBzaWduZWQgd2l0aCBGYWNlYm9vay4gCkkgZ2V0IEFBIGluIE1QLCBvcGVuIHRvIDE1LiBCdXR0b24gM2JldHMgdG8gMzMsIGFuZCBoYWQgYWN0dWFsbHkgZG9uZSB0aGlzIGV4YWN0IHNhbWUgdGhpbmcgdG8gbWUgYWJvdXQgYW4gb3JiaXQgYWdvIHdpdGggS0sgc28gSSBmaWd1cmUgaGUncyBwcm9iYWJseSBwcmV0dHkgc3Ryb25nIGhlcmUsIGhlJ2QgYmVlbiBwbGF5aW5nIHByZXR0eSBzdHJhaWdodGZvcndhcmQgc28gYSByYW5nZSBvZiBBSyBUVCBtb3N0IGxpa2VseS4gSGUgc3RhcnRzIHRoZSBoYW5kIHdpdGggNDAwLiAKMzMgMDAwIFZJSUk6VmFzdHN0ZWxsaW5nIHZhbiBkZSBiZWdyb3Rpbmdzc3RhdGVuIHZhbiBoZXQgTWluaXN0ZXJpZSB2YW4gT25kZXJ3aWpzLCBDdWx0dXVyIGVuIFdldGVuc2NoYXAoVklJSSl2b29yIGhldCBqYWFyIDIwMTIsIE5yLiA1OS4gQnJpZWYgdmFuIGRlIG1pbmlzdGVyIHZhbiBPbmRlcndpanMsIEN1bHR1dXIgZW4gV2V0ZW5zY2hhcC5bR29vZ2xlIFNjaG9sYXJdKS4gCkZvciBleGFtcGxlIHJpZGluZyBiaWtlcyB1bnNhZmVseSwgY2xpbWJpbmcgdGhpbmdzIHRoZXkgc2hvdWxkbiBldGMuIApSZWdhcmRpbmcgc2FmZXR5LCB0aGV5IG1heSBiZSBtb3JlIHNhZmUgaWYgeW91IGFyZSBtYWRlIG9mIHBhcGVyIGJ1dCB0b3VjaGluZyBhIDMwMCBkZWdyZWUgaW5kdWN0aW9uIHRvcCBhbmQgYSA0MDAgZGVncmVlIGJ1cm5lciBleWUgaXMgbmVnbGlnaWJsZSB3aGVuIHlvdSBhcmUgZ29pbmcgdG8gcmVtb3ZlIHlvdXIgaGFuZCB3aXRoaW4gYSBxdWFydGVyIG9mIGEgc2Vjb25kLiBJIGFyZ3VlIHRoYXQgdGhlIGZhbHNlIHNlbnNlIG9mIHNhZmV0eSBjcmVhdGVzIGEgcG90ZW50aWFsbHkgbW9yZSBkYW5nZXJvdXMgZW52aXJvbm1lbnQgaWYgdGhleSBhcmUgbGVmdCB1bmF0dGVuZGVkLi4gClBsZWFzYW50IHBlcnNvbmFsaXRpZXMgaGF2ZSBpbXBlY2NhYmxlIHN0YW5kYXJkLiBUaGV5IG5ldmVyIG1peCB1cCB0aGVpciBvZmZpY2lhbCBsaXZlcyB3aXRoIHBlcnNvbmFsIHRpbWUgYW5kIGxpZmUuIENoYXJhY3RlciBpcyBzaW5nbGUgbW9zdCBzaWduaWZpY2FudCBhc3BlY3QgaW4gdGhlIGRldmVsb3BtZW50IG9mIHBsZWFzaW5nIGF0dGl0dWRlLgpBUlBBTkVULCBvbmUgb2YgdGhlIEludGVybmV0J3MgcHJlZGVjZXNzb3JzLCBiZWdhbiBtb2Rlc3RseSBhcyBhIHRocmVlIG5vZGUgbmV0d29yay4gR3JhZHVhbGx5LCBzbWFydCBwZW9wbGUgYmVnYW4gdG8gbGluayBuZXR3b3JrcyB0b2dldGhlciB1c2luZyBwcm90b2NvbHMgZnJvbSB0aGUgQVJQQU5FVCBwcm9qZWN0LiBJbiB0aGUgMTk4MHMsIHRoaXMgbmV0d29yayBwcm92ZWQgdG8gYmUgYSB2YWx1YWJsZSB0b29sIGZvciByZXNlYXJjaCBhbmQgY29tbXVuaWNhdGlvbi4gCkEgSmFudWFyeSAyMDE1IGFydGljbGUgb24gUG9rZXIgR3VydSwgYSB3ZWJzaXRlIG9uIHRoZSBnYW1lIGluIEluZGlhLCBsaXN0ZWQgc2V2ZXJhbCAieW91bmcgZ3VucyIgd2hvIGJlZW4gdG8gVmVnYXMgdG8gcGxheSBpbiBXU09QIGluY2x1ZGluZyBTYWhpbCBBZ2Fyd2FsLCBhIDI3IHllYXIgb2xkIElUIGVuZ2luZWVyIGZyb20gQmh1YmFuZXN3YXIgZW1wbG95ZWQgd2l0aCBJbmZvc3lzLCBSYWFoaWwgQmhhdGlhIGZyb20gRmFyaWRhYmFkIGFuZCBEeXV0aWRoYXIgU3VyZXNoIGZyb20gQmFuZ2Fsb3JlLiAKUGxheWluZyB0aWdodCBtZWFucyBmb2xkaW5nIG92ZXIgOTAlIG9mIHlvdXIgaGFuZHMgaW4gdGhlIGZpcnN0IHRocmVlIHJvdW5kcy4gSWYgdGhpcyBzb3VuZHMgYm9yaW5nLCB3ZWxsLCBpdCBpcywgYnV0IGtlZXAgaW4gbWluZCB0aGF0IHRoZSBiaWdnZXN0IHNpdCBhbmQgZ28gd2lubmVycyBhdCB0aGUgaGlnaGVzdCBzdGFrZXMgb25seSBwbGF5IHNsaWdodGx5IG1vcmUgaGFuZHMgdGhhbiB0aGlzLCBwZXJoYXBzIDE1JSBvciBzby4gCkNlbHVpIHF1ZSBsZXMgU2lvdXggbm9tbWVudCBXYWtpbnlhbiB0cm91dmUgc29uIG9yaWdpbmUgIHRyYXZlcnMgbCBvcmlnaW5lbCwgbGUgV2FraW55YW4gVGFua2EgKGF1dHJlbWVudCBkaXQsIGxlIEdyYW5kIE9pc2VhdSBUb25uZXJyZSkgZGUgbCd1ZiBkdXF1ZWwgZGUgcGV0aXRzIHdha2lueWFucyBzZXJhaWVudCBpc3N1cy4gCkFtb25nIHN1cnZpdm9ycywgdmljdGltcyBmYW1pbHkgbWVtYmVycywgZmlyc3QgcmVzcG9uZGVycyBhbmQgZWxlY3RlZCBvZmZpY2lhbHMgb2ZmZXJpbmcgcHJheWVycywgc29uZ3MgYW5kIHNwZWVjaGVzIG9uIE1vbmRheSwgTXluZGEgU21pdGggd2lsbCByZW1lbWJlciBoZXIgc2lzdGVyLgpUaGlzIHdhcyBhIDcgc3RhciBjbHViIHdpdGggMTAwMCBwbGF5ZXJzLiAKTGl2ZSBhY3Rpb24gcGxheWVycyBtYWtlIG1vcmUgY2FsbGluZyBtaXN0YWtlcyB0aGFuIGJldHRpbmcgb3IgZm9sZGluZyBtaXN0YWtlcywgc2VlIGZsb3BzIGRlZXAgaW4gcG9zaXRpb24gbm90IGdldCBzdHVjayBzdGFja2luZyBvZmYgYW55IGZsb3AgeW91IHBhaXIgd2l0aCBhbiBvZnRlbiBkb21pbmF0ZWQgaGFuZC4gCkFuIGhvdXIgYW5kIGEgaGFsZiBvZiBwYWluIGxhdGVyIC4gClN1Ym1pdCB0aGVpciBwcm9maWxlcyBmb3IgcmV2aWV3IGFuZCBNci4gUm9sbGVyIGdpdmVzIHRoZW0gYSB0ZXN0IGRlc2lnbi4gT25jZSBpbiB0aGUgc3lzdGVtLCB3b3JrIGlzIHJldmlld2VkIG9uIGEgbW9udGhseSBiYXNpcy4gCkxpbmsgb25seSBwb3N0cyBhcmUgbm90IGFsbG93ZWQgZXZlbiBmcm9tIGFjdGl2ZSBtZW1iZXJzIG9mIHRoZSBjb21tdW5pdHk6IGxpbmtzIG1heSBiZSB1c2VkIGFzIGFuIGlsbHVzdHJhdGlvbiBvZiBhIGJyb2FkZXIgcG9pbnQsIG5vdCBhcyB0aGUgY2VudGVycGllY2Ugb2YgdGhlIHBvc3QuIApBZCBBZ2UgY2F1Z2h0IHVwIHdpdGggSGF0Y2ggZm9yIGEgcXVpY2sgdmlkZW8gY2hhdCBhbmQgYSBnYW1lIGRlc2lnbmVkIHRvIGdldCBmcmFuaywgb2ZmIHRoZSBjdWZmIGFuc3dlcnMgdG8gc29tZSBvZiB0aGUgYmlnZ2VyIHF1ZXN0aW9ucyB0b2RheSAocGx1cyBvbmUgb3IgdHdvIHNvZnRiYWxscykuIFdhdGNoIGJlbG93IHRvIHNlZSB3aGF0IHNoZSBoYWQgdG8gc2F5IG9uIHRoZSBldm9sdXRpb24gb2YgdGhlIG1vZGVybiBDTU8uICAgQnJpYW4gQnJhaWtlckFOQSBoYXMgcnVuIGl0cyAiTWFzdGVycyBvZiBNYXJrZXRpbmciIGNvbmZlcmVuY2UgaW4gdGhlIHNoYWRvdyBvZiBEaXNuZXkgV29ybGQgZm9yIHllYXJzLCBidXQgRGlzbmV5IGhhcyB0eXBpY2FsbHkgbm90IGhhZCBtdWNoIG9mIGEgcHJlc2VuY2UgaGVyZSBhdCB0aGUgT3JsYW5kbyBldmVudC4gVGhhdCBjaGFuZ2VkIHRoaXMgeWVhciwgaG93ZXZlci4gRGlzbmV5IHNwb25zb3JlZCBGcmlkYXkgbW9ybmluZydzIGNvZmZlZSBicmVhayBhbmQgcGx1Z2dlZCBpdCB3aXRoIGEgY3VzdG9tIHZpZGVvIHRoYXQgbWFkZSB1c2Ugb2YgRGlzbmV5IG93bmVkIEFCQyBhbmQgRVNQTiBwZXJzb25hbGl0aWVzLCBpbmNsdWRpbmcgIkdvb2QgTW9ybmluZyBBbWVyaWNhIiBob3N0cyBHZW9yZ2UgU3RlcGhhbm9wb3Vsb3MsIFJvYmluIFJvYmVydHMgYW5kIE1pY2hhZWwgU3RyYWhhbi4gSXQgZW5kZWQgd2l0aCBFU1BOJ3MgU2FnZSBTdGVlbGUgaW50ZXJ2aWV3aW5nIEFOQSBDRU8gQm9iIExpb2RpY2UgYXMgaWYgaGUgd2FzIGEgc3RhciBhdGhsZXRlLiAiQXMgeW91IGdldCByZWFkeSB3YWxrIG9mZiB0aGUgZmllbGQsIHdoYXQgYXJlIHlvdSBwbGFubmluZyBuZXh0PyIKUXVhbmRvIGNhbWJpYSBsYSBtdXNpY2EsIGVzcGxvZGk6IHJpZGksIHVybGEsIHBpYW5naSwgc2FsdGEsIHNjdW90aXRpLCBuZWxsYSBwaSBhc3NvbHV0YSBmb2xsaWEuIApFZGRpZVNwb29uICA1LDE1NiBwb2ludHMgIHN1Ym1pdHRlZCAyMiBkYXlzIGFnbwpCdXQgaWYgdGhlIG1vdGhlcidzIHJhc2ggZGV2ZWxvcHMgbGF0ZXIgICBmcm9tIDUgZGF5cyBiZWZvcmUgdG8gMiBkYXlzIGFmdGVyIGRlbGl2ZXJ5ICAgYW5kIG5vIHN0ZXBzIGFyZSB0YWtlbiB0byBzaGllbGQgaGVyIGZldHVzLCB0aGUgbmV3Ym9ybiBoYXMgYSAyNSBwZXJjZW50IGNoYW5jZSBvZiBnZXR0aW5nIGNoaWNrZW5wb3ggYmV0d2VlbiA1IGFuZCAxMCBkYXlzIGFmdGVyIGJpcnRoLiAKVGhlIHdvcnN0IG1vbWVudCBjb21lcyBxdWl0ZSBuZWFyIHRoZSBlbmQgd2hlbiBDb3N0bmVyLCBoZXIgcHN5Y2hvbG9naXN0IGZhdGhlciwgcmV0dXJucy4gTWFueSBmaWxtcyBoYXZlIGEgQmFzaWwgRXhwb3NpdGlvbiBmaWd1cmUgdG8gZG8gc29tZSB1Z2x5IGJ1dCBuZWNlc3NhcnkgaW5mb3JtYXRpb24gZmVlZGluZyB0byB0aGUgYXVkaWVuY2UuIApOb3RlIEkgYW0gcHJvIGNob2ljZSBhbmQgSSBiZWxpZXZlIGh1bWFucyBvd24gdGhlaXIgYm9keTogdGhlIFN0YXRlIGNhbm5vdCBmb3JjZSBhIHdvbWFuIHRvIGhhcmJvciBhIGZvZXR1cyBpbiBoZXIgd29tYiwgYXMgaXQgY2Fubm90IGZvcmNlZnVsbHkgaW5qZWN0IGFueXRoaW5nIGludG8gaGVyIGNpcmN1bGF0b3J5IHN5c3RlbS4gQWJvcnRpb24gc2hvdWxkIG5vdCBiZSBpbGxlZ2FsLCBob3dldmVyIGRyYW1hdGljIGl0IGlzIHdoZW4gaXQgaXMgcHJhY3RpY2VkLiBMYXRlIHRlcm0gYWJvcnRpb25zIGFyZSBwYXJ0aWN1bGFybHkgaW1tb3JhbCBpbiBteSBvcGluaW9uLCBidXQgdGhhdCBpcyBmb3IgZWFjaCBjb25jZXJuZWQgcGFydHkgdG8gd2VpZ2ggaW4gY29uc2NpZW5jZS4uIApPcmFsIGFncmVlbWVudHMgYXJlIGxlZ2FsLCBidXQgYSB3cml0dGVuIGxlYXNlIHByb3ZpZGVzIHlvdSBhbmQgdGhlIHRlbmFudCB3aXRoIG1vcmUgc2VjdXJpdHkgYW5kIGEgY2xlYXJlciBwaWN0dXJlIG9mIGVhY2ggcGVyc29uJ3MgcmVzcG9uc2liaWxpdGllcy4gCkxvbmd1ZSBldCBsZW50ZSBkZXNjZW50ZSByYXBpZGUgdmVycyBsZXMgbGltYmVzIG5vaXJ0cmVzIGRlIGxhIGJlc3RpYWxpdCwgZGUgbCdvdWJsaSBkZSBTb2kgZXQgZGUgbCdBdXRyZS4gCkRpZG4gY2FuY2VsIGl0IGFuZCB0b29rIG1vbmV5IG91dCBvZiBteSBhY2NvdW50LiBUaGV5IGtlcHQgdGVsbGluZyBtZSB0aGV5IHJlZnVuZCBpdCBidXQgZGlkbiBzbyBJIGhhZCB0byBpc3N1ZSBhIGNoYXJnZWJhY2suIAogaXMgdGhlIHByb2JhYmlsaXR5IG9mIEphbWllIEdvbGQgYmVpbmcgYXQgeW91ciAxLzIgdGFibGUgYW5kIGcgaXMgdGhlIGF2ZXJhZ2UgbGVuZ3RoIG9mIHRpbWUgdGhlIGRlYWxlciBpcyBkaXN0cmFjdGVkIGZyb20gR29sZCBiYW50ZXIuLiAKT2J2aW91c2x5IHRoZXJlIGFyZSBuZWdhdGl2ZSByYW1pZmljYXRpb25zIGJ1dCB3ZSBjYW5ub3Qgc2F5IGl0IHdhcyBkaXNhc3Ryb3VzIHdpdGhvdXQga25vd2luZyB3aGF0IHRoZSBvdXRjb21lIHdvdWxkIGhhdmUgYmVlbiB3aXRob3V0IGl0LiBDaGluYSB3YXMgbWlyZWQgaW4gY3JpcHBsaW5nIHBvdmVydHkgYW5kIGEgaGlnaCBiaXJ0aCByYXRlIGdyZWF0bHkgaW5jcmVhc2VkIHRoZSBkaWZmaWN1bHR5IG9mIGdyb3dpbmcgdGhlIGVjb25vbXkgZmFzdCBlbm91Z2ggdG8gYXZvaWQgY3ljbGVzIG9mIGZhbWluZSBhbmQgYnJ1dGFsIGhhcmRzaGlwLiBDaGluYSBoYXMgYmVlbiBlbm9ybW91c2x5IHN1Y2Nlc3NmdWwgb24gdGhlIGVjb25vbWljIGZyb250LiAKSSB1bmRlcnN0YW5kIGluY3JlYXNpbmcgaW52ZW50b3J5IGJ1dCBpdCBzZWVtcyB0aGVyZSBhbHNvIG5lZWRzIHRvIGJlIHNvbWUgc29ydCBvZiBmaW5hbmNpYWwgc3RyYXRlZ3kgdG9vIGFkZHJlc3NpbmcgcmVudCBwcmljZXMuClRoZSBwdWxsIGJhY2sgZnJvbSBudWNsZWFyIGlzIHVuZm9yZ2l2YWJsZS4gRW5lcmd5IGlzIHRoZSBiYXNlIGNvbXBvbmVudCBmb3IgZXZlcnl0aGluZyBpbiB0aGUgZWNvbm9teSwgZnJvbSBhZ3JpY3VsdHVyZSB0byBzZW1pY29uZHVjdG9ycyB0byBob21lIGhlYXRpbmcuIEdlcm1hbnkgaXMgYSBnb29kIGV4YW1wbGUgd2hhdCBoYXBwZW5zIHdoZW4gYSBuYXRpb24gcHVsbHMgYmFjayBmcm9tIG51Y2xlYXI6IGhpZ2hlciBlbmVyZ3kgcHJpY2VzIHdoaWNoIGluY3JlYXNlIHByaWNlcyBvZiBldmVyeXRoaW5nLCBtb3JlIGFpciBwb2xsdXRpb24gKHBhcnRpY3VsYXRlIGFuZCBDTzIpLi4gCkknZCBsaWtlIHRvIGJhbiB0aGUgd29yZCAnZm9yZXBsYXknLCBzaW5jZSBpdCBmcmFtZXMgYWxsIG1hbm5lciBvZiB0aHJpbGxpbmcgYWN0aXZpdGllcyBsaWtlIG1hc3NhZ2UsIG9yYWwgc2V4IGFuZCBleHBlcmltZW50aW5nIHdpdGggdG95cyBhcyBtZXJlIHdhcm0gdXBzIHRoYXQgY29tZSBiZWZvcmUgdGhlICdtYWluIGFjdCcuCkp1c3Qga25vdyBJJ3ZlIGJlZW4gdGhyb3VnaCB0aGUgYSB3aWRlIHZhcmlldHkgb2YgbWVkcyBhbmQgbGlrZSB0byBwYXNzIHRoZSBpbmZvcm1hdGlvbiBvbiB0byBvdGhlcnMgaW4gY2FzZSB0aGV5IG1heSBiZSBsb29raW5nIGZvciBhc3Npc3RhbmNlLkFsc28gdGhlIG1lZHMgSSBtZW50aW9uZWQgZG8gaW50ZXJhY3Qgd2l0aCBvdGhlciBtZWRzIGFuZCBhbHNvIGNvbWUgd2l0aCB0aGUgcG90ZW50aWFsIGZvciBhZGRpY3Rpb24gYW5kIGFkdmVyc2UgZWZmZWN0cy4gSSBvbmx5IHVzZSBMaWJyYXggb24gYW4gYXMgbmVlZGVkIGJhc2lzLiBPdXQgb2YgYWxsIG9mIHRoZXNlIEdhYmFwZW50aW4gaXMgd2hhdCBJIHN0aWxsIHVzZSBhcyB0aGlzIGhhcyByZWNlbnRseSBiZWVuIHByZXNjcmliZWQgYW5kIEkndmUgbm90aWNlZCBncmVhdCByZWxpZWYgc28gZmFyIS4gClRoZSBsYXN0IHNldmVyYWwgeWVhcnMgaGF2ZSBiZWVuIGVzcGVjaWFsbHkgYXdlc29tZSBhbmQgYWJzb2x1dGVseSBsaWJlcmF0aW5nLiBJIGhhdmUgbm8gaWRlYSBpZiBpdCBubyBmdWNrcyB0byBnaXZlIGR1ZSB0byBob3Jtb25lcyBidXQgbXkgY29uZmlkZW5jZSBpcyB0aHJvdWdoIHRoZSByb29mIGFuZCBJIGNvbXBsZXRlbHkgaGFwcHkgd2l0aCB3aG8gSSBhbS4gSSBjdWx0aXZhdGVkIGEgd29uZGVyZnVsIGNpcmNsZSBvZiBsaWZlbG9uZyBmcmllbmRzLCBhbGwgb2Ygd2hvbSBJIHRydWx5IGdyYXRlZnVsIHRvIGhhdmUgaW4gbXkgbGlmZS4gClRoZSBvbmUgd2hvIHRhdWdodCBtZSBjYXJwZW50cnksIGhlIHNhaWQuIHdvdWxkbiBiZSBpbiB0aGlzYnVzaW5lc3MgaWYgaXQgd2VyZW4gZm9yIGhpbS4gSGUgc3BlbnQgYSBsb3Qgb2YgdGltZSB0ZWFjaGluZyBtZXRoaW5ncyBoZSB0aG91Z2h0IHdlcmUgaW1wb3J0YW50LiBNb20sIEkgYmUgdGhlcmUgZm9yIHRoZSBmdW5lcmFsLCBzYWlkLgpBbm90aGVyIGludHJvdmVydCBoZXJlLiBJIGRvIGxvdmUgZ29pbmcgb3V0IGFuZCBzb2NpYWxpemluZyB3aXRoIG15IGZyaWVuZHMgYnV0IGFzIGZhciBhcyBtYWtpbmcgbmV3IG9uZXMsIGl0IGhhcmQgZm9yIG1lLiBJIHRlbmQgdG8gbm90IGxpa2UgbW9zdCBwZW9wbGUgYW5kIGhhdmUgYSBkaWZmaWN1bHQgdGltZSB0cnlpbmcgdG8gZmlndXJlIG91dCB3aGF0IHRoaW5ncyB0byBzYXkgYW5kIGhvdyB0byBhY3QuIApTRUFUVExFICAgQSBMb25kb24gbWFuIGFwcGVhcnMgdG8gYmUgZnJlZSBvZiB0aGUgQUlEUyB2aXJ1cyBhZnRlciBhIHN0ZW0gY2VsbCB0cmFuc3BsYW50LCB0aGUgc2Vjb25kIHN1Y2Nlc3MgaW5jbHVkaW5nIHRoZSAiQmVybGluIHBhdGllbnQsIiBkb2N0b3JzIHJlcG9ydGVkLiBNYW4gdHJlYXRlZCBpbiBHZXJtYW55IHdobyBpcyAxMiB5ZWFycyBwb3N0IHRyYW5zcGxhbnQgYW5kIHN0aWxsIGZyZWUgb2YgSElWLiAKVW5saWtlIHNjaWVuY2UgZmljdGlvbiwgaW4gcmVhbGl0eSB0aGVyZSBhcmUgbm8gdmlkZW9zIG9yIHNjYW5uZXJzIHRoYXQgY2FuIHJlY29yZCB0aGUgaW1hZ2VzIHNlZW4gd2l0aGluIHRoZSBtaW5kLCBhbmQgc28gdGhlcmUgaXMgbm8gd2F5IHRvIGtub3cgd2hldGhlciB0d28gcGVvcGxlIGNhbiBkcmVhbSB0aGUgc2FtZSBkcmVhbS4gCkhvdyBkbyB5b3Uga25vdyB0aGF0IHRoaXMgaXMgdGhlIHByb2JsZW0/IEhhdmUgeW91IGNvbnN1bHRlZCBhIGRvY3RvciBvciBzb21lb25lIHdobyBxdWFsaWZpZWQgdG8gbWFrZSBzdWNoIGEganVkZ2VtZW50PyBBcmUgeW91IGp1c3QgYXNzdW1pbmcgYmVjYXVzZSB5b3UgdGhpbmsgeW91IGFuIGV4cGVydD8gSWYgeW91IGhhdmUgY29uc3VsdGVkIGEgZG9jdG9yIHRoZW4gaGUvc2hlIHNob3VsZCB0b2xkIHlvdSB3aGF0IHRvIGRvLiAKRm9yIG1lLCBJIHdhcyB0cmVhdGVkIGZvciBhYm91dCB0d28gbW9udGhzLCBkZWNsYXJlZCBjdXJlZCwgYW5kIHllYXJzIGxhdGVyIEkgU1RJTEwgY2FuJ3Qgd2FsayB3aXRob3V0IGEgY2FuZSBhbmQgZXZlbiB0aGVuIEkgZ2V0IGFib3V0IDUwIHN0ZXBzIGluIGJlZm9yZSBJIGNhbid0IGRvIGFueW1vcmUuIEkgcmVseSBvbiB2b2ljZSB0byB0ZXh0IHRvIHR5cGUgYmVjYXVzZSBteSBoYW5kcyBhcmUgZnVja2VkLiAKV2UgaGF2ZSBhIHN5c3RlbSB3aGljaCwgdGhyb3VnaCBpdHMgZmxhd3MsIG9mdGVuIHRha2VzIGFkdmFudGFnZSBvZiB0aGUgbGl0dGxlIGd1eXMgYW5kIGtlZXBzIHRoZW0gcHVzaGVkIGludG8gdGhlIGRpcnQuIFRoZXJlIGlzIG9idmlvdXMgc29jaWFsIGluZXF1YWxpdHkuIEhvd2V2ZXIsIGl0J3Mgbm90IHNvbWUgaGlkZGVuIHRoaW5nIG9yIHNvbWUgZm9yYmlkZGVuIHRoaW5nIHRvIHRhbGsgYWJvdXQuIApNYW55IGhpc3RvcmljIGFjaGlldmVtZW50cyB3ZXJlIG1hZGUsIGJ1dCBpbiByZXRyb3NwZWN0IHByYWlzZSBzaG91bGQgZ28gdG8gZWFjaCBvZiB0aGUgNjAsODc1IHBsYXllcnMgd2hvIGVudGVyZWQgdGhlIDU3IGV2ZW50cyBoZWxkIGJlY2F1c2UgdGhleSB3ZXJlIHRoZSBvbmVzIHdobyBjb250cmlidXRlZCB0byBtYWtpbmcgdGhlc2UgbW9tZW50cyBwb3NzaWJsZS4uIApUaGUgbWFuIHdobyBkcm92ZSB0aGUgY2FyIHdoaWNoIGtpbGxlZCB5b3VuZyBDaWFyYW4gVHJlYWN5IHNhaWQganVzdCBkaWRuIHRoaW5rLiBJIGp1c3QgaG9wcGVkIGluIHRoZSBjYXIuIAoiWnluZ2EgY3JlYXRlcyBnYW1lcyB0aGF0IHBlb3BsZSBlbmpveSBwbGF5aW5nLCIgc2F5cyBUZXJyaWxsLiAiQmVjYXVzZSBvZiB0aGF0LCB0aGV5IGNhbiB1c2UgaW4gZ2FtZSBpbmNlbnRpdmVzIHRvIG1vdGl2YXRlIHBsYXllcnMgdG8gaW52aXRlIHRoZWlyIGZyaWVuZHMuIEJ1dCBrZWVwIGluIG1pbmQsIGluIGdhbWUgaW5jZW50aXZlcyBvbmx5IHdvcmsgaWYgcGxheWVycyBhcmUgc3Ryb25nbHkgZW5nYWdlZC4gCkVwaWNMZXZlbFdpemFyZCB1ClNhbWxzZjAwNyAgMSBwb2ludCAgc3VibWl0dGVkIDEgbW9udGggYWdvCkJ1dCBhcyBhIGZpcnN0IGdlbiB3aG8gY2FtZSBvdmVyIGFzIGFuIGFkdWx0IG92ZXIgMjArIHllYXJzIGFnbywgSSBkbyBub3QgZmluZCBhIG5lZWQgdG8gZml0IGluIHdpdGggYW55IHNpZGUgYnV0IG15IG93bi4uIApPbmxpbmUgUG9rZXIgU2hvdyBGcmVlcm9sbCBFeHBsYWluZWQgIDI6IFdoYXQgaXMgYSAiRnJlZXJvbGwgVG91cm5hbWVudD8iCllvdXIgYmVzdCBiZXQgd2lsbCBhbHdheXMgYmUgdG8gc2VlayBoZWxwIGZyb20gZnJpZW5kcyBhbmQgZmFtaWx5LiBJdCB0aGUgbW9zdCBodW1ibGluZyBleHBlcmllbmNlIEkgZXZlciBoYWQsIGFuZCBJIHN0aWxsIHN0cnVnZ2xpbmcgdG8gYm91bmNlIGJhY2sgbWVudGFsbHksIGJ1dCB5b3VyIG9kZHMgb2Ygc3Vydml2aW5nIGluY3JlYXNlIGV4cG9uZW50aWFsbHkgaWYgeW91IGhhdmUgYSBjb3VjaCB0byBjcmFzaCBvbi4KQ2xpY2sgb24gYSBjYXJkIHRvIGtlZXAgaXQuIENsaWNrIGNhcmQgYWdhaW4gdG8gdW5zZWxlY3QgaXQuIApJZiB5b3UgZmVlbCB5b3UgYXJlICJ1dHRlcmx5IGRpc2d1c3RpbmciIGFsbCB0aGUgdGltZSwgSSBtaWdodCBzdWdnZXN0IGdldHRpbmcgc29tZSBwcm9mZXNzaW9uYWwgaGVscC4gV29tZW4gdGVuZCB0byBoYXZlIGdvb2QgZGF5cyBhbmQgYmFkIGRheXMgd2l0aCByZWdhcmQgdG8gdGhlaXIgc2VsZiBlc3RlZW0gYnV0IGlmIHlvdSBhcmUgaGF2aW5nIGJhZCBkYXlzIGFsbCB0aGUgdGltZSwgdGhhdCBub3QgZ29vZC4gQUxMIHdvbWVuLCBldmVuIHRob3NlIGJlYXV0aWZ1bCB3b21lbiB5b3Ugc2VlIG9uIHRoZSBzdHJlZXQsIGdldCBpbnNlY3VyZS4gCkljaCBtYWcgd2VkZXIgZGllIEZQIG5vY2ggZGllIFZQLCBnZW5hdXNvIHdlbmlnIHdpZSBkaWUgTkVPUywgbnVyIGRpZXNlIG5pY2h0IGFremVwdGFueiBkZXIgUHJvYmxlbWF0aWsgZGVyIGFrdHVlbGxlbiBJc2xhbWlzaWVydW5nIHN0ZXJyZWljaHMgbXVzcyBlbmRsaWNoIGJlZ3JpZmZlbiB3ZXJkZW4gdW5kIG5pY2h0IGFscyBBbmdzdCBkZXIgZHVtbWVuIHVuZ2ViaWxkZXRlbiBhYmdldGFuIHdlcmRlbiEgRGFzIGlzdCBlaW4gRmFrdC4gCkJvdGggY291bGQganVzdCBjYWxsIGRyYXdfbmV4dF9jYXJkLiAKTXNuIG5lIGJva3N1biBzZW4ga2ltc2luIGFuYW5hIHNvciBhbmFuIGl5aSB0YW5yIGJlbmkgc2VuIHphdGVuIGFuYW5hIGFuYW5uIGFtbiBzaWtlcmltIHNlbmluIG9yb3NwdWNvdWd1IGlzbWluaSB5YXogb3JheWEgYmFrIGJlbmltIGlzbWltIHlhenlvIG9yYWRhIHBlemV2ZW5rIGJlbiBkZSBzZW5pbiB5ZWRpIHNsYWxlbmkgeWEgc2luYW4gYWJpIGJyYWsgZGl5b3J1bSBzYW5hIHNpbmFuIGFiaSBpbiBhYSBsYW4gb2x1bSB5YSBidSBhbW5hIGtvZHV1bXVuIGNvY3VrbGFyIHl1enVuZGVuIHRvYmUgeWFyYWJiaSBvbHVtIG9sdW0gYWRhbSBvbCBzaXppbiBhbmFueiBhdnJhZG56IHNpa21layBjbiBidSBveXVudSBveW5hcm0gYmFrIG9nbHVtIGJhayBiZW5pbSBjYW5tIHNrbWF5biBzaWt0aXJpbiBnaWRpbiBzdXJkYW4gc2VuIHZhciB5YSBhbmFuYSBzb3lsZSBkdW55YSBrbGFuIGJpcmluY2lsaWdpIHZlcmNlbSBrYXJzbGduZGEgYmVsa2kgaGhhaGFoIGxhbiBzYWxhayBiZW5pbSBhbmFtIGxkIGFuYXNuIHNpa3RpaW1pbiBvY3V1IGJlbmltIGFuYW0gbWV6YXJkYSBvcm9zcHVjb2N1dSBiZW5pbSBhbmFtIG1lemFyZGEgbGFuIHBlemV2ZW5rIGJlbmltIGFuYW0gbWV6YXJkYSBwZXpldmVuayBoZXJpZiBhbGxhaCByYWhtZXQgZXlsZXNpbiBnYXJkYSBuZSBrYWRhciBhc2FibnogYm96dWsgYmlyIGl0c2luaXogYmlsbWl5b3J1bSBiZSBzdXN1biBiaSBzdXN1biBzdXMgeml2aXplcmkgYmkgZGFra2EgZHVyIHNlbmRlIHRhbWFtIGFuYW4gbWV6YXJkYXlzYSBnYXJkYSBhbGxhaCByYWhtZXQgZXlsZXNpbiBvbmEga2ltc2VuaW4gYmlleSBkZWRpaSB5b2sgZGEgaGggYmFiYW0gbSBzaWtpY2VuIGR1ciBiaSBkYWtrYSBkdXIgYnVyZGEga3VmdXIgZXRzZW4gbmUgb2xhY2FrIGJhYmFtIG0gc2lraWNlbiBwZXpldmVuayBoZXJpZiBiYWJhbSBtIHNpa2ljZW4gc3VzIHllZGkgY2VkZGluaSBzaWtlcmltIHNpbWRpIHNlbmluIGJhayBkemduY2UgYmVubGUga29udXNhbSBzdXN1biBiaSBrYSB5YW5kYXNpbiBzZW4gc2luY2FwbGVuIHlhbm4gYW5hc24gc2lraXlpbSBoZXIgemFtYW4gYmVuaSBzaXogYnVsdXlvbnV6IHNpa3RpcmluZ2lkaW4gc3VyZGFuIGFtbmEga29kdWR1dW11biBldmxhZCBkdXIgYmkgYmFrIGR6Z25jZSBrb251c3V5b20geWEgYmFybWEgZHpnbmNlIGtvbnVzdXlvbSBsYW4gc2lrdGlyZ2l0IHN1IHRzIGRlbiB5YSB1bGFuIGR1emd1bmNlIGtvbnVzdXlveiBzaXogc3UgdHMgZGVuIHNpa3RpcmluZ2lkaW4gYmVuIGJhc2thIGJpc2V5IGlzdGVtaXlvcnVtIGdpdG1peW9tIGJpIGRha2thIGR1ciBpa2kga2lzaSBrb251c3VuIHNpbmFuIGFiaSBiZW5pIGRpbmxpeW9uIG11IHNlbiBiaSBkYWtrYSBkdXIgYnUgYW1uYSBrb2R1dW11bnVuIG9jdWtsYXJ5bGEgaWtpIGtpc2kga29udXN1biwgYmVubGUgc2VuIGtvbnUgdGFtYW0uIApNIFdhdHN1IGRvZXMgbm90IG9wZW4gb2ZmaWNpYWxseSB1bnRpbCB0b2RheSwgc28gSSB1bmRlcnN0YW5kIEkgd2FzIGJldGEgdGVzdGluZy4gClRoZSB0aHJlZSBndXlzIGluIHRoZSBtaXggZm9yIHRoZSBzZWNvbmQgYmFzZSBqb2IgUnlhbiBNY01haG9uLCBHYXJyZXR0IEhhbXBzb24gYW5kIFBhdCBWYWxhaWthIGhhdmUgYWxsIGltcHJlc3NlZCB3aXRoIHRoZSBiYXQuIApNYXJrZXQgZnVsbHkgb3BlbnNTdGFycyBHcm91cCBJbmMuIE1hcmtldCBmdWxseSBvcGVucy4gCkV2ZW50dWFsbHkgd2hlbiBJIHJhbiBteSBvd24gbWluaXN0cnksIEkgY291bGQgbm90IGltYWdpbmUgZG9pbmcgdGhhdCwgYmVjYXVzZSBhcmVuJ3QgdGhvc2UgdGhlIHBlb3BsZSB3aG8gbGlrZSwgbmVlZCB0byBiZSB0aGVyZT8gVGhlIHVuc2F2ZWQgcGVvcGxlIHdobyBhcmVuJ3QgZHJlc3NlZCBmcnVtcHkgeWV0PyBJZiBwZW9wbGUgY2FtZSB0byBteSBtaW5pc3RyeSBuYWtlZCBJJ2QgaGF2ZSB0aG91Z2h0ICJ3aGF0IGEgZ29vZCBqb2IgSSdtIGRvaW5nIi4uIApQZXJzb25hbGx5LCBJIGxpa2UgdGhlIGlubm92YXRpb24sIEkgZG9uIHdhbnQgdG8gc3RheSBzdHVjayBpbiB0aGUgMjB0aCBjZW50dXJ5IGFzIG11Y2ggYXMgSSBsb3ZlIHRoZSBhcmNoaXRlY3R1cmUgZnJvbSB0aGF0IHBlcmlvZC4uIApJIHRob3VnaHQgdGhleSB3b3VsZCB0dXJuIG9uIG1lIGFuZCB0aGF0IGNvdWxkIGhhdmUgYmVlbiB0aGF0LiAKSnVzdCBhIG5vdGUgdGhvdWdoOiBpZiB5b3UgcmVwbGFjaW5nIGFueXRoaW5nLCB5b3UgbWlnaHQgd2FudCB0byBsb29rIGF0IGdldHRpbmcgYSBxdWFsaXR5IFBTVS4gTG90cyBvZiBwcmVidWlsdHMgdXNlIGNoZWFwLCBjcmFwcHkgUFNVcyB0aGF0IGNhbiBtZXNzIHVwIHlvdXIgc3lzdGVtLiBpQnV5UG93ZXIgYW5kIEN5YmVyUG93ZXIgKEkgdGhpbmsgdGhleSBvd25lZCBieSB0aGUgc2FtZSBjb21wYW55PykgYXJlIG5vdG9yaW91cyBmb3IgbWFraW5nIGlmZnksIGNoZWFwIGNob2ljZXMgd2hlbiBpdCBjb21lcyB0byBzdG9yYWdlIGRyaXZlcyBhbmQgUFNVcy4KSSBtZXQgYW5kIGtub3duIGEgZmV3IDEyIHN0ZXBwZXJzIGFuZCBzZWVuIGl0cyBwb3NpdGl2ZSBlZmZlY3Qgb24gdGhlaXIgbGl2ZXMuIEl0IHdvcmtzLiBJIGtub3cgdGhhdCBub3QgZXZlcnlvbmUgdGhlcmUgaW50ZXJwcmV0cyAiaGlnaGVyIHBvd2VyIiB0aGUgc2FtZSBhdCBhbGwuIApHZW5lcmFsIEJlcmF0aSBsb29rZWQgYXQgaGlzIHZpc2l0b3IsIGFzIGhlIG1vdGlvbmVkIHRvIGEgY2hhaXIsIHdpdGggdmVyeSBtdWNoIHRoZSBzYW1lIHN0b255IGluZGlmZmVyZW5jZSB3aXRoIHdoaWNoIGhlIGhhZCByZWdhcmRlZCBoaW0gaW4gdGhlIGJhcmJlcidzIHNob3AgYXQgTmljZS4gVGhlaXIgZXllcyBtZXQgYW5kIHRoZXkgZXhjaGFuZ2VkIG9uZSBsb25nLCBjYWxjdWxhdGluZyBnbGFuY2UuIEZhd2xleSBmZWx0IHRoZSBzcGVsbCBvZiB0aGUgbWFuIGZyb20gdGhhdCBtb21lbnQuIApBIGZldyBvdGhlcnMgYXJlIGFsc28gc2F5aW5nIHRoYXQgUmFyZSBSZXBsYXkgU3dpdGNoIGFuZCBhbGwgdGhpcyBhZGRpdGlvbmFsIE1pY3Jvc29mdCBjb250ZW50IGNhbWUgYWJvdXQgYXMgYSByZXN1bHQgb2YgYSB2ZXJ5IGZydWl0ZnVsIGFuZCBhbWJpdGlvdXMgZGlzY3Vzc2lvbiBkdXJpbmcgRTMgb2YgbGFzdCB5ZWFyLiBOaW50ZW5kbyBhbmQgTWljcm9zb2Z0IHdhbnRlZCB0byBkaXNjdXNzIFNTQiBhbmQgYWxsIG9mIHRoaXMgc3VwcG9ydCB3YXMgYSBkaXJlY3QgcmVzdWx0IG9mIHRoaXMgaW5pdGlhbCBkaXNjdXNzaW9uLi4gClRoZW4gSSBhbHNvIHdyYXAgYSBoZWF2eSBiYW5kIGFyb3VuZCBhIHBvc3QsIHNsaXAgbXkgYXJtIGluLCB0aWxsIHRoZSBiYW5kIHNpdHMgb3ZlciBteSBwZWMgdG8gc2hvdWxkZXIgYXJlYSBhbmQgbW9yZSByb3RhdGlvbnMgYnV0IHdpdGggdGhlIGJhbmQgZm9yIGNvbXByZXNzaW9uIG9uIHRoZSBhcmVhLiAKSSBsaWtlIGl0IGJlY2F1c2UgYXQgZmlyc3QgaXQgcmVhZHMgbGlrZSBKZXN1cyBoYXMgYSB2ZXJ5IGh1bWFuIGZpdCBvZiBwaXF1ZSBmb3IgYSBmaWcgdHJlZSBub3QgaGF2aW5nIGZpZ3Mgd2hlbiBpdCBub3QgdGhlIHJpZ2h0IHRpbWUgYW5kIGxvc2VzIGhpcyBwYXRpZW5jZSwgYnV0IGl0IHR1cm5zIG91dCB0byBiZSBhIHN0b3J5IGFib3V0IHRoZSBlZmZpY2FjeSBvZiBwcmF5ZXIgYW5kIHJpZ2h0IG1pbmRlZG5lc3MgaW4gcHJheWVyLgpXZSBmaXJtbHkgc3RhbmQgYnkgdGhlc2UgdmFsdWVzIHdpdGggb3VyIG5ldyBhbmQgY29udGludWVkIGNvbW1pdG1lbnRzIHRvIHRoZSBXb21lbidzIEVtcG93ZXJtZW50IFByaW5jaXBsZXMgYW5kIHRoZSBTdXN0YWluYWJsZSBTdG9jayBFeGNoYW5nZSBJbml0aWF0aXZlLCIgc2FpZCBKb3MgU2NobWl0dCwgUHJlc2lkZW50IGFuZCBDRU8sIE5FTy4gClNvcnJ5LCBidXQgdGhpcyByZXNwb25zZSBoYXMgYmVlbiByZW1vdmVkIGJlY2F1c2Ugd2UgZG8gbm90IGFsbG93IHRoZSBwZXJzb25hbCBhbmVjZG90ZXMgb3Igc2Vjb25kIGhhbmQgc3RvcmllcyBvZiB1c2VycyB0byBmb3JtIHRoZSBiYXNpcyBvZiBhIHJlc3BvbnNlLiAKUmVtYWluaW5nIHZpZ2lsYW50LiBXYXRjaGluZyB5b3VyIGJhY2ssIGVzcGVjaWFsbHkgaWYgeW91IGFyZSBhIHBlcnNvbiBvZiBjb2xvciBpbiBhIHdoaXRlIHNvY2lldHkuIApBZnRlciBUaGUgQnJhZHkgQnVuY2gsIHRoZSBhY3RyZXNzIHN0cnVnZ2xlZCB3aXRoIGFkZGljdGlvbiBmb3IgeWVhcnMuIFNoZSByZWd1bGFybHkgbWFrZXMgZ3Vlc3QgYXBwZWFyYW5jZXMgYXMgYW4gYWN0cmVzcyBhbmQgcHVibGlzaGVkIGEgYm9vaywgIkhlcmUncyB0aGUgU3Rvcnk6IFN1cnZpdmluZyBNYXJjaWEgQnJhZHkgYW5kIEZpbmRpbmcgTXkgVHJ1ZSBWb2ljZSIgaW4gMjAwOC4uIApHaXZlIHRoZSBHaWZ0IG9mIEVuZXJneVBvbGljZSB3b3JrIGludm9sdmVzIGxvbmcgaG91cnMgYW5kIHVucHJlZGljdGFibGUgYnJlYWsgdGltZXMuIApJZiBoZSBkaXNhZ3JlZXMsIHNoZSBjYW4gaGF2ZSBvdGhlciBwZW9wbGUgdGVzdGlmeSBhcyB0byB3aGVuIHRoZXkga25ldyB0aGUgY291cGxlIHdlcmUgc3BsaXQuIApJdCByZWFsbHkgbm90IGZhaXIuLiAKUG91cnF1b2kgbmUgcGFzIG0nYWNjdXNlciBkZSAiamFsb3VzaWUiIGxlIHRlbXBzIHF1J29uIHkgZXN0LkR1IHJlc3RlIHF1ZWxxdSd1biBhIHByb25vbmMgbGUgbW90IHNpdHQgYXBycyBxdWUgaidldXNzZSB0ZXJtaW4gY2V0dGUgTUFKLiAKSSBkb24gc2VlIHRoYXQgdGhvdWdoLiBUaGUgbmF0aW9uIHdpZGUgZWR1Y2F0aW9uIHN0YW5kYXJkIHdhcyByZWxlYXNlZCBmb3IgbW9yZSB0aGFuIDQwIHllYXJzLiBZZXQgeW91IGNhbiBzZWUgbW9zdCBkaWFsZWN0cyBhbGl2ZSBhbmQgd2VsbCBldmVyeSB3aGVyZSBJIGdvIHRvLiAKU2llIGhhYmVuIGVpbmVuIFdhbmRlcnVybGF1YiBnZWJ1Y2h0IHVuZCBiZWdlZ25lbiBzaWNoIGRhcyBlcnN0ZSBNYWwgaW0gSG90ZWwuIEVoZXBhYXJlLCBBbGxlaW5yZWlzZW5kZSwgRnJldW5kaW5uZW4uIEF1Y2ggaWhyZSBQcm9ibGVtZSByZWlzZW4gbWl0LiBEZXIgV2FuZGVyZmhyZXIgZ2VodCB2aWVsIHp1IHNjaG5lbGwsIGRpZSBOYXR1ciB6ZWlndCBzaWNoIHZvbiBpaHJlciBnZWZocmxpY2hlbiBTZWl0ZS4gRG9jaCBkaWUgZWlnZW50bGljaGUgR2VmYWhyIGxhdWVydCBuaWNoIGluIGRlciBOYXR1ci4gUGF0cmljaWEgSGlnaHNtaXRoIGhhdCBlaW5lIGRldXRzY2hlIEVyYmluIGdlZnVuZGVuLiBFaW4gRmV1ZXJ3ZXJrIGFuIGdlbmF1ZW4gQmVvYmFjaHR1bmdlbiB1bmQgc3RpbW1pZ2VuIERldGFpbHMgZHVyY2h6aWVodCBkaWUgc2ljaCBpbW1lciBiZWRyb2hsaWNoZXIgYXVmc2NoYXVrZWxuZGUgSGFuZGx1bmcuIiAoQWxmIE1heWVyLCBKdXJvciBEdC4gS3JpbWlwcmVpcyAvIEtyaW1pYmVzdGVubGlzdGUpIERldXRzY2hzcHJhY2hpZ2UgVmVyYW5zdGFsdHVuZy4KRWFybGllciBpbiB0aGUgbW9ybmluZywgd2F0ZXIgYWN0aXZpc3QgUmFqZW5kcmEgU2luZ2ggYWxzbyBtZXQgSGF6YXJlIGFuZCBleHByZXNzZWQgY29uY2VybiBvdmVyIHRoZSBhY3RpdmlzdCdzIGhlYWx0aC4gQWZ0ZXIgdGhlIG1lZXRpbmcsIFNpbmdoIHNhaWQgdGhlIGNlbnRyYWwgZ292ZXJubWVudCB3aWxsIHBsYXkgdGhlIHNhbWUgImdhbWUiIHdoaWNoIGl0IGhhZCBwbGF5ZWQgd2l0aCBhY3RpdmlzdCBHIEQgQWdhcndhbCwgd2hvIGhhZCBzYXQgb24gYSBodWdlIHByb3Rlc3QgaW4gSGFyaWR3YXIgZGlzdHJpY3Qgb2YgVXR0YXJha2hhbmQgaW4gc3VwcG9ydCBvZiBoaXMgZGVtYW5kIGZvciBhIGNsZWFuIEdhbmdhIHJpdmVyIGxhc3QgeWVhciBhbmQgbGF0ZXIgZGllZC4gCiJXaGVuIHlvdSdyZSBwZXJjZWl2ZWQgYXMgbm90IGNvbXBldGVudCwgeW91J3JlIGRlbmllZCBhdXRvbm9teSBhbmQgdGhlIGFiaWxpdHkgdG8gdGFrZSBjb250cm9sIG92ZXIgeW91ciBvd24gZGVjaXNpb25zIGluIHJlbGF0aW9uIHRvIHlvdXIgaGVhbHRoLCIgc2hlIHNhaWQuICJJZiB5b3UgdHJ5IHRvIGFzc2VydCB5b3VyIG93biBjb250cm9sLCB0aGV5IGFzc3VtZSB5b3UgZG9uJ3QgYWN0dWFsbHkgbmVlZCBzdXBwb3J0LiIKSWYgbm8gcGxheWVyIGhhcyByZWFjaGVkIDE1MCBwb2ludHMsIHRoZSBnYW1lIHByb2NlZWRzIHRvIGEgbmV3IHJvdW5kLCB3aXRoIHRoZSBwbGF5ZXIgdG8gdGhlIGRlYWxlcidzIGxlZnQgYmVjb21pbmcgdGhlIG5ldyBkZWFsZXIuLiAKTGlieWEgaXNuIGV2ZW4gY2xvc2UgdG8gcmVjb3ZlcmluZyBmcm9tIHRoYXQuIApJZiB0aGV5IGRvbnQgdHJ5IGNsaWNraW5nIG9uIHRoZSBzaWx2ZXIgYnVtcGVyIGNhciBhZ2Fpbi4oIFN0ZXAgNDogQ2xpY2sgb24gdGhlIGNyYWNrIGluIHRoZSBzaWduIFN0ZXAgNTogQ2xpY2sgb24gdGhlIHBlcnNvbiBzdGFuZGluZyBhdCB0aGUgYm90dG9tIG9mIHRoZSBmZXJyaXMgd2hlZWwuIFN0ZXAgNjogQ2xpY2sgb24gdGhlIGxldmVyIGF0IHRoZSBib3R0b20gb2YgdGhlIGZlcnJpcyB3aGVlbC4gU3RlcCA3OiBXaGVuIHRoZSBwZXJzb24gZmFsbHMgb2ZmIHRoZSByb2xsZXIgY29hc3RlciB0aGV5IHdpbGwgZ3JhYiBvbnRvIHRoZSBmZXJyaXMgd2hlZWwuIApJIHVzZWQgdG8gaGF2ZSBhIHdpZGUgbm9zZSBhbmQgd2FzIGEgdmVyeSBoYXBweSBjYW1wZXIgKGhlYWx0aCB3aXNlKSwgYWx0aG91Z2ggSSBkaWRuIGxpa2UgdGhlIHdheSBpdCBsb29rZWQuIE5vdyBJIGFjdHVhbGx5IGVudnkgcGVvcGxlIHdobyBoYXZlIG5vc2VzIGxpa2UgbXkgb2xkIG5vc2UgKGFuZCBldmVuIHNlZSB0aGVtIGFzIGF0dHJhY3RpdmUpIGFuZCB3aGVuIEkgc2VlIHBlb3BsZSB3aXRoIG5hcnJvdyBub3NlcyBJIGRvbiBrbm93IGhvdyB0aGV5IGhhdmUgbGl2ZWQgdGhlaXIgd2hvbGUgbGl2ZXMgbGlrZSB0aGF0LiBJIGd1ZXNzIG1vc3QgZG9uIGtub3cgYW55IG90aGVyIHdheSBvciBtYXliZSB0aGV5IHVzZSBsZXNzIGFpciwgSSBkb24ga25vdy4gClNob3J0IEV4ZXJjaXNlIFZpZGVvOiBGb3J3YXJkIEhlYWQgUG9zdHVyZSBDb3JyZWN0aW9uIChBbnRpIEFnZWluZyBNdXN0KQpBZG1hbmFnZXIgcGx1cyA2LjAgY3JhY2sgICBGb2xkZXIgbG9jayBjcmFjayBrZXlnZW4gc2VyaWFsIHBhdGNoIC4gClRoYXQgYmVpbmcgc2FpZCwgaGF2ZSB5b3UgZXZlciB1c2VkIGEgM0QgcHJpbnRlcj8gSGF2ZSB5b3UgZXZlciB0cmllZCBwdXR0aW5nIG9uZSB0b2dldGhlciBhbmQgc2V0dGluZyBpdCB1cCBhbmQgZ2V0dGluZyBpdCB0byBmdW5jdGlvbiBjb3JyZWN0bHkgYW5kIHVuZGVyc3RhbmQgaG93IGl0IGRvZXMgd2hhdCBpdCBkb2VzIGluIG9yZGVyIHRvIGNyZWF0ZSBhIHN1Y2Nlc3NmdWwgcHJvZHVjdD8gT2J2aW91c2x5IHlvdSBjb3VsZCBmaW5kIHRoaXMgcHJvZHVjdCBvbiB5b3VyIG93biBidXQgZG8geW91IHRoaW5rIHRoZSBhYmlsaXR5IHRvIGZpbmQgaXQgZGVzZXJ2ZXMgbm8gY3JlZGl0IHdoYXRzb2V2ZXI/ClByb2plY3QgTGVhZGVycyBtYWludGFpbiBpbXBvcnRhbnQgcmVsYXRpb25zaGlwcyBiZXR3ZWVuIHRoZSB1bml2ZXJzaXR5IGFuZCB0aGVpciBkZXNpZ25hdGVkIGNvbW11bml0eSBwYXJ0bmVycyB3aGlsZSBnYWluaW5nIHZhbHVhYmxlIGxlYWRlcnNoaXAgYW5kIHByb2Zlc3Npb25hbCBza2lsbHMgYXBwbGljYWJsZSB0byBhbnkgY2FyZWVyLiBNYW55IHByb2plY3RzIHNlcnZlIGFzIGZvbGxvdyB1cCB0byB0aGUgd29yayBkb25lIGF0IHRoZSBwcmV2aW91cyBTZXB0ZW1iZXIncyAgc2VydmljZSBzaXRlcy5UaGUgTW9uZ2VsbGkgQXdhcmQgZm9yIEV4Y2VsbGVuY2UgaW4gQ2l2aWMgRW5nYWdlbWVudCAoZm9ybWVybHkgdGhlIEJydWluIEhlcm9lcyBBd2FyZCkgcmVjb2duaXplcyBpbm5vdmF0aXZlIGFuZCBpbnNwaXJpbmcgcHJvamVjdHMgb3JnYW5pemVkIGJ5IFVDTEEgb3JnYW5pemF0aW9ucy4gCkZvciB0aGlzIHByb2plY3QsIGNob29zZSBhIG1haW4gaW1hZ2UgYW5kIHRoZW4gYXNzZW1ibGUgc21hbGwgcGljdHVyZXMgYWNjb3JkaW5nIHRvIGNvbG9yIHRvbmVzIGluIHRoZSBtYWluIGltYWdlLiAKVGhlIGFubm91bmNlciBzaG91dHMgIkhlIGdvdCB0aGUgc2V0IHVwLCBoZSBnb25uYSBkbyBpdCEiLiAKSSBnZXQgcGFpZCBhIHNhbGFyeSB0byBkbyBpdC4gClNvbWV0aW1lcyBmb3JjaW5nIHRoZSByaHltZSBmZWVscyBvYnZpb3VzIGFuZC9vciBtYWtlcyBpdCBlYXN5IHRvIG5vdCB0aGluayB0d2ljZSBhYm91dCB0aGUgbGluZSBqdXN0IGJlY2F1c2UgeW91ICJzb2x2ZWQiIGZvciB0aGUgcmh5bWUuIApJcyBhbiBhYnNvbHV0ZSBuZWNlc3NpdHkgYmVjYXVzZSB3aXRob3V0IGl0LCB3ZSB3aWxsIGFsd2F5cyBiZSB3YXN0aW5nIG91ciByZXNvdXJjZXMgb24gZ2V0dGluZyByZWFkeSBmb3Igd2FycyBhbmQgdGhlcmVmb3JlIHRoZXJlIHdpbGwgYWx3YXlzIGJlIGEgbmVlZCB0byBoYXZlIHdhcnMzLiAKSW4gdGhlIDE5MjBzLCB0aGVyZSB3YXMgV2FycmVuIEdhbWFsaWVsIEhhcmRpbmcsIHRoZSBBbWVyaWNhbiBIaXMgYmVzdCBwYXN0IHRpbWUgd2FzIHBsYXlpbmcgcG9rZXIgd2l0aCB0aGUgT2hpbyBnYW5nKSwgc29tZSBvZiB3aG9tIHdlcmUgaW52b2x2ZWQgaW4gY3Jhc3MgY29ycnVwdGlvbi4gCkFuZ3J5QW1pc2ggdQpUaGUgQmFkYXNzOgpUaGUgY3J1ZWx0eSBpbXB1bHNlIGNvbWVzIGZyb20gbm90IGhhdmluZyBiZWVuIGhpdCBiYWNrIHdpdGggYW55dGhpbmcsIGFuZCB0aGV5IGxpa2Uga2l0dGVucyB3aG8gZG9uIHVuZGVyc3RhbmQgdGhlIHBvd2VyIG9mIHRoZWlyIGJpdGUgdW50aWwgdGhleSBnZXQgYml0dGVuIGJ5IG90aGVyIGNhdHMuIEl0IGFsc28gY29tZXMgZnJvbSBhIHBsYWNlIG9mIGNvbnRlbXB0LCB0aGVyZSBzb21ldGhpbmcgYWJvdXQgYmVpbmcgYSB3aG9sZXNvbWUgYmYgdGhleSBkZXNwaXNlLiAKSSBiYWNrZWQgb3V0IGFuZCBjaG9zZSB0aGUgInNhbHV0ZSIgb3B0aW9uLCB0byB3aGljaCB0aGUgY2FwdGFpbiBzYWlkIGhpcyBmcmVpZ2h0ZXIgYW5kIGNyZXcgd2VyZSBub3cgYXQgbXkgZGlzcG9zYWwuIApJIHNhdyBoaW0gcmVndWxhcmx5IGZvciBhYm91dCBhIHllYXIgYW5kIGEgaGFsZi4gSGlzIG1vdGhlciB3YXMgYWxzbyBhd2FyZSBoZSB3YXMgc2VlaW5nIG1lIGFuZCB3YXMgdmVyeSBraW5kIHRvIG1lLiBTaGUgZ28gb3V0IHdoZW4gSSB3YXMgdGhlcmUgYW5kIG9mZmVyIG1lIGRyaW5rcyBhbmQgc25hY2tzLiBTaGUga25ldyB3aGF0IEkgd2FzIGJ1dCBmZWx0IGxpa2UgSSBtYWRlIGhpbSBoYXBweSBzbyBpdCBkaWRuIGJvdGhlciBoZXIuIE9uZSBkYXkgSSBzdG9wcGVkIGhlYXJpbmcgZnJvbSBoaW0sIGhlIHdhcyBhIHJlZ3VsYXIgY2xpZW50IGZvciBvdmVyIGEgeWVhciBzbyBJIHdvbmRlcmVkIHdoYXQgaGFkIGhhcHBlbmVkLiBTb21lIGd1eXMgZ2V0IGJvcmVkIGFuZCBmaW5kIGEgbmV3IGdpcmwgYnV0IGluIHRoaXMgY2FzZSBpdCBzZWVtZWQgb3V0IG9mIGNoYXJhY3Rlci4KVGhpcyBpcyBmdW5ueSB0byBtZS4gWW91IGxpdGVyYWxseSBsYXVnaGluZyBhbmQgcGxheWluZyB3aXRoIGhlciB0byBnZXQgaGVyIHRvIHN0YW5kIHVwLCByZWFjaGluZyBkb3duIHRvIHBpY2sgaGVyIHVwIHlvdXJzZWxmIGluIGEgbGlnaHQgaGVhcnRlZCBtb29kLiBJIG5vdCBzdXJlIGhvdyBtdWNoIG5pY2VyIGl0IGNvdWxkIGdldC4gCkFybSBDaXJjbGVzIENvb2wgRG93bjogSG9sZCBhcm1zIG91dCB0byBzaWRlcyBhbmQgYSBsaXR0bGUgYml0IGZvcndhcmQgKDE1IGRlZ3JlZXMpLiBDaXJjbGUgYXJtcyBiYWNrd2FyZCBpbiBhIHNtYWxsIGNpcmNsZS4gTWlkd2F5IHRocm91Z2ggc2V0LCByZXZlcnNlIGRpcmVjdGlvbi4KV2Vic2l0ZXMgdGhhdCByZXF1aXJlIGEgbG9naW4gb3IgZW1haWwgYWRkcmVzcy4gSW5jbHVkZXMgRmFjZWJvb2ssIEdvb2dsZSssIG9yIG90aGVyd2lzZS4KQm9yZGVyaW5nIG9uIHdlbGwgSSB3b24ndCBldmVuIGdvIHdoYXQgSSBib3JkZXIgb24uLiAKTGFzdCBGcmlkYXksIHRoZSB0ZWVucyB3b24gZmlyc3QgcGxhY2UgYXQgdGhlIFZhbmNvdXZlciBSZWdpb25hbCBTY2llbmNlIEZhaXIgZm9yIHRoZWlyIHdvcmsuIFRoZXkgd2lsbCBub3cgYWR2YW5jZSB0byB0aGUgR3JlYXRlciBWYW5jb3V2ZXIgUmVnaW9uYWwgU2NpZW5jZSBGYWlyLgpIZXJlIGFyZSBzb21lIHRpcHMgdG8gaGVscCB5b3UgY2hvb3NlIGEgZ29vZCBtYXNzYWdlIHRoZXJhcGlzdCwgdG8gaGVscCB5b3UgZ2V0IHRoZSBtb3N0IG9mIHRoZSBleHBlcmllbmNlOi4gClRoZSBkaXNjbG9zdXJlIHJlcXVpcmVtZW50cyBvZiB0aGUgRmFtaWx5IExhdyBBY3QgaGF2ZSBvZnRlbiByZXN1bHRlZCBpbiBsaXRpZ2F0aW9uLiBCZWNhdXNlIHRoZSBsZWdpc2xhdGlvbiByZXF1aXJlcyBhbiBlcXVhbGl6YXRpb24gb2YgdGhlIG5ldCB3b3J0aCBlYWNoIHNwb3VzZSBidWlsdCB1cCBkdXJpbmcgdGhlIG1hcnJpYWdlLCBmdWxsIGRpc2Nsb3N1cmUgb2YgdGhlIGV4aXN0ZW5jZSBhbmQgdmFsdWUgb2YgYXNzZXRzIGFuZCBkZWJ0cyBpcyBuZWNlc3NhcnkgdG8gZG8gdGhlIGNhbGN1bGF0aW9uIHJlcXVpcmVkIGJ5IHRoZSBBY3QuIApIYWQgbXkgZmlyc3QgYXQgMzEgYW5kIGFuZCBzZWNvbmQgYXQgMzUuIEJlZm9yZSB0aGVtIG1vc3Qgb2YgbXkgd29yayBsaWZlIHdhcyBib3R0b20gb2YgdGhlIGJhcnJlbCBsb3cgd2FnZSBqb2JzLiAKSWYgdGhlIGRlYWxlcidzIGhhbmQgZ29lcyBiZXlvbmQgMjEsIHlvdSBiZWNvbWUgdGhlIGF1dG9tYXRpYyB3aW5uZXIuIExhc3RseSwgaWYgeW91IGRyYXcgYSBoYW5kIHZhbHVlIHR3byB0aW1lcyBiZWZvcmUgdGhlIGRlYWxlciBkb2VzLCB5b3UgYmVjb21lIHRoZSB3aW5uZXIuLiAKRGl2aXNpYmxlIGJ5IDQgVGhlIG51bWJlciBpcyBkaXZpc2libGUgYnkgNCBpcyB0aGUgbGFzdCB0d28gZGlnaXRzIGlzIGFsc28gZGl2aXNpYmxlIGJ5IDQuIExhc3QgdHdvIGRpZ2l0cyBvZiAxNDQgYXJlIDQ0IHdoaWNoIGFyZSBkaXZpc2libGUgYnkgNCwgdGh1cyAxNDQgaXMgZGl2aXNpYmxlIGJ5IDQgQW4gYWx0ZXJuYXRpdmUgdGVzdDogSWYgdGhlIGxhc3QgZGlnaXQgcGx1cyB0d2ljZSB0aGUgcHJlY2VkaW5nIGRpZ2l0IGlzIGRpdmlzaWJsZSBieSA0IHRoZW4gdGhlIHdob2xlIG51bWJlciBpcyBkaXZpc2libGUgYnkgNC4gRm9yIDE0NCwgbGFzdCBkaWdpdCArIHR3aWNlIHByZWNlZGluZyBkaWdpdCBpcyA0KzJ4NCA9IDEyIHdoaWNoIGlzIGRpdmlzaWJsZSBieSA0LCBzbyAxNDQgaXMgZGl2aXNpYmxlIGJ5IDQgLgpJbCB0cmF2YWlsbGUgYXZlYyB1bmUgdmluZ3RhaW5lIGRlIHBldGl0cyBwY2hldXJzIGF2ZWMgdW4gY2FoaWVyIGRlcyBjaGFyZ2VzIHByY2lzIDogcGFzIGRlIGdsYWNlLCBkZXMgbW9kZXMgZGUgcGNoZSB0cmFkaXRpb25uZWxzIChwYWxhbnF1ZSwgbGFtcGFybywgcGV0aXQgZmlsZXQpLCBkZXMgcG9pc3NvbnMgcXVpIGFycml2ZW50IGFpbnNpIHZpdmFudHMgZW4gY3Vpc2luZSwgY2VydGFpbnMgcXUnaWwgZmFpdCBtYXR1cmVyIGNvbW1lIGRlIGxhIHZpYW5kZSBldCBpbCBhZmZpcm1lIGF2b2lyIHVuZSBxdWFsaXQgZGUgcG9pc3NvbiBleGNlcHRpb25uZWxsZS4gSWwgc2Ugc2VudCBwcm9jaGUgYXVzc2kgZCd1bmUgY3Vpc2luZSBkZSBsYSBtZXIgZGUgdHlwZSAicmdpbWUgY3JldG9pcyIsIGMnZXN0IGNlbGxlIHF1J2lsIGFpbWUgbWFuZ2VyIGV0IGN1aXNpbmVyLCBhdmVjIGRlcyBzdWNzLCBkZXMgcmR1Y3Rpb25zLCBkZXMganVzIG1haXMgbmkgYmV1cnJlIG5pIGNybWUuLiAKVGhlIEdyb3ZlIGlzIGJhc2ljYWxseSBldmVyeXRoaW5nIGVhc3Qgb2YgUmFpbHJvYWQgYW5kIEJvaGVtaWFuIEF2ZS4gVGhlIGZvdXIgYmxvY2tzIGJldHdlZW4gdGhlIHJpdmVyIGFuZCBSYWlscm9hZCBoYXZlIGEgc2xpZ2h0IGVsZXZhdGlvbiBnYWluLCB0aGVuIGl0IGdvZXMgdXAgaW50byBhbiBhY3R1YWwgaGlsbC4KQSBjb3VwbGUgb2YgeWVhcnMgYWdvIHdoZW4gWGkgY2hhbmdlZCB0aGUgbGF3IGJhc2ljYWxseSBtYWtpbmcgaGltIGFibGUgdG8gYmUgcHJlc2lkZW50IGZvcmV2ZXIgYXMgb3Bwb3NlZCB0byBoZSBjb3VsZCBvbmx5IGJlIHByZXNpZGVudCBmb3IgdHdvIHRlcm1zLiBUaGVyZSB3YXMgYSBtZW1lIG9mIFdpbm5pZSB0aGUgUG9vaCBodWdnaW5nIGEgaHVnZSBwb3Qgb2YgaG9uZXkgdGhhdCB3ZW50IGFyb3VuZCB0aGUgaW50ZXJuZXQuCjdiYi9ociB3aW5yYXRlIGlzbid0IGEgbG90IGF0IDEvMiBvciAxLzMgZ2l2ZW4gdGhlIHZhcmlhbmNlLiAKR3V5IGJvb2tzIGJldHMgcmlnaHQgaW4gc2FpZCBUb20gMTYuIEluIG9uIHRoZSBuaWdodCBvZiB0aGUgc2Nob29sJ3Mgc2VuaW9yIG9uZSBvZiB0aGUgYWMgIHRpdml0aWVzIGFycmFuZ2VkIGZvciB0aGUgZXZlbmluZyB3YXMgYSBtb2NrIHNldCB1cCBpbnNpZGUgSkFNSVMgVU5JVkVHQSBDSUdOQUwgSGRtZWIgQ2FyIHRvZHMgU2hvZXMgREVXMVRUIFNQT1JUUyBSaSA1IFJlcGxhY2VtZW50IFdpbmRvd3MgdGhlIGNhZmV0ZXJpYS4gU3R1ZGVudHMgcmVjZWl2ZWQgY2hpcHMgYW5kIHBsYXllZCBjYXNpbm8gZ2FtZXMgbGlrZSBibGFja2phY2sgYW5kIGNyYXBzLiAKTGUgbGVhZGVyIHByaWNlIGRlIGxhIHJ1ZSBjbGlnbmFuY291cnQgcHJlbmQgbGUgbW1lIGNoZW1pbi4gCkkndmUgbG9va2VkIG9uIENyYWlnc2xpc3QgZm9yIHJlbnRhbHMgYW5kIEknbGwgcG9zc2libHkgYmUgdGFraW5nIG9uZSAob3IgbWF5YmUgYm90aCkgb2Ygb3VyIGRvZ3MuIEknZCBpZGVhbGx5IGxpa2Ugc29tZXdoZXJlIHdpdGggYSB5YXJkIGlmIHBvc3NpYmxlIGFzIHRoZSBkb2dzIGhhdmUgbmV2ZXIgbGl2ZWQgaW4gYW4gYXBhcnRtZW50IGNvbXBsZXguIEl0IHNlZW1zIGxpa2UgU3VnYXJob3VzZSBpcyBhZmZvcmRhYmxlIGlzaC4KSWYgeW91IGRvbid0IGdldCBhbnl3aGVyZSB3aXRoIHRoYXQgcGVyc29uLCB5b3UgY2FuIHRyeSBlc2NhbGF0aW5nIHlvdXIgY29tcGxhaW50IHRvIHRoZSBCcmFuY2ggTWFuYWdlciBvciBMaWJyYXJ5IERpcmVjdG9yLiBJIHdvdWxkIGFsc28gYXNrIHRvIHNlZSBhIGNvcHkgb2YgdGhlaXIgbWVldGluZyByb29tIHBvbGljaWVzLiBJTU8gdGhpcyBpcyBhIHZlcnkgdW5ldGhpY2FsIHVzZSBvZiB0aGUgcm9vbSBhbmQgb2Ygd2hhdCBJIGFzc3VtZSBpcyBjaXR5IG9yIGNvdW50eSBwcm9wZXJ0eSAoYnV0IGNvcnJlY3QgbWUgaWYgaXQncyBub3QpLi4gCkkgYWdyZWUsIHRoZSByZWNpZGl2aXNtIHJhdGVzIGFyZSBhYmhvcnJlbnQgaW4gb3VyIGNvdW50cnkgKEkgZG9uIGtub3cgd2h5IGJ1dCBpIGFzc3VtZSB5b3UgYXJlIGFtZXJpY2FuIGFzIHdlbGwpLiAKSXQncyBjaGlsZGlzaCBidXQgbWF5IGhhdmUgaGVscGVkIHNvbWUgdG8gY3VyYiBjaWdhcmV0dGVzIGJ1dCBob3cgYm9yaW5nIGRvZXMgeW91ciBsaWZlIGhhdmUgdG8gYmUgdGhhdCB5b3UgZ28gdG8gYSBjb252ZW50aW9uIGp1c3QgZm9yIHRoaXM/IFRoaXMgaXNuJ3QgYSBob2JieSwgZGlmZmVyZW50IGZsYXZvcnMgYXJlIG5vdCBhIGNvbGxlY3Rpb24gYW5kIG1ha2luZyBkaWZmZXJlbnQgc2hhcGVzIGluIHNtb2tlIGlzIG5vdCBhZG1pcmFibGUuIApUaGlzIHBvc3QgaXMgYW4gZXhhbXBsZSBvZiBwZW9wbGUgbWFuaXB1bGF0aW5nIHRoZSBzdG9yeSB0byBmaXQgdGhlaXIgbmFycmF0aXZlLiAKTm93LCBkb24gZ2V0IG1lIHdyb25nLCBJIGRvbiB3YW50IGFuIGVhc3kgYnV0dG9uIG9yIHRvIGJlIGhhbmRlZCB0aGluZ3MuIEkgZG9uZSB0aGUgZW50aXJlIExhc3QgV29yZCBxdWVzdCBsaW5lIGFjcm9zcyBhbGwgMyBjaGFyYWN0ZXJzLCBzb2xvLiAKQW5kIEkgZ290IHRvIGJlIGEgcGFydCBvZiB0aGUgY2xhc3MgdGhhdCBjaGFuZ2VkIGhvdyB3ZSBzaW5nIG91ciBBbG1hIE1hdGVyICAgc2NyZWFtaW5nICJtYXkgbm8gYWN0IG9mIG91cnMgYnJpbmcgc2hhbWUuIiBHaXZlcyBtZSBjaGlsbHMganVzdCB0aGlua2luZyBhYm91dCBpdC5MaW9uVHdlZXRlciAgMTAgcG9pbnRzICBzdWJtaXR0ZWQgMTggZGF5cyBhZ29JZiB5b3UgY3VyaW91cyB3aGF0IHRoZSA0NiBob3VycyBhcmUgbGlrZSwgdGhpbmsgb2YgaXQgbGlrZSBhbiB1biBlbmRpbmcgY29uY2VydC9wYXJ0eS9ldmVudC9wZXAgcmFsbHkgYW5kIHRoZSBtb3N0IGZhbWlseSBmcmllbmRseSB3ZWVrZW5kIG9uIFBlbm4gU3RhdGUgY2FtcHVzIChiZWNhdXNlIG9mIHRoZSBsaXR0bGUga2lkcyBydW5uaW5nIGFyb3VuZCB0aGUgYXJlbmEgZmxvb3IsIHN0dWRlbnRzIGFyZSBvbiB0aGVpciBiZXN0IGJlaGF2aW9yLCB0aGVyZSBpcyB2ZXJ5IGxpbWl0ZWQgY3Vyc2luZywgYWJzb2x1dGVseSBubyBkcmlua2luZyBldGMuKSBBbmR5IEdyYW1tYXIgcGVyZm9ybWVkIHRoaXMgeWVhciwgRE5DRSB3YXMgdGhlcmUgYSBmZXcgeWVhcnMgYWdvLCBvdXIgc3R1ZGVudCBhdGhsZXRlcyBwdXQgb24gYSBjb21wZXRpdGl2ZSBQZXAgUmFsbHkgb24gU2F0dXJkYXkgZXZlbmluZywgKHMvbyB0byBNZW4gR3ltbmFzdGljcyBmb3IgdGhlaXIgdGhyZWUgcGVhdCkgdGhlIGtpZHMgcHV0IG9uIGEgdGFsZW50IHNob3cgYW5kIGFyZSBhZG9yYWJsZSwgZXZlcnkgaG91ciB0aGVyZSBhIDUgbWludXRlIExpbmUgRGFuY2UgZmlsbGVkIHdpbGwgUFNVIHNwZWNpZmljIHJlZmVyZW5jZXMsIHNwb3J0cyBldmVudHMsIHBvcCBjdWx0dXJlIGFuZCB3b3JsZCBuZXdzIGZyb20gdGhlIHBhc3QgeWVhciAoWW91VHViZSB5ZWFycyAyMDEyLCAyMDEzIGZyYW5rbHkgSSB0aG91Z2h0IHRoaXMgeWVhciB3YXMgcHJldHR5IGdvb2QgYXMgd2VsbCkuVGhlIEZpbmFsIEZvdXIgaG91cnMgb24gU3VuZGF5IGFmdGVybm9vbiB3aWxsIGhhdmUgeW91IGNyeWluZyBsaWtlIG5ldmVyIGJlZm9yZS4gCkZvciBhIG51bWJlciBvZiB5ZWFycyBJIHdhcyB0aGUgZm91bmRlciwgYXJjaGJpc2hvcCBhbmQgcG9wZSBvZiBUaGUgRmlyc3QgQ2h1cmNoIG9mIEFnbm9zdGljaXNtIHdpdGggdGhlIG9mZmljaWFsIHRpdGxlICJLZWVwZXIgb2YgVGhlIE9ubHkgVHJ1ZSBGYWl0aDogQWdub3N0aWNpc20iLiBCdXQgcmVjZW50bHkgSSBnYXZlIHRoYXQgdXAgc2luY2UgdG9vIG1hbnkgbWlzdW5kZXJzdG9vZCB0aGUgbWVhbmluZyBvZiBhZ25vc3RpY2lzbSBhbmQgSSBmZWFyZWQgaGVyZXRpY3Mgd291bGQgaW5zdGlnYXRlIGEgc3BsaXR0aW5nIG9mIHRoZSBjaHVyY2guLiAKSSBzYXQgdGhlcmUgaW4gdGhlIGNoYWlyIGFuZCBJIGNvdWxkbid0IGV2ZW4gdGhpbmsgdGhhdCBpdCB3YXMgSG9nYW4uIEFuZCB0aGVuIFZpbmNlIGFkbWl0dGVkIGl0IG9uIExhcnJ5IEtpbmcgdG9vLiAKVGhlIGxhc3QgMzBLbSBiYWNrIGludG8gUGVudGljdG9uIGlzIHZlcnkgZmFzdC4gVGhlIHJ1biBpcyBvdXQgYW5kIGJhY2ssIGx1bXB5IGFuZCBkb2VzIHNhcCB5b3UgbGVncywgYnV0IGEgZ29vZCBydW5uZXJzIGNvdXJzZS4gUGVudGljdG9uIGlzIGEgZ3JlYXQgdG93biB3aXRoIGEgd29uZGVyZnVsIGF0bW9zcGhlcmUgZHVyaW5nIHJhY2Ugd2Vlay4uIApJbiB0aGlzIHJvbGUsIEdhaW5leSBsZWQgdGhlIG9wZW5pbmcgb2YgdGhyZWUgbGFyZ2UgcG9rZXIgcm9vbXMuIApIb3cgbWFueSBoaXRzIGRvZXMgTGFkeSBHYWdhIGhhdmUKQSBsJ2FwcHVpIGRlIGxhIG1kaWF0aXNhdGlvbiBkJ2FmZmFpcmVzIGRlIHN2aWNlcyBzdXIgbGVzIGFuaW1hdXggZXQgc291cyBsYSBwcmVzc2lvbiBkZXMgYXNzb2NpYXRpb25zIGRlIGRmZW5zZSBkZXMgYW5pbWF1eCwgbGUgZHJvaXQgZGUgbCdhbmltYWwgYXBwYXJhdCBkc29ybWFpcyBjb21tZSB1bmUgcHJvY2N1cGF0aW9uIHNvY2l0YWxlLiBQcmVuYW50IGFjdGUgZGUgY2V0IGludHJ0IGV0IGRlcyBuY2Vzc2FpcmVzIHZvbHV0aW9ucyBsZ2lzbGF0aXZlcywgbGUgbGdpc2xhdGV1ciBhIG1vZGlmaSBsZSBzdGF0dXQganVyaWRpcXVlIGRlIGwnYW5pbWFsIGV0IGEgcmVuZm9yYyBzYSBwcm90ZWN0aW9uLiAKUmFuZ2VkIHdlYXBvbnMgYXJlIHBvd2VyZnVsIGFuZCB5b3UgY2FuIG9mdGVuIHRha2Ugb3V0IG11bHRpcGxlIGVuZW1pZXMgYmVmb3JlIHRoZXkgZXZlbiB3YWxrIG92ZXIgdG8geW91LiAKVGhleSBhcmUgbm90IGltbXVuZSBmcm9tIHRoZSBnbG9iYWwgcGhlbm9tZW5vbiBvZiBpbmNyZWFzaW5nIGZvb2QgcHJpY2VzLiBSaWNlIHRvIHRoZW0gaXMgdGhlIGVxdWl2YWxlbnQgb2YgdGhlIHBvdGF0byB0byBJcmVsYW5kIGluIHRoZSAxOXRoIGNlbnR1cnkuIFdpdGggdGhlIGN1cnJlbnQgaGlnaCBwcmljZSBvZiByaWNlLCBpdCByYXJlbHkgZmVhdHVyZXMgb24gdGhlIEF0aSBtZW51IG5vdy4gTWF5YmUganVzdCBvbmNlIG9yIHR3aWNlIGEgd2Vlay4gVGhlc2UgZGF5cyB0aGVpciBkYWlseSBkaWV0IGNvbnNpc3RzIG9mIHJvb3QgY3JvcHMgZm91bmQgb24gdGhlIGhpbGxzIGFsb25nIHdpdGggbmF0dXJhbCBncm93aW5nIGZydWl0IGFuZCBiZXJyaWVzLiBPdXIgbWlzc2lvbiBoZXJlIGlzIHRvIGhlbHAgbGF1bmNoIGEgbnV0cml0aW91cyBmZWVkaW5nIHByb2dyYW1tZSBhbG9uZyB3aXRoIHNldHRpbmcgdXAgaGVhbHRoIGFuZCBlZHVjYXRpb24gY2VudHJlcy4KV2h5LCBzaGUgaGFkIGV2ZW4gZGVjbGluZWQgdG8gbWVldCB3aXRoIHRoZSBmb3JtZXIgU3VwcmVtZSBDb3VydCBqdWRnZSwgRnJhbmsgSWFjb2J1Y2NpLCB3aG9tIHRoZSBjb21wYW55IGhhZCByZXRhaW5lZCBhcyBjb3Vuc2VsLCB0aGUgbWFuIFdlcm5pY2sgcG9pbnRlZGx5IGRlc2NyaWJlZCB0byBXaWxzb24gUmF5Ym91bGQgYXMgc2hyaW5raW5nIHZpb2xldC4gU2F5cyBhIGdyZWF0IGRlYWwgdGhhdCB0aGUgY29tcGFueSByZXNwb25zZSB0byBiZWluZyBjaGFyZ2VkIHdpdGggc2VyaW91cyBjcmltZXMgd2FzIG5vdCB0byBmaWdodCB0aGUgY2hhcmdlcyBpbiBjb3VydCwgYnV0IHRvIGZpZ2h0IHRoZW0gaW4gZ292ZXJubWVudDogdG8gbG9iYnkgdGhlIHBvbGl0aWNpYW5zLCB0byBhdHRlbXB0IHRvIGludGltaWRhdGUgdGhlIHByb3NlY3V0b3JzLCB0byBhcnJhbmdlIGNhbGxzIGJldHdlZW4gb2xkIGNpdmlsIHNlcnZpY2UgY2h1bXMuIFRoZXkgZGlkIHNvLCBpdCBpcyBsb2dpY2FsIHRvIGNvbmNsdWRlLCBiZWNhdXNlIHRoZXkgdGhvdWdodCBpdCB3b3VsZCB3b3JrIGJlY2F1c2UgdGhleSB3ZXJlIGdpdmVuIHJlYXNvbiB0byBiZWxpZXZlIGl0IHdvdWxkIHdvcmsuLiAKRm9yIE1hbmlhYyB0aGUgbW9zdCBvYnZpb3VzIGFyZSAiQWQgQnVkZGllcyIgYW5kICJSZW50IEEgRnJpZW5kcyIuIEhpcyBqb2Igd2FzIGxpdGVyYWxseSB0byBtYWtlIGEgaGFuZHdyaXR0ZW4gbGV0dGVycyBhcyBnaWZ0cyBiZWNhdXNlIGluIHRoZSBmdXR1cmUgYWN0dWFsIHdyaXRpbmcgaGFzIGJlY29tZSBhIG5vdmVsdHkuIEkgdGhpbmsgaXRzIHN0dWZmIGxpa2UgdGhhdCB3aGljaCBzdG9vZCBvdXQgdG8geW91LiAKQXJvdW5kIHRoZSB0YWJsZSwgaGUgd291bGQgc2F5LiBZb3UgZG9uIHNlZSBhIHN1Y2tlciwgZ2V0IHVwLCBiZWNhdXNlIHlvdSB0aGUgc3Vja2VyLi4gCkVkaXQ6IEZvciB0aG9zZSBhc2tpbmcgYWJvdXQgbXkgbWVkaWNhdGlvbjogSSB0YWtlIE94Y2FyYmF6ZXBpbmUgNDUwIG1ncyB0d2ljZSBhIGRheSAoQnJhbmQgbmFtZSBpcyBUcmlsZXB0YWwpLiAKVG90YWwgdGVzdG9zdGVyb25lIGxldmVscyAoZnJvbSAxMC43ICAzLjkgbm1vbC9sIHRvIDEzLjQgIDQuNyBubW9sL2w7IHAgYmlvYWN0aXZlIHRlc3Rvc3Rlcm9uZSAoZnJvbSA1LjIxICAxLjg3IG5tb2wvbCB0byA2LjI1ICAyLjAxIG5tb2wvbDsgcCA9IDAuMDAxKSwKIlVsdGltYXRlbHksIHdpZGVzcHJlYWQgb2Jlc2l0eSBhbmQgdGhlIGNocm9uaWMgZGlzZWFzZXMgdGhhdCBjb250cmlidXRlIHRvIHRoZSBidWxrIG9mIGRlYXRocyBpbiB0aGUgd29ybGQgYXJlIGxlc3MgYSByZXN1bHQgb2YgcG9vciBpbmRpdmlkdWFsIGRpZXRhcnkgY2hvaWNlcyB0aGFuIHRoZSBjb25zZXF1ZW5jZXMgb2YgYSBoaWdoIHRlY2gsIGludGVyY29ubmVjdGVkIHdvcmxkIGluIHdoaWNoIGdvdmVybm1lbnRzIGFuZCBtdWx0aW5hdGlvbmFsIGNvcnBvcmF0aW9ucyBoYXZlIGV4dHJhb3JkaW5hcnkgcG93ZXIgdG8gc2hhcGUgb3VyIGV2ZXJ5ZGF5IGxpdmVzLiIKT21ib3J0cm9uIHUKVGhlIGNvbXBhcmlzb24gc2hvd2VkIHRoYXQgdGhvc2Ugd2hvIHJlY2VpdmVkIGNoaXJvcHJhY3RpYyBjYXJlIG9yIHBoeXNpY2FsIHRoZXJhcHkgd2VyZSBsZXNzIGxpa2VseSB0byBoYXZlIHN1cmdlcnkgYW5kIGV4cGVyaWVuY2VkIGxvd2VyIHRvdGFsIGhlYWx0aCBjYXJlIGNvc3RzLCBhY2NvcmRpbmcgdG8gV2VsbG1hcmsuLiAKVGhpcyBhdHRyYWN0aW9uIHdhcyBhbHNvIG9uIHRoZSBzdW1vIHdyZXN0bGVycyBpdGluZXJhcnkuIApUaGUgaGFuZCB3aW5kaW5nIGZlZWxzIHBlcmZlY3QgYW5kIHRoZSB3YXRjaCBpcyBrZWVwaW5nIGdyZWF0IHRpbWUuIEhlIGFsc28gdG9vayBjYXJlIG9mIHRoZSBzZWFscyB0aGF0IHdlcmUgZHJ5IGFuZCBjYXVzaW5nIHRvbyBtdWNoIGZyaWN0aW9uIG9uIHRoZSBzdGVtLiAKSWYgc2hlIGhhcyB0cnVseSByZXZlcnNlZCBoZXIgcG9zaXRpb24gb24gY2hpbGRyZW4sIHlvdSBhcmUgZ29pbmcgdG8gYmUgaW5maW5pdGVseSBoYXBwaWVyIGluIGEgbmV3IGZ1dHVyZSB3aXRob3V0IGhlciwgZGVzcGl0ZSBob3cgb3ZlcndoZWxtaW5nIHRoaW5ncyBtYXkgc2VlbSByaWdodCBub3cuIApJbiBteSBhbnRocm9wb2xvZ2ljYWwgb3BpbmlvbiwgZm91ciBldmVudHMgY29udHJpYnV0ZSB0byB0b2RheSdzZGV2ZWxvcG1lbnQgb2YgZ2FtYmxpbmcgaW4gdGhlIFVTQTogKGEpIFN0YXRlIGxvdHRlcmllcywgYmVnaW5uaW5nIGluTmV3IEhhbXBzaGlyZSBpbiAxOTY0IChjb3VwbGVkIHdpdGggYW4gZWNvbm9taWMgcmVjZXNzaW9uKTsgKGIpIHRoZWVudHJhbmNlIG9mIHRoZSBIb2xpZGF5IElubiBDb3Jwb3JhdGlvbiBpbnRvIGdhbWluZyBpbiAxOTc4OyAoYykgdGhlcGFzc2FnZSBvZiB0aGUgSW5kaWFuIEdhbWluZyBSZWd1bGF0b3J5IEFjdCAoSUdSQSkgYnkgdGhlIFVTIENvbmdyZXNzaW4gMTk4ODsgKGQpIGFuZCBodW1hbiBuYXR1cmUuIEluZGlhbiBOYXRpb24gQ2FzaW5vIGFjdGl2aXRpZXMgaGF2ZWJlZW4gY2FsbGVkIHRoZSAibmV3IEJ1ZmZhbG8iIGFuZCB0aGUgc21hbGwgSW5kaWFuIGNhc2lubyBpc3ZpcnR1YWxseSBhIHRoaW5nIG9mIHRoZSBwYXN0LiBHYW1ibGluZywgY2FsbGVkICJlbnRlcnRhaW5tZW50IiBieXNvbWUsIGhhcyBtYWRlIHRoZSB0cmFuc2Zvcm1hdGlvbiBmcm9tIGJlaW5nIGEgdmljZSB0byBhIG1ham9yIChhbmRncm93aW5nKSBpbmR1c3RyeS4gCiJGb3IgYSBub3JtYWwgYmFyIHNjZW5lLCB0aGUgbnVtYmVyIG9mIGJhZCBhcHBsZXMgaXMgcmVhbGx5IGxvdy4gSXQncyBwb2tlciBhbmQgaXQncyBjb21wZXRpdGl2ZSwgc28gc29tZXRpbWVzIHRoZXkgc3Rvcm0gb3V0IHdoZW4gdGhleSBsb3NlLiBCdXQgdGhleSdyZSBhbHdheXMgYmFjayBmb3IgdGhlIHNlY29uZCBnYW1lLiJUaGUgdG91cm5hbWVudHMgYXJlIG9wZW4gdG8gYW55b25lIDIxIGFuZCBvbGRlciwgYW5kIGFjY29yZGluZyB0byBNYXh3ZWxsLCBhcyBtYW55IGFzIDM1MCBwbGF5ZXJzIHBhcnRpY2lwYXRlIGluIG9uZSBvZiB0aGUgMTQgdG91cm5hbWVudHMgZWFjaCB3ZWVrLiAKSW4gdGVybXMgb2YgdGhlIHByb2ZpdGFiaWxpdHkgb2YgdGhlIG1vdmllLCBJIHRoaW5rIHdlIGhhdmUgYWxzbyB0byBkaXN0aW5ndWlzaCBoZXJlIGJldHdlZW4gdHdvIHRpbWUgcGVyaW9kczogVGhlIHRpbWUgdGhhdCB0aGUgbW92aWUgaXMgbm9taW5hdGVkIHRvIHRoZSBPc2NhciwgYWxsIHRoZSB3YXkgdG8gdGhlIE9zY2FyIGV2ZW50LCBhbmQgdGhlIHRpbWUgdGhhdCB0aGUgd2lubmVycyBhcmUgYW5ub3VuY2VkLiBGcm9tIHRoZSBkYXRhIHRoYXQgSSBzZWVuLCBpdCBpcyB0aGUgbm9taW5hdGlvbiB0aGF0IGdpdmVzIHJpc2UgdG8gdGhlIGJveCBvZmZpY2UsIG1vcmUgdGhhbiB0aGUgYWN0dWFsIHdpbm5pbmcgb2YgdGhlIG1vdmllLiBBZnRlciB0aGUgYXdhcmRzLCBpcyB0aGVyZSBhIGJlbmVmaXQgZnJvbSB0aGUgcmUgcmVsZWFzZSBvciByZWxlYXNlIHRvIG90aGVyIGZvcm1hdHM/Ck1hdHQgRGFtb24gb25jZS4gTWF0dCBEYW1vbiBvbmNlLiAKU2luY2UgdGhleSB0b29rIG15IHNob2VzICBsYWNlcyBJIGRpZG4ndCBtYWtlIGl0IGZhciBhbmQgcXVpY2tseSB0dXJuZWQgYmFjay4gClRodXMgdGhlIHByb2JhYmlsaXR5IG9mIHJvbGxpbmcgYSAxMyBpcyB6ZXJvLCBhcyBpdCBjYW5ub3QgaGFwcGVuLiBJZiBzb21ldGhpbmcgaGFzIGEgcHJvYmFiaWxpdHkgb2Ygb25lLCBpdCBtdXN0IGhhcHBlbi4gClRoZXkgbWFrZSB1cCBtb3JlIHRoYW4gaGFsZiBvZiB0aGUgNDYgc3RhZmYgb24gaGlzIHBheXJvbGwuVGhpcyBpcyBob3cgaGlzIGVtcGxveW1lbnQgc2NoZW1lIHdvcmtzLiAKQWxsIHBlb3BsZSB0aGF0IGlzZ29pbmcgdG8gYnV5IGNoaXBzIGZyb20gWnluZ2EgcG9rZXIgbXVzdCBiZSBjYXJlIHRoYXQgaXMganVzdGNoZWVyaW5nIG1vbmV5IGFuZCBub3RoaW5nIGVsc2UuIEp1c3QgeW91IGNhbiBidXkgY2hpcHMgYW5kIGFmdGVyd2luIGNhbm5vdCBzZWxsIG91dCBpdC4gClF1YW50ICBsYSBwcm9ub25jaWF0aW9uLCBwcmVzcXVlIHRvdXRlcyBsZXMgbGV0dHJlcyBncmVjcXVlcyBjb3JyZXNwb25kZW50ICBkZXMgc29ucyBxdWkgc29udCBmYW1pbGllcnMgZW4gZnJhbmFpcyBldCBkYW5zIGxlcyBhdXRyZXMgbGFuZ3VlcyBldXJvcGVubmVzLi4gCk5vdCBvbmx5IGRvIHNwcmludHMgaGVscCB5b3UgbG9zZSBNT1JFIGJlbGx5IGZhdCwgdGhleSBoZWxwIHlvdSBsb3NlIGl0IEZBU1RFUiBhbmQgd2l0aCBMRVNTIHRyYWluaW5nIHRpbWUuIFJlcGVhdGVkbHksIHN0dWRpZXMgc2hvdyB0aGF0IG1vcmUgZmF0IGxvc3MgaXMgYWNoaWV2ZWQgaW4gaGlnaCBpbnRlbnNpdHkgcHJvZ3JhbXMgdGhhdCB1c2UgMjAgdG8gMjUgbWludXRlcyBvZiB0cmFpbmluZyB0aW1lIHRoYW4gdGhvc2UgdGhhdCB1c2UgNDUgb3IgNTAgbWludXRlcyBvZiBhZXJvYmljIHRyYWluaW5nIHRpbWUuLiAKV29yayB5b3VyIG93biBob3Vycywgbm8gYm9zcywgZXRjLiAKSSB3YXMgZHJpdmluZyBkb3duIHRoZSBoaWdod2F5IG9uIG15IHdheSB0byB0aGUgYWlycG9ydCwgc28gb24gYSB0aW1lbGluZS4gVGhlIGNhciBhYm91dCAzMDAgZmVldCBpbiBmcm9udCBvZiBtZSBzdWRkZW5seSBzdGFydHMgbWFraW5nIHN3ZXJ2aW5nIG1vdmVtZW50cyBpbnRvIG11bHRpcGxlIGxhbmVzLiBEaWQgSSBtZW50aW9uIHRoZSBib3ggc3ByaW5nIG9uIHRvcCBvZiB0aGUgY2FyPyBJIGRvbiB0aGluayB0aGV5IHVzZWQgc3RyYXBwaW5nIHRvIGhvbGQgaXQgZG93biwgYmVjYXVzZSBzdWRkZW5seSBpdCBsYXVuY2hlZCBpbnRvIHRoZSBhaXIuIApKdXN0IG5lZWQgdG8gZ2V0IG1vcmUgcGVvcGxlIG91dCBhbmQgY29ubmVjdGVkIHdpdGggdGhlIGNvbW11bml0eSBzbyB5b3Uga25vdyB0aGF0IHlvdSBjYW4gZG8gYW55dGhpbmcgeW91IHdhbnQgaGVyZSwgQ29vbWVzIHNhaWQuIGhhdmUgYWxsIHRoZSBzdXBwb3J0IHlvdSBuZWVkIHRvIGJlIGEgc3VjY2Vzc2Z1bCBlbnRyZXByZW5ldXIuIFlvdSBkb24gaGF2ZSB0byBsZWF2ZSB0aGUgY2l0eS4KTWFrZSBoZXIgcnVuIGZvciB0aGUgYmFsbCBhIDEwMCB0aW1lcyB0aGUgc2FtZSBkYXksIGFuZCB0aGUgZG9nIGlzIG5vIGxvbmdlciBhZnJhaWQuIFlvdSBtaWdodCBiZSBhYmxlIHRvIGRvIHRoZSBzYW1lIHdpdGggdGhlIGVsZXZhdG9yLCBnaXZlbiB0aGF0IHlvdSBkb2cgaXMgcmVhbGx5IGludG8gdG95cy4uIAo0cnNtaXQgIDcgcG9pbnRzICBzdWJtaXR0ZWQgMyBtb250aHMgYWdvCkluIHRlcm1zIG9mIGdhbWVzLCBsb3dlciBzdGFrZXMgdGhhbiA1LzUgaXMgYSByYWtlZmVzdCBpbiBsYS4gSSB0aGluayBhdCBldmVyeSBzdGFrZSB0aGV5IGRvIGEgJDUgZHJvcC4gSWYgeW91IGRvbiBjYXJlIGFib3V0IHRoYXQsIHRoZSBnYW1lcyBhcmUgc3VwZXIgc29mdCBhbmQgZnVuLCBJIHRoaW5rIHRoZXJlIGEgMS8yIGNhcHBlZCBhdCAkMjAwIGF0IHRoZSBiaWtlPyBUaGVyZSBhIGZ1biAyLzUgJDQwMCBmaXhlZCBidXkgaW4gZ2FtZSB3aGVyZSB5b3UgZWFybiAkNCBpbiBjb21wcyBwZXIgaG91ci4gMSBwb2ludCAgc3VibWl0dGVkIDEgbW9udGggYWdvClRoZSBBSCBnbG9zc2VkIG92ZXIgZ2FwcyBpbiBpdGVtaXphdGlvbiwgbm90IHRvIG1lbnRpb24gbWFkZSBldmVyeSBkcm9wIGludG8gIldvdywgY29vbCEgSSB3b25kZXIgaG93IG11Y2ggaXQgc2VsbHMgZm9yIHNvIEkgY2FuIGJ1eSB3aGF0IEkgcmVhbGx5IHdhbnQuIiBUaGUgZ2FtZSB3YXMgYnVpbHQgd2l0aCB0cmFkaW5nIGluIG1pbmQsIHRoYXQgbXVjaCBpcyB0cnVlLiBCdXQgdGhlIEFIIG1hZGUgdHJhZGluZyBzbyBjb252ZW5pZW50LCBlYXN5LCBhbmQgc2FmZSwgaXQgc3Vja2VkIGF3YXkgdGhlIHNvdWwgb2YgZmFybWluZyBhbmQgZ2V0dGluZyB1cGdyYWRlcy4gCkxlIHN1a2l5YWtpLCB1biBwbGF0IHJlcHJzZW50YXRpZiBkdSBkdmVsb3BwZW1lbnQgZGUgbGEgY29uc29tbWF0aW9uIGRlIHZpYW5kZSBhdSBKYXBvbiAgcGFydGlyIGRlIGwncmUgTWVpamkuIFRvdWpvdXJzIGRsaWNpZXV4IGRhbnMgbGEgY2hhbmUgSW1haGFuLCBhdmVjLCBvdXRyZSBsYSB2aWFuZGUgZGxpY2lldXNlLCBsZSBwbGFpc2lyIGQnb2JzZXJ2ZXIgbGVzIGdlc3RlcyBwcmNpcyBldCBsZ2FudHMgZGUgbGEgcGVyc29ubmUgcXVpIGZhaXQgY3VpcmUgbGUgYnVmLgpTbyBoZSBpbXBsZW1lbnRlZCBudW1lcm91cyB0aGluZ3MgdG8gdHJ5IHRvIHN0b3AgdGhlIGdhbWUgZnJvbSBiZWluZyBjb21wZXRpdGl2ZSBpbiB0aGUgc2FtZSB3YXkuIApWYXNodWtldmljaCwgd2hvIGhhcyBtb3JlIHRoYW4gMTIwLDAwMCBmb2xsb3dlcnMgb24gSW5zdGFncmFtIGFuZCBwZW5uZWQgYSBib29rIGFib3V0IHNlZHVjaW5nIG9saWdhcmNocywgYWxyZWFkeSBmYWNlcyBsZWdhbCBwcm9ibGVtcyBpbiBSdXNzaWEuClNpbmNlIHRoZW4sIEJ1cmtlIGhhcyBiZWNvbWUgYSBtdWNoIHNvdWdodCBhZnRlciBzcGVha2VyIGFuZCBvcmdhbml6ZXIsIHNoZXBoZXJkaW5nIHRoZSBtb3ZlbWVudCB0b3dhcmQgZ3JlYXRlciBpbmNsdXNpb24gYW5kIGhlbHBpbmcgdG8gZmFjaWxpdGF0ZSBhIHdvcmxkd2lkZSBjb252ZXJzYXRpb24gYWJvdXQgcmVjb3ZlcnksIGNvbnNlbnQsIHRveGljIG1hc2N1bGluaXR5IGFuZCBzeXN0ZW1pYyBtaXNvZ3lueS4gSW4gMjAxNywgc2hlIGFuZCBvdGhlciAiU2lsZW5jZSBCcmVha2VycyIgd2VyZSBuYW1lZCBUaW1lJ3MgUGVyc29uIG9mIHRoZSBZZWFyLgpTdXJlLCB5b3UgY2FuIGNyaXRpY2l6ZSBoaW0gZm9yIGFueXRoaW5nIHlvdSB3YW50LiBIZWxsLCBJIHRoaW5rIGhlIG9uZSBvZiB0aGUgbW9zdCBkZXN0cnVjdGl2ZSBmb3JjZXMgaW4gYW1lcmljYW4gcG9saXRpY3Mgc2luY2UgR2luZ3JpY2guIEkgZG9uIGxpa2UgYW55IG9mIHRoZW0uIApBc3BpcmF0aW9uIGlzIGdyZWF0ZXIgdGhlbiByZWFsaXNhdGlvbiwgYmVjYXVzZSBpdCBrZWVwcyB1cyBhY3R1YWxseSBjbGltYmluZyB1cHdhcmRzIHRvd2FyZHMgc29tZSB1biBhdHRhaW5lZCBnb2Fscy4gVG8gcHVyc3VlIHRoaXMsIG9uZSBuZWVkcyB0byBiZSBpbiBmdWxsIGNvbW1hbmQgb2Ygb25lc2VsZiwgZXh1ZGluZyBjb25maWRlbmNlLiBBZHZlcnNpdHkgZ2l2ZXMgYmlydGggdG8gY291cmFnZS4gSW4gZGVmZWF0IGFyZSBoaWRkZW4gdGhlIHNlZWRzIG9mIHN1Y2Nlc3MuIFRoZSBxdWVzdCBmb3Igd2lzZG9tIGFuZCBpdHMgcXVhbGl0eSBpcyBmdWxseSBkZXBlbmRlbnQgdXBvbiB0aGUgYWJpbGl0eSB0byBzZWUgYW5kIGNvcnJlY3Qgb3duIHdlYWtuZXNzZXMsIGluc3RlYWQgb2YgYXNraW5nIG90aGVycyB0byBpbXByb3ZlLiBTZWxmIGRpc2NpcGxpbmUsIG11c3QgYmUgdGFrZW4gd2l0aCByaWdpZGl0eSB0byBtYWtlIGl0IHBhcnQgb2YgY2hhcmFjdGVyLgpUaGUgdG90YWwgaW5mbHVlbmNlICAgZWNvbm9taWMsIHBvbGl0aWNhbCwgZXZlbiBzcGlyaXR1YWwgICBpcyBmZWx0IGluIGV2ZXJ5IGNpdHksIGV2ZXJ5IFN0YXRlaG91c2UsIGV2ZXJ5IG9mZmljZSBvZiB0aGUgRmVkZXJhbCBnb3Zlcm5tZW50LiAKSSBjb25zaWRlciB0aGlzICJnb29kIiBSTkcuIApXb3JraW5nc3VwZXJoYXJkICAyIHBvaW50cyAgc3VibWl0dGVkIDIgbW9udGhzIGFnbwpTaW5jZSB0aGUgYmVnaW5uaW5nIG9mIDIwMTksIHR3byBleHRyYSByZXBhaXIgdmVoaWNsZXMgaGF2ZSBiZWVuIG1hZGUgYXZhaWxhYmxlLiAKSW4gZmFjdCwgaWYgaXRzIGEgY3VsdCB0aGF0IG9uZSB0ZW5kcyB0byBqb2luIGFzIGFkdWx0IHJhdGhlciB0aGFuIGJlaW5nIGJvcm4gaW50bywgdGhlbiB0aG9zZSBmYWN0b3JzLCBkZXBlbmRpbmcgb24gdGhlaXIgYWdlcywgY291bGQgaGF2ZSBiZWVuIGR1ZSB0byBhIGxvdCBvZiBvdGhlciByZWFzb25zLiBBbmQgdGhlcmUgd2FzIGFsc28gYSBNTVIgdmFjY2luZSAnc2NhcmUnIGRlY2FkZXMgYWdvLk1vc3QgYWR1bHRzIGhhdmUgbm8gaWRlYSB3aGF0IHRoZXkgd2VyZSBvciB3ZXJlbid0IHZhY2NpbmF0ZWQgZm9yIGFzIGtpZHMuIApDcmV3cyB3ZXJlIGFibGUgdG8gZ2V0IEM1QSBvcGVuIGFuZCBncm9vbWVkIGZyb20gdGhlIHBhcmtpbmcgbG90IGluIEJveWxzdG9uIHVwIHRocm91Z2ggdG8gTGl0dGxlam9obiBEci4gd2hlcmUgd2UgbWVldCBSZWRmaWVsZHMgdHJhaWxzLiBBdCB0aGlzIHRpbWUgdGhlcmUgaXMgc3RpbGwgdG9vIG11Y2ggd2F0ZXIgaW4gdGhlIHdvb2RzIGFuZCBub3QgZW5vdWdoIHNub3cgdG8gb3BlbiBhbnl0aGluZyBlbHNlLiBFbmpveSBzYWZlbHkhClNvbWUgY2FuLCBidXQgdGhlIHNsb3duZXNzIG9mIHNvbWUgZGV2IHRvb2xzLCBhbmQgaW50ZWdyYXRpb24gd2l0aCBpQ2xvdWQgYW5kIG90aGVyIEFwcGxlIHNlcnZpY2VzIGNhbm5vdCwgcHV0dGluZyBhc2lkZSBmb3IgdGhlIG1vbWVudCB0aGF0IEkgd291bGQgYmUgc3VwcG9ydGluZyBvbmUgb2YgdGhlIGJpZ2dlc3QgdGF4IGF2b2lkZXJzIG9uIHRoZSBwbGFuZXQuIApJIGhvcGUgaGUgZG9lcyBnZXQgc3VzcGVuZGVkLiAKV2UgZW5kZWQgdXAgZ2V0dG5nIGEgRmF0IFBhbG8uIFRoZSBtYW4gd2hvIHJlbnRlZCB0IHRvIHVzIHNob3dlZCB1cyBzb21lIHRhbmsgbiB0aGUgdHJ1bmsgd3RoIHNvbWUgbmRjYXRvciBvbiB0IGFuZCB0b2xkIHVzIGxwZyBJIGhhZCBubyBkZWEgd2hhdCBoZSB3YXMgdGFsa25nIGFib3V0LiAKV2hlbiBJIG5lZWRlZCBhIHNob3QsIEkganVzdCB3ZW50IHRvIHRoZSBudXJzZSBhbmQgam9rZWQgd2l0aCB0aGUgbnVyc2UgIkhleSwgSSBuZWVkIHRvIHNob290IHVwLCBJIG5lZWQgbXkgZml4IiAoZHVtYiBqb2tlLCBidXQgdy9lIHdlIHdlcmUgaGF2aW5nIGZ1bikgYW5kIGp1c3QgZ2F2ZSBteXNlbGYgYSBzaG90LiBJIHRoaW5rIHRvd2FyZHMgbXkganVuaW9yL3NlbmlvciB5ZWFyLCBteSBudXJzZSBkaWRuIGV2ZW4gY2FyZSBtdWNoIHRvIHN1cGVydmlzZS4gClRoZXJlIGFyZSBhbHNvIHNldmVyYWwgc2NlbmljIGhpa2luZyB0cmFpbHMgbmVhcmJ5LCBpbmNsdWRpbmcgb25lIHRoYXQgd2luZHMgdGhyb3VnaCBOYW50YWhhbGEgTmF0aW9uYWwgRm9yZXN0IHRvIHRoZSBzdHVubmluZyA3MCBmb290IEdsZW4gRmFsbHMuIApJIHNwb2tlbiBhYm91dCBteSBkYW5jZSBleHBlcmllbmNlIHdpdGggbWFueSBwZW9wbGUsIGFuZCBJIG9ubHkgZXZlciBoZWFyZCwgIkFuZCBpdCBhIGdyZWF0IHdheSB0byBtZWV0IHdvbWVuLCBJIGJldCEiIGZyb20gbWVuLiBJIG5ldmVyIGhlYXJkIHdvbWVuIHNheSBhbnl0aGluZyBlcXVpdmFsZW50LiAKQW55d2F5cywgZHJpbmtpbmcgaXMgc28gbXVjaCBsZXNzIGZ1biB0byBtZSB0aGVzZSBkYXlzLiAKSSdtIGludGVyZXN0ZWQgaW4gdGhlIGFsbGVnaWFuY2UgcXVlc3RzIGJ1dCB0aG9zZSBkb24ndCBjb21lIHRpbGwgQXByaWwsIGJ1dCBhcyBhIFB2UCBwbGF5ZXIgbWFpbmx5LCBJIGRvbid0IHJlYWxseSBmZWVsIGxpa2UgSSd2ZSBiZWVuIG9mZmVyZWQgdGhhdCBtdWNoLiBBZGRpdGlvbmFsbHkgZnJvbSBhIHB2ZSBiYWNraW5nLCB0aGVyZSdzIG5vdCByZWFsbHkgYSBsb3QgdGhhdCdzIG5ldyBpbiB0aGUgZ2FtZS4gClNvbWV0aGluZ0F0TXlXaW5kb3cgIDMgcG9pbnRzICBzdWJtaXR0ZWQgMyBkYXlzIGFnbwpPbmUgdGhpbmcgdGhhdCBtb3N0IHBlb3BsZSBvdmVybG9vayB3aGVuIGl0IGNvbWVzIHRvIHBsYXN0aWMgY2hpcHMgaXMgaG93IGVhc3kgeW91IGNhbiBjbGVhbi4gSSBoYXZlIHRvIGFkbWl0IHdlIGFsbCBzcGlsbCBvdXIgYWR1bHQgYmV2ZXJhZ2VzIGV2ZXJ5IG5vdyBhbmQgYWdhaW4sIGJ1dCB3aXRoIGEgbGl0dGxlIHNvYXAgYW5kIHdhdGVyIHRoZXkgYXJlIGdvb2QgYXMgbmV3LiBTbyB3aGVyZSBkaWQgd2UgZ2V0IHRoZSBpZGVhIHRvIHB1cmNoYXNlIHRoZSAyMDAgUGxhc3RpYyBQb2tlciBDaGlwIFNldCBBbmQgQ2Fyb3VzZWw/IFdlbGwsIG15IGZhdGhlciBoYXMgYmVlbiBhIGxvbmcgdGltZSBtZW1iZXIgb2YgdGhpcyBsb2NhbCBjb3VudHJ5IGNsdWIgYW5kIHRoZXkgaGF2ZSBhYm91dCA1MCBvZiB0aGVzZS4KTGF1cmEgSGFycmllciwgd2hvIHdhcyBhbiBhY3RpdmlzdCBpbiAiQmxhY0trS2xhbnNtYW4sIiB3b3JlIGEgc3R1bm5lciBvZiBhIGdyZWVuIGFuZCByZWQgamV3ZWxlZCBjaG9rZXIgd2l0aCBoZXIgc2V4eSBpY2UgYmx1ZSBib2R5IGh1Z2dlciB0aGF0IHNwYXJrbGVkIG9uIHRoZSBjYXJwZXQgYW5kIGluY2x1ZGVkIGEgaGlnaCBzbGl0LiBJdCB3YXMgYmVzcG9rZSBMb3VpcyBWdWl0dG9uIGRvbmUgaW4gb3JnYW5pYyBjcmVwZSBzaWxrIHdpdGggZ2xhc3MgYmVhZCBhbmQgU3dhcm92c2tpIGNyeXN0YWwgc2hhcmQgZGV0YWlsaW5nLgpBIHN1aXQgaXMganVzdCBwcm9mZXNzaW9uYWwgY2xvdGhpbmcsIG1ha2VzIGNvbXBsZXRlIHNlbnNlIHRoZXkgd291bGQgd2FudCBzb21lb25lIHdlYXJpbmcgYSBzdWl0LiBJZiB5b3UgY2FuIHdyYXAgeW91ciBoZWFkIGFyb3VuZCB0aGF0IGNvbmNlcHQgeW91ciBiZXN0IG5vdCB3b3JraW5nIGFueXdoZXJlIG5lYXIgY29ycG9yYXRlIEFWLgpUaGUgRVIgZG9jdG9yIHRob3VnaHQgSSB3YXMgaGF2aW5nIGEgc3Ryb2tlLi4gCk15IHNvbiBkb2VzbiB3YWxrICAgaGUgaGFzIHNwYXN0aWMgZGlhcGxlZ2ljIGNlcmVicmFsIHBhbHN5IGFuZCBkeXN0b25pYS4gWW91IGhhdmUgYW55IGlkZWEgaG93IGhhcmQgaXQgaXMsIHRvIGdldCBhIDV5byByZWFkeSBmb3Igc2luZ2xlIGRpZ2l0IHdlYXRoZXIgYW5kIGEgbm9ybWFsIGh5cGVyIDR5bz8gSGFyZCBhZi4gSSB0aGVuIGxvYWQgdGhlbSB1cCwgYW5kIGhpcyBzdHJvbGxlciwgZHJpdmUgdG8gdGhlIHN0b3JlLCBnZXQgdGhlbSBib3RoIG91dCwgZ2V0IG1pbGsgb3Igd2hhdGV2ZXIgICB0aGVuIGRvIGl0IGFsbCBvdmVyIGFnYWluIGluIHJldmVyc2UuLiAKQnV0IGkgYW0gc2NhcmVkIGFib3V0IG1vbmV5IGFuZCBpIHdvcmsgYWJvdXQgODAgaG91cnMgcGVyIHdlZWssIGxlYXZpbmcgbWUgbGl0dGxlIHRpbWUgb3IgZW5lcmd5IHRvIHNob3AgY29ycmVjdGx5Li4gClJlYWxseSBiZWNhbWUgYSBEd2F5bmUgV2FkZSBmYW4gdGhhdCBuaWdodCB0b28uIEd1eSB3YXMgc3VwZXIgY2hpbGwgYW5kIEdhYnJpZWxsZSBVbmlvbiB3YXMgYWJzb2x1dGVseSBzdHVubmluZyBpbiBhIGZpZXJ5IHJlZCBkcmVzcy4gCiJCeSBiZWNvbWluZyBwYXJ0IG9mIFBoaWxpcHMsIHRoZSBIQ0lTIGJ1c2luZXNzIHdpbGwgaGF2ZSBhIGdyZWF0ZXIgb3Bwb3J0dW5pdHkgdG8gdGhyaXZlIGFuZCBncm93LiAKSSBhc3N1bWUgaXQgd2FzIHVzZWQgYXMgYW4gb25vbWF0b3BvZWlhIGluIHNvbWUgcGFydHMgb2YgdGhlIHdvcmxkLCBtYXliZSBhIGJhdHRsZSBjcnksIG1heWJlIGEgd2VpcmQgZmlyc3QgbmFtZSBpbiBNZXNvcG90YW1pYSB3aG8ga25vd3M/IEJ1dCBJIGtub3cgd2h5IGl0IGlzIHVzZWQgbm93LiBBbmQgaXQgaGFzIHRvIHN0b3AuIFdhbmRlcmluZyBhaW1sZXNzbHkgZm9yIGNlbnR1cmllcyB3aXRoIG5vIHdheSBvZiBpbnRlcmFjdGluZyB3aXRoIGFueW9uZSBvciBhbnl0aGluZyBpcyBoYXJkIGVub3VnaCwgYnV0IGtub3dpbmcgd2h5LCBrbm93aW5nIHRoYXQgeW91IG93ZSB0aGlzIHVuZW5kaW5nIHRvcnR1cmUgdG8gc3VjaCBhIGRpc2d1c3RpbmcgcHJhY3RpY2UsIHN1Y2ggYSBkZWdyYWRpbmcgYWN0LCBpcyBub3RoaW5nIHNob3J0IG9mIGhlbGwgb24gZWFydGguLiAKVG9wIEZpdmUgV2F5cyB0byBXaW4gaW4gTGFzIFZlZ2FzClNvIHlvdSBjYW4gb25seSBpbWFnaW5lIHRoZSBsb29rIG9uIHRoZWlyIGZhY2VzIHdoZW4gYSB3cmFwcGVkIHByZXNlbnQgd2FzIHNpdHRpbmcgb24gdGhlaXIgdGFibGUgYmVmb3JlIG9uZSBvZiB0aGVpciBnYW1lcy4uIApJdCBhbGwgYnVsbHNoaXQuIApUaGVyZSBhcmUgc29tZSBvZiB1cywgdGhlIG1vcmUga2luZCwgSSBzdXNwZWN0LCB3aG8gYXJlIHNheWluZwoyLiBNb3N0IHBsYXllcnMgdGlwIHRoZSBkZWFsZXIgd2hlbiB0aGV5IHdpbiBhIHBvdC4gCkRvbmFsZCBTbWl0aCB0b2xkIFBhdWwgU21pdGggaGlzIGFyZ3VtZW50IHdhcyB3aXRoIENhcGxpbmdjciBhbmQgd2FzICcnbm9uZSBvZiB5b3VyIChQYXVsIFNtaXRoJ3MpIGJ1c2luZXNzLiIgR3J1bmRhIHNhaWQgUGF1bCBTbWl0aCB0aGVuIGdvdCBhIHNob3RndW4gYW5kIHBsYWNlZCBpdCB0byBoaXMgYnJvdGhlcidzIG5lY2suIERvbiBhaWQgdG9sZCBoaXMgYnJvdGhlciAieW91IHdvdWxkbid0IHB1bGwgdGhhdCBHcnVuZGEgY29udGludWVkLiAKVGhpcyBwYXJ0bmVyc2hpcCBwcm9kdWNlZCBmaW5hbmNpYWwgYWR2aWNlIGNvbnRlbnQgb24gdGhlIG5ldHdvcmsncyB0aHJlZSBzaXRlczogVGhlIEJ1bXAsIFRoZSBOZXN0IGFuZCBUaGUgS25vdC4gCkhvdyB5b3UgZGVhbCB3aXRoIHRoaXMgaXMgaW1wb3J0YW50LiBJZiB5b3Ugc2F5IGFueXRoaW5nIHlvdSBhcmUgZ29pbmcgdG8gc291bmQgZ3JlZWR5LiBJIHdvdWxkIGNoYWxrIGl0IHVwIHRvIGEgbGVhcm5pbmcgY3VydmUgdGhhdCB5b3UgY2FuJ3QgZGVwZW5kIG9uIGFueXRoaW5nIHRvIGhlci4gClRoZXkgY2l0ZWQgdGhlIHN1Y2Nlc3Mgb2YgVGV4YXMgQ2FyZCBIb3VzZSwgd2hpY2ggaGFzIGJlZW4gb3BlcmF0aW5nIHNpbmNlIGVhcmx5IDIwMTUgaW4gQXVzdGluIGFuZCBub3cgaGFzIHR3byBsb2NhdGlvbnMuIApBYm91dCBNYWxwcmFjdGljZSBEb2N0b3JzIGFyZSBodW1hbiwgYnV0IHRoZWlyIG1pc3Rha2VzIGNhbiBhZmZlY3QgdGhlIHF1YWxpdHkgb2YgYW5vdGhlciBwZXJzb24ncyBsaWZlIG9yIGV2ZW4gc3Vydml2YWwuIApCdXQgdGhhdCBkb2VzbiBtZWFuIEkgYXNzaWduICBpc20gIGJhc2VkIGF0dHJpYnV0ZXMgb3IgZXhwbGFuYXRpb25zIHRvIGFsbCBzaXR1YXRpb25zIG9yIGJlaGF2aW9ycy4uIApKdXN0IGFuIEZZSSwgdGhlIHBsYXRmb3JtIHRoZXkgdXNlIGlzIGNhbGxlZCBDS0FOIHdoaWNoIGlzIHdlbGwga25vd24gZm9yIGl0cyBwb3dlcmZ1bCBkYXRhIEFQSXMuIEluIG9yZGVyIGZvciB0aGVzZSB0aGluZ3MgdG8gYmUgdXNlZnVsLCB0aGUgYmlnIGlzc3VlIGlzIGhvdyB0byBnZXQgZ292ZXJubWVudCBib2RpZXMgdG8gYmUgbW9yZSBwcm9hY3RpdmUgdG8gcHV0IG91dCB0aGVpciBkYXRhIHdpdGggcmVnYXJkcyB0byBVVSBLZXRlcmJ1a2FhbiBJbmZvcm1hc2kgZm9yIHRoZSBiZW5lZml0IG9mIHRoZSBwdWJsaWMuIFRoZXJlZm9yZSB0aGUgcGVvcGxlIHdvcmtpbmcgb24gdGhpcyB3b3VsZCBsaWtlbHkgYmUgbW9yZSBidXN5IG1ha2luZyBTT1BzLCBjbGVhbmluZyB1cCBkYXRhLCBhbmQgdHJhaW5pbmcgdXNlcnMuIFNvIGl0IHF1aXRlIHVuZGVyc3RhbmRhYmxlIHRoYXQgc29tZSBVSS9VWCBjb2RpbmcgYmVzdCBwcmFjdGljZXMgbWlnaHQgdGFrZSBhIGJhY2sgc2VhdCAoanVzdCB1c2UgdGhlIGRlZmF1bHQgdGhlbWUgYW5kIHNsYXAgb3VyIGxvZ28gb24gaXQhKS4gVG8gbXkgZXhwZXJpZW5jZSwgUGVtcHJvdiBES0kgaGF2ZSBiZWVuIHF1aXRlIHJlY2VwdGl2ZSB0byB1c2luZyBvcGVuIHNvdXJjZSB0ZWNobm9sb2dpZXMgaW4gcmVjZW50IHllYXJzLgpUaGUgb25lIHZhbHVlIG9mIGl0IGlzIHRoZSBsb25nIGxpc3Qgb2Ygc2hpdCBhdCB0aGUgZW5kIHRoYXQgdGhlIGRydWcgbWlnaHQgZG8gdG8geW91IHRoYXQgeW91ciBkb2N0b3IgbWlnaHQgZmFpbCB0byBtZW50aW9uLiBUaG9zZSBkaXNjbGFpbWVycyBhcmUgaGlsYXJpb3VzLiBMaWtlLCBpdCBiZSBzb21lIGRydWcgdGhhdCBzdXBwb3NlZCB0byBkbyBzb21ldGhpbmcgdG8geW91ciBraWRuZXlzIG9yIHdoYXRldmVyIGFuZCBpdCBiZSBsaWtlLCBNYXkgY2F1c2UgbmVydm91c25lc3MsIGJsaW5kbmVzcywgbWVtb3J5IGxvc3MsIG5pZ2h0IHRlcnJvcnMsIGRpc29yaWVudGF0aW9uLCBuYXVzZWEsIGRpYXJyaGVhLCBkaWFiZXRlcywgdmVydGVicmFsIG1lbHRpbmcsIGNyYW5pYWwgc2hyaW5rYWdlLCBzdWRkZW4gZGVhdGgsIG9yIGtpZG5leSBmYWlsdXJlIFt3YWl0LCBraWRuZXkgZmFpbHVyZT8hXS4gU29tZSBwYXRpZW50cyBleHBlcmllbmNlZCByYWNpbmcgaGVhcnQsIGhhbGx1Y2luYXRpb25zLCBhbmQgbmV0aGVyd29ybGQgY2hhbm5lbGluZy4gRG8gbm90IGxlYXZlIHRoZSBob3VzZSB3aGlsZSB0YWtpbmcgRGl6YXN0cmEuIFN0b3AgdGFraW5nIERpemFzdHJhIGlmIHlvdSBleHBlcmllbmNlIHN1ZGRlbiBlc29waGFnZWFsIG9yZ2FuIGVqZWN0aW9uLCBsb3N0IHRpbWUsIHVuZXhwbGFpbmVkIHJlbG9jYXRpb24sIG9yIHBhaW50IGNoaXAgY3JhdmluZ3MuCldpdGggbWluaW1hbCBkaWFsb2d1ZSBhbmQgZGVsaWNhdGUgZGlyZWN0aW9uLCBKaW1lbmV6IHdlYXZlcyB0aGVzZSB0d28sIGFtYmlndW91cyB0YWxlcyB0b2dldGhlciB0aHJvdWdoIGEgc2VyaWVzIG9mIG5vdmVsIGluc3BpcmVkIGNoYXB0ZXJzLiAKV2hpY2ggbGVhZHMgdXMgYmFjayB0byB0aGF0IGltcG9zc2libGUgdG8gYW5zd2VyIHlldCBjb25zdGFudGx5IGduYXdpbmcgcXVlc3Rpb246IHdoYXQgaXMgZnJlZSBzcGVlY2g/CkNvbnNpZGVyaW5nIHRoZSBtZW50YWxpdHkgYW5kIHZpZXdzIG9mIHRoZSBwb2tlciBleHBlcnRzIGFyb3VuZCwgdGhlIHBva2VyIGZhbnMgaGF2ZSBhbHNvIHR1cm5lZCBvdXQgaW50byBnZW51aW5lIGNhcmQgdXNlcnMuIApZb3VyIHBhcmVudHMgaGF2ZSBub3QgYWNjZXB0ZWQgdGhlIGlkZWEgb2Ygb25lIG9mIHRoZWlyIGtpZHMgYmVpbmcgYW4gYXRoZWlzdC4gClRoZXJlIGFyZSBvdGhlciBzcGVjaWVzIHdoZXJlIHlvdSBjYW4gc2VlIGEgcmF0aGVyIGxhcmdlIHN1YnNldCBzZWVtIHRvIGFsbW9zdCBpbnRlbnRpb25hbGx5IGhhcm0gb3IgbmVnYXRlIHByb2dyZXNzIGZvciB0aGUgd2hvbGUuIApJdCB0aW1lIGZvciBldmVyeW9uZSB0byBhcG9sb2dpemUgdG8gU2VtZW55YS4gU2hlIHdhcyBib3JuIGEgd29tYW47IHNoZSB3YXMgcmFpc2VkIGFzIGEgd29tYW47IHNoZSBpZGVudGlmaWVzIGFzIGEgd29tYW4uIFNoZSBzaG91bGQgcnVuIGFzIGEgd29tYW4uCiJEZWxpdmVyeSBib3kgd2Fsa3MgaW50byBhbiBvcmd5IiBtYXkgc291bmQgbGlrZSB0aGUgYmVnaW5uaW5nIG9mIGEgcG9ybm8gdW50aWwgeW91IGV4cGVyaWVuY2UgaXQgaW4gcmVhbCBsaWZlLCB3aGVyZSBpdCBpcyBjbG9zZXIgdG8gdGhlIHByb2xvZ3VlIG9mIGFuIEl0YWxpYW4gaG9ycm9yIG1vdmllLi4gCkJPVUNIRVJWSUxMRSwgUXVlLiAgIExvd2UncyBDb21wYW5pZXMgSW5jLiBpcyByZWR1Y2luZyBpdHMgQ2FuYWRpYW4gZm9vdHByaW50IGJ5IGNsb3NpbmcgMzEgcHJvcGVydGllcyBhY3Jvc3MgdGhlIGNvdW50cnkgaW4gYSBiaWQgdG8gc3RyZWFtbGluZSBpdHMgYnVzaW5lc3MuCkkgbmV2ZXIgdXNlID4wLjVHYiBvZiBkYXRhIG9uIG15IHNoaXR0eSBzbWFydHBob25lLiBJIG1ha2UgYSBwbGF5bGlzdCBvbiBteSBjb21wdXRlciBhbmQgZG93bmxvYWQgaXQgdG8gbXkgcGhvbmUgYmVmb3JlIEkgbGVhdmUgZm9yIHdvcmsuIEkgaG9uZXN0bHkgaGF2ZSBubyBpZGVhIGhvdyBtdWNoIGRhdGEgc3RyZWFtaW5nIHRoZSBtdXNpYyB3b3VsZCB1c2Ugb3IgZXZlbiBob3cgbXVjaCBkYXRhIHdvdWxkIGJlIHVzZWQgaWYgeW91IGp1c3QgZG93bmxvYWRlZCBldmVyeSBwbGF5bGlzdCBvdmVyIDNHLzRHLiAKSW4gUG8gS2UgTm8gaG93ZXZlciwgdGhpcyBpcyBub3QgdGhlIGNhc2UuIEluIFBvIEtlIE5vIGluc3RlYWQgb2YgYSByYW5kb20gbnVtYmVyIGJlaW5nIGRyYXduLCBhIHBlcnNvbiwga25vd24gYXMgYSBkZWFsZXIsIGVtcGxveXMgdXNlIG9mIGEgc3RhbmRhcmQgZGVjayBvZiA1MiBjYXJkcywgam9rZXJzIG5vdCBpbmNsdWRlZC4gCkJ1dCB0aGUgQ2hpbGRyZW4gYW5kIEZhbWlseSBDb3VydCBBZHZpc29yeSBhbmQgU3VwcG9ydCBTZXJ2aWNlICggQ2FmY2FzcykgLCB3aGljaCBsb29rcyBhZnRlciB0aGUgaW50ZXJlc3RzIG9mIGNoaWxkcmVuIGluIGZhbWlseSBwcm9jZWVkaW5ncywgc2FpZCBtb3JlIHlvdW5nc3RlcnMgYXJlIGJlaW5nIHByb3RlY3RlZC4KQXQgdGhlIHRpbWUgSSB0aG91Z2h0IEkgaGFkIGFib3V0IDM1JSBlcXVpdHksIGJ1dCBJIHJlYWxpemUgSSB3YXNuIGFjY291bnRpbmcgZm9yIGVub3VnaCBkaXJ0eSBvdXRzIHRoYXQgZmlsbCB1cCB0aGUgN3MgICBJIHdhcyBhY3R1YWxseSBhdCBhYm91dCAyNSUuIApBIG5ldyAic3RvcnkiIGFib3V0IGh1bWFuIHNtdWdnbGluZyB3aXRoIHRoZSBoZWxwIG9mIGFuIEFDT1JOIGVtcGxveWVlIGlzIGZlc3RlcmluZy4gClVzZSByZXNwZWN0ZnVsIGxhbmd1YWdlLiBMaWtlIGFueSBjb21tdW5pdHksIHRoZSBvbmxpbmUgY29udmVyc2F0aW9uIGZsb3VyaXNoZXMgb25seSB3aGVuIG91ciBNZW1iZXJzIGZlZWwgd2VsY29tZSBhbmQgc2FmZS4gCkFzIHdlbGwsIG15IGxpZ2h0cyBub3cgZ28gb2ZmIEFMTCB0aGUgdGltZSEgVHVybmVkIHNlbnNpdGl2aXR5IHdheSBkb3duIGFuZCB0aGV5IHN0aWxsIGdvIG9mZi4gQW5kLCBldmVyeSB0aW1lIChuaWdodCB0aW1lKSBJIHB1bGwgdXAgbGl2ZSB2aWV3IG9uIG15IHBob25lLCBpdCBhdXRvbWF0aWNhbGx5IGtpY2tzIHRoZSBmbG9vZCBsaWdodHMgb24uIFNvIGZydXN0cmF0aW5nISBUaGV5IGhhZCBubyBpZGVhLiBHbGFkIHRoaXMgd2FzIGEgZ2lmdCBhbmQgbm90IGEgcHVyY2hhc2Ugb3IgaXQgd291bGQgaGF2ZSBiZWVuIHJldHVybmVkLgpMJ2Fzc2VtYmxlYSAgcHJlc2llZHV0YSBkYWwgcHJlc2lkZW50ZSBkZWwgY29uc2lnbGlvIGRpcmV0dGl2byBvLCBpbiBjYXNvIGRpIHN1YSBhc3NlbnphLCBkYWwgdmljZSBwcmVzaWRlbnRlIGUsIGluIG1hbmNhbnphIGRpIHF1ZXN0aSwgZGEgcGVyc29uYSBkZXNpZ25hdGEgZGFsbCdhc3NlbWJsZWEuLiAKQnV0IER1bmZvcmQgbWF5IGFsc28gYmUga2VlcGluZyBoaXMgZXllcyBvbiBhbm90aGVyIGdyb3VwIGluIHRoZSBhdWRpZW5jZS4gCkl0IHdhcyBhbiB1cGJlYXQgbmVpZ2hib3VyaG9vZCwgYnV0IG5vdCB3aXRob3V0IHF1aXJrcywgc28gbmFpdmVseSwgSSB0aG91Z2h0IEkgd291bGQgd2F2ZSBiYWNrLiAKU3VkZGVubHksIHlvdXIgbmlnaHQgb2YgYSBnb29kIHRpbWUgd2l0aCB5b3VyIGZyaWVuZHMgaXMgc3RhcnRpbmcgdG8gdHVybiBhcyB0aGUgcGVvcGxlIHN0YXJ0IHRvIGFyZ3VlIGFib3V0IHdob3NlIGNoaXBzIGFyZSB3aG9zZS4gCiJJIGZlZWwgbGlrZSB0aGF0J3Mgd2hhdCBtYWtlcyB0aGUgZ3JlYXRlc3QgaW1wYWN0LCIgSW5ncmFtIHNhaWQgYWZ0ZXIgcHJhY3RpY2Ugb3V0c2lkZSBMb25kb24uICJBbmQgdGhhdCdzIHdoYXQgd2UncmUgdHJ5aW5nIHRvIGJyaW5nLCBpcyB1bml0eSwgYW5kIHRvIGJyaW5nIHRoaXMgd29ybGQgdG9nZXRoZXIuIFdoZW4gdGhlIGVudGlyZSB0ZWFtIGRvZXMgc29tZXRoaW5nLCB0aGUgc2FtZSwgSSB0aGluayBpdCdzIGp1c3QgbW9yZSBwb3dlcmZ1bCB0aGF0IHdheS4iCkhlIG5ldmVyIHJlYWxseSBzdGF5ZWQgcHV0IGFuZCBjb2xsYWJvcmF0ZWQgd2l0aCBodW5kcmVkcyBvZiBtYXRoZW1hdGljaWFucyBhcyBhIHJlc3VsdC4gCk1IOiBTZWNvbmQgcGVyaW9kIHVuZGVyd2F5LiBIdWdoc29uIHRlbGxzIHVzIFJ5YW4gS2VzbGVyIGhhcyBiZWVuIHRoZSBiZXN0IENhbnVjayBmb3J3YXJkIHRoaXMgc2Vhc29uLiBJZiB0aGF0IGRvZXNuIGFkZXF1YXRlbHkgc3VtIHRoaW5ncyB1cCwgSSBkb24ga25vdyB3aGF0IGRvZXMuIApJIGhhdmUgYmVlbiBmb3N0ZXJpbmcgaGltIGZvciBhIGZldyB3ZWVrcyBhbmQgd2lzaCBJIGNvdWxkIGFkb3B0IGhpbSBidXQgY2FudCBiZWNhdXNlIG9mIG15IGpvYi4gQnV0IHdoYXQgSSBjYW4gZG8gaXMgdGhlIG5leHQgYmVzdCB0aGluZyBhbmQgaGVscCBoaW0gZmluZCBhIGZvcmV2ZXIgaG9tZSBmYXN0ZXIuCkVkaXQ6IE9oLCBhbmQganVzdCB3YW50ZWQgdG8gYWRkOiB0aGUgY29tcGFyaXNvbiB0byBib2R5IG9kb3IgaXMgcmVhbGx5IHJlYWxseSBwcm9ibGVtYXRpYywgYnR3LiBCeSBjb21wYXJpbmcgdGhpbmdzIGxpa2UgcmFjaXNtLCBob21vcGhvYmlhLCBwZXJzZWN0dXRpb24sIHdhciwgZXRjLiBXaXRoIGJvZHkgb2RvciwgeW91IGFyZSBpbXBseWluZyB0aGF0IHRoZXNlIHRoaW5ncyBhcmUgYWJzb2x1dGVseSBub3JtYWwgYW5kIGNhbm5vdCBiZSBjaGFuZ2VkLiAKRXZlbiB3aGVuIHRoZSBQcmVzaWRlbnQgc2F5cyBoZSB3YW50cyB0byBhY2hpZXZlIGEgZGlwbG9tYXRpYyBzb2x1dGlvbiwgYXMgaW4gTm9ydGggS29yZWEsIGhlIGRvZXMgc28gdW5kaXBsb21hdGljYWxseSwgYWdhaW5zdCB0aGUgYWR2aWNlIG9mIG91ciBhbGxpZXMsIHJlZnVzaW5nIHRvIG5lZ290aWF0ZSBkaXJlY3RseSB3aXRoIHRoZSBOb3J0aCBLb3JlYW5zLiAKQUJDIE9yZyBtdXN0IHRyYW5zZmVyIHRoZWlyIGFzc2V0cyByZWdhcmRsZXNzLi4gCklmIHlvdSdyZSBiYWJ5IGRvZXNuJ3Qgd2FudCBpdCwgc2ltcGx5IG1pc3MgaXQgb3V0LiAKSGUgd291bGQgaGF2ZSBzdWRkZW4gb3V0YnVyc3RzIGluIGNsYXNzICAgc2NyZWFtaW5nLCBzbGFtbWluZyBpdGVtcyBhcm91bmQgdGhlIHJvb21zLCB0aHJvd2luZyBkZXNrcyBhbmQgY2hhaXJzLiAKQW5kIHNvIHRoZSBOYXRpb25hbCBFbnF1aXJlciBtYXkgZ2V0IGEgUHVsaXR6ZXIgZm9yIGludmVzdGlnYXRpdmUgam91cm5hbGlzbSwgYXMgdGhleSBzaG91bGQuIGlmIHdlIHJlYWxseSBsdWNreSwgdGhlIHN0b3J5IE9wcmFoIGJpZyBmYXQgZ2F5IGxpZXMgYW5kIExpeiBUYXlsb3IgZ2V0dGluZyBtYXJyaWVkIGFnYWluIGFuZCBUYXlsb3IgU3dpZnQgYmVpbmcgYSBzZXggYWRkaWN0IHdpbGwgYWxzbyBiZSB0cnVlLiBiZWNhdXNlIGl0IHdvdWxkICJjaGFuZ2UgaGlzdG9yeSIgdGhlIHdheSB0aGUgRWR3YXJkcyBzdG9yeSBkaWQsIGJ1dCBiZWNhdXNlIGl0IHdpbGwgbWFrZSBteSBjaGVjayBvdXQgbGluZSByZWFkaW5nIGV2ZXIgc28gbXVjaCBtb3JlIGFtdXNpbmcuCkV4ZWN1dGl2ZSBjaGVmIEphc29uIER1cmlnIGRyb3BwZWQgYnkgdGhlIHRhYmxlLCBhcyBkaWQgc2V2ZXJhbCBvdGhlciBzdGFmZi4gSGUgY2FtZSB0byB0YWxrIGFib3V0IGJlZWYgYW5kIHRoZSBKb3NwZXIgb3ZlbiB1c2VkIGF0IHRoZSByZXN0YXVyYW50LiAKU21hbGx0aXRzbXBnLjNncCAwMC4gCkZyb20gdGhyZWUgdGFibGVzIGF3YXksIGEgcmFzcHkgVGV4YXMgZHJhd2wgY3V0cyB0aHJvdWdoIHRoZSB3YXRlcnkgZ3JlZW4gYWlyIG9mIEJpbmlvbidzIGNhcmRyb29tLiAKQ2l0aXplbiB1CklmIHdlIGNyYXNoIG91dCBJIGd1ZXNzIGl0IHdpbGwgYW5zd2VyIHRoZSBxdWVzdGlvbiAiQXJlIHdlIGZ1Y2tlZCB5ZXQ/IiBiZWNhdXNlIHRoZSBhbnN3ZXIgd2lsbCBiZSBCdXQgaXQgZG9lc24gYW5zd2VyIGFueSBxdWVzdGlvbnMgYWJvdXQgYXJyYW5nZW1lbnRzIG9yIGFncmVlbWVudHMuIApNYWFyIG9vayBnZW5vdGVuIHZhbiBkZSBhZndpc3NlbGluZyB2YW4gZGUgYW5kZXJlIGhvdGVscy4gCklsIGZhdXQgY2VwZW5kYW50IHF1ZSBsJ29uIHJldHJvdXZlIGxlcyBkZXV4IGNvbmRpdGlvbnMgOiB1biB0cm91YmxlIHN1ZmZpc2FtbWVudCBncmF2ZSBwb3VyIGFib2xpciBsZSBkaXNjZXJuZW1lbnQgb3UgbGUgY29udHJsZSBkZXMgYWN0ZXMgOyBhYm9saXRpb24gY29udGVtcG9yYWluZSAgbCdhY3RlIGRsaWN0dWV1eC4gClRoZXJlIGFyZSBwbGVudHkgb2YgdmVnZXRhcmlhbiByZXN0YXVyYW50cywgaXQgbm90IHRoYXQgZGlmZmljdWx0IHRvIGJlIGEgdmVnZXRhcmlhbiBoZXJlIGFsdGhvdWdoIGlmIHlvdSBlYXRpbmcgb3V0IGF0IHJhbmRvbSBwbGFjZXMgdGhleSBtaWdodCBzdGlsbCBnaXZlIHlvdSBtZWF0IGV2ZW4gaWYgeW91IHdvIGJ1IGNoaSByb3UuIERlcGVuZHMgd2hlcmUgeW91IGVhdCBvdXQsIGlmIHlvdSBlYXQgYW55d2hlcmUgZGVjZW50IHRoZXkgbGlrZWx5IGJlIG1vcmUgcHJvZmVzc2lvbmFsIGFuZCBjYXRlciB0byB5b3VyIG5lZWRzLi4gCkl0IGlzIGVzcGVjaWFsbHkgYm9yaW5nIGlmIHlvdSBwbGF5aW5nIGNhc2ggZ2FtZXMgYXQgYSBsaW1pdCB3aGVyZSB0aGUgbW9uZXkgd29uIGFuZCBsb3N0IGlzIHByZXR0eSBtdWNoIGluc2lnbmlmaWNhbnQuIApJcyB5b3VyIERvYyBhbiBpbmRpZ2VudCBnYW1ibGVyIHdpdGggYSB0YWxlbnQgZm9yIHBpYW5vIHBsYXlpbmcgYW5kIGNhcmQgZGVhbGluZywgaW4gYWRkaXRpb24gdG8gYSBmYXN0IGRyYXcgYW5kIGEgYmFkIGNvdWdoPyBJcyBoZSBoZWxwaW5nIGhpcyBmcmllbmRzIGZpZ2h0IGEgZmV1ZCwgb3IgYXJlIGhpcyBpbnRlbnRpb25zIG1vcmUgbm9ibGU/IElzIGhlIGEgZGlzYWdyZWVhYmxlIGx1c2ggcHJvbmUgdG8gcHVsbGluZyBzdGVlbCBvciBza2lubmluZyBhIGd1biwgb3IgZG9lcyBoZSB0cnkgb3RoZXIgbWVhbnMgb2Ygc2V0dGxpbmcgZGlzcHV0ZXMgdW50aWwgdGhlcmUgaXMgbm8gb3RoZXIgb3B0aW9uIGJ1dCBhIHNwaXJpdGVkIGV4Y2hhbmdlIG9mIGxlYWQ/IFRob3NlIGFyZSB5b3VyIHF1ZXN0aW9ucyB0byBhbnN3ZXIuLiAKVGhlIG1pbnV0aWFlIG9mIHRoZSBVUyBQYWtpc3RhbiBzdHJhdGVnaWMgZGlhbG9ndWUgYWxtb3N0IGNvbXBsZXRlbHkgaWdub3JlcyB0aGUgaGFyc2ggcmVhbGl0aWVzIG9mIHRoZSBVUyBQYWtpc3RhbiByZWxhdGlvbnNoaXAgdGhlIHRoaW5ncyB0aGF0IGFyZSBvdmVyYXJjaGluZywgb24gYSBtYWNybyBsZXZlbCBhbmQgdmlzaWJsZSB0byB0aGUgbmFrZWQgZXllIGZyb20gMzAsMDAwIGZlZXQgaW4gdGhlIGFpci4gClRoZSB1bHRpbWF0ZSBwYXJ0IG9mIGhpcyBmYW50YXN5IGlzIGJhc2ljYWxseSBnb25lIG5vdyB0aG91Z2gsIGJlY2F1c2UgaGlzIHVsdGltYXRlIGZlZWxzIHNvIG11Y2ggbGVzcyBwb3dlcmZ1bC4gQXMgYSBTd2FpbiwgSSBkb24gZmVlbCBhbnl3aGVyZSBuZWFyIGFzIHRhbmt5IG9yIGRvbWluYW50IG9yIGRhbWFnaW5nIHdpdGggdGhlIG5ldyB1bHQgYXMgdGhlIG9sZCBvbmUgd2hlcmUgeW91IGp1c3Qgd2FkZWQgaW4gYW5kIGJlY2FtZSBhIGdpYW50IGNsb3VkIG9mIHJlZ2VuZXJhdGluZyBkZWF0aC4KQWdhaW4sIHRoZSBNb29lciBpcyBncmVhdCBmb3IgdGhlIHByaWNlLCBidXQgeW91IGNhbiBkbyBtdWNoIGJldHRlciBmb3IgdGhlIGJ1ZGdldCBoZSBsaXN0ZWQuIFRoZSBNb29lciBpcyBkZWZpbml0ZWx5IG5vdCB0aGUgYmVzdCBpbiBoaXMgcHJpY2UgcmFuZ2UKV0lOQ0hFU1RFUi4gCkEgdG90YWwgb2YgbW9yZSB0aGFuIDIwLDEwMCBzcXVhcmUgZmVldCAoMSw4NzAgc3F1YXJlIG1ldGVycykgb2YgZmxleGlibGUgZnVuY3Rpb24gc3BhY2UgYXQgSHlhdHQgUmVnZW5jeSBDaG9uZ3FpbmcgbWFrZXMgdGhlIGhvdGVsIGEgbGVhZGluZyBjaG9pY2UgZm9yIGhpZ2ggbGV2ZWwgbWVldGluZ3MsIGNvbmZlcmVuY2VzLCB3ZWRkaW5ncyBvciBzb2NpYWwgZ2F0aGVyaW5ncy4gClRoZW4sLiAKQml0Y29pbiBoYXMgdGhlIGNhcGFiaWxpdHkgdG8gYmVjb21lIG11Y2ggbW9yZSB3aWRlbHkgYWRvcHRlZCB0aGFuIGl0IGlzIG5vdy4gCkF1Y3VuIGRhbnMgbGUgU2l0ZSB3ZWIgb3UgbGVzIEZvbmN0aW9ubmFsaXQgbmUgc2F1cmFpdCBpbnRlcnByIGNvbW1lIHZvdXMgY29uZiB1biBkcm9pdCwgdW4gdGl0cmUsIHVuIGludCBvdSB1bmUgYXV0cmUgbGljZW5jZSBkYW5zIGxlcyBsb2dpY2llbHMgaW50IGRhbnMgbGUgU2l0ZSB3ZWIgb3UgZGFucyBsZXMgRm9uY3Rpb25uYWxpdCBvdSBwb3V2YW50IHQgZHUgU2l0ZSB3ZWIsIHkgY29tcHJpcywgbm90YW1tZW50LCBxdWVscXVlIGRyb2l0IGRlIHByb3ByaSBpbnRlbGxlY3R1ZWxsZSBkYW5zIGxlcyBsb2dpY2llbHMuCkRlc2hhbGIga25uZW4gd2lyIGZyIGRpZXNlIGZyZW1kZW4gSW5oYWx0ZSBhdWNoIGtlaW5lIEdld2hyIGJlcm5laG1lbi4gCk9uZ29pbmcgaW5kdXN0cnkgaW52b2x2ZW1lbnQ6IGVtZXJnaW5nIGV2aWRlbmNlIGFuZCBkYXRhUmVjZW50IGRhdGEgY29uc2lzdGVudGx5IHNob3cgdGhhdCBhdCBnbG9iYWwsIEV1cm9wZWFuIGFuZCBuYXRpb25hbCBsZXZlbCwgdGhlIG1ham9yaXR5IG9mIHRoZSBpbGxpY2l0IGNpZ2FyZXR0ZSBtYXJrZXQgc3RpbGwgY29tcHJpc2VzIHRvYmFjY28gaW5kdXN0cnkgcHJvZHVjdCAodGFibGUgMikuIExhdGVzdCBlc3RpbWF0ZXMgc3VnZ2VzdCB0aGF0IGFwcHJveGltYXRlbHkgNjAlIDcwJSBvZiB0aGUgaWxsaWNpdCBtYXJrZXQgaXMgdG9iYWNjbyBpbmR1c3RyeSBwcm9kdWN0IHdpdGggc3BlY2lmaWMgZmlndXJlcyB2YXJ5aW5nIGZyb20gNTglICgyMDE2LCBFVSBsZXZlbCwgaW5kdXN0cnkgZnVuZGVkIGRhdGEpIHRvIDY5JSA3MyUgKHNlaXp1cmUgZGF0YSBmb3IgMjAxMSBhbmQgMjAxMiBhdCBnbG9iYWwgbGV2ZWwgYW5kIDIwMTQgYW5kIDIwMTYgYXQgVUsgbGV2ZWwpLiBUaGlzIGhhcyBvY2N1cnJlZCBkZXNwaXRlIHRoZSB1c2Ugb2YgQ29kZW50aWZ5IGluLCBhY2NvcmRpbmcgdG8gaW5kdXN0cnkgY2xhaW1zLCBvdmVyIDEwMCBjb3VudHJpZXMgd29ybGR3aWRlIChvbmxpbmUgc3VwcGxlbWVudGFyeSBhcHBlbmRpeCAxKS4yMwpTb25uZW5saWNodCB3aXJkIHZvbiBkZXIgTWVlcmVzb2JlcmZsY2hlIGRpcmVrdCB6dXJjayBhdWYgZGVuIFNhdGVsbGl0ZW4gcmVmbGVrdGllcnQgdW5kIGVudGhsbHQgRGV0YWlscyBiZXIgZGllIFdhc3Nlcm9iZXJmbGNoZSB1bmQgU3RybXVuZ2VuLCBkaWUgc29uc3QgdW5zaWNodGJhciBzaW5kIFdlaXRlcmUgSW5mb3MgenVtIEZvdG86IGhpZXIga2xpY2tlbi4gCldoYXQgbW9yZSwgcG9saWNlIGhhdmUgZGlzY292ZXJlZCBzaGUgc2VjcmV0bHkgaGFkIHR3byBvdGhlciBiYWJpZXMsIG9uZSBib3JuIGluIDE5OTUgYW5kIGFub3RoZXIgaW4gMTk5OS4gCkFzIGZhciBhcyB5b3VyIGhvcGUgdGhhdCBzb21lb25lIEkga25vdyBpcyBhIHZpY3RpbSBvZiBmaXJlYXJtIHZpb2xlbmNlLCB0aGVuIHlvdSBhbHJlYWR5IGhhdmUgeW91ciB3aXNoLiBJIGhhdmUgZmFtaWx5IGluIHN0YXRlIGFuZCBsb2NhbCBsYXcgZW5mb3JjZW1lbnQgdGhhdCBoYXZlIGJlZW4gYWZmZWN0ZWQgYnkgZ3VuIHZpb2xlbmNlLCBidXQgdGhhdCBkb2VzIG5vdCBtYWtlIG15IHBhc3Npb24gZm9yIGZpcmVhcm0gb3duZXJzaGlwIGh1cnRmdWwgaW4gbXkgZXllIG9yIHRoZWlycy4gVG8gcXVvdGUgYW4gdW5jbGUgb2YgbWluZSB0aGF0IHdhcyBvbmNlIHNob3QgImd1bnMgYXJlbid0IHdoYXQncyB3cm9uZyB3aXRoIHRoaXMgd29ybGQsIGl0J3MgdGhlIGxhY2sgb2YgZWR1Y2F0aW9uLiBJIGJvdWdodCBoaXMgc2hvdGd1biBvZmYgaGltIGFuZCBwcm9taXNlZCB0byBzZWxsIGl0IGJhY2sgd2hlbiBoZSBrbmV3IGhvdyB0byB1c2UgaXQgc2FmZWx5LiBIZSBuZXZlciBkaWQgc28gbm93IEknbSBnaXZpbmcgaXQgdG8geW91LiIgSSBzdGlsbCBoYXZlIHRoZSBzaG90Z3VuIHRoYXQgZ2F2ZSBteSB1bmNsZSBhIGxpbXAgdGlsbCB0aGUgZGF5IGhlIGRpZWQgYW5kIGl0IGhvbGRzIG1vcmUgc2VudGltZW50YWwgdmFsdWUgdG8gbWUgdGhhbiBpdCdzIG1hcmtldCBwcmljZS4gSSBob3BlIHRvIGdpdmUgaXQgdG8gbXkgY2hpbGRyZW4gb25lIGRheS4KRHVyaW5nIGhpcyB2aXNpdHMgdG8gQ3JvY2tmb3JkcyBvbiAyMSBhbmQgMjIgQXVndXN0IDIwMTIsIE1yIEl2ZXkgICB3aXRoIGFub3RoZXIgZ2FtYmxlciBDaGV1bmcgWWluIFN1biAgIHBlcnN1YWRlZCB0aGUgY3JvdXBpZXIgdG8gcm90YXRlIHRoZSBtb3N0IHZhbHVhYmxlIGNhcmRzIGJ5IHByZXRlbmRpbmcgdG8gYmUgc3VwZXJzdGl0aW91cy4KSWYgeW91IGNvbmNlcm5lZCBhYm91dCB5b3VyIHBldCBoZWFsdGgsIHBsZWFzZSBjb250YWN0IHlvdXIgdmV0IGZvciBhZHZpY2UuIElmIHRoZXkgdW5hdmFpbGFibGUsIHBsZWFzZSBjYWxsIGFuIGVtZXJnZW5jeSBhbmltYWwgaG9zcGl0YWwgYXMgc29vbiBhcyBwb3NzaWJsZSB0byBtYWtlIHN1cmUgeW91IGNhbiBnZXQgdGhlIGluZm9ybWF0aW9uLCBhZHZpY2UsIG9yIGhlbHAgeW91IG5lZWQhIFRoZXkgY2FuIGp1ZGdlIHdoZXRoZXIgaXQgc2FmZSB0byB3YWl0IHVudGlsIHlvdXIgcmVndWxhciB2ZXQgaXMgYXZhaWxhYmxlLCBvciBpZiB5b3VyIGRvZyBuZWVkcyB0byBiZSBzZWVuIGltbWVkaWF0ZWx5LiBJZiBwb2lzb25pbmcgbWF5IGJlIGludm9sdmVkLCBwbGVhc2UgY2FsbCBvbmUgb2YgdGhlIGZvbGxvd2luZyBudW1iZXJzOi4gCkZvciB0aGUgY2hpbGRyZW4gb2YgbmFyY2lzc2lzdGljIHBhcmVudHMKQXMgb3RoZXJzIGhhdmUgbWVudGlvbmVkLCB0aGUgdG94aW4gdGhpbmcgaXMgQlMuIElmIGl0IHdlcmUgdHJ1ZSwgcGVvcGxlIHdvdWxkIGJlIGR5aW5nIGFmdGVyIG1hc3NhZ2VzLiBJRiAoYW5kIEkgcmVhbGx5IG1lYW4gSUYgICBzaG93IG1lIGEgd2VsbCBkZXNpZ25lZCBzdHVkeSBzaG93aW5nIHRoYXQgaXQgZG9lcykgdGhlcmUgYXJlIG1ldGFib2xpYyB3YXN0ZXMgYmVpbmcgc3RpcnJlZCB1cCBieSBtYXNzYWdlLCB0aGUga2lkbmV5cyBhbmQgbGl2ZXIgd291bGQgYmUgbWFuYWdpbmcgdGhvc2UgdGhpbmdzIGFueXdheS4uIApOb3RWZXJ5R29vZF9BdExpZmUgIDAgcG9pbnRzICBzdWJtaXR0ZWQgMTQgZGF5cyBhZ28KWW91IGNhbiBkbyB0aGlzIGJ5IHNlYXJjaGluZyBoMmcyLiAKVGhpcyBpcyB3aGF0IG1ha2VzIHRoZSBnYW1lIGV4Y2l0aW5nIGFuZCBpbnRlcmVzdGluZy4gVGhlIGltcG9ydGFudCBwb2ludCB0byByZW1lbWJlciBoZXJlIGlzIGZvciB5b3UgdG8gdXNlIHlvdXIganVkZ21lbnQgd2hlbiB0byB0YWtlIGFjdGlvbiB3aGVuIHlvdSBibHVmZiBvciB3aGVuIG90aGVyIHBsYXllcnMgYXJlIGJsdWZmaW5nLi4gCiJPdXIgY29uY2x1c2lvbiB3YXMgdGhhdCB0aGUgbG9jYWwgZW1pc3Npb25zIGFyZSBhIHN0cm9uZyBzb3VyY2Ugb2Ygb3pvbmUgYW5kIHNtYWxsIHBhcnRpY2xlcywiIExlZmVyIHNhaWQuICJUaGUgbW9kZWwgc2FpZCB0aGF0IG92ZXIgaGFsZiBvZiB0aGUgYWlyIHBvbGx1dGlvbiBpcyBjb21pbmcgZnJvbSBsb2NhbCBzb3VyY2VzIGFuZCB0aGUgcmVzdCBpcyBjb21pbmcgZnJvbSBvdGhlciBjb3VudHJpZXMuIgpJIGFsc28gdGhpbmsgc3RhcnMgaGF2ZSBhIGh1Z2UgaW5jZW50aXZlIHRvIGxvb2sgaW50byB0aGUgcG9zc2liaWxpdHkgb2YgZ2hvc3RpbmcvY29sbHVzaW9uICh3aGF0ZXZlcikgYmVjYXVzZSB0aG91c2FuZHMgb2YgcGVvcGxlIHdlcmUgd2F0Y2hpbmcgb24gaGlzIHN0cmVhbS4gV2l0aCB0aGF0IG1hbnkgZXllcyBvbiBhIHBvc3NpYmxlIGNoZWF0ZXIgYW4gaW52ZXN0aWdhdGlvbiBpcyBjZXJ0YWlubHkgdGhlIGNvcnJlY3QgbW92ZSBvbiB0aGVpciBwYXJ0LgpDTEUgQ2l0eSBDb3VuY2lsIHBheXMgS2VuIEpvaG5zb24gZm9yIG1vcmUgdW5pdGVtaXplZCBleHBlbnNlcyBDTEUgQ2l0eSBDb3VuY2lsIHBheXMgS2VuIEpvaG5zb24gZm9yIG1vcmUgdW5pdGVtaXplZCBleHBlbnNlcyBDb3VuY2lsbWFuIEtlbiBKb2huc29uIHJlY2VudGx5IGFza2VkIHRoZSBjaXR5IHRvIHJlaW1idXJzZSBoaW0gZm9yICQyMzYgd29ydGggb2YgZ2Fzb2xpbmUgaGUgc3RhdGVzIHRoYXQgaGUgYm91Z2h0IHRvIG1vdyBsYXducyBmb3Igc2VuaW9yIGNpdGl6ZW5zIGFuZCBjbGVhciBkZWJyaXMgZnJvbSB2YWNhbnQgbG90cyBpbiBoaXMgRWFzdCBTaWRlIHdhcmQgYmV0d2VlbiBTZXB0LiAyMCBhbmQgT2N0LiAzMS4gCkxvdWlzLiAKU28gY29tbWVyY2UgaXMsIHF1aXRlIHNpbXBseSwgdGhlIGV4Y2hhbmdlIG9mIGdvb2RzIGFuZCBzZXJ2aWNlcywgdXN1YWxseSBmb3IgbW9uZXkuIFdlIHNlZSBjb21tZXJjZSBhbGwgYXJvdW5kIHVzIGluIGluIG1pbGxpb25zIG9mIGRpZmZlcmVudCBmb3Jtcy4gCkhlIG1heSBoYXZlIGRvbmUgY29rZSB3aXRoIHlvdSB0aGF0IG5pZ2h0LCBidXQgaGUgYWRkaWN0ZWQgdG8gcGlsbHMgb3IgaGVyb2luLiBDb2tlIGRvZXNuIGhhdmUgd2l0aGRyYXdhbHMgbGlrZSB0aGF0LiBXaGF0IHVyIGRlc2NyaWJpbmcgaXMgb3BpYXRlIHdpdGhkcmF3YWxzLiAKV2hhdCBkbyB3ZSBrbm93IGFib3V0IHRoYXQgZGVjayBvZiBjYXJkcyB0aGF0IHdlIHVzdWFsbHkgYnJpbmcgb3V0IGluIGEgcGFydHkgb3IgYSBzaW1wbGUgZ2F0aGVyaW5nPyBNb3JlIHRoYW4gYSB0b3ksIHRoZXJlIGlzIGEgd2hvbGUgaGlzdG9yeSBiZWhpbmQgdGhpcyBwYWNrIG9mIHBsYXlpbmcgY2FyZHMuCidUaGUgc2l4dGggU3RvbmUnOiBBbml0YSBQYWxsZW5iZXJnLCBLZWl0aCBSaWNoYXJkcycgcGFydG5lciBhbmQgbXVzZSB0byB0aGUgUm9sbGluZyBTdG9uZXMsIGRlYWQgYXQgNzNUaGUgaGlkZGVuIGhpc3Rvcnkgb2YgaG93IHRoZSBSb2xsaW5nIFN0b25lcyBwdWxsZWQgb2ZmIHRoZWlyIGxlZ2VuZGFyeSBzZWNyZXQgRWwgTW9jYW1ibyBzaG93CldvbmRlcmZ1bC4gCiJXZSBzb21ldGltZXMgc2VlIHRoZSB3b3JsZCBpbiBkaWZmZXJlbnQgd2F5cywgYnV0IGFzIE9zY2FyIGFuZCBGZWxpeCBkaXNjb3ZlciwgYW5kIGFzIEkgYmVsaWV2ZSBpcyB0cnVlIGZvciBvdXIgYmlsYXRlcmFsIHJlbGF0aW9uc2hpcCB0aGF0IGV2ZW4gd2hpbGUgd2UgYXQgdGltZXMgcGFzcyB0aHJvdWdoIHJvdWdoIHBhdGNoZXMsIHdlIGNhbiBmaW5kIGEgd2F5IHRvIGxpdmUgdG9nZXRoZXIsIHRvIHN1cHBvcnQgZWFjaCBvdGhlciwgYW5kIHRvIHByb3NwZXIsIiB0aGUgYW1iYXNzYWRvciBhZGRlZC5PYmxpdmlvdXMgb2YgdGhlIHRlbnNpb25zIGNvb2tpbmcgYmV0d2VlbiBQYWtpc3RhbiBhbmQgVVMgaW4gdGhlIGNsb3NlIGtpdGNoZW4gY2FiaW5ldHMgb2YgcG9saXRpY2FsIGFuZCBtaWxpdGFyeSBhcmVuYSwgdGhlIGF1ZGllbmNlcyB3ZXJlIHNwb250YW5lb3VzIGluIHRoZWlyIHJlc3BvbnNlIGFuZCBhcHByZWNpYXRpb24gd2hlbmV2ZXIgbmVlZGVkIHdpdGggcmVzcGVjdGZ1bCBzaWxlbmNlIGFuZCBsYXVnaHRlci4gCkhlY2ssIGV2ZW4gd2l0aCBkaXN0YW5jZS4gCkJhcnlsYSBhbG9uZSwgb3IgdG8gYm90aCBNci4gCkNvdXJzZSBzdG9wcyBpbmNsdWRlIEdyZWVuIFR1cnRsZSBpbiBQcmluY2UgRnJlZGVyaWNrLCBDbHViIDkxMSBpbiBNZWNoYW5pY3N2aWxsZSwgVG9vdHMgQmFyIGluIEhvbGx5d29vZCBhbmQgQ0pzIEJhY2sgUm9vbSBpbiBMdXNieS4gSWYgeW91IHdvdWxkIGxpa2UgdG8gbWVldCBhdCBhIGNvdXJzZSBzdG9wLCB0aGVyZSB3aWxsIGJlIGEgJDEwIGRvbmF0aW9uIHJlcXVlc3RlZCBwZXIgcGVyc29uIGF0IHRoZSBkb29yLiBUaGVyZSB3aWxsIGJlIGEgNTAvNTAgUmFmZmxlIGFuZCBkb29yIHByaXplcy4gQWxsIHByb2NlZWRzIHdpbGwgYmVuZWZpdCB0aGUgSHVudGVyIERlYW4gU2NvdHQgRm91bmRhdGlvbi4KMSkgVmljdGltcyBzaG91bGQgbm90IGJlIHNoYW1lZC4gVGhleSBzaG91bGQgc3BlYWsgdXAgYW5kIHRoZWlyIGFjY3VzYXRpb25zIHNob3VsZCBiZSB0YWtlbiBzZXJpb3VzbHkuCkxhYmF0dCBCcmV3aW5nIENvbXBhbnkgTGltaXRlZApJIGhhdmUgdGhpcyBoeXBvdGhlc2lzIHRoYXQgbXVjaCBvZiB0aGF0IGhhcHBlbnMgYmVjYXVzZSB0aGUgdHlwaWNhbCAibG9naWMgYnJvIiBpZG9scyBhcmUgbGlrZSwgdGhlIGZpcnN0IHBlb3BsZSB0byByZWFsbHkgc2hvdyBzYWlkIGxvZ2ljIGJyb3MgdGhhdCB0aGV5IGNhbiB0aGluayB0aHJvdWdoIHRoaW5ncyBpbiBhIHN5c3RlbWF0aWMgZmFzaGlvbi4gTG90cyBvZiB5b3VuZyBsb2dpYyBicm9zIHNlZW0gdG8gaGF2ZSBiZWVuIGluIHZlcnkgcmVsaWdpb3VzIGhvdXNlaG9sZHMsIG9yIGp1c3QgaW4gc2l0dWF0aW9ucyB3aGVyZSB0aGV5IHdlcmUgbmV2ZXIgcmVhbGx5IHRhdWdodCBsb2dpYyBpbiBhIGZvcm1hbCBzZXR0aW5nLiBTbyBpdCBraW5kIG9mIGZlZWxzIGxpa2UgdGhleSBnaXZpbmcgeW91IGEgc3VwZXJwb3dlciwgd2hpY2ggaXMgY29uc2lzdGVudCB3aXRoIHRoZSBiZWhhdmlvdXIgdGhhdCBmb2xsb3dzIGZyb20gdGhhdC4KU2VjcnRhcmlhdCBwZGFnb2dpcXVlIGRlIGxhIGZvcm1hdGlvbgpIZSB3YXMgYW5kIGlzIGEgY29tcGxldGUgamVyay4gSGUgcHJldHR5IG11Y2ggbmV2ZXIgc2VlcyBteSBzb24uIFRoZSBtb3N0IGhlIGV2ZXIgZG9uZSBpcyBhYm91dCA2IHRpbWVzIGluIGEgeWVhciwgbmV2ZXIgbW9yZSB0aGFuIGFuIGhvdXIgYXQgYSB0aW1lLiAKQydlc3Qgc2FucyBkb3V0ZSByZWdyZXR0YWJsZSwgbWFpcyBjJ2VzdCBhaW5zaS4gTGVzIHBlcnNvbm5hZ2VzIG9mZmljaWVscywgYmxhbmMgYmxldSwgYWRtaXJzIGV0IGhvbm9ycyBwYXIgbGEgYm91cmdlb2lzaWUgYm9uIGNoaWMgYm9uIGdlbnJlLCBzdXNjaXRlbnQgcmFyZW1lbnQgbGEgZmVydmV1ci4gCklmIHlvdSBoYXZlIGFueSBjb25jZXJucyBhYm91dCB5b3VyIG93biBoZWFsdGggb3IgdGhlIGhlYWx0aCBvZiB5b3VyIGNoaWxkLCB5b3Ugc2hvdWxkIGFsd2F5cyBjb25zdWx0IHdpdGggYSBwaHlzaWNpYW4gb3Igb3RoZXIgaGVhbHRoY2FyZSBwcm9mZXNzaW9uYWwuIApJIHJlYWxseSBkbyBiZWxpZXZlIHRoYXQgaXMgaW1wb3J0YW50LCBvdGhlcndpc2UgeW91IGVuZCB1cCBsaWtlIHNvbWUgb2YgdGhlc2UgZmVja2xlc3MgY2hhcmFjdGVycyB3ZSBzZWUgaW4gdGhlIG5ld3MgZXZlcnkgZGF5LiAKQ29tZSB0byB0aGluayBvZiBpdCwgdGhlIENoaWVmIFZpY2tlcnkgdGhpbmcgd2FzIG5vdCBhIGJpZyBkZWFsIGluIHRoZSBib29rIChvciBhdCBhbGw/KSwgc28gd2Ugc2F3IGFsbW9zdCBubyBhZ2dyZXNzaW9uIGZyb20gQWxhbi4gCklmIENoZW5leSBzYXlzIHRoZXJlIHdhcyBubyBjb25uZWN0aW9uLCB0aGVuIHdoeSBkaWQgdGhleSBsaWUgYW5kIHRlbGwgdGhlIEFtZXJpY2FuIHBlb3BsZSB0aGVyZSB3YXM/IElmIG5vdCBEYXJ0aCBWYWRlciwgdGhhbiB3YXMgaXQgQnVzaCBoaW1zZWxmPyBUaGUgQ0lBPyBXaG8gaXMgcmVzcG9uc2libGU/IFBlcmhhcHMgYSBUcnV0aCBhbmQgUmVjb25jaWxpYXRpb24gQ29tbWlzc2lvbiBjYW4gZmluZCBvdXQuIApCdXQgdGhlcmUgYXJlIHNvbWUgaG9sZXMgaGVyZSBpbiBZb3JrIHN0YW5jZSwgYXMgYWx3YXlzLCBhbmQgZXh0cmVtZSBwb2ludHMgb2Ygd2Vha25lc3MgZGV0ZWN0YWJsZSBpbiBoaXMgbGF0ZXN0IFBSIHBsb3kgaW4gdGhlIG1pZGRsZSBvZiBhIHNlbnNpdGl2ZSByZWxhdGlvbnNoaXAgd2l0aCBhIGNvYWNoIG9yIHBsYXllci4KVGhlIFVuaXZlcnNpdHkgb2YgVXRhaCBIaW5ja2xleSBJbnN0aXR1dGUgb2YgUG9saXRpY3MgaXMgdGhyaWxsZWQgdG8gcHJlc2VudCB0aGUgMjAxNSBTYW0gUmljaCBMZWN0dXJlLCBDb252ZXJzYXRpb24gd2l0aCBNaWNoYWVsIExld2lzIGluIGNvbmp1bmN0aW9uIHdpdGggdGhlIERhdmlkIEVjY2xlcyBTY2hvb2wgb2YgQnVzaW5lc3MuTGV3aXMgYWNjbGFpbWVkIE5ldyBZb3JrIFRpbWVzIGJlc3RzZWxsZXJzIGluY2x1ZGUgTW9uZXliYWxsLCBUaGUgQmxpbmQgU2lkZSwgRmxhc2ggQm95cywgQm9vbWVyYW5nLCBhbmQgTGlhciBQb2tlciB0byBuYW1lIGEgZmV3LiBIaXMgYm9vayBvbiB0aGUgZmluYW5jaWFsIG1lbHRkb3duLCBUaGUgQmlnIFNob3J0IGlzIGN1cnJlbnRseSBiZWluZyBtYWRlIGludG8gYSB3aWRlbHkgYW50aWNpcGF0ZWQgZmlsbSBzdGFycmluZyBCcmFkIFBpdHQsIENocmlzdGlhbiBCYWxlLCBSeWFuIEdvc2xpbmcsIGFuZCBTdGV2ZVZpZXcgbW9yZVRoZSBVbml2ZXJzaXR5IG9mIFV0YWggSGluY2tsZXkgSW5zdGl0dXRlIG9mIFBvbGl0aWNzIGlzIHRocmlsbGVkIHRvIHByZXNlbnQgdGhlIDIwMTUgU2FtIFJpY2ggTGVjdHVyZSwgQ29udmVyc2F0aW9uIHdpdGggTWljaGFlbCBMZXdpcyBpbiBjb25qdW5jdGlvbiB3aXRoIHRoZSBEYXZpZCBFY2NsZXMgU2Nob29sIG9mIEJ1c2luZXNzLkxld2lzIGFjY2xhaW1lZCBOZXcgWW9yayBUaW1lcyBiZXN0c2VsbGVycyBpbmNsdWRlIE1vbmV5YmFsbCwgVGhlIEJsaW5kIFNpZGUsIEZsYXNoIEJveXMsIEJvb21lcmFuZywgYW5kIExpYXIgUG9rZXIgdG8gbmFtZSBhIGZldy4gClRoZSBjcmF6eSBzdGF0aWMgd29tYW4gd2FzIHN0YW5kaW5nIGZhY2luZyB0aGUgc2VhdHMgd2l0aCBhIG1hbiBiZWhpbmQgaGVyLiBBZnRlciBhIGZldyBzdG9wcyB0aGUgY2FycmlhZ2UgZW1wdGllZCBvdXQgc2xpZ2h0bHkgYW5kIHNoZSB0dXJuZWQgYXJvdW5kIGFuZCBhc2tlZCB0aGUgbWFuIGlmIGhlIGNvdWxkIHN0YW5kIG5leHQgdG8gaGVyIGluc3RlYWQgb2YgYmVoaW5kIGhlci4gSSBrbm93IG90aGVyIHBlb3BsZSBjb3VsZCBoYXZlIHRob3VnaHQgbWF5YmUgaGUgd2FzIGJlaW5nIGEgY3JlZXAgYnV0IEkga25ldy4gCkEgY291cGxlIG1vbnRocyBpbnRvIHBsYXlpbmcgSSBiZWdpbiB0byByZWNvZ25pemUgYSBsb3Qgb2Ygc2NyZWVuIG5hbWVzIGFzIGJlaW5nIHJlZ3VsYXJzIGFuZCB0aGVyZSdzIDEgc3BlY2lmaWMgZ3V5IEknbSBkcmF3biB0by4gCkkgbWFkZSBjaG9jb2xhdGVzIGFuZCBndW1taWVzIGFuZCBwZXJzb25hbGx5IHByZWZlciB0aGUgY2hvY29sYXRlcy4gWW91IGNhbiBnZXQgbW9sZHMgZnJvbSBtYW55IHBsYWNlcyBpbmNsdWRpbmcgTWljaGVhbHMvSG9iYnkgTG9iYnkgdHlwZSBwbGFjZXMgYW5kIGdldCBzb21lIGNob2NvbGF0ZSBtZWx0cy4gSSBnb3QgZGFyayBjaG9jb2xhdGUuIApZb3Ugd2lsbCBiZSBzdXJwcmlzZWQgdG8gZmluZCBtb3N0IChtb3N0KSBhcmUgcmVhbCBwZW9wbGUgd2hvIGhhdmUgZm91bmQgdGhlaXIgdmlld3MgdGhyb3VnaCBtaXNlZHVjYXRpb24gYW5kIGluZG9jdHJpbmF0aW9uLCB0aHJvdWdoIG5vIGZhdWx0IG9mIHRoZWlyIG93bi4gCldlIGxpdmVkIGluIEFpcmRyaWUgd2Ugd291bGQgaGF2ZSBwb2tlciBuaWdodCBldmVyeSBGcmlkYXkgbmlnaHQgYW5kIHdlIGhhZCBhIGNvcmUgZ3JvdXAgb2YgZnJpZW5kcyB0aGF0IEkgaGF2ZSBrbm93biBzaW5jZSBraW5kZXJnYXJ0ZW4gY29tZSwgc2hlIHNhaWQuIGZyaWVuZCBvZiBtaW5lLCBUaW0gWW91bmcsIGhhZCBhIGpvYiB3b3JraW5nIGF0IHRoZSBhaXJwb3J0IGRlbGl2ZXJpbmcgYmFncywgYW5kIG9uZSBuaWdodCBoZSBnb3QgYSBjYWxsIHRvIGRlbGl2ZXIgYSBiYWcuIHdoZW4gYSBncm91cCBqdW1wZWQgaW50byBZb3VuZyB0cnVjayB0byB0YWtlIGEgcm9hZCB0cmlwIGluIHRoZSBtaWRkbGUgb2YgdGhlIG5pZ2h0LCBhZGRlZCBSaWRsZXkuCk11Y2ggc21hcnRlci4gSSBib3VnaHQgYSBkaXNod2FzaGVyIGFuZCBpbnN0YWxsZWQgaXQgaW4gbXkgdW5pdCBiZWNhdXNlIHdhc2hpbmcgZGlzaGVzIGJ5IGhhbmQgU1VDS1MuIE15IHJvb21tYXRlIG1vdmVkIGluIGluIEF1Z3VzdCBhbmQgb3ZlciB0aGUgbmV4dCBjb3VwbGUgbW9udGhzIEkgd2FzIGZpZ3VyaW5nIG91dCBob3cgdG8gYmUgYSBsYW5kbG9yZC4gCldpbGwgYWNjb21wbGlzaCBhIGNvdXBsZSB0aGluZ3MsIHNhaWQgQmVubmluZy4gd2lsbCBnaXZlIGhpbSB0aGUgZXhwZXJpZW5jZSBmb3IgdGhlIGZlZWwgb2YgdGhlIE5ITCBhbmQgaGUgaGVscCB1cy4gSGUgZ2V0cyBiYWNrIGZhc3QgYW5kIGNhbiBiZWF0IHRoZSBmaXJzdCBmb3JlY2hlY2tlciB0byBlaXRoZXIgc2thdGUgdGhlIHB1Y2sgb3V0IG9yIHBhc3MgaXQgYW5kIGhlIGhlbHAgdGhlIHBvd2VyIHBsYXkuClRoYXQgbm90IHJlYWxseSB3aGF0IGludmVzdGluZyBvciBkaXNjdXNzaW5nIG91dGxvb2tzIHNob3VsZCBldmVyIGJlIGFib3V0Li4gClF1YW50ICBsJ2lzbGFtLCBvbiB5IHJldHJvdXZlIHVuZSBhcHByb2NoZSBhc3NleiBzaW1pbGFpcmUgIGNlIHF1ZSBmaXJlbnQgZGVzIHBhcmZ1bXMgbGVzIGd5cHRpZW5zIGRlIGwnQW50aXF1aXQgOiAgcXVlIGxlIHBhcmZ1bSBzb2l0IGxpYnJhbGVtZW50IHV0aWxpcywgb3UgcnNlcnYgIGwnY2hhbmdlIGF2ZWMgRGlldSwgaWwgcydhZ2l0IHRvdWpvdXJzIGRlIGJhbm5pciBjZSBxdWkgZmFpdCBob3JyZXVyIGRhbnMgbCdpbWFnZSBkdSBjb3Jwcy4gCkFyc2VuYWwgd2FsbCBpcyBlc3NlbnRpYWxseSB0aHJlZSAyeDEgcm9ja2V0IGxhdW5jaGVycyB3aXRoIGJldHRlciBhcm1vciBhbmQgaHAgaW4gYSAyeDQgZ3JpZC4gWW91IGxvc2Ugc29tZSBmaXJlcG93ZXIsIGdhaW4gc29tZSBzdXJ2aXZhYmlsaXR5LiBCYXNpY2FsbHkgaXQganVzdCBjb21lcyBkb3duIHRvIHdoZXJlIGluIHlvdXIgc2hpcCBsYXlvdXQgeW91IHRyeWluZyB0byBwbGFjZSB0aGUgcm9ja2V0cy4gCihTZWNvbmQgdGhlIGRlcm1hdG9sb2dpc3QgYWR2aWNlLCBidXQgY2FtZSBoZXJlIHRvIHNheSB5b3UgYWN0dWFsbHkgc2hvdWxkIGJlIHVzaW5nIHNvbWUgb2lsIGJhc2VkIG1vaXN0dXJpemVyLiBTb21lIG9pbHMsIGxpa2UgU2hlYSBCdXR0ZXIgYW5kIGNvY29udXQgb2lsLCBhcmUgdG9vIGJpZyBhbmQgd2lsbCBuaWNlbHkgc2l0IGluIG91ciBwb3JlcyBhbmQgY2xvZyB0aGVtLCBzb21lIGFyZSBzbyBzbWFsbCB0aGF0IHRoZXkgd29uIGNsb2cgdGhlbSBhbmQgaW5zdGVhZCBoZWxwIHVzIGh5ZHJhdGUuIFJvc2VoaXAgc2VlZCBhbmQgbWFydWxhIG9pbCBhcmUgdHdvIG9mIHRob3NlLiAKVGhlIHJlc3RhdXJhbnQgc2FtcGxlcyB3ZXJlIGNvbGxlY3RlZCB0aHJvdWdoIHRha2VvdXQgYW5kIHRoZSByZXNlYXJjaGVycyBhbHdheXMgdmVyYmFsbHkgY29uZmlybWVkIHRoZSB0eXBlIG9mIGZpc2guIFNhbXBsZXMgZnJvbSBncm9jZXJ5IHN0b3JlcyBpbmNsdWRlZCBmcmVzaCBmaXNoIGFuZCBwcm9jZXNzZWQgcHJvZHVjdHMuClRoZSBpbXBvcnRhbnQgdGhpbmcgdGhlbiBpcyB0byBzdGF5IGNhbG0sIGRvIHdoYXQgeW91IGNhbiB0byBjb250cm9sIHRoZSBzaXR1YXRpb24sIGFwcGx5IGZpcnN0IGFpZCBhcyBuZWVkZWQsIGFuZCBnZXQgaGVyIHRvIGEgdmV0IGFzIHF1aWNrbHkgYW5kIHNhZmVseSBhcyBwb3NzaWJsZS4gCkkgaW4gYmVkIGF0IDFhbSB3YXRjaGluZyBUViBhbmQgdGhlIGZyb250IGRvb3Igb3BlbnMuIEkgY2FsbCBvdXQgYW5kIGhlIGV4cGxhaW5zIHRoYXQgaGlzIGtleSBkaWRuIHdvcmsgYXQgaGlzIGZyb250IGRvb3IsIGFuZCBoZSB3YXMganVzdCBwYXNzaW5nIHRocm91Z2ggYmVjYXVzZSBoZSBkaWRuIHdhbnQgdG8gZ28gYXJvdW5kLiAKSXZvIENoZXNzbWFzdGVyIiBEb25ldiBtdXNzdGUgYWxzIHdlaXRlcmVyIFRlaWxuZWhtZXIgbGVkaWdsaWNoIGRpZSBHcmVuemxpbmllIGF1cyBkZW0gYmVuYWNoYmFydGVuIHN0ZXJyZWljaCBwYXNzaWVyZW4sIHVtIGFuIGRpZXNlbSBiZWxpZWJ0ZW4gIEV2ZW50IHRlaWx6dW5laG1lbi5EYXMgIGhhdCBzaWNoIHZvbiBBbmJlZ2lubiBhdWYgZGVuIGRldXRzY2hlbiB1bmQgc3RlcnJlaWNoaXNjaGVuIE9ubGluZSAgTWFya3Qga29uemVudHJpZXJ0ICAgdW5kIGRpZSBFcmdlYm5pc3NlIGhpZXJiZWkgd2FyZW4gYW5mYW5ncyBub2NoIHNvIGVpbmUgU3RlbGx1bmduYWhtZSBkZXMgaW4gR2licmFsdGFyIGxpemVuemllcnRlbiBzLkluIGVpbmVyIGRvY2ggcmVjaHQga3VyemVuIFplaXQgc2luZCB3aXIgamVkb2NoIHp1ciBXYWhsIGZyIHphaGxyZWljaGUgICBpbiBEZXV0c2NobGFuZCB1bmQgc3RlcnJlaWNoIGdld29yZGVuIHVuZCBhdWNoIHVuc2VyIFRlYW0gaGF0IHNpY2ggYWxzIHdpcmtsaWNoIGJlZGV1dGVuZGVyIEZha3RvciBlcndpZXNlbiwgdW0gZWluZSBnYW56ZSBSZWloZSB2b24gbm9jaCAgbiBkYXp1IHp1IHZlcmZocmVuLCBiZWkgdW5zZXJlbSAgcmVnZWxtaWcgT25saW5lICB6dSBzcGllbGVuLiJWb2xsIGRlcyBMb2JlcyBmciBkYXMgc3RhcmtlIGRldXRzY2hzcHJhY2hpZ2UgQXVmZ2Vib3QgaGF0IGRhcyAgYXVjaCBkaWUgc2Nod2VkaXNjaGUgIFNlbnNhdGlvbiBSYW16aSBKZWxhc3NpIHp1IGRlbSAgRXZlbnQgZW50c2FuZHQsIGRlciBhbGxlaW4gaW4gZGVuIHZlcmdhbmdlbmVuIG5ldW4gTW9uYXRlbiBldHdhIDIyMC4wMDAgYW4gR2V3aW5uc3VtbWUgZWluZ2VzdHJpY2hlbiBoYXQsIHNvd2llIGRlcyB3ZWl0ZXJlbiBkZW4gZmlubmlzY2hlbiBUb25pIE9qYWxhIHVuZCBTdGVwaGFuIEtqZXJzdGFkIGF1cyBOb3J3ZWdlbi5XaXIgaGFsdGVuIHNlbGJzdHZlcnN0bmRsaWNoIGF1Y2ggdW5zZXJlIGludGVyZXNzaWVydGVuICAgYmVyIGFsbGUgYmVkZXV0ZW5kZW4gR2VzY2hlaG5pc3NlIGJlaSBkaWVzZW0gIEV2ZW50IGF1ZiBkZW0gTGF1ZmVuZGVuLCBpbmRlbSB3aXIgaGllcmJlciBpbiBkZW0gQmxvZyBkZXMgIFJvb21zIGJlcmljaHRlbiwiIHNvIGVpbmUgU3RlbGx1bmduYWhtZSBkZXIgR2VzY2hmdHNsZWl0dW5nIGRlcyBzLkVzIGhlcnJzY2h0IGVpbiBzb2xjaCBzdGFya2VzIEludGVyZXNzZSBiZWkgdW5zZXJlciBnZXNhbXRlbiBPbmxpbmUgIEdlbWVpbnNjaGFmdCwgZGFzcyB3aXIgZGllIHVucyBhbSBIZXJ6ZW4gbGllZ2VuZGUgIENvbW11bml0eSBhbiBkaWUgR2VzY2hlaG5pc3NlIHZvbGxzdG5kaWcgZWluYmluZGVuLiJIYXBweSBIb3Vyc0xhcyBWZWdhc09ubGluZSBHYW1lc09ubGluZS4gCkkgbWVhbiBwZW9wbGUgZGVmaW5pdGVseSBnbyBhbGwgaW4gcHJlZmxvcCBhbmQgcGxhY2UgYmlnIGJldHMgaW4gcmVhbCBtb25leSBnYW1lcywgdGhleSBqdXN0IHByb2JhYmx5IGRvIGl0IHdpdGggYmV0dGVyIGhhbmRzIGxvbC4gCkRlc3RydWN0b3Igc3dpdGNoZXMuIEFzIGhlIGxhdGVyIHJlY2FsbGVkLCBoZSByZWFjaGVkIGZvciB0aGVtIGFuZCB0aGVuIGNoYW5nZWQgaGlzIG1pbmQ6IGZpcnN0IGhlIG11c3QgcG9zaXRpb24gaGltc2VsZiB0byBlamVjdC4gTGlrZSBvdGhlciBwaWxvdHMsIFBvd2VycyB3YXMgbGVlcnkgb2YgZWplY3Rpb24gc2VhdHMuIEFjdGl2YXRlZCwgdGhleSBzaG90IHBpbG90cyB0aHJvdWdoIHRoZSBwbGFzdGljIGNhbm9weSBsaWtlIGh1bWFuIGNhbm5vbmJhbGxzLiBTb21ldGltZXMgbWVuIHdlcmUga2lsbGVkIGJ5IGFjY2lkZW50YWwgZWplY3Rpb25zLiBPdGhlcnMgbG9zdCBsaW1icyBhbmQgZmFjZXMsIHRvcm4gb2ZmIGJ5IHRoZSByaW0gb2YgdGhlIGNvY2twaXQgb3IgdGhlIGxldGhhbCB3YWxsIG9mIGFpci4gS25vd2luZyB0aGlzLCBzb21lIGNob3NlIHRvIHJpZGUgdGhlaXIgcGxhbmVzIHRvIHRoZSBncm91bmQgYW5kIGNlcnRhaW4gZGVhdGguCkplYW4gTWFyYyBMYWZvbiA6IEwnQXJhYmllIFNhb3VkaXRlIGVzdCB1bmUgc29jaXQgaXNsYW1pcXVlIHN1bm5pdGUgZXQgd2FoaGFiaXRlLiBMJ3VuZSBkZXMgcmFpc29ucyBwb3VyIGxlc3F1ZWxsZXMgQmVuIExhZGVuIGEgcm9tcHUgYXZlYyBsYSBmYW1pbGxlIHJveWFsZSBkZXMgU2FvdWQsIGMnZXN0IGxhIHF1ZXN0aW9uIGRlIGwnYWxsaWFuY2UgYXZlYyBsZXMgRXRhdHMgVW5pcyBldCBsYSBwcnNlbmNlICJkJ2luZmlkbGVzIiBlbiB0ZXJyZSBzYWludGUuIApBcmUgZHJ1Z3MgdGhhdCByZWR1Y2UgY2hvbGVzdGVyb2wgYnkgaW5oaWJpdGluZyBhbiBlbnp5bWUgaW4gdGhlIGxpdmVyIGtub3duIGFzICdITUcgQ29BIHJlZHVjdGFzZScgd2hpY2ggJ2RyaXZlcycgY2hvbGVzdGVyb2wgcHJvZHVjdGlvbiAobW9zdCBvZiB0aGUgY2hvbGVzdGVyb2wgaW4gdGhlIGJsb29kc3RyZWFtIGlzIG1hZGUgaW4gdGhlIGxpdmVyIGFuZCBkb2VzIG5vdCBjb21lIGRpcmVjdGx5IGZyb20gdGhlIGRpZXQpLi4gCkN1cnJ5IChJbmRlLCBBc2llIGR1IFN1ZCBFc3QpIDogZ2luZ2VtYnJlLCBhaWwsIG9pZ25vbiwgY2FyZGFtb21lLCBjdW1pbiwgY2FubmVsbGUsIGN1cmN1bWEsIHBpbWVudCwgcG9pdnJlLCBmZW5vdWlsLCBmZW51Z3JlYywgZ2lyb2ZsZSwgbW91dGFyZGUuIEdhcmFtIG1hc3NhbGEgZXQgdGFuZG9vcmkgbWFzc2FsYSBzb250IGRldXggZm9ybWVzIGRlIGN1cnJ5IGRvbnQgaWwgZXhpc3RlIGRlIG5vbWJyZXVzZXMgYXV0cmVzIHJlY2V0dGVzIGVuIGZvbmN0aW9uIGRlcyBsb2NhbGl0cyBnb2dyYXBoaXF1ZXMuClNoZSBzYWlkIHNoZSBkaWRuIHdhbnQgdG8gdGFsayBhYm91dCBpdCBpbiBwZXJzb24gYW5kIHRoYXQgd2UgY291bGQgZGlzY3VzcyBpdCBvdmVyIHRleHRpbmcgYW5kIHRvIE5PVCBicmluZyBpdCB1cCBpbiBwZXJzb24uIApTb3JyeSB0byBoZWFyIGl0IGEgc3RydWdnbGUgaW4geW91ciBmYW1pbHksIHRvby5BbHNvLCBOb1NvdWwsIG5vdCBzdXJlIGhvdyBvZnRlbiB5b3UgbG9nIGluICAgY2hlY2sgeW91ciBETXMudGhlbWFnaWNkYXZlICAxMiBwb2ludHMgIHN1Ym1pdHRlZCA0IGRheXMgYWdvSSBpbWFnaW5lIGEgbG91ZCBhcyBoZWxsIGFpciByYWlkIHNpcmVuLiBQcmV2aW91c2x5IGhpZGRlbiBDaGluZXNlIGZsYWdzIHN0YXJ0IGVtZXJnaW5nIG9uIHRoZSBzdHJlZXRzLiBBbGwgb2Ygb3VyIHRlbGV2aXNpb24gYW5kIHJhZGlvIHNpbXVsdGFuZW91c2x5IHN3aXRjaGVzIHRvIE1hbmRhcmluLiAKQm9yZGVybGluZVdpcmUgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxMSBkYXlzIGFnbwpJZiBJIHdlcmUgaW4gdGhlaXIgcG9zaXRpb24gSSBjYW4gc2F5IHRoYXQgSSB3b3VsZG4gZ3Jhdml0YXRlIHRvd2FyZHMgdGhlIHNhbWUgY29uY2x1c2lvbnMgdGhleSBoYXZlIG1hZGUgb24gdGhlIGlzc3VlLiAKVGhlIHRyb3VibGUgaXMgdGhhdCBDQ1AgbWFkZSBpdCBzbyB0aGF0IGFueW9uZSBjYW4gYnV5IHRoZSBCUE8sIGFuZCB0aGV5IGFyZSB1bmxpbWl0ZWQgaW4gcnVucy4gVGhleSBjYW4gYmUgY29waWVkIGluZmluaXRlbHkgYXMgd2VsbC4gVGhleSBhbHNvIG1hZGUgdGhlbSB3YXkgdG9vIHZhbHVhYmxlLiBUaGV5IGxpdGVyYWxseSB3ZXJlIG1lYW50IHRvIGJlIGEgcmFyZSBFIFBlZW4gc2hpcCB0aGF0IGNyZWF0ZWQgY29uZmxpY3QuIFRoZXkgd2VyZSBqdXN0IHRoYXQgZm9yIGEgbG9uZyB0aW1lLgpPYiBtYW4gamV0enQgbWl0IG9kZXIgYW50d29ydGV0LCB3YXMgbmRlcnQgZGFzIGFuIGRlciBSZWFsaXR0PyBXYXMgYmVkZXV0ZXQgZGllIEFudHdvcnQgZnIgZGFzIExlYmVuIGluIERldXRzY2hsYW5kLCBmciBkaWUgR2VzZXR6ZSwgZnIgcG9saXRpc2NoZSB1bmQgZ2VzZWxsc2NoYWZ0bGljaGUgUHJvemVzc2U/IE1pciBpc3QgZGllIEFudHdvcnQgZWdhbDsgaWNoIHdpbGwgd2lzc2VuLCB3YXMgYmVyaGF1cHQgZGllIEJlYW50d29ydHVuZyBkZXIgRnJhZ2UgYnJpbmdlbiBzb2xsLlZpc2hudVggIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIHllYXIgYWdvTmF0cmxpY2ggaGF0IGRhcyBBdXNzZWhlbiBldHdhcyBkYW1pdCB6dSB0dW4sIGRlbm4gZGllIEhlcmt1bmZ0IHNwaWVsdCBlYmVuIHNjaG9uIGVpbmUgUm9sbGUuIApEb2VzIHlvdSBoYXZlIHRoaXMgam9iIHdpdGggdHJhdmVsIHN0aWxsIGhhdmUgeW91IGluIHRoZSBibGFjaz8KQWxsIHRoZSBnaXJscyBJIGJlZW4gd2l0aCBmcm9tIGJhcnMgb3IgcGFydGllcyBoYXZlIGFwcHJvYWNoZWQgbWUuIFVzdWFsbHkgbXkgZ3JvdXAgb2YgZnJpZW5kcyB3aWxsIGJlIGhhbmdpbmcgaGF2aW5nIGEgZ29vZCB0aW1lIGFuZCB0aGVuIGEgZ2lybCBncm91cCBjb21lcyB1cCBhbmQgd2UganVzdCBqb2luIGdyb3VwcyBhbmQgcGFydHkuIApMb29rIENld2VrIERpIFdhcm5ldCBoYXJkIHBvcm4gQ2V3ZWsgRGkgV2FybmV0IHZpZGVvcyBhbiBkb3dubG9hZCBpdC4gRWRpc2kgRnVsbCBpbnRpcCB5YW5nIG1lc3VtIGRpIHdhcm5ldCAuIENld2VrIEhvcm55IERpZW50b3QgS2VrYXNpaG55YS4zZ3AuIApUcnlpbmcgdG8gc3RvcCB0aGF0IHByb2Nlc3MgaGFzIGNvbnNlcXVlbmNlcyBhbmQgbm90IGFsbCBvZiB0aGVtIGFyZSBwbGVhc2FudC4uIApPYndvaGwsIGRhcyBrIHdpciB1bnMgYXVjaCBuaWNodCBlcmxhdWJlbi4gMTcwIEV1cm8ga29zdGV0IGRhcyBEb3BwZWx6aW1tZXIgcHJvIE5hY2h0LCBGciBpc3QgaW5iZWdyaWZmZW4gICBkYXMgaXN0IGVpbiBndXRlciBQcmVpcy4gU2llYmVuIEphaHJlIGhpbndlZyB3IGRhcyBhYmVyIG9obmUgQWJlbmRlc3NlbiA0MDAuMDAwIEV1cm8uIApMYSBycG9uc2UgbmUgZGV2cmFpdCBwYXMgdGFyZGVyLi4gCkNva2UgaGFzIHJlbGllZCBvbiBtdWx0aXBsZSBhZ2VuY2llcyBmb3IgdGhlIGNhbXBhaWduLCByYXRoZXIgdGhhbiB1c2luZyBhbiBhZ2VuY3kgb2YgcmVjb3JkLiBUaGUgbmV3IHdhdmUgb2YgYWRzIGlzIG5vIGRpZmZlcmVudC4gU2NodWx0eiBpcyB0aGUgQ2hpY2FnbyBCdXJlYXUgQ2hpZWYgYXQgQWQgQWdlIGFuZCBjb3ZlcnMgYmV2ZXJhZ2UsIGF1dG9tb3RpdmUgYW5kIHNwb3J0cyBtYXJrZXRpbmcuIEhlIGlzIGEgZm9ybWVyIHJlcG9ydGVyIGZvciBNY0NsYXRjaHkgbmV3c3BhcGVycywgaW5jbHVkaW5nIHRoZSBGcmVzbm8gQmVlLCB3aGVyZSBoZSBjb3ZlcmVkIGJ1c2luZXNzIGFuZCBzdGF0ZSBnb3Zlcm5tZW50IGFuZCBwb2xpdGljcywgYW5kIHRoZSBJc2xhbmQgUGFja2V0IGluIFNvdXRoIENhcm9saW5hLiBOZWFsIEF3YXJkcywgdGhlIEFzc29jaWF0aW9uIG9mIENhcGl0b2wgUmVwb3J0ZXJzIGFuZCBFZGl0b3JzLCB0aGUgQ2FsaWZvcm5pYSBOZXdzcGFwZXIgUHVibGlzaGVycyBBc3NvY2lhdGlvbiwgdGhlIFNvdXRoIENhcm9saW5hIFByZXNzIEFzc29jaWF0aW9uIGFuZCBJbnZlc3RpZ2F0aXZlIFJlcG9ydGVycyBhbmQgRWRpdG9ycy4gQSBuYXRpdmUgb2YgQ2luY2lubmF0aSwgU2NodWx0eiBoYXMgYW4gZWNvbm9taWNzIGRlZ3JlZSBmcm9tIFhhdmllciBVbml2ZXJzaXR5IGFuZCBhIG1hc3RlcnMgaW4gam91cm5hbGlzbSBmcm9tIE5vcnRod2VzdGVybiBVbml2ZXJzaXR5LgpUaGUgb25saW5lIGdhbWJsaW5nIGJ1c2luZXNzIHdpbGwgYmUgdGhlIG1vc3QgcHJvZml0YWJsZSBidXNpbmVzcyBhcm91bmQgdGhlIGludGVybmV0LiBNaWxsaW9ucyBvZiBtZW4gYW5kIHdvbWVuIGFib3V0IHRoZSB3b3JsZCBhcmUgd2FnZXJpbmcgb24gc3BvcnRzIG9ubGluZSwgcGxheWluZyBvbmxpbmUgcG9rZXIsIGJpbmdvIGFuZCBhbHNvIHRoZSBsb3R0ZXJ5IG9ubGluZSBhdCBhbnkgZnJvbSB0aGUgYSBsYXJnZSBudW1iZXIgb2YgZ2FtYmxpbmcgc2l0ZXMgb2ZmZXJlZCBvbiB0aGUgbmV0LiAKSSB3YXMgYW4gb25saW5lIHBybyBmb3IgOCB5ZWFycyBhbmQgSSBzd2VhciBpdCB3YXMgc3Vja2luZyB0aGUgbGlmZSBvdXQgb2YgbWUganVzdCBmcm9tIHRoZSBkcnVkZ2VyeSBvZiBwbGF5aW5nIHNvIG1hbnkgdGFibGVzIGZvciBzbyBtYW55IGhvdXJzLiBXaGVuIEJsYWNrIEZyaWRheSBoaXQsIEkgaGFkIHRvIGNoYW5nZSBjYXJlZXJzLCBidXQgSSBnbGFkIGZvciBpdC4KU2hlIHJlYWxseSBub3QgdGhvdWdoLiBJIG5lYXJpbmcgdGhlIGVuZCBvZiBiZWNvbWluZyBhIGRvY3RvciBhbmQgaGF2ZSBhIEJTIGluIGltbXVub2xvZ3kgYW5kIEkgbm8gbW9yZSBxdWFsaWZpZWQgdG8gZ2l2ZSBuZXVyb3NjaWVuY2UgYWR2aWNlIG9yIHRydWx5IHVuZGVyc3RhbmQgdGhlIGxpdGVyYXR1cmUgYXMgc2hlIGlzIHdpdGggaW1tdW5vbG9neS4KSSB0aGluayB0aGV5IHRob3VnaHQgaSB3YXMganVkZ2luZyB0aGVtIGJlY2F1c2UgdGhlIGdpcmwgaSB3YXMgc2VlaW5nIHNlZW1lZCB0byBiZSBtYWtpbmcgZXhjdXNlcyB3aXRoaW4gMzAgc2Vjcy4gCkFmdGVyIHdlIGh1bmcgb3V0IHdpdGggc29tZSBvdGhlciBmcmllbmRzLCBoZSB3YWxrZWQgbWUgdG8gbXkgY2FyLiAKWU9VUiBVU0UgT0YgRElHSVRBTCBQUk9EVUNUUyBFU1RBQkxJU0hFUyBZT1VSIEFHUkVFTUVOVCBUTyBUSEVTRSBURVJNUyBBTkQgVEhFIENISUNBR08gU1VOIFRJTUVTIFRFUk1TIE9GIFVTRSBBTkQgUFJJVkFDWSBQT0xJQ1kuIApFYWNoIHN0YXRlIGhhcyB0aGVpciBvd24gcnVsZXMuIiBDcmFpZyBFdmFucyByZWNlaXZlZCBoaXMgQmFjaGVsb3Igb2YgSW5mb3JtYXRpb24gYW5kIFRlY2hub2xvZ3ksIGFmdGVyIHNpeCBhbmQgaGFsZiB5ZWFycyBzdHVkeWluZy4gClRocm91Z2hvdXQgaGlzIHJldGlyZW1lbnQsIEJpbGwgcmVtYWluZWQgYSBjb21wdXRlciBlbnRodXNpYXN0IGFuZCBhdmlkIHJlYWRlciAoc2VlaW5nIGhpbSB3aXRob3V0IGEgYm9vayBvciBuZXdzcGFwZXIgaW4gaGFuZCB3YXMgdW5pbWFnaW5hYmxlKSwgd2hvIGFsc28gZW5qb3llZCBwYXJ0aWNpcGF0aW5nIGluIGxpdmVseSBnYW1lcyBvZiBwb2tlciB3aXRoIGZyaWVuZHMsIGFzIHdlbGwgYXMgY2hhbGxlbmdpbmcgaGlzIGdyYW5kY2hpbGRyZW4gdG8gY2hlc3MgbWF0Y2hlcyAod2hpY2ggaGUgZGlkIG5vdCAibGV0IiB0aGVtIHdpbikuIE1vc3QgZXNwZWNpYWxseSwgaGUgd2FzIGRldm90ZWQgdG8gaGlzIHdpZmUgKHdpdGggd2hvbSBoZSBjZWxlYnJhdGVkIDUwIHllYXJzIG9mIG1hcnJpYWdlIHRoaXMgcGFzdCB5ZWFyKSwgaGlzIGNoaWxkcmVuLCBoaXMgZ3JhbmRjaGlsZHJlbiwgYW5kIGhpcyBDYXRob2xpYyBGYWl0aC4gCiJJdCBjYW4gYmUgYml0dGVybHkgZnJ1c3RyYXRpbmcgdG8gbG9zZSBhdCBwb2tlciwgZXNwZWNpYWxseSBpZiB5b3UgdGhpbmsgaXQgd2FzIGRvd24gdG8gYmFkIGx1Y2sgcmF0aGVyIHRoYW4geW91ciBtaXN0YWtlcy4gV2hhdCB5b3UgcmVhbGx5IG5lZWQgdG8gZG8gaXMgY2hhbm5lbCB0aGF0IGZydXN0cmF0aW9uIGludG8gYSBkZXNpcmUgdG8gaW1wcm92ZSB5b3VyIGdhbWUuIFRoZSBiZXR0ZXIgeW91IGFyZSB0aGUgbGVzcyB0aGUgYmFkIGx1Y2sgd2lsbCBhZmZlY3QgeW91LgpJJ3ZlIGZvdW5kIG15c2VsZiBpbiBzaW1pbGFyIGNpcmN1bXN0YW5jZXMgcmVjZW50bHkgYW5kIEkndmUgYmVlbiBzcGVha2luZyB1cCBhYm91dCBpdC4gSSdsbCB0cnkgYW5kIHRlbGwgbWVuIHdoYXQgdG8gZG8gdG8gaGVscCBtZSByZWFjaCBteSBPLiBUb3VjaCBoZXJlLCBkbyB0aGlzLCBJIHRoaW5rIGl0J3MgaG90IGlmIHlvdSBfX19fXy4gTXkgcmVzcG9uc2UgZnJvbSBtZW4gd2hlbiBJIHNheSB3aGF0IEkgd2FudCBoYXMgYmVlbiBwb3NpdGl2ZSwgYXQgdGhlIGVuZCB0aGV5IGhhdmUgc2FpZCB0aGV5IHRob3VnaHQgaXQgd2FzIGhvdCB0aGF0IEkgdG9vayBjaGFyZ2UuIFdpbGwgdGhhdCBiZSB0aGUgY2FzZSBhbHdheXMgd2l0aCBldmVyeSBtYW4gSSdtIHdpdGg/IE5vIHByb2JhYmx5IG5vdCwgbWF5YmUgc29tZSBtZW4gd2lsbCBmaW5kIGl0IGludGltaWRhdGluZy4gRWl0aGVyIHdheSwgSSdtIGZpbmFsbHkgY2hhc2luZyBteSBPIGFuZCBtYWtpbmcgc3VyZSBJIGdldCBpdC4KQXMgdGhlIHNpdHRpbmcgdmljZSBwcmVzaWRlbnQsIEJ1c2ggcHJlc2lkZWQgb3ZlciB0aGUgZWxlY3RvcmFsIHZvdGUgY291bnQuIApQbGF5aW5nIHBva2VyIG9ubGluZSBjYW4gYmUgZnVuLCBhcyBsb25nIGFzIHlvdSBkb24ndCBnYW1ibGUgYXdheSB5b3VyIG93biBtb25leS4gIFNvdXJjZQpJIHdvbmRlcmVkIHdoeSBIb3dhcmQgd2FzbiBtb3JlIGFnZ3Jlc3NpdmUgaW4gY3V0dGluZyBoaW0gbG9vc2UgYWZ0ZXIgYWxsIHRob3NlIG9wZW5pbmdzLiAKSWxoYW4gaGFzIGEgbGVnaXRpbWF0ZSBjcml0aWNpc20sIGFuZCB1c2VzIHNvbWUgbWlsZGx5IGlmZnkgcGhyYXNpbmc7IHRoZW4sIDIzIHJlcHVibGljYW5zIHJlZnVzZSB0byBicm9hZGx5IGNvbmRlbW4gaXNsYW1vcGhvYmlhIGFuZCBhbnRpIHNlbWl0aXNtLCBhbmQgaXQncyBub3QgZXZlbiBhIHN1cnByaXNlLiBJdCdzIGp1c3Qgc2lja2VuaW5nLmV0YTogWW91IGtub3cgd2hhdC4gClRoZSBmaWdodGVyIGNvdWxkIG5vdCByZWFkIGl0LCB3YXMgc29tZSBraW5kYSBhcmNhbmUgd3JpdGluZy4gTm93IGN1cmlvdXMsIHNoZSBjYXN0cyByZWFkIG1hZ2ljIGFuZCB3YXMgYWJsZSB0byBkZWNpcGhlciB0aGUgc2VudGVuY2UgdGhlIDMgcGFyY2htZW50cyBtYWRlIHVwLiBJbiBvcmRlciB0byBhY3RpdmF0ZSB0aGUgMyBleHBsb3NpdmUgcnVuZXMuLiAKVGhlIHRlcm0gJ2FjdGl2ZSBsaXN0ZW5pbmcnIHVuZGVybGluZXMgdGhlIGZhY3QgdGhhdCBlZmZlY3RpdmUgbGlzdGVuaW5nIGlzIGZhciBmcm9tIGEgcGFzc2l2ZSBwcm9jZXNzLiBUaGlzIGFjdGl2ZSBwcm9jZXNzIGRlbWFuZHMgdGhhdCB3ZSBmaXJzdCBncmFzcCB3aGF0IHRoZSBwZXJzb24gbWVhbnMgYW5kIHRoZW4gY29tbXVuaWNhdGUgdGhpcyB0byB0aGVtLiBUaGlzIGRlbW9uc3RyYXRlcyB0aGUgaGVscGVyJ3Mgd2lsbGluZ25lc3MgYW5kIGFiaWxpdHkgdG8gdW5kZXJzdGFuZCB0aGUgY29uY2VybnMgb2YgdGhlIG90aGVyIHBlcnNvbi4gQXMgVm9sdW50ZWVycyB5b3UgYXJlIG5vdCBleHBlY3RlZCB0byBmdWxmaWxsIGEgY291bnNlbGluZyByb2xlIHdpdGggc2VydmljZSB1c2VycywgYW5kIGluIHN1Y2ggaW5zdGFuY2VzIGFuIGFwcHJvcHJpYXRlIHJlZmVycmFsIG1heSBuZWVkIHRvIGJlIG1hZGUsIGJ1dCBoYXZpbmcgbGlzdGVuaW5nIHNraWxscyBpcyBlc3NlbnRpYWwgdG8gZGV2ZWxvcGluZyBhIHJlbGF0aW9uc2hpcCBvZiB0cnVzdCBhbmQgc3VwcG9ydC5UaGUgc2tpbGxzIG9mIGFjdGl2ZSBsaXN0ZW5pbmcgYXJlIHZlcnkgZGlmZmVyZW50IGZyb20gdGhlIHdheSB3ZSBsaXN0ZW4gaW4gZXZlcnlkYXkgY29udmVyc2F0aW9uLiAKSXQgZG9lc24gbWF0dGVyIGlmIGl0cyA1MCUrMSBvciA1MCUrNDglLCB5b3UgbmVlZCA1MCUrMSB0byBwYXNzIGxlZ2lzbGF0aW9uIHdpdGhvdXQgYSB0aWVicmVha2VyLlRodXMgaXQgaXMgdmVyeSBlYXN5IHRvIHZhbGlkYXRlIHRoZSBjbGFpbSB3aGV0aGVyIG9yIG5vdCBvbmx5IGRlbW9jcmF0cyBoYXZlIGhhZCBhIG1ham9yaXR5IGluIGJvdGggaG91c2VzIG9mIHRoZSBDYWxpZm9ybmlhIFN0YXRlIExlZ2lzbGF0dXJlIGFuZCBpZiBPUCB3YW50ZWQgdG8gcHV0IGEgdGhvdWdodCBpbnRvIGtub3dpbmcgaWYgcGVyc29uIGVuc3VyZSB0aGVuIE9QIGNvdWxkIGhhdmUgZG9uZSBzby4gClRoaXMgc2Vhc29uLCB5b3UgY2FuIFBBWCBpbiBob3QgcGluayB0aGFua3MgdG8gYSBsaW1pdGVkIGVkaXRpb24gcnVuIGluIGZ1Y2hzaWEuIFRoZSB0aGlyZCBpdGVyYXRpb24gZnJvbSB0aGUgdHJhaWxibGF6aW5nIHZhcG9yaXplciBjb21wYW55LCB3aGljaCB3YXMgb3JpZ2luYWxseSBmb3VuZGVkIGluIDIwMDcsIHdvcmtzIHdpdGggYm90aCBmbG93ZXIgYW5kIGNvbmNlbnRyYXRlcyBhbmQgaGFzIG1vcmUgdGhhbiA2MCB0ZW1wZXJhdHVyZSBzZXR0aW5ncywgYW4gZXh0ZW5kZWQgYmF0dGVyeSBsaWZlIGFuZCBpbXByb3ZlZCBjdXN0b20gY29udHJvbCB0aHJvdWdoIGl0cyBCbHVldG9vdGggZnVuY3Rpb25hbGl0eSBhbmQgbW9iaWxlIGFwcC4KMSBwb2ludCAgc3VibWl0dGVkIDcgbW9udGhzIGFnbwpJdCBmdWNrZWQgdG8gdGhpbmsgIkkgd2FzIGZlbHQgYSBzaGl0IGhhbmQgc28gSSBiZXR0ZXIgaGF2ZSAzIGtpZHMgc28gdGhleSBkb24gbWlzcyBvdXQgb24gYSBzaGl0dHkgbGlmZSIuIApRdWVzdGlvbnMgbGlrZSB0aGlzIHJlYWxseSBjb25mdXNlIG1lIGJlY2F1c2Ugb2YgY291cnNlIHRoYXQgd2hhdCBJIGRvLiBJIGRvbiBrbm93IG9mIGFub3RoZXIgd2F5IHRvIHJlYWQuIEdyYW50ZWQsIHdoZW4gSSBhbSBuZXcgdG8gYSBsYW5ndWFnZSBpdCBjbHVua3kgYXQgZmlyc3QuIEkgZG9uIHRyYW5zbGF0ZSB1bmxlc3MgSSBkb24ga25vdyBvciBkb24gcmVtZW1iZXIgYSB3b3JkLgpUaXRhbnMgaGF2ZSBhbHdheXMgYmVlbiBhIGJpdCB3ZWlyZC4gSXQgaXMgd2h5IHRoZXkgaGF2ZSBiZWVuIGNoYW5nZWQgc28gbXVjaC4KSWYgeW91IGFyZSBsb29raW5nIGZvciBhIGJpZyBjcm93ZCwgcnVuIGFuIGFkIG9uIGEgbG9jYWwgUmFkaW8gU3RhdGlvbiwgdGhpcyB3aWxsIGNvc3QgeW91IHNvbWUgdXBmcm9udCBtb25leSBidXQgeW91IGNhbiBnZXQgdGhlIG1lc3NhZ2UgdG8gYWxsb3Qgb2YgcGVvcGxlLiAKWW91IGRvIG5vdCBoYXZlIHRvIHNwZW5kIGFueSBtb25leSB5b3Vyc2VsZi4gQWxsIFlvdSBoYXZlIHRvIGRvIGlzIHRvIG9wZW4gYW4gYWNjb3VudCBhdCBhIHBva2VyIHJvb20gb24gd2hpY2ggWW91IGhhdmUgbm90IHBsYXllZCBiZWZvcmUuIExldCdzIHRha2UgYSBsb29vayBhdCB0aGUgMiBvcHRpb25zIFlvdSBoYXZlIGZvciBnZXR0aW5nIGZyZWUgcG9rZXIgbW9uZXkgbm8gZGVwb3NpdCAuIApTcG9ydCBpcyBzdXBwb3NlZCB0byBiZSBmdW4uIApMYXRlciBvbiwgSSBleHByZXNzZWQgdG8gbXkgY291c2luIHRoYXQgSSB0aG91Z2h0IGhlciBmcmllbmRzIHdlcmUgcnVkZSB0byBtZSBhbmQgbWFkZSBtZSBmZWVsIGJhZCBhYm91dCBteXNlbGYuIApGb3IgZXhhbXBsZSwgZnJvbSB0aW1lIHRvIHRpbWUgTWljcm9nYW1pbmcgY2FzaW5vcyBob2xkIHN1Y2ggdG91cm5hbWVudHMuIApLZWxpIExhbmVzIHNlY3JldHMgYW5kIGxpZXMKMjUgcG9pbnRzICBzdWJtaXR0ZWQgMyBkYXlzIGFnb1NvbGlkIGFydGljbGUgd2l0aCBhIGxvdCBvZiBnb29kIHBvaW50cyBmb3IgaW5jcmVhc2luZyBzbGVlcCBxdWFsaXR5ISBJIHRyeSB0byBkbyBhIGZldyBvZiB0aGVzZSBteXNlbGYgYW5kIHVzdWFsbHkgbXkgcXVhbGl0eSBpcyBmYWlybHkgZ29vZC4gT25lIHRoaW5nIHRoYXQgSSBkbyBzdHJ1Z2dsZSB3aXRoIGlzIGlmIEkgZ2V0IG91dCBvZiBteSB0eXBpY2FsIHNsZWVwIHNjaGVkdWxlIHRob3VnaC4gU2F5IGZvciBleGFtcGxlIG9uIHNhdHVyZGF5IG5pZ2h0IEkgZGVjaWRlIHRvIGRvIHNvbWV0aGluZyB3aXRoIGZyaWVuZHMgbGF0ZXIgb24sIGVuZCB1cCBub3Qgc2xlZXBpbmcgdW50aWwgMWFtLCB0aGVuIHNsZWVwIGluIHVudGlsIGF0IGxlYXN0IDlhbSB0byBnZXQgOCBocnMsIGJ1dCB0aGVuIHdoZW4gc3VuZGF5IG5pZ2h0IHJvbGxzIGFyb3VuZCBJIHVuYWJsZSB0byBmYWxsIGFzbGVlcCBhdCBteSBub3JtYWwgdGltZSByZXF1aXJlZCBmb3IgOCBob3VycyBiZWZvcmUgN2FtIHdha2V1cCBtb25kYXkgbW9ybmluZy4gCkFzIG9uZSBodW1hbiByaWdodHMgdHJpYnVuYWwgc2FpZDogIkdlbmRlciBtYXkgYmUgdGhlIG1vc3Qgc2lnbmlmaWNhbnQgZmFjdG9yIGluIGEgcGVyc29uJ3MgaWRlbnRpdHkuIEl0IGlzIGludGVuc2VseSBwZXJzb25hbC4gCkN1cnJlbnQgcmVzZWFyY2ggc3VnZ2VzdHMgdGhhdCB0aGVyZSBpcyBhbiBpbmNyZWFzZWQgcmlzayBvZiBpbmp1cnkgYW5kIGRlY3JlYXNlZCByZWFjdGlvbiB0aW1lIGZyb20gZG9pbmcgc3RhdGljIHN0cmV0Y2hpbmcgKGdvaW5nIGludG8gYSBzdHJldGNoIGFuZCBob2xkaW5nIGl0IGZvciB4IGFtb3VudCBvZiBzZWNvbmRzKSBiZWZvcmUgZXhlcmNpc2UuIApBbmQgaGUgc3VnZ2VzdGVkIG1hcmtldGVycyBzaG91bGQgZ2V0IG1vcmUgYWdncmVzc2l2ZSBjYWxsaW5nIG91dCB0aGUgZGlnaXRhbCBnaWFudHMsICJuYW1pbmcgbmFtZXMgYWJvdXQgd2hvJ3MgZG9pbmcgaXQgcmlnaHQgYW5kIHdobydzIGxhZ2dpbmcuIi4gCkkgdGhpbmsgd2hlbmV2ZXIgc29tZW9uZSBzYXlzIHRoZXkgYSAiZmFuIG9mIERlYXRoIEdyaXBzIiwgdGhleSBoYXZlIHRvIGFkZCBhIGNhdmVhdCBzcGVjaWZ5aW5nIGV4YWN0bHkgd2hpY2ggcGFydCBvZiB0aGVpciBkaXNjb2dyYXBoeSB0aGV5IGEgImZhbiIgb2YuIFRoZXkgaGFkIHNvIG1hbnkgY2hhbmdlcyBpbiBzdHlsZSBhbmQgc291bmQgdGhhdCBpIHN0cnVnZ2xlIHRvIGZpbmQgdGhlIHRocm91Z2ggbGluZSwgb3V0c2lkZSBvZiBNQyBSaWRlIHBlcmZvcm1hbmNlcyBhbmQgdGhlIGZhY3QgdGhhdCBpdCBhbGwgbWFyZ2luYWxseSBzaW1pbGFyIGxldmVscyBvZiBmdWNraW5nIG1lbnRhbC4uIApUaGUgSW50ZXJuZXQgbWFkZSBpdCBwb3NzaWJsZSBmb3IgcG9rZXIgZmFucyB0byBwbGF5IHBva2VyIG9ubGluZSBvbiBzcGVjaWFsbHkgZGVzaWduZWQgc2l0ZXMgdGhhdCB1c2Ugc3BlY2lhbCBwb2tlciBzb2Z0d2FyZS4gCkl0IGhvcnJlbmRvdXMgYW5kIHVnbHkuIEkgaGF0ZSBpdC4gVGhlIHBvaW50IG9mIGVtb2ppcyBpcyB0byBzaG93IGVtb3Rpb25zLCBidXQgd2hhdCBlbW90aW9uIGRvZXMgdGhpcyBzaG93PyBEbyB5b3UganVzdCB3YWtlIHVwIGluIHRoZSBtb3JuaW5nIGFuZCB0aGluayAid293LCBJIHJlYWxseSBmZWVsIGxpa2UgYSBtYXNzaXZlIGZ1Y2tpbmcgc3RvbmUgdG9kYXkiPyBJdCB1c2VsZXNzLiAKMykgRXN0ZXI6IDE4NDUgMTkzNiAoZXhjbHVkaW5nIDkgbWluIGFzIHRpcCksIDEwMEUsIHRoZSBmaXJzdCB0aW1lIGluIHRoZSBsYXN0IG9uZSB5ZWFyLiBTaGUgcmVxdWVzdGVkIG9yZ2FzbSBhcyBtZWRpY2luZSBmb3IgaGVyIGhlYWRhY2hlLCBzdWNoIGEgbmljZSBtYW5ldXZlciB0byBnZXQgbWUuIEluIGEgcm9vbSA1IG1pbiBjYXJlc3NpbmcsIDIwIG1pbiBEQVRZIHdpdGggaGVyIHJlcXVlc3RlZCBPLCA0IG1pbiBCSiwgNSBtaW4gY293Z2lybCwgNSBtaW4gbWlzc2lvbmFyeSwgMiBtaW4gZG9nZ2llIGFuZCBteSAxMCBtaW4gbWFzc2FnZSBvbiBoZXIuIApMZXMgY2hhbmdlcyBkZSBiYW5hbGl0cyBzb250IGducmFsZW1lbnQgcGVybWlzICBsYSB0YWJsZSwgbWFpcyBsZXMgY29udmVyc2F0aW9ucyBwbHVzIGludGVuc2VzIG5lIHNvbnQgZ25yYWxlbWVudCBwYXMgYWNjZXB0ZXMuIFZvdXMgbmUgZGV2ZXogcGFzIG5vbiBwbHVzIHJ2bGVyIGRlcyBjYXJ0ZXMgb3UgbWVudGlyIHBhciByYXBwb3J0ICB2b3RyZSBtYWluLiAgbW9pbnMgZGUgam91ZXIgYXZlYyBkZXMgYW1pcywgbGltaXRleiB2b3MgcHJvcG9zICBxdWVscXVlcyBjb21tZW50YWlyZXMgb3UgY2hhbmdlcyBvY2Nhc2lvbm5lbHNbM10uLiAKT3ZlcnZpZXcgZm9yIGNyaWNrZXQKVGhlcmUgaXMgbm8gbWFnaWMgbnVtYmVyIG9mIGtub2NrZG93bnMgd2hlcmUgeW91IHN0b3AgdGhlIGZpZ2h0LCBidXQgeW91IHNlZW0gdG8gYmUgY29uZnVzZWQgaW4gdGhpbmtpbmcgdGhlcmUgaXMuIApTdHJldGNoIHRoZSB0cmljZXBzLCByYWlzZSB5b3VyIGFybSBzdHJhaWdodCBvdmVyaGVhZCBhbmQgcGxhY2UgeW91ciBwYWxtIG9uIHRoZSBzaG91bGRlcjsgZm9yIGFuIGFkZGl0aW9uYWwgc3RyZXRjaCwgcHVzaCB5b3VyIGVsYm93IGdlbnRseSB1cCBhbmQgYmFjay4gVG8gc3RyZXRjaCB0aGUgYmljZXBzLCBleHRlbmQgeW91ciBhcm0gc3RyYWlnaHQgb3V0IHRvIHRoZSBzaWRlLCBwb2ludCB5b3VyIHRodW1iIHRvd2FyZHMgdGhlIGZsb29yLCBhbmQgc3RyZXRjaCB5b3VyIGFybSBpbiBiYWNrIG9mIHlvdSAodHVybiB5b3VyIHRodW1iIHBvaW50aW5nIGRvd24gYmFja3dhcmRzIGZvciBhbiBhZGRpdGlvbmFsIHN0cmV0Y2gpLiBUb28gbXVjaCBncmlwcGluZyBjYW4gY2F1c2UgdGhlIG11c2NsZXMgaW4gdGhlIHBhbG0gb2YgdGhlIGhhbmQgYW5kIGluc2lkZSBvZiB0aGUgZm9yZWFybSB0byB0aWdodGVuIGFuZCBjcmFtcDsgZnJlcXVlbnQgZ2VudGxlIHN0cmV0Y2hpbmcgb2YgYm90aCBmaW5nZXJzIGFuZCBoYW5kIHdpbGwgaGVscCB0cmVhdCBhbmQgcHJldmVudCB0aGlzIGZyb20gb2NjdXJyaW5nIChzZWUgUmlnaHQpLiBJdCBpcyBlc3BlY2lhbGx5IGltcG9ydGFudCB0byBzdHJldGNoIHRoZSBmaW5nZXJzIGFzIHdlIGFnZSwgdG8gbWFpbnRhaW4gdGhlaXIgbW9iaWxpdHkuCldoZW4gdGhleSBldmVudHVhbGx5IHN0b3BwZWQgZG9pbmcgdGhhdCwgaW4gY29udHJhc3QgdG8gdGhlIG90aGVyIHNlcnZlcnMsIGl0IGZlbHQgbGlrZSBhIGJhaXQgYW5kIHN3aXRjaC4gSSBWNywgYnV0IGlmIHRoZSBnYW1lIGhhZCBiZWVuIGxpa2UgdGhpcyBmcm9tIHRoZSBiZWdpbm5pbmcgSSB3b3VsZCBwcm9iYWJseSBzdGlsbCBiZSBWMDsgaW4gZmFjdCwgSSBwcm9iYWJseSB3b3VsZG4gZXZlbiBoYXZlIGtlcHQgcGxheWluZyB0aGlzIGxvbmcuIAoiSGVsZW4sIHdpciB3b2xsZW4gZG9jaCBiZWkgZGVyIFVudGVyc3VjaHVuZyBrZWluZSBGZWhsZXIgbWFjaGVuIHVuZCB2aWVsbGVpY2h0IGV0d2FzIFdpY2h0aWdlcyBhdXNzZXIgQWNodCBsYXNzZW4uIApQb3p1ZWxvIGlzIHdvcnRoIGl0LCBib3RoIFRvcm9udG8gZXhlY3V0aXZlcyBzYXkuIFRGQyBmYW5zIHdpbGwgaGF2ZSBhIGNoYW5jZSB0byBzZWUgZm9yIHRoZW1zZWx2ZXMgbGF0ZXIgdGhpcyBtb250aCBpbiB0aGUgd2FrZSBvZiBuZXdzIE1vbmRheSB0aGF0IHRoZSBQb3p1ZWxvIHRyYW5zZmVyIHdhcyBhIGRvbmUgZGVhbC4KIltUaG9zZSBpbWFnZXMsXSB0aGV5IHN0aWxsIHRoZXJlLCB0aGV5IHN0aWxsIHRoZXJlIHdpZGVseSwgdGhleSBlYXN5IHRvIGZpbmQsIHRoZXkgbm90IGhpZGRlbi4gCklsIGZhdXQgYmllbiBwb3VydGFudCBzZSBkZW1hbmRlciBzaSBjZSBtb3Qgbidlc3QgcXUndW5lIGlkZSBkJ2lsbHVtaW4sIGQndW4gcGVuc2V1ciBkb250IG9uIHNhaXQgZm9ydCBleGFjdGVtZW50IHF1J2lsIGEgZmluaSBwYXIgZGV2ZW5pciBmb3UsIG91IGJpZW4gc2kgTmlldHpzY2hlIG5lIHByb25vbmNlIHBhcyBwbHV0dCBsYSBwYXJvbGUgcXVpLCB0YWNpdGVtZW50LCBlc3QgZGl0ZSBkZXB1aXMgdG91am91cnMgZGFucyBsJ0hpc3RvaXJlIGRlIGwnT2NjaWRlbnQgZHRlcm1pbmUgcGFyIGxhIE10YXBoeXNpcXVlLi4gCkkgZG8gY29uc2lkZXJhYmx5IHdlbGwgd2hlbiBJIHBsYXkgYXQgbXkgbG9jYWwgY2FyZCByb29tLiBObyBzdGF0cyBvciBhbnl0aGluZyBidXQgaGF2ZW4gaGFkIGFueSB0ZXJyaWJsZSBsb3Npbmcgc2Vzc2lvbnMgZXZlci4gCk90YWt1Y29kZSAgMSBwb2ludCAgc3VibWl0dGVkIDkgeWVhcnMgYWdvClNlY29uZGx5LCBzaGUgbWlnaHQgYmUgYXdhcmUgdGhhdCBicmVha3VwcyBhcmUgbWFkZSAxMCB0aW1lcyB3b3JzZSBieSBzb2NpYWwgbWVkaWEgKGllIGV2ZXJ5b25lIGFuZCB0aGVpciBhdW50eSBjYW4gc2VlIGlmIGEgcmVsYXRpb25zaGlwIHRoYXQgYWxsIG92ZXIgc29jaWFsIG1lZGlhIHN1ZGRlbmx5IGZhbGxzIGFwYXJ0KS4gTWF5YmUgc2hlIGJlZW4gYnVybmVkIHRoaXMgd2F5IGJlZm9yZT8gU2hlIG1pZ2h0IGJlIHBsYXlpbmcgaXQgc2FmZSwga2VlcGluZyB0aGUgd2hvbGUgdGhpbmcgcHJpdmF0ZSBmb3Igbm93Li4gClN0cmF3IEhhdCwgU0hBS0VZIHRoZSBmaXJzdCBldmVyLCBhdCB0aGUgZW5kIG9mIEogU3RyZWV0IG5lYXIgQ1NVUywgd2l0aCB0aGF0IGNyYWNrZXIgc3R5bGUsIGJsaXN0ZXJlZCBjcnVzdC4gU3RpbGwgYSBwZXJmZWN0IGNydXN0IGluIG15IG1lbW9yeS4KSG93ZXZlciwgaGUgZGVjaWRlZCB0byB0YWtlIHRoZSBwaG90byBzaG9vdCBpbiBhIGRpZmZlcmVudCBkaXJlY3Rpb24uCk5ldmFkYSBpcyB0aGUgb25seSBzdGF0ZSB0aGF0IGFsbG93cyBsZWdhbCBicm90aGVscy4gCkZvcmNpbmcgeW91ciB3YXkgb250byBvdmVyIGNyb3dkZWQgdHJhaW5zIGFuZCBidXNlcyBpcyBub3QgdGhlIG1vc3QgcGxlYXNhbnQgd2F5IHRvIHRvcCBhbmQgdGFpbCB5b3VyIGRheS4gRm9yIHRoaXMgZW50cnksIHdlIGFza2VkIGZvciB0aXBzIG9uIGhvdyB0byBzdGF5IGNvb2wsIGhvdyB0byBoYW5kbGUgb2Jub3hpb3VzIGZlbGxvdyBjb21tdXRlcnMgKHdpdGhvdXQgbGFuZGluZyB5b3Vyc2VsZiBpbiB0cm91YmxlIG9yIGRhbmdlcikgYW5kIGdlbmVyYWwgYWR2aWNlIG9uIGhvdyBiZXN0IHRvIHN0YXkgY2hlZXJ5IHdoaWxlIHlvdXIgZmFjZSBpcyBwcmVzc2VkIGludG8gdGhlIHN3ZWF0eSBhcm1waXQgb2YgdGhlIHBlcnNvbiBzdGFuZGluZyBuZXh0IHRvIHlvdS4gSGVyZSdzIHdoYXQgeW91IGNhbWUgdXAgd2l0aC5SZWFkaW5nSWYgYW55b25lIHRha2VzIHB1YmxpYyB0cmFuc3BvcnQsIGFuZCBjaG9vc2VzIHRvIGxpc3RlbiB0byBtdXNpYywgb3IgcmVhZCBhIHBhcGVyLCBvciBldmVuIHdvcnNlLCBkb2Vzbid0IGRvIGFueXRoaW5nLCB3ZSB1cmdlIHlvdSB0byBtYWtlIHVzZSBvZiB0aGUgdGltZSB5b3UgaGF2ZS4gClNoZSBiYXNpY2FsbHkgaGFkIGFuIGVtb3Rpb25hbCBhZmZhaXIgd2l0aCB0aGUgRG9jdG9yIHdoaWxlIHN0aWxsIHdpdGggTWlja2V5LiAKSXQgZGVwZW5kcyBvbiB5b3VyIGludGVycHJldGF0aW9uIG9mIGhvdyB0aGUgcG93ZXIgaXMgdHJhbnNmZXJyZWQuIEkgYWx3YXlzIGltYWdpbmVkIHBvd2VyIGZyb20gUGF0cm9ucyBpcyBhY3R1YWxseSBtb3JlIGxpa2UgYSBvbmUgdGltZSBiYW5rIHRyYW5zZmVyIHRoYXQgbWF0dXJlcyBvdmVyIHRpbWUgICBsaWtlIGluIHNvcmNlcmVycywgdGhleSBkb24ndCBhY3R1YWxseSBnZXQgbW9yZSBwb3dlcmZ1bCBvdmVyIHRpbWUsIHRoZXkganVzdCBsZWFybiBob3cgdG8gaGFybmVzcyBwb3dlciBwb3RlbnRpYWwgdGhleSBhbHJlYWR5IGhhdmUgYXMgdGhleSAnbGV2ZWwgdXAnICAgZm9yIHdhcmxvY2tzIGl0J3MgdGhlIHNhbWUgICB0aGUgcGFjdCBnaXZlcyB0aGVtIHRoZSBwb3dlciwgYnV0IG9uY2UgZ2l2ZW4gdGhleSBjYW4ndCByZXRyYWN0IHRoZSBwb3dlcnMgZ2l2ZW4sIGV2ZW4gaWYgdGhlIHBhY3QgaXMgdW5mdWxmaWxsZWQgICB0aGF0J3MgdGhlIHJpc2sgdGhlIHBhdHJvbiB1bmRlcmdvZXMgYXMgYSBjaGFyYWN0ZXI6IGlmIHRoZSBwYWN0IGhhcyBub3QgYmVlbiBjb21wbGV0ZWQgKGVnIHJlbGVhc2UgdWt0b2EgZm9yIGxpZmUgYW5kIHBvd2VyKSB3aGVuIHRoZSBwb3dlcnMgYXJlIGdpdmVuIG92ZXIsIHRoZXkgcmlzayB0aGUgd2FybG9jayBydW5uaW5nIG9mZiB3aXRoIHRoZWlyIGFscmVhZHkgaW5mdXNlZCBlbGRyaXRjaCBwb3dlci4gQ2xlcmljcyBhbmQgUGFsYWRpbnMgKGFuZCB0byBhIGxlc3NlciBleHRlbnQsIGRydWlkcykgYXJlIGEgbGl0dGxlIG1vcmUgY29tcGxpY2F0ZWQsIHRoZSBwb3dlcnMgSSB0aGluayBhcmUgc3RpbGwgZ2l2ZW4gb3ZlciwgaG93ZXZlciBpZiB0aGV5IGRlbnkgZm9sbG93aW5nIG9uZSBnb2QsIGxpa2UgYW4gb2F0aCBicmVha2VyIHRoZXkgYXJlIHNpbXBseSBwaWNrZWQgdXAgYnkgYW5vdGhlciBnb2QsIHRoZSBwaWVjZXMgb2YgdGhlIGRpdmluZSBnYW1lIG9mIGNoZXNzIGFyZSBzdGlsbCBuZWVkZWQgYnkgYWxsLCBhbmQgdGhleSBjaGFuZ2UgdGhlaXIgZG9tYWluIGlmIHRoZXkgYnJlYWsgdGhlaXIgb2F0aCBvciB0dXJuIGF3YXkgZnJvbSB0aGVpciBnb2QuCkxlcyAxNSBwcmVtaWVycyBsb2dlbWVudHMgc29jaWF1eCBkZSBsYSBtYW5kYXR1cmUgICBsZSBNYWlyZSBsb3JzIGRlIGxhIGNhbXBhZ25lIGxlY3RvcmFsZSBzJ2VzdCBmaXggY29tbWUgb2JqZWN0aWYgZCdlbiBjcmVyIDEwMDAgZGFucyBsJ2Fycm9uZGlzc2VtZW50IGQnaWNpIDIwMTQgICBzZXJvbnQgcmFsaXNzIGF1IDUgcnVlIE1vbnRob2xvbiBkYW5zIGxlIGNhZHJlIGQndW4gY29udHJhdCBjb25maSAgbGEgc29jaXQgZCdjb25vbWllIG1peHRlIFNHSU0sIGxhIFZpbGxlIGF5YW50IHByZW1wdCBsJ2ltbWV1YmxlIGZpbiAyMDA3LiBJbCBmYXV0IG5vdGVyIGxhIHJhcGlkaXQgYXZlYyBsYXF1ZWxsZSBjZSBkb3NzaWVyIGEgdCB0cmFpdCBtYWxnciBsYSBwYXVzZSBkdWUgYXV4IGxlY3Rpb25zIG1haXMgaWwgZmF1dCBhdXNzaSBub3RlciB1bmUgY2VydGFpbmUgYW1iaWd1dCBjb25jZXJuYW50IGxlIHByb2pldCBnbG9iYWwgZGVzIGxvZ2VtZW50cyBzb2NpYXV4LCBzaSBub3VzIGF2b25zIGJpZW4gY29tcHJpcyBsZSBkYmF0IHF1aSBhIGV1IGxpZXUgIGwnb2NjYXNpb24gZGUgY2V0dGUgZGxpYnJhdGlvbi4gTGEgVmlsbGUgdmEgY3JlciAxNSBsb2dlbWVudHMgc29jaWF1eCBkYW5zIGwnaW1tZXVibGUgbWFpcyBsZXMgNSBmYW1pbGxlcyBxdWkgeSByc2lkZW50IGVuY29yZSBzZSB2ZXJyb250IHByb3Bvc2VyIHVuIG5vdXZlYXUgYmFpbCBzaSB0YW50IGVzdCBxdSdlbGxlcyBzb2llbnQgbGlnaWJsZXMgIGwnYWNjcyBhdSBsb2dlbWVudCBzb2NpYWwgKHJhcHBlbG9ucyBxdWUgNzIlIGRlIGxhIHBvcHVsYXRpb24gcGFyaXNpZW5uZSBlc3QgbGlnaWJsZSAgbCdhY2NzICBjZSB0eXBlIGRlIGxvZ2VtZW50KS4gQ2UgcXVpIHNpZ25pZmllIHF1ZSBsYSBWaWxsZSB2YSBiaWVuIGNyZXIgMTUgbG9nZW1lbnRzIHNvY2lhdXggbWFpcyBxdWUgc2V1bGVtZW50IDEwIGZhbWlsbGVzIG5vdXZlbGxlcyBlbiBwcm9maXRlcm9udC4KRGF0b3JuIGIgcmphZGUgYXR0IG5kcmEgcmVnbGVybmEgbnUga29tbWVyIGRlIG9jaCBkZXQgc3Rhbm5hciBkYXRhIGZyIG4ga29uc29sZW4gdGlsbCBwcm9jZXNzb3JlciB0aWxsIHN0ciBtbWFuZGUga29kYXJlbiB0aWxsIGludGVybmV0IHRpbGwgbHlzc25hcmVucyBkYXRvci4gNCBzdmVuc2thIGNhc2lub24gbnUsIGthbnNrZSBkdSBmciBnYXIgZGlnIHNqIGx2OiAib20gZGUgaW5zYXR0YSBpbnRlIGthbiBlbnMga29tbWl0IHRpbGwgYmFyYSBmIHIgbGF0IGYgciBhdHQgZyB0aWxsIGtvbnRvcmV0IHZhcmplIGRhZy4gCkdldCByZWRkaXQgcHJlbWl1bUJlc3QgTm9uZmljdGlvbiBvZiAyMDE4IFJ1bm5lciBVcAooT3Igc29ydGEgd2hpdGUpLiAKQnV0IHRoZXkga2VlcCBnZXR0aW5nIGludG8gdGhlaXIgY2FyLiAKV2hpbGUgSSBhZ3JlZSB3aXRoIHRoZSBzb2xhci93aW5kIHByYWN0aWNlLCBpdCBzaG91bGQgYmUgbm90ZWQgdGhhdCBHZW9yZ2V0b3duIGdhdmUgdXMgdGhlIFNoZXJpZmYgd2hvIGJhcmtzIG9uIHN0YWdlIGF0IGEgZ2VudGxlbWFucyBjbHViLCB0aGVuIHB1YmxpY2x5IHVyaW5hdGVzIGFzIGhlIHdhbGtzIGhvbWUgZHJ1bmsgZnJvbSB0aGUgYmFyLiBUaGlzIGNvdW50eSBhbHNvIGhhcyBwb2xpY2Ugd2hpY2ggZ2V0IGRydW5rIGluIG9yZGVyIHRvIGNvbXBsZXRlIHRoZWlyIGFubnVhbCBidWRnZXQuIEl0IGlzIGFsc28gdGhlIHNhbWUgcGxhY2Ugd2hpY2ggaGFzIHRoZSB0b3VnaGVzdCBzZW50ZW5jZXMgZm9yIG1pbmltYWwgZHJ1ZyBwb3NzZXNzaW9uIGNoYXJnZXMuIApNeSBkb21pbmFudCBpbXByZXNzaW9uIG9mIHRoZSBjYXNpbm8gd2FzIG9uZSBvZiBoYXZpbmcgc3RlcHBlZCBpbnRvIFpvbWJpZWxhbmQuIEF0IGZpcnN0IG5vbmUgb2YgdXMgbm90aWNlZCB0aGUgaHVtYW4gYXRtb3NwaGVyZSBidXQgYXMgd2Ugd2Fsa2VkIGFyb3VuZCB3ZSBiZWdhbiB0byBwZXJjZWl2ZSBhbiBvdmVyYXJjaGluZyB0b25lIG9yIGZlZWxpbmcgdG8gZXZlcnlvbmUgaW4gdGhlIHJvb20uIFRoZXJlIHdhcyB0cmVtZW5kb3VzIGZvY3VzLiAKTCBtZXJjcmVkaSxKYW5lIFBoaWxwb3R0IGEgZGNsYXIgcXVlIGxlIENhbmFkYSBzb3VoYWl0YWl0IHRhYmxpciB1bmUgcG9saXRpcXVlIHN1ciBsYSBtYXJpanVhbmEgcXVpIHNvaXQgYmFzZSBzdXIgZGVzIGZhaXRzIHNjaWVudGlmaXF1ZXMgZXQgcXVpIHNvaXQgZW1wcmVpbnRlIGRlIGNvbXBhc3Npb24uCk9QIGNvbWVzIG9mZiBhcyByZWFsbHkgcGV0dHkgYW5kIHNvY2lhbGx5IGNsdWVsZXNzIGhlcmUgYXQgYmVzdC4gCldlc3QgQ29hc3QgQW1lcmljYW4gaGVyZS4gQmVlbiB0byAzOSBvZiB0aGUgNTAgc3RhdGVzIGFuZCBpbnRlcmFjdGVkIHdpdGggYSB2YXN0IHJhbmdlIG9mIHBlb3BsZS4gRXZlbiBoYWQgYSBwcml2YXRlIGNhdGhvbGljIGhpZ2ggc2Nob29sIG5lYXIgd2hlcmUgSSB3ZW50IHRvIEhTLiBOZXZlciBoZWFyZCBvZiBvciBzZWVuIHNvbWVvbmUgcHJhY3RpY2luZyAnYXNoIFdlZG5lc2RheS4nClRoZXkgZmlyZSBhIGxvdCBvZiBjb21tdW5pdHkgcGVvcGxlLCBlc3BvcnRzIHBlb3BsZS4gVGhlaXIgZXNwb3J0cyBoYXMgYmVlbiBhIGZhaWx1cmUuIEhlYXJ0aHN0b25lIGVzcG9ydHMgaXMgbWVoLCB0aGUgcHJvcyBhcmUgYWxzbyBib3JlZCBhcyBmdWNrIGFib3V0IHRoZSBnYW1lLiBKdXN0IHNlZSBob3cgbWFueSBydW4gdG8gYXV0byBjaGVzcyBhcyBzb29uIGFzIHRoZXkgZGVlbSBpdCB2aWFibGUgdG8gc3RyZWFtLgpTaGUgd2hpcHMgb3V0IGhlciBjdWUgY2FzZSBhbmQgYSBzd2VldCBNY0Rlcm1vdHQgY3VlLiAKQWZ0ZXIgYSBzdW5ueSBhbmQgaG90IGRheSwgVG9yb250byBpcyBleHBlY3RlZCB0byBzZWUgYW4gb3Zlcm5pZ2h0IGxvdyBvZiAxNCBDLiAKVGhleSBub3QgdG90YWwgYnVuay4gTXkgZmFtaWx5IGhhcyBnZW5lYWxvZ2ljYWwgcmVjb3JkcyBnb2luZyBiYWNrIHRvIHRoZSAxNTAwcyBhbmQgdGhlIHJlc3VsdHMgb2YgbXkgRE5BIHRlc3QgbWF0Y2hlZCB0aGVtIHBlcmZlY3RseS4KV2hhdCB3b3VsZCB5b3Ugc2F5IGF0dHJhY3RlZCBpdCBtb3N0IHRvIHRoZSBnYW1lPyBXYXMgaXQgdGhlIGNlbGVicml0aWVzPyBXYXMgaXQgdGhlIG1vbmV5PyBXYXMgaXQgdGhlIHRocmlsbCBvZiBpdD8gSSB0aGluayB0aGUgZmlyc3QgZ2FtZSBJIHdlbnQgdG8sIGp1c3QgdGhlIGFjY2VzcyB0byB0aGVzZSBwZW9wbGUgd2hvIHdlcmUgbGFyZ2VyIHRoYW4gbGlmZSwgd2hvIHdlcmUgc3VjY2Vzc2Z1bCwgd2hvIGFyZSBzcGVha2luZyBmcmVlbHkgYWJvdXQsIHlvdSBrbm93LCBidXNpbmVzcyBhbmQgdGhlIG1vdmllIGluZHVzdHJ5LiBBbmQgaXQganVzdCB3YXNuJ3QgdGhlIHR5cGUgb2YgYWNjZXNzIHRoYXQgSSB3YXMgdXNlZCB0by4gSXQgd2FzIGZhc2NpbmF0aW5nIGFuZCBhbHNvIGx1Y3JhdGl2ZS4gCkV2ZXJ5IGRheSBpbiB0aGUgc3VtbWVyIHdoZW4gdGhlIHN1biBjYW1lIHVwIHVudGlsIG1pZCBhZnRlcm5vb24gKHdoZW4gd2Ugd2VyZSBhbG1vc3QgY2xvc2VkKSB0aGUgc2hvd3Jvb20gZ290IHVuYmVhcmFibHkgaG90LiAKSXQgT1VSIG1vbmV5LiAKTmV4dCB0cnkgYW4gVXBwZXIgVHJhcCBzdHJldGNoLiBOb3cgaWYgeW91IGhhdmUgYSBzdGlmZiBuZWNrIHlvdSBtYXkgbm90IGJlIGFibGUgdG8gZG8gdGhlIGZ1bGwgc3RyZXRjaCB3aXRob3V0IGluY3JlYXNpbmcgdGhlIHBhaW4uIApHb2luZyBmYXIgYmV5b25kIHRoZSBleHBlY3RlZCBhcHBsaWNhdGlvbnMgZm9yIG11c2N1bG9za2VsZXRhbCBwYWluLCB0aGlzIG1hc3NhZ2UgdGVjaG5pcXVlIGlzIHRhdWdodCBpbiBDaGluZXNlIG1lZGljYWwgc2Nob29scywgYW5kIHNwZWNpYWxpc3RzIGluIHRoZSBhcnQgYXJlIGFibGUgdG8gdHJlYXQgYSB3aWRlIHJhbmdlIG9mIGRpc2Vhc2VzIGVmZmVjdGl2ZWx5LiBCeSB3b3JraW5nIHdpdGggdGhlIG1lcmlkaWFuIHN5c3RlbSwgcHJhY3RpdGlvbmVycyBhcmUgYWJsZSB0byB0cmVhdCBpbnRlcm5hbCBjb25kaXRpb25zIHN1Y2ggYXMgaHlwZXJ0ZW5zaW9uLCBwZXB0aWMgdWxjZXIsIGluc29tbmlhLCBuYXVzZWEsIGFydGhyaXRpcywgYW5kIGNvbnN0aXBhdGlvbi4uIApCZWNhdXNlIG9mIE5NUywgQmx1bWUgc2F5cywgYSBidXllciB3aG8gd2FudGVkIDIwMCBzaGFyZXMgd291bGQgZW5kIHVwIHdpdGggMTAwIGZyb20gQ2hpY2FnbyBhdCAkMjAgYW5kIDEwMCBmcm9tIE5ldyBZb3JrIGF0ICQyMC4wMiwgc2luY2UgdGhvc2Ugd291bGQgYmUgdGhlIHR3byBiZXN0IHRvcCBvZiB0aGUgYm9vayBwcmljZXMuIApUaGV5IGhhZCBoYWQgZ3JlYXQgc3VjY2VzcyB1c2luZyBIb2NrZXkgTmlnaHQgaW4gQ2FuYWRhIERvbiBDaGVycnkgYXMgdGhlIHNwb2tlc3BlcnNvbiBmb3IgRG9taW5pb24gTGVuZGluZyBTZXJ2aWNlcyBhbmQgd2FudGVkIHRvIGRvIHRoZSBzYW1lIGZvciBFblJJQ0hlZCBBY2FkZW15IHRocm91Z2ggdGhlIGRyYWdvbnMuIFdlIGhpcmVkIERvbiBDaGVycnksIG91ciBjcmVkaWJpbGl0eSBhbmQgbWFya2V0IHNoYXJlIHdlbnQgdXAgaW5zdGFudGx5LCBNci4gCkFzc3VtZWRvdXR0YWtlIGZyb20gIlRoZSBGYW1lIE1vbnMgZXIuIiBDYW4gYmUgZm91bmQgb24gWW91dHViZS4gMzggNDUpIEJhZFJvbWFuY2UvQWxlamFuZHJvL01vbnN0ZXIvU3BlZWNobGVzcy9EYW5jZSBJbiBUaGUgRGFyay9UZWxlcGhvbmUoRmVhdC4gClNlZW4gbW9ydGdhZ2UgcmF0ZXMgaW5jaCB1cCB0aGlzIHllYXIuIApJIGFwcHJlY2lhdGUgaGltIGJlY2F1c2Ugb2Z0ZW4gdGltZXMgcGVvcGxlIGFyZSBsaWtlIG9oIGhlIHVucmVhbGlzdGljIG9yIGhlIGp1c3Qgc2hvb3RpbmcgZm9yIHNvbWV0aGluZyB0aGF0IHdpbGwgbmV2ZXIgaGFwcGVuLiBCdXQgaWYgd2UgZGlkbiBoYXZlIHZpc2lvbmFyaWVzIG9yIHBlb3BsZSB3aG8gd2FudCB0byBhY2hpZXZlIHRoZSAidW5yZWFjaGFibGUiIHRoZW4gaG93IGNhbiBncmVhdCBjaGFuZ2UgZXZlciBvY2N1cj8gSWYgd2Uga2VlcCBkb3VidGluZywgdGhlbiBpdCB3aWxsIG5ldmVyIGhhcHBlbiBhbmQgdGhpbmdzIENBTiBiZSBiZXR0ZXIgdGhhbiB0aGV5IGFyZSBub3csIHdlIGp1c3QgaGF2ZSB0byB3b3JrIGF0IGl0LiBJIGFwcHJlY2lhdGUgaGltIHNvIG11Y2ggYmVjYXVzZSBoZSBtYWtlcyB0aGF0IHZpc2lvbiBhdCBsZWFzdCBhIGxpdHRsZSBlYXNpZXIgdG8gc2VlIGluIG91ciBmdXR1cmUuCkRpc2N1c3Npb24gb2YgaGF0ZSBzcGVlY2ggaXMgb2theSwgdXNlcnMgYXJlIGZyZWUgdG8gZGlzY3VzcyB3aHkgYSB3b3JkIG1heSBiZSBvZmZlbnNpdmUgb3Igd2h5IGNlcnRhaW4gd29yZHMgYXJlIGNvbnNpZGVyZWQgb2ZmZW5zaXZlIGZvciBleGFtcGxlLiBVc2VycyBhcmUgbm90IGFsbG93ZWQgdG8gZGlyZWN0IGhhdGUgc3BlZWNoIHRvIGFub3RoZXIgdXNlciBvciBncm91cC4gVGhlIG1vZCB0ZWFtIG9ic2VydmVzIG5vIHNwZWNpYWwgZGlzdGluY3Rpb24gYmV0d2VlbiByYWNpYWwgdGVybXMgb3Igc2V2ZXJpdHkuIApEb3duc3RhaXJzIHRoZXJlIGlzIHdoYXQgYXBwZWFycyB0byBiZSBhIHJlc3RhdXJhbnQgYnV0IEkgZG9uIHRoaW5rIGFueW9uZSBlYXRzIGhlcmUgYnV0IHRoZSB3b3JraW5nIGdpcmxzLiAKQmpvcm4gd2FzIHNwZWFraW5nIGZyb20gaW5zaWRlIHRoZSBiYWNrIG9mIGEgbGltb3VzaW5lIGlmIGFueW9uZSByZW1lbWJlcnMgd2hpY2ggZG9jdW1lbnRhcnkgdGhpcyBpcy4gCkFmdGVyIHRoZSBkZWZlbnNlIHJlc3RlZCwgcHJvc2VjdXRvcnMgY2FsbGVkIERyLiBCcmVjaGVyIHNhaWQgdGhlcmUgd2VyZSBvbmx5IHRocmVlIGRvY3VtZW50ZWQgY2FzZXMgd2hlcmUgUENQIHdhcyB0aGUgc29sZSBjYXVzZSBvZiB2aW9sZW5jZS4gVGhlIGJlbGllZiB0aGF0IFBDUCBpbmR1Y2VkIHZpb2xlbnQgYmVoYXZpb3Igd2FzIGZhbHNlLCBoZSBzYWlkLgpOZXcgcGxheWVycyBsb29rIGF0IDMgdGhpbmdzLCB0aGVpciBjYXJkcywgdGhlIGNhcmRzIGluIHRoZSBtaWRkbGUgYW5kIGhvdyBtdWNoIHRoZSBiZXQgaXMgYW5kIGp1c3QgZWl0aGVyIG1hdGNoIHRoZSBiZXQsIG9yIHJhaXNlLiBJIG5ldmVyIGhhZCBhIG5ld2JpZSBmb2xkIGlmIEkgZWl0aGVyIGdvIGFsbCBpbiBvciBtYWtlIGEgaHVnZSBiZXQuIFRoZXkgZG9uIHRoaW5rIGFib3V0IHdoYXQgY2FyZHMgSSBjb3VsZCBoYXZlLCBob3cgSSBiZXQgcHJldmlvdXNseSBhbmQgd2hhdCBjYXJkcyB0aGV5IGNvdWxkIGdldCBiZWF0IHdpdGguIFRoZXkganVzdCBsb29rIGF0IHRoZSBsaXN0IG9mIHJhbmtpbmdzIG9mIGNhcmRzIGFuZCBpZiB0aGV5IG1hdGNoIGEgZ29vZCBvbmNlIHRoZXkgYmV0LiBJIGNhbGwgdGhpcyBhcmNoZXR5cGUgb2YgcGxheWVyIHRoZSAiYW1hdGV1ciBwcm8iLCBiZWNhdXNlIHRoZXkgdGVuZCB0byB0aGluayB0aGV5IGFuIGV4cGVydCBhdCBwb2tlciBhZnRlciByZWFkaW5nIGEgY291cGxlIGNoYXB0ZXJzIG9mIGEgYmFzaWMgc3RyYXRlZ3kgYm9vay4KSSBjYW4ndCBibGFtZSBoZXIsIHdoZW4gSSBrbm93IHdoYXQgc2hlIGhhcyB0byBwdXQgdXAgd2l0aC4gSSBkb24ndCBrbm93IHdoeSBpdCdzIHBlcm1pdHRlZC4gCkV0IHBhcyBuJ2ltcG9ydGUgbGFxdWVsbGUgcHVpc3F1J2lsIHMnYWdpdCBkdSAyMiBqdWluIDIwMTksIGpvdXIgbyBsZSBsZWFkZXIgZXQgZm9uZGF0ZXVyIGQnSW5kb2NoaW5lIGZ0ZXJhIHNvbiBhbm5pdmVyc2FpcmUuIApZZXMgc3VpY2lkZXMgc2hvdWxkIGJlIHRha2VuIG91dCBvZiBndW4gZGVhdGhzIGJlY2F1c2UgYmFubmluZyBndW5zIGRvZXNuIGxvd2VyIHRoZSBhbW91bnQgb2Ygc3VpY2lkZXMuCkVzc2VudGlhbGx5LCBpdCB2ZWdhbiwgdW5sZXNzIHlvdSByZWFsbHkgbG92ZSBzaGVsbGZpc2ggKEkgZG9uIHdoaWNoIGlzIGFsbG93ZWQuIApPdGhlciB0aGFuIHRoYXQgaXQgcmVhbGx5IGRlcGVuZHMgb24gd2hlcmUgYW5kIGZvciBob3cgbG9uZyB3aWxsIHlvdSBiZSBzdGF5aW5nLgpXaXRoIG5laXRoZXIgc2lkZSBnaXZpbmcgZ3JvdW5kLCBhbmQgdGhlIFdlc3RtaW5zdGVyIGdvdmVybm1lbnRhY2N1c2VkIG9mIGRlbGliZXJhdGVseSBydW5uaW5nIGRvd24gdGhlIEJyZXhpdCBjbG9jayB0byBzdHJlbmd0aGVuIGl0cyBoYW5kLCBJcmVsYW5kIGlzIHNsb3dseSBiZWluZyBzdWNrZWQgaW50byBCcml0YWluJ3MgaGlnaCBzdGFrZXMgcG9rZXIgZ2FtZSB3aXRoIHRoZSBFVS4KSG93ZXZlciwgaWYgeW91IHdlcmVuIGxhc3QgdG8gYWN0LCBkZXBlbmRpbmcgb24gaG93IGxhdGUgeW91IGFyZSwgaWYgaXQgd2FzIGNoZWNrZWQgdG8gbWUgSSBtaWdodCBzdGlsbCBjaGVjayB0byB0cnkgdG8gZ2V0IGEgY2hlY2sgcmFpc2UgaW4uIApUbyB0aGUgYmVzdCBvZiBteSBrbm93bGVkZ2UsIGluIHJhbmtlZCB5b3UgYXJlIHJhbmtlZCB0byBzaW1pbGFybHkgcmFua2VkIHBlb3BsZS4gCkdvb2QgZm9vZC4gClRoZSBncm91cCBpcyBzdGFydGluZyB0byBnZXQgdGhlIHRoZSBtZWF0IG9mIHRoZSBhZHZlbnR1cmUgbm93LiBTbywgc2hvdWxkIGJlIGEgbG90IG9mIGZ1bi4gClRoZXkgZGVtYW5kZWQgSSBjb21lIG92ZXIgdG8gZ3Vlc3Qgc2VydmljZSB3aGVyZSB0aGV5IHN0b29kIHRhcHBpbmcgdGhlaXIgZm9vdCBpbXBhdGllbnRseS4gS2VlcCBpbiBtaW5kIEkgYW0gaW4gYW5vdGhlciBwYXJ0IG9mIHRoZSBidWlsZGluZywgc28gaXQgdGFrZXMgbWUgc2V2ZXJhbCBtaW51dGVzIHRvIHdhbGsgYWxsIHRoZSB3YXkgdGhlcmUuCkV2ZW50dWFsbHkgeW91IG1pZ2h0IGJlIGFibGUgdG8gdGFsayBoZXIgaW50byBpdC4gR29vZCBsdWNrLCBiZWNhdXNlIGlmIHNoZSBkb2VzbiBsaWtlIGFuYWwsIHNoZSBuZXZlciB3aWxsLiBQbGVhc2Ugc3RvcCBtaXNsZWFkaW5nIHBlb3BsZSBvbiBzZXh1YWxpdHkuIApSZWd1bGFybHkgY29uZHVjdHMgZmFsc2UgZmxhZyBhdHRhY2tzIGFnYWluc3Qgb3RoZXIgY291bnRyaWVzLgpUcnkgYW5kIGF2b2lkIHN0YWlycyBhcyBtdWNoIGFzIHBvc3NpYmxlLCB0YWtlIHRoZSBlbGV2YXRvciB3aGVuIHlvdSBjYW4uCkRlciBTdGFydHN0YWNrIGRlciBUZWlsbmVobWVyIGVycmVjaG5ldGUgc2ljaCBhdXMgZGVyIGVycmVpY2h0ZW4gR2VzYW10IFB1bmt0emFobCBkZXIgU2Fpc29uIDIwMTggeCBGYWt0b3IgMzAgKGRhaGVyIGVyc3QgaW0gQW5zY2hsdXNzIGFuIGRpZSBTYWlzb24gbWdsaWNoKS5EaWUgUmFuZ2UgcmVpY2h0ZSBkYWhlciB2b24gMjguNTUwIGJpcyBoaW4genVtIE1pbmRlc3RzdGFjayB2b24gNS4wMDAuIFVtIGF1Y2ggZGVuIGtsZWluZW4gU3RhY2sgZ3V0ZW4gU3BpZWxtZ2xpY2hrZWl0ZW4genUgZ2ViZW4sIGhhdHRlbiB3aXIgdW5zIGZyIGVpbmUgZW50c3ByZWNoZW5kIGZsYWNoZSBTdHJ1a3R1ciBiZWlSZWxhdGl2IGZyaCBnaW5nIGVzIHp1ciBTYWNoZSB1bmQgZGllIGVyc3RlbiBTZWF0IE9wZW4gbGllZW4gdHJvdHpkZW0gbmljaHQgbGFuZ2UgYXVmIHNpY2ggd2FydGVuLlp1bSBEaW5lcmJyZWFrIGhhdHRlIHNpY2ggZGFzIEZlbGQgYmVyZWl0cyBldHdhIGhhbGJpZXJ0LCBlcnN0ZSBGYXZvcml0ZW4gbWl0IGdyb2VtIEFuZmFuZ3NzdGFjayBzYWd0ZW4gZWJlbmZhbGxzIGxlaXNlIEFkaWV1LkFtIEVuZGUgZXJnYWIgc2ljaCBmb2xnZW5kZXIgOSBTZWF0IEZpbmFsIFRhYmxlOkNocmlzdGluZSBLcnVzZSBNaWNoYWVsIE1hcnNjaG9sbGVrSGVyYmVydCBNaWVzZW5lciBMdWthcyBCcmFja21hbm5NaWNoYWVsIEtlbXBlciBEaXJrIERvYmJlcnRIYWxpZXMgRWwgSGFzc2FuIFNlYW4gTC4gClRoZSByZXN0IG9mIHlvdXIgcG9zdCBpcyBqdXN0IHZlcmJhbCBkaWFycmhlYS4gYXQgbm8gcG9pbnQgaGFzIG15IG9waW5pb24gYmVpbmcgcmVtb3RlbHkgcmVsYXRlZCB0byBKV1MgYmVpbmcgYSB3b21hbi4gaWYgeW91IG5lZWQgdG8gcGljayBhIGJhc2VsZXNzIGZpZ2h0IHdpdGggYW55b25lIGdvIHRvIC9yL0NhbmFkYS4KTG9zdCBqdXN0IGFyb3VuZCB0aGUgc2FtZSBhbW91bnQgb24gYmxhY2tqYWNrIHRvZGF5IGFmdGVyIGFsbW9zdCBhIG1vbnRoIG9mIHN0YXlpbmcgY2xlYW4uIFRoYXQgZmVlbGluZyBvZiBnb2luZyBicm9rZSBhbmQgcmVncmV0IG5ldmVyIGdldHMgZWFzaWVyLiBXaGVuIGkgZGVjaWRlIGkgZ29pbmcgdG8gZ2FtYmxlLCB0aGVyZSBwcmV0dHkgbXVjaCBubyBzdG9wcGluZyBtZS4gCkVuIGducmFsLCBsJ2VuZmFudCBnYXJkZSBzb24gbm9tIGQnb3JpZ2luZSBhdXF1ZWwgb24gYWNjb2xlIGxlIG5vbSBkZSBsJ2Fkb3B0YW50LCBvdSB1biBzZXVsIGRlcyBkZXV4IG5vbXMgZGVzIGRldXggcG91eCBhZG9wdGFudHMgKHNpIGRzYWNjb3JkLCBsZSBub20gZHUgbWFyaSBlc3QgZ2FyZCkuIApJIGFtIHRydWx5IGdsYWQgdGhhdCB5b3UgbWFkZSBhIGZ1bGwgcmVjb3ZlcnkuIApXZSBicmF2ZWQgYW5vdGhlciBmdmUgaG91ciBidXMgcmRlLiBXZSB3ZXJlIG9uIGFub3RoZXIgYnVzIGNvbXBhbnkgYW5kIHdoYXQgYSBkZmZlcmVuY2UhISEgSSBzd2Vhciwgb3VyIGx2ZXMgd291bGQgaGF2ZSBiZWVuIGNoYW5nZWQgYnkgdHJhdmVsbmcgMTcgaG91cnMgb24gdGhzIGJ1cyBjb21wYW55ISBXZSBoYWQgd2F0ZXJzIHd0aCBtYXRjaG5nIHRlcyBzZXJ2bmcgdXMgdGVhIGFuZCBjb2tlLiBUaGVyZSB3YXMgYSBsYXJnZSBza3lsZ2h0LiBUaGVyZSB3YXMgYSBtb3ZlLiBUaGUgYXIgd2FzIHRlbXBlcmF0ZS4gSXQgd2FzIGFtYXpuZyEKRm9yIGZvb3QgY29tZm9ydCBhbmQgc3VwcG9ydDogU29tZSBpbnNvbGVzIG9mZmVyIG9ubHkgYSB0aGluLCBnZW5lcmljYWxseSBzaGFwZWQgY3VzaGlvbiBvZiBzdXBwb3J0LCB3aGlsZSBvdGhlcnMgYXJlIGRlc2lnbmVkIHRvIGZpdCBhIHBhcnRpY3VsYXIgc2hvZSBzdHlsZSAoc3VjaCBhcyB3b21lbidzIGhpZ2ggaGVlbHMgb3IgbWVuJ3Mgd29yayBzaG9lcykgb3IgdG8gcHJvdmlkZSBleHRyYSBzdXBwb3J0IG9yIHBhZGRpbmcgaW4gc3BlY2lmaWMgYXJlYXMgICBmb3IgaW5zdGFuY2UsIHRob3NlIHdpdGggbW9yZSBjdXNoaW9uaW5nIGF0IHRoZSBoZWVsIHByb3ZpZGUgYmFjayBzdXBwb3J0IGFzIHdlbGwgYXMgZm9vdCByZWxpZWYuIEFzIHN0eWxlcyB2YXJ5LCB0aG91Z2gsIHNvIGRvZXMgcHJpY2UuIApTdGlsbCBoYXJkIGZvciBtZSB0byBzb21ldGltZXMgcHV0IG15IGZpbmdlciBvbiBleGFjdGx5IFdIWSBJIGF0dHJhY3RlZCB0byBzb21lb25lLCBldmVuIHRob3VnaCBub3csIEkgYW0gbXVjaCBtb3JlIHN1cmUgd2hlbiBpdCBpcyBvciBpc24gaGFwcGVuaW5nIGFuZCB3aG8gaXQgZGlyZWN0ZWQgYXQuIAozLiBIYW5kcyBhbmQgQXJtczogQXMgb25lIGFzdHV0ZSBwb2xpY2Ugb2ZmaWNlciBzYWlkICAgZmVldCBuZXZlciBraWxsZWQgYW55b25lLiAKSSBjb21lIGZyb20gQmFuZ29yLCBOb3J0aGVybiBJcmVsYW5kLCB0aG91Z2ggc3R1ZGllZCBhdCBLaW5nc3RvbiBVbml2ZXJzaXR5IGFuZCBzdGF5aW5nIGluIEVuZ2xhbmQgZm9yIGVpZ2h0IHllYXJzLiBJIHJldHVybmVkIGhvbWUgZm9yIGZpdmUgYmVmb3JlIGxvdmUgZHJhZ2dlZCBtZSB0byBTY290bGFuZCwgd2hlcmUgSSBsaXZlZCBmb3IgYSBkZWNhZGUsIGJlZm9yZSBhbm90aGVyIHNob3Qgc3RvcCBiYWNrIGhvbWUuIFlvdSBjYW4ga25vdyBmaW5kIG1lIHRvIHRoZSBub3J0aCBvZiBKb2huIE8nR3JvYXRzIGxpdmluZyBpbiB0aGUgT3JrbmV5IElzbGVzLi4gCldpdGggU2NobnVja2VsIEJlYSwgUmlja3kgVHphdHppY2t5LiAKMTIgTWF5IDIwMDggLiBEb3dubG9hZCB0aGUgbGF0ZXN0IHZlcnNpb25zIG9mIHRoZSBiZXN0IE1hYyBhcHBzIGF0IHNhZmUgYW5kIC4gVGhpcyBwYXRjaCB3aWxsIHVwZGF0ZSBhbnkgcHJldmlvdXMgdmVyc2lvbiBvZiBHdWl0YXIgSGVybyBJSUkgdG8gdmVyc2lvbiAxLjMuIApUd28gaW1hZ2VzIGFyZSBhYm91dCBsaWZlIHNpemUgZnJvbSB3aGVuIHRoZXkgYXBwZWFyZWQgaW4gSWxsdXN0cmlydGUgWmVpdHVuZyAoTGVpcHppZyksIG9uIDI5IEphbnVhcnkgMTg4MSB0aG91Z2ggdGhleSBubyBkb3VidCBhcHBlYXJlZCBhIGZldyBtb250aHMgZWFybGllciBpbiBIYXJwZXIgV2Vla2x5IG9yIFNjaWVudGlmaWMgQW1lcmljYW4gb3Igc29tZSBzdWNoLiAKVGFjb2xpa2Vzd2VlZCAgMSBwb2ludCAgc3VibWl0dGVkIDE2IGhvdXJzIGFnbwpXaGVuIEkga25pdHRlZCBpdCBpbiBzdG9ja2luZXR0ZSBzdGl0Y2gsIHRoZSB0b28gbG9va2VkIGxpa2Ugc3R1Y2sgb24gYW5kIGV2ZW4gd29yc2UgdGhlcmUgd2FzIGEgc2VhbSBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSB0b2UuIEkgdmVyeSBzZW5zaXRpdmUgYW5kIGdldCBibGVicyB0aGVyZSBlYXNpbHkuIApZb3UnbGwgYnJlYXRoIGZhc3RlciwgYW5kIHlvdXIgaGVhcnQgcmF0ZSB3aWxsIGJlIGhpZ2hlciwgZXZlbiB0aG91Z2ggeW91IGFyZW4ndCBydW5uaW5nLCBjeWNsaW5nIG9yIHN3aW1taW5nIGFzIGZhc3QgYXMgeW91J3JlIGFibGUgdG8gYXQgc2VhIGxldmVsLiBEZXRyYWN0b3JzIHNheSB0aGF0IHRyYWluaW5nIGF0IGxvd2VyIGludGVuc2l0eSB3aGlsZSBhY2NsaW1hdGluZyB0byBhbHRpdHVkZSBjYW5jZWxzIG91dCB0aGUgYmVuZWZpdHMgb2YgaW5jcmVhc2VkIHJlZCBibG9vZCBjZWxsIHByb2R1Y3Rpb24uIApCdXQgdGhpcyBvbmUganVzdGhhZCBtZS4gClRoZXJlIGdvaW5nIHRvIGJlIHNvbWUgdHJpYWwgYW5kIGVycm9yIGFuZCBsb29raW5nIGF0IHBhc3QgcGVyZm9ybWFuY2VzIGF0IHZhcmlvdXMgdmFsdWVzIHRvIHNlZSB3aGVyZSB5b3VyIGJlc3QgcmVzdWx0cyB0ZW5kIHRvIGNvbWUgZnJvbS4gSXQgYWxzbyBqdXN0IGEgc2luZ2xlIG51bWJlciwgYW5kIHlvdSBnb3QgbG90cyBvZiBvdGhlciBpbmZvcm1hdGlvbiBhdmFpbGFibGUgdG8gaGVscCBndWlkZSBpZiB5b3Ugc2hvdWxkIHRhcGVyIG9mZiBtb3JlIG9yIG5vdC4gClRoZSBmbG9wIGNvbnNpc3RzIG91dCBvZiAzIGNhcmRzIGZhY2UgdXAuIEFmdGVyIHRoZSByb3VuZCBvZiBiZXR0aW5nIHRoZSAidHVybiIgaXMgcHV0IG9uIHRoZSB0YWJsZS4gVGhlIHR1cm4gaXMgMSBmYWNlIHVwIGNhcmQgbmV4dCB0byB0aGUgZmxvcC4gClRoZSBjcmVhdG9ycyBiYXNpY2FsbHkgTXVsYW4gdGltZSBjcm9zc2RyZXNzZXIiIGhlci4gCkluIHRoZSBhYm92ZSBzY2VuYXJpbyBzcGVjaWZpY2FsbHksIEkgaGF2ZSBzZWNvbmQgcGFpciB3aXRoIGEgYmFja2Rvb3IgZmx1c2ggZHJhdyBhbmQgSSBmYWNpbmcgYSBoYWxmIHBvdCBiZXQuIE1ERiBmb3IgYSBoYWxmIHBvdCBiZXQgaXMgNjclLCBzbyBJIHNob3VsZCBiZSBkZWZlbmRpbmcgd2l0aCB0aGUgdG9wIDIvMyBvZiBteSByYW5nZS4gClBsZWFzZSBzZWUgb3VyIHBhcnRuZXJzIGZvciBtb3JlIGRldGFpbHMuWmVuV2UgYXJlIGEgbHV4dXJ5IFBodWtldCBwcml2YXRlIGJlYWNoIHJlc29ydC4gT3VyIHRyb3BpY2FsIG9hc2lzIGlzIHNpdHVhdGVkIG9uIG91ciBwcml2YXRlIE5ha2FsYXkgYmF5IHJpZ2h0IG5leHQgdG8gS2FtYWxhIGFuZCBQYXRvbmcuIFJlbGF4IGF0IG9uZSBvZiB0aGUgZmV3IHJlbWFpbmluZyB1bnNwb2lsZWQgcHJpdmF0ZSBiZWFjaGVzIGZvciBhIHVuaXF1ZSBwaHVrZXQgZXhwZXJpZW5jZS4gCiJUaGVzZSBmaW5hbmNpYWwgbG9zc2VzIGFyZSBhZmZlY3RpbmcgdGhlIGxpdmVzIG9mIGluZGl2aWR1YWxzIGFuZCBmYW1pbGllczsgdGhlIGdvdmVybm1lbnQgbXVzdCByZWNvZ25pc2UgdGhlIGRhbWFnZSBwb2tlciBtYWNoaW5lcyBhcmUgZG9pbmcgYW5kIGFkZHJlc3MgdGhpcyBkcmVhZGZ1bCBzaXR1YXRpb24uIiBCYWxsYXJhdCBDb21tdW5pdHkgSGVhbHRoJ3MgcmVzZWFyY2ggY29vcmRpbmF0b3IsRHIgRGViIEdyZWVuc2xhZGUgc2FpZCB0aGVyZSBoYWQgYmVlbiBhbG1vc3QkMi43IGJpbGxpb24gbG9zdCBhY3Jvc3MgVmljdG9yaWEuIApXZSB3b3VsZCBoYXZlIGxvdmVkIHRvIGhhdmUgb3BlcmF0ZWQgbGVnYWxseSBpbiB0aGUgVVMgYW5kIHBheSB0YXhlcy4gT3BlcmF0aW5nIGlsbGVnYWxseSBvZmYgc2hvcmUgd2FzIG5vdCBvdXIgZmlyc3QgY2hvaWNlLiAKSW5sYXkgZGVzaWduIGlzIHRoZSBtb3N0IGltcG9ydGFudCBjb21wb25lbnQgb2YgdGhlIG1hbnVmYWN0dXJpbmcgcHJvY2VzcyBhbmQgZWFjaCBjaGlwIGlzIGRlc2lnbmVkIGJ5IGEgdGVhbSBvZiBhcnRpc3RzLiBZb3UgbmVlZCB0byBlbnN1cmUgdGhhdCBldmVyeSBpbmxheSBkZXNpZ24gZW1wbG95cyBjdXR0aW5nIGVkZ2UgdGVjaG5pcXVlcyBhbmQgdGhhdCBlYWNoIGNoaXAgYXBwZWFycyBhcyBpZiBpdCBjb3VsZCBoYXZlIGNvbWUgZGlyZWN0IGZyb20gdGhlIGNhc2lubyBmbG9vci4gCkhlbGxvLCBJIGFtIGEgY3VycmVudGx5IGVtcGxveWVkIGFzIGEgZGVzaWduIGVuZ2luZWVyIHdvcmtpbmcgaW4gdGhlIGFlcm9zcGFjZSBzZWN0b3IgZm9yIHRoZSBwYXN0IDIgeWVhcnMsIGxvY2F0ZWQgaW4gbm9ydGhlcm4gQ2FsaWZvcm5pYS4gRHVlIHRvIG15IGZpYW5jZSBncmFkdWF0aW5nIGFuZCBzdGFydGluZyBoZXIgam9iIHNlYXJjaCBpbiB0aGUgV2FzaGluZ3RvbiBEQyBhcmVhLCBJIGFtIGFsc28gZGVlcCBpbnRvIG15IGpvYiBodW50IHRvIHJlbG9jYXRlIG91dCB0byB0aGUgZWFzdCBjb2FzdC4gSSBoYXZlIGhhZCBvbmUgc2VyaWVzIG9mIGludGVydmlldyBmb3IgYSBjb21wYW55IHRoYXQgZGlkIHNpbWlsYXIgd29yayB0byB3aGF0IEkgZG8gbm93IGFuZCBJIHRob3VnaHQgdGhlIHdob2xlIHByb2Nlc3Mgd2VudCB2ZXJ5IHdlbGwsIGJ1dCBJIGRpZCBnZXQgdGhlIGltcHJlc3Npb24gdGhhdCB0aGUgY29tcGFueSB3YXMgbGVlcnkgYWJvdXQgbWUgbmVlZGluZyB0byByZWxvY2F0ZSBhbmQgSSBiZWxpZXZlIHRoaXMgd2FzIHRoZSBtYWluIHJlYXNvbiBJIHdhcyBub3Qgc2VsZWN0ZWQgZm9yIHRoZSBqb2IuLiAKSSBtZWFudCBjdWx0dXJhbGx5LCB0aGV5IGhhdmUgYSBsb3QgdG8gb2ZmZXIuIFRoZXkgcHJlc2VydmVkIGEgbG90IG9mIGludGVyZXN0aW5nIGFydGlzdGljIHN0eWxlcywgbXVzaWMsIGFuZCBkYW5jZSB0aGF0IHRoZSByZXN0IG9mIHRoZSB3b3JsZCBsZWZ0IGJlaGluZCBzaXh0eSB5ZWFycyBhZ28uIEltYWdpbmUgdGhlIGxpdGVyYXR1cmUgdGhhdCB3aWxsIGNvbWUgb3V0IHdoZW4vaWYgdGhlIHBlb3BsZSBhcmUgZXZlciBmcmVlIHRvIGV4cHJlc3MgdGhlbXNlbHZlcy4gUGx1cyB0aGF0IHNpbGx5IG1vbnN0ZXIgbW92aWUgb2YgdGhlaXJzIGlzIGNyeWluZyBvdXQgZm9yIHNvbWUgbW9kZXJuIHNwZWNpYWwgZWZmZWN0IHNlcXVlbHMhClZvdXMgbidhdmV6IGF1Y3VuZSBjaGFuY2UgZCdhcnJpdmVyICBxdW9pcXVlIGNlIHNvaXQgZGUgcGVydGluZW50LkZhaXRlcyBkZSBsYSBwdWIgIGNlIGJsb2cgc3VyIGxlcyBmb3J1bXNDZSBibG9nIHJlb2l0IDI1IDAwMCB2aXNpdGVzIG1lbnN1ZWxsZXMgZW4gbW95ZW5uZS4gCkkgd291bGQgaGF2ZSBsaWtlZCB0byBrZWVwIGhpbSwgYnV0IGhlIHdhcyBiaXRjaGluZyBhYm91dCBzbmFwcyBiZWZvcmUgQmFybmV0dCB3YXMgaHVydCwgc28gdGhhdCB3YXMgcHJvYmFibHkgZ29pbmcgdG8gaGFwcGVuIGFnYWluIHdpdGggYSBoZWFsdGh5IEJhcm5ldHQgYW5kIG5ld2x5IHJlc2lnbmVkIEdyYWhhbSBhbmQgaGUgaXMgYWxyZWFkeSB3aGluaW5nIGFib3V0IG1vbmV5IHdoZW4gaGlzIGNhcCBudW1iZXIgaXMgcHJvYmFibHkgYWJvdXQgd2hlcmUgaXQgc2hvdWxkIGJlIGZvciBwcm9kdWN0aW9uLiAKS293YWlkZXN1ICAzMCwxNDkgcG9pbnRzICBzdWJtaXR0ZWQgMjYgZGF5cyBhZ28KQ2VsaWFjIERpc2Vhc2UgaXMgdGhlb25seSBhdXRvaW1tdW5lIGRpc2Vhc2UgdGhhdCBoYXMgYSBjbGVhciB0cmlnZ2VyKGdsdXRlbikuIFRoZXJlZm9yZSwgc2NpZW50aXN0cyBtYXkgYmUgYWJsZSB0byBsZWFybiBob3cgdG8gYmV0dGVyIG1hbmFnZSBvdGhlciBhdXRvaW1tdW5lIGRpc2Vhc2VzLCBsaWtlIGRpYWJldGVzLCBtdWx0aXBsZSBzY2xlcm9zaXMsIGFuZCByaGV1bWF0b2lkIGFydGhyaXRpcyB0aHJvdWdoIHJlc2VhcmNoIG9uIGNlbGlhYyBkaXNlYXNlLgpEZXRlcm1pbmUgdGhlIHR5cGUgb2YgbWFzc2FnZSB0aGVyYXB5IHlvdSdkIGxpa2UuIFRoZXJlIGFyZSBkaWZmZXJlbnQgdHlwZXMgb2YgbWFzc2FnZSB0aGVyYXB5LCBhbmQgdGhlIG1vc3QgcG9wdWxhciBvbmVzIGluY2x1ZGUgdGhlIGZvbGxvd2luZzogU3dlZGlzaCBtYXNzYWdlLCB3aGljaCBtYWtlcyB1c2Ugb2YgbG9uZyBzdHJva2VzIGFuZCBmcmljdGlvbiBvbiB0aGUgbXVzY2xlcyBvZiB0aGUgYm9keTsgU2hpYXRzdSBtYXNzYWdlLCB3aGljaCBtYWtlcyB1c2Ugb2Ygcmh5dGhtaWMgcHJlc3N1cmUgZnJvbSB0aGUgZmluZ2VycyB0byBkaWZmZXJlbnQgYm9keSBwYXJ0cyB0byBwcm9tb3RlIHRoZSBmbG93IG9mIGNoaTsgZGVlcCB0aXNzdWUgbWFzc2FnZSwgd2hpY2ggYXBwbGllcyBwcmVzc3VyZSBvbiBkZWVwIGxheWVycyBvZiBtdXNjbGVzOyBhbmQgcHJlc3N1cmUgcG9pbnQgbWFzc2FnZSwgd2hpY2ggZm9jdXNlcyBvbiBlYXNpbmcgdGhlIHN0cmVzcyAia25vdHMiIG9uIHRoZSBib2R5LiBPbmNlIHlvdSd2ZSBkZXRlcm1pbmVkIHRoZSB0eXBlIG9mIG1hc3NhZ2UgdGhhdCB5b3UgbGlrZSwgZmluZCBhIG1hc3NhZ2UgdGhlcmFweSB3aG8gc3BlY2lhbGl6ZXMgb24gdGhpcy4uIApXZWl0ZXIgc2NocmVpYnQgZGllIEZBWiwgZGFzcyBTaWUgYXVjaCB3ZWl0ZXJoaW4ga29udHJvdmVyc2UgTWVpbnVuZ2VuIHZlcmZmZW50bGljaGVuIHdvbGxlbiwgYXVjaCB3ZW5uIGRpZXNlIGRhenUgZmhyZW4sIGRhc3MgTGV1dGUgc2ljaCBhbmdlZ3JpZmZlbiBmaGxlbi4gRGFzIFppZWwgaXN0IGFsc28gZXJrbHJ0ZXJtYXNzZW4gbmljaHQsIExldXRlIGFuenVncmVpZmVuLCBzb25kZXJuIGRhcyBSZWNodCBhdWYgTWVpbnVuZ3NmcmVpaGVpdCBzb3dlaXQgd2llIG1nbGljaCB3YWhyenVuZWhtZW4gYnp3LiBkdXJjaHp1c2V0emVuLiBJbiBrZWluZW0gTGFuZCBkZXIgV2VsdCBnaWx0IGRpZXNlcyBSZWNodCBhbGxlcmRpbmdzIGFic29sdXQgdW5kIHdpcmQgZHVyY2ggZGl2ZXJzZSBhbmRlcmUgUmVjaHRlL0dlc2V0emUgZWluZ2VzY2hybmt0LCBpbiBEIGluc2Jlc29uZGVyZSBhdWNoIGR1cmNoIEFudGkgRGlza3JpbWluaWVydW5ncyAgb2RlciBhdWNoIEFudGkgUmFzc2lzbXVzbm9ybWVuLiBJbSB2b3JsaWVnZW5kZW4gRmFsbGUgaXN0IGRpZSBGQVogZGVyIE1laW51bmcsIGRlciBCZWl0cmFnIHZlcmxldHplIGRpZXNlIE5vcm1lbiBuaWNodCBiencuIGluIGRpZXNlbSBGYWxsZSBzZWkgZGllIE1laW51bmdzZnJlaWhlaXQgaGhlciB6dSBnZXdpY2h0ZW4gYWxzIGRpZSBBbnRpIERpc2tyaW1pbmllcnVuZ3Nub3JtZW4uClRoZXkgcGxheSBmcmVlIHBva2VyIGZvciBmdW4gd2l0aCBwbGF5IG1vbmV5IGNoaXBzIGFuZCBoYXZlIG5vdGhpbmcgYnV0IGZhbWUgdG8gZ2Fpbi4gQnV0IHRoZXJlIGFyZSBhbHNvIGZyZWUgcG9rZXIgdG91cm5hbWVudHMgYW5kIGZyZWUgb25saW5lIHBva2VyIGdhbWVzIHdpdGggcmVhbCBtb25leSBwcml6ZXMuIEFsbW9zdCBldmVyeSBwb2tlciByb29tcyBpcyBvZmZlcmluZyBwb2tlciBmcmVlcm9sbHMuIApUaGlzIHdhcyBzdHJvbmdlciBpbiBFc3RvbmlhLCB3aGljaCB3YXMgaW5kZXBlbmRlbnQgZnJvbSAxOTE4IHRvIDE5NDAsIHRoYW4gaW4gTW9sZG92YSwgd2hpY2ggd2FzIHJ1bGVkIGJ5IFJvbWFuaWEgb3IgUnVzc2lhIGZvciBjZW50dXJpZXMuIFRvIGp1ZGdlIGJ5IEVLUkUsIHRob3VnaCwgdGhhdCBuYXRpb25hbGlzbSBtYXkgbm90IGJlIGVudGlyZWx5IGJlbmlnbi4uIApUaW55IHBpbXBsZXMgY29tZSBnbywgYnV0IEkndmUgbmV2ZXIgaGFkIGFub3RoZXIgaHVnZSBmbGFyZSB1cCAgQ29tcGxldGVseSBmb3Jnb3QgaXQgd2FzIGFsbCB0aGFua3MgdG8gQkIhIHNraW4gdGV4dHVyZSBvbiBmb3JlaGVhZCBzdGlsbCBzdWNrcyBhc3MgdGhvIGJjIGl0IGNhbiBvbmx5IHJlY292ZXIgc28gbXVjaC4gCkZhdGhlciwgcGxlYXNlIHBsZWFzZSBiZSBzYWZlIGlmIHlvdSBjYW4gZm9yIHRoZSBuZXh0IGZldyBob3Vycy4gClRoZSAkMS8zIGdhbWVzIHVzdWFsbHkgcGxheSBsaWtlIGEgJDIvNSBnYW1lIGFuZCBsaWtlIGEgJDUvMTArIG9uIHNvbWUgb2NjYXNpb25zLiAKVGhpcyBjb2xsZWN0aW9uIG9mIGFydGljbGVzIGluY2x1ZGVzIHR3ZWx2ZSBjb3VudHJ5IGNhc2Ugc3R1ZGllcywgZWFjaCBhbiBldmFsdWF0aW9uIG9mIG11bHRpc2VjdG9yYWwgY29sbGFib3JhdGlvbiBpbiBhY3Rpb24gYXQgc2NhbGUgb24gbWF0ZXJuYWwsIG5lb25hdGFsLCBhbmQgY2hpbGQgaGVhbHRoLCBjb2xsZWN0aXZlbHkgaW5mb3JtaW5nIGFuZCBkcmF3aW5nIHRvZ2V0aGVyIGxlc3NvbnMgbGVhcm5lZCBpbiBhY2hpZXZpbmcgZWZmZWN0aXZlIG11bHRpc2VjdG9yYWwgY29sbGFib3JhdGlvbi4uIApNZW4gdGVuZCB0byBoYXZlIHNob3VsZGVyIHRvIHNob3VsZGVyIHdoZXJlIHRoZXkgYm9uZCBieSBkb2luZyBhbmQgZW5qb3lpbmcgdGhlIHNhbWUgdGhpbmdzLkFuZCB0aGF0J3Mgb2theSEgV2UgZ2V0IHRoZSBpbXByZXNzaW9uIHNvbWV0aW1lcyB0aGF0IGZhY2UgcmVsYXRpb25zaGlwcyBhcmUgdGhlIG9ubHkgcmVhbCBmcmllbmRzLiAKSXQgYSBtdWx0aXdheSBwb3QgYW5kIEkgZW5kIHVwIGNhbGxpbmcgYSAkMTAgb3IgJDE1IGJldCBuZWFyIG9yIG9uIHRoZSBidXR0b24gd2l0aCBRN3MgYW5kIHNldmVyYWwgcGxheWVycyBpbiB0aGUgcG90ICAgbGlrZSA2IG9yIDcuIFRoZSBmbG9wIGNvbWVzIFFRMiByYWluYm93LiBPbmUgb2xkZXIgZ3V5IHdobyBpcyBub3RvcmlvdXNseSBsb29zZSBhbmQgaGFzIGJlZW4gaGl0dGluZyBldmVyeXRoaW5nIGFuZCBoYWQgYmVhdCBtZSBpbiBhIGZldyBwb3RzIGJldHMgYmlnIGFuZCBJIHJhaXNlIGFuZCBoZSBwYXVzZXMgYW5kIG1ha2VzIHRoZSBjYWxsLiBJdCBqdXN0IHVzIG5vdy4gTXkgcmVhZCBpcyB0aGF0IGhlIGhhcyBhIGJpZyBoYW5kICAgZWl0aGVyIGEgcXVlZW4gb3IgbWF5YmUgaGUgd2FzIHNsb3cgcGxheWluZyBLSyBvciBBQS4gVGhlIHR1cm4gaXMgYSA3LiBJIGdvdCB0aGUgaW5kaXNwdXRhYmxlIG51dHMuIEkgaGFkIGp1c3QgcmVsb2FkZWQgdG8gMTUwIG9yIDIwMCBiaWcgYmxpbmRzIHdpdGggc2V2ZXJhbCBncmVlbiBjaGlwcyBhZnRlciBsb3NpbmcgYSBkZWNlbnQgcG90IGh1cnQgbXkgc3RhY2sgYmVsb3cgMTAwIGJpZyBibGluZHMuIFNvLCBJIGluIGEgcG9zaXRpb24gdG8gZ2V0IGEgbmljZSBkb3VibGUgdXAgYW5kIGJlIGNsb3NlIHRvIGJyZWFrZXZlbiBvciBldmVuIHVwIGEgaHVuZHJlZCBvciB0d28gcG9zc2libHkuCllvdSB3aWxsIHdhbnQgdG8gd2F0Y2ggZm9yIGNyYWNraW5nLCBzcGxpdHRpbmcsIGFuZCBldmVuIGluZGVudGlvbnMuIApQdW50ZXJzIGluIHRoZSBDaXR5IG9mIEJyaW1iYW5rLCBpbiBNZWxib3VybmUncyBub3J0aCB3ZXN0LCB3ZXJlIHRoZSBiaWdnZXN0IGxvc2VycywgZ2FtYmxpbmcgYXdheSAkMTM5LjUgbWlsbGlvbi4KWW91IGRvbiBoYXZlIHRvIHRpcCwgYW5kIGl0IGRvZXNuIHNjcmV3IHlvdXIgc2VydmVyIG91dCBvZiBtaW5pbXVtIHdhZ2UgcGF5LkRvbiBiZWxpZXZlIG1lPyBGcm9tIHRoZSBkZXBhcnRtZW50IG9mIGxhYm9yLCB3aGVyZSBhbiBlbXBsb3llZSBkb2VzIG5vdCByZWNlaXZlIHN1ZmZpY2llbnQgdGlwcyB0byBtYWtlIHVwIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gdGhlIGRpcmVjdCAob3IgY2FzaCkgd2FnZSBwYXltZW50ICh3aGljaCBtdXN0IGJlIGF0IGxlYXN0ICQyLjEzIHBlciBob3VyKSBhbmQgdGhlIG1pbmltdW0gd2FnZSwgdGhlIGVtcGxveWVyIG11c3QgbWFrZSB1cCB0aGUgZGlmZmVyZW5jZS5JbmI0ICJ0aGV5IHdvcmsgdG9vIGhhcmQgZm9yIG1pbmltdW0gd2FnZSEhIlJpY28xMDkgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxMSBtb250aHMgYWdvSSBzaG93ZWQgeW91IHRvbnMgYW5kIHRvbnMgb2YgcGVvcGxlIHdpdGggb3ZlciA4MCUgd2luIHJhdGUuIApUaGUgZmluZGluZ3Mgc3VnZ2VzdCB0aGF0IHNvbWUgaHVtYW4gcHN5Y2hvbG9naWNhbCBjb25kaXRpb25zIG1heSBiZSB0aGUgcmVzdWx0LCByYXRoZXIgdGhhbiB0aGUgY2F1c2UsIG9mIGdhc3Ryb2ludGVzdGluYWwgZGlzb3JkZXJzIHN1Y2ggYXMgaXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLgpUb3V0IGNlIHF1aSBlc3QgdmlkbyBtZSBzYW91bGUuIApJIGFsd2F5cyBjb21lIG91dCBmZWVsaW5nIG1hcnZlbGxvdXNseSByZWp1dmVuYXRlZC4gSXQncyBuaWNlbHkgZGVjb3JhdGVkIGluIHRoZSB0cmFkaXRpb25hbCBHZW9yZ2lhbiBzdHlsZSBhbmQgaXMgcnVuIGJ5IGFuIGV4cGF0IEJyaXQgICB2ZXJ5IHdlbGNvbWluZyBhbmQgaG9zcGl0YWJsZS4gCkJ1dCBkaWQgaGUgZXZlciByZWFsbHkgcHV0IGluIHRoZSB3b3JrIHJlcXVpcmVkIHRvIGJlY29tZSBhIGdvb2QgY29hY2g/IERpZCBoZSBlYXJuIGl0Py4gCk1ha2UgdGhlIG1vc3Qgb2YgeW91ciBob21lIFRyYWNrIHlvdXIgaG9tZSBhbmQgYWNjZXNzIGluc2lnaHRzIGFuZCB0b29scyB0byBoZWxwIHlvdSB1bmRlcnN0YW5kIHRoZSBtYXJrZXQuCkthd2FqYTogRCB0byBjIHN0YXJ0dXBzIGFyZSBkaXNpbnRlcm1lZGlhdGluZyB0cmFkaXRpb25hbCByZXRhaWxlcnMsIHdpdGggc29tZSBvZiB0aGUgbW9yZSBzdWNjZXNzZnVsIG9uZXMsIGxpa2UgVW50dWNrSXQsIGRldmVsb3BpbmcgdGhlaXIgb3duIGJyaWNrIGFuZCBtb3J0YXIgc3RvcmVzLiBDYW4gdHJhZGl0aW9uYWwgbWFya2V0ZXJzIGRvIHRoYXQ/ICJObywgeW91ciBkaXN0cmlidXRpb24gbW9kZWwgaXMgc2V0LCIgaGUgc2F5cy4KTXkgZGF1Z2h0ZXIgcmVhbGx5IGh1cnQgbXkgZmVlbGluZ3Mgb25lIGRheS4gSSBzdG9wcGVkIHdoYXQgSSB3YXMgZG9pbmcsIGFuZCB0b2xkIGhlciB0aGF0IEkgbmVlZGVkIGEgdGltZSBvdXQuIApUaGFuayB5b3UgZm9yIGNob29zaW5nIG91ciBiZWFjaCBob3VzZSBhcyB5b3VyICJob21lIGF3YXkgZnJvbSBob21lIiwgYW5kIHdlIGxvb2sgZm9yd2FyZCB0byBoYXZpbmcgeW91IHJldHVybiBhZ2FpbiBzb29uLiAKSXQgcmVmZXJzIHRvIGEgc2V0IG9mIGZpdmUgY2FyZHMgd2hlcmUgdGhyZWUgYXJlIG9mIHRoZSBzYW1lIGRlbm9taW5hdGlvbiBhbmQgdGhlIHR3byBleGNlc3MgYXJlIHVucGFpcmVkLiBMaWtlIHRoZSBGb3VyIG9mIGEga2luZCwgdGhlIGtpY2tlcnMgYXJlIHV0aWxpemVkIHRvIGRldGVybWluZSB3aGljaCBvZiB0aGUgcGxheWVkIHNldHMgZG9taW5hdGUuLiAKQW5kIG5vdCBqdXN0IGFueSBib3JkZXIsIGJ1dCBhIHBoeXNpY2FsIGJhcnJpZXIgb24gb25lIGJvcmRlci4gCkJ1dCBleGNlcHQgZm9yIGEgZmV3IGxvbmUgdm9pY2VzLCBmZXcgRGVtb2NyYXRpYyBsZWFkZXJzIGFyZSBldmVuIHRhbGtpbmcgYWJvdXQgYSBuYXRpb25hbCBoZWFsdGggY2FyZSBzeXN0ZW0uIEJlcm5pZSBTYW5kZXJzIChJIFZUKSB0cmllZCB0byBpbnRyb2R1Y2UgYW4gYW1lbmRtZW50IGZvciBTaW5nbGUgUGF5ZXIgSGVhbHRoIEluc3VyYW5jZSBvbiB0aGUgSG91c2UgZmxvb3IgYW5kIHdhcyBzdG9wcGVkLiBJbnN0ZWFkLCBoZSBnYXZlIGEgcmVtYXJrYWJsZSBzcGVlY2ggYWJvdXQgd2h5IHdlIG5lZWQgaXQuLiAKVGhlIGdhbWUgZ29lcyBvbiBmb3IgMiBoYWx2ZXMgb2YgNDUgbWludXRlcyBlYWNoLCBwbHVzLCB0aGVyZSB0aGUgYmFsbCBpbiBoaXMgZW5kIHpvbmUsIHRoZSBkZWZlbmRpbmcgdGVhbSBzY29yZXMgMiBwb2ludHMuIEZ1bGxiYWNrOiBBIGZ1bGxiYWNrIHN0YW5kcyBiZWhpbmQgdGhlIG1pZGRsZSBpbiB0aGUgcmVzaWRlbmNlcyB3b3VsZCBsYXRlciBjYXVzZSBTdCBKYW1lcz8gUGFyayBzb21lIG1ham9yIHBsYW5uaW5nIGRpZmZpY3VsdGllcy4gCk1ldGFsIEdlYXIgU29saWQgMjogU3Vic3RhbmNlLiBUaXRsZSBzY3JlZW4uIFZpZXcgLyBTdWJtaXQgU2NyZWVuc2hvdC4gT2ZmaWNpYWwgMi4wIHZlcnNpb24gKGZvciBBVEkgY2FyZHMpIHdpdGggdW5vZmZpY2lhbCBOb0RWRCBwYXRjaCBhbmQgdW5vZmZpY2lhbCBHZUZvcmNlLi4gCkVzY29ydCBDYWxsIEdpcmxzIGluIEJ1c2FuICBMb2NhbCBFc2NvcnQgR2lybHMgV2ViCkRhdGEgc2NpZW5jZSBpcyBub3QgaW4gcmlnaHQgbm93LiBUaGlzIGlzIHNvbWV0aGluZyB0aGF0IGhhcyBleGlzdGVkIGZvciAzMCB5ZWFycyBub3cuIERhdGEgc2NpZW5jZSBpcyBiZWNvbWluZyBhIG5lY2Vzc2l0eSBmb3IgbWFueSBhZ2VuY2llcyBpbiB0aGUgZ292ZXJubWVudC4gClJlcGxhY2luZyBsaWdodCBjb2xvZ25lcyB0aGF0IHdlcmUgbGliZXJhbGx5IHNwbGFzaGVkIG9uLCBqdXN0IGEgZmV3IHNtYWxsIGRyb3BzIG9mIHBlcmZ1bWUgY29tcGxldGVseSBzY2VudGVkIGFuIGluZGl2aWR1YWwuIFN0aWxsIG90aGVyIG5ld2x5IGludmVudGVkIGNoZW1pY2FsIGFkZGl0aXZlcyBtYWRlIHRoYXQgc2NlbnQgbGluZ2VyIGZvciBob3Vycy4gCkEgZmVtYWxlIHBvbGljZSBvZmZpY2VyIHJlc3BvbmRpbmcgdG8gdGhlIHNjZW5lIHNsaXBwZWQgYW5kIGZlbGwsIHN1c3RhaW5pbmcgYSBzZXJpb3VzIGhlYWQgaW5qdXJ5LCBpbiB0aGUgY291cnNlIG9mIHJlbW92aW5nIG9uZSBvZiB0aGUgb2ZmaWNlcnMgZnJvbSB0aGUgdHJlZS4KSWYgdGhleSB3YW50IHRvIGdldCBsdWNreSwgdGhleSBjYW4gaGl0IHRoZSBwaXRzIG9yIHNsb3RzLi4gCk9rIGJ1dCBsZXQgYmUgcmVhbCwgdGhleSB3ZXJlIG5vdCBpbXBseWluZyBCcmF6aWwgaXNuIGluIFNvdXRoIEFtZXJpY2EuIGhlcmUgaXMgYmFzaWNhbGx5IHNheWluZyB0aGUgVW5pdGVkIFN0YXRlcyBub3QgZnJvbSB0aGUgY29udGluZW50LiBZZXMsIEFtZXJpY2FuIGNhbiBiZSB1c2VkIHRvIHRhbGsgYWJvdXQgdGhlIGNvbnRpbmVudCwgYnV0IHdlIGtub3cgdGhleSB3ZXJlbiBzYXlpbmcgdGhhdCwgYW5kIGhvbmVzdGx5LCB3aGVuIGRvZXMgYW55b25lPyBXb3JkcyBhcmUgYWxsb3dlZCB0byBoYXZlIG11bHRpcGxlLCBub24gbGl0ZXJhbCBkZWZpbml0aW9ucywgYW5kIGluIGZhY3Qgb2Z0ZW4gZG8sIHRoZXJlIG5vIG1vdGl2ZSBiZWhpbmQgaXQsIGl0cyBqdXN0IGhvdyBsYW5ndWFnZXMgZXZvbHZlLiBJIGxvdmUgeW91LgpHZXQgZXZlbiBtb3JlIG1vZHMuIApIb3dldmVyLCBpdCBpcyBub3QgYXMgd2VsbCBhcHByZWNpYXRlZCB0aGF0IGV4ZXJjaXNlIGFuZCBhIGhlYWx0aHkgZGlldCBhbHNvIHByb3ZpZGUgc3Vic3RhbnRpYWwgYmVuZWZpdHMgZm9yIGJyYWluIGZ1bmN0aW9uLiAKV2hlbiB5b3UgY2FuIHNlZSB0aGUgb3RoZXIgd2FsbHMgYmVjYXVzZSBpdCBzbyB0aGljaywgeW91IGtub3cgeW91IGluIGZvciBhIGJhZCBkYXkuIApUYWxrIHRvIGEgQnVzaCBzdXBwb3J0ZXIsIGFuZCB5b3UgaGVhciBnaWRkeSB0aGluZ3MuIFRhbGsgdG8gYSBCdXNoIHNrZXB0aWMsIGFuZCB5b3UgaGVhciB0aGUgZW5kIG9mIGh1bWFuIGxpZmUgYXMgd2Uga25vdyBpdC4gSW4gV2FzaGluZ3RvbiBsYXN0IHdlZWssIGFsbW9zdCBhbGwgdGhlIHNjZW5hcmlvcyB3ZXJlIGV4dHJlbWUuICJJZiB5b3UgdGVhciB1cCBhbGwgdGhlIHJ1bGVzIGFuZCB0b3NzIHRoZW0gaW4gdGhlIGFpciwiIHNhaWQgQXNodG9uIENhcnRlciwgYSBEZWZlbnNlIG9mZmljaWFsIGluIHRoZSBDbGludG9uIEFkbWluaXN0cmF0aW9uLCBub3cgYWdvbml6aW5nIGF0IEhhcnZhcmQncyBLZW5uZWR5IFNjaG9vbCBvZiBHb3Zlcm5tZW50LCAidGhlIHJlc3VsdHMgY2FuIGJlIHJlYWxseSBnb29kIG9yIHJlYWxseSBiYWQgYnV0IHRoZXkncmUgZGVmaW5pdGVseSBnb2luZyB0byBiZSByZWFsbHkgZGlmZmVyZW50LiIKT3ZlciAyNSBzdGF0ZXMgdG9vayBpbiBtb3JlIGZyb20gdGhlaXIgbG90dGVyeSBwcm9jZWVkcyB0aGFuIGZyb20gY29ycG9yYXRlIGluY29tZSB0YXguIApJIGhhdmUgaGFkIGl0IHN1ZGRlbmx5IGJsYXJlICJBdXRvcGlsb3QgZGlzZW5nYWdlZC4gVGFrZSBvdmVyIGltbWVkaWF0ZWx5ISIgZm9yIG5vIHJlYXNvbiBJIGNvdWxkIHNlZS4uIApZb3UgbG9vayBmb3IgdGhlIGd1biBidXQgaXQncyBkYXJrIHNvIGl0J3MgaGFyZCB0byBzZWUuIFlvdSBmbGlwIG9uIHRoZSBoYWxsd2F5IGxpZ2h0LiAKU3VmZmljZSB0byBzYXkgdGhhdCAiZGFkYSIgZWl0aGVyIHdhcyBvciB3YXNuIGZvdW5kIGJ5IGFuIGFjY2lkZW50YWwgZ3JhemluZyB0aHJvdWdoIExhcm91c3NlIGJ5IFRyaXN0YW4gVHphcmEgaW4gRmVicnVhcnkgMTkxNi4gQXQgbGVhc3QgSGFucyBBcnAgdGVsbHMgdGhpcyBhcyB0aGUgdHJ1ZSBzdG9yeSwgc2F5aW5nIHRvbyB0aGF0IGhlIHdhcyB0aGVyZSwgYWxvbmcgd2l0aCBoaXMgMTIgY2hpbGRyZW4gYW5kIGEgYnJpb2NoZSBpbiBoaXMgbGVmdCBub3N0cmlsLiAKSSBmb2xkLiAKSW5zaWRlIHRoZSBZZWFyIFRoYXQgUG9wIFdlbnQgQ291bnRyeSBNaXhlZCBSZXN1bHRzCkFudGhyb3BvbG9naWUgaXMgYWN0dWFsbHkgcHJvYmFibHkgYSByZWFsbHkgZ29vZCBzdG9yZSBmb3IgeW91IHRvIHN0YXJ0IHdpdGguIFRoaXMgdHVuaWMgYW5kIHRoaXMgYmxvdXNlIHdvdWxkIHdvcmsuIE9sZCBOYXZ5IGhhcyBsaW5lbiBwYW50cyB0aGF0IGFsc28gZml0IHRoZSBzdHlsZS4KUmVpbGx5IGFsc28gbWFrZXMgaGlzIG9mZiBzZWFzb24gaG9tZSBpbiBTZWF0dGxlLCBXYXNoLiwgYSB0aHJlZSBob3VyIGRyaXZlIGZyb20gVmFuY291dmVyLgpUaGUgc3RydWN0dXJlIG9mIHRoZSBnYW1lIGNhbiBiZSBkaXZpZGVkIGludG8gdGhyZWUgc3RhZ2VzOgpJIGRvbiB0aGluayBJIGdvdCBhIGZlYXIgY2FyZCB1bnRpbCBhdCBsZWFzdCB0aGUgdGhpcmQgb3IgZm91cnRoIHJvdW5kLiAKVGhleSB0b29rIHJvb21tYXRlcyBhbGFybSBjbG9jayBhbmQgdW5vcGVuZWQgcGFjayBvZiBjaWdhcmV0dGVzICh3aGljaCBoYWQgYmVlbiBiaXJ0aGRheSBnaWZ0cyBmcm9tIG1lIHRoYXQgc2FtZSB3ZWVrKS4uIApJIGJvb2tlZCBoaW0gZm9yIERhIE5hbmcgYW5kIEhvaSBBbiBhbmQgaGUgd2FzIFRIRSBCRVNULiBJIGxhdGVyIGhhZCB0aHJlZSBkaWZmZXJlbnQgZnJpZW5kcyBib29rIGhpbSBhZnRlciBJIHJlY29tbWVuZGVkIGhpbS4gCkNSOiBMZXQgbWUgc2F5IHRoYXQgdGhlIFJvbGZlcnMgZGlkIGhhdmUgYSBkaWZmZXJlbnQgcGVyc3BlY3RpdmUgb24gZmFzY2lhIGJ5IHRyeWluZyB0byBkZXRlcm1pbmUgaXRzIGZ1bmN0aW9uYWwgcm9sZS4gTXkgaW50ZXJlc3QsIGFuZCB0aGF0IG9mIG15IGNvbGxlYWd1ZXMsIGRldmVsb3BlZCBpbiB0aGUgbGF0ZSAnOTBzIHdpdGggdGhlIGludHJvZHVjdGlvbiBvZiBBY3RpdmUgUmVsZWFzZSB0ZWNobmlxdWVzIGFuZCB0aGUgd29ya3Mgb2YgRHIuIEd1eSBWb3llci4KQ291bmNpbCBqdWRnZXMgdGhhdCB0aGUgb3V0bG9vayBjb250aW51ZXMgdG8gd2FycmFudCBhIHBvbGljeSBpbnRlcmVzdCByYXRlIHRoYXQgaXMgYmVsb3cgdGhlIG5ldXRyYWwgcmFuZ2UsIHdoaWNoIGlzIDIuNSBwZXIgY2VudCB0byAzLjUgcGVyIGNlbnQsIHRoZSBzdGF0ZW1lbnQgc2FpZC4KKFNvZGEsIGluIG1heC4gClN0cmFpZ2h0IEZsdXNoICAgNSBjYXJkcyBpbiBzdWNjZXNzaW9uIGluIGEgc2luZ2xlIHN1aXQgKGZvciBpbnN0YW5jZSA1LDYsNyw4LDkgb2YgaGVhcnRzKQpJZiBQR1Igd2FzIGEgdGhpcmQgcGFydHksIGl0IHByb2JhYmx5IHN0YW5kIGRlY2VudGx5LCBhbmQgaXQgd291bGRudCBqdXN0IGRpZSBpbW1lZGlhdGVseSBhZ2FpbnN0IHRoZSAzIFRpdGFucyBHVFNwb3J0LCBORlMsIGFuZCBIb3Jpem9uLCBidXQuIApTb21lIGluZGl2aWR1YWxzIGNoZWNrIHRoZWlyIGxldmVscyBkYWlseSB3aXRoIGEgZ2x1Y29zZSBtZXRlci4gVGhpcyBtZXRlciBpcyBhbHNvIHVzZWQgdG8gZGV0ZXJtaW5lIGlmIGEgcGVyc29uIHdpdGggZGlhYmV0ZXMgaGFzIGh5cG9nbHljZW1pYSBvciBsb3cgYmxvb2Qgc3VnYXIsIHdoaWNoIG5lZWRzIGltbWVkaWF0ZSBhdHRlbnRpb24uIEh5cG9nbHljZW1pYSBjYW4gb2NjdXIgaW4gYWxsIHR5cGVzIG9mIERNIGJ1dCBpcyBtb3JlIGNvbW1vbiBpbiB0eXBlIDEuIApMYXJ5bmdpdGlzIGlzIGEgdmlyYWwgaW5mZWN0aW9uIHRoYXQgYWZmZWN0cyB0aGUgbGFyeW54IGFuZCB0aGUgdXNlIG9mIHRoZSB2b2NhbCBjaG9yZHMuIEF1dGlzbSBTcGVjdHJ1bSBEaXNvcmRlciBpcyBhIGRpc29yZGVyIHRoYXQgYWZmZWN0cyB2YXJpb3VzIGFyZWFzIG9mIGEgcGVyc29uJ3MgbGlmZSBzdWNoIGFzIHRoZWlyIGNvbW11bmljYXRpb24gc2tpbGxzLCB0aGVpciBwcm9jZXNzaW5nIG9mIGluZm9ybWF0aW9uLCBkZXZlbG9wbWVudCBvZiBoeXBlcnNlbnNpdGl2ZSBpc3N1ZXMgYW5kIHNvIG11Y2ggbW9yZS4gCk5leHQsIGEgdGhlcmFwZXV0aWMgbmVjayBhbmQgc2hvdWxkZXIgdHJlYXRtZW50IHJlbGVhc2VzIHVwcGVyIGJvZHkgdGVuc2lvbiwgd2hpbGUgdGhlIHdhcm1pbmcsIHZvbGNhbmljIHN0b25lIG1hc3NhZ2UgZGVlcGx5IHJlbGF4ZXMgdGhlIG11c2NsZXMuIApCb3VsZGVyIGJ1c2luZXNzIGNhbiBtYWtlIHRoYXQgaGFwcGVuCkp1c3QgaW5mb3JtYXRpb24gYmVpbmcgcHJvY2Vzc2VkIGJ5IGEgY29tcHV0ZXIgKG5vdCB2ZXJ5IHVubGlrZSB0aGUgb25lIHlvdSBzaXR0aW5nIGF0KSBhdCBlYWNoIGFuZCBldmVyeSBpbnN0YW5jZS4gCk15IHF1ZXN0aW9uIGlzLCBzcGVha2luZyBvbmx5IEVuZ2xpc2gsIHdpbGwgSSBoYXZlIGRpZmZpY3VsdHkgZmluZGluZyBteSB3YXkgdG8gc29tZSBmdW4gaW4gdGhlIHJlZCBsaWdodCBkaXN0cmljdD8gQWxzbywgYW55IHBvaW50ZXJzIG9uIHdoYXQgdG8gbG9vayBvdXQgZm9yIChob3cgbXVjaCB0byBleHBlY3QgdG8gcGF5LCBwb3RlbnRpYWwgcmVkIGZsYWdzIGV0Yy4pIHdvdWxkIGFsbCBiZSBhcHByZWNpYXRlZC4gVGhhbmtzIGluIGFkdmFuY2UhLiAKTWljcm9zb2Z0IFdvcmQsIHRoZSB3b3JkIHByb2Nlc3NvciBudW1iZXIgMSBpbiB0aGUgd29ybGQsIGlzIGhlcmUgdG8gaGVscCB5b3UgaW4gYWxsIHlvdXIgd29yay4gRG93bmxvYWQgTWljcm9zb2Z0IFdvcmQgMjAxMCB0b2RheSEgLiAKUmVwZXJ0b3JpZXMgYXJlIGRpdmlkZWQgaW50byBhcmVhcyBvZiB0aGUgYm9keSBzdWNoIGFzIGV5ZXMsIGVhcnMgYW5kIGhlYWQgYXMgd2VsbCBhcyBzeXN0ZW1zIHN1Y2ggYXMgcmVzcGlyYXRvcnksIHJlcHJvZHVjdGl2ZSBvciB0aGUgZmVtYWxlIHJlcHJvZHVjdGl2ZSBzeXN0ZW0uIEluIHRoZSByZXBlcnRvcnkgeW91J2xsIGFsc28gZmluZCBtZW50YWwsIHNraW4gYW5kIGZldmVyIHN5bXB0b21zLi4gCkVhY2ggc2Vhc29uIGlzIGFuIG9wcG9ydHVuaXR5IHRvIHN0YXJ0IGZyZXNoLi4gCkVuIHN1bmQgcmVsYXRpb24ga3J2ZXIgb2Z0YSBteWNrZXQgYXJiZXRlIG9jaCBlbmdhZ2VtYW5nIGZyIGF0dCBmIGRldCBhdHQgZnVuZ2VyYS4gVmFkIGdyIGVuIHN1bmQgcmVsYXRpb24gciBkanVwdCBzaXR0YW5kZSBrdW5za2FwZW4gYXR0IGRpbiBwYXJ0bmVyIGFsbHRpZCBoYXIgZGluIHJ5Z2cgb20gZHUgciBuZXIgZWxsZXIgdXBwLiBEZXQgciBlbiBzaXR1YXRpb24gZHIgZHUgdHYgYWxsdGlkIGJlaGxsYSBsb2NrZXQgZnIgdmFyYW5kcmFzIHNpZGEgdmVuIG5yIGR1IHIgcCBkaW4gdnJzdGEuIApJdCB0aGVvbmUgd2hlcmUgYWR1bHRzIG91dG51bWJlciBnaXJscywgYW5kIHByaW1hcnkgc2Nob29sIGdpcmxzYXJlIHBhaW50ZWQgd2l0aCBtYWtlIHVwYW5kIGVuY291cmFnZWQgaW4gZGlzb3JkZXJlZCBlYXRpbmcsIGFuZCByZWdyZXNzaXZlLCBzZXhpc3Qgc29jaWFsIGNvbmRpdGlvbmluZy4gCk11Y2ggb2YgdGhlIGhpc3Rvcnkgb2YgbWVkaWNpbmUgaW4gb3VyIHdvcmxkIGhhcyBiZWVuIGEgc3RydWdnbGUgYWdhaW5zdCB0aGUgZmFjdCB0aGF0IHdlIGhhdmUgbm8gd2F5IG9mIGtub3dpbmcgd2hhdCB0aGUgaGVsbCBpcyBoYXBwZW5pbmcgaW5zaWRlIHRoZSBib2R5LiBCb3RoIGluIGdlbmVyYWwgKGhvdyBvcmdhbnMgYW5kIGJvZHkgc3lzdGVtcyB3b3JrKSBhbmQgaW4gc3BlY2lmaWMgKHdoYXQgaXMgd3Jvbmcgd2l0aCB5b3UpLiBBIHBvd2VyZnVsIHdhdGVyIGJlbmRlciBjb3VsZCBwcm9iYWJseSBzZW5zZSB0aGUgaW5uZXIgd29ya2luZ3Mgb2YgYSBib2R5IHRoZSBzYW1lIHdheSBUb3BoIGNhbiBzZW5zZSBzdXJyb3VuZGluZ3MgdmlhIGhlciBjb25uZWN0aW9uIHRvIHRoZSBncm91bmQsIG1ha2luZyBzb21ldGhpbmcgYWtpbiB0byBYIHJheSwgTVJJLCBhbmQgQ1Qgc2NhbnMgYXZhaWxhYmxlIHRvIHNvY2lldHkgd2hpY2ggd291bGQgYmUgYSBodWdlIGJlbmVmaXQgd2l0aG91dCBldmVuIG5lZWRpbmcgdG8gZG8gYW55ICJ3YXRlciBoZWFsaW5nIiBhdCBhbGwuIEltYWdpbmUgaG93IG1lZGljaW5lIHdvdWxkIGhhdmUgZGV2ZWxvcGVkIGlmIHdlIGhhZCBmdWxsIGJvZHkgc2NhbnMgYW5kIGZNUkkgYmVmb3JlIHdlIGhhZCBnZXJtIHRoZW9yeS4gNCBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KR29vZ2xlIFJlZGRpdCBNZWV0dXAgKyBhIGNpdHkgaWYgeW91IGRvbid0IGJlbGlldmUgbWUuLiAKU2F0LjEgaXMgdGhlIG9mIHRoZSBDaGFtcGlvbnMgU28gdGhpcyBpcyBsaWtlIGEgaG9tZWNvbWluZyBmb3IgUnVzbGFuIENoYWdhZXYuIFVsZiBTdGVpbmZvcnRoIGlzIGV4Y2l0ZWQgYWJvdXQgYnJpbmdpbmcgdGhpcyBiaWcgZmlnaHQgdG8gaGlzIGhvbWV0b3duIE1hZ2RlYnVyZzogaGF2ZSBwcm9tb3RlZCBhbmQgY28gcHJvbW90ZWQgbG90cyBvZiBncmVhdCBldmVudHMgb3ZlciB0aGUgeWVhcnMgYnV0IHRoaXMgaXMgcHJvYmFibHkgdGhlIGJpZ2dlc3Qgc2hvdyB3ZSBoYXZlIGRvbmUgc28gZmFyLiBUaGUgaGVhdnl3ZWlnaHQgZGl2aXNpb24gd2lsbCBhbHdheXMgYmUgc3BlY2lhbC4gCkVtcGlyaWNhbCBQb2tlciBjYWxjdWxhdG9ycyBvZmZlciB1cCB0byB0aGUgdXNlciBhIGR5bmFtaWMgY29sbGVjdGlvbiBvZiB0aGUgYWdncmVnYXRlIGFjdGl2aXR5IG9mIHlvdXIgb3Bwb25lbnRzLiBUaGlzIGNvbnRyaWJ1dGVzIHRvIHRoZSBmZWVsLCBvciBtb21lbnR1bSBvZiB0aGUgdGFibGUuIEFuIGltcG9ydGFudCBmYWN0b3IgdG8gYmUgc3VyZS4gClRob3NlIGNhcmRzIGxvb2sgZ29vZCwgZXNwZWNpYWxseSBhdCBhIGxvb3NlIHRhYmxlLCBhZ2FpbnN0IGZvb2xpc2ggb3Bwb25lbnRzLCBidXQgaXQgaXMgYWJzb2x1dGVseSBhIGhhbmQgdG8gcGxheSBpbiBwb3NpdGlvbiwgd2l0aCBhZ2dyZXNzaW9uLCBhbmQgbm90IGVhcmx5IHdpdGggd2Vha25lc3Mgd2hlcmUgYSBuZWdhdGl2ZSBFViBpcyBndWFyYW50ZWVkLi4gCkxpa2UgeW91IHNhaWQsIGl0IG5vdCBmZWFzaWJsZSBmb3IgdXMgdG8gcmVhZCBldmVyeSBjb21tZW50IGluIGV2ZXJ5IHBvc3QuCkxhcnJ5IGxvdmVkIGJlaW5nIHRoZSBtaWRkbGUgc29uIGluIGEgbGFyZ2UgZmFtaWx5LiAKSG9va2VyIGhlYWRzIG91dCB0byB0aGUgcmFuZ2UsIHdoZXJlIEFkcmlhbiBpcyB3b3JraW5nIG91dCBzb21lIG9mIGhpcyBhbmdzdHkgYW5nc3Qgd2l0aCBhIHNob3RndW4gYW5kIGEgdGFyZ2V0IHRoYXQgaGFzIGEgYmFkIGd1eSB3aXRoIGEgZ3VuIHBhaW50ZWQgb24gaXQuIEFkcmlhbiB0aHJvd3MgYSBoaXNzeSBmaXQgYWJvdXQgY2hva2luZyBhbmQgZ2V0dGluZyBzaG90LCBhbmQgSG9va2VyIGxlY3R1cmVzIGhpbSBvbiBub3QgbGV0dGluZyB0aGlzIHN0dWZmIGdldCB0byBoaW0gYW5kIGxlYXZlcywgYnV0IGl0IG9idmlvdXNseSBkaWRuJ3Qgc2luayBpbnRvIEFkcmlhbiwgd2hvIGZpcmVzIG9uY2UgbW9yZSBhbmQgdGhlbiB0b3NzZXMgaGlzIGd1biBkb3duIGFuZCBzaXRzIG9uIHRoZSB0YWJsZSBuZXh0IHRvIGl0IHRvIHN1bGsuIEhvb2tlciBjYXN0cyBhIGNvbmNlcm5lZCBnbGFuY2UgYmFjayBhdCBoaW0gYW5kIHRoZW4gZ29lcyBiYWNrIGluc2lkZS4gClRoZW4gaGF2ZXRoZW0gYWRkIHRoZSBDaG9rdSBSZWkgYW5kIGFmdGVyIDUgbWluLiAKQSBiYWJ5IGJhc2tldCBpcyBub3QgYW55bW9yZSB0aGUgdHJhZGl0aW9uYWwgc3R1ZmYgdGhhdCBpcyBjYXJyaWVkIGluIGEgbGl0ZXJhbCBiYXNrZXQuIApUaGVyZWFsbWFydiB1ClRoZUZhbmZpY1dpdGNoICAyNDEgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvCkFsd2F5cyBiZXQgYmlnIGZvciB2YWx1ZSwgYnVpbGQgcG90cyB3aXRoIHlvdXIgYmlnIGhhbmRzIHNpbmNlIGl0IGNhbiBiZSBkaWZmaWN1bHQgdG8gZ2V0IGhvbGQgb2YgdGhlc2UgY2hpcHMgbGF0ZXIgb24gd2hlbiB0aGV5IGFyZSBpbiB0aGUgc3RhY2sgb2YgYmV0dGVyIG9wcG9uZW50cy4uIApOb3cgYW55b25lIHdobyBoYXMgYW4gZm9ybSBvZiBoaWdoZXIgZWR1Y2F0aW9uIGFuZCBoYXMgdGFrZSBhbiBpbnRybyB0byBjcmltaW5vbG9neSBjb3Vyc2Uga25vd3MgdGhhdCBjcmltZSBpcyBldmVuIGFtb25nIHJhY2VzLiBTbyB0aGUgaWRpb3RzIHVzaW5nIHRoZSBibGFjayBhcnJlc3QgcmVjb3JkcyB0byB0cnkgYW5kIHNheSBibGFja3MgY29tbWl0IG1vc3QgdGhlIGNyaW1lcyBhcmUgbm90IG9ubHkgdXNpbmcgYSBtaXNsZWFkaW5nIGZhY3QgYnV0IHRoZXkgc2hvdyB0aGVpciB0cnVlIGlkaW9jeSBhcyBibGFjayBwZW9wbGUgbWFrZSB1cCBhYm91dCAxNSBwZXJjZW50IG9mIHRoZSBwb3B1bGF0aW9uLiBTbyBubyB3YXkgdGhleSBhcmUgY29tbWl0dGluZyBtb3JlIGNyaW1lcy4gCkdhcmV0aCBTdGVwaGVucywgd2hvIGRpZCAzMCB5ZWFycyBpbiB0aGUgQ2l0eSwgc2FpZCwgYWx3YXlzIGxvdmVkIG15IHdvcmsuIEJ1dCBJIHRob3VnaHQsIGhvdyBtdWNoIHRpbWUgZG8gSSBoYXZlIGxlZnQgb24gdGhlIHBsYW5ldD8gRG8gSSB3YW50IHRvIGdvIG9uIGFuZCBvbiBkb2luZyB0aGUgc2FtZSB0aGluZz8gb2YgdGhlIGNvaG9ydCBoYWQgc29tZXRoaW5nIHRoYXQgZHJldyB0aGVtIHRvIHRlYWNoaW5nIGFwYXJ0IGZyb20gYSBsb3ZlIG9mIHNpbXVsdGFuZW91cyBlcXVhdGlvbnMgb3IgdGhlIHBsYXlzIG9mIE1vbGkgRm9yIHNvbWUsIGl0IHdhcyBpbiB0aGUgYmxvb2QuIApOb3cgaWYgeW91J3JlIGRpZWhhcmRzIGxpa2UgdXMgdGhlbiBpdCB3b24ndCBzb3VuZCBvZGQgdGhhdCB3ZSB0cmFuc2Zvcm1lZCBvdXIgZ2FyYWdlIGludG8gYSBtaW5pIGNhc2luby4gV2UgaGF2ZSBhIFJvdWxldHRlIFRhYmxlLCBvbmUgZm9yIENyYXBzLCB0d28gZm9yIEJsYWNramFjaywgYW5kIG9mIGNvdXJzZSB0d28gb3RoZXJzIGZvciBUZXhhcyBIb2xkJ2VtLiBXaGlsZSB3ZSdyZSByZXF1aXJlZCB0byBob2xkIGEgbG90IG9mIGNoaXBzLCBpdCdzIGltcG9ydGFudCB0byBrZWVwIHRoZW0gc2FmZSBhbmQgYXdheSBmcm9tIHRlbXB0YXRpb24uIApJbiBhbnkgY2FzZSB3aGF0IGV2ZXJ5b25lIHNob3VsZCB3YXRjaCBvdXQgZm9yIGlzIFNjYW0gZW1haWxzIGFuZCBtZXNzYWdlcyBpbiBmYWNlYm9vayB3aGVyZSB5b3UgYXJlIHN1cG9zZSB0byBiZSBhd2FyZGVkIG9yIGJhbmVkIGZvciBhbnkgcmVhc29uLCBhbmQgeW91IGFyZSBhc2tlZCB0byBjbGljayBhIGxpbmsgdG8gdmVyaWZ5IHlvdXIgYWNjb3VudCwgd2hlcmUgeW91IHdvdWxkIG5lZWQgdG8gbG9naW4gb2YgY291cnNlOyB3aGVuIHlvdSBsb2dpbiB0byB0aGF0IGxpbmsgeW91IGRvbid0IGFjdHVhbGx5IHZlcmlmeSBhbnl0aGluZyB5b3UganVzdCBnaXZlIG91dCB5b3VyIHBhc3N3b3JkIGFuZCBhY2NvdW50IHRvIHNvbWUgaGFja2Vycy4gClRoaXMgbWF5IHNvdW5kIHNsaWdodGx5IHZ1bGdhciwgYnV0IG11Y2ggb2YgdGhlIEN6ZWNoIGN1bHR1cmUgcmV2b2x2ZXMgYXJvdW5kIHRoZSBjb25zdW1wdGlvbiBhbmQgZW5qb3ltZW50IG9mIGJlZXIgdGhlIEN6ZWNocyBpbnZlbnRlZCBsYWdlciwgYWZ0ZXIgYWxsICwgYW5kIENhcnNvIHBsYXRlYXUsIHdpdGggaXRzIG5hdHVyYWwgYmVhdXR5IGFuZCBzcGVjdGFjdWxhciBuYXR1cmFsIHBoZW5vbWVuYS4gCkkgbm90IGFyZ3VpbmcgdGhhdCB0aGUgcmVhZGluZyBwdWJsaWMgc3VmZmVycyBmcm9tIGNvbGxlY3RpdmUgUFRTRCB3aXRoIGl0cyBjb25zdGVsbGF0aW9uIG9mIHN5bXB0b21zIGxpa2UgbmlnaHRtYXJlcywgZmxhc2hiYWNrcywgYW5kIGJlaW5nIGVhc2lseSBzdGFydGxlZCBidXQgSSBmZWFyIHRoYXQgb3VyIG51bWJuZXNzLCBuZXZlcnRoZWxlc3MsIG1heSBjbG9zZSB1cyBvZmYgZnJvbSB0YWtpbmcgYWN0aW9uIGFzIGEgY291bnRyeSB0byByZWluIGluIHRoZSBkZWF0aHMgYW5kIGRlc3RydWN0aW9uIGNhdXNlZCBieSBkaXNlYXNlLi4gCkpvaG4gSG9wb2F0ZSB0aHJlYXRlbmVkIGFuIG9wcG9uZW50LgpQcm9kdWN0cyAxICAgMTAwIG9mIDExMzkgLiAKSSByZWFsbHkgbGlrZSBzZWVpbmcgdGhlIHRob3VnaHQgcHJvY2VzcyBiZXR3ZWVuIHRoZSBsZXZlbHMuIApObyBtYXJrZXRwbGFjZSBzdHlsZSB0cmFuc2FjdGlvbnMgZm9yIGNlcnRhaW4gZ29vZHMgb3Igc2VydmljZXMgYXJlIGFsbG93ZWQuIEZvciBhbGwgb3RoZXIgcnVsZXMgc2V0IGdsb2JhbGx5IGJ5IHJlZGRpdCwgcGxlYXNlIHJlYWQgdGhlIGNvbnRlbnQgcG9saWN5LiAidHJhbnNhY3Rpb25hbCIgdGF4ZXMgYXJlIHRoZSBiaWdnZXN0IG9ic3RhY2xlIHRvIG1haW5zdHJlYW1pbmcgYml0Y29pbi4KQnVzaW5lc3MgUGFydG5lcnMuIFdlIG1heSBhbHNvIHNoYXJlIHlvdXIgaW5mb3JtYXRpb24gd2l0aCBidXNpbmVzcyBwYXJ0bmVycyB0byBwcm92aWRlIHlvdSB3aXRoIHNlcnZpY2VzIHRoYXQgeW91IHJlcXVlc3QuIEZvciBleGFtcGxlLCBpZiB5b3Ugc2lnbiB1cCBmb3IgYSBwcm9tb3Rpb24gdGhhdCBydW5zIG9uIG91ciBTZXJ2aWNlcyBidXQgdGhhdCBpcyBzcG9uc29yZWQgb3IgY28gc3BvbnNvcmVkIGJ5IGFub3RoZXIgY29tcGFueSwgeW91ciBpbmZvcm1hdGlvbiBtYXkgYmUgc2hhcmVkIHdpdGggdGhhdCBzcG9uc29yLiAKQXMgYW4gYXNpZGUsIElMIGFyZ3VhYmx5IGhhcyBoYWQgb25lIG9uZSBvZiB0aGUgbW9zdCByaWdvcm91cyBsaWNlbnNpbmcgcmVxdWlyZW1lbnRzIGluIHRoZSBVUyBzaW5jZSAxOTY4IGFuZCB0aGlzIHdvdWxkIHNlZW0gdG8gYmUgYW5vdGhlciBjYXNlIHdoZXJlIGV4aXN0aW5nIGxhd3Mgd2VyZSBub3QgZW5mb3JjZWQgYXMgaW50ZW5kZWQsIGEgcHJvY2VzcyBmYWlsdXJlLiBPbiB0aGUgb3RoZXIgaGFuZCwgdGhlcmUgYXJlIGN1cnJlbnRseSBhYm91dCAyLjJNIEZPSUQgaG9sZGVycyBpbiBJTCBhbmQgZXZlbiBpZiBvbmx5IDElIHdlcmUgcmV2b2tlZCBhbm51YWxseSwgY29uc2lkZXJhYmxlIHJlc291cmNlcyB3b3VsZCBiZSBuZWNlc3NhcnkgdG8gZW5zdXJlIHRoYXQgdGhlIG93bmVycycgZmlyZWFybXMgYXJlIHNlY3VyZWQuLiAKU2hlIHdhcyB1bmZhaXRoZnVsIGFzIHdlbGwsIGFuIHVuZm9ydHVuYXRlIGNvbW1vbiBkZW1vbmlhbnRvciBpbiBtYW55IG9mIG15IHJlbGF0aW9uc2hpcHMgdGhhdCBoYXMgdXNodXJlZCBtZSB0byByZWFzc2VzcyBteSBvd24gcGVyc29uYWxpdHksIHZhbHVlcywgYW5kIHBlcmNlcHRpb24uIApGcmVzaCBxdWVzdGlvbnMgd2VyZSByYWlzZWQgVHVlc2RheSBhYm91dCBOb3J0aCBLb3JlYSdzIGdvYWxzIGFuZCBtb3RpdmVzLCB3aXRoIGEgUGVudGFnb24gcmVwb3J0IHRvIENvbmdyZXNzIHRoYXQgc2F5cyBudWNsZWFyIHdlYXBvbnMgYXJlIGNlbnRyYWwgdG8gTm9ydGggS29yZWEncyBzdHJhdGVnaWMgZ29hbCBvZiBlbnN1cmluZyB0aGUgcGVycGV0dWFsIHRoZSBydWxlIG9mIHRoZSBLaW0gZmFtaWx5IGR5bmFzdHkuIApJbiBiZXR3ZWVuIHRoZXNlIHR3byBpc3N1ZXMgaXMgdGhlIG1hdGVyaWFsIGNvc3Qgb2YgSVQsIGVzdGltYXRlZCBieSBhbmFseXN0IGZpcm0gSW5zaWdodGFhUyBhcyB0eXBpY2FsbHkgcmFuZ2luZyBmcm9tIGZpdmUgcGVyIGNlbnQgdG8gMTAgcGVyIGNlbnQgb2YgY29ycG9yYXRlIHJldmVudWVzIG9yIHB1YmxpYyBzZWN0b3Igb3BlcmF0aW5nIGJ1ZGdldHMuLiAKVGhlIGJlc3Qgd2F5IHRvIGRlYWwgd2l0aCB0aGVtIGlzIG5vdCB0byBoYXZlIHRoZW0gaW4geW91ciBsaWZlLiBJZiB0aGF0J3Mgbm90IHBvc3NpYmxlLCBpdCBoZWxwcyB0byBzaG93IHRoZW0gaG93IHRoZWlyIGhlbHAgb3IgaW52b2x2ZW1lbnQgaW4gYSBwcm9qZWN0IGJlbmVmaXRzIHRoZW0uIEJlY2F1c2UgdGhleSBhcmUgc28gc2VsZmlzaCwgc2hlIHNheXMsIHRoZXkgcmVzcG9uZCBiZXN0IHRvIHNlbGYgaW50ZXJlc3QuCk90dG8gV2FybWJpZXIgZGllZCBkYXlzIGFmdGVyIE5vcnRoIEtvcmVhIHNlbnQgaGltIGhvbWUgdG8gT2hpby4gTm93IFByZXNpZGVudCBUcnVtcCBzYXlzIGhlIGFjY2VwdHMgS2ltIEpvbmcgVW4ncyBhY2NvdW50OiBFZGl0b3JpYWwgQm9hcmQgUm91bmR0YWJsZSBPdHRvIFdhcm1iaWVyIGRpZWQgZGF5cyBhZnRlciBOb3J0aCBLb3JlYSBzZW50IGhpbSBob21lIHRvIE9oaW8uIApUaGV5IGFyZSB1c2luZyBhIGxlZ2FsIGxvb3Bob2xlIHRvIGFsbG93IHVzIGN1c3RvbWVycyB0byBnYW1ibGUuIApBbmQgeWV0IEkgZG91YnQgQ29uc2VydmF0aXZlIHN0cmF0ZWdpc3RzIGFyZSByZWFkeSB0byBwdXNoIHRoZSBwYW5pYyBidXR0b24uIApJcyB3aHkgYSBsYXJnZSBjaHVuayBvZiBwZW9wbGUgaGVyZSB2aWV3IFJlcHVibGljYW5zIGFzIGEgcHJvYmxlbT8gV2UgaGF2ZSBjaGVjayBhbmQgYmFsYW5jZXMgZm9yIGEgcmVhc29uLiAKSSBwdXQgb24gdGhlIGJyYWNlIHRoZSBmaXJzdCB0aW1lIGFuZCBpdCBmZWx0IHRlcnJpYmxlLiBJIHdhbnRlZCB0byB0YWtlIGl0IG9mZi4gCkssIEsrUiB2cy4gSywgSysyIEJpc2hvcHMgdnMgSy4sIGV0Yy4pLi4gCkluIEtvcmVhIHRoZXkgbm9ybWFsbHkgZG9udC4gCk1vcmFsbHksIElzcmFlbCBoYXMgbm8gbGVnIHRvIHN0YW5kIG9uLiBUaGV5IHRvb2sgcGVvcGxlIGhvbWVzLCB0aGVpciBsYW5kLCB0aGVpciBwcm9wZXJ0eS4gCk5vdCBUYWxsYWhhc3NlZSdzLCBob3dldmVyLiBUaGVyZSwgdGhlIEh1bWFuZSBTb2NpZXR5LCBHUkVZMksgVVNBIGFuZCB0cmFjayBvd25lcnMgYXJlIG9uIHRoZSBzYW1lIHNpZGUsIHRyeWluZyB0byBjaGFuZ2UgRmxvcmlkYSdzIGxhdyB0aGF0IHRpZXMgcG9rZXIgcm9vbXMgYW5kIHNsb3QgbWFjaGluZXMgdG8gbGl2ZSByYWNpbmcuIFRoZSBib3R0b20gbGluZSBtb3RpdmF0ZXMgdGhlIGdhbWVyczsgdGhlIHdlbGwgYmVpbmcgb2YgdGhlIGRvZ3MgR1JFWTJLLgpXaHkgZG9lcyB0aGUgZ2FtZSBjb3N0IGFuIHVwZnJvbnQgJDIwPyBCZWNhdXNlIElmICJUaGUgcGF5bWVudHMgYXJlIHNrZXdlZCB0byBhbiBleHRyZW1lbHkgc21hbGwgcG9ydGlvbiBvZiB0aGUgcG9wdWxhdGlvbiwiIHRoYXQgc2tpbm5lcndhcmUuIApBbHNvLCB0aGUgb25seSBhZHZhbnRhZ2UsIGlmIHlvdSBjb3VsZCBjYWxsIGl0IHRoYXQsIHRoYXQgYSBub24gY29weWxlZnQgc29sdXRpb24gaGFzIGlzIHRoYXQgaXQgaGVscHMgbm9uZnJlZSBzb2Z0d2FyZS4gClRoZXkgd2VyZSB2ZXJ5IGRpc2NyZXRlIHVudGlsIHlvdSBhY3R1YWxseSBnb3QgaW50byB0aGUgbWFzc2FnZSBhbmQgdGhleSBjaGFuZ2VkIHdoZW4geW91IGRpZC4gSW50ZXJlc3RpbmdseSwgdGhlIHBsYWNlIGdvdCBidXN0ZWQgb24gbW90aGVycyBkYXksIHdoaWNoIGlzIGFwcGFyZW50bHkgb25lIG9mIHRoZSBxdWlldGVzdCBpbiB0aGUgeWVhci4uIAoxLiBCdXkgYSB0YWJsZSB3aXRoIGVub3VnaCBzZWF0cy4KQSBjb3JyZWN0aW9uIG9mIHRoZSBidWRnZXQgZGVmaWNpdCBmb3IgdGhlc2UgZmFjdG9ycyB3aWxsIHNob3cgZGV0ZXJpb3JhdGlvbiBpbiB0aGUgYnVkZ2V0YXJ5IHNpdHVhdGlvbi4uIApBbiBleHRyYSBlcGlzb2RlIGZvciBhbiBlcGlsb2d1ZSB3b3VsZCBoYXZlIGhlbHBlZCBpbW1lbnNlbHkgaGVyZS4gVGhvdWdoLCBpIHN0aWxsIGhvbGQgdGhhdCBnaXZlbiBoaXMgY2hhcmFjdGVyIGFyYywgaWYgR2FsaWxlbyBoYWQgZ290dGVuIFJ1c3RhbCBhcnJlc3RlZCBmb3Igd2FyIGNyaW1lcyBhbmQgdGhlbiBiZWVuIHRoZSBvbmUgdG8gcmVmb3JtIHRoaW5ncyBpdCB3b3VsZCBoYXZlIG1hZGUgdGhlIG1vc3Qgc2Vuc2UuIFN0aWxsLCBJIGNhbiBob3BlIHdlIHdpbGwgZ2V0IGEgUmlkZSBDb3VudGVyYXR0YWNrIGluIHRoZSBmdXR1cmUuQW55d2F5cywgSSBzb3JyeSBJIGRpZG4gaGF2ZSB0aGUgdGltZSB0byByZWFsbHkgcGFydGljaXBhdGUgaW4gdGhpcyByZXdhdGNoLiAKTGluayBoZXJlLgoiMykgIlJlc2lkZW50cyBpbiBsZXNzIHBvcHVsYXRlZCBwYXJ0cyBvZiB0aGUgY291bnRyeSBjb21wbGFpbiBhYm91dCBwb3dlciBwbGFudHMgICBhbmQgc21vZyAgIGJlaW5nIHNoaWZ0ZWQgdG8gdGhlbS4gCkknbSBtdWNoIG1vcmUgbGlrZWx5IHRvIHdhaXZlIG1vcmUgbmVjZXNzaXR5IGl0ZW1zLiBJIGFwcHJlY2lhdGUgcGVvcGxlIHdobyBnbyB0aGUgZXh0cmEgbWlsZSB3aGVuIGxpZmUgZnVja3MgdGhlbSBhbmQgdGhleSBnb3QgdG8gbG9zZSBhIGZhbWlseSBtZW1iZXIuIEkgYWxzbyBrbm93LCBmcm9tIG15IHZlcnkgd2F5d2FyZCB5b3V0aCwgdGhhdCBJIGNhbiBnZXQgYSBwZXQgZm9yIGZyZWUsIHB1dCBhbiBhZGQgdXAsIGFuZCB1c2UgaXQgYXMgYSBqdXN0aWZpY2F0aW9uIHRvIHNlZSB3aGF0IHNvcnQgb2YgZ29vZCBzaGl0IHlvdSBnb3QgaW4geW91ciBob3VzZSBhbmQgaG93IGdvb2QgeW91ciBzZWN1cml0eSBpcy4gSSBrbmV3IGZvbGtzIHdobyB3b3VsZCBjYWxsIChwcmUgY2VsbCBwaG9uZSwgcHJlIGNhbGxlciBJRCB0aW1lKSBzdHJhbmdlcnMgaW4gZ29vZCBuZWlnaGJvcmhvb2RzIHRvIHNldCB1cCBhIG1lZXRpbmcgYXQgdGhhdCBwZXJzb24gaG91c2UgZm9yIGEgYnVnIGluZmVzdGF0aW9uLCBob21lIGdpdmUgYXdheSwgZnJlZSByZXBhaXIgZXN0aW1hdGUganVzdCB0byBnZXQgaW4geW91ciBob3VzZSB0byBzY29wZSBpdCBvdXQgZm9yIGEgYnVyZ2xhcnkgMiAzIG1vbnRocyBsYXRlci4gVW5sZXNzIGl0IGEgbGljZW5zZWQgYnJlZWRlciwgRE8gTk9UIGxldCBhIHN0cmFuZ2VyIGluc3BlY3QgeW91ciBob3VzZS4KU29jaWFsIE1lZGlhIEZlYXR1cmVzIGFuZCBXaWRnZXRzIGFyZSBlaXRoZXIgaG9zdGVkIGJ5IGEgdGhpcmQgcGFydHkgb3IgaG9zdGVkIGRpcmVjdGx5IG9uIG91ciBzaXRlLiAKTWFueSBwbGF5ZXJzLCB0byByZWFjaCB0aGlzIGxldmVsLCBlbmQgdXAgcGF5aW5nIHh4eCB4eHh4IGFuIGhvdXIgdG8gaGF2ZSBhIGNvYWNoIGV4cGxhaW4gdG8gdGhlbSB0aGVpciBmYXVsdHMuIApBIHRlcnJpYmxlIHdvcmQuIEJ1dCBoZSBkb2VzbiBoYXZlIGEgaGlzdG9yaWNhbCBkb2cgaW4gdGhhdCBmaWdodC4gClRoZXJlIGlzIGRlZmluaXRlbHkgbWlzb2d5bnkgaW4gdGhpcyBtb3ZpZTsgYnkgbm8gbWVhbnMgaXMgaXQgdG90YWxseSBwcm9ncmVzc2l2ZS4gCkhlIHRvb2sgb25lLCBJIHRvb2sgb25lLCBoZSB0b29rIG9uZSwgSSB0b29rIG9uZS4gClNzZCBbVW5zdWl0YWJsZS9Ccm9rZW4gVVJMIHJlbW92ZWQgYnkgTW9kZXJhdG9yXQpUaGVyZSBpcyBhIHJlZ2lzdHJhdGlvbiBmZWUgZXZlcnkgeWVhciB0aGF0IGNvdmVycyBib29rIHJlbnRhbCwgSSB0aGluayBpdCB3YXMgJDUwIGxhc3QgdGltZS4gU2Nob29sIHBpY3R1cmVzIGFyZW4gcmVxdWlyZWQuIApJdHMgYmVlbiB0aGF0IHdheSBmb3IgYXQgbGVhc3QgMjAgeWVhcnMuIFlvdSB0aXAgYmFydGVuZGVycy4gWW91IHRpcCBidXNzZXJzLiAKRm94IHdlbnQgYWxsIGluIGZvciBUcnVtcCBlYXJseSBpbiB0aGUgcHJpbWFyeSBjeWNsZSBiZWZvcmUgaGUgd2FzIHNlcmlvdXNseSB0YWtlbiBhcyBhIGNhbmRpZGF0ZS4gU2xpcHBpbmcgS2VsbHkgZGV2YXN0YXRpbmcgcXVlc3Rpb24gdG8gaGltIGJlZm9yZSB0aGUgZGViYXRlIGxldCBoaW0gbG9vayBwcmVwYXJlZCB0byBoYW5kbGUgYW4gYWR2ZXJzZSBzaXR1YXRpb24uIEJ1dCB3aHk/IElmIHRoZXkgd2VyZSBqdXN0IGFib3V0IGNvbnNlcnZhdGlzbSwgdGhlcmUgd2VyZSBtYW55IG90aGVyIGJldHRlciBjYW5kaWRhdGVzIHRvIGNob29zZSBmcm9tLgpSZXBlYXQuLiAKVm9sdW50ZWVyaW5nIGlzIGEgZ29vZCB3YXkgdG8gZ2V0IG91dCBhbmQgc2VlIHRoZSBmaXJzdGhhbmQgaW1wYWN0IG9mIGEgY2hhcml0eSB3b3JrLiAKU2hlIGNvbmZlc3NlZCB0byB1c2luZyB0aGUgc29ja3MgYWZ0ZXIgZ29pbmcgdG8gdGhlIGJhdGhyb29tLiAKSSBlc3BlY2lhbGx5IGxpa2UgdG8gZ2l2ZSBnaWZ0cyB0aGF0IHdpbGwgYmUgdXNlZnVsIHRvIHRoZSByZWNpcGllbnQgc28gaWYgSSBrbm93IHRoZXkgYmVlbiBrZWVwaW5nIGFuIGV5ZSBvdXQgZm9yIHNvbWV0aGluZywgSSBkbyB0aGUgc2FtZS4gCkkgaGVhciBnb29kIHRoaW5ncyBhYm91dCB0aGUgTWFydmVsIHNob3dzIGJ1dCBoYXZlbiBnb3R0ZW4gaW50byB0aGVtIHlldCwgaXQgb24gYSBsb25nIGxpc3Qgb2Ygc3R1ZmYgdG8gd2F0Y2ggaGFoYS4gCkluIDIwMDEsIGZvbGxvd2luZyBzZXZlcmFsIHllYXJzIG9mIGRlY2xpbmluZyBoZWFsdGgsIE1vbSBhbmQgRGFkIHJldHVybmVkIHdlc3QgdG8gQnJhbmRvbiwgTWFuLiAKTXJwZXRlcmFuZHRoZXB1ZmZlcnMgIDQgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KSSBkb24gZXZlbiBoYXZlIGEgYmFsYW5jZWQgdGVhbSBjb21wLCBqdXN0IHVzaW5nIHdoYXQgSSBnb3QgYXMgSSBjbGVhciBzdG9yeSBhbmQgZWFzeSBjb250ZW50Li4gCkNhbiBGdW5GYWlyIGFsc28gZG8gcG9rZXIKQ29tZSBvbiwganVzdCBvbmUgbW9yZSB3ZWVrITEwLzE3LzIwMDggOTozNzo1NCBBTQpMIHN1ciBsZXMgamV1bmVzPyBVbmUgdHVkZSBzdXIgbGEgc2FudCBtZW5lIHRvdXMgbGVzIGRldXggYW5zIHBhciBsZSBDb2xvcmFkbyBhdXBycyBkZSBtaWxsaWVycyBkIGR1IHNlY29uZGFpcmUgbm91cyBlbiBkb25uZSB1bmUgYm9ubmUgaWRlLiBTZWxvbiBsZSBIZWFsdGh5IEtpZHMgQ29sb3JhZG8gU3VydmV5LCAyNCw5JSBkIGV1eCBvbnQgZGNsYXIgYXZvaXIgY29uc29tbSBkZSBsYSBtYXJpanVhbmEgYXUgbW9pbnMgdW5lIGZvaXMgZGFucyBsZXMgMzBqb3VycyBwcmNkYW50IGxldXIgcnBvbnNlIGF1IHF1ZXN0aW9ubmFpcmUgZW4gMjAwOS4KSGFkIGhlIG1hZGUgdXAgZm9yIGl0PyBZZXMuIApNYXNzYWdlLCBhbGFzLCBpcyBub3QgYSByZWd1bGFyIHBhcnQgb2YgbXkgbGlmZS4gQmV0d2VlbiB3b3JrLCBmYW1pbHkgYW5kIGZpdG5lc3Mgb2JsaWdhdGlvbnMsIEkgaGF2ZSB0cm91YmxlIGVub3VnaCBtYWtpbmcgdGltZSBldmVuIHRvIHN0cmV0Y2guCldlIGhhdmUgaGFkIGN1c3RvbWVycyByZXR1cm4gYmFncyB0aGF0IGhhZCBtb3Rocywgd29ybXMgb3IgbWV0YWwgZnJhZ21lbnRzIGluIHRoZW0uIChCYWdzIGluIG91ciBzdG9yZSBhcmUgbm90IHB1dCBvbiB0aGUgc2hlbHZlcyBiZWZvcmUgYmVpbmcgbWV0aWN1bG91c2x5IGNoZWNrZWQgZm9yIG9wZW5pbmdzLCBhbmQgZXhwaXJhdGlvbiBkYXRlcyBhcmUgY2hlY2tlZCBhcyB3ZWxsLikgTWFueSBvZiB0aGUgcmV0dXJucyBJIGRlYWx0IHdpdGggd2VyZSByZWNlbnQgcHVyY2hhc2VzIHRvby4gClRoaXMgbGlzdCB3b3VsZCBub3QgYmUgY29tcGxldGUgd2l0aG91dCBpbmNsdWRpbmcgdWx0aW1hdGUgcG9wIHByaW5jZXNzIEJyaXRuZXkgU3BlYXJzLiBIZXIgZmFtZSBleHBsb2RlZCBhdCB0aGUgYWdlIG9mIDE3IHdpdGggaGVyIGZpcnN0IEhvdCAxMDAgbWVnYSBoaXQgIkJhYnkgT25lIE1vcmUgVGltZSIgaW4gMTk5OS4gQWZ0ZXIgYSBsb25nIGhpYXR1cyBkdXJpbmcgdGhlIG1pZGRsZSBvZiB0aGUgZGVjYWRlLCBiZXR3ZWVuIDIwMDQgYW5kIDIwMDcsIHNoZSBjYW1lIGJhY2sgc3Ryb25nZXIgdGhhbiBldmVyIGluIDIwMDggd2l0aCBoZXIgZmlyc3QgbnVtYmVyIG9uZSBoaXQgIldvbWFuaXplciIgYW5kIHdlbnQgb24gdG8gaGF2ZSBhbm90aGVyIG51bWJlciBvbmUgd2l0aCAiMyIgaW4gMjAwOS4gU2hlIGhhZCB0ZW4gaGl0cyBvbiB0aGUgeWVhciBlbmQgY2hhcnRzLiBMbywgcnVsZWQgYm90aCB0aGUgcG9wdWxhciBtdXNpYyBhbmQgSG9sbHl3b29kIG1vdmllIHNjZW5lcyBkdXJpbmcgdGhlIDIwMDBzLiBTaGUgaXMgYSBzdGFyIGluIGV2ZXJ5IHNlbnNlIG9mIHRoZSB3b3JkLiBTaGUgaXMgbWFnbmV0aWMgYW5kIGltcGFjdGZ1bC4gSGl0cyBmcm9tIHRoZSBhbGJ1bSB3ZXJlICJMb3ZlIERvbid0IENvc3QgQSBUaGluZyIgYW5kICJQbGF5IiBpbiAyMDAxLiBTaGUgaGFkIG5pbmUgaGl0cyBvbiB0aGUgeWVhciBlbmQgY2hhcnRzLiBDb29sIEosIGluIDIwMDMuClNob3VsZCB0aGUgZ292ZXJubWVudCBjaXJjdW1uYXZpZ2F0ZSBISVBQQT8KIDMgcG9pbnRzICBzdWJtaXR0ZWQgMjEgaG91cnMgYWdvSSBhY3R1YWxseSBkaWQgYmFjayBpdCB1cC4gUmVndWxhdG9yeSBhbGlnbm1lbnQgaXMgdGhlIGRlZmluZWQgcmVzdWx0IGJ5IEFydC42IHdoaWNoIGV4cGxpY2l0bHkgc3RhdGVzICJubyBkaW1pbnV0aW9uIG9mIHJpZ2h0cywgc2FmZWd1YXJkcyBhbmQgZXF1YWxpdHkgb2Ygb3Bwb3J0dW5pdHkiLkl0IGFsc28gbGl0ZXJhbGx5IHN0YXRlcyAiTm8gc2VjdXJpdHkgaW5mcmFzdHJ1Y3R1cmUiICAgd2hpY2ggaXMgdXAgZm9yIGludGVycHJldGF0aW9uIHRvIHNvbWUgZXh0ZW50LiAKQW4gSVNQIHRocm90dGxpbmcgYSBjdXN0b21lciBpcyBzdWJzdGFudGlhbGx5IGRpZmZlcmVudCB0aGFuIHRoZSBwZWVyaW5nIGFuZCB0cmFuc2l0IHNlcnZpY2VzIHRoZXkgcHJvdmlkZSB0byBpbnRlcm5ldCBiYWNrIGhhdWwgcHJvdmlkZXJzLiAKSSBoYXZlIGJlZW4gdG8gdGhhdCBicmlkZ2UgYW5kIGltbWVkaWF0ZWx5IHRob3VnaHQgaXQgd2FzIGEgdGVycmlibGUgaWRlYS4gSXQgc2F5cyB0aGluZ3MgbGlrZSAiV2h5IGRvbid0IHlvdSBjYWxsIHlvdXIgbW90aGVyPyIgYW5kIGlzIGxpbmVkIHdpdGggcGljdHVyZXMgb2YgdGFzdHkgbG9va2luZyBmb29kIGFuZCBwZW9wbGUgaGFuZ2luZyBvdXQgd2l0aCBmcmllbmRzIGFuZCBmYW1pbHkuIApQcm9mZXNzaW9uYWwgb25lIGluY2ggZ3JhZGUgayAgcGF0dGVybiBzdGFsZSBpcyB1c2VkIG9uIHRoZSB0YWJsZXMuIApXaGF0IGV4YWN0bHkgaXMgdGhlIEcgMjAgdGhpbmtpbmcgYmVzaWRlcyBwcm90ZWN0IHRoZSByaWNoIGFuZCBzY3JldyB0aGUgcmVzdCBvZiB1cz8gbGVhZGVycyBvZiBzb21lIG9mIHRoZSB3b3JsZCBiaWdnZXN0IGVjb25vbWllcyBkZWNpZGVkIHRvIG5vdCBwYXNzIGFueSByZWd1bGF0aW9uIG9mIGJhbmtpbmcgbm9yIGFueSB0YXhlcyBvbiBmaW5hbmNpYWwgdHJhbnNhY3Rpb25zIHRvIHN1cHBvcnQgc29jaWFsIHNlcnZpY2VzIG9yIGVudmlyb25tZW50YWwgY2xlYW4gdXAuIFRoZXkgZGlkIGRlY2lkZSB3YXMgdG8gY3V0IGRlZmljaXRzIGluIGhhbGYgYnkgMjAxMy4uIApQb3N0ZWQgaW4gTWFzc2FnZSwgUGV0Y2hhYnVyaSwgUmV2aWV3cywgU29hcHkgbWFzc2FnZQpUaGUgbmlnaHQgd2FzIGRhcmsgYWxyZWFkeTsgdGhlIGFyZWEgYXJvdW5kIHRoZSB0d28gZ2FzIHB1bXBzIGluIGZyb250IG9mIHRoZSBzdG9yZSB3YXMgaWxsdW1pbmF0ZWQgYnkgZmx1b3Jlc2NlbnQgbGlnaHRzLiAKT25lIG9mIHRoZSByZWFzb25zIFF1ZWVuc2xhbmQgc3RhcnRlZCB3aXRoIHZlcnkgbGl0dGxlIHB1YmxpYyBtb25leSB3YXMgYmVjYXVzZSBvZiByZXNpc3RhbmNlIHRvIHRoZSBzZXBhcmF0aW9uIG9mIFFMRCBmcm9tIE5TVyBieSB0aGUgTlNXIGdvdmVybm1lbnQuIApBIGJhZCBwb2tlciBwcm9kdWN0IG5lZWRzIHlvdXIgYWN0aW9uIHRoYXQgaXQgZ2V0cyB0aHJvd24gdG8gdGhlIGFzaHRyYXkuIEluIHRoZSBvdGhlciBoYW5kLCB5b3Ugc2hvdWxkIGJlIHBpY2tpbmcgdXAgdGhlIHByb2R1Y3RzIHRoYXQgc3VpdCB5b3VyIG5lZWRzIGFsbCB0aGUgd2F5LiAKVGhhdCBzYWlkLCBwb2xpY2Ugb2ZmaWNlcnMgYXJlIG5vdCByb2JvdHMgYW5kIEkga25vdyBJIHdvdWxkIGJlIHByZXR0eSBqdW1weSBpbiBoaXMgcG9zaXRpb24uCjE5IHBvaW50cyAgc3VibWl0dGVkIDUgZGF5cyBhZ29BZ3JlZWQuIAouLiAKVUZDIHByZXNpZGVudCBEYW5hIFdoaXRlIGFwcGxhdWRlZCB0aGUgZGVjaXNpb24gdG8gZW5kIHRoZSBmaWdodC4KQW5vdGhlciBoaWdoIHByb2ZpbGUgdmlzaXRvciBhdCB0aGUgb3BlbmluZyBzb2lyZWV3YXMgZm9ybWVyIE1lbGJvdXJuZSBjb3VuY2lsbG9yIGFuZENyaWtleW5ld3Mgd2Vic2l0ZSBmb3VuZGVyU3RlcGhlbiBNYXluZS4gSGlzIGludGVyZXN0IHN0ZW1zIGZyb20gaGlzIHJvbGUgYXMgc3Bva2VzbWFuIGZvciB0aGUgQWxsaWFuY2UgZm9yIEdhbWJsaW5nIFJlZm9ybS4gTXIgTWF5bmUgd2FudHNjb3VuY2lsbG9ycyBpbiBOU1cgdG8gYWRkcmVzcyB0aGUgaW1wYWN0IG9mIHBva2VyIG1hY2hpbmVzIGFuZCBUd2VldGVkIHBob3RvcyBvZiBzb21laG9sZGluZyBhIHNpZ24gc3RhdGluZyJJJ20gYSBDT1VOQ0lMTE9SIGFuZCBJIHdhbnQgZ2FtYmxpbmcgcmVmb3JtIHRvIHByb3RlY3QgbXkgY29tbXVuaXR5Ii4gCkZhc3QgZm9yd2FyZCAxMCB5ZWFycyBhbmQgSSBoYWQgc3RhcnRlZCB3b3JraW5nIGF0IGEgbGFyZ2UgaW50ZXJuYXRpb25hbCBkZXZlbG9wbWVudCBvcmcgaW4gQXVzdHJhbGlhLiBJIG1ldCBhIG1hbiBmcm9tIE5hZ2FsYW5kIHdobyBhbHNvIHdvcmtlZCB0aGVyZS4gQXMgSSBnb3QgdG8ga25vdyBoaW0sIEkgZm91bmQgb3V0IGhlIHdhcyBhIHJlZnVnZWUsIHdoaWNoIEkgdGhvdWdodCB3YXMgb2RkLCBjb25zaWRlcmluZyBoZSBjYW1lIGZyb20gdGhpcyBzdXBwb3NlZGx5IHNhZmUgcGxhY2UgZmlsbGVkIHdpdGggQ2hyaXN0aWFucy4KSSBpbiBhIG1hcmtlZCB3b3JrIHZhbiBhIGxvdCBvZiB0aGUgdGltZSBJIGFtIGRyaXZpbmcgdXAgdGhlcmUgc28gSSBjYW4ganVzdCBibG93IGFyb3VuZCB0aGUgYmlrZXMgd2l0aG91dCBzb21lb25lIGNhbGxpbmcgaXQgaW4uIEkgaGF2ZSBhbHNvIGhhZCBzZXZlcmFsIG5lYXIgYWNjaWRlbnRzIGZyb20gcGVvcGxlIGJlaW5nIGluIG15IGxhbmUgdHJ5aW5nIHRvIHBhc3MgYmlrZXMuIApJZiB5b3UgYXJlIHRoZSB0eXBlIG9mIHBlcnNvbiB3aG8gcHJlZmVycyBjb2xkZXIgdGVtcGVyYXR1cmVzLCBjb25zaWRlciBidXlpbmcgJDIwMCB3b3J0aCBvZiBzcGFjZSBoZWF0ZXJzLiAKQW5kIEkgZ29pbmcgdG8gY29udGludWUgdG8gd29yayB3aXRoIENvbmdyZXNzIG9uIGNvbW1vbiBzZW5zZSBmaW5hbmNpYWwgcmVmb3JtcyB0byBwcm90ZWN0IHBlb3BsZSBhbmQgdGhlIGVjb25vbXkgZnJvbSB0aGUga2luZCBvZiBjb3N0bHkgYW5kIHBhaW5mdWwgY3Jpc2lzIHdlIGp1c3QgYmVlbiB0aHJvdWdoLiIuIApZb3UgY2FuIGhhdmUgb3RoZXIgdGVldGggd2hpdGVuaW5nIG9wdGlvbnMgYnkgYXNraW5nIHlvdXIgZGVudGlzdC4uIApQZW5kYWVsb3NlIHUKVG90YWwgb24gdGhpcyBsaXN0OiAxMTAgMSAxNCkgIkJvcm4gVGhpcyBXYXkgKE9yaWdpbmFsQWxidW0pICI6IE1hcnJ5IFRoZSBOaWdodC9Cb3JuIFRoaXNXYXkvR292ZXJubWVudCBIb29rZXIvSnVkYXMvQW1lcmljYW5vL0hhaXIvU2NoZWllIC8gQmxvb2R5IE1hcnkgLyBCYWQgS2lkcy9IaWdod2F5IFVuaWNvcm4gKFJvYWQgVG8gTG92ZSkvSGVhdnlNZXRhbCBMb3Zlci9ZbyBhbmQgSS9UaGUgRWRnZSBPZiBHbG9yeS4gR2V0IHRoaXMgbmV3ZXN0IGFsYnVtZnJvbSBpVHVuZXMhIDE1KSBSZXRybyBEYW5jZUZyZWFrIC4gQ2FuIGJlIGZvdW5kIG9uICJUaGUgRmFtZS4iIEFzaWFuIGNvdW50cmllcyBib251cyBzb25nLjE2IDE4KSBQb2tlciBGYWNlL0p1c3QgRGFuY2UvIEVoLCBFaChOb3RoaW5nIEVsc2UgSSBDYW4gU2F5KSBmcm9tICJUaGUgQ2hlcnJ5IFRyZWUgU2Vzc2lvbnMiIGZyb21pVHVuZXMuIApTV1IgTWFzc2FnZSBhY3RzIGFzIGEgZnVsbCBib2R5ICJ0dW5lIHVwLiIgSXQgaGVscHMga2VlcCB5b3VyIG11c2NsZXMgYW5kIGpvaW50cyBmbGV4aWJsZSwgc3VwcGxlIGFuZCBoZWFsdGh5LiBJdCBoZWxwcyBwcmV2ZW50IGFuZCBlbGltaW5hdGUgcGFpbiBhbmQgaW5qdXJ5LiBJdCBlbmhhbmNlcyBjaXJjdWxhdGlvbiBhbmQgcmVjb3ZlcnkgZnJvbSBleGVyY2lzZS4gCk5vdCB1bnRpbCByZW50cyBoYXZlIHJpc2VuIGVub3VnaCBmcm9tIHRoZSBkYXRlIHlvdSBidXkgaXR3aWxsIHlvdSBzZWUgYW55IHNpemFibGVyZWxpZWYuIApJIHJlYWxseSB0aGluaywgYXMgYSBmb3JtZXIgcG90IHNtb2tlciwgdGhhdCBtZWRpY2FsIG1hcmlqdWFuYSB3b3VsZCBoZWxwIHdpdGggdGhlc2UgcGFydGljdWxhciBwcm9ibGVtcy4gVGhpcyBpbXBldHVzIGlzIGVzcGVjaWFsbHkgaGVscGZ1bGwga2lja2luZyBtZSBpbiB0aGUgYXNzIGFuZCBnZXR0aW5nIG1lIG92ZXIgdGhlIGh1bXAgb2YgZmVhciB0byBhc2sgYSBkb2N0b3IgdGhpcyBxdWVzdGlvbi4gCllvdSBuZWVkIHRvIGV4YW1pbmUgdGhlbSwgYW5kIHJhdGhlciB0aGFuIHRyeSB0byBhdm9pZCB0aGUgc291cmNlcyBvZiB0aGUgcHJvYmxlbXMgdGhhdCBoYXZlIG1hZGUgeW91IGZlZWwgdGhpcyB3YXksIHR1cm4geW91ciBhdHRlbnRpb24gdG8gd2hlcmUgeW91ciBndXQgaXMgdGVsbGluZyB5b3UgdG8gdHVybiB0by4gCkl0IGlzIHByb2JhYmx5IGEganVtcGluZyBzcGlkZXIsIGF0IGxlYXN0IHRoYXQncyB3aGF0IEkndmUgYmVlbiB0b2xkLiBJIGp1c3QgZm91bmQgb25lIHRvZGF5IGluIG15IGhvdXNlIGFuZCBjYWxsZWQgdGhlIHNwaWRlciBzcHJheSBndXlzISBJIGhhdmUgaXQgaW4gYSBqYXIgdG8gc2hvdyB0aGVtLCB0aGV5IGFyZSBjb21pbmcgdG9tb3Jyb3cuIElmIEkgZmluZCBvdXQgaXQgaXMgc29tZXRoaW5nIG90aGVyIHRoYW4gYSBqdW1waW5nIHNwaWRlciBJIHdpbGwgbGV0IHlvdSBrbm93LiAKVGhlIGJhbmsgbmVhcmx5IGNvbGxhcHNlZCBsYXN0IHllYXIgYmVjYXVzZSBvZiBtaXNtYW5hZ2VtZW50IGFuZCBxdWVzdGlvbmFibGUgbGVuZGluZyBwcmFjdGljZXMuClNvbWUgZGlkIHN0aWNrIHN1Y2ggYXMgdGhlICJzaWdodCBwcm9qZWN0b3IiIChUVikgYW5kICJudW1iZXIgd2l0Y2giIEkgdXNlZCB0byB3cml0ZSB0aGlzIGNvbW1lbnQsIGFsdGhvdWdoIHRoZSBsYXR0ZXIgd2FzIHNob3J0ZW5lZCBmcm9tICJ0bHV2bHZhIiB0byAidGx2YSIuClNpZGVsaW5lcnMgRnVsbFNlcnZpY2VCS0sKMTYpLi4gCk11Y2ggbGlrZSB0aGUgYXBwZWFsIHRvIG9ubGluZSBjYXNpbm8gZ2FtaW5nLCB3aGF0IGRyYXdzIHBsYXllcnMgdG8gdGhlIG1vYmlsZSBzY2VuZSBpcyBjb252ZW5pZW5jZS4gQm90aCBsYW5kIGJhc2VkLCBhbmQgb25saW5lIGNhc2lub3MgZm9yY2UgcGxheWVycyB0byBiZSBpbiBvbmUgcGxhY2Ugd2hlbiB0aGV5IGZlZWwgdGhlIHVyZ2UgdG8gcGxheS4gCkkgaGF2ZSB3b3JrZWQgaW4gY3JpbWluYWwganVzdGljZSwgbWFueSBpbm1hdGVzIHdlcmUgdmljdGltcyBvZiBhYnVzZSBhcyBjaGlsZHJlbiBzbyB5ZXMgdGhleSBtYXkgYmUgInRyaWdnZXJlZCAiIHRvIGJlIGFyb3VuZCBhbiBhYnVzZXIuIE1hbnkgaGF2ZSBraWRzIC93aXZlcy8gZ2lybCBmcmllbmRzIG9uIHRoZSBvdXRzaWRlIHNvIHBlb3BsZSB3aG8gcHJleSBvbiB0aG9zZSBwb3B1bGF0aW9ucyBnZXQgbm8gc3ltcGF0aHkgZnJvbSBvdGhlciBpbm1hdGVzIHdobyBmZWVsIG5vdyB1bmFibGUgdG8gcHJvdGVjdCB0aGVpciBmYW1pbGllcyBvdXRzaWRlIC4gCkdsdXRpbm91cyB3aGl0ZSByaWNlIGFsc28gY29udGFpbnMgc21hbGxlciBhbW91bnRzIG9mIG90aGVyIG1pbmVyYWxzLiAKRW4gRnJhbmNlLCBlbnZpcm9uIDEwJSBkZXMgZmVtbWVzIGVuIGdlIGRlIHByb2NyZXIsIHNvaXQgZW52aXJvbiAxLDUgbWlsbGlvbnMsIHNlcmFpZW50IHRvdWNoZXMgcGFyIGwnZW5kb210cmlvc2UuIApUaXBzIGZvciBuZWdvdGlhdGluZyB0aGUgYmVzdCBwcmljZSBvbiB5b3VyIG5ldyBob21lClRoZSBsYXR0ZXIgY29tcGxldGVseSB0dXJuZWQgbWUgb2ZmIG9mIHRoZSBiYW5kIGFuZCB0aGlzIHBvcnRpb24gaGVyZSB0aGF0IEkgcXVvdGUsIHdoaWNoIGhhcyBubyBlZGl0b3JsaXphdGlvbiB0byBteSBrbm93bGVkZ2UsIG1ha2VzIG1lIHRoaW5rIHRoYXQgS296YWxlayBzdGlsbCBoYXNuIGdvbmUgYmFjayB0byBhY3R1YWxseSB0aGlua2luZyBhYm91dCBoaXMgc29uZ3Mgd2hlbiBoZSB3cml0ZXMgdGhlbSBidXQgYmVsaWV2aW5nIHRoYXQgd2hhdGV2ZXIgY29tZXMgdG8gaGlzIG1pbmQgaXMgaW5zdGFudGx5IGEgY2xhc3NpYywgbm8gZWRpdGluZyByZXF1aXJlZC4uIApNeSBiaWdnZXN0IGhlYXJ0YnJlYWsgd2FzIGFsc28gdGhlIGJlZ2lubmluZyBvZiBtZSBsaXZpbmcgbXkgdHJ1dGggYW5kIGJlY29taW5nIHRoZSBwZXJzb24gSSB3YW50ZWQgdG8gYmUgaGVhbHRoeSwgaGFwcHksIGNvbmZpZGVudCwgYW5kIG5vdywgZGVlcGx5IGluIGxvdmUgd2l0aCBzb21lb25lIHdobyBsb3ZlcyBhbmQgdHJlYXRzIG1lIHdlbGwuIApTYWRseSAoYWx0aG91Z2gsIEkgZ3Vlc3MgZm9yIHRoZSBiZXN0KSBub3RoaW5nIGV2ZXIgY2FtZSBvZiBpdC4gV2Ugc3BlbnQgc29tZSB0aW1lIGFwYXJ0LiBhbmQgSSBzdGFydGVkIHRvIGdldCByZWFsbHkgcmVsaWdpb3VzLCBzbyBJIHRyaWVkIG5vdCB0byB0aGluayBvZiBoZXIgdGhhdCB3YXkuIEl0IHdhcyBhY3R1YWxseSBnb2luZyB3ZWxsIGZvciBhIGxvbmcgdGltZSAgbGlrZSBJIHdhcyB0b3RhbGx5IG92ZXIgaGVyLiBCdXQgSSBoYXZlIHRvIHNheSwgbGlrZSBhIHllYXIgb3Igc28gYWZ0ZXIgYWxsIHRoYXQgc3R1ZmYgd2VudCBkb3duLCB3ZSB3ZXJlIG91dCBzYWlsaW5nIChub3QgbGlrZSBhIGRhdGUgb3IgYW55dGhpbmcgcm9tYW50aWMgbGlrZSB0aGF0KSwgYW5kIHNoZSB3YXMgd2VhcmluZyBsaWtlIHRoZSBob3R0ZXN0IGJpa2luaSBJIGV2ZXIgIHNlZW4gYW5kIGl0IGJyb3VnaHQgYmFjayBhbGwgdGhlIG9sZCBmZWVsaW5ncy4gU2lnaC4KVGhpcyBtZWFucyBhIGxvdCB0byBtZSBiZWNhdXNlIGl0IHNob3dzIG1lIHNoZSBhIHRlYW0gcGxheWVyLiBUaGVuIEkgc3VkZGVubHkgZHJhZyBoZXIgaW4gdGhlIGJlZHJvb20uIApTbyBzb21lIG1heSBiZSBza2VsZXRvbnMgYW5kIG90aGVycyBtYXkgYmUgcHJlc2VydmVkIGNvcnBzZXMgYnV0IHdlIGRvbiByZWFsbHkga25vdyBmb3Igc3VyZS5TaXJlbk9mU2NpZW5jZUFLQSBpdCBjYWxsZWQgd2hpc2tleSA2MCBwb2ludHMgIHN1Ym1pdHRlZCAzIGRheXMgYWdvU2hlIHdhcyBzbyBoYXJkIG9uIHRoZSBzZXJpZXMgaW4gdGhlIHBhc3QgYnV0IHJlYWxpemVkIFR3aWxpZ2h0IGlzIGFub3RoZXIgZXhhbXBsZSBvZiBob3cgc29jaWV0eSBoYXRlIG9uIHRlZW5hZ2UgZ2lybHMgYW5kIG1vY2sgdGhpbmdzIHRoYXQgdGhleSBsaWtlIGRlc3BpdGUgdGVlbmFnZSBib3lzIGxpa2luZyBqdXN0IGFzIHNpbGx5IG9yIHN0dXBpZCBmcmFuY2hpc2VzLiAKVGhlIHJlc3BvbnNlcyBiZWxvdyBhcmUgcmVmZXJyaW5nIHRvIHNvbWV0aGluZyBjYWxsZWQgcG9zdCBwYXJ0dW0gcHN5Y2hvc2lzIEkgd2FzIG5vdCBhd2FyZSBvZiwgYW5kIHdhcyBub3Qgc29tZXRoaW5nIHRoZSBjb21tZW50IGFib3ZlIG1lIG1lbnRpb25lZC4gCkl0IGZlbHQgbGlrZSB3ZWFyaW5nIGEgbWFzayBJIGNvdWxkbiB0YWtlIG9mZiwgYW5kIEkgc3RpbGwgc3RydWdnbGUgd2l0aCB0aGlzIGRlc3BpdGUgbXkgcHJvZ3Jlc3MuIEFjbmUgdG90YWxseSBmdWNrZWQgd2l0aCBteSBpZGVudGl0eS4gSSBob3BlIHRoaXMgcG9zdCBlbmNvdXJhZ2VzIHBlb3BsZSB0byBwZXJzaXN0IGFuZCBiZSBjb25zaXN0ZW50IHdpdGggdHJlYXRtZW50IGJlY2F1c2UgdmlzaWJsZSByZXN1bHRzIGNhbiB0YWtlIHNvIGxvbmcgdG8gc2VlLiAKQXMgbG9uZyBhcyBJIGRvIG5vdCBpbmZyaW5nZSBvbiBvdGhlciBwZW9wbGVzIGZyZWVkb20gdG8gZG8gdGhlIHNhbWUsIGRvIG5vdCBlc3RhYmxpc2ggaGllcmFyY2hpZXMgdG8gZW5mb3JjZSBteSB3aWxsIHVwb24gdGhlbSwgYWxsIGlzIGZyZWUuLiAKQmlsbCB3YXMgYSBsb3lhbCBlbXBsb3llZSBvZiBTdGVsY28gZm9yIDM4IHllYXJzIHdpdGggYSB3b25kZXJmdWwgc3RhZmYsIGFuZCBhbHNvIHNlcnZlZCBvbiB0aGUgQm9hcmQgb2YgRGlyZWN0b3JzIGZvciBGaXJzdCBPbnRhcmlvIENyZWRpdCBVbmlvbiBmb3IgbWFueSB5ZWFycy4gSGUgd2FzIGFuIGF2aWQgZ29sZmVyIGFuZCB3aWxsIGJlIG1pc3NlZCBieSBhbGwgb2YgaGlzIGdvbGZpbmcgYnVkZGllcy4gSGUgYWxzbyBsb3ZlZCBoaXMgcG9rZXIgbmlnaHRzIHdpdGggdGhlIGJveXMgZm9yIG1hbnkgeWVhcnMuIApBZ2FpbiBhIHJvdWdoIGZpcnN0IHNlYXNvbiwgbGlrZSB0aGV5IHdlcmUgdHJ5aW5nIHRvIHdyaXRlIFRORyBzdHlsZSBlcGlzb2RlcyB0aGF0IHNvbWV0aW1lcyB3b3JrZWQuIE9uY2UgdGhleSBnb3QgaW50byBhIGdyb292ZSBpdCBnb3Qgc28gbXVjaCBiZXR0ZXIuIApJZiB0aGUgZGVhbCBmYWxscyB0aHJvdWdoIGR1ZSB0byBmYWlsdXJlIG9mIHRoZSBidXllciB0byBwZXJmb3JtLCB0aGUgc2VsbGVyIGNhbiBrZWVwIHRoZSBkZXBvc2l0IGluIG1vc3QgY2FzZXMuIEkgaGF2ZSBub3QgaGVhcmQgb2YgYWdlbnRzIGFza2luZyBmb3IgNTAlIG9mIHRoZSBkZXBvc2l0IGluIG15IG1hcmtldHMgYW5kIHRoYXQgZG9lcyBzZWVtIG9mZiB0byBtZSBidXQgaXQgbWlnaHQgYmUgbW9yZSBjb21tb24gd2hlcmUgeW91IGZyb20uLiAKU3VyZSwgdGhlcmUgYXJlIHBlb3BsZSB3aG8gYXJlIHN1Y2Nlc3NmdWwgYXQgc3RyZXRjaGluZyB3aXRoIHBsdW1iZXJzIHRhcGUgb3IgYm9uZGFnZSB0YXBlLiBCdXQgc2VhcmNoIGluIHRoZSBzdHJldGNoZWQgc3ViIGZvciBwb3N0cyBmcm9tIHBlb3BsZSB3aG8gaGF2ZSBoYWQgaXJyaXRhdGlvbiBmcm9tIHRoZXNlIG1hdGVyaWFscyBhbmQgeW91IHdpbGwgZmluZCBhIGxvdCBvZiBwb3N0cyBmcm9tIHBlb3BsZSB3aG8gc3RhcnRlZCBvdXQgZmluZSBhbmQgZW5kZWQgdXAgd2l0aCB3ZWVweSBpcnJpdGF0ZWQgZWFycy4KQWJvcnRpb25sYXNhZ25hICAyIHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ28KWW91IGNvbWUgdG8gcmVhbGl6ZSB0aGF0IHRoaXMgaXMgd2h5IENvbW1hbmRlciBDb2R5IGFydGlsbGVyeSBzdHJpa2UgZmFpbGVkIGFnYWluc3QgT2JpIFdhbiwgd2hlbiBodW5kcmVkcyBvZiBKZWRpIHdlcmUga2lsbGVkIGluIHNpbWlsYXIgYXR0YWNrcy4gCkl0IHdhcyBoaXMgYnVkZGllcyBBcnRodXIgYW5kIEFyY2hpZS4gCldlIGdvdCB0aGUgc2FtZSBwcm9ibGVtIGluIG91ciBuZWlnaGJvcmhvb2QuIEEgY291cGxlIGQgYmFncyB3aG8gdXNlIHRoZWlyIG93biBkcml2ZXdheXMgZm9yIHN0b3JpbmcganVuayB0aGVuIGdldCBpcnJpdGF0ZWQgYXQgYW55b25lIHdobyBkYXJlcyB0byBwYXJrIG9uIHRoZSBwdWJsaWMgcm9hZCBpbiBmcm9udCBvZiB0aGVpciBob3VzZS4gSSBqdXN0IGFsd2F5cyB0cnkgdG8gcHV0IG9uIGEgc21pbGUsIHNob3cgc29tZSBlbXBhdGh5IGFuZCBqb2tlIGFib3V0IGFsbCB0aGUgcGVvcGxlIGFuZCBhbGwgdGhlaXIgc3R1ZmYgYmVpbmcgY3JhbW1lZCBpbnRvIHN1Y2ggYSBzbWFsbCBhcmVhIGFuZCB0aGVuIGNvbXBsYWluIGFib3V0IGhvdyBoYXJkIGl0IGlzIGZvciBtZSB0byBnZXQgYSBzcG90IGluIGZyb250IG9mIG15IG93biBwbGFjZS4gKFNvbWUgbW9ybmluZ3MgbXkgaHVzYmFuZCBhbmQgaSBldmVuIGJyYWluc3Rvcm0gb3ZlciBjb2ZmZWUgd2hhdCBvdXIgc3RvcmllcyBvZiBjb21taXNlcmF0aW9uIHdpbGwgYmUgdG9kYXkgc2hvdWxkIHdlIGdldCBjYXVnaHQgcGFya2VkIGluIGZyb250IG9mIGhpcyBob3VzZSBhZ2FpbikuIFdvbiBzb2x2ZSB0aGUgcHJvYmxlbSwgYnV0IHlvdSBjYW4gYXQgbGVhc3QgY2xhaW0gdG8gYmUgdGhlIGZyaWVuZGx5IG5laWdoYm9yICJoYXZpbmcgdGhlIHNhbWUgaXNzdWUgYW5kIGJlaW5nIHN1cHBvcnRpdmUiIHdoaWxlIHlvdSBnbyBhYm91dCBkb2luZyB3aGF0ZXZlciB5b3UgbmVlZCB0byBkby4gZ3J1bXB5IHBlb3BsZSB3aWxsIGFsd2F5cyBmaW5kIGEgd2F5IHRvIGJlIGdydW1weS4gRXZlbiB3aGVuIGltIG5vdCBhZ3JlZWluZyBvciBjb29wZXJhdGluZywgSSBmaW5kIG15IG5laWdoYm9yIG11Y2ggbGVzcyBhZ3Jlc3NpdmUgd2hlbiBpIHZlcmJhbGx5IGVtcGF0aGl6ZSB3aXRoIGhpcyBwbGlnaHQuIGFuZCB3aXRoIGV2ZXJ5IG1vbnRoIHRoYXQgcGFzc2VzLCBpdHMgbGVzcyBhbmQgbGVzcyBvZnRlbiB0aGF0IGhlIGJvdGhlcnMgdG8gZ3JpcGUgb3IgZXZlbiBmcm93biBhdCB1cyBhbnltb3JlLiBHb29kIGx1Y2ssIGNyYWJieSBuZWlnaGJvcnMgYXJlIGEgYnVtbWVyIQpBbGwgYmVsb25ncyB0byBhbGwuIApJZiB3ZSB1bmFybSBjaXRpemVucywgdGhhdCBtYWtlcyB0aGVtIHZ1bG5lcmFibGUgdG8gYXR0YWNrcy4gCldpdGggdGhlIGZhc3QgcGFjZWQgY29udGVtcG9yYXJ5IGxpZmUsIGV2ZXJ5b25lIG5lZWRzIHRpbWUgdG8gcmVsYXggYW5kIGFsc28gdGFrZSBhIGJyZWFrLiBGb3IgeW91ciBzcGVjaWZpYyByZXF1aXJlbWVudHMgeW91IGNvdWxkIHBpY2sgYW1vbmcgdGhlIDMgc3VwcGxpZWQgbWFzc2FnZSB0aGVyYXB5IHByb2dyYW1zOiByZWp1dmVuYXRlIHlvdXIgYmFjayAoMTUgbWludXRlcyBvZiBtYXNzYWdlIGZvciB0aGUgZW50aXJlIGJhY2spLCByZWxpZXZlIHlvdXIgbmVjayBhbmQgYWxzbyBzaG91bGRlcnMgKDE1IG1pbnV0ZXMgdG8gcmVsaWV2ZSB1cHBlciBiYWNrIHRlbnNpb25zKSwgYW5kIHJlbGVhc2UgeW91ciBsb3dlciBiYWNrICgxNSBtaW5zIHRvIHNvb3RoZSByZWR1Y2VkIGJhY2sgcGFpbikuLiAKSXQncyBoYWQgZGV0cmFjdG9ycyBzaW5jZSBpdCB3YXMgYW5ub3VuY2VkIG1vcmUgdGhhbiAxMCB5ZWFycyBhZ28uIApRdWl0IHBsYXlpbmcgbGF3eWVyIGFuZCBsZWF2ZSB0aGUgd29ybGQgb2YgbWFrZSBiZWxpZXZlIGFuZCBhc2sgeW91ciBib3NzIHRvIGV4cGxhaW4gaXQgdG8geW91LiAKV2l0aCB5b3VyIGhlYXJ0IHN0aWxsIHNvbWV3aGF0IGZ1bmN0aW9uaW5nIGl0IG1heSBzdGFydCB0byBjb250cmFjdCByYW5kb21seSBkdWUgdG8gbGFjayBvZiBveHlnZW4gYW5kIGNhdXNlIGl0IHRvIGZpYnJpbGxhdGUgb3IgYW55IG90aGVyIHNob2NrYWJsZSByaHl0aG0uIFRyeWluZyB0byBkbyBjb21wcmVzc2lvbnMgb24gYSBoZWFydCB0byBtYWtlIGl0IHdvcmsgd29uIGJlIGFzIGVmZmVjdGl2ZSB3aXRoIGl0IGFscmVhZHkgY29udHJhY3RlZCBhbGwgb3Zlci4gClRoYW5rcyBJIGxvdmUgdGhlIGNvbnRhY3Qgd2l0aCBwZW9wbGUgLCBJIGFsd2F5cyB0cnkgdG8gcHJvdmlkZSBhIGZyaWVuZGx5IGFuZCBub24gYmluZGluZyBhdG1vc3BoZXJlIHRhaWxvcmVkIHRvIHRoZSBpbmRpdmlkdWFsIG5lZWRzIGFuZCBleHBlY3RhdGlvbnMgLiAKSXQgbXkgaGFwcHkgcGxhY2UuLiAKIkkga25vdyB5b3UgZ3V5cyBkbyB0aGUgYmVzdCB5b3UgY2FuLCBidXQgd2UgZG8gbmVlZCBmcmVzaCBmYWNlcywiIE1yIFdpbGxpYW1zIHRvbGQgdGhlIG1lZXRpbmcuICJJIGtub3cgdGhlIG1lbWJlcnMgd2hvIGFyZSBsb3lhbCBhbmQgdGhlIHdvcmsgdGhleSBkbywgYnV0IG1heWJlIHdlIG5lZWQgdG8gY2hhbmdlIGRpcmVjdGlvbiBhbmQgZ2V0IG5ldyBwZW9wbGUgdG8gY29tZSBpbiBhbmQgaGF2ZSBhIGxvb2suIApCYWNrIHRvIHRoZSBvcmdhbmlzdHMuIE1vc3QgdGhpbmdzIGluIGxpZmUgKGFuZCB0aGlzIGluY2x1ZGVzIHBsYXlpbmcgbW9zdCBtdXNpY2FsIGluc3RydW1lbnRzKSByZXF1aXJlIHR3byBsb2JlcyBvZiB0aGUgYnJhaW4uIEFueSB0d28gb2YgdGhlIGZpdmUuIApCcmlnZW5zIHNpbmQgYXVjaCBkaWUgU2NobGVyIGF1ZiBkaWVzZW4gWnVnIGtvbXBsZXR0IGF1Zmdlc3BydW5nZW4uIFdlbm4gZGVyIExlaHJlciBiZXIgZWluIFRoZW1hIHNwcmljaHQsIHdhcyBzaWUgbmljaHQgaW0gQnVjaCBzZWhlbiwgZGFubiBmcmFnZW4gc2llIGdhbnogc2NobmVsbCAiQnJhdWNoZW4gd2lyIGRhcyBmciBkaWUgS2xhdXN1ci9mcnMgQWJpPyIgdW5kIHdlbm4gbmVpbiwgZGFubiBmb3JkZXJuIHNpZSBkZW4gTGVocmVyIGF1ZiBkYXMgYml0dGUgenUgbGFzc2VuIHVuZCBzaWUgYXVmIGRpZSBQcmZ1bmdlbiB2b3J6dWJlcmVpdGVuLiBFcyB3aXJkIGluIGRlciBTY2h1bGUgbmljaHQgbWVociBnZWxlcm50LCBzb25kZXJuIGdlcHJmdC4gCk1hbnkgcmV0YWlsZXJzIHdvdWxkIGJlIGhhcHB5IHdpdGggdGhvc2UgbnVtYmVycyBidXQgaW52ZXN0b3JzIGhhdmUgYmVjb21lIGFjY3VzdG9tZWQgdG8gaGlnaGVyIGNvbXBhcmFibGUgc2FsZXMgZnJvbSBEb2xsYXJhbWEgdGhhdCBoYXZlIHJhbmdlZCBmcm9tIDUuMiB0byA3LjMgcGVyIGNlbnQgb3ZlciB0aGUgcGFzdCB0aHJlZSB5ZWFycy4KT25lIG9mIHRoZSBvdGhlciBtYWpvciB0aGluZ3MgdGhhdCBtYWRlIHRoaXMgbW9yZSBwaGVub21lbmFsIHdhcyBkZWZpbml0ZWx5IHRoZSBhcnRzdHlsZSB1c2VkIGZvciB0aGUgbWFuZ2EsIGl0IHdhcyBqdXN0IHNvIHdlbGwgZG9uZSBhbmQgcmVhbGx5IGRldGFpbGVkIHRvIHRoZSBjb3JlLiAKUGVvcGxlIHdpbGwgY2xhbW9yIHRvIHRoaW5ncyBvdmVyIGEgbmFtZSBhbmQgdGhlbiBjYW4gYmFja2ZpcmUgaW4gdGhlaXIgZmFjZS4gCllvdXIgbWVtb2lycyBhbmQgc3RvcmllcyBhYm91dCBoaW0gd2lsbCBiZSB5b3VyIGNoaWxkcmVuJ3MgZmF2b3JpdGUgb25lcy4gTXkgbm93IGFkdWx0IGtpZHMgZmVlbCBsb3ZlIGZvciB0aGUgZ3JhbmRwYSB0aGV5IG5ldmVyIG1ldC4gCkkgd2FudCB5b3UgdG8gcGljdHVyZSB0aGUgc2NlbmUuIEl0J3MgdmVyeSBpbXBvcnRhbnQgdGhhdCB5b3UgZ2V0IHRoaXMgdmVyeSBjbGVhciBpbiB5b3VyIG1pbmQuIApIb3dldmVyIHNvbWUgYXJlIGNoZWFwIGFuZCBzb21lIGFyZSByZWFsbHkgZXhjbHVzaXZlLiAKQmF1ZSBkaWUgZGVpbmUgYmFua3JvbGwgYXVmLiBEaWUgZ3JvZSBTdW1tZSwgZGllIGR1IGltIGxldHp0ZW4gQWJzY2huaXR0IGVybWl0dGVsdCBoYXN0PyBEaWUgYmVudGlnc3QgZHUgd2VubiBkdSBlcm5zdGhhZnQgc3BpZWxlbiBtY2h0ZXN0LiAKSW4gbXkgcG9zdCBJIGRvIG5vdCB0ZWxsIHBlb3BsZSB0byBkbyBhbnl0aGluZyB0aGF0IHB1dHMgdGhlbSBhdCByaXNrLCBJIGRvbiBhZHZvY2F0ZSBmb3IgYW55dGhpbmcgb3RoZXIgdGhhbiBiYXNpYyB0aGluZ3MgdGhhdCB3aWxsIGhhdmUgYmVuZWZpY2lhbCBlZmZlY3RzIGluIDk5LjkgcGVyY2VudCBvZiBwZW9wbGUgICBpbiBmYWN0IEkgZG9uIHJlYWxseSBhZHZvY2F0ZSBmb3IgYW55dGhpbmcgaW4gYW55IHNlcmlvdXMgd2F5ICAgSSBkb24gdGVsbCBwZW9wbGUgdGhleSBoYXZlIHRvIGRvIHNvbWV0aGluZyBhbmQgdGhlbiBtYWtlIHRoZW0gZmVlbCBmZWFyZnVsIGlmIHRoZXkgZG9uCkluIGEgcGh5c2ljYWwgY2FyZCByb29tIG9yIGluIGEgY2FzaW5vLCB5b3Ugd2lsbCBub3RpY2UgYSBwb29yIHBsYXllciBwdXR0aW5nIGEgaGFuZCBvdmVyIGhpcyBtb3V0aC4gV2h5PyBCZWNhdXNlIGhlIGlzIHRyeWluZyB0byBjb25jZWFsIGEgc21pbGUgKG5vdCBhIHlhd24pLiAKV2UgdXNlZCBhIGxvdCBvZiBkYXRhIGxpa2UgdGhlIGNvbW1lbnRzLCBoaWdoIHBvaW50cyBldGMuIFRvIGFuYWx5c2UgZWFjaCBiaXQgb2YgY29udGVudC4gClNoZSB3YXMgdGhlIGhlYWQgb2YgYW4gYWxsIGdpcmwgYWxsaWFuY2Ugb24gdGhlIG9ubHkgdHJpYmUgdGhhdCB3YXMgeWV0IHRvIGJlIHNlbnQgdG8gdHJpYmFsIGNvdW5jaWwuIApUaGUgb3RoZXIgbWFqb3IgYmVuZWZpY2lhcnkgb2YgYSBsb3dlciBleGNoYW5nZSByYXRlIGlzIHRvIENhbmFkaWFucyBpbnZlc3RlZCBhYnJvYWQsIHdobyBwb2NrZXQgbW9yZSBDYW5hZGlhbiBkb2xsYXJzIHdoZW4gdGhleSByZXBhdHJpYXRlIHRoZXNlIGludmVzdG1lbnQuIFRoaXMgaXMgYSBkdWJpb3VzIGJlbmVmaXQgZm9yIG91ciBlY29ub215LiBJdCByZXdhcmRzIHBlb3BsZSBmb3Igbm90IGludmVzdGluZyBpbiBDYW5hZGEsIGF0IHRoZSBjb3N0IG9mIGxvd2VyaW5nIHRoZSB2YWx1ZSBvZiBhbGwgYXNzZXRzIGluIENhbmFkYS4gVGhlIGxvc3NlcyBmb3JlaWduZXJzIHdpbGwgZmVlbCBvbiB0aGVzZSBpbnZlc3RtZW50cyB3aWxsIG1ha2UgQ2FuYWRhIGEgbGVzcyBhdHRyYWN0aXZlIHBsYWNlIHRvIGludmVzdCBpbiB0aGUgZnV0dXJlLCB3aGlsZSBlbmNvdXJhZ2luZyBDYW5hZGlhbnMgdG8gaW52ZXN0IG1vcmUgYWJyb2FkLgpDb250cmFyeSB0byBwb3B1bGFyIGJlbGllZiwgb3VyIGRpc2xpa2Ugb2Ygd29tZW4gYW5kIG1pbm9yaXRpZXMgaW4gb3VyIHZpZGVvIGdhbWVzIGlzIGdlbmVyYXRlZCBieSBvdXIgbG92ZSBmb3IgaGlzdG9yeSwgd2UgZG8gbm90IGhhdGUgdGhlbSAianVzdCBiZWNhdXNlIiBhcyBzb21lIG9mIHlvdSBtaWdodCBiZWxpZXZlLiBZb3Ugd291bGQgZmVlbCBkaWZmZXJlbnQgYWJvdXQgdXMsIGhhZCB5b3Uga25vdyB3aGF0IG91ciByZWFjdGlvbnMgYXJlIHRoZSBzZWNvbmQgYSB3b21hbiBhcHBlYXJlZCBpbiB0aGUgQmF0dGxlZmllbGQgdHJhaWxlci4gTW9zdCBvZiB1cyBpbW1lZGlhdGVseSBjcmllZCBhdCB0aGUgc2FtZSB0aW1lLCBzb21lIG9mIHVzIGV2ZW4gZmVsbCB1bmNvbnNjaW91cywgb25lIGd1eSBsb3NlcyBjb250cm9sIGFuZCBzY3JlYW1lZCAiV0UgTElWRSBJTiBBIFNPQ0lFVFkiIHZlcnkgbG91ZGx5IGFuZCB0cmllZCB0byBtYWtlIHRoZSBmb3JjZWQgam9rZXIgc21pbGUgb24gaGlzIG1vdXRoIHVzaW5nIGhpcyBnZW51aW5lIFdXMiBIZWVyIERhZ2dlciwgYnV0IHRoYW5rZnVsbHkgYmVjYXVzZSBoZSBkaWRuIGhhdmUgY29udHJvbCBvbiBoaW1zZWxmIGhlIGluc3RlYWQgZ3JhYiBoaXMgU1MgdGhlbWVkIHJ1YmJlciBkaWxkbyBhbmQgd2hlbiBpdCB0b3VjaGVkIGhpcyBtb3V0aCBoZSBiZWdhbiBkZWVwdGhyb2F0aW5nIGl0IGZ1cmlvdXNseSBhbmQganVzdCB0aGUgbm9pc2UgaGUgbWFkZSB3aGVuIGhlIHdhcyBzdWNraW5nIG9uIGl0IGdhdmUgbWUgUFRTRC4KRm9yIHRoZSBmaXJzdCB0aW1lIGluIEJCQ2FuIGhpc3RvcnksIGEgdHJpcGxlIGV2aWN0aW9uIHJhdHRsZWQgdGhlIGdhbWUgYW5kIHRoZSBob3VzZWd1ZXN0cyB3ZXJlIGltbWVkaWF0ZWx5IGZvcmNlZCB0byBiYXR0bGUgZm9yIHNhZmV0eS4gCkJ1dCBHYWxsZXkgZG9lc24ndCBleHBlY3QgdGhlbSB0byBzdGljayBhcm91bmQgZm9yZXZlci4gIldlIHdhbnQgdG8gc2VydmUgYXMgYSBsYXVuY2ggcGFkIGZvciB0aGUgYmVzdCBuZXcgcmVzdGF1cmFudCBjb25jZXB0cywiIGEgc3Bva2VzcGVyc29uIGZvciB0aGUgZ3JvdXAgZXhwbGFpbmVkIGJ5IGVtYWlsLiAiVGhleSBjYW4gZnVydGhlciBkZXZlbG9wIHRoZWlyIGNvbmNlcHQsIHJlY2VpdmUgYSBidWlsdCBpbiBhdWRpZW5jZSwgZ2FpbiBhIGxveWFsIGZvbGxvd2luZywgZXRjLiAKV2hlbiBoZSB3YXMgb3V0c2lkZSBoZSB3YXMgdGhlbiBzdWNrZXIgcHVuY2hlZCBmcm9tIHRoZSBiYWNrIGJ5IGFub3RoZXIgYm91bmNlciwgZHVyaW5nIHdoaWNoIG15IGNsaWVudCBzbGFwcGVkIHRoZSBBZnJpY2FuIEFtZXJpY2FuIGJvdW5jZXJzIGZhY2Ugd2l0aCBhbiBvcGVuIGhhbmRlZCBzbGFwIGZvciB0aGUgdmlvbGF0aW9ucy4gSXQganVzdCBzaG93cyBob3cgYnJhdmUgYW5kIGNvdXJhZ2VvdXMgeW91ciBib3VuY2VycyB3aGVyZSB0aGF0IHRoZXkgbmVlZGVkIDQgcGVvcGxlIHRvIHN1Y2tlciBwdW5jaCBteSBjbGllbnQgZnJvbSB0aGUgYmFjayB3aGVuIGhlIHdhcyB0YWxraW5nIHRvIHRoZSBBZnJpY2FuIEFtZXJpY2FuIGJvdW5jZXIuIE5vbmV0aGVsZXNzIG15IGNsaWVudCB3YXMgZXh0cmVtZWx5IGRpc3Jlc3BlY3RlZCByZXN1bHRpbmcgaW4gdGhlIHNsYXAgdG8gdGhlIGZhY2Ugb2YgdGhlIEFmcmljYW4gQW1lcmljYW4gYm91bmNlciwgd2hvIHN0YXJ0ZWQgdGhlIGNvbmZyb250YXRpb24gaW4gdGhlIGZpcnN0IHBsYWNlLi4gCkVudGVydGFpbm1lbnQgQXJ0aWNsZXMgIE9jdG9iZXIgMTcsIDIwMTQKQ2hlY2sgZm9yIGJlZCBidWdzIHByaW9yIHRvIHNpZ25pbmcuIEJlZCBCdWdzIGFyZSBhIGh1Z2UgcHJvYmxlbSBpbiBTdW1taXQgQ291bnR5LiBXZSBoYWQgdG8gYWJhbmRvbiBvdXIgcGxhY2UgaW4gdGhlIFdpbGRlcm5lc3QgZHVlIHRvIGJlZCBidWdzIGFuZCBpdCBzdGlsbCBnaXZlcyBtZSB0aGUgaGVlYmllIGplZWJpZXMgdG8gdGhpbmsgYWJvdXQhIEJlc3Qgb2YgbHVjayBoZXJlISBIYWQgYSBibGFzdCBkb2luZyBkb2luZyB0aGlzIGluIHRoZSBwYXN0IQpXaGF0IFdhcnJlY2tlciBhcHBhcmVudGx5IGRvZXNuJ3Qga25vdywgaXMgaGUncyByZWFsbHkgYmVlbiBjaGF0dGluZyB3aXRoIGFuIGFkdWx0IGRlY295IGZyb20gUGVydmVydGVkIEp1c3RpY2UuIFRoYXQncyBhbiBvbmxpbmUgd2F0Y2hkb2cgZ3JvdXAgRGF0ZWxpbmUgdXNlcyBhcyBhIGNvbnN1bHRhbnQgdG8gZG8gd2hhdCBpdCBub3JtYWxseSBkb2VzLCBnbyBpbnRvIGNoYXQgcm9vbXMsIG1vc3RseSBhdCBZYWhvbyBhbmQgQU9MLCBzZXQgdXAgY29tcHV0ZXIgcHJvZmlsZXMsIGFuZCBpbiB0aGlzIGNhc2UgIHByZXRlbmQgdG8gYmUgY2hpbGRyZW4gdW5kZXIgdGhlIGFnZSBvZiAxNCB3aG8gYXJlIGludGVyZXN0ZWQgaW4gc2V4Li4gCk9oaW8gZ2FzIHByaWNlcyBlZGdpbmcgdXAsIGFnYWluLCBidXQgYXJlIHN0aWxsIGxvd2VyIHRoYW4gbmF0aW9uYWwgcHJpY2VzIE9oaW8gZ2FzIHByaWNlcyBlZGdpbmcgdXAsIGFnYWluLCBidXQgYXJlIHN0aWxsIGxvd2VyIHRoYW4gbmF0aW9uYWwgcHJpY2VzIEdhc29saW5lIHByaWNlcyBpbiBHcmVhdGVyIENsZXZlbGFuZCBhbmQgdGhyb3VnaG91dCBPaGlvIGFyZSBlZGdpbmcgaGlnaGVyIGFzIG9pbCBwcmljZXMgcmVib3VuZC4gQWJub3JtYWxseSBoaWdoIHN0b2NrcGlsZXMgb2YgZ2Fzb2xpbmUgYWNyb3NzIHRoZSBuYXRpb24gc2hvdWxkIGRhbXBlbiBwcmljZXMgZm9yIGEgd2hpbGUgdW50aWwgdGhlIGFubnVhbCBzcHJpbmcgcmVmaW5lcnkgbWFpbnRlbmFuY2Ugc2h1dGRvd25zIGdldCB1bmRlcndheS4KVW5sZXNzIG9mIGNvdXJzZSB0aGlzIGlzIGFpbWVkIGF0IGVudGVycHJpc2VzIGFuZCBub3QgdGhlIGF2ZXJhZ2UgSm9lIGluIHdoaWNoIGNhc2UgaG93IG1hbnkgdWJiZXkgYm94ZXMgYXJlIHBlb3BsZSBnb2luZyB0byBoYXZlIHRvIGJ1eSB0byBzdXBwbHkgdGhpcyBkZW1hbmQuIApJbW1vcmFsdG9hc3QgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpUcnVlLCBzb21ldGhpbmcgY291bGQgaGFwcGVuIHRvIHRoYXQgc3BlY2lmaWMgc3BvdCAoZmlyZSkgdG8gcGh5c2ljYWxseSBkZXN0cm95IGVhY2ggZHJpdmVzIGJ1dCBpbiBhIHNvZnR3YXJlIHJhaWQsIHRoZXJlIG5vdCBhIHNjZW5hcmlvIHNob3J0IG9mIGEgcGh5c2ljYWwgZGFuZ2VyIHdoZXJlIHRoZXkgY2FuIGJvdGggYmUgd2lwZWQgYXQgdGhlIHNhbWUgdGltZS4KRG9lc24gbWVhbiB0aGUgcmVzdCBvZiB0aGUgZXhjaGFuZ2Ugd2FzbiBzZXhpc3QuLiAKSW4gZmFjdCwgZ29vZ2xpbmcgaXQgaGFzIFVyYmFuIERpY3Rpb25hcnkgYW5kIGV2ZXJ5IGZ1Y2tpbmcgYXJ0aWNsZSBzYXlpbmcgdGhhdCBpdCBzbGFuZyBmb3IgZXhpdGluZyBxdWlldGx5IGFuZCBub3QgbG9uZywgZHJhd24gb3V0IGdvb2RieWVzLiBTbyBub3Qgb25seSBhcmUgeW91IHdyb25nIGFib3V0IHRoZSBvcmlnaW4sIHlvdSB0YWxraW5nIGFib3V0IGEgcGhyYXNlIHdpdGggYSBkaWZmZXJlbnQgbWVhbmluZyB0aGFuIHRoaXMgY29udmVyc2F0aW9uIGNsYWltZWQgaXQgaGFkLiBIb3cgd3JvbmcgY2FuIG9uZSBwZXJzb24gYmU/IExtYW8KV2Ugd2VyZSBjb25kdWN0ZWQgdG8gYSBDaGllZiwgd2hvIGZvciBkaXN0aW5jdGlvbiBzYWtlIHdlIGNhbGxlZCBIdXJjdWxlcy4gQWZ0ZXIgc3RheWluZyBhIHNob3J0IHRpbWUgd2l0aCBoaW0sIGFuZCBkaXN0cmlidXRpbmcgYSBmZXcgUHJlc2VudHMgYWJvdXQgdXMsIHdlIHByb2NlZWRlZCBmYXJ0aGVyLCBhbmQgY2FtZSB0byBhIENoaWVmIHdobyBJIHNoYWxsIGNhbGwgTHljdXJndXM7IHRoaXMgbWFuIGVudGVydGFpbmVkIHVzIHdpdGggYnJvaWwnZCBmaXNoLCBDb2NvYSBOdXR0cywgZXRjLiwgd2l0aCBncmVhdCBIb3NwaXRhbGl0eSwgYW5kIGFsbCB0aGUgdGltZSB0b29rIGdyZWF0IGNhcmUgdG8gdGVsbCB1cyB0byB0YWtlIGNhcmUgb2Ygb3VyIFBvY2tldHMsIGFzIGEgZ3JlYXQgbnVtYmVyIG9mIFBlb3BsZSBoYWQgY3Jvd2RlZCBhYm91dCB1cy4gClRoZSBvbmx5IHRoaW5nIGlzIHRoYXQgaXMgd29ycnlpbmcgaXMgdGhhdCBzb21lIHBsYWNlcyB0ZW5kIHRvIHRyeSBhbmQgc3RpY2sgYSBmaW5nZXIgdXAgeW91ciBhc3Mgd2l0aG91dCBwcm90ZWN0aW9uIGFuZCBkb2luZyBpdCB0byBvdGhlciBtZW4gd2hpY2ggY291bGQgaGF2ZSB0aGUgcG90ZW50aWFsIG9mIHNwcmVhZGluZyBTVEkgaGVwIGMgb3IgaGl2LgpDb3VsZCBiZSBUVCBidXQgYWdhaW4sIHdlIGhhdmUgYSBibG9ja2VyIGZvciB0aGF0IHNvIG9ubHkgb25lIGNvbWJpbmF0aW9uIG9mIFRUIGxlZnQuIFlvdSBtZW50aW9uZWQgc2hvdmluZyBoZXJlLiBJIGRvbiByZWFsbHkgbGlrZSB0aGF0LiAKRWFjaCBmYW5jeSB0b29sIGlzIGp1c3QgYSB0aGluIHJvZCBvZiBwb2xpc2hlZCBicmFzcyBvciBzaWx2ZXIsIG1heWJlIGFzIGxvbmcgYXMgeW91ciBoYW5kLCB3aXRoIGEgYmlnIHRpcCBhdCBvbmUgZW5kLCBlaXRoZXIgYSBiaWcgbWV0YWwgYmFsbCBvciB0aGUga2luZCBvZiBmYW5jeSBjYXJ2ZWQgaGFuZGxlIHlvdSBzZWUgb24gYSBzd29yZC4gVGhpcyBOYXZ5IGJyb3RoZXIgc2F5cyBob3cgQXJhYiBndXlzIGdldCB0aGVpciBkaWNrIGhhcmQgYW5kIHRoZW4gaW5zZXJ0IHRoaXMgbWV0YWwgcm9kIGluc2lkZSB0aGUgd2hvbGUgbGVuZ3RoIG9mIHRoZWlyIGJvbmVyLiAKQSBsaXR0bGUgc21hbGwsIHByZWZlciAxLzIgcG90IHNpemluZyBidXQgaXQgc3RpbGwgb2theS4gR2V0dGluZyByYWlzZWQgYWxsIGluIHN1Y2tzLiBZb3UgYmx1ZmYgY2F0Y2hpbmcgaGVyZSwgc28gaXQgcmVhbGx5IGp1c3QgZGVwZW5kcyBvbiB3aGF0IHlvdSB0aGluayBvZiB0aGVpciBibHVmZmluZyB0ZW5kZW5jaWVzLiAKUGFyIGxhIHN1aXRlLCBsYSBwdWJsaWNhdGlvbiBkZXMgcmNpdHMgZGUgdm95YWdlcyBkZSBEYXZpZCBMaXZpbmdzdG9uZSBldCBkZSBIZW5yeSBTdGFubGV5IGluY2l0YSBzYW5zIGRvdXRlIGxlIHJvaSBkZXMgQmVsZ2VzLCBMb3BvbGQgSUksICBhZ2lyLiBEdSBtb21lbnQgcXVlIGxhIHRyYWl0ZSBhcmFiZSBuZSBwb3V2YWl0IHBsdXMgdHJvdXZlciBkZSBkYm91Y2hzIHN1ciBsJ29jYW4gSW5kaWVuLCBsZSBzb3V2ZXJhaW4gYmVsZ2Ugc2UgcHJvcG9zYWl0IGQnZW4gZXh0aXJwZXIgbGVzIGRlcm5pcmVzIHJhY2luZXMgZGFucyBsJ0VzdCBkdSBDb25nby4gCkkgaGFkIG5vIGdvb2QgcmVhc29uIHRvIGNlbGVicmF0ZSBteSBkaWZmZXJlbmNlcyB3aGVuIG15IGZhbWlseSBhbmQgSSB3ZXJlIGNvbnN0YW50bHkgaGFyYXNzZWQgZm9yIGl0LCBzbyBhbGwgSSBsb29rZWQgZm9yd2FyZCB0byB3YXMgbW92aW5nIHRvIGEgcGxhY2Ugd2hlcmUgSSBkaWRuIGhhdmUgdG8gdGhpbmsgYWJvdXQgdGhhdCBldmVyeWRheS4gV2hlcmUgSSBsaXZlIG5vdywgd2hhdCBkaWZmZXJlbnRhdGVzIG1lIGZyb20gb3RoZXJzIGlzIHVzdWFsbHkgbXkgcGVyc29uYWxpdHkgYW5kIG90aGVyIGZhY3RvcnMgbm90IG5lY2Vzc2FyaWx5IHJlbGF0ZWQgdG8gbXkgZXRobmljaXR5IGFuZCBJIGVuam95IHRoYXQuIApUaGVyZSBpcyBzb21lIHdvcmQgb3V0IHRoZXJlIHRoYXQgdGhlIFJ1c3NpYW4gaG9uZXlwb3QgbG9iYnlpc3QgbGF3eWVyIGlzIGEgQ29tZXkgRkJJIGFzc2V0LiBUaGUgUnVzc2lhbiB0cmFuc2xhdG9yIHdhcyBhbHNvIGFuIEZCSSBhc3NldCB3b3JraW5nIG91dCBvZiB0aGUgTmV3IFlvcmsgRkJJIG9mZmljZXMuIERpZCBNYW5hZm9ydCBnZXQgc3VzcGljaW91cyBhbmQgY29udGFjdCB0aGUgRkJJPyBXYXMgQ29tZXkgb24gdGhlIHNpZGUgb2YgT2JhbWEvTHluY2ggdG8gZW50cmFwIHRoZW0gYW5kIGdldCBhIEZJU0Egd2FycmFudD8gVGhpcyBFbWluIGd1eSByaWNoIFJ1c3NpYW4gRGFkIGlzIEFOVEkgUHV0aW4gYW5kIGhpcyBQUiBGaXJtIHdhcyB0aGUgUG9kZXN0YSBncm91cC4gClRoaXMgaGVscHMgdG8gZW5zdXJlIHRoZSBpbnRlZ3JpdHkgb2YgZWFjaCB2ZW5kb3IgYW5kIGl0IGdldHMgdGhlIHN0YWZmIGZhbWlsaWFyIHdpdGggZWFjaCB2ZW5kb3IncyBmYXJtIGFuZCBzdG9yeS4gClRoZSBHaWFudHMgc3RyYXRlZ3kgd2FzIHRvIGdvIGFmdGVyIHBpdGNoaW5nLiAKU3BpbmFsIG1hbmlwdWxhdGlvbiBmb3IgYWN1dGUgbG93IGJhY2sgcGFpbgooUHJpdmFjeSBQb2xpY3kpQWtpc21ldFRoaXMgaXMgdXNlZCB0byBkZXRlY3QgY29tbWVudCBzcGFtLiAKMSkgSSBhc3N1bWluZyB5b3UgYXJlIGluIHRoZSBFVSBvciBFRUEsIG9yIG90aGVyd2lzZSBiZWxpZXZlIHlvdXIgcGVyc29uYWwgZGF0YSBpcyBzdWJqZWN0IHRvIHRoZSBHRFBSLiBJZiB5b3UgYXJlIG5vdCBzdXJlIHRoYXQgdGhlIGRhdGEgY29udHJvbGxlciBpcyBzdWJqZWN0IHRvIHRoZSBHRFBSIGluIHRoaXMgY2FzZSwgdGhlbiB5b3UgbmVlZCB0byBmaWd1cmUgdGhhdCBvdXQuCkhlcmUgYXJlIHNvbWUgd2F5cyB0byBicmluZyBtdWNoIG5lZWRlZCByZWxpZWYgdG8gZHJ5IHRyZXNzZXM6Ck1vcm5pbmdzQXJlQmV0dGVyICAyIHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ28KQnV0IHBlcnNvbmFsbHksIEkgZG9uIHRoaW5rIHRoYXQgdGhlIGNhdXNhbGl0eSBpbiB5b3VyIGNhc2UuIApXZSBrbm93IGhvdyBpbXBvcnRhbnQgaXQgaXMgdG8gZGF0ZSBwZW9wbGUgd2l0aCBhIHNoYXJlZCBiZWxpZWYgYW5kIHdlIGZlZWwgdGhhdCBDaHJpc3RpYW4gU3BlZWQgRGF0aW5nIGluIExvbmRvbiBpcyBsb25nIG92ZXJkdWUuIFdlIGtub3cgZnJvbSB5ZWFycyBvZiBleHBlcmllbmNlIHdoYXQgaXQgdGFrZXMgdG8gcnVuIHdlbGwgb3JnYW5pc2VkIGFuZCB3ZWxsIGF0dGVuZGVkIGV2ZW50cy4gQSBMb25kb24gc3BlZWQgZGF0aW5nIGV2ZW50IGlzIHNwbGl0IGludG8gdHdvIGhhbHZlcywgZWFjaCBsYXN0aW5nIGFyb3VuZCBhbiBob3VyLCB0aGVyZSB3aWxsIGJlIGFuIGludGVydmFsIGF0IGhhbGYgdGltZSBvZiBhYm91dCAxNSBtaW51dGVzLiAKVHJlZWJhcmtiYXJrICAxNCBwb2ludHMgIHN1Ym1pdHRlZCAxMSBkYXlzIGFnbwpPciBtYXJpanVhbmEuIApGb3IgT3hicmlkZ2UsIHRoZXJlIHRoZSBKYXJkaW5lIHNjaG9sYXJzaGlwLCBidXQgZm9yIGFsbCBvdGhlciB1bml2ZXJzaXRpZXMsIHRoZXJlIHRoZSBMb2tlIENoZW5nIEtpbSBzY2hvbGFyc2hpcHMuIEJvdGggb2YgdGhlc2UgYXJlIHZlcnkgdmVyeSBoYXJkIHRvIGdldCwgc28gZG9uIGV2ZW4gYm90aGVyIGlmIHlvdXIgYWNhZGVtaWMgYW5kIG5vbiBhY2FkZW1pYyBwcm9maWxlcyBhcmUgYW55dGhpbmcgbGVzcyB0aGFuIHN0ZWxsYXIuIFlvdXIgY291cnNlIG9mIHN0dWR5IGFuZCBvdGhlciBjb25zaWRlcmF0aW9ucyB3aWxsIGFsc28gZmFjdG9yIGludG8gd2hldGhlciB0aGV5IHRha2UgeW91LgpJbiBldmVyeSBvbmUgb2YgdGhvc2UgcGxhY2VzLCB3ZSBmaW5kIGEgQ2FuYWRpZW5zIGJhciB0aGF0IHdvdWxkIHNob3cgdGhlIGdhbWVzLiBBbnl3aGVyZSB5b3UgZ28sIHlvdSBhbHdheXMgZmluZCBhIGJhciB0aGF0IGdvaW5nIHRvIHNob3cgQ2FuYWRpZW5zIGdhbWVzLiAKU2VwdGVtYmVyIDIwMTJOdXIgMzAgS2lsb21ldGVyIHZvbSBpbnRlcm5hdGlvbmFsZW4gRmx1Z2hhZmVuIGRlciBTdGFkdCBlbnRmZXJudCwgZW50d2lja2VsdCBzaWNoIGRhcyBWaWVydGVsIHJhc2FudCB6dSBlaW5lciBXaXJ0c2NoYWZ0c2Jhc2lzIGZyIGdsb2JhbGUgVW50ZXJuZWhtZW4gd2llIEVPTiwgQlAgdW5kIE9yYWNsZS4gCkhpcyBwYXJlbnRzIFN1ZSBhbmQgRGF2ZSB3ZXJlIG5vdCBvbmx5IGNyaXBwbGVkIGJ5IHRoZSBoZWFydCBicmVhaywgYnV0IHRoZSBzaG9jayBvZiB0aGUgYW5zd2VyIHRvICd3aHk/Jy4gClJhamFpIERhdmlzIGlzIGEgc3BhcmsgcGx1ZzogRGF2aXMgaGFkIGEgZ3JlYXQgZ2FtZSBUaHVyc2RheSwgZ29pbmcgMyBmb3IgNCB3aXRoIHR3byBzdG9sZW4gYmFzZXMgYW5kIGEgcnVuIHNjb3JlZC4gSGUgaGFkIGEgZ2lmdCBkb3VibGUgb24gYSBwb3BmbHkgdGhhdCB0aGUgc2hvcnRzdG9wIGFuZCBsZWZ0ZmllbGRlciBsZXQgZHJvcCwgYnV0IGhpcyBvdGhlciB0d28gaGl0cyB3ZXJlIGxlZ2l0aW1hdGU6IGEgYnVudCBzaW5nbGUgYW5kIGEgbGluZXIgdG8gY2VudGVyIGZpZWxkLiAKV29yayBoYXJkIGluIHRoZSBjaXR5IGFuZCB3ZSBuZWVkIGNoaWxsIHRpbWUgYXdheSBmcm9tIGl0IGFsbC4gCkRpZG4gZXhwZWN0IHRoaXMgdG8gZ2V0IHNvIGh1Z2UsIHRoZXJlIGFyZSB0b28gbWFueSBjb21tZW50cyB0byByZXBseSB0by4gClRoZXkgYXJlIHByZXR0eSBhcGF0aGV0aWMgdG93YXJkcyBJbmRpYS4gCkJlIGNhcmVmdWwsIHRvbywgYWJvdXQgb3ZlcnNhdHVyYXRpbmcgaXQuIApMM1RUVUNFVFVSTjFQQjMzVFMgdQpUaGVzZSBmZWxsb3dzIG1ha2UgYW5ndWlzaGVkLCBzb3VsIGFwcHJveGltYXRlIG5vaXNlcyBvdmVyIGNyZWFreSwgZHVzdCBpbmZsZWN0ZWQgZm9sayByb2NrLiBUaGVpciBzdHJhaW5lZCBzaW5naW5nIGlzIHN1cHBvc2VkIHRvIGNvcnJlbGF0ZSB3aXRoIGRlcHRoIG9mIGZlZWxpbmcsIGJ1dCBpdCBhbHNvIGVzdGFibGlzaGVzIGRpc3RhbmNlIGZyb20gdGhlIHNvdXJjZSBtYXRlcmlhbCwgY3VpbmcgbGlzdGVuZXJzIHRoYXQgeWVzLCB0aGUgc2luZ2VyIGlzIGluZGVlZCBhIHdoaXRlIGR1ZGUuIFRoZXknbGwgbmV2ZXIgc291bmQgbGlrZSB0aGVpciB2b2NhbCByb2xlIG1vZGVscywgYnV0IGJveSwgd2lsbCB0aGV5IHNjcmVhbSwgcGFudCwgYW5kIGJlbGxvdyB0cnlpbmcuLiAKVG8gbWUsIEFtZXJpY2EgaXMgc3VwcG9zZWQgdG8gYmUgYSBwbGFjZSB3aGVyZSB3ZSBjYW4gZ28gd2hlcmUgd2Ugd2FudCBhbmQgZG8gd2hhdCB3ZSB3YW50IHdpdGhvdXQgdGhlIGdvdmVybm1lbnQgY29uc3RhbnRseSBtb25pdG9yaW5nIHVzLiBJZiBwZW9wbGUgY2hvb3NlIHRvIHVzZSBjYXNobGVzcyBmb3JtcyBvZiBwYXltZW50LCB0aGF0IGlzIG9uZSB0aGluZywgYnV0IGlmIHdlIGFyZSBhbGwgcmVxdWlyZWQgdG8gZ28gdG8gc3VjaCBhIHN5c3RlbSwgSSBmZWFyIHRoYXQgaXQgY291bGQgcmVzdWx0IGluIHRoZSBsb3NzIG9mIHRyZW1lbmRvdXMgYW1vdW50cyBvZiBmcmVlZG9tIGFuZCBsaWJlcnR5Li4gClRoZXNlIGFyZSBwcm9iYWJseSBzb21lIG9mIHRoZSBjaGVhcGVzdCBidW1wZXIgcG9vbGluZyBkaW5pbmcgdGFibGVzIGZvciBzYWxlIG9ubGluZSBhdCBpdHMgbG93IHByaWNlIG9mIGp1c3QgJDUwMCBkb2xsYXJzLiBJdCdzIG1vcmUgb2YgdHJhZGl0aW9uYWwgZGluaW5nIHRhYmxlIGFuZCBpdCdzIG92YWwuIEl0J3Mgbm90IHZlcnkgYmlnIGFuZCBhIGdvb2QgdGFibGUgdG8gZHJpbmsgY29mZmVlIG9uLiAKWXVwLCBleGFjdGx5IHRoaXMuIC91L3dlZGRpbmdfd29tcF93b21wX1RBLywgSSByZW1pbmQgeW91ciBmaWFuY2UgdGhhdCBpZiBzaGUgYWxsb3dzIGhpbSB0byB3YWxrIGhlciBkb3duIHRoZSBhaXNsZSwgc2hlIHRlbGxpbmcgaGltICJ5b3Ugd2VyZSByaWdodCB0byBleGNsdWRlIG1lIGFuZCBwdW5pc2ggbWUgZm9yIG15IGxpZmVzdHlsZSBjaG9pY2VzIGRhZCwgSSBkZXNlcnZlZCB5b3VyIGFidXNlLiBZb3UgY2FuIGRvIG9yIHNheSB3aGF0ZXZlciB5b3Ugd2FudCB0byBtZSwgaXQgd29uIGFmZmVjdCBvdXIgcmVsYXRpb25zaGlwIi4gSGUgZmVlbCBleHRyYSB2YWxpZGF0ZWQsIGFuZCBpIHdvdWxkbiBiZSBzdXJwcmlzZWQgdG8gZXhwZWN0IHRoZSBraWRzIHRvIGJlY29tZXMgdGFyZ2V0cyBmb3IgbWFuaXB1bGF0aW9uIGlmIHlvdSBzZXQgdGhpcyBwcmVjZWRlbnQgbm93LiBQZXJzb25hbGx5IHRoaXMgbWFuIHdvdWxkbiBiZSBjb21pbmcgYW55d2hlcmUgbmVhciBteSB3ZWRkaW5nLCBidXQgaWYgaGUgbXVzdCBiZSB0aGVyZSwgZG9uIHZhbGlkYXRlIGhpcyBhYnVzaXZlIGJlaGF2aW9yLgpUaGVyZSBhcmUgbW9yZSB0aGFuIDMsMDAwIGVzc2VudGlhbCBvaWxzIG91dCB0aGVyZSwgZWFjaCB3aXRoIGl0cyBvd24gdGhlcmFwZXV0aWMgcXVhbGl0aWVzLiAKTHRkLiAKSSBydW4gb3V0c2lkZSBhbmQgbXkgbmV4dCBkb29yIG5laWdoYm9ycyBnYXJhZ2UgaXMgb24gZmlyZS4gClRoZSBtZWRpYSBpbiBib3RoIGNvdW50cmllcyB3YXMgbGVmdCBzcGVjdWxhdGluZywgc3Bpbm5pbmcgYWxsIHNvcnRzIG9mIHdpbGQgdGhlb3JpZXMgYW5kIG91dGxhbmRpc2ggc2NlbmFyaW9zLiAKRmFzdCBmb3J3YXJkIHRvIHllc3RlcmRheSBtYXNzYWdlLCBJIG1hZGUgYSBzYW1lIGRheSBldmVuaW5nIGFwcG9pbnRtZW50IGZvciA0NSBtaW51dGVzIHdpdGggaGltIGFnYWluIHNpbmNlIEkgd2FzIGZlZWxpbmcgZXh0cmVtZWx5IHRlbnNlLiAKR2VvcmdlIGlzIGFnYWluIG9uZSBvZiB0aGUgbGVhZ3VlJ3MgYmVzdCBzY29yZXJzLCBoYXMgYXBwZWFyZWQgb24gdGhlIGxlYWd1ZSdzIGFsbCBkZWZlbnNpdmUgdGVhbSB0aHJlZSB0aW1lcyBhbmQgd2FzIHRoZSBOQkEncyBNb3N0IEltcHJvdmVkIFBsYXllciBpbiAyMDEzLiBIZSdzIGxlZCBoaXMgdGVhbSB0byB0d28gY29uZmVyZW5jZSBmaW5hbHMgYW5kIHdvbiBhbiBPbHltcGljIGdvbGQgbWVkYWwuIEFuZCBoZSBoYXMgYSBwcm9wZW5zaXR5IGZvciBkZWxpdmVyaW5nIG9uIHByb21pc2VzLCBsaWtlIHdoZW4gaGUgc3dvcmUgdG8gY29tZSBiYWNrIGJldHRlciB0aGFuIGV2ZXIgYWZ0ZXIgYnJlYWtpbmcgaGlzIGxvd2VyIHJpZ2h0IGxlZyBpbiBhIGhvcnJpZnlpbmcgc2NlbmUgMiAxLzIgeWVhcnMgYWdvLi4gClJpZ2h0LiBUaGF0J3MgY2FsbGVkIG93bmVyc2hpcCBmb3IgYSByZWFzb24uIFJlbnQgaXMgYW4gYWdyZWVtZW50IHdoZXJlaW4geW91IGdldCB1c2Ugb2YgdGhlIHByb3BlcnR5LCBidXQgZm9yIGFuIGFncmVlZCB1cG9uIHRpbWUgdGhhdCBpcyBub3QgaW5kZWZpbml0ZS4KSWYgdGhleSBzdGlsbCB0aGUgc2FtZSBzaXplLCB0aGVuIGEgc3RhcnQgcHJpY2Ugd291bGQgYmUgYWJvdXQgd2hhdCBuZXdlciBzdHVmZiBzZWxscyBmb3IuIApDZXMgcHJvcGh0ZXMgZW4gZnVpdGUgZGFucyBsZSBkc2VydCByZW5jb250cmFudCBsJ3RyZS4gCkFsbCB0aGUgc2Nob29scyBJIGhhdmUgdmlzaXRlZCB3ZXJlIGV4dHJlbWVseSBpbXByZXNzaXZlLiAKTGlrZSBub3cgd2UgcGxheSBob2NrZXkgaW4gdGhlIHBhcmtpbmcgbG90IGR1cmluZyBTaGFiYmF0LCBzbyB3ZSBoYXZlIG91ciB0cmFkaXRpb24gYnV0IHdlIGFyZSBhbHNvIGRvaW5nIHNvbWV0aGluZyBkaWZmZXJlbnQuIApOZXZlciBtaW5pbWl6ZSBvciBkaXNtaXNzIHRoZSBjb25jZXJucyBvZiB5b3VyIGVtcGxveWVlcywgYW5kIGFsd2F5cyBtYWtlIHN1cmUgdGhhdCB5b3UndmUgYW5zd2VyZWQgdGhlaXIgcXVlc3Rpb25zIGNvbXBsZXRlbHkuCkFmdGVyIHRoYXQgbXkgbWlkZ2FtZSBhbmQgZW5kZ2FtZSBoYXMgc3RpbGwgdG8gZG8gYSBsb3QgYW5kIHRoZXJlIHRoZSBtYWluIGRpZmZlcmVuY2UgaXMgdGhhdCBJIGhhdmUgbW9yZSBleHBlcmllbmNlIC8ga25vdyBtb3JlIHBhdHRlcm5zIGFuZCBoYXZlIGEgYmV0dGVyIGV2YWx1YXRpb24gZm9yIHRoZSBwYXR0ZXJucy4gCkNldHRlIGluaXRpYXRpdmUgZGVzIE1vaGF3a3Mgc21lIGxhIGNvbnRyb3ZlcnNlLCBjYXIgYXUgUXViZWMsIGxlIENvZGUgY3JpbWluZWwgc3RpcHVsZSBxdSBlc3QgaW50ZXJkaXQgZCB1biBjYXNpbm8gc2FucyBsIGRlIExvdG8gUXViZWMgcXVpIGVzdCBsZSBzZXVsIG9yZ2FuaXNtZSByZXNwb25zYWJsZSBkZXMgY2FzaW5vcyBkYW5zIGxhIHByb3ZpbmNlLgpCdXQgaWYgeW91IHRyeSB0byBjb3VudCB0aGUgbnVtYmVyIG9mIHBvc3NpYmxlIGNvbWJpbmF0aW9ucyBvZiB0aG9zZSBjYXJkcywgeW91IGJldHRlciBoYXZlIGEgZmV3IGV2ZW5pbmdzIGZyZWUuIApJIHJlYWxseSBzbWFydCwgYnV0IHJlYWxsbGxsbGxsbHkgbGF6eS4gU28gY29sbGVnZSB3YXMgcHJldHR5IHN3ZWV0LiBJIGxpa2luZyBmcmVzaG1hbiB5ZWFyLiAKVGhlIG5leHQgY291cGxlIHllYXJzIHdpbGwgYmUgYWJvdXQgZ2V0dGluZyBMdWthIGFuZCBLUCB0byBtZXNoIHdoaWxlIHN1cnJvdW5kaW5nIHRoZW0gd2l0aCBjb21wbGltZW50YXJ5IHBpZWNlcy4gCkluIGFkZGl0aW9uLCB3aGF0ZXZlciB5b3VyIGZhaXRoIG9yIGJlbGllZnMgYXJlLCBJIGFtIHN1cmUgeW91ciBtb3RoZXIgaXMgbG9va2luZyBkb3duIG9uIHlvdS93b3VsZCBiZSBleHRyZW1lbHkgcHJvdWQgb2Ygd2hlcmUgeW91IGFyZSBhbmQgaG93IGZhciB5b3UgaGF2ZSBjb21lLCBhbmQgSSB3b3VsZCBldmVuIGdvIHNvIGZhciBhcyB0byBzYXkgdGhhdCB0aGUgYmVzdCB0cmlidXRlIHlvdSBjYW4gZ2l2ZSBoZXIgaXMga2VlcCBkcmF3aW5nLiBLZWVwIHByYWN0aWNpbmcgZm9yIGhlci4uIApDdXJyZW50IGJ5IGNvbXBhcmluZyB0aGUgd29yayBkb25lIGJ5IGVhY2ggY3VycmVudC4gCkkgd2VhciBidXNpbmVzcyBjYXVzYWwgYXQgdGhlIGNsaWVudCB0byBrZWVwIHVwIHdpdGggdGhlaXIgZHJlc3MgY29kZS4gSSBuZXZlciBmb3VuZCB0aGUgaXNzdWUgb2Ygc3dlYXRzLCBtdXN0IHNsYWNrIEJ1dCBJIGtub3cgbWFueSB3aG8gaGF2ZS4gCk5vdyBjb25zaWRlciB0aGUgc2FtZSBlbGVjdGlvbiBidXQgdGhpcyB0aW1lIGJ1dCBldmVyeWJvZHkgdm90ZXMuIEhvdyBsZWdpdGltYXRlIHdvdWxkIHRoZSByZXN1bHRzIG9mIHRoaXMgZWxlY3Rpb24gYmU/ClRob3NlIGphY2tzIGFyZSBzdXBlciBjaGVhcCBhbmQgdGhlIGludGVybmFsIGNvbnRhY3RzIHdpbGwgZGVmaW5pdGVseSBnZXQgYmVudCBhZnRlciBtb250aHMveWVhcnMgb2YgdXNlIGFuZCBubyBsb25nZXIgbWFrZSBnb29kIGNvbnRhY3QuIApEaWUgZmhyZW5kZSAgdW5kIE9ubGluZSAgUHVibGlrYXRpb24gRXVyb3BlIGhhdCBtaXRnZXRlaWx0LCBkYXNzIGRpZSBhbiAgaW50ZXJlc3NpZXJ0ZSBGYW5nZW1laW5zY2hhZnQgYWxsZXMgTmV1ZSBhdXMgZGVyIFdlbHQgZGllc2VzIGJlbGllYnRlbiBDYXNpbm8gR2FtZXMgbnVubWVociBhdWNoIGJlciBkZW4gVGFibGV0IENvbXB1dGVyIGVyZmFocmVuIGthbm4uCkEgbG90IG9mIHBlb3BsZSB3b3VsZCBiZSBwcmV0dHkgdXBzZXQgaWYgdGhpcyB3ZXJlIHRvIGhhcHBlbiwgYmVjYXVzZSBoZSBpcyB2ZXJ5IHZvY2FsIGFib3V0IG5vdCBidXlpbmcgaW50byB0aGUgInlvdSBjYW4gc2F5IHRoaXMgb3IgdGhhdCIsIGFuZCBhIGxvdCBvZiBwZW9wbGUgc2VlbSB0byBkaXNkYWluIGhpbSBmb3IgdGhhdC4gSGUgbW9yZSBsb2dpYyBhbmQgc2NpZW5jZSBkcml2ZW4gaW4gdGVybXMgb2YgaGlzIHZpZXdzLCBhbmQgdGhhdCBkb2VzbiBmbHkgd2l0aCB0aG9zZSBvbiB0aGUgbGVmdC4uIApBbmQgaGUncyBnb3QgdGhlIHNlbGYgYXdhcmVuZXNzIHRvIGtub3cgd2hlbiBhIG11c2ljYWwgaWRlYSBpcyBvbmx5IGVub3VnaCB0byBzdXN0YWluIGEgc2hvcnQgcGllY2Ugb2YgbXVzaWMuIEhpcyBtdXNpYyBkb2Vzbid0IG91dHN0YXkgaXRzIHdlbGNvbWUgKGV4Y2VwdCBmb3IgU2xlZXAsIGJ1dCB0aGF0J3Mgbm90IG1lYW50IGZvciByZWd1bGFyIGNvbmNlcnQgbGlzdGVuaW5nKS4uIApUaGlzIGxhbmd1YWdlIGlzIHNvcnQgb2YgYSByZWJvb3Qgb2YgYW4gZWFybGllciBvbmUuIEkgaGFkIHNvbWUgaW5mb3JtYXRpb24gb24gaXQgdGhhdCBJIGxvc3Qgd2hlbiBJIGRpZG4gbWFrZSBhIGJhY2t1cCBvZiB0aGUgZGF0YSBhbmQgdGhlbiBsb3N0IGFjY2VzcyB0byBpdCAobWFrZSBzdXJlIHlvdSBzYXZlIHlvdXIgd29yaywga2lkcykuIApJZiB5b3Uga2VlcCB0aGVzZSBtYWNoaW5lcyB1bnVzZWQsIHRoZXNlIGNhbm5vdCB3b3JrIGluIHRoZSBsb25nIHJ1bi4uIApKQU1JRVNPTiwgSm9obiBEYXZpZCAgIFBlYWNlZnVsbHkgYXQgU3QuIEpvc2VwaCdzIEhvc3BpY2Ugb24gU2F0dXJkYXksIE1hcmNoIDEyLCAyMDExIEpvaG4gRGF2aWQgSmFtaWVzb24gcGFzc2VkIGF3YXkgYXQgdGhlIGFnZSBvZiA4Ni4gQmVsb3ZlZCBodXNiYW5kIG9mIHRoZSBsYXRlIEdsb3JpYSBKYW1pZXNvbiAoMjAwMikuIEZvbmRseSByZW1lbWJlcmVkIGJ5IHNwZWNpYWwgZnJpZW5kIE1hcmllIER1bmNhbi4gU2FkbHkgbWlzc2VkIGJ5IGhpcyBzb25zIEppbSAoSmFja3kpLCBHdXkgKEFubiBNYXJpZSksIGFuZCBNYXJrIChKb2FubmUpLiBDaGVyaXNoZWQgZ3JhbmRmYXRoZXIgb2YgRHJldyAoQXNobGV5KSwgQnJlbnQoVHJhY3kpLCBSeWFuLCBMYXVyZW4sIEJyb2NrIChBbm5hKSwgSmVuaWxlYSwgQ2Fzc2FuZHJhLCBDb2x0ZW4sIFRyYXZpcywgTHVjYXMsIFJhZmUsIEpveWEsIEFzaGx5biwgSmV3ZWwsIGFuZCBNaWxhaC4gR3JlYXQgZ3JhbmRmYXRoZXIgdG8gS2FkZW4gYW5kIEthdGllLiBKb2huIHdhcyBhIGxvbmcgc3RhbmRpbmcgbWVtYmVyIG9mIHRoZSBTZWF3YXkgS2l3YW5pcyBDbHViLCB3YXMgYSBXV0lJIHZldGVyYW4sIGEgbWVtYmVyIG9mIFN0LiBBbmRyZXdzIFByZXNieXRlcmlhbiBDaHVyY2gsIGFuZCBwYXJ0IG9mIHRoZSBQb2tlciBDbHViLiBhdCBTTUlUSCBGVU5FUkFMIEhPTUUsIDE1NzYgTG9uZG9uIExpbmUsU2FybmlhLiBhdCBTTUlUSCBGVU5FUkFMIEhPTUUsIDE1NzYgTG9uZG9uIExpbmUsIFNhcm5pYS4gSW50ZXJtZW50IGluIFJlc3VycmVjdGlvbiBDZW1ldGVyeS4gU3ltcGF0aHkgbWF5IGJlIG1hZGUgdGhyb3VnaCBkb25hdGlvbnMgdG8gU3QuIEpvc2VwaCdzIEhvc3BpY2UsIFRoZSBEaWFiZXRlcyBBc3NvY2lhdGlvbiwgQmlnIEJyb3RoZXJzIG9mIFNhcm5pYSBMYW1idG9uLCBhbmQgV29ybGQgb2YgTGlmZSBNaW5pc3RyaWVzLiAoY2hlcXVlcyBhdCB0aGUgRnVuZXJhbCBIb21lIG9ubHkgcGxlYXNlKS4KTGFzdCB1cGRhdGVkOiAyNiAwMiAyMDE4QmV0RnJlZCBjdXN0b21lcnMgaGF2ZSB3aXRuZXNzZWQgdGhpcyBib29rbWFrZXIgZ2V0dGluZyBiZXR0ZXIgYW5kIGJldHRlciBkdXJpbmcgdGhlIHBhc3QgeWVhcnMgd2l0aCByYXBpZGx5IGltcHJvdmVkIG9ubGluZSBvZmZlcmluZ3MgYXMgZWFjaCB5ZWFyIHBhc3Nlcy4gClRoaXMgZ3JvdXAgb2YgNCBvbGRlciBDaHJpc3RpYW4gd29tZW4gd2VyZSB0YWxraW5nIGFib3V0IG9uZSBvZiB0aGVpciBkYXVnaHRlcnMuIEFwcGFyZW50bHkgdGhlIGRhdWdodGVyIHdhcyBnb2luZyB0aHJvdWdoIGEgcm91Z2ggcGF0Y2guIApJIHdvdWxkIGhhdmUgc2F0IGRvd24gd2l0aCB5b3UgYW5kIHRvbGQgeW91IHdoYXQgSSBsZWFybmVkIGZyb20geW91LiAKTW9zdCBwbGF5ZXJzIGFyZSBtYWtpbmcgZmFyIGJpZ2dlciBtaXN0YWtlcy4uIApTaG91bGQgUE1VIHB1c2ggaW50byBzcG9ydHMgYmV0dGluZyBhbmQgcG9rZXIgdG8gY29udGludWUgdG8gZXhwYW5kIGl0cyBwcmVzZW5jZSBpbiB0aGUgRnJlbmNoIG9ubGluZSBnYW1pbmcgbWFya2V0PyBBbmQgd291bGQgc3VjaCBhIG1vdmUgYmUgaW4gbGluZSB3aXRoIGl0cyBwcmlvcml0eSBvZiBzdXBwb3J0aW5nIHRoZSBGcmVuY2ggZXF1aW5lIGluZHVzdHJ5Py4gCkZpbmRlIGVpbmVuIE9ydCBhbiBkZW0gZHUgdmVybHNzbGljaCBHZWxkIHZlcmRpZW5lbiBrYW5uc3QuIFByb2Zlc3Npb25lbGxlciBQb2tlciBTcGllbGVyIHp1IHNlaW4gYmVkZXV0ZXQgbmljaHQsIGRhc3MgZHUgYmVyaG10IHdpcnN0OiBFcyBiZWRldXRldCwgZHUgaGFzdCBkYXMgUG9rZXIgU3BpZWxlbiB6dSBkZWluZW0gQmVydWYgZ2VtYWNodC4gRHUgbXVzc3QgYXVjaCBuaWNodCBydW5kIHVtIGRlbiBHbG9idXMgZHNlbiB1bSBQb2tlcnByb2ZpIHp1IHNlaW4gICBkdSBtdXNzdCBlcyBudXIgenUgZGVpbmVtIEhhdXB0YmVydWYgbWFjaGVuLiBIYXN0IGR1IGVpbmVuIG9kZXIgendlaSBPcnRlIGdlZnVuZGVuLCBhbiBkZW5lbiBkdSBrbGFyIGtvbW1zdCwgZGFubiBibGVpYmUgZG9ydC4gRXMgZ2VodCBoaWVyIHVtIGRlaW5lbiBMZWJlbnN1bnRlcmhhbHQuClJlbW92ZWQuIFlvdSBhcmUgb3ZlciBzaW1wbGlmeWluZyBhIHZlcnksIHZlcnkgY29tcGxleCBwcm9jZXNzLiBGb3IgbW9zdCBwZW9wbGUsIGl0IGlzbiBnb2luZyB0byBiZSBhcyBzaW1wbGUgYXMganVzdCBub3QgdGhpbmtpbmcgYWJvdXQgdGhlIHBhc3QuIFRyYXVtYSBpcyBhIHJlYWwgdGhpbmcgYW5kIHRyYXVtYSBkb3NlbiBhbGxvdyBwZW9wbGUgd2hvIHdhbnQgdG8gc3RvcCB0aGlua2luZyBhYm91dCB0aGUgcGFzdCB0byBkbyBzby4gSWYgaXQgd2FzIGFzIHNpbXBsZSBhcyBmb3JnZXR0aW5nIHRoZSBwYXN0LCB0aGVzZSBzdXBwb3J0IGdyb3VwcyB3b3VsZCBub3QgZXhpc3QuClZpYSBlZW4gaGVsZWJvZWwgdHJhcHBlbiBlbiBrbGVpbmUgc3RlZWdqZXMgKGRlIGh1aXplbiB3ZXJkZW4gYWwgc25lbCBtZWVyIHZlcndhYXJsb29zZCkga3dhbWVuIHdlIHdlZXIgYmVuZWRlbiBhYW4gZGUgaGV1dmVsIGVuIHpvIGhldCBjZW50cnVtIGluLi4gCklmIHlvdSBoYXZlIGEgcGFpciBvZiBzZXZlbnMgYW5kIHRoZSBib2FyZCBpcyBBY2Ugb2Ygc3BhZGVzLCBLaW5nIG9mIHNwYWRlcywgdGVuIG9mIGhlYXJ0LCA1IG9mIHNwYWRlcyBhbmQgMyBvZiBkaWFtb25kLCB0aGUgcG90IGlzIHF1aXRlIGJpZyBhbmQgdGhlcmUgYXJlIDQgcGxheWVycyBpbiB0aGUgcG90LCBpdCB3b24ndCBiZSBzbWFydCB0byBibHVmZi4gCkl0IHdvdWxkbiBzdXJwcmlzZSBtZSBhdCBhbGwgaWYgc29tZW9uZSB3aG8gZmVlbHMgdGhhdCB3YXkgaXMgdmVudGluZyBieSBnb2luZyBvbiBhIGRvd24gdm90aW5nIGJpbmdlLkhvbmV5b2F0bWVhbDEwMSAgMTggcG9pbnRzICBzdWJtaXR0ZWQgMjcgZGF5cyBhZ29JIGp1c3QgZmVlbCByZWFsbHkgc3Ryb25nbHkgYWJvdXQgbXkgY2hpbGQgbm90IGJlaW5nIGFibGUgdG8gZWF0IGFuZCB0aGVuIHdoZW4gdHJ5aW5nIHRvIGVhdCBhdCBhIGxhdGVyIHRpbWUgYmVpbmcgcHVuaXNoZWQuIEEgY2hpbGQgc2hvdWxkIG5vdCBiZSBwdW5pc2hlZCBmb3IgYmVpbmcgaHVuZ3J5LiBFdmVuIGlmIHNoZSB3YXMgZWF0aW5nIGF0IDEwLCAxMCB0byA0IGlzIGEgbG9uZyB0aW1lIGFuZCBzaGUgbWlnaHQgbmVlZCBhbm90aGVyIHNuYWNrLiAKVGhlIHRoaW5nIHlvdSByZWFsaXNlIHF1aWNrbHkgaXMgdGhhdCBubyBhbW91bnQgb2YgZXh0ZXJuYWwgc3RpbXVsYXRpb24sIGRydWdzIGluY2x1ZGVkIGFuZCBnZXQgeW91IGhhcHBpbmVzcy4gCkEgUmFpc2UgRGVhZCBzcGVsbCBpcyBwcm9iYWJseSBiZXlvbmQgeW91ciBidWRnZXQsIGFuZCBpdCB3b3VsZG4gd29yayBvbiBhIGNyZW1hdGVkIGJvZHkgYW55d2F5LiBEZXBlbmRpbmcgb24gaG93IHlvdXIgZ3JvdXAgaW50ZXJwcmV0cyB0aGUgcnVsZXMsIHlvdSBtaWdodCBiZSBhYmxlIHRvIHJlc3RvcmUgdGhlIGFzaGVzIHdpdGggYSBSZXN1cnJlY3Rpb24gc3BlbGwsIGJ1dCB5b3UgbWlnaHQgbmVlZCBhIFRydWUgUmVzdXJyZWN0aW9uLiAKTm90aGluZyB0aGF0IGhhcHBlbnMgdG8gVHJ1bXAsIGF0IHRoaXMgcG9pbnQsIGlzIGdvaW5nIHRvIGRpc3N1YWRlIHRoZW0uIFRoZXNlIHBlb3BsZSBoYXZlIGZpbmFsbHkgaGFkIGEgdGFzdGUgb2YgYSBQcmVzaWRlbnQgd2hvIHdhcyBvcGVubHksIG5ha2VkbHkgcmFjaXN0LiBBbmQgRm94IE5ld3MgaGFzIHRvbGQgdGhlbSBmb3IgdHdvIHN0cmFpZ2h0IHllYXJzIHRoYXQgaXQgYmVlbiBncmVhdC4gCkRpZ2dhZGlnZ2FkaWdnYSAgMSBwb2ludCAgc3VibWl0dGVkIDEgbW9udGggYWdvCkZyb20gaGVyIEkgdGhpbmsgc2hlIGtub3dzIHNoZSBob3QgYW5kIHNoZSBnb3QgdGhlc2Ugb3Bwb3J0dW5pdGllcyBiZWNhdXNlIG9mIGl0IGJ1dCBzaGUgd2FudHMgdG8gYmUgdGFrZW4gc2VyaW91c2x5IGFzIGEgZ29sZmVyIGFuZCBkb2VzbiB3YW50IHRvIGJlIGp1c3Qga25vd24gYXMgdGhlIGhvdCBjaGljayB0aGF0IGdvbGZzLiAKIkl0J3MgcmVncmV0dGFibGUsIGJ1dCBpdCdzIHRoZSB3YXkgdGhpbmdzIGFyZSwiIEZyaXRjaGV5IHNhaWQuICJXZSBhbGwgYXNzb2NpYXRlIHdpdGggdGhlIGdyb3VwcyB0aGF0IGFyZSBwYXJ0IG9mIG91ciBwZXJzb25hbCBpZGVudGl0eS4gTGF3eWVycyBoYW5nIG91dCB3aXRoIG90aGVyIGxhd3llcnMuIApJIG5ldmVyIHdlbnQgdGhhdCBoaWdoLCBidXQgSSBrbm93IHNpbHZlciBjaGVzdHMgZ2l2ZSAxMiwwMDAgYW5kIHRoZSBwcmljZSBvZiBnb2xkIGlzIGRvdWJsZS4gU28gYXQgbGVhc3QgZG91YmxlIHRoZSBnZW1zLi4gClRoZSBncmFuZG1vdGhlciBrbmV3IHRoZSB0d2luIHdhcyBhbGxlcmdpYywgYnV0IHNoZSBoYWQgbmV2ZXIgdGFrZW4gaXQgc2VyaW91c2x5IGJlY2F1c2UgdGhlaXIgY3VsdHVyZSB1c2VkIGl0IHNvIG11Y2guIFRoZSBPUCB3ZW50IGludG8gZ3JlYXQgZGV0YWlsIGFib3V0IHRoZSBwcm9jZXNzIGl0IHRvb2sgdG8gZGlhZ25vc2UgYW5kIHBpbnBvaW50IHRoZSBhbGxlcmd5IHdoZW4gdGhlIGJhYmllcyBmaXJzdCBnb3QgaG9tZS4gCkl0IHdvdWxkIGNlcnRhaW5seSBiZSBiZXR0ZXIgd2l0aCBhIGdyZWF0ZXIgc2VsZWN0aW9uIG9mIGF0dHJhY3RpdmUgZ2lybHMsIGFuZCB0aGUgbWFtYXNhbiBzaG91bGQgbm90IG5hZyB0aGUgY3VzdG9tZXJzIHRvIHRha2UgMiBnaXJscywgb3IgdG8gdGFrZSBvbmUgb3RoZXIgdGhhbiB0aGUgY3VzdG9tZXIgaGFzIGNob3Nlbi4gCkkgZ3Vlc3Mgc2hlIGhhZCBkb3VidHMgYWJvdXQgdGhlIHJlbGF0aW9uc2hpcCBldmVuIGJlZm9yZWhhbmQuIE1heWJlIHNoZSB3YXMgdG9vIGFmcmFpZCB0byBzdGFydCBzb21ldGhpbmcgbmV3LCBtYXliZSBzaGUgdGhvdWdodCBzaGUgY2FuIGZpbmQgc29tZXRoaW5nIGJldHRlci4gVGhlbiBUaW5kZXIgZXhwZXJpZW5jZSBtYWRlIGhlciB0aGluayB0aGF0ICJJdCBub3QgdGhhdCBoYXJkIGZpbmRpbmcgc29tZW9uZSBiZXR0ZXIsIGxvb2sgYXQgYWxsIHRob3NlIG1hdGNoZXMiLiBTZWVpbmcgdGhhdCBoZXIgYmYgaXNuIHN1Y2ggYSBjYXRjaCBtaWdodCBoYXZlIHN0cmVuZ3RoZW4gaGVyIGRvdWJ0cywgYnV0IGl0IGlzbiB0aGUgb25seSB0aGluZy4KSWYgeW91IGFyZSBhIHNlcmlvdXMgcG9rZXIgcGxheWVyLCB5b3UgYXJlIHBsYXlpbmcgYnkgdGhlIHdlZWssIGJ5IHRoZSBtb250aCwgbm90IGJ5IHRoZSBkYXkuIEFuZCBpZiB5b3UgZm9yIGluc3RhbmNlIGFyZSBpbiBhIHZlcnkgZ29vZCBwb2tlciBnYW1lLCB5b3UgZG9uJ3QgcXVpdCBzaW1wbHkgYmVjYXVzZSBvZiBob3cgeW91IGFyZSBkb2luZy4gWW91IHF1aXQgYmVjYXVzZSB0aGUgZ2FtZSBoYXMgZ290dGVuIHdvcnNlLCB5b3UgcXVpdCBiZWNhdXNlIHlvdSBhcmUgdGlyZWQuIApUYWtlIGEgbW9tZW50IHRvIHdvbmRlciBhdCB0aGUgc2ltcGxlIGJyaWxsaWFuY2Ugb2YgdGhlIHBsYW4uIFRoZSBwcmlzb24gc3lzdGVtIGlzIGZpbGxlZCB3aXRoIGNvbm5lY3Rpb25zLCBleWV3aXRuZXNzZXMsIHRpcHMsIGFuZCBoaW50cyB0aGF0IHRoZSBjb3BzIGNvdWxkIGhhdmUgbWlzc2VkLiAKSWYgdGhleSBjYW4gYWRkIG9yIHJlbW92ZSB0YXNrcywgc3VyZWx5IHRoZXkgY2FuIGVkaXQgdGhlIHJlcXVpcmVtZW50cz8uIApTdXIgbGUgc2l0ZSBkZSBVU0EgQ3VzdG9tcywgaWwgeSBhIHVuZSBkZXNjcmlwdGlvbiBkJ3VuZSBkZW1hbmRlIGFtcmljYWluZSwgYXV4IGJhbnF1ZXMgY2FuYWRpZW5uZXMsIGVudHJlIGVuIHZpZ3VldXIgbGUgMWVyIGp1aWxsZXQgMjAxNCwgZXQgcXVpIGNvbmNlcm5lbnQgbGVzIGFtcmljYWlucyBxdWkgcG9zc2RlbnQgbGEgZG91YmxlIG5hdGlvbmFsaXQuIExlIGJ1dCBlc3QgZGUgY29pbmNlciBjZXV4IHF1aSBmb250IGRlIGwndmFzaW9uIGZpc2NhbGUuCiJXaGVuIHlvdSdyZSBhbiBpbm5lciBjaXR5IGtpZCBmcm9tIEFrcm9uLCBPaGlvLCBsaWtlIG15c2VsZiBhbmQgbXkgZ3V5cyBncm93aW5nIHVwLCB5b3UgbG9vayBmb3IgYW55dGhpbmcgdGhhdCBjYW4gaW5zcGlyZSB5b3UsIiBKYW1lcyBzYWlkLiAiWW91J3JlIGFsd2F5cyBqdXN0IHVwIGFnYWluc3QgdGhlIG51bWJlcnMgb2YgZmFpbGluZy4gVGhlIHBlcmNlbnRhZ2VzIG9mIGd1eXMgbGlrZSBteXNlbGYgICBzaW5nbGUgcGFyZW50IGhvdXNlaG9sZCwgb25seSBjaGlsZCwgdW5kZXJwcml2aWxlZ2VkICAgKHRoZSBjaGFuY2Ugb2YpIG1ha2luZyBpdCBvdXQgaXMgbm90IGhpZ2ggYXQgYWxsLiBoYWQgYSBsb3QgdG8gZG8gd2l0aCBtZSBtYWtpbmcgaXQgb3V0LCBhbG9uZyB3aXRoIG15IG1vdGhlciwgYWxvbmcgd2l0aCB0aGUgY2l0eSBpdHNlbGYsIGFsb25nIHdpdGggdGhlIExpdHRsZSBMZWFndWUgY29hY2hlcyBJIGhhZC4gQnV0IE1pa2UgaGFkIG5vIGlkZWEgd2hhdCBoZSB3YXMgZG9pbmcgZm9yIGEga2lkIHRoYXQgd2FzIGdyb3dpbmcgdXAgYSA0NSBtaW51dGUgZmxpZ2h0IGF3YXkgZnJvbSBDaGljYWdvLCB3aGVyZSBoZSB3YXMgcHV0dGluZyBpbiB0aGF0IHdvcmsuIgpUaGUgcHJvYmxlbSBpbiBRUCBpcyB0aGF0IGhlIGp1c3Qgd2FsdHplcyByaWdodCBpbnRvIHlvdXIgdGVhbSBhbmQgb3BlbnMgdXAgb24gdGhlIHRhbmtzLCBhbmQgaGlzIGhlYWx0aCBqdXN0IGRvZXNuIGRyb3AuIEhlIGRvZXMgdG8gcGVvcGxlIHdoYXQgc3ltbWV0cmEgdXNlZCB0by4gIk9oIHNoaXQsIGhlIGhlcmUhIiBldmVyeWJvZHkganVzdCBydW5zLCBsZWF2aW5nIHRoZSB0YW5rcyBhbmQgdGhlIGFuYS96ZW4gdG8gZGllLiBXaG8ga25vd3MsIG1heWJlIGEgY291cGxlIG1vbnRocyBmcm9tIG5vdyB1cyBsb3cgdGllciBwbGVicyB3aWxsIGZpZ3VyZSBpdCBvdXQgYW5kIGhlIGJlIGZpbmUuCkhvd2V2ZXIgaXQgd2lsbCBiZSBzbyBtdWNoIG1vcmUgYmVuZWZpY2lhbCB0byBvbmUncyBoYXBwaW5lc3MgYW5kIHNhbml0eSBpZiB0aGV5IGRvbid0IGZyZXQgdGhlbXNlbHZlcyB3aXRoIHdoYXQgdGhleSB0aGluayBhbm90aGVyIHBlcnNvbiBkb2VzIG9yIGRvZXMgbm90IGRlc2lyZSB0byBzZWUuLiAKSGlnaCByZXNvbHV0aW9uIHNhdGVsbGl0ZSBpbWFnZXMgcmV2aWV3ZWQgYnkgIG9uIFdlZG5lc2RheSBhbHNvIHNob3dlZCB0aGF0IHRoZSBtYWRyYXNhLCBzYWlkIHRvIGJlIHJ1biBieSBtaWxpdGFudCBncm91cCBKYWlzaCBlIE1vaGFtbWFkLCBhcHBlYXJzIHRvIGJlIHN0aWxsIHN0YW5kaW5nIGFuZCB2aXJ0dWFsbHkgdW5jaGFuZ2VkIGZyb20gYW4gQXByaWwgMjAxOCBzYXRlbGxpdGUgcGhvdG8gb2YgdGhlIGZhY2lsaXR5LiAKRG9uJ3QgaGlkZSBiZWhpbmQgdGhlICdjcmltaW5hbHMgdXNlIGlsbGVnYWwgd2VhcG9ucycgYmFycmllciBlaXRoZXI7IHRoZSBleHRyZW1lbHkgbGF4IHZpZXcgb24gZ3VucyBpcyB3aGF0IG1ha2VzIGZpcmVhcm1zIHNvIGVhc3kgdG8gb2J0YWluLCBsZWdhbCBvciBvdGhlcndpc2UKU291dmVudCwgb24gZGl0IHF1ZSBsYSBjdWlzaW5lIGVzdCBhZmZhaXJlIGQnaW50dWl0aW9uIGV0IGxhIHB0aXNzZXJpZSBhZmZhaXJlIGRlIHByY2lzaW9uLiBFdCBxdWUgbGVzIGJvbnMgY3Vpc2luaWVycyBuZSBmb250IGRvbmMgcGFzIGZvcmNtZW50IGRlIGJvbnMgcHRpc3NpZXJzLiBMYSBwcnBhcmF0aW9uIGRlIGNldHRlIHBhbGxhIGZ1dCB1biBiZWwgZXhlbXBsZSBkZSBjZXR0ZSBjdWlzaW5lIGQnaW50dWl0aW9uIGJhc2Ugc3VyIGwnZXhwcmllbmNlLCBzdXIgbGEgcnB0aXRpb24gZGVzIHBhbGxhcyBmZXN0aXZlcyBxdWkgYXBwcmVubmVudCAgcHJwYXJlciBsZSBmZXUgZGUgYm9pcyBxdWkgb2ZmcmlyYSBsZSB0ZW1wcyBldCBsYSBwdWlzc2FuY2UgZGUgY3Vpc3NvbiBhZHF1YXRzLCAgdHJvdXZlciBzYW5zIGNhbGN1bCBuaSByZWNldHRlIGxhIGJvbm5lIGRvc2UgZGUgc2FmcmFuIG91IGRlIHBpbWVudCwgIHZlcnNlciBsZSByaXogYXV0aGVudGlxdWVtZW50IGVzcGFnbm9sIGF1IGJvbiBtb21lbnQsIC4KSVdTIGFsc28gdGFrZXMgb3V0IHRob3NlIGhpZ2ggdmFsdWUgdGFyZ2V0cyBidXQgY2FuIG1pc3MgYXQgbmlnaHQgKHdoaWNoIGNhbWUgdXApLCBidXQgaXMgYWxzbyBtb3JlIGFibGUgdG8gaGFuZGxlIGdlbmVyYWwgcHVycG9zZSB3b3JrIGFuZCBib3NzaW5nIChNMjAwIG1vc3RseSBmaXhlZCBSb0Ygd29ya3MgYWdhaW5zdCBoZXIgZm9yIGdlbmVyYWwgcHVycG9zZSB3b3JrKS4gCkNyZWF0dXJlcyBoZWFsZWQgYnkgdGhpcyBzcGVsbCBhcmUgYWxzbyBjdXJlZCBvZiBhbGwgZGlzZWFzZXMgYW5kIGFueSBlZmZlY3QgbWFraW5nIHRoZW1ibGluZGVkIG9yIGRlYWZlbmVkLiBZb3UgbWF5IGV4cGVuZCAxMiBwb2ludHMgb2YgaGVhbGluZyB0byByZXZpdmUgb25lIGRlYWQgY3JlYXR1cmUgd2l0aGluIHRoaXMgcmFkaXVzLCBhcyB0aG91Z2ggeW91IGhhZCBjYXN0IGEgcmV2aXZpZnkgc3BlbGwgdXBvbiB0aGVtLiAKRm9yIEJyaXRpc2ggQ29sdW1iaWEsIHdoZXJlIHBlb3BsZSBhcmUgc3RydWdnbGluZyB0byBhZmZvcmQgYSBnb29kIGhvbWUgaW4gbWFueSBjb21tdW5pdGllcywgdGhlc2UgcHJlZmFicmljYXRlZCBob21lcyByZXByZXNlbnQgYSBzbWFydCBsaXZpbmcgc29sdXRpb24uIFdpdGggc3RyYWlnaHRmb3J3YXJkIGRlc2lnbnMgYW5kIGhpZ2ggdm9sdW1lIG1hbnVmYWN0dXJpbmcsIHRoZXkgY2FuIGhlbHAgbG93ZXIgY29zdHMgd2hpbGUgbWFpbnRhaW5pbmcgaGlnaCBxdWFsaXR5IHN0YW5kYXJkcy4KSG9jaGllMSAgNCBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpJIHNlZW4gc28gbWFueSBiZWF1dGlmdWxseSBwbGF5ZWQgaGFuZHMgb24gdGhlIGVwdCBieSBoaW0uIApUaGVyZSBhcmUgbm8gbG9uZyBsaW5ldXBzIHRvIGdldCBzdXJnZXJ5IGRvbmUsIGFuZCB0aGVyZSBhcmUgbm8gd2FpdGluZyB0aW1lIHRvIHNlZSBzcGVjaWFsaXN0cy4gCkJyYWluIEluanVyeSBhbmQgUHJvdGVjdGl2ZSBlZmZlY3Qgb2YgS2V0b2dlbmljIERpZXQKV2hhdCBkb2VzIHRoZSBnZW5lcmFsIHBvcHVsYXRpb24gdGhpbmsgb2YgdGhpcz8KVGhlIGJlZXIgZmVzdCBpcyBTYXR1cmRheSwgTWFyY2ggOS5GYXQgQ2F0cyBpbiBUcmVtb250OiBDbGV2ZWxhbmQncyBtb3N0IGNyZWF0aXZlIHJlc3RhdXJhbnQgYWx3YXlzIGltcHJlc3NlcyAocmV2aWV3KSBGYXQgQ2F0cyBpbiBUcmVtb250OiBDbGV2ZWxhbmQncyBtb3N0IGNyZWF0aXZlIHJlc3RhdXJhbnQgYWx3YXlzIGltcHJlc3NlcyAocmV2aWV3KSBUaGVyZSBhcmUgZmV3IG1vcmUgY3JlYXRpdmUsIGludGVyZXN0aW5nLCBpbnNwaXJlZCwgZWNsZWN0aWMgICBhbmQgZGVsaWNpb3VzICAgcmVzdGF1cmFudHMgaW4gdG93bi40IGRheXMgYWdvICsgQnkgTGF1cmEgRGVNYXJjbywgVGhlIFBsYWluIERlYWxlckJlZXIgY2FsZW5kYXI6IEdyZWF0IExha2VzIGhhcyAyIGJhcnJlbCBhZ2VkIHJlbGVhc2VzLCBHcmVlbmhvdXNlIFRhdmVybiBob2xkcyBiZWVyIGRpbm5lciwgbW9yZSBCZWVyIGNhbGVuZGFyOiBHcmVhdCBMYWtlcyBoYXMgMiBiYXJyZWwgYWdlZCByZWxlYXNlcywgR3JlZW5ob3VzZSBUYXZlcm4gaG9sZHMgYmVlciBkaW5uZXIsIG1vcmUgR3JlYXQgTGFrZXMgQnJld2luZyBoYXMgYmFycmVsIGFnZWQgcmVsZWFzZXMgY29taW5nIHVwLCBUaGUgR3JlZW5ob3VzZSBUYXZlcm4gd2lsbCBob2xkIGEgYmVlciBkaW5uZXIgZmVhdHVyaW5nIEphY2tpZSBPJ3MsIGFuZCBtYW55IG90aGVyIGJlZXIgZXZlbnRzLCB0YXN0aW5ncywgZGlzY291bnRzIGFuZCBkaW5uZXJzIGFyZSBzZXQgaW4gTm9ydGhlYXN0IE9oaW8uRWF0IGF0IEpvZSdzOiBOb3J0aGVhc3QgT2hpbydzIGJlc3Qgd2Vla2VuZCBicnVuY2hlcywgYnJlYWtmYXN0cyBFYXQgYXQgSm9lJ3M6IE5vcnRoZWFzdCBPaGlvJ3MgYmVzdCB3ZWVrZW5kIGJydW5jaGVzLCBicmVha2Zhc3RzIE91ciBicnVuY2ggYW5kIGJyZWFrZmFzdCBzZXJpZXMgdGFrZXMgdXMgdG8gRWF0IGF0IEpvZSdzIGluIFNvdXRoIEV1Y2xpZC4gCkJhZENoaWxpaSAgMSBwb2ludCAgc3VibWl0dGVkIDEgbW9udGggYWdvCkUzOiBPcHBvbmVudCBoaXRzIG9uIHRoZSB0dXJuClBvbGljZSBkZXBhcnRtZW50IGxhd3llcnMgaGFkIHRvbGQgYSBqdWRnZSBpdCB3b3VsZCBiZSB0aW1lIGNvbnN1bWluZyBhbmQgY29zdGx5IHRvIGNvbXBseSB3aXRoIHRoZSBtZWRpYSBvdXRsZXRzJyBwdWJsaWMgcmVjb3JkcyByZXF1ZXN0cyBhbmQgc2FpZCB0aGUgbWF0ZXJpYWxzIGNvdWxkIGRpc2Nsb3NlIGludmVzdGlnYXRpdmUgdGVjaG5pcXVlcy4KRW52aXJvbm1lbnRhbCAgIFRoZXNlIHJpc2sgZmFjdG9ycyBpbmNsdWRlIHRoZSBlbnZpcm9ubWVudGFsIHRlbXBlcmF0dXJlIGFuZCB0aGUgc3VyZmFjZSB0aGF0IGF0aGxldGVzIGFyZSBwbGF5aW5nIG9uLiBJZiBhdGhsZXRlcyBhcmUgdHJhaW5pbmcsIG9yIGNvbXBldGluZyBvbiBzdXJmYWNlcyB0aGF0IGFyZSB0b28gaGFyZCBvciB0b28gc29mdCB0aGVuIHRoaXMgY2FuIGxlYWQgdG8gZXhjZXNzaXZlIGZvcmNlIGJlaW5nIHBsYWNlZCBvbiBjZXJ0YWluIGpvaW50cywgdGlzc3VlcyBhbmQgbXVzY2xlcyB3aGljaCBjYW4gbGVhZCB0byBhbiBpbmNyZWFzZWQgcmlzayBvZiBzcHJhaW5zIGR1ZSB0byBmZWV0IGJlY29taW5nIHN0dWNrIGluIHdldCBzdXJmYWNlcy4gQWxzbywgcGxheWluZyBvbiB1bmV2ZW4gc3VyZmFjZXMgc3VjaCBhcyBhIGNhbWJlcmVkIHJvYWQgb3IgcGF0aCBjYW4gcHV0IGluY3JlYXNlZCBwcmVzc3VyZSBvbiBvbmUgc2lkZSBvZiB0aGUgYm9keS4gQW4gZXhhbXBsZSBvZiBhbiBlbnZpcm9ubWVudGFsIHJpc2sgZmFjdG9yIGNvdWxkIGJlIHBsYXlpbmcgZm9vdGJhbGwgb24gYSBzbGlwcGVyeSBzdXJmYWNlIGNvdWxkIHJlc3VsdCBpbiBwbGF5ZXJzIHNsaXBwaW5nIG92ZXIgYSBsb3QgZWFzaWVyIHBvdGVudGlhbGx5IGluanVyaW5nIHRoZW1zZWx2ZXMgb3IgYW4gb3Bwb25lbnQuCkhlIHNhaWQgdGhlIHRpbWluZyBpcyByaWdodC4gCihJbnRlcm1kZSBwZXJzb25uZWwgOiBsb3JzcXVlIGplIHJlbmNvbnRyYWkgSmVhbiBDaGFwZWxsZSwgYW5uZSAxOTY2LCBjZWx1aSBjaSB2b3VsdXQgIHRvdXQgcHJpeCBtJ2VuZm9uY2VyIGRhbnMgbGEgdHRlIGwnaWRlIHNlbG9uIGxhcXVlbGxlIGxhIEJEIGRldmFpdCByZXN0ZXIgY29uZmluZSAgdW4gcHVibGljIGQnZ2Ugc2NvbGFpcmUuIEQnYWlsbGV1cnMsIG0nYXNzbmEgdCdpbCA6IGxlcyByYXJlcyBhZHVsdGVzLCBlbiBwYXJ0aWN1bGllcnMgbGVzIGJpZGFzc2VzIHMnZW5udXlhbnQgIGxhIGNhc2VybmUsIHF1aSBsaXNlbnQgZW5jb3JlIGRlIGxhIGJhbmRlIGRlc3NpbmUgbm91cyBsZXMgdHJhaXRvbnMgZGUgZ3JhbmRzIGNvdWlsbG9ucy4uIAoiQXVzdHJhbGlhIGhhcyBzdHJvbmcgY29uc3VtZXIgcHJvdGVjdGlvbiBsYXdzLCIgc2FpZCBUaW0gQ29zdGVsbG8sIG9mIHRoZSBBbGxpYW5jZSBmb3IgR2FtYmxpbmcgUmVmb3JtLCBzdXBwb3J0aW5nIHRoZSBsYXdzdWl0LiAiU28gcHV0dGluZyBkYW5nZXJvdXNseSBhZGRpY3RpdmUgcG9raWVzIG9uIHRyaWFsIGZvciBtaXNsZWFkaW5nIGFuZCBkZWNlcHRpdmUgY29uZHVjdCBoYXMgZ2l2ZW4gaG9wZSB0byBldmVyeW9uZSBjYW1wYWlnbmluZyB0byB3aW5kIGJhY2sgQXVzdHJhbGlhIHRyYWdpYyByZWNvcmQgb2YgYmVpbmcgdGhlIGJpZ2dlc3QgZ2FtYmxlcnMgaW4gdGhlIHdvcmxkLiIgQXQgdGhlIGNvcmUgb2YgdGhlIGNhc2Ugd2lsbCBiZSB0aHJlZSBrZXkgY2xhaW1zLiBUaGUgZmlyc3QgaXMgdG8gZG8gd2l0aCB0aGUgdW5ldmVuIHNwcmVhZCBvZiBzeW1ib2xzIG9uIERvbHBoaW4gVHJlYXN1cmUgZml2ZSBzcGlubmluZyByZWVscy4gCllvdSBsaWtlbHkgdG8gYmUganVzdCBhbm90aGVyIG51bWJlciBvbiB0aGUgbGlzdC5JIGFsc28gdGhpbmsgc2V4IGlzIGZvciBsb3ZlLCBJIHBlcnNvbmFsbHkgd291bGRuIGhhdmUgc2V4IHdpdGggYW55b25lIEkgd2FzbiBpbiBsb3ZlIHdpdGguIFNvIHRoZXJlIHRoYXQgYXMgd2VsbC5NYXJyaWFnZSBpcyBqdXN0IGEgbWFkZSB1cCBzb2NpYWwgdGl0bGUgICBpdCBoYXMgbm8gYmlvbG9naWNhbCBiYXNpcy4gQnV0IGxvdmUsIG9uIHRoZSBvdGhlciBoYW5kLCBkZWZpbml0ZWx5IGhhcyBhIGJpb2xvZ2ljYWwgYmFzaXMuIApJdCBpcyBhIGJpdCBkaWZmZXJlbnQgZnJvbSB0aGUgbGF0dGVyIHdpdGggdGhlIG1vdmUgcHJpb3IgdG8gdGhlIGZsb3AuIFRoZSBpbml0aWFsIHN0YXJ0aW5nIGhhbmQgaXMgY29tcG9zZWQgb2YgZm91ciBob2xlIGNhcmRzIGRlYWx0IGZhY2UgZG93bi4gCll1cHAgdGhpcyBleGFjdGx5IGhvdyBhIGNvbmZpZGVudCBwZXJzb24gd2hvIGdldHMgdG9ucyBvZiB3b21lbiBhbmQgaGFzIGEgbGlmZSBvdXRzaWRlIG9mIHJlZGRpdCB3b3VsZCByZWFjdCB0byBjcml0aWNpc20vcyBsb2wKTWFpcyB2b2lsIGxlIHNldWwgdGl0cmUgZCdhdXRvcml0IGRlIGNlIHR5cGUsIGNlIG5lIHNvbnQgcGFzIHNlcyB0dWRlcyBvdSBzb24gaW50ZWxsaWdlbmNlIG1haXMgbGUgZmFpdCBxdWUgRG9uYXRpbmkgbCdhaXQgcmVwY2guIAoiVGhlIGNoYWlycyBhcmUgdml0YWxseSBpbXBvcnRhbnQsIGFuZCB3ZSB0YWtlIGEgbG90IG9mIGNhcmUgaW4gY2hvb3NpbmcgdGhlIHJpZ2h0IGNoYWlyIHdpdGggdGhlIHJpZ2h0IGxvb2ssIiBzYWlkIEJyaWFuIEJlbm93aXR6LCBzZW5pb3IgdmljZSBwcmVzaWRlbnQgb2YgZ2FtaW5nIG9wZXJhdGlvbnMgYXQgdGhlIENvc21vcG9saXRhbi4gCkJlc3QgT25saW5lIFBva2VyIEJvbnVzIE9mZmVycyBQcm9tb3Rpb25zClRoZXJlJ3MgYSB2ZXJ5IGdvb2QgY2hhbmNlIHRoYXQgaWYgUG9sayBhbmQgY29tcGFueSdzIGdpcmxmcmllbmRzL3dpdmVzIG1ldCBEYW4gQiBpbiBoaXMgZWxlbWVudCBpbiBwZXJzb24gdGhhdCB0aGVyZSB3b3VsZCBzb21lIGN1cmlvc2l0eS9hdHRyYWN0aW9uIGJyZXdpbmcgYW5kIG1lbiBhcmUgZGVzaWduZWQgYnkgbmF0dXJlIHRvIHBpY2sgdXAgb24gdGhvc2UgY3VlcyBmcm9tIHRoZWlyIG1hdGVzLiBTaW1pbGFybHksIHNvbWUgb2YgdGhlIHNtYXJ0ZXIvbmVyZGllciBob3Qgd29tZW4gd2hvIERhbiBCIGhhbmdzIGFyb3VuZCBtYXkgdGFrZSBhIGxpa2luZyB0byBEb3VnIGlmIHRoZXkgZXZlciBtZXQuLiAKQnV0IGl0IHJ1aW5lZCBtYW55IG9mIG15IHJlbGF0aW9uc2hpcHMgYW5kIGZyaWVuZHNoaXBzIGFzIHBlb3BsZSBjb3VsZG4gc3RhbmQgbWUgYW55bW9yZS4gCkludGVybmV0IHBva2VyIGRvZXMgbm90IHZpb2xhdGUgYW55IGZlZGVyYWwgbGF3IG9yIHRoZSBsYXdzIG9mIG1vc3Qgc3RhdGVzLiBDb3VydCBvZiBBcHBlYWxzIGZvciB0aGUgNXRoIENpcmN1aXQgaW4gdGhlIDIwMDIgSW4gUmU6IE1hc3RlckNhcmQgZGVjaXNpb24gICBzdGF0ZWQgdGhhdCB0aGUgMTk2MSBXaXJlIEFjdCwgYW50aSBnYW1ibGluZyBsZWdpc2xhdGlvbiByb3V0aW5lbHkgY2l0ZWQgYnkgdGhlIEp1c3RpY2UgRGVwYXJ0bWVudCB0byBtYWxpZ24gb25saW5lIHBva2VyLCBhcHBsaWVkIG9ubHkgdG8gb25saW5lIHNwb3J0cyBiZXR0aW5nLiAKQW5kIGtlZXAgdGhhdCBsaW5lIG9mIGNvbW11bmljYXRpb24gb3Blbi4gTWF5YmUgaGF2ZSBlYXJidWRzIHNvIHlvdSBjYW4gaGF2ZSBtdXNpYyBpbiB0aGUgZWFyIGNsb3Nlc3QgdG8gaGltLiAKV2FudCBUbyBNYWtlIE1vbmV5ICAgUmVhZCBUaGlzIFJldmlldyBPbiBPbmxpbmUgQ2FzaW5vIEJvbnVzCkluIG90aGVyIHdvcmRzLCBpdCBkb2Vzbid0IG1hdHRlciBob3cgbXVjaCB5b3UgZXhlcmNpc2Ugb3IgaG93IHdlbGwgeW91IGVhdC4gSWYgeW91IHNpdCBtb3N0IG9mIHRoZSBkYXksIHlvdXIgcmlzayBvZiBsZWF2aW5nIHRoaXMgd29ybGQgY2x1dGNoaW5nIHlvdXIgY2hlc3Qgd2hldGhlciB5b3UncmUgYSBtYW4gb3Igd29tZW4gYXMgbXVjaCBhcyBkb3VibGVzLgpUaGF0IHRpbWUsIHdlIHdlcmUgZW1wbG95aW5nIGFib3V0IDE2IHBlb3BsZSBhbmQgcmFuIHRocmVlIHNoaWZ0cywgaGUgc2F5cy4gCllvdSB3aWxsIGFsd2F5cyBlbmNvdW50ZXIgdGhlIHNvZnR3YXJlIGFzcGVjdCB3aGVuIHlvdSByZWdpc3RlciwgbG9naW4sIGNsYWltIGJvbnVzIGFuZCBwbGF5IG9uIHRoZSBwb2tlciBzaXRlLiAKUG9rZXIgY29kZSB3aWxsIGJlIHByb3ZpZGVkIHRvIGEgdXNlciB0byBnZXQgdGhlIGFubm91bmNlZCBmcmVlIGNyZWRpdCBpbnRvIHRoZWlyIGFjY291bnQuIFRoZSBnZW5lcmFsIHJ1bGUgdG8gZ2V0IGNyZWRpdCBpcyByZWdpc3RlcmluZyB0byBzaXQgd2l0aCBhcHByb3ByaWF0ZSBmZWVzIGFuZCBzZWxlY3RpbmcgdGhlIHBhY2thZ2UuLiAKQXJlIGdvb2QgaW4gV2luZHNvciByaWdodCBub3csIHRoZSBtYXlvciBzYWlkLiBBbmQgaGUgZXhwZWN0cyBjb250aW51ZWQgZ29vZCB0aW1lcyBhcyBtYWpvciBwcm9qZWN0cyBsaWtlIHRoZSBHb3JkaWUgSG93ZSBicmlkZ2UgYW5kIG5ldyBhY3V0ZSBjYXJlIGhvc3BpdGFsLCBhcyB3ZWxsIGFzIHRoZSBiZW5lZml0cyBvZiBhIG5ldyBKZWVwIHBsYW50IGp1c3QgYW5ub3VuY2VkIGluIERldHJvaXQsIHRha2UgaG9sZC4KU28gcmVhbGx5LCBTbG92YWtzIGhhZCB0byBidXkgaW50byB0aGUgYmlnZ2VyIGJhaWxvdXQgZnVuZC4gQnV0IHRoZXkgZGlkbiBoYXZlIHRvIGxpa2UgaXQuCiJTbyBJIHVuZGVyc3RhbmQuIFdoeSBhcmUgeW91IG5vdCB3b3JraW5nIGZvciB5b3VyIG93biBjb3VudHJ5PyIKSSBsb29rZWQgdXAgYXQgbXkgbW9tIHNoZSB0b2xkIG1lIHRvbyBiZSBjYWxtIGFuZCBzbyBJIHdhcyBzdGlsbCBpbiBzb21lIHN0YXRlIG9mIHNob2NrIEkgYXNzdW1lIEkgYXNrZWQgaGVyIGlmIEkgd2FzIGdvaW5nIHRvIGRpZS4gCklmIHlvdSBjYW5ub3QgZmluZCBhIGNvdXJzZSB3aGljaCBzdWl0cywgdGhlbiB0aGVyZSBhcmUgYSBudW1iZXIgb2YgYmFieSBtYXNzYWdlIHZpZGVvcyBvbiB0aGUgbWFya2V0LiIgIHBlcmhhcHMgSSBzaG91bGQgbWFrZSBpdCBqdW1wIG91dCBtb3JlPzMpICAgU3BlY2lhbCBuZWVkcyAgIGV4Y2VsbGVudCBwb2ludCAgIHdpbGwgYWRkIGl0IVdlIHdlcmUgYWR2aXNlZCBvZmYgYmFieSBvaWwuIEkndmUgaGVhcmQgb3RoZXJzIHJlY29tbWVuZCBjb2NvbnV0IG9pbCBhbmQgb2xpdmUgb2lsLiAKU3RheSBpbiB0aGUgTG9kZ2UgZm9yIGNvbnZlbmllbnQgYWNjZXNzIHRvIHRoZSBjYXNpbm8gYW5kIGVuam95IHRoZSBpbmRvb3Ivb3V0ZG9vciBzd2ltbWluZyBwb29sLiAKSGUgZG9lc24ndCBmaWdodCB5b3UsIGhlIGxldCdzIHlvdSBmaWdodCB5b3Vyc2VsZi4gClRoZSBwcml6ZXMgZm9yIG9ubGluZSBnYW1pbmcgYXJlIHByZXR0eSByaWRpY3Vsb3VzIGFuZCB3aG9ldmVyIGNhbiByZWFjaCB0aGUgbmV4dCBsZXZlbCBpbiBBSSB3aWxsIG5vdCBqdXN0IGJlIGFibGUgdG8gY29ucXVlciBwb2tlciwgYnV0IHdpbGwgaGF2ZSBhIHdpZGUgb3BlbiBmaWVsZCBvZiBlYXN5IHBpY2tpbmdzIHRvIGNob29zZSBmcm9tLiBJdCBpcyBkaWZmaWN1bHQsIGJ1dCB3b3J0aCBzdHVkeWluZyBmb3IuIApXSElQUEVEIENSRUFNLiBUaGlzIGlzIGEgY3V0ZSBvbmUuIElmIHlvdSBoYXZlIGxlZnRvdmVyIHdoaXBwZWQgY3JlYW0gb3IgYSBjYW4gdGhhdCBpcyBuZWFyaW5nIGl0cyBleHBpcmF0aW9uIGRhdGUsIHNjb29wIG9yIHNwcmF5IGZhdCBkb2xsb3BzIG9mIHdoaXBwZWQgY3JlYW0gb250byBhIHNtYWxsIHRyYXkgb3IgcGxhdGUuIApIaW5lcm1hZCAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxOSBob3VycyBhZ28KVHdpdHRlciBCIGRvZXNuIGV4aXN0IGF0IGFsbC4gCkZvciBleGFtcGxlLCBmb3IgYSBub3JtYWxseSBkaXN0cmlidXRlZCByYW5kb20gdmFyaWFibGUsIEUoWCkgPSAwLiAKRGlmZiBhbiB0aHJlYXQgYWZ0ZXIgY2F1c2luZyAzMCwwMDAgZGVhdGhzIGluIDIwMTEuIEl0IGlzIG9mdGVuIHBpY2tlZCB1cCBieSBwYXRpZW50cyBvdmVyIDY1IHdobyBhcmUgaG9zcGl0YWxpemVkIGFuZCByZWNlaXZlIGJyb2FkIHNwZWN0cnVtIGFudGliaW90aWNzLiAKSXZlIGJlZW4gdGhpbmtpbmcgYWJvdXQgdGhpcyBsYXRlbHkgdG9vLiBXaGF0IHRoZSBiaWxsaW9uYWlyZXMgb3duIGlzIGEgYnVuY2ggb2YgcGFwZXIgdGhhdHMgcGFydCBvZiBhbiBpbmNlbnRpdmUgc3lzdGVtIHRvIGdlbmVyYXRlIGluIHRoZW9yeSAoYW5kIHByYWN0aWNlKSBlZmZpY2llbnQgcHJvZHVjdGlvbiBvZiBnb29kcywgc2VydmljZXMgYW5kIGNhcGl0YWwgd2l0aCBleGlzdGluZyBsYWJvciBhbmQgY2FwaXRhbCBvZiB0aGUgZWNvbm9teS4gCkFkZCBBcnRwb3AgSm9hbm5lIGRlbHV4ZWFsYnVtcy4gSGVyIGxhdGVzdCBzaW5nbGUgaXMgIlRoZSBDdXJlLiIgSSBleGNsdWRlZCBoZXJjb2xsYWJvcmF0aW9uIHdpdGggVG9ueS4gTGFzdCwgdGhlc2Ugc29uZ3MgYW5kIGFsYnVtcyBhcmUgbGlzdGVkIGluIG5vIHBhcnRpY3VsYXIgb3JkZXIuKGxhc3QgZWRpdDogMDcwOTE3JykgKEZ1bGwgQW5zd2VyKS4gClllYXIgMjAyMwpXZSB3b3VsZG4gZG8gdGhhdCBmb3IgYSA0IDgwIGxiIGdyYW5kbWEuIApHb29kIHBlb3BsZSBsb3N0IGV2ZXJ5dGhpbmcgd2hlbiB0aGUgYWdlbmN5IGNsb3NlZCwgYW5kIGl0IHdhcyBvbiB5b3VyIHdhdGNoLiAKTElOQ09MTiwgTmViLiBUaGVyZSBhcmUgcGxlbnR5IG9mIG9wdGlvbnMgZm9yIHBlb3BsZSBsb29raW5nIGZvciBhIG1hc3NhZ2UgaW4gTmVicmFza2EsIGJ1dCBpZiB5b3UgYSBob3JzZSwgeW91IG91dCBvZiBsdWNrLgpUaGVpciBmb3JlY2FzdGluZyBpcyBhbHdheXMgaW5jb3JyZWN0IHRvbywgZXZlbiB3aGVuIGl0J3Mgc25vd2luZyBhdCBsb3dlciBlbGV2YXRpb25zLkkgdW5kZXJzdGFuZCB0aGVpciBmaW5hbmNpYWwgaW5jZW50aXZlIHRvIGtlZXAgY2FtcHVzIG9wZW4sIGp1c3QgYmVpbmcgdXBmcm9udCBhYm91dCB0aGUgY29uZGl0aW9ucyB3b3VsZCBnbyBhIGxvbmcgd2F5IGluIGJ1aWxkaW5nIGNyZWRpYmlsaXR5LCBhbmQgYWxsb3dpbmcgcGVvcGxlIHdpdGggZGlzYWJpbGl0aWVzIG9yIHRyYW5zcG9ydCB0aGF0IGNhbid0IGhhbmRsZSB0aGUgc25vdyB0aGUgYWJpbGl0eSB0byBwbGFuIGFuZCBwcmVwYXJlLiAKSSBjYW4ndCBjaGFuZ2UgdGhlIGNvbG9yIG9mIG15IHNraW4gYW5kIG5vciBzaG91bGQgSSBiZSBhc2tlZCB0by4gCkNlbnRlciBmb3IgQWNjZXNzaWJsZSBFZHVjYXRpb24KUFMzIGFuZCBQUzQgY29udHJvbGxlcnMgYWxzbyB3b3JrIHdpdGggc29tZSBhZnRlcm1hcmtldCBzb2Z0d2FyZSBhbmQgZWl0aGVyIGEgVVNCIGNhYmxlIG9yIGEgZGVjZW50IGJsdWV0b290aCBhZGFwdGVyLi4gCkkgYm91Z2h0IGEgZmxvb3IgbW9kZWwgd2l0aCBhcHByb3ggNDQwMCBob3VycyBvbiBpdCBhbmQgZGlzY292ZXJlZCBzaWduaWZpY2FudCBidXJuIGluIG9uIGl0IG9uY2UgSSBnb3QgaXQgaG9tZS4gCklmIEJGIG1vbSB0cmllcyB0byBrZWVwIGhpcyBkb2N1bWVudHMgYXdheSBmcm9tIGhpbSBpdCBpcyBhY3R1YWxseSBpbGxlZ2FsLi4gCk5vbiBtZWRpY2luYWwgY2FubmFiaXMgYmVjYW1lIGxlZ2FsIGluIENhbmFkYSBvbiBPY3RvYmVyIDE3LCAyMDE4LiBUaGUgbnVtYmVyIG9mIHBlb3BsZSBlbXBsb3llZCBpbiBjYW5uYWJpcyByZWxhdGVkIGpvYnMgaW4gTm92ZW1iZXIgd2FzIDEwLDQwMCwgYW4gaW5jcmVhc2Ugb2YgNyw1MDAgKCsyNjYlKSBmcm9tIDEyIG1vbnRocyBlYXJsaWVyLiBFbXBsb3ltZW50IGluIHRoZXNlIHR5cGVzIG9mIGpvYnMgdHJlbmRlZCB1cCB0aHJvdWdob3V0IG1vc3Qgb2YgMjAxOC4gRXN0aW1hdGVzIGZvciB0aGlzIHNlY3Rpb24gYXJlIHRocmVlIG1vbnRoIG1vdmluZyBhdmVyYWdlcyBhbmQgYXJlIG5vdCBzZWFzb25hbGx5IGFkanVzdGVkLiBTZWUgdGhlIG5vdGUgYmVsb3cgZm9yIG1vcmUgZGV0YWlscyBhbmQgZGVmaW5pdGlvbnMuCkl0IHdhcyB0b28gbXVjaCBvZiBhIGNvaW5jaWRlbmNlIHRoYXQgdGhleSBzdGFydGVkIHRoZWlyIHJhbGxpZXMgdG9nZXRoZXI7IHJlYWNoZWQgSXNsYW1hYmFkIHRvZ2V0aGVyIGFuZCB0aGVuIGJyb2tlIGludG8gdGhlIFJlZCBab25lIHNpbXVsdGFuZW91c2x5LiBTaGVycGFvIHBhcnR5IGlzIG9uZSBvZiB0aGUgbGVhZGluZyBjb250ZW5kZXJzIGZvciBLUCBjaGllZiBtaW5pc3RlcnNoaXAgd2hpbGUgUGVydmV6IEtoYXR0YWsgZGFuY2VzIGF3YXkgaGlzIHRpbWUgaW4gSXNsYW1hYmFkLiBPbmUgcGFydHkgbGVhZGVyIGFmdGVyIGFub3RoZXIgc3Rvb2QgdXAgdG8gdmVudCBoaXMgc3BsZWVuIGF0IEltcmFuIFFhZHJpIGR1by4gClNwb25zb3JlZCBieSBUaGUgQnlyb24gQmF5IEJyZXdlcnkgd2hvIHdpbGwgYmUgaGF2aW5nIGFuIG91dGRvb3IgcG9wIHVwIGJhciBvbiBzaXRlLiBQYXJraW5nIG9uIHNpdGUgaXMgYnkgZ29sZCBjb2luIGRvbmF0aW9uLiAKSG93ZXZlciwgdGhlIGFwcGxpY2F0aW9uIGRpZCBub3QgcHJvY2VlZCBhZnRlciBjb21tdW5pdHkgb3Bwb3NpdGlvbiB3aGljaCBpbmNsdWRlZCB0aGUgY291bmNpbCBkZWNsYXJpbmcgaXRzIGRldGVybWluYXRpb24gdG8gcmVtYWluIHBva2llIGZyZWUuIApBZ2FpbiBpdCBpcyBkaWZmZXJlbmNlIGluIGdlbmVyYWwgYXBwcm9hY2ggdG8gZmFpcm5lc3MuIFdoeSBkbyB0aGV5IGhhdmUgdGhlc2UgcHJvZHVjdCByZXR1cm4gcG9saWNpZXMgKGNvb2wgb2ZmKT8gSXQgaXMgc3RyYWlnaHQgdW5mYWlyIHRvIGJ1c2luZXNzISBBIHBlcnNvbiBrbm93aW5nbHkgYm91Z2h0IHRoaXMgZ29vZCwgd2h5IGRvIHRoZXkgaGF2ZSB0byB0YWtlIGl0IGJhY2s/IEFuZCBpdCBpcyBhIGxhdyBpbiBFdXJvcGUsIGFuZCB5b3UgY2FuIHVuZGVyc3RhbmQgd2h5LiAKQXJ0aXN0IHRoZW4gd29yayBvbmUgb24gb25lIHdpdGggY2xpZW50cyB0byBjb21wbGV0ZSB0aGUgZGVzaWduLi4gCk9ubHkgbm93IGFsbCB0aGVpciBjYXJkc2FyZSBzaG93bi4gR29vZCBsdWNrIGl0IHdvcmtzIGZvciBtZS4gClRoaW5raW5nIENsaW50b24gY291bGQgZGl0Y2ggdGhlbSB0byBmbHkgb24gYSBwbGFuZSB0byBhIHByaXZhdGUgaXNsYW5kIGlzIGEgaHVnZSBmYWxzZSBhc3N1bXB0aW9uLiAKVG95b3RhIGJlbGlldmVzIGEgbGFyZ2UgcG9vbCBvZiBjb25zdW1lcnMgd2lsbCB3YW50IGh5YnJpZHMgdG8gYm9vc3QgZnVlbCBlZmZpY2llbmN5IG9yIHBlcmZvcm1hbmNlLiBIeWJyaWRzIGFsc28gcHJvdmlkZSBhIHRlY2hub2xvZ2ljYWwgaGFsbyBmb3IgYWxsIFRveW90YSB2ZWhpY2xlcy4KRGlzdHJpYnV0aXZlIG9mIHRoZSBtYXJrZXQgaXMgZGV0ZXJtaW5lZCBieSB0aGUgY3VzdG9tZXIncyBpbmNvbWUsCkJ1dCBsb29raW5nIGF0IGl0IGFzIGEgY2hvaWNlLCBhbG9uZyB3aXRoIHRoZSBvdGhlciBjaG9pY2VzIG9uZSBjYW4gbWFrZSBmb3IgdGhlaXIgcmVsYXRpb25zaGlwIHJlYWxseSBwdXRzIHRoaW5ncyBpbnRvIHBlcnNwZWN0aXZlLi4gClRoZSBDaGluZXNlIGdvdmVybm1lbnQgaGFzIGZvciB5ZWFycyBiZWVuIGVuZ2FnZWQgaW4gcHJhY3RpY2VzIGluY2x1ZGluZyBzdWJzaWRpemluZyBtYWpvciBpbmR1c3RyaWVzIHRoYXQgbGF3bWFrZXJzIHNheSBwdXRzIHRoZSBuYXRpb24gYXMgYW4gdW5mYWlyIGNvbXBldGl0aXZlIGFkdmFudGFnZS4gVGhvdWdoIHRoZSBUcnVtcCBBZG1pbmlzdHJhdGlvbiBzbGFwcGVkIHJldGFsaWF0b3J5IHRhcmlmZnMgb24gYmlsbGlvbnMgb2YgZG9sbGFycyB3b3J0aCBvZiBDaGluZXNlIGdvb2RzIGxhc3QgeWVhciwgdGhhdCBkb2VzbiBjaGFuZ2UgdGhlIHVuZXZlbiB0cmFkZSByZWxhdGlvbnNoaXAuIGdvb2RzIGluY2x1ZGluZyBtZXRhbHMsIHNveWJlYW5zIGFuZCBhdXRvbW90aXZlcyAgbWFqb3IgaW5kdXN0cmllcyBjb25jZW50cmF0ZWQgaW4gc3RhdGVzIHRoYXQgc3VwcG9ydGVkIFRydW1wIGluIHRoZSAyMDE2IGVsZWN0aW9uLiB0cmFkZSBkZWZpY2l0LCB0aGUgQ29tbWVyY2UgRGVwYXJ0bWVudCByZXBvcnRlZCBXZWRuZXNkYXkgdGhhdCBpdCByb2NrZXRlZCBwYXN0IHRoZSAyMDA4IHJlY29yZCBhdCAxOSBwZXJjZW50LiBoYXMgaGl0IGEgaGlzdG9yaWMgaGlnaCBvZiAkODkxLjMgYmlsbGlvbi4gSXQgaXMgdW5saWtlbHkgdGhhdCB0aGUgdHJhZGUgZGVmaWNpdCB3aXRoIENoaW5hIGlzIGdvaW5nIHRvIHNocmluayBhbnl0aW1lIGluIHRoZSBuZWFyIGZ1dHVyZSwgcHV0dGluZyB0aGUgY3JlZGliaWxpdHkgb2YgUHJlc2lkZW50IFRydW1wIEZpcnN0IGVjb25vbWljIHBsYXRmb3JtIHBvdGVudGlhbGx5IGluIGplb3BhcmR5LgpTdGF0dXRvcnkgbm90aWNlIGFuZC9vciBzZXZlcmFuY2UgcGF5IGFuZCBFbXBsb3ltZW50IEluc3VyYW5jZSAoRUkpIHNlZWsgdG8gc29mdGVuIHRoZSBibG93IG9mIGEgam9iIGxvc3MuIFRoZXNlIHNhZmV0eSBuZXRzIGFyZSBqdXN0IHRlbXBvcmFyeSwgYW5kIGl0IG1heSBiZSB0aGUgcmlzayBvZiBsb3dlciB0aGFuIGV4cGVjdGVkIGVhcm5pbmdzIG92ZXIgYSBwcm9sb25nZWQgcGVyaW9kIG9yIGEgY2FyZWVyIGN1dCBzaG9ydCBkdXJpbmcgcHJpbWUgZWFybmluZyB5ZWFycyB0aGF0IGNvdWxkIGJlIG1vcmUgb2YgYW4gaXNzdWUuLiAKSGF2ZSB0aGlzIGhlcml0YWdlIGhvbWUgdGhhdCBJIGp1c3Qgd2FudCB0byBvcGVuIHVwIHRvIHRoZSBwdWJsaWMsIGhlIHNhaWQuIApNb3N0IGhhdmUgYmVlbiBpbnZvbHZlZCB3aXRoIGNsaW5pY2FsIHJlc2VhcmNoIGZvciB5ZWFycyBhbmQgYXJlIGZvcnR1bmF0ZSBpbiBoYXZpbmcgcmVzZWFyY2ggdGVhbXMgYXJvdW5kIHRoZW0gdGhhdCBoZWxwIHdpdGggdGhpcyBldmVyIGluY3JlYXNpbmcgd29ya2xvYWQsIGJ1dCBmb3IgbmV3IGludmVzdGlnYXRvcnMgd2l0aG91dCBhbnkgaW5mcmFzdHJ1Y3R1cmUgdG8gc3VwcG9ydCB0aGVtIGNsaW5pY2FsIHJlc2VhcmNoIGhhcyBiZWNvbWUgdG9vIHRpbWUgY29uc3VtaW5nIGFuZCBjaGFsbGVuZ2luZyB0byBlbmdhZ2Ugd2l0aC4uIApJbnN0YWxsIG5ldyBmaWx0ZXIuIApXaW5uZXJzIGVhcm4gZ2lmdCBjYXJkcyBvciBhIHBhaWQgYmFyIHRhYi4gCnN0eWxlIGdhZGdldHMgdG8gY2hlYXQgY2FzaW5vCklmIHlvdSBwbGF5IHNpdCBhbmQgZ28gdGFibGVzIGV2ZW4gb25jZSBpbiBhd2hpbGUsIHRoaXMgaXMgdGhlIG9uZSBvbmxpbmUgcG9rZXIgcHJvZ3JhbSB0aGF0IGNhbiBwYXkgZm9yIGl0c2VsZiBpbiB0aGUgc2FtZSBkYXkuIEluIGFuIGlkZWFsIHdvcmxkIHlvdSB3b3VsZCB3YW50IHRvIHVzZSB5b3VyIHBva2VyIGNhbGN1bGF0b3IgYWxvbmdzaWRlIFBva2VyIFByb3BoZWN5LiAKU2NoYWRlLCBkYXNzIGVyIGlobiBuYWNoIDQgSmFocmVuIGJlZW5kZXQgaGF0ICAgYWJlciBkb3J0IHJ1bXN0YmVybiBsb2hudCBzaWNoIGltbWVyIG5vY2guIApIZSByZXBsaWVkLiBBIGhhcmQgb25lLiAKV2hpbGUgdGhlIGNlbnRyYWwgaWRlYSBpcyBwZXJoYXBzIGFib3V0IHRlc3RpbmcgdGhlIGRlcGVuZGFiaWxpdHkgb2YgZnJpZW5kcywgaXQgZ2V0cyBmdWxmaWxsZWQgd2hlbiB0aGUgZnJpZW5kcyBhcnJpdmUgYXQgNCBhbS4gCkFub3RoZXIgd2FzIGFuIGFkdmlzb3J5IG9waW5pb24gaGUgd3JvdGUgYWJvdXQgdmlkZW8gcG9rZXIgbWFjaGluZXMgdGhhdCBzYWlkIGlmIGNoYW5jZSBwcmVkb21pbmF0ZXMgb3ZlciBza2lsbCBpbiBhIGdhbWUsIHRoZW4gaXQgdmlvbGF0ZXMgQWxhYmFtYSdzIGJhbiBvbiBsb3R0ZXJpZXMuIE1vb3JlIHNhaWQgaGUgd2FzIHBsZWFzZWQgd2hlbiB0aGF0IG9waW5pb24gd2hlbiBpdCB3YXMgY2l0ZWQgYnkgc2V2ZXJhbCBjb3VydHMgbGFzdCB5ZWFyIHRoYXQgcnVsZWQgaW4gZmF2b3Igb2YgZm9ybWVyIEdvdi4gQm9iIFJpbGV5J3MgZ2FtYmxpbmcgdGFzayBmb3JjZSBkdXJpbmcgaXRzIHJhaWRzIG9uIGVsZWN0cm9uaWMgYmluZ28gY2FzaW5vcy4uIApVbmZvcnR1bmF0ZWx5LCBpbnZlc3RpbmcgaXNuIHRoYXQgZWFzeS4gCiJDb25jcmV0ZSByZWNvbnN0cnVjdGlvbiIgbWFrZXMgaXQgc291bmQgbGlrZSBpdCBsb29rcyBiYWQsIGJ1dCB0aGF0IGlzIGRlZmluaXRlbHkgbm90IHRoZSBjYXNlLiAKUmVsYXRlZDogSG93IHRvIFVzZSBhIEZlYXIgb2YgRmFpbHVyZSB0byBFbXBvd2VyIEFjdGlvbiAoaW4gNCBTaW1wbGUgU3RlcHMhKQpUd28gZGF5cyBsYXRlciwgdGhleSBlbmNhbXBlZCBjbG9zZSB0byB0aGUgcml2ZXIgTWEgYW5kIHB1dCB1cCB0aGVpciBMZW9tdW5kIFRpbnkgSHV0IGFuZCBkZWNpZGVkIHRvIGJlZCBkb3duIGZvciBzb21lIGRlYmF1Y2hlcnkuIHdoZW4gYSBnb2RzIGF3ZnVsIGRyb25pbmcgc291bmQgYmVnYW4gdG8gYnVpbGQgb3ZlciB0aGUgbmV4dCBoaWxsLiBBIHN3YXJtIG9mIGdpYW50IGZsaWVzIGNyZXN0ZWQgdGhlIGhpbGwsIGFuZCB0aGV5IGxhdWdoZWQgaXQgb2ZmIGFuZCB3ZXJlIGFib3V0IHRvIGdvIHRvIGJlZCB3aGVuIHRoZSBtYXN0ZXIgb2YgdGhlIGZsaWVzIGFwcGVhcmVkICAgYSBNb2x5ZGV1cyB3aXRoIGdyZXkgc2tpbiBhbmQgYSBtb3JuaW5nc3RhciBwaXR0ZWQgYW5kIGJsb29kc3RhaW5lZCBmcm9tIHByZXZpb3VzIGJhdHRsZXMgd2Fsa2VkIHVwLgpUaGluayBhYm91dCB0aGUgcmFuZG9tIGpvYiBhbmQgaG93IG11Y2ggdGhhdCAiY29udHJpYnV0ZXMgdG8gc29jaWV0eS4iIEZ1cnRoZXIsIHRoaW5rIGFib3V0IGhvdyBtdWNoIG9mIHlvdXIgcGVyc29uYWwgY29udHJpYnV0aW9ucyBjb21lIGZyb20gdGhpbmdzIGV4dGVybmFsIHRvIHlvdXIgY2FyZWVyLiAKTGlzdGVuISBBcyB3ZSBncm93IG1vcmUgYWNjdXN0b21lZCB0byB0aGUgb25zbGF1Z2h0IG9mIGVtYWlscyBhbmQgbWVkaWEsIHdlIGRldmVsb3Agc2hhcnBzIHNraWxscyBpbiAidHVuaW5nIG91dCIgbm9pc2UuIApUbGRyOiB3aGVuIHBsYXllcnMgc3RhcnQgY2FyaW5nIGFib3V0IHRoZWlyIHN0YXRzLCByYW5rIGV0YywgdGhleXJlIGdvaW5nIHRvIGNvbXBsYWluIGFib3V0IGhvdyBiYWQgdGhpcyBnZW5yZS9zaG9vdGluZyBtZWNnYW5pY3MvIG92ZXJhbGwgZ2FtZXBsYXkgcmVhbGx5IGlzLiBSaWdodCBub3cgTmluamEgaXMgbWFraW5nIGEgbWlsbGlvbiBhIG1vbnRoIHBsYXlpbmcgdGhlIGVxdWl2YWxlbnQgb2YgdGVhbSB0cmFpbmluZyAoSGFsb3MgdW5yYW5rZWQgcGxheWxpc3QuKSBhcmUgcGVvcGxlIGdvaW5nIHRvIHdhdGNoIHdpdGggc3VjaCBlbnRodXNpYXNtIHdoZW4gZ2UgY2FudCBqdXN0IGdvIGZvciB6YW55IGtpbGxzIG9uIG5ldyBwbGF5ZXJzIGFuZCBpcyBmb3JjZWQgdG8gY2FtcCAvIHNsb3cgcHVzaD8gSSBkb24ndCBwcmVkaWN0IHRoYXQgdG8gYmUgdGhlIGNhc2UuLiAKSWYgdGhlIHN0dWRlbnRzIHdobyBhcmUgYWRhbWFudCBhYm91dCB0aGUgdmlld3MgdGhhdCB0aGV5IGVzcG91c2UgYXJlIGNhcGFibGUgb2YgZGVmZW5kaW5nIHRoZW0sIHRoZW4gdGhhdCBncmVhdCFPbmUgYXNzaWdubWVudCBpbiBwYXJ0aWN1bGFyIHRoZXkgd3JvdGUgYWJvdXQgaG93IElzbGFtIGhhcyBub3QgaGFkIGFueSBjb250cmlidXRpb25zIHRvIHRoZSB3b3JsZCBhbmQgdGhhdCBpdCBpcyBhIHJlbGlnaW9uIG9mIGhhdGUuSWYgdGhleSBjYW4gcHJvdmlkZSBmYWN0cyB0aGF0IGNvcnJvYm9yYXRlIHRob3NlIHZpZXdzLCB3b3VsZCB5b3Ugbm90IHNheSB0aGV5IGFyZSBlbnRpdGxlZCB0byB0aGVtPyBBcmUgeW91IHRyeWluZyB0byB0ZWFjaCB0aGVtIHRoZSBjb3VudGVyYXJndW1lbnRzIHRvIHdoYXQgdGhleSB0aGluaywgb3IgYXJlIHlvdSB0cnlpbmcgdG8gdGVhY2ggdGhlbSBob3cgdG8gYXJndWU/SSBhbSBhIG1hbGUgZWxlbWVudGFyeSB0ZWFjaGVyISBJZiBJIGhhdmUgb24gcGllY2Ugb2YgYWR2aWNlIGZvciB5b3UsIGl0IHRoaXM6TWFrZSBzdXJlIGFsbCBvZiB0aGUgb3RoZXIgdGVhY2hlcnMga25vdyB0aGF0IHRoZSBtZW4gc3RhZmYgYmF0aHJvb20gaXMgZm9yIG1lbi4gCllvdSByZXNlYXJjaCBnb29kIHN0cmF0ZWd5LCB5b3UgcmVmaW5lIHlvdXIgc3RyYXRlZ3ksIGJ1dCB5b3UgaGF2ZSB0byBrZWVwIGluIG1pbmQgdGhhdCBzd2luZ3Mgd2lsbCBoYXBwZW4uIEJhZCBydW5zIHdpbGwgaGFwcGVuLiAKQXMgb2Ygbm93IChNYXJjaCAyMDEwKSwgTGFkeSBHYWdhIGhhcyBvbmUgYWxidW0uIAo=|<---