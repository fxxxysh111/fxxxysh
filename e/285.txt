<!DOCTYPE html>
<html>
 <head>
  <title>
   [area1][mkey1][keyword1][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
 </head>
 <body>
  <div class="slot" data-slot="bodytop" id="slot_bodytop">
   <div class="partial headlink " data-id="p8823330" data-layout_partial_id="8823330" data-uuid="f5c92d55-48d2-4865-98f0-0e43e51e19a3">
   </div>
   <div class="partial utility_sticky " data-id="p8823307" data-layout_partial_id="8823307" data-uuid="1822acf2-db59-4d08-8de8-b0061b8403a1">
   </div>
   <div class="partial content_story_cb_metatags " data-id="p8823312" data-layout_partial_id="8823312" data-uuid="76638a53-b624-407b-914a-d273f0dd0c0f">
   </div>
   <div class="partial content_story_pages_imagegallery " data-id="p8823301" data-layout_partial_id="8823301" data-uuid="26151309-c2ef-44fb-83b9-cd662777f9d0">
   </div>
   <div class="partial utility_sticky " data-id="p8823305" data-layout_partial_id="8823305" data-uuid="2c44c91b-7fda-4ffd-b7ef-cb29881dc93c">
   </div>
  </div>
  <header class="section section-header" id="section-header">
   <div class="zone">
    <div class="region">
     <div class="block block-logo">
      <div class="block-content">
       [link]
       
      </div>
     </div>
     <div class="block block-menu">
      <div class="block-content">
       <ul>
        <li>
         <a href="/news.php">
          Movies
         </a>
        </li>
        <li>
         [link]
         
        </li>
        <li>
         <a href="/superheroes/">
          Heroes
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         <a href="/3d/">
          To 3D
         </a>
        </li>
        <li>
         <a href="/pop/">
          Pop
         </a>
        </li>
        <li>
         [link]
         
        </li>
        <li>
         <a href="/about.html">
          About
         </a>
        </li>
       </ul>
      </div>
     </div>
     <div class="block block-search">
      <div class="block-content">
       <div class="button">
       </div>
       <div class="form">
        <form action="/search.html" id="cse-search-box">
        </form>
       </div>
      </div>
     </div>
     <div class="block block-social">
      <div class="block-content">
       <ul>
        <li class="youtube">
         <a href="/user/cinemablendhd" rel="nofollow" target="_blank">
          <object data="/static/images/reskin/youtube-blue.svg" type="image/svg+xml">
           Your browser does not support SVGs
          </object>
         </a>
        </li>
        <li class="facebook">
         <a href="/cinemablendcom" rel="nofollow" target="_blank">
          <object data="/static/images/reskin/facebook-blue.svg" type="image/svg+xml">
           Your browser does not support SVGs
          </object>
         </a>
        </li>
        <li class="twitter">
         <a href="/cinemablend" rel="nofollow" target="_blank">
          <object data="/static/images/reskin/twitter-blue.svg" type="image/svg+xml">
           Your browser does not support SVGs
          </object>
         </a>
        </li>
       </ul>
      </div>
     </div>
    </div>
   </div>
  </header>
  <div id="bgTopDiv">
   <div id="site">
    <center>
     <div id="top-margin">
     </div>
     <div class="logo">
      <div class="slot" data-slot="drawer" id="slot_drawer">
       <div class="partial partial_group_open " data-id="p8823334" data-layout_partial_id="8823334" data-uuid="2654ca1a-6083-49db-a4ae-8f85fa71b4b0">
       </div>
       <div class="sticky-ad" id="sticky-ad-top">
        <div class="partial ads_slot ad top_ad " data-id="p8823324" data-layout_partial_id="8823324" data-uuid="7510797b-34d5-42f9-90e8-008c5786b586">
         <div id="cb_d_flex_EB_leaderboard" style=" display: block;">
         </div>
        </div>
        <div class="partial partial_group_close " data-id="p8823304" data-layout_partial_id="8823304" data-uuid="5e07ff57-c3af-4017-8da7-19c1e132ce71">
        </div>
       </div>
       <div class="partial ads_slot ad " data-id="p8823326" data-layout_partial_id="8823326" data-uuid="225b11db-58db-4506-9f4b-db2d160270e1">
        <div id="cb_playwire_skin" style=" display: block;">
        </div>
       </div>
      </div>
     </div>
     <div class="IndexContent">
      <center>
       <table border="0" cellpadding="0" cellspacing="0" height="100%" width="100%">
        <tr>
         <td align="left" class="responsive" height="100%" style="padding-right: 14px; border-right: 1px solid rgba(187,223,238,0.3);" valign="top" width="100%">
          <div id="wrap_left_content">
           <div class="slot" data-slot="left" id="slot_left">
            <div class="partial partial_group_open " data-id="p8823339" data-layout_partial_id="8823339" data-uuid="e36f3216-5fd0-4b29-b479-ec69ee27a8c4">
            </div>
            <div class="article_top" id="article_top">
             <div class="partial content_story_meta_topics " data-id="p8823317" data-layout_partial_id="8823317" data-uuid="7215a8e0-2ad7-4bad-b4a0-d23aa94e444a">
              <div class="topic_links">
               [ahref]
               
              </div>
             </div>
             <div class="partial content_story_meta_title " data-id="p8823318" data-layout_partial_id="8823318" data-uuid="a36db946-f4e5-4c2b-a7bd-c12ba5d5ed3c">
              <div class="story_title">
               <h1>
                [area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]
               </h1>
              </div>
             </div>
             <div class="partial content_story_pages_playwire " data-id="p8823298" data-layout_partial_id="8823298" data-uuid="4b979a02-6414-48d9-8bfb-648af1097d66">
             </div>
             <div class="partial content_story_meta_author " data-id="p8823315" data-layout_partial_id="8823315" data-uuid="adc2368e-a8fe-4289-b6c6-8cbb7b16422e">
              <span class="author">
               [link][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]
              </span>
             </div>
             <div class="partial content_story_meta_commentcount " data-id="p8823314" data-layout_partial_id="8823314" data-uuid="fb01e103-5413-4444-9b42-9f32cddcbb14">
              <span class="commentcount" data-comment-identifier="pk" data-comment-pk="2463124" data-comment-url="https://www.cinemablend.com/news/2463124/marvel-boss-kevin-feige-reviewed-dark-phoenix-script-and-tone">
               [search]<li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li><li>[ahref]</li>[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]
              </span>
             </div>
             <div class="partial content_story_meta_date " data-id="p8823316" data-layout_partial_id="8823316" data-uuid="30e9af31-d382-4c67-9796-e36efff3ed55">
              <time class="published_date" datetime="2018-12-08T19:27:01+00:00">
               4 days ago
              </time>
             </div>
             <div class="partial partial_group_close " data-id="p8823306" data-layout_partial_id="8823306" data-uuid="bf3a3840-0223-4cf3-ab40-38d710d54cfd">
             </div>
            </div>
            <div class="partial content_story_random " data-id="p8823341" data-layout_partial_id="8823341" data-uuid="57e82793-1e85-41fb-bfe9-efe5a66f9404">
             <div class="blender">
              [link]
              
             </div>
            </div>
            <div class="partial content_story_new " data-id="p8823310" data-layout_partial_id="8823310" data-uuid="d1342b2a-6f29-42ea-9f68-cbc4e17544e3">
            </div>
            <div class="partial content_story_story_mode " data-id="p" data-layout_partial_id="" data-uuid="2df4d5d0-2d09-41a3-afc6-193f67c7bfff">
            </div>
            <div class="partial content_story_pages_image " data-id="p" data-layout_partial_id="" data-uuid="bc6923bd-9eaf-4e16-a9a5-aa92da7da21d">
             <figure>
              <div class="image-container-background" style="background-image: url('https://img.cinemablend.com/filter:scale/quill/c/f/3/a/2/c/cf3a2c54e8edda9b245736ab2802af7572dbca59.png?mw=600'); height:300px; width:600px;">
              </div>
             </figure>
            </div>
            <div class="partial content_story_pages_text " data-id="p" data-layout_partial_id="" data-uuid="91f013d9-a748-47c9-b196-479a929e276a">
             <div class="text-body">
              <p>
               For Marvel fans, when Disney and 20th Century complete their
               [ahref]
               
               at the start of 2019, it opens some exciting possibilities for the MCU and X-Men franchises (including Deadpool). The idea of characters such as Professor X and Bruce Banner sharing the screen as one big happy Marvel family is many comic book followers' dream.
              </p>
             </div>
            </div>
            <div class="partial content_story_pages_text " data-id="p" data-layout_partial_id="" data-uuid="b38f4a3f-34c8-49bd-9118-e55c0f90ef43">
             <div class="text-body">
              <p>
               It's then no surprise that when upcoming X-Men film
               <em>
                <a href="/news/2458290/the-x-men-dark-phoenix-trailer-is-intense-and-powerful">
                 Dark Phoenix
                </a>
               </em>
               was pushed to be released
               [ahref]
               
               , right after
               <em>
                [ahref]
                
               </em>
               , many speculated the film could be setting up a beautiful friendship between the mutants and the Avengers.
              </p>
             </div>
            </div>
            <div class="partial content_story_pages_text " data-id="p" data-layout_partial_id="" data-uuid="39c742d5-119c-45f4-ba84-da557b72e0c3">
             <div class="text-body">
              <p>
               During a panel for
               <em>
                Dark Phoenix
               </em>
               at Brazil Comic Con (CCXP), signs didn't point to the MCU playing a part in the film, but writer/director Simon Kinberg did confirm that Marvel Studios President Kevin Feige did review the script and the tone of the film.
              </p>
             </div>
            </div>
            <div class="partial content_story_pages_text " data-id="p" data-layout_partial_id="" data-uuid="48b6f073-6f4d-4bb9-89b6-e825baf46239">
             <div class="text-body">
              <p>
               <li>[search]</li>[ahref][link][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
              </p>
             </div>
            </div>
            <div class="partial content_story_pages_text " data-id="p" data-layout_partial_id="" data-uuid="7a310575-652f-4cdf-bfd7-7a5d63bffe8d">
             <div class="text-body">
              <p>
               Kevin Feige reviewing the script could mean some note-taking on Marvel Studios' part to plan how they could potentially further the main X-Men property in the future.
               <em>
                Dark Phoenix
               </em>
               is sure to end with a bang that will not only affect the mutants in the film but also the expanded universe. So a little collaboration with the MCU boss could be the perfect first step for the potential partnership.
              </p>
             </div>
            </div>
            <div class="partial content_story_pages_text " data-id="p" data-layout_partial_id="" data-uuid="2f796311-47b1-4cc0-86f7-238fc6b13f3d">
             <div class="text-body">
              <p>
               [search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]<li>[search]</li><li>[link]</li><li>[link]</li>[ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]
              </p>
             </div>
            </div>
            <div class="partial content_story_pages_text " data-id="p" data-layout_partial_id="" data-uuid="25712915-0127-43d5-b634-da217205e34e">
             <div class="text-body">
              <p>
               [search][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[link]</li><li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref]<li>[link]</li>[search]<li>[ahref]</li>[search][link]
              </p>
             </div>
            </div>
            <div class="partial content_story_pages_text " data-id="p" data-layout_partial_id="" data-uuid="ec278501-e756-493f-a37e-f7a029c006f5">
             <div class="text-body">
              <p>
               <li>[link]</li>[ahref]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][link]<li>[link]</li>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li><li>[ahref]</li>[link]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link]
              </p>
             </div>
            </div>
            <div class="partial content_story_pages_end " data-id="p" data-layout_partial_id="" data-uuid="97b489ca-453c-4e15-8b01-93c15939d4eb">
             <div class="content-end" style="width:0;height:0;">
             </div>
            </div>
            <div class="partial content_video_management " data-id="p8823309" data-layout_partial_id="8823309" data-uuid="15a63b0a-068e-41d3-9bcc-e52bb554b899">
             <figure>
              <div class="youtube-embed-html">
               <h1 class="blockbuster-title">
                [area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]
               </h1>
               <iframe allow="autoplay; encrypted-media" allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/noTF-C9JLvo" width="560">
               </iframe>
              </div>
             </figure>
            </div>
            <div class="partial snippet ad " data-id="p8823333" data-layout_partial_id="8823333" data-uuid="79b3d88b-ef44-44f5-b902-180d371a8377">
             <div id="postup_oscw_enabled">
             </div>
            </div>
            <div class="partial social_facebook_like " data-id="p8823340" data-layout_partial_id="8823340" data-uuid="40b6a2ad-a7a6-4eb9-8dd1-e101cefc32fa">
             <div class="contents">
             </div>
            </div>
            <div class="partial share " data-id="p8823336" data-layout_partial_id="8823336" data-uuid="8789400b-02a0-43ff-b43a-460d84d74057">
             <div class="frame">
              <div class="contents">
               <ul>
                <li class="twitter">
                 [ahref]
                 
                </li>
               </ul>
              </div>
             </div>
            </div>
            <div class="partial share_sharethis " data-id="p8823313" data-layout_partial_id="8823313" data-uuid="2a5dc429-3bb6-4495-b2ce-a98c2195d5bc">
             <div class="sharethis-inline-share-buttons">
             </div>
            </div>
            <div class="partial snippet comment_link " data-id="p8823342" data-layout_partial_id="8823342" data-uuid="dece7631-8752-4774-9c81-c4edcd5a0181">
             <a href="s" title="discussion">
              Leave a Comment
             </a>
            </div>
            <div class="partial snippet blue_banner " data-id="p8823337" data-layout_partial_id="8823337" data-uuid="35a38935-fd9c-41c8-805c-c24fcd126b64">
             <a name="discuss">
             </a>
             <h2>
              [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
             </h2>
            </div>
            <div class="partial ads_widgets_zergnet " data-id="p8823329" data-layout_partial_id="8823329" data-uuid="d01e21f0-eb23-4dc1-9e61-a4b02e82949f">
             <div id="d01e21f0-eb23-4dc1-9e61-a4b02e82949f">
             </div>
            </div>
            <div class="partial ads_widgets_zergnet zerg_two " data-id="p8823328" data-layout_partial_id="8823328" data-uuid="91d89039-bf4f-4b96-b3fe-4783e7148ba1">
             <div id="91d89039-bf4f-4b96-b3fe-4783e7148ba1">
             </div>
            </div>
            <div class="partial share " data-id="p8823338" data-layout_partial_id="8823338" data-uuid="2b5096c6-d24f-419e-bafb-fd233e19630a">
             <div class="frame">
              <div class="contents">
               <ul>
                <li class="facebook">
                 [link]
                 
                </li>
               </ul>
              </div>
             </div>
            </div>
            <div class="partial comments_disqus " data-id="p8823327" data-layout_partial_id="8823327" data-uuid="afe59131-643c-43b6-96a9-a76961438ed6">
             <div id="disqus_thread">
             </div>
             <noscript>
              Please enable JavaScript to view the
              [ahref]
              
             </noscript>
            </div>
            <div class="partial snippet backtotop " data-id="p8823335" data-layout_partial_id="8823335" data-uuid="3337aa67-5f5d-4495-954c-3c5d89a990c4">
             <br>
              <li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][link]
             </br>
             [ahref]
             
            </div>
            <div class="partial ads_slot ad " data-id="p8823323" data-layout_partial_id="8823323" data-uuid="ab6f5b1a-f44a-4808-b43c-0b40e2e19855">
             <div id="cb_d_300x250_EB_inline" style="height: 250px; display: block;">
             </div>
            </div>
            <div class="partial content_story_pages_break " data-id="p8823302" data-layout_partial_id="8823302" data-uuid="0dff43e4-d26c-4f66-aeb6-624cca595e8a">
            </div>
            <div class="partial content_story_pages_image " data-id="p8823300" data-layout_partial_id="8823300" data-uuid="8316326e-d398-4b84-9bd2-ffe7f523bfa2">
            </div>
            <div class="partial content_story_pages_nextstory " data-id="p8823299" data-layout_partial_id="8823299" data-uuid="656ab25f-e020-4ac0-a84c-eb52dcf1cd21">
            </div>
            <div class="partial content_story_pages_3dsummary " data-id="p8823303" data-layout_partial_id="8823303" data-uuid="960dbf5b-7cd8-4e07-ae97-f174ed46795d">
            </div>
           </div>
          </div>
         </td>
         <td align="left" cellpadding="0" cellspacing="0" valign="top" width="15">
         </td>
         <td cellpadding="0" cellspacing="0" valign="top" width="300">
          <div id="right_column">
           <div class="slot" data-slot="right" id="slot_right">
            <div class="partial ads_slot ad " data-id="p8823325" data-layout_partial_id="8823325" data-uuid="b6fd3871-e468-4e0e-946a-5f7d88086923">
             <div id="cb_d_300x250_EB_rr_1" style="height: 250px; display: block;">
             </div>
            </div>
            <div class="partial content_story_cb_related sidebar " data-id="p8823320" data-layout_partial_id="8823320" data-uuid="2c05410c-15e2-4ac2-84cd-2a95a7e981d4">
             <div class="hgroup">
              <h2>
               [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
              </h2>
             </div>
             <div class="">
              <a class="story_item item0" data-id="2463343" data-number="0" href="/news/2463343/scott-derrickson-officially-returning-to-direct-doctor-strange-2
" title="Scott Derrickson Officially Returning To Direct Doctor Strange 2">
               <div class="image">
               </div>
               <div class="content">
                <div class="title">
                 <h2>
                  [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
                 </h2>
                </div>
               </div>
              </a>
              [ahref]
              
              [link]
              
             </div>
            </div>
            <div class="partial ads_slot ad " data-id="p8823322" data-layout_partial_id="8823322" data-uuid="3788fe34-ab6a-4563-ac98-74fb0607395e">
             <div id="cb_d_300x250_EB_rr_2" style="height: 250px; display: block;">
             </div>
            </div>
            <div class="partial content_story_cb_related_hot_topics sidebar " data-id="p8823311" data-layout_partial_id="8823311" data-uuid="cc1a1b25-200e-456a-aeb0-d8190fd38515">
             <div class="block-header">
              <h2>
               <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
              </h2>
             </div>
             <div class="block-content">
              <ul>
               <li class="story_item item0 main" data-id="2463254" data-number="0">
                [ahref]
                
               </li>
               <li class="story_item item1 sub" data-id="2463233" data-number="1">
                [ahref]
                
               </li>
               <li class="story_item item2 sub" data-id="2463342" data-number="2">
                <a href="/news/2463342/are-people-mad-about-kevin-hart-quitting-the-oscars" title="Are People Mad About Kevin Hart Quitting The Oscars?">
                 <div class="image">
                 </div>
                 <div class="content">
                  <div class="title">
                   <h3>
                    [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
                   </h3>
                  </div>
                 </div>
                </a>
               </li>
              </ul>
             </div>
            </div>
            <div class="partial content_story_cb_related hot_topics " data-id="p8823319" data-layout_partial_id="8823319" data-uuid="f71317c1-8fc4-4ac0-a978-33d57fc15851">
             <div class="">
              [ahref]
              
              <a class="story_item item1" data-id="2463028" data-number="1" href="/news/2463028/the-avengers-endgame-revealed-something-important-about-ant-man
" title="The Avengers: Endgame Revealed Something Important About Ant-Man">
               <div class="image">
               </div>
               <div class="content">
                <div class="title">
                 <h2>
                  [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
                 </h2>
                </div>
               </div>
              </a>
             </div>
            </div>
            <div class="partial partial_group_open " data-id="p8823331" data-layout_partial_id="8823331" data-uuid="e7497436-4d51-4faa-99b6-0f0d897dfd33">
            </div>
            <div class="sticky" id="sticky-section">
             <div class="partial social_counts " data-id="p8823332" data-layout_partial_id="8823332" data-uuid="4544e08a-0d86-4b66-8544-a71247b87013">
              <div class="hgroup">
               <h2>
                [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
               </h2>
              </div>
              <div class="">
               <ul>
                <li class="gplus_circled_by">
                 <a href="/+CinemaBlend" rel="nofollow" title="Follow us on Google+">
                  <span class="sprite">
                   <br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[search]</li>[ahref]
                  </span>
                  <span class="count">
                   471K<li>[link]</li><li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][ahref][link]<li>[search]</li>
                  </span>
                 </a>
                </li>
                <li class="facebook_likes_facebook_page">
                 [link]
                 
                </li>
                <li class="twitter_followers">
                 [ahref]
                 
                </li>
               </ul>
              </div>
             </div>
             <div class="partial ads_slot ad rr_bottom " data-id="p8823321" data-layout_partial_id="8823321" data-uuid="93067df3-208c-4295-836c-884dc38024b4">
              <div id="cb_d_300x250_EB_rr_3" style="height: 380px; display: block;">
              </div>
             </div>
             <div class="partial partial_group_close " data-id="p8823308" data-layout_partial_id="8823308" data-uuid="91438217-7149-48fd-be5f-0f9f2b16824a">
             </div>
            </div>
           </div>
          </div>
         </td>
        </tr>
       </table>
      </center>
     </div>
    </center>
   </div>
   <center>
    <div style="margin-top: 53px;">
     <div class="slot" data-slot="bottom" id="slot_bottom">
     </div>
    </div>
   </center>
  </div>
  <footer class="section section-footer" id="section-footer">
   <div class="zone">
    <div class="region">
     <div class="block block-menu">
      <div class="block-content">
       <ul>
        <li class="title">
         Key Links
        </li>
        <li>
         <a href="/news/1701079/new-movie-releases-2018-movie-release-date-schedule">
          2018 New Movie Releases
         </a>
        </li>
        <li>
         <a href="/television/2462989/2019-netflix-premiere-schedule-dates-for-new-and-returning-shows">
          2019 Netflix Premiere Schedule
         </a>
        </li>
        <li>
         <a href="/television/2454665/2018-fall-tv-premiere-schedule-dates-for-new-and-returning-shows">
          2018 Fall TV Premiere Schedule
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         <a href="/dceu/">
          DCEU Gateway
         </a>
        </li>
       </ul>
      </div>
     </div>
     <div class="block block-menu">
      <div class="block-content">
       <ul>
        <li class="title">
         Categories
        </li>
        <li>
         [link]
         
        </li>
        <li>
         <a href="/television/">
          TV
         </a>
        </li>
        <li>
         <a href="/superheroes/">
          Heroes
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [search]
         
        </li>
        <li>
         [link]
         
        </li>
        <li>
         <a href="/games/">
          Gaming
         </a>
        </li>
       </ul>
      </div>
     </div>
     <div class="block block-menu">
      <div class="block-content">
       <ul>
        <li class="title">
         Information
        </li>
        <li>
         <a href="/about.html">
          About Us
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [link]
         
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
      </div>
     </div>
     <div class="block block-social">
      <div class="block-content">
       <ul>
        <li class="title">
         Connect
        </li>
        <li class="rss">
         [link]
         
        </li>
        <li class="facebook">
         [link]
         
        </li>
        <li class="twitter">
         [ahref]
         
        </li>
        <li class="youtube">
         [link]
         
        </li>
       </ul>
      </div>
     </div>
     <div class="block block-logo">
      <div class="block-content">
       <a href="/" title="CinemaBlend">
       </a>
      </div>
     </div>
    </div>
   </div>
  </footer>
  <div class="plugins_onetrust" data-uuid="8e34af46-323c-45a2-a900-d745ae3a509c">
   <a class="optanon-show-settings">
    Cookie Settings
   </a>
  </div>
  <div class="plugins_tracker_batsignal" data-uuid="15c76738-a73b-4d64-a1c4-0a7b0d01ed8c">
  </div>
  <div class="plugins_tracker_facebook" data-uuid="9a1dabe9-3ad4-469f-9d69-e0354c918b06">
  </div>
  <div class="plugins_tracker_link_tracker" data-uuid="e501f405-5a0b-488e-bfeb-3c59af077ef7">
  </div>
  <div class="plugins_tracker_googleanalytics" data-uuid="e024390a-8077-46cc-82ab-8ab242d7ebef">
  </div>
  <div class="plugins_rdf" data-uuid="447f095f-9e16-4fb9-a2f0-770dc4ac1697">
  </div>
  <div class="plugins_tracker_postup" data-uuid="9d6e11bb-a9f0-4a8e-8995-476ee9ee29a8">
  </div>
  <div class="plugins_cb_takeover" data-uuid="3998600a-aa18-48a1-a309-670c1cf5c432">
  </div>
  <div class="plugins_pinterest_ads" data-uuid="cfca37a4-f703-4903-ab80-a340b8950f55">
   <noscript>
   </noscript>
  </div>
  <div class="plugins_onetrust_cleaner" data-uuid="9e792dc5-60ca-4b70-9df5-832bf493d8ba">
  </div>
  <div class="plugins_redirect_by_tag" data-uuid="a851096f-fc49-4128-8a4b-056c7b86c178">
  </div>
  <div class="plugins_metalmi" data-uuid="16813651-05ab-476c-a4da-1b963971bb92">
  </div>
  <div class="plugins_corpfooter" data-uuid="4eb2f0ea-f1ca-4a24-91fc-8d26504ca270">
   <div class="corpfooter">
    <div class="contents">
     <ul>
      <li class="copyright">
       ©copyright 2018
      </li>
      <li class="gblogo">
       <a href="/">
        <span>
         Gateway Blend
        </span>
       </a>
      </li>
      <li class="privacy">
       For details on Gateway Blend's privacy and cookie policies, please visit our
       [ahref]
       
       page.
      </li>
     </ul>
    </div>
   </div>
  </div>
  <div class="plugins_metatags" data-uuid="e9736227-20ff-4d4a-90ee-1972dd778fae">
  </div>
  <div class="plugins_opengraph" data-uuid="ed2754ec-ad72-488f-972b-1becd970bed7">
  </div>
  <div class="plugins_twittercard" data-uuid="84c9ef46-e6f7-4499-a06f-53ea87963acb">
  </div>
  <div class="plugins_tracker_ysa" data-uuid="a29ac16f-e08a-4644-8da7-b84d9d91d4a1">
  </div>
  <div class="plugins_tracker_comscore" data-uuid="e97b8a10-83d0-4882-a117-db8eaba07301">
   <noscript>
   </noscript>
  </div>
  <div class="plugins_tracker_dfp" data-uuid="c4fe2ec8-ba26-4331-9bff-09205edd311a">
  </div>
  <div class="plugins_tracker_taboola" data-uuid="1df25162-35b1-4678-b332-fede0a90bb6d">
  </div>
  <div class="plugins_embedswap" data-uuid="835271c3-6f6f-49d9-8b31-7637d2fd1c6b">
  </div>
  <div class="plugins_displaypreview" data-uuid="4d4915e5-5383-4d1d-80e3-980a0e9b0f8c">
  </div>
  <div class="plugins_lazyload" data-uuid="db3c050c-9123-46f1-a20a-b90ffe64d92b">
  </div>
  <div class="plugins_jsparams" data-uuid="9cbffaa0-d10c-4bff-9790-2e783a9c9972">
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0288
  </b>
 </body>
</html>