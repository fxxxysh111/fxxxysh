--->|Q29uY2VhbG1lbnQuIENvbmNlYWxtZW50IGhhcyBub3RoaW5nIHRvIGRvIHdpdGggYWNjZWxlcmF0aW5nIHRoZSBoZWFsaW5nIG9mIHlvdXIgbG92ZSBicnVpc2UuIApBbGwgdGhlIHBlYWNlIGNvcnBzIHZvbHVudGVlcnMgaW4gdGhlIHZpbGxhZ2UgcmVjZWl2ZWQgY291bnNlbGluZyB0byBwcm9jZXNzLiBJdCBiZWVuIG92ZXIgMTAgeWVhcnMgYW5kIEkgc3RpbGwgdGhpbmsgYWJvdXQgdGhhdCBkYXkgb2Z0ZW4uClNtYWxsZXIgY29udHJhY3RzIGhhdmUgbG93ZXIgbGFib3IgcmF0ZXMuIExvd2VyIGxhYm9yIHJhdGVzIHBhaWQgdG8gdGhlIGNvbnRyYWN0b3IgbWVhbiBsZXNzIG1vbmV5IHRvIHBheSB0aGUgZW5naW5lZXJzLi4gCkJlc2lkZXMgd2hhdCBJIGFtIGxlZ2FsbHkgb2JsaWdhdGVkLiAKTWVkaWNhdGlvbiBoZWxwZWQgYSBsb3QgYnV0IEkgd2FzIGZpbmFsbHkgYWJsZSB0byBnZXQgb2ZmIGFsbCBteSBwc3ljaCBtZWRzIGFib3V0IDQgeWVhcnMgYWdvLiAKQ3VycmVudCBTcG9ydHMgTWVkaWNpbmUgUmVwb3J0cyBKdWx5IDIwMDcgT21lZ2EgIDMgRmF0dHkgQWNpZHMgKEZpc2ggb2lsKSBhbmQgQXRobGV0aWNzClNvIHdhcyB0aGUgZHJ1ZyBkZWFsZXIgd2hvIHN0dWZmZWQgdGhlIGJhZ3MgaW50byBoaXMgTWVyY2VkZXMgQmVuei4gCldvdy4gCkhvdyBkb2VzIG9uZSBiZWNvbWUgYW4gTkcgRXhwbG9yZXI/IFdlbGwsIHRoZXJlIEkgd2FzIG9uZSBtb3JuaW5nIGRyaW5raW5nIGNvZmZlZSB3aXRoIG15IGNhdCBhbmQgY2hlY2tpbmcgbXkgZW1haWwuIEFuZCB0aGVyZSB3YXMgdGhpcyBlbWFpbCB0aGF0IHdhcyB0aXRsZWQ6ICJETyBOT1QgREVMRVRFLiIgQW5kIEkgb3BlbmVkIGl0LCBhbmQgSSB3YXMgaW5mb3JtZWQgdGhhdCBJJ2QgYmVlbiBzZWxlY3RlZCB0byBiZSBhbiBOR1MgRXhwbG9yZXIuIEkgZGlkbid0IGFwcGx5IHlvdSBjYW4ndCBhcHBseSBzb21lb25lIG91dCB0aGVyZSBzZWNyZXRseSBub21pbmF0ZXMgeW91LCBhbmQgdGhlbiBhIHNlY3JldCBjb21taXR0ZWUgc2VjcmV0bHkgc2VsZWN0cyB5b3UsIGFuZCB0aGVuIHlvdSBnbyB0byBhIHNlY3JldCBtZWV0aW5nIGFuZCBnZXQgYSB5ZWxsb3cgcmVjdGFuZ2xlIHRhdHRvb2VkIG9uIHlvdXIgSSdtIHRvdGFsbHkgam9raW5nLiBPaywgaGFsZiBqb2tpbmcuIFlvdSBjYW4ndCBhcHBseS4gU29tZW9uZSBub21pbmF0ZXMgeW91LCB5b3UgZ2V0IHNlbGVjdGVkLCBhbmQgdGhlbiB5b3UgZ2V0IGluZm9ybWVkLiBBbmQgaXQgY2hhbmdlcyB5b3VyIGxpZmUuCklmIHlvdSBkbyBlbmQgdXAgd2F0Y2hpbmcgdGhlIHdob2xlIHRoaW5nLCBET04gRk9SR0VUIFRIRSBTUEVDSUFMUyEgVGhlcmUgYXJlIHF1aXRlIGEgZmV3IHNwZWNpYWxzIHRoYXQgc2l0IGJldHdlZW4gc2Vhc29ucyBhbmQgaGF2ZSBpbXBvcnRhbnQgc3RvcnkgZWxlbWVudHMuIApTbywgSSBhbSBhbHdheXMgdGhpbmtpbmcgYWJvdXQgbXkgY2hpcCBzdGFjayByZWxhdGl2ZSB0byB0aGUgYmxpbmRzLiBBIGdvb2QgcnVsZSBvZiB0aHVtYiBpcyB0aGF0IGlmIHlvdXIgY2hpcCBzdGFjayBpcyBhdCBsZWFzdCAxMCB0aW1lcyBncmVhdGVyIHRoYW4gdGhlIGJpZyBibGluZCwgeW91IGFyZSBpbiBkZWNlbnQgc2hhcGUgYW5kIGRvIG5vdCBuZWNlc3NhcmlseSBuZWVkIHRvIHRha2UgY2hhbmNlcy4gSWYgaXQgZ2V0cyBkb3duIHRvIDUgb3IgZmV3ZXIgYmlnIGJsaW5kcywgdGhlbiB5b3UncmUgaW4gYSBkYW5nZXIgem9uZSBhbmQgbmVlZCB0byB0cnkgdG8gZG91YmxlIHVwIHNvb24uIApXaGV0aGVyIHlvdSBhbiAiYWN0aXZpc3QiIGp1ZGdlIChsaWJlcmFsKSBvciAib2JqZWN0aXZlIiAoY29uc2VydmF0aXZlIGFuZCB0cnlpbmcgdG8gbWFpbnRhaW4gdGhlIHN0YXR1cyBxdW8pLCB5b3UgaGF2ZSBhIGJpZyBmYXQgbGVnYWwgZGlsZW1tYSBvbiB5b3VyIGhhbmRzLiBZb3UgY2FuIGVpdGhlciBncmFudCB0aGVzZSB0d28gY3JhenksIGdheSBraWRzIGEgZGl2b3JjZSBvciBmb3JjZSB0aGVtIHRvIHN0YXkgbWFycmllZC4gQnV0LCBpZiB5b3UgbGV0IHRoZW0gZGl2b3JjZSwgeW91IG1pZ2h0IGp1c3QgYmUgb3BlbmluZyB0aGUgd2F5IHVwIGZvciBnYXkgbWFycmlhZ2Ugc2luY2UgeW91IGhhdmUgdG8gc2F5IHRoYXQgdGhlIHN0YXRlIERPTUEgaXMgdW5jb25zdGl0dXRpb25hbC4uIApMdWNraWx5LCB3ZSBhcmVuJ3QgZXhhY3RseSBsZWZ0IHRvIGZlbmQgZm9yIG91cnNlbHZlcy4gRXZlcnkgcGl0IGJvc3MgaGFzIGEgc2VjcmV0IHBhbmljIGJ1dHRvbiB1bmRlciB0aGVpciBkZXNrIHRvIHN1bW1vbiBzZWN1cml0eSBpbiBjYXNlIG9mIGFuIGVtZXJnZW5jeS4gCldhcnJlY2tlcjogQSBjaGF0IHJvb20gYW5kIGp1c3QgYWggdGFsa2luJyBhYm91dCBldmVyeXRoaW5nIHRoYXQgc2hlIGRpZC4KSSBtZWFuIGNhbiB3ZSBhbGwgYm9va21hcmsgdGhpcyBhbmQgY29tZSBiYWNrIG9uZSB3aG9sZSB5ZWFyIGFmdGVyIHRoZSB3YWxsIGlzIHVwIHNvIG1lIGFuZCBhbnkgb3RoZXIgbG9naWNhbGx5IHRoaW5raW5nIHBlcnNvbiBjYW4gbGF1Z2ggYXQgYWxsIG9mIHRoZWUgc25pZGUgY29tbWVudHMgbWFkZSBieSBwZW9wbGUgd2hvIGhhdmUgbm8gZnVja2luZyBpZGVhIG9mIHdoYXQgdGhleSB0YWxraW5nIGFib3V0LiBBbnlib2R5IHVwIGZvciB0aGUgY2hhbGxlbmdlPz8/P1lvdXIgZmlyc3QgY29tbWVudCBqdXN0IHNob3dlZCBhIGNvbXBsZXRlIGxhY2sgb2YgdW5kZXJzdGFuZGluZyBpbiB0aGUgc3ViamVjdC4gCk1qYWMxMDE3ICAxMyBwb2ludHMgIHN1Ym1pdHRlZCA1IGRheXMgYWdvClBha2lzdGFuaXMgdGhhdCBmZWVsIGh1bWlsaWF0ZWQgYnkgdGhlIG9wYWNpdHkgYW5kIHVuYWNjb3VudGFiaWxpdHkgb2YgZHJvbmUgYXR0YWNrcywgdGhhdCBmZWVsIEFtZXJpY2EncyB3YXIgaW4gQWZnaGFuaXN0YW4gaGFzIHB1dCB0aGVtIGluIHRoZSBjcm9zc2hhaXJzIG9mIGEgZ2xvYmFsIGNvbmZsaWN0LCB0aGF0IGZlZWwgdGhhdCBBbWVyaWNhJ3MgYXNzaXN0YW5jZSBpcyBsaWtlIGJsb29kIG1vbmV5IHRob3NlIGFyZSB0aGUgUGFraXN0YW5pcyB0aGF0IHBvcHVsYXRlIHRoZSBzbyBjYWxsZWQgYW50aSBBbWVyaWNhbiBjYW1wLi4gCkVlbiBmeXNpb3RoZXJhcGV1dCBoYW5kZWx0IHZhbnVpdCBiZXRyb3V3YmFyZSBpbmZvcm1hdGllIGVuIHZlcnNjaGFmIGFuZGVyZSBkdXMgb29rIGJldHJvdXdiYXJlIGluZm9ybWF0aWUuIApIZSBqdXN0IGhhcHBlbmVkIHRvIGhhdmUgdGhlIGJpZ2dlc3QgcG90ZW50aWFsIHZvdGVyIGJhc2UgYW5kIHRoZSBiZXN0IGNhcGFiaWxpdHkgdG8gbWF4aW1pemUgaXQuSSBwZXJzb25hbGx5IHRoaW5rIHRoZSAkMTBtIHByaWNldGFnIGFuZCB0aGUgc2xldyBvZiBjb3VudGVyc3VpdHMgY29uZmlybXMgVExGIGlzIGp1c3QgdHJ5aW5nIHRvIGludGltaWRhdGUgSGFyaXRoIGludG8gYmFja2luZyBkb3duLiBUaGV5IGtub3cgdGhleSBub3QgZ29pbmcgdG8gaG9sZCB3YXRlciBpbiBjb3VydCwgYnV0IHRoZXkgbGlrZWx5IGhvcGluZyB0aGUgbGVnYWwgaG9vcHMgSGFyaXRoIG5vdyBoYXMgdG8gZ28gdGhyb3VnaCBhbmQgdGhlIGJhZCBwcmVzcyBoZSBnb2luZyB0byBnZXQgaW4gdGhlIHByb2Nlc3MgKGEgTmFqaWIgbmFtZWRyb3AgaXNuIGV4YWN0bHkgcHJldHR5IGhvdCByaWdodCBub3cpIGlzIGVub3VnaCB0byBnZXQgaGltIHRvIHNpdCBkb3duLiAKVGFrZSB0aGUgYnVsbCBieSB0aGUgaG9ybnMgVG8gYXR0YWNrIGEgcHJvYmxlbSBoZWFkIG9uOyB0byBjb25mcm9udCB3aXRob3V0IGZlYXIgb3IgZXZhc2l2ZW5lc3M7IHRvIGZhY2UgdXAgdG8gZGFuZ2VyLCBkaWZmaWN1bHR5IG9yIHVucGxlYXNhbnRuZXNzIHdpdGhvdXQgc2hyaW5raW5nLiBJbiBidWxsZmlnaHRpbmcsIGEgbWF0YWRvciBncmFzcHMgdGhlIGhvcm5zIG9mIGEgYnVsbCBhYm91dCB0byB0b3NzIGhpbS4gSm9uYXRoYW4gU3dpZnQgdXNlZCB0aGUgZXhwcmVzc2lvbiBpbiAxNzExOgpIb3BlZnVsbHkgYWJvdmUgYm9hcmQgcG9rZXIgaXMgaGVyZSB0byBzdGF5IGluIEhvdXN0b24uIApNYXNzYWdlLiBZb3UgY2FuIGFsc28gZ2l2ZSB0aGUgYWZmZWN0ZWQgaGFuZCBhIHNsb3cgYW5kIGdlbnRsZSBtYXNzYWdlLiBUaGUgYWltIG9mIHRoZSBtYXNzYWdlIGlzIHRvIGdldCB0aGUgYmxvb2QgdG8gY2lyY3VsYXRlIG91dCBvZiB0aGUgaGFuZCBhbmQgaW50byB0aGUgcmVzdCBvZiB0aGUgYm9keS4gU3RhcnQgYnkgZ2VudGx5IG1hc3NhZ2luZyB0aGUgZmluZ2VycywgYmVmb3JlIG1vdmluZyBvbiB0byB0aGUgcGFsbSBvZiB0aGUgaGFuZHMuIEFmdGVyd2FyZHMsIGdpdmUgdGhlIGVudGlyZSBoYW5kIGEgZ2VudGxlIHJvbGxpbmcgbWFzc2FnZSBvdXQgdG8gdGhlIHdyaXN0IGFuZCBpbnRvIHRoZSBib2R5LgpTbyB3ZSB0YWxrZWQgYW5kIHNoZSdzIHN1cGVyIG5pY2UgYW5kIGZ1bm55IHRvby4gCkkgZ29ubmEgd3JpdGUgdXAgYSBmZXcgbm90ZXMvc3VtbWFyeSBmb3IgYWxsIG9mIHlvdSAoYW5kIG1vc3RseSBmb3IgbWUhKSBHZXQgdmFsdWUhIEJlbkNCIHN0cmVzc2VzIHRoYXQgcGVvcGxlIGhhdmUgZ290dGVuIHNvIGZvY3VzZWQgb24gaGF2aW5nIHN0cm9uZyBjaGVja2luZyByYW5nZXMgdGhhdCB0aGV5IG5lZ2xlY3QgdG8gZ2V0IHZhbHVlIGZyb20gc3Ryb25nIGhhbmRzLiBWYWx1ZSBiZXQgdGhpbiwgYmV0IGJpZyB3aGVuIHlvdSBoYXZlIGEgZ29vZCBoYW5kLi4gCkkgZ29pbmcgdG8gYXNrIHlvdSBxdWVzdGlvbnMgYWJvdXQgaXQgYW5kIEkgd2FudCB5b3UgdG8gYXNrIG1lIHF1ZXN0aW9ucyBhYm91dCBpdC4gSXQgb2theSBpZiB5b3UgZG8gbm90IGtub3cgc29tZXRoaW5nIG9yIHVuZGVyc3RhbmQgdGhpbmcgb3Igd2hhdCBzb21ldGhpbmcgbWF5IGRvLiBJZiB5b3UgZG9uIGtub3cgc29tZXRoaW5nLCBJIHJlcGhyYXNlIGFuZCB0cnkgdG8gYXNrIHlvdSBzb21ldGhpbmcgdGhhdCBsZWFkcyB5b3UgdG8gYW5zd2VyIG9yIGFza2luZyBhIG1vcmUgZm9jdXNlZCBxdWVzdGlvbi4KSGUgZGlkIHJvY2sgdGhlIGhvdXNlIGluIGEgR1JFQVQgd2F5ISBJdCB3YXMgdmVyeSBwbGVhc2luZyB0byBzZWUgaGltIHNvIGF0IHBlYWNlIHdpdGggaGltc2VsZiBhbmQgd2l0aCBoaXMgcGVyZm9ybWFuY2UgYW5kIEkgYW0gdGhhbmtmdWwgdGhhdCBoZSBkaWQgcmVjb2duaXplIHRoYXQgd2l0aG91dCBHb2QgaGUgd291bGQgbm90IGJlIGhlcmUuIEkgZ3JldyB1cCB3aXRoIHRoZSBSZXN1cnJlY3Rpb24gQmFuZCAoY2hyaXN0aWFuIGhlYXZ5IHJvY2spIGFuZCB0aGF0IGlzIGhvdyBJIHZpZXcgaGlzIG11c2ljLiAKVGhleSBnZXQgdG8gYmxhbWUgdGhlIGlubmVyIGNpdGllcyBhbmQgYmxhY2sgcGVvcGxlIHdoZW4gZXZlcnlvbmUganVzdCB3YW50ZWQgdGhlaXIgcGllY2Ugb2YgdGhlIEFtZXJpY2FuIHBpZS4gClRoZSBtYXNzYWdlIGhlbHBzIHRvIHN0aW11bGF0ZSBhIGNoZW1pY2FsIHJlc3BvbnNlIGluIHRoZSBib2R5IHRoYXQgcmVkdWNlcyB0aGUgY2hhbmNlIGZvciB0aGUgYm9keSBzdXNjZXB0aWJpbGl0eSB0byBjb2xkcyBhbmQgc2xvd2VyIHJlY292ZXJ5IHRpbWUuIE9uZSBvZiB0aGUgY3J1Y2lhbCB3aWRlc3ByZWFkIHJlYXNvbnMgdG8gc2NoZWR1bGUgYSBtYXNzYWdlIGlzIHRvIGFsbGV2aWF0ZSB0aGUgcXVhbnRpdHkgb2YgdGVuc2lvbiBhbmQgc3RyZXNzIHRoYXQgb25lIG1pZ2h0IGZlZWwuIApGdWNrIHRoZSB0dXJrZXlzLCBJIGxvdmUgbXkgY2F0LiAKQkMgR3JlZW4gcGFydHkgbGVhZGVyIEFuZHJldyBXZWF2ZXIgaHVmZnMgYW5kIHB1ZmZzIG9uIExORwpWaXNpdGF0aW9uIHdpbGwgYmUgZnJvbSA1OjAwICAgNzowMCBQTSBvbiBGcmlkYXksIFNlcHRlbWJlciAxNCwgMjAxOCBhdCB0aGUgTGVucm9vdCBNYWV0em9sZCBGdW5lcmFsIEhvbWUsIDEyMDkgRS4gNXRoIFN0cmVldCwgU3VwZXJpb3IuIFZpc2l0YXRpb24gd2lsbCByZXN1bWUgYXQgU3QuIApUaGUgcG9rZXIgYm9vbSBpbiB0aGUgMjAwMHMgbWFkZSBwb2tlciBzbyByaWRpY3Vsb3VzbHkgcG9wdWxhciB0aGF0IGFkdmFuY2VkIHN0cmF0ZWd5L21hdGhlbWF0aWNhbCBpbnMgYW5kIG91dHMgb2YgdGhlIGdhbWUgYmVjYW1lIGNvbW1vbiBrbm93bGVkZ2UgYW5kIGl0IHJ1aW5lZCB0aGUgZ2FtZSBmb3IgZXZlcnlvbmUuIE5vdyBjYXN1YWwgcGxheWVycyBkb24gZXZlciBzaG93IHVwIGJlY2F1c2UgdGhleSBkb24gZmVlbCB0aGV5IGNhbiBldmVyIHdpbi4gT3IgdGhlIGNhc3VhbHMgYXJlIG5vdyBzaGFya3MuIEFuZCBzaGFya3MgY2FuIHdpbiBuZWFybHkgZW5vdWdoIHRvIG1ha2UgcGxheWluZyB3b3J0aCBpdCBiZWNhdXNlIG9mIHRoZSBsYWNrIG9mIGZpc2ggdG8gd2luIG1vbmV5IGZyb20uIFNvIGl0IGEgd2F5IHdvcnNlIGdhbWUgbm93IGZvciBldmVyeW9uZS4KRGFuaWVsIE9jaCwkMy41IGJpbGxpb24sIFdoYXJ0b24uIApLd3d4aXMgIDExIHBvaW50cyAgc3VibWl0dGVkIDcgbW9udGhzIGFnbwpJdCBhbGwgbXVzY2xlIG1lbW9yeSwgbXkgdGhvdWdodCBpcyB0cmFpbmluZyBuZXZlciBlbmRzLCBrZWVwaW5nIHVwIG9uIHRoZSBiYXNpY3MgaXMgd2hhdCBpcyBtb3N0IGltcG9ydGFudC4gWWVhaCB0aGVyZSBpcyBtYW55IHdheXMgdG8gcG9wIGEgZG9vciwgYW5kIHlvdSBzaG91bGQga25vdyBhIGZldywgYnV0IGtub3dpbmcgMSBvciAyIHdpdGggeW91ciBleWVzIGNsb3NlZCB3aWxsIGFsbW9zdCBhbHdheXMgd29yayB3aGVuIHNoaXQgc3RhcnRzIGhpdHRpbmcuLiAKV2F5IG9mIGZhcm1pbmcgaGVhZGh1bnRlcnMgb3IgbWF5YmUgaXQgYmVjYXVzZSBidXJpYWxzIGdvdCBuZXJmZWQgYnkgYmVpbmcgbW92ZWQgZnJvbSBhIHQzIHRvIGEgdDExIG1hcC4gSSBjYW4gZGVmaW5pdGVseSBzZWUgaG93IGJpZyBvZiBhbiBpbXBhY3QgaXQgaXMuIENvbnNpZGVyaW5nIHlvdSBjYW4gdXNlIDQgd2hpdGUgc2V4dGFudHMgb24gdGhlIHByZXZpb3VzIHQzIGJ1cmlhbHMuCkxhdyBlbmZvcmNlbWVudCBtYXkgYmUgZ2F0aGVyaW5nIG11Y2ggbW9yZSBldmlkZW5jZSBhbmQgbWF5IGJlIHByZXBhcmluZyBhIGNhc2UgZm9yIHRoZXNlIHR5cGVzIG9mIGJ1c2luZXNzZXMgYWxyZWFkeS4gVGhlc2UgdGhpbmdzIHVzdWFsbHkgdGllIGludG8gSFVHRSBuZXR3b3JrcyBpbnZvbHZpbmcgbXVsdGlwbGUga2V5IHBlcnNvbnMuIApQZW9wbGUgaGF2ZSBjb21lIHRvIGhpbSBhc2tpbmcgYWJvdXQgaGlzIGRpZXQsIGl0IGNlcnRhaW5seSBub3QgYW55dGhpbmcgdGhhdCBoZSBwdXNoZXMuIEhlIHF1aXRlIGhlc2l0YW50IHRvIHNoYXJlIGhpcyBvd24gYW5lY2RvdGFsIHN0b3J5LCBhbmQgZXhwbGljaXRseSB0ZWxscyBwZW9wbGUgdGhhdCB0aGlzIHNob3VsZG4gd29yayBhbmQgdGhleSBzaG91bGRuIHRyeSBpdC4uIApFdmVuIHdoZW4gbGF5aW5nIGl0IGFsbCBvbiB0aGUgbGluZSwgeW91ciBhY3Rpb25zIHNob3VsZCBiZSBjYWxjdWxhdGVkLCBub3QgcmFzaC4gTmV2ZXIgcnVzaCBpbnRvIGEgbG9zaW5nIHNpdHVhdGlvbiBvdXQgb2YgZGVzcGVyYXRpb24uClRoZXkgd2VpZ2ggYmV0d2VlbiAzOTdnIHRvIDQ1NGcgKDE0b3ogdG8gMTZveiksIGFuZCB2YXJ5IGluIHNpemUgZGVwZW5kaW5nIG9uIHRoZSBwbGF5ZXIuIApUaGF0IHdoeSBCcml0aXNoIEFpcndheXMgcmVjZW50bHkgYXNrZWQgaXRzIGVtcGxveWVlcyB0byB3b3JrIGZvciBhIG1vbnRoIHdpdGhvdXQgYSBwYXkuCldpdGggdGhlIGRlZmVhdCBvZiB0aGUgSmFwYW5lc2UgMTV0aCBBcm15IGluIE9wZXJhdGlvbiBFeHRlbmRlZCBDYXBpdGFsLCB0aGV5IG5ldmVyIHN0b3BwZWQgcmV0cmVhdGluZyAoYWx0aG91Z2ggdGhleSBmb3VnaHQgcmVhcmd1YXJkIGFjdGlvbnMgdW50aWwgdGhlIGVuZCkuIFRoaXMgQnJpdGlzaCB2aWN0b3J5IHdhcywgd2l0aG91dCBhIGRvdWJ0LCBhbiBpbXByZXNzaXZlIGZlYXQuIEkgYW0gYmFyZWx5IHNjcmF0Y2hpbmcgdGhlIHN1cmZhY2Ugb2YgdGhpcyBzcGVjaWZpYyBvcGVyYXRpb24gYW5kIEkgcmVjb21tZW5kIHRoYXQgYW55b25lIGludGVyZXN0ZWQgaW4gcmVhZGluZyBtb3JlIHBpY2sgdXAgb25lIChvciBzZXZlcmFsKSBvZiB0aGUgYm9va3MgbWVudGlvbmVkIGluIHRoZSBwb3N0IGFib3ZlLgpOb3Qgc2hvcnRjdXRzLiAKVHdvIG9mIHRoZSBncm91cHMgc3ViamVjdGVkIHRvIHRoZSBpbmp1cnkgd2VyZSBzdXBwbGVtZW50ZWQgd2l0aCAxMCBvciA0MCBtZy9rZy9kYXkgb2YgTzNGQTsgdGhlIHRoaXJkIGluanVyZWQgZ3JvdXAgc2VydmVkIGFzIGFuIHVuc3VwcGxlbWVudGVkIGNvbnRyb2wgZ3JvdXAuIApGdXJ0aGVyIG11ZGR5aW5nIHRoZSB3YXRlciBpcyB0aGUgc2NpZW50aWZpYyB1c2Ugb2YgJ2xhdycgYXMgYSBzeW5vbnltIGZvciAndGhlb3J5Jy4gQSB0aGVvcnkgdGhhdCBoYXMgd2l0aHN0b29kIGFsbCB0ZXN0cyBzY2llbnRpc3RzIGhhdmUgYmVlbiBhYmxlIHRvIGNvbmNlaXZlIGFuZCBwZXJmb3JtIGZvciBtYW55IHllYXJzIGlzIG9mdGVuIGNhbGxlZCBhIGxhdy4gQW4gZXhhbXBsZSBvZiB0aGlzIGlzIFRoZSBUaHJlZSBMYXdzIG9mIFRoZXJtb2R5bmFtaWNzLiBCdXQgYWx0aG91Z2ggY2FsbGluZyBpdCBhIGxhdyBtYWtlcyBpdCBsb29rIGxpa2UgYW4gYXNzZXJ0aW9uIHRoYXQgaXQgaXMgMTAwJSBjb3JyZWN0LCB0aGVyZSBpcyBzdGlsbCB0aGF0IHRpbnkgY2hhbmNlIHRoYXQgbmV3IG9ic2VydmF0aW9ucyB3aWxsIHByb3ZlIGl0IGluY29ycmVjdCBpbiBzb21lIG1hbm5lci4gVGhlIGVudHJ5IExpZXMsIERhbW5lZCBMaWVzIGFuZCBTY2llbmNlIExlc3NvbnMgc2hvd3MgaG93IHNvbWUgdGhlb3JpZXMgdGhhdCBoYXZlIGJlZW4gZGlzcHJvdmVkIHN0aWxsIHJlbWFpbiB1c2VmdWwuClR1cm4gNyB3aGljaCBicmluZ3MgYSBmbHVzaCBkcmF3IG9uIGJvYXJkLiBJIGJldCA3NS4gClNvLCB3ZSBhbGwgZm91bmQgb3VyIG5pY2hlLiBXaGljaCBpcyBncmVhdC4gQnV0IGl0IGFsc28gbWVhbnMgdGhhdCB0aGVyZSBubyB1bmlmeWluZyBleHBlcmllbmNlLiBUb2RheSwgbm9uZSBvZiB1cyB0YWxrZWQgYWJvdXQgdGhlIHN1cGVyIGJvd2wuIE5vbmUgb2YgdXMgZXZlbiB3YXRjaGVkIGl0LgpIYXZlIHlvdSBjaGVja2VkIENsYXJrIENvdW50eSBqYWlsPyBBcmVhIGhvc3BpdGFscz8gSSdsbCBlbWFpbCB5b3UgcHJpdmF0ZWx5LiBUaGUgc3ViamVjdCBsaW5lIHdpbGwgYmUgJ21vcmUgc3VnZ2VzdGlvbnMgZm9yIGZpbmRpbmcgeW91ciBicm90aGVyJy4gSSdtIGFuIGFvbCBwZXJzb24sIHRvby4KVmFuIEdvZ2gncyBTdGFycnkgTmlnaHQgbWlnaHQgYmUgYW4gaW5zcGlyYXRpb24gZm9yIGFuIGFzcGlyaW5nIGFydGlzdCwgYnV0IGl0J3MgZmluaXNoZWQuIENvbXBsZXRlLiAKTEVMQU5EWUVFIHUKUCBoYWNraW5nIGlzIGEgYnJvYWQgdGVybSB0aGF0IGNvdmVycyBhIHZhcmlldHkgb2YgZHViaW91cyBzdGF0aXN0aWNhbCB0ZWNobmlxdWVzLiAKSSByZWNvZ25pemUgdGhhdCBpdCBzdHVwaWQgYW5kIGlycmF0aW9uYWwgYW5kIGh5cG9jcml0aWNhbCBjb25zaWRlcmluZyBteSBvd24gcGFzdCwgYnV0IEkgY2FuIGhlbHAgd2hhdCBJIGZlZWwuIApJIHN0aWxsIGEgbGl0dGxlIGNvbmZ1c2VkIG9uIHRoZSBzd29yZCBoYXRlLiAKWW91IGRvIG5vdCBuZWVkIHNoaW1zIGZvciB0aGUgRGVhZCBBaXIgMTR4MSBrZXltbyBmbGFzaCBoaWRlci4gSW4gZ2VuZXJhbCwgeW91IGRvbid0IG5lZWQgc2hpbXMgZm9yIGFueSBGSCB1bmxlc3MgeW91IHdhbnQgdG8gdGltZSBpdCB0byB0aGUgYmFycmVsIGluIGEgc3BlY2lmaWMgcGxhY2UgICBiYXNpY2FsbHkgeW91IGp1c3QgbmVlZCBSb2Nrc2V0dCBhbmQgYSB0b3JxdWUgd3JlbmNoLiBZb3UgRE8gbmVlZCB0byBjaGVjayBiYXJyZWwgLyB0aHJlYWQgY29uY2VudHJpY2l0eSBmaXJzdDsgeW91IGNhbiBidXkgYW4gYWxpZ25tZW50IHJvZCBvbmxpbmUgb3IgaGF2ZSB5b3VyIGd1bnNtaXRoIGRvIGl0IGZvciB5b3UgZm9yIHJlbGF0aXZlbHkgY2hlYXAuIApUaGUgcHJldmlvdXMgTWFnaWMgQWN0aW9uIEJveCBwbHVnaW4gdXBkYXRlIHYyLjE2LjcgYWRkZWQgYnVpbHQgaW4gc3VwcG9ydCBmb3IgQ29uc3RhbnQgQ29udGFjdC4gCjEuIApPdXIgVHdpdHRlci4KV2Vha25lc3NlcyBUaGUgSG9yc2UgcGVyc29uIGlzIHBhdGllbnQgdXAgdG8gYSBwb2ludCwgYnV0IHRoZXkgY2FuIGJlIGhvdCB0ZW1wZXJlZC4gCkFsbCB5b3UgYXJlIGRvaW5nIGlzIHN0aXJyaW5nIHVwIG1vcmUgb2YgdGhlIHNhbWUgc3R1ZmYgdGhhdCB5b3Ugc2VlbSB0byBiZSBjcml0aWNpemluZy4gTGlrZSBtZSBtYWtpbmcgdGhpcyBwb3N0LiAKVGhpcyBpcyBjb21pbmcgZnJvbSBhbiBBdXNzaWUgRGFkIHdobyBqdXN0IHRvb2sgNiB3ZWVrcyBvZmYgcGFpZCB0byBzcGVuZCB3aXRoIG15IG5ld2Jvcm4gYmFieSBnaXJsLiBGYXRoZXJzIGdldCAyIHdlZWtzIHBhdGVybml0eSBsZWF2ZSAod2hpY2ggSSBzdGlsbCB0aGluayBzaG91bGQgYmUgNCB3ZWVrcyBtaW5pbXVtLCBidXQgMiBpcyBkZWNlbnQpIGFuZCBtb3RoZXIgZ2V0IDE2IHdlZWtzIEkgdGhpbmssIHdoaWNoIHRoZXkgaGF2ZSB0aGUgb3B0aW9uIHRvIGRvdWJsZSBhbmQgdGFrZSBhdCBoYWxmIHBheS4uIApCdXQgYmxhY2sgZHlrZXMgKHRoZSBtb3N0IHNjYXJ5IGtpbmQgb2YgY291cnNlKS4gV2UgYXJlIHN0cmFpZ2h0IGJ1dCBkdW1iLiAKQWxsIGNhc2VzIGZvciBjb25zaWRlcmF0aW9uIHNob3VsZCBiZSBtYWlsZWQgKHRvIHRoZSBhZGRyZXNzIGFib3ZlKSB3aXRoIGEgYnJpZWYgZmFjdHVhbCBzdW1tYXJ5IG9mIHRoZSBjYXNlLCBpbmNsdWRpbmcgdGhlIHNwZWNpZmljIGNoYXJnZXMgYW5kIGNvbnZpY3Rpb25zIGFuZCBhIGxpc3Qgb2YgdGhlIGV2aWRlbmNlIHVzZWQgYWdhaW5zdCB0aGUgZGVmZW5kYW50LiBObyBvdGhlciBkb2N1bWVudHMgc2hvdWxkIGJlIHN1Ym1pdHRlZCBmb3IgaW5pdGlhbCByZXZpZXcuIApUaGVuIHRoZSByZXN0IG9mIHRoZSBBZ2F0aGEgQ2hyaXN0aWUgc3R5bGUgbXVyZGVyIG15c3RlcnkgdW5mb2xkcyBhcyB5b3UgYmF0dGxlIHlvdXIgd2F5IHRvIHRoZSB0cnV0aCBhbmQgYSBzaGlueSBuZXcgYmFkZ2UuCkluc3RlYWQgb2YgY3V0dGluZyB0aXNzdWUgb3V0LCB0aGUgbmV3ZXIgdGVjaG5pcXVlIGNyZWF0ZXMgdGhlIGNoYW5uZWwgYnkgdmFwb3JpemluZyB0aGUgdGlzc3VlIHVzaW5nIGxhc2VyIGVuZXJneS4gClRoZSB3YXJyaW9yIGRyYW1hIDMwMDogUmlzZSBvZiBhbiBFbXBpcmUgbGFuZGVkIHRoZSBudW1iZXIgdHdvIHNsb3QgYW5kIE5lZWQgZm9yIFNwZWVkIHN0YXJyaW5nIEJyZWFraW5nIEJhZCdzIEFhcm9uIFBhdWwgY2FtZSBpbiBhdCBudW1iZXIgdGhyZWUuLiAKVGhlIG5ldyBkaXZpc2lvbiB3aWxsIHByb211bGdhdGUgcnVsZXMgdGhhdCBkZWNpZGUgdGhlIGRldGFpbHMsIGJ1dCBtdXN0IGFsbG93IGNhc2lubyBzdGFwbGVzIHN1Y2ggYXMgcG9rZXIsIGJsYWNramFjaywgY2FyZHMgYW5kIHNsb3RzLiAKVGhlIHN0b2NrcGlsaW5nIG9mIHN1Y2ggaHVnZSBhbW91bnRzIG9mIHdlYXBvbnJ5IGJlZ2FuLCBvZiBjb3Vyc2UsIHdpdGggT2JhbWEgZWxlY3Rpb24uLiAKSEFZRVMsIFRyZXZvciBFZHdhcmQgQWxiZXJ0ICAgMzYsIG9mIFNhcm5pYSBwYXNzZWQgYXdheSB1bmV4cGVjdGVkbHkgb24gQXVndXN0IDEsIDIwMTQuIFRyZXZvciBpcyBzdXJ2aXZlZCBieSBoaXMgbG92aW5nIHBhcmVudHMgQnJ1Y2UgYW5kIERlYmJpZSBIYXllcyBvZiBCcmlnZGVuOyBoaXMgc2lzdGVyIEhlYXRoZXIgKElhbikgQnJvd24gYW5kIG5lcGhldyBFdGhhbiBCcm93bi4gSGUgaXMgYWxzbyBzdXJ2aXZlZCBieSB1bmNsZXMgUmF5bW9uZCBKb2xseSBhbmQgUm9uIChUaW5hKSBKb2xseTsgYXVudHMgQnJlbmRhIChEb24pIEJyb21hcm9mZjsgTW9uYSBKb2xseSBhbmQgR2xvcmlhIChSb2IpIFdyaWdodDsgZ29kbW90aGVyIEJhcmJhcmEgTGFzc2FsaW5lOyBzdGVwIGJyb3RoZXJzIEFKIGFuZCBBZGFtIEhheWVzOyBzZXZlcmFsIGNvdXNpbnMgYW5kIGxvbmd0aW1lIGZyaWVuZHMuIEhlIGlzIHByZWNlZGVkIGluIGRlYXRoIGJ5IGhpcyB0d2luIGJyb3RoZXIgVGltb3RoeSBKYW1lcyBhbmQgaGlzIGdyYW5kcGFyZW50cyBKYW1lcyBhbmQgVmVyYSBKb2xseTsgUm9zZSBhbmQgSmFtZXMgSGF5ZXMuIFJlc3RpbmcgYXQgdGhlIEQuIEouIHdpdGggY3JlbWF0aW9uIHRvIGZvbGxvdy4gU3ltcGF0aHkgbWF5IGJlIGV4cHJlc3NlZCB0aHJvdWdoIGRvbmF0aW9ucyB0byB0aGUgU2FybmlhIEh1bWFuZSBTb2NpZXR5LiBJIGtub3cgVHJldm9yIGlzIGJlaW5nIGdyZWV0ZWQgaW4gaGVhdmVuIGJ5IG1hbnkgcGVvcGxlIHdobyBsb3ZlIGhpbSwgYW5kIEkgYmVsaWV2ZSB0aGF0IGhlIGhhcyBmb3VuZCBwZWFjZS4gTG9yaWUKVHVlc2RheSBpcyBiZWFuIGRheSBhbmQgSSB1c3VhbGx5IGVuZCB1cCBtYWtpbmcgc29tZSBraW5kIG9mIHNpbXBsZSBiZWFuIHNpdHVhdGlvbiBpbiB0aGUgSW5zdGFudCBQb3QuIFRoaXMgcmVjaXBlICh1c2luZyBSYW5jaG8gR29yZG8gY3JhbmJlcnJ5IGJlYW5zLCBmb3IgZXhhbXBsZSEpIGlzIHdvbmRlcmZ1bCBhbmQgQnJ1bm8gd2lsbCBlYXQgYXQgbGVhc3QgdGhyZWUgaGVscGluZ3Mgb2YgaXQuIFdIVVQuIApTdWNoIHByb2plY3RzIGNhbiByZXF1aXJlIG1hbnkgbWFuIGhvdXJzIGFuZCBvdXIgdGltZSBpcyBzaW1wbHkgYmV0dGVyIHNwZW50IGVsc2V3aGVyZS5HaXZlbiB0aGUgbGVuZ3RoIG9mIG91ciBwcm9kdWN0aW9uIGN5Y2xlIGZvciBpbiBnYW1lIGNvbnRlbnQsIHRoZSBwYXJ0aWNpcGFudHMgZm9yIFk0UzEgMyBoYXZlIGFscmVhZHkgYmVlbiBkZXRlcm1pbmVkLiAKRnVydGhlciwgd2UgY2FuIHRhbGsgYWJvdXQgb25lIHBhaXIsIG9yIGEgbnVtYmVyIG9mIHBhaXJzIG9mIHRoaW5ncy4gCkkgb3JpZ2luYWxseSBmcm9tIEF0bGFudGEgYW5kIG1vdmVkIGhlcmUgYWJvdXQgMTAgeWVhcnMgYWdvLiBJdCBiZWVuIGF3ZXNvbWUgd2F0Y2hpbmcgQVRMIFVuaXRlZCB0YWtlIG9mZiBsaWtlIGEgcm9ja2V0LiAKTm8gU3RlcGhlbnMuIApEaXNjbGFpbWVyOiB0aGlzIGlzbid0IG15IGZpcnN0IGRvZywgbXkgZmFtaWx5IGhhcyBoYWQgaHVza2llcyBmb3JldmVyIHNvIEkga25vdyB0aGUgYnJlZWQgZmFpcmx5IHdlbGwgYW5kIEknbSBpbiBzY2hvb2wgdG8gYmUgYSB2ZXQgdGVjaCBzbyBmb3IgdGhlIG1vc3QgcGFydCBJIGtub3cgd2hhdCB0byBsb29rIGZvciBpbiB0ZXJtcyBvZiBwYXJ2by93b3Jtcy9pbmp1cmllcywgYnV0IHdpbGwgc3RpbGwgYmUgYnJpbmdpbmcgaGVyIHRvIHRoZSB2ZXQgcmlnaHQgd2hlbiB0aGV5IG9wZW4gaW4gdGhlIG1vcm5pbmcuIEkga25vdyBDcmFpZ3NsaXN0IGlzIGxpdGVyYWxseSB0aGUgd29yc3Qgd2F5IHRvIGdldCBhIGRvZyBhbmQgc2hlIG1pZ2h0IG5vdCBiZSBoZWFsdGh5IGJ1dCB0aGVyZSB3YXMgbm8gcG9zc2libGUgd2F5IEkgd2FzIGdvaW5nIHRvIGxlYXZlIGhlciB0aGVyZS4uIAoxMzY5MjQgcmVjb3JkcyAuIExvZ2ljIFBybyA4LjAuMiBzZXJpYWwgbnVtYmVycywgY3JhY2tzIGFuZCBrZXlnZW5zIGFyZSBwcmVzZW50ZWQgaGVyZS4gClRoZSBvbmx5IHdheSBJJ3ZlIGZvdW5kIHRvIGtlZXAgcGllY2Ugb2YgbWluZCBpcyBhIGxhcmdlIGVtZXJnZW5jeSBmdW5kLiBJIGtlZXAgYSBsb3QgbW9yZSBsaXF1aWQgY2FzaCB0aGFuIG1vc3QgcGVvcGxlIHdpdGggbXkgaW5jb21lLCBhbmQgSSdkIHByb2JhYmx5IHRlY2huaWNhbGx5IGJlIGJldHRlciBvZmYgaWYgSSBpbnZlc3RlZCBtb3JlIG9yIHBhaWQgb2ZmIGRlYnQgbW9yZSBhZ2dyZXNzaXZlbHksIGJ1dCBJIGtub3cgdGhhdCBhIGJhZCBtb250aCBvciBldmVuIGEgYmFkIHF1YXJ0ZXIgd29uJ3QgbGVhdmUgbWUgbGl2aW5nIG9mZiBjcmVkaXQgY2FyZHMuLiAKVGhleSB3ZXJlIHJlYWxseSBuaWNlIHRobyBhbmQgSSB0b2xkIHRoZW0gd2hhdCBoYXBwZW5lZCBhbmQgdGhleSBzaWRlZCB3aXRoIG1lIGJ1dCBkZWNpZGVkIHRvIGp1c3Qga2ljayB1cyBib3RoIG91dC4uIApOb3ZlbHMgYnkgRWRnYXIgUmljZSBCdXJyb3VnaHNKb3VybmV5IFRvIFRoZSBNb29uQnVycm91Z2hzJyBjYXJlZXIgYmVnYW4gaW4gMTkxMS4gRGVzcGl0ZSBoaXMgb3ZlcndoZWxtaW5nIHN1Y2Nlc3MgZm9sbG93aW5nIHRoZSBjcmVhdGlvbiBvZiBUYXJ6YW4sIGhlIHN0aWxsIHJlY2VpdmVkIHB1YmxpY2F0aW9uIHNldCBiYWNrcy4gSW4gMTkxOSBhIG5vdmVsbGEgaGUgaGFkIHdyaXR0ZW4gdGl0bGVkIFVuZGVyIHRoZSBSZWQgRmxhZyB3YXMgcmVqZWN0ZWQgYnkgZXZlcnkgbWFnYXppbmUgZWRpdG9yIGhlIHNlbnQgaXQgdG8uIApBIGZhbW91cyBmb290YmFsbCBtYW5hZ2VyICh0aGUgbW9zdCBzdWNjZXNzZnVsIGluIGVuZ2xhbmQpIHNhaWQgaW4gaGlzIGJvb2sgdGhhdCBoaXMgcG9saWN5IHdhcyBuZXZlciBtb3JlIHRoYW4gMyBwbGF5ZXJzIGZyb20gdGhlIHNhbWUgZm9yZWlnbiBjb3VudHJ5IGFzIGFueW1vcmUgdGhhbiB0aGF0IHN0YXJ0cyBidWlsZGluZyBhbiBhbmQgdGhlbSBtZW50YWxpdHkuIElmIGhlIGtuZXcgaXQgd2h5IGNhbnQgb3VyIGRhbW4gZ292ZXJubWVudHMhClRoZSBFVSBpcyB0aGUgb25seSBsYXJnZSBib2R5IGluIHRoZSB3b3JsZCB0aGF0IGlzIHN0YW5kaW5nIHVwIHRvIEZhY2Vib29rLCB0d2l0dGVyLCByYWNpc3QgYm90cyBldGMuIFRoYXQgYXJlIHNjb3VyZ2Ugb2YgbW9kZXJuIHNvY2lldHkuIApMaW1pdGF0aW9ucyBvbiBleGNsdXNpdmUgcmlnaHRzOiBDb21wdXRlciBwcm9ncmFtcyA1MyAoYSkgTWFraW5nIG9mIEFkZGl0aW9uYWwgQ29weSBvciBBZGFwdGF0aW9uIGJ5IE93bmVyIG9mIENvcHkuIApFbGxlIGVzdCBjb21tZSBsJ2FuaW1hbCBsZSBwbHVzIGhhYmlsZSBldCBsZSBwbHVzIHB1aXNzYW50IGRlIG5vdHJlIG1vbmRlIGV0IGMnZXN0IHNhIG1jb25uYWlzc2FuY2UgcXVpIG5vdXMgZmFpdCBhdm9pciBwZXVyIGRlIGx1aSBhdSBwb2ludCBkZSBsZSBsYWlzc2VyIG5vdXMgZG9taW5lciBldCBzJ2ltcG9zZXIgaW5jZXNzYW1tZW50ICBub3VzLgpBbmQgd2hpbGUgQ2hpbmEgd291bGQgbG92ZSB0byBoYXZlIFRhaXdhbiwgaXQgbm90IHdvcnRoIGEgaHVuZHJlZCBtaWxsaW9uIENoaW5lc2UgbGl2ZXMsIHdoaWNoIGlzIHdoYXQgaXQgY29zdHMgdG8gaW52YWRlIGEgbnVjbGVhciBwb3dlci4KSXQgaGFzIGFsbCB0aGUgbm9ybWFsIHN0dWZmIGxpa2UgYW1iaWVudCBub2lzZSwgYnV0IGl0IGFsc28gaGFzICJzbGVlcCBzdG9yaWVzIiAgIDE1IHRvIDMwIG1pbnV0ZSBzaG9ydCBzdG9yaWVzIGJ5IG5hcnJhdG9ycyB3aXRoIHNvb3RoaW5nIHZvaWNlcy4gCkJpZyBnbGFzc2VzIHdlcmUgc3RpbGwgaW4gc3R5bGUgYW5kIHRoZXNlIHdlcmUgdmVyeSBzbGltIHdpdGggZGlzdGluY3RpdmUgZnJhbWVzLiBJIHdhcyBpbiBhIGNsYXNzIHRoZSBuZXh0IGRheSBhbmQgYSBidW5jaCBvZiB0aGUgZ3V5cyB3ZXJlIHJvYXN0aW5nIG1lIGFib3V0IHRoZW0uIFRoZSBob3R0ZXN0IGdpcmwgaW4gc2Nob29sLCB3aG9tIEkgaGFkIG5ldmVyIHRhbGtlZCB0byBvbmNlLCBqdXN0IGZsYXRseSBzYWlkICJJIHRoaW5rIHRoZXkncmUgY3V0ZSIgYW5kIGV2ZXJ5Ym9keSBqdXN0IHNodXQgdGhlIGZ1Y2sgdXAgcmlnaHQgdGhlcmUuIApZb3UgaGF2ZSB0YWtlbiB0aGUgZmlyc3Qgc3RlcHMgdG8gZ2V0dGluZyBjb3NtZXRpYyBwbGFzdGljIHN1cmdlcnkgYW5kIGl0IGlzIHRpbWUgdG8gZ28gdG8geW91ciBmaXJzdCBhcHBvaW50bWVudC4gV2hpbGUgdGhpcyBpcyBhbiBleGNpdGluZyB0aW1lIGZvciB5b3UsIHdlIHVuZGVyc3RhbmQgdGhhdCB5b3UgbWF5IGFsc28gaGF2ZSBzb21lIGFueGlldHkgYWJvdXQgdGhlIGNvbWluZyB3ZWVrcy4gClRoZSBkaXZlcnNpb24gb2YgQm9uZHMgd2lsbCBuZXZlciBiZSBnb25lIGFzIGxvbmcgYXMgaGUgY29udGludWVzIHRvIGNoZWF0IGFuZCBsaWUgYWJvdXQgaGlzIHVzZSBvZiBkcnVncy4gQmFycnkgaXMgYSBkaXNncmFjZSB0byBiYXNlYmFsbCBhbmQgdGhlIG9ubHkgc29sdXRpb24gaXMgZm9yIGhpbSB0byBnbyB0byBqYWlsIGFuZCBiZSBiYW5uZWQgZnJvbSBiYXNlYmFsbCBmb3JldmVyLCB0YWtpbmcgYXdheSB0aGUgcmVjb3JkIGhlIHRoaW5rcyBoZSBicm9rZS4gSGFuayBBYXJvbiBpcyB0aGUgSG9tZXJ1biBsZWFkZXIgYW5kIGhvbGRzIHRoZSByZWNvcmQgcGVyaW9kLiAKVGhlcmUgaGF2ZSBiZWVuIGEgZmV3IHRpbWVzIHdoZXJlIEkgYW5ub3VuY2UgdG8gc29tZW9uZSBzb21ldGhpbmcgYWxvbmcgdGhlIGxpbmVzIG9mICJ0aGFua3MgZm9yIHBheWluZyBmb3IgbXkgbWFzc2FnZSEiIEJ1dCBpdCBhbG1vc3QgYWx3YXlzIGdvaW5nIHRvIGJlIGF0IG9uZSBvZiB0aGUgb3RoZXIgcmVncyBpbiB0aGUgZ2FtZSBhbmQgaXMganVzdCBzb21lIGdvb2QgbmF0dXJlZCByaWJiaW5nIGFuZCBub3QgYW55dGhpbmcgbWFsaWNpb3VzLgpFYWNoIGNhcmQgaGFzIG9uZSBvZiBmb3VyIHN1aXRzOiBjbHVicywgZGlhbW9uZHMsIGhlYXJ0cyBvciBzcGFkZXMuIFRoaXMgaXMgb2Z0ZW4gcmVmZXJyZWQgdG8gYXMgdGhlIGNvbG91ciBvZiB0aGUgc3VpdC4gVGhpcyBhcmUgc2hvd24gb24gdGhlIGNhcmRzIGFzIHBpcHMsIG9yIGxpdHRsZSBzaGFwZXMgb2YgdGhlIHBhcnRpY3VsYXIgc3VpdCwgc3VjaCBhcyBhIFRNIGZvciBjbHVicy4gCldobHQgZWluZSBQb2tlcnZhcmlhbnRlLiBQb2tlciBpc3QgZWluIGJlbGllYnRlcyBLYXJ0ZW5zcGllbCwgaW4gZGVtIGRpZSBTcGllbGVyIEthcnRlbiBhdXNnZXRlaWx0IGJla29tbWVuIHVuZCBnZWdlbmVpbmFuZGVyIGFiaG5naWcgdm9uIGRlciBTdHJrZSBpaHJlciBLYXJ0ZW4gYmlldGVuLiAKRm9yIGFuIGludHJvZHVjdG9yeSBmaWxtLCBDYXB0YWluIE1hcnZlbCBpcyBwcmV0dHkgZGVjZW50LiAKRnJhbmNpcyBhcHByb3ZlZCBhIGRlY3JlZSB0aGF0IGEgQ29zdGEgUmljYW4gd29tYW4ncyBpbmV4cGxpY2FibGUgY3VyZSBmcm9tIGEgZGVhZGx5IGJyYWluIGFuZXVyaXNtIHdhcyB0aGUgIm1pcmFjbGUiIG5lZWRlZCB0byBjYW5vbml6ZSBKb2huIFBhdWwuIApPdmVydmlldyBmb3IgRWxkZXJLaW5ncGluClRoZSBwbGF5ZXJiYXNlIGFuZCB0b3RhbCBudW1iZXIgb2YgZW1wbG95ZWVzIGRvZXMgbm90IHNheSBhbnl0aGluZyBhYm91dCB0aGUgbnVtYmVyIG9mIHJlcG9ydHMgdGhleSBnZXQgcGVyIGRheSBvciB0aGUgbnVtYmVyIG9mIGVtcGxveWVlcyB0aGV5IGhhdmUgZm9yIGN1c3RvbWVyIHN1cHBvcnQuIFdpdGggeW91ciByZWFzb25pbmcsIGEgZ2FtZSB3aXRoIDQwayBwbGF5ZXJzIHNob3VsZCBvbmx5IG5lZWQgb25lIGVtcGxveWVlIHRvIGRvIGN1c3RvbWVyIHN1cHBvcnQvIGZpeCBidWdzLyByZWxlYXNlIG5ldyBjb250ZW50Ly4KSHVuZ3dlLCAzMSwgTmt1c2ksIDI2LCBEYW91aSwgMjUsIFJpY2hhcmQgRWxsaXMsIDI4LCBhbmQgR2VvdmFubmkgRWxsaXMsIDIwLCBhcmUgY2hhcmdlZCB3aXRoIGNvbnNwaXJpbmcgdG8gcm9iIHRoZSBob21lLgpUaGUgcmVjZWl2ZXIgaGl0cyB0aGUgYmFsbCBvdXRUaGUgcmVjZWl2ZXIgaGl0cyB0aGUgYmFsbCBpbnRvIHRoZSBuZXRUaGUgc2VydmVyIHNlcnZlcyBhbiBhY2VUaGUgc2VydmVyIGhpdHMgYSB3aW5uZXI0VGhlIHJlY2VpdmVyIGxvc2VzIHRoZSBwb2ludCB0aHJvdWdoIGEgY29kZSB2aW9sYXRpb24gKHNlZSBDb3VydCBFdGlxdWV0dGUgZm9yIGRlZmluaXRpb24pIG9yIHdhcm5pbmcgZ2l2ZW4gYnkgdGhlIHVtcGlyZUZvciB0aGUgcmVjZWl2ZXIgdG8gd2luIGEgcG9pbnQsIGVpdGhlciBvZiB0aGVzZSBzY2VuYXJpb3MgbXVzdCBvY2N1cjoKU2hlIHN0YXJ0ZWQgZGF0aW5nIGEgbWFuIGZyb20gdGhlIHNhbWUgY2h1cmNoLiBJbnN0ZWFkIG9mIHdhaXRpbmcgZm9yIG1hcnJpYWdlLCBzaGUgaGFkIHNleCB3aXRoIGhpbSBhIHdlZWsgYWZ0ZXIgdGhleSBiZWdhbiBkYXRpbmcuIFRoZSByZWxhdGlvbnNoaXAgd2l0aCB0aGlzIG1hbiwgd2hvIHdvdWxkIGJlY29tZSBKZXNzJ3Mgc2Vjb25kIGh1c2JhbmQsIHdhcyB0aGUgYmVnaW5uaW5nIG9mIGhlciBzZXh1YWwgYXdha2VuaW5nLiBGaXJzdCBjYW1lIGEgYmV0dGVyIHNleCBsaWZlIGF0IGhvbWUuIFRoZW4gSmVzcyBzdGFydGVkIGRhYmJsaW5nIGluIG9ubGluZSBzZXggZm9ydW1zIGFuZCBmZXRpc2ggc2l0ZXMuIFNoZSBwb3N0ZWQgbnVkZSBwaG90b3Mgb2YgaGVyc2VsZi4gU2hlIHNvdWdodCBvdXQgc3dpbmdlcnMgYW5kIGZyaW5nZSBncm91cHMgd2hvIGZvdW5kIGFub255bWl0eSBhbmQgY29tbXVuaXR5IG9uIHRoZSB3ZWIuCklSRUxBTkREaXBsb21hdHMgdG8gdHJhdmVsIHRvIFN5cmlhIGZvbGxvd2luZyBkZXRlbnRpb24gb2YgZm9ybWVyIElyaXNoIHNvbGRpZXJUYWxrcyB1bmRlcndheSBiZXR3ZWVuIG51cnNpbmcgdW5pb25zIGFuZCBHb3Zlcm5tZW50IHRvIHJlYWNoIGNvbnRyYWN0IGFncmVlbWVudHNTUE9SVFdvbWVuJ3MgU2l4IE5hdGlvbnM6IElyZWxhbmQgc3VmZmVyIHNlY29uZCBob21lIGRlZmVhdCBhZnRlciAxMCB0cnkgdHVzc2xlIHdpdGggRnJhbmNlTGltZXJpY2sgc3Ryb2xsIHBhc3QgTGFvaXMgaW4gaHVybGluZyBsZWFndWUgcXVhcnRlciBmaW5hbFdPUkxESm9obiBNY0Rvbm5lbGwgc2F5cyBoZSBhbmQgSmVyZW15IENvcmJ5biBhcmUgcHJlcGFyaW5nIGZvciBnb3Zlcm5tZW50VGhvdXNhbmRzIGpvaW4gcml2YWwgcHJvdGVzdHMgb24gc3RyZWV0cyBvZiBWZW5lenVlbGFCVVNJTkVTU1N0ZXJsaW5nIHdvYmJsZXMgYWhlYWQgb2YgY3J1bmNoIEJyZXhpdCB3ZWVrIGFzIEJhcm5pZXIgb2ZmZXJzIGJhY2tzdG9wIGFzc3VyYW5jZUFJQiAnc2hvdWxkIGFkZCA2LDAwMCBjdXN0b21lcnMnIHRvIHRyYWNrZXIgbW9ydGdhZ2UgYmlsbExJRkVTVFlMRVRocmVlIHJlY2lwZXMgZnJvbSBNYXJ5IEJlcnJ5J3MgbmV3IGJvb2ssIFF1aWNrIENvb2tpbmdXZWVrZW5kIEZvb2Qgd2l0aCBEYXJpbmEgQWxsZW46IEhvdyBCYWxseW1hbG9lIGNyZWF0ZXMgdGhhdCBhd2FyZCB3aW5uaW5nIGRlc3NlcnQgdHJvbGxleQpTdGlsZXR0b3MgaXNuJ3QgZ2hldHRvIGJ1dCBkZWYgbW9yZSBvZiBhIGxvY2FsIHNwb3QuIEkgbGlrZSBpdCBiZXR0ZXIgdGhhbiBzY29yZXMuIFRoZXkgaGF2ZSAyIHNpZGVzIG9uZSB3aXRoIGxpcXVvciB3aGVyZSB0aGUgZ2lybHMgYXJlIGluIGJpa2luaXMgYW5kIGFub3RoZXIgc2lkZSB5b3UgY2FuIGNhcnJ5IGJlZXIgaW50byB3aGVyZSB0aGV5IGdldCBwcmV0dHkgcmF1bmNoeSBvbiBzdGFnZS4gCkZ1cnRoZXJtb3JlLCBhbHRob3VnaCBvbmUgR29kLCB0aGUgRmF0aGVyLCBTb24sIGFuZCBIb2x5IFNwaXJpdCBhcmUgZGlzdGluY3QgZnJvbSBlYWNoIG90aGVyLiAKTm90IHN1cmUgaWYgdGhhdCB3YXMgYXJ0aWN1bGF0ZSBlbm91Z2ggdG8gZXhwcmVzcyBteSB0aG91Z2h0cyBhdCBhbGwsIGJ1dCBtZWguIEFueSBSTVQgd2hvIGlzIHByb2Zlc3Npb25hbCBzaG91bGQgbm90IGV4cGVjdCB0byBiZSB0aXBwZWQgb3IgdHJlYXQgYSBjbGllbnQgZGlmZmVyZW50bHkgaWYgdGhleSBkbyBub3QgdGlwLgpXYXMgR290aGVzdCBHaXJsIEkgQ2FuIChvbiBDYWJpbiBGZXZlcikgaW5zcGlyZWQgYnkgb25lIHBhcnRpY3VsYXIgZ290aCBnaXJsPy4gCkonYWkgZGNpZCBxdWUgamUgbWFuZ2VyYWlzIHRvdXQuIEplIG1lIHN1aXMgZml4ZSB1bmUgcmdsZSA6IGplIGdvdGUgdG91dCBzaSBxdWVscXUndW4gbWUgbGUgcHJvcG9zZSwgbWUgdGVuZCBsYSBtYWluIGF2ZWMgdW4gYWxpbWVudCwgdW4gcGxhdC4KQnV0IHRoZW4sIFJvY2sgR2FtaW5nIGNvbnRyYWN0IHdpdGggQ2Flc2FycyBFbnRlcnRhaW5tZW50IENvcnAuIGhhZCBleHBpcmVkLCBUcmljYW5vIHNhaWQsIGFuZCBSb2NrIEdhbWluZyB3YXMgcmVhZHkgdG8gcnVuIGl0cyBjYXNpbm8gaW4gQ2xldmVsYW5kIG9uIGl0cyBvd24uClRoZXNlIGFyZSBoaWdoIGdyYWRlIGNsYXkgY2hpcHMgdGhhdCB3aWxsIGNlcnRhaW5seSBsYXN0IGEgbG9uZyB0aW1lIG5vIG1hdHRlciBob3cgb2Z0ZW4gdGhleSBhcmUgdXNlZC4gSG9wZWZ1bGx5LCB3aGVuIHRoZXkgYXJlIHVzZWQgdGhleSB3aWxsIHVzZWQgaW4gY29uanVuY3Rpb24gd2l0aCB3aW5uaW5nIGhhbmRzIS4gCiJJbiBhIHNlbnNlLCB0aGV5IHdvcnRobGVzcyBiZWNhdXNlIHlvdSBjYW4gc2VsbCB0aGVtLCIgR3V0aGVpbnogc2FpZCBieSB0ZWxlcGhvbmUgdGhpcyB3ZWVrIGZyb20gaGlzIGxhdyBvZmZpY2UgaW4gRnJpZW5kc3dvb2QsIFRleGFzLiBBc3Ryb25hdXRzIGluIHNpeCBtaXNzaW9ucyBiZXR3ZWVuIEFwb2xsbyAxMSBpbiAxOTY5IGFuZCBBcG9sbG8gMTcgaW4gMTk3Mi4gVGhlIFNvdmlldCBVbmlvbiBjb2xsZWN0ZWQgYWJvdXQgMzAwIGdyYW1zIG9mIHJvY2ssIG9yIGFib3V0IHR3byB0aGlyZHMgb2YgYSBwb3VuZCwgZHVyaW5nIHVubWFubmVkIHByb2JlcyB0byB0aGUgbW9vbi4gCkFsc28sIHRoZXJlIGlzIHZlZ2V0YXRpb24gb24gTWFycyB3aGljaCBpcyB2ZXJ5IGRpZmZlcmVudCBmcm9tIHRoYXQgb2YgRWFydGgsIGFuZCB0aGF0IGlzIHdoYXQgZ2l2ZXMgdGhlIHBsYW5ldCBpdHMgcmVkIGNvbG9yLCBhcyB0aGUgcGxhbnRzIGdyb3dpbmcgdGhlcmUgbXVzdCBiZSByZWQuIFdhcyBhIGxvbmcgZGlncmVzc2lvbiB0aGUgRWFydGggZnJvbSBhZmFyIGltYWdlcyBmb2xsb3cgdGhlIGZvb3Rub3Rlcy4gCk1vc3RseSBjYXRjaHksIHNpbXBsZSBzb25ncyAgIHVzdWFsbHkgd2l0aCBhIGNydW5jaHkgZ3VpdGFyLCBhbmQgbHlyaWNzIHdyaXR0ZW4gYnkgd2hhdCBJIGNhbiBvbmx5IGRlc2NyaWJlIGFzIGEgbG9zZXIgeW91IHNlY3JldGx5IHdhbnQgdG8gYmUuIEkgZ290dGVuIHRpcmVkIG9mIG1vc3QgaGVhdnkgYW5kIGFnZ3Jlc3NpdmUgbXVzaWMsIGFuZCBJIGZpbmQgYSBsb3Qgb2YgbXVzaWMgdG8gYWxzbyBjb21wbGV0ZWx5IGxhY2sgYW55IGtpbmQgb2YgY29vbCBmYWN0b3IgdGhhdCBkcmF3cyBtZSBpbi4uIApJZiBpdCBpbiB0aGUgbWlkZGxlIG9mIGEgdmVyeSBidXN5IGludGVyc2VjdGlvbiwgdG8gbGV0IGEgeW91bmdlciBwZXJzb24gZGlzcmVzcGVjdC9jdXNzIHlvdSBpbiBmcm9udCBvZiBzbyBtYW55IHBlcnNvbiwgd291bGQgYmUgYSBodWdlIGxvc3Mgb2YgZmFjZS4gU28gaW4gdGhhdCBjYXNlIHlvdSB3b3VsZCBoYXZlIHRvIGRlZmVuZCB5b3Vyc2VsZi4KRXZlbnR1YWxseSwgdGhlIGZhdGhlciBzdGFydGVkIHRhbGtpbmcgdG8gdXMuIEkgZG9uJ3QgdGhpbmsgd2UgZXZlciBnb3QgaGlzIG5hbWUgYnV0IHRoZSBzb24ncyBuYW1lIHdhcyBXaWxsLiAKVGhleSB3aWxsIGFsc28gYmUgdXNlZnVsIGlmIHlvdSB3ZXJlIHRvIGJlIHNraWluZyB5b3UgbGlrZSB0aGUgaWRlYSBvZiBhIGxpdHRsZSBjcnlzdGFsIG9uIHlvdXIgaVBob25lIGNhc2UgdGhlbiB5b3UgcmVhbGx5IGNhbid0IGlwaG9uZSA1IGJlc3QgY2FzZXMgZ28gd3Jvbmcgd2l0aCBTd2Fyb3Zza2khIEl0J3MgYSBsb3ZlbHksIGhpZ2hseSBmdW5jdGlvbmFsIGFuZCB2ZXJzYXRpbGUgY2FzZSwgdGhhdCB3b3VsZCBoYXMgYmVlbiBjb25jZW50cmF0aW5nIG9uIHVzaW5nIGRyYXdpbmcsIHByaW50aW5nIGFuZCBwYWludGluZyB0byBjcmVhdGUgaGlzIHRhdHRvbyBhcnQgc2luY2UgdGhlIHNpeHRpZXMgYXMgb3Bwb3NlZCB0byBhY3R1YWxseSB0YXR0b29pbmcuIEthdGUgU3BhZGUgaVBob25lIHNvZnQgY2FzZSBjb3ZlciBtYWRlIGZyb20gc2lsaWNvbmUgYW5kIHF1aWNrbHkgYmVjb21lIGF2YWlsYWJsZSBhbmQgaXQgd2lsbCBiZSBpbnRlcmVzdGluZyB0byBzZWUgd2hpY2ggY2VsZWJzIGVtYnJhY2UgdGhlc2UgZnVua3kgaXBob25lIGNvdmVycyBmaXJzdC4gVGhlcmUgYXJlIHNvbWUgUGlyYXRlIGlQaG9uZSBjYXNlIGNvdmVyIGFuZCBza2lucyB0aGF0IGN1cnJlbnRseSB1cCBhdWN0aW9uLCB0aGUgc3RhcnRpbmcgcHJpY2VzIGFyZSB2ZXJ5IGxvdyBhcyBsb3cgYXMgJDAuCkhvdyBkbyBJIGNhbGN1bGF0ZSBwb2tlciBoYW5kIHByb2JhYmlsaXRpZXMKWWVhaC4gCkkgZmVlbCBhIGJpdCBvZGQgd3JpdGluZyBoZXJlLiBJIG9ubHkganVzdCBmb3VuZCBvdXQgYWJvdXQgdGhpcyBzaXRlIHdoaWNoIGFubm95cyBtZSBncmVhdGx5IGJlY2F1c2UgSSB3b3VsZCBsaWtlIHRvIGhhdmUgdmlzaXRlZCB3aGVuIG15IG93biBwZXJzb25hbCBndXJ1IChETkEpIHdhcyBzdGlsbCB0eXBpbmcuIApJIHdhcyByaW5naW5nIGEgY29sbGVnZSBraWRzIG9yZGVyIHVwIGFuZCBoZSBnb3QgdGhhdCBibGFuayBzdGFyZSBvbiBoaXMgZmFjZSBhbmQganVzdCBsb29rZWQgYXQgbWUgd2l0aCBhbG1vc3QgZGVhZCBsb29raW5nIGV5ZXMuIApTdGluZyBhbmQgaGlzIHdpZmUgVHJ1ZGllIFN0eWxlciwgYXMgd2VsbCBhcyBiaWxsaW9uYWlyZSBEYW5pZWwgT2NoLCBoYXZlIHJlcG9ydGVkbHkgYm91Z2h0IHBhZHMuIApJdCBmZWVscyBsaWtlIEZhY2Vib29rIGFsbCBvdmVyIGFnYWluLCB3aGVyZSBhbGwgbXkgZnJpZW5kcyBjYW4gc2VlIHdoYXQgSSBjb21tZW50aW5nIG9uLCBJIGhhdGUgdGhhdCBmZWF0dXJlLiBBbHNvIHlvdSBzYXlpbmcgc2hlIG9ubHkgZXZlciBkb2VzIGl0IHdoaWxlIHlvdSB0YWxraW5nIG1heSBzZWVtIHRydWUgZm9yIHlvdSwgYnV0IGNhbiB5b3UgcmVhbGx5IGtub3c/IFJlYWxpc3RpYyBhbnN3ZXIgaXMgbm8sIG5vb25lIGNhbi4gClNvIHNvbWUgbWF5IGJlIHNrZWxldG9ucyBhbmQgb3RoZXJzIG1heSBiZSBwcmVzZXJ2ZWQgY29ycHNlcyBidXQgd2UgZG9uIHJlYWxseSBrbm93IGZvciBzdXJlLlNpcmVuT2ZTY2llbmNlQUtBIGl0IGNhbGxlZCB3aGlza2V5IDYwIHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ29TaGUgd2FzIHNvIGhhcmQgb24gdGhlIHNlcmllcyBpbiB0aGUgcGFzdCBidXQgcmVhbGl6ZWQgVHdpbGlnaHQgaXMgYW5vdGhlciBleGFtcGxlIG9mIGhvdyBzb2NpZXR5IGhhdGUgb24gdGVlbmFnZSBnaXJscyBhbmQgbW9jayB0aGluZ3MgdGhhdCB0aGV5IGxpa2UgZGVzcGl0ZSB0ZWVuYWdlIGJveXMgbGlraW5nIGp1c3QgYXMgc2lsbHkgb3Igc3R1cGlkIGZyYW5jaGlzZXMuIApOZXVyb0ltYWdlLiAxMjcsIHBwLiAxMjMgMTM0LiAKVGhlIHNtZWxsIHdhcyBhbG1vc3QgcGxlYXNhbnQsIGFuZCB0aGUgcGFkcyB3ZXJlIGJldHRlciBhcyB0aGV5IHdlcmUgc21hbGxlciwgc28gYWx0aG91Z2ggdGhleSBwcm9iYWJseSB3ZXJlIGFzIHNhdHVyYXRlZCB3aXRoIHJlbW92ZXIgYXMgdGhlIGxhc3QgdGltZSBJIHRyaWVkIHRoZXJlIHdhc24ndCBzbyBtdWNoIHRvIGdvIG9uIG1lLCBhbmQgb25lIHBhZCB3YXMgZW5vdWdoIGZvciBhbGwgbXkgbmFpbHMuIApTb21lIGFyZSBsdXhlIHZlcnNpb25zIG9mIGV2ZXJ5ZGF5IGl0ZW1zLCB3aGlsZSBvdGhlcnMgYXJlIHB1cmUgcmVjcmVhdGlvbi4gCjIuIFRydW1ibyBoYXMgYW4gaW50ZXJlc3RpbmcgaGlzdG9yeSwgdG8gcHV0IGl0IG1pbGRseS4gQW4gb2xkIENvbW11bmlzdCwgaGUgb25jZSBnYXZlIHVwIGhpcyBvbGQgYXNzb2NpYXRlcyB0byB0aGUgRkJJIGF0IHRoZSBzdGFydCBvZiBXV0lJIGFuIGFjdCBoZSBsYXRlciB0aG91Z2h0IG9mIGFzIGJlaW5nIHN0dXBpZCBhbmQgd3JvbmcuIApXaGF0IHRoZSBUaW1lcyBkb2VzbiB0ZWxsIHVzIGlzIHRoYXQgaGUgQW1lcmljYW4gRW50ZXJwcmlzZSBJbnN0aXR1dGUgaXMsIGFjY29yZGluZyB0byBpdHMgd2Vic2l0ZSwgZGVkaWNhdGVkIHRvIGRlZmVuZGluZyB0aGUKRGV2aWwiIGhhcyBzaWduZWQgYSBzcG9uc29yc2hpcCBkZWFsIHdpdGggb25saW5lIHBva2VyIHJvb20gcGFydHlwb2tlciwgd2hpY2ggY3VycmVudGx5IG9wZXJhdGVzIGxlZ2FsIG9ubGluZSBwb2tlciBpbiB0aGUgU3RhdGUgb2YgTmV3IEplcnNleSwgd2hpY2ggd2lsbCBzZWUgRGFuZXlrbyByZXByZXNlbnQgdGhlIGNvbXBhbnkgaW4gdmFyaW91cyBwb2tlciB0b3VybmFtZW50cyBib3RoIGxpdmUgYW5kIG9ubGluZS4uIAorIFRoaXMga2l0Y2hlbiBpcyBhIGZpbmFsaXN0IGluIHRoZSBCZXN0IE11bHRpIEZhbWlseSBLaXRjaGVuIE5ldyBjYXRlZ29yeSBvZiB0aGUgQ2FuYWRpYW4gSG9tZSBCdWlsZGVycycgQXNzb2NpYXRpb24gb2YgQnJpdGlzaCBDb2x1bWJpYSdzIDIwMTkgR2VvcmdpZSBBd2FyZHMuCkhlIGV2ZW4gcG9pbnRlZCBvdXQgYSBzdXBwb3NlZCBzcG90IG9mIHRlbnNpb24gaW4gbXkgZ3JvaW4gYW5kIHdvcmtlZCBhdCBpdC4gSGUgYXNrZWQgaWYgSSB3YXMgb2theSB3aXRoIHRoaXMgbWFzc2FnZSAoSSB0aGluayBpbXBseWluZyB0aGUgbWFzc2FnZSB0dXJuaW5nIHNleHVhbCksIGFuZCBhZ2FpbiwgSSBkb24ga25vdyB3aHkgSSBzYWlkIHRoaXMgYnV0IEkgc2FpZCAieWVhaCIsIGFuZCB0aGVuIGhlIHByb2NlZWRlZCB0byBmdWxsIG9uIG1hc3NhZ2UgbXkgYnJlYXN0cywgZnVsbCBoYW5kIGNvbnRhY3QuIApCdWZmeXdhbiB1ClRoZSBkaXNjdXNzaW9uIGlzIGdvb2QgYmVjYXVzZSBpdCBicm91Z2h0IHVwIHNvbWUgaXNzdWVzIHdlIG5lZWQgdG8gYWRkcmVzcyBidXQgZ29pbmcgYXJvdW5kIGFuZCB0cnlpbmcgdG8gZ2V0IHRoZSBpZGVudGl0eSBvZiBldmVyeSB1c2VyIHdobyBkaXNhZ3JlZXMgd2l0aCB5b3UgYW5kIHRyeWluZyB0byByYWxseSBwZW9wbGUgdG8gbGVhdmUgdGhlIHN1YiBzZWVtcyBhd2Z1bGx5IGNoaWxkaXNoL3Ryb2xsaXNoLiBJdCBtYWtlcyBtZSBxdWVzdGlvbiB5b3VyIGludGVudGlvbnMgb2YgbWFraW5nIHRoZSB0aHJlYWQgaW4gdGhlIGZpcnN0IHBsYWNlLiAKRG9uIGJlIGEgZnJpZ2dpbiBoZXJvLgpXZSBjYW4gbWVhc3VyZSBob3cgbXVjaCBsaWdodCBoYXMgYmVlbiBzdHJldGNoZWQgYnkgdGhlIGV4cGFuc2lvbiBvZiB0aGUgdW5pdmVyc2UsIGFuZCBpZiB3ZSBjYW4gbWVhc3VyZSB0aGUgZGlzdGFuY2UgdG8gZWFjaCBsaWdodCBzb3VyY2UsIGFuZCBsb29rIGF0IGEgbG90IG9mIGxpZ2h0IHNvdXJjZXMgYXQgZGlmZmVyZW50IGRpc3RhbmNlcywgdGhhdCBnaXZlcyB1cyBhIG5pY2UgbWVhc3VyYWJsZSB0cmFjayBvZiB0aGUgZXhwYW5zaW9uIG92ZXIgdGhlIHdob2xlIGhpc3Rvcnkgb2YgdGhlIHVuaXZlcnNlLiBXaGF0IHlvdSB0aGluayB0aGUgSHViYmxlIGNvbnN0YW50IGlzIChpcyBpdCA2OCBrbS9zL01wYyBvciA3MyBrbS9zL01wYyA/KS4uIApBZnRlciBnZXR0aW5nIHN0YXRzIG9uIG9wcG9uZW50cywgSSBjb3VsZCBmb3JtdWxhdGUgYW5kIHNpdCB0aGVyZSBhbmQgdGhpbmsgb2YgaG93IHRvIGV4cGxvaXQgYSBjZXJ0YWluIHN0YXQgb2YgdGhlaXJzLCBhbmQgaXQgd2FzIGJlY29taW5nIGZ1biwgYnV0IGZlbHQgbGlrZSBpIHJlbGllZCBvbiB0aGUgc3RhdHMgd2F5IHRvbyBtdWNoIGFuZCB3b3VsZCBuZXZlciBub3RpY2UgdGhlIHN0dWZmIHRoZSBzdGF0cyBzaG93ZWQgbWUgaWYgaSB3ZXJlIHRvIHBsYXkgd2l0aCBubyBIVUQuCkluIHRoZSBtYWdhemluZSBvdmVyYWxsIDIwMDcgVG9wIDEwMCBwcm9zcGVjdHMsIFNhbmNoZXogd2FzIE5vLiAKTm9zdGFsZ2lhIHBvc3RzIGZvciBiZXR0ZXIgb3Igd29yc3QgYXJlIG9uZSB0aGluZyB0aGF0IGEgZ29vZCBwb3J0aW9uIG9mIHRoZSBjb21tdW5pdHkgY2FuIHJlbGF0ZSB0byBhbmQgYWdyZWUgd2l0aC4gCkFsc28gbm90IGFzIHNpbXBsZSBhcyBnZW5lIGlzIG9mZiwgdnMgZ2VuZSBpcyBvbi4gVGhlcmUgYXJlIHJlZmluZWQgZ3JhZGllbnRzIG9mIGludGVyYWN0aW9uIHRoYXQgY2FuIGFjdGl2YXRlIGdlbmVzIGJ5IGRlZ3JlZXMuClZBTkNPVVZFUiBUaGUgMTIgeWVhciBvbGQgZ2lybCBmcm9tIEtlbG93bmEgYXdva2UgaW4gdGhlIHdlZSBob3VycyBvbmUgbW9ybmluZywganVzdCB0d28gZGF5cyBhZnRlciBDaHJpc3RtYXMsIG9uIGEgeWFjaHQgc2FpbGluZyB0aHJvdWdoIHRoZSB0cm9waWNzLgpJIHRoaW5rIGF0IGZpcnN0IGlmIGl0J3MganVzdCBoaW0sIGhlJ2xsIGdldCB0aGUgTWVsbyB0cmVhdG1lbnQuIElmIGJvdGggaGltIGFuZCBLeXJpZSBnbyB0aGVuIGl0J2xsIGJlIGludGVyZXN0aW5nIHRvIHNlZSBob3cgaXQgZGV2ZWxvcHMgYW5kIHdoaWNoIG9uZSB0aGUgbWVkaWEgd2lsbCAiYmxhbWUiIG1vcmUuIEkganVzdCB0aGluayBpZiBLRCBpcyBwaXNzZWQgYWJvdXQgbWVkaWEgTlkgaXMgdGhlIGxhc3QgcGxhY2UgaGUgc2hvdWxkIGdvIGJlY2F1c2UgaXQncyBub3RvcmlvdXMgZm9yIGJlaW5nIHByZXR0eSBoYXJzaC4gClRoaXMgaXMgb3VyIG1vZGVybiByZWFsaXR5LiAKSW4gYW5vdGhlciwgaXQgbWFkZSB0aGVtIGJyaWxsaWFudGx5IHN0cmF0ZWdpYyBsaWtlIG92ZXIgdGhlIG1pbGxlbm5pYSB3b21lbiBoYXZlIGV4cGVydGx5IGhhcm5lc3NlZCB0aGVpciB2b2NhbCBjaG9yZHMgYW5kIHR1cm5lZCB0aGVtIGludG8gYSB0eXBlIG9mIHN1cGVycG93ZXIuIFVzaW5nIGZha2Ugc2V4IHNvdW5kcyBzaG91bGQgY29tZSB3aXRoIGEgY2FwZSBhbmQgYSBsZW90YXJkLiAKTW9zdCBvZiB3aGF0IHlvdSd2ZSBzYWlkIGlzIGluY29ycmVjdCBhbmQgaXQncyByZWFsbHkgaW1wb3J0YW50IHRvIHVuZGVyc3RhbmQgdGhhdC4gSSBob3BlIHRvIHJlc3BvbmQgbW9yZSBmdWxseSB3aGVuIEknbSBub3Qgb24gbW9iaWxlLCBidXQgdGhlIGJpZyBjbGFpbXM6LiAKIkNvbGxlY3RvcidzIGVkaXRpb25zIHdvcmsgaW4gdGhlIGNhc2Ugb2YgYSBmZXcgZmlsbXMgb25seSwiIHNheXMgSGlyZW4gR2FkYSwgZGlyZWN0b3IsIFNoZW1hcm9vIEVudGVydGFpbm1lbnQsIHdoaWNoIGhhcyByZWxlYXNlZCBjb2xsZWN0b3IgZWRpdGlvbiBEVkRzIG9mIGZpbG1zIGxpa2UgQmFnaGJhbiBhbmQgT21rYXJhLiAiTGF0ZWx5LCBtb3N0IGZpbG0gbWFrZXJzIGhhdmUgc3RhcnRlZCBzaG9vdGluZyBiZWhpbmQgdGhlIHNjZW5lcyBmb290YWdlIG9mIHRoZWlyIGZpbG1zLiAKVGhlIHZlcnkgaW50cmlndWluZyBhc3BlY3Qgb2YgdGhlIHN0b3J5IGlzIHRoYXQgaXQgc2hhcmVzIGFuIGludGVyZXN0aW5nIGNvaW5jaWRlbmNlIHdpdGggdGhlIFJlYWwgVGhpbmcuIApMYSBmb3JtYXRpb24gZHUgY29ycHMgcHJvZmVzc2lvbm5lbCBkZXMgYm91bGFuZ2VycyBzZXJhaXQgIGR2ZWxvcHBlciAgY2Ugc2Vucy4uIAoxKSBWaWN0aW1zIHNob3VsZCBub3QgYmUgc2hhbWVkLiBUaGV5IHNob3VsZCBzcGVhayB1cCBhbmQgdGhlaXIgYWNjdXNhdGlvbnMgc2hvdWxkIGJlIHRha2VuIHNlcmlvdXNseS4KSSB0b29rIHBhcnQgaW4gYSBwcm9ncmFtIHRoYXQgb25seSByZXF1aXJlZCAzJSBkb3duIHdoaWNoIGlzbid0IGJhZCBhdCBhbGwuIEhvd2V2ZXIgc3VwcGx5IGluIE1hZGlzb24gZm9yIGEgc3RhcnRlciBob21lIGlzIHByZXR0eSBwb29yLiBBIG5pY2UgaG91c2Ugb2YgYXJvdW5kIDE1MDAgc3EuIGZ0LiBpcyBlaXRoZXIgZ29pbmcgdG8gbmVlZCBhIGxvdCBvZiBpbXByb3ZlbWVudHMgb3IgZ29pbmcgdG8gYmUgYSBtaW5pbXVtIG9mICQyMDAgMjUway4KQXQgYW55IGdpdmVuIG1vbWVudCwgeW91IG1heSBmaW5kIHlvdXJzZWxmIGZlZWxpbmcgYW1hemVkIGF0IHRoZSBmYWN0IHRoYXQgeW91J3JlLCBsaWtlLCBjcmVhdGluZyBhIG5ldyBodW1hbiwgb25seSB0byBiZSBmcmVha2VkIG91dCAxMCBzZWNvbmRzIGxhdGVyIHRoYXQgeW91ciBib2R5IGlzIHN0cmV0Y2hpbmcgYmV5b25kIHJlY29nbml0aW9uIGluIGl0cyBxdWVzdCB0byBhY2NvbW1vZGF0ZSB0aGF0IG1pcmFjdWxvdXMgbGl0dGxlIGJlaW5nLiAKVGhlIGlubmVyIHBhcnQgb2YgdGhlIGNhc2UgaXMgcHJvZmVzc2lvbmFsbHkgbGluZWQgd2l0aCBncmVlbiBmZWx0IGFuZCB0aGUgcG9rZXIgc2V0IGlzIG1hZGUgb2Ygc29saWQgYnJhc3MuIApTbyBob3cgeW91IGNvbmZyb250IHRoaXMgY2hhbGxlbmdlIGlzIG11Y2ggbW9yZSBpbXBvcnRhbnQgdGhhbiB0aGUgY2hhbGxlbmdlIGl0c2VsZi4gCkhlIHdhcyBpbmRlZWQgaW4gR3J1cHBlIFdlc3RlbiAoR3JvdXAgV2VzdCkgd2l0aCB0aGUgUmVnaW1lbnRzIHdoaWNoIGp1bXBlZCBpbiB0aGUgZmlyc3Qgd2F2ZS4gV2hpbGUgaGUgYnkgZGVmaW5pdGlvbiB3YXMgdGhlcmUgYWxyZWFkeSB0aGUgdmlsbGFpbiwgaGUgbmV2ZXJ0aGVsZXNzIGZvdWdodCBicmF2ZWx5IEJyaXRpc2ggdGFua3Mgd2l0aCBsaWdodCB3ZWFwb25zIHVudGlsIHJlaW5mb3JjZW1lbnRzIGNhbWUgaW4uIApDbGltYiBzbG93bHkgYW5kIGRlbGliZXJhdGVseS4KTXkgZmF2b3JpdGUgcmFjZSBzd2FnIGhhcyBiZWVuIHBpbnQgZ2xhc3NlcywgYmVlciBhbmQgc29ja3MuIE9uZSBpZiBteSBsb2NhbCByYWNlIG9yZ2FuaXphdGlvbiBhbHdheXMgZG9lcyBhIHJhZmZsZSBhZnRlciB0aGUgcmFjZSBmb3IgZXZlcnlvbmUsIHRoZXkgdXN1YWxseSBoYXZlIGFkZGl0aW9uYWwgcGludCBnbGFzc2VzLCBjb2ZmZWUgbXVncywgc3VuZ2xhc3NlcywgcnVubmluZyBjbG90aGVzLCBwaW50cyBvZiBtYXBsZSBzeXJ1cCBldGMgYW5kIHRoYXQgYWx3YXlzIGdyZWF0LiAKVGhlcmUgd2FzIGFsc28gc3Ryb25nIGRlbWFuZCBmb3IgY29uZG8gYXBhcnRtZW50cyBpbiBDYW5hZGEgbGFyZ2VzdCBtYXJrZXRzLCBhcyB0aGlzIHR5cGUgb2YgaG91c2luZyBpcyB1c3VhbGx5IGEgbW9yZSBhZmZvcmRhYmxlIGNob2ljZS4gVGhpcyBjcmVhdGVkIGEgY2F0Y2ggMjIgc2l0dWF0aW9uLCBiZWNhdXNlIHN0cm9uZyBkZW1hbmQgcmVzdWx0ZWQgaW4gaGlnaGVyIGNvbmRvIHByaWNlcywgd2hpY2ggaW4gdHVybiBsZWQgdG8gc29tZSBlcm9zaW9uIG9mIGNvbmRvIGFmZm9yZGFiaWxpdHkuLiAKSGUgc2F5cyB0aGF0IHRoZSBhdmVyYWdlIHBsYXllciBpbiBhbiBvbmxpbmUgdG91cm5hbWVudCBpcyBvbmx5IHRoZXJlIHRvIHdpbiBtb25leSB3aXRoIHRoZWlyIGdhbWUgdGhhdCB0aGV5IGJlZW4gc3R1ZHlpbmcvcHJhY3RpY2luZyBmb3IgaHVuZHJlZHMgb3IgdGhvdXNhbmRzIG9mIGhvdXJzLiBBbmQgd2hlbiB5b3UgbG9vayBhdCAkNTAwICQxMDAwIG9ubGluZSB0b3VybmFtZW50cywgbW9zdCBvZiB0aGUgcGVvcGxlIHBsYXlpbmcgdGhlbSBhcmUgdGhlIG9uZXMgd2hvIGhhdmUgd29uIG1pbGxpb25zIG9mIGRvbGxhcnMgb25saW5lLiAKVGhlIER1dGNobWFuIG5vdyBtZWV0cyBNZXJ2eW4gS2luZyBvbiBTYXR1cmRheSwgYWZ0ZXIgdGhlIE5vcmZvbGsgbWFuIGNyb3duZWQgaGlzIHJpc2UgaW50byB0aGUgdG9wIDE2IG9mIHRoZSBPcmRlciBvZiBNZXJpdCB3aXRoIGhpcyBmaXJzdCBQREMgc2VtaSBmaW5hbCBhcHBlYXJhbmNlLgpJZiB5b3UgZmVlbCBsaWtlIHRoZSB2b2ljZSB0aGF0IHRlbGxzIHlvdSB0byBkbyB0aGVzZSB0aGluZ3MgaXMgbm90IHlvdXIgb3duLCBidXQgcmF0aGVyIGFuIGV4dGVybmFsIHZvaWNlLCB0aGF0IGNvdWxkIGJlIGEgc3ltcHRvbSBvZiBoYWxsdWNpbmF0aW9uL2RlbHVzaW9uIGFuZCBpcyBsZXNzIGNvbW1vbiBhbmQgbW9yZSBkYW5nZXJvdXMuIFRoaXMgcmVxdWlyZXMgcHN5Y2hvbG9naWNhbCB0cmVhdG1lbnQgYW5kIG9mdGVuIGFudGkgcHN5Y2hvdGljcyB0byBwcmV2ZW50IGFuZCBpcyBsaW5rZWQgbW9yZSBzdHJvbmdseSB0byBhdHRlbXB0cyB0byBzdWljaWRlLiAKV2VyZSBwbGF5aW5nIGEgZ2FtZSBvZiBwb2tlciBhdCB0aGUgcG9rZXIgdGFibGUgbmVhciB0aGUgYmFyLiBPbmUgb2YgdGhlIGdhbWJsZXJzIHRyaWVkIHRvICJjYXNoIG91dCIgd2l0aCBhIHdob3BwaW5nIHRlbiBkb2xsYXJzLCB5ZXAsICQxMC4gCllvdSBqdXN0IGhhdmUgdG8gdHJ5IHlvdXIgYmVzdCB0byBrZWVwIGl0IHJlYWwsIGZhaXIgYW5kIHRyZWF0IHBlb3BsZSByaWdodCwga25vd2luZyB0aGF0IHNvbWUgd2lsbCBuZXZlciBiZSBoYXBweS4uIApSaWRlIHNlZW1zIHRvIGhhdmUgdGFrZW4gYSBsaXR0bGUgdG9vIG11Y2ggYWZ0ZXIgT3JnYSwgYW5kIGFwcGVhcnMgdG8gYmUgbGVhZGluZyBhIE5lbyBUZWtrYWRhbiBzb3J0IG9mIGdyb3VwIHdpdGggdGhlIEh1bWFuIERlYnJpcyBraWRzLiAKWW91IGNhbiBzZWUgYSBuZXcgcGFydCBvZiB0aGUgd29ybGQsIGZpbmQgYSBnb29kIGpvYiwgYW5kIHRha2UgY2FyZSBvZiB5b3VyIHBhcmVudHMgc2ltdWx0YW5lb3VzbHkuLiAKQ2FzaW5vIGV4ZWN1dGl2ZXMgd2VyZSBjb252aW5jZWQsIGVycm9uZW91c2x5IGFzIGl0IHR1cm5lZCBvdXQsIHRoYXQgU3VmZm9sayBEb3ducyBhbmQgcGFydG5lciBDYWVzYXJzIEVudGVydGFpbm1lbnQgaGFkIHRoZSBHcmVhdGVyIEJvc3RvbiBsaWNlbnNlIGxvY2tlZCB1cC4gClRoZSBuZXh0IHBvZW0sIFRoZSBMb3N0IEFydCBvZiBLaXNzaW5nIGEgR292ZXJubWVudCwgZGVsdmVzIGZ1cnRoZXIgaW50byB0aGUgY29ycHVzIGJvdGggbGl0ZXJhbGx5LCBhbmQgZmlndXJhdGl2ZWx5LCBhcyBUYWl0byByZWZlcnMgdG8gbW91dGhzICh4IDMpLCBsaXBzLCB0ZWV0aCwgdG9uc2lscywgZm9ya2VkIHRvbmd1ZXMsIGV5ZXMsIHNjcmVhbXMuIApFdmVyeSBvbmUgb2YgeW91IHdobyBoYXMgYmVlbiBsYXVnaGluZyBhVCBtZSB3aWxsIHdpdGggY2VydGFpbnR5IGZhY2UgY3JpbWluYWwgcHJvc2VjdXRpb24uIEVzdCBMYXVkZXIgQ29tcGFuaWVzIEluYy4gCktlbGx5IHNhaWQgV2Fzc2VybWFuIGhhcyBhbHJlYWR5IG1pc3NlZCB0aGUgMzAgZGF5IHdpbmRvdyB0byBjaGFsbGVuZ2UgdGhhdCBmaW5kaW5nIGFuZCBzdWJtaXQgbW9yZSBwZXRpdGlvbnMuLiAKVGhlcmUgYXJlIHNldmVyYWwgcmVhc29ucyB0aGF0IGEgbW90aGVyIG1vdXNlIG1heSBlYXQgaGVyIGJhYmllcy4gMS4gSWYgdGhpcyBpcyBoZXIgZmlyc3QgbGl0dGVyLCBzaGUgbWF5IG5vdCBoYXZlIGJlZW4gbWF0dXJlIGVub3VnaCB5ZXQgdG8gY2FyZSBmb3IgdGhlbS4gVGhpcyBpcyBmYWlybHkgY29tbW9uLiAyLiBTb21lb25lIG1heSBoYXZlIGRpc3R1cmJlZCB0aGUgbmVzdC4gQWxzbyB5b3Ugc2hvdWxkIGtlZXAgeW91ciBoYW5kcyBvdXQgb2YgdGhlIGNhZ2UgYXMgbXVjaCBhcyBwb3NzaWJsZS4gMy4gVGhlIGJhYmllcyBtYXkgaGF2ZSBiZWVuIHNpY2sgb3IgaW5qdXJlZCBhbmQgc2hlIGtuZXcgdGhleSB3b3VsZCBub3QgYmUgYWJsZSB0byBzdXJ2aXZlLiBSYXRoZXIgdGhhbiBjYXJlIGZvciBiYWJpZXMgdGhhdCB3ZXJlIG5vdCBnb2luZyB0byBsaXZlIGFueXdheSwgc2hlIGF0ZSB0aGVtIHNvIHNoZSBjb3VsZCBkZXZvdGUgaGVyIHRpbWUgdG8gY2FyaW5nIGZvciB0aGUgaGVhbHRoeSBvbmVzLiA0LiBUaGUgYmFiaWVzIG1heSBoYXZlIGRpZWQgb24gdGhlaXIgb3duLCBhbmQgc2hlIGF0ZSB0aGVtIHRvIHByZXZlbnQgdGhlbSBmcm9tIHJvdHRpbmcgYW5kIGZvdWxpbmcgdGhlIG5lc3QuIDUuIElmIGFkZXF1YXRlIGZvb2QgYW5kIHdhdGVyIHdhcyBub3Qga2VwdCBpbiB0aGUgY2FnZSwgc2hlIG1heSBoYXZlIGRlY2lkZWQgc2hlIGNvdWxkIG5vIGxvbmdlciBjYXJlIGZvciB0aGVtIHByb3Blcmx5LiA2LiBBbHRob3VnaCBub3QgcmVsYXRlZCB0byB0aGlzIHF1ZXN0aW9uLCBpZiBhIG1vdXNlIGdpdmVzIGJpcnRoIHRvIGFuIGV4dHJlbWVseSBsYXJnZSBsaXR0ZXIgdGhhdCBzaGUgY2Fubm90IGNhcmUgZm9yIHRoZSBlbnRpcmUgdGhpbmcsIHNoZSBtYXkgZWF0IHNvbWUgb2YgdGhlIGJhYmllcyB0byBtYWtlIHRoZSBsaXR0ZXIgYSBtb3JlIG1hbmFnZWFibGUgc2l6ZS4gKEZ1bGwgQW5zd2VyKQpXb29vb29vb3cuIHRoYXQgMTAwJSB3aGF0IEkgbmVlZGVkIHRvIHNlZSB0b2RheS4gV2UgaGF2ZSBhY3R1YWxseSBhbG1vc3QgZXhhY3RseSB0aGUgc2FtZSBzdGFydGluZyBzdGF0cyAoRi8yOCB0b2RheSEvNSA+IGN1cnJlbnRseSAxNjNsYnMpLCBhbmQgeW91ciBiZWZvcmUgcGljdHVyZXMgYXJlIGFsbW9zdCBsaWtlIGxvb2tpbmcgaW4gdGhlIG1pcnJvciBhdCB0aGF0IHRpbWUuIFRoZSB3ZWlnaHQgbG9zcyBpcyBzbG93LCBidXQgbmljZSB0byBzZWUgaGFwcGVuaW5nLCBhbmQgaXQgU08gZW5jb3VyYWdpbmcgc2VlaW5nIHdoYXQgbXkgdGVudGF0aXZlIGdvYWwgd2VpZ2h0IGxvb2tzIGxpa2Ugb24gc29tZW9uZSB3aXRoIG15IGZyYW1lIChidXQgYmlnZ2VyIGJvb2JzIGhhaGEgICBhIGxpdHRsZSBqZWFsb3VzISkuIFlvdSBwcm9ncmVzcyBpcyBmYW50YXN0aWMgICB5b3Ugc2hvdWxkIGJlIHNvIHByb3VkISBXYXkgdG8gZ28sIGdpcmwhCkl0IGlzIGFuIGludGVncmFsIHBhcnQgb2YgdGhlIGh1bWFuIGV4cGVyaWVuY2UuIApTaGUgcmVtaW5kZWQgdGhlbSB0aGV5IHN0aWxsIGhhZG4ndCBwYWlkIGZvciBhIHByZXZpb3VzIHZpc2l0LCBhbmQgZnJvbSBoZXIgc2lkZSBvZiB0aGUgY29udmVyc2F0aW9uIEkgZ2F0aGVyZWQgdGhleSBjb3VsZG4ndCBwYXkgaXQgdGhlbiBlaXRoZXIsIHNvIHRoZXknZCBoYXZlIHRoZSBwcmV2aW91cyBiaWxsIHBsdXMgd2hhdGV2ZXIgdGhleSB3ZXJlIGNvbWluZyBmb3IgdGhhdCBkYXkgdG9vLi4gCkJlZ2xlaXRlciBzYXlzIGhpcyBwb2tlciBzdWNjZXNzLCB3aGljaCBpbmNsdWRlcyBhIG5pbnRoIHBsYWNlIGZpbmlzaCBpbiBhbm90aGVyIFdvcmxkIFBva2VyIFRvdXIgZXZlbnQgbGFzdCBBdWd1c3QsIGhhc24ndCBiZWVuIGFib3V0IHNvbWUgc3BlY2lhbCBtYXN0ZXJ5IG9mIHByb2JhYmlsaXRpZXMgYW5kIHJpc2suICJUaGVyZSBhcmUgcGxlbnR5IG9mIHBlb3BsZSB3aG8gYXJlIHZlcnkgZ29vZCBwb2tlciBwbGF5ZXJzIHdobyBuZXZlciB3b3JrZWQgb24gV2FsbCBTdHJlZXQgYW5kIG1heSBoYXZlIGV2ZW4gZHJvcHBlZCBvdXQgb2YgdGhlaXIgY29tbXVuaXR5IGNvbGxlZ2UsIiBoZSBzYXlzLiAKRWduYXJkcyAgMSBwb2ludCAgc3VibWl0dGVkIDE3IGhvdXJzIGFnbwpZZWFoIEkgZ3Vlc3MgdGhhdCBkb2VzIHNlZW0gcmVhbGx5IGhpZ2ggZm9yIG15IGV4cGVyaWVuY2UsIGJ1dCBjb21pbmcgb3V0IG9mIHNjaG9vbCBJIGhhZCBhIGNvdXBsZSBzdW1tZXIgaW50ZXJuc2hpcHMgc28gSSBndWVzcyB0aGF0IGhlbHBlZC4gJDQ4ayBpcyB3aGF0LCAzNWs/IEkgZ3Vlc3MgdGhhdCB3aHkgSSBnZXQgY29uZnVzZWQgd2hlbiBwZW9wbGUgc2F5ICJ5b3UgbmV2ZXIgbWFrZSBtb25leSBpbiBhcmNoaXRlY3R1cmUuIiBJdCBzZWVtcyB0aGF0IHRob3NlIHdobyBjb21wbGFpbiBtb3N0IG9uIHRoZSBpbnRlcm5ldCBhYm91dCB0aGlzIHByb2Zlc3Npb24gdGVuZCB0byBub3QgZG8gZW5vdWdoIGluIHRoZSByZWFsIHdvcmxkIHRvIGNoYW5nZSB0aGVpciBzaXR1YXRpb24uIEkgaGlnaGx5IGRvdWJ0IGFyY2hpdGVjdHMgbGlrZSBBcmF2ZW5hLCBBZGpheWUsIEluZ2xlcywgSGVyem9nIGRlIE1ldXJvbiwgYW5kIG1hbnkgb3RoZXJzIHRoYXQgbGVhZCBwcm9qZWN0cyBhdCBTbm9oZXR0YSwgT01BLCBEUytSLCBldGMgYXJlIHdhc3RpbmcgdGhlaXIgdGltZSBvbiBSZWRkaXQgb3IgQXJjaGluZWN0IHRhbGtpbmcgYWJvdXQgaG93IHNoaXR0eSB0aGUgcHJvZmVzc2lvbiBpcy4gSnVzdCBteSAyIGNlbnRzLgpNb3N0IG9mIHRoZSBvZGQgdGhpbmdzIHRoYXQgYXJlIGZvdW5kIGluIG15IGJsb2cgZmxhZ3BvbGUgcGFpbnRpbmcsIHppcHBlciByZXBhaXIsIGZpbmRpbmcgRW5nbGFuZCBpbiB0aGUgR3JlYXQgUHlyYW1pZCwgYnVpbGRpbmcgdGhlIEdyZWF0IFB5cmFtaWQgaW4gRGV0cm9pdCwgYW5kIHNvIG9uKSBoYXZlIGNvbWUgdG8gbWUgdmlhIHRoZSBMaWJyYXJ5IG9mIENvbmdyZXNzLCB3aGVyZSBmb3IgbWFueSB5ZWFycyBJIG1hbmFnZWQgdG8gcHVyY2hhc2UvdHJhZGUgZm9yIGJpdHMgYW5kIHBpZWNlcyBvZiB0aGVpciBzdXJwbHVzLiBPbmUgbGFyZ2UgcHVyY2hhc2UgaW4gcGFydGljdWxhciBmcm9tIHRoZSBMQyB0aGUgOTAsMDAwIGl0ZW0gIlBhbXBobGV0IENvbGxlY3Rpb24gaGFzIHByb3ZpZGVkIHRob3VzYW5kcyBvZiB0aGUgc3VibGltZSBtdW5kYW5lLCBuYWl2ZSBzdXJyZWFsIG1hc3RlcnBpZWNlcyB0aGF0IEkndmUgZm91bmQgc28gaXJyZXNpc3RpYmxlLiAKV2UgYXJlIGZvcnR1bmF0ZSB0byBoYXZlIHNvIG1hbnkgd29uZGVyZnVsIHZvbHVudGVlcnMgd2hvIHVuc2VsZmlzaGx5IGRvbmF0ZSB0aGVpciB0aW1lIHRvIGhlbHBpbmcgdGhlaXIgVW5pdGVkIFdheS4gV2UgY2FuIG5vdCBkbyBpdCB3aXRob3V0IHRoZW0gYW5kIEkgc2FsdXRlIHRoZW0gZm9yIHRoZWlyIGVmZm9ydHMsIiBzYWlkIEx1YmVyLlNjaGVkdWxlZCBmb3IgRnJpZGF5LCBKdWx5IDE1dGggYXQgdGhlIEdyZWVudmlldyBDb3VudHJ5IENsdWIgaW4gV2VzdCBNb25yb2UsIFRoZSBVbml0ZWQgV2F5IEdvbGYgQ2xhc3NpYyBpcyBvbmUgb2YgdGhlIGxhcmdlc3QgZ29sZiB0b3VybmFtZW50cyBpbiBPc3dlZ28gQ291bnR5IGFuZCBwcm92aWRlcyBidXNpbmVzc2VzIGFuZCBpbmRpdmlkdWFscyB3aXRoIHRoZSBvcHBvcnR1bml0eSB0byBlbmpveSBhIGZ1biBkYXkgb2YgZ29sZiBhbmQgd2hpbGUgaGVscGluZyB0byBzdXBwb3J0IHRoZWlyIFVuaXRlZCBXYXkuIFJlZ2lzdHJhdGlvbiBpbmNsdWRlcyBhIGNvbnRpbmVudGFsIGJyZWFrZmFzdCwgYSBjbGFzc2ljIGdvbGYgc2hpcnQsIGdvbGYgY2FydCwgMTggaG9sZXMgb2YgZ29sZiwgbHVuY2gsIGJldmVyYWdlcyBvbiB0aGUgY291cnNlLCBhbmQgYSBzdGVhayBkaW5uZXIgYnVmZmV0IGZvbGxvd2luZyB0aGUgdG91cm5hbWVudC4gCkV2ZXJ5IHR1cm4geW91IG9mZmVyZWQgNSBjaGVzcyBwaWVjZXMgdGhhdCB5b3UgY2FuIGJ1eS4gT3Igbm90LiAKRm91bmRlcnMgQW5kcmV3IFdpbGxpYW1zb24gYW5kIFJpY2sgU3RldmVuc29uIG1hcmsgdGhlaXIgQ3JhenkgOHMgU2hvcnQgRmlsbSBGZXN0aXZhbCB3aXRoIGEgcmV0cm9zcGVjdGl2ZSBzY3JlZW5pbmcgYW5kIGZ1bmRyYWlzZXIgYXQgdGhlIFJpbyBUaGVhdHJlIGluIEVhc3QgVmFuY291dmVyLgpTdGVwcGluZyBiZXlvbmQgd2hldGhlciBvciBub3Qgd2UgYXMgbW9kcyBzaG91bGQgYmFuIHN1c3BlY3QgYWNjb3VudHMgbGlrZSB0aGlzIGZyb20gY29tbWVudGluZyBvbiBvdXIgc3ViIEkgd291bGQgZmVlbCBiZXR0ZXIgaWYgSSBrbmV3IHRoZXJlIHdhcyBzb21lb25lIGF0IHJlZGRpdCBhY3RpdmVseSBsb29raW5nIGludG8gYWNjb3VudHMgbGlrZSB0aGlzIG9uZSB0byBzZWUgaWYgdGhleSBhcmUgYWN0dWFsbHkganVzdCBudXRiYXJzIHdpdGggY3JhenkgaWRlYXMgb3IgcGFydCBvZiBhIGxhcmdlciBjb25zcGlyYWN5IHRvIHNwcmVhZCBtaXNpbmZvcm1hdGlvbiBvbiB0aGUgc2l0ZS4gClRlbnRvbnMgZGUgc2F2b2lyIHBvdXJxdW9pLi4gCkRvd25zaWRlLCB5b3UgbG9zZSBhIGxvdCBvZiB5b3VyIHNraWxscy4gWW91IG5ldmVyIGdldCB0aGUgc2lja2VzdCBwYXRpZW50cy4gCjgpIEV4Y2Vzc2l2ZSBTcGFtLiBQb3N0aW5nIG11bHRpcGxlIHRocmVhZHMgYSBkYXkgaW4gZXhjZXNzaXZlIHVzZS4gVGhpcyBpbmNsdWRlcyBub24gcmVsZXZhbnQgcG9zdHMgdG8gcG9rZXIsIHB1c2hpbmcgeW91ciBuZXdzIHNpdGUsIHNoaWxsaW5nIHlvdXIgY3J5cHRvY3VycmVuY3kgc3BlY3VsYXRpb25zLCBleGNlc3NpdmUgc2hpdCBwb3N0aW5nLCBhbmQgY29udGludWluZyB0byBwb3N0IGNvbnRlbnQgYWZ0ZXIgeW91IGJlZW4gc3BlY2lmaWNhbGx5IHdhcm5lZCBub3QgdG8gYnkgdGhlIG1vZCB0ZWFtLiAKS2VlcCBhbiBlbWVyZ2VuY3kgc3VwcGx5IG9mIG5lY2Vzc2l0aWVzLgooUHJpdmFjeSBQb2xpY3kpU292cm5UaGlzIGlzIGFuIGFkIG5ldHdvcmsuIChQcml2YWN5IFBvbGljeSlGYWNlYm9vayBBZHNUaGlzIGlzIGFuIGFkIG5ldHdvcmsuIChQcml2YWN5IFBvbGljeSlBbWF6b24gVW5pZmllZCBBZCBNYXJrZXRwbGFjZVRoaXMgaXMgYW4gYWQgbmV0d29yay4gCldhdGNoaW5nIHBva2VyIG9uIFRWIGlzIHByb2JhYmx5IHRoZSBsZWFzdCBiZW5lZmljaWFsIHdheSB0byBpbXByb3ZlLCBhcyB0aGV5IGVkaXQgYSBsb3QgYW5kIHRoZSBleHBlcnQgc3R5bGUgb2YgcGxheSBpcyBtdWNoIGRpZmZlcmVudCB0aGFuIHRoZSBwbGF5ZXJzIHlvdSB3aWxsIHNlZSBhdCBjb21tb24gbGV2ZWxzLiAKIlRoaXMgaW5mb3JtYXRpb24gaXMgdml0YWwgZm9yIGNvbW11bml0eSBkZWJhdGUgYW5kIHJlc3BvbnNlIHRvIHRoZSBleHRlbnNpdmUgc29jaWFsIGFuZCBmaW5hbmNpYWwgaGFybSBjYXVzZWQgYnkgcG9rZXIgbWFjaGluZSBhZGRpY3Rpb24sIiBoZSBzYWlkLiAKQmFkYWJvb214eCAgW3Njb3JlIGhpZGRlbl0gIHN1Ym1pdHRlZCAzOSBtaW51dGVzIGFnbwpJIGEgbWVkaWNhbCBzdHVkZW50IGFuZCBjZXJ0YWlubHkgbm90IGFuIGV4cGVydCAobm9yIGNsYWltaW5nIHRvIGJlKSwgYnV0IEkgY2FuIHNoZWQgc29tZSBsaWdodCBvbiBoaXMgc3RhdGVtZW50cy4gCldlIGJhc2ljYWxseSBuZWVkIHRvIHJvb3Qgb3V0IHRoZSBpbmZlc3RhdGlvbiB0aGF0IGlzIHRoZSBSZXB1YmxpY2FuIHBhcnR5IGFuZCBjYXN0IGl0IHRvIHRoZSBoaXN0b3J5IGJvb2tzLCB3aGV0aGVyIHRoYXQgaW5jbHVkZSB2b3RpbmcgZm9yIHBlb3BsZSB3aG8gbWF5IHRvdGUgdGhlIFBDIGxpbmUgb3Igbm90LCB3ZSBjYW4gYWZmb3JkIHRvIGhvbGQgb3VyIHBlb3BsZSBhY2NvdW50YWJsZS4gCkNvdWxkbiBoYXZlIHNhaWQgdGhpcyBhbnkgYmV0dGVyLiBJIGtuZXcgZ29pbmcgaW4gSSB3YXMgc3BlYWtpbmcgZnJvbSBhIGhldGVyb25vcm1hdGl2ZSBwZXJzcGVjdGl2ZSBiZWNhdXNlIHRoZSBjb21tZW50cyBJIHdhcyByZWZlcnJpbmcgYWxzbyBzZWVtZWQgdG8gYmUuIEJ1dCBhYnNvbHV0ZWx5LCBhcyBhIGJpIHdvbWFuIGl0IGJlZW4gYSBjb21wbGV0ZWx5IGRpZmZlcmVudCBleHBlcmllbmNlIHdoZW4gZGF0aW5nIG90aGVyIHdvbWVuLiAKSSBrbm93IHRoaXMgaXMgb2ZmIHRvcGljIGZyb20gdGhlIE9QLCBidXQgdGhpcyBjb250aW5vdXMgcGFyYWRlIG9mIE96IG1ldGFsIGhhcyBtZSBleHRyZW1lbHkgY3VyaW91cyBhbmQgZnJ1c3RyYXRlZDogQW1lcmljYW5zIG5vdG9yaW91c2x5IHdpbGwgaW1wb3J0IHNvbWV0aGluZyBmcm9tIEphcGFuLCBvciBicmluZyBob21lIGEgZ3JleSBtYXJrZXQgY2FyIGZyb20gb3ZlcnNlYXMgc2VydmljZSwgYnV0IHdoYXQgaWYgaSB3YW50ZWQgYSBIb2xkZW4/IG9yIGFuIEF1c3NpZSBGb3JkPyBhbnlvbmUgZ290IGFueSBpbmZvIG9uIHRoYXQ/IEkgYW0gYWx3YXlzIGltcHJlc3NlZCB3aXRoIHRoZSB2ZWhpY2xlcyB0aGVyZS4gCllvdXIgbWFzc2FnZSB0aGVyYXB5IGNvdXJzZSBpbmNsdWRlcyBhIG5hdGlvbmFsIGNlcnRpZmljYXRpb24gYWZ0ZXIgeW91IGZpbmlzaCB0aGUgY291cnNlLiAKQXMgYSBzZWNvbmRhcnkgY29uc2lkZXJhdGlvbiB5b3VyIHBvaW50IGlzIGFib3V0IHJhbmdlIGFkdmFudGFnZXMsIGJ1dCBJIHRoaW5rIG1vcmUgaW1wb3J0YW50bHkgd2Ugc2hvdWxkIHRhbGsgYWJvdXQgd2hhdCBNREYgaXMuIApBbmQgaGF2aW5nIHRoZSAybmQgc3RyZWFtIGF2YWlsYWJsZSB0byBzZWUgdGhlIG1hcCBmcm9tIHZhcmlvdXMgZGlmZmVyZW50IGFuZ2xlcyB3YXMgdmVyeSBlbmpveWFibGUuVGhlIHF1YWxpdHkgb2YgdGhlIHN0cmVhbSB3YXMgZXhjZWxsZW50LCB0aGVyZSB3ZXJlIG5vIG5vdGljZWFibGUgdGVjaG5pY2FsIGlzc3Vlcy4gQXVkaW8gYW5kIHZpZGVvIHdlcmUgb24gcG9pbnQuIFRoZSBncmFwaGljcywgdGhlIGFydCwgYW5kIHRoZSBpbnRvIHdlcmUgYWxsIHZlcnkgd2VsbCBtYWRlLlRoZSBmZWVsIG9mIHRoZSBzdHJlYW0uIApXaXRoaW4gaGFsZiBhbiBob3VyIG9mIHRha2luZyBoaXMgVmVudG9saW4sIHRoZSAyNyB5ZWFyIG9sZCB3YXMgdW5jb25zY2lvdXMgYW5kIGJlaW5nIHdvcmtlZCBvbiBieSBwYXJhbWVkaWNzLiAKSW4gV2FzaGluZ3RvbiBhbmQgdGhlIHN1cnJvdW5kaW5nIGFyZWEsIDMzIGJ1aWxkaW5nIGNvbXBsZXhlcyBmb3IgdG9wIHNlY3JldCBpbnRlbGxpZ2VuY2Ugd29yayBhcmUgdW5kZXIgY29uc3RydWN0aW9uIG9yIGhhdmUgYmVlbiBidWlsdCBzaW5jZSBTZXB0ZW1iZXIgMjAwMS4gQ2FwaXRvbCBidWlsZGluZ3MgICBhYm91dCAxNyBtaWxsaW9uIHNxdWFyZSBmZWV0IG9mIHNwYWNlLgpMZWFuZGVyIEVja2FyZCwgREMgZGV2ZWxvcGVkIGhpcyBmaXJzdCBDUE0gdGFibGUgaW4gMTk4MS4gSGlzIHRhYmxlcyBhcmUgbm93IGluIG9wZXJhdGlvbiBpbiBtb3JlIHRoYW4gMzkgY291bnRyaWVzIHdvcmxkd2lkZS4KIlRoZSBmYXJtZXJzIHdvdWxkIGxvc2UgYSBncmVhdCBkZWFsIG9mIG1vbmV5IGlmIHRoZXkgdG9vayBhY3JlYWdlIG91dCBvZiBwcm9kdWN0aW9uIHRvIGdyb3cgdmVnZXRhYmxlcyBhbmQgZnJ1aXRzLgpDaG8gc2hhcmVzIE1zLiBEaWNraW5zb24gY29uY2VybiBhYm91dCB0aGUgZGVsaXZlcnkgZm9ybWF0LiAKQWxsIG9mIHRoZXNlIHRoaW5ncyBoYXBwZW4gaW4gdGhlIHBoeXNpY2FsIHdvcmxkIHdpdGhvdXQgdGhlIG5lZWQgZm9yIGFuIGFic29sdXRlIGNhdGFzdHJvcGhpYyBzaXR1YXRpb24uIEl0IGlzbiBoYXJkIHRvIGRyYXcgdGhlIHBhcmFsbGVscyB3aGljaCBvY2N1ciBpbiBkaWdpdGFsIHNwYWNlLCBhbmQgb2NjdXIgZGVzcGl0ZSB0aGVyZSBiZWluZyBtb3JlIHRoYW4gb25lIHdlYnNpdGUuIFdlYnNpdGVzIHN0aWxsIGJlY29tZSBsYXJnZSBlbm91Z2ggdG8gaW50ZXJydXB0IHRoZSBhYmlsaXR5IG9mIG90aGVyIHdlYnNpdGVzIHRvIHByb3ZpZGUgdGhlIHNhbWUgc2VydmljZSB0byBhcyB3aWRlIG9mIGFuIGF1ZGllbmNlLiAKWW91IG5lZWQgdG8gc2hvdyBoaW0gdGhpcyB0aHJlYWQuIEhlIG5lZWRzIHRvIGFjdHVhbGx5IHJlc2VhcmNoIHdoYXQgaXQgd291bGQgdGFrZSBmb3IgaGltIHRvIG1ha2UgY29tcGFyYWJsZSB3YWdlIGFuZCBiZSBhIHByb2Zlc3Npb25hbCBwaWFuaXN0LiBPciwgd2hhdCBzYXZpbmdzLCBjcmVhdHVyZSBjb21mb3J0cyBhbmQgYWJzb2x1dGUgbmVlZHMgaGUgd291bGQgYmUgd2lsbGluZyB0byBnaXZlIHVwIGluIG9yZGVyIHRvIHB1cnN1ZSB0aGlzIGRyZWFtLiBJJ20gYSBtYXNzYWdlIHRoZXJhcGlzdC4gSSB3b3JrIG9uIGxvdHMgb2YgcHJvZmVzc2lvbmFsIG11c2ljaWFucy4gVmVyeSwgdmVyeSBmZXcgb2YgdGhlbSBoYXZlIGEgZGF5IGpvYiB0aGF0IGtlZXBzIHRoZW0gY29tZm9ydGFibGUgZW5vdWdoIHRoYXQgdGhleSBkb24ndCBoYXZlIGFueSBzaWRlIGdpZ3MuIE1vc3Qgb2YgdGhlbSBoYXZlIHJlcGV0aXRpdmUgc3RyYWluIGluanVyaWVzIGZyb20gdGhlIGFtb3VudCBvZiBwbGF5aW5nLCBwcmFjdGljaW5nIGFuZCB0ZWFjaGluZyB0aGV5IGRvLiBJdCdzIGEgbXVjaCBoYXJkZXIgbGlmZSBmb3IgbW9zdCB0aGFuIHRoZXkgb3JpZ2luYWxseSB0aG91Z2h0IGl0IHdvdWxkIGJlLiBBbmQgYSBwYWluZnVsIG9uZS4gTXkgam9iIGlzIHRvIGF0dGVtcHQgdG8ga2VlcCB0aGVtIHBsYXlpbmcgZm9yIGFzIGxvbmcgYXMgcG9zc2libGUuIFRoZXJlJ3Mgb25seSBzbyBtdWNoIEkgY2FuIGRvLiBEb2luZyB3aGF0IHlvdSBsb3ZlIGNhbiBvZnRlbiByZXN1bHQgaW4geW91IGhhdGluZyB5b3VyIGNhcmVlciBhbmQgeW91ciBob2JieSBpbiBvbmUgc3dpZnQgbW9tZW50LgpXZW50IHRvIGJlZCBlYXJseSBhbmQgc2V0IGFuIGFsYXJtLiAKVGhlIEZvdXIgU2Vhc29ucyAgIGEgZmF2b3JpdGUgb2YgQmlnIEFwcGxlIG1vdmVycyBhbmQgc2hha2VycyBzaW5jZSAxOTU5ICAgc2V0dGxlZCBhdCBsZWFzdCB0d28gbGF3c3VpdHMgZmlsZWQgYnkgZm9ybWVyIGVtcGxveWVlcyBvbiBOaWNjb2xpbmkncyB3YXRjaC4gSW4gMTk5MSwgYSB3YWl0cmVzcyBjbGFpbWVkIHRoYXQgaGUnZCBzZXh1YWxseSBoYXJhc3NlZCBoZXIgZm9yIHllYXJzLiBBIGZvcm1lciBtYW5hZ2VyIGNsYWltZWQgaW4gMjAxNCB0aGF0IE5pY2NvbGluaSBhbmQgb3RoZXJzIGF0IHRoZSByZXN0YXVyYW50IGhhcmFzc2VkIGhlciB3aGVuIHNoZSByZXR1cm5lZCBmcm9tIG1hdGVybml0eSBsZWF2ZSwgdGhlbiBmaXJlZCBoZXIgYW5kIHJlcGxhY2VkIGhlciB3aXRoIGEgbWFuLi4gCiJJdCdzIG5vIHNlY3JldCB0aGF0IEkgbG92ZSB0byBjb21wZXRlIGFuZCB0cnkgbXkgdmVyeSBiZXN0IGluIGV2ZXJ5dGhpbmcsIHdoZXRoZXIgdGhhdCdzIHRlbm5pcywgZ29sZiBvciB2aWRlbyBnYW1lcywiIE5hZGFsIHNhaWQuICJXaGVuIEkgZGlzY292ZXJlZCB0aGUgZ2FtZSBvZiBwb2tlciwgSSBjaG9zZSB0byBqb2luIFBva2VyU3RhcnMgYmVjYXVzZSB0aGV5IHVuZGVyc3RhbmQgd2hhdCBpdCB0YWtlcyB0byBiZSB0aGUgYmVzdCBhbmQgYXNzb2NpYXRlIHRoZW1zZWx2ZXMgd2l0aCB0aGUgcXVhbGl0aWVzIG9mIGNoYW1waW9ucy4gCk9rYXksIHNvIG11Y2ggZm9yIHRoZSB3aG9sZSAib3VyIGN1bHR1cmUgaXMgc2ltaWxhcmx5IG9wcHJlc3NpdmUgdG8gd29tZW4gYXMgdGhlaXJzIiBzcGVlY2guIApOZXh0IHRpbWUgcmVtZW1iZXIgdGhhdCB5b3UgYXJlIGFsd2F5cyBhbGxvd2VkIHRvIHRlbGwgc29tZW9uZSB0byBub3QgdG91Y2ggeW91LiBFdmVuIGlmIHNvbWVvbmUgaXMgYWN0dWFsbHkgYSB3ZWxsIG1lYW5pbmcgbm9uIHBlcnZlcnQgaXQgc3RpbGwgcGVyZmVjdGx5IGZpbmUgdG8gdGVsbCB0aGVtIHRoYXQuClRoZSB0aW1lIHdhcyByaWdodCB0byBzZWxsIHRoZSBjYXNpbm8sIEdpbGJlcnQgc2FpZC4KTmV4dCwgY29uc2lkZXIgZ2V0dGluZyBhIHBva2VyIHRhYmxlLiBXaGlsZSB0aGUgZGluaW5nIHJvb20gdGFibGUgbWF5IHdvcmssIHlvdSBjYW4gYWRkIGdyZWF0bHkgdG8geW91ciBnYW1lIGJ5IGhhdmluZyBhIGdlbnVpbmUgaG9sZGVtIHBva2VyIHRhYmxlLiBUaGV5IGNvbWUgaW4gYWxsIHByaWNlIHJhbmdlcy4gClBlcmhhcHMgc2FjcmlsZWdlIGFsbCBhcm91bmQgYnV0IEkgZGlkbiBraWxsIGVpdGhlciBib3R0bGUuIDIgcG9pbnRzICBzdWJtaXR0ZWQgNiBkYXlzIGFnb1dvdywgdGhhdCBtaWdodCBiZSBxdWl0ZSBhIGJpdCBvbGRlci4gQ2FuIHlvdSBwb3N0IGEgcGljIG9mIHRoZSBib3R0b20gb2YgdGhlIGJveD8gRG9lcyBpdCBoYXZlIGFuIEVNQiBjb2RlPyBJZiBpdCBkb2VzbiBpdCBtaWdodCBiZSAxOTc4IG9yIG9sZGVyISFBbm90aGVyIHRoaW5nISBJdCBkb2VzbiBoYXZlIGFuIGVzdGltYXRlZCBzeW1ib2wsIHJpZ2h0PyBUaGF0IGRpZG4gY29tZSBpbnRvIGVmZmVjdCBmb3IgRGlvciB1bnRpbCAxOTgwLlNvIHllYWgsIGl0IGxvb2tpbmcgbGlrZSAxOTY2IDE5ODAgbWF4LiAKIldlIGRvIG5vdCBpbnRlbmQgdG8gcmVvcGVuIHRoZSBIUTIgc2VhcmNoIGF0IHRoaXMgdGltZS4gCk15IGZhbWlseSBtZW1iZXIgZXhwcmVzc2VkIGhvdyBpdCB3b3VsZCBtYWtlIGhpbSBmZWVsIGlmIEkgYWNjb21wbGlzaGVkIHRoaXMgb25lIHBhcnRpY3VsYXIgdGhpbmcgZHVyaW5nIG15IGxpZmV0aW1lOyBhbmQgc2luY2UgdGhlbiwgSSBoYXZlLiBUaGUgcGVhY2UgYW5kIHByaWRlIGFuZCBsb3ZlIEkgZmVlbCBpcyB1cGxpZnRpbmcsIGtub3dpbmcgSSBjb21taXR0ZWQgdG8gcmVzcGVjdGluZyBoaXMgd2lzaGVzLiAKU28geWVhIEkgY291bGQgdG90YWxseSBzZWUgYSBiaWxsaW9uYWlyZSBtYWtpbmcgdGhhdCB0cmlwIGZvciBhIGhhbmR5Li4gCldoYXQgSSB3aWxsIHNheSBpcyB0aGF0IEkgY29tcGxldGVseSBhZ3JlZSB3aXRoIHlvdSBvbiB0aGUgQ2xhcmlzIGdyb3Vwc2V0LiAKSSB0YWxraW5nIGFib3V0IHBlcmNlcHRpb24uIApBTEEgaW50YWtlIHdhcyB1bnJlbGF0ZWQgdG8gdGhlIHJpc2sgb2YgdG90YWwgcHJvc3RhdGUgY2FuY2VyLiAoS0VZIFdPUkQ6IFRPVEFMKQpJdCBkZXBlbmRzIG9uIHlvdXIgYXVkaWVuY2UuIElmIHlvdXIgYXVkaWVuY2UgaXNuIGZhbWlsaWFyIHdpdGggZnVsbCBmcmFtZSwgd2h5IGNvbnZlcnQgaXQ/LiAKVGhhdCdzIHRoZSBzY2llbmNlIG9mIHRoZSBtYXR0ZXI7IGJlbG93IGFyZSBzb21lIHNvbHV0aW9ucy4uIApJIHNhaWQgSSB3YXMgYm9yZWQuIApNb3N0IG9mIHRoZSBvcHRpb25zIHdlcmUgbm90IEZyZW5jaC4gCk15IGJyYWluIG1ha2VzIG1lIHN1YmNvbnNjaW91c2x5IGdvIGRvd25zdGFpcnMgdG8gaGVscCBteSBkYWQgdW5wYWNrIGdyb2NlcmllcyBvciB3aGF0IGhhdmUgeW91IGJlZm9yZSBoZSBoYXMgdG8geWVsbCBteSBuYW1lLiAKSSBtYWtpbmcgbXkgcmFpc2UgcHJldHR5IGJpZyB0b28uIApJc3JhZWwgd2lsbCBuZXZlciB2b2x1bnRhcmlseSB0ZWFyIGRvd24gdGhlIHZlcnkgdGVuYW50cyBvZiBpdHMgZXhpc3RlbmNlLiAKVGhlIHdheSB3ZSBnZXQgb3VyIG1lYXQgbm93IGlzIGV4dHJlbWVseSB1bmV0aGljYWwgYW5kIHRlcnJpYmxlIGZvciB0aGUgZW52aXJvbm1lbnQuIEl0IG5vdCB0aGUgZmFybWVycyBmYXVsdCB0aGF0IHdoYXQgdGhlIGluZHVzdHJ5IGJlY2FtZSwgYnV0IHNvbWUgZGF5IGluIHRoZSBuZXh0IHNldmVyYWwgZGVjYWRlcyBzeW50aGV0aWMgbWVhdCB3aWxsIGJlIGp1c3QgYXMgY2hlYXAsIHByb2JhYmx5IGhlYWx0aGllciwgYW5kIHByb2JhYmx5IGJldHRlciBmb3IgdGhlIGVudmlyb25tZW50LiAKRG8geW91IHdhbnQgdG8gaGVhciBzb21ldGhpbmcgZnVubnk/IEkgaGF2ZSBiZWVuIHBsYXlpbmcgcG9rZXIgZm9yIG92ZXIgZmlmdHkgeWVhcnMgYW5kIHByb2JhYmx5IFRleGFzIEhvbGRlbSBiZWZvcmUgbWFueSBvZiB5b3Ugd2VyZSBldmVuIGJvcm4uIEFsbCB0aGF0IHRpbWUgYW5kIG5vdCBvbmNlIGhhdmUgSSBjb21lIGFjcm9zcyBhbnl0aGluZyB0aGF0IHJlbW90ZWx5IHJlc2VtYmxlZCBteSBvd24gc3RyYXRlZ2llcy4gTGlzdGVuLCBJJ3ZlIG1hZGUgZW5vdWdoIG1vbmV5IGluIHBva2VyIEkgZG9uJ3QgaGF2ZSB0byB3b3JyeSBhYm91dCBwdXJjaGFzaW5nIHRoZXNlIHByb2R1Y3RzIGxpa2UgdGhlIEhvdyBUbyBCZWF0IE5vIExpbWl0IFRleGFzIEhvbGQgRW0gaW5mb3JtYXRpb24uLiAKQWx0aG91Z2ggdGhlIGJlc3QgZGVhbCBpcyB0byBmaW5kIGEgZnJpZW5kIHdobyBhbHJlYWR5IGhhcyB0aGUgdG9vbHMuIEkgZG8sIGFuZCBJIGRvbmUgdGhpcyB0cmFkZSB3aXRoIGEgbG90IG9mIHBlb3BsZSAgIHdvcmsgaW4gbXkgc2hvcCBtYWtpbmcgc2ltcGxlIHN0dWZmIGZvciBtZSB0byBzZWxsIGZvciBhIGZldyBob3VycywgYW5kIGluIHJldHVybiB5b3UgY2FuIHVzZSBteSB0b29scyBhbmQgSSBzdXBwbHkgdGhlIG1hdGVyaWFsIGZvciB5b3UgdG8gbWFrZSB5b3VyIG93biBnZWFyLi4gCkFycmVzdCBjb3JydXB0IEltcGVyaWFscy4gSW4gMCBCQlkgdGhlIEVtcGlyZSdzIGdyZWF0IHN1cGVyd2VhcG9uLCB0aGUgZmlyc3QgRGVhdGggU3RhciB3YXMgZGVzdHJveWVkIGJ5IGEgeW91bmcgUmViZWwKRXJzdGVsbGVycy4gRG93bmxvYWRzIHVuZCBLb3BpZW4gZGllc2VyIFNlaXRlIHNpbmQgbnVyIGZyIGRlbiBwcml2YXRlbiwgbmljaHQga29tbWVyemllbGxlbiBHZWJyYXVjaCBnZXN0YXR0ZXQuLiAKVGFudCBwYXJ0aWN1bGlyZW1lbnQgYXR0ZW50aWYgYXUgZGVzaWduLCBqZSB0aWVucyAgZGlyZSBxdWUgbGEgY291dmVydHVyZSBhdXJhaXQgZ2FnbiAgbmUgcGFzIHByc2VudGVyIHVuZSBwbGFudGUgcXVpIG4gcXVlIHBldSBkZSByYXBwb3J0IChxdWUgZGlzIGplID8gQXVjdW4gcmFwcG9ydCAhKSBhdmVjIGxlIGRvbWFpbmUgZGUgbCA6IHVuIGxhbnRhbmEuIEltYWdpbmV6IHVuIHBldSB1biBjcm90b24gdmVuYW50IGlsbHVzdHJlciB1biBvdXZyYWdlIGRlIHBoeXRvdGhyYXBpZSAhIFF1b2kgcXVlIEogYmllbiB2dSB1bmUgZmV1aWxsZSBkZSBnaW5rZ28gb3JuZXIgdW4gZGVzIHRpcmFnZXMgZHUgdG9tZSBBcm9tYXRocmFwaWUgZGUgVmFsbmV0LCBjIHRvdXQgZGlyZSBkIGNlIGxpdnJlLCBqZSBuZSBjb25uYWlzc2FpcyBwYXMgZHUgdG91dCBzb24gYXV0ZXVyLiBBdSBnciBkZSBtZXMgcmVjaGVyY2hlcywgaiB2dSBkZXV4IG1vdHMgY2xzIHN1ciBsYSBjb3V2ZXJ0dXJlIChodWlsZXMgZXNzZW50aWVsbGVzLCBuZXJndGlxdWUpIGV0IGplIG1lIHN1aXMgYXJydCBmYWNlICBjZXQgb3V2cmFnZSBkb250IGxhIHF1YXRyaW1lIGRlIGNvdXZlcnR1cmUgZXN0LCBtYSBmb2ksIGZvcnQgYWxsY2hhbnRlIDoKSSBjYW5ub3QgbGVhdmUgdGhpcyB3aXRob3V0IG1lbnRpb25pbmcgdGhhdCBKb25lcyBuZXBoZXcgd2FzIG5hbWVkIENhdGVzYnkgYXAgUm9nZXIgSm9uZXMgKDE4MjEgMTg3NykuMS4gZ29vZCBzb3VyY2Ugb2YgaW5mb3JtYXRpb24gb24gdGhpcyBhY3Rpb246IFBvc3Nlc3Npb24gb2YgTW9udGVyZXkuIDIyLCAxODQzLiBIb3VzZSBvZiByZXByZXNlbnRhdGl2ZXMgRXhlY3V0aXZlIERvY3VtZW50IE51bWJlciAxNjYsIDI3dGhDb25ncmVzcywgM3JkIDlYNiIsIDExN3BwLiBIb3dlcyBNIENvd2FuIDMxNwpUaGVyZSBhcmUgZml2ZSBjb21tdW5pdHkgY2FyZHMgd2hpY2ggYXJlIHBsYWNlZCBieSB0aGUgZGVhbGVyLiAKVHVybnMgb3V0IHRoZSBzbm93IHBlb3BsZSB0aG91Z2h0IHdvdWxkIGhhcHBlbi4gCkljaCBoYWJlIGVpbmUgR29vZ2xlc3VjaGUgdW5kIHN0aWUgYXVmIElocmUgU2VpdGUuIEVzIHdhciBnZW5hdSBkYXMsIHdhcyBpY2ggc3VjaHRlLCB1bmQgd2FyIGJlZ2Vpc3RlcnQsIGVpbmUgVmllbHphaGwgdm9uIEFydGlrZWxuIHp1IGZpbmRlbi4gRGEgaWNoIGVpbiBrb3N0ZW5sb3NlcyBNYWdhemluIGluIGVpbmVyIGtsZWluZW4gU3RhZHQgaW4gRmxvcmlkYSBnZXN0YXJ0ZXQgYmluLCB3b2xsdGUgaWNoIHNvIGVpbmZhbGxzcmVpY2ggd2llIG1nbGljaCB1bmQgdHJvdHpkZW0gaW4gZGVyIExhZ2UsIGVpbmlnZSBJbmhhbHRlIGJlcmVpdHN0ZWxsZW4sIGRpZSBpbnRlcmVzc2FudCB1bmQgZ3V0IGdlc2NocmllYmVuIGlzdC4gClBsZWFzZSBkb24ndCBkbyB0aGlzLiBUaGVyZSBhcmUgc28gbWFueSByZWFzb25zIHRvIGxpdmUuIExpZmUgaGFzIHNvIG11Y2ggaW4gc3RvcmUgZm9yIHlvdSBJIHByb21pc2UuIApTb25pYSBpbXBsZW1lbnQgYSBob2xpc3RpYyBhcHByb2FjaCB0byBoZWFsdGggYW5kIHdlbGwgYmVpbmcuIFNoZSBlbmpveXMgYW5kIHdvcmtzIHBhc3Npb25hdGVseSB0byBzaGFyZSBhbmQgcHJvbW90ZSBnb29kIGhlYWx0aCBmb3IgdGhlIHBlcnNvbiBhcyBhIHdob2xlLiBTb25pYSBhaW1zIHRvIG9mZmVyIHlvdTpUaGUgdGVjaG5pcXVlcyB1c2VkIG1heSBpbnZvbHZlOlJlbGVhc2Ugb2YgdGVuc2lvbiB0cmlnZ2VyIHBvaW50c051dHJpdGlvbiBiYXNlZCBBeXVydmVkaWMgc3lzdGVtIG9mIGhlYWx0aEhlbGVuIGlzIGEgY29tcGxlbWVudGFyeSBoZWFsdGhjYXJlIHByYWN0aXRpb25lciB3aXRoIG92ZXIgMTAgeWVhcnMgZXhwZXJpZW5jZSBpbiBoZWFsdGhjYXJlIGFuZCB3ZWxsYmVpbmcsIHdvcmtpbmcgaW4gTkhTIGFuZCBjb21wbGVtZW50YXJ5IGhlYWx0aCBzZXR0aW5ncy4gCkluIHJlYWRpbmcgdGhlIGNvbW1lbnRzLCBteSBiZXN0IHN1Z2dlc3Rpb24gaXMgdGhhdCB5b3Ugbm90IGF0dGVuZCB0aGUgZXh0cmEgZXZlbnRzIHRoYXQgeW91IGRpZG4gcGxhbi4gV2hlbiBhc2tlZCB3aHksIHlvdSBjYW4gcmVzcG9uZCwgIkkgZm9sbG93ZWQgbXkgR3JhbmRtb3RoZXIgd2lzaGVzIGJ5IGRvaW5nIF9fX18uIAonJ0kgd2Fzbid0IGV2ZXIgY29uY2VybmVkIGFib3V0IGxvc2luZyB0aGUgbW9uZXkgICB0aGUgaXNzdWUgd2FzIEkgY291bGRuJ3Qgc3RvcCwnJyBoZSBzYWlkLiAnJ0knZCBjb21lIHRvIGEgdmVudWUgbGlrZSB0aGlzIGFuZCBJJ2QgYmUgdGFsa2luZyB0byBteXNlbGY6ICdEb24ndCBwbGF5IHRoZSBwb2tpZXMsIGRvbid0IHBsYXkgdGhlIHBva2llcycsIGFuZCBJJ2QgYmUgc2l0dGluZyBhdCBhIHRhYmxlIHdpdGggc29tZSBmcmllbmRzIFtidXRdIEkgd291bGRuJ3QgYmUgaGVhcmluZyB0aGUgY29udmVyc2F0aW9uLiAKV2l0aGRyYXdpbmcgaXMgcGVyZm9ybWVkIHdpdGggdGhlIHNhbWUgbWV0aG9kcyAoaWYgdGhleSBzdXBwb3J0IHdpdGhkcmF3YWwpIGFuZCB0aGUgdHJhbnNhY3Rpb24gcHJvY2Vzc2luZyBwZXJpb2QgY2FuIHRha2UgZnJvbSAyIDMgZGF5cyBmb3IgZSB3YWxsZXRzIHVwIHRvIDYgYnVzaW5lc3MgZGF5cyBmb3IgY3JlZGl0IGFuZCBkZWJpdCBjYXJkcy4uIApCdXQgZHJhbWF0aWMgY2hhbmdlcyBvbiB0aGUgcG9saXRpY2FsIHNjZW5lLCB3aGljaCBzYXcgdGhlIFBQUCBhbmQgdGhlIFBNTCBOIGxlYWRlcnMgZGV2ZWxvcCBkaWZmZXJlbmNlcyB3aXRoaW4gc2l4IG1vbnRocyBvZiBwb3dlciBzaGFyaW5nIGluIElzbGFtYWJhZCwgaGF2ZSBicm91Z2h0IHRoZSBDaGF1ZGhyeXMgYSBwaWVjZSBvZiBnb29kIG5ld3MuCkdvb2QgbHVjayBpdCB3b3JrcyBmb3IgbWUuIEFmdGVyIHRoYXQsIHlvdSB3aWxsIGhhdmUgdG8gZ28gdGhyb3VnaCBhIGxlbmd0aHkgLCBjb21wbGljYXRlZCBwcm9jZXNzIHRvIG1ha2UgYSByZWFsIG1vbmV5IGRlcG9zaXQuIApJTU8gd2UgYXJlIGp1c3QgYSBjb3VwbGUgeWVhcnMgYXdheSBmcm9tIGNvbnRlbmRpbmcuRWRpdDsgdGhlICJjb3VwbGUgeWVhcnMiIGlzIGFzc3VtaW5nIEtQIGNvbWVzIGJhY2sgaGVhbHRoeSBhbmQgYXQgaGlzIGZvcm1lciBsZXZlbC4gQWxzbywgaWYgdGhlIE1hdnMgaGFwcGVuIHRvIGxhbmQgYSBUaWVyIDEgb3IgVGllciAyIEZBIHRoaXMgb2Zmc2Vhc29uIHRoYXQgcHV0cyB1cyBpbnRvIGNvbnRlbnRpb24gbmV4dCB5ZWFyLiAzIHBvaW50cyAgc3VibWl0dGVkIDEzIGRheXMgYWdvTWF5IEkgc3VnZ2VzdCB5b3UgZG9uIGJvdGhlci4gClByb2JhYmx5IG1vc3Qgb2YgeW91IGhhdmUgaGVhcmQgYWJvdXQgcG9rZXIgdG91cm5hbWVudHMsIGZvciBleGFtcGxlLCBhYm91dCBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgKFdTT1ApLCB3aGVyZSB0aGUgYmVzdCBwb2tlciBwbGF5ZXJzIG1lZXQgYW5kIGNvbXBldGUgZWFjaCBvdGhlci4gU2ltaWxhciB0byB0aGUgb2ZmbGluZSBjYXNpbm8gdG91cm5hbWVudHMsIHRoZXkgYXJlIHBvcHVsYXIgZm9yIHF1aXRlIGEgbG9uZyB0aW1lLiAKTWlsYW5hIGxlaWRkZSBvbnMgbmFhciBlZW4gcmVzdGF1cmFudGplIGxhbmdzIE5vdnkgQXJiYXQuIE9wIGRlIGVlcnN0ZSB2ZXJkaWVwaW5nIG1ldCB6aWNodCBvcCBoZXQga2xlaW5lIFNpbWVvbiBTdHlsaXRlcyBrZXJramUgbWV0IGdyb2VuZSB1aWVuYm9sbGVuIHZlcmRyb25nZW4gdHVzc2VuIGRlIHdvbGtlbmtyYWJiZXJzIGF0ZW4gd2UgdHlwaXNjaCBSdXNzaXNjaCAobWV0IE1vcnN0ID0gdmVlbmJlc3NlbnNhcCkuIE9wIG5hYXIgaGV0IG1ldHJvIHN0YXRpb24sIHZvb3IgaGV0IGxhYXRzdGUgZGVlbCB2YW4gb256ZSB0b3VyLiAKVW5mb3J0dW5hdGVseSwgYXMgYSByZXN1bHQgb2YgaW5qdXJpZXMgYW5kIGJhZCBsdWNrLCB0aGUgYm93bGVyIHdvdWxkIG9ubHkgZXZlciBwbGF5IG9uZSBtb3JlIFRlc3QgbWF0Y2ggZm9yIEF1c3RyYWxpYS4gCkFsc28sIGl0IGlzIHdpZGVseSByZWdhcmRlZCB0aGF0IEJldFZpY3RvciBoYXMgdGhlIGxvd2VzdCBwcm9maXQgbWFyZ2luIG9uIGZvb3RiYWxsLCBhbmQgdGhlIGZpbmVzdCBsb25nIHRlcm0gb2RkcyBmb3IgRXVyb3BlYW4gZm9vdGJhbGwuSG9yc2UgUmFjaW5nQmV0VmljdG9yIG9mZmVycyBpdHMgY3VzdG9tZXJzIGdyZWF0IGhvcnNlIHJhY2luZyBtYXJrZXRzIGZyb20gVUsgYW5kIFVTLCB3aGlsZSB0aGVpciBob3JzZSByYWNpbmcgYmV0dGluZyBzZXJ2aWNlIGlzIHBhcnRpY3VsYXJseSBzdHJvbmcuIEJlc3QgT2RkcyBHdWFyYW50ZWVkIGlzIGF2YWlsYWJsZSBhdCBCZXRWaWN0b3IgZm9yIGFsbCByYWNlIHRyYWNrcyBpbiB0aGUgVW5pdGVkIEtpbmdkb20gYW5kIE5vcnRoZXJuIElyZWxhbmQuIApCdXQgd2hhdCBtYWtlcyBpdCB3b3JzZSBpbiBib3hpbmcgaXMgdGhhdCBpdCBsYWNrcyBhIHNpbmdsZSB1bmlmaWVkIGVudGl0eSB0byBjb250cm9sIGV2ZXJ5IGFzcGVjdCBvZiB0aGUgc3BvcnQuIFRoaXMgaXMgd2h5IGEgY291cGxlIHNlbmF0b3JzIGhhdmUgcmVjZW50bHkgcHJvcG9zZWQgVGhlIFVuaXRlZCBTdGF0ZXMgQm94aW5nIENvbW1pc3Npb24uIApVbmZsYXZvdXJlZCByaWNlIHZpbmVnYXIgMSBjdXAgKDI1MCBtTCkgd2F0ZXIgMSBUYnNwICgxNSBtTCkga29zaGVyIHNhbHQgb3IgMiB0c3AgKDEwIG1MKSBwaWNrbGluZyBzYWx0IDEgVGJzcCAoMTUgbUwpIGdyYW51bGF0ZWQgc3VnYXIgV2FzaCBhbmQgZHJ5IHRoZSBqYXJzLCBzbmFwIGxpZHMgYW5kIHJpbmdzLiAKSGFzIGJlZW4gbGF5aW5nIHRoZSBncm91bmR3b3JrIGZvciBpdHMgcGxhdGZvcm0gc3RyYXRlZ3kgZm9yIHllYXJzLiBJdCByZXF1aXJlcyBib3RoIHNpZ25pZmljYW50IHRlY2hub2xvZ3kgaW52ZXN0bWVudHMgaW4gYm90aCBpbmZyYXN0cnVjdHVyZSBhbmQgc29mdHdhcmUsIGFzIHdlbGwgYXMgYSBidXNpbmVzcyBtb2RlbCB0aGF0IHByb3ZpZGVzIHZhbHVlIGZvciBib3RoIHNpZGVzIG9mIHRoZSBlcXVhdGlvbiwgc2F5cyBXZXJiYWNoLiBJbnRlcm5ldCBjb21wYW5pZXMgZ2V0IHRvIGEgY2VydGFpbiBzY2FsZSwgdGhlIHBsYXRmb3JtIG1vZGVsIHByb3ZpZGVzIHRoZSBiZXN0IG9wcG9ydHVuaXR5IGZvciBjb250aW51ZWQgZ3Jvd3RoLiBHb29nbGUsIEFwcGxlLCBGYWNlYm9vayBhbmQgZUJheSBoYXZlIGFsbCByZWRlc2lnbmVkIHRoZWlyIGJ1c2luZXNzZXMgYXMgcGxhdGZvcm1zLgpZb3UnbGwga25vdyB3aGF0IHRvIGRvLi4gCk9iZXNpdHkgaXMgbm90IGEgZGlzZWFzZSwgYW5kIG9iZXNlIGFkdWx0cyBoYXZlIG5vIGV4Y3VzZSBhdCBhbGwgZm9yIGJlaW5nIGZhdC4gSSBiZSBhbGwgaW4gZmF2b3Igb2YgaGF2aW5nIHBoeXNpY2FsIGZpdG5lc3Mgc3RhbmRhcmRpemVkIHRlc3RzIGluIGV2ZXJ5IHB1YmxpYyBoaWdoIHNjaG9vbCBhcyBhIHJlcXVpcmVtZW50IGZvciBncmFkdWF0aW9uLiBUb28gZmF0IHRvIHJ1biBhIDEwIG1pbnV0ZSBtaWxlPyBObyBkaXBsb21hIHVudGlsIHlvdSBjYW4uIE1peCBpbiBzb21lIHByb3BlciBudXRyaXRpb24gY2xhc3NlcyAoaXQgc2hvY2tpbmcgaG93IGZldyBwZW9wbGUga25vdyB3aGF0IGEgY2Fsb3JpZSBpcyBvciBob3cgdG8gcmVhZCBhIGZvb2QgbGFiZWwpIGFuZCB0aGluZyB3b3VsZCBpbXByb3ZlLgpUaGV5IGFyZSBlaXRoZXIgcHJvdGVjdGVkIGJ5IGEgcGFzc3dvcmQgdGhhdCBpcyBvbmx5IGdpdmVuIG91dCB0byBtZW1iZXJzIG9mIHRoZSBmcmVlIHBva2VyIHdlYnNpdGVzIG9yIGFyZSByZXN0cmljdGVkLiAKU291bmRzIGxpa2Ugc2hlIGlzIHB1dHRpbmcgaGVyc2VsZiBpbiBwb3NpdGlvbiB0byBiZSBUaGUgTWFycmlhZ2UgRXhwZXJ0IGluIHlvdXIgbGlmZS4gVGhpcyBpcyB1bmRlcmN1dHRpbmcgeW91LCBzdWJ0bHkuIFRoaXMgaXMgYSBtZXNzYWdlIHRvIHlvdXIgc3BvdXNlIHRoYXQgc2hlIGlzICJvbiBoaXMgc2lkZSIgd2hlbiB0aGluZ3MgZ2V0IHJvdWdoIGJldHdlZW4geW91IGFuZCBzcG91c2UsIGV2ZXIuCkVkaXQ6IGEgbG90IG9mIGJ1dHRodXJ0IHBlb3BsZSBoZXJlLiBJIGJldCB5b3UgYmVlbiBpbiBhIG1hdGNoIHdoZXJlIHlvdSBkb25lIDJrIGRtZyBlYWNoLCBnb3QgY291cGxlIG9mIGtpbGxzIGFuZCBkaWRuIHdpbi4gClRoZSByaXNrIGFzc2Vzc21lbnQgc2hvdWxkIGZpbmQgdGhlIGJ1Z3MsIGJ1dCB3aWxsIGhvcGVmdWxseSBwb2ludCBvdXQgdGhhdCBwYXRjaGluZyBhcyBhIHByb2Nlc3MgaXMgYnJva2VuIGNhdXNpbmcgaGlnaCByaXNrLgpJIHN1c3BlY3QgaGUgYnJvdWdodCB0aGUgdmlkZW8gdGFwZSBmcm9tIHRoZSBzdXJwcmlzZSBiaXJ0aGRheSBwYXJ0eSB0byBoZXIgYXBhcnRtZW50LiBJdCB3YXMgaGlzIGV4Y3VzZSB0byBzZWUgaGVyIHRoYXQgZGF5LiBUaGF0IGFsb25lIHdhcyB3ZWlyZCBiZWNhdXNlIHRoZSBzdXJwcmlzZSBiaXJ0aGRheSBwYXJ0eSBpbnZpdGVzIHNhaWQgIkdJVkVOIEJZIEpPSE4gVkFOQ0lTRSBBTkQgRlJJRU5EUyIgb24gaXQuIApDaGluZXNlIG9ubGluZSBXZWlibyBOYXRpb25hbGlzdHM6ClBsZWRnZSBhbGxlZ2lhbmNlIHRvIHRoZSBGbGFnIG9mIHRoZSBVbml0ZWQgU3RhdGVzIG9mIEFtZXJpY2EsIGFuZCB0byB0aGUgUmVwdWJsaWMgZm9yIHdoaWNoIGl0IHN0YW5kcywgb25lIG5hdGlvbiwgdW5kZXIgR29kLCBpbmRpdmlzaWJsZSwgd2l0aCBsaWJlcnR5IGFuZCBqdXN0aWNlIGZvciBhbGwuIFdvcmRzICJ1bmRlciBHb2QiIHdlcmUgYWRkZWQgYWZ0ZXIgZGlsaWdlbnQgcHJvc2VjdXRpb24gb2YgcmVsaWdpb3VzIGFuZCBwb2xpdGljYWwgaW50ZXJlc3RzIGJ5IHRoZSBSb21hbiBDYXRob2xpYyBvcmdhbml6YXRpb24sIHRoZSBLbmlnaHRzIG9mIENvbHVtYnVzLCB0byBoZWxwIGZpZ2h0IHRoZSBDb21tdW5pc3RzLiAKSXQgaXMgYWdlZCBpbiBib3VyYm9uIGNhc2tzIGZvciBzZXZlbiB5ZWFycyBiZWZvcmUgc3BlbmRpbmcgdGltZSBpbiBGcmVuY2ggb2FrIGV4IHdpbmUgYmFycmVscywgdGhlbiBiZWluZyBmaW5pc2hlZCBpbiBIdW5nYXJpYW4gb2FrLCB3aGljaCBjb250cmlidXRlcyBhIHBvd2VyZnVsLCBhbG1vc3QgcnllIGxpa2Ugc3BpY2UuLiAKSGUgZnJlcXVlbnRseSB3ZW50IHRvIHRoZWlyIHBhZ2VzIGFuZCBrZXB0IHRhYnMgb24gdGhlaXIgbGlmZS4gVGhlIHdvcnN0IHdhcyBkaXNjb3ZlcmluZyB0aGF0IHRoZSBmaXJzdCB0aGluZyBoZSBkaWQgYXQgd29yayB0aGUgZGF5IHdlIHJldHVybmVkIGZyb20gb3VyIGhvbmV5bW9vbiB3YXMgbG9vayB0aGVtIHVwIGFuZCB2aXNpdCB0aGVpciBwYWdlcy4KQ2VydGFpbmx5IEkgd2lzaCBJIGhhZCBzdHVtYmxlZCB1cG9uIHRoaXMgbWluZHNldCBzb29uZXIgYXMgSSBzdXJlIEkgaGF2ZSBiZWVuICJoZWFsZWQsIiBvciBqdXN0IG91dCBvZiBpdCBxdWlja2VyLiBJIGRvbiB0aGluayBhZ2Ugd2lsbCBoYXZlIG11Y2ggZmFjdG9yIGluIGl0LCByZWFsbHkuIEkgd291bGRuIGJhcmUgZG93biBvbiB5b3Vyc2VsZiBmb3Igd2hhdCB5b3UgaGF2ZW4gZG9uZSBhdCBhZ2UgMjgsIGFzIEkgc3VyZSB5b3UgaGFkIG1hbnkgZXhwZXJpZW5jZXMgYW5kIGxpdmVkIHZlcnkgaW50ZXJlc3RpbmcgdGFsZXMgdGhhdCBwZW9wbGUgb2YgYW55IGFnZSB3b3VsZCBiZSBlbnZpb3VzIG9mISBZb3VyIGpvdXJuYWwgc2VlbXMgbGlrZSBhIGdyZWF0IGlkZWEuIAoiSXQgYWxsIGRlcGVuZHMgdXBvbiB0aGUgd2VhdGhlciwgYnV0IHdlJ3JlIGhvcGluZyBmb3IgMjQwIG9kZCBiaWtlcyBvbiB0aGUgZGF5IGFuZCBob3BlZnVsbHkgd2UgY2FuIHN1c3RhaW4gdGhhdCBhbW91bnQsIiBNciBIYXN0aW5ncyBzYWlkLiAKRXF1aXR5IHJlYWxpc2F0aW9uIGlzIHRoZSBjb25jZXB0IG9mIGhvdyB3ZWxsIGEgZ2l2ZW4gaGFuZCB3aWxsICJyZWFsaXNlIiBpdCBlcXVpdHkuIEZvciBleGFtcGxlIGlmIEkgaGF2ZSA2N3MsIGFuZCBvcHBvbmVudCBoYXMgQVRvLCBJIGhhdmUgNDAlIGVxdWl0eS4gClN0YWNrIHJhdGlvIGdvdCB0byB0aGUgc3RhZ2Ugd2hlcmUgdGhlIHByb2Zlc3Npb25hbHMgd2VyZSBmb3JjZWQgdG8gZ2FtYmxlIGluIHNpdHVhdGlvbnMgdGhleSB3b3VsZCByYXRoZXIgYXZvaWQuIApXaGF0IE9uVGhpbmdzIHRvIGRvRm9vZCBhbmQgRHJpbmtUaGVhdHJlIGFuZCBBcnRzRmFtaWx5IGFuZCBLaWRzTXVzaWMgYW5kIEdpZ3NUViBHdWlkZURpZ2l0YWwgUHJpbnQgRWRpdGlvblRha2UgYSB3YWxrIGFjcm9zcyB0aGUgZ2FtaW5nIGZsb29ycyBvZiBjYXNpbm9zIGFyb3VuZCB0aGUgY291bnRyeSBhbmQgeW91IHNlZSBmbGFzaGluZyBsaWdodHMsIGhlYXIgcmluZ2luZyBiZWxscywgYW5kIHRoZSBzaW11bGF0ZWQgc291bmQgb2YgY29pbnMgc3BpbGxpbmcgb3V0IG9udG8gdGhlIGZsb29yLiBUaGVyZSBpcyBhbHNvIGEgcHJldHR5IGdvb2QgY2hhbmNlLCBhbW9uZyB0aGUgZ2xvd2luZyByb3dzIG9mIHBva2VyIG1hY2hpbmVzLCB0aGF0IHlvdSB3aWxsIHNlZSB0aGUgbmFtZSAiRG9scGhpbiBUcmVhc3VyZSIuIE1hZGUgYnkgbWFya2V0IGxpc3RlZCBzbG90cyBtYW51ZmFjdHVyZXIgQXJpc3RvY3JhdCwgRG9scGhpbiBUcmVhc3VyZSBpcyBqdXN0IG9uZSBvZiBhbnkgbnVtYmVyIG9mIHBva2VyIG1hY2hpbmUgYnJhbmRzIHRoYXQgYXJlIGF2YWlsYWJsZSB0byBBdXN0cmFsaWFuIHB1bnRlcnMuIApKYSwgaWNoIGdlc3RlaGUnLCBkYXMgQXp1bCBpc3QgbWVpbiBMaWVibGluZ3NyZXN0YXVyYW50IGF1ZiBMYSBQYWxtYSEuIApJZiBhbnlvbmUgY2FuIHN1Z2dlc3QgYW55dGhpbmcgdG8gaW1wcm92ZSBteSBwbGFuIHRvIGhlbHAgYmVhdCB0aGUgaGlnaCBjb3N0IG9mIGNoaWxkIGNhcmUsIHBsZWFzZSBsZXQgbWUga25vdyB3aGlsZSBJIHN0aWxsIGhhdmUgdGltZS4uIApNYW55IG9mIHRoZSBNb29uJ3MgY3JhdGVycyBhcmUgYWN0dWFsbHkgb3BlbmluZ3MgdGhhdCBsZWFkIHRvIGl0cyBpbnRlcmlvci4gCihJIHdvbiBwcmV0ZW5kIHRvIHVuZGVyc3RhbmQgYW55dGhpbmcgYWJvdXQgZXRoaWNzLCBidXQgSSBpbnRlcnByZXQgdGhpcyBhcyBjb25zZXF1ZW50aWFsaXN0IHJhdGhlciB0aGFuIGRlb250b2xvZ2ljYWwgYXMgcGVyIHlvdXIgbHlpbmcgYW5hbG9neS4gQnV0IEkgYWNrbm93bGVkZ2UgbXkgaW50ZXByZXRhdGlvbiBtYXkgd2VsbCBiZSBvZmYgdGhlIG1hcmsuKQoiSSBwbGF5ZWQgYSBsb3Qgb2YgZ2FtZXMgaGVyZSwiIHNhaWQgRW5uaXMsIHdobyBwbGF5ZWQgZm91ciB5ZWFycyBvZiBqdW5pb3IgaG9ja2V5IGluIE1lZGljaW5lIEhhdC4gCiJUaGVyZSdzIGEgYmlnIHF1ZXN0aW9uIGFzIHRvIHdoYXQgd2lsbCB0YWtlIHRoZSBmaW5hbmNpYWwgaW5kdXN0cnkncyBwbGFjZSwgaWYgaXQgZG9lc24ndCBjb21lIGJhY2suIi4gCkkganVzdCB0aGlua2luZyB3aGF0IHdvdWxkIEkgZG8gaWYgc2hlIHdhcyBteSBoZWxwZXIuIEkgd291bGQgaGF2ZSBrZXB0IGhlciBvbiBhbmQgaGlyZWQgYSBob3VybHkgbWFpZCBmb3IgYSBmZXcgbW9udGhzIHNvIHNoZSB3b3VsZCBoYXZlIGEgY2hhbmNlIGF0IGZpZ2h0aW5nIHRoZSBjYW5jZXIuIFRoZSByZWNvdmVyeSB0aW1lIGZvciByZW1vdmluZyB5b3VyIGNlcnZpeCBpc24gdG9vIGxvbmcgYW5kIHRoZXJlIGEgZ29vZCBjaGFuY2Ugc2hlIGJlIGFibGUgdG8gd29yayBhZ2FpbiBpbiA2IDggd2Vla3MgdGltZSwgYnV0IHNjaGVkdWxpbmcgZm9yIHN1cmdlcnkgd2lsbCBhbHNvIHRha2Ugd2Vla3MgYW5kIHRoZXJlIG5vIGd1YXJhbnRlZSB0aGF0IHRoZSBjYW5jZXIgd2lsbCBiZSBnb25lIGFmdGVyIHN1cmdlcnkuLiAKTm90aGluZyBJIGxpa2UgYmV0dGVyIHRoYW4gc3BlbmRpbmcgYmV0d2VlbiA2IDggaG91cnMgb24gU2F0dXJkYXkgZGlzY3JldGVseSBhZG1pcmluZyBiYWNrcGFja2VycyBpbiB0aGVpciAyMHMgdGhhdCBzZWVtIHRvIGNvbXBldGUgd2l0aCBlYWNoIG90aGVyIG9uIGhvdyBsaXR0bGUgdGhleSBjYW4gd2VhciBhbmQgZ2V0IGF3YXkgd2l0aCBpdC4gVGhlbiBmb3IgYSBtb21lbnQgbXkgcGVhY2UgYW5kIHRyYW5xdWlsbGl0eSBpcyBzaGF0dGVyZWQgYXMgbGl0dGxlIEppbW15IHN0YXJ0cyBzY3JlYW1pbmcgZm9sbG93ZWQgYnkgaGlzIG11bSB3aG8gc3RhcnRzIHNjcmVhbWluZyBhdCBoaW0uIEkgdGhlbiByZW1lbWJlciB0aGF0IEkgbmV2ZXIgbGVhdmUgdG8gZ28gdG8gdGhlIGxhZ29vbiB3aXRob3V0IG15IGhpZ2ggZW5kIG5vaXNlIGNhbmNlbGxpbmcgaGVhZHBob25lcyB3aGljaCBibG9jayBvdXQgYWxsIHRyYWNlcyBvZiB0aGUgbm9pc2UgcG9sbHV0aW9uLiAKVGhlIGNvbnZlcnNhdGlvbnMgRml2ZSBoYXMgd2l0aCBEb2xvcmVzIGFyZSBjb21wbGV0ZWx5IG9uZSBzaWRlZCBvbiBoaXMgcGFydC4gU28gbm8sIEkgZG9uIHRoaW5rIERvbG9yZXMgaXMgY29uc2Npb3VzIGluIGFueSB3YXksIHNoZSB3YXMganVzdCBGaXZlIGNvcGluZyBtZWNoYW5pc20uLiAKSSBtZWFuIHRoZSBvbmx5IHJlYXNvbiBzaGUgd2FzIGFrdW1hdGl6ZWQgaW4gTWF5dXJhIHdhcyBiZWNhdXNlIG9mIGEgc25lYWsgYXR0YWNrIGJ5IGJ5IGRlc3BhaXIgYmVhciBpdCB3YXNuIGJlY2F1c2Ugb2YgaGVyIHBhcmVudHMuIApJZiBJIHNsb3dlZCBkb3duLCB0aGUgcXVlc3Rpb25zIHN0YXJ0ZWQgZ2V0dGluZyByYWlzZWQgIndlIG5lZWQgeW91IHRvIGZvY3VzIG9uIHRoZSB0b3AgcHJpb3JpdHkgaXNzdWVzIGhlcmUgYW5kIHN0YXJ0IHRhY2tsaW5nIHRoZW0iIGFzIGlmIEkgaGFkIGp1c3Qga2lja2VkIG15IGZlZXQgdXAgYW5kIHNhdCBvbiBteSBhc3MgdGhlIHdob2xlIHNoaWZ0LiAKSnVzdCBmb2xsb3cgdGhlc2UgZWFzeSBhbmQgcXVpY2sgc3RlcHMgYW5kIHlvdSB3aWxsIGJlIHN1cnByaXNlZCB3aXRoIHRoZSByZXN1bHRzLiAKTXkgd29ycnkgbGF0ZWx5IGlzIHRoYXQgdGhleSBoYXZlIGJlZW4gZG9pbmcgdGhpcyBhIGxpdHRsZSB0b28gd2VsbCwgYW5kIGl0IGhhcyBvZiBjb3Vyc2UgYWxsIGdvbmUgdG8gRHV0dG9uIGhlYWQuIApFdmVuIHdpdGggYSBmbHVzaCBvbiB0aGUgYm9hcmQgaW4gVGV4YXMgSG9sZCdlbSB0aGUgcGxheWVycyBjYW4gc3RpbGwgdXNlIHRoZWlyIGhvbGQgY2FyZHMgdG8gZm9ybSB0aGUgZml2ZSBjYXJkIGhhbmQuIFRoaXMgaXMgaW1wb3J0YW50IHNpbmNlIGlmIGEgcGxheWVyIGhvbGRzIGEgbWF0Y2hpbmcgc3VpdCBpdCBtYXkgYmUgaGlnaGVyIHRoYW4gb25lIG9mIHRoZSBjYXJkcyBvbiB0aGUgYm9hcmQuIApGcm9tIGRlZXAgdGlzc3VlIG1hc3NhZ2UgdG8gc3BvcnRzIG1hc3NhZ2UsIG1hbnkgb2YgdGhlc2UgbWFzc2FnZXMgb2Ygd2hpY2ggd2VyZSBiYXNlZCBmcm9tIHRoZSBmb3VuZGF0aW9uIG9mIHRoZSBTd2VkaXNoIG1hc3NhZ2UuIE5vIG1hdHRlciB3aGljaCB0eXBlIG9mIG1hc3NhZ2UgeW91IHVzZSB0aGVyZSBhcmUgbWFueSBhdmFpbGFibGUgb3V0IHRoZXJlLiAKSW4gZmFjdCwgaGUgZGVzcGlzZWQgZnJhZ3JhbmNlcyBiZWNhdXNlIHRoZXkgcmVtaW5kZWQgaGltIG9mIGhpcyBQZXJzaWFuIGVuZW1pZXMsIGFuZCBoZSBjb250ZW1wdHVvdXNseSB0aHJldyBvdXQgYSBib3ggb2YgcHJpY2VsZXNzIG9pbnRtZW50cyBmcm9tIEtpbmcgRGFyaXVzJyB0ZW50IGFmdGVyIGRlZmVhdGluZyBoaW0gYXQgdGhlIGJhdHRsZSBvZiBJc3Nvcy4gSG93ZXZlciwgYWZ0ZXIgYSBmZXcgeWVhcnMgb2YgdHJhdmVsaW5nIHRocm91Z2ggQXNpYSwgaGUgYmVjYW1lIGNvbnZpbmNlZCBvZiB0aGUgam95cyBvZiBmaW5lIHNjZW50LiAKV2hlbiB0aGUgZm91bmRlcnMgb2YgTWF0dGVsLCB0aGUgSGFuZGxlcnMsIHRyYXZlbGVkIHRvIEdlcm1hbnkgaW4gMTk1MCB0aGV5IGZvdW5kIGEgbmF1Z2h0eSBsaXR0bGUgZG9sbCBieSB0aGUgbmFtZSBvZiBMaWxpLiBMb3JkLCB3YXMgYmFzZWQgb24gYSBwb3Jub2dyYXBoaWMgY2FydG9vbiBhbmQgc29sZCB0byBhZHVsdCBtZW4gYXMgYSBwb2NrZXQgc2l6ZWQgbm92ZWx0eSAob25lIG11c3QgYXNzdW1lIGZvciBtYXN0dXJiYXRvcnkgcHVycG9zZXMpLiBBbmQgdGhlIEhhbmRsZXJzIHRob3VnaHQsICJHZWUsIHdvdWxkbiB0aGlzIGxpdHRsZSBtYXN0dXJiYXRvcnkgYWlkIG1ha2UgYSBncmVhdCB0b3kgZm9yIGdpcmxzPyBBbmQgbGV0IG5hbWUgaXQgYWZ0ZXIgb3VyIGRhdWdodGVyLCBCYXJiYXJhLiIgSXQgaXMgQmFyYmllIGRvZGd5IGJlZ2lubmluZ3MgdGhhdCBnaXZlIGVhcmx5IEJhcmJpZSBhIGtpbmRhIGhhcmQgYW5kIHRvdWdoIGxvb2ssIGxpa2UgYSBzZXggd29ya2VyLiBJbiBmYWN0LCBpdCB3YXNuIHVudGlsIDE5NzEsIHNpeHRlZW4geWVhcnMgYWZ0ZXIgdGhlIGludHJvZHVjdGlvbiBvZiBCYXJiaWUvTGlsaSB0aGF0IE1hdHRlbCByZXNoYXBlZCBCYXJiaWUgaW50byB0aGUgYmxhbmsgZXhwcmVzc2lvbiwgUGxheWJveSBQbGF5bWF0ZSB0eXBlIGZhY2UgdGhhdCBzaGUgc3RpbGwgc3BvcnRzIHRvZGF5LgpIcmFicmFTcmNhRXVyb3BlYW4gQmEgIDcgcG9pbnRzICBzdWJtaXR0ZWQgNyBtb250aHMgYWdvClRoZSBTdGFycyBHcm91cCBSZXBvcnRzIEZvdXJ0aCBRdWFydGVyIGFuZCBGdWxsIFllYXIgMjAxOCBSZXN1bHRzOyBQcm92aWRlcyAyMDE5IEZ1bGwgWWVhciBHdWlkYW5jZSAgIENOVyBHcm91cCAgIFdlZCBNYXIgNiwgNTozMEFNIENTVApJIGdyYWJiZWQgaGVyIGhhbmQgYW5kICJwYXJkb24gdXMgYW5kICJleGN1c2UgbWUgb3VyIHdheSB0byB0aGUgZnJvbnQgcm93IGFuZCB0aGUgY3Jvd2QganVzdCBwYXJ0ZWQgZm9yIHVzLiAKMykgQ29udGludWluZyB0byBibHVmZiBoaXMgYmFja2Rvb3IgZHJhd3MgdGhhdCBnYWluZWQgZXF1aXR5IG9uIHR1cm4gbG9va2luZyB0byBmb2xkIG91dCBsaWtlIHRoZSB3ZWFrZXIgcGFydCBvZiB5b3VyIGNhbGwgcmFuZ2Ugb24gZmxvcCBhbmQgc3RpbGwgaGFzIGdyZWF0IGVxdWl0eSB2cyB5b3VyIGNhbGwgcmFuZ2UuCk91cm9ib3Jvc2l0eSAgMyBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KRmlyc3QsIEkgaGVscGVkIG15IG93biBraWRzIGdldCByZWFkeSBmb3IgdHJpY2sgb3IgdHJlYXRpbmcuIApJIGdvdCBpbiwgYmVjYXVzZSBvZiB0aGUgcmVhc29ucyBvbmx5IHBlb3BsZSBsaXZpbmcgaW4gZGljdGF0b3JzaGlwcyBjYW4gdW5kZXJzdGFuZC4gCicnVW5mb3J0dW5hdGVseSB0aGVzZSBtYWNoaW5lcyBvbmx5IG1ha2UgbG91ZCBub2lzZXMgYW5kIGhhdmUgZmxhc2hpbmcgbGlnaHRzIHdoZW4gcGVvcGxlIHdpbiwgc28gY2hpbGRyZW4ncyBwZXJjZXB0aW9uIGlzIHRoYXQgcGVvcGxlIGFyZSB3aW5uaW5nIG1vcmUgdGhhbiB0aGV5IGFyZSBsb3NpbmcuJycKSHVuZHJlZHMgb2YgZXhwZXJpbWVudGFsIGludmVzdGlnYXRpb25zIHRocm91Z2ggdGhlIGxhc3QgMzAgeWVhcnMgaGF2ZSB0YXVnaHQgdXMgaG93IG11Y2ggZW5lcmd5IGNhbiBiZSBsaWJlcmF0ZWQgaW4gZWFjaCB0cmFuc2Zvcm1hdGlvbiwgd2hpdGhlciBieSB0aGUgZmlzc2lvbiBvZiBoZWF2eSBudWNsZWkgb3IgdGhlIGZ1c2lvbiBvZiBsaWdodCBvbmVzLiAKV2lsbCBub3QsIEFsaWNlIEV1Z2VuaWEhIEdldCB5b3VyIGFzcyBvdXQgb2YgYmVkIHRoaXMgaW5zdGFudC4gRG8gbm90IHdpc2ggdG8gbGVhdmUgbXkgYmVkIGF0IHRoaXMgbW9tZW50LCBhbmQgeW91IGNhbiBuZXZlciBtYWtlIG1lLiAKRm9yIGEgcGxhY2UgdG8gcG9zdCBzY3JlZW5zaG90cywgeW91IG1heSB3aXNoIHRvIGNoZWNrIG91dCAvci9zY3JlZW5zaG90cy4uIApEaWFiZXRlcyBUeXBlIDIgUmV2ZXJzYWwgd2l0aCBkaWV0Ck1heWJlIHRoZSBhcHBsaWNhdGlvbiBoYXMgY2hhbmdlZCAoYmV0dGluZyAyLjMgMi41eCB0byBvcGVuIGluIGEgTVRUIHZzIGJldHRpbmcgMyA0eCkgYnV0IHRoZSBwcmluY2lwbGUgaGFzbid0IChpZiBpdCdzIHdvcnRoIHBsYXlpbmcsIG9wZW4pLiBJIGFsc28gbGlrZSB0byB0aGluayBkZWVwbHkgYWJvdXQgZWFjaCBjb25jZXB0IHNvIGEgY2hhcHRlciBpbiBhIGJvb2ssIHJlYWQgYXQgbXkgb3duIHBhY2UsIHNlcnZlcyBtZSBiZXR0ZXIgdGhhbiBhIHF1aWNrIHZpZGVvIG9mIHRoZSBzYW1lIGNvbnRlbnQuIFN0cmljdGx5IHByZWZlcmVuY2UgYXQgdGhhdCBwb2ludCB0aG91Z2guLiAKVGhlIGxpdHRsZSBzaXN0ZXIgd2FzIGluIGd5bW5hc3RpY3MgYW5kIGhhZCBpbmp1cmVkIGhlciBhcm0gcmVjZW50bHkgdGhlbiBhcyB3ZWxsIGFuZCB3YXMgaW4gYW4gYXJtIHNsaW5nLiAKTGlmZSBzdGlsbCBzdWNrcyBhbmQgaW4gYmFkIG1vbnRocyBJIGNhbiBzdGlsbCBoaXQgMjUgbWlncmFpbmUgZGF5cyBhIG1vbnRoIHdpdGggZXh0cmVtZSB2ZXJ0aWdvIChhbmQgSSBrbm93IGFsbCB0byB3ZWxsIGhvdyBQT1RTIGRvZXNuIGhlbHAgd2l0aCB0aGlzKSwgYnV0IEkgYWN0dWFsbHkgYWJsZSB0byBoYXZlIGEgam9iIGFnYWluIHRoZXNlIGRheXMgYW5kIGhhdmUgc29tZSBzb3J0IG9mIGEgbGlmZSBpZiB0aGVyZSBhcmVuIHRvbyBtYW55IHRyaWdnZXJzIGdvaW5nIG9uLi4gCkkgZG9uIHBsYXkgbGl2ZSBvZnRlbiwgYnV0IEkgbm90aWNlZCBpdCBoYXMgaGVscGVkIG1lIGluIG15IG9ubGluZSBnYW1lIHZhc3RseS4gQ29uc2lkZXJpbmcgbGl2ZSBnYW1lcyBhcmUgaW5maW5pdGVseSBzb2Z0ZXIgdGhhbiB0aGVpciBvbmxpbmUgY291bnRlcnBhcnRzIEkgY2Fubm90IGltYWdpbmUgVXBzd2luZyBiZWluZyB1c2VsZXNzIGZvciB5b3UuClRha2Ugc29tZSB0aW1lIGFuZCBtYWtlIHN1cmUgdGhhdCB5b3UgY29uc2lkZXIgdGhlIG9wdGlvbnMgdGhhdCBhcmUgYXZhaWxhYmxlIGZvciB5b3Ugd2hlbiB5b3UgZGVjaWRlIHRoYXQgeW91IHdhbnQgdG8gbW92ZSBmb3J3YXJkIGFuZCBnZXR0aW5nIGNoaXBzIGZvciB5b3VyIHBva2VyIHRhYmxlLiBXaGVuIHlvdSBpbnZlc3QgaW4gYSBUZXhhcyBIb2xkIEVtIFBva2VyIENoaXAgU2V0LCB5b3UnbGwgZmluZCB0aGF0IHlvdSBoYXZlIGEgc2V0IHRoYXQgaXMgZ29pbmcgdG8gcGxlYXNlIGV2ZXJ5b25lIHdobyBzaXRzIGRvd24gYXQgeW91ciB0YWJsZS4gVGFrZSBzb21lIHRpbWUgYW5kIG1ha2Ugc3VyZSB0aGF0IHlvdSBmaW5kIHRoZSByaWdodCBzZXQgYW5kIHlvdXIgcG9rZXIgYnVkZGllcyB3aWxsIGxvdmUgdGhlIHJlc3VsdCEuIApXZSBoYXZlIGxpbmtzIHdpdGggbWFueSBsb2NhbCBzcG9ydHMgdGVhbXMgYW5kIHNwb3J0cyBwcmFjdGl0aW9uZXJzIHdobyBjb250cmlidXRlIHRvIHRoZSBCU2MgUGh5c2lvdGhlcmFweSBwcm9ncmFtbWUsIGFuZCB3aG8gYXJlIGtlZW4gdG8gY29udHJpYnV0ZSB0byB0aGUgbmV3IEJTYyBTcG9ydCBSZWhhYmlsaXRhdGlvbiBjb3Vyc2UuIFRoZXNlIGluY2x1ZGU6CkkgaGF2ZSB0byBrZWVwIGl0LCBJIGtub3cuIApZb3UgYXJlIG5vdCB0aGUgdWdseSBibGFjayBzaGVlcCB0byBBTllPTkUgb3IgaW4gQU5ZIHVuaXZlcnNlLiAKTW9yZSBpbXBvcnRhbnRseSwgYXMgbG9uZyBhcyB5b3UgdXNlIHJlZ3VsYXJpemF0aW9uLCBldmVyeXRoaW5nIHdvcmtzIGl0c2VsZiBvdXQuIEV2ZW4gaWYgYSBsZXZlbCBvbmx5IGV4aXN0cyBpbiBvbmUgZGF0YXBvaW50IChleGFtcGxlOiBvbmx5IDEgcm93IHdpdGggIkdyZWVubGFuZCIsIHlvdSBjYW4gc3RpbGwgdXNlIGl0LiBJZiBpdCBlbmRzIHVwIGluIHRyYWluLCB0aGVuIFJlZ3VsYXJpemF0aW9uIHdpbGwgZW5zdXJlIHRoYXQgdGhlIGxldmVsIGRvZXNuIGdldCB0b28gbXVjaCBvZiBhIGNvZWZmaWNpZW50IGFuZCBpdCByZWx5IG9uIHRoZSBvdGhlciB2YXJpYWJsZXMgZm9yIHByZWRpY3Rpb24uIElmICJHcmVlbmxhbmQiIGVuZHMgdXAgaW4gdGVzdCwgdGhlbiBpdCBlZmZlY3RpdmVseSBoYXMgYSAwIGNvZWZmaWNpZW50IGFuZCByZWx5cyBvbiB0aGUgb3RoZXIgdmFyaWFibGVzIGZvciBwcmVkaWN0aW9uLiBBc3N1bWluZyB5b3UgcHV0IGFuIGludGVyY2VwdCBpbiB0aGUgbW9kZWwsIGV2ZW4gaWYgZXZlcnkgc2luZ2xlIHZhcmlhYmxlIGlzIGVpdGhlciBtaXNzaW5nIG9yIGhhcyAwIGNvZWZmaWNpZW50IGR1ZSB0byBzbWFsbCBzYW1wbGVzLCB0aGVuIHRoZSBtb2RlbCB3aWxsIHByZWRpY3QgdGhlIGludGVyY2VwdCAod2hpY2ggaXMgcm91Z2hseSB0aGUgb3ZlcmFsbCBhdmVyYWdlKS4gb25lIG1heSBiZSBwbHVzIDUlLCB0aGUgb3RoZXIgbWF5IGJlICAzJSkuIEhvd2V2ZXIgd2hlbiBsb29raW5nIGF0IHJlYWwgZGF0YSwgSSBub3QgcG9zaXRpdmUgb24gaG93IHRvIGRvIGl0LiBNYXliZSB5b3UgcHJlZGljdCBhZnRlciB0aGUgZmFjdCB3aXRoIGxpbmVhciByZWdyZXNzaW9uIG9uIHRob3NlIHR3byBzYW1wbGVzIGFuZCBsb29rIGF0IHRoZSBmZWF0dXJlcyB0byBzZWUgd2hpY2ggb25lIGNoYW5nZWQ/IEl0IGEgbGl0dGxlIG9kZCBiZWNhdXNlIGV2ZW4gdGhvdWdoIHlvdXIgcmVhbCBkZXBlbmRlbnQgdmFyaWFibGUgaW5jcmVhc2VzLCBpdCBwb3NzaWJsZSB0aGF0IHRoZSBwcmVkaWN0aW9ucyBkZWNyZWFzZXMgKGR1ZSB0byBub2lzZSBpbiB0aGUgcHJlZGljdGlvbnMpClRoYXQncyBqdXN0IG92ZXIgYSBkb2xsYXIgcGVyIHNlcnZpbmcgZm9yIHN0dWZmaW5nIHlvdXIgZmFjZSB3aXRoIHBhc3RhIGFuZCBncmF2eS5Xb3JzdCBjYXNlIHNjZW5hcmlvLCBJIG1ha2UgYSB3aG9sZSBiYXRjaCBKVVNUIGZvciBteSBvbmUgZnJpZW5kIHRvIGVhdCBkaW5uZXIgd2l0aCBtZSwgaGlzIHNoYXJlIGlzICQxNywgYW5kIHRoYXQncyBpZiBJJ20gdG9zc2luZyB0aGUgb3RoZXIgOSBtZWFscyBpbnRvIHRoZSB0cmFzaC5BbHRlcm5hdGl2ZWx5LCBpZiBJIHdlcmUgdG8gY29tbWl0IGJsYXNwaGVteSBhbmQgYnV5IGEgamFyIG9mIHNhdWNlIHRoYXQnZCBiZSAkMywgcGx1cyB0aGUgYm94IG9mIHBhc3RhIGZvciAkMiBpcyBvbmx5ICQyLjUwIHBlciBwZXJzb24sIGFuZCBhZ2FpbiB0aHJvd2luZyBvdXQgYW55IGxlZnQgb3ZlciBzYXVjZSBhbmQgcGFzdGEuT1AncyBmcmllbmQgaXMgZm9yIHN1cmUgYSBncmVlZHkgamVyay5HYXJiYWdlR2F0byAgNCBwb2ludHMgIHN1Ym1pdHRlZCA2IGRheXMgYWdvWW91IG1hZGUgYSBwb3N0IHRoZSBvdGhlciBkYXkgYWJvdXQgJ3doeSBzaG91bGQgeW91IGNhcmUgYWJvdXQgcGVvcGxlJyBidXQgYXJlIHNvbWVob3cgc2ljayBvZiBwZW9wbGUgbm90IGNhcmluZyBhYm91dCB5b3UgKGluIHRoZSBzZW5zZSB0aGF0IHRoZXkgYXJlbid0ICJsaXN0ZW5pbmciIHRvIHlvdSkgP1RoZWlyIGRpc2JlbGllZiBpbiB5b3UgaXMgcHJvYmFibHkgZHVlIHRvIHlvdSBzYXlpbmcgImhleSBwZW9wbGUgYXJlIHNheWluZyB0aGVzZSBvYnZpb3VzIHRoaW5ncyBhcmUgY2hpbGQgYWJ1c2UuIApUaGUgc2FuZCBoZWxwcyB0aGUgZmxvd2VyIHN0YXkgc3R1cmR5IGFuZCBrZWVwIGJhbGFuY2UuIApJbmNyZWRpYmx5ZmlzaHkgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvClNlZSBhYm92ZTogS2lrdW1hc2FtdW5lIHRocm91Z2ggU3RyYXRpYSBMRyBnbyBoZXJlCk5vdGUgSSBhbSBwcm8gY2hvaWNlIGFuZCBJIGJlbGlldmUgaHVtYW5zIG93biB0aGVpciBib2R5OiB0aGUgU3RhdGUgY2Fubm90IGZvcmNlIGEgd29tYW4gdG8gaGFyYm9yIGEgZm9ldHVzIGluIGhlciB3b21iLCBhcyBpdCBjYW5ub3QgZm9yY2VmdWxseSBpbmplY3QgYW55dGhpbmcgaW50byBoZXIgY2lyY3VsYXRvcnkgc3lzdGVtLiAKIkl0J3Mgb25lIG9mIHRob3NlIHF1ZXN0aW9ucyB0aGF0IGNvdWxkIGZpbmQgaXRzIHdheSBvbnRvIGEgbGF3IHNjaG9vbCBleGFtIGJlY2F1c2UgaXQgaXMgY29tcGFyYXRpdmVseSBuZXcgdGVycml0b3J5LCIgWml0dHJhaW4gc2FpZC4KSm9uIExvdWNrczogQW4gb2xkIGhvc3Qgb2YgdGhlIExSIHBvZGNhc3QsIGFuZCBub3cgaG9zdCBvZiB0aGUgQ29uc3RydWN0ZWQgUmVzb3VyY2VzIHBvZGNhc3QuIEEgZm9ybWVyIFIgZW1wbG95ZWUgYXQgV290QywgaGUgaGFzIGV4cGVyaWVuY2Ugd2l0aCBib3RoIGRldmVsb3BtZW50IGFuZCBwbGF5IChib3RoIGNvbnN0cnVjdGVkIGFuZCBsaW1pdGVkKS4gCllvdSBnb3QgbWUuIE9ubHkgcmVhc29uIEkgY29waWVkIE9kZCBQYWxhZGluIHdhcyBzbyBJIGNvdWxkIGZlZWwgZ29vZCBhYm91dCB3aW5uaW5nLiBJIHVzZSBjYXN1YWwgYXMgYSBzdG9tcGluZyBncm91bmQgc28gSSBjYW4gc3F1aXNoIG5vb2JzIGxpa2UgeW91LCB0YXN0ZSB5b3VyIHJlZGRpdCB0ZWFycywgYW5kIGNvbXBsZXRlIG15IHF1ZXN0cyBzdXBlciBkdXBlciBmYXN0LgpKdXN0IGxpa2UgeW91LCBpdCBmbGlwcGVkIGluIGEgc3BsaXQgc2Vjb25kLiAKQ2FuYWRpYW5LYWlqdSB1CkluIHRoZSA0MDAgYmxvY2sgb2YgVmljdG9yaWEgU3QuIFRvIG5vb24gaW4gdGhlIDIwMCBibG9jayBvZiBTdC4gUGF1bCBTdC4gCldoZW4gSSB3YXMgZGF0aW5nIG15IHdpZmUsIEkgd2FzIGN1dHRpbmcgZG93biBhIDQwZnQgdHJlZS4gSSBuZWVkZWQgc29tZW9uZSB0byBwdWxsIGl0IGF3YXkgZnJvbSBteSBob3VzZSB3aGlsZSBJIG1hZGUgdGhlIGZpbmFsIGN1dCwgSSBjb3VsZG4gZG8gaXQgbXlzZWxmLiAKIkkgdGhpbmsgMyAyIGlzIGEgcHJldHR5IHRydWUgcmVmbGVjdGlvbiBvZiBib3RoIHNpZGVzLCIgV2FybmUgdG9sZCBDcmljaW5mby4gIkkgZG9uJ3QgdGhpbmsgdGhhdCBlaXRoZXIgdGVhbSwgRW5nbGFuZCBvciBBdXN0cmFsaWEsIGlzIGRvbWluYW50IHJpZ2h0IG5vdy4gSW4geWVhcnMgZ29uZSBieSwgeW91IHVzZWQgdG8gdGhpbmsgQXVzdHJhbGlhIHdvdWxkIHdpbiwgYnV0IHRoYXQgRW5nbGFuZCBtaWdodCBoYXZlIGEgY2hhbmNlIGlmIHRoZXkgcGxheWVkIHJlYWxseSB3ZWxsLiBOb3cgeW91IHRoaW5rIHRoYXQgRW5nbGFuZCBjYW4gd2luLCBidXQgYm90aCBzaWRlcyBhcmUgcmVhbGx5IGV2ZW4uIEFuZCB0aGF0J3MgdGhlIGNhc2UgaW4gd29ybGQgY3JpY2tldC4gVGhlIHRvcCB0aHJlZSBvciBmb3VyIHNpZGVzIGFyZSBhbGwgdmVyeSBldmVuLiIKSXQncyB5b3VyIHJlYWxpdHkuIEl0J3MgcmVhbCB0byB5b3UsIGJ1dCBpdCBkb2Vzbid0IG1ha2Ugc2Vuc2UgdG8gb3RoZXIgcGVvcGxlLiBUaGF0J3MgbXkgbGl0bXVzIHRlc3QgZm9yIHdoZW4gdGhpbmdzIGdvIGF3cnkuCldoZW4gSSBjYXJlZnVsbHkgcmV2aWV3ZWQgaGVyIHdlYnNpdGUsIEkgd2FzIHRha2VuIGJ5IG5vdCBvbmx5IGhlciBiZWF1dHksIGJ1dCBvZiBoZXIga25vd2xlZGdlIGFuZCBleHBlcmllbmNlLiBEciBSaWxleSBnaXZlcyB5b3UgYSB2ZXJ5IGNsZWFyIHVuZGVyc3RhbmRpbmcgb2YgdGhlIHR5cGUgb2Ygc2Vzc2lvbiBzaGUgb2ZmZXJzLiBJIGFtIGEgYmlnIGZhbiBvZiB0aGUgbWFsZSBHIHNwb3QgbWFzc2FnZSBvciBwcm9zdGF0ZSBtYXNzYWdlLiAKMjI3IDI3IGV0IDIyMiAyOSBub3V2ZWF1IGNvZGUgcG5hbCksIGNhcyBwYXIgZXhlbXBsZSBkJ3VuZSBhZ3Jlc3Npb24gZmFpdGUgcGFyIHVuIHBhcmVudCwgdW4gYmVhdSBwYXJlbnQgb3UgdW4gcHJvZmVzc2V1ci4gCkkgYW0gbm90IDEwMCUgc3VyZSBhYm91dCB0aGF0IGJlY2F1c2UgSSBjYW4gbG9vayBpbnNpZGUgdGhlaXIgYnJhaW5zLCBidXQgSSB0aGluayBpdCBtYWtlcyBzZW5zZS4uIApUaGF0IGJlaW5nIHNhaWQsIEkgYSB2ZXJ5IGdyZWVkeSBwbGF5ZXIuIApCb3N1bjEyMCB1CkVzY29ydHMgaW4gTWFuaWxhCiJNeSBiaWdnZXN0IGRpc2FwcG9pbnRtZW50PyBMZWF2aW5nIHRoZSBNZXRzIHRoZSBmaXJzdCB0aW1lIGFuZCB0aGUgZGlmZmljdWx0aWVzIEkgaGFkIHdpdGggdGhlIHNhbWUgcGVvcGxlIHRoYXQgbGVkIHVwIHRvIGl0LCIgU2VhdmVyIHRvbGQgVGhlIEFzc29jaWF0ZWQgUHJlc3MgYWhlYWQgb2YgaGlzIEhhbGwgaW5kdWN0aW9uIGluIDE5OTIuICJCdXQgZXZlbiB0aGF0IEkgbG9vayBiYWNrIGF0IGluIGEgcG9zaXRpdmUgd2F5IG5vdy4gSXQgZ2F2ZSBtZSB0aGUgb3Bwb3J0dW5pdHkgdG8gd29yayBpbiBkaWZmZXJlbnQgYXJlYXMgb2YgdGhlIGNvdW50cnkuIgpUdXJuYmFja3RpbWUyICAzIHBvaW50cyAgc3VibWl0dGVkIDQgZGF5cyBhZ28KSW4gMTg5OSwgMTkwMSwgYW5kIDE5MDMsIENoYXJsZXMgRnJ5IGhpdCBhIGNlbnR1cnkgZm9yIHRoZSBHZW50bGVtZW4gYWdhaW5zdCB0aGUgUGxheWVycyBhdCBMb3JkJ3MsIGhpcyAyMzIgbm90IG91dCBpbiAxOTAzIHJlbWFpbmluZyB0aGUgaGlnaGVzdCBpbmRpdmlkdWFsIHNjb3JlIGZvciB0aGUgR2VudGxlbWVuIGF0IEhlYWRxdWFydGVycy4uIApNb3JlIG9mdGVuIHRoYW4gbm90LCB0aGVzZSBhYnNvbHV0ZWx5IGZyZWVvbmxpbmUgcG9rZXIgZ2FtZXNoYXZlIGEgbGFyZ2UgY3Jvd2Qgb2YgcGVvcGxlIHBhcnRpY2lwYXRpbmcgYnV0IHdpdGggYSBsZXNzIHRoYW4gYWJ1bmRhbnQgcHJpemUgcG9vbC4gClRydWF4ZSB0aGVuIG91c3RlZCBoaXMgY28gQ0VPIE5pY29sYSBLaWxuZXIgYW5kIHRoZSBicmFuZCdzIGNoaWVmIGZpbmFuY2lhbCBvZmZpY2VyIFN0ZXBoZW4gS2FwbGFuIHN0ZXBwZWQgZG93bi4KQSByZW1vdmFsIG9mIGEgdHJlZSBvciBncm91cCBvZiBwbGFudGluZ3MgbWF5IGFmZmVjdCB0aGUgYXBwZWFyYW5jZSwgYXMgd2VsbCBhcyB0aGUgdXNlIG9mIHRoZSBwcm9wZXJ0eSwgYW5kIG1heSBhZmZlY3QgcHJpdmFjeS4gVGhlIGluc3RhbGxhdGlvbiBvZiBzdHJ1Y3R1cmVzIHN1Y2ggYXMgZ2FyZGVuIHNoZWRzIG9yIGxhbmRzY2FwaW5nIGZlYXR1cmVzIG1heSBhbHNvIGJlIGEgc2lnbmlmaWNhbnQgY2hhbmdlIGlmIHRoZXkgYWZmZWN0IHVzZSBvciBlbmpveW1lbnQgb2YgdGhlIGNvbW1vbiBwcm9wZXJ0eSBvciBhZGphY2VudCBzdHJhdGEgbG90cy4gCklmIHlvdSB1c2UgdGhlIFlOQUIgdG9vbCBraXQgKGNocm9tZSBleHRlbnNpb24pIHlvdSBjYW4gdmlldyBBb00gYW5kIGRheXMgb2YgYnVmZmVyaW5nIHdoaWNoIHdhcyB0aGUgd2F5IGl0IHdhcyBjYWxjdWxhdGVkIGluIG9sZGVyIHZlcnNpb25zIG9mIFlOQUIuIApIb3dldmVyLCB0aGlzIGlzIGdldHRpbmcgbGVzcyBhbmQgbGVzcyBjb21tb24gdGhlc2UgZGF5cy4gCkZvciBleGFtcGxlLCBhIGZvb2QgYmFzZWQgcHJvZHVjdCB0aGF0IGNvbnRhaW5zIDUwIG1nIG9mIGNhbGNpdW0gb3Igdml0YW1pbiBDIHdvdWxkIG5lZWQgdG8gYmUgZG9zZWQgYXQgMTAgcGlsbHMgYSBkYXkgdG8gZ2V0IDUwMCBtZyBwcm92aWRlZCBieSBhIHR5cGljYWwgdml0YW1pbiBDIG9yIGNhbGNpdW0gc3VwcGxlbWVudC4uIApTb21ldGltZXMgc2hlIGdldHMgYSBsaXR0bGUgZW50aHVzaWFzdGljIGFuZCB3ZSBoYXZlIHRvIHJlbWluZCBoZXIgdG8gImJlIHN3ZWV0IiBidXQgZ2VuZXJhbGx5IHNoZSBqdXN0IG1vZGVscyBvdXIgYmVoYXZpb3IuIApPbmx5IG5vdyBhbGwgdGhlaXIgY2FyZHNhcmUgc2hvd24uIEdvb2QgbHVjayBpdCB3b3JrcyBmb3IgbWUuIChGdWxsIEFuc3dlcikuIApBbmQgc3RhcnQgZWFybHkhIEkgZGVmIHJlY29tbWVuZCBzdGFydGluZyB0byBpbnRlcm4gYXMgYSBzb3Bob21vcmUuSXQgdmVyeSBlYXN5IHRvIGRvdWJsZSBtYWpvciBpbiB0aGUgYnVzaW5lc3Mgc2Nob29sIGJjIHlvdXIgY29yZSBidXNpbmVzcyBjbGFzc2VzIGFyZSB0aGUgc2FtZS4gSSBvbmx5IGFkZGVkIG9uIGFib3V0IGFuIGV4dHJhIHNlbWVzdGVyIGJ5IGRvdWJsZSBtYWpvcmluZyB3aXRoIGEgbWlub3IgKGJ1c2luZXNzIHNjaG9vbCByZXF1aXJlZCBhIG1pbm9yIHdoZW4gSSB3YXMgdGhlcmUgICBncmFkdWF0ZWQgaW4gRGVjIDIwMTAuKUJlIHdhcm5lZCAgIHRoZSBmaW5hbmNlIGRlcHQgaXMgaW50ZW5zZS4gTWFya2V0aW5nIGlzIHZlcnkgaW50ZXJlc3RpbmcsIGJ1dCBhIGNha2Ugd2Fsay5JZiB5b3UgbGlrZSB0cmVuZHMgYW5kIG1hdGggSSB0aGluayBmaW5hbmNlIGlzIGRlZiBhIGdvb2QgZml0IGJ1dCBhbHNvIGxvb2sgaW50byBlY29uLiAKSSdtIHN1cmUsIG5vIG1hdHRlciB3aGF0IHlvdXIgZ2VuZXRpY3MsIGV2ZXJ5b25lIGNhbiBiZSBvdXQgb2Ygc2hhcGUuIApBIFd5bm4gUmVzb3J0cyBzcG9rZXNwZXJzb24gcmVpdGVyYXRlZCwgIlRoZSBmdWxsIGJvYXJkIGhhcyBvZmZlcmVkIHRvIG1lZXQgRWxhaW5lIFd5bm4gb24gV2VkbmVzZGF5LCBNYXkgMTYsIiB3aGljaCB3b3VsZCBiZSBhZnRlciB0aGUgbmV3IGJvYXJkIG1lbWJlcnMgaGF2ZSBtZXQgdGhlaXIgZmVsbG93IGJvYXJkIG1lbWJlcnMuClNJRkUgaXMgYSBnbG9iYWwgb3JnYW5pemF0aW9uIHRoYXQgaXMgbGl0ZXJhbGx5IGNoYW5naW5nIHRoZSB3b3JsZCB0aHJvdWdoIGhpZ2hseSBkZWRpY2F0ZWQgc3R1ZGVudCB0ZWFtcyBvbiBtb3JlIHRoYW4gMSw4MDAgY29sbGVnZSBhbmQgdW5pdmVyc2l0eSBjYW1wdXNlcyBpbiBvdmVyIDQwIGNvdW50cmllcy4gCkhhbmQgMTogQWdhaW5zdCB0aGlzIHBsYXllciB0eXBlIHdlIHdheSBhaGVhZCBvZiBoaXMgcmFuZ2UgYW5kIHNob3VsZCA0Yi4gU2l6aW5nIHNob3VsZCBiZSBsYXJnZSB0byByZWR1Y2UgeW91ciBwb3NpdGlvbmFsIGRpc2FkdmFudGFnZSwgYW5kIGJlY2F1c2Ugd2UgcmVhbGx5IHNob3VsZG4gbWluZCBhIGZvbGQsIHdoYXRldmVyIGhhbmQgaGUgaGFzIGxpa2VseSBoYWQgYSBkZWNlbnQgYW1vdW50IG9mIGVxdWl0eSBhZ2FpbnN0IHVzLiBCaWdnZXIgNGIgYWxzbyBtYWtlcyBmb3IgYSBtb3JlIG5hdHVyYWwgc2l6aW5nIGZvciBmbG9wIHNob3Zlcy4gSSA0YiB0byA0MDAuIFNuYXAgY2FsbGluZyA1IGJldC4gSWYgY2FsbGVkLCBzaG92aW5nIG1vc3QgZmxvcHMgdG8gZGVueSBoaXMgZXF1aXR5L2dldCBhIGJhZCBjYWxsIGZyb20gQUovQVEuIElmIHdlIGZsb3AgYW4gQSBvciBLLCBjaGVja2luZyB0byBpbmR1Y2UuIEV2ZW4gaWYgaGUgY2FsbHMgb3VyIHNob3ZlIGFuZCBoYXMgYSBwYWlyIHdlIHVzdWFsbHkgaGF2ZSAyNSUgZXF1aXR5IHdoaWNoIGlzIG5vdCB0ZXJyaWJsZS4gQnV0IGV4cGVjdGluZyB0byBiZSBhaGVhZCBzb21ldGltZXMuIEFzIHBsYXllZCwgYmV0IGNhbGxpbmcgYXJvdW5kIDEvMiBwb3QuClRoZSByZWZvcm1zIGFsc28gaW5jbHVkZSBpbmNyZWFzZWQgcGVuYWx0aWVzIGZvciB3YWdlcmluZywgbWFraW5nIG9wZXJhdG9ycyBwZXJzb25hbGx5IGxpYWJsZSBpZiB0aGV5IG9mZmVyIHVubGF3ZnVsIGluZHVjZW1lbnRzIGFuZCB3aWxsIGJvbHN0ZXIgbWVhc3VyZXMgdG8gYWRkcmVzcyBwcm9ibGVtIGdhbWJsaW5nIGFjcm9zcyB0aGUgc3RhdGUuLiAKTWFuY2hlIFNwaWVsZXIgc3BpZWxlbiBiZWkgZWluZW0gU3BpZWwsIGJlaSBkZW0gS25uZW4gZ2VmcmFndCBpc3QsIGVpbmZhY2ggbmljaHQgY2xldmVyIGdlbnVnLiAKUmVhZCB0aGUgRW50aXJlIEFydGljbGVCZWZvcmUgRW50ZXJpbmcgdGhlIEJlc3QgUG9rZXIgU2l0ZXMsIExlYXJuIHRoZSBBcnQgb2YgUG9rZXIgQmx1ZmZpbmchClRoaXMgaXMgZ29pbmcgdG8gY29zdCB5b3UuIEJ1dCBpdCB3aWxsIGNvc3QgbGVzcyB0aGFuIGEgbGF3c3VpdC4gWW91ciBuZWlnaGJvdXJzIGhhdmUgYmVlbiBncmVhdCB1cCB1bnRpbCBub3cuIERvbiBjb3VudCBvbiB0aGlzIGxhc3RpbmcuCkVhcmxpZXIgdGhpcyBtb250aCwgdGhlIEFOQSByZXZlYWxlZCB0aGF0IHRoZSBGQkkgaGFkIHJlY2VudGx5IGNvbnRhY3RlZCBSZWVkIFNtaXRoIGFib3V0IHRoZSBpbnZlc3RpZ2F0aW9uIGluIGF0dGVtcHQgdG8gZ2V0IGNvb3BlcmF0aW9uIGZyb20gQU5BIG1lbWJlcnMsIHdoaWNoIGluY2x1ZGUgc29tZSBvZiB0aGUgbGFyZ2VzdCBtZWRpYSBzcGVuZGVycyBpbiB0aGUgbmF0aW9uLiAKSWYgSSBzcGVuZCBtb25leSBvbiBpdCwgSSBtb3JlIGxpa2VseSB0byBrZWVwIHBsYXlpbmcsIGlmIEkga2VlcCBwbGF5aW5nLCBJIGJlIG1vcmUgbGlrZWx5IHRvIHNwZW5kIG1vcmUgbW9uZXkuLiAKRm9yIHN1cmUgKEkgaGFkIHJlc2VydmF0aW9ucyBhYm91dCBwb3N0aW5nIGl0KS4gSSBoYWQgYSBjb252ZXJzYXRpb24gd2l0aCBzb21lYm9keSBhbmQgaXQgcmVhbGx5IHVwc2V0IG1lLCBzaGUgY29uZmVzc2VkLiB3YXMgYWN0dWFsbHkgaW4gdGhlIHN0dWRpbyB0aGF0IGRheSBhbmQgSSBjb3VsZG4gZm9jdXMgYmVjYXVzZSBJIHdhcyBzbyB1cHNldCwgc28gSSBtYWRlIHRoZSB2aWRlbywgYnV0IEkgZGVjaWRlZCBub3QgdG8gcG9zdCBpdCBiZWNhdXNlIEkgd2FzIHNjYXJlZCBpdCB3b3VsZCBoYXZlIGJhY2tsYXNoLiBCdXQgd2hlbiBJIHdva2UgdXAgdGhlIG5leHQgZGF5LCBJIHN0aWxsIGZlbHQgcmVhbGx5IGJ1bW1lZCBhYm91dCB0aGlzIGFuZCB3YXMgbGlrZSwgaGF2ZSB0byBwb3N0IHRoaXMgdmlkZW8uIEkgYmVlbiBzZW50IHRoaW5ncyAoYmVmb3JlKSBhbmQgbm9uZSBvZiBpdCBmaXQsIHdoaWNoIHdhcyBhbm5veWluZy4KUmVtb3ZlIHNvY2lhbCBtZWRpYSBmcm9tIHlvdXIgcGhvbmUuIE9ubHkgYWxsb3cgeW91cnNlbGYgdG8gdXNlIGl0IG9uIHRoZSBkZXNrdG9wIG9yIHRhYmxldC4gSWYgeW91IGNhbm5vdCBkbyB0aGF0IChhbmQgb2YgY291cnNlIHlvdSBjYW4pLCB0aGVuIGF0IHRoZSB2ZXJ5IGxlYXN0IGJ1cnkgdGhlIGljb24gc29tZXBsYWNlIHNvIHRoYXQgaXQgcmVxdWlyZXMgZWZmb3J0IHRvIGZpbmQuIApIYXZpbmcgdGhlIG9wdGlvbiB0byBidXkgdGhlIHN0b2NrIGF0IGEgY2VydGFpbiBwcmljZSBpbiB0aGUgZnV0dXJlIGlzIGEgdHJpdmlhbCBkaWZmZXJlbmNlIHRoYXQgZGlzdHJhY3RzIGZyb20gbXkgb2J2aW91cyBwb2ludC4gSSB3b24gYWxsb3cgeW91IHRvIHdhc3RlIGFueSBtb3JlIG9mIG15IHRpbWUuIApJbnRyb3ZlcnRzIGNhbiBkZWZpbml0ZWx5IGJlIHN1Y2Nlc3NmdWwgaW4gc2FsZXMsIGJ1dCB5b3UgYWxzbyBuZWVkIHRvIHVuZGVyc3RhbmQgdGhhdCBwYXJ0cyBvZiBpdCB3aWxsIGJlIGV4aGF1c3RpbmcgZm9yIHlvdS4gVGhlIG1vc3Qgc3VjY2Vzc2Z1bCBzYWxlcyBwZW9wbGUgSSBrbm93IGRvbiBldmVyeSByZWFsbHkgc2h1dCBvZmYuIApUaGVzZSBhcmUgYWxsIHByb3BlciByZWFzb25zIGJ1dCBub3QgYmVjYXVzZSBJIGFtIGdvaW5nIGJhZGx5KHNpYyksIEknbSBnZXR0aW5nIGJhZCBjYXJkcyB0aGF0IGRheSwgYmVjYXVzZSBJJ3ZlIGxvc3QgYSBjZXJ0YWluIGFtb3VudCwgb3IgYmVjYXVzZSBJJ3ZlIHdvbiBhIGNlcnRhaW4gYW1vdW50LiAKVGhlIGJ1cyBkcml2ZXIgY2FsbGVkIHRoZSBwb2xpY2UgYW5kIHRoZSBkdWRlIGdvdCBhcnJlc3RlZCBmb3IgcHVibGljIGludG94aWNhdGlvbiBhbmQgSSB0aGluayBwb3NzZXNzaW9uLiBUaGVuIHdlIGhhZCB0byB3YWl0IGFyb3VuZCBmb3IgYSBuZXcgYnVzLiAKV2hlbiB0aGUgZ2FtYmxpbmcgYnVnIGRvbmUgZ290Y2hhCkNlIG1vdCBhdXJvaXQgc3VmZmkgc2FucyBjZSB0b3JyZW50IGQnaW5qdXJlcy4gCkkgbm8gbG9uZ2VyIGNhcmUgYWJvdXQgaXQsIGFzayBhYm91dCBpdCBvciBkaXZ1bGdlIG1pbmUuIApUcnVtcCBoYXMgcmVwZWF0ZWRseSB1cmdlZCBsYXdtYWtlcnMgbm90IHRvIHNhY3JpZmljZSB0aGUgd2VhcG9ucyBkZWFsLiAiSSBkb24gd2FudCB0byBodXJ0IGpvYnMuIEkgZG9uIHdhbnQgdG8gbG9zZSBhbiBvcmRlciBsaWtlIHRoYXQsIiBUcnVtcCBzYWlkIGluIGFuIGludGVydmlldyB3aXRoICI2MCBNaW51dGVzLiIgSGUgZnVydGhlciBhcmd1ZWQgdGhhdCBTYXVkaSBBcmFiaWEgd291bGQgdHVybiB0byBBbWVyaWNhIHJpdmFscywgUnVzc2lhIGFuZCBDaGluYSwgd2hvIHdvdWxkIGJlIG1vcmUgdGhhbiBoYXBweSB0byBmdWxmaWxsIGl0cyBkZWZlbnNlIG5lZWRzLi4gCkVzdGFibGlzaGluZyB0aGUgbm9uIHByb2ZpdCwgdGhleSBhbHNvIGNyZWF0ZWQgYSBob2NrZXkgbmV0d29yayB3aXRoIG1vcmUgdGhhbiAxNTAgcGxheWVycyBhcyB3ZWxsIGFzIHRlYW1zIGFuZCBsZWFndWVzLiAKV2Ugc2hhcmVkIHN0b3JpZXMsIGZvb2QgYW5kIGV4cGVyaWVuY2VzLiAKOTYgcGxheWVycyBoYXZlIGFscmVhZHkgcHVuY2hlZCB0aGVpciB0aWNrZXRzIHRvIHRoZSBldmVudC4gCi4xMC8uMjAgdXAgdG8gNS8xMC4gMTAvMjAgcnVucyB0d2ljZSBhIHdlZWsuIEkgcGVyc29uYWxseSBiZWxpZXZlIGEgbWFqb3JpdHkgb2YgY2x1YnMgd2lsbCBnbyB0aHJvdWdoIHdoYXQgSm9rZXJLaW5neiB3ZW50IHRocm91Z2ggYmVmb3JlIGEgZ29vZCBvd25lciBhbmQgbGVhZGVyIGJ1eXMgdGhlbSBvdXQuIApPdmVyIGEgc2l4IG1vbnRoIHBlcmlvZCBpbiAyMDEyLCBmcm9tIEFwcmlsIHRvIE9jdG9iZXIsIEl2ZXkgcmVwb3J0ZWRseSB3b24gbW9yZSB0aGFuICQyMCBtaWxsaW9uIGZyb20gdHdvIGNhc2lub3MgcGxheWluZyBmb3JtcyBvZiBiYWNjYXJhdC4gCkkgaGF2ZSBkZWNpZGVkIHRvIHNjcmFwIHRoZSB3YXkgSSB3YXMgd3JpdGluZyBteSBBY2tlcm1hbiBMYWtlIG5vdmVsIGFuZCBub3csIEkgaGF2ZSBjcmVhdGVkIGEgbmV3IGNpdHkgaW4gdGhlIFVQIGNhbGxlZCBBY2tlcm1hbiBMYWtlLiBJdCB3aWxsIHN0aWxsIGJlIHRoZSBzYW1lIGJ1dCBJIGFtIGdldHRpbmcgbWFraW5nIG9uZSBsb2NhdGlvbiBhcmVhIGluc3RlYWQgb2Ygc2V2ZXJhbC4gClJhbmdlIHNpdHVhdGlvbnMsIGFuZCBnZXQgc3Ryb25nZXIgYW5kIHN0cm9uZ2VyIGFzIHJhbmdlcyBnZXQgc21hbGxlciBhbmQgc21hbGxlciB0aHJvdWdoIHRoZSBoYW5kLikuIApZb3UgZG9uJ3QgbmVlZCB0byBhbHRlciB5b3Vyc2VsZiB0byBmaW5kIGxvdmUgYW5kIHlvdSBhcmUgZ3JlYXQganVzdCBhcyB5b3UgYXJlLi4gCllvdSBhcmUgc29sZWx5IHJlc3BvbnNpYmxlIGZvciB0aGUgaW5mb3JtYXRpb24gYXNzb2NpYXRlZCB3aXRoIFlvdXIgQWNjb3VudCBhbmQgYW55dGhpbmcgdGhhdCBoYXBwZW5zIHJlbGF0ZWQgdG8gWW91ciBBY2NvdW50LiAKSXQgYSBzdGFuZGFyZCBzaG9waG91c2Ugc2l6ZSB1bml0LiAKQnV0IEpvdWJyYW4gc2FpZCBoZSBmZWx0IHRoYXQgb3duZXJzIGhhdmUgZ3Jvd24gYWZyYWlkIHRvIHNwZWFrIHVwIGFib3V0IHRoZSBzdXNwZW5zaW9ucyBhbmQgdGhlIHBvdGVudGlhbCBuZXcgcmVndWxhdGlvbnMuCllvdSB3aWxsIG5lZWQgdG8gd2FzaCB5b3VyIGhhaXIgZmlyc3QsIHRoZW4gd2hpbGUgc3RpbGwgd2V0LCB5b3Ugd2FudCB0byBzb3J0IG9mIEFmcmljYW4gdGhyZWFkIGl0LCBidXQgeW91IGRvbid0IG5lZWQgdGhyZWFkLCB5b3UgY2FuIHVzZSBzY3J1bmNoaWVzLiBUaGVuIHRha2UgYSBzZWN0aW9uIGF0IGEgdGltZSBhbmQgZ28gYW5kIHBhZGRsZSBicnVzaCBpdCBhbmQgcHV0IHlvdXIgYmxvdyBkcnllciBvbiBtZWRpdW0gb3IgbG93IGhlYXQuIApNb3N0bHkgc28gSSBjb3VsZCBwdWxsIGFsbCB0aGUgZW1haWxzIGNhbGxpbmcgaXQgIm91ciIgdGhpbmcgYW5kIHN0YXRpbmcgaXQgd2FzIGhhbGYgbXkgcHJvamVjdCBhbmQgYWxsIHRoZSByZWNlaXB0cyBzaG93aW5nIG15IEluaXRpYWwgaW52b2x2ZW1lbnQgYW5kIG1ha2Ugc29tZSBtb25leS4KTWVkaXVtIENhcGFjaXRvciBDb250cm9sIENpcmN1aXQgSQpJcyB0aGUgYnJlYWtmYXN0IGF0IEhlbmRlcnNvbiBQYXJrIElubiBzdGlsbCBhZHVsdHMgb25seSBvciBkbyBmYW1pbGllcyBjb21lIG92ZXIgZnJvbSB0aGUgcmVzb3J0IGFsc28/IEFsc28sIGlzIHRoZSBiZWFjaCBhcmVhIHRoYXQgSFBJIHNpdHMgb24gc3RpbGwgYWR1bHRzIG9ubHkgb3IgaXMgaXQgc2hhcmVkIHdpdGggdGhlIHJlc29ydCBndWVzdHM/IFRoYW5rcyEhIUFuc3dlciBmcm9tIGxlZWFubmJ1cnJvd01heSAyMDE4IFJlc29ydCBndWVzdHMgKGtpZHMpIGRvIGhhdmUgYmVhY2ggYWNjZXNzIGF0IHRoZSBJbm4gYnV0IEkgbmV2ZXIgc2F3IGFueS4gClBva2VyIHBsYXllcnMgY2FsbCBpdCBnb2luZyBvbiB0aWx0IHdoZW4gcGxheWVycyBiZWNvbWUgZW1vdGlvbmFsIGFuZCByZWNrbGVzcy4gSSBjb3VsZG4ndCBoYW5kbGUgdGhlIHRpbHQuIApFZCBQYXN0b3IgKEQgQVopLCBhbmQgUmVwLiBUcmVudCBGcmFua3MgKFIgQVopIGxvb2sgb24gaW4gV2FzaGluZ3RvbiwgREMuIFByZXNpZGVudCBPYmFtYSBzaWduZWQgdGhlIGJpbGwgdG8gbmFtZSBhIG5ldyBmZWRlcmFsIGNvdXJ0aG91c2UgaW4gWXVtYSBhZnRlciBmZWRlcmFsIEp1ZGdlIEpvaG4gTS4gClJvbWluaW9ucyAgIDI3IHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ28KTG9zcyBjYW4gYmUgY2FycmllZCBiYWNrIHVwIHRvIHRocmVlIHllYXJzLCBvciBjYXJyaWVkIGZvcndhcmQgZm9yIHVwIHRvIDIwIHllYXJzIHdoaWNoIG9mZmVycyBzb21lIGJlbmVmaXRzIGluIG1pbmltaXppbmcgeW91ciB0YXggYmlsbHMuIApJIHRoaW5rIHRoYXQgaGVscGVkLiBCdXQgYWxzbywgb25lIG9mIHRoZSB0aGluZ3Mgd2UgZXhwbGFpbmVkIHRvIHRoZSBwZW9wbGUgd2hvIHBhcnRpY2lwYXRlZCB3YXMgdGhhdCB0aGlzIGlzIG5vdCBqdXN0IGJsaW5kbHkgdGVsbGluZyB5b3VyIHN0b3J5LiBUaGlzIGlzIG5vdCBwZXJmb3JtaW5nIHlvdXIgcGFpbiBmb3Igb3RoZXIgcGVvcGxlLiBUaGlzIGlzIHRhbGtpbmcgYWJvdXQgd2hlcmUgdGhpcyBtb3ZlbWVudCwgYW5kIHdoZXJlIHlvdXIgd29yayBhcm91bmQgaGVhbGluZywgaGFzIGJyb3VnaHQgeW91LgpTYXkgeW91IGZsaXBwZWQgYSBjb2luIG9uY2UsIGFuZCBpdCBjb21lcyB1cCBoZWFkcy4gCkpvaG4ncyB3b3J0IG9pbCBhbmQgb25lIGN1cCBvZiBjb2xkIHdhdGVyLiBTdGlyIHRob3JvdWdobHkuIEdldCBhIHNvZnQgY2xlYW4gc3BvbmdlIG9yIGNsb3RoLCBzb2FrIGl0IGluIHRoZSBtaXh0dXJlIHRoZW4gd3JpbmcgaXQgb3V0LiAKVGhlIENoYW1wYWduZSBZZWFzdCBpc24gcmVhbGx5IG5lY2Vzc2FyeSBlaXRoZXIsIHlvdSBhcmUgbm90IGFnaW5nIHlvdXIgYmVlciBmb3IgbW9yZSB0aGFuIGEgeWVhciwgeW91IHdpbGwgaGF2ZSBlbm91Z2ggeWVhc3QgaW4gc3VzcGVuc2lvbiB0byBjYXJib25hdGUgcXVpY2tseS4uIApTdGFtcCwgUmVzZWFyY2hlcjUuIApUaGF0IG1lYW5zIHRoYXQgZXZlbiBpZiBpdCB3b3VsZG4gZWZmZWN0IHRoZSBhZXN0aGV0aWNzIG9mIHRoZSBidWlsZGluZyBvciBuZWlnaGJvcmhvb2QgYXQgYWxsIChpdCBjb3VsZCBldmVuIGJlIGRlc2lnbmVkIHRvIGZha2UgbG9va2luZyBsaWtlIGEgc2luZ2xlIGZhbWlseSBob21lIGZyb20gdGhlIGV4dGVyaW9yKSwgZGV2ZWxvcGVycyBhcmVuIGFsbG93ZWQgdG8gYnVpbGQgc21hbGxlciB1bml0cyB0aGF0IHdvdWxkIGJlIG1vcmUgYWZmb3JkYWJsZS4gRXhwbGFpbiB3aHkgdGhlIGdvdmVybm1lbnQgc2hvdWxkIGJlIGluIHRoZSBidXNpbmVzcyBvZiBwcmV2ZW50aW5nIHByaXZhdGUgcHJvcGVydHkgb3duZXJzIGZyb20gYnVpbGRpbmcgd2hhdGV2ZXIgdGhleSB3YW50IG9uIHRoZWlyIG93biBwcm9wZXJ0eSwgZXNwZWNpYWxseSB3aGVuIGl0IHByZXNlbnRzIHplcm8gY2hhbmdlcyB0byB0aGUgYWVzdGhldGljIGxhbmRzY2FwZSBvZiB0aGUgbmVpZ2hib3Job29kPyBXaHkgd291bGQgeW91IHN1cHBvcnQgc3VjaCBhbnRpIGNhcGl0YWxpc3QgYW5kIGFudGkgbGliZXJ0eSBwb2xpY2llcz8gSSB3aWxsIHRlbGwgeW91IHdoeSB0aGV5IGhhdmUgaW1wbGVtZW50ZWQgdGhlc2UgcG9saWNpZXMgaGlzdG9yaWNhbGx5OiB0byBwcmV2ZW50IHBvb3JlciBwZW9wbGUgd2hvIHdvdWxkbiBiZSBhYmxlIHRvIGFmZm9yZCB0aGUgd2hvbGUgMywyMDAgc3EgZnQgaG9tZSBmcm9tIGxpdmluZyBpbiB0aGVpciBuZWlnaGJvcmhvb2RzLCB3aGljaCBpcyBsaXRlcmFsbHkgdGhlIGRlZmluaXRpb24gb2YgZGlzY3JpbWluYXRpb24uLiAKVGhleSBib3RoIGxvb2tlZCBhbmQgbGl2ZWQgbGlrZSBnaG9zdHMsIGFuZCBzZWVtZWQgaGFsZiBtYWQsIHZlcnkgY2l2aWwgYW5kIHByb3BlciBidXQgb2ZmLiBBcyBhbiA4IHllYXIgb2xkLCBJIHdhcyB0ZXJyaWZpZWQsIGVzcGVjaWFsbHkgd2hlbiBvbmUgb2YgdGhlbSBqb2tlZCBhbmQgc2FpZCAiWW91IHNob3VsZCBsZWF2ZSBoaW0gaGVyZS4gCkl0IHdhcyB3cm9uZy4gVGhyZWUgZm9yd2FyZCBkZWZlbnNpdmVzIGZvbGxvd2VkLCB0aGVuIGEgc2luZ2xlIG9mZiBTaGFtaSB0byBtb3ZlIHRvIDk5LCBhbmQgdGhyZWUgbW9yZSBibG9ja3MuLiAKT3ZlcmFsbCwgdG91cmlzdHMgYXJlIGdlbmVyYWxseSBuaWNlIGFuZCB1bmRlcnN0YW5kaW5nLCBldmVuIGlmIHNvbWV0aW1lcyB0aGVyZSBhcmUgcGVvcGxlIHdobyBhcmUgaW50cnVzaXZlIGFuZCBkaXNyZXNwZWN0ZnVsLiIgTG9jYWxzIGFyZSBhcHBlYWxpbmcgdG8gUGFyaXMncyB0b3duIGhhbGwgdG8gY2xvc2Ugb2ZmIHRoZSByb2FkIHRvIHRoZSBwdWJsaWMgYXQgdGhlIHdlZWtlbmRzIGFuZCBpbiB0aGUgZXZlbmluZ3MgYWZ0ZXIgYSBwYXJ0aWN1bGFyIHRpbWUuIApPdXIgaW50ZW50aW9ucyBhcmUgbm90IHRvIGJlIHVuY2xlYXIgYWJvdXQgdGhpcyBwb2xpY3ksIGFuZCB3ZSB1bmRlcnN0YW5kIHRoYXQgaXQgY2FuIGJlIGZydXN0cmF0aW5nIHdoZW4gaXQgc2VlbXMgdGhhdCB3YXkuIApEZXBlbmRpbmcgb24gdGhlIGFtb3VudCB5b3UnbGwgZWl0aGVyIGJlIHNlbnQgdG8gY29sbGVjdGlvbnMsIGlzc3VlZCBhIDEwOTkgQyBhbmQgbXVzdCByZXBvcnQgYXMgaW5jb21lIHRvIHRoZSBJUlMsIG9yLiAKUHAuIDMxNyAzMzhHdW5zbGluZ2VycywgcG9rZXIgcGxheWVycywgYW5kIGNoaWNrZW5zIDE6IERlY2lzaW9uIG1ha2luZyB1bmRlciBwaHlzaWNhbCBwZXJmb3JtYW5jZSBwcmVzc3VyZSBpbiBlbGl0ZSBhdGhsZXRlc1BhcmtpbiwgQi4sIFdhcnJpbmVyLCBLLiBBbmQgV2Fsc2gsIFYuIApJbiA5NzgsIEVkd2FyZCB2aXNpdGVkIGhpcyBicm90aGVyIHRoZWxyZWQgYW5kIHRoZWxyZWQncyBtb3RoZXIgbGZ0aHJ5dGgsIEVkd2FyZCdzIHN0ZXAgbW90aGVyLCBhdCB0aGVpciBob21lIGluIENvcmZlLiBXaGlsc3QgdGhlcmUsIGhlIHdhcyBtdXJkZXJlZCwgcHJlc3VtYWJseSBieSBsZnRocnl0aCwgYW5kIHRoZWxyZWQgYmVjYW1lIEtpbmcgYXQgdGhlIGFnZSBvZiBhYm91dCB0ZW4uIApIZWxwIGhlciBlYXQgbG90cyBvZiBkaWZmZXJlbnQgZm9vZHMuIEdvb2QgY2hvaWNlcyBpbmNsdWRlIHdob2xlIGdyYWluIGJyZWFkcywgY2VyZWFsLCByaWNlIGFuZCBwYXN0YTsgc2tpbSBvciBsb3cgZmF0IG1pbGssIGNoZWVzZSBhbmQgeW9ndXJ0OyBsb3cgZmF0IG1lYXQgYW5kIGNoaWNrZW47IGFuZCBsb3RzIG9mIGZydWl0cyBhbmQgdmVnZXRhYmxlcy4gSWYgeW91IHNtb2tlLCB5b3UgYXJlIGJsb3dpbmcgb3V0IHNlY29uZGhhbmQgc21va2UuIApMZWFybiBtb3JlIGFib3V0IExhcyBWZWdhcyBDYXNpbm8gUG9rZXIgQ2hpcHMgYW5kIHNlZSBpZiB0aGV5IGFyZSByaWdodCBmb3IgeW91IGF0IHRoaXMgdGltZS4gUGxlYXNlIHJlYWQgb3VyIHVuYmlhc2VkIHJldmlldyBvZiBMYXMgVmVnYXMgQ2FzaW5vIFBva2VyIENoaXBzIGFuZCBtYWtlIHlvdXIgZmluYWwgZGVjaXNpb24uCkVzIGdpYnQgYmVyaGF1cHQga2VpbmVuIEdydW5kIHp1IGphbW1lcm4sIGRhIG1laW5lIEdld2lubnJhdGUgaW1tZXIgbm9jaCBzZWhyIGd1dCBpc3QgdW5kIG1pciB2b3JoZXIgc2Nob24ga2xhciB3YXIsIGRhc3MgaWNoIGRpZSBiZXJkdXJjaHNjaG5pdHRsaWNoIGhvaGUgV2lucmF0ZSB2b24gMTAgQkIvMTAwIEhuZGUgbmljaHQgaGFsdGVuIGthbm4uLiAKSW4gdGhlIHBhc3QgdHdvIHllYXJzLCA0OCBwZW9wbGUgaGF2ZSBiZWVuIHRlcm1pbmF0ZWQgZm9yIHNleHVhbCBoYXJhc3NtZW50LCBpbmNsdWRpbmcgMTMgd2hvIHdlcmUgc2VuaW9yIG1hbmFnZXJzIGFuZCBhYm92ZSwgUGljaGFpIGFuZCBFaWxlZW4gTmF1Z2h0b24sIHZpY2UgcHJlc2lkZW50IG9mIHBlb3BsZSBvcGVyYXRpb25zLCB3cm90ZSBpbiBhbiBlbWFpbCB0byBzdGFmZi4gTm9uZSBvZiB0aGVzZSBpbmRpdmlkdWFscyByZWNlaXZlZCBhbiBleGl0IHBhY2thZ2UsIHRoZXkgYWRkZWQuCktlbGx5IGRlbmllcyB0aGF0IGhlIHByZXllZCBvbiB1bmRlcmFnZSBnaXJsc1RoZSByaXNlIGFuZCBmYWxsIG9mIFIuIEtlbGx5IkknbSBub3QgYSBjb250cm9sbGluZyBwZXJzb24iOiBSLiAKSSBnZXQgaXQsIHlvdSBkb24gd2FudCBoZXIgdG8gYmUgYXQgZmF1bHQsIGJ1dCB5b3UgYnJvdWdodCB1cCBzZXggd29yayBhbmQgYmxhbWVkIGhpbS4gSSBhbSBwb2ludGluZyBvdXQgc2hlIGlzIGF0IGxlYXN0IHJlc3Bvc2libGUgZm9yIHB1dHRpbmcgaGltIGluIGEgc2l0dWF0aW9uIGhlIGRpZCBub3QgY2hvb3NlIG9yIGhhdmUgYW55IGluZm8gb24uCkxldCBzYXkgeW91IGFyZSBwbGF5aW5nIGEgaGVhZHMgdXAgc2l0IG4gZ28uIFlvdSBhcmUgb24gdGhlIGJ1dHRvbiwgYW5kIHlvdSBjb3ZlciB5b3VyIG9wcG9uZW50IHdobyBoYXMgMTBCQi4gWW91IGhhdmUgdG8gbWFrZSBhIGRlY2lzaW9uLCBhbmQgdGh1cyB5b3UgY3JlYXRlIGEgc3RyYXRlZ3kuIApTb21lIHBlb3BsZSBtYXkgY3JhdmUgYWxjb2hvbCBpZiB0aGVpciBibG9vZCBzdWdhciBsZXZlbCBkcm9wcyBiZWxvdyBub3JtYWwgbGV2ZWxzLgpBbmQgdGhhdCB3YXMgd2l0aGluIDUgeWVhcnMuIFllcyB0aGF0IHN0aWxsIGEgbG9uZyB0aW1lIGJ1dCBhIGZyYWN0aW9uIG9mIHdoYXQgdGhleSBjbGFpbS4gQSBNY0RvbmFsZCBidXJnZXIgdGFrZXMgbG9uZ2VyIHRvIGRpc2ludGVncmF0ZS4uIApBX3dpbGRfZHJ1bmtfYXBwZWFycyAgMSBwb2ludCAgc3VibWl0dGVkIDYgbW9udGhzIGFnbwpUaGUgc2Vjb25kIGFwcGVhcnMgdG8gYmUgYSBKaWEgUWluZyB0b25nIGJhbyBjb2luIGlzc3VlZCB1bmRlciBFbXAuIFJlbiBab25nLCAxNzk2IDE4MjAuIApXZSBrbm93IGZyb20geWVhcnMgb2YgZXhwZXJpZW5jZSB3aGF0IGl0IHRha2VzIHRvIHJ1biB3ZWxsIG9yZ2FuaXNlZCBhbmQgd2VsbCBhdHRlbmRlZCBldmVudHMuIApPbmUgbWFqb3Igc2NhbSB0aGF0IGlzIHVzdWFsbHkgZG9uZSBvbiBzcG9ydHMgYmV0dGluZyBhZmljaW9uYWRvcyBpcyB0aGUgc29ydCBvZiBzY2FtIHdoZXJlIGluIGFjdHVhbGl0eSB0aGUgc2NhbW1lcnMgcHJleSBvbiB5b3VyIG93biBncmVlZC4gSWYgeW91IHNob3VsZCBiZSBhIHNwb3J0cyBiZXR0aW5nIGZhbiwgaXQgaXMgbW9zdCBiZW5lZmljaWFsIHRvIG5vdCBsZXQgeW91ciBncmVlZCBnZXQgdGhlIGhpZ2hlciBvZiB5b3Vycy4gVGhpcyBpcyB0aGUgd2F5IHRoZSBzY2FtIHVzdWFsbHkgd29ya3MsIHlvdSBhcmUgYXBwcm9hY2hlZCBieSB3YXkgb2YgYSBwZXJzb24gaWYgaXQgaXMgZmFjZSB0byBtYW5hZ2Ugb3Igb25saW5lIGFuZCB5b3Ugd2lsbCBzb29uIGJlIG9mZmVyZWQgYSBwYWNrYWdlIG9uIHNvbWUgaW5zaWRlciB0aXBzIHRoYXQgbWlnaHQgYWxsb3cgeW91IHRvIHdpbiB0aGUgYmV0LiBTbyBhcyB0byBnZXQgeW91ciBoYW5kcyBvbiB0aGF0IGluc2lkZXIgdGlwLCB5b3Ugd2lsbCBuZWVkIHRvIGJ1eSBpbnRvIHRoYXQgcGVyc29uJ3MgZ3JvdXAuIEl0IHNvdW5kcyBzdWNoIGFzIGEgZm9ybXVsYSB0aGF0IGlzIGd1YXJhbnRlZWQgdG8gZ2l2ZSB5b3UgYSBzdXJlIHdpbiByaWdodD8gSG93ZXZlciwgb25lIHlvdSBnaXZlIHRoYXQgaW5kaXZpZHVhbCB5b3VyIGNhc2gsIHlvdSB3aWxsIHByb2JhYmx5IG5ldmVyIGhlYXJkIGZyb20gdGhlbSBhZ2Fpbi4KQW5kIGhpcyB0cml1bXBoIGlzIGFscmVhZHkgb3BlbmluZyBzZXZlcmFsIGRvb3JzLiBBcyB3ZWxsIGFzIHJldHVybmluZyB0byBWZWdhcyB0byBkZWZlbmQgaGlzIHRpdGxlIG5leHQgeWVhciwgaGUgd2lsbCBhbHNvIGhhdmUgYSBzZWF0IGF0IHRoZSBwcmVzdGlnaW91cyBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgaW4gMjAxNy4KQ2xpdmVNY0tyYWNrZW4gdQpVcCB0byB5b3UgaWYgeW91IHdhbnQgdG8gZG8gYSBUMSBjaXR5IHN1Y2ggYXMgQmVpamluZyBvciBTaGFuZ2hhaSwgYnV0IHRoZXkgYXJlIHZlcnkgZXhwZW5zaXZlIGFuZCBjb21wZXRpdGl2ZS4gSSBlbmpveWluZyBsaWZlIGluIGEgVDMgY2l0eSBwYXlpbmcgJDEgZm9yIGV2ZXJ5dGhpbmcgYW5kICQwLjMwIGEgYmVlci4gSSBzYXZlIGFyb3VuZCA4MCUgb2YgbXkgc2FsYXJ5LiAKQnV0IGFzIGxvbmcgYXMgdW5pdmVyc2l0aWVzIGFuZCB0aGUgcnVsaW5nIGVsaXRlcyBvZiBvdXIgY3VsdHVyZSBwcm92ZSBvdXIgb3duIGZpdG5lc3MgdG8gcnVsZSB0aHJvdWdoIHRoZSBmaXRuZXNzIG9mIG91ciB5b3V0aCwgYXMgbG9uZyBhcyBzcG9ydGluZyBjdWx0dXJlIGlzIG5vdCBqdXN0IGZvciBmdW4gYW5kIGZpdG5lc3MsIGJ1dCBmb3Igc2Nob2xhcnNoaXBzIGFuZCBmdXR1cmUgam9icywgdGhlIGJyb2dlb2lzaWUgd2lsbCBoYXZlIHRvIG1hbiB1cCBhbmQgcGF5IHRoZSBwcmljZS4gCkhhZCB0byBzb3VyY2UgZmFicmljLCBlbGFzdGljIHdhaXN0IGJhbmRzLCBhcnJhbmdlIGZpbmFuY2luZyB5b3UgZG9uIHJlYWxseSBrbm93IHdoYXQgZ29lcyBpbnRvIGJ1aWxkaW5nIGEgYnVzaW5lc3MgdW50aWwgeW91IGluIGl0LiBPbmUgb2YgbXkgZmF2b3VyaXRlIHF1b3RlcyBpcyBmcm9tIFJpY2hhcmQgQnJhbnNvbiwgd2hvIHNhaWQgZ2V0IGJvZ2dlZCBkb3duIGluIGFsbCB0aGUgZGV0YWlscywgbG9vayBhdCB0aGUgYmlnIHBpY3R1cmUgYW5kIHJ1bi4gSXQgd2lsbCBnZXQgeW91IGludG8gc29tZSBob3Qgd2F0ZXIgc29tZXRpbWVzIGJ1dCBmb3IgdGhlIG1vc3QgcGFydCB5b3UgZ2V0IHRoaW5ncyBkb25lLiBTbyBJIGp1c3QgZ290IGl0IGRvbmUuIGJ1c2luZXNzIHdhcyBpbmNvcnBvcmF0ZWQgaW4gQXVndXN0IDIwMDkgYnV0IGRpZG4gdGFrZSBvZmYgdW50aWwgSnVuZSAyMDEwLiBIaXMgbW9zdCBzaWduaWZpY2FudCBjaGFsbGVuZ2UgY2FtZSBmcm9tIHRoZSBmYWN0IGhlIHdhcyBhZGFtYW50IHRvIGtlZXAgcHJvZHVjdGlvbiBpbiBDYW5hZGEuCklmIHlvdSBkbyBhIGxpdHRsZSByZXNlYXJjaCBhcm91bmQgdGhlIGludGVybmV0LCB5b3Ugd2lsbCBmaW5kIHRlc3RpbW9uaWFscyB0aGF0IGluZGl2aWR1YWxzIHN1Ym1pdCB3aGVyZSB0aGV5IGFyZW4ndCBwbGVhc2VkIHdpdGggcGxhc3RpYyBwb2tlciBjaGlwcy4gSG93ZXZlciwgaW4gbXkgb3duIHBlcnNvbmFsIG9waW5pb24gaXQgcmVhbGx5IGRlcGVuZHMgb24gd2hhdCB0eXBlIG9mIHBpY3R1cmUgeW91J3JlIHRyeWluZyB0byBwYWludCBmb3IgeW91ciBndWVzdHMuIFNpbmNlIHdlJ3JlIGEgYnVuY2ggb2YgY29sbGVnZSBraWRzIGp1c3QgYmxvd2luZyBvZmYgc3RlYW0gYWZ0ZXIgbG9nZ2luZyBsb25nIHN0dWR5IGhvdXJzLCB3ZSBkb24ndCBuZWVkIGEgZmFuY3kgc2V0IHRvIGZlZWwgbGlrZSB3ZSdyZSBwbGF5aW5nIHBva2VyLi4gClBvc3RlZCBieSBhYnNhbG9tIGF0IDc6NDIgQU0gb24gTWF5IDIzLCAyMDA4CjQgcmV2b2x1dGlvbnMgdXAsIHdyYXBwaW5nIGluc2lkZSBvdXQgb3ZlciB0aGUga25lZS4gQ3Jvc3Mgb3ZlciB0aGUga25lZSBmcm9tIHRvcCB0byBib3R0b20gdG8ganVzdCBiZWxvdyB0aGUga25lZSwgYnJpbmcgdW5kZXIgYW5kIGNyb3NzIG92ZXIgdGhlIGtuZWUgYWdhaW4uIExvY2sgaW4gdGhlIFggd2l0aCBhIHJldm9sdXRpb24gbmVhciB0aGUgdG9wIHRoZW4gd3JhcCB3aGF0ZXZlciBpcyBsZWZ0IGFjcm9zcyB0aGUgY2VudGVyIG9mIHRoZSBrbmVlLiAKRm9yIHNvbWUgcGVvcGxlLCBhdm9pZGluZyB0cmlnZ2VycyBhbmQgdXNpbmcgYWxsZXJneSBtZWRpY2luZSBpcyBub3QgZW5vdWdoIHRvIGNvbnRyb2wgb3IgcHJldmVudCB0aGVpciBhbGxlcmd5IHN5bXB0b21zLiBBbGxlcmd5IGluamVjdGlvbnMgbWF5IG9mZmVyIGFuIGFsdGVybmF0aXZlIGlmIHN5bXB0b21zIGFyZSBzZXZlcmUuIFRoZXJlIGFyZSBzZXZlcmFsIGRpZmZlcmVudCB0ZXJtcyB1c2VkIHRvIGRlc2NyaWJlIGFsbGVyZ3kgaW5qZWN0aW9ucywgaW5jbHVkaW5nIGFsbGVyZ3kgdmFjY2luYXRpb24sIGltbXVub3RoZXJhcHksIGFuZCBhbGxlcmd5IGRlc2Vuc2l0aXphdGlvbiBzaG90cy4gCkxvY2F0ZWQgb2ZmIG9mIEhpZ2h3YXkgMSBhYm91dCBoYWxmd2F5IGJldHdlZW4gU2FuIEZyYW5jaXNjbyBhbmQgTG9zIEFuZ2VsZXMgbmVhciB0aGUgY2l0eSBvZiBTYW4gU2ltZW9uLCB0aGUgbWFqb3JpdHkgb2YgdmlzaXRvcnMgbXVzdCB0YWtlIEhpZ2h3YXkgMSAoUGFjaWZpYyBDb2FzdCBIaWdod2F5KSwgdGhlbiBIaWdod2F5IDQ2IHRvd2FyZHMgQ2FtYnJpYSB0byBIZWFyc3QgQ2FzdGxlIFJvYWQsIGFzIGEgc2lnbmlmaWNhbnQgcG9ydGlvbiBvZiBIaWdod2F5IDEgZnJvbSB0aGUgbm9ydGggaXMgY3VycmVudGx5IGluYWNjZXNzaWJsZS4gV2hpbGUgbm8gbG9kZ2luZyBpcyBhdmFpbGFibGUgYXQgSGVhcnN0IENhc3RsZSwgYSBudW1iZXIgb2YgaG90ZWxzIGNhbiBiZSBmb3VuZCBpbiBTYW4gU2ltZW9uIGFuZCBDYW1icmlhLCBzdWNoIGFzIEJsdWUgRG9scGhpbiBJbm4sIENhdmFsaWVyIE9jZWFuZnJvbnQgUmVzb3J0IGFuZCB0aGUgTW9yZ2FuLi4gClNlYXJjaCBqb2JzIGluIENsYXJrc2J1cmcsIFdWIGFuZCBmaW5kIGxvY2FsIGVtcGxveW1lbnQgb3Bwb3J0dW5pdGllcyB3aXRoIE15IE5DV1YuIFlvdXIgYmVzdCBzb3VyY2UgZm9yIENsYXJrc2J1cmcsIFdWIGxvY2FsIGVtcGxveWVycy4gU28gSSB3YW50ZWQgdG8gcmVsaXZlIG15IGNoaWxkaG9vZCBieSBnZXR0aW5nIEdIMyBvbiBQQywgYnV0IEkgY2FuJ3Qgc2VlbSB0byBmaW5kIGl0IGFueXdoZXJlLiBJZiBhbnlvbmUgaGFzIGEgZG93bmxvYWQgZm9yIEdIMywgSSdkIGFwcHJlY2lhdGUuIApBbGxvdyB5b3VyIGJvZHkgdG8gZGVjb21wcmVzcyBhIGJpdCB3aGVuIHlvdSBnZXQgaG9tZS4gCk5vdGU6IEl0IG1pZ2h0IGJlIGFnYWluc3QgeW91ciBldGhpY3MgdG8gZW5nYWdlIGluIGFueSBvZiB0aGUgc3RyYXRlZ2llcyBiZWxvdyAob3IgYW55IG90aGVyIHN0cmF0ZWdpZXMgeW91IGNvbmNvY3QgZm9yIG90aGVyIGdhbWVzKSwgYnV0IHRoZXkgYXJlIHVzZWZ1bCB0byBrbm93IHRvIGNvbXBsZXRlbHkgdW5kZXJzdGFuZCB0aGlzIG1lbnRhbCBtb2RlbC4gSW4gcG9rZXIsIHNvbWUgY29tbW9uIHdheXMgdG8gcHV0IHNvbWVvbmUgb24gdGlsdCBhcmU6CkJ1dCBJIGRvIHRoaW5rIHlvdSBtYXkgYmUgc3RydWdnbGluZyB3aXRoIHNvbWUgcG9zdHBhcnR1bSBkZXByZXNzaW9uLCBieSB0aGUgd2F5IHlvdSBrZWVwIHNheWluZyB5b3UncmUgZGVlcGx5IHVuaGFwcHkgYW5kIGNyeWluZyBhbGwgdGhlIHRpbWUuIFlvdSBmZWVsIGxpa2Ugc29tZXRoaW5ncyBub3QgcmlnaHQuIAoxMC8xMCBoYW5kcyBkb3duLiBJIHJlc2VhcmNoZWQgZm9yIGRheXMgYW5kIGNvbXBhcmVkIGNvbXBhcmVkIGNvbXBhcmVkLiBNeSBvbmx5IHJlZ3JldCBpcyB0aGF0IEkgZGlkbid0IGJ1eSB0aGlzIHNvb25lci4gCkVhY2ggY2FyZCBpbiB0aGUgc2V0IHdpbGwgYmVsb25nIHRvIG9uZSBvZiBmb3VyIHN1aXRzLCBpbmNsdWRpbmcgaGVhcnRzLCBkaWFtb25kcywgc3BhZGVzLCBhbmQgY2x1YnMuLiAKSGUgc2hvdWxkIHNpbXBseSB0YWtlIHRpbWUgb2ZmIHVudGlsIE1heSBvciBKdW5lIDIwMTMgYW5kIGluIGRvaW5nIHNvLCBoZSB3aWxsIGFsc28gc2hvdyBBcnVtIHdoYXQgaGUnZCBiZSBtaXNzaW5nLiAKQ2hhbmdpbmcgeW91ciBpbWFnZTogQnkgY2hhbmdpbmcgeW91ciBpbWFnZSB5b3Ugd2lsbCBjb21wbGV0ZWx5IHRocm93IHlvdXIgb3Bwb25lbnRzIG9mZiBndWFyZCBhbmQgc2V0IHRoZW0gdXAgdG8gbG9zZSBiaWcgcG90cyBpbiB0aGUgZnV0dXJlLiAKSSB3b3VsZCByYXRoZXIgbW92ZSBhbmQgcGljayBvdXIgb3duIHBsYWNlIGFuZCBkbyBpdCB0aGUgcmlnaHQgd2F5IChvbiBvdXIgb3duIGFzIGFkdWx0cykuIEhpcyBwYXJlbnRzIHdvdWxkIGZvb3QgdGhlIGJpbGwgb24gcHJldHR5IG11Y2ggYW55dGhpbmcgaGUgYXNrcyBmb3IgIGJ1dCB0aGVyZXMgaW1wbGljYXRpb25zIHRvIHRoYXQuIApJIHdhcyBhbiBvdXRyZWFjaCBzcGVjaWFsaXN0IGFuZCBjYXNlIG1hbmFnZXIgYXQgQlJDLiAKVGhpcyBpcyBhbiBhZGRpdGlvbmFsIHBhdGh3YXkgdGhhdCBtaWNyb2Jpb3RhIGFuZCBwYXRob2dlbmljIGJhY3RlcmlhIHVzZSB0byBjb21tdW5pY2F0ZSB3aXRoIHRoZSBicmFpbiB2aWEgdGhlIGltbXVuZSBzeXN0ZW0gb3IgdGhyb3VnaCBhY3RpdmF0aW9uIG9mIGxvY2FsIG5ldXJvbnMgaW4gdGhlIGVudGVyaWMgbmVydm91cyBzeXN0ZW0gKEVOUykuIApTaGUgaGF2aW5nIGEgZ29vZCBkYXkuIApUaHJlZSB0byB0cnlHIERpc3RpbGxpbmcgV2VzdGVybiBHcmFpbnMgKDQwJSBBQlYpIExvdmVseSBkYXJrIGNhcmFtZWwgY29sb3VyLiAKQmVybmllIGp1c3QgZ29ubmEgZnVjayB0aGlzIHVwLiBJIGxvdmVkIGhpbSB0aHJlZSB5ZWFycyBhZ28sIGJ1dCB3ZSBuZWVkIGJldHRlciBpZGVhcyB0aGFuIHN1YnNpZGl6ZWQgZWR1Y2F0aW9uIChhcyBiYWQgYXMgSSB3YW50IHRoYXQgcm4pLiAKTGEgZm1pbml0IGVzdCBkZSBsJ29yZHJlIGR1IGRzaXIgbWltdGlxdWUuIApCZWNhdXNlIGl0cyBhcyBpZmYgZXZlcnl0aGluZyBpcyBmcm96ZW4gd2hpbGUgeW91IGFyZSBkb2luZyB0aGUgc2NhbnMuIFdoZW4geW91IGNsaWNrIGFub3RoZXIgYnV0dG9uIHlvdSByZWZyZXNoIGV2ZXJ5dGhpbmcgYW5kIGl0IGNoYW5nZXMgeW91ciBoZWFsdGguIFdoYXQgY2hlYXQgZW5naW5lIGRvZXMgaXMgaXQgZmluZHMgdGhlIHZhbHVlICAgaW1hZ2luZSB0aGF0IHRoYXQgdmFsdWUgKCB0aGUgYWRkcmVzcyApIGlzIGEgcGllY2Ugb2YgbWVtb3J5LCBpbiBvdXIgY2FzZSB0aGF0IHBpZWNlIG9mIG1lbW9yeSByZW1lbWJlcnMgdGhlIGhlYWx0aCwgc28gd2UgY2hhbmdlIHRoZSBtZW1vcnkgdG8gdGhpbmsgdGhhdCB0aGUgbWVtb3J5IGlzIGFjdHVhbGx5IHdoYXQgZXZlciB3ZSB3YW50LiAKTG92ZS4gV2lsbCBkby4gCkknZCB0YWtlIGhpbSB1cCBvbiB0aGF0IGJldCBldmVyeXRpbWUsIHNheWluZyB0aGF0IGhlIGNvdWxkbid0LiBIZSdkIHdpbiBhIGNvdXBsZSB0aW1lcyBoZXJlIGFuZCB0aGVyZSBidXQgaW4gdGhlIGVuZCB3b3VsZCBsb3NlIG1vbmV5LiBJdCdzIG5vdCA1MC81MC4gCiJJIHdhcyB0cnlpbmcgdG8gZ2V0IG91ciBwZW9wbGUgdG8gaGFuZyBvdXQgb3V0c2lkZSB0aGUgdGhlYXRlciBmb3IgdGhlIHdob2xlIHNob3csIiBoZSBzYXlzLCBob3BpbmcgaXQgd291bGQgZGlzc3VhZGUgdHJvdWJsZS4uIApZb3VyIHJpZ2h0cyBhcmUgb25seSBhcHBsaWNhYmxlIHRvIHRob3NlIHdobyByZXNwZWN0IGl0LlNpbXBsZSBhbnN3ZXIgaXMgeWVzLiAKVGhlIGZ1bm55IHBhcnQgd2FzIHRoYXQgaGUgYWR2aXNlZCBtZSB0byBlYXQgYSBNY0RvbmFsZHMgY2hlZXNlYnVyZ2VyLCBzaW5jZSB0aGV5IG1vc3RseSBzb3kgYW5kIGJ1bGxzaGl0LiAKVGhlcmUgaXMgbm8gbmVlZCB0byBzaG93IGhpcyBoYW5kIHNvIHRoZSBvdGhlciBwbGF5ZXJzIHdvdWxkbid0IGtub3cgaWYgaGUgd2FzIGp1c3QgYmx1ZmZpbmcgb3IgcmVhbGx5IGhhcyB0aGUgd2lubmluZyBoYW5kLiAoRnVsbCBBbnN3ZXIpLiAKMy4gVGhvc2Ugd2hvIHdlcmUgY29ycmVjdGx5IGRpYWdub3NlZCB3aXRoIGNlbGlhYyBkaXNlYXNlIHVzZWQgZmV3ZXIgbWVkaWNhbCBzZXJ2aWNlcyBhbmQgcmVkdWNlZCB0aGVpciBoZWFsdGhjYXJlIGNvc3RzIGJ5IG1vcmUgdGhhbiAzMCBwZXJlY250LiBEci4gCkhvbmVzdGx5LCB0aGUgZHVkZSBncmV3IG9uIG1lIGEgbG90LiBJIHdvdWxkbiBnbyB0byBoaW0gZm9yIHBva2VyIG9yIGxpZmUgYWR2aWNlLCBidXQgaGUgYWN0dWFsbHkgYSBsaWtlYWJsZSBkdWRlLgpBbmQgdGhpcyBpcyB3aHkgSSB0ZWxsIHBlb3BsZSB0byBsb29rIGludG8gdGhpbmdzIG9uIHRoZWlyIG93bi4gClZvbHVtZS5DYXB0YWluX1NhY2t0YXAgIDQ4IHBvaW50cyAgc3VibWl0dGVkIDE2IGRheXMgYWdvTmVkIFN0YXJrIGRpZWQgYmVjYXVzZSBoZSBkaWRuJ3Qgc3RyaWtlIGltbWVkaWF0ZWx5LCBsaWtlIHRoZSBtb21lbnQgaGUgZm91bmQgb3V0IFJvYmVydCBnb3QgZnVja2VkIHVwIGJ5IHRoYXQgYm9hci4gSGUgd2FzIHRvbyBjb25jZXJuZWQgYWJvdXQgZG9pbmcgdGhpbmdzIHRoZSByaWdodCB3YXkgYW5kIHVuZGVyZXN0aW1hdGVkIHdoYXQgaGlzIG9wcG9uZW50cyB3ZXJlIGNhcGFibGUgb2Yvd2lsbGluZyB0byBkby4gSGlzIGRlYXRoIHdhcyB3aGF0IHNldCB0aGUgdG9uZSBvZiB0aGUgd2hvbGUgc2VyaWVzIGZvciBtZS4gClRoZSBob3JzZSByYWNpbmcgb2RkcyBhcmUgYWx3YXlzIGNvbXBldGl0aXZlLiBUaGVyZSBhcmUgZGlmZmVyZW50IGVuaGFuY2VkIG9kZHMgb3B0aW9ucyBmb3IgYWNjdW11bGF0b3IgYmV0cywgYW5kIGJlc3QgcHJpY2VzIGFyZSBndWFyYW50ZWVkIGZvciBhbGwgdHlwZXMgb2YgcmFjZXMsIG5vIG1hdHRlciBob3cgYmlnLkxpdmUgSW4gUGxheSBCZXR0aW5nQWxtb3N0IGFsd2F5cyB0aGVyZSBpcyBhIHNwb3J0aW5nIGV2ZW50IGF2YWlsYWJsZSBvbiB0aGUgbGl2ZSBpbiBwbGF5IGNvbnNvbGUuIApPbiB0aGUgYmFjayBvZiB0aGUgdG91Z2ggcXVhcnRlciBhdCBWaWN0b3JpYSBTZWNyZXQsIEwgQnJhbmRzIHNhaWQgaXQgc2VlcyB0b3RhbCBjb21wYW55IHByb2ZpdCwgZXhjbHVkaW5nIHNvbWUgaXRlbXMsIGluIGEgcmFuZ2Ugb2YgVVMkMi4yMCB0byBVUyQyLjYwIHRoaXMgeWVhci4gVGhhdCB3ZWxsIGJlbG93IHRoZSBhdmVyYWdlIGVzdGltYXRlIGZyb20gYW5hbHlzdHMuIExhdGUgbGFzdCB5ZWFyLCB0aGUgY29tcGFueSBhbm5vdW5jZWQgaXQgd291bGQgc2xhc2ggaXRzIGRpdmlkZW5kIGluIGhhbGYsIGEgbW92ZSBXYWxsIFN0cmVldCBjYWxsZWQgc3VycHJpc2luZyBidXQgcHJ1ZGVudC4KVGhlIG1vc3QgY29tbW9uIHRhdHRvbyBpcyB0aGUgYWNlIG9mIHNwYWRlcyBwbGF5aW5nIGNhcmQuIFRoaXMgY2FyZCBjYW4gYWxzbyBiZSBkZXNpZ25lZCBpbiBtYW55IHdheXMuIFNvbWUgZGVzaWducyBwb3J0cmF5IGEgc3BhZGUgaW4gdGhlIGNlbnRlciBvZiB0aGUgY2FyZCBvciBhIHNrdWxsLiAKVGhlbiBpdCBpcyB0aW1lIHRvIGJlZ2luIHRoZSBzZWNvbmQgZGl2aXNpb24uIEV4cGVydHMgZGl2aWRlIHRoZSBhcm0vaGFuZC9maW5nZXJzIHNlY3Rpb24gaW50byB0d28gdXBwZXIgYXJtIG11c2NsZSBncm91cHMgKG1vc3RseSB0aGUgYmljZXBzIGFuZCB0cmljZXBzKSwgdGhlIGZvcmVhcm0gbXVzY2xlIGdyb3VwcywgYW5kIHRoZSB2YXJpb3VzIGhhbmQgYW5kIGZpbmdlciBtdXNjbGUgZ3JvdXBzLiBJIHdpbGwgc3RhcnQgd2l0aCB5b3VyIHNob3VsZGVycywgc3RyZXRjaCBvdXQgeW91ciBhcm1zLCBhbmQgd29yayBkb3dud2FyZCB0b3dhcmQgeW91ciBoYW5kcyB1cHBlciBhcm0gbXVzY2xlcyAoMiBtaW51dGVzKSwgZm9sbG93ZWQgYnkgeW91ciBsb3dlciBhcm0gbXVzY2xlcyAoMiBtaW51dGVzKS4gSSBoYXZlIGEgdmVyeSBzcGVjaWFsIHRyZWF0IGZvciB5b3VyIGhhbmRzIGFuIGludGVybG9ja2luZyBwYWxtIG1hc3NhZ2UuIEkgbGl0ZXJhbGx5IHVzZSBhbGwgMTAgb2YgbXkgZGlnaXRzIHRvIGludGVydHdpbmUgeW91ciA1IGRpZ2l0cy4gWW91IHByb2JhYmx5IGRvIG5vdCBrbm93IGp1c3QgaG93IHBsZWFzdXJhYmxlIHRoZSBzZW5zYXRpb24gb2YgaGF2aW5nIHRoZSBhcmVhcyBvZiBza2luIG9uIHRoZSBzaWRlcyBvZiB5b3VyIGZpbmdlcnMgYWN0dWFsbHkgaXMgdW50aWwgeW91IGV4cGVyaWVuY2UgdGhhdCBwbGVhc3VyZSBmb3IgdGhlIGZpcnN0IHRpbWUhIFByb2JhYmx5IG5vIG9uZSBldmVyIHRvdWNoZXMgdGhhdCBhcmVhIG9mIHlvdXIgYm9keSBub3QgZXZlbiB5b3VyIHdpZmUuIFRoZSBvbmx5IHRpbWUgaW4gb3VyIGxpdmVzIHdoZW4gYW5vdGhlciBodW1hbiB0b3VjaGVzIHVzIHRoZXJlIGlzIHdoZW4gd2UgYXJlIGhvbGRpbmcgaGFuZHMgd2l0aCBmaW5nZXJzIGludGVydHdpbmVkIGEgcmFyZSBldmVudCwgYW5kIG9uZSBhc3NvY2lhdGVkIHdpdGggZ3JlYXQgcm9tYW50aWMgcGxlYXN1cmUuCldpdGggc3VjaCBhIGJpZyBvcGVuaW5nIHJhaXNlIGFuZCBzbyBtYW55IGNhbGxlcnMsIHRoaXMgbG9va3MgbGlrZSBhbiBlYXN5IGFsbCBpbiBwcmVmbG9wIHVubGVzcyB5b3Uga25vdyB0aGUgb3JpZ2luYWwgcmFpc2VyIGlzIGEgYmlnIG5pdC4gVGhlIGNvbWJpbmF0aW9uIG9mIHRoZSBjaGlwcyB3ZSB3aW4gd2l0aCBmb2xkIGVxdWl0eSAoJDg1KSBhbmQgb3VyIGVxdWl0eSBldmVuIGlmIHdlIGdldCBjYWxsZWQgbWFrZXMgaXQgYSBnb29kIGphbS4gCkJ1dCBub3cgdGhpcz8gTmFoIGl0IGp1c3QgaXMgdG9vIG11Y2ggdGhhdCB0aGV5IHdhbnQgdXMgdG8gYnV5LCB0b28gbXVjaCB0aGV5IHdhbnQgdXMgdG8gYmVsaWV2ZS4gCkkgZG9uIHRoaW5rIGl0cyBzb21ldGhpbmcgeW91IHNob3VsZCBiZSBzY2FyZWQgb3Igb24gZ3VhcmQgZm9yIGJ1dCBzb21ldGhpbmcgdG8ga2VlcCBpbiBtaW5kIHdoZW4geW91IGRvIGludGVyYWN0IHdpdGggQW1lcmljYW5zLiAKSUNyeUF0TmlnaHRTb21ldGltZXMgdQpDb21wbGV0ZWx5IG91dCBvZiBjb250cm9sLiAKSSB0b2xkIGhpbSBJIGRpZG4gdGhpbmsgc28gYnV0IHdlIGNvdWxkIHRhbGsgYWZ0ZXIuIApJIGRvbid0IGJlbGlldmUgd2Ugd291bGQgbG9zZSBhbnlib2R5IGlmIHdlIHNldCBhIGJocCBtYXhpbWEgYXQgMjAwLiAKU2hhaCBwcmV2aW91c2x5IHRvbGQgVGhlIFdhc2hpbmd0b24gUG9zdCB0aGF0IEthdmFuYXVnaCB3YXMgcmVpbWJ1cnNlZCBmb3IgdGhvc2UgdGlja2V0cyBhbmQgcGFpZCBvZmYgaGlzIGRlYnQgYXQgdGhlIGVuZCBvZiAyMDE2LiBXaGl0ZWhvdXNlIHdhbnRzIHRvIGtub3cgd2hpY2ggb2YgaGlzIGZyaWVuZHMgcmVpbWJ1cnNlZCBLYXZhbmF1Z2ggZm9yIGJhc2ViYWxsIHRpY2tldHMsIHdoZW4gYW5kIGF0IHdoYXQgcHJpY2UuIEhlIGFsc28gd2FudHMgdG8ga25vdyBob3cgS2F2YW5hdWdoIHBhaWQgb2ZmIHRoZSByZXN0IG9mIGhpcyBkZWJ0IHRoYXQgd2FzIG5vdCBpbmN1cnJlZCBmcm9tIHB1cmNoYXNpbmcgYmFzZWJhbGwgdGlja2V0cy4uIApBbmQgdGhlbiB0aGVyZSBJdmV5CldoaWxlIHRoZSBzb3VuZHMgbWlnaHQgYmUgc2VlbSBzZXJlbmUgYXQgMSw2MDAgZmVldCBhYm92ZSB0aGUgY2hhb3RpYyBIb25nIEtvbmcgY2l0eSBzdHJlZXRzLCB0aGUgdmlldyBpcyBhbnl0aGluZyBidXQgY2FsbTogdGhlIGJ1aWxkaW5nIHNpdHMgZGlyZWN0bHkgYWNyb3NzIFZpY3RvcmlhIEhhcmJvdXIgYW5kIG9mZmVycyBtYWduaWZpY2VudCB2aWV3cyBvZiB0aGUgaGFyYm9yLCBIb25nIEtvbmcgSXNsYW5kIGFuZCBUaGUgTmV3IFRlcnJpdG9yaWVzLi4gClRoZW4gaGUgc2F5cyAid293IHRoYXQgd2FzIHVuZXhwZWN0ZWQgYnV0IEkgZG9uIG1pbmQgaXQuIApJdCB3YXMgb25seSBhZnRlciBJIHN0YXJ0ZWQgdG8gd29ycnkgYWJvdXQgaGlzIHBlcnNvbmFsIHNhZmV0eSB0aGF0IEkgYmVnZ2VkIGhpbSB0byBqdXN0IGxldCBtZSBrbm93IGhlIHdhcyBvay4uIApIb3cgbXVjaCB0aW1lIG11c3QgaSBpbnZlc3QgaW4gdCBzcGxpbmVzIHRvIGJlY29tZSBhZGVwdCBhdCBpdD8gSSB0aGluayBteSAuIApJbiBhZGRpdGlvbiwgZXZlbiBpbiB0ZXJtcyBvZiBTZWNvbmRhcnkgc2VjdG9yIG9mIHRoZSBlY29ub215LCBDaGluYSByZWxpZXMgb24gbWFudWZhY3R1cmluZyB2ZXJ5IHNpbXBsZSBwcm9kdWN0cyBhbmQgbGlnaHQsIGNvbnN1bWVyIGdyYWRlIGVsZWN0cm9uaWNzICAgYm90dG9tIG9mIHRoZSBtYW51ZmFjdHVyaW5nIGZvb2QgY2hhaW4uLiAKQW5kIGlmIHlvdSBkb24gd2FudCB0byBkZWFsIHdpdGggSVZzLCBjYXRoZXRlcnMsIHZpdGFscywgbWVkcywgZXRjLiwgdGhlbiBzaXQgZG93biBhbmQgcmVhZC4gNCBwb2ludHMgIHN1Ym1pdHRlZCAzIGRheXMgYWdvLiAKRnJvbSB0aGUgc3RhbmRwb2ludCBvZiBzbG93aW5nIHRoZSBhZ2luZyBwcm9jZXNzIGFuZCBwcmV2ZW50aW5nIHRoZSBvbnNldCBvZiBhZ2UgcmVsYXRlZCBkZWdlbmVyYXRpdmUgZGlzZWFzZXMsIGl0IGlzIGNyaXRpY2FsIHRvIHVuZGVyc3RhbmQgdGhhdCB0aGUgYm9keSBjYW4gb25seSBtYWtlIG9wdGltYWwgYW1vdW50cyBvZiBDb1ExMCB1cCB0byBhYm91dCB0aGUgYWdlIG9mIDIwLgpCRVJSSVNPVVIgIDIxIHBvaW50cyAgc3VibWl0dGVkIDExIG1vbnRocyBhZ28KSXQgd2FzIGEgcHJvdWQgbW9tZW50IGZvciBtZSB0aGF0IHRoZSB0ZWFtIHB1bGxlZCBpdCBvZmYgYW5kIG1hbmFnZWQgdG8gc3RheSBjYWxtIGRlc3BpdGUgdGhlIGltbWVuc2UgcHJlc3N1cmUuIApQb0UgZGVmaW5pdGVseSBoYXMgbW9yZSBkZXB0aCBidXQgaWQgZGFyZSBzYXkgdGhhdCB0byB0aGUgYXZlcmFnZSBwZXJzb24sIGRpYWJsbyAzcyBsb290IHN5c3RlbSBpcyBtdWNoIG1vcmUgc2F0aXNmeWluZy4gU3R1ZmYgbGlrZSBjb21wbGV0aW5nIHNldHMgb3IgaXRlbXMgdGhhdCBtYWtlIGEgY2VydGFpbiBza2lsbCAodGhhdCB5b3UgZGlkbiByZWFsbHkgbGlrZSB0aGF0IG11Y2ggYmVmb3JlKSAxNyB0aW1lcyBzdHJvbmdlciByZWFsbHkgbWl4IHVwIHRoZSBnYW1lcGxheSBkdXJpbmcgcHJvZ3Jlc3Npb24gYXQgbGVhc3QuIEl0IGFsc28gd2F5IG1vcmUgc3RyYWlnaHRmb3J3YXJkIHdpdGggdXN1YWxseSBsZXNzIG1vZGlmaWVycyB0byBjb25zaWRlciBhbmQgdGhlIGdhbWUgZG9lcyBhIE1VQ0ggYmV0dGVyIGpvYiBhdCBzaWduYWxsaW5nIHdoYXQgaXMgc3Ryb25nIG9yIGdvb2QgdG8gdXNlLCB3aGVyZWFzIGluIFBvRSB5b3UgYmFzaWNhbGx5IGhhdmUgdG8gcmVhZCAxNSBwYWdlcyBvZiBhIGd1aWRlIHRvIGdldCBhIGdpc3Qgb2Ygd2hhdCBnb2luZyBvbi4KQ291bmNpbHdvbWFuIEdlcnJpIFNjaHJvZGVyIHNhaWQgdGhlcmUgYXJlIG1hbnkgbWFzc2FnZSBwYXJsb3JzIGluIEhlbmRlcnNvbiB0aGF0IGNvbmR1Y3QgYnVzaW5lc3MgbGVnYWxseS4gU2Nocm9lZGVyIHNhaWQgc2hlIGhvcGVzIHRoZSBvcmRpbmFuY2UgYm9sc3RlcnMgdGhlaXIgaW1hZ2UgYXMgbGVnaXRpbWF0ZSBidXNpbmVzc2VzLgoiVGhlIGNoaWxkIHdhcyBib3JuIHdpdGggYSBtYWxmb3JtZWQgaGVhcnQgYW5kIGRpZWQsJyBoZSBzYXlzIHF1aWV0bHkuICJXaGVuIHlvdSd2ZSBvcGVuZWQgeW91ciBoZWFydCB0byBhIGNoaWxkIGFzIHlvdSBoYXZlIHRvLCB0aGVyZSdzIGFsd2F5cyB0aGUgZmVhciB0aGF0IHlvdSBtYXkgZGlzY292ZXIgdGhhdCB0aGUgY2hpbGQgaXMgbm90IHZpYWJsZS4gCiJUaGVyZSdzIGEgd2hvbGUgbG90IG9mIG5ldyB3YXlzIHRvIGdhbWJsZSAgZXZlcnlib2R5IGhhcyBhIGdhbWJsaW5nIGRldmljZSBpbiB0aGVpciBoYW5kcyB0aGVzZSBkYXlzLCIgc2hlIHNhaWQuIlRoYXQgbWFrZXMgdGhlIHBlb3BsZSB3aG8gYXJlIGF0IHJpc2sgZXZlbiBtb3JlIGF0IHJpc2ssIGJlY2F1c2UgaXQncyBzbyBhY2Nlc3NpYmxlLCAyNCBob3VycyBhIGRheS4iIE1zIEdvb2RzZWxsIHNhaWQgcG9rZXIgbWFjaGluZSBhZGRpY3Rpb24gd2FzIHVuaXF1ZSBpbiBpdHMgbmF0dXJlLiAiTXkgY2xpZW50cyB3aG8gaGF2ZSBhbiBlbGVjdHJvbmljIGdhbWluZyBtYWNoaW5lIGFkZGljdGlvbiByZWZlciB0byBpdCBhcyB6b25pbmcgb3V0LCB3aGVyZSB0aGV5IGdvIGFuZCBhbGwgdGhlaXIgcHJvYmxlbXMgZGlzYXBwZWFyIiBzaGUgc2FpZC4gCllvdXIgY2F0IGNhbiBldmVuIGZvcm0gc29tZXRoaW5nIHNpbWlsYXIgdG8ga2lkbmV5IHN0b25lcywgd2hpY2ggY2FuIGJlIHZlcnkgcGFpbmZ1bC4gSW4gdGhpcyBzZWN0aW9uLCB3ZSB3aWxsIHNob3cgaG93IHlvdSBjYW4gcmVkdWNlIHlvdXIgY2F0J3MgcmlzayBmb3IgY3lzdGl0aXMuIApBbiBpbXBvcnRhbnQgc2tpbGwgdG8gbWFzdGVyIGluIE9tYWhhLzggaXMgcmVhZGluZyB0aGUgY2FyZHMuIFlvdSBtdXN0IGJlIGFibGUgdG8gbG9vayBhdCB0aGUgY2FyZHMgYW5kIGNvbnNpZGVyIHdoYXQgdGhlIGJlc3QgcG9zc2libGUgaGFuZCBpcywgdGhlIGxpa2VsaWhvb2Qgb2Ygc29tZW9uZSBoYXZpbmcgdGhlIGJlc3QgaGFuZCwgaG93IGNsb3NlIHlvdXIgaGFuZCBpcyB0byB0aGUgYmVzdCBoYW5kLCBhbmQgd2hhdCBjaGFuY2UgeW91IGhhdmUgdG8gaW1wcm92ZSB0byB0aGUgYmVzdCBoYW5kLiBBcyB3aWxsIGJlIGRpc2N1c3NlZCBzaG9ydGx5LCB5b3UgbXVzdCBvZnRlbiBoYXZlIHRoZSBiZXN0IGhhbmQgcG9zc2libGUgdG8gd2luLiBSZWFkaW5nIHRoZSBjYXJkcyBpcyBhIHNraWxsIHRoYXQgd2lsbCBiZWNvbWUgZWFzaWVyIGFzIHlvdSBnYWluIGV4cGVyaWVuY2UuIEEgZ29vZCB3YXkgdG8gaW1wcm92ZSB5b3VyIHNraWxscyBpcyB0byByZWFkIHRoZSBjYXJkcyBvbiBldmVyeSBoYW5kIGV2ZW4gd2hlbiB5b3UgaGF2ZSBmb2xkZWQuIFRoaXMgbm90IG9ubHkgd2lsbCBpbXByb3ZlIHlvdXIgc2tpbGxzIGJ1dCBhbHNvIHdpbGwgaGVscCB5b3UgbGVhcm4gd2hhdCB0eXBlcyBvZiBoYW5kcyB5b3VyIG9wcG9uZW50cyBhcmUgcGxheWluZy4gWW91IG5lZWQgdG8gZGV0ZXJtaW5lIGlmIHRoZXJlIGlzIGEgcG9zc2libGUgbG93LCBpZiB0aGVyZSBpcyBhIHBvc3NpYmxlIGZsdXNoICAgZml2ZSBjYXJkcyBvZiB0aGUgc2FtZSBzdWl0IGluIG9yZGVyLCBpZiB0aGVyZSBpcyBhIHBvc3NpYmxlIHN0cmFpZ2h0ICh3aGljaCB3aWxsIGJlIHBvc3NpYmxlIG9uIG1vc3QgaGFuZHMpICAgZml2ZSBjYXJkcyBvZiBhbnkgc3VpdCBpbiBvcmRlciwgYW5kIGlmIHRoZXJlIGlzIGEgcG9zc2libGUgZnVsbCBob3VzZSAod2hlbmV2ZXIgdGhlIGJvYXJkIHNob3dzIG9uZSBvciB0d28gcGFpcnMsIHBsYXllcnMgcHJvYmFibHkgaGF2ZSBhIGZ1bGwgaG91c2UpICAgdGhyZWUgb2YgYSBraW5kIGFuZCB0d28gb2YgYSBraW5kLgpJdCB3YXMgYWxsIGluIGdvb2QgZnVuLCBidXQgSSB1c2VkIHRvIHNlZSB0aGVzZSBndXlzIHNwaWxsIGV2ZXJ5dGhpbmcgZnJvbSBtdXN0YXJkIGFuZCBrZXRjaHVwIHRvIHNjb3RjaCBhbmQgYmVlciBvbiB0aGVzZSBjaGlwcy4gCkplZmZyZXkgRXBzdGVpbiBoYWQgYSBsaXR0bGUgYmxhY2sgYm9vayBmaWxsZWQgd2l0aCB0aGUgbmFtZXMgYW5kIHBlcnNvbmFsIHBob25lIG51bWJlcnMgb2Ygc29tZSBvZiB0aGUgd29ybGQncyB3ZWFsdGhpZXN0IGFuZCBtb3N0IGluZmx1ZW50aWFsIHBlb3BsZSwgZnJvbSBCaWxsIENsaW50b24gYW5kIERvbmFsZCBUcnVtcCB0byBhY3RvcnMsIGFjdHJlc3Nlcywgc2NpZW50aXN0cyBhbmQgYnVzaW5lc3MgdHljb29ucy4KQnJvdWdodCBpbiB0d28gb2YgdGhlIE5CQSBiZXN0IGNvYWNoZXMgUGF0IFJpbGV5IGFuZCBQaGlsIEphY2tzb24gYW5kIHRoZXkgdG9vayB0aGUgTGFrZXJzIHRvIE5CQSB0aXRsZXMgaW4gMTk4MCwgMTk4MiwgMTk4NSwgMTk4NywgMTk4OCwgMjAwMCwgMjAwMSwgMjAwMiwgMjAwOSBhbmQgMjAxMC4gQnVzcyB3YXMgaW5kdWN0ZWQgaW50byB0aGUgTkJBIEhhbGwgb2YgRmFtZSBpbiAyMDEwLi4gCldpdGggaGlzIGxlZyBnb25lIGhlIGNhbiByZWNvdmVyIGFuZCBsaXZlLiBQbGVhc2UsIGRvbmF0ZSBhbmQgc2hhcmUuIFRoYW5rIHlvdSEgQlRXLCAzMDAgaXMgb25seSB0byB0aGUgaGFsZiB3YXkgcG9pbnQgb2YgdGhlIHByaWNlIG9mIHRoZSBzdXJnZXJ5IGJ1dCBpdCBpcyB3aGF0IHRoZSB2ZXQgd2FudHMgZG93biB0byBnZXQgaGltIGhlbHAuLiAKSSBzcGVudCAzMyB5ZWFycyBhbmQgZm91ciBtb250aHMgaW4gYWN0aXZlIG1pbGl0YXJ5IHNlcnZpY2UgYW5kIGR1cmluZyB0aGF0IHBlcmlvZCBJIHNwZW50IG1vc3Qgb2YgbXkgdGltZSBhcyBhIGhpZ2ggY2xhc3MgbXVzY2xlIG1hbiBmb3IgQmlnIEJ1c2luZXNzLCBmb3IgV2FsbCBTdHJlZXQgYW5kIHRoZSBiYW5rZXJzLiBJbiBzaG9ydCwgSSB3YXMgYSByYWNrZXRlZXIsIGEgZ2FuZ3N0ZXIgZm9yIGNhcGl0YWxpc20uIEkgaGVscGVkIG1ha2UgTWV4aWNvIGFuZCBlc3BlY2lhbGx5IFRhbXBpY28gc2FmZSBmb3IgQW1lcmljYW4gb2lsIGludGVyZXN0cyBpbiAxOTE0LiBJIGhlbHBlZCBtYWtlIEhhaXRpIGFuZCBDdWJhIGEgZGVjZW50IHBsYWNlIGZvciB0aGUgTmF0aW9uYWwgQ2l0eSBCYW5rIGJveXMgdG8gY29sbGVjdCByZXZlbnVlcyBpbi4gSSBoZWxwZWQgaW4gdGhlIHJhcGluZyBvZiBoYWxmIGEgZG96ZW4gQ2VudHJhbCBBbWVyaWNhbiByZXB1YmxpY3MgZm9yIHRoZSBiZW5lZml0IG9mIFdhbGwgU3RyZWV0LiBJIGhlbHBlZCBwdXJpZnkgTmljYXJhZ3VhIGZvciB0aGUgSW50ZXJuYXRpb25hbCBCYW5raW5nIEhvdXNlIG9mIEJyb3duIEJyb3RoZXJzIGluIDE5MDIgMTkxMi4gSSBicm91Z2h0IGxpZ2h0IHRvIHRoZSBEb21pbmljYW4gUmVwdWJsaWMgZm9yIHRoZSBBbWVyaWNhbiBzdWdhciBpbnRlcmVzdHMgaW4gMTkxNi4gSSBoZWxwZWQgbWFrZSBIb25kdXJhcyByaWdodCBmb3IgdGhlIEFtZXJpY2FuIGZydWl0IGNvbXBhbmllcyBpbiAxOTAzLiBJbiBDaGluYSBpbiAxOTI3IEkgaGVscGVkIHNlZSB0byBpdCB0aGF0IFN0YW5kYXJkIE9pbCB3ZW50IG9uIGl0cyB3YXkgdW5tb2xlc3RlZC4gTG9va2luZyBiYWNrIG9uIGl0LCBJIG1pZ2h0IGhhdmUgZ2l2ZW4gQWwgQ2Fwb25lIGEgZmV3IGhpbnRzLiBUaGUgYmVzdCBoZSBjb3VsZCBkbyB3YXMgdG8gb3BlcmF0ZSBoaXMgcmFja2V0IGluIHRocmVlIGRpc3RyaWN0cy4gSSBvcGVyYXRlZCBvbiB0aHJlZSBjb250aW5lbnRzLgpUaG91Z2ggZG9nZ2llIHN0eWxlIG1heSBiZSB0aGUgbW9zdCBwb3B1bGFyIGFuYWwgc2V4IHBvc2l0aW9uLCBpdCdzIG5vdCBuZWNlc3NhcmlseSB0aGUgYmVzdCBvbmUgZm9yIGJlZ2lubmVycy4gCk9uIHNlIHJlbmRzIHBhcyBjb21wdGUgcXVlbGxlIGNoYW5jZSBvbiBhLiAKSXRzIGEgc2hpdHR5IHNwb3QgYW5kIGlkIHByb2JhYmx5IHRpbHQgY2FsbCBteXNlbGYgYW5kIGltIHN1cmUgbW9zdCBwZW9wbGUgSVRUIHdvdWxkLCBidXQgYmVjYXVzZSB0aGV5IGFyZSB0cnlpbmcgdG8gYWN0IGxpa2UgUExPIHNhdmFudHMgb25saW5lIHRoZXlsbCB0ZWxsIHlvdSBvdGhlcndpc2UuLiAKSXQgaXMgY2hhcmFjdGVyaXNlZCBieSBwaHJhc2VzIGxpa2UgIkkgZG9uJ3Qga25vdyB3aHkgSSdtIGNyeWluZyIuIApJIGFsc28gc3RydWdnbGUgdG8gaW1tZXJzZSBteXNlbGYgaW4gYmxhY2sgc2xhdGUgZ2FtZXMgbGlrZSB0aGF0LCBiZWNhdXNlIHRoZXJlIGdlbmVyYWxseSBpc24gYSBkcml2aW5nIGZvcmNlIHRvIHRoZSBzdG9yeSwgc28gSSB3YW50ZWQgdG8gZXhwZXJpZW5jZSBiaXRzIG9mIHRoZSBnYW1lIHRocm91Z2ggc29tZW9uZSBlbHNlIGV5ZXMgZmlyc3Qgc28gSSB3b3VsZG4gd2FzdGUgbW9uZXkgb24gYSBnYW1lIHRoYXQgbWlnaHQgbm90IGJlIGZvciBtZQpTcXVlYWtlcnMgYW5kIGFkdWx0cyBjYW4gYm90aCBiZSBhbm5veWluZyBhcyBmdWNrIGJ1dCBhdCBsZWFzdCB0aGUgZm9ybWVyIGhhcyBhbiBleGN1c2UuIFRoYW5rZnVsbHkgaXQncyBwcmV0dHkgcXVpY2sgYW5kIGVhc3kgdG8gbXV0ZSEgSWYgeW91J3JlIGFuIGFuZ3J5IGxpdHRsZSB0cm9sbCwgaG9wZWZ1bGx5IHlvdSBzdGlsbCBwbGF5IHdlbGwgYmVjYXVzZSBJIHdvbid0IGxlYXZlIHRoZSBnYW1lIGJ1dCBJIGNhbid0IGhlYXIgeW91IGFueW1vcmUgYW55d2F5LiAKSWYgeW91IGxpc3RlbiB0byBjZCBvbiB0aG9zZSBzZXR1cHMsIHRoZW4geW91IGFyZSB1c2luZyB0aGUgYmVzdCBwb3NzaWJsZSB3YXkgdG8gbGlzdGVuIHRvIGNkIGJlY2F1c2UgdGhlIGhpZ2ggZW5kIERBQ3MgaW4gdGhvc2Ugc3lzdGVtcyB3aWxsIGtpY2sgc29tZSBzZXJpb3VzIGFzcy4KV29vZGJ1cnkgaGFzIGJlZW4gb24gdGhlIGNvbW1pc3Npb24gc2luY2UgMTk4MSBhbmQgaXMgc2Vla2luZyBhbm90aGVyIHRlcm0uIEJlY2F1c2UgV29vZGJ1cnkgaGFzIGJlZW4gb24gdGhlIGNvbW1pc3Npb24gc28gbG9uZywgc29tZSBwb2xpdGljYWwgb2JzZXJ2ZXJzIGhhdmUgd29uZGVyZWQgd2hldGhlciBoZSBtaWdodCB3aW4gaGlzIHNlYXQgYW5kIHRoZW4gc3RlcCBkb3duIHNvIHRoYXQgYSBmZWxsb3cgUmVwdWJsaWNhbiBjYW4gYmUgYXBwb2ludGVkLiAKNS4gRXR0IHRlY2tlbiBhdiBlbiBvdHJvZ2VuIG1ha2Uga2FuIHZhcmEgb20gaGFuIGZyZWt2ZW50ZXJhciBuZ29uIGRhdGluZyB3ZWJicGxhdHNlciwgc2thcGEgZW4gZmFsc2sgcHJvZmlsIG9uIGxpbmUgYXYgbmdvbiBkdSB0cm9yIGF0dCBkaW4gbWFrZSBza3VsbGUgbG9ja2FzIHRpbGwgb2NoIHNlZGFuIGJyamEgZmxpcnRhLiBNbmdhIGZydWFyIGhhciBmcmFtZ25nc3Jpa3QgYW52bnQgZGVubmEgdGVrbmlrLgpBdCBiZXN0IHlvdSBub3RpY2UgdGhhdCB3aGVuZXZlciBhbiB1bmtub3duIHBsYXllciBzaGlwcyBpdCB3aXRoIDY0LCB0aGV5IHdpbiB3YXkgbW9yZSBvZnRlbiB0aGFuIHRoZXkgc2hvdWxkLiAKQWxzbyBrbm93biBhcyBQcmluY2UgU2lkZGhhcnRoYSBpcyB0aGUgZm91bmRlciBvZiBCdWRkaGlzbS4gV2hvIHVwb24gc2VlaW5nIHRoZSBtaXNlcnkgYW5kIGRlYXRoIGluIHRoZSB3b3JsZCwgc2FjcmlmaWNlZCBtYXRlcmlhbGlzdGljIHBsZWFzdXJlcyBpbiBzZWFyY2ggb2YgZW5saWdodGVubWVudC4gT3RoZXJzIGdpdmUgbGlzdHMgb2YgMjQgKEJoYWdhdmF0YW0gZm9yIGV4YW1wbGUpLiBJbiB0aGVmb3JtIG9mIE1hdHN5YSBZb3UgcmVzY3VlIHRoZSBWZWRhcywgYW5kIGFzIEt1cm1hIFlvdSBiZWFyIHRoZSBNYW5kYXJhIE1vdW50YWluIG9uIFlvdXIgYmFjay4gCk1lYW53aGlsZSwgU05DIExhdmFsaW4gY291cnQgYWN0aW9uIHNpbW1lcmVkIGF3YXkgaW4gdGhlIGJhY2tncm91bmQuCkxlIGRpY3Rpb25uYWlyZSBlbnJlZ2lzdHJlIGVuIGVmZmV0IGxlcyB1c2FnZXMgZCd1biBtb3QgZXQgcHJjaXNlIGxlcyBjb250ZXh0ZXMgbyBpbCBlc3QgaW50ZXJ2ZW51LCBjJ2VzdCB1bmUgbW1vaXJlLCB1biB0YWJsZWF1IG51YW5jIGRlIHNlcyBjYXBhY2l0cyAgc2lnbmlmaWVyLCB1bmUgcnNlcnZlIHBvdXIgZGVzIGVtcHJ1bnRzIGZ1dHVycy4gCkkgbGl0ZXJhbGx5IHRyaWVkIGV4cGxhaW5pbmcgdGhpcyB0byBteSBwYXJlbnRzIGEgZmV3IG1vbnRocyBhZ28uIFRoZSBlbGVjdG9yYWwgY29sbGVnZSBkb2Vzbid0IGZhdm9yICJydXJhbCIgdnMgInVyYmFuIiwgeWVzIHNtYWxsZXIgc3RhdGVzIGhhdmUgc29tZXdoYXQgbW9yZSBpbmZsdWVuY2UgdGhhbiBsYXJnZXIgc3RhdGVzIHBlciB2b3RlciwgYnV0IGl0IHJlYWxseSBhbGwgaGluZ2VzIG9uIHRoZSBiYXR0bGVncm91bmQgc3RhdGVzLiBBbmQgZnVydGhlciBpdCBkb2Vzbid0IG5lY2Vzc2FyaWx5IGZhdm9yIG9uZSBwYXJ0eSBvdmVyIHRoZSBvdGhlciwgc29tZXRpbWVzIGl0IGZhdm9ycyBvbmUsIHNvbWV0aW1lcyB0aGUgb3RoZXIsIGFuZCBpZiBUZXhhcyB3ZXJlIHRvIGJlIHNsaWdodGx5IG1vcmUgRGVtb2NyYXQgbGVhbmluZywgdGhlIEVDIHdvdWxkIGZhdm9yIERlbW9jcmF0cywgYW5kIHRoZXkgdG9vIGNvdWxkIHdpbiB0aGUgRUMgd2l0aG91dCB3aW5uaW5nIHRoZSBwb3B1bGFyIHZvdGUuClRoZXJlIGFyZSBtYW55IGltcGxpZWQgYWR2YW50YWdlcyB0aGF0IHdvdWxkIGp1c3QgYmUgc3RyYW5nZSBpZiBsYXJnZSBQQ3MgZGlkbiBoYXZlIGFuZCB0aHVzIHdvdWxkIHJ1aW4gaW1tZXJzaW9uLiAKRG9uIDMgYmV0IHN1aXRlZCBjb25uZWN0b3JzIGZyb20gdGhlIFNCIG92ZXIgYW4gb3BlbiBhbmQgc2V2ZXJhbCBjYWxsZXJzLiAKV2hhdCBpcyB5b3VyIHBvaW50PyBTQSBzaG91bGQgYmUgdHJpZWQgZm9yIGNyaW1lcyBoZSBjb21taXR0ZWQuIElmIHN1ZmZpY2llbnQgbGVnaXQgZXZpZGVuY2Ugc3VwcG9ydHMgcHJvc2VjdXRpb24gZm9yIGFueSBvZiB0aGUgYWJvdmUgbGlzdGVkIGNyaW1lcyBJIGFsbCBmb3IgaXQsIGFuZCBJIHN1c3BlY3QgbW9zdCBvZiB0aGUgInRydXRoZXJzIiB3aWxsIGJlIGFzIHdlbGwuIApJIGNob3NlIGhlciwgYmVjYXVzZSBJIHdhbnRlZCB0aGUgQkJCSi4gRXZlbnR1YWxseSwgd2hpbGUgZnVja2luZyBoZXIsIEkgYXNrZWQgaWYgSSBjb3VsZCBjdW0gaW4gaGVyIG1vdXRoLiBTaGUgb2JsaWdlZC4gCkkgYSB0YWxsIGFuZCBzdWJzdGFudGlhbCBwZXJzb24sIHdpdGggYSBidXN0IHNvIEkgaGF2ZSB0byBzaXplIHVwLCBidXQgd2l0aG91dCBndXkgc2hvdWxkZXIgd2lkdGgsIHNvIEkgaHVudCBkb3duIHJhZ2xhbiBzbGVldmVzIGZvciBtZW4gc3dlYXRlcnMgYW5kIHN3ZWF0c2hpcnRzLiBJZiB5b3Ugd2FudCB0byBzaG9wIGluIHRoZSBtZW4gZGVwYXJ0bWVudCB3aXRob3V0IHRoZSBzaG91bGRlciBzZWFtIGluIHRoZSB3cm9uZyBwbGFjZSwgdGhpcyByZWFsbHkgaGVscHMuIApJIGhhdmVuIHJlY2VpdmVkIGFueSBmZWVkYmFjayBhdCBhbGwgaW4gbGl2aW5nIG1lbW9yeS4gClRoZXJlIGlzIGEgc3Vic2V0IG9mIGJyZXdlcnMgeWVhc3QgdGhhdCBpcyByZWZlcnJlZCB0byBhcyAidmFyLiBEaWFzdGF0aWN1cyIgd2hpY2ggY2FuIHByb2R1Y2UgZ2x1Y29hbWx5YXNlLiBNb3N0IFNhaXNvbiB5ZWFzdCBmYWxsIGludG8gdGhhdCBjYXRlZ29yeS4gCkRhbm55IEdhcmNpYSByZW1haW5zIHVuZGVmZWF0ZWQgd2l0aCBuaW50aApVbml2ZXJzaXR5IG9mIEFyaXpvbmEKTGVhbiBhbmQgbWVhbiEgQ29ja2VkLCBsb2NrZWQgYW5kIHJlYWR5IHRvIHJvY2suIFJvdWdoLCB0b3VnaCBhbmQgaGFyZCB0byBibHVmZi4gClRyeWluZyB0byBwaWNrIHVwIHRoZSBwYWNlIGhlcmUsIHRob3VnaCBsb29raW5nIGF0IG15IHNwbGl0cyB0aGF0IGRpZG4gaGFwcGVuIGF0IGFsbC4gRmFjZSBpcyBzZXJpb3VzbHkgZnJvemVuLiAKVGhlIEFzc29jaWF0ZWQgUHJlc3MgY29udHJpYnV0ZWQgdG8gdGhpcyByZXBvcnQuIApBcyBmb3IgZm9vZCAgIGJ1eWluZyBmb29kIGF0IGFueSBjb24gaXMgYSByaWRpY3Vsb3VzIHNoYW0uIApXaGlsZSB0aGlzIG1pZ2h0IGJlIGNvbnNpZGVyZWQgYSBjb3JvbGxhcnkgdG8gY3VzdG9taXphYmlsaXR5LCBJIHRoaW5rIGl0IGlzIGFjdHVhbGx5IGEgYml0IGRlZXBlciBiZWNhdXNlIGl0IGNhbiBzdXBwb3J0IGRpdmVyc2l0eSB3aXRoaW4gdGhlIHNhbWUgc3lzdGVtLCBub3QganVzdCBvbmUgcmVhbGx5IHNwZWNpZmljIHNldCBvZiBvcHRpb25zLi4gCkl0IHdhcyBhIHN0YW5kYXJkIDQgYmVkcm9vbSBmYW1pbHkgaG91c2UsIG5vdCBhIG1hbnNpb24uIApXaGVuIGl0IGNvbWVzIHRvIHRoZSBsYWJlbGluZyBvZiBhIGRvZydzIGJyZWVkIG9yIGJyZWVkcywgZ2Vub21lIHNjaWVuY2Ugd2lsbCBhY3R1YWxseSBvbmx5IHNob3cgdGhhdCBhIGZyYWN0aW9uIG9mIHRoZSBjaGFyYWN0ZXJpc3RpY3Mgb2YgYSBkb2cncyBicmVlZChzKSB3aWxsIGJlIGFwcGFyZW50IHNpbXBseSBieSBzaWdodC4gCkkgdGhpbmsgaXQga2luZCBvZiBmdW5ueSwgYnV0LCB0aGVyZSBubyBodW1vdXIgdG8gYmUgZm91bmQgb24gdGhpcyBzdWIgdGhlc2UgZGF5cy4gSXQgaW50ZXJlc3RpbmcgdGhhdCBldmVyeSBzaW5nbGUgdGltZSB0aGVyZSBtb3ZlbWVudCBpbiB0aGlzIGNhc2UgdGhleSB3aWxsIGRpc21pc3MgaXQgYXMgYmVpbmcgbm90aGluZy4gCllvdSB3ZXJlIHdyb25nIGluIHlvdXIgYXBwcm9hY2guIFlvdSBzaG91bGRuIHRyeSBhbmQgaW1wcm92ZSB0aGUgc2l0dWF0aW9uLCBqdXN0IGZpbmQgYSBzb2x1dGlvbi4gClRoZSBtb3N0IHByZXNzaW5nIGlzc3VlIHdhcyBob3cgdGhlIGhlbGwgdG8gZml0IGEgcmlvdCBzaGllbGQgaW4gYSBGdW5PbmUuKChCcnV0ZSBGb3JjZSBBdHRhY2sgRGVja2VyIHdpdGggYSBiaWcgb2xkIHNoaWVsZCkpLiAKV2UgYXJlIG1vc3RseSBhIHNwZWNpZXMgb2Ygb3Bwb3J0dW5pc3RpYyBnYXRoZXJlcnMgdGhhdCBwcmltYXJpbHkgcmVseSBvbiBwbGFudCBjYWxvcmllcy4gClNlYVR1cnRsZXNDYW5GbHkgdQpJJ20gYSBndXkuIEkndmUgb25seSBvcmdhc21lZCBhIGhhbmRmdWwgb2YgdGltZXMgaW4gbXkgbGlmZSwgYW5kIHdoYXQgZGlkIGl0IGZvciBtZSB3YXMgYSBoYW5kZnVsIG9mIEhGTyAoaGFuZHMgZnJlZSBvcmdhc20pICJoeXBub3NpcyIgc3R5bGUgYXVkaW8gZmlsZXMgKGFuZCBhIGNvdXBsZSB0aW1lcyB3aXRoIG15IGZpYW5jIGFmdGVyIGRpc2NvdmVyaW5nIHRob3NlIGZpbGVzIGFuZCBraW5kIG9mIGxlYXJuaW5nIGhvdyBteSBib2R5IGJ1aWxkcyB1cCB0byB0aGF0IGtpbmQgb2YgZXhwZXJpZW5jZSkuIEkgaGlnaGx5IHJlY29tbWVuZCB0aGF0IGFueSBvdGhlciBndXlzIHJlYWRpbmcgdGhpcyBkbyBzb21lIHBlcnNvbmFsIHJlc2VhcmNoIGFuZCB0cnkgdG8gZGlzY292ZXIgd2hhdCBhIHJlYWwgbWFsZSBvcmdhc20gZmVlbHMgbGlrZSAoaWYgeW91IHdhbnQgdG8gZ28gZG93biB0aGUgc2FtZSByb3V0ZSBJIGRpZCwgY2hlY2sgb3V0IHIvTWlzc01hcmllQ2hlcnJ5IGFuZCByL1NoaWJieVNheXMgKQpJZiBoZSBjYW4gdHVybiBhcm91bmQgYW5kIHNlbGwgdGhhdCBDUFUgZm9yICQxMDAgKFdoYXQgeW91IHNheSBpdCBpcyB3b3J0aCwgSSBkb24gZm9sbG93IHRoZSB1c2VkIENQVSBtYXJrZXQgdG9vIHdlbGwpIFRoZW4gbWF5YmUgeW91IGNvdWxkIG1ha2UgYSBiZXR0ZXIgYnVpbGQgdXNpbmcgbmV3IHBhcnRzLCBidXQgSSBmZWVsIGl0IHdvdWxkIGJlIGNsb3NlLiAKTm90IGV2ZXJ5IGRlbWFuZCBpcyBhIHJlYXNvbmFibGUgYm91bmRhcnkgYW5kIHNob3VsZG50IGJlIGRlZmVuZGVkIGFzIHN1Y2guLiAKVGhlIGZhY3QgdGhhdCB0aGV5IGFyZW4ndCB3aWxsaW5nIHRvIGlzIHN1c3BlY3QuLiAKT25jZSB5b3UgZG9uZSB0aGF0LCBzb2xkZXIgb24gYSBVU0IgY29ubmVjdG9yIHRvIHRoZSBiYXR0ZXJ5IG91dHB1dCBhbmQgeW91IGJlIGFibGUgdG8gdXNlIGEgVVNCIHBvd2VyIG1ldGVyIChzZWFyY2ggZWJheSkuIApJIGhvcGUgbXkgcmVzcG9uc2UgZXZlbiBtYWRlIHNlbnNlLgpCdXQgd2hlbiB5b3Uga25vdyB5b3UgaGF2ZSB0aGUgdGltZSBhbmQgeW91IHN0cnVjdHVyZSB5b3VyIHNlc3Npb24gYXBwcm9wcmlhdGVseSwgaXQgcHJldHR5IGtpbGxlci4gUGx1cyB5b3UgZ2V0IGludG8gYSByaHl0aG0gYW5kIHN0dWZmIGp1c3QgZmxvd3MuIApIZXJlIGlzIGp1c3Qgb25lIGV4YW1wbGUgYXJ0aWNsZSB0aGF0IHNob3dzIHdoYXQgSSBtZWFuLiBNdWx0aXBsZSBleHBlcnRzIGdpdmluZyBkaWZmZXJlbnQgYW5zd2VycyB0byB0aGUgc2FtZSBxdWVzdGlvbiBsb2wuLiAKV2Ugc3BlbnQgYSB0b24gb2YgdGltZSBvbiBjaXZpY3MsIHRoZSBjb25zdGl0dXRpb24gYW5kIHBoaWxvc29waHkgb2Ygb3VyIGZvdW5kaW5nIGZhdGhlcnMsIGFuZCBBTEwgbXkgZnJpZW5kcyBhbmQgdGhlaXIgZmFtaWxpZXMgd2VyZSBjb25zZXJ2YXRpdmUuLiAKVGhlIGtleSBzb3VyY2UgdGV4dHMgZm9yIGFsbCBzY2hvb2xzIG9mIFZlZG50YSBhcmUgdGhlIFByYXN0aGFuYXRyYXlpLCB0aGUgY2Fub25pY2FsIHRleHRzIGNvbnNpc3Rpbmcgb2YgdGhlIFVwYW5pc2hhZHMsIHRoZSBCaGFnYXZhZCBHaXRhIGFuZCB0aGUgQnJhaG1hIFN1dHJhcywgb2Ygd2hpY2ggdGhleSBnaXZlIGEgcGhpbG9zb3BoaWNhbCBpbnRlcnByZXRhdGlvbiBhbmQgZWx1Y2lkYXRpb24uCkhlIHdhcyBuYW1lZCBHTSBwcmVzaWRlbnQgaW4gMTk2Ny4gCkl0IGluc2FuZWx5IHN0dXBpZCB0aGF0IHlvdSBzZWVtIHRvIHRoaW5rIHRoYXQgQW1lcmljYW5zIGFyZSBvd2VkIGEgc3VjY2Vzc2Z1bCBjb21wYW55IG5vIG1hdHRlciBob3cgYmFkIHRoZXkgYXJlIGF0IHJ1bm5pbmcgaXQgYnV0IEFtZXJpY2FuIHdvcmtlcnMgaGF2ZSB0byBwcm92ZSB0aGVtc2VsdmVzIG9yIGVsc2UgdGhleSBkZXNlcnZlIHRvIG1ha2Ugbm8gbW9uZXkgYmVjYXVzZSBzb21lb25lIHdpbGwgZG8gaXQgZm9yIGNoZWFwZXIuIApUaGlzIGlzIG5vIG1pc3Rha2UsIHRoZXkgYXJlIGFjdGl2ZWx5IGF0IHdhciB3aXRoIG91ciBEZW1vY3JhY3kgb24gZXZlcnkgZnJvbnQsIGFuZCBhcmUgcHJpb3JpdGl6aW5nIHRoZWlyIGFsbGVnaWFuY2VzIHdpdGggaG9zdGlsZSBmb3JlaWduIGFkdmVyc2FyaWVzIGFuZCBiaWxsaW9uYWlyZXMgb3ZlciBjYXJyeWluZyBvdXQgdGhlaXIgQ29uc3RpdHV0aW9uYWwgZHV0aWVzLi4gCk5vdywgZXZlbiB0aG91Z2ggVUhGIGlzbid0IGV4YWN0bHkgYSBncml0dHkgZG9jdW1lbnRhcnkgYWJvdXQgdGhlIGxhdGUgJzgwcyBtZWRpYSBsYW5kc2NhcGUsIGEgY2hhcmFjdGVyIGRvZXMgYWNjdXJhdGVseSBtZW50aW9uIHRoYXQgaXQncyBpbGxlZ2FsIGZvciBzb21lb25lIHRvIG93biB0d28gc3RhdGlvbnMgaW4gdGhlIHNhbWUgdG93bi4gT3IgYXQgbGVhc3QsIHRoYXQncyBob3cgaXQgd2FzIGJhY2sgdGhlbi4gCkx1Y2tpbHkgSSBrbm93IHRoYXQgaGltIGFuZCBoaXMgZ2lybGZyaWVuZCBib3RoIGxvdmUgdG8gc2NoZW1lIGFuZCBoYXZlIHN0b2xlbiB0aG91c2FuZHMgb2YgZG9sbGFycyB3b3J0aCBvZiBkZXNpZ25lciBzdHVmZiBmcm9tIGNsb3RoaW5nIHN0b3Jlcy4gSSBlbmRlZCB1cCBwdWxsaW5nIGEgbW92ZSB3aGljaCBJIGRvbid0IGtub3cgaWYgSSBzaG91bGQgYmUgYXNoYW1lZCBhYm91dCBvciBub3QsIEkgdG9sZCBoaW0gaGUgaGFzIHR3byBkYXlzIHRvIGdpdmUgdXMgYWxsIG91ciBtb25leSBiYWNrIG9yIEknbGwgYmUgcmVwb3J0aW5nIGhpbSBhbmQgaGlzIGdpcmxmcmllbmQgdG8gdGhlIHBvbGljZSBmb3IgdGhlIHRob3VzYW5kcyBvZiBkb2xsYXJzIG9mIHRoZWZ0IHRoZXkgaGF2ZSBkb25lLiAKQ29udHJhc3QgaXMgY2VydGFpbmx5IHRoZXJlICgiVGhlcmUgYXJlIGRhcmsgc2hhZG93cyBvbiB0aGUgZWFydGgsIGJ1dCBpdHMgbGlnaHRzIGFyZSBzdHJvbmdlciBpbiB0aGUgY29udHJhc3QuIiBDaGFybGVzIERpY2tlbnMsIFRoZSBQaWNrd2ljayBQYXBlcnMpLCBlc3BlY2lhbGx5IGluIHRoZSBjb3JuZXIgYml0cywgd2hlcmUgb24gY2xvc2VyIGluc3BlY3Rpb24gdGhlIGJsYWNrbmVzcyBpcyByZWFsbHkgbW9yZSB3aGl0ZSB0aGFuIGJsYWNrLiBJbiBhbnkgZXZlbnQsIHRoZSBwcmludCBzdWdnZXN0cyAiY29sb3IiIHRvIG1lIGZvciBubyBnb29kIHJlYXNvbiwgZXhjZXB0IHBlcmhhcHMgdGhhdCBpdCBsb29rcyB2ZXJ5IGNvbGQsIGFuZCBjb2xkIGlzIHN1Z2dlc3RpdmUgb2YgaWNlIGJsdWUsIGFuZCB0aGUgZ29vZCBjb250cmFzdCBmb3IgdGhhdCBpcyB5ZWxsb3cuIApJIGRvIG5vdCBrbm93IHRoZSBzb2x1dGlvbi4gQnV0IGV2ZXJ5IHRpbWUgSSByZWFkIHNvbWV0aGluZyBhYm91dCBpdCwgaXQganVzdCBwb2ludHMgYXQgdGhlIHByb2JsZW0gZnJvbSBhIGhpZ2ggbGV2ZWwgYW5kIGl0IG5ldmVyIHJlYWxseSBtYWtlcyBwb2xpY3kgYW5kIGxhdyBtYWtlcnMgYWNjb3VudGFibGUgdG8gZmluZCBhIHNvbHV0aW9uLkl0IGlzIGFzIGlmIHBlb3BsZSBkbyBub3QgcmVhbGx5IGNhcmUgdGhhdCBtdWNoLiAKQXZleiB2b3VzIGNvbm51IGRlcyBleHByaWVuY2VzIGRlIGNlIHR5cGUgPyBRdSdhdmV6IHZvdXMgZmFpdCA/CkFuYWwgc2V4IGNhbiBiZSB2ZXJ5IHBsZWFzdXJhYmxlIGZvciB3b21lbiBiZWNhdXNlIHRoZSByZWN0dW0gc2hhcmVzIGEgd2FsbCB3aXRoIHRoZSB2YWdpbmEsIGFuZCB0aGUgc2V4dWFsIG5lcnZlcyBhcmUgYWN0dWFsbHkgY2xvc2VyIG9uIHRoYXQgc2lkZSwgd2hpY2ggbWFrZXMgdGhlIHNlbnNhdGlvbiB1bmlxdWUsIHN0cm9uZ2VyIGFuZCBxdWl0ZSBwb3NzaWJseSBvcmdhc21pYy4gTXkgcG9zdApUaGUgd29tYW4gZXZlbnR1YWxseSB0b2xkIG9uZSBvZiBIdWVobidzIGZyaWVuZHMgdGhhdCBzaGUgd291bGQgbm90IHNlcnZlIHRoZW0sIHdoaWNoIGxlZCBtYW5hZ2VtZW50IHRvIHB1YmxpY2x5IHJlYnVrZSBoZXIsIGl0IHNheXMuIEEgZmV3IHdlZWtzIGxhdGVyLCBzaGUgcmVzaWduZWQsIGZlZWxpbmcgdGhhdCBzaGUgY291bGQgbm90IGNvbnRpbnVlIHRvIHdvcmsgaW4gdGhlIGNoaXJvcHJhY3RvcidzIHByZXNlbmNlLCB0aGUgZG9jdW1lbnQgc2F5cy4KSSBrbmV3IGhlIGFsd2F5cyBwdXQgbXkgc29uIGFuZCBhbnkgZnV0dXJlIGtpZHMgZmlyc3QuIApUaGVyZSBpcyBhIHJlYXNvbiB0aGF0IHByb2Zlc3Npb25hbCBnYW1ibGVycyBhcmUgYWJsZSB0byBtYWtlIGEgbGl2aW5nIGZyb20gdGhlIGNhc2lub3MgYW5kIHRoaXMgcHJvZ3JhbSB3aWxsIHNob3cgeW91IHRoZSByaWdodCBDYXNpbm8gR2FtYmxpbmcgSW5mb3JtYXRpb24uIApJIHJlbWVtYmVyIHdlIHBhcmtlZCBhdCBhbiBlbGVtZW50YXJ5IHNjaG9vbCBhbmQganVzdCBiZWhpbmQgaXQgdGhlcmUgd2FzIHRoaXMgcGxhY2UuIApOb3QgcmVsaWdpb3VzIGJ1dCwgeW91IGNhbiBxdW90ZSBwYXNzYWdlcyBmcm9tIExldml0aWN1cyBhbGwgZGF5IGJ1dCB0aGF0J3Mgbm90IGdvaW5nIHRvIG1lYW4gc2hpdCB0byB0aGVtLiBNb3N0IENocmlzdGlhbnMgbm93IGFkYXlzIGZvbGxvdyBuZXcgdGVzdGFtZW50IHdoaWNoIGVzc2VudGlhbGx5IG1ha2VzIGFsbCB0aGUgZmlyZSBhbmQgYnJpbXN0b25lIHNoaXQgbnVsbCBhbmQgdm9pZC4gClR1cm5zIG91dCB0aGUgcHJlIGNvbXBpbGVkIHZlcnNpb24gd2FzIHNvbWVob3cgYnJva2VuLiAKTWVtZW50b21vcmkxNjA2ICAzIHBvaW50cyAgc3VibWl0dGVkIDIwIGRheXMgYWdvCkl0IHN1ZmZlcmluZywganVzdCBsaWtlIGFueSBvdGhlciBsaXZpbmcgYmVpbmcgb24gdGhpcyBlYXJ0aCB0aGF0IGhhZCB0byBzY2F2ZW5nZSBmb3IgZm9vZCBldmVyeSBkYXkgb2YgaXRzIGxpZmUgb3IgZGllIG9mIHN0YXJ2YXRpb24gYW5kIG1pcmFjdWxvdXNseSBkb2VzbiBnaXZlIGEgc2luZ2xlIGVtcGF0aGV0aWMgc2hpdCBhYm91dCBhbnkgb3RoZXIgbGl2aW5nIHRoaW5nIGl0IGhhcm1zIGJlY2F1c2UgaXQgb3BlcmF0aW5nIG9uIGJhc2ljIGluc3RpbmN0dWFsIGxldmVsIDooLiAKSnRyaWFuZ2xlICAzIHBvaW50cyAgc3VibWl0dGVkIDEgaG91ciBhZ28KU2hlIGhhcyB0byB2aWV3IHZpZGVvL3Bob3RvIGV2aWRlbmNlIG9mIHZpY3RpbXMgYW5kIGludGVydmlldyB0aGUgYWxsZWdlZCB2aWN0aW1zIGFuZCB0aGVpciBmYW1pbGllcy4gClRyZW1lbnMgIDMgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KWW91IG1pZ2h0IHdhbnQgdG8gdGhpbmsgdHdpY2UgYWJvdXQgaW5zdGFsbGluZyB0aGF0IHN0cmlwcGVyIHBvbGUgaW4gdGhlIGNvcm5lciwgYnV0IGEgcG9rZXIgdGFibGUgKHByZWZlcmFibHkgY3VzdG9tIG1hZGUpIGlzIGEgbm8gYnJhaW5lci4gCkNvdWxkbiBnbyBzaG9wcGluZyBhbG9uZSBvciBidXkgYSBkcmluayBhdCBhIGJhciBmb3IgdGhlIHNhbWUgcmVhc29ucy5UaGVzZSBkYXlzIEkgYXMgZ29vZCBhcyBJIHRoaW5rIEkgZ2V0LiAKU28gbG9uZyBzdG9yeSBzaG9ydCwgc3RyZWFtIHNuaXBpbmcgaGFzIGEgMSBpbiAxMDAwIGNoYW5jZSBvZiBwcmV2ZW50aW5nIHlvdSBmcm9tIGdldHRpbmcgYm9hcmRlZCwgbWF5YmUuIEJ1dCBpbiBvdXIgY2FzZSwgSSBndWVzcyB5b3UgY2FuIGFyZ3VlIHdlICJzbmlwZWQiIGhpbSwgd2hpbGUgc3RpbGwgd2FpdGluZyBmb3Igd2hvbWV2ZXIgd2FzIGdvaW5nIHRvIHRyeSBhbmQgYm9hcmQgdXMgdGhhdCB3ZSBrbmV3IGFib3V0IGFueXdheS4KQSBiaXQgZGlzYXBwb2ludGVkIGluIEdyZWcgcmV0dXJuLiAKSGVyZSBwZW9wbGUgb3Blbmx5IGRyaW5rIGJyZWFrZmFzdCwgZ2FtYmxlIGF3YXkgdG9ucyBvZiBtb25leSwgYW5kIHNlZW0gdG8gaGF2ZSBub3QgZ290dGVuIHRoZSBtZW1vIHRoYXQgYWxsb3dpbmcgdGhvdXNhbmRzIG9mIHBlb3BsZSB0byBjaGFpbiBzbW9rZSBpbiBlbmNsb3NlZCBzcGFjZXMgaXMgbm90IGEgZ29vZCBpZGVhLi4gCk1lbiBhcmUgcmVhbGx5IGd1biBzaHkgYWJvdXQgbWFycmlhZ2Ugbm93IGJlY2F1c2Ugc28gbWFueSB3b21lbiB1c2UgdGhlIGRpdm9yY2UgbGF3cyBhcyBhIHdlYXBvbiwgbm90IGEgc2hpZWxkLCBhbmQgdGhpcyBoYXMgYmVlbiBnb2luZyBvbiBmb3IgNDAgeWVhcnMuLiAKR3JlZWt0b3duIENhc2lubyBIb3RlbCBoYXMgNDAwIGhvdGVsIHJvb21zLCAxMDAsMDAwIHNxdWFyZSBmZWV0IG9mIGNhc2lubyBzcGFjZSwgYXBwcm94aW1hdGVseSAyLDcwMCBnYW1pbmcgbWFjaGluZXMgYW5kIDYwIHRhYmxlIGdhbWVzLCBhIHBva2VyIHJvb20sIHRocmVlIHJlc3RhdXJhbnRzLCBmaXZlIHF1aWNrIHNlcnZlIGZvb2Qgb3V0bGV0cywgdGhyZWUgYmFycyBhbmQgYSBjb2ZmZWUgc2hvcC4KV2FydW0gc29uc3Qgc29sbHRlIG1hbiBpbiBlaW5lbSBuaWNodCBSZWdpZXJ1bmdzcGFybGFtZW50IGVpbmUgV2FobGhyZGUgZWluZmhyZW4sIHdlbm4gbWFuIG5pY2h0IGF1Y2ggaW0gbGV0enRlbiBXaW5rZWwgZGVuIGxldHp0ZW4gV2lkZXJzdGFuZCBpbSBLZWltIGVyc3RpY2tlbiB3aWxsPy4gCkFueW9uZSBjYW4gZmVlbCBmcmVlIHRvIHJlYWNoIG91dCBhdCBhbnkgdGltZSBmb3Igb2JqZWN0aXZlIHJlYWwgZXN0YXRlIG9yIGJ1c2luZXNzIGFkdmljZSBhbmQgSSBsb29rIGZvcndhcmQgdG8gc2hhcmluZyBteSB0aG91Z2h0cyB3aXRoIHRoaXMgY29tbXVuaXR5Li4gCllvdSBzYW5jdGlvbiB0aGlzIFtidXNpbmVzc10geW91IHdvdWxkIGJlIGFsbG93aW5nIGFuIGlsbGVnYWxpdHksIHNhaWQgTXIgSm9yZGFuLgpJbiBhZGRpdGlvbiwgVUNMQSBSZWNyZWF0aW9uIG1hbmFnZXMgMTQgb2YgdGhlIFVuaXZlcnNpdHkncyByZWNyZWF0aW9uYWwgYW5kIGF0aGxldGljIGZhY2lsaXRpZXMgb2ZmZXJpbmcgcmVjcmVhdGlvbiwgc3BvcnQsIGFuZCBudW1lcm91cyBtdWx0aSB1c2Ugb3B0aW9ucyBmb3Igc3R1ZGVudCBhbmQgdW5pdmVyc2l0eSBldmVudHMuLiAKSSBwbGF5ZWQgaXQgYXQgbXkgd2VkZGluZy4gClRoZSBmYWN0IHRoYXQgaGUgY291bGRuIHdhaXQgdW50aWwgdGhlIHN1bW1lciB0cmFuc2ZlciB3aW5kb3cgd291bGQgYmUgaW5mdXJpYXRpbmcuIFRoaXMgd2lsbCBsZWF2ZSBvdXIgdGVhbSB3aXRoIGEgbWFqb3Igdm9pZCBoZWFkaW5nIGludG8gdGhlIENDTCBhbmQgdGhlIHN0YXJ0IG9mIHRoZSBNTFMgc2Vhc29uLCBhbmQgaXQgc3BlYWtzIHZvbHVtZXMgYWJvdXQgaGlzIGNoYXJhY3RlciBhbmQgaG93IGhlIHZpZXdzIGhpcyB0ZWFtbWF0ZXMgYW5kIHRoZSBBdGxhbnRhIFVuaXRlZCBmYW5zLi4gCkNsZnJlbmNoIHUKVGhleSBoYWQgaXQgcmVwbGFjZWQgYWZ0ZXIgdGhlIHRhbmsgaXRzZWxmIChhIG1ldGFsIHRhbmspIHdhcyBmaW5hbGx5IGF0IGZhaWxpbmcgcG9pbnQgKGl0IHdhcyBhcm91bmQgMzAgeWVhcnMgb2xkIGkgdGhpbmsgYXQgdGhhdCBwb2ludCBhbmQgdGhlIHN0YXRlIHJlcXVpcmVkIGNlbWVudCkuIApFYXN5IHRvIGdvIGRvIGdvb2QgdGhpbmdzIHdoZW4geW91IGRvbiBoYXZlIHRvIHdvcnJ5IGFib3V0IG1vbmV5LCBzYWlkIEZyYW5jZS4KIk9rYXkhIExldCBkbyBpdCEiSSBsaWtlIHRvIHNheSBJIGhhZCB0aGUgZm9yZXRob3VnaHQgdG8ga2VlcCBoZXIgbnVtYmVyIGJ1dCwgYWxhcywgaXQgZGlkbiBvY2N1ciB0byBtZSBhdCB0aGUgdGltZS4gClE6IENhbiBJIHVzZSB3YWxrIGluIGNsaW5pY3M/CkkgaGFkIHN1Y2ggYSBydXNoIGF0IHRoZSBwb2tlciB0YWJsZSwgSSBqdXN0IHdhbnRlZCB0byBrZWVwIHBsYXlpbmcuIApJIGRvbiB0aGluayBtYW55IHBlb3BsZSBnZXQgYWRkaWN0ZWQgdG8gVG9ueSBIYXdrcyBvciBGYXIgQ3J5LiAKRXZlciB0aGluayB0aGF0IHRoZSBtYWpvcml0eSBvZiBwZW9wbGUganVzdCBiYW4gaGltIGJlY2F1c2UgcGVvcGxlIG9uIHRoZSBpbnRlcm5ldCB0ZWxsIHRoZW0gdG8/SGUgY291bGQgbGl0ZXJhbGx5IGhhdmUgMSBhYmlsaXR5IGFuZCBwZW9wbGUgd291bGQgc3RpbGwgYmFuIGhpbS4gClRoaXMgaXMgc2ltcGxlIHN0dWZmIHdlIGNhbiBicmluZyBpbnRvIHRoZSBwdWJsaWMgZXllIHRoYXQgaXMgZWFzaWx5IHZlcmlmaWFibGUgYW5kIGhvcGVmdWxseSBzd2F5IHRoZWlyIHZpZXdzIG9uIHRoZWlyIGdvdmVybm1lbnQuLiAKU28gSSBnbyBpbnRvIGV0aGVyZWFsIGZvcm0uV2hpbGUgZXZlcnlvbmUgZWxzZSB3YXMgcm9sbGluZyBkYW1hZ2UsIEkgd2FzIG1ha2luZyBDaGFyaXNtYSBjaGVja3MgdG8gY29udmluY2UgbXkgZW5lbXkgdG8gam9pbiBvdXIgc2lkZSBhbmQgcHJhaXNpbmcgdGhlIGJlbmVmaXRzIG9mIGxpY2hkb20uIDIgcG9pbnRzICBzdWJtaXR0ZWQgMSB5ZWFyIGFnb1RoYXQgaXQgaXMgaGVyIG91dGZpdCwgaXQgZG9lc24gY2hhbmdlIGdvaW5nIGZvcndhcmQuIApJcyBkaWZmaWN1bHQgdG8gcHV0IGludG8gdW5kZXJzdGFuZGFibGUgdGVybXMgb24gaG93ICJzbWFsbCIgdGhhdCBzbWFsbCBpczogYXRvbWljIG51Y2xldXMgaXMgc29ydCBvZiAxLzEwLDAwMHRoIG9mIHRoZSBhdG9tLCBhbmQgYSBwcm90b24gb3IgbmV1dHJvbiBzbWFsbGVyIHN0aWxsLCBhbmQgdGhlbiB0aGUgcXVhcmsgc21hbGxlciB0aGFuIHRoYXQsIHVudGlsIHBlcmhhcHMgaXQgYmVjb21lcyBhIFNldXNzaWFuIGV4ZXJjaXNlIHdpdGggZnV0dXJlIGRpc2NvdmVyaWVzIHNob3dpbmcgdGhhdCBhZnRlciBldmVyeXRoaW5nIGlzIHNhaWQgYW5kIGRvbmUgdGhhdCBpdCBpcyB0dXJ0bGVzIGFsbCB0aGUgd2F5IGRvd24uIFRob21zb24gbWFuYWdlZCB0byBwdXQgYW4gdW5kZXJzdGFuZGFibGUgYXNzZXNzbWVudCBvbiBhIHZlcnkgZGlmZmljdWx0IHZpc3VhbGl6YXRpb24sIHRhbGtpbmcgaW4gdGVybXMgb2YgYW4gYXRvbSBiZWluZyAiMS8xMCwwMDAsMDAwIG9yIGZyb20gMS8xMCwwMDAsMDAwIHRvIDEvMTAwLDAwMCwwMDAgb2YgYSBjZW50aW1ldHJlIGluIGRpYW1ldGVyIiwgb3IgMXgxMCA3bWV0ZXJzLCB3aGljaCBpcyBqdXN0IGFib3V0IHRoZSBzaXplIG9mIGEgY2VsbCBudWNsZXVzIG9yIEROQTsgdGhhdCBpbiB0aGUgbmVpZ2hib3Job29kLCBlc3BlY2lhbGx5IGlmIHlvdSBsb29rIGF0IHRoZSBzbWFsbGVyIG51bWJlciB3aGljaCBpcyAxMCA4IG1ldGVycywgd2hpY2ggc3RhcnRzIHRvIGNsb3NlIGluIG9uIHRoZSBzaXplIG9mIHRoZSBtYXNzaXZlIGNhcmJvbiBhdG9tICgxMCAxMCksIGJ1dCBzb3J0YSBub3Qgc28gY2xvc2UgdG8gdGhlIGVsZWN0cm9uICgxMCAxMikgLCBvciBjYXJib24gYXRvbSBudWNsZXVzICgxMCAxNCkgb3IgcHJvdG9uICgxMCAxNSkuIApNb3Zpbmcgb24gdG8gc3BvcnRzIG1hc3NhZ2UgdGhlcmFweSBpbiBTeWRuZXksIGZvciBhIHBlcnNvbiB0aGF0IHN0cnVnZ2xlcyB3aXRoIHNvcmUgbXVzY2xlcyBpdCBjYW4gb25seSBkbyB3b25kZXJzLiAKIExlcyBmZW1tZXMgYXBwcmVubmVudCBsZXMgdW5lcyBkZXMgYXV0cmVzLCBjb25zdGF0ZSBsYSBwc3ljaG9sb2d1ZSBjbGluaWNpZW5uZSBNYXJ5c2UgVmFpbGxhbnQuIApPdmVyYWxsIGxvb2tzIHZlcnkgc29saWQuIApUaGVyZSBhcmUgYSBsb3Qgb2Ygd2lubmluZyBjaGFuY2VzLiBZb3VyIHdpbm5pbmcgZGVwZW5kcyBvbiB2YXJpb3VzIGZhY3RvcnMuIEl0IGlzIGZhY3QgdGhhdCBzbG90cyBhcmUgcHVyZWx5IGdhbWUgb2YgbHVjayBhbmQgY2FuIG5vdCBiZSBtYW5pcHVsYXRlLiAKU29tZXRpbWVzIEFtZXJpY2EgY29tZXMgdG8gc2Nob29sIGhhcHB5LCBzbWlsaW5nLCBqb2tpbmcgYXJvdW5kLCBtYXliZSBhY2UgYSBmZXcgcXVpenplcyBvciBoZWxwIHdpbiB0aGUgZm9vdGJhbGwgZ2FtZS4gCkZvciB0aGF0IGhlIGJlIGZpcmVkLiBJdCBub3QgZW50aXJlbHkgaGlzIGZhdWx0LCBidXQgaGUgbm90IGJsYW1lbGVzcyBhbmQgYXQgdGhpcyBwb2ludCBpdCBwcm9iYWJseSBjb3JyZWN0IHRvIGZpcmUgaGltLiAKT3IgZXN0aW1hdGUgdGhlIHRpbWUgd2hpY2ggaXQgd2lsbCB0YWtlLiAKQW5kIHRoZXkgYXJlIHdha2luZyB1cC4gVGhleSBjb21pbmcgdGhyb3VnaCB0aGUgY3JhY2ssIGFuZCBJIGNydXNoaW5nIHRoZW0gYXMgZ2VudGx5IGFzIEkgY2FuIHNvIGFzIG5vdCB0byByaWxlIHVwIHRoZSBtZXRyb3BvbGlzIG9uIHRoZSBvdGhlciBzaWRlIG9mIHRoZSB3aW5kb3csIHdoaWxlIHRyeWluZyB0byBmb3JjZSB0aGUgd2luZG93IGNsb3NlZCwgYW5kIGZ1bGx5IGF3YXJlIHRoYXQgSSBidWNrIG5ha2VkLCBzdGFuZGluZyBvbiBpbmNyZWRpYmx5IHNsaXBwZXJ5IG1hcmJsZSBpbiBhIGJhdGhyb29tIHdpdGggbWFueSBleGNpdGluZyBwb2ludHkgZmVhdHVyZXMgd2hpY2ggYXJlIGxpa2VseSB0byBzb29uIGJlIGZlYXR1cmluZyBteSBicmFpbnMgd2hlbiBJIHNsaXAuLiAKQW5kIHdoaWxlIEkgY2FsbCBoaW0gb3V0IGZvciBub3QgaGF2aW5nIGVtZXJnZW5jeSBzdXBwbGllcyBmb3Igc2VsZiByZWNvdmVyeSBvciBzdXJ2aXZhbCwgdmVyeSBmZXcgb2YgdXMgdHJ1bHkga25vdyBob3cgd2UnZCBoYW5kbGUgc3VjaCBhbiBlbWVyZ2VuY3kuIEJleW9uZCBhIHNob3ZlbCwgc2VsZiByZWNvdmVyeSBnZWFyIGNhbiBiZSBleHBlbnNpdmUgYW5kIHJlcXVpcmUgdHJhaW5pbmcuIApMZXMgdGV4dGVzLCBxdWkgc2Vyb250IGVuc3VpdGUgZXhhbWlucyAgbCdBc3NlbWJsZSwgY29tcHJlbm5lbnQgZ2FsZW1lbnQgdW5lIGFjdHVhbGlzYXRpb24gZHUgc3RhdHV0IGQnYXV0b25vbWllIGRvbnQgYm5maWNpZSBsYSBQb2x5bnNpZS4gClRoZSBtb3N0IHN0aW11bHVzIHRvIGV4cG9ydHMgZnJvbSBhIGxvd2VyIGRvbGxhciBpcyBmb3IgbmF0dXJhbCByZXNvdXJjZXMsIHdoaWNoIG5lZWQgaXQgdGhlIGxlYXN0LCBhbmQgdGhlIGxlYXN0IHN0aW11bHVzIGlzIGZvciBtYW51ZmFjdHVyaW5nLCB3aGljaCBuZWVkcyBpdCB0aGUgbW9zdC4gVGhpcyByZWZsZWN0cyBob3cgbWFudWZhY3R1cmVycyBhZGFwdGVkIHRvIHRoZSBoaWdoZXIgZG9sbGFyIG92ZXIgdGhlIHBhc3QgZGVjYWRlLiAKVGhlIGJhbmtpbmcgaW5kdXN0cnkgaXMgbG9iYnlpbmcgQ29uZ3Jlc3MgKGFuZCB0byBhIGxlc3NlciBleHRlbnQsIHRoZSBBbWVyaWNhbiBwdWJsaWMpIHRvIGNvbnZpbmNlIHVzIHRoYXQgdGhlIGN1cnJlbnQgc3lzdGVtIG9mIHN0dWRlbnQgbG9hbnMgaXMgd29ya2luZyBqdXN0IGZpbmUuIExhc3QgVGh1cnNkYXksIHRoZSBIb3VzZSBwYXNzZWQgYSBiaWxsIHRoYXQgd291bGQgc3RvcCBnaXZpbmcgbW9uZXkgdG8gdGhlIGJhbmtzIHNvIHRoZXkgY2FuIG5vIGxvbmdlciBleHRyYWN0IHdlYWx0aCBmcm9tIHN0dWRlbnRzLiAKRXZlbiBpZiBaaXplayBpcyBjb25zY2lvdXMgaW4gdGhlIG1vbWVudCBvZiB0aGVzZSBsaW1pdHMgKGluY2x1ZGluZyBkZWNvcnVtKSBwbGFjZWQgb24gaGltLCBpdCBpcyBoYXJkIHRvIGZhdWx0IGhpbSBmb3Igbm90IGJlaW5nIGFibGUgdG8gYnJlYWsgdGhlbS4gCkluIGJ1c2luZXNzLCB5b3UnbGwgb2Z0ZW4gaGVhciB0aGUgZXhwcmVzc2lvbiBiYW5kaWVkIGFib3V0ICAgaXQgdGFrZXMgbW9uZXkgdG8gbWFrZSBtb25leSAgIHRoYXQncyAxMDAlIHRydWUuIEVudHJlcHJlbmV1cnMgcm91dGluZWx5IG1ha2UgZGVjaXNpb25zIGJhc2VkIG9uIGluY29tcGxldGUgaW5mb3JtYXRpb24uIApQbGVhc2UgZm9sbG93IC9yL01leGljb0NpdHkgcnVsZXMgYW5kIGNvZGUgb2YgY29uZHVjdApBcyBzdXJlIGl0IHdpbGwgY29udGFpbiBhIGdyZWVuIGJlcmV0LCBpdCB3aWxsIGFsc28gYmUgaG9tZSB0byBMeWNyYSBkcmVzc2VzLCB0dXR1cywgdG9nYXMsIHN1cGVyaGVybyBjYXBlcywgYW5kIGluIG15IGNhc2UgYSBwYW50b21pbWUgY2FtZWwgY29zdHVtZS4gCklmIGJvdGggb2YgeW91ciBoYW5kcyB3aW4sIHlvdSBnZXQgZG91YmxlIHRoZSBhbW91bnQgb2YgbW9uZXkuIAoiVGhpcyBpbmR1c3RyeSBpcyBvbiBpdHMgd2F5IG91dCwgYnV0IG1lYW53aGlsZSBkb2dzIGFyZSBzdWZmZXJpbmcsIiBzYWlkIEthdGUgTWFjRmFsbCwgRmxvcmlkYSBkaXJlY3RvciBmb3IgdGhlIEh1bWFuZSBTb2NpZXR5IG9mIHRoZSBVbml0ZWQgU3RhdGVzLgpJIGRvbiBrbm93LiAKSSBhbSBub3Qgc3VyZSBhYm91dCB0aGUgc3BlY2lmaWNzIG9mIEJTUFRTIGFzIGl0IHJlcXVpcmVzIGFkZGl0aW9uYWwgY2VydGlmaWNhdGlvbiBhbmQgY2xhc3Nlcy4gCld5bm4gaGFzIGRlbmllZCB0aGUgcHJldmlvdXMgbWlzY29uZHVjdCBhY2N1c2F0aW9ucyBhbmQgYXR0cmlidXRlZCB0aGVtIHRvIGEgY2FtcGFpZ24gbGVkIGJ5IGhpcyBleCB3aWZlLiAKSXQgdG9vayBhbG1vc3QgYSB3ZWVrIGZvciBoaW0gdG8gd29yayB3aXRoIGhpcyBsYXd5ZXIvY2xvc2luZyBhdHRvcm5leSB0byBnZXQgaXQgbWFpbGVkIHRvIG15IGNsb3NpbmcgYXR0b3JuZXkgc28gdGhhdCB0aGV5IGNvdWxkIHJlY29yZCB0aGUgbmV3IHRpdGxlIGluIG15IGNvdW50eSBzbyB0aGF0IHRoZSAxMDMxIHdvdWxkIGJlIGFibGUgdG8gdGFrZSBwbGFjZS4gQWxsIHRoZSBtZWFuIHdoaWxlIG15IHJhdGUgbG9jayB3YXMgZXhwaXJpbmcgYWZ0ZXIgYSAyIHdlZWsgZXh0ZW5zaW9uIGZyb20gbXkgbGVuZGVyIG9uIEFwcmlsIDMwLiAKWW9uIFJvZ2cncyBkZXNpcmVzIHdlcmUgcHJldHR5IGNsZWFybHkgbW90aXZhdGVkIGFyb3VuZCBjb250cm9sbGluZyBDYXJvbC4gSGlzIGZsYXdzIHdlcmUgYXJyb2dhbmNlIHRoYXQgaGUgY291bGQgY29udHJvbCBoZXIuCkxhYmVsIG1vbmV5IGhvbGRpbmcgY29udGFpbmVycyAocG90cykuIFBvIEtlIE5vIGlzIGEgZ2FtZSBpbiB3aGljaCBwbGF5ZXJzIHBsYXkgZm9yIG1vbmV5LiBJbiBvcmRlciB0byBiZSBvcmdhbml6ZWQgYW5kIGhhdmUgdGhlIGdhbWUgcnVuIHNtb290aGx5IGl0IGlzIG5lY2Vzc2FyeSB0byBsYWJlbCB0aGVzZSBjb250YWluZXJzLCBhbHNvIGtub3duIGFzIHBvdHMuIEl0IGlzIHBvc3NpYmxlIHRvIHBsYXkgdGhlIGdhbWUgd2l0aG91dCB0aGVzZSBjb250YWluZXJzIGJ1dCBpdCBpcyBub3QgcmVjb21tZW5kZWQuIFRoaXMgaXMgYmVjYXVzZSBhcyB0aGUgZ2FtZSBwcm9ncmVzc2VzIHBsYXllcnMgd2lsbCBiZWdpbiB0byBhZGQgbW9uZXkgdG8gZWFjaCBwaWxlIHJlc3BlY3RpdmVseSBhbmQgaXQgbWF5IGJlIGRpZmZpY3VsdCB0byBkaXN0aW5ndWlzaCBvbmUgcG90IGZyb20gdGhlIG5leHQuIFRoZXJlIGFyZSBzZXZlcmFsIGRpZmZlcmVudCBsYWJlbHMgdGhhdCBjYW4gYmUgcGxhY2VkIG9uIGVhY2ggcG90LCBidXQgdGhlcmUgYXJlIHVzdWFsbHkgZm91ciBzdGFuZGFyZCBwb3QgbGFiZWxzIHRoYXQgYXJlIHR5cGljYWxseSB1c2VkIGJ5IHBsYXllcnMgdW5pdmVyc2FsbHkuIFRoZSBsYWJlbHMgZm9yIHRoZSBwb3RzIGFyZSAsICwgRml2ZSBpbiBhIFJvdywgRm91ciBvZiBhIEtpbmQuCkl0IGEgTGF0aW4gdGVhY2hpbmcgdGV4dCB0aGF0IHdyaXR0ZW4gZW50aXJlbHkgaW4gTGF0aW4sIHdpdGggZXhlcmNpc2VzIGFuZCBwaWN0dXJlcyBhbG9uZyB0aGUgd2F5IHRvIHRlYWNoIGFuZCBkcmlsbCB0aGUgZ3JhbW1hciBpbiBhIG1vcmUgb3JnYW5pYyB3YXkuLiAKVGhlcmUgaXMgbm8gdGltZSBsaWtlIHRoZSBwcmVzZW50IHRoZXkgc2F5Li4gCk5vdyBsZXRzIHdyYXAgaXQgdXAuIE1hc3MgYm9tYmluZ3MsIGJ1cmdsYXJpZXMsIHJhcGVzLCBtdXJkZXJzLCBkZWF0aCB0b2xsIGluIHRoZSBtaWxsaW9ucywgbWFpbWVkIGFuZCBpbmp1cmVkIGluIHRoZSB0ZW5zIG9mIG1pbGxpb25zLCBwc3ljaG9sb2dpY2FsbHkgZGFtYWdlZCBpbiB0aGUgaHVuZHJlZHMgb2YgbWlsbGlvbnMsIHByb3BlcnR5IGxvc3NlcyBhbmQgZGFtYWdlcyBpbiB0aGUgdHJpbGxpb25zLCB0aGUgbG9zc2VzIG9mIHNraWxsZWQgdHJhZGVzbWVuIGFuZCBleHBlcmllbmNlZCBwcm9mZXNzaW9uYWxzIGFuZCBmYW1pbGllcyBhcmUgaW5jYWxjdWxhYmxlLiBXYXJsb3JkcyBhbmQgZmFjdGlvbnMgc3ByaW5nIHVwIG92ZXJuaWdodC4gClNvIHRoZW4gd2UgcnVzaCB0byBvZmZlciB0byBoZWxwLiAKVSBvZiBUIGlzIGVzdGFibGlzaGluZyBhIG5ldyBidXJzYXJ5IHByb2dyYW0gZm9yIGF0IHJpc2sgc3R1ZGVudHMgYW5kIHNjaG9sYXJzIHdpdGggdGhlIGdvYWwgb2YgcmFpc2luZyAkMSBtaWxsaW9uIGFuZCBjcmVhdGluZyB1cCB0byAxMDAgYnVyc2FyaWVzIHRvIGJlIGRpc3BlcnNlZCBvdmVyIHRoZSBuZXh0IDEwIHllYXJzICAgYnVyc2FyaWVzIHdpbGwgYmUgYXdhcmRlZCB0byB1bmRlcmdyYWR1YXRlIGFuZCBncmFkdWF0ZSBzdHVkZW50cyB3aG8gaGF2ZSBvYnRhaW5lZCByZWZ1Z2VlIHN0YXR1cyBpbiBDYW5hZGEKQXMgYSBxdWljayByZXZpZXcsIHRob3VnaCwgYWxsIHBsYXllcnMgYXJlIGRlYWx0IHR3byBjYXJkcyBkb3duLCBhbmQgdGhlcmUgaXMgYSByb3VuZCBvZiBiZXR0aW5nLiBCZXR0aW5nIGFjdHVhbGx5IGJlZ2lucyB3aXRoIHRoZSBibGluZHMsIHdoZXJlIHRoZSB0d28gcGxheWVycyB0byB0aGUgbGVmdCBvZiB0aGUgZGVhbGVyIHB1dCBpbiBiZXRzIGJlZm9yZSB0aGUgZmxvcCBiZWZvcmUgc2VlaW5nIHRoZWlyIGNhcmRzLiAKQSBtb3Rpb24gd2FzIHB1dCBmb3IgYWxsIHRob3NlIGxpdmUgZ2FtZXMgY2FuIGJlIGNvbnNpZGVyZWQgcmFmZmxlcyBhcyB0aGV5IGFyZSBpbiBmaW5pdGUgc3BhY2Ugb2YgcG9zc2liaWxpdGllcyBhbmQgaGF2ZSBjbGVhciB3aW5uaW5nIGNvbWJpbmF0aW9ucy4uIApJdCdzIGxpa2UgYmFza2V0YmFsbDogWW91IHNob290IGEgbGl0dGxlIGJpdCBhbmQgeW91J3JlIG9mZiwgYW5kIHRoZW4geW91IGZpbmQgdGhhdCByaHl0aG0gYW5kIGdvIGZyb20gdGhlcmUuIi4gCkp1c3QgZHJhdyB0aGUgc21pbGV5IGZhY2Ugb24gYSBicm93biBwYXBlciBiYWcsIHBsYWNlIGl0IG92ZXIgaGVyIGhlYWQsIGFuZCBmdWNrIGF3YXkgd2hpbGUga2VlcGluZyB5b3VyIGNvbXBvc3VyZSBhbmQgcGllY2Ugb2YgbWluZC4gCllvdSByaWdodCB0aGF0IGhlciByZXB1dGF0aW9uIHdvdWxkIHRha2UgYSBzbGlnaHQgaGl0IGZyb20gd2l0aGRyYXdpbmcsIHdoaWNoIGlzIG9uZSByZWFzb24gSSBiZWxpZXZlIHNoZSBoYXMgc3RhdGVkIHNoZSB3aWxsIG5ldmVyIHF1aXQsIG5vIG1hdHRlciBob3cgbWFueSBtb3Rpb25zIHNoZSBmaWxlZCwgaW4gZWZmZWN0IG5ldmVyICJsb3NpbmciIG9yIGFsd2F5cyAibG9zaW5nIiBkZXBlbmRpbmcgaG93IHlvdSBsb29rIGF0IGl0LgpUaGVuIEkgdG91Y2ggaGVyIGJ1dHQgZm9yIGx1Y2suCkxlZmlhICA2IHBvaW50cyAgc3VibWl0dGVkIDIgbW9udGhzIGFnbwpKYXNvbiBLb29uPyBDaGFybGllIENhcnJlbCBwbGF5cyB3aXRoIGEgbG90IG9mIGhlYXJ0IGJ1dCBoZSBub3QgcmVhbGx5IGdvb2QgZW5vdWdoIHRvIHBsYXkgc3VwZXIgaGlnaCByb2xsZXJzLiAKQXMgd2l0aCBhbGwgcHJvZmVzc2lvbmFsIHNlcnZpY2VzLCB0aGUgYmVzdCB3YXkgdG8gZmluZCBhIHByYWN0aXRpb25lciBpcyB0aHJvdWdoIGEgcmVmZXJyYWwuLiAKUm9iZXJ0IEtlbGx5IGhlYWRsaW5lcyBGcmlkYXkgbmlnaHQgc2hvdyBhdCB0aGUgV2luY2hlc3RlciBpbiBMYWtld29vZCBSb2JlcnQgS2VsbHkgaGVhZGxpbmVzIEZyaWRheSBuaWdodCBzaG93IGF0IHRoZSBXaW5jaGVzdGVyIGluIExha2V3b29kIFJvYmVydCBLZWxseSBoZWFkbGluZXMgYW4gaW5kZXBlbmRlbnQgc2hvdyBhdCB0aGUgV2luY2hlc3RlciBUYXZlcm4gaW4gTGFrZXdvb2QgRnJpZGF5IG5pZ2h0LiBBdCBIaWxhcml0aWVzIHRoaXMgd2Vla2VuZCwgRGVicmEgRGlHaW92YW5uaSBoZWFkbGluZXMsIHdoaWxlIEFkZWxlIEdpdmVucyBpcyBhdCB0aGUgQ2xldmVsYW5kIEltcHJvdi4KVGhhdCdzIHRoZSBjb21tb24gcnVsZTogbWFrZSBhIGRlcG9zaXQgYW5kIHRoZW4gcGxheS4gCkJpbm1pZ2h0eSAgIDEgcG9pbnRzICBzdWJtaXR0ZWQgMjAgZGF5cyBhZ28KSXQgcmVhbGx5IG1ha2VzIHlvdSBmZWVsIGxpa2UgeW91IHByb2dyZXNzaW5nIHNpbmNlIGl0IHNvbWV0aGluZyB5b3UgY2FuIHZpc2libHkgc2VlIGNoYW5naW5nIChhbmQgeW91IGRvbiBoYXZlIHRvIHB1dCBpbiBuZWFybHkgYXMgbXVjaCBlZmZvcnQgc2hhdmluZyBldmVyeSBkYXkpLi4gCkhlYWx0aCBjYXJlIHJlZm9ybSB0byBiZSBlZmZlY3RpdmUgYW5kIHdvcnRoIHRoZSBlZmZvcnQsIGl0IHdpbGwgcmVxdWlyZSBhIGZyZXNoIGxvb2sgYXQgYWxsIG9wdGlvbnMsIG5vdCBqdXN0IHRoZSBvbmVzIHRoYXQgYXJlIG1vc3QgZmFtaWxpYXIuIApBY2NvcmRpbmcgdG8gYSBEZW1vY3JhdGljIFBlYWNlIFBhcnR5IHNwb2tlc21hbiwgQ2hpbmEgaXMgYWJvdXQgdG8gYnJpbmcgb25saW5lIG5leHQgeWVhciwgMTEzIG1vcmUgY29hbCBwbGFudHMgYW5kIDIyNyB0cmFzaCBpbmNpbmVyYXRpbmcgcGxhbnRzIGluIFNoYW5kb25nIGFuZCBKaWFuZ3N1IHByb3ZpbmNlcywgb24gdGhlIENoaW5lc2UgZWFzdGVybiBjb2FzdGxpbmUgYWNyb3NzIFNvdXRoIEtvcmVhIHdoaWNoIGNvdWxkIHByYWN0aWNhbGx5IGRvdWJsZSB0aGUgcHJvYmxlbSBvZiBhaXIgcG9sbHV0aW9uIGZvciBTb3V0aCBLb3JlYSBuZXh0IHllYXIuIFdlIGRvbiBoYXZlIHRvIGFjY3VzZSBDaGluYSBvZiBhbnl0aGluZyB0byBjYXVzZSBhIGZpZ2h0LiAKWW91IHdpbGwgbmVlZCB0byBrbm93IHdoaWNoIHBvcnQgbnVtYmVyIHRvIHVzZSAoMjUgZm9yIFNNVFAsIDExMCBmb3IgUE9QMywgYW5kIDE0MyBmb3IgSU1BUCwgYWxsIG9mIHdoaWNoIGFyZSB1bmVuY3J5cHRlZCkuLiAKUmVwYXRyaWF0aW5nIHRoZXNlIHdvbWVuIGFuZCBpbXByaXNvbmluZyB0aGVtIGlzIGFuIG9wdGlvbiB3b3J0aCBjb25zaWRlcmluZyBhcyBvcHBvc2VkIHRvIGp1c3QgcmVwYXRyaWF0aW5nIHRoZW0gd2l0aCBhIHNsYXAgb24gdGhlIHdyaXN0Li4gCkkgaG9uZXN0bHkgaGF2ZSBubyBpZGVhIGhvdyBtdWNoIGRhdGEgc3RyZWFtaW5nIHRoZSBtdXNpYyB3b3VsZCB1c2Ugb3IgZXZlbiBob3cgbXVjaCBkYXRhIHdvdWxkIGJlIHVzZWQgaWYgeW91IGp1c3QgZG93bmxvYWRlZCBldmVyeSBwbGF5bGlzdCBvdmVyIDNHLzRHLiAKQmlsbCB0b29rIGEgcG9zaXRpb24gd2l0aCBDb25zdW1lcnMgRW5lcmd5IGluIE1pY2hpZ2FuLCBhbmQgdG9nZXRoZXIsIEJpbGwgYW5kIE5hbmV0dGUgd2VyZSBibGVzc2VkIHRvIHdlbGNvbWUgZm91ciBjaGlsZHJlbiAoRGF2aWQsIE5pbmEsIExpc2EsIGFuZCBNYXJjKSBpbnRvIHRoZWlyIGxpdmVzLCB3aG9tIHRoZXkgcmFpc2VkIHdpdGggZ3JlYXQgY2FyZSBhbmQgZGV2b3Rpb24uIEFmdGVyIDM1IHllYXJzIG9mIHNlcnZpY2UgYXMgYSBwcm9mZXNzaW9uYWwgZW5naW5lZXIsIEJpbGwgcmV0aXJlZCBmcm9tIENvbnN1bWVycyBFbmVyZ3kgKGhlIGhlbHBlZCAia2VlcCB0aGUgbGlnaHRzIG9uIikuIApMZWUsIGEgbmF0aXZlIG9mIEhvbmcgS29uZywgaXMgd2VsbCBidWlsdCBhbmQgd2VhcnMgYSBibGFjayB0aWdodCBmaXR0aW5nIEdpb3JnaW8gQXJtYW5pIFQgc2hpcnQuIEhlIGNvdWxkIGFsbW9zdCBwYXNzIGZvciBhIG5pZ2h0Y2x1YiBib3VuY2VyIGlmIGl0IHdlcmVuJ3QgZm9yIHRoZSBzb2Z0ZW5pbmcgZWZmZWN0IG9mIGhpcyBleWV3ZWFyLCBsYXJnZSBnbGFzcyBzcXVhcmVzIHdpdGggZGlhbW9uZGxpa2Ugc3R1ZHMgYXQgdGhlaXIgY29ybmVycy4gCldoaWxlIHdlJ3JlIHdhaXRpbmcgZm9yIG91ciBmb29kIENCIGRlY2lkZWQgc2hlIHdhbnRzIHRvIGRvIHRoZSB3aGl0ZSBlbGVwaGFudCBub3cuIApFdmVyeWJvZHkgaW4gcHJpc29uIG5lZWRzIGJvb2tzIGFuZCBtb3Jlc28sIHBzeWNob3RoZXJhcHkuIEZyYW5rbHksIGNvbmNlcHRzIGxpa2UgImJsYW1lLCIgYW5kIHRoZSB0aGlua2luZyB0aGF0IHNvbWUgcGVvcGxlIGRvbiBkZXNlcnZlIHRvIGdldCBiZXR0ZXIgb3IgZG8gZGVzZXJ2ZSB0byBiZSBwdW5pc2hlZCB3aGlsZSBhbHJlYWR5IGluY2FyY2VyYXRlZCwgZ2V0IHNudWZmZWQgb3V0IHByZXR0eSBxdWljayB3aGVuIHlvdSBzdHVkeSB0aGUgYnJhaW4gYW5kIHJlYWxpemUgdGhleSBkb24gbWFrZSBzZW5zZSBvdXRzaWRlIG9mIHByaW1hbCBsb2dpYy4KQWx0aG91Z2ggdGhlIHN0cnVjdHVyZSBvZiBjYXBpdGFsaXNtIHdhcyBpbiBwbGFjZSBsb25nIGJlZm9yZSB0aGUgSW5kdXN0cmlhbCBSZXZvbHV0aW9uIGluIG90aGVyIHBsYWNlcyB0aGVyZSB3ZXJlIHRyYWRlIHJvdXRlcywgZXhjaGFuZ2FibGUgY3VycmVuY2llcywgYW5kIG1hbnVmYWN0dXJpbmcgIGl0IHRvb2sgYSBjZXJ0YWluIHNvcnQgb2YgYmVsaWVmIHN5c3RlbSwgYSBzcGlyaXQsIHRvIG1vdGl2YXRlIHBlb3BsZSB0byB3b3JrIGhhcmQgYW5kIHRoZW4gcmVpbnZlc3QgYWxsIHRoZWlyIHByb2ZpdHMgaW50byBmdXR1cmUgZWFybmluZ3MuIFRoYXQgc3Bpcml0IHdhcyB0aGUgUHJvdGVzdGFudCB3b3JrIGV0aGljIChvciB1bmV0aGljIGRlcGVuZGluZyBvbiB5b3VyIHBvaW50IG9mIHZpZXcpLi4gCkF0IG1hbnkgbG93IHN0YWtlcyBsaXZlIGdhbWVzIHlvdSBjYW4ganVzdCB0ZWxsIHdoZW4geW91ciBvcHBvbmVudCBpcyByaXAgcm9hcmluZyBhbmQgcmVhZHkgdG8gc3RhY2sgb2ZmLiBUaGUgdGVsbHMgYXJlIHZlcnkgc3VidGxlIGF0IGZpcnN0IGJ1dCBvbmNlIHlvdSB0cmFpbiB5b3VyIGJyYWluIHRvIHJlY29nbml6ZSB0aGVtLCB5b3Ugd2lsbCBiZSBhYmxlIHRvIG1ha2UgaW5jcmVkaWJsZSBjaGVjayBiYWNrcyBhbmQgZm9sZHMuLiAKSSBrbm93IGlmIEkgd2luIHRoaXMsIEkgYW0gdGhlIGNoaXAgbGVhZGVyLiBJIGdldCB1cCBhbmQgZXZlcnlib2R5IGlzIHNheWluZyAiT2ggaGUgaGl0IGEgc2V0LiBOaWNlIi4gCjIwMDBzIHJlY2Vzc2lvbgpDaGluYSBzbG93bHkgY29ucXVlcnMgeWV0IHdlIGJlbGlldmUgd2UncmUgc3RpbGwgYXQgcGVhY2U7IHRoYXQncyBieSBkZXNpZ24uIApGWUkgICBJIGEgUGFja2VycyBmYW4gc28gbXkgdGVhbSBjaXR5IGFsc28gaXNuIGEgZGVzaXJlZCBkZXN0aW5hdGlvbiwgYnV0IEkgaGF2ZSBiZWVuIHRvIEJ1ZmZhbG8gYW5kIHRoaW5rIGl0IGlzIHByZXR0eSBhd2Vzb21lLiBKdXN0IG5vdCBhIGJpZyBlbm91Z2ggbWFya2V0IGZvciBzb21lb25lIGxpa2UgQUIgdG8gd2FudCB0byBsaXZlIHVubGVzcyBpdCB3YXMgYSBwZXJlbm5pYWwgd2lubmVyLiA4IHBvaW50cyAgc3VibWl0dGVkIDQgZGF5cyBhZ28KU29sYW5Hb29zZSB1ClRoZSBjcmF6aWVzdCB0aGluZ3Mgd29tZW4gZGlkIHRvIHRoZWlyIHZhZ2luYXMgdGhpcyB5ZWFyClJhY2lzbSBpcyBoYXJkIHRvIHVuZGVyc3RhbmQsIGl0cyBub3QgYXMgY3V0IGFuZCBkcnkgYXMgc29tZSBwZW9wbGUgbGlrZSB0byBwcmV0ZW5kLiAKSGF2ZSB5b3UgZXZlciB2aXNpdGVkIHRoZSBjYXNpbm9zIG9mIExhcyBWZWdhcyBvciBhbG9uZyB0aGUgTWlzc2lzc2lwcGkgR3VsZiBDb2FzdD8gSWYgc28sIHlvdSBrbm93IHRoZSBmcmVuemllZCBleGNpdGVtZW50IGFuZCBleHBlY3RhdGlvbiBvZiB0aGUgYmlnIHdpbiB0aGF0IGlzIHByZXNlbnQgaW4gdGhlIGdhbWluZyBlc3RhYmxpc2htZW50cy4gVGhlIHNvdW5kcyBvZiB0aGUgbWFjaGluZXMgYWxsIGNsYW5naW5nIG91dCB0aGUgd2lucyBvZiB0aGUgcGxheWVycyBpcyBwYXJ0IG9mIHRoZSBhbWJpYW5jZS4gVGhlIGJlbGxzIGFuZCBtdXNpYyBvZiB0aGUgY2FzaW5vIGFyZSBwYXJ0IG9mIHRoZSBhbnRpY2lwYXRpb24gdGhhdCB5b3VyIGNoYW5jZSBvZiBzdHJpa2luZyBpdCByaWNoIHdpdGggYSBnYW1lIG9mIGNoYW5jZSBpcyB3aXRoaW4gcmVhY2guCk5vdywgSSBhbSB0cmFwcGVkIGJ5IGhpcyB0eXBlIG9mIHZpY3RpbS4gRG9lcyBoZSBvbmx5IGtpbGwgd29tZW4gb3Igd2lsbCBoZSBhbHNvIGtpbGwgbWVuPyBXaWxsIGhlIGtpbGwgdG8gZXNjYXBlIGJlaW5nIGNhdWdodD8gRGlkIGhlIGNvbWUgZnJvbSBhbiBhYnVzaXZlIGhvbWUgb3IgYSBoYXBweSwgaGVhbHRoeSBmYW1pbHk/IERpZCBoZSBzdGFydCBvbiBhbmltYWxzIGZpcnN0PyBXYXMgaGUgYWJ1c2l2ZSB0byBoaXMgbG92ZXJzPyBEb2VzIGhlIGxpa2UgbWVuIG9yIHdvbWVuIGluIGhpcyBiZWQ/IERpZCBoZSBwbGF5IGEgc3BvcnQgdGhhdCBjYXVzZWQgYSBoZWFkIGluanVyeT8gRG8gd2UgbmVlZCBhIHJlYXNvbiBvZiB3aHkgaGUga2lsbHM/CkJlY2F1c2UgeW91IGNhbiBkZWFsIHdpdGggdGhlIG90aGVyIHRlYW0gcm90YXRpb25zLCB5b3UgZHJhZnQgYSBwaWNrIGNvbXBvc2l0aW9uIHRoYXQgY2FuIGhhcmQgZW5nYWdlIGEgMyBtYW4gb3IgMiBtYW4gbGFuZSB0byBzZWN1cmUgb2JqZWN0aXZlcy4gRXhwbGFpbiB0byBtZSBob3cgVFNNIGNvbXBvc2l0aW9uIGlzIHNvIGRpcmVjdGx5IGluZmVyaW9yIHRvIFNLVEkgZG9uIGRpc2FncmVlIHdpdGggZHJhZnRpbmcgYSBwaWNrIGNvbXBvc2l0aW9uIGFnYWluc3QgU0tUIGJlY2F1c2UgU0tUIGlzIGp1c3QgdGhlIGJldHRlciB0ZWFtLiBUU00gd2lsbCBuZXZlciwgZXZlciB3aW4gYSBkaXJlY3QgNSB2IDUgc3RhbmRhcmQgZ2FtZSBhZ2FpbnN0IFNLVC4gCkEgZ29vZCBwdWJsaWMgaGVhbHRoIGFwcHJvYWNoIHdvdWxkIGZpcnN0IG9mIGFsbCBjb250cm9sIHRoZSBzdXBwbHkgb2YgdGhlIHByb2R1Y3QsIGxpa2UgZHJ1Z3Mgb3IgYWxjb2hvbCwgYW5kIGl0IHdvdWxkIGFsc28gcmVndWxhdGUgb3IgbWFuYWdlIHRoZSBkZW1hbmQgZm9yIHRoZSBwcm9kdWN0LiAKQm9uZXNfYW5kX2xvdmUgIDkgcG9pbnRzICBzdWJtaXR0ZWQgMTYgZGF5cyBhZ28KQmVsbGEncyBCb2R5IFRoZXJhcHksIGxvY2F0ZWQgYXQgNzExIFcuIApIb3cgSSBXZW50IEZyb20gQnJva2UgUG9rZXIgUGxheWVyIGF0IDI1IHRvIE1pbGxpb25haXJlIGF0IDMxCkknbSBhIGh1c2JhbmQsIGFuZCBhIGZhdGhlciB0byBhIHNvbiB3aXRoIGFub3RoZXIgYmFieSBib3kgb24gdGhlIHdheS4gCklmIG9ubHkgd2UgaGFkIGxlYWRlcnMgaW4gdGhlIFVTIGFuZCBSdXNzaWEgd2hvIHdlcmUgaW50ZXJlc3RlZCBpbiBkaXBsb21hdGljIGdvYWxzIHN1Y2ggYXMgYSBtb3JlIHBlYWNlZnVsIHdvcmxkLiAKRWxsZSBuZSBzYWl0IHBsdXMgcXVvaSBmYWlyZS4gCk5leHQgY2FtZSBvbmUgb2YgdGhlIG9kZGVyIGpvYnMgSSd2ZSBldmVyIGNvbXBsZXRlZC4gVGhlbiBhZ2FpbiwgSSBzdXBwb3NlIGl0IG1ha2VzIHNlbnNlLCBnaXZlbiBhIGZpcmVmaWdodGVyJ3MgbmVlZCB0byBjaG9wIG9wZW4gZG9vcnMuCkF0IHRoYXQgcG9pbnQgSSB3YXMgaW4gYSBob3RlbCwgSSBoYWQgdGhlIHByb3NwZWN0IG9mIGEgYnJva2VuIG1hcnJpYWdlIGFuZCBsaW1pdGVkIGFjY2VzcyB0byBteSB0d28geW91bmcgY2hpbGRyZW4uIApUaGUgd29yZCBkb3VsYSBpcyBHcmVlayBmb3IgImZlbWFsZSBzbGF2ZSwiIG9yICJmZW1hbGUgc2VydmFudCIgYnV0IHRoZSB0cnVlIHNjb3BlIG9mIGEgZG91bGEncyByZXNwb25zaWJpbGl0aWVzIGlzIGZhciBncmVhdGVyIHRoYW4gd2lwaW5nIGEgd29tYW4ncyBicm93IGFuZCBmZXRjaGluZyBpY2UgY2hpcHMuIEluIGZhY3QsIGRvdWxhcyBhcmUgdHJhaW5lZCBjaGlsZGJpcnRoIGNvYWNoZXMgd2hvbSBleHBlY3RhbnQsIGxhYm9yaW5nIGFuZCBwb3N0cGFydHVtIG1vdGhlcnMgdHVybiB0byBmb3IgZWR1Y2F0aW9uYWwsIHBoeXNpY2FsIGFuZCBlbW90aW9uYWwgc3VwcG9ydC4gCkl0IHJlYWxseSBodXJ0IG1lLiBJIGxpa2VkIG15IGRvY3Rvci4gVGhhdCB3YXNuIHJpZ2h0LCB0aG91Z2gsIGFuZCBpdCBjYXVzZWQgYSBsb3Qgb2YgcHJvYmxlbXMgZm9yIG1lIHdpdGggZnV0dXJlIGRvY3MuCkV2ZXJ5b25lIGdvZXMgdG8gdGhlIGhvc3BpdGFsLCBhbmQgc29tZWhvdyBIb29rZXIgaXMgdGhlIG9ubHkgb25lIHdpdGggYSBiYW5kYWdlIG9uLCBvbiBoaXMgaGFuZC4gClRoZSBmb2xsb3dpbmcgYXJlIHNvbWUgb2YgdGhlIHNpZGUgZWZmZWN0cyBvZiBCaW9mcmVlemUuLiAKRml2ZSBkYXlzIGFmdGVyIHRoYXQsIHRoZSBhcm15IGJlZ2FuIHRvIGhlYXIgcmF0aGVyIGxlc3MgZmFuY2lmdWwgcnVtb3VycyBhYm91dCBhIGNsYXNoIGJldHdlZW4gdGhlIEFybXkgb2YgQ2FsbG93IGFuZCBhIERvbWluaW9uIGFybXkuIFRoZSBDYWxsb3dhbnMgYW5kIHRoZSBXYXN0ZWxhbmQgYWxsaWVzIGZsZWQgc291dGgsIHJlZnVnZWVzIHNhaWQuCllvdSBjYW4gYWxzbyB1c2UgdGhpcyB0byByZW1vdmUgdGhlIHNjcmF0Y2hlcyBvbiB5b3VyIG1pcnJvci4gClRoaXMgd2lsbCBub3Qgb25seSBnaXZlIHRoZW0gYW4gYWR2YW50YWdlIG92ZXIgdGhlIG90aGVyIHBva2VyIHBsYXllcnMgd2hvIGRvbnQgdXNlIGFueSB0eXBlIG9mIHN0cmF0ZWd5IHRvIHBsYXksIGJ1dCBpdCBhbHNvIGdpdmVzIHlvdSBhIGJldHRlciBzdGFydGluZyBwb3NpdGlvbiwgYXMgeW91IHdpbGwgYmUgcmVhZHkgZm9yIGFueSBjb250aW5nZW5jeS4gCkltbWVkaWF0ZWx5IGFmdGVyIHRoYXQgc3RyZWFtIEkgYmVjYW1lIHBhcnRuZXJlZC5RdWlja2x5IGFmdGVyIHRoYXQsIFR3aXRjaCBjcmFja2VkIGRvd24gYW5kIEkgY291bGRuIHN0cmVhbSBlYXJseSByZWxlYXNlcyBhbnltb3JlLiBPbiB0b3Agb2YgdGhhdCwgY29tcGFuaWVzIGtlcHQgZ2l2aW5nIGVhcmx5IHJlbGVhc2UgYWNjZXNzIHRvIHRoZSBiaWdnZXIgZ3V5cy4gCkFuZCBoZXJlIHdoYXQgR3JlZW5wZWFjZSBoYWQgdG8gc2F5IGFib3V0IHRoZSBDb3BlbmhhZ2VuIGFncmVlbWVudC4KQnV0IGNoYXJpdHkgb2ZmaWNpYWxzIHNheSBpdCBpcyB0aW1lIHRvIGFsbG93IHRoZSBwcmFjdGljZSBhZ2Fpbiwgbm90aW5nIHRoYXQgb3RoZXIgY291bnRpZXMgaGF2ZSBiZWVuIGFsbG93ZWQgdG8gaG9zdCBwb2tlciBuaWdodHMgZm9yIG5vbnByb2ZpdCBmb3VuZGF0aW9ucy4KVGhlIFdTT1AgYWxzbyBhY2NlcHRzIHByZSByZWdpc3RyYXRpb24gZm9yIGFueSBicmFjZWxldCBldmVudCB1cCB0byAxNCBkYXlzIHByaW9yIHRvIHRoZSBzdGFydCBvZiBhbiBldmVudCwgYXMgdGhpcyBlbnN1cmVzIHlvdXIgc2VhdCB3aWxsIGJlIHJlc2VydmVkIHJlZ2FyZGxlc3MgaWYgYW4gZXZlbnQgaXMgc29sZCBvdXQuIApIZSBzYXlzIHRoZSBjaGlsZHJlbiAxMywgQ2hhcmxvdHRlLCAxMSwgTGluY29sbiwgOCwgYW5kIEpvc2VwaGluZSwgNiBqdXN0IGFzIGhhcHB5IHBsYXlpbmcgd2l0aCByb2NrcyBhbmQgc2hlbGxzIG9uIHRoZSBiZWFjaCBhcyB0aGV5IHdvdWxkIGJlIHdpdGggYW55IG9mIHRoZWlyIHRveXMgYXQgaG9tZS4gVGhleSBwZXJmZWN0bHkgaGFwcHkgbGl2aW5nIGluIGEgNTAwIHNxdWFyZSBmb290IHZpbGxhIGluc3RlYWQgb2YgdGhlaXIgbXVjaCBsYXJnZXIgaG91c2UgaW4gT250YXJpby4gV2hlbiB0aGV5IGZpcnN0IG1vdmVkIHRvIHRoZSBpc2xhbmQsIHRoZXkgd2VyZSBsaXZpbmcgaW4gYSBib2F0IGFuY2hvcmVkIG9mZnNob3JlLiAKVGhpcyBpcyBsdWNraWx5IG1pbmltYWwgbm93LCBidXQgaWYgeW91IHdlcmUgbGl2aW5nIHRvZ2V0aGVyIHRoaXMgd291bGRuIGJlIHRoZSBjYXNlLiBEb24gZmFsbCBpbnRvIHRoZSB0cmFwIG9mIHRoaW5raW5nIGhlIHdpbGwgY2hhbmdlIGlmIHlvdSBtb3ZlIGluIHRvZ2V0aGVyLiBPbiB0aGUgY29udHJhcnkgaXQgd2lsbCBvbmx5IGhpZ2hsaWdodCB0aGUgaXNzdWVzIGluIHlvdXIgcmVsYXRpb25zaGlwIG1vcmUgc3RhcmtseSBiZWNhdXNlIHlvdSBtdXN0IGZhY2UgZWFjaCBvdGhlciBldmVyeWRheS4gCldpdGggTGl1ZmF1IGFuZCBtYW55IG9mIGhpcyB0b3Agd2VhcG9ucyBmcm9tIDIwMTQgaW5jbHVkaW5nIHJlY29yZCBicmVha2luZyByZWNlaXZlciBOZWxzb24gU3BydWNlIGJhY2sgdGhpcyB5ZWFyLCB0aGUgQnVmZnMgZmlndXJlZCB0byBwaWNrIHVwIHdoZXJlIHRoZXkgbGVmdCBvZmYsIGJ1dCB0aGF0IGhhc24ndCBiZWVuIHRoZSBjYXNlLiJXZSB3ZXJlIGFibGUgdG8gZ2V0IGludG8gaXQgZWFybHkgbGFzdCB5ZWFyLCIgU3BydWNlIHNhaWQuICJXaXRoIHdoYXQgdGVhbXMgd2VyZSBnaXZpbmcgdXMgZWFybHkgaW4gdGhpcyBzZWFzb24sIHdlIHdlcmUgcnVubmluZyB0aGUgYmFsbCBhIGJ1bmNoLCBhbmQgSSBkb24ndCB0aGluayB3ZSByZWFsbHkgZGV2ZWxvcGVkIHRoYXQgcmh5dGhtIHdlIGhhZCBnb2luZyBlYXJseSBsYXN0IHllYXIuIApJIGJlbGlldmUgdGhleSBoYXZlIG9uZSByZWFsbHkgYmlnIHRvdXJuYW1lbnQuIApFRElUOiBhbGwgdGhhdCBzYWlkLCBoZSBkb2VzbiBkZXNlcnZlIGEgY3JpbWluYWwgY2hhcmdlIHdoYXQgdGhlIGZ1Y2s/Pz8KR2V0dGluZyB0aGVyZSwgaGUgc2FpZCB3aXRoIGEgbGF1Z2ggTW9uZGF5IG1vcm5pbmcuIEhvY2tleSBIYWxsIG9mIEZhbWUuQWxzbyBpbiB0aGUgMjAxOSBjbGFzcywgd2hvIHdpbGwgYmUgaG9ub3VyZWQgYXQgYSBkaW5uZXIgaW4gSnVseSBhdCBQZW50aWN0b24gTGFrZXNpZGUgUmVzb3J0LCBhcmUgQ2FudWNrcyBzY291dCBhbmQgZm9ybWVyIHBsYXllciBSb24gRGVsb3JtZSwgZm9ybWVyIFN0LiAKVGhlIE5ITCBBbHVtbmkgQXNzb2NpYXRpb24gY29uZmlybWVkIGhpcyBkZWF0aCBvbiBNb25kYXkuCk5vdyB0aGlzIGd1aWRlIGlzIGFsc28gYmVnaW5uZXIgZnJpZW5kbHkgYXMgZmFyIGFzIGV4cGxhaW5pbmcgdGhpbmdzLCBhbmQgaXQgYXBwZWFycyB2ZXJ5IGdvb2QgYXMgZmFyIGFzIGNvdmVyaW5nIG5lYXIgZXZlcnkgc3RlcCBvZiB0aGUgcHJvY2VzcywgYnV0IG1hbiBpcyBpdCB2ZXJib3NlLiBXaGlsZSBJIGFkbWl0IEkgaGF2ZW4gcmVhZCB0aGUgd2hvbGUgdGhpbmcsIEkgd291bGQgcmVjb21tZW5kIHRoZSByZWFkIHN0aWxsIGFzIGl0IGdvb2QgdG8ga25vdyB0aGUgaW5zIGFuZCBvdXRzIG9mIHlvdXIgaGFyZHdhcmUgYW5kIHRoZSBvdmVyY2xvY2tpbmcgcHJvY2VzcyBzbyB5b3Uga25vdyB3aGF0IHRvIGxvb2sgZm9yIGlmIHRoaW5ncyBzdGFydCBnb2luZyB3cm9uZy4uIApXaGF0IEZhc3QgaXMgb2ZmZXJpbmcgd2l0aCBoaXMgZmFzaGlvbiBpcyB0aGUgb3Bwb3J0dW5pdHkgdG8gd2FudCB0byBjb25zdW1lIHdvbWVuIHdobyBsb29rIGxpa2UgdXMuIEEgZGVzaXJlIGZvciBvdXJzZWx2ZXMuIEl0IGlzIGEgcmFkaWNhbCBtb3ZlLCBhbmQgb25lIHRoYXQgbWlnaHQgaGVscCBGYXN0IHNlbGwgbW9yZSBjbG90aGVzLiAKSSBkcmFuayB2b2RrYSBmcm9tIGEgcGFwZXIgYmFnIGFuZCBnb3QgZHJ1bmsgZm9yIHRoZSB2ZXJ5IGZpcnN0IHRpbWUuIApJdHMgb25seSBlbnRyYXBtZW50IGlmIHdlIGNhbiBwcm92ZSBpdCwgYW5kIHdlIGNhbiBCdXQgd2l0aCBJU1AgYWdncmVzc2l2ZWx5IHB1bGxpbmcgb3ZlciBoZW1wIHRydWNrcyB0byBsb29rIGxpa2UgdGhleSBhcmUgImZpZ2h0aW5nIHRoZSB3YXIgb24gZHJ1Z3MiIHdlIHNob3VsZG4gYmUgb25lIGJpdCBzdXJwcmlzZWQgYWJvdXQgc2hhZHkgcHJhY3RpY2VzLiBBIGZyaWVuZCB3YXMgcHVsbGVkIG92ZXIgYnkgSVNQIGF0IEZydWl0bGFuZCBmb3IgImhhdmluZyBoZXIgdHVybiBzaWduYWwgb24gMiBzZWNvbmRzIGxlc3MgdGhhbiBzaGUgc2hvdWxkIGhhdmUiLi4gClRoZXNlIGFyZSB0aGUgdHlwZSBvZiBwb2tlciBoYW5kcyB0aGF0IGFyZSByYW5rZWQgYnkgdGhlIHZhbHVlIG9mIHRoZWlyIGhpZ2hlc3QgY2FyZC4gCkJ1dCwgdGhlIGZhY3QgdGhhdCBoZSBoYWQgdHdvIHBsdXMgeWVhcnMnIGxpdmluZyBleHBlbnNlcyBzYXZlZCB1cCBkb2VzIG1ha2UgbWUgdGhpbmsgdGhhdCBoZSBtaWdodCBiZSBtb3JlIHJlc3BvbnNpYmxlIHRoYW4gdGhlIHVuZW1wbG95bWVudCBwYXJ0Li4gCkphaHJodW5kZXJ0cyBlbnRzdGFuZGVuLiAKVGhhdCdzIDIgS2luZ3MgMjogMTEgMTQgd2hlcmUgR29kLCBkZWNpZGluZyB0aGF0IHdhaXRpbmcgdGhvdXNhbmRzIG9mIHllYXJzIGZvciBzb21lb25lIHNvIGluY3JlZGlibHkgYmFkYXNzIGFzIEVsaWphaCB0byBkaWUgd291bGQgYmUgdG9vIGxvbmcsIGp1c3QgcGx1Y2tlZCBoaW0gZnJvbSB0aGUgZ3JvdW5kIGFuZCB1cCB0aHJvdWdoIHRoZSBwZWFybHkgZ2F0ZXMgd2hpbGUgaGUgd2FzIHN0aWxsIGFsaXZlLiAKRm9yIFNlYXJzIHRvIGtlZXAgdGhlaXIgZW50aXJlIGNhdGFsb2cgYWZsb2F0IGFuZCB0cmFuc2l0aW9uIGl0IG9ubGluZSB3b3VsZCBoYXZlIHRha2VuIGFtYXppbmcgcHJlc2NpZW5jZSBhbmQgaW52ZXN0b3JzIHdpbGxpbmcgdG8gbG9zZSBiaWxsaW9ucyBvbiB0aGUgdmVudHVyZSBmb3IgdHdvIGRlY2FkZXMsIGN1dCBvdmVyaGVhZCwgYW5kIHNlbGwgb2ZmIHRoZWlyIGJyaWNrIGFuZCBtb3J0YXIgc3BhY2UgaW4gb3JkZXIgdG8ga2VlcCB0aGUgb25saW5lIGRpdmlzaW9uIGFmbG9hdC4gQSBiaWcgY29tcGFueSB3aXRoIHRyYWRpdGlvbmFsIHN0b2NrIGhvbGRlcnMganVzdCBjYW4gcGl2b3QgbGlrZSB0aGF0Li4gClNvIGhlcmUgSSBhbSBhdCB0aGUgMjAwNCBXb3JsZCBTZXJpZXMgb2YgUG9rZXIuIEJpbmlvbidzIEhvcnNlc2hvZSBoYXMgYmVlbiB0YWtlbiBvdmVyIGJ5IG5ldyBvd25lcnMuIGF0IGxvbmcgbGFzdC4gVGhhdCBpcyBub3QgdGhlIG1vc3Qgb2J2aW91cyBjaGFuZ2UgdGhhdCBncmVldGVkIG1lIHRob3VnaC4gQW1lcmljYSBoYXMgZ29uZSBQb2tlciBtYWQsIG1hZCwgbWFkLiBBbiBhc3RvbmlzaGluZyAzNDMgaGF2ZSBqdXN0IHBhaWQgYW4gYW1hemluZyAkMjUsMDAwIHRvIHBsYXkgdGhlIG1haW4gZXZlbnQgYXQgdGhlIEJlbGxhZ2lvLiBBbmQgeWVzdGVyZGF5IEkgd2Fsa2VkIGludG8gQmluaW9ucyBzYXRlbGxpdGUgYXJlYSBhbmQgY291bGRuJ3QgYmVsaWV2ZSBteSBleWVzLiBMYXN0IHllYXIgdGhlcmUgd291bGQgaGF2ZSBiZWVuIG1heWJlIDMgb3IgNCB0YWJsZXMgcnVubmluZy4gVGhpcyB5ZWFyIHRoZXJlIHdlcmUgMjMgb3IgMjQgdGFibGVzIGJ1enppbmcgd2l0aCBleGNpdGVtZW50LiBIb3JkZXMgYW5kIGhvcmRlcyBvZiBuZXcgcGxheWVycy4gR29kIGJsZXNzIEFtZXJpY2EsIGdvZCBibGVzcyB0aGUgV1BUIG9uIHRoZSBkaXNjb3ZlcnkgY2hhbm5lbCwgYW5kIGdvZCBibGVzcyBDaHJpcyBNb25leW1ha2VyLiBUaGlzIGlzIFBva2VyIGhlYXZlbiAhCklmIHRoZSBzaG93cnVubmVyIGlzIGhlbGxiZW50IG9uIG1ha2luZyB0aGUgY2FzdCBkaXZlcnNlIGZvciB0aGUgc2FrZSBvZiBkaXZlcnNpdHkgKHRoZSBhZm9yZW1lbnRpb25lZCAicG9saXRpY2FsIGJpYXMiKSwgdGhlbiB0aGUgY2FzdGluZyBwcm9jZXNzIGFkZHMgdW5uZWNlc3Nhcnkgc3RlcHM6IENoYXJhY3RlciBkZXNjcmliZWQgYXMgd2hpdGUgYnkgc291cmNlIG1hdGVyaWFsICA+IFNob3dydW5uZXIgd2FudHMgZGl2ZXJzaXR5ICA+IE9wZW4gYSBjYXN0aW5nIGNhbGwgZm9yIHdoaXRlIGFjdG9ycyBhbmQgbm9uIHdoaXRlIGFjdG9ycyBhbGlrZSAgPiBDYXN0IGJlc3QgYWN0b3Igb3V0IG9mIHRoaXMgIm1vcmUgZGl2ZXJzZSIgYnVuY2ggID4gVHJ5IHRvIGV4cGxhaW4gYXdheSB0aGUgaW1wb3J0YW5jZSBvZiBldGhuaWNpdHkgID4gQ2FsbCBmYW5zIHJhY2lzdHMgb3IgYmlnb3RzLiBJdCBvYnZpb3VzbHkgbm90IGFib3V0IGZhaXRoZnVsbmVzcyB0byB0aGUgc291cmNlIG1hdGVyaWFsLiAKSW4gY2VydGFpbiBjb25zZXJ2YXRpdmUgY291bnRyaWVzIG9uZSBtaWdodCBiZSBzZW50ZW5jZWQgdG8gZGVhdGguLiAKRHVkZS4gWW91IG1hc3NpdmVseSBmdWNrZWQgdXAuIFlvdSB0b2xkIGhlciB5b3UgdHJpZWQgdG8ga2lsbCB5b3Vyc2VsZiBieSBiZWluZyBkcnVuayBhbmQgaW1iaWJpbmcgb24gcGFpbmtpbGxlcnMuIApBbGxpIGFsbG93cyB5b3VyIGJvZHkgdG8gbm90IGRpZ2VzdCBzb21lIG9mIHRoZSBmYXQgdGhhdCB5b3UgZWF0LiBXaGF0ZXZlciBpcyBub3QgZGlnZXN0ZWQgaXMgZWxpbWluYXRlZCBpbiB5b3VyIHNoaXQsIHJlc3VsdGluZyBpbiBzb21lIGdyZWFzeSBzaGl0IHRoYXQgY2FuIGxlYWsgb3V0IGlmIHlvdSBhcmUgbm90IGNhcmVmdWwuCkJ1dCBoZSBkaWRuJ3QgcGxhbiB0byBzdG9wLCBiZWNhdXNlIGhlIHdhc24ndCBkb2luZyBpdCBmb3IgdGhlIG1vbmV5IChoZSB3YXMgYWN0dWFsbHkgc29ydGEgcmljaCkuIEhlIHdhcyBkb2luZyBpdCBmb3IgdGhlIHRocmlsbC4gRm9yIGV4YW1wbGUsIGV2ZXJ5b25lIHVuZGVyc3RhbmRzIHRoYXQgeW91IG5ldmVyIGdyYWIgcGVvcGxlIGJ5IHRoZSBoYW5kLCBldmVuIGluIGEgcGxheWZ1bCBtYW5uZXIsIGJlY2F1c2UgdGhhdCdzIGEgZ3JlYXQgd2F5IHRvIGdldCBhIGJsYWNrIGV5ZSBhbmQgcnVpbiBidXNpbmVzcyBmb3IgZXZlcnlvbmUgZWxzZS4gCkluIGFkZGl0aW9uIHRvIGhpcyB3aWZlLCBNYXJpYW5uZSwgTXIuIEd1aXRlIGlzIHN1cnZpdmVkIGJ5IHR3byBkYXVnaHRlcnMsIFNoYW5ub24gR3VpdGUgQmVjaywgYW5kIGhlciBodXNiYW5kLCBBbCwgb2YgRWxvbiwgTmljb2xlIEd1aXRlIGFuZCBoZXIgaHVzYmFuZCwgS2VsbHkgTmVzdGVyLCBvZiBXaWxtaW5ndG9uOyBhIHNvbiwgUmljaGFyZCBTY290dCBHdWl0ZSBhbmQgaGlzIHdpZmUsIEphbmFpIE1lc2NoZXJ5LCBvZiBQZXRhbHVtYSwgQ2FsaWZvcm5pYTsgZml2ZSBncmFuZGNoaWxkcmVuLCBXYWxrZXIgQmVjaywgV2lsbGlhbSBCZWNrLCBDYXJzb24gR3VpdGUsIFNlYmFzdGlhbiBOZXN0ZXIgYW5kIFNtaXRoIE5lc3RlcjsgYSBicm90aGVyLCBKYWNrIFdhbGtlciBHdWl0ZSBhbmQgaGlzIHdpZmUsIEZsb3JlbmNlLCBvZiBOZXdpbmd0b24sIENvbm5lY3RpY3V0OyBhIHNpc3RlciBpbiBsYXcsIEJvbm5pZSBNLiAKWWVzLCBhIGZldHVzIGlzIGhlbHBsZXNzIGFuZCBkb2VzIG5vdCBoYXZlIGEgZGV2ZWxvcGVkIGltbXVuZSBzeXN0ZW0uIApBbmQgaGUgY2hhbmdlZCBmcm9tIGNvbmNyZXRlIHRvIHN0ZWVsIGluIGFuIGVmZm9ydCB0byBjb21wcm9taXNlIHdpdGggRGVtb2NyYXRzLgpJbiBtb3N0IHBva2VyIHZhcmlhbnRzLCBzdWNoIGFzIFRleGFzIEhvbGQgJ0VtIGFuZCBPbWFoYSwgdGhlcmUgYXJlIDUgc2hhcmVkIGNhcmRzLCBvciBjb21tdW5pdHkgY2FyZHMgZGVhbHQuIFRoaXMgaXMgc2ltcGx5IGJlY2F1c2UgdGhlIHJ1bGVzIGFyZSBhcyBzdWNoLiAKSW4gdGhlIHRvcCBsZWZ0LCBoZSAzIGJldCBoaXMgb3Bwb25lbnQgcHJlZmxvcCBhbmQgaGlzIG9wcG9uZW50IGRpZG4gNCBiZXQuIEFsdGhvdWdoIHNvbWUgcGVvcGxlIG1heSBzbG93cGxheSBiaWcgaGFuZHMgaGVyZSBieSBmbGF0dGluZyB0aGUgMyBiZXQsIGl0cyB2ZXJ5IHVubGlrZWx5LiAKVGhlIGJlYXV0aWZ1bCBicnVuZXR0ZSBwbGF5ZXIgdG8gaGlzIGxlZnQgbXVzdGEgbm90aWNlZCBoaXMgbmV3IGJvZCwgJ2NhdXNlIHNoZSBjb3VsZG4ndCBzdG9wIGZsaXJ0aW5nIHdpdGggaGltIGFsbCBuaWdodC4gQmVubnksIG9uIHRoZSBvdGhlciBoYW5kLCBrZXB0IGhpcyBleWVzIG9uIGhpcyBjYXJkcy4gU3RpbGwgbm90IG92ZXIgUGFyZSBwb28/IE9yIGhhcyBzaGUgcnVpbmVkIHdvbWVuIGZvcmV2ZXIgZm9yIGhpbT8gV2hpbGUgQmVuaiBicmVhdGhlZCBpbiB0aGUgc21va2V5YXNzIGNhc2lubyBhaXIsIGdldHRpbmcgc29tZSBmcmVzaCBveHlnZW4gb3V0c2lkZSB3YXMuCiAzIHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnb015IGZhdm9yaXRlIGNoYXJhY3RlciBpcyBKb24sIGFuZCB0aGlzIGlzIHRoZSBzZWFzb24gd2hlcmUgaGUgc3RhcnRzIHJlYWxseSByaXNpbmcgdXAuIEkgaGF2ZSBuZXZlciBlbmpveWVkIGEgY2hhcmFjdGVyIHNvIG11Y2gsIHRoYW4gSSBkaWQgam9uIGluIHRoaXMgc2Vhc29uLiBJIGxvdmVkIHRoZSB3aG9sZSBkeW5hbWljIGJldHdlZW4gaGltLCBTdGFubmlzLCBhbmQgRGF2b3MuIApFdmVyeSB0aW1lLiAKVGhhdCBiZWluZyBzYWlkLCB0aGFuayB5b3UgZm9yIHNoYXJpbmcgdGhlIGxpc3Qgb2YgdXBjb21pbmcgZXZlbnRzLi4gClNvIGNhc3Qgc29tZW9uZSB3aG8gaXNuIGEgYmlnIHN0YXIgYWxyZWFkeS4gVGhlc2UgZmVtYWxlIHN1cGVyaGVyb2VzIGFyZSBzdXBwb3NlZCB0byBiZSBpbmNyZWRpYmx5IGZpdCBhbmQgc3Ryb25nLCBhbmQgbm9uZSBvZiB0aGVtIGxvb2sgbGlrZSBpdC4gCkl0IGhhcmQgdG8gc2VlIGhvdyBzaGUgYmVoYXZlcyBvbiBUViBhbmQgd2hldGhlciBvciBub3QgaGVyIGJlaGF2aW9ycyByZWZsZWN0IGhlciBnZW51aW5lIGZlZWxpbmdzIG9yIGlmIGl0IGZvciB0aGUgY2FtZXJhLiBCdXQsIGl0IHNlZW1zIHJlYWxseSB3ZWlyZCB0aGF0IHNoZSB3YXMgdW5jZXJ0YWluIGFib3V0IG1hcnJ5aW5nIEFzdWVsdSwgdGhlbiBjb250aW51ZWQgdG8gaGF2ZSB1bnByb3RlY3RlZCBzZXggd2l0aCBoaW0uIApOZXdzb20gd2FzIGEgbG9uZ3RpbWUgZnJpZW5kIGFuZCBmb3JtZXIgaGlnaCBzY2hvb2wgY2xhc3NtYXRlIG9mIEdvcmRvbiBHZXR0eSwgc29uIG9mIG9pbCBtYWduYXRlIEouIFBhdWwgR2V0dHksIGFuZCBtYW5hZ2VkIHRoZSBHZXR0eSBmYW1pbHkgdHJ1c3QuIEhlIHdhcyBzdWNoIGEgY2xvc2UgY29uZmlkYW50IHRvIHRoZSBHZXR0eXMgdGhhdCBoZSBoZWxwZWQgZGVsaXZlciBuZWFybHkgJDMgbWlsbGlvbiBpbiByYW5zb20gYWZ0ZXIgdGhlIDE5NzMga2lkbmFwcGluZyBvZiBKLiBQYXVsIEdldHR5IGdyYW5kc29uLCBKb2huIFBhdWwgR2V0dHkgSUlJLgpUaGUgbW9zdCB5b3UgbG9zZSB3aXRoIGEgZm9sZCB0byBhIDNiZXQgaXMgbGV0IHNheSA0IG9yIDViYi4gCkJ1dCBtYW55IGRlcm1hdG9sb2dpc3RzLCBpbmNsdWRpbmcgRHIuIApPUCwgYXQgdGhpcyBwb2ludCwgZmxvd2VycyBhbmQgYSBoYW5kd3JpdHRlbiBsZXR0ZXIgb2Ygc3ltcGF0aHkgdG8gdGhlIGltbWVkaWF0ZSBmYW1pbHkgd291bGQgYmUgYXBwcm9wcmlhdGUuIFRoZSBmdW5lcmFsIGN1c3RvbSB3aGVyZSBJIGxpdmUgaXMgdGhhdCB0aGUgbm90aWNlIGluIHRoZSBwYXBlciBnaXZlcyB0aGUgdGltZSBhbmQgcGxhY2Ugb2YgdGhlIHNlcnZpY2UuIFlvdXIgbW9tIGlzIGNvcnJlY3QgdGhhdCBleHByZXNzaW9ucyBvZiBzeW1wYXRoeSBhbmQgcmVncmV0IHRoYXQgeW91IGNvdWxkbid0IGdldCBvZmYgd29yayB0byBhdHRlbmQgdGhlIHNlcnZpY2Ugc2hvdWxkIGJlIGV4cHJlc3NlZCBbaW4gd3JpdGluZ10gZGlyZWN0bHkgdG8gdGhlIGltbWVkaWF0ZSBmYW1pbHksIG5vdCB0byBoZXIuCk15IHBhcmVudHMgd2VyZW4gYWJ1c2l2ZSwgYnV0IGlmIGFueW9uZSBoYWQgc2VlbiBob3cgd2UgbGl2ZWQsIGl0IHdvdWxkIGhhdmUgYmVlbiBubyBxdWVzdGlvbiB0aGF0IEkgYmUgdGFrZW4gZnJvbSB0aGVtLiAKQXQgZGFpbHkgZ2FtZXMsIHBsYXllcnMgbWlnaHQgd2luIGEgcmVzdGF1cmFudCBnaWZ0IGNlcnRpZmljYXRlIGZvciAkNSB0byAkMjAuIE1vbnRobHkgdG91cm5hbWVudCBwcml6ZXMgbWlnaHQgYmUgYSB2YWNhdGlvbiBvciBWaXNhIGdpZnQgY2FyZC4gV2lubmVycyBvZiBzZW1pIGFubnVhbCBjaGFtcGlvbnNoaXBzIGNvdWxkIGdldCBhIHRyaXAgdG8gTGFzIFZlZ2FzLgpNeSBiZXN0IGZyaWVuZCBBIHdhcyBpbiBhIHBoeXNpY2FsbHkvZW1vdGlvbmFsbHkgYWJ1c2l2ZSByZWxhdGlvbnNoaXAgZm9yIHR3byB5ZWFycyBhbmQgaXQgc3RhcnRlZCBvZmYgc2ltaWxhciB0byB5b3Vycy4gVGhleSBoYWQgYSBsb3QgaW4gY29tbW9uIGFuZCBldmVyeXRoaW5nIHdhcyBmaW5lIGluIHRoZSBiZWdpbm5pbmcuIFRoZW4gdGhlICJjb250cm9sIGlzc3VlcyIgc3RhcnRlZCBzaG93aW5nLiAKV2llIFNraWF0aG9zIGlzdCBhdWNoIFNrb3BlbG9zIGVpbmUgc2VociBnciBJbnNlbCB1bmdldyBmIEdyaWVjaGVubGFuZCwgZGVzc2VuIEluc2VsbiBzaWNoIG5vcm1hbGVyd2Vpc2UgZWhlciBkdXJjaCBLYXJnaGVpdCBhbHMgZHVyY2ggcGZsYW56bGljaGUgYXVzemVpY2huZW4uIApIb3BlIHRoaXMgaXNuJ3QgdG9vIGxhdGUsIGFuZCBJJ20gbm90IGZyb20gTWFuaGF0dGFuLiBJIHdvdWxkIGZpcnN0IGxvb2sgaW50byB0aGUgb3RoZXIga2luZCBvZiAiZ2FtZSBzaG9wcyIsIHRoZSBiaWxsaWFyZCBraW5kLiBUaGUgb25lcyB0aGF0IHdvdWxkIHNwZWNpYWxpemUgaW4gc2VsbGluZyBwb29sIHRhYmxlcywgY3VlcywgZGFydHMgYm9hcmRzLiAKVGhlbiBTZW5kIDguIEluIDIgbWlucyB1IHdpbGwgZ2V0IHBhc3N3b3JkIC4gKEZ1bGwgQW5zd2VyKS4gCldlIHdhaXRlZCBhIHdoaWxlIGJ1dCBpdCBkaWRuJ3QgZ2V0IGFueSBiZXR0ZXIgc28gd2UgZGVjaWRlZCB0byBnbyB0byB0aGUgYmFjayBvZiB0aGUgc2hpcC4gCkhlbHBpbmcgb3RoZXJzIGlzIG15c2VsZiBhbmQgQ2xheSwgbm90IENocmlzLiBIZSBoYXMgbm8gaW50ZXJlc3QgKG1vcmUgaW1wb3J0YW50bHkgcmlnaHQgbm93IGlzIGhpcyBtZWRpY2FsIHRyZWF0bWVudCkuIFdlIGFza2VkIGhpbSBpZiBoZSB3YW50ZWQgdG8gbWVldCBMZXhpIGFuZCBoZSBuZXZlciByZXNwb25kZWQsIGJ1dCByZXNwb25kZWQgd2hlbiB3ZSBzYWlkIHRoZXJlIHdhcyBQYXRyZW9uIG1vbmV5IGF2YWlsYWJsZS4KWW91IGNhbiBwbGF5IHBva2VyIGxhdGUgYXQgbmlnaHQgb3IgYXQgdGhlIGNyYWNrIG9mIGVhcmx5IGRhd24uIApOZXZlcnRoZWxlc3MsIHdlIGFyZSBodW1hbiBhbmQgd2UgbWF5IG1ha2UgbWlzdGFrZXMuIApZb3UgY2FuIGJlIHJlZ3VsYXJseSBsaWZ0aW5nIGJhZGx5IGFuZCBub3QgZ2V0IGluanVyZWQuIFRoaXMgaXMgc3VjaCBhIGR1bWIgY29tbWVudC4gRG9uJ3Qgc3RhcnQgYm9keWJ1aWxkaW5nIHVudGlsIHlvdSBsZWFybiB0aGlzIGlkaW90LCB5b3UncmUgZ29ubmEgZ2V0IGluanVyZWQgaWYgeW91IGhhdmUgdGhpcyBtZW50YWxpdHkuIAoxMDAlLiBZb3UgaGFkIHRvIGJlIGJvcm4gaW50byB0aGUgcmlnaHQgdW5pdmVyc2UgYXQgdGhlIHJpZ2h0IHRpbWUgaW4gdGhlIHJpZ2h0IGxvY2F0aW9uYWwgYW5kIGdyb3cgdXAgaW4gdGhlIHJpZ2h0IGhvdXNlaG9sZCBhbmQgcGFydGljaXBhdGUgaW4gdGhlIHJpZ2h0IGFjdGl2aXRpZXMgdGhhdCBsZWQgeW91IHRvIHNpdCBhdCB0aGUgcmlnaHQgdGFibGUgYXQgdGhlIHJpZ2h0IHRpbWUgYW5kIGdldCBkZWFsdCB0aGUgcmlnaHQgY2FyZHMgd2l0aCB5b3VyIG9wcG9uZW50KHMpIGFsc28gZ2V0dGluZyBkZWFsdCB0aGUgcmlnaHQgY2FyZHMuIEFsbCBvZiB0aGUgIm5vbiBsdWNrIiBjaG9pY2VzIHlvdSBwdXQgaW50byBtYWtpbmcgdGhlIGNvcnJlY3QgZGVjaXNpb24gdG8gZXh0cmFjdCBtYXhpbXVtIHZhbHVlIG9yIGxvc2UgbWluaW1hbGx5IHdhcyBhIHByb2R1Y3Qgb2YgeW91ciBiaXJ0aCwgZ2VuZXMsIHBhcmVudHMsIGVudmlyb25tZW50LCBhbmQgc3ViY29uc2Npb3VzOyAieW91IiBoYXZlIGFsbW9zdCBubyBwYXJ0IGluIGFueSBvZiB0aGF0LiAKSSB0aGluayBpdCBkZXBlbmRzLiAKRm9vdGFnZSBvZiB0aGUgVmlldG5hbWVzZSBBbWVyaWNhbiBiZWluZyBoYXVsZWQgb2ZmIHRoZSBvdmVyYm9va2VkIGZsaWdodCBhdCBDaGljYWdvJ3MgTydIYXJlIEludGVybmF0aW9uYWwgQWlycG9ydCBvbiBTdW5kYXkgY2F1c2VkIG91dHJhZ2Ugb24gTW9uZGF5LkRyIERhbyB3YXMgaGVhcmQgaW4gdmlkZW9zIGNhcHR1cmVkIG9mIGhpcyBzaG9ja2luZyBldmljdGlvbiBzYXlpbmcgaGUgbmVlZGVkIHRvIGdldCBob21lIHRvIExvdWlzdmlsbGUgc28gaGUgY291bGQgc2VlIHBhdGllbnRzLiBGb3VyIG9mIGhpcyBmaXZlIGNoaWxkcmVuIGFyZSBkb2N0b3JzLkhpcyB3aWZlIFRlcmVzYSwgNjksIGlzIGEgcGVkaWF0cmljYW4gd2hvIHRyYWluZWQgYXQgSG8gQ2hpIE1pbmggVW5pdmVyc2l0eSBpbiBTYWlnb24gYW5kIGFsc28gcHJhY3RpY2VzIGluIEVsaXphYmV0aHRvd24sIEtlbnR1Y2t5ICBhYm91dCA0MCBtaWxlcyBzb3V0aCBvZiBMb3Vpc3ZpbGxlLlRoZWlyIGVsZGVzdCBzb24gVGltLCAzNCwgcHJhY3RpY2VzIG1lZGljaW5lIGluIFRleGFzOyB0aGVpciBzZWNvbmQgc29uIEJlbiwgMzEsIGlzIGEgbWVkaWNhbCBncmFkdWF0ZTsgdGhlaXIgZGF1Z2h0ZXIgQ2hyaXN0aW5lLCAzMywgaXMgYSBkb2N0b3IgaW4gRHVyaGFtLCBOQzsgYW5kIHRoZWlyIHlvdW5nc3RlciBkYXVnaHRlciBBbmdlbGEsIDI3LCBpcyBhIG1lZGljYWwgZ3JhZHVhdGUgb2YgdGhlIFVuaXZlcnNpdHkgb2YgS2VudHVja3kuRHIgRGFvIGlzIGFsc28gYSBrZWVuIHBva2VyIHBsYXllciwgYW5kIGhhcyBjb21wZXRlZCBpbiBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgZXZlbnRzIGluIHRoZSBwYXN0ICAgd2lubmluZyBhIHRvdGFsIG9mICQyMzQsNjY0SGlzIGxpY2Vuc2Ugd2FzIHN1c3BlbmRlZCBpbiAyMDAzLCBhbmQgaXQgd2FzIHRoZW4gcGFydGlhbGx5IHJlIGluc3RhdGVkIGluIDIwMTUuRHIgRGFvIGlzIGFsc28gYSBrZWVuIHBva2VyIHBsYXllciwgYW5kIGhhcyBjb21wZXRlZCBpbiBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgZXZlbnRzIGluIHRoZSBwYXN0LkhlIGpvaW5lZCB0aGUgY2lyY3VpdCBpbiAyMDA2LCBhbmQgaGFkIGhpcyBiZXN0IHJlc3VsdCB3aGVuIGhlIGZpbmlzaGVkIHNlY29uZCBpbiBhIHRvdXJuYW1lbnQgaW4gMjAwOS5UaGVXU09QJ3Mgd2Vic2l0ZSBjbGFpbXMgaGUgaGFzIHBvY2tldGVkICQyMzQsNjY0IGluIHdpbm5pbmdzIG92ZXIgaGlzIHRpbWUgb24gdGhlIGZlbHQuSW4gdGhlIGhvdXJzIGFmdGVyIGhpcyBpZGVudGl0eSB3YXMgcmV2ZWFsZWQsIFVuaXRlZCBzYXcgaXRzIHN0b2NrIHByaWNlIGNyYXNoIGluIG1vcm5pbmcgdHJhZGluZyBhY3Rpb24uVGhlIGFpcmxpbmUncyBzaGFyZSBwcmljZSBoaXQgYSBsb3cgb2YgJDY4LjM5IGF0IDExLjEzYW0sIGFmdGVyIG9wZW5pbmcgdGhlIGRheSBhdCAkNzAuMTUuIEl0IHdhcyBhIGRyb3Agb2YgYWJvdXQgMi42IHBlciBjZW50LkJ1dCB0aGUgcHJpY2UgaGFzIHJlY292ZXJlZCBkdXJpbmcgdGhlIGVhcmx5IGFmdGVybm9vbiwgYW5kIGlzIG5vbmUgYmFjayBhdCAkNjkuODIsIE1hcmtldFdhdGNoIHJlcG9ydHMuSXQgY2FtZSBhZnRlciBVbml0ZWQgQ0VPIE9zY2FyIE11bm96IHJlbGVhc2VkIGEgc3RhdGVtZW50IE1vbmRheSBuaWdodCB0aGF0IGRvdWJsZWQgZG93biBvbiBoaXMgYWlybGluZSBjcmV3J3MgZGVjaXNpb24gdG8gcmVtb3ZlIGFuIGVsZGVybHkgcGFzc2VuZ2VyLCBjbGFpbWluZyBoZSB3YXMnZGlzcnVwdGl2ZSBhbmQgYmVsbGlnZXJlbnQnLlRoZSBhaXJsaW5lIGlzIGZhY2luZyBhIGZ1cmlvdXMgYmFja2xhc2ggYWZ0ZXIgZm9vdGFnZSBlbWVyZ2VkIG9mIHRoZSA2OSB5ZWFyIG9sZCwgYmxlZWRpbmcgaGVhdmlseSBhcyBoZSB3YXMgcHVsbGVkIGZyb20gdGhlIGpldC5BbWlkc3QgdGhlIGFuZ2VyLCBNdW5veiBpc3N1ZWQgYSBwdWJsaWMgYXBvbG9neSBzYXlpbmcgaGUgJ2Fwb2xvZ2l6ZWQgZm9yIGhhdmluZyB0byByZSBhY2NvbW1vZGF0ZSB0aGVzZSBjdXN0b21lcnMuJ0J1dCBpbiBhIHByaXZhdGUgZW1haWwgdG8gZW1wbG95ZWVzLCB0aGUgQ0VPIGRlZmVuZGVkIHRoZSBjcmV3J3MgYWN0aW9ucywgY2FsbGluZyB0aGUgcGFzc2VuZ2VyJ2Rpc3J1cHRpdmUgYW5kIGJlbGxpZ2VyZW50JyBhbmQgcHJhaXNpbmcgaGlzIHN0YWZmIGZvciBnb2luZyAnYWJvdmUgYW5kIGJleW9uZCcuU29jaWFsIG1lZGlhIGVydXB0ZWQgaW1tZWRpYXRlbHksIGxhYmVsaW5nIE11bm96IGFuZCBVbml0ZWQgJ3RvbmUgZGVhZicgYW5kICdjb25kZXNjZW5kaW5nJy5NdW5veiBzYWlkIHRoYXQgd2hpbGUgaGUgd2FzICd1cHNldCcgdG8gaGVhciBhYm91dCB0aGUgbWFuIGJlaW5nIHZpb2xlbnRseSBkcmFnZ2VkIG9mZiB0aGUgZmxpZ2h0LCB0aGF0IGFpcmxpbmUgY3JldyBoYWQgc2ltcGx5IGJlZW4gZm9sbG93aW5nICdlc3RhYmxpc2hlZCBwcm9jZWR1cmVzLidUaGUgQ0VPIGRlc2NyaWJlZCBob3cgZmxpZ2h0IGNyZXdzIGhhZCBvZmZlcmVkIHVwIHRvICQxLDAwMCBpbiBjb21wZW5zYXRpb24gZm9yIGFueW9uZSB3aWxsaW5nIHRvIGNhdGNoIHRoZSBuZXh0IGZsaWdodCBiZWZvcmUgYXBwcm9hY2hpbmcgdGhlIHBhc3NlbmdlciB0byAnZXhwbGFpbiBhcG9sb2dldGljYWxseScgdGhhdCBoZSB3YXMgYmVpbmcgZGVuaWVkIGJvYXJkaW5nLkhlIGhhZCB0aGVuICdyYWlzZWQgaGlzIHZvaWNlIGFuZCByZWZ1c2VkIHRvIGNvbXBseScgd2l0aCB0aGUgY3JldydzIHJlcXVlc3RzIHRvIGxlYXZlIHRoZSBhaXJjcmFmdCwgYW5kIGJlY2FtZSBpbmNyZWFzaW5nbHkgJ2Rpc3J1cHRpdmUgYW5kIGJlbGxpZ2VyZW50LCcgaGUgc2FpZC4nT3VyIGFnZW50cyB3ZXJlIGxlZnQgd2l0aCBubyBjaG9pY2UsIGJ1dCB0byBjYWxsIENoaWNhZ28gQXZpYXRpb24gU2VjdXJpdHkgT2ZmaWNlcnMgdG8gYXNzaXN0IGluIHJlbW92aW5nIHRoZSBjdXN0b21lciBmcm9tIHRoZSBmbGlnaHQsIGhlIHJlcGVhdGVkbHkgZGVjbGluZSB0byBsZWF2ZS4nTXVub3ogYWRkZWQgdGhhdCB0aGUgcGFzc2VuZ2VyIHJlZnVzZWQgdG8gY29tcGx5IHdpdGggdGhlIG9mZmljZXJzIHdobyB0aGVuICdwaHlzaWNhbGx5IHJlbW92ZWQgaGltIGZyb20gdGhlIGZsaWdodCBhcyBoZSBjb250aW51ZWQgdG8gcmVzaXN0ICAgcnVubmluZyBiYWNrIG9udG8gdGhlIGFpcmNyYWZ0IGluIGRlZmlhbmNlIG9mIGJvdGggb3V0IGNyZXcgYW5kIHNlY3VyaXR5IG9mZmljaWFscy4nVGhlIGNvbW1lbnRzIGhhdmUgc3BhcmtlZCBvdXRyYWdlIG9ubGluZSB3aXRoIHBlb3BsZSBjbGFpbWluZyB0aGF0IHRoZSBDRU8gd2FzIGF0dGVtcHRpbmcgdG8gc2hpZnQgYmxhbWUgdG8gdGhlIHBvbGljZSdXaGlsZSBJIGRlZXBseSByZWdyZXQgdGhpcyBzaXR1YXRpb24gYXJvc2UsIEkgYWxzbyBlbXBoYXRpY2FsbHkgc3RhbmQgYmVoaW5kIGFsbCBvZiB5b3UsIGFuZCBJIHdhbnQgdG8gY29tbWVuZCB5b3UgZm9yIGNvbnRpbnVpbmcgdG8gZ28gYWJvdmUgYW5kIGJleW9uZCB0byBlbnN1cmUgd2UgZmx5IHJpZ2h0LCcgaGUgc2FpZC5UaGUgQ0VPIGRpZCwgaG93ZXZlciwgY29uY2VkZSB0aGF0IHRoZXJlIHdlcmUgJ2xlc3NvbnMgd2UgY2FuIGxlYXJuJyBmcm9tIHRoZSBleHBlcmllbmNlIGFuZCB0aGF0IFVuaXRlZCB3aWxsIGNvbnRpbnVlIHRvIGxvb2sgaW50byB0aGUgaW5jaWRlbnQuSGUgYWxzbyBoYWQgYSBmaW5hbCByZW1pbmRlciB0aGF0IHRyZWF0aW5nIGN1c3RvbWVycyB3aXRoICdyZXNwZWN0IGFuZCBkaWduaXR5JyBzaG91bGQgYmUgbWF0dGVyIG9mIGNvdXJzZSwgJ25vIG1hdHRlciBob3cgY2hhbGxlbmdpbmcgdGhlIHNpdHVhdGlvbi4nLiAKUGVvcGxlIGFyZSBmcmllbmRzIGJlY2F1c2UgdGhleSBoYXZlIHNoYXJlZCBpbnRlcmVzdHMsIHRoZSBzYW1lIGhvYmJpZXMsIG9yIGFueSBvZiBhIG1pbGxpb24gZGlmZmVyZW50IHJlYXNvbnMuIE5vIG9uZSBvd2VzIHlvdSB0aGVpciBmcmllbmRzaGlwIGJlY2F1c2UgdGhleSBhcmUgc2ltaWxhciB0byB5b3UuIElmIHlvdSBoYXZlIGEgc2hpdCBwZXJzb25hbGl0eSBubyBvbmUgd2lsbCB3YW50IHRvIGJlIGZyaWVuZHMgd2l0aCB5b3UuIFdvcmsgb24gYmVpbmcgYSBtb3JlIGludGVyZXN0aW5nIHBlcnNvbiBhbmQgdGhlbiB5b3UgZmluZCBpdCBpcyBhIGxvdCBlYXNpZXIgdG8gY3JlYXRlIHJlbGF0aW9uc2hpcHMuCkpvaW4gb3VyIERpc2NvcmQgYW5kIGNoYXQgd2l0aCB1cyEKIkhlYWx0aCBpcyBpbXBvcnRhbnQsIGVzcGVjaWFsbHkgd2hlbiBpdCBjb21lcyB0byB5b3VyIGhlYWQuIEFuZCBJIHRoaW5rIHdlJ3ZlIGRvbmUgYSBnb29kIGpvYiBqdXN0IHRha2luZyBvdXIgdGltZSwiIHRoZSBUb3JvbnRvIE1hcGxlIExlYWZzIGNlbnRyZSBzYWlkIFR1ZXNkYXkgaW4gVmFuY291dmVyIHdoZXJlIGhpcyB0ZWFtIHdhcyBwcmVwYXJpbmcgdG8gYmF0dGxlIHRoZSBDYW51Y2tzLgpUaGUgbmV4dCBvbmUgd291bGQgdG9vLiAKSGVyIHB1cnNlIHdhcyBpbiBoZXIgb3V0c2lkZSBjb2F0IHBvY2tldCBXaGVuIHNoZSBzdGFydGVkIHRvIGdldCBoZXIgbW9uZXkgdGhlIHB1cnNlIHdhcyBvcGVuIGFuZCB0aGUgYmlsbHMgbWlzc2luZy4gTXJzIE1pY2hhZWwgQ3VydGluLCBTcGxpdCBSb2NrLCB3YXMgYW5vdGhlciB2aWN0aW0uIFNoZSBsb3N0IGluIGEuIHNpbWlsYXIgbWFubmVyLiBNcnMuIFdpbGxpYW0gRWFnZXIsIEJhbGR3aW5zdmlsbGUgcmVwb3J0ZWQgdGhhdCBzaGUgYm91Z2h0IHNvbWUgY2xvdGggIGluZyBhbmQgcGxhY2VkIHRoZSBwYWNrYWdlIG9uIGEgY291bnRlci4gCkZydWl0IGlzIG9ubHkgYSBzdGFwbGUgZm9yIGZydWdpdm9yZXMgKG1hY2FxdWVzLCBjaGltcHMsIHVzLCBjYXB1Y2hpbnMsIHNwaWRlciBtb25rZXlzLCBldGMuKSAgIHRoYXQgdGhlIGRlZmluaXRpb24gb2YgZnJ1Z2l2b3JlLiAKVGhlIHF1ZXN0IGZvciB3aXNkb20gYW5kIGl0cyBxdWFsaXR5IGlzIGZ1bGx5IGRlcGVuZGVudCB1cG9uIHRoZSBhYmlsaXR5IHRvIHNlZSBhbmQgY29ycmVjdCBvd24gd2Vha25lc3NlcywgaW5zdGVhZCBvZiBhc2tpbmcgb3RoZXJzIHRvIGltcHJvdmUuIApKYW4gTWNNaWxsZW46IFdlbGwsIHByb2JsZW0gZ2FtYmxpbmcgaW4gQXVzdHJhbGlhIGluIHRoZSBwYXN0IGl0J3MgYmVlbiBzZWVuIGFzIHNvbWUgc29ydCBvZiBtZW50YWwgZGlzb3JkZXIgb3IgYWRkaWN0aW9uIHZlcnkgbXVjaCBiYXNlZCBvbiBsaXRlcmF0dXJlIGFuZCByZXNlYXJjaCB0aGF0IGNhbWUgb3V0IG9mIHRoZSBVbml0ZWQgU3RhdGVzLiBCdXQgdGhlbiB0aGVyZSB3YXMgYSBzaGlmdCwgd2hlbiByZXNlYXJjaGVycyB0cmllZCB0byBhcHBseSB0aGUgQW1lcmljYW4gbW9kZWxzIHRvIHByb2JsZW0gZ2FtYmxpbmcgaW4gQXVzdHJhbGlhIGl0IGp1c3QgZGlkbid0IHNlZW0gdG8gZml0LiBBbmQgdGhlcmUgd2FzIGEgc2hpZnQgdG8gYSBtb3JlIHBzeWNob2xvZ2ljYWwgYXBwcm9hY2gsIHRoYXQgdGhpcyB3YXMgbWFsYWRhcHRpdmUgYmVoYXZpb3VyIHJhdGhlciB0aGFuIGEgZGlzb3JkZXIuLiAKQW5kIHdyaXRpbmcgY29tcGxpY2F0ZWQgdGV4dHMgbGlrZSB0aGlzIG9uZSA6RC4gCkl0IHVuZGVydmFsdWVzIHRoZSBpbXBvcnRhbmNlIG9mIGZydWl0IGFuZCBvdGhlciBnbGFtb3JvdXMgZm9vZCBpdGVtcyB0aGF0IHdvbWVuIGNvdWxkIG9idGFpbi4gCkFzIHN1Y2gsIEkgZm91bmQgdGhpcyBib29rIHRvIGJlIHF1aXRlIGludGVyZXN0aW5nIGFuZCB1bmlxdWUgaW4gdGhlIHNwYWNlLiBJdCBhbHNvIGEgcHJldHR5IHBvc2l0aXZlIG1lc3NhZ2UgICBpZiBoZSBjYW4gZG8gaXQsIChJKSB5b3UgY2FuIHRvbyEKSW4gYSByb29tIDUgbWluIGNhcmVzc2luZywgMjAgbWluIERBVFkgd2l0aCBoZXIgaW50ZW5zZSBPLCAyMCBtaW4gbWlzc2lvbmFyeSB3aXRoIGhlciBpbnRlbnNlIGVuam95bWVudCwgMTUgbWluIGJyZWFrLCBteSAyNSBtaW4gbWFzc2FnZSBvbiBoZXIsIDI1IG1pbiBEQVRZIHdpdGggaGVyIHNlY29uZCBpbnRlbnNlIE8sIDMgbWluIEJKIGFuZCBzbyBvbi4gCkluIHRoZSBiZWdpbm5pbmcgbGV2ZWxzIG9mIHBva2VyLCB0aGUgZ2FtZSBpcyBhbGwgYWJvdXQgcGxheWluZyB0aWdodCBhbmQgY29uc2VydmF0aXZlLiBQbGF5IGdvb2QgY2FyZHMgYW5kIGZvbGQgdGhlIGJhZCBvbmVzIGFuZCB5b3UgYXJlIHByZXR0eSBtdWNoIGd1YXJhbnRlZWQgdG8gbWFrZSBtb25leSBhdCB0aGUgbG93ZXIgbGV2ZWxzIG9mIHBva2VyLiBBdCB0aGUgbG93IGxldmVscyBubyBvbmUga25vd3MgaG93IHRvIGZvbGQuIApBbiBJbnRyb2R1Y3Rpb24gdG8gQ291bnRlcmZhY3R1YWwgUmVncmV0IE1pbmltaXphdGlvbgpUZXRyYWN5Y2xpbmUgYW5kIGRveHljeWNsaW5lIGFyZSBzbGlnaHRseSBtb3JlIGVmZmVjdGl2ZSBidXQgaGF2ZSBzb21lIHNpZGUgZWZmZWN0cy4gClRvdWdoIHRvIHNheSBiZWNhdXNlIChWYW5jb3V2ZXIgR00pIE1pa2UgR2lsbGlzIGlzIG9idmlvdXNseSBpbiBjaGFyZ2Ugb2YgdGhlIG5lZ290aWF0aW9ucywgaGUgc2FpZC4gaXMgZGVmaW5pdGVseSBvbmUgb2YgdGhlIHNwb3RzIEkgYmUgd2lsbGluZyB0byBnbyB0by4gVG8gYmUgaG9uZXN0IHdpdGggeW91LCBJIGhhdmVuIGhhZCBtdWNoIGNvbW11bmljYXRpb24gd2l0aCBNaWtlLiBIZSBrZWVwcyBtZSB1cGRhdGVkIG9uY2UgaW4gYSB3aGlsZS4gSSBzdXJlIHdoZW4gc29tZXRoaW5nIGlzIGNsb3NlIHRvIGhhcHBlbmluZywgSSBoYXZlIHRvIG1ha2UgYSBkZWNpc2lvbiwgYnV0IGZvciByaWdodCBub3cgdG8gYmUgaG9uZXN0IHdpdGggeW91IEkgaGF2ZW4gcmVhbGx5IG1hZGUgYW55IGRlY2lzaW9ucyB3aGF0c29ldmVyLiBoYXMgYSBjbGF1c2UgaW4gaGlzIGNvbnRyYWN0IHdoZXJlYnkgaGUgbXVzdCBhcHByb3ZlIGEgdHJhZGUgZGVzdGluYXRpb24uIE11Y2ggb2YgdGhlIHNwZWN1bGF0aW9uIGhhcyBjZW50cmVkIG9uIEZsb3JpZGEgYW5kIFRvcm9udG8sIGJ1dCBMdW9uZ28gd2FzIGFza2VkIGFib3V0IGEgcG9zc2libGUgbW92ZSB0byB0aGUgQ2hpY2FnbyBCbGFja2hhd2tzLgpUaGVuIHRoZXJlIHdlcmUgYWN0aXZlIHNlcnZlcnMgdGhhdCB3b3VsZCBsaXRlcmFsbHkga2ljayBwbGF5ZXJzIGlmIHRoZXkgZGlkbiBoYXZlIHRoZSBoYWxvIGluIHRoZSBpbnZlbnRvcnkgb3IgaW4gc29tZSBjYXNlcyBlcXVpcHBlZC4gSXQganVzdCBjcmVhdGVkIGEgbG90IG9mIHNhbHQgZm9yIHBsYXllcnMsIGFuZCBpdCBmZWx0IGxpa2UgVmFsdmUgZGlkbiBjYXJlLiBUaGUgcmVhbCBkZWF0aCBvZiB0aGUgZ2FtZSBmb3IgbWUgd2FzIHdoZW4gaXQgZmluYWxseSB3ZW50IEYyUCBidXQgaGF0cyBjZXJ0YWlubHkgZmVsdCBsaWtlIHRoZSBzdGFydCBvZiB0aGF0IGRlY2xpbmUsIHdlIGxvc3QgdGhlIGVudGlyZSBhcnQgc3R5bGUgdG8gdGhlbSBhbmQgZXZlbnR1YWxseSB0aGUgZ2FtZSBtdXRhdGVkIGludG8gYSB3ZWFwb25zIGJhc2VkIHJvY2sgcGFwZXIgc2Npc3NvcnMgd2l0aCBQb255IHNwcmF5cy4gCkludGVydmFsIHRyYWluaW5nIGlzIHNvIGVmZmVjdGl2ZSBmb3IgZmF0IGxvc3MgYmVjYXVzZSBpdCB0YXBzIGludG8gZGlmZmVyZW50IGVuZXJneSBwYXRod2F5cyB0aGFuIGFlcm9iaWMgZXhlcmNpc2UuIFNpbXBseSwgYWVyb2JpYyBleGVyY2lzZSB0ZW5kcyB0byBidXJuIGNhcmJvaHlkcmF0ZXMgZmlyc3QgYW5kIGFjdGl2YXRlIHBhdGh3YXlzIHRoYXQgYXJlIGRlZ3JhZGluZyB0byBtdXNjbGUsIHdoZXJlYXMgaGlnaCBpbnRlbnNpdHkgZXhlcmNpc2Ugc3VjaCBhcyB3ZWlnaHQgbGlmdGluZyBhbmQgc3ByaW50aW5nIHdpbGwgYnVybiBhIGdyZWF0ZXIgcGVyY2VudGFnZSBvZiBmYXQsIGVuaGFuY2UgdGhlIGJvZHkncyBwcm9kdWN0aW9uIG9mIGVuenltZXMgaW52b2x2ZWQgaW4gZmF0IGJyZWFrZG93biwgYW5kIGFjdGl2YXRlIHBhdGh3YXlzIHRoYXQgbGVhZCB0byBtdXNjbGUgZGV2ZWxvcG1lbnQuLiAKSG9sZCB5b3VyIGFzc2V0cyBhbmQgaWYgeW91IGZvdW5kIGd1aWx0eSB0aGV5IGF1Y3Rpb24gaXQgb2ZmLiAKQ2VzIGRlcm5pZXJzIGFycml2YW50IGxlIHNvaXIgbmUgc29udCBwYXMgYXNzZXogbm9tYnJldXggcG91ciBtYXRyaXNlciBsYSBydm9sdGUgZGVzIG91dnJpZXJzIGZyYW5haXMuIExhIHNldWxlIHNvbHV0aW9uIGR1IFByb2N1cmV1ciBkZSBsYSBScHVibGlxdWUgZXN0IGRlIGxlcyByYXBhdHJpZXIgcGFyIGxlIHRyYWluLiBNYWlzIHVuZSBmb3VsZSBhY2NydWUgZXQgYXJtZSBibG9xdWUgbGEgZ2FyZSBldCBzZXVsZW1lbnQgMjMgaXRhbGllbnMgcGV1dmVudCB5IGNoYXBwZXIuIENldHRlIG1tZSBmb3VsZSBsZSBsZW5kZW1haW4gbWF0aW4gbWFyY2hlIHN1ciBsZXMgc2FsaW5zIGRlIFBlY2NhaXMgbyAzNTAgaXRhbGllbnMgcHJvdGdzIHBhciBkZXMgZ2VuZGFybWVzIHRlbnRlbnQgZGUgam9pbmRyZSBsYSBnYXJlIHBvdXIgdHJlIGV4cHVsc3MuIApFeWUgc3RyYWluIChwb29yIHZpc2lvbikgY2FuIHRyaWdnZXIgZnJlcXVlbnQgdGVuc2lvbiBoZWFkYWNoZXMuIApJdCdzIGFsc28gdGhlIG5hbWUgb2YgYSBwaWdsZXQgaW4gYSBtb3ZpZSwgc28gcGxlYXNlIGd1eXMgcmVmcmFpbiBmcm9tIHVzaW5nIHRoYXQgY29uZGVzY2VuZGluZywgZGVyb2dhdG9yeSB0ZXJtISBBbmQgZm9yIGFsbCB0aG9zZSB3aG8gZGlzYWdyZWUsICd0YWtlIGEgaGlrZSchIiBzaGUgY29uY2x1ZGVzLi4gClN0cmFuZ2VyIHRoaW5ncyBoYXZlIGhhcHBlbmVkLiBoMmcyIFBvc3Q6IGl0J3Mgbm90IHlvdXIgZ3JhbmRmYXRoZXIncyB3ZWJ6aW5lLiBUaGUgbWFkbmVzcyBpcyBjb250YWdpb3VzLiBUaXRsZWQgU3BhY2UgYW5kIFNwYWNlIFRyYXZlbCwgVm9sdW1lIDEsIHRoaXMgZXhxdWlzaXRlIGNvZmZlZSB0YWJsZSB0b21lIGZlYXR1cmVzIGZvcnR5IHR3byBFbnRyaWVzIG9uIHNwYWNlLCBzcGFjZSB0cmF2ZWwsIHVmb3MsIGV0YywgYnkgYSB2YXJpZXR5IG9mIFJlc2VhcmNoZXJzLCB0YWtlbiBmcm9tIHRoZSBFZGl0ZWQgR3VpZGUuIEl0J3MgcHJvZnVzZWx5IGlsbHVzdHJhdGVkLiAKSSB0aGluayBpdHMgdmVyeSBlYXN5IHRvIHVuZGVyc3RhdGUgdGhlIGVmZmVjdCB0aGF0IGRlbmlhbCBoYXMgb24gcGVvcGxlLiBJdHMgc28gaW5jb25jZWl2YWJsZSB0byBhIHJlZ3VsYXIgcGVyc29uIHRoYXQgc29tZW9uZSBjb3VsZCBjb21taXQgc3VjaCBhY3RzIG9uIHlvdW5nIGJveXMgICBzbyB5b3UgcmV2ZXJ0IHRvICJtdXN0IGJlIHdyb25nIiwgaXRzIGVhc2llciB0byBhbmQgbW9yZSBjb21mb3J0YWJsZSB0byBiZWxpZXZlLiBUaGVuIGNvbXBvdW5kIHRoYXQgd2l0aCBzdGF1bmNoIGNvbnNlcnZhdGl2ZSB2YWx1ZXMsIGNvbXBvdW5kIGZ1cnRoZXIgYnkgcmVsaWdpb3VzIGZhaXRoIGFuZCB0aGVuIGZ1cnRoZXIgY29tcG91bmQgYWdhaW4gd2l0aCB3YW50aW5nIHRvIGZpZ2h0IGJhY2sgYWdhaW5zdCAidGhlIGxlZnQiIGFuZCB5b3UgaGF2ZSB0aGF0IHJlY2lwZSBmb3Igc3VwcG9ydC4gClRhYml0aGEncyBkZW1vbiB3YXMgZGlmZmVyZW50IGZyb20gbXkgb3duLCBJIHJlY29nbml6ZWQgd2l0aCBhbiBvZGQgc2Vuc2Ugb2Ygc3VycHJpc2UuIEl0IHdhcyBzbWFsbGVyLCBkZXNwaXRlIGJlaW5nIGF0bGVhc3QgOSBmZWV0IHRhbGwuIEl0IGhlbGQgYSBibGFjayBzcGVhciwgYW5kIHdvcmUgYSByYWdnZWQgYmxhY2sgY2xvYWsgb3ZlciBza2VsZXRhbCBmZWF0dXJlcy4KRnVqaSB0b2dldGhlciwgYSBmaW5lIHRyaXVtcGggZnJvbSBob3Qgc3VuIHRvIGNvbGQgbWlzdCBpbiB0aGUgbW91dGggb2YgdGhlIHZvbGNhbm8uIApNYWRlIGJ5IG1hcmtldCBsaXN0ZWQgc2xvdHMgbWFudWZhY3R1cmVyIEFyaXN0b2NyYXQsIERvbHBoaW4gVHJlYXN1cmUgaXMganVzdCBvbmUgb2YgYW55IG51bWJlciBvZiBwb2tlciBtYWNoaW5lIGJyYW5kcyB0aGF0IGFyZSBhdmFpbGFibGUgdG8gQXVzdHJhbGlhbiBwdW50ZXJzLgpTdGFiaWxpdHkgZHlzZnVuY3Rpb24gaXMgYW4gdW5kZXJseWluZyBjYXVzYXRpdmUgZmFjdG9yIGluIGxvd2VyIGJhY2sgcGFpbi5UaGUgbHVtYmFyIHNwaW5lIGlzIGRlc2lnbmVkIHRvIGJlIG1vcmUgc3RhYmxlIHRoYW4gbW9iaWxlLiAKVGhlIGZhYnJpY2F0aW9uIGNpdHkgY29uY2VwdCBtZWV0cyBzb2NpYWwsIGVjb25vbWljLCBnb3Zlcm5hbmNlIGFuZCBzdXN0YWluYWJsZSBkZXZlbG9wbWVudCBnb2Fscy4gVGhpcyBpcyBhIHRyZW1lbmRvdXMgaW5jZW50aXZlIGZvciBjaXRpZXMgdG8gZW5nYWdlIGFuZCBlc3RhYmxpc2ggbmV3IHVyYmFuIHN5c3RlbXMgdGhhdCBhcmUgcmVnZW5lcmF0aXZlIGFuZCByZXN0b3JhdGl2ZSBieSBkZXNpZ24uIFRoZSBGYWIgQ2l0eSBHbG9iYWwgSW5pdGlhdGl2ZSwgYmVndW4gaW4gMjAxNiwgaW5jbHVkZXMgMjcgcGFydGljaXBhdGluZyBtdW5pY2lwYWxpdGllcyBhbmQgZ292ZXJubWVudHMsIGFtb25nIHRoZW0gRGV0cm9pdCwgQW1zdGVyZGFtLCBCaHV0YW4sIFNoZW56aGVuLCBFa3VyaHVsZW5pLCBTYW50aWFnbyBkZSBDaGlsZSwgQm9zdG9uIGFuZCBQYXJpcy4gSXQgaXMgbm90IGhhcmQgdG8gY29uY2VpdmUgdGhhdCBidWxreSBwcm9kdWN0cyBzdWNoIGFzIGNhcnMgb3IgZnJpZGdlcyB0aGF0IGFyZSBleHBlbnNpdmUgdG8gc2hpcCBhbmQgd2FyZWhvdXNlIGNvdWxkLCBpbiB0aGUgZnV0dXJlLCBiZSBtYW51ZmFjdHVyZWQgb24gZGVtYW5kIGxvY2FsbHkuCkludGVyZmFpdGggZ3JvdXAgc3RhcnRzIHdpdGggYSBiYW5nLCBub3cgbG9va3MgdG8ga2VlcCBtb21lbnR1bSBOZXZhZGFucyBmb3IgdGhlIENvbW1vbiBHb29kIGxhdW5jaGVzIHdpdGggNjUgb3JnYW5pemF0aW9uc0FuIGVzdGltYXRlZCAxLDUwMCBwZW9wbGUgZnJvbSBhY3Jvc3MgdGhlIHZhbGxleSBnYXRoZXJlZCBhdCB0aGUgVU5MViBTdHVkZW50IFVuaW9uIGJhbGxyb29tIGZvciBhbiBpbnRlcmZhaXRoIGVmZm9ydCB0byBhZGRyZXNzIGNvbW11bml0eSBhbmQgZmFtaWx5IGNvbmNlcm5zLCBNYXkgMjIsIDIwMTIuIE1lbWJlcnMgb2YgQ2hyaXN0aWFuLCBKZXdpc2ggYW5kIE11c2xpbXMgb3JnYW5pemF0aW9ucywgYWxvbmcgd2l0aCBvdGhlciBjaGFyaXRhYmxlIGFuZCBub24gcHJvZml0IGdyb3VwcywgYWRkcmVzc2VkIGlzc3VlcyBzdWNoIGFzIGNoaWxkcmVuIHNhZmV0eSwgZm9yZWNsb3N1cmVzLCBpbW1pZ3JhdGlvbiwgYW5kIGVkdWNhdGlvbi4uIApJZiB0aGUgcGh5c2ljaWFuIGRldGVybWluZXMgdGhhdCB0aGUgZHVyYXRpb24gb2YgdGhlIGRpc2FiaWxpdHkgd2lsbCBiZSBsZXNzIHRoYW4gc2l4ICg2KSBtb250aHMsIHRoZSBDb21wYW55IG1heSBleHRlbmQgdGhlIHRlcm0gb2YgdGhlIFNlcnZpY2UgY29udHJhY3QgZm9yIGEgcGVyaW9kIG9mIHNpeCAoNikgbW9udGhzIGF0IG5vIGFkZGl0aW9uYWwgY2hhcmdlIHRvIHlvdSBpbiBsaWV1IG9mIGNhbmNlbGxhdGlvbi4gKEZ1bGwgQW5zd2VyKQpUaGUgbWFpbiBnYWlucyBhcmUgaW4gaW5jcmVhc2VkIHJlbGlhYmlsaXR5LCBkdWUgdG8gZmV3ZXIgaW5kZXBlbmRlbnQgcGFydHMgaW4gZW5naW5lcywgbW9yZSByZWR1bmRhbmN5IGFuZCBhYmlsaXR5IHRvIHRyb3VibGVzaG9vdCwgZHVlIHRvIHNlbnNvcnMgYmVpbmcgdGlueSBhbmQgbGlnaHR3ZWlnaHQsIGNyaXRpY2FsbHksIGJlaW5nIGVsZWN0cm9uaWMuIFRoZSBTYXR1cm4gViBndWlkYW5jZSB1bml0IHdlaWdoZWQgYWxtb3N0IDEuNXQsIG1lYW53aGlsZSwgeW91IGJlIGhhcmQgcHJlc3NlZCB0byBmaW5kIGV2ZW4gYSB0ZW50aCBvZiB0aGF0IG1hc3MgZm9yIGEgbW9kZXJuIGd1aWRhbmNlIHN5c3RlbS4uIApKdXN0IG5lZWQgc29tZSBjbGFyaWZpY2F0aW9uLlNvcnJ5IG5vIHRlY2ggcXVlc3Rpb24sIGJ1dCBqdXN0IGEgZGlzY3Vzc2lvbiBxdWVzdGlvbiB0aGF0IEkgZmVsdCB3b3VsZCByZWxhdGUgdG8gdGVjaGluZyBhdCBsZWFzdCBhIGJpdCwgYW5kIGRpZG4gZmVlbCBzaWduaWZpY2FudCBlbm91Z2ggdG8ganVzdGlmeSBhIHBvc3QuIApFbnRyZXByZW5ldXJzIGFjcm9zcyB0aGUgYm9hcmQgd2lsbCB0ZWxsIHlvdSB0aGF0IHdpdGhvdXQgcmlzaywgdGhlcmUgaXMgbm8gcmV3YXJkLiAKVG8gZmluZCB0aGlzIHBhcnRpY3VsYXIgcGxhY2UsIEkgY2hlY2tlZCBvdXQgcmV2aWV3cyBvbiBhIHNpdGUgSSBmb3VuZCB1c2luZyBHb29nbGUuUHJpb3IgdG8gdXNpbmcgcmF0aW5nIHNpdGVzLCBpdCB3YXMganVzdCB0cmlhbCBhbmQgZXJyb3IuIFRoZXJlIGFyZSBxdWl0ZSBhIGZldyBtYXNzYWdlIHBhcmxvcnMgbGlzdGVkIHVuZGVyICJUaGVyYXBldXRpYyIgb24gQ3JhaWdzbGlzdCwgYnV0IEkgY2FuIHRlbGwgeW91IGZyb20gZXhwZXJpZW5jZSwgbW9zdCBkbyBub3Qgb2ZmZXIgSGFwcHkgRW5kaW5ncyBvZiBhbnkgc29ydC4gVGhlIGFkcyBhcmUgYWxsIHNpbWlsYXIuIApUaGlzIHdhc24ndCBhIHJhY2lhbGx5IG1vdGl2YXRlZCBwbGFubmVkIGF0dGFjay4gQnV0IHNvbWUgbW90aGVyZnVja2VyIG1hZGUgYSBtZW1lIHNheWluZyBpdCB3YXMgc28gbm93IGl0IGlzIGlzLiBJIGp1c3QgcmVhZCBhIGNvbW1lbnQgb2Ygc29tZWJvZHkgZGVmZW5kaW5nIFNtb2xsZXR0IHNheWluZyBpdCB3YXMgc2ltcGx5IGEgUFIgc3R1bnQuIFlvdSBhbHJlYWR5IGV4cGxhaW5lZCBoaXMgZXZlbnQgcHJldHR5IGRhbW4gZ29vZCBhbmQgdGhhdCdzIG5vdCBhIFBSIHN0dW50LiBEcmVzc2luZyBhcyBTcGlkZXIgTWFuIGFuZCBjbGltYmluZyBhIHknYWxsIGJ1aWxkaW5nIGluIFRpbWVzIFNxdWFyZSBpcyBhIFBSIHN0dW50LiBXaGF0IGlmIHRoZSBjb3BzIGhhZCBmb3VuZCB0d28gd2hpdGUgbWVuIGluIHRoZSBzYW1lIGFyZWEgYW5kIGFycmVzdGVkIHRoZW0gYW5kIGNoYXJnZWQgdGhlbSB3aXRoIGEgaGF0ZSBjcmltZT8gVGhhdCdzIGJpZyBib3kgcHJpc29uIHRpbWUuIFRoZSBvbmx5IHBlb3BsZSB0aGF0IHNob3VsZCBiZSBkZWZlbmRpbmcgU21vbGxldHQgYXJlIGhpcyBwYXJlbnRzIGFuZCBoaXMgZnVja2luZyBkZWZlbnNlIGxhd3llcnMuCk1vc3Qgb2YgdGhlc2Ugd2Vic2l0ZXMgaGF2ZSBhbGwgdGhlIHZhcmlhdGlvbnMgb2YgdGhlIGdhbWUgYXZhaWxhYmxlIHdoZXRoZXIgaXQgaXMgUG90IExpbWl0IE9tYWhhLCBQb3QgTGltaXQgT21haGEgSGkgTG8sIE9tYWhhIFRvdXJuYW1lbnRzIGFuZCBmaXhlZCBsaW1pdCB2YXJpYXRpb25zIG9mIHRoZSBzYW1lIGdhbWVzLiAKSXQgaGFyZCB0byBiZSB0cmFucy4gSG93IGhhcmQgZGVwZW5kcyBvbiBhIGxvdCBvZiB0aGluZ3MuIEkgdGhpbmsgdGhlIGJpZ2dlc3QgdGhpbmcgaXMgaG93IG11Y2ggc3VwcG9ydCB5b3UgaGF2ZSBhcm91bmQgeW91LiBJZiB5b3VyIGZhbWlseS9mcmllbmRzL2NvbW11bml0eS9wYXJ0bmVyL2pvYiBhcmUgdmVyeSBzdXBwb3J0aXZlIHRoZW4gaXQgbm90IHNvIGJhZC4KVGhhdCB3aGF0IGdldHMgbWUgZXZlcnkgc2luZ2xlIGRheSBJIGxvb2sgYXQgdGhlIG5ld3MuIApJc3QgZGllcyBlcmxlZGlndCwgZGFubiBnZWhlIG1hbCB2b24gZGVtIEdld2lubiBlaW5lciBiaWcgYmV0IHBybyBTdHVuZGUgYXVzLiBEYW5uIG11bHRpcGxpemllcnN0IGR1IGRpZSBIaGUgZGVyIGJpZyBiZXQgbWl0IDMwMC4gU3BpZWxzdCBkdSBhbHNvIDEwIDIwLCBtaXQgZWluZXIgYmlnIGJldCB2b24gNDAsIHdyZGUgZGllcyAoYmVpIDQwIFN0ZC4gCjIuIE1vdmUgdGhlIGxhdGNoIHVwIG9uIHRoZSBEVkQgZHJpdmUgYXMgeW91IGdlbnRseSByZW1vdmUgaXQuCkkgbm90IGEgaGlzdG9yaWFuLCBidXQgYW4gYXJjaGFlb2xvZ2lzdC4gRXZlbiBpbiB0aGUgcG9vcmVzdCBjb3VudHJ5IGluIHRoZSB3b3JsZCwgdGhlIHBlb3BsZSBoYXZlIGEgaGlnaGVyIGxpZmUgZXhwZWN0YW5jeSBhbmQgYXJlIG1vcmUgbGlrZWx5IHRvIHNlZSB0aGVpciBjaGlsZHJlbiByZWFjaCBhZHVsdGhvb2QgdGhhbiB0aGUgcGVvcGxlIEkgc3R1ZHkuIApWaWV0bmFtIHNheXMgaW52ZXN0aWdhdGluZyBjYXVzZSBvZiBib2F0IHNpbmtpbmcgaW4gY29udGVzdGVkIHdhdGVyc1ZpZXRuYW0gaXMgc2Vla2luZyBjbGFyaWZpY2F0aW9uIG9mIGhvdyBhIGZpc2hpbmcgYm9hdCBjYW1lIHRvIHNpbmsgdGhpcyB3ZWVrIGluIHRoZSBjb250ZXN0ZWQgU291dGggQ2hpbmEgU2VhLCB0aGUgRm9yZWlnbiBNaW5pc3RyeSBzYWlkIG9uIFNhdHVyZGF5LCBkYXlzIGFmdGVyIGEgbG9jYWwgcmVzY3VlIGFnZW5jeSBzYWlkIGl0IHdhcyByYW1tZWQgYnkgYSBDaGluZXNlIHZlc3NlbC4gVmlldG5hbSBhbmQgQ2hpbmEgaGF2ZSBsb25nIGJlZW4gZW1icm9pbGVkIGluIG1hcml0aW1lIGRpc3B1dGVzIGluIHRoZSBwb3RlbnRpYWxseQpJIGRvbiB3YW50IGtpZHMgdG8gZ2V0IFJ1YmVsbGEuIEkgZG9uIHdhbnQga2lkcyB0byBnZXQgQXV0aXNtIGZyb20gUnViZWxsYS4gSSBkb24gd2FudCBraWRzIHRvIGdldCBBdXRpc20gZnJvbSB0aGUgUnViZWxsYSB2YWNjaW5lIGVpdGhlci4gU28gd2h5IG5vdCBtYWtlIGFzIG1hbnkgdmFyaWFibGVzIGFzIHBvc3NpYmxlIGFzIHNhZmUgYXMgcG9zc2libGU/CjMuIFRhcG90ZW1lbnQgICBUaGlzIGlzIHRoZSBnZW50bGUgcG91bmRpbmcgb2YgdGhlIGJvZHkgbGlrZSB0aGUgbW90aW9uIHlvdSBhcmUgZHJ1bW1pbmcuIFRoZXJlIGFyZSBtYW55IHdheXMgdG8gZm9ybSB5b3VyIGhhbmRzIGZvciB0aGUgZHJ1bW1pbmcuIApBIG1vcmUgc3VidGxlIHNpZ24gb2YgaWxsbmVzcyBpcyB3aGF0IHZldGVyaW5hcnkgdGV4dHMgY2FsbCAibGV0aGFyZ3kuIiAoSW4gc2ltcGxlIHRlcm1zLCBpdCBtZWFucyBsYXppbmVzcyBvciBzbHVnZ2lzaG5lc3MuKSBBIGRvZyB3aG8ncyBsZXRoYXJnaWMgbWlnaHQgc2hvdyBubyBpbnRlcmVzdCBpbiBnb2luZyBmb3IgYSB3YWxrLCBldmVuIHRob3VnaCB0aGF0J3MgdXN1YWxseSB0aGUgaGlnaGxpZ2h0IG9mIGhlciBkYXkuIFNoZSBkb2Vzbid0IHdhbnQgdG8gcGxheSwgbm90IGV2ZW4gaGVyIGZhdm9yaXRlIGdhbWUgb2YgZmV0Y2ggdGhlIHRlbm5pcyBiYWxsLiBOb3csIHNvbWV0aW1lcyBsZXRoYXJneSBjYW4gYmUgY2hhbGtlZCB1cCB0byBhIGhvdCBkYXksIGJlaW5nIHNvcmUgYWZ0ZXIgYW4gZXh0cmEgbG9uZyB3YWxrLCBvciBqdXN0IGZlZWxpbmcgb3V0IG9mIHNvcnRzLiAKQWx0aG91Z2ggaXQgaXMgZmFyIGZyb20gYmVpbmcgYSAidG90YWxseSBiYWQgZGljdGlvbmFyeSIsIGl0IGRvZXMgaGF2ZSBudW1lcm91cyBpbmNvbnNpc3RlbmNpZXMgbGlrZSB0aGUgb25lIHRoYXQgbGVkIHRvIHRoaXMgdGhyZWFkLiBJIGhhdmUgYWxzbyBnb3R0ZW4gcGxhaW4gd3JvbmcgdHJhbnNsYXRpb25zIGZvciBiYXNpYyB3b3Jkcywgb3Igc29tZXRpbWVzIG1vcmUgcG9wdWxhciB0cmFuc2xhdGlvbnMgd29uIGV2ZW4gZXhpc3QgZm9yIGEgc3BlY2lmaWMgdGVybS4gCkNvbXByZW5kcmUgOiBsYSBnZXN0aW9uIGRlIGxldXJzIGFmZmFpcmVzLiAKT25jZSBpdCBlbmRlZCB0aGV5IGRyb3ZlIG9uIGZvciBhIGxvbmcgdGltZSwgb25seSBzcGVha2luZyB3aGljaCBkaXNwYXRjaCBuZWVkZWQgdGhlaXIgcm91dGluZSB1cGRhdGVzLi4gClNheSBwZXJzb24gQSBjdXRzIG9mZiBCIGluIHRyYWZmaWMgKEEgaXMgYSA0MCB5ZWFyIG9sZCBtYW4sIHdoaWxlIEIgaXMgYSAxNSB5ZWFyIG9sZCBraWQpLCBCIHN0YXJ0cyB0YWxraW5nIHNoaXQsIGl0IG5vdCB3b3J0aCBpdCBmb3IgQSB0byBhcmd1ZSB3aXRoIGhpbSBpZiB0aGVyZSBvbmx5IGEgZmV3IHRvIG5vIHBlb3BsZSBhcm91bmQuIFlvdSBvbGRlciwgeW91IHNob3VsZCB0YWtlIHRoZSBoaWdoZXIgcm9hZC4gCldvcmR0IGhldCBuaWV0IGVlbnMgaG9vZ3RpamQgZGF0IHdpaiBpbmNsLiBvbnMgZWVucyBnYWFuIGxhdGVuIGhvcmVuIGVuIGRlIHBvdGplcyBnYWFuIG9wZW5lbj8gRGl0IGlzIGVlbiBrYWFrc2xhZyB2b29yIGFsbGUgQUxTIHBhdGkgb3AgZGUgd2FjaHRsaWpzdCB2YW4gZHIgSHVhbmcuIERpdCBrYW4gdm9vciBtaWogbmlldCBtZWVyIGRvb3IgZGUgYmV1Z2VsLiBIdWFuZyBuaWV0IGFsbGVlbiB0ZSBkb2VuIGlzIG9tIG1lbnNlbiB1aXQgaHVuIHdhbmhvb3AgdGUgaGFsZW4gd2FzIG1paiBhbCBsYW5nIGR1aWRlbGlqay4gTWFhciBqYSwgd2F0IG51dCBoZWVmdCBoZXQgb20gem9pZXRzIHN0ZWVkcyB0ZSBoZXJoYWxlbiB3YW50IHRlZ2Vud2luZCBrcmlqZyBqZSB2b29yemVrZXIuCkkgc2F5aW5nIHRoaXMgYmVjYXVzZSBJIGRpZG50IGtub3cgeW91IG1mcyBoYWQgZnJvemVuIHJlYWR5IG1lYWxzLCBsaWtlIHdoYXQgZXZlbiBpcyB0aGF0IHNoaXQuIAoxKSBpcyBpbnRvIGV2ZXJ5dGhpbmcgZnJvbSBwZXRyb2NoZW1pY2FscyB0byBCb2xseXdvb2QuMTI2LiAKQXJzZW5hbCB3YWxsIGlzIGVzc2VudGlhbGx5IHRocmVlIDJ4MSByb2NrZXQgbGF1bmNoZXJzIHdpdGggYmV0dGVyIGFybW9yIGFuZCBocCBpbiBhIDJ4NCBncmlkLiBZb3UgbG9zZSBzb21lIGZpcmVwb3dlciwgZ2FpbiBzb21lIHN1cnZpdmFiaWxpdHkuIEJhc2ljYWxseSBpdCBqdXN0IGNvbWVzIGRvd24gdG8gd2hlcmUgaW4geW91ciBzaGlwIGxheW91dCB5b3UgdHJ5aW5nIHRvIHBsYWNlIHRoZSByb2NrZXRzLiBJZiBpdCBhbiBleHBvc2VkIGFyZWEsIHRoZSBhcnNlbmFsIHdhbGwgd2lsbCBmYXJlIGEgbG90IGJldHRlciBhZ2FpbnN0IHN0cmF5IHNob3RzIHRoYXQgbWlzcyB5b3VyIGFybW9yLiBJbiBhIHByb3RlY3RlZCBhcmVhIGl0IHByb2JhYmx5IGEgYmV0dGVyIGlkZWEgdG8gdXNlIHRoZSBvdGhlciByb2NrZXQgZGVzaWducyB0byBpbmNyZWFzZSB5b3VyIGZpcmVwb3dlci4KIlNoZSBkaWRuIHdhbnQgdG8gZGlzYXBwb2ludCB0aGUgZmFtaWx5LCIgaGUgc2F5cyBvZiBMYW5lIG9iZnVzY2F0aW9uLiAiU2hlIHdhcyBoZWxkIGluIHZlcnksIHZlcnkgaGlnaCBlc3RlZW0gYnkgaGVyIGZhbWlseS4gU2hlIHN0aWxsIGlzLiIgTGlrZSBoaXMgd2lmZSwgUm9iZXJ0IGluc2lzdHMgaGUgd2FzIG5ldmVyIGF3YXJlIG9mIHRoZSBwcmVnbmFuY2llcy4gClRoZXNlIDQgcG91bmQgbWFjaGluZXMgY29tZSB1cCB3aXRoIGd1YXJhbnRlZSBmb3IgYSBjZXJ0YWluIHRpbWUuIElmIHlvdSB3YW50IHRvIG1hbmFnZSBhIHByb2Zlc3Npb25hbCBwb2tlciB0YWJsZSBhdCBob21lLCB0aGlzIG9uZSBpcyBhIG11c3QgdG8gaGF2ZSBlcXVpcG1lbnQuIApTdGlsbCwgd2l0aG91dCBtZWRpYSBleHBvc3VyZSwgdGhlc2UgbmFtZXMgcmVtYWluIHVua25vd24gaW4gTWFjYXUsIGxlYXZpbmcgb3JnYW5pemVycyB0byBkZXZlbG9wIGxvY2FsIGhlcm9lcyB3aG8gY2FuIGluc3BpcmUgdGhlIG1hc3NlcyB0byB0YWtlIHVwIHRoZSBnYW1lLi4gCjIuIEl0IHJlbWFpbnMgc3F1YXJlbHkgd2l0aGluIE1jQ2FpbiBpbnRlcmVzdCB0byBnZXQgYSBkZWFsIGJlZm9yZSB0aGUgbWFya2V0cyBvcGVuIG9uIE1vbmRheSwgYm90aCBiZWNhdXNlIHRoYXQgaXMgd2hhdCBoZSBzYWlkIGhlIHdvdWxkIGRvIG9uIFdlZG5lc2RheSB3aGVuIGhlIGFubm91bmNlZCBoZSB3YXMgcmV0dXJuaW5nIHRvIFdhc2hpbmd0b24gYW5kIGJlY2F1c2UgdGhlIGRlYWwgdGhhdCBsZWFkZXJzIHB1dCB0b2dldGhlciB5ZXN0ZXJkYXkgc2VlbXMgdG8gYWRkcmVzcyBtb3N0IG9mIE1jQ2FpbiBzdGF0ZWQgY29uY2VybnMuIEl0IGlzIGhhcmQgZm9yIE1jQ2FpbiB0byBkZW1vbnN0cmF0ZSBoaXMgbGVhZGVyc2hpcCwgZXhwZXJpZW5jZSBhbmQgZmlyc3QgZGV0ZXJtaW5hdGlvbiBpZiBoZSBjYW5ub3QgZmluZCBhIHdheSB0byBwcmV2ZW50IHdoYXQgZXZlcnlvbmUgYWdyZWVzIHdpbGwgYmUsIGF0IG1pbmltdW0sIGEgc2hvcnQgdGVybSBjb2xsYXBzZSBvZiB0aGUgbWFya2V0cywgb25jZSB0aGV5IHJlYWxpemUgbm8gYmFpbG91dCBpcyBjb21pbmcgcmlnaHQgYXdheS4uIApSZWd1bGF0b3J5IGNvbmNlcm5zIGFib3V0IHRoaXMgc2lkZSBlZmZlY3QgaGF2ZSBrZXB0IExvdmF6YSBmcm9tIHJlYWNoaW5nIGEgbGFyZ2VyIG1hcmtldC4gQXQgcHJlc2VudCwgdGhlIGRydWcgaXMgYXBwcm92ZWQgb25seSBmb3IgdGhvc2Ugd2l0aCB0cmlnbHljZXJpZGUgbGV2ZWxzIGV4Y2VlZGluZyA1MDAgbWlsbGlncmFtcyBwZXIgbWlsbGlsaXRlci4gR1NLIGhhcyBhcHBsaWVkIHR3aWNlIGluIDIwMDQgYW5kIGFnYWluIGluIDIwMDkgZm9yIHRoZSBkcnVnIHRvIGJlIGFwcHJvdmVkIGZvciBwZW9wbGUgd2l0aCB0cmlnbHljZXJpZGUgbGV2ZWxzIGFzIGxvdyBhcyAyMDAgbWlsbGlncmFtcyBwZXIgbWlsbGlsaXRlciBvZiBibG9vZC4gClRodXJzZGF5OiBEZWZpbml0ZWx5IHNlZSB0aGUgZ2FtZS4gVGhleSBhcmUgc3VwZXIgY2hlYXAgYW5kIHJlYWxseSBmdW4gYW5kIGV2ZW4gaWYgeW91IGhhdGUgYmFzZWJhbGwgeW91IGxvdmUgaXQuIFNvbWV0aGluZyBub3QgbWFueSBLb3JlYW5zIGV2ZW4ga25vdyBhYm91dCwgaWYgeW91IGdvIHRvIHRoZSBlYXN0IHNpZGUgb2YgdGhlIExvdHRlIHRvd2VyIG9uIHRoZSBncm91bmQgbGV2ZWwgdGhlcmUgaXMgYSBkZXNrIHdoZXJlIHlvdSBjYW4gKGZvciBmcmVlKSBnZXQgYWNjZXNzIHRvIHRoZSAzMXN0IGZsb29yLiAKMikgTW9zdCBBbWVyaWNhbnMgcHJvYmxlbXMgYXJlIHZlcnkgbXVjaCAxc3Qgd29ybGQgcHJvYmxlbXMsIGxpa2UgdGhleSBjb21wbGFpbiB0aGF0IGl0IG1pZ2h0IHRha2UgMSBkYXkgdG8gZ2V0IHlvdXIgRHJpdmluZyBMaWNlbmNlIGF0IHRoZSBETVYgTE9MLCBpdCB3b3VsZCB0YWtlIG1lIG1vbnRocyBpbiBFdXJvcGUuIE9yIGdhcyBwcmljZXMsIG9yIGhlYWx0aGNhcmUsIG9yIGNvc3Qgb2YgYW55dGhpbmchClNvbWUgYXJlIG5vdCBmb3JlaWduZXIgZnJpZW5kbHkgYnV0IGl0IGlzIHVzdWFsbHkgdGhlIG1hbWEgc2FucyBvbiB0aGUgc3RyZWV0cyB3aG8gdG91dCBmb3IgdHJhZGUgc28geW91IHNob3VsZCBiZSBhcHByb2FjaGVkIGJlZm9yZSB5b3UgZXZlbiBnZXQgdG8gdGhlIHZlbnVlLiBBIHNpbWlsYXIgcmVwb3J0IHB1Ymxpc2hlZCBieSB0aGUgS29yZWFuIEluc3RpdHV0ZSBvZiBDcmltaW5vbG9neSBzdWdnZXN0cyB0aGF0IDEgaW4gNSBLb3JlYW4gbWVuIHZpc2l0IGEgcHJvc3RpdHV0ZSB1cCB0byBmb3VyIHRpbWVzIGEgbW9udGggd2l0aCBvdmVyIDM1MCwwMDAgbWVuIGRvaW5nIHNvIGRhaWx5Li4gCkhvd2V2ZXIgaXQgd2Fzbid0IHVudGlsIHRoZSBlYXJseSAyMDAwcyB0aGF0IHdlIGhhdmUgc2VlbiBzdWNoIGEgc3VyZ2UgaW4gdGhlIG5vdyBidXp6d29yZCBkZXNpZ24gdGhpbmtpbmcuIFNpbXBseSBwdXQsIGRlc2lnbiB0aGlua2luZyBpcyBhIGh1bWFuIGNlbnRlcmVkIHByb2Nlc3MgYXBwbHlpbmcgdGhlIHByaW5jaXBsZXMgYW5kIHByYWN0aWNlcyB0byBzb2x2ZSBwcm9ibGVtcyBpbiBhIGNyZWF0aXZlLCBub24gbGluZWFyIGFuZCBpbmNsdXNpdmUgZmFzaGlvbi4gSXQgaXMgYSB3YXkgdG8gaGVscCBkaXNjb3ZlciB1bm1ldCBuZWVkcyBhbmQgb3Bwb3J0dW5pdGllcyBhbmQgdG8gY3JlYXRlIG5ldyBzb2x1dGlvbnMuIApDZXMgaW1wcmVzc2lvbnMsIGogcmV0cm91dmUgbCBjaGFxdWUgZm9pcyBxdSBtIGRlIGZldWlsbGV0ZXIgdW4gQ29kZXggZXQgamUgc2VyYWlzIHRvbm4gZCBsZSBzZXVsIGNoZXogcXVpIGxhIGxlY3R1cmUgZGUgbm90cmUgcGhhcm1hY29wZSBvZmZpY2llbGxlIHByb2R1aXNlIHVuIHRlbCBlZmZldC4gQ29tbWUgZGFucyBsYSBjaXQgcGFyaXNpZW5uZSwgbGUgdGVtcHMgZXhlcmNlIGRhbnMgbGEgY2l0IGRlcyBtZGljYW1lbnRzIHNvbiB1dnJlIGRlc3RydWN0cmljZTogYyBsYSBtbWUgZGVzdGluZSBxdWkgY29uZGFtbmUgIGxhIHJ1aW5lIGxlcyB2aWVpbGxlcyBwaWVycmVzIGV0IGxlcyB2aWVpbGxlcyBmb3JtdWxlczogYXV4IHVuZXMgbGVzIGNvdXBzIGRlIHBpb2NoZSwgZXhjdXRldXIgaW1wbGFjYWJsZSBkZSBsYSB2b2xvbnQgZGUgbm9zIGRpbGVzLCBhdXggYXV0cmVzIGxlIHRyYWl0IGRlIHBsdW1lIGRvbnQgdW4gYXJvcGFnZSBkZSBzYXZhbnRzLCBjaG9pc2kgcGFybWkgbGVzIHBsdXMgaW5zaWduZXMsIHByb2NsYW1hIGwgU2FucyBkb3V0ZSBzZXJhaXQgY2UgcG91c3NlciAgbCBsIGR1IEJvbmhvbW1lIEphZGlzIHF1ZSBkZSBjcmllciBhdSB2YW5kYWxpc21lIHBvdXIgcXVlbHF1ZXMgZHJvZ3VlcyBkb250IGxhIHNjaWVuY2UgYSBkbW9udHIgbCBldCBkY2lkIGwgbGUgQ29kZXggbiBwYXMgbGUgY2F0YWxvZ3VlIHJ0cm9zcGVjdGlmIGRlIGwgbWRpY2FsOyBzZXVsZXMgZG9pdmVudCBmaWd1cmVyIHNhbnMgc2VzIHBhZ2VzIGxlcyBzdWJzdGFuY2VzIHF1aSBpbnRyZXNzZW50IGRpcmVjdGVtZW50IGxlIHByYXRpY2llbiBldCBkb250IGxhIHJhaXNvbiBkIGVzdCB0YWJsaWUgcGFyIHVuIGV4YW1lbiByaWdvdXJldXNlbWVudCBjcml0aXF1ZSBldCBqZSBuZSBzYWNoZSBwYXMgcXUgc2UgdHJvdXZlIGRlIHRyYWRpdGlvbmFsaXN0ZSBhc3NleiBpcnJkdWN0aWJsZSBwb3VyIHJlZ3JldHRlciBsYSBncmFpc3NlIGRlIHZpcHJlcywgbGEgcG91ZHJlIGRlIGNsb3BvcnRlcywgbCBkZSB2ZXJzIGRlIHRlcnJlIGV0IGF1dHJlcyBtb25zdHJ1b3NpdHMgcXVpIGZlcmFpZW50LCBkYW5zIGxhIHBoYXJtYWNvcGUsIGwgcXVlIGZvbnQsIGRhbnMgdW5lIHZpbGxlLCBkZXMgbWFzdXJlcyBpbmZvcm1lcyBldCBzb3JkaWRlczsgbWFpcyAgY3QgZGUgY2VzIHZlc3RpZ2VzIGR1IGZ0aWNoaXNtZSB0aHJhcGV1dGlxdWUsIGlsIGV4aXN0ZSB0b3V0ZSB1bmUgc3JpZSBkZSBmb3JtdWxlcyBhcmNoYXF1ZXMsIGxlcyB1bmVzIGRqIGVuc2V2ZWxpZXMgZGFucyBsIGxlcyBhdXRyZXMgYXBwZWxlcyAgeSBzb21icmVyIHVuIGpvdXIsIGRvbnQgb24gcGV1dCBwcm91dmVyIHF1ZWxxdWUgdHJpc3Rlc3NlICB2b2lyIGVmZmFjZXIgbGVzIG5vbXMuIApEaWUgSW50ZXJuYXRpb25hbGl0dCBkZXMgRmlsbWZlc3RzIHNvbGwgZXJoYWx0ZW4gYmxlaWJlbiB1bmQgZ2xlaWNoemVpdGlnIHdpcmQgYW5nZXN0cmVidCBzcGFuaXNjaGVuIHVuZCBzcGFuaXNjaHNwcmFjaGlnZW4gRmlsbWVuIGVpbmVuIGdyb2VuIFN0ZWxsZW53ZXJ0IGVpbnp1cnVtZW4sIHVtIGJlc29uZGVycyBkYXMgZWluaGVpbWlzY2hlIFB1Ymxpa3VtIG5vY2ggc3Rya2VyIGFuenVzcHJlY2hlbi4uIApJIGtub3cgZm9yIG1lIGNvbGxlZ2UgaGFkIG1lIHNob29rIGJ1dCBhIG1vcmUgZGlzdGFudCBhcHByb2FjaCBieSBteSBwYXJlbnRzIGhlbHBlZCBtZSB0byBncm93IHVwIGFuZCB1bmRlcnN0YW5kIHRoYXQgSSB3YW50ZWQgdG8gaW1wcmVzcyB0aGVtIG5vdCB0aGF0IEkgaGFkIHRvLiBNYXliZSBoZSBuZWVkcyB0byBsZWFybiBidXQgSSBjYW4gc2VlIGhvdyBpdCdzIGZydXN0cmF0aW5nIHdoZW4geW91J3JlIHRoZSBvbmUgcGF5aW5nIGZvciBpdC4KVGhlcmUgYSBsb3QgeW91IG1pc3MgYnV0IEkgdGhpbmsgdGhleSBkbyB0aGF0IG9uIHB1cnBvc2UsIHRvIGVuY291cmFnZSB5b3UgdG8gZ28gYmFjayBhbmQgY2hlY2sgdGhlIG90aGVyIHN0dWZmIG91dC4gCklmIHNoZSBjYW4ndCBzaXQgb24gdGhlIHRocm9uZSwgbm8gb25lIHdpbGwuLiAKVGhpcyBsZWdpc2xhdGlvbiByZWluc3RhdGVzIHRoZSBPcGVuIEludGVybmV0IE9yZGVyIHRoYXQgd2FzIG92ZXIgdHVybmVkIGJ5IHRoZSBGQ0MgYW5kIHB1dHMgSVNQcyBiYWNrIHVuZGVyIFRpdGxlIElJIHdpdGggdGhlIGxpbWl0ZWQgcnVsZXMuIApDaGFpcnM6IE9idmlvdXNseSB5b3Ugd2FudCB0byBrZWVwIHlvdXIgcGxheWVycyBhcyBjb21mb3J0YWJsZSBhcyBwb3NzaWJsZS4gTW9zdCBob3VzZXMgZG9uJ3QgaGF2ZSAyMCBjaGFpcnMgc2l0dGluZyBhcm91bmQsIHNvIHlvdSBtYXkgbmVlZCB0byBidXksIGJvcnJvdyBvciByZW50IGVub3VnaCBjaGFpcnMgdG8gaGFuZGxlIHlvdXIgdG91cm5hbWVudCBzaXplLiBGb2xkaW5nIGNoYWlycyB3aWxsIHJ1biB5b3UgJDggICAkMTQgZWFjaCBkZXBlbmRpbmcgb24gaWYgdGhleSBoYXZlIHBhZGRlZCBzZWF0cyBvciBub3QuIElmIHlvdSBwbGFuIG9uIHJ1bm5pbmcgeW91ciBob21lIHBva2VyIHRvdXJuYW1lbnQgb24gYSByZWd1bGFyIGJhc2lzLCBwdXJjaGFzaW5nIHRoZSBjaGFpcnMgbWF5IGJlIHlvdXIgYmVzdCBvcHRpb24gaW4gdGhlIGxvbmcgcnVuLgpNcnMgSHlkZSBleHBsYWluZWQgdGhhdCB0aGUgTmlzc2VuIEh1dCBmdW5jdGlvbiByb29tIHBhaWQgaG9tYWdlIHRvIHdhciB0aW1lcywgYXMgYSBOaXNzZW4gaHV0IHdhcyBhIHByZSBmYWJyaWNhdGVkIHN0ZWVsIHN0cnVjdHVyZSBkZXNpZ25lZCBkdXJpbmcgV29ybGQgV2FyIEkgYW5kIHVzZWQgZXh0ZW5zaXZlbHkgZHVyaW5nIFdvcmxkIFdhciBJSS4gQSBsaXR0bGUgbW9yZSBteXN0ZXJ5IHN1cnJvdW5kcyB0aGUgaGVyaXRhZ2UgYW5kIGN1cnJlbnQgd2hlcmVhYm91dHMgb2YgdGhlIGh1Z2UgZGVlciBodW50ZXIgc3RhdHVlIHRoYXQgdG9vayBwcmlkZSBvZiBwbGFjZSBhdCByZWNlcHRpb24uIApBdCB0aGUgbGF1bmNoIHBhZCB0b3AgbWFuYWdlbWVudCB3aWxsIGpvY2tleSBmb3IgcG9zaXRpb24gdG8gc2VlIHdobyBjYW4gaG9sZCB3aGljaCBhc3Ryb25hdXQgYXJtIHRvIGhlbHAgdGhlbiB0byB0aGUgcGFkLCBhbmQgdGhlbiB0aGUgQ2hpZWYgb2YgdGhlIHJvY2tldCBjb21wYW55IHdpbGwgZ2l2ZSB1cyBhIGNlcmVtb25pYWwga2ljayBpbiB0aGUgcGFudHMgYXMgd2UgY2xpbWIgdGhlIGxhZGRlci4gVHVybiwgd2F2ZSwgYSBzaG9ydCBlbGV2YXRvciByaWRlIHRvIHRoZSB0b3Agb2YgdGhlIHJvY2tldCwgY2xpbWIgaW4gb25lIGJ5IG9uZSwgc3RyYXAgb3Vyc2VsdmVzIGludG8gdGhlIHNlYXQsIGFuZCB0aGUgYWR2ZW50dXJlIHRydWx5IGJlZ2lucy4uIApNb3JlIG9yIGxlc3MuIFNlcXVlbHMsIGJ5IG5hdHVyZSwgdGVuZCB0byBzcGVuZCB0aGVpciB0aW1lIGxlc3Mgb24gY3JlYXRpbmcgZ2FtZSBtZWNoYW5pY3MgYW5kIGEgZ2FtZSBlbmdpbmUgKGFzIHRoZXkgYWxyZWFkeSBleGlzdCkgYW5kIHNwZW5kIG1vcmUgdGltZSBleHBlcmltZW50aW5nIHdpdGggbmV3IGlkZWFzIGFuZCBjb25jZXB0cyB3aXRoaW4gdGhhdCBlbmdpbmUuIEZFNiBiZWluZyBhbGwgc2VpemUgYW5kIEZFNyB0cnlpbmcgYSBsb3Qgb2YgZGlmZmVyZW50IHdpbiBjb25kaXRpb25zLCBmb3IgYmV0dGVyIG9yIHdvcnNlLCBpcyBhbiBleGFtcGxlLiBXaGVuIHlvdSByZWJvb3QgdGhlIGVuZ2luZSBpdCBiYWNrIHRvIHNxdWFyZSBvbmUuIFNvIEZFNiwgRkU5LCBGRTExLCBhbmQgRkUxMywgYXMgdGhlIGdhbWVzIHRvIGludHJvZHVjZSBhIG5ldyBlbmdpbmUsIGhhdmUgYSBiYXNpYyBhcHByb2FjaCB0byB0aGluZ3MgYXMgdGhleSBzZWUgd2hhdCB3b3JrcyBhbmQgd2hhdCBkb2VzbiBUaGVpciBzZXF1ZWxzIChGRTcgKyBGRTgsIEZFMTAsIEZFMTMsIEZFMTQpIGV4cGFuZCBvbiB3aGF0IGJlZW4gaW50cm9kdWNlZCBhbmQgcmVmaW5lIHRoZSBiYXNpYyBjb25jZXB0cyBmcm9tIHRoZWlyIHByZWRlY2Vzc29ycy4KT25jZSB5b3UgdGVhY2ggc29tZW9uZSB0byBiZWF0IHlvdXIgZ2FtZSBmb3IgeW91ciBob3VybHksIHlvdSBpbW1lZGlhdGVseSBoYXZlIG1vcmUgY29tcGV0aXRpb24gYW5kIHlvdSBoYXZlIGFkZGVkIHNvbWVvbmUgZWxzZSB3aG8gaXMgdGFraW5nIG1vbmV5IGZyb20gdGhlIHBva2VyIGVjb25vbXkuIFBva2VyIGlzIGEgemVybyBzdW0gZ2FtZS4gU29tZW9uZSBoYXMgdG8gbG9zZSBtb25leSBpbiBvcmRlciBmb3IgeW91IHRvIG1ha2UgbW9uZXkuIApZb3UgaGF2ZSB0byBtYW5hZ2UgdGhvc2UgZmVlbGluZ3MuLiAKS2FsaSBNdXIgKFBvdGFzc2l1bSBDaGxvcmlkZSkuIFRoaXMgcmVtZWR5IGlzIGZvciB3aGl0ZSBzZWNyZXRpb25zLiAKUHJldHR5IG11Y2ggc3VtcyBpdCB1cC4gTm8gRkY/IFVucmVhbC4gCkF0IHByZXNlbnQgbW9zdCBjYXNpbm9zIHdpdGggUGxheVRlY2gsIE1pY3JvZ2FtaW5nLCBSVEcgc29mdHdhcmVzIG9mZmVyICJzdGlja3kiIGNhc2lubyBib251c2VzLi4gCk90aGVyd2lzZTogZ2V0IG1hc3NpdmVseSBmdWNrZWQuIE9uZSBjYW5ub3QgY2xhaW0gaW5jb21wZXRlbmNlIHdoaWxlIGNvbnRpbnVpbmcgaW4gdGhlIHNhbWUgY2FwYWNpdHkuIFBlb3BsZSBnZXQgZWxldmF0ZWQgYWJvdmUgdGhlaXIgc2tpbGwgbGV2ZWwuIFRoYXQgaGFwcGVucy4gSXQgZmluZS4gWW91IGRvbiBoYXZlIHRvIGdvIGhvbWUsIGJ1dCB5b3UgY2FuIHN0YXkgdGhlcmUuIFRoYXQganVzdCBub3QgaG93IGFueSBvZiB0aGlzIHdvcmtzLgpUaGV5IGFtcGxpZnkgdGhlIHN0cmVuZ3RocyBvZiAib3JkaW5hcnkiIGVtb3Rpb25hbCBlbmdhZ2VtZW50ICAgZXNwZWNpYWxseSB0aGUgYWJpbGl0eSB0byByZWR1Y2UgcHJpY2Ugc2Vuc2l0aXZpdHkgICBhbmQgaW4gZ2VuZXJhbCwgdGhleSBhcmUgdGhlIHJlYWwgaGlnaCBmbGllcnMgYW1vbmcgdGhlIElQQSBEYXRhYmFuayBjYXNlcy4gQnVzaW5lc3MuIApUaGV5IHVuZGVyc3RhbmQgdGhleSBhIHBsYXRmb3JtIGhvbGRlciwgYnV0IHRoZWlyIGFwcHJvYWNoIHRvIDFzdCBwYXJ0eSBnYW1lcyBpcyB0aGF0IG9mICJ3ZSBtYWtpbmcgYSB0b3kiIGFuZCBub3QgIndlIG1ha2luZyBhIHZpZGVvIGdhbWUiLiAKU3BlY2lhbCBzaGF2ZS4gRG8gdGhlIHNoYXZpbmcgZm9yIGhpbSEgVGhpcyB3aWxsIGFmZm9yZCB5b3UgdGltZSB0byB0YWxrIHRvIGhpbSB0byBsZXQgaGltIGtub3cgaG93IHNwZWNpYWwgaGUgaXMgdG8geW91IGFuZCB5b3VyIHRlbmRlciB0b3VjaCBvbiBoaXMgZmFjZSBhcyB5b3Ugc2hhdmUgaGltIGhhbmRzb21lLiBTcGFyayB1cCBzb21lIHNjZW50ZWQgY2FuZGxlcyBvciBpbmNlbnNlIGZvciBhbiBhZGRlZCBzZW5zb3J5IHBhbXBlcmluZy4KVGhlIENoaWxkcmVuIEhvc3BpdGFsIGF0IFdlc3RtZWFkIGhhcyBhY2NlcHRlZCBtb3JlIHRoYW4gJDEyMCwwMDAgaW4gZG9uYXRpb25zIHNpbmNlIDIwMTMsIGZsb3dpbmcgZnJvbSBmaXZlIGFwcHJvdmVkIGFwcGxpY2F0aW9ucy4gCldoYXQgd2FzIHRoZSBmaXJzdCBOZXcgWWVhciByZXNvbHV0aW9uIGV2ZXIgbWFkZT8KVGhlIFZpY3RvcmlhbiBnb3Zlcm5tZW50IGhhcyBpbnZlc3RlZCAkMTUgbWlsbGlvbiBpbiByZXNlYXJjaCwgZW1lcmdlbmN5IGRlcGFydG1lbnRzIGFuZCBhIG5ldyBmb3JlY2FzdGluZyBzeXN0ZW0gaW4gdGhlIHdha2Ugb2YgdGhlIGV2ZW50LiAKRGFydGh2b2RrYSB1Ck1ha2Ugc3VyZSB0aGF0IHlvdSBob2xkIHRoZSByYXpvciBpbiBhIHZlcnRpY2FsIHBvc2l0aW9uLCBhZGphY2VudCB0byB5b3VyIGZhY2UuIFRyaW0gd2l0aCBhIGRvd253YXJkIG1vdGlvbiwgc3RhcnRpbmcgZnJvbSB0aGUgdG9wLi4gCiJJIGRvbid0IHRoaW5rIEFuY2Vsb3R0aSB3aWxsIHN0YXkgYXQgQ2hlbHNlYSBuZXh0IHNlYXNvbiBiZWNhdXNlIGl0J3MgdmVyeSBjbGVhciB0aGF0IHRoZSBDaGFtcGlvbnMgTGVhZ3VlIGlzIHRoZSB0YXJnZXQgb2Ygb3duZXIgUm9tYW4gQWJyYW1vdmljaCwiIEhvZGFrIHNhaWQuCkJpYmxpY2FsIE1lYW5pbmdzIEFjY29yZGluZyB0byB0aGUgQmlibGVUcmFjayB3ZWJzaXRlLCBubyBkaXN0aW5jdGlvbiBiZXR3ZWVuIHRoZSB0ZXJtcyBwYXN0b3IsIGJpc2hvcCBvciBlbGRlciBleGlzdHMgaW4gdGhlIFNjcmlwdHVyZXMgICBhbGwgcmVmZXIgdG8gbGVhZGVycyBhbmQgZGVjaXNpb24gbWFrZXJzIHdobyBhcmUgbGVkIGJ5IEdvZCB0byBvdmVyc2VlIGEgbG9jYWwgY2h1cmNoIGNvbmdyZWdhdGlvbi4gCkZyb20gdGhlIGh1bmRyZWRzIG9mIHN1bW1lciBzdHVkZW50cyBoaXJlZCBieSBDSUJDIGVhY2ggeWVhciwgTXVycGh5IHdhcyBzZWxlY3RlZCBhcyBvbmUgb2YgMTUgZm9yIHRoZSBiYW5rJ3MgU1dBVCBwcm9ncmFtLiBTV0FUIHBhcnRpY2lwYW50cyBzcGVuZCBwYXJ0IG9mIHRoZWlyIHRpbWUgd29ya2luZyBvbiBhZ2lsZSwgcHJvamVjdCBiYXNlZCB0ZWFtcyBhcHBseWluZyB0aGVpciBjcmVhdGl2ZSBwcm9ibGVtIHNvbHZpbmcgc2tpbGxzIHRvIGN1cnJlbnQsIHJlYWwgbGlmZSBidXNpbmVzcyBjaGFsbGVuZ2VzLiBTdHVkZW50cyByZWNlaXZlIG1lbnRvcnNoaXAgZnJvbSBzZW5pb3IgbGVhZGVycyB3aGlsZSBjb2xsYWJvcmF0aW5nIHdpdGggb3RoZXIgc3R1ZGVudHMgYWNyb3NzIHRoZSBiYW5rIHRvIGNvbWUgdXAgd2l0aCBpbm5vdmF0aXZlIHNvbHV0aW9ucy4gCkZhY2UgY2FyZHMgYXJlIGFsbCB3b3J0aCAxMCBwb2ludHMgYW5kIGFuIGFjZSBjYW4gYmUgd29ydGggMSBvciAxMSBwb2ludHMsIHdoaWNoIGlzIHVwIHRvIHlvdS4gClRoZSBiZXN0IGdvbGYgYmVsb25nZWQgdG8gU3RldmUgU3RyaWNrZXIsIHdobyBjZWxlYnJhdGVkIGhpcyA0NnRoIGJpcnRoZGF5d2l0aCBhIG1hdGNoIHRoYXQgbWFkZSBoaW0gZmVlbCA0Ny4gU3RyaWNrZXIgbWFkZSBlaWdodCBiaXJkaWVzIGFuZCBuZWVkZWRldmVyeSBvbmUgb2YgdGhlbSB0byBiZWF0IFNjb3R0IFBpZXJjeSwgd2hvIHNob3QgNjUgYW5kIGxvc3QuIFN0cmlja2VyIHdhcyAxZG93biB3aXRoIHR3byBob2xlcyBsZWZ0IHdoZW4gaGUgcm9sbGVkIGluIGEgNSBmb290IGJpcmRpZSBwdXR0IG9uIE5vLiA4IGFuZHdvbiB0aGUgbWF0Y2ggd2l0aCBhIDMwIGZvb3QgYmlyZGllIHB1dHQgb24gdGhlIG5pbnRoIGhvbGUuCkRlciBhbHRlIEJhdWVyLCBkZXIgbmFjaCBnZXRhbmVyIEFyYmVpdCBoZXJlaW5zY2hsdXJmdGUsIGJla2FtIHZvbiBpaHIgZWluZSBaaWdhcmV0dGUsIGFscyBzaWUgbWVpbmUgUGFzdGEgZGVsIERpIGJlcmVpdGV0ZSwgc2FuZy4gCk92ZXJ2aWV3IGZvciBWZXJ0aWNhbFJoeXRobQpCb3N0b24gR2xvYmUgTWVkaWEgUGFydG5lcnMsIGluY2x1ZGluZyBpdHMgYWZmaWxpYXRlcyBhbmQgc3Vic2lkaWFyaWVzLCByZXNwZWN0cyB5b3VyIHByaXZhY3kgYW5kIGlzIGNvbW1pdHRlZCB0byBwcm90ZWN0aW5nIHlvdXIgUGVyc29uYWwgSW5mb3JtYXRpb24gKGRlZmluZWQgYmVsb3cpLiBUaGlzIHByaXZhY3kgbm90aWNlIHdpbGwgbGV0IHlvdSBrbm93IGhvdyB3ZSBjb2xsZWN0LCB1c2UsIHByb2Nlc3MsIG1haW50YWluLCBhbmQgc2hhcmUgeW91ciBQZXJzb25hbCBJbmZvcm1hdGlvbiwgYXMgd2VsbCBhcyB5b3VyIGNob2ljZXMgcmVnYXJkaW5nIHRoZSB1c2UsIGFjY2VzcywgYW5kIGNvcnJlY3Rpb24gb2YgeW91ciBQZXJzb25hbCBJbmZvcm1hdGlvbi4gV2hhdCBQZXJzb25hbCBJbmZvcm1hdGlvbiB3ZSBjb2xsZWN0IG1heSB2YXJ5IGJhc2VkIG9uIHlvdXIgaW50ZXJhY3Rpb24gd2l0aCB1cy4gV2UgZW5jb3VyYWdlIHlvdSB0byByZWFkIHRoaXMgcHJpdmFjeSBub3RpY2UgdG9nZXRoZXIgd2l0aCBhbnkgb3RoZXIgcHJpdmFjeSBub3RpY2Ugb3IgZmFpciBwcm9jZXNzaW5nIG5vdGljZSB3ZSBtYXkgcHJvdmlkZSBvbiBzcGVjaWZpYyBvY2Nhc2lvbnMgd2hlbiB3ZSBhcmUgY29sbGVjdGluZyBvciBwcm9jZXNzaW5nIFBlcnNvbmFsIEluZm9ybWF0aW9uIGFib3V0IHlvdSBzbyB0aGF0IHlvdSBhcmUgZnVsbHkgYXdhcmUgb2YgaG93IGFuZCB3aHkgd2UgYXJlIHVzaW5nIHlvdXIgZGF0YS4gVGhpcyBwcml2YWN5IG5vdGljZSBzdXBwbGVtZW50cyB0aGUgb3RoZXIgbm90aWNlcyBhbmQgaXMgbm90IGludGVuZGVkIHRvIG92ZXJyaWRlIHRoZW0uCkJhY2sgZHVyaW5nIHRoZSBzYW1lIHRpbWUgZnJhbWUgd2hlbiBpIHdhcyBpbiBlbGVtZW50YXJ5IHNjaG9vbCwgb25jZSBhIHllYXIgYSBtYWxlIHRlYWNoZXIgd291bGQgaW52aXRlIHNldmVyYWwgY2hpbGRyZW4gaW4gZ29vZCBlZHVjYXRpb25hbCBzdGFuZGluZyBvdmVyIHRvIGhpcyBmYW1pbHkgaG9tZSBmb3IgYSBzbGVlcCBvdmVyIGFuZCBiYXNpY2FsbHkgaXQgd2FzIGp1c3QgYSBiaWcgcGFydHkgZm9yIHRoZSBraWRzLiAKQnV0IEkgc3VwcG9zZSBpZiBFTkRBIGRvZXMgcGFzcywgaXQgd2lsbCBqdXN0IG1ha2UgdGhvc2UgaGV0ZXJvcyBtb3JlIGZsYW1ib3lhbnQgYWJvdXQgd2VhcmluZyB0aGVpciBzZXh1YWxpdHkgb24gdGhlaXIgc2xlZXZlcyBhbmQga25vd2luZyB0aGF0IG5vIG9uZSBjYW4gZmlyZSB0aGVtIGJlY2F1c2Ugb2YgaXQuIApUaGF0IGl0IGFmZmVjdHMgYWxidW0gc2FsZXMgaXMgbmVpdGhlciBoZXJlIG5vciB0aGVyZSwgaXRzIGp1c3QgYSBieXByb2R1Y3Qgb2YgcHJvZ3Jlc3MuIFBwbCB3aG8gbWFrZSBwaG9uZSBib290aHMgYXJlbnQgZW50aXRsZWQgdG8gbWUgdXNpbmcgcGhvbmUgYm9vdGhlcy4gClNlZSwgYmFjayBpbiB0aGUgQ29sZCBXYXIgZXJhLCBBbWVyaWNhIGRpZCBhIGJ1bmNoIG9mIGFib3ZlIGdyb3VuZCBudWNsZWFyIHRlc3RpbmcgdG8gYnJhY2UgZm9yIHRoZSBldmVudHVhbCBoZWxsIHRoYXQgc2VlbWVkIGRlc3RpbmVkIHRvIGJyZWFrIGxvb3NlIGJldHdlZW4gdGhlbSBhbmQgdGhlIFNvdmlldHMuIApEcmVzc2xlciwgV29sZmdhbmcgVS4gMTk4NTogTW9ycGhvbm9sb2d5OiBUaGUgZHluYW1pY3Mgb2YgZGVyaXZhdGlvbi4gV2l0aCBhIHByZWZhY2UgYnkgQXJub2xkIE0uIFp3aWNreS4gMTk2NDogU3VyIGwgZm9uY3Rpb25uZWxsZSBkZXMgYWx0ZXJuYW5jZXMgbW9ycGhvbm9sb2dpcXVlcy4gaW46IFRyYXZhdXggbGluZ3Vpc3RpcXVlcyBkZSBQcmFndWUgMDE6IDE0NSAxNjEuCkRvZXMgMiB5ZWxsb3cgY2FyZHMgaW4gc29jY2VyIGVxdWFsIGEgcmVkIGNhcmQ/CldlIGNoZWNrIGl0LCBhbmQgaXQncyB1dHRlciBzaGl0LiAKSXQgdGFrZW4gMiBtb250aHMgdG8gZXZlbiBicmluZyBpdCB1cCB0byBkZWJhdGUgaW4gdGhlIEhvdXNlLiAKRmFtaWx5IERvbnV0IFNob3AsIGEgYmFrZXJ5IHRoYXQgYWxzbyBzZXJ2ZXMgY29mZmVlIGFuZCB0ZWEgaW4gTm9ydGhnYXRlLCBpcyBhbm90aGVyIG11Y2ggbG92ZWQgZ28gdG8sIHdpdGggNC41IHN0YXJzIG91dCBvZiAxNjYgWWVscCByZXZpZXdzLiBIZWFkIG92ZXIgdG8gMjEwMCBOLiBOb3J0aGdhdGUgV2F5IChuZWFyIE1lcmlkaWFuIEF2ZW51ZSkgdG8gc2VlIGZvciB5b3Vyc2VsZi4gClRoZSBkYXRhIGJhY2tzIGhpbSB1cC4gClBsdXMgbW9zdCBVSyBicmFuZHMgd2lsbCBzaGlwIHRvIFBvcnR1Z2FsLi4gCjE4ODcgQW5kciBBbnRvaW5lIGZvdW5kcyB0aGUgVGh0cmUgTGlicmUuIFRpbWUgZm9yIEwnSWxsdXNpb24gY29taXF1ZSBhbmQgTGUgQ2lkIHRvIGhhdmUgYmVlbiB0aGUgcHJvdG90eXBlcyBvZiBhIHN0cmFuZCBvZiBGcmVuY2ggZHJhbWEgdGhhdC4gClRoZSByZW1haW5pbmcgNTAgcGVyY2VudCBpcyBjb250cmlidXRlZCB0byBhIGxvY2FsIGNoYXJpdHkuIE9uY2UgYWdhaW4gdGhpcyB5ZWFyLCBEci4gCkkgZG8gYWxsIG9mIG91ciBidWRnZXRpbmcgZm9yIG1vbnRobHkgYmlsbHMgYW5kIGV4cGVuc2VzLCBhcyB3ZWxsIGFzIHNlYXJjaCBmb3IgYmFyZ2FpbnMgYW5kIGRlYWxzIG9uIGFsbCBvZiB0aGUgdGhpbmdzIHdlIG5lZWQgZm9yIGJhYnkuIApXaGlsZSB0aGUgdHdvIHByb3ZpbmNlcyBhcmUgaW4gZmllcmNlIGNvbXBldGl0aW9uIHdpdGggZWFjaCBvdGhlciwgdGhlIHJveWFsdHkgcmF0ZSB3YXIgZXh0ZW5kcyBiZXlvbmQgQ2FuYWRhJ3MgYm9yZGVycy4gUHJvbGlmaWMgbmF0dXJhbCBnYXMgYmFzaW5zIHN1Y2ggYXMgdGhlIEJhcm5ldHQgc2hhbGUgaW4gVGV4YXMgYW5kIHRoZSBNYXJjZWxsdXMgaW4gUGVubnN5bHZhbmlhIGFyZSBzcG9uZ2luZyB1cCBiaWxsaW9ucyBvZiBkb2xsYXJzIHdvcnRoIG9mIGludmVzdG1lbnRzLgpIZSBkaWVkLCBmaW5hbGx5LCBhbmQgd2Ugd2VudCB0byBjbGVhbiBvdXQgaGlzIGhvbWUuIEhlIGxpdmVkIGFsb25lIG1vc3RseSBleGNlcHQgZm9yIHRoZSByYW5kb20gZ2lybGZyaWVuZCBmb3IgYSBtb250aCBvciB0d28uIEhpcyBob21lIHdhcyBhIHdyZWNrLCBuZWFybHkgdGhhdCBvZiBhIGhvYXJkZXIuIApBbmRlcmVyc2VpdHM6IEtubmVuIHdpciB1bnMgZWluZW4gR2xhdWJlbiBvaG5lIEtobHNjaHJhbmsgdm9yc3RlbGxlbj8uIApUaGUgbW9zdCBpbXBvcnRhbnQgdGhpbmdzIGluIENyZG9iYSBhbmQgR3JhbmFkYSBjYW4gYmUgZWFzaWx5IHZpc2l0ZWQgaW4gMSAyIGRheXMgZm9yIGVhY2ggb25lIG9mIHRoZSBjaXRpZXMuLiAKTXkgZmlyc3QgdGhvdWdodCBpcyB0aGF0IG1heWJlIHRoZXJlcyBzb21ldGhpbmcgZ29pbmcgb24gYXQgc2Nob29sIHRoYXQgc2hlIGlzIGF2b2lkaW5nIG9yIGlzIHNjYXJlZCBvZiAoYSBidWxseSwgYSBiYWQgdGVhY2hlcj8pIGJ1dCBkb2VzbiB3YW50IHRvIHRhbGsgYWJvdXQuIElmIHRoYXQgdGhlIGNhc2Ugb2YgY291cnNlIHNsZWVwaW5nIGluIGFuZCBiZWluZyAidG9vIHNsZWVweSIgaXMgYSBzYWZlIGV4Y3VzZSBmb3IgaGVyLgpXaGVuIGl0IGNvbWVzIHRvIGhvbWUgdG91cm5hbWVudCBwbGF5LCBpdCBpcyBhIG1hdHRlciBvZiBjaG9pY2UsIHdoZW4gaXQgY29tZXMgdG8gUG9rZXIgRmVsdCBtYXRlcmlhbHMsIHdhdGVyIHByb29mZWQgb3Igbm90IGFuZCB0aGUgc2l6ZSBhbmQgYXJyYW5nZW1lbnQgb2YgdGhlIHRhYmxlLiBZb3Ugc2hvdWxkIHBsYW4gdG8gaGF2ZSBlbm91Z2ggc2VhdGluZyBmb3IgZXZlcnlib2R5LCBvciB5b3UgbWF5IGZpbmQgeW91cnNlbGYgaW4gbmVlZCBvZiBhbiBhZGRpdGlvbmFsIHRhYmxlLiBUaGVyZSBhcmUgc29tZSBwb3J0YWJsZSBwb2tlciB0YWJsZXMgZm9yIGEgbGl0dGxlIG92ZXIgJDE2MCwgaWYgeW91IGZpbmQgeW91cnNlbGYgaW4gdGhpcyBzaXR1YXRpb24sIGFuZCB0aGV5IGhhdmUgZm9sZGFibGUgbGVncyBhbmQgY2FuIGJlIHB1dCBhd2F5IHVudGlsIHlvdSBuZWVkIHRoZW0uLiAKQnV0IGhpcyB3aW4gd291bGQgZmVlbCBtb3JlIGxlZ2l0IHRoYW4gYSBiYWQgc3BvcnQgd2hvIGNhbid0IGJlIGJvdGhlcmVkIHRvIG1ha2UgcmVhbCB3YWZmbGVzIG9yIGdldCBoZXIgc2NvdGNoIGVnZ3Mgb24gdGhlIHBsYXRlLiAKSXQncyBub3QgYSBnb29kIHRoaW5nLiBZb3UgaGF2ZSBib3lzIGhhdmluZyB0aGUgbHV4dXJ5IG9mIHNwZW5kaW5nIHF1YWxpdHkgdGltZSB3aXRoIHBlZXJzIHdoZXJlIHRoZXkgY2FuIGxlYXJuIHRvIGJlIGZyaWVuZHMgdGhyb3VnaCBzY291dCByZWxhdGVkIGFjdGl2aXR5LiAKSW4gbXkgZXhwZXJpZW5jZSB0aGUgZ2FtZXMgaGF2ZSBhIGJpdCBiZXR0ZXIgYWN0aW9uIGF0IHRoZSBCZWxsYWdpbyBidXQgSSB0aGluayB0aGUgQXJpYSBpcyBuaWNlciBvdmVyYWxsLiAKR29vZ2xlIHRoZW4gcnVucyBhbiBhbmFseXNpcyBvbiB0aG9zZSBwbGFubmVkIHBheW1lbnRzIGFuZCBjb3JyZWN0cyB0aGVtIHNvIHRoYXQgdGhlcmUgaXMgbm8gZGVtb2dyYXBoaWMgYmlhcyBpbiBhbnkgZ3JvdXAgb2Ygc2ltaWxhciBlbXBsb3llZXMuIFRoaXMgeWVhciwgaW4gb25lIHBhcnRpY3VsYXIgZ3JvdXAgKEw0KSBvZiBhbGwgdGhlIGxvd2VyIGxldmVsIHNvZnR3YXJlIGVuZ2luZWVycyB0aGV5IGZvdW5kIHRoYXQgbWVuIHdvdWxkIGhhdmUgcmVjZWl2ZWQgbGVzcyBvZiB0aG9zZSBkaXNjcmV0aW9uYXJ5IGZ1bmRzIHRoYW4gd29tZW4gcmF0aGVyIHRoYW4gdGhlIG90aGVyIHdheSBhcm91bmQuIApPdmVyIHRpbWUsIHRoZSBjb21wbGV4aXR5IG9mIElUIHByb2N1cmVtZW50IGhhcyBpbmNyZWFzZWQgZ2VvbWV0cmljYWxseS4gSW4gb25lIGRpbWVuc2lvbiwgdGhlIG92ZXJhbGwgc2NvcGUgb2YgSVQgZXhwYW5kcyBjb25zdGFudGx5IGJ1c2luZXNzZXMgZmluZCBuZXcgdXNlcyBmb3IgZGF0YSwgZGVtYW5kaW5nIHRoYXQgdGhleSBzdG9yZSwgcHJvY2VzcywgYW5hbHl6ZSBhbmQgYWN0IG9uIGluZm9ybWF0aW9uIHRvIGVuaGFuY2UgZXhpc3RpbmcgcHJvY2Vzc2VzIGFuZCBsYXVuY2ggbmV3IGFjdGl2aXRpZXMuIApZYW5rcyB0cmFwIDIwMCBtb3JlIEJ5IEVVR0VORSBWLiBoZWxpY29wdGVyIGd1bnNoaXBzIGtpbGxlZCAyMDMnIENvbW11bmlzdHMgaW4gYSBiaXR0ZXIgZGF5bG9uZyBiYXR0bGUgInllc3RlcmRheSBqdXN0IiBzb3V0aCBvZiB0aGUgRGVtaWxpdGFyaXplZCBab25lLiBVLiBTLiBNYXJpbmVzIGxhbmRlZCBmcm9tIDd0aCBGbGVldCBzaGlwcyBhbmQgdHJhcHBlZCBhbm90aGVyIDIwMCB0cnlpbmcgdG8gZmxlZS4gZiB0IHQgdyBUSEUgVFdPIGJhdHRhbGlvbnMgb2YgdGhlIFNvdXRoIFZpZXRuYW1lc2UgMXN0IEluZmFuICB0cnkgRGl2aXNpb24gc3VkZGVubHkgZm91bmQgdGhlbXNlbHZlcyAnZmFjZSB0byBmYWNlIHdpdGggdGhlIFZpZXQgQ29uZyA4MTZ0aCBtYWluIGZvcmNlIGJhdHRhbGlvbiBpbiBhbG1vc3QgdGhlIGV4YWN0IHNwb3Qgd2hlcmUgdGhlIHNhbWUgQ29tbXVuaXN0IGZvcmNlJyBsb3N0IDIwMCBraWxsZWQgaW4gYSBmaWdodCB3aXRoIGdvdmVybiAgbWVudCBmb3JjZXMgbGFzdCBPY3QuIApTdWJzZXF1ZW50bHkgYXNrZWQgZm9yIGEgeWV0IG1vcmUgZGV0YWlsZWQgYnJlYWtkb3duIG9mIHRoZSBtb2RlcmF0b3JzJyB3b3JrbG9hZC4gCk15IHZlcmJhbCBzdG9yZSB3YXMgOTkuIApEZXZlbG9waW5nIHRoZSByaWdodCBwb2tlciBzdHJhdGVneSBtYXkgY2F1c2UgeW91IGZvciBzb21lIHNlcmlvdXMgbW9uZXksIGVzcGVjaWFsbHkgb25saW5lLiAKV2l0aCAkMS45IG1pbGxpb24gbmV0IHdvcnRoLCBjb3VwbGUgaGFzIHRoZSBtZWFucyB0byBoaXQgJDEwLDAwMCBhIG1vbnRoIHJldGlyZW1lbnQgaW5jb21lIHRhcmdldFVyZ2VudCBjb3N0IGN1dHRpbmcgbmVlZGVkIHRvIGtlZXAgZmFtaWx5IHdpdGggbmV0IHdvcnRoIG9mIG9ubHkgJDEzOSw3OTEgYWZsb2F0IGFzIHJldGlyZW1lbnQgbmVhcnNUaGlzIEFsYmVydGEgY291cGxlIGhhcyBhbGwgdGhlaXIga2lkcyBlZHVjYXRpb24gbW9uZXkgaW4gY2FubmFiaXMgc3RvY2tzLiAKU2hlIGRvZXNuIGxvb2sgbGlrZSBzaGUgaGFkIHdvcmsgZG9uZSBidXQgaGVyIHNraW4ganVzdCBsb29rcyB0aWdodCBhbmQgcGx1bXAuIFNoZSBvbmx5IGdldHMgaXQgZG9uZSBldmVyeSA2aXNoIG1vbnRocyBhbmQgc3VjaCBhIHNtYWxsIGFtb3VudCB0aGF0IGhlciBpbnN1cmFuY2UgY292ZXJzIGl0IGZvciB0aGUgbWlncmFpbmVzIGJ1dCBpdCBqdXN0IG1ha2VzIGhlciBsb29rIGFib3V0IDggMTAgeWVhcnMgeW91bmdlciB0aGFuIHNoZSByZWFsbHkgaXMuIApBcyBQdWVydG8gUmljbydzIGVjb25vbXkgZGVjbGluZWQsIHRheCByZXZlbnVlcyBkaWQgdG9vLiBTdWNjZXNzaXZlIGdvdmVybm1lbnRzIHR1cm5lZCB0byBXYWxsIFN0cmVldCB0byBzdGF5IGFmbG9hdCwgYW5kIHRoZSBiYW5rZXJzIHdlcmUgb25seSB0b28gaGFwcHkgdG8gb2JsaWdlLiAKQW5kIGhlIGdldHMgYmFpbGVkIG91dC4uIApPbmUgcG9ydGlvbiBJIHJlY2FsbCByYW4gZnJvbSBteSBjYWx2ZXMgYWxsIHRoZSB3YXkgdXAgdG8gbXkgc2hvdWxkZXJzLi4gCkhlciBuZXJ2ZSBlbmRpbmdzIHdpbGwgYWxyZWFkeSBiZSBsaXQgdXAgZG93biB0aGVyZSwgYW5kIGV2ZXJ5dGhpbmcgaW4gdGhhdCBhcmVhIGlzIGludGVyY29ubmVjdGVkIGFueXdheS4gCkZlYXR1cmluZyBzb25ncyB3cml0dGVuIGJ5IHdoYXQgS2VlbmFuIGRlc2NyaWJlcyBhcyAiTWF5bmFyZCBKYW1lcyBLZWVuYW4gYW5kIGEgcmV2b2x2aW5nIGRvb3Igb2YgdGFsZW50ZWQgcGVvcGxlLiIgU29tZSBvZiB0aGUgbGlzdGVkIGd1ZXN0IG11c2ljaWFucyBpbmNsdWRlIERhbm55IExvaG5lcihSZW5ob2xkZXIpIE1pbGxhIEpvdm92aWNoLCBMaXNhIEdlcm1hbm8sIEpvc2ggRXVzdGlzLCBTYXRhbiwgTHVzdG1vcmQsIEpvbm55IFBvbG9uc2tpLCBUaW0gQWxleGFuZGVyKFByaW11cy9MYXVuZHJ5KSwgVGltIENvbW1lcmZvcmQsIEJyYWQgV2lsaywgQWluamVsIEVtbWUsIFRvbSBNb3JlbGxvLCBHaWwgU2hhcm9uZSwgVHJleSBHdW5uIGFuZCBtYW55IG1vcmUuLiAKRXQgc2VzIGNvbXBsaWNlcyBvdSBzYXRlbGxpdGVzIGVzdCB1biBjYXMgdHJzIHBhcnRpY3VsaWVyIGVuIHJlZ2FyZCBkdSBHcm91cGUgU2FudCBQb3J0IFJveWFsIHF1aSBwdWJsaWUgQWx0ZXJuYXRpdmUgU2FudCBhcHJzIFByYXRpcXVlcyBkZSBTYW50IGV0IGFsbC4gSWwgZXhpc3RlIHBldXQgdHJlIGRlcyBjb25uZXhpb25zIHF1ZSBqJ2lnbm9yZSBtYWlzIHBvdXIgbCdoZXVyZSwgU2FudCBOYXR1cmUgSW5ub3ZhdGlvbiBldCBDaWUgY29uc3RpdHVlIHVuZSBtYWxmYWlzYW5jZSB0cnMgc29waGlzdGlxdWUgZGUgcGFydCBsJ2VtcGxvaSBkZSBwcmF0aXF1ZXMgY29tbWVyY2lhbGVzIHJlbGV2YW50IGZyYW5jaGVtZW50IGR1IGRyb2l0IHBuYWwuIApUaG9zZSBzdGlsbCBpbiByZXZlYWwgdGhlaXIgY2FyZHMuIApUaGlzIGlzIGhvdyB0aGUgbWFkZSAibm9uIGRyb3dzeSBhbnRpaGlzdGFtaW5lcyIuIFRoZXkgbWFkZSB0aGVtIG1vcmUgd2F0ZXIgc29sdWJsZSwgYW5kIGhlbmNlIHRoZXkgZG9uIGdldCBpbnRvIHRoZSBicmFpbiB0byBtYWtlIHlvdSBzbGVlcHkuSXQgYWxzbyB3b3J0aCBub3RpbmcgdGhhdCBldmVuIGlmIGRvcGFtaW5lIGRpZG4gZ2V0IGJyb2tlbiBkb3duIHNvIGZhc3QsIGFuZCBpdCB3YXMgYWJsZSB0byBnZXQgaW50byB0aGUgYnJhaW4sIGl0IHN0aWxsIHByb2JhYmx5IHdvdWxkbiBiZSBhIGdvb2QgZHJ1ZyBvZiBhYnVzZS4gRHJ1Z3Mgd2hpY2ggYWN0aXZhdGUgZG9wYW1pbmUgcmVjZXB0b3JzIGRpcmVjdGx5IHVzdWFsbHkgY2F1c2Ugdm9taXRpbmcuIApUaGUgc29ydCBvZiBwZW9wbGUgd2hvIGdvIHRvIFRFQSBQYXJ0aWVzIGFyZSBtaXNpbmZvcm1lZCBieSBleHRyZW1lIHJpZ2h0IHdlYnNpdGVzIGFuZCBGb3ggIk5ld3MuIiBSZWNlbnQgc2NpZW50aWZpYyByZXNlYXJjaCBzaG93cyB0aGF0IGV2ZW4gd2hlbiBwcmVzZW50ZWQgd2l0aCBjb21wZWxsaW5nIGV2aWRlbmNlIHRvIHRoZSBjb250cmFyeSwgbW9zdCBwZW9wbGUgd2lsbCBjb250aW51ZSB0byBjbGluZyB0byB0aGVpciB3b3JsZCB2aWV3LiBUaGVpciByZXNwb25zZSwgdGhlcmVmb3JlLCBpcyB1bmRlcnN0YW5kYWJsZSBpZiBleHRyZW1lIGFuZCB2aW9sZW50LgpIb21lbGFuZCBTZWN1cml0eSBPZmZpY2VyLiBMb25nIHN0b3J5IHNob3J0LCB3ZSB3ZXJlIGRvaW5nIGpvaW50IGludmVzdGlnYXRpb25zIHdpdGggdGhlIENvdW50eSBEQSBvZmZpY2UgaW4gY3JhY2tpbmcgZG93biBvbiBjaGlsZCBwb3JuIGluIDIwMTUuIFdlIGtuZXcgYWJvdXQgdGhpcyBzaXRlIHRoYXQgd2FzIGJlaW5nIHVzZWQgdG8gdHJhZmZpYyBDUC4gCkNvbnNpZGVyaW5nIHRoYXQgaWRlbnRpdHkgdGhlZnQgcmVzdWx0cyBpbiBtaWxsaW9ucyB1cG9uIG1pbGxpb25zIG9mIGRvbGxhcnMgaW4gZGFtYWdlcyBlYWNoIHllYXIsIGl0IGlzIGFic29sdXRlbHkgZXNzZW50aWFsIHRvIGVuc3VyZSB0aGF0IHlvdSBkbyB3aGF0ZXZlciBpdCBpcyB0aGF0IHlvdSBoYXZlIHRvIGluIG9yZGVyIHRvIHByZXZlbnQgY3JpbWluYWxzIGZyb20gdGFwcGluZyBpbnRvIGluZm9ybWF0aW9uIHJlbGF0ZWQgdG8geW91ciBidXNpbmVzcy4uIApQbGVhc2UgdXNlIGNvbmRvbXMgLCBhdm9pZCB1bnRlc3RlZCBwcm9zdGl0dXRlcyBvciB1c2UgZGlzcG9zYWJsZSBuZWVkbGVzbmlmIGFueSBhcHBseS4gCkdldHRpbmcgYSBCbG9nIG9uIHRoZSBJbnRlcm5ldAooV2hpY2ggd291bGQgZmluZSwgZXhjZXB0IEkgd2FzIGluIG5vcnRoZXJuIEFsYWJhbWEsIGluIGEgdG93biBjYWxsZWQgUGhpbCBDYW1wYmVsbCwgYW5kIHRoZSBjbG9zZXN0IEVSIHdhcyAzMCBtaW51dGVzIGF3YXkuIApUaGlzIHdhcyBhIHZlcnkgY29udHJvdmVyc2lhbCByZWZvcm0gd2hpY2ggZ290IGEgbG90IG9mIHB1c2hiYWNrLCB1bnRpbCBpdCBub3cgZmluYWxseSBmYWlsZWQgcHJvcGVybHkuVGhlIGdvdmVybm1lbnQgaXMgcmVzaWduaW5nIG5vdyBvbmx5IHdlZWtzIGJlZm9yZSB0aGUgbmV3IHBhcmxpYW1lbnRhcnkgZWxlY3Rpb24gYW5kIGl0IGRvZXNuIHJlYWxseSBtYWtlIGEgaHVnZSBkaWZmZXJlbmNlLiAKVHJhbnNpdCBXaW5kc29yIG5lZWRzIGFuIGFkZGl0aW9uYWwgJDI3NSwwMDAgdG8gYWRkIG1vcmUgc2VydmljZSB0byBpdHMgcm91dGVzIGluIFNvdXRoIFdpbmRzb3Igc2VydmluZyBTdC4gCk9uIHRoaXMgYmFzaXMsIGl0IGlzIHByZWRpY3RlZCB0aGF0IGJ5IDIwMjYsIHBlb3BsZSBpZGVudGlmeWluZyB0aGVtc2VsdmVzIGFzIEFzaWFuIHdpbGwgYmUgdGhlIHNlY29uZCBsYXJnZXN0IGV0aG5pYyBncm91cGluZyB3aXRoaW4gTlogYmVoaW5kIHRoZSBzbHVnZ2lzaGx5IGdyb3dpbmcgQ2F1Y2FzaWFuIG1ham9yaXR5LCBhbmQgc3VycGFzc2luZyB0aGUgdG5nYXRhIHdoZW51YSwgTW9yaSAoU2VlIEZpZ3VyZSBUd28gYmVsb3cpLihCcmlkZ2V0IFdpbGxpYW1zIEJvb2tzLCAkOTkuOTkpUmV2aWV3ZWQgYnkgTWFyayBEZXJieVRoaXMgaW1wb3NpbmcgdG9tZSBzZWVtcyBtb3JlIGxpa2VseSB0byBiZSBib3VnaHQgYXMgYSBwcmVzdGlnaW91cyBnaWZ0LCBvciBhbiBhZG9ybm1lbnQgZm9yIHRoZSBjb2ZmZWUgdGFibGUsIHRoYW4gdG8gYmVjb21lIGEgY2FyZWZ1bGx5IHBlcnVzZWQgYW5kIGZyZXF1ZW50bHkgY29uc3VsdGVkIGFkZGl0aW9uIHRvIHlvdXIgcGVyc29uYWwgYm9vayBjb2xsZWN0aW9uLiBJbiBpdHMgaGVmdCwgZXhjZXB0aW9uYWwgcHJvZHVjdGlvbiB2YWx1ZXMgYW5kIG9tbmlzY2llbnQgdG9uZSwgVGFuZ2F0YSBXaGVudWEgbG9vbXMgYSBiaXQgbGlrZSBhIEJlbnRsZXkgaW4gYSBkb3dudG93biBwYXJraW5nIGJ1aWxkaW5nICAgYSBkaXN0aW5ndWlzaGVkIGFuZCBkb29tZWQgcmVtaW5kZXIgb2YgYSBmb3JtZXIgbGl0ZXJhcnkgYWdlLkV2ZW4gYmVmb3JlIHJlYWRpbmcgdGhlIGZpcnN0IHdvcmQsIGl0cyBxdWFsaXRpZXMgYXJlIGFwcGFyZW50IGluIGl0cyBoZWlybG9vbSBtYXRlcmlhbHMsIGJlYXV0aWZ1bCBwaG90byByZXByb2R1Y3Rpb24gYW5kIGNsYXNzaWMsIGVsZWdhbnQgcGFnZSBkZXNpZ24uIApZZWFoIHRvdGFsbHkgYWdyZWUgaXQncyBhbiB1cGhpbGwgYmF0dGxlLCBpdCBuZWVkcyB0byBiZSBpbmNlbnRpdml6ZWQgd2l0aCBpbml0aWF0aXZlcyBsaWtlIGNhcmJvbiBmYXJtaW5nIHdoaWNoIHBheXMgZmFybWVycyBmb3IgaW5jcmVhc2luZyB0aGUgY2FyYm9uIGxldmVscyBpbiB0aGVpciBzb2lscywgaXQncyB0aGUgd2luIHdpbiBJIG1lbnRpb25lZCBiZWZvcmUuIENhcmJvbiBpbmNyZWFzaW5nIGluIHRoZSBzb2lsIGFsc28gaW5jcmVhc2VzIHRoZSBoZWFsdGggYW5kIHByb2R1Y3Rpdml0eSBvZiB0aGUgc29pbCBhcyB3ZWxsIGFzIHN0b3BwaW5nIHJ1bm9mZi4gUmVnZW5lcmF0aXZlIGdyYXppbmcgcHJhY3RpY2VzIGFyZSBvbmUgd2F5IG9mIGRvaW5nIHRoaXMuCkhlcmUgaXMgYSBsaXN0IG9mIHRoaXJ0ZWVuIHN0cmF0ZWdpZXMgZm9yIHJlZHVjaW5nIGluZmxhbW1hdGlvbiwgZ2V0dGluZyBoZWFsdGhpZXIsIGFuZCBwb3NzaWJseSBzYXZpbmcgeW91ciBsaWZlLgpBZnRlciBteSBjb25mb3JtYXRpb24gc2hlIGNhbGxlZCBsYWRpZXMsIGFuZCA0IGxhZGllcyBhcHBlYXJlZCBmcm9tIGluc2lkZSwgZmlyc3QgSSB3YXMgZGlzYXBwb2ludGVkIGFzIG9ubHkgNCBsYWRpZXMgYXZhaWxhYmxlIGZvciBjaG9pY2UgYW5kIG5vbmUgb2YgdGhlbSB3YXMgYXR0cmFjdGl2ZSwgSSB3YXMgZXZlbiBjb25zaWRlcmluZyBsZWF2aW5nIHRoYXQgcGxhY2UgYW5kIHRyeSBzb21ld2hlcmUgZWxzZSBidXQgbWFtYXNhbiBtaWdodCBndWVzc2VkIG15IHRob3VnaHRzIGFuZCBzaGUgY2FsbGVkICdLb3knLCBhcyBzb29uIGFzICdLb3knIGFwcGVhcmVkIEkgZm91bmQgaGVyIHBlcmZlY3QgYXMgcGVyIG15IGNob2ljZSwgc2hvcnQgYnV0IHN3ZWV0LCBwcmV0dHkgc21pbGluZyBmYWNlLCBubyBmYXQgb24gYm9keSwgSSBpbnN0YW50bHkgc2VsZWN0ZWQgaGVyIGFuZCBwcm9jZWVkIGZvciBwYXltZW50LCB0aGUgcHJpY2Ugd2FzIHByZXR0eSBzdGFuZGFyZCAyMzAwIGJhaHQgZm9yIDEuNSBocnMuIAoiV2UgaGF2ZSB0byB0YWtlIHdoYXQgd2UncmUgZ2l2ZW4sIiBzaGUgc2FpZC4gIldlJ3JlIG5vdCBoYXBweSB3aXRoIHRoYXQuIgoiWW91IGtub3cgYWxyZWFkeSBkb24ndCB5b3U/IiBJIHNhaWQuIEkgYWxtb3N0IGJ1cnN0IGludG8gdGVhcnMuCkZ1bGwgZGlzY2xvc3VyZSwgSSBhIHNpbmdsZSBndXkgd2hvc2UgbmV2ZXIgZXZlbiBnb3R0ZW4gY2xvc2UgdG8gbWFycnlpbmcgc29tZW9uZSwgYnV0IEkgZG8gbm90IHVuZGVyc3RhbmQgdGhlIGlkZWEgb2YgdGhlIHN0YXRlbWVudCAidGhhdCBub3QgYSByaW5nIHlvdSBhc2sgc29tZW9uZSB0byBtYXJyeSB5b3Ugd2l0aC4iIEkgaG9uZXN0bHkgdGhpbmsgaXQgcHJldHR5IGdyb3NzIHRvIHNwZW5kIHRob3VzYW5kcyBvZiBkb2xsYXJzIEpVU1QgYmVjYXVzZSB0aGF0IHdoYXQgcGVvcGxlIGV4cGVjdCB5b3UgdG8gZG8uIElmIHlvdSBzdXBwb3NlZCB0byBoYXZlIHlvdXIgbG92ZSByZXByZXNlbnRlZCBpbiBhIHBoeXNpY2FsIG9iamVjdCAod2hpY2ggaXMgYSBiYWQgaWRlYSBhbnl3YXkpIHRoZSBzZW50aW1lbnRhbCB2YWx1ZSBzaG91bGQgYmUgaW5maW5pdGVseSBtb3JlIGltcG9ydGFudCB0aGFuIHRoZSBzdGlja2VyIHByaWNlLiBJIGRvbiB0aGluayBpdCBsb29rcyBuZWFybHkgYXMgYmFkIGFzIG90aGVycyBoZXJlIGFyZSBzYXlpbmcsIGFuZCBvYnZpb3VzbHkgaXQgaW1wb3J0YW50IHRvIHRoZSBndXkgd2hvIHByb3Bvc2VkLiAKMjAuIFRoZSBnb3Zlcm5tZW50IGZvcmNlcywgZmlnaHRpbmcgd2l0aCB0aGVpciBiYWNrcyB0byB0aGUgc2VhLCBsb3N0IDE1IGRlYWQuIEVTVC4gVGhyZWUgaGVsaSAgY29wdGVyIGNyZXdtZW4gd2VyZSBpbmp1cmVkIGluIG9uZSBjcmFzaCBhbmQgYW4gQXVzdHJhICBsaWFuIGFkdmlzZXIgd2l0aCB0aGUgVmlldCAgbmFtZXNlIHdhcyB3b3VuZGVkLiAgVGhlIFNvdXRoIFZpZXRuYW1lc2UgaW5mYW4gIGFsbGllZCAgJ2FydGlsbGVyeSIgYW5kIGFpciAnc3RyaWtlcyBraWxsZWQgaGFsZiBvZiEgdGhlIDQwMCBtYW4gZW5lbXkgYmF0dGFsaW9uLiAKQWJvdXQgYSB3ZWVrIGxhdGVyIG15IHNvY2sgdHVybmVkIHVwIGluIG91ciBjb2xsZWdlIHN0dWR5IHJvb20sIGFuZCBJIHdhcyBsaWtlIHNvY2tra2ssIGkgYmVlbiBsb29raW5nIGZvciB0aGF0IGV2ZXJ5d2hlcmUgYW5kIHdhbGtlZCBhY3Jvc3MgdGhlIHJvb20uIApUaGF0IHNoZSBncmFiYmVkIG15IGNvdmVycyBhZ2FpbiBhbmQgd2UgcGxheWVkIHRoZSBzdHVwaWQgZ2FtZSBvZiB0dWcgb2Ygd2FyIHdpdGggdGhlIGNvdmVycy4gClRoYXQgaG93IGl0IGlzIHdpdGggcXVlZXIga2lkcyByYWlzZWQgaW4gcXVlZXIgZmFtaWxpZXMuIApZb3VyIG1pbmQgcmFjZXMgYXQgYWxsIGhvdXJzIHdpdGggY29uY2VybnMgdGhhdCB5b3UgZGlkbid0IGV2ZW4ga25vdyBleGlzdGVkIHNpeCBtb250aHMgYWdvLiBBcyB5b3VyIHByZWduYW5jeSBwcm9ncmVzc2VzLCB5b3VyIG5ld2ZvdW5kIG1lbnRhbCB1bnJlc3QgaXMgYWNjb21wYW5pZWQgYnkgcmFuZG9tIGFjaGVzIGFuZCBwYWlucyBicm91Z2h0IG9uIGJ5IHN1Y2ggc3RyZW51b3VzIGFjdGl2aXRpZXMgYXMgc2l0dGluZyBvciBzdGFuZGluZywgYW5kIHlvdSdyZSB3YWtpbmcgdXAgMTcgdGltZXMgYSBuaWdodCB0byBjb21wbGV0ZSBhbiBlbGFib3JhdGUgc2VyaWVzIG9mIG1hbmV1dmVycyBvbmNlIGtub3duIHNpbXBseSBhcyAidHVybmluZyBvdmVyLiIuIApBbW9uZyBvdGhlciBhY2hpZXZlbWVudHMsIEdyb2dhbiBpcyBiZWluZyBjcmVkaXRlZCB3aXRoIGhlbHBpbmcgdGhlIGNyZWRpdCB1bmlvbiBjcmVhdGUgaXRzIGludGVybmFsIGNhcGl0YWwgYWRlcXVhY3kgYXNzZXNzbWVudCBwcm9jZXNzIChJQ0FBUCkgYSBwcm9jZXNzIHRoYXQgZW5zdXJlcyBmaW5hbmNpYWwgaW5zdGl0dXRpb25zIGhhdmUgZW5vdWdoIHJlc291cmNlcyB0byBjb3ZlciBhbGwgb2YgaXRzIGxvbmcgdGVybSByaXNrcy4KQmUgY2FyZWZ1bCBpbiBjaG9vc2luZyBmYWNpYWwgd2hpdGVuaW5nIGNyZWFtLCBzaW5jZSBub3QgYWxsIHNraW4gd2hpdGVuaW5nIGNyZWFtcyBhcmUgc2FmZSB0byBhcHBseSBvbiB0aGUgZmFjZS4gCldlIHVzZSBBQiBUYXN0eSB0byBoZWxwIHVzIHVuZGVyc3RhbmQgaG93IHVzZXJzIG5hdmlnYXRlIG91ciB3ZWJzaXRlIGFuZCB0byBhbGxvdyB1cyB0byB0ZXN0IGRpZmZlcmVudCB2ZXJzaW9ucyBvZiBvdXIgc2l0ZSBvbiBwYXJ0aWN1bGFyIGF1ZGllbmNlcy4gVGhlIHRvb2wgdXNlcyBjb29raWVzIHRvIGlkZW50aWZ5IHJldHVybmluZyB1c2VycyBhbmQgY2FuIHVzZSBJUCBhZGRyZXNzZXMgdG8gZGV0ZXJtaW5lIGdlbmVyYWwgbG9jYXRpb24sIGJ1dCBubyBvdGhlciBwZXJzb25hbGx5IGlkZW50aWZpYWJsZSBkYXRhIGlzIGNvbGxlY3RlZC4gVGhpcyBhbGxvd3MgdXMgdG8gcmVhY2ggcGVvcGxlIHdobyBwcmV2aW91c2x5IHZpc2l0ZWQgb3VyIHdlYnNpdGUgd2l0aCBhcHByb3ByaWF0ZSBtZXNzYWdpbmcuIApJIHN1cHBvc2UgeW91IGFyZSBpbnRlcmVzdGVkIGluIHRoZSBtb3N0IHBvcHVsYXIgbm8gbGltaXQgbW9kZS4gVGhlcmUgYXJlIGluIGludGVybmV0IHByZWNhbGN1bHRlZCBwdXNoL2ZvbGQgY2hhcnRzIGZvciBoZWFkcyB1cCBhbmQgbm90IG9ubHkgaGVhZHMgdXAuIApCeSBtYWtpbmcgZXhoaWJpdHMgaGFsZiBodW1hbiwgaGFsZiBzb21ldGhpbmcgZWxzZSwgQmFybnVtIGNvdWxkIGVuZ2FnZSBoaXMgYXVkaWVuY2Ugc2Vuc2Ugb2Ygd29uZGVyIGFuZCBhd2UgYW5kIGV2ZW4sIHNvbWV0aW1lcywgb3V0cmFnZSBvdmVyIHRoZSBvYnZpb3VzbmVzcyBvZiBoaXMgaHVtYnVnLiBUaGUgaHlicmlkaXR5IG9mIHRoZXNlIGJvZGllcywgYSBoeWJyaWRpdHkgdGhhdCB3ZXJlIGxlc3NvbnMgZnJvbSBHb2QgYmVmb3JlIEJhcm51bSwgbWFkZSBvbmxvb2tlcnMgZmVlbCBib3RoIGZ1bGx5IGh1bWFuIGFuZCBsZWZ0IHRoZW0gd2FudGluZyBhbm90aGVyIGxvb2suLiAKQWJyYWhhbSBjYW1lIHRvIENoaWNhZ28gdHdvIHllYXJzIGFnbyBmcm9tIFN1bW1pdCwgSk1pc3MuLCBoZXIgYmlydGhwbGFjZS4gCkl0J3Mgd2lkZWx5IGFjY2VwdGVkIHRoYXQgdGhlIG5leHQgc3RhZ2UgaW4gaHVtYW4gZXZvbHV0aW9uIHdvbid0IGJlIHNpZ25hbGVkIGJ5IHBzeWNoaWMgcG93ZXJzIG9yIGdsb3dpbmcgcGVhY2VuaWsgZW5lcmd5IGJlaW5ncywgYnV0IHdoZW4gcGVvcGxlIHN0b3AgZ29pbmcgdG8gY2FzaW5vcy4KU2VlIHRoYXQgcmlkaWN1bG91cyBvcGVuIG1vdXRoPyAoVGhpcyBpcyBhY3R1YWxseSB3aHkgdGhpcyBpcyBteSBmYXZvcml0ZSBwaWN0dXJlIG9mIG9uZSwgYW5kIEkgaGF2ZSBoYWQgaXQgc2F2ZWQgdG8gbXkgcGhvbmUgZm9yIHRocmVlIHllYXJzKSAiT2ggbm8hIFdoYXQgY291bGQgaGF2ZSBoYXBwZW5lZCEgSG93IGNvdWxkIHRoaXMgYmUhIiBEbyBub3QgbGV0IHRoYXQgZXhwcmVzc2lvbiBmb29sIHlvdSwgdGhleSBqdXN0IGRvbiBoYXZlIHRoZSBnb2RkYW1uIGFiaWxpdHkgdG8gY2xvc2UgdGhlaXIgbW91dGhzIGJlY2F1c2UgdGhlaXIgdGVldGggYXJlIGZ1c2VkIHRvZ2V0aGVyLCBhbmQgeWEga25vdyB3aGF0LCBpdCBpcyBnb29kIGl0IGZsb2F0cyBhcm91bmQgd2l0aCBzdWNoIGEgY2x1ZWxlc3MgZXhwcmVzc2lvbiBvbiBpdHMgZmFjZSwgYmVjYXVzZSBpdCBpcyBpbiBmYWN0IGNsdWVsZXNzIGFzIGFsbCBmdWNrLlRoZXkgZG8gU09NRVRJTUVTIGdldCBlYXRlbiB0aG91Z2guIEJVVCBIQVJETFkuIApSb3VsZXR0ZSBoYXMgYmVlbiBjYWxsZWQgdGhlICJLaW5nIG9mIENhc2lubyBHYW1lcyIsIHBvc3NpYmx5IGJlY2F1c2UgaXQncyBhbiB1dHRlcmx5IHNraWxsIGZyZWUgcGFyb2R5IG9mIGV2ZXJ5b25lIHdobyBwbGF5cyBpdC4gSXQgd2FzIGludmVudGVkIGJ5IGdlbml1cyBwaHlzaWNpc3QgQmxhaXNlIFBhc2NhbCBpbiB3aGF0IGhlIHRoaW5rcyB3YXMgYSBmYWlsZWQgYXR0ZW1wdCB0byBjcmVhdGUgYSBwZXJwZXR1YWwgbW90aW9uIG1hY2hpbmUuIApJIHdlbnQgdG8gdGhlIGxhYm91ciBEZXB0IHllc3RlcmRheSBhbmQgc3Rvb2QgaW4gYSBtYXNzaXZlIHF1ZXVlIGZvciBhbiBob3VyIGFuZCBhcyBJIGdvdCBhYm91dCBmaWZ0aCBmcm9tIHRoZSBmcm9udCB0aGV5IHNhaWQgdGhlIHN5c3RlbSBpcyBvZmZsaW5lLiAKVGhlIGZpcnN0IHRpbWUgd2UgaGFkIHNleCwgSSByZW1lbWJlciB0aGlua2luZyB0aGlzIGZlZWxzIHdheSBkaWZmZXJlbnQuIApUaGUgbW9yZSBkZXByZXNzaW5nIGZhY3QgaXMgdGhhdCB0aGUgd2FyIGNvdWxkIGhhdmUgZW5kZWQgbXVjaCBzb29uZXIuIEpvaG5zb24gaGFkIHdpcmUgdGFwcGVkIE5peG9uIGFuZCBkaXNjb3ZlcmVkIE5peG9uIGRlcmFpbGVkIHRoZSB3aG9sZSBwZWFjZSBwcm9jZXNzIHRoYXQgd2FzIGxpa2VseSB0byBoYXBwZW4gcmlnaHQgYmVmb3JlIE5peG9uIHdhcyB0byB0YWtlIG9mZmljZS4gTml4b24gdG9sZCBlaXRoZXIgdGhlIE5vcnRoIG9yIFNvdXRoIFZpZXRuYW1lc2UgbGVhZGVyc2hpcCBub3QgdG8gdHJ1c3QgdGhlIG90aGVyIHNpZGUuIEpvaG5zb24gaGFkIHBsYW5uZWQgdG8gYW5ub3VuY2UgdGhlIHBlYWNlIHBsYW4gb24gdHYuIEpvaG5zb24gY291bGRuIGRpdnVsZ2UgdGhlIGluZm9ybWF0aW9uIGJlY2F1c2UgdGhlIHRhcCB3YXMgaWxsZWdhbC4KVGhpcyBtYWtlcyBoaXMgcmVtYXJrcyBsaW5raW5nIElTSSB0byB0aGUgQWZnaGFuIFRhbGliYW4gSGFxcWFuaSBuZXR3b3JrIGF0dGFja3Mgb24gb3VyIGZvcmNlcyB0aGlzIG1vbnRoIGFsbCB0aGUgbW9yZSBzdHVubmluZy4gCkknbSB0aGUgb25seSBpbmNvbWUgZWFybmVyIGluIG15IGhvdXNlLiBNeSBodXNiYW5kIGNhbid0IHdvcmsgeWV0IGJ1dCB3aWxsIGJlIGFibGUgdG8gc29vbiAobG9uZyBzdG9yeSkuIEhlIGRvZXMgYSBsb3Qgb2YgaG91c2V3b3JrIGFzIGZhciBhcyBjbGVhbmluZyAodGhvdWdoIG5ldmVyIHNlZW1zIHRvIGhhdmUgbGVhcm5lZCBub3QgdG8gbWFrZSB0aGUgbWVzcyBpbiB0aGUgZmlyc3QgcGxhY2UpIGJ1dCBzaW5jZSB3ZSBoYWQgYSBiYWJ5IDk1JSBvZiB0aGUgY2hpbGRjYXJlIGlzIG9uIG1lLiBJIGRvIGV2ZXJ5IG5pZ2h0IHNoaWZ0LiBJIGhhdmVuJ3Qgc2xlcHQgbW9yZSB0aGFuIGEgZmV3IGhvdXJzIGF0IGEgdGltZSBzaW5jZSBoZSB3YXMgYm9ybi4gSSBoYXZlbid0IGJlZW4gYWJsZSB0byBnbyBiYWNrIHRvIHdvcmsgeWV0IChJJ20gYSBmcmVlbGFuY2VyKSBiZWNhdXNlIGhlIHdvbid0IGNvbW1pdCB0byB0YWtpbmcgdGhlIGJhYnkgZm9yIHJlZ3VsYXIgbGVuZ3RocyBvZiB0aW1lLiBJIGNhbiBiZSBvbiBiYWJ5IGR1dHkgZm9yIGZpdmUgZGF5cyBzdHJhaWdodCBiZWZvcmUgaGUnbGwgdGFrZSBoaW0gZm9yIGEgZmV3IGhvdXJzLiBXZSdyZSBydW5uaW5nIG91dCBvZiBzYXZpbmdzIGFuZCBJIHN0aWxsIGNhbid0IGV2ZW4gZ2V0IGZvdXIgaG91cnMgYSBkYXkgdG8gd29yay4KVGhpcyB3YXMgb25jZSBpbiBhIGxpZmV0aW1lIGV4cGVyaWVuY2UuIEZvciB0aG9zZSBvZiB5b3Ugd2hvIHNhaWQgSSdtIG5vdCByZWFsLCBJIHN1cmUgZG8gZmVlbCByZWFsLiBGb3IgdGhlIG9uZXMgdGhhdCBzYWlkIHRoYXQgbXkgc2hpcnQgd2FzIHRvbyB0aWdodCwgaXQgZGlkbid0IGZlZWwgbGlrZSBpdCwgYnV0IEknbGwgdGFrZSB5b3UgY29uY2VybnMgYW5kIHB1dCB0aGVtIGluIHRoZSBzdWdnZXN0aW9uIGJveCEhIEZvciB0aG9zZSB0aGF0IGxvdmVkIG15IGJlYXJkLCBUSEFOSyBZT1UhISBJJ3ZlIGJlZW4gd29ya2luZyBvbiBpdCBmb3IgYSB3aGlsZSBhbmQgd2FudCB0byBjb250aW51ZSBncm93aW5nIGl0IHdoaWxlIHRyeWluZyB0byBrZWVwIGl0IHByb2Zlc2lvbmFsIGZvciBteSBqb2IuLiAKWW91ciBqb2IgaXMgdG8gbG92ZSBhbmQgcHJvdGVjdCBoZXIsIG5vdCBjb250cm9sIGhlci4gClRoZSBNeWFubWFyIHBlb3BsZSBoYXZlIGJlZW4gaWRlbnRpZmllZCBhcyBvcHByZXNzZWQgdmljdGltcyBmb3Igc28gbG9uZyB0aGF0IG5vYm9keSBzdG9wcGVkIHRvIGNvbnNpZGVyIHRoZWlyIG93biBkZWVwIHJhY2lzbSwgaWdub3JhbmNlIGFuZCBoYXRyZWQuCk1vcmUgdGhhbiAzMCB5ZWFycyBsYXRlciwgbWFueSBvZiB0aGUgb2xkIGd1YXJkIEdvb2QgQnVpbGRpbmdzIGhhdmUgc2VlbiBiZXR0ZXIgZGF5cy4gQWZ0ZXIgZmxvdW5kZXJpbmcgb24gdGhlIG1hcmtldCBzaW5jZSAyMDEyLCBhIHNwYWNpb3VzIHR3byBiZWRyb29tIGFwYXJ0bWVudCBzZWVraW5nICQyLjMgbWlsbGlvbiBhdCA1NTAgUGFyayBmYWlsZWQgdG8gZmluZCBhIGJ1eWVyLCBkZXNwaXRlIGEgMzYgcGVyY2VudCBwcmljZSBkZWNyZWFzZS4gTHV4dXJ5IGNvIG9wcywgb25jZSB0aGUgbW9zdCBzdGFibGUgYmxvY2sgb2YgaW52ZW50b3J5IGluIE5ldyBZb3JrLCBoYXZlIHNlZW4gdGhlaXIgcHJpY2VzIGZhbGwgMjAgcGVyY2VudCBmcm9tIDIwMTQgdG8gMjAxOCwgYWNjb3JkaW5nIHRvIHRvcCByZWFsIGVzdGF0ZSBhcHByYWlzZXIgSm9uYXRoYW4gTWlsbGVyLi4gClRoZW4gbGF0ZXIgb24geW91IGNhbiBwb3NzaWJseSBicmluZyB1cCBhIHRvcGljIGxpa2Ugc2VsZiBkcml2aW5nIGNhcnMgd2hlbiBpdCBub3QgaW4gdGhlIG1pZGRsZSBvZiBhIGRpc2N1c3Npb24gYWJvdXQgc29tZW9uZSBsaWZlLi4gCllvdSBjYW4gYmFuZyB5b3VyIHRodW1iIGFuZCBzZXQgeW91ciBuZXJ2ZXMgcmlnaHQgb2ZmLiAKKEplYWxvdXMsIHJpZ2h0PykgIlRoZSB0cnV0aCBpcywgdGhpcyBlYXJ0aCBzaWduJ3MgbWlzc2lvbiBpcyB0byBkbyB0aGUgam9iIHJpZ2h0IG9yIG5vdCBhdCBhbGwuIAoiRnJvbSBteSBwb2ludCBvZiB2aWV3IGJlaW5nIGFibGUgdG8gdGFrZSAoYWN0aW9uKW9uIGdhbWJsaW5nIGFkZGljdGlvbiBpcyBubyBkaWZmZXJlbnQgdG8gb3VyIGFiaWxpdHkgdG8gdGFrZSBhY3Rpb24gb24gYWxjb2hvbCBpbiBvdXIgY29tbXVuaXR5LiIgSG93ZXZlciB0aGUgbW90aW9uIHdhcyBkZWZlYXRlZCBkZWNpc2l2ZWx5LCBnYWluaW5nb25seSAzNiBwZXIgY2VudCBzdXBwb3J0LiBTaGVsbGhhcmJvdXIgbWF5b3IgTWFyaWFubmUgU2FsaWJhIHNhaWQgbGljZW5zZWQgY2x1YnMgd2VyZSAidGhlIGJhY2tib25lIG9mIG15IGNvbW11bml0aWVzIiBhbmQgcGxheWVkIGEgdml0YWwgcm9sZSB0aHJvdWdoIGpvYnMgYW5kIHNwb3J0LiAKQW4gYWRkaXRpb25hbCBmZWF0dXJlIGlzIHRoZSBBbnRlIEJvbnVzLCB3aGljaCBpcyBwYWlkIHRvIHRoZSBBbnRlIHdhZ2VyIGZvciBhIHN0cmFpZ2h0IG9yIGJldHRlci4gVGhlIEFudGUgQm9udXMgaXMgcGFpZCBvbiBhIHBheSBzY2FsZSBhbmQgaXMgcGFpZCByZWdhcmRsZXNzIG9mIHdoZXRoZXIgdGhlIGRlYWxlciBwbGF5cyBhbmQgcmVnYXJkbGVzcyBvZiB3aGV0aGVyIHRoZSBkZWFsZXIgb3IgdGhlIHBsYXllciBoYXMgdGhlIGJlc3QgaGFuZC4gVGhlIFBhaXIgUGx1cyB3YWdlciBsb3NlcyBpZiB0aGUgcGxheWVyIGhhcyBsZXNzIHRoYW4gYSBwYWlyIGFuZCB3aW5zIHdpdGggYSBwYWlyIG9yIGJldHRlci4gCkl0IHdhcyBhIHZlcnkgbmljZSBzdXJwcmlzZSBmb3IgbWUuIFRoYXQgc2FpZCwgSSBjYW4gb25seSBpbWFnaW5lIHRoZSBnaWRkaW5lc3MgYW5kIHN1c3BlbnNpb24gb2YgKGRpcyApYmVsaWVmIHdoZW4gdGhlIG1hc3MgbWFya2V0IHJlYWRlcnNoaXAgb2YgUm9iZXJ0IEhvb2tlIE1pY3JvZ3JhcGhpYSBnb3QgYSBsb29rIGZvciB0aGUgZmlyc3QgdGltZSBvbiB3aGF0IHRoZSBzbWFsbCBjcmVlcHkgY3Jhd2xpZXMgdGhhdCBsaXZlZCBhcm91bmQgdGhlbSBsb29rZWQgbGlrZSB1bmRlciBtYWduaWZpY2F0aW9uLiBTdWRkZW5seSB0aGUgYmxvdHMgYW5kIGJsb3RjaGVzIHRvb2sgb24gcmVhbCBhbmQgc29tZXRvbWVzIHRlcnJpZnlpbmcgZm9ybXMuIFRoZXNlIHdlcmUgYmFzaWNhbGx5IHVuc2VlbiBkdXJpbmcgdGhlaXIgbG9uZyBpbnRlcmFjdGlvbnMgd2l0aCBodW1hbiBiZWluZ3MsIHVudGlsLCBzdWRkZW5seSwgTXIuLCBIb29rZSBtYWRlIGhpcyBpbnZlc3RpZ2F0aW9ucyBhbmQgcHV0IGEgZmFjZSBvbiB0aGUgdW5zZWVuIG1pY3Jvd29ybGQgYW5kIHNoYXJlZCBpdCB3aXRoIHRoZSBHZW5lcmFsIFB1YmxpYy4gaXMgbXkgaG9wZSwgYXMgd2VsbCBhcyBiZWxpZWYsIHRoYXQgdGhlc2UgbXkgTGFib3VycyB3aWxsIGJlIG5vIG1vcmUgY29tcGFyYWJsZSB0byB0aGUgUHJvZHVjdGlvbnMgb2YgbWFueSBvdGhlciBOYXR1cmFsIFBoaWxvc29waGVycywgd2hvIGFyZSBub3cgZXZlcnkgd2hlcmUgYnVzaWUgYWJvdXQgZ3JlYXRlciB0aGluZ3M7IHRoZW4gbXkgbGl0dGxlIE9iamVjdHMgYXJlIHRvIGJlIGNvbXBhciB0byB0aGUgZ3JlYXRlciBhbmQgbW9yZSBiZWF1dGlmdWwgV29ya3Mgb2YgTmF0dXJlLCBBIEZsZWEsIGEgTWl0ZSwgYSBHbmF0LCB0byBhbiBIb3JzZSwgYW4gRWxlcGhhbnQsIG9yIGEgTHlvbiIgc2FpZCBNci4gSG9va2UgYXQgdGhlIGVuZCBvZiBoaXMgMjggcGFnZSBwcmVmYWNlIHRvIE1pY3JvZ3JhcGhpYSBpbiAxNjY1LgpBIExpZmUgUHJvIFRpcCAob3IgTFBUKSBpcyBhIHNwZWNpZmljIHRpcCB0aGF0IGltcHJvdmVzIGxpZmUgZm9yIHlvdSBhbmQgdGhvc2UgYXJvdW5kIHlvdSBpbiBhIHNwZWNpZmljIGFuZCBzaWduaWZpY2FudCB3YXkuCk1yIFNjb3R0IGhhcyBydW4gdGhlIHByb2dyYW0gZm9yIGNoaWxkcmVuIGFnZWQgZWlnaHQgdG8gMTIgZm9yIGZpdmUgeWVhcnMuIApHZXQgY3JlYXRpdmUuIApMZXMgZ3JhbmRlcyB2aWxsZXMgdm9pZW50IGxldXIgYWRtaW5pc3RyYXRpb24gY29tcGx0ZSBwYXIgdW4gQ29uc2VpbCBtdW5pY2lwYWwuLiAKQXQgb3ZlciAxNSBtaW51dGVzLCBNb3RoZXIgTW9uc3RlcidzIENhcnBvb2wgS2FyYW9rZSBzZWdtZW50IGlzIG9uZSBvZiB0aGUgbG9uZ2VzdCBpbiB0aGUgc2VyaWVzLCBsYXN0aW5nIGxvbmdlciB0aGFuIEplbm5pZmVyIExvcGV6LCBBZGVsZSwgQnJpdG5leSBTcGVhcnMgYW5kIGV2ZW4gRmlyc3QgTGFkeSBNaWNoZWxsZSBPYmFtYS4gClRoZXkgdG9sZCB1cyByZXBlYXRlZGx5IGhlIHdvdWxkIGRpZSB0b2RheS4gCkxhIGN1cmlvc2l0IGV0IGwnb3V2ZXJ0dXJlIDogWWFubmljayBBbGxlbm8gYSBhdm91IHNlIGxhc3NlciBhc3NleiB2aXRlIGV0IGMnZXN0IGNlIHF1aSBsZSBwb3Vzc2UgIHNlIHJlbm91dmVsZXIgZXQgbGFuY2VyIGRlIG5vdXZlYXV4IHByb2pldHMuIApBbmQgYWN0dWFsbHkgYXQgbXkgb2xkIGpvYiBteSBzdXBlcnZpc29yIHRvbGQgZXZlcnlvbmUgSSB3YXMgbGVhdmluZyBmb3IgYSAidGVhY2hpbmcgam9iIi4gSSBhdCBhbiBSMSBsYW5kIGdyYW50IGxvbApXaGVuIGluIHRoZSBDb3Vyc2Ugb2YgaHVtYW4gZXZlbnRzLCBpdCBiZWNvbWVzIG5lY2Vzc2FyeSBmb3Igb25lIHBlb3BsZSB0byBkaXNzb2x2ZSB0aGUgcG9saXRpY2FsIGJhbmRzIHdoaWNoIGhhdmUgY29ubmVjdGVkIHRoZW0gd2l0aCBhbm90aGVyLCBhbmQgdG8gYXNzdW1lIGFtb25nIHRoZSBwb3dlcnMgb2YgdGhlIGVhcnRoLCB0aGUgc2VwYXJhdGUgYW5kIGVxdWFsIHN0YXRpb24gdG8gd2hpY2ggdGhlIExhd3Mgb2YgTmF0dXJlIGFuZCBvZiBOYXR1cmUgR29kIGVudGl0bGUgdGhlbSwgYSBkZWNlbnQgcmVzcGVjdCB0byB0aGUgb3BpbmlvbnMgb2YgbWFua2luZCByZXF1aXJlcyB0aGF0IHRoZXkgc2hvdWxkIGRlY2xhcmUgdGhlIGNhdXNlcyB3aGljaCBpbXBlbCB0aGVtIHRvIHRoZSBzZXBhcmF0aW9uLgpFdmVuIGFzIHBoeXNpY2FsIGJvb2tzIGhhdmUgcHVsbGVkIGEgdmlueWwgYW5kIG1hZGUgYSBjb21lYmFjaywgQiBzYWxlcyBjb250aW51ZSB0byBzdHJ1Z2dsZS4gCllvdSBkb24gbmVlZCBzaGVldHMgb2Ygb2xkIGRyeXdhbGwsIGJyb2tlbiB3aW5kb3dzIG9yIHBhbGxldHMgb2YgdGlsZXM7IEJvcmF4IHJlY29tbWVuZHMgc2F2aW5nIGEgZmV3IHRpbGVzLCBzb21lIHBpZWNlcyBvZiBmbG9vcmluZywgYSBzbWFsbCBwaWVjZSBvZiBjYXJwZXRpbmcgYW5kIGEgYml0IG9mIHBhaW50LiAKRmlyc3QgeW91IHNob3VsZCBkZWNpZGUgd2hhdCBzb3J0IG9mIHBva2VyIGFyZSB5b3UgZ29pbmcgdG8gdGFja2xlIGZpcnN0LiB0d28gcGxheWVyIGhvbGQnZW0gaXMgcHJldHR5IG11Y2ggc29sdmVkLCB0aG91Z2ggdGhlIGJlc3QgaHVtYW5zIHN0aWxsIHB1dCB1cCBhIHJlYWwgZmlnaHQgd2l0aCB0aGUgYmVzdCBBSSdzIGF2YWlsYWJsZS4gVGhlIEFJIGhhcyB0aGUgbWFpbiBhZHZhbnRhZ2VzIG92ZXIgaHVtYW5zIGJ5IGhhdmluZyBhbiB1bmxpbWl0ZWQgZmxhd2xlc3MgbWVtb3J5IG9mIHBhc3QgaGFuZHMsIGZsYXdsZXNzIGFuYWx5c2lzIG9mIHRoZSBwYXR0ZXJucyBiYXNlZCBvbiB0aGF0IGFuZCBhcyB0aGV5IGFyZSBtYWNoaW5lcywgdGhleSBkb24ndCB0aWx0IGxpa2UgYWxtb3N0IGFsbCBodW1hbnMgb2NjYXNpb25hbGx5IGRvLgpTbyB3ZSBqdXN0IGZpbmlzaGVkIG91ciBsZWFzZSBhbmQgbGVmdC4uIApGb3IgYSBqb2tlIEkgc3VnZ2VzdGVkIGl0IGJlY2F1c2UgSSB3YXMgZmVkIHVwLiAKVGFrZSBub3RlIHRoYXQgeW91IG5lZWQgdG8gdXNlIHRoZSBwYXN0ZSBmb3JtIHRvb3RocGFzdGUgYW5kIG5vdCB0aGUgZ2VsIHRvb3RocGFzdGUuIFBsYWNlIGEgZG9sbG9wIG9mIHRvb3RocGFzdGUgb24gdGhlIHNjcmF0Y2hlZCBhcmVhLiBVc2UgeW91ciBmaW5nZXIgdG8gbWFzc2FnZSB0aGUgdG9vdGhwYXN0ZSBvbiB0aGUgc2NyYXRjaGVkIGFyZWEgd2l0aCBhIGNpcmN1bGFyIG1vdGlvbi4gCkZvciB0aGlzIGhlIG5lZWRlZCB0byBlbGltaW5hdGUgdGhlIENhcGl0YWxpc3QgY2xhc3MgYmVjYXVzZSB0aGV5IHdlcmUgYSB0aHJlYXQuIEhlIGFsc28gYmVsaWV2ZWQgaW4gRGVtb2NyYXRpYyBDZW50cmFsaXNtLCB3aGVyZSB3b3JrZXJzIG9ubHkgZWxlY3QgbWVtYmVycyBvZiB0aGUgdmFuZ3VhcmQgcGFydHkuIApUaGUgZGVjaXNpb24gdG8gaW52YWRlIHdhcyBLaW0gZW50aXJlbHksIGFuZCBTdGFsaW4gZXZlbiB0b2xkIGhpbSBub3QgdG8gZXhwZWN0IG9wZW4gaGVscCBpZiB0aGUgVVMgZ290IGludm9sdmVkLi4gClRoZXkgYXJlIHJlcXVlc3RpbmcgJDIoWCksKFhYKSBpbiBHcmVhdCBQbGFjZXMgZnVuZGluZywgd2l0aCAkOChYKSwoWFgpIGZ1bmRlZCB0aHJvdWdoIGxvY2FsIG9wdGlvbiBzYWxlcyB0YXggcmV2ZW51ZXMsSHVtYm9sZHQgQ291bnR5IE1lbW9yaWFsIEhvc3BpdGFsIHBsYW5zIGEgJDEgbWlsbGlvbiBhZGRpdGlvbiBhbmQgcmVtb2RlbGluZyBwcm9qZWN0IG9mIHRoZSBob3NwaXRhbCdzIHN1cmdpY2FsIHN1aXRlLiBUaGUgaG9zcGl0YWwgd2lsbCBmdW5kICQ2MDAsKFhYKSBhbmQgaXMgYXBwbHlpbmcgZm9yICQyMDAsMDAwIGluIEdyZWF0IFBsYWNlcyBmdW5kaW5nIGFuZCAkMjAwLDAwMCBmcm9tIHRoZSBIb3NwaXRhbCBGb3VuZGF0aW9uLi4gCktlZXBpbmcgdGhlbSBqdXN0IG1vaXN0LCBpbiBnb29kIGxpZ2h0IGFuZCBhcyBjb29sIGFzIHBvc3NpYmxlICgxMCB0byAxMiBDKSB3aWxsIHRvdWdoZW4gdGhlbSB1cCBhcyB0aGV5IGNvbnRpbnVlIHRvIHNlbmQgb3V0IG1vcmUgbGVhdmVzLi4gCjUuIFlvdSBoZXJlYnkgaW5kZW1uaWZ5LCBkZWZlbmQgYW5kIGhvbGQgaGFybWxlc3MgQkcgYW5kIGFsbCBvZmZpY2VycywgZGlyZWN0b3JzLCBvd25lcnMsIGFnZW50cywgaW5mb3JtYXRpb24gcHJvdmlkZXJzLCBhZmZpbGlhdGVzLCBsaWNlbnNvcnMgYW5kIGxpY2Vuc2VlcyAoY29sbGVjdGl2ZWx5LCB0aGUgIkluZGVtbmlmaWVkIFBhcnRpZXMiKSBmcm9tIGFuZCBhZ2FpbnN0IGFueSBhbmQgYWxsIGxpYWJpbGl0eSBhbmQgY29zdHMsIGluY2x1ZGluZywgd2l0aG91dCBsaW1pdGF0aW9uLCByZWFzb25hYmxlIGF0dG9ybmV5cycgZmVlcywgaW5jdXJyZWQgYnkgdGhlIEluZGVtbmlmaWVkIFBhcnRpZXMgaW4gY29ubmVjdGlvbiB3aXRoIGFueSBjbGFpbSBhcmlzaW5nIG91dCBvZiBhbnkgYnJlYWNoIGJ5IHlvdSBvciBhbnkgdXNlciBvZiB5b3VyIGFjY291bnQgb2YgdGhlc2UgVGVybXMgb2YgU2VydmljZSBvciB0aGUgZm9yZWdvaW5nIHJlcHJlc2VudGF0aW9ucywgd2FycmFudGllcyBhbmQgY292ZW5hbnRzLiBZb3Ugc2hhbGwgY29vcGVyYXRlIGFzIGZ1bGx5IGFzIHJlYXNvbmFibHkgcmVxdWlyZWQgaW4gdGhlIGRlZmVuc2Ugb2YgYW55IHN1Y2ggY2xhaW0uIApCdXQgdGhlIGtpdGNoZW4gc2VlbiBpbiBhIGNvb2tpbmcgdmlkZW8gT2Nhc2lvIENvcnRleiBwb3N0ZWQgdG8gSW5zdGFncmFtIFN1bmRheSBuaWdodCBtYXRjaGVzIHRoZSBvbmUgaW4gb3RoZXIgY29va2luZyB2aWRlb3Mgc2hlIHBvc3RlZCBvbiBOb3YuIDkgYW5kIERlYy4gMjcuCldlbm4gYWxsZVBva2Vyc3BpZWxlciBlbnR3ZWRlciBkaWUgbGV0enRlIFdldHRlIGdlaGFsdGVuIG9kZXIgYWJnZWxlZ3QgaGFiZW4sIGlzdCBkaWUgUG9rZXJydW5kZSBiZWVuZGV0Li4gCkhpcyBmYXRoZXIgbG9hbmVkIGhpbSBvdmVyICQ2MDAsMDAwIGZvciB0aGUgcHVyY2hhc2Ugb2YgdGhlIGhvdXNlIGhlIHdhbnRlZC4gClRoaXMgaXMgc29tZXRoaW5nIEkgaGVhciBhIGxvdCBhbmQgSSBmZWVsIGl0IG9ubHkgaGFsZiB0cnVlLiAKQWx0aG91Z2ggaXQgaXMgcG9zc2libGUgeW91ciBmaW5nZXJib2FyZCBpcyB3YXJwaW5nLCB0aGVyZSBzaG91bGQgYmUgYSBjdXJ2ZSB0byB5b3VyIGJvYXJkLCBqdXN0IGFib3V0IGhvdyB5b3UgZGVzY3JpYmVkIGl0LiBBIGJvYXJkIHdpdGggbm8gY3VydmUgdG8gaXQgaXMgbW9yZSBsaWtlbHkgdG8gYnV6ei4gCllvdSBiZSB3YWl0aW5nIG1pbmltdW0gMSB5ZWFyIGZvciBLaXdhbWkgMiBsb2NhbGlzYXRpb24uIApUaGUgaW1wbGljYXRpb24gd2FzIHRoYXQgaGUgd291bGQgaW5pdGlhdGUgdGhlIGNvbnRyYWN0IGJyZWFrLCBudWxsaWZ5aW5nIHRoZSBjdXJyZW50IGFncmVlbWVudC4gCkkgY2FsbGVkLiAKU0VSVklDRUQgMiBCRUQgU0tZIFZJTExBUyBXSVRIIFZJRVcKQW5kIHRoZSBvbmx5IHdheSByZXRhaWxlcnMgd2lsbCBjaGFuZ2Ugd2hhdCB0aGV5IHNlbGxpbmcgaXMgaWYgd2UgY2hhbmdlIHdoYXQgd2UgYnV5aW5nLiB0aGUgb25seSB3YXkgd2UgYXMgYSBjdWx0dXJlIHdpbGwgY2hhbmdlIHdoYXQgd2UgYnV5aW5nIGlzIGlmIHdlIHRha2Ugc2FydG9yaWFsIHNpZ25pZmllcnMgc2VyaW91c2x5LgpObyBtYW5hZ2VyIGluIHRoZSBjbHViIGhpc3RvcnkgaGFzIGhhZCB0byBkZWFsIHdpdGggc3VjaCBhIHNlcmllcyBvZiBtaXNmb3J0dW5lIGFuZCBzdGlsbCByZXR1cm4gdG8gd29yayBjaGFyZ2VkIHdpdGggdGhlIHRhc2sgb2YgbGlmdGluZyBtb3JhbGUgYW5kIGNvbnZpbmNpbmcgaGlzIHRyb29wcyB0aGV5IGNhbiBlZmZlY3QgYSBwb3NpdGl2ZSBjaGFuZ2UgaW4gdGhlIGNsdWIgZm9ydHVuZXMuLiAKTm8sIHdlIGluc3RlYWQgb3B0IG91dC4gSXQgZWFzaWVyIGFuZCB0aGUgY2hpcHMgYXJlIHN0YWNrZWQgYWdhaW5zdCB1cy4gIlRoaW5rIGFzIHlvdSB3YW50LCBidXQgYWN0IGxpa2Ugb3RoZXJzLiIgVGhhdCBnZXRzIHNwZXdlZCBoZXJlIHRpbWUgYW5kIHRpbWUgYWdhaW4uIFdvcmsgd2l0aGluIHRoZSBzeXN0ZW0sIGNhcnZlIG91dCBzb21ldGhpbmcgZm9yIHlvdXJzZWxmIGluIHRoaXMgbGlmZS4gVGhhdCB3b3VsZCBiZSBteSBvbmx5IGNyaXRpY2lzbSBvZiB3aGF0IHlvdSB3cm90ZSBhYm92ZTsgWW91IGNvbmRlbW5pbmcgdGhlIGd1eXMgd2hvIGhhdmVuIHRoZSBwYXRpZW5jZSBvciB0aGUgdGltZSB0byB0YWtlIHVwIGEgZ3JlYXQgY3J1c2FkZSB0byBhZGRyZXNzIHRoZSBwcm9ibGVtcyB0aGF0IGFyZSBiZWluZyBwZXJwZXR1YXRlZCBieSBmZW1pbmF6aSB0b3dhcmRzIG1lbi4gQWxzbywgaXQgZGFuZ2Vyb3VzIHRvIHNwZWFrIG91dCBhZ2FpbnN0IHRoZSBzdGF0dXMgcXVvLCBhbmQgaW4gdGhpcyBnYW1lIG9mIHBvd2VyLCAod2hpY2ggaXMgYWxsIGxpZmUgaXMpIHdlIGJlIHJlbWlzcyBpZiB3ZSBkaWRuIGlkZW50aWZ5IHRoZSBpbmhlcmVudCBkYW5nZXJzIG9mIHNwZWFraW5nIG91dCBhZ2FpbnN0IGZlbWluaXNtLgpJdCBoYXNuJ3QgcmVhbGx5IHdvcmtlZCB0aG91Z2guIFRob3NlIHdpbiBub3cgbW92ZXMgb25seSB3b3JrLCBpZiB5b3Ugd2luIGNoYW1waW9uc2hpcHMuIApTQzIgaXMgYW4gYXN5bWV0cmljYWxseSBiYWxhbmNlZCBnYW1lIHNvIGl0IHdpbGwgbmV2ZXIgdHJ1bHkgYmUgYmFsYW5jZWQgYnV0IGNhbiB5b3UgYXQgbGVhc3Qgd2FpdCBhIGZ1Y2tpbmcgbW9udGggYmVmb3JlIGJpdGNoaW5nIGFuZCBjcnlpbmcgZXZlcnl3aGVyZT8gVGhlcmUgaGF2ZSBiZWVuIGluc3RhbmNlcyB3aGVuIHRoZSBnYW1lIHdhcyBzdGFsZSB3aXRob3V0IGEgYmFsYW5jZSBwYXRjaCBmb3IgbW9udGhzICh5ZWFycz8pIGFuZCBwZW9wbGUgc3RpbGwgbWFuYWdlZCB0byBjb21lIHVwIHdpdGggbmV3IHN0cmF0cyBhbmQgZXZlbiBjb21wbGV0ZWx5IHR1cm4gbG9zaW5nIG1hdGNodXBzIGFyb3VuZC4uIApQb3N0bWVkaWEgd2FudHMgdG8gaW1wcm92ZSB5b3VyIHJlYWRpbmcgZXhwZXJpZW5jZSBhcyB3ZWxsIGFzIHNoYXJlIHRoZSBiZXN0IGRlYWxzIGFuZCBwcm9tb3Rpb25zIGZyb20gb3VyIGFkdmVydGlzZXJzIHdpdGggeW91LiBUaGUgaW5mb3JtYXRpb24gYmVsb3cgd2lsbCBiZSB1c2VkIHRvIG9wdGltaXplIHRoZSBjb250ZW50IGFuZCBtYWtlIGFkcyBhY3Jvc3MgdGhlIG5ldHdvcmsgbW9yZSByZWxldmFudCB0byB5b3UuIFlvdSBjYW4gYWx3YXlzIGNoYW5nZSB0aGUgaW5mb3JtYXRpb24geW91IHNoYXJlIHdpdGggdXMgYnkgZWRpdGluZyB5b3VyIHByb2ZpbGUuIGVwYXBlciwgRGlnaXRhbCBBY2Nlc3MsIFN1YnNjcmliZXIgUmV3YXJkcyksIHBsZWFzZSBpbnB1dCB5b3VyIFByaW50IE5ld3NwYXBlciBzdWJzY3JpcHRpb24gcGhvbmUgbnVtYmVyIGFuZCBwb3N0YWwgY29kZS4KIkhpcyBwcm9ibGVtIHJlYWxseSB3YXMgdGhhdCBkYW1uZWQgcG9rZXIgZ2FtYmxpbmcuIFRoYXQgd2FzIGl0LiBUaGF0IHdhcyBhbGwgaGUgY29tcGxhaW5lZCBhYm91dCwiIEVhc3RtYW4gc2FpZCBvZiB3aGF0IFJvc2VuYmVyZyB3cm90ZS4KVGhlIGFnZW5jeSwgd2hpY2ggYWxzbyBob3N0cyBhbiBhbm51YWwgSG9LJ3MgR290IFRhbGVudCBldmVudCwgZ2l2ZXMgc3RhZmZlcnMgdGhlIG9wdGlvbiB0byB3b3JrIGZvdXIgZGF5cyBhIHdlZWsgZm9yIDg1IHBlcmNlbnQgcGF5IGFuZCBmdWxsIGJlbmVmaXRzLiAKV2hlcmUgSSBsaXZlIG5vdywgd2hhdCBkaWZmZXJlbnRhdGVzIG1lIGZyb20gb3RoZXJzIGlzIHVzdWFsbHkgbXkgcGVyc29uYWxpdHkgYW5kIG90aGVyIGZhY3RvcnMgbm90IG5lY2Vzc2FyaWx5IHJlbGF0ZWQgdG8gbXkgZXRobmljaXR5IGFuZCBJIGVuam95IHRoYXQuIApNeSBNSUwgY2FuIGJlIGEgYml0IGRpdHp5IGFuZCBzZWxmIGNlbnRlcmVkLCBidXQgaXMgYWxzbyB0aGUgc3dlZXRlc3Qgd29tYW4uIE15IGh1c2JhbmQgc2F5cyBzaGUgdGhlICJuaWNlc3QsIG1vc3QgaW5jb25zaWRlcmF0ZSBwZXJzb24geW91IGV2ZXIgbWVldC4iIEhvd2V2ZXIsIHNoZSBhbHdheXMgZ3JlYXQgdG8gbWUgYW5kIGFsbCB0aGUgZ3JhbmRraWRzLiAKSXMgVGhhdCBDcmF6eSBFbWFpbCBBYm91dCBUaWdlciBXb29kcyBUcnVlClRoYXQgd2F5LCB0aGV5J3JlIG1vcmUgbGlrZWx5IHRvIHN0aWNrIGFyb3VuZCBhbmQgcmVhZCBtb3JlLi4gClNvIGxldCBtZSBrbm93IHdoZW4gdGhleSBiYWNrIG9uIGEgc29saWQgcnVuIG9mIGhpZ2hseSBhcnRpc3RpYywgdGhvdWdodCBwcm92b2tpbmcsIGNvbXBsZXggYW5kIGxheWVyZWQgY29taWMgYm9vayBtb3ZpZXMuIFRoYXQgd2lsbCBiZSBzb21ldGhpbmcgdG8gYmUgdHJ1bHkgZXhjaXRlZCBhYm91dCBhZ2Fpbi4gClRydW1wIHRlbXBlcnMgZXhwZWN0YXRpb25zIGZvciBwb3NzaWJsZSBVUwpXZSBoYXZlIGRpc3NpbWlsYXIgbGlmZXN0eWxlcywgYnV0IGhleSwgaWYgdGhhdCB5b3UsIGl0IGZpbmUuIEFzIGxvbmcgYXMgeW91IG5vdCBodXJ0aW5nIGFueW9uZSB3aXRoIGl0LiAKQWxvbmcgd2l0aCBmYWNpbGl0eSBwb29scywgcGVkaWN1cmVzIGNhbiBhbHNvIGJlIHRyb3VibGVzb21lLiBFdmVuIHRoZSBiZXN0IHNwYXMgZXhwZXJpZW5jZSBjaGFsbGVuZ2VzIGtlZXBpbmcgdGhlaXIgcG9vbHMgYW5kIHBlZGljdXJlIGVxdWlwbWVudCBmcmVlIG9mIGJhY3RlcmlhLCBzbyBwcmVnbmFudCB3b21lbiBhcmUgcHJvYmFibHkgYmV0dGVyIG9mZiBqdXN0IHNraXBwaW5nIHRoZXNlIHBhcnRpY3VsYXIgc3BhIHNlcnZpY2VzIGZvciBhIGZldyBtb250aHMsIG9yIGF0IHRoZSB2ZXJ5IGxlYXN0IGRvaW5nIGEgdGhvcm91Z2ggUSB3aXRoIHRoZSBzcGEgcHJvZmVzc2lvbmFscyB0byBmaW5kIG91dCB3aGF0IHByZWNhdXRpb25zIHRoZXkgdGFrZSB0byBrZWVwIHRoaW5ncyBjbGVhbi4gCkl0IG9mZiB0aGUgbWFpbiByb2FkLCBpbiBhIGxpdHRsZSBlbmNsYXZlLCBidXQga2VlcCBhbiBleWUgb3V0IGZvciB0aGUgYmlnIGJpbGxib2FyZCBzaWduIChyaWdodCkuIFdoZW4geW91IHNlZSB0aGF0LCBoZWFkIGludG8gdGhlIHN1YiBzb2kgYXQgdGhhdCBwb2ludCBhbmQgeW91IHdpbGwgc2VlIHRoZSBwYXJsb3VyLjYvMTAuIApCdXQgaGFsZiB0aGUgZnVuIG9mIHRoZSBGcm9udCBSYW5nZSBpcyB0aGUgbmV2ZXIgZW5kaW5nIHN0cmVhbSBvZiBncmVhdCBtdXNpYyBwb3BwaW5nIHVwIGF0IHZlbnVlcyBhY3Jvc3MgdG93bi4gCkkgZ3Vlc3MgeW91IGNvdWxkIHNheSBpdCBhbGwgYmVnYW4gaW4gdGhlIGVhcmx5IDE1MDBzIHdoZW4gU3BhaW4gc3dlcHQgaW4gYW5kIGNvbnF1ZXJlZCB0aGUgY291bnRyeS4gCkV2ZXJ5dGltZSB0aGVyZSBhbiBpbmNpZGVudCBldmVuIHNtYWxsLCBJIGNhbGwgdGhlIFNXLiAKRmVsbCBhc2xlZXAgYWZ0ZXIgZ2V0dGluZyBob21lIG15c2VsZiwgYnV0IEkgcmVhZCB0aHJvdWdoIHRoZSBjb3ZlciBzdG9yZSBhbmQgZmVhdHVyZSBpbiBteSBwaHlzaWNhbCBtYWcsIGFuZCBjb3VsZG4gZmluZCBhbnl0aGluZyB0byB0aGUgZWZmZWN0IHRvIHRoYXQgcXVvdGUuIEkgY2hlY2tlZCB0aGUgcG9ydGFsIGxpbmsgdGhvdWdoIGFuZCB0aGlzIHdhcyB0aGUgY2xvc2VzdCBJIGZvdW5kCk1haWwgb25lIGFoZWFkIHRvIHlvdXJzZWxmIGV2ZXJ5IDIwMCA0MDAgbWlsZXMuLiAKUHVyc2Ugd2FzIHN0b2xlbiBmcm9tIGNsdWIKTXIgSXZleSBhcmd1ZWQgdGhhdCBoZSBkaWQgbm90aGluZyBtb3JlIHRoYW4gZXhwbG9pdCBDcm9ja2ZvcmRzJyBmYWlsdXJlcyB0byB0YWtlIHByb3BlciBzdGVwcyB0byBwcm90ZWN0IGl0c2VsZiBhZ2FpbnN0IGEgcGxheWVyIG9mIGhpcyBhYmlsaXR5LgpJZiB5b3UgaGFkIGFueSByZWFkaW5nIGNvbXByZWhlbnNpb24sIHlvdSB3b3VsZCB1bmRlcnN0YW5kIHRoYXQgSSBhbSBzYXlpbmcgdGhhdCBUU00gY2FuIHdpbiBhZ2FpbnN0IFNLVCB3aXRoIHRoZWlyIGJlc3Qgc3RyYXRlZ3kgICBvdXRsYW5pbmcgdGhlIG9wcG9uZW50cyBpbnRvIGxhdGUgZ2FtZS5Cb3QgTGFuZSAgIHRoZSB3b3JzdCBib3QgbGFuZSBpbiB0aGUgdG91cm5hbWVudCBhZ2FpbnN0IHRoZSBiZXN0IGJvdCBkdW8gaW4gdGhlIHdvcmxkP1lvdSBkaWRuIGFkZHJlc3MgaG93IFRTTSBjb21wb3NpdGlvbiB3YXMgb2JqZWN0aXZlbHkgaW5mZXJpb3IgdG8gU0tUIGFuZCBhIGNvbXBsZXRlICJkdW1wc3Rlci4iIEFyZ3VpbmcgdGhhdCBhIHBpY2sgY29tcG9zaXRpb24gaXMgbm90IHN1aXRhYmxlIGZvciBUU00gIT0gVFNNIGNvbXBvc3Rpb24gd2FzIGJhZC5BbmQgeW91ciBwb2ludCBpcyBjb21wbGV0ZWx5IGR1bWIuIApUaGV5IHdpbGwgYmUgMTggd2hlbiB5b3UgNTUuIFRoZW4geW91IGhhdmUgMTAgeWVhcnMgdG8gc2F2ZSBmb3IgcmV0aXJlbWVudC5PYnZpb3VzbHksIHRoZXJlIGV4Y2VwdGlvbnMgYW5kIGJ1bXBzIGluIHRoZSByb2FkIGlmIHlvdSBjYW4gZmluZCB0aGUgb25lLCBidXQgSSBmZWVsIHRoaXMgcm9hZG1hcCB3b3VsZCBmaXQgYSBsYXJnZSBwb3J0aW9uIG9mIHBlb3BsZSB3aG8gZ2V0IG1hcnJpZWQgcmlnaHQgb3V0IG9mIHNjaG9vbC4gMiBwb2ludHMgIHN1Ym1pdHRlZCAxMyBkYXlzIGFnb1lvdSBzb3VuZCBsaWtlIG1lLiAKTXkgZmlyc3QgYm9vaywgIkRlbGl2ZXJpbmcgSGFwcGluZXNzOiBBIFBhdGggdG8gUHJvZml0cywgUGFzc2lvbiwgYW5kIFB1cnBvc2UiLCB3aWxsIGJlIHJlbGVhc2VkIG9uIEp1bmUgNywgMjAxMC4gQmVsb3cgaXMgYW4gZXhjZXJwdCB0aGF0IGRlc2NyaWJlcyB0aGUgbGVzc29ucyB0aGF0IEkgbGVhcm5lZCBmcm9tIHBsYXlpbmcgcG9rZXIgYW5kIGhvdyBJIGFwcGx5IHRoZW0gdG8gdGhlIGJ1c2luZXNzIHdvcmxkLgpXYXMgaGUgYSBkaWN0YXRvcj8gWWVzLCBidXQgaG9uZXN0bHkgSSBkb24gY2FyZS4gCkkgcmVtZW1iZXIgb25lIHRpbWUgYW4gb2xkIEluZGlhbiBtYW4gYWNjdXNlZCBtZSBvZiBiZWluZyByYWNpc3QgZm9yIHRoaXMgZXZlbiB3aGVuIGxpdGVyYWxseSBldmVyeSB0YWJsZSBhcm91bmQgd2FzIGZ1bGwgb2Ygd2hpdGUgcGVvcGxlLi4gCk1heWJlIGdpdmUgaGVyIHBlcm1pc3Npb24gdG8gY2FsbCB5b3Ugb3V0IGlmIHNoZSBzdGFydHMgdG8gc2VlIHRoaW5ncyBzdGFydCBzcGlyYWxpbmcgdG93YXJkcyBvdXQgb2YgY29udHJvbCwgYW5kIGxldCBoZSBrbm93IHRoYXQgeW91IHdpbGwgYmUgb3BlbiB0byB0aGF0IGNvbnZlcnNhdGlvbiBpZiB0aGUgdGltZSBldmVyIGNvbWVzLCBidXQgZm9yIG5vdywgeW91IG5lZWQgdG8gbWFrZSB0aGF0IGNhc2ggYW5kIGl0IHdpbGwgb25seSBiZW5lZml0IGJvdGggb2YgeW91Li4gCkl0IHdhcyBhbGwgZ2FyYmFnZSBnb2FscyBhbmQgd2UganVzdCBkaWRuIGdldCB0byB0aGUgbmV0IGVub3VnaC4uIApJdHMgdHJ1ZSwgd291bGQgWU9VIHdhbnQgdG8gZ2l2ZSBpdCBvdXQgdG8gYW55Ym9keSBlbHNlIGlmIHlvdSBnb3Qgc3VjaCBhIGNvZGU/IChGdWxsIEFuc3dlcikuIApDZSBqZXUgc291cyBmb3JtZSBkJ2FwcGxpY2F0aW9uIG1vYmlsZSBlc3QgbCdpbml0aWF0aXZlIGQndHVkaWFudHMgZGUgbCdVbml2ZXJzaXQgZHUgUXViZWMgIE1vbnRyYWwgcXVpIHByb3ZpZW5uZW50IGRlIGRpZmZyZW50cyBjaGFtcHMgZCd0dWRlcyAgIGRvbnQgQ2F0aGVyaW5lIFNhYm91cmluLCBkdSBEcGFydGVtZW50IGRlIGRlc2lnbiBncmFwaGlxdWUgICBldCBkZSBsJ09mZmljZSBuYXRpb25hbCBkdSBmaWxtLgpXZSBhcmUgY2FycnlpbmcgYWxsIG9mIG91ciBzdHJlc3MgYmV0d2VlbiBvciBhcm91bmQgb3VyIGV5ZXMuIE9ic2VydmUgeW91cnNlbGYgaW4gdGhlIG1pcnJvci4gVHJ5IGxpZnRpbmcgeW91ciBleWVicm93cyBldmVyIHNvIHNsaWdodGx5IGFuZCByZWxheGluZyB5b3VyIGV5ZWxpZHMgc2xpZ2h0bHkuIApNYXliZSB0aGlzIGlzIHdoeSBwZW9wbGUgYXJlIGFsd2F5cyBidXlpbmcgbW9yZSBmb29kIHRoYW4gdGhleSBjYW4gZWF0IGFuZCB0aHJvd2luZyBpdCBvdXQuIApGaXJzdCwgaGUgZ3VpZGVkIHVzIHRvd2FyZCB0aGUgY2xhc3NpYyBDcmVwZSBNb25zaWV1ciwgdGVsbGluZyB1cyB3ZSBjb3VsZG4ndCBwb3NzaWJseSBnbyB3cm9uZyB3aXRoIHRoZSBGcmVuY2ggaGFtIGFuZCBncnV5ZXJlIGNoZWVzZSBmYXZvcml0ZS4gVGhlbiwgd2l0aCBhIGRyYW1hdGljIHBhdXNlIGFjY29tcGFuaWVkIGJ5IGEgbG9vayBvZiBhcHByZWhlbnNpb24gYW5kIGEgY2FyZXNzIG9mIGhpcyBpbWFnaW5hcnkgY2hpbiBiZWFyZCwgaGUgcG9pbnRlZCBpbnN0ZWFkIHRvIHRoZSBGbG9yZW50aW5lIENoaWNrZW4gQ3JlcGUsIHN1Z2dlc3RpbmcgaXQgd291bGQgYmUgYW4gYWJzb2x1dGUgc2hhbWUgdG8gbWlzcyB0aGUgY2hlZidzIGRlbGVjdGFibGUgY3JlYW0gc2F1Y2UuVGhvdWdoIGhlIGhhZCBvdXIgbW91dGhzIHdhdGVyaW5nIGluIGFudGljaXBhdGlvbiwgaGUgc3dpdGNoZWQgZ2VhcnMgYWdhaW4gYW5kIHNwZW50IHRoZSBuZXh0IG1pbnV0ZSB3YWZmbGluZyBiZXR3ZWVuIHRoZSBGbG9yZW50aW5lIGFuZCB0aGUgTmVvIFNlb3VsLCBhbiBlY2xlY3RpYyBjcmVwZSBwYWNrYWdlIGZpbGxlZCB3aXRoIHNocmVkZGVkIGJhcmJlcXVlIHBvcmsgYW5kIGtpbWNoaS5JdCdzIGNsZWFyIHRoYXQgQSBDYWZlIGlzIHRyeWluZyB0byBwdXQgYSBmcmVzaCBzcGluIG9uIGFuIG9sZCBtZW51IGZhdm9yaXRlLiBJbnZlbnRpdmUgYW5kIHVuaXF1ZSBjcmVwZSBmaWxsaW5ncywgYWxvbmcgd2l0aCBlbnRpY2luZyBiYWd1ZXR0ZSBzYW5kd2ljaGVzIGFuZCBQYXJpc2lhbiBpbnNwaXJlZCBzdGFydGVycywgcGVwcGVyIHRoZSBuZXcgYW5kIGltcHJvdmVkIG1lbnUgYXQgQSBDYWZlLCBmb3JtZXJseSBBcmxlbmUncyBDcmVwZXJpZSBCaXN0cm8gYW5kLCBiZWZvcmUgdGhhdCwgQ3JlcGVzIGEgbGEgQ2FydGUgb24gQnJvYWR3YXkgaW4gQm91bGRlci5BbG9uZyB3aXRoIHRoZSBtZW51IHJldmFtcCwgeW91J2xsIGZpbmQgc3dlZXBpbmcgY2hhbmdlcyBpbnNpZGUgQSBDYWZlLkFuIGFtYml0aW91cyBtYWtlb3ZlciBoYXMgdHJhbnNmb3JtZWQgdGhlIG9uY2Ugbm9uZGVzY3JpcHQgY3JlcGUgam9pbnQgaW50byBhIHF1YWludCwgY296eSwgUGFyaXNpYW4gc3R5bGUgY2FmZSBjb21wbGV0ZSB3aXRoIGNoYW5kZWxpZXJzLCBleHBvc2VkIGJyaWNrLCBob2JuYWlsIGZyYW1lZCBtaXJyb3JzIGFuZCB3b3ZlbiByYXR0YW4gYmlzdHJvIGFybWNoYWlycy4gCk5leHQgZGF5IHdlIGxvb2tlZCBudG8gcmVudG5nIGEgY2FyLCB3aGNoIHMgd2hhdCBJIGRkIHN4IHllYXJzIGFnby4gQnV0IGdhcyBwcmNlcyBoYXZlIG5jcmVhc2VkIGV4cG9uZW50YWxseSBoZXJlIHRvbywgYW5kIHQgbG9va2VkIGxrZSB0IHdvdWxkIGJlIHByZXR0eSBleHBlbnN2ZS4gR2FzIHMgYWJvdXQgMi44MCBscmEgcGVyIGx0ZXIgb3IgVVNEIDIuMzAgcGVyIGx0ZXIuIApUaGUgUGhpbGlwcGluZXMgaGFzIGZhY2VkIE11c2xpbSBpbnN1cmdlbmNpZXMgZm9yIGRlY2FkZXMsIHRob3VnaCBtdWNoIG9mIHRoZSB2aW9sZW5jZSBoYXMgb2NjdXJyZWQgaW4gdGhlIHRyb3VibGVkIHNvdXRoLiBNYW55IGluIE1hbmlsYSBmZWFyZWQgRnJpZGF5J3MgYXR0YWNrIHdhcyBsaW5rZWQgdG8gb25nb2luZyBiYXR0bGVzIHdpdGggbWlsaXRhbnRzIGFsaWduZWQgd2l0aCB0aGUgSXNsYW1pYyBTdGF0ZSBncm91cCBpbiB0aGUgc291dGhlcm4gUGhpbGlwcGluZSBjaXR5IG9mIE1hcmF3aS4gVGhlIGZpZ2h0aW5nIGhhcyBwbGFjZWQgdGhlIGNvdW50cnkgb24gZWRnZSBhbmQgcHJvbXB0ZWQgRHV0ZXJ0ZSB0byBkZWNsYXJlIG1hcnRpYWwgbGF3IGFjcm9zcyB0aGUgc291dGguLiAKTmljZWx5IHRha2VuIG91dCBvZiBjb250ZXh0LiBObywgSSBkbyBub3QgdGhpbmsgdGhleSBhcmUgaWxsZWdhbCBpbW1pZ3JhbnRzLCBJIHRoaW5rIHRoZXkgYXJlIHR3byB1bmZvcnR1bmF0ZSBpbmRpdmlkdWFscyB3aG8gd2VyZSBoYW5kcGlja2VkIHdpdGggdGhlIGludGVudGlvbiBvZiBpbXBseWluZyB0aGF0IHRoZXkgd2VyZSBhIHJlcHJlc2VudGF0aXZlIHNhbXBsZSBvZiBhIHBvcHVsYXRpb24gb2Ygb3BwcmVzc2VkIGluZGl2aWR1YWxzLiBJZiwgaW4gZmFjdCwgdGhlIHBlb3BsZSBhZmZlY3RlZCBieSB0aGUgdm90ZXIgSUQgbGF3cyBjb3ZlciBtb3JlIHRoYW4gQWZyaWNhbiBBbWVyaWNhbiBEZW1vY3JhdHMsIHNheSwgZm9yIGluc3RhbmNlIENhdWNhc2lhbiBBbWVyaWNhbiBSZXB1YmxpY2Fucywgb3IgbWF5YmUgZXZlbiBhbiBDaGluZXNlIEFtZXJpY2FuIExpYmVydGFyaWFuLCB0aGVuIHRoZSBjb250ZW50aW9uIHRoYXQgdGhlIGxhd3MgYXJlIG1lYW50IHRvIGluZmx1ZW5jZSBlbGVjdGlvbnMgZ29lcyBvdXQgdGhlIHdpbmRvdy4KSW5kcmEgd2FzIGNsbWJuZyB1cCBvbnRvIHRoZSBsdWdnYWdlIHNoZWxmIGJ1dCB0aGVuIHRoZSBkcnZlciBkZWNkZWQgdG8gbm90IGxldCBoZXIgYnV0IGhlIGRkIGxldCBoZXIgZ2V0IG50byB0aGUgZnJvbnQgc2VhdC4gU28gd2Ugd2VyZSBsZXNzIHNxdXNoZWQgc3RsbCBzdHRuZyB1cHJnaHQgZm9yIHRoZSByZXN0IG9mIHRoZSBuZ2h0LiBUaGUgYnVzIHdhcyBjYXJlZW5uZyBhcm91bmQgdHVybnMgYW5kIHJvY2tuZyBiYWNrIGFuZCBmb3J0aCBhbmQgdCB3YXMgZXRoZXIgZnJlZXpuZyBjb2xkIG9yIGJ1cm5uZyBob3QuIApUaGVzZSBpbmZyZXF1ZW5jaWVzIGluIGxpZ2h0IGNvbWluZyBmcm9tIHRoZSBzdGFyIGNhbiBiZSB1c2VkIHRvIGRpc2NvdmVyIHRoZW0gYW5kIGdhaW4gc29tZSBpbnNpZ2h0cyBvbiB0aGVpciBzaXplIGFuZCBvdGhlciBjaGFyYWN0ZXJpc3RpY3MuIAonIFdoZW4gaGUgaXMgcmVsZWFzZWQgZnJvbSBzZXJ2aWNlLCBwcm9iYWJseSBpbiBGZWJydWFyeSwgTHQuIApUbyBzb2x2ZSB0aGlzLCBzd2l0Y2ggZGVhbGVycyBlYWNoIHJvdW5kIHNvIHRoYXQgZXZlcnlvbmUgaGFzIGEgcm91bmQgd2l0aCB0aGUgbG93ZXN0IG9yIGhpZ2hlc3QgYW1vdW50IG9mIGNhcmRzLiBBcyBsb25nIGFzIHRoZSBkZWFsZXIgc3dpdGNoZXMgY2xvY2t3aXNlIGFuZCBlYWNoIGRlYWxlciBoYW5kcyBvdXQgY2FyZHMgZ29pbmcgY2xvY2t3aXNlLCB0aGUgcGF0dGVybiB3aWxsIHJlcGVhdCBmYWlybHkuCkFmdGVyIGp1c3QgMSAgeWVhcnMgb2YgbWFycmlhZ2UsIEhhbGV5IG1vdmVkIGJhY2sgdG8gaGVyIGhvbWV0b3duIG9mIFNwcmluZ2ZpZWxkLCBNaXNzb3VyaSBhbmQgdGhleSBldmVudHVhbGx5IGRpdm9yY2VkLiBCZWNhdXNlIHNvIG1hbnkgbWlsZXMgc2VwYXJhdGVkIGhpbSBmcm9tIGhpcyBnaXJscywgaGUgY29tbXVuaWNhdGVkIHdpdGggdGhlbSBhbG1vc3QgZXZlcnkgZGF5IGJ5IEZhY2VUaW1lLi4gClBva2VyJ3MgbmV3IHVwc3VyZ2UgaW4gLiBpcyBkdWUgdG8gLiBzaG93aW5ncyBvZiAuIHBva2VyIC4gc3VjaCBhcyBUaGUgLiBUb3VyIGFuZCBUaGUgV29ybGQgU2VyaWVzIG9mIFBva2VyLiBUaGlzIGhhcyByZXN1bHRlZCAuIG9mIHBlb3BsZSBhbGwKWW91IHdvdWxkbiB0ZWxsIGEgamFuaXRvciB0aGV5IGEgamFuaXRvciBiZWNhdXNlIHRoZXkgY291bGRuIGJlIGEgbGF3eWVyIHRvIHRoZWlyIGZhY2UuIFlvdSB3b3VsZG4gdGVsbCBhIHdhaXRlciB0aGV5IHN1Y2sgYXQgbWF0aCBzbyB0aGF0IHdoeSB0aGV5IGEgd2FpdGVyLiAKQWZ0ZXIgeW91ciBhcHBvaW50bWVudCB5b3Ugd2lsbCBoYXZlIGEgcHJvcGVyIHRyZWF0bWVudCBlaXRoZXIgcHJldmVudGF0aXZlIG9yIHdoZW4geW91IGhhdmluZyBhbiBhdHRhY2suIE94eWdlbiBjYW5ub3QgYmUgbWVudGlvbmVkIGVub3VnaC4gVHJ5IGl0Lgo0IEJlc3QgU3BvdHMgVG8gU2NvcmUgTG93ClRoZSBlbnRpcmUgZmVhdHVyZWQgc3BlYWtlciBsaXN0IGlzIGN1cnJlbnRseSBoYWxmIGZlbWFsZSwgYWx0aG91Z2ggdGhlIGV4YWN0IHBlcmNlbnRhZ2Ugd29uJ3QgYmUga25vd24gdW50aWwgYWZ0ZXIgdGhlIGV2ZW50LiAKVGVsbCB0aGUgZ2lybHMnIHNjaG9vbCB0byBjYWxsIHRoZSBwb2xpY2UgaWYgc2hlIHNob3dzIHVwLCBub3QganVzdCB0byBub3QgcmVsZWFzZSB0aGUgZ2lybHMgdG8gaGVyLiBUaGV5IHdpbGwgaGF2ZSBhIGRpZmZlcmVudCBwcm90b2NvbCBmb3IgYSBwZXJzb24gdGhleSBzaG91bGQgY2FsbCB0aGUgcG9saWNlIG9uLCB2cyBzb21lb25lIGp1c3Qgbm90IG9uIHRoZSBsaXN0LiBUZWxsIHRoZSBzY2hvb2wgc2hlJ3MgYSBraWRuYXBwaW5nIHJpc2suIEhhdmUgYSBwaG90byBoYW5keSwgaWYgeW91IGNhbiBmaW5kIG9uZS4KIk9yaWdpbmFsbHk6IGFuIGluZGlzdGluY3QgY2xvdWQgbGlrZSwgbHVtaW5vdXMgb2JqZWN0IHNlZW4gaW4gdGhlIG5pZ2h0IHNreSwgc3VjaCBhcyBhIGNsdXN0ZXIgb2YgZGlzdGFudCBzdGFycywgYSBnYWxheHksIG9yIGEgY2xvdWQgb2YgZ2FzIG9yIGR1c3QuIE5vdyAodXN1YWxseSk6IG1hc3Mgb2YgZ2FzIG9yIGR1c3Qgd2l0aGluIGEgZ2FsYXh5LCB0eXBpY2FsbHkgdmlzaWJsZSBlaXRoZXIgYXMgYSBsdW1pbm91cyBwYXRjaCBvciBhcyBhIGRhcmsgc2lsaG91ZXR0ZSBhZ2FpbnN0IGEgYnJpZ2h0ZXIgYmFja2dyb3VuZC4gClNvIHlvdXIgZXJyb3Igd2FzIG1hZGUgbW9yZSB0aGFuIGEgeWVhciBhZ28uIApGZWFyIG9mIGNoZW1vdGhlcmFweSBpcyBjb21tb24gYW1vbmcgY2FuY2VyIHBhdGllbnRzLCBhbmQgQ2hpbGRyZW4ncyBIb3NwaXRhbCBoYXMgYSBwcm9ncmFtIHRoYXQgaW5jb3Jwb3JhdGVzIGhlcmJhbCBzdXBwbGVtZW50cywgbWFzc2FnZSwgYWN1cHVuY3R1cmUsIGFuZCBvdGhlciBhbHRlcm5hdGl2ZSBtZXRob2RzIHRvIGhlbHAgcGF0aWVudHMgZGVhbCB3aXRoIHRoZSBzaWRlIGVmZmVjdHMgb2YgdGhlIG1lZGljYXRpb24uIEl0J3MgdW5jbGVhciB3aGVyZSBEYW5pZWwgd2lsbCBzZWVrIHRyZWF0bWVudC4KSG93ZXZlciwgc3RyaXBwaW5nIGluIGEgc3RyaXAgcG9rZXIgZ2FtZSB3aWxsIG1vc3QgbGlrZWx5IGJlIGZvciB0aGUgYmVuZWZpdCBvZiB0aGUgZ2FtZSBvbmx5LCBhbmQgbm90IGp1c3QgYWJvdXQgdGhlIHN0cmlwcGluZyBwZXIgc2UuLiAKU2Fpa2F0IENoYWtyYWJhcnRpLCAzMywgaXMgdGhlIGhhcmQgbGVmdCBmcmVzaG1hbidzIGNoaWVmIG9mIHN0YWZmICAgdGhlIGJyYWlucyBiZWhpbmQgaW5pdGlhdGl2ZXMgbGlrZSB0aGUgR3JlZW4gTmV3IERlYWwgYW5kIHRoZSBmb3VuZGVyIG9mIGEgdHJpbyBvZiBjb21wYW5pZXMgdGhhdCBjYXRhcHVsdGVkIE9jYXNpbyBDb3J0ZXogaW50byBDb25ncmVzcy4KS2VlcCBpbiBtaW5kIHRoYXQgdGhlIGJlc3QgYXNzZXQgb2YgYmVpbmcgYSBtYXNzYWdlIHRoZXJhcGlzdCBpcyB0aGUgZmxleGliaWxpdHkgdGhhdCBpdCBicmluZ3MgaW4gdGVybXMgb2YgdGhlIHdvcmsgdmVudWUgYW5kIHRpbWUuIE1hc3NhZ2UgdGhlcmFwaXN0IGpvYnMgbWF5IGFsc28gaW5jbHVkZSBvcHRpb25zIHN1Y2ggYXMgcGFydCB0aW1lIG9yIGZ1bGwgdGltZS4gClBlcnNvbmFsIGF0dGFja3MsIGJpZ290cnksIGZpZ2h0aW5nIHdvcmRzLCBvdGhlcndpc2UgaW5hcHByb3ByaWF0ZSBiZWhhdmlvciBvciBjb250ZW50LCBjb21tZW50cyB0aGF0IGluc3VsdCBvciBkZW1lYW4gYSBzcGVjaWZpYyB1c2VyIG9yIGdyb3VwIG9mIHVzZXJzIHdpbGwgYmUgcmVtb3ZlZC4gUmVndWxhciBvciBlZ3JlZ2lvdXMgdmlvbGF0aW9ucyB3aWxsIHJlc3VsdCBpbiBhIGJhbi4gClRoZXkgbmVlZCBtdWNoIG1vcmUgcm9vbS4gCkp1c3QgdGhlIGNoaWNrZW4gc2FuZHdpY2guIlRoZSBwbycgYm95OiBOZXcgT3JsZWFucycgdmVyc2lvbiBvZiB0aGUgc3ViIChvciBob2FnaWUsIGRlcGVuZGluZyBvbiB3aGljaCBwYXJ0IG9mIHRoZSBjb3VudHJ5IHlvdSBoYWlsIGZyb20pIHdhcyBzdXBwb3NlZGx5IGludmVudGVkIGJ5IEZyZW5jaCBRdWFydGVyIHJlc3RhdXJhbnQgb3duZXJzIENsb3ZpcyBhbmQgQmVubmllIE1hcnRpbiBpbiAxOTI5LiAKR29kIGkgd2lzaCB0aGVyZSB3YXMgYSB3YXkgdG8gYXV0byBzY3JlZW4gcG9zdHMgc28gaWYgc29tZW9uZSBwb3N0ZWQgLiAKUFMgRmFyIHBhcnRlIGRlbCBEaXJldHRpdm8gZGkgQVJUIGVsZXZlbiBwdXJvIHZvbG9udGFyaWF0bywgc2Vydml6aW8sIGRlZGl6aW9uZWUgZ3JhbmRlIHJlc3BvbnNhYmlsaXQuIEVzc2VyZSB1biBtZW1icm8gZGVsIENvbnNpZ2xpbyBEaXJldHRpdm9ub24gZGEgZGlyaXR0byBhZCBhbGN1biBjb21wZW5zbyBlY29ub21pY28gZXNzZW5kbyBsYSBub3N0cmEgdW5hIEFzc29jaWF6aW9uZSBObyBwcm9maXQgdG90YWxtZW50ZSBhbCBzZXJ2aXppbyBkZWxsYSBjYXVzYSBjb211bml0YXJpYS4KWW91IGdvdCB0byBleGVyY2lzZS4iIGFuZCB0aGVuIGxhdGVyIHRoYXQgZGF5LCAiZG8geW91IHdhbnQgdG8gZ28gZ2V0IG1jIGRvbmFsZHM/Ii4gCkEgcmVhc29uIHRvIGRvIHRoaXMgaXMgYmVjYXVzZSBvZiB0aGUgZm9jdXMgb2YgdGhlIG1haW4gcHJvdGFnb25pc3QuIApCbHVmZmluZyBpcyBkZWZpbmVkIGFzIGFuIGFjdCBvZiBkZWNlcHRpb24gYnkgYSBmYWxzZSBzaG93IG9mIGNvbmZpZGVuY2UgaW4gdGhlIHN0cmVuZ3RoIG9mIHlvdXIgY2FyZHMuIEJhc2ljYWxseSwgeW91J3JlIHRyeWluZyB0byBjb252aW5jZSB5b3VyIG9wcG9uZW50cyB0aGF0IHlvdXIgaGFuZCBpcyB1bmJlYXRhYmxlLiBXaGVuIHlvdSBjaG9vc2UgdG8gYmx1ZmYsIHlvdSdyZSBhY3R1YWxseSBob3BpbmcgdGhhdCBldmVyeW9uZSBlbHNlIGZvbGRzLiAKIkkgaGF2ZSBhbHNvIGhhZCBjbGllbnRzIHRvIHNheSB0aGF0IG15IG1hc3NhZ2UgaXMgc28gZGlmZmVyZW50IHRoYW4gb3RoZXIgbWFzc2FnZXMgdGhhdCB0aGV5IGhhdmUgcmVjZWl2ZWQsIGJlY2F1c2UgSSBpbmNvcnBvcmF0ZSBJbmRpYW4gSGVhZCBNYXNzYWdlLCBDcmFuaW9zYWNyYWwsIFByZXNzdXJlIFBvaW50LCBNeW9mYXNjaWFsLCBUaGFpIE1hc3NhZ2UsIHN0cmV0Y2hpbmcsIFJlZmxleG9sb2d5LCBlbmVyZ3kgd29yay4gQW1vbmdzdCBvdGhlciB0ZWNobmlxdWVzLiAKTWF5YmUgYWZ0ZXIgZ2V0dGluZyB0aGUgb2ZmZXIgSSBzaG91bGQgaGF2ZSBiZWVuIG1vcmUgZGVtYW5kaW5nIGFib3V0IGhhdmluZyBleHBsaWNpdCBwcm9vZiBvZiBoZXIgY2xhaW1zIG9mIHN1Y2Nlc3MuIFNoZSB0YWxrZWQgYSBiaWcgZ2FtZSwgYnV0IEkgaGFkIHN1Y2ggcm9zZSBjb2xvcmVkIGxlbnNlcyBvbiB0aGF0IEkgZGlkbiBwcmVzcyB0aGUgaXNzdWUgd2hlbiBzaGUgZGFuY2VkIGFyb3VuZCBoYXZpbmcgdGhpbmdzIHRvIGJhY2sgdXAgd2hhdCBzaGUgc2FpZCwgbGlrZSBoYXZpbmcgYSBiaWcgZGVhbCBsaW5lZCB1cCB3aXRoIGEgZmFtb3VzIG11c2ljaWFuICAgd2hpY2ggdHVybmVkIG91dCB0byBiZSBhIGRlbHVzaW9uIGJhc2VkIG9uIGhhdmluZyBtZXQgdGhlbSBpbiBwZXJzb24sIG9uY2UsIGF0IGEgYmlnIHBhcnR5IGEgZmV3IHllYXJzIHByaW9yLiBTaGUganVzdCBzZWVtZWQgc28gY29uZmlkZW50IGFuZCBvcGVuICAgSSB3aXNoIEkgYXNrZWQgZm9yIHNvbWV0aGluZyBtb3JlIGNvbmNyZXRlLgpBbmQgYSBsb3Qgb2YgZ3VpbHQgZm9yIGJlaW5nIHVuaGFwcHkuIEkgd2FudCB0byBnbyBvdXQgd2l0aCBteSBmcmllbmRzLCBiZSBhIG5vcm1hbCAyMyB5ZWFyIG9sZC4gClJlc3BvbmQgd2l0aCBmYWN0cy4gQWxsIHRob3NlIHF1ZXN0aW9ucyBhcmUgdGVjaG5pY2FsbHkgcmVsZXZhbnQuIEluc3VsdGVkIHdvdWxkIGJlIG9uZSB3aG8gd2hvIGZlYXJzIHRvIGxlYXJuIHRoZSBsaWVzIGFuZCB1cmJhbiBteXRocyB0aGF0IHByb21vdGVkIGluZWZmZWN0aXZlIHByb2R1Y3RzIHN1Y2ggYXMgYSBLb2JsZW56LiBZZXMsIHRob3NlIHByb2R1Y3RzIGFyZSBwYXJ0IG9mIHRoZSBwcm9ibGVtICAgZG8gbm90IHByb3ZpZGUgdXNlZnVsIHNvbHV0aW9ucy4gRG8gbm90IGV2ZW4gY2xhaW0gdG8uCkF0IFdwcm9tb3RlLCBwcm9zcGVjdGl2ZSBjbGllbnRzIHJlY2VpdmUgYSBkZWNrIGRlY2xhcmluZywgIlBlcmtzIGRvIG5vdCBlcXVhbCBjdWx0dXJlLiIgSXQncyBhIGNvcmUgbWFudHJhLCBhY2NvcmRpbmcgdG8gZm91bmRlciBhbmQgQ0VPIE1pa2UgTW90aG5lci4KSG93ZSBzYWlkIExpbmRzYXkgcGxheWVkIHRoZSBnYW1lICJsaWtlIGEgaG9seSB0ZXJyb3IuIgpUaGlzIGFsYnVtIGVhcmx5IDcwcyBsYXRpbiBmbGF2b3JlZCBqYXp6IGZ1c2lvbiBoYXMgYSBzb2xpZCBmaXJzdCBoYWxmLCBhbGJlaXQgYSBiaXQgdHJpdmlhbC4gClRoZSBzdHJlbmd0aCB5b3UgZGV2ZWxvcCBpbiB0aGUgY2hhbGxlbmdlIHRoYXQgeW91IHByZXNlbnRseSBmYWNlLCBjYW4gbWFrZSBldmVudHMgaW4gdGhlIGZ1dHVyZSB0aGF0IHdvdWxkIG90aGVyd2lzZSBiZSBkaWZmaWN1bHQsIGEgbG90IGVhc2llciB0byBuYXZpZ2F0ZS4gClRvZGF5IGlzIGhlciA1M3JkIGJpcnRoZGF5IGFuZCB0aGlzIG1vbnRoIHNoZSBpcyBnaXZpbmcgbWUgaGVyIGJpa2UuIFNoZSBmaW5hbGx5IGdldHRpbmcgdG8gdGhlIHBvaW50IHdoZXJlIHNoZSBjYW4gcmlkZSB3aXRob3V0IGdldHRpbmcgc3R1Y2sgc29tZXdoZXJlIGZyb20gaGVyIGxlZnQgc2lkZSBjcmFtcGluZyB1cCBhbmQgcHJldmVudGluZyBoZXIgZnJvbSBtb3ZpbmcuIFRoZXkgZmluZCB0aGV5IGhhY3ZlIG11Y2ggaW4gY29tbW9uLiAKUmFuaml0c2luaGppJ3MgcGVyZm9ybWFuY2VzIGFnYWluc3QgWW9ya3NoaXJlIHdlcmUgYWxtb3N0IGFzIHJlbWFya2FibGUgYXMgRnJ5J3M7IGZvciBoZSBzY29yZWQgd2VsbCBvdmVyIDEsNTAwIHJ1bnMgYWdhaW5zdCB0aGVtLCBhdmVyYWdpbmcgbW9yZSB0aGFuIHNpeHR5IGFuIGlubmluZ3MuIEluIDE5MDEgRnJ5IHNjb3JlZCBzaXggY2VudHVyaWVzIGluIHNpeCBjb25zZWN1dGl2ZSBpbm5pbmdzLCBhbiBhY2hpZXZlbWVudCBlcXVhbGxlZCBieSBCcmFkbWFuLCBidXQgb24gQXVzdHJhbGlhbiB3aWNrZXRzIGFuZCBzcHJlYWQgb3ZlciBhIHNlYXNvbi4gRnJ5J3Mgc2l4IGh1bmRyZWRzLCB0d28gb2YgdGhlbSBvbiBib3dsZXIncyB3aWNrZXRzLCBjYW1lIG9uZSBvbiB0b3Agb2YgdGhlIG90aGVyIHdpdGhpbiBsaXR0bGUgbW9yZSB0aGFuIGEgZm9ydG5pZ2h0Li4gCklmIHlvdSBhcmUgc2VyaW91cyBhYm91dCBpdCwgSSB0aGluayB5b3Ugc2hvdWxkIGdhdGhlciB1cCBzb21lIG1vbmV5IGZyb20geW91ciBnb29kIHBheWluZyBqb2IgeW91IGhhdmUgbm93LCB0YWtlIGEgMiB3ZWVrIHZhY2F0aW9uLCBhbmQgZ28gb3V0IHRvIFZlZ2FzIGFuZCBnaXZlIGl0IGEgd2hpcmwuCkJ1dCBhY2FkZW1pY2lhbnMgYW5kIGxhdyBlbmZvcmNlbWVudCBvZmZpY2lhbHMgc2FpZCB0aGV5IHdlcmUgbm90IHN1cnByaXNlZCB0aGF0IGFuIGFsbGVnZWQgbmF0aW9ud2lkZSBwcm9zdGl0dXRpb24gcmluZyBpbnZvbHZpbmcgc211Z2dsZWQgQXNpYW4gd29tZW4gZm91bmQgaXRzIHdheSB0byBhbiBhcGFydG1lbnQgY29tcGxleCBpbiB0aGUgNDAwMCBibG9jayBvZiBXZXN0IFR3YWluIEF2ZW51ZS4KTGEgcHJzZW5jZSBkZSBsJ2VzcHJpdCBkZSBEaWV1IGRhbnMgbGUgbW9uZGUgZXN0IHJlY29ubnVlIHBhciBjZWx1aSBvdSBjZWxsZSBxdWkgdml0IGxhIHByc2VuY2UgZGUgRGlldSBlbiBsdWksIGVuIGVsbGUuIFNpIGxhIGxvdWFuZ2UgZGl0IERpZXUgcG91ciBjZSBxdSdpbCBlc3QuIApBbmQgbGFzdGx5LiBSZWxheC4gSSBrbm93LCBpdCBlYXNpZXIgc2FpZCB0aGFuIGRvbmUsIGJ1dCB5b3UgdHJ1bHkgaGF2ZSB0byByZWxheC4gCkFsbCB1bnRlc3RlZCBiaW9sb2dpY2FsIGV2aWRlbmNlIGlzIGV4Y3VscGF0b3J5IGluIHNvbWUgc2Vuc2UuIEJ1dCB0aGF0IG5vdCB0aGUgdGVzdC4gTWluZCB1c2luZyBtdWx0aXBsZSBmYWN0b3JzOyBoZXJlLCB0aGUgRkJJIHNheWluZyB0aGV5IGNhbiBiZSB0ZXN0ZWQsIHRoZSBkZWZlbnNlIGFjY2VwdGFuY2Ugb2YgdGhhdCwgbm8gb25lIGludGVyZXN0IGluIHRoZSBib25lcywgYW5kIHRoZSBwcmVwb3N0ZXJvdXNseSBzdHJvbmcgZm9yZW5zaWMgY2FzZS4gCkhlIHNhaWQ6IHlvdSBzdGFydCBwbGF5aW5nIGV2ZXJ5IGRheSB5b3UgZ2V0IGJldHRlciBhbmQgYnkgdGhlIGVuZCBvZiB0aGUgc3VtbWVyLCBJIGhhZCBnb25lIGZyb20gaGF2aW5nIGEgY291cGxlIG9mIGh1bmRyZWQgZG9sbGFycyBpbiBteSBvbmxpbmUgYWNjb3VudCB0byBoYXZpbmcgYSBiYW5rIHJvbGwgb2YgZml2ZSB0aG91c2FuZCBkb2xsYXJzLiBCeSB0aGUgdGltZSBDaHJpcyBjb21wbGV0ZWQgaGlzIHN0dWRpZXMsIGhlIGhhZCBwYWlkIG9mZiBoaXMgc3R1ZGVudCBsb2FucyBhbmQgaGFkIGEgdG90YWwgb2YgYXJvdW5kIGluIHRoZSBiYW5rLiBIZSB0aGVuIGFkbWl0dGVkIHRoZSB0cnV0aCB0byBoaXMgcGFyZW50cyBhbmQgd2l0aGluIHNpeCBtb250aHMgaGFkIG1hZGUgbW9yZSB0aGFuIE1yIE1vb3JtYW4gc2Nvb3BlZCBtb3JlIHRoYW4gJDFtaWxsaW9uIGluIHRoZSBXb3JsZCBQb2tlIFRvdXIgTG9zIEFuZ2VsZXMgUG9rZXIgQ2xhc3NpYyBpbiBNYXJjaCAyMDE0LCBhbmQgbWV0IGhpcyB3aWZlIEthdGllIGF0IGEgcG9rZXIgdG91cm5hbWVudCBpbiBWZWdhcy4KRWggbm8uIFBvZHJhIGFyZ3VtZW50YXIgcXVlIGxvcyBxdWUgaGFjZW4gbXMgZGFvIHNvbiBwcm90ZWdpZG9zIHBvciBlbCBnb2JpZXJubywgcGVybyBubyBuZWNlc2FyaWFtZW50ZSBlbCBnb2JpZXJubyBlcyBlbCBkdWVvLiAKQnV0IHNoZSB3YXMgYWxyZWFkeSB3aXRoIHNvbWVvbmUgZWxzZSBhbnl3YXksIHNvIGl0IGRvZXNuJ3QgcmVhbGx5IG1hdHRlciBhbnltb3JlLiAKS2VlcCB0cmFjayBvZiBhdCBsZWFzdCAxLDUwMCBob3VycyB3b3J0aCBvZiBwbGF5LiAKVGhlIE1TYyBpcyBwZXJzb25hbCBhbmQgcHJvZmVzc2lvbmFsIGRldmVsb3BtZW50LCBub3Qgd2FzdGVkIHRpbWUuIApJIHZlcnkgc29ycnkgZm9yIHlvdXIgbG9zcy4gSSBoYXZlIG5vIHBlcnNvbmFsIGV4cGVyaWVuY2Ugd2l0aCB0aGlzIGJ1dCBteSBodXNiYW5kIGxvc3QgaGlzIG1vbSBhdCA0IGFuZCBJIGNhbiB0ZWxsIHlvdSB3aGF0IHN0aWxsIGltcGFjdHMgaGltIGF0IDQ1LiBIZSBhbmdyeSBoZSB3YXNuIGFsbG93ZWQgdG8gZ28gdG8gdGhlIGZ1bmVyYWwgYmVjYXVzZSBpdCBtYWRlIGFuIGltcG9zc2libGUgaWRlYSBldmVuIGhhcmRlciB0byB1bmRlcnN0YW5kLiBIZSBhbHNvIGp1c3QgbGVhcm5lZCBoZXIgdHJ1ZSBjYXVzZSBvZiBkZWF0aCBhIGZldyB5ZWFycyBhZ28gd2hlbiBJIG9yZGVyZWQgYSBjb3B5IG9mIHRoZSBkZWF0aCBjZXJ0LiBPYnZpb3VzbHkgYXQgNCBubyBvbmUgd2FudGVkIHRvIGJ1cmRlbiBoaW0gd2l0aCB0aGUgZGV0YWlscyBidXQgaGlzIGJpZ2dlc3QgY29tcGxhaW50IGlzIHRoZXkgbmV2ZXIgd2FudGVkIHRvIHRhbGsgYWJvdXQgaXQgd2hlbiBoZSB3YXMgb2xkZXIgbGVhdmluZyBhIGhvbGUgaW4gaGlzIGtub3dsZWRnZSBhYm91dCBoaXMgbW9tLgpCZWZvcmUgYXR0ZW1wdGluZyB0byByYWlzZSBhIGJhYnkgYmFkZ2VyLCByZWFkIG9uIHNvIHlvdSBrbm93IHdoYXQga2luZCBvZiBjYXJlIGlzIHJlcXVpcmVkLi4gCllvdSBtYWtlIGEgdmVyeSBnb29kIHBvaW50IGhlcmUgdGhhdCBJIGRvbid0IGZlZWwgaGFzIGJlZW4gcHJvcGVybHkgZXhwbG9yZWQgYnkgdGhlIHNlcmllcyAoSSBjYW4ndCBzcGVhayBmb3IgdGhlIGJvb2sgYmVjYXVzZSBJIGhhdmVuJ3QgcmVhZCBpdCB5ZXQpLiAKSSBjaG9zZSBvbmUgcGFydGljdWxhciBhbmdsZSwgYnV0IHN1cmUsIHlvdSBjb3VsZCBjaG9vc2UgdG8gZGVwaWN0IFNuYXBlIGFzIGEgYml0IG1vcmUgb2YgYSB2aWxsYWluLiAKTm90IG9ubHkgd291bGQgSSBoYXZlIHByZXNzZWQgY2hhcmdlcywgYnV0IEknZCBoYXZlIGJsYXN0ZWQgaGlzIGFzcyB3aXRoIG15IGJlYXIgbWFjZS4gTm90aGluZyBlbnJhZ2VzIG1lIG1vcmUgdGhhbiBlbnRpdGxlZCBwZXJ2ZXJ0cyBsaWtlIHRoYXQuIFRoYXQgdHlwZSBvZiBwcmVkYXRvcnkgYmVoYXZpb3IgY2FuIGFsc28gYmUgZGFuZ2Vyb3VzbHkgdW5wcmVkaWN0YWJsZS4gCllvdSBhcmUgYm91bmQgdG8gcnVuIHVwIGFnYWluc3QgdGhvc2UgYWdncmVzc2l2ZSB0eXBlIG9ubGluZSBwb2tlciB0b3VybmFtZW50IHBsYXllcnMgd2hvIGFyZSBhbHdheXMgaW4geW91ciBmYWNlIHdpdGggcHJlc3N1cmUgYmV0dGluZy4gVGhleSBtYXkgYmUgdmVyeSBnb29kLCBidXQgdGhleSBtYXkgYWxzbyBiZSBtYW5pYWNzLiBCb3RoIGFyZSBkYW5nZXJvdXMuIEVpdGhlciB3YXkgeW91IG5lZWQgdG8ga25vdyB0aGUgVlBJUCBtZXRlciBpbiBvcmRlciB0byBpZGVudGlmeSB0aGVtLiBGb3IgZXhhbXBsZSwgaWYgeW91IGFyZSBpbiBsYXRlIHBvc2l0aW9uIGFuZCBjb25zaWRlcmluZyBhbnN3ZXJpbmcgYSAzeCBibGluZCByYWlzZSBmcm9tLCBvaCBsZXQncyBzYXksIER1ZWNlc0NyYXp5OTksIGFsbCB5b3UgaGF2ZSB0byBkbyBpcyBjaGVjayB0aGUgVlBJUCBtZXRlci4gWW91IGNhbiBzZWUgdGhhdCBEdWVjZXNDcmF6eTk5IGNhbWUgaW50byA2OCUgb2YgdGhlIHBvdHMsIHJhaXNlZCA0MCUgb2YgdGhvc2UgdGltZXMsIGFuZCBiZXQgb3V0IGF0IHRoZSBmbG9wIDEwMCUgb2YgdGhlIHRpbWUhIEV2ZW4gaWYgeW91IHdlcmUgb24gYW4gZXh0ZW5kZWQgY29mZmVlIGJyZWFrIHNpdHRpbmcgb3V0LCB5b3Ugd2lsbCBrbm93IGZyb20gdGhvc2UgbnVtYmVycyB5b3UgYXJlIGRlYWxpbmcgd2l0aCBhIG1hbmlhYy4gQSB0b3VybmFtZW50IHBybywgd2lsbCBwcm9iYWJseSBiZSBtb3JlIHNlbGVjdGl2ZSB0aGFuIHRoYXQsIGFuZCBwcmUgZmxvcCByYWlzZSBtb3JlLCBidXQgd2lsbCBoYXZlIGEgaGlnaGVyIHBvdCB3aW4gcmF0ZS4KSSBqdXN0IHJlYWQgYSBjb21tZW50IG9mIHNvbWVib2R5IGRlZmVuZGluZyBTbW9sbGV0dCBzYXlpbmcgaXQgd2FzIHNpbXBseSBhIFBSIHN0dW50LiBZb3UgYWxyZWFkeSBleHBsYWluZWQgaGlzIGV2ZW50IHByZXR0eSBkYW1uIGdvb2QgYW5kIHRoYXQncyBub3QgYSBQUiBzdHVudC4gClRvIGJlIHN1cmUgeW91IGFyZSBwdXNoaW5nIGFpciBvdXQgb2YgeW91ciBtb3V0aCwgeW91IG5lZWQgdG8gYmUgYWJsZSB0byBzZWUgaXQuIE9uZSBvZiB0aGUgYmVzdCB3YXlzIHRvIGFjaGlldmUgdGhpcyBpcyB0byB1c2UgYSBzdHJhdyBpbiBhIGdsYXNzIG9mIHdhdGVyLiBSZW1lbWJlciwgeW91IHNob3VsZCBvbmx5IGJlIHVzaW5nIHlvdXIgY2hlZWtzIGFuZCB0b25ndWUgdG8gcHVzaCB0aGUgd2F0ZXIgb3V0Li4gClRleGFzIENhcmQgSG91c2UgICB0aGlzIHBsYWNlIGhhcyB0aGUgbW9zdCBjYXNoIHBsYXllcnMuIFRoZXkgaGF2ZSBhIG5pY2UgZmFjaWxpdHkuIFRoZXkgaGF2ZSB0aGUgbW9zdCBjb25zaXN0ZW50IGJhdGNoIG9mIGRlYWxlcnMgYW5kIG1hbmFnZXJzLiAKV2hldGhlciB5b3Ugc2VlIGFuIGltcHJvdmVtZW50IG92ZXIgeW91ciBwaG9uZSBwcm9iYWJseSBkZXBlbmRzIG9uIGhhdmluZyBnb29kIHF1YWxpdHkgYXVkaW8gZmlsZXMgKG1pbmltdW0gMTkyIGticHMgbXAzLCBvciBhIGJldHRlciBmaWxlIHR5cGUgbGlrZSBGTEFDKSwgQU5EIGdvb2QgZW5vdWdoIGhlYWRwaG9uZXMgdG8gdGVsbCB0aGUgZGlmZmVyZW5jZS4gSSBoYXZlIGFuIG9sZGVyIEZpaW8gWDMgcG9ydGFibGUgbXVzaWMgcGxheWVyIHRoYXQgSSBsb3ZlLCBhbmQgYWxsIHRoZSBGaWlvIHBsYXllcnMgdGVuZCB0byBnZXQgZ3JlYXQgcmV2aWV3cyBmcm9tIHRoZSBwcm9zLiAKV2hlbiBzb21lb25lIGlzIGxvb2tpbmcgZm9yIGEgcHJvdGVjdG9yLCBoZSBpcyBkZWZpbml0ZWx5IHdvcnJpZWQgYWJvdXQgdGhlIHNhZmV0eSBvZiBoaXMgcHJvZHVjdC4gCkFsc28gbGlrZSB0aGF0IHRoZSBsYXN0IGJhdHRsZSBpc24gYSBiYXR0bGUsIG9yIGF0IGxlYXN0IG5vdCBhIHRyYWRpdGlvbmFsIG9uZS4gClN1Y2ggZXhwbGFuYXRpb25zIGFyZSBzcGVjdWxhdGl2ZSwgUmV5bmEgY2F1dGlvbnMsIGJ1dCBub3RlcyB0aGF0ICJpbiByYXRzLCBmb3IgZXhhbXBsZSwgYWRvbGVzY2VudCByYXRzIGFyZSBtb3JlIGxpa2VseSB0byBleHBsb3JlIGEgbmV3IGVudmlyb25tZW50LiAKWW91IGEgZnVja2luZyBzdG9uZSwgeW91IGhhdmUgbm8gbGlmZSBnb2FscywgeW91IHdpbGwgbmV2ZXIgYWNjb21wbGlzaCBhbnl0aGluZyBpbiBsaWZlIGFwYXJ0IGZyb20gcGlzc2luZyBtZSBvZmYuIApSYWZhIHdpbGwgcGxheSBwb2tlciBpbiBzcGFyZSBtb21lbnRzIHRoaXMgc3VtbWVyIHdoaWxlIGhlIGNvbmNlbnRyYXRlcyBvbiBoaXMgdGVubmlzLiBJbiB0aGUgQXV0dW1uLCBoZSB3aWxsIGJlIGFibGUgdG8gZGV2b3RlIG1vcmUgdGltZSB0byBwb2tlciBhbmQgdG8gcmVwcmVzZW50aW5nIFBva2VyU3RhcnMgaW4gb25saW5lIHRvdXJuYW1lbnRzLCBpbiBhZHZlcnRpc2luZyBjYW1wYWlnbnMgYW5kIGF0IGNoYXJpdHkgZXZlbnRzLiBvZiB0aGVzZSB3aWxsIGJlIGFubm91bmNlZCBpbiB0aGUgY29taW5nIG1vbnRocy4KWW91IHNob3VsZCBmaWxlIGJvdGggdGhlIDIwMTcgYW5kIDIwMTggdGF4ZXMuIFRoZSBJUlMgYWxzbyBvZmZlcnMgcGF5bWVudCBwbGFucyBpbnN0ZWFkIG9mIGhhdmluZyB0byBwYXkgYXQgb25jZS4gQWxzbywgaXQgbXVjaCBiZXR0ZXIgdG8gZmlsZSB5b3VyIHRheGVzIGFuZCBub3QgcGF5IHRoYW4gbm90IGZpbGUgYXQgYWxsLiBCeSBub3QgZmlsaW5nIHlvdSB3aWxsIGluY3VyIGEgZmFpbHVyZSB0byBmaWxlIHBlbmFsdHksIGFzIHdlbGwgYXMgYSBmYWlsdXJlIHRvIHBheSBwZW5hbHR5LgpTVFIgR2xvYmFsIGlzIGNvbGxlY3RpbmcgbW9udGhseSBob3RlbCBwZXJmb3JtYW5jZSBkYXRhIGZyb20gbW9yZSB0aGFuIDQ0LDAwMCByb29tcyBhY3Jvc3MgQnJhemlsLiBob3RlbCBkZXZlbG9wbWVudCBwaXBlbGluZSBjb21wcmlzZXMgMiw3NDUgcHJvamVjdHMgdG90YWxpbmcgMzA0LDgyNSByb29tcywgYWNjb3JkaW5nIHRvIHRoZSBBdWd1c3QgMjAxMiBTVFIvTWNHcmF3IEhpbGwgQ29uc3RydWN0aW9uIERvZGdlIFBpcGVsaW5lIFJlcG9ydC4gVGhpcyByZXByZXNlbnRzIGEgMy41IHBlcmNlbnQgZGVjcmVhc2UgaW4gdGhlIG51bWJlciBvZiByb29tcyBpbiB0aGUgdG90YWwgYWN0aXZlIHBpcGVsaW5lIGNvbXBhcmVkIHRvIEF1Z3VzdCAyMDExLiBUaGUgdG90YWwgYWN0aXZlIHBpcGVsaW5lIGRhdGEgaW5jbHVkZXMgcHJvamVjdHMgaW4gdGhlIEluIENvbnN0cnVjdGlvbiwgRmluYWwgUGxhbm5pbmcgYW5kIFBsYW5uaW5nIHN0YWdlcyBidXQgZG9lcyBub3QgaW5jbHVkZSBwcm9qZWN0cyBpbiB0aGUgUHJlIFBsYW5uaW5nIHN0YWdlLgpUaGUgb25lIHRoaW5nIEkgcmVhbGx5IHJlYWxseSB3YW50ZWQsIEkgaGFkIHRvIGJlZyBmb3IgbW9udGhzIGZvci4gCkkgbWVhbi4gCkZvciB0aG9zZSBvZiB1cyBqdXN0IHN0YXJ0aW5nIGludG8gYWxsIHRoaXMgKGFnZSBpcnJlbGV2YW50IGFzIGkgYW0gcHJvYiB0d2ljZSB0aGUgYWdlIG9mIG1vc3Qgb2YgeW91KSBpdCBjYW4gYmUgaW50aW1pZGF0aW5nIHRvIGFzayBhYm91dCB0aGluZ3MgdGhhdCB5b3UgZmVlbCB5b3Ugc2hvdWxkIGhhdmUgYmVlbiBhYmxlIHRvIGxlYXJuIG9uIHlvdXIgb3duLi4gCkpldWRpIDIxIGZ2cmllciAgMTloIGF1cmEgbGlldSBsYSBwcm9jaGFpbmUgcmVuY29udHJlIGR1IENvbnNlaWwgZGUgUXVhcnRpZXIgR291dHRlIGQnT3IgQ2h0ZWF1IFJvdWdlICBsYSBTYWxsZSBTYWludCBCcnVuby4gTCdvcmRyZSBkdSBqb3VyIG4nZXN0IHBhcyBlbmNvcmUgZml4LCBldCBwb3VyIGNhdXNlLCBjYXIgYydlc3QgYXV4IGhhYml0YW50cyBkZSBsZSBkdGVybWluZXIuIExhIG5vdXZlbGxlIG1vdXR1cmUgZGVzIENvbnNlaWxzIGRlIHF1YXJ0aWVyIHNlIHZldXQgcGx1cyBvdXZlcnRlLCBjJ2VzdCBsIHVuZSBtYW5pcmUgZGUgbCdwcm91dmVyLgpJdCB3YXMgdWdseSBhbmQgd2UgbmVlZCB0byB3aW4gdWdseS4gCldoYXQgSSB3YW50IHRvIGtub3cuIElzIHdoeSBhIGxhcmdlIGNodW5rIG9mIHBlb3BsZSBoZXJlIHZpZXcgUmVwdWJsaWNhbnMgYXMgYSBwcm9ibGVtPyBXZSBoYXZlIGNoZWNrIGFuZCBiYWxhbmNlcyBmb3IgYSByZWFzb24uIEl0IGhhcHBlbnMgZXZlcnkgZWxlY3Rpb24gY3ljbGUsIHRoZSBvcHBvc2l0ZSBwYXJ0eSB3aW5zIGluIENvbmdyZXNzLiBBcyBJIHJlYWQgc29tZSBvZiB0aGVzZSBjb21tZW50cywgaXQgc2VlbXMgbWFueSBhcmUgYm9yZGVybGluZSBvbiBjb21taXR0aW5nIGFjdHMgb2YgdmlvbGVuY2UganVzdCBiZWNhdXNlIG9mIHNvbWUgZ3V5IGluIGEgY2hhaXIgZm9yIDQgeWVhcnM/Ckl0IGlzIHBvc3NpYmxlIHRoYXQgaXQgaXMgYWN0dWFsbHkgMjAyMCB0aGF0IGlzIGdvaW5nIHRvIGJlIGxpa2UgMjAxNSwgd2l0aCBDeWJlcnB1bmsgMjA3NyBpbiB0aGUgc3ByaW5nIChJIHRoaW5rIENEUFIgcGxhbm5lZCBpdCBmb3IgdGhpcyBmYWxsLCBidXQgdGhlcmUgaGFzIGJlZW4gbm8gbmV3cyBmb3IgYSBsb25nIHRpbWUsIGFuZCBUaGUgV2l0Y2hlciAzIHdhcyBhbHNvIGRlbGF5ZWQgZnJvbSAyMDE0KSwgdGhlbiBTdGFyZmllbGQgaW4gTm92ZW1iZXIuIEkgYWxzbyBzdXNwZWN0IHNvbWUgb3RoZXIgZ2FtZXMgdGhhdCBoYXZlIGJlZW4gYW5ub3VuY2VkIGZvciAyMDE5IHRoYXQgc3RpbGwgaGF2ZSBubyByZWxlYXNlIGRhdGUsIHN1Y2ggYXMgRHlpbmcgTGlnaHQgMiwgbWlnaHQgYmUgZGVsYXllZCBpbnRvIGVhcmx5IDIwMjAuLiAK|<---