--->|RmFjZWJvb2ssIGdvb2dsZSBhbmQgYW1hem9uIGFyZSBhbHdheXMgYmFkIGZvciBwcml2YWN5IGluIHNvbWUgd2F5IG9yIGFub3RoZXIuCkkgbm90IGFzc3VtaW5nIGFueXRoaW5nIGFib3V0IHRoaXMgZ3V5LiBJIHNheWluZyBoZSBkaWQgYSBzaGl0dHkgdGhpbmcgYW5kIHRoZSBjb250ZXh0IG9mIHdoeSBoZSBtaWdodCBoYXZlIGRvbmUgaXQgZG9lc24gbWF0dGVyLiAKTGVzIGVuc2VpZ25lbWVudHMgZGlzcGVuc3MgZXQgbGVzIGV4cHJpZW5jZXMgcHJvcG9zZXMgcGVuZGFudCBjZXR0ZSBmb3JtYXRpb24gcGVybWV0dHJvbnQgZGUgbWV0dHJlIGVuIGV4ZXJndWUgbGVzIHNwY2lmaWNpdHMganVyaWRpcXVlcyBkZSBjZXR0ZSBtYXRpcmUuIEEgbCdhcHB1aSBkZSBjZXMgY29ubmFpc3NhbmNlcywgbGVzIHR1ZGlhbnRzIHBvdXJyb250IGVmZmVjdHVlciBsZXVyIGNob2l4IGQnaW5zZXJ0aW9uIHByb2Zlc3Npb25uZWxsZS4KSSBzb2xkIGFsbCBteSBjaHAgYWZ0ZXIgSSBzYXcgYW5vdGhlciBwbGF5ZXIgYW5kIG15c2VsZiBnZXQgb3VyIHdpdGhkcmF3cyBkZWNsaW5lZCBiZWNhdXNlIHRoZXkgZGlkbiBoYXZlIGFueSBjaHAgbGVmdCBpbiB0aGVpciBjYXNoaWVyLiBZb3UgY2FuIGhhdmUgdGhlc2Uga2luZCBvZiBwcm9ibGVtcy4gQW5kIHNvbWV0aW1lcyB0aGUgbXR0cyBkb250IHBvcCB1cCBldmVuIHRob3VnaCB5b3UgZW50ZXJlZC4gCkEgU291dGhlcm4gZ2VudGxlbWFuIG9mIG1lYW5zIGFuZCBlZHVjYXRpb24sIERvYyB3YXMgc3RydWNrIGJ5IG9uZSB0cmFnZWR5IGFmdGVyIGFub3RoZXIuIApMYSBwYXJvbGUgYXV4IGdvdXJtYW5kZXMKQ29udHJpYnV0ZSBpZiB5b3UgY2FuLCB2b3RlIG9uIHRoZSBjb250ZW50IHlvdSBsaWtlLCBhbmQgcmVtZW1iZXIgdG8gc3Vic2NyaWJlIQpJdCByZWR1Y2VzIHRoZSBjcmF2aW5nIGZvciBuaWNvdGluZSBhbmQgaGVscHMgdG8gY291bnRlcmFjdCB0aGUgc2x1Z2dpc2ggZmVlbGluZyBtYW55IHBlb3BsZSBoYXZlIHdoZW4gdGhleSBmaXJzdCBnaXZlIHVwIGNpZ2FyZXR0ZXMuIApUYWxrIGFib3V0IHNleHVhbCBoYXJhc3NtZW50IHdhaXRpbmcgdG8gaGFwcGVuLiAKRmVhdHVyaW5nIHRoZXJlbGVhc2luZyBvZiB0aGUgemVybyBJQlUgaGF6eSBJUEEgdGl0bGVkOiBIYXMgdGhhdCBsaW5lIGV2ZXIgd29ya2VkIGZvciB5b3UgYmVmb3JlPyEgT25lIGRvbGxhciBvZiBlYWNoIHBpbnQgc29sZCBiZW5lZml0cyBQaW5rIEJvb3RzIFNvY2lldHkgYW5kIGFub3RoZXIgJDEgd2lsbCBiZSBkb25hdGVkIHRvIEFuZCBOb3cgU2hlIFJpc2VzLiBUaGUgZXZlbnQgYWxzbyBmZWF0dXJlcyBESiB0dW5lcywgcGVyZm9ybWFuY2UgZnJvbSBBc2hsZXkgRHVCb3NlLCBhbmQgYSBib29rIGRyaXZlIGZvciBsb2NhbCBsaWJyYXJpZXMgYW5kIHNoZWx0ZXJzLiBUaGlyZCBTdC4sIE1pbm5lYXBvbGlzOyA2MTIgNDU0IDAyNTguCkluIE1ham9yYSBNYXNrLCBMaW5rIGFycml2ZXMgaW4gVGVybWluYSBhbmQgaXMgdG9sZCB0aGF0IGluIHRocmVlIGRheXMgYSB2aWxsYWluIGtub3duIGFzIHRoZSBTa3VsbCBLaWQgd2lsbCBjYXVzZSB0aGUgbW9vbiB0byBjcmFzaCBpbnRvIHRoZSBsYW5kLCBraWxsaW5nIGFsbCBvZiBpdHMgaW5oYWJpdGFudHMgaW5jbHVkaW5nIExpbmsuIEluIHJlYWwgdGltZSwgaXQgdGFrZXMgYWJvdXQgYW4gaG91ciBmb3IgdGhyZWUgZGF5cyBpbiB0aGUgZ2FtZSB0byBwYXNzLiBJZiB0aGUgbW9vbiBjcmFzaGVzLCBpdCBnYW1lIG92ZXIgYW5kIHlvdSBoYXZlIHRvIHN0YXJ0IGJhY2sgYXQgZGF5IDEuLiAKTW9uaWNhIEdvbWV6IGlzIHRoZSBGb3VuZGVyIGFuZCBQcmVzaWRlbnQgb2YgVGhlIENvbmNpZXJnZSBDbHViLCBDYW5hZGEncyBsdXh1cnkgcHJlbWl1bSBldmVudHMgYW5kIHN0YWZmaW5nIGFnZW5jeS4gR29tZXogaXMgYSB2aXNpb25hcnkgYW5kIHBlcmZlY3Rpb25pc3Qgd2hvIGlzIGludGVudGlvbmFsbHkgaGFuZHMgb24gd2l0aCBhbGwgcHJvamVjdHMuIEZyb20gb3ZlcnNlZWluZyBidXNpbmVzcyBkZXZlbG9wbWVudCwgc2FsZXMsIGlkZWF0aW9uLCBjbGllbnQgcmVsYXRpb25zaGlwcywgYnVkZ2V0IG1hbmFnZW1lbnQgYW5kIG9uIGJvYXJkaW5nLCBzaGUgZG9lcyBpdCBhbGwgd2l0aCBwYXNzaW9uLiBJbiBqdXN0IHNpeCB5ZWFycywgc2hlIGhhcyBncm93biBUaGUgQ29uY2llcmdlIENsdWIgYnkgY3JlYXRpbmcgbWVtb3JhYmxlIGV4cGVyaWVuY2VzIGZvciBDYW5hZGEncyB0b3AgdGllciBicmFuZHMgaW5jbHVkaW5nIENhZGlsbGFjIEZhaXJ2aWV3IE1hbGxzLCBIUCwgYW5kIExWTUggcHJvcGVydGllcyBpbmNsdWRpbmcgR3VlcmxhaW4sIFNlcGhvcmEgYW5kIENoYXJ0b24gSG9iYnMuIEFzIGEgZmVhcmxlc3MgZW50cmVwcmVuZXVyIGFuZCB0cmFpbGJsYXplciwgR29tZXogaXMga25vd24gaW4gdGhlIGluZHVzdHJ5IGFzIHRoZSBmb3JjZSBiZWhpbmQgc29tZSBvZiBDYW5hZGEncyBtb3N0IHByZW1pdW0gY29uc3VtZXIgZXZlbnRzLgpUaGUgcnVsZXMgb2YgdGhlIGdhbWUgd2VyZSBkaWZmZXJlbnQgaW4gRXVyb3BlLCBzbyBpbiB0aGUgMTkwNCBPbHltcGljIEdhbWVzIGluIFN0LiAKWW91IGFsc28gbWF5IHRlYWNoIGJhc2ljIGZpcnN0IGFpZCBza2lsbHMgYW5kIHRoZSBIZWltbGljaCBtYW5ldXZlci4gVGhlIGluc3RydWN0b3IgZ2l2ZXMgZGVtb25zdHJhdGlvbnMgYW5kIGFsbG93cyB0aGUgcGFydGljaXBhbnRzIHRvIHByYWN0aWNlIHdpdGggdGhlIG1hbm5lcXVpbiBhbmQgb25lIGFub3RoZXIuIApCdXQgc2hlIGFsc28gbmVlZHMgdG8ga25vdyB0aGF0IGdldHRpbmcgcHJlZ25hbnQgaXMgbm90IGEgdGhyaWxsIHJpZGUsIGl0IG1lYW5zIHNoZSBoYXZlIG5vIG1vcmUgZXh0cmEgY2FzaCBvciBib3Jyb3dlZCBwcm9wZXJ0eSBmcm9tIHlvdSBiZWNhdXNlIHRoYXQgYWxsIGdvaW5nIHRvIHRoZSBiYWJ5Li4gCk1zLiBEaWNraW5zb24sIHdobyB3aWxsIG9ubHkgc2F5IHNoZSBpcyBsZWF2aW5nIHRvIGZvY3VzIG9uIGhlbHBpbmcgZW50cmVwcmVuZXVycyBpbiBhIG5ldyB3YXksIG9uZSB0aGF0IHdpbGwgYmUgc2VwYXJhdGUgZnJvbSwgYnV0IGNvbm5lY3RlZCB0bywgVmVudHVyZSBDb21tdW5pY2F0aW9ucyBhbmQgWW91IEluYy4sIHdvdWxkIGNlcnRhaW5seSBsaWtlIHRvIHNlZSBtb3JlIHdvbWVuIG9uIHRoZSBEZW4uIFRoYXQgd291bGQgYmUgYXdlc29tZS4gSXQgYWx3YXlzIGdvb2QgdG8gYnJpbmcgZGlmZmVyZW50IHBlcnNwZWN0aXZlcyB0byBoZWxwIHBlb3BsZSBzZWUgdGhlIGRpZmZlcmVudCB0eXBlIG9mIGludmVzdG9ycy4gSSBkb24gdGhpbmsgdGhleSBuZWVkIGFueSBtb3JlIHJlcHJlc2VudGF0aXZlcyBmcm9tIEJheSBTdHJlZXQuIEFuZCB0aGF0IG9uZSBvZiB0aGUga2V5IHJlYXNvbnMgSmltIFRyZWxpdmluZywgdGhlIG9ubHkgb3JpZ2luYWwgZHJhZ29uLCBrZWVwcyBjb21pbmcgYmFjay4gVGhhdCBhbmQgdGhlIGZhY3QgaGUgc3RpbGwgaGF2aW5nIGZ1bi4KIkJJQ1lDTEUhIi4gClRoZSBhbnN3ZXIgaGVyZSB3aWxsIGluY2x1ZGUgTGFkeSBHYUdhJ3Mgb2ZmaWNpYWwgc29uZ3MsInVucmVsZWFzZWQiIHNvbmdzLCBzb25ncyBmZWF0dXJpbmcgR2FHYSwgImR1cGxpY2F0ZSIgcGVyZm9ybWFuY2Vzd2hpY2ggYXJlIHVuaXF1ZSB3aXRoaW4gdGhlbXNlbHZlcywgYSB3ZWxsIGtub3duIEdhR2EgbWVkbGV5ICg1MikgdGhyZWUgY292ZXJzIGJ5IGxpc3RpbmcgZWFjaCBvbmUgYmVsb3cuIApSdW4gaXQgVXAgUmVubyB3aWxsIGJlIHRha2luZyBwbGFjZSBvbiBPY3RvYmVyIDE5dGggdGlsbCBPY3RvYmVyIDI5dGguIApBIENBU1RMRUJBUiBjYXNpbm8gb3duZXIgaGFzIGJlZW4gb3JkZXJlZCBieSB0aGUgQ2lyY3VpdCBDb3VydCB0byBjbG9zZSBkb3duIGhpcyBidXNpbmVzcyBwZW5kaW5nIHRoZSBvdXRjb21lIG9mIGEgcGxhbm5pbmcgYXBwbGljYXRpb24uIFByb3ByaWV0b3IsIE1yIE5pYWxsIE11bGhvbGxhbmQsIGhhZCBvcGVuZWQgdGhlIENhc3RsZSBDYXNpbm8gaW4gbGF0ZSBTZXB0ZW1iZXIgd2l0aG91dCByZWNlaXZpbmcgcGxhbm5pbmcgcGVybWlzc2lvbiBmb3IgYSBjaGFuZ2Ugb2YgdXNlIG9mIHRoZSBwcmVtaXNlcyBhdCBVbml0IDEgb2YgTWNIYWxlIEJ1c2luZXNzIFBhcmsuLiAKIldlIGNhbiBvbmx5IHByb3ZpZGUgY29ycmVsYXRpb24sIG5vdCBwcm92ZSBjYXVzYXRpb24sIGJ1dCBpdCB3b3VsZCBzZWVtIHRoYXQgd2F0Y2hpbmcgcG9ybiBtb3JlIGZyZXF1ZW50bHkgaGVscHMgc2hvdyB1c2VycyB3aGF0IHNleHVhbGl0eSBjYW4gYmUsIiB4SGFtc3RlciB2aWNlIHByZXNpZGVudCBBbGV4IEhhd2tpbnMgdGVsbHMgVGhlIFBvc3QuICJUaGUgbW9yZSBwb3JuIHlvdSB3YXRjaCwgdGhlIG1vcmUgeW91IG1heSB0aGluaywgJ0hleSwgdGhhdCdzIGFjdHVhbGx5IHNvbWV3aGF0IG9mIGEgdHVybiBvbi4gTWF5YmUgSSdtIG5vdCBhcyB0b3RhbGx5IHN0cmFpZ2h0LCBvciBnYXksIGFzIEkgdGhvdWdodC4gdGhlcmUncyBhIHNob2NrZXIgdG8gY29tZSBmcm9tIHRoZSBzdHVkeSBmb3IgSGF3a2lucywgaXQncyB0aGF0IGJpc2V4dWFsaXR5IGlzIGEgbG90IG1vcmUgY29tbW9uIHRoYW4gZXZlbiBoZSB0aG91Z2h0LiAiSnVzdCBsaWtlIGluIHJlYWwgbGlmZSwgd2hlcmUgeW91IGNhbid0IGFsd2F5cyBqdWRnZSB3aG8ncyBiaXNleHVhbCBiYXNlZCBvbiB3aG8gdGhleSBhcmUgZGF0aW5nLCIgc2F5cyBIYXdraW5zLCAid2UgdW5kZXJlc3RpbWF0ZSB0aGUgc2l6ZSBvZiB0aGUgY29tbXVuaXR5LiIKIkkgdXNlZCB0aGUgb25seSBsZWdhbCB0YWN0aWMgdGhhdCBJIGhhZCB0byBicmluZyBwcmVzc3VyZSB0byBiZWFyIHRvIGdldCB0aGUgc2lnbnMgZG93bi4iSGUgYWRkZWQsICJUaGUgaXNzdWUgd2FzIG5ldmVyIHRoZSBicm90aGVscy4gSSBkaWQgd2hhdCBldmVyeSByZXNwb25zaWJsZSBlbGVjdGVkIG9mZmljaWFsIHNob3VsZCBkbywgd2hpY2ggaXMgZ2V0IHNvbWV0aGluZyBkb25lLiJVbmRlciBhIGNvbXByb21pc2UgYnJva2VyZWQgYnkgUmVubyBiYXNlZCBicm90aGVsIGxvYmJ5aXN0IEdlb3JnZSBGbGludCwgUmljaGFyZHMgb24gVHVlc2RheSBoYWQgYWxyZWFkeSByZW1vdmVkIHR3byBhZHZlcnRpc2VtZW50cyBmZWF0dXJpbmcgbmFrZWQgd29tZW4gdGhhdCBhZG9ybmVkIHRoZSBvdXRzaWRlIG9mIGhpcyBLaW5nZG9tIEdlbnRsZW1lbidzIENsdWIsIGEgY2FzdGxlIHNoYXBlZCBzdHJ1Y3R1cmUgdGhhdCBncmVldHMgdmlzaXRvcnMgdG8gUGFocnVtcCBhcyB0aGV5IGVudGVyIG9uIFN0YXRlIFJvdXRlIDE2MC5UaGUgY2x1Yiwgd2hpY2ggZmVhdHVyZXMgYWxsIG51ZGUgZmVtYWxlIGRhbmNlcnMsIGhhcyBjYXVzZWQgbXVjaCBhbmd1aXNoIGFtb25nIFBhaHJ1bXAgcmVzaWRlbnRzLCB3aG8gc2F5IFJpY2hhcmRzIHNvbGQgdGhlbSBhIGJpbGwgb2YgZ29vZHMgd2hlbiBoZSBwcm9taXNlZCB0byBidWlsZCBhIG1lcmUgYmFyIGFuZCByZXN0YXVyYW50IG9uIHRoZSBzaXRlLkZsaW50IHNhaWQgUmljaGFyZHMgaGFkIGFsc28gIm1hZGUgYXJyYW5nZW1lbnRzIiB0byByZW1vdmUgdHdvIDUwIGZvb3Qgd2lkZSBiaWxsYm9hcmRzIGFsb25nIDE2MCBhbmQgdG8gdGVhciBkb3duIGEgc21hbGwgbWFzc2FnZSBwYXJsb3Igb24gdGhlIEtpbmdkb20gcHJvcGVydHkuIApJZiB0aGUgUEdBIFRvdXIgaXMgcGxheWluZywgYnV0IG5vYm9keSBpcyBob21lIHRvIHdhdGNoLCBpdCBtZWFucyBoZSBpbiB0b3duLiBXaHkgZG9lcyBoZSBsZWF2ZSB0aGUgVFYgb24/IEkgZG9uIGtub3cuIApTbyBkb2VzIHRoYXQgbWVhbiB0aGlzIHdhcyBhIHBsb3kgdG8gbWFrZSBhIHBlcnNvbiBjb21taXQgYSBjcmltZSB0aGF0IHdhc24gZ29pbmcgdG8gaGFwcGVuIGluIHRoZSBmaXJzdCBwbGFjZS4gClNpZ2gsIHllcyBOZXd0b25pYW4gTWVjaGFuaWNzIGFuZCBPcHRpY3MsIGFuZCBRdWFudHVtIE1lY2hhbmljcywgYW5kIEdlbmVyYWwgUmVsYXRpdml0eSwgYW5kIENoZW1pc3RyeSwgYW5kIEJpb2xvZ3ksIGFuZC4KSG93ZXZlciwgeW91ciBzdWJtaXNzaW9uIGhhcyBiZWVuIHJlbW92ZWQgZm9yIHRoZSBmb2xsb3dpbmcgcmVhc29uKHMpOllvdXIgaGVhZGxpbmUgbXVzdCBiZSBjb21wcmlzZWQgb25seSBvZiB0aGUgZXhhY3QgY29waWVkIGFuZCBwYXN0ZWQgaGVhZGxpbmUgb2YgdGhlIGFydGljbGUgICBzZWUgb3VyIHJ1bGUgaGVyZS4pIFdlIHJlY29tbWVuZCBub3QgdXNpbmcgdGhlIFJlZGRpdCBhIHRpdGxlIGFzIGl0IG1heSBub3QgZ2l2ZSB0aGUgZXhhY3QgdGl0bGUgb2YgdGhlIGFydGljbGUuIApJIGZlZWwgYXdmdWwgZm9yIHRob3NlIHRoYXQgY2FuIGxlYXZlIGFuZCBoYXZlIG5vIGNob2ljZS4gSXQgZGVmaW5pdGVseSBub3Qgc28gYmFkIGZvciBldmVyeW9uZSBidXQgSSBwZXJzb25hbGx5IHNlZW0gdG8gaGF2ZSBhIHByZXR0eSBiYWQgcmVhY3Rpb24gdG8gaXQgYW5kIGhhdmUgY29uc3RhbnQgaGVhZGFjaGVzLCBiYWQgZmF0aWd1ZSwgcGFpbmZ1bCB0aHJvYXQgZXRjIGV0Yy4gSXQgdW5saXZhYmxlIHRiaC4KSGUgaW1wbGVtZW50ZWQgYSBsb3Qgb2YgbGF3cyBhbmQgcmVmb3JtcyB3aGljaCBmYXZvdXJzIHRoZSBhbWVyaWNhbiBwb3B1bGF0aW9uIGludGVyZXN0cy4gVGhlIG5hdGlvbmFsIGRlYnQgYW5kIGJ1ZGdldCBkZWZpY2l0IGlzIGxpa2VseSBhbiBhcmVhIHdoaWNoIHdpbGwgYmUgbW9yZSBmb2N1c2VkIG9uIGluIHRoZSBpbmNvbWluZyBjb3VwbGUgb2YgeWVhcnMsIEkgZ3Vlc3MuIEV2ZXJ5IHBvbGl0aWNhbCBhcmVhIGNhbiBiZSBwcmlvcml0aXplZCBzaW11bHRhbmVvdXNseSwgaXQgYWxsIGFib3V0IHByaW9yaXRpemluZyBwcm9wZXJseSBiYXNlZCBvbiB0aGUgY3VycmVudCBzb2NpZXRhbCBzaXR1YXRpb24uClBhcGVycyB3aGljaCBhcmUgcmVwbGljYXRpb25zIG9mIGFscmVhZHkgd2VsbCBlc3RhYmxpc2hlZCBmaW5kaW5ncyBvciBvZmZlciBsaXR0bGUgbmV3IGluZm9ybWF0aW9uLgpUaGF0IHNhaWQsIEkgbm90IHVuaGFwcHkgb3IgdW5ncmF0ZWZ1bCBmb3IgTW9hbmEgYmVpbmcgbWFkZS4gCkNvb2wsIGxlZnRpc3RzISBJIGRvbiBsaWtlIEJvbHNvbmFybywgSSBhY3R1YWxseSBoYXRlIGhpbSwgYnV0IHRoZSBvbmx5IHRoaW5nIHdvcnN0IHRoYW4gQm9sc29uYXJvIGFyZSB0aGUgdHVyZHMgaW4gdGhlIGV4dHJlbWUgbGVmdCB0aGF0IGtlZXAgd3JpdGluZyBhcnRpY2xlcyBsaWtlIHRoaXMuClN1cHBvc2UgeW91ciBuZXQgaW5jb21lIGlzICQzMCwwMDAsIGZvciBleGFtcGxlLiBZb3Ugd291bGQgbmVlZCBhdCBsZWFzdCAkOTAwIG9mIG1lZGljYWwgZXhwZW5zZXMgdG8gcmVhY2ggdGhlIHRocmVlIHBlciBjZW50IHRocmVzaG9sZCBiZWZvcmUgdGhlIGZpcnN0IGRvbGxhciBjb3VudHMuIEluIHRoaXMgY2FzZSwgJDEsMDAwIG9mIG1lZGljYWwgZXhwZW5zZXMgd291bGQgcmVzdWx0IGluIGEgcGFsdHJ5ICQyNiBvZiB0YXggc2F2aW5ncyBiZWNhdXNlIG9ubHkgJDEwMCBvZiBleHBlbnNlcyBleGNlZWRzIHRoZSAkOTAwIHRocmVzaG9sZC4uIAoiVGhlIHBlYWsgd2FzIEp1bHkgb2YgdGhpcyB5ZWFyIGF0ICQzNSBtaWxsaW9uLCIgT2xpdmVyIHNhaWQuICJUaGV5J3ZlIGJlZW4gYnJpbmdpbmcgaW4gcmlnaHQgYXQgJDMwIG1pbGxpb24gdG8gJDM1IG1pbGxpb24gc2luY2UgRmVicnVhcnkuIFRoZXkgd2lsbCBoaXQgJDI5IG1pbGxpb24sICQzMiBtaWxsaW9uIHRoZW4gJDMwIG1pbGxpb24uIgpXaXRoIFlha3V6YSAzLzQvNSByZWxlYXNlZCBvbiBQUzMsIHRoZXkgd2VyZW4gYXMgbGltaXRlZCBieSB0aGUgaGFyZHdhcmUgYXMgdGhleSB3ZXJlIHByZXZpb3VzbHkuIFNvIGVzc2VudGlhbGx5IHRoZXkganVzdCBiZSBicmluZ2luZyB0aG9zZSBnYW1lcyB0byB0aGUgRHJhZ29uIEVuZ2luZSwgd2hpY2ggaXMgd2hhdCA2IGFuZCBLMiBydW4gb24uCkkgd291bGQgaW1hZ2luZSB0aGF0IG5vdCBtYW55IG9mIHRoZSBsYWRpZXMgZmVhdHVyZWQgaW4gdGhlIGdhbGxlcnkgd291bGQgYmUgYXZhaWxhYmxlIGluIHRoZSBzaG9wLiAKSSBhY3R1YWxseSBlbmpveSBjdXJsaW5nIG9uY2UgSSBnaXZlIGl0IGEgY2hhbmNlLCB0aG91Z2ggSSdtIGZyb20gdXAgTm9ydGggd2hlcmUgY3VybGluZyB3YXMgYXMgYmlnIGFzIGhvY2tleS4gSSBhbSBtaWxkbHkgYWR2ZXJzZSB0byBwaXJhY3ksIHRob3VnaCBJIGhhdmUgZXhjZXB0aW9ucyBhbmQgSSB3YXNuJ3QgYWx3YXlzIG9wcG9zZWQgdG8gaXQuIEkgdGhpbmsgYXMgeW91IGdldCBlbGRlcmx5ICg0MCs/IExvbCkgeW91IGNhbiBhZmZvcmQgdG8gdGhyb3cgbW9uZXkgYXQgc29tZSB0aGluZ3MgYW5kIGRvbid0IGhhdmUgdGhlIHRpbWUgZm9yIHBpcmFjeSwgc28gdGhlIG9waW5pb25zIHNoaWZ0Li4gCkZvciB0aGUgc2xhc2hlcywgMiB2cyAzIHNlZW1zIHRvIGJlIGJhc2VkIG9uIHdoZXRoZXIgeW91IGluc2lkZSB0aGUgcmFuZ2Ugb2YgdGhlIGJhY2sgYW5kIGZvcnRoIHNsYXNoZXM7IGlmIHlvdSBvdXRzaWRlLCBpdCBjYW5jZWxzIHRoZSAzIHNsYXNoIHNlcXVlbmNlIGVhcmx5LiBZb3UgY2FuIGV4cGxvaXQgdGhpcyBieSBqdXN0IGp1bXBpbmcgb3V0c2lkZSBvZiB0aGUgaW5pdGlhbCByYW5nZS4gCkZhciBtb3JlIGxpa2VseSB0aGFuIHRoZSBiaXphcnJlIGNoYWluIG9mIGV2ZW50cyB0aGF0IGhhdmUgb2NjdXJyZWQgdGhhdCBpZiB0cnVlIG1lYW5zIFNldW5ncmkgaXMgYW4gYWN0dWFsIHBpbXAgd2l0aCB0aWVzIHRvIG9yZ2FuaXplZCBjcmltZSBhbmQgdGhlIFNLIGJ1c2luZXNzIGVsaXRlLiAKU2kgdG91dGVmb2lzIG9uIGp1Z2UgYm9uIGRlIGwnZW5mZXJtZXIgIHZpZS4gCkRlciBTaG93ZG93bi4gV2VubiBkaWUgV2V0dGVuIGFiZ2VsYXVmZW4gc2luZCwgZGFubiBmb2xndCBkZXJTaG93ZG93bi4gQmVpIGlobSB3ZXJkZSBkaWUgYmVzdGVuIGZuZiBQb2tlciBCbHR0ZXIsIGRpZSBkaWUgYnJpZ2dlYmxpZWJlbmVuIFBva2Vyc3BpZWxlciBkdXJjaCBLb21iaW5hdGlvbiBpaHJlciAyIFBvY2tldCBLYXJ0ZW4gdW5kIGRlciA1IEdlbWVpbnNjaGFmdHNrYXJ0ZW4gYmlsZGVuIGtubmVuLCB2ZXJnbGljaGVuLiBEZW4gUG90IGVyaGx0IGRlciBQb2tlcnNwaWVsZXIgbWl0IGRlciBoY2hzdGVuIFdlcnRpZ2tlaXQuIEVzIGthbm4gYXVjaCB2b3Jrb21tZW4sIGRhc3N6d2VpIG9kZXIgbWVocmVyZSBTcGllbGVyIGVpbiBQb2tlcmJsYXR0IG1pdCBnbGVpY2hlciBXZXJ0aWdrZWl0IGhhYmVub2RlciBkaWUgNSBHZW1laW5zY2hhZnRza2FydGVuIG1hY2hlbiBkaWUgYmVzdG1nbGljaGUgU3BpZWxrb21iaW5hdGlvbiBhdXMuIFdlbm4gZGllcyBhdWZ0cml0dCwgZGFubiB0ZWlsZW4gc2ljaCBkaWUgUG9rZXJzcGllbGVyZGVuIFBvdC4KVW5mb3J0dW5hdGVseSwgdW5saWtlIFRob21hcyBGcmllZG1hbidzIGhlbGljb3B0ZXIgdmlzaXRzIHRvIEFmZ2hhbmlzdGFuLCBJIGRpZCBub3QgaGF2ZSBhbiBhcm1lZCBlc2NvcnQgYW5kIGEgbmFycmF0aXZlIHNwZXdpbmcgbWFjaGluZSBhY2NvbXBhbnlpbmcgbWUgdG8gTHlhcmkuIApUaGlzIHBhc3QgMyBtb250aHMsIEkndmUgdGFrZW4gbXVsdGlwbGUgYnJlYWtzLCBub3QgcGxheWVkIGFzIG11Y2gsIHN0dWRpZWQgbW9yZSwgcmV2aWV3aW5nIGhhbmRzIHcgZnJpZW5kcy9jb2FjaCBhbmQgbW9zdGx5IHBsYXlpbmcgZ3JlYXQgICAxOCBidXkgaW5zLiAKQ29tcGFyZSB0aGF0IHRvIGFuIGFwcHJveGltYXRlbHkgMjQgbW9udGggY29udmVudGlvbmFsIGNvbnN0cnVjdGlvbiB0aW1lZnJhbWUgZm9yIGEgc2ltaWxhciBwcm9qZWN0LiBDb25zdHJ1Y3Rpb24gZGlzcnVwdGlvbiB0byB0aGUgc3Vycm91bmRpbmcgbmVpZ2hib3VyaG9vZCBpcyBhbHNvIHNpZ25pZmljYW50bHkgcmVkdWNlZC4uIApUbyBwdXQgaXQgYW5vdGhlciB3YXksIGRlZXAgbGlua2luZyB1bmRlcnN0YW5kcyB3aGljaCB0eXBlcyBvZiBsaW5rcyBhcmUgdXRpbGl6ZWQgYnkgd2hpY2ggYXBwcyBbc291cmNlOiBMYXJkaW5vaXNdLiBUb2RheSwgaWYgeW91IGhhdmUgYSBiYW5raW5nIGFwcCBpbnN0YWxsZWQgb24geW91ciBwaG9uZSwgYW5kIHlvdSByZWNlaXZlIGFuIGVtYWlsIG5vdGlmeWluZyB5b3UgdGhhdCB5b3VyIG9ubGluZSBzdGF0ZW1lbnQgaXMgYXZhaWxhYmxlLCBjbGlja2luZyBvbiB0aGUgIlZpZXcgeW91ciBzdGF0ZW1lbnQiIGxpbmsgaW4gdGhlIGVtYWlsIHdpbGwgdGFrZSB5b3UgdG8geW91ciBiYW5rJ3Mgd2Vic2l0ZSwgd2hlcmUgeW91IG5lZWQgdG8gZ28gdGhyb3VnaCB0aGUgc3RhbmRhcmQgbG9naW4gcHJvY2VzcyBhbmQgbmF2aWdhdGUgdG8gdGhlIHN0YXRlbWVudCBvbmxpbmUuIFdpdGggZGVlcCBsaW5raW5nLCBjbGlja2luZyBvbiB0aGUgc2FtZSBsaW5rIGluIGFuIGVtYWlsIG9uIHlvdXIgcGhvbmUgd291bGQgaW5zdGVhZCBsYXVuY2ggeW91ciBiYW5raW5nIGFwcCwgdGFraW5nIHlvdSBkaXJlY3RseSB0byB0aGUgaW5mb3JtYXRpb24geW91J3JlIGxvb2tpbmcgZm9yLgoiSGUgd2FzIGFsc28gYSBsb2NhbCBib3ksIGhlIHdhcyBib3JuIGFuZCBicmVkIGhlcmUgKFlhcnJhd29uZ2EgTXVsd2FsYSksIHNvIHdlIHdlcmUgcHJldHR5IGtlZW4gdG8gZG8gc29tZXRoaW5nIGZvciB0aGUgZmFtaWx5LiAiVGhlIGd1dHMgb2YgdGhlIGRheSBpcyBhYm91dCBnZXR0aW5nIGZ1bmRzIGZvciBoaXMgZmFtaWx5IHRvIG1ha2Ugc3VyZSB0aGV5J3JlbG9va2VkIGFmdGVyLiIgTXIgTGV2ZXNxdWUgbGVmdCB0aGUgc2tpIGNsdWJ0byBqb2luIHRoZSBTUyBDbHViIGF0IHRoZSBzdGFydCBvZiAyMDEwLCB3aGVyZSBoZSB3b3JrZWQgdW50aWwgaGlzIGRlYXRoLiAKMTkgMjAxNCAuIE1hbmdlRW5naW5lIEFETWFuYWdlciBQbHVzIDYuMSAuIApNb3N0IHZpZXcgaXQgYXMgYW4gdW5nbGFtb3JvdXMgYnV0IHdlbGNvbWUgb3Bwb3J0dW5pdHkgdG8gY2hhbmdlIHRoZWlyIGxpdmVzLiAKU3RpY2tzIHUKSnVkZ2UgYWNjZXB0ZWQgdGhlIEFkdWx0IFByb2JhdGlvbiBhbmQgUGFyb2xlIHJlY29tbWVuZGVkIHNlbnRlbmNlIG9mIDEzNSBkYXlzIGluIHByaXNvbi4gCkluc3RlYWQgQ29uZ3Jlc3MgY3JlYXRlZCBhIGJlc3Bva2UsIFB1ZXJ0byBSaWNvIG9ubHkgcHJvZ3JhbSBjYWxsZWQgTkFQIChOdXRyaXRpb25hbCBBc3Npc3RhbmNlIFByb2dyYW0pIHdoaWNoIGlzIGEgYmxvY2sgZ3JhbnQgYW5kIHRodXMgY2FwcGVkIGF0IGEgY2VydGFpbiB0b3RhbCBsZXZlbCBpcnJlc3BlY3RpdmUgb2YgYWN0dWFsIG5lZWQuLiAKVGhhdCBUcnVtcCB0d2VldCBvbiBDSElQVHJ1bXAncyB0d2VldCBvbiBDSElQIHRocmV3IGEgd3JlbmNoIGludG8gbmVnb3RpYXRpb25zLCB0aG91Z2ggaXRzIGV4YWN0IGVmZmVjdHMgd2VyZW4ndCBpbW1lZGlhdGVseSBjbGVhciBpbiB0aGUgbW9tZW50cyBhZnRlciBpdHMgZGVsaXZlcnkuIFNlbmF0ZSBHT1AgbGVhZGVycyB3aWxsIG5lZWQgcG9zc2libHkgbW9yZSB0aGFuIGEgZG96ZW4gRGVtb2NyYXRzIHRvIHNpZ24gb24gdG8gbWVhc3VyZSB0byBmdW5kIHRoZSBnb3Zlcm5tZW50IGJhc2VkIG9uIFNlbmF0ZSBydWxlcyByZXF1aXJpbmcgNjAgdm90ZXMgdG8gYnJlYWsgYSBmaWxpYnVzdGVyIGFuZCBhZHZhbmNlIChtb3JlIG9uIHRoYXQgYmVsb3cpLgpJIHN0aWxsIGxvdmUgdGhlIGNvbmNlcHQuIFNwZWxsIGNoZWNrIHNheXMgc3ByYWRkbGUgaXNuIGEgd29yZCwgd2VsbCBpdCBpcyB3aGVyZSBJIGZyb20uLiAKT2theSwgbm93IHlvdSBrbm93IHlvdSBuZWVkIHRoZSBTdWl0ZWQgRW1lcmFsZCBUZXhhcyBIb2xkZW0gUG9rZXIgVGFibGUgQ2xvdGggZm9yIHlvdXIgZ2FtZSByb29tLiBJdHMgZGVzaWduIGRvZXMgbm90IGRpc3RyYWN0IGZyb20gcG9rZXIgcGxheWluZyBsaWtlIHNvbWUgb3RoZXIgdGFibGVjbG90aHMgdGhhdCBhcmUgdG9vIGJyaWdodCBhbmQgbG91ZCBtYWtpbmcgaXQgZGlmZmljdWx0IGZvciBwb2tlciBwbGF5ZXJzIHRvIHNlZSB0aGUgVGV4YXMgSG9sZGVtIGdhbWUuIApTb21laG93IGVkdWNhdGlvbiBoYXMgZ290dGVuIE1PUkUgZXhwZW5zaXZlIHNpbmNlIGNvbXB1dGVycyBhbmQgdGhlIGludGVybmV0IG1hZGUgYWNjZXNzaW5nLCBwcm9jZXNzaW5nLCBhbmQgc3RvcmluZyBpbmZvcm1hdGlvbiB0cmlsbGlvbnMgb2YgdGltZXMgbW9yZSBlZmZpY2llbnQuClRoZWlyIHN0YXR1cyBpcyBpbnRlcm5hdGlvbmFsbHkgcmVjb2duaXplZC4uIApUaGluayBhIG5vdGVib29rIHdoZXJlIGFsbCB0aGVpciBjbGFzcyB3b3JrLCBpbmNsdWRpbmcgZ3JvdXAgd29yayBhbmQgbGFicywgZ28uIFRoZSB0cmFkaXRpb25hbCBtb2RlbCBpcyB0aGF0IHRoZSByaWdodCBzaWRlIGlzICJpbnB1dCIgKG5vdGVzKSBhbmQgdGhlIGxlZnQgc2lkZSBpcyAib3V0cHV0IiAodGhpbmsgZGlhZ3JhbXMsIHN1bW1hcnkgaW5mbywgc3R1ZGVudCBjcmVhdGVkIGdyYXBoaWNzKS4gSSdtIHRoaW5raW5nIG9mIG1vZGlmeWluZyBpdCB0byBiZXR0ZXIgZml0IG15IGNsYXNzJ3MgbW9kZWwgd2hpY2ggaXMgbW9zdGx5IGdyb3VwIHdvcmsuIEkgdGhpbmsgdGhleSdkIGJlIGhlbHBmdWwgZnJvbSB0aGUgcGVyc3BlY3RpdmUgb2YgbGVhcm5pbmcgaG93IHRvIGtlZXAgYSBsYWIgbm90ZWJvb2suClF1ZWJlYyBqdWRnZSByZWplY3RzIEpvcmRhbiBtb3Rpb24gdG8gZW5kIHRyaWFsIG9mIGV4CldoZXJlIGRvIG9iamVjdGl2ZSBtb3JhbCB0cnV0aHMgZW50ZXIgdGhlIGNoYWluIG9mIGNhdXNhbGl0eT8gSG93IHdvdWxkIG11cmRlciBiZWluZyAib2JqZWN0aXZlbHkgaW1tb3JhbCIgY2F1c2UgaHVtYW5zIHRvIGhhdmUgdGhlIHRob3VnaHQgdGhhdCBtdXJkZXIgaXMgaW1tb3JhbD8gSG93IHdvdWxkIG11cmRlciBiZWluZyAib2JqZWN0aXZlbHkgbW9yYWwiIGNhdXNlIGh1bWFucyB0byBoYXZlIHRoZSB0aG91Z2h0IHRoYXQgbXVyZGVyIGlzIG1vcmFsPyBJZiBtb3JhbCB0cnV0aHMgY2FuIG5vdCBjYXVzYWxseSBpbmZsdWVuY2UgaHVtYW4gdGhvdWdodCwgdGhlbiBodW1hbiB0aG91Z2h0IGNhbiBvbmx5IG1pcnJvciBtb3JhbCB0cnV0aHMgdGhyb3VnaCBjb2luY2lkZW5jZS4uIAoiSSBoYXZlIGhhZCBtYW55IG1vbWVudHMgd2hlcmUgSSBoYXZlIGZlbHQgbGVzcyB0aGFuLCBmb3IgbWVyZWx5IGJlaW5nIGEgd29tYW4gYW5kIHRoZXNlIGFyZSBzb21lIG9mIHRoZSBsZWdpdCBjb21tZW50cyB0aGF0IGhhdmUgYmVlbiBzYWlkIHRvIG1lIGJvdGggcHJvZmVzc2lvbmFsbHkgYW5kIHBlcnNvbmFsbHkgYW5kIHNhZGx5IEkgc3RpbGwgcmVtZW1iZXIgdGhlbSB0b2RheSwiIHNoZSBzYWlkLgpTbyBmYXIsIEkgY3JlYXRlZCB0aGUgZm9sbG93aW5nIGNvdXJzZXM6ClVuIG1pbGxpb24gZGUgdmlzaXRldXJzIHNvbnQgYXR0ZW5kdXMgcGFyIGxlcyBvcmdhbmlzYXRldXJzIGRhbnMgY2V0dGUgbG9jYWxpdCBtcmlkaW9uYWxlIGRlIDYwLjAwMCBoYWJpdGFudHMgcXVpIGEgZGogdnUgbGUgbm9tYnJlIGRlIHRvdXJpc3RlcyBjcm90cmUgZGUgMTcwJSBlbnRyZSAyMDEwIGV0IDIwMTcuIEVsbGUgZXN0IGluc2NyaXRlIGF1IHBhdHJpbW9pbmUgbW9uZGlhbCBkZSBsJ1VuZXNjbyBkZXB1aXMgMTk5MywgY2UgcXVpIGEgY29udHJpYnUgIGFjY3JvdHJlIHNhIG5vdG9yaXQuIExhIGNpdCBhdSBwYXNzIGRvdWxvdXJldXgsIHF1YWxpZmllIGRhbnMgbGVzIGFubmVzIDE5NTAgZGUgImhvbnRlIG5hdGlvbmFsZSIgZW4gcmFpc29uIGRlIHNvbiBleHRybWUgcGF1dnJldCwgYSBhdWpvdXJkJ2h1aSByZXRyb3V2IHNhIGRpZ25pdCBlbiBzYXV2YW50IHNlcyBwYWxhaXMgYmFyb3F1ZXMgZXQgc2VzIGdsaXNlcyBydXBlc3RyZXMuIApIb3dldmVyLCBwcm90ZWlucywgYmFjdGVyaWEgYW5kIGNlbGx1bGFyIGRlYnJpcyBhcmUgbm90IHRveGlucy4gClRoYXQgaXMgYSB0ZXJyaWJsZSBhbmFsb2d5LCBhbmQgZG9lc24gZml0IGF0IGFsbC4gQ2hlYXRpbmcgaXNuIHdoYXQgd2UgdGFsa2luZyBhYm91dC4gCkJ1dCB0aGUgbGFyZ2VzdCBhbmQgYmVzdCB1bml0IGluIHRoZSBidWlsZGluZyAgIFN1c2FuIEd1dGZyZXVuZCdzIDIyIHJvb20gc3ByZWFkICAganVzdCBjYW4ndCBzZWVtIHRvIGZpbmQgYSBidXllci4gClJhbHBoIE1vcnNlIHdpbGwgYmUgdG9hc3RtYXN0ZXIuIFJlcC4gRGF2aXMgc3RhcnRlZCBoaXMgY2FyZWVyIGFzIGEgdGVhY2hlciwgdGhlbiBzdHVkaWVkIGxhdyBhbmQgYmVnYW4gcHJhY3RpY2UganVzdCBiZWZvcmUgV29ybGQgV2FyIG4uIEhlIHdhcyBmaXJzdCBlbGVjdGVkIHRvIENvbmdyZXNzIGluIGEgc3BlY2lhbCBlbGVjdGlvbiBpbiAxOTQ3IHRvIGZpbGwgdGhlIHZhY2FuY3kgY2F1c2VkIGJ5IHRoZSBkZWF0aCBvZiBSb2JlcnQgSy4gSGVucnkgb2YgSmVmZmVyc29uLiAKQW4gb2ZmaWNpYWwgZGlyZWN0bHkgZmFtaWxpYXIgd2l0aCB0aGUgcHJvY2VzcyBpbiByZWNlbnQgeWVhcnMsIHNheXMgb25lIHByZXZpb3VzIEpvaW50IENoaWVmcyBDaGFpcm1hbiByZWd1bGFybHkgbG9va2VkIG92ZXIgYXQgdGhlIENoaWVmIEp1c3RpY2UgYXQgdGhlIHRpbWUuIElmIGhlIGFuZCB0aGUgcmVzdCBvZiB0aGUgY291cnQgc3Rvb2QsIGl0IG11c3QgYmUgY29uc2lkZXJlZCBzdWZmaWNpZW50bHkgcG9saXRpY2FsbHkgbmV1dHJhbCwgYW5kIHRoZSBtaWxpdGFyeSBjaGllZnMgd291bGQgdGhlbiBzdGFuZC4uIApZb3Ugc2hvdWxkIHNlZSByZWxpZWYgaW4gYSBmZXcgaG91cnMuIApOZXZlciBhbiBvcnBoYW4sIGFzIGhlIGRlc2NyaWJlZCBoaW1zZWxmLCBoZSBoYXMgY291bnRsZXNzICJicm90aGVycyBhbmQgc2lzdGVycyIgZnJvbSBhY3Jvc3MgdGhlIGdsb2JlIGFuZCBjZXJ0YWlubHkgaW4gdGhpcyBDaXR5IG9mIEhhbWlsdG9uICAgbWFueSBvZiB3aG9tIGxvdmUgaGltIGFuZCB3b3VsZCBjYWxsIGhpbSBicm90aGVyLiBXaWxsIGJlIG1pc3NlZCBhbHNvIGJ5IE1vZSBTY2FsbHkgKGxpa2UgYSBzaXN0ZXIpLCBKb2FubmEgTWNDYWxsdW0gKGxpa2UgYSBkYXVnaHRlcikgYW5kIGJlc3QgZnJpZW5kcywgRG9yaXMgS29ub3cgYW5kIE1hcmsgTWFja2VzeS4gRG9uIHdhcyBhIGZvcm1lciBDaXR5IENvdW5jaWxsb3IgZm9yIFdhcmQgMyBhbmQgYSBsb25nIHRpbWUgZW1wbG95ZWUgb2YgdGhlIE1pbmlzdHJ5IG9mIExhYm91ciwgd2l0aCB0aGUgT2ZmaWNlIG9mIHRoZSBXb3JrZXIgQWR2aXNvci4gCkkgZmxpcCBteSAyIDggYW5kIGdldCB1cC4gCjMpR2V0IGEgYm9vdCBkcmllciAgbGVhdGhlciBib290cyB3aWxsIGxhc3QgMnggYXMgbG9uZywgYmUgNXggbW9yZSBjb21mb3J0YWJsZSwgYW5kIDEweCBsZXNzIHNtZWxseSBpZiB5b3UgZ2V0IHRoZW0gYm9uZSBkcnkgZXZlcnkgbmlnaHQuIFRoZXNlIHRoaW5ncyBjaGFuZ2VkIG15IGxpZmUgIG5vdyBJIHJvYW0gdGhlIG9pbCBwYXRjaGVzIG9mIHRoZSB3b3JsZCBzcHJlYWRpbmcgdGhlIEhvbHkgV29yZCBvZiB0aGUgQm9vdCBEcmllciBsaWtlIGEgd2hpdGUgdHJhc2ggSmVzdXMuIApMZSAxMiBqYW52aWVyIDIwMTEsIGxhIFByc2lkZW5jZSBkdSBTbmF0IGEgZW5yZWdpc3RyIHVuZSBwcm9wb3NpdGlvbiBkZSBsb2kgcmVsYXRpdmUsIHNlbG9uIHNvbiBpbnRpdHVsLCAgbCdhdHRudWF0aW9uIGRlIHJlc3BvbnNhYmlsaXQgYXBwbGljYWJsZSBhdXggcGVyc29ubmVzIGF0dGVpbnRlcyBkJ3VuIHRyb3VibGUgbWVudGFsIGF5YW50IGFsdHIgbGV1ciBkaXNjZXJuZW1lbnQgYXUgbW9tZW50IGRlcyBmYWl0cyAoUHJvcG9zaXRpb24gZGUgbG9pIG4gMjE3IHNlc3Npb24gMjAxMCAyMDExKS4gQ2UgdGV4dGUgZmFpdCBzdWl0ZSBhdSBkcHQgZW4ganVpbGxldCAyMDEwIGQndW5lIHByY2RlbnRlIHByb3Bvc2l0aW9uIGRwb3NlIHBhciBNTS4gClRoaXMgd2FzIHBvaW50ZWQgb3V0IHRvIG1lIGJ5IHNvbWVvbmUgd2hvIEkgYmVsaWV2ZSB0byBiZSB0b3RhbGx5IGNyZWRpYmxlIGFuZCB3aG8gaXMgYSBsb2NhbCB3aG8gcGxheXMgaW4gdGhlIGdhbWVzIGFsbW9zdCBkYWlseS4gCldoZW4gZGV0ZWN0aW5nIHlvdSBjb21tb25seSBzdGVwIG9uIGJyb2tlbiBnbGFzcyBvciBkaWcgdXAgcnVzdHkgbWV0YWwuIEJlIGF3YXJlIHRoYXQgaWYgeW91ciBzaG9lcyBoYXZlIG1ldGFsIGZhc3RlbmVycyBvciBjbGVhdHMsIHlvdSBtYXkgbWlzdGFrZW5seSBwaWNrIHVwIGEgc2lnbmFsIGZyb20geW91ciBvd24gZmVldCBhbmQgbm90IHRoZSBncm91bmQuLiAKWW91IGVpdGhlciBnb2luZyB0byBuZWVkIHRvIGRlYWwgd2l0aCB0aGlzIG5vdywgb3IgeW91IGdvaW5nIHRvIG5lZWQgdG8gZGVhbCB3aXRoIHRoaXMgbGF0ZXIgb25jZSB5b3UgcmVhZGluZyB0byBnZXQgbWFycmllZCwgYnV0IHlvdSB3aWxsIGhhdmUgdG8gZGVhbCB3aXRoIGl0LiBBbmQgaXQgd2lsbCBlaXRoZXIgbWFrZSBvciBicmVhayB5b3VyIHJlbGF0aW9uc2hpcC4gSSBzdWdnZXN0IHNhdmluZyB0aGUgYm90aCBvZiB5b3UgYSBsb3Qgb2YgdGltZSBhbmQgZGVhbGluZyB3aXRoIHRoaXMgbm93Li4gCkkgdGhpbmsgdGhlIG9kZHMgb2YgYW55dGhpbmcgbGlrZSB0aGlzIGhhcHBlbmluZyBhcmUgc2xpbSB0byBub25lLiBUaGUgRE9KIGNhc2UgYWdhaW5zdCBNaWNyb3NvZnQgZm9yIGFudGkgdHJ1c3Qgd2FzIGNvc3RseSBhbmQgdGltZSBjb25zdW1pbmcsIGFuZCB1bHRpbWF0ZWx5IHVuc3VjY2Vzc2Z1bCBpbiBzcGl0ZSBhbiBpbml0aWFsIHdpbiwgd2hpY2ggd2FzIG92ZXJ0dXJuZWQgb24gYXBwZWFsLiAKNGV2ZXI0IHUKV2UgZ290IGEgcHVwcHkgYWZ0ZXIgbXkgZmlyc3QgeWVhciwgYW5kIEkgZG9uIGZvciBhbiBpbnN0YW50IHJlZ3JldCBpdCwgZXZlbiB0aG91Z2ggaXQgaGFyZGVyIHRoYW4gSSBleHBlY3RlZC4gCkl0IGFjdHVhbGx5IHRoZSBvcHBvc2l0ZS4gWW91IHBheSBmb3IgeW91cnNlbGYgYW5kIHRoZSBmYW1pbHkgaXMgY292ZXJlZC4gVGhlIEdlcm1hbiBnb3Zlcm5tZW50IHN1YnNpZGlzZXMgdGhlIGNvc3QuIElmIHlvdSBoYWQgcHJpdmF0ZSBpbnN1cmFuY2UsIHlvdSB3b3VsZCBwYXkgZXh0cmEuCiJ0aGV5IiBjcmVhdGVkIGFuIGFydGlmaWNpYWwgIm1hdHJpeCIgb24gYSBsb3dlciBmcmVxdWVuY3kgaW4gb3JkZXIgdG8ga2VlcCBodW1hbml0eSBmcm9tIHJlYWNoaW5nIHRoZWlyIGZ1bGwgcG90ZW50aWFsIGFuZCBiZSBhYmxlIHRvIHVzZSB1cyBmb3IgbWFueSByZWFzb25zLiAKWSBlbiAzZXIgYW8geWEgc2VndXJhbWVudGUgc2VwYXMgY21vIHZpZW5lIGxhIG1hbm8uUG9kcyBhcHJlbmRlciBhbGduIGxlbmd1YWplIGNvbiBzYWxpZGEgbGFib3JhbCBycGlkYW1lbnRlIGEgdHUgYWx0dXJhLCBwb3JxdWUgbG8gbXMgZGlmY2lsIGRlIGFwcmVuZGVyIGEgcHJvZ3JhbWFyIHlhIGxvIGFwcmVuZGlzdGUuIApZb3UgY2FuIHBsYXkgdGhlc2UgYXMgc3RhbmQgYWxvbmUgYW1vdW50cyBvZiAkMi41MCwgb3IgdXNlIHRoZW0gaW4gcGxhY2Ugb2YgUmVhbCBDbGF5IFBva2VyIENoaXBzIHRoYXQgc3RhbmQgZm9yIHRoZSBhbW91bnQgb2YgJDUuMDAuIApLYXJlbjogVGhhdCBpcyByZWFsbHkgZXhwZW5zaXZlLiBJIGhhdmUgbmV2ZXIgcGFpZCB0aGF0IG11Y2ggdG8gaGF2ZSBteSBob3VzZSBjbGVhbmVkLiBJIGNhbiBwYXkgeW91ICQyMC4KRG8gc2V2ZXJhbCBwcmFjdGljZSAya3Mgd2l0aCB5b3VyIG1ldGhvZCBvZiBjaG9pY2Ugc28geW91IGtub3cgd2hhdCB0byBleHBlY3QgbWVudGFsbHkgb24gcmFjZSBkYXkuIApCb2JhIGhhdHJlZCBmb3IgdGhlIEplZGkgd2FzIGhpcyB3ZWFrbmVzcy4gSGUgYnVpbHQgYSBsaWZlIGFyb3VuZCBiZWluZyBhIGJvdW50eSBodW50ZXIgYW5kIHVzZWQgaGlzIGhhdGUgb2YgSmVkaSBhcyB0aGUgZnVlbCBmb3IgdGhlIGZpcmUgaW4gaGlzIHNvdWwuIEJ1dCB3aGVuIGhlIGZpbmFsbHkgZ2V0cyBoaXMgY2hhbmNlIHRvIGtpbGwgYSBKZWRpLCBCb2JhIGNhbiBhc3Nlc3MgdGhlIG1vbWVudCBkaXNwYXNzaW9uYXRlbHkuIApHdW4gb3duZXJzIGFyZW4gc29tZSBvcHByZXNzZWQgY2xhc3MsIGFuZCB0byBjb21wYXJlIHRoZW1zZWx2ZXMgdG8gSmV3cywgb3IgdW5pb25pc3RzLCBvciBldmVuIHNvY2lhbGlzdHMsIGlzIHRvIGNoZWFwZW4gdGhlIG11cmRlciwgdG9ydHVyZSwgYW5kIHBlcnNlY3V0aW9uIGFsbCBvZiB0aG9zZSBwZW9wbGUgYWN0dWFsbHkgZmFjZWQgZm9yIHRoZWlyIHJlYWwgYmVsaWVmcy4gVGhlIGVudGlyZSBndW4gY3VsdHVyZSBpbiB0aGUgVVMgaXMgYSBtYW51ZmFjdHVyZWQgaWRlb2xvZ3kgdG8gc2VsbCBndW5zIGFuZCBwcm90ZWN0IHRoZSBndW4gbG9iYnkuIFRoZSBOUkEgaXMsIGFuZCBoYXMgYmVlbiwgdGhlaXIgc3Rvb2dlIGRlY2FkZXMuIApUaGlzIGNyZWF0ZXMgYWN0dWFsIGRyYW1hdGljIHRlbnNpb24gYW5kIGdpdmVzIHVzIGdlbnVpbmUgZW1wYXRoeSBmb3IgdGhlIGNoYXJhY3Rlci4gV2hhdCB3ZSBlbmQgdXAgd2l0aCBpcyBhIHBvcnRyYXlhbCBvZiBhIGR5c2Z1bmN0aW9uYWwgZmFtaWx5IHRoYXQncyBtb3JlIGJlbGlldmFibGUsIGFuZCBmZWVscyBtb3JlIHJlYWwsIHRoYW4gOTkgcGVyY2VudCBvZiBvdGhlciBmaWxtcyBkZWFsaW5nIHdpdGggdGhhdCBzdWJqZWN0LiAiVGhlIEdyYW5kIiBpc24ndCBhcyBmdW5ueSBhcyB0aGUgYmVzdCBtb2NrdW1lbnRhcmllcyBvdXQgdGhlcmUuIApMZXQgeW91ciBzZW50ZW5jZSBzdHJ1Y3R1cmUgYmUgeW91ciBjdWUgdG8gbW92ZSBmcm9tIFBvc3QgaXQgdG8gUG9zdCBpdC4uIApUaGF0IGhhcHBlbmVkIGR1cmluZyB0aGUgdGltZSBCZWxnaXVtIHdhcyBhICJlbmxpZ2h0ZW5lZCBwb3N0IFdXMiIgbmF0aW9uLlBpbmVsb2tvICA0IHBvaW50cyAgc3VibWl0dGVkIDYgbW9udGhzIGFnb1doYXQgeW91IHNheWluZyBpcyBiYXNzaWNhbGx5ICJieSB0aGUgdGltZSBvZiBhbm5leGF0aW9uIHRoZSBleHRyZW1lIGJydXRhbCB0cmVhdG1lbnQgYWxyZWFkeSBlbmRlZCIgeW91IGFyZW4gc2hvd2luZyBzb21lIGV4YW1wbGVzIG9mIGhvdyBpdCB3YXMgc3RpbGwgdGVycmlibGUuVGhlIHByb2JsZW0gaGVyZSBpcyB0aGF0IHlvdSBjb21wYXJpbmcgYSBiYWQgc2l0dWF0aW9uKGNvbG9uaWFsaXNtKSB0byBzb21lIGlkZWFsaXplZCBmaWN0aW9uYWwgdmVyc2lvbiBvZiBob3cgdGhpbmdzIHNob3VsZCBiZSBpbiBhIHBlcmZlY3Qgd29ybGQuSSBjb21wYXJpbmcgaXQgdG8gd2hhdCBhY3R1YWxseSBoYXBwZW5lZCBhZnRlciBpbmRlcGVuZGVuY2UuVGhleSB3YW50ZWQgaW5kZXBlbmRlbmNlIGJlY2F1c2UgdGhleSB3YW50ZWQgdG8gbWFrZSB0aGVpciBvd24gZGVjaXNpb25zIGFib3V0IHRoZWlyIG93biBmdXR1cmUuIEluc3RlYWQgdGhleSBnb3QgZW5kbGVzcyBkaWN0YXRvcnNoaXBzIGFuZCB3YXJsb3JkcyBmaWdodGluZyBmb3IgcGVyc29uYWwgcHJvZml0LlRoZXkgYmVsaWV2ZWQgdGhleSB3ZXJlIGJlaW5nIHJvYmJlZCBhbmQgd2lsbCBiZSBtb3JlIHByb3NwZXJvdXMgb25jZSB0aGV5IHNlbGYgZ292ZXJuaW5nLCBpbnN0ZWFkIHRoZXkgd2VudCBpbnRvIGVjb25vbWljIGRlY2xpbmUgYW5kIHN0YWduYXRpb24uSG93IGhhcmQgaXMgaXQgdG8gYWRtaXQgdGhhdCBjb2xvbmlhbGlzbSB3YXNuIGlkZWFsIHdoaWxlIGFsc28gYWRtaXR0aW5nIHRoYXQgcnVzaGVkIHN1ZGRlbiBkZWNvbG9uaXphdGlvbiBsZWZ0IHRoZXNlIGNvdW50cmllcyBpbiBhIG5vbiBmdW5jdGlvbmFsIHN0YXRlLkkgZ2F2ZSB5b3UgYSBzb3VyY2UgYXMgYXNrZWQgdGhhdCBjaHJvbmljbGVzIHRoZSBldm9sdXRpb24gb2YgdGhlIGNvbmRpdGlvbnMgb2Ygd29ya2Vycy4gCkJlaW5nIGEgcG9rZXIgcGxheWVyIGdpdmVzIHlvdSB0aGUgY2hhbmNlIHRvIHRha2UgaG9tZSBhIHNpemFibGUgYW1vdW50IG9mIG1vbmV5LiBUaGF0IGlzLCBvZiBjb3Vyc2UsIGlmIHlvdSB3aW4gaW4gcG9rZXIuIEFzaWRlIGZyb20ga25vd2luZyB0aGUgcnVsZXMgb2YgcG9rZXIgYW5kIGhvdyB0byBwbGF5IHBva2VyIGdhbWVzLCBpdCBpcyBhIG11c3QgdGhhdCB5b3UgbGVhcm4gcG9rZXIgdGlwcyBhbmQgc3RyYXRlZ2llcyB0aGF0IHdpbGwgaGVscCBpbmNyZWFzZSB5b3VyIGNoYW5jZXMgb2YgYnJpbmdpbmcgaG9tZSAndGhlIGphY2twb3QnIGZyb20gbW9zdCBvZiB5b3VyIHBva2VyIG1hdGNoZXMuIFNvbWUgdGlwcyBhcmUgZXhwbGFpbmVkIGhlcmU6CkNvbW11bml0eSBvcmdhbml6aW5nCldlaXRlcmUgSW5mb3MgenVyIFNlbmR1bmcgYXVmIGRlciBXRFIgSG9tZXBhZ2UuCkFuZCBpdCBub3QgbGlrZSBJIHdvdWxkIHZvbHVudGVlciB0byBzaG90IGNhbGwsIEkgdXN1YWxseSBkaWQgaXQgd2hlbiBubyBvbmUgd291bGQuIAogMiBwb2ludHMgIHN1Ym1pdHRlZCA0IGRheXMgYWdvSXQgYWxsIGRlcGVuZHMgb24gY29udGV4dC4gSW4gdGhlIG1vbnRobHkgbWVkYWwsIHdpdGggZm91cmJhbGxzIHJhbW1lZCBvbiB0aGUgY291cnNlLCBJIG5vdCBleHBlY3RpbmcgdG8gZmx5IHJvdW5kLiBJZiBJIG9uIHRoZSBmaXJzdCBncmVlbiwgYW5kIHRoZXJlIGEgZ3JvdXAgb24gdGhlIHBhciAzIHRlZSBib3ggc2Vjb25kIHdhaXRpbmcgdG8gZ28sIHRoZW4gc3VyZSBJIG1heSB0YWtlIGEgbGl0dGxlIG1vcmUgdGltZSBvdmVyIG15IHB1dHRzLCB0aGUgZ3JvdXAgYmVoaW5kIHdpbGwgZWl0aGVyIGJlIHdhaXRpbmcgb24gdGhlIGZhaXJ3YXkgb3Igd2FpdGluZyBvbiB0aGUgdGVlIGJveC4gClByb21vdGluZyB3ZWVkIGlzIGZvcmJpZGRlbiAiZXhjZXB0IGluIG5hcnJvdyBjaXJjdW1zdGFuY2VzIHdoZXJlIHlvdW5nIHBlb3BsZSBjb3VsZCBub3Qgc2VlIHRoZSBwcm9tb3Rpb24sIiBzYXlzIHRoZSBKdXN0aWNlIERlcGFydG1lbnQuIAoxKSBUaGVyZSBhcmUgdHdvIHR5cGVzIG9mIHBlb3BsZSB0aGF0IGFyZSBnaWZ0ZWQgaW4gYW55IHByb2Zlc3Npb24gb3IgZGlzY2lwbGluZS4gVGhlcmUgYXJlIHRoZSBjb25maWRlbnQgb25lcyB0aGF0IGp1c3QgZG8gdGhlaXIgdGhpbmcgYW5kIG1vdmUgb24gYW5kIHRob3NlIHdobyBkbyB0aGVpciB0aGluZyBhbmQgdGhlbiBsb29rIGFyb3VuZCBhbmQgd2FpdCBmb3IgdGhlIGFwcGxhdXNlIGFuZCBhY2NvbGFkZXMuIFdhbGtpbmcgYmVoaW5kIHRoZSBjb3VudGVyIGF0IGhpcyBkaW5lciBhbmQgImFkanVzdGluZyIgaGlzIGZvb2QvaW50ZXJmZXJpbmcgd2l0aCBoaXMgY3VzdG9tZXJzLCBtb3ZpbmcgaGlzIGZvb2QgdHJheSBhdCB0aGUgY2F0IHdha2Ugd2hlbiBzaGUgbm90aWNlZCB0aGF0IHBlb3BsZSBsaWtlZCBoaXMgZm9vZCBtb3JlIHRoYW4gaGVycywgYW5kIGRpc3Jlc3BlY3RpbmcgaGltIHdoZW4gaGUgc3RlcHBlZCBpbiBhbmQgc2F2ZWQgaGVyIGFzcyBhdCB0aGUgaW5uIHdoZW4gc2hlIHdhcyBpbmRpc3Bvc2VkKSBpbmZ1cmlhdGVkIG1lLiAKU29jaWFsaXNtIGlzIGluIHRoZSBuYW1lIEkgbGl0ZXJhbGx5IGRvbid0IHVuZGVyc3RhbmQgd2h5IHlvdSBOUEMgbGlidGFyZHMgZG9uJ3QgdW5kZXJzdGFuZCB0aGlzIEkgbWVhbiB0aGlzIGlzIGV4dHJlbWVseSBjb21tb24gc2Vuc2UgdGhlcmUncyBzbyBtYW55IHBlb3BsZSB3aG8gYWdyZWUgd2l0aCBtZSBzbyBJJ20gY2xlYXJseSByaWdodC4gQWxzbyBjb25zZXJ2YXRpc20gaXMgdGhlIG5ldyBwdW5rIHJvY2sgYmVjYXVzZSB0aGUgbWFpbnN0cmVhbSBsaWJ0YXJkcyB3YW50IHRvIGhhdmUgcG9saXRpY2FsIHByb2dyZXNzIGFuZCB3ZXJlIHRoZSBwb2xpdGljYWwgbWlub3JpdHkuIApMJ2V1cm9kcHV0IExlcyBScHVibGljYWlucyBhIGVzdGltIHF1ZSAidG91dCBjZWxhIGVzdCB1bmUgb3ByYXRpb24gZGUgY29tbXVuaWNhdGlvbiIuLiAKQ2UgY29sbG9xdWUgcGVybWV0dHJhLCBwYXIgdW5lIGFwcHJvY2hlIHBsdXJpZGlzY2lwbGluYWlyZSwgZGUgcmZsY2hpciBkZSBmYW9uIGdsb2JhbGUgc3VyIGNlIHN5bmRyb21lLiAKSSBzaXQgYXQgdGhlIGxvY2FsIGNhc2lubyB3aGVyZSB0aGVyZSBpcyBhIGhpZ2ggaGFuZCBldmVyeSAzMCBtaW4gZm9yIDc3NyQgd2l0aCByb2xsb3ZlcnMuIGEgYmFkIGJlYXQgamFja3BvdCB0aGF0IGdldHMgY3JhY2tlZCBldmVyeXRpbWUgaXQgaXMgYXJvdW5kIDYwSy4KVGhleSBhbHNvIGtlcHQgdGhlIHBlcmZ1bWUgaW4gbG9ja2V0cyB3b3JuIGFyb3VuZCB0aGUgbmVjayB3aGVyZSB0aGV5IGNvdWxkIGJlIGNvbnZlbmllbnRseSBzbmlmZmVkLiBPcmFuZ2UgYmxvc3NvbSBvaWwgd2FzIGV4dHJhY3RlZCBhbmQgY29tYmluZWQgd2l0aCBwcmVzc2VkIGFsbW9uZCBwdWxwIHRvIG1ha2UgdGhlIHZlcnkgcG9wdWxhciBwZXJmdW1lIG9pbnRtZW50IHBvbWFkZXMuIApUaGUgUml0eiBDYXJsdG9uIEhvbmcgS29uZyAgIENoaW5lc2UgUmVzdGF1cmFudApJIHdhcyB0aGVyZSBmYWlybHkgZWFybHksIHNvIEkgZG9uIGtub3cgaG93IGNyb3dkZWQgaXQgZ2V0cywgYnV0IGl0IGEgbmljZSBiaWcgb3BlbiBzcGFjZSBhbmQgdGhlIGJhY2sgcm9vbSAod2hpY2ggb3BlbnMgYW4gaG91ciBhZnRlciB0aGUgZ2VuZXJhbCBvcGVuaW5nKSBpcyB2ZXJ5IG5pY2VseSBkZWNvcmF0ZWQuIApUaW1lIGRpZCB0aGV5IGxlYXZlPyBoZSBhc2tzIEthdGllLgpGZWRlcmFsIEdyb3VwLCBvd25lZCBieSB0aGUgRmFycmVsbCBmYW1pbHksIGhvbGRzIHRoZSBtb25vcG9seSBvdmVyIFRhc21hbmlhJ3MgcG9rZXIgbWFjaGluZXMsIHdpdGggdGhlIGxpY2VuY2UgZHVlIHRvIGV4cGlyZSBpbiAyMDIzLgpJdCByZWFsbHkgZGVwZW5kcyBvbiB3aGF0IHlvdSB3YW50IHVsdGltYXRlbHkuIElmIHlvdSBzcGVuZCAkMjBrIHRvIGZpbmlzaCB5b3VyIGJhc2VtZW50LCBob3cgbXVjaCBtb3JlIHJlbnQgYXJlIHlvdSBjaGFyZ2luZyBjb21wYXJlZCB0byBub3QgZmluaXNoaW5nIGl0PyBXaGF0J3MgeW91ciBwYXliYWNrIHBlcmlvZD8gSG93IG11Y2ggbW9yZSB3aWxsIHlvdXIgaG91c2UgYmUgYXBwcmFpc2VkIGZvciwgYW5kIHdoYXQgZG8geW91IGludGVuZCB0byBkbyB3aXRoIHRoYXQgZXh0cmEgZXF1aXR5PwpUaGUgcmF0ZSBvZiB3aW5uaW5nIGZvciBhIHBva2VyIHBsYXllciBpcyBtZWFzdXJlZCBub3QgaW4gd2lubmluZyBoYW5kIHBlcmNlbnRhZ2VzLCBidXQgcmF0aGVyIHNvbWV0aGluZyBrbm93biBhcyBCQi8xMDAuIApGb3ggbW92ZWQgaGVyIGludG8gcHJpbWUgdGltZSBpbiAyMDEzLCBzbG90dGluZyBoZXIgYmV0d2VlbiB0aGUgbmV0d29yaydzIHR3byBiaWdnZXN0IHN0YXJzOiBPJ1JlaWxseSBhbmQgU2VhbiBIYW5uaXR5LiAKRG9uIGRvIHRoZSBGcm9udGllci4gSXQgbG9uZyBvdmVyZHVlIGZvciBhIG5leHQgR2VuLCBhbmQgd2hvIGtub3dzIHdoZW4gdGhleSBzZWUgdGhhdC4gSXQgcmVsaWFibGUsIGJ1dCBkYXRlZC4gSSBoYWQgYSAyMDEyIFBybyA0WCwgYnV0IHRoZSAxNSBNUEcgbWl4ZWQgd2FzIGRvZyBjcmFwLgpJIHdhcyBpbiBhIG1ldGEgZ2FtZSByYWlzaW5nIHdhciB3aXRoIHNvbWUgZHJ1bmsgbW9yb24geWVhcnMgYWdvIGF0IGEgJDEvMiB0YWJsZSB3aXRoIGVmZmVjdGl2ZSBzdGFja3MgYXQgYXJvdW5kICQyNTAgICBIZSB3YXMgbWluIDMgYmV0dGluZyBhbmQgdGhlbiBmb2xkaW5nIHRvIGphbXMuIEhlIG9wZW5zIFVURyB0byAkNyBhbmQgSSByYWlzZWQgd2l0aCAxMHMgdG8gJDI0IGFuZCBoZSBtaW4gcmFpc2VkIHRvICQ1MCBhbmQgSSBzaGlwIGl0IGluIGV4cGVjdCBzYW1lIHJlc3VsdC4gCkNhbG9yaWVzICAgSSB1c2UgdGhlIGFkYXB0aXZlIHRkZWUgc3ByZWFkc2hlZXQgdGhhdCBzb21lb25lIHBvc3RlZCBpbiAvci9sb3NlaXQgYW5kIG15IGJ1cm5lZCBvbiB0aGUgVkEzIHRlbmQgdG8gY29tZSBvdXQgcHJldHR5IGluIGxpbmUgd2l0aCB0aGUgYXZlcmFnZSB0aGUgc3ByZWFkc2hlZXQgZ2l2ZXMgbWUuIApBcmthbnNhbnMgd2lsbCBiZSBlcXVhbGx5IHVud2lsbGluZyB0byB0YWtlIHRoZSBmaXJzdCBzdGVwIHRvd2FyZCB0aGUgZnVsbCBsZWdhbGl6YXRpb24gb2YgbWFyaWp1YW5hIGZvciByZWNyZWF0aW9uYWwgdXNlLCB3aGljaCBpcyBhIG1ham9yIGltcGV0dXMgZm9yICJtZWRpY2FsIG1hcmlqdWFuYSIgbGF3cywgYWNjb3JkaW5nIHRvIHNvbWUgb2YgdGhlIG5hdGlvbmFsIGxlYWRlcnMgb2YgdGhlIG1vdmVtZW50LiBDUEFWIGNvbnRlbmRzIHRoYXQgImlmIHRoZXJlIGFyZSBjb21wb25lbnRzIG9mIG1hcmlqdWFuYSAoVEhDLCBmb3IgZXhhbXBsZSkgdGhhdCByZW5kZXIgbWVkaWNhbCBiZW5lZml0cyBmb3IgcGF0aWVudHMgc3VmZmVyaW5nIGZyb20gY2VydGFpbiBtYWxhZGllcywgdGhlcmUgYXJlIG1vcmUgZWZmaWNhY2lvdXMsIHNhZmVyLCBhbmQgc2FuZXIgd2F5cyB0byBkZWxpdmVyIHRoZSBUSEMgcmF0aGVyIHRoYW4gdGhlIHNtb2tpbmcgb2YgbWFyaWp1YW5hIGNpZ2FyZXR0ZXMuIENvbXBvbmVudHMgb2Ygb3BpdW0gaGF2ZSBwcm92ZWQgdG8gaGF2ZSBtZWRpY2FsIGJlbmVmaXQsIGJ1dCB0aGUgRkRBIGhhcyBub3QgYXBwcm92ZWQgdGhlIHNtb2tpbmcgb2Ygb3BpdW0gb3IgaGVyb2luLiBJbnN0ZWFkLCBtZWRpY2FsIHNjaWVuY2UgZXh0cmFjdGVkIHRoZSBiZW5lZmljaWFsIGNvbXBvbmVudHMgYW5kIGRldmVsb3BlZCBtZWRpY2luZXMgc3VjaCBhcyBtb3JwaGluZSwgY29kZWluZSwgaHlkcm9jb2RvbmUsIGFuZCBveHljb2RvbmUuIFRoZSBzYW1lIGhhcyBiZWVuIGRvbmUgYW5kIGlzIGNvbnRpbnVpbmcgdG8gYmUgZG9uZSB3aXRoIG1hcmlqdWFuYS4iClNoZSBhdCBsZWFzdCBnb3QgZHJ1bmsgYW5kIGZsaXJ0eSB3aXRoIGFub3RoZXIgbWFuLCB3YXMgcHJvYmFibHkgZGFuY2luZyB3aXRoIGhpbSBhbmQgaGFuZ2luZyBvbiBoaW0uIFdoZXRoZXIgb3Igbm90IHRoZXkgbWFkZSBvdXQgb3Igd2VudCBmdXJ0aGVyIGlzIHVuY2xlYXIuIFlvdSBkb24gc21lbGwgbGlrZSBzb21lb25lIGNvbG9nbmUgd2l0aG91dCBiZWluZyB1cCBhZ2FpbnN0IHRoZW0gZm9yIGFuIGV4dGVuZGVkIHBlcmlvZC4gCkhlIHdvcmtlZCBvdXQgdGhhdCB3aXRoIHB1dHRpbmcgdXAgYSBsaW1pdGVkIGJ1ZGdldCB3aXRoIHdoaWNoIGhlICJhbGxvd2VkIiB0byBwbGF5IHdpdGguIEFuZCB0aGVuIGhlIHN0aWNrcyB0byB0aGF0IGFuZCBhbGwgaXMgd2VsbCBiZXR3ZWVuIHRoZW0uLiAKVGhlcmUgYWxtb3N0IG5vIHdpbGRlcm5lc3MgbGVmdCwgYW5kIGl0IHdpbGwgdGFrZSB0aG91c2FuZHMgb2YgeWVhcnMgZm9yIGJpb2RpdmVyc2l0eSB0byByZXBhaXIuIApBdCB0aGUgZmVkZXJhbCBsZXZlbCwgdGhlIG1vbmV5IGFsbG9jYXRlZCBzbyBmYXIgdG8gZmlnaHQgdGhlIGVwaWRlbWljIHdhcyBjYWxsZWQgYSBieSB0aGUgTmV3IFlvcmsgVGltZXMgRWRpdG9yaWFsIEJvYXJkIG9uIEFwcmlsIDIxc3QuIApDZXR0ZSBoaXN0b2lyZSB2aWVudCBkZSByZXN1cmdpciBkJ3VuZSBmYW9uIHF1aSBtJ2FnYWNlciBldCBxdWFuZCBvbiBwcmVuZCBsZSBwYXJ0aSBkZSBtJ2FnYWNlciBlbiB1c2FudCBkZSBiaWFpcywgb24gcmlzcXVlIGRlIHMnZW4gZmFpcmUgcmVwYXNzZXIgdW5lIGNvdWNoZSAhSmUgc291aGFpdGUgcXVlIHZvdXMgc3VwcHJpbWlleiBjZXQgYXJ0aWNsZSBjYXIgaWwgZG5pZ3JlIGxlIHRyYXZhaWwgZGUgIGV0IGR1IGNlbnRyZSBMYSBDaHJ5c2FsaWRlLi4gCkFzIGEgbWF0dGVyIG9mIGZhY3QsIGl0IGlzIG9uZSBvZiB0aGUgbW9zdCBkZXNvbGF0ZSBkZXN0aW5hdGlvbnMgaW4gdGhlIHdvcmxkIHRoYXQgd2lsbCBiZSBlbnRpcmVseSBkaWZmZXJlbnQgZnJvbSB0aGUgb3RoZXIgY29tbW9uIHdoaXRlIGNvbG9yIHNhbmQgYmVhY2hlcy4gU29tZSBvZiB0aGUgcmVub3duZWQgY2FzaW5vIHBvaW50cyBpbiBHb2EgYXJlIGRpc2N1c3NlZCBpbiB0aGUgZm9sbG93aW5nIG1hbm5lcjouIApFbnN1aXRlLCBSb21haW4gT2xpdmllciwgNGUgZ25yYXRpb24gZGUgZnJvbWFnZXIgb3UgcGx1dHQgY29tbWUgaWwgcHJmcmUgc2UgcXVhbGlmaWVyPyBjYXIgbHVpIGF1c3NpIGEgdHJvaXMgbXRpZXJzIGRpc3RpbmN0cywgZGUgY29sbGVjdGV1ciwgYWZmaW5ldXIgZXQgbWFyY2hhbmQuIElsIGVzdCBhcHBhcnUgaW50YXJpc3NhYmxlIHN1ciBsZXMgZnJvbWFnZXMsIGxldXIgaGlzdG9pcmUsIGxldXIgZ29ncmFwaGllLCBsZXVycyBzcGNpZmljaXRzIHRlcnJpdG9yaWFsZXMsIGxldXJzIGRpdmVyc2VzIGNhcmFjdHJpc3RpcXVlcyBsaWVzIGF1IGNsaW1hdCBvdSAgbGEgdGVjaG5vbG9naWUgZnJvbWFncmUsIGV0IHBhcyBzZXVsZW1lbnQgY2V1eCBkdSBOb3JkIG8gaWwgZXN0IGluc3RhbGwgcGFyIHByaXB0aWVzIGZhbWlsaWFsZXMuIApCdSBhZGFuIHIvVHVya2V5IGlsZSBwYXJhbGVsIGVpbGltbGVyZSBzYWhpcCBiaXIga3VsbGFuYyBraXRsZXNpbmUgc2FoaXAuIApBbSBJIHRoZSBvbmx5IG9uZSB3aG8gdGhpbmtzIGl0IGNyYXp5IGhlciB3aG9sZSBJbnN0YWdyYW0gYWNjb3VudCBpcyBqdXN0IGhlciBzZWxsaW5nIHN0dWZmPyBUaGVyZSBub3QgYSBzaW5nbGUgcG9zdCBhYm91dCBoZXIgbGlmZSB3aGVyZSBzaGUgbm90IHB1c2hpbmcgc29tZSBjcmFwcHkgcHVyc2VzIG9yIGRpYXJyaGVhIHRlYS4gQW5kIEkga25vdyBzaGUgcHJvYmFibHkgZG9lc24gcHV0IHBlcnNvbmFsIHN0dWZmIG9uIHRoZXJlIGJlY2F1c2UgcGVvcGxlIGhhdGUgaGVyIGJ1dCBzaGUgY291bGRuIGFsd2F5cyBtYWtlIGhlciBhY2NvdW50IHByaXZhdGUuIFRoZSBzZWFzb24gaXMgb3Zlci4gSSBub3QgdHJ5aW5nIHRvIGhhdGUgb24gaGVyIGJ1dCBpdCBqdXN0IG9kZCB0byBtZS4gQWxzbyBJIHRob3VnaHQgc2hlIGlzbiBhbGxvd2VkIHRvIHdvcmsuIFNvIGhvdyBpcyBzaGUgbWFraW5nIG1vbmV5IGJlaW5nIGEgYnJhbmQgYW1iYXNzYWRvcj8KUGVvcGxlIGRvbiByb3V0aW5lbHkgd2VhciBmdWxsIGZhY2Ugc2tpIG1hc2tzIHVubGVzcyBpdCBpcyBicnV0YWxseSBjb2xkIG91dHNpZGUsIG5vciBkbyB0aGV5IGhhdmUgYW55IHRhYm9vcyBhZ2FpbnN0IHRha2luZyB0aGVtIG9mZiBpbiBhIHB1YmxpYyBzcGFjZSB3aGVyZSB0aGUgdGVtcGVyYXR1cmUgaXMgcmVhc29uYWJsZS4gVGhlIHNhbWUgY2FuIG5vdCBiZSBzYWlkIGZvciB0aGUgQnVya2EuCkJhZyBjaG9jb2xhdGUgY2hpcHMyIGVnZ3MyIDMvNCBjLiAKRG93bmxvYWQgTm93LiBXZWxsLCBJIHdpc2ggdGhpcyB3b3VsZCB3b3JrIGZvciBtZS4gV2luZG93cyA3IHdpbGwgbm90IGFjdGl2YXRlIGluIEF1c3RyYWxpYSwgbm9yIGRvIGFueSBNaWNyb3NvZnQgYWN0aXZhdGUgcGhvbmUgbnVtYmVycyB3b3JrLiAKVGhleSBjbGFpbSB0aGUgbW9uZXkgaXMgYmV0dGVyIG9mZiBpbiB0aGVpciBoYW5kcyB0byBwdXJzdWUgcHJvamVjdHMgYSBHb3Zlcm5tZW50IHdvdWxkIG5ldmVyIGRvLiBCdXQgaW4gdHJ1dGggaXQgbG9va3MgbGlrZSBhIHRheCBicmVhaywgd2hpY2ggbWFrZXMgdGhlbSBsb29rIGxpa2UgaGVybyB3aGlsZSB1c2luZyBpdCBhcyBhbiBleGN1c2UgdG8gYXZvaWQgcGF5aW5nIG1vcmUgaW4gdGF4ZXMuIERlc3BpdGUgdGhlaXIgbGFyZ2VzdCBkb25vciBiZWluZyB2b2NhbCBhYm91dCB0aGUgbmVlZCBmb3IgaGlnaGVyIHRheGVzIChXYXJyZW4gQnVmZmV0KS4KTiBBY3Rpb24gZW4ganVzdGljZSA6IFByb2NkdXJlIGVuZ2FnZSBkZXZhbnQgdW5lIGp1cmlkaWN0aW9uIHBvdXIgb2J0ZW5pciBsZSByZXNwZWN0IG91IGxhIHJlY29ubmFpc3NhbmNlIGQndW4gZHJvaXQgb3UgZCd1biBpbnRydCBsZ2l0aW1lLiBEc2lnbmUgZ2FsZW1lbnQgOiAgIGxlIGRyb2l0IGQndW5lIHBlcnNvbm5lIGRlIGZhaXJlIHZhbG9pciB1bmUgZGVtYW5kZSBkZXZhbnQgbGEganVzdGljZSwgZCd0cmUgZW50ZW5kdWUgZXQgZGUgbGEgZmFpcmUgZXhhbWluZXIgcGFyIGxlIGp1Z2UgOyAgIGV0IGxlIGRyb2l0IHBvdXIgbCdhZHZlcnNhaXJlIGQnZW4gZGlzY3V0ZXIgbGUgYmllbiBmb25kLgpBIGxvdCBvZiBwZXJmb3JtYW5jZSBhdCB0aGUgcHJpY2UgcG9pbnQsIGFuZCBhdCBhIHRpbWUgd2hlbiBldmVyeSBjb21wYW55IGlzIHB1dHRpbmcgb3V0IGdyZWF0IGVudHJ5IGxldmVsIHN0dWZmLCBJIGxpa2UgdGhlbSB0aGUgYmVzdC4gU2luY2UgdGhlIGJ1YmJsZWd1bSBwZWFybCBpcyB2ZXJ5IGFuZ3VsYXIgYW5kIGxvbmcsIEkgd291bGQgcmVjb21tZW5kIHRoZSBibGFjay9ncmVlbiBzb2xpZC4gSXQgaXMgdmVyeSBzbW9vdGgsIGFuZCB3aWxsIGJlIG1vc3QgZm9yZ2l2aW5nIGZvciB5b3Ugc3RhcnRpbmcgb3V0Li4gCkhlIGFkYXB0ZWQgd2VsbCBhbmQgaGUgbWl4ZXMgd2l0aCBhbGwgdGhlIGd1eXMgd2VsbC4gCklmIHlvdSBoYXZlIG1vcmUgbW9uZXkgdGhhbiB5b3Ugc3RhcnRlZCBvdXQgd2l0aCwgdGhlbiBpdHMgdGltZSB0byBxdWl0LiBJZiB5b3UgbG9zZSwgeW91IGRvdWJsZSB5b3VyIGJldC4gSWYgeW91IGxvc2UgYWdhaW4sIHlvdSBkb3VibGUgeW91ciBiZXQgYWdhaW4uIApHYW1pbmcgRnJvbSBNYWNpbnRvc2ggQ29tcHV0ZXJzClNoZSB3YXMgYW4gYWxjb2hvbGljIGFuZCBJIHByb3RlY3RlZCBteSBzaWJsaW5ncyBmcm9tIGhlci4gCk1vbmV5IGRvZXNuIGhhdmUgYSB0cnVlIHZhbHVlIGJ1dCB0aGV5IGNvbnZpbmNlZCB0aGUgZ3VsbGlibGUgbWFzc2VzIHRoYXQgaXQgZGlkIHNvIHRoZXkgY291bGQgY29udHJvbCBvdXIgcmVzb3VyY2VzLCB3aGljaCBpcyB3aGF0IHJlYWxseSBtYXR0ZXJzIGJ1dCB0aGF0IGlzIGhvdyBldmVyeXRoaW5nIGdldHMgYWNjb21wbGlzaGVkLi4gCkdldCBzdGFydGVkIGluIGZlZWxpbmcgYmV0dGVyIGluIHlvdXIgYm9keSByaWdodCBhd2F5ISBKdXN0IGNvbnRhY3QgbWUgYXQgW2VtYWlsIG9yIHRleHQgbWUgYXQgNzU3IDUzNCA4MDU2LCBJIGNhbiBnZXQgeW91IHNldCB1cCBmb3IgeW91ciAxc3QgYXBwb2ludG1lbnQgYW5kIGNvbnN1bHRhdGlvbi4gCkJ1dCB0aGF0J3MgYSBwZXJzb25hbCBwcmVmZXJlbmNlLiAKTWFncml0dGUgd2FzIG5vdCBhICJsaXRlcmFyeSIgYXJ0aXN0LCBhbmQgaGlzIHdvcmsgd2FzIG1vcmUgYWJvdXQgc2l0dWF0aW9uIHRoYW4gbmFycmF0aXZlLiBOZXZlcnRoZWxlc3MsIGhpcyB0aXRsZXMgd2VyZSBpbXBvcnRhbnQgdG8gaGltLCBhbmQgdGhleSBhcmUgbmV2ZXIgbmV1dHJhbC4gVGhleSB3ZXJlLCBzbyB0byBzcGVhaywgcGFzdGVkIG9uIHRoZSBpbWFnZSBsaWtlIGFub3RoZXIgY29sbGFnZSBlbGVtZW50LCBpbmZsZWN0aW5nIGl0cyBtZWFuaW5nIHdpdGhvdXQgZXhwbGFpbmluZyBpdC4gCkZvciBtZSBpdCB1c3VhbGx5IHRoZSBiYWNrIG9mZiB2b2x1bWUgYW5kIHRoZSBBTVJBUHMgdGhhdCB0YW5rIG15IHJlY292ZXJ5LiAKTHV1IHdvbiBoaXMgZmlyc3QgYnJhY2VsZXQgaW4gMjAwOCBieSB0YWtpbmcgRXZlbnQgNiBPbWFoYSBIaSBMb3cgU3BsaXQgOCBvciBCZXR0ZXIuIEZ1cnRoZXJtb3JlLCBMdXUgbWFuYWdlZCB0byBmaW5pc2ggc2Vjb25kIGluIHRoaXMgc2FtZSBldmVudCBpbiAyMDA3LiAKSXQgbm90IGFjY2VwdGFibGUgLiBkaXNhZ3JlZW1lbnQgaXMgZXhwZWN0ZWQgYW5kIGhlYWx0aHksIGJ1dCB3ZSBjYW4gc3RhcnQgYXR0YWNraW5nIGVhY2ggb3RoZXIgb3IgdGFsa2luZyBhYm91dCBlYWNoIG90aGVyIGxpa2Ugd2Ugbm90IGh1bWFucy4gb3RoZXIgY2FzZXMsIGhlIGhhZCB0byBub3RpZnkgdGhlIHBvbGljZSBhYm91dCB0aHJlYXRzLCBIZWxtZXIgc2FpZC5IZSBkZWZlbmRlZCBoaXMgY2hvaWNlIHRvIHVzZSB0aGUgdHdlZXRzIGFzIGEgZnVuZHJhaXNpbmcgb3Bwb3J0dW5pdHkuanVzdCBtZSB0cnlpbmcgdG8gdGFrZSBzb21ldGhpbmcgdGhhdCB3YXMgcHJldHR5IG5lZ2F0aXZlIGFuZCB0cnkgdG8gdHVybiBpdCBpbnRvIGEgcG9zaXRpdmUsIGhlIHNhaWQuQWJ1c2UgbGlrZSB0aGlzIGlzIGFsbCB0b28gY29tbW9uIG9uIHNvY2lhbCBtZWRpYS4gClRoaXMgaGFzIGJlZW4gcG9zdGVkIGFscmVhZHkgYW5kIGZvciBnb29kIHJlYXNvbiAgIGNoZWNrIG91dCB0aGUgSXQgR2V0cyBCZXR0ZXIgcHJvamVjdC4gSXQgYmFzaWNhbGx5IHRhaWxvciBtYWRlIGZvciB3aGF0IHlvdSBmZWVsaW5nIHJpZ2h0IG5vdy4gCk9lbm9waGlsZSBvciBub3QsIGEgdHJpcCB0byBUdXNjYW55IHdpbGwgZ2l2ZSB5b3UgYSB0YXN0ZSBvZiB0aGUgZ29vZCBsaWZlLiBBbmQgc2luY2UgdGhlcmUncyBzdWNoIGEgbGFyZ2Ugc3ByZWFkIHRvIGNvdmVyICAgYWxsIG9mIGl0IGRlbnNlbHkgcGFja2VkIHdpdGggcmFtYmxpbmcgdmluZXlhcmRzLCBjeXByZXNzIGRvdHRlZCBoaWxsc2lkZXMsIGFuZCBjZW50dXJpZXMgb2xkIGhhbWxldHMgICB3ZSByZWNvbW1lbmQgYSB3YWxraW5nIHRvdXIgdG8gb3B0aW1pemUgeW91ciBtaWxlYWdlLCBhbGxvdyB5b3UgdG8gZnVsbHkgaW1tZXJzZSB5b3Vyc2VsZiBpbiB0aGUgZ2xvcmlvdXMgYmVhdXR5IG9mIHRoZSB3aW5lbGFuZHMsIGFuZCBnZXQgc29tZSBleGVyY2lzZSB0byBib290LiBCYWNrcm9hZHMsIGEgd2VsbCBrbm93biBhY3RpdmUgdHJhdmVsIGNvbXBhbnksIG9mZmVycyBhIGd1aWRlZCBzaXggZGF5IHRvdXIgdGhhdCB1bml0ZXMgaW5kaXZpZHVhbCB0cmF2ZWxlcnMgYWxvbmcgYW5jaWVudCBmb290cGF0aHMgbm9ydGggb2YgU2llbmEgYW5kIGluIENoaWFudGkncyBoaXN0b3JpYyBoaWxsIHRvd25zLCB3aXRoIHBsZW50eSBvZiB3b3JsZCBmYW1vdXMgd2luZXMgYW5kIHRyYWRpdGlvbmFsIFR1c2NhbiBjdWlzaW5lIHRvIHNhbXBsZSBlbiByb3V0ZS4gCkdvYSBHb2EgaXMgb25lIG9mIHRoZSBzdGF0ZXMgd2hlcmUgZ2FtYmxpbmcgaXMgZnJlZWx5YWxsb3dlZCBieSB0aGUgc3RhdGUgZ292ZXJubWVudC4gR2FtYmxpbmcgaXMgYWxsb3dlZCBpbiBHb2EsIERhbWFuYW5kIERpdSB1bmRlciB0aGUgU2VjdGlvbiAxM0Egb2YgVGhlIEdvYSwgRGFtYW4gYW5kIERpdSBQdWJsaWNHYW1ibGluZyBBY3QsIDE5NzYuIC4KMjkgSnVsIDIwMDkgLiAKR2x1dGVuIEludG9sZXJhbnQgYnV0IGluIERlbmlhbD8KVGhhdCdzIGJhc2ljYWxseSBhbGwgdGhlIG1hdGggeW91IG5lZWQgdG8ga25vdy4gT3RoZXIgdGhhbiB0aGF0LCBhIGxvdCBvZiB0aGUgc2tpbGwgY29tZXMgZnJvbSBwbGF5aW5nIGEgbG90IG9mIGdhbWVzIGFuZCBzb21lIG1lbW9yaXphdGlvbiAgIHlvdSBuZWVkIHRvIGtub3cgd2hpY2ggaGFuZHMgeW91IGNhbiBiZXQsIHJhaXNlIGFuZCBjYWxsIG9uIGluIHRoZSBmaXJzdCByb3VuZCBvZiBiZXR0aW5nICAgdGhlcmUncyBhIExPVCBtb3JlIGZvbGRpbmcgdGhhbiBtb3N0IG5ld2JpZSBwbGF5ZXJzIHRoaW5rLiAKVGhleSBhcmUgdXN1YWxseSBzdHJ1bmcgd2l0aCByZXNpbGllbnQgZ3V0IG9yIG55bG9uLCBhbmQgY2FuIGJlIHN0cnVuZyB0byBkaWZmZXJlbnQgdGVuc2lvbnMuIFRoZSBoYW5kbGUgaXMgY292ZXJlZCB3aXRoIGEgcnViYmVyIG9yIGxlYXRoZXIgZ3JpcCBzbyBpdCBkb2VzIG5vdCBzbGlwIG91dCBvZiB0aGUgaGFuZCBlYXNpbHkuLiAKU29ycnkgYnV0IGV2ZXJ5b25lIHJlc3BvbmRpbmcgaXMgV0FZIG9mZiEgSXQncyBzcGxpdCBpbnRvIHR3byBlcGlzb2RlcyBjdXogd2hvIHRoZSBmdWNrIGNhcmVzISBUaGUgc2Vjb25kIGlzIHVzdWFsbHkganVzdCBuZXdzLCBhbmQgYSB3cmFwIHdpdGggdGhlIGd1ZXN0LCBkZXBlbmRpbmcgb24gdGhlIG92ZXJhbGwgbGVuZ3Rocy4gVGhlIGxpdmUgcmVhZHMgYXJlIHNvIHNob3J0IGFuZCBORVZFUiBpbnRlcnJ1cHQgdGhlIGZsb3cgY3V6IEFkYW0gaXMgYSBkYW1uIHByby4gSGUgaGFzIGFuIGVudGlyZSBzdGFmZiB0byBwYXkgYW5kIHRoaXMgaXMgdGhlIGVhc2llc3Qgd2F5IGZvciBoaW0gdG8gZG8gc28uClRoaXMgaXMgdGhlIGJlc3QgdGhpbmcgSSByZWFkIGluIDIwMTguIE15IHByZWNvbmNlcHRpb25zIGhhdmUgYmVlbiBzaGF0dGVyZWQgYnkgdGhlIHN0b3JpZXMsIGV4cGVydGx5IGRyYXduIG91dCBieSBXaWx0b24gYW5kIHRvbGQgd2l0aG91dCBqdWRnZW1lbnQuIApVc2UgdGhlIGJhbm5lciBiZWxvd3RvIHZpc2l0IHdlYnNpdGU6CkFtYWdpODIgIDEgcG9pbnQgIHN1Ym1pdHRlZCAyNCBkYXlzIGFnbwpJcyB0aGlzIHdoYXQgeW91IHdhbnQ/IE1vcmUgY29tcGxhaW5pbmcgYW5kIGFyZ3VpbmcgYmVjYXVzZSB5b3UgYXJlIHRyeWluZyB0byB0dXJuIGEgY29tcGxleCBzaXR1YXRpb24gaW50byBiYXNpYyBvbmUgYnkgaWdub3JpbmcgZGV0YWlscz8uIApCeSBkZWZhdWx0IGl0IGJhc2ljYWxseSBhbGxvd3Mgb25seSBmb3IgcmVsYXRpdmVseSBib3JpbmcgbW9uc3RlciBoYWNrIHNsYXNoIGFuZCBub3QgbXVjaCBlbHNlLiAKVGhlIGluZ3JlZGllbnRzIGluIHBva2VyIGNoaXBzIHBsYXkgYSBsYXJnZSByb2xlIGluIHRoaXMuIApDYWxkZXIgZ3JhbmRzdGFuZCwgYnVpbHQgaW4gMTk3MSwgYXBwcm94aW1hdGVseSA0MjAsMDAwIHNxdWFyZSBmZWV0LCBzZXZlbiBzdG9yaWVzIHRhbGwgYW5kIHNlYXRlZCBhcHByb3hpbWF0ZWx5IDE1LDU3NSBwZW9wbGUsIFN0ZXZlbnNvbiBub3RlZC4KIDAgcG9pbnRzICBzdWJtaXR0ZWQgNiBkYXlzIGFnb0luIHRoZSBncmFuZCBzY2hlbWUgb2YgdGhpbmdzLCB0aGlzIGlzIGZpbmUuIEFzc3VtaW5nIHRoZSBMYWtlcnMgbWlzcyB0aGUgcGxheW9mZnMsIExha2VycyBzdGlsbCBnZXQgYSBzb2xpZCAxc3Qgcm91bmQgcGljaywgTGVicm9uIGNhbiByZXN0IHVwIGluIHRoZSBvZmYgc2Vhc29uIGVhcmx5IGFmdGVyIGhhdmluZyBzcGVudCBhbiBhYnN1cmQgYW1vdW50IG9mIHRpbWUgb3ZlciB0aGUgMjAxMHMgcGxheWluZyBpbiB0aGUgcGxheW9mZnMsIGFuZCB0aGUgTGFrZXJzIGNhbiBzaWduIGJpZyBuYW1lIGZyZWUgYWdlbnRzIGluIHRoZSBzdW1tZXIuSG9uZXN0bHksIGV2ZXJ5b25lIGhhcyBrbm93biB0aGlzIHRvIGJlIGEgdHJhbnNpdGlvbiB5ZWFyIGZvciB0aGUgTGFrZXJzIGFzIHRoZXkgc2lnbmVkIHNob3J0IHRlcm0gY29udHJhY3RzIHRvIHBhZCB0aGUgcm9zdGVyIGZvciB0aGlzIHllYXIgYW5kIGhhdmUgYW1wbGUgY2FwIHNwYWNlIGR1cmluZyB0aGUgZnJlZSBhZ2VuY3kgcGVyaW9kLiAKSWYgeW91ciBzdWJtaXNzaW9uIGJlZ2lucyB3aXRoICJXaGVuIHlvdSIgb3IgIldoZW4gdGhleSIgb3IgYW55dGhpbmcgb2YgYSBzaW1pbGFyIG5hdHVyZSwgaXQgaXMgbm90IGFsbG93ZWQgaGVyZS4gU3VibWlzc2lvbnMgZGVwaWN0aW5nIG9yIGNvbnRhaW5pbmcgaW50ZW50aW9uYWxseSBlbXVsYXRlZCBiZWhhdmlvcnMgKG1lbWVzKSBhcmUgYWxzbyBub3QgYWxsb3dlZCwgaW5jbHVkaW5nIG1lbWV0aWMgaW1hZ2UgbWFjcm9zLCAiY2hhbGxlbmdlcywiIG9yIGVsZW1lbnRzIHRoZXJlb2YuIE5vbiBtZW1ldGljIGltYWdlIG1hY3JvcyBhcmUgYWxsb3dlZC4KR28gcmlnaHQgdXAgdG8gdGhlIHRvcCBvZiB0aGUgd2F0ZXJmYWxsIG9uIHRoZSB3ZXN0IHNpZGUgb2YgdGhlIHJpdmVyIGFuZCBsb29rIGJlbG93IHRvIGEgbGl0dGxlIGNsZWFyaW5nIG9uIHRoZSBlYXN0ZXJuIHNpZGUgb2YgdGhlIHJpdmVyLiBTbG93bHkgcm90YXRlIHRoZSBjYW1lcmEgYXJvdW5kIDM2MCBkZWdyZXNzIHNvIHlvdSBjYW50IHNlZSB0aGUgY2xlYXJpbmcgYW5kIHRoZW4gY2FuIHNlZSBpdCBhZ2Fpbi4gCkFueSB3aG8gc3Rvb2QgaW4gdGhlIHdheSBvZiB0aGF0IGdvdCBzaG92ZWQgb3V0IHRoZSB3b3JsZCBvdmVyLCBmcm9tIHRoZSBLaG9pc2FuIGluIFNvdXRoZXJuIEFmcmljYSAobG9sLCB5b3UgZG9uJ3QgdGhpbmsgdGhleSdyZSBnaXZpbmcgdGhlIGxhbmQgc3RvbGVuIGZyb20gd2hpdGUgZmFybWVycyB0byB0aGUgS2hvaXNhbiBibGFja3MsIGRvIHBlb3BsZSB0aGluayB0aGF0PyBJdCdzIGFsbCB0aGUgQmFudHUgYmxhY2tzIHdobyBnZXQgaXQuIAoxNF9fX19fX19TSEVCT1lHQU4gUFJFU1MsIEZyaWRheSwgQXVnLiA4LiAxOTY5IEtFUlJZIERSQUtFIE9VVCBPVVIgV0FWIFNwYWNlIFRyYXZlbCBBbml3ZXIgdG8gUHJ0dmlvTSBQdWlpbHQgQUNST1NTIDEgT3V0ZXIgIDYgQXN0cm9uYXV0LCBmb3Igb25lIDExIEhvcm5zIDEyIEFudGFyY3RpYyB2b2xjYW5vIDE0IFNwZWFrIHBvbXBvdXNseSAxNSBVbmtlZWxjZCAxNiBTcG9ydCBvZiBhbnkga2luZCAxNyBQb2x5bmVzaWFuIGJhbmFuYSAxOSBQYWNrIGF3YXkgMjAgVGhyb3dzIDIzIFNlbmlvcnMgKG9iLikgMjQgTWF1bmEgLCBIYXdhaWkgMjcgU2V2ZXJlIHRyaWFsIDI5IFNoYWtlc3BlYXIgIGVhbiBzcGlyaXQgMzEgQXZvaWRzIGNhcHR1cmUgMzUgcmF5cyAzNyBDZW50dXJ5IHBsYW50IDM4IEdlcm1hbiBwcmlzb24gY2FtcCA0MSBGbHlpbmcgbWFtbWFsIDQyIENhcmJvbmF0ZWQgYmV2ZXJhZ2UgNDUgRmFydGhlc3QgcG9pbnQgaW4gb3JiaXQgNDcgTWFydGlhbiAoY29tYiwgZm9ybSkgNDkgVGFrZSB0byBjb3VydCBBcm9tYXRpYyBzZWVkIDU0IEF1c3RyaWFuIHRvd24gNTYgRmVtaW5pbmUgYXBwZWxsYXRpb24gNTcgTmVjZXNzaXRhdGUgNTggUHJvamVjdGlsZSA1OSBPbmUgb2YgZml2ZSBzZW5zZXMgNjAgQ2xvc2UgKHBvZXQuKSAxMCBQcml2YXRlIGluc3RydWN0b3IgMzEgQ296ZW4gMTMgU3RpdGNoZXMgMTcgQ29uZSBiZWFyaW5nIHRyZWUgMTggVGVybWluYXRpb24gMjEgR2lybCdzIG5hbWUgMjIgV2lsZCAxIFdhZGluZyBiaXJkIDI0IFJlc2lub3VzIDIgQnJpdGlzaCB2ZWhpY2xlIHN1YnN0YW5jZSAzIFBva2VyIHN0YWtlcyAyNSBHb2xkIChTcC4pIDQgSW50aW1hdGlvbiAyNiBUaHJlZSB0b2VkIDUgQmFieWxvbmlhbiBzbG90aHMgZGVpdHkgMjggTG9pdGVyIDYgTmVhcmVzdCBwb2ludCAzMCBQcmludGVyJ3MgaW4gb3JiaXQgbWVhc3VyZXMgNyBNYXNjdWxpbmUgMzIgRmxhdGZpc2ggYXBwZWxsYXRpb24gMzMgV29tYW4ncyA4IFBlcm1pdHMgYXBwZWxsYXRpb24gOSBEZWF0aCBub3RpY2VzIDM0IEhhcmRlbiwgYXMgY2VtZW50IDM2IFNwYWNlIHZlaGljbGUgMzkgRmVtaW5pbmUgbmlja25hbWUgNDAgR3JvdyBvbGQgNDIgUG9pbnRlZCBzdGFsY2UgNDMgUHJheWluZyBmaWd1cmUgNDQgRml2ZSAoY29tYiwgZm9ybSkgNDYgRXZvbHZlIDQ4IEhhcmVtIHJvb21zIDUxIE5vdmVsaXN0IENoYXNlIDUyIE9uZSB3aG8gcmVjbGluZXMgNTMgQnVkZGhpc3QgcGlsbGFyIDU1IFJpdmVyIGlzbGV0IDU2IERpbWludXRpdmUgb2YgSm9uYXRoYW4gNTggRWd5cHRpYW4gc3VuIGdvZCBXSEFULiAKUHJvdmlkZXMgcGVyc29uYWwgYW5kIGJ1c2luZXNzIGJhbmtpbmcgc2VydmljZXMgaW4gdGhlIEtleSBXZXN0IEZsb3JpZGEgYXJlYS4gCllvdSBoYXZlIGFsdGVybmF0aXZlcy4gCkxhIG5haXNzYW5jZSBldCBsYSB2aWFiaWxpdCA6IHRvdXQgaG9tbWUgYWNxdWlyZSBsYSBwZXJzb25uYWxpdCBqdXJpZGlxdWUgYXUgbW9tZW50IG8gaWwgbmFpdC4gTCdlbmZhbnQgbmFpdCBzdWpldCBkZSBkcm9pdCBzJ2lsIG5haXQgdml2YW50IGV0IHZpYWJsZS4gVG91dGVmb2lzLCBsJ2FjcXVpc2l0aW9uIGRlIGNldHRlIHBlcnNvbm5hbGl0IHBldXQgcmVtb250ZXIgYXZhbnQgbGEgbmFpc3NhbmNlLCAgcGFydGlyIGRlIGxhIGNvbmNlcHRpb24uIApCb25zIGFjaGF0cyBkZSBsaXZyZXMgYWxvcnMgOykKV2hpdGUgd2VkZGluZyBkcmVzcyAgIEkgZmVsdCB0aGUgc2FtZSB3YXkgaW5pdGlhbGx5LiBJIGVuZGVkIHVwIGNob29zaW5nIGFuIGl2b3J5L2NoYW1wYWduZSBjb2xvciBzbyB0aGF0IGl0IHdhcyBjbG9zZSBlbm91Z2ggdG8gYXBwZWFzZSB0aGUgdHJhZGl0aW9uYWxpc3RzIGJ1dCBzdGlsbCBub3QgcHVyZSB3aGl0ZS4gCk5vdyBpdCBpcyB0aW1lIGZvciB0aGVtIHRvIGZhY2UgdGhlIEp1ZGdlbWVudCBvZiBHb2QgaW4gdGhlIGZvcm0gb2YgZGVhdGguIApCZW4gaGFzIGtub3duIEplbm5pIHNpbmNlIHdlIG1vdmVkIGludG8gdGhpcyBob3VzZS4gCkh1c2hUaGVNYWdpY1BvbnkgIDQgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KVGhlIGNvc3QgaXMgJDI1IHBlciBwZXJzb24gYW5kIGluY2x1ZGVzIGEgYmFyYmVjdWUsIG11c2ljLCBhIDUwLzUwIGRyYXdpbmcsIGF1Y3Rpb24gYW5kIGZyZWUgdCBzaGlydC4uIApBIG1ham9yIHRoZW1lIHRocm91Z2hvdXQgaHVtYW4gaGlzdG9yeSBpcyB0aGUgY29uZmxpY3Qgb2YgdGhlIHR3byBpZGVhcywgIlBlb3BsZSBuZXZlciBjaGFuZ2UiIGFuZCAiUGVvcGxlIGFyZSBleGNlc3NpdmVseSBjaGFuZ2VhYmxlIi4gCldoYXRldmVyIHlvdSBkbywgZG9uIGNoYW5nZSB5b3VyIGxvb2sgd2hpbGUgaW50ZXJ2aWV3aW5nLiAKU2F5aW5nICJTbyB3aGF0PyIgVG8gc29tZW9uZSB0ZWxsaW5nIHlvdSB5b3Ugb3V0IG9mIG9yZGVyIGRpZCBub3RoaW5nIGZvciBoZXIgcG9zaXRpb24gb3RoZXIgdGhhbiBzaG93IHNoZSBkb2VzbiBjYXJlIGFib3V0IHRoZSBydWxlcyBvZiBob3cgc2hlIHNob3VsZCBjb25kdWN0IGhlcnNlbGYuIApJbiBvdGhlciB3b3Jkcywgd2hpbGUgQ2F0aG9saWNzIHdlcmUgc3RpbGwgbWlyZWQgaW4gdGhlIGlkZWEgdGhhdCBncmVlZCBpcyBiYWQsIHRoYXQgaXQgaXMgbW9yZSBkaWZmaWN1bHQgZm9yIGEgcmljaCBtYW4gdG8gZ2V0IGludG8gaGVhdmVuIHRoYW4gYSBjYW1lbCB0byBwYXNzIHRocm91Z2ggdGhlIGV5ZSBvZiBhIG5lZWRsZSwgdGhlIFByb3Rlc3RhbnRzIHdlcmUgYmVnaW5uaW5nIHRvIG1ha2UgYSByZWxpZ2lvbiBvdXQgb2YgcHJvZml0Li4gCkEgbWVsbG93IGphenogbWVsb2R5IHBsYXlzLiBUaXRsZSBjYXJkOiBUaGUgS3J1c3R5IHRoZSBDbG93biBTaG93IChvcmlnaW5hbCBhaXJkYXRlOiBGZWJydWFyeSA2IDE5NjEpCk9yLCB5b3UgbWF5IGdldCByZWplY3RlZCB3aGljaCBpcyBzdGlsbCBhIGdvb2QgdGhpbmchIEJlY2F1c2UgeW91IGNhbiB1c2UgdGhhdCBhcyBhIHN0ZXBwaW5nIHN0b25lIHRvIG1vdmUgb24gZnJvbSBoZXIuVG8gYmUgaW4gdGhpcyBmcmllbmQgem9uZSB3aGVyZSB5b3UgYXJlIHNvIGluZmF0dWF0ZWQgYW5kIHNoZSBpcyBub3QgaXMgYSBzdXBlciBkYW5nZXJvdXMgcGxhY2UuIFlvdSB3aWxsIG5vdCB3YW50IHRvIGRhdGUgYW55b25lIGVsc2UsIGFuZCBzaGUgd2lsbC4gClF1ZXN0aW9ucyBzdWNoIGFzLCAiQXJlIHlvdSBvcHRpbWlzdGljPyBPciAiRG8geW91IHJvb3QgZm9yIHVuZGVyZG9ncz8iIHNlZW1lZCBtZWFuaW5nbGVzcywgYXMgdGhlIGFuc3dlcnMgd2VyZSBzZWxmIGV2aWRlbnQuIApIZSByYXJlbHkgZGlzcGxheXMgYW55IHRlbGxzIGFuZCBjYW4gcmVhZCBvdGhlciBwbGF5ZXJzIGJldHRlciB0aGFuIGFueSBvdGhlci4uIApEb3VibGluZyB0aGlzIHN0YXRlbWVudC4gVGhlIGJlc3QgbGVzc29uIEkgZXZlciBsZWFybmVkIHdpdGggdGhpcyBnYW1lIGlzIHRvIHVzZSB0aGUgbXV0ZSBidXR0b24gY29uc2lkZXJhYmx5IG1vcmUgb2Z0ZW4gdGhhbiBJIHRoaW5rIEkgbmVlZCB0by4gWW91IG5ldmVyIG1lZXQgd2l0aCB0aGVzZSBwZW9wbGUgb3V0c2lkZSBvZiB0aGlzIHBhcnRpY3VsYXIgZG90YSBnYW1lLiAKIkJyYXR6IGNlbGVicmF0ZWQgbWF0ZXJpYWxpc207IHdlIGRvbid0LCIgc2FpZCBCZW4gVmFyYWRpLCB0aGUgY3JlYXRpdmUgZGlyZWN0b3Igb2YgU3BpbiBNYXN0ZXIsIHRoZSBUb3JvbnRvIGNvbXBhbnkgdGhhdCBtYWtlcyB0aGUgcGxhc3RpYyBMaXYgZG9sbHMsIHBvc2l0aW9uZWQgYXMgdGhlIGFudGkgQnJhdHosIGRlY2tlZCBvdXQgaW4gZGVuaW0gamFja2V0cyBhbmQgdG9vbGluZyBhcm91bmQgb24gdGlueSBtb3RvciBzY29vdGVycy4gClRoZSBsYWR5IG9uIHRoZSBvdGhlciBzaWRlIG9mIG1lIGNhY2tsZXMgaW5zdGVhZCBvZiBsYXVnaHMgYW5kIHJlY2VudGx5IGdvdCBhIG5ldyBzb3VuZCBzeXN0ZW0gdGhhdCBmYWNlcyBvdXIgc2hhcmVkIHdhbGwuIApDZWxlYnJpdGllcyBoYXZlIGJlZW4gZ2V0dGluZyBhcm91bmQgdGhlIHdob2xlICJjdXQgYmFjayBvbiB0aGVpciBsaWZlc3R5bGUiIHRoaW5nIGJ5IGluc3RlYWQgcGxhbnRpbmcgYSBzaGl0bG9hZCBvZiB0cmVlcyBzb21ld2hlcmUgaW4gdGhlIHdvcmxkLCBhcmd1aW5nIHRoYXQgdGhlIHRob3VzYW5kIG9yIHNvIHRyZWVzIHRoZXkndmUgcGxhbnRlZCAod2VsbCwgcGFpZCBzb21lIGNoYXJpdHkgdG8gcGxhbnQgaW4gc29tZSB0aGlyZCB3b3JsZCBmYXJtZXIncyBiYWNrIHlhcmQpIHdpbGwgY29tcGxldGVseSBuZXV0cmFsaXplIHRoZWlyIGNhcmJvbiBmb290cHJpbnQuCklmIHRoZSBwbGF5ZXJzIGJvdGggaGF2ZSB0d28gcGFpciwgdGhlIGhpZ2hlc3QgcGFpciB3aWxsIHdpbiByZWdhcmRsZXNzIG9mIHRoZSBraWNrZXIuIEFjY29yZGluZyB0byB5b3VyIHF1ZXN0aW9uIEknbSBndWVzc2luZyB0aGF0IG9uZSBvZiB0aGUgdHdvIHBhaXIgaGFuZHMgaXMgbmluZXMgYW5kIHRoZSBvdGhlciBpcyBzaXhlcywgaW4gdGhpcyBjYXNlIHRoZSBBY2UgaXMgaXJyZWxldmFudCBiZWNhdXNlIHRoZSBuaW5lcyBiZWF0IHRoZSBzaXhlcy4gClRyeSBzdGlja2luZyB0byBvbmx5IGZsYXR0aW5nIHRoZWlyIDNiZXRzIHdpdGggMjIgOTksIGl0cyBldmVuIGZpbmUgdG8gY29sZCBjYWxsIGEgM2JldCBpZiB5b3UgdGhpbmsgdGhlIG9yaWdpbmFsIHJhaXNlciBpcyB1bmxpa2VseSB0byA0YmV0IHRoZSAzYmV0dG9yLCBpbiBmYWN0IHlvdSB3aWxsIGdpdmUgdGhlIG9yaWdpbmFsIHJhaXNlciBiZXR0ZXIgcG90IG9kZHMgdG8gZ2V0IGludG8gdGhlIGhhbmQgd2hpY2ggd2lsbCBpbiB0dXJuIGdpdmUgeW91IGV2ZW4gYmV0dGVyIGltcGxpZWQvcG90IG9kZHMgdG8gc2V0IG1pbmUuIApHYXJ5IFBlY2ssIGV4ZWN1dGl2ZSBkaXJlY3RvciBvZiB0aGUgQW1lcmljYW4gQ2l2aWwgTGliZXJ0aWVzIFVuaW9uIG9mIE5ldmFkYSwgc2FpZCB0aGF0IGVyYXNpbmcgdGhlIHRhcGVzIGFuZCBub3QgbWFraW5nIHRoZW0gYXZhaWxhYmxlIHRvIGRlZmVuc2UgYXR0b3JuZXlzIGlzIGRlc3RydWN0aW9uIG9mIGV2aWRlbmNlIGFuZCBhIHZpb2xhdGlvbiBvZiB0aGUgMTR0aCBBbWVuZG1lbnQuClBlcmhhcHMgdGhlIG1vc3QgaW50ZXJlc3Rpbmcgc3RvcnkgdG8gY29tZSBteSB3YXkgd2FzIHRoZSB3aWZlIG9mIGEgc29sZGllciB3aG8gaGFkIGFscmVhZHkgbWFkZSBpdCB0byBDYW5hZGEuIFNoZSB3YXMgam9pbmluZyBoZXIgaHVzYmFuZCBiZWNhdXNlIGhpcyBDb21tYW5kaW5nIE9mZmljZXIgaGFkIGNvbWUgdG8gaGVyIHdpdGggYSBwbGFuIHRvIHRyaWNrIGhlciBodXNiYW5kIGludG8gY29taW5nIGJhY2sgdG8gdGhlIGJhc2UuIFRoZSBwbGFuIHdhcyB0byB0ZWxsIGhpbSBoaXMgd2lmZSBoYWQgYmVlbiBicnV0YWxseSByYXBlZCBhbmQgd2FzIGluIHRoZSBob3NwaXRhbC4gClRoZXJlIGxpa2UgYW4gZWJiIGFuZCBmbG93IGFuZCBJIGFsd2F5cyB0aGluayBpdCBvdmVyIGJ1dCBpdCBjeWNsZXMgYmFjay4gVGhlIGZydXN0cmF0aW9uIHdpdGggZ2V0dGluZyBubyBoZWxwIC4gCklmIHlvdSBoYXZlIG1vcmUgdGhhbiBhIGZldyB3ZWVrcyBvZiBpbnRlbnNlIGxvc3MsIHRob3VnaCwgSSBjaGVjayBpbiB3aXRoIGEgZG9jdG9yIHRvIG1ha2Ugc3VyZSB0aGF0IHlvdXIgdGh5cm9pZCBhbmQgaG9ybW9uZXMgYXJlIGFsbCBvcGVyYXRpbmcgYXMgdGhleSBzaG91bGQuLiAKSSB0ZW5kIHRvIGFncmVlLCBhcyBhIGJsZWVkaW5nIGhlYXJ0IGphbmttYXN0ZXIuIEkgdGhpbmsgaXQgY291bGQgZWFzaWx5IGJlIGZpeGVkIHdpdGggYW5vdGhlciByb29tIG9yIHR3byB0byBwbGF5IGluLiBDYXN1YWwgYW5kIENvbXBldGl0aXZlIGRvZXNudCBxdWl0ZSBjb3ZlciBpdC4gSSB3b25kZXIgaWYgaXQgcG9zc2libGUgdG8gZnVubmVsIG5ldGRlY2tzIGludG8gb25lIHBsYWNlIHN1Y2Nlc3NmdWxseT8gbGlrZSBKbmV0IGNvdWxkIHBheSBhdHRlbnRpb24gYW5kIGRlbnkgYWNjZXNzIHRvIGEgZGVjayBpbiBjZXJ0YWluIHJvb21zIGlmIHRoZSBjYXJkcyBhcmUgOTUlIHNpbWlsYXIgdG8gYSBtYWpvciBuZXRkZWNrIG9yIHNvbWV0aGluZz8gSSBubyByZWFsIHVuZGVyc3RhbmRpbmcgb2YgY2xvanVyZSBhbmQgaG93IGZlYXNpYmxlL2RpZmZpY3VsdCB0aGlzIG1pZ2h0IGJlLgpQbGF5ZXJzIGF0IHRoYXQgc3Rha2UgKGlmIHRoZXkgYXJlIGV2ZW4gYXJvdW5kKSBhcmUgdGhlIG1vc3QgcXVhbGlmaWVkIHRvIGFuc3dlciB0aGF0IHF1ZXN0aW9uLCBidXQgc2luY2UgeW91IGFza2VkIGl0IGhlcmUgd2hlcmUgdGhlIHF1YW50aXR5IG9mIHRoZW0gbWF5IGJlIGxvdywgSSB3aWxsIG9mZmVyIGEgZ3Vlc3MuIEkgaW1hZ2luZSBzdHJvbmcgNTAvMTAwIHBsYXllcnMgaGF2ZSBhbiBpbmNyZWRpYmx5IHNvbGlkIGZvdW5kYXRpb24gb2YgdGhlIGJhc2ljIGZ1bmRhbWVudGFscyBvZiBwb2tlciwgc3VjaCBhcyBiZWluZyBhYmxlIHRvIHJlY29nbml6ZSB0aGUgR1RPIGxpbmUgaW4gdGhlIG1ham9yaXR5IG9mIHNwb3RzLCBhcyB3ZWxsIGFzIHRvIGlkZW50aWZ5IHRoZWlyIG9wcG9uZW50cyBwbGF5IGJhc2VkIG9mZiBvZiB0aGVpciB0ZW5kZW5jaWVzIHJhdGhlciBxdWlja2x5IHNvIHRoYXQgdGhleSBjYW4gZGV2aWF0ZSB0byBtb3JlIGV4cGxvaXRhdGl2ZSBwbGF5LiAKSW4gdGhlIGVuZCBvZiAyMDA2LCBJIG1hZGUgYSBnb2FsIG9mIG15c2VsZjogdG8gYmUgdGhlIG1vc3QgZmFtb3VzIGZlbWFsZSBwb2tlciBwbGF5ZXIgaW4gdGhlIHdvcmxkLiAKVGhleSB1c2UgdGhlIHNpbXBsZSBhbmFsb2d5IG9mIGEgc2V0IG9mIGV4ZXJjaXNlcyB0aGF0IHJlY3J1aXQgbXVsdGlwbGUgbXVzY2xlIGdyb3VwcyB0byB2YXJ5aW5nIGV4dGVudHMgYW5kIGhpZ2hsaWdodCB0aGUgZmFjdCB0aGF0IGluZGl2aWR1YWwgZGlmZmVyZW5jZXMgaW4gc3RyZW5ndGggbWF5IGNvcnJlbGF0ZSBhY3Jvc3MgbXVzY2xlIGdyb3Vwcy4gCiJBYm5vcm1hbCBwb3N0dXJlcyBhcmUgd2VsbCBrbm93biB0byBwbGF5IGEgcm9sZSBpbiB0aGUgY2F1c2F0aW9uIG9mIHBhaW4gYW5kIGZ1bmN0aW9uYWwgaW1wYWlybWVudCBsZWFkaW5nIHRvIGRpc2FiaWxpdHkuIiBDYWxsaWV0LCBSLiBEYXZpcyBDb21wYW55IEZvdXJ0aCBQcmludGluZywgMTk5MSwgcGdzLiA1IDggYW5kIDI2IDQzLgo3LiBJbmNvcnBvcmF0ZSBncm93dGggdGhpbmtpbmcgaW50byBldmVyeXRoaW5nIHlvdSBkbywgZXZlcnkgYWN0aW9uIHlvdSB0YWtlLCBldmVyeSBpbnZlc3RtZW50IHlvdSBtYWtlLCBldmVyeSBjb250YWN0IHlvdSBmb3JnZSB3aXRoIHlvdXIgYnV5ZXIgb3IgbWFya2V0cGxhY2UuIApXb3VsZCBoYXZlIHRvIGdvIHRvIExhcyBWZWdhcyBqdXN0IHNvIGhlIGNvdWxkIHBhcnRpY2lwYXRlIGluIGEgdG91cm5hbWVudC4gClRoZXNlIHBlb3BsZSBhcmUgc2VhbHMgdG8gYXJlIG1vcmUgdGhlIHBpbm5hY2xlIHR3byB0aGUgcmlnaHQgZW5kcyBhcyB3aWxsIHRha2UgR29sZGVuIEdvb3NlIEZyYW5jeSBNZW5zIFNuZWFrZXJzIGxlYXN1cmUgaW4gYSBsYXJnZXN0IG1ham9yaXR5IG9mIHBob3RvZ3JhcGhzIGZvciBLQy5VbmludGVuZGVkIGtpbGxpbmcgYXNpZGUsIHNob3VsZCBNaWNoYWVsIEphY2tzb24ncyBkZWF0aCBtYXkgaGF2ZSBiZWVuIGhvdyB0aGUgcmVzdWx0IGFzc29jaWF0ZWQgd2l0aCBhbiBwcm9qZWN0ZWQgaG9taWNpZGUsIGEgZ29vZCBwcmVtZWRpdGF0ZWQgbXVyZGVyPyBJZiBzbywgd2hhdCBkb2VzIHRoZSBtdXJkZXJlciBoYXZlIHByZXZpb3VzbHkgYmVlbiBob3BpbmcgcmVnYXJkaW5nIGdhaW4/IE1heSBwb3NzaWJseSB0aGUga2lsbGVyIGhhdmUgY29tZSBraWxsaW5nIHRoZSBwcm92ZXJiaWFsIGdnZGIgc25lYWtlcnMgc2FsZT9PciBvdmVyIHRoZSBmbGlwc2lkZSwgYSB1bmNvbnN0cnVjdGl2ZSByZXN1bHQgbWF5IHBvc3NpYmx5IHdlbGwgZHJ1ZGdlIHdheSB1cCBhIGFtb3VudCBvZiBvZiBzZXZlcmFsIGlkZWFzLiAKSXQgaW1wb3NzaWJsZSB0byB0ZWxsIHdpdGhvdXQgc2VlaW5nIHRoZSBzcGVjaWZpYyBzb3VyY2UuIApUaGUgZm91bmRhdGlvbiBoYWQgb25seSAkMzcxLDAwMCBpbiBjYXNoIGluIEp1bHkgMjAxNSwgYWNjb3JkaW5nIHRvIGl0cyBmaW5hbmNpYWwgcmVwb3J0LiAKU3dlZXQgYmFieSBKZXN1cyB0aGlzIGlzIGltcHJlc3NpdmUsIGdvb2QgZm9yIHlvdSBtYW4hIEkgc2VlIGEgbG90IG9mIHNpbWlsYXJpdGllcyB0byBteXNlbGYgaW4geW91ciBwb3N0LCBJIGdyYWR1YXRlZCB3aXRoIGFuIGFjY291bnRpbmcgZGVncmVlIGF0IDIyIHdpdGggbm8gc3R1ZGVudCBkZWJ0IGFuZCBzdGFydGVkIG91dCBtYWtpbmcgJDU1ay95ZWFyLiBJJ20gMjcgbWFraW5nICQxMDFrIHJpZ2h0IG5vdyBhbmQgZG9uJ3QgaGF2ZSBhbnl3aGVyZSBuZWFyIHlvdXIgbmV0IHdvcnRoIGJ1dCBJIHdhcyBwcmV0dHkgbGF6eSBhYm91dCBzYXZpbmcgdW50aWwgbGFzdCB5ZWFyLiAyMDE5IGlzIHRoZSBmaXJzdCBvZiBtYW55IHllYXJzIEkgcGxhbiB0byBtYXggbXkgaXJhIGFuZCA0MDFrIGFubnVhbGx5LiBJJ2QgbG92ZSB0byBzdGljayBtb3JlIGF3YXkgYnV0IHRoZSB3aWZlIGFuZCBJIHdhbnQgc29tZSBiaWcgZmxhc2h5IHRoaW5ncyBpbiB0aGUgbmVhciBmdXR1cmUgdGhhdCB3ZSBhcmUgYWxzbyBzYXZpbmcgZm9yLgpUaGUgc29sdXRpb24gd2FzIGZvciB0aGVtIHRvIG1hcnJ5IGluIGEgY2l2aWwgY2VyZW1vbnksIGFuZCB0aGVuIGhhdmUgdGhlaXIgdW5pb24gYmxlc3NlZCBpbiBhIHJlbGlnaW91cyBzZXJ2aWNlIGFmdGVyd2FyZHMuLiAKRXZlbnR1YWxseSB0aGV5IHJlYWxpemVkIHNoZSB3YXMgbm90IGp1c3QgdGFsa2luZyBhYm91dCAicmVsaWdpb3VzIGZ1Y2tzIiBidXQgYWJvdXQgaG93IGFsbCB0cmFkaXRpb25zIGhhdmUgdmFsdWUgYnV0IHRpbWVzIGNoYW5nZSBhbmQgaXQgdGFrZXMgYSBjcml0aWNhbCBtYXNzIG9mIGFib3V0ICIxMCwwMDAgbWFuaWFjcyIgdG8gbWFrZSB0aGF0IGNoYW5nZSBoYXBwZW4uIFRoZXkgaGFkIGFscmVhZHkgc3RhcnRlZCBqYW1taW5nIHRvZ2V0aGVyIGFuZCBoYWQgZmxvYXRlZCB0aGUgaWRlYSBvZiBzdGFydGluZyBhIGJhbmQgd2hlbiBvbmUgb2YgdGhlbSBzYWlkIChubyBvbmUgcmVtZW1iZXJzIHdobyksICIxMCwwMDAgTWFuaWFjcz8gV2hhdCBhIGdyZWF0IGJhbmQgbmFtZS4iIEFuZCB0aGVyZSB3YXMgYmFzaWNhbGx5IGEgbW9tZW50IG9mLCAiYXJlIHdlIGRvaW5nIHRoaXM/IExldCBkbyB0aGlzLiIgVGhpcyB3YXMgbm90IGVudGlyZWx5IHRydWUsIGhvd2V2ZXIuIEluIGZhY3QsIG5vbmUgb2YgdGhpcyBpcyB0cnVlIGFuZCBJIHNvIHNvcnJ5LiBJIGRvbiBrbm93IHdoeSBJIGRpZCB0aGlzLgpUaGUgbmV4dCBzdGVwIHRvIHByb3RlY3RpbmcgeW91ciBDbGF5IFBva2VyIENoaXBzIGJ1c2luZXNzIGlzIHRvIGVuc3VyZSB0aGF0IHlvdSBrZWVwIGFsbCBkb2N1bWVudGF0aW9uIHRoYXQgaXMgcmVsYXRlZCB0byB5b3VyIGJ1c2luZXNzIGxvY2tlZCBkb3duIGluIGEgc2FmZSBsb2NhdGlvbi4gWW91IHNob3VsZCBhbHNvIGVuc3VyZSB0aGF0IHlvdSBoYXZlIGEgYmFja3VwIG9mIGFsbCB0aGUgaW5mb3JtYXRpb24gYXQgYSBzYWZlIGxvY2F0aW9uIGFzIHdlbGwuIAoyOiBObyBsaW5rcyB0byB5b3VyIHBlcnNvbmFsIG9yIGNvcnBvcmF0ZSBibG9nLCB5b3VyIFlvdVR1YmUgY2hhbm5lbCwgdHJhZGUgc2lnbmFsIHNlcnZpY2VzLCBicm9rZXJhZ2Ugc2VydmljZXMsIGFueXRoaW5nIHJlbGF0ZWQgdG8gYmluYXJ5IG9wdGlvbnMsIG9yIHRoZSBsaWtlLgpUaGF0IGJlaW5nIHNhaWQsIHRvIG15IGVhciwgdGhlcmUgaXMgYSBzdHJhbmdlIGNvbnNpc3RlbmN5LiAKQWZ0ZXIgMS41IHllYXJzIG9mIHJ1bm5pbmcgb24gaXQsIEkgZmluYWxseSBnb3QgdGhlIE1SSSB0byBjb25maXJtIGRpYWdub3NpcywgYW5kIG9uY2UgdGhlIGRvY3RvciBjb25maXJtZWQgdGhhdCBJIHdhcyBhIGdvb2QgY2FuZGlkYXRlIGZvciBzdXJnZXJ5IEkgd2VudCBhaGVhZCB3aXRoIGl0LiAKTm8gbWF0dGVyIHdoYXQgeW91IHRoaW5rIHlvdSBuZWVkIHRvIGRvIHRvIGltcHJlc3MgaGVyLCBzaGUgd2lsbCBhbHdheXMgcmVtZW1iZXIgdGhlIGxpdHRsZSB0aGluZ3MgeW91IGRvIGZvciBoZXIsIHRoZSBtb3N0LgpJcyB0aGVuIGFuZCBvbmx5IHRoZW4gdGhhdCBoZXIgdmFtcGlyZSBmYXRoZXIsIENhcmxpc2xlIEN1bGxlbiAoUGV0ZXIgRmFjaW5lbGxpKSBzYXZlcyBoZXIgYW5kIHlldCwgaW4gaGVyIG1pbmQsIGRhbW5zIGhlciB0byBhbiBldGVybml0eSBhcyBhIG1vbnN0ZXIuLiAKVGhpcyBpcyB0cnVlIGJ1dCBpIHdhcyBqdXN0IHRyeWluZyB0byBwb2ludCBvdXQgd2h5IGl0IGNvdWxkIGJhY2tmaXJlIGJlY2F1c2UgaSBiZWxpZXZlIGEgbG90IG1vcmUgcGVvcGxlIGFyZSBnb25uYSBzdGFydCBsZXR0aW5nIHRoZWlyIGNhdHMgbG9vc2UgaW50byB0aGUgbmVpZ2hib3Job29kIGFuZCBhIGxvdCBvZiBwZW9wbGUgYXJlIGdvbm5hIHJldGhpbmsgYWRvcHRpbmcgY2F0cyBhcyB3ZWxsbCBiZWNhdXNlIHRoZXkgd29udCBiZSBhYmxlIHRvIGRlY2xhdyB0aGVtLiAKU29tZXRpbWVzIGZyYWdyYW5jZSBzaW1wbHkgdGFnZ2VkIGFsb25nIGluIHRoZSBmb290c3RlcHMgb2YgdGhlIGZhbW91cy4gCkFib3V0IDI1MSB0aW1lcyBhcyBtYW55IHBlb3BsZSBoYXZlIGJlZW4ga2lsbGVkIGluIEFmZ2hhbmlzdGFuIGFuZCBJcmFxIHRoYW4gaW4gdGhlIGdoYXN0bHkgYXR0YWNrcyBvZiBTZXB0ZW1iZXIgMTEsIDIwMDEuIE1vcmUgdGhhbiAxMDggdGltZXMgYXMgbWFueSBwZW9wbGUgaGF2ZSBiZWVuIGtpbGxlZCBpbiB0aGVzZSB3YXJzIGFuZCBvY2N1cGF0aW9ucyB0aGFuIGluIGFsbCB0ZXJyb3Jpc3QgYXR0YWNrcyBpbiB0aGUgd29ybGQgZnJvbSAxOTkzIDIwMDQuIFRoZSAyMDA0IHJlcG9ydCBzaG93ZWQgdGVycm9yaXNtIGF0IGFuIGFsbCB0aW1lIGhpZ2gsIGFuZCBhZnRlciBudW1lcm91cyBleHBlcnRzIHN1Z2dlc3RlZCB0aGF0IHRoZSB3YXJzIGluIEFmZ2hhbmlzdGFuIGFuZCBJcmFxIHdlcmUgZnVlbGluZyB0aGUgaW5jcmVhc2UsIHN1YnNlcXVlbnQgcmVwb3J0cyBoYXZlIHJlbWFpbmVkIGNsYXNzaWZpZWQuCkl0cyAkMzAgYSBib3R0bGUgc3RpY2tlciBwcmljZSBtaWQgcmFuZ2UgZm9yIGEgcHJlbWl1bSB2b2RrYSBhbHNvIHByb3ZlZCBhdHRyYWN0aXZlLCBmaWxsaW5nIGEgZ2FwIHRoZSB3b21lbiBoYWQgaWRlbnRpZmllZCBpbiB0aGUgbWFya2V0LiBUaGUgcHJvZml0IG1hcmdpbiBpcyAkMyBhIGJvdHRsZS4gdGFyZ2V0IG1hcmtldCBpcyAxOCAgdG8gMzUgeWVhciBvbGRzLCBidXQgaXQgYXBwZWFscyB0byBwZW9wbGUgb2YgYWxsIGFnZXMuIEFueW9uZSB3aG8ga25vd3MgdGhlIGJlbmVmaXRzIG9mIGhlbXAgaXMgaW50ZXJlc3RlZCwgTXMuIApUaGUgbGF0ZXN0IHZlcnNpb24gb2YgTWFnaWMgQWN0aW9uIEJveCAoTUFCKSBQcm8gaXMgbm93IGF2YWlsYWJsZSBmb3IgZG93bmxvYWQgaW4gdGhlIG1lbWJlcnMgYXJlYS4gCldoYXQgZG8geW91IHdhbnQgdGhlbSB0byBkbywgY29udGludWUgbG9zaW5nICQyIG1pbGxpb24gZXZlcnkgZm91ciB5ZWFycyB0byBob3VzZSAxMDAgcmVzaWRlbnRzIGluIGFuIGFyZWEgd2l0aCBwcm9iYWJseSB0aGUgaGlnaGVzdCBjb3N0IG9mIGxpdmluZyBpbiB0aGUgZW50aXJlIGNpdHk/IFRoYXQgZG9lc24gc291bmQgcmVhc29uYWJsZSBkb2VzIGl0PyBXaGF0IGRvZXMgc291bmQgcmVhc29uYWJsZSBpcyB0byBzZWxsIHRoZSBwcm9wZXJ0eSB5b3UgYXJlIGxvc2luZyBtaWxsaW9ucyBvbiB0aGF0IGlzIGxvY2F0ZWQgaW4gYXJlYSB0aGF0IGlzIG5vdCBjb25kdWNpdmUgdG8gdGhlIGluY29tZSBvZiB5b3VyIHJlc2lkZW50czsgYW5kIGFzIGEgcmVzdWx0IG9mIHRoZSBzYWxlLCBiZSBhYmxlIHRvIHJlbG9jYXRlIGFsbCAxMDAgcmVzaWRlbnRzIGFuZCBwcm92aWRlIDIwMCBNT1JFIGxvdyBpbmNvbWUgaW5kaXZpZHVhbHMgaG91c2luZy4gCk1haXMgZW50cmUgaWwgeSBhLCBkYW5zIGxlIGNyIGR1IGRpdmVydGlzc2VtZW50IGVuIGRpcmVjdCwgbCBpbW1lcnNpdmUgY29sbGVjdGl2ZS4gQyBsIHF1IGZhdXQgc2UgcG9zaXRpb25uZXIuIEogcXVlIHZhIG1hcmNoZXIgY2UgY291cCBjaS4gClRoZSBwZW9wbGUgaW4gY2hhcmdlIGluIFdhc2hpbmd0b24gYW5kIGluIHRoZSBwcmVzcyBhcmUgdW5jb21mb3J0YWJsZSB3aXRoIHRoZSBwcm9taXNlIG9mIHJhZGljYWwgZGVtb2NyYWN5IHRoYXQgQUNPUk4gcmVwcmVzZW50cy4gCkZNTEEgZG9lc24ga2ljayBpbiB1bnRpbCB5b3UgdXNlZCB1cCBhbnkgc2ljayB0aW1lLCB2YWNhdGlvbiB0aW1lLCBvciBQVE8uIElmIHlvdSBvdXQgb2YgdGhvc2UsIHRoZW4geW91IHF1YWxpZnkgZm9yIEZNTEEuIApPYnZpb3VzbHkgaWYgeW91IGhhdmUgdGltZSBhbmQgYSBkZWNlbnQgZGVjayBwbGF5aW5nIGl0IG91dCBpcyBiZXR0ZXIsIGJ1dCBJIHNodWRkZXIgdG8gdGhpbmsgaG93IGxvbmcgaXQgd291bGQgaGF2ZSB0YWtlbiB0byBwbGF5IG91dCBlbm91Z2ggZ2FtZXMgdG8gZ2V0IHRoZSA2MCsgcmFyZXMgSSByZWNlaXZlZCBpbiBhYm91dCBoYWxmIGFuIGhvdXIuCkdST09WRSBoeWJyaWQgY29tcHV0ZXIgbXVzaWMgc3lzdGVtLCBFeGVjdXRpdmUgNjQgd2l0aCAxNzAgS0IgZmxvcHB5LCBDb21tb2RvcmUgMjY0LCBDb21tb2RvcmUgQzE2IC8gMTE2LCBDb21tb2RvcmUgMzY0LCBDb21tb2RvcmUgMjMyLCBDb21tb2RvcmUgMTE2IE5UU0MgUHJvdG90eXBlLCBNQVggTWFjaGluZSwgQ29tbW9kb3JlIDE1NDFDLCBZYW1haGEgWU0yMTQ5IFlhbWFoYV9ZTTIxNDkgb24gdGhlIEF0YXJpIFNUIEFZIDMgODkxMCBBWSAzIDg5MTAsIGFuZCBDb21tb2RvcmUgMTI4LiAKTm8/IFdoeSBkbyB5b3UgdGhpbmsgSSBiZWxpZXZlIHRoaXM/IEkgaGF2ZSBuZXZlciBpbiBteSBlbnRpcmUgbGlmZSBzYWlkIGFueXRoaW5nIGxpa2UgdGhpcywgZG8gbm90IGJlbGlldmUgdGhpcywgYW5kIHNwZW50IG1hbnkgeWVhcnMgYXMgYSBzb2xkaWVyIHRyeWluZyB0byBwcmV2ZW50IGl0IGhhcHBlbmluZyBpbiBvdGhlciBwbGFjZXMuIE15IHNlY29uZCB3aWZlIHdhcyBKZXdpc2gsIGhlciBncmFuZG1vdGhlciB3YXMgb25lIG9mIHRoZSBraWRzIHlvdSBhcmUgZGVzY3JpYmluZy4gU2hlIHdhcyBqdXN0IG9sZCBlbm91Z2ggdGhhdCBzaGUgd2FzIGNob3NlbiBmb3IgbGFib3IgYW5kIHN1cnZpdmVkIHVudGlsIHRoZSBSdXNzaWFucyBjYW1lIGFuZCBzYXZlZCBoZXIuIFRoZSByZXN0IG9mIGhlciBmYW1pbHkgZGlkIG5vdCBzdXJ2aXZlLiBIZXIgc3RvcmllcyBtYWtlIG1lIGdyYXRlZnVsIHRoYXQgSSBuZXZlciBoYWQgdG8gZmFjZSBhbnl0aGluZyBsaWtlIHRoYXQuIEFuZCBJIGhhdmUgYmVlbiB0aHJvdWdoIGEgbG90IG9mIHNoaXQuClRyYXZlbCB3aXRoIGluIGNpdGllcyBhbmQgc3RheSBpbiBidXN5IHBsYWNlcy4gSG9zdGVscyBhcmUgZXZlcnl3aGVyZSBpbiBFdXJvcGUgaW4gZXZlcnkgbWFqb3IgY2l0eSBhbmQgY2hlYXAgcmVzdGF1cmFudHMgYW5kIHRha2Vhd2F5cyBldmVyeXdoZXJlLiAKVGhlIHByb2JsZW0gd2l0aCBydWxpbmcgZWxpdGVzLCBob3dldmVyLCBpcyB0aGF0IHRoZXkgYXJlIGFsd2F5cyBhZnJhaWQgb2YgbG9zaW5nIHRoZWlyIHBvd2VyLiAKQSBwYXNzaW9uIG1hcmsgaXMgYWN0dWFsbHkgYSBldXBoZW1pc20gZm9yIHRoZSBza2luIGRpc2NvbG9yYXRpb24gY2F1c2VkIGJ5IGV4dHJlbWUgc3Vja2luZyBvbiB0aGUgc2tpbiwgdXN1YWxseSBpbiB0aGUgbmVjayBhbmQgY2hlc3QgYXJlYXMuIFRoZSBtb3JlIHBvcHVsYXIgdGVybSwgaG93ZXZlciwgaXMgbm90IHBhc3Npb24gbWFyayBidXQga2lzcyBtYXJrIGFsc28gaW5mb3JtYWxseSBjYWxsZWQgYSBoaWNreSAoYWx0ZXJuYXRlbHkgc3BlbGxlZCBoaWNrZXkpLiBPZnRlbiwgYXQgdGhlIGhlaWdodCBvZiBleHRyZW1lIGx1c3Qgb3Igc2V4dWFsIHBhc3Npb24sIHR3byBwZW9wbGUgY2FuIGFjY2lkZW50YWxseSBjYXVzZSBraXNzIG1hcmtzIG9uIGVhY2ggb3RoZXIncyBza2luLgpJIGV4cGxhaW4gdGhhdCB0aGUuLiAKSSB3aXNoIGhlciB0aGUgYmVzdCBvZiBsdWNrLkZ1cnRoZXJtb3JlLCByYWRpb2dyYXBoaWMgZXZpZGVuY2Ugb2YgeW91ciBza2VsZXRhbCBhZ2Ugd291bGQgYmUgdGFrZW4gaW50byBhY2NvdW50IGJ5IHlvdXIgZG9jdG9yLCB0aGlzIGlzIGtub3duIGFzIGEgUmlzc2VyIHNpZ24uIFNvbWVvbmUgd2hvIGhhcyByZWFjaGVkIHNrZWxldGFsIG1hdHVyaXR5IHdpbGwgaGF2ZSBhIFJpc3NlciBzaWduIG9mIDUuVGhpcyB3YXMgdGFrZW4gZnJvbSB0aGUgZmlyc3QgcGFyYWdyYXBoIG9mIHRoZSBjaXRlZCB0ZXh0LCAiTWFueSBwYXRpZW50cyB3aXRoIEFJUyBoYXZlIG1vcmUgcGFpbiBidXQgZG8gbm90IGV4aGliaXQgbW9yZSBkaXNhYmlsaXR5IHRoYW4gdGhlIGdlbmVyYWwgcG9wdWxhdGlvbi4gRGVwcmVzc2lvbiBkb2VzIG5vdCBzZWVtIHRvIGJlIG1vcmUgb2YgYSBwcm9ibGVtIHRoYW4gaW4gdGhlIGdlbmVyYWwgcG9wdWxhdGlvbiAoNzkpLiAKWW91IHVuZGVyc3RhbmQgaGUgd291bGQgbGlrZSB5b3UgdG8gYmUgbW9yZSBkb21pbmFudCBidXQgdGhhdCBjYW4gYmUgaW50ZXJwcmV0ZWQgaW4gbWFueSB3YXlzIGFuZCB5b3Ugd291bGQgYXBwcmVjaWF0ZSBpZiBoZSBjb3VsZCBoZWxwIHlvdSB0byBjbGFyaWZ5IGEgZmV3IHRoaW5ncy4gCkVsc2V3aGVyZSBpbiBDYWxpZm9ybmlhLCBhbiAxOCB5ZWFyIG9sZCBwcm9zdGl0dXRlIGlzIGF0IHRoZSBjZW50ZXIgb2YgYW4gYWxtb3N0IHVuYmVsaWV2YWJsZSBwb2xpY2Ugc2V4IHNjYW5kYWwuCk5vdyBJJ3ZlIGFscmVhZHkgdXBsb2FkZWQgc29tZW9uZSBlbHNlJ3MgcmVjb21tZW5kYXRpb24gYW5kIGl0IHdvbid0IGxldCBtZSBlZGl0IGl0IGJlY2F1c2UgaXQgc2F5cyBteSBhcHBsaWNhdGlvbiB3YXMgZmluYWxpemVkLgpUaGlzIDFXTEEgRW5kb3dtZW50IHdhcyBlc3RhYmxpc2hlZCBpbiAxOTQzLCBhbmQgaXMgYSBzcGVjaWFsIHB1cnBvc2UgZm91bmRhdGlvbiB0aGF0IHByb3ZpZGVzIGdyYW50cyBmb3IgSVdMQSBjaGFwdGVyLCBkaXZpc2lvbiBhbmQgbmF0aW9uYWwgbGV2ZWwgY29uc2VydmF0aW9uIHByb2plY3RzLiBQZXJzb25zIG9yIG9yZ2FuaXphdGlvbnMgbWF5IHJlcXVlc3QgYSBncmFudCBhcHBsaWNhdGlvbiBvciBvdGhlciBpbmZvcm1hdGlvbiBhYm91dCB0aGUgZW5kb3dtZW50IGJ5IGNvbnRhY3RpbmcgdGhlIEVuZG93bWVudCBQcmVzaWRlbnQgQ2hhcmxlcyBFbGRyaWRnZS5PcmFjbGUgQ29vcGVyIHdhcyBhbHNvIHN1cnByaXNlZCB0byByZWNlaXZlIGEgY2VydGlmaWNhdGUgZnJvbSBBbWVyaWNhJ3MgRnJhdGVybmFsIEJlbmVmaXRzIFNvY2lldHksIHJlY29nbml6aW5nIGhlciBmb3IgaGVyIGdvb2Qgd29ya3MgcGVyZm9ybWVkIGluIHRoZSBuYW1lIG9mIEFtZXJpY2EncyBGcmF0ZXJuYWwgQmVuZWZpdCBTb2NpZXRpZXMuIApPbiB0aGUgb3RoZXIsIHByb2N1cmVtZW50IGV4cGVydHMgY2FuIGJlIGV4cGVjdGVkIHRvIHVuZGVyc3RhbmQgYWxsIHRoZSBkaXN0aW5jdGlvbnMgdGhhdCBhcmUgaW1wb3J0YW50IGluIGV2YWx1YXRpbmcgSVQgc3VwcGxpZXJzIGFuZCBzb2x1dGlvbnMuIApJIHVuZGVyc3RhbmQgZnJvbSByZWNlbnQgcHJvamVjdHMgdGhpcyBmZWVsaW5nLCBidXQgdGhhdCBpcyBub3QgdGhlIGNhc2UuIFBoaWwgaGFzIGJlZW4gcGxheWluZyBmb3IgbmVhcmx5IDIwIHllYXJzLCBhbmQgaXMgd2VsbCBjb25uZWN0ZWQgdG8gdGhlIGdsb2JhbCBwb2tlciBjb21tdW5pdHkuIE91ciBwYXJ0bmVyc2hpcCBjZW50ZXJzIGFyb3VuZCBoYXZpbmcgaGltIGZhY2lsaXRhdGUgc3RyYXRlZ2ljIHBhcnRuZXJzaGlwcywgYXMgd2VsbCBhcyB1c2luZyBoaW0gdG8gZ2V0IGhpcyBmZWVkYmFjayBvbiBvdXIgcHJvZHVjdCBhcyB3ZWxsIGFzIG91ciBnbyB0byBtYXJrZXQgc3RyYXRlZ3kuIEhlIGlzIHN0aWxsIGFjdGl2ZWx5IHBsYXlpbmcsIGFuZCBoYXMgaGlzIGZpbmdlciBvbiB0aGUgcHVsc2Ugb2YgdGhlIHdob2xlIGluZHVzdHJ5LCB0aGluayBuZXcgdXAgYW5kIGNvbWluZyBnYW1lIHR5cGVzIChzZWUgc2hvcnQgZGVjayBwb2tlciBmb3IgZXhhbXBsZSksIGFuZCB3aWxsIGhlbHAgYWR2aXNlIHVzIG9uIHdoYXQgZm9ybWF0cyB3ZSBzaG91bGQgaW1wbGVtZW50IGZvciBhbiBpbml0aWFsIGxhdW5jaC4KSSBjYWxsZWQgdGhlIE5ldmFkYSBUZXN0IFNpdGUgSGlzdG9yaWNhbCBGb3VuZGF0aW9uIGFuZCBzcG9rZSB0byBpdHMgQXJjaGl2aXN0LCBNcy4gCkhlbGwgeWVhaCwgaSBndWVzcyBoZSB3b3VsZG50IG1pbmQgbWUgY2FsbGluZyBoaXMgZGF1Z2h0ZXIgbXkgYml0Y2gsIGl0cyBvbmx5IGEgd29yZCEgYW4gaW5ub2NlbnQgd29yZC4KRmxvb2RlZCBpcyB1bnVzdWFsbHkgZnJlbmV0aWMgLiAKTm93IG9uIDYwIE1pbnV0ZXM6IFRoZXJlIGxlc3MgdGhhbiBhIG1vbnRoIHVudGlsIHRoZSBtaWQgdGVybSBlbGVjdGlvbnMuIEhlYXIgd2hhdCBQcmVzaWRlbnQgVHJ1bXAgaGFzIHRvIHNheSBhYm91dCBzb21lIG9mIHRoZSBpc3N1ZXMgdGhhdCB3aWxsIGxpa2VseSBiZSBtb3RpdmF0aW5nIHZvdGVycyBhdCB0aGUgYmFsbG90LiBIZSB0b2xkIFRpbWUgZWFybGllciB0aGlzIHllYXIgdGhhdCBoZSBjb25zaWRlcnMgaGltc2VsZiBhbiBpbmRlcGVuZGVudCB3aG8gc3VwcG9ydGVkIGJvdGggUmVhZ2FuIGFuZCBmb3JtZXIgUHJlc2lkZW50IEJpbGwgQ2xpbnRvbi4uIApLZW1waW5za2kgQWlycG9ydCBIb3RlbCBhdCBNdW5pY2gKVGhhdCBzYWlkIGl0IGNvdWxkIGJlIHRvdGFsIGJ1bGxzaGl0LiBJIGRvIG5vdCBrbm93LCB0aGVyZSBhcmUgY29uZmxpY3RpbmcgaWRlYXMgYWJvdXQgaG93IGZlYXNpYmxlIHRoaXMgaXMuIEkgdGhpbmsgd2Ugc2hvdWxkIGxvb2sgYXQgaXQgaW4gdGhlIG1vc3Qgb3B0aW1pc3RpYyB3YXkgcG9zc2libGUsIGFuZCBydW4gbW9yZSBzdHVkaWVzLCBhdCBsZWFzdC4KV2hhdCBPcGVuIENsb3NlZCBGb3IgSW5kZXBlbmRlbmNlIERheUFoZWFkIG9mIHRoZSBJbmRlcGVuZGVuY2UgRGF5IGhvbGlkYXkgb24gVHVlc2RheSwgbWFrZSBzdXJlIHlvdXIgcGxhbnMgZG9uIGJvbWIgYW5kIHlvdSBhd2FyZSBvZiB3aGF0IG9wZW4gYW5kIGNsb3NlZC4KQXMgd2UgZ2V0IG9sZGVyLCBob3dldmVyLCBvdXIgZW5lcmd5IHN0b3JpbmcgYW5kIGVuZXJneSBtb3ZpbmcgYXBwYXJhdHVzIGJlZ2luIHRvIGZhaWwsIGFuZCBieXByb2R1Y3RzIGJlZ2luIHRvIGFjY3VtdWxhdGUuCktlbGx5J3MgbW91bnRpbmcgbGVnYWwgdHJvdWJsZXNVbnZhY2NpbmF0ZWQgYm95IGFsbW9zdCBkaWVzIG9mIHRldGFudXNTb21lIHN0YXRlcyBtYWtpbmcgbW92ZXMgdG8gb3B0IG91dCBvZiBkYXlsaWdodCBzYXZpbmcgdGltZVB1cHB5IG1pbGwgb3BlcmF0b3IgYXJyZXN0ZWQgYW5kIG1vcmUgdGhhbiA3MDAgZG9ncyByZXNjdWVkTW90aGVyIG9mIFIuIApCdXQgdGhlaXIgbGVhZGVyIHdhcyBhbm9pbnRlZCBieSB0aGUgYWxtaWdodHkuIApTbyBpbWFnaW5lIGEgNk1NIGphZ2dlZCBzdG9uZSBqdXN0IHB1c2hpbmcgaXRzZWxmIHRocm91Z2ggeW91ciAzTU0gd2lkZSBwaXNzIHR1YmVzLiAKVGhlIGlzc3VlIGhlcmUgaXMgdGhhdCwgc2luY2UgeW91IGRyaWJibGUgYXdheSBmcm9tIHRoZSBkb3VibGUgdGVhbSwgeW91IGRvbiBhY3R1YWxseSBnZXQgdHJhcHBlZCB0aWwgeW91IG9uIHRoZSBiYXNlbGluZS4gCkxldHMgdGFsayBhYm91dCBob3cgbXVjaCBwZW9wbGUgbWFkZSB0aGVuLiBJIHVzZWQgdG8gYXZlcmFnZSBhcm91bmQgYSAkMzAwMCB5ZWFybHkgdGF4IHJldHVybi4gClRoaXMgcG90aW9uIHR1cm5zIGhpbSBpbnRvIGEgd29tYW4gd2hvIGhhcyBoZXIgb3duIHBlcnNvbmFsaXR5LiAKVGhpcyBoYXBwZW5zIGV2ZXJ5d2hlcmUsIGZvciBhbG1vc3QgZXZlcnl0aGluZyBmcm9tIGZhc3QgZm9vZCB0byB0aGUgYmFyYmVyIHNob3AgdG8gdGhlIGNhciB3YXNoISBUaGV5IHB1dCBpdCBvbiB5b3UgdG8gbWFrZSB1cCB0aGVpciBzaGl0IHBheSEgVG90YWwgYnVsbHNoaXQuIEkgdXNlZCB0byBsb3ZlIHRvIHRpcC4gSSdtIGEgdmVyeSBnZW5lcm91cyBwZXJzb24uIEJ1dCBub3cgdGhleSBkb24ndCB1c3VhbGx5IGhhdmUgZ3JlYXQgY3VzdG9tZXIgc2VydmljZSBhdCBtb3N0IHBsYWNlcyBhbmQgc3RpbGwgd2FudCBtZSB0byBjYXJyeSB0aGUgc2xhY2sgb24gc2hpdCBwYXkuClVubGVzcyB5b3UgaGF2ZSBhIHJlYWxseSBzdHJvbmcgaGFuZCAodGhpcyBtZWFucyBhIGhhbmQgdGhhdCBoYXMgRVYgZ3JlYXRlciB0aGFuIDEuNWJiKSB5b3Ugd2FudCBhIGZvbGQuIApPZiA1MCBwYXRpZW50cywgMzQgd29yZSBhIGJyYWNlICgxNyBpbiBlYWNoIG9mIHRoZSBncm91cHMpLCBtZWFuIGFnZSB3YXMgMTMuNDEuNnllYXJzLCBhbmQgbWVhbiBDb2JiIGFuZ2xlIDI4LjU4LjguIFRoZSBSQ1Qgc2hvd2VkIHRoYXQgdGhlIFNjaHJvdGggaW50ZXJ2ZW50aW9uIHdhcyBzdXBlcmlvciBjb21wYXJlZCB0byB0aGUgc3RhbmRhcmQgb2YgY2FyZSBhbG9uZSBpbiBpbXByb3ZpbmcgQ29iYiBhbmdsZXMgWzMxOV0sIGJhY2sgbXVzY2xlIGVuZHVyYW5jZSBbMzIwXSwgU1JTIDIyciBwYWluIFszMjBdIGFuZCBzZWxmIGltYWdlIGRvbWFpbnMgWzMyMF0uIApJJ20gc2ljaywgYXQgYSBjaGFyaXR5IGV2ZW50IEknbSBnZXR0aW5nIHNsYWNrIDRiZWluZyBoZXJlIGJjIEkgaGF2ZSBhIGJhYnk/IiBzaGUgd3JvdGUuIApLaW0ncyBmaXRuZXNzIGpvdXJuZXkga2lja2VkIG9mZiBsYXN0IHllYXIsIHdoZW4gc2hlIGNhbWUgYWNyb3NzICJyaXBwZWQiIGJvZHlidWlsZGVyIGFuZCB0cmFpbmVyIE1lbGlzc2EgQWxjYW50YXJhIG9uIEluc3RhZ3JhbSBhbmQgd2FzIGludHJvZHVjZWQgdG8gdGhlIHdvbmRlcnMgb2YgZGVhZGxpZnRzIGFuZCBwbGFua3MuIEJlZm9yZSB0aGVuLCB0aGUgbW9tIHRvIE5vcnRoLCA1LCBTYWludCwgMiwgYW5kIENoaWNhZ28sIDcgbW9udGhzLCAod2l0aCBodXNiYW5kIEthbnllIFdlc3QpIGFkbWl0dGVkIG9uIGhlciBhcHAsICJJIHVzZWQgdG8gdGhpbmsgdGhhdCBsaWZ0aW5nIHdlaWdodHMgd2FzIGludGltaWRhdGluZyBiZWNhdXNlIEkgZGlkbid0IHdhbnQgdG8gbG9vayBidWxreS4iIFNoZSB3YW50ZWQgdG8gbG9vayBhbmQgZmVlbCBzdHJvbmdlciBhbmQgYnVpbGQgbGVhbiBtdXNjbGUsIHNoZSBzYWlkLCBzaGUganVzdCBkaWRuJ3QgcmVhbGx5IGtub3cgaG93IHRvIGdvIGFib3V0IGl0LiAiTWVsIHNob3dlZCBtZSB0aGF0IGRvaW5nIGNhcmRpbyBhbG9uZSBpc24ndCBlbm91Z2ggdG8gZ2V0IHRoZSBwaHlzaWNhbCByZXN1bHRzIHRoYXQgSSB3YW50ZWQsIiBLaW0gY29udGludWVkLiAKV291bGQgcmVxdWlyZSBhIHJldm9sdXRpb24uIApLbm93aW5nIGhvdyB0byBkZWFsIG1vcmUgZ2FtZXMgd2lsbCBtYWtlIHlvdSBtb3JlIGhpcmVhYmxlLiAKVW5jb3ZlcmVkIGEgbG90IG9mIGRldGFpbHMgYWJvdXQgdGhlIHBvbGljZSBpbnZlc3RpZ2F0aW9uIGFuZCBhIGxvdCBhYm91dCB0aGUgZ2lybHMsIHdoYXQgaGFwcGVuZWQgdG8gdGhlbSwgdGhlIGVmZmVjdCBvbiB0aGVpciBsaXZlcy4gClJldmVyc2UgaW1wbGllZCBvZGRzIGFyZSB0aGVyZSB0b28sIGluIGNhc2Ugb25lIG9mIHRoZSBvdGhlciBwbGF5ZXJzIGhhcyBhbiBBY2UgIG9yIFF1ZWVuIGhpZ2ggZmx1c2ggZHJhdywgb3IgaWYgdGhlIEhKIGhpdHMgYSBmdWxsIGhvdXNlLiBPbmUgb2YgdGhlIHBsYXllcnMgd2l0aCB0aGUgaGlnaGVyIGZsdXNoIGRyYXcgbWlnaHQgc3Bhenogb3V0LCByYWlzZSBldmVyeW9uZSBhbGwgaW4gb24gdGhlIGZsb3AsIGFuZCB5b3UgYmUgaW4gYSB0b3VnaCBzcG90LCBwb3NzaWJseSBkcmF3aW5nIGRlYWQuLiAKSXQncyBiZWVuIHF1aXRlIGEgYmlnIHllYXIgZm9yIHN1Y2Nlc3NmdWwgb25saW5lIHBldGl0aW9ucywgd2l0aCBKdWxpYW4gQmxhbmMgYmVpbmcgYmFubmVkIGZyb20gdGhlIFVLIGFzIGEgcmVzdWx0IG9mIGEgY2FtcGFpZ24gYWdhaW5zdCBoaW0gYW5kIERhcHBlciBMYXVnaHMgZ2V0dGluZyBoaXMgc2hvdyBjYW5jZWxsZWQuClRoZSBmaWVyeSBmdW5kYW1lbnRhbGlzdCBsZWFkZXIgaGFzIHByZWFjaGVkIGFybWVkIGRlZmlhbmNlIG9mIHRoZSBnb3Zlcm5tZW50IGluIGEgY3J1c2FkZSBmb3IgZ3JlYXRlciBTaWtoIHJpZ2h0cywgYW5kIG9mZmljaWFscyBhY2N1c2UgaGltIG9mIG1hc3Rlcm1pbmRpbmcgYSBjYW1wYWlnbiBvZiB0ZXIgIHJvcmlzbSB0aGF0IGhhcyBjbGFpbWVkIG5lYXJseSA0MDAgbGl2ZXMgaW4gdGhlIHBhc3QgZm91ciBtb250aHMuIApPbmNlIHRoZSByZWR1Y3Rpb24gdGFyZ2V0IHdhcyBtZXQsIG9uZSBpbiBvbmUgb3V0IGJlY2FtZSB0aGUgbmV3IHN0YW5kYXJkLiAKQW5uIEh1aSdzIGZhdGhlciB3b3JrcyBpbiB0aGUgTGVnaW9uIENhZmUga2l0Y2hlbiB3aGlsZSBoZXIgbW90aGVyIHN0YW5kcyBpbiB0aGUgYmFja2dyb3VuZCwgaG9sZGluZyBoZXIgc2lzdGVyIFBhbnN5LgpNYXliZSB0aGF0IHNvbWV0aGluZyB0byByZWFkIGZvciBhcyB5b3UgY29tYiB0aGUgY291bnRlcmFyZ3VtZW50cy4uIApGcmFua2xpbiBhbmQgTWFyc2hhbGwgdGhlIGNvbXBhbnkgd2FzIGZvdW5kZWQgYnkgYSBwYWlyIG9mIGVudHJlcHJlbmV1cnMgaW4gVmVyb25hIGluIDE5OTksIG1vcmUgdGhhbiAyMDAgeWVhcnMgYWZ0ZXIgRnJhbmtsaW4gTWFyc2hhbGwgdGhlIGNvbGxlZ2Ugd2FzIGZvdW5kZWQgaW4gTGFuY2FzdGVyIGJ5IGEgZ2lmdCBmcm9tIEJlbmphbWluIEZyYW5rbGluLgpSdWxlIG5vLjcgICBObyBmYW5BUlQgb3IgY29taWNzLiBTcGVha3MgZm9yIGl0c2VsZiwgc21oLgpCZWluZyBpbnRlbnNlIGlzIE5PVCBhIGZsYXcuIFlvdSBhcmUgbm90ICJ0b28gbXVjaCIsIHRoZSByaWdodCBwZW9wbGUgd2lsbCBiZSBhdHRyYWN0ZWQgdG8gdGhpcyBjYXB0aXZhdGluZyBlbmVyZ3kgbm90IHNjYXJlZCBhd2F5IGJ5IGl0LiAKS29ibGVueiBpbiBvbmUgaW5zdHJ1Y3Rpb24gc2hlZXQgc2F5czpPbmUgc21hbGwgcHJvYmxlbS4gTm8gc3VyZ2UgaXMgY3JlYXRlZCBieSBhbnkuIEJsYWNrb3V0cyBuZXZlciBoYXJtIGFueSBhcHBsaWFuY2VzICAgZWxlY3Ryb25pYyBvciBtb3Rvcml6ZWQuIApUaGVuLC4gSW1tZWRpYXRlbHkgc2VsZWN0IEVYSVRHQU1FLC4gQmFjayBhdCB0aGUgbWFpbiBtZW51LiAKVGhlIGhpZ2hlc3QgY2FyZChzKSB3aW4gb2YgY291cnNlIHRoZSBoYW5kLiBJbiB0aGlzIGNhc2UgSSdtIGdvaW5nIHRvIGdpdmUgeW91IGFuIGV4YW1wbGUuIFNpbmNlIHRoZXJlIGlzIG5vIDUndGggY2FyZCBJJ2xsIHVzZSBYIGZvciBpdC4gCkhlciBiZWluZywgaW4gT1AncyBvd24gd29yZHMsIHN0dXBpZCBkb2Vzbid0IG1lYW4gdGhhdCBzaGUgZG9lc24ndCBkZXNlcnZlIHJlZGVtcHRpb24gb3IgdGltZSB0byBwcm9jZXNzLiBJdCBkb2Vzbid0IG1lYW4gaGUgc2hvdWxkIGRyb3AgaGVyLiBJdCBkb2Vzbid0IG1lYW4gc2hlJ3MgYW4gb3V0cmlnaHQgc2hpdHR5IHBhcmVudC4gVGhleSdyZSBzdGlsbCBmYW1pbHkuIEkga25vdyBmYW1pbHkgaXNuJ3QgYWx3YXlzIGV2ZXJ5dGhpbmcsIGJ1dCBhdCB0aGUgdmVyeSBsZWFzdCBpdCBtZWFucyB0aGF0IHlvdSBkb24ndCBqdXN0IGNhbGwgYWJ1c2UgZHVtcCB0aGVtIHdpdGhvdXQgZ2l2aW5nIHRoZW0gdGltZS4KRGVzc3V0b20ga2FuIGR1IFZpc2Egc3QgZCBmIHIgZGl0dCB2IG5saWdhIGt2YXJ0ZXIgSHViYmVyIGhlbHQgZW5rZWx0IGdlbm9tIGF0dCBib2ttIHJrYSBkZW4gaCByIHNpZGFuIGVsbGVyIGJsYW5kIHZpc3NhIGZyYWt0aW9uZXIsIG0gc3RlIGR1IGsgcGEgdXBwZHJhZyBzb20gbWVkIGYgcmRlbCBmciBuIGdydXBwZW4uIApTaW5jZSBpdCB0aGUgZW5kIG9mIHRoZSBuaWdodCBhbmQgcGVvcGxlIGFyZSBkb2luZyBpbmNyZWFzaW5nbHkgc3R1cGlkIG1vdmVzIEkgbG93ZXJlZCBoaXMgcmFuZ2UgcXVpdGUgYSBiaXQuIApZb3UgY2FuIHRha2UgYXMgbXVjaCBvZmZlbnNlIGFzIHlvdSBsaWtlLCB5b3UgY2xlYXJseSBoYXZlIG1vdGl2ZSBhbmQgYXJlbid0IGFyZ3VpbmcgaW4gZ29vZCBmYWl0aC4gClRoZSBlYXJsaWVyIFBvcnR1Z3Vlc2UgaXMgc2NoZWR1bGluZyB0byBzZXQgdXAgNSBjYXNpbm9zIGF0IHNlYXNob3JlLCB0byBkZXBpY3QgdGhlbSBhcyBhIHBvaW50IG9mIGF0dHJhY3Rpb24gZm9yIHRoZSB2aXNpdG9ycyBhbmQgdGhlIHRvdXJpc3RzLiAKSG93IFRvIFJlY2VpdmUgTWFzc2FnZSBUaGVyYXB5IER1cmluZyBQcmVnbmFuY3kKSSB3b24gJDM1MDAgd2hpY2ggaXMganVzdCAkMTAwIHNoeSBvZiAxMiBidXlpbnMhIEJ1dCBjb2luY2lkZW50YWxseSwgdGhpcyB0cmlwIHB1dCBteSBsaXZlIHBva2VyIGVhcm5pbmdzIG92ZXIgJDE1LDAwMCBhbmQgSSBub3cgaGF2ZSBlbm91Z2ggIndpbm5pbmdzIiB0byBtb3ZlIHVwIHRvICQyLyQ1IG9yICQ1LyQ1LiAKSmFtZXMgQ2FybGV0b246IE1vcmUgZnJvbSBwc3ljaGlhdHJpc3QgQ2xpdmUgQWxjb2NrIGxhdGVyLiBQcm9mZXNzb3IgSmFuIE1jTWlsbGVuIGlzIHRoZSBEaXJlY3RvciBvZiB0aGUgQ2VudHJlIGZvciBHYW1ibGluZyBSZXNlYXJjaCBhdCB0aGUgQXVzdHJhbGlhbiBOYXRpb25hbCBVbml2ZXJzaXR5LiBIZXIgYWNhZGVtaWMgYmFja2dyb3VuZCBpcyBzb2Npb2xvZ3ksIHB1YmxpYyBoZWFsdGggYW5kIHBvbGl0aWNhbCBlY29ub215LiBJbiBBdXN0cmFsaWEgdGhlc2UgZGlzY2lwbGluZXMgYXJlIGJlaW5nIGluY3JlYXNpbmdseSB1dGlsaXNlZCBpbiBnYW1ibGluZyByZXNlYXJjaCBpbiBhZGRpdGlvbiB0byB0aGUgdHJhZGl0aW9uYWwgcHN5Y2hpYXRyaWMgYXBwcm9hY2guCkkgc2FpZCBxdWlldGx5LiBNeSBmYWNlIHdhcyBvbiBmaXJlLiBJIGtuZXcgaGUgd291bGQgYmUgYW5ncnksIGVzcGVjaWFsbHkgYmVjYXVzZSBoZSBoYWQgbm93IGVuZ2FnZWQgdGhlIHdob2xlIGF1ZGllbmNlLCBhbmQgSSB3YXNuJ3QgcGxheWluZyBoaXMgZ2FtZS4gSSB3YXMgZW1iYXJyYXNzZWQsIGJ1dCBJIHdhcyBhbHNvIGFuZ3J5LiBIZSBnYXZlIG1lIGFuIGljeSBsb29rLCBkcm9wcGVkIHRoZSBjaGlwIG9uIHRoZSB0YWJsZSwgYW5kIHRyaWVkIHRvIGxhdWdoIGl0IG9mZiwgYnV0IGhlIHdhcyB2aXNpYmx5IGFuZ3J5LiIKWW91ciBhZ2VuY3kgaXMgcHJvYmFibHkgZG9pbmcgNSUgbWF0Y2hpbmcgYnV0IG9ubHkgaW4gcGF5IHBlcmlvZHMgd2hlcmUgeW91IGNvbnRyaWJ1dGUuIFlvdSB3aWxsIG5lZWQgdG8gZW5zdXJlIHRoYXQgeW91IGNvbnRyaWJ1dGUgaW4gZXZlcnkgc2luZ2xlIHBheSBwZXJpb2QgdG8gZW5zdXJlIHRoZSBtYXRjaC4gSWYgeW91IHdhbnQgdG8gZnJvbnQgbG9hZCB0aGUgVFNQIGFuZCBzdGlsbCBnZXQgdGhlIDUlIGVhY2ggeWVhciwgaXQgbm90IHRvbyBoYXJkIHRvIGZpZ3VyZSB0aGUgZm9ybXVsYSBvdXQuCkJ1ZGRoaXNtIGlzbiBhIHJlbGlnaW9uIGFzIG11Y2ggYXMgaXQgaXMgYSBmYWl0aCBpbiB0aGUgcG93ZXIgb2YgdGhlIGh1bWFuIHNwaXJpdC4gCk90aGVyIGhhbGYgb2Ygc2FuZHdpY2ggaXMgZ29vZCBhbG9uZyB3aXRoIGRlbGkgbWVhdCwgbGV0dHVjZSBvbmlvbnMuIFRoaXMgdmlzaW9uIGRldnVsZ2VzIHRoYXQgaGFsZiBvZiBmb29kLCBjcm9wcyBoYXJ2ZXN0IHdpbGwgYmUgZGFtYWdlZCBvciBkZXN0cm95ZWQgYWxsIG92ZXIgdGhlIHdvcmxkLiBTcGVjaWFsbHkgZ3JhaW5zLi4gCkluIDIwMTQsIGJ5IHRoZSB3YXksIHRoZSBEZW1vY3JhdGljIGNhbmRpZGF0ZXMgZ290IHRyb3VuY2VkIGluIENvbmdyZXNzLCBzbyB5ZWFoLCBtYXliZSBJIHdhcyByaWdodCBhYm91dCB0aGF0IG9uZS4gCkJveWZyaWVuZCB3YXMgaW4gbGlrZSA4dGggZ3JhZGUgd2hlbiBoZSBoYWQgdG8gZG8gYSBwcmVzZW50YXRpb24gb24gdGhlIEV1cm9wZWFuIFVuaW9uLCB0aGUgREFZIEFGVEVSIGhlIGdvdCBhIHBhbGF0ZSBleHBhbmRlci4gVGhlIEV1cm9wZWFuIFVuaW9uLCBvciB0aGUgVHJ5IGFuZCBzYXkgRVUgd2l0aG91dCB0b3VjaGluZyB0aGUgdG9wIG9mIHlvdXIgbW91dGggd2l0aCB5b3VyIHRvbmd1ZS4gSW1hZ2luZSBhIEJlaWJlciBoYWlyZWQgYXdrd2FyZGx5IHRoaW4gZWlnaHRoIGdyYWRlIGJveSB3aXRoIGEgYnJhbmQgbmV3IHNwZWVjaCBpbXBlZGltZW50IHN1ZmZlcmluZyB0aHJvdWdoIHRoZSBlbnRpcmUgdGhpbmcsIHVuYWJsZSB0byBwcm9ub3VuY2Ugd29yZHMsIGFuZCBzcGl0dGluZyBhbGwgb3ZlciB0aGUgcGxhY2UuCkl0J3Mgb25lIHJlYXNvbiB0aGV5IGJyb3VnaHQgaW4gUmFmYWVsaWFuICAgYSBSaG9kZSBJc2xhbmQgYmFzZWQgZGVzaWduZXIgd2hvIEZvcmJlcyBlc3RpbWF0ZXMgaGFzIGFtYXNzZWQgYSAkMSBiaWxsaW9uIGZvcnR1bmUgc2luY2UgZm91bmRpbmcgaGVyIEFsZXggYW5kIEFuaSBqZXdlbHJ5IGNvbXBhbnkgaW4gMjAwNC4KRmlyc3QgQ2VudHVyeSBGb3ggdG8gbW9yZSB0aGFuCkl0IGlzIG5vdCB0aGUgZmlyc3QgaGVhcmluZy4gVGhlIGZpcnN0IGhlYXJpbmcgd2FzIHdpdGggcmVnYXJkIHRvIHByZXNjcmlwdGlvbiBkcnVncy4gUmVtZW1iZXIgYSBsaXR0bGUgZ2lybCAgIGEgbGFkeSBzYXQgdGhlcmUsIGhlciBkYXVnaHRlciBkaWVkIGJlY2F1c2Ugc2hlIGNvdWxkIG5vdCBnZXQgJDMzMyBhIG1vbnRoIGluIGluc3VsaW4uIFRoYXQgd2FzIG91ciBmaXJzdCBoZWFyaW5nLiBTZWNvbmQgaGVhcmluZywgaHIgMSwgdm90aW5nIHJpZ2h0cywgY29ycnVwdGlvbiBpbiBnb3Zlcm5tZW50LiAKVGhhdCdzIDIgS2luZ3MgMjogMTEgMTQgd2hlcmUgR29kLCBkZWNpZGluZyB0aGF0IHdhaXRpbmcgdGhvdXNhbmRzIG9mIHllYXJzIGZvciBzb21lb25lIHNvIGluY3JlZGlibHkgYmFkYXNzIGFzIEVsaWphaCB0byBkaWUgd291bGQgYmUgdG9vIGxvbmcsIGp1c3QgcGx1Y2tlZCBoaW0gZnJvbSB0aGUgZ3JvdW5kIGFuZCB1cCB0aHJvdWdoIHRoZSBwZWFybHkgZ2F0ZXMgd2hpbGUgaGUgd2FzIHN0aWxsIGFsaXZlLiBBbmQgc2luY2UgR29kIGxpa2VzIHRvIG1ha2UgdGhvc2UgcmFyZSBwdWJsaWMgYXBwZWFyYW5jZXMgY291bnQgZm9yIHNvbWV0aGluZywgaGUgc3RhZ2VzIHRoZSB3aG9sZSB0aGluZyBpbiBhIGNvb2wgYXNzIGZsYW1pbmcgY2hhcmlvdC4KV2h5IG5vdCBkcmVzcyBpdCBiYWNrIHVwIGFuZCB0YWtlIHRoZSBkdWxsbmVzcyBvdXQgb2YgeW91ciBnYW1lIHJvb20geW91IG1pZ2h0IGhhdmUgZnJvbSB0aGF0IGRhbWFnZWQgcG9rZXIgZmVsdCB0b3A/LiAKJ1Bva2VyIEZhY2VkJyBQYWNxdWlhbyBuZWVkcyB0byBnaXZlIEFydW0gYSBkb3NlIG9mIGhpcyBvd24gbWVkaWNpbmUKMTggQXVnIDIwMTggLiBUaGV5IGxpdmUgdG9nZXRoZXIgaW4gaG91c2VzIGtub3duIGFzIFByb2plY3RzLiAKSGF2aW5nIGhpcyBwZW5pcyBydWJiZWQgaW4gdGhlIGhvdCB3YXRlciBtYWRlIGhpbSBmZWVsIHZlcnkgdW5jb21mb3J0YWJsZSwgc3BlZWNobGVzcywgaGUgdGVzdGlmaWVkLi4gCkRpZCB5b3UgbWlzcyB0aGUgcGFydCBJIG5vdCB0ZWxsaW5nIHlvdSBTUEVDSUZJQ0FMTFk/IEkgYW5zd2VyZWQgeW91ciBxdWVzdGlvbiBhYm91dCBzaGl0IHRoYXQgd291bGQgYmUgYWZmZWN0ZWQuIApXZSBsb29rIGJhY2sgYXQgb3VyIGFuY2VzdG9ycywgYmVjYXVzZSB3ZSByZXNwZWN0IG90aGVyIGN1bHR1cmVzIG11Y2ggYmV0dGVyIHRoYW4gQW1lcmljYW4gY3VsdHVyZSBoYXMgZXZlciBiZWVuIHJlc3BlY3RlZC4uIApBdXNzaSBuJ2V1cyBqZSBxdWUgZGNlcHRpb24gIHBhcmNvdXJpciBjZXR0ZSByZGl0aW9uIG1pc3JhYmxlIHF1aSBuZSBjb21wdGUgcXVlIGRvdXplIG51bXJvcy4uIApJVCBJUyBOT1QgSU5URU5ERUQgVE8gUFJPVklERSBNRURJQ0FMIEFEVklDRS4gClRoZSBicmlkZSBhY3RlZCBhcyBpZiB3ZSBkaWQgbm90IGV4aXN0IG9uIHRoZSBkYXkgb2YgdGhlIHdlZGRpbmcgb3IgdGhlIGRheXMgcHJpb3IgYXQgdGhlIHJlc29ydC4uIApUaGVzZSBhZGp1c3RtZW50cyB3ZXJlIHRoZSBtYWluIGluY3JlYXNlIGluIGFwcGFyZW50IHJhdGUgb2YgaW5jcmVhc2UuIApIb3BlZnVsbHksIHRoZSBzY2VuYXJpbyB3aWxsIGdldCBiZXR0ZXIgd2l0aCB0aGVncm93aW5nIGF3YXJlbmVzcyBhYm91dCB0aGUgZ2FtZS4gSXQgaXMgYmVzdCB0byBmaW5kIG91dCB3aGV0aGVyb25saW5lIHBva2VyIGlzIGxlZ2FsIGluIHlvdXIgc3RhdGUgYmVmb3JlIHlvdSBzdGFydCBwbGF5aW5nLiAoRnVsbCBBbnN3ZXIpLiAKSW4gaGlzIHNwZWVjaCwgaGUgcm91dGluZWx5IHBsdWdnZWQgdGhlICJDTU8gTWFzdGVycyBDaXJjbGUsIiBhIGdyb3VwIG9mIGNoaWVmIG1hcmtldGVycyBBTkEgZmlyc3QgYmVnYW4gY29udmVuaW5nIHR3byB5ZWFycyBhZ28gdG8gdGFja2xlIG1ham9yIGlzc3Vlcy4gCjE0IHRoYXQgdGhlaXIgbGVhc2Ugd2FzIG5vdCBiZWluZyByZW5ld2VkLCBhY2NvcmRpbmcgdG8gYSBHb0Z1bmRNZSBwYWdlLiAKIGFyZSBhbHNvIG1vdmluZyBpbnRvIHRoZSBwcm9kdWN0aW9uIG9mIG9yZ2FuaWMgZ3JhcGUgc2VlZCBvaWwgaXQgd2lsbCBiZSB0aGUgb25seSBDYW5hZGlhbiBwcm9kdWNlZCBvcmdhbmljIGdyYXBlc2VlZCBvaWwgZXZlci4gQWxsIGFsb25nIHdlIHRyaWVkIHRvIHByb3ZlIHdoYXQgcG9zc2libGUuIApJIGp1c3QgaGFkIHRvIGVuZCBmb3JiZWFyYW5jZSBvbiBteSBzdHVkZW50IGxvYW5zIGFuZCBtdXN0IG1ha2UgbXkgZmlyc3QgcGF5bWVudCBvbiB0aGUgOXRoLiAKVGhlIFRpbW1vbnMgYnJvdGhlcnMgYW5kIEdlbmUgV2hlbGNoZWwgd2VyZSB3YWl0aW5nLiAKV2hlbiBhIGZyaWVuZCBwdXRzIG1lIG9uIHRoZSBzcG90IGZvciBtb25leSBpbiBwdWJsaWMgYW5kIEkga25vdyBJIGNhbid0IGFmZm9yZCBpdC4KSG93ZXZlciwgaXQgd2FzIGltbWVkaWF0ZWx5IGNsZWFyIHRvIGhpbSB0aGF0IHRoYXQgd2Fzbid0IHRoZSBjYXNlIGF0IExhYmF0dC4gCklmIHlvdSBoYXZlIGEgYmFuayByb2xsIG9mIGEgaHVuZHJlZCBidWNrcyB5b3UgZG9uIHdhbnQgdG8gYmUgcGxheWluZyBpbiBhIGdhbWUgd2hlcmUgdGhlIG1pbmltdW0gYmV0IGlzIGZpZnR5IG9mIGl0LiBJZiB5b3UgZG9pbmcgaXQgbGlrZSB0aGF0IHRoZW4geW91IGp1c3QgdHJ5aW5nIHRvIGdldCBsdWNreSBhbmQgdGhhdCBpcyBkZWZpbml0ZWx5IG5vdCBzb21ldGhpbmcgeW91IHdhbnQgdG8gZG8uIApUaGUgYWxpZW4gdGFwcGVkIGEgYnV0dG9uIG9uIGhpcyBnbG92ZSBiZWZvcmUgc3BlYWtpbmcsICJJIGFjY2VwdCB5b3VyIHdlbGNvbWUuIEkgYW0gTm56dXRpIERycnRpZnksIExlYWRlciBvZiB0aGUgS2RkaWZ0b21hLiBUcmFuc2xhdGVkLCBpdCB3b3VsZCBhcHBlYXIgeW91ciB0aXRsZSBmb3IgbWUgd291bGQgYmUgTGVhZGVyIG9mIHRoZSBLcmluc2V0aGkuIApJZiB0aGUgZmV3IGxpZXMgSSBoYXZlIGNhdWdodCBoaW0gaW4gYXJlIGFib3V0IGl0LCB0aGVuIHllcyBJJ20gc3RpbGwgdXBzZXQgYnV0IEkgY291bGQgbGl2ZSB3aXRoIGl0LiAKUm9vbSBsaWdodCBiZWZvcmUgYmVkdGltZSBtYXkgaW1wYWN0IHNsZWVwIHF1YWxpdHkKVGhlIG1lYW5pbmcgb2YgdGhlIG9yaWdpbmFsLCB0aGVuLCB3b3VsZCBiZSBzb21ldGhpbmcgbGlrZSAiaXQgY291bGQgZ28gZWl0aGVyIHdheSIsICJpdCdzIHVuZGVjaWRlZCIsIG9yICJpdCdzIGFueWJvZHkncyBndWVzcyIuIEkgc3VzcGVjdCB0aGVyZSB3YXMganVzdCBzb21lIGRyaWZ0IGluIHdoYXQgc2l0dWF0aW9ucyB0aGUgcGhyYXNlIGNvdWxkIGNvdmVyLgpEaXBpa2EgS2FrYXIgYW5kIFNob2FpYiBJYnJhaGltIGhhdmUgYW4gZW1vdGlvbmFsIHJldW5pb24KTWFzc2l2ZSBsYW5kIG92ZXIgdXNlLiAKSXQgd2FzIGEgbWlzdGFrZSBvbiBvdXIgcGFydC4gV2hlbiBzaGUgdG9sZCBtZSBpbiB0aGUgYmVnaW5uaW5nIHRoYXQgc2hlIGhhZCBwbGFubmVkIDMgd2VkZGluZ3MgYW5kIG5haWxlZCBkb3duIHZlbmRvcnMgZm9yIGhlciBwcmV2aW91cyBmcmllbmRzL2NsaWVudHMsIEkgdG9sZCBoZXIgdGhhdCBJIGxvdmUgdGhlIHNhbWUgaGVscC4gCk1heWJlIHlvdSBwdXQgb24gc29tZSBnb29kIG11c2ljIG9uIHRoZSBzdGVyZW8uIAoiV2hlbiB0aGUgc3VuIHJvc2UgdGhlIG5leHQgbW9ybmluZywgZ3JpZWYgdHVybmVkIHRvIGFuZ2VyLCBhbmdlciB0dXJuZWQgdG8gcmVzb2x2ZSBhbmQgcmVzb2x2ZSB0dXJuZWQgdG8gYWN0aW9uLCIgTG9tYmFyZG8gc2FpZC4KRXhjaXRlZGJ5bmFwcyAgMTMgcG9pbnRzICBzdWJtaXR0ZWQgMTggZGF5cyBhZ28KMTAwJSBvZiBteSBtYWxlIHBhcnRuZXJzIHdlcmUgZWl0aGVyIGVtb3Rpb25hbGx5IGFuZCBvciBwaHlzaWNhbGx5IGFidXNpdmUuIDcgbGFzdGluZyBmcm9tIDMgbW9udGhzIHRvIDMgeWVhcnMgYW5kIEkgMjguCkp1c3QsIHBsZWFzZS4gSSBhbSBhc2tpbmcgeW91IGFzIGEgZmF2b3IgdG8ganVzdCB3YXRjaCBpdC4gSWYgbm90aGluZyBlbHNlLCBpdCB3aWxsIGFsbG93IHlvdSB0byBkbyB0aGUgc2FtZSBhbmQgcmVidXQgaXQgbW9yZSBlZmZlY3RpdmVseS4gClRoZSBiZWFzdCB3b3VsZCBub3QgcmVxdWlyZSBzdGFydmluZy4KVGhlIGdvb2QgdGhpbmcgYWJvdXQgYSBIYXdhaWlhbiBvciBiZWFjaCB0aGVtZSB3ZWRkaW5nIGlzIHRoZSBhbW91bnQgb2YgZGVjb3JhdGlvbnMgeW91IGNhbiBmaW5kLiBZb3UgY2FuIG1ha2UgeW91ciBvd24gcGFwZXIgbGVpcyBvciBwYXBlciBwYWxtIHRyZWVzLCBvciBmaW5kIEhhd2FpaWFuIHRoZW1lZCBpdGVtcyBhbnl3aGVyZS4gQmUgc3VyZSB0byBjaGVjayB0aGUgbG9jYWwgdGhyaWZ0IHN0b3JlcyBmb3IgYW55dGhpbmcgdHJvcGljYWwgICBkaXNod2FyZSwgc2hpcnRzLCBkcmVzc2VzLCBldGMuIEp1c3QgbWFrZSBzdXJlIGFsbCB0aGUgZGVjb3JhdGlvbnMsIGFzIHdlbGwgYXMgdGhlIGF0dGlyZSwgc2NyZWFtICJCRUFDSC4iIEFuZCwgeW91IGNhbiBjdXQgZG93biBvbiB0aGUgY29zdCBvZiBjaGFtcGFnbmUgYW5kIHNlcnZlIE1haSBUYWkncyBvciBvdGhlciB0cm9waWNhbCBkcmlua3MuCkhlYWx0aHkgb3ZlcndlaWdodCBtZW4gdW5kZXJnb2luZyBhIHdlaWdodCByZWR1Y3Rpb24gcHJvZ3JhbSB3aG8gcGFydGljaXBhdGVkIGluIGEgcmFuZG9taXplZCBjb250cm9sbGVkIHRyaWFsIHdlcmUgYW5hbHl6ZWQgZm9yIHRlc3Rvc3Rlcm9uZSBsZXZlbHMuClNPIFdIQVQgRE9FUyBJVCBETz8gSVQgTEFZUyBUSEUgTU9TVCBFR0dTIE9VVCBPRiBFVkVSWVRISU5HLiBCZXNpZGVzIHNvbWUgYnVncywgdGhlcmUgYXJlIHNvbWUgYW50cyBhbmQgc3R1ZmYgdGhhdCBsYXkgbW9yZS4gClRoZWlyIG1haW4gZ29hbCBpcyB0byBzdG9wIHRoZSBzcHJlYWQgb2YgdGhlIGZpcmUgdG8gb3RoZXIgc3RydWN0dXJlcyBhbmQgbWFrZSBzdXJlIHRoYXQgY3JhbmUgZG9lc24gY29sbGFwc2UuIFRoZSBidWlsZGluZyBpdHNlbGYgaXMgbm90IHRoZWlyIGNvbmNlcm4gcmVhbGx5LiAKNDAgd2VudCB0byBIYXdhaWkgYW5kIHBhcnRpY2lwYXRlZCBpbiBmdXJ0aGVyIGF1ZGl0aW9ucyB3aGljaCBkcm9wcGVkIGl0IHRvIDIwLiAKVGhlIG9ubHkgd2F5IHRvIHBsYXkgaW4gdGhpcyBzaXR1YXRpb24gYW5kIGFnYWluc3QgbXVjaCBtb3JlIGV4cGVyaWVuY2VkLCBiZXR0ZXIgcGxheWVycyBpcyB0byBwbGF5IGluY29uc2lzdGVudGx5OiBkbyB0aGUgb3Bwb3NpdGUgb2Ygd2hhdCBhbnkgcmF0aW9uYWwgcGxheWVyIHdvdWxkIGJlIHN1cHBvc2VkIHRvIGRvLCBiZSBpbXBvc3NpYmxlIHRvIHJlYWQsIHBsYXkgbGlrZSB5b3UndmUgbmV2ZXIgcGxheWVkIGJlZm9yZSwgZG91YmxlIGNoZWNrIHdpdGggdGhlIGRlYWxlciwgc2VlayByZWFzc3VyYW5jZSwgbWFrZSBtaXN0YWtlcywgbG9vayBzdXJwcmlzZWQuIFJhaXNlIG9ubHkgb25jZSwgbW9kZXN0bHkgd2hlbiB5b3VyIGhvdXNlIGtleXMgc2hvdWxkIGdvIG9uIGl0LiAKQ29uZ3JhdHMhIFNlcmlvdXNseSBJIGtub3cgaXQncyBhIGxpZmUgYW5kIGRlYXRoIHN0cnVnZ2xlIG1vc3QgcGVvcGxlIGp1c3QgY2FuJ3QgdW5kZXJzdGFuZC4gU2VhcmNoaW5nIGZvciB0aGUgcmlnaHQgY29tYm8gb2YgbWVkcyBpcyB0b3VnaCBidXQgcmVhbGx5IGhlbHBmdWwuIApNYXN1cmVrYXIgYmVsaWV2ZXMgdGhhdCB0aGUgVGhpc3RsZWRvd24gcmFjaW5vIGdhbWluZyBmbG9vciwgdHVja2VkIHVuZGVyIHRoZSBhZ2luZyByYWNlIHRyYWNrIGdyYW5kc3RhbmQsIHBhbGVzIGluIGNvbXBhcmlzb24gdG8gaXRzIGNvbXBldGl0b3IganVzdCA3LjUgbWlsZXMgYXdheSwgZGVzcGl0ZSB0aGUgc3Vic3RhbnRpYWwgaW5pdGlhbCBpbnZlc3RtZW50IGFuZCByZW5vdmF0aW9uIGludmVzdG1lbnQgYnkgSmFjayBFbnRlcnRhaW5tZW50LgpWYWxlbnRpbiBhIGZpbmkgcGFyIHRyb3V2ZXIgdW5lIGFzc2V6IGxvbmd1ZSBsaXN0ZSBkJ3R1ZGVzIGNvbmR1aXNhbnQgIGRlcyByc2VydmVzLkplIHN1aXMgYXNzZXogY29udHJhcmkgcGFyIGNldHRlIGRjb3V2ZXJ0ZSBjYXIgaidhdmFpcyBlbnRyZXByaXMgZGUgdGVzdGVyIGxlIEQgUmlib3NlIHN1ciBtb2kgbW1lIGFmaW4gZCdlc3NheWVyIGRlIGxpbWl0ZXIgbGVzIHJhaWRldXJzIGV0IGxlcyBkb3VsZXVycyBtdXNjdWxhaXJlcyAgbGEgbWFyY2hlIGRhbnMgdW4gcGF5cyB0cnMgYWNjaWRlbnQuIApUaGVyZSBhcmUgbWFueSBwb2tlciB0YWN0aWNzIHRoYXQgeW91IGNhbiB1c2UgdG8gbWFrZSBtb3JlIG1vbmV5LiBJZiB5b3UgdXNlIHRoZSBzYW1lIHBva2VyIHRhY3RpY3Mgb3ZlciBhbmQgb3ZlciBhZ2FpbiB5b3VyIG9wcG9uZW50cyB3aWxsIGNhdGNoIG9uIGFuZCB5b3Ugd2lsbCBsb3NlIG1vbmV5LiBUaGVyZWZvcmUgaXQgaXMgdml0YWwgdG8gbWl4IHVwIHlvdXIgZ2FtZSBhbmQgeW91ciB0YWN0aWNzIHNvIHBlb3BsZSBjYW4ndCBnZXQgYSByZWFkIG9uIHlvdSwgdGhpcyBpdHNlbGYgaXMgYSBwb2tlciB0YWN0aWMgeW91IG11c3QgYWx3YXlzIHVzZS4gClNvbWVvbmUgYmVpbmcgZ3Jvb21lZCwgaXQgc2VlbXMsIHRvIGZvbGxvdyBpbiB0aGUgZm9vdHN0ZXBzIG9mIHRoZSBjdXJyZW50IHRlbGVnZW5pYyBwcmVzaWRlbnQgRW5yaXF1ZSBQZWEgTmlldG8uIEJpbGxib2FyZHMgb2YgVmVsYXNjbyBodWdnaW5nIHBvb3IgaW5kaWdlbm91cyBjb25zdGl0dWVudHMgaW4gQ2hpYXBhcyBhcmUgcGxhc3RlcmVkIGFyb3VuZCB0aGUgc3RhdGUgYW5kIHRoZSBjb3VudHJ5LiBUaGV5IHByb2NsYWltIGhpcyBzdWNjZXNzZXMgaW4gQ2hpYXBhcywgb25lIG9mIE1leGljbydzIHBvb3Jlc3Qgc3RhdGVzLiAKT25jZSB5b3UndmUgaGl0IHRoZSBwb29sLCB5b3UnbGwgbmVlZCBhIG5ldyBvdXRmaXQgdG8gaGl0IHRoZSB0b3duIGluISBTaG9wIHVudGlsIHlvdSBkcm9wIGluIHRoZSBSZXRhaWwgQ29ycmlkb3IgZmVhdHVyaW5nIGZhc2hpb25hYmxlIGNsb3RoaW5nLCBhY2Nlc3NvcmllcyBhbmQgamV3ZWxyeSBmb3IgbWVuIGFuZCB3b21lbi4gQ29udGludWUgeW91ciBnZXRhd2F5IHdpdGggYSByZWxheGluZyB0cmlwIHRvIFRoZSBTcGEgU2Fsb24gZm9yIGEgbWFzc2FnZSBvciAyNCBLYXJhdCB0cmVhdG1lbnQuIApXZSBoYXZlIHRyaWVkIGNvbW11bmljYXRpbmcgZGVsaXZlcmFibGVzIGFuZCBkZXRhaWxzIHRoYXQgd2UgZXhwZWN0IGhlciB0byBkbywgYW5kIHdoYXQgd2UgZXhwZWN0IG91cnNlbHZlcyB0byBkby4gCkJsdWZmaW5nLCBvbiB0aGUgb3RoZXIgaGFuZCwgaXMgYSBiaXQgaGFyZGVyIHRvIG1hc3Rlci4gVGhleSBzYXkgYmx1ZmZpbmcgaXMgYW4gZXNzZW50aWFsIGVsZW1lbnQgb2YgcG9rZXIuIEhvd2V2ZXIsIGJsdWZmaW5nIGlzIGEgc2tpbGwgdGhhdCBzaG91bGQgb25seSBiZSB1c2VkIGJ5IHNlYXNvbmVkIHBsYXllcnMuIFRoaXMgdGVjaG5pcXVlIGRvZXMgbm90IG9ubHkgaW52b2x2ZSBob3cgd2VsbCB0aGUgcGxheWVyIGNhcnJpZXMgYSBzdG9uZSBmYWNlIGJ1dCBtb3JlIG9uIGhvdyBoZSBvYnNlcnZlIHRoZSBvdGhlciBwbGF5ZXJzIGFuZCB1c2UgaW5mb3JtYXRpb24gZ2FpbmVkIGZyb20gaXQuClNlZW1zIHJpc2t5IHRvIHB1dCBoZXIgcHJlZ25hbnQgc2VsZiBvbiBhIHBsYW5lIGluIGhlciBjb25kaXRpb24uIApZb3VyIHJlYWwgcXVlc3Rpb24gaXMgYSBsaXR0bGUgdG91Z2hlciB0byBhbnN3ZXIuIFRoZSBoYW5kIGV4YW1wbGUgeW91IGdhdmUgaXNuIGV4YWN0bHkgYSBtb25zdGVyLCB5b3UgY2FuIGJlIGNydXNoZWQgb3Igd2F5IGJlaGluZCB0aGVyZSBhIHRvbiBvZiB0aGUgdGltZS4gV2l0aCBhIHJlYWwgbW9uc3RlciBsaWtlIGEgZmxvcHBlZCBzZXQsIGEgaGlnaCBmbHVzaCwgb3IgYSBoaWRkZW4gc3RyYWlnaHQsIHlvdSBzaG91bGQgcHJldHR5IG11Y2ggbmV2ZXIgZm9sZCBhdCAybmwgbm8gbWF0dGVyIHdoYXQgeW91ciBvcHBvbmVudCBkb2VzLgpNeSBWZXByIGhhZCBpc3N1ZXMgY3ljbGluZyBsb3cgYnJhc3MgYmlyZHNob3QuIEl0IGNvdWxkIGhhdmUganVzdCBiZWVuIHRoZSBhbW1vIHNwZWNpZmljYWxseS4gQnV0IEkgdHJhZGVkIG15IG51bWJlciA4IHNob3QgZm9yIHNvbWVvbmUgZWxzZSBhdCB0aGUgcmFuZ2UgYW5kIGhpcyBubyA4IHJhbiBwZXJmZWN0IHdoZW4gbXkgb3duIHdvdWxkIG5vdC4gCkkgdGhpbmsgc2hlJ3MgcHVycG9zZWx5IGJhY2tpbmcgb2ZmIHRoZSBwbGFudGluZyB0aGVvcnkgdG8gZ2V0IHRoZW0gdG8gY29tcGx5IHdpdGggaGVyIHRlc3RpbmcgcmVxdWVzdHMuIElmIHNoZSBrZWVwcyBhdHRhY2tpbmcgdGhlIHN0YXRlIHRoYXQgdGhleSBhcmUgZ3VpbHR5IG9mIHNvbWV0aGluZyB0aGV5IHdpbGwga2VlcCBmaWdodGluZyBoZXIuIApCbGFpciBlZmZvcnRzIGhhdmUgY29tZSB3aXRoIHNpZ25pZmljYW50IHBlcnNvbmFsIGNvc3RzLCBGYWxjb25lciBzYWlkLgpQbHVzLCBldmVyeSBzaW5nbGUgcHJlZ25hbmN5IGJvb2sgYW5kIGNsYXNzIHNhaWQgdG8gZXhwZWN0IGZpcnN0IGxhYm9ycyB0byBiZSBjbG9zZSB0byAyNCA0OCBob3Vycy4gSSBoYWQgaGltIGluIDQ1IG1pbnV0ZXMgZnJvbSB0aGUgdGltZSB0aGUgZmlyc3QgY29udHJhY3Rpb24gd29rZSBtZSB1cCB0byB0aGUgdGltZSBoZSBoaXQgdGhlIGZsb29yLiBUaGUgcGFpbiBhbmQgbGFib3Igd2VyZSBJTlRFTlNFLiAKVW5mb3J0dW5hdGVseSwgSSBmb3VuZCB0aGF0IEkgY2FuIGdldCBiYWNrIHRvIHNsZWVwIGFmdGVyIHRoZSBmaXJzdCBhbGFybSBhdCBYWCB0aW1lOyBzaW5jZSBJIGRvbiBuZWVkIHRvIGJlIHVwIGZvciBjbGFzcy93b3JrIHVudGlsIFhYIHRpbWUsIEkgbG9zaW5nIFggaG91cnMgb2Ygc2xlZXAgZXZlcnkgbmlnaHQgYW5kIGl0IHN0YXJ0aW5nIHRvIGFmZmVjdCBteSBzdHVkaWVzL2NvdXJzZXdvcmsvam9iL2dyYWRlcy93aGF0ZXZlci4gCkhldCBnYWF0IGRhYXJiaWogb20gem93ZWwgdmVyYmFsZSBhbHMgbm9uIHZlcmJhbGUgY29tbXVuaWNhdGllLi4gCkV2ZW4gdGhlIHJlZ3VsYXIgcGxheWVycyBvZnRlbiB0cnkgdG8gYXJyYW5nZSBhIGdhbWUgcGFydHkgYXQgaG9tZSB3aXRoIHlvdXIgZnJpZW5kcy4gCkRFTk9CTEUsIE1hcmdhcmV0IE1hcmd1ZXJpdGUgTWFyaWEgRGVOb2JsZSBwYXNzZWQgYXdheSBwZWFjZWZ1bGx5IG9uIE1vbmRheSwgT2N0b2JlciAyOCwgMjAxMyBhdCBQUkhDLCBpbiBoZXIgOTV0aCB5ZWFyLiAKVGhpbmsgaXQgaGFwcGllciB0aGFuIGFwb2NhbHlwdGljLCBpbiB0aGUgZW5kLiAKVG91cyBjb21tZSBsZXMgc2VzcXVpdGVycG5lcywgbGVzIG1vbm90ZXJwbmVzIHByc2VudGVudCBkYW5zIGxldXIgZW5zZW1ibGUgZGVzIHByb3ByaXRzIHRocmFwZXV0aXF1ZXMgZ2xvYmFsZXMuIEF1c3NpIHJlY29ubmF0IG9uIGF1eCBtb25vdGVycG5lcyBsZXMgdmVydHVzIHN1aXZhbnRlcyA6ClRoYW5rIGdvZCAgIGl0IHdhcyBzdWNoIGEgZ3JheSBhbmQgZm9nZ3kgYW5kIHJhaW55IGRheSB0aGF0IHRoZSB2aXNpYmlsaXR5IHdoaWxlIGRyaXZpbmcgaW4gdGhlIG1vdW50YWlucyB3YXMgYWJvdXQgMjAgZmVldC4gCldpdGggdGhlIG9hayBibGFjayBqYWNrIHRhYmxlIHRyYXksIHlvdSBjYW4ga2VlcCB0cmFjayBvZiBhbGwgb2YgeW91ciBwb2tlciBjaGlwcyB0aHJvdWdob3V0IHlvdXIgZ2FtZS4gCk5haC4gVGhlcmUgd2FzIHNvbWUgb2YgdGhhdCBpbiB0aGUgYmFja2dyb3VuZCBidXQgaW4gdGhlIGZvcmVncm91bmQgdGhlIHJlc3BlY3RpdmUgZW1waXJlcyB3ZXJlIHB1cnN1aW5nIHRoZWlyIG93biBpbnRlcmVzdHMgYW5kIHVzaW5nIHRoZSBjb2xkIHdhciBhcyBqdXN0aWZpY2F0aW9uLiAKV29yc2UsIHRoZXkgYmlsbCBSb25kYSBhcyB0aGUgImJhZGRlc3QgYml0Y2ggb24gdGhlIHBsYW5ldCwiIGJ1dCBubyBvbmUgYWxsb3dlZCB0byBvdmVydGx5IHJlZmVyZW5jZSBob3cgYmFkbHkgc2hlIHdhcyBiZWF0ZW4gaW4gaGVyIGxhc3QgdHdvIE1NQSBmaWdodHMuIApUcnVtcCBpcyBhY3RpdmVseSBqdWljaW5nIHRoZSBlY29ub215IGZvciBzaG9ydCB0ZXJtIGdhaW5zLiBUaGlzIHdhcyBoaXMgY2FtcGFpZ24gcHJvbWlzZSBhbmQgaGlzIGZpcnN0IGFjdHMgaW4gb2ZmaWNlLCBhbmQgaXQgc2hvd2luZyB0aHJvdWdoIGluY3JlYXNlZCBncm93dGggYW5kIGVjb25vbWljIGFjdGl2aXR5LiBXZSBhcmUgZXh0cmVtZWx5IGx1Y2t5IHBvbGl0aWNhbGx5LCBhcyBhIGNvdW50cnksIHRoYXQgaGUgc3VjaCBhbiB1dHRlciBpZGlvdCBhbmQgYnVmZm9vbi4gClRoZSBmdW4gZG9lc24ndCBzdG9wIHRoZXJlLCB0aG91Z2gsIHdpdGggQmluZ28gRnJpZGF5cyByZWFkeSB0byBsdXJlIHlvdSBpbiB3aXRoIGNhc2ggbW9uZXkgcHJpemVzLiBZb3UgY2FuIGFsc28gc25hZyBnaWZ0IGNhcmRzIGZvciBCb3VsZGVyIEJlZXIgYW5kIG90aGVyIGF3ZXNvbWUgc3dhZy4gVG8ga2VlcCB0aGluZ3MgaW50ZXJlc3RpbmcsIEZyaWRheSBuaWdodHMgYWxzbyBjb21lIHdpdGggJDMgTG9uZyBJc2xhbmQgSWNlZCBUZWFzIGFuZCAkMiBTbWlybm9mZiwgaWYgeW91J3JlIGludG8gdGhhdCBoYXJkIHN0dWZmLgpKZWZmcmV5IFNrcm9sbCBFYmF5SmVmZnJleSBTa29sbCBpcyBhIENhbmFkaWFuIGJvcm4gZW5naW5lZXIgYW5kIGJ1c2luZXNzbWFuIHdobyBsaXZlcyBpbiBMb3MgQW5nZWxlcywgQ2FsaWZvcm5pYS5bMV0gSGUgd2FzIHRoZSBmaXJzdCBlbXBsb3llZSBhbmQgYWxzbyBmaXJzdCBwcmVzaWRlbnQgb2YgaW50ZXJuZXQgYXVjdGlvbiBmaXJtIGVCYXksIGFuZCB1c2VkIHRoZSB3ZWFsdGggdGhpcyBnYXZlIGhpbSB0byBiZWNvbWUgYSBwaGlsYW50aHJvcGlzdCBhbmQgdG8gZm91bmQgdGhlIGluZGVwZW5kZW50IG1vdmllIHByb2R1Y3Rpb24gY29tcGFueSBQYXJ0aWNpcGFudCBNZWRpYS4gCk1hbiBob3cgZmFyIEp1aWNlIGhhcyBmYWxsZW4gc2luY2UgaGUgd2FzIHJlZCBob3QgaW4gMjAxNy4gU21hcnQgYnVzaW5lc3MgR2VkbywgbmV4dCB3aHkgZG9uIHlvdSBsZXQgdGhlIHB1ZGd5IGJhc3RhcmQgd2luIHRoZSBVUyB0aXRsZSBraWxsIEp1aWNlIHRoZSB0aXRsZSBjb21wbGV0ZWx5LiBUaGlzIGlzIHdoeSBJIGRvbiBnbyBpbiBvbiB0aGlzICJJbiBHZWRvIFdlIFRydXN0IiBidWxsc2hpdC4gClRoZSB0b25ndWUgaXMgc2V0IGFtb25nIG91ciBtZW1iZXJzLCBzdGFpbmluZyB0aGUgd2hvbGUgYm9keSwgc2V0dGluZyBvbiBmaXJlIHRoZSBlbnRpcmUgY291cnNlIG9mIGxpZmUsIGFuZCBzZXQgb24gZmlyZSBieSBoZWxsLiBTaGUncyA2IGZlZXQgdGFsbCwgc2hlJ3MgZ290IHRoZSBiZXN0IGJvZHkuIElmIHRoZXkgdGFrZSBldmVyeSBvcHBvcnR1bml0eSB0byBjdXQgeW91IGRvd24sIHBvaW50IG91dCB5b3VyIGluc2VjdXJpdGllcywgb3IganVzdCB0byBtYWtlIHlvdSBmZWVsIGJhZCwgdGhhdCBpcyBleHRyZW1lbHkgZGlzcmVzcGVjdGZ1bCBhbmQgbm90IHNvbWV0aGluZyB5b3UgbmVlZC4gSG93ZXZlciwgd2Ugb2JzZXJ2ZSB0aGUgcGVydmFzaXZlIGRpc2Nvbm5lY3QgYmV0d2VlbiBrbm93aW5nIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gcmlnaHQgYW5kIHdyb25nIGFuZCBwcmFjdGljaW5nIGZhaXRoZnVsIGNvbXBsaWFuY2Ugd2l0aCB0aGF0IHByaW5jaXBsZS4gTGFjayBvZiBQb3dlciBXb21lbidzIGxhY2sgb2YgcG93ZXIgbWFrZXMgdGhlbSBtb3JlIHZ1bG5lcmFibGUgdGhhbiBtZW4uCkkgcmVjZW50bHkgaGFkIGEgdGVuYW50J3MgY2hlY2sgYm91bmNlLCBhbmQgaGUgY2xhaW1zIHRoYXQgaGUgd2Fzbid0IGF3YXJlIG9mIGl0LiAKQWxvbmUgZGVzZXJ2ZXMgYSB3b3JkIG9mIHByYWlzZS4gCk92ZXJ2aWV3IGZvciBVbmNsZQpUaGF0IGV4YWN0bHkgaG93IGl0IHdvcmtzISBPciByYXRoZXIsIGl0IHNob3VsZCBiZSBlbm91Z2ggdG8gcXVpdCBvdXQgb2YgdGhlIGdhbWUsIHdhaXQgYSBmZXcgbWludXRlcywgc2h1dCBkb3duIHlvdXIgWGJveCAocHJvcGVybHksIG5vIGluc3RhbnQgb24hKSBhbmQgdGhlbiB3YWl0IGEgZmV3IG1pbnV0ZXMgYWdhaW47IGlmIHlvdSBoYXZlIHRoZSBvcmlnaW5hbCBYYm94IE9uZSB3aXRoIHRoZSBleHRlcm5hbCBwb3dlciBzdXBwbHkgdW5pdCwganVzdCB3YWl0IHVudGlsIHRoZSBsaWdodCBvbiBpdCB0dXJucyBmcm9tIHdoaXRlIHRvIG9yYW5nZS4gCkRyYXBpbmcgaXMgc3RyaWN0bHkgZW5mb3JjZWQgd2l0aCBhYnNvbHV0ZWx5IG5vIGV4Y2VwdGlvbnMuLiAKUG9rZXIsIHBhcnRpY3VsYXJseSBUZXhhcyBIb2xkICdlbSBzdHlsZSwgaXMgYnJvYWRjYXN0IG9uIG1ham9yIG5ldHdvcmtzIHN1Y2ggYXMgQnJhdm8sIEVTUE4gYW5kIFRoZSBUcmF2ZWwgQ2hhbm5lbC4gVGhlIFRyYXZlbCBDaGFubmVsIHJlcG9ydHMgdGhhdCB0aGVpciBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgc2hvd3MgYXJlIGFtb25nIHRoZSBoaWdoZXN0IHJhdGVkIGluIHRoZWlyIGxpbmV1cC4KU28sIENQUCBtYXkgYmUgeW91ciAkMjc3LDA3NSBSUlNQIGFjY291bnQsIGFuZCB3aGVuIHlvdSB0aGluayBvZiBpdCBpbiB0aG9zZSB0ZXJtcywgdGhlIHRpbWluZyBvZiB5b3VyIENQUCB3aXRoZHJhd2FsIGRlY2lzaW9uIG1heSBjaGFuZ2UuIFdoZXRoZXIgeW91IHdpdGhkcmF3IGZyb20gb3RoZXIgc291cmNlcywgb3Igc3RhcnQgeW91ciBDUFAsIHlvdSBhcmUgcmVkdWNpbmcgdGhlIGZ1dHVyZSBpbmNvbWUgdGhhdCB5b3UgY2FuIGVhcm4gZnJvbSB0aGF0IHNvdXJjZS4KTWFueSBzbWFsbGVyIHBhcnRzIG9mIHRoZSBsYXJnZXIgZXh0ZW5kZWQgZmFtaWx5LCBvbiBib3RoIG15IG1vdGhlcidzIGFuZCBmYXRoZXIncyBzaWRlcyBzZXR0bGVkIGFjcm9zcyB0aGUgY291bnRyeSAgIGluIFNhcmdvZGhhLCBpbiBUYW5kbyBBbGxhaHlhciwgaW4gTWlycHVyIEtoYXMsIGFuZCBhY3Jvc3Mgc291dGhlcm4gUHVuamFiLCBpbmNsdWRpbmcgQmFoYXdhbHB1ciwgTXVsdGFuIGFuZCBSYWhpbXlhciBLaGFuLi4gCkJyaWVmLiAKSWYgeW91IGRyaW5rIG9yIHBsYXkgd2hpbGUgeW91IGFyZSB0aXJlZCB5b3Ugd29uJ3QgYmUgYWJsZSB0byBmb2N1cyBtdWNoIG9uIHRoZSBnYW1lIGl0c2VsZi4gCkJpZyB0aW1lIHBva2VyIGhhcyBoYWQgaXRzIHNoYXJlIG9mIHN1Y2Nlc3NmdWwgYW1hdGV1cnMgaW4gcmVjZW50IHllYXJzLCBzb21lIG9mIHRoZW0gc2ltcGxlIGdhcmFnZSBnYW1ibGVycyB3aXRoIGEgZHJlYW0gb2YgZ2V0dGluZyBpbiBhIGhpZ2ggc3Rha2VzIGdhbWUgYW5kLCB3aGVuIHRoZXkgZmluYWxseSBkbywgcmlkaW5nIGdvb2QgY2FyZHMgYW5kIHRpZ2h0IHBsYXkgdG8gYSBtb25leSBmaW5pc2guIEluZGVlZCwgdGhlIGN1cnJlbnQgY2hpcHMgbGVhZGVyIGluIHRoaXMgZXZlbnQgKHdpdGggNTguOSBtaWxsaW9uIGNoaXBzKSBpcyBEYXJ2aW4gTW9vbiwgNDUsIGFuIGhvbmVzdCB0byBnb2QgbG9nZ2VyIGZyb20gTWFyeWxhbmQuIChSZWFkICJUaGUgTmV3IEtpbmcgb2YgUG9rZXIuIikKSSB3aXNoIGRvY3RvcnMgd291bGRuIHByZXNjcmliZSBhbnRpYmlvdGljcyBmb3IgYSBjb21tb24gY29sZCBvciBmb3IgYnJvbmNoaXRpcy9mbHUgKHdoaWNoIGlzIGEgdmlydXMpLiAKV2FudCBhIGdvdmVybm1lbnQgdGhhdCBtYWtlcyBzdXJlIGV2ZXJ5Ym9keSAgIGV2ZW4gdGhlIGJpZ2dlc3QgYW5kIG1vc3QgcG93ZXJmdWwgY29tcGFuaWVzIGluIEFtZXJpY2EgICBwbGF5cyBieSB0aGUgcnVsZXMsIFdhcnJlbiB3cm90ZSBpbiBhIGJsb2cgcG9zdC4gSSB3YW50IHRvIG1ha2Ugc3VyZSB0aGF0IHRoZSBuZXh0IGdlbmVyYXRpb24gb2YgZ3JlYXQgQW1lcmljYW4gdGVjaCBjb21wYW5pZXMgY2FuIGZsb3VyaXNoLiAKTWFyaWphYyByZXN0YSwgc2EgdmllIGR1cmFudCwgbm9zdGFsZ2lxdWUgZHUgc3VjY3MgcXUnaWwgYXZhaXQgcmVtcG9ydCBncmNlICBkZXMgc2NuYXJpb3MgZGVzdGlucyAgbm90cmUgamV1bmVzc2UuIEMnZXN0IGNlIHF1aSBleHBsaXF1ZSBxdSdpbCBlbnRyZXByaXQgYXZlYyBKZWFuIENoYXBlbGxlLCBhdXRyZSBub3N0YWxnaXF1ZSBkZXMgYmFuZGVzIGRlc3NpbmVzIHBvdXIgZW5mYW50cywgbGEgcmRpdGlvbiBkZSBTSVRUSU5HIEJVTEwsIGVuIGFvdCAxOTcwLiAoSW50ZXJtZGUgcGVyc29ubmVsIDogbG9yc3F1ZSBqZSByZW5jb250cmFpIEplYW4gQ2hhcGVsbGUsIGFubmUgMTk2NiwgY2VsdWkgY2kgdm91bHV0ICB0b3V0IHByaXggbSdlbmZvbmNlciBkYW5zIGxhIHR0ZSBsJ2lkZSBzZWxvbiBsYXF1ZWxsZSBsYSBCRCBkZXZhaXQgcmVzdGVyIGNvbmZpbmUgIHVuIHB1YmxpYyBkJ2dlIHNjb2xhaXJlLiAKSWYgYSBwbGF5ZXIgaGFzIHRoZSBsb3dlc3QgdmFsdWUgb2YgZXhwb3NlZCBjYXJkcyAoY2FsbGVkIHRoZSBicmluZyBpbiksIHRoYXQgcGxheWVyIHdpbGwgaGF2ZSB0byBtYWtlIGEgd2FnZXIuIEhpcyBjaG9pY2VzIHdpbGwgYmUgdG8gbWFrZSBhIHNtYWxsIGJldCBmdWxsIG9yIGEgc21hbGwgYmV0IGhhbGYuIEFuIGV4YW1wbGUgd2lsbCBiZSBlaXRoZXIgaGUgZG9lcyAkMSBvciAkMiBpbiBhIDIvNCBwb2tlciBnYW1lLiAKVGhlIExFQyBhbHNvIGhvc3RzIHRoZSBTaW5nbGUsIERvdWJsZSBhbmQgVHJpcGxlIEEgdG91cm5hbWVudHMgdGhpcyB3ZWVrLCBhbmQgdGhlIG9ubHkgdG9wIHNlZWQgdG8gYWR2YW5jZSBmcm9tIHRoZSBmb3VyIGxldmVscyB0byB0aGVpciBmaW5hbCBpcyB0aGUgRG91YmxlIEEgTm8uIDEgQ2hhcmxlcyBIYXlzIFJhaW5tYWtlcnMgb2YgUHJpbmNlIFJ1cGVydCwgd2hvIHdpbGwgZmFjZSB0aGUgTm8uIApSZXllcyBhbmQgb3RoZXIgbGVhZGVycyBtdXN0IGFkbWl0IGl0IHdhcyB0aGUgd3JvbmcgdGhpbmcgdG8gZG8sIG5vIG1hdHRlciB3aG8gdG9sZCB0aGVtIHRvIGRvIGl0LCBhbmQgdGhvc2Ugd2hvIHRvcnR1cmVkIG11c3Qgbm93IGJlIGhlbGQgcmVzcG9uc2libGUgZm9yIGl0IGJlY2F1c2UgdGhlIHZlcnkgaHVtYW5pdHkgb2YgdGhlIFVTIGlzIG9uIHRoZSBsaW5lLi4gCkhlcmUgYW4gYXJ0aWNsZSB3aXRoIGEgbGlzdCBvZiBzb21lIG9mIHRoZSBtYWluIG9uZXM6SSBhbHdheXMgdGhvdWdodCB0aGlzIHBsYWNlIGxvb2tlZCBhbWF6aW5nOklmIHlvdSBjb250YWN0IHRoZW0gbW9zdCBvZiB0aGVtIHdpbGwgbGV0IHlvdSBoYXZlIGEgdHJpYWwgZGF5IHRvIHNlZSBpZiB5b3UgbGlrZSB0aGUgc3BhY2UuIChpZiB5b3Ugd2VyZSBjaGVla3ksIHlvdSBtaWdodCBldmVuIGdldCBhIGJ1bmNoIG9mIGZyZWUgZGF5cyBqdXN0IGNoZWNraW5nIG91dCBhbGwgdGhlIGRpZmZlcmVudCBzcGFjZXMpCkRpZSBIYXVwdHZlcmFuc3RhbHR1bmcgZmluZGV0IGFtIFNvbm50YWcsIGRlbiA3LiAKRmFuLCBoZSBiZWFtZWQuCkEgbG9uZyB0ZXJtIGNpdmlsIHdhciBpcyBmdWNraW5nIGF3ZnVsIGZvciBidWlsZGluZyBhIHBpcGVsaW5lLiBMaWtlIGxpdGVyYWxseSB0aGUgd29yc3Qgc2l0dWF0aW9uIHlvdSBjb3VsZCBlbmdpbmVlci4gSWYgdGhlIENJQSBhbmQgUWF0YXIgd2VyZSBiZWhpbmQgdGhpcyBpdCB3b3VsZCBiZWVuIGEgcGFsYWNlIGNvdXAgd2hlcmUgYW4gYW1lbmFibGUgU3lyaWFuIGdlbmVyYWwgd291bGQganVzdCBraWxsIEFzc2FkIGFuZCB0YWtlb3ZlciB0aGUgY291bnRyeS4KTHVuZCBsb29rcyBnb2xkZW4gYWZ0ZXIgdGhlIHRocmVlICBjYXJkICJmbG9wIiBnaXZlcyBoaW0gYW5vdGhlciBhY2UgbmluZSwgZm9yIGEgbmVhcmx5IHVuYmVhdGFibGUgdHdvIHBhaXJzLiBNYXRsb3ViaSBwbGFjaWRseSBraWNrcyB0aGUgdGFibGUuIApJZiBvdXIgZmlyc3QgdGhyZWUgY2FyZHMgYXJlIHF1ZWVucywgb3VyIHF1ZXN0aW9uIHJlYWxseSBpcywgd2hhdCBpcyB0aGUgcHJvYmFiaWxpdHkgdGhhdCBpIGdldCBhIHBhaXIgZ2l2ZW4gZm91ciBjYXJkcyBvdXQgb2YgNDk/IFNpbmNlIHdlIGFscmVhZHkgaGF2ZSB0aHJlZSBxdWVlbnMsIHdlIGRvbid0IHdhbnQgdG8gY29uc2lkZXIgdGhlIGNhc2Ugd2hlcmUgd2UgY2FuIGdldCBhIHBhaXIgb2YgcXVlZW5zLCBiZWluZyBhcyB0aGlzIGlzIGNsZWFybHkgaW1wb3NzaWJsZS4gVGhlIHRvdGFsIG51bWJlciBvZiB3YXlzIHdlIGNhbiBnZXQgYW55IHR3byBjYXJkcyBpcyA0OSBDIDIsIG9yIDExNzYuIFRoZXJlZm9yZSwgb3VyIHByb2JhYmlsaXR5IHRoYXQgd2UgZ2V0IGEgcGFpciBpbiBhbnkgdHdvIHBsYWNlcyBvZiB0aG9zZSBmb3VyIGNhcmRzIGlzIDQzMi8xMTc2LCBvciAxOC80OS4gSG93ZXZlciwgd2UgYXJlbid0IGRvbmUgeWV0IGJlY2F1c2Ugd2UgaGF2ZSB0byBtYWtlIHN1cmUgdGhhdCB3ZSBkb24ndCBnZXQgYW5vdGhlciBxdWVlbiBvciB0d28gbW9yZSBvZiB0aGUgc2FtZSBwcmV2aW91cyB0d28gY2FyZHMgdGhhdCB3ZSBkcmV3IG9uIHRoZSByZW1haW5pbmcgdHdvIGNhcmRzLCBiZWNhdXNlIGVpdGhlciBjYXNlIHdvdWxkIHJlc3VsdCBpbiBmb3VyIG9mIGEga2luZC4gVGhlcmVmb3JlLCB3ZSBuZWVkIHRvIG11bHRpcGx5IDE4LzQ5IGJ5IHRoZSBvZGRzIHRoYXQgbmVpdGhlciBvZiB0aGUgdHdvIHByZXZpb3VzIGluc3RhbmNlcyBvY2N1ci4gVGhlIHByb2JhYmlsaXR5IHRoYXQgdGhleSBkb24ndCBvY2N1ciBpcyAxIChwcm9iYWJpbGl0eSB0aGF0IHRoZXkgZG8gb2NjdXIpLiBTbywgdGhlIG51bWJlciBvZiB3YXlzIHRvIGdldCB0aGUgcXVlZW4gaXMgMiBDIDEgMSBvciAyLCBhbmQgdGhlIG51bWJlciBvZiB3YXlzIHRvIGRyYXcgdGhlIHNhbWUgdHdvIGNhcmRzIGlzIDIgQyAyICwgb3IgMS4gT3VyIHRvdGFsIG51bWJlciBvZiB3YXlzIHRvIGRyYXcgMiBjYXJkcyBmcm9tIDQ3IGlzIDQ3IEMgMiAsIG9yIDEwODEuIFNvLCB0aGUgb2RkcyB0aGF0IHdlIGdldCBlaXRoZXIgdGhlIG90aGVyIHF1ZWVuIG9yIHRoZSBvdGhlciB0d28gY2FyZHMgaXMgMy8xMDgxLiBUbyBnZXQgdGhlIHByb2JhYmlsaXR5IHRoYXQgb3VyIGNhcmRzIGRvIG5vdCByZXN1bHQgaW4gZWl0aGVyIG9mIHRob3NlIHR3byBpbnN0YW5jZXMgaXMgMSAzLzEwODEsIG9yIDEwNzgvMTA4MS4gU28sIG91ciBmaW5hbCBwcm9iYWJpbGl0eSBpcyAxOC80OSAgMTA3OC8xMDgxLCBvciAzOTYvMTA4MSwgZ2l2aW5nIHlvdSBhbiBhcHByb3hpbWF0ZSAzNi42IHBlcmNlbnQgY2hhbmNlIG9mIGdldHRpbmcgYSBmdWxsIGhvdXNlLiAuCkRhcyBhbGxlcyBhbmdlc2NobG9zc2VuIHdlcmRlbiBtdXNzLCBuYXRybGljaCBkaWUgS2FiZWwgenUga3VyeiB3YXJlbiwgbWFuIG51biBwZXJtYW5lbnQgSW50ZXJuZXQgYmVudGlndCB3YXJlbiB3ZWl0ZXJlIFN0b2xwZXJzdGVpbmUuIEZyIGRhcyBuZXVlIFByb2dyYW1tIHdvbGx0ZSBlciBlaW5lIFNjaHVsdW5nLCBkaWVzIHdhciB3b2hsIG1nbGljaCBhYmVyIG51ciB2aWEgUmVtb3RlLCBWb3JvcnQgc2VpIGRpZXMgenUgdGV1ZXIuIERpZXMgd2FyIG5vY2ggdm9yIGRlciBCZXN0ZWxsdW5nIGRlciBTb2Z0d2FyZSBnYW56IGFuZGVycyBPZGVyIGRvY2ggbmljaHQ/LiAKVGhhdHMgd2h5IGxpYmVyYWxzIHNlZW0gbGlrZSBwdXNzaWVzIHVwIGZyb250LiAKVGhlc2UgZGlzZWFzZXMgd2VyZSBjYWxsZWQgInBvbGlvIGxpa2UgZGlzZWFzZXMiIGJ5IHRoZSBib2d1cyB3ZWJzaXRlIHNoZSBxdW90ZWQgYW5kIHNhaWQgdGhhdCBwb2xpbyBuYXR1cmFsbHkgZGVjcmVhc2VkIG92ZXIgdGltZSBhbmQgdmFjY2luZXMgbWFkZSBtb3JlIHBlb3BsZSBzaWNrIHRoYW4gaXQgaGVscGVkLgpNaXRjaGVsbCBBLiAKRXZlbnR1YWxseSwgdGhleSBnZXQgdG8gYW4gYWxsIGluIHNob3dkb3duLCBhbmQgR29sZG1hbiBuZWVkcyBhIDkgb3IgYSBkaWFtb25kIGZvciBhIHdpbi4gV2hhdCBjb21lcyB1cCBvbiB0aGUgcml2ZXI/IEEgOS4gSXNyYWVsaXRlIHN0YXlzIGFsaXZlLCBidXQgaGUgaGFkIGEgZ29vZCBjaHVuayBvZiBoaXMgOTIsMDAwIGNoaXBzIHRha2VuIGF3YXkuClN0b3BwaW5nIGRpc3RhbmNlcyBmb3IgbW9kZXJuIGNhcnMgYXJlIGluY3JlZGlibHkgc2hvcnQuIApBbm90aGVyIGxlZ2FsIGJhdHRsZSBwaXRzIHRoZSBTZW1pbm9sZXMgYWdhaW5zdCB0aGUgc3RhdGUuIApZb3VyIGZhbWlseSBtZW1iZXJzIG1pZ2h0IGJlIGluIHRyb3VibGUgc2h1ZmZsaW5nIHRoZWlyIGNhcmRzIHdoZW4gdGhlaXIgdHVybiBjb21lcy4gCk5ldmFkYSBnYW1ibGluZyByZWd1bGF0b3JzIHNheSB0aGV5IHNvcnRpbmcgdGhyb3VnaCBkb2N1bWVudHMgZm9yIGNsdWVzIGFib3V0IGhpbSBhbmQgaGlzIGdpcmxmcmllbmQsIE1hcmlsb3UgRGFubGV5Li4gClN0b3V0IGlzIGluIHRvcCBmb3JtIGFuZCBrZWVwcyB3aW5uaW5nIGV2ZW4gYXMgRXZlcmV0dCBrZWVwcyBkcmlua2luZyBhbmQgYmV0dGluZ3doaWxlIGhpcyBsb3NzZXMgbXVsdGlwbHkuIApGaXJzdCwgd2hlcmVzIG15IGludml0ZS4gMm5kIHVtbSBpIHRoaW5rIHRoZSBiZXN0IHBsYWNlIGF0bSBpcyBmcmVzbm8gaG90ZWwgLiBJIGp1c3QgdGhpbmsgdGhlIGNoYWxsZW5nZSBpcyBhY3R1YWxseSBnZXR0aW5nIGFjY2VzcyB3aGlsZSBub3QgYmVpbmcgc2VlbiBvciBzdGFiYmVkIGJ5IGEgdmFncmFudC4gCkxpa2Ugd2hlbiBoZSBkZW5pZWQgdGhleSB3ZXJlIGhpcyBwYXJlbnRzIGFuZCB0aGUgcG9saWNlIG9mZmljZXIgZXhwbGFpbmVkIGhlIHdhcyBjb25mdXNlZC4gSWYgaXQgd2FzIGFsbCBmYWtlIHRoZW4gd2hvIHdhcyB0aGF0IHJlYWxseSBmb3I/IElmIHRoZXkgYXJlIHRyeWluZyB0byBicmFpbndhc2ggaGltIGludG8gYmVsaWV2aW5nIGhlIHdhcyBraWRuYXBwZWQgKGFuZCB0aGlzIGhhcyBhIGJpZyBncm91cCBpbnZvbHZlZCkgdGhlcmUgbW9yZSBlZmZlY3RpdmUgd2F5cyBvZiBkb2luZyBpdCB0aGVuIHRoaXMsIG1vcmUgYWdncmVzc2l2ZSB0YWN0aWNzLi4gCkl0IG9uZSBvZiB0aGUgZmV3IHBvc2l0aXZlcyAoYXQgbGVhc3QgZ29pbmcgb2ZmIGhpc3RvcmljYWwgZGF0YSkgdGhhdCBoZSBjb3VsZCB0YWxrIGFib3V0IGFuZCB5ZXQgaGUgY2FuIGJlY2F1c2UgaGUgaGFzIHNwZW50IHNvIG11Y2ggdGltZSBjbGFpbWluZyBob3cgYmFkIGEgbGFyZ2UgdHJhZGUgZGVmaWNpdCBpcy4gSGUgbGllZCB0byB0aGUgY291cnQgdG9kYXkuIEhlIGFidXNlZCBoaXMgcG9zaXRpb24gYXMgYW4gb2ZmaWNlciBvZiB0aGUgY291cnQuIgpDaW5jaW5uYXRpIG1hbiB3aW5zIFdvcmxkIFNlcmllcyBvZiBQb2tlciBldmVudApJIGxpa2UgdGhlIHBvc3QuIERvIHlvdSByZWFjaCBvdXQgdmVyYmFsbHkgd2l0aCBhIGZyaWVuZGx5IG1hbm5lcj8gU29tZXRpbWVzIHBlb3BsZSBhcmUgYWZyYWlkIHRvIGV2ZW4gcGxheSBOTCBhdCAkMSAkMiBvciAkMS4gJDMuIEkgaGF2ZSBIb25vcnMgaW4gdW5kZXJncmFkIGluIFBzeWNoLCBIb25vcnMgaW4gdW5kZXJncmFkIFNvY2lvbG9neSwgYSBsYXcgZGVncmVlLCBhbGwgd29yayBjb21wbGV0ZWQgZm9yIE1hc3RlcidzIGluIENyaW1pbmFsIEp1c3RpY2UsIHBva2VyIHBsYXllciwgY29tcHVsc2l2ZSBnYW1ibGVyLCByZWNvdmVyaW5nIGFkZGljdC4KQXMgdGhlIHN0b2NrIGdyYWR1YWxseSByaXNlcywgd2VsbCBtZWFuaW5nIGFkdmlzb3JzIHN1Z2dlc3QgdGhhdCBoZSBzZWxsIHRvIHNhZmVndWFyZCBoaXMgcHJvZml0cy4gCkp1c3QgbGlrZSB0aGUgbWVuLCBub3QgZXZlcnkgc2luZ2xlIHN1cGVyaGVybyBuZWVkcyB0byBoYXZlIHRoYXQga2luZCBvZiBsb29rLCBidXQgc29tZSBvZiB0aGVtIHNob3VsZC4gVGhlcmUgYXJlIGEgbWlsbGlvbiBwZW9wbGUgdHJ5aW5nIHRvIGJlY29tZSBhIEhvbGx5d29vZCBhY3RvciwgdGhlcmUgbXVzdCBiZSBzb21lIGF0aGxldGljIGxvb2tpbmcgd29tYW4gb3V0IHRoZXJlIHdobyBjb3VsZCBwbGF5IGEgc3VwZXJoZXJvLiBTb21lb25lIHdobyBsb29rcyBsaWtlIGFuIE9seW1waWMgYXRobGV0ZSwgb3IgYSBVRkMgZmlnaHRlciBsaWtlIEhvbGx5IEhvbG0sIG9yIFdXRSBLYWl0bHluIG9yIEJldGggUGhvZW5peC4KQSBnb29kIGF0bW9zcGhlcmUuIERvbid0IHRyeSBhbmQgd2F0Y2ggdGVsbHkgYW5kIG1hc3NhZ2UgeW91ciBiYWJ5IGF0IHRoZSBzYW1lIHRpbWUuIApOcGRhZHkgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxNSBkYXlzIGFnbwpXaGlsZSBoZXIgaHVza3kgdm9pY2Ugd29ya2VkIHdlbGwgZm9yIG1hbnkgc29uZ3MsIHN1Y2ggYXMgIlBlcHBlcm1pbnQgR2x1ZSwiIGhlciBzb3VsZnVsIHNpZGUgd2FzIGJldHRlciwgc3VjaCBhcyBvbiAiR2VuaWUgaW4gTXkgRHJlYW1zLCIgIk15IEhlYXJ0IENhbiBIZWFyIiBhbmQgIlNoYWtlIGFuZCBTaGl2ZXIsIiB3aXRoIHdoaWNoIHNoZSBjbG9zZWQgdGhlIG1haW4gcGFydCBvZiBoZXIgc2V0LiBTaGUgZGlkIGl0IHdlbGw7IGEgcGFpbmVkIHZvaWNlIHB1bGxpbmcgYXQgbG9uZyBub3RlcyBhcyBtdWNoIGFzIExpdHRsZSBwdWxsZWQgYXQgaGVyIGRyZXNzIGR1cmluZyBpdC4gQnV0IGl0J3MgYSB0dW5lIGRlc2lnbmVkIHRvIGVuZCBhIHNob3cgYW5kIGJsb3cgb3V0IGhlciB2b2ljZS4KRW5qb3llZCBpdCBxdWl0ZSBhIGJpdC4gSSBhYnNvbHV0ZWx5IGxvdmUgaGVyIGFsYnVtICJCbGFja3MgYW5kIEJsdWVzIiBhbmQgd2hpbGUgdGhpcyBnb2VzIGEgYml0IHRvbyBjaGVlcnksIGN1dGVzeSBhbmQgbGlnaHQgaGVhcnRlZCB0byBtYXRjaCB0aGUgc3Ryb25nIHVyYmFuIChiZXN0IGRlc2NyaXB0aW9uIEkgZ290KSBmbGF2b3Igb2YgQmFCLCBJIHN0aWxsIGxpa2VkIGl0cyBzaWxreSBncm9vdmVzLiBJdCB3YXMgaGVyIGxhc3QgYWxidW0gd2l0aCBCbHVlIE5vdGUgYW5kIHRoZSBNaXplbGwgQnJvdGhlcnMsIHdobyBpbWJ1ZWQgaXQgd2l0aCB0aGVpciB0cmFkZW1hcmsgc291bmQsIHNvIEkgYWxyZWFkeSBleHBlY3QgaGVyIGNocm9ub2xvZ2ljYWxseSBuZXh0IGFsYnVtIHRvIHNvdW5kIHF1aXRlIGRpZmZlcmVudC4gT2YgY291cnNlLCBiZSBhd2FyZSB0aGF0IEkgdGFsa2luZyBhYm91dCBqYXp6IGZ1bmsgaGVyZSB0aGF0IGZhbGxzIG1vcmUgb24gdGhlIGNoZWVzeSB0aGFuIHRoZSBjcmF6eSB0ZWNobmljYWwgc2lkZS4KSC4gCldlIGFyZSBkb2luZyB3aGF0ZXZlciB3ZSB3YW50IHRvIGRvLCBub3QgYWJvdXQgV0lMTCBPRiBHT0QuIFRoaXMgaXMgbm90IHRoZSBvbmx5IHdhbGwuIApUcmFzaCB0YWxrIGVuc3VlZCBzb21laG93LCBhbmQgd2UgcmVtYXRjaGVzLiBIZSB3b24gYWdhaW4gYW5kIHdhcyBiZWluZyBwcmV0dHkgdG94aWMuSSBhc2tlZCBpZiBoZSB3YXMgb2theS4gCihOIHdvcmQsIEYgV29yZCwgc2xhbmcgZm9yIGFzaWFucywgZXRjLiAKVGhlIGFsdGVybmF0aXZlIHRvIGdlbmVyaWMgcG9rZXIgZmVsdCB0b3AgaXMgZ29pbmcgdG8gYmUgdGhlIGtpbmQgb2YgZmVsdCBrbm93biBhcyBzcGVlZCBjbG90aC4gClNpIGVuIGVmZmV0IGxhIHF1YW50aXQgZGVzICJiYXJzICBodGVzc2VzIiBhIGNvbnNpZHJhYmxlbWVudCBiYWlzcyBwb3VyIGxhaXNzZXIgcGxhY2UgIGRlcyBlbmRyb2l0cyBicmFuY2hzIGNvbW1lIGMnZXN0IGxlIGNhcyBydWUgRnJvY2hvdCAgUGlnYWxsZSwgaWwgZXN0IGluY29udGVzdGFibGUgcXVlIGRlIG5vbWJyZXV4IHNhbG9ucyBkZSBtYXNzYWdlIHNlIHNvbnQgaW5zdGFsbHMgZGFucyBjZXQgYXJyb25kaXNzZW1lbnQuIAoxMCAxMCBpcyBhIHJlYWxseSBiYWQgaGFuZCB0byBjaG9vc2UgdG8gdHVybiBpbnRvIGEgYmx1ZmYgaGVyZSwgbGlrZSBJIHNhaWQgeW91IGJsb2NrIG5vdGhpbmcsIHdoaWNoIGlzIHJlYWxseSBpbXBvcnRhbnQgc2luY2UgeW91IHNhaWQgeW91ciBtYWluIGdvYWwgaXMgZm9sZCBlcXVpdHksIGFuZCBhcyBJIG1lbnRpb25lZCwgeW91IGNydXNoZWQgd2hlbiB5b3UgZ2V0IGNhbGxlZC4gCkkgbmV2ZXIgc2VlbiB0aGlzIHNwZWNpZmljIGFwcHJvYWNoIGJlZm9yZSwgYnV0IGl0IHNlZW1zIGxpa2UgdGhleSBhcmUgc2ltcGx5IHRyeWluZyB0byBpbXByb3ZlIHRoZSBjb252ZXJnZW5jZSByYXRlcyBvZiBNQ01DIGFzIG9wcG9zZWQgdG8gc2FtcGxpbmcgc29tZXRoaW5nIGRpZmZlcmVudC4uIApJIGxvc3Qgd2VpZ2h0IHdoZW4gSSBqb2luZWQgbXkgbWlkZGxlIHNjaG9vbC9oaWdoIHNjaG9vbCBydW5uaW5nIGNsdWJzLiBJIGRvbiByZWdyZXQgaXQuIEkgZmVlbCBpdCBidWlsdCBhIGdvb2QgYXRobGV0aWMgYmFzZSB0aGF0IGlzIGJlbmVmaXRpbmcgbXkgYXRobGV0aWMgZW5kZWF2b3JzIHRvIHRoaXMgZGF5LiBJIGFtIHRlbGxpbmcgeW91IHRoaXMgYXMgYW4gYW5vbnltb3VzIHZvaWNlIG9ubGluZS4gTG9vayB0byB5b3VyIGRvY3RvciBhbmQgImF0aGxldGljIGNvYWNoZXMgd2l0aCBleHBlcmllbmNlIHRyYWluaW5nIHRlZW5zIiBpZiB5b3Ugd2FudCBzb21lIGhpZ2hlciB0aWVyIGFkdmljZSBhYm91dCBpZiBpdCBzYWZlL2FkdmlzZWFibGUgZm9yIHlvdSB0byBjdXQgb3Igbm90LgpVc2UgdGhlIGxvbmcga25pZmUgdG8gY3V0IGEgcGVudGFnb24gb3IgYSBoZXhhZ29uIGFyb3VuZCB0aGUgc3RlbS4gClRoYW5rcyBmb3IgdGhlIGluZm8gaXQgcmVhbGx5IGhlbHBzISBJIGJlZW4gbG9va2luZyBhdCB0aGUgUHJvIDMgYW5kIHBybyA3IG1vZGVscy4gVGhlIHNob3AgdGhhdCBkb2VzIHJlcGFpcnMgaXMgYSBiYXNzIG9ubHkgc2hvcCBhbmQgSSBjaGVja2luZyBpdCBvdXQgdGhpcyB3ZWVrZW5kLiBUaGV5IGhhdmUgdXNlZCBwcm8gMyBhbmQgN3MgYnV0IG5vIFBGIG1vZGVscy4KSXQncyBnb29kIHRvIGJlIGV4Y2l0ZWQgYW5kIGVhZ2VyIGJ1dCBkb24ndCB0YWtlIGl0IHBlcnNvbmFsbHkuIApJZiBNYW5hZm9ydCBoYWQgZ290dGVuIDIwLCBUcnVtcCBjb3VsZCBzYXkgdGhlIHNlbnRlbmNlIHdhcyBkaXNwcm9wb3J0aW9uYXRlbHkgaGFyc2gsIGFuZCBwYXJkb24gaGltIGluIGEgd2F5IHRoYXQgaXMganVzdGlmaWFibGUgdG8gaGlzIGJhc2UuIEJ1dCBwYXJkb25pbmcgYSBzb2Z0IHNlbnRlbmNlIHdpbGwgcmVlay4gCiJCdXQgd2UncmUgdGFsa2luZyB0byBhbGwgdGhlIG1ham9yIGZvb2QgYW5kIGVudGVydGFpbm1lbnQgYW5kIHJldGFpbCAobmFtZXMpIHRoYXQgYXJlbid0IHRoZXJlIGluIHRoZSBtYXJrZXQgdG9kYXkuIgpIYXZpbmcgc2FpZCBhbGwgdGhhdCwgaG93ZXZlciwgb25lIGNhbiBvdmVyZG8gdGhpcyBpY2UgY29vbCBzdHVmZi4gCkluIE1heSBsYXN0IHllYXIsIHRoZSBOU1cgUG9saWNlIFRhc2tmb3JjZSBSYXB0b3IgcmFpZGVkIHRoZSBwcmVtaXNlcyBhbmQgaWRlbnRpZmllZCB0aGF0IHRoZSBidWlsZGluZyB3YXMgYmVpbmcgdXNlZCBmb3IgYSBjb21tZXJjaWFsIHB1cnBvc2Ugd2l0aG91dCBjb3VuY2lsIGNvbnNlbnQuCldpc2hJV2FzQU11cHBldCB1CkkgaGF2ZSBzZWVuIHRoaXMgc2FtZSB0aGluZyBoYXBwZW5pbmcgaW4gc2Nob29sIGRpc3RyaWN0cy4gQnV0IGluc3RlYWQgb2YgImNoYW5nZSBtYW5hZ2VtZW50ICIgeW91IGhhdmUgYWRtaW5pc3RyYXRvcnMuIEFuZCB0aGUgb3V0Y29tZSBpcyB0aGUgc2FtZS4gQnVyZWF1Y3JhY3kgaXMgcGFydCBvZiBpdCwgYW5vdGhlciBpcyBwZXJmb3JtYW5jZSB0aGVhdGVyICggdGhleSBjYW4gc2VsbCB0byB0aGUgY3VzdG9tZXIgb3IgaW52ZXN0b3IgdGhhdCB0aGV5IGhhdmUgYSBkZXBhcnRtZW50IGZvciB0aGlzIGFuZCBvbmUgZm9yIHRoYXQgYW5kIGl0IGxvb2tzIGFsbCBvZmZpY2lhbCApIGJ1dCB0aGUgYmlnZ2VzdCBibHVuZGVyIGluIG15IG9waW5pb24gaXMgZGlzY29ubmVjdCBiZXR3ZWVuIG1hbmFnZW1lbnQgYW5kIHRoZSBncm91bmQgdHJvb3BzLiBUd28gZGlmZmVyZW50IGV4cGVyaWVuY2VzIGFuZCBwaGlsb3NvcGhpZXMsIHdlIGdydW50cyBnZXQgc2hpdCBkb25lLiBXZSB0aGluayBvbiB0aGUgZmx5LCBwcm9ibGVtIHNvbHZlLCBpbXBsZW1lbnQsIGFwcGx5LCBhbmQgY2hlY2suIFRoZXkgd2FudCB0byBoYXZlIHBlb3BsZSB0byBvdmVyc2VlIHRoaXMgIm9uIHRoZSBmbHkiIHJlc29sdXRpb24gaW4gY2FzZSBzb21lb25lIG1ha2VzIGEgbWlzdGFrZS4gQW5kIGZvcm1zIHRvIGRvY3VtZW50IGV2ZXJ5dGhpbmcuIEFsbCBvZiBhIHN1ZGRlbiBhIHVzZWxlc3MgZGVwYXJ0bWVudCBpcyBib3JuLiBUaGUgYnVyZWF1Y3JhY3kga2lsbHMgdGhlIHZlcnkgdGhpbmcgdGhlIGRlcGFydG1lbnQgd2FzIG1hZGUgZm9yLCBhbmQgbm93IHRoZSBjb21wYW55IHN0YXJ0cyB0byBleHBlcmllbmNlIGJsb2F0aW5nLiBCdXQgaXQgbm90IG1hbmFnZW1lbnRzIGZhdWx0LiBNb3JlIG9mdGVuIHRoZW4gbm90IHRoZXkgd2VyZSBkb2luZyB3aGF0IHRoZXkgd2VyZSB0YXVnaHQuIFRoZXkgbGVhcm5lZCBhYm91dCBob3cgdG8gcnVuIGEgY29tcGFueSBieSBzY2hvb2xpbmcgYW5kIGNydW5jaGluZyBudW1iZXJzLCBub3Qgc28gbXVjaCAicmVhbCB3b3JsZCIgZ3JvdW5kIGZsb29yIGV4cGVyaWVuY2UuIEFuZCBpdCBub3QganVzdCBpbiBJVC4gVGhpcyBpcyB3aWRlc3ByZWFkIGluIGV2ZXJ5IGNvbmNlaXZhYmxlIGNvcm5lciBvZiB0aGUgYnVzaW5lc3Mgd29ybGQuCkkgd2FzIGZhciBiZXR0ZXIgYXQgdGhhdCB0aGFuIGNhbGxpbmcgbWF0Y2hlcywgcGxheSBieSBwbGF5IG9yIGRvaW5nIHJpbmcgYW5ub3VuY2luZy4gClRleGFzIEhvbGQnZW0gaXMgdW5kb3VidGVkbHkgdGhlIG1vc3Qgd2VsbCBrbm93biBtYW5pZmVzdGF0aW9uIG9mIHRoZSBkaXZlcnNpb24uIApDaGFsbGVuZ2UgaXMsIG5vdCBvbmx5IGFyZSBteSBuYWlscyBicml0dGxlLCB0aGV5IHNpdCBmdXJ0aGVyIGJhY2sgb24gbXkgZmluZ2VyIHRoYW4gbW9zdCBwZW9wbGUgZG8sIHNvIEkgbmVlZCB0aGVtIHBlcmhhcHMgbG9uZ2VyIHRoYW4gYXZlcmFnZSB0byBnZXQgdGhlIHByb3BlciBlZmZlY3QuIEkga25vdyBpdCBiZSBlYXNpZXIgYW5kIHRvbmUgd2lsbCBiZSBiZXR0ZXIgYnV0IGl0IG1pZ2h0IG5vdCBiZSB3b3J0aCBpdCwgYXQgbGVhc3QgYXQgbXkgY3VycmVudCBsZXZlbC4KUGxhbiB5b3VyIGNlbGVicmF0aW9uLiBBIGZldyB3ZWVrcyBvciBkYXlzIGJlZm9yZSB5b3VyIGFubml2ZXJzYXJ5LCBpdCB3aWxsIHJlYWxseSBiZSBoZWxwZnVsIGZvciB5b3UgaWYgeW91IGdvIGFuZCBwbGFuIHdoYXQgeW91IGFyZSBnb2luZyB0byBkbyBhaGVhZCBvZiB0aW1lLiAKRW4gdmVydHUgZGUgbCdhcnRpY2xlIDcyMSBkdSBDb2RlIGRlIHByb2NkdXJlIHBuYWxlLCBjaGFxdWUgY29uZGFtbiBibmZpY2llIGQndW4gY3JkaXQgZGUgcmR1Y3Rpb24gZGUgcGVpbmUuIApXaWxsIGNvbWUgdXAgYWdhaW5zdCBNeSBwZW9wbGUgSXNyYWVsIGxpa2UgYSBjbG91ZCwgdG8gY292ZXIgdGhlIGxhbmQuIApCYWNrIHRvIHJlYWxpdHkuIE0gV2F0c3UgZG9lcyBub3Qgb3BlbiBvZmZpY2lhbGx5IHVudGlsIHRvZGF5LCBzbyBJIHVuZGVyc3RhbmQgSSB3YXMgYmV0YSB0ZXN0aW5nLiBUaGF0IHNhaWQsIHRoZSBkYXJsaW5nIGdhemVibyBkaWQgbm90IG9mZmVyIGFkZXF1YXRlIHByb3RlY3Rpb24gZnJvbSB0aGUgYXV0dW1uIGVsZW1lbnRzLiBJIGRvbiByZWxpc2ggdGhlIGlkZWEgb2YgV2F0c3UgdGhlcmUgaW4gdGhlIHdpbnRlci4gQWxzbywgdGhlIGJhbWJvbyBzaG93ZXIgaXMgb3BlbiB0byB0aGUgc2t5LiBXaGF0IGlmIGl0IHJhaW5zPyBUaG9tcHNvbiBzYXlzOiByYWluZWQgb24gaXMgcGFydCBvZiB0aGUgbWFnaWMsIGJ1dCBJIGZvdW5kIGl0IGNvbGQuIFNoZSBpbnRlbmRzIHRvIGJ1bXAgdXAgdGhlIHNob3dlciBoZWF0LCBhbmQgcG9pbnRzIG91dCB0aGF0IHRoZSBtYWluIHN0dWRpbyBjb250YWlucyBhbiBpbmRvb3Igc2hvd2VyIHRoYXQgaXMgYXZhaWxhYmxlLiBBZGRpdGlvbmFsbHksIGhlciBwbGFucyBpbmNsdWRlIGEgc3lzdGVtIG9mIGJsaW5kcyB0byBzdXJyb3VuZCB0aGUgZ2F6ZWJvLCBibG9jayBvdXQgd2lsZCB3ZWF0aGVyLgpTaXplIGlzIG5vdCB0aGF0IGJpZyBvZiBhIGRlYWwuIEFuZCBJIGhhdmUgdG8gYmUgaG9uZXN0LCBpZiB5b3UgbWVldCBhIGZlbWFsZSB3aG8gaXMgZ29pbmcgdG8gbWFrZSB5b3UgZmVlbCBiYWQgb3IgaW5zZWN1cmUgYWJvdXQgaXQsIGdldCByaWQgb2YgaGVyIGJlY2F1c2Ugc2hlIHRyYXNoLiBBcyBtdWNoIGFzIGZlbWFsZXMgY2Fubm90IGhlbHAgaG93IHRoZWlyIGJvZGllcyBhcmUgc2hhcGVkLCBtZW4gY2Fubm90IGVpdGhlci4gSSBiZWVuIHdpdGggInNtYWxsZXIiIGd1eXMgaW4gdGhlIHBhc3QgYW5kIEkgaGFkIGRpZmZlcmVudCBleHBlcmllbmNlcyByZWdhcmRpbmcgdGhpcy4gSSBoYWQgb25lIGd1eSB3aG8gd2FzIGluY3JlZGlibHkgaW5zZWN1cmUgd2hlbiB3ZSB3ZXJlIHRvZ2V0aGVyLCBnZXR0aW5nIGluIGhpcyBoZWFkIHRvbyBtdWNoLCBsZXR0aW5nIG5lcnZlcyBkcml2ZSBvdXIgdGltZSB0b2dldGhlci4gQW5kIGZvciBtZSwgaXQgbWFkZSBtZSB1bmNvbWZvcnRhYmxlIGJlY2F1c2UgSSBrbmV3IGhlIHdhc24gZW5qb3lpbmcgaGltc2VsZiwgd2hpbGUgSSBhcHByZWNpYXRlZCB0aGF0IGhlIHdhbnRlZCB0byBtYWtlIHN1cmUgdGhhdCBJIHdhcyBoYXZpbmcgZnVuLCBpdCBpbXBvcnRhbnQgdG8gbWUgYXMgYSB3b21hbiB0aGF0IG15IHBhcnRuZXIgaXMgZW5qb3lpbmcgaGltc2VsZiB0b28uIEkgaGFkIGFub3RoZXIgcGFydG5lciB3aG8gd2FzIG9uIHRoZSBzbWFsbGVyIHNpZGUgd2hvIHdhcyB2ZXJ5IHVwZnJvbnQgYWJvdXQgdGhlIGZhY3QgdGhhdCAiaGUga25ldyBoZSB3YXMgc21hbGxlciB0aGFuIG90aGVyIGd1eXMiIGJ1dCBhc2tlZCBtZSB0byBiZSBob25lc3Qgd2l0aCBoaW0gYWJvdXQgaG93IEkgd2FzIGZlZWxpbmcsIHdvdWxkIGFzayBtZSBxdWVzdGlvbnMgYWJvdXQgdHVybiBvbiBhbmQgb3RoZXIgd2F5cyB0byBrZWVwIG1lIHNhdGlzZmllZC4gU2l6ZSB3YXMgbmV2ZXIgb24gbXkgbWluZCBiZWNhdXNlIEkgd2FzIGtlcHQgc2F0aXNmaWVkIGFuZCBhcHByZWNpYXRlZCB0aGF0IHRoZSBndXkgY2FyZWQgZW5vdWdoIHRvIG1ha2Ugc3VyZSBJIHdhcyB0YWtlbiBjYXJlIG9mIGFzIHdlbGwuCkdlbmVyYWxseSB3ZSB0aGluayBhYm91dCB0aGlzIGluIHRlcm1zIG9mIGFuIGFjdGlvbi4gClN1bW1hcnkgb2YgUm91dGVUaGVyZSBhcmUgdHdvIHdheXMgeW91IGNhbiBkbyB0aGlzOgpUaGF0J3MgYWxsLiAKU28gcGVydXNlIHRob3NlLCB5b3UgZmluZCBsb3RzIG9mIGdvb2QgaW5mby4gSSBiZWVuIG91dCBvZiB0aGF0IHNjZW5lIGZvciBhIHdoaWxlIHNvIG90aGVycyBjYW4gZ2l2ZSB5b3Ugc3BlY2lmaWNzLCBidXQgZ2VuZXJhbCB0aXBzLCB0aGUgYmVhdGVuIHBhdGggZm9yIHlvdSBndXlzIHdvdWxkIGJlIEhvbmdkYWUgb3IgR2FuZ25hbS4KVGhleSB3ZXJlIGNvbXBhcmluZyB0aGUgT3R0b21hbiBFbXBpcmUgdG8gdGhlIG90aGVyIEV1cm9wZWFuIHBvd2VycywgYW5kIHRvIHRoZSBPdHRvbWFuIEVtcGlyZSBpbiB0aGUgcGFzdCwgYW5kIHdlcmUgc2F5aW5nICJTZWUsIGl0cyBjbGVhciB0aGF0IHRoZSBPdHRvbWFuIEVtcGlyZSBpcyBpbiBkZWNsaW5lLiAKMyBGZWIgMjAxOCAuIApXZSBoYWQgYSB2ZXJ5IGV4cGVyaWVuY2VkIGZyaWVuZCBvZiB0aGUgZmFtaWx5IGFzc2lzdCB1cyB3aXRoIHBsYW5uaW5nIG91ciB3ZWRkaW5nICAgc2hlJ3MgYmVlbiBpbiB0aGUgaW5kdXN0cnkgZm9yIGEgbG9uZyB0aW1lLiAKTmV4dCBZZWFyIHdlIGNvdWxkIGtlZXAgQm9uZHMsIGFuZCBPbWFyLCBidXQgZ2V0IHJpZCBvZiBhbGwgdGhlIG90aGVyIHBsYXllcnMgb2xkZXIgdGhhbiBSYW5keSBXaW5uLiBHZXQgcmlkIG9mIFJvYmVydHMsIEtsZXNrbywgUHJvYmFibHkgYXVyaWxsaWEsIGhlIGNhbiBzdGF5IGhlYWx0aHkgYW5kIGR1cmhhbSB3aG8gY2xlYXJseSBuZWVkcyBnbGFzc2VzLiBGZWxpeiBjb3VsZCBiZSBhIHV0aWxpdHkgcGxheWVyIGluc3RlYWQgb2YgYW4gZXZlcnlkYXkgdGhpcmQgYmFzZW1hbi4gCkhvdyBtdWNoIG5vaXNlIHNob3VsZCBJIG1ha2UgZHVyaW5nIGEgbWFzc2FnZQpPbmUgb2YgQnVsaW5ndG9uJ3MgY2hlc3Mgc3R1ZGVudHMKQWxsIGF2YWlsYWJsZSBvbnlvdXR1YmUuIChTZWFyY2hpbmcgb25saW5lZm9yIG1vcmUgaWYgeW91IGFyZSBzbyBpbnRlcmVzdGVkIHNob3VsZCB5aWVsZCBtb3JlKS4gQWxzbywgbWFueXZlcnNpb25zIG9mIEdhR2EncyBzb25ncywgc3VjaCBhcyBwaWFubyBzb2xvcyBhbmQgbW9yZSBtZWRsZXlzIG9maGVyIHNvbmdzIGFyZSB1c3VhbGx5IHBlcmZvcm1lZCBhdCBoZXIgc2hvd3MsIGFuZCBzZWFyY2hpbmcgeW91dHViZWZvciB0aGVtIGlmIHlvdSBhcmUgc28gaW50ZXJlc3RlZCBtYXkgeWllbGQgbW9yZSBzb25ncy4gCldoZW4gSSBkaWQgZmluYWxseSBsb3NlLCBJIGRlY2lkZWQgbXkgd2lubmluZyBzdHJlYWsgd2FzIG92ZXIgc28gSSBncmFiYmVkIHVwIG15IGNoaXBzLCBjYXNoZWQgdGhlbSBpbiwgYW5kIGpvaW5lZCB0aGUgZ3V5cyBmb3IgYSBuaWNlIGJ1ZmZldCBkaW5uZXIuIFRoYXQgbmlnaHQgSSBoZWFkZWQgYmFjayB0byB0aGUgY2FzaW5vIGZvciBhbm90aGVyIHNob3QgYXQgdGhlIHBva2VyIHRhYmxlcy4gCldvbWVuIGFuZCB0aGUgdGVuZGVuY3kgdG8gbm90IGNsZWFybHkgY29tbXVuaWNhdGUgd2hhdCB0aGV5IHdhbnQgaW4gcGxhaW4gbGFuZ3VhZ2Ugd2l0aCB0aGUgZXhwZWN0YXRpb24gdGhhdCBpZiBpICJyZWFsbHkiIGNhcmVkIEkgd291bGQganVzdCBrbm93LCB3aGlsZSBpZiBJIHNpbXBseSBzdGF0ZSB0aGF0IEkgY2FyZSBJJ20gdG9vICJuZWVkeSIuIE9yIHRoYXQgdGhleSBjYW4gaW5pdGlhdGUgdGFsa2luZyBkaXJ0eSBvciBzZW5kaW5nIG1lIGRpcnR5IHBpY3R1cmVzIGJ1dCBpZiBJIGp1c3Qgc3BlYWsgZXhwbGljaXRseSB0byB0aGVtIHRoZSBuZXh0IGRheSAic2V4IGlzIGFsbCB5b3UgKGkpIHRoaW5rIGFib3V0Ii4gT3Igd29yc2UgeWV0LCBicmVha2luZyB1cCBvciBzYXlpbmcgeW91IG5lZWQgInNwYWNlIiB3aGVuIHdoYXQgeW91IHJlYWxseSBtZWFuIGNvdWxkIGJlIGEpIEkgd2FudCB5b3UgdG8gY2hhc2UgbWUgYikgSSBhY3R1YWxseSBkbyB3YW50IGEgbGl0dGxlIHNwYWNlIGJ1dCBJJ20gc3RpbGwgaW50ZXJlc3RlZCBvciBjKSBJJ20gZG9uZS4uIApNZSByZWZpZXJvIGEgbG8gc2lndWllbnRlOiBzYWJlciBwcm9ncmFtYXIgbm8gdGllbmUgcXVlIHZlciBjb24gc2FiZXIgdW4gbGVuZ3VhamUgdSBvdHJvLCBzaW5vIGNvbiBlbnRlbmRlciBkZSBxdSBzZSB0cmF0YSBwcm9ncmFtYXIsIG8gbWVqb3IgZGljaG8sIHNhYmVyIGNtbyBwaWVuc2EgdW4gcHJvZ3JhbWEsIG8gbWVqb3IgZGljaG8gYW47IGNtbyBkYXJsZSBpbnN0cnVjY2lvbmVzIGEgdW4gcHJvY2VzYWRvci5Qcm9ncmFtYXIgbm8gZXMgc2FiZXIgQyBvIEpTIG8gbG8gcXVlIHNlIHRlIG9jdXJyYSwgZXMgc2FiZXIgY21vIGFib3JkYXIgZWwgcHJvY2VzbyBsZ2ljbyBwYXJhIGVuY29udHJhciBsYSBzb2x1Y2luIGEgdW4gcHJvYmxlbWEuIApCdXNpbmVzcyBwZW9wbGUgaGF2ZSBhIHJlcHV0YXRpb24gZm9yIGJlaW5nIGNvbnNlcnZhdGl2ZS4gV2hlbiBJIGxhdW5jaGVkIG15IG93biBidXNpbmVzcyBJIHN0YXJ0ZWQgdG8gdW5kZXJzdGFuZCB3aHkuIElmIHlvdSBoYXZlIGV2ZXJ5dGhpbmcgYXQgcmlzaywgeW91J2QgYmV0dGVyIG1ha2UgY2FyZWZ1bCBkZWNpc2lvbnMuIE9uY2UgeW91IHRha2UgdGhlIG1hbW1vdGggcmlzayBvZiBwdXR0aW5nIHlvdXJzZWxmIG9uIHRoZSBsaW5lLCBhbGwgb3RoZXIgaW1wdWxzZXMgc2hvdWxkIGJlIHRvIG1pbmltaXplIHJpc2sgYW5kIGV4cG9zdXJlLiBBbmQgbm8gbWF0dGVyIGhvdyBjYXJlZnVsIHlvdXIgbW92ZXMsIHRoZSBwcm9ncmVzcyBvZiB5b3VyIG93biBjb21wYW55IHdpbGwgbGlrZWx5IGNvbWUgd2l0aCBzb2FyaW5nIGhpZ2hzIGFuZCBndXQgd3JlbmNoaW5nIGRpdmVzLiBJbiBBbWVyaWNhLCBsYXVuY2hpbmcgYSBjb21wYW55IGlzIHRoZSBxdWlja2VzdCB3YXkgdG8gd2VhbHRoLiBJdCdzIGFsc28gYSBsaWZlIG9mIHJvbGxlciBjb2FzdGVyIHJpZGVzLgpPbHNPbHMgdQpXZSBjYW4gY2FsY3VsYXRlIHRoZSB0d28gbmV0IGZvcmNlcyBvbiB0aGlzIGNoYXJnZSwgd2hpY2ggaXMgaygyLjUyICkvMC4xNTAyIChub3RlIHRoYXQgeW91IG5lZWQgdG8gY29udmVydCB1bml0cywgYmVjYXVzZSBrIGlzIHVzdWFsbHkgZ2l2ZW4gZm9yQ291bHVtYnMsIG5vdCBtaWNyb0NvdWx1bWJzIGFuZCkuIApMaWtlIHRoZSBkZWNvciwgdGhlIG1lbnUgYmxlbmRzIHRyYWRpdGlvbmFsIGFuZCBjb250ZW1wb3JhcnkgaW5mbHVlbmNlcyBmcm9tIGFjcm9zcyB0aGUgZ2xvYmUuIApEdXJpbmcgdGhhdCBzYW1lIGluc3BlY3Rpb24sIFJvYmVydHMgbm90ZWQgdGhlIHNwYSBoYWQgYSAiZ2VuZXJhbGx5IGNsdXR0ZXJlZCwgdW5rZW1wdCwgdW5pbnZpdGluZyBhbmQgdW5wcm9mZXNzaW9uYWwgYXBwZWFyYW5jZSwiIHN0b3JpbmcgYSBsYXJnZSBhbW91bnQgb2YgZm9vZCwgY29va2luZyBlcXVpcG1lbnQsIGNsb3RoaW5nLCBwZXJzb25hbCBlZmZlY3RzLCBhbmQgYmVkcy4gVGhpcyBsZWQgaGVyIHRvIGNvbmNsdWRlIHRoYXQgd29ya2VycyBsaXZlZCBvbiBzaXRlLCBhbm90aGVyIHNpZ24gb2YgcG9zc2libGUgcHJvc3RpdHV0aW9uLiBUaGUgYWRzIHdlcmVuJ3Qgc28gb3ZlcnQgdGhhdCB0aGV5IGJyb2tlIGFueSBsYXdzLCBidXQgdGhlaXIgdG9uZSBhbmQgcHJlc2VudGF0aW9uIHNlZW1lZCB0byBmbGlydCB3aXRoIHRoZSBwb3NzaWJpbGl0eSwgYWNjb3JkaW5nIHRvIHRoZSBpbnNwZWN0b3IuCk1vc3QgbWVuIGZpbmQgdmFnaW5hbCBibGVlZGluZyB0byBiZSByZXZvbHRpbmcgYW5kIHV0dGVybHkgdW5zZXh5LCBidXQgdGhlcmUgYXJlIGEgZmV3IG9uIHRoZSBvdGhlciBlbmQgb2YgdGhlIHNwZWN0cnVtLiAKVGhlcmUgYXJlIHR3byBvdGhlciBwb3B1bGFyIHBva2VyIGdhbWVzIGNhbGxlZCA1IGNhcmQgc3R1ZCBhbmQgNyBjYXJkIHN0dWQuIDUgY2FyZCBzdHVkIGRlYWxzIG9uZSBjYXJkIGZhY2UgZG93biAoRG93biBDYXJkKSBhbmQgb25lIGNhcmQgZmFjZSB1cCB0byBlYWNoIHBsYXllci4gVGhlIHBsYXllcnMgY2FuIGxvb2sgYXQgdGhlaXIgb3duIGRvd24gY2FyZC4gCkxlYXJuIFRoZSBBcnQgT2YgTWFzc2FnZSBGb3IgRnJlZQpUaGlzIGRyZWFtIGNvdWxkIGJlIGltcG9ydGFudCBhbmQgdHJ5aW5nIHRvIHRlbGwgeW91IHNvbWV0aGluZywgc28gZG8gc29tZXRoaW5nIGFib3V0IGl0LiBUZWxsIHNvbWVvbmUuIApBbmQgdGhlIHBvaW50IG9mIG15IG9yaWdpbmFsIHBvc3Qgd2FzIHRvIGNhbGwgb3V0IHRoZSBndXkgSSByZXBsaWVkIHRvIGJlY2F1c2UgbGV0J3MgYmUgaG9uZXN0LCBub3QgYSBzaW5nbGUgcGVyc29uIGNhbGxlZCBoaW0gYSBzaGlsbCAoSSBjaGVja2VkIHJlcGxpZXMgdG8gaGlzIHBvc3QgaW4gdGhlIHRocmVhZCwgYXQgdGhlIHRpbWUgb2YgdGhlIHBvc3QpIGFuZCBoZSBqdXN0IGNvbWVzIG91dCBvZiB0aGUgYmx1ZSBzYXlpbmcgSSdtIG5vdCBhIHNoaWxsIGluIGEgY29tbWVudCBjaGFpbiBjYWxsaW5nIG91dCB0aGF0IG9uZSBndXkgd2hvc2UgcG9zdHMgc29sZWx5IGNvbnNpc3Qgb2YgR01PLCBSb3VuZHVwLCBhbmQgTW9uc2FudG8uIFlvdSBjYW4gZ2l2ZSBoaW0gdGhlIGJlbmVmaXQgb2YgdGhlIGRvdWJ0LCBidXQgSSd2ZSBzZWVuIGVub3VnaCBzaGFkeSBwcmFjdGljZXMgb24gUmVkZGl0IHRvIGRvIHRoYXQuCkkgYWxzbyByZWFsbHkgaG9wZWQgdGhlIGJvb2sgd291bGQgc3BlYWsgdG8gUGtlaCBhYm91dCB0aGUgbmVlZCB0byBvd24gdGhlaXIgaGlzdG9yeSBhbmQgYWdhaW4gdGhlIHJlY2VwdGlvbiBoYXMgYmVlbiByZW1hcmthYmxlLiBBdCB0aW1lcyBpdCBoYXMgZmVsdCBsZXNzIGxpa2UgYSBib29rIGFuZCBtb3JlIGxpa2UgSSdtIHBhcnQgb2Ygc29tZSBraW5kIG9mIHNvY2lhbCBtb3ZlbWVudC4gQW5kIG15IG1lc3NhZ2UgaXMgYWx3YXlzIHRoYXQgdGhlIE5ldyBaZWFsYW5kIFdhcnMgd2VyZSBkZWZpbmluZyBjb25mbGljdHMgaW4gb3VyIGhpc3RvcnkuIApUaGlua2luZyBvZiB0aGUgdmljdGltcywgeWVzIGl0IGlzIHRlcnJpYmxlIGJ1dCB0aGV5IHdvbiBsZXQgdGhlIGluY2lkZW50L2V2ZW50IHJ1aW4gdGhlaXIgbGl2ZXMuIApNb3JlPj5Hb3Jkb24gQ2FtcGJlbGw6IE9uIFdoeSBKdXN0aW4gVHJ1ZGVhdSdzIEZhdGUgTWF0dGVycyBUbyBOWlRoZSBzY2FuZGFsIG5vdyBlbmd1bGZpbmcgSnVzdGluIFRydWRlYXUgYW5kIGhpcyBMaWJlcmFsIFBhcnR5IGlzIHRoZSBraW5kIG9mIHRyYWluIHdyZWNrIHRoYXQgY29uZmlybXMgdGhlIHB1YmxpYydzIHdvcnN0IGZlZWxpbmdzIGFib3V0IHBvbGl0aWNpYW5zIGFuZCB0aGVpciBiYWNrIHJvb20gZGVhbGluZ3MuIE1vcmU+Pkpvc2VwaCBDZWRlcndhbGw6IFZlbmV6dWVsYTsgT2lsLCBOZW9saWJlcmFsaXNtIEFuZCBXaGl0ZSBTdXByZW1hY3lWZW5lenVlbGEgaGFzIGJlZW4gc3VmZmVyaW5nIGEgc2xvdyBidXJuLCB5ZXQgZGV2YXN0YXRpbmcgaW50ZXJuYWwgaW5zdXJnZW5jeSBhbmQgZWNvbm9taWMgd2FyIHNpbmNlIHRoZSBvcHRpbWlzdGljIGJlZ2lubmluZ3Mgb2YgdGhlICdCb2xpdmFyaWFuJyBzb2NpYWxpc3QgcmV2b2x1dGlvbiBpbiAxOTk4LiAKIFRoZSBwcm9kdWN0IHdhcyBsYXVuY2hlZCBhdCB0aGUgQ2FuYWRpYW4gSGVhbHRoIEZvb2QgQXNzb2NpYXRpb24gdHJhZGUgc2hvdyBpbiBWYW5jb3V2ZXIsIHdoZXJlIGl0IHNlY3VyZWQgaXRzIGZpcnN0IHJldGFpbCBkaXN0cmlidXRvciwgTnV0cml0aW9uIEhvdXNlLCB3aGljaCBoYXMgc3RvcmVzIGFjcm9zcyB0aGUgY291bnRyeS4uIApUaGV5IG5vdCBwbGF5aW5nIGZvciBtb25leSwganVzdCBmb3IgZnVuLiAKNyBjYXJkIHN0dWQgd29ya3MgdGhlIHNhbWUgYXMgaXRzIDUgY2FyZCBjb3VudGVycGFydCBleGNlcHQgZWFjaCBwbGF5ZXIgaXMgZGVhbHQgdHdvIGRvd24gY2FyZHMgYW5kIG9uZSBjYXJkIGZhY2luZyB1cCBiZWZvcmUgdGhlIGJldHRpbmcgYmVnaW5zLiBUaGUgc2V2ZW50aCBjYXJkIGNhbiBiZSBkZWFsdCB1cCBvciBkb3duIGRlcGVuZGluZyBvbiBob3VzZSBydWxlcy4gCkkgZW5kZWQgdXAgZ2V0dGluZyBhY2NlcHRlZCBpbnRvIGxhdyBzY2hvb2wgaW4gbXkgaG9tZSBzdGF0ZSBhbmQgaW4gYW5vdGhlciBzY2hvb2wgb3V0IG9mIHN0YXRlLiBUaGUgd2VlayBhZnRlciBJIGdvdCBteSBhY2NlcHRhbmNlIGxldHRlcnMsIHRoZSBjb21wYW55IEkgd2FzIHdvcmtpbmcgYXQgdG9sZCB0aGUgd2hvbGUgZmFjdG9yeSB0aGV5IHdlcmUgb3V0c291cmNpbmcgYW5kIGNsb3NpbmcgdXAgdGhlIGJ1aWxkaW5nLiBJIGJpdCB0aGUgYnVsbGV0IGFuZCBkZWNpZGVkIHRvIGxlYXZlIHRoZSBzdGF0ZS4uIApFZGl0IHRvIGFkZCB0aGF0IEkgd291bGQgYXZvaWQganVpY2UgYXMgbG9uZyBhcyBwb3NzaWJsZS4gClRoaXMgaXMgd2h5IGZvciBleGFtcGxlIHRoZSBSR04gaGFzIGl0IHRoYXQgdGhlcmUgaXMgYSBodXJ0aWdydXRlIHNlcnZpY2UgZnJvbSBNb3NrZW5lcyB0byBCb2RvLiAKVGhlcmUgbm8gc3VjaCB0aGluZyBhcyBhIGZ1Y2tpbmcgdHJpbSwgSSBjaGFyZ2luZyB5b3UgZm9yIGEgaGFpcmN1dCBiZWNhdXNlIEkgY3V0dGluZyB5b3VyIGhhaXIuIApUaGUgQmF5IEFyZWEgTmV3cyBHcm91cCByZWNlbnRseSBsYXVuY2hlZCBhIG5ldyBhbmQgaW1wcm92ZWQgd2Vic2l0ZSB0aGF0IGZ1bmN0aW9ucyBtdWNoIGJldHRlciBhY3Jvc3MgYWxsIHBsYXRmb3JtcyAoZGVza3RvcCwgbW9iaWxlLCB0YWJsZXQpIGFuZCBpbmNyZWFzZXMgb3VyIGFiaWxpdHkgdG8gZ2V0IHRoZSBsYXRlc3QgbmV3cyBvdXQgdG8geW91IGFzIGZhc3QgYXMgcG9zc2libGUuClNvbWV0aW1lcywgaXQganVzdCBkb2Vzbid0IHdvcmsuCkhlbGxvLCBOZXcgWW9yayBUaW1lcz8gVGhpcyBpcyBTZW5hdG9yIEppbSBEZU51dGNhc2Ugd2hvIGVhcmx5IG9uIGNhbGxlZCBvbiBSZXB1YmxpY2FucyB0byB1c2UgaGVhbHRoIGNhcmUgZGViYXRlcyB0byAiYnJlYWsgT2JhbWEiIGFuZCBpcyBhIHdlbGwga25vd24gdGVudGhlciAodGhlc2UgYXJlIHRoZSBmb2xrcyB3aG8gdGhpbmsgdGhlIDEwdGggQW1lbmRtZW50IGFsbG93cyBzdGF0ZXMgdG8gaWdub3JlIGZlZGVyYWwgbWFuZGF0ZXMgIHNvIHRoaW5ncyBsaWtlIHRoZSBDaXZpbCBSaWdodHMgQWN0IGNhbm5vdCBpbiBmYWN0IGJlIGVuZm9yY2VkKS4KVHJ5aW5nIHRvIHB1bmlzaCBwYXJlbnRzIGlzIGxpa2Ugc2hvb3RpbmcgcG9vbCB3aXRoIGEgcm9wZS4gSXQgaW5lZmZlY3RpdmUgYW5kIGEgd2FzdGUgb2YgbGlmZS4uIApJIHdhcyByZWFsbHkgcGVycGxleGVkIHRoZSBmaXJzdCB0aW1lIEkgaGVhcmQgdGhlIHRlcm0gInRyYXZlbGVycyIgdXNlZCBpbiB0aGUgVUsgY29udGV4dC4gSSB3b3VsZCBob3BlIHRoYXQgdS9pbGx1bXluaXRlIGRvZXNuIGV2ZW4ga25vdyB3aGF0IHRoYXQgbWVhbnMuIEluIGZhY3QuIEkgbm90IGVudGlyZWx5IHN1cmUgSSB1bmRlcnN0YW5kIHRoZSBmdWxsIHNjb3BlLiBJIHRoaW5rIG15IG9ubHkgZXhwb3N1cmUgdG8gaXQgd2FzIHRoZSBFZGRpZSBJenphcmQgc2hvdyBUaGUgUmljaGVzLCBzby4gQW55d2F5LCBhdCB0aGlzIHBvaW50IEkgcmFtYmxpbmcuClRpY2t0b2NrMzIxMCAgNiBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KTWFraW5nIG1vcmUgdGhpbmdzIHdpdGggdGFycHMgaXMgd2hhdGV2ZXIgdGhvdWdoIHNpbmNlIEkgd291bGQgcmF0aGVyIGJ1aWxkIGEgaHVuZHJlZCB3YXRlciBzdGlsbHMgdGhhbiBhIHNoZWx0ZXIgd2l0aCB0aGUgdGFycC5JIGFncmVlIHdpdGggdGhlIFJhZGlvLCB0aGF0IGJlIGNvb2wuIApBbmQgaW4gYmVmb3JlIGFueW9uZSBzYXlzIGhvdyByZWNrbGVzcyBvciBzdHVwaWQgdGhhdCBpcyBvZiBtZSB0byBnbyB0byBhIHJvb20gd2l0aCB0aGVzZSBndXlzLCBJIHdhcyAyNSBhbmQgdGhleSB3ZXJlIGxpa2UgMzUgNDAgYWxtb3N0IGFsbCBtYXJyaWVkIHdpdGgga2lkcy4gVGhleSB3ZXJlbiBhIGdyb3VwIG9mIGd1eXMgdG8gYmUgc2NhcmVkIG9mLiBNeSBmcmllbmQgKHdobyBJIGRpZG4gZXZlbiBrbm93IHBsYXllZCBwb2tlcikgY2FsbGVkIG1lIGFuZCBhc2tlZCBpZiBJIHdhbnRlZCB0byBwbGF5IGEgaG9tZSB0b3VybmFtZW50IHRoYXQgbmlnaHQuIApJZiB5b3Ugd2FudCB0byBiZSBwYWlkIG9yIGhhdmUgc29tZXRoaW5nIGNvbnRyaWJ1dGVkLCBjb21tb24gY291cnRlc3kgZGljdGF0ZXMgdGhhdCB5b3Ugc2hvdWxkIHJlcXVlc3QgaXQgYXQgdGhlIHRpbWUgb2YgdGhlIGludml0YXRpb24sIHNvIHRoZSBndWVzdCBjYW4gZGVjaWRlIHdoZXRoZXIgdGhleSBhYmxlIHRvIGFmZm9yZCB0byBhdHRlbmQuIApIZSBqdXN0IGhhZCBhIFVUSSAoYnV0IHNob3dlZCBhcyBraWRuZXkgZmFpbHVyZSBkdWUgdG8gc3RyZXNzKS4gCkkgaGF2ZSBzcGVudCB2ZXJ5IGxpdHRsZSBvbiB0aGlzIGJ1aWxkICAgdGhlIGJpZ2dlc3QgaW52ZXN0bWVudCB3YXMgYSA2TCBRdWlsbCBSYWluIGZvciAyZXggc2V2ZXJhbCB3ZWVrcyBhZ28uIE90aGVyd2lzZSBJIHRoaW5rIGkgc3BlbnQgMmV4IHRvdGFsIG9uIGFsbCBvdGhlciBpdGVtcyAoZXhjbHVkaW5nIGZ1c2VzIGZvciB0aGUgY2hlc3QgICB3aGljaCB0b29rIEEgTE9UKS4gU29tZSBvZiB0aGlzIHdhcyB0aGUgbmV3IHBsYXllcnMgbmV2ZXIgcGxheWVkIGR1cmluZyB0aGUgRVMgbWV0YSwgYW5kIHdlcmUgcmVhbGx5IGJhZCBhdCBwcmljaW5nIEVTIGpld2VybHkgYW5kIG5vbiBjaGVzdCBhcm1vcnMuIEkgd2FzIGFibGUgdG8gcGljayB1cCBkZWNlbnQgdG8gZ29vZCBFUyBnZWFyIGZvciBsZXNzIHRoYW4gMTBjL2VhY2guCkRlYXIgbG9yZCwgb3duaW5nIGEgY2FyIGlzIGV4cGVuc2l2ZSwgYnV0IGl0IGJlYXRzIHB1YmxpYyB0cmFuc3BvcnRhdGlvbi4gSSBoYWQgdG8gdGFrZSB0aGUgYnVzIGludG8gd29yayB0b2RheSBhbmQgbXVzdCBoYXZlIGZvcmdvdHRlbiB0byB0YWtlIHRoYXQgbGl0dGxlIHNpZ24gb2ZmIG15IGZvcmVoZWFkIHRoYXQgc2FpZCAiSWYgeW91IHJlIGEgZnJlYWsgcGxlYXNlIHRhbGsgdG8gbWUuIiBNeSBpUG9kIGRpZCBub3RoaW5nIHRvIGRldGVyIHRoZSBDaGF0dHkgQ2F0aHlzLiAKIkJ1dCwgSSBiZWVuIHJlYWxseSB3b3JraW5nIG9uIG15IGdhbWUuIgpXZWFrIGZyb20gaW5oYWxpbmcgc28gbXVjaCBjYXJib24gbW9ub3hpZGUsIExlb25hIHdhcyBiYXJlbHkgYWJsZSB0byBjYWxsIDkgMSAxLgpKb2dvcyBkZSBzdHJpcCBwb2tlciBncmF0aXMKRGFucyBjZSBtbWUgY291cnJpZXIsIGlsIGFmZmlybWUgcXVlICBub3VzIHNvbW1lcyB0cnMgaWdub3JhbnQgZGFucyBsYSBzY2llbmNlIHBvbGl0aXF1ZSBtb3JhbGUuIApTdHVwaWQgcGVvcGxlIGRvIHN0dXBpZCB0aGluZ3MgZm9yIHRoZSBzYWtlIGFuZCBpbnRlbnQgb2Ygc3R1cGlkLiAKV2ViTUQgKDIvMiwgR29vZG1hbikgcmVwb3J0cywgIkluIHJlY2VudCB5ZWFycywgYSBudW1iZXIgb2Ygc3R1ZGllcyBoYXZlIHNob3duIHRoYXQgcmVtZWRpZXMgZm9yIG11c2NsZSBzb3JlbmVzcyB0aGF0IHdvcmsgYnkgdHVybmluZyBkb3duIGluZmxhbW1hdGlvbiAgIHRoaW5ncyBsaWtlIGljZSBiYXRocyBvciBhbnRpIGluZmxhbW1hdG9yeSBtZWRpY2F0aW9ucyAgIG1heSBhbHNvIGhhdmUgYSBkb3duc2lkZS4gVGhleSBtYXkgYWxzbyBibG9jayBtdXNjbGUgcmVwYWlyIGFuZCBncm93dGgsIHdoaWNoIGRlcGVuZHMgb24gaW5mbGFtbWF0aW9uLiIgSG93ZXZlciwgYWNjb3JkaW5nIHRvIFRhcm5vcG9sc2t5LCB0aGlzIHN0dWR5IHN1Z2dlc3RzIHRoYXQgbWFzc2FnZSBtYXkgYmUgImFuIGludGVydmVudGlvbiB0aGF0IHN1cHByZXNzZXMgdGhlIGluZmxhbW1hdG9yeSByZXNwb25zZSBidXQgc3RpbGwgYWxsb3dzLCBhbmQgYWN0dWFsbHkgZW5oYW5jZXMsIHRoZSBbcmVjb3ZlcnldIHJlc3BvbnNlLiIgQWxzbyBjb3ZlcmluZyB0aGUgc3RvcnkgYXJlIEhlYWx0aERheSAoMi8yLCBQcmVpZHQpIGFuZCB0aGUgVUsgRGFpbHkgTWFpbCAoMi8yKS4KV2hpbGUgeW91IGRvbid0IGhhdmUgdG8gaGF2ZSB0aGUgbW9zdCB1cHNjYWxlIGZ1cm5pc2hpbmcsIHJhdGhlciB0aGFuIGRyaXZpbmcsIGZvciBleGFtcGxlIGFuZCB0aGVuIGJlIHdpbGxpbmcgdG8gYnVkZ2Ugb24gb3RoZXIgYXJlYXMuIApJIHRoaW5rIGJ5IHRoZSB0aW1lIEFwcGxlIGRvZXMgc29tZXRoaW5nIGluIEFSL1ZSIHRoZXkgZ29pbmcgdG8gYmUgbGlrZSBBbmRyb2lkIGdldHRpbmcgaW50byBwaG9uZXMsIHR3byBzdGVwcyBiZWhpbmQuIFRoaXMgaXNuIHRvIHNheSB0aGF0IEFwcGxlIHdvbiBoYXZlIGEgY29tcGV0ZW50IEFSL1ZSIG9mZmVyaW5nLCBJIGp1c3QgZG9uIHRoaW5rIHRoZXkgZ29pbmcgdG8gYmUgdGhlIGZvcmVydW5uZXIgb3Iga25vd24gZm9yIHRoaXMgbmV4dCBnZW4gdGVjaC4uIApBcyB5b3UgY2FuIHNlZSwgeW91IGNhbiBnZXQgYSBsb3QgbW9yZSBvdXQgb2YgeW91ciBzdG9yaWVzIGJ5IHRoaW5raW5nIGFib3V0IHRoZSBkZXRhaWxzIHlvdXIgY2hhcmFjdGVyIGlzIGdvaW5nIHRvIGJlIGRvaW5nIG9yIGZhY2luZyBzdGVwIGJ5IHN0ZXAgb3Igc2Vjb25kIGJ5IHNlY29uZC4gVGhpbmsgb2YgZWFjaCBzdGVwIHlvdSB0YWtlLiBUYWtlIHRpbWUgdG8gbGlzdGVuIHRvIHlvdXIgaGVhcnQgYmVhdCBhcyB5b3UgdGFrZSBhIHN0ZXAuIElmIHlvdSBjYW4gaGVhciBpdCwgdXNlIGEgc3RldGhvc2NvcGUuClRob21hcyBzZXJ2ZWQgYXMgY2hhaXIgb2YgdGhlIGNvbmZlcmVuY2UgYW5kIEZvc3RlciBjbyBjaGFpcmVkIHRoZSBwcm9ncmFtIGNvbW1pdHRlZS4gCkluc3RhbGxpbmcgaGFuZGljYXAgYWNjZXNzaWJsZSByYW1wcyBhbmQgYmF0aHJvb21zIGFuZCByZSBpbnN0YWxsaW5nIHRoZSBoaXN0b3JpYyBoaXRjaGluZyBwb3N0cyB0aGF0IG9uY2UgZ3JhY2VkIHRoZSBzb3V0aCBzaWRlIG9mIHRoZSBidWlsZGluZyB3aGVyZSB0aGUgc3RhYmxlcyB1c2VkIHRvIGJlIGFsc28gYXJlIG9uIHRoYXQgbGlzdCBvZiBob3Blcy4gUmVzdG9yaW5nIHRoZSBsYXJnZXIgdGhhbiBsaWZlIGVsZWN0cmljIERlc2t5IHNpZ24gYW5kIGhhdmluZyBpdCBvbmNlIGFnYWluIGxpZ2h0IHRoZSBCcnVzaCBkb3dudG93biBza3lsaW5lIGlzIGFub3RoZXIgZ29hbCBPc2Jvcm5lIGhvcGVzIHRvIGFjY29tcGxpc2ggaW4gdGhlIG5lYXIgZnV0dXJlIGFzIHNoZSBiZWdpbnMgYSBxdWVzdCBmb3IgZG9uYXRpb25zIGFuZCBmdW5kaW5nIHRvIGhlbHAgdGhlIGVmZm9ydC4gVGhlIGNvc3QgaXMgJDI1IHBlciBwZXJzb24gYW5kIGluY2x1ZGVzIGEgYmFyYmVjdWUsIG11c2ljLCBhIDUwLzUwIGRyYXdpbmcsIGF1Y3Rpb24gYW5kIGZyZWUgdCBzaGlydC4KVGhpcyBjb25qdW5jdGlvbiBvZiBhbiBpbW1lbnNlIG1pbGl0YXJ5IGVzdGFibGlzaG1lbnQgYW5kIGEgbGFyZ2UgYXJtcyBpbmR1c3RyeSBpcyBuZXcgaW4gdGhlIEFtZXJpY2FuIGV4cGVyaWVuY2UuIAoiVGhlIGNvbnZlcnNhdGlvbnMgYXJlIGFsd2F5cyBpbiBub3Rlcy4gClRoZXkgdGVuZCB0byBwbGF5IHRoZXNlIGdhbWVzIHdpdGggUG9rZXIgQ2hpcHMgdGhhdCBkb24ndCBoYXZlIGFueSByZWFsIG1vbmV0YXJ5IHZhbHVlLiAKTW90aGVyb2ZQdWdzNSAgMzU0IHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnbwpSaWdodCB3aW5nZXJzIHVzaW5nIGNvbmNlcm4gdHJvbGxpbmcgYW5kIHRyeWluZyB0byBqdXN0aWZ5IG1ha2luZyB0cmFucyBwZW9wbGUgdW5hYmxlIHRvIGNoYW5nZSB0aGVpciBJRCB3aXRoICJkb2N0b3JzIG5lZWQgdG8ga25vdyEiIG9mZmVuZHMgbWUuIAo1OCBwb2ludHMgIHN1Ym1pdHRlZCAzIG1vbnRocyBhZ28uIApFZGl0MzogSW4gTVNJIEFmdGVyYnVybmVyLCBJIHdhcyBhYmxlIHRvIGdldCBDb3JlIENsb2NrIHRvICsyMTFNSHogYW5kIE1lbW9yeSBDbG9jayB0byArNTU1TUh6LiBJIGhhdmVuIHRyaWVkIGFkanVzdGluZyBzaW5jZSB1bmRlcnZvbHRpbmcgdGhlIENQVS4gSWYgYW55b25lIGNvdWxkIHVwZGF0ZSBtZSBvbiB0aGlzLCB3aGF0IHRoZXkgaGF2ZSBzZXQgd2l0aCB1bmRlcnZvbHRpbmcgSSByZWFsbHkgYXBwcmVjaWF0ZSBpdC4KQXQgRnVsbFRpbHQgcG9rZXIgeW91IGNhbiBnZXQgdGhlcmUgZm9yIGFzIGxpdHRsZSBhcyAkNC4gCiJXaWxsIHlvdSBub3cgYmUgY29tcGxpY2l0IGluIGVzdGFibGlzaGluZyBhIHByZWNlZGVudCBhbmQgZXhwZWN0YXRpb24gdGhhdCB0ZWVuYWdlcnMgc2hvdWxkIGVuZ2FnZSBpbiBiZWhhdmlvcnMgaGVyZXRvZm9yZSBhc3NvY2lhdGVkIHByaW1hcmlseSB3aXRoIGFkdWx0IGZpbG1zPyJXaGF0IGV4YWN0bHkgbWFrZXMgYSB0aHJlZXNvbWUgbW9yZSBtb3JhbGx5IHN1c3BlY3QgdGhhbiB0ZWVuYWdlcnMgd2hvIGRyaXZlIGNhcnMgdGhhdCBjb3N0IG1vcmUgdGhhbiBteSBhbm51YWwgc2FsYXJ5PyBXaGF0IGV4YWN0bHkgbWFrZXMgYSB0aHJlZXNvbWUgbW9yZSBtb3JhbGx5IHN1c3BlY3QgdGhhbiBkZXBpY3RpbmcgdGhlIGxpdmVzIG9mIHBlb3BsZSB3aG8gc2VlbWluZ2x5IGhhdmUgbW9yZSBtb25leSB0aGFuIEdvZCwgYnV0IG5ldmVyIGV2ZW4gc2VlbSB0byBmZWVsIHRoZSBzbGlnaHRlc3QgbmVlZCB0byBHSVZFIElUIFRPIFRIRSBQT09SPwpKdW5lIDc6IEZhY2Vib29rIGZpbmRzIGEgImJ1ZyIgdGhhdCBjaGFuZ2VkIDE0IG1pbGxpb24gcGVvcGxlJ3MgcHJpdmFjeSBzZXR0aW5ncy4gVGhlIGdsaXRjaCByZXNldCB0aGUgZGVmYXVsdCBzaGFyaW5nIHNldHRpbmcgdG8gInB1YmxpYywiIGV2ZW4gaWYgdGhlIHBlb3BsZSBoYWQgcmVmaW5lZCB0aGVpciBzaGFyaW5nIHByZWZlcmVuY2VzIHRvIG9ubHkgaW5jbHVkZSBzZWxlY3QgZnJpZW5kcy4gClNoZSBhbHNvIGFsbGVnZXMgdGhhdCwgd2hpbGUgaGF2aW5nIHNleCB0b2dldGhlciBsYXRlciB0aGF0IG1vbnRoLCBTYWxvbW9uIHB1dCBhIHBpbGxvdyBvdmVyIGhlciBmYWNlIGFuZCAidHJpZWQgdG8gc3RyYW5nbGUiIGhlci4gClNvbiB1dGlsaXNhdGlvbiBuZSBwZXV0IHRyZSBlbnZpc2FnZSBxdWUgcG91ciB1bmUgcmVsYW5jZSBkZSBxdWVscXVlcyBzZW1haW5lcy5Mb3JzIGRlIG1hIHByb3ByZSByZWNoZXJjaGUgaidhdmFpcyBkb25jIHJlcHIgZGVzIGFydGljbGVzIGVuIGFuZ2xhaXMgdm9xdWFudCBsZSBEIFJpYm9zZSBlbiBsaWVuIGF2ZWMgbGUgZGlhYnRlIG1haXMgY2VzIGFydGljbGVzIG5lIHNvbnQgcGFzIGRpc3BvbmlibGVzICBtb2lucyBkZSBsZXMgYWNoZXRlciBldCBjZSBuJ2VzdCBwYXMgYm9uIG1hcmNoLkouIApJIGhhdmUgdGhlIGVudGlyZSByL3Nld2luZyBoaXN0b3J5IGluIGEgZGF0YWJhc2UuIFRoZSBzY3JpcHQgaXMgY3VycmVudGx5IHBhcnNpbmcgb3ZlciBhcm91bmQgNDAsMDAwIHBvc3RzIGxvb2tpbmcgZm9yIGhobW0gSSBzYXkgMzAgZGlmZmVyZW50IHBhdHRlcm4gY29tcGFuaWVzIGFuZCBjcm9zcyByZWZlcmVuY2luZyB0aGUgY29tcGFueSBuYW1lIHRvIHNlZSBpZiBpdCBpbiB0aGUgdGl0bGUuIExvbmcgc290cnkgc2hvcnQgdGhlcmUgaXMgYSBnb29kIGNoYW5jZSBpbiB0aGUgbmVhciBmdXR1cmUgdXNlcnMgY2FuIHNpbXBseSBzZW5kIGEgbWVzc2FnZSB0byB0aGUgYm90LCBhbmQgaGF2ZSBpdCByZXR1cm4gYWxsIHRoZSBwYXR0ZXJuIGZvciB0aGUgY29tcGFueSwgYWxsIHRoZSBzYW1lIHVzZXJzIHdobyBoYXZlIGRvbmUgdGhlIHNhbWUgcGF0dGVybiAgIHRvbnMgb2Ygc3R1ZmYuIFNvbWUgcGF0dGVybnMgb3ZlciB0aGUgcGFzdCB3aGF0IDYgeWVhcnMgaGF2ZSBhcm91bmQgMTAgb3IgbW9yZSBwb3N0cy4gSSB3YXl5eXkgdG9vIGV4Y2l0ZWQgYWJvdXQgdGhpcyBoYWhhaApTeWVkIHByZXNlbnRlZCBubyBsZXNzIHRoYW4gc2V2ZW4gcG90ZW50aWFsIGJhc2VzIGZvciBhIGZpbmRpbmcgb2YgSUFDIGluIGhpcyBpbml0aWFsIHBldGl0aW9uLCB3aGljaCB3YXMgImZ1bGx5IGxpdGlnYXRlZCIgaW4gT2N0b2JlciAyMDEyLCBidXQgdGhlIGNlbGwgdG93ZXIgZXZpZGVuY2UgaXNzdWUgd2FzbiBhbW9uZyB0aGVtLiBIZSBvbmx5IGFzc2VydGVkIHRoYXQgb25lIG9uIHJlbWFuZC4gVGhlcmUgd2FzIG5vIHJlYXNvbiBoZSBjb3VsZG4gaGF2ZSByYWlzZWQgaXQgdGhlIGZpcnN0IHRpbWUgYXJvdW5kLCBzbyB0aGF0IGlzc3VlIGlzIHdhaXZlZC4KSSBvdmVyIGRpZCBpdCB3aGVuIEkgYmVnYW4gYSBmYWxsIHJ1bm5pbmcgcHJvZ3JhbSBhbmQgbXkgZ2x1dGVzIGJlY2FtZSBzbyBzb3JlIHRoZXkgd2VyZSBwYWluZnVsIHRvIHRoZSBtb2Rlc3QgcHJlc3N1cmUuIEkgd2VudCB0byBTTUkgKFBhbG8gQWx0bywgQ0EpIGFuZCBhZnRlciBhIHJhdGhlciBwYWluZnVsIHNlc3Npb24sIGJ5IHRoZSBuZXh0IGRheSBJIHdhcyBmZWVsaW5nIG11Y2gsIG11Y2ggYmV0dGVyLiBBIGZldyBkYXlzIGxhdGVyIEkgd2FzIGNvbXBldGl0aXZlIGluIGEgbG9jYWwgaGlsbGNsaW1iLi4gCkxpa2UgYSBMZXNjaGUgbGlsIHNhbXBzb24gKGdldCB0aGUgVCBoYW5kbGUuIApBbHNvLCB0aGlzIHNlZW1lZCB0byBiZSBhIHN1cGVyIGVhcmx5IGludHJvZHVjdGlvbiB0ZXh0Ym9vayBzaW5jZSBpdCBub3QgdXNpbmcgSVBBLiBVc3VhbGx5LCB5b3Ugd291bGRuIGhhdmUgc3VjaCBjb21pY2FsIHNwZWxsaW5nIGluIGEgdGV4dGJvb2sgYnV0IHJhdGhlciBhIG1vcmUgbmV1dHJhbCB0cmFuc2NyaXB0aW9uIG9mIHRoZSBzb3VuZHMgaW4gSVBBIGFuZCBtYXliZSBldmVuIGEgZ2xvc3NhcnkgKGtpbmRhIGxpa2UgYSB0cmFuc2NyaXB0aW9uIHRoYXQgbWFrZXMgYWxsIHRoZSBncmFtbWFyIG9idmlvdXMgZXZlbiBpZiB5b3UgZG9uIHNwZWFrIHRoZSBsYW5ndWFnZS4gCjYgd2VlayBkaWV0IChwcm92b2NhdGlvbiBkaWV0IGZvbGxvd2luZyBlbGltaW5hdGlvbiBkaWV0IG9yIHZpY2UgdmVyc2EpLiAKQXNrIGEgc3R1ZGVudCBob3cgbXVjaCB0aGV5IGRyaW5raW5nIHBlciB3ZWVrIGFuZCB0aGV5IHRlbGwgdXMgMjAgZHJpbmtzLiBUaGVuIHdlIGFzayB0aGVtIGhvdyBtdWNoIHRoZXkgdGhpbmsgb3RoZXIgVUggc3R1ZGVudHMgZHJpbmsgYW5kIHRoZXkgdGVsbCB1cyAyNSBkcmlua3MuIFRoZW4gd2Ugc2hvdyB0aGVtIHRoYXQgYSB0eXBpY2FsIHN0dWRlbnQgZHJpbmtzIGFuIGF2ZXJhZ2Ugb2YgMy41IGRyaW5rcyBhbmQgdGhleSBhcmUgc3VycHJpc2VkIGJ5IGl0LiBJdCBjb25jZXJucyB0aGVtIGJlY2F1c2UgdGhleSB0aG91Z2h0IHRoZXkgd2VyZSBkcmlua2luZyBhIG5vcm1hbCByYXRlLCBzYWlkIE5laWdoYm9ycy4KSW4gY29uanVuY3Rpb24gd2l0aCB0aGUgUHJhaXJpZSBCaWtlciBSYWxseSwgOTcuNSBCb2IgRk0gaXMgZ2l2aW5nIGF3YXkgdGhlIEhhcmxleSBtb3RvcmN5Y2xlIGFzIHBhcnQgb2YgdGhlaXIgc2Vjb25kIGFubnVhbCBIb2cgV2lsZCBTdW1tZXIuCjIzIHJlYWRzOiJXZSBoYXZlIGFuIGFtYXppbmcgc3RhZmYgcmVhZHkgdG8gbWFzc2FnZSB5b3VyIHN0cmVzcyBhd2F5LiBUYWtlIHRpbWUgZm9yIHlvdXJzZWxmIGFuZCBpbmR1bGdlIGluIHNvZnQgbXVzaWMsIGNhbmRsZWxpZ2h0IGFuZCB0cmFucXVpbGl0eS4gClBva2VyIGZhY2UKUE1VIGVub3Jtb3VzIGNvbW1vbiBiZXR0aW5nIHBvb2wgYW5kIHRoZSBhcnJheSBvZiBzaW1wbGUgYW5kIGV4b3RpYyBiZXR0aW5nIHByb2R1Y3RzIG1ha2UgcGFydG5lcnNoaXBzIHdpdGggUE1VIHBhcnRpY3VsYXJseSBhdHRyYWN0aXZlIHRvIGZvcmVpZ24gaG9yc2UgcmFjZSBiZXR0aW5nIG9wZXJhdG9ycyBsb29raW5nIHRvIG9mZmVyIG1vcmUgcHJvZml0YWJsZSBiZXR0aW5nIHByb2R1Y3RzIHRvIHRoZWlyIGJldHRpbmcgY29tbXVuaXR5IG9uIFBNVSBJVCBwbGF0Zm9ybS4gVGhpcyBwbGF0Zm9ybSBpcyBhIHJlc3VsdCBvZiBzaWduaWZpY2FudCBQTVUgaW52ZXN0bWVudCBpbiBvcmRlciB0byBrZWVwIHVwIHdpdGggdGhlIHZvbHVtZSBvZiBiZXR0aW5nLCBhbGxvd2luZyBiZXR0b3JzIHRvIHBsYWNlIGJldHMgYWxtb3N0IHVwIHRvIHRoZSBzdGFydCB0aW1lIG9mIGEgcmFjZSBhbmQgZGlzdHJpYnV0aW5nIHdpbm5pbmdzIG1lcmVseSBmaXZlIG1pbnV0ZXMgYWZ0ZXIgdGhlIG9mZmljaWFsIHJlc3VsdHMgYXJlIGFubm91bmNlZC4KV2Uga25vdyB0aGVyZSBhcmUgZm91ciAzJ3MsIGFuZCBmb3VyIDgncyB0aGF0IHdpbGwgbWFrZSB1cyBhIHN0cmFpZ2h0LiAKTm93IGhlIHBheXMgZGF5Y2FyZSBmb3IgaGlzIG91dGxhbmRpc2ggaG91cnMuIEkgbm93IHdvcmsgb3V0IG9mIHRoZSBob21lIGp1c3QgYSBjb3VwbGUgZGF5cyBhIHdlZWsgKGxpa2UgdG9uaWdodCBJIGhhdmUgdG8gZ2l2ZSBhIG1hc3NhZ2UgYXQgNXBtICAgSSdsbCBiZSBob21lIGJ5IDc6MzApLiBUaGF0IGdpdmVzIHVzIHNvbWUgInBsYXkiIG1vbmV5LiAKWWV0IGxlc3MgdGhhbiB0aHJlZSBtb250aHMgYWZ0ZXIgV2FybmUgcHJlZGljdGlvbiBvZiBhIGJ1bXBlciB5ZWFyLCB0aGUgZm91bmRhdGlvbiB3YXMgc2V0IHRvIGNsb3NlLCBzaHV0dGVyZWQgb24gV2FybmUgb3JkZXIgYW1pZCBhIHByb2JlIGludG8gaXRzIGZpbmFuY2VzIGJ5IHRoZSBjb25zdW1lciB3YXRjaGRvZy4gClRoaXMgbWVhbnMgdGhhdCBpcm9uaWNhbGx5LCBDb250aW5lbnRhbCBsYW5ndWFnZXMgbGlrZSBHYXVsaXNoIHdlcmUgZ3JhbW1hdGljYWxseSBtb3JlIHNpbWlsYXIgdG8gTGF0aW4gdGhhbiBDZWx0aWMgbGFuZ3VhZ2VzIGxpa2UgT2xkIElyaXNoLCBhbmQgZXZlbiBzaGFyZWQgb3RoZXIgbGluZ3Vpc3RpYyBmZWF0dXJlcyB3aXRoIHRoZSBmb3JtZXIgdGhhdCBhcmUgYWJzZW50IGluIHRoZSBsYXR0ZXIgKHN1Y2ggYXMgYSBjb25qdWdhdGVkIGZvcm0gb2YgdGhlIHZlcmIgYmUgICBHYXVsLiAKIlRoZSBjYW1lcmFzIGFyZSBwcm9iYWJseSBub3QgdXNlZCBub3csIiBoZSB0d2VldGVkLiAiQnV0IGlmIHRoZXkgYXJlIHdpcmVkLCBvcGVyYXRpb25hbCwgYnVuZGxlZCB3aXRoIG1pYywgaXQncyBhIG1hdHRlciBvZiBvbmUgc21hcnQgaGFjayB0byB1c2UgdGhlbSBvbiA4NCsgYWlyY3JhZnRzIGFuZCBzcHkgb24gcGFzc2VuZ2Vycy4iCllvdSB3aWxsIGhhdmUgdG8gbG9hZCBhIHByb2dyYW0gdG8gcGxheSB0aGUgcm9tIHRocm91Z2ggYW5kIGRvd25sb2FkIHRoZSByb20gZm9yIHRoZSBnYW1lLiAKQSB0cnVlIHBlb3BsZSBwZXJzb24gYW5kIHdhcyBhIGZyaWVuZCB0byBhbGwuIEEgc3BlY2lhbCB0aGFuayB5b3UgdG8gdGhlIGRvY3RvcnMsIG51cnNlcyBhbmQgc3RhZmYgYXQgU3QuIApOZWdhdGl2ZSBSZXZpc2lvbnNNZW1iZXJzIG9mIHRoZSBidXNpbmVzcyBjeWNsZSBwYW5lbCB3aG8gc2F3IGEgcmVjZXNzaW9uIHdlcmUgc3dheWVkIGJ5IHRoZSBzaXplIG9mIHRoZSBuZWdhdGl2ZSByZXZpc2lvbnMsIEtyb25pY2sgc2FpZC4gU3RhdGlzdGljcyBDYW5hZGEgY2hhbmdlZCB0aGUgY29udHJhY3Rpb24gaW4gdGhlIGZpcnN0IHF1YXJ0ZXIgb2YgMjAxNSB0byBhbiBhbm51YWxpemVkIHBhY2Ugb2YgMi4yIHBlciBjZW50IGZyb20gMC44IHBlciBjZW50LCBhbmQgdGhlIHNlY29uZCBxdWFydGVyIHRvIGEgMS4xIHBlciBjZW50IGRlY2xpbmUgZnJvbSAwLjMgcGVyIGNlbnQuCkkgaW1tZWRpYXRlbHkgd2VudCBpbnNpZGUgYW5kIGdyYWJiZWQgYSBncm9jZXJ5IGJhZyBmdWxsIG9mIGV4dHJhIHNoZWV0cyBmb3IgdGhhdCBiZWQsIGJsYW5rZXQsIGV0Yy4gSSBoYW5kZWQgaXQgdG8gdGhlIE1vdGhlciB3aG8gd2FzIGNoYXR0aW5nIHdpdGggbXkgbW9tIGFuZCB0b2xkIGhlciBhbGwgb2YgdGhlIGJlZGRpbmcgY2FtZSB3aXRoIGZvciBubyBleHRyYSBjaGFyZ2UuIFNoZSB3YXMgc28gZXhjaXRlZCBmb3IgIm5ldyBiZWRkaW5nIiB0aGF0IHNoZSB3YXMgYWxtb3N0IGNyeWluZy4gTXkgTW9tIHJlYWxpemVkIHdoYXQgd2FzIGhhcHBlbmluZyBhbmQgdG9sZCBoZXIgdG8gcGxlYXNlIHRha2UgdGhlIGJlZCBhdCBubyBjaGFyZ2UgYmVjYXVzZSB3ZSBqdXN0IHdhbnRlZCBzb21lb25lIHRvIHVzZSBpdC4KVGhlIG1lbW9yaWVzIG9mIHRoYXQgdGltZSBpbiBteSBsaWZlIGFyZSBzbyBkaXN0YW50IGFuZCBzbyB2YWd1ZS4gCkdNIGlzIGhlbHBpbmcgRGVscGhpIGJ1eSBvdXQgbW9yZSB0aGFuIDIwLDAwMCBVQVcgbWVtYmVycywgYW5kIGl0IG1heSBoYXZlIHRvIHNwZW5kIGJpbGxpb25zIG1vcmUgdG8gaGVscCB0aGUgc3VwcGxpZXIgZW1lcmdlIGZyb20gQ2hhcHRlciAxMSByZW9yZ2FuaXphdGlvbi4KSXQgaXMgZXF1YWxseSBpbXBvcnRhbnQgdG8gc2VsZWN0IGEgcGF5bWVudHMgZmFjaWxpdGF0b3IgdGhhdCBpcyByZXB1dGVkLiBZb3Ugd291bGQgYWxyZWFkeSBiZSB1c2luZyBzb21lIHBheW1lbnQgb3B0aW9uIGZvciB0aGUgb3RoZXIgSW50ZXJuZXQgdHJhbnNhY3Rpb25zIGFuZCB5b3Ugc2hvdWxkIHByZWZlcmFibHkgc2VsZWN0IGFuIG9ubGluZSBjYXNpbm8gdGhhdCBvZmZlcnMgdGhpcyBvcHRpb24uIFlvdXIgY29tZm9ydCBsZXZlbCB3aWxsIGRlZmluaXRlbHkgYmUgaGlnaGVyIHdoZW4geW91IHVzZSBhIGZhbWlsaWFyIGVudGl0eS4KUmVpbiBhbmQgeW91IGRvbiBzZWVtIHRvIGJlIHdvcmtpbmcgb24gdGhlIHNhbWUgYWdlbmRhcyBpbiB0aGVzZSBtYXRjaGVzLiBJbiBmYWN0LCBoYWxmIHRoZSB0aW1lIFJlaW4gaXNuIGV2ZW4gb24geW91ciBzY3JlZW4vaW4geW91ciBzYW1lIGxvY2F0aW9uLiBBIGxvdCBvZiB0aGUgZmlnaHRzIGZlZWwgYSBiaXQgY2hhb3RpYy9tZXNzeS4gCkJ1dCB0aGUgcmVhbCBzdHJlbmd0aCBpcyBpbiB0aGUgZmFjdCB0aGF0IGh5ZHJvZ2VuIGNhbiBzbG93bHkgcmVwbGFjZSBuYXR1cmFsIGdhcywgYm90aCBpbiBpbmNyZW1lbnRhbGx5IGVucmljaGluZyB0aGUgZ2FzIGl0c2VsZiBhbmQgaW4gdXBncmFkaW5nIGV4aXN0aW5nIGdhcyB0dXJiaW5lcyB0byBiZWluZyBhYmxlIHRvIGZpcmUgcHVyZSBoeWRyb2dlbi4gVGhlIG5hdHVyYWwgZ2FzIHJlcGxhY2VtZW50IGdvZXMgYmV5b25kIGVsZWN0cmljaXR5LCBub3QgdG8gbWVudGlvbiBpbmR1c3RyaWFsIGh5ZHJvZ2VuLiAKRmFtaWx5LiBTaGluZGxvZG9uIGtlciwgT2V0dDsgaWlyaWNlIExpZ2h0bmVyLiAKU3VwZXIgaW1wcmVzc2l2ZS4gSXQgc2VlbXMgdGhhdCBwcml2YXRpemVkIHRyYW5zaXQgaGFzIGJlZW4gYSBtYWpvciBzdWNjZXNzIGluIHRoZSB0aHJlZSBsYXJnZXN0IG1ldHJvcG9saXRhbiBhcmVhcywgYnV0IG91dHNpZGUgb2YgdGhhdCBpdCBpcyBsYXJnZWx5IHRoZSBzYW1lIGluIHRoZSBzZW5zZSB0aGF0IHRoZSBsaW5lcyBhcmUgbm90IGZ1bGx5IHByaXZhdGl6ZWQgYW5kIG5vdCBlcXVpcHBlZCBvciBkZXNpZ25lZCB0byByZWFsbHkgbWFrZSBhIHByb2ZpdC4gClRoZXJlIGlzIGFuIGV2ZW50IGF0IG91ciBob3VzZSBldmVyeSBvdGhlciB3ZWVrLCBhbmQgSSB3aWxsIHBsYXkgYXQgb25lLCBhbmQgSmFxdWllIHdpbGwgcGxheSBhdCB0aGUgb3RoZXIuIApPYnNlcnZlIGFzIHZlemVzLCBkYXRhcyBlIGR1cmFvIGRhcyBsaWdhZXMgcXVhbHF1ZXIgc3VzcGVpdGFzLiBQcmVzc2lvbmUgYSByZW1hcmNhbyBwb3IgdGVsZWZvbmUgb3UgIDY5LiBFc3RhICB1bWEgbWFuZWlyYSBlZmljYXogZGUgZGVzY29icmlyIHF1ZW0gZWxlcyBjaGFtYW5kby4uIApPdGhlciB3b21lbiB3aG8gZG9uJ3QgdXNlIGFuIGFnZW5jeSBhcmUgcGFpZCBkaXJlY3RseSBieSB1c2VycywgdXN1YWxseSB2aWEgVmVubW8gb3IgUGF5UGFsLiBUaGUgUG9zdCB3YXRjaGVkIGFzIHNvbWVvbmUgdXNlZCBWZW5tbyB0byBzZW5kICQyMCAgIGluIGV4Y2hhbmdlIGZvciBhIHRvcGxlc3MgcGhvdG8gICB0byBhIExvcyBBbmdlbGVzIGJhc2VkIGZlbWFsZSBjb21lZGlhbi4gVGhlIGNvbWljLCB3aG8gZGVjbGluZWQgdG8gYmUgaW50ZXJ2aWV3ZWQsIHBvc3RzIHByZXZpZXdzIG9mIGhlciByYWN5IGNvbnRlbnQgb24gU25hcGNoYXQgYW5kIEluc3RhZ3JhbSAob24gd2hpY2ggc2hlIGhhcyBzb21lIDEyNiwwMDAgZm9sbG93ZXJzKSwgd2l0aCBlbW9qaXMgY292ZXJpbmcgcGFydHMgb2YgaGVyIG5ha2VkIGJvZHkuIE51ZGl0eSBpbiBwaG90b3Mgb2YgcGFpbnRpbmdzIGFuZCBzY3VscHR1cmVzIGlzIE9LLCB0b28sIiBhY2NvcmRpbmcgdG8gdGhlIGNvbXBhbnkncyBjb21tdW5pdHkgZ3VpZGVsaW5lcy4KSXQgd291bGQgYmUgd29ydGggeW91ciB3aGlsZSB0byBnZXQgb24gaGVyIG1haWxpbmcgbGlzdCBub3cgYW5kIHN0YXJ0IHNvYWtpbmcgdXAgaGVyIHdvcmRzIG9mIHdpc2RvbSwgZXZlbiBpZiB5b3UgZG9uIHBsYW4gdG8gZ28gaW50byBiaXogZm9yIHlvdXJzZWxmIGp1c3QgeWV0LiAKV2VpbnN0ZWluLCBhY2N1c2VkIG9mIHNleHVhbGx5IGhhcmFzc2luZyBhbmQgYWJ1c2luZyBudW1lcm91cyB3b21lbiBvdmVyIGRlY2FkZXMsIGhhcyBiZWVuIGZpcmVkIGZyb20gVGhlIFdlaW5zdGVpbiBDby4sIGEgVFYgYW5kIG1vdmllIGZpbG0gcHJvZHVjdGlvbiBjb21wYW55IGhlIGNvIGZvdW5kZWQgd2l0aCBoaXMgYnJvdGhlciBCb2IuIEhlIGhhcyBiZWVuIGV4cGVsbGVkIGZyb20gdGhlIEFjYWRlbXkgb2YgTW90aW9uIFBpY3R1cmUgQXJ0cyBhbmQgU2NpZW5jZXMsIHRoZSBQcm9kdWNlcnMgR3VpbGQgYW5kIHRoZSBCcml0aXNoIEFjYWRlbXkgb2YgRmlsbSBhbmQgVGVsZXZpc2lvbiBBcnRzLi4gCkFqb3V0b25zIGxlIHNlY3RldXIgIlBhcmlzIHJlc3BpcmUiIHJjZW1tZW50IGltcGxhbnQgZXQgZG9udCBpbCBlc3QgcXVlc3Rpb24gZGUgcmVkZmluaXIgbGVzIGNvbnRvdXJzLiAKVHVybiBiYXJyZWwgSSB0aGluayB5b3Ugc2hvdWxkIGp1c3QgYmUgZ29pbmcgYWxsIGluLCBsaWtlIHlvdSBtZW50aW9uZWQuIFlvdSBoYXZlIGxvYWRzIG9mIEZFLiBBbHNvIGluIGxpdmUgcG9rZXIgdGhpcyBpcyBhIHNpdHVhdGlvbiB0aGF0IGlzIGFsbW9zdCBuZXZlciBibHVmZmVkLiAKWWVzLCBjYXNpbm9zIGluIHRoZSBzYW1lIGNpdHkgc29tZXRpbWVzIGFsbG93IHBsYXllcnMgdG8gdXNlIG9yIHR1cm4gaW4gY2hpcHMgZnJvbSBvdGhlciBjYXNpbm9zLCBzdGlsbCB0aGUgcGxheWVycyBzaG91bGQgY2FzaCB0aGVtIGluIHdoZXJlIHRoZSBnb3QgdGhlbSwgaXQgY2FuIHNhdmUgdGhlbSB0aGUgaGFzc2xlIG9mIHRyeWluZyB0byBjYXNoIHRoZW0gaW4gZWxzZXdoZXJlLiAoRnVsbCBBbnN3ZXIpCkV2ZW4gaHVzYmFuZHMgYW5kIHdpdmVzIHBsYXlpbmcgdG9nZXRoZXIgYXJlIHJlcXVpcmVkIHRvIHBsYXkgc2VwYXJhdGUgY29sb3JzLi4gClRvZGF5LCB0aGUgaG9vcGxhIGlzbiB0aGVyZSwgYnV0IEphbnVhcnkgYW5kIEZlYnJ1YXJ5IGFyZSBzdGlsbCB0aGUgYnVzaWVzdCBtb250aHMgZm9yIGludmVzdG1lbnQgZmlybXMuIFJSU1AgYW5kIFRGU0EgY29udHJpYnV0aW9ucyBhcmUgYSBwYXJ0IG9mIHRoYXQsIGJ1dCBpdCBhbHNvIGEgdGltZSB3aGVuIGludmVzdG9ycyBzaXQgZG93biBhbmQgZXZhbHVhdGUgdGhlaXIgcG9ydGZvbGlvcy4gVGhleSBoYXZlIHRoZWlyIGFubnVhbCBhY2NvdW50IHN0YXRlbWVudHMgaW4gaGFuZCwgYW5kIG1vcmUgaW5kb29yIHRpbWUgdG8gY29uc2lkZXIgbmV4dCBzdGVwcy4KT25jZSBvbmUgb2YgdGhvc2UgdmVyc2lvbnMgYmVjb21lcyBhIHJlYWxpdHksIHRoZXkgdG9vIHdpbGwgZmVlbCBiZXRyYXllZCB3aGVuIGl0IHR1cm5zIG91dCB0byBiZSBhIG1vbnVtZW50YWwgZnVjayB1cCBvZiBzdWNoIGVwaWMgcHJvcGVydGlvbnMsIG9tbmlzaGFtYmxlZCB3b250IGV2ZW4gY292ZXIgaXQuCkl0IHdhcyBlcGljIGZvciBvdXIgaG9ybnkgMTh5byBtaW5kcy4uIApIZSBoYWRuJ3QgcGxheWVkIG11Y2ggcG9rZXIgd2hlbiBoZSBzYXQgaW4gb24gYSBmZXcgZ2FtZXMgZWFybGllciB0aGlzIHllYXIuIlRoZSBtb3JlIGV4cGVyaWVuY2VkIHBsYXllcnMgd2hvIGFjdHVhbGx5IHBsYXkgZm9yIG1vbmV5IGVsc2V3aGVyZSB3ZXJlIHN1cGVyIGhlbHBmdWwsIiBPZ2RlbiBzYXlzLiAiVGhleSdyZSBhbHdheXMgcmVhZHkgdG8gZ2l2ZSB5b3UgYWR2aWNlLiBJIGVuZGVkIHVwIHdpbm5pbmcgb25lIG9mIHRoZSB0b3VybmFtZW50cyBiZWNhdXNlIGV2ZXJ5b25lIGhlbHBlZCBtZSBzbyBtdWNoLiAKVGhlIHRyaWFsLCBob3dldmVyLCBsYWNrZWQgc3RhdGlzdGljYWwgcHJlY2lzaW9uIGFuZCB0aGUgZGVzaWduIHJlcXVpcmVtZW50cyB0byBhZGVxdWF0ZWx5IGFzc2VzcyBjaGFuZ2VzIGluIGNsaW5pY2FsIGRpc2Vhc2UgbWVhc3VyZXMgKHJlbGFwc2VzIGFuZCBFeHBhbmRlZCBEaXNhYmlsaXR5IFN0YXR1cyBTY2FsZSBzY29yZXMpLCBwcm92aWRpbmcgb25seSBDbGFzcyBsZXZlbCBJViBldmlkZW5jZSBmb3IgdGhlc2Ugb3V0Y29tZXMuLiAKTGV0IG1lIHNlZSBkaWZmZXJlbnQgdHlwZXMgb2YgYW1tbywgZm9vZCwgbWVsZWUgd2VhcG9ucywgb3IgYW55dGhpbmcgdGhhdCB3aWxsIG1ha2UgbWUgZmVlbCBsaWtlIGkgcHJvZ3Jlc3NlZCBhcyBhIHBpcmF0ZS4gCk9ubHkgaW5jbGluYXRpb24gKGFuZ2xlIHN1YnRlbmRlZCBiZXR3ZWVuIHRoZSB2ZXJ0aWNhbCBhbmQgYSBsaW5lIGpvaW5pbmcgQzcgdG8gdGhlIHNhY3J1bSkgd2FzIGFzc29jaWF0ZWQgd2l0aCBvdXRjb21lLCBhbHRob3VnaCBsdW1iYXIgY3VydmF0dXJlIGFsc28gc2hvd2VkIGEgbWFyZ2luYWwgYXNzb2NpYXRpb24uIFRoZSBhZ2UgIGFuZCBzZXggYWRqdXN0ZWQgb2RkcyByYXRpbyBmb3IgYSAxIHVuaXQgaW5jcmVhc2UgaW4gdGhlIHF1YXJ0aWxlcyBvZiBpbmNsaW5hdGlvbiB3YXMgMS43OSAoY29uZmlkZW5jZSBpbnRlcnZhbDogMS40NCwgMi4yMykuIEFmdGVyIG11dHVhbCBhZGp1c3RtZW50IGZvciB0aGUgNCBwYXJhbWV0ZXJzLCBzdGF0aXN0aWNhbCBzaWduaWZpY2FuY2UgZm9yIGluY2xpbmF0aW9uIHN0aWxsIHJlbWFpbmVkLCB3aXRoIG5vIHN1YnN0YW50aWFsIGNoYW5nZXMgaW4gdGhlIGFzc29jaWF0aW9uIGVzdGltYXRlcy4KSG93IFRvIEZpbmQgQmFjayBNYXNzYWdlIFRvb2xzCkkgaW5zaXN0aW5nIG9uIG5vdGhpbmchIElzIHlvdXIgcG9pbnQgdGhhdCBubyB3b21hbiwgYW55d2hlcmUsIGlzIGFibGUgdG8gbWFrZSBhIGZyZWUgY2hvaWNlIG9mIGhlciBvd24/IE1heWJlIEkgYW0gYXMgc3R1cGlkLCBhbmQgd2lsZnVsbHkgc28sIGFzIHlvdSBiZWxpZXZlLCBidXQgdGhpcyBtYWtlcyB6ZXJvIHNlbnNlIHRvIG1lLiBJIGhhdmUgbm90IGZvcm1hbGx5IHN0dWRpZWQgZmVtaW5pc20gYW5kIG1heWJlIHRoaXMgbWFrZXMgYSBzbWFydCBjb252ZXJzYXRpb24gYmV0d2VlbiB1cyAgIG9yIG9uZSB5b3UgY2FuIGJlIGJvdGhlcmVkIHdpdGggICBpbXBvc3NpYmxlIGJlY2F1c2UgSSBsYWNrIHlvdXIgYWNhZGVtaWMgdHJhaW5pbmcgYW5kIHBlcnNwZWN0aXZlLiAKSGUgZGlkbiBoYXZlIHRvLiBIdW1hbnMgYXJvdW5kIExha2UgQ2hhbXBsYWluIGhhdmUgYmVlbiBzZWVpbmcgYW5kIHJlY29yZGluZyB0aGUgbXlzdGVyaW91cyBhcHBlYXJhbmNlIG9mIENoYW1wIGZvciBjZW50dXJpZXMuIExvY2FsIGxvcmUgaGFzIGl0IHRoYXQgdGhlIGVhcmxpZXN0IGluaGFiaXRhbnRzIG9mIHRoZSBhcmVhLCBBYmVuYWtpIEluZGlhbnMsIHNhdyBDaGFtcCByZWd1bGFybHksIGFzIGRpZCBTYW11ZWwgZGUgQ2hhbXBsYWluLCBhZnRlciB3aG9tIHRoZSBsYWtlIGFuZCB0aGUgbW9uc3RlciBhcmUgbmFtZWQuIApPbGRlc3QgYXJ0aXNhbmFsIGRpc3RpbGxlcnksIE9rYW5hZ2FuIFNwaXJpdHMsIHdhcyBvbmx5IGZvdW5kZWQgaW4gMjAwNC4gClRvIGFjY29tcGxpc2ggdGhpcywgc2hlIHB1Ymxpc2hlcyBoaWdoIHF1YWxpdHkgcGVlciByZXZpZXdlZCBibG9ncywgYXJ0aWNsZXMsIHRleHRib29rcyBmb3IgbWFzc2FnZSB0aGVyYXBpc3RzLiBTdXNhbiBpcyBwYXNzaW9uYXRlIGhlciBtaXNzaW9uIGhhcyBiZWVuIGFjdGl2ZWx5IHByYWN0aWNpbmcgbWFzc2FnZSwgdGVhY2hpbmcsIHJlc2VhcmNoaW5nLCB3cml0aW5nIGZvciBvdmVyIDMwIHllYXJzLiAKRm9yIGJlYXV0eSBmYWRlcyAgIExvcyBBbmdlbGVzIFRpbWVzLgoxOTYvMjAwMy4uIApUaGUgRW52aXJvbm1lbnRhbCBTaGllbGQgVml0YW1pbiBDIEluZnVzaW9uIEZhY2lhbCBpcyBkZXNpZ25lZCB0byByZXZlcnNlIHRoZSBzaWducyBvZiBhZ2luZyB0aGF0IHJlc3VsdCBmcm9tIGV2ZXJ5ZGF5IGVudmlyb25tZW50YWwgZmFjdG9ycyBzdWNoIGFzIHN1bmxpZ2h0LCBzbW9nLCBwb2xsdXRpb24gYW5kIHN0cmVzcy4gTWFzc2FnZSBFbnZ5IFNwYSBhbHNvIG9mZmVycyB0aGUgQ2xhcmlmeWluZyBFbnp5bWUgQWNuZSBGYWNpYWwgd2hpY2ggaXMgZGVzaWduZWQgdG8gaW1wcm92ZSBza2luIGNsYXJpdHksIHJlZHVjZSBibGVtaXNoZXMgYW5kIHNvb3RoZSBpbmZsYW1tYXRpb24gYXMgd2VsbCBhcyB0aGUgQUhBIFJhcGlkIEV4Zm9saWF0b3IgQW50aSBBZ2luZyBGYWNpYWwgd2hpY2ggcmV2ZWFscyBzbW9vdGhlciwgdmlicmFudCwgeW91bmdlciBsb29raW5nIHNraW4uIApBdCAzNSwgSm9kaSBNY0NhcnR5IGlzIGdldHRpbmcgaGVyIGZpcnN0IHRhc3RlIG9mIGZyZWVkb20gd2hlbiBzaGUgcmVsZWFzZWQgZnJvbSBwcmlzb24gYWZ0ZXIgYmVpbmcgY29udmljdGVkIGF0IDE3IGZvciBzaG9vdGluZyBoZXIgZ2lybGZyaWVuZCwgUGF1bGEgRHVsZXR0LiBCZWZvcmUgUGF1bGEsIHRoZSBvbmx5IHBlcnNvbiB3aG8gaGFkIGJlZW4ga2luZCB0byBKb2RpIHdhcyBoZXIgZ3JhbmRtb3RoZXIsIEVmZmllLiBUaGUgYWltbGVzcyBjcm9zcyBjb3VudHJ5IHRyZWssIGluY2x1ZGluZyBhIGRpcCBpbnRvIE1leGljbyB3aXRoIFBhdWxhLCB3YXMgdGhlIGNsb3Nlc3QgdG8gaGFwcGluZXNzIEpvZGkgaGFkIGtub3duLCBzYXZvcmluZyB0aGUgdW5mYW1pbGlhciByaXNrIG9mIGVhY2ggZGF5LiBUaGUgY291cGxlIHN1cHBvcnRlZCB0aGVtc2VsdmVzIHdpdGggcGV0dHkgY3JpbWVzIGFuZCBQYXVsYSBza2lsbHMgYXMgYSBwb2tlciBwbGF5ZXIuIFBhdWxhIGludG94aWNhdGluZyB0YWxrcyBhYm91dCBob3cgYSBnb29kIHBva2VyIGhhbmQgaXMgYSBzdWdhciBydW4gaGFzIEpvZGkgcmVtZW1iZXJpbmcgaGVyIFdlc3QgVmlyZ2luaWEgaG9tZSwgYW5kIGhvdyBzaGUgd2FudHMgdG8gcmV0dXJuIHRvIHRoZSBsYW5kc2NhcGUgb2YgbW91bnRhaW4gY3JlZWtzIHRoYXQgYXBwZWFyIG91dCBvZiBub3doZXJlIGFmdGVyIGEgZ29vZCByYWluLiByZWxhdGlvbnNoaXAgd2l0aCBQYXVsYSBhbmQgaXRzIHZpb2xlbnQgZW5kIHByZXlzIG9uIEpvZGkgbWluZCBhcyBzaGUgYmVnaW5zIGhlciBuZXcgbGlmZSwgaG9waW5nIHNoZSBjYW4gZnVsZmlsIGhlciBkcmVhbSBvZiBzZXR0bGluZyBvbiB0aGUgbGFuZCBvbmNlIG93bmVkIGJ5IGhlciBncmFuZG1vdGhlci4gVGhlbiBKb2RpIG1lZXRzIGFuZCBmYWxscyBmb3IgTWlyYW5kYSBNYXRoZXNvbiBHb2xkZW4sIHdobyBpcyBzZXBhcmF0ZWQgZnJvbSBoZXIgaHVzYmFuZCwgYSBjb3VudHJ5IG11c2ljIHN0YXIgcmVjZWRpbmcgZmFtZS4gQWxvbmcgd2l0aCBNaXJhbmRhIHRocmVlIHNvbnMsIHRoZSBuZXcgY291cGxlIGhlYWRzIGZvciBXZXN0IFZpcmdpbmlhIHdoZXJlIEpvZGkgcmVtZW1iZXJzIHRoZSBhaXIgYXJvdW5kIGhlciBoYWQgZmVsdCByaWdodC4gQWxvbmcgdGhlIHdheSwgSm9kaSBob3BlcyB0byBmaW5kIFBhdWxhIHlvdW5nZXIgYnJvdGhlciwgUmlja3ksIHdobyB3YXMgYWJ1c2VkIGFzIGEgY2hpbGQuCkl0cyBub3Qgd2VsbCBoaWRkZW4gdGhhdCBQb2UgaXMgYmVpbmcgcG9ydHJheWVkIGFzIGEgInRveGljIiBtYWxlIGFuZCBuZWVkcyB0byBoYXZlIGZhaXRoIGluIGhpcyBjb21tYW5kZXIsIHdobyBzZWVtcyB0byBoYXZlIGFuZCBzaGFyZXMgbm8gcGxhbiwgc2ltcGx5IGJlY2F1c2Ugc2hlIGlzIGEgd29tYW4uIEkgc3VyZSBwZW9wbGUgd2lsbCBhcmd1ZSB0aGF0LCBidXQgbGlrZSBJIHNhaWQgdGhpcyBpcyBob3cgSSBzYXcgYW5kIGludGVycHJldGVkIHRoZSBtb3ZpZSBhbmQgaXMgbXkgb3BpbmlvbiBiYXNlZCBvZmYgdGhhdC4gSSBrZWVwIHNlZWluZyBhIGxvdCBvZiBwcm9wYWdhbmRhIHNheWluZyB0aGF0IG1lbiBhcmUgZXZpbCBhbmQgbWVhbiBhbmQgSSB0aXJlZCBhbmQgZnJ1c3RyYXRlZCBieSBpdC4gVG8gc2VlIHRoYXQgc2FtZSBtZXNzYWdlIGFnYWluIGZyb20gb25lIG9mIG15IGZhdm9yaXRlIGZyYW5jaGlzZXMgcmVhbGx5IHJ1aW5zIHRoZSBtb3ZpZSB0byBtZS4gQW5kIHNpbmNlIGFsbW9zdCB0aGUgd2hvbGUgcGxvdCB3YXMgYmFzZWQgb2ZmIHRoYXQgaW50ZXJhY3Rpb24gaXQgYmVjYW1lIG9mIHRoZSBtZXNzYWdlIG9mIHRoZSBtb3ZpZS4gSXQgd2FzbiBhYm91dCB3aGF0IEkgZGVzY3JpYmVkIGFzIHRoZSBvcmlnaW5hbCBtZXNzYWdlLCBhbnltb3JlLgpObyBkYXRhIGlzIHNoYXJlZCB3aXRoIEZhY2Vib29rIHVubGVzcyB5b3UgZW5nYWdlIHdpdGggdGhpcyBmZWF0dXJlLiAoUHJpdmFjeSBQb2xpY3kpTWF2ZW5UaGlzIHN1cHBvcnRzIHRoZSBNYXZlbiB3aWRnZXQgYW5kIHNlYXJjaCBmdW5jdGlvbmFsaXR5LiAoUHJpdmFjeSBQb2xpY3kpTWFya2V0aW5nR29vZ2xlIEFkU2Vuc2VUaGlzIGlzIGFuIGFkIG5ldHdvcmsuIApBIDEzIGNhbm5vdCBiZSByb2xsZWQgd2l0aCBvbmUgcm9sbCBvZiBhIHBhaXIgb2Ygc3RhbmRhcmQgZGljZS4gClRoZXJlIGFyZSBpbmNyZWRpYmxlIHJlc291cmNlcyBhdmFpbGFibGUgdG8gaGVscCB5b3UgdGhyaXZlIGluIHlvdXIgb3duIGJ1c2luZXNzLiAKRml2ZSB5ZWFycyBsYXRlciBCZWJiIEpvbmVzIHdhcyBhcnJlc3RlZCBpbiBCcml0YWluIGFuZCBleHRyYWRpdGVkIHRvIHRoZSBVUyBhZnRlciBhIHR3byB5ZWFyIGxlZ2FsIGJhdHRsZS4gSGUgcGxlYWRlZCBndWlsdHkgYXMgcGFydCBvZiBhIGRlYWwgdG8gYXZvaWQgdGhlIGRlYXRoIHBlbmFsdHkuCkFwcHJlbmV6IGxlcyBjbGFzc2VtZW50cyBkZXMgbWFpbnMuIExlIHN5c3RtZSBkZSBjbGFzc2VtZW50IGRlcyBtYWlucyBlc3QgaWRlbnRpcXVlICBjZWx1aSBkdSBqZXUgZGUgY2FzaW5vLiAKTWluaW11bSBSUklGIHdpdGhkcmF3YWxzIHJlbHkgb24gYSBwcmUgZGV0ZXJtaW5lZCBwZXJjZW50YWdlIGJhc2VkIG9uIHlvdXIgYWdlIGFuZCBpbmNyZWFzZSBhcyB5b3UgZ2V0IG9sZGVyLiAKT25lIG9mIHRoZSBoYXJkZXN0IHRoaW5ncyB0byBtYXN0ZXIgYWJvdXQgcG9rZXIgaXMgYmx1ZmZpbmcuIEl0IGlzIGV4dHJlbWVseSBoYXJkIHRvIHByb3Blcmx5IGJsdWZmLiBUaGVyZSBhcmUgZmV3IHBva2VyIHBsYXllcnMgb3V0IHRoZXJlIHRoYXQga25vdyB3aGVuIHRoZSByaWdodCB0aW1lIHRvIGJsdWZmIGlzLCBhbmQgdGhleSBjYW4gZG8gc28gd2l0aG91dCB0aGUgb3Bwb25lbnRzIGNhdGNoaW5nIG9uIHRvIHRoZW0uIApCdXQgSSBydW5uaW5nIExpbnV4LCBhbmQgdXNlIGEgZGlmZmVyZW50IERBVyAoSGFycmlzb24gTWl4YnVzKSwgc28gaXQgdmVyeSBkaWZmZXJlbnQgc2l0dWF0aW9uLiAKVGltZXMgYXJlIGdvb2QgaW4gV2luZHNvciByaWdodCBub3dBZG1pbmlzdHJhdG9ycyBzYXkgdGhleSBuZWVkICQ0MTYgbWlsbGlvbiBmcm9tIGNpdHkgdGF4cGF5ZXJzIHRoaXMgeWVhciwgY29tcGFyZWQgdG8gJDQwMy42IG1pbGxpb24gaW4gMjAxOC4gVGhhdCBleHRyYSAkMTIuNCBtaWxsaW9uIHdvdWxkIHRyYW5zbGF0ZSBpbnRvIGEgJDkwIGluY3JlYXNlIGZvciBzb21lb25lIHdobyBvd25zIGEgJDE1MCwwMDAgaG91c2UsIHNhaWQgVHJlYXN1cmVyIEpvZSBNYW5jaW5hLiBDaXR5IG9wZXJhdGlvbnMgd291bGQgZ2V0ICQ0NCBvZiB0aGF0IGV4dHJhIG1vbmV5LCBhbmQgdGhlIHJlbWFpbmluZyAkNDYgd291bGQgZ28gdG8gdGhlIGFnZW5jaWVzLCBib2FyZHMgYW5kIGNvbW1pdHRlZXMgdGhhdCByZWx5IG9uIGNpdHkgZnVuZGluZy4KSSBob3BlIHRoaXMgbGV0dGVyIGNhbiBoZWxwIHlvdSBvbiB5b3VyIGpvdXJuZXkuJycgTXIgUGFybWV0ZXIgdm9taXRlZCBhZnRlciB0aGUgY29uZnJvbnRhdGlvbi4gVGhpcyB3ZWVrIGhlIHNwb2tlIGFib3V0IHRoZSBwb3dlciB0aGUgcHJpZXN0IHJldGFpbmVkIG92ZXIgaGlzIGxpZmUsIGluIHBhcnQgYmVjYXVzZSBvZiB0aGUgQ2h1cmNoJ3Mgd2hpdGV3YXNoaW5nIG9mIEZhdGhlciBCcm9jaydzIGhpc3RvcnksIGFuZCB0aGUgZmFpbHVyZSBvZiBleGlzdGluZyBpbnN0aXR1dGlvbnMgdG8gc2VjdXJlIGp1c3RpY2UuIApXaGF0IGRvZXMgaXQgbWVhbiB3aGVuIDIgcGVvcGxlIGhhdmUgdGhlIHNhbWUgZHJlYW0gYWJvdXQgY2FuY2VyPwpCZWNhdXNlIHdlIHNlZW4gdGhpcyBraW5kIG9mIG5vbnNlbnNlIGJlZm9yZS4gVGhlIG1vbmV5IGZyb20gdGhlIGNoZWNrIGlzIHZpZXdlZCBhcyBzb21lIGtpbmQgb2Ygd2luZGZhbGwgZnJvbSB0aGUgdW5pdmVyc2UsIHVucmVsYXRlZCB0byBoZXIgYWN0aW9ucy4KWW91IHdhbnQgb25lIHRoYXQgaXMgYWxzbyBlYXN5IHRvIGNhcnJ5LiBBIGN1cnZlZCBzaG92ZWwgYmxhZGUgYW5kIGEgZ29vZCBmbGF0IHNwb3QgdG8gcHV0IHlvdXIgZm9vdC9mZWV0IG9uIHRvIHNob3ZlIGl0IGluIHRoZSBncm91bmQgd291bGQgYmUgd2lzZSBhcyB3ZWxsLiAKTWFueSBzdGF0ZXMgaXNzdWUgbGljZW5zZXMgdG8gbWFzc2FnZSB0aGVyYXBpc3RzLiBUaG9zZSB3aG8gYXBwbHkgZm9yIGxpY2Vuc3VyZSB3aWxsIGJlIGFza2VkIHRvIHByb3ZpZGUgcHJvb2Ygb2YgdHJhaW5pbmcgYW5kIG1heSwgaW4gc29tZSBjYXNlcywgYmUgcmVxdWlyZWQgdG8gcGFzcyBhIGxpY2Vuc2luZyBleGFtIGFzIHdlbGwgYXMgYSBjcmltaW5hbCBiYWNrZ3JvdW5kIGNoZWNrLiBUaXRsZXMgZm9yIHRob3NlIHdobyBob2xkIGEgbWFzc2FnZSB0aGVyYXB5IGxpY2Vuc2UgdmFyeSwgYnV0IExpY2Vuc2VkIE1hc3NhZ2UgVGhlcmFwaXN0IChMTVQpIGlzIGEgY29tbW9uIGRlc2lnbmF0aW9uLi4gCkkganVzdCBzdG9vZCB0aGVyZSB3aXRoIGEgY2hpcHBlciBzbWlsZSBvbiBteSBmYWNlLCBkaXJlY3RseSBuZXh0IHRvIE1ZIHR2IHRoYXQgdGhleSB3ZXJlIHdhdGNoaW5nIChoYXJkIHRvIGlnbm9yZSkgdW50aWwgdGhleSBhbGwgYmVjYW1lIHVuY29tZm9ydGFibGUgYW5kIHNrdWxrZWQgb3V0IG9mIHRoZSByb29tLiAKTWFrZSBzdXJlIHlvdSBwZWUgYSBjb3VwbGUgb2YgdGltZXMgYmVmb3JlIHlvdSBnbyB0byB0YWtlIHlvdXIgdGVzdC4gCkkgc2VlIG5vdGhpbmcgaGVyZSB0aGF0cyB0cnlpbmcgdG8gc3VjayB5b3VyIG1vbmV5LiAKTm90ZSB0aGF0IHlvdSBjYW4ndCBtYWtlIGEgc21hbGxlciBiZXQgdGhhbiB0aGUgYmlnIGJsaW5kLiBGdXJ0aGVybW9yZSwgYWxsIHJhaXNlcyBtdXN0IGJlIGRvbmUgaW4gaW5jcmVtZW50cyBvZiB0aGUgYmV0dGluZyBhbW91bnRzLgpHZXQgaGVhbHRoaWVyIGZvciB0aGVtIGZvciBlbW90aW9uYWwgYW5kIGZpbmFuY2lhbCByZWFzb25zIGZvciB0aGUgbG9uZyBoYXVsLiAKUGVyaGFwcyBiZXN0IG9mIGFsbCwgRHIuIExlaG1hbm4gZG9lcyBub3QgYmVsaWV2ZSB0aGF0IGhvdXJzIG9mIGRhaWx5IGV4ZXJjaXNlIGFyZSBuZWVkZWQgb3IgZGVzaXJhYmxlIHRvIGFjaGlldmUgZW1vdGlvbmFsIHJlc2lsaWVuY2UuClRoZSBhY3R1YWwgb3JpZ2luIG9mIHBva2VyIGlzIG5vdCBrbm93bi4gSW4gYW5vdGhlciBwYXJ0IG9mIHRoZSB3b3JsZCwgYXJjaGFlb2xvZ2lzdHMgcmVjb3ZlcmVkIGZyYWdtZW50cyBvZiBjYXJkbGlrZSBpdGVtcyBkYXRpbmcgdG8gdGhlIHR3ZWxmdGggb3IgdGhpcnRlZW50aCBjZW50dXJ5IGluIEVneXB0LiAKSGVhdCB0aGUgb2lsIGluIGEgbGFyZ2Ugc2F1dGUgcGFuIG92ZXIgbWVkaXVtIGhpZ2ggaGVhdCwgYWRkIHRoZSBvbmlvbnMgYW5kIGNvb2sgdW50aWwgc29mdCwgMyB0byA0IG1pbnV0ZXMuIEFkZCB0aGUgZ2FybGljIGFuZCByZWQgY2hpbGkgZmxha2VzIGFuZCBjb29rIGZvciAxIG1pbnV0ZS4gQWRkIHRoZSB0b21hdG9lcywgYnJpbmcgdG8gYm9pbCwgc2Vhc29uIHdpdGggc2FsdCBhbmQgcGVwcGVyIGFuZCBjb29rIHVudGlsIHRoZSBzYXVjZSBpcyByZWR1Y2VkIGFuZCB0aGlja2VuZWQsIGFib3V0IDI1IHRvIDMwIG1pbnV0ZXMuIApMb3JzcXVlIG5vcyBjb250ZW1wb3JhaW5zIGF1cm9udCByYWxpcyBxdSdlbiBkcGl0IGQndW5lIGxpYnJhdGlvbiBhcHBhcmVudGUgKGV4IGxlcyBHYXlzIFByaWRlIHBvdXIgY2l0ZXIgdW4gZXhlbXBsZSBleHRybWUpIGVuIHJhbGl0IHN1ciBsZSBwbGFuICJjdWwiIGMnZXN0IGxhICJjYXRhIiB0YW50IGN0IGZlbW1lIHF1ZSBjdCBtZWMuTCdhdXRpc21lIHNleHVlbCBnYWduZSBkdSB0ZXJyYWluSmUgY29ubmFpcyBiaWVuIGxlIGN0ICJob21vIiBwb3VyIGwnYXZvaXIgb2JzZXJ2IGRlcHVpcyBsYSBmaW4gZGVzIGFubmVzIDYwLCBsYSBwcm9ncmVzc2lvbiBkZSBsJ2F1dGlzbWUgZXQgZCd1bmUgdnJpdGFibGUgaW1wdWlzc2FuY2UgY2hleiBsZXMgamV1bmVzIGZhaXQgcGV1ci4gCkl0IGJyb2tlbiB1cCBzZWFzb24gYnkgc2Vhc29uIGludG8gbW9yZSBvciBsZXNzIHNlbGYgY29udGFpbmVkIGFyY3MsIHNvIHlvdSBjYW4gd2F0Y2ggYSBzZWFzb24gb3IgdHdvIGFuZCBjb21lIGJhY2sgbGF0ZXIgd2l0aG91dCBoYXZpbmcgbWlzc2VkIHRvbyBtdWNoLiAKVGhleSB0YWxrIGFib3V0IHdhbnRpbmcgdG8ga2lsbC9oYXJtIHZvdGVycy9wb2xpdGljaWFucyB0aGV5IGhhdGUuIFRoZXkgc2hhcmUgYSBzaW1pbGFybHkgaW50ZW5zZSBjeW5pY2lzbSBhcyB0aGV5IHRoaW5rIEJlcm5pZSBpcyBsaXRlcmFsbHkgb25seSBkb2luZyB3aGF0IGhlIGRvaW5nIGZvciBmYW1lIGFuZCBhIGxlZ2FjeS4gSXQgYml6YXJyZS4uIApJIHRoaW5rIHNoZSBzaG91bGQgYmUgaGVsZCBhY2NvdW50YWJsZSBmb3IgdGhlIHBvc3NpYmlsaXR5IHRoYXQgc2hlIGNvdWxkIGJlIHRyYWRpbmcgaW5zaWRlciBzZWNyZXRzIHRvIGFub3RoZXIgY291bnRyeS4gV2UgaW1wZWFjaGVkIFJpY2hhcmQgTml4b24gZm9yIGxlc3MgdGhhbiB3aGF0IEhpbGxhcnkgQ2xpbnRvbiBoYXMgZG9uZS4gCldpZmUgY29uc2lkZXJzIGhpbQpBbmQgdGhlbiBoZSAiZGllZC4iICJBY2NpZGVudGFsbHkuIiBBIGdlbmVyYXRpb24gYWZ0ZXIgRWR3YXJkJ3MgZGVhdGgsIGFuIEVuZ2xpc2ggaGlzdG9yaWFuIG5hbWVkIGNsYWltZWQgdGhlIGtpbmcgd2FzIGRlZmluaXRlbHkgbXVyZGVyZWQuIApJIHdhcyBhbiBlbnRyeSBsZXZlbCBTb2Z0d2FyZSBFbmdpbmVlciBhY2NvcmRpbmcgdG8gbXkgbGFib3IgY29kZSBidXQgc3RhcnRlZCBhdCAxNCBoci4gQWdhaW4gZXZlcnlib2R5IGlzIGdvaW5nIHRvIGdldCBhIGN1dCBiZWZvcmUgdGhlIHBlcnNvbiBkb2VzLiBNYW55IERvRCBjb250cmFjdGluZyBjb21wYW5pZXMgd2lsbCBjaGFyZ2UgdGhlIGdvdmVybm1lbnQgdXB3YXJkcyBvZiB0d2ljZSB3aGF0IHRoZXkgYXJlIHBheWluZyB0aGVpciBlbmdpbmVlcnMuIApUaGV5IGJlbGlldmUgaW4gcG93ZXIuIFdoaXRlIHBvd2VyLiBUaGV5IGJlbGlldmUgaW4gdGhlIHBhc3QuIApUaGV5IGJ1aWx0IGEgMjQgcG9pbnQgbGVhZCBlYXJseSwgd2F0Y2hlZCBpbiBob3Jyb3IgYXMgaXQgc2xpcHBlZCBhd2F5IGFuZCBoZWxkIHRoZWlyIGJyZWF0aCB3aGlsZSBIYWxpZmF4J3MgdG9wIHNjb3JlciBUZXJyeSBUaG9tYXMgaGFkIGFmcmVlIHRocm93IGluIHRoZSBkeWluZyBzZWNvbmRzIHRvIGZvcmNlIG92ZXJ0aW1lLgpJIGRvbmF0ZWQgdGhlIGFmdGVybm9vbiBhZnRlciBCZXJuaWUgYW5ub3VuY2VkIHdoaWxlIHdhdGNoaW5nIHRoYXQgQ0JTIGludGVydmlldy4uIApXaGlsZSBpdCBpcyB0cnVlIHRoYXQgUGF0cmljayBNb29yZSB3YXMgYSBtZW1iZXIgb2YgR3JlZW5wZWFjZSBpbiB0aGUgMTk3MHMsIGluIDE5ODYgaGUgYWJydXB0bHkgdHVybmVkIGhpcyBiYWNrIG9uIHRoZSB2ZXJ5IGlzc3VlcyBoZSBvbmNlIHBhc3Npb25hdGVseSBkZWZlbmRlZC4gCllldCwgdGhlIG1vdmllIHJlbWFpbnMgYXMgdmlyZ2luYWwgYXMgQmVsbGEuIApMZXNzIHBpbmsgdGhhbiB0aGUgcGFzdHkgd2hpdGUgZm9sayBvZiB0aGUgQnJpdGlzaCBJc2xlcywgbGVzcyBoZWFsdGh5IGxvb2tpbmcgdGhhbiB0aGUgU2NhbmRpbmF2aWFucy4gCkF0IG1pZGRheSBhdCB1bmlvbiBoZWFkcXVhcnRlcnMsIGFnZW50cyByZW1vdmVkIGF0IGxlYXN0IGEgaHVuZHJlZCBib3hlcyBvZiBwYXBlcndvcmssIGFsb25nIHdpdGggc2V2ZXJhbCBjb21wdXRlciBoYXJkIGRyaXZlcywgbG9hZGluZyB0aGVtIGludG8gYSB5ZWxsb3cgUGVuc2tlIHRydWNrLiBIZSBob2xkcyBhbiB1bnRpdGxlZCBwb3NpdGlvbiB3aXRoIExvY2FsIDk4IG9mIHRoZSBJbnRlcm5hdGlvbmFsIEJyb3RoZXJob29kIG9mIEVsZWN0cmljYWwgV29ya2VycyBpbiB3aGljaCBoZSByZXBvcnRzIGRpcmVjdGx5IHRvIERvdWdoZXJ0eS4KQnV0IHlvdS4gWW91IHNvbWVvbmUgSSBsb3ZlIHRvIGhhdmUgYSBjb252ZXJzYXRpb24gd2l0aCBhbmQgbGVhcm4gbW9yZSBhYm91dCByZXNwb25zaWJsZSBndW4gb3duZXJzaGlwIHdpdGgsIGV2ZW4gaWYgd2UgZm91bmQgb3V0IHdlIGRpZG4gYWdyZWUgYXQgYWxsLiBJIHdhbnQgeW91IG9yIHNvbWVvbmUgbGlrZSB5b3UgZmlndXJpbmcgb3V0IGlmIHdlIG5lZWQgdG8gY2hhbmdlIG9yIHdoYXQgY2hhbmdlcyB3ZSBuZWVkLiAKVGhleSBjYW4gaGFyZGx5IGJlIGFzc3VhZ2VkIGZyb20gdGhlaXIgdmFsdWUgaW4gbWFzY3VsaW5pdHksIGFuZCBpbmNvcnBvcmF0aW5nIHRoaXMgdmFsdWUgaXMgY291bnRlcnByb2R1Y3RpdmUgdG8gbGVmdGlzdCBnb2Fscy4uIApTbyBjb3VudCB3aGF0IHlvdSBoYXZlIGluIHlvdXIgaGFuZCBhbmQgd2hhdCBiZWVuIHBsYXllZCwgYW5kIHlvdSBrbm93IGhvdyBtYW55IG9mIGVhY2ggbnVtYmVyIGlzIGluIG9wcG9uZW50IGhhbmQgYW5kIGJvbmUgcGlsZSwgbWFraW5nIGl0IGVhc2llciB0byBndWVzcyBpZiBoZSBoYXMgaXQgb3Igbm90LnJpdmVqdSAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnb1NvIGlmIHlvdSBnbyB0byBCcmFuZHl3aW5lIGRyb3AsIG5lYXIgd2hlcmUgdGhlIGxlZ2VuZGFyeSBzcGF3bnMsIHRoZXJlcyBhIHdheSB0byBnZXQgb25lIHRvIHNwYXduIG5lYXJseSBldmVyeSB0aW1lLiBHbyByaWdodCB1cCB0byB0aGUgdG9wIG9mIHRoZSB3YXRlcmZhbGwgb24gdGhlIHdlc3Qgc2lkZSBvZiB0aGUgcml2ZXIgYW5kIGxvb2sgYmVsb3cgdG8gYSBsaXR0bGUgY2xlYXJpbmcgb24gdGhlIGVhc3Rlcm4gc2lkZSBvZiB0aGUgcml2ZXIuIFNsb3dseSByb3RhdGUgdGhlIGNhbWVyYSBhcm91bmQgMzYwIGRlZ3Jlc3Mgc28geW91IGNhbnQgc2VlIHRoZSBjbGVhcmluZyBhbmQgdGhlbiBjYW4gc2VlIGl0IGFnYWluLiAKVGhpcyBpcyBub3Qgc28uIApXaGVuIE1hcnkgd2FzIHN0aWxsIHlvdW5nLCB0aGUgR292ZXJubWVudCBwdXJjaGFzZWQgdGhlaXIgcHJvcGVydHkgZm9yIHRoZSBleHBhbnNpb24gb2YgQ2FtcCBEcnVtIHdoaWNoIGlzIG5vdyBGb3J0IERydW0uIFRoZSBmYW1pbHkgdGhlbiBtb3ZlZCB0byBPeGJvdyB3aGVyZSB0aGV5IHB1cmNoYXNlZCBhbm90aGVyIGxhcmdlIGRhaXJ5IGZhcm0gd2hpY2ggd2FzIG1hbmFnZWQgYnkgdGhlIGZhbWlseS4uIApTbyBmb3IgbXkgbm93IHdpZmUgMjFzdCBiZGF5IEkgYm91Z2h0IGhlciBhIDkwIG1pbiBtYXNzYWdlLiBTaGUgYSByYXRoZXIgYXR0cmFjdGl2ZSBnaXJsLiBFc3BlY2lhbGx5IGF0IHRoYXQgYWdlLiBTbyB0aGlzIGlzIGhlciBmaXJzdCBtYXNzYWdlLiBTaGUgaGFzIG5vIGlkZWEgYWJvdXQgZXRpcXVldHRlIG9yIHdoYXQgeW91IGRvIHRoZXJlLiBTaGUgd2FzIGFsc28gc3RpbGwgcmF0aGVyIGlubm9jZW50IGFuZCBvYmxpdmlvdXMgYXQgdGhhdCBhZ2UuIApXaGlsZSB0aGUgY29tcGFueSBzdGlsbCBoYXMgYSB3YXkgdG8gZ28gaW4gb3JkZXIgdG8gZ2FpbiB0aGUga2luZCBvZiBtYXJrZXQgc2hhcmUgdGhhdCBHb29nbGUgYW5kIEZhY2Vib29rIGhhdmUsIEFtYXpvbiBpcyBwb2lzZWQgdG8gdGFrZSB0aGUgTm8uIApLZWJhYmlzaCAgODYgcG9pbnRzICBzdWJtaXR0ZWQgOCBkYXlzIGFnbwoiSWYgb3BlcmF0b3JzIG9wZW4gYW5kIGNsb3NlIHRoZSBtYWNoaW5lcyBhbiBob3VyIGxhdGVyIG9yIGVhcmxpZXIgdGhlbiB0aGF0IGlzIGEgbGl0dGxlIHRoaW5nIHRoZXkgY2FuIGRvIHRvIGhlbHAgcGVvcGxlIHdobyBuZWVkIGhlbHAuIApXZSBtZWFuIG9ubHkgdG9waWNzIGFza2luZyBmb3IgYW4gYW5zd2VyIHRoYXQgd2lsbCBhaWQgc29tZW9uZSBpbiBjb21taXR0aW5nIHN1aWNpZGUgb3IgaGFybWluZyBvdGhlcnMuIFRoZXNlIHF1ZXN0aW9ucyBhcmUgbm90IGFsbG93ZWQuIEFuc3dlcmluZyBhIHF1ZXN0aW9uIHdpdGggYSByZWFsIGFuc3dlciBvbiBob3cgdG8gYWNjb21wbGlzaCBzZWxmIGhhcm0gb3IgaGFybSBvZiBvdGhlcnMgT1IgdGVsbGluZyB0aGUgT1AgdG8gZG8gaXQgd2lsbCByZXN1bHQgaW4gYSBwZXJtYW5lbnQgYmFuLiAKNCBsZXNzb25zIGZyb20gRmFybVZpbGxlcyBDRU8KUmVsZWFzZSBlbmdpbmVlcmluZyBpcyBjbG9zZXIgdG8gZGV2ZWxvcG1lbnQgdGhhbiBzdGFuZGFyZCBJVC4gUG93ZXJzaGVsbCBtaWdodCBiZSBoZWxwZnVsIGlmIHRoZXkncmUgb24gd2luZG93cyBwbGF0Zm9ybS4gR2VuZXJhbGx5IGl0IGludm9sdmVzIG1hbmFnaW5nIGNvbnRpbnVvdXMgZGVsaXZlcnkgcGlwZWxpbmVzLCB1c2luZyBidWlsZCBmcmFtZXdvcmtzLCBzb3VyY2UgY29udHJvbCB0b29scyBsaWtlIGdpdCBvciBwZXJmb3JjZSwgY3JlYXRpbmcgY3VzdG9tIHRvb2xzIGFuZCBzY3JpcHRzIGFuZCBwb3NzaWJseSBtYW5hZ2luZyBpbmZyYXN0cnVjdHVyZS4gSSBhbSBhIHJlbGVhc2UgZW5naW5lZXIgYW5kIHdvcmsgcmVhbGx5IGNsb3NlbHkgd2l0aCB0aGUgZGV2ZWxvcGVycy4gV2UgaGF2ZSBhIHNlcGFyYXRlIElUIHRlYW0gdGhhdCB3ZSBpbnRlcmFjdCB3aXRoIGxlc3MgZnJlcXVlbnRseSBidXQuCkx0c2FzIHNvbSBvbSBkdSB2ZXQgbmdvdCBvY2ggZ2UgaG9ub20gMjQgdGltbWFyIGF0dCBrb21tYSByZW4gZWxsZXIgYW5uYXQuIApUaGVyZSB3ZXJlIDIwMDMgKDMwLjElKSBkZWF0aHMgZHVyaW5nIGEgbWVkaWFuIGZvbGxvdyB1cCBvZiA2IHllYXJzLiBDb21wYXJlZCB3aXRoIHBhcnRpY2lwYW50cyB3aG8gc2F0Ckplc3NpY2EgQnVobGVyIGlzIGFuIE9uaWRhIG5hdGl2ZSBhbmQgYXR0ZW5kZWQgU3VsbHkgQnV0dGVzIFNjaG9vbHMuIApUaGV5IGV2ZW4gaGFkIGEgc2VjcmV0YXJ5LCBhIGZpbmFuY2Ugb2ZmaWNlciBhbmQgaGFkIGFubnVhbCBnZW5lcmFsIG1lZXRpbmdzIGV0Yy4gICB0aGV5IGFsc28gbWV0IGluIGEgaG90ZWwgY29uZmVyZW5jZSByb29tLCBzbyB3ZSBoYWQgYSBiYXIgYW5kIHN0b3JhZ2UgZmFjaWxpdGllcy4gVGhhdCBjbHViIHdhcyBhbHNvIHZlcnkgc29jaWFsLiAKU28gZW1wbG95ZXJzIHdpbGwgaGF2ZSB0byByYWlzZSB0aGUgcHJpY2Ugb2YgZm9vZCBhZ2FpbiBzbyB0aGV5IGNhbiBwYXkgJDIgJDMvaG91ciBtb3JlIHRoZW4gbWluaW11bSB3YWdlIHRvIG1ha2UgdGhlIGpvYiBtb3JlIGFwcGVhbGluZy4uIAoiRXNwZWNpYWxseSBhbGwgbXkgZmFtaWx5IG1lbWJlcnMgY29taW5nIG91dCBvZiB0aGUgd29vZHdvcmssIHNheWluZyBldmVyeWJvZHkgbm90IGFibGUgYW5kIHRoaXMgYW5kIHRoaXMsIHRoZXkgbmVlZCB0aGlzIGFuZCB0aGV5IG5lZWQgdGhhdC4gT2gsIHRoZXkncmUgYmVoaW5kIG9uIHRoZXNlIGJpbGxzLCBhbmQgdGhleSBuZWVkIGhlbHAuIFNvIG9mIGNvdXJzZSwgSSd2ZSBnb3QgdG8ga2VlcCBnb2luZy4iCklzIENyZWRlbmNlIER1bWJsZWRvcmUncyBicm90aGVyPyBDb3JyZWN0IG1lIGlmIEknbSB3cm9uZyBidXQgSSB0aG91Z2h0IGhlIGp1c3Qgc2FpZCAieW91ciBvd24gZmxlc2ggYW5kIGJsb29kIGlzIHRyeWluZyB0byBraWxsIHlvdSIuIENvdWxkIGhlIGJlIGEgTmVwaGV3LCBtYXliZSBBYmVyZm9ydGggaGFkIGEgc29uIGFuZCBpdCB3YXNuJ3QganVzdCBBcmlhbmEncyBkZWF0aCB0aGF0IG1hZGUgdGhlbSBzbyBkaXN0YW50IGluIHRoZSBIUCBzZXJpZXMuIApJIG9ubHkgY3V0IG15c2VsZiB3aGVuIEkgcHV0IHRvbyBtdWNoIHByZXNzdXJlLCBvciB3aGVuIEkgdmVyeSBjYXJlbGVzcyBhcm91bmQgZGlmZmljdWx0IHNwb3RzLiBJIHVzdWFsbHkgZG8gZ2V0IG9uZSBvciB0d28gY3V0cywgYnV0IHRoYXQgb3ZlciB0aGUgYXJlYSBvZiB0d28gbGVncyAoYW5kIHNvbWV0aW1lcyBtb3JlKSwgYW5kIEkgbm90IHBhcnRpY3VsYXJseSBjYXJlZnVsIGFib3V0IGl0IGVpdGhlciAgIHNvIEkgdGhpbmsgYXMgbG9uZyBhcyB5b3UgY2FyZWZ1bCBpdCBiZSBmaW5lLiBJIHdvdWxkIHN1Z2dlc3QgeW91IGdldCBhbiBhbHVtIHN0aWNrIGFzIHdlbGwsIHRoaXMgaGVscHMgYWdhaW5zdCByYXpvciBidXJuIGFuZCBjbG9zZXMgc21hbGwgY3V0cy4KU2FtYW50aGEgRmlzaCwgQ2Fyb2xpbmUgV29uZGVybGFuZCwgWlogVG9wLCBQaW5rIEZsb3lkLCBhbmQgV2VpcmQgQWwuCldpciBoYWJlbiB1bnNlcmUgUmVjaHRlIHZvciBhbGxlbSBkdXJjaCBkaWUgR2xlaWNoc3RlbGx1bmcgYW4gZGVyIFdhaGx1cm5lIGJla29tbWVuICh3ZXN3ZWdlbiBQb2xpdGlrZXIgdW5zIG5pY2h0IGVpbmZhY2ggaWdub3JpZXJlbiBrbm5lbiksIGRhZHVyY2gsIGRhc3Mgd2lyIGltIFdpcnRzY2hhZnRzbGViZW4gbWVociBFaW5mbHVzcyAoaW0gVmVyZ2xlaWNoIHp1IGZyaGVyKSBoYWJlbiB1bmQgZGFkdXJjaCwgZGFzcyB3aXIgbWVociB1bmQgbWVociBBbGxpaWVydGUgYXVmIE1ubmVyc2VpdGUgYXJndW1lbnRhdGl2IHZvbiBmZW1pbmlzdGlzY2hlbiBQb3NpdGlvbmVuIGJlcnpldWd0IGhhYmVuICh1bnRlciBhbmRlcmVtIG5hdHJsaWNoIGF1Y2ggZGVzd2VnZW4sIHdlaWwgZGllc2UgYXVjaCBmciB2aWVsZSBNbm5lciBiZXNzZXIgc2luZCBhbHMgZGFzIGdlZ2Vud3J0aWdlIE1vZGVsbCBkZXIgaGVnZW1vbmlhbGVuIE1ubmxpY2hrZWl0KS4KQmVubnksIG9uIHRoZSBvdGhlciBoYW5kLCBrZXB0IGhpcyBleWVzIG9uIGhpcyBjYXJkcy4gCkVsIFNheWVkICwgYW5kIEFtYWwgS2FkZG91bWkgRGVwYXJ0bWVudCBvZiBCYXNpYyBQaGFybWFjZXV0aWNhbCBTY2llbmNlLCBDb2xsZWdlIG9mIFBoYXJtYWN5LCBVbml2ZXJzaXR5IG9mIExvdWlzaWFuYSBhdCBNb25yb2UsIDE4MDAgQmllbnZpbGxlIERyaXZlLCBNb25yb2UsIExvdWlzaWFuYSA3MTIwMSwgVW5pdGVkIFN0YXRlc09sZW9jYW50aGFsLCBhIHBoZW5vbGljIGNvbXBvbmVudCBvZiBleHRyYSB2aXJnaW4gb2xpdmUgb2lsLCBoYXMgYmVlbiByZWNlbnRseSBsaW5rZWQgdG8gcmVkdWNlZCByaXNrIG9mIEFsemhlaW1lcidzIGRpc2Vhc2UgKEFEKSwgYSBuZXVyb2RlZ2VuZXJhdGl2ZSBkaXNlYXNlIHRoYXQgaXMgY2hhcmFjdGVyaXplZCBieSBhY2N1bXVsYXRpb24gb2YgIGFteWxvaWQgKEEpIGFuZCB0YXUgcHJvdGVpbnMgaW4gdGhlIGJyYWluLkhvd2V2ZXIsIHRoZSBtZWNoYW5pc20gYnkgd2hpY2ggb2xlb2NhbnRoYWwgZXhlcnRzIGl0cyBuZXVyb3Byb3RlY3RpdmUgZWZmZWN0IGlzIHN0aWxsIGluY29tcGxldGVseSB1bmRlcnN0b29kLkhlcmUsIHdlIHByb3ZpZGUgaW4gdml0cm8gYW5kIGluIHZpdm8gZXZpZGVuY2UgZm9yIHRoZSBwb3RlbnRpYWwgb2Ygb2xlb2NhbnRoYWwgdG8gZW5oYW5jZSBBIGNsZWFyYW5jZSBmcm9tIHRoZSBicmFpbiB2aWEgdXAgcmVndWxhdGlvbiBvZiBQIGdseWNvcHJvdGVpbiAoUCBncCkgYW5kIExETCBsaXBvcHJvdGVpbiByZWNlcHRvciByZWxhdGVkIHByb3RlaW4gMSAoTFJQMSksIG1ham9yIEEgdHJhbnNwb3J0IHByb3RlaW5zLCBhdCB0aGUgYmxvb2QgYnJhaW4gYmFycmllciAoQkJCKS4gUmVzdWx0cyBmcm9tIGluIHZpdHJvIGFuZCBpbiB2aXZvIHN0dWRpZXMgZGVtb25zdHJhdGVkIHNpbWlsYXIgYW5kIGNvbnNpc3RlbnQgcGF0dGVybiBvZiBvbGVvY2FudGhhbCBpbiBjb250cm9sbGluZyBBIGxldmVscy5JbiBjdWx0dXJlZCBtaWNlIGJyYWluIGVuZG90aGVsaWFsIGNlbGxzLCBvbGVvY2FudGhhbCB0cmVhdG1lbnQgaW5jcmVhc2VkIFAgZ3AgYW5kIExSUDEgZXhwcmVzc2lvbiBhbmQgYWN0aXZpdHkuQnJhaW4gZWZmbHV4IGluZGV4IChCRUklKSBzdHVkaWVzIG9mMTI1SSBBNDBzaG93ZWQgdGhhdCBhZG1pbmlzdHJhdGlvbiBvZiBvbGVvY2FudGhhbCBleHRyYWN0ZWQgZnJvbSBleHRyYSB2aXJnaW4gb2xpdmUgb2lsIHRvIEM1N0JMLzYgd2lsZCB0eXBlIG1pY2UgZW5oYW5jZWQxMjVJIEE0MGNsZWFyYW5jZSBmcm9tIHRoZSBicmFpbiBhbmQgaW5jcmVhc2VkIHRoZSBCRUklIGZyb20gNjIuMCAgMy4wJSBmb3IgY29udHJvbCBtaWNlIHRvIDc5LjkgIDEuNiUgZm9yIG9sZW9jYW50aGFsIHRyZWF0ZWQgbWljZS5JbmNyZWFzZWQgUCBncCBhbmQgTFJQMSBleHByZXNzaW9uIGluIHRoZSBicmFpbiBtaWNyb3Zlc3NlbHMgYW5kIGluaGliaXRpb24gc3R1ZGllcyBjb25maXJtZWQgdGhlIHJvbGUgb2YgdXAgcmVndWxhdGlvbiBvZiB0aGVzZSBwcm90ZWlucyBpbiBlbmhhbmNpbmcxMjVJIEE0MGNsZWFyYW5jZSBhZnRlciBvbGVvY2FudGhhbCB0cmVhdG1lbnQuRnVydGhlcm1vcmUsIG91ciByZXN1bHRzIGRlbW9uc3RyYXRlZCBzaWduaWZpY2FudCBpbmNyZWFzZSBpbjEyNUkgQTQwZGVncmFkYXRpb24gYXMgYSByZXN1bHQgb2YgdGhlIHVwIHJlZ3VsYXRpb24gb2YgQSBkZWdyYWRpbmcgZW56eW1lcyBmb2xsb3dpbmcgb2xlb2NhbnRoYWwgdHJlYXRtZW50LkluIGNvbmNsdXNpb24sIHRoZXNlIGZpbmRpbmdzIHByb3ZpZGUgZXhwZXJpbWVudGFsIHN1cHBvcnQgdGhhdCBwb3RlbnRpYWwgcmVkdWNlZCByaXNrIG9mIEFEIGFzc29jaWF0ZWQgd2l0aCBleHRyYSB2aXJnaW4gb2xpdmUgb2lsIGNvdWxkIGJlIG1lZGlhdGVkIGJ5IGVuaGFuY2VtZW50IG9mIEEgY2xlYXJhbmNlIGZyb20gdGhlIGJyYWluLkN1cnIgUGhhcm0gRGVzLiAKQnV0IHRoZXJlJ3Mgbm8gcmVhc29uIHRvIGRlc2lnbiBhbmQgcGljayBjb2xvcnMgdXNpbmcgdGhlIHJnYiBzcGVjdHJ1bSBpZiB5b3VyIGZpbmFsIGludGVudCBpcyBwcmludCEgTGlrZSB6ZXJvIHJlYXNvbiBhdCBhbGwuIApBZ3JlZSBpdCBhIGNob2ljZSBpZiB5b3Ugd2F0Y2ggaGlzIHN0cmVhbS4gRm9yIHJlZmVyZW5jZSwgSSBkb24gd2FudCBhbnkgdHdpdGNoIHBva2VyLCBidXQgd2lsbCB3YXRjaCBjbGlwcyBvbiAvci9wb2tlciB0byBzZWUgd2hhdCBhIHRocmVhZCBpcyBhYm91dC4gCkFuZCBvZiBjb3Vyc2Ugc2hlIHBvc3RzIG9uIEluY2VsVGVhcnMsIGJlY2F1c2Ugd2h5IHdvdWxkbiB0aGlzIFNKVyBwYXJ0aWNpcGF0ZSBpbiBhIHN1YnJlZGRpdCBtb2NraW5nIG1hcmdpbmFsaXplZCBtZW4/IEFsb25nIHdpdGgsIHllcCwgL3IvVGhlUmlnaHRDYW50TWVtZS8uIApDb25zaWRlcjogRHVyaW5nIGEgZ2FtZSBvZiBUZXhhcyBIb2xkIGEgcGxheWVyIGhhcyBhbiBvcGVuaW5nIGhhbmQgb2YgdHdvIGFjZXMsIHRoZSBiZXN0IHBvc3NpYmxlIHN0YXJ0aW5nIGhhbmQuIEFub3RoZXIgcGxheWVyIGF0IHRoZSBzYW1lIHRhYmxlIGdldHMgdGhlIHNlY29uZCBtb3N0IHBvd2VyZnVsIHN0YXJ0aW5nIGhhbmQsIGEgcGFpciBvZiBraW5ncy4gVGhlIHR3byBwbGF5ZXJzLCBpbiB0aGUgZmlyc3Qgcm91bmQgb2YgYmV0dGluZywgZ2V0IGFsbCB0aGVpciBjaGlwcyBpbiB0aGUgbWlkZGxlIG9mIHRoZSBwb3QgYW5kIGFyZSBub3cgYm90aCBpbiwgYmVmb3JlIHRoZSByZW1haW5pbmcgY2FyZHMgYXJlIGRlYWx0LiAKTWFzdGVyQ29va1N3YWcgIDMyIHBvaW50cyAgc3VibWl0dGVkIDEyIGRheXMgYWdvClRoZWlyIG5ldCB3b3J0aCBpcyB0aHVzICQyLjkgbWlsbGlvbi4gQnV0IHRoZWlyIGluY29tZXMgYXJlIG1vZGVzdCBhbmQgdGhleSBmYWNlIGEgcmV0aXJlbWVudCB0aGF0LCB0aGV5IGZlYXIsIHdpbGwgYmUgcGluY2hlZC4gCldlIGFsd2F5cyBoYWQgZ29vZCBzdXBwb3J0IGFuZCBjbG9zZSBmYW1pbHksIHNvIG15IHNvbiBuZXZlciBmZWx0IGxpa2UgaGUgd2FzIG1pc3Npbmcgb3V0LiAKVGhlIEdhbWUgaW4gYSBOdXRzaGVsbFRoZSBnb2FsIG9mIFRleGFzIEhvbGRlbSBpcyB0byBnZXQgdGhlIHN0cm9uZ2VzdCBmaXZlIGNhcmQgaGFuZCBvZiB0aGUgdGFibGUgKG9yIG1ha2UgZXZlcnlib2R5IGJlbGlldmUgeW91IGhhdmUgdGhhdCBoYW5kKS4gClByYWlzZSB0aGUgTE9SRCB0aGF0IHRoZSBwcm9waGV0aWMgcmV2ZWxhdGlvbiBvZiAxMSAxMSAxMiBjYW1lIHRvIHBhc3MuIAoxMCBoZWFsdGh5IG1hbGUgc3ViamVjdHMgcGFydGljaXBhdGVkIGluIHRoZSBzdHVkeS4gCkkgbm90IGEgZmluYW5jaWFsIHdpemFyZCwgYnV0IEkgYSBiaXQgc2tlcHRpY2FsIGFib3V0IHRoZWlyCkxlcyB0ZXh0ZXMgc29udCBzaWduc0FsZnJlZCBBbGV4YW5kcmUsIEVkZW0gQXd1bWV5LCBKdWxpZW4gRGVsbWFpcmUsRnJhbmtpdG8sIEp1bGllbiBNYWJpYWxhIEJpc3NpbGEsIEplYW4gTWFyYyBSb3NpZXIsIEluc2EgU2FuLCBGZWx3aW5lIFNhcnIsIFN1bmphdGEgZXRHZW9yZ2VzIFlteS4KSGFkIHNleCkuIApPZGlvdXMsIGJlY2F1c2UgcmV3YXJkaW5nIGEgbWluZHNldCB0aGF0IGNvbnNpZGVycyB3b21lbiBhcyBjYXR0bGUgdG8gYmUgYm91Z2h0LCBzb2xkLCB0cmFkZWQgb3Igc2xhdWdodGVyZWQgaXMgbm90aGluZyBidXQgbmFzdHkuIApQcm9iYWJseSB0aGUgYmVzdCB3YXkgdG8gc3BlZWQgaXQgdXAgaXMgYmV0dGVyIGZhbWlsaWFyaXR5IHdpdGggYWxsIHRoZSBjYXJkcyBhbmQgY29yZSBzdHJhdGVnaWVzLiAKRGFwcGxlZ3JheSAgNCBwb2ludHMgIHN1Ym1pdHRlZCAxMSBtb250aHMgYWdvClRoZSBseXJpY3MgbWF5IGhhdmUgYmVlbiB3cml0dGVuIHdpdGggZGlmZmVyZW50IGludGVudGlvbnMgYXQgZmlyc3QgYnV0IEkgZG8gZmVlbCB0aGV5IGhhdmUgZXZvbHZlZCB0byBhcHBseSB0byBldmVyeW9uZSwgY2hyaXN0aWFuIG9yIG5vdC4gCklmIEkgd2FudCBhIGZvb3RwcmludCBpbiBteSB2ZXNpdGJ1bGUgb3Igd2FudCB0byBwcm90ZWN0IHRoZSB0ZW50IGZsb29yIGEgcGllY2Ugb2YgdHl2ZWsgb3IgcG9seWNybyBkb2VzIHRoZSBqb2IgYW5kIGlzIG11Y2ggbGlnaHRlciBhbmQgZWFzaWVyIHRvIHBhY2suLiAKTGlrZSBwdXQgaXQgaW4gZ29vZ2xlIG1hcHMgYW5kIGl0J2xsIHRlbGwgeW91LiAKSWYgeW91IHRoZSBwYXJlbnQgb2YgYSB0d2VlbiwgYmUgd2FybmVkOiB5b3VyIGNhdXRpb3VzIDEwIHllYXIgb2xkIGlzIGJvdW5kIHRvIHR1cm4gaW50byBhIHdpbGQgY2hpbGQgaW4gYSBmZXcgc2hvcnQgeWVhcnMsIHdpdGggc2VlbWluZ2x5IG5vIHJlZ2FyZCB3aGF0c29ldmVyIGZvciBzYWZldHkuIEluZGVlZCwgdGVlbmFnZXJzIGhhdmUgdGhlIGRvdWJsZSB0aGUgcmlzayBvZiBkeWluZyBjb21wYXJlZCB0byB0aGVpciBwcmV0ZWVuIHNlbHZlcy4KSSBkb24gbmVlZCB0byAic3VjayBpbiBvciBmbGF0dGVuIiBteSBuYXR1cmFsIGN1cnZlLi4gClRoaXMgaGFuZCB0aG91Z2ggd2FzIGp1c3Qgc29tZSBmdW4gYXQgdGhlIGVuZCBvZiB0aGUgbmlnaHQuIApbVmlzaWJsZSB0ZXh0XSgvcyAiSGlkZGVuIHRleHQiKSB3aWxsIGxvb2sgbGlrZTpTb21ldGltZXMgdGhlIHNtYXJ0ZXN0IHBlb3BsZSBjYW4gYmUgdGhlIGJpZ2dlc3QgaWRpb3RzLiBUYWtlIEJlbiBDYXJzb24uIFdvcmxkIHJlbm93bmVkIGJyYWluIHN1cmdlb24uIElmIHRoZXJlIGlzIGEgZHVkZSB5b3Ugd2FudCBvcGVyYXRpbmcgb24geW91ciBicmFpbiwgaXRzIHByb2JhYmx5IGhpbS4gQnV0IHRha2UgYSBsb29rIGF0IHRoZSBSZXB1YmxpY2FuIHByaW1hcmllcy4gQ29tcGxldGUgaWRpb3QuIElmIHlvdSBkb24gc3RheSBpbiB5b3VyIGxhbmUsIHlvdSBsaWtlbHkgdG8gbG9vayBhbmQgc291bmQgc3R1cGlkLiBXaGljaCBieSB0aGUgd2F5LiBIZSB0aGUgaGVhZCBvZiB0aGUgdXJiYW4gYW5kIHdoYXRldmVyIGRlcGFydG1lbnQuIFdlIGhhdmUgYSBkZXBhcnRtZW50IG9mIGhlYWx0aCBhbmQgaHVtYW4gc2VydmljZXMuIFdlIGhhdmUgYSBsYXd5ZXIgaW4gY2hhcmdlIG9mIHRoYXQuIEFuZCBhIGRvY3RvciBpbiBjaGFyZ2Ugb2YgaG91c2luZyBhbmQgdXJiYW4gZGV2ZWxvcG1lbnQuIEkgZG9uIHVuZGVyc3RhbmQgcG9saXRpY3MsIG1hbi4gSSBqdXN0IHdlbnQgYWxvbmcgd2l0aCB0aGUgb3JkZXJzIGFuZCBob3BlZCB0aGF0IGV2ZXJ5dGhpbmcgd291bGQgd29yayBvdXQgZm9yIG1lLCBidXQgYWZ0ZXIgYWxsIHRoYXQgaGFwcGVuZWQ7IHlvdSBrbm93IHdoYXQgSSBsZWFybmVkPyBJdCBub3QgYWJvdXQgaGF0aW5nIHRoZSBndXkgb24gdGhlIG90aGVyIHNpZGUgYmVjYXVzZSBzb21lb25lIHRvbGQgeW91IHRvLCBJIG1lYW4sIHlvdSBzaG91bGQgaGF0ZSBzb21lb25lIGJlY2F1c2UgdGhleSBhbiBhc3Nob2xlLCBvciBhIHBlcnZlcnQsIG9yIHNub2IsIG9yIHRoZXkgbGF6eSwgb3IgYXJyb2dhbnQgb3IgYW4gaWRpb3Qgb3IgYSBrbm93IGl0IGFsbCwgdGhvc2UgYXJlIHJlYXNvbnMgdG8gZGlzbGlrZSBzb21lYm9keSwgeW91IGRvbiBoYXRlIGEgcGVyc29uIGJlY2F1c2Ugc29tZW9uZSB0b2xkIHlvdSB0bywgeW91IGhhdmUgdG8gbGVhcm4gdG8gZGVzcGlzZSBwZW9wbGUgb24gYSBwZXJzb25hbCBsZXZlbCwgbm90IGJlY2F1c2UgdGhleSByZWQsIG9yIGJlY2F1c2UgdGhleSBibHVlLCBidXQgYmVjYXVzZSB5b3Uga25vdyB0aGVtOyBhbmQgeW91IHNlZSB0aGVtIGV2ZXJ5IHNpbmdsZSBkYXkgYW5kIHlvdSBjYW4gc3RhbmQgdGhlbSBiZWNhdXNlIHRoZXkgYSBjb21wbGV0ZSBhbmQgdG90YWwgZnVja2luZyBkb3VjaGUgYmFnLgpIZSB3YXMgaW4gdGhlIGNvdXJ0IG1ham9yaXR5IGluIHRoZSAyMDAwIEJ1c2ggdi4gR29yZSBkZWNpc2lvbiwgd2hpY2ggZWZmZWN0aXZlbHkgZGVjaWRlZCB0aGUgcHJlc2lkZW50aWFsIGVsZWN0aW9uIGZvciBSZXB1YmxpY2FuIEdlb3JnZSBXLiBCdXNoLiBvdmVyIGl0LCBTY2FsaWEgd291bGQgZmFtb3VzbHkgc2F5IGF0IHNwZWFraW5nIGVuZ2FnZW1lbnRzIGluIHRoZSBlbnN1aW5nIHllYXJzIHdoZW5ldmVyIHRoZSB0b3BpYyBhcm9zZS4KQW5kIHlldCB0aGVyZSBpcyBhIHN1Y2ggYSByZXNpc3RhbmNlIHRvIG5ldyBkZXZlbG9wbWVudC4gSSBmYWlsIHRvIHVuZGVyc3RhbmQgd2h5IHRoZSBuZXcgaG90ZWxzIGRvd250b3duIGFyZSBiZWluZyBtYWRlIHdpdGggbGl0dGxlIG9wcG9zaXRpb24sIGJ1dCBvbmNlIG5ldyBob3VzaW5nIGdldHMgcHJvcG9zZWQgdGhlIGNyaXRpY3MgY29tZSBvdXQuIApTcXVhdDogY2xlYW4gd2Fsa291dC4gVGhlIG1pbnV0ZSB5b3Ugc2NyZXcgeW91ciBmZWV0IGludG8gdGhlIGdyb3VuZCBhbmQgbG9jayB5b3VyIGtuZWVzIGdpdmUgeW91cnNlbGYgYSBzcXVhdCBjb21tYW5kIGluIHlvdXIgaGVhZCBhbmQgb25jZSB5b3UgZmluaXNoIHBhdXNlIGF0IHRoZSB0b3AsIHNheSAicmFjayIgYW5kIG9ubHkgd2FsayBiYWNrIGluIGFmdGVyIHlvdSBmaW5pc2ggdGhlIHNheWluZyB0aGUgd2hvbGUgY29tbWFuZC4KVGhlcmUgYXJlIHNwZWNpYWxpc2VkIGNoYXJpdGllcyBmb3IgUE5EIHN1ZmZlcmVyczEuIE9mdGVuIHdvbWVuIGZpbmQgdGhlIGFub255bWl0eSBvZiBjeWJlcnNwYWNlIG1ha2VzIGl0IGVhc2llciB0byBiZSBmcmFuayBhYm91dCBob3cgdGhleSBhcmUgZmVlbGluZywgYW5kIG1hbnkgcGFyZW50aW5nIHNpdGVzIChzdWNoIGFzIHBhcmVudHNvdXApIGhhdmUgbWVzc2FnZSBib2FyZHMgYW5kIHZpcnR1YWwgY29tbXVuaXRpZXMgZm9yIFBORCBzdWZmZXJzLCBhcyB3ZWxsIGFzIGFydGljbGVzIGFuZCBhZHZpY2UuIEFueW9uZSBpcyB3ZWxjb21lIHRvIGNvbWUgYW5kIGdyaXBlIG9yIGJvYXN0IGFib3V0IGFueSBhc3BlY3RzIG9mIHBhcmVudGluZyBhdCB0aGUgSDJHMiBQYXJlbnQgYW5kIEJhYnkgR3JvdXAuLiAKUGVvcGxlIGRlc2VydmUgc2Vjb25kIGNoYW5jZXMuIFNpbmNlIHdlIGFyZSB0YWxraW5nIGFib3V0IGVsZWN0ZWQgb2ZmaWNlLCBwZW9wbGUgdHJ5IHRvIGNvbnZpbmNlIHRoZW1zZWx2ZXMgdGhleSBhcmUgdm90aW5nIGZvciBKZXN1cy4gV2VsbCwgbWF5IGJlIG5vdCBpbiB0aGlzIHNpdHVhdGlvbi4gCkNldHRlIHBhc3Npb24gcXVpIHZvdXMgcG91c3NlIGRhbnMgbGVzIG1hcmdlcywgcXVpIHZvdXMgb2JsaWdlICBjaGVyY2hlciwgIGV4cGxvcmVyIGRhbnMgbGVzIHJlY29pbnMgZGUgbGEgY3VsdHVyZSBvZmZpY2llbGxlLCBicmVmICBwYXJ0aXIgZW4gcXV0ZS4gCkIuIApUaGV5IGFsc28gaG9sZCB0cnVlIGZvciBvbmUgdGFibGUgY29tcGV0aXRpb25zLiAKUHJvbW90aW9ucyBpbmNsdWRlIGEgdmFyaWV0eSBpbnRlcmFjdGl2ZSBnYW1pbmcgZXhwZXJpZW5jZXMgZnJvbSBzbG90IGFuZCBwb2tlciB0b3VybmFtZW50cyB0byB2aWRlbyB0dXRvcmlhbHMgb24gYmxhY2tqYWNrLCBiYWNjYXJhdCBvciBjcmFwcy4gSGUgc2FpZCBoZSBleHBlY3RzIEphY2sncyBuZXcgU3luZXJneSBUYWJsZSBHYW1lcywgdGhlIG9ubHkgaW5zdGFsbGF0aW9uIG9mIGl0cyBraW5kIGluIE5vcnRoZWFzdCBPaGlvLCB3aWxsIGJlIGEgaGl0IGFtb25nIGV2ZW50IG9yZ2FuaXplcnMuIFRoZSBhcmVuYSBzdHlsZSBzZXR1cCBmdXNlcyBlbGVjdHJvbmljIHRhYmxlIGdhbWVzIHdpdGggaGlnaCBlbmVyZ3kgZGVhbGVyIGVudGVydGFpbm1lbnQsIGxpdmUgREpzLCBwdWxzYXRpbmcgbGlnaHRzIGFuZCBhIGdpYW50IHZpZGVvIHdhbGwuLiAKVGhleSBtYWtlIGl0IGdvb2QgYW5kIGVuY291cmFnZSBwZW9wbGUgdG8gc3BlbmQgbW9uZXksIGZhbnRhc3RpYy4gVGhleSBwaXNzIHNvbWUgcGVvcGxlIG9mZiB3aXRoIHRoZWlyIGRlc2lnbiBkZWNpc2lvbnMsIHN0aWxsIG9uIHRoZW0uIFRoZXkgd2FudCB1cyB0byBwbGF5IGFuZCBzcGVuZCBtb25leSwgdGhlbiB0aGUgZXhwZXJpZW5jZSB0aGV5IGNyYWZ0IHNob3VsZCBiZSBlbmdhZ2luZy4uIApBbHRob3VnaCB1bmV0aGljYWwsIHdlIGFsbCBkZWNpZGVkIGl0IHdhcyBiZXN0IGlmIHdlIGJhcnJpY2FkZWQgQW50YXJjdGljYSBhbmQga2VlcCBldmVyeW9uZSBvdXQgYW5kIGFsbCBvZiB0aGUgaW1tb3J0YWxzIGluLiAKV2UgaGF2ZSBhIGdvb2QgZXhwZXJpZW5jZSB3aXRoIGl0LCIgT2dkZW4gc2F5cy4gClByb3RlY3Rpb25Db252ZXJzZWx5LCBvdmVybHkgY29sZCBvciBkYW1wIGZlZXQgY2FuIGJlIHZlcnkgdW5jb21mb3J0YWJsZSBpbmRlZWQgYW5kIHNvIHRoZXkgbmVlZCBpbnN1bGF0aW5nIGFnYWluc3QgdGhlc2UgY29uZGl0aW9ucy4gVmFyaW91cyBhcnRpY2xlcyBvZiBjbG90aGluZzUgYXJlIHVzZWQgZm9yIHRoaXMgcHVycG9zZSwgYWNjb3JkaW5nIHRvIHRoZSB3ZWF0aGVyIGNvbmRpdGlvbnMsIHRlcnJhaW4gYW5kIGRlZ3JlZSBvZiBwcm90ZWN0aW9uIHJlcXVpcmVkLiBPbmUgb2YgdGhlIG1vc3QgZWZmZWN0aXZlIGZvcm1zIG9mIGRhbXAgcHJvb2ZpbmcgZm9yIGZlZXQgaXMgdGhlIFdlbGxpbmd0b24gQm9vdCwgYXMgY2VsZWJyYXRlZCBieSB0aGUgU2NvdHRpc2ggY29tZWRpYW42LCBCaWxseSBDb25ub2xseSwgaW4gYSBzb25nIHdpdGggYSBjaG9ydXMsIHdoaWNoIGdvZXMgc29tZXRoaW5nIGxpa2UuIApUaGUgU2VydmljZXMgbWF5IGFsc28gcHJvdmlkZSBydWxlcyBvZiBwYXJ0aWNpcGF0aW9uIGZvciBjZXJ0YWluIGFjdGl2aXRpZXMgd2l0aGluIHRoZSBTZXJ2aWNlcywgaW5jbHVkaW5nLCB3aXRob3V0IGxpbWl0YXRpb24sIGNvbnRlc3RzLCBzd2VlcHN0YWtlcywgYW5kIG90aGVyIGluaXRpYXRpdmVzICgiUnVsZXMiKS4gClNlY29uZCB3ZWVrIHN0YXJ0ZWQgb2ZmIGhhcmQuIExhY2sgb2Ygc2xlZXAgZG9lc24gaGVscCBhbmQgeW91IGZlZWwgb3ZlcndoZWxtZWQgd2l0aCBhbGwgdGhlIGdlYXIgeW91IGdldCBidXQgb25jZSB5b3UgaWdub3JlIHRoYXQgZmVlbGluZyBhbmQgc3RhcnQgd29ya2luZyBvbiB5b3VyIHNoaXQgaXRzIHN1cnByaXNpbmdseSBlYXN5IHRvIG1hbmFnZSB5b3VyIHRpbWUuCkludmVzdGlnYXRpb24gY29udGludWluZy4gClJlc3RhdXJhbnRzIGFyZSBhIG1ham9yIHNvdXJjZSBvZiBhbnhpZXR5IGZvciBtZS4gCkl0IGhhcmQgdG8gc2F5IGZyb20gdGhlIHBpY3R1cmVzIGhvdyBtdWNoIHdvbiBoYXMgYmVlbiBkb25lIG9uIHRoZSBuZWNrLCBzbyBpdCBhIGJpdCBoYXJkIHRvIHNheSBob3cgZGlmZmljdWx0IGl0IHdpbGwgYmUuIElmIHRoZSBuZWNrIGlzIHJlYWR5IHRvIGdsdWUsIGl0IHNob3VsZCBiZSBtYW5hZ2VhYmxlLCBidXQgaWYgeW91IGhhdmUgdG8gZG8gdGhlIHdob2xlIG5lY2sgc2V0LiBXZWxsLCBnZXQgcmVhZHkgZm9yIGFuIGFkdmVudHVyZS4uIApJdCBjb21tb24gYWR2aWNlIHRvIGxvb2sgYXJvdW5kIGZvciB3aGF0IHlvdXIgc2FsYXJ5IGNvdWxkIGJlIGluIG90aGVyIGNvbXBhbmllcyB0byBnYWluIGtub3dsZWRnZSBhYm91dCB3aGF0IHlvdSBhcmUgd29ydGggYmVmb3JlIG5lZ290aWF0aW5nIHNhbGFyeSwgSSBqdXN0IGJlbGlldmUgdGhhdCBzaG91bGQgYmUgZXh0ZW5kZWQgdG8gaW5zaWRlIHlvdXIgb3duIGNvbXBhbnkgYXMgd2VsbC4gCk9yIGdldCBhIHNpbmdsZSB3YWxsIHRlbnQgZnJvbSAxNG96IHRvIDIwb3ogbGlnaHRlciBkZXBlbmRpbmcgb24gaG93IG11Y2ggeW91IHdhbnQgdG8gc3BlbmQuIApJIHZvbHVudGVlciBhdCB0aGUgQm9zdG9uIE1hcmF0aG9uIGFuZCBhbGwgMzAsMDAwIHJ1bm5lcnMgY29tZSBwYXN0IG1lLiBIYXZlIHNlZW4gemVybyBwaXNzL3Bvb3AgY2FzZXMuCllvdXIgc3RvcnkgaGl0cyBjbG9zZSB0byBob21lIHRvby4gTXkgeW91bmdlc3QgYnJvdGhlciBpcyBzdGlsbCBpbiBjb2xsZWdlLCBzbyBldmVuIHRob3VnaCBoZSBjYW4gY29udHJpYnV0ZSBmaW5hbmNpYWxseSwgaW4gbWFueSB3YXlzLCBJIHNheSBoZSBwcm92aWRlcyB0aGUgbW9zdCAoaW4gdGVybXMgb2YgZW1vdGlvbmFsIHN1cHBvcnQsIHNpbmNlIGhlIHN0YXlzIHdpdGggbXkgbW9tIG92ZXIgYWxsIG9mIGhpcyBicmVha3MuKSBNYXliZSB0aGlzIGlzIHRoZSBzYW1lIGZvciB0aGUgYnJvdGhlciB3aG8gbGl2ZXMgd2l0aCB0aGUgbW9tLiBIZSBtaWdodCBub3QgInByb3ZpZGUiIGJ1dCBoZSBpcyB0aGUgb25lIHdobyBpcyB0aGVyZSBkZWFsaW5nIHdpdGggdGhlIGRhaWx5IEJTLiBJIGhvcGUgdGhleSBtYWtlIGl0IHdvcmsgZm9yIGFsbCBvZiB0aGVtLiBFdmVyeW9uZSBuZWVkcyBzaGVsdGVyLCBhbmQgZXZlcnlvbmUgbmVlZHMgY2FyZWQgZm9yLCBhdCBvbmUgdGltZSBvciBhbm90aGVyLgpGb2xsb3cgdGhlIHJ1bGVzIG9mIHByb21vdGlvbi4KTHlkaWEncyBtb20gYWJ1c2VkIGhlciBhbmQgYnJhaW53YXNoZWQgdGhlIHBvb3IgZ2lybCBmb3IgeWVhcnMuIApXaGVuIHlvdSBhcmUgc2hvcHBpbmcgZm9yIFRleGFzIEhvbGQgRW0gUG9rZXIgQ2hpcHMsIHlvdSBzaG91bGQgYWx3YXlzIGdpdmUgc29tZSB0aG91Z2h0IHRvIGhvdyB5b3Ugd2lsbCB1c2UgdGhlbS4gQXNpZGUgZnJvbSBlbmhhbmNpbmcgYW55IGdhbWUgdGhhdCB5b3UgcGxheSBpbiB5b3VyIG93biBob21lLCB5b3UgbWF5IHdhbnQgdG8gYnJpbmcgdGhlbSB0byBvdGhlciBsb2NhdGlvbnMuIFRoYXQgc2FpZCwgaWYgeW91IGFyZSBhbiBhdmlkIGZhbiBvZiB0aGlzIHBhcnRpY3VsYXIgdmVyc2lvbiBvZiBwb2tlciwgeW91IG1heSB3ZWxsIGRlY2lkZSB0aGF0IHlvdSB3YW50IHRoZW0gYXMgbXVjaCBmb3IgdGhlaXIga2VlcHNha2UgdmFsdWUgYXMgZm9yIGFjdHVhbCBnYW1lIHBsYXkuLiAKQmVpbmcgYSBtaWxsaW9uYWlyZSBnaXZlcyB5b3UgdGhlIG9wdGlvbiB0byBkbyB3aGF0IHlvdSB3YW50LCB3aGVuIHlvdSB3YW50LCBhbmQgd2hlcmUgeW91IHdhbnQuIApMYSBMb2kgbidhIGxlIGRyb2l0IGRlIGRmZW5kcmUgcXVlIGxlcyBhY3Rpb25zIG51aXNpYmxlcyAgbGEgU29jaXQuIFRvdXQgY2UgcXVpIG4nZXN0IHBhcyBkZmVuZHUgcGFyIGxhIExvaSBuZSBwZXV0IHRyZSBlbXBjaCwgZXQgbnVsIG5lIHBldXQgdHJlIGNvbnRyYWludCAgZmFpcmUgY2UgcXUnZWxsZSBuJ29yZG9ubmUgcGFzLgpNeSBkZWVwLCBkZWVwIGNvbmNlcm4gaXMgbXkgb3RoZXIgaG91c2VtYXRlLCBMaWxseSBCZWUsIG91ciBvbmUgeWVhciBvbGQgTWFsYWdhc3kgQ290b24gZGUgVHVsZWFyLiBBcyBkb2dzIHRha2Ugb3ZlciB0aGUgY291bnRyeSwgZnJvbSBhaXJsaW5lcyB0byByZXN0YXVyYW50cyB0byBkZXBhcnRtZW50IHN0b3Jlcywgd2UgbmVlZCB0byBob25lIG91ciBnaWZ0IGdpdmluZyBza2lsbHMgdG8gbWVldCBjYW5pbmUgZGVzaXJlcyBhbmQgZmFudGFzaWVzLiAKIkknbSBsb29raW5nIGZvcndhcmQgdG8gc2VlaW5nIGFsbCB0aGVzZSBjaGlsZHJlbiBhbmQgdGhlaXIgZmFtaWxpZXMgY29taW5nIHRocm91Z2gsIiBCdWtvd2llY2tpIHNhaWQuICJJIHdhbnQgdG8gaGVhciB0aGVpciAnb29ocycgYW5kIHRoZWlyICdhYWhzJyBhbmQgW3NlZV0gaG93IHRoZWlyIGV5ZXMgbG9vay4iCkRyLiBLZW1wbGUncyBtaXNzaW9uIHdhcyB0byBlbGltaW5hdGUgcGVkaWF0cmljIG9yYWwgZGlzZWFzZS4gCkl0IGlzIGFsc28gaWxsZWdhbCBmb3IgYSBnYW1ibGluZyBXZWIgc2l0ZSB0byBvcGVyYXRlIHdpdGhpbiB0aGUgVW5pdGVkIFN0YXRlcywgd2hpY2ggaXMgd2h5IHRoZSBvZmZpY2VzIGFuZCBzZXJ2ZXJzIG9mIG1vc3Qgb25saW5lIGNhc2lub3MgYXJlIGxvY2F0ZWQgaW4gb3RoZXIgY291bnRyaWVzLiAKTHVzdGlnIGlzIGEgc3BlY2lhbGlzdCBvbiBwZWRpYXRyaWMgaG9ybW9uZSBkaXNvcmRlcnMgYW5kIHRoZSBsZWFkaW5nIGV4cGVydCBpbiBjaGlsZGhvb2Qgb2Jlc2l0eSBhdCB0aGUgVW5pdmVyc2l0eSBvZiBDYWxpZm9ybmlhLCBTYW4gRnJhbmNpc2NvLCBTY2hvb2wgb2YgTWVkaWNpbmUsIHdoaWNoIGlzIG9uZSBvZiB0aGUgYmVzdCBtZWRpY2FsIHNjaG9vbHMgaW4gdGhlIGNvdW50cnkuClRoZSBuZXh0IHRoaW5nIHRoYXQgeW91IHdpbGwgd2FudCB0byB3b3JrIHRvIGRvIGluIG9yZGVyIHRvIGxlYXJuIG1vcmUgYWJvdXQgeW91ciB1c2VkIGNhc2lubyBwb2tlciBjaGlwcyBpcyB0byBleGFtaW5lIHRoZSBpbmxheS4gTWFueSBjYXNpbm9zIGltcGxlbWVudCB0aGUgdXNlIG9mICJSRklEIiwgd2hpY2ggc3RhbmRzIGZvciAiUmFkaW8gRnJlcXVlbmN5IElkZW50aWZpY2F0aW9uIi4gVHlwaWNhbGx5LCBhIHNtYWxsIGNoaXAgaXMgaW5zZXJ0ZWQgaW5zaWRlIHRoZSBhcmVhIHdoZXJlIHRoZXJlIGlzIGFuIGlubGF5LiBJZiBzY2FubmVkIHdpdGggYSBSRklEIHNjYW5uZXIsIGluZm9ybWF0aW9uIGNhbiBiZSByZWxheWVkIHRvIHlvdSByZWdhcmRpbmcgdGhlIG9yaWdpbiBvZiB0aGUgY2hpcCwgYW5kIGFueSBvdGhlciB2aXRhbCBpbmZvcm1hdGlvbiB0aGF0IHlvdSBtYXkgbmVlZC4KUmVhZCB0aGUgRW50aXJlIEFydGljbGVTdHJpcCBDbHViICAgRXhwbG9yZSBXaGF0IGl0J3MgQWxsIEFib3V0CkluIGRlciBTa2lyZWdpb24gUm9zYSBDaHV0b3Igd2VyZGVuIFJlemlkb3IsIEFjY29yLCBTd2lzc290ZWwsIFR1bGlwIHVuZCBIZWxpb3BhcmsgZWlnZW5lIEh1c2VyIGJldHJlaWJlbi4gCklmIENsaW50b24gaXMgYXQgZmF1bHQgc28gaXMgYSBsb3Qgb2Ygb3RoZXIgcGVvcGxlLCBmcm9tIGV2ZXJ5b25lIHdobyBkaWRuIHZvdGUgZm9yIEdvcmUgaW4gRmxvcmlkYSB3aG8gY291bGQsIHRvIHRoZSBTdXByZW1lIENvdXJ0LCB0byBGbG9yaWRhIFNlY3JldGFyeSB0byBTdGF0ZSwgb3IgQWwgR29yZSBoaW1zZWxmIHdob3NlIGNyYXBweSBjYW1wYWlnbiBjb3N0IGhpbSB0aGUgZWxlY3Rpb24gaW4gdGhlIGZpcnN0IGNhc2UuLiAKSGV5IHRoZXJlLCBmcmllbmRvIHUvQXN0ZXJpc2tTdGFycyEgVGhhbmtzIGZvciBzdWJtaXR0aW5nIHRvIHIvd2hvbGVzb21lbWVtZXMuIFdlIGxvdmVkIHlvdXIgc3VibWlzc2lvbiwgVGhpcyBpcyBraW5kIG9mIHdob2xlc29tZT8gSSB0aGluaywgYnV0IGl0IGhhcyBiZWVuIHJlbW92ZWQgYmVjYXVzZSBpdCBkb2VzbiBxdWl0ZSBhYmlkZSBieSBvdXIgcnVsZXMsIHdoaWNoIGFyZSBsb2NhdGVkIGluIHRoZSBzaWRlYmFyLgpFZG1vbmQgRGFudGVzLCBjb25zdW1lcyB3aG9sbHkgYnkgdmVuZ2VhbmNlLCBwbGFucyB0byBicmluZyBkb3duIGhpcyBiZXRyYXllcnMuIApSYWNpbmcgcmlncyBjYW4gcmVhY2ggc3BlZWRzIG9mIHVwIHRvIDgwIG1waCBhbmQgcG9wIHdoZWVsaWVzLiJJIHRoaW5rIGl0IHdvdWxkIGJlIGZ1biB0byB3YXRjaCwiIHNhaWQgQnJpY2UgSm9obnN0YWQsIDYuIApJZiB5b3Ugd2FudCB0byBwbGF5IGEgcmVhbCBnYW1lIG9mIFBva2VyIGF0IGEgQ2FzaW5vIHlvdSB3b24ndCBiZSBhYmxlIHRvIGRvIGl0IGZyZWUuIEl0IHRha2VzIHNvbWUgbW9uZXkgdG8gYmUgYWJsZSB0byBwbGF5IHRoZXJlLiAKQWxsIG9mIGEgc3VkZGVuIHlvdSBoZWFyIHNvbWUgZ3V5cyBzY3JlYW1pbmcgaW4gZGlzZ3VzdCBhbmQgZXZlcnlvbmUgc3RhcnRzIGJhY2tpbmcgb2ZmIG9mIGhpbS4gCldoZXJlIFBhYmxvPzogUGFibG8gU2FuZG92YWwgaXMgcGxheWluZyBmaXJzdCwgdGhpcmQgYW5kIGNhdGNoZXIgYW5kIGhlIGEgc3dpdGNoIGhpdHRpbmcgbWFjaGluZS4gSXNuIGl0IGZ1biB0byBjaGVjayB0aGUgc3RhcnRpbmcgbGluZXVwIGV2ZXJ5IGdhbWUgdG8gc2VlIHdoaWNoIHBvc2l0aW9uIGhlIHBsYXlpbmc/IFNvIHdoYXQgaWYgaGUgYWxyZWFkeSBoYWQgdHdvIHBhc3NlZCBiYWxscy4gClN1ciBjZXMgbWlsbGllcnMgZGUgcGFzc2FudHMsIGonZW4gY29tcHRlIGVudmlyb24gdW5lIGRlbWkgZG91emFpbmVzIHF1aSBzJ2ludHJlc3NlIHZyYWltZW50ICBjZSBxdWUgamUgZmFpcyBldCBxdWkgbWUgY29tbXVuaXF1ZW50IHBhcmZvaXMgZGVzIGluZm9zIHBlcnRpbmVudGVzIGV0IGF1c3NpIGRlcyBsaXZyZXMuIEplIHZpZW5zIHBhciBleGVtcGxlIGRlIHJlY2V2b2lyIHVuZSB2ZXJzaW9uIG51bXJpcXVlIGQndW4gbGl2cmUgc3VyIGxlIG15dGhlIGRlIGwnaXNsYW0gYW5kYWxvdSBxdWUgaidhbGxhaXMgYWNoZXRlciB1biBqb3VyIG91IGwnYXV0cmUuIApTdXByZW1lIENvdXJ0IGludmFsaWRhdGVzIGNhc2lubyBhbWVuZG1lbnQKRnJvbSAvdS9vcHRpY3JvbiBkZXNjcmlwdGlvbiwgdGhpbmdzIGRpZG4gd29yayBvdXQgd2l0aCB0aGVtIHRyeWluZyB0byBiZWNvbWUgbW9yZSB1cHNjYWxlLmNoaXZlX21hY2hpbmUgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMiB5ZWFycyBhZ29BdCBzZXZlcmFsIHBsYWNlcyBJIGdvbmUgdG8gKGluIHNldmVyYWwgZGlmZmVyZW50IHN0YXRlcyBvdmVyIHRoZSBwYXN0IHRlbiB5ZWFycyksIHlvdSBjb3VsZCBlaXRoZXIgbWFrZSBhbiBhcHBvaW50bWVudCwgb3IgdGhlcmUgd291bGQgYmUgY2VydGFpbiBwbGFjZXMgdGhhdCB3b3VsZCBoYXZlIGEgImZpcnN0IGNvbWUsIGZpcnN0IHNlcnZlIiBkYXksIHdoZXJlIHlvdSBjb3VsZCBnbyB0aGVyZSwgc2lnbiB1cCwgYW5kIHNlZSBhIGRvY3RvciB0aGF0IHNhbWUgZGF5LiAKQW55dGhpbmcgZXZlbiBjbG9zZSB0byB2aXNpdGluZyBwbGFuZXRzIHdvdWxkIGJlIGEgaGVhdmlseSBidXRjaGVyZWQgdmVyc2lvbiBvZiB3YWxraW5nIG9uIGEgc3BhY2Ugc3RhdGlvbiwgYnV0IHdpdGggYSBwbGFuZXRhcnkgdGV4dHVyZSBhcHBsaWVkLiBJIGhpZ2hseSBkb3VidCB5b3UgZmluZCBpdCB0byBiZSBhIHNhdGlzZmFjdG9yeSBleHBlcmllbmNlIG9mIGFueXRoaW5nIG1vcmUgdGhhbiB2aXNpdGluZyBhIHN0YXJiYXNlIGFuZCB0cmFkaW5nIHdpdGggc29tZSB0cmFkZXJzLCB0aGF0IGp1c3QgbG9va3MgZGlmZmVyZW50IHRoYW4gdGhlIHNhbWUgdGhpbmcgb24gYSBzcGFjZSBzdGF0aW9uLi4gCiBNZWdhbiBHcmFoYW0sIHJlcG9ydGVyLCBhZ2VuY2llcy4gClRoZXNlIGFyZSBudW1iZXJzIHRoYXQgc2hvdyBob3cgc3Ryb25nIHRoZSBnYW1ibGluZyBpbmR1c3RyeSBpcyBhbmQgYWxzbyB0aGF0IGl0IGRvZXNuJ3QgaW50ZW5kIHRvIHN0b3AuLiAKQWZ0ZXIgMS41IHllYXJzIG9mIHJ1bm5pbmcgb24gaXQsIEkgZmluYWxseSBnb3QgdGhlIE1SSSB0byBjb25maXJtIGRpYWdub3NpcywgYW5kIG9uY2UgdGhlIGRvY3RvciBjb25maXJtZWQgdGhhdCBJIHdhcyBhIGdvb2QgY2FuZGlkYXRlIGZvciBzdXJnZXJ5IEkgd2VudCBhaGVhZCB3aXRoIGl0LiAKVG8gYmV0dGVyIGV4cGxhaW4gSSBkb24ndCB0aGluayBzaGUgdGhpbmtzIGhlciBhY3Rpb25zIGFyZSByYWNpc3QgKGV2ZW4gdGhvdWdoIGFic29sdXRlbHkgYXJlKSBhbmQgc2hlIGhhcyBhIHZlcnkgY29uc2VydmF0aXZlIG1pbmRzZXQgc28geW91IHBvaW50aW5nIGl0IG91dCB3b24ndCB3b3JrIGJlY2F1c2UgZmFjdHMgZG9uJ3QgbWF0dGVyLgpOdW1ibmVzcyBpcyB3ZWxsIGtub3duIHRvIGhhcHBlbiBpbiB0aGUgZmFjZSBvZiBwZXJzaXN0ZW50IGFuZCBob3JyaWZpYyBpbmZvcm1hdGlvbiwgZXNwZWNpYWxseSB3aGVuIG5vIHJlYWwgaG9wZSBpcyBpbiBzaWdodC4gCkFmdGVyIGNob29zaW5nIGFuZCBwYXlpbmcsIHRoZSBwYXBhc2FuIGFza2VkIG1lIGZvciBhIHRpcC4gTWludXMgcG9pbnQhIFBlcmhhcHMgSSBtYWRlIGEgbWlzdGFrZSBieSB0ZWxsaW5nIGhpbSBpdCB3YXMgbXkgZmlyc3QgdGltZSB0aGVyZSwgYnV0IGV2ZW4gc28sIGhlIG9ubHkgZGlkIHdoYXQgaXMgbmVjZXNzYXJ5IGFuZCBJIGhhdmUgbm90IGJlZW4gb2JsaWdlZCB0byB0aXAgdGhlIHBpbXAgYmVmb3JlLiBKdXN0IHRlbGwgbWUgdGhlIHByaWNlcyBJIGtub3cgd2hhdCBnb2VzIG9uIGJlaGluZCBjbG9zZWQgZG9vcnMgYW5kIEkgcXVpdGUgY2FwYWJsZSBvZiBtYWtpbmcgYSBjaG9pY2UhIEkgYmVncnVkZ2luZ2x5IGdhdmUgaGltIDEwMCBiYWh0IGFuZCB0aGVuIG1hZGUgbXkgd2F5IHRvIHRoZSByb29tLiAKSSBrbm93IHdoYXQgeW91IHRhbGtpbmcgYWJvdXQgd2l0aCB0aGVtIG1vdmluZyBkdXJpbmcgeW9nYS4gSSBkb24gZG8gaXQgb2Z0ZW4sIGFuZCB0aGF0IG9uZSBvZiB0aGUgcmVhc29ucyBJIGRvbiBTaW5jZSBJIHN0YXJ0ZWQgZXhlcmNpc2luZywgSSBoYXZlIHN0YXJ0ZWQgd2VhcmluZyB0aGVtIHNsaWdodGx5IHRpZ2h0ZXIgdGhhbiBJIHVzZSB0byBidXQgZXZlcnkgcGFpciBpcyBzbyBmbGlwcGluZyBkaWZmZXJlbnQgdGhhdCBzb21ldGltZXMgdGhleSBnb2luZyB0byBtb3ZlIHJlZ2FyZGxlc3MuIFdoeSBjYW4gdGhleSBhbGwgZml0IHRoZSBzYW1lPz8KSSBkb250IHJlYWxseSBrbm93IHRoZSBza2lsbCBsZXZlbCBhdCB0aGUgY2FzaCBnYW1lcy4gVW5kZXJncm91bmQgZ2FtZXMgaW4gZ2VuZXJhbCBhcmUgcHJldHR5IGRlYWQgdGhlIGxhc3QgZmV3IHllYXJzLCBtYXliZSB5b3UgbWlnaHQgZmluZCBzb21lIGF0IHRoZSBiaWdnZXIgY2l0aWVzLiBUaGUgb25lcyBpdmUgdmlzaXRlZCB0aG91Z2ggd2VyZSBhbGwgdmVyeSBwcm9mZXNzaW9uYWwgYW5kIG5vdCBzaGFkeSBhdCBhbGwuIApMYWR5IEdhZ2Egcm9ja3MgRGlvciBnb3duIHRoYXQgZGVidXRlZCBvbiB0aGUgY2F0d2FsayBqdXN0IGEuIApMb3R1cyBvZiBTaWFtIGlzIGFuIGFtYXppbmcgcGxhY2UgZm9yIFRoYWkgRm9vZCwgbG9jYXRlZCB1bmFzc3VtaW5nbHkgaW4gYSBzdHJpcCBtYWxsLiAKRWl0aGVyIHdheSB3b3VsZCBhY2NvbXBsaXNoIHRoZSBzYW1lIGdvYWwgc28gSSBmb3IgaXQuIEFub3RoZXIgdGhpbmcgSSB3YW50LCBhbmQgaXQgc3Vja3MgYmVjYXVzZSBJIGEgQmVybmllIGd1eSwgaXMgYW4gYWdlIGxpbWl0IHRvIHRoZXNlIHBvc2l0aW9ucy4gCkN1dCA4OCwgMTksIDIwLCAyLCA3IG1pbnV0ZXMgYW5kIGluY3JlYXNlIENhdCwgU3Ryb21ib2xpLCBLb2Vrb2VrLCBEYWhsc3Ryb20sIFBlcmxpbmksIEZvcnNsaW5nLCBEZWxpYSwgU2lrdXJhLCBhbmQgSGF5ZGVuIG1pbnV0ZXMgaW5zdGVhZC4gCkFueXdheSwgaXQncyBiZWVuIHRocmVlIHllYXJzIHNpbmNlIHdlIGVuZGVkIHRoZXJhcHkgYW5kIEkgdGhvdWdodCB3ZSB3ZXJlIG9uIHRoZSByaWdodCB0cmFjay4gCkZlYXR1cmVzIG9mIExhd24gVGVubmlzSXQgaXMgcGFydGljdWxhcmx5IGVhc3kgdG8gaWRlbnRpZnkgdGhlIG1haW4gZmVhdHVyZXMgb2YgdGVubmlzLCBiZWNhdXNlIGl0IGlzIHNvIHdlbGwga25vd24gYWNyb3NzIHRoZSB3b3JsZC4gVGhlIGNvdXJ0IGlzIDIzLjhtICg3OGZ0KSBsb25nIGFuZCAxMW0gKDM2ZnQpIHdpZGUuIFRoZSBzZXJ2aWNlIGJveGVzIGFyZSA2LjRtICgyMWZ0KSBmcm9tIHRoZSBuZXQsIGFuZCBhIHNpbmdsZSBzZXJ2aWNlIGJveCBpcyA0LjFtICgxM2Z0IDZpbikgd2lkZS4gCkFuZCB0aGUgV2VzdCBzdXJlIGEgZnVjayBpcyBub3QgeW91ciBmcmllbmQuIFRoZXkgd2lsbCBjaGV3IHlvdSB1cCBhbmQgc3BpdCB5b3Ugb3V0LiAKSXQgcmVhbGx5IGlzIHNvbWV0aGluZyB2ZXJ5IGRpZmZlcmVudCB0byB3aGF0ZXZlciBlbHNlIHlvdSBmaW5kIGluIFNpZW0gUmVhcC4gCiJBbGwgbWVuIGJ5IG5hdHVyZSBkZXNpcmUgdG8ga25vdy4iIEFyaXN0b3RsZSxIb3cgZG8gd2UgY29tZSB0byBrbm93PyBXaGF0IGNhbiBiZSBrbm93bj8gSG93IGNhbiB0cnVlIGtub3dsZWRnZWJlIGRpc3Rpbmd1aXNoZWQgZnJvbSBiZWxpZWYgYW5kIG9waW5pb24/IFdoYXQgYXJlIHRoZSBlZmZlY3RzIG9ma25vd2xlZGdlPyBIb3cgZG9lcyBrbm93bGVkZ2Ugc2hhcGUgdGhlIGNvdXJzZSBvZiBvdXIgYWN0aW9ucz8gVGhlc2UgYXJlc29tZSBvZiB0aGUgcXVlc3Rpb25zIHRoYXQgcGhpbG9zb3BoZXJzIHdlcmUgYXNraW5nIGluIGZpZnRlZW50aCAgYW5kc2l4dGVlbnRoIGNlbnR1cnkgSXRhbHkuIFRoZSBhbnN3ZXJzIHdvdWxkIGhhdmUgZGlmZmVyZWQgZGVwZW5kaW5nIG9uIm5hdHVyZSBwaGlsb3NvcGhpZXMsIiBvciBTa2VwdGljaXNtLCBidXQgYWxsIHNjaG9vbHMgb2Z0aG91Z2h0IHdlcmUgZW5nYWdlZCBpbiBkaXNjdXNzaW9ucyBhYm91dCB0aGUgbmF0dXJlIG9mIGtub3dsZWRnZS4gKDEpUGhpbG9zb3BoZXJzLCBtb3Jlb3Zlciwgd2VyZSBub3QgdGhlIG9ubHkgb25lcyBpbnRlcmVzdGVkIGluIHRoZSBwcm9jZXNzb2Yga25vd2xlZGdlIGFjcXVpc2l0aW9uIGFuZCB0aGUgcmVsYXRpb24gb2Yga25vd2xlZGdlIHRvIGFjdGlvbi4gClNvIEkgdXNlIGEgcmVkIGxpZ2h0IHdoaWNoIGNhbiBjYWxtIGRvd24gbXkgc2tpbiBpbiB0ZW4gbWludXRlcyBhbmQga2VlcCBpdCBjYWxtIGZvciBhYm91dCAyNCBob3Vycy4gCklzIHRoZXJlIGFueSB0aXBzIGZvciBkb2luZyBzaXJlPyBvciBzaG91bGQgSSBqdXN0IGdldCBteSBkZWYgbGV2ZWwgdXAgYXQgTk1aPy4gCkl0IHdhcyBzbyBoZSB3YXMgcmVsZXZhbnQgaXQgd2FzIGJlY2F1c2UgaGUgd2FudGVkIGhpcyBwYXRlbnRlZCB2YWNjaW5lIHRvIHN0aWxsIGJlIHVzZWQgaW5zdGVhZCBvZiB0aGUgbW1yIHZhY2NpbmUgYWxvbmcgd2l0aCB0aGUgZmluYW5jaWFsIGJhY2tlcnMgdGhhdCAiZnVuZGVkIiBoaXMgaW52ZXN0aWdhdGlvbi4gCk9mIGNvdXJzZSB5b3UgYWxzbyBtdXN0IHJlYWxpemUsIHRoYXQgd2l0aCBiaXBvbGFyIElJIHlvdSBoYXZlIHBlcmlvZHMgb2YgZGVwcmVzc2lvbiwgbWFuaWEsIEFORCBub3JtYWxjeS4gTm90IGV2ZXJ5b25lIGV2ZW4gZ2V0cyB0byB0aGUgcG9pbnQgb2Ygbm9ybWFsIHBlcmlvZHMuIApDaGFuY2VzIGFyZSwgeW91IGVuam95IHBsYXlpbmcgcG9rZXIgd2l0aCBwZW9wbGUgb3RoZXIgdGhhbiB0aGUgb25lcyB0aGF0IHJlc2lkZSBpbiB5b3VyIGhvbWUuIFdpdGhvdXQgYSBxdWVzdGlvbiwgaWYgeW91IGFyZSBwbGFubmluZyB0byBpbnZpdGUgeW91ciBmcmllbmRzIHRvIHBsYXkgYSBnYW1lIG9mIFRleGFzIEhvbGQgRW0gUG9rZXIsIHRoZXkgd2lsbCBhcHByZWNpYXRlIGJlaW5nIGFibGUgdG8gcGxheSB3aXRoIHByb2Zlc3Npb25hbCBxdWFsaXR5IGNoaXBzLiBBdCB0aGUgdmVyeSBsZWFzdCwgaXQgd2lsbCBzZXQgeW91ciBob21lIGFib3ZlIG90aGVyIGxvY2F0aW9ucyB3aGVyZSB5b3UgbWlnaHQgZGVjaWRlIHRvIHBsYXkuIApEdXJpbmcgYSByYWlkIGF0IFN1ZGFtYSByZXNvcnQgaW4gRWxsaXNicmRpZ2UsIGNvcHMgZm91bmQgc2V2ZXJhbCBjaGVxdWVzIGFuZCBkZW1hbmQgZHJhZnRzIChERCkgb2Ygc29tZSBjdXN0b21lcnMuIE9mZmljaWFscyBhbHNvIGxlYXJudCB0aGF0IHRoZSBtYW5hZ2VyIG9mIFN1ZGFtYSByZXNvcnQgd2FzIGFsc28gaW52b2x2ZWQgaW4gcnVubmluZyB0aGUgZ2FtYmxpbmcgZGVuLiBCYXNlZCBvbiB0aGVzZSBjbHVlcywgY29wcyBoYXZlIG5hYmJlZCBvbmUgRGFyc2hhbiBTaGFoLCBhIHJlc2lkZW50IG9mIFJveWFsIGFwYXJ0bWVudCBpbiBTYXRlbGxpdGUsIGFuZCBvbmUgTXVrZXNoIFBhdGVsLCBhIHJlc2lkZW50IG9mIFZhZGlnYWFtIGluIERhcmlhcHVyLi4gCk5vdyB5b3Uga25vdyB5b3UncmUgc2NyZXdlZC4gCkFnZTogNDkgT3JpZW50YXRpb246IFN0cmFpZ2h0IEdlbmRlcjogRmVtYWxlIFRvd246IENyYXdsZXksIEdhdHdpY2ssIExvbmRvbiwgTmF0aW9uYWwsIEludGVybmF0aW9uYWwgTmF0aW9uYWxpdHk6IFVuaXRlZCBLaW5nZG9tIERlc2NyaXB0aW9uOiBBIERlbGVjdGFibGUgRHV0Y2ggRGFtZSBmb3IgYWxsIHlvdXIgRHJlYW1zLCBEZXNpcmVzIGFuZCBEZWxpZ2h0LiBDaGFyZ2VzIHdpbGwgYWNjcnVlIGlmIHlvdSBwdXJjaGFzZSBhIHByZW1pdW0gbWVtYmVyc2hpcCB3aGljaCBpcyBvZmZlcmVkIHVwb24gY29tcGxldGlvbiBvZiB5b3VyIHByb2ZpbGUuIApJIGRvIGhhdmUgZnJpZW5kcyB0aGF0IGhhZCBiZXR0ZXIgY29taW5nIG91dCBzdG9yaWVzIGFuZCBpdCBnZXR0aW5nIGJldHRlciBmb3Iga2lkcyB0b2RheSBhbmQgb2J2aW91c2x5IG1lIGFzIHdlbGwgaWYgSSBhYmxlIHRvIGV2ZW4gYmUgaGFwcHkgYW5kIG9wZW4gb24gc29tZXRoaW5nIGxpa2UgRmFjZWJvb2suIApXaGlsZSBoYXZpbmcgYSBCUyBpbiBDUyBvciBub3QgZG9lcyBub3QgbWVhbiB5b3UgaGF2ZSB0aGUgcmVxdWlyZWQgc2tpbGxzLCBtb3N0IGNvbXBhbmllcyBoYXZlIHN0cmljdCByZXF1aXJlbWVudHMgZm9yIGNlcnRhaW4gcG9zaXRpb25zLiBXYW50aW5nIHRvIGRvIHJlc2VhcmNoIGluIEFJIHdpdGhvdXQgYSBCUyBpbiBDUyBhbmQgYSB0aGVzaXMgTVMgcHJvZ3JhbSB3aWxsIHB1dCB5b3UgYXQgYSBkaXNhZHZhbnRhZ2UuIE5vdCBzYXlpbmcgaXQgaXMgaW1wb3NzaWJsZSBidXQgbXVjaCBoYXJkZXIgdG8gYnJlYWsgaW50by4gCkJ1dCB0aGF0IGRvZXNuIGRpbWluaXNoIGluIGFueSB3YXkgdGhhdCBtb3N0IHBlb3BsZSBJIGtub3cgKG1lbiBhbmQgd29tZW4pIGxhdWdoIGF0IG1lLCBuZXZlciB0YWtlIG1lIHNlcmlvdXNseSwgZGlzbWlzcyBtZSBpbW1lZGlhdGVseS4uIApTZWN1cml0aWVzIG9mZnNob3JlIHRocm91Z2ggb2Zmc2hvcmUgb2ZmaWNlcy4gVGhleSBjYW4gdHVybiB0byB0aGUgZ3Jvd2luZyBudW1iZXIgb2YgY3Jvc3NpbmcgbmV0d29ya3MsIG9yIHBvb2xzIE9uZSBzaG91bGQgbm90IHVuZGVyZXN0aW1hdGUgdGhlIGFiaWxpdHkgb2YgZmluYW5jaWFsIGVuZ2luZWVyaW5nIHRvIGNpcmN1bXZlbnQgcmVndWxhdGlvbi4gCkkgd291bGQgaW1hZ2luZSB0aGUgc291bmRzIGluIHRoYXQgd29vZGxhbmQgZ2xhZGUgICBqdXN0IGEgYnJlZXplIHJ1c3RsaW5nIHRoZSBsZWF2ZXMsIGFuZCBhIGxpdHRsZSBiaXQgb2YgYmlyZCBzb25nLiBJIGNvdWxkIHNtZWxsIHRoZSBjb29sLCBzbGlnaHRseSBtaXN0eSBhaXIgYW5kIHRoZSBkcmllZCBmZXJucyBpbiB0aGUgZm9yZWdyb3VuZC4gSWYgdGhpbmdzIHdlcmUgcmVhbGx5IG5hc3R5LCBJIHdvdWxkIHZpc3VhbGlzZSBhIGZvdXIgcG9zdGVyIGJlZCBpbiB0aGUgbWlkZGxlIG9mIHRoZSBnbGFkZSwgbG90cyBvZiBjb29sLCBjbGVhbiwgY3Jpc3AsIHdoaXRlIHNoZWV0cywgYW5kIHRoZSBicmVlemUgYmxvd2luZyB0aGUgZHJhcGVzIGFib3V0ICAgd2hhdCBsb3ZlbHkgcGxhY2UgdG8gd2FrZSB1cC4uIApJJ20gcmVhbGx5IHN0cnVnZ2xpbmcgd2l0aCBhbGwgdGhlIG9wdGlvbnMgYXZhaWxhYmxlIGFuZCB0cnlpbmcgdG8gZGVjaWQgd2hlcmUgdG8gc3BlbmQgdGhlIG1vc3QgbW9uZXkgYXMgSSByYXJlbHkgcGxheSB2aWRlb3MgZ2FtZXMgKE1heWJlIG5lZWQgYSB2aWRlbyBjYXJkIGZvciBTQzIpClBlcmhhcHMgcGxheSBhZ3Jlc3NpdmVseSBhbmQgc3RlYWwgYSBmZXcgcG90cy4gSWYgeW91IHdhbnQgdG8gbWFrZSBhIGNhcmVlciBvdXQgb2YgaSBzdWdnZXN0IHlvdSByZWFkIHVwIGEgbGl0dGxlIGFuZCB0ZXN0IGl0IG91dCBhIGxpdHRsZSBiZWNhdXNlIGl0IGlzIG5vdCBhIHZlcnkgc3RlYWR5IHByb2Zlc3Npb24uIEJ1dCBvZiBjb3Vyc2UgdGhlcmUncyBhbHdheXMgdGhhdCBsdXJlIG9mIG1ha2luZyBhIGZvcnR1bmUgKEZ1bGwgQW5zd2VyKS4gClRoZXkgYXJlIGVpdGhlciB0b28gbG9uZywgdG9vIHNtYWxsIG9yIGhhdmUgc29tZWhvdyBiZWVuIGRhbWFnZWQgZHVyaW5nIGNvbnN0cnVjdGlvbi4gVGhlIHJlc3VsdCBpcyB0aGUgZHVjdGluZyBwbHVnczsgdGhlIGV4aGF1c3Qgc2F0dXJhdGVzIHRoZSBsaW50IHRyYXBwZWQgaW4gdGhlIGR1Y3QsIHRoZSBkdWN0cyBsZWFrIGFuZCB0aGUgY2VpbGluZ3MgaW4gb3VyIHVuaXRzIGFyZSBhbGwgYmVpbmcgZGFtYWdlZC4uIAoyMDE2LiAKRXZlcnkgdGFuayBhbmQgZXZlcnkgY2xhc3MgaGFzIHRhbGVudHMgdGhleSBjdXJyZW50bHkgdGFrZSB0byBpbmNyZWFzZSBkYW1hZ2Ugb3ZlciBzdXJ2aXZhbC4gCldlbGwsIHVubGVzcyB0aGUgcGVvcGxlIHdobyBncm93IG1lYXQgYW5pbWFscyB3YW50IGNvbWljcyBvciBjaGVlc2Ugd2hpeiAodGhleSBkb24geW91IGFyZSBTT0wuIEJ1dCB3YWl0LCBZb3VyIG5laWdoYm9yIHdhbnRzIHRoZSBjb21pY3MgZm9yIGhpcyAzIHllYXIgb2xkLiAKVGhlIGZpcnN0IHdheSB0aGF0IHlvdSBjYW4gYmVuZWZpdCB3aGVuIGl0IGNvbWVzIHRvIHRoZSAxMDAwIENsYXkgUG9rZXIgQ2hpcHMgb2ZmZXJlZCBieSBKYWNrcG90IENhc2lubyBpcyB0aGF0IHlvdSBjYW4gZW5qb3kgdGhlIGxvdyBwcmljZXMgdGhhdCB0aGVzZSBzZXRzIHNlbGwgZnJvbS4gV2hpbGUgb2YgdGhlIGhpZ2hlc3QgcXVhbGl0eSB3aGVuIGl0IGNvbWVzIHRvIENsYXkgQ29tcG9zaXRlIFBva2VyIENoaXBzLCB0aGVzZSBhcmUgYWN0dWFsbHkgY29uc2lkZXJlZCB0byBiZSBEaXNjb3VudCBDbGF5IFBva2VyIENoaXBzLiBTaW1pbGFyIHNldHMsIHN1Y2ggYXMgdGhlIDEwMDAgV29ybGQgVG9waGF0IENhbmUgUGF1bHNvbiBDaGlwcyBhbmQgdGhlIDEwMDAgUGF1bHNvbiBQaGFyb2FoIENhc2lubyBUb3AgSG90IHNldCBvZmZlciBleHF1aXNpdGUgcXVhbGl0eSBhbmQgdGhlIHNhbWUgYW1vdW50IG9mIGNoaXBzIGJ1dCBjb3N0IG5lYXJseSB1cCB0byBlaWdodCB0aW1lcyBtb3JlISBJZiB5b3UgZWxlY3QgdG8gcHVyY2hhc2UgdGhlIEphY2twb3QgQ2FzaW5vIENsYXkgUG9rZXIgQ2hpcHMsIHlvdSBhcmUgZ2V0dGluZyB0aGUgcXVhbGl0eSB0aGF0IHlvdSBkZXNpcmUgYXQgYSBwcmljZSB0aGF0IGlzIGVhc3kgb24gYW55IGJ1ZGdldC4uIApUb2RheSB0aGVyZSBhcmUgYSBteXJpYWQgb2YgYm9keXdvcmsgbW9kYWxpdGllcyBpbmNsdWRpbmc6IFN3ZWRpc2ggbWFzc2FnZTsgdHJpZ2dlciBwb2ludCB0aGVyYXB5OyBjb25uZWN0aXZlIHRpc3N1ZSByZWxlYXNlOyBteW9mYXNjaWFsIHJlbGVhc2U7IHNoaWF0c3U7IHJlZmxleG9sb2d5LiBJcyBkZXNpZ25lZCB0byB0cmVhdCBhIHNwZWNpZmljIGNvbmRpdGlvbiwgYW5kIGFuIGxpY2Vuc2VkIG9yIGNlcnRpZmllZCBwcm9mZXNzaW9uYWwgaXMgdHJhaW5lZCB0byBhc3Npc3Qgd2l0aCBzb2Z0IHRpc3N1ZSBpbmp1cmllcyBhbmQgZHlzZnVuY3Rpb25zLCBhcyB3ZWxsIGFzIHN1cHBvcnQgZ2VuZXJhbCByZWNvdmVyeS4gRXh0ZW5zaXZlIHRyYWluaW5nIGVuYWJsZXMgdGhlIHRoZXJhcGlzdCB0byB0YWtlIGEgdGhvcm91Z2ggaGlzdG9yeSwgaWRlbnRpZnkgY29udHJhaW5kaWNhdGlvbnMgKHJlYXNvbnMgdG8gbm90IG1hc3NhZ2UpIGFuZCBtYWtlIHJlZmVycmFscyB0byBhbmQgcmVjZWl2ZSByZWZlcnJhbHMgZnJvbSBvdGhlciBoZWFsdGggcHJvZmVzc2lvbmFscyBzdWNoIGFzIHBoeXNpY2lhbnMsIG9zdGVvcGF0aHMsIGNoaXJvcHJhY3RvcnMgYW5kIGRlbnRpc3RzLiAKVGhhdCBpcyB3aGF0IEkgd291bGQgZG8gd2l0aCB0aGF0IGhvdGVsIGluc3RlYWQgb2YgdHVybmluZyBpdCBpbnRvIGxvdyBpbmNvbWUgYXBhcnRtZW50cy4gRXNjYW5hYmEgbmVlZHMgdG8gZ2V0IHNvbWUgdG91cmlzdHMgaW4gYW5kIGdldCBzb21lIG1vbmV5IGZsb3dpbmcuLiAKSW4gZW5jbGF2ZXMgd2UgY2FuIGFmZm9yZCB0byBzZWdyZWdhdGUgb3VyIHNvY2lhbCBncm91cHMgYnkgd2hpY2ggY291bnRyeSBvciByZWdpb24gd2UgY2FtZSBmcm9tLiBJIGVuY291bnRlcmVkIHBlb3BsZSB3aG8gd2lsbCB0YWtlIGFkdmFudGFnZSBhbmQgZm9zdGVyIGEgZmFsc2Ugc2Vuc2Ugb2Yga2luc2hpcCBiYXNlZCBvbiBzaGFyZWQgaGVyaXRhZ2UuIApUcmluaXR5IEx1dGhlcmFuIENodXJjaCBpcyBvbmUgb2YgdGhlIGZhc3Rlc3QgZ3Jvd2luZyBjaHVyY2hlcyBpbiB0aGUgc3lub2Qgb2YgdGhlIE5vcnRod2VzdC4gU2luY2UgaXRzIG9yZ2FuaXphdGlvbiBpbiAxOTQzIHdpdGggMTE4IGNvbmZpcm1lZCBtZW1iZXJzLCBpdCBoYXMgZ3Jvd24gdG8gYSBwcmVzZW50IGNvbmZpcm1lZCBtZW1iZXJzaGlwIG9mIDcwOC4gClByb3RlaW4gY2hhbmdlIHRoZW9yeSBwb3N0dWxhdGVkIHRoYXQgZm9yIHRoZSBoaWdoZXIgcHJvdGVpbiBncm91cCwgdGhlcmUgbXVzdCBiZSBhIHN1ZmZpY2llbnQgY2hhbmdlIGZyb20gYmFzZWxpbmUgZy9rZy9kYXkgcHJvdGVpbiBpbnRha2UgdG8gZHVyaW5nIHN0dWR5IGcva2cvZGF5IHByb3RlaW4gaW50YWtlIHRvIHNlZSBtdXNjbGUgYW5kIHN0cmVuZ3RoIGJlbmVmaXRzLgpUaGVWR2FtZXIgIDEwIHBvaW50cyAgc3VibWl0dGVkIDMgeWVhcnMgYWdvCkhlcmUgYXJlIDEwIHRpcHMgd2hlbiBnYW1ibGluZyBvbmxpbmUuIEV2ZW4gdGhvdWdoIGdhbWJsaW5nIGNhbiBiZSBkb25lIG9ubGluZSwgaXQgZG9lc24gbWVhbiB5b3UgY2FuIGVzY2FwZSB0aGUgbGF3IG9mIHNvY2lldHkuIApUaGUgQ2hhcmFjdGVyaXN0aWNzIG9mIGEgU3VjY2Vzc2Z1bCBPbmxpbmUgUG9rZXIgUGxheWVyCkkgYXNrZWQgaGltIGFib3V0IHRoZSB3aXNkb20gb2YgdGhpcywgYW5kIGhlIGNvbW1lbnRlZCAoYW5kIEkgcGFyYXBocmFzZSk6ICJJIHN1cHBvc2UgdGhlIHF1ZXN0aW9uIGlzIHdoZXRoZXIgYSA3MCB5ZWFyIG9sZCBzaG91bGQgaWRlYWxseSBoYXZlIHRoZSBESEVBIGxldmVscyBvZiBhIHR5cGljYWwgNzAgeWVhciBvbGQsIG9yIHBlcmhhcHMgYSB0eXBpY2FsIDMwIHllYXIgb2xkLiIKVGhlIGxhc3QgdGltZSBoZSBsZWZ0IChvbiBhIFdlZG5lc2RheSkgaXQgd2FzIE1vbmRheSB3aGVuIHNoZSBzYWlkICJJIHNob3VsZCBjaGVjayBvbiB0aGUgaG91c2UuIiBNZTogdXV1aGhoIGhhdmUgeW91IE5PVCBiZWVuPyEuIApVbiBjb21wcm9taXMgc2VtYmxlIGF2b2lyIHQgdHJvdXYgcHVpc3F1ZSBsZXMgZ3JvcyBjYW1pb25zIChxdWkgbmUgcmVzdGVudCBwYXMgc3VyIHBsYWNlKSBwb3Vycm9udCBsaXZyZXIgIHBhcnRpciBkZSA0aCBtYWlzIHBhcyBhdmFudC4gClNvbWUgc21hbGxlciBjb21tdW5pdGllcyBoYXZlIHRvdXJuZXlzIHdpdGggYXJvdW5kICQzMDAgdG8gd2luIGFuZCBvbmx5IDE1MCBwbGF5ZXJzLiBJZiBZb3UgYXJlIGEgZ29vZCB0b3VybmFtZW50IHBsYXllciB0aGVuIFlPdSBjYW4gc3RhcnQgYSBmcmVlIHBva2VyIGJhbmtyb2xsIGJ5IG9ubHkgcGxheWluZyBmcmVlIHBva2VyIHRvdXJuYW1lbnRzLiBUaGVyZSBhcmUgYWxzbyBzb21lIGFsbCBmcmVlIHBva2VyIHNpdGVzIHRoYXQgb2ZmZXIgdG91cm5hbWVudHMgZWl0aCB3aXRoIHByaXplcyBvciBjYXNoIHByaXplcy4gCkNsYXJpbmV0IHBsYXllcnMgY2FuIHZlcnkgZWFzaWx5IHN3aXRjaCB0byBzYXhvcGhvbmUgbGF0ZXIgKHNlZSBiZWxvdykuIEl0IGlzIGdlbmVyYWxseSByZWNvbW1lbmRlZCB0aGF0IGlmIGEgY2hpbGQgd2FudHMgdG8gbGVhcm4gc2F4b3Bob25lLCB0aGV5IHNob3VsZCBzdGFydCBieSBsZWFybmluZyBjbGFyaW5ldCBhbmQgbm90IHN3aXRjaCB0byBzYXggdW50aWwgdGhleSBhcmUgYmlnIGVub3VnaCB0byBob2xkIGl0LCBhdCBhcm91bmQgYWdlIDEzIG9yIDE0Li4gCk5vdywgYm90aCBvZiB0aGVzZSB0eXBlcyBvZiB0ZWxlZ3JhcGhzIGhhZCBiZWVuIGFyb3VuZCBmb3IgYSBzY29yZSBvciB0aHJlZSBvZiB5ZWFycywgYnV0IGp1c3QgZm9yIHRoZSBwbGF5IG9mIGl0IEkgY2hlY2tlZCBvdXQgdGhlICJlbGVjdHJvbWFnbmV0aWMgdGVsZWdyYXBoIiBvbiBwYWdlIDEwNi4gCk1pYW1pIERvbHBoaW5zIFJlbGVhc2UgUmVjZWl2ZXIgRGFubnkgQW1lbmRvbGEKRXZlbiB0aG91Z2ggaXQgd2Fzbid0IGluIGhpcyBvcmlnaW5hbCBwbGFucywgUGVyY2hlcyBldmVudHVhbGx5IHdvcmtlZCBoaXMgd2F5IHVwIHRvIHRoZSAyMDA2IFdvcmxkIFNlcmllcyBvZiBQb2tlciBhbmQgd29uIHRoZSBmaXJzdCBXU09QIEJyYWNlbGV0IGluIE1leGljbydzIGhpc3RvcnkuIApUaGlzIHNoaXQgaXNuJ3QgRk83NiBvciBEMi4gClNvbWUgdGhlcmFwaXN0cyBJIGtub3cgdGFrZSB0aGVpciBzb2FwIG5vdGVzIGhvbWUgdG8gZmlsbCBvdXQgYmVjYXVzZSBpdCdzIHRvbyBidXN5IHRoYXQgZGF5LiBJIHVuZGVyc3RhbmQgdGhlIGltcG9ydGFuY2UgYXMgd2VsbCwgYnV0IHRoYXQgTVQganVzdCBkaWQgdGhlIHdvcmsgdGhleSdyZSBwYWlkIHRvIGRvLiAKV2l0aCBoZXIgZGFkIGdvbmUsIGFsbCBzaGUgaGFkIHdhcyBwc3ljaG8gbW9tIGluIHNvbWUgb2YgaGVyIG1vc3QgZGV2ZWxvcG1lbnRhbCB5ZWFycy4gSXQncyBubyB3b25kZXIgdGhhdCBMeWRpYSdzIG1lbW9yaWVzIHdlcmUgc2NyZXdlZCB3aXRoIGFuZCBoZXIgc2VsZiB3b3J0aCBkaW1pbmlzaGVkLiAKSWYgeW91IHJ1biBhIG5vbmZyZWUgcHJvZ3JhbSBvbiB5b3VyIGNvbXB1dGVyLCBpdCBkZW5pZXMgeW91ciBmcmVlZG9tOyB0aGUgbWFpbiBvbmUgaGFybWVkIGlzIHlvdS4gWy5dCk1vc3Qgbm90ZWQgZm9yIHByb2R1Y2luZyBMYWR5IEdhZ2EncyBoaXQgIlBva2VyIEZhY2UiIGFsb25nIHdpdGggb3RoZXIgYXJ0aXN0cyBzdWNoIGFzIFBpdGJ1bGwsIEVucmlxdWUgSWdsZXNpYXMsIE5pY2tpIE1pbmFqLCBKZW5uaWZlciBMb3BleiwgYW5kIEJyaXRuZXkgU3BlYXJzLCBSZWRPbmUgd2lsbCBjbyBob3N0IHRoZSBldmVudCBob3Qgb2ZmIGhpcyBESiBFeHBvIGtleW5vdGUgUSBlYXJsaWVyIHRoYXQgZGF5LiBKb2luaW5nIFJlZE9uZSB3aWxsIGJlIFBlYXZleSBhcnRpc3QgYW5kIERKIEtlaXRoIFNob2NrbGVlL1dpemFyZCBLIEplZS4gQXMgYW4gb3JpZ2luYWwgbWVtYmVyIG9mIFB1YmxpYyBFbmVteSBhbmQgVGhlIEJvbWIgU3F1YWQsIFNob2NrbGVlIGNvbnRyaWJ1dGVkIGhpcyB0YWxlbnQgdG8gc2V2ZXJhbCBjcml0aWNhbGx5IGFjY2xhaW1lZCBhbGJ1bXMgYW5kIGNvIHByb2R1Y2VkIGhpdCBzaW5nbGVzIHN1Y2ggYXMgIkJyaW5nIHRoZSBOb2lzZSIgYW5kICJGaWdodCB0aGUgUG93ZXIsIiBib3RoIG9mIHdoaWNoIHdlcmUgcmFua2VkIG9uIFJvbGxpbmcgU3RvbmUncyBsaXN0IG9mIDUwMCBHcmVhdGVzdCBTb25ncyBvZiBBbGwgVGltZS4KV2UgYWxyZWFkeSBoYXZlIGEga2lja2FzcyBhbmQgbWlsaXRhcml6ZWQgQ0JQLiBUaGUgYnVyZWF1IG9mIElDRSBpcyBhbHJlYWR5IHNvdXBlZCB1cCB0byAxMS4gCkphcGFuZXNlIFJvYm90IENyYXplQmFjayBpbiB0aGUgMTk3MHMsIGl0IHdhcyBlYXN5IGZvciB0aGUgIlNpeCBNaWxsaW9uIERvbGxhciBNYW4sIiBTdGV2ZSBBdXN0aW4sIHRvIHNwb3QgYSByb2JvdGljIHBlcnNvbiAgIG9yIGEgZmVtYm90IGFzIHRoZSBoaXAgc2NpIGZpIHNob3cgY2FsbGVkIHRoZW0uIApBdCB0aGUgbG93ZXIgbGltaXRzLCBwb3NpdGlvbiBpcyBub3QgbmVhcmx5IGFzIGltcG9ydGFudCBpbiBPbWFoYS84IGFzIGl0IGlzIGluIEhvbGQnZW0uIFdoaWxlIGl0IGlzIG5pY2UgdG8gYWN0IGxhc3QsIGl0IGNhbiBiZSBhbG1vc3QgYXMgZ29vZCB0byBhY3QgZmlyc3QsIGFuZCBldmVuIGFjdGluZyBiZXR3ZWVuIHBsYXllcnMgaXMgbm90IGFzIGJhZCBhcyBkb2luZyBzbyBpbiBIb2xkJ2VtLiBEdWUgdG8gdGhlIG1vcmUgc3RyYWlnaHRmb3J3YXJkIHdheSBPbWFoYS84IHBsYXlzIGFuZCB0aGUgZmFjdCB0aGF0IHlvdSBzaG91bGQgaGF2ZSBhIHZlcnkgZ29vZCBpZGVhIG9mIHlvdXIgY2hhbmNlcyB0byB3aW4gYWZ0ZXIgdGhlIGZsb3AsIHlvdSBzaG91bGQgYmUgYWJsZSB0byBwbGF5IGFsbW9zdCBhbnkgaGFuZCB5b3UgZGVjaWRlIHRvIHBsYXkgaW4gYW55IHBvc2l0aW9uLiAKSm9obiBQYXJtZXRlciB0b2xkIHBvbGljZSBhYm91dCBGYXRoZXIgQnJvY2sgYmVpbmcgYSByZWd1bGFyIGZhbWlseSBndWVzdCwgYW5kIGhvdyBoaXMgcGFyZW50cyBvcmdhbmlzZWQgZm9yIHRoZSBwcmllc3QgdG8gcHJvdmlkZSBwZXJzb25hbCBtdXNpYyB0cmFpbmluZyBmb3IgdGhlaXIgY2hpbGRyZW4gYXQgdGhlIHByZXNieXRlcnkuIEZhdGhlciBCcm9jayBhbHNvIGJlY2FtZSBhIGRyaW5raW5nIGFuZCBjYXJkIHBsYXlpbmcgcGFydG5lciBmb3IgUm9uIFBhcm1ldGVyLCBKb2huIFBhcm1ldGVyIHRvbGQgcG9saWNlLiAKSSB1bmRlcnN0YW5kIHRoaXMgaXMgbm90IHJlcHJlc2VudGF0aXZlIG9mIHRoZSB3b3JsZCB3aWRlIHNpdHVhdGlvbiwgYnV0IGluIE5ldyBaZWFsYW5kIHlvdSBzaW1wbHkgY2Fubm90IGJ1eSBhbiBlbGVjdHJpYyBjYXIgYXQgYWxsLCB1bmxlc3MgaXQgaXMgYSBUZXNsYSBNb2RlbCBTL1ggb3IgYSB1c2VkIGltcG9ydCBMZWFmIGZyb20gSmFwYW4uIEluIHRoZSBsYXN0IG1vbnRoIEkgaGF2ZSBpbnF1aXJlZCBhYm91dCBhIEh5dW5kYWkgS29uYSBFVjsgInByb2JhYmx5IHdpbGxnZXQgYWJvdXQgMzAgdGhpcyB5ZWFyICAgYWxsIHNvbGQgYWxyZWFkeSIuIApQYXMgZGUgbm9uLCBwYXMgZCdlbnNlaWduZSBsdW1pbmV1c2UsIGV0IHN1ciBwbGFjZSBwYXMgZGUgbm9tIHF1aSBhdHRpcmUgbm90cmUgcmVnYXJkLiAKQWdhaW4sIEkgZ2V0IHlvdSBkb24gaGF2ZSB0byB1c2UgaG9va3MsIG15IHBvaW50IGlzIHRoZSBnZW5lcmFsIGRpcmVjdGlvbiBvZiByZWFjdC4KU2luY2UgdGhleSBjaGVjayBjYWxsZWQgZmxvcCBhbmQgdHVybiwgaXQgdW5saWtlbHkgdGhleSBhcmUgaG9sZGluZyBhIGhhbmQgbGlrZSA3NnMgb3IgOTkuIFNpbmNlIG5vIGhhbmRzIGZyb20gdGhlaXIgY2hlY2sgY2FsbCBmbG9wIGFuZCBjaGVjayBjYWxsIHR1cm4gcmFuZ2UgaW1wcm92ZSB0byBiZWF0IEtpbmdzLCB3ZSBoYXZlIDEwMCUgZXF1aXR5IGFnYWluc3QgdGhlaXIgc2hvdmUgYW5kIHdhbnQgdG8gY2FsbCBhbGwgZGF5Li4gClNvIG15IG9sZGVyIGJyb3RoZXIgaGFzIGEgZnJpZW5kIHRoYXQgd2UgZ3JldyB1cC4gClNvLCB3aGVuIHRoZSB0aW1lIGNvbWVzIHlvdSBoYXZlIGZpbmFsbHkgZGVjaWRlZCB0byBwbGF5IHBva2VyIG9ubGluZSBvciBpbiBhIGxpdmUgcG9rZXIgcm9vbSBpbiB0aGUgY2FzaW5vLCB0cnkgdG8gdGhpbmsgb2Ygd2F5cyBob3cgdG8gbWFuYWdlIHlvdXIgcG9rZXIgbW9uZXkuIEFmdGVyIGFsbCwgdGhvc2UgY2hpcHMgYXJlIG5vdCBqdXN0IHBsYWluIHBsYXN0aWNzLiBQb2tlciBtb25leSBpcyBleGFjdGx5IHRoZSByZWFzb24gd2h5IHlvdSBoYXZlIHBsYXllZCBwb2tlciBpbiB0aGUgZmlyc3QgcGxhY2UuLiAKSGF1bGVycyB1c3VhbGx5IGhhdmUgaHlwZXJkcml2ZSBib251c2VzLCBzbyB1cGdyYWRlcyBoZXJlIHByb3ZpZGUgZGVjZW50IHdhcnAgcmFuZ2VzIGlmIHlvdSB3YW50IHRvIHVzIGl0IHRoYXQgd2F5LiBCdXQgaWYgeW91IGFkZCB0b28gbWFueSB0aGluZ3MgeW91IHdpbGwgaGF2ZSBubyBzcGFjZSBmb3IgY2FyZ28sIGFuZCB0aGF0IGRlZmVhdHMgdGhlIHJlYXNvbiBmb3IgYnV5aW5nIG9uZS4uIApOb3RoaW5nIHN0b3BzIHRoZSBvd25lcnMgZnJvbSBvbmUgZGF5IGRlY2lkaW5nIHRvIHRocm93IG1lIG91dCBhbmQgSSBjYW4gZXZlbiBmaWdodCB0aGVtPyBUaGF0IHNhaWQsIHRoZXJlIGFyZSBzb21ldGhpbmcgbGlrZSA5MDAgaXNsYW5kcy4gCkhvdyB5b3Ugd2lsbCBwZXJmb3JtIFRoZSBzdGF0ZSBvZiBUZXhhcyBob2xkZXIgb25saW5lIGhhcyB0aW55IHdpdGggcmVnYXJkcyB0byB0aGUgcmVzdWx0aW5nIGVuZCByZXN1bHQsIGV2ZXIgc2luY2UgdGhlIHdlYnNpdGUgaGF2ZSB0byBoYXZlIGEgcGFydGljdWxhciB3ZWxsIGJhbGFuY2VkIHNpbmNlcml0eSB0b3dhcmQgdGhvc2UgbnVtZXJpY2FsIGNoYW5jZXMuIApMZXNsZXkgYW5kIERvbm55IE1jRWxoaW5leSdzIGhvbWUgaW4gQXBwbGV0b24sIFdpc2NvbnNpbiwgd2Fzbid0IHRoZSBzYW1lIGFmdGVyIHRoZWlyIG9uZSB5ZWFyIG9sZCB0YWJieSBFbWlseSBkaXNhcHBlYXJlZC4gQnV0IHNoZSBkaWRuJ3QganVzdCBkaXNhcHBlYXIsIHNoZSB3ZW50IG9uIGEgNCw1MDAgbWlsZSBhZHZlbnR1cmUhIEl0IHNlZW1zIEVtaWx5IHdhcyBvbiBoZXIgZXZlbmluZyBwcm93bCB3aGVuIHNoZSBmb3VuZCBoZXJzZWxmIG9uIGEgdHJ1Y2sgdG8gQ2hpY2FnbyBpbnNpZGUgYSBjb250YWluZXIgb2YgcGFwZXIgYmFsZXMuIEZyb20gdGhlcmUgc2hlIHdhcyBzaGlwcGVkIHRvIEJlbGdpdW0sIGZpbmFsbHkgYXJyaXZpbmcgaW4gRnJhbmNlIHdoZXJlIGVtcGxveWVlcyBhdCBhIGxhbWluYXRpbmcgY29tcGFueSBmb3VuZCBoZXIgdGhpbiBhbmQgdGhpcnN0eS4gCk9yYW5nZSBDb3VudHkgRGlzdHJpY3QgQXR0b3JuZXkKV2hlbiBzb21lb25lIGlzIGxvb2tpbmcgZm9yIGEgcHJvdGVjdG9yLCBoZSBpcyBkZWZpbml0ZWx5IHdvcnJpZWQgYWJvdXQgdGhlIHNhZmV0eSBvZiBoaXMgcHJvZHVjdC4gSWYgeW91IGFyZSBjb25mdXNlZCB3aGF0IEkgYW0gdGFsa2luZyBhYm91dCwgbGV0IG1lIG1ha2Ugc3VyZSBvbmUgdGhpbmcsIHdlIGFsbCBhcmUgdGFsa2luZyBhYm91dCBhIHNpbmdsZSB0aGluZyBwb2tlciBhbmQgdGhlIHByb3RlY3RvcnMgYXNzb2NpYXRlZCB3aXRoIHRoZSBnYW1lIG9mIHBva2VyLiBBcm91bmQgdGhlIHdvcmxkLCB5b3Ugd2lsbCBmaW5kIGFsbCB0aGUgY2FzaW5vcyBmaWxsZWQgdXAgd2l0aCBwbGF5ZXJzIHdobyBhcmUgaW50ZXJlc3RlZCBpbiBwbGF5aW5nIHBva2VyLiAKUmlsZXkgYW5kIGogYW5kIE1ycy4gRHdyZmdoZmMgU3RyYXVzYmF1Z2ggYW5kIEJlYXRyaWNlLCBNci4gClRob3NlIGNoYW5nZXMgYmVjYW1lIGVmZmVjdGl2ZSBmb3IgMjAxNiwgd2hlbiB0aGUgZ292ZXJubWVudCBjdXQgdGhlIHRheCByYXRlIG9uIHRoZSBtaWRkbGUgaW5jb21lIGJyYWNrZXQgdG8gMjAuNSBwZXIgY2VudCBmcm9tIDIyIHBlciBjZW50IChmb3IgMjAxOSBpbmNvbWUgYmV0d2VlbiAkNDcsNjI5IHRvICQ5NSwyNTkpIGFuZCBpbnRyb2R1Y2VkIHRoZSAzMyBwZXIgY2VudCBoaWdoIGluY29tZSBicmFja2V0IChmb3IgaW5jb21lIGFib3ZlICQyMTAsMzcxIGluIDIwMTkpLiAKSSdtIGJ1eWluZyBhIE1CUCBoZXJlOyBwZXJmb3JtYW5jZSBpcyBub3QgbXkgdG9wIHByaW9yaXR5LiAKQW5kIGl0IHBvc3NpYmxlIHRvIHVubGVhcm4gdGhlIGRhbWFnaW5nLCBub24gY29uc3RydWN0aXZlIGNvcGluZyBtZWNoYW5pc21zIGFuZCBwYXR0ZXJucyB0aGF0IHRyYXVtYSBpbnN0aWxscy4gTGlrZSBraW50c3VnaSwgdGhlIHBvaW50IG9mIHRoZXJhcHkgaXMgbm90IHRvIGVyYXNlIHRoZSBkYW1hZ2UsIGJ1dCB0byByZXBhaXIgaXQsIGFuZCB0byBsZWFybiB0byBhcHByZWNpYXRlIHRoZSB0aGluZyBmb3Igd2hhdCBpdCBpcywgY3JhY2tzIGFuZCBhbGwuIEFuZCB0aGVyYXB5IGRvZXMgaGVscC4gClRoYXQncyBpbXBvcnRhbnQgdG8gY29uc3VtZXJzIGxpa2UgU29waGkgUm9iZXJ0c29uIG9mIFRvcm9udG8sIHdobyBoYXMgYmVlbiBzdHJpdmluZyB0byBwcm9kdWNlIHplcm8gd2FzdGUgc2luY2UgMjAxNi4KSSB3YWxrZWQgaW50byB0aGUgcm9vbSB3aXNoaW5nIHRoYXQgSSBoYWQgc29tZXRoaW5nIGluIG15IGhhbmQgdG8gc3RyaWtlIHdpdGgsIGlmIG5lZWQgYmUsIGFuZCBpbiB0aGF0IGRyZWFtbGlrZSB3YXksIEkgc3VkZGVubHkgd2FzIGhvbGRpbmcgYSBibGFjayBsZWF0aGVyIHJpZGluZyBjcm9wLiAKU3VzdGFpbmVycyBhcmUgY3J1Y2lhbCB0byBwcm92aWRpbmcgYW4gb25nb2luZyBiYXNlIG9mIGNvbW11bml0eSBzdXBwb3J0IHRoYXQgd2UgY2FuIHJlbHkgb24sIHNvIHlvdSBjYW4gY29udGludWUgdG8gcmVseSBvbiBNUFIuIFN1c3RhaW5pbmcgTWVtYmVyc2hpcHMgc2F2ZSBvbiBwYXBlciBhbmQgcG9zdGFnZSwgc2luY2Ugd2UgZG9uJ3QgbmVlZCB0byBzZW5kIGxldHRlcnMgdG8gcmVtaW5kIHlvdSBhYm91dCB5b3VyIHJlbmV3YWwgZGF0ZS4gQXMgYSByZXN1bHQsIG1vcmUgb2YgeW91ciBtZW1iZXIgZG9sbGFycyBnbyB0byBwcm9ncmFtbWluZy4gCkkgZ3JlZXQgcGVvcGxlIHdobyBzaXQgZG93biwgSSB0cnkgdG8gbWFrZSBhIGJpdCBvZiBjb252ZXJzYXRpb24gYW5kIGhhdmUgZnVuLiBPbiB0aGUgb3RoZXIgaGFuZCwgd2hlbiB5b3UgcGxheSBwb2tlciAyMDAwKyBob3VycyBhIHllYXIsIGl0J3Mgd29yay4gCkFwcHJvcHJpYXRlbHkgZW5vdWdoLCB0aGUgaWRlYSBmb3IgdGhlIHNob3cgY2FtZSBmcm9tIGEgam9rZSBtYWRlIGluIGEgZGFyayBzaXR1YXRpb24uIApFdmVuIHdoZW4gSSB0aGluayBhYm91dCB3aGF0IFdpbmRzb3IgaXMgaXQgYW4gYW1hbGdhbWF0aW9uIG9mIGZpdmUgb3Igc2l4IHRvd25zIHNvIGFsbCBvZiB0aG9zZSBwbGFjZXMgaGF2ZSBzdG9yaWVzIHRvIHRlbGwsIHNhaWQgTW9ycmlzLiAKTGVzIHRlbXB1cmEgOiBub3VzIHNvbW1lcyB0b21icyBwYXIgaGFzYXJkICBOYWdveWEgc3VyIHVuIGRsaWNpZXV4IHJlc3RhdXJhbnQgZGUgdGVtcHVyYSBvIGwnb24gcydlc3QgcmdhbHMgZCd1bmUgc3VjY2Vzc2lvbiBmaW5lIGV0IGNyb3VzdGlsbGFudGUuIEonYWkgYXVzc2kgbWFuZyBkZXMgYXNzb3J0aW1lbnRzIGRlIHRlbXB1cmEgZGUgbGd1bWVzIGF2ZWMgZGVzIHNvYmEuCkEgb24gdGhlIGJsdWUgcGF0Y2guIDggTWFyIDIwMTIgLiAKRmF0ZS9FWFRSQSBDQ0MsIGlzIGRpZmZpY3VsdCBvbmUgYmVjYXVzZSB3aGljaCBvbmUgc2VydmFudCBpcyBnb2luZyB0byBiZSBmZWF0dXJlZCBmb3IgdGhlIHJlcnVuIHZlcnNpb24sIHdoZXRoZXIgaXQgZ29pbmcgdG8gYmUgb25lIG9mIHRoZW0gb3IgdGhyZWUgQWx0ZXIgRWdvcyAoS2F6dXJhZHJvcCwgS2luZ3Byb3RlYSBhbmQgVmlvbGV0KSBmcm9tIENDQyBGb3h0YWlsLCBvciBkaWZmZXJlbnQgY2hhcmFjdGVyIGZyb20gc2FtZSBzZXJpZXMgdGhhdCB3ZSByZWNvZ25pemUsIG1pZ2h0IGJlIGVuZGVkIHVwIGFzIFNSIHNlcnZhbnQgYXMgd2VsbC4gSWYgeW91IGFzayBtZSB0aGF0ICJJZiBBbHRlciBFZ29zIGFyZW4gdG8gYmUgaW1wbGVtZW50ZWQgaW4gQ0NDIHJlcnVuLCB0aGVuIHdobyB0aGV5IGFyZT8iLCBteSBhbnN3ZXIgaXMgd291bGQgYmUgUmFuaSBWSUlJIG9yIEhha3VubyBLaXNoaW5hbWkuIEFsdGhvdWdoIEkgdGhpbmsgaXQgaXMgd29ydGggbWVudGlvbmluZyB0aGF0IGludHJvZHVjZSBuZXcgVGFtYW1vIG1lbWJlcnMgaXMgc291bmRzIHBsYXVzaWJsZSBpZGVhLCBzaW5jZSBFWFRSQSBDQ0MgaXMgdGhlIHNlcmllcyBpbnRyb2R1Y2VzIHRoZSBjb25jZXB0IG9mIFRhbWFtbyBOaW5lIGZvciB0aGUgZmlyc3QgdGltZS4KVHJhZGl0aW9uYWxseSwgcGVvcGxlIGFsc28gZmFzdGVkIGZyb20gZW50ZXJ0YWlubWVudCB0b28gIGluY2x1ZGluZyBsaXN0ZW5pbmcgdG8gbm9uIGNodXJjaCBtdXNpYy4gCiJKb2huIE8nU2hlYSBoYWQgbGl2ZWQgaGVyb2ljYWxseSBpbiBhIGNvdW50cnkgdGhhdCBkb2Vzbid0IGFsd2F5cyBrbm93IGhvdyB0byB0cmVhdCBpdHMgaGVyb2VzLiIKSW4gcmVjZW50IHdlZWtzLCBTYWJlYW4gaGFzIGFscmVhZHkgY2hhbmdlZCBoaXMgdHVuZSBmcm9tOiB3b24gdHJhZGUgb3VyIHlvdW5nIHBpdGNoaW5nIHRvIG1pZ2h0IGhhdmUgdG8gdHJhZGUgb3VyIHlvdW5nIHBpdGNoaW5nIHRvIGdldCBzb21lIGhpdHRpbmcuIEl0IHNvdW5kcyBsaWtlIGxvdHMgb2YgdGVhbXMgd2lsbCBjb250aW51ZSB0byBjYWxsIGFuZCBhc2sgZm9yIFNhbmNoZXosIGFzIHdlbGwgYXMgQ2FpbiBhbmQgTGluY2VjdW0uIFNhbmNoZXogcG90ZW50aWFsIHNlZW1zIHRvbyBnb29kIHRvIGdpdmUgdXAuIFRoZW4gYWdhaW4sIHdlIGRvIHNlZW0gdG8gaGF2ZSBhIGxvdCBvZiBsZWZ0aGFuZGVycyBpbiBaaXRvLCBMb3dyeSwgU2FuY2hleiBhbmQgTWlzY2guIFNub3cgcmVjZW50bHkgdHV0b3JlZCBUcmlwbGUgQSBvdXRmaWVsZGVyIERhbiBPcnRtZWllciBhdCBmaXJzdCBiYXNlLiBXaGF0IGEgdGVycmlmaWMgaWRlYS4gV2Ugc2VlbSB0byBoYXZlIGEgbG9nIGphbSBvZiBvdXRmaWVsZCBwcm9zcGVjdHMgbGlrZSBOYXRlIFNjaGllcmhvbHR6IGFuZCBDbGF5IFRpbXBuZXIgaW4gVHJpcGxlIEEsIG5vdCB0byBtZW50aW9uIEZyZWQgTGV3aXMgYW5kIFJhamFpIERhdmlzIGZpZ2h0aW5nIGZvciBwbGF5aW5nIHRpbWUgb24gdGhlIGJpZyBjbHViLiBCdXQgdGhlcmUgbm90IG11Y2ggYXQgZmlyc3QgYmFzZS4gKEFueW9uZSBub3RpY2UgZmlyc3QgYmFzZSBwcm9zcGVjdCBUcmF2aXMgSXNoaWthd2EsIGxhc3QgeWVhciB3b25kZXJib3kgd2hvIGhpdCAuMjkyIGluIDEyIGdhbWVzIHdpdGggU2FuIEZyYW5jaXNjbyBsYXN0IHllYXIsIHdhcyBkZW1vdGVkIHRvIFNpbmdsZSBBIHRoaXMgeWVhcj8gWXVwLiBJbiBEb3VibGUgQSBDb25uZWN0aWN1dCwgaGUgaGl0IC4yMTQgaW4gMTczIGF0IGJhdHMsIHN0cmlraW5nIG91dCA0OCB0aW1lcy4gQXQgbGVhc3QgaGUgcmVnYWluZWQgaGlzIHN0cm9rZSBpbiBTaW5nbGUgQSBTYW4gSm9zZSwgaGl0dGluZyAuMzA4LikKSXQgY2FudmFzZXMgcG9rZXIga25vd2xlZGdlIGZvciB0aGUgbGFzdCB0d2VudHkgeWVhcnMsIGFuZCB1bmVhcnRocyBzb21lIG9mIHRoZSBiZXN0IGtlcHQgc2VjcmV0cyBpbiBzdHJhdGVneSB0aGF0IGFyZSB1c2VkIGluIHRoZSB0b3AgcG9rZXIgdG91cm5hbWVudHMuLiAKUGxheXMgdGhlaXIgZ2FtZXMuIFNpbmNlIHBsYXllcnMgYXJlIGFsbW9zdCBuZXZlciBwcm9zZWN1dGVkIGVpdGhlciwgd2UncmUgbGVmdCB3aXRoIGFuIGlsbGVnYWwgYWN0IHRoYXQgZ2VuZXJhbGx5IGdvZXMgdW5wdW5pc2hlZC4gCkhlcmUgd2Ugc2hvdyB0aGF0LCBhZ2FpbiB0aGUgY2xhc3NpYyBleGNpdGF0b3J5IGVmZmVjdHMgb2YgdW5pbGF0ZXJhbCB0Uk5TIGRvIG5vdCBleHRlbmQgdG8gdGhlIGJpbGF0ZXJhbCBzdGltdWxhdGlvbiBwcmVmZXJyZWQgaW4gZW5oYW5jZW1lbnQgZXhwZXJpbWVudHMuIApUaGUgdHJlZSBoaXQgbXkgY2FyLCBub3QgdGhhdCBJIGhpdCB0aGUgdHJlZSB3aXRoIG15IGNhci4gCkNFTyBOZWlsIEJydWNlLCB3aG8gYXNzdW1lZCBsZWFkZXJzaGlwIGluIDIwMTUsIGhhcyByZXBlYXRlZGx5IHNhaWQgdGhlIG9yZ2FuaXphdGlvbiBoYXMgdHVybmVkIG92ZXIgYSBuZXcgbGVhZiwgYW5kIHRoYXQgYSBwcm9zZWN1dGlvbiBhdCB0aGlzIGRhdGUgd291bGQgb25seSBwdW5pc2ggZW1wbG95ZWVzLiBPbmUgdGhpcmQgb2YgU05DIExhdmFsaW4gJDkuMyBiaWxsaW9uIGluIHJldmVudWVzIGluIDIwMTcgY2FtZSBmcm9tIENhbmFkYSwgZG93biBmcm9tIHJvdWdobHkgNjAgcGVyIGNlbnQgb2YgcmV2ZW51ZSBpbiAyMDE0LiBBbmFseXN0cyBlc3RpbWF0ZSB0aGF0IHVwIHRvIG9uZSBoYWxmIG9mIGhvbWUgdHVyZiByZXZlbnVlcyBzdGVtIGZyb20gZmVkZXJhbCBjb250cmFjdHMuLiAKTGFkeSBHYWdhIGxpc3Qgb2Ygc29uZ3M/CkEgYmV0dGVyIHVzZSBvZiBteSByZXNvdXJjZXMgd291bGQgaGF2ZSBiZWVuIHRvIGtlZXAgYSBjZXJ0YWluIHBlcmNlbnRhZ2Ugb2YgY2FzaCBhbHdheXMgYXZhaWxhYmxlIGFuZCBkZXBsb3kgaXQgZHVyaW5nIHRpbWVzIG9mIG1hcmtldCB1bmNlcnRhaW50eS4gRWFzeSB0byBzYXksIGJ1dCwgaW4gcHJhY3RpY2UsIGRpZmZpY3VsdCB0byBkby4gVGhpcyBpcyBlc3BlY2lhbGx5IHRydWUgd2hlbiAoYXMgSSBhbSkgeW91IGFyZSB0cnlpbmcgdG8gYnJvYWRlbiB5b3VyIHBvcnRmb2xpby4gClBlcmhhcHMgcmVhZCBpdCBsaWtlIHlvdSBzYWlkIHlvdSB3b3VsZD8gWW91IGNhbiByZWFkIGFsbCB0aG9zZSBleGFtcGxlcyB0aGVyZS4gCkhlIHdhc24gb3Zlcmx5IGxhcmdlIG9yIHBoeXNpY2FsbHkgaW50aW1pZGF0aW5nLCBoZSB3YXMganVzdCBhIG1hbiB3aXRoIGEga25pZmUuIFdhcmxvY2sgcGVyZm9ybWFuY2UgdHVybnMgaGltIGludG8gc29tZXRoaW5nIGVsc2UsIHNvbWV0aGluZyBzdHJhbmdlbHkgcm9ib3RpYyBhbmQgYmVjYXVzZSB0aGUgc2Vjb25kIGZpbG0gZmVhdHVyZXMgYSBsb3QgbW9yZSAiY2hhc2luZyIgdGhhbiB0aGUgb3JpZ2luYWwgZGlkLCB0aGV5IHdheSBoZSBtb3ZlcyBtYWtlIGl0IGxvb2sgaW1wb3NzaWJseSBlYXN5LCBldmVuIHdpdGggYW4gaW5qdXJlZCBhbmtsZSwgdG8gZ2V0IGF3YXkgZnJvbSBoaW0sIHRodXMgbWFraW5nIGhpbSBsZXNzIGludGltaWRhdGluZy4uIApDcm9jcyBhcmUgY3V0ZSBpbiBhIFdURiBpcyBvbiB5b3VyIGNsb3duIGZlZXQga2luZGEgd2F5IGJ1dCBjYW1wIHNob2VzIGFyZSBhbm90aGVyIG15dGguIHknZG9udCBuZWVkIGVtLiBpZiB5b3UgbmVlZCB0byB0cm90IG91dCB0byB0aGUgcHJpdnkgYW5kIHlvdXIgZmVldCBhcmUgaW4gYWdvbnksIHRoZSBjcm9ja3MgYXJlbnQgYW55IGxlc3MgYWdvbnkuIHBsb3AgeW91ciBiYXJlIG1pc2VyYWJsZSBmZWV0IGludG8gdGhvc2UgY29sZCB3ZXQgaGFyZCBoaWtlcnMsIGdvIGRvIHlvdXIgYnVzaW5lc3MsIGFuZCBnZXQgYmFjayB0byBiZWluZyBiYXJlZm9vdCBhcyBzb29uIGFzIHlvdSBjYW4uIE9uIHRoZSBzdWJqZWN0IG9mIGZlZXQsIGEgd29yZCBhYm91dCBzaG9lcy4gdGhleXJlIHlvdXIgZmVldCBhbmQgeW91IGtub3cgYmVzdCBidXQgZG8geW91IHJlYWxseSBuZWVkIGFua2xlIHN1cHBvcnQgKGFub3RoZXIgbXl0aCkgQW55dGhpbmcgbGVzcyB0aGFuIGEgcmlnaWQgc2tpIGJvb3QgaXNudCBhY3R1YWxseSBwcm92aWRpbmcgYW55IGFua2xlIHN1cHBvcnQuIGl0cyBhbGwgaW4geW91ciBoZWFkIChzb21lb25lIGp1c3QgaGFkIGEgY29yb25hcnkgZnJvbSByZWFkaW5nIHRoYXQpLiBZb3Ugd2lsbCBoYXZlIHRvIHdhbGsgdGhyb3VnaCB3YXRlciBhbmQgeW91IHNob3VsZG50IGRvIHRoYXQgYmFyZWZvb3QuIG9uIHRoZSBvdGhlciBoYW5kLCBoZWF2eSBib290cyBhcmUgb3ZlcmtpbGwgdG9vLiBtb3N0IGhpa2VycyBoYXZlIG9wdGVkIGZvciB0cmFpbCBydW5uaW5nIHNob2VzIHdpdGggdGhlIGlkZWEgdGhhdCB0aGV5bGwgd2FsayB0aGVpciBmZWV0IGRyeSAoaW0gb25lIG9mIHRoZW0pLiBUaGUgdGhpbmcgaXMsIG1vc3QgdHJhaWwgcnVubmVycyBoYXZlIHNvbGVzIHRoYXQgYXJlIGEgbG90IHRoaW5uZXIgYW5kIHNvZnRlciB0aGFuIGJvb3RzIGFuZCB5b3UgbmVlZCB0byBnaXZlIHRoYXQgc29tZSBzZXJpb3VzIHRob3VnaHQuIHRoZXJlIGFyZSBNQU5ZIE1BTlkgTUFOWSBzZWN0aW9ucyBvZiBhbmtsZSBicmVha2luZyB0b2UgamFtbWluZyBhcmNoIHNwbGl0dGluZyByb2NrIGZpZWxkcyB3aGVyZSB3YWxraW5nIGluIHRyYWlsIHJ1bm5lcnMgY2FuIHRydWx5IGJlIGEgcGFpbmZ1bCBleHBlcmllbmNlLiBDb25zaWRlciB3aGF0IHlvdSBuZWVkLCB3aGF0IHlvdSB3YW50LCBhbmQgd2hhdCB5b3UgZG9udCBuZWVkLiBpbiBNRSBOSCBpIHdhcyBldmVyIHNvIGdsYWQgdG8gaGF2ZSBLZWVuIFRhcmdoZWVzIGJ1dCBieSBWVCBpIHJlYWxseSBhcHByZWNpYXRlZCB0aGUgQWx0cmEgTG9uZSBQZWFrIHRyYWlsIHJ1bm5lcnMuIEl0cyBhIG1hdHRlciBvZiBjb21wcm9taXNlcyBhbmQga25vd2luZyB5b3VyIGZlZXQgdG8gZmluZCB3aGF0cyBiZXN0IGZvciB5b3UuCkRpZCB0aGUgV2hhdHNBcHAgZ3JvdXBzIGFuZCB0cm9sbHMgd2hvIG1pc3Mgbm8gb3Bwb3J0dW5pdHkgdG8gcHJldGVuZCB0byBiZSB0aGUgdHJ1ZSBkZWZlbmRlcnMgb2YgdGhlIGluc3RpdHV0aW9uIGhhdmUgYW55IGF0dGFjayBvZiBjb25zY2llbmNlPyBOb25lIGNyZWF0ZWQgdGhlIGtpbmQgb2YgdXByb2FyIHRoYXQgdGhleSBoYXZlIGJlY29tZSBzbyBmYW1vdXMgZm9yLiBObyBvZmZpY2lhbCBUd2l0dGVyIGFjY291bnQgc3Bva2UgZm9yIHRoZSBtYW4uIE5vIG9mZmljaWFsIHdhcm5pbmcgY2FtZSBvdXQgZm9yIHRoZSBzbGFuZGVyZXIuIApQbGVhc2UgcmVtYWluIHNlYXRlZCBkdXJpbmcgdGhlIGZsaWdodCBhbmQgZG8gbm90IHNwZWFrIHRvIGFueSBwYXNzZW5nZXIsIGZsaWdodCBhdHRlbmRhbnQsIG9yIHBpbG90IG9uIHRoaXMgcGxhbmUuLiAKV2hlbiB0aGUgbW9uaXRvciBzaHV0IG9mZiwgdGhlIGNvbXB1dGVyIHdvdWxkIGZyZWV6ZSB1cCBhbmQgYmxhY2sgc2NyZWVuIGFuZCBiZSB1bmFibGUgdG8gdHVybiB0aGUgbW9uaXRvciBiYWNrIG9uIGZvciBzb21lIHJlYXNvbi4uIApJdCBpcyBub3QgYXQgYWxsIGNsZWFyIHRoYXQgIkdlbmRlciBJZGVudGl0eSBEaXNvcmRlciIgd2lsbCBiZSByZW1vdmVkIGZyb20gdGhlIG5leHQgRFNNLCBkdWUgaW4gMjAxMi4uIApTbyBzaGUgYW5kIHRoaXMgbWFzc2FnZSB0aGVyYXBpc3QgbGFkeSBlbmQgdXAgZ2V0dGluZyBwcmV0dHkgY2xvc2UsIHRoZXkgc3RyaWtlIHVwIGEgZnJpZW5kc2hpcCBzaW5jZSB0aGV5IHdlcmUgYXJvdW5kIHRoZSBzYW1lIGFnZSBhbmQgZ290IGFsb25nLiBVbnRpbCBtYXNzYWdlIHRoZXJhcGlzdCByZXZlYWxzIG9uZSBkYXkgdGhhdCBzaGUgaGFzIGJlZW4gZ2l2aW5nIGhhcHB5IGVuZGluZ3MgdG8gYSB0b24gb2YgdGhlIG1hbGUgY2xpZW50cyBzaGUgc2VlcyAobWFueSBvZiB3aG9tIGFyZSB0aGUgaHVzYmFuZHMgb2YgZmVtYWxlIGNsaWVudHMsIHRoZSB3b21lbiB3ZXJlIHNlbmRpbmcgdGhlaXIgaHVzYmFuZHMgaW4sIG5vdCByZWFsaXppbmcgdGhhdCB0aGlzIG1hc3NhZ2UgdGhlcmFwaXN0IHdhcyBnb2luZyB0byB0cnkgYW5kIGZ1Y2sgdGhlIG1lbiEpLiAKVGhlIGNlcmVtb255IGlzIGV4cGVjdGVkIGJlZm9yZSB0aGUgZW5kIG9mIHRoZSB5ZWFyLiBUaGUgZGF0ZSBvZiBEZWMuIDggaGFzIGJlZW4gZmxvYXRlZCBhcyBsaWtlbHksIGdpdmVuIGl0J3MgdGhlIGZlYXN0IG9mIHRoZSBJbW1hY3VsYXRlIENvbmNlcHRpb24sIGEgbWFqb3IgZmVhc3QgZGF5IGZvciB0aGUgY2h1cmNoIHRoYXQgaG9ub3VycyBNYXJ5LCB0byB3aG9tIGJvdGggc2FpbnRseSBwb3BlcyB3ZXJlIHBhcnRpY3VsYXJseSBkZXZvdGVkLiAKUG9rZXIgaW4gZ2VuZXJhbCBoYXMgYmVuZWZpdGVkIGluIHJlY2VudCB5ZWFycyB0aGFua3MgdG8gdGhlIG1ham9yIFRWIGV4cG9zdXJlIGdpdmVuIHRvIFRleGFzIEhvbGRlbSB0b3VybmFtZW50cywgb25saW5lIHBva2VyIGJyYW5kcyBidXlpbmcgcHVibGljaXR5IGluIG1ham9yIHNwb3J0cyBUViBjaGFubmVscyBhbmQgdG91cm5hbWVudHMsIGFuZCB0aGUgV29ybGQgU2VyaWVzIG9mIFBva2VyLCBub3QgdG8gbWVudGlvbiwgbWFqb3IgdG91cm5hbWVudCBwcml6ZXMgbm93IHB1YmxpY2l6ZWQuIFRoYW5rcyB0byB0aGVzZSBpbXBvcnRhbnQgcG9pbnRzLCBtaWxsaW9ucyBvZiBjb25zdW1lcnMgYWxsIG92ZXIgdGhlIHdvcmxkIGhhdmUgdGFrZW4gcG9rZXIgYXMgdGhlaXIgbWFpbiBob2JieS4gCllvdSBhcmUgdHJ5aW5nIHRvIGFyZ3VlIHRoYXQgVmVuZXp1ZWxhIGlzIHNvY2lhbGlzdCBhbmQgb2J2aW91c2x5IHRyeSB0byBpbXBseSB0aGF0IGl0IGZhaWxlZCBiZWNhdXNlIG9mIHNvY2lhbGlzbS4gV2hpY2ggaXNuIHRoZSBjYXNlLiAKU2hlIGxhdGVyIHRoYW5rZWQgZmFucyBmb3IgdGhlaXIgb3V0cG91cmluZyBvZiBzdXBwb3J0LCBhbmQgc2hhcmVkIGEgZmV3IG9mIGhlciBwZXJzb25hbCByZW1lZGllcyBmb3IgdGhlIGFpbG1lbnQgb24gSW5zdGFncmFtLCBleHBsYWluaW5nIHNoZSB1c2VzIGFuIGluZnJhcmVkIHNhdW5hIHdoaWxlIHdlYXJpbmcgYSB0aGVybWFsIHNpbHZlciBibGFua2V0LCBmb2xsb3dlZCBieSBhIHZlcnkgY29sZCBpY2UgYmF0aCB3aGVuZXZlciBoZXIgYm9keSBnb2VzIGludG8gc3Bhc20uCkZvciB0aGF0IHRvIGhhcHBlbiB0aGVyZSBzaG91bGQgYmUgYSBjbG9zaW5nIG9mIHRoZSBjdXJyZW50IGdhcCBiZXR3ZWVuIHRoZSB2YWx1ZXMgdGhhdCBwbGF5ZXJzIHRoaW5rIHRoZXkgd29ydGggYW5kIHdoYXQgdGhlIGxhcmdlciBwbGF5ZXJzIGFyZSBub3cgd2lsbGluZyB0byBwaWNrIHRoZW0gdXAsIGhlIHNhaWQuLiAKV2h5IGFtIEkgdGhpbmtpbmcgYWJvdXQgMzAgeWVhcnMgbGVmdD8gSSBoYXZlIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIGFuZCB0aGF0IGEgbG90IG9mIHRpbWUgdG8gZG8gYSBsb3Qgb2Ygc3R1ZmYuIApNYWlzIGVzdCBjZSBxdWUgamUgdmV1eCBlbiBwYXJsZXIgZGFucyBjZXQgYXJ0aWNsZT8gTm9uLiBFc3QgY2UgcXUnaWxzIG9udCBldSB1biBpbXBhY3Qgc3VyIG1vbiB0cmF2YWlsPyBPdWkuIEplIHN1aXMgY29tbWUgdW5lIHBsYWllIG91dmVydGUuIi4gCldhbGtpbmcgYmVoaW5kIHRoZSBjb3VudGVyIGF0IGhpcyBkaW5lciBhbmQgImFkanVzdGluZyIgaGlzIGZvb2QvaW50ZXJmZXJpbmcgd2l0aCBoaXMgY3VzdG9tZXJzLCBtb3ZpbmcgaGlzIGZvb2QgdHJheSBhdCB0aGUgY2F0IHdha2Ugd2hlbiBzaGUgbm90aWNlZCB0aGF0IHBlb3BsZSBsaWtlZCBoaXMgZm9vZCBtb3JlIHRoYW4gaGVycywgYW5kIGRpc3Jlc3BlY3RpbmcgaGltIHdoZW4gaGUgc3RlcHBlZCBpbiBhbmQgc2F2ZWQgaGVyIGFzcyBhdCB0aGUgaW5uIHdoZW4gc2hlIHdhcyBpbmRpc3Bvc2VkKSBpbmZ1cmlhdGVkIG1lLiAKUmVtZW1iZXIgdGhhdCBzaGUgaXMgYSB2aWN0aW0gaW4gdGhpcyBhbmQgd2hpbGUgaXQgdW5kZXJzdGFuZGFibGUgdG8gYmUgZnJ1c3RyYXRlZCBhbmQgdXBzZXQgd2l0aCBoZXIsIHlvdSBoYXZlIHRvIGxldCB0aGF0IHBhc3MgYW5kIHN1cHBvcnQgaGVyLiBFbnN1cmUgdGhhdCBzaGUgZG9lc24gbWFrZSB0aGUgc2FtZSBtaXN0YWtlIGFnYWluLiBJZiB5b3UgYXJlIG1ha2luZyBhIGNvbWJpbmVkICQyNDBLIGluY29tZSwgeW91IGFyZSBsdWNreSB0byBiZSBhYmxlIHRvIHNob3VsZGVyIHRoaXMgY3JpbWUgYW5kIGFyZSBpbiBhIHBvc2l0aW9uIHRvIGRvIHNvLCBzb21ldGhpbmcgOTklIG9mIHBlb3BsZSB3b3VsZG4gYmUgaW4uIEl0IHdvbiBiYW5rcnVwdCB5b3Ugb3IgcnVpbiB5b3VyIGxpdmVzLiBXaGF0IGRvbmUgaXMgZG9uZSBzbyB0aGVyZSBubyByZWFzb24gdG8gYmVyYXRlIGhlciBvciBtYWtlIGhlciBmZWVsIHdvcnNlIGJ1dCBkZWZpbml0ZWx5IG1ha2Ugc3VyZSBzaGUgdW5kZXJzdGFuZHMgd2hhdCBoYXBwZW5lZCBhbmQgdGFrZXMgdGhlIHN0ZXBzIHRvIG5vdCBkbyBpdCBhZ2Fpbi4KSSBoYWQgcGVvcGxlIHRlbGxpbmcgbWUgSSB3YXMgd2FzdGluZyBhd2F5LiAKTWF5IGJlIGRyaXZlbiBieSBsYXkgdGhlb3JpZXMgdG8gbWFrZSBoZWFsdGggY2FyZSBjaG9pY2VzIHRoYXQgZG8gbm90IG1heGltaXplIGhlYWx0aCBvdXRjb21lIGZvciBleGFtcGxlLCBjaG9vc2luZyBoZWFsdGggcmVtZWRpZXMgb3V0IG9mIHBvdGVudGlhbGx5IGluYWNjdXJhdGUgcGVyY2VwdGlvbnMgb2YgdGhlaXIgYWN0aW9uIHJhcGlkaXR5IG9yIHRyZWF0bWVudCBmb2N1cywgb3IgbmVnbGVjdGluZyBoZWFsdGggcHJvdGVjdGl2ZSBiZWhhdmlvcnMgd2hlbiBjb25zdW1pbmcgV00gKHZzLiAKV2l0aCBhYm91dCB0d28gc2Vjb25kcyBvZiBzY3JlZW4gdGltZSBhbmQgYWJzb2x1dGVseSBubyBzcGVha2luZyBsaW5lcywgSmFubiBXZW5uZXIgaXMgY3JlZGl0ZWQgYXMgIkxlZ2VuZCBpbiBDYWIuIiBIZSBpcyBzaG93biBpbiB0aGUgYmFjayBvZiBhIHRheGksIGFzIFdpbGxpYW0gcnVucyBkb3duIHRoZSBzdHJlZXRzIHNlYXJjaGluZyBmb3IgYSByZWplY3RlZCBQZW5ueSBMYW5lLiAKVGhpcyBpcyBiZWNhdXNlIHRvIGJlIGFibGUgdG8gZ2V0IGEgaGlnaGVyIHJldHVybiBpbiB2aWRlbyBwb2tlciwgeW91IG5lZWQgYSBSb3lhbCBzdHJhaWdodCBGbHVzaC4gClJhdGhlciB0aGFuIGxpYmVyYXRpbmcgdXMsIGNpdmlsaXR5IGltcHJpc29ucyB1cy4uIApJdCdzIFJlY2hhcmdlYWJsZSwgcG9ydGFibGUgYW5kIGNvbWVzIHdpdGggYW4gQUMgYWRhcHRlci4gCkx1Y2tpbHksIGhlIHBsYXllZCBoaXMgd29yc2UuIApJbiB0aGUgdGlueSBncm91cCBvZiBnYW1ibGVycyB3aG8gaGF2ZSBiZWNvbWUgdG9wIHBsYXllcnMgYXQgYm90aCBibGFja2phY2sgYW5kIHBva2VyLCB0aGVyZSBpcyBvbmx5IG9uZSB3b21hbi4gCkEgZ3JlYXQgZXhhbXBsZSBvZiB0aGlzIGlzIHRoZSBpbmRpdmlkdWFscyB3aG8gdGFrZSBwb2tlciBzZXJpb3VzbHkuIApUd28gc2Vzc2lvbnMgYW5kIHBlcmZlY3QuLiAKQ2xhaW1pbmcgdmljdGltaG9vZCBpbiBMeWFyaSB3aWxsIHJlc29uYXRlIHdpdGggU2luZGhpcyBhY3Jvc3MgdGhlIHByb3ZpbmNlLiAKVGhpcyBpcyB1bmRlcnBpbm5lZCBieSB0aGUgYWNxdWlzaXRpb24gb2YgdGhlIHByb2Zlc3Npb25hbCBsZWFkZXJzaGlwIGFuZCByZXNlYXJjaCBza2lsbHMgeW91IHdpbGwgbmVlZCB0byBwcmFjdGljZSBhbmQgbWFuYWdlIGV2aWRlbmNlIGJhc2VkIHBlcnNvbiBjZW50ZXJlZCBjYXJlIGFzIGEgUmVnaXN0ZXJlZCBOdXJzZS4uIApIdW1hbiBlbW90aW9uIGRvZXMgbm90IHN0YXkgaW4gdGhlaXIgd2F5LCBhbmQgbmVpdGhlciBkb2VzIGdyZWVkLCBmYXRpZ3VlLCBvciBmZWFyLiBUaGVpciB0ZWxscyBhcmUgbm9uIGV4aXN0ZW50IGFuZCB0cnkgYXMgeW91IG1heSwgeW91IHdvbid0IGJlIGFibGUgdG8gaG9vayB0aGVtIHVwIHRvIGEgdGlsdC4gCkNvbXBhcmVkIHRvIG1vd2luZyB0aGUgbGF3biB3ZWVrbHksIHRoaXMgaXMgYW4gZWFzeSB0YXNrIHRoYXQgYWxsb3dzIGVsZWdhbnQgYmFtYm9vIHRvIHByb3ZpZGUgcHJpdmFjeSBzY3JlZW5pbmcsIGEgZ3JlYXQgc291bmQgYmFycmllciBhbmQgYSB3aWxkbGlmZSBoYWJpdGF0LiBCYW1ib28gYWxzbyBwcm9kdWNlcyBsb3RzIG9mIG94eWdlbiBhbmQgc2VxdWVzdGVycyBjYXJib24uCkkgZmVlbCBsaWtlIEFtZXJpY2FucyBhcmUgZ3JhZHVhdGluZyB3aXRoIGJhY2hlbG9ycyBkZWdyZWVzIGFuZCBhcmUgc3RpbGwgZW50ZXJpbmcgdGhlIHdvcmsgZm9yY2UgdW5kZXJwYWlkLiBJIHRob3VnaHQgYSBTVEVNIGNhcmVlciB3b3VsZCBiZSBwcm9taXNpbmcsIGJ1dCBtb3N0IG9mIG15IGNvbGxlYWd1ZXMgc3BlbmQgbW9yZSB0aGFuIGhhbGYgb2YgdGhlaXIgcGF5Y2hlY2tzIG9uIGxpdmluZyBleHBlbnNlcyBhbG9uZSwgKG5vdCB0byBtZW50aW9uIHN0dWRlbnQgZGVidCkgYW5kIG1vc3Qgb2YgdXMgaGF2ZSBnaXZlbiB1cCBvbiBvd25pbmcgYSBob21lIGFueXRpbWUgc29vbi4gClNvIHdlIGtub3cgdGhhdCB0aGUgcGxhbm5pbmcgc3ViIGNvbW1pdHRlZSB3YXMgdG8gaGF2ZSBjb25zaWRlcmVkIGEgcGxhbm5pbmcgYXBwbGljYXRpb24sIGJ1dCBub3Qgd2hvIGhhcyBtYWRlIHRoZSBhcHBsaWNhdGlvbiwgYXQgd2hhdCBhZGRyZXNzLCBmb3Igd2hhdCBwdXJwb3NlLiBQcmVzdW1hYmx5IHdlIHdpbGwgb25seSBrbm93IHRoZSBvdXRjb21lIHdoZW4gdGhlIHdhbGwgZGl2aWRpbmcgdXMgZnJvbSBJc2xpbmd0b24gaXMgYnVpbHQsIG9yIHdoZW4gRmluc2J1cnkgUGFyayBpcyByZXBsYWNlZCBieSBhIFdpcmVsZXNzIEZlc3RpdmFsIFRoZW1lIFBhcmssIG9yIExlbmRsZWFzZSBtb3ZlIG9uIGFuZCByZWRldmVsb3AgdGhlIGVudGlyZSBjb3VuY2lsIGVzdGF0ZS4uIApIYXZlIHJvbWFuY2VkIElzYWJlbGEsIHJlYWxseSBsaWtlZCB0b28uIApXaG8ga25vd3MsIHJpZ2h0P0FzaWRlIGZyb20gdGhhdCwganVzdCBzdXJyb3VuZGVkIGJ5IEQgbWF0ZXJpYWxzIGF0IHRoZSBtb21lbnQgbG9sLiAKQml0Y29pbiBpcyBub3QgZnVuZ2libGUuIApELiBjYW1lIG92ZXIgYW5kIGluZm9ybWVkIHVzIHRoYXQgdGhlcmUgd2FzIGFjdHVhbGx5IGEgY29uY2VydCB0YWtpbmcgcGxhY2UgaW4gdGhlIENhdGhlZHJhbC4gU28gd2UgaGVhZGVkCkV2ZW4gbWVjaGFuaWNhbCBsb2FkaW5nIGR1cmluZyByZXN0IGFuZCBzbGVlcCByZWxhdGVzIHRvIGNvbm5lY3RpdmUgdGlzc3VlIGZ1bmN0aW9uLgpFbGkgcGFyYXN0YSBvbGlzaSBrb2tvYWphbiBvbGxhIHNpZWxsIHlsaXBhaW5laXN0ZXR1c3NhIHRpbGFzc2E/Ckkga25ldyBldmVyeW9uZSBoZXJlLiBXZSB3ZXJlIHRoZSBib3R0b20gb2YgdGhlIGJhcnJlbC4gWW91IHJlYWxseSBoYWQgdG8gc2NyZXcgd2l0aCB0aGUgUk5HIEdvZHMgdG8gbGFuZCB0aGUgc2tpbGxzIHdlIGRpZC4gVGhlIHdvbWFuIG5leHQgdG8gbWUgaXMgU3VzYW4gIHNoZSBjYW4gcmVhbmltYXRlIGZyZXNobHkgZGVhZCBoYW1zdGVycyBmb3IgZmlmdGVlbiBtaW51dGVzLiBCZXRoIGlzIGFibGUgdG8gYWdlIGF0IHdpbGwsIGJ1dCBzaGUgY2FuJ3QgZ2V0IGFueSB5b3VuZ2VyLiBTaGUncyAzMiBhbmQgd3JpbmtsZWQgbGlrZSBsZWZ0b3ZlciBwbGFzdGljIHdyYXAuIEl0J3MgYSBsb25nIHN0b3J5LgpBY3R1YWxseSAnZ3Jvc3NlIGxlZ3VtZScsIEVkLiBFZGl0b3IgaW4gLiAKSWYgeW91IGxpa2UgdG8gYmUgbGlnaHQgb24geW91ciBmZWV0LCB5b3Ugd2lsbCBiZSB0cmVhdGVkIGxpa2UgYSAibGlnaHQgd2VpZ2h0LiIuIApUaGlzIG9mIGNvdXJzZSB3YXMgbm90IHRoZSBzYW1lIGdhbWUgeW91IHNlZSB0b2RheSBvciBhbnkgb2YgaXRzIHZhcmlhdGlvbnMgZm9yIHRoZSBtYXR0ZXIuIE1vc3QgYWxsIGVhcmx5IHZhcmlhdGlvbnMgb2YgcG9rZXIgd2hlcmUgc2ltaWxhciBpbiBtYW55IHdheXMgYW5kIHRoZW4gd2VyZSBlbmhhbmNlZCBhbmQgbWl4ZWQgaW50byB3aGF0IG1hbnkgb2YgcGxheSB0b2RheS4uIAoncyBmb3JtZXIgYmVzdCBmcmllbmQgdG9vayB0aGUgc3RhbmQgV2VkbmVzZGF5IHRvIHRlc3RpZnkgYWdhaW5zdCB0aGUgZm9ybWVyIE5ldyBFbmdsYW5kIFBhdHJpb3RzIHBsYXllci4KSW4gdGVybXMgb2YgZ2FtZXMsIGxvd2VyIHN0YWtlcyB0aGFuIDUvNSBpcyBhIHJha2VmZXN0IGluIGxhLiBJIHRoaW5rIGF0IGV2ZXJ5IHN0YWtlIHRoZXkgZG8gYSAkNSBkcm9wLiBJZiB5b3UgZG9uIGNhcmUgYWJvdXQgdGhhdCwgdGhlIGdhbWVzIGFyZSBzdXBlciBzb2Z0IGFuZCBmdW4sIEkgdGhpbmsgdGhlcmUgYSAxLzIgY2FwcGVkIGF0ICQyMDAgYXQgdGhlIGJpa2U/IFRoZXJlIGEgZnVuIDIvNSAkNDAwIGZpeGVkIGJ1eSBpbiBnYW1lIHdoZXJlIHlvdSBlYXJuICQ0IGluIGNvbXBzIHBlciBob3VyLiAKQWZ0ZXIgdGhlIHJ1c3NpYW4gcmV2b2x1dGlvbiBTdGFsaW4gdG9vayB0byBhdGhlaXN0aWMgcHJpbmNpcGFscy4gCkV2ZW4gc28sIGZhdGhlciBhbmQgc29uIHNoYXJlIGFuIGVuZHVyaW5nIGNsb3NlbmVzcywgbnVydHVyZWQgaW4gcGFydCBieSB0aGVpciBzaGFyZWQgZW50aHVzaWFzbSBmb3IgcG9rZXIuIApKdXN0IGtub3cgdGhhdCB5b3UgYXJlIHRha2luZyBpbiB0aGVzZSBraWRzIHRvIGdpdmUgdGhlbSBhIGJldHRlciBsaWZlIGFuZCB5b3UgYXJlIGFscmVhZHkgYSBiZXR0ZXIgbW9tIHRoYW55b3VyIG1vbSBwcm9iYWJseSBldmVyIHdhcy4gCkRhbmRydWZmIGlzIGNhdXNlZCBieSBhIG1pY3Jvc2NvcGljLCB5ZWFzdCBsaWtlIGZ1bmd1cyBjYWxsZWQgbWFsYXNzZXppYS4gTWFsYXNzZXppYSBpcyBhbHNvIGZvdW5kIG9uIGhlYWx0aHkgaHVtYW4gaGVhZHMgYnV0LCBmb3Igc29tZSB1bmtub3duIHJlYXNvbiwgaXQgZ2V0cyBvdXQgb2YgY29udHJvbCBvbiB0aGUgc2NhbHBzIG9mIGFuIHVubHVja3kgZ3JvdXAgb2YgcGVvcGxlLiBUaGUgY2VsbCB0dXJub3ZlciB0aGF0IHdvdWxkIHRha2UgMjcgb3IgMjggZGF5cyBvbiBhIGhlYWx0aHkgaGVhZCwgdGFrZXMgdHdvIHdlZWtzIG9yIGxlc3Mgb24gdGhlIHNraW4gb2Ygc29tZW9uZSB3aXRoIGRhbmRydWZmLiAKVGhpcyBpcyBjYWxsZWQgc2VsZWN0aXZlIHBsYXkgYW5kIGl0IHJlc3VsdHMgaW4gbG9uZyB0ZXJtIHBva2VyIGdhaW5zLiAKVXNlIGEgcGFydG5lciBhY3Rpdml0eS4gQXNrIHN0dWRlbnRzIHRvIGNvbWUgdG8gdGhlIGRpc2N1c3Npb24gd2l0aCAzIG9yIDQgcXVlc3Rpb25zIHByZXBhcmVkLiBTdGFydCB0aGUgZGlzY3Vzc2lvbiBieSBoYXZpbmcgc3R1ZGVudHMgcGFpciBvZmYgYW5kIGFsdGVybmF0ZSBhc2tpbmcgYW5kIGFuc3dlcmluZyB0aGVpciBxdWVzdGlvbnMuClBvbGljZSBmb3VuZCAkOSwwMDAgaW4gTWFyc2hhbGwgY2FyLgpQcm9jcmF0aW9uIG1kaWNhbGVtZW50IGFzc2lzdGUuIApUaGVyZSBpcyBubyBvbmUgdG8gYmxhbWUgYnV0IGhpbXNlbGYgYXQgdGhpcyBwb2ludC4gSSBzdG9vZCBieSBmb3IgbW9udGhzIG1vbnRocyBtb250aHMgbW9udGhzIGhvcGluZyBmb3IgYSBjaGFuZ2UuIApBbm5vdW5jaW5nIGhlciBuZXcgbGluayB0byB0aGUgYnJhbmQgaW4gYSBzdGF0ZW1lbnQsIHRoZSBQb2tlciBGYWNlIHNpbmdlciBzYXlzLCBOZXcgWW9yaywgeW91IGJvcm4ga25vd2luZyB0aGF0IFRpZmZhbnkgaXMgdGhlIGJlc3QgYW5kIHRoYXQgaXQgaXMgd2hlcmUgdGhlIG1hZ2ljIGhhcHBlbnMuIFRoZSBicmFuZCBpcyBkZWZpbml0aXZlIGFuZCBpY29uaWMsIHlldCBjb250aW51ZXMgdG8gcHVzaCBhbmQgZXZvbHZlIHdpdGggdGhlIHRpbWVzLiBUbyBtZSwgVGlmZmFueSByZXByZXNlbnRzIHRpbWVsZXNzIEFtZXJpY2FuIGpld2VscnkuIApTZW5kIHRvIGEgZnJpZW5kCkFuZCBpdCBleHBsYWlucyB3aHkgdGhlIGJvYXJkIHRvb2sgYWN0aW9uLiAKQnV0IHdhaXQsIHRoZSBwbG90IHRoaWNrZW5zLiBUaGVyZSBpcyBhbm90aGVyIHJlYXNvbiBmb3IgaGF2aW5nIGEgc2hvcnRlciBkcml2ZXIuIFRoZXJlIGlzIGFtcGxlIGV2aWRlbmNlIHRoYXQsIGluIHRoZSBoYW5kcyBvZiByZWFsIHBlb3BsZSwgdGhlIHNob3J0ZXIgZHJpdmVyIG1pZ2h0IHZlcnkgd2VsbCBoaXQgdGhlIGJhbGwsIG5vdCBqdXN0IHdpdGggbW9yZSBhY2N1cmFjeSwgYnV0IG1vcmUgZGlzdGFuY2UgYXMgd2VsbC4gRm9yIGV2ZXJ5IHF1YXJ0ZXIgaW5jaCB5b3UgbWlzcyB0aGUgInN3ZWV0IHNwb3QiIG9uIHlvdXIgZHJpdmVyLCB5b3UgbG9vc2UgYWJvdXQgZml2ZSB5YXJkcyBpbiBkaXN0YW5jZS4gCkkganVzdCBuZWVkZWQgYW4gdW1icmVsbGEgdGhlcmUgd2FzIG11bHRpcGxlIGJlYXIgc2VsbGVyIGNoaW5lc2Ugb25lcyBmb3IgJDE5Ljk5IHdpdGggaG9uZXN0bHkgMTAsMDAwIHJldmlld3MgLiAKT25lIHdhbGwgb2YgdGhlIFJ1c3NpYW4gT3JwaCAgYXVzZSB3YXMgZGFtYWdlZCBhbmQgd2luZG93cyBhbGwgb3ZlciB0b3duIHdlcmUgc21hc2hlZCBieSBqIHRoZSBmb3JjZSBvZiB0aGUgd2luZC4gClRoaXMgbm90IEx1Y2t5IEx1a2UgbGF1bmRyeSBndXk7IEkgdGFsa2luZyBhYm91dCB0aGUgcmVhc29uIHRoZSBVUyBoYWQgdGhlIHdlc3Rlcm4gaGFsZiBvZiB0aGUgdHJhbnNjb250aW5lbnRhbCBpbiB0aGUgMTl0aCBjZW50dXJ5LiAKV2ludGVyIHNldCBpbiB2aWdvcm91c2x5IGFmdGVyIE5ldyBZZWFyJ3MuIEJpZywgd2hpdGUgZHJpZnRzIGhlYXBlZCB0aGVtc2VsdmVzIGFib3V0IHRoZSBsaXR0bGUgaG91c2UsIGFuZCBwYWxtcyBvZiBmcm9zdCBjb3ZlcmVkIGl0cyB3aW5kb3dzLiBUaGUgaGFyYm9yIGljZSBncmV3IGhhcmRlciBhbmQgdGhpY2tlciwgdW50aWwgdGhlIEZvdXIgV2luZHMgcGVvcGxlIGJlZ2FuIHRoZWlyIHVzdWFsIHdpbnRlciB0cmF2ZWxsaW5nIG92ZXIgaXQuIFRoZSBzYWZlIHdheXMgd2VyZSAiYnVzaGVkIiBieSBhIGJlbmV2b2xlbnQgR292ZXJubWVudCwgYW5kIG5pZ2h0IGFuZCBkYXkgdGhlIGdheSB0aW5rbGUgb2YgdGhlIHNsZWlnaCBiZWxscyBzb3VuZGVkIG9uIGl0LiBPbiBtb29ubGl0IG5pZ2h0cyBBbm5lIGhlYXJkIHRoZW0gaW4gaGVyIGhvdXNlIG9mIGRyZWFtcyBsaWtlIGZhaXJ5IGNoaW1lcy4gVGhlIGd1bGYgZnJvemUgb3ZlciwgYW5kIHRoZSBGb3VyIFdpbmRzIGxpZ2h0IGZsYXNoZWQgbm8gbW9yZS4gRHVyaW5nIHRoZSBtb250aHMgd2hlbiBuYXZpZ2F0aW9uIHdhcyBjbG9zZWQgQ2FwdGFpbiBKaW0ncyBvZmZpY2Ugd2FzIGEgc2luZWN1cmUuCkJ5IHNheWluZyAiQSB1bmlvbiB0aGF0IGNhbm5vdCBlbnRpY2UgZW5vdWdoIHBlb3BsZSBvbiBib2FyZCBkZXNlcnZlcyB0byBmYWlsIiwgeW91IGFyZSBzYXlpbmcgIkV2ZXJ5IHVuaW9uIGRlc2VydmVzIHRvIGZhaWwiLi4gCkFuZCB5ZXQgTWFuamhpLCBhbiB1bmVkdWNhdGVkIG1hbiBvZiB0aGUgbG93ZXN0IGNhc3RlLCBnYXZlIGhpcyBiZXN0IHllYXJzIHRvIG1vdmUgYSBtb3VudGFpbiwgd2hpY2ggZ2F2ZSBoaXMgd2hvbGUgdmlsbGFnZSBvcHBvcnR1bml0eSBmb3IgZ2VuZXJhdGlvbnMgdG8gY29tZSwgYWxsIGluIHRoZSBuYW1lIG9mIGxvdmUuIApUaGUgbnVtYmVyIG9mIHRlbmRlciBwb2ludHMsIHRlbmRlciBwb2ludCBpbmRleCwgRklRIGFuZCBCZWNrIGRlcHJlc3Npb24gc2NvcmVzIGRlY3JlYXNlZCBzaWduaWZpY2FudGx5IHdpdGggdGhlIG1hZ25lc2l1bSBjaXRyYXRlIHRyZWF0bWVudC4KQWxsIHRoZSBmb29kIHRpbWVycyBhcmUgZ29pbmcgb2ZmLiBJJ20gc3dlYXRpbmcgbG9va2luZyBhcm91bmQgd29uZGVyaW5nIHdoYXQgSSdtIGRvaW5nIHdpdGggbXkgbGlmZS4gSSdtIGhpZ2ggYXMgZnVjay4gCkVkaXQgMjogSSBkbyBhbG1vc3QgYWxsIG9mIG15IG93biB3b3JrLCBJIGJlZW4gd3JlbmNoaW5nIG9uIGNhcnMgZm9yIGEgZmV3IHllYXJzIG5vdywgYW5kIHdpdGggZW5vdWdoIHBhdGllbmNlIGFuZCBnb29nbGUgZm9vIHlvdSBjYW4gZG8gYSBsb3Qgb24geW91ciBvd24uIFRoaXMgZ3JlYXRseSByZWR1Y2VzIHRoZSBjb3N0IG9mIGNhciBtYWludGVuYW5jZSBmb3IgbWUuIApOb3VzIGF2b25zIHVuZSBmZW4gZGUgdHJvaXMgY2lucSBhbnMgcG91ciBsZXMgcHJlbWllcnMgc2UgcG9zaXRpb25uZXIgZGFucyBjZSBtYXJjaCBkaXQgaWwuLiAKMy4gClRoZSBEQSBxdWVzdGlvbnMgQWRyaWFuIGFuZCB0aGVuIHNpdHMgZG93bi4gSXQncyBIb29rZXIncyB0dXJuLCBhbmQgdGhvc2UgbGF3IGJvb2tzIGhhdmUgb2J2aW91c2x5IHBhaWQgb2ZmLCBiZWNhdXNlIGhlIHF1ZXN0aW9ucyBBZHJpYW4gbGlrZSBhIHByby4gQWRyaWFuIGhhcyBhbiBlcGlwaGFueSBvbiB0aGUgc3RhbmQgYW5kIEhvb2tlciBwcmVzc2VzIGl0LCBkYXp6bGluZyBldmVyeW9uZSBpbnZvbHZlZC4gCkppbiBTaGluIEp5dXRzdSBicmluZ3MgYmFsYW5jZSB0byB0aGUgYm9keSdzIGVuZXJnaWVzLCB3aGljaCBwcm9tb3RlcyBvcHRpbWFsIGhlYWx0aCBhbmQgd2VsbCBiZWluZywgYW5kIGZhY2lsaXRhdGVzIG91ciBvd24gcHJvZm91bmQgaGVhbGluZyBjYXBhY2l0eS4gSXQgaXMgYSB2YWx1YWJsZSBjb21wbGVtZW50IHRvIGNvbnZlbnRpb25hbCBoZWFsaW5nIG1ldGhvZHMgYW5kIHdvcmtzIG9uIGJvdGggYSByZXN0b3JhdGl2ZSBhbmQgcHJldmVudGF0aXZlIGJhc2lzLCBtYWtpbmcgaXQgYSBwb3dlcmZ1bCB0b29sIGZvciB0aG9zZSBvZiB1cyB3aG8gYXJlIGFkZHJlc3NpbmcgZXhpc3Rpbmcgc3RyZXNzIG9yIGhlYWx0aCBkaXNoYXJtb25pZXMgb3IgZm9yIHRob3NlIHNpbXBseSB3aXNoaW5nIHRvIHBhcnRpY2lwYXRlIGFjdGl2ZWx5IGluIG1haW50YWluaW5nIGhlYWx0aCwgaGFybW9ueSBhbmQgd2VsbCBiZWluZy4gClRMO0RSIFN3aXNzIENoYWxldC4gR3JlYXQgYXMgYSBraWQsIHNpdCBkb3duIGZhc3QgZm9vZCB3aXRoIGEgc2lkZSBvZiBzbmFyayBub3cKSXQganVzdCBhYm91dCB0YWtpbmcgY2FyZSBvZiB5b3Vyc2VsZi4gCklmIHlvdSBoYXZlIGEgZ29vZCBlYXIgZm9yIHRvbmVzLCB5b3Ugd2lsbCBiZSBhYmxlIHRvIGRpc3Rpbmd1aXNoIHRoZW0gZWFzaWx5IHdoZW4geW91IGhlYXIgdGhlbSwgYW5kIG1pbWljIHRoZW0gaW4geW91ciBzcGVlY2ggd2l0aCBsaXR0bGUgZWZmb3J0LiBUaGUgZmxleGlibGUgZ3JhbW1hdGljYWwgcnVsZXMgYWxzbyBtYWtlIGxlYXJuaW5nIE1hbmRhcmluIHByZXR0eSBlYXN5LiAKTXVzY2xlIGJ1aWxkaW5nIGlzIGEgaGlnaGx5IGNvbXBsZXggcHJvY2VzcywgYnV0IGVhdGluZyBmb3IgaXQgZG9lc24ndCBoYXZlIHRvIGJlLiAKSSBob3BlIDExIG1vbnRocyBmcm9tIG5vdyBJJ3ZlIGxvc3QgdGhlIHdlaWdodCBJIG5lZWQgdG8uIEknbSAyMjUsIGhvcGluZyB0byBnZXQgZG93biB0byAxNjAuIDY1IHRvdGFsLi4gClNvIHlvdSdyZSBhIHJlYWwgYXNzIHNjaWVudGlzdCBhbmQgSSdtIGp1c3QgYSBndXkgc3R1ZHlpbmcgdG8gYmUgb25lLiBCdXQgbHVtcGluZyBHTU8gY3JvcCBjb25jZXJucyB3aXRoIG9idmlvdXNseSBkaXNwcm92ZW4gbnV0dGVycyBzZWVtcyB1bmZhaXIuIFdoaWxlIEkgdGhpbmsgdGhhdCBDUklTUFIvQ2FzOSBtZWRpYXRlZCBnZW5vbWUgZWRpdGluZyBpcyBvbmUgb2YgdGhlIGJpZ2dlc3QgYnJlYWt0aHJvdWdocyBpbiByZWNlbnQgaGlzdG9yeSwgeW91IGhhdmUgdG8gYWRtaXQgdGhhdCB3aGlsZSAiR01PIGJhZCIgaXMgbm90IGEgcmVhc29uYWJsZSBzdGF0ZW1lbnQsIHRoZSBuZXduZXNzIG9mIHRoaXMgdGVjaG5vbG9neSB3YXJyYW50cyBzb21lIGNhdXRpb24uIEkgd291bGQgcG9pbnQgdG8gdGhlIGRldmVsb3BtZW50IG9mIHJlc2lzdGFuY2UgdG8gQnQgdG94aW5zIGZvdW5kIGluIHNldmVyYWwgc3BlY2llcyBvZiBjb3JuIGFuZCBjb3R0b24gcGVzdHMgYXMgZXZpZGVuY2Ugb2YgdGhlIHBvdGVudGlhbCByYW1pZmljYXRpb25zIG9mIHRoZSBwdXNoaW5nIHRyYW5zZ2VuaWMgRE5BIHRvIGFjY291bnQgZm9yIHN1Y2ggYSBsYXJnZSBwZXJjZW50YWdlIG9mIEFtZXJpY2EncyBjcm9wIHlpZWxkLgpUaGVzZWRvZ2RheXogIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIGRheSBhZ29UaGUgYXZlcmFnZSBjaXRpemVuIG9mIHRoZSBVbml0ZWQgU3RhdGVzIGlzIGNvbWZvcnRhYmx5IGluIHRoZSB0b3AgNSBwZXJjZW50IG9mIHRoZSB3b3JsZCdzIGluY29tZSBkaXN0cmlidXRpb24uIEkgaGF0ZSB0aGUgRGFpbHkgTWFpbCBidXQgdGhleSBleHBsYWluIGl0IHByZXR0eSB3ZWxsIGhlcmUuIApNb3N0IHBlb3BsZSBpbiB0aGlzIHRocmVhZCB0YWxrIGFib3V0IGlzc3VlcyB0aGF0IGhhcHBlbiB3aXRob3V0IGJhZCBpbnRlbnRpb25zIGJlaGluZCB0aGVtIG9yIGFyZSBjYXVzZWQgYnkgYm9va2luZyBtaXN0YWtlcyBhbmQgYXJlIDk5JSByZXNvbHZlZCBhdCB0aGUgYWlycG9ydC4gQWlybGluZXMgd2FudCB5b3VyIG1vbmV5IGp1c3QgbGlrZSBsaXRlcmFsbHkgYW55IG90aGVyIGNvbXBhbnkgYW5kIHBlb3BsZSBleHBlY3QgdGhlIHNhbWUgc2VydmljZSB3aGVuIHRoZXkgcGF5aW5nIHdheSBsZXNzLgpZb3UgY2FuIHdpbiBsb3cgd2l0aCB0aGUgYWNlLCBhbmQgeW91IGNhbiB3aW4gaGlnaCB3aXRoIGFuIGFjZSBoaWdoIGZsdXNoIGlmIHlvdXIgdGhyZWUgc3VpdGVkIGNhcmRzIGhpdCBvbiB0aGUgYm9hcmQuIApXaGF0IEkgd2FzIHRyeWluZyB0byBzYXkgd2FzIHRoYXQgUm9nZXIgU3RvbmUncyBhY3Rpb25zIHdpdGggdGhlIHBpY3R1cmUgb2YgdGhlIGp1ZGdlIGNvdWxkbid0IGJlIGxlZ2FsbHkgcHJvc2VjdXRlZCBhcyBhIGRlYXRoIHRocmVhdCBzbyB3ZSBjYW4ndCBjb21wYXJlIHRoYXQgaW5jaWRlbnQgdG8gdGhlIGltYmFsYW5jZSBpbiBtYXJpanVhbmEgc2VudGVuY2VzIHRvIGhpcyB0cmVhdG1lbnQgaGVyZS4gCkFzIHRoaW5ncyBzdGFuZCBpbiBOU1csIHlvdSBjYW4gbG9zZSAkMTAgd2l0aCBldmVyeSBvbmUgb2YgdGhvc2UgcHVzaGVzLiBUaGF0IG5vdCB0byBzYXkgcGVvcGxlIGRvbiBsb3ZlIHRoZWlyIGNsdWJzLiBUaGF0IG5vdCB0byBzYXkgY2x1YnMgZG9uIGRvIGEgd29ybGQgb2YgZ29vZCBmb3Igc29jaWV0eSB0aHJvdWdoIHNlcnZpY2VzLCBqdW5pb3Igc3BvcnQgZGV2ZWxvcG1lbnQsIGNvbW11bml0eSBzcG9uc29yc2hpcCwgc3VwcG9ydGluZyB2b2x1bnRlZXJzIGFuZCBteXJpYWQgb3RoZXIgZ29vZCBkZWVkcy4gCkRpZSBLcmFua2hlaXQgaGF0IGNhIGVpbmUgTmV1ZXJrcmFua3VuZ3NyYXRlIHZvbiAxIGluIDEwMCAwMDAgUGVyc29uZW4gdW5kIGlzdCBkYWhlciBiZWkgQWxsZ2VtZWlucnp0ZW4gc2VociB3ZW5pZyBiZWthbm50IHVuZCBzb21pdCBzY2h3ZXIgZmVzdHp1c3RlbGxlbi4gClRoZSBTaXRrYSBDaGFtYmVyIG90IENvbW1lcmNlIG1ldCBUaHVyc2RheSBub29uIGF0IHRoZSBTaXRrbiBJbm4gZm9yIGEgZGlubmVyIG1lZXRpbmcuIFRoZXkgZGVjaWRlZCB0byB3ZWxjb21lIHRoZSBsZWdpc2xhdHVyZSA6biBhcHByb3ByaWF0ZSBzdHlsZSBhbmQgUHJlc2lkZW50IFRlZCBLZXR0bGVzb24gYXBwb2ludGVkIE1heW9yIFRob21hcyBUaWxzb24sIExlc2xpZSBZYXcsIE8uIApJIG5ldmVyIHNlZW4gaXQsIHRoZXkganVzdCB0b2xkIG1lIHRoZXkgZG9uZSBpdC4gV2hlbiBJIGNvbmZyb250ZWQgdGhlIGRhZCBhYm91dCBpdCBoZSBzcHJhaW5lZCBteSB3cmlzdCBmb3IgdGVsbGluZyBoaW0gaG93IHRvIHJhaXNlIHRoZWlyIGtpZHMuIEZyb20gd2hhdCBJIHNlZW4gd2hlbiB0aGV5IHN0aWxsIGxpdmVkIG5lYXJieSwgdGhleSB3ZXJlIG5ldmVyIGNydWVsIHRvIHRoZWlyIGtpZHMsIGp1c3Qgb3ZlciBjb250cm9sbGluZy4gCkl0IHdhcyBoZWFsdGh5IG9uY2UsIGJ1dCB0aGVyZSB3YXMgc29tZXRoaW5nIHdyb25nIGluIGEgbGVnIHRoYXQgd2FzIGlnbm9yZWQgZm9yIHRvbyBsb25nLiAKQSBTb2NpbyBOZXVyb2xvZ2ljYWwgUGVyc3BlY3RpdmUgSXQgY2FuIGJlIHJlYXNvbmFibHkgYXJndWVkIHRoYXQgdGhlIGxhcmdlciBjdWx0dXJhbCBub3JtcyBhbmQgdHJhZGl0aW9ucyBmb3N0ZXIgdGhlIGRpc3Jlc3BlY3Rpbmcgb2Ygd29tZW4uIApBbmQgaGUgd2FzIG5vdCBhbG9uZSBpbiB3YXJuaW5nIHVzIGFib3V0IHRoZSBzdWJwcmltZSBtb3J0Z2FnZSBjcmlzaXMgb2YgdGhlIG1pZGRsZSBhbmQgdXBwZXIgY2xhc3Nlcy4gQnV0IGxpa2UgTmV3IE9ybGVhbnMsIHRoZSBwZW9wbGUgd2hvIHdlcmUgc3VwcG9zZWQgdG8gYmUgbWFraW5nIHN1cmUgd2Ugd2VyZSBzYWZlICB3aGljaCBpcyB0byBzYXksIHRoZSBnb3Zlcm5tZW50ICB3ZXJlIGxvb2tpbmcgdGhlIG90aGVyIHdheS4gCkkgd2lzaCBJIGtuZXcgd2hvIGRpZCBpdCBhbmQgd2h5LCBidXQgSSBoYXZlIG5vIGlkZWEuIi4gCkkndmUgaGFkIHBlcnNvbmFsIGV4cGVyaWVuY2Ugd2l0aCB0aGlzLCB3aGVuIEkgdHJpZWQgdG8gcmVwb3J0IGEgYm95ZnJpZW5kIGZvciByYXBlIHRvIGNvcCByZWZ1c2VkIHRvIGV2ZW4gdGFrZSBhIHJlcG9ydCwgYW5kIHRvbGQgbWUgdGhhdCBoZSB3YXMgYWxsb3dlZCB0byBkbyB3aGF0ZXZlciBoZSB3YW50ZWQgdG8gbWUgYmVjYXVzZSBoZSB3YXMgbXkgYm95ZnJpZW5kLiAKVGhlIDgwJSB0aGF0IGFyZSBoYXBweSB3aXRoIGV2ZXJ5dGhpbmcgYXMgaXMgaXMgbm90IGEgcHJvYmxlbSwgYXMgbG9uZyBhcyB0aGF0IHdoYXQgdGhleSBhcmUgaGFwcHkgd2l0aC4gWW91IGJlY2FtZSBhIG1hbmFnZXIgaW4gdGhpcyBlbnZpcm9ubWVudCwgc28gYWNrbm93bGVkZ2UgdGhhdCB5b3UgbWlnaHQgYmUgdGhlIG91dGxpZXIgaW4gdGhpcyBzaXR1YXRpb24uIFRoZSBvZGQgcGVyc29uIG91dCB3aG8gd2FudHMgdG8gc3VjY2VlZCBpcyB0aGUgcGVyc29uIHlvdSBuZWVkIHRvIHRha2UgYSBwZXJzb25hbCBpbnRlcmVzdCBpbiBhbmQgaGVscCBkZXZlbG9wIQpXaXRoIHRoZSBrbm93bGVkZ2UgdGhhdCB5b3UgYXJlIGdvaW5nIHRvIGdhaW4gZnJvbSByZWFkaW5nIDEwMSBXaW5uaW5nIFRvdXJuYW1lbnQgUG9rZXIgTW92ZXMgeW91IHdpbGwgYmUgYWJsZSB0byBpbXBsZW1lbnQgYSBmZXcgUG9rZXIgVmFyaWF0aW9ucyBhbmQgd2FsayBpbnRvIHlvdXIgbmV4dCBQb2tlciBUb3VybmV5IHdpdGggY29uZmlkZW5jZSBlbm91Z2ggdG8gZG9taW5hdGUgeW91ciBQb2tlciBSb29tLiAKMy4gSGFuZHMgYW5kIEFybXM6IEFzIG9uZSBhc3R1dGUgcG9saWNlIG9mZmljZXIgc2FpZCAgIGZlZXQgbmV2ZXIga2lsbGVkIGFueW9uZS4gVGhlIHJlZmVyZW5jZSB3YXMgdG8gdGhlIGZhY3QgdGhhdCBvdmVyd2hlbG1pbmdseSwgaGFuZHMgaG92ZXJpbmcgYXJvdW5kIHRoZSB3YWlzdGJhbmQgcmVwcmVzZW50IGEgdGhyZWF0LiBBdCBhbnkgbW9tZW50LCB0aGUgcGVyc29uIGNvdWxkIHByb2R1Y2UgYSB3ZWFwb24sIGFuZCBzbyBpdCdzIGltcG9ydGFudCB0byB3YXRjaCB0aGUgaGFuZHMgY2xvc2VseSBhdCBhbGwgdGltZXMuIFdoaWxlIHRoaW5ncyBsaWtlIGJhbGxlZCBmaXN0cyBhcmUgYW4gb2J2aW91cyBzaWduIG9mIGFnZ3Jlc3Npb24sIGtlZXAgaW4gbWluZCB0aGF0IG1hbnkgYXR0YWNrcyBjb21lIGZyb20gdGhlIHBvc2l0aW9uIG9mIGNyb3NzZWQgYXJtcywgb3IgaGFuZHMgaW4gcG9ja2V0cy4KVGhleSBtaWdodCBiZSB0cmltbWVkIGFuZCBzaGF2ZWQgYWxvbmcgdGhlIHNpZGVzLCBzbyB0aGF0IG9uZSBjYXJkLCBvciBvbmUgcmFuayBvZiBjYXJkICh0aGUgQWNlcywgZm9yIGV4YW1wbGUpLCBjYW4gYmUgZm91bmQgYnkgdGhlIGRlYWxlciBieSBzaW1wbHkgZmVlbGluZyBhbG9uZyB0aGUgZWRnZSBvZiB0aGUgZGVjay4uIApSZWFsIGVzdGF0ZSBpbnZlc3RpbmcgaXMgbm90IHRoZSBleGNsdXNpdmUgZG9tYWluIG9mIHRoZSB5b3VuZywgaGlwLCBhbmQgdW5hdHRhY2hlZC4gSW4gZmFjdCwgbWlkZGxlIGFnZWQgYW5kIHNlbmlvciBpbnZlc3RvcnMgYnJpbmcgc29tZSB1bmlxdWUgZXhwZXJpZW5jZXMgYW5kIGFkdmFudGFnZXMgdG8gdGhlIHRhYmxlLgpJIGhhZCB0byBjb3ZlciBMYXduIGFuZCBHYXJkZW4sIFRvb2xzLCBhbmQgU3BvcnRpbmcgZ29vZHMsIGFsbCBieSBteXNlbGYuIFdlIHRhbGtpbmcgbGl0ZXJhbGx5IGFuIGVudGlyZSBoYWxmIG9mIHRoZSBidWlsZGluZyB3aXRoIGFic29sdXRlbHkgbm8gd2F5IHRvIHNlZSBldmVyeXRoaW5nIGdvaW5nIG9uIGF0IG9uZSBnaXZlbiBtb21lbnQuCkkgd2FzIHJpZ2h0IGFib3V0IHRvIGZ1Y2tpbmcgZmFsbCBhc2xlZXAgYW5kIEkgZ3Vlc3MgaGUgd2FzIGJlaW5nIHF1aWV0IHRoaXMgdGltZSB0byBzdXJwcmlzZSBtZSBiZWNhdXNlIEkganVzdCBzdWRkZW5seSBmZWx0IGl0IG9uIG15IGFzcy4gQW5kIGhlIHdhcyBmdWNraW5nIHNtaWxpbmcgbGlrZSBhIGNvY2t5IGFzc2hvbGUgc28gSSBnb3QgaXQgb24gbXkgaGFuZCBhbmQgcnViYmVkIGl0IG9uIGhpcyBmYWNlLiAKNy4gU2V0IGJvb2J5IHRyYXBzIGluIHlvdXIgaG91c2UuIElmIHlvdSB0aGluayB5b3VyIGNoZWF0aW5nIGh1c2JhbmQgbWF5IGJlIGJyaW5naW5nIHNvbWVvbmUgaW50byB5b3VyIGhvbWUgd2hpbGUgeW91IGFyZSB0cmF2ZWxpbmcgb3Igb3V0LCBzZXQgc29tZSB0cmFwcy4gCldlbm4gd2lyIGRpZXNlIG9kZXIgamVuZSBBcnpuZWltaXR0ZWwgenVyIEhlaWx1bmcgdW5zZXJlciBLcmFua2hlaXRlbiBlaW5uZWhtZW4sIG1hY2hlbiB3aXIgdW5zIHJlY2h0IHNlbHRlbiBHZWRhbmtlbiBkYXJiZXIsIHdvcmF1cyBzaWUgYmVzdGVoZW4sIHdhcyBzaWUgZW50aGFsdGVuLCB3aWUgc2llIGhlcmdlc3RlbGx0IHdlcmRlbi4gCldoZW4gdGhlIHZpY3RpbSB3cmlnZ2xlZCBhbmQgY3Jhc2hlZCBpbnRvIHRoZSBjaWdhcmV0dGUgZGlzcGxheSwgaXQgYWxlcnRlZCB0aGUgbWFuYWdlciB3aG8gZm9sbG93ZWQgaGltIG91dHNpZGUgd2l0aCBhbm90aGVyIG1lbWJlciBvZiBzdGFmZi4uIApEYXMgc2NoZWludCBtYW4gc2ljaCBpbSBNb21lbnQgbmljaHQgenUgdHJhdWVuIHVuZCB1bSBkYXMgUHJvamVrdCBuaWNodCBlbmRnbHRpZyBiZWdyYWJlbiB6dSBtc3Nlbiwgd2lyZCBlcyBsaWViZXIgenVyY2tnZXpvZ2VuIHZvcmx1ZmlnIGRhcyBoZWl0IHdvaGwsIGVzIGthbm4gaXJnZW5kd2FubiB3aWVkZXIgYXVzIGRlciBTY2h1YmxhZGUgZ2Vob2x0IHVuZCBha3R1ZWxsIHdlcmRlbiEgVmVyaGluZGVydCBpc3QgZGllIEF1dG9iYWhuIGFsc28gbm9jaCBuaWNodCBnYW56LCBhYmVyIHp1bWluZGVzdCBhdWYgZGllIGxhbmdlIEJhbmsgZ2VzY2hvYmVuIG9kZXIgZXJsZWJlbiB3aXIgaGllciBlaW5lIFByb2pla3QgQmVlcmRpZ3VuZyBhdWYgcGFsbWVyaXNjaGUsIGJ6dy4uIApUaGVpciBpcyBicmFuZCBtYW5hZ2VtZW50Lkl0IGlzIGhpZ2hseSBsaWtlbHkgTHVrYWt1IHNpZ25lZCBmb3IgdGhlIGZ1bGwgc2VydmljZS4gV2UgYWxsIGtub3cgaW4gYSBmZXcgZGF5cy5Sb2JpbnNvbiBDYW5vOiBXaG8gd2FzIHRyYWRlZCB0byBTZWF0dGxlIGFuZCBnb3QgYSBtYXggZGVhbCB2aWEgUm9jIE5hdGlvbi4iQW5kIHRoZSBtYW4gd2hvIG1hZGUgInRoZSBZYW5rZWUgaGF0IG1vcmUgZmFtb3VzIHRoYW4gYSBZYW5rZWUgY2FuIiBoYXMga2lja2VkIHRoaW5ncyBvZmYgYnkgc2lnbmluZyBhIFlhbmtlZTogUm9iaW5zb24gQ2FubywgdGhlIFlhbmtlZXMgQWxsIFN0YXIgc2Vjb25kIGJhc2VtYW4uIENhbm8gaGFzIGZpcmVkIGJhc2ViYWxsIG1vc3QgZmFtb3VzIHN1cGVyIGFnZW50LCBTY290dCBCb3JhcywgYW5kIGlzIHNldCBmb3IgYSBodW1vbmdvdXMgcGF5ZGF5IChoZSBpbiB0aGUgbGFzdCB5ZWFyIG9mIGEgc2l4IHllYXIgY29udHJhY3QpLiJJIGhhdmUgdG8gYWdyZWUgd2l0aCBTa2VldFJhZyBoZXJlLiAKU2hlJ3MgYWxyZWFkeSBzYWlkIHRoaW5ncyB3ZXJlIGRpZmZlcmVudCBmb3IgaGVyLCBhbmQgbWF5YmUgc2hlIGhhZCBhIG1vbWVudCBvZiBjbGFyaXR5IGJ1dCBzb21ldGltZXMgdGhhdCdzIG5vdCBlbm91Z2guIApUaGV5IGNhbWUgb2YgYWdlIHdoZW4gYmxhY2sgcGVvcGxlIHdlcmUgbm90IGFsbG93ZWQgdG8gdHJ5IG9uIG9yIHJldHVybiBjbG90aGVzIGF0IGEgZG93bnRvd24gZGVwYXJ0bWVudCBzdG9yZSwgYW5kIHdpdG5lc3NlZCB0aGUgRGlzdHJpY3QncyB0cmFuc2Zvcm1hdGlvbnMgdGhyb3VnaCB0aGUgY2l2aWwgcmlnaHRzIG1vdmVtZW50LCBkZXNlZ3JlZ2F0aW9uLCByaW90cyBhbmQgZ2VudHJpZmljYXRpb24uLiAKSGUgbmV2ZXIgd291bGQgbGV0IG1lIGRyaXZlIGRvd24gdG8gc2VlIGhpbSBiZWNhdXNlIGhlIHdhcyBhZnJhaWQgaGlzIHBhcmVudHMgd291bGQgZmluZCBvdXQgYWJvdXQgbWUuLiAKQXBwcmVjaWF0ZTsgRG8gbm90IGVudnk6IElmIHlvdSB0aGluayB0aGF0IHNvbWV0aGluZyBsb29rcyBnb29kIG9uIGFub3RoZXIgICBhIGhhdCwgYSBkcmVzcyBzdHlsZSwgbWFrZSB1cCAgIGdvIGFuZCB0cnkgaXQgb24geW91LiBGaXJzdCBvZiBhbGwsIGl0IGlzIG5vdCBlbnZ5IG9yIGplYWxvdXN5LiAKSSBsaXN0ZW5lZCB0byBhYm91dCBoYWxmIGFuIGhvdXIgb2YgQ3JpdGljYWwgUm9sZSBvbmNlLCBiZWNhdXNlIEkgcGxheSBEIGFuZCBJIGxpa2UgZmFudGFzeSBzdG9yaWVzLCBzbyBpdCBzZWVtcyBsaWtlIGl0IHdvdWxkIGJlIG15IHdoZWVsaG91c2UuIApBZnRlciBIb3J0b24gZGllZCwgaGUgZm91bmRlZCBhIGNhbXAgZm9yIHVuZGVycHJpdmlsZWdlZCBjaGlsZHJlbiBpbiB0aGUgaG9ja2V5IHBsYXllciBtZW1vcnksIG9uZSBvZiBzZXZlbiBvcGVyYXRlZCB0b2RheSBieSB0aGUgVGltIEhvcnRvbiBDaGlsZHJlbiBGb3VuZGF0aW9uLiBUaGUgVGF0YW1hZ291Y2hlIGxvY2F0aW9uIHdhcyBieSB0aGUgb2NlYW4sIHdpdGggc2FpbGJvYXRzLCBwb250b29uIGJvYXRzLCBhIHN0b2NrZWQgdHJvdXQgcG9uZCwgYmljeWNsZXMsIGJpZyBwbGF5aW5nIGZpZWxkcywgYSBtb2Rlcm4gZG9ybSBmb3IgY2FtcGVycyBhbmQgc3RhZmYgYW5kIGEgbGFuZGluZyBzdHJpcCBmb3IgSm95Y2UuVGhlIGZvdW5kZXIgdXNlZCB0byBmbHkgaW4gdG8gdmlzaXQgdGhlIGtpZHMgaW4gaGlzIGZsb2F0IHBsYW5lLCBzcGVuZGluZyB0aGUgYmFsYW5jZSBvZiBsYXp5IHN1bW1lciBkYXlzIHRha2luZyBncm91cHMgb2YgZWlnaHQgb24gYWVyaWFsIHRvdXJzIG9mIHRoZSBhcmVhIHdoZXJlIGhlIGhhZCBncm93biB1cCB3aXRoIG5leHQgdG8gbm90aGluZy5zaG91bGQgZ2l2ZSBiYWNrLCBKb3ljZSBvbmNlIHNhaWQuIApJdCB3b3J0aCBtZW50aW9uaW5nIHRob3VnaCwgYmVzaWRlcyBlbGVjdHJpYyBjaGFyZ2UsIHRoZXJlIGFsc28gZWxlY3RyaWMgYW5kIG1hZ25ldGljIGRpcG9sZSBtb21lbnRzIHdoaWNoIGFyZSBpbiBwcmluY2lwbGUgYWxsb3dlZCBidXQgYWxzbyBjb25zdHJhaW5lZCAoSSBkb24gaGF2ZSBhbnkgbnVtYmVycyBvbiBoYW5kIGZvciB0aGVzZSBjb25zdHJhaW50cykuIApJIHRoaW5rIGl0IGltcHJlc3NpdmUgaW4gYSB3YXkgdGhhdCBwZW9wbGUgYXJlIHdpbGxpbmcgdG8gZ28gdGhyb3VnaCBzbyBtdWNoIHBhaW4vcmlzayB0byBjaGFuZ2UgdGhlaXIgYXBwZWFyYW5jZS4KSWYgdGhleSBwbGF5IGEgZml2ZSBjYXJkIGhhbmQsIGhvd2V2ZXIsIHRoZSBwbGF5ZXJzIGZvbGxvd2luZyB0aGVtIG11c3QgcGxheSBhIGZpdmUgY2FyZCBoYW5kLiBFYWNoIHBsYXkgc2hvdWxkIGJlIGhpZ2hlciB0aGFuIHRoZSBsYXN0LCBtZWFuaW5nIGlmIEkgcHV0IGEgZnVsbCBob3VzZSB3aXRoIHRocmVlIG5pbmVzLCBhIHBsYXllciBjYW4gYmVhdCBteSBoYW5kIHdpdGggYSBmdWxsIGhvdXNlIHdpdGggdGhyZWUgY2FyZHMgaGlnaGVyIHRoYW4gYSBuaW5lIG9yIGEgZm91ciBvZiBhIGtpbmQuLiAKVGhpcyByZWxhdGl2ZWx5IHJlY2VudCBzeXN0ZW0gd2FzIEkgbGVhcm5lZCBtb3N0bHkgZnJvbSBEYXZpZCBMdXQuIEhlIGhhcyBjb21iaW5lZCBhc3BlY3RzIG9mIE9zdGVvcGF0aHksIFRoYWkgbWFzc2FnZSBhbmQgUmh5dGhtIGludG8gb25lIGZhbnRhc3RpYyBzeXN0ZW0uIApXaGVuIGFsbCB0aGUgRWFnbGVzIGNvdWxkIG1hbmFnZSB3YXMgRWxsaW90dCdzIDQyIHlhcmRlciBmb3IgYSAzMiAyNiBsZWFkLCBpdCBzZWVtZWQgaW5ldml0YWJsZSB0aGUgUGF0cmlvdHMgd291bGQgZ28gaW4gZnJvbnQsIHRoZW4gYmVjb21lIHRoZSBmaXJzdCByZXBlYXQgU3VwZXIgQm93bCB3aW5uZXIgc2luY2UgdGhleSBkaWQgaXQgaW4gdGhlIDIwMDQgYW5kICcwNSBnYW1lcy4KSSBsb3ZlIHRoYXQgdGhpbmcuIApJIHNwZWQgZG93biB0byBGYW1hJ3Mgb2ZmaWNlIHRvIGdldCBzb21lIGNsYXJpZmljYXRpb24uIFRoZSBsYXN0IHRoaW5nIEkgd2FudGVkIHdhcyBhIHllYXIncyB3b3J0aCBvZiBibG9vZCwgc3dlYXQgYW5kIHRlYXJzIHRvIGdldCB0b3NzZWQgb3V0IHRoZSB3aW5kb3cuIEkgaGFkIHRvIGtub3cgZXhhY3RseSB3aHkgRHIuIApSZWNydWl0bWVudCBlZmZvcnRzIGF0IHRoZSBjaHVyY2hlcywgd2hpY2ggYXJlIHByZWRvbWluYW50bHkgd2hpdGUsIGludm9sdmUgZmlnaHQgbmlnaHQgdGVsZXZpc2lvbiB2aWV3aW5nIHBhcnRpZXMgYW5kIGxlY3R1cmUgc2VyaWVzIHRoYXQgdXNlIHVsdGltYXRlIGZpZ2h0aW5nIHRvIGV4cGxhaW4gaG93IENocmlzdCBmb3VnaHQgZm9yIHdoYXQgaGUgYmVsaWV2ZWQgaW4uIE90aGVyIG1pbmlzdGVycyBnbyBmdXJ0aGVyLCBob3N0aW5nIG9yIHBhcnRpY2lwYXRpbmcgaW4gbGl2ZSBldmVudHMuCkJ1dCBMYSBUb3lhIGxhdGVyIHJlY2FudGVkIGhlciBjbGFpbXMsIGFuZCBub2JvZHkgaW4gdGhlIEphY2tzb24gZmFtaWx5IGV2ZXIgY29uZmlybWVkIGFueSBvZiB0aGVzZSBydW1vdXJzLiBUaGUgS2luZyBvZiBQb3Agd2FzIG9wZW4gYWJvdXQgaGlzIGZhdGhlciBjb3Jwb3JhbCBwdW5pc2htZW50LiBIZSB3ZXB0IGR1cmluZyBhIDE5OTMgaW50ZXJ2aWV3IHdpdGggT3ByYWggV2luZnJleSBhcyBoZSBhY2N1c2VkIGhpcyBmYXRoZXIgb2YgcGh5c2ljYWwgYWJ1c2UuIChKb3NlcGggSmFja3NvbiByZWNhbGxlZCBpdCB0aGlzIHdheTogd2hpcHBlZCBoaW0gd2l0aCBhIHN3aXRjaCBhbmQgYSBiZWx0LiBJIG5ldmVyIGJlYXQgaGltIHlvdSBiZWF0IHNvbWVvbmUgd2l0aCBhIHN0aWNrLiBCdXQgTWljaGFlbCBoYWQgbWFueSBvcHBvcnR1bml0aWVzIHRvIGJsYW1lIGhpcyBmYXRoZXIgZm9yIHNleHVhbCBtaXN0cmVhdG1lbnQsIGFuZCBoZSBuZXZlciBkaWQuIFRoZXJlIGlzIG5vIGtub3duIGV2aWRlbmNlIHRvIHN1cHBvcnQgdGhlIGNsYWltLgpIYWQgNDIgcm91bmRzIG9mIHJhZGlhdGlvbgpJIGNvbmNlcm5lZCBhYm91dCB5b3VyICJqZXJrIiBjb21tZW50LiBJdCBub3QgeW91ciBzaGFtZSB0aGF0IHRoaXMgaXMgYSBwcm9jZWR1cmUgd2l0aCBhIGphY2tlZCB1cCBwcmljZSBBTkQgdW5jbGVhciBiaWxsaW5nIC8gcmVpbWJ1cnNlbWVudC4gCkxlcyBMYXBvbnMgZW4gY29uc29tbWVudCBsZXMgZmV1aWxsZXMgY3VpdGVzIGRhbnMgZHUgbGFpdCBkZSByZW5uZSBldCBjb25zZXJ2ZW50IGxlIHBvaXNzb24gZGFucyBjZXMgbW1lcyBmZXVpbGxlcy4gClRoZSBuaWdodCBiZWZvcmUgc2hlIHdhcyBzdXBwb3NlZCB0byBsZWF2ZSwgc2hlIGNhbGxlZCBtZSwgZGVzcGVyYXRlIHRvIGZpbmQgc29tZW9uZSByZXNwb25zaWJsZSB0byB0YWtlIHRoZSBkb2cuIApFcm5pZSBTY2hlcmVyJ3MgaG9tZSBBcyBhIHByb2Zlc3Npb25hbCBwb2tlciBwbGF5ZXIsIEVybmllIGhhZCB0cm91YmxlIGdldHRpbmcgYSBsb2FuIHRvIHB1cmNoYXNlIGhpcyBkcmVhbSBob21lIGluIEJyZWEsIENhbGlmLiBIaXMgZmF0aGVyIGxvYW5lZCBoaW0gb3ZlciAkNjAwLDAwMCBmb3IgdGhlIHB1cmNoYXNlIG9mIHRoZSBob3VzZSBoZSB3YW50ZWQuIEV2ZXJ5IG1vbnRoLCBFcm5pZSBvd2VkIGhpcyBkYWQgYSBwYXltZW50IG9mICQzLDg1MC4gClRoZSBEb3ducyB3aWxsIGtpY2sgb2ZmIGl0cyAyNCByYWNlIHN0YWtlcyBzY2hlZHVsZSBEZWMuIDMgd2l0aCB0aGUgSW5hdWd1cmFsIGFuZCBTYW5kcGlwZXIsIGJvdGggJDEwMCwwMDAgNiBmdXJsb25nIHNwcmludHMgZm9yIDIgeWVhciBvbGRzLiBUaGUgOTEgZGF5IG1lZXQgZmVhdHVyZXMgc2l4IGdyYWRlZCBzdGFrZXMsIHRvcHBlZCBieSB0aGUgR3JhZGUgSUkgJDM1MCwwMDAgVGFtcGEgQmF5IERlcmJ5IG9uIEZlc3RpdmFsIERheSBvbiBNYXJjaCAxMS4uIApJdCBzdGlsbCBydWRlLCBiZWNhdXNlIGl0IG5vdCByZWFsbHkgYWR2aWNlLiBBZ2FpbiwgaWYgeW91IGdpdmUgYWR2aWNlIGluIGEgcmFudCBmb3JtYXQgdG8gc3RyYW5nZXJzIHdobyBkaWRuIGFzaywgeW91IGFyZSBiZWluZyBhIGRpY2suIEl0IHdhcyB1bnNvbGljaXRlZCBhbmQgY29uZGVzY2VuZGluZy4gSG93ZXZlciwgaXQgd291bGQgbm90IGJlIG1hbnNwbGFpbmluZy4gQmVjYXVzZSBpdCBkb2VzbiBoYXZlIHRoZSBzYW1lIGltcGxpY2F0aW9ucy4gV29tZW4gYXJlIHVzZWQgdG8gYmVpbmcgdGFsa2VkIGRvd24gdG8sIHRoZXJlIGlzIGEgbG9uZyBoaXN0b3J5IG9mIGl0IGluIHNleGlzbS4gU28gd2hlbiBtYW5zcGxhaW5pbmcgaGFwcGVucywgaXQgY2FycmllcyB3aXRoIGl0IHRoZSBjb25ub3RhdGlvbnMgb2YgYWxsIHRoYXQgc2V4aXNtLiBJdCBleGlzdHMgaXMgYSB3b3JsZCB3aGVyZSB3b21lbiBzdGlsbCBvZnRlbiBmZWVsIGlnbm9yZWQgYW5kIHNpZGVsaW5lZCwgYW5kIGl0IGhlbHBzIHRvIGNvbnRpbnVlIHRoYXQuIFRoYXQgd2hhdCBtYWtlcyBpdCBkaWZmZXJlbnQuCkhvdyBzZXggYWJ1c2VyIEplZmZyZXkgRXBzdGVpbiBpcyBjb25uZWN0ZWQgdG8gVHJ1bXAKVGhpbmtpbmcgYWJvdXQgdGhlIGZ1dHVyZSBpcyB1bHRpbWF0ZWx5IGEgZnJ1aXRsZXNzIGlkZWEgYXMgdGhlcmUgYXJlIHRvbyBtYW55IHZhcmlhYmxlcyB0aGF0IGdvIGludG8gaXQuIElmIHlvdSB3YW50ZWQgdG8gdGhpbmsgYWJvdXQgd2hhdCB5b3UgYXJlIGdvaW5nIHRvIGRvIGluIHVuaXZlcnNpdHkgeW91J2QgaGF2ZSB0byBrbm93IGV2ZXJ5IHNpbmdsZSB0aGluZyB5b3UgYXJlIGdvaW5nIHRvIGRvIHVwIHRvIHVuaXZlcnNpdHkgYW5kIHRoYXQncyBzaW1wbHkgaW1wb3NzaWJsZSwgSSdtIG5vdCBzYXlpbmcgaXQncyBhIHN0dXBpZCB0aGluZyB0byBkbywgaXQgY2FuIGJlIGZ1biB0byBtYWtlIHVwIHNjZW5hcmlvcyBhYm91dCB3aGF0IHdlIGFyZSBnb2luZyB0byBkbyB3aXRoIG91cnNlbHZlcywgYnV0IHRyeSBub3QgdG8gd29ycnkgYWJvdXQgaXQsIG1vdmUgaW50byB0aGUgZnV0dXJlIHdpdGggYSBoZWFsdGh5IGRvc2Ugb2YgY2F1dGlvbiBhbmQgdHJ5IHRvIGxlYXJuIGZyb20gdGhlIG1pc3Rha2VzIHlvdSBtYWtlIGFuZCB0aGF0J3MgYWxsIGFueW9uZSBjYW4gYXNrIHlvdSB0byBkby4gSWYgdGhlIHN0cmVzcyBnZXRzIHRvIG11Y2ggdG8gaGFuZGxlIG9uIHlvdXIgb3duIHRyeSB0byBmaW5kIHNvbWVvbmUgeW91IHRydXN0IGFuZCB0YWxrIHRvIHRoZW0gYWJvdXQgaXQsIGFuZCB1bHRpbWF0ZWx5IGp1c3QgdHJ5IHRvIHJlc3BlY3Qgd2hvIHlvdSBhcmUgYW5kIGhvdyB5b3UgdHJlYXQgeW91cnNlbGYuIApGb3JtYXQ6IFRvIHN0YXJ0IHRoZSB3b3Jrb3V0LCBCdXNjaCBoYWQgbWUgbGllIGRvd24gb24gYSBtYXNzYWdlIHRhYmxlIHdpdGggYSBzdHJldGNoaW5nIGJvYXJkIHBsYWNlZCBvbiB0b3AuIFRoZW4sIGhlIHN0cmFwcGVkIG1lIGluLiBGb3JlYm9kaW5nLCByaWdodD8gVGhlIHJlYXNvbiBmb3IgYmVpbmcgc3RyYXBwZWQgaW4gaXMgdGhhdCBpdCBzdGFiaWxpemVzIHRoZSBib2R5LiBUaGUgc3RyYXBzIHdlcmUgcGxhY2VkIG92ZXIgbXkgaGlwcyBhbmQgd2hpY2hldmVyIGxlZyBCdXNjaCB3YXNuJ3Qgd29ya2luZyB3aXRoLiBpdCBrZXB0IG15IGhpcHMgYW5kIHJlbGF4ZWQgbGVnIGZyb20gcmFpc2luZyB1cCBhbmQgaW1wZWRpbmcgd2hhdGV2ZXIgc3RyZXRjaCB3ZSB3ZXJlIHdvcmtpbmcgb24pLiBUaGVuIEJ1c2NoIGdvdCB0byB3b3JrLiBXZSBzdHJldGNoZWQgb3V0IGVhY2ggbGVnIChxdWFkLCBjYWxmLCBoYW1zdHJpbmcsIGhpcHMsIGhpcCBmbGV4b3JzKSBhbmQgdGhlbiBzdHJldGNoZWQgb3V0IG15IHJvdGF0b3IgY3VmZiBhbmQgcGVjcy4gVGhlbiBJIG1vdmVkIG9udG8gc29tZSBwYWRkaW5nIG9uIHRoZSBmbG9vciBzbyBCdXNjaCBjb3VsZCBtYXNoIG1lLiBVc2luZyBoaXMgZmVldCBhbmQga25lZXMsIEJ1c2NoIHVzZWQgcHJpbmNpcGFscyBvZiBUaGFpIG1hc3NhZ2UgYW5kIGZvb3Qgc2hpYXRzdSB0byBrbmVhZCBteSBsZWdzLCBwZWNzLCBhbmQgc2hvdWxkZXJzLgpQdXQgb24gYSBzd2VhdGVyIGFuZCBnbyBvdXRzaWRlLCB0aGVuIHB1dCBvbiBhIHZlc3QgT1ZFUlRPUCBvZiB0aGUgc3dlYXRlci4gRG8geW91IGdldCBjb2xkZXIgdGhhbiB5b3Ugd2VyZSB3aXRob3V0IHRoZSB2ZXN0PwpIZXJhY2xldW0gc3Bob25keWxpdW0KQW5sYWRpZ2ltIGthZGFyaXlsYSBnZW5jIGJpciBhcmthZGFzaW1zaW4uIEJ1IGdvcnVzdGVuIGt1cnR1bG1hbGlzaW4sIGJveWxlIHNleWxlcmkgaXJrY2lsYXIgc295bGVyLi4gClRvIGhlbHAgeW91IG1ha2UgeW91ciBtaW5kIGFuZCBwaWNrIGEgY2FzaW5vLCB3ZSBoYXZlIGNyZWF0ZWQgYSBsaXN0IG9mIHRoZSBiZXN0IFBsYXl0ZWNoIGNhc2lub3Mgb24gdGhlIEludGVybmV0IHdoZXJlIHlvdSBjYW4gZW5qb3kgc2VhbWxlc3MgZ2FtaW5nIGluIGEgc2VjdXJlIGVudmlyb25tZW50Li4gCklmIGl0J3Mgc29tZXRoaW5nIGxpa2UgV29ybGQgV2FyIElJSSBvciBzb21lIG90aGVyIGhvcnJpYmxlIHRoaW5nLCB5b3Ugc2hvdWxkIHRlbGwgdGhlIEZveCA1IE5ld3MuIFRoaXMgbWF5IHNvdW5kIHJlYWxseSBzaWxseSwgYnV0IHlvdSBzaG91bGQuIApTbywgbm90IGEgaHVnZSBzZWxlY3Rpb24sIGJ1dCBlYXN5IHRvIG1ha2UgYSBnb29kIGNob2ljZS42LzEwLiAKQSBtYW4ncyBtYXNzYWdlIGluIENoZWxzZWEgaGFkIGFuIHVuaGFwcHkgZW5kaW5nICAgYW5kIG5vdyBoZSdzIHN1aW5nIG92ZXIgaXQuCldoZW4gSSB3YXMgbG9va2luZyBhdCBnZXR0aW5nIHN0YXJ0ZWQgd2l0aCByZWFsIG1vbmV5IHBva2VyIGhlL3RoZXkgKHdoYXRldmVyKSBoZWxwZWQgbWUgZ2V0IHN0YXJ0ZWQuIEV2ZW4gZ2F2ZSBtZSAkMTAgZnJlZSB0byBzaWduIHVwIHdpdGggQUNSLiAKVGhlc2UgbGFzdCAxMCB5ZWFycyBoYXZlIGRlZmluaXRlbHkgdGFrZW4gYSB0b2xsIG9uIG1lIGFzIGEgZmFuLiBJIHN0aWxsIGxvdmUgdGhlIFZvbHMsIHRoZXkgYXJlIHRoZSBzcG9ydHMgdGVhbSBJIGNhcmUgYWJvdXQgdGhlIG1vc3QgYnkgYSBsb25nIHNob3QuIFRoYXQgc2FpZCwgSSBsb29rIGF0IFNhdHVyZGF5cyBkaWZmZXJlbnRseSBub3cuIApFZGl0MzogdG8gdGhlIHBlb3BsZSByZXNwb25kaW5nIHRoYXQgR2FtZXN0b3AgaGFkIG5vdGhpbmcgdG8gZG8gd2l0aCB0aGlzIHRyZW5kLiBQbGVhc2UgbGV0IG1lIHJlbWluZCB5b3UgdGhhdCB0aGUgb3JpZ2luYWwgcGxhbiBmb3IgWGJveCBPbmUgd2FzIHRvIGxvY2sgcGh5c2ljYWwgbWVkaWEgdG8gYW4gYWNjb3VudCBzcGVjaWZpY2FsbHkgdG8gY29tYmF0IHRyYWRlIGlucy4KSnVuaW9yIGVsaXRlIGF0aGxldGVzIGhhdmUgdW5kZXJnb25lIGluaXRpYWwgbmF0aW9uYWwgc2VsZWN0aW9uIGFuZCBhcmUgeW91bmdlciB0aGFuIGF0aGxldGVzIGV4YW1pbmVkIHByZXZpb3VzbHkgKG1lYW4gYWdlIDEzIHllYXJzKS4gRGVjaXNpb24gbWFraW5nIHVuZGVyIG1lbnRhbCBwcmVzc3VyZSBpcyBleHBsb3JlZCBpbiB0aGlzIHNhbXBsZS4gRHVyaW5nIHBlcmZvcm1hbmNlIGFuIGF0aGxldGUgZW5jb3VudGVycyBhIHdpZGUgYXJyYXkgb2YgbWVudGFsIHByZXNzdXJlczsgdGhlc2UgaW5jbHVkZSB0aGUgcHN5Y2hvbG9naWNhbCBpbXBhY3Qgb2YgZXJyb3JzLCBuZWdhdGl2ZSBmZWVkYmFjaywgYW5kIHJlcXVpcmVtZW50cyBmb3Igc3VzdGFpbmVkIGF0dGVudGlvbiBpbiBhIGR5bmFtaWMgZW52aXJvbm1lbnQgKEFuc2hlbCBhbmQgV2VsbHMsIDIwMDA7IE1lbGxhbGlldSBldCBhbC4sIDIwMDkpLiAKSSBkb24gYmVsaWV2ZSB0aGUgY3VycmVudCBwb2xpdGljYWwgYW5kIGVjb25vbWljIHN5c3RlbSBpbiBDaGluYSB3aWxsIGJlIGFibGUgdG8gZ292ZXJuIENoaW5hIGludG8gYSBoaWdoZXIgbWlkZGxlIGluY29tZSBjb3VudHJ5LiBDaGluYSB3aWxsIGdldCBzdHVjayBzb29uLiAKSWYgbW9yZSB0aGFuIDgwIHBlciBjZW50IG9mIHRoZSBndWVzdHMgYXJlIEFtZXJpY2FuLCB0aGUgY3JldyBvcmRlcnMgZXh0cmEga2V0Y2h1cC4gV2hlbiB0aGUgcGVyY2VudGFnZSBvZiBDaGluZXNlIHBhc3NlbmdlcnMgaW5jcmVhc2VzLCB0aGV5IGJ1bXAgdXAgdGhlIHN1cHBseSBvZiBzbGljZWQgZnJ1aXQsIHNlYWZvb2QgYW5kIHJpY2UuIApZZXMsIHllcywgd2Uga25vdywgdGhleSdyZSBjYWxsZWQgYmFyYmVscywgYnV0IGZvciBvdXIgcHVycG9zZXMsIGl0J3MgYSBGdSBNYW5jaHUgbXVzdGFjaGUuIEZvciBvbmUgdGhpbmcsIGl0J3Mgbm90IGEgdHVzayAgIGl0J3MgYSB0b290aC4gClNlZW1zIHRvIG1lIHRoYXQgVEhKIGlzIGEgYml0IG9mIGEgY2h1Y2tlciBidXQgaGFzIHBvdGVudGlhbCB0byBpbXByb3ZlIGhpcyBlZmZpY2llbmN5IGV4YWN0bHkgbGlrZSBKRVQgZGlkLiBJZiBoZSBkb2VzIHRoaXMgYW5kIHN0aWNrcyBhcm91bmQgaGUgY291bGQgYmUgYSByZWFsbHkgbmljZSAzcmQgb3IgNHRoIG9wdGlvbiBvbiB0aGlzIHRlYW0uQW5kIEkgYWdyZWUuIApJdCB3aWxsIG5ldmVyIGJlLiAKQmFza2V0YmFsbCBoYXMgYmVlbiB2ZXJ5IGdvb2QgdG8gbWUgaW4gbXkgY2FyZWVyLCBMb3ZlIHNhaWQuIE1hdHRoZXcgRGVsbGF2ZWRvdmEgKGNvbmN1c3Npb24gcHJvdG9jb2wpIG1pc3NlZCB0aGUgZ2FtZS4gCkRvZXMgYSBwcml2YXRlIHJlc2N1ZSBoYXZlIHRoZSBsZWdhbCByaWdodCB0byBoYXZlIGEgdGVuIHBhZ2UgYXBwbGljYXRpb24gYW5kIGEgJDYwMCBhZG9wdGlvbiBmZWUgYW5kIGJyYWcgdGhhdCB0aGV5IHJlamVjdCA3NSUgb2YgYXBwbGljYW50cyAoYXMgZGlkIGEgcmVzY3VlIEkgd29ya2VkIHdpdGggb25jZSk/IFN1cmUuIEJ1dCBpZiB0aGV5IGNsYWltIHRoYXQgdGhlaXIgZ29hbCBpcyB0byAic2F2ZSBsaXZlcyIsIHRoZW4gdGhhdCBtYWtlcyB0aGVtIGh5cG9jcml0ZXMuIE1vc3QgcGVvcGxlIG1ha2UgZmluZSBkb2cgb3duZXJzIHdpdGhvdXQgYWxsIHRoZSBnYXRla2VlcGluZy4gTWVhbiwgdGhleSBob2xkIGEgZG9nIGluIGZvc3RlciBmb3IgbW9udGhzIHdoaWxlIHRoZXkgdGFrZSBmb3JldmVyIHRvIHZldCBhIHBvdGVudGlhbCBob21lLgpGbG9wIGlzIGZpbmUgYnV0IGFnYWluIHdlIGhhdmUgMyBwbGF5ZXJzIHdpdGggcG9zaXRpb24gb24gdXMgdGhpcyBpcyBhIHRlcnJpYmxlIHBsYWNlIHRvIGJlIHJlZ2FyZGxlc3Mgb2YgaWYgd2Ugd2VyZSBob2xkaW5nIDUyIGhlcmUuIFNpZGUgbm90ZSBkb250IGNoZWNrIGRhcmsgSSBrbm93IDkwJSBvZiB0aGUgdGltZSB3ZXJlIGdvaW5nIHRvIG5vdCBsZWFkIGhlcmUgYnV0IHllYWggZG9udCBkbyB0aGF0LgpCdXQgaXQgaXMgc3R1cGlkIHRvIHRoaW5rIHRoYXQgdGhlc2UgcG9pbnRzIHdpbGwgYmVjb21lIHBhcnQgb2YgYW55IGRpc2N1c3Npb24gb24gc29jaWFsIG1lZGlhIG9yIGF0IG90aGVyIGZvcnVtcyB3aGVyZSBvbmx5IG1hbmlwdWxhdGVkIGNhbXBhaWducyBhcmUgc3RhZ2VkIGZvciBndW5uaW5nIGRvd24gY3JpdGljcy4gCkkgYWxzbyBvbiB0aGUgZmVuY2UgYWJvdXQgdGhlIDE3S1ZYIGFuZCB0aGUgU3RyaWtlLiAKSUdyYXZlbGluZyAgMyBwb2ludHMgIHN1Ym1pdHRlZCA5IGRheXMgYWdvCkkgaGF2ZSBwbGF5ZWQgc2V2ZXJhbCBkaWZmZXJlbnQgdHlwZXMgb2YgY2hhcmFjdGVycyBpbiBPYmxpdmlvbiAobXkgZmlyc3QgdGltZSB3aXRoIGEgQkdTIGdhbWUpIGFuZCBTa3lyaW0uLiAKQSBsb3Qgb2YgYm9va3MgYW5kIHRyYWluaW5nIHNpdGVzIGRvbiBldmVuIG1lbnRpb24gaXQsIGJlY2F1c2UgaXQgc28gd2VsbCBrbm93bi4gSXQgbm90IGFsd2F5cyBqYWNrIGhpZ2guIApBbHNvLCBpdCBhIHR5cGljYWwgbmFycmF0aXZlIHdoZW4gaXQgY29tZXMgdG8gaG93IHRoZSBCcml0aXNoIGVzdGFibGlzaG1lbnQgdmlld3MgYW5kIHRyZWF0cyB0aGUgSXJpc2guIFRha2UgdGhlIE5vcnRoZXJuIElyaXNoIGJvcmRlciwgaXQgdW5kZXIgdGhyZWF0IHJpZ2h0IG5vdywgYW5kIGZyb20gdGhlIHNhbWUgc3RhZ2UuIEJyaXRpc2ggcG9saXRpY2lhbnMgdGhyZWF0ZW5pbmcgZm9vZCBhbmQgb2lsIHNob3J0YWdlcyBhcyBhIG5lZ290aWF0aW9uIHRhY3RpYyBhbmQgc3BlYWtpbmcgZG93biB0byBvdXIgcmVwcmVzZW50YXRpdmVzIGZvciBub3Qga25vd2luZyB0aGVpciBwbGFjZSEgSWYgeW91IGV2ZXIgd2FudCB0byB1bmRlcnN0YW5kIGV4YWN0bHkgaG93IHBhc3Npb25hdGUgd2UgYXJlIG9uIEJyaXRhaW4gdHJlYXRtZW50IG9mIHVzIElyaXNoLCBJIHN1Z2dlc3QgZ29pbmcgdG8gTm9ydGhlcm4gSXJlbGFuZCBhbmQgdHJ5aW5nIHRvIGRlZmVuZCBhbnkgb2YgdGhlIGNvdW50bGVzcyBhdHJvY2l0aWVzIHZpc2l0ZWQgdXBvbiBJcmlzaCBDYXRob2xpY3MgYnkgdGhlIEJyaXRpc2ggZ292ZXJubWVudCwgeW91IHNvb24gZmluZCBvdXQgdGVjaG5pY2FsaXRpZXMgYW5kIGNvbXBhcmlzb25zIHRvIG90aGVyIHJlZ2lvbnMgb2YgdGhlIHdvcmxkIHdvbiBkdWxsIHRoZWlyIHJlc3BvbnNlIS4gCkRpc2FzdGVya2l0c2xpbWl0ZWQgICAxIHBvaW50cyAgc3VibWl0dGVkIDYgaG91cnMgYWdvCkkgc3RpbGwgZG9uJ3QgdGhpbmsgSSdtIGdvb2QuIEkgc3RpbGwgaGF2ZSB0aGlzIGZlZWxpbmcgSSdtIGEgdG90YWwgaW1wb3N0b3IuIEJ1dCBhdCBQQ0EsIHdoZW4gSSB3b24gdGhlIG5hdGlvbmFscyBhbmQgaGFkIGEgZGVlcCBydW4gYWZ0ZXIgdGhhdCwgYW5kIHRoZW4gY2FtZSBpbiBzZWNvbmQgaW4gTWFjYXUsIGF0IHRoZSBQQ0EgaXQgc3RhcnRlZCBjb21pbmcgdG9nZXRoZXIsIEkgZ290IGx1Y2t5IHRvIHdpbiB0aGUgdG91cm5hbWVudCwgeW91IHN0aWxsIG5lZWQgbHVjayB0byB3aW4uIApJdCB1bnByZWRpY3RhYmxlIGFuZCB5b3UgaGF2ZSBsaW1pdGVkIGNvbnRyb2wsIGJ1dCB3b3JyeWluZyBhYm91dCBob3cgdGhpbmdzIHdpbGwgcGxheSBvdXQgYW5kIGhvdyB5b3UgZ29pbmcgdG8gZmFjZSB0aGVtIGluIHRoZSBmdXR1cmUgaXMgbm90IGhlbHBpbmcuIFlvdSBoYXZlIHRvIHRha2UgaXQgb25lIHN0ZXAgYXQgYSB0aW1lLiAKRklTSCBBTkQgTk8gQ0hJUFMgMjAxMApTbyB3ZSBzdHJhaWdodCB1cCBnYXZlIGhlciBjb3dzIG1pbGsgYW5kIHdhcyBoYXBweSB0byBiZSByaWQgb2YgZm9ybXVsYS4gClllcywgdGhpcyBzdHVmZiBpcyBmcmVlLiAKVGhlIFRlbXBsZSBMb2JieSBpcyBhIGRyYW1hdGljIGZvdXIgc3RvcnkgYXRyaXVtIGRlc2lnbmVkIGluIHRoZSBsaWtlbmVzcyBvZiB0aGUgRm9ydW0gb2YgYW5jaWVudCBSb21lLiAKQWZ0ZXIgYmFjayB0byBiYWNrIDUgNyBzZWFzb25zLCBVdGFoIGlzIGJvd2xpbmcgb25jZSBhZ2FpbiBkdXJpbmcgdGhlIGhvbGlkYXlzLiBXaGlsZSBubyBpbnZpdGF0aW9uIGhhcyBiZWVuIGZvcm1hbGx5IGV4dGVuZGVkIHlldCwgaXQgYXBwZWFycyB0aGF0IHRoZSBVdGVzIG1heSBiZSBoZWFkZWQgdG8gdGhlIFN1biBCb3dsIGluIEVsIFBhc28sIFRleGFzLCBvbiBEZWMuIDI3LiAKSWYgeW91IHdhbnQgdG8gY29tcGFyZSB0aGUgYWN0dWFsIGFuaW1lIG9mIHRoaW5ncyBsaWtlIElzIFRoaXMgT3JkZXIgYSBSYWJiaXQgdnMuIFZpb2xlbnQgdmlkZW8gZ2FtZXMsIHN1cmUuIEJlY2F1c2UgdGhlcmUgYSBteXJpYWQgb2YgcmVhc29uaW5nIHRvIGJlIHdhdGNoaW5nIHRoZSBmb3JtZXIgdGhhdCBoYXZlIG5vdGhpbmcgdG8gZG8gd2l0aCBzZWVraW5nIHNleHVhbCBncmF0aWZpY2F0aW9uIGZyb20gY2hpbGRyZW4uIApUaGV5IGFyZSBhbHdheXMgbG9va2luZyBmb3IgcHJvZHVjdHMgdGhhdCB0aGV5IGNhbiByZWx5IG9uLiBUaGlzIGlkZWEgaGFzIGNoYW5nZWQgYWxsIHRoZSBtYXJrZXQgYXNzb2NpYXRlZCB3aXRoIHBva2VyIGNvbGxlY3RpYmxlcy4gCk9uIHRoaXMgZGF5LCBoZSB3YXMgbWFraW5nIHRoZSByb3VuZHMgd2l0aCBtZW1iZXJzIG9mIGEgcGVyc29uYWwgaW5qdXJ5IGxhdyBmaXJtIHdob3NlIGxlYXNlIG9uIDcsMDAwIHNxdWFyZSBmZWV0IGluIGEgbmVhcmJ5IGJ1aWxkaW5nIGlzIGR1ZSB0byBleHBpcmUuIE5vdCBzdXJwcmlzaW5nbHksIEthdWZtYW4gYW5kIGhpcyBjbGllbnRzIGFyZSBmaW5kaW5nIHRoZSBtYXJrZXQgY29uZGl0aW9ucyBmYXZvcmFibGUuIApUaGlzIGlzIGEgdmVyeSBjb21wbGV4IGFuZCBmb3JtYXRpdmUgc3RhZ2UgYW5kIGlzIGJlc3QgZm9zdGVyZWQgYnkgYSB2YXJpZXR5IG9mIGludGVyYWN0aXZlIG9iamVjdHMgYW5kIHRveXMgdGhyb3VnaCB3aGljaCBhY2N1cmF0ZSBhbmQgcmVsaWFibGUgc2NoZW1hcyBjYW4gZGV2ZWxvcC4KTGFzdCBtb250aCBLYWxtIGlzc3VlZApJZiB3ZSB3YW50IHRvIHVzZSBSYW5rZWQgQ2hvaWNlIFZvdGluZywgaXQgc2hvdWxkIG9ubHkgdGFrZSBwbGFjZSBhdCB0aGUgRE5DLiBTbywgdm90ZXJzIHdvdWxkIHJhbmsgdGhlIGNhbmRpZGF0ZXMgYW5kIHRoZSBkYXRhIHdvdWxkIGJlIHVzZWQsIGlmIHRoZSBETkMgZG9lc24gcHJvZHVjZSBhIG5vbWluZWUgb24gdGhlIGZpcnN0IGJhbGxvdC4gQWZ0ZXIgdGhlIGZpcnN0IGJhbGxvdCwgdGhlIGNhbmRpZGF0ZSB3aXRoIHRoZSBmZXdlc3QgZGVsZWdhdGVzIHdvdWxkIGJlIHJlbW92ZWQgYW5kIGhpcy9oZXIgc2Vjb25kIGNob2lzZXMgd291bGQgYmUgcmVkaXN0cmlidXRlZCB0byB0aGUgb3RoZXIgY2FuZGlkYXRlcyAgIGFuZCB0aGlzIHdvdWxkIGJlIGRvbmUgdW50aWwgd2UgaGF2ZSBzb21lb25lIHdpdGggNTAlKzEuLiAKSSBkb24gdGhpbmsgYW55IG9mIHRoZSBhbHRlcm5hdGl2ZXMgd2lsbCBldmVyIHRhc3RlIGFzIG5pY2UgYXMgd2hleSwgdW5mb3J0dW5hdGVseS4uIApFdmVuIHRob3VnaCB5b3UgY2FuIGNvbGxlY3QgYSBsb3Qgb2YgaW5mb3JtYXRpb24gYWJvdXQgb25saW5lIHBva2VyIHNpdGVzIHRocm91Z2ggaW50ZXJuZXQsIHlvdSBzaG91bGQgYWxzbyBjb25zaWRlciBvdGhlciBwZW9wbGUgcHJlZmVyZW5jZSBsaWtlIHlvdXIgZnJpZW5kcywgZmFtaWx5IGV0Yy4gCkl0IGNyYXp5IGhvdyBtdWNoIHN0dWZmIHRoaXMgZ2FtZSBhcyB0byBvZmZlciwgbXkgZmlyc3Qgc2tpbGxzIEkgd2FudCB0byBtYXN0ZXIgZm9yIG5vdyBhcmUgOgpDJ2VzdCBlbmNvcmUgbGEgbGlicmFpcmllIHF1aSBwYXNzZXJhaXQgbGUgcGx1cyBpbmFwZXJ1LiBOJ2VuIHZveW9ucyBub3VzIHBhcyBxdWVscXVlcyB1bmVzIGVuY29yZSBxdWkgcHJzZW50ZW50IGxlcyBtbWVzIHZpdHJpbmVzLCAgbGEgZm9pcyBzb2JyZXMgZXQgZWZmaWNhY2VzLCBwdWlzcXUnZWxsZXMgbW9udHJlbnQgYmllbiBjZSBxdWkgZXN0IG9mZmVydCAgbGEgY2xpZW50bGUuIEVuIGNlIHRlbXBzIGwgZWxsZXMgbmUgc3ViaXNzYWllbnQgcGFzIGxhIGNvbmN1cnJlbmNlIGFjaGFybmUgZGVzIHNpdGVzIGVuIGxpZ25lIHF1aSBtZXR0ZW50IGVuIGRhbmdlciBqdXNxdScgbGEgc3VydmllIGR1IG10aWVyIGRlIGxpYnJhaXJlLiAKSGUgcmV0aXJlZCBpbiAxOTc0Li4gCklkayBidXQgc29tZXRoaW5nIGhhcyB0byBnaXZlLiAKQXMgcGxheWVkIGZvbGQgdG8gdGhlIHJhaXNlIGZvciB0aGUgc2FtZSByZWFzb24uIApUaGUgQ29tcGxldGUgQ0QgY29sbGVjdGlvbiBmb3IgSGVhcnRHb2xkL1NvdWxTaWx2ZXIgaW5jbHVkZWQgY2xhc3NpYyBhdWRpbyB0cmFja3MsIGJ1dCB0aGV5IHdlcmUgcmUgc2FtcGxlZCwgaGVuY2Ugbm90IGZhaXRoZnVsIHRvIHRoZSBvcmlnaW5hbCBzb3VuZHRyYWNrLiBUaGVyZSBpcyBubyBvZmZpY2lhbCByZWxlYXNlIG9mIHRoZSBvcmlnaW5hbCBHU0Mgc291bmR0cmFjay4gVGhpcyBkaXNhcHBvaW50cyBtZS4KSWYgeW91IGNhbiBnZXQgeW91ciBoYW5kcyBvbiBhIGNvcHkgb2YgMiwgb3IgYSBQQyBjYXBhYmxlIG9mIGVtdWxhdGluZyBpdCwgcGxheSB0aGF0IG5leHQuIEkgY2FuIHN0cmVzcyBlbm91Z2ggaG93IG11Y2ggSSByZWNvbW1lbmQgcGxheWluZyB0aGUgZ2FtZXMgaW4gZWl0aGVyIHJlbGVhc2Ugb3JkZXIgb3IgZXZlbiBjaHJvbm9sb2dpY2FsIG9yZGVyLiBTa2lwcGluZyBnYW1lcyBtZWFucyB5b3UgY2FuIGV4cGVyaWVuY2UgdGhlIHNlcmllcyBhcyBhIHdob2xlIGFuZCB0aGUgZGV2ZWxvcG1lbnQgdGhhdCBjb21lcyB3aXRoIHRoYXQuLiAKVGhpcyBpcyBhIGJlZ2lubmluZyBvZiBhIGhvcnJpYmxlIHNpdHVhdGlvbiwgd2l0aCBzbyBtYW55IGZhY3RvcnMuIEplYWxvdXN5LCBmaW5hbmNpYWwgaW5lcHRpdHVkZSwgdHdvIGZhY2VkbmVzcy4gWW91ciBodXNiYW5kIHdpbGwga2VlcCBvbiBnZXR0aW5nIG1vcmUgYW5kIG1vcmUgcmVzZW50ZnVsIG9mIHlvdXIgcGFyZW50cywgSSBzZWVuIGl0IGZpcnN0IGhhbmQgd2l0aCBteSBwYXJlbnRzLiBEaXZvcmNlIG9yIG5vIGRpdm9yY2UsIHlvdSBuZWVkIHRvIHB1dCB5b3VyIGZvb3QgZG93bi4gVGhlcmUgYWx3YXlzIGEgc2l0dWF0aW9uIGluIHRoZSBmdXR1cmUgd2hlcmUgeW91ciBTTyBtaWdodCBiZWNvbWUgZmluYW5jaWFsbHkgc2VjdXJlIGVub3VnaCB0byBzdGFydCBwYXlpbmcsIGFuZCBhcyBhIHJlc3VsdCB5b3VyIHBhcmVudHMgZG9uIGhhdmUgdG8gcGF5LiBXaGF0IHRoZW4/IFlvdXIga2lkIHdpbGwgbmV2ZXIga25vdyBhYm91dCB0aGUgZ2VuZXJvc2l0eSBvZiB5b3VyIHBhcmVudHMuIFdvcnN0IHN0aWxsLCB3aGF0IGlmIGFmdGVyIHBheWluZyBmb3IgYSB3aGlsZSB5b3UgY2FuIGFmZm9yZCBpdCBhZ2Fpbj8gSG93IHdpbGwgeW91IGJlIGFibGUgdG8gYXNrIHlvdXIgcGFyZW50cyBmb3IgaGVscCBhZ2Fpbj8KIllvdSB3YWxrIGJ5IHRoZXNlIHBsYWNlcyBhbmQgdGhleSBoYXZlIGxvb2tvdXRzIHdobyBzYXksICdNYXNzYWdlLCBtYXNzYWdlLCBtYXNzYWdlLCBjb21lIHVwc3RhaXJzLCciIFBlcmFsdGEgc2FpZC4gIldlIG5lZWQgdG8gcmVndWxhdGUgdGhlc2UgYnVzaW5lc3Nlcy4iCldoeSB0aGlzIHByb21vdGlvbiBpcyBzbyBhdHRyYWN0aXZlPyBCZWNhdXNlIENsdWJXUFQgdXNlcyB1bnVzdWFsIHN1YnNjcmlwdGlvbiBzeXN0ZW0uIFVuZm9ydHVuYXRlbHkgbWFueSBvZiB0aGUgcGxheWVycyBkb24ndCB1bmRlcnN0YW5kIGhvdyBpdCB3b3JrcyBhbmQgZG9uJ3Qgd2FudCB0byB0cnkuIFRoYXQncyB3aHkgV1BUIENsdWIgZGVjaWRlZCB0byBhbGxvdyBuZXdjb21lcnMgdG8gdHJ5IHRoZSByb29tIGZvciBmcmVlISAyIHdlZWtzIGlzIGVub3VnaCBmb3IgZ2V0dGluZyBmYW1pbGlhciB3aXRoIGFsbCBvZmZlcnMgYW5kIHByaXZpbGVnZXMgb2YgVklQIHBsYW4uCldpciBzdGVoZW4gaW4gZWluZW0gc2NobXVja2xvc2VuLCBsZWljaHQgdmVyd2Focmxvc3RlbiBlbmdlbiBUcmVwcGVuaGF1cyBtaXQgaXJyc2lubmlnIHN0ZWlsZW4gSG9senRyZXBwZW4uIE5hY2hkZW0gZGllc2UgbGV0enRlIEggaXN0LCBzaWNoIHZvciB1bnMgYXVmIHd1bmRlcnNhbWUgV2Vpc2UgZWluIGtsZWluZXMgUGFyYWRpZXMuIE1laW5lIFp3ZWlmZWwgc2Nod2luZGVuIG1pdCBqZWRlbSBTY2hyaXR0LCBkZW4gd2lyIHdlaXRlciBpbiBkYXMgQXBhcnRtZW50IHZvcmRyaW5nZW4uIAozMSwgMjAxOSwgYXZlcmFnZSBQTTIuNSBjb25jZW50cmF0aW9ucyBpbiB0aGUgQmVpamluZyBUaWFuamluIEhlYmVpIHJlZ2lvbiAgIGhvbWUgdG8gbW9yZSB0aGFuIDEwMCBtaWxsaW9uIHBlb3BsZSAgIGp1bXBlZCA2LjcgcGVyY2VudCBmcm9tIGEgeWVhciBlYXJsaWVyLiAKVGhlIHdob3BwaW5nIGFtb3VudCBXYXJ3aWNrIGxvc2VzIG9uIHBva2llcwpTb2NpYWwgbWVkaWEgZmF0aWd1ZSBpcyByZWFsLiBCZXR3ZWVuIG5ld3Mgb2YgaXQgYmVpbmcgYWRkaWN0aW5nLCBjYXVzaW5nIGRlcHJlc3Npb24gYW5kIHByZXNlbnRpbmcgcHJpdmFjeSBjb25jZXJucywgbW9yZSBhbmQgbW9yZSBwZW9wbGUgYXJlIHRha2luZyBicmVha3MgZnJvbSBpdC4gV2UgbGVhcm5lZCB0aGlzIGZyb20gb3VyIG93biBHZW4gWiBzdHVkeSBhcyB3ZWxsIGFzIFBldydzIHJldmVsYXRpb24gdGhhdCA0MiBwZXJjZW50IG9mIEZhY2Vib29rIHVzZXJzIGFnZSAxOCBwbHVzIGhhdmUgdGFrZW4gYSBicmVhayBvZiAic2V2ZXJhbCB3ZWVrcyBvciBtb3JlIiBmcm9tIGl0IHRoaXMgcGFzdCB5ZWFyLiBXZSBhbHJlYWR5IGtub3cgYWxsIHRoZSByZWFzb25zIHdoeTogVGhleSdyZSBjdW1iZXJzb21lLCBleHBlbnNpdmUsIG5vdCB2ZXJ5IHBvcnRhYmxlIGFuZCBzb2xpdGFyeS4gQXVnbWVudGVkIHJlYWxpdHkgd2lsbCBjb250aW51ZSB0byBzdWZmb2NhdGUgdmlydHVhbCByZWFsaXR5IGFzIHRoZSBjb25zdW1lciBpbW1lcnNpdmUgbWVkaWEgb2YgY2hvaWNlIGluIDIwMTkuCiJ0aW1lIGlzIG1vbmV5IGFuZCBtb25leSBpcyB0aW1lIiBpcyBhIGh1Z2UgdmFsdWUgaW4gQ2hpbmVzZS4gSSdtIG1vcmUgdGhhbiBzdXJlIHRoZXkgY2FuIGxlYXJuIHByb3BlciBwb2tlciB0aW1lIHZhbHVlIG1vbmV5IHBvdCBvZGQvZXF1aXRpZXMuIEFuZCBpbiBhZGRpdGlvbiB0byBhIG1vbmV0YXJ5IHN5c3RlbSBwYXJhbGxlbCB0byB0aGUgV2VzdCwgZm9yIG51bWJlcnMvbnVtZXJvbG9neSwgdGhlIENoaW5lc2UgaGFzIHRoZWlyIG93biBDYWxsaWdyYXBoeSB3cml0dGVuIG51bWJlcmluZyBzeXN0ZW0gYmVmb3JlIG1vZGVybml6aW5nIHdpdGggQXJhYmljIG51bWVyYWxzIHRoYXQgc3VwZXJzZWRlZCB0aGUgUm9tYW4gbnVtZXJpYWxzLiAKV2hpY2ggYnJpbmdzIHVzIHRvIHRoZSBiZWdpbm5pbmcuIEFuZCB0aGUgYmlydGggY29udHJvbCBtb3ZlbWVudCBiZWdhbiBhcyBwYXJ0IG9mIGFuIGludGVybmF0aW9uYWwgaWRlb2xvZ3kgb2YgZXVnZW5pY3MuIApUaGUgd2Vic2l0ZSBtYXkgbG9vayB2ZXJ5IHdlbGwgbGlrZSBmYWNlYm9vayBvciBhbnkgb3RoZXIga2luZCBvZiBzZWN1cml0eSBpbnZlbnRlZCB3ZXNiaXRlLiAKVW5kIHdlbm4gZGFzIHJ1bSBpc3QsIGtvbW10IGVyIHp1bSBGbGVpc2NoYWJmbGxlIHNvcnRpZXJlbiBpbiBkaWUgTWV0emdlcmVpIG9kZXIgZXIgbWh0IGRlbiBSYXNlbiBkZXIgc3RkdGlzY2hlbiBHcm5mbGNoZW4uU29sbHRlc3QgZHUgZGljaCBpbiBkZXIgQnVkZSBpbiBkaWUgZHUgZ2VzY2hpY2t0IHdpcnN0IHdvaGwgZmhsZW4gdW5kIGRpZSBtY2h0ZW4gZGljaCBhdWNoLCBrYW5uIGVzIHNlaW4sIGRhc3MgZGllIEJ1ZGUgZGFubiBBYmxzZSBhbiBkaWUgWmVpdGFyYmVpdHNmaXJtYSB6YWhsZW4gbXVzcywgb2Z0IGlzdCBkYXMgbmljaHQgd2VuaWcgR2VsZCB1bmQgZ2VybmUgZWluIEdydW5kIGRlbiBBcmJlaXRlciBkYW5uIG5pY2h0IHp1IGJlcm5laG1lbi5LYWVwdG5fTGVDaHVjayAgOSBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvWnVkZW0ga2FubiBkaWNoIGRpZSBaZWl0YXJiZWl0c2Zpcm1hIHZvbiBoZXV0ZSBhdWYgbW9yZ2VuIGF1Y2ggd28gYW5kZXJzIGVpbnRlaWxlbiwgamUgbmFjaGRlbSB3aWUgc2llIEJvY2sgaGFiZW4uIApIb3cgdG8gYXZvaWQgYSBiYWQgdGF4IHByZXBhcmVyIHdoZW4gaXQncyB0aW1lIHRvIGZpbGUgeW91ciByZXR1cm4gSG93IHRvIGF2b2lkIGEgYmFkIHRheCBwcmVwYXJlciB3aGVuIGl0J3MgdGltZSB0byBmaWxlIHlvdXIgcmV0dXJuIEhlcmUncyBhIGxpc3Qgb2YgdGlwcyBhbmQgcXVlc3Rpb25zIHRvIGNvbnNpZGVyIGJlZm9yZSB5b3UgaGlyZSBzb21lb25lIHRvIGRvIHlvdXIgdGF4ZXMuCkJvdWxkZXIncyBuZXcgU1JUIGNlbnRlciBhbHNvIGhhcyBwbGFucyB0byBpbmNvcnBvcmF0ZSBhIG5vbnByb2ZpdCB0byBwcm92aWRlIGZyZWUgdHJlYXRtZW50IHRvIG5lZWR5IHBvcHVsYXRpb25zLCBzdWNoIGFzIHZldGVyYW5zLCBhbmQgY29uZHVjdCByZXNlYXJjaCB0aGF0IEdpbGJlcnQgTGV3aWVuIGhvcGVzIGNvbnRyaWJ1dGVzIHRvIHRoZSBtZWRpY2FsIGFkdmFuY2VtZW50IG9mIG1hc3NhZ2UgdGhlcmFweSBhbmQgYSBwb3RlbnRpYWwgY2hhbmdlIGluIGxlZ2lzbGF0aW9uLgpUaGVuIE1yLiAKVGhlIGxldmVsIG9mIGltcGxlbWVudGF0aW9uIGRpZmZlcnMgZnJvbSBzZWN0b3IgdG8gc2VjdG9yIGFuZCB3ZSBhcmUgc3RpbGwgYXQgdGhlIGJlZ2lubmluZzogMTAgcGVyY2VudCBkb25lIGF0IENOSCAoQ2FzZSBOZXcgSG9sbGFuZCAgIEZpYXQgZ3JvdXAncyBhZ3JpY3VsdHVyYWwgYW5kIGNvbnN0cnVjdGlvbiBlcXVpcG1lbnQgZGl2aXNpb24pLCB3aGljaCB3ZSBoYXZlIGp1c3QgcmVzdHJ1Y3R1cmVkIGZyb20gYSBnZW9ncmFwaGljYWwgb3JnYW5pemF0aW9uIGludG8gYSBicmFuZCBvcmdhbml6YXRpb24sIGFuZCA2IHBlcmNlbnQgYXQgSXZlY28gaGVhdnkgdHJ1Y2tzLiBUaGUgTWFnbmV0aSBNYXJlbGxpIGNvbXBvbmVudCBhcm0gaXMgYXQgYWJvdXQgMjAgMjUgcGVyY2VudCwgYW5kIENvbWF1IHByb2R1Y3Rpb24gc3lzdGVtcyBhdCAzMCBwZXJjZW50LgpBbmQgbW9zdCBwZW9wbGUgd2hvIHVzZSBwcmVzY3JpcHRpb24gcGFpbiBtZWRpY2F0aW9uIGFyZSBvdmVycHJlc2NyaWJlZCBhbmQgZG9uIGFjdHVhbGx5IG5lZWQgaXQuIApUaGlzIGdlb2dyYXBoaWNhbCBhc3BlY3QgcmFpc2VzIGFub3RoZXIgcG9zc2liaWxpdHkgZm9yIHRoZSBzZWVtaW5nIGxhY2sgb2YgQ2VsdGljIGluZmx1ZW5jZSBvbiBFbmdsaXNoIHZvY2FidWxhcnk7IGl0IG1heSBiZSBwb3NzaWJsZSB0aGF0IE9sZCBFbmdsaXNoIHNwZWFrZXJzIGZpcnN0IGNhbWUgaW50byBjb250YWN0IHdpdGggcGVvcGxlIHdobyBzcG9rZSBhIHZlcnkgTGF0aW5pemVkICJMb3dsYW5kIiBkaWFsZWN0IG9mIENlbHRpYyB0aGF0IHdhcyBkaXN0aW5jdCBmcm9tIHdoYXQgYmVlbiBkZXNjcmliZWQgYXMgIkhpZ2hsYW5kIiBCcml0aXNoIENlbHRpYywgdGhlIHBhcmVudCBsYW5ndWFnZSBvZiBtb2Rlcm4gV2Vsc2gsIEJyZXRvbiBDb3JuaXNoLCBpZiBDZWx0aWMgbGFuZ3VhZ2VzIHdlcmUgZXZlbiBwcmVzZW50IGluIHRoZSBzb3V0aCBlYXN0IG9mIEVuZ2xhbmQgYXQgYWxsLiBJbmRlZWQsIGl0IHNlZW1zIGxpa2VseSB0aGF0IGJlZm9yZSB0aGUgYXJyaXZhbCBvZiBPbGQgRW5nbGlzaCwgTGF0aW4gZGV2ZWxvcGVkIGluIHRoYXQgYXJlYSBvZiBFbmdsYW5kIGluIG11Y2ggdGhlIHNhbWUgd2F5IGl0IGFsc28gZGlkIGluIEdhdWwsIGJlY29taW5nIHdpZGVseSBhZG9wdGVkIHdpdGggQ2VsdGljIGRpYWxlY3RzIGJlaW5nIHNwb2tlbiBvbmx5IGluIHZlcnkgbWFyZ2luYWwgc3BhY2VzLi4gCkFsc28sIHlvdSBhc2tpbmcgbWUgdG8gcG9pbnQgb3V0IHNvbWV0aGluZyB0aGF0IHdpbGwgcHJvYmFibHkgbmV2ZXIgYmUgZnVsbHkgcHJvdmVuLiBMZXQgc2F5IGFuIGFjdG9yIGdvZXMgb3ZlciB0aGUgaGVhZCBvZiB0aGUgZGlyZWN0b3IgYW5kL29yIHByb2R1Y2VyIGFuZCB0aGUgbW92aWUgY29tZXMgb3V0IGJldHRlciB0aGFuIGl0IHdvdWxkIGhhdmUgb3RoZXJ3aXNlLiAKSGUgYXZlcmFnZWQgMjEuOSBwb2ludHMsIDcuNSBhc3Npc3RzIGluIGhpcyBzZW5pb3IgeWVhci4gSGlzIEN1YnMgd2VudCB1bmRlZmVhdGVkIGFuZCB3b24gdGhlIENsYXNzIEEgTWljaGlnYW4gc3RhdGUgY2hhbXBpb25zaGlwLi4gClRoZSBtYWpvcml0eSBvZiBwZW9wbGUgd29udCBzaG93IHVwIHRvIGEgcmVzdGF1cmFudCAzMCBtaW5zIG9yIGxlc3MgYmVmb3JlIGNsb3NlIGJlY2F1c2UgdGhlIHJlc3RhdXJhbnQgY2xvc2VzIGluIDMwIG1pbnMuIEl0IHJhcmUgKHRoYW5rZnVsbHkpIHRoYXQgYW55b25lIHdvdWxkIGJlIHNvIGNsdWVsZXNzIGFzIHRvIHRoaW5rIHRoYXQgbWVhbnMgdGhleSBjYW4gc2hvdyB1cCBhdCAxNSBtaW5zIHRvIGNsb3NlIGFuZCBnZXQgYSBtZWFsLiBDbG9zZWQgaXMgY2xvc2VkLiAKSV9zaG90X2Jhcm5leSAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpNeSB3aWZlIGRlc3BlcmF0ZWx5IHdhbnRzIGhlciBwYXJlbnRzIHRvIGJvbmQgd2l0aCBvdXIgc29uLCBzbyBJIGtub3cgd2hhdCB5b3UgbWVhbi4gCkhlIHNuYXAgY2FsbHMgaW4gdGhlIGRhcmsgd2hpY2ggaXMgZ29vZC5GbG9wIGNvbWVzIEtkIEpkIDhjLiBUaGlzIGlzbiBnb29kLlR1cm4gVGQuIApTdWJtaXNzaW9ucyBtdXN0IGJlIGV4cGxpY2l0bHkgYWJvdXQgYSBzaW5nbGUgZ2FkZ2V0LiAoUG9zdHMgYWJvdXQgc29mdHdhcmUgb3IgdGVjaCBjb21wYW5pZXMgd2lsbCBiZSByZW1vdmVkLiBHYWRnZXQgY29uY2VwdHMgd2hpY2ggZG8gbm90IGFjdHVhbGx5IGV4aXN0IGJlbG9uZyBpbiAvci9JbWFnaW5hcnlHYWRnZXRzKS4KSXQgaXMgdGhlIHRoaXJkIG1vdmllLCBhZnRlciBhbGwuIApUaGVyZSBhcmUgYSB2YXJpb3VzIHRhYmxlIGdhbWVzIGZvciBwbGF5ZXJzIHRvIHBsYXkgd2l0aCByZWFsIGNhc2ggYW5kIGh1Z2UgdGFzayBhdCBjYXNpbm9zLiBUaGVzZSB0YWJsZSBnYW1lcyBoYXZlIGEgZGlmZmVyZW50IHJ1bGVzIGFuZCBzdHJhdGVneSBvZiBwbGF5aW5nIGdhbWVzLiAKSXRzIG5vdCBhcyB0aG91Z2ggdGhleSB3ZXJlIGluIHRoZSB0cmVuY2hlcyBndW5uaW5nIGRvd24gdGhlIGVuZW15IG9yIGxvYmJpbmcgaGFuZCBncmVuYWRlcyBpbnRvIHRoZSBzd2lybGluZyBndW5zbW9rZS4gVGhleSB3ZXJlIGNhbW91ZmxhZ2UxIGFydGlzdHMgZW1wbG95ZWQgYXMgbWFnaWNpYW5zLCBXYXJ0aW1lIE1hZ2ksIGVtcGxveWVkL2RyYWZ0ZWQgdG8gbWFrZSBzaGlwcyBhbmQgc3VjaCBkaXNhcHBlYXIuIApPbmxpbmUgb25lIG1pZ2h0IGFyZ3VlIGhhcyBiZXR0ZXIgd2F5cyB0byBzcG90IGNvbGx1c2lvbi4gSG93ZXZlciB0aGV5IGFyZSBub3QgZ29pbmcgdG8gYnVzdCBhIGRldGVybWluZWQgdGVhbSwgYW5kIGlmIHRoZXkgZG8sIHRoZXkgcmVhbGx5IGNhbm5vdCBkbyBtdWNoIGFjY2VwdCBjbG9zZSBhY2NvdW50cyBhbmQgcGVyaGFwcyBzZWl6ZSB3b24gbW9uZXkuIEJ1dCB0aGF0IGlzIG5vdCBhIGJpZyBkZWFsIHRvIGEgZGV0ZXJtaW5lZCBjaGVhdGVyLCBuZXcgYWNjb3VudHMgYXJlIG9wZW5lZCwgb3RoZXIgc2l0ZXMgYXJlIGhpdCBhbmQgaXQganVzdCBnb2VzIG9uLgpUaGUgc3ViIGlzIHdoYXQgaXQgaXMuIFdoZW4gSSBmaXJzdCBjYW1lIG9uIGFzIG1vZCBJIHdhcyBwYXNzaW9uYXRlIGFib3V0IG1ha2luZyB0aGlzIGEgd2VsY29tZSBwbGFjZSBmb3IgZXZlcnlvbmUgYW5kIHBhcnRpY3VsYXJseSBtb3JlIHdlbGNvbWluZyBmb3IgS29yZWFucyB0aGFuIGl0IGhhZCBiZWVuLCBidXQgb3ZlciB0aW1lIEkgcmVhbGl6ZWQgdGhpcyB3YXNuIHBvc3NpYmxlIHRvIGVuZm9yY2UgaW4gYW4gZXZlbiByZW1vdGVseSBjb25zaXN0ZW50IGZhc2hpb24uIEkgdGhpbmsgd2UgZG9uZSBiZXR0ZXIgdGhhbiBiZWZvcmUgYnkgc3RhdGluZyB0aGUgcnVsZXMgYW5kIGVuZm9yY2luZyB0aGVtIGFzIG9iamVjdGl2ZWx5IGFzIHdlIGNhbi4gQWdhaW4gbm90IHBlcmZlY3RseSwgYXMgbG9uZyBhcyBodW1hbnMgYXJlIGludm9sdmVkIGluIG1vZGVyYXRpb24gaXQgY2FuIG5ldmVyIGJlIHRydWx5IG9iamVjdGl2ZSwgYnV0IHdlIGhhdmUgaGF2ZSBhIGRvdWJ0IG9yIHF1ZXN0aW9uIHdlIGRpc2N1c3MgYW1vbmdzdCBvdXJzZWx2ZXMgYW5kIHRyeSB0byBjb21lIGFuIGFncmVlbWVudCwgd2hpY2ggaXMgd2hhdCBoYXBwZW5lZCBoZXJlLiBJIGtub3cgdGhlcmUgYXJlIGEgbG90IG9mIGNvbXBsYWludHMgYWJvdXQgdGhlIHN1YiwgYnV0IGFnYWluIEkgdGhpbmsgdGhhdCBtb3JlIGR1ZSB0byB0aGUgcGVyc29uIG1ha2luZyB0aGUgY29tcGxhaW50cyBtaW5kc2V0LiBQZW9wbGUgdGFsayBhYm91dCBwcm9ibGVtcyBvbiB0aGlzIHN1YnJlZGRpdCBhcyBpZiB0aGV5IHN1cGVyIHVuaXF1ZTogaGF2aW5nIG5hdGlvbmFsaXN0cywgYmVpbmcgc28gbmVnYXRpdmUsIGJlaW5nIHRvbyBsaWJlcmFsLCBiZWluZyB0b28gY29uc2VydmF0aXZlLCBldGMsIGJ1dCBhZnRlciBiZWluZyBvbiByZWRkaXQgZm9yIGEgbG9uZyB0aW1lIGFuZCByZWFkaW5nIG1hbnksIG1hbnkgc3VicmVkZGl0cywgSSB0aGluayAvci9rb3JlYSBpcyBwcmV0dHkgYXZlcmFnZS4gUGVvcGxlIGFyZSBtb3JlIGZvY3VzZWQgb24gL3Iva29yZWEgYmVjYXVzZSB0aGV5IGFyZSBwYXNzaW9uYXRlIGFib3V0IHRoZSB0b3BpYywgd2hpY2ggSSB0aGluayBpcyBncmVhdCwgYnV0IHNvbWV0aW1lcyB3ZSBnZXQgdG9vIGZhciBpbnRvIGEgdG9waWMgdGhhdCB3ZSBjYW4gdGhpbmsgYWJvdXQgaXQgcHJvcGVybHkgYW55bW9yZS4KU29tZWJvZHkgYnJpbmcgc29tZSBtYXlvLiAKV2hhdCBpZiB0aGUgY291bmNpbCBoYWQgYWRkaXRpb25hbCBxdWVzdGlvbnMgZm9yIHRoZW0/LiAKRm9yIGV4YW1wbGUsIGNvbW11bml0eSBjYXJkczogN3MgN2MgN2QgN2ggOWMgLgpGaXJzdCBjaG9vc2UgYSBwb2tlciB3ZWJzaXRlIGxpa2UgYWRkYTUyLCBwb2tlcnN0YXIgZXRjICx0aGVuIHJlZ2lzdGVyIGJ5IGVudGVyaW5nIHlvdXIgdXNlcm5hbWUgYW5kIGUgbWFpbCBhZGRyZXNzLiAKSGlzIGxhcmdlIDNiZXQgc2l6aW5nIG1hZGUgbWUgdGhpbmsgaGlzIHJhbmdlIGxlYW5lZCBtb3JlIHRvd2FyZHMgZHJhd3MgYW5kIEkgZGlkbiBoYXZlIGEgZGlhbW9uZCBpbiBteSBoYW5kLCBzbyBJIGVsZWN0ZWQgdG8gY2FsbCBpbiBwb3NpdGlvbiBhbmQgc2VlIGEgdHVybi4uIApLaWxsIGZvciBpdC4gUGxheWVycyBub3cgb2Z0ZW4gdGFrZSAyIDMgY3J5b3MgYXMgcGFydCBvZiB0aGVpciBraXQuIApPbmNlIHdlIGJyb3VnaHQgaXQgdG8gdGhlIGZpcnN0IG5pZ2h0LCBldmVyeW9uZSB0aG91Z2h0IHdlIGhhZCBzb21laG93IHdvbiBhIGJ1bmNoIG9mIG1vbmV5IGF0IGEgY2FzaW5vIGFuZCB3YXMgcm9sbGluZyBpbiB0aGUgbW9uZXkuIFRoaXMgdHJ1bHkgZG9lcyBoYXZlIHRoYXQgc29ydCBvZiBhcHBlYWwsIGJ1dCB0aGUgdHJ1dGggd2FzIEkgd2FzIHRpcmVkIG9mIGJlbmRpbmcgb3ZlciBhbmQgcGlja2luZyB1cCBwb2tlciBjaGlwcyBpbiB0aGUgc25vdyBhbmQgdHdlbnR5IGRlZ3JlZSB3ZWF0aGVyLiBUaG9zZSB3ZXJlIHRoZSBkYXlzLCBhbmQgZXZlbiB0aG91Z2ggdGhleSBzZWVtIGxpa2UgYWdlcyBhZ28sIHdlJ3ZlIHN0aWxsIGJlZW4gYWJsZSB0byBwbGF5IHR3byB0aW1lcyBhIG1vbnRoLgpXaGl0ZSByaWNlIGlzIGEgbG90IGNoZWFwZXIgdGhhbiBicm93biByaWNlIGFuZCBhYm91dCB0aGUgc2FtZSBjYWxvcmllcwpUaGF0IHByb2JhYmx5IG1ha2VzIGhlciBjYXBhYmxlIG9mIGRlZmVhdGluZyBtb3N0IGZpY3Rpb25hbCBjaGFyYWN0ZXJzIHdpdGggYW55IHBoeXNpY2FsIHZ1bG5lcmFiaWxpdHksIHllcy4gQWx0aG91Z2ggaGVyIGltbW9ydGFsaXR5IGRvZXMgbm90IGNvbWUgd2l0aCBhbnkgcmVnZW5lcmF0aXZlIGNhcGFjaXR5LCBhcyBkZXNwaXRlIGhlciBpbmFiaWxpdHkgdG8gZGllIHNoZSBET0VTIHN0aWxsIGFwcGVhciB0byBhZ2UuIFRoaXMgbWVhbnMgdGhhdCBhbnl0aGluZyB3aXRoIHNvbWUgc29ydCBvZiBtdWx0aXBsZSBsaXZlcyBCUyBjb3VsZCBhcmd1ZSBhbiBpbmNhcGFjaXRhdGlvbiB2aWN0b3J5LCBhcyBzaGUgd291bGQgc3BsYXR0ZXIgaGVyc2VsZiBvbiB0aGUgZmlyc3QgaGl0ICAgYWxpdmUsIGJ1dCB1bmFibGUgdG8gZG8gYW55dGhpbmcuClRoZSBmbHVycnkgb2YgYWN0aXZpdHkgbW92ZWQgaGlzIG9wZXJhdGlvbiB1cCB0byBOby4gMTUsIGZyb20gTm8uIDIyLCBvbiBBdXRvbW90aXZlIE5ld3MnIGxpc3Qgb2YgdGhlIFRvcCAxMjUgRGVhbGVyc2hpcCBHcm91cHMgdGhpcyB5ZWFyLCB3aXRoIDE3LDM3MiBuZXcgcmV0YWlsIHVuaXRzIHNvbGQuIEl0IHdhcyB0aGUgb25seSBncm91cCBpbiB0aGUgdG9wIDIwIHRvIGJvb3N0IGJvdGggbmV3IHJldGFpbCB1bml0IHNhbGVzIGFuZCByZXZlbnVlIGluIDIwMDkuIFJvaHJtYW4ncyBvcGVyYXRpb24gZ3Jvc3NlZCAkNzM1LjIgbWlsbGlvbiBsYXN0IHllYXIuCiJBbmQgdGhpcyBpcyBwYXJ0bHkgZnVuZGVkIGJ5IHN0YXRlIHNwb25zb3JlZCBhYnVzZSBpbiBwb29yIGFyZWFzIGJ5IGRhbmdlcm91cyBhbmQgYWRkaWN0aXZlIG1hY2hpbmVzLCIgaGUgc2FpZC4gIlRoaXMgaXMgZ29pbmcgdG8gYmUgYW4gaXNzdWUgYXQgdGhlIHVwY29taW5nIGFubnVhbCBnZW5lcmFsIG1lZXRpbmdzIG9mIGFsbCB0aGVzZSBjbHVicywgYW5kIHRoZSBkaXJlY3RvcnMgdGhlcmUgaGFkIGJldHRlciBiZSByZWFkeSB0byBleHBsYWluIHRoZW1zZWx2ZXMuIgpTb21lIG93bmVycyBtYXkgZXZlbiBnbyB0byB3ZWJzaXRlcyB0aGF0IHJhdGUgZGlmZmVyZW50IGZvb2RzLiAKU2hpdHMgaGFyZCBhbmQgaXRzIGdvbm5hIHN1Y2ssIGJ1dCBpZiB5b3UgaGF2ZSBpdCBrZWVwIGl0Li4gClRoZSB3aG9sZSBtYXJrZXRpbmcgY29uc3VtZXIgY29tcGxleCBvZiBvdXIgZWNvbm9teSBoYXMgcHV0IGJpbGxpb25zIG9mIGRvbGxhcnMgaW50byB0cnlpbmcgdG8gbWFrZSBwZW9wbGUgZmVlbCBoYXBweSBhbGwgdGhlIHRpbWUuIFdlIGhhdmUgdGhpcyBleHRyYXZhZ2FudCBleHBlY3RhdGlvbiB0aGF0IG91ciBsaXZlcyBzaG91bGQgYmUgZmlsbGVkIHdpdGggbGF1Z2h0ZXIgYW5kIHNtaWxlcyAyNC83LCB3aGVuIGluIHJlYWxpdHkgbW9zdCBvZiBvdXIgbGl2ZXMgYXJlIHB1bmN0dWF0ZWQgYnkgbG9uZyBwZXJpb2RzIG9mIGJvcmVkb20vdW5lYXNlLiAKSXQgdmVyeSBzdHJhbmdlIGJ1dCBoZSBpcyBzbyBzZW5zaXRpdmUgdGhhdCBoZSBjYW4gImZlZWwiIHBlb3BsZXMgZW5lcmd5LCBhbmQgaGUgY2FuIGhlbHAgcmVkdWNlIHBhaW4gYnkgcGxhY2luZyBoaXMgaGFuZCBvdmVyIHN0cmF0ZWdpYyBwb2ludHMgKHdpdGhvdXQgYW55IGNvbnRhY3QpLiBJIHdhcyBzY2VwdGljIG9mIGNvdXJzZSwgYnV0IGl0IGhlbHBlZCBtZSBhIGxvdC4gSGUgdG9sZCB1cyB0aGF0IGFueXRoaW5nIGlzIGFib3V0IGVuZXJneS4gCkJlc3QgcGFydCBvZiB0aGUgZXZlbmluZyB3YXMgb2YgY291cnNlIHlvdXIgbG9jYWwgam91cm5vcy4gQmVpbmcgdGhlIHN0b3J5dGVsbGVyIHRoYXQgaGUgaXMgaGUgZXhhZ2dlcmF0ZXMgdGltZSB0byB0aW1lLiBXaGVuIGhlIHNhaWQgdGhlIGNvdW50ZXIgcmFsbHkgaGFkIG9ubHkgMjAwIG9yIDMwMCBwZW9wbGUgaW4gZ29lcyB0aGUgZW50aXJlIEVsIFBhc28gVGltZXMgbmV3c3Jvb20gdGhpbmtpbmcsICJHdXlzLCB3ZSBjYW5ub3QgbGV0IGhpbSBnZXQgYXdheSB3aXRoIHRoaXMhIE9uZSB0aGluZyBpcyBwdXNoaW5nIGEgcHJvcG9zYWwgdG8gc2VsbCBvdXIgYnVpbGRpbmcsIGFub3RoZXIgdGhpbmcgaXMgbHlpbmcgYWJvdXQgYXR0ZW5kYW5jZSBudW1iZXJzISEhIFdlIGFyZSBnb25uYSBnZXQgdGhhdCBzb25vZmFiaXRjaCEhISIuIApXaGF0IHdvdWxkIGhhcHBlbiBpZiB5b3UgZm91bmQgYSBtYW4gdGhhdCB3YXMgbm90IGEgY2hpbGQ/IEFza2luZyBhcHByb3ByaWF0ZSBxdWVzdGlvbnMgYW5kIHRoYXQga2luZCBvZiB0aGluZyEgU2hlIHN1ZmZlcmVkIHRocm91Z2ggcG9saXRpY2FsIHR1cm1vaWwgaW4gaGVyIGNoaWxkaG9vZCBhbmQgdGVlbiB5ZWFycyB2aWEgYSBwcmlzb24gY2FtcCwgYW5kIGF0IGEgbWluaW11bSB3YXMgcHN5Y2hvbG9naWNhbGx5IGFidXNlZDsgbXkgZ3Vlc3MgaXMgdGhhdCBzaGUgd2FzIGFsc28gc2V4dWFsbHkgYWJ1c2VkIG9yIGF0IGxlYXN0IG9nbGVkIGJ5IHRoZSBndWFyZHMuIEkgd2FzIHNvIGNvbmZ1c2VkLCBhbmQgdGhvdWdodCB0aGF0IHBlcmhhcHMgaGUgaGFkIG9ubHkgZXZlciBiZWVuIHNleHVhbGx5IGF0dHJhY3RlZCB0byBtZSwgYW5kIGhhZCBuZXZlciByZWFsbHkgaW50ZW5kZWQgb24gaGF2aW5nIGEgcmVhbCByZWxhdGlvbnNoaXAgd2l0aCBtZS4gCk5vdCBsb25nIGFnbyBJIHNhdyBoZXIgYWdhaW4sIGFmdGVyIGFib3V0IDE0aXNoIHllYXJzIC4gQW5kIHNoZSB3YXMgd29ya2luZyBhdCBUYXJnZXQuLiAKVGhlcmUgbm8gb2ZmaWNpYWwgY2h1cmNoIHBvc2l0aW9uIG9uIFIgcmF0ZWQgbW92aWVzLCBidXQgdGhlcmUgaXMgYSBjdWx0dXJhbCB0cmFkaXRpb24gb2Ygbm90IHdhdGNoaW5nIHRoZW0uIApKdXN0IG1ha2Ugc3VyZSB0aGUgb25lIHlvdSBjaG9vc2UgaXMgYWxsb3dlZCBpbiB0aGUgcG9rZXIgcm9vbSBvZiB5b3VyIGNob2ljZS4gRG9uJ3QgZm9yZ2V0IHBva2VyIGlzIG5vdCBvbmx5IGEgbHVjayBnYW1lLCB3aXRob3V0IHNraWxscyBhbmQga25vd2xlZGdlIHlvdSBjYW4ndCB3aW4gb24gYSBsb25nIHJ1bi4uIApUaGUgbWFwIGlzIGEgb2YgdGhlIEJhdHRsZSBvZiBMb3MgQW5nZWxlcyBVcHBlciBDYWxpZm9ybmlhIGZvdWdodCBiZXR3ZWVuIHRoZSBBbWVyaWNhbnMgYW5kIE1leGljYW5zLCBKYW4gOSwgMTg0NywgcHVibGlzaGVkIGluIDE4NDguIFRoZSBtYXAgZGVwaWN0cyB0aGUgZ3JvdW5kcyBvZiB0aGUgQmF0dGxlIG9mIHRoZSBTYW4gR2FicmllbCBSaXZlciwgYSB2aWN0b3J5IGZvciB0aGUgVW5pdGVkIFN0YXRlcywgd2hpY2ggcmVzdWx0ZWQgaW4gdGhlIHJldGFraW5nIG9mIExvcyBBbmdlbGVzIGZyb20gdGhlIENhbGlmb3Jub3MgYSBjb3VwbGUgb2YgZGF5cyBsYXRlciwgb24gSmFudWFyeSAxMC4gClNvIGxpa2UsIGl0IHRha2VzIG1lIG5vdGljZWFibGUgZWZmb3J0IHRvIGV2ZW4gc2VlIGlmIEkgaGF2ZSBlZ2dzIHdpdGggZ2FpYSBvciBpZiBJIGNhbiBjb2xsZWN0IGZyb20gYSBoYWJpdGF0LiBJIG1pZ2h0IGhhdmUgbG93ZXIgY29udHJhc3Qgc2Vuc2l0aXZpdHkgdGhhbiBvdGhlciBwZW9wbGUgKG1vc3RseSBkdWUgdG8gZHJ5IGV5ZSwgYnV0IHRoaXMgaXMgY29tbW9uIGZvciBhbnlvbmUgdGhhdCBoYWQgTEFTSUsvUFJLIG9yIGhhdmUgZXllIGRpc2Vhc2VzIG9yIGV2ZW4sIGp1c3QsIGdldHRpbmcgb2xkZXIpLCBidXQgaW4gZ2VuZXJhbCwgbG93IGNvbnRyYXN0IGdyYXlzY2FsZSBjYW4gYmVjb21lIHZlcnkgdGlyaW5nIHRvIGxvb2sgYXQuIAoiSXQgY3JlYXRlcyBhIGJhcnJpZXIgdG8gcHJvdGVjdCBmcm9tIHRoZSBjYWJpbiBhaXIgdGhhdCdzIHN1Y2tpbmcgb3V0IG1vaXN0dXJlIGluIHRoZSBza2luLCIgc2F5cyBDaXJhbGRvLCB3aG8gY2F1dGlvbnMgbm90IHRvIGZvcmdldCB0aGUgaGFuZHMsIHVuZGVyZXllIGFyZWEgYW5kIG5lY2sgd2hlbiBhcHBseWluZyBsb3Rpb24uLiAKTGFkeSBHYWdhLCBvdGhlcnMgYXJlIHNpbXBseSBsb3NpbmcgaXQgb3ZlciBoZXIgbGF0ZXN0IGhhaXIgY29sb3VyLiBSb2dlcnMgUGxhY2Ugd2lsbCBiZSB0aGUgc2Vjb25kIHN0b3Agb24gdGhlIHdvcmxkIHRvdXIsIHdoaWNoIGxvb2tzIHRvIGhhdmUgaGVyIG9uIHRoZSByb2FkIGF0IGxlYXN0IHVudGlsIG1pZCBEZWNlbWJlciwgdGhvdWdoIHRoZSBudW1iZXIgb2Ygc29sZCBvdXQgc2hvd3MgbWlnaHQgZW5kIHVwIGV4dGVuZGluZyBoZXIgamF1bnQuCjIyIEluY2ggUm91bGV0dGUgV2hlZWwgQ3JpdGljYWwgT3ZlcnZpZXcKWW91IGRvbid0IGhhdmUgdG8gYmUgYW55IGdvb2QgaWYgeW91J3JlIGEgY2hlZi4gCkJlaW5nIGFibGUgdG8gdXNlIGFsbCB0aGUgZGlmZmVyZW50IHNldHRpbmdzIGhhcyByZWFsbHkgc3RyZW5ndGhlbmVkIHVwIG15IGNvcmUgYW5kIGhhcyBhbGxvd2VkIG1lIHRvIGJyYWNlIGFuZCAiaGlwIGhpbmdlIiBiZXR0ZXIgdW5kZXIgYSByZWd1bGFyIGJhci4gCk5BVkEncyBzdXJ2ZXkgcmV2ZWFsZWQgZG96ZW5zIG9mIHNlYWxzIGFuZCBjcmVzdHMgY2x1dHRlcmluZyBjaXR5IGZsYWdzIGFjcm9zcyB0aGUgY291bnRyeS4gCidTdHJvbmcgQ3JlZGl0IFF1YWxpdHknIGxvdCBvZiB0aGUgaW1wYWlybWVudHMgdGhhdCB0b29rIHBsYWNlIHRoaXMgcXVhcnRlciBmZWx0IGxpa2UgdW5pcXVlIGV2ZW50cyB3aGljaCBJIGxpa2UgdG8gdGhpbmsgd29uIHRyYW5zcGlyZSBhZ2FpbiwgQ0lCQyBDaGllZiBSaXNrIE9mZmljZXIgTGF1cmEgRG90dG9yaSBBdHRhbmFzaW8gc2FpZCBvbiB0aGUgY29tcGFueSBlYXJuaW5ncyBjb25mZXJlbmNlIGNhbGwgVGh1cnNkYXkuIE5vdCBzZWVpbmcgYW55IHN5c3RlbWljIG9yIGFueSB0cmVuZHMgb2YgY29uY2VybiBpbiBvdXIgYm9vay4gCkhlIGhhcyBhbGwgYnV0IGdpdmVuIHVwIG9uIGNvbnZlbnRpb25hbCBtZWRpY2luZSByZWNvZ25pemluZyB0aGUgbmVlZCBmb3IgbWFnbmVzaXVtIGluIGl0cyBwcm90b2NvbHMgZm9yIGRvemVucyBvZiBkaXNlYXNlcyBhbmQgd2VsY29tZWQgYm9va3Mgc3VjaCBhcyBtaW5lIHRvIGhlbHAgc3ByZWFkIHRoZSB3b3JkLi4gClRoZSB3b3JsZCBpc24gYmxhY2sgYW5kIHdoaXRlIG1hdGUsIHRoZSBzb29uZXIgeW91IHJlYWxpc2UgaXQgdGhlIHNvb25lciB5b3UgY2FuIGhhdmUgYSBncm93biB1cCBkaXNjdXNzaW9uLgpUaGUgZ2lybHMgYXJlIHZlcnkgZnJhbmsgYW5kIHJlYWxpc3RpYyBhYm91dCB0aGVpciBqb2IgYW5kIGl0cyByaXNrcy9iZW5lZml0cy4gTW9zdCB2aWV3IGl0IGFzIGFuIHVuZ2xhbW9yb3VzIGJ1dCB3ZWxjb21lIG9wcG9ydHVuaXR5IHRvIGNoYW5nZSB0aGVpciBsaXZlcy4gVGhleSBjb21lIHRvIEdlcm1hbnkgYW55d2hlcmUgZnJvbSAyIHdlZWtzIGF0IGEgdGltZSB0byA4IG1vbnRocyBvbiBhIHN0cmV0Y2guIAoiU2hlIGNvbXBsZXRlbHkgaW4gc2hvY2ssIiBoZSBzYWlkLgo=|<---