--->|T24gbGVzIGludm9xdWUgY29tbWUgZGVzIGRpdmluaXRzLCBjb21tZSBzaSBjaGFjdW5lIGQgdGFpdCBsIHBhcnRpY3VsaXJlIGQgZGl2aW5pdCAoMikuIApTbyB5b3Ugc2F5aW5nIGl0IGJldHRlciB0aGF0IHdlIGhhdmUgemVybyBjb25zdW1lciBwcm90ZWN0aW9ucyBhbmQgYWxsb3cgSVNQcyB0byBkbyB3aGF0ZXZlciB0aGV5IHdhbnQgYW5kIGNoYXJnZSBhbnl0aGluZywgd2l0aCBubyBjb21wZXRpdGlvbiAoYmVjYXVzZSB0aGF0IGJhc2ljYWxseSB3aGF0IEFtZXJpY2EgSVNQcyBoYXZlIGJlY29tZSkgYW5kIGxldCB0aGVtIGRvIGl0IGJlY2F1c2UgdGhleSB3aWxsIGFueXdheT8gQXQgbGVhc3QgbmV0IG5ldXRyYWxpdHkgd2lsbCBzdG9wIHNvbWUgQlMgZnJvbSBJU1BzLiBJIG5vdCBzYXlpbmcgdGhleSB3b24gZmluZCBsb29waG9sZXMgYW5kIHRyeSB0byBnbyBhcm91bmQgaXQgYW55d2F5IGJ1dCBJIHJhdGhlciB0cnkgdG8gc3RvcCB0aGVtIGZyb20gZG9pbmcgdGhhdCBpZiBwb3NzaWJsZS4uIApPbiBBIFJ1c2ggUG9rZXIgQ2FyZCBQcm90ZWN0b3IgUmV2aWV3ClN0cmVuZ3RocyBOdW1lcm91cyBzdHJlbmd0aHMgZXhpc3QgaW4gdGhlIGRldmVsb3BtZW50IG9mIGEgZGF5IHNwYSBidXNpbmVzcy4gSXQgaXMgdGhlIGNoYW5jZSB0byBwcm92aWRlIHdlbGxuZXNzIHRoZXJhcGllcyBmb3IgY2xpZW50cyB3aG8gc2VlayBoZWFsdGhmdWwgYmVhdXR5IHRyZWF0bWVudHMgYW5kIG1hc3NhZ2VzLiAKVGhlIGRpZmZlcmVuY2UgaXMgdGhhdCBhbnl0aGluZyB0aGF0IGlzbiBhIFViaXNvZnQgZ2FtZSBpcyBzdGlsbCBoYXMgdGhlIG1ham9yaXR5IG9mIGl0IGZpbGVzIGhvc3RlZCB0aHJvdWdoIFN0ZWFtLiBUaGUgZmlsZXMgYXJlIG1hbmFnZWQgYW5kIGluZGV4ZWQgYnkgU3RlYW0uCkkgdHJ5IHRvIG5vdCBiZSBvdXR3YXJkbHkgcnVkZSwgdGhvdWdoLiBJdCBoZWxwcyB0aGF0IEkgYSBxdWlldCB0eXBlIGFueXdheSwgc28gSSBqdXN0IGJpdGUgbXkgdG9uZ3VlLiBMdWNreSBmb3IgbWUsIGl0IGxvdyBjYXJiLgpUaGUgdGhpbmcgaXMsIEkgdHJ1c3QgdGhvc2UgZ3V5cyB3aXRoIGRlYWRseSBmb3JjZSB3YXkgbW9yZSB0aGFuIGFueSBvdGhlciBUb20sIERpY2ssIG9yIEhhcnJ5LCBiZWNhdXNlIEkga25vdyB0aGF0IHdlIHNjcmVlbiB0aGUgaGVsbCBvdXQgb2YgcGVvcGxlIHRvIG1ha2Ugc3VyZSBvbmx5IHRoZSBiZXN0LCBicmlnaHRlc3QsIGFuZCBmcmllbmRsaWVzdCB3ZXJlIGluIG91ciBncm91cC4gT3VyIGd1eXMgbmV2ZXIgaGFyYXNzZWQgcGVvcGxlLCBuZXZlciBhcnJlc3RlZCBwZW9wbGUgd2hlbiB3YXJuaW5ncyB3ZXJlIGFuIG9wdGlvbiwgYW5kIGNvdWxkIG9mdGVuIGJlIHNlZW4gaGVscGluZyBraWRzIGluIHNoaXR0eSBicm9rZW4gZG93biBjb2xsZWdlIGtpZCBjYXJzLiBJIG1lbnRpb25lZCB0aGUgd2FybmluZ3MgYmVjYXVzZSBpdCB3YXMgYSBuZWF0IHRoaW5nIGZvciB1cywgYnV0IGl0IGlzbiBsaWtlIHdlIHdlcmUgcGxhbnRpbmcgc3BpZXMgb3Igc29tZSBzaGl0IHNvIHdlIGNvdWxkIGdldCBhd2F5IHdpdGggc211Z2dsaW5nIGNva2Ugb3Igc29tZXRoaW5nLiAKIlRvIGZhdm91ciBvciBub3QgZmF2b3VyIGEgcGxhbm5pbmcgYXBwbGljYXRpb24gb24gYW4gaW5kaXZpZHVhbCBjb3VuY2lsbG9yJ3MgdmlldyBvZiB0aGUgYXBwbGljYW50IGluIHF1ZXN0aW9uIGlzIHNvbWV0aGluZyB0aGF0IGlzIGZyYXVnaHQgd2l0aCBkYW5nZXIuIgpUZW4gUkNUcyAobj00MjgpIHdlcmUgaW5jbHVkZWQgaW4gdGhlIHJldmlldy4gVGhlIG1ldGhvZG9sb2dpY2FsIHF1YWxpdHkgb2YgdGhlIGluY2x1ZGVkIHN0dWRpZXMgd2FzIHJlZ2FyZGVkIGFzIHBvb3IuIApUaGUgQ2FuYmVycmEgcmVzaWRlbnQgYWRtaXR0ZWQgdGhlcmUgd2FzIGFuIGV4cGVjdGF0aW9uIHRvIHByb2R1Y2UgYW5vdGhlciBwb3B1bGFyIGJvb2suIApHQ0pOIGlzIHNvIGRhbW5lZCAic3BlY2lhbCI7IGhlIG5lZWRzIG1vcmUgb2YgTW9tbXkncyBoZWxwLCBhdHRlbnRpb24gYW5kIGxvdmUhIFVudGlsIGhlJ3MgaW50byBoaXMgNjBzISEuIApEbyBub3QgZ2V0IGEgbWFzc2FnZSBpZiB5b3UgaGF2ZSB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6IHdhdGVyeSBvciBibG9vZHkgZGlzY2hhcmdlLCBkaWFiZXRlcywgdW51c3VhbCBwYWluLCBhIGhpZ2ggcmlzayBwcmVnbmFuY3kgKHdpdGhvdXQgeW91ciBjYXJlIHByb3ZpZGVyJ3MgcGVybWlzc2lvbiksIGNyYW1waW5nLCBjb250cmFjdGlvbnMgKHVubGVzcyB5b3UgYXJlIHBhc3QgMzggd2Vla3MgYW5kIHRyeWluZyB0byByZWxheCBzbyBsYWJvciBjYW4gYmVnaW4pIGFuZC9vciBoaWdoIGJsb29kIHByZXNzdXJlLiBBbHdheXMgYXNrIHlvdXIgY2FyZSBwcm92aWRlciBiZWZvcmUgZ2V0dGluZyB5b3VyIGZpcnN0IHByZWduYW5jeSBtYXNzYWdlLi4gClBoeXNpb3RoZXJhcHkgbGVkIGV4ZXJjaXNlIGhhZCBhbiBlZmZpY2FjeSBvZiAwLjYzNSBhdCBhIGNvc3Qgb2YgJDMxOTIuIApXaHk/IEJlY2F1c2UgdGhhdCBpcyB0aGUgbGVuZ3RoIG9mIGRyaXZlciB0aGV5IGNhbiBtb3N0IG9mdGVuIG1ha2UgY29udGFjdCB3aXRoIHRoZSBjZW50ZXIgb2YgZ3Jhdml0eSBvZiB0aGUgY2x1YmhlYWQgaW4gbGluZSB3aXRoIHRoZSBjZW50ZXIgb2YgZ3Jhdml0eSBvZiB0aGUgYmFsbCwgdGh1cyBvYnRhaW5pbmcgbWF4aW11bSBkaXN0YW5jZSBhbmQgYWNjdXJhY3kuIApJZiB0aGUgc3VpdCBpcyBzdWNjZXNzZnVsLCBDU0wgY291bGQgYmUgcmVxdWlyZWQgdG8gcGF5IEphbWVzIHVwIHRvIHRocmVlIHRpbWVzIHdoYXQgc2hlIGxvc3QgaW4gZG9uYXRpb24gbW9uZXksIHBsdXMgZGFtYWdlcyBmb3IgbWVudGFsIGFuZ3Vpc2ggYW5kIHN1ZmZlcmluZy4uIApOb3RoaW5nOiBJZiB5b3VyIGhvbGQgY2FyZHMgYXJlIHVuc3VpdGVkIGFuZCBsb3dlciB0aGFuIGF0IGxlYXN0IDEgb2YgdGhlIGNhcmRzIGluIHRoZSBmbG9wLCB5b3UgaGF2ZSA2IG91dHMgdG8gYWNoaWV2ZSBhIHBhaXIuIEZvciBleGFtcGxlLCBzYXkgeW91IGRyZXcgYSA1IGFuZCBhIDkuIEFueSBvZiB0aGUgMyByZW1haW5pbmcgNSdzIG9yIDkncyBpbiB0aGUgZGVjayB3b3VsZCBnaXZlIHlvdSBhdCBsZWFzdCBhIHBhaXIuIFRoZXJlZm9yZSwgeW91J2QgaGF2ZSA2IG91dHMgZm9yIHRoZSB0dXJuIGFuZCByaXZlci4KWWV0IE1IMzcwIGRpZC4gMjIgQmFpa29udXIgaXMgbGVhc2VkIGZyb20gS2F6YWtoc3RhbiBieSBSdXNzaWEuIApIb3dldmVyLCB0aGF0IGlzIHdoZXJlIHRoZSBzaW1pbGFyaXR5IGVuZHMuIApJbWFnaW5lIGEgc2l0ZSBsaWtlIG9wZW5wb3dlcmxpZnRpbmcgYnV0IGZvciBhbGwgc3RyZW5ndGggc3BvcnRzIGxpa2Ugc3Ryb25nbWFuLCBwb3dlcmxpZnRpbmcsIHN0cmVuZ3RobGlmdGluZywgY3Jvc3NmaXQsIHdlaWdodGxpZnRpbmcgZXRjLiBVc2VycyBjYW4gc29ydCB0aGUgY29udGVzdHMgdXNpbmcgcHJlZmVycmVkIGFyZWEsIGRhdGUgb2YgY29udGVzdCwgcHJlZmVycmVkIHNwb3J0LCBmZWRlcmF0aW9ucyBhbmQgYWxsIHNvcnRzIG9mIHBhcmFtZXRlci4gRWFjaCBjb250ZXN0IGNhbiBoYXZlIHRoZXkgb3duIHBhZ2Ugd2hlbiBjbGlja2VkIG9uIHdpdGggc3RhdHVzIHdoZXRoZXIgaXRzIG9wZW4gZm9yIHJlZ2lzdHJhdGlvbiBvciBjYW5jZWxlZCBvciBwbGFubmVkLiBUaGV5IGNhbiBldmVuIGxvc3QgZG93biBldmVudHMgYW5kIHJ1bGVzIGluIHRoYXQgcGFnZS4gQW5kIGFuIGVhc3kgd2F5IHRvIG1vbmV0aXplIGl0IHRvIGFsbG93IHRoZSBwbGF0Zm9ybSB0byBiZSBzZWxmIHN1c3RhaW5pbmcgaXMgdG8gY2hhcmdlIG9yZ2FuaXplcnMgaW4gb3JkZXIgdG8gYWR2ZXJ0aXNlIHRoZWlyIGV2ZW50cyBhbmQgY29udGVzdHMgb24gdGhlIHBsYXRmb3Jtcy4gSSBpbWFnaW5lIGlmIGl0IG5vdCBmb3IgcHJvZml0LCB0aGUgY2hhcmdlcyB3b3VsZG4gYmUgdW5yZWFzb25hYmxlIGlmIGp1c3QgdG8gY292ZXIgZm9yIHNlcnZlciBjb3N0cyBhbmQgdG8gaGF2ZSBhIHByb2dyYW1tZXIgb24gY2FsbCBpbiBjYXNlIG9mIGJyZWFrIGRvd25zLiBIZWNrIEkgYmUgd2lsbGluZyB0byBwYXkgYSBzdWJzY3JpcHRpb24gdG8gc29tZXRoaW5nIGxpa2UgdGhhdCBhcyBhIHVzZXIuIFRoYXQgd2F5IHVzZXJzIGhhdmUgYSAxIHN0b3AgcGxhdGZvcm0gdG8gY2hlY2sgb3V0IG1lZXRzIG5lYXIgdGhlaXIgYXJlYSBhbmQgb3JnYW5pemVycyBoYXZlIGEgcGxhY2Ugd2hlcmUgYSBsb3Qgb2YgdHJhZmZpYyBjYW4gc2VlIHRoZWlyIGV2ZW50cy4gVGhpcyB3b3VsZCBiZSBlc3BlY2lhbGx5IHVzZWZ1bCBmb3IgZ3ltIG93bmVycyB3aG8gd2FudCB0byBvcmdhbml6ZSBhIHNtYWxsIG1lZXQgaW4gdGhlaXIgZ3ltIGJ1dCBtYXkgbm90IGhhdmUgZW5vdWdoIHBvcHVsYXJpdHkgb24gc29jaWFsIG1lZGlhIHRvIGdhaW4gYW55IHRyYWN0aW9uLgpJZiBoZSBnZXRzIHlvdSB0byBmb2xkIHRoZW4gb2RkcyBhcmUgaGUgY2FuIGdldCAxIG9mIHRoZSAyIG9mIHRoZW0gdG8gZm9sZCBvciBib3RoLiAKMjIgbnVtYmVyIG9mIG91dHMgYXQgdGhlIG1vbWVudCAocHJlZmxvcCkgaXMgbm90IHJlbGV2YW50OyBJdCdzIEFLIHdobyBpcyBpbiBkYW5nZXIuIEZpbmFsbHksIGRvbid0IGZvcmdldCB0aGF0IEFLIGlzIHN0aWxsIGxvc2UgaWYgZWl0aGVyIEEgb3IgSyBmbG9wcyB0aGUgYm9hcmQgYW5kIGFub3RoZXIgMiBnZXRzIGluLgoyMDE5IG91dGxvb2sgbm90ZXMgaG93IHRoZSByZWJpcnRoIG9mIGRvd250b3duIExvbmRvbiBjb250aW51ZXMuIApBbmQgd2UgZGlkIG1vcm5pbmcgbWFya2Rvd25zLiAKU2NobWVyemhhZnRlcyBTb2RicmVubmVuICAgZWluIFN5bXB0b20gZnIgZXJoaHRlbiBTdXJlZ2VoYWx0IGltIE1hZ2VuLiBVbSBkaWUgU3VyZSB6dSBuZXV0cmFsaXNpZXJlbiBpc3QgZXMgYXVzcmVpY2hlbmQsIGVpbmVtIEdsYXMgV2Fzc2VyIDEgVGVlbGZmZWwgTmF0cm9uIGhpbnp1ZmdlbiwgZ3V0IHp1IHZlcnJocmVuLCBiaXMgZGFzIFNvZGEgdm9sbHN0bmRpZyBnZWxzdCBpc3QuIERhbm4gZmdlbiBTaWUgZWluZW4gaGFsYmVuIFRlZWxmZmVsIGZyaXNjaGVuIFppdHJvbmVuc2FmdCBoaW56dSAgIHVuZCB0cmlua2VuLgoiVGhlICJzb2xlIGVzc2VuY2Ugb2YgYnVsbHlpbmciIGlzIGFidXNpbmcgb25lIHBvd2VyIG92ZXIgb3RoZXJzLiBUaGUgY29tcGFueSBpcyBub3QgYWJ1c2luZyB0aGVpciBwb3dlciBieSBoYXZpbmcgYW4gZW1wbG95ZWUgdGFrZSBhZGRpdGlvbmFsIHRyYWluaW5nLiBUaGV5IHdvdWxkIGFidXNlIHRoZWlyIHBvd2VyIGlmLCBhcyBvdGhlcnMgaGF2ZSBtZW50aW9uZWQgaGVyZSwgdGhleSBkb2NrZWQgaGVyIHBheSwgY3V0IGhlciBob3VycywgZGVtb3RlZCBoZXIgdG8gY2xlYW5pbmcgdG9pbGV0cyBhdCA0YW0sIGV0Yy4gSW4gdGhpcyBjYXNlLCB0aGV5IHdvdWxkIHN0aWxsIHBheSBoZXIgZm9yIGhlciB0aW1lLiBUaGF0IGZhaXIsIGFuZCB0aGF0IG5vdCBhIHByb2JsZW0gZm9yIGFueSByZWFzb25hYmxlIHBlcnNvbi4iICAgSSBzb21ld2hhdCBhZ3JlZSBidXkgaXQgZGViYXRhYmxlCkZyb20gaW4gMTk2Miwgd2l0aCB3aG9tIGhlIGVuam95ZWQgYW4gYW1hemluZyBtYXJyaWFnZSB1bnRpbCBoZXIgZGVhdGggaW4gMjAwMC4gCkhPVCBOSVRFIElOIFRIRSBDSVRZIEF1Zy4gCkNQUyBpbiBteSBzdGF0ZSBoYXMgc3VjaCBhIGJhZCBhdHRyaXRpb24gcmF0ZSB0aGF0IHRob3NlIGxlZnQgd29ya2luZyBhcmUgY2hyb25pY2FsbHkgb3ZlcndvcmtlZCBhbmQgdW5kZXIgc3VwcG9ydGVkIGR1ZSB0byB1bmRlcnN0YWZmaW5nIGFuZCBvZiBjb3Vyc2UgdGhhdCBqdXN0IHBlcnBldHVhdGVzIHRoZSBjeWNsZSBvZiBwZW9wbGUgbGVhdmluZyBzb29uLiAKSXQgYSBiaXQgdHJpY2t5IHRvIG1vdmUgYXJvdW5kIHRoZSBhcmVhIHRvIGdldCB0aGUgY2hlc3RzIHVudGlsIHlvdSBpbnRvIHRoZSA0MHMsIHRob3VnaC4gCkhlIGxhdGVyIHNldCB1cCBhIGJ1c2luZXNzIHByb2R1Y2luZyBvaWxzIGZvciB1c2UgaW4gY29zbWV0aWNzLiAKSGUgaGFzIHdvbiA4MGsgaW4gYW4gb25saW5lIHRvdXJuYW1lbnQgYmVmb3JlIGFuZCBoYXMgYmVlbiBwbGF5aW5nIHByb2Zlc3Npb25hbGx5IGZvciB5ZWFycywgdHJhdmVsaW5nIHRoZSB3b3JsZCBldGMuLiAKQ2Ugc29udCBlbiBmYWl0IGxlcyBvcmdhbmlzbWVzIHBydGV1cnMgcXVpIGZpeGVudCBsZSB0YXV4IGRlIHJlbWJvdXJzZW1lbnQuIE1haXMgY2UgZGVybmllciBwb2ludCBuJ2VzdCBwYXMgZXhwbGlxdSBlbiBkdGFpbCBhdXggbW5hZ2VzIHF1aSBzb3VzY3JpdmVudCAgY2VzIGNyZGl0cyBlbiBtYXNzZSwgcGFyZm9pcyBwbHVzaWV1cnMgIGxhIGZvaXMuLiAKVGhlIEhhd2xleS9HcmVlbiBuZWlnaGJvcmhvb2Qgb24gdGhlIG5vcnRoc2lkZSB3YXMgdGhlIHVwIGFuZCBjb21pbmcgbmVpZ2hib3Job29kIGEgZmV3IHllYXJzIGFnby4KTWFueSBhcmUgYmVnaW5uaW5nIHRvIHRoaW5rIHRoaXMgZ2l2ZXMgdGhlbSBhIGJldHRlciBiYWNrZ3JvdW5kIGluIHBoeXNpY2FsIHJlaGFiLkEgc3R1ZHkgb2YgdGhlIGN1cnJpY3VsdW0gb2YgTm9ydGggQW1lcmljYW4gY2hpcm9wcmFjdGljIGFuZCBtZWRpY2FsIGNvbGxlZ2VzIGZvdW5kICJDb25zaWRlcmFibGUgY29tbW9uYWxpdHkgZXhpc3RzIGJldHdlZW4gY2hpcm9wcmFjdGljIGFuZCBtZWRpY2FsIHByb2dyYW1zLiAKSSB3YXMgZmVlbGluZyBsZXNzIGNvbnZpbmNlZCBhYm91dCB0aGlzIG1hZ2ljYWwgY3VwY2FrZSBtb21lbnQuIApJbnZlc3QgaW4gaW5ub3ZhdGlvbiB0byBvZmZlciBzb21ldGhpbmcgdW5pcXVlLiBGdW5uZWwgZnVuZHMgaW50byBSIHNvIHlvdSBoYXZlIG5ldyBwcm9kdWN0cyBhbmQgc2VydmljZXMgdGhhdCBnaXZlIHlvdSBuZWdvdGlhdGluZyBmbGV4aWJpbGl0eSB3aXRoIGN1c3RvbWVycyBhbmQgc2FsZXMgZ3Jvd3RoLiAKQSBnb29kIGNodW5rIG9mIGFsbCB0ZWFjaGluZyBpcyBkb25lIGJ5ICJBZGp1bmN0IiBwcm9mZXNzb3JzLCBtZWFuaW5nIHRoYXQgZ2V0dGluZyB0aGVpciBQaEQgaGFzIGxhbmRlZCB0aGVtIGEgam9iIHdoZXJlIHRoZXkgdGVhY2ggNCBjbGFzc2VzIGEgc2VtZXN0ZXIgKG1vcmUgdGhhbiBmdWxsIHRpbWUgZmFjdWx0eSkgYXQgYSBjb3VwbGUgb2YgdGhvdXNhbmQgZG9sbGFycyBhIGNsYXNzIHdpdGggbm8gYmVuZWZpdHMuIApFYWNoIHBsYXllciBtdXN0IHVzZSBleGFjdGx5IHRocmVlIGNhcmRzIGZyb20gdGhlIGZpdmUgY29tbXVuaXR5IGNhcmRzIGFuZCB0d28gZnJvbSBoaXMvaGVyIGhhbmQgaW4gYW55IGNvbWJpbmF0aW9uIHRvIGZvcm0gYSBoaWdoIGhhbmQgYW5kL29yIGEgbG93IGhhbmQuIFRoZSBzYW1lIGZpdmUgY2FyZHMgZG8gbm90IGhhdmUgdG8gYmUgdXNlZCBmb3IgdGhlIGhpZ2ggYW5kIHRoZSBsb3cuIAo4MiBzdG9jayBzb3VuZCBjbGlwcyBzdGFydGluZyBhdCAkMi4gRG93bmxvYWQgYW5kIGJ1eSBoaWdoIHF1YWxpdHkgS2V0dGxlIFdoaXN0bGUgc291bmQgZWZmZWN0cy4gClRoZXkgZGlzY292ZXJlZCB0aGF0IGFkbWluaXN0cmF0aW9uIG9mIDI0LDAwMCBJVS93ZWVrIGZvciBmb3VyIHdlZWtzIHdhcyBhc3NvY2lhdGVkIHdpdGggbG93ZXIgZXN0cm9nZW4gbGV2ZWxzIGFuZCBwcm9nZXN0ZXJvbmUgbGV2ZWxzLiBQZXIgNCBuZy9tbCBpbmNyZWFzZSBpbiB2aXRhbWluIEQsIHByb2dlc3Rlcm9uZSBsZXZlbHMgZGVjcmVhc2VkIGJ5IDEwJSBhbmQgZXN0cm9nZW4gZGVjcmVhc2VkIGJ5IDMlLgpMZXQgbWUgcHV0IG9uIG15IFRCTSBoYXQuIEl0IGNvbW1vbiB0byBmZWVsICJzb3JyeSIgZm9yIHRoZSBzaW5uZXIgYmVjYXVzZSBoZSBqdXN0IG1heSBoYXZlIHNjcmV3ZWQgdXAgaGlzIGV0ZXJuYWwgbGlmZSBmb3JldmVyLiBUaGlua2luZyBvZiB0aGUgdmljdGltcywgeWVzIGl0IGlzIHRlcnJpYmxlIGJ1dCB0aGV5IHdvbiBsZXQgdGhlIGluY2lkZW50L2V2ZW50IHJ1aW4gdGhlaXIgbGl2ZXMuIApLaW5nIENvdW50eSBwcm9zZWN1dG9ycyBjaGFyZ2VkIHRoZSBidXNpbmVzc2VzJyBvd25lciwgMzggeWVhciBvbGQgTGluZyBHYW8sIHdpdGggdHdvIGNvdW50cyBvZiBzZWNvbmQgZGVncmVlIHByb21vdGluZyBwcm9zdGl0dXRpb24gaW4gY29ubmVjdGlvbiB3aXRoIHR3byBvZiB0aGUgZml2ZSBDaGluZXNlIG5hdGlvbmFscyBzaGUgaXMgYWNjdXNlZCBvZiBwcm9zdGl0dXRpbmcgZnJvbSB0aGUgdHdvIGxvY2F0aW9ucy4gVGhvdWdoIHNoZSBjbGFpbWVkICJidXNpbmVzcyBpcyB2ZXJ5IHNsb3ciIGFuZCAibWFrZXMgbm8gbW9uZXksIiBkZXRlY3RpdmVzIHNlaXplZCAkMjQsNTYxIGluIGNhc2ggYW5kIG51bWVyb3VzIHJlY2VpcHRzIGZvciBXZXN0ZXJuIFVuaW9uIG1vbmV5IHRyYW5zZmVycyB0byBDaGluYSBmcm9tIGhlciBhcGFydG1lbnQgaW4gU2VhdHRsZSdzIENoaW5hdG93biBJbnRlcm5hdGlvbmFsIERpc3RyaWN0LCBjaGFyZ2luZyBwYXBlcnMgc2F5Li4gCiAyMiBwb2ludHMgIHN1Ym1pdHRlZCAxMCBob3VycyBhZ29TbyBzb21lb25lIGluIGEgZ3JvdXAgYXNrZWQgbWUgdG8gdGVsbCB0aGVtIHdoeSBJIGhhdGUgdGhlIG9jZWFuIHN1bmZpc2ggc28gbXVjaCwgYW5kIGFwcGFyZW50bHkgaXQgd2FzIHRvbyBtZWFuIGFuZCB3YXMgZGVsZXRlZC4gVG8gcGVycGV0dWF0ZSB0aGUgdHJ1dGggYW5kIHN0YW5kIHVwIGZvciBldGhpY2FsIGpvdXJuYWxpc20sIEkgcG9zdGluZyBpdCBoZXJlLiAKVGFsayBhYm91dCB5b3VyIGdhdGV3YXkgZHJ1Z3MgICBJIGVuZGVkIHVwIHN3aXRjaGluZyBmcm9tIFdpbmRvd3MgUENzIHRvIHRoZSBNYWNCb29rIFBybywgYW5kIG5vdyBhbHNvIGhhdmUgQXBwbGUgVFYsIGlQYWRzLCBIb21lUG9kcywgQWlyUG9kcywgYW5kIFdhdGNoClRoYXQgcmVtYWlucyBvbmUgb2YgbXkgZm9uZGVzdCBDaGVzcyBtZW1vcmllcyBhbmQgaXQgaW52aWdvcmF0ZWQgbXkgc3R1ZHkgZm9yIG1vbnRocyBhZnRlcndhcmRzLi4gCkl0IGJleW9uZCBnb29kLiAKVGhhbmsgZ29kIHRoZXkgZGlkbiBIb3cgZGlkIHlvdSBmZWVsIHdoZW4geW91IGxlYXJuZWQgQ2xpZnRvbiB0ZWFtIGRpZG4gZ28gZG93biBuZWFyIHRoZSBleWUgb2YgdGhlIHN0b3JtPyBUaGF0IHJlYWxseSB0aHJldyAiLiAKVGhlcmUgYXJlIHR3byBvdGhlciBjb250cmlidXRvcnMgdG8geW91ciBzaG9lICJzaXplIiBhcyB3ZWxsOiBUaGUgc2hhcGUgb2YgeW91ciBmb290IChob3cgdGhlIHNob2UncyAidXBwZXIiIGNvbmZvcm1zIHRvIHlvdXIgZm9vdCkgYW5kIHRoZSBoZWVsIGhlaWdodCB0aGF0IGlzIGJlc3QgZm9yIHlvdS4gQmVjYXVzZSBoaWdoIGhlZWxzIHNoaWZ0IGJvZHkgd2VpZ2h0IG9udG8gdGhlIGZyb250IG9mIHlvdXIgZmVldCwgaGVhdnkgcGVvcGxlIGFuZCBwZW9wbGUgd2l0aCBidW5pb25zLCBjb3JucywgaGFtbWVydG9lcywgYW5kIHRoZSBsaWtlIHNob3VsZCBvcHQgZm9yIGxvd2VyIGhlZWxzLiBJZiB5b3UgaGF2ZSBleGNlc3NpdmVseSBwcm9uYXRlZCAoImZsYXQiKSBmZWV0LCBBY2hpbGxlcyB0ZW5kaW5pdGlzLCBzaG9ydCBjYWxmIG11c2NsZXMsIG9yIGtuZWUgcHJvYmxlbXMsIGhvd2V2ZXIsIHNob2VzIHdpdGggYSBtb2RlcmF0ZSBoZWVsIG1heSBiZSBtb3JlIGNvbWZvcnRhYmxlIGZvciB5b3UsIGJlY2F1c2UgdGhleSBsZXNzZW4gdGhlIHB1bGwgb24gYWxyZWFkeSBvdmVyc3RyZXRjaGVkIHRlbmRvbnMgYW5kIG11c2NsZXMuLiAKKFByaXZhY3kgUG9saWN5KUdvb2dsZSBEb3VibGVDbGlja0dvb2dsZSBwcm92aWRlcyBhZCBzZXJ2aW5nIHRlY2hub2xvZ3kgYW5kIHJ1bnMgYW4gYWQgbmV0d29yay4gKFByaXZhY3kgUG9saWN5KUluZGV4IEV4Y2hhbmdlVGhpcyBpcyBhbiBhZCBuZXR3b3JrLiAKV2VsZGluZyBnYWx2YW5pemVkIHN0ZWVsIGlzIG5vdCB0aGUgc2FtZSBhcyBtaWxkIHN0ZWVsLCBzbyBteSBndWVzcyBpcyB0aGlzIHdhcyB0aGUgd2VsZGVycyBmaXJzdCB0aW1lIGRvaW5nIGl0IChob3BlZnVsbHkgaGUga25ldyBhYm91dCB0aGUgaGVhbHRoIGlzc3VlcyBhdCBsZWFzdCkKSWYgc29tZW9uZSB3YW50cyB0byBnbyB0aGUgc3Vic2NyaXB0aW9uIHJvdXRlIHdpdGggdGhlaXIgd2Vic2l0ZSwgZ3JlYXQuIFRoYXQgdGhlaXIgcHJlcm9nYXRpdmUuIApJdCB3YXMgdGhlIGJlZ2lubmluZyBvZiBhIHBhaW5mdWwsIGJ1dCBoaWdobHkgZW5saWdodGVuaW5nIGpvdXJuZXkgaW50byB0aGUgd29ybGQgb2YgYWR2YW5jZWQgZmluYW5jZS4gClplcm8gQ2hhbmNlIGZvciBhIHRvdXJuZXkgcmlnaHQgc2luY2UgUFMgYnJva2UgY29udHJhY3Q/Q2hlZXJzIGluIGFkdmFuY2UKVGhleSBhbHNvIGZpbGVkIGNyaW1pbmFsIGNoYXJnZXMgYWdhaW5zdCB0aGUgY29tcGFueSdzIHR3byB0b3AgZXhlY3V0aXZlcywgTmVsc29uIEJ1cnRuaWNrIGFuZCBSYXltb25kIEJpdGFyLiBQcmV2aW91c2x5LCB0aGV5IGhhdmUgaXNzdWVkIHN0YXRlbWVudHMgdGhyb3VnaCBhIHB1YmxpY2lzdCBjb25kZW1uaW5nIHRoZSBjaGFyZ2VzIGFzIHVuZm91bmRlZC4uIApBbm5vdW5jaW5nIHRoZSBkYXRlcyBmb3IgdGhlIGZsYWdzaGlwIENhcm5pdmFsLCBNci4gCkkgZG9uIHVuZGVyc3RhbmQgcG9saXRpY3MsIG1hbi4gCllvdSB1c3VhbGx5IGRvbiByZWFsbHkgZ2V0IHBhc3QgYSArMTAgdG8gaGl0IGJvbnVzIHdpdGggeW91ciBjaGFyYWN0ZXIsIHVudGlsIHNvbWV3aGVyZSBhcm91bmQgbHZsIDE3LCBvciB3aXRoIG1hZ2ljIGl0ZW1zLiAKVGhlIHBhcnQgdGltZSBjb3Vyc2UsIGlkZW50aWNhbCBpbiBjb250ZW50IHRvIHRoZSBmdWxsIHRpbWUgY291cnNlLCBjb21tZW5jZXMgaW4gU2VwdGVtYmVyIGVhY2ggeWVhciBhbmQgaXMgY292ZXJlZCBvdmVyIGEgdHdvLCB0aHJlZSBvciBmb3VyIHllYXIgcGVyaW9kLiBUZWFjaGluZyBpbiBOb3R0aW5naGFtIHRha2VzIHBsYWNlIG9uZSB0byB0d28gZGF5cyBhIHdlZWsgZHVyaW5nIHNlbWVzdGVyIHRpbWVzIGRlcGVuZGluZyBvbiB5b3VyIGNob3NlbiBvcHRpb25hbCBtb2R1bGVzLiAKQWxzbywgdGhleSBwYXNzaW5nIHRoZSBidWNrIHRvIGxvdyBjb3N0IGFwYXJ0bWVudCBvd25lcnMuIERpZCB5b3UgZm9yZ2V0IHRoYXQgdGhleSBtb3N0bHkgc2VuaW9ycywgd2UgZG93biB0d28gaHVuZHJlZCB0aG91c2FuZHMgb2YgbG93IGNvc3QgYXBhcnRtZW50IHVuaXRzLCB0aGUgZWxkZXJseSBhcmUgaGlnaGx5IHZ1bG5lcmFibGUgdG8gYWJ1c2UsIGFuZCB3ZSBoYXZlIGhhZCBtYW55IGluY2lkZW50cyB3aXRoIHNsdW1sb3Jkcz8gRG9lcyB0aGlzIGVxdWFsIHRoZSBjb3N0IG9mIGRlY2VudHJhbGl6ZWQgaGVhbHRoY2FyZS9yZXNvdXJjZXMgYW5kIHRyYW5zcG9ydGF0aW9uIGNvc3RzIGZvciB0aGVzZSBwZW9wbGUvQ01IQT8uIApNeSBhbWJpdGlvbiBpcyB0byBiZSBhIGdhbWUgZGVzaWduZXIuIEkgbG92ZSB0byBrbm93IGFib3V0IHRoZXNlIGtpbmRzIG9mIGRlY2lzaW9ucyBhbmQgSSBsaWtlIHB1enpsaW5nIHRocm91Z2ggZGVzaWduIHByb2JsZW1zIGxpa2UgdGhlc2UuIEJ1dCBtYW4sIHdoYXQgYSBoYXJkIGpvYiB0aGlzIG11c3QgYmUuIDMwIGhlcm9lcyBzb29uLCBnb3R0YSB0aGluayBob3cgZWFjaCBoZXJvIGFuZCBlYWNoIGFiaWxpdHkgaW50ZXJhY3RzIHdpdGggZXZlcnkgb3RoZXIgaGVybywgYm90aCBhcyBhbiBhbGx5IGFuZCBhbiBlbmVteS4gdGhlbiB5b3UgZ290dGEgaGF2ZSB0aGVtIGFsbCByb3VnaHRseSBiYWxhbmNlZCBzbyB0aGF0IG5vIG9uZSBoZXJvIGJlY29tZXMgYSBtdXN0IHBpY2ssIG9yIGZvcmV2ZXIgc2h1bm5lZC4gVGhlbiB5b3UgZ290dGEgdGhpbmsgYWJvdXQgaG93IHRoZXkgYXJlIHVzZWQgYXQgdG9wIHRpZXIgcGxheSBhbmQgYnkgdGhlIGF2ZXJhZ2UgcGxheWVyIGFuZCBwZW9wbGUgYXQgdGhlIGJvdHRvbSBvZiB0aGUgbGFkZGVyLiBtdXN0IGJlIGEgbmlnaHRtYXJlLgpDb3VwbGUgaGFkIGEgc2luZ2xlIHNhdmluZ3MgZ29hbCBpbiBtaW5kIHNjcmFwaW5nIHRvZ2V0aGVyICQzMCwwMDAgZm9yIGEgZG93bnBheW1lbnQgb24gdGhlaXIgaG9tZSBpbiB0aGVpciBuYXRpdmUgSGVuZGVyc29uLCBOZXZhZGEuLiAKV2Ugd29rZSB1cCB0byBnbyB0byB0aGUgc3VucmlzZSBzZXJ2aWNlIG9uIEVhc3RlciBTdW5kYXkgbGFzdCB5ZWFyIGFuZCBJIHdhbGtlZCBteSBkb2cgYmVmb3JlIHdlIGxlZnQsIHNoZSBhbmQgaGVyIGJveWZyaWVuZCB3ZXJlIGluIGZyb250IG9mIHRoZSB3aW5kb3cgYXQgNTowMCBhbSBidXR0IGFzcyBuYWtlZCB3aXRoIGFsbCB0aGUgbGlnaHRzIG9uLiAKIkNhcmQgZ2FtZXMgYXJlIGEgZmF2b3VyaXRlIHdpdGggYWxsIGR1cmluZyBEaXdhbGkgYW5kIHNvbWVob3cgeW91bmdzdGVycyBhcmUgaWRlbnRpZnlpbmcgdGhlbXNlbHZlcyB3aXRoIHRoZSBnYW1lIG9mIHBva2VyIGFuZCBwcmVmZXIgcGxheWluZyBzbyB0aGFuIGFueSBvdGhlciBjYXJkIGdhbWUsIiBoZSBzYXlzLgpZb3Ugd2lsbCBkbyB0aGlzIGFmdGVyIGVhY2ggaGFuZCB5b3UgbGF5IG9uIHRoZSB0YWJsZS4gCkl0IGRpZG4gbWFrZSBhIGxvdCBvZiBzZW5zZSwgYnV0IGJlY2F1c2Ugb2YgbXkgcXVlc3Rpb24gSSBjb3VsZG4gZ2V0IGl0IG91dCBvZiBteSBoZWFkLiBMaWtlIG15IHF1ZXN0aW9uIGltcGxpZWQgc29tZSBzb3J0IG9mIGZhdWx0IHdpdGggaGltLCBvciB3aXRoIHRoZSBwcm9ncmFtLiAKSSBrbm93IGN1c3RvbWFyeSBtb3JlIHRoYW4gbWV0cmljLCBhbmQgaXQgd291bGQgdGFrZSBhIGxvdCBvZiByZWFkanVzdGluZyB0byBnZXQgdXNlZCB0byBhbiBlbnRpcmVseSBuZXcgc3lzdGVtLiBJbWFnaW5lIGJlaW5nIHRvbGQgeW91ciBjb3VudHJ5IHdhcyBhYmFuZG9uaW5nIGl0cyBsYW5ndWFnZSBmb3IgYSBuZXcgb25lICBTd2FoaWxpIHNlZW1zIGludGVyZXN0aW5nLiBIb3cgbG9uZyB3b3VsZCBpdCB0YWtlIHlvdSB0byBnZXQgdXNlZCB0byBzcGVha2luZyBTd2FoaWxpPyBXb3VsZCB5b3UgRVZFUiBiZSBmbHVlbnQ/LiAKSSBoYWQgYSBzbWFsbCBmYW1pbHkgb2YgcmVndWxhcnMgZm9yIGFib3V0IDQgeWVhcnMgYW5kIGFsd2F5cyBoYWQgdG8gb3BlbiBhIGRvb3IgdG8gYWlyIG91dCB0aGUgcGFydCBpZiB0aGUgcmVzdGF1cmFudCB0aGV5IHNhdCBpbiBhZnRlciB0aGV5IGxlZnQuIFRoZW4gdXBvbiB0aGVpciBsYXN0IHZpc2l0LCB3ZSBjb21lIHRvIGRpc2NvdmVyICJtb20iIHNtZWFyZWQgaGVyIGZlY2VzIEFMTCBPVkVSIFRIRSBTVEFMTC4gV2UgdW5kZXJzdGFuZCB3aGVuIHBlb3BsZSBvZiBsb3dlciBvciB0cmFnaWMgYW5kIGxpa2VseSBlbWJhcnJhc3NpbmcgbG9zcyBvZiBmYWN1bHRpZXMganVzdCBjYW4ndCAiZ2V0IHRoZXJlIi4gCkRhbnMgY2V0dGUgYWZmYWlyZSwgdW4gaG9tbWUgZGUgbmF0aW9uYWxpdCBmcmFuYWlzZSBwb3VzZSB1bmUgZmVtbWUgZGUgbmF0aW9uYWxpdCBhbGdyaWVubmUgbGUgNSBtYXJzIDIwMDUuIERhbnMgbGUgYnV0IGQnYWNxdXJpciBsYSBuYXRpb25hbGl0IGZyYW5haXNlLCBsJ3BvdXNlIHNvdXNjcml0IHVuZSBkY2xhcmF0aW9uIGxlIDEyIGp1aW4gMjAwOSwgc3VyIGxlIGZvbmRlbWVudCBkZSBsJ2FydGljbGUgMjEgMiBkdSBDb2RlIGNpdmlsLiBFbiBlZmZldCwgY2V0IGFydGljbGUgcHJ2b2l0IHF1ZSBsZSBjb25qb2ludCB0cmFuZ2VyIHBldXQgZGVtYW5kZXIgbGEgbmF0aW9uYWxpdCBmcmFuYWlzZSBhcHJzIGwnY291bGVtZW50IGQndW4gZGxhaSBkZSBxdWF0cmUgYW5uZXMgIGNvbXB0ZXIgZHUgbWFyaWFnZSwgICBjb25kaXRpb24gcXUnIGxhIGRhdGUgZGUgY2V0dGUgZGNsYXJhdGlvbiBsYSBjb21tdW5hdXQgZGUgdmllIHRhbnQgYWZmZWN0aXZlIHF1ZSBtYXRyaWVsbGUgbidhaXQgcGFzIGNlc3MgZW50cmUgbGVzIHBvdXggZGVwdWlzIGxlIG1hcmlhZ2UgLgpJIGRvIGhhdmUgZnJpZW5kcyB0aGF0IGhhZCBiZXR0ZXIgY29taW5nIG91dCBzdG9yaWVzIGFuZCBpdCBnZXR0aW5nIGJldHRlciBmb3Iga2lkcyB0b2RheSBhbmQgb2J2aW91c2x5IG1lIGFzIHdlbGwgaWYgSSBhYmxlIHRvIGV2ZW4gYmUgaGFwcHkgYW5kIG9wZW4gb24gc29tZXRoaW5nIGxpa2UgRmFjZWJvb2suIE1heWJlIHRoZSBtb3ZpZSBkaWQgaXQgb24gcHVycG9zZSBzbyB0aGF0IGFueW9uZSB3YXRjaGluZyBjb3VsZCBoZWFyIHRoZSB3b3JkcyB0aGV5IHdpc2ggdGhlaXIgcGFyZW50cyBzYWlkIG9yIHRoZSBzdXBwb3J0IHRoZXkgd2lzaCB0aGVpciBmcmllbmRzIGFuZCB0ZWFjaGVycyBoYWQgZG9uZS4gCkFwcGFyZW50bHkgcGVvcGxlIGRvIHJlYWQgdGhlc2UuIAoiUGVybyBlc3RveSBkZSBhY3VlcmRvIGVuIGxpYnJhcm5vcyBkZSBlbGxvcy4gCllvdSBraWRkaW5nPyA5MHMgR00gY2FycyBhcmUgY2hlYXAgYXMgaGVsbCB0byBtYWludGFpbi4gSSBoYWQgYSA5NCBTaWVycmEsIFNlcnBlbnRpbmUgYmVsdCBzbmFwcGVkPyBPaCBib3ksICQxNSBmb3IgYSBuZXcgb25lIGFuZCBjYW4gcHV0IGl0IG9uIHdpdGhvdXQgdG9vbHMuIFNwYXJrIHBsdWdzIGJhZD8gJDMwIGZvciBhIHNvbGlkIHNldCBvZiBuZXcgb25lcywgaGFsZiBob3VyIG9mIHdvcmsgYW5kIHNoZSBiYWNrIG9uIHRoZSByb2FkLiAKQW1pZCB0aGUgaGVhZGxpbmVycywgdGhlIGZlc3Qgb2ZmZXJzIHNtYWxsZXIgbmFycmF0aXZlIGZpbG1zIGFuZCBkb2N1bWVudGFyaWVzIGFuZCBhIGZldyBleHBlcmltZW50cyB0aGF0IGludGVncmF0ZSBib3RoIChzdWNoIGFzIHByb3ZvY2F0ZXVyIEhhcm1vbnkgS29yaW5lJ3MgIlRoZSBGb3VydGggRGltZW5zaW9uIikuIApNb290eWdyaW1lcyAgMjkgcG9pbnRzICBzdWJtaXR0ZWQgMTggZGF5cyBhZ28KQmVsaWV2ZSBpbiBDaHJpc3QgYW5kIHlvdSBnbyB0byBoZWF2ZW4uIEFzayBmb3IgZm9yZ2l2ZW5lc3MgYW5kIHlvdSBmb3JnaXZlbi4gQ2h1cmNoIHdvbiBnZXQgeW91IGludG8gaGVhdmVuIHVubGVzcyB5b3UgZG9pbmcgYWxsIHRoZSBvdGhlciBzdHVmZiBmaXJzdC4gVGhlIEJpYmxlIGlzIHN1cGVyIGNsZWFyIGFib3V0IHRoYXQuCkl0IHN0aWxsIHRvdWdoIGZvciBpbnN0aXR1dGVzIHRvIGdldCB0aGVpciBoYW5kcyBvbiBhIGNvbnNpc3RlbnQsIGdvb2Qgc3VwcGx5IG9mIG1hcmlqdWFuYSBmb3IgcmVzZWFyY2guIFRoZXkgZm91bmQgc29saWQgZXZpZGVuY2Ugb24gYSBmZXcgdGhpbmdzLCBlc3BlY2lhbGx5IGVmZmVjdHMgb2YgbXVsdGlwbGUgc2NsZXJvc2lzLiAKQ2xldmVsYW5kIFZBIGhvc3BpdGFsIGpvaW5pbmcgbmF0aW9uYWwgcGlsb3QgcHJvZ3JhbSB0byByZWR1Y2UgbWVkaWNhbCBlcnJvcnMgQ2xldmVsYW5kIFZBIGhvc3BpdGFsIGpvaW5pbmcgbmF0aW9uYWwgcGlsb3QgcHJvZ3JhbSB0byByZWR1Y2UgbWVkaWNhbCBlcnJvcnMgVGhlIExvdWlzIFN0b2tlcyBDbGV2ZWxhbmQgVkEgTWVkaWNhbCBDZW50ZXIgaXMgYW1vbmcgMTggbWVkaWNhbCBjZW50ZXJzIHNlbGVjdGVkIHRvIGxlYWQgYSBuZXcgaW5pdGlhdGl2ZSBmb3IgdHJhbnNmb3JtaW5nIFZBIGhlYWx0aCBjZW50ZXJzIGFjcm9zcyB0aGUgY291bnRyeSBpbnRvIGEgaGlnaCByZWxpYWJpbGl0eSBvcmdhbml6YXRpb25zIChIUk8pLCBpdCB3YXMgYW5ub3VuY2VkIFRodXJzZGF5LiBIaWdoIHJlbGlhYmlsaXR5IG9yZ2FuaXphdGlvbnMgdXNlIHByb2NlZHVyZXMgYW5kIHByb3RvY29scyB0aGF0IGVtcGhhc2l6ZSBzYWZldHksIHJlZHVjZSBlcnJvcnMgYW5kIHByZXZlbnQgaGFybSB0byBwYXRpZW50cy4uIApMaXNhIFNjaHJlaWJlcnNkb3JmLCBleGVjdXRpdmUgZGlyZWN0b3Igb2YgQnJvb2tseW4gRGVmZW5kZXIgU2VydmljZXMsIHRoZSBsZWdhbCBhaWQgb2ZmaWNlIGhhbmRsaW5nIEhlYWRsZXkncyBjYXNlLCBzYWlkIGF0IGEgbmV3cyBjb25mZXJlbmNlIHRoYXQgaXQgaXNuJ3QgdW5jb21tb24gZm9yIHN0cmVzc2VkIGNsaWVudHMgb2YgdGhlIGNpdHkncyBvdmVyYnVyZGVuZWQgc29jaWFsIHNlcnZlIGFnZW5jaWVzICJ0byBmaW5kIHRoZW1zZWx2ZXMgYXJyZXN0ZWQgYmVjYXVzZSBvZiBhbiBpbmNpZGVudCB0aGF0IHdhc24ndCByZWFsbHkgY3JpbWluYWwuIgpXZSBzdHVtYmxlIGluIGp1c3QgYmVmb3JlIHRoZXkgYmVnaW4gY2xlYW5pbmcgdXAgYW5kIG9yZGVyIGEgZmlzaCBmcnkuIApJZiB5b3UgZGlkbiBib29rIGEgZ2lybCBpbiBhZHZhbmNlLCB0aGUgYXZhaWxhYmxlIGxhZGllcyB3aWxsIGNvbWUgaW4gMSBieSAxIGFuZCBpbnRyb2R1Y2UgdGhlbXNlbHZlcy4gSWYgeW91IGRpZCBib29rIGluIGFkdmFuY2UsIGJ1dCBmZWVsIGxpa2UgeW91IG1hZGUgYSBiYWQgY2hvaWNlIHdoZW4gbWVldGluZywgeW91IGNhbiBjaGFuZ2UgeW91ciBvcGluaW9uIGFuZCBhc2sgdG8gZ2V0IGEgbG9vayBhdCB0aGUgb3RoZXJzLiAKSG93IGRpZCB0aGV5IGFsbCBlbmQgdXA/IFRoZSBzaG9ydCB2ZXJzaW9uIGlzIHRoYXQgdGhleSBhbGwgZW5kZWQgdXAgbW92aW5nIGF3YXkgZnJvbSBXaXN0ZXJpYSwgbGFuZGluZyBpbiBkaWZmZXJlbnQgcGxhY2VzLi4gCihXaWxsaWFtIEUuIApBcyBhIGNvbnNlcXVlbmNlIG9mIHRoZSByZXN1bHRzLCB0aGUgZmllbGQgaXMgbm93IHdpZGUgb3BlbmFzIENvbG9tYmlhIGhhcyBjaG9zZW4gY2FuZGlkYXRlcyB3aG8gb2ZmZXIgbWFya2VkbHkgZGlmZmVyZW50IHZpc2lvbnMgZm9yIHRoZSBmdXR1cmUgb2YgdGhlIGNvdW50cnkuCk1vcmUgaW5mbyBoZXJlOlNvIGJlZm9yZSB5b3UgbW92ZSBmb3J3YXJkIHdpdGggYW55dGhpbmcsIGdldCBhIGxhd3llciwgY29udGFjdCBsYXcgZW5mb3JjZW1lbnQsIGFuZCBwcmVwYXJlIGV2ZXJ5dGhpbmcgY2FyZWZ1bGx5LgpBdCB0aGlzIHBvaW50LCB5b3UgaGF2ZSB0aGUgb3B0aW9uIHRvIGRpc2NhcmQgc29tZSBvZiB0aGUgY2FyZHMgb3IgYWxsIG9mIHRoZSBjYXJkcyBhbmQgcmVwbGFjZSB0aGVtIHdpdGggbmV3IG9uZXMuLiAKWW91ciBpbGxpY2l0IGRydWcgZm9yIGRlYWxpbmcgd2l0aCAyMDE5IHBvbGl0aWNzCk1lYW53aGlsZSBJJ20gbWFycmllZCwgY29taW5nIHVwIG9uIG91ciBzZWNvbmQgYW5uaXZlcnNhcnksIHRvIGEgZ3V5IHdobyBpc24ndCBhbiBhYnVzaXZlIGRpY2toZWFkIGFuZCBhY3R1YWxseSByZXNwZWN0cyBtZS4gSSB0aGluayBJJ20gdGhlIG9idmlvdXMgd2lubmVyIGhlcmUuCkkgZG9uJ3Qgd2FudCB0byBnbyBicm9rZSBldmVyIGFnYWluLi4gClRoZSBzYW1lIGdvZXMgZm9yIGEgbG90IG9mIHRoaW5ncyBhY3R1YWxseS4gCiJUaGUgY29uZGl0aW9ucyBhcmUgY29tcGxldGUgZGFya25lc3MsIHNvIG5vIGVsZWN0cm9uaWNzLCBubyBsaWdodCBlbWl0dGluZyBkZXZpY2VzLCBubyBkcnVncyBvZiBhbnkga2luZCwiIHNhaWQgWW91bmcuICJIZSBpcyBhbGxvd2VkIGFueSB0eXBlIG9mIGZvb2QgdGhhdCBoZSB3YW50cy4gCkl0IHdhcyBhbiBhbGwgb3V0IHdhciwgYW5kIG9uIHRoYXQgZGF5LCB0aGUgcmVkZGl0IGdhbWluZyBjb21tdW5pdHkgc2VlbiB3aGF0IGl0IHdvdWxkIGJlIGxpa2UgaWYgc29tZW9uZSBtZXNzZXMgd2l0aCB0aGUgaGlzdG9yaWFuIGdhbWVycy4gCldoYXQgbWFkZSB0aGUgMjAwNSBzZWFzb24gcGFydGljdWxhcmx5IGRpc2FwcG9pbnRpbmcgd2FzIHRoZSBmYWN0IHRoZSAyMDA0IHRlYW0gZW5kZWQgdGhlIHNlYXNvbiB3aXRoIDg5IHdpbnMgYW5kIG9uZSBvZiB0aGUgbW9zdCBpbXByZXNzaXZlIGhvbWUgcmVjb3JkcyBpbiBiYXNlYmFsbC4gCkxlIHJlc3BlY3QgZGUgdm90cmUgdmllIHByaXZlIGVzdCBpbXBvcnRhbnQgcG91ciBub3VzLiBQaG90bzogTGEgUHJlc3NlIGNhbmFkaWVubmUgLyBQYXVsIERhbHkKU2hlIHdhcyBzcGVha2luZywgb3Igd2hpc3BlcmluZywgYWJvdXQgSmF5Y2VlIER1Z2FyZCwgYSB3b21hbiBraWRuYXBwZWQgYXMgYSBjaGlsZCBhbmQga2VwdCBjYXB0aXZlIHdlbGwgaW50byBhZHVsdGhvb2QuIApMYXcgZW5mb3JjZW1lbnQgZGVncmVlIHByb2dyYW1zIGNvbWJpbmUgY2xhc3Nyb29tIGFuZCBsYWJvcmF0b3J5IHdvcmsgdG8gcHJvdmlkZSBhcHBsaWNhdGlvbiBvZiBhY2FkZW1pYyBsZWFybmluZyB0byB0YWN0aWNhbCBwcmFjdGljZS4gCkNvbnNpZGVyIHRoZSBoZWlnaHQgb2YgdGhlIHRhYmxlIGFzIHdlbGwgYXMgdGhlIGNvbG9yIG9mIHRoZSBmZWx0LCBhbmQgeW91IGFyZSBvbiB5b3VyIHdheSB0byBoYXZpbmcgYSBwb2tlciB0YWJsZSB0aGF0IGlzIGxpa2Ugbm8gb3RoZXIhLiAKSSBidWlsdCBhIHN0YW5kaW5nIGRlc2sgd2l0aCBhIGNhYmluZXQgdW5kZXJuZWF0aCBmb3IgYWRkaXRpb25hbCBzdG9yYWdlLi4gCkl0IHR1cm5zIG91dCB0aGF0IG1vc3Qgb3V0cmlnaHQgYnVsbHlpbmcgaXMgdGFyZ2V0ZWQgYXQgYSBzaW5nbGUgaW5kaXZpZHVhbCwgYW5kIGFmdGVyIHRoYXQgcnVsZSwgYW5kIHNvbWUgYWdncmVzc2l2ZSBtb2RlcmF0aW9uIHRvIGVuZm9yY2UgaXQsIG1vc3Qgb2YgdGhlIHRveGljIHBhcnRzIG9mIHRoZSBjb21tdW5pdHkgbGVmdCBmb3Igci9jcmluZ2VhbmFyY2h5IGFuZCB0aGUgbGlrZS4gVS9kcnVtY293c2tpIChpIHRoaW5rKSBoYWQgYSBwb3N0IGV4cGxhaW5pbmcgdGhlIHNhZ2EsIHdoaWNoIEkgY2FuIGZpbmQuIApXYWxtYXJ0IHdpbGwgZG8gdGhpcyB0b28sIGJ1dCBhdCBsZWFzdCBJIGNhbiBjcmVhdGUgc29tZXRoaW5nLCB0cnkgdG8gc2VsbCBpdCB0byBXYWxtYXJ0IGFuZCBJIGVpdGhlciBnZXQgcGFpZCBvciBJIGRvbiBJIGNhbiBjaG9vc2UgdG8gbm90IHNlbGwgdG8gV2FsbWFydCBpZiB0aGV5IGRvbiB3YW50IHRvIHBsYWNlIGEgYmlnIGVub3VnaCBvcmRlci4gCkNtYW5kcmUgIDExIHBvaW50cyAgc3VibWl0dGVkIDUgbW9udGhzIGFnbwpMYXV0IEF5dXJ2ZWRhIGhhdCBqZWRlciBNZW5zY2ggc2VpbiBlaWdlbmVzIEdsZWljaGdld2ljaHQgdm9uIFZhdGEsIFBpdHRhIHVuZCBLYXBoYS4gSW4gZGVyIFJlZ2VsIGRvbWluaWVyZW4gZWluIG9kZXIgendlaSBEb3NoYXMuIEFuaGFuZCB2b24gQ2hhcmFrdGVyZWlnZW5zY2hhZnRlbiwgZGVtIHVlcmVuIEVyc2NoZWludW5nc2JpbGQgdW5kIGRlbiBLcmFua2hlaXRzZGlzcG9zaXRpb25lbiBlaW5lcyBNZW5zY2hlbiBpc3QgZXJrZW5uZW4sIHdlbGNoZSBEb3NoYXMgYmVyd2llZ2VuLgpEZW1vY3JhdGljIFBhcnR5ClRoZSBhbmF0b21pY2FsIGJhc2lzIGZvciB0aGUgZWZmZWN0aXZlbmVzcyBvZiB0aGUgY2hpcm9wcmFjdGljIGFkanVzdG1lbnQgZm9yIGNlcnZpY29nZW5pYyBoZWFkYWNoZSBoYXMgYmVlbiBmb3VuZC4uIApUaGUgY291cnQgbGlrZWx5IGNhbid0IGJhciBpdHMgcHJpbnRpbmcsIGJ1dCBhIHJlYXNvbmFibGUgcmVzdHJpY3Rpb24gb24gaXRzIHRpbWUgYW5kIG1hbm5lciBvZiBwdWJsaWNhdGlvbiBtaWdodCBzcXVlYWsgYnkuLiAKUmFpZGVycyBob2xkIHRhbGtzIGFib3V0IHJldHVybmluZyB0byBPYWtsYW5kIENvbGlzZXVtIGZvciB0aGlzIHNlYXNvbiBGZWJydWFyeSAxMywgMjAxOQpIb3cgbXVjaCBub2lzZSBzaG91bGQgSSBtYWtlIGR1cmluZyBhIG1hc3NhZ2UKR2V0IGFub3RoZXIgJDEwMCBvdXQgYW5kIHRyeSBhZ2Fpbi4gClVTSU5HIENPTlRBSU5FUlMuRm9yIGZ1cnRoZXIgc3BlY2lmaWNzIGFib3V0IGtpbmQgb2Ygc29sdXRpb25zIG9mZmVyZWQgb24gQmx1cmJwb2ludCBhbmQgYWxzbyB0byBlbnF1aXJlIGFib3V0IGRpZmZlcmVudCByYXRlcyBvZiBwYWNrYWdlcyBhY2Nlc3NpYmxlLCB0aGVuIGNvdWxkIHNpZ24gb24gaXRzIG9mZmljaWFsIHdlYnNpdGUuIFRvIGJlIGFibGUgdG8gZGVjcmVhc2UgdGhlIHRyaXAgdG93YXJkIGFuIGVmZmVjdGl2ZSBjb21wYW55IHRvIHlvdXIgTXlzcGFjZSBidXNpbmVzcyB3ZWIgcGFnZSwgeW91IGhhdmUgdG8gcG93ZXJmdWwgY29udGFjdHMgbm93YWRheXMuIApMYXN0IGJ1dCBub3QgbGVhc3QgSSB3b25kZXIgaWYgdGhlcmUgd291bGQgbm90IGJlIGEgYmV0dGVyIHRpbWluZyB0byBnZXQgYSBza3kgdG8gaGF2ZSBtb3JlIGNvbnRyYXN0IHRvIHRoZSBza3lsaW5lLiAKT3ZlcnZpZXcgZm9yIFZlcm9uaWNhQ2hyaXN0aW5lClRoZSBhbGJ1bSdzIHdhdGVyeSBzb3VuZCBoZWlnaHRlbnMgdGhlIGJvbWJhc3Q6IFJlY29yZGVkIGFzIGlmIGluIGEgY2F0aGVkcmFsLCB3aXRoIGxvdHMgb2YgZWNobyBzcGFjZSBiZXR3ZWVuIGluc3RydW1lbnRzLCB0aGUgZ3VpdGFycyBhbmQgaGFuZGNsYXBzIGJvb20gYW5kIHJlc291bmQuIEV2ZW4gdGhlIHF1aWV0ZXIgYWNvdXN0aWMgc29uZ3MgYXJlIG9mdGVuIHN1ZmZ1c2VkIGJ5IGJhY2tncm91bmQgY2hvcmFsIHNpbmdpbmcsIHN1c3RhaW5lZCBvaGhocyBhbmQgb29vaHMsIGdlbmVyYXRpbmcgYSBwYWxlIGdsb3cuIApaYWhpZCBoYWQgY29tbWl0dGVkIHRvIHRoZSBvcHBvc2l0aW9uIHRoYXQgaGUgd291bGQgZ2V0IFNhcnRhaiBBeml6IGJyaWVmIHRoZSBIb3VzZSBvbiBQYWtpc3RhbidzIHBvbGljeSBvbiBTeXJpYS4gVGhlIFBNTCBOIGdvdmVybm1lbnQgd2FzIHRha2luZyBhIGRhaWx5IHBvdW5kaW5nIGluIHRoZSBtZWRpYSBmb3IgY2hhbmdpbmcgaXRzIHBvbGljeSBvbiBTeXJpYSBhbGxlZ2VkbHkgYXQgdGhlIGJlaGVzdCBvZiBhIHBvd2VyZnVsIE1pZGRsZSBFYXN0ZXJuIGNvdW50cnkuIEEgd2lyZSBzZXJ2aWNlIHdlbnQgYXMgZmFyIGFzIGFjY3VzaW5nIFBha2lzdGFuIG9mIGFncmVlaW5nIHRvIHNlbmQgYXJtcy4gCk9uIE1heSBEYXksIE1heSAxLCAyMDA3LCB0aGUgZGF5IG9mIHRoZSBjZWxlYnJhdGlvbiBvZiB0aGUgVmlyZ2luIE1hcnksIFRoZSBUZW1wbGUgb2YgTG92ZSAgIFRoZSBXb3JsZCBQZWFjZSBSZWxpZ2lvbiBhbm5vdW5jZWQgdGhhdCBOb3N0cmFkYW11cycgdGhpcmQgYW50aSBDaHJpc3Qgd2FzIHRoZSB1bHRyYSBoYXJkIGxpbmUgZGFpbHkgYWR2aXNvciBhbmQgcHVwcGV0IG1hc3RlciBvZiB0aGUgUHJlc2lkZW50IG9mIElyYW4sIElyYW5pYW4gQXlhdG9sbGFoIE1lc2JhaCAocHJvbm91bmNlZCBNYXliYWgsIGxpa2UgTm9zdHJhZGFtdXMnIE1hYnVzLCBsaWtlIEhpc3RlciBpcyB0byBIaXRsZXIpIFlhemRpLiBJcmFuaWFuIEF5YXRvbGxhaCBNZXNiYWggWWF6ZGkncyBkZWNsYXJlZCBpbnRlbnRpb24gaXMgdG8gZm9sbG93IHRoZSB3b3JkIG9mIEdvZCBvZiBNb3VudCBTaW5haSBhcyB0b2xkIHRvIHRoZSBhbmdlbCBHYWJyaWVsIGFuZCB0aGVuIHRvIHRoZSBQcm9waGV0IE11aGFtbWFkIChQQlVIKSBvdXRsaW5lZCBpbiB0aGUgS29yYW4gYW5kIHRoZSBIYWRpdGggYW5kICJNYWtlIFdhciBvbiB0aGUgQ2hyaXN0aWFucywgSmV3cyBhbmQgaW5maWRlbHMgYW5kIGJlIHJld2FyZGVkIHdpdGggZXRlcm5hbCBwYXJhZGlzZSBpbiBIZWF2ZW4gd2l0aCBHb2Qgb2YgTW91bnQgU2luYWksIGNyeXN0YWwgY2xlYW4gbGFrZXMgYW5kIHNwcmluZ3MsIGVuZGxlc3Mgd2luZSB3aXRoIG5vIHNpZGUgZWZmZWN0cywgNzIgdmlyZ2lucyBhbmQgODAsMDAwIHNlcnZhbnRzIHBlciBtYXJ0eXIgYW5kIGJlbGlldmVyLiIgKEtvcmFuIFN1cmEgQ2hhcHRlciA5OjUsIDI5IDMwIGFuZCBDaGFwdGVyIDU2LCAiTWVjY2EiKS4gCkl0IHdhc24ndCBtdWNoIHRvIGFzayBzaW5jZSBoZSB3YXMgb3V0IGVhcmx5IGZyb20gd29yayBmb3IgdGhlIGRpbm5lciBzbyBoZSB3YXMgb3V0IDQgOSBub3JtYWxseSBoZSdzIG5vdCBob21lIHRpbGwgNyBhbnl3YXkgc28gaXQgd2Fzbid0IHRvbyBiYWQgZXhjZXB0IGhlIGNvdWxkbid0IGhlbHAgd2hlbiBoZSB3YXMgaG9tZSBiZWNhdXNlIGFwcGFyZW50bHkgYSBmcmVlIGJhciBpcyBhbiBleGN1c2UgdG8gZHJpbmsgaXQgYWxsLiBEZWZlYXRlZCB0aGUgaWRlYSBvZiBjb21pbmcgaG9tZSBlYXJseSB0byBoZWxwLi4gCkZpbmFsbHksIHlvdSBjb3VsZCBhbHNvIHRyeSBzdWJtaXR0aW5nIHlvdXIgcXVlc3Rpb24gdG8gL3IvSGlzdG9yeSBvciAvci9Bc2tIaXN0b3J5LCB3aGljaCBkb2VzbiBoYXZlIHN1Ym1pc3Npb24gY3JpdGVyaWEgcXVpdGUgYXMgc3RyaWN0LgpNeSBwYXJlbnRzIGRpZCBzb21ldGhpbmcgc2ltaWxhciB3aGVuIEkgd2FzIGEgdGVlbi4gCkxpa2UgYSBiYWQgbWVhbCBpbiBhbiBleHBlbnNpdmUgcmVzdGF1cmFudCwgYSBzZXggdG95IHRoYXQgZG9lc24gZGVsaXZlciB0aGUgcHJvbWlzZWQgcGxlYXN1cmVzIGlzIGEgYmFkIGludmVzdG1lbnQgb2Ygb3VyIGluY3JlYXNpbmdseSBsaW1pdGVkIGxlaXN1cmUgZG9sbGFycy4gQnV0IG5vdCB0byB3b3JyeSAgYmVjYXVzZSBldmVuIGlmIHlvdSBoYXZlIHRvIHRyeSAzIG9yIDQgc2V4IHRveXMsIGV2ZW50dWFsbHkgeW91IGZpbmQgb25lIHRoYXQgaXMgYSBnb29kIGludmVzdG1lbnQgZm9yIHlvdS4gCkkganVzdCB3YW50IG9uZS4gCkEgc3VyZ2VyeSBvciBwYWludCBqb2IgaXNuJ3Qgc29tZXRoaW5nIHdoZXJlIHlvdSdyZSBwYXlpbmcgZm9yIHRoZSB0aW1lLCB5b3UncmUgcGF5aW5nIGZvciB0aGUgb3ZlcmFsbCBzZXJ2aWNlIChhbmQgYSBtZWRpY2FsIHRoaW5nIGlzIGp1c3QgZGlmZmVyZW50IG92ZXJhbGwpLiBBbHNvLCB1c3VhbGx5IHBhaW50ZXJzIHdpbGwgYWN0dWFsbHkgZ2l2ZSB5b3UgYSBsb3dlciByYXRlIGlmIHlvdSBhZ3JlZSB0byBnZXQgbW9yZSByb29tcyAob3Igd2hhdGV2ZXIgeW91J3JlIGhhdmluZyBwYWludGVkKSBkb25lLi4gCklmIHlvdSBkbyBhIGxpdHRsZSByZXNlYXJjaCBhcm91bmQgdGhlIGludGVybmV0LCB5b3Ugd2lsbCBmaW5kIHRlc3RpbW9uaWFscyB0aGF0IGluZGl2aWR1YWxzIHN1Ym1pdCB3aGVyZSB0aGV5IGFyZW4ndCBwbGVhc2VkIHdpdGggcGxhc3RpYyBwb2tlciBjaGlwcy4gSG93ZXZlciwgaW4gbXkgb3duIHBlcnNvbmFsIG9waW5pb24gaXQgcmVhbGx5IGRlcGVuZHMgb24gd2hhdCB0eXBlIG9mIHBpY3R1cmUgeW91J3JlIHRyeWluZyB0byBwYWludCBmb3IgeW91ciBndWVzdHMuIFNpbmNlIHdlJ3JlIGEgYnVuY2ggb2YgY29sbGVnZSBraWRzIGp1c3QgYmxvd2luZyBvZmYgc3RlYW0gYWZ0ZXIgbG9nZ2luZyBsb25nIHN0dWR5IGhvdXJzLCB3ZSBkb24ndCBuZWVkIGEgZmFuY3kgc2V0IHRvIGZlZWwgbGlrZSB3ZSdyZSBwbGF5aW5nIHBva2VyLi4gCk9uIHRyb3V2ZSBkZXMgdHJhY2VzIGRlIHNhIHByc2VuY2UgZGFucyBsYSBwaGFybWFjb3BlIG1kaXZhbGUgcHVpc3F1ZSBsIHNhaXQgcXVlIEhpbGRlZ2FyZGUgZGUgQmluZ2VuICgxMDk4IDExNzkpIGVuIGZhaXNhaXQgdXNhZ2Ugc2FucyBxdSBzYWNoZSBjZXBlbmRhbnQgcyBzIGRlIGxhIGRvbWVzdGlxdWUgb3UgZGUgbGEgc2F1dmFnZS4gCihGdWxsIEFuc3dlcikuIApMaW5kYSBIYXNlbmZyYXR6LCBhY2NvbXBhbmllZCBieSBodXNiYW5kIEVkIE5ld3RvbiBhbmQgZGF1Z2h0ZXIgT2xpdmlhLCBpcyB0aGUgZmlyc3Qgd29tYW4gdG8gYmUgaG9ub3VyZWQgd2l0aCB0aGUgR3VzdGF2c29uIFNjaG9vbCBvZiBCdXNpbmVzcyBUTXMgRGlzdGluZ3Vpc2hlZCBFbnRyZXByZW5ldXIgb2YgdGhlIFllYXIgQXdhcmQuIEhhc2VuZnJhdHogYW5kIGhlciBmYXRoZXIsIEZyYW5rLCB3ZXJlIGFsc28gcmVjZW50bHkgYXBwb2ludGVkIHRvIHRoZSBDYW5hZGlhbiBCdXNpbmVzcyBIYWxsIG9mIEZhbWUgZm9yIHRoZWlyIGdsb2JhbCBzdWNjZXNzLiAKSSBhbHNvIHRoaW5rIGhlIG1pZ2h0IGRvIGJldHRlciB0aGFuIG1vc3QgdnMgSW5rbGluZyBvbmx5IGxvc2luZyB0byB0aGVtIHNsaWdodGx5LiBIZSBzdGlsbCBsb3NlcyB0byB6b25lcnMsIGFtYXppbmcganVnZ2xlcnMsIHBvdGVudCBlZGdlZ3VhcmRlcnMsIGFuZCBqdXN0IGV4dHJlbWVseSBmYXN0IGNoYXJhY3RlcnMsIGJ1dCBldmVuIGhpcyB3b3JzdCBtdXMgYXJlIHN0aWxsIGRvYWJsZS4gT3ZlcmFsbCwgaGUncyBtdWNoIGJldHRlciBzb2xvIG1haW4gd2lzZSB0aGFuIGhlIHdhcyBpbiBzbTRzaCwgYnV0IHN0aWxsIHJldGFpbnMgaGlzIGFiaWxpdHkgdG8gYmUgYW4gYW1hemluZyBzZWNvbmRhcnkgZHVlIHRvIGJlaW5nIGEgc3VwZXIgZWFzeSB0byBsZWFybiBjaGFyYWN0ZXIgdGhhdCBjYW4gYmUgdXNlZCBhcyBhIGNvdW50ZXJwaWNrIGluIGNlcnRhaW4gdG9wL2hpZ2ggdGllciBtdXMuLiAKSUYgSSBoYXBwZW4gdG8gaGF2ZSBhIGJyZWFrIGluIG1hc3NhZ2VzIGFmdGVyIHRoZSBsYXRlIHBlcnNvbiBBTkQgSSBmZWVsaW5nIG5pY2UgKG1haW5seSBpZiB0aGUgbGF0ZSBwZXJzb24gaXMgZ2VudWluZWx5IHNvcnJ5IGFuZCBuaWNlKSB0aGFuIEkgcnVuIGludG8gbXkgb3duIGJyZWFrIHRpbWUgdG8gbWFrZSB1cCB0aGUgZGlmZmVyZW5jZSBidXQgbmV2ZXIgaW50byBzb21lb25lIGVsc2UgSSB3b3JrIGF0IGEgcmVzb3J0IHNvIGNsaWVudCByZXRlbnRpb24gaXNuIGFzIGltcG9ydGFudCBhcyBnaXZpbmcgZ29vZCBtYXNzYWdlcyB0byBhbGwgb2YgbXkgY2xpZW50IChpZiB5b3UgcnVuIDEwIG1pbnMgbGF0ZSBmb3Igb25lIHBlcnNvbiB0aGF0IG1lYW5zIHlvdSBnb2luZyB0byBydW4gMTAgbWlucyBsYXRlIGZvciBldmVyeSBjbGllbnQgZm9yIHRoZSByZXN0IG9mIHRoZSBkYXkgdW5sZXNzIHlvdSBjdXQgaW50byBzb21lb25lIHRpbWUpIHNvIEkgcmF0aGVyIG9uZSBjbGllbnQgYmUgdXBzZXQgYXQgdGhlaXIgb3duIG1pc3Rha2UgdGhhbiBoYXZlIDQgb3IgNSBwZW9wbGUgZmVlbCBqaXBwZWQuIApFRElUMjogdGhlc2UgYWxzbyBhcmVuIGFsbCB1cCB0byBkYXRlIGFzIGkgd29yayBmb3IgYSBzb21lb25lIHdobyBpIGtub3cgd2FzIHRlc3RlZCBpbiB0aGUgbWlkZGxlIG9mIGxhc3QgeWVhciBhbmQgdGhlIHJlcG9ydCBvbiBteSBsaW5rIGlzIHN0aWxsIGZyb20gMjAxNy4KQ2lkYWRlIGRlIEdvYSBCZWFjaCBhbmQgUmVzb3J0OiBJdCBob2xkcyB0aGlydHkgZml2ZSBTbG90IE1hY2hpbmVzLCBzd2ltbWluZyBwb29scyBhbmQgYSBob3RlbCB3aGljaCBjb25zaXN0cyBvZiAyMTAgcm9vbXMgYWx0b2dldGhlci4KSSByZW1pbmRlZCB0aGVtIEkgZ290IGEgcmF0aGVyIG9ic2NlbmUgcHVyY2hhc2UgaGlzdG9yeSwgSSBtYWtlIGEgYm9hdCBsb2FkIG9mIG1vbmV5IGhlcmUgaW4gamFwYW4sIGFuZCBJIGFpbiBnb2luIGFueXdoZXJlLiBPa2F5LCBzbyB0aGV5IGZ1ZGdlIHRoZSB2aXNhIG51bWJlci4gCkV2ZXJ5IGNoYXJhY3RlciBzdGF5cyByZWxldmFudCByaWdodCB1cCB0byB0aGUgZW5kIG9mIHRoZSBnYW1lLCBpdCBleHRyZW1lbHkgc2FkLCB3aGljaCBzaG93cyB0aGF0IEkgY2FyZWQgYWJvdXQgdGhlIGNoYXJhY3RlcnMgZHVyaW5nIHRoZSBnYW1lLCB0aGUgY2hhcmFjdGVyIGFyY3MgZm9yIGNlcnRhaW4gY2hhcmFjdGVycyBhcmUgYW1hemluZywgd2l0aCBSZXgsIFB5cmEgYW5kIE5pYSBoYXZpbmcgMyBvZiB0aGUgYmVzdCwgYW5kIHRoZSBzdG9yeSBpcyBwaGVub21lbmFsLiAKSGUgZG9lc24gd2FudCB0byBydXNoIGludG8gaXQgYW5kIG9ubHkgZGlzbGlrZXMgaXQgd2hlbiBJIHB1c2ggaGltIG9uIHRoZSBtYXR0ZXIgb3IgZ2V0IG1vcGV5IGFib3V0IHN0aWxsIGJlaW5nIG5vbiBlbmdhZ2VkLiBJIGNhbiBsaWUgdG8gbXlzZWxmIGVpdGhlciwgY2hpbGRyZW4gYXJlbiB0aGUgb25seSB0aGluZyB0aGF0IEkgY29uY2VybmVkIGFib3V0LiBJIGhhdmUgaGFkIGEgbWFqb3Igcm9sZSBpbiB0aGUgaGFyZCBwYXJ0IG9mIGhpcyBzdWNjZXNzIGFuZCBvdXIgbGlmZXN0eWxlIGFuZCBJIHdhbnQgdG8gYmUgd2l0aCBoaW0gZm9yIHRoZSBmdW4gcGFydC5JIHdvdWxkIGFsc28gYmUgY29uY2VybmVkIGFib3V0IHRoZSB3YXkgaGUgc3BlbmRpbmcgbW9uZXksIGJ1dCB0aGF0IGJlc2lkZXMgdGhlIHBvaW50LiAKU28gYSBmcmllbmQgZGVjaWRlZCB0byBmcmVlemUgQ2FjYW8gYW5kIFN0cmF3YmVycnksIGFuZCB0aGVuIHRhc3RlIHRoZW0gZnJvemVuIGFuZCB0aGVuIHRhc3RlIHRoZW0uIApJdCBoYXJkIGZvciB3b21lbiB0byBkbyBiZWNhdXNlIHdlIG9mdGVuIGhvbGQgaW4gb3VyIHR1bW1pZXMuIEkgZm91bmQgaXQgaGVscGZ1bCB0byBsYXkgb24gbXkgYmFjaywgcHV0IGEgMTAgcGxhdGUgb24gbXkgbG93ZXIgYmVsbHksIGFuZCBwcmFjdGljZSBicmVhdGhpbmcgaW50byBteSBzdG9tYWNoLiBUaGF0IG1ha2VzIGl0IGNsZWFyIHdoZW4geW91IGJyZWF0aGluZyBpbnRvIHlvdXIgYmVsbHkgdnMgeW91ciBjaGVzdC4gClRoZW4gdHdvIENoaW5lc2UgZ3V5cyBzaXQgZG93biBlaXRoZXIgc2lkZSBvZiBtZSBhbmQgcHVsbCBvdXQgMTAwMCBFdXJvcyBjaGlwcy4gVGhlIG9uZSB3aG8gY2FuIHNwZWFrIEVuZ2xpc2ggc2F5cyBoYXZlIG5ldmVyIHBsYXllZCBwb2tlciBiZWZvcmUgU29tZW9uZSBzYXlzIGEgbG90IG9mIG1vbmV5IGlmIHlvdSBoYXZlbiBwbGF5ZWQgcG9rZXIgYmVmb3JlIENoaW5lc2UgZ3V5IHJlcGxpZXMgbm90IGEgbG90IG9mIG1vbmV5IHRvIG1lIElESyBpZiBoZSByZWFsaXNlcyB3aGF0IGEgc2F2YWdlIHJldG9ydCB0aGlzIGlzLkZpcnN0IG9yYml0IG9uZSBvZiB0aGVtIGFyZ3VlcyB3aXRoIHRoZSBkZWFsZXIgYmVjYXVzZSBoZSB0aGlua3MgQTQgYmVhdHMgSkogb24gS0s0NzIuVGhlIGdhbWUgaXMganVzdCBhcyBnb29kIGFzIGkga25ldyBpdCB3b3VsZCBiZS4gCklmIHZpbGxhaW4gaGFzIEtLIG9yIEFBIGhlIGlzIHByb2JhYmx5IG5vdCBmb2xkaW5nIGhlcmUgb24gdGhlIHR1cm4gZXNwZWNpYWxseSBpZiBoZSBpcyBhIGxvb3NlIHBsYXllciBzbyBJIHdvdWxkIGJldCBmdWxsIHBvdC4gClllYWguIApTdWJ1cmIgdGhhdCBpcyBvbmx5IGFib3V0IDIwIG1pbGVzIGF3YXkgZnJvbSB0aGUgV2hpdGUgSG91c2UuIApPZiBjb3Vyc2UsIGdldHRpbmcgdHJlYXRlZCBieSBhbiBpbmRpdmlkdWFsIHdobyBoYXMgbm90IGdvbmUgdGhyb3VnaCBMZWFoeSdzIHRyYWluaW5nIGNvdXJzZXMgY291bGQgY2F1c2UgbW9yZSBoYXJtIHRoYW4gZ29vZC4KTm93IHdoYXQ/LiAKSSB3YXMgdGhlcmUuIFRoaXMgcG9pbnQgaXMgc29tZXRoaW5nIHRoZSBiaWcgd2lncyBuZXZlciBleHBlcmllbmNlIGFuZCB3aWxsIGdlbmVyYWxseSBjbGFzcyBkaXZpZGUgdGhlbXNlbHZlcyBhd2F5IGZyb20gdGhlIEZvciB3aGF0ZXZlciByZWFzb24sIEkgc3RpbGwgYmVsaWV2ZSB0aGF0IHRob3NlIHNlbGYgbG9hdGhpbmcgb3IgYm9hc3RmdWwvcHJpZGVmdWwgcGVvcGxlIGV2ZW50dWFsbHkgc2VlIHRoaW5ncyB0aGUgd2F5IHRoZXkgYXJlIHN1cHBvc2VkIHRvLCBnZW5lcmFsbHkgSSBwcmVzdW1lIGluIHZlcnkgb2xkIGFnZS4gCkZpcnN0IE5hdGlvbnMgcG9saXRpY3MgaGF2ZSBjcm9wcGVkIHVwIGluIGF0IGxlYXN0IG9uZSBwcmV2aW91cyBUaHVtcHMgbm92ZWwuIFRoaXMgdGltZSwgdGhvdWdoLCB0aGUgZm9jdXMgaXMgbWFpbmx5IG9uIHJlYWxpdHkgdGVsZXZpc2lvbiwgc3BlY2lmaWNhbGx5IGEgdHJ1ZSBjcmltZSBwcm9ncmFtIGNhbGxlZCBNYWxpY2UgQWZvcmV0aG91Z2h0LCB3aGljaCBmb2N1c2VzIG9uIHN1c3BpY2lvdXMgY29sZCBjYXNlcy4KSSBwdXQgYSBtb29kIHRyYWNraW5nIGFwcCBvbiBteSBwaG9uZS4gRW50ZXJlZCBteSBtZW50YWwgc3RhdGUgd2hlbiB3YWxraW5nIHVwLCBtaWQgZGF5IGFuZCBlbmQgb2YgZGF5ICh0aGUgYXBwIEkgdXNlZCB3YXMganVzdCBhIHNtaWxlLCBzdHJhaWdodCBmYWNlIG9yIGZyb3duKS4gVGhpcyBoYXZlIG1lIGRhdGEgdG8gdGVuZCBteSBtZW50YWwgc3RhdGUgYW5kIGV2ZW4gZ290IHRvIHRoZSBwb2ludCB3aGVyZSBJIGNvdWxkIChjYW4pIHByZWRpY3Qgd2hlbiBkZXByZXNzaW9uIHdpbGwgYmUgdGhlIHdvcnN0IHNvIEkgY2FuIHByZXBhcmUgYWhlYWQgb2YgdGltZS4KSW4gYWRkaXRpb24sIGhlIGRpc2NvdmVyZWQgaG93IHRvIG1ha2UgaGlzIG93biB0cmFkZW1hcmtlZCBmYWJyaWMgb3V0IG9mIGV1Y2FseXB0dXMgdHJlZXMuIAoiSXQgd2FzIHNlZW4gYXMgYSBsZWFkZXIsIGFsd2F5cyBkb2luZyBzb21ldGhpbmcgZGlmZmVyZW50LCIgTXJzIEh5ZGUgc2FpZC4gClBhcnQgb2Ygd2hhdCBJIG1pc3MsIGhvd2V2ZXIsIGFuZCB3aGF0IEkgZmVhciBiZWNvbWluZyBldmVuIG1vcmUgc2NhcmNlLCBpcyBub3QgdGhlIGJhc3Rpb25zIG9mIGN1bHR1cmUsIGJ1dCBzaW1wbHkgdW4gaGFycmFzZWQgbmF0dXJlLiAKRWxtZXQgcG9rZXIgcGxheWVyIEFuZHJldyBUb21raW5zb24gd2lucyB0cmlwIHRvIExhcyBWZWdhcwpMb25nIHdpbnRlciBldmVuaW5ncyB3aWxsIHNlZW0gc2hvcnRlciB3aGVuIHlvdSBwbGF5IGJyaWRnZSB3aXRoIGZyaWVuZHMuIEJlZ2lubmVycyBjbGFzc2VzIHN0YXJ0IG9uIFRodXJzZGF5IFNlcHRlbWJlciAxMSBhdCAxMGFtIGluIEZsYW5uZXJ5IEhvdGVsLCBEdWJsaW4gUm9hZCwgYW5kIGF0IFJhZnRlcnkncyBSZXN0LCBLaWxjb2xnYW4sIGF0IDcuMzBwbS4uIApUaGUgZmlyc3QgcGFydDogIkkgYW0gYSBsdWNreSBwbGF5ZXIuIiBJdCBzb3VuZGVkIGxpa2Ugbm9uc2Vuc2UsIHVudGlsIENhcm8gZXhwbGFpbmVkIGhlIHdhcyByaWZmaW5nIG9uIHRoZSBnYW1ibGluZyBhZGFnZSB0aGF0IHlvdSBzaG91bGQgbmV2ZXIgY29tcGxhaW4gYWJvdXQgInJ1bm5pbmcgYmFkIiAgIHN1c3RhaW5pbmcgYSBsb3Npbmcgc3RyZWFrICAgYmVjYXVzZSBtb3N0IHBlb3BsZSBkb24ndCBjYXJlIGFuZCB0aGUgZmV3IHdobyBkbyBhcmUganVzdCBnbGFkIGl0J3Mgbm90IGhhcHBlbmluZyB0byB0aGVtLgpHRFAgd291bGQgYmUgJDEuMiB0cmlsbGlvbiBsYXJnZXIsIGFuZCA3LjkgbWlsbGlvbiBtb3JlIEFtZXJpY2FucyB3b3VsZCBoYXZlIGpvYnMuIEFtZXJpY2FucyBoYXZlIGJlZW4gZGVuaWVkIHRoaXMgcHJvc3Blcml0eSBiZWNhdXNlIG9mIHVucHJlY2VkZW50ZWQgbGV2ZWxzIG9mIGdvdmVybm1lbnQgc3BlbmRpbmcsIGpvYiBraWxsaW5nIHJlZ3VsYXRpb24gYW5kIGNyb255IGNhcGl0YWxpc20gcGFydGlzYW4gcG9saWNpZXMgdGhhdCBsYXJnZSBtYWpvcml0aWVzIG9mIGJ1c2luZXNzIGxlYWRlcnMgaW4gdHdvIHJlY2VudCBzdXJ2ZXlzIChCdXNpbmVzcyBSb3VuZHRhYmxlIGFuZCBOYXRpb25hbCBGZWRlcmF0aW9uIG9mIEluZGVwZW5kZW50IEJ1c2luZXNzKSBzYXkgaHVydCB0aGVtLiAKVGhpcyBpcyBub3QgdGhlIGFjdHVhbCB3YWdlIHRob3VnaC4gSWYgdGhlIGFtb3VudCBvZiB0aXBzIGRvZXMgbm90IGVxdWFsIHRvIHRoZSBzdGF0ZSBtaW5pbXVtIHdhZ2UgdGhlIG93bmVyIHdvdWxkIGhhdmUgdG8ga2ljayBpbiB0aGUgZGlmZmVyZW5jZS4gQXQgbW9zdCBwbGFjZXMgdGhpcyBpcyBwcmV0dHkgcmFyZSBhcyB0aGUgdGlwcGVkIHdhZ2VzIHdvdWxkIHByb2JhYmx5IGJlIGFib3V0IHR3aWNlIHdoYXQgeW91IGFyZSBnZXR0aW5nIHBhaWQgYXMgYSBiYXJ0ZW5kZXIuIApIb3BlIHRoYXQgZ2F2ZSB5b3UgbW9yZSBpbmZvcm1hdGlvbi4gVGhpcyBtaWdodCBiZSB3cm9uZyBiZWNhdXNlIHNoZSdzIGEgc3VwZXJzdGFyIGFuZCB2ZXJ5IHJpY2ggb25lIHNvIGkgdGhpbmsgc2hlIGhhcyBjaGFuZ2VkIGl0LiBJdCBhbHNvIGluY2x1ZGVzd2hlcmUgeW91IGNhbiBhY3F1aXJlL2xpc3RlbiB0byB0aGVtLiBUb3RhbCBvbiB0aGlzIGxpc3Q6IDExMCAxIDE0KSAiQm9ybiBUaGlzIFdheSAoT3JpZ2luYWxBbGJ1bSkgIjogTWFycnkgVGhlIE5pZ2h0L0Jvcm4gVGhpc1dheS9Hb3Zlcm5tZW50IEhvb2tlci9KdWRhcy9BbWVyaWNhbm8vSGFpci9TY2hlaWUgLyBCbG9vZHkgTWFyeSAvIEJhZCBLaWRzL0hpZ2h3YXkgVW5pY29ybiAoUm9hZCBUbyBMb3ZlKS9IZWF2eU1ldGFsIExvdmVyL1lvIGFuZCBJL1RoZSBFZGdlIE9mIEdsb3J5LiAKTGlrZSB0aGUgQ29oZW4gdGVzdGltb255IHllc3RlcmRheSB3aGVuIGhlIHNhaWQgVHJ1bXAgZG9lcyBub3QgZGlyZWN0bHkgdGVsbCBwZW9wbGUgd2hhdCB0aGUgc3RhbmNlIGlzLCBldmVyeXRoaW5nIGlzIGp1c3QgaGludGVkIGJ1dCB5b3Ugc3VwcG9zZWQgdG8ga25vdyB3aGF0IGhlIG1lYW5zLiAKT3ZlcnZpZXcgZm9yIFBhbXVua2V5CkV2ZW4gdGhlIHdhbGxwYXBlciBuZWFyIHRoZSBiYXRocm9vbSwgZGVwaWN0aW5nIGV0Y2hpbmdzIG9mIHN1Ym1hcmluZXMsIGhhcyBhIG1lYW5pbmcuCktZLiBJJ20gY3VycmVudGx5IHNwZW5kaW5nICQxMjAgMTQwL3dlZWsgZm9yIDIgcGVvcGxlIChpbmNsdWRpbmcgdmFyaW91cyBob3VzZWhvbGQgbmVlZHMgbGlrZSB0b290aHBhc3RlIG9yIGNhdCBmb29kKS4gV2UgZWF0IG1vc3RseSBwYWxlbyAobWVhdCwgZnJ1aXQsIGFuZCB2ZWdldGFibGVzLCBuby9saXR0bGUgZ3JhaW4gYW5kIG5vIGRhaXJ5KSBhbmQgZWF0IG91dCBwcm9iYWJseSAyeC93ZWVrLiAodXN1YWxseSBvbiBhIHdlZWtlbmQgd2Ugd2lsbCBncmFiIGEgc2FuZHdpY2ggd2hlbiB3ZSBhcmUgb3V0IHJ1bm5pbmcgZXJyYW5kcyBhbmQvb3IgZWF0IG91dCBvbiBhIEZyaWRheSBuaWdodCkuClBhcmEgcGVtYWluIHlhbmcgcmVsYSBtZW1iZWxpIGluIGRlbmdhbiBpbmkgdHVtcHVrYW4gcGVuZGVrIGRhbiBzZWdlcmEgbWVuaW5nZ2Fsa2FuIGtldGlrYSBtZXJla2EgZ2FuZGEgdGVsYWggYWRhIGRpIHBva2VyIHNlbGFtYW55YS4gQW5kYSBtZW5lbXVrYW4gcGVtYWluIGluaSBkaSBrYXNpbm8sIGRhdGFuZyBkZW5nYW4gMjAgdGlyYWkgYmVzYXIgZGFuIGtlbXVkaWFuIG1lbmluZ2dhbGthbiBrZXRpa2EgbWVyZWthIGR1YSBrYWxpIGxpcGF0LCBkYW4gbWVyZWthIGp1Z2Egc2FuZ2F0IG1lbm9uam9sIGRhbGFtIHBva2VyIG9ubGluZS4uIApJZiBwbGF5ZXIgQSBoYXMgYmxhZGVkIGhpcyBidW5rZXIgc2hvdCB0aHJ1IHRoZSBncmVlbiwgdGhvc2Ugb3RoZXIgdGhyZWUgdGhhdCBhcmUgb24gdGhlIGdyZWVuIHNob3VsZCBvYnZpb3VzbHkgZ28gYWhlYWQgYW5kIHB1dHQgb3V0IHdoaWxlIHBsYXllciBBIHJha2VzLCBtb3ZlcyB0byBoaXMgYmFsbCBFQ1QuIFRoZSBvdGhlciBiaWcgdGhpbmcgdGhhdCBqYW1zIHRoZSBjb3Vyc2UgaXMgZ3JvdXBzIG5vdCB0ZWVpbmcgb2ZmIGF0IHRoZSBjb3JyZWN0IHRpbWUsIGVzcGVjaWFsbHkgaW4gY29tcHMuIApIb3cgdG8gUGxheSBPbmxpbmUgUG9rZXIgZnJlZQpCZWkgZGVuIFdvcmt3ZWFyIEhlcnN0ZWxsZXJuIGZpbmRldCBtYW4gYXVjaCBzY2huZWxsIHJhdXMsIHdvIGRpZSBTYWNoZW4gcHJvZHV6aWVydCB3ZXJkZW4uIENhcmhhcnR0IGlzdCB6d2VpZ2V0ZWlsdDogRWluZSBhbWVyaWthbmlzY2hlIEFidGVpbHVuZyB1bmQgZWluIGluIERldXRzY2hsYW5kIHByb2R1emllcmVuZGVyIExpemVuem5laG1lci4KQm90aCBtaXNzZWQuQW5kIGluc3RlYWQgb2YgY2VsZWJyYXRpbmcgaGVyIG93biB2aWN0b3J5LCBCZXJuYXJkIHdhdGNoZWQgU3dlZGVuJ3MgQW5ldHRlIE5vcmJlcmcganVtcCB0byB0aGUgdG9wIHN0ZXAgb2YgdGhlIHBvZGl1bSBhZnRlciBzdGVhbGluZyBhIDcgNiB2aWN0b3J5IHRvIGRlZmVuZCB0aGUgZ29sZCBtZWRhbCBzaGUgd29uIGZvdXIgeWVhcnMgYWdvIGluIFR1cmluLiJJIGhhZCB0d28gY2hhbmNlcyB0byB3aW4gdGhhdCBnYW1lLCIgc2FpZCBhbiBlbW90aW9uYWwgQmVybmFyZCBhZnRlcndhcmQuICJNeSB0ZWFtIGdhdmUgdGhlbSB0byBtZSBpbiAxMCBhbmQgMTEsIGFuZCB5b3UgY291bGRuJ3QgYXNrIGZvciBhbnl0aGluZyBtb3JlLiAKSXQncyBqdW5rIHNjaWVuY2UuIEl0J3MgdGhlIHNjaWVudGlmaWMgZXF1aXZhbGVudCBvZiBmYWtlIG5ld3MsIGFuZCB0aGVyZSdzIHNvIG1hbnkgcGVvcGxlIHdobyBoYXZlIHJ1c2hlZCB0byBwYXNzIGp1ZGdlbWVudCBvbiBpdCBhbmQgYXJlIGV4aGF1c3RpbmcgaXQuIEp1c3QgcmVhZCB0aHJ1IHRoZSBjb21tZW50cyEgSXQncyB0aGUgZXBpdG9tZSBvZiBjdXJyZW50IHN0YXRlIG9mIGNsaW1hdGUgc2NpZW5jZS5UaGVyZSdzIHBsZW50eSBvZiBwZW9wbGUgd2hvIGFyZSBwcm9taW5lbnQgc2NpZW50aXN0cyB3aG8gaGF2ZSBiZWVuIGNsaW1hdG9sb2dpc3RzIHRoZWlyIGVudGlyZSBwcm9mZXNzaW9uYWwgbGl2ZXMgd2hvIGFyZSBzYXlpbmcgc29tZXRoaW5nIHZlcnkgZGlmZmVyZW50IHRoZW4gdGhlIGhhbmQgc2VsZWN0ZWQgQ0FHVyBjcm93ZCBhdCBOT0FBLCBOQVNBLCBhbmQgd29yc3Qgb2YgYWxsIElQQ0MuIApXaGVuIEkgcGxheWVkIDEwTkwsIEkgd2FzIGF0ICs5LjVCQi8xMDAgb3ZlciAxNDVLIGhhbmRzLiBFdmVuIHRob3VnaCBJIG5ldmVyIHJlYWxseSB3ZW50IG9uIGEgcmVhbCBkb3duIHN3aW5nLCBJIGhhZCBhIDIwSyBoYW5kcyBicmVhayBldmVuIHN0cmV0Y2guIApJIGhlcmUgY29tbXVuaWNhdGluZyB0byBwZW9wbGUgb24gUmVkZGl0LCB0aGF0IGFscmVhZHkgbWFrZXMgbWUgbW9yZSBmb3J0dW5hdGUgdGhhbiBwcm9iYWJseSA1MCUgb2YgaHVtYW5pdHkuIEkgaGF2ZSBubyByaWdodCB0byBjb21wbGFpbiBtdWNoIG90aGVyIHRoYW4gYWJvdXQgdGhlIGh1bWFuIGNvbmRpdGlvbiBpdHNlbGYgYmVjYXVzZSBpdCBpcyBzb21ldGhpbmcgd2UgYWxsIHNoYXJlOyBhbHRob3VnaCwgbWFueSBwZW9wbGUgcHJvYmFibHkgZG9uIGhhdmUgdGhlIGx1eHVyeSB0byByZWFsbHkgcnVtaW5hdGUgb24gc3VjaCB0aGluZ3MsIGVpdGhlci4KQm91bnRpZXMgZm9yIHBlb3BsZSB3aG8gZGVjaWRlIHRoZXkgd2FudCB0byBiZSBsaWtlIEJvYmEgRmV0dC4gR28gaW50byBzb21lIGJhciBvciBhcHByb3ByaWF0ZSBhcmVhLCBhbmQgdGhlcmUgYSBzY3JlZW4gdGhhdCBkaXNwbGF5cyBhIHBpY3R1cmUgb2YgYm90aCB1bmlxdWUsIGFuZCBkeW5hbWljIHByb2ZpbGVzIG9mIE5QQ3Mgd2hvIGFyZSB3YW50ZWQsIGFuZCB0aGVpciBwcmljZS4gWW91IGNhbiB3YWxrIHVwIGFuZCBhY2NlcHQgb3IgZGVjbGluZS4gV291bGQgYWxzbyBiZSBjb29sIGlmIGl0IHNob3dlZCB0aGVpciB0aHJlYXQgbGV2ZWwgd2hpY2ggd291bGQgZGV0ZXJtaW5lIGhvdyBkaWZmaWN1bHQgdGhleSBhcmUuIFdvdWxkIGJlIG5pY2UgdG8gYmUgYWJsZSB0byBicmluZyB0aGVtIGJhY2sgYWxpdmUgdG9vIGlmIHlvdSBjb3VsZC4gSSB0aGluayBjb21wdXRlciBzY3JlZW5zIGNvdWxkIGJlIGEgdXNlZnVsIHRvb2wgdGhhdCBhbHNvIHNlbnNpY2FsIGluIHVuaXZlcnNlIGZvciBkeW5hbWljIHF1ZXN0cy4gTm90IGxpbWl0ZWQgdG8gYm91bnRpZXMgZWl0aGVyLiAoMDA6MjAgb253YXJkcylCYXJlbHkgdHJhaW5lZCBMZWlhIGlzIHNob3Qgb3V0IGludG8gc3BhY2UgaW4gYSBsYXJnZSBleHBsb3Npb24sIGlzIHVuY29uc2Npb3VzIGFuZCBmbG9hdHMgYWxvbmcgd2l0aCB0aGUgUmFkZHVzIHdoaWxlIHRoZSBGTyBUSUUgZmlnaHRlcnMgbGVhdmUsIGFuZCB5ZXQgaXMgYWJsZSB0byByZWdhaW4gY29uc2Npb3VzbmVzcyBhZnRlciBzb21lIHRpbWUgYW5kIHVzZSB0aGUgZm9yY2UgdG8gcHVsbCBoZXJzZWxmIGJhY2sgdG8gdGhlIHNoaXAsIGV2ZW4gbWFuYWdpbmcgdG8gZG9kZ2UgdGhlIGV4cGxvc2lvbiBkZWJyaXMgYXJvdW5kIHRoZSBzaGlwLiAKUnBvbmRyZSAgY2UgY29tbWVudGFpcmUgVGhvbWFzCkluc3RydWN0aW9ucyAxIERldGVybWluZSB5b3VyIGhvdXJseSB3YWdlIHJhdGUgaWYgeW91IGRvbid0IGtub3cgaXQgYnkgd291bGQgbGlrZSB0byB0YWxrIGFnYWluIGFib3V0IHRoZSBleHRlbmRlZCB2YWNhdGlvbiB0aW1lLiAKU3Rha2VzIGFyZSByYWlzZWQgaW4gSG9yZ2FuCkdldHRpbmcgdG8ga25vdyBBYmVybmF0aHkgdGhlIHBybwpOb3VzIHJlY2hlcmNob25zIGRlcyBwYXJ0aWNpcGFudHMgcG91cmNvbXBsdGVybGUgZ3JvdXBlIGRlcyBmdXR1cnMgaGFiaXRhbnRzLgpMaWNlbnNpbmcgYW5kIENlcnRpZmljYXRpb24gTW9zdCBzdGF0ZXMgcmVxdWlyZSBsaWNlbnNpbmcgZm9yIGNsaW5pY2FsIG1hc3NhZ2UgdGhlcmFwaXN0cy4gRXZlbiBpZiBhIHN0YXRlIGRvZXNuJ3QgcmVxdWlyZSBsaWNlbnNpbmcsIGEgbXVuaWNpcGFsaXR5IG9yIG90aGVyIGxvY2FsIGFnZW5jeSBtaWdodC4gVGhlIGxpY2Vuc2luZyByZXF1aXJlbWVudHMgdmFyeSBieSBzdGF0ZSwgc28gY2hlY2sgdGhlbSBiZWZvcmUgZW5yb2xsaW5nIGluIGEgbWFzc2FnZSBzY2hvb2wuIApXaGVuIGFuIGVub3Jtb3VzIG1hbiB3aXRoIGNhbHZlcyAiYXMgdGhpY2sgYXMgdHJlZSB0cnVua3MiIHNlbGVjdGVkIE11cmFkIGFzIGhpcyBzbGF2ZSwgc2hlIHNjcmVhbWVkIGFuZCB0cmllZCB0byBwdWxsIGF3YXkuICJIaXMgZXllcyB3ZXJlIHN1bmsgZGVlcCBpbnRvIHRoZSBmbGVzaCBvZiBoaXMgd2lkZSBmYWNlIEhlIGRpZG4ndCBsb29rIGxpa2UgYSBtYW4gICBoZSBsb29rZWQgbGlrZSBhIG1vbnN0ZXIuIiBXaGVuIHNoZSBzcGllZCBhIHNraW5uaWVyIG1hbidzIGNhbHZlcyBmcm9tIGhlciBwbGFjZSBvbiB0aGUgZ3JvdW5kLCBzaGUgYmVnZ2VkIGhpbSB0byB0YWtlIGhlciwgaG9waW5nIGhpcyBzbGlnaHQgc2l6ZSBtaWdodCBzYXZlIGhlci4gIlNoZSdzIG1pbmUsIiB0aGUgc2tpbm55IG1hbiB0b2xkIHRoZSBsYXJnZXIgbWFuLiAKMS4gClRoaXMgaXMgd2h5IEkgYWx3YXlzIHRyeSB0byBjYXV0aW9uIHBlb3BsZSB0byByZWFsbHkgdGhpbmsgdGhyb3VnaCBnZXR0aW5nIGEgc2VydmljZSBkb2cgdG8gd29yayBpbiBwdWJsaWMgZm9yIGlzc3VlcyByZWxhdGVkIHRvIGFueGlldHkuIApMaWtlIFRNVCwgdGhlIEtpbmcgb2Z0ZW4gc2F5cyBjcmF6eSB0aGluZ3MgaW4gaW50ZXJ2aWV3cyB0aGF0IG1ha2UgeW91IHNoYWtlIHlvdXIgaGVhZCBhbmQgdGhpbmsgV1RGIGlzIHRoaXMgZ3V5IG9uLiBKdXN0IGxpa2UgZmFucyBwdWxsZWQgdGhlaXIgaGFpciBvdXQgbGlzdGVuaW5nIHRvIEZsb3lkIG1ha2UgZXhjdXNlIGFmdGVyIGV4Y3VzZSBhYm91dCBmaWdodGluZyBoaXMgY29udGVtcG9yYXJ5LCBNYW5ueSBQYWNtYW4uIEtoYW4ncyBkb2luZyB0aGUgc2FtZSB0byB0aGUgQnJpdGlzaCBmYW4gYmFzZSBieSBtYWtpbmcgS2VsbCBCcm9vayBqdW1wIHRocm91Z2ggaG9vcHMgdG8gZWFybiBhIGZpZ2h0LiAKUmF0aGVyIGEgZmV3IG9mIHRoZW0gYXJlIHNpbXBseSBjcmFwcy4gVGhhdCdzIHdoeSB5b3UgaGF2ZSB0byBiZSByZWFsbHkgY2F1dGlvdXMgd2hpbGUgcGlja2luZyB1cCBwcm9kdWN0cyBmb3IgeW91cnNlbGYuIApJdCBub3RoaW5nIHRvIGJlIGFzaGFtZWQgb2YsIGFuZCBub3RoaW5nIHRvIGJlIHdvcnJpZWQgYWJvdXQgZWl0aGVyOiBBc3N1bWluZyB5b3UgYmVlbiBpbiBhIG5vcm1hbGx5IHBhaWQgam9iLCB5b3VyIGluY29tZSB0YXhlcyB3b3VsZCBoYXZlIGJlZW4gZGVkdWN0ZWQgZnJvbSB5b3VyIHBheWNoZWNrczsgaXQgdmVyeSB1bmxpa2VseSB0aGF0IHlvdSBvd2UgYW55IG1vbmV5IGFuZCBpbiBmYWN0IGl0IHF1aXRlIGxpa2VseSB0aGF0IHRoZSBnb3Zlcm5tZW50IG93ZXMgeW91IHNpbmNlIG1vbmV5LiAKVG8gYmUgaG9uZXN0LCA0IGR1ZGVzIGlzIGdvaW5nIHRvIGJlIHRvdWdoIGZvciBhIGNsdWI7IHlvdSBhcmUgcHJvYmFibHkgYmV0dGVyIHNwbGl0dGluZyBpbnRvIHR3byBncm91cHMgKHN1Y2tzLCBJIGtub3cpLCBvciB5b3UgZ3V5cyBmaW5kIGEgdGlja2V0ZWQgZXZlbnQsIGFuZCB0aGVuIGFzIGxvbmcgYXMgeW91IGluIHJlYXNvbmFibGUgc2hhcGUgdGhlbiB5b3UgZ2V0dGluZyBpbi4gUHJvYmFibHkgdGhlIGxhdHRlciBpcyB0aGUgd2F5IHRvIGdvIGZvciB5b3UgZ3V5cy4gQ2hlY2sgUmVzaWRlbnQgQWR2aXNvciBhbmQgc2VlIGlmIGFueSBESnMgeW91IGxpa2UgYXJlIHBsYXlpbmcgdGlja2V0IGV2ZW50cyBpbiBCZXJsaW4sIGFuZCB0aGVuIGJ1eSB0aGUgdGlja2V0cy4gIkxhZHMgb24gdG91ciIgZG9lc24gaGF2ZSBhIGdyZWF0IHJlcHV0YXRpb24gaGVyZSAgIEkgbWVhbiBub3QgeW91ciBndXlzIGZhdWx0LCBpdCBqdXN0IHRoYXQgQmVybGluIGlzIGEgcG9wdWxhciBjaXR5IGZvciB2YWNhdGlvbnMsIGFuZCB0aGVyZSBhcmUgYWxvdCBvZiBiYWQgdG91cmlzdHMgZnJvbSBhbGwgb3Zlci4KQmVnaW5uZXIgQmFzaWNzIGZvciBPbmxpbmUgUG9rZXIKSSBkb24ga25vdyBpZiB0aGlzIGlzIGNvbWluZyBvZmYgYW5ncnksIEkgbm90IG1hZCBhbmQgSSB3b3VsZCBiZSBtb3JlIG9rYXkgZm9yIGRlYnQgZm9yZ2l2ZW5lc3Mgb2YgaXQgY2FtZSB3aXRoIHRoZSBwcm9taXNlIG9mIGZyZWUgZWR1Y2F0aW9uIGZvciBldmVyeW9uZSBlbHNlLiBUaGUgcHJvYmxlbSBpcyBjb2xsZWdlcyBjYW4gY29udGludWUgdG8gcmFpc2UgdGhlaXIgcHJpY2VzIGNoYXJnZSBvdXIgZ292ZXJubWVudCBvdXRyYWdlcyBmZWVzIHRvIGVkdWNhdGUgdGhlIHBlb3BsZS4uIApIZSB3YXMgZHJpdmVuIGF3YXkgaW4gdGhlIGZyb250IHBhc3NlbmdlciBzZWF0IG9mIGEgd2hpdGUsIDIwMTQgQmVudGxleSB0aGF0IHdhcyBsYXRlciBwdWxsZWQgb3ZlciBieSBhIGNvcCB3aG8gaWRlbnRpZmllZCBLcmFmdCBhcyB0aGUgcGFzc2VuZ2VyLCBjb3VydCBwYXBlcnMgc2F5LgpUbyBhbnN3ZXIgdGhlIHF1ZXN0aW9uLCBMZXZpdHQgYW5kIE1pbGVzIGxvb2tlZCBhdCBpbmZvcm1hdGlvbiBtYWRlIGF2YWlsYWJsZSBieSB0aGUgMjAxMCBXb3JsZCBTZXJpZXMgb2YgUG9rZXIuIFRoZSBhbm51YWwgZXZlbnQsIGhlbGQgaW4gTGFzIFZlZ2FzLCBpbmNsdWRlcyA1NyB0b3VybmFtZW50cywgMzIsMDAwIHBhcnRpY2lwYW50cyBhbmQgJDE4NSBtaWxsaW9uIHByaXplIG1vbmV5LCBpbmNsdWRpbmcgdGhlICJNYWluIEV2ZW50LCIgaW4gd2hpY2ggdGhlIGdyYW5kIHdpbm5lciBlYXJucyBhbG1vc3QgJDkgbWlsbGlvbi4KNyBIYWJpdHMgVGhhdCBIYXJtIFlvdXIgQ3JlZGliaWxpdHkKVGhlcmUgaXMgYSByZWFzb24gd2h5IHJlcHVibGljYW5zIGxvdmUgdGhlIHNob3cgb2YgYSBwcmVzaWRlbnQgZmx5aW5nIG9udG8gdGhlIFVTUyBMaW5jb2xuLCBhbmQgYW5ub3VuY2UgaW4gZnJvbnQgb2YgYSBtaXNzaW9uIGFjY29tcGxpc2hlZCBiYW5uZXIgdGhhdCBoZSBoYWQganVzdCBmcmVlZCB0aGUgaXJhcWkgcGVvcGxlLiBXaGlsZSBkZW1zIGFiaG9yIHRoYXQga2luZCBvZiBidWxsc2hpdC4KR3JlYXQgam9iIFJpY2hhcmQuIEZvciB0aG9zZSB3YW50aW5nIHRvIGRlYmF0Y2ggdXNpbmcgdGhlIFhtbFBvbGxpbmcgbWVjaGFuaXNtIG9mIHRoZSBXQ0YgU1FMIGFkYXB0ZXIsIGl0IHdpbGwgbm90IGJlIGFzIHNpbXBsZS4gWW91IHdpbGwgcHJvYmFibHkgZW5kIHVwIHJlc29ydGluZyB0byB0aGUgZGViYXRjaGluZyBtZXRob2Qgb2YgdGhlIG5hdGl2ZSBTUUwgYWRhcHRlciBtZWFuaW5nIHlvdSBoYXZlIHRvIGNyZWF0ZSBhIHNlY29uZCBzY2hlbWEgZm9yIHRoZSBib2R5IHRvIHRoZSBkZWJhdGNoZWQgcmVjb3JkIG9mIHRoZSBlbnZlbG9wZS4KVGhlIGdhbWUgYm9hcmQgaXMgYW5vdGhlciBkaWZmZXJlbmNlIGJldHdlZW4gYmluZ28gYW5kIFBvIEtlIE5vLiBJbiBiaW5nbywgdGhlIHdvcmQgJ2JpbmdvJyBpcyBzcGVsbGVkIG91dCBhY3Jvc3MgdGhlIHRvcCBvZiB0aGUgYm9hcmQgd2l0aCBmaXZlIHJvd3MgYW5kIGZpdmUgY29sdW1ucyBvZiBudW1iZXJzIHVuZGVyIHRoZSBzcGVsbGVkIG91dCB3b3JkLiBJbiBQbyBLZSBObywgaG93ZXZlciwgdGhpcyBpcyBub3QgdGhlIGNhc2UuIApNZWFud2hpbGUsIHRoZSBmb3VuZGF0aW9uIGFwcGVhcnMgdG8gaGF2ZSBiZWVuIHBheWluZyByZW50IHRvIFdhcm5lJ3MgcGFyZW50cyBhbmQgYSBjb21wYW55IGFzc29jaWF0ZWQgd2l0aCBvbmUgb2YgdGhlIGRpcmVjdG9ycyBvZiB0aGUgY2hhcml0eS4KU29ycnkgdG8gaGVhciBhYm91dCB5b3VyIGRpc2FwcG9pbnRpbmcgZXhwZXJpZW5jZS4gSSB3YXMgYXQgYSBzaG93IHdoZXJlIEdvZHNtYWNrIG9wZW5lZCBmb3IgTWV0YWxsaWNhLiAKU2luY2UgeW91IGRvbiBrbm93IHdoYXQgeW91IGRvaW5nIHdpdGggdGF4IGZpbGluZyBhbmQgeW91IGNhbiBhZmZvcmQgYSBwcm9mZXNzaW9uYWwsIEkgc3VnZ2VzdCBjaGVja2luZyB0aGUgQ1JBIHdlYnNpdGUgZm9yIGZyZWUgdGF4IGNsaW5pY3MuIFRoZXJlIGFyZSBhIGh1Z2UgbnVtYmVyIG9mIHRoZXNlIHdoZXJlIHZvbHVudGVlcnMgaGVscCBwZW9wbGUgdG8gZmlsZSB0aGVpciByZXR1cm5zLCBhbmQgSSBzdXJlIHRoZXJlIHdpbGwgYmUgb25lIG5lYXJieSBmb3IgeW91LiBUYWtlIGV2ZXJ5dGhpbmcgeW91IGhhdmUgKGJhbmsgc3RhdGVtZW50cywgcGF5IHN0dWJzLCBhbnl0aGluZyB5b3UgY2FuIGdldCBmcm9tIHRoZSBDUkEgd2Vic2l0ZSwgYW5kIG9mIGNvdXJzZSBhbnkgdGF4IGZvcm1zIHlvdSBiZWVuIGdpdmVuKSBhbmQgc29tZW9uZSB3aWxsIGhlbHAgeW91IHRvIGdvIHRocm91Z2ggeW91ciBwYXN0IHllYXIgcmV0dXJucyBhbmQgZ2V0IGV2ZXJ5dGhpbmcgdXAgdG8gZGF0ZS4uIApNb3N0IG9mIG1pbmUgaGF2ZSBjb21lIGZyb20gS29obCAoQmF0bWFuLCBTdGFyIFdhcnMsIERvY3RvciBXaG8pIGJ1dCBJIGFsc28gaGF2ZSBzb21lIGZyb20gcmFuZG9tIHBsYWNlcyBvbmxpbmUgKEZ1dHVyYW1hLCBTdXBlcm5hdHVyYWwpLiAKV2UgbmVlZCBnb29kIGFuZCBhYmxlIG1pbGl0YXJ5IGNvbW1hbmRlcnMuIEJ1dCB3ZSd2ZSBoYWQgZW5vdWdoIG9mIG1pbGl0YXJ5IHNhdmlvdXJzIGFuZCBjYW4gZG8gd2l0aG91dCBtb3JlIGluIHRoZSBmdXR1cmUuIEFuZCwgcGVyaGFwcywgd2UgY2FuIGRvIHdpdGhvdXQgYXJteSBjaGllZnMgdHJ5aW5nIHRvIGJlY29tZSBGIDE2IGFjZXMuIApJdCB0aGUgYmFzZXN0LCBtb3N0IHByaW1hbCBhbmltYWwgYnVsbHNoaXQgaW1wdWxzZXMgb25lIGNhbiBmcmVlbHkgcGFydGljaXBhdGUgaW4gd2hpbGUgbGl2aW5nIGluIGEgc29jaWV0eS4gCkhlYWx0aCBpbnN1cmFuY2UgY2FuIGJlIGEgYmlnIGNvc3QgaWYgeW91IG5vdCBjb21pbmcgZnJvbSBhIGNvdW50cnkgdGhhdCBjb3ZlcnMgYWxsIG9mIGl0cyBjaXRpemVucy4gCldoZW4gc2VsZWN0aW5nIHNvbWV3aGVyZSB0byBiZWdpbiBwbGF5aW5nIGF0IG5vIGNvc3QsIGl0IHBheXMgdG8gbG9vayBpbnRvIHdoYXQgYmVuZWZpdHMgYXJlIG9mZmVyZWQgdG8gdGhlIHBsYXllciBieSB0aGUgcG9rZXIgcm9vbXMuIFNvbWUgb2ZmZXIgcGxheSBtb25leSB0b3VybmFtZW50cyBvbiB0b3Agb2YgcmVndWxhciB0YWJsZSBwbGF5IHdoaWNoIGNhbiBoZWxwIHRvIGxlYXJuIGFuZCBwcmFjdGljZSB5b3VyIHRvdXJuYW1lbnQgc3RyYXRlZ2llcy4gSWYgeW91IGhhdmUgbmV2ZXIgcGxheWVkIGJlZm9yZSwgbWFrZSBzdXJlIHRoZXkgaGF2ZSB0dXRvcmlhbHMgZm9yIHRoZSBkaWZmZXJlbnQgdHlwZXMgb2YgcG9rZXIsIGEgIkhvdyB0byBQbGF5IFBva2VyIEdhbWVzIiBzZWN0aW9uIGluIGFkZGl0aW9uIHRvIGEgcmFua2luZyBvZiBwb2tlciBoYW5kcy4gSXQncyBhbHNvIGEgZ29vZCBpZGVhIHRvIGdvIG92ZXIgdGhlIHN5c3RlbSByZXF1aXJlbWVudHMgc28gdGhhdCB3aGVuIHlvdSBkb3dubG9hZCB0aGVpciBzb2Z0d2FyZSBpdCB3aWxsIHdvcmsgb24geW91ciBjb21wdXRlci4gQWxzbyBsb29rIGludG8gc2lnbiB1cCBib251c2VzLCByZWFsIG1vbmV5IGFjY291bnQgZnVuZGluZyBtZXRob2RzLCBwbGF5ZXIgcG9pbnQgcHJvZ3JhbXMgYW5kIHRoZSB2YXJpZXR5IG9mIHJlYWwgbW9uZXkgdG91cm5hbWVudHMgb2ZmZXJlZCBzbyB0aGF0IHlvdSBhcmUgZmFtaWxpYXIgd2l0aCB0aGVtIHdoZW4geW91IGFyZSByZWFkeSB0byBiZWdpbiBwbGF5aW5nIGZvciBjYXNoLiBTb21lIHBva2VyIHJvb21zIHdpbGwgb2ZmZXIgZXh0cmEgcmVhbCBtb25leSBzaWduIHVwIGluY2VudGl2ZXMgdG8gdGhlaXIgZnVuIHBsYXllcnMganVzdCB0byBtYWtlIHN1cmUgdGhlaXIgY3VzdG9tZXJzIHJlbWFpbiBwbGF5aW5nIHdpdGggdGhlbS4gIkJhZCBCZWF0IEphY2twb3RzIiBhcmUgYmVpbmcgb2ZmZXJlZCBtb3JlIGFuZCBtb3JlLCAoQSBiYWQgYmVhdCB0YWtlcyBwbGFjZSB3aGVuIGEgcGxheWVyIGhhcyBhIGdyZWF0IGhhbmQgbGlrZSBmb3VyIDgncyB3aGljaCB3YXMgYmVhdGVuIGJ5IGEgZXZlbiBiZXR0ZXIgaGFuZCBsaWtlIGZvdXIgQWNlcy4gVGhlIGxvc2VyIGhhcyByZWNlaXZlZCBhIGJhZCBiZWF0LiksIGJ1dCB0aGVyZSBhcmUgZGlmZmVyZW5jZXMgc28gdGFrZSB0aW1lIHRvIGJlY29tZSBrbm93bGVkZ2VhYmxlIG9uIHRoZXNlIGFzIHdlbGwuIFRoZXkgY2FuIHJhbmdlIGZyb20gYSBmbGF0IGFtb3VudCBvZiBtb25leSBmb3IgdGhlIHBlcnNvbiByZWNlaXZpbmcgdGhlIGJhZCBiZWF0IHRvIG90aGVycyB3aGljaCBoYXZlIGEgcHJvZ3Jlc3NpdmUgamFja3BvdCB0aGF0IGNhbiBydW4gaW50byB0aGUgdGVucyBvZiB0aG91c2FuZHMuClVuIGVudmlyb25uZW1lbnQgZXhjZXB0aW9ubmVsCk1hbiBmcmV1dCBzaWNoIGF1ZiBob2Noa2FydGlnZSAgYXVzIGRlciBnYW56ZW4gV2VsdC4uIAozOCA0NSkgQmFkUm9tYW5jZS9BbGVqYW5kcm8vTW9uc3Rlci9TcGVlY2hsZXNzL0RhbmNlIEluIFRoZSBEYXJrL1RlbGVwaG9uZShGZWF0LiAKSXQgd2FzIHZlcnkgbXVjaCBhICJ5b3VyIHR1cm4sIG15IHR1cm4iIHR5cGUgb2YgdGVhbS5pIHRoaW5rIEtEcyBkZXBhcnR1cmUgaGVscGVkIFJ1c3MgZGV2ZWxvcCBhbmQgbWF0dXJlIGluIGEgd2F5IG5vdGhpbmcgZWxzZSBjb3VsZCBiZWNhdXNlIGhlIHdhcyBmaW5hbGx5IHRoZSB1bmRpc3B1dGVkIDFBIGJ1dCB3aGF0IGRpZCBoZSBkbz8gZnVja2luZyBhdmVyYWdlIGEgdHJpcGxlIGRvdWJsZSBmb3IgYWxtb3N0IDIgc2Vhc29ucyBub3csIGNvbXBsZXRlbHkgc2hlZGRpbmcgdGhlICJzZWxmaXNoIiBsYWJlbCBpIGFuZCBpJ20gc3VyZSBtYW55IG90aGVycyBnYXZlIGhpbSBhcyB3ZWxsLCB3aGljaCBsZWFkcyB0byB0aGUgY29oZXNpdmVuZXNzIHdpdGggUEcgbm93LiAKQW4gb2RlIHRvIHRoZSBNYXN0ZXIgYXJ0aXN0IFJlbXJhbmR0LCB0aGlzIGNvbGxlY3Rpb24gYnJvdWdodCB2ZXRlcmFuIGRlc2lnbmVyIE5pbG9mZXIgU2hhaGlkIGJhY2sgdG8gdGhlIHJ1bndheSBhZnRlciBmaXZlIHllYXJzIGFuZCBvbnRvIGEgZmFzaGlvbiB3ZWVrIHJ1bndheSBpbiBQYWtpc3RhbiBmb3IgdGhlIHZlcnkgZmlyc3QgdGltZS4gSXQgd2FzIGEgZGlzcGxheSBvZiB3aGF0IE5pbG9mZXIgaXMgcmVub3duZWQgZm9yOiBjcmFmdHNtYW5zaGlwIHRoYXQgYm9yZGVycyBvbiBjb3N0dW1lLiAKVGhleSByZWNlaXZlIGhhbGYgb2YgdGhlIG1vbmV5IGluIGNhc2ggYW5kIHRoZSBvdGhlciBoYWxmIGluIHNoYXJlcy4uIApMYSBmYW9uIGRvbnQgaWwgc2UgbWV0IGF1IHNlcnZpY2UgZXQgYWNjb21wYWduZSBsYSBuYXR1cmUsIGVuIGludGVydmVuYW50IGxlIG1vaW5zIHBvc3NpYmxlLCBzYW5zIGFqb3V0IGV4dHJpZXVyLCBlc3QgaW1wcmVzc2lvbm5hbnRlLiAKSG93IG1hbnkgY2FzaW5vcyBhcmUgdGhlcmUgYW5kIGRvIHRoZXkgaGF2ZSBwb2tlciBjYXNoIGdhbWVzPwpQcmV2ZW50aW9uIGluaXRpYXRpdmVzIGFyZSBjcml0aWNhbC4gQ291bmNpbHMgYXJlIHJlc2lzdGluZyBuZXcgYXBwbGljYXRpb25zIG1vcmUgdmlnb3JvdXNseSB0aGFuIGV2ZXIsIGJ1dCBsYXdzIG5lZWQgdG8gY2hhbmdlIHRvIGdpdmUgY29tbXVuaXRpZXMgYSBncmVhdGVyIHNheSBhYm91dCB3aGVyZSBwb2tlciBtYWNoaW5lcyBhcmUgbG9jYXRlZC4gCkhlbGxvIEplc3NlIEkgcmVndWxhcmx5IHJlYWQgeW91ciBwb3N0cyBhbmQgdGhvcm91Z2hseSBlbmpveSB0aGVtLiBCdXQgc29vbiBlbm91Z2gsIHRoaXMgbGl0dGxlIGNhbXBhaWduIHdoZXJlIGdpcmxzIHN3ZWFyIG9mZiBzZXggd2l0aCBndXlzIHRha2VzIG9mZiBsaWtlIHdpbGRmaXJlLiAKU29tZW9uZSBwbGVhc2UgY29ycmVjdCBtZSBpZiBJIHdyb25nLCBidXQgSSB0aGluayBJIGhlYXJkIHRoYXQgcGVyZmVjdCBleHRyYWN0aW9uIGludG8gYSBwdXJlIGZhdCBsaWtlIGNsYXJpZmllZCBidXR0ZXIgb3IgY29jb251dCBvaWwgY2FuIG9ubHkgZXh0cmFjdCBhYm91dCA2MCA3MCUgb2YgdGhlIFRIQy4gCk15TG92ZUhhbW1lciAgMSBwb2ludCAgc3VibWl0dGVkIDEgZGF5IGFnbwpJbWFnaW5lIGEgc2l0ZSBsaWtlIG9wZW5wb3dlcmxpZnRpbmcgYnV0IGZvciBhbGwgc3RyZW5ndGggc3BvcnRzIGxpa2Ugc3Ryb25nbWFuLCBwb3dlcmxpZnRpbmcsIHN0cmVuZ3RobGlmdGluZywgY3Jvc3NmaXQsIHdlaWdodGxpZnRpbmcgZXRjLiBVc2VycyBjYW4gc29ydCB0aGUgY29udGVzdHMgdXNpbmcgcHJlZmVycmVkIGFyZWEsIGRhdGUgb2YgY29udGVzdCwgcHJlZmVycmVkIHNwb3J0LCBmZWRlcmF0aW9ucyBhbmQgYWxsIHNvcnRzIG9mIHBhcmFtZXRlci4gCkxlYXJuaW5nIGhvdyB0byBjYWxjdWxhdGUgcG90IG9kZHMgcHV0cyB0aGUgY29uY2VwdCBvZiByaXNrIGFuZCByZXdhcmQgaW50byBhIG51bWVyaWNhbCBjb21wdXRhdGlvbi4gRm9yIHRob3NlIG9mIHlvdSB3aG8gYXJlbid0IGNvbmZpZGVudCBpbiB5b3VyIG1hdGggc2tpbGxzLCBkb24ndCB3b3JyeS4gSXQgaXMgbm90IGNvbXBsaWNhdGVkLCBhbmQgd2l0aCBhIGxpdHRsZSBwcmFjdGljZSB5b3Ugd2lsbCBiZSBhYmxlIHRvIGZpZ3VyZSB5b3VyIHBvdCBvZGRzIGluIG5vIHRpbWUuIApMb3cgY29zdHMgbWF0dGVyIG1vc3RPdmVyIHRoZSBsYXN0IDIxIHllYXJzLCB0aGUgcHJpY2UgaXMgaW5jcmVhc2luZyBvbiBhdmcgYW5udWFsbHlJIHdvcmsgaGFyZCB0byBtYWtlIG1vbmV5LCBhbmQgdXNlIHRoYXQgbW9uZXkgdG8gcmVkdWNlIG15IGNhcmJvbiBlbWlzc2lvbnMuIEkgYWxzbyBkaWQgdGhlIHdvcmsgdG8gcmVhZCB0aHJvdWdoIHRoZSBkb2N1bWVudHMgdG8gbWFrZSBzdXJlIHRoZSBwcm9qZWN0IGlzIGxlZ2l0LiBZb3Ugc2hvdWxkIHRha2UgYSBsb29rIGF0IHRoZSB2ZXR0aW5nIHByb2Nlc3MgdGhlIFVuaXRlZCBOYXRpb24gQ0RNIHB1dHMgcHJvamVjdHMgdGhyb3VnaCwgaXQgcHJldHR5IGV4dGVuc2l2ZS5BbHNvIG5vLCBJIGRvbiBwbGFuIG9uIGhhdmluZyBjaGlsZHJlbiwgYW5kIEkgcGxhbiB0byBnbyBjYXJib24gbmV1dHJhbCBmb3IgbXkgZW50aXJlIGxpZmUgYmVmb3JlIEkgdHVybiA0MC4gCkkgaGF2ZSBzb21lIGNhbGxzIG91dCBhbmQgVHJveSBLZWVwaW5nIGF0IFNvdXRobGFuZCBwcm9taXNlZCB0byBnZXQgYmFjayB0byBtZS4gClNoZSBhY3R1YWxseSBkb2Vzbid0IGhhdmUgdG8gInByb3ZlIiB0aGUgZGF0ZSBvZiBzZXBhcmF0aW9uLiBTaGUgZGVjbGFyZXMgaXQgYW5kIGhlIGNhbiBlaXRoZXIgYWdyZWUsIGRpc2FncmVlIG9yIHJlbWFpbiBzaWxlbnQuIApDdW50cy5HaXptb3RlY2ggbW9iaWxlICAzIHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ29MYXRlIGxhc3QgeWVhciB3ZW50IGZvciBhIGlwaG9uZSB4cyB1cGdyYWRlLkJlZW4gd2l0aCB0aGVtIDggeWVhcnMgbm93LiAKVGhlIEdlb3JnaWEgUmlnaHQgdG8gTElmZSBjYW1wYWlnbiBwdXQgdGhlIGJpbGxib2FyZHMgdXAgbGFzdCB3ZWVrIGluIEF0bGFudGEgYW5kLCBhY2NvcmRpbmcgdG8gcHJlc3MgcmVwb3J0cywgdGhlIGdyb3VwIGlzIGFsc28gcHVzaGluZyBsZWdpc2xhdGlvbiB0aGF0IGFpbXMgdG8gYmFuIGFib3J0aW9ucyBiYXNlZCBvbiB0aGUgZmFjdCB0aGF0IGRpc3Byb3BvcnRpb25hdGUgbnVtYmVyIG9mIEJsYWNrIHdvbWVuIGdldCBhYm9ydGlvbnMuIChBY2NvcmRpbmcgdG8gQ0RDIHN0YXRpc3RpY3MgQmxhY2sgd29tZW4gYXJlIHRocmVlIHRpbWVzIGFzIGxpa2VseSBhcyB3aGl0ZSB3b21lbiB0byBnZXQgYW4gYWJvcnRpb24pLgpBbHNvLCBTYW4gSm9zZSB0b3duIGluIE9jY2lkZW50YWwgTWluZG9ybyBwcm92aW5jZSBpcyBub3cgdW5kZXIgYSBzdGF0ZSBvZiBjYWxhbWl0eSwgYXMgMTEgaXNsYW5kIHZpbGxhZ2VzIGFuZCAxNyBhZ3JpY3VsdHVyYWwgdmlsbGFnZXMgaW4gdGhlIGFyZWEgY29udGludWUgdG8gZXhwZXJpZW5jZSBzZXZlcmUgZHJvdWdodC4KQSBwcmVleGlzdGluZyBzdXBwbHkgc2hvcnRhZ2UgaXNuIGV4cG9uZW50aWFsOyBvbmx5IHRoZSBtb25ldGFyeSBwYXJ0IG9mIHRoZSBwcm9ibGVtIGlzLm1lcnJ5X2hvbGlkYXlzICA3MyBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnb1RydW1wIGxpa2VzIHRvIHBvcnRyYXkgaGltc2VsZiBhcyBhIHRvdWdoIGd1eS4gCkFuZCB3aGF0IEkgYW0gZmVhcmZ1bCBvZiBpcyB0aGF0IGJlY2F1c2UgUmFzaGlkYSBhbmQgSSBhcmUgTXVzbGltLCB0aGF0IGEgbG90IG9mIEpld2lzaCBjb2xsZWFndWVzLCBhIGxvdCBvZiBvdXIgSmV3aXNoIGNvbnN0aXR1ZW50cywgYSBsb3Qgb2Ygb3VyIGFsbGllcywgZ28gdG8gdGhpbmtpbmcgdGhhdCBldmVyeXRoaW5nIHdlIHNheSBhYm91dCBJc3JhZWwsIHRvIGJlIGFudGkgU2VtaXRpYywgYmVjYXVzZSB3ZSBhcmUgTXVzbGltLiBBbmQgc28gdG8gbWUsIGl0IGlzIHNvbWV0aGluZyB0aGF0IGJlY29tZXMgZGVzaWduZWQgdG8gZW5kIHRoZSBkZWJhdGUuIEJlY2F1c2UgeW91IGdldCBpbiB0aGlzIHNwYWNlLCBvZiBsaWtlLCBJIGtub3cgd2hhdCBpbnRvbGVyYW5jZSBsb29rcyBsaWtlIGFuZCBJJ20gc2Vuc2l0aXZlIHdoZW4gc29tZW9uZSBzYXlzIHRoYXQgdGhlIHdvcmRzIHlvdSB1c2UgSWxoYW4sIGFyZSByZXNlbWJsYW5jZSBvZiBpbnRvbGVyYW5jZS4gClNvLCB3ZSBhcmUgZ29pbmcgYmFjayB0byB0cnVseSBiZWluZyB0aGUgIldvcmxkJ3MgTW9zdCBSZWZyZXNoaW5nIEJlZXIsIiByb290ZWQgaW4gb3VyIG93bmVyc2hpcCBvZiBjb2xkLiBGb3IgZXhhbXBsZSwgb3VyIGNvbGQgYWN0aXZhdGVkIHBhY2thZ2luZyBpcyB2ZXJ5IHN5bWJvbGljIGZvciB0aGUgYnJhbmQuIFdoZW4gdGhlIG1vdW50YWlucyB0dXJuIGJsdWUsIGl0IG1lYW5zIENvb3JzIExpZ2h0IGlzIGF0IHRoZSBwZXJmZWN0IHRlbXBlcmF0dXJlIHRvIGJyaW5nIHJlZnJlc2htZW50LiBBbmQgeW91bmdlciBjb25zdW1lcnMsIGJlbGlldmUgaXQgb3Igbm90LCBkaWRuJ3Qga25vdyB0aGF0LiBXaGVuIHdlIGFza2VkLCB0aGV5IHNhaWQgcmVhbGx5PyBUaGF0J3Mgc28gY29vbC4gQW5kIHRoZXkgZGlkbid0IGtub3csIGJlY2F1c2Ugd2Ugc3RvcHBlZCB0ZWxsaW5nIHRoZW0uCkZvciByZWZlcmVuY2UsIHRoZSBNdWdoYWwgd2FycyB0aGF0IGZvcmNpYmx5IGNvbnZlcnRlZCBJbmRpYSBhbmQgUGFraXN0YW4gdG8gSXNsYW0gaGFkIGEgZGVhdGggdG9sbCBvZiBhcm91bmQgNSw3MDAsMDAwLgpLcmFmdCB2aXNpdGVkIHRoZSBzcGEgdHdpY2UgaW4gdGhvc2UgNSBkYXlzIGFuZCB3ZXJlIGNhdWdodCBvbiBjYW1lcmEuIApMZXQgbWUgZWxhYm9yYXRlIGV2ZW4gZnVydGhlci4gSSBwcmV0dHkgc3VyZSB0aGVyZSBhcmVuIHN0dWRpZXMgZG9uZSBvbiBzdHJlc3MgaW4gY2F0cyBhbmQgZG9ncyBmb3IgY2hhc2luZyBsYXNlciBwb2ludCBsaWdodHMuIEJ1dCBldmVyeSBldm9sdXRpb25hcnkgcHN5Y2hvbG9naXN0IHdvcnRoIHRoZWlyIHNhbHQgaXMgcmVhc29uYWJseSBjb25jZXJuZWQgYWJvdXQgZG9pbmcgaXQgZnJlcXVlbnRseSBhbmQgbm90IGxldHRpbmcgdGhlIGxpZ2h0IHZhbmlzaCBvbiBzb21ldGhpbmcgdGhlIHBldCBjYW4gcGh5c2ljYWxseSBzbmF0Y2guIEd1ZXNzIHdoZXJlIHRoZWlyIGh5cG90aGVzZXMgYXJlIGdvbm5hIGVuZCB1cCwgdGhvdWdoPwoiSXQncyBNZW1waGlzLiAKV2Ugd2VyZSBzbyBleGNpdGVkIHRvIGFjdHVhbGx5IG5vdCBiZSBzd2VhdHkgZm9yIGEgZGF5IGFuZCBtYXliZSBldmVuIGhhdmUgZ29vZCBoYWlyLiAKQ2FuJ3Qgd2FpdCBmb3IgYmxvb2R5IHBhbGFjZS4yRGVuazRpcmxfICA0MCBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ29UaGVyZSBpcyBubyBkaXNwdXRlIHRoYXQsIGF0IGFnZSAzNCwgTWljaGFlbCBKYWNrc29uIHNsZXB0IG1vcmUgdGhhbiAzMCBuaWdodHMgaW4gYSByb3cgaW4gdGhlIHNhbWUgYmVkIHdpdGggMTMgeWVhciBvbGQgSm9yZGllIENoYW5kbGVyIGF0IHRoZSBib3kncyBob3VzZSB3aXRoIENoYW5kbGVyJ3MgbW90aGVyIHByZXNlbnQuIEhlIGFsc28gc2xlcHQgaW4gdGhlIHNhbWUgYmVkIHdpdGggSm9yZGllIENoYW5kbGVyIGF0IENoYW5kbGVyJ3MgZmF0aGVyJ3MgaG91c2UuIApTY2FyeSBidXQgaXQgc2F2ZWQgbXkgdHViZSEgV2UgbmV2ZXIgZGlkIHNlZSB0aGUgZWN0b3BpYy4gCktva2VtdWxsZXIgaGFzIGFkZGl0aW9uYWwgcHJvZmVzc2lvbmFsIGV4cGVyaWVuY2UgaW4gbWFya2V0aW5nLCByZXRhaWwgYW5kIHNtYWxsIGJ1c2luZXNzLiBIZSBob2xkcyBhIE1hc3RlciBvZiBCdXNpbmVzcyBBZG1pbmlzdHJhdGlvbiBmcm9tIElvd2EgU3RhdGUgVW5pdmVyc2l0eS4uIApKaW0gR2FydGxhbmQsIGV4ZWN1dGl2ZSBkaXJlY3RvciBvZiB0aGUgTmF0aW9uYWwgR3JleWhvdW5kIEFzc29jaWF0aW9uLCBzYWlkIGhlIHdhcyBzdXJwcmlzZWQgYnkgdGhlIGFtZW5kbWVudCBwYXNzYWdlIGl0IG5lZWRlZCA2MCBwZXJjZW50LCB1bmRlciBGbG9yaWRhIGxhdy4gSGUgc2FpZCBodW5kcmVkcyBvZiBncmV5aG91bmQgYnJlZWRlcnMgYW5kIHRoZWlyIGVtcGxveWVlcyBuYXRpb25hbGx5IHdpbGwgYmUgaHVydCBieSB0aGUgRmxvcmlkYSBkZWNpc2lvbiwgYW5kIGFjY3VzZWQgdGhlIGFtZW5kbWVudCBiYWNrZXJzIG9mICJseWluZyIgYW5kIGdpdmluZyAibWlzbGVhZGluZyBmYWN0cyBhbmQgZmlndXJlcyIgd2hlbiB0aGV5IHNhaWQgZG9ncyBhcmUgYWJ1c2VkLiAKSXQgY3V0cyBkb3duIG9uIHRoZSBhbW91bnQgb2YgZHVzdCBwcm9kdWNlZCBieSBhIGZvcmNlZCBhaXIgZnVybmFjZSBhbmQgc2VlbXMgdG8gaGVscCByZWR1Y2UgY2VydGFpbiBhbGxlcmdpZXMuIApXaGVuIEkgd2FzIGluIGhpZ2ggc2Nob29sLCBvbmx5IGdpcmxzIGNvdWxkIHRha2UgSG9tZUVjOyBvbmx5IGJveXMgY291bGQgdGFrZSBTaG9wLiBXaGVuIEkgZmx1bmtlZCBIb21lRWMgaW4gOHRoIGdyYWRlIChteSBza2lydCBsb29rZWQgbW9yZSBsaWtlIGEgZGVjb25zdHJ1Y3RlZCBjbGVhbmluZyByYWcpLCBJIHdhcyB0b2xkIHRoYXQgSSBoYWQgdG8gZG8gc3VtbWVyIHNjaG9vbCBpZiBJIHdhbnRlZCB0byBnbyBvbnRvIGhpZ2ggc2Nob29sLiAKTWluZCB5b3UsIHRoaXMgcGxhY2UgYWN0dWFsbHkgZXhpc3RzLiBBbHRob3VnaCBhYm91dCAxMDAgY29ja3JvYWNoIGJyZWVkaW5nIGZhY2lsaXRpZXMgZXhpc3QgaW4gQ2hpbmEsIHRoZSBjaXR5IG9mIFhpY2hhbmcgaW4gdGhlIHNvdXRod2VzdGVybiBTaWNodWFuIHByb3ZpbmNlIGlzIGhvbWUgdG8gdGhlIGxhcmdlc3QgaW4gdGhlIHdvcmxkLCBhbmQgc29tZXRoaW5nIG9mIGEgdGVjaG5vbG9naWNhbCBtYXJ2ZWwuIEFsdGhvdWdoIGNvY2tyb2FjaGVzIChQZXJpcGxhbmV0YSBhbWVyaWNhbmEpIGFyZSBmYW1vdXMgZm9yIGJlaW5nIGFibGUgdG8gdG9sZXJhdGUgYWxsIG1hbm5lciBvZiBsaXZpbmcgY29uZGl0aW9ucywgdGhpcyBmYWNpbGl0eSBpcyB0aGUgZmlyc3QgdG8gc3VjY2VlZCBpbiBob3VzaW5nIHJvdWdobHkgdGhlIGh1bWFuIHBvcHVsYXRpb24gb2Ygb3VyIHBsYW5ldCdzIHdvcnRoIG9mIGNvY2tyb2FjaGVzIHVuZGVyIG9uZSByb29mLiAKQWxzbyBJIHdvdWxkIGFkdm9jYXRlIHRhbGtpbmcgdG8gYSB0aGVyYXBpc3QgYWJvdXQgeW91ciBpbm5lciBjcml0aWMuIApCdXQgZGFkIHN0ZXBwZWQgaW4gcHJldHR5IHF1aWNrIGFuZCBzYWlkIGlmIGhlIGV2ZXIgZm91bmQgb3V0IHRoZXkgd2VyZSBxdWVzdGlvbmFibGUgdGhleSB3ZXJlIGdvbmUuIApQaXp6YSBIdXQgcGl6emEgKGNyZWFtIGNoZWVzZSBhbmQgc3dlZXQgcG90YXRvIHBpenphIGlzIGF3ZXNvbWUgYW5kIHdlaXJkKQpXZSBoYXZlIHN0b3JlcyB0aGF0IHdoZW4gdGhleSBoYXZlIGhlYXZ5IHZvbHVtZSwgdGhleSBkaXZpZGUgaXQgdXAgbGlrZSB0aGUgcG9rZXIgY2hpcHM6IFRoZSBibHVlIGNoaXBzIGFyZSB0aGUgbW9zdCB2YWx1YWJsZSBvbmVzLCB0aGVuIHJlZCwgdGhlbiB3aGl0ZS4gCiJQaGlsaXBzIHBhcnRuZXJzIHdpdGggZ2xvYmFsIGhlYWx0aGNhcmUgcHJvdmlkZXJzIHRvIGNvbm5lY3QgcGVvcGxlLCBpbmZvcm1hdGlvbiBhbmQgdGVjaG5vbG9neSB3aXRoIHRoZSBjb21taXRtZW50IHRvIGRlbGl2ZXIgb24gdGhlIFF1YWRydXBsZSBBaW0gb2YgaW1wcm92ZWQgcGF0aWVudCBleHBlcmllbmNlcywgYmV0dGVyIGhlYWx0aCBvdXRjb21lcywgaW1wcm92ZWQgc3RhZmYgZXhwZXJpZW5jZXMsIGFuZCBsb3dlciBjb3N0cyBvZiBjYXJlLCIgc2FpZCBSb2JlcnQgQ2FzY2VsbGEsIENoaWVmIEJ1c2luZXNzIExlYWRlciBQcmVjaXNpb24gRGlhZ25vc2lzIGF0IFJveWFsIFBoaWxpcHMuICJUaGlzIGFjcXVpc2l0aW9uIHdpbGwgZW5oYW5jZSBvdXIgYWJpbGl0eSB0byBwcm92aWRlIGZsZXhpYmxlIHNvbHV0aW9ucyB0byBob3NwaXRhbHMgYW5kIGhlYWx0aCBzeXN0ZW1zLiAKVG9kYXksIHRoZSBMYXNlckpldCB3aGljaCBmaXRzIHRoZSBzYW1lIG5pY2hlIGluIEhQIGxpbmUgY29zdHMgYWJvdXQgJDI3MCwgcHJpbnRzIGFib3V0IHRocmVlIHRpbWVzIGFzIGZhc3QgYXMgZGlkIHRoZSBvbGQgcGVyc29uYWwgcHJpbnRlciwgYW5kIGhhcyBhbiBleHBlY3RlZCBsaWZlIG9mIG1heWJlIHRocmVlIHllYXJzLiAKTCd1dGlsaXNhdGV1ciBkdSBzaXRlIGEgZ2FsZW1lbnQgbGUgZHJvaXQgZGUgcydvcHBvc2VyIGF1IHRyYWl0ZW1lbnQgZGVzIGRvbm5lcyBwZXJzb25uZWxsZXMgdXRpbGlzZXMgIGRlcyBmaW5zIHN0YXRpc3RpcXVlcyBjb25mb3JtbWVudCAgbCdhcnQuIDg5IHBhcmFncmFwaGUgMSBkdSBSR1BEIGV0IGNlLCBwb3VyIGRlcyByYWlzb25zIHJlZ2FyZGFudCBsYSBzaXR1YXRpb24gcGFydGljdWxpcmUgZGUgbCd1dGlsaXNhdGV1ciBlbiBxdWVzdGlvbi4gCkVhY2ggaGFzIGl0cyBvd24gbWVyaXRzIGluIGEgZ2l2ZW4gY29udGV4dC4gVGhlcmUgaXMgdmFsdWUgaW4gbm90IGxldHRpbmcgb25lc2VsZiBnZXQgdG9vIGNvbWZvcnRhYmxlIHdpdGggYW55IG9uZSBwYXJ0aWN1bGFyIHRyYW5zbGF0aW9uIG9mIHRoZSB3b3JkLCBzaW5jZSB0aGUgZW50aXJlIHRocnVzdCBvZiBCdWRkaGlzdCBwcmFjdGljZSBpcyB0aGUgYnJvYWRlbmluZyBhbmQgZGVlcGVuaW5nIG9mIG9uZSB1bmRlcnN0YW5kaW5nIG9mIGR1a2toYSB1bnRpbCBpdHMgcm9vdHMgYXJlIGZpbmFsbHkgZXhwb3NlZCBhbmQgZXJhZGljYXRlZCBvbmNlIGFuZCBmb3IgYWxsLiAKQmVzaWRlcyB0aGF0LCBldmVyeSBvdGhlciBzdG9yeSBpcyBjb21wbGV0ZWx5IHdpdGhvdXQgYmFzaXMuIEFuZCBpbiB0cnV0aCwgdG8gbWlsZCBzbmlmZnMgb2YgYSBzbWFsbCBib3R0bGUgY29udGFpbmluZyBzb21lIGV0aGVyIGlzIHByb2JhYmx5IG5vdCBnb2luZyB0byBrbm9jayBvdXQgYW55b25lLiBFdGhlciBpc24ndCBleGFjdGx5IGZyZWVseSBhdmFpbGFibGUgZWl0aGVyLiAKRGVwZW5kaW5nIG9uIHlvdXIgcGFydHkgc2V0IHVwIHRoYXQgbm90IHRvbyB3ZWlyZC4gQWxzbyBrZWVwIGluIG1pbmQgdGhhdCB5b3UgY2FuIHJlc3QgaW4gYWxtb3N0IGFueSB3aWxkZXJuZXNzIGFyZWEgaW5jbHVkaW5nIHRoZSBtaW5lcywgeW91IGRvbiBoYXZlIHRvIGxlYXZlIGVudGlyZWx5LiBPZiBjb3Vyc2UgeW91IG1heSBnZXQgYW1idXNoZWQgYnkgdGhlIGxvY2FsIGVuZW1pZXMgaWYgeW91IHRyeSB0aGF0LCB0aG91Z2guIEkgd291bGQgZm9sbG93IE1pbnNjIGRpcmVjdGlvbiB0byB0aGUgc3Ryb25naG9sZCB0byB0aGUgU291dGh3ZXN0IHRvIGdldCBzb21lIGV4cGVyaWVuY2UuIEFsc28sIHZlbnR1cmUgdG8gSGlnaCBIZWRnZSBkaXJlY3RseSBXZXN0IG9mIEJlcmVnaG9zdCBhbmQgYnV5IHNvbWUgc3BlbGwgc2Nyb2xscyB0byB0ZWFjaCB5b3VyIG1hZ2Ugc29tZSBnb29kIGxvdyBsZXZlbCBzcGVsbHMuIFNsZWVwIGlzIGFtYXppbmcgZm9yIHRoZSB0aGluZ3MgeW91IGFyZSBhYm91dCB0byBiZSBkb2luZy4gR29vZCBsdWNrIGFuZCBzYXZlIG9mdGVuIQpXaGF0IGlzIHlvdXIgcG9pbnQ/IFNBIHNob3VsZCBiZSB0cmllZCBmb3IgY3JpbWVzIGhlIGNvbW1pdHRlZC4gSWYgc3VmZmljaWVudCBsZWdpdCBldmlkZW5jZSBzdXBwb3J0cyBwcm9zZWN1dGlvbiBmb3IgYW55IG9mIHRoZSBhYm92ZSBsaXN0ZWQgY3JpbWVzIEkgYWxsIGZvciBpdCwgYW5kIEkgc3VzcGVjdCBtb3N0IG9mIHRoZSAidHJ1dGhlcnMiIHdpbGwgYmUgYXMgd2VsbC4gCkhvdyBCcnVjZSBMZWUgQ2hhbmdlZCB0aGUgV29ybGQuIEhELiAKVGhhbmsgeW91IGZvciBkZWx2aW5nIGludG8gaXQgZm9yIG1lISBCcmlzYmFuZSB3YXMgb3ZlcndoZWxtaW5nIGVub3VnaCBzbyBJIHdhbnQgdG8gaGF2ZSB0aGluZ3MgcGxhbm5lZCBmb3IgdGhpcyBoYWhhLiBJJ20gYXJyaXZpbmcgb24gdGhlIDI4IE1hcmNoIHNvIHRoYXQncyBhYnNvbHV0ZWx5IHBlcmZlY3QuIENvbWVkeSBpcyBteSBjdXAgb2YgdGVhIGFuZCBJIHJlYWxseSBuZWVkIGEgbGF1Z2gKT24gU3VuZGF5IG5pZ2h0LCBCcmlkZ2VzdG9uZSBBcmVuYSBwbGF5ZWQgaG9zdCB0byBvbmUgb2YgdGhlIG1vc3QgZGF6emxpbmcgZXZlbnRzIG9mIHRoZSB5ZWFyOiB0aGUgc2V2ZW50aCBhbm51YWwgR25hc2hWZWdhcyBDYXNpbm8gTmlnaHQgQXVjdGlvbiwgcHJlc2VudGVkIGJ5IEtpbmcgSmV3ZWxlcnMuCkZ1cnRoZXIsIGlkZWFzIGFyZW4gaGlzLiBUaGV5IG90aGVyIHBlb3BsZSBpZGVhcy4gCkV0IG1lIG5vdXJyaXIgZGUgYmVsbGVzIHJlbmNvbnRyZXMuIEV0IGNlIHNlcmFpdCBhdXNzaSBwb3V2b2lyIHZlbmlyIGFpbnNpIGNvbnRlbXBsZXIgbGEgbWVyLCB0ZWxsZW1lbnQgYydlc3QgdW4gYm9uaGV1ciBkZSBjaGFxdWUgaW5zdGFudCwgbWVydmVpbGxhbnQgZXQgcmducmFudC4gCkludGVuc2l2ZSBjYXJlIHVuaXQgKElDVSkgY29zdHMgY29udHJpYnV0ZSBzaWduaWZpY2FudGx5IHRvIGhvc3BpdGFsIGNvc3RzIGFuZCBzdGVtIGZyb20gaW50ZXJ2ZW50aW9uIHNlcnZpY2VzIGFuZCBtYW5hZ2VtZW50IG9mIHNlcHNpcyBpbmNsdWRpbmcgbm9zb2NvbWlhbCBpbmZlY3Rpb25zLiBWaXRhbWluIEQgaGFzIGltbXVub21vZHVsYXRpbmcgYW5kIGFudGltaWNyb2JpYWwgcHJvcGVydGllcyB0aHJvdWdoIGFudGltaWNyb2JpYWwgcGVwdGlkZXMgc3VjaCBhcyBjYXRoZWxpY2lkaW4uLiAKTW95bGFuJ3MgY29ubmVjdGlvbiB0byBEb3VnaGVydHkgc3BhbnMgYXQgbGVhc3QgdHdvIGRlY2FkZXMuIApLaW0gSm9uZyBVbiBoYXMgdGFrZW4gaW50byBhY2NvdW50IFRydW1wIGRvbWVzdGljIHR1cm1vaWwsIGFuZCB0aHVzIGhlIHdlbnQgaW4gd2l0aCBjb25maWRlbmNlIHRoYXQgaGUgaGFkIHRoZSB1cHBlciBoYW5kLiAKQW5kIG1vc3QgcGVvcGxlIHRoaW5rIG9mIHBpenphIGFzIGJlaW5nIE5lYXBvbGl0YW4gYmVjYXVzZSBvZiBpdHMgZGVlcCBvcmlnaW5zIHRoZXJlLCB3aGlsZSB0aGUgYWN0dWFsIGludGVybmF0aW9uYWwgc3R5bGUgaXNuJ3QgZXZlbiBjbG9zZSB0byB3aGF0IGRlZmluZXMgZXZlbiB0aGUgY29udGVtcG9yYXJ5IHBpenphIHRoZXJlLgpUaG91Z2ggcG9saWNlIHJlY29yZHMgc2hvdyB0aGF0IG9mZmljZXJzIGhhdmUgaW52ZXN0aWdhdGVkIGFsbGVnYXRpb25zIG9mIGlsbGVnYWwgZ2FtYmxpbmcgYWN0aXZpdHkgYXQgdGhlIGhvdXNlLCBubyBjaGFyZ2VzIGhhdmUgYmVlbiBmaWxlZCBhZ2FpbnN0IHRoZSBob21lJ3Mgb3duZXIgb3Igb3RoZXJzIGZvciBhbiB1bmxhd2Z1bCBwb2tlciBvcGVyYXRpb24uCkonYWkgdCBzdXJwcmlzIGRlIGNlIHBhc3NhZ2U6IGQndW5lIHBhcnQsIGlsIG4neSBhIHBhcyBkdG91cm5lbWVudCBkZSBtaW5ldXJzLCBsJ2luZnJhY3Rpb24gYSB0IGFicm9nZSBpbCB5IGEgZGogcGx1cyBkZSAxMCBhbnM7IGQnYXV0cmUgcGFydCwgb24gZW5yZWdpc3RyZSB1bmUgbWFpbiBjb3VyYW50ZSBjb250cmUgbGUgZ2Fyb24gdmljdGltZSBkZSBtZW5hY2VzIGZhaXRlcyBhdmVjIHVuIGNvdXRlYXUuIApJdCBiZWVuIGZpdmUgeWVhcnMgc2luY2UgcmV0aXJlZXMgZ2FpbmVkIHRoZSBmbGV4aWJpbGl0eSBvZiBjaG9vc2luZyB0byBkZWZlciByZWNlaXB0IG9mIE9sZCBBZ2UgU2VjdXJpdHkgKE9BUykgYmVuZWZpdHMgZnJvbSBhZ2UgNjUgdG8gYXMgbGF0ZSBhcyA3MC4gVGhpcyBtaXJyb3JzIHRoZSBvcHRpb24gdG8gZGVmZXIgQ2FuYWRhIFBlbnNpb24gUGxhbiAoQ1BQKSBiZW5lZml0cywgYWx0aG91Z2ggdGhlIGlzIG9ubHkgMzYgcGVyIGNlbnQgZm9yIE9BUywgdmVyc3VzIDQyIHBlciBjZW50IGZvciBDUFAuCkxvbmcgd2ludGVyIGV2ZW5pbmdzIHdpbGwgc2VlbSBzaG9ydGVyIHdoZW4geW91IHBsYXkgYnJpZGdlIHdpdGggZnJpZW5kcy4gClNraWF0aG9zIFN0YWR0IGlzdCBhbmdlYmxpY2ggZGllIFRvdXJpc3RlbmhvY2hidXJnIGRlciBOIFNwb3JhZGVuLiBOaWNodCB6dWxldHp0IGF1ZmdydW5kIGRlciBUYXRzYWNoZSwgZGFzcyBlcyBkaWUgZWluemlnZSBJbnNlbCBpc3QsIGRpZSBwZXIgRmx1Z3pldWcgenUgZXJyZWljaGVuIGlzdCAodm9uIEF0aGVuIGF1cy4gRGFzIHcgZiBkYXMgbiBNYWwgZWluZSBlcm5zdGhhZnRlIHdlcnQuIE9id29obD8hIFdlciBzb2xsIGRlbm4gZGFubiBkYXMgVHJhbnNwb3J0d2VzZW4gR3JpZWNoZW5sYW5kcyByZXZvbHV0aW9uaWVyZW4/KS4gSmVkZXIgUmVpc2VuZGUsIGRlciBhbGxlcmRpbmdzIHNjaG9uIGVpbm1hbCBpbiBlaW5lciByaWNodGlnZW4gVG91cmlzdGVuaG9jaGJ1cmcgd2FyLCBrYW5uIG9iIHNvbGNoIGVpbmVyIG51ciBlcmxlaWNodGVydCBsIERhcyBhdXNsIFB1Ymxpa3VtLCB2b3IgYWxsZW0gRW5nbCB1bmQgU2thbmRpbmF2aWVyLCBpc3QgYW5nZW5laG0uIERhcyBEdXJjaHNjaG5pdHRzYWx0ZXIgZGVyIEcgYmVmaW5kZXQgc2ljaCBpbSBFaW5rbGFuZyBtaXQgZGVyIGFrdHVlbGxlbiBkZW1vZ3JhcGhpc2NoZW4gTm9ybWFsdmVydGVpbHVuZyBzbyB3aWUgd2lyLiBFdHdhcyBUb3VyaXN0ZW5ob2NoYnVyZ2ZlZWxpbmcgaGFiZW4gd2lyIGFsbGVuZmFsbHMgaW4gZGVyIE5hY2h0IHp1IHNwIGJla29tbWVuLCB3ZW5uIHNwb3JhZGlzY2ggKCEpIGdyaWVjaGlzY2hlIHVuZCBuaWNodCBncmllY2hpc2NoZSBNdXNpa2tsIGluIHVuc2VyIFppbW1lciBpbSBIb3RlbCBWaWxsYSBPcnNhIHdlaHRlbiwgZGFzIGdlcmFkZSBzbyB1bSBkaWUgZXJzdGUgQnVjaHQgaGVydW0sIG5lYmVuIGRlbSBIYWZlbiBsaWVndC4gRGllIExhZ2UgZGVzIHZlcndpbmtlbHRlbiBIb3RlbHMgaXN0IGZhbnRhc3Rpc2NoIGRpcmVrdCBhbiBlaW5lbSBTdGVpbGhhbmcsIGFsbGUgWmltbWVyIG1pdCBCbGljayBhdWYgZGFzIE1lZXIsIHdpbGQgcm9tYW50aXNjaGUsIGJsIEZyIERhcyBNaXRicmluZ2VuIGVpbmVzIE0gd2lyZCBqZWRvY2ggZHJpbmdlbmQgYW5nZXJhdGVuLiBEZW5uIG51ciBkYW5uIGthbm4gbWFuIHNpY2ggZW50c3Bhbm50IHZvbSBTdW1tZW4gZGVyIGF1c2dlc2NobG9zc2VuZW4gUGxhZ2VnZWlzdGVyIGluIGRlbiBTY2hsYWYgc2luZ2VuIGxhc3Nlbi4KSXQganVzdCByZXR1cm5zIHRoaW5ncyB0byBob3cgdGhleSB3b3JrZWQgYmVmb3JlIHRoZXJlIHdhcyBhbiBpbmNvbWUgdGF4IGFuZCBhIGZpYXQgZWNvbm9teS4gCkEgc2VjdWxhciByZXB1YmxpYyBjb250YWluaW5nIHdoYXQgaXMgbm93IEluZGlhLCBQYWtpc3RhbiBhbmQgQmFuZ2xhZGVzaCwgd2l0aCBhIGRlbW9jcmF0aWMgZ292ZXJubWVudCwgd291bGQgaGF2ZSBsaWtlbHkgYmVlbiBzdWNjZXNzZnVsIGFuZCBwZWFjZWZ1bC4KQWxzbywgdGhlcmUgd2FzIGEgY2hhbmdlIHJlY2VudGx5IHRoYXQgd2hlbiB5b3UgZG8geW91ciBmaXJzdCBtZXJnZSwgaXQgZWl0aGVyIHJlbW92ZXMgdGhlIEZsYXcgb3IgZ2l2ZXMgYSArMSB0byB0aGUgaGlnaGVzdCAzIHN0YXRzIGlmIHRoZSB1bml0IGlzIE5ldXRyYWwuIApMaXN0ZW5MZWFybiAgMiBwb2ludHMgIHN1Ym1pdHRlZCA0IG1vbnRocyBhZ28KU2VlIHJlbGF0ZWQgbGlua3MuIChGdWxsIEFuc3dlcikuIApHcmVhdCB0byBoYXZlIHN0cmF0ZWd5IGFuZCB2aXNpb24sIGJ1dCBpbXBsZW1lbnRhdGlvbiBpcyB0aGUgbW9zdCBpbXBvcnRhbnQgcGFydCwgc2FpZCB0aGUgc2VsZiBkZXNjcmliZWQgYW5kIG9mIGRldGFpbC4gQ2xhaXIgdG9vayBhIHN0YWdnZXJpbmcgJDEyIG1pbGxpb24gYW5udWFsIGhpdCBsYXN0IHNwcmluZyB3aGVuIHRoZSBsYXRlIGFuZCB1bmxhbWVudGVkIEthdGhsZWVuIFd5bm5lIGdvdmVybm1lbnQgcGFzc2VkIFBheSBmb3IgRXF1YWwgV29yayBsZWdpc2xhdGlvbiB0aGF0IGphY2tlZCB1cCB3YWdlcyBvZiBwYXJ0IHRpbWUsIGNhc3VhbCBhbmQgc2Vhc29uYWwgd29ya2Vycy4uIApVbnZlaWxpbmcgdGhlIGRpc3BsYXkgaW4gdGhlIGRpbmluZyByb29tIG9mIHRoZSBjYXIsIEFsbGllIENvcHBpbiBzYWlkIHRoZXkgYXJlIGV4Y2l0ZWQgdG8gcGFzcyB0aGlzIGFkZGVkIHBpZWNlIG9mIGhpc3RvcnkgdG8gZnV0dXJlIGdlbmVyYXRpb25zIGp1c3QgbGlrZSBpdCBoYWQgYmVlbiBpbiB0aGVpciBmYW1pbHkuCkdheSBMaWJlcmF0aW9uClNhdGVsbGl0ZSB0b3VybmFtZW50OiB0aGlzIGlzIHlvdXIgZmlyc3QgcG9rZXIgdG91cm5hbWVudCB0byBzdGFydCB3aXRoLiAKSWYgdGhlIHBsYXllciBjYWxscywgcmFpc2VzIG9yIGZvbGRzLCB5b3UgY2FuIHdhdGNoIHRoZW0uIFlvdSBjYW4gbWFrZSBhIHBzeWNob2xvZ2ljYWwgcHJvZmlsZSBvZiB5b3VyIGNvbXBldGl0b3JzIGluIHRoaXMgcG9zaXRpb24uIApCbGVzc2luZyBmb3IgaGltLCBhbmQgdXMuLiAKQWx0YXJpYSBpcyBhbWF6aW5nIGluIHRoaXMgY3VwIGFzIGZhciBhcyBJIGNvbmNlcm5lZCwgYXMgbG9uZyBhcyB5b3UgYnVpbGRpbmcgd2l0aCBpdCBjb3JyZWN0bHkuIApUaGlzIGlzIGZvciB0aGUgY2hpbGQuIElmIHlvdXIgc2lzdGVyIGRpZG4gaGF2ZSBmYW1pbHkgdG8gaGVscCwgeW91ciBuaWVjZSB3b3VsZCBiZSBpbiBhIGZvc3RlciBob21lIG9yIHBhaXJlZCB3aXRoIGEgbWlsaXRhcnkgZmFtaWx5IHRoYXQgd291bGQgdGFrZSBoZXIgaW4uIApIZWxsbywgSSdtIEx5bm5lIE1hbGNvbG0sIGZpbGxpbmcgaW4gd2hpbGUgTmF0YXNoYSBNaXRjaGVsbCBpcyBvbiBhbm90aGVyIHByb2plY3QuIEFuZCBmb3IgdGhlIG5leHQgdHdvIHdlZWtzIG9uIEFsbCBpbiB0aGUgTWluZCB3ZSdyZSBsb29raW5nIGF0IHRoZSBtaW5kIG9mIHRoZSBwcm9ibGVtIGdhbWJsZXIuIE1vcmUgcHJlY2lzZWx5IHRoZSBtaW5kcyBwbHVyYWwsIGJlY2F1c2UgYXMgd2UnbGwgbGVhcm4gZnJvbSBKYW1lcyBDYXJsZXRvbidzIHJlcG9ydCwgdGhlIGNoYWxsZW5nZSBmYWNpbmcgcmVzZWFyY2hlcnMgaXMgdGhhdCBwcm9ibGVtIGdhbWJsZXJzIGFyZSBhbiBleHRyYW9yZGluYXJpbHkgaGV0ZXJvZ2VuZW91cyBncm91cC4KTG9hZGluZyAuIEhvdyB0byBpbnN0YWxsIFJoaW5vIHY1LjMgbWFjT1MgU2llcnJhIGFuZCBmaXggUGF0Y2ggZm9yIC4gQiBzcGxpbmUgc3VyZmFjZXMgYi4gCklmIHlvdSBoYXZlIHRoZSBzcGFjZSBhbmQgY2FzaCB0aG91Z2gsIGdvIGZvciBpdC4gMiBwb2ludHMgIHN1Ym1pdHRlZCA1IGRheXMgYWdvCkhlcmUgYXJlIGZpdmUgdGhpbmdzIEkgbm90aWNlZCB3aXRoIG15IGhhbmRzIG9uIHRpbWU6LiAKQnV0IGhpcyBORkwgY2FyZWVyIG1heSBoYXZlIG5ldmVyIGhhcHBlbmVkIGhhZCBpdCBub3QgYmVlbiBmb3IgYSBiaWcgZ2FtYmxlIHRoYXQgaW5jbHVkZWQgYW4gdW5kZXJncm91bmQgcG9rZXIgZ2FtZSAgYXMgcHVibGlzaGVkIGluIGFuSW5kaWFuYXBvbGlzIFN0YXIgYXJ0aWNsZSBvdmVyIHRoZSB3ZWVrZW5kLi4gCkkgbGl2ZSBpbiBTYW4gRnJhbmNpc2NvIGFuZCBteSBvcHRpb25zIGFyZSBjb21jYXN0IG9yIG5vIGludGVybmV0LiBJIGhhdmUgbm8gYXZhaWxhYmxlIGNvbm5lY3Rpdml0eSBvbiBteSBlbnRpcmUgYmxvY2suIApPbmUgb2YgdGhlbSBza2lwcyB0aGUgbWlkZGxlIG1hbi4gWW91IHBvcnRyYXkgQW1lcmljYW4gSGVhbHRoIEluc3VyZXJzIGFzIGlmIHRoZXkgYXJlIG1vbnN0ZXJzIHdobyB3aWxsIHJ1aW4gZXZlcnl0aGluZyBpZiBhbGxvd2VkLiBUaGV5IGFyZS4gU28geW91IGxlZ2lzbGF0ZS4gRGVjbGF3IHRoZW0uIEFuZCBmYXN0LiBIZWFsdGggaW5zdXJhbmNlIGhhcyB0byBiZSBub24gcHJvZml0LiBUaGV5IGFyZSBubyBsb25nZXIgYWxsb3dlZCB0byBwcm9maXQgbW9yZSB0aGFuIDIlIHVudGlsIHRoZXkgaGF2ZSB0byBwYXkgYSBkaXZpZGVuZD8gVGhlaXIgZ29hbHMgd2lsbCBjaGFuZ2UgcXVpY2tseS4KVGhlIGluc3VyYW5jZSBkZWR1Y3RpYmxlIHdpbGwgYmUgYSBjb21tb24gZXhwZW5zZSBvZiB0aGUgc3RyYXRhIGNvcnBvcmF0aW9uLCB3aGljaCB0aGUgc3RyYXRhIG1heSBwYXkgZnJvbSB0aGUgb3BlcmF0aW5nIGZ1bmQsIGNvbnRpbmdlbmN5IGZ1bmQgb3IgaXNzdWUgYSBzcGVjaWFsIGxldnkgdG8gdGhlIG93bmVycy4gRWFjaCBvd25lciBpcyByZXNwb25zaWJsZSBmb3IgdGhlaXIgcGVyc29uYWwgYXNzZXRzIGFuZCBiZXR0ZXJtZW50cyB0aGF0IGhhdmUgYmVlbiBtYWRlIHRvIHRoZWlyIHVuaXRzLiBUaGVzZSBpbmNsdWRlIHVwZ3JhZGVzIGxpa2UgZmxvb3JpbmcsIGtpdGNoZW4gb3IgaW4gc3VpdGUgcmVub3ZhdGlvbnMuIApUcmFkaXRpb25hbCBjb3VudHJ5IG11c2ljIGFydGlzdHMgcmFpbCBvdXQgYWdhaW5zdCAicG9wIGNvdW50cnkiIGFuZCBzbmFwIHRyYWNrcyBhbGwgdGhlIHRpbWUuLiAKL3Ivdml2ZSBpc24geW91ciBwcm9tb3Rpb25hbCBwbGF0Zm9ybS4gU2VsZiBwcm9tb3Rpb24gYW5kIGFueSBjb21tZXJjaWFsIHByZXNlbmNlIGlzIG9ubHkgdG9sZXJhdGVkIHdoZXJlIGl0IG1ha2VzIHRoZSBzdWJyZWRkaXQgYmV0dGVyLCBjb250cmlidXRlcyB0byB0aGUgZGlzY3Vzc2lvbiBhbmQgaXMgcGFydCBvZiB3aWRlciBwYXJ0aWNpcGF0aW9uIGFzIGFuIGluZGl2aWR1YWwuIApJdCBtaWdodCB3ZWxsIGJlIHRoYXQgaGUgcHJlZmVycmVkIHZpZGVvIHBva2VyLiAKVGhlIElQQSBoYWQgbW92ZWQgdGhlIGNvdXJ0IGxhc3QgT2N0b2Jlciwgc2Vla2luZyBhIGRpcmVjdGlvbiB0byB0aGUgc3RhdGUgZ292ZXJubWVudCBhbmQgdGhlIHBvbGljZSBub3QgdG8gaW50ZXJmZXJlIGluIHRoZSBhY3Rpdml0aWVzIG9mIHBva2VyIGNsdWJzIHVuZGVyIHRoZSBhbnRpICBnYW1ibGluZyBhY3QuCk15IHVuY2xlIHdhcyBhIGNvcCBhbmQgd2hpbGUgaGUgZGlkbid0IGhhdmUgdGhhdCBtdWNoIGV4cG9zdXJlIHRvIGdhbmdzLCBoZSBzYWlkIHR3byBvZiB0aGUgbWFpbiByZWFzb25zIGZvciBwZW9wbGUgam9pbmluZyBhcmUgbW9uZXkgYW5kIHNlbnNlIG9mIHByaWRlL2JlbG9uZ2luZy4gVXN1YWxseSBwZW9wbGUgZW5kIHVwIG1ha2luZyBhIGxvdCBtb3JlIHNlbGxpbmcgZHJ1Z3MgYW5kIHJ1bm5pbmcgdGhhbiBpZiB0aGV5IGdldCBhIGpvYi4gCkhpZ2hsaWdodGluZyB0aGUgcmVjZW50IGNhc2Ugb2YgMTcgeWVhciBvbGQgUmFzaGVlZGEgb2YgSHlkZXJhYmFkLCBTUEFSQyBpbmZvcm1lZCB0aGF0IFJhc2hlZWRhJ3MgbGF0ZSBmYXRoZXIgbG9zdCBoZXIgaW4gYSBwb2tlciBnYW1lIHdoZW4gc2hlIHdhcyBvbmx5IHR3byB5ZWFycyBvbGQuIE5hcnJhdGluZyB0aGUgZ3JpbSBzdG9yeSBiZWhpbmQgdGhlIGlzc3VlLCBSYXNoZWVkYSdzIG1vdGhlciwgTm9vcmFuLCBzdGF0ZWQgdGhhdCBoZXIgaHVzYmFuZCwgd2hvIHdhcyBhIGdhbWJsZXIsIGhhZCBsb3N0IGEgZ2FtZSBhbmQgaGFkIHRvIHBheSBhIGRlYnQgb2YgUnMxMCwwMDAgdG8gb25lIG9mIHRoZWlyIHJlbGF0aXZlcywgTGFsIEhhaWRlci4uIApGbHlpbmdicm93bmllcGllICAxMSBwb2ludHMgIHN1Ym1pdHRlZCAyOCBkYXlzIGFnbwpXaGVuIEkgd29ya2VkIGluIGEgdGVhY2hpbmcgaG9zcGl0YWwgKGFzIGEgc2VjcmV0YXJ5KSBJIGFsd2F5cyB0YXVnaHQgdGhlIGRvY2xpbmdzIHRvIGJlIGV4dHJhIG5pY2UgdG8gdGhlIHN0YWZmIHdobyBjb250cm9sIGFjY2VzcyB0byB3aGF0IHRoZXkgbmVlZGVkLiAKSSdtIG5ldyB0byB0aGVzZSBmb3J1bXMgYW5kIHRvIGFudGlxdWUgRWRpc29uIHBob25vZ3JhcGhzIGluIGdlbmVyYWwuIApBcyBmb3IgeW91IGJlaW5nIE5DIGFuZCBoaW0gVkxDLCBJIHN1Z2dlc3QgYSBmZXcgdGhpbmdzLgpNeSBncmVhdCBncmFuZG1vdGhlciB3YXMgYXJvdW5kIHRoaXMgYWdlIHRvbyB3aGVuIHNoZSBkaWVkIGluIHRoZSA5MHMuIApJbiB0aGUgZm9ybSBvZkJhbGFyYW1hIFlvdSBjYXJyeSBhIHBsb3cgd2l0aCB3aGljaCBZb3Ugc3ViZHVlIHRoZSB3aWNrZWQgYW5kIGRyYXcgdG93YXJkIFlvdSB0aGUgUml2ZXIgWWFtdW5hLiAKR3Vlc3Mgd2hhdDsgdGhlIHBlb3BsZSB3aG8gd29yayB0aGUgaGFyZGVzdCBnZXQgdGhlIGpvYnMuIFNvbWUgb2YgdGhlIGhhcmRlc3Qgd29ya2luZyBwZW9wbGUgSSBrbm93IGFyZSBNZXhpY2FucyBhbmQgdGhleSB3b3JrIGFzIGRpc2h3YXNoZXJzIGZvciA2MCsgaG91cnMgYSB3ZWVrIHRvIHN1cHBvcnQgdGhlaXIgZmFtaWxpZXMuIEkndmUgaGlyZWQgIkFtZXJpY2FucyIgYXQgdGhlIHNhbWUgcG9zaXRpb24gYW5kIEknZCByYXRoZXIgaGF2ZSBvbmUgIkNoYW5vIiB0aGFuIDIgIkJyYWRzIiBiZWNhdXNlIHRoZXkgZGlkbid0IGxhc3QgYSB3ZWVrIGR1ZSB0byB0aGlzIGxhenkgbWVudGFsaXR5LiAKTmFuY3kgVG9kZCBvZiBOYW5jeSBUb2RkJ3MgUG9rZXIgUGFsYWNlIGdhdmUgYSB0aHVtYnMgdXAgdG9kYXkgdG8gdGhlIHJlY2VudCBydWxpbmcgYnkgdGhlIFNlY3JldGFyeSBvZiBTdGF0ZSByZWxhdGluZyB0byB0aGUgaXNzdWUgb2YgYSBwdWJsaWMgdm90ZSBvbiBjYXNpbm9zICJXZSB3ZXJlIGNoYWxsZW5nZWQgcmVjZW50bHkgaW4gdGhlIFNlY3JldGFyeSBvZiBTdGF0ZSdzIG9mZmljZXMgYWJvdXQgdGhlIHN1ZmZpY2llbmN5IG9mIG91ciBiYWxsb3QgdGl0bGUuIFdlIGhvd2V2ZXIgd2VyZSBjb25maWRlbnQgdGhlIEhvbm9yYWJsZSBNYXJrIE1hcnRpbiB3b3VsZCBydWxlIGFzIEF0dG9ybmV5IEdlbmVyYWwgTWNEYW5pZWwgaGFkIHByZXZpb3VzbHkgaW4gZmluZGluZyB0aGUgYmFsbG90IGxhbmd1YWdlIHN1ZmZpY2llbnQgZm9yIHRoZSBuZWVkcyBvZiB2b3RlcnMsIGl0IHdhcyBhIGxvbmcgMzAgZGF5IHdhaXQgZm9yIHRoZSBkZWNpc2lvbiB0byBiZSBtYWRlLiIuIApFdmVuIGlmIHlvdSBjYW4gcHVyc3VlIGFsaWVuYXRpb24gb2YgYWZmZWN0aW9uLCBtYXliZSB5b3Ugc2hvdWxkIGNvbnNpZGVyIHRha2luZyBoZXIgdG8gc21hbGwgY2xhaW1zIGZvciBhbnl0aGluZyB5b3UgcGFpZCBoZXIgZm9yIGhlciAiY29hY2hpbmciIHNlcnZpY2VzLiBZb3Ugc2hvdWxkIGFzayAvci9sZWdhbGFkdmljZSBvciBjb25zdWx0IGEgbGF3eWVyLiBUaGlzIHN0b3J5IHJlYWxseSBidXJucyBtZSB1cCBpZiB5b3UgY2FuIHRlbGwhCldoeSBpcyB0aGVyZSA1IHNoYXJlZCBjYXJkcyBpbiBwb2tlcj8KSSBwZXJzb25hbGx5IGJlbGlldmUgYm90aCBwYXJ0aWVzIGFuc3dlciB0byB0aGUgc2FtZSBjb3Jwb3JhdGUgcG93ZXJzIGFuZCBoYXZlIGRvbmUgc28gZm9yIGRlY2FkZXMuLiAKSGUgd2lsbCB0aHJvdyB0aGVtIGF0IHlvdSwgZGVzdHJveWluZyB5b3VyIGNvdmVyIGRlcGVuZGluZyBvbiBob3cgYmlnIGl0IGlzLiAKSGF2aW5nIGJlZW4gaW4gY3VzdG9keSBzaW5jZSBKdW5lIDYsIE5pY2hvbHMnIHRlcm0gd2lsbCBleHBpcmUgb24gU2VwdGVtYmVyIDUuIApCdXQgYWxsIG9mIHRoZXNlIGFjdG9ycyBhcmUgaW4gdGhlIHVuaW9uIGFuZCBnZXQgdGhlaXIgdW5pb24gcGF5IGFuZCBkdWVzIG9yIHRoZXkgZG9uIGRvIHRoZSBqb2IuIFllcyB0aGV5IGNhbiBuZWdvdGlhdGUgYnV0IHRoYXQga2luZGEgd2hlcmUgdGhlIGxvZ2lzdGljcyBjb21lIGludG8gcGxheSB0b28uIERlcGVuZGluZyBvbiBidWRnZXQgYW5kIHRpbWluZyB0aGlzIGp1c3Qgc2ltcGx5IHdhcyBhIGdyZWF0IGlkZWEgdGhhdCB3YXNuIGdvaW5nIHRvIGJlIGRvYWJsZSBmb3IgdGhpcyBidWRnZXQgYW5kIHRoZSB0aW1lIGNvbnN0cmFpbnRzLiAKQnkgbm8gbWVhbnMgYW0gSSBzYXlpbmcgdGhhdCBjb25qdWdhdGUgZG9lc24gd29yaywgYmVjYXVzZSBpdCBkb2VzLCBJIGp1c3QgZmluZCBvdGhlciBwcm9ncmFtbWluZyBzdHlsZXMgd29yayBiZXR0ZXIgYW5kIG1ha2UgbW9yZSBzZW5zZSBmcm9tIGFuIGV4ZXJjaXNlIHNjaWVuY2UgcGVyc3BlY3RpdmUuIApHcnVlaHVudGVyIHUKQmUgY29uZmlkZW50IGFuZCBkZW1hbmQgYSB0YWJsZSBjaGFuZ2UgaWYgeW91IG5lZWQgdG8uIApJbiBhIHBlcmZlY3Qgd29ybGQsIHRoZSBhYmlsaXR5IHRvIGNvbXBsZXRlIGEgUHZQIHBpbm5hY2xlIHF1ZXN0IG9yIGJvdW50eSBzaG91bGQgYmUgc29tZXRoaW5nIGFuIGluZGl2aWR1YWwgcGxheWVyIGNhbiBkbyBvbiB0aGVpciBvd24sIGFuZCBpbiBhbnkgcGxheWxpc3QuIEl0IHNob3VsZCBiZSBjaGFsbGVuZ2luZyBlbm91Z2ggdGhhdCBtb3N0IHBsYXllcnMgd2lsbCBub3QgZWFzaWx5IGNvbXBsZXRlIGl0LCBidXQgaXQgc2hvdWxkIGFsc28gcHJvdmlkZSBlbm91Z2ggb2YgYSBtZWFzdXJlIG9mIHByb2dyZXNzaW9uIHRoYXQgcGxheWVycyBjYW4gZmVlbCBsaWtlIGl0IHBvc3NpYmxlIGlmIHRoZXkgd29yayB0b3dhcmRzIGl0LiBUZWxsIG1lIHRvIGVhcm4gMTAwIEZpZ2h0IE1lIG1lZGFscywgb3Igd2hhdGV2ZXIgaXQgaXMsIGFuZCB0aGVuIGxldCBtZSBmaWd1cmUgb3V0IGhvdyB0byBnZXQgdGhlcmUsIGV2ZW4gaWYgaXQgbWF5IHNlZW0gZGF1bnRpbmcgYXQgZmlyc3QuIE1heWJlIEkgZG8gdGhhdCBpbiBUcmlhbHMsIG1heWJlIGluIFF1aWNrcGxheSwgbWF5YmUgd2l0aCBhIGdyb3VwIG9mIGZyaWVuZHMsIG1heWJlIHNvbG8uIEJ1dCBJIGhhdmUgdGhlIG9wcG9ydHVuaXR5IHRvIGdldCB0aGVyZSB3aXRob3V0IGJlaW5nIHBlbmFsaXplZCBmb3IgdGhpbmdzIGJleW9uZCBteSBjb250cm9sLgpJIGtlZXAgYSBsb3QgbW9yZSBsaXF1aWQgY2FzaCB0aGFuIG1vc3QgcGVvcGxlIHdpdGggbXkgaW5jb21lLCBhbmQgSSdkIHByb2JhYmx5IHRlY2huaWNhbGx5IGJlIGJldHRlciBvZmYgaWYgSSBpbnZlc3RlZCBtb3JlIG9yIHBhaWQgb2ZmIGRlYnQgbW9yZSBhZ2dyZXNzaXZlbHksIGJ1dCBJIGtub3cgdGhhdCBhIGJhZCBtb250aCBvciBldmVuIGEgYmFkIHF1YXJ0ZXIgd29uJ3QgbGVhdmUgbWUgbGl2aW5nIG9mZiBjcmVkaXQgY2FyZHMuLiAKVGhlbi4gClRoZSBXb3JsZCBQb2tlciBUb3VyIGhvc3RzIHNldmVyYWwgVVMgdG91ciBzdG9wcyBpbiBMYXMgVmVnYXMsIEF0bGFudGljIENpdHkgYW5kIGluIEZsb3JpZGEgLiBhbm90aGVyIFN0YXRlIHdpbGwgYmUgYWRkZWQgdG8gdGhlIG1peCBpbiAyMDE1IGF0IHRoZSBXUFQgd2lsbCBtYWtlIGl0J3MgZmlyc3QgZXZlciBzdG9wIGluIE9rbGFob21hIGFzIHRoZSBDaG9jdGF3IENhc2lubyBSZXNvcnQgaW4gRHVyYW50LCBsb2NhdGVkIDkwIG1pbGVzIG5vcnRoIG9mIERhbGxhcywgVGV4YXMsIHdpbGwgaG9zdCBzb21lIG9mIHRoZSBiaWdnZXN0IG5hbWVzIGluIHBva2VyIGFzIFdQVCBjYW1lcmFzIHdpbGwgc2V0dXAgc2hvcCBmcm9tIEp1bHkgMzEgdG8gQXVndXN0IDMsIDIwMTUsIG9uZSBvZiB0aGUgZmlyc3QgZXZlbnQgYW5ub3VuY2VkIGZvciB0aGUgV1BUJ3MgMTR0aCBzZWFzb24uCllvdSBtaWdodCBiZSByaWdodCwgSSBoYXZlbiBwYWlkIGF0dGVudGlvbiB0byB0aGlzIHNvcnQgb2YgcmVzZWFyY2guIEJ1dCBpZiB5b3UgaGF2aW5nIGxhcmdlIGVub3VnaCBzZWFyY2ggc2V0LCB5b3UgbWlnaHQgbm90IGJlIGFibGUgdG8gZ3VhcmFudGVlIHRoYXQgeW91IGV2ZXIgZmluZCBvbmUgb2YgdGhlIHNvbHV0aW9ucy4gT3IgZXN0aW1hdGUgdGhlIHRpbWUgd2hpY2ggaXQgd2lsbCB0YWtlLiBZb3UgY291bGQgdXNlIG90aGVyIHRyaWNrcywgaW5jbHVkaW5nIHRyaWFsIGFwcHJvYWNoIC91L3Bvbmllc2xvdmVraXR0ZW5zIG1lbnRpb25lZCB3aGVyZSBBSSBqdXN0IHJ1bnMgcHJvZ3JhbXMgd2l0aCB0aW1lb3V0IChzaW1pbGFyIHRvIGhvdyBwZW9wbGUgZG8hKS4KUmFpbiwgaGFpbCBvciBzdW4sIHRoZXkgd2lsbCBiZSB0aGVyZS4gVGhpcyBpcyBhIGZyZWUgZXZlbnQuIApJdCdzIGFsc28gZGlmZmljdWx0IHRvIG9idGFpbiBleGFjdCBudW1iZXJzIG9uIGhvdyBtYW55IHRyYW5zYWN0aW9ucyBtYXkgdGFrZSBwbGFjZS4gClN1ZmZpY2UgdG8gc2F5IHRoYXQgImRhZGEiIGVpdGhlciB3YXMgb3Igd2FzbiBmb3VuZCBieSBhbiBhY2NpZGVudGFsIGdyYXppbmcgdGhyb3VnaCBMYXJvdXNzZSBieSBUcmlzdGFuIFR6YXJhIGluIEZlYnJ1YXJ5IDE5MTYuIApUaGUgRHVlIFByb2Nlc3MgQ2xhdXNlIG9mIHRoZSBGb3VydGVlbnRoIEFtZW5kbWVudCwgYXMgaW50ZXJwcmV0ZWQgaW4gQnJhZHksIG1ha2VzIHRoZSBnb29kIG9yIGJhZCBmYWl0aCBvZiB0aGUgU3RhdGUgaXJyZWxldmFudCB3aGVuIHRoZSBTdGF0ZSBmYWlscyB0byBkaXNjbG9zZSB0byB0aGUgZGVmZW5kYW50IG1hdGVyaWFsIGV4Y3VscGF0b3J5IGV2aWRlbmNlLiAKVGhlIHByb2JhYmlsaXR5IG9mIGdldHRpbmcgYW4gYWNlIHdoZW4gb25lIGNhcmQgaXMgcmFuZG9tbHkgcGlja2VkIGZyb20gYSBwYWNrIGlzIDQvNTIgPSAxLzEzLiAKSXQgd29uJ3QgcGF5IHRvIGtub3cgaG93IHRvIGNhbGN1bGF0ZSBwb3Qgb2RkcyBpZiB5b3UncmUgcGxheWluZyBib3R0b20gb2YgdGhlIGJhcnJlbCBoYW5kcyB0byBiZWdpbiB3aXRoLiAKUG9zdHVyYWwgaW5zdGFiaWxpdHkgKFBJKSBpcyBhbiBpbXBvcnRhbnQgcmlzayBmYWN0b3IgZm9yIGZhbGxzLCBlc3BlY2lhbGx5IGluIHRoZSBmcmFpbCBvbGRlciBwb3B1bGF0aW9uLiBJbiB0aGlzIHN0dWR5LCB3ZSBpbnZlc3RpZ2F0ZWQgdGhlIGltcGFjdCBvZiB2aXRhbWluIEQgZGVmaWNpZW5jeSBvbiBQSSBpbiBhIHNhbXBsZSBvZiBjb21tdW5pdHkgZHdlbGxpbmcgb2xkZXIgc3ViamVjdHMuIApXb3JsZCBMYXJnZXN0IFBhc3NlbmdlciBQbGFuZSBBcnJpdmVzIEF0IE1JQUFpcmJ1cyBBIDM4MCBMdWZ0aGFuc2EgTGFuZHMgQXQgTUlBMTRBZnRlciBsYW5kaW5nLCB0aGUgcGxhbmUgdGF4aWVkIHRvIHRoZSBnYXRlIHVuZGVyIHdhdGVyIGNhbm5vbnMgcHJvdmlkZWQgYnkgdGhlIE1pYW1pIERhZGUgRmlyZSBEZXBhcnRtZW50LiAoQ0JTNClBZnRlciBsYW5kaW5nLCB0aGUgcGxhbmUgdGF4aWVkIHRvIHRoZSBnYXRlIHVuZGVyIHdhdGVyIGNhbm5vbnMgcHJvdmlkZWQgYnkgdGhlIE1pYW1pIERhZGUgRmlyZSBEZXBhcnRtZW50LiAoQ0JTNCkKQSBGdWxsIFZlcnNpb24gQWN0aW9uIGdhbWUgZm9yIFdpbmRvd3MgLiAKV2VsbCBvdXIgZmlnaHQgZGlkbid0IGxhc3QgbG9uZywgaGUgYWRtaXR0ZWQgdGhhdCBoZSBoYWQgZmxpcnRlZCB3aXRoIHRoZSBnaXJscyBidXQgc3dvcmUgb24gaGlzIGxpZmUgdGhhdCBoZSBuZXZlciBkaWQgYW55dGhpbmcgd2l0aCB0aGVtLiBXaGljaCBJIG5ldmVyIHRydWx5IGJlbGlldmVkLiBIZSBzYWlkIHRoYXQgaGUgc3VjY3VtYmVkIHRvIHRoZSBnYW1ibGluZyBsaWZlIGFuZCB3YW50ZWQgcGVvcGxlIHRvIGxpa2UgaGltIHNvIGhlIHdlbnQgYW5kIHBhcnRpZWQgd2l0aCB0aGVtLiAKS29yZWEgQ0RTIHByZW1pdW0gZmVsbCBmcm9tIDc2YnAgaW4gMjAxNyB0byAyOWJwIHdoaWNoIGlzIHNpZ25pZmljYW50IGFuZCBkZWZpbml0ZWx5IG5ld3N3b3J0aHlDRFMgcHJlbWl1bSBpcyBzZWVuIGFzIGEgY3JpdGVyaW9uIGZvciBjYWxjdWxhdGluZyBmb3JlaWduIGN1cnJlbmN5IGZ1bmRpbmcgc28gaXQgcG9zaXRpdmVseSBpbXBhY3RzIGRvbWVzdGljIGNvbXBhbmllcy4gV2hpY2ggaXMgYWxzbyBuZXdzd29ydGh5LgpDb21wdXRlcnMgQXJ0aWNsZXMgIEFwcmlsIDYsIDIwMDgKVGhlIGFtb3VudCBvZiBuYXR1cmFsIGxpZ2h0IGlsbHVtaW5hdGluZyB0aGUgZ2FtaW5nIGZsb29ycyBzZW5kcyBhbiBpbW1lZGlhdGUgbWVzc2FnZSB0aGF0IGdvbmUgYXJlIHRoZSBkYXlzIG9mIHRoZSBkYXJrLCBzbW9reSBjYXNpbm8gaG90ZWxzIHRoYXQgbWFrZSB1cCBtdWNoIG9mIHRoZSBwb3B1bGFyIGdhbWJsaW5nIGhvdCBzcG90IExhcyBWZWdhcywgTmV2YWRhLiBJbiBWYW5jb3V2ZXIsIGF0IGxlYXN0LCB0aGlzIG5ldyBnZW5lcmF0aW9uIG9mIGNhc2lubyByZXNvcnQgaXMgbGlnaHQsIGJyaWdodCBhbmQgb2ZmZXJzIGJlYXV0aWZ1bCB2aWV3cyBvZiBWYW5jb3V2ZXIuIFBsYWNlIGNhbiBzaW1wbHkgd2FsayBhY3Jvc3MgdGhlIGNhc2lubydzIHNlY29uZCBmbG9vciB0byBhIGJyaWRnZSBsaW5raW5nIFBhcnEgdG8gR2F0ZSA2IG9mIHRoZSBzdGFkaXVtLiBUaGUgY2FzaW5vLCB3aGljaCBoYXMgNjAwIHNsb3QgbWFjaGluZXMsIDc0IHRhYmxlIGdhbWVzLCBwb2tlciByb29tcyBhbmQgMTEgVklQIHNhbG9ucyBkZXNpZ25lZCBmb3IgcHJpdmF0ZSBnYW1pbmcsIG9wZW5zIEZyaWRheSwgU2VwdC4gd2l0aCBhIGNlcmVtb25pYWwgcm9sbCBvZiB0aGUgZGljZS4KQmVjYXVzZSBhZnRlciBhbiBpbmNpZGVudCBsaWtlIHRoYXQgYm90aCBvZiB5b3VyIGNvcnRpc29uZSBsZXZlbHMgYXJlIHJlYWxseSBoaWdoLiAKSXQgY29zdHMgYWJvdXQgNDAgZG9sbGFycyBmb3IgMzAgbWludXRlcy4gCllvdSBuZWVkIGxvdHMgb2Ygc3RhaW5zLCBmb29kLCBwaXRzLCBibG9vZCwgZG9lc24gbWF0dGVyLiAKU28sIHlvdSBhbHJlYWR5IG9wdGVkIHRvIGZvbGQuIEp1c3QgbWFrZSBzdXJlIHRoYXQgeW91IGRvIG5vdCBzaG93IHlvdXIgY2FyZHMuIEl0IGhhcyB0aGUgc2FtZSBjb25jZXB0IGFzIG91ciAyIHRpcCAgIGl0IGNhbiBnaXZlIHNvbWUgcGxheWVycyBhbiBhZHZhbnRhZ2UuIApCdXQgaW4gdGhlIHBva2VyIHdvcmxkLCBpdCBpcyBvZnRlbiB2aWV3ZWQgYXMgYSBnb29kIGx1Y2sgY2hhcm0uLiAKSGUgZGlkbnQgcHV0IG1lIGluIHRoYXQgc2l0dWF0aW9uLCBteSBwYXJlbnRzIGRpZC4gClNvbWUgYW54aWV0eSBjb21lcyBmcm9tIHRoZSBpZGVhIHRoYXQgdGhlIHdheSBZT1UgZG8gc29tZXRoaW5nIGlzbiB0aGUgd2F5IGl0IHNob3VsZCBsb29rLiBDaGFuZ2UgdGhhdCBiZWxpZWYgc28gdGhhdCB0aGUgd2F5IHlvdSBkbyBpdCBJUyB0aGUgd2F5IGl0IHNob3VsZCBiZSBkb25lLiBOb3QgYnkgZXZlcnlvbmUgbmVjZXNzYXJpbHksIGJ1dCBieSB5b3UuIApZZWFoLCBJIGdldCB0aGF0LiBJIGp1c3QgYW5ub3llZCB0aGF0IGl0IGFwcGFyZW50bHkgYSBjb250cm92ZXJzaWFsIG9waW5pb24gdGhhdCB2aW9sZW5jZSBzdWNrcy4gSXQgbm90IGEgYmluYXJ5IGlzc3VlLiAKSXQgd2FzIGludGVuZGVkIGZvciBhc3Ryb25vbWljYWwgYW5kIG1lZGljYWwgYWNoaWV2ZW1lbnQsIGFuZCB3YXMgZXN0YWJsaXNoZWQgYnkgQW5uZSBFbWlsZSBDbGFyYSBHb3VnZXQgKGQuIDE4OTEpLCB0aGUgd2lmZSBvZiBNYXJjIEd1em1hbiwgaW4gbWVtb3J5IG9mIHRoZWlyIHNvbiwgUGllcnJlIEd1em1hbi4gCkl0IG1haW5seSBjb25zaXN0cyBvZiB3aG9sZSBmb29kcyBpbmNsdWRpbmcgbWVhdCwgdmVnZXRhYmxlcywgZnJ1aXQsIHdhdGVyIGFuZCByaWNlLiAKTXlidXN0ZXJzd29yZCAgIDE0IHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ28KMTEyNCBjb2RlIGNpdmlsKS4gRG9uYywgbm9ybWFsZW1lbnQgLCB1biBlbmZhbnQgbmUgZGV2cmFpdCBwYXMgdHJlIGVuIG1lc3VyZSBkJ2FjaGV0ZXIgdW5lIGJhZ3VldHRlIGRlIHBhaW4uIFBvdXIgdW4gYWN0ZSBhdXNzaSBpbXBvcnRhbnQgcXVlIGxlIG1hcmlhZ2UgKGVuIHNlIHBsYWFudCBkYW5zIGxlIGRvbWFpbmUgZHUgZHJvaXQgY2l2aWwgbm90YW1tZW50IGNvbXB0ZSB0ZW51IGRlcyBjb25zcXVlbmNlcyBqdXJpZGlxdWVzIHF1ZSBsZSBtYXJpYWdlIGVudHJhbmUpLCBpbCBhcHBhcmFpdCBhc3NleiBub3JtYWwgZCdhdHRlbmRyZSBxdWUgbGVzIGluZGl2aWR1cyBzb2llbnQgbWFqZXVycy4uIApUaGUgcGF5b3V0IHN0cnVjdHVyZSBpcyBzZXQgdXAgdG8gYXdhcmQgYWxsIHRoZSBmaW5hbGlzdHMsIHdpdGggZmlyc3QgcGxhY2UgYmVpbmcgYXdhcmRlZCBtb3JlIHRoYW4gdGhlIHNlY29uZCBhbmQgc2Vjb25kIG1vcmUgdGhhbiB0aGUgdGhpcmQsIGV0Yy4uIApNcyBNdXJwaHkgaXMgdGhlIGZvdW5kZXIgb2YgR2Fsd2F5IHR3byBuZXdlc3QgYnJpZGdlIGNsdWJzLCBHYWx3YXkgRWR1Y2F0aW9uIENlbnRyZSBCcmlkZ2UgQ2x1YiBpbiBDbHVhaW4gTWh1aXJlLCBNb25pdmVhIFJvYWQsIGFuZCBGbGFubmVyeSBCcmlkZ2UgQ2x1YiBpbiBGbGFubmVyeSBIb3RlbCBvbiB0aGUgRHVibGluIFJvYWQuIEVhY2ggY2xhc3MgY29uc2lzdHMgb2YgdHVpdGlvbiwgc2FtcGxlIGdhbWVzIG9uIGEgJ2JpZyBicmlkZ2UgYm9hcmQnLCBwcmFjdGljZSBnYW1lcywgYSBjb21wcmVoZW5zaXZlIGhhbmQgb3V0IHdpdGggc2VsZiBjb3JyZWN0aW5nIGV4ZXJjaXNlcywgcmVjb21tZW5kZWQgcmVhZGluZywgYW5kIHdlYnNpdGVzLi4gClRoZXkgd2VyZSB0ZXN0aW5nIGl0cyBjb3JyZWN0aW9uIGNhcGFiaWxpdGllcyB0byBzdWRkZW4gYW5kIHVuZXhwZWN0ZWQgaW1wYWN0cy4gKExpa2UgaWYgYW4gYW5pbWFsIG9yIGNoaWxkIHdlcmUgdG8gcnVuIGludG8gaXQuIAowMyBNYXkuIENsaWNrIHRvIGRvd25sb2FkLiAKSG93ZXZlciwgYXMgeW91IGtub3csIG91ciBjb25zdGFudCByZWZyYWluIGlzIHRoYXQgcG9saWN5IG11c3QgYmUgYXBwbGllZCBjb250ZXh0dWFsbHkuIApBIHRhcmdldCB3aXRoIGxldmVsIDUgb3IgNiBhcm1vciBzaG91bGQgcmVjZWl2ZSB2ZXJ5IGxpdHRsZSBvciBubyBhaW0gcHVuY2guIApBbnl3YXksIGhlcmUgaXMgdGhlIHJhYmJpdCBhbmQgY2hpY2tlbiBJIHRyaWVkIGZyb20gaGVyIHNpdGU6LiAKRG9lcyBhbnlvbmUgaGF2ZSBhbnkgc3VnZ2VzdGlvbnMsIG9yIGRvIHlvdSB0aGluayBJIGJlIGJldHRlciBvZmYganVzdCBnb2luZyBmb3IgdGhlIEFscGhhIEp1bm8/IEFuYWxvZyBvciBkaWdpdGFsIGlzbiBpbXBvcnRhbnQgdG8gbWUgZm9yIHRoaXMsIGp1c3QgbG9va2luZyBmb3IgZ29vZCBzb3VuZHMuLiAKRm9yIGZ1cnRoZXIgY29udGV4dDsgc2hlIGlzIHBldHJpZmllZCBvZiBzcGlkZXJzLiBUaGUga2luZCB5b3UgY291bGQgY2h1Y2sgMS41IG1ldHJlIGxvZ3MgaW4uQXMgd2Ugd2F0Y2hlZCB0diB0aGUgZmlyZSBkaW1tZWQgc28gSSB3ZW50IG91dCBhbmQgZ3JhYmJlZCBhIG5ldyBsb2csIGR1c3RpbmcgYnVncyBhbmQgd2hhdCBub3Qgb2ZmIHRoZSBsb2cgKGp1c3QgYSBmYWN0IHRoZXJlJ3MgZ29ubmEgYmUgYnVncyBhbmQgc3BpZGVycyBhcm91bmQgaW4gYSBnaWFudCBwaWxlIG9mIHdvb2QpSSB0aHJldyB0aGUgbG9nIG9uIGFuZCBhbGwgd2FzIGdvb2QgZm9yIGFib3V0IDUgbWludXRlcy4gCkFzIG9idmlvdXMgYXMgdGhlc2UgcG9pbnRzIHNvdW5kLCB0aGV5IGFyZSBlYXN5IHRvIGZvcmdldC4gU29tZXRpbWVzIGl0IGNhbiBiZSBoZWxwZnVsIHRvIHNldCBhbiBhbGFybSBvciB1c2UgYSBjZXJ0YWluIHRpbWUgb2YgZGF5IHRvIHJlbWluZCB5b3UgaXQncyB0aW1lIHRvIHRha2UgYSBicmVhay4gCkxvb2tpbmcgZm9yIGZlZWRiYWNrIG9uIGRyYWZ0ClBlb3BsZSBpbiBTd2VkZW4gYXJlIGhpZGluZyBjYXNoIGluIHRoZWlyIG1pY3Jvd2F2ZXMgYmVjYXVzZSBvZiBhIGZhc2NpbmF0aW5nClR5cGljYWxseSwgeW91IHdvdWxkIHRoaW5rIHRoZSBhbnN3ZXIgd291bGQgYmUgbm8sIGJ1aWxkaW5nIGFuIGVtcGlyZSBvZmYgb2YgcGVvcGxlJ3Mgc2VsZiBkZXN0cnVjdGl2ZSBkZXNpcmUgdG8gc21va2UgbWV0aCBpcyBhIHRlcnJpYmxlIHRoaW5nLiAKSW4gc3BpdGUgb2YgdGhlc2UgZ3JheSBhcmVhcywgbWlsbGlvbnMgaW4gdGhlIFUuIFMuIApUaGlzIERWRCBjb21lcyB1cCB3aXRoIGluIGRlcHRoIGFuYWx5c2lzIGFuZCBkZXRhaWxlZCBleHBsYW5hdGlvbnMgb2YgZGlmZmVyZW50IGJldHRpbmcgbW92ZXMuIApUaGlzIGVsZWN0aW9uIGlzIGEgY3JpdGljYWxseSBpbXBvcnRhbnQgb25lIGluIEJvdWxkZXIncyBoaXN0b3J5LiBJZiBhcHByb3ZlZCBieSB2b3RlcnMsIGJhbGxvdCBxdWVzdGlvbnMgMzAwIGFuZCAzMDEgd2lsbCBmdW5kYW1lbnRhbGx5IGNoYW5nZSBvdXIgY2l0eSBjaGFydGVyIGFuZCBob3cgb3VyIGxvY2FsIGdvdmVybm1lbnQgZnVuY3Rpb25zIGZvciBnZW5lcmF0aW9ucyB0byBjb21lLiAKU25vdyBDb2xiZWNrIG9mIE5lbHNvbiwgY28gb3duZXIgb2YgWm9yYmEgQmVhY2ggSG9tZXMsIGJvbmRlZCB3aXRoIFR1bHVtIGFzIHRoZSBkYXVnaHRlciBvZiBmb3JtZXIgaGlwcGllcyAobXVzaWNpYW4gYW5kIHBhaW50ZXIgc3RlcCBtb20pIHdobyBzYWlsZWQgaW50byB0aGlzIHBhcmFkaXNlIGluIHRoZSBlYXJseSAyMDAwcy4gVGhleSBib3VnaHQgcHJvcGVydHkgYW5kIHNwZW50IHdpbnRlcnMgY2FtcGluZyBvbiB0aGUgYmVhY2gsIGV2ZW50dWFsbHkgYnVpbGRpbmcgcmVudGFsIGFjY29tbW9kYXRpb25zLgpETSBhbGxvd2VkIGl0IGJ1dCB0b2xkIGhpbSB0aGF0IHRoZSB3aG9sZSBwb3Rpb24gd291bGQgaGF2ZSB0byBiZSBkb3duZWQgZm9yIGl0IHRvIHdvcmsgYXQgYWxsLiAKTWFyaWxsYSByZWNlaXZlZCB0aGlzIHN3ZWV0IG1lc3NhZ2UgYWZ0ZXIgRGF2aWQncyBkZWF0aCwgImJlY2F1c2Ugb2YgaGltIChEYXZpZCksIGhpcyBleGFtcGxlLCBoaXMgaG9uZXN0eSwgaGlzIHBlcnNvbmFsaXR5ICwgdGhlIHRoaW5ncyBoZSBzYWlkLCBkaWRuJ3Qgc2F5LCBoaXMgc3RvcmllcyBhbmQgcmVhbCBsaWZlIGV4cGVyaWVuY2VzICBoZSBoYWQgdGhlIGJpZ2dlc3QgaW5mbHVlbmNlIG9uIHVzIHRvIHJldHVybiB0byBjaHVyY2ggYW5kIGdldCB0byB0aGUgdGVtcGxlIHRvIGJlIHNlYWxlZC4gIHdlJ3JlIFNPIHN0aW5raW5nIGdyYXRlZnVsIGl0IHdhcyBEYXZlIHdobyB3YXMgb3VyIG1pc3Npb25hcnkuIi4gCklUIGd1eSBoZXJlLiAKUmlnaHQgYXJvdW5kIDY4ayBtaWxlcy4gCiBhbmQgdGhhdCB0aGUgcG9pbnQgb2YgYnVzaW5lc3Mgc2hvdWxkbiBiZSBwcm9maXQgYnV0IHByb2R1Y3RzICBuZWNlc3NhcnksIGVjb2xvZ2ljYWxseSBzb3VuZCwgcHJvZHVjZWQgYXQgYSBsaXZhYmxlIHdhZ2UgaW4gY2xlYW4gYW5kIHNhZmUgY29uZGl0aW9ucyBwcm9kdWN0cyAgdGhlbiB3ZSBjYW5ub3QgcmVmb3JtIHRoZSBzeXN0ZW0uLiAKSXQgd291bGQgaGF2ZSBjYXVzZWQgYSB3b3JsZHdpZGUgdHJhdW1hIGluIGh1bWFuIHRoaW5raW5nIHRoYXQgY291bGQgaGF2ZSByaXBwbGVkIHRocm91Z2ggZ2VuZXJhdGlvbnMgb2YgcGVvcGxlIGluIHRoZSBmb3JtIG9mIHN0cmFuZ2UgdHJhZGl0aW9ucyBhbmQgcmVsaWdpb3VzIGJlbGllZnMuIEEgbG90IG9mIHJlbGlnaW91cyB0ZXh0cyBoYXZlIGFjY291bnRzIG9mIG15dGhpY2FsIHNvdW5kaW5nIGZsb29kLCBmaXJlc3Rvcm0sIG9yIHNreSBibGFja2VuaW5nIGV2ZW50cy4KIkRhdGEgZnJvbSB0aGUgYWlycGxhbmUncyBmbGlnaHQgZGF0YSByZWNvcmRlciAoRkRSKSBzaG93ZWQgdGhhdCB0aGUgYWlycGxhbmUncyByaWdodCBlbGV2YXRvciB3YXMgcG9zaXRpb25lZCBmdWxsIHRyYWlsaW5nIGVkZ2UgZG93biAoVEVEKSB3aGVuIHRoZSBmbGlnaHQgY3JldyBmaXJzdCBwb3dlcmVkIHVwIHRoZSBhaXJwbGFuZSBvbiB0aGUgZGF5IG9mIHRoZSBhY2NpZGVudCBhbmQgcmVtYWluZWQgdGhlcmUgdGhyb3VnaG91dCB0aGUgYWNjaWRlbnQgc2VxdWVuY2UuIEFuIGFpcnBsYW5lIHBlcmZvcm1hbmNlIHN0dWR5IChiYXNlZCwgaW4gcGFydCwgb24gRkRSIGRhdGEpIGNvbmZpcm1lZCB0aGF0IHRoZSBhaXJwbGFuZSBkaWQgbm90IHJlc3BvbmQgaW4gcGl0Y2ggd2hlbiB0aGUgY2FwdGFpbiBwdWxsZWQgb24gdGhlIGNvbnRyb2wgY29sdW1uLiAKTWljaGVsbGUgTGljYXRhIGNsaW1iZWQgYSBuYXJyb3csIHdpbmRpbmcgc3RhaXJjYXNlLCBwYXN0IHdhbGxzIGNvdmVyZWQgd2l0aCBwaG90b2dyYXBocyBvZiBuYWtlZCBnaXJscy4gQXQgdGhlIHRvcCBvZiB0aGUgc3RhaXJ3ZWxsIHdhcyBhIHZhc3QgbWFzdGVyIGJlZCBhbmQgYmF0aCwgd2l0aCBjcmVhbSBjb2xvcmVkIHNoYWcgY2FycGV0aW5nIGFuZCBhIGhvdCBwaW5rIGFuZCBtaW50IGdyZWVuIHNvZmEuCkxhc3QgbW9udGgsIE1hc3NhY2h1c2V0dHMgRGVtb2NyYXQgQmFybmV5IEZyYW5rIGFuZCBDYWxpZm9ybmlhIFJlcHVibGljYW4gSm9obiBDYW1wYmVsbCBpbnRyb2R1Y2VkIGEgYmlsbCB0byBsaWNlbnNlIGFuZCByZWd1bGF0ZSBJbnRlcm5ldCBnYW1ibGluZy4gSXQgcmVtYWlucyBpbiBjb21taXR0ZWUuIApFdmVyeSBodW1hbiBoYXMgYmFzaWMgd2FudHMsIGFuZCB0aGUgcHJpbWFyeSBvbmUgaXMgdG8gYmUgbG92ZWQuIApEbyBib3RoIHRoaXMgcHJvY2VzcyByZWd1bGFybHksIHByZWZlcmFibHkgd2hlbiB5b3Ugc3RlcCBvdXQgb2YgdGhlIHNob3dlciwgYXMgbmFpbHMgYXJlIHNvZnRlciB0byBjdXQgYW5kIGZpbGUuLiAKVGhhbmsgeW91IGZvciB5b3VyIGludGVyZXN0IGluIGluZyBhdCBVQ0xBIEJydWluIERheSBmb3IgYWRtaXR0ZWQgZnJlc2htZW4hIFdlIGFudGljaXBhdGUgYXBwcm94aW1hdGVseSAxOCwwMDAgYWRtaXR0ZWQgZnJlc2htZW4gc3R1ZGVudHMgYW5kIHRoZWlyIGd1ZXN0cyB3aWxsIHZpc2l0IHRoZSBjYW1wdXMsIGFuZCB5b3VyIGhlbHAgaXMgdml0YWwgdG8gbWFraW5nIHRoaXMgZGF5IGEgc3VjY2Vzcy4gVUNMQSBCcnVpbiBEYXkgZ2l2ZXMgYWRtaXR0ZWQgZnJlc2htZW4gc3R1ZGVudHMgdGhlIGNoYW5jZSB0byB0b3VyIHRoZSBjYW1wdXMsIGhlYXIgZnJvbSBwcm9mZXNzb3JzLCBtZWV0IGN1cnJlbnQgc3R1ZGVudHMgYW5kIGV4cGVyaWVuY2Ugd2hhdCBsaWZlIGlzIGxpa2UgYXMgYSBCcnVpbi4gClNvb24gYWZ0ZXIsIHRoZXkgbW92ZWQgdG8gQ2VkYXIgQ2l0eSB3aGVyZSB0aGV5IGJvdGggYXR0ZW5kZWQgU291dGhlcm4gVXRhaCBVbml2ZXJzaXR5IChTVVUpLiAKU2V2ZXJhbCB5ZWFycyBhZ28gSSB1c2VkIHRvIHdhdGNoIGNhcmVmdWxseSB0aGUgeW91bmcgT3JhbmcgT3V0YW5nIGF0IHRoZSBab29sb2dpY2FsIEdhcmRlbnMsIGFuZCBJIGFtIHF1aXRlIHN1cmUgdGhhdCBzaGUgbWFuaWZlc3RlZCBhIHNlbnNlIG9mIHRoZSBsdWRpY3JvdXMuIApQZXRlcnNvbidzIGJpcnRoZGF5Li4gClRoZSAicHJvIGJ1c2luZXNzIiBlbGl0ZSB3YWl0cyBmb3IgdGhlc2UgInNob2NrcyIgdG8gdGhlIHN5c3RlbSBzbyB0aGV5IGNhbiBydXNoIGluLCBtb3ZlIGV2ZXJ5b25lIG91dCBvZiB0aGUgd2F5LCBhbmQgc3RhcnQgImZyZWUgbWFya2V0IiBjYXBpdGFsaXNtIHdpdGggYSBjbGVhbiBzbGF0ZS4gQWNjb3JkaW5nIHRvIEtsZWluLFRoZSBpZGVhIG9mIGV4bG9pdGluZyBjcmlzaXMgYW5kIGRpc2FzdGVyIGhhcyBlZW4gdGhlIG1vZHVzIG9wZXJhbmRpIG9mLiB0aGlzIGZ1bmRhbWVudGFsaXN0IGZvcm0gb2YgY2FwaXRhbGlzbSAodGhhdCkgaGFzIGFsd2F5cyBuZWVkZWQgZGlzYXN0ZXJzIHRvIGFkdmFuY2UuIApTbyBJIGFjY2VwdGVkIHRoZSBMb3MgQWxhbW9zIG9mZmVyLCB3aGljaCB3YXMgY29uZGl0aW9uYWwgb24gbXkgYmVpbmcgYWJsZSB0byBnZXQgYSBzbyBjYWxsZWQgYSByaWdvcm91cyBzZWN1cml0eSBjbGVhcmFuY2UgbmVlZGVkIGJ5IGFueW9uZSB3b3JraW5nIGluIHRoZSB0ZWNobmljYWwgZGl2aXNpb25zIG9mIHRoZSBsYWJvcmF0b3J5Li4gCldBIHNob3dzIGhvdyB0byBiZSBwb2tpZXMKRXZlci4uIApHcmVhdCBPcmlzYSByZWFkcyB0aGUgc2l0dWF0aW9uIGFuZCBmaW5kcyB0aGUgYmVzdCBwb3NzaWJsZSBzcG90IHRvIGJvdGggaGVyIGFuZCBoZXIgdGVhbW1hdGVzLCBidXQgc29tZXRpbWVzIGluIGNoYW90aWMgc2l0dWF0aW9ucyB3aGVyZSBPcmlzYSBuZWVkcyBhIHF1aWNrIHByb3RlY3Rpb24gZm9yIGhlcnNlbGYgYW5kIG5lYXJlc3QgdGVhbW1hdGVzIHRvIGF2b2lkIGRlYXRocyBhbmQgaGVscCBzZWN1cmUga2lsbCB3aXRob3V0IHRha2luZyBwb2ludGxlc3MgZGFtYWdlLCBpdCBjYW4gYmUgaGFyZCB0byBmb2N1cyBvbiBrZWVwaW5nIGFuIGV5ZSB3aGVyZSBoZXIgY3VycmVudCBkZXBsb3llZCBzaGllbGQgaXMgYW5kIHdobyBjb3VsZCBiZSB1c2luZyBpdCwgYW5kIGl0IGNhbiBzaW1wbHkgYmUgb3V0IG9mIGhlciBmaWVsZCBvZiB2aXNpb24uIApOb3cgSSBhY3R1YWxseSBlbnZ5IHBlb3BsZSB3aG8gaGF2ZSBub3NlcyBsaWtlIG15IG9sZCBub3NlIChhbmQgZXZlbiBzZWUgdGhlbSBhcyBhdHRyYWN0aXZlKSBhbmQgd2hlbiBJIHNlZSBwZW9wbGUgd2l0aCBuYXJyb3cgbm9zZXMgSSBkb24ga25vdyBob3cgdGhleSBoYXZlIGxpdmVkIHRoZWlyIHdob2xlIGxpdmVzIGxpa2UgdGhhdC4gCkF0IDM1LCBKb2RpIE1jQ2FydHkgaXMgZ2V0dGluZyBoZXIgZmlyc3QgdGFzdGUgb2YgZnJlZWRvbSB3aGVuIHNoZSByZWxlYXNlZCBmcm9tIHByaXNvbiBhZnRlciBiZWluZyBjb252aWN0ZWQgYXQgMTcgZm9yIHNob290aW5nIGhlciBnaXJsZnJpZW5kLCBQYXVsYSBEdWxldHQuIEJlZm9yZSBQYXVsYSwgdGhlIG9ubHkgcGVyc29uIHdobyBoYWQgYmVlbiBraW5kIHRvIEpvZGkgd2FzIGhlciBncmFuZG1vdGhlciwgRWZmaWUuIFRoZSBhaW1sZXNzIGNyb3NzIGNvdW50cnkgdHJlaywgaW5jbHVkaW5nIGEgZGlwIGludG8gTWV4aWNvIHdpdGggUGF1bGEsIHdhcyB0aGUgY2xvc2VzdCB0byBoYXBwaW5lc3MgSm9kaSBoYWQga25vd24sIHNhdm9yaW5nIHRoZSB1bmZhbWlsaWFyIHJpc2sgb2YgZWFjaCBkYXkuIFRoZSBjb3VwbGUgc3VwcG9ydGVkIHRoZW1zZWx2ZXMgd2l0aCBwZXR0eSBjcmltZXMgYW5kIFBhdWxhIHNraWxscyBhcyBhIHBva2VyIHBsYXllci4gUGF1bGEgaW50b3hpY2F0aW5nIHRhbGtzIGFib3V0IGhvdyBhIGdvb2QgcG9rZXIgaGFuZCBpcyBhIHN1Z2FyIHJ1biBoYXMgSm9kaSByZW1lbWJlcmluZyBoZXIgV2VzdCBWaXJnaW5pYSBob21lLCBhbmQgaG93IHNoZSB3YW50cyB0byByZXR1cm4gdG8gdGhlIGxhbmRzY2FwZSBvZiBtb3VudGFpbiBjcmVla3MgdGhhdCBhcHBlYXIgb3V0IG9mIG5vd2hlcmUgYWZ0ZXIgYSBnb29kIHJhaW4uIHJlbGF0aW9uc2hpcCB3aXRoIFBhdWxhIGFuZCBpdHMgdmlvbGVudCBlbmQgcHJleXMgb24gSm9kaSBtaW5kIGFzIHNoZSBiZWdpbnMgaGVyIG5ldyBsaWZlLCBob3Bpbmcgc2hlIGNhbiBmdWxmaWwgaGVyIGRyZWFtIG9mIHNldHRsaW5nIG9uIHRoZSBsYW5kIG9uY2Ugb3duZWQgYnkgaGVyIGdyYW5kbW90aGVyLiBUaGVuIEpvZGkgbWVldHMgYW5kIGZhbGxzIGZvciBNaXJhbmRhIE1hdGhlc29uIEdvbGRlbiwgd2hvIGlzIHNlcGFyYXRlZCBmcm9tIGhlciBodXNiYW5kLCBhIGNvdW50cnkgbXVzaWMgc3RhciByZWNlZGluZyBmYW1lLiBBbG9uZyB3aXRoIE1pcmFuZGEgdGhyZWUgc29ucywgdGhlIG5ldyBjb3VwbGUgaGVhZHMgZm9yIFdlc3QgVmlyZ2luaWEgd2hlcmUgSm9kaSByZW1lbWJlcnMgdGhlIGFpciBhcm91bmQgaGVyIGhhZCBmZWx0IHJpZ2h0LiBBbG9uZyB0aGUgd2F5LCBKb2RpIGhvcGVzIHRvIGZpbmQgUGF1bGEgeW91bmdlciBicm90aGVyLCBSaWNreSwgd2hvIHdhcyBhYnVzZWQgYXMgYSBjaGlsZC4KVGhhdG9uZXdpdGh0aGVib29icyB1CkluIGVhcmxpZXIgdGltZXMgSSBwdXQgdGhlbSBpbnRvIG15IHRvd2VsIGFuZCB3cmFwcGVkIGl0IGFyb3VuZCB0aGVtLiBUaGVuIHRoZXJlIGlzIG9mdGVuIGEgcmFjayBzb21ld2hlcmUgaW4gdGhlIFNwYSB3aGVyZSB5b3UgY2FuIHB1dCBpdC4gQnV0IHNpbmNlIG15IHZpc2lvbiBpcyBxdWl0ZSBiYWQgSSB3YXMgc3RydWdnbGluZyB0byBtb3ZlIGFyb3VuZCBhbmQgZmluZCBhIHBsYWNlIHdpdGhvdXQgc3RhcmluZyBhdCBwZW9wbGUgKHNpbmNlIEkgY291bGRuIHNlZSB0aGVtIHdlbGwpLk5vdywgSSBqdXN0IGtlZXAgb24gd2VhcmluZyBteSBnbGFzc2VzLCBib3RoIGluIFNhdW5hLCBzdGVhbSByb29tIGFuZCBwb29sLiAKSSBjYW4gY29tbXVuaWNhdGUgd2l0aCBmaXNoIGFuZCByZXB0aWxlcy4gV29yc3Qgc3VwZXJwb3dlciBldmVyLCBob25lc3RseSB0aGVyZSBpcyBub3QgYSBsb3QgdGhhdCB5b3UgY2FuIGRvIHdpdGggaXQuIApBY2NvcmRpbmcgdG8gSm9zZXBoIEdydW4gIGRhLCBhc3Npc3RhbnQgY291bnR5IHByb3NlY3UgIHRvciwgRG9uYWwgU21pdGggd2FzIGFyZ3Vpbmcgd2l0aCBoaXMgYnJvdGhlciBpbiBsYXcsIFBldGVyIENhcGxpbmdlciBhIHQgQ2FwbGluZ2VyJ3MgaG9tZSwgNDA4IFBhcmtsYW5kIHdoZW4gUGF1bCBTbWl0aCBlbnRlcmVkIHRoZSBob21lIGFuZCB0cmllZCB0byBicmVhayB1cCB0aGUgYXJndW1lbnQuIERvbmFsZCBTbWl0aCB0b2xkIFBhdWwgU21pdGggaGlzIGFyZ3VtZW50IHdhcyB3aXRoIENhcGxpbmdlciBhbmQgd2FzICJub25lIG9mIHlvdXIgKFBhdWwgU21pdGgncykgYnVzaW5lc3MuIiBHcnVuZGEgc2FpZCBQYXVsIFNtaXRoIHRoZW4gZ290IGEgc2hvdGd1biBhbmQgcGxhY2VkIGl0IHRvIGhpcyBicm90aGVyJ3MgbmVjay4gRG9uIGFpZCB0b2xkIGhpcyBicm90aGVyICJ5b3Ugd291bGRuJ3QgcHVsbCB0aGF0IEdydW5kYSBjb250aW51ZWQuIApXaGF0IHdlJ3JlIHRyeWluZyB0byBzYXkgaXMgeW91IGRvbid0IGhhdmUgdG8gc2V0dGxlIGZvciB0aGF0IGJvcmluZyBncmVlbiBmZWx0Li4gCkhvdyBsb25nIGRvZXMgdGhhdCB0YWtlPyBXZSBjb21pbmcgdXAgb24gOCB5ZWFycyBpbiBPY3RvYmVyLiBJIGJlbGlldmUgdGhlIG1hcmtldCBhdCB0aGlzIHBvaW50IGlzIGxlYW5pbmcgdG93YXJkcyBiZWluZyBtb3JlIHJhdGlvbmFsIHdoZW4gaXQgY29tZXMgdG8gTGl0ZWNvaW4uSSBhbiBpbmRpY2F0b3IgdGhhdCB0aGUgYm90dG9tIGlzIGluLCB0aGVuIGdvIGFoZWFkIGFuZCBidXkgbW9yZS4gVGhpcyBpcyBhY3R1YWxseSBjb21pY2FsLCBzbyBtYW55IEZVTiBiYWdob2xkZXJzIHRob3VnaHQgdGhleSB3ZXJlIGJ1eWluZyAidGhlIGJvdHRvbSIgZm9yIGFsbCBvZiAyMDE4LCB5ZXQgaGVyZSB3ZSBhcmUuR28gYmFjayBhIGZldyB5ZWFycyBvbiBDTUMgYW5kIHNlZSB3aGF0IGNvaW5zIGFyZSBzdGlsbCBsZWZ0LiAKT3AgZGUgdmVyc2NoaWxsZW5kZSB2ZXJkaWVwaW5nZW4gaXMgZWVuIHRlbnRvb25zdGVsbGluZyB2YW4gYWxsZXJsZWkgb3VkZSB3YXBlbnMgZW4gdmFuIGJvdmVuYWYgd2FzIGhldCB1aXR6aWNodCBoZWVsIG1vb2k6IGplIHphZyBnb2VkIGRlIG91ZGUgc21hbGxlIHN0ZWVnamVzLiBUZXJ1ZyBiZXJnb3AgbmFhciBvbnMgaG90ZWwga29jaHRlbiB3ZSBpbiBlZW4gaGVlbCBrbGVpbiBzdXBlcm1hcmt0amUgbm9nIHBpY2tuaWNrLiBEYWFybmEgd2FzIGhldCB0aWpkIG9tIEJyYXRpc2xhdmEsIGVlbiBzdGFkIGRpZSBvbnMgd2VsIGJldmFsbGVuIGlzLCBhY2h0ZXIgb25zIHRlIGxhdGVuLiAKVGhlIDE5NDMgc2VsZiBwb3J0cmFpdCAiTGUgTWFyaW4sIiBvciAiVGhlIFNhaWxvciwiIHdhcyB3aXRoZHJhd24gYnkgQ2hyaXN0aWUncyBmcm9tIGl0cyBUdWVzZGF5IGF1Y3Rpb24gZm9yIHJlc3RvcmF0aW9uIGFmdGVyIGl0IHdhcyBhY2NpZGVudGFsbHkgZGFtYWdlZCwgRm9ydHVuZSByZXBvcnRlZC4KSGEgSmkgV29uOiBUb28gbWFueSBncmVhdCBkcmFtYXMgYW5kIG1vdmllcywgIlNlY3JldCBHYXJkZW4iIGlzIHRoZSBtb3N0IG5vdGFibGUgb25lIHRob3VnaCwgSSB3b3VsZCBzdWdnZXN0ICJFbXByZXNzIEtpIiwgYnV0IGl0IHRvbyBsb25nLCBtaWdodCBub3QgYmUgaWRlYWwgZm9yIGEgIm5ld2JpZSIuCkEgZmV3IHBsYWNlcyBhcm91bmQgdGhlIHNvdXRoIENoaW5hIFNlYSBsaWtlIFNpbmdhcG9yZSBhbmQgQnJ1bmVpLiAKU28gd2h5IGRpZCB0aGUgMjAwNCBOYXRpb25hbCBDaG9sZXN0ZXJvbCBFZHVjYXRpb24gUHJvZ3JhbSBndWlkZWxpbmVzIGV4cGFuZCB0aGUgcHJldmlvdXMgZ3VpZGVsaW5lcyB0byByZWNvbW1lbmQgdGhhdCBtb3JlIHBlb3BsZSB0YWtlIHN0YXRpbnMgKGZyb20gMTMgbWlsbGlvbiB0byA0MCBtaWxsaW9uKSBhbmQgdGhhdCBwZW9wbGUgd2hvIGRvbid0IGhhdmUgaGVhcnQgZGlzZWFzZSBzaG91bGQgdGFrZSB0aGVtIHRvIHByZXZlbnQgaGVhcnQgZGlzZWFzZS4gQ291bGQgaXQgaGF2ZSBiZWVuIHRoYXQgOCBvZiB0aGUgOSBleHBlcnRzIG9uIHRoZSBwYW5lbCB3aG8gZGV2ZWxvcGVkIHRoZXNlIGd1aWRlbGluZXMgaGFkIGZpbmFuY2lhbCB0aWVzIHRvIHRoZSBkcnVnIGluZHVzdHJ5PyBUaGlydHkgZm91ciBvdGhlciBub24gaW5kdXN0cnkgYWZmaWxpYXRlZCBleHBlcnRzIHNlbnQgYSBwZXRpdGlvbiB0byBwcm90ZXN0IHRoZSByZWNvbW1lbmRhdGlvbnMgdG8gdGhlIE5hdGlvbmFsIEluc3RpdHV0ZXMgb2YgSGVhbHRoIHNheWluZyB0aGUgZXZpZGVuY2Ugd2FzIHdlYWsuIApGaXJlS2VlcGVycyBDYXNpbm8gSG90ZWwgU2VjdXJpdHkgYWxlcnRlZCB0aGUgTm90dGF3YXNlcHBpIEh1cm9uIEJhbmQgb2YgdGhlIFBvdGF3YXRvbWkgVHJpYmFsIFBvbGljZSB0aGF0IGEgcG9rZXIgcGxheWVyIHdhcyBzZWVuIHRha2luZyBjYXNoIGZyb20gYSBwb2tlciB0YWJsZSBwb3QsIGZsZWVpbmcgdGhlIGNhc2lubyBhbmQgZHJpdmluZyBvZmYgaW4gYSBzbWFsbCBibGFjayB2ZWhpY2xlLCBwb2xpY2Ugc2FpZC4KU2hlIGFsc28gaGFkIHNpZ25pZmljYW50IHN3ZWxsaW5nIG9mIGhlciByaWdodCBleWUsIGFuZCBhIGRvY3RvciBmb3VuZCBudW1lcm91cyBmYWNpYWwgZnJhY3R1cmVzIGFuZCBpbnRyYWNyYW5pYWwgYmxlZWRpbmcuIlRoZSBudXJzZXMgc3RhdGVkIHRoZXkgd2VyZSBkZWZpbml0ZWx5IGxpZmUgdGhyZWF0ZW5pbmcsIiBTaGF0ZWsgc2FpZC5Db2xsaW5zIHdhcyBub3QgZm91bmQgYW5kIGFycmVzdGVkIHVudGlsIFNlcHQuIEluIGFuIGludGVydmlldywgU2hhdGVrIHNhaWQgQ29sbGlucyBhZG1pdHRlZCB0byB0aGUgYXNzYXVsdCwgYnV0IGNsYWltZWQgaXQgd2FzIE1vbnRnb21lcnkncyBpZGVhLiBIZSBhbHNvIHNhaWQgaGUgImJsYWNrZWQgb3V0IiBkdXJpbmcgdGhlIGFjdHVhbCBhc3NhdWx0LiJIZSBzYWlkIGhlIGNvbWVzIGJhY2sgdG8gKGNvbnNjaW91c25lc3MpIGFuZCBoZSdzIHN0YW5kaW5nIG92ZXIgaGVyLCIgU2hhdGVrIHNhaWQuIApCZWNhdXNlIG9mIHRoaXMsIEkgZ290IGEgc2lnbmF0dXJlIGFiaWxpdHkgY2FsbGVkICJTaG9uZW4gR2FyYmFnZSIgdGhhdCBsZXRzIG1lIGNyZWF0ZSBhIDF2MSBhcmVuYSBhZ2FpbnN0IGEgdGFyZ2V0IHdpdGhpbiAzMCBmZWV0IG9mIG1lLiAKSSBrbm93IGl0J3MgcHJvYmFibHkgZ290dGEgZmVlbCBhd2t3YXJkLCBlc3BlY2lhbGx5IGlmIGl0J3MgYSBuZXcgdGhpbmcgZm9yIHlvdSEgSSdtIGFuIGF3a3dhcmQgaW50cm92ZXJ0IG15c2VsZiBzbyBJIGVudGlyZWx5IGdldCB0aGF0IHRyYWluIG9mIHRob3VnaHQuIExvbC4gQnV0IEkgcHJvbWlzZSBpdCdzIG5vdCBhcyBiaWcgYSB0aGluZyBpbiByZWFsIGxpZmUgYXMgaXQgYXBwZWFycyBpbiB5b3VyIG1pbmQgICB5b3UgYXJlIG5vdCBhbG9uZSBhbmQgdGhleSdyZSB0aGVyZSB0byBoZWxwLiBZb3UgY2FuIHRhbGsgdG8gdGhlbSBvciBub3QgdGFsayB0byB0aGVtICAgaXQncyB3aGF0ZXZlciBraW5kIG9mIHRoaW5nIHlvdSB3YW50IGl0IHRvIGJlLiBHbyBpbiBhbmQgdGVsbCB0aGVtIHlvdSdyZSBsb29raW5nIGZvciBzb21ldGhpbmcgZGlmZmVyZW50ICAgc2hvcnQgb24gdGhlIHNpZGVzLCBsZW5ndGggb24gdG9wLCBhbmQgY2xlYW5lZCB1cCBiZWFyZC4gWW91IHByb2JhYmx5IHdvbid0IGhhdmUgdG8gc2F5IG1vcmUgdGhhbiB0aGF0LiBMb2wuIFRoZXkga25vdyB3aGF0IHRvIGRvLiBZb3UganVzdCBzaXQgdGhlcmUgYW5kIGxldCB0aGVtIG1hbmV1dmVyIHlvdXIgbm9nZ2luIGFyb3VuZCB3aGVyZSB0aGV5IG5lZWQgaXQuCkJlIHNtYXJ0LiBDYXJyeSBlbWVyZ2VuY3kgc3VwcGxpZXMgd2hlbiBkcml2aW5nIHRoZSBiYWNrIHJvYWRzLgpTdHVkIFBva2VyU3R1ZCBwb2tlciB1c3VhbGx5IGlzIGVpdGhlciA1IGNhcmQgb3IgNyBjYXJkIHN0dWQuIDcgY2FyZCBzdHVkIGlzIHRoZSB2ZXJzaW9uIHByZWRvbWluYXRlbHkgcGxheWVkLiBJdCBpcyBhIGNvbWJpbmF0aW9uIG9mIGNhcmRzIGRlYWx0IGZhY2UgZG93biwgdXN1YWxseSB0aGUgZmlyc3QgMiBjYWxsZWQgaG9sZSBjYXJkcyBhbmQgdGhlIHJlc3QgZGVhbHQgZmFjZSB1cCB3aXRoIHRoZSBwb3NzaWJsZSBleGNlcHRpb24gYmVpbmcgdGhlIGxhc3QgY2FyZCBkZWFsdCBmYWNlIGRvd24uIFRoZSBtb3N0IHBsYXllZCB2ZXJzaW9ucyBvZiA3IGNhcmQgc3R1ZCBhcmUgT21haGEgYW5kIFRleGFzIEhvbGQgJ0VtIGJlY2F1c2UgdGhlc2UgdHdvIGdhbWVzIHJlbHkgbW9yZSBvbiBza2lsbCB0aGFuIGJsaW5kIGx1Y2suIFRleGFzIEhvbGQnRW0gaXMgYnkgZmFyIHRoZSBtb3N0IHBvcHVsYXIgZ2FtZSB0b2RheS4gWW91IHNlZSBpdCBiZWluZyBwbGF5ZWQgb24gVFYgc2hvd3MgUG9rZXIgU3VwZXJzdGFycyBhbmQgdGhlIFdvcmxkIFNlcmllcyBvZiBQb2tlciBNYWluIEV2ZW50IHdoaWNoIGlzIHRoZSBtb3N0IGNvdmV0ZWQgdG91cm5hbWVudCB0byB3aW4uCkFuZCBoYWQgYSByZXF1aXJlZCBzY2llbmNlIGNvcmUgd2l0aCBjbGFzc2VzIGxpa2UgYW5hdG9teSwgcGh5c2lvbG9neSwgZmlyc3QgYWlkLCBraW5lc2lvbG9neSwgYW5kIHBhdGhvbG9neS5UaGUgcGF5IGlzIHZhcmllZCBkZXBlbmRpbmcgb24gd2hlcmUgeW91IHdvcmsuIApMJ2V4cGxvaXRhdGlvbiBldCBsYSBjb21tZXJjaWFsaXNhdGlvbiBlbiBjaXJjdWl0cyBjb3VydHMgZGUgcHJveGltaXQsIHJkdWlzYW50IGxlIG5vbWJyZSBkJ2ludGVybWRpYWlyZXMgZW50cmUgbGUgcHJvZHVjdGV1ciBldCBsZSBjb25zb21tYXRldXIsIHNvbnQgIGwnb3JkcmUgZHUgam91ci4gCkpvaG4gYW5kIEtpbWJlcmx5IENsYXJrLCBhZ2VzIDQ2IGFuZCA0NSwgcmVzcGVjdGl2ZWx5LCB3ZXJlIGtpbGxlZCBvbiB0aGVpciBtb3RvcmN5Y2xlIGJ5IERhbmllbCBCZXR0cywgMzgsIHdobyB3YXMgZHJpdmluZyBhIHBpY2t1cCB0cnVjayB1bmRlciB0aGUgaW5mbHVlbmNlIG9mIGFsY29ob2wuCkRhZCB3b3JrZWQgdHdvIGpvYnMgdG8gbW92ZSBhaGVhZCwgaGUgcmVidWlsdCBvdXIgdGlueSBob3VzZSBpbnRvIGEgZm91ciBiZWRyb29tIG9uZSBhbmQgYXMgdGhlIG9sZGVzdCBJIGdvdCB0byBiZSBoaXMgYXNzaXN0YW50LiAKVGhpcyBpcyB3aGF0IGNhdXNlcyB0aGUgZml6emxpbmcgZWZmZWN0LiAKIkkgc2VlIGEgcXVpZXQsIGNvbmZpZGVudCwgY2FsbW5lc3MgdG8gaGltLCIgRGVHdWFyZGlhIHNhaWQuIApUaGUgY2FzZSBpc24ndCBhYm91dCBhZmZpcm1hdGl2ZSBhY3Rpb24sIGJlY2F1c2UgQXNpYW5zIGFyZSBwbGFjZWQgaW50byB0aGUgc2FtZSAidW5wcm90ZWN0ZWQiIGNhdGVnb3J5IGFzIHdoaXRlcywgbWVhbmluZyB0aGF0IHRoZXkgYXJlIG5vdCBhbiAidW5kZXJyZXByZXNlbnRlZCIgY2xhc3MgY29uZmVycmVkIHNwZWNpYWwgYmVuZWZpdHMgZHVyaW5nIHRoZSBhcHBsaWNhdGlvbiBwcm9jZXNzLiBUaGVzZSBhcmUgYmVuZWZpdHMgZW5qb3llZCBieSBvbmx5IGEgZmV3IGNlcnRhaW4gY2xhc3NlcywgKGJsYWNrLCBMYXRpbm8sIE5hdGl2ZSBBbWVyaWNhbiwgUGFjaWZpYyBJc2xhbmRlciBhbmQgd29tZW4gaW4gY2VydGFpbiBjYXNlcykuIAozLiBJZiB5b3VyIGd1ZXN0cyBhcmUgZW5lcmdldGljIGFuZCBhcmUgZmFucyBvZiBhIHJlYWxpdHkgVFYgc2hvdywgdGhlbiB5b3UgY291bGQgbWFrZSBhIGJpcnRoZGF5IHBhcnR5IGZ1biBieSBoYXZpbmcgZXZlcnlvbmUgZG8gc29tZXRoaW5nIHNpbWlsYXIgYXMgdGhleSBkbyBpbiBzdWNoIHNob3dzLiBUaGVyZSBpcyBubyBuZWVkIHRvIG1ha2UgaXQgY29tcGxpY2F0ZWQgYW5kIHN0cmljdC4gCkNhbmFkYSB0byByZWR1Y2Ugc3RhZmYgYXQgQ3ViYSBlbWJhc3N5IGFmdGVyIGFub3RoZXIgZGlwbG9tYXQgZmFsbHMgaWxsClN1bmRheSwgTWFyY2ggMTAuIApDbGljayBORVhUIHRvIHJlYWQgbW9yZVRoaXMgc3BlY2lhbCBhZG1pbmlzdHJhdGl2ZSByZWdpb24gb2YgQ2hpbmEgaXMgYWxyZWFkeSBob21lIHRvIDMzIGNhc2lub3MgICBpbmNsdWRpbmcgdGhlIHdvcmxkJ3MgbGFyZ2VzdCBjYXNpbm8gaW4gdGhlIFZlbmV0aWFuICAgIGFuZCBhbm90aGVyIHR3byBkb3plbiBjYXNpbm9zIHRoYXQgYXJlIGN1cnJlbnRseSBpbiB0aGUgd29ya3MuClRyeWluZyB0byBjb250cm9sIHRoZSBuYXJyYXRpdmUgaW4gc29tZW9uZSBlbHNlJ3MgaGVhZCBpcyBzaWxseSwgZnV0aWxlLCBhbmQgZG93bnJpZ2h0IG5hcmNpc3Npc3RpYy4gCk1haXMgY2hhY3VuIHNhaXQgY29tbWVudCBwcm9jZGVyIGRlcHVpcyBsYSBudWl0IGRlcyB0ZW1wcy4gT24gcydlbnRlbmQgc3VyIGxlIHByaXggZCd1biBzaWduZSBkZSB0dGUuIExhIGZlbW1lIHMnb3JpZW50ZSB2ZXJzIHVuIGltbWV1YmxlIGR1IHF1YXJ0aWVyLiAKU3Vic2VxdWVudGx5LCBzaGUgc2FpZCB0aGUgc3VybmFtZSB3YXMgTm9ycmlzLiBEZXNwaXRlIGEgbmF0aW9ud2lkZSBzZWFyY2ggYW5kIGEgcHVibGljIGFwcGVhbCBmb3IgaW5mb3JtYXRpb24sIG5vIHRyYWNlIG9mIFRlZ2FuIG9yIEFuZHJldyBNb3JyaXMvTm9ycmlzIGhhcyBiZWVuIGZvdW5kLiBQZXJwbGV4aW5nbHksIExhbmUgZmFtaWx5IGFuZCBjbG9zZXN0IGZyaWVuZHMgc2F5IHRoZXkgaGFkIG5vIGlua2xpbmcgb2YgVGVnYW4gZXhpc3RlbmNlLiAKTW9yZSB0aGFuIGEgZGVjYWRlIGFnbywgdGhlcmUgd2VyZSByYXJlbHkgbW9yZSB0aGFuIDEwIHdvbWVuIGluIHRoZSBDYW1wYmVsbCBDb3VudHkgSmFpbCBpbiBub3J0aGVhc3QgVGVubmVzc2VlLiBOb3cgdGhlIHBvcHVsYXRpb24gaXMgcm91dGluZWx5IGFyb3VuZCA2MC4gCjNNIGRpc3Bvc2VkIG9mIGxlZnRvdmVyIGNoZW1pY2FscyBpbiBkdW1wcyB1bnRpbCAxOTc1LiBUd2VudHkgbmluZSB5ZWFycyBsYXRlciwgdHJhY2VzIG9mIFBGQ3Mgd2VyZSBkaXNjb3ZlcmVkIGluIHVuZGVyZ3JvdW5kIHBsdW1lcyBvcmlnaW5hdGluZyBhdCB0aGUgZHVtcHNpdGVzLiBUaGV5IHNwcmVhZCBpbiB0aGUgd2F0ZXIgYmVuZWF0aCBMYWtlIEVsbW8sIE9ha2RhbGUsIFdvb2RidXJ5LCBTdC4gUGF1bCBQYXJrIGFuZCBDb3R0YWdlIEdyb3ZlLgpGYWlsdXJlIHRvIGNvbXBseSB3aXRoIHRoZSBmb3JlZ29pbmcgc2hhbGwgY29uc3RpdHV0ZSBhIGJyZWFjaCBvZiB0aGVzZSBUZXJtcyBvZiBTZXJ2aWNlLCB3aGljaCBtYXkgcmVzdWx0IGluIGltbWVkaWF0ZSB0ZXJtaW5hdGlvbiBvZiB5b3VyIGFjY291bnQuIApUaGV5IG1heSB0aGVuIGdvIHVwIHRvIDE4Z3JhbXMuIApXaGVuIHlvdSBnaXZlIHNvbWV0aGluZyB0byBzb21lb25lIGluIG5lZWQsIGFuZCB5b3Ugc2VlIHRoZSBzbWlsZSBvbiB0aGVpciBmYWNlIGFuZCBob3cgbXVjaCB0aGV5IGNoZXJpc2ggdGhhdCBiZWNhdXNlIHRoZXkgaXQgbmVlZCBiYWRseSwgaXQncyBzb21ldGhpbmcgdGhhdCB5b3UgbmV2ZXIgZm9yZ2V0LiAKTWF5YmUgd2UgZm9yZ2V0IHRoYXQgdGhleSBoYXZlIGZsYXdzLiAKV2UgdXNlZCB0aGUgIm9oIGNyYXAhIiAzIGRheSBtZXRob2QgZm9yIERTMSBqdXN0IGJlZm9yZSBoZSB0dXJuZWQgMy4gSGUgd2FzIHRoZW4gZ3JlYXQgYWJvdXQgcGVlaW5nIG9uIHRoZSBwb3R0eSBidXQgcmVmdXNlZCB0byBnbyAyLiBIZSBob2xkIGl0IGluIHVudGlsIGhlIHdhcyB3ZWFyaW5nIGhpcyBuYXAvb3Zlcm5pZ2h0IHB1bGwgdXAuIApBbmQgY29udHJhcnkgdG8gcG9wdWxhciBteXRoLCBzb21lIGNhdHMgZG8gbmVlZCByZWd1bGFyIGdyb29taW5nLiBTb21lIGNhdHMgYXJlIG5hdHVyYWxseSBzdXBlciBncmVhc3kgYW5kIGdyZWFzZSBsZWFkcyB0byBtYXR0aW5nIGFuZCBvdGhlciBza2luIGlzc3VlcyBsaWtlIHN0dWQgdGFpbCwgY2F0IGFjbmUgb3IgcHlvZGVybWEuIEZyb20gbXkgZXhwZXJpZW5jZSBpdCBzZWVtcyB0byBiZSBlc3BlY2lhbGx5IGNvbW1vbiBpbiBQZXJzaWFucyBhbmQgQnJpdGlzaCBTaG9ydGhhaXJzIChib3RoIGhhdmUgdmVyeSBkZW5zZSBjb2F0cyB0aGF0IGRvbid0IGFsbG93IGZvciB0aGUgc2tpbiB0byBicmVhdGhlIHdlbGwpLiAKV2hldGhlciBvciBub3QgYSBjb25zdGFibGUgd2FzIGluIHVuaWZvcm0gaXMgYSBtYXR0ZXIgZm9yIHRoZSBjb3VydCB0byBkZWNpZGU7IGhvd2V2ZXIgaW4gV2FsbHdvcmsgdiBHaWxlcyAxOTcwIGl0IHdhcyBoZWxkIHRoYXQgYSBjb25zdGFibGUgZGVhbGluZyB3aXRoIGEgcm9hZCB0cmFmZmljIG1hdHRlciB3YXMgaW4gdW5pZm9ybSBkZXNwaXRlIG5vdCB3ZWFyaW5nIGhpcyBoYXQuLiAKVGhlIHNlY29uZCBvbmUgaXMganVzdCBhcyBncmVhdCwgbWF5YmUgZXZlbiBiZXR0ZXIsIGJ1dCB3ZSBoYXZlbid0IGhhZCBhcyBtdWNoIHRpbWUgdG8gcGxheSB3aXRoIGEgYmFieSBub3cuIEkgd2lsbCBzYXkgd2UgaGFkIGl0IG9uIHRoZSBQUzQgYmVmb3JlIHdlIGdvdCBhIFN3aXRjaCwgYW5kIHRoZSBjbyBvcCBvcHRpb25zIG9uIFBTNCB3ZXJlIHN1cGVyIGxpbWl0ZWQuIApOb3csIEkgbG92ZSBib3RoLCBidXQgSSBjYW4gc2VlIGhvdyBvdmVyd2hlbG1pbmcgb3BlbiB3b3JsZCBnYW1lcyBjYW4gYmUgcGVyIHRoZSBhYm92ZSBzdGF0ZW1lbnQuIEkgY2FuIGFsc28gc2VlIGhvdyBjZXJ0YWluIG9wZW4gd29ybGQgZ2FtZXMgY2FuIGJvcmUgcGVvcGxlLiBXaGlsZSBJIGxvdmVkIFJEUjIsIHlvdSByZWFsbHkgZGlkbiBoYXZlIG11Y2ggY2hvaWNlIG9yIGNyZWF0aXZpdHkgaW4geW91ciBhcnNlbmFsIGV4Y2VwdCBmb3IgcmlkZSBoZXJlLCBndW4gc2xpbmdpbmcgdGltZSwgcmlkZSBiYWNrLi4gClNvbWUgb2YgdGhlIGlzc3VlcyB3aXRoIEMgYXMgYSBmaXJzdCBsYW5ndWFnZToKV2Ugd2FzdGluZyBsaXZlcywgbW9uZXkgYW5kIHJlc291cmNlcy4gRnVjayAiUnVzc2lhbiBpbmZsdWVuY2UiIGFuZCBmdWNrIHRoZSBLdXJkcy4gSSBkb24gaGF2ZSBhbnkgbG92ZSBmb3Igb3VyIGRpcHNoaXQgcHJlc2lkZW50LCBidXQgSSB0YWtlIGEgd2luIHdoZW4gdGhlcmUgb25lIHRvIGJlIGhhZC4gCkl0IGlzIHRoZSBtb3N0IHJldm9sdXRpb25hcnkgZGV2ZWxvcG1lbnQgb2YgcG9rZXIgaW4gSW5kaWEuIApNeSAoc3VwcG9zZWRseSBub24gZGVub21pbmF0aW9uYWwpIG9mZmljaWFudCB3YXMgdG9sZCBpbiBubyB1bmNlcnRhaW4gdGVybXMgdGhhdCB0aGUgYnJpZWYgY2VyZW1vbnkgd2FzIHRvIGhhdmUgbm8gbWVudGlvbiBvZiBHb2Qgb3IgcmVsaWdpb24uIFNoZSBzZW5kcyBtZSB0aGUgZmlyc3QgZHJhZnQsIHNldmVyYWwgbWVudGlvbnMuIEkgZWRpdCBpdCBhbmQgc2VuZCBpdCBiYWNrLCBzaGUgc2F5cyBvaywgYnV0IHRoZXJlcyBhIG5pY2UgcG9lbSB0aGF0IG5vdCByZWFsbHkgcmVsaWdpb3VzIGJ1dCBJIGxvdmUgdG8gcmVhZCBpdCBhdCBjZXJlbW9uaWVzIGNhbGxlZCBpbiB0aGUgc2FuZCBDYW4gd2UgYWRkIHRoYXQuIEkgZmFtaWxpYXIgd2l0aCB0aGUgcG9lbS4gSXQgYWJvdXQgR29kIGNhcnJ5aW5nIGEgbWFuIHRocm91Z2ggdGhlIGhhcmQgdGltZXMgaW4gaGlzIGxpZmUuIEkgZG9uIHNlZSBob3cgdGhpcyBoYXMgYW55dGhpbmcgdG8gZG8gd2l0aCBtYXJyaWFnZSBhbmQgSSBzYWlkIG5vLiBJIGFza2VkIHRoYXQgc2hlIGluc3RlYWQgcmVjaXRlIHRoZSBEci4gU2V1c3MgV2VpcmRuZXNzIHBvZW0gYW5kIHNoZSBzYXlzIHNoZSBlZGl0IGl0IGluLiBEYXkgb2YgdGhlIGNlcmVtb255IGNvbWVzLCBubyBEci4gU2V1c3MgcG9lbSwgbW9yZSB0aGFuIG9uZSBtZW50aW9uIG9mIEdvZC9ibGVzc2luZ3MsIGFuZCBzaGUgc3R1bWJsZWQgdGhyb3VnaCBpdCBsaWtlIHNoZSBuZXZlciByZWFkIGl0IGJlZm9yZS4gSnVzdCBhd2Z1bC4gSSBzaG91bGQgZmlyZWQgaGVyIGFmdGVyIHNoZSBwdXNoZWQgc28gaGFyZCBvbiB0aGUgR29kIGlzc3VlIHdoZW4gd2Ugd2VyZSBuZWdvdGlhdGluZyB0aGUgc2NyaXB0LgpXZSBoYXZlIGJlZW4gb2NjdXBpZWQgYnkgZW5lbXkgZm9yY2VzIGZyb20gd2l0aGluIGFuZCB3aXRob3V0IHNpbmNlIHRoYXQgc3RvbGVuIGVsZWN0aW9uLiBUaGV5IGFyZSBzeXN0ZW1hdGljYWxseSBkaXNtYW50bGluZyBvdXIgZ292ZXJubWVudCwgb3VyIHN0YXRlIGRlcGFydG1lbnQgaGFzIGJlZW4gZG93biB0byBhIHNrZWxldG9uIGNyZXcgZm9yIHRoZSBlbnRpcmUgdHdvIHllYXJzIGZvbGxvd2luZyBUaWxsZXJzb24gKFJleHhvbiwgdGhlIG9pbCBndXkgd2hvIHdhcyBnaXZlbiBhICJGcmllbmQgb2YgUnVzc2lhIiBtZWRhbCBmcm9tIFB1dGluKSBkb2luZyBoaXMgS3JlbWxpbiBkdXR5IGFuZCBmaXJpbmcgbW9zdCBvZiB0aGUgc3RhZmYsIG91ciBwdWJsaWMgZWR1Y2F0aW9uIGlzIGJlaW5nIGRpc21hbnRsZWQgYnkgZGlsZXR0YW50ZSBhbmQgY3VsdCBleHRyZW1pc3QgQmV0c3kgRGVWb3MsIHNpc3RlciBvZiB0ZXJyb3Jpc3QgYW5kIGZlbGxvdyBleHRyZW1pc3QgRXJpayBQcmluY2UuIApEb24gYm90aGVyIHdpdGggb3RoZXIgSmFwYW5lc2UgYmFua3MgZm9yIEZYIHJhdGVzLCB0aGV5IHdpbGwgc3VjayBjb21wYXJlZCB0byBTaGluc2VpLiBJdCBhbHNvIHdvcnRoIG5vdGluZyB0aGF0IHlvdSBoYXZlIHRvIGNoZWNrIFNoaW5zZWkgcmF0ZXMgd2hlbiB0aGUgbWFya2V0cyBhcmUgb3BlbiAoTW9uIEZyaSAyNC83LCBwcmV0dHkgbXVjaCkgYXMgdGhlIHJhdGVzIGRpc3BsYXllZCB3aGVuIHRoZSBtYXJrZXRzIGFyZSBjbG9zZWQgd2lsbCBoYXZlIHBhZGRpbmcgaW4gdGhlbS4gQWxzbywgZG8gbm90IGNvbmZ1c2UgU2hpbnNlaSBhY3R1YWwgZXhjaGFuZ2UgcmF0ZXMgd2l0aCB0aGUgcmF0ZXMgb2ZmZXJlZCBmb3IgdGhlaXIgR29SZW1pdCBzZXJ2aWNlIGFzIHRoZXkgYXJlIG5vdCB0aGUgc2FtZSByYXRlcy4gClRoZSBhdWRpdCB3YXMgdmVyeSBoZWxwZnVsIGFzIGl0IGVzdGFibGlzaGVkIGRlZmluaXRlIG9wZW5pbmcgYmFsYW5jZXMgZm9yIG91ciBhY2NvdW50cywgYW5kIGlkZW50aWZpZWQgYSBudW1iZXIgb2YgcmVjZWl2YWJsZXMgdGhhdCBoYWQgYmVlbiBsb3N0IG9uIHRoZSB0cmFuc2ZlciBvZiByZWNvcmRzIGZyb20gb25lIGNvbXBhbnkgdG8gYW5vdGhlci4gCjQwIGxvZyBzZWVtcyB0byBydW4gYXJvdW5kICQyMDAgJDc1MC4gClRvZGF5IE1hYydzIG1hY2hpbmUgaGFzIGJlY29tZSB0aGUgZmlyc3QgY2hvaWNlIGZvciBldmVyeWJvZHkgc3BlY2lhbGx5IHRob3NlIHdobyBsaWtlIHRvIHBsYXkgb25saW5lIGdhbWVzLiBUaGlzIGlzIGFsc28gYSBmYWN0IHRoYXQgTWFjIG1hY2hpbmVzIGFyZSBmYXN0ZXIgYW5kIGFkdmFuY2VkIGluIGNvbmZpZ3VyYXRpb24gc28gcGxheWluZyBnYW1lcyBpbiB0aGVzZSBzeXN0ZW1zIGNvdWxkIGJlIGJlc3QgZm9yIHBsYXllcnMuIFRoaXMgYXBwbGUgc3lzdGVtIGlzIGhhdmluZyBzb21lIHNwZWNpZmljIHJlYXNvbnMgdG8gYWNjZXNzIGludGVybmV0IGFwcGxpY2F0aW9ucyBhbmQgdGhhdCBpcyB0aGUgcmVhc29uIHRoYXQgbWFueSBnYW1pbmcgY29tcGFuaWVzIGFyZSB0b2RheSBjcmVhdGluZyBNYWMncyBwb2tlciBzaXRlcyB0aHJvdWdoIHdoaWNoIHBsYXllcnMgY2FuIGVhc2lseSBlbmpveSB0aGVpciBmYXZvcml0ZSBnYW1lLi4gCkkgdXNlIHBpcGVudiBpbiBwcm9kdWN0aW9uIGFuZCB0ZXN0aW5nIHRvIHNpbXBsaWZ5IGRlcGxveW1lbnQgb24gc3lzdGVtcyB0aGF0IGRvbiBuYXRpdmVseSBzdXBwb3J0IHB5dGhvbiAzLjYrLiBXaGVuIGl0IHdvcmtzIGl0IGlzIGdyZWF0LiBXaGVuIGl0IGZhaWxzLCBvciB3aGVuIHRoZSBjbGkgb3B0aW9ucyBmaWdodCBlYWNoIG90aGVyIGFuZCB0cnkgdG8gYmUgc21hcnQgYnV0IGluc3RlYWQgZm9yIGEgY2lyY3VsYXIgZmlyaW5nIHNxdWFkIGl0IGlzIG9uZSBvZiB0aGUgbW9zdCBpbnNhbml0eSBpbmR1Y2luZyBwaWVjZXMgb2Ygc29mdHdhcmUgSSBoYXZlIGV2ZXIgdXNlZC4gUGlwZW52IHJlbGVhc2UgaGF2ZSByZXBlYXRlZGx5IGJyb2tlbiBDSSBidWlsZHMgZm9yIG1lIGZvciB0aGUgcGFzdCAzIG1vbnRocy4gSSB3YXMgc28gcGlzc2VkIHdpdGggaG93IGJhZCBpdCB3YXMgYWJvdXQgOSBtb250aHMgYWdvIHRoYXQgSSBhY3R1YWxseSBnYXZlIHVwIHRyeWluZyB0byB1c2UgaXQgb24gbXkgZGV2ZWxvcG1lbnQgbWFjaGluZSBhbmQgbGVhcm5lZCBob3cgdG8gd3JpdGUgZ2VudG9vIGVidWlsZHMuIE9uIHJlZmxlY3Rpb24gaXQgc2VlbXMgbGlrZSB0aGUgcGVyZmVjdCB0b29sIGZvciBweXRob24gICBpZiB5b3Ugc3RheSBvbiB0aGUgaGFwcHkgcGF0aCBhbmQgb25seSB1c2UgaXQgaW4gQkRGTCBBUFBST1ZFRCB3YXlzIHRoZW4gaXQgY2FuIGJlIGdyZWF0LCBiZSB3b2UgdG8gdGhlIGZvb2wgd2hvIHdhbmRlcnMgZnJvbSB0aGUgbGlnaHQgaW50byBtYWRuZXNzLgpXaGF0IE9uVGhpbmdzIHRvIGRvRm9vZCBhbmQgRHJpbmtGYW1pbHkgYW5kIEtpZHNUViBHdWlkZURpZ2l0YWwgUHJpbnQgRWRpdGlvbk1vcmUgdGhhbiAkNTUuNyBtaWxsaW9uIGhhcyBiZWVuIGdhbWJsZWQgYXdheSB0aHJvdWdoQmFsbGFyYXQncyBwb2tlciBtYWNoaW5lcyBkdXJpbmd0aGUgMjAxNy8yMDE4eWVhciBsZWF2aW5nIG1hbnkgZmFtaWxpZXMgYWxtb3N0IGRlc3RpdHV0ZSwgYSBTYWx2YXRpb24gQXJteSBzcG9rZXNtYW4gaGFzIHNhaWQuICJTb21ldGhpbmcgaGFzIHRvIGxlc3NlbiB0aGUgaW1wYWN0IG9mIHRoZXNlIG1hY2hpbmVzIG9uIGlubm9jZW50IHBlb3BsZS4iIENhcHRhaW4gV29vZCBzYWlkIHRoZXkgc2VlIGZpcnN0IGhhbmQgdGhlIGRlc3RydWN0aXZlIGVmZmVjdHMgb2YgcG9rZXIgbWFjaGluZXMgYW5kIGhhcyBjYWxsZWQgZm9yIGFjdGlvbi4gClZpc2l0b3JzIGNhbiBwaWNrIHVwIGEgcmVudGFsIGNhciBmb3IgYXMgbGl0dGxlIGFzICQxMCBwZXIgZGF5IGF0IHRoZSBGYXJvIEFpcnBvcnQgZnJvbSByZXB1dGFibGUgQW1lcmljYW4gcmVudGFsIGNhciBhZ2VuY2llcyBsaWtlIEFsYW1vLCBBdmlzLCBCdWRnZXQsIERvbGxhciBhbmQgSGVydHouIApIZSB3YXMgcGF5aW5nIGZvciBhaXIgdGltZSBzbyBoZSBjb3VsZCB0ZWxsIHBlb3BsZSBhYm91dCBwYXlpbmcgZm9yIHNleCEgU3ByaW5nZXIgd2FzIHdpbGRseSBwb3B1bGFyIGluIENpbmNpbm5hdGksIGJ1dCBpdCB3YXNuIGVub3VnaC4gSGUgbG9zdCB0aGUgZWxlY3Rpb24gd2l0aCA0NSUgb2YgdGhlIHZvdGUuVGhhdCB3aGVuIGhlIHRyYW5zaXRpb25lZCB0byB0ZWxldmlzaW9uLiAKVHJ5IHlvdXIgbHVjayBhdCBvbmUgb2YgdGhlIGxpdmUgcG9rZXIsIEJsYWNramFjaywgUm91bGV0dGUgYW5kIENyYXBzIHRhYmxlcy4gCkkgdGVsbCB5b3Ugc3RyYWlnaHQgdXAsIHRoZXJlIHZlcnkgbXVjaCBhcmUgYmFkIG1lcmNpZXMsIGFuZCB5b3UgaGF2ZSBhIGxvdCBtb3JlIGltcGFjdCBvbiB5b3VyIG93biBzdXJ2aXZhbCB0aGFuIHlvdSB0aGluay4uIApJcyBpdCBzYWZlIHRvIHVuZGVyZ28gbGFzZXIgdGVldGggd2hpdGVuaW5nIGZyb20gY29zbWV0aWMgZGVudGlzdHM/IEl0IGlzIGFzIGxvbmcgYXMgeW91IHdpbGwgYXZhaWwgdGhlIHNlcnZpY2Ugb2YgYSBwcm9mZXNzaW9uYWwuIApUaGluZyBpcywgSSBudXR0ZWQgYWxsIG92ZXIgdGhlIGtpZCBzaXR0aW5nIHJpZ2h0IG5leHQgdG8gbWUsIGFuZCBoaXMgbW9tIGdvdCBhbGwgcGlzc2VkIGF0IG1lLCBzY3JlYW1pbmcgYXQgbWUgZm9yIGphY2tpbmcgb2ZmIG9uIGhlciBzb24uIApTb21laG93LCB0aGUgdGV4dCBhbmQgbWVsb2R5IHN0dWNrIGFsbCB0aGVzZSB5ZWFycy4gClF1b3RlIHdoYXQgSGFuayBBYXJvbiBoYWQgc2FpZCwgdGFrZXMgc2tpbGwsIGxvbmdldml0eSBhbmQgZGV0ZXJtaW5hdGlvbiB0byBhY2NvbXBsaXNoIHRoaXMgZmVhdC4gVGhlcmUgYXJlIG9ubHkgYSBoYW5kZnVsIG9mIHBlb3BsZSB0aGF0IHBsYXkgdGhpcyBnYW1lLCBhbmQgYSBmZXcgb2YgdGhvc2UgdGhhdCBleGNlbC4gCkkgcmVhbGx5IGZlZWwgdGhhdCBoZSBpcyBpbiBoaXMgaGVhZCByaWdodCBub3cuIApQYXVsIE1jQ2xvdWQgcGV0ZXIgSG9yYW4gMnBtTmltYmluIEhvdGVsOiBDb21wYXNzIFJvc2UgMS4zMHBtUmFpbHMsIEJ5cm9uIEJheTogQ2hyaXMgQ29vayBCYW5kIDYuMzBwbVNhbmRiYXIgUmVzdGF1cmFudCwgRWFzdCBCYWxsaW5hOiBCb2IgT29ydCAxMi4zMHBtU2hhd3MgQmF5IEhvdGVsLCBCYWxsaW5hOiBQaW5rIFppbmNUaGUgQ2hhbm5vbiBUYXZlcm46IENoYW5ub24gRm9sayBDbHViIDNwbVdpbnNvbWUgSG90ZWwsIE5vcnRoIExpc21vcmU6IEthaXNoYSA2cG1CYWxsaW5hIFJTTCBDbHViOiBUZXhhcyBIb2xkZW0gUG9rZXIgNnBtQ2hlZWt5IE1vbmtleXMsIEJ5cm9uIEJheTogTWFkIE1leGljYW4gUmFpbHMsIEJ5cm9uIEJheTogQ29keSBCdXRsZXIgNi4zMHBtQmFsbGluYSBSU0wgQ2x1YjogUmVhZHkgdG8gUm9jaywgcm9jayBhbmQgcm9sbCBjbGFzc2VzIDcuMzBwbUJhbmdhbG93IEhvdGVsOiBCcmFja2V0cyBKYW0gbmlnaHQgOHBtQ2hlZWt5IE1vbmtleXMsIEJ5cm9uIEJheTogQ295b3RlIFVnbHlJdGFsbyBBdXN0cmFsaWFuIENsdWIsIE5vcnRoIExpc21vcmU6IFJvY2sgUm9sbCBDbGFzc2VzIGFuZCBEYW5jaW5nTGVubm94IFBvaW50IEhvdGVsOiBBdXN0IFBva2VyIExlYWd1ZSA3cG1MaXNtb3JlIENpdHkgQm93bGluZyBDbHViOiBTdWppdGlrbyA4cG1SYWlscywgQnlyb24gQmF5OiBKb24gSiBCcmFkbGV5IDYuMzBwbUFsc3RvbnZpbGxlIExlaXN1cmUgRW50ZXJ0YWlubWVudCBDZW50cmU6ICdSZWFkeSB0byBSb2NrJyBSb2NrIGFuZCBSb2xsIENsYXNzZXMgNy4zMHBtQXVzdHJhbGlhbiBIb3RlbCwgQmFsbGluYTogVHJpdmlhIDYuMzBwbUJhbGxpbmEgUlNMIENsdWI6IEppbSBGYWlyZnVsbCA3cG1CYW5nYWxvdyBIb3RlbDogT2NjdWx0IERKJ3MgOHBtQ2hlZWt5IE1vbmtleXMsIEJ5cm9uIEJheTogRmxhcmVzIGFuZCBGdW5rc3RhcnNJdGFsbyBBdXN0cmFsaWFuIENsdWIsIE5vcnRoIExpc21vcmU6IFN3aW5ndGltZSBkYW5jZSBjbGFzc2VzIEJlZ2lubmVycyA3cG0sIEludGVybWVkaWF0ZSA4cG1MZW5ub3ggUG9pbnQgSG90ZWw6IERKIEVtcGlyZSBTcXVhcmUgOC4zMHBtTGlxdWlkIEJhciBOaWdodGNsdWIsIEJ5cm9uIEJheTpSYWlscywgQnlyb24gQmF5OiBMdWtlIFllYW1hbiA2LjMwcG1UaGUgTG9mdCwgTGlzbW9yZTogT3VkbmVzcyA1LjMwcG1XaW5zb21lIEhvdGVsLCBOb3J0aCBMaXNtb3JlOiBUb21hcyBGb3JkIDhwbU5vcnRoZXJuIFN0YXIgTHRkIDIwMTkuTmV3cyBDb3JwIEF1c3RyYWxpYSBHcm91cCBXZWJzaXRlc05lZWQgSGVscD8gUmVmZXIgdG8gb3VyIGhlbHBmdWwgRkFRIHNlY3Rpb24gZm9yIGFueSBwcm9ibGVtcyB5b3UgbWlnaHQgYmUgZXhwZXJpZW5jaW5nLk5vcnRoZXJuIFN0YXIgTm9ydGhlcm4gUml2ZXJzIE5ld3MgTmF0aW9uYWwgTmV3cyBXb3JsZCBOZXdzIFNwb3J0IExpZmVzdHlsZSBUcmF2ZWwgU2hvcHBpbmcgQnVzaW5lc3MgUmVhbCBFc3RhdGUgSG9tZSBMb2FucyBOb3J0aGVybiBSaXZlcnMgV2VhdGhlciBOZXdzcGFwZXJzIGluIEVkdWNhdGlvbldoYXQncyBPbiBFbnRlcnRhaW5tZW50IEV2ZW50cyBQbGFjZSBhbiBldmVudCBDb21wZXRpdGlvbnNOb3J0aGVybiBSaXZlcnMgQ2xhc3NpZmllZHMgSm9icyBpbiBOb3J0aGVybiBSaXZlcnMgQ2FycyBmb3IgU2FsZSBpbiBOb3J0aGVybiBSaXZlcnMgUHJvcGVydHkgbGlzdGluZ3MgaW4gTGlzbW9yZSBCYXJnYWlucyBmb3IgU2FsZSBpbiBOb3J0aGVybiBSaXZlcnMgT2JpdHVhcmllcyBQZXJzb25hbHMgTm90aWNlcyBQcm9wZXJ0eSBmb3IgUmVudCBIb3VzZXMgZm9yIFNhbGUgQ2xhc3NpZmllZHMgR2FyYWdlIFNhbGUgUmVjcnVpdG1lbnQuIApUd2VudHkgeWVhcnMgbWF5IGhhdmUgZG9uZSBhIGdyZWF0IGRlYWwgb2Ygc3RyZXNzIHRvIHlvdXIgYm9keS4gQWZ0ZXIgYWxsLCByYWlzaW5nIGEgZmFtaWx5IGlzIG5ldmVyIGVhc3kuIEhhdmUgYSByZWd1bGFyIGd5bSBvciBleGVyY2lzZSBzY2hlZHVsZSB0aGF0IGZpdHMgeW91ciBidXN5IGxpZmUgYXMgYSBtb3RoZXIgYW5kIHdpZmUuLiAKQm9uZHMgYXBwYXJlbnRseSBoYWQgc2V2ZXJhbCB0YWxrcyB3aXRoaGlzIG9sZCBtYW5hZ2VyIEppbSBMZXlsYW5kLHdobywgYWdhaW4sIGRvZXNuIGhhdmUgcGVyc29ubmVsIHBvd2VyIGluIERldHJvaXQgYW5kIGp1c3QgYWRkZWQgR2FyeVNoZWZmaWVsZCBhbmQgcmUgc2lnbmVkIFNlYW4gQ2FzZXkgYW55d2F5LgpJIGFjdHVhbGx5IGhhdmUgYSBWIE9uZSBJIGZvdW5kIGluIGEgZHVtcHN0ZXIsIGFuZCBkaXNhc3NlbWJsZWQgaXQgdG8gZmluZCBpdCBsaXRlcmFsbHkgYSB0eXBpY2FsIDNEIHByaW50ZXIgYXQgaGVhcnQuIEFUbWVnYTI1NjAgYmFzZWQgYm9hcmQsIHJ1bm5pbmcgTWFybGluLCB3aXRoIGNvbXBsZXRlIHNldCBvZiB0eXBpY2FsIGVuZHN0b3BzLCBYLFksWixFIGF4ZXMgYW5kIGhlYXRlZCBiZWQuIApSZWdpcyBhbmQgTGlmZWNvYWNoIGFyZSBncmVhdCBleGFtcGxlcyBvZiB0aGUgZXh0cmVtZXMsIGJ1dCBpbiB0aGUgZW5kLiBCb3RoIGNvdWxkIGJlIGp1c3QgYXMgd3Jvbmcgd2l0aCB0aGVpciBpbml0aWFsIHJlYWN0aW9ucy4gClRoZSBXaWxsaWFtc3Rvd24gZ3Jvb21lciBkaWQgQzRBIGZyb20gV2lsbGlhbXN0b3duIHRvIEhhcHB5IFZhbGxleSBhbmQgYWxsIG9mIHRoZSBBbHRtYXIgdHJhaWxzIGxhc3QgbmlnaHQuIApJbiBjb25uZWN0aW9uIHdpdGggWmlhLCBieSB0aGUgd2F5LCBhZnRlciBoaXMgdGFsaywgSSBzYXcgWmFyZGFyaSBCaHV0dG8gaW4gZWFybmVzdCBjb252ZXJzYXRpb24gd2l0aCBSb2JpbiBSYXBoYWVsLCBhIGZvcm1lciBhc3Npc3RhbnQgc2VjcmV0YXJ5IG9mIHN0YXRlIGFuZCBhbiBBbWVyaWNhbiBhbWJhc3NhZG9yIHdpdGggbGlua3MgdG8gUGFraXN0YW4uIEJvdGggdGhlaXIgbGl2ZXMgaGFkIGJlZW4gdG91Y2hlZCBieSBaaWEsIGluIEJodXR0byBaYXJkYXJpJ3MgY2FzZSB0aGUgZGVhdGggb2YgaGlzIGdyYW5kZmF0aGVyLiAKTU9USEVSIElUIEhBUyBPTkxZIEJFRU4gMjQgSE9VUlMhIEFjY29yZGluZyB0byBCZW4gYW5kIEp1ZHksIEkgbG9va2VkIGxpa2Ugc29tZSBmcmVha3kgdGVlbmFnZXIgZG9pbmcgc29tZSB3aWxkIGNoaWxkIHRoaW5nIHRvIG15IG1vdGhlciBzaW5jZSBJIGhhZCBhIHdpbGQgbG9vayBvbiBteSBmYWNlIGFuZCBJIHdhcyBzd2luZ2luZyBteSBhcm1zIGFyb3VuZC4uIApXaGF0ZXZlciBNb2RpJ3MgcmVhbCBtb3RpdmVzLCBoaXMgZHJhbWF0aWMgTGFob3JlIHZpc2l0IGRpZCBtYXJrIHRoZSBiaWdnZXN0IHN1cnByaXNlIG9mIGFsbCBoaXMgZGlwbG9tYXRpYyBtb3ZlcyBzaW5jZSBoZSBjYW1lIHRvIHBvd2VyLiAKR2xhZCB0byBzZWUgc2hlJ3Mgb24gdGhlaXIgJ2RvIG5vdCBhZG9wdCcgbGlzdCwiIGFub3RoZXIgd3JvdGUuICJBcyBzb21lb25lIHdobyBoYXMgdm9sdW50ZWVyZWQgd2l0aCBhbmltYWwgYWRvcHRpb25zLCB0aGF0IGRlZmluaXRlbHkgbWVldHMgdGhlIGNyaXRlcmlhLiBJIGFkb3JlIENocmlzIFByYXR0IGJ1dCB0aGVzZSBiZWhhdmlvcnMgYXJlIGRpc3R1cmJpbmcuIi4gCk1pc3MnQW5uYSBNYXkgR2lsbGlvbiBhbmQgTXJzLiIgSGFycnkgRXR6bGVyLCBMb3MgaiBBcGFydG1lbnRzIEFuZ2VsZXMsIENhbGlmb3JuaWEsIHdlcmUgbG9jYWwgaiByZW1haW5lZCB3aXRoIGhlciBicm90aGVyIGluIGxhdyBhbmQgdmlzaXRvcnMgU3VuZGF5LiAKRXhlcmNpc2UgYW5kIGNoaXJvcHJhY3RpYwpBbnl3YXksIGxldCBtZSB0cnkgdG8gbmlwIHRoZXNlIHRhbmdlbnRzIGluIHRoZSBidWQuIApUaGUgc2FtZSB0aW1lLCBaeW5nYSBzdWNjZXNzIGhhcyBiZWVuIGEgaHVnZSBib29uIHRvIEZhY2Vib29rLCBib3RoIGRpcmVjdGx5IGFuZCBpbmRpcmVjdGx5LiAKU3VycywgbW9kbGVzLCBhbWllcyBkZXMgaW5mbHVlbmNlcyBtYXJxdWFudGVzIHBhcnRpciBkZSBzZXMgdHJhdmF1eCwgZWxsZSBjcml0IHBsdXNpZXVycyBvdXZyYWdlcywgaW50ZXJ2aWVudCBkYW5zIGRlcyBtaXNzaW9ucyAoY29tbWUgTGVzIE1hdGVybmVsbGVzIHN1ciBGcmFuY2UgNSkgZXQgZG9ubmUgZGVzIGNvbmZyZW5jZXM6IGFwcnMgcyBwZW5jaGUgc3VyIGwgKExhIFJwYXJhdGlvbiBldCBMIGF1IHF1b3RpZGllbiksIGVsbGUgcyAgZGl2ZXJzZXMgcHJvYmxtYXRpcXVlcywgY29tbWUgY2VsbGUgZGUgbGEgZmFtaWxsZSAoUGFyZG9ubmVyICBzZXMgcGFyZW50cyBldCBQYXJkb25uZXIgIHNlcyBlbmZhbnRzKSwgZHUgY291cGxlIGV0IGRlIGwgKENvbW1lbnQgYWltZW50IGxlcyBmZW1tZXM7IExlcyBIb21tZXMsIGwnYW1vdXIsIGxhIGZpZGxpdCBldCBMYSBycHRpdGlvbiBhbW91cmV1c2U6IHNvcnRpciBkZSBsJ2NoZWMpLCBsYSBtYXRlcm5pdCAodHJlIG1yZTogbWlzc2lvbiBpbXBvc3NpYmxlPykgZXQgZGUgbGEgZm1pbml0IChTZXh5IHNvaXQgZWxsZSkuCkh1bWFuIG5hdHVyZSBsZW5kcyBpdHNlbGYgdG8gcmVmbGV4aXZlLCBlbW90aW9uYWwgcmVzcG9uc2VzOyBlbm91Z2ggcGVvcGxlIHNlbGYgYWRtaW5pc3RlcmluZyBsaXRtdXMgdGVzdGluZyBrZWVwcyB0aGUgcmVzdCBvZiB1cyBpbiBjaGVjayBmb3IgdGhlIG1vc3QgcGFydC4gCk5vdCBjZXJ0YWluIG9uIHRoZSBwb29sIGFzIHdlIGFyZSBsb29raW5nIGF0IGEgY291cGxlIHBvc3NpYmxlIGRpZmZlcmVudCBvcHRpb25zLCBDb3VuLiBQZXRlIENvdXJ0bmV5IHNhaWQgaW4gYW4gZW1haWwuIApKdXN0IGxvb2sgYXQgdGhlIG9yaWdpbmFsIEJhdG1hbiBzZXJpZXMgY29tcGFyZWQgdG8gTm9sYW4gRGFyayBLbmlnaHQgZmlsbXMuIFRoZSBjaGFuZ2VzIHRoYXQgdG9vayBwbGFjZSBpbiB0aGF0IHVuaXZlcnNlIGJldHdlZW4gdGhvc2UgdHdvIGl0ZXJhdGlvbnMgd2VyZSB3YXkgbW9yZSBzdWJzdGFudGl2ZSB0aGFuIGp1c3QgZ2VuZGVyLiBHZW5kZXIgaXNuIHNwZWNpYWwgYW5kIGlzbiBvZmYgbGltaXRzIGZvciBzdWNoIGNoYW5nZXMuQnV0IHdoYXQgZG9lcyBib3RoZXIgbWUgaXMgdGhlIGVuZGxlc3MgcmVjeWNsaW5nIG9mIGVzdGFibGlzaGVkIHVuaXZlcnNlcyB0byBtaWxrIHRoZSBib3ggb2ZmaWNlIHJhdGhlciB0aGFuIGFjdHVhbGx5IG1ha2luZyBzb21ldGhpbmcgbmV3LmVkaXQ6IEFsc28sIGFzIHBvaW50ZWQgb3V0LCB0aGVyZSBoYXMgYmVlbiBubyBnZW5kZXIgcmVwbGFjZW1lbnQgaW4gTWFydmVsIG9yIFN0YXIgV2FycyBtb3ZpZXMgdGhhdCBJIGF3YXJlIG9mLiAKVGhlbiBhcyB0aGUgY29udmVyc2F0aW9uIGVzY2FsYXRlZCBpdCBzaGlmdGVkIHRvd2FyZHMgaG93IGVhY2ggcGVyc29uIHdvdWxkIGdvIGFib3V0IHBpY2tpbmcgYSBzdHJhdGVneSB0byB0cnkgYW5kIG1ha2UgdGhlIGZpbmFsIHRhYmxlLiBHcmFudGVkIHRoaXMgd2FzIGEgZGViYXRlIHRoYXQgd2FzIGdvaW5nIG5vd2hlcmUgZmFzdCwgYnV0IGl0IHdhcyBmdW4gdG8gdGhpbmsgYWJvdXQgbm9uZXRoZWxlc3MuLiAKVGhlIG1lcmdpbmcgb25lLCB5b3VyZSBjdXR0aW5nIHRoZSBsYW5lcyBpbiB0aGUgcm91bmRhYm91dCwgYmFkIGhhYml0LiBZb3UgZG9pbmcgaXQgZW5jb3VyYWdlcyBjYXJzIHRvIGRvIGl0IGFuZCBvbmUgZGF5LCBhIGNhciBpcyBnb2luZyB0byBkbyBpdCB3aGlsZSB5b3Ugd2FudCB0byBiZSBpbiB0aGUgaW5zaWRlIGxhbmUuIFlvdSBkaWRudCByZWFsbHkgbG9vayBlaXRoZXIsIGp1c3QgYXNzdW1lZCBvbGQgbWF0ZSBpbiB0aGUgbmlzc2FuIHdhc250IHRoZXJlLiBXaGlsZSBoZSB3YXMgZ29pbmcgc2xvdyBhbmQgSSBwcm9iYWJseSB3b3VsZCBoYXZlIG1hZGUgdGhlIHNhbWUgYXNzdW1wdGlvbiwgYnV0IGltIG5vdCBvbiBteSBMIGhlcmUuIEkgZG9udCB0aGluayBpdHMgYSBnb29kIGhhYml0IHRvIGJlIHN0YXJ0aW5nIHdpdGguIEkgY2FuIGFwcHJlY2lhdGUgdGhlIGRlc2lyZSB0byBnbyBmYXN0LCBmZWVsIHRoZSBmcmVlZG9tIGFuZCBwb3dhaCBldGMuIEJ1dCB0aGF0cyBub3QgdGhlIGJlc3QgcGxhY2UgZm9yIGl0LiBHbyBzb21ld2hlcmUgd2hlcmUgdGhlcmUgaXMgbGVzcyB0cmFmZmljIGF0IHRoZSB2ZXJ5IGxlYXN0LCB0aGVyZXMganVzdCB0b28gbWFueSBwZW9wbGUgd2hvIGNhbiBkbyB0b28gbWFueSB1bnByZWRpY3RhYmxlIHRoaW5ncyBmb3IgeW91IHRvIGJlIGRvaW5nIDIwIG92ZXIgdGhlIGxpbWl0LiBJdHMgbm90IGEgcmFjZSB0cmFjaywgc2xvdyB0aGUgZnVjayBkb3duLiBJIGNvdWxkIGJlbGlldmUgdGhhdCB5b3VkIHBhc3MgdGhlIGNhcnMgc28gdGhleXJlIG5vdCBob2xkaW5nIHlvdSB1cCwgYnV0IHRoZSBzY29vdGVyIHdhcyBtb3ZpbmcgYWxvbmcganVzdCBmaW5lLiBIZSBpc250IGludGVyZXN0ZWQgaW4gYSByYWNlIGFuZCB5b3VyZSBub3Qgb24gYSByYWNlIHRyYWNrLgpUaGUgZGV2cyBkaWQgdGhpcyB0byB0aGVtc2VsdmVzLiAKTGFjayBvZiBzdWJqZWN0cyBvYnZpb3VzbHkgc2F5cyBhIGxvdCBhYm91dCB0aGUgc3R1ZGVudCBMMS4gQ29wdWxhIGRlbGV0aW9uIGlzIGNvb2wgd2hlbiBzcGVha2luZyB3aXRoIEFyYWJpYyBvciBSdXNzaWFuIHN0dWRlbnRzIGJlY2F1c2UgdGhleSBzb21ldGltZXMgZW5kIHVwIHNvdW5kaW5nIHJlYWxseSBuYXRpdmUhICJZb3UgT0s/IiBpbnN0ZWFkIG9mICJBcmUgeW91IE9LPyIuIEkgaGFkIGEgc3R1ZGVudCByZWNlbnRseSBzYXkgIkhlIG5hc3R5ISIgYW5kIGl0IHNvdW5kZWQgYmVhdXRpZnVsbHkgbmF0aXZlLgoiVGhlIGxhdGVzdCBmaWd1cmVzIHN0aWxsIHNob3cgd2UgYXJlIHRoZSBudW1iZXIgb25lIHVuaXZlcnNpdHkgZm9yIGdyYWR1YXRlIGVtcGxveWVlcy4iIEJlbiBCcmFkbGV5LCB3aG8gaGFzIGJlZW4gd2l0aCBDU1Ugc2luY2UgMTk5OCwgd2FzIGF3YXJkZWQgdGhlIHRpdGxlIG9mIGVtZXJpdHVzIHByb2Zlc3NvciBvbiBGcmlkYXkuICJJJ20gbWlnaHRpbHkgY2h1ZmZlZCwiIGhlIHNhaWQuICJJdCdzIGEgbG92ZWx5IHRoaW5nLCB0byBiZSByZWNvZ25pc2VkIGZvciBhIGdyZWF0IGNhcmVlciBhbmQgdGhlIG9wcG9ydHVuaXR5IENTVSBoYXMgZ2l2ZW4gbWUuIApTdGljaHRlciBzcG9rZSB0byBqdXN0IG9uZSB3b21hbiBhdCB0aGUgZnJvbnQgZGVzaywgd2hvIHNhaWQgdGhlcmUgd2VyZSBvbmUgb3IgdHdvIG1hc3NhZ2VzIHVuZGVyIHdheS4uIApPbiBKdWx5IDE0dGgsIDIwMTUgYXQgYXBwcm94aW1hdGVseSA2OjM2IHBtLCBMb3ZlbGFuZCBwb2xpY2Ugb2ZmaWNlcnMgcmVzcG9uZGVkIHRvIDIxNTAgVy4gMTV0aCBTdHJlZXQgYW5kIE1jS2VlIE1lZGljYWwgQ2VudGVyIGZvciBhIHJlcG9ydGVkIHN0YWJiaW5nLiAKTmV3IEplcnNleSBEZXZpbHMgbGVnZW5kIEtlbiBEYW55ZWtvIGhhcyBmb3VuZCBhIHdheSB0byBmaWxsIHRoZSBjb21wZXRpdGl2ZSB2b2lkIGFmdGVyIHJldGlyaW5nIGZyb20gaG9ja2V5IGZvbGxvd2luZyB0aGUgRGV2aWxzIDIwMDMgU3RhbmxleSBDdXAgdmljdG9yeSBvdmVyIHRoZSB0aGVuIE1pZ2h0eSBEdWNrcyBvZiBBbmFoZWltLCBEYW5leWtvJ3MgdGhpcmQgQ3VwIHdpbi4gVGhlIG1hbiBuYW1lZCAiTXIuIERldmlsIiBoYXMgc2lnbmVkIGEgc3BvbnNvcnNoaXAgZGVhbCB3aXRoIG9ubGluZSBwb2tlciByb29tIHBhcnR5cG9rZXIsIHdoaWNoIGN1cnJlbnRseSBvcGVyYXRlcyBsZWdhbCBvbmxpbmUgcG9rZXIgaW4gdGhlIFN0YXRlIG9mIE5ldyBKZXJzZXksIHdoaWNoIHdpbGwgc2VlIERhbmV5a28gcmVwcmVzZW50IHRoZSBjb21wYW55IGluIHZhcmlvdXMgcG9rZXIgdG91cm5hbWVudHMgYm90aCBsaXZlIGFuZCBvbmxpbmUuLiAKUmVtYXJrYWJseSwgdGhlIDI1IHllYXIgb2xkIG5hdGl2ZSBvZiBXZXN0bW91bnQsIFF1ZS4sIGtlcHQgaGVyIHdvcmQgd2hlbiB0aGUgUGF0cmlvdHMgc3Rvcm1lZCBiYWNrIGZyb20gYSAyNSBwb2ludCBkZWZpY2l0IHRvIHdpbiAzNCAyOCBpbiBvdmVydGltZS4KQmVucmVoICAyIHBvaW50cyAgc3VibWl0dGVkIDEzIGRheXMgYWdvCkhlIHRoaW5rcyB0aGUgbmVpZ2hib3JzIGFyZSBnb2luZyB0byBoYXRlIGhpbSBmb3JldmVyLCBzbyBoZSB0YWtlcyB0aGUgZGlydHksIGNoZXdlZCB1cCByYWJiaXQgaW50byB0aGUgaG91c2UsIGdpdmVzIGl0IGEgYmF0aCwgYmxvdyBkcmllcyBpdHMgZnVyLCBhbmQgcHV0cyB0aGUgcmFiYml0IGJhY2sgaW50byB0aGUgY2FnZSBhdCB0aGUgbmVpZ2hib3IgaG91c2UsIGhvcGluZyB0aGF0IHRoZXkgd2lsbCB0aGluayBpdCBkaWVkIG9mIG5hdHVyYWwgY2F1c2VzLgoxIENvciAxNTo1MSw1MiBzaGFsbCBub3QgYWxsIHNsZWVwLCBidXQgd2Ugc2hhbGwgYWxsIGJlIGNoYW5nZWQsIGluIGEgbW9tZW50IGluIHRoZSB0d2lua2xpbmcgb2YgYW4gZXllLCBhdCB0aGUgbGFzdCB0cnVtcDogZm9yIHRoZSB0cnVtcGV0IHNoYWxsIHNvdW5kIDEgVGhlcyA0OjE2LDE3IHRoZSBkZWFkIGluIENocmlzdCBzaGFsbCByaXNlIGZpcnN0LCB0aGVuIHdlIHdoaWNoIGFyZSBhbGl2ZSBhbmQgcmVtYWluIHNoYWxsIGJlIHVwIHRvZ2V0aGVyIHdpdGggdGhlbSBpbiB0aGUgY2xvdWRzLiBUaGUgdHJ1bXBldCBzb3VuZHMuIFRoZW4gYm9ybiBhZ2FpbiBDaHJpc3RpYW5zIHdpbGwgYmUgd2l0aCBKZXN1cy4gCklzIHRoZXJlIGFueSBzdHJhdGVneSB0byB3aW5uaW5nIGF0IGNyb3duIGFuZCBhbmNob3I/IHRoZSBsdWNrIG9mIHRoZSBkcmF3LiBJbiBhbnkgZ2FtZSwgRmFsY29uZXIgc2FpZCBmbGF0bHkuIApJbiBhIHJlY2VudCB2aWRlbyBaaXJlbmUgZGVtb25zdHJhdGVzIGhvdyBhIHdhcmRpbmcgdGVuYW5jeSBieSBTbWViIGluIHRoZSBwbGF5b2ZmIHNlcmllcyBiZXR3ZWVuIFNLVCBhbmQgS1QgKHlvdXR1YmUpIGFsbG93ZWQgU0tUIHRvIHB1bmlzaCBLVCBqdW5nbGVyIFNjb3JlIHZlcnkgaGVhdmlseSBpbiBnYW1lIDUuIEluIFJpZnQgUml2YWxzIHdlIGFsc28gc2F3IE5BIHRlYW1zIGZyZXF1ZW50bHkgcHVuaXNoIEVVIGZvciBwcmVkaWN0YWJsZSB3YXJkaW5nIHBhdHRlcm5zIGFyb3VuZCBib3Qgc2lkZSBhbmQgZHJhZ29uIHdoaWNoIGxlZCB0byBhIGxhcmdlIGtub3dsZWRnZSBkaXNwYXJpdHkgYmV0d2VlbiBOQSBhbmQgRVUgdGVhbXMgaW4gdGhlIGJvdHRvbSBoYWxmIG9mIHRoZSBtYXAuLiAKVG8gZmluZCBzb21lIGtleSBjdXRpY2xlIGNyZWFtIGluZ3JlZGllbnRzLCB5b3UgbWF5IG5vdCBoYXZlIHRvIGxvb2sgZnVydGhlciB0aGFuIHlvdXIgcGFudHJ5LiAKSGlzIGV4cGxhbmF0aW9uIG9mIHRoZSBpbmNpZGVudCB3aXRoIHRoZSBjYWJsZSBUViBtYW4gd2FzIGNsYXNzaWMgSm9obm55OiBIZSBoYWQgYmVlbiBwbGF5aW5nIHBva2VyIGFsbCBuaWdodCBhbmQgdGhlIGdhbWUgd2FzIHN0aWxsIGdvaW5nIGluIHRoZSBtb3JuaW5nIHdoZW4gaGUgc2F3IGEgbWFuIGluIGhpcyBiYWNreWFyZCBhbmQgdG9vayBoaW0gZm9yIGFuIGludHJ1ZGVyLgpEZXQgZmlubnMgbW5nYSBicmEgbnUgdGlsbCBzYWx1Li4gCkluIGdlbmVyYWwgSSBwcmVmZXIgdGhlIHR1cnJldCB3aGVuIEkgaGF2ZSByb29tIGZvciBpdC4gCkFuZCB0aGF0IGxpZmUgc2hvdWxkIGJlIGdpdmVuIHRoZSBiZXN0IHN0YXJ0IHlvdSBjYW4gZ2l2ZSBzb21lb25lLiBJZiB5b3UgY2FuIGdpdmUgdGhhdCwgaWYgeW91IGNhbiBzdXBwb3J0IHlvdXIgY2hpbGRyZW4geW91IHNob3VsZG4gaGF2ZSBhbnkuIApVbml0ZWQgU3RhdGVzIFNlbmF0ZSBDb21taXR0ZWUgb24gQXJtZWQgU2VydmljZXMKQ29uY2x1c2lvbjogT3VyIHJlc3VsdHMgY29uZmlybSB0aGF0IHZpdGFtaW4gRCBkZWZpY2llbmN5IGlzIGFzc29jaWF0ZWQgd2l0aCBhIHN1YnN0YW50aWFsbHkgaW5jcmVhc2VkIHJpc2sgb2YgYWxsIGNhdXNlIGRlbWVudGlhIGFuZCBBbHpoZWltZXIgZGlzZWFzZS4gCkFuZCB5ZXQsIGxpYmVyYWxzIGFsbG93ZWQgdGhlbXNlbHZlcyB0byBiZSBvdXRyYWdlZCwgd2hpY2ggZm9yY2VkIGEgZmFrZSBkaXNpbGx1c2lvbm1lbnQsIGFuZCBjYXVzZWQgbG93IHZvdGVyIHR1cm5vdXQuIFRoaXMgZ2F2ZSByZXB1YmxpY2FucyB0aGUgY29uZ3Jlc3MgYW5kIHRoZSBzZW5hdGUsIGFuZCBldmVudHVhbGx5IHRoZSBwcmVzaWRlbmN5LgpJZiB5b3VyIHNoaWVsZCBkb2VzbiBkcmF3IGFueSByZWFjdGlvbiBmaXJlIGFzIHNvb24gYXMgdGhleSBnbyBpbnRvIHRoZSBhbGllbiB2aXNpb24sIHRoZSBzaG90Z3VuIHdvbiBlaXRoZXIuIApBbmQgUm93ZSwgSi4gCkl0IGZlYXR1cmVzIGEgY2hlcnJ5IGZpbmlzaCBhbmQgaXQncyBtYWRlIG91dCBvZiBvYWsuIEVzc2V4IHBva2VyIGRpbmluZyB0YWJsZXMgd2lsbCBzZWF0IGZvdXIgcGxheWVycy4gQ3VwIGhvbGRlcnMgYW5kIGNoaXAgdHJheXMgYXJlIGluY2x1ZGVkLiAKT25jZSBoaXMgYXR0aXR1ZGUgc3RhcnRlZCB0dXJuaW5nIHBlb3BsZSBhd2F5IGZyb20gYWxsIG9mIHVzLCB3ZSByZXBvcnRlZCB0aGUgYXNzaG9sZSB0byB0aGUgY2l0eSBjb3VuY2lsIG9mZmljZSwgdG8gbm8gYXZhaWwuIE9uZSBkYXkgaGUganVzdCBzdG9wcGVkIHNob3dpbmcgdXAuIApDYXB0YWluX2Jvd2x0b24gIDIyIHBvaW50cyAgc3VibWl0dGVkIDUgbW9udGhzIGFnbwpUaGVyZSBhcmUgbWFueSBwcm9taXNpbmcgc29mdCB0aXNzdWUgdHJlYXRtZW50IG1ldGhvZHMgdGhhdCBhcmUgaGVscGluZyB0byByZWxpZXZlIGNocm9uaWMgcGFpbiBhbmQgaW1wcm92ZSBhdGhsZXRpYyBwZXJmb3JtYW5jZS4KU2VlIHdoYXQgdGhleSB3YW50IG9yIG5lZWQgZnJvbSB5b3UuIApIZXIgdXBiZWF0IHBlcnNvbmFsaXR5LCBhbmQgb3B0aW1pc20gbWFrZSBoZXIgdW5pcXVlIGFuZCByYXJlLiBCYW5uZXIgaGFzIHdyb25nIGZvcm1hdCwgb25seSBqcGcsIHBuZyBhbmQgZ2lmISBNdWx0aXBsZSBhcHByb2FjaGVzIGd1YXJhbnRlZWQgeW91LGxsIGdldCBsYWlkIGFuZCB5b3UsbGwgc29vbiBnZXQgcGlja3kgYW5kIGVuam95IHNvbWUgcmVhbCBiZWF1dGllcy4gU29tZXRpbWVzIHNoZW1hbGUgYW5kIHBvcm5zdGFyIGVzY29ydHMgYXJlIG9uIHRvdXIgaW4gTWFuaWxhIGJ1dCBhdmFpbGFiaWxpdHkgZGlmZmVycy4uIApJZiB0aGUgZG9sbGFyIGNvbGxhcHNlcywgaXQgaXMgd29ydGggTk9USElORy4gWW91IGNhbiB1c2UgaXQgZm9yIHRvaWxldCBwYXBlciBiZWNhdXNlIGl0cyB2YWx1ZSBpcyBhdHRhY2hlZCB0byB0aGUgZWNvbm9teSBhbmQgdGhlICJ2YWx1ZSBvZiB0aGUgZG9sbGFyIiBHb2xkIGlzIGF0IGxlYXN0IGFzIHZhbHVhYmxlIGFzIGl0IGlzIGluIHRoZSB3b3JzdCBGVU5DVElPTklORyBlY29ub215LiAKTGVtb2NoZSAgMCBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvClRoZSB3b3JzdCBwYXJ0IGlzIHRoZSBpNyA4NzAwSyBpcyBhIDE0bm0sIGFsbW9zdCB0d28gZ2VuIG9sZCBjaGlwIHRoYXQgd2lsbCBzdGlsbCBwcm9iYWJseSBiZWF0IGV2ZXJ5IHNpbmdsZSBBTUQgY2hpcCBjb21pbmcgaW4gbWF5IGZyb20gdG9wIHRvIGJvdHRvbSBpbiBnYW1pbmcuIEFzIHdlbGwgYXMgZXZlcnkgc2luZ2xlIGNoaXAgdGhleSBoYXZlIHJlbGVhc2VkIHByZXZpb3VzbHksIGJ1dCB5b3Ugbm90IGFsbG93ZWQgdG8gYmUgaGFwcHkgd2l0aCB5b3VyIHB1cmNoYXNlIGFyb3VuZCBoZXJlIGJlY2F1c2UgQU1EIGlzIHRoZSBwZW9wbGUgYnJhbmQgSW50ZWwgaXMgZXZpbC4gCk5vdXMgdml2b25zIGxhIGZpbiBkZXMgdGVtcHMuIExldXJzIHBybWljZXMgc29udCBsLCBpbHMgbm91cyBlbmNlcmNsZW50IGV0IGVuY2FkcmVudCBjaGFjdW4gZGUgbm9zIGFjdGVzLiBDJ2VzdCB1biBjYW5jZXIgaW5sdWN0YWJsZSBxdWkgc2UgcHJvcGFnZSBhdmVjIHVuZSBmZXJtZSBjZXJ0aXR1ZGUgZXQgbm91cyBuJ3kgcG91dm9ucyByaWVuLCBjYXIgbGVzIGRzIHNvbnQgamV0cywgbGVzIGpldXggc29udCBmYWl0cy4gUmllbiBuJ2FycnRlcmEgbGEgZmluIGFtcmUgZGVzIGNob3NlcyBlbiBjb3VycyBkZXB1aXMgbGEgbnVpdCBkZXMgdGVtcHMgZXQgc2UgcHJwYXJhbnQsIGRvcm5hdmFudCwgIGF0dGVpbmRyZSBzb24gc2FuZ2xhbnQgcGFyb3h5c21lLgpOZXZlciB0aGUgdG91Z2hlc3QgaW4gaGlzIGZldWRzIChlYXJseSBkYXlzIGluIGNvbXBhcmlzb24gdG8gU3RvbmUgQ29sZCksIG5ldmVyIHRoZSBtb3N0IGNoYXJpc21hdGljIChpbiBjb21wYXJpc29uIHRvIFRoZSBSb2NrKSwgbmV2ZXIgdGhlIG1vc3QgdGFsZW50ZWQgKGNvbXBhcmVkIHRvIEhCSyksIGJ1dCBoZSBhbHdheXMgc2VlbWVkIHRvIHN0YXkgYXJvdW5kIHRoZSB0b3AgdGhyb3VnaCBtYW5pcHVsYXRpb24gd2hpbGUgdHJ5aW5nIHRvIG1haW50YWluIGhpcyBwb3NpdGlvbiBvZiBjb250cm9sLi4gClJlbWVtYmVyICAgeW91IHdpbGwgYWx3YXlzIHRoaW5rIHlvdSdyZSB3YXkgaGFpcmllciB0aGFuIHdoYXQgeW91IGFyZSwgbW9zdCBwZW9wbGUgd291bGRuJ3Qgbm90aWNlIGl0IGF0IGFsbC4gSWYgeW91IGFyZSB2ZXJ5IHVuY29tZm9ydGFibGUsIGxvb2sgaW50byBsYXNlciBoYWlyIHJlbW92YWwgb3B0aW9ucyBhcyB0aGF0IGlzIGEgbG9uZyB0ZXJtIHNvbHV0aW9uLiAKRG9uJ3QgYmUgaW50aW1pZGF0ZWQgYnkgb25saW5lIHBva2VyIGRvd25sb2FkIHRhYmxlcywgZXZlbiBpZiB5b3UndmUgbmV2ZXIgcGxheWVkIHRoZSBnYW1lIGJlZm9yZS4gCk9yYWNsZSBDb29wZXIgZGVzaWduYXRlZCB0aGUgSXphYWsgV2FsdG9uIExlYWd1ZSBvZiBBbWVyaWNhIEVuZG93bWVudCBJbmNvcnBvcmF0ZWQuIFRoaXMgMVdMQSBFbmRvd21lbnQgd2FzIGVzdGFibGlzaGVkIGluIDE5NDMsIGFuZCBpcyBhIHNwZWNpYWwgcHVycG9zZSBmb3VuZGF0aW9uIHRoYXQgcHJvdmlkZXMgZ3JhbnRzIGZvciBJV0xBIGNoYXB0ZXIsIGRpdmlzaW9uIGFuZCBuYXRpb25hbCBsZXZlbCBjb25zZXJ2YXRpb24gcHJvamVjdHMuIFBlcnNvbnMgb3Igb3JnYW5pemF0aW9ucyBtYXkgcmVxdWVzdCBhIGdyYW50IGFwcGxpY2F0aW9uIG9yIG90aGVyIGluZm9ybWF0aW9uIGFib3V0IHRoZSBlbmRvd21lbnQgYnkgY29udGFjdGluZyB0aGUgRW5kb3dtZW50IFByZXNpZGVudCBDaGFybGVzIEVsZHJpZGdlLk9yYWNsZSBDb29wZXIgd2FzIGFsc28gc3VycHJpc2VkIHRvIHJlY2VpdmUgYSBjZXJ0aWZpY2F0ZSBmcm9tIEFtZXJpY2EncyBGcmF0ZXJuYWwgQmVuZWZpdHMgU29jaWV0eSwgcmVjb2duaXppbmcgaGVyIGZvciBoZXIgZ29vZCB3b3JrcyBwZXJmb3JtZWQgaW4gdGhlIG5hbWUgb2YgQW1lcmljYSdzIEZyYXRlcm5hbCBCZW5lZml0IFNvY2lldGllcy4gCkppbSBtYXhpbWl6ZWQgaGlzIHRhbGVudCB3aXRoIE1NSi4gV2l0aG91dCB0aGVtLCBoZSB0cnlpbmcgdG8gYmUgYSBsb3Qgb2YgdGhpbmdzIGhlIG5vdC4gCk5vIHdyZWNrYWdlIG9yIGFueXRoaW5nLiBIYWQgdGhlcmUgYmVlbiBhIGd1YXJkcmFpbCBvciBkaXRjaCB0aGVyZSAsIHdvdWxkIGJlZW4gYSBkaWZmZXJlbnQgc3RvcnkuIApJIGFtIGFsc28gY3VyaW91cyBhcyB0byBob3cgdGhleSBjb3VsZCBwb3NzaWJseSBwb2xpY2UgYWxsIHByb2dyYW1zIHBlb3BsZSBhcmUgdXNpbmcuIElkZWFsbHkgSSBsaWtlIHRvIHNlZSBvbmxpbmUgcG9rZXIgd2l0aCBubyBIVURzIG9yIGF1dG9tYXRpb24vaGVscCBvZiBhbnkga2luZCB3aGlsZSBpbiBhIGhhbmQsIGJ1dCBzdGlsbCBhbGxvdyB0aGUgYWJpbGl0eSB0byBjYXB0dXJlIGhhbmQgaGlzdG9yaWVzIGZvciBwZXJzb25hbCB0cmFja2luZy9zdHVkeS4gQnV0IGl0IGp1c3Qgc2VlbXMgbGlrZSBhIHBpcGUgZHJlYW0gdG8gbWUuIEkgZG9uIGtub3cgZW5vdWdoIGFib3V0IGl0IGJ1dCBJIGRvbiBzZWUgaG93IHRoZXkgY291bGQgc3RvcCBldmVyeSAzcmQgcGFydHkgcHJvZ3JhbS4gTWF5YmUgYSBmZXcgd2lkZWx5IGF2YWlsYWJsZSBvbmVzLCBidXQgd2hhdCBhYm91dCBwZXJzb25hbGx5IHdyaXR0ZW4gYXBwcywgZXRjPwpUT1JPTlRPICAgQXMgTGVpY2VzdGVyIENpdHkgY29udGludWVzIGl0cyB1bmxpa2VseSBhc3NhdWx0IG9uIHRoZSBFbmdsaXNoIFByZW1pZXIgTGVhZ3VlIHRpdGxlLCBvbmUgVG9yb250byBGQyBzdGFmZmVyIGlzIHdhdGNoaW5nIHdpdGggcGFydGljdWxhciBpbnRlcmVzdC4KVGhlIG5leHQgdHlwZSBvZiByYW5raW5nIG9yIGNsYXNzaWZpY2F0aW9uIG9mIHBva2VyIGhhbmRzIGlzIGNhbGxlZCBhIHN0cmFpZ2h0IGZsdXNoLiAKQWxzbyByb2xsIHBhcnRseSBvbnRvIHlvdXIgc2lkZSBhbmQgbG9vayBmb3Igc29yZSBwb2ludHMgaW4gdGhlIG91dGVyIHF1YWQsIHdoaWNoIGFyZSBvZnRlbiBzb3VyY2VzIG9mIGtuZWUgcGFpbi4gClRoZSB3YXkgaXQgaXMgZm9yIHRob3NlIG9mIHVzIHdobyBhY3R1YWxseSBvcGVuZWQgb3VyIGhlYXJ0cyBhbmQgb3VyIHdhbGxldHMgYW5kIG91ciBsaXZlcyB0byBnZXR0aW5nIFByZXNpZGVudCBPYmFtYSBlbGVjdGVkLiAKSSB1c2VkIHRvIHdvcmsgYXQgYSBmYW5jeSBjb2ZmZWUgc2hvcCwgYW5kIEkgd2lsbCBzYXkgYSByZWFsIGVzcHJlc3NvIHdpdGggc29tZSBsZW1vbiB3aWxsIHRydWx5IGJyaW5nIG91dCB0aGUgZmxhdm9yIG9mIGNvZmZlZS4gCk5lZWRsZXNzIHRvIHNheSwgdGhlIGtpbmRhIHBlb3BsZSB3aG8gZ28gdG8gd2FyIGZvciBtb25leSBhcmUgbm90IHdoYXQgd2UgbWlnaHQgY2FsbCAidGhlIGdvb2QgZ3V5cy4iIEJsYWNrd2F0ZXIgb3BlcmF0aXZlcyBoYXZlIGJlZW4gYWNjdXNlZCBvZiBtdXJkZXIgYW5kIHRvcnR1cmUgYW5kIGJlaW5nIHRoZSBjYXVzZSBvZiBhIGxhcmdlIG51bWJlciBvZiBjaXZpbGlhbiBkZWF0aHMuIApNYXIgMTgsIDIwMTggLiAKSGUgcmVjZWl2ZWQgbWVkaWNhbCBhdHRlbnRpb24gZnJvbSBwYXJhbWVkaWNzLCB3aG8gZml0dGVkIGhpbSB3aXRoIGFuIG94eWdlbiBtYXNrLCBhbmQgd2FzIGFkbWl0dGVkIHRvIGEgbmVhcmJ5IGhvc3BpdGFsLCB3aGVyZSBkb2N0b3JzIGRldGVybWluZWQgaGlzIGhlYWx0aCB3b2VzIGhhZCBub3RoaW5nIHRvIGRvIHdpdGggaGlzIGhlYXJ0LiBQb3NzaWJseSBmb29kIHBvaXNvbmluZyB3aXRoIHN1ZGRlbiBvbnNldCBvZiB2aXJ1bGVudCBzeW1wdG9tcy4gR3JlYXQgY2FyZSBoZXJlIGluIExWLiIKIlRoZSBFTENBIGRlY2lzaW9ucyBvZiBsYXN0IEF1Z3VzdCBoYXZlIGJlZW4gdHJ1bHkgZnJlZWluZywgZ2lmdHMgb2YgZ3JhY2UgYW5kIHRoZSBvdXRwb3VyaW5nIG9mIHRoZSBTcGlyaXQuIE1lbWJlcnMgb2YgdGhlIGNvbmdyZWdhdGlvbiBJIHNlcnZlZCBmb3IgMTYgeWVhcnMgYWxzbyByZWpvaWNlZCwgYXMgZGlkIG1lbWJlcnMgb2YgQWR2ZW50LiBUaGUgcHVibGljIHdpdG5lc3MgaGFzIGJlZW4gdmVyeSBwb3NpdGl2ZSBmb3IgR0xCVCBwZW9wbGUuCkFsc28sIEkganVzdCBhbHdheXMgdGhvdWdodCB0aGUgc3VtbyBsb29rcyBjb29sIHNvIEkgd2FubmEgbGVhcm4gaG93IHRvIGdldCBiZXR0ZXIgYXQgaXQuCkFzIGFuIGFyaXpvbmFuIGZvciBtb3JlIHRoYW4gYSBkZWNhZGUgaGF2aW5nIHdvcmtlZCBpbiBzZXZlcmFsIGRpZmZlcmVudCBJbmR1c3RyaWVzIHdpdGggbW9yZSB0aGFuIGEgZG96ZW4gZGlmZmVyZW50IGNvbXBhbmllcyBzZXZlcmFsIHdoaWNoIGNvbnRyYWN0ZWQgd2l0aCBkb3plbnMgb2Ygb3RoZXIgY29tcGFuaWVzLCBJIGNhbiB0ZWxsIHlvdSB0aGF0IHNvbWV0aGluZyBsaWtlIHRoYXQgaXMgZW50aXJlbHkgdXAgdG8gaW5kaXZpZHVhbCBjb21wYW55IGlzIG5vdCBhIHN0YXRlIHRoaW5nLiBXaGVuIEkgd29yayB3aGVuIGNvbXAgY2xhaW0gaXMgc3VibWl0dGVkIGl0IGdldHMgc2VudCB0byBzcGVjaWZpYyBidXJlYXVzLiBNb3N0IGNvbXBhbmllcyB0byBwcmV2ZW50IGFueSB0eXBlIG9mIG1pc2hhbmRsaW5nIHRoYXQgY291bGQgY29tZSBiYWNrIG9uIHRoZW0gd2lsbCBmb3J3YXJkIGNhc2VzIHRvIGEgdGhpcmQgcGFydHkgaW52ZXN0aWdhdGlvbiBzZXJ2aWNlLiAKSW4gcGFydGljdWxhciwgb24gZXhjaGFuZ2VzIHRoYXQgZmF2b3VyIHRoZSBtYWtlciBpbiBwcmljZSBpbXByb3ZlbWVudCAoZG8gdGhlIG9wcG9zaXRlIG9mIHdoYXQgSSBiZWxpZXZlIEJpdG1leCBkb2VzKSwgeW91IGVuZCB1cCB3aXRoIHN0dXBpZCBzaXR1YXRpb25zIHdoZXJlIHRoZSBwcmljZSBkcm9wcyA5MCUgYmVjYXVzZSBzb21lb25lIGFjY2lkZW50YWxseSBwdXQgb24gYSBzZWxsIG9yZGVyIHdpdGggYSBtaXNzaW5nIHplcm8sIGFuZCB0aGUgZXhjaGFuZ2UgZGlkIHRoZSB0cmFkZXMgYXQgdGhlIGVycm9uZW91cyBwcmljZSBpbnN0ZWFkIG9mIHdhbGtpbmcgZG93biB0aGUgb3JkZXIgYm9vayBmcm9tIHRoZSBiZXN0IChoaWdoZXN0KSBidXkgcHJpY2UuLiAKQnV0IHRoZSB0aGluZyBpcywgdGhlcmUgaXMgYSBodWdlIG51bWJlciBvZiBleGlzdGluZyBwb2tlciBib3RzLiAKVGhlIHRydWUgd2VhbHRoIG9mIHRoaXMgbmF0aW9uIGlzIGluIHRoZSBsYWJvciBvZiB0aGUgd29ya2luZyBjbGFzcy4gV2UgY291bGQgZ2V0IHJpZCBvZiBldmVyeSBDRU8gYW5kIGJpbGxpb25haXJlIG92ZXJuaWdodCBhbmQgdXNlIHRoYXQgbW9uZXkgdG8gaW1wcm92ZSB0aGUgbGl2ZXMgb2YgcGVvcGxlIGluIGEgbXlyaWFkIG9mIHdheXMuCkFzIHdlIGhhdmUgc2VlbiBhYm92ZSwgeW91IGFyZSBub3QgY29tcGV0aW5nIGFnYWluc3QgcmVhbCBwbGF5ZXJzLCBidXQgYWdhaW5zdCBhIG1hY2hpbmUuIERvZXMgdGhhdCBtZWFuIHRoYXQgdGhlIGdhbWUgaXMgbm90IGNvbXBsZXRlbHkgZmFpcj8gRG9lcyBpdCBtZWFuIHRoYXQgeW91IHdpbGwgYmUgY2hlYXRlZCBvdXQgb2YgeW91ciBtb25leT8gWW91IG11c3Qga25vdyB0aGF0IHRoZSBnYW1lIGlzIGNvbnRyb2xsZWQgYnkgYW4gUk5HIG9yIFJhbmRvbSBOdW1iZXIgR2VuZXJhdG9yLiAKWW91IGhhdmUgYSBmZXcgc3BvdHMgd2hlcmUgdGhpbmdzIGdldCBqdW1ibGVkIGFuZCBpdHMgaGFyZCB0byB0ZWxsIHdobyBpcyBtYXJyaWVkIHRvIHdoby4gRm9yIGV4YW1wbGUgQWx5biBWZWxhcnlvbm4gaGFkIGFuIGFmZmFpciB3aXRoLiAKSSB0aGluayBpdCBpcyA1IHNlY29uZHMuIFNvIHJhdGhlciB0aGFuIGRvaW5nIHdoYXRldmVyIHdvdWxkIGhhdmUgdG8gYmUgZG9uZSB0byBwdXQgdGhlIGNsb3NlIGRvb3IgYnV0dG9uIG9uIGEgdGltZXIgYmVmb3JlIGl0IGNhbiBiZSB1c2VkLCBhIGxvdCBvZiBwbGFjZXMganVzdCBkaXNhYmxlZCB0aGUgYnV0dG9uIGVudGlyZWx5IGFzIGEgd2F5IHRvIG1lZXQgdGhlIGxlZ2FsIHJlcXVpcmVtZW50cyBpbiBhIGNoZWFwZXIgd2F5Li4gCkNoZWNrIG91dCB5b3VyIG93biBUZXhhcyBIb2xkZW0gUG9rZXIgVGFibGUgRmVsdCBMYXlvdXQgdG9kYXkuIApJIG1ldCBTY290dCBXaWxsaWFtc29uLCB0d2ljZSB5b3lvIGFuZCBjb3VsZG4gaGF2ZSBiZWVuIGEgbmljZXIgYW5kIHN1cHBvcnRpdmUgZ3V5LiBJdCB3YXMgYW4gaG9ub3IgdG8gbWVldCBoaW0uIApJIHRyeSB0byBhbnN3ZXIgbW9zdCBvZiB0aGUgc2Vuc2libGUgcXVlc3Rpb25zIHRoYXQgZmFucyBzZW5kIG1lLiAKRWRpdDogSGFkIHRvIHF1aWNrbHkgdHlwZSBteSBjb21tZW50IGVhcmxpZXIgc28gSSBkaWRudCBnZXQgb3V0IG15IGZ1bGwgdGhvdWdodC4gSSBqdXN0IGxpa2UgdG8gYWRkIHRoYXQgSSB3YXMgcGh5c2ljYWxseSBhYnVzZWQgKHB1bmNoZWQsIGtpY2tlZCwganVzdCBnZW5lcmFsbHkga25vY2tlZCBhcm91bmQpIGJ5IG9uZSBvZiBteSBwYXJlbnRzLCBhbmQgd2hpbGUgc3BhbmtpbmdzIHdlcmUgZGVmaW5pdGVseSBsZXNzIHNldmVyZSB0aGFuIHRoYXQsIGl0IGRvZXNuIG1ha2UgdGhlbSBva2F5LiBUaGV5IGNhbiBib3RoIGJlIGJhZCwgb25lIGlzIGp1c3Qgd29yc2UuLiAKVGhlIG90aGVyIHBlcnNvbiBpbiBsaW5lIGlzIGEgaGlnaCBzY2hvb2wgYWNxdWFpbnRhbmNlLiBUaGV5IHVzZWQgdG8gaGFuZyBhcm91bmQgdG9nZXRoZXIgb25jZSBpbiBhIHdoaWxlIGFuZCBvZnRlbiBhdHRlbmRlZCB0aGUgc2FtZSBmdW5jdGlvbnMuIApJdCBpcyBhbHNvIGFwcGxpY2FibGUgdG8gaGVhbHRoIGNhcmUgd2hlbiBjaGlsZCBpcyBoZWFsdGh5LiBJdCBjYW4gaGVscCBjaGlsZCBncm93IHRhbGxlciBhbmQgc21hcnRlciwgcHJvdGVjdCBjaGlsZCBmcm9tIG5lYXIgc2lnaHRlZCwgZW5oYW5jZSBpbW11bml0eS4gCiJJbm5vY2VudCBwZXJzb25zIHdlcmUgaW5jYXJjZXJhdGVkLCBndWlsdHkgcGVyc29ucyBoYXZlIGJlZW4gcmVsZWFzZWQgdG8gZnVydGhlciBlbmRhbmdlciB0aGUgcHVibGljLCBtaWxsaW9ucyBhbmQgbWlsbGlvbnMgb2YgcHVibGljIGRvbGxhcnMgYXJlIGJlaW5nIGV4cGVuZGVkIHRvIGRlYWwgd2l0aCB0aGUgY2hhb3MgTXMuIERvb2toYW4gY3JlYXRlZCwgYW5kIHRoZSBpbnRlZ3JpdHkgb2YgdGhlIGNyaW1pbmFsIGp1c3RpY2Ugc3lzdGVtIGhhcyBiZWVuIHNoYWtlbiB0byB0aGUgY29yZSwiIEp1ZGdlQ2Fyb2wgUy4gCkZvciBnb25nIGZ1IEkgc3VnZ2VzdCB0aGF0IHlvdSBzdGFydCB3aXRoIGEgc2ltcGxlIGdhaXdhbi4gCldpdGggYSAkMTAwIEJJTExJT04gcHJpY2UgdGFnLCBPYmFtYSBkaXNhc3Ryb3VzIHBsYW5zIGZvciBtb3JlIHdhciBpbiBBZmdoYW5pc3RhbiBjYW4gYW5kIG11c3QgYmUgc3RvcHBlZCBieSBDb25ncmVzcyBtZW1iZXJzIHdobyB1bmRlcnN0YW5kIHdlIGNhbm5vdCBzcGVuZCB0aGVzZSByZXNvdXJjZXMsIG5vdCB0byBtZW50aW9uIHRoZSBpbmNvbXByZWhlbnNpYmxlIGxvc3Mgb2YgaHVtYW4gbGlmZSwgYXQgYSB0aW1lIHdoZW4gb3VyIHVuZW1wbG95bWVudCByYXRlIGlzIG5lYXJpbmcgMjAlIGFuZCBvdmVyIGEgcXVhcnRlciBvZiBVUyBjaGlsZHJlbiBhcmUgb24gZm9vZCBzdGFtcHMuCkZvciBhIGRpc2N1c3Npb24gb2YgYmVzdCBwcmFjdGljZXMgcmVsYXRlZCBzb2xlbHkgdG8gbGVnYWwgbWFya2V0aW5nLCBjdXJhdGVkIGJ5IGFuZCBkaXJlY3RlZCB0b3dhcmRzIG1hcmtldGluZyBwcm9mZXNzaW9uYWxzLCBmZWVsIGZyZWUgdG8gdmlzaXQgb3VyIGZyaWVuZHMgb3ZlciBhdCAvci9MZWdhbE1hcmtldGluZyBhbmQgL3IvTGF3RmlybU1hcmtldGluZy4KVGhlIGxlYWRlcnMgaW4gdGhpcyBmaWVsZCBhcmUgYWx3YXlzIHRoaW5raW5nIGFib3V0IHBva2VyIGFuZCByZWxhdGVkIHBva2VyIGNvbGxlY3RpYmxlcyBub3dhZGF5cy4gCldheSwgaGUgZXhwZWN0cyB0aGUgdHdvIHllYXIgeWllbGQgc3ByZWFkIHRvIHdpZGVuIGZ1cnRoZXIgaW4gdGhlIG5leHQgZmV3IG1vbnRocy4gSW52ZXN0b3JzIHNob3VsZCBnbyBsb25nIENhbmFkaWFuIGZpeGVkIGluY29tZSBhc3NldHMgaW4gdGhlIGZyb250IGVuZCBvciB0aGUgYmVsbHksIGVpdGhlciBvdXRyaWdodCBvciB2ZXJzdXMgQ2FuYWRpYW4gMzAgeWVhciBib25kcyBvciBUcmVhc3VyaWVzLCBoZSBzYWlkLi4gCkhvd2V2ZXIsIGFydGhyaXRpcyBvciBpbmhlcml0ZWQgZGVmZWN0cyBjYW4gYWxzbyBjYXVzZSBidW5pb25zLiAKV2l0aCB0aGlzIHN0cmF0ZWd5LCB5b3VyIG9wcG9uZW50IHdpbGwgbm90IGJlIGFibGUgdG8gZXhwbG9pdCB0aGUgc3RyYXRlZ3kgYW5kIG9ubHkgYmUgYWJsZSB0byBicmVha2V2ZW4gYWdhaW5zdCB5b3UsIG9yIGxvc2UgaW4gdGhlIGxvbmcgcnVuLiAKVGhhdCBpcyB3aGF0IEkgaGF2ZSBiZWVuIHNheWluZyBhbGwgYWxvbmcgd2hpbGUgZ2V0dGluZyBkb3dudm90ZWQuIEkgd2VsY29tZSB0aGUgbG93ZXIgcHJpY2VzLiBJIGRvbid0IHBsYW4gdG8gc2VsbCBteSBjYXIgYW55dGltZSBzb29uIHNvIEkgZG9uJ3QgY2FyZSBhYm91dCBkZXByZWNpYXRpb24uIApIYW5kd3JpdGluZyByZXF1aXJlcyB0b29scyBhbmQgdGltZSwgc28geW91ciBtb3JlIGhpZ2ggdm9sdW1lIGNyZWVwZXJzIGhhZCB3aGF0IGFtb3VudGVkIHRvIGEgbGFib3IgcHJvYmxlbSAgIG1hbnkgdGFyZ2V0cyBidXQgbGltaXRlZCBhbW1vLiBUaHVzLCB0aGUgZGlydHkgbm92ZWx0eSBjYXJkIHdhcyBib3JuLiBBIHByZSBwcmludGVkLCBlYXNpbHkgbGVnaWJsZSwgYW5kIHRvdGFsbHkgY29udmVuaWVudCBtZXRob2Qgb2YgY2FycGV0Ym9tYmluZyBwZW9wbGUgd2l0aCByYW5kb20gY29tZSBvbnMuIApEZWFyRW1pbGlhICAxNiBwb2ludHMgIHN1Ym1pdHRlZCAxMSBtb250aHMgYWdvCk1hbnkgYXN0cm9waG90b2dyYXBoeSBzbmFwc2hvdHMgYXJlIHRha2VuIG92ZXIgbG9uZyBwZXJpb2RzIG9mIHRpbWUgKHNvbWV0aW1lcyBjb250aW51b3VzbHksIHNvbWV0aW1lcyByZXBlYXRlZGx5IG92ZXIgZGF5cy93ZWVrcy9tb250aHMgZXZlbiB5ZWFycykuIApOb3QgdG8gc291bmQgdG9vIG11Y2ggbGlrZSBteSBtb3RoZXIsIGJ1dCBib2RpbHkgY29udHJvbCAoZnJvbSBmYXJ0aW5nIHRvIGJ1cnBpbmcgdG8gaGFiaXRzIG9mIGVhdGluZykgaXMgc3VyZWx5IGxlc3Mgc2V2ZXJlIHRoYW4gaXQgd2FzIGp1c3QgYSBnZW5lcmF0aW9uIGFnby4gQW5kIHRoaXMgaXMgbm90IG5lY2Vzc2FyaWx5IGEgYmFkIHRoaW5nLi4gCkhlcmJvbG9neS4gSGVyYnMgYW5kIGZsb3dlcnMgd2VyZSBwcm9iYWJseSBhbW9uZyB0aGUgZmlyc3Qgd2F5cyBodW1hbiBiZWluZ3MgdHJlYXRlZCBzaWNrbmVzcy4gV2UgYWxzbyBrbm93IHRoYXQgYW5pbWFscyB3aWxsIGVhdCBwbGFudHMgaW4gcmVzcG9uc2UgdG8gY2VydGFpbiBpbGxuZXNzZXMuIApJIG1ldCBzbyBtYW55IHdvbmRlcmZ1bCBwZW9wbGUgYWxvbmcgdGhlIHdheSB0aGF0IGJlY2FtZSBmYW1pbHkuIEkgYWxzbyBtZXQgc28gbWFueSB0ZXJyaWJsZSBodW1hbnMgdGhhdCB0aGFua2Z1bGx5IGFyZSBubyBsb25nZXIgaW4gbXkgbGlmZS4gSSBoYWQgdG8gZmFjZSByYWNpc20gYW5kIHN0aWxsIGRvLgpFZGl0aCByZWFsbHkgZm9jdXNlZCBvbiBsb3ZpbmcgKG9yIGF0IGxlYXN0IGJlaW5nIGhhcHB5IHdpdGgpIG1lbiBpbiBhIHdheSBNYXJ5IGRpZG4gd2hpY2ggSSBsb3ZlZCBhYm91dCBFZGl0aC4gSSBob25lc3RseSBkb24gcmVtZW1iZXIgR3JlZ3NvbiBtdWNoIGFuZCByZWdhcmRsZXNzIG9mIGhpcyB3aWZlIGNvbmRpdGlvbiwgdGhlIGNoZWF0aW5nIGFzcGVjdCByZWFsbHkgYm90aGVyZWQgbWUuIHdoaWNoIHBpY3R1cmVzIHRvIHB1Ymxpc2ggYW5kIG9wZW5pbmcgdGhlIERvd250b24gdG8gdGhlIHB1YmxpYykuIEkgZ2xhZCBzaGUgZW5kZWQgdXAgd2l0aCBCZXJ0aWUgYmVjYXVzZSBJIHRoaW5rIHRoZXkgd2VyZSB0aGUgbW9zdCBlcXVhbGx5IG1hdGNoZWQgb2YgYW55IG9mIGhlciBsb3ZlIGludGVyZXN0cy4gV2hlbiBMRSBvcmdhbml6ZWQgYSBzZWFyY2ggZm9yIEpheW1lIENsb3NzLCB0aGV5IHdlcmUgdmVyeSBjbGVhciB0aGF0IG5vIG9uZSBidXQgTEUgd2FzIGFsbG93ZWQgdG8gdG91Y2ggYW55dGhpbmcuIFBlcnNvbmFsbHksIEkgZG9uIHRoaW5rIEJHIGxlZnQgbXVjaCBpZiBhbnkgRE5BOyBoZSB3YXMgY29tZm9ydGFibGUgd2Fsa2luZyBkb3duIGEgcHVibGljIHBhdGggYWZ0ZXIgdGhlIG11cmRlcnMsIGNsZWFybHkgaGUgd2FzbiBjb3ZlcmVkIGluIGJsb29kIG9yIHNpZ25zIG9mIGZsaWdodGluZy4gVGhlcmVmb3JlLCBJIHRoaW5rIGl0IGVudGlyZWx5IHBvc3NpYmxlIHRoZSBzZWFyY2hlcnMgY291bGQgaGF2ZSBjb250YW1pbmF0ZWQgRE5BIGxlZnQgYnkgQkcuIEkgcmVhbGx5LCByZWFsbHkgaG9wZSB0aGV5IGhhdmUgc29tZXRoaW5nIHVzZWZ1bCBidXQgdGhlIG9kZHMgYXJlIGJhZCByaWdodCBub3cuIEhvcGVmdWxseSBpbXByb3ZlbWVudHMgaW4gRE5BIHRlY2hub2xvZ3kgd2lsbCBzb2x2ZSB0aGlzIHNvb24uClRydW1wIHdpbGwgYmUgcHJlc2lkZW50IG9mIHRoZSBVbml0ZWQgU3RhdGVzCkhlIHB1dCBhIGtleSBsb2dnZXIgb24gbXkgY29tcHV0ZXIgYW5kIHJlYWQgYWxsIG15IHByaXZhdGUgbWVzc2FnZXMgYmV0d2VlbiBteSBsb25nIGRpc3RhbmNlIGZiIGFuZCBJLiAKV2F0ZXJtZWxvbnBpenphZnJpZXMgIDEgcG9pbnQgIHN1Ym1pdHRlZCA5IGRheXMgYWdvCkFuIGFyYml0cmF0b3IgdWx0aW1hdGVseSBydWxlZCBpbiB0aGUgQ29zbW9wb2xpdGFuJ3MgZmF2b3IsIGFjY29yZGluZyB0byB0d28gc291cmNlcy4uIApDYXBXYXNSaWdodCAgMSBwb2ludCAgc3VibWl0dGVkIDEgbW9udGggYWdvCk1hbnkgb2YgdGhlIHdvbWVuIGhlIGhhcmFzc2VkIChhbmQgSSBkb24gbWVhbiBzZXh1YWxseSwgSSBtZWFuIGp1c3QgZ2VuZXJhbCBtaXNvZ3luaXN0IHNoaXR0aW5lc3Mgd2hpY2ggaXMgYW50aXRoZXRpY2FsIHRvIGhpcyBwdWJsaWMgcGVyc29uYSkgZG8gbm90IHBvc3Nlc3MgdGhlIHBvd2VyIERheiBkb2VzLiBNYW55IHdvbWVuIGRpZG4gd2FudCB0byBvciBkb24gd2FudCB0byBzcGVhayBhZ2FpbnN0IHBvd2VyZnVsIG1lbiBvdXQgb2YgZmVhciBmb3IgcmVwZXJjdXNzaW9ucyBvciBsb3Npbmcgd2hhdGV2ZXIgY2FyZWVyIHRoZXkgaGFkLiAKQXMgYWxyZWFkeSBtZW50aW9uZWQsIHlvdXIgZWxib3dzIGFyZSBwcmV0dHkgaGlnaC9mbGFyZWQuIApBZGRpdGlvbmFsbHkgaXQgaXMgY3J1Y2lhbCBmb3IgYXRobGV0ZXMgdG8gbWFpbnRhaW4gdGhlaXIgYm9keSBjbGVhbnNlZCBvZiBpbXB1cml0aWVzLCB0aHVzIFN3ZWRpc2ggYWN0cyBhcyBhIG1lY2hhbmljYWwgY2xlYW5zZXIsIGJ5IHN0aW11bGF0aW5nIGx5bXBoIGNpcmN1bGF0aW9uIGFuZCBxdWlja2VuaW5nIHdhc3RlIGFuZCB0b3hpYyBlbGltaW5hdGlvbi4gCklmIFBsYXllciBBIGJldHMgJDUsIHRvIHJhaXNlIHlvdSB3b3VsZCB0aGVuIHBsYWNlIGEgYmV0IG9mICQ2IG9yIG1vcmUuLiAKUmVnYXJkaW5nIChhKSwgSSB5ZXQgdG8gZmluZCBzb21ldGhpbmcgdGhhdCBzYXlzICJoZXJlIGhvdyB5b3UgY29uc3RydWN0IGEgY29udGludWF0aW9uIHJhbmdlLCB5b3UgdGFrZSB0aGUgdG9wIFggcGVyY2VudCBvZiB0aGVpciBwYWlyZWQgY2FyZHMgaW4gdGhlaXIgcmFuZ2UsIHRoZSB0b3AgWSBwZXJjZW50IG9mIHRoZWlyIHN1aXRlZCBjb25uZWN0b3JzIGV0Yy4sIGFkZCBpbiB0aGVzZSBjYXJkcyBpbiB0aGVzZSBzcG90cywgYW5kIHRoZXJlIHlvdSBnbywgdGhhdCB5b3VyIGNvbnRpbnVhdGlvbiByYW5nZS4gVGhhdCB3aWxsIGdpdmUgeW91ciByYW5nZSBhIHZhbHVlIGVkZ2Ugb3ZlciB0aGVpciByYW5nZS4gQWRqdXN0IGFjY29yZGluZ2x5IGJhc2VkIG9uIHlvdXIgc3BlY2lmaWMgc2l0dWF0aW9uLCBwb3NpdGlvbiwgVmlsbGFpbiBldGMuIiBNYXliZSB0aGF0IGEgYml0IHRvbyBzcGVjaWZpYyBhbmQgSSBob3BpbmcgZm9yIHRvbyBtdWNoLCBidXQgSSBub3Qgc2VlbiBhbnl0aGluZyB0aGF0IGV2ZW4gZ2V0cyBjbG9zZSB0byBiZWluZyBzcGVjaWZpYyBlbm91Z2ggZm9yIGEgYmVnaW5uZXIgbGlrZSBteXNlbGYuIApBbmQgaGUgaXMgYnVzeSBtYWtpbmcgb24gb3RoZXIgcHJvamVjdHMgdW50aWwgYXQgbGVhc3QgMjAyMC4gCkkgb3JkZXJlZCB3YXRlciBhdCA0MCBiYWh0LCB3aGlsZSB0aGUgZ2lybCBvcmRlcmVkIGEgd2F0ZXJtZWxvbiBzbW9vdGhpZSB3aGljaCBjYW1lIHRvIDEyMCBiYWh0ISAoQW5kIHNoZSBiYXJlbHkgdG91Y2hlZCBpdCkuOC8xMC4gCkhlIGlzIHRoZSBvbmx5IHBlcnNvbiBtYWRlIGl0IHRvIHRoZSBmaW5hbCB0YWJsZSBpbiAyMDAzIGFuZCAyMDA0IGNvbnNlcXVlbnRseS4gQWZ0ZXIgaGlzIGdyZWF0IHN1Y2Nlc3MgY29uc2VxdWVudGx5IHdpdGggSG9sZCdlbSBwb2tlciBoZSBkZWNpZGVkIG9mZiB0aGlzIGJvb2sgYW5kIG5vdywgdGhlIG5ld2JpZSBQb2tlciBwbGF5ZXJzIGFyZSBmb2xsb3dpbmcgdGhpcyBoYW5kYm9vayBhcyB0aGVpciBiaWJsZS4gRm9ydHVuYXRlbHksIHRoaXMgYm9vayBpcyBhdmFpbGFibGUgaW4gYWxsIGxvY2FsIHNob3BzIG9yLCBldmVuIGluIHRoZSBwb3B1bGFyIG9ubGluZSBzdG9yZSBub3cuLiAKQXJlIE9ubGluZSBQb2tlciBCb3RzIFByb2ZpdGFibGU/CjE0MDAgVmFuIEJ1cmVuIFN0LiAKQW5kIHRoZSBsYXN0IG9uZSBpbiBWZWdhcyBoYWQgYSBsb3Qgb2YgdW5zb2xkIHRpY2tldHMuIApIeWF0dCBSZWdlbmN5IENob25ncWluZyBmZWF0dXJlcyBhIHZhcmlldHkgb2YgaW5ub3ZhdGl2ZSByZXN0YXVyYW50cyBhbmQgYmFycyBvZmZlcmluZyBhdXRoZW50aWMgY3Vpc2luZSBhbmQgdmlicmFudCBlbnRlcnRhaW5tZW50LiBNYXJrZXQgQ2FmZSBpcyBhbiBhbGwgZGF5IGRpbmluZyBidWZmZXQgcmVzdGF1cmFudCBmZWF0dXJpbmcgZm91ciBpbnRlcmFjdGl2ZSBzaG93IGtpdGNoZW5zIGFuZCBhIGJldmVyYWdlIGJhciwgb2ZmZXJpbmcgdGhlIGZyZXNoZXN0IHByb2R1Y3RzIHdpdGggbGl2ZWx5IHByZXBhcmF0aW9uIGZvciBicmVha2Zhc3QsIGx1bmNoIGFuZCBkaW5uZXIuICJFYXRpbmcgb3V0IG9mIHRoZSBwYW4sIG9mZiB0aGUgZ3JpbGwgYW5kIG91dCBvZiB0aGUgd29rIiBpcyB0aGUgYmVzdCBkZXNjcmlwdGlvbiBvZiB0aGUgcmVzdGF1cmFudCdzIGNvbmNlcHQsIHByb3ZpZGluZyBndWVzdHMgd2l0aCBhIGN1bGluYXJ5IGV4cGVyaWVuY2Ugb2YgYSBidXN5IGZvb2QgbWFya2V0Li4gCkkgY2FuIHF1aXRlIHRlbGwgZnJvbSB5b3VyIGRlc2NyaXB0aW9uIGlmIHRoaXMgd2FzIGF0IGFsbCB0aGVyYXBldXRpYyB0byB5b3Ugb3Igbm90LiBUaGUgdGVldGggZ3JpdHRpbmcgdGhpbmcgbGVuZHMgbWUgdG8gYmVsaWV2ZSBpdCB3YXMgYXQgbGVhc3QgdG9vIG11Y2ggcHJlc3N1cmUuLiAKVGhlcmUgYXJlIHNvbmdzIHRob3VnaCwgdGhhdCBzb3VuZCB0b28gbXVjaCBvdXQgb2YgdGhlIEp1bGlhbiBDYXNhYmxhbmNhcyBoYW5kYm9vayBJIGZpbmQgaXQgcmF0aGVyIGZydXN0cmF0aW5nLiAKQm9kaWVzIGRvIHRoZSBiZXN0IGluIHdhdGVyLiAKRWF0IHdoYXQgc291bmRzIGdvb2QgdG8geW91IG9yIHdvcmtzLiBTb21laG93IGhlciB0ZWxsaW5nIG1lIHRoZXJlIHdlcmUgbm8gZXhwZWN0YXRpb25zIHRvIGVhdCBoZWFsdGh5IG1hZGUgbWUgZmVlbCBhIHdvcmxkIGJldHRlci4gU2hlIGV2ZW4gc2FpZCBzaGUgaGFkIGEgcGF0aWVudCB0aGF0IGxpdmVkIG9mZiBNb2UgZm9yIDkgbW9udGhzLi4gCkFzIGZvciB0aGUgaG9sZG92ZXIgKGFnYWluIGluIG9udGFyaW8gb24gdGhlIGJvaWxlcnBsYXRlIGxpc3RpbmcgYWdyZWVtZW50KSwgaXQgZG9lc24gd29yayBxdWl0ZSB0aGUgd2F5IHlvdSBkZXNjcmliZWQgaXQuIFRoZSBhZ2VudCB3b3VsZCBoYXZlIGEgYnVyZGVuIG9mIHByb29mIHRvIHNob3cgdGhhdCB0aGV5IGludHJvZHVjZWQgdGhlIGJ1eWVyIHRvIHRoZSBwcm9wZXJ0eSBkdXJpbmcgdGhlIGNvbnRyYWN0IGluIG9yZGVyIHRvIGhhdmUgYSBjbGFpbSB0byB0aGUgY29tbWlzc2lvbi4gVGhpcyBpcyB0byBwcmV2ZW50IHBlb3BsZSBmcm9tIGhhdmluZyB0aGUgYWdlbnQgbWFya2V0IHRoZSBwcm9wZXJ0eSBhbmQgd29yayB3aXRoIGJ1eWVycyBvbmx5IHRvIGhhdmUgdGhlIGJ1eWVyIHdhaXQgZm9yIHRoZSBjb250cmFjdCB0byBleHBpcmUgYW5kIGN1dCB0aGUgYWdlbnQgb3V0IG9mIHRoZSBkZWFsLCBzYXZpbmcgdGhlIGNvbW1pc3Npb24gY29zdHMuIApBbmQgV2Fsc2gsIFYuIApDbHViIFNwb3J0cyBleGlzdCB0byBwcm92aWRlIGludGVyZXN0ZWQgaW5kaXZpZHVhbHMgYW4gb3Bwb3J0dW5pdHkgdG8gcGFydGljaXBhdGUgaW4gYSB3aWRlIHJhbmdlIG9mIGFjdGl2aXRpZXMgdGhhdCB3aWxsIGFzc2lzdCB3aXRoIHNraWxsIGRldmVsb3BtZW50IGFuZCBwZXJzb25hbCBncm93dGgsIHdoaWxlIHByb3ZpZGluZyBhIGNoYW5jZSB0byBjb21wZXRlIGF0IGEgaGlnaCBsZXZlbC4gQWxsIGNsdWJzIGFyZSBzdHVkZW50IGluaXRpYXRlZCBwcm9ncmFtcyB0aGF0IGFyZSBhZG1pbmlzdGVyZWQgYnkgVUNMQSBSZWNyZWF0aW9uLiBBbHRob3VnaCBpdCB2YXJpZXMgZnJvbSBjbHViIHRvIGNsdWIsIG1vc3QgY2x1YnMgcHJhY3RpY2UgMiAzIHRpbWVzIHBlciB3ZWVrLCB3aXRoIGNvbXBldGl0aW9uIGFnYWluc3Qgb3RoZXIgY29sbGVnaWF0ZSB0ZWFtcyBvbiB0aGUgd2Vla2VuZHMuCkkgd2FudGVkIHRoYXQgd2l0aCBPbWFyb3NhIGJ1dCBzaGUgd2VudCBiZWhpbmQgbXkgYmFjay4gClNpbmNlIHRoZW4sIHllYWgsIGhpcyAiY2lyY2xlIiBoYXMgcGxheWVkIHVwIGhpcyBzaHkgcGVyc29uYSBiZWNhdXNlIGhlIG5vdCBhIGdvb2Qgc3BlYWtlciBhbmQganVzdCBzdXBwb3NlZGx5IG5vdCBicmlnaHQuCjMxIGFmdGVyIGEgc3R1ZGVudCBhdCBTb3V0aCBCcm93YXJkIEhpZ2ggU2Nob29sIGluIEhvbGx5d29vZCBzcG9rZSB3aXRoIHBvbGljZSBpbnZlc3RpZ2F0b3JzLiAKIldlIHN1cHBvcnQgYmV0d2VlbiA0MCBhbmQgNTAgb3JnYW5pc2F0aW9ucyBhbmQgc2FkbHkgYSBtYWpvcml0eSBvZiB0aGVtIGFyZSBnb2luZyB0byBoYXZlIHRvIGxvb2sgZWxzZXdoZXJlIGZvciBmdW5kaW5nIHRoaXMgeWVhci4iCkVpdGhlciB3YXksIHRoZSBib251cyBpcyBkZXRlcm1pbmVkIGJ5IHlvdXIgY29udHJpYnV0aW9ucywgd2hpY2ggYnJpbmdzIG9uZSB0byB0aGUgbmV4dCBwb2ludC4gQWRkaXRpb24gb2YgaW5jZW50aXZlcyBkb2VzIG5vdCBtZWFuIHRoZSBlbGltaW5hdGlvbiBvZiByaXNrLiAKVGhlcmUgd2FzIG9uZSBzdXNwZWN0IFVrcmFuaWFuIGFjY291bnQgSSBwbGF5ZWQgYWdhaW5zdCB3aXRoIGEgYyBiZXQgcGVyY2VudGFnZSBvZiA4MCBwZXJjZW50LCBhbmQgYSBmb2xkIHRvIGNiZXQgcmFpc2Ugb2YgYWJvdXQgOTAgcGVyY2VudC4gU28gaWYgdGhlIGFjY291bnQgcmFpc2VkIElQLCBpIGp1c3QgcmVyYWlzZSB3aXRoIGFueSB0d28gY2FyZHMuIEkgd29uIGFib3V0IDUwIGJiIG9mIHRoYXQgYWNjb3VudCBvdmVyIDRrIGhhbmRzLCBhbmQgdGhlbiBpdCBhZGp1c3RlZC4KSGlzIG5hbWUgaXMgc2VsZG9tIG1lbnRpb25lZCwgaXQgc2VlbXMsIGluIGFueSBvZiB0aGUgcG9wdWxhciB0aW1lbGluZXMvY2hyb25vbG9naWVzL2hpc3RvcmllcyB0aGF0IEkgcGVja2VkIGFyb3VuZCB3aXRoIG9ubGluZS4gQnV0IGhlIHdhcyBjZXJ0YWlubHkgdGhlcmUgYW5kIG1hZGUgdmFsdWFibGUgY29udHJpYnV0aW9ucyB0byB0aGF0IHRlY2hub2xvZ3ksIHRob3VnaCB0aGUgZWZmb3J0IHdvdWxkIHNvb24gc3dpdGNoIGluIHRoZSAxODcwIHRvIHRoZSBpbmNhbmRlc2NlbnQgYnVsYiwgYW5kIGJ5IDE4ODAgRWRpc29uIHdvdWxkIGludHJvZHVjZSBhIHN1Y2Nlc3NmdWwgbGl0dGxlIG51bWJlciB3aG8gZmlsYW1lbnQgd291bGQgYnVybiBmb3IgMTUwMCBob3VycywgYW5kIHRoZW4gdGhlIHJhY2Ugd2FzIG9uLjEuIChXaWxsaWFtIEUuIApJbiBlaW5lbSBmZmVudGxpY2hlbiBDYXNpbm8gYmVzdGVodCBhdWNoIG5pY2h0IGRlciBEcnVjaywgaW0gU3BpZWwgenUgYmxlaWJlbiwgZGVuIG1hbiBldmVudHVlbGwgYmVpIGRlbiBIZWltc3BpZWxlbiBoYXQuCkRhcyB3cmRlIGljaCBhbHMgQmV0cm9mZmVuZXIgZWluZmFjaCBudXIgYWxzIEhvaG4gZW1wZmluZGVuLCB3ZW5uIG1pciBNZW5zY2hlbiwgZGllIGVpbmRldXRpZyBwcml2aWxlZ2llcnRlciBzaW5kIGFscyBpY2gsIHNpY2ggZnIgbWljaCBkYW5uIEJlZ3JpZmZlIGF1c2RlbmtlbiwgZGllIG1pY2ggbmljaHQgYWxzIG1pbmRlcnByaXZpbGVnaWVydCwgc29uZGVybiBhbHMgYW5kZXJzcHJpdmlsZWdpZXJ0IGRhcnN0ZWxsZW4uIkR1IGthbm5zdCBkZWluZSBCZWluZXIgbmljaHQgYmVudXR6ZW4gdW5kIGJpc3QgYW4gZWluZW4gUm9sbHN0dWhsIGdlZmVzc2VsdCwgYWJlciBpbW1lcmhpbiBrcmllZ2VuIGRlaW5lIEFybWUgZWluIG9yZGVudGxpY2hlcyBXb3Jrb3V0ISIiRHUgYmlzdCBuaWNodCBhcm0sIGR1IGJpc3QgYW5kZXJzdmVybWdlbmQsIGRlbm4gd2FzIGRpciBhdWYgZGVtIEJhbmtrb250byBmZWhsdCwgZ2xlaWNoc3QgZHUgbWl0IGRlaW5lbSBIZXJ6ZW4gYXVzLiIgR2VpbCwgZGEgZmhsdCBtYW4gc2ljaCBnbGVpY2ggdmllbCBiZXNzZXIuVW5kIHdlbm4gZGVyIEdlZGFua2UgaXN0LCBNZW5zY2hlbiBuaWNodCBnYW56IGJlaWx1ZmlnIG1pdCBuZWdhdGl2ZW4gV3J0ZXJuIHp1IGJlc2NocmVpYmVuLCBkYW5uIG1hY2h0IGVzIGFic29sdXQga2VpbmVuIFNpbm4sIHNpY2ggaGllciBhbiBkZW0gV29ydCBiZWhpbmRlcnQgYXVmenVobmdlbiwgd2FzIHdvaGwgenUgZGVuIGJlbGllYnRlc3RlbiBBdWZobmdlcm4gZ2VocnQuTWFuIG1zc3RlIHNpY2ggYW4gc28gemllbWxpY2ggamVkZXIgQmVsZWlkaWd1bmcgdW5kIGFiZmxsaWdlbiBCZW1lcmt1bmcgYXVmaG5nZW4gdW5kIG5pZW1hbmQgZHJmdGUgbWVociBpcmdlbmRldHdhcyBOZWdhdGl2ZXMgYmVyIGlyZ2VuZHdlbiBzYWdlbiwgd2VubiBlcyBuaWNodCBhdWYgZWluZSBodW5kZXJ0cHJvemVudGlnIGtvbnN0cnVrdGl2ZSBBcnQgdW5kIFdlaXNlIGdlc2NoaWVodC5LZXN0cmVscXVlZW4gIDAgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvSWNoIGhhYiB2ZXJzdWNodCBkZW4gR2VkYW5rZW5nYW5nIHp1IGVya2xyZW4gdW5kIGRhY2h0ZSBlaWdlbnRsaWNoLCBkYXNzIGVzIHJlY2h0IGtsYXIgaXN0LCBkYXNzIGVzIGdlcmFkZSBuaWNodCBkYXJ1bSBnZWh0IExldXRlbiBkYW5uIGFsdGVybmF0aXZlIEZoaWdrZWl0ZW4genV6dXNwcmVjaGVuLiAKWW91IG11c3QgYmUgYW4gYWN0aXZlIGFuZCBwYXJ0aWNpcGF0aW5nIG1lbWJlciBvZiBvdXIgY29tbXVuaXR5IGJlZm9yZSB5b3UgYWxsb3dlZCB0byBsaW5rLiBMaW5rIG9ubHkgcG9zdHMgYXJlIG5vdCBhbGxvd2VkIGV2ZW4gZnJvbSBhY3RpdmUgbWVtYmVycyBvZiB0aGUgY29tbXVuaXR5OiBsaW5rcyBtYXkgYmUgdXNlZCBhcyBhbiBpbGx1c3RyYXRpb24gb2YgYSBicm9hZGVyIHBvaW50LCBub3QgYXMgdGhlIGNlbnRlcnBpZWNlIG9mIHRoZSBwb3N0LiAKQSBzZXJpZXMgb2Ygd2VsbCBvcmNoZXN0cmF0ZWQsIHJlbGVudGxlc3MsIHdlbGwgZnVuZGVkLCByaWdodCB3aW5nIGF0dGFja3MgdGhhdCBhcmUgdW5wcmVjZWRlbnRlZCBzaW5jZSB0aGUgTWNDYXJ0aHkgZXJhLiBPdXIgZWZmZWN0aXZlIHdvcmsgZW1wb3dlcmluZyBBZnJpY2FuIEFtZXJpY2FuIGFuZCBsb3cgaW5jb21lIHZvdGVycyBtYWRlIHVzIGEgdGFyZ2V0LiBUaGUgdmlkZW9zIHdlcmUgYSBtYW51ZmFjdHVyZWQsIHNlbnNhdGlvbmFsIHN0b3J5IHRoYXQgbGVkIHRvIHJ1c2ggdG8ganVkZ21lbnQgYW5kIGFuIHVuY29uc3RpdHV0aW9uYWwgYWN0IGJ5IENvbmdyZXNzLgpZb3UgYnJvdWdodCBhIHNtaWxlIHRvIG15IGZhY2UgZm9yIHN1cmUhIFRoaXMgaXMgZXhhY3RseSB0aGUga2luZCBvZiBpbXBhY3Qgb3VyIGVudGlyZSB0ZWFtIHRyaWVzIHRvIG1ha2UgZm9yIGFsbCBvZiBvdXIgZ3Vlc3RzIGFuZCBpdCBpcyB0aGUgZXhhY3QgdHlwZSBvZiBleHBlcmllbmNlIHdlIGhvcGUgZXZlcnkgZ3Vlc3QgaGFzISBJIHNvIGdsYWQgdGhhdCB3ZSB3ZXJlIGFibGUgdG8gcHJvdmlkZSB5b3Ugc3VjaCBhIHdvbmRlcmZ1bCBleHBlcmllbmNlLCBhbmQgdGhhdCB5b3UgYW5kIHlvdXIgZnJpZW5kcyBoYWQgc3VjaCBhbiBhbWF6aW5nIHN0YXkgd2l0aCB1cyBvbiBTaWVzdGEgS2V5ISBXZSBjYW5ub3Qgd2FpdCB0byBob3N0IHlvdSBhZ2FpbiwgYW5kIHdlIGFyZSBzbyBnbGFkIHRoYXQgeW91IGFyZSBhIHdlbGNvbWVkIG5ldyBtZW1iZXIgb2YgdGhlIFRyb3BpY2FsIEJyZWV6ZSBSZXNvcnQgZmFtaWx5ISBTaW5jZXJlbHksIEFkYW0gTS4uIApUcnkgc3RyYWlnaHQgZG93biBoYWlyIHJhdGhlciB0aGFuIHBpZ3RhaWxzIGFuZCBtYWtlIHN1cmUgdGhhdCB5b3VyIGhhaXIgZG9lcyBub3QgY292ZXIgZWl0aGVyIGV5ZXMuIApBYnNvbHV0ZWx5IG5vIHByb3NlbHl0aW5nIHBlcmlvZCEgQW5kIHRoZXkgZG9uIElmIHNvbWVvbmUgd29uZGVycyBpbiB0aGUgY2hhcGVsIGFuZCBzdGFydHMgYXNraW5nIHF1ZXN0aW9ucywgdGhlbiB0aGUgbWlzc2lvbmFyaWVzIGhhdmUgZnVsbCByaWdodHMgdG8gamFiYmVyIGF3YXkuIElmIGFub3RoZXIgbWVtYmVyIGludml0ZXMgYSBmcmllbmQgdG8gY2h1cmNoLCBubyBwcm9ibGVtLiAKRE9OVCBIQVJNIFRIRSBBTFVNSU5VTSBGQUNFIE9GIFRIRSBUUkFOTlkgV0lUSCBUSEUgU0NSRVdEUklWRVIuIFRoZSBzY3Jld2RyaXZlciB3b250IHNjcmF0Y2ggdGhlIHBhbiBzaWRlLCBzbyBwcnkgYWdhaW5zdCB0aGF0LiBJZiBpdCB0YWtlcyBtdWNoIGVmZm9ydCB5b3UgbmVlZCB0byBjaGVjayB0aGF0IHRoZXJlIGFyZSBubyBvdGhlciBib2x0cyBob2xkaW5nIGl0IG9uLiBZb3Ugd2lsbCBkZWZpbml0ZWx5IGtub3cgd2hlbiB0aGUgcGFuIHNlcGFyYXRlcyBmcm9tIHRoZSB0cmFucy4gCkZpZ2h0IExpa2UgQSBHaXJsIHdpbGwgZG8gd2hhdGV2ZXIgaXQgY2FuIHRvIHByb21vdGUgYSBwb3NpdGl2ZSBvdXRsb29rLi4gClN0cnVtaW5nZXIgd2lsbCB0dXJuIDc4IGluIE1heS4gSGUgZW1wbG95cyBhYm91dCAxMCBwZW9wbGUgYW5kIGVuam95cyB0ZWxsaW5nIGN1c3RvbWVycyBsYW1wcyBhcmUgaW1wb3J0YW50IGJlY2F1c2UgImVhY2ggcm9vbSBpbiBhIGhvbWUgaXMgaW1wb3J0YW50IGJlY2F1c2UgeW91IHNwZW5kIHRpbWUgaW4gaXQuIgpJbiAxOTk3LCBlbWFjaWF0ZWQgYW5kIGdhdW50LCBoaXMgbm9zZSBzZXB0dW0gY29tcGxldGVseSBkZXZvdXJlZCBieSBjb2NhaW5lLCBVbmdhciBiZWdnZWQgYSBmZWxsb3cgcGxheWVyIHRvIGxlbmQgaGltIHRoZSAxMGsgbmVlZGVkIHRvIHNpdCBpbiB0aGUgV1NPUCBNYWluIEV2ZW50LiBIZSBjYW1lIGZpcnN0LCBjcnVzaGluZyBhIGZpZWxkIG9mIDMxMiBwbGF5ZXJzIGFuZCBhbm5vdW5jaW5nIGhpcyByZXR1cm4gYXMgdGhlIGtpbmcgb2YgdGhlIGNhcmQgcm9vbS4gRWlnaHRlZW4gbW9udGhzIGxhdGVyLCBoYXZpbmcgZGVjbGluZWQgdG8gZGVmZW5kIGhpcyB0aXRsZSwgVW5nYXIgd2FzIGZvdW5kIGRlYWQgaW4gYSBsb3cgcmVudCBWZWdhcyBtb3RlbCByb29tLgpJbiBvbmUgY2FzZSwgdGhlIHdvbWFuIGRpZG4ndCBzYXkgYSB3b3JkIGJ1dCBtZXJlbHkgbm9kZGVkIGluIHRoZSBkaXJlY3Rpb24gb2YgYSBkb29yIGF0IDEzNSAyNSA0MHRoIFJvYWQsIHdoZXJlIHRoZXJlIGlzIG5vIHNpZ24gaW4gRW5nbGlzaCBhbmQgbm90aGluZyB0byBpZGVudGlmeSB0aGUgYnVzaW5lc3MuIEEgc2lnbiBzYXlzICJXZWxjb21lIiBpbiBNYW5kYXJpbi4KQW55b25lIG9mIHVzIHdobyB3b3JrZWQgdGhlcmUgd291bGQgZ2xhZGx5IGJlYXQgdGhlIHNoaXQgb3V0IG9mIHdob2V2ZXIgZGlkIHRoYXQuIEluIHRoaXMgY2FzZSBJIHdvdWxkIGxvdmUgdG8gc2VlIHRob3NlIGJhc3RhcmRzIGluIGphaWwuLiAKSWYgeW91IHdhbnQgdG8gdmVudHVyZSBpbnRvIGRheSB0cmFkaW5nLCBkb24gZ2FtYmxlIHlvdXIgcmV0aXJlbWVudCBvciB0aGUga2lkcyBjb2xsZWdlIGZ1bmRzLiBUaGF0IHdvdWxkIGV4cG9zZSB5b3VyIGZhbWlseSB0byB0b28gbXVjaCByaXNrLgpOaWcgQmh1bWlwb2wgQWR1bHlhZGVqIGlzdCBnZXN0b3JiZW4KQm95Q0RldmVsb3BlciBvZiBHVzIgVGFjTwpUaGVuIHRoZSBmbG9wIGlzIGJlaW5nIGRlYWx0LiAKVGhlIFdTT1AgZ29lcyBhYm91dCAxLjUgbW9udGhzIChlbmQgb2YgTWF5IHRvIG1pZCBKdWx5KSBhbmQgaGFzIG92ZXIgNTUgdG91cm5hbWVudHMgb2YgdmFyaW91cyB0eXBlcyBhcyBwYXJ0IG9mIHRoZSBzZXJpZXMgY3VsbWluYXRpbmcgaW4gdGhlICQxMGsgIk1haW4gRXZlbnQiIHRoYXQgeW91IG1heSBoYXZlIHNlZW4gb24gRVNQTiBzb21ldGltZS4gClRyYWluaW5nSW4gbWFueSBzdGF0ZXMsIGluY2x1ZGluZyBUZXhhcywgbWFzc2FnZSB0aGVyYXBpc3RzIGFyZSByZXF1aXJlZCB0byBiZSB0cmFpbmVkIGFuZCBsaWNlbnNlZC4gVHVpdGlvbiBmb3IgbWFzc2FnZSBzY2hvb2wgcmFuZ2VzIGZyb20gJDYgdG8gJDE3IHBlciBob3VyIG9mIHNjaG9vbGluZywgd2l0aCB0aGUgYXZlcmFnZSBiZWluZyBhYm91dCAkMTAgcGVyIGhvdXIuIFRleGFzIHJlcXVpcmVzIGFwcGxpY2FudHMgdG8gb2J0YWluIDUwMCBob3VycyBvZiB0cmFpbmluZy4gCkFzIGEgY291bnRlcnBvaW50IHRob3VnaCBkbyB0cnkgdG8gbGl2ZSBzb21ld2hlcmUgdGhhdCBmaXZlIG1pbnV0ZSB3YWxrIHRvIHdvcmsgYW5kIHlvdXIgbGlmZSB3aWxsIGJlIHdheSBiZXR0ZXIgdGhhbiB5b3UgdGhvdWdodCBwb3NzaWJsZSBvbiBhIGNvbW11dGluZyBwbGFuZXQhLiAKSSBoYXZlIGhlYXJkIGFuZCBzZWVuIGEgbG90IG9mIGdyZWF0IHRoaW5ncyBidXQgc2VlaW5nIGhlciBhY3R1YWxseSBwb3N0IHBpY3R1cmVzIGZyb20gdGhlIHNpdGUgaW4gQ2FsaWZvcm5pYSwgdGhpcyBpcyBubyBkb3VidCB0aGUgbmV4dCBob2xpZGF5IGRlc3RpbmF0aW9uIGZvciBtZS4gCkonYWltZSBiZWF1Y291cCBsJ21pc3Npb24gZG9taW5pY2FsZSBSZW1kZSAgbGEgTWxhbmNvbGllIHN1ciBGcmFuY2UgSW50ZXIgZXQgaidhaSBwYXJ0aWN1bGlyZW1lbnQgYXBwcmNpIHBhciBleGVtcGxlIGxhIGRlcm5pcmUsIGF2ZWMgU2FuZHJpbmUgQm9ubmFpcmUsIG8gZWxsZSBwYXJsZSBjb3JwcywgdmVudHJlLCBhdHRlbnRpb24gIHNvaSwgY2hhbmdlbWVudC4gCkluIGFkZGl0aW9uIHRvIHRoYXQsIHdvcmsgb24geW91ciB0cmlwb2QgICB3aGVyZSB5b3VyIGhlZWwsIHlvdXIgcGlua3kgdG9lL2tudWNrbGUsIGFuZCB5b3VyIGJpZyB0b2Uva251Y2tsZSBhcmUgUFJFU1NFRCBpbnRvIHRoZSBncm91bmQgYW5kIHlvdXIgZm9vdCBpcyBlbmdhZ2VkIGFuZCBjcmVhdGVzIGEgc3Ryb25nIHN0YWJsZSB0cmlwb2QgZm9yIHRoZSByZXN0IG9mIHlvdXIgYm9keSB0byByZXN0IG9uLiAKVGhlIHRoaW5nIHRoYXQgYmxldyBtZSBhd2F5IHdhcyBob3cgZ29vZCBhIHBob25lIGl0IHdhcy4gVGhlIGVhc2Ugb2YgcHV0dGluZyBzb21lb25lIG9uIGhvbGQsIGNhbGxpbmcgc29tZW9uZSBlbHNlLCBtZXJnaW5nIHRoZSB0d28gY2FsbHMsIHRoZW4gc2VwYXJhdGluZyB0aGVtIGFnYWluLCBhbGwgb2YgdGhhdCB3YXMgYW1hemluZy4gRXZlbiBiYXNpYyBmdW5jdGlvbnMgbGlrZSBtdXRpbmcgdGhlIHBob25lIG9yIHN3aXRjaGluZyB0byBzcGVha2VyIHdlcmUgc28gZnJlYWtpbmcgZWFzeSBiZWNhdXNlIG9mIGhvdyB0aGUgcGhvbmUgY2FsbCBzY3JlZW4gd2FzIHNvIGxhcmdlLCBjbGVhbiwgc2ltcGxlLCBhbmQgYWRhcHRpdmUsIGNoYW5naW5nIHRvIHNob3cgdGhvc2UgZnVuY3Rpb25zIHJlbGF0aXZlIHRvIHdoYXQgeW91ciB3ZXJlIGRvaW5nLiBXZW50IGJhY2sgdGhlIG5leHQgZGF5IGFuZCBib3VnaHQgb25lClRoaXMgbWlnaHQgYWxtb3N0IG1ha2Ugd2ludGVyIGluIE1pbm5lc290YSB0b2xlcmFibGUuIApIb2Nram9jazE3MCAgMSBwb2ludCAgc3VibWl0dGVkIDMgbW9udGhzIGFnbwpZb3UgbG92ZSBtYXRoLiAKV2hhdCB3ZSBnZXQgaXMgYSBjb252ZXJzYXRpb24gYm9yZGVyaW5nIHRoZSB1bmNhbm55IHZhbGxleSB0ZXJyaXRvcnkuIApPZmZpY2lhbHMgcmVjb3ZlcmVkIDQxIGNhcnMgZnJvbSBTdWRhbWEgcmVzb3J0IGFuZCA0IGZyb20gS2FsZ2kgaG91c2UgbmVhciBHdWphcmF0IGNvbGxlZ2UuIApXaGF0ZXZlciBjb3JydXB0aW9uIGV4aXN0ZWQgaW4gdGhlIG9yZ2FuaXphdGlvbiBpdCB3YXMgbm90aGluZyBjb21wYXJlZCB0byBtaWxpdGFyeSBjb250cmFjdG9ycyBhbmQgdGhlIGJhbmtzLiAKSWYgYW5vdGhlciByb3VuZCBvZiBzb2xpY2l0YXRpb25zIGlzIHVuc3VjY2Vzc2Z1bCwgdGhlIHJlc29ydCB3aWxsIG5lZWQgYWRkaXRpb25hbCBzdGF0ZSBhaWQgdG8gc3RheSBvcGVuLCBCcmVubmFuIHNhaWQuIEhlIHByb2plY3RlZCB0aGF0IHJlbm92YXRpb25zIHRvIHRoZSAxMiB5ZWFyIG9sZCBmYWNpbGl0eSwgd2hpY2ggaGFzIHJ1biBtaWxsaW9ucyBvZiBkb2xsYXJzIGluIHRoZSByZWQgc2luY2UgaXQgb3BlbmVkLCB3b3VsZCBjb3N0IGEgbWluaW11bSBvZiAkMyBtaWxsaW9uIGFuZCBlYXNpbHkgYmUgbW9yZS4gCkkgbGlrZWQgbXkgY293b3JrZXJzIGp1c3QgZmluZSwgYnV0IEkgZG9uIHdhbnQgdG8gaGFuZyBvdXQgd2l0aCBhbGwgb2YgdGhlbSBhZnRlciB3b3JrLCBhbmQgSSBub3QgZ29pbmcgdG8gYmUgZm9yY2VkIHRvIGRvIHNvLi4gCkl0IGRvZXMgbm90IG1ha2Ugc2Vuc2UsIGxpZmUgZG9lc24gbWFrZSBzZW5zZS4gCiJUaGUgInNvbGUgZXNzZW5jZSBvZiBidWxseWluZyIgaXMgYWJ1c2luZyBvbmUgcG93ZXIgb3ZlciBvdGhlcnMuIFRoZSBjb21wYW55IGlzIG5vdCBhYnVzaW5nIHRoZWlyIHBvd2VyIGJ5IGhhdmluZyBhbiBlbXBsb3llZSB0YWtlIGFkZGl0aW9uYWwgdHJhaW5pbmcuIFRoZXkgd291bGQgYWJ1c2UgdGhlaXIgcG93ZXIgaWYsIGFzIG90aGVycyBoYXZlIG1lbnRpb25lZCBoZXJlLCB0aGV5IGRvY2tlZCBoZXIgcGF5LCBjdXQgaGVyIGhvdXJzLCBkZW1vdGVkIGhlciB0byBjbGVhbmluZyB0b2lsZXRzIGF0IDRhbSwgZXRjLiAKVHJpYnVuYWwuIEZvciBpbnN0YW5jZSwgSUNJIGZ1bmN0aW9ucyBvdXQgb2YgVHVya3MgYW5kIENhaWNvcyBJc2xhbmRzLgpJIGhvbGUgaGFyZGVkbHkgYWdyZWUsIGJ1dCBhbGxvdyBtZSB0byBwbGF5IGRvdWJsZXMgYWR2b2NhdGUgaGVyZSBmb3IgYSBtb21lbnQuIApJIGFsc28gYW0gaW4gbG92ZSB3aXRoIHRoZSBsaXZlcnkgb2YgQWVyb21leGljby4gClNwcmVhZCB0aGUgcGFzdGUgb24gdGhlIHNjcmF0Y2hlZCBhcmVhIG9uIHlvdXIgbWlycm9yIGFuZCB1c2UgdGhlIGJ1ZmZlciBpbiB0aGUga2l0IHRvIHdvcmsgaXQgb24gdGhlIHNjcmF0Y2guIApJIGNhbiBldmVuIHRha2UgYSB2YWx1YWJsZSBzaW5nbGUgSSBkb24gbmVlZCB0aGF0IHRoZXkgZ290IGFuZCB3YWxrIG92ZXIgdG8gYSB2ZW5kb3IgdG8gZ2V0IHRoZSBjYXJkIEkgd2FudC4uIApTd2l0Y2ggYnJhbmRzISBBYm91dCBhYm91dCB0aHJlZS9mb3VyIG1vbnRocywgc3dpdGNoIHdoYXQgYnJhbmQgeW91IHVzaW5nLiBZb3VyIHN0b21hY2ggYWRqdXN0cyB0byB0aGUgbWljcm9vcmdhbmlzbXMgYW5kIHRoZWlyIGVmZmVjdGl2ZW5lc3MgZGltaW5pc2hlcyBvdmVyIHRpbWUuIEFsc28sIG1peCBpdCB1cCB3aXRoIG9jY2FzaW9uYWwgb3RoZXIgc3VwcGxlbWVudHMuIApJbiBmYWN0LCB0aGUgcGFwZXIgZmluZHMsICJ0aGUgaGlnaCBza2lsbGVkIHBsYXllciB3aW5zIDU0LjkgcGVyY2VudCBvZiB0aGUgbWF0Y2ggdXBzLiIgVGhhdCBjb21wYXJlcyBtb3JlIGNsb3NlbHkgdG8gd2hhdCBpcyB3aXRuZXNzZWQgaW4gTWFqb3IgTGVhZ3VlIEJhc2ViYWxsIHRoYW4gYW55dGhpbmcgb24gV2FsbCBTdHJlZXQ6LiAKIlNoZSB0aGlua3MgdXMgd2VhaywgYnV0IEkgYW0gbm90IGhlcmUgdG8gY2hhbGxlbmdlIHRoYXQuIgpVc2luZyB0aGUgd2FybXRoIG9mIHdhbG51dCwgYSB0aGlja2x5IHRleHR1cmVkIHJ1ZyBhbmQgYSBwdW5jaCBvZiBjb29sIGJsdWUgZnJvbSB0aGUgbWlkIGNlbnR1cnkgc29mYSBzZXQgdGhleSBmb3VuZCBvbiBDcmFpZ3NsaXN0LCBOZ3V5ZW4gYW5kIEhvbiBoYXZlIGNyZWF0ZWQgYSByZWZyZXNoaW5nIGNvbnRlbXBvcmFyeSBlc3RoZXRpYy4gSGVyZSBhbmQgdGhlcmUsIHBsYXlmdWwgdG91Y2hlcyBlbmxpdmVuIHRoZSBwdXJlIHdoaXRlIHBhbGV0dGUuIFdpdGggdGhlaXIgdGhvdWdodGZ1bGx5IGN1cmF0ZWQgY29sbGVjdGlvbiBvZiBmdXJuaXR1cmUgYW5kIHBlcnNvbmFsIGFjY2VudHMsIHRoZXkgdHJhbnNmb3JtZWQgdGhpcyBxdWFzaSBpbmR1c3RyaWFsIHNwYWNlIGludG8gYSBjb21mb3J0YWJsZSwgdW5wcmV0ZW50aW91cyBob21lIHRoYXQgZmVlbHMgc2VyZW5lIGFuZCBpbnZpdGluZy4uIApSZXNlYXJjaCBzaG93cywgZm9yIGluc3RhbmNlLCB0aGF0IHRlZW5zIHRlbmQgdG8gd2lsZGx5IG92ZXJlc3RpbWF0ZSBjZXJ0YWluIHJpc2tzICAgb2YgdGhpbmdzIGxpa2UgdW5wcm90ZWN0ZWQgc2V4IGFuZCBkcnVnIHVzZSAgIG5vdCB0byBsb3diYWxsIHRoZW0gYXMgb25lIHdvdWxkIHByZWRpY3QuIApUcmFkaW5nIGlzIGEgc3RyZXNzZnVsIGJ1c2luZXNzLiAKU2kgbm91cyB0aW9ucyBzdXNwaWNpZXV4IGQnYXV0cnVpICBjaGFxdWUgc2Vjb25kZSwgbm91cyBuZSBzZXJpb25zIHBhcyBodW1haW5zLiAKSSdkIGxpa2UgdG8gdGFsayBhYm91dCB0aGUgZGVlcCBmZWVsaW5ncyBhbmQgaW5ub3ZhdGl2ZSBpZGVhcyBvZiBMeWFyaSdzIHJlc2lkZW50cy4gSSB3b3VsZCB0YWtlIGdyZWF0IHBsZWFzdXJlIGluIGRlc2NyaWJpbmcgdGhlIGxpZ2h0IGluIHRoZSBleWVzIG9mIGxpdHRsZSBjaGlsZHJlbiBpbiBMeWFyaSBhcyB0aGV5IHRvbGQgbWUgYWJvdXQgdGhlIE5HTyBzY2hvb2xzIHRoYXQgdGhleSBhdHRlbmQuIApNeSBkYWQgZ3JldyB1cCB0ZWxsaW5nIHVzIGhlIHdvdWxkIG5ldmVyIHBheSBmb3Igb3VyIHdlZGRpbmdzIGJ1dCB0aGVuIHRoZXkgc2F0IHVzIGRvd24gYW5kIHNhaWQgd2UnZCBsaWtlIHlvdSB0byBoYXZlIGEgbmljZSBwYXJ0eSBhbmQgd2VyZSBvZmZlcmluZyB5b3UgeCBhbW91bnQuIE1heWJlIGNhdXNlIEkgcGFpZCBmb3IgY29sbGVnZSBhbmQgbXkgc2lzdGVyIGRpZG4ndD8gTWF5YmUgY2F1c2UgbXkgbW9tIHRoaW5rcyBteSBzaXN0ZXIgd2lsbCBuZXZlciBnZXQgbWFycmllZCBhbmQgdGhpcyB3YXMgdGhlaXIgb25seSBjaGFuY2UgdG8gaGF2ZSBhIGNlbGVicmF0aW9uPy4gCldoYXQgSSBzdGFydGVkIHdpdGggd2FzIHN0cmFpZ2h0LCBzaG91bGRlcnMgZG93biBhbmQgYmFjaywgYm9keSByZWxheGVkIGFueSB0aW1lIHRoYXQgd2FzbiBoYXBwZW5pbmcgdGhyb3VnaG91dCB0aGUgZGF5IEkgd291bGQgcmVhZGp1c3QgcG9zdHVyZS4gSWYgeW91ciBtaW5kIGNoZWNrcyBwb3N0dXJlIGFuZCBpdCBnb29kLCB0aGVuIHlvdSBzYXkgam9iIG1pbmQgYW5kIGtlZXAgb24gd2l0aCB5b3VyIGRheS4gCkZyb20gY29tcGFueSB0byBjb21wYW55LCBJIHJlYWxpemVkIEkgd2FzIG5ldmVyIGdvaW5nIHRvIGJlIGEgZ3JlYXQgZml0IGZvciBjb3Jwb3JhdGUgcG9zaXRpb25zIGJlY2F1c2UgSSBvdXRzcG9rZW4gYW5kIEkgaGF2ZSBteSBvd24gaWRlYXMuIEluIDIwMTIsIGhlIGNoYW5nZWQgaGlzIGZvY3VzLiByZWFsaXplZCBJIHdhcyBzdGlsbCBiYXNpY2FsbHkgYW4gZW1wbG95ZWUgYW5kIHdoYXQgSSByZWFsbHkgd2FudGVkIHdhcyB0byBidWlsZCBsb25nIHRlcm0gZXF1aXR5IGJ5IGxhdW5jaGluZyBteSBvd24gYnJhbmQgYW5kIGFsc28gcGFydG5lcmluZyB3aXRoIGtleSBicmFuZHMgdG8gYnVpbGQgYSBzbmFjayBmb29kIGNvbXBhbnksIE1yLiBQZXRjaGVyc2tpIHNheXMuCkkgaG9wZSBQYXJ0eXBva2VyKG9yIGFub3RoZXIgc2l0ZSwgSSBoYXZlIG5vIGFmZmlsaWF0aW9uIHRvIHRoZW0ganVzdCB1c2luZyB0aGVtIGFzIGFuIGV4YW1wbGUpIHN0ZXAgdXAgdGhlaXIgZ2FtZS4gCkV4Y2VwdCBoZSBjb3VsZG4gYmVhdCBoaW0uIEhlIHRocmV3IGV2ZXJ5dGhpbmcgaGUgaGFkIGF0IGhpbSBhbmQgTHVmZnkga2VwdCBnZXR0aW5nIGJhY2sgdXAuIEhlIGdhaW5lZCBhIHJlc3BlY3QgZm9yIEx1ZmZ5IHdoZW4gaGUgbm90aWNlZCBob3cgZmFyIEx1ZmZ5IHdhcyBhYmxlIHRvIGdyb3cgZHVyaW5nIHRoZSBmaWdodCBidXQgaGUgY2VydGFpbmx5IGRpZG4gdGhyb3cgaGlzIHByaWRlIGF3YXkganVzdCBzbyBMdWZmeSBjb3VsZCBlc2NhcGUuIApJIGRvbiBoYXZlIG11Y2ggZXhwZXJpZW5jZSBhdCB0aGUgMS8yIGdhbWVzLCBidXQgSSB3b3VsZCBndWVzcyB0aGF0IHRoZWlyIHByZWZsb3AgZ2FtZSBpcyB3b3JzZSB0aGFuIGFueXRoaW5nIHlvdSBzZWVuIG9ubGluZSBmb3IgdGhlIG1vc3QgcGFydC4gWW91IHdpbGwgbm90IHNlZSBtYW55IHJlZ3Mgd2l0aCBhIHJlYXNvbmFibGUgM2JldHRpbmcgcmFuZ2UsIHRoZXkgZmxhdCBmYXIgdG9vIG9mdGVuIHByZSwgYW5kIHRoZXkgcGxheSB0b28gbXVjaCBvdXQgb2YgZXZlcnkgcG9zaXRpb24uIFBvc3RmbG9wLCBob3dldmVyLCB0aGV5IG1heSBiZSBwcmV0dHkgc2ltaWxhciB0byB3aGF0IHlvdSBmaW5kIGF0IDJubC81bmwgYW5kIGV2ZW4gMTBubC4KQWxzIGp1bmdlciBIdW5kIHd1cmRlIGljaCBvZnQgZ2VzY2hsYWdlbiB1bmQgZ2V0cmV0ZW4gYWJlciBtZWluIG5ldWVzIEhlcnJjaGVuIENhcmxvcyBoYXQgbWljaCBnZXJldHRldCB1bmQgbWlyIGdlemVpZ3QsIGRhc3MgZXMgYXVjaCBNZW5zY2hlbiBnaWJ0LCBkaWUgbWljaCBsaWViIGhhYmVuLiAKTm8gbWF0dGVyIGhvdyBtYW55IHRpbWVzIHlvdSBzZWUgdGhlIHNtYWxsIGxvY29tb3RpdmUgc3RlYW1pbmcgZnJvbSB0aGUgbGl2aW5nIHJvb20gZmlyZXBsYWNlIGluIGhpcyBUaW1lIFRyYW5zZml4ZWQgKDE5MzgpLCB3aXRoIHRoZSBtYW50ZWwgY2xvY2sgcG9pbnRpbmcgdG8gMTI6NDMgYW5kIGV2ZXJ5IGdyYWluIGxpbmUgaW4gdGhlIHdvb2RlbiBmbG9vciBpbiBwbGFjZSwgaXQgd2lsbCBzdGlsbCBjb21lIGZyb20gYmVoaW5kIGl0cyB1dHRlciBmYW1pbGlhcml0eSBhbmQgc3VycHJpc2UgeW91Li4gClRoZSBmaXJzdCBwZXJzb24gdG8gZ2V0IHRvIHNpeCBwb2ludHMgd2l0aCBhIGdhcCBvZiB0d28gcG9pbnRzIHdpbnMgdGhlIGdhbWUgYW5kIHRoZSBzZXQuIElmIHRoZXJlIGlzIG5vdCBhIGdhcCBvZiB0d28gcG9pbnRzLCB0aGUgdGllIGJyZWFrIGNhcnJpZXMgb24gdW50aWwgdGhlcmUgaXMuCkkgd291bGQgc3VnZ2VzdCB5b3UgYWxzbyBtYXkgaGF2ZSBoYWQgYSBsYXRlbnQgdmlydXMsIEkgaGF2ZSBwZXJzb25hbGx5IGhhZCBza2luIHNlbnNhdGl2aXR5IHdoZW4gSSBoYWQgdGhlIHN3aW5lIGZsdSwgZXZlbiB2YWNjaW5lcyBjYW4gcHV0IHZpcnVzZXMgYW5kIGhlYXZ5IG1ldGFscyBpbnRvIHlvdXIgc3lzdGVtLCBlc3AuCkJ1dCBEYW5lIENvdW50eSBSYXBlIENyaXNpcyBDZW50ZXIgZXhlY3V0aXZlIGRpcmVjdG9yIEtlbGx5IEFuZGVyc29uIGNhbGxlZCB0aGUgYWdlbmN5J3MgbGFwc2VzICJhIGJyZWFjaCBvZiB0cnVzdCBhbmQgYSBodWdlIGlzc3VlIG9mIGNvbmNlcm4uIiBBbmRlcnNvbiBzYWlkIHRoYXQgaW4gdGhlIGxhc3QgZmV3IHllYXJzLCBzZXZlcmFsIHdvbWVuIHRvbGQgaGVyIGNoaXJvcHJhY3RvcnMgb3IgbWFzc2FnZSB0aGVyYXBpc3RzIHRvdWNoZWQgaW50aW1hdGUgcGFydHMgb2YgdGhlaXIgYm9kaWVzIHdpdGhvdXQgdGhlaXIgY29uc2VudC4gU2hlIHdvdWxkIG5vdCBzYXkgd2hldGhlciB0aGUgd29tZW4gcmVwb3J0ZWQgdGhlc2UgY2FzZXMgdG8gdGhlIGRlcGFydG1lbnQgb3IgcG9saWNlLCBjaXRpbmcgY29uZmlkZW50aWFsaXR5IHJlYXNvbnMuLiAKUmF0ZSBtb3J0Z2FnZQpDaGVja2VyZWRaZWVicmFoICAyLDExOCBwb2ludHMgIHN1Ym1pdHRlZCAyNiBkYXlzIGFnbwoiU3VyIGxhIHBsYW5ldGUgTWFycyIsIGluIENvbXB0ZXMgUmVuZHVzLCB2b2wgNzcgbm8gNCwgcC4gCkluIG9uZSBwZW5kaW5nIGNhc2UsIHRoZSBGbG9yaWRhIFN1cHJlbWUgQ291cnQgY291bGQgYWxsb3cgZG9nIGFuZCBob3JzZSB0cmFja3MgaW4gZWlnaHQgY291bnRpZXMgc3RyZXRjaGluZyBmcm9tIHNvdXRod2VzdCBGbG9yaWRhIHRvIHRoZSBQYW5oYW5kbGUgdG8gYWRkIHNsb3QgbWFjaGluZXMuIEFub3RoZXIgbGVnYWwgYmF0dGxlIHBpdHMgdGhlIFNlbWlub2xlcyBhZ2FpbnN0IHRoZSBzdGF0ZS4gU2V2ZW4geWVhcnMgYWdvIHRoZSBzdGF0ZSByZWFjaGVkIGFuIGV4Y2x1c2l2ZSBkZWFsIHRvIGxldCB0aGUgdHJpYmUgb2ZmZXIgYmxhY2tqYWNrIGF0IG1hbnkgb2YgaXRzIEZsb3JpZGEgY2FzaW5vcywgYnV0IHRoYXQgcHJvdmlzaW9uIGV4cGlyZWQgaW4gMjAxNS4gCjMuIFZlbmRvcnMgbXVzdCBkaXNwbGF5IHVzZXIgZmxhaXIKVGhlIFByb2dyYW1tZSBsaXN0cyBhbGwgcGFydGljaXBhdGluZyBwdWJzLCB0aGVpciBhZGRyZXNzZXMgYW5kIGNvbnRhY3QgZGV0YWlscywgb3BlbmluZyB0aW1lcywgd2hpY2ggYnVzIHN0b3BzIGFyZSBuZWFyYnksIGEgc3VtbWFyeSBvZiBhdmFpbGFibGUgYmVlciwgYW5kIHdoZXRoZXIgdGhleSBzZXJ2ZSBmb29kLCBhcmUgZmFtaWx5IGZyaWVuZGx5LCBoYXZlIGEgY2hpbGRyZW4ncyBwbGF5IGFyZWEsIHByb3ZpZGUgYWNjb21tb2RhdGlvbiBvciBoYXZlIHNwZWNpYWwgb2ZmZXJzIGR1cmluZyB0aGUgZXZlbnQuIEl0IGFsc28gY29udGFpbnMgYSBiYXNpYyBtYXAgb2YgZWFjaCBvZiB0aGUgbWFpbiB0b3duIGNlbnRyZXMgc2hvd2luZyBidXMgc3RvcCBsb2NhdGlvbnMgYW5kIHRob3NlIG9mIHBhcnRpY2lwYXRpbmcgcHVicywgYXMgd2VsbCBhcyBhbiBldmVudCBidXMgdGltZXRhYmxlLiBBIG1vcmUgZGV0YWlsZWQgYnVzIHRpbWV0YWJsZSBzdGF0aW5nIGV4YWN0bHkgd2hpY2ggYnVzIGlzIGR1ZSB0byBiZSBvcGVyYXRpbmcgd2hpY2ggcm91dGVzIGlzIHByb3ZpZGVkIGluIHRoZSBWZWhpY2xlIFN1cHBsZW1lbnQuClVuZm9ydHVuYXRlbHkgZm9yIERvYywgdGhvdWdoLCBoZSBjb250cmFjdGVkIGNvbnN1bXB0aW9uIGhpbXNlbGYuLiAKQXMgdXN1YWwgdGhlIHBhaXIgd2l0aCB0aGUgaGlnaGVyIHZhbHVlIGlzIHVzZWQgdG8gZGV0ZXJtaW5lIHRoZSB3aW5uZXIgb2YgYSB0aWUuIFBhaXI6IE9uZSBwYWlyIG9mIHR3byBlcXVhbCB2YWx1ZSBjYXJkcyBjb25zdGl0dXRlcyBhIHBhaXIuIApGdXR1cmUgRDEwcyB3aWxsIGJlIGF3YXJkZWQgZm9yIHVwIHRvIHR3byB5ZWFycyBpbiA2IG1vbnRoIGludGVydmFscywgYnV0IHdpbGwgYmUgZXZhbHVhdGVkIG9uIHRoZSBzYW1lIHBvaW50IHNjYWxlIGFzIEYyIDdzLiAKTWFuIGphaWxlZCBvdmVyIGhvcnJpZmljIGdsYXNzaW5nIGF0IFdhcmlsbGEgSG90ZWwKU2hlIHdhcyB0aGUgb25seSAiY29tcGFueSIgaGUgaGFkIGZvciA0MCsgeWVhcnMuIFRoYXQgYSBsb29vb25nIHRpbWUgdG8gYmUgYWxvbmUuIFNvIGV2ZW4gdGhvdWdoIGhlIHdhcyBiYWNrIHdpdGggaGlzIHNpYmxpbmdzLCBoZSBkaWRuIGtub3cgaG93IHRvIGludGVyYWN0IHdpdGggdGhlbSB0aGUgd2F5IGhlIGtuZXcgaG93IHRvICJpbnRlcmFjdCIgd2l0aCBEb2xvcmVzLiBIZSBkZWZpbml0ZWx5IHdlbnQgYSBsaXR0bGUgY3JhenkgYmVpbmcgYWxvbmUgZm9yIHNvIGxvbmcsIGJ1dCBiZWluZyBhYmxlIHRvIHRhbGsgdG8gRG9sb3JlcyB3YXMgcHJvYmFibHkgdGhlIG9ubHkgdGhpbmcgdGhhdCBrZXB0IGhpbSBmcm9tIGdvaW5nIG92ZXIgdGhlIGVkZ2UuIFRoZSBjb252ZXJzYXRpb25zIEZpdmUgaGFzIHdpdGggRG9sb3JlcyBhcmUgY29tcGxldGVseSBvbmUgc2lkZWQgb24gaGlzIHBhcnQuIFNvIG5vLCBJIGRvbiB0aGluayBEb2xvcmVzIGlzIGNvbnNjaW91cyBpbiBhbnkgd2F5LCBzaGUgd2FzIGp1c3QgRml2ZSBjb3BpbmcgbWVjaGFuaXNtLgpPZGVyIG5vY2ggYmVzc2VyOiBzaWNoIHZvbiBzZWluZW0gU2NoYXR6IGRhbWl0IG1hc3NpZXJlbiBsYXNzZW4gZGVubiBCb2R5IE1lbHRzIHdlcmRlbiBhdWNoIG9mdCBNYXNzYWdlIEJhcnMgZ2VuYW5udC4uIApJIGhvcGUgSSBjYW4gZmluZCB0aGF0IG1vcmUgcmVjZW50IGRvY3VtZW50YXJ5IHdoZXJlIGhlIHNheXMgdGhleSBoYWQgbm8gYWNjZXNzLCBidXQgdGhhdCBtaWdodCB0YWtlIG1lIGhvdXJzIHRvIGZpbmQuIAo5LiBUYWtlIHNpbXBsZSBzdGVwcyB0byBtb3ZlIGZyb20gY29zdCBwbHVzIHRvIHZhbHVlIGJhc2VkIHByaWNpbmcuIApJIHdva2UgdXAgYXQgVHluZGFsbCBjcmVlayBpbiB0aGUgU2llcnJhIGFuZCBoYWQgdG8gZ28gb3ZlciBGb3Jlc3RlciBhbmQgS2VhcnNhcmdlIGJlZm9yZSBhIHN0b3JtIGhpdC4gSXQgd2FzIEFwcmlsIDMwdGggYW5kIGl0IHdhcyBmcmVlemluZyBhcyBJIHNldCBvdXQgYXQgMjowMGFtLiBCeSBlYXJseSBhZnRlcm5vb24gd2Ugd2VyZSBydW5uaW5nIGRvd24gdG93YXJkcyBPbmlvbiBWYWxsZXkgVEggbGF1Z2hpbmcgYW5kIGZhbGxpbmcgd2hlbiB3ZSByYW4gaW50byBhIGNvdXBsZSB0aGF0IGdhdmUgdXMgYmVlcnMgaW4gdGhlIHBhcmtpbmcgbG90IGFuZCBhIHJpZGUgZG93biB0byBJbmRlcGVuZGVuY2UuT2N0b2JlciAybmQgSSB3YXMgYXBwcm9hY2hpbmcgU2lsdmVyIFBhc3MgZnJvbSB0aGUgbm9ydGggd2hlbiBpdCBzdGFydGVkIHNsZWV0aW5nIGhhcmQgd2l0aCBzdHJvbmcgd2luZHMuIApUaGUgZGVhbCBoYXNuJ3QgY2xvc2VkIHlldCwgYnV0IGl0IGlzIG9uZSB0aGF0IHdlIGFyZSByZWFsbHkgZXhjaXRlZCBhYm91dCBiZWNhdXNlIGZ1bmRhbWVudGFsbHksIGl0IGFkZHMgc28gbWFueSBjYXBhYmlsaXRpZXMgZm9yIHdoYXQgd2UgY2FuIGRvLiBGb3Igc3RhcnRlcnMsIHRoZXkgYXJlIHRoZSBOby4gCk5vdyBjYWxsIG1lIHN0dXBpZCwgYnV0IEkgd2FzIHVuZGVyIHRoZSBpbXByZXNzaW9uIHRoYXQgdGhlIENodXJjaCBhbmQgU3RhdGUgaGFkIHRvIGJlIHNlcGFyYXRlIGluIHRoZSBVUy4gSSB0aG91Z2h0IGEgcmVsaWdpb3VzIG9yZ2FuaXphdGlvbiBjb3VsZCBub3QgYmUgaW52b2x2ZWQgaW4gcG9saXRpY3MgdW5sZXNzKGFuZCBoZXJlIHdoZXJlIGl0IGdldHMgY29uZnVzaW5nICBwbGVhc2UgZXhjdXNlIHRoZSBjb25zdGl0dXRpb25hbCBsYXcgdGVybWlub2xvZ3kpLApSZXBvcnRzIGFyZSBpbmRpY2F0aW5nIHRoZSBiaXRlIGhhcyBiZWVuIHNsb3cgZm9yIHRob3NlIHRoYXQgaGF2ZSB2ZW50dXJlZCBvdXQuIApJIHdhcyBvbiBUTCBmaXJzdCBhbmQgSSBjb3VsZCBiYXJlbHkgZ2V0IGFueSByYXRpbyBldmVuIHdpdGggYSBzZWVkYm94LiBOb3cgSSBoYXZlIGF1dG9kbCBpcnNzaSBzZXR1cCBidXQgYXQgdGhlIHRpbWUgSSB3YXMgdXNpbmcgUlNTIGFuZCBjb3VsZG4gZ2V0IGluIHRoZSBzd2FybSBmYXN0IGVub3VnaC4gCiJJZiB5b3UgYWRkIHdoYXQgd2Ugd2lsbCBoYXZlIHNwZW50IG9uIHJlbm92YXRpb25zIGJ5IHRoZSBlbmQgb2YgdGhlIHllYXIsIHRoYXQncyBhIHNwZW5kIG9mIG92ZXIgJDUgbWlsbGlvbiBpbiB0aGUgbGFzdCBmb3VyIHllYXJzIG9uIHB1cmNoYXNpbmcgdGhlIGNsdWIgaG91c2UsIGFuZCBpbXByb3ZpbmcgdGhlIGNsdWIgZmFjaWxpdGllcywiIGhlIHNhaWQuClNoYWRvdzc3NiAgMzYgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KSW4gb3RoZXIgd29yZHMsIG5ldyB3b3JrZXJzIHRoYXQgaGF2ZSBuZXZlciBkb25lIHRoZSBISVQgd2lsbCBiZSBsb2NrZWQgb3V0IGluIGFkZGl0aW9uIHRvIHBlb3BsZSB0aGF0IGhhdmUgYWxyZWFkeSBkb25lIHRoZSBISVQuIApBdCBteSBmb3JtZXIgZnVsbCB0aW1lIHBvc2l0aW9uIChnb3QgYSBuZXcgZnVsbCB0aW1lIGFuZCBidW1wZWQgbXlzZWxmIGRvd24gdG8gcGFydCB0aW1lIHRoZXJlKSwgdGhlIG1hbmFnZXIgaGFkIHVzIGRvIGEgcnVuIHRocm91Z2ggb2YgdGhlIHN0b3JlIHRvIHNlZSBpZiB0aGVyZSB3ZXJlIGFueSBsaW5nZXJpbmcgY3VzdG9tZXJzLiBJIGZvdW5kIG9uZSBjaGlsbGluZyBpbiBtb3ZpZXMsIG9uIGhpcyBwaG9uZS4gTWluZCB5b3UsIHdlIG1hZGUgMTUsIDEwLCBhbmQgNSBtaW51dGUgYW5ub3VuY2VtZW50cywgYW5kIHRoaXMgZ3V5IGp1c3QgY2hhdHRlcnMgaGlzIHdheSB0aHJvdWdoLCBsb29raW5nIGZvciBhIG1vdmllLiAKRWxldmF0b3JzIGJyZWFraW5nIGlzIG5vdGhpbmcgdW5pcXVlLCB0aGV5IHJ1biAyNCBob3VycyBhIGRheSA3IGRheXMgYSB3ZWVrIHVuZGVyIHRoZSB3b3JzdCBjb25kaXRpb25zIGltYWdpbmFibGUuIE9uIHRvcCBvZiB0aGF0LCB5b3UgY2FudCBqdXN0IGJ1eSBhbiBvZmYgdGhlIHNoZWxmIHNvbHV0aW9uIGJlY2F1c2UgZWFjaCBDVEEgc3RhdGlvbiBoYXMgZGlmZmVyZW50IHNpemUgY29uc3RyYWludHMsIHNvbWUgaW4gaW5jcmVkaWJseSB0aWdodCBxdWFydGVycyB3aXRoaW4gc3RhdGlvbnMgdGhhdCB3ZXJlIGJ1aWx0IGRlY2FkZXMgYmVmb3JlIEFEQSBjb21wbGlhbmNlIHdhcyBhIHRoaW5nLiBUaGF0IG1lYW5zIGVhY2ggaXMgY29tcGxldGVseSBjdXN0b20gYnVpbHQgYW5kIGlmIHNvbWUgcmFuZG9tIGdlYXIgYnJlYWtzLCB0aGF0IG1lYW5zIHNvbWUgZHVkZSBpbiBhIG1hY2hpbmUgc2hvcCBzb21ld2hlcmUgbGl0ZXJhbGx5IGhhcyB0byBidWlsZCBpdCBieSBoYW5kLi4gCklmIGNvbnZpY3RlZCwgRGllZG8gY291bGQgc2VydmUgdXAgdG8gMjAgeWVhcnMgaW4gZmVkZXJhbCBwcmlzb24uCkJsb29keSBzaG9lIHByaW50cyBQb2xpY2Ugc2VhcmNoaW5nIHRoZSBTY2hlcmVyIGhvbWUgZGlzY292ZXIgYSBzZXQgb2YgdmVyeSBkaXN0aW5jdCBibG9vZHkgc2hvZSBwcmludHMgdGhleSBiZWxpZXZlIHRoZSBraWxsZXIgd2FudGVkIHRoZW0gdG8gZmluZC4gCldlJ3ZlIG5ldmVyIGJlZW4gdGhlIHR5cGUgb2YgcGVvcGxlIHRoYXQgc2hvcCBhcm91bmQsIGJ1dCBpdCB0b29rIGZpdmUgb3Igc2l4IHRyaWVzIG92ZXIgdGhlIEludGVybmV0IHRvIHNlZSB0aGUgb25lIHdlIHdhbnRlZC4gClRoZSBmaWVyeSBmdW5kYW1lbnRhbGlzdCBsZWFkZXIgaGFzIHByZWFjaGVkIGFybWVkIGRlZmlhbmNlIG9mIHRoZSBnb3Zlcm5tZW50IGluIGEgY3J1c2FkZSBmb3IgZ3JlYXRlciBTaWtoIHJpZ2h0cywgYW5kIG9mZmljaWFscyBhY2N1c2UgaGltIG9mIG1hc3Rlcm1pbmRpbmcgYSBjYW1wYWlnbiBvZiB0ZXIgIHJvcmlzbSB0aGF0IGhhcyBjbGFpbWVkIG5lYXJseSA0MDAgbGl2ZXMgaW4gdGhlIHBhc3QgZm91ciBtb250aHMuIApOb3QgbG9uZyBhZnRlciBjYW1lIHRoZSBlcm9zaW9uLCBpbiBwb2xpdGljcyBhbmQgcG9wIGN1bHR1cmU6IEFsIFNoYXJwdG9uIGluIGEgcG9zaXRpb24gb2YgaW5mbHVlbmNlLiBQYW0gQW5kZXJzb24gYW5kIFRvbW15IExlZSdzIHNleCB0YXBlIGluIDE5OTguIEJpbGwgQ2xpbnRvbiB3YWdnaW5nIGhpcyBmaW5nZXIgYW5kIHRlbGxpbmcgdGhlIEFtZXJpY2FuIHBlb3BsZSwgcmVnYXJkaW5nIGludGVybiBNb25pY2EgTGV3aW5za3ksICJJIGRpZCBub3QgaGF2ZSBzZXggd2l0aCB0aGF0IHdvbWFuLiIgT0ogU2ltcHNvbidzIGJvb2sgY2FsbGVkICJJZiBJIERpZCBJdCIgaW4gMjAwNy4KSSByZWFsbHkgbGlrZSB0aGUgQWlyIFNsaW5nIGJ5IEFscGFrYSBHZWFyIGJ1dCBub3cgdGhhdCBJIGhhdmUgYSBzZXdpbmcgbWFjaGluZSBJIGRvbiB3YW50IHRvIGJ1eSBiYWdzIGFueW1vcmUsIEkgd2FudCB0byBtYWtlIHRoZW0uIFNvIGhlcmUgaXMgbXkgYXR0ZW1wdCBhdCByZWNyZWF0aW5nIHRoZSBBaXIgU2xpbmcuClNjaHVsdHosIGFzc3Npc3RhbnQgbWFuYWdpbmcgZWRpdG9yLCBtYXJrZXRpbmcuIApGb3IgY29udGV4dCwgYSBvbmUgd2F5IFRva3lvIE9zYWthIFNoaW5rYW5zZW4gY29zdHMgcm91Z2hseSAxMzB1c2QuIHRoZSA3IERheSBKUiBQYXNzIGNvc3RzIGFyb3VuZCAyNjB1c2QuIEJ1dCBmb3IgdGhlIGR1cmF0aW9uLCB5b3UgY2FuIGdvIG9uIGFueSBKUiBvd25lZCBsaW5lIGZvciBmcmVlLCBpbmNsdWRpbmcgc2VsZWN0ZWQgU2hpbmthbnNlbnMuIFlvdSBjYW4gZ28gZnJvbSBLdW1hbW90byB0byBTYXBwb3JvIGZvciBhbGwgaXQgd29ydGguCkFuaW1hbHMgaW4gZ2VuZXJhbCBzZWVtIHRvIGhhdmUgYW4gdW5kZXJzdGFuZGluZyBvZiB3aGVuIHRoZXkgbmVlZCB0byB0dXJuIHRvIHNvbWV0aGluZyB3aXRoIG1hbmlwdWxhdG9ycyBmb3IgaGVscC4gRXZlciBzZWVuIHRoZSB3aWxkIHNlYSBjcmVhdHVyZXMgd2hvIHN3aW0gdXAgdG8gZGl2ZXJzIHRvIGdldCBob29rcyB0YWtlbiBvdXQgb3IgbmV0cyBjdXQgb2ZmPyBFdmVuIGlmIGl0IGh1cnRzIHRoZW0sIGV2ZW4gaWYgdGhleSBibGVlZCwgdGhleSB1c3VhbGx5IGRvbid0IGV2ZW4gbGFzaCBvdXQuIFRoaXMgd29sZiB3YXMgY29sZCBhbmQgc3RydWdnbGluZywgdGhlbiBzdWRkZW5seSBub3Qgc3RydWdnbGluZyBhbmQgd2FybSwgYW5kIGl0IHdhcyBiZWNhdXNlIG9mIHRoZSBodW1hbnMuIFVubGVzcyBoZSBnb3Qgc3Bvb2tlZCByZWFsbHkgYmFkLCBoZSB3b3VsZCBwcm9iYWJseSBqdXN0IHNsZWVwIG9mZiB0aGUgYWRyZW5hbGluZSBjcmFzaC4KTGUgbm9tYnJlIGRlIHN0YXRpb25zIHF1aSBtZXN1cmFpZW50IGwncGFpc3NldXIgZGUgbmVpZ2UgYXUgc29sIGRlcHVpcyAxOTUwIGEgZ3JhbmRlbWVudCBkaW1pbnUgY2VzIGRlcm5pcmVzIGFubmVzLiBUb3V0ZWZvaXMsIGxlcyBhbmFseXNlcyBkJ0Vudmlyb25uZW1lbnQgQ2FuYWRhLCBub3RhbW1lbnQgYmFzZXMgc3VyIGRlcyBpbWFnZXMgc2F0ZWxsaXRlcyBkZXMgYW5uZXMgNzAganVzcXUnIGF1am91cmQnaHVpLCBkbW9udHJlbnQgYXVzc2kgbGUgcmVjdWwgZGUgbGEgbmVpZ2UgYXUgcGF5cy4KT3ZlcnZpZXcgZm9yIFN3YXRMYWtlQ2l0eQpXaGF0IHdhcyB0byBiZSBleHBlY3RlZD8gTm8sIGl0IG5vdCBva2F5LiAKVGhlIGtleSBpcyB0aGF0IEFMTCByZW1haW5pbmcgcGxheWVycyBoYXZlIHRvIGFncmVlIHRvIGNob3AuIElmIGV2ZW4gb25lIHBsYXllciByZWZ1c2VzLCB0aGUgdG91cm5hbWVudCBjb250aW51ZXMuIEdlbmVyYWxseSwgdGhlIG9sZGVyIHJlZ3MgKE9sZCBNYW4gQ29mZmVlIGFuZCBmcmllbmRzKSB3aWxsIHdhbnQgdG8gY2hvcCBhcyBzb29uIGFzIHBvc3NpYmxlLCBzbyB0aGF0IHRoZXkgY2FuIGdldCBiYWNrIHRvIHRoZWlyIGNhc2ggZ2FtZXMgYW5kIGVhcm4gY29tcHMgZm9yIHNvdXAuIEkgbWFrZSBtb25leSBwbGF5aW5nIHBva2VyIGZyb20gY2FzaCBnYW1lcy4gSSBwbGF5IHRvdXJuYW1lbnRzIGZvciBmdW4uIFdoYXQgSSBkb24gbmVlZCBpcyBlbmRsZXNzIGJpY2tlcmluZywgY29tcGxhaW5pbmcsIGFuZCBwaXNzaW5nIGNvbnRlc3RzIGJldHdlZW4gcGVvcGxlIG92ZXIgYW4gZXh0cmEgJDUwIGdvaW5nIG9uZSB3YXkgb3IgYW5vdGhlciBqdXN0IHRvIGNob3AgaXQgdXAuIFBsdXMsIHRoZXJlIGFsd2F5cyBvbmUgT01DIHdobyBoYXMgdGhlIHNhbWUgZnVja2luZyBzdG9yeSBhYm91dCAidGhhdCBvbmUgZ3V5IHdobyBkaWRuIHdhbnQgdG8gY2hvcCAob3IgcGF5IGEgYnViYmxlKSBhbmQgaGUgd2FzIHRoZSBuZXh0IG9uZSBvdXQpLiBJZiBJIHBsYXlpbmcgZm9yIGZ1biwgSSBkb24gd2FudCBmcnVzdHJhdGlvbi4gR2l2ZSBtZSBtb25leSBzbyBJIGNhbiBtb3ZlIG9uIHdpdGggbXkgbGlmZS4KV2hhdCBJcyBIYXBwZW5pbmcgV2l0aCBLaW0gUmljaGFyZHMgb24gUmVhbCBIb3VzZXdpdmVzIG9mIEJldmVybHkgSGlsbHMKVGhlIGFtb3VudCBvZiBjaGlwcyBvbiB0aGUgdGFibGUgZXF1YWxzdGhlIGFtb3VudCBvZiBtb25leSB5b3UgYXJlIHBsYXlpbmcgd2l0aC4gCkl0J3MgYSBnb29kIHdheSB0byBnZXQgd2l0aCB0aGUgY29uc3VtZXIgYW5kIGxlYXJuIGhvdyB3ZSBjYW4gb3B0aW1pemUuIi4gCkVkaXRvcidzIE5vdGU6IFRoZSBndXQgYnJhaW4gYXhpcyBhbiBpbWFnaW5hcnkgbGluZSBiZXR3ZWVuIHRoZSBicmFpbiBhbmQgdGhlIGd1dCBpcyBvbmUgb2YgdGhlIG5ldyBmcm9udGllcnMgb2YgbmV1cm9zY2llbmNlLk1pY3JvYmlvdGEgaW4gb3VyIGd1dCwgc29tZXRpbWVzIHJlZmVycmVkIHRvIGFzIHRoZSAic2Vjb25kIGdlbm9tZSIgb3IgdGhlICJzZWNvbmQgYnJhaW4sIiBtYXkgaW5mbHVlbmNlIG91ciBtb29kIGluIHdheXMgdGhhdCBzY2llbnRpc3RzIGFyZSBqdXN0IG5vdyBiZWdpbm5pbmcgdG8gdW5kZXJzdGFuZC5Vbmxpa2Ugd2l0aCBpbmhlcml0ZWQgZ2VuZXMsIGl0IG1heSBiZSBwb3NzaWJsZSB0byByZXNoYXBlLCBvciBldmVuIHRvIGN1bHRpdmF0ZSwgdGhpcyBzZWNvbmQgZ2Vub21lLkFzIHJlc2VhcmNoIGV2b2x2ZXMgZnJvbSBtaWNlIHRvIHBlb3BsZSwgZnVydGhlciB1bmRlcnN0YW5kaW5nIG9mIG1pY3JvYmlvdGEncyByZWxhdGlvbnNoaXAgdG8gdGhlIGh1bWFuIGJyYWluIGNvdWxkIGhhdmUgc2lnbmlmaWNhbnQgbWVudGFsIGhlYWx0aCBpbXBsaWNhdGlvbnMuYSBzY2llbnRpc3QsIEkgb2Z0ZW4gZmluZCBteXNlbGYgY2hhdHRpbmcgd2l0aCBmcmllbmRzIGFuZCBuZWlnaGJvcnMgYWJvdXQgdGhlIGxhdGVzdCBhZHZhbmNlcyBpbiBuZXVyb3NjaWVuY2UuSW4gdGhlIHBhc3QgZmV3IHllYXJzIEkgaGF2ZSBmb3VuZCBtb3JlIGFuZCBtb3JlIHBlb3BsZSBhc2tpbmcgYWJvdXQgbWljcm9iaW90YSB0aGUgbWljcm9vcmdhbmlzbXMgdGhhdCB0eXBpY2FsbHkgaW5oYWJpdCBhIGJvZGlseSBvcmdhbi5JbiB0aGUgbGFzdCAxMCB5ZWFycywgSSd2ZSBiZWVuIG9uZSBvZiBtYW55IG5ldXJvc2NpZW50aXN0cyBhZHZhbmNpbmcgbmV3IGlkZWFzIGFib3V0IGhvdyBtaWNyb2Jpb3RhIGluIHRoZSBndXQgYWZmZWN0cyBicmFpbiBmdW5jdGlvbi5UaGUgbWVkaWEgaGFzIHRha2VuIG5vdGljZSBhcyB3ZWxsLlJlY2VudCBzdG9yaWVzIG9uIHRoZSBndXQgYnJhaW4gYXhpcyBhbW9uZyB0aGUgbW9zdCBleGNpdGluZyBuZXcgZnJvbnRpZXJzIGluIG5ldXJvc2NpZW5jZSBpbmNsdWRlICJTb21lIG9mIE15IEJlc3QgRnJpZW5kcyBBcmUgR2VybXMiIGluIHRoZSBOZXcgWW9yayBUaW1lcyBNYWdhemluZSBhbmQgIkd1dCBNaWNyb2JlcyBDb250cmlidXRlIHRvIE15c3RlcmlvdXMgTWFsbnV0cml0aW9uIiBpbiBOYXRpb25hbCBHZW9ncmFwaGljLkluIDIwMTIsIHRoZSBlZGl0b3JzIG9mIFNjaWVuY2UgdGhvdWdodCB0aGUgcmVzZWFyY2ggaW1wb3J0YW50IGVub3VnaCB0byBkZXZvdGUgYSBzcGVjaWFsIGlzc3VlIHRvIHRoZSB0b3BpYy5XaHkgaXMgdGhlIGlzc3VlIHNvIGZhc2NpbmF0aW5nPyBGb3Igb25lIHRoaW5nLCBpdCdzIGhlaWdodGVuZWQgY29uc2Npb3VzbmVzcyBvZiBob3cgZGlldCBhbmQgbnV0cml0aW9uIGltcGFjdCBvdXIgaGVhbHRoLkZvciBhbm90aGVyLCBpdCdzIHNoZWVyIG51bWJlcnMuT3VyIGJyYWlucyBjb250YWluIGJpbGxpb25zIG9mIG5ldXJvbnMsIGJ1dCB3ZSBsZXNzIG9mdGVuIHRhbGsgYWJvdXQgdGhlIGZhY3QgdGhhdCB0cmlsbGlvbnMgb2YgImdvb2QiIGJhY3RlcmlhIGFyZSBhbGl2ZSBhbmQgd2VsbCBpbiBvdXIgaW50ZXN0aW5hbCB0cmFjdHMuUmVtYXJrYWJseSwgdGhlc2UgbmF0dXJhbGx5IG9jY3VycmluZywgZXZlciBwcmVzZW50IGNvbW1lbnNhbCBiYWN0ZXJpYSBtYXkgYmUgaW5zdHJ1bWVudGFsIGluIGhvdyBvdXIgYnJhaW4gZGV2ZWxvcHMsIGhvdyB3ZSBiZWhhdmUsIHJlYWN0IHRvIHN0cmVzcywgYW5kIHJlc3BvbmQgdG8gdHJlYXRtZW50IGZvciBkZXByZXNzaW9uIGFuZCBhbnhpZXR5LldpdGggc3VjaCBzZXJpb3VzIG1lbnRhbCBoZWFsdGggaW1wbGljYXRpb25zIHRvIGNvbnNpZGVyLCB0aGVyZSBpcyBzdWJzdGFudGlhbCBidXp6IGFtb25nIG5ldXJvc2NpZW50aXN0cyBhYm91dCB0aGUgYmlkaXJlY3Rpb25hbCBuYXR1cmUgb2YgdGhlc2Ugc2VlbWluZ2x5IGluZmluaXRlIHJlbGF0aW9uc2hpcHMuSSBhbSBjb250aW51YWxseSBpbXByZXNzZWQgYnkgdGhlIGNyZWF0aXZlIHdheXMgdGhhdCBteSBjb2xsZWFndWVzIGFyZSBtYWtpbmcgZGlzY292ZXJpZXMsIGVzcGVjaWFsbHkgaW4gaG93IG1pY3JvYmlvdGEgbWF5IGluZmx1ZW5jZSB0aGUgYnJhaW4gYW5kIHRoZSBpbW11bmUgc3lzdGVtIGR1cmluZyBlYXJseSBsaWZlLkFuZCBqdXN0IGxhc3Qgd2VlayByZXNlYXJjaGVycyBhdCBVQ0xBIGZvdW5kIHRoYXQgcmVndWxhcmx5IGVhdGluZyB5b2d1cnQgd2l0aCBwcm9iaW90aWNzLCB3aGljaCBjb250YWluICJnb29kIiBiYWN0ZXJpYSwgc2VlbXMgdG8gYWZmZWN0IGJyYWluIGZ1bmN0aW9uaW5nIGluIHdvbWVuLlNjaWVudGlzdHMgaGF2ZSByZWNvZ25pemVkIGNvbW11bmljYXRpb24gYmV0d2VlbiB0aGUgYnJhaW4gYW5kIHRoZSBndXQgZm9yIG1vcmUgdGhhbiAxMDAgeWVhcnMsIHdpdGggc3R1ZGllcyBpbiB0aGUgZWFybHkgMTl0aCBhbmQgMjB0aCBjZW50dXJpZXMgc2hvd2luZyB0aGF0IGEgcGVyc29uJ3MgZW1vdGlvbmFsIHN0YXRlIGNhbiBhbHRlciB0aGUgZnVuY3Rpb24gb2YgdGhlIGdhc3Ryb2ludGVzdGluYWwgKEdJKSB0cmFjdC4xIDMgT25lIG9mIHRoZSBiZXN0IGV4YW1wbGVzIGlzIHRoZSB3b3JrIG9mIFdpbGxpYW0gQmVhdW1vbnQsIGFuIGFybXkgc3VyZ2Vvbiwgd2hvIGJlY2FtZSBrbm93biBhcyB0aGUgIkZhdGhlciBvZiBHYXN0cmljIFBoeXNpb2xvZ3kuIiBJbiB0aGUgMTgzMHMsIEJlYXVtb250LCB3aG8gd2FzIGFibGUgdG8gbW9uaXRvciBnYXN0cmljIHNlY3JldGlvbnMgdGhyb3VnaCBhIGZpc3R1bGEgKGEgcGVybWFuZW50IG9wZW5pbmcgaW4gdGhlIHN0b21hY2ggd2FsbCksIG5vdGVkIGFuIGFzc29jaWF0aW9uIGJldHdlZW4gY2hhbmdpbmcgbW9vZHMgYW5kIGdhc3RyaWMgc2VjcmV0aW9ucy4gSW4gdGhlIG1pZCB0byBsYXRlIDE5MDBzLCByZXNlYXJjaCBleGFtaW5pbmcgc3RyZXNzIGJpb2xvZ3kgYW5kIGl0cyBpbXBhY3Qgb24gaHVtYW4gaGVhbHRoIHVuY292ZXJlZCBjbGVhciBjb25uZWN0aW9ucyBiZXR3ZWVuIGFuIGluZGl2aWR1YWwncyBzdHJlc3MgcmVzcG9uc2UgYW5kIGd1dCBmdW5jdGlvbi4gVGhpcyBjbGFzc2ljYWwgdmlldyBvZiB0b3AgZG93biBjb250cm9sIHRoYXQgaXMsIHRoZSBicmFpbidzIGFiaWxpdHkgdG8gY29udHJvbCBndXQgZnVuY3Rpb24gaXMgc3VwcG9ydGVkIGJ5IGV2aWRlbmNlIHJldmVhbGluZyB0aGF0IHRoZSBicmFpbiBpbmZsdWVuY2VzIGJvZHkgc3lzdGVtcywgaW5jbHVkaW5nIHRoZSBHSSB0cmFjdCwgdGhyb3VnaCBuZXVyYWwgY29ubmVjdGlvbnMgb2YgdGhlIGF1dG9ub21pYyBuZXJ2b3VzIHN5c3RlbSBhbmQgdGhyb3VnaCBodW1vcmFsIHN5c3RlbXMgaW4gdGhlIGJsb29kc3RyZWFtLiAKQW5kIHRoZXJlIHRoZSB0aW1lIHRoZXkgbGVmdCBtZSBhdCB0aGUgSE9TUElUQUwgYWZ0ZXIgYSB2aXNpdCB0byBteSBzaXN0ZXIsIHdobyBoYWQgYnJva2VuIGFuIGFybShidXQgd2hlbiBJIGFsbW9zdCBicm9rZSBteSBsZWcgSSBnb3QgaGFsZiBhbiBob3VyIGluIGJlZCwgYSBUeWxlbm9sLCBhbmQgbm8gcmVhbCBtZWRpY2FsIGF0dGVudGlvbi4pLCBhbmQgc29tZWhvdyB0aGUgc3RhZmYgZGlkbiBldmVuIGNhbGwgU29jaWFsIFNlcnZpY2VzIHRvIGxvY2F0ZSBteSBwYXJlbnRzLgpTbWl0aCBhbmQgQW5kZXJzb24gY29tZSBmcm9tIHR3byB2ZXJ5IGRpZmZlcmVudCBiYWNrZ3JvdW5kcy4gU21pdGggZ3JldyB1cCBpbiBzb3V0aGVybiBDYWxpZm9ybmlhLCB0cmFpbmluZyBtYWlubHkgaW4gQnJhemlsaWFuIGppdWppdHN1LiAKSWYgeW91IGFyZSBlbnRlcmluZyBhbiBleGlzdGluZyBIb2xkJ2VtIGdhbWUsIHlvdSB3aWxsIHByb2JhYmx5IGJlIHJlcXVpcmVkIHRvIHBvc3QgdGhlIGJpZyBibGluZCBpbiBvcmRlciB0byBwbGF5LiBJZiB5b3VyIHNlYXQgaXMgbmVhciB0aGUgYmlnIGJsaW5kIG9uIHlvdXIgcmlnaHQsIHlvdSB3aWxsIHByb2JhYmx5IHdhbnQgdG8gd2FpdCB1bnRpbCB0aGUgYmlnIGJsaW5kIGlzIGF0IHlvdXIgcG9zaXRpb24uIApJZiB5b3UgaGF2ZSBhIG1hbmEsIGl0IHN1cGVyIGVhc3ksIGp1c3QgZnJlZXplIHRoZW0gc28gdGhleSBjYW4gdGhyb3cgdGhlaXIgY3J5b3BvZHMsIGdldCB1cCBjbG9zZSBhbmQgYWltIGZvciBoZWFkIGZvciBtYXggZGFtYWdlLCB0aGVuIGp1c3QgcnVuLkhvdHplbnBJb3ogIDIgcG9pbnRzICBzdWJtaXR0ZWQgMTEgZGF5cyBhZ29UaGUgYWxlcnQgZGlzcGxheSBpbiB0aGUgVUkgb3IgdGhlIG1hcCBpcyBvZnRlbiBidWdnZWQgYXRtLiAKVGhleSBhcmUgdW5pZm9ybWx5IGJhZGx5IGRlc2lnbmVkIGFuZCB3cml0dGVuIChhbmQgdGhlIHN1cHBsZW1lbnRhbCBib29rcyBvZnRlbiB2ZWVyIGludG8gc2lsbHkgZWRnZWxvcmQgdGVycml0b3J5IG9uIHRoZSByZWd1bGFyKS4gCkRlY2VudCBzaXplZCBjb21tdW5pdHkKU3RlcCA1IERyYXcgbW9yZSBjYXJkcy4gT25jZSB5b3UgaGF2ZSBsYWlkIHlvdXIgaGFuZCwgZHJhdyB0aHJlZSBtb3JlIGNhcmRzIHRvIHJlcGxlbmlzaCB5b3VyIHN0b2NrLiAKQ0FMR0FSWSAgIEJyaXRpc2ggQ29sdW1iaWEgZmlyZWQgdGhlIGxhdGVzdCByb3VuZCBUaHVyc2RheSBpbiB0aGUgTm9ydGggQW1lcmljYW4gYmF0dGxlIHRvIHdvbyBuYXR1cmFsIGdhcyBwcm9kdWNlcnMsIHVudmVpbGluZyBtaW5pc2N1bGUgcm95YWx0eSByYXRlcyBhbmQgbWlsbGlvbnMgb2YgZG9sbGFycyBpbiBmcmVzaCBpbmZyYXN0cnVjdHVyZSBpbmNlbnRpdmVzIGluIGEgbW92ZSB0aGF0IG1heSBmb3JjZSBuZWlnaGJvdXJpbmcgQWxiZXJ0YSB0byByZXNwb25kIHRvIGluIGtpbmQuIFJlZHVjZWQgdGhlIHJveWFsdHkgcmF0ZSBvbiB3ZWxscyBkcmlsbGVkIGJldHdlZW4gU2VwdGVtYmVyIGFuZCBKdW5lIDIwMTAgdG8gMiUgZm9yIG9uZSB5ZWFyLiAKR2lmdHMgdG8gdGhlIGZvdW5kYXRpb24sIGxpc3RlZCBpbiBJUlMgUHVibGljYXRpb24gNzgsIEN1bXVsYXRpdmUgTGlzdCBvZiBPcmdhbml6YXRpb25zIGFuZCBkZXNjcmliZWQgaW4gQ29kZSAxMChjKSgzKSBvZiB0aGUgSW50ZXJuYWwgUmV2ZW51ZSBDb2RlLCBhcmUgdGF4IGRlZHVjdGlibGUgYXMgcGVybWl0dGVkIGJ5IGxhdy4gClJlYWxseSwgd2hvIGNhcmVzIGlmIHRoZXkgZ2V0IGthcm1hIGxldCB0aGVtIGhhdmUgaXQuIFNlY29uZCBJIG5vdCByYWdnaW5nIG9uIEVjY2hpTWFzdGVyIGZvciBoaXMgaW5pdGlhbCBjb21tZW50IGJ1dCBoaXMgcmVwbGllcyB0byBvdGhlciBwZW9wbGUuCk1hdHRoZXcgd2FzIGEgZ2l2aW5nIHBlcnNvbi4gCkhlIHBsYXllZCBjb2xsZWdlIGZvb3RiYWxsIGF0IE5vcnRoZXJuIElsbGlub2lzIFVuaXZlcnNpdHksIGFuZCwgdGhvdWdoIHVuZHJhZnRlZCwgd2FzIHNpZ25lZCBhZnRlciBncmFkdWF0aW9uIGJ5IHRoZSBEYWxsYXMgQ293Ym95cyBpbiAyMDA2LiAKSSBoYWQgdGhhdCBoYXBwZW4gaW4gbXkgb3duIHRvd24sIG9uY2UuIEkgd2VudCB0byBhIHBhcmsgSSBoYXZlbiBiZWVuIHRvIGluIHllYXJzLCBzY2VuaWMgdHJhaWxzLCBhIG5pY2UgbGl0dGxlIGxha2UsIGEgd2Fsa2luZyBwYXRoIHRoYXQgZ29lcyBpbnRvIHRoZSB3b29kcyBhbmQgcGFzdCB0aGUgbW91bnRhaW4gZm9vdGhpbGxzLiBBIHJlYWxseSBuaWNlIHBsYWNlLCBhcyBJIHJlbWVtYmVyZWQgaXQuIEkgZmlndXJlZCBJIHRha2UgbXkgZG9nIGZvciBhIHdhbGsgaW4gYSBuZXcgbG9jYXRpb24gYW5kIGVuam95IHRoZSBkYXkuIFRoZXJlIHdhcyBhbiBvbGQgbWFuIGZpc2hpbmcgaW4gdGhlIGxha2UsIEkgd2F2ZWQsIGhlIHdhdmVkIGJhY2suIEFzIGhlIHNhdyB1cyBoZWFkaW5nIHRvd2FyZHMgdGhlIGZvcmVzdCBwYXRoLCBoZSBkcm9wcGVkIGFsbCBoaXMgZmlzaGluZyBnZWFyIGFuZCByYW4gdXAgdGhlIGhpbGwsIHllbGxpbmcgZm9yIHVzIHRvIHN0b3AuCklmIGEgbXVzY2xlIGlzIGV4dHJhIHRpZ2h0IHRob3VnaCB0aGUgdG94aW4gaXMgc29ydCBvZiBzdHVjay4gb3cgb3cgYnVybmluZyEhIFNPT08gZHVyaW5nIGEgbWFzc2FnZSB0b3hpbnMgYXJlIGJlaW5nICJwdXNoZWQiIG91dCBhbmQgcmVsZWFzZWQuIFRoYXQgaXMgd2h5IGl0IGlzIEdSRUFUIEFORCBJTVBPUlRBTlQgdG8gZHJpbmsgbG90cyBvZiB3YXRlciBhZnRlciBhIG1hc3NhZ2UgYW5kIEVWRVJZREFZIHRvIGhlbHAgZWxpbWluYXRlIHdhc3RlIHByb2R1Y3QhV2hlcmUgYXJlIHlvdSBnb2luZyB0byBzY2hvb2w/V2hlbiBJIHdhcyBpbiBzY2hvb2wgYWxsIEkgdGhvdWdodCB3YXMgV09XIHRoaXMgaXMgZ29pbmcgdG8gYmUgc28gZWFzeSBJIGdvaW5nIHRvIGxlYXJuIGhvdyB0byBtYXNzYWdlIHBlb3BsZSBhbmQgY2hhcmdlIDkwIGRvbGxhcnMgYW4gaG91ciBhbmQgYmUgcmljaCBhbmQgZG8gbGlrZSAyIG1hc3NhZ2VzIDUgZGF5cyBhIHdlZWsgYSBkYXkhSXQgaXMgYSBsb3Qgb2YgaW5mb3JtYXRpb24sIGFuYXRvbXkscGF0aG9sb2d5LCBraW5lc2lvbG9neSwgZXRoaWNzLCB0ZWNobmlxdWUsIGNsaW5pY2FsLiAKNCkgbm90IGdvbm5hIGJyYWcsIGJ1dCBpbiA1IHllYXJzIHdlIGdvdCBkZWNlbnQgcGF5aW5nIGpvYnMsIGJvdWdodCBhIDUgYmVkIGhvdXNlIHdpdGggYSBwb29sLCBoYWQgMiBraWRzLCAyIGNhcnMsIGFuZCB3ZSBoYXZlIGEgdmVyeSBtaWRkbGUgY2xhc3MgYmFja2dyb3VuZCBhbmQgam9icy4gClRoZSBjb21wb25lbnQgbWFpbnRlbmFuY2UgbWFudWFsIGlzIHB1Ymxpc2hlZCBieSB0aGUgbWFudWZhY3R1cmVyIG9mIGFuIGluZGl2aWR1YWwgY29tcG9uZW50IHVzZWQgb24gYSBhaXJjcmFmdCBub3QgbWFudWZhY3R1cmVkIGJ5IHRoZSBhaXJjcmFmdCBtYWtlci4gS2l0cywgYWNjZXNzb3JpZXMsIG1vZHVsZXMgZXRjIG9mdGVuIGhhdmUgdGhlaXIgb3duIENNTS4KQW5vdGhlciByZWFzb24gd2h5IHlvdSB3aWxsIGxvdmUgdGhlIDEwMCBOZXhnZW4gTGFzIFZlZ2FzIFBva2VyIENoaXAgU2V0IGltbWVkaWF0ZWx5IGlzIGR1ZSB0byB0aGUgZmFjdCB0aGF0IGl0IGNvbWVzIGluIGEgYmVhdXRpZnVsIGRhcmsgd29vZCBjYXNlLiAKRmxpcHBpbmcgb24gdGhlIFRWIG9yIHJhZGlvIGNhbiBwcm92aWRlIGEgbXVjaCBuZWVkZWQgZGlzdHJhY3Rpb24uIApUaGUgT2hpbyBDYXNpbm8gQ29udHJvbCBDb21taXNzaW9uIChPQ0NDKSBzYWlkIGl0IHdhcm5lZCBIb3JzZXNob2UncyBtYW5hZ2VtZW50IGluIDIwMTMgdGhhdCB0aGUgY2FtZXJhcyB1c2VkIHRvIG1vbml0b3IgdGhlIFdTT1AgdG91cm5hbWVudCB3ZXJlIG5vdCBpbiBjb21wbGlhbmNlIHdpdGggc3RhdGUgbGF3LiBUaGUgdG91cm5hbWVudCB3YXMgaGVsZCBpbiBhIGxhcmdlIGJhbnF1ZXQgaGFsbCBpbnNpZGUgdGhlIGNhc2lubywgd2hpY2ggcmVxdWlyZWQgdGVtcG9yYXJ5IGNhbWVyYSBzZXQgdXBzIGFyb3VuZCB0ZW1wb3JhcnkgcG9rZXIgdGFibGVzIHNpbWlsYXIgdG8gdGhlIHN5c3RlbXMgdXNlZCB0byBtb25pdG9yIHRoZSBjYXNpbm8ncyBwZXJtYW5lbnQgcG9rZXIgdGFibGVzLi4gClBva2VyIG5vIHRlbGVtb3ZlbCBkb3dubG9hZApXaGVuIHlvdSBzdG9wIHlvdXIgYm9keSB0aGlua3MsIGFsbCByaWdodCB3b3Jrb3V0IGlzIGRvbmUgZm9yIHRoZSBkYXksIHRpbWUgdG8gcmVjb3Zlci4gSXQncyB3aHkgeW91IGRvbid0IHNlZSBwZW9wbGUgcnVuIGEgbWlsZSwgdGFrZSBhIGJyZWFrLCBydW4gYSBtaWxlLCB0YWtlIGEgYnJlYWsuIEFuZCBydW4gNSBtaWxlcy4gCklmIHlvdSB3YW50IHRoZSBzY2llbmNlIGNvbmZpcm1pbmcgb3IgZGVueWluZyBpdCwgeW91IGJlIHRoZSBmaXJzdCB0byBmdW5kIGl0Li4gCkZvciB0aG9zZSBvZiB1cyBvbGQgZW5vdWdoIHRvIHJlbWVtYmVyIHRoZSBjb3VudHJ5IGRldmFzdGF0aW5nIGZhbWluZSBpbiAxOTg0LCB0aGlzIHNtYWxsIHNuYXBzaG90IG9mIEV0aGlvcGlhIGlzIGEgc3RhcmsgY29udHJhc3QuIEdyb3dpbmcgdXAsIGFuIGVudGlyZSBnZW5lcmF0aW9uIHNhdyBFdGhpb3BpYSBhcyBhIHBsYWNlIGZpbGxlZCB3aXRoIHN0YXJ2aW5nIGNoaWxkcmVuLiBFdmVuIHRob3VnaCAyMDE5IHdpbGwgbWFyayAzNSB5ZWFycyBzaW5jZSB0aGUgZHJvdWdodCwgdGhlIGltYWdlIG9mIGRpc3RlbmRlZCBiZWxsaWVzIGFuZCBkcnkgZ3Jhc3MgaXMgc3RpbGwgc3Ryb25nLgpUaG9tYXMgTXllcnMgVGVuc2Vncml0eSBBcHBsaWVkIHRvIEh1bWFuIEJpb21lY2hhbmljcyAyMCBtaW4gdmlkZW8KSGVpbiwgdm91cyB2b3lleiBjIHBhcyBjaG91ZXR0ZSBxdWFuZCBtbWUuIApJIGtub3cgaW4gbW9zdCB3b3JrcGxhY2VzIHRoaXMgaXMgY29tbW9uLCBidXQgbXkgY29tcGFueSBpcyBqdXN0IHVuZGVyIDE1MCBwZW9wbGUgd2l0aCB0aGUgbWFqb3JpdHkgb2YgdGhlbSB3b3JraW5nIGluIHRoZSBzYW1lIG9mZmljZS4gV2UgYXJlIHRoZSBmaXJzdCBjYXNlIG9mIHBlb3BsZSB3aXRoaW4gdGhlIGNvbXBhbnkgZGF0aW5nLCBhbmQgdGhlIEhSIGRpcmVjdG9yIGlzIHByZXR0eSBuZXcsIHNvIHdlIGFyZSB1bmRlciBpbnRlbnNlIHNjcnV0aW55LCB3aGljaCBpcyB1bmRlcnN0YW5kYWJsZSBidXQgc3Vja3MuClVubGVzcyB5b3Ugc3BlY2lmaWNhbGx5IGFzayBmb3IgYSBjZXJ0YWluIGl0ZW0gdGhhdCB5b3UgY2FuIE5lZWQgb24sIGJ1dCBJIGNhbiwgaXQgZ29pbmcgdG8gYmVjb21lIEdDIHNlYWxzIGZvciBtZS4gSSBoYXBweSB0byBwYXNzIG9uIGEgcGllY2Ugb2YgZ2VhciB0aGF0IHlvdSBiZWVuIHRyeWluZyB0byBnZXQsIGJ1dCBJIGNhbWUgaW4gYWNjZXB0aW5nIHRoZSByZXNwb25zaWJpbGl0eSBvZiB0aGUgdGFuayByb2xlIG9yIHRoZSBoZWFsZXIgcm9sZS4gWW91IGRvbiBnZXQgdG8gZGVzZXJ2ZSB0aGF0IGFzIGVxdWlwbWVudCBlcXVhbGx5IGFzIEkgZG8uIApVc3VhbGx5IGl0IGlzIHRhY2tlZCByaWdodCBvbiB0byB0aGUgbW9udGhseS93ZWVrbHkgcGF5bWVudHMuIApCdXQgbWlsZGVyIGZvcm1zIG9mIGdsdXRlbiBzZW5zaXRpdml0eSBhcmUgZXZlbiBtb3JlIGNvbW1vbiBhbmQgbWF5IGFmZmVjdCB1cCB0byBvbmUgdGhpcmQgb2YgdGhlIEFtZXJpY2FuIHBvcHVsYXRpb24uLiAKV2hlbiBJIHN0YXJ0ZWQgYXMgYSBqdW5pb3IgZG9jdG9yLCB0aGUgdHdvIHNpZGVzIG9mIG15IGhvdXNlIHdlcmUgdmVyeSBkaWZmZXJlbnQuIApJIGFsc28gZGVwbG95ZWQgdG8gYSBzbWFsbCBqb2ludCBBcm15L0FGIGJhc2UgaW4gSXJhcSBhbmQgaG9uZXN0bHkgdGhlIGZvb2Qgd2FzIGJldHRlciB0aGFuIHRoZSBzdHVmZiB3ZSBnb3QgYmFjayBob21lLiBIb3dldmVyLCB3ZSB3ZXJlIHNob3J0IHN0YWZmZWQgc28gd2UgZGlkbiBnZXQgdG8gZWF0IGF0IHRoZSBkZWZhYyB2ZXJ5IG9mdGVuIGFuZCBoYWQgaG90IG1lYWxzIGRlbGl2ZXJlZC4gVGhlIGhvdCBtZWFscyB3ZXJlIGluc2FuZWx5IHJlcGV0aXRpdmUgYW5kIGdvdCBvbGQgZmFzdC4gU3RpbGwgbm90IGJhZCBmb29kLCBidXQgbWFzaGVkIHBvdGF0b2VzIGdldCBvbGQgYWZ0ZXIgYSBzb2xpZCBtb250aCBlYXRpbmcgaXQgdHdvIG1lYWxzIGEgZGF5IGFuZCBpdCBwYWluZWQgbWUga25vd2luZyB0aGUgYXJteSBnb3QgZnJlc2ggb21lbGV0cyBsaWtlIGEgbWlsZSBhd2F5IGFuZCB3ZSBnb3QgcGxhaW4gc2NyYW1ibGVkIGVnZ3MgZXZlcnlkYXkuCkl0IHdpbGwgYmUgc2V2ZW4sIHRoZSBtb3N0IGxpa2VseSBzY29yZSB3aGVuIHRocm93aW5nIHR3byBub3JtYWwgZGljZS4gVGhpcyBpcyBiZWNhdXNlIHRoZXJlIG1vcmUgY29tYmluYXRpb25zIHBvc3NpYmxlIGZvciBzZXZlbiB0aGFuIGFueSBvdGhlciBzY29yZS4gCkZ1biBmYWN0OiBXaGVuIHRoZXkgYmVnaW4gdGhlaXIgY291cnRzaGlwIHRoZSBtYWxlIHdpbGwgZmVlZCB0aGUgZmVtYWxlIGZvciB1cCB0byBhIG1vbnRoLiAKRWZmZXJlbnQgbWVzc2FnZXMgY2FuIHRyaWdnZXIgY2hhbmdlcyBpbiBkaWZmZXJlbnQgcGFydHMgb2YgdGhlIGJvZHkgc2ltdWx0YW5lb3VzbHkuIApJdCdzIHRoZWlyIGNoYW5jZSB0byBnZXQgYW4gdXBkYXRlIG9uIHRoZSBjbHViJ3MgZGV2ZWxvcG1lbnRzIGFzIHdlbGwgYXMgaXRzIGZpbmFuY2lhbCBwZXJmb3JtYW5jZS4KV2hlbiBub3Qgb24gdGhlIGdyZWVucywgeW91IGNhbiByZWxheCBvbiB5b3VyIHJvb20gYmFsY29ueSBvciB0ZXJyYWNlIG9yIGRpc2NvdmVyIHRoZSBvbiBzaXRlIGZpdG5lc3MgY2VudGVyLCBzcGEsIHBvb2wsIGhvdCB0dWIsIGFuZCB0d28gcmVzb3J0IHJlc3RhdXJhbnRzLiBUaGUgaG90ZWwncyBoaXN0b3JpYyBkaXN0cmljdCBsb2NhdGlvbiBhbHNvIHB1dHMgaXQgYXQgdGhlIGhlYXJ0IG9mIE5hcGxlJ3MgdmlicmFudCBkb3dudG93biBzY2VuZSwgYW4gYXJlYSBvZiBzd2Fua3kgc2hvcHMsIGdvdXJtZXQgcmVzdGF1cmFudHMsIGFuZCBhcnQgZ2FsbGVyaWVzIHNpdHVhdGVkIGp1c3QgYSBmZXcgYmxvY2tzIGZyb20gd2hpdGUgc2FuZCBHdWxmIG9mIE1leGljbyBiZWFjaGVzLi4gClRoZXJlIHJlYWxseSB3YXNuIGFueXRoaW5nIGxpa2UgYSB0YWJsZXQgY29tcHV0ZXIgaW4gY29tbWVyY2lhbCB1c2UgZHVyaW5nIHRoZSB0aW1lIEVudGVycHJpc2Ugd2FzIG9uIHRoZSBhaXIuIEV2ZW4gbGFwdG9wcyBkdXJpbmcgdGhhdCBlcmEgd2VyZSBzdGlsbCBwcmV0dHkgYnVsa3kgY29tcGFyZWQgdG8gdGhlIG9uZXMgd2UgaGF2ZSBub3cuCkl0IHdvdWxkIHNlZW0gdGhhdCB5b3UgaGF2ZSBjaG9zZW4gdG8gc3RheSB3aXRoIHlvdXIgYWJ1c2l2ZSBtb3RoZXIgKHdlIGFzc3VtZSBhIGNvbnRleHQgb2YgYWJ1c2UgaGVyZS4pIFdlIGNhbiBxdWVzdGlvbiB5b3VyIG1vdGl2ZXMgZm9yIGRvaW5nIHNvIChmZWFyIG9mIHNlcGFyYXRpb24sIGd1aWx0KSwgYnV0IGluIHRoZSBlbmQgeW91ciByZXNwb25zZSB0byB0aGUgc2l0dWF0aW9uIGlzIHlvdXJzLgpQb3ogQSBCYWxscyBQb3ogQSBCYWxscyBhcmUgYXZhaWxhYmxlIGluIHR3byBzaXplcywgZWlnaHQgaW5jaCAoYmVnaW5uZXIpIGFuZCBmb3VyIGluY2ggKGFkdmFuY2VkKS4gVGhlc2Ugc21hbGwgaW5mbGF0YWJsZSBzdGFiaWxpdHkgYmFsbHMgd2VpZ2ggb25lIHBvdW5kIGVhY2ggYW5kIGFyZSBpZGVhbCBpbiBmYWNpbGl0YXRpbmcgYW5kIGVuaGFuY2luZyBQaWxhdGVzIGFuZCB5b2dhIHBvc2VzLiAKSXQgaW5ldml0YWJsZS4gSSBoYXZlIGEgWGJvbmUsIFBTMywgb3RoZXJzIGp1c3Qgc2l0dGluZyB0aGVyZSByb3R0aW5nIGJlY2F1c2UgYW55IGZyZWUgdGltZSBJIG1heSBoYXZlLCBJIHRyeSB0byBwbGF5LCBhbmQgdGhleSB3YW50IHRvIGRvIGl0LiBUaGUgc3dpdGNoIGlzIGJhc2ljYWxseSBtaW5lLCBJIGNhbiBjYXJyeSBpdCBhcm91bmQgYW5kIHBsYXkgRGlhYmxvIDMgd2hpbGUgdGhleSBhcmUgd2F0Y2hpbmcgdGhlaXIgaXBhZHMgb3Igd2hhdGV2ZXIuIApXaWxsIGJlIGdyZWF0bHkgbWlzc2VkIGJ5IGhlciBsb3ZpbmcgZGF1Z2h0ZXIsIExvcmkgSGVhdG9uIGFuZCBoZXIgYmVsb3ZlZCBncmFuZHNvbiwgTWlrZSBIZWF0b24uIApJdCBhbGxvd3MgeW91IHRvIGdvIGZhc3RlciwgdGFrZSBjb3N0IG91dCBvZiB0aGUgc3lzdGVtIGFuZCBnZXQgb3VyIGJyYW5kcyBvcGVyYXRpbmcgbGlrZSBhIHN0YXJ0dXAsIGFuZCB0aGF0J3MgYSBsb3Qgb2YgZnVuLiIuIApTaGUgam9pbmVkIEFkIEFnZSBhZnRlciBhIGRvemVuIHllYXJzIG9mIHdyaXRpbmcgZm9yIENyYWluJ3MgTmV3IFlvcmsgQnVzaW5lc3MsIHdoZXJlIHNoZSBhbHNvIGZvY3VzZWQgb24gdGhlIHJldGFpbCBpbmR1c3RyeS4gCjUgQmVuZWZpdHMgb2YgQm9keSBXcmFwcwpJIGNhbiBmaW5kIGFueSBldmlkZW5jZSBvZiB2aW9sZW5jZSBvciB1bnJ1bHkgYmVoYXZpb3VyIGZyb20gdGhlIHByb3Rlc3RvcnMgaGVyZSwgdGhvdWdoIEkgaW1hZ2luZSB0aGVyZSBtdXN0IGhhdmUgYXQgbGVhc3QgYmVlbiBzb21lIGNhc2VzLCB5ZXQgdGhlIHByb3Rlc3Qgd2FzIHZpb2xlbnRseSBzaHV0IGRvd24gd2l0aCBnYXMsIGJhdG9uIGJlYXRpbmcsIG1pbGl0YXJ5IHBvbGljZSBldGMuIEFuZCB0aGUgUFJDIHJoZXRvcmljIHN1cnJvdW5kaW5nIGl0IGtlcHQgc3RhdGluZyB0aGF0IGl0IHdhcyBnb2luZyB0byBiZWNvbWUgdmlvbGVudCwgdGhhdCB0aGUgcHJvdGVzdHMgd291bGQgbGVhZCB0byB2aW9sZW5jZSBhbmQgdGhyZWF0ZW4gc2FmZXR5IGV0Yy4gRXZlbiB0aG91Z2ggdGhlIHdob2xlIGJhc2lzIG9mIHRoZSBtb3ZlbWVudCB3YXMgdXR0ZXIgbm9uIHZpb2xlbmNlLCAicGVhY2UgYW5kIGxvdmUiLiAKSSBhbHNvIGVuam95ZWQgdGhlIGZhY3QgdGhhdCB0aGlzIHRpbWUgYXJvdW5kLCBNaWthIGlzIGEgc3RyYWlnaHQgdXAgY2hpbGQgc29sZGllciBhcyBvcHBvc2VkIHRvIFNldHN1bmEgZm9ybWVyIGNoaWxkIHNvbGRpZXIgc3RhdHVzIGFuZCBIZWVybyBiZWluZyBtb3JlIG9mIGEgc3VwZXJzcHkgdGhhbiBhIHNvbGRpZXIuIApBIHF1ZXN0aW9uIGFib3V0IGEgcGFyYWRveApIdW1hbiBtdXNjbGUgd2FzIG1vc3RseSByZXBsYWNlZCBidXQgdGhleSBzdGlsbCBuZWVkZWQgbW9yZSBodW1hbiBicmFpbnMgdGhhbiBldmVyIHRvIG1hbmFnZSB0aGlzIGV2ZXIgaW5jcmVhc2luZ2x5IHJhcGlkIGFuZCBjb21wbGV4IHdvcmxkLiBIb3dldmVyIG5vdyB3ZSBhcmUga25vY2tpbmcgb24gdGhlIGRvb3IgdG8gYW4gZXJhIHdoZW4gd2UgYmVnaW4gdG8gdGFrZSBqb2JzIGF3YXkgZnJvbSBodW1hbiBpbnRlbGxlY3QgYXMgd2VsbC4gCldlcmUgdmVyeSBmZXcsIGlmIGFueSBESVAgcHJvdmlkZXJzIGluIENhbmFkYSBzYWlkIFNlbGZlLiBJcyBvbmUgb2YgdGhlIGFyZWFzIHRoYXQgd2UgdGhpbmsgaXMgYSByaXBlIG9wcG9ydHVuaXR5LiBDb21wYW5pZXMgaW4gdGhlIG1pbmluZyBhbmQgb2lsIGdhcyBzZWN0b3JzIGhhdmUgYmVlbiBpbiBhIGRvd250dXJuIGZvciBzZXZlcmFsIHllYXJzLCB0aGUgcmVzdHJ1Y3R1cmluZ3MgY291bGQgYmUgZXhwYW5kZWQgaW50byBzb21lIG9mIHRoZSBzdXBwbGllcnMgb2YgdGhvc2UgaW5kdXN0cmllcyBhcyB3ZWxsIGFzIHNlcnZpY2VzIGZpcm1zLCBzYWlkIFNlbGZlLiAKIkluc3RlYWQgd2Ugb3B0IGZvciBsb3RzIG9mIHNtYWxsZXIgc3BhY2VzLCBvbiB0aGUgc2FtZSBmbG9vcnMsIHdpdGggZGlzdGluY3QgdGVhbXMgYW5kIGEgdG9uIG9mIGNvbmZlcmVuY2Ugcm9vbXMsIiBzaGUgc2F5cy4gClRoZSBhdmVyYWdlIGNvc3Qgb2YgYnJlYXN0IGF1Z21lbnRhdGlvbiBpcyBiZXR3ZWVuICQ2MDAwIGFuZCAkODAwMCBhbmQgbmVhcmx5IGFsbCBib29iIGpvYnMgd2lsbCBoYXZlIHRvIGJlIHJlZG9uZSB3aXRoaW4gNyAxMCB5ZWFycyBiZWNhdXNlIHRoZXkgd2lsbCB1c3VhbGx5IGVpdGhlciBib3R0b20gb3V0LCBoYXJkZW4sIGxlYWssIG9yIGluIHNvbWUgd2F5ICJmYWlsLiIgU28gbW9zdCB3b21lbiB3aWxsIGdlbmVyYWxseSB1bmRlcmdvIHNldmVyYWwgb3BlcmF0aW9ucyBhbmQgY2FzaCBvdXRsYXlzIGluIHRoZSBjb3Vyc2Ugb2YgYSBsaWZldGltZSBpZiB0aGV5IHdhbnQgdG8gaGF2ZSBuaWNlIHRpdHMuIEluIHRoaXMgd2F5LCBib29iIGpvYnMgY2FuIG9mdGVuIHNlZW0gbGlrZSBhIGZyaXZvbG91cyBpbnZlc3RtZW50IG9mIG9uZSB0aW1lIGFuZCBtb25leS4gQnV0IGl0IHR1cm5zIG91dCB0aGV5IGRvIGhhdmUgYSBwcmFjdGljYWwgc2lkZS4gSWRlbnRpZnlpbmcgdGhlIGNvcnBzZS4KSWwgeSBhIGVuIGZhaXQgdW4gZG91YmxlIGRpc3Bvc2l0aWYgYXZlYyBsYSBwcnZlbnRpb24gZCdhY3RlcyB0ZXJyb3Jpc3RlcyBzdXIgbGVzIGxpZXV4IGRlIGN1bHRlIGQndW5lIHBhcnQsIGV0IHVuZSB2aWdpbGFuY2UgbmNlc3NhaXJlIGR1IGZhaXQgZGVzIHRycyBub21icmV1c2VzIGZhbWlsbGVzIHF1aSB2aWVubmVudCBzZSByYXZpdGFpbGxlciBlbiBndGVhdXggZXQgYXV0cmVzIGRlbnJlcyBsaWVzIGF1IHJhbWFkYW4sIGQnYXV0cmUgcGFydC4gRXQgaWwgbmUgZmF1dCBwYXMgb3VibGllciBxdWUgY2V0dGUgZm91bGUgYXR0aXJlIGdhbGVtZW50IHVuIG5vbWJyZSBjcm9pc3NhbnQgZGUgZGxpbnF1YW50cyBhdmVjIHBsdXMgZGUgdHJhZmljcyBldCBwbHVzIGRlIHZvbHMgIGxhIGNsLiAKTmVhcmVzdCBwdWJsaWMgdHJhbnNwb3J0SHVheSBLaHdhbmcgTVJURWFybHkgRGVjZW1iZXIgMjAxNSBJIHZpc2l0ZWQgQ29sb256ZTIsIGxhdGUgYWZ0ZXJub29uLiBJIGxvb2tlZCBmb3J3YXJkIHRvIGhhdmUgYSBuaWNlIDE4IHlvIHR5cGUgc21hbGwgbGFkeSwgSSB3YXMgc2hvd24gYXJvdW5kIGJ5IHRoZSBNYW1hc2FuLCBidXQgZGlkbiBmaW5kIGEgZ2lybCB0byBtZWV0IG15IGV4cGVjdGF0aW9ucywgc28gSSBsZWZ0IHRoZSBwbGFjZSAoRm91bmQgbGF0ZXIgd2hhdCBJIGxvb2tlZCBmb3IgaW4gQWxhaW5hICEpLiBBIGZldyBkYXlzIGxhdGVyIEkgd2VudCB0aGVyZSBhZ2FpbiwgaW4gdGhlIGVhcmx5IGV2ZW5pbmcsIHRoaW5raW5nIHRoYXQgdGhlcmUgY291bGQgYmUgb3RoZXIgZ2lybHMuIE11Y2ggdG8gbXkgc3VycHJpc2UgdGhlIGd1YXJkaWFuIGF0IHRoZSBlbnRyYW5jZSBzdG9wcGVkIG1lIGZyb20gZ2V0dGluZyBpbi4gSGUgaGFkIHJlY29nbml6ZWQgbWUgYW5kIGp1c3Qgc2FpZCB0aGF0IHRoZXkgYXJlIG5vdCBpbnRlcmVzdGVkIGluIGN1cmlvdXMgdmlzaXRvcnMgd2Fsa2luZyBhcm91bmQgd2l0aG91dCB0YWtpbmcgYSBsYWR5LiBUaGlzIGhhcyBuZXZlciBoYXBwZW5lZCB0byBtZSBpbiBhbnkgb3RoZXIgcGxhY2UhIEkgd2FzIHByb3Blcmx5IGRyZXNzZWQgYW5kIGJlaGF2ZWQgd2l0aCBjb3VydGVzeS4gSXQgbWFkZSBubyBzZW5zZSB0byBkaXNjdXNzIHNvIEkgbGVmdC4gQW55b25lIGhhZCBzaW1pbGFyIGV4cGVyaWVuY2VzPwpJdHMgYmxvb2R5IGJhdHRsZWdyb3VuZHMsIHRoZSBTb21tZSwgVmVyZHVuLCB0aGUgTWFybmUsIGFuZCBvdGhlcnMsIHN0aWxsIGVwaXRvbWl6ZSBhcHBhcmVudGx5IHBvaW50bGVzcyBodW1hbiBzYWNyaWZpY2UuIApJbiB0aGUgdmlkZW8sIHRoZXNlIHBlb3BsZSBza2lubmVkIGEgZG9nIGFsaXZlLCB0aGVuIGp1c3QgdGhyZXcgaXQgb250byBhIHBpbGUgb2Ygb3RoZXIgZGVhZCg/KSBkb2dzL2FuaW1hbHMuIApUaGUgZmlsbWluZyBpcyByZW1lbWJlcmVkIGluIGEgbmV3IHBlcm1hbmVudCBleGhpYml0aW9uIGF0IENhcm5mb3J0aCBSYWlsd2F5IFN0YXRpb24gbG9va2luZyBhdCB0aGUgY2FyZWVyIG9mIHRoZSBmaWxtJ3MgZGlyZWN0b3IgU2lyIERhdmlkIExlYW4uClRoZSAyMSBkYXkgdGltZWZyYW1lIGZvciBlIGZpbGVkIHJldHVybiBpcyBhIG5vcm1hbCBwcm9jZXNzaW5nIHRpbWVmcmFtZSwgbm90IGEgZ3VhcmFudGVlZCByZWZ1bmQgZGF0ZS4uIApUdWJlcmN1bG9zaXMgY2FzZSBzZXRzIG9mZiB0ZXN0aW5nIGF0IER1cmFuZ28gSGlnaCBBc3NvY2lhdGVkIFByZXNzIEhlYWx0aCBvZmZpY2lhbHMgd2lsbCB0ZXN0IHVwIHRvIDIwMCBzdHVkZW50cyBhbmQgdGVhY2hlcnMgZm9yIHR1YmVyY3Vsb3NpcyBhZnRlciBvbmUgY2FzZSB3YXMgY29uZmlybWVkIGF0IGEgTGFzIFZlZ2FzIGhpZ2ggc2Nob29sLiBUaGUgU291dGhlcm4gTmV2YWRhIEhlYWx0aCBEaXN0cmljdCBzYXlzIGl0IGlkZW50aWZpZWQgcGVvcGxlIGF0IER1cmFuZ28gSGlnaCBTY2hvb2wgd2hvIC4KQWxwaGFYNCAgMTQgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KSSBjb21wbGV0ZWx5IGFncmVlIHdpdGggd2hhdCB5b3UgYXJlIHNheWluZy4gQWZ0ZXIgeW91IGxlYXJuIHNvIG11Y2gsIGl0IGNvbWVzIHRoZSB0aW1lIHdoZXJlIHlvdSBqdXN0IG5lZWQgdG8gd29yayBvbiB5b3VyIGxlYWtzIGluIG9yZGVyIHRvIHByb2dyZXNzLiBQYXlpbmcgc29tZW9uZSBpbiBvcmRlciB0byBmaXggeW91ciBsZWFrcyBpc24gZ29pbmcgdG8gd29yay4gWW91IHJlYWxseSBoYXZlIHRvIHJldHJhaW4geW91ciB0aGlua2luZy4gSSBwbGF5aW5nIHJpZ2h0IG5vdyBvbmxpbmUgYW5kIGZvY3VzaW5nIG9uIGEgZmV3IHRyb3VibGUgc3BvdHMgaW4gbXkgZ2FtZS4gVGhlIGZ1bm55IHRoaW5nIGlzIHRoYXQgbXkgdHJvdWJsZSBzcG90cywgSm9uYXRoYW4gbGl0dGxlIGNhbiBnZXQgYXdheSBmcm9tIGJlY2F1c2UgSSBzZWUgaGlzIHZpZGVvcyBhbmQgaGUgbWFrZXMgdGhlIHNhbWUgbWlzdGFrZSBldmVyeSB0aW1lLgpGb3IgY29udGV4dCBhIE1jRG9uYWxkcyBoYW1idXJnZXIgaXMgMjUwIGNhbG9yaWVzLiAKQWxsZWluIDIwOCBQcm9qZWt0ZSAoMjcuNjA3IFppbW1lcikgemhsdCBkZXIgQmF1aW5mb3JtYXRpb25zZGllbnN0bGVpc3RlciBMb2RnaW5nIEVjb25vbWV0cmljcyAoTEUpIGluIEdyb2JyaXRhbm5pZW4uIApUaGlzIGlzIG5vdCBwZXJmb3JtaW5nIHlvdXIgcGFpbiBmb3Igb3RoZXIgcGVvcGxlLiBUaGlzIGlzIHRhbGtpbmcgYWJvdXQgd2hlcmUgdGhpcyBtb3ZlbWVudCwgYW5kIHdoZXJlIHlvdXIgd29yayBhcm91bmQgaGVhbGluZywgaGFzIGJyb3VnaHQgeW91Li4gCkRhbmNlcnNlcDM4ICAyIHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ28KSGFsZiBvZiBET3MgY2FudCBldmVuIHBhc3MgdGhlIHVzbWxlLjMpIE5vLCBlbGVjdGl2ZSBwcm9jZWR1cmVzIGxpa2UgY2lyY3VtY2lzaW9uIHNob3VsZCBub3QgYmUgY292ZXJlZC4gClNvdmlldHMgZGlzdGluZ3Vpc2hlZCBiZXR3ZWVuIHNvbG8gYW5kIGdyb3VwIGtpbGxzLCBhcyBkaWQgdGhlIEphcGFuZXNlLiAKQWxsIEkgdGhpbmsgYWJvdXQgYXJlIG15IGNoaWxkcmVuLiBJIGZlZWwgbXkgcmVhY3Rpb24gd2FzIG5hdHVyYWwuIApQb2tlciBuaWdodCBpcyBhIGxvdCBvZiBmdW4uIFlvdSBtaWdodCBpbnZpdGUgZXZlcnlvbmUgb3ZlciBmb3IgcG9rZXIgbmlnaHQgYW5kIGhhdmUgaXQgb25jZSBhIHdlZWsgb3Igb24gYSByZWd1bGFyIGJhc2lzLiBEaWQgeW91IGV2ZXIgY29uc2lkZXIgdGhhdCB5b3VyIHRhYmxlIHdhcyBub3QgdGhlIG1vc3QgY29tZm9ydGFibGUgcGxhY2UgdG8gcGxheSBwb2tlci4gTW9zdCB0YWJsZXMgYXJlIG5vdCBjb21mb3J0YWJsZSBhbmQgeW91IGFsbCBoYXZlIHRvIGdldCB1cCBhbmQgdGFrZSBhIHJlc3QsIHdhbGsgYXJvdW5kLCBnZXQgc29tZXRoaW5nIHRvIGRyaW5rIGFuZCBtb3JlLiBJZiB5b3UgZG9uJ3QgaGF2ZSB0aGUgbW9zdCBjb21mb3J0YWJsZSBwbGFjZSB0byBwbGF5IGZvciB5b3VyIHBva2VyIG5pZ2h0cyB5b3UgbWlnaHQgY29uc2lkZXIgYSBGdWxsIFNpemUgQmxhY2tqYWNrIFRhYmxlLgpEMSBnb3QgYSA2LjUgYXQgbGF1bmNoLiAKQ3VzdG9tIE9uIFNpdGUgTWFzc2FnZXMgQW4gYXN0dXRlIG1hc3NhZ2UgcHJvZmVzc2lvbmFsIGNyZWF0ZXMgaGVyIG93biBtYXNzYWdlIHZlbnVlcyBieSBwYXlpbmcgY2xvc2UgYXR0ZW50aW9uIHRvIHJlZ2lvbmFsIGJ1c2luZXNzIGFuZCBlZHVjYXRpb25hbCBldmVudHMuIFRvIGFsbGV2aWF0ZSB0aGUgdGVkaXVtIG9mIGEgYnVzaW5lc3MgY29uZmVyZW5jZSwgZm9yIGV4YW1wbGUsIHNoZSBhc2tzIGNvbmZlcmVuY2Ugb3JnYW5pemVycyBmb3IgcGVybWlzc2lvbiB0byBvZmZlciBzZWF0ZWQgbWFzc2FnZXMgZHVyaW5nIGxvbmdlciBicmVha3MgYW5kIGF0IG1lYWx0aW1lcy4gRm9yIGFuIGludGVuc2l2ZSBjbGFzcyB0aGF0IHJlcXVpcmVzIG1hbnkgaG91cnMgb2Ygc3RhbmRpbmcgb3Igb3RoZXIgcGh5c2ljYWwgYWN0aXZpdHksIHNoZSBvZmZlcnMgc2VhdGVkIGNoYWlyIG1hc3NhZ2VzIGR1cmluZyBhZnRlcm5vb24gb3IgZXZlbmluZyBicmVha3MuClRoZSBmcmFnbWVudHMgd2VyZSBub3QgaW4gYW55IHJlYWwgc2Vuc2UgcG90ZW50aWFsbHkgYWN0dWFsbHkgZXhjdWxwYXRvcnkgdmlld2VkIGZyb20gbGF3IGVuZm9yY2VtZW50IHBlcnNwZWN0aXZlOyB0aHVzLCBubyBiYWQgZmFpdGguIFBsdXMgbm8gV2lzY29uc2luIGNvdXJ0IGhhcyBldmVyIGZvdW5kIGJhZCBmYWl0aCBhbmQgY29tbWVudGF0b3JzIGRlc2NyaWJlIHRoZSBzdGFuZGFyZCBhcyBuZWFybHkgaW1wb3NzaWJsZS4gCkZpc2hpbmcgUmVwb3J0IGZvciBGcmlkYXksIEZlYi4gMTU6IFN0ZWVsaGVhZCB0cm91dCBmaXNoaW5nIHNob3VsZCBoZWF0IHVwIG9uIE5vcnRoZWFzdCBPaGlvIHJpdmVycyBGaXNoaW5nIFJlcG9ydCBmb3IgRnJpZGF5LCBGZWIuIDE1OiBTdGVlbGhlYWQgdHJvdXQgZmlzaGluZyBzaG91bGQgaGVhdCB1cCBvbiBOb3J0aGVhc3QgT2hpbyByaXZlcnMgQSB3YXJtaW5nIHRyZW5kIGh1cnRzIGljZSBmaXNoaW5nIGJ1dCBvcGVucyB0aGUgc3RyZWFtcy4KU2NvdHQ6IEhvdydzIGl0IGdvaW5nIGV2ZXJ5Ym9keT8gSSdtIFNjb3R0IFRyZW5jaC4gSSdtIGhlcmUgd2l0aCBteSBjbyBob3N0IE1zLiBNaW5keSBKZW5zZW4uIEhvdyBhcmUgeW91IGRvaW5nIHRvZGF5LCBNaW5keT8KQW5kIHRvZ2V0aGVyIHdpdGggaXRzIGFmZmlsaWF0ZXMgY29sbGVjdGl2ZWx5IHJlZmVycmVkIHRvIGFzICJJbnRlcmFjdGl2ZSBEYXRhIikgaXMgb3duZWQgYnkgb3IgbGljZW5zZWQgdG8gSW50ZXJhY3RpdmUgRGF0YSBhbmQgYW55IHVzZXIgaXMgcGVybWl0dGVkIHRvIHVzZSBzdWNoIEluZm9ybWF0aW9uIG9ubHkgZm9yIHN1Y2ggdXNlcidzIHBlcnNvbmFsIHVzZS4gCk9uZSBuaWdodCwgaGUgYW5kIGEgZnJpZW5kIGNhbWUgdG8gdmlzaXQgbWUgYXQgdW5pdmVyc2l0eSwgd2hlcmUgd2UgZW5kZWQgdXAgaGF2aW5nIHRvIHNoYXJlIG15IGJlZCBhcyBzcGFjZSB3YXMgdmVyeSBsaW1pdGVkIGluIG15IG9uZSBiZWRyb29tIGFwYXJ0bWVudC4gVGhlIG5leHQgZGF5IGFmdGVyIHRoZXkgaGFkIGxlZnQsIEkgZm91bmQgYSBub3RlIHVuZGVyIG15IHBpbGxvdyBhc2tpbmcgaWYgSSB3b3VsZCBqdXN0IGdpdmUgaGltIG9uZSBjaGFuY2UuIApXZWQgd2F0Y2ggdGhlIDEyIGluY2ggNCBjaGFubmVsIHR2IHRpbGwgNSBBTSB0aWxsIGRhZCBjYW1lIGhvbWUgZnJvbSBoaXMgYmxhY2tqYWNrIG9yIHBva2VyLiBNYXliZSBpdCdzIGp1c3Qgbm9zdGFsZ2lhIGJ1dCB0aG9zZSBjaGVhcCBtb3RlbHMgYXJlIGZ1Y2tpbmcgZ3JlYXQuLiAKT3Igbm90LiAKTWVkaWNhbCByZWNvcmRzIGRhdGVkIE1hcmNoIDIwMTAgYW5kIHN1Ym1pdHRlZCBpbiBhIGxlbmd0aHkgZGlzcHV0ZSBvdmVyIGNvbW1lcmNpYWwgc3BhY2UgdGhlIG1vdGhlciByZW50ZWQgaW4gVmFuY291dmVyIHNheSBzaGUgc3VmZmVyZWQgZnJvbSBkZXByZXNzaW9uLCBhbnhpZXR5LCBzZXZlcmUgcG9zdCB0cmF1bWF0aWMgc3RyZXNzIGRpc29yZGVyIGFuZCBwYW5pYyBhdHRhY2tzLiBBIHNlcGFyYXRlIG5vdGUsIGFsc28gZGF0ZWQgTWFyY2ggMjAxMCwgc2F5cyBIYXJyeSBCdXJraGFydCBzdWZmZXJlZCBmcm9tIGF1dGlzdGljIHNwZWN0cnVtIGRpc29yZGVyIHNpbmNlIGhpcyBjaGlsZGhvb2QsIGFuZCBoZSBoYXMgc2V2ZXJlIGFueGlldHksIHBvc3QgdHJhdW1hdGljIHN0cmVzcyBkaXNvcmRlciwgZGVwcmVzc2lvbiBhbmQgbm90IHN0YWJsZSBtZW50YWxseSBiZWNhdXNlIG9mIGluY3JlYXNlIHN0cmVzcyBkdWUgdG8gZmVhci4gCkVsaWdpYmxlIHBlbnNpb24gaW5jb21lIGluY2x1ZGVzIGFubnVpdHkgdHlwZSBwYXltZW50cyBmcm9tIGEgUmVnaXN0ZXJlZCBQZW5zaW9uIFBsYW4gKFJQUCksIHJlZ2FyZGxlc3Mgb2YgeW91ciBhZ2UgKGFnZSA2NSBpbiBRdWViZWMpLCBhbmQgYWxzbyBpbmNsdWRlcyBSUklGIChvciBMSUYpIHdpdGhkcmF3YWxzIG9uY2UgeW91IHJlYWNoIGFnZSA2NS4gQnkgY2xhaW1pbmcgdGhlIHBlbnNpb24gaW5jb21lIGNyZWRpdCwgeW91IGNvdWxkIHNhdmUgdGF4ZXMgYXZlcmFnaW5nIGFib3V0ICQ0MDAgYW5udWFsbHksIGRlcGVuZGluZyBvbiB3aGVyZSB5b3UgbGl2ZS4uIApUYXVudHMgaW50ZW5zaWZpZWQgYW5kIGhpcyBiYWNrZXJzIGhhZCBhZGRlZCBhIHNlY29uZCB3YWdlcjogVGhleSBnb3QgNCAxIG9kZHMgb24gYSAkVVM1MCwwMDAgKCQ2MywwMDApIGJldCB0aGF0IGhlIHdvdWxkIGRyb3AgYmVsb3cgMTAgcGVyY2VudCBib2R5IGZhdCBpbiBqdXN0IGZvdXIgbW9udGhzLiBGaXNoZXIgZGlkIGV2ZXJ5dGhpbmcgcG9zc2libGUgdG8gZ2V0IHRoZXJlICAgYW5kIGxvc3QuCkJ1dCBib2F0IHJhY2luZyBpcyBvbmx5IHBhcnQgb2YgdGhlIGZ1bi4gTnVtZXJvdXMgc29jaWFsIGFuZCAiY29tcGV0aXRpdmUiIGFuZCBqdXN0IHBsYWluIGZ1biBvcHBvcnR1bml0aWVzIGFib3VuZCBmb3IgY3J1aXNlcnMgb2YgYWxsIGFnZXMgYW5kIHByZWZlcmVuY2VzOgoiSSBjYW4gcGF5IGZvciB0aGVzZSBwcm9wZXJ0aWVzIGJlY2F1c2UgSSBzYXZlZCB0aGUgbW9uZXkgSSBtYWRlIGluIHRoZSBjYXIgYnVzaW5lc3MgdGhlIGxhc3QgNTAgeWVhcnMsIiBoZSBzYXlzLgpXcml0ZSByZXNlYXJjaCB0aGF0IGNsYWltcyBtYXJrZXRzIGFyZW4ndCBwZXJmZWN0bHkgZWZmaWNpZW50LgpJbmZsYW1tYXRpb24gb2YgdGhpcyBidXJzYSAocGVzIGFuc2VyaW5lIGJ1cnNhKSBwcm9kdWNlcyBhIHBhcnRpY3VsYXJseSBleHF1aXNpdGUgYnVybmluZyBwYWluLiBJZiBpdCBpcyBvbmUgaW5qdXJ5LCBzYXJ0b3JpdXMgZml0cyB0aGUgYmlsbC4gClNvIGlmIHlvdSB3YW50IHRvIHJlYWNoIHRoZSB0b3AgaXQgZ29pbmcgdG8gYmUgcGFpbmZ1bCwgYnV0IHlvdSBjYW4gc2l0IGNvbWZvcnRhYmx5IGF0IHRpZXJzIDE5MTcgYXMgYSBGMlAgYW5kIG5vdCBtaXNzIG11Y2ggb24gdGhlIHJld2FyZHMuQXMgZm9yIEFldGhlciBSYWlkcywgcmlnaHQgbm93IGl0IGlzIGEgYml0IHRveGljLiAKTW9oYW1lZCBkaWQgaW5kZWVkIGhhdmUgYSA5IHllYXIgb2xkIGJyaWRlLCBidXQgaXQgd2FzbiBiZWNhdXNlIGhlIHdhcyBpbnRvIGJvaW5raW5nIDkgeWVhciBvbGQgZ2lybHMuIAoiTWFidXMgd2lyZCBiYWxkIHN0ZXJiZW4sIGRhbm4ga29tbXQgZWluIHNjaHJlY2tsaWNoZXMgVmVyaG5nbmlzIHZvbiBNZW5zY2hlbiB1bmQgVGllcmVuLCBhdWYgZWlubWFsIGVpbmUgc2llaHQgUmFjaGUsIGh1bmRlcnQgQmVmdWduaXNzZSwgRHVyc3QsIEh1bmdlciwgd2VubiBkZXIgS29tZXQgYmVyZ2ViZW4gd2lyZC4iIChKYWhyaHVuZGVydCAyLCBRdWF0cmFpbiA2MikgIkRlciBBbnRpIENocmlzdCB2ZXJuaWNodGV0IHNlaHIgYmFsZCBkcmVpLCAyNyBKYWhyZSwgZGllIHNlaW5lbiBLcmllZyBkYXVlcm4gd2lyZC4gRGllIFVuZ2x1YmlnZW4gc2luZCB0b3QsIEdlZmFuZ2Vuc2NoYWZ0LCBFeGlsOyBtaXQgQmx1dCwgbWVuc2NobGljaGVyIEtycGVyLCBXYXNzZXIgdW5kIHJvdCBIYWdlbCBhdWYgZGllIEVyZGUuIiAoSmFocmh1bmRlcnQgOCwgUXVhdHJhaW4gNzcpLgpBIG1hbiBjYXZlIGlzIHRoZSBvYnZpb3VzIHNvbHV0aW9uLCBhbmQgdGhlIGdhbWluZyBvcHRpb25zIGZvciB5b3VyIG93biBwcml2YXRlIHNwYWNlIGNhbiB0cnVseSBib2dnbGUgdGhlIG1pbmQuIApHZXQgcmVkZGl0IHByZW1pdW1XZWxjb21lIHRvIC9yLzkwZGF5ZmlhbmNlLCBhIGNvbW11bml0eSBkZWRpY2F0ZWQgdG8gdGhlIFRMQyBzaG93IERheSBGaWFuY2UgYW5kIGl0IHNwaW4gb2Zmcy4gSm9pbiB1cyB3ZWVrbHkgZm9yIGxpdmUgZGlzY3Vzc2lvbiB0aHJlYWRzIHdoZW4gbmV3IGVwaXNvZGVzIGFyZSBhaXJpbmcuIFdlIHdlbGNvbWUgYWxsIHBvc3RzIGFuZCBkaXNjdXNzaW9uIERheSByZWxhdGVkLgpDYXJuaWZleCB1CkNvbnNpZGVyaW5nIHRoZSBmYWN0IHRoYXQgY2hpbGQgbGFib3Igd2FzIHN0aWxsIGNvbW1vbiBhbmQgbGVnYWwgaW4gcHJldHR5IG11Y2ggYWxsIGpvYnMgYXQgdGhlIHRpbWUsIGl0IG5vdCBzdXJwcmlzaW5nIHRoYXQgaGlzIG1vdGhlciBhbmQgc3RlcCBmYXRoZXIgd291bGQgaGF2ZSBjb25zaWRlcmVkIGhpcyBlYXJuaW5ncyB0byBiZSB0aGVpcnMuIElmIHlvdSBzZW5kIHlvdXIga2lkIG91dCB0byBnZXQgYSBqb2IgaW4gYSBmYWN0b3J5LCB5b3UgdXNlIGl0IGZvciB0aGUgc3VwcG9ydCBvZiB0aGUgZmFtaWx5IHNvIGl0IGJlbG9uZ3MgdG8gdGhlIGFkdWx0cyB0byB1c2UgYXMgdGhleSBzZWUgZml0LiAKQWxzbyBJIGRvbiB3YW50IHRvIHJlZHVjZSB0aGUgc2lsZW5jZSByYWRpdXMgYW55IGZ1cnRoZXI7IHRoZXJlIHNvbWUgaW50ZXJlc3Rpbmcgc3R1ZmYgaXQgZG9lcyB3aXRoIG5vbiBjYXN0ZXJzIHRoYXQgeW91IGJlIGxlc3MgbGlrZWx5IHRvIG5vdGljZSBpZiBpdCB3YXMgc21hbGxlci4gCklmIHlvdSBhcmUgaG93ZXZlciB1bnNhdGlzZmllZCB3aXRoIHRoZXNlIDIgYW1hemluZyBzaXRlcywgeW91IG1heSBhbHNvIGNoZWNrIG91dCBhbGwgdGhlIGJlc3QgSUdULCBXZWIgRW50ZXJ0YWlubWVudCBhbmQgTWljcm9nYW1pbmcgdmlkZW8gZ2FtZSB0aXRsZXMgc3VjaCBhcyAxMDAsNDAwIHB5cmFtaWQgZ2FtZSwgdGhlIHBvcHVsYXIgZ2hvc3RidXN0ZXJzIGdhbWUgYW5kIG1hbnkgbW9yZS4gSUdUIGNyZWF0ZXMgYSBodWdlIHZhcmlldHkgb2Ygb25saW5lIGdhbWVzIGp1c3QgbGlrZSB3ZWxsIGFzIHZpZGVvIHBva2VyLCBkZXZvdGVkIHJhY2luZywgYmluZ28sIGFuZCB0aGVuIGh1bmRyZWRzIG9mIHNsb3RzLiBJR1QgZ2l2ZXMgYSBodWdlIHZhcmlldHkgb2Ygb25saW5lIGdhbWVzIGxpa2Ugd2VsbCBhcyB2aWRlbyBwb2tlciwgb25saW5lIHJhY2luZywgYmluZ28sIGFuZCBhbHNvIGh1bmRyZWRzIG9mIHNsb3RzLiBCZWdpbiB0byBzZWUgdGhlIHJlc291cmNlIGJveCBiZWxvdyB3aXRoIHJlc3BlY3QgdG8gbGlua3MgdG8gYWxsIG1vc3Qgb2YgdGhlc2UgZmFudGFzdGljIGZyZWUgcGFpIGdvdyBwb2tlciBnYW1lcyBhbmQgYWxsIHRoZSBvbiB0aGUgbWFya2V0IHNsb3RzClRoZSBpbnRlbnNlbHkgc2h5IFNub3dkZW4gZmluYWxseSB1bm1hc2tlZCBoaW1zZWxmIGFzIHRoZSBzb3VyY2Ugb2YgdGhlIGNsYXNzaWZpZWQgZGlzY2xvc3VyZXMgb24gdGhlIEd1YXJkaWFuJ3Mgd2Vic2l0ZSBvbiBKdW5lIDkuICJIZSB3YXMgc2NhcmVkIGZvciBoaXMgbGlmZS4gSGUgd2FzIGZ1bGx5IGF3YXJlIHRoYXQgaGlzIGxpZmUgd2FzIGF0IHJpc2ssIiBUaWJibyBzYWlkLiAKQm90aCB3ZXJlIDUgNCBkZWNpc2lvbnMsIHdpdGggSnVzdGljZSBTdGVwaGVuIEcuIApDYXJsb3MgYmVnYW5uIGxhbmdzYW0uIEVyIHdvbGx0ZSBqZWRlIGVpbnplbG5lIFN6ZW5lIGF1c2tvc3Rlbi4gIkRhbm4gd29sbGVuIHdpciBtYWwgZGllIFdlcnRlIG5vdGllcmVuIiwgc3RlbGx0ZSBlciBmZXN0LCBnaW5nIHVtIGRlbiBTY2hyZWlidGlzY2ggaGVydW0gdW5kIHNldHp0ZSBzaWNoIGF1ZiBlaW5lbiBIb2NrZXIsIEhlbGVuIGdlZ2VuYmVyLiAKVGhlIHN0cmljdGVyIHJ1bGVzIHJlcXVpcmVzIGJvcnJvd2VycyB0byBwcm92ZSB0aGF0IHRoZXkgY2FuIHNlcnZpY2UgdGhlaXIgdW5pbnN1cmVkIG1vcnRnYWdlIGF0IGEgcXVhbGlmeWluZyByYXRlIG9mIHRoZSBncmVhdGVyIG9mIHRoZSBjb250cmFjdHVhbCBtb3J0Z2FnZSByYXRlIHBsdXMgdHdvIHBlcmNlbnRhZ2UgcG9pbnRzIG9yIHRoZSBmaXZlIHllYXIgYmVuY2htYXJrIHJhdGUgcHVibGlzaGVkIGJ5IHRoZSBCYW5rIG9mIENhbmFkYS4gVGhlIHBvbGljeSBhbHNvIHJlZHVjZWQgdGhlIG1heGltdW0gYW1vdW50IGJ1eWVycyB3b3VsZCBiZSBhYmxlIHRvIGJvcnJvdyB0byBidXkgYSBob21lLgpMaWtlIGFueXRoaW5nIGludm9sdmluZyBtZWRpY2F0aW9uLCBkb3NhZ2UgaXMga2V5LiBMaXRodW0gd2FzIG9mdGVuIHJpZGljdWxlZCBpbiBlYXJseSBpbnRyb2R1Y3Rpb24gZm9yIGl0IHR1cm5pbmcgcGF0aWVudHMgaW50byAiem9tYmllcyIgYWZ0ZXIgaXQgZXNzZW50aWFsbHkgdHVybmluZyBwYXRpZW50cyBudW1iIHRvIG1lbnRhbCBzdGltdWx1cy4gSXQgd2FzIHVzZWQgYXMgYW4gYWx0ZXJuYXRpdmUgdG8gc2hvY2sgdGhlcmFweSBpbiBtZW50YWwgaW5zdGl0dXRpb25zIGZvciB0aGlzIHJlYXNvbiB0byBrZWVwIHBhdGllbnRzIHNlZGF0ZWQuCkNoYWluc2F3bWFuICAgTW9zdCBsaWtlbHkgZ29pbmcgdG8gc3Vydml2ZS4gSSBkb24ga25vdyBob3cgbG9uZyBpdCBydW4sIGJ1dCBob3BlZnVsbHkgaXQgZ2V0cyB0aGUgZW5kaW5nIGl0IG5lZWRzLiBXaGF0IGl0IGhhcyBnb2luZyBmb3IgaXQgaXMgZ29vZC9yZWZyZXNoaW5nIGNvbWVkeSBhbmQgdG9uZSwgcGx1cyBnb29kIGNoYXJhY3RlcnMuIFRoZSBzZXR0aW5nL3ByZW1pc2UgaXMgYWxyaWdodCwgYnV0IG5vdGhpbmcgdGhhdCBoYXNuIGJlZW4gZG9uZSBiZWZvcmUgKGFnYWluLCBkZW1vbnNsYXlpbmcgYW5kIGFuIGFnZW5jeSkuClNvLCBhIHBhdGllbnQgd2l0aCBsYW5ndWFnZSBkZWZpY2l0cyBmcm9tIGEgbGVmdCBNQ0Egc3Ryb2tlIHdpbGwgdW5kZXJnbyB0aGVyYXBpZXMgdG8gaW1wcm92ZSBzcGVlY2ggYXJ0aWN1bGF0aW9uLCB3b3JkIGZpbmRpbmcsIGxhbmd1YWdlIGZsdWVuY3ksIGV0Yy4gCllldCBsZXNzIHRoYW4gdGhyZWUgbW9udGhzIGFmdGVyIFdhcm5lIHByZWRpY3Rpb24gb2YgYSBidW1wZXIgeWVhciwgdGhlIGZvdW5kYXRpb24gd2FzIHNldCB0byBjbG9zZSwgc2h1dHRlcmVkIG9uIFdhcm5lIG9yZGVyIGFtaWQgYSBwcm9iZSBpbnRvIGl0cyBmaW5hbmNlcyBieSB0aGUgY29uc3VtZXIgd2F0Y2hkb2cuIE1lZGlhIGNvdmVyYWdlIG9mIHRoZSBmb3VuZGF0aW9uIHVzdWFsbHkgaW52b2x2ZWQgQXVzdHJhbGlhIGdyZWF0ZXN0IGJvd2xlciBzbWlsaW5nIG5leHQgdG8gYSBzaWNrIGEgY2hpbGQsIGJ1dCB0aGlzIHRpbWUsIHRoZSBxdWVzdGlvbnMgd2VyZSBhYm91dCB0aGUgcGVyZm9ybWFuY2UgYW5kIHByb2JpdHkgb2YgdGhlIGNoYXJpdHkuIApUaGF0IG5vdCBjcml0aWNpc20uIApIZSBzZXQgb2ZmIHRoZSBkZXZpY2UsIHRoZW4gZHJvdmUgaGlzIGJvYXQgYXQgaGlnaCBzcGVlZCBhbmQgc3RvcHBlZCAyLjUga2lsb21ldHJlcyBhd2F5Lk1hcnNkZW4gc2FpZCBoZSB3YW50ZWQgdG8gdGltZSBob3cgbG9uZyBpdCB0b29rIGZvciB0aGUgc2VhIGxpb25zIHRvIGNhdGNoIHVwIGFzIGhlIHRyaWVkIHRvIHNldCBoaXMgbmV0cyBkb3duIGFnYWluLiBJdCB0b29rIHNldmVuIG1pbnV0ZXMuSGUgc2FpZCBoZSBkaXNhcHBvaW50ZWQgdGhhdCBhIHNlY29uZCB2aWRlbyB3YXNuIHNoYXJlZCBzaG93aW5nIHRoZSBzaGVlciBudW1iZXIgb2Ygc2VhIGxpb25zIGVudGVyaW5nIGhpcyBuZXQud2FzIHRyeWluZyB0byBmaWd1cmUgb3V0IGEgd2F5IHdlIGNvdWxkIHdvcmsgb3V0IHRoZXJlIHdpdGggdGhvc2UgbGlvbnMuIApOb3RlIGxpbWluYWlyZTogaWwgc2VyYWl0IGJvbiBldCBwcm9maXRhYmxlIHF1IGRpdGV1ciBzcmlldXggZXhodW1lIGRlIG5vdXZlYXUgbGUgZmFidWxldXggdHJhdmFpbCBkdSBkb2N0ZXVyIExlY2xlcmMuIE1vbiBleGVtcGxhaXJlIGRlIFByY2lzIGRlIHBoeXRvdGhyYXBpZSwgYWNoZXQgZCBkYXRlIHRvdXQgZGUgbW1lIGRlIDE5OTQhIENlIG4gcGFzIHBhcmNlIHF1ZSBqIGRpdCBxdSBMZWNsZXJjIHRhaXQgaHVtYmxlIGV0IGRpc2NyZXQgcXUgZmF1dCBzIGV0IG1haW50ZW5hbnQsIGNldHRlIHByZmFjZS4gClRoZXJlIGFyZSB3YXlzIHRvIG1ha2UgUEMgYWNjb21tb2RhdGUgeW91IGJ1dCB0aGUgY29uc29sZSBtYW51ZmFjdHVyZXJzIGhhdmUgc3VjY2Vzc2Z1bGx5IG1hcmtldGVkIHRoZW1zZWx2ZXMgYXMgdGhlIGNvbnNvbGVzIGZvciBFVkVSWU9ORS4gCkVudHJhbnRzIHdpbGwgbmVlZCB0byBjcmVhdGUgdGhlaXIgb3duIG9yaWdpbmFsIG1vbnN0ZXIsIHVzaW5nIGFueSB2ZXJzaW9uIG9mIFBob3Rvc2hvcCwgdG8gc2VydmUgYXMgdGhlIGZpbmFsLCBtb3N0IGZyaWdodGVuaW5nIGd1YXJkaWFuIG9mIHRoZSBkdW5nZW9uLi4gClN0ZXZlIFd5bm4gYWNjdXNlZCBvZiBzZXh1YWwgbWlzY29uZHVjdApXaGF0IHdvdWxkIGhhcHBlbiBpZiBJIG5ldmVyIGN1dCBteSBmaW5nZXJuYWlscwpFbCByZXN0byBlcyBjb25zdHJ1aXIgYXJyaWJhIGRlIGVzby4uIApXaGVuIEkgc3RhcnRlZCBydW5uaW5nL3RyYWluaW5nIGhhcmRlciBhZ2FpbiwgeW91IGJldHRlciBiZWxpZXZlIHRoZSBzcGVlZCB3b3JrIHdhcyB3YXkgV0FZIGVhc2llci4gSSBnb2luZyB0aHJvdWdoIHRoYXQgcHJvY2VzcyBhZ2FpbiBub3cgYXMgSSB0cnkgdG8gbG9zZSBhbm90aGVyIGZldyBwb3VuZHMgdG8gbWluaW1pemUgcHJlc3N1cmUgb24gbXkga25lZXMuLiAKV2hpbGUgYWxsIHRoZSB0cmVhdG1lbnQgbWV0aG9kcyBkZXNjcmliZWQgaGVyZSBhcmUgcGFydCBvZiBhbiBhbmNpZW50IHRyYWRpdGlvbiwgQ2hpbmVzZSBtZWRpY2luZSBjb250aW51ZXMgdG8gZXZvbHZlLiBOZXcgdHJlYXRtZW50IG1vZGFsaXRpZXMgaGF2ZSBiZWVuIHRlc3RlZCBhbmQgaW50cm9kdWNlZCwgc3VjaCBhcyBlbGVjdHJvYWN1cHVuY3R1cmUgKGluIHdoaWNoIGEgbWlsZCBlbGVjdHJpY2FsIGN1cnJlbnQgaXMgYXBwbGllZCB0byB0aGUgbmVlZGxlcyB0byBwcm92aWRlIGEgc3Ryb25nZXIgYW5kIG1vcmUgY29udGludW91cyBzdGltdWxhdGlvbiAgIGEgdXNlZnVsIHRlY2huaXF1ZSB3aGVuIHN0cm9uZ2VyIHN0aW11bGF0aW9uIGlzIGRlc2lyZWQsIGFzIGluIGNhc2VzIG9mIHBhcmFseXNpcyksIG1hZ25ldGljIHRoZXJhcHksIGxhc2VyIGFjdXB1bmN0dXJlIChpbiB3aGljaCB0aGUgcG9pbnRzIGFyZSBzdGltdWxhdGVkIHdpdGggYSBzcGVjaWFsIGxhc2VyLCBhIHRlY2huaXF1ZSBmYXZvcmVkIGJ5IHBlb3BsZSBhZnJhaWQgb2YgbmVlZGxlcyksIGFuZCB2YXJpb3VzIHR5cGVzIG9mIGhlYWxpbmcgcmFkaWF0aW9uLi4gCiJIZSBoYWQgbm8ga25vd2xlZGdlIHRoYXQgdGhpcyB3YXMgZ29pbmcgdG8gaGFwcGVuLiBIZSBoYWQgbm8ga25vd2xlZGdlIHRoYXQgdGhlcmUgd2VyZSBnb2luZyB0byBiZSBpbm5vY2VudCBwZW9wbGUgdGhlcmUsIiBMYSBMaWJlcnRlIHNhaWQgb3V0c2lkZSBjb3VydC4KVGhlIGluZm9ybWF0aW9uIHByb3ZpZGVkIGluIHJlc3BvbnNlIHRvIHlvdXIgcmVxdWVzdCB3aWxsIGJlIHRoYXQgd2hpY2ggdGhlIFVuaXZlcnNpdHkgaG9sZHMgKHN1YmplY3QgdG8gYW55IGV4ZW1wdGlvbnMpIGF0IHRoZSB0aW1lIHdlIHJlY2VpdmVkIHlvdXIgcmVxdWVzdC4gVGhlIEFjdCBkb2VzIGFsbG93IHJvdXRpbmUgdXBkYXRpbmcgYW5kIG1haW50ZW5hbmNlIG9mIHRoZSBkYXRhIHRvIGNvbnRpbnVlIGJldHdlZW4gdGhlIGRhdGUgb24gd2hpY2ggdGhlIHJlcXVlc3QgaXMgcmVjZWl2ZWQgYW5kIHRoZSBkYXRlIHdoZW4gdGhlIHJlcGx5IGlzIGRpc3BhdGNoZWQuIApDZXMgY2hvc2VzIHF1ZSB2b3VzIGFpbWV6LCBvY2N1cGVudCBlbGxlcyB1bmUgcGxhY2Ugc3VmZmlzYW50ZSBkYW5zIHZvdHJlIHF1b3RpZGllbiBwZW5kYW50IGwnYW5uZSA/IEFpbWVyaWV6IHZvdXMgbGV1ciBlbiBmYWlyZSB1bmUgcGx1cyBncmFuZGUgPyBOZSB2b3VzIG9jY3VwZXogcGFzIGRlIGNlIHF1J2lsIEZBVURSQUlUIGZhaXJlLCBkJ2NvdXRlciB2b3MgbWVpbGxldXJzIGFtaXMsIHZvdHJlIGZhbWlsbGUgb3UgbGVzIG1hZ2F6aW5lcyBtYWlzIGRlIGNlIGRvbnQgdm91cyBBVkVaIFJFRUxMRU1FTlQgRU5WSUUuIFBhcyBjaW5xdWFudGUgcHJvamV0cywgcGV1dCB0cmUgdW4gb3UgZGV1eCBxdWkgdm91cyB0aWVubmVudCAgY29ldXIsIHZvdXMgZm9udCBwbGFpc2lyLCB2b3VzIGRvbm5lbnQgbGEgcGNoZS4KQXQgMTEsIHNoZSBzYXlzLCBzaGUgd2FzIHNleHVhbGx5IG1vbGVzdGVkIGJ5IGEgZmFtaWx5IGZyaWVuZC4gQXQgMTIsIHNoZSB3YXMgc21va2luZyBwb3QgYW5kIHNraXBwaW5nIHNjaG9vbC4gQXQgMTMsIHNoZSB3YXMgaW4gYW5kIG91dCBvZiBmb3N0ZXIgaG9tZXMsIGFuZCBhdCAxNCwgc2hlIHdhcyBvbiB0aGUgc3RyZWV0LgpZZXAgaXQgZGVmaW5pdGVseSBzbWFja3Mgb2YgdHlwaWNhbCBuYXJjIGJlaGF2aW9yOiBjYXVzaW5nIHJhbmRvbSBhbmQgdW5uZWNlc3NhcnkgZHJhbWEgaW4gYW4gb3RoZXJ3aXNlIGNhbG0gc2l0dWF0aW9uLiBUaGV5IGRvIHRoaXMgdG8gcmVtaW5kIGV2ZXJ5b25lIHRoYXQgdGhleSBjYW4gY3JlYXRlIHJhbmRvbSBhbmQgdW5uZWNlc3NhcnkgZHJhbWEgd2hlbmV2ZXIgdGhleSB3YW50OyB0aGF0IHRoZXkgY2FuIGhhdmUgYSBodWdlIGFtb3VudCBvZiBjb250cm9sIG92ZXIgb3RoZXIgcGVvcGxlJ3MgcGVhY2UgYW5kIGhhcHBpbmVzcy4gWWV0IGFub3RoZXIgcGV0dHkgbWFuaWZlc3RhdGlvbiBvZiBuYXJjIHBvd2VyIGFuZCBjb250cm9sLiBEZXZpbCBEYWRpIGtuZXcgZXhhY3RseSB3aGF0IHNoZSB3YXMgZG9pbmcsIGRvd24gdG8gdGhlIG1pbnV0ZXMgc2hlIHdvdWxkIG5lZWQgdG8gImFjY2lkZW50YWxseSIgbWlzcyBoZXIgZmxpZ2h0IGFuZCBjYXVzZSBldmVyeW9uZSdzIHByZXZpb3VzbHkgZW5qb3lhYmxlIHZhY2F0aW9uIHRvIGdyaW5kIHRvIGEgaGFsdC4gQW5kIHRoZW4gd2hlbiBoZXIgbWFjaGluYXRpb25zIGRpZG4ndCB3b3JrIGFzIHBsYW5uZWQsIHNoZSBzdGlsbCBtYW5hZ2VkIHRvIGdldCBzb21lb25lIHRvIGRyb3AgZXZlcnl0aGluZyBhbmQgZmx5IGZ1Y2tpbmcgaGFsZiB3YXkgYWNyb3NzIHRoZSBwbGFuZXQgdG8gY29tZSBhbmQgInJlc2N1ZSIgaGVyIGZvdWwgYXNzLiBJdCB3YXMgYSBtYXN0ZXJmdWwgcGllY2Ugb2YgbmFyYyBtYW5pcHVsYXRpb24uCiJXaXRoIHRoZSBncm93aW5nIGRhdGEgdG8gcHJvdmUgdGhlIGJlbmVmaXRzIG9mIG1hc3NhZ2UgYW5kIG90aGVyIHRyZWF0bWVudHMsIGNvbnN1bWVycyBhcmUgY2hvb3NpbmcgdG8gZG8gc29tZXRoaW5nIHRoYXQgaXMgZ29vZCBmb3IgdGhlbSBhbmQgdGhleSBlbmpveS4gV2UgYXJlIHNlZWluZyBhbiBpbmNyZWFzZSBpbiBtZW4gaW4gb3VyIHNwYXMsIGZvciBzdHJlc3MgYW5kIHJlbGF4YXRpb24sIGJ1dCBhbHNvIHNwb3J0cyBpbmp1cnkgYW5kIG1haW50ZW5hbmNlIGFuZCB0byBrZWVwIGxvb2tpbmcgYW5kIGZlZWxpbmcgZ29vZC4gT24gYXZlcmFnZSBpbiBFc3BhIHNwYXMgZ2xvYmFsbHksIG1lbiBhcmUgYWJvdXQgNDAgcGVyY2VudCBvZiB0aG9zZSB0YWtpbmcgdHJlYXRtZW50cy4uIApWaW9sYSBlc3RhYmxpc2hlZCB0aGUgRGVzbW9uZCBTY2hvb2wgb2YgQmVhdXR5IEN1bHR1cmUsIGRyYXdpbmcgc3R1ZGVudHMgYWNyb3NzIGVhc3Rlcm4gQ2FuYWRhLi4gCkkgZ290IHVwIGdyYWJiZWQgdGhlIGZpcmUgcG9rZXIgYW5kIHB1c2hlZCB0aGVtIGFzIHF1aWV0bHkgYXMgSSBjb3VsZCBiYWNrIGluIHRvIHRoZSBmaXJlIHNvIGFzIHRvIG5vdCBhbGVydCBhbmQgdHJhdW1hdGlzZSBteSBnZi4gCkkga25vdyBvdGhlcnMgaGF2ZS4gClNpbmNlIEp1bmUgMjAxNCwgTlNXIGhvc3BpdGFscyBoYXZlIGFjY2VwdGVkIDE4IGRvbmF0aW9ucyBhbW91bnRpbmcgdG8gbW9yZSB0aGFuICQxIG1pbGxpb24gZnJvbSB2ZW51ZXMgdGhyb3VnaCB0aGUgTElBIHByb2Nlc3MuIFRoaXMgY29tcGFyZXMgd2l0aCBmaXZlIGRvbmF0aW9ucyB0byBob3NwaXRhbHMgaW4gdGhlIHByZXZpb3VzIHRocmVlIHllYXJzLiAKIkFtZXJpY2FucyBpbiBnZW5lcmFsIHdvdWxkIHByb2JhYmx5IHNheSB0aGF0IG91ciBnYW1lJ3MgYm9yaW5nLCBoZSBhZG1pdHRlZC4gIkl0J3MgYSByZWFsIG9wcG9ydHVuaXR5LCIgaGUgdG9sZCBBRlAuCldoZW4geW91IHN0YXJ0IGxvb2tpbmcgZm9yIGEgcm9vbSB3aGVyZSB0byBwbGF5LCB5b3Ugd2lsbCBtb3N0IGxpa2VseSBmaW5kIHRoZSBtb3N0IHBvcHVsYXIgd2Vic2l0ZXMgbGlrZSBQb2tlclN0YXJzLCBQYXJ0eSwgRnVsbFRpbHQgYW5kIHNvIG9uLiBCdXQgdGhlcmUgaXMgb25lIHJvb20gY2FsbGVkIENsdWJXUFQgYW5kIHRoaXMgcm9vbSBvZmZlcnMgbXVjaCBiZXR0ZXIgY29uZGl0aW9ucyBmb3IgYmVnaW5uZXJzIGFuZCBhdmVyYWdlIHBsYXllcnMuIFRoaXMgYXJ0aWNsZSB3aWxsIHRlbGwgeW91IGFib3V0IHdoeSB0aGlzIHJvb20gaXMgbXVjaCBiZXR0ZXIgdGhhbiBvdGhlcnMuIEZvciBleGFtcGxlIHlvdSB3aWxsIGZpbmQgYSBsb3Qgb2YgZGVwb3NpdCBib251cyBvZmZlcnM6IDEwMCUgdXAgdG8gJDYwMC4gVGhhdCdzIHdoYXQgUG9rZXJTdGFycyBvZmZlcnMuIE90aGVyIHdlYnNpdGVzIG9mZmVyIGFsbW9zdCB0aGUgc2FtZS4gWW91IGhhdmUgdG8gZGVwb3NpdCB5b3VyIG1vbmV5IGluIG9yZGVyIHRvIHN0YXJ0IHBsYXlpbmcuClRoZW4sIGNsaWNrIG9uIHRoZSBndXkgb24gdGhlIHJpZ2h0LCB0byBnbyB0byB0aGUgQ2FuZGllcyBzdGFuZC4gCklmIHlvdSBoYXZlIGV2ZXJ5dGhpbmcgYXQgcmlzaywgeW91J2QgYmV0dGVyIG1ha2UgY2FyZWZ1bCBkZWNpc2lvbnMuIE9uY2UgeW91IHRha2UgdGhlIG1hbW1vdGggcmlzayBvZiBwdXR0aW5nIHlvdXJzZWxmIG9uIHRoZSBsaW5lLCBhbGwgb3RoZXIgaW1wdWxzZXMgc2hvdWxkIGJlIHRvIG1pbmltaXplIHJpc2sgYW5kIGV4cG9zdXJlLiAKIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIHllYXIgYWdvRHVubm8sIEkgd2FzIGh5cGluZyBoaW0gdXAgZXZlciBzaW5jZSBJIGhlYXJkIHRoZSBsZWFrcyBkdWUgdG8gbWUgYmVpbmcgU0NJSSB0ZXJyYW4gcGxheWVyIGFuZCBGaXJlYmF0cyBiZWluZyBvbmUgb2YgbXkgZmF2b3VyaXRlIHVuaXRzLCBJIHRhbmsgbWFpbiBpbiBIb3RTLCBSZWluIGZyb20gT1cgYW5kIFB5cm8gZnJvbSBURjIgYmVpbmcgb25lcyBhbW9uZyBteSBtYWlucyBpbiB0aGVpciBnYW1lcywgYW5kIGFzIHNvb24gYXMgaGUgd2VudCBvdXQsIEkgYmVnYW4gZ3JpbmRpbmcgaGltIGZvciAzIHdlZWtzIHRvIGdldCB0byBsdiAyMCwgaGUgYWxyZWFkeSBteSBmb3VydGggYmVzdCBjaGFyYWN0ZXIgaW4gdGhlIGdhbWUgaW4gdGVybSBvZiB2aWN0b3J5IHBlcmNlbnRhZ2UgKHNvbWVod2VyZSBhcm91bmQgNTgsIGV2ZW4gdGhvdWdoIHllYWggSSBrbm93IGl0IG1vc3RseSBRTSwgYnV0IEkgc3VjY2VlZGVkIHBsYXlpbmcgaGltIGluIGRyYWZ0cyBhcyB3ZWxsKS4gCllvdSBjYW4gYWxzbyBjaGVjayBvdXQgWWVsbG93IEhhaXIgMiBidXQgbm90ZSB0aGF0IGl0IHN0YXJzIHRoZSBIYXJpc3UgdGhlIHBvc3Qgb3Agc2V4IGNoYW5nZSBjZWxlYi4uIApPbiByZXRyb3V2ZXJhIE9tYXIgU3kgZGFucyBsYSBkaXN0cmlidXRpb24uIApKb2huIEFudGhvbnkgV2VzdCBoYXMgc29tZSBwcmV0dHkgZ29vZCBpbmZvIGFib3V0IEVneXB0aWFucyBhbmQgcmV0aGlua2luZyB3aGF0IGEgbG90IG9mIHRoZWlyIHJlY29yZHMgc3VnZ2VzdC4gR3JhaGFtIEhhbmNvY2sgaXMgZnVuIGZvciBzcGVjdWxhdGlvbiBhYm91dCB0aGUgcG9zc2libGUgY2l2aWxpemF0aW9uIHByZSBmbG9vZCBhbmQgd2h5IGhlIHRoaW5rcyBzb21lIG1vbnVtZW50cyBhcmUgd2F5IG9sZGVyIHRoZW4gd2UgY3VycmVudGx5IGd1ZXNzLiBBbGwgb2YgdGhlbSBoYXZlIGJlZW4gaW50ZXJ2aWV3ZWQgb24gSlJFIHBvZGNhc3QgYXQgbGVhc3Qgb25jZSBhbmQgYXJlIGV4Y2VsbGVudCB3aXRoIGFueSBhZHVsdCBzdWJzdGFuY2Ugb2YgY2hvaWNlIGluIHJlc3BvbnNpYmxlIGFtb3VudHMuLiAKUHN5Y2hvbG9neSBpcyBiYXNpY2FsbHkgdGhlIGV2b2x1dGlvbiBvZiB0aGF0LiAKKDIpIFByb2xvbmdlZCB3aGlwbGFzaCBpbmp1cnkgc3ltcHRvbXMgaW5jbHVkZSBuZWNrIGFuZCBiYWNrIHBhaW4sIGhlYWRhY2hlcywgZGl6emluZXNzLCBibHVycmVkIHZpc2lvbiwgcGFyZXN0aGVzaWFzLCBhbmQgY29nbml0aXZlIGRpZmZpY3VsdGllcy4oMykgV2hpcGxhc2ggaW5qdXJpZXMgc3ltcHRvbXMgdGhhdCByZXNvbHZlIHJlbGF0aXZlbHkgcXVpY2tseSwgYXJlIHByb2JhYmx5IHJlbGF0ZWQgdG8gbXVzY2xlIGluanVyeS4gVGhpcyBudW1iZXIgY291bGQgYmUgYXMgaGlnaCBhcyAxNSUgdG8gMjglLig1KSBUaGlzIG1lY2hhbmljYWwgZmFjZXQgY2Fwc3VsYXIgbGlnYW1lbnQgZmFpbHVyZSB3b3VsZCByZXN1bHQgaW4gcGFpbiBiZWNhdXNlIG9mIHRoZSBwcmVzZW5jZSBvZiBub2NpY2VwdGl2ZSBuZXJ2ZSBlbmRpbmdzIGluIHRoZSBjZXJ2aWNhbCBmYWNldCBjYXBzdWxlIGxpZ2FtZW50cy4oNikgQmVjYXVzZSBvZiBpbnRlcnNwZWNpbWVuIHZhcmlhYmlsaXR5LCBkaWZmZXJlbmNlIGluIGluanVyeSBjYW4gcmVzdWx0IGluIG1hcmtlZGx5IGRpZmZlcmVudCBjbGluaWNhbCBvdXRjb21lcyBpbiBkaWZmZXJlbnQgaW5kaXZpZHVhbHMgdW5kZXIgc2ltaWxhciBsb2FkaW5nIGNvbmRpdGlvbnMuKDcpIFJlbGF0aXZlbHkgbG93IHBvc3RlcmlvciBzaGVhciBsb2FkcyBjb3VsZCBleGNlZWQgdGhlIHRocmVzaG9sZCBmb3Igc3ViY2F0YXN0cm9waGljIGZhaWx1cmUgaW4gc29tZSBpbmRpdmlkdWFscy4gCkhlIHdvbiB0aGUgZ2FtZSdzIGJpZ2dlc3QgcHJpemUsIHRoZSBXb3JsZCBTZXJpZXMgTWFpbiBFdmVudCwgaW4gMTk4OSBhbmQgaXMgYW1vbmcgdGhlIHRvcCBsaWZldGltZSBtb25leSB3aW5uZXJzLCB3aXRoIG1vcmUgdGhhbiAkNiBtaWxsaW9uIGluIFdvcmxkIFNlcmllcyBldmVudCBwcml6ZXMuIApUaGF0IG9ubHkgdG9vayBhYm91dCBhIG1pbnV0ZSB0byBleHBsYWluLCB5ZXQgaXQgdG9vayBhYm91dCBhIHdlZWsgYmVmb3JlIHlvdSBkZWNpZGVkIHRvIHNoYXJlIGl0IHdpdGggdXMuIEkgZG9uIHVuZGVyc3RhbmQsIHNvIG11Y2ggZHJhbWEgY291bGQgYmVlbiBhdm9pZGVkIGlmIHlvdSBoYWQganVzdCBzYWlkIHNvbWV0aGluZyBsaWtlIHRoaXMgaW4gdGhlIGZpcnN0IHBsYWNlLiBJdCBvbmUgdGhpbmcgdG8gc2F5IHlvdSBidXN5LCBidXQgbm90IHRha2luZyBhIGZldyBzZWNvbmRzIHRvIHJlcGx5IHRvIGFueSBvZiB0aGUgY29tbWVudHMgYWJvdXQgdGhpcyBzdHVmZiB3YXMganVzdCBvZGQuLiAKTWV0cm9uaWRhem9sZSBSZXNpc3RhbmNlIEV4YW1pbmVkCkluIHRoaXMgZXhhbXBsZSBJIHNoYWxsIHVzZSBhIGZ1bGwgcmluZyBnYW1lICgxMCBwbGF5ZXJzKS4gQWdhaW5zdCA5IHJhbmRvbSBoYW5kcyBBNiBzdWl0ZWQgaGFzIGEgMTIsNjcgcGVyY2VudCBjaGFuY2Ugb2Ygd2lubmluZy4gVGhlIHBhaXIgb2YgNidzIGhhdmUgYSAxMiw4OSBwZXJjZW50IGNoYW5jZSBvZiB3aW5uaW5nIGFnYWluc3QgOSBvdGhlciByYW5kb20gaGFuZHMuIApCYXNrZXRiYWxsIGNvYWNoIGFjY3VzZWQgb2Ygc2hvb3RpbmcgcGxheWVyCklmIHlvdSBjYW4ndCBjb250cm9sIHlvdXIgc3BlbmRpbmcsIGFza2luZyBmb3IgYSBsb3dlciBjcmVkaXQgbGltaXQgbWF5IGluZGVlZCBrZWVwIHlvdSBvdXQgb2YgdHJvdWJsZSBieSBzaW1wbHkgY2FwcGluZyBob3cgbXVjaCB5b3UgY2FuIGJvcnJvdy4gCk1heSAyNDogRmFjZWJvb2sgZGVsaXZlcnMgb24gaXRzIHByb21pc2UgdG8gYnVpbGQgYW4gYXJjaGl2ZSB0byBkaXNjbG9zZSBhbGwgcG9saXRpY2FsIGFkcy4KQ291bGQgeW91IGFkZCBhbiBhcGFydG1lbnQgb3ZlciB0aGUgZ2FyYWdlPyBJbiB0aGUgYmFzZW1lbnQ/IFNvbWV0aGluZyB3aXRoIGEgc2VwYXJhdGUgZW50cmFuY2Ugb2YgY291cnNlLCBzbyB5b3UgZG9uJ3QgaGF2ZSB0byBtaW5nbGUgd2l0aCB0aGUgcmlmZnJhZmYuClRoZXkgd2VyZSBlaXRoZXIgbGllZCB0byBzYXlpbmcgdGhleSB3b3VsZCB3b3JrIGF0IGhvdGVscyBhbmQgcHJvbWlzZWQgb3RoZXIgdGhpbmdzLiBJdCBmdWNrZWQgdXAgdG8gdGhpbmsgdGhhdCBtaWxsaW9ucyBvZiB5b3VuZyB3b21lbiB3b3JsZCB3aWRlIHNhaWQgaG1tbSBJIGp1c3QgZ28gc3VjayBkaWNrIGFuZCBnZXQgYmVhdCB1cCB0byBsZWF2ZSBteSBzaGl0dHkgbGlmZSBoZXJlLiAKUG9wcGVyIGxhdGVyIHNhaWQgaW4gaGlzIGNvbGxlY3Rpb24gQ29uamVjdHVyZXMgYW5kIFJlZnV0YXRpb25zOiBUaGUgR3Jvd3RoIG9mIFNjaWVudGlmaWMgS25vd2xlZGdlIChIYXJwZXIgYW5kIFJvdyAxOTYzKSB0aGF0ICJTY2llbmNlIG11c3QgYmVnaW4gd2l0aCBteXRocywgYW5kIHdpdGggdGhlIGNyaXRpY2lzbSBvZiBteXRoczsgbmVpdGhlciB3aXRoIHRoZSBjb2xsZWN0aW9uIG9mIG9ic2VydmF0aW9ucywgbm9yIHdpdGggdGhlIGludmVudGlvbiBvZiBleHBlcmltZW50cywgYnV0IHdpdGggdGhlIGNyaXRpY2FsIGRpc2N1c3Npb24gb2YgbXl0aHMsIGFuZCBvZiBtYWdpY2FsIHRlY2huaXF1ZXMgYW5kIHByYWN0aWNlcy4gVGhlIHNjaWVudGlmaWMgdHJhZGl0aW9uIGlzIGRpc3Rpbmd1aXNoZWQgZnJvbSB0aGUgcHJlIHNjaWVudGlmaWMgdHJhZGl0aW9uIGluIGhhdmluZyB0d28gbGF5ZXJzLiBMaWtlIHRoZSBsYXR0ZXIsIGl0IHBhc3NlcyBvbiBpdHMgdGhlb3JpZXM7IGJ1dCBpdCBhbHNvIHBhc3NlcyBvbiBhIGNyaXRpY2FsIGF0dGl0dWRlIHRvd2FyZHMgdGhlbS4gCkxvdWlzIFBpY2ggZnJxdWVudGUgbGVzIHByb3N0aXR1ZXMgZGVwdWlzIHVuZSBkaXphaW5lIGQnYW5uZXMgZGFucyBsZXMgc2Fsb25zIGRlIG1hc3NhZ2UsIGxlcyBzb2lyZXMgY29xdWluZXMgcHJpdmVzIGV0IHBhciBkaWZmcmVudHMgc2l0ZXMgSW50ZXJuZXQuIEFwcnMgYXZvaXIgcmVuY29udHIgZGVzIGNlbnRhaW5lcyBkZSBjbGllbnRzLCBkZSBmaWxsZXMgZXQgZGUgbWVtYnJlcyBkdSBwZXJzb25uZWwgcXVpIGxlcyBlbnRvdXJlbnQsIGlsIGVzdCBjb252YWluY3UgcXVlIGxhIHByb3N0aXR1dGlvbiBlc3QgIHBldSBkZSBjaG9zZXMgcHJzIHVuIHRyYXZhaWwgY29tbWUgdW4gYXV0cmUsIHVuIGNvbW1lcmNlIGNvbW1lIHVuIGF1dHJlLiAKRGlkbiB0aGluayBJIGJlIGJlbGlldmVkLiAKQ2hpbGRyZW4gYXJlIGdvaW5nIHRvIGJhc2UgdGhlaXIgaWRlYXMgb24gd2hhdCB0aGVpciBwYXJlbnRzIHRoaW5rIG5vIG1hdHRlciBob3cgdGhlIHBhcmVudHMgYXBwcm9hY2hlZCBpdC4gSWYgeW91IGhhdmUgdHdvIHBlb3BsZSB0aGF0IGRpc2FncmVlIEV4cHJlc3MgYm90aCB5b3VyIHZpZXdzIGFuZCBsZXQgdGhlIGNoaWxkcmVuIGRlY2lkZS4gCkFmdGVyIGFib3V0IDYgbW9udGhzLCBpIHdhcyBnZXR0aW5nIGFuY3ksIEkgd2Fzbid0IHJlYWR5IHRvIHdvcmsgaW4gbXkgYnVzaW5lc3MgYnV0IEkgd2FzIHJlYWR5IHRvIHdvcmsgb24gbXkgYnVzaW5lc3MuIFNvIEkgaGFkIG15IHJlYWx0b3Igc2V0IG1lIHVwIHdpdGggZW1haWwgYWxlcnRzIGFnYWluIGFuZCBJIHdhcyBnb2luZyB0byBmaW5kIG15IG5leHQgc21hbGwgbXVsdGlmYW1pbHkgcHJvcGVydHkgYnkgRGVjZW1iZXIgMjAxNi4gCkxvbCB0aGlzLiBZZXMsIENocmlzdGlhbnMgaW4gdGhlIHR3ZW50eSBmaXJzdCBjZW50dXJ5IGFyZSBiZWhlYWRpbmcgYW5kIHN0b25pbmcgcGVvcGxlIGRlYXRoLiBMYXN0IHRpbWUgSSBjaGVja2VkIHRoZSBNdXNsaW1zIHdlcmUgdGhyb3dpbmcgaG9tb3NleHVhbHMgb2ZmIGJ1aWxkLiBUaGV5IGRvbid0IHNvdW5kIHZlcnkgdG9sZXJhbnQgYW5kICJ3b2tlIiB0byBtZS4KTGl2ZVJlYWxOb3cgIDEgcG9pbnQgIHN1Ym1pdHRlZCAyNSBkYXlzIGFnbwpXaXRoIHRoZSBiZXQgY2FsbGVkIGFuZCBjYXJkcyByZXZlYWxlZCwgSm9obiBpcyBzdWRkZW5seSBjaGVja2luZyB0cmFpbiB0aW1lcyBiYWNrIHRvIEJyaWRsaW5ndG9uIGEgZGF5IGVhcmxpZXIgdGhhbiBhbnRpY2lwYXRlZC4uIApTdG9wIGFuZCB0aGluay4gCldoZW4gdG9sZCBhYm91dCB0aGUgYWNjdXNhdGlvbiwgdGhlIG93bmVyIG9mIEdyZWVuIExlYWYgc2FpZCBTbWl0aCB3aG8gd2FzIGhpcmVkIGluIEphbnVhcnkgcXVpdCBvdmVyIHRoZSBwaG9uZSwgYWNjb3JkaW5nIHRvIHRoZSBhZmZpZGF2aXQuIlVwb24gaGlzIGhpcmluZywgdGhlcmUgd2FzIG5vIGV2aWRlbmNlIHRvIHN1Z2dlc3QgdGhhdCAoU21pdGgpIHdhcyBjYXBhYmxlIG9mIHRoaXMgYmVoYXZpb3IsIiBHcmVlbiBMZWFmIE1hc3NhZ2Ugc2FpZCBpbiBhIHN0YXRlbWVudC4gIkhlIHdhcyBsaWNlbnNlZCB0aHJvdWdoIHRoZSBzdGF0ZSBvZiBDb2xvcmFkbywgd2hpY2ggcnVucyBhIGJhY2tncm91bmQgY2hlY2sgYW5kIGZpbmdlcnByaW50aW5nIHRoYXQgYWxsIGNhbWUgYmFjayBjbGVhbiBvbiBoaXMgcmVjb3JkLiBXZSByZWx5IG9uIHRoZW0gdG8gaGVscCB1cyBwZXJmb3JtIGNvbXByZWhlbnNpdmUgYmFja2dyb3VuZCBjaGVja3MgZm9yIHRoZSBzYWZldHkgb2Ygb3VyIGNsaWVudHMgYW5kIHdlIGFyZSBhcHBhbGxlZCB0aGF0IHRoZXNlIGV2ZW50cyB3ZXJlIG5vdCBwcmV2ZW50ZWQuIi4gClRoaXMgaXMgY2F1c2VkIGJ5IHRvbyBtdWNoIHN0cmVzcyBvbiB0aGUgbXVzY2xlcy4gCkkgc3RpbGwgZG9uJ3Qga25vdyB3aHkuIApUcmFkaXRpb25hbCBidXJpYWwgbWV0aG9kcyB1c3VhbGx5IHJlcXVpcmUgY3V0dGluZyBkb3duIHRyZWVzIGZvciBjb2ZmaW5zLCBtaW5pbmcgcm9jayBmb3IgaGVhZHN0b25lcyBhbmQgY29uY3JldGUgYmFycmllcnMsIGFuZCB0aGUgcHJvZHVjdGlvbiBvZiBjaGVtaWNhbHMgbGlrZSBmb3JtYWxkZWh5ZGUgZm9yIGVtYmFsbWluZyBmbHVpZC4KV2Ugd2FudCB0aGVtIHRvIGhlbHAgd2l0aCBtb2RlcmF0aW5nLCBvZiBjb3Vyc2UsIGJ1dCB3ZSBhbHNvIGhhdmUgdGhlbSB3ZWlnaCBpbiBvbiBvdXIgcG9saWNpZXMgYW5kIHJ1bGVzLiAKRmVtYWxlIGVqYWN1bGF0ZSBpcyBub3QgcGVlLiAKRG9uIHRyeSB0byBiZWF0IHRoZSAxMCBtaW4gdGltZSwganVzdCBydW4gdGhlIGRpc3RhbmNlIHVzaW5nIHRoZSBmdWxsIHRpbWUgYW5kIGFzIHlvdSBwcm9ncmVzcyBhbmQgZ2V0IGZpdHRlciwgeW91IHNlZSB0aGF0IHlvdSBhIGxvdCBsZXNzIGtuYWNrZXJlZCFPbmNlIHlvdSBjYW4gZG8gdGhlIDEwIG1pbnV0ZXMgY29tZm9ydGFibHksIHRoZW4gbG9vayBhdCBtb3JlIGludGVuc2UgdHJhaW5pbmcgdG8gZ2V0IG1vcmUgc3RhbWluYS4gClN1cmUgYXQgZmlyc3QgaXQgcmVhbGx5IGhhcmQgdG8gZ3Jhc3Agd2hhdCBiZW5lZml0cyB0ZXN0aW5nIGJyaW5ncy4gV2hlbiBJIGZpcnN0IGhlYXJkIGFib3V0IHRlc3RpbmcgSSBjb3VsZG4gcXVpdGUgZ2V0IGl0LiAKSGVhbHRoLCBTYWZldHkgYW5kIFdlbGxiZWluZyAoSFNXKQpZb3UgY2FuIHByaW50IGFueSBkZXNpZ24gb24gdGhlbS4gCkFjY29yZGluZyB0byBQaGlsbGlwcywgQ1BSIGlzIG5vdCB0aGUgb25seSB0ZWNobmlxdWUgdGF1Z2h0IGJ5IHRoZSBpbnN0cnVjdG9yLiAKSSB1c2VkIFNEQyBtaWNzIGFzIG92ZXJoZWFkcyBhbmQgdGhleSBzb3VuZCBnb29kLCBidXQgdGhlIHRvbXMgbGFjayBzb21lIGhlZnQgdG8gdGhlIHNvdW5kIChldmVuIHRob3VnaCB0aGV5IHN0aWxsIHNvdW5kIGZ1bGwpLiAKVGhleSBhcmUgZXZlcnl3aGVyZSAgIG11Y2ggbGlrZSBBQSBtZWV0aW5ncy4gU2hlIGhhcyBzdGFydGVkIGdvaW5nIGFuZCBzYXlzIGl0IGhhcyBiZWVuIHRyYW5zZm9ybWF0aXZlIGFuZCBoZWFsaW5nLiBUaGUgdGhvdWdodHMgeW91IGV4cHJlc3NpbmcgYXJlIG11Y2ggbGlrZSB0aGUgb25lcyBzaGUgaGFzIGJlZW4gc2hhcmluZyB3aXRoIG1lIGFuZCBJIHRoaW5rIHlvdSB3b3VsZCBmaW5kIHBlb3BsZSB3aG8gd2lsbCB1bmRlcnN0YW5kIHlvdXIgcGFpbiBhbmQgc3RydWdnbGUuIApBcyBJIHNhaWQsIEltIG1vcmUgb2YgYW4gTWVzby9FbmRvbW9ycGguIApFcm5pZSBTY2hlcmVyIGhhZCBiZWVuIG1hcnJpZWQgdG8gUm9ieW4gZm9yIG5pbmUgeWVhcnMsIGFuZCB0aGUgdHdvIGhhZCBhIDMgeWVhciBvbGQgc29uLCBFcm5lc3QgSVYuIApMZWFybiB0byBzdG9wIGJsdW5kZXJpbmcgeW91ciBwaWVjZXMgYXdheSBhbmQgbGVhdmluZyB0aGVtIHVuZGVmZW5kZWQuIExlYXJuIHRvIHN0b3Agc2V0dGluZyB5b3VyIHBpZWNlcyB1cCBpbiBwaW5zIGFuZCBmb3JrcyB5b3VyIGVuZW15IGNhbiB0YWtlIGFkdmFudGFnZSBvZiAob3IgYXQgbGVhc3Qgc2VlIHRoZW0gY29taW5nKS4gCkNvZ25pdGl2ZSBhYmlsaXRpZXMgZGVjbGluZSBhcyBwYXJ0IG9mIHRoZSBub3JtYWwgYWdpbmcgcHJvY2Vzcy4gVmFyaW91cyBub24gcGhhcm1hY29sb2dpY2FsIGludGVydmVudGlvbnMgYXJlIGJlaW5nIHN0dWRpZWQgaW4gYW4gZWZmb3J0IHRvIGFtZWxpb3JhdGUgdGhpcyBjb2duaXRpdmUgZGVjbGluZS4gQSBwcmV2aW91cyBzdHVkeSBpbiBvdXIgbGFiIGZvdW5kIHRoYXQgb2xkZXIgYWR1bHRzIHdobyBwbGF5ZWQgYSBicmFpbiB0cmFpbmluZyBnYW1lIG9yIGEgdmlkZW8gcG9rZXIgZ2FtZSBzaG93ZWQgc2ltaWxhciBjb2duaXRpdmUgZ2FpbnMuIApBbWVyaWNhIGRvZXMgdGhpcyBhcm91bmQgdGhlIGdsb2JlIHRvIG90aGVyIGNvdW50cmllcyBhcyB3ZWxsLCBhbmQgYWxsIHRoaXMgUnVzc2lhbiBpbnRlcmZlcmVuY2UgaXMgZXhhY3RseSBob3cgb3RoZXIgcGVvcGxlIGluIGRpZmZlcmVudCBjb3VudHJpZXMgZmVlbCBhYm91dCBBbWVyaWNhLiBOb3cgd2Uga25vdyB3aGF0IGl0cyBsaWtlIGFuZCBob3cgaXRzIGRvbmUsIHdlIHNob3VsZCBrbm93IGJldHRlciB0aGFuIHRvIGZhbGwgZm9yIGl0LiBCdXQgcGVvcGxlIGdvIHRvd2FyZHMgdHJpYmFsaXNtLCBlbmQgb2YgdGhlIGRheSBpdHMgaW4gb3VyIG5hdHVyZSB0byBwaWNrIHNpZGVzIG9yIGEgZ3JvdXAsIGZyb20gb3VyIG5hdGlvbiBhbGwgdGhlIHdheSB0byBvdXIgb3duIGZhbWlsaWVzLiBUaGlzIGdldHMgZXhwbG9pdGVkIHRvIGNhdXNlIGEgZGl2aXNpb24gYW1vbmcgYWxsIG9mIHVzLCB0aGUgUnVzc2lhbnMgZGlkIGEgZ29vZCBqb2IgaW4gdGhhdC4gV2UgZ290dGEgZml4IHRoaXMgYW5kIG5vdCBwb2ludCBmaW5nZXJzIGF0IGVhY2ggb3RoZXIsIHdlIGFsbCBzdHJ1Z2dsZSBhbmQgdHJ5IHRvIHN1cnZpdmUgcmVnYXJkbGVzcyBpZiB5b3VyIGEgRGVtb2NyYXQgb3IgUmVwdWJsaWNhbi4gVGhlIHBvbGl0aWNpYW5zIHNob3VsZCBiZSBwcmVzc3VyZWQgbW9yZSB0byBkbyB0aGVpciBqb2IgYW5kIHByb3RlY3QgdXMgZnJvbSBmb3JlaWduIGluZmx1ZW5jZS4gV2UgaW5zdGVhZCB5ZWxsIGF0IGVhY2ggb3RoZXIuIEZvciB0aGUgcmVjb3JkIGkgYW0gbm90IGEgUmVwdWJsaWNhbiBvciBEZW1vY3JhdC4KQWN0dWFsbHkgbm90IHZlcnkgb2Z0ZW4uIEFuZCBpZiB5b3UgZ2V0IGEgcHJvZmVzc2lvbmFsIHRoZXJhcGlzdCBpdCB3b24gYmUgbWVudGlvbmVkIGF0IGFsbC4gSSBoYWQgaXQgaGFwcGVuIG9ubHkgYSBmZXcgdGltZXMsIGFuZCByZWFsbHkgaXQgd2FzbiByYWdpbmcgb3IgYW55dGhpbmcuIE9uY2UgaXQgaGFwcGVuZWQgd2hlbiB0aGUgZ3V5IHJvbGxlZCB0byBoaXMgYmFjaywgYnV0IHlvdSBjb3ZlcmVkIHRoZSB3aG9sZSB0aW1lIHNvIGl0cyBub3QgYSBiaWcgZGVhbC5JIGRpZG4gc2tpcCBhIGJlYXQgYmVjYXVzZSBJIGtub3cgdGhhdCBpdHMganVzdCBzb21ldGhpbmcgdGhlIGJvZHkgZG9lcyBhbmQgdGhlcmUgaXNuIGFueXRoaW5nIHNleHVhbCBhYm91dCBpdCwgYW5kIGlmIHRoZXJlIGlzIGFzIGxvbmcgYXMgaXQgc3RheXMgaW4geW91ciBoZWFkIHlvdSBjYW4gaW1hZ2luZSBhbGwgeW91IHdhbnQsIGJ1dCBJIHJlY29tbWVuZCBub3Qgc2F5aW5nIGFueXRoaW5nIGluYXBwcm9wcmlhdGUuSWYgdGhhdCB0aGUgb25seSByZWFzb24geW91IGhhdmVuIGdvdHRlbiBhIG1hc3NhZ2UgeWV0IEkgaG9wZSB5b3UgZ28uIApSZW1vdmUgZnJvbSB0aGUgb3ZlbiBhbmQgbGV0IHJlc3QgMTAgbWludXRlcyBiZWZvcmUgY3V0dGluZy4gClRoYW5rcy4uIApFdmVuIG5vdywgdGhlIGVhZ2VybmVzcyBhbmQgc3luZXJnaWVzIGFuZCBjcmVhdGl2aXR5IGZsb3dpbmcgYXJvdW5kIG1lIHN3ZWVwIG1lIGF3YXkgYW5kIHRha2UgbWUgdG8gaGVpZ2h0cyBJIG5ldmVyIHRob3VnaHQgSSBjb3VsZCByZWFjaC4gSXQgaXNuJ3QganVzdCB5b3VuZyBndXlzIHN0cmFpZ2h0IGZyb20gY29sbGVnZS4gCklyb25tYW5tazQyICAgMSBwb2ludHMgIHN1Ym1pdHRlZCAxMCBkYXlzIGFnbwpJIGhhdmUgaGFkIGEgbWFqb3Igcm9sZSBpbiB0aGUgaGFyZCBwYXJ0IG9mIGhpcyBzdWNjZXNzIGFuZCBvdXIgbGlmZXN0eWxlIGFuZCBJIHdhbnQgdG8gYmUgd2l0aCBoaW0gZm9yIHRoZSBmdW4gcGFydC5JIHdvdWxkIGFsc28gYmUgY29uY2VybmVkIGFib3V0IHRoZSB3YXkgaGUgc3BlbmRpbmcgbW9uZXksIGJ1dCB0aGF0IGJlc2lkZXMgdGhlIHBvaW50LiAKTmV2ZXIgbWluZCB0aGUgZmFjdCB0aGF0IG5vIERlbW9jcmF0IG9yIExpYmVyYWwgaXMgY2FtcGFpZ25pbmcgdG8gdGFrZSBndW5zLCB5ZXQgIHNhaWQgdGhhdCBtYWdpYyBwaHJhc2Ugb24gVFYgYW5kIHRoZSBSaWdodCBkaWRuIGV2ZW4gZmxpbmNoLi4gCklmLCBhZnRlciBmaW5kaW5nIG91dCBhYm91dCB0aGUgb3RoZXIgb2ZmZXIsIHRoZXkgdHJ5IGFuZCBjb3VudGVyIG9mZmVyIHlvdSBzb21ldGhpbmcgaGlnaGVyLiBEbyBub3QgdGFrZSBpdC4gCkNvbm5vbGx5IFdpbGwgUmV0aXJlIFdBU0hJTkdUT04sIEFwci4gClNvIHRoZSBHaXJsIFNjb3V0cyBhcmVuIHRocmlsbGVkIGFib3V0IHRoaXMgYW5kIHRyaWVkIHRvIHN0b3AgaXQgaW4gdGhlIGNvdXJ0cy4gU291cmNlOkkgd2FzIG9uY2UgYSBnaXJsIHNjb3V0IGFuZCB3YXMgamVhbG91cyB0aGF0IG15IGJyb3RoZXIgd2FzIGluIGJveSBzY291dHMuIFRoZXkgYnVpbHQgY3J5c3RhbCBwb3dlcmVkIHJhZGlvcyBhbmQgcGluZSBib3ggZGVyYnkgY2FycyBhbmQgbGVhcm5lZCB0byB0aWUga25vdHMgYW5kIGJ1aWxkIGZpcmVzIGFuZCBzdWNoLiBJIGxlYXJuZWQgdG8gbWFrZSBiZWFkZWQgbmVja2xhY2VzLCBzaW5nIGdvc3BlbCBzb25ncywgYW5kIGJha2UgY2FrZXMgaW4gYW4gb3Zlbi4gSXQgd2FzIGZ1Y2tpbmcgbGFtZSBsb2wsIGFuZCBteSBicm90aGVyIGhhZCBhIGJsYXN0LiBTbyB5ZWFoLCBJIHdvdWxkIGhhdmUganVtcGVkIG9uIHRoZSBjaGFuY2UgdG8gYmUgd2l0aCB0aGUgImJveSIgc2NvdXRzLgpBZnRlciBQb3dlciBvZiBWZXRvIHdpbiBhbmQgYSB1bmFuaW1vdXMgdm90ZSwgS2V2aW4gcGxvdCB3ZW50IG9mZiB3aXRob3V0IGEgaGl0Y2gsIGJ1dCB0aGVyZSB3YXMgbm8gd2F5IHRvIHN1c3BlY3QgdGhhdCBoZSBiZSBoZWFkaW5nIG91dCB0aGUgZG9vciByaWdodCBhZnRlciBCb2JieSBvbiB0aGUgdmVyeSBzYW1lIG5pZ2h0Li4gCklmIHBvc3NpYmxlLCBvZmZlciB0byBvcmdhbml6ZSBmcmVlIGxlY3R1cmVzIG9uIHRoZSBiZW5lZml0cyBvZiBtYXNzYWdlIHRoZXJhcHkgYXMgYSB3YXkgdG8gbWVldCBuZXcgY3VzdG9tZXJzLiAKSGlkaW5nIHlvdXIgY2FyZHMgZnJvbSBhIHBsYXllciBvciBwbGF5ZXJzIGlzIGFsc28gcG9vciBwb2tlciBldGlxdWV0dGUgYXMgcG9rZXIgaXMgY29uc2lkZXJlZCBhIGdlbnRsZW1hbidzIGdhbWUuIChGdWxsIEFuc3dlcikuIApQYXJ0b3V0IGRlcyBzYWNzIGRlIHRlcnJlLCBkZXMgdGFzIGRlIGJyYW5jaGFnZXMsIGRlcyBjaGFycmV0dGVzLCB1bmUgY2FsY2hlLCBldCBkZXMgcGV0aXRzIGNoYXBlYXV4IHBvaW50dXMgb3JhbmdlIGV0IGJsYW5jIHBvdXIgZW1wY2hlciBsJ2FycnQgZGVzIHZoaWN1bGVzLiAKTGlzdGVuIHRvIHlvdXIgZnJpZW5kLCBtYWtpbmcgZXllIGNvbnRhY3Qgd2hpbGUgeW91IGFyZSBjb252ZXJzaW5nLiBUYWxrIHRvIHRoZW0gYWJvdXQgdGhlaXIgcHJvYmxlbXMsIGFzayB0aGVtIGFib3V0IHdoYXQncyB3cm9uZywgYW5kIG9mZmVyIHRoZW0gc3VwcG9ydCBhbmQgYWR2aWNlIChidXQgb25seSB3aGVuIHRoZXkgYXNrIGZvciBpdCkuIApXYXMgdGhlIHdvcmxkIGZpcnN0IHN1Y2ggYWVyb2Ryb21lLCBhbmQgaXQgd2FzIHN0YWZmZWQgYnkgdGhlIGFtYXRldXIgcm9ja2V0IGNsdWIgb2YgR2VybWFueSB3aGljaCBjb21wb3NlZCBvZiBzdWNoIG5hbWVzIGFzIE5lYmVsICh3aG8gbmFtZWQgdGhlIFJha2V0ZW4gRmx1Z3BsYXR6KSwgUml0dGVyLCB2b24gQnJhdW4sIFJpZWRlbCwgSGVpbmlzaCwgYW5kIE9iZXJ0aCwgYW1vbmcgbWFueSBvdGhlcnMuIHBsYWNlIHdhcyBvcGVuZWQgaW4gMTkzMSBhbmQgc2F3IHRoZSBkZXZlbG9wbWVudCBvZiB0aGUgbGlxdWlkIGZ1ZWxlZCByb2NrZXQgaW4gR2VybWFueS4gCkhlIHN0aWxsIHRvbGQgaGVyIGFib3V0IHlvdS4gV2hpY2ggbWVhbnMgaGUga25vd3MgdGhlcmUgaXMgYSBib3VuZGFyeSBhbmQgaGUgZGlkbiBjcm9zcyBpdC4gSWYgaGUgbmV2ZXIgYmVlbiB3aXRoIGFub3RoZXIgd29tYW4gSSB3b3VsZCB0aGluayBoZSB3b3VsZCBmZWVsIGdvb2QgaWYgc29tZW9uZSBlbHNlIGZsaXJ0ZWQgd2l0aCBoaW0gYW5kIG1hZGUgaGltIGZlZWwgZ29vZC4gCkhvd2V2ZXIsIGZvciB0aGUgZGlzY2VybmluZyBhbmQgdGhlIHJpZ2h0bHkgbW90aXZhdGVkIHRoZSBzYWdhIG9mIHRoaXMgcmVtYXJrYWJsZSBhbmQgZGFyaW5nIGF0dGFjayBvbiB0aGUgcGVyc29uIG9mIHRoZSBwcmVzZW50IGFybXkgY2hpZWYgc2VydmVzIGFzIGFuIGV4YW1wbGUgb2YgdGhlIGhvbGxvd25lc3MgYW5kIGh5cG9jcmlzeSBvZiBhbGwgdGhvc2Ugd2hvIGhhdmUgbWFkZSBjYXJlZXJzIG91dCBvZiBwb3NpbmcgYXMgd2VsbCB3aXNoZXJzIG9mIHRoZSBhcm15LiAKUGx1cyB5b3UgaGF2ZSB3cml0dGVuIHNvbWUgbWlzbGVhZGluZyBpbmZvcm1hdGlvbi4KT24gV2VkbmVzZGF5LCB0aGUgbmV0d29yayBhbm5vdW5jZWQgdGhhdCB0aGV5IGhhZCBhcHByb3ZlZCBhIHBybyBsaWZlIGNvbW1lcmNpYWwgc3RhcnJpbmcgRmxvcmlkYSBxdWFydGVyYmFjayBUaW0gVGVib3csIGZ1bmRlZCBieSB0aGUgY29uc2VydmF0aXZlIENocmlzdGlhbiBncm91cCBGb2N1cyBvbiB0aGUgRmFtaWx5LCB0byBhaXIgZHVyaW5nIHRoZSBnYW1lLgpTaGUgY29tZXMgc2NyZWVjaGluZyBpbiB0aGUgcGFya2luZyBsb3QgaW4gYSBzdG9sZW4gY2FyIG11c2ljIGJsYXJpbmcgYWxsIHRoZSB3aW5kb3dzIGRvd24gYW5kIGRyaW5raW5nIGZyb20gYSB2ZXJ5IGJpZyBib3R0bGUgb2Ygd2hpc2tleS4gSSBnZXQgaW4gYW5kIEkgbGlrZSAid2hhdCB0aGUgZnVrIGFyZSB5b3UgZG9pbmciIHNoZSBzYXlzICIgSSBuZWVkIHlvdXIgaGVscCBJIHdhcyB0cnlpbmcgdG8gc2VsbCBzb21lIHB1c3N5IGxhc3QgbmlnaHQgYW5kIHdoZW4gZHVkZSB3ZW50IHRvIHVzZSB0aGUgYmF0aHJvb20gSSBub3RpY2VkIGEgcHVyc2Ugb24gdGhlIHNoZWxmIGFuZCB3b21lbiBzaG9lcyBpbiB0aGUgY29ybmVyLiBJIGZpZ3VyZWQgaGUgbXVzdCBraWxsIGhvb2tlcnMgYW5kIHdoZW4gaGUgY2FtZSBvdXQgSSBzdGFydGVkIHN0YWJiaW5nIGhpbSB3aXRoIG15IHJ1c3R5IGtuaWZlLiIgU2hlIHRoZW4gdGVsbHMgbWUgIiBJIHdhcyB3b25kZXJpbmcgaWYgeW91IHdvdWxkIGdvIHdpdGggbWUgdG8gY2hlY2sgb24gdGhlIGJvZHkgdG8gc2VlIGlmIGhlIHJlYWxseSBkZWFkLiAKVGhlc2UgYXJlIG5vdCBnZW5lcmljIHBva2VyIGNoaXBzIHRoYXQgeW91IGNhbiBwdXJjaGFzZSBpbiBhIGNvbnZlbmllbmNlIHN0b3JlLiAKVG8gaGVscCBnZXQgYSBwdW1wa2luIG9mIHRoZSByaWdodCBzaXplIGFuZCBzaGFwZSwgeW91IHNob3VsZCBhbHJlYWR5IGtub3cgd2hhdCB5b3Ugd2FudCB0aGUgY2FydmluZyB0byBsb29rIGxpa2Ugd2hlbiB5b3UncmUgZG9uZS4gCkludHJvZHVjaW5nIGluY3JlYXNpbmcgZWNvbm9taWMgc2FuY3Rpb25zLCBub3cgcmVmdXNpbmcgdG8gYnV5IHRoZWlyIGNvYWwgKHdoaWNoIGlzIGEgbWFqb3Igc291cmNlIG9mIGluY29tZSBmb3IgTkspLCBtb3ZpbmcgdGhvdXNhbmRzIG1vcmUgdHJvb3BzIGNsb3NlciB0byB0aGUgTksgYm9yZGVyIHRvIGNvbnRhaW4gdGhlIHBvdGVudGlhbCBob3JkZXMgb2YgTksgcmVmdWdlZXMgdGhhdCBtaWdodCBmbG9vZCB0aGF0IHdheSBpbiB0aGUgZXZlbnQgb2YgYW4gYXR0YWNrLi4gCkFmdGVyIG15IHBjdCB0aHJ1IEkgaGFkIG9ubHkgZmFpbHVyZXMgaW4gdGhlIGRjZiBncmlkIG1hdGVyaWFsIGFuZCBub25lIGluIHRoZSB4cGFjLiAKRWRpdDogZm91bmQgc29tZSByb3VnaCBudW1iZXJzLiBGcm9tIEFndWEgRHVsY2UgKGhhcyBncm9jZXJ5IHN0b3JlIGFuZCBhIGZldyByZXN0YXVyYW50cykgaXQgaXMgMjQgbWlsZXMgdG8gQ2FzYSBkZSBMdW5hIChkb25hdGlvbiBiYXNlZCBjYW1waW5nLCBkaW5uZXIgYW5kIGJyZWFrZmFzdCwgdGhlcmUgaXMgYSByZXN0YXVyYW50IGluIHRvd24gd2l0aCBncmVhdCBtaWxrc2hha2VzIGFuZCBmb29kLCBzbWFsbCBjb252ZW5pZW5jZSBzdG9yZSkuIEZyb20gdGhlcmUgaXQgaXMgMzYgbWlsZXMgdG8gSGlrZXIgVG93biAodGhleSBnaXZlIHJpZGVzIHRvIGEgZ3JvY2VyeSBzdG9yZSwgSSBjYWxsZWQgYSBkaWZmZXJlbnQgb25lIGZyb20gdGhlIHJvYWQgY3Jvc3NpbmcgYW5kIHRoZXkgd2lsbCBwaWNrIHlvdSB1cCBhbmQgeW91IGNhbiB0ZW50IGluIHRoZWlyIGZlbmNlZCBvZmYgc2lkZSB5YXJkIGZvciBmcmVlLCBXZWUgVmlsIG1hcmtldCB3aGljaCB3YXMgcmVhc29uYWJseSBwcmljZWQgYW5kIG1ha2VzIGEgZ3JlYXQgYnVyZ2VyKS4gCkpvc2ggSGF3bGV5IGNhcHBlZCBhIHR1bXVsdHVvdXMgd2VlayBGcmlkYXkgd2l0aCBoaXMgZGVidXQgYXBwZWFyYW5jZSBhdCB0aGUgQW1lcmljYW4gQ29uc2VydmF0aXZlIFVuaW9uJ3MgQ1BBQyBjb25mZXJlbmNlICAgYW5kIHJlY2VpdmluZyBhIHN1YnBvZW5hIGFzIGhlIGxlZnQgdGhlIHN0YWdlLgpBc3N1bWluZyBpdCBpcyBhIHN0YW5kYXJkIHBva2VyIGRlY2sgd2l0aCA1MiBjYXJkcyBhbmQgNCBhY2VzIFRoZSBwcm9iYWJpbGl0eSBvZiBnZXR0aW5nIHlvdXIgZmlyc3QgY2FyZCBhbiBhY2UgaXMgPSA0LzUyIE92ZXIgaGVyZSB5b3UgbmVlZCB0byByZXJlYWQgeW91ciBxdWVzdGlvbnMuIFRvdGFsIGNhcmQgaXMgbm93IDUxIHdpdGggMyBhY2VzIG9ubHkgc28gdGhlIHRvdGFsIHByb2JhYmlsaXR5IG9mIGdldHRpbmcgYm90aCBjYXJkcyBhbiBhY2UgaXMgKDQvNTIgeCAzLzUxKSBob3BlIGkgaGVscC4gKEZ1bGwgQW5zd2VyKS4gClRoZSBwaG90byBvZiBoaW0gc3RhbmRpbmcgd2l0aCBoaXMgcG9zdGVyIHRoYXQgbW9ybmluZyBpcyBoZWFydGJyZWFraW5nLiBJIGtub3cgcGVvcGxlIG9uIGhlcmUgdGhpbmsgd2Ugc2hvdWxkIGJhY2sgb2ZmIGZyb20gdGhlIHN0ZXBtb20sIGJ1dCBzb21ldGhpbmcgYWJvdXQgaGVyIGJlaGF2aW9yIHJlYWxseSBib3RoZXJzIG1lLiAKVGhlcmUgc2hvdWxkIGFsc28gYmUgcm9vbSBpbiBmcm9udCBvZiB0aGUgdG9lcywgYXQgbGVhc3QgMy84IiB0byAxLzIiIGJldHdlZW4geW91ciBsb25nZXN0IHRvZSBhbmQgdGhlIGZyb250IG9mIHRoZSBzaG9lIHdoZW4geW91IGFyZSBzdGFuZGluZy4gClByb3MgYW5kIGNvbnMuIklmIHRoZXkgYXJlIHNvIGh1Z2UsIHRoZXkgbXVzdCBhdCBsZWFzdCBiZSBkZWNlbnQgcHJlZGF0b3JzLiIgTm8uIE5vLiBUaGUgbW9zdCBkYW5nZXJvdXMgdGhpbmcgYWJvdXQgdGhlbSBpcywgYXMgeW91IG1heSBoYXZlIGd1ZXNzZWQsIHRoZWlyIHN0dXBpZGl0eS4gVGhleSBoYXZlIGNhdXNlZCB0aGUgZGVhdGggb2Ygb25lIHBlcnNvbiBiZWZvcmUuIEJlY2F1c2UgaXQganVtcGVkIG9udG8gYSBib2F0LiBPbiBhIGh1bWFuLiBBbmQgaW4gMjAwNSBpdCBkZWNpZGVkIHRvIHJlbGl2ZSBpdHMgbWlnaHR5IGdsb3J5IGRheXMgYW5kIGRvIGl0IGFnYWluLCB0aGlzIHRpbWUgbGFuZGluZyBvbiBhIGZvdXIgeWVhciBvbGQgYm95LiAKTmVlZCBtb3JlIG5pY2UgZ3V5IGludmVzdG9ycyBsaWtlIEJyZXR0IGluIHRoZSBidXNpbmVzcyB3b3JsZC4gSGUgcHJvdmVzIHlvdSBkb24gaGF2ZSB0byBiZSBhbiBhIHRvIGJlIGdvb2QgYXQgYnVzaW5lc3MuIG5leHQgU2FsIERlYnVzIGlzIGZvY3VzZWQgb24gaGl0dGluZyBtb3JlIHRyYWRlIGFuZCBjb25zdW1lciBzaG93cyBpbiB0aGUgbmV4dCB5ZWFyIHRvIGhlbHAgYm9vc3QgZGlzdHJpYnV0aW9uIGNoYW5uZWxzLiBIaXMgMTAgeWVhciBwbGFuIGlzIHRvIGdyb3cgaGlzIHdob2xlc2FsZSBuZXR3b3JrIHRvIGluY2x1ZGUgdXB3YXJkIG9mIDEsMDAwIHN1cHBsaWVycyBhbmQgcmV2ZW51ZXMgaW4gdGhlICQ1MCBtaWxsaW9uIHRvICQxMDAgbWlsbGlvbiByYW5nZS4KSSBidWlsdCBhIHJhdGhlciBjb21wbGljYXRlZCBjYWxlbmRhciBpbiBFeGNlbCBhIHdoaWxlIGJhY2sgZm9yIG15IGJpbmFyeSBzdGFyIHN5c3RlbSBjYWxlbmRhci4gCkFueXdheXMsIHRoZXJlIEkgd2FzLCBtaW5kaW5nIG15IGJ1c2luZXNzLCBmaWRkbGluZyB3aXRoIG15IHNxdWF0IHN0YW5jZSBhbmQgd2hhdG5vdCB3aGVuIGEgZ3ltIHNlcnZpY2UgZ3V5IHdhbGtzIHVwIHRvIG1lIGFuZCBvcGVucyB0aGUgY29udmVyc2F0aW9uIHdpdGggIkkganVzdCBnb25uYSBnaXZlIHlvdSBzb21lIHBvaW50ZXJzLiBJIGV2ZW4gZ29pbmcgdG8gcHJldGVuZCBJIGRpZG4gbm90aWNlIHlvdSBiYXJlZm9vdCIuIApIZSBsaXZlZCBvdXQgdGhpcyB3YXk7IGhlIHVzZWQgdG8gc3RvcCBpbiB0aGUgc3RvcmUgZmFpcmx5IG9mdGVuLCB3b3VsZCBjaGF0IHNvbWV0aW1lcyB3aXRoIHRoZSBjbGVyayB3aGlsZSBtYWtpbmcgaGlzIHB1cmNoYXNlcy4gCkkgZXhwZWN0ZWQgYSBsaXR0bGUgbW9yZSBmcm9tIGhpbS4uIApUaGUgcmVndWxhcnMgbGlrZSB0byBwbGF5IG1pbmQgZ2FtZXMgd2l0aCBvdGhlciBiaWRkZXJzLiAKTXkgbmVpZ2hib3VyIHdhcyBhIGRpY2ssIGFsd2F5cyBmaWdodGluZyBvdmVyIHdoaWNoIGxhbmQgYW5kIGhlIHdhcyBhbHdheXMgd3JvbmcuIApSb21lIHdlbnQgZnJvbSBhIGtpbmdkb20gdG8gYSByZXB1YmxpYyB0byBhIGVtcGlyZSwgYW5kIGV2ZW4gd2l0aGluIHRoZXNlIHBlcmlvZHMgdW5kZXJ3ZW50IHZpZ29yb3VzIGRlYmF0ZSBhbmQgcmVmb3Jtcy4uIApBbHRob3VnaCB0aGUgbW92aWUgbWlnaHQgaGF2ZSBiZW5lZml0dGVkIGZyb20gYSBtb3JlIGRldGFpbGVkIGV4cGxvcmF0aW9uIG9mIHRoZSBjb25mbGljdCwgdGltZSBjb25zdHJhaW50cyBhbGxvdyBmb3Igbm8gbW9yZSB0aGFuIGEgcXVpY2sgb3ZlcnZpZXcuIApSYW5kb21tYW45NiAgMSBwb2ludCAgc3VibWl0dGVkIDIwIGhvdXJzIGFnbwpUaGlzIG1lYW5zIHRoYXQgeW91IHdpbGwgaGF2ZSB0aGUgc2FtZSBvZGRzIG9mIGdldHRpbmcgYSBjZXJ0YWluIGNhcmQgY29tYmluYXRpb24sIGp1c3QgYXMgaW4gYSBsaXZlIHBva2VyIGdhbWUuLiAKSWYgeW91IHNlbGVjdGVkIGEgcHJldHR5IGZyYWdpbGUgY292ZXIgbWF0ZXJpYWwgZm9yIHlvdXIgbWljcm9iZWFkcywgeW91IGNhbid0IGV4cGVjdCB0aGUgc2V3aW5nIG1hY2hpbmUgdG8gZG8gYWxsIHRoYXQgaGFuZGl3b3JrIGZvciB5b3UuIElmIHlvdSBhcmUgYSBrbml0dGluZyBmYW4sIHlvdSBjYW4gdHJ5IGJ1bXAgc3RpdGNoaW5nLiAKU28uIGxvb2sgYXQgYWxsIHRoYXQsIGFuZCBmaWd1cmUgb3V0IHdoYXQgImZhaXIiIGNvbXBlbnNhdGlvbiBmb3IgYSBwcm9zdGl0dXRlIGlzLiBFdmVyeSBzaW5nbGUgb25lIG9mIHRob3NlIGZhY3RvcnMgaXMgc29tZXRoaW5nIHRoYXQgdXN1YWxseSByYWlzZXMgc2FsYXJ5IG9yIHByaWNlLiBJdCBkb2VzbiB0YWtlIG11Y2ggdG8gcmVhbGl6ZSB0aGF0IGV2ZW4gbGVhdmluZyBhc2lkZSBzb2NpYWwgc3RpZ21hLCB0aGlzIGRyZWFtIGluZHVzdHJ5IGlzIGp1c3QgdGhhdCAgIGEgZHJlYW0uIEF0IHRoZSBwcmljZSB3aGVyZSBwcm9zdGl0dXRpb24gaXMgZmFpcmx5IGNvbXBlbnNhdGVkLCBtYW55IHBlb3BsZSB3aG8gd291bGQgd2FudCB0byBidXkgc2VydmljZXMgY291bGQgbm90IGFmZm9yZCB0aGVtLiB3aGljaCBpcyBwcm9iYWJseSB3aHkgdHJhZmZpY2tpbmcgaXMgYSBodWdlIGlzc3VlIGV2ZW4gd2hlcmUgaXQgbGVnYWwuClBhY3F1aWFvIHRvb2sgdGhlIGJlc3Qgd2VsdGVyd2VpZ2h0IGNoYWxsZW5nZSBhdmFpbGFibGUgZm9yIE1hcmNoIDEzLCBsZWF2aW5nIE1heXdlYXRoZXIgd2l0aCB2ZXJ5IGxpdHRsZSBjaG9pY2Ugb2YgbGFuZGluZyBoaW1zZWxmIGEgY29udmluY2luZyBtYXRjaC4gCkRheXMgbGF0ZXIgaGUgd2FzIHRlbGxpbmcgaGlzIGZvbGxvd2VycyB0aGF0IGhlIHdhcyBkcm9wcGluZyBoaXMgY2hpZWYgZXhlY3V0aXZlIG9mZmljZXIgdGl0bGUgaW4gZmF2b3VyIG9mICJ3b3JrZXIuIgpJIGZlZWwgc28gbXVjaCBtb3JlIGFsaXZlIGFuZCBzbyBtdWNoIG1vcmUgY2FsbS4gSSdtIG5vdCBvbiBhIHRpbWUgc2NoZWR1bGUuIApJZiBJIHdhbnRlZCB0YXggYWR2aXNlIGF0IDZQTSBvbiBUaHVyc2RheSBJIGdvIGRvd24gdG8gSCBCbG9jayBvciBjYWxsIHRoZSBJUlMuIE5vYm9keSBpbiB0aGUgbWlkZGxlIGNsYXNzIGhhcyB0aG91Z2h0IGFib3V0IGRvaW5nIHRoZSB3aWxkIHNoaXQgeW91IHRlbGxpbmcgcGVvcGxlIHRvIGRvIEJFQ0FVU0UgSVQgRE9FU04gRlVDS0lORyBNQUtFIFNFTlNFLiBOTyBPTkUgSU4gVEhFSVIgUklHSFQgTUlORCBXT1VMRCBHQU1CTEUgJDIsNTAwIElOIE9SREVSIFRPIE1BS0UgJDIsNTkwIFdIRU4gVEhFWSBHVUFSQU5URUVEIFRPIEdFVCAkMiw1MDAgRk9SIExJVEVSQUxMWSBOT1QgQ0hBTkdJTkcgQSBUSElORy4uIApBbGwgb2YgdGhlIGRyYWdvbnMgbWFkZSBhZ2dyZXNzaXZlIG9mZmVycywgYnV0IEppbSBUcmVsaXZpbmcsIG93bmVyIG9mIEJvc3RvbiBQaXp6YSBJbnRlcm5hdGlvbmFsIEluYy4sIG9mZmVyZWQgZXhhY3RseSB3aGF0IHRoZXkgYXNrZWQgZm9yIGFuZCB0aGV5IGFjY2VwdGVkLiAKQW15YWJvaSAgMSBwb2ludCAgc3VibWl0dGVkIDEgbW9udGggYWdvCk9sZCBkb2dzIGFuZCBuZXJ2b3VzIGRvZ3MgYXJlIGxlZnQgdG8gZ28gb3V0c2lkZSBsYXN0IGFuZCBhcmUgb25seSB0YWtlbiBvdXQgZm9yIGEgbWludXRlIG9yIHNvLCB3aGlsZSB0aGUgeW91bmcgZG9ncyAoYW5kIGVtcGxveWVlIGRvZ3MpIGFyZSBsZXQgb3V0c2lkZSBmb3IgMjAgMzAgbWludXRlcy4gClRoZSBvbmx5IHRoaW5nIHdlIHNlZSBvZiBQQyBpcyB0aGUgaGFyZGNvcmUgc2lkZSBvZiBpdC4gCkV2ZXJ5IHRpbWUgaGUgaHVuZ3J5LCBoZSBzaG91bGQgZHJpbmsgYSBidW5jaCBvZiB3YXRlci4gV2hlbiBoZSBydW5zIG91dCBvZiB3YXRlciwgaGUgc2hvdWxkIHJlZmlsbCB0aGUgYm90dGxlIGltbWVkaWF0ZWx5IHNvIHRoYXQgaXQgYWx3YXlzIHRoZSBtb3N0IGNvbnZlbmllbnQuIFdoZW4gaGUgYWN0dWFsbHkgaHVuZ3J5LCBoZSBlYXQsIGJ1dCBoZSBzdGFydCB0byBlYXQgbGVzcyBhbmQgZmVlbCBzYXRpc2ZpZWQgZm9yIGxvbmdlci4gClNvIHllcyBzaGlwcyBhcmUgaW1wb3J0YW50IHRvIG1lLiBJIHdhbnQgdG8gZG8gdXBncmFkZXMgdGhvdWdoIGFuZCBub3QgbmVjZXNzYXJpbHkganVzdCBrZWVwIGJ1eWluZyBuZXcgc2hpcHMuCkdldCByZWRkaXQgcHJlbWl1bVRoaXMgc3VicmVkZGl0IHdhcyBmb3JtZWQgZnJvbSBhIGRlc2lyZSB0byB0YWtlIHNraWxscyBvciB0YWxlbnQgdGhhdCBtYXliZSB5b3Uga25vdyB5b3UgaGF2ZSwgb3IgbWF5YmUgeW91IGp1c3QgZGlzY292ZXJpbmcsIGJ1dCB3aXNoIHRvIGRldmVsb3Agb3IgYnJhaW5zdG9ybSBvciBsZWFybiBtb3JlIG9yIGJlIGluc3BpcmVkIG9yIGJlIGNyaXRpcXVlZCBvciBiZSB2dWxuZXJhYmxlIG9yIGJvdW5jZSBpZGVhcyBhcm91bmQgd2l0aCBvdGhlcnMgaW4gYSBtb3JlIGdlb2dyYXBoaWNhbGx5IGZhbWlsaWFyIGxvY2F0aW9uLgpQYXJhZG94IGdvdCBhIGxvdCBvZiBsb3ZlIGRlc3BpdGUgdGVycmlibGUgcmVsZWFzZXMgYmVjYXVzZSB0aGV5IHN1cHBvcnRlZCB0aGUgZ2FtZSBhbmQgYSB5ZWFyIGFmdGVyIHJlbGVhc2UgaXQgd2FzIGdyZWF0LiAKVGl0bGUgc2F5cyBpdCBhbGwsIDEwIGRvbGxhciBjb3ZlciwgYWxsIGFnZXMsIGRvb3JzIG9wZW4gYXQgNwpTby4gbG9vayBhdCBhbGwgdGhhdCwgYW5kIGZpZ3VyZSBvdXQgd2hhdCAiZmFpciIgY29tcGVuc2F0aW9uIGZvciBhIHByb3N0aXR1dGUgaXMuIEV2ZXJ5IHNpbmdsZSBvbmUgb2YgdGhvc2UgZmFjdG9ycyBpcyBzb21ldGhpbmcgdGhhdCB1c3VhbGx5IHJhaXNlcyBzYWxhcnkgb3IgcHJpY2UuIEl0IGRvZXNuIHRha2UgbXVjaCB0byByZWFsaXplIHRoYXQgZXZlbiBsZWF2aW5nIGFzaWRlIHNvY2lhbCBzdGlnbWEsIHRoaXMgZHJlYW0gaW5kdXN0cnkgaXMganVzdCB0aGF0ICAgYSBkcmVhbS4gQXQgdGhlIHByaWNlIHdoZXJlIHByb3N0aXR1dGlvbiBpcyBmYWlybHkgY29tcGVuc2F0ZWQsIG1hbnkgcGVvcGxlIHdobyB3b3VsZCB3YW50IHRvIGJ1eSBzZXJ2aWNlcyBjb3VsZCBub3QgYWZmb3JkIHRoZW0uIHdoaWNoIGlzIHByb2JhYmx5IHdoeSB0cmFmZmlja2luZyBpcyBhIGh1Z2UgaXNzdWUgZXZlbiB3aGVyZSBpdCBsZWdhbC4KVHJhbnNsYXRlZCwgaGUgd2FzIHRoZSBkaXJ0IGJvc3MuIApJIHRoaW5rIHdoYXRzIGZhc2NpbmF0aW5nIGlzIHRoZSBwb3B1bGFyaXR5IGFuZCBwcm9taW5lbmNlIG9mIEdheSBMaW5nby4KT25lIHRoaW5nIHRoYXQgZGlzdGluZ3Vpc2hlcyBIb3phbmEgZnJvbSBvdGhlciBzb2NpYWwgc2l0ZXMgb3IgZXZlbiB0cmFkaXRpb25hbCBkaXNjdXNzaW9uIGZvcnVtcyBpcyB0aGF0IG9ubHkgYWRtaW5pc3RyYXRvcnMgYW5kIG1vZGVyYXRvcnMgY2FuIHN0YXJ0IGRpc2N1c3Npb24gdG9waWNzLCBtZW1iZXJzIGNhbiBvbmx5IHJlcGx5IGluIHRoZSBjb21tZW50czsgc28gaXQgd291bGQgaGVscCBpZiB0aGVyZSBhcmUgaXMgbW9yZSB0aGFuIG9uZSBwZXJzb24gcnVubmluZyB0aGluZ3MgdG8ga2VlcCBpdCBhY3RpdmUuIE90aGVycyBncmlwIGl0IGJ1dCBqdXN0IGhvbGQgb250byBpdCBhbmQgY29wZS4gUGxlYXNlIGdpdmUgbWUgYW5kIGhpbSBzdHJlbmd0aCB0byB3b3JrIHRocm91Z2ggdGhpcyBkaWZmaWN1bHQgdGltZS4gCkJ1dCBpZiBtb20gd2FzIG5vc3RhbGdpYyBmb3IgSXRhbHkgc2hlIGRpZG4ndCBzaG93IGl0IHRvIGhlciBjaGlsZHJlbiwgYWx0aG91Z2ggbG9va2luZyBiYWNrIEkgcmVtZW1iZXIgdGhlIG1hbnkgcGFyY2VscyBJIGhlbHBlZCBwdXQgdG9nZXRoZXIgZm9yIGhlciB0byBzZW5kIGhvbWUuIFRoZSBsZXR0ZXJzIHRoYXQgY2FtZSBzcG9yYWRpY2FsbHkgdGhhdCBzaGUgdHJlYXN1cmVkIGFuZCB0aGUgc29uZ3MgcGxheWVkIGRhaWx5IG9uIHRoZSBwaG9ub2dyYXBoIHdpdGggcmVjb3JkcyBwdXJjaGFzZWQgZnJvbSBCYXJ0b24ncyBtdXNpYyBzdG9yZSwgcmVjb3JkcyBvZiBJdGFsaWFuIGFydGlzdHMgdGhhdCBzYW5nIGFib3V0IG1pc3NpbmcgcGFyZW50cyBhbmQgY291bnRyeS4gCiJXZSBjb3VsZCBub3QgaGF2ZSBwdXQgb24gdGhpcyBiaWcgb2YgYW4gZXZlbnQgd2l0aG91dCBoZWxwIGZyb20gQnJlbmRhIEdyaXNieSwiIHNhaWQgRmFycmVsbC4gR3Jpc2J5IGlzIG93bmVyIG9mIE1vb25saWdodCBCUE8gYW5kIFBldCBQYXJhZGlzZSwgQ2VudHJhbCBPcmVnb24ncyBsdXh1cnkgcGV0IHJlc29ydC4gCkFmdGVyIGNob29zaW5nIHlvdXIgYWNjb21wbGljZXMgaW4geW91ciBtZW5hZ2UgYSB0cm9pcywgeW91IHRha2UgYSBsaWZ0IHRvIHRoZSByb29tLiBZZXMsIGl0IGp1c3QgYSBzaG9waG91c2UgYnV0IGl0IGhhcyBhbiBlbGV2YXRvci4gClRoZSByZWFzb24gaGUgbWFrZXMgbW9uZXkgaXMgdGhhdCB0aGUgcmVzdCBvZiB0aGUgcGxheWVycyBhcmUgd2F5IHRvbyBsb29zZSBhbmQgd2lsbGluZyB0byBzdGFjayBvZmYgbGlnaHQgd2hlbiBpdCdzIGNsZWFyIGFzIGRheSB0aGF0IGhlIGhhcyBUUCBiZWF0LiBIaXMgc3RyYXRlZ3kgaXMgdG8gcmFpc2UgYSBuYXJyb3cgcmFuZ2Ugb2YgMTBzKyBhbmQgQVFzKy4gCkp1c3QgYSBmZXcgIkluIGdlbmVyYWwiIHRpcHMuIFNoaWVsZHMgYXJlIGFib3V0IHRoZSB3b3JzdCB0aGluZyB5b3UgY2FuIHB1dCBvbiBhbiBleHBvc2VkIHN1cmZhY2UsIHRoZXkgaGF2ZSAwIGFybW9yIGFuZCBuZXh0IHRvIG5vIGhlYWx0aC4KQnNzMTIzNDU2ICAzIHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ28KVGhleSBsYXVnaGVkIGl0IG9mZiBhbmQgY2FtZSBiYWNrIGFib3V0IGFuIGhvdXIgbGF0ZXIgYW5kIEkgaGFkIGNvbXBsZXRlZCB0aGUgZ2FtZSBvbiBbdGhlIGhhcmRlc3RdIGRpZmZpY3VsdHkuIApJZiBzb21lb25lIGlzIHJlYWxseSBhIGJhZCBwb3N0ZXIsIGl0IGJlIGNsZWFyIHRocm91Z2ggdGhlaXIgcG9zdHMuIFRoYXQgbWFrZXMgYSBzdHJvbmdlciBjYXNlIG92ZXJhbGwgZm9yIHRoZWlyIGJhbm5pbmcgYW55d2F5LCBhbmQgdXNlcnMgY2FuIHB1bGwgdGhlICJJIGEgdmljdGltIGp1c3QgYmVjYXVzZSBJIHBvc3QgaW4geC95L3ohIiBjYXJkLi4gCkhvd2V2ZXIsIHdpdGggc3VwcGxlbWVudHMgaXQncyBlYXN5LiAKTWF0bG91YmkgcGxhY2lkbHkga2lja3MgdGhlIHRhYmxlLiAKSSBhbSBub3Qgb3JpZ2luYWxseSBmcm9tIHRoZSBEYXl0b24gYXJlYSBidXQgZnJvbSBTb3V0aGVybiBDQS4gSSBzYXcgYWxsIHNvcnRzIG9mIDgwIGhpdCBtb3ZpZXMgYXQgdGhlIG1hbGwuIEl0IHdhcyBsaWtlIHRoZSAidGVlbiB0aGluZyIgdG8gZG8gaW4gdGhlIG1pZCAxOTgwcyBpbiBTb0NhbCAgIGdvIGhhbmcgYXQgdGhlIG1hbGwgZm9yIHRoZSBkYXkuIApZb3UgYWRlcHQgYXQgcG9zdGluZyBuZXcgcXVlc3Rpb25zIHNvIHlvdSBjYW4gaWdub3JlIGV2ZXJ5dGhpbmcgc2FpZCBwcmlvci4gClNhbGVzLiBUaGUgaW5pdGlhbCBjbGFpbSByZXNwb25kZWQgdG8gd2FzIHRoYXQgcGx1ZyBpbiBzdWJzaWRpZXMgYXQgYW55IGxldmVsLCBldmVuIHVwIHRvIGluZmluaXR5LCBhcmUgZ29vZCBiZWNhdXNlIHN1cHBvc2VkIG9pbCBzdWJzaWRpZXMgc3VwcG9zZWRseSBjb25zdGl0dXRlIHN1YnNpZGllcyBmb3IgY29udmVudGlvbmFsIGRyaXZldHJhaW4gdmVoaWNsZSBzYWxlcy4gClBvdXIgbGUgY2hyaXN0aWFuaXNtZSwgYmllbiBxdSdvbiBpbnNpc3RlIHN1ciBsJ2ltcG9ydGFuY2UgZGUgbGEgdG9pbGV0dGUgZnVucmFpcmUsIGxlIHBhcmZ1bSBlc3QgbGEgc3Vic3RhbmNlIHF1aSBwZXJtZXQgbGEgcnN1cnJlY3Rpb24gYXBycyBsYSBtb3J0IHBoeXNpcXVlIGR1IGNvcnBzLiBDZXBlbmRhbnQsIGwgbyBsZSBjaHJpc3RpYW5pc21lIGRwcmNpZSBsJ29kb3JhdCwgdW4gQ2FudGlxdWUgZGVzIGNhbnRpcXVlcyBuZSBjb250aWVudCBhdWN1bmUgY2Vuc3VyZSBlbiBjZSBxdWkgY29uY2VybmUgIGNlIHF1aSBlbWJlbGxpdCBsZSBjb3JwcyBldCBsZSByZW5kIGRzaXJhYmxlICAoNykuIEJpZW4gYXUgY29udHJhaXJlICEKQXQgQnlyb24gQmF5IEJyZXdlcnksIDEgU2tpbm5lcnMgU2hvb3QgUmQsIEJ5cm9uIEJheSwgb24gU2F0dXJkYXksIE5vdmVtYmVyIDI2LCBmcm9tIDVwbS4gM3JkIEFubnVhbCBNbyBNYXN0ZXJzIE1lbiBIZWFsdGggQnlyb24gQmF5IEZVTiByYWlzZXIgcGFydHk6IFRoaXMgeWVhciBldmVudCB3aWxsIGhhdmUgYSAxOTcwcyB0aGVtZSwgc28gZ2V0IHlvdXIgZmxhcmVzIGFuZCBmbG93ZXJzIG91dC4gClRoZSBwbGF5ZXIgaXMgdHJ5aW5nIHRvIGNvbnZleSB1bmNlcnRhaW50eSBhYm91dCB0aGUgYmV0LiAKRXRjLiBUaGF0IHdoeSBTSldzIGFyZSBnZXR0aW5nIHRoZWlyIHdheS4gClRoZXkgd2VyZSBvZnRlbiB1c2VkIHNpbWlsYXJseSB0byBzaG9wcGluZyBtYWxscywgd2l0aCB0aGUgb3V0c2lkZSB3YWxsIG9mIHRoZSBiYXRocyBiZWluZyBjb3ZlcmVkIGluIHNob3BzIHNlbGxpbmcgZm9vZCwgcGVyZnVtZXMsIGNsb3RoZXMsIGV0Yy4gCkV2ZXJ5dGhpbmcgSSBzYWlkIHdhcyB0aGUgdHJ1dGguIEZhciBmcm9tIHRhbGtpbmcgb3V0IG15IGFzcy4KU28gbXkgcXVlc3Rpb24gKGNyaXRpcXVlKSBpc24gZm9yIG1lIGJ1dCBmb3IgbXkgYmVzdCBmcmllbmQuIApUaGUgdGVybSB3ZWVkIGN1bHR1cmUgaXMgZXhhY3RseSB3aGF0IGl0IHNvdW5kcyBsaWtlLCBhbnRpIGxpcXVvciwgbWlyYWNsZSBjdXJlIGZvciBldmVyeXRoaW5nLCBib2IgbWFybGV5IChhY3R1YWxseSBpdCBydWluZWQgYm9iIG1hcmxleSBmb3IgbWUpLCByZWdnYWUsIFJhc3RhLCBkcmVhZGxvY2tzLCBwb2NodWxpIChzcC4pLCAnd2FrZSBhbmQgYmFrZScsIGhpZ2ggYWxsIHRoZSB0aW1lLCBldGMuIFRob3NlIHNheWluZyBpbSBiZWluZyB2YWd1ZSBrbm93IHdoYXQgSSdtIHRhbGtpbmcgYWJvdXQuCkNlbGxwaG9uZXMgYW5kIGNhbWVyYXMgYXJlIG11c3QgaGF2ZXMgdG8gY2FwdHVyZSwgdGFrZSBob21lIGFuZCByZSBjcmVhdGUgc29tZSBvZiB0aGVzZSBhbWF6aW5nIGlkZWFzIGluIG91ciBvd24gaG9tZXMgYW5kIGdhcmRlbnMuVGhlcmUgYmVlbiBhIGNoYW5nZSBpbiBzaG93IG93bmVyc2hpcCBvdmVyIHRoZSBwYXN0IHllYXIuIApFdmVyeSB0aW1lIHRoZXkgZ2V0IGhpdCBieSBpbnZpc2libGUgc3RyaWtlcywgdGhleSBhcmUgbGVzcyBpbmNsaW5lZCB0byBjb21lIGZvcndhcmQuIElmIE1heXdlYXRoZXIgcmVhbGx5IGhhZCBwaWxsb3cgaGFuZHMsIHRoZXkgd291bGQgYWxsIHJ1c2ggaGltLk9uZSBjYW4gc3VyZWx5IGRpc2FncmVlIHdpdGggZXZlcnkgd29yZCBJIGhhdmUgd3JpdHRlbiwgYXMgaXMgdGhlaXIgcmlnaHQuIApJdCdzIGdvb2QgZm9vZCBhbmQgd29ydGggdHJ5aW5nIG91dCBpZiB5b3UncmUgd2FudGluZyByZWFsIE1leGljYW4gZm9vZC4gCkNhdHMgY2FuIHJlYWN0IHZlcnl5eXl5IGRpZmZlcmVudGx5IGFuZCBhYm5vcm1hbCBpbiBuZXcgY2lyY3Vtc3RhbmNlcyBhbmQgaGUgbmVlZHMgc29tZXdoZXJlIGhlIHRydXN0cyB0byBnbyBpbnNpZGUgKGhlIGNvdWxkIGxhc2ggb3V0IGF0IHlvdSwgc3RhcnQgZnJlYWtpbmcgb3V0LCBnZXQgb3V0IG9mIGhpcyBoYXJuZXNzISkgWW91IGNhbiBnZXQgaGltIHVzZWQgdG8gaXQgYmVmb3JlIHlvdSBnbywgYnV0IGhlIGRlZmluaXRlbHkgbmVlZHMgdG8gYmUgaW5zaWRlIHNvbWV0aGluZyEgWW91IGNhbiBqdXN0IGNhcnJ5IGhpbSEhISBJdCB3aWxsIGNhdXNlIHlvdSBhIHdob2xlIHN3YXJtIG9mIHByb2JsZW1zIGlmIHlvdSB0aGluayB5b3UgY2FuIGp1c3QgdGFrZSBoaW0gb3V0LiAKTG9rZXNoJ3MgU2hlaG5haSBwbGF5aW5nIGlzIGNoYXJhY3Rlcml6ZWQgYnkgYW4gaW1tYWN1bGF0ZSBibG93aW5nIGFuZCBmaW5nZXJpbmcgdGVjaG5pcXVlcywgY29tbWFuZCBvdmVyIExheWEsIFJpY2huZXNzIGFuZCBjbGFyaXR5IG9mIHN3YXJhcy4gCkNsYWlyZSBNYXJpZSBNaWxsZXIgb2ZmZXJzIGEgJDQ1IGRpc2NvdW50IGZvciBwYXJ0aWNpcGFudHMgd2hvIHBheSBpbiBmdWxsIGJlZm9yZSB0aGUgY2xhc3MuIApDYXRhd2FtcHVzNTU1ICAyIHBvaW50cyAgc3VibWl0dGVkIDI1IGRheXMgYWdvCkV2ZW4gaWYgZm9sa3MgYXJlIHBsYXlpbmcgZm9yIG1vbm9wb2x5IGJ1Y2tzIG9yIHF1YXJ0ZXJzIChpbiB0aGUgZ3JvdXAgSSBwbGF5ZWQgd2l0aCksIHRoZSBnZW5lcmFsIG1pZW4gaXMgcHJldHR5IHNlcmlvdXMuIkkgc2VlbSB0byByZWFsbHkgc3RydWdnbGUgdG8gbWFrZSBmcmllbmRzIGFuZCBJIG5vdCBzdXJlIHdoeS4ic2FtZSBoZXJlLCB5b3UgZGVmaW5pdGVseSBub3QgYWxvbmUuIApOb3QgdXNpbmcgYSByZWFsdG9yIGlzIG5vdCBmb3IgdGhlIGZhaW50IG9mIGhlYXJ0LiBJdCBpcyBsaXRlcmFsbHkgaGVyZGluZyBzaGVlcC4gQmFua2VyIG5lZWRzIHRoaXMsIGxhd3llciBzYXlzIGFtZW5kbWVudCB0byB0aGUgY29udHJhY3QgbmVlZHMgdG8gYmUgbWFkZSwgc2VsbGVyIG5lZWRzIHRvIHNpZ24gaXQuIFNlbGxlciBuZWVkcyB0byBwYXkgZm9yIHNlcHRpYyBpbnNwZWN0aW9uLCBJIG5lZWQgdG8gc2NoZWR1bGUgdGhlIGhvbWUgaW5zcGVjdGlvbi4gVGhpcyBwcm9jZXNzIGhhcyBnaXZlbiBtZSBhIG5ldyBhcHByZWNpYXRpb24gZm9yIHJlYWx0b3JzLiBJJ20gZ3VpbHR5LCBJIHRob3VnaCB0aGV5IGRvbid0IGRvIGFueXRoaW5nIGFuZCB0YWtlIDMlLiBJbSB3cm9uZy4KTWNEb25hbGQncyBhbm5vdW5jZWQgYSBnbG9iYWwgbWVkaWEgcmV2aWV3IGluIE9jdG9iZXIgMjAxNyBpbiBhIHB1c2ggdG8gd29yayB3aXRoIG11bHRpcGxlIHBhcnRuZXJzIHJhdGhlciB0aGFuIHJlbHlpbmcgc29sZWx5IG9uIE9NRC4gT01EIGFuZCBTdGFyY29tIGhhdmUgZWFjaCBiZWVuIGF3YXJkZWQgbWVkaWEgYWNjb3VudHMgZm9yIG90aGVyIGNvdW50cmllcyBhcyBwYXJ0IG9mIHRoYXQgZ2xvYmFsIHJldmlldy4gQWNjb3JkaW5nIHRvIGluZm9ybWF0aW9uIGZyb20gTWNEb25hbGQncyBhbmQgb3RoZXJzLCBzbyBmYXIgT01EIGhhcyBoZWxkIG9uIHRvIENhbmFkYSwgQ2hpbmEsIEdlcm1hbnksIHRoZSBCYWx0aWNzLCB0aGUgVW5pdGVkIEtpbmdkb20sIEVneXB0IGFuZCBoYWxmIG9mIExhdGluIEFtZXJpY2EsIHdoaWxlIFN0YXJjb20gd29uIEZyYW5jZSBhbmQgdGhlIG90aGVyIGhhbGYgb2YgTGF0aW4gQW1lcmljYS4uIApJIGNvdWxkbid0IGJlbGlldmUgaXQhIE9uY2UgdGhhdCBoYXBwZW5lZCwgdGhlbiBvdGhlciBnaXJscyBsaWtlIEFsYWJhbWEgYW5kIENhcm9saW5hIGFuZCBTYXZhbm5haCBzdGFydGVkIGZsaXJ0aW5nIGFzIHdlbGwsIGtub3dpbmcgYSBtaWRsaWZlIGNyaXNpcyB3aGVuIHRoZXkgc2F3IGl0LiAKVGhlIHNlY29uZCBvbmUgaXMgb25seSBzbGlnaHRseSBoYXJkZXIsIGFuZCB3aXRoIHRoZSBhYm92ZSB0aGVvcmVtIGluIG1pbmQsIGl0IHNob3VsZCBiZSBhIHBpZWNlIG9mIGNha2UgYXMgd2VsbC4gUChyZWQgIDcpID0gUChyZWQpICsgUCg3KSAgIFAocmVkICA3KSA9IDEgLyAyICsgMSAvIDEzICAgMSAvIDI2ID0gNyAvIDEzLiBBbiBhbHRlcm5hdGl2ZSBtZXRob2QgaXMgdG8gY291bnQgdGhlIG51bWJlciBvZiBjYXJkcyB0aGF0IHNhdGlzZnkgdGhlIGNvbnN0cmFpbnRzLiBXZSBjb3VudCB0aGUgbnVtYmVyIG9mIHJlZCBjYXJkcywgYWRkIHRoZSBudW1iZXIgb2YgY2FyZHMgbWFya2VkIDcgYW5kIHN1YnRyYWN0IHRoZSBudW1iZXIgb2YgY2FyZHMgd2hpY2ggYXJlIGJvdGg6IDEzICAyICsgNCAgIDIgPSAyOC4gVGhlbiB0aGUgcmVxdWlyZWQgcHJvYmFiaWxpdHkgaXMgMjggLyA1MiA9IDcgLyAxMy4KVGhlIGRlYWxlciBsYWlkIGRvd24gdGhlIGZpbmFsIGNhcmQgICAidGhlIHJpdmVyIiAgIGFuZCwgc2luY2UgdGhlIHN0cmFpZ2h0IEkgd2FzIHdvcmtpbmcgZm9yIG5ldmVyIGFwcGVhcmVkLCBJIGhhZCBvbmx5IGEgcGFpciBvZiBqYWNrcy4gCkxhLiwgSGVuY29lLiAKQ2VzIGRldXggamV1eCBuZSBuY2Vzc2l0ZW50IHF1ZSBwZXUgZGUgcHJwYXJhdGlvbiBldCB2b3VzIHBvdXJyZXogZmFjaWxlbWVudCB5IGpvdWVyIGNoZXogdm91cy4uIApPVEYgeW91ciBiZXQgaXMgZmluZSBpIGxpa2UgdGhlIGxlYWQgYW5kIHRoZSBhbW91bnQuIApUaGUgZmFjdCB0aGF0IHRoZXkgd2FudCB0byBnZXQgdGhlIE5ITCBvciB0aGUgYWN0dWFsIHRlYW1zIGFzIHdlbGwgYXMgZmFucyB0byBwYXkgZm9yIHRoZSB1c2Ugb2YgdGhlIHBsYXRmb3JtIGlzIHNtYXJ0IGJlY2F1c2UgdGhlcmUgaXMgYSB2YWx1ZSBwcm9wb3NpdGlvbiBvbiBib3RoIHNpZGVzLiAKV2hvIHRha2VzIG1lZGljaW5lIGFuZCBuZWdsZWN0cyB0byBkaWV0IHdhc3RlcyB0aGUgc2tpbGxzIG9mIGhpcyBkb2N0b3JzLiBUaGlzIENoaW5lc2UgcHJvdmVyYiBoaWdobGlnaHRzIG9uZSBvZiB0aGUga2V5IGZpbmRpbmdzIG9mIGEgbmV3IHN0dWR5IGV4cGxvcmluZyBob3cgY29uc3VtZXJzIGluIENoaW5hIGNob29zZSBiZXR3ZWVuIHRyYWRpdGlvbmFsIENoaW5lc2UgcmVtZWRpZXMgYW5kIFdlc3Rlcm4gbWVkaWNpbmUgd2hlbiBzZWVraW5nIHRyZWF0bWVudC4KSW4gb3JkZXIgdG8gYWxsb3cgdXMgdG8gY3VzdG9taXNlIG91ciBjb250ZW50IGZvciB5b3UsIHdlIG5lZWQgdG8gcmVtZW1iZXIgd2hvIHlvdSBhcmUgYW5kIHdoYXQgeW91IHdhbnQuIFdlIHVzZSBjb29raWVzIHRvIHJlY29yZCB5b3VyIHByZWZlcmVuY2VzIHJlZ2FyZGluZyBXZWJzaXRlIGFwcGVhcmFuY2UsIHdoYXQgY29udGVudCB5b3UndmUgYWxyZWFkeSByZWFkLCBhbmQgdG8gcHJlc2VudCB0aGUgaW5mb3JtYXRpb24gdGhhdCBpcyBtb3N0IHJlbGV2YW50IHRvIHlvdS5QZXJmb3JtYW5jZSBtb25pdG9yaW5nIGNvb2tpZXMuIApDZSBzb250IGRlcyB0cnVjcyBxdWUgdHUgbmUgdmV1eCBwYXMgZmFpcmUgZGV2YW50IHVuIGVucXUgbWFzY3VsaW4gZGFucyB1bmUgc2FsbGUgZCBmZXJtIEMgY29tbWUgcmV2aXZyZSBsZSB0cmF1bWF0aXNtZSB1bmUgZGV1eGkgZm9pcyBhdmVjIGQgZGUgdHJhdW1hdGlzbWUuIFNhcmFoVW5lIGZvaXMgbCB0ZXJtaW4gbCBhIGRpdCBTYXJhaCA6IFNpIHR1IGFzIHVuZSBwc3ljaG9sb2d1ZSwgamUgdGUgY29uc2VpbGxlcmFpcyBkIGxhIHZvaXIuIApNaW51dGVzIHBhc3MsIGFmdGVyIHRlbiBtaW51dGVzIHRoZXkgY29tZSBvdXQgZnJvbSBjb3ZlciBhbmQgc2VlIHRoZSBjYXIgaXMgZ29uZS4gCldvbWVuIG9mIGxvd2VyIHJhbmsgd2VyZSBhbGxvd2VkIHRvIHdlYXIgcGFzdGVsIGNvbG9ycyBvbmx5Li4gCkkgd29ya2VkIGluIGEgcmVzdGF1cmFudCBmb3IgMyB5ZWFycyBhbmQgcGVvcGxlIGFyZSBtdWNoLCBNVUNIIHJ1ZGVyLiBIb25lc3RseSwgSSBsaWtlIGhvdyB5b3UgZ3V5cyByZWFsbHkgY2FyZSBhYm91dCBiZWluZyBjb3JkaWFsIGFuZCB3b3VsZCBsb3ZlIGZvciBhIHdvcmxkIGluIHdoaWNoIHRoaXMgaXMgY29tbW9uIHN0YW5kYXJkcy4gSSB3b3JrZWQgaW4gdGhlIHNlcnZpY2UgaW5kdXN0cnkgc28gSSB1bmRlcnN0YW5kIG5vdCBiZWluZyB3YW50ZWQgdG8gYmUgdHJlYXRlZCBwb29ybHkgYW5kIGFtIG9mdGVuIHZlcnkgY29yZGlhbCBhbmQgdGhhbmtmdWwgZm9yIHBlb3BsZSdzIGVmZm9ydHMgdG8gd2hpY2ggSSByZWNlaXZlIGxpdHRsZSBjb3JkaWFsaXR5IGluIHJlc3BvbnNlLiAKSG93ZXZlciwgYW4gQXJpem9uYSBtYW4sIERvdWdsYXMgSGFpZywgaXMgZmFjaW5nIGZlZGVyYWwgY2hhcmdlcyB0aGF0IGhlIGFsc28gaWxsZWdhbGx5IHByb3ZpZGVkIGFybW9yIHBpZXJjaW5nIGFtbXVuaXRpb24gdG8gUGFkZG9jay4gSGFpZyBtYWludGFpbnMgaGUgbGVnYWxseSBzb2xkIHRyYWNlciBhbW11bml0aW9uIHRvIFBhZGRvY2sgd2Vla3MgYmVmb3JlIHRoZSBjYXJuYWdlLiBUaGV5IHNhaWQgaGUgbWF5IGhhdmUgYmVlbiBiaXBvbGFyIGFuZCBoYXZpbmcgZGlmZmljdWx0aWVzIHdpdGggaGlzIGxpdmUgaW4gZ2lybGZyaWVuZCwgd2hvIHdhcyBpbiB0aGUgUGhpbGlwcGluZXMgd2hlbiB0aGUgc2hvb3Rpbmcgb2NjdXJyZWQuCkl0IHdhcyBhbHNvIHJldmVhbGVkIGluIGNvdXJ0IHllc3RlcmRheSB0aGF0IHRoaXMgd2FzIG5vdCBIYXJyb2QncyBmaXJzdCBzdWNoIG9mZmVuY2UsIHdpdGggdGhlIDQ5IHllYXIgb2xkIGhhdmluZyBwcmV2aW91c2x5IGhhZCBoZXIgcmVhbCBlc3RhdGUgbGljZW5jZSBkaXNxdWFsaWZpZWQgZm9yIHRocmVlIHllYXJzIGZvciBtaXNhcHByb3ByaWF0aW5nIHRydXN0IGFjY291bnQgZnVuZHMuIFRoZSBtYXhpbXVtIHBlbmFsdHkgZm9yIHN1Y2ggb2ZmZW5jZXMgaXMgMTAgeWVhcnMnIGphaWwuIApJIGRvbiByZWFsbHkgZm9sbG93IHRoZSBmYWl0aCBhbnltb3JlLCBidXQgaW4gbXkgb3BpbmlvbiBpdCB2ZXJ5IGVhc3kgdG8gbGl2ZSBpbiBhIGdlbmVyYWxseSBDaHJpc3RsaWtlIChvayB3ZWxsIG5vdCBlYXN5IGJ1dCB5b3Uga25vdyB3aGF0IEkgbWVhbikgbWFubmVyIHdpdGhvdXQgaGF2aW5nIHlvdXIgd2hvbGUgbGlmZSBzdWNrZWQgYXdheS4gWW91IGRvbiBuZWVkIHRvIHRha2UgYSB2b3cgb2YgcG92ZXJ0eSBvciBjaGFzdGl0eSBvciBzbyBvbiBhbmQgc28gZm9ydGgganVzdCB0byBkZXZvdGUgeW91cnNlbGYgdG8gR29kLi4gClRoZSBsZXNzIHBvcHVsYXRlZCB0aGUgY2l0eSwgdGhlIGhpZ2hlciB0aGUgY2hhbmNlcyBJIHNlZSBwb3B1bGFyIG1vZGVscy4gCldpdGggSm9rZXJzIGRlc2lnbmVkIHRvIHN1YnN0aXR1dGUgZm9yIGFueSBvdGhlciBjYXJkIGZyb20gdGhlIGRlY2sgdG8gY29tcGxldGUgd2lubmluZyBoYW5kcyB3aGVyZSBwb3NzaWJsZSwgaW5zdGFudCBjcmVkaXQgcHJpemVzIGFyZSBsaWtlbHkgdG8gb2NjdXIgbW9yZSBmcmVxdWVudGx5LCB3aXRoIHRoZSBwYXlvdXRzIG9ubHkgc2xpZ2h0bHkgbG93ZXIgdGhhdCBleHBlY3RlZC4gQnV0LCBnaXZlbiB0aGF0IHRoZSBtYXhpbXVtIGNvaW4gamFja3BvdCBzdGFuZHMgYXQgNSwwMDAgb3IgMSwwMDB4IHRvdGFsIGJldCwgSm9rZXIgUG9rZXIgaGFzIGJlZW4ga25vd24gdG8gYXdhcmQgc29tZSBxdWl0ZSBpbXByZXNzaXZlIHBheW91dHMgaW4gdGhlIHBhc3QuLiAKQmVjYXVzZSBJIHRoaW5rIHRoYXQganVzdCBzdGFydHMgdGhlIGN5Y2xlIG92ZXIgYWdhaW4uIElmIHlvdSB3YW50IHRvIGdldCByaWQgb2YgdGlwIGN1bHR1cmUgaW4gcmVzdGF1cmFudHMgeW91IG5lZWQgdG8gY2hhbmdlIHRoZSBlbnRpcmUgc3lzdGVtLCB3aGljaCBhZG1pdHRlZGx5IHdvbnQgaGFwcGVuIG92ZXJuaWdodCwgYnV0IHlvdSBjYW4ganVzdCBzYXkgInRpcCBzb21lIHBsYWNlcyBhbmQgbm90IG90aGVycy4iIE5vdyBpIGtub3cgeW91IHBvaW50IG91dCB5b3VyIGZhc3QgZm9vZCBleGFtcGxlIHRvIHRoYXQgYnV0IHRoZSByZWFsaXR5IGlzIGZhc3QgZm9vZCB3b3JrZXJzIGFyZSBub3QgZG9pbmcgYW55IGFjdHVhbCAic2VydmluZyIgYW5kIHRoYXQgd2h5IHRoZXkgaGF2ZSB0byBiZSBwYWlkIGF0IGxlYXN0IG1pbmltdW0gd2FnZS4KSGUgdGhlIHN1YmplY3Qgb2YgdGhlc2UgbWFnbmlmaWNlbnQgZWZmb3J0cyBieSBhbiB1bm5hbWVkIGNoaWxkLiBUaGUgYm95LCBvciBnaXJsLCBkcmV3IHRoZXNlIGltYWdlcyBvbiB0aGUgYmFjayBvZiBhIHNlY3Rpb24gb2YgbWFwIHRoYXQgd2FzIHByaW50ZWQgaW4gYWJvdXQgMTg0NSAxODUwLCBqdXN0IGFib3V0IGF0IHRoZSB0aW1lIHRoYXQgVGF5bG9yIHdhcyBhdCBoaXMgZ3JlYXRlc3QgaGVpZ2h0IGEgZ2VuZXJhbCwgYSBmYW1vdXMgbWlsaXRhcnkgbGVhZGVyLCBhYm91dCB0byBiZWNvbWUgcHJlc2lkZW50IG9mIHRoZSBVbml0ZWQgU3RhdGVzIHdpdGhvdXQgZXZlciBoYXZpbmcgYmVlbiBlbGVjdGVkIHRvIGFueSBvZmZpY2UuIEhlIHdhcyBhIGdpZ2FudGljIGZpZ3VyZSBhdCB0aGUgdGltZSwgYW5kIG5vIGRvdWJ0IG9jY3VwaWVkIHNvbWUgcGllY2Ugb2YgbWluZCBvZiB0aGUgYXJ0aXN0IHdobyByZW5kZXJlZCBoaW0sIFRoZSBHZW5lcmFsLi4gClBhZGRvY2sgZ2FtYmxpbmcgaGFiaXRzIG1hZGUgaGltIGEgc291Z2h0IGFmdGVyIGNhc2lubyBwYXRyb24uIE92ZXIgc2V2ZXJhbCBkYXlzLCBNYW5kYWxheSBCYXkgZW1wbG95ZWVzIHJlYWRpbHkgbGV0IGhpbSB1c2UgYSBzZXJ2aWNlIGVsZXZhdG9yIHRvIHRha2Ugc3VpdGNhc2VzIHRvIHRoZSAkNTkwIHBlciBuaWdodCBzdWl0ZSBoZSBoYWQgYmVlbiBwcm92aWRlZCBmb3IgZnJlZS4gCkZvciBmYXIgdG9vIG1hbnkgcG9rZXIgcGxheWVycywgdGhlIHRoaW5raW5nIHN0b3BzIG9uY2UgdGhleSBzZWUgd2hhdCB0d28gY2FyZHMgdGhleSBoYXZlLiBJbiByZWFsaXR5LCB0aGF0IHdoZXJlIHRoZSB0aGlua2luZyBCRUdJTlMuIEZvciBncmVhdCBvbmxpbmUgdGVhY2hpbmcsIHRyeSBzaXRlcyBsaWtlIENhcmRSdW5uZXJzLCBCbHVlZmlyZSBQb2tlciwgb3IgUG9rZXIgVlQuIApNcyBXaGl0ZSBoYXMgcmVtYWluZWQgc3RlYWRmYXN0LgpEIDcgcHJvcGVydHkgbWFuYWdlbWVudCBpcyBhbiBhYnNvbHV0ZSBuaWdodG1hcmUgdG8gZGVhbCB3aXRoLiBJIGJlbGlldmUgdGhlaXIgc3BlY2lhbHR5IGlzIHJ1biBkb3duIG9sZGVyIGJ1aWxkaW5ncyB0aGF0IGFyZSBwb29ybHkgbWFpbnRhaW5lZC4gVGhleSBoYXZlIGhhZCBhICJ0ZW1wb3JhcnkgIiBzY2FmZm9sZCBvdXRzaWRlIGEgYnVpbGRpbmcgb24gaG9tZSBzdHJlZXQgZm9yIG92ZXIgdGhyZWUgeWVhcnMuIApUaGUgc291cmNlIGZvciBteSBwYXNzaW9uIGZvciBtYXNzYWdlIHN0ZW1zIGZyb20gdGhlIHNjaWVuY2UgYW5kIHRoZSBjYXJlIGdpdmluZyBhbHNvIHRoZSBZaW5nIGFuZCB0aGUgWWFuZy4gCkNoYXJpdHkgcG9rZXIgZXhwYW5zaW9uIGluIEphY2tzb24gYXJlYSBpcyBpbiB0aGUgY2FyZHMKVGhhdCBwb3N0IHdhcyBjb25zdHJ1Y3RlZCB0byBhcHBlYWwgdG8geW91ciBlbXBhdGhldGljIGVtb3Rpb25zLiBCdXQgdGhpbmcgaXMsIHRoZXJlIG5vIGVtcGF0aHkgaW4gbmF0dXJlLiAKVGhlIGFubnVhbCBtZWV0aW5nIHNhdyBEb2xsYXJhbWEgZm91bmRlciBMYXJyeSBSb3NzeSBzdGVwIGRvd24gYXMgZXhlY3V0aXZlIGNoYWlybWFuLCBhbHRob3VnaCBoZSBpcyBleHBlY3RlZCB0byByZW1haW4gYSBtZW50b3IgYW5kIGNvbnRpbnVlIHNob3dpbmcgdXAgYXQgdGhlIGNvbXBhbnkncyBoZWFkcXVhcnRlcnMsIHNhaWQgaGlzIHNvbiBOZWlsIHdobyBpcyBjaGllZiBleGVjdXRpdmUuCk5vdHJlIHNpZ25hbGVtZW50IGEgZW50cmFpbiB1bmUgc3JpZSBkJ2ludGVydmVudGlvbiBkZSBsYSBEUFNQIGV0IHBsdXNpZXVycyB2ZXJiYWxpc2F0aW9ucywgY2UgcXVpIG4nYSBwYXMgZGlzc3VhZCBPcmFuZ2UgQmFuayBkZSBjb250aW51ZXIgc29uIGFjdGl2aXQgcHVibGljaXRhaXJlLiAKQXMgaXMgdHlwaWNhbCBmb3IgSHVheSBLaHdhbmcsIHRoZXJlIHdhc24gbXVjaCBvZiBhIG1hc3NhZ2UgdG8gc3BlYWsgb2YgKGRlc3BpdGUgdGhlIGFkdmVydGlzaW5nIG91dHNpZGUpLiBJdCB3b3VsZCBiZSB3aGF0IGtub3duIGFzIGEgbWFzc2FnZSBpZiBhbnl0aGluZy4gVGhlIGdpcmwgc3RhcnRlZCBydW5uaW5nIHRoZSBiYXRoIGFuZCB3aGlsZSBpdCBmaWxsZWQgd2UgdGFsa2VkIGFuZCBmbGlydGVkIG9uIHRoZSBjb3VjaC4gV2hlbiB0aGUgYmF0aCB3YXMgcmVhZHksIHNoZSB1bmRyZXNzZWQgcmlnaHQgaW4gZnJvbnQgb2YgbWUgKG5pY2UgdG91Y2ghIFRoZXkgdXN1YWxseSBkbyBpdCBhdCB0aGUgb3RoZXIgc2lkZSBvZiB0aGUgcm9vbSksIHRoZW4gdW5kcmVzc2VkIG1lIGFuZCBsZWQgbWUgdG8gdGhlIGJhdGguIEluc2lkZSB0aGUgZGVlcCwgaG90IGJhdGgsIHNoZSB3YXNoZWQgbWUgYWxsIG92ZXIgYW5kIGdhdmUgbWUgYSB0b2tlbiBuZWNrIGFuZCBzaG91bGRlcnMgbWFzc2FnZSwgYnV0IGl0IHdhcyBicmllZiBhbmQgd2Vhay4gU3RpbGwsIHRoZSBiYXRodGltZSBleHBlcmllbmNlIGlzIHZlcnkgbmljZSwgYnV0IGRvbiBiZSB1bmRlciBhbnkgaWxsdXNpb25zIHRoYXQgeW91IHdpbGwgZ2V0IGEgcHJvcGVyIG1hc3NhZ2Ugc2VydmljZS43LzEwCihBbmQgbWlnaHQgZGV2ZWxvcCBhIHN0ZXJlb3R5cGUgZm9yIGhvdyBob3cgYWxsIGJveXMgd2lsbCBhY3QsIGJ1dCBJIGNvdWxkbnQgcHJvdmUgdGhhdC4pLiAKNTIwTUIgaXMgcHJldHR5IHJpZGljdWxvdXMgZm9yIHdoYXQgaXQgZG9lcy5hZHJlbmFsaW5lX1ggIDIgcG9pbnRzICBzdWJtaXR0ZWQgNCBkYXlzIGFnb0kgd2VudCBmcm9tIHJ1bm5pbmcgdGhlIHdob2xlIGl0IGluZnJhc3RydWN0dXJlIGZvciBhIG1lZGl1bSBzaXplZCBidXNpbmVzcyB3aXRoIG9uZSBqciBzdXBwb3J0IGd1eSB0byB3b3JraW5nIGZvciBhIHZlcnkgbGFyZ2UgZW50ZXJwcmlzZS5JIG1pc3MgaW50ZXJhY3Rpbmcgd2l0aCBhbGwgbXkgZm9ybWVyIGNvIHdvcmtlcnMgYW5kIHRoZSBmcmllbmRzIHdlIG1hZGUuIApJIGNhbid0IGNoYW5nZSB0aGUgY29sb3Igb2YgbXkgc2tpbiBhbmQgbm9yIHNob3VsZCBJIGJlIGFza2VkIHRvLiAKUG9rZXIgbm90IGdhbWJsaW5nIHVuZGVyIGZlZGVyYWwgbGF3ClJ1ZmZsZXNkYW5jZSB1CkJld2FyZSBvZiB0aGVyYXBpc3RzIHRoYXQgY2xhaW0gdG8gYmUgYWJsZSB0byBkbyBpdCBhbGwuIApTdGV3YXJ0IEludGVybmF0aW9uYWwgQWlycG9ydCByZW1haW5lZCBvcGVuLCBidXQgYWlybGluZXMgaGFkIHN1c3BlbmRlZCBvcGVyYXRpb25zIHRoZXJlLiAKSXQgbWFrZXMgZ3JpbmRpbmcgaW5jcmVkaWJseSBzdHJlc3NmdWwgYmVjYXVzZSBhbGwgdGhyZWUgdHlwZXMgd2lsbCBwbGF5IGNvbXBsZXRlbHkgZGlmZmVyZW50bHkgc28geW91IGhhdmUgbm8gaWRlYSBob3cgY2F1dGlvdXMgeW91IG5lZWQgdG8gYmUgYXQgc2V2ZXJhbCBzdGFnZXMgb2YgdGhlIGdhbWUuIApIZSBwbGF5ZWQgNjMgVGVzdHMgZm9yIEF1c3RyYWxpYSBhbmQgd2FzIHRoZSBmaXJzdCBhbGwgcm91bmRlciB0byBzY29yZSAyMDAwIHJ1bnMgYW5kIHNuYXJlIDIwMCB3aWNrZXRzLiBIaXMgZm9yYXkgaW50byBUViBiZWdhbiB3aXRoIHRoZSBCQkMgaW4gMTk2MyBhbmQgd2hpbGUgaGlzIGhlbG1ldCBvZiB3aGl0ZSBoYWlyIGFuZCBiZWlnZSBqYWNrZXQgaGF2ZSBkZXZlbG9wZWQgdGhlaXIgb3duIGN1bHQgZm9sbG93aW5nLCBpbiByZWFsaXR5IGl0IGhpcyBiZWhpbmQgdGhlIHNjZW5lcyBwcm9mZXNzaW9uYWxpc20gdGhhdCBnaXZlcyBicmVhdGggdG8gaGlzIGxvbmdldml0eS4gClBsYXlpbmcgcG9rZXIgb24gdGhlIG1vdmUgaXMgcG9zc2libGUgaWYgYSBwb2tlciByb29tIGluIG1hZGUgaW4gSFRNTDUgb3IgaWYgaXQgaGFzIGFuIG9ubGluZSBwb2tlciBhcHAuIFBsYXlpbmcgcmVhbCBjYXNoIHBva2VyIGdhbWVzIHJlcXVpcmVzIGEgcmVhbCBtb25leSBkZXBvc2l0IHdoaWNoIGNhbiBiZSBkb25lIGRpcmVjdGx5IG9uIHRoZSBtb2JpbGUgZGV2aWNlIHZpYSBhIHByZWZlcnJlZCBwYXltZW50IG9wdGlvbi4KU291bmRzIHRvIG1lIGxpa2UgdGhlIGFkdWx0cyBpbiBjaGFyZ2Ugb2YgdGhpcyBHaXJsIFNjb3V0cyBvcmdhbml6YXRpb24gd2FudHMgdG8gZWF0IHRoZWlyIGNha2UgYW5kIGVhdCBteSBjYWtlIGFuZCBlbmpveSBib3RoLiAKV2hhdCBPblRoaW5ncyB0byBkb0Zvb2QgYW5kIERyaW5rRmFtaWx5IGFuZCBLaWRzVFYgR3VpZGVEaWdpdGFsIFByaW50IEVkaXRpb25USEUgTW91bnRCZWF1dHkgQ291bnRyeSBDbHViaGFzIGdvbmUgaW50byBhZG1pbmlzdHJhdGlvbiwgd2l0aCB0aGUgZG9vcnMgc2h1dHRpbmcgYWZ0ZXIgaXQgYmVjYW1lIHVudmlhYmxlIHRvIGtlZXAgdHJhZGluZy4gVGhlIGZhdGUgb2YgdGhlIEtpZXdhIFZhbGxleSB0b3duIG9ubHkgcG9rZXIgbWFjaGluZSB2ZW51ZSBpcyBpbiB0aGUgaGFuZHMgb2YgV2FnZ2EgYmFzZWQgYWRtaW5pc3RyYXRvciBDaHJpcyBDaGFtYmVybGFpbiB3aG8gd2lsbCBob2xkIGEgY3JlZGl0b3JzJyBtZWV0aW5nIG9uIFdlZG5lc2RheS4gCkhhcmFzc2VkIHRvIGdvIGluc2lkZWJ1dCB0aGVyZSB3ZXJlIG5vdCBtYW55IHBlb3BsZSBvdXQgYW5kIGFib3V0LiBJIGd1ZXNzIHdoYXQgZG8geW91IGV4cGVjdCBpbiB0aGUKWW91IHN1ZmZlciBmcm9tIGEgZnVuZGFtZW50YWwgbWlzdW5kZXJzdGFuZGluZyBvZiBob3cgaGVhbHRoIGluc3VyYW5jZSB3b3Jrcy4gQmVjYXVzZSB3ZSBjYW4ndCBwYXJ0aWN1bGFyaXplIHJpc2sgZmFjdG9ycyBzdWZmaWNpZW50bHkgaWYgc29tZW9uZSBrbm93cyB0aGV5IG5lZWQgRUQgdHJlYXRtZW50IHRoZW4gZXZlcnlvbmUgZWxzZSBpcyBzdWJzaWRpemluZyB0aGVpciBjYXJlIGEgbG90LgoiREggc2F2ZWQgZm9yIGFnZXMgdG8gZ2V0IHRoZXNlIGxpdHRsZSBvbmVzIGZvciBtZSwgYnV0IGl0IHRoZSB0aG91Z2h0IHRoYXQgY291bnRzLiAKV2UgaGF2ZSBsaXRlcmFsbHkgbm8gY29udGV4dCB0byB0aGlzIHNpdHVhdGlvbiwgd2UgaGF2ZSBubyBpZGVhIGlmIGhlIHNlZW1lZCBwZXJmZWN0bHkgbm9ybWFsIGFuZCB0aGVyZSB3ZXJlIG5vIHJlZCBmbGFncy4uIApBIHNpbmdsZSBjbGVhbmluZyBhbmQgdHJlYXRtZW50IHdpdGggZWFyIGRyb3BzIHdvbid0IGRvIHRoZSB0cmljaywgYmVjYXVzZSBqdXN0IG9uZSBzdXJ2aXZpbmcgZmVtYWxlIG1pdGUgd2l0aCBlZ2dzIHdpbGwgYmVnaW4gdGhlIGVudGlyZSBvcmRlYWwgYW5ldy4gCkhvd2V2ZXIsIEkgd291bGQgcHJvcG9zZSB0aGF0IHRvIHRoZSBleHRlbnQgdGhhdCBKb3VybmFsaXNtIGRvZXMgaW4gZmFjdCBoYXZlIGEgcHJvYmxlbSwgdGhhdCBwcm9ibGVtIGlzIHNpbXBseSBhbiBleHRlbnNpb24gb2YgdGhlIG1hcmtldCBmYWlsdXJlcyBvZiBDYXBpdGFsaXNtLiBBbmQgdG8gdGhlIGV4dGVudCB0aGF0IHNvbHV0aW9ucyBleGlzdCwgdGhleSBtdXN0IGJlIHNvbHV0aW9ucyB0aGF0IGFsbG93IGpvdXJuYWxpc20gdG8gbW92ZSBvdXRzaWRlIG9mIHRoZSBicm9rZW4gc3lzdGVtIHRoYXQgaGFzIGNhdXNlZCB0aGlzIHNpdHVhdGlvbi4gVGhpcyBpcyBhIGdsb2JhbCBwcm9ibGVtLiAKVGhlIGRlYWxlciBiZWdpbnMgdG8gZGVhbCBjYXJkcyBzdGFydGluZyB3aXRoIHRoZSBwbGF5ZXIgb24gaGlzIGxlZnQuIE9uZSBjYXJkIGlzIGRlYWx0IHRvIGVhY2ggcGxheWVyIGluIGEgY2xvY2t3aXNlIG1vdGlvbiwgd2l0aCB0aGUgZGVhbGVyIGxhc3QgaWYgaGUncyBwbGF5aW5nLCB1bnRpbCBhbGwgcGxheWVycyBoYXZlIDUgY2FyZHMgaW4gdGhlaXIgaGFuZHMuIFRoZSBkZWNrIGlzIHNldCBpbiB0aGUgbWlkZGxlIG9mIHRoZSB0YWJsZSB3aGVyZSBldmVyeW9uZSBjYW4gc2VlIGl0IHNvIHRoYXQgbm8gb25lIHB1bGxzIGEgc2l4IGd1biBhbmQgc3RhcnRzIGFjY3VzaW5nIHNvbWVvbmUgb2YgY2hlYXRpbmcuClByb3BlcnR5IG1hcmtldCB2YWx1ZXMgdGhlaXIgaG9tZSBhdCAkMiBtaWxsaW9uIGFuZCB0aGVpciBydXJhbCBjb3R0YWdlIGF0ICQ2NTAsMDAwLiAKSGVyZSB0aGUgcHJvYmxlbTogd2UgQW1lcmljYW5zIHN0aWxsIHdvcnNoaXAgdGhlIHJpY2guIFRoaW5rIHRoZSByaWNoIGFyZSBzbWFydGVyIG9yIGJldHRlciBvciBhdCBsZWFzdCBsdWNraWVyIGFuZCBoYXBwaWVyIHRoYW4gdGhlIHJlc3Qgb2YgdXMuIApZb3UgY2FuIGFsc28gZmluZCBhIGtleSBmb3IgV2luZG93cyA3IFVsdGltYXRlLiAxNyBKdWwgMjAxNyAuIEtNU3BpY28gQWN0aXZhdG9yIEZvciBXaW5kb3dzIDcgKEJpdCAzMiwgNjQpIFtVbHRpbWF0ZV0gLiBBY3RpdmF0aW9uIGRvZXMgbm90IHJlcXVpcmUgdXNlciBpbnRlcnZlbnRpb24sIHRoZSBlbnRpcmUgYWN0aXZhdGlvbiAuIEl0IGlzIGEgY29tcHJlaGVuc2l2ZSBhdXRvIGFjdGl2YXRvciBmb3Igd2luZCA3IGl0IGFjdHVhbGx5IHJlY29nbml6ZWQgLiBJRE0gNi4yOCBDcmFjayBEb3dubG9hZC4gCk5ldyBQbGF5ZXIgaGVyZSBhcyB3ZWxsLCBpIGRlY2lkZSB0byBnbyB3aXRoIGZpc2hpbmcgYXMgbXkgZmlyc3QgZ2F0aGVyaW5nIGpvYi4gQ3VycmVudGx5IGF0IFQ3CklmIHlvdSB0YWtlIGEgZ3JvdXAgb2YgMTAwIHJhbmRvbSBhZHVsdCBLb3JlYW5zIHRoZXkgZG9uIGhhdmUgIm1hbmRhdG9yeSIgZHJpbmtpbmcgc2Vzc2lvbnMgdHdpY2UgYSB3ZWVrIChpbmNsdWRpbmcgYm90aCAgYW5kIGdyb3VwcyBvZiBmcmllbmRzKS4gCkRvbiBwcmVzc3VyZSB5b3Vyc2VsZiBieSBjb21wYXJpbmcgeW91ciBza2lsbHMgdG8gb3RoZXIgcGxheWVycyBUaGF0IGEgZnV0aWxlIGV4ZXJjaXNlLiBOYXR1cmFsbHksIHlvdSBjYW4gY29tcGFyZS4gWW91IHBsYXlpbmcgZm9yIHRoZSBmaXJzdCB0aW1lIGFuZCB0aGV5IHdoYXQsIGNlbGVicmF0aW5nIHRoZWlyIG9uZSBtaWxsaW9udGggZ2FtZT8gSWYgeW91IGFjY2VwdCB0aGF0LCB0aGVyZSBub3RoaW5nIHRvIGxvc2UgeWV0IHRoZXJlIG5vIGhhcm0gaW4gdHJ5aW5nLCB5b3UgZmVlbCBtdWNoIGJldHRlciBsYXRlciBvbiBhbmQgYmUgYWJsZSB0byBjb25jZW50cmF0ZSBtb3JlIG9uIHRoZSBnYW1lLgo1IGRheXMgYWdvQVNFViBUSE0nREVOIFRSSyBaWUFGRVRBbGlhYWxsYXJuIGdubG5kZSB0YWh0IGt1cmFuIEFsaWFhIEJlbGVkaXllc2kgU2FuYXRldmkgKEFTRVYpIFRyayBIYWxrIE16aWkgKFRITSkgS29yb3N1IEJhaGFyIEtvbnNlcmkgaWxlIHRyayBzZXZlcmxlcmluIGthcnNuYSBrdC4gS2x0ciBzYW5hdCBldGtpbmxpa2xlcmkga2Fwc2FtbmRhIHNhaG5lIGFsYW4gODAga2lpbGlrIGRldiBrb3JvIEVnZSB2ZSBBa2Rlbml6IHRya2xlcmluZGVuIG9sdWFuIHJlcGVydHVhciBpbGUgQWxpYWFsbGFyYSB1bnV0dWxtYXogYmlyIG16aWsgeml5YWZldGkgc3VuZHUuIApZb3UgaGF2ZSB0byB1c2UgeW91ciBtaW5kIHRvIG1ha2UgdGhlIG1vc3Qgb2YgdGhlIGluZm9ybWF0aW9uIHByb3ZpZGVkIGJ5IHRoZSBjYWxjdWxhdG9yLiBZb3UgY2FuIHVzZSBhIHBva2VyIG9kZHMgY2FsY3VsYXRvciB0byBrbm93IHRoZSBwbGF5aW5nIHN0eWxlcyBvZiB5b3VyIG9wcG9uZW50cywgdGhlIG1vbmV5IGluIHRoZSBwb3QsIHRoZSBjYXJkcyBpbiBoYW5kLCB0aGUgY29tbXVuaXR5IGNhcmRzIGFuZCB0aGUgY2FyZHMgcGxheWVkLiBCYXNlZCBvbiB0aGlzIGluZm9ybWF0aW9uLCBpdCBjYW4gZ2l2ZSB5b3UgYWR2aWNlIGhvdyB0byBwbGF5IGEgaGFuZC4gSXQgZ2l2ZXMgeW91IGFkdmljZSBvYmplY3RpdmVseSBhbmQgeW91IGFyZSBmcmVlIHRvIGFjY2VwdCBpdCBvciBkZW55IGl0LiBJdCBhbHNvIGluZm9ybXMgYWJvdXQgdGhlIGhvbGUgY2FyZCBzdHJlbmd0aCBhbmQgdGhlIHBvdCBzaXplLgpJIHNvbWV0aW1lcyBlbmQgdXAgd2l0aCAzLzQgbGVuZ3RoIHNsZWV2ZXMsIGJ1dCBvbiBidXR0b24gdXBzLCB0aGV5IGp1c3QgZG9uIHdvcmsgb24gbWUgYW5kIGxvb2sgbGlrZSBJIHdlYXJpbmcgYSBzaGlydCB0aGF0IGhhcyB0b28gc2hvcnQgbG9uZyBzbGVldmVzLCBzbyBJIGFsd2F5cyByb2xsIHRob3NlIHVwIHRvIGp1c3QgYWJvdmUgdGhlIGVsYm93LCBhbmQgc29tZXRpbWVzIGV2ZW4ganVzdCBjdXQgb2ZmIHRoZSB3cmlzdCBwbGFja2V0cyBzbyB0aGUgcm9sbCBpc24gbHVtcHkuIApGYXN0MzI3ICA0NiBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpXaWxkIHJpY2UgYW5kIGJyb3duIHJpY2UgYWxzbyBjb250YWluIHNpZ25pZmljYW50bHkgaGlnaGVyIGFtb3VudHMgb2YgZXNzZW50aWFsIHZpdGFtaW5zIGFuZCBtaW5lcmFscyB0aGFuIGdsdXRpbm91cyB3aGl0ZSByaWNlIGRvZXMuIApKYWNrIENvcnksIHNwb2tlc21hbiBmb3IgdGhlIEZsb3JpZGEgR3JleWhvdW5kIEFzc29jaWF0aW9uLCBzYWlkIHRyYWNrcyBhbmQgdHJhaW5lcnMgd2lsbCBnbyB0byB0aGUgTGVnaXNsYXR1cmUgYW5kLCBpZiBuZWNlc3NhcnksIHRvIHRoZSBjb3VydHMgdG8gYmUgY29tcGVuc2F0ZWQgZm9yIHRoZSByZXZlbnVlIHRoZXkgd2lsbCBsb3NlLgpBbm90aGVyIG5hdGl2ZSByZWQgZ3JhcGUgdG8gbG9vayBmb3IgaXMgQmFiaWMsIHdoaWNoIGlzIGluayBkYXJrIGFuZCBvbGl2eSwgYW5kIGRyeSBmYXJtZWQgaW4gbGltZXN0b25lIGRlc3NlcnQgY29uZGl0aW9ucyBhIGZldyBtaWxlcyBmYXJ0aGVyIGlubGFuZC4gSSBoYXZlbiBoYWQgdGhhdCBtYW55IEJhYmljIGJ1dCBQbGl6b3RhIGlzIG9uZSB0aGF0IEkgY2FuIHJlY29tbWVuZCB0aGF0IHlvdSBjYW4gcHJvYmFibHkgdHJhY2sgZG93bi4KQW5vdGhlciB3b21hbiwgRG9ubmEgSHVudGVyLCBvZiBQb3R0c3ZpbGxlLCBzYWlkIHNoZSB3YXMgZ2xhZCAidGhhdCB0aGVzZSB0aGluZ3MgY29tZSBvdXQiIGFmdGVyIGJlaW5nIGNvdmVyZWQgdXAgZm9yIGEgImxvbmcsIGxvbmcsIGxvbmcgdGltZSBhbGwgb3ZlciB0aGUgd29ybGQuIgpCcmlnaHQgb3JhbmdlIHNob3J0cywgdGhlcmUncyBDb2R5LiBIZSdzIHB1c2hpbmcuIEkgZmlndXJlZCBpdCB3YXMgYSBtYXR0ZXIgb2YgdGltZSBiZWZvcmUgaGUgZ290IHRvIG1lLCBhbmQgdGhlbiBJJ2QgaGF2ZSB0byBzZWUgaWYgSSBjb3VsZCBoYW5nIG9uLi4gCk9mIGNvdXJzZSB0aGVyZSBpcyBvdGhlciB3aW5uaW5nIGZsb3Agc3RyYXRlZ2llcy4gVXBzd2luZyBzdHJhdCBpc250ICJndG8iIGF0IGFsbCwgcG9rZXIgaXNudCB0aGlzIHNpbXBsZS4gVXBzd2luZ3MgQzEgQzQgaXMgYSBncmVhdCBzdHJhdGVneSBnZWFyZWQgdG93YXJkcyBiZWdpbm5lcnMgYW5kIG1ha2luZyB0aGVtIGludG8gd2lubmluZyBwbGF5ZXJzIGF0IHNtYWxsIHN0YWtlcy4KU2FtZSB3aXRoIHNlbGxpbmcuIApBIGdyb3VwIG9mIHBsYXllcnMgZmlsZWQgYSBjb21wbGFpbnQgaW4gMjAxNiB3aXRoIHRoZSBmZWRlcmFsIEVxdWFsIEVtcGxveW1lbnQgT3Bwb3J0dW5pdHkgQ29tbWlzc2lvbiB0aGF0IGFsbGVnZWQgd2FnZSBkaXNjcmltaW5hdGlvbiBieSB0aGUgZmVkZXJhdGlvbi4gVGhlIG5ldyBsYXdzdWl0IGVmZmVjdGl2ZWx5IGVuZHMgdGhhdCBFRU9DIGNvbXBsYWludCwgYnJvdWdodCBieSBNb3JnYW4sIFJhcGlub2UsIEJlY2t5IFNhdWVyYnJ1bm4sIENhcmxpIExsb3lkIGFuZCBmb3JtZXIgZ29hbGtlZXBlciBIb3BlIFNvbG8uIFRoZSBwbGF5ZXJzIHJlY2VpdmVkIGEgcmlnaHQgdG8gc3VlIGxldHRlciBmcm9tIHRoZSBFRU9DIGxhc3QgbW9udGguCklmIHlvdSBib3VnaHQgb3IgcmVmaW5hbmNlZCB5b3VyIGhvdXNlIGluIHRoZSBsYXN0IGZldyB5ZWFycywgaXQgbm90IHVubGlrZWx5IHRoYXQgeW91IGhhdmUgb25lLiBXaXRoIGFuICJvcHRpb24gQVJNIiBsb2FuIHlvdSBoYXZlIHRoZSAib3B0aW9uIiAod2hpY2ggbW9zdCBib3Jyb3dlcnMgaGFwcGlseSB0YWtlKSBvZiBwYXlpbmcgbGVzcyB0aGFuIHRoZSBpbnRlcmVzdDsgdGhlIG1hZ2ljIG9mICJuZWdhdGl2ZSBhbW9ydGl6YXRpb24iLgpBcHBsZSBoYXMgbG9zdCBDaGluYS4gVGhleSBjYW4ndCBsb3dlciB0aGUgaVBob25lIG91dCB0aGVyZSB0byBjb21wZXRlIHdpdGggdGhlIGNoZWFwZXIgZGV2aWNlcyB0aGF0IGFyZSBiZWluZyBzb2xkIGF0IHRoZSBidWNrZXRsb2FkLCBub3Igd2lsbCB0aGV5IG9wZW4gdXAgYW55IG9mIHRoZWlyIGFwcHMgbGlrZSBjcm9zcyBjb21wYXRpYmlsaXR5IHdpdGggaU1lc3NhZ2UuIFdoeSB3b3VsZCBzb21lb25lIGJ1eSBhIHBob25lIG9mICQxMDAwIHBsdXMgd2l0aCBubyBhcHAgc3VwcG9ydCBpbiBDaGluYSB3aGVuIHRoZXkgY2FuIGJ1eSBhbiBhbmRyb2lkIHdpdGggbGluZSBvciB3aGF0ZXZlciBpcyB1c2VkIG91dCB0aGVyZSB0byBjb21tdW5pY2F0ZSBmb3IgbGVzcyB0aGFuIGhhbGYgcHJpY2U/CkJsaW5kcyBhbmQgQW50ZXM6IEdpdmVuIHRoYXQgdGhlIGJsaW5kcyBpbmNyZWFzZSBhcyB0aGUgZ2FtZSBwcm9jZWVkcywgb25lIG11c3Qga2VlcCBpbiBtaW5kIHRoYXQgaXQgY2hhbmdlcyB0aGUgZnJhY3Rpb24gYmV0d2VlbiB3aGF0IGlzIGVhY2ggcm91bmQgYW5kIHRoZSBhdmVyYWdlIHN0YWNrIHNpemUuIFRoZXJlZm9yZSwgdGhpcyBtZWFucyB0aGF0IGZvciBvbmUgdG8gYmUgc3VjY2Vzc2Z1bCwgaGUgb3Igc2hlIG11c3QgYmUgYWhlYWQgb2YgdGhlIGJsaW5kcy4gVGhpcyB3YXkgaXQgaXMgZWFzaWVyIHRvIGF2b2lkIHN0YWNrIGZhbGxpbmcgYXdheSB3aXRob3V0IGNhdXNpbmcgb3Bwb25lbnRzIGFueSBkYW1hZ2Ugb3IgcmVhY2hpbmcgdGhhdCBmaW5hbCB0YWJsZS4KR2V0IGEgdGFua2VyIGJyYWtlIGZvciBpdCwgdGhlcmUgYSBmZXcgb3B0aW9ucywgYnV0IHRoZXkgYWxsIG1ha2UgaXQgYSBibGFzdCB0byBzaG9vdCB3aGVuIHRoZSBraWNrIGlzIG1vcmUgbWFuYWdlYWJsZS4gVGhleSBhdHRhY2ggaW4gdGhlIHNhbWUgbWFubmVyIGFzIHlvdXIgYmF5b25ldCB3b3VsZCwgYW5kIGFyZSBoZWxkIGluIHBsYWNlIHdpdGggYSBzZXQgc2NyZXcsIHNvIG5vIG1vZGlmaWNhdGlvbiByZXF1aXJlZC4KRXhjZXB0IHRoZXJlIGhhcyB0byBiZSBhIGZpcmUgdG8gcHV0IG91dCBmaXJzdC4gRG94eGluZyBtZWFucyB0byBzaGFyZSBQSS4gSSdkIGxvdmUgZm9yIHlvdSB0byBwb2ludCBvdXQgd2hhdCBpcyB0aGUgUEkgaW4gdGhhdCBjb21tZW50PwpZb3UgYXJlIG5vdCByZXF1aXJlZCB0byBjbGFpbSB0aGlzIHRlc3RpbmcgcGVyaW9kIHJpZ2h0IGFmdGVyIHRoZSByZWdpc3RyYXRpb24uIFlvdSBjYW4gcGxheSBhcyBCYXNpYyBtZW1iZXIgaW4gdGhlIGJlZ2lubmluZyBhbmQgbm9ib2R5IHdpbGwgZm9yY2UgeW91IHRvIGNsYWltIHRoZSBUcmlhbC4gCkFnYWluIG1vc3QgbGlrZWx5IHR3byBhcmUgZm9yIGEgY2FwYWNpdG9yLCBvbmUgaXMgY29tbW9uLCB0aGUgb3RoZXIgdHdvIGFyZSBlaXRoZXIgc3BlZWQgY2hvaWNlcyB3aXRoIGNvbW1vbiwgb3IgcmV2ZXJzZSB3aXRoIGNvbW1vbi4gKEZ1bGwgQW5zd2VyKS4gClRoaXMgImR1cGxpdGVjdHVyZSIgaXMgbm90IG1lYW50IHRvIGZsYXR0ZXIgdGhlIFdlc3QsIG5vciBpcyBpdCBhIGZvcm0gb2YgInNlbGYgY29sb25pemF0aW9uLiIgVGhlIGNvcGllcyBhcmUgYnVpbHQgYXMgbW9udW1lbnRzIHRvIENoaW5hIHRlY2hub2xvZ2ljYWwgcHJvd2VzcywgYWZmbHVlbmNlIGFuZCBwb3dlci4gVGhlIENoaW5lc2UgaGF2ZSBzZWl6ZWQgb24gdGhlIGljb25zIG9mIFdlc3Rlcm4gYXJjaGl0ZWN0dXJlIGFzIHBvdGVudCBzeW1ib2xzIGZvciB0aGVpciBvd24gYXNjZW5zaW9uIHRvIGFuZCBhc3BpcmF0aW9uIGZvciBnbG9iYWwgc3VwcmVtYWN5LgpBbmQgdGhlIGZhY3QgdGhhdCB5b3Uga25vdyB0aGF0IGlmIHlvdSB3ZXJlIGJlaW5nIHN0b2xlbiBmcm9tIGRpcmVjdGx5IHlvdSB3b3VsZCByZXBvcnQgaXQgaXMgd2h5IHlvdSBzaG91bGQgc3RheSBhd2F5IGZyb20gdGhpcyBwbGFjZSBpZiB5b3UgdGhpbmsgdGhleSBTaGFkeS4gTm8gbWF0dGVyIGhvdyBnb29kIHlvdSB0aGluayB0aGUgcm9vbSBpcyBpbiBzb21lIHdheSB5b3UgYmVpbmcgc3RvbGVuIGZyb20gYW5kIHRoZXJlZm9yZSB5b3VyIHByb2ZpdGFiaWxpdHkgaXMgd2F5IGxlc3MgdGhhbiB5b3UgdGhpbmsuLiAKR2xhZCB5b3Ugc2VlIHRoYXQgaXQgc2NhbS4gSSBzdXJwcmlzZWQgeW91IGdyYWR1YXRlZCBjb2xsZWdlLCB5ZXQgc28gZ3VsbGlibGUgdG8gZXZlbiBjb25zaWRlciB0aGlzIGFzIGEgbGVnaXQgcG9zc2libGl0eS4gCkkgY291bGQgaW1hZ2luZSwgbG9va2luZyBhdCB0aGUgcmVlbWVyZ2VuY2Ugb2YgSVNJTCBpbiBJcmFxLCB0aGF0IGFzIHRoZSBzaXR1YXRpb24gZGV0ZXJpb3JhdGVzLCBTdW5uaXMgaW4gcGFydHMgb2YgZWl0aGVyIG9yIGJvdGggY291bnRyaWVzIGNvdWxkIGJlY29tZSBtb3JlIGRpdm9yY2VkIGZyb20gdGhlIG1haW5zdHJlYW0gcG9saXRpY2FsIHByb2Nlc3MgYW5kIGludHJpZ3VlZCBieSB0aGUgcG9zc2liaWxpdHkgb2YgYSBoYXJkbGluZSBTdW5uaSBhYnNvbHV0aXN0IHN0YXRlLiBJbiBmYWN0LCBJIHRoaW5rIHRoYXQga2luZGEgYmVlbiBJU0lMIHN0cmF0ZWd5IGZyb20gdGhlIGJlZ2lubmluZyBhcyBhIHB1cmVseSBJcmFxaSBpbnN1cmdlbmN5LiAKT3JkaW5hcnlWaXNpb25hcnkgIDcgcG9pbnRzICBzdWJtaXR0ZWQgMiBtb250aHMgYWdvCldlbGwgaWYgSSB3YXNuIHNvIHNpY2suIApEJ2F1dHJlIHBhcnQsIHNpIGxhIGZvcm11bGUgZXN0IGNvcnJlY3RlIGlsIHMnYWdpdCB2cmFpc2VtYmxhYmxlbWVudCBkZSBwb3VkcmUgZGUgcGxhbnRlcyBldCBub24gZCdleHRyYWl0IGNvbmNlbnRyLiBFbiBkJ2F1dHJlcyB0ZXJtZXMsIHJlY291cmlyICBjZSB0eXBlIGRlIHByb2R1aXQgbidlc3QgcGFzIGR1IHRvdXQgYXZhbnRhZ2V1eC4gCklmIHlvdSBhcmUgdXNpbmcgYW55dGhpbmcgb3RoZXIgdGhhbiB5b3VyIGJyYWluIHRvIHBsYXkgdGhlIGdhbWUgdGhlbiB5b3UgYXJlIHJlY2VpdmluZyBhbiB1bmZhaXIgYWR2YW50YWdlLCBlc3BlY2lhbGx5IHdoZW4gdGhlIGluZm9ybWF0aW9uIHlvdSByZWNlaXZlIGlzIGZyb20gcGFpZCBzb2Z0d2FyZSB0aGF0IGNhbGN1bGF0ZXMgYSBwbGF5ZXJzIHJhbmdlIHVzaW5nIG90aGVyIHBsYXllcnMgaGFuZCBoaXN0b3JpZXMuCihTb21lIDE1MCB0cmliZXMgaGF2ZSBzaWduZWQsIG9yIGFyZW5lZ290aWF0aW5nLCBjYXNpbm8gY29tcGFjdHMgd2l0aCBzdGF0ZXMgZm9yIGZvcm1zIG9mIGdhbWJsaW5nLiAKVGhpcyBpcyBvbmUgdGVhIHBhcnR5IHRoYXQgdGhlIHJlYWwgTWFkIEhhdHRlciB3aWxsIHdhbnQgdG8gZ28gdG8hIEV2ZXJ5b25lIGVuam95cyB0aGUgZ2FtZXMsIGZvb2QsIGRyaW5rcywgYW5kIG11c2ljIHVudGlsIHRoZSBuaWdodCBjb21lcyB1cCAgYW5kIGV2ZW4gdGhlbiB0aG9zZSBsb3ZlbHkgY29sb3JlZCBwYXBlciBsYW50ZXJucyBleHRlbmQgdGhlIHBhcnR5IGF3YXkuIFN1cmVseSwgdGhpcyB3ZWRkaW5nIGlzIG9uZSB0aGF0IHlvdSB3aWxsIG5ldmVyIGZvcmdldCBhbmQgZm9yIEFsaWNlIGluIFdvbmRlcmxhbmQgZmFucywgYSB3ZWRkaW5nIHRoZW1lIHlvdXIgZ3Vlc3RzIHdpbGwgbG9uZyByZW1lbWJlci4KU2hlIGlzIHRoZSBzdHJvbmcgd2lsbGVkIGRhdWdodGVyIG9mIHRoZSBldmlsIGRlc3BvdCBNaW5nLCBhbmQgaGVyIGJlYXV0eSBvZnRlbiBsZWFkcyBvdGhlcnMgdG8gdW5kZXJlc3RpbWF0ZSBoZXIuIApUaGF0IGEgbG9hZGVkIHF1ZXN0aW9uLiBXaGF0IHdvdWxkIHJlYWxseSBoZWxwIGlzIGlmIHBlb3BsZSB0b29rIGJldHRlciBjYXJlIG9mIHRoZW1zZWx2ZXMsIHNhdyB0aGVpciBwcmltYXJ5IGRvY3RvciByZWd1bGFybHkgYW5kIGFjdHVhbGx5IHRvb2sgdGhlaXIgYWR2aWNlLiBJZiB5b3UgYXJlIGRpYWJldGljLCBjaGVjayB5b3VyIHN1Z2FycyBhbmQgY2hhbmdlIHlvdXIgZGlldC4K|<---