<!DOCTYPE html>
<html class="no_js" id="facebook" lang="en">
 <head>
  <meta charset="utf-8"/>
  <meta content="default" id="meta_referrer" name="referrer"/>
  <noscript>
   <meta content="0; URL=/odeinc/videos/%EC%9C%A4%EC%83%81-%EA%B7%B8%EA%B2%8C-%EB%82%9C-%EC%8A%AC%ED%94%84%EB%8B%A4-feat%EC%9C%A0%EC%84%B1%EC%9D%80-%ED%8B%B0%EC%A0%8011%EC%9B%94-30%EC%9D%BC-%EC%A0%95%EC%98%A4-%EA%B3%B5%EA%B0%9C-%EB%90%A9%EB%8B%88%EB%8B%A4-%EC%9C%A4%EC%83%81-%EC%9C%A0%EC%84%B1%EC%9D%80-%EA%B7%B8%EA%B2%8C%EB%82%9C%EC%8A%AC%ED%94%84%EB%8B%A4/864583426977591/?_fb_noscript=1" http-equiv="refresh"/>
  </noscript>
  <title id="pageTitle">
   [area1][mkey1][keyword1][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
  <meta content="https://scontent-sin6-1.xx.fbcdn.net/v/t15.5256-10/15131894_864585463644054_4211785474672427008_n.jpg?_nc_cat=110&amp;_nc_ht=scontent-sin6-1.xx&amp;oh=179362ad333dc42c4220ed2c4eb81e95&amp;oe=5CAA61BB" property="og:image"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
  <meta content="video" property="og:type"/>
  <meta content="https://video-sin6-1.xx.fbcdn.net/v/t42.1790-2/15223584_1411420765565313_8229095637635825664_n.mp4?_nc_cat=103&amp;efg=eyJybHIiOjMwMCwicmxhIjo1MTIsInZlbmNvZGVfdGFnIjoic3ZlX3NkIn0%3D&amp;rl=300&amp;vabr=112&amp;_nc_ht=video-sin6-1.xx&amp;oh=81bff6a8e5a367145b7e70e3f04984f9&amp;oe=5C113B64" property="og:video"/>
  <meta content="video/mp4" property="og:video:type"/>
  <meta content="400" property="og:video:width"/>
  <meta content="224" property="og:video:height"/>
 </head>
 <body class="_4-u5 _2yq _3og5 UIPage_LoggedOut _-kb _61s0 _605a b_c3pyn-ahh x1 Locale_en_US" dir="ltr">
  <div class="_li" id="u_0_5">
   <div class="_3_s0 _1toe _3_s1 _3_s1 uiBoxGray noborder" data-testid="ax-navigation-menubar" id="u_0_6">
    <div class="_608m">
     <div class="_5aj7 _tb6">
      <div class="_4bl7">
       <span class="mrm _3bcv _50f3">
        Jump to
       </span>
      </div>
      <div class="_4bl9 _3bcp">
       <div aria-keyshortcuts="Alt+/" aria-label="Navigation Assistant" class="_6a _608n" id="u_0_7" role="menubar">
        <div class="_6a uiPopover" id="u_0_8">
         <a aria-expanded="false" aria-haspopup="true" class="_42ft _4jy0 _55pi _2agf _4o_4 _63xb _p _4jy3 _517h _51sy" href="#" id="u_0_9" rel="toggle" role="button" style="max-width:200px;">
          <span class="_55pe">
           Sections of this page[search]<li>[ahref]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li><li>[search]</li><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search][ahref][search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>
          </span>
          <span class="_4o_3 _3-99">
           [search][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[ahref]<li>[link]</li>[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
          </span>
         </a>
        </div>
        <div class="_6a _3bcs">
        </div>
        <div class="_6a mrm uiPopover" id="u_0_a">
         [ahref]
         
        </div>
       </div>
      </div>
      <div class="_4bl7 mlm pll _3bct">
       <div class="_6a _3bcy">
        Press
        <span class="_3bcz">
         alt
        </span>
        +
        <span class="_3bcz">
         /[search][search]<li>[search]</li><li>[search]</li>[search]<li>[search]</li>[ahref]<li>[ahref]</li>
        </span>
        to open this menu
       </div>
      </div>
     </div>
    </div>
   </div>
   <div data-referrer="pagelet_bluebar" id="pagelet_bluebar">
    <div id="blueBarDOMInspector">
     <div class="_53jh">
      <div class="loggedout_menubar_container">
       <div class="clearfix loggedout_menubar">
        <div class="lfloat _ohe">
         <h1>
          <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
         </h1>
        </div>
        <div class="menu_login_container rfloat _ohf" data-testid="royal_login_form">
         <form action="/login/device-based/regular/login/?login_attempt=1&amp;lwv=110" id="login_form" method="post" novalidate="1" onsubmit="">
          <table cellspacing="0" role="presentation">
           <tr>
            <td class="html7magic">
             <label for="email">
              Email or Phone
             </label>
            </td>
            <td class="html7magic">
             <label for="pass">
              Password
             </label>
            </td>
           </tr>
           <tr>
            <td>
            </td>
            <td>
            </td>
            <td>
             <label class="uiButton uiButtonConfirm" for="u_0_2" id="loginbutton">
             </label>
            </td>
           </tr>
           <tr>
            <td class="login_form_label_field">
            </td>
            <td class="login_form_label_field">
             <div>
              <a href="/recover/initiate?lwv=110&amp;ars=royal_blue_bar">
               Forgot account?
              </a>
             </div>
            </td>
           </tr>
          </table>
         </form>
        </div>
       </div>
      </div>
      <div class="signupBanner">
       <div class="signup_bar_container">
        <div class="signup_box clearfix">
         <span class="signup_box_content">
          <li>[search]</li>[ahref][ahref][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
         </span>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
   <div class="uiContextualLayerParent" id="globalContainer">
    <div class="fb_content clearfix " id="content" role="main">
     <div class="_5vb_ _5ss6" id="contentArea">
      <div>
       <div class="_5hn6" id="u_0_c">
        <div class="_3ob9" id="u_0_d">
         <div class="_3obd">
          <div class="_3oba">
           See more of 오드아이앤씨 on Facebook
          </div>
          <div class="_4qc7">
           <div class="_4qb-">
            [link]
            
           </div>
           <div class="_3obc">
            or
           </div>
           [ahref]
           
          </div>
         </div>
        </div>
        <div class="_62uh" id="u_0_e">
         <div class="uiScaledImageContainer _62ui">
         </div>
         <div class="_62uj">
          <div class="_62uk">
           See more of 오드아이앤씨 on Facebook
          </div>
          <div>
           <form action="/login/device-based/regular/login/?login_attempt=1&amp;lwv=110" id="login_form" method="post" novalidate="1" onsubmit="">
            <div>
             <h2>
              [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
             </h2>
             <div class="_qba">
              <div class="_qbb">
              </div>
              <div class="_qbf">
              </div>
              <div class="_qbc">
              </div>
             </div>
             <button class="_42ft _4jy0 _qbo _3jd8 _4jy5 _4jy1 selected _51sy" data-testid="royal_login_button" id="loginbutton" type="submit" value="1">
              Log In
             </button>
             <div class="_qbe">
              [search]
              
             </div>
            </div>
           </form>
          </div>
          <div class="_62um">
           <div class="_62un">
            <span class="_62uo">
             or
            </span>
           </div>
          </div>
          [link]
          
          <div class="_62up">
           [link]
           
          </div>
         </div>
        </div>
       </div>
      </div>
      <div>
      </div>
      <div class="clearfix _3-8y">
       <div class="_1qkq _1qk-">
        <h3>
         [area4][keyword4][symbolx][area4][keywordx][symbolx][bracketl8][bracketr8][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
        </h3>
        <div class="_16gj">
         <div data-referrer="permalink_video_pagelet" id="permalink_video_pagelet">
         </div>
        </div>
        <div data-referrer="stream_pagelet" id="stream_pagelet">
         <span class="muffin_tracking_pixel_start">
         </span>
         <span class="muffin_tracking_pixel_end">
         </span>
        </div>
       </div>
       <div class="_5rzs _5v6d _1qkq _1qku">
        <div class="_64a">
         <div class="_64b" id="u_0_h">
          <div id="u_0_i">
           <div class="pagelet" data-referrer="video_permalink_related_pagelet" id="video_permalink_related_pagelet">
           </div>
           <div class="pagelet" data-referrer="pagelet_ego_pane" id="pagelet_ego_pane">
           </div>
          </div>
          <div data-referrer="pagelet_rhc_footer" id="pagelet_rhc_footer">
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
    <div>
    </div>
   </div>
   <span>
   </span>
  </div>
  <div>
  </div>
  <div class="hidden_elem">
   <code id="u_0_11">
   </code>
  </div>
  <div class="hidden_elem">
   <code id="u_0_17">
   </code>
  </div>
  <div class="hidden_elem">
   <code id="u_0_19">
   </code>
  </div>
  <div class="hidden_elem">
   <code id="u_0_1d">
   </code>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0366
  </b>
 </body>
</html>