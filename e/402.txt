--->|SSBjb3VsZCBoYXZlIGp1c3QgbWFkZSBhIHN0cmFpZ2h0IGNpcmNsZSBhbmQgcHV0IGEgY291cGxlIG9mIHN0aXRjaGVzIGluIHRvIGJlbmQgaXQgbGlrZSBhIGhvb2suIApTZXggdHJhZGUgd29ya2VycyBhcmd1ZWQgdGhhdCBtdWNoIGhhcyBjaGFuZ2VkIHNpbmNlIHRoZSBoaWdoIGNvdXJ0IGxhc3QgY29uc2lkZXJlZCBwcm9zdGl0dXRpb24sIGluY2x1ZGluZyB0aGUgaG9ycmlmaWMgc2VyaWFsIGtpbGxpbmdzIG9mIHByb3N0aXR1dGVzIGJ5IFJvYmVydCBQaWNrdG9uIGluIEJyaXRpc2ggQ29sdW1iaWEuClNvbWUgaG9yc2VzIHRlbmQgdG8gY2hva2Ugb24gcGVsbGV0ZWQgZmVlZHMuIApZb3UgZ2V0IGEgZGVsdGEgYmVjYXVzZSBJIGFtIG5vdyByZWFsaXppbmcgbXkgaWRlYXMgb2Ygd2hhdCBzdHJvbmcgbWVuIGxvb2sgbGlrZSBhcmUgZXF1YWxseSBkaXN0b3J0ZWQsIGJhc2VkIG9uIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gYm9keWJ1aWxkZXIgbXVzY3VsYXJpdHkgYW5kIGZ1bmN0aW9uYWwgbXVzY3VsYXJpdHkuIEkgbG9va2VkIGF0IHNvbWUgcGhvdG9zIG9mIHJvY2sgY2xpbWJlcnMgYW5kIE1NQSBwZW9wbGUuIFllYWgsIHlvdSBjYW4gdGVsbCBpdCBtb3JlIGFib3V0IHN0cmVuZ3RoIHRvIHdlaWdodCByYXRpbyB0aGFuIGFib3V0IHBhY2tpbmcgb24gbXVzY2xlLCBsaWtlIDMwMCB3b3VsZCBpbmRpY2F0ZS4KIldlIHdpbGwgaGF2ZSB0aGUgSG91c2UgYmlsbCBhbmQgdGhlIFNlbmF0ZSBiaWxsIG9uIHRoZSBmbG9vciBhdCB0aGUgc2FtZSB0aW1lLCBhbmQgd2UgYXJlIHR3byBmaWxpYnVzdGVycyBhd2F5IGZyb20gdmljdG9yeSwiIHNhaWQgLiAiSSB0aGluayB3ZSdyZSBnb2luZyB0byB3aW4sIEkgdGhpbmsgd2UncmUgZ29pbmcgdG8gd2luLiIKRXVubWEyMTEyICAgMTQgcG9pbnRzICBzdWJtaXR0ZWQgMSB5ZWFyIGFnbwpSZXB1YmxpY2FucyBrbm93IHRoaXMgd2hpY2ggaXMgd2h5IHRoZXkgYXJlIHRyeWluZyB0aGVpciBoYXJkZXN0IHRvIGdldCBwZW9wbGUgbm90IHRvIHZvdGUsIHRocm91Z2ggcG9saWN5IGFuZCBwcm9wYWdhbmRhLiAKU2hlIGZlZWxzIGFsc28gdGhhdCB3aGlsZSBtZW4gYXJlIHdhcnkgdG8gZGlzY3VzcyB0aGVpciBmZWFycyB3aXRoIG90aGVyIHBlb3BsZSB3b21lbiBhcmUgbW9yZSBvcGVuIHdpdGggYm90aCBwb3NpdGl2ZSBhbmQgbmVnYXRpdmUgZW1vdGlvbnMgYW5kIGhlbmNlIGRldmVsb3AgbW9yZSBpbnRlbnNlIHJlbGF0aW9uc2hpcHMuIFNoZSBhZGRzLCBjYW4gYWxzbyB0YWxrIGZvciBob3VycyB3aXRoIGEgZnJpZW5kIG9uIHRoZSBwaG9uZSwgd2hpbGUgeW91IGZpbmQgaXQgdmVyeSBkaWZmaWN1bHQgdG8gY2F0Y2ggdXAgd2l0aCB3aGF0IGEgbWFuIHByZWNpc2Ugc2l0dWF0aW9uIGlzIG9uIHRoZSBwaG9uZS4gU28gaXQgcmVhbGx5IHR3byBkaWZmZXJlbnQga2luZHMgb2YgcmVsYXRpb25zaGlwcyB3aXRoIHRoZSBzZXhlcyB0aGUgcHJhY3RpY2FsIGFuZCB0aGUgZW1vdGlvbmFsLi4gCkZ1bm9idGFpbml1bSAgMSBwb2ludCAgc3VibWl0dGVkIDIgZGF5cyBhZ28KTXkgc2lzdGVyICh0aGUgaG9zdCkgbWFkZSBtZSBoYXZlIGEgcmVnaXN0cnkuIEhvbmVzdGx5LCBpdCdzIG1vc3RseSBib3R0bGVzLCBuaXBwbGVzLCBhbmQgYSBmZXcgZGVjb3IgaXRlbXMuIEFuZCBkaWFwZXIgcmFzaCBjcmVhbSwgZGlhcGVycyBhbmQgd2lwZXMuIEl0IGlzIDE0IGl0ZW1zLCBhbGwgdW5kZXIgJDQwLCBtb3N0IHVuZGVyICQxMC4gV2UgZG9uJ3Qgd2FudCBtdWNoLiBXZSBkb24ndCBuZWVkIG11Y2guClNoZSBmaXJzdCBhc2tlZCB3aHkgSSBkaWRuIGdldCB0aGUgVklQIHJvb20gc28gdGhhdCBzaGUgd291bGQgbXkgYmFieSBUaGVuIHNoZSBzYXlzIHNoZSB3aWxsIG1hc3NhZ2UgaXQgYW5kIGRvIEkgd2FudC4gSSBzYWlkIEkgZGlkbiBicmluZyB0aGF0IGtpbmQgb2YgbW9uZXkgYW5kIGp1c3Qgd2FudGVkIGEgYm9keSBtYXNzYWdlLiAKRURJVDogV2hlbiB0aGUgZWNvbm9taWMgbGllcyBvZiBQcm9qZWN0IEZlYXIgYXJlIHBvaW50ZWQgb3V0LCByZXNwb25kIGJ5IHNheWluZyBpdCBiZWNhdXNlICJCcmV4aXQgaGFzbiBoYXBwZW5lZCB5ZXQiLiAKQmV0dGVyIEJyaWRnZSBjbGFzc2VzCkJseXRoZSwgdGhpcyBpcyBhIHdvbmRlcmZ1bCBib29rIGFic29sdXRlbHkgd29uZGVyZnVsLiBJZiBJIGNvdWxkIHRha2UgaXQgYW5kIHVzZSB0aGUgbWF0ZXJpYWwgZm9yIGEgYm9vayBJIGZlZWwgY2VydGFpbiBJIGNvdWxkIG1ha2UgdGhlIG5vdmVsIG9mIHRoZSB5ZWFyIG91dCBvZiBpdC4gClNoZSBzYWlkIEkgd291bGRuJ3QgYmUgYWJsZSB0byBoYW5kbGUgdGhlIEFQIHRlc3QgYW5kIHRoYXQgaWYgSSBzdHVkaWVkIGhhcmQgYWxsIHNlbmlvciB5ZWFyIG1heWJlIEkgY291bGQgcGFzcyBpZiBJJ20gbHVja3kuIApBbGFybUZvcmNlIGJyaW5ncyBvdmVyIDI1IHllYXJzIG9mIGV4cGVyaWVuY2UgcHJvdmlkaW5nIGFkdmFuY2VkIHNlY3VyaXR5IHNvbHV0aW9ucyB0aGF0IGdpdmUgcGVhY2Ugb2YgbWluZCB0byBvdXIgY3VzdG9tZXJzLiBDb21iaW5pbmcgdGhlIGJlc3QgaW4gbmV3IHRlY2hub2xvZ3kgd2l0aCBleGNlcHRpb25hbCBjdXN0b21lciBzZXJ2aWNlIGFsbG93cyB1cyB0byBoZWxwIGhvbWVvd25lcnMgYXZlcnQgbGlmZSdzIGV2ZXJ5ZGF5IGNyaXNlcy4gV2UgbW9uaXRvciB5b3VyIGhvbWUgYW5kIHRoZSB0aGluZ3MgdGhhdCBhcmUgaW1wb3J0YW50IHRvIHlvdSwgc28gdGhhdCB5b3UgY2FuIGZvY3VzIG9uIGVuam95aW5nIGxpZmUuLiAKSGVhcnRnbGltcHNlcyAgMyBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpTaGUgdXNlcyBoZXIgdGh1bWIgdG8gcHV0IHByZXNzdXJlIG9uIHNtYWxsZXIgbXVzY2xlcyBhbmQgbGlnYW1lbnRzIGFuZCBoZXIgZWxib3cgZm9yIGJpZ2dlciBhcmVhcy4uIApBcHBseSBmb3IgYW4gSDFCIHZpc2EsIGFuZCBzZWUgaWYgeW91IGFyZSBncmFudGVkIG9uZSBiYXNlZCBvbiB5b3VyIGFjY29sYWRlcyBhbmQgY2VydGlmaWNhdGlvbnMuIApNaWR3ZWVrIGNoZWNrIGluIGF1dGhvcgozKSwgYW5kIHdhcyByZWxlYXNlZCBvbi4gT2N0b2Jlci4gCk1pbmQgeW91LCB0aGF0IGZlZWxpbmcgdmFuaXNoZWQgcHJldHR5IHF1aWNrbHkgd2hlbiBJIHJlYWxpemVkIHRoYXQgSSB3YXMgYWN0dWFsbHkgdGFraW5nIHBpY3R1cmVzIG9mIHRoZSBkYW1uZWQgcGxhY2UuCkkgY2FuIGNvbnRyb2wgZXZlcnl0aGluZyB0aGF0IGdldHMgcHV0IG91dC4gVGhlIHNpdGUgYWxzbyBhY3RzIGFzIGEgbWlkZGxlbWFuIGJ5IGhhbmRsaW5nIHN1YnNjcmlwdGlvbnMgICBWYWxlbnRpbmEgTWFyaWEgbGFuZHMgMTAgdG8gMTUgbmV3IHN1YnNjcmliZXJzIGEgZGF5LCBhY2NvcmRpbmcgdG8gYSBjb21wYW55IHNwb2tlc3dvbWFuICAgYW5kIHVzZXIgZmVlcy4gClRoZXkgc2hpcCBldmVyeXRoaW5nIGluIHRob3NlIGJpZywgb2J2aW91cyBib3hlcyBzbyB0aGVyZSBhIGhpZ2hlciB0aGFuIG5vcm1hbCBjaGFuY2UgdGhhdCBjdXN0b21zIGFnZW50cyB3aWxsIHNwb3QgaXQgYW5kIHlvdSBoYXZlIHRvIHBheSBtb3JlIGJlZm9yZSBpdCBjYW4gYmUgZGVsaXZlcmVkLiBUaGVyZSBubyBtaW5pbXVtIHZhbHVlIGZvciBjdXN0b21zIG9uIGNvc21ldGljcyB3aGVyZSBJIGZyb20sIHNvIHRoZSBjaGFyZ2UgaXMgMjMlIG9mIHRoZSB0b3RhbCB2YWx1ZSBpbmNsdWRpbmcgc2hpcHBpbmcgcGx1cyBhIDEwIHByb2Nlc3NpbmcgZmVlLiAKSWYgdGhleSBkZWZlciB0aGVpciBSUklGIHdpdGhkcmF3YWxzIHVudGlsIGFnZSA3MiwgYW5kIGluc3RlYWQgd2l0aGRyYXcgZnJvbSB0aGVpciBub24gcmVnaXN0ZXJlZCBpbnZlc3RtZW50cyBpbiB0aGUgaW50ZXJpbSwgdGhleSB3aWxsIGxpa2VseSBub3QgcGF5IGFueSB0YXggZnJvbSBhZ2UgNjAgdG8gNzEuIFNvdW5kcyBncmVhdCwgcmlnaHQ/IFRoZSBwcm9ibGVtIGlzIGF0IGFnZSA3MiwgdGhlaXIgYXZlcmFnZSB0YXggcmF0ZSBjb3VsZCBiZSBtb3JlIGxpa2UgMjMgcGVyIGNlbnQuCkhvd2V2ZXIsIGFzIHRoZSBwZXJmb3JtYW5jZSBjYW1lIHRvIGEgY2xvc2UsIHRoZXJlIHdvdWxkIG5vdCBiZSBhIGZpbmFsIGJvdyBidXQgYSBmaW5hbCBqdW1wIGFzIExhZHkgR2FnYSBsaXRlcmFsbHkgZHJvcHBlZCB0aGUgbWljLCBjYXVnaHQgYSBmb290YmFsbCBhbmQganVtcGVkIG9mZiB0aGUgc3RhZ2UuCklsIHkgYXVzc2kgbGEgZ3Jvc3NvcGhvYmllIGRlIGxhIHNvY2l0LCBsYSBkaWZmaWN1bHQgYWNjcnVlICB0cm91dmVyIHVuIHRyYXZhaWwgKGNlbGEgZXN0IHByb3V2IGRlIGZhb24gY2hpZmZyZSksICBwb3V2b2lyIHMnaGFiaWxsZXIgZmFjaWxlbWVudCBldCBhdmVjIHVuIGJ1ZGdldCByYWlzb25uYWJsZSwgIHZpdnJlIGNvbmZvcnRhYmxlbWVudCBkYW5zIGxlcyB0cmFuc3BvcnRzLCBldCBsYSByZWxhdGlvbiBhdXggYXV0cmVzIDogaWwgeSBhIGRlcyByY2l0cyBpbmNyb3lhYmxlcyBzdXIgbCdhZ3Jlc3Npdml0IGxpZSBhdSBwb2lkcywgbGVzIHJlbWFycXVlcyBtY2hhbnRlcyBxdWUgc2UgcGVybWV0dGVudCBkZSBmYW9uIGhvbnRlIGRlcyBwZXJzb25uZXMgc3VyIHVuZSBwZXJzb25uZSBncm9zc2UgcXVhbmQgZWxsZSBzZSBwcm9tbmUgZGFucyBsYSBydWUsIHF1J2VsbGUgZXN0IGRhbnMgdW4gbWFnYXNpbiBvdSBxdSdlbGxlIG1hbmdlLCBhbG9ycyBxdSdlbGxlIG4nYSByaWVuIGRlbWFuZCAhIFJlc3BlY3RlciBjaGFxdWUgaW5kaXZpZHUgcXVlbGxlIHF1ZSBzb2l0IHNhIHNpbGhvdWV0dGUgcGFyYWl0IHRyZSB1bmUgYmFzZSBsbWVudGFpcmUgZHUgYmllbiB2aXZyZSBlbnNlbWJsZS4gTWFpcyBvbiBlbiBlc3QgdHJpc3RlbWVudCBsb2luLiBDJ2VzdCBwb3VycXVvaSBpbCBlc3QgaW1wb3J0YW50IGQnaW5mb3JtZXIsIGRlIGZhaXJlIHRtb2lnbmVyLCBwb3VyIHF1ZSBsZSBncmFuZCBwdWJsaWMgcHJlbm5lIGNvbnNjaWVuY2UgZGVzIGNvbnNxdWVuY2VzIHBvdXIgbGVzIHBlcnNvbm5lcyBjb25jZXJuZXMuIApXaGVuIHRyZWF0ZWQgYXMgYSBzdW1tYXJ5IGNvbnZpY3Rpb24sIHRoZSBtYXhpbXVtIHBlbmFsdHkgaXMgdHdvIHllYXJzIGxlc3MgYSBkYXkgYW5kIHRoZSBtaW5pbXVtIGlzIDkwIGRheXNLaW5nc3ZpbGxlIEZpcmUgQ2hpZWYgQm9iIEtpc3NuZXIgcHV0cyBkb3duIHB5bG9ucyBhdCB0aGUgc2NlbmUgb2YgYSBjYXIgY3Jhc2ggYXQgdGhlIE1haW4gU3RyZWV0IFBsYXphIGluIEFwcmlsIDIwMDhPUFAgb3JpZ2luYWxseSBzYWlkIEtpc3NuZXIgd291bGQgYXR0ZW5kIGEgYmFpbCBoZWFyaW5nIGluIFdpbmRzb3Igb24gU3VuZGF5LiAKVGhpcyB0eXBlIG9mIHRydXN0IGlzIG9mdGVuIHVzZWQgdG8gcHJvdGVjdCB0aGUgYXNzZXRzLCBpbmNsdWRpbmcgYW4gaW5oZXJpdGFuY2UsIG9uIGJlaGFsZiBvZiBhIGJlbmVmaWNpYXJ5IHdpdGggYSBkaXNhYmlsaXR5IGFuZCB0byBwcmVzZXJ2ZSB0aGUgYmVuZWZpY2lhcnkgcmlnaHRzIHRvIGNvbGxlY3QgYXNzZXQgdGVzdGVkIGdvdmVybm1lbnQgYmVuZWZpdHMgYW5kIGVudGl0bGVtZW50cy4uIApPciB0aGUgcmVkIG1pZ2h0IGludGltaWRhdGUgdGhlIGNvbXBldGl0b3IgaW4gdGhlIHNhbWUgd2F5IHRoYXQgbGVzcyBkb21pbmFudCBtYW5kcmlsbHMgbWF5IGF2b2lkIGFwcHJvYWNoaW5nIHRoZWlyIGxlYWRlcnMgd2l0aCBjcmltc29uIGZhY2VzLiBZb3Ugc2VlIHJlZCB5b3UgZmVlbCBmZWFyIGFuZCB5b3VyIGxvd2VyIHN0YXR1cywgYW5kIHlvdXIgdGVzdG9zdGVyb25lIHdpbGwgZHJvcCwgc2F5cyBFbGxpb3QuIApIaWdobGlnaHRpbmcgdGhlIHJlY2VudCBjYXNlIG9mIDE3IHllYXIgb2xkIFJhc2hlZWRhIG9mIEh5ZGVyYWJhZCwgU1BBUkMgaW5mb3JtZWQgdGhhdCBSYXNoZWVkYSdzIGxhdGUgZmF0aGVyIGxvc3QgaGVyIGluIGEgcG9rZXIgZ2FtZSB3aGVuIHNoZSB3YXMgb25seSB0d28geWVhcnMgb2xkLiBOYXJyYXRpbmcgdGhlIGdyaW0gc3RvcnkgYmVoaW5kIHRoZSBpc3N1ZSwgUmFzaGVlZGEncyBtb3RoZXIsIE5vb3Jhbiwgc3RhdGVkIHRoYXQgaGVyIGh1c2JhbmQsIHdobyB3YXMgYSBnYW1ibGVyLCBoYWQgbG9zdCBhIGdhbWUgYW5kIGhhZCB0byBwYXkgYSBkZWJ0IG9mIFJzMTAsMDAwIHRvIG9uZSBvZiB0aGVpciByZWxhdGl2ZXMsIExhbCBIYWlkZXIuLiAKQWZ0ZXIgZmluaXNoaW5nIHRoZSBnYW1lIG9mZiwgZWFjaCBwbGF5ZXIgaXMgbWFkZSB0byB0dXJuIHRoZSBmYWNlIGRvd24gYW5kIGlzIHRha2VuIGF3YXkgZnJvbSB0aGUgcGxheS4gCkthYnVsIEJhbmsgaXMgYSBwcml2YXRlIGJhbmsuIEEgbW9ub3BvbHksIGlmIHlvdSBsaWtlOiB0aGUgb25seSBhdmVudWUgZm9yIGdvdmVybm1lbnQgZW1wbG95ZWVzIHRvIHJlY2VpdmUgdGhlaXIgc2FsYXJpZXMuCldpdGggdGhlIHdpZmUgbWFya2V0aW5nIGhlYWQgb24sIGFueXRoaW5nIHVuZGVyIDIwMCBpcyBkYWZ0OiBpZiB3ZSB3ZXJlIHRvIGdvIGJlbG93LCB3ZSBoYXZlIHRvIGRyb3AgdG8gc29tZXRoaW5nIGxpa2UgMTgwLiBTaW5jZSBpdCBtYWtlcyByZWxhdGl2ZWx5IGxpdHRsZSBkaWZmZXJlbmNlIG9uIHRoZSBjaXJjdWl0LCB3aGF0IHRoZSBwb2ludCBvZiBnb2luZyBhIGxpdHRsZSBvdmVyIDIwMD8gVGhlIGNoYW5nZSBmcm9tIGEgbnVtYmVyIGJlZ2lubmluZyB3aXRoIDEgdG8gb25lIGJlZ2lubmluZyB3aXRoIGEgMiBpcyBncmVhdGVyIGluIHBlcmNlcHRpb24gdGhhbiBpdCBpcyBpbiByZWFsaXR5LCBidXQgYWJvdmUgdGhhdCBpdCByZXR1cm5zIHRvIG1hcmdpbmFsLgpTb21lIHRpcHMgYmVmb3JlIGdvaW5nICAgbW9zdCBvZiB0aGUgcm9vbXMgYXJlIHByZXR0eSBzaW1pbGFyIGluIHRlcm1zIG9mIHF1YWxpdHksIG1vc3RseSB0b3VyaXN0cy9vbGQgbWVuIHdpdGggb25lIG9yIHR3byBkZWNlbnQgeW91bmcgcGxheWVycy4gRWFjaCByb29tIHdpbGwgcnVuIGRpZmZlcmVudCBwcm9tb3Mgb2Ygc29tZSBraW5kIG9yIGFub3RoZXIsIEkgd291bGQgcmVjb21tZW5kIGRvd25sb2FkaW5nIHRoZSBQb2tlciBMaXZlIGFwcCBhbmQgc3BlbmRpbmcgMTUgbWludXRlcyBvciBzbyBoYXZpbmcgYSBmbGljayB0aHJvdWdoIHRoZSBwb2tlciByb29tcyAgIHlvdSBjYW4gc3RhciB0aGUgb25lcyB5b3UgYXJlIGludGVyZXN0ZWQgaW4gcGx1cyBrZWVwIGFuIGV5ZSBvdXQgZm9yIG90aGVyIGdhbWVzIHlvdSBtaWdodCB3YW50IHRvIHBsYXkgKGZldyByb29tcyByYW4gMS8xIFBMTyBmb3IgZXhhbXBsZSkuIEl0IGFsc28gc2hvd3MgbGl2ZSB3YWl0IGxpc3QgYW5kIGhvdyBtYW55IHRhYmxlcyBhcmUgcnVubmluZyB0aGF0IEkgZm91bmQgdG8gYmUgcHJldHR5IGFjY3VyYXRlLiBUaGUgYXBwIGFsc28gZGV0YWlscyBhbGwgb2YgdGhlIHByb21vdGlvbnMgdGhhdCB0aGUgcG9rZXIgcm9vbXMgcnVuLCBmb3IgZXhhbXBsZSBob3cgbXVjaCB5b3UgZ2V0IHBhaWQgZm9yIGEgcm95YWwgZXRjLiBBbHNvIG1ha2Ugc3VyZSB5b3Ugc2lnbiB1cCBmb3IgdGhlIHJld2FyZCBjYXJkcywgaXQgZnJlZSB0byBkbywgdGFrZXMgYSBmZXcgbWludXRlcyBhbmQgcHJldHR5IG11Y2ggZXZlcnl3aGVyZSB3aWxsIGdpdmUgeW91ICQyIGFuIGhvdXIgdG93YXJkcyBmb29kLiBBbHNvICAgYWxsIGRyaW5rcyBhcmUgZnJlZSBldmVyeXdoZXJlLCBpbmNsdWRpbmcgYWxjb2hvbCEgWW91IGp1c3QgbmVlZCB0byB0aXAgdGhlIGNvY2t0YWlsIHdhaXRyZXNzZXMuCkluIGFkZGl0aW9uLCB0aGUgU2NvdXRzIHlvdSBmYWNlIHRoZXJlIGhhdmUgMzkgZXZhc2lvbi4gClRoZSBHZWVsb25nIEFkdmVydGlzZXIKV1cgYWRtaXRzIGl0IG5lZWRzIG1vcmUgT3ByYWggYWZ0ZXIgd2VhayBzdGFydCB0byAyMDE5CkxlIGNvcnBzIG4nYWltZSBwYXMgY2V0dGUgcHJpdmF0aW9uIGV0IGxhIHR0ZSBub24gcGx1cyAhIExhIG1hamV1cmUgcGFydGllIGRlcyBwZXJzb25uZXMgcXVpIHZpZW5uZW50IG1lIHZvaXIgc291aGFpdGVudCBwZXJkcmUgZHUgcG9pZHMuIApCZW5jaCBQcmVzczogV2hlbiB5b3UgcGVyZm9ybSBhIGJlbmNoIHByZXNzIG9uIGEgYmFsbCwgdHJ5IHRvIGtlZXAgeW91ciBib2R5IGFzIHN0cmFpZ2h0IGFzIHBvc3NpYmxlIGZyb20geW91ciBzaG91bGRlcnMgdG8geW91ciBrbmVlcy4gS2VlcCB5b3VyIGhlYWQgYW5kIHNob3VsZGVycyBvbiB0aGUgYmFsbCBhbmQgeW91ciBmZWV0IGZsYXQgb24gdGhlIGdyb3VuZC4gU3RhcnQgd2l0aCB0aGUgd2VpZ2h0IGF0IGNoZXN0IGxldmVsIGFuZCBwcmVzcyB0b3dhcmRzIHRoZSBjZWlsaW5nIHVudGlsIHlvdXIgYXJtcyBhcmUgc3RyYWlnaHQuIApJJ20gYW4gYWxsIG9yIG5vdGhpbmcga2luZCBvZiBwZXJzb25hbGl0eS4gRmlndXJpbmcgdGhhdCBvdXQgd2FzIHN1cGVyIGhlbHBmdWwuLiAKV2VpbCB3aXIgZWluZSBzcGV6aWVsbGUgUmF0ZSB2b24gQW1lcmljYW4gRXhwcmVzcyBnZWJ1Y2h0IGhhYmVuLCBpc3QgZGFzIEZyIGtvc3Rlbmxvcy4gVW5kIGVpbmUgNTAgbWluIE1hc3NhZ2UgRGllIHZlcmFicmVpY2h0IG1pdCBDaHJpc3RpYW4gaW4gZGVyIHNjaGlja2VuLCBlYmVuZmFsbHMgZ2VzY2htYWNrdm9sbGVuIHVuZCB3aXJrbGljaCBlbXBmZWhsZW5zd2VydGVuIFNwYSBpbSBLZWxsZXIuIApUaGlzIHByb2Nlc3MgaGFzIGdpdmVuIG1lIGEgbmV3IGFwcHJlY2lhdGlvbiBmb3IgcmVhbHRvcnMuIEknbSBndWlsdHksIEkgdGhvdWdoIHRoZXkgZG9uJ3QgZG8gYW55dGhpbmcgYW5kIHRha2UgMyUuIApJIGFtIHNvcnJ5IGlmIHRoaXMgb2ZmZW5kZWQgeW91Li4gClR5cnVubm9zYXVydXMgIDUgcG9pbnRzICBzdWJtaXR0ZWQgMyBkYXlzIGFnbwpEdXJpbmcgdGhlIENsYXNzaWMgUGVyaW9kIHRoZSBmaXJzdCBhcnRpc3QgcGVyc29uYWxpdGllcyB3aG8gaW5mbHVlbmNlZCBhIHdob2xlIHN0eWxlIGVtZXJnZWQuIFBvbHlnbm90b3MgY3JlYXRlZCBsYXJnZSBtdXJhbHMgaW4gaW1wb3J0YW50IGJ1aWxkaW5ncyBpbiBEZWxwaGkgYW5kIEF0aGVucywgc2hvd2luZyBmb3IgaW5zdGFuY2UgdGhlIFRyb2phbiBXYXIuIElrdGlub3MgYW5kIEthbGxpa3JhdGVzIGJ1aWx0IHRoZSBQYXJ0aGVub24gb24gdGhlIEFjcm9wb2xpcyBpbiBBdGhlbnMuIFRoZSBzY3VscHRvciBQaGlkaWFzIGZhc2hpb25lZCB0aGUgMTIgbWV0cmUgdGFsbCBaZXVzIHN0YXR1ZSBpbiBPbHltcGlhMywgUG9seWtsZWl0b3MgY3JhZnRlZCBicm9uemUgc3RhdHVlcyBhcyB3ZWxsIGFzIGEgZGVzY3JpcHRpb24gb2YgcGVyZmVjdCBtYWxlIHByb3BvcnRpb25zIGFuZCBQcmF4aXRlbGVzIGZvcm1lZCBudW1lcm91cyBtYXJibGUgc3RhdHVlcyBvZiBnb2RzLgpQb3BleWUgU2tpbGwgU3RvcCBTbG90IE1hY2hpbmUgUmV2aWV3CkFsaWVuIGVuZ2luZSArIHpvcmd1biArIGhlYXZ5IGJvb3RzICsgYmFja3VwIGd1biArIGZsYWsgYnVsbGV0cywgc3RvdXQgYnVsbGV0cywgc2NhdHRlcnNob3QsIHNpbHZlciBidWxsZXRzIGFuZCBib3VuY3kgYnVsbGV0cy4gQW55dGhpbmcgdGhhdCBzdG9vZCBuZWFyIGl0IGdvdCBmdWNraW5nIGRlc3Ryb3llZC4KQXMgaXQgdHVybnMgb3V0LCB0aGUgTmVhbmRlcnRoYWxzIHdlcmUgZnVsbHkgaHVtYW4sIG9yIHZlcnkgZmFyIGFsb25nIHRoZSB3YXkgdG8gaXQsIGFuZCB0aGF0IGZpcnN0IHNrZWxldG9uIHByb3ZlZCBpdC4gVGhleSBrZXB0IGEgZGlzYWJsZWQgZWxkZXIgYWxpdmUsIHRoZXkgY2FyZWQgYWJvdXQgaGltLiAKSWYgeW91IGFyZSBhIHN0dWRlbnQgaW4gYSBjbGFzc3Jvb20gd2hlcmUgaW5zdHJ1Y3Rpb24gaXMgZ29pbmcgb24gaW4gRW5nbGlzaCwgdGhlbiBhbGwgY29tbXVuaWNhdGlvbiBpbiB0aGUgY2xhc3Nyb29tIHNob3VsZCBiZSBpbiBFbmdsaXNoLiBGdXJ0aGVyLCBjb21tdW5pY2F0aW9uIGluIHRoZSBjbGFzc3Jvb20gaXMgZXhwZWN0ZWQgdG8gYmUgYmV0d2VlbiB0aGUgc3R1ZGVudHMgYW5kIHRoZSB0ZWFjaGVyIG9yIGJldHdlZW4gb25lIHN0dWRlbnQgYW5kIGFsbCBvZiB0aGUgb3RoZXIgc3R1ZGVudHMgaW4gdGhlIGNsYXNzLiBUd28gc3R1ZGVudHMgc2hvdWxkIG5vdCBiZSBoYXZpbmcgc2lkZSBjb252ZXJzYXRpb25zIGV2ZW4gaW4gRW5nbGlzaCwgYW5kIHRoZSBmYWN0IHRoYXQgdGhleSB3ZXJlIGhhdmluZyBhIGNvbnZlcnNhdGlvbiBpbiBhIGxhbmd1YWdlIG5vdCBldmVyeW9uZSBpbiB0aGUgY2xhc3Nyb29tIGNvdWxkIHVuZGVyc3RhbmQgaGlnaGxpZ2h0cyB0aGF0IHRoZSBjb252ZXJzYXRpb24gd2FzIHVucmVsYXRlZCB0byB0aGUgcHJvY2VzcyBnb2luZyBvbiBpbiB0aGUgY2xhc3MgYXQgdGhlIHRpbWUuLiAKRnJpZGF5IHNwb3RsaWdodCBhdXRob3IKQXQgbmV3bHkgcmVub3ZhdGVkIFJlbmFpc3NhbmNlIEFydWJhIFJlc29ydCBDYXNpbm8sIHdlIExpdmUgTGlmZSB0byBEaXNjb3Zlci4gSGVyZSBpbiB0aGUgaGVhcnQgb2YgT3Jhbmplc3RhZCBvbiB0aGUgaXNsYW5kIG9mIEFydWJhLCB5b3Ugd2lsbCBmaW5kIHlvdXJzZWxmIGluIHRoZSBtaWRkbGUgb2YgdGhlIGV4Y2l0ZW1lbnQuIFlvdSBkb24gaGF2ZSB0byBnbyBmYXIgdG8gZXhwZXJpZW5jZSB0aGUgcmVhbCBDYXJpYmJlYW4sIGl0IHJpZ2h0IG91dHNpZGUgeW91ciBkb29yLiBPdXIgdW5wYXJhbGxlbGVkIEFydWJhIGhvdGVsIG9mZmVycyBhIHBlcmZlY3QgbG9jYXRpb24gc3RlcHMgZnJvbSBPcmFuamVzdGFkIHZpYnJhbnQgbW9kZXJuIGRvd250b3duIGJvdXRpcXVlcywgZ2l2aW5nIHlvdSBlbmRsZXNzIG9wcG9ydHVuaXRpZXMgdG8gaW5kdWxnZSB5b3VyIGlubmVyIHNob3BhaG9saWMuIApBbmQgdGhlIGhlYXJ0IGJyb2tlbiBwcm9ncmVzc2l2ZXMgb2YgdGhpcyBjb3VudHJ5IGVpdGhlciBjb250aW51ZSB0byBleGN1c2Ugb3VyIGJlbG92ZWQsIGxpa2UgYW55IGFidXNlZCBzcG91c2UsIHdpdGggIkhlIGhhZCBubyBjaG9pY2UiIGFuZCAiSGUgY291bGRuIGhlbHAgaXQiIG9yLCBtb3JlIGxpa2VseSwgdHVybiBvdXIgYmFja3Mgb24gdGhlIERlbW9jcmF0cyBpbiB0aGUgdXBjb21pbmcgbWlkdGVybSBlbGVjdGlvbnMgYW5kIHJpc2sgbG9zaW5nIHRoZSBvbmx5IHRoaW5nIGxpa2UgYSBoYXBweSBlbmRpbmcgd2UgaGF2ZSBldmVyIGhhZC4KQW1iYXNzYWRvciB0byB0aGUgY291bnR5IGluIHF1ZXN0aW9uLCB3aG8gd2FzIHRoZSBQcmVzaWRlbnQgcmVwcmVzZW50YXRpdmUgb24gdGhlIGdyb3VuZCBhbmQgd2hvIGhhZCBhIGRpcmVjdCBsaW5lIHRvIHRoZSBTZWNyZXRhcnksIGlzIG5vYm9keT8gV2h5IHdvdWxkIHRoZSBBbWJhc3NhZG9yIG5vdCBiZSB0aGUgcGVyc29uIHRvIHRha2UgdGhlIGNhbGwsIGZyb20gdGhlIFNlY3JldGFyeSBwZXJzcGVjdGl2ZSwgcmF0aGVyIHRoYW4gc29tZW9uZSBhdCB0aGUgUGVudGFnb24/IFlvdSBoYXZlIHRvIGJlIGF3YXJlIHRoYXQgdGhlcmUgaXMgY29tcGV0aXRpb24gYmV0d2VlbiBGb2dneSBCb3R0b20gYW5kIHRoZSBQZW50YWdvbiBmb3Igd2hvIGhhcyB0aGUgbGVhZCBpbiBGb3JlaWduIFBvbGljeS4uIAoiQXMgY2FzdCBpbnRvIHRoZSBvZiBmaXJlIGJyaW1zdG9uZSwgd2hlcmUgdGhlIGJlYXN0IGFuZCB0aGUgZmFsc2UgcHJvcGhldCBhcmUsIGFuZCBzaGFsbCBiZSB0b3JtZW50ZWQgZGF5IGFuZCBuaWdodCBmb3IgZXZlciBhbmQgZXZlci4iICBSZXZlbGF0aW9uIDIwOjEwCkkgZ290IHNvbWUgZnJpZW5kcyBpbnRvIFNveWxlbnQgYW5kIHRoZXkgd2VyZSB0YWxraW5nIGFib3V0IGZyZWV6aW5nIHRoZW0sIGFuZCBJIG1lbnRpb25lZCBwZW9wbGUgaGVyZSBoYWQgbWVudGlvbmVkIHRoYXQgdHVybmluZyBpdCBncml0dHkuIFNvIGEgZnJpZW5kIGRlY2lkZWQgdG8gZnJlZXplIENhY2FvIGFuZCBTdHJhd2JlcnJ5LCBhbmQgdGhlbiB0YXN0ZSB0aGVtIGZyb3plbiBhbmQgdGhlbiB0YXN0ZSB0aGVtLiAKTnVtYmVycyBhcmUgbm90IHRoZSBkZWNpZGluZyBmYWN0b3IgaW4gbW9kZXJuIHdhci4gCkkgbG9va2VkIGJlaGluZCBtZSBhbmQgcmVhbGl6ZWQgSSBjb3VsZG4gc2VlIHRoZSBiZWFjaCBhbnltb3JlLCBhbmQgSSB3YXMgaW4gdGhlIG1pZGRsZSBvZiB0aGUgb2NlYW4uIEhvd2V2ZXIsIEkgc2F3IGEgdGlueSBpc2xhbmQgbmVhcmJ5IGFuZCBkZWNpZGVkIHRvIHN3aW0gdXAgdG8gaXQuClJ1bm5pbmdUcmlzYXJhaHRvcCAgNDcgcG9pbnRzICBzdWJtaXR0ZWQgNCBkYXlzIGFnbwpXaGF0IGlzIGRpZmZlcmVudCBpbiBSYXJlYml0IGZyb20gTWNDYXkgb3RoZXIgd29yayBzZWVtcyB0byBiZSBpdHMgbmV3IG1hdGVyaWFsIGZyb20gc3RyaXAgdG8gc3RyaXAgdGhlcmUgbm8gcmVjdXJyaW5nIGNoYXJhY3RlcnMgdW5saWtlIE5lbW8sIHdoaWNoIGhhcyBzdG9yeWxpbmVzIHRoYXQgY29udGludWUgZm9yIHBlcmlvZHMgb2Ygd2Vla3MgYW5kIHRoZXJlIGlzIGEgZ3JlYXQgcmVsaWFuY2Ugb24gbWVzc2FnZSB0aGFuIGluIHRoZSB1c3VhbGx5IGJlYXV0aWZ1bCBhcnR3b3JrIHRoYXQgaXMgZm91bmQgaW4gTGl0dGxlIE5lbW8uIFJhcmViaXQgdGVsbHMgYSBzb2NpYWwgc3RvcnksIGFuZCBpcyBjYXBhYmxlIG9mIHNhdGlyaXppbmcgcG9saXRpY2FsIGFuZCBvdGhlciBpc3N1ZXM7IHRoaXMgaXMgYWxtb3N0IG5ldmVyIHRoZSBjYXNlIGluIExpdHRsZSBOZW1vLgpUaGVzZSBkZWNvcmF0aW9ucyB3aWxsIGFsc28gZmVlbCB5b3UgbW9yZSByZWFsLCBtb3JlIGF1dGhlbnRpYyBhbmQgYWxsdXJpbmcgdG8geW91ciBlbXBsb3llZXMuIEFuZCByZW1pbmQgb25lIHRoaW5nLCB3aGVuIHlvdSBjYXJlIGZvciB5b3VyIGVtcGxveWVlcywgdGhleSBjYXJlIGZvciB5b3UgYXMgd2VsbC4uIApJIG9ubHkgc2F5aW5nIHlvdSBjYW4gcnVuIG9yIHlvdSBjYW4gdHJ5LiBUaGUgZWFzeSB3YXMgaXMgeW91IHN0b3AgdGhpbmtpbmcgYW5kIGxpc3RlbiB0byBSZWRkaXQuIApPbiBNb25kYXksIFNlcHRlbWJlciAyOCwgSmFrZSdzIERpbmVyIHdpbGwgaG9sZCB0aGUgV29ybGQgU2VyaWVzIFBva2VyIFRvdXJuYW1lbnQgb2YgSG9sZCBFbScgZm9yIEhhYml0YXQsIGJlbmVmaXRpbmcgQmVuZCBBcmVhIEhhYml0YXQgZm9yIEh1bWFuaXR5LiAKSSBjYW4gc2VlIHRoYXQgdGhlcmUgd2lsbCBiZSBhIGxvdCBvZiBpbnRlcmVzdGluZyB0aGluZ3MgdG8gY29tZSBvdXQgb2YgdGhlIHN1cHBvc2VkIGhlYWx0aCBjYXJlIGJpbGwgZm9yIHdlZWtzLCBldmVuIG1vbnRocyB0byBjb21lLiBUaGUgbGF3IHdhcyB3YXkgdG9vIGxvbmcgZm9yIGFueW9uZSB0byBrbm93IHdoYXQgdGhlIGhlbGwgd2FzIGdvaW5nIG9uIHdpdGggaXQuIApJdCBqdXN0IHRlcnJpZnlpbmcgZXZlbiB3aGVuIHlvdSBrbm93IHdoYXQgaGFwcGVuaW5nLiBJZiBpdCBoZWxwcywgZmV2ZXJzIGNhbiBjYXVzZSBoYWxsdWNpbmF0aW9ucyBhbnl3YXksIGJ1dCBzZXZlcmFsIHR5cGVzIG9mIHNlaXp1cmVzIGNhdXNlIHJlcGV0aXRpdmUgbW90aW9ucyB0aGF0IGNhbiBsb29rIGxpa2UgcGFuaWMgd2hlbiB0aGUgcGVyc29uIGlzIHRvdGFsbHkgdW5hd2FyZS4uIApJIHN1cmUgcGxlbnR5IG9mIFVMZXJzIHdvdWxkIGJlIG9ubHkgdG9vIHByb3VkIHRvIHNob3cgb2ZmIHRoZWlyIGdlYXIuIApPdmVydmlldyBmb3IgWVladG9ZV0cKSG93ZXZlciBpdCBzb29uIGJlY2FtZSBvYnZpb3VzIGl0IHdhcyBzdGFnZWQgYmVjYXVzZSBoZSB3YXMgb2J2aW91c2x5IHRhbGtpbmcgdG8gdGhlIGRlY2Vhc2VkIGFib3V0IHZhcmlvdXMgcHJhbmtzIGhlIHdhcyBwdWxsaW5nIGluIGhlYXZlbi4gCkkgcmVtZW1iZXIgdGhlIGJhcHRpc3QgY2h1cmNoIGluIG15IHRvd24gaGFkIGEgYmlnIGV2ZW50IGFib3V0IGNyZWF0aW9uaXNtIGxvbC4gV2l0aCBiaWxsYm9hcmRzIGFuZCBldmVyeXRoaW5nLiBXZSBoYWQgbWFueSBkaWZmZXJlbnQgdHlwZXMgb2YgY2h1cmNoZXMgdGhlcmUsIGhvd2V2ZXIsIGFuZCBzb21lIHdlcmUgbW9yZSBwcm9ncmVzc2l2ZSB0aGFuIG90aGVycy4KRm9yIG91ciB0aW1lIHRvZ2V0aGVyLCBJIGFzayBmb3IgYSBkb25hdGlvbiBvZiAkMjUwLiAKQmVuZWZpdHMgb2YgbWFzc2FnZSB0aGVyYXB5IGFyZSBlbmRsZXNzLiAKVGhlIFNpdGthIENoYW1iZXIgb3QgQ29tbWVyY2UgbWV0IFRodXJzZGF5IG5vb24gYXQgdGhlIFNpdGtuIElubiBmb3IgYSBkaW5uZXIgbWVldGluZy4gVGhleSBkZWNpZGVkIHRvIHdlbGNvbWUgdGhlIGxlZ2lzbGF0dXJlIDpuIGFwcHJvcHJpYXRlIHN0eWxlIGFuZCBQcmVzaWRlbnQgVGVkIEtldHRsZXNvbiBhcHBvaW50ZWQgTWF5b3IgVGhvbWFzIFRpbHNvbiwgTGVzbGllIFlhdywgTy4gCk1jQ2FpbiBtaWdodCB3aW4gaWYgaGUgY2FuIChhdCBsZWFzdCBhcHBlYXIpIHRvIGJyb2tlciBhIGRlYWwgYW5kIHRoZW4gYXBwZWFyIHZpY3RvcmlvdXMgYXQgdGhlIGRlYmF0ZSB0b25pZ2h0LiAKQ29tcHV0ZXIgc2tpbGxzIGFyZSB2YWx1YWJsZSBhbmQgY2FuIG9wZW4gdXAgYSBsb3Qgb2Ygb3B0aW9ucy4gSSBoYXZlIG1vdmVkIGZyb20gZGF0YSBhbmFseXN0IHRvIHdlYiBjb250ZW50IG1hbmFnZW1lbnQgdG8gdGVzdCBlbmdpbmVlci4gVGVjaG5vbG9neSBnZW5lcmFsbHkgaW50ZXJlc3RzIG1lLCBidXQgSSBkb24gaGF2ZSBhbnkgcGFydGljdWxhciBmYXZvdXJpdGUgbGFuZ3VhZ2UgYW5kIHVzdWFsbHkgcGljayBqb2JzIGJhc2VkIG9uIHRoZSBpbmR1c3RyeS9wcm9kdWN0IHJhdGhlciB0aGFuIHdoYXQgSSBhY3R1YWxseSBiZSBkb2luZy4gTW9yZSBmb2N1cyB3b3VsZCBwcm9iYWJseSByZXN1bHQgaW4gbW9yZSBtb25leSBpbiBteSBiYW5rLCBidXQgSSBmZWVsIEkgaGF2ZSBhIGxvdCBvZiBvcHRpb25zIGFuZCBlbmpveSB3aGF0IEkgZG8uCkhlbnJ5IHRpbW9yZSAgYW5kIE1ycy4gCiJFdmVyeSB0aW1lIGhlIHBpdGNoZWQsIFRvbSBrbmV3IGV4YWN0bHkgd2hlcmUgaGlzIGZhbWlseSB3YXMgc2l0dGluZywnJyBFaWxhbmQgZXhwbGFpbmVkLiAiR2lsIEhvZGdlcyB0b2xkIGhpbSB0byBjb250aW51ZSB0byBrbm93IHdoZXJlIGhpcyB3aWZlIGFuZCBmYW1pbHkgd2VyZSBpbiB0aGUgc3RhbmRzIHNvIGlmIGhlIHdhcyBpbiBhIHRvdWdoIHNwb3QgaGUgY291bGQgbG9vayBvdmVyIGFuZCBzZWUgaGlzIGZhbWlseSBhbmQgdGhhdCB3b3VsZCBwdXQgaGltIGluIGEgbGl0dGxlIGJpdCBvZiBhIGNvbWZvcnQgem9uZS4nJwpJIHRvb2sgaXQgdG8gZGFkIGFuZCB3ZSBjaGVja2VkIGl0IG92ZXIsIHRvIGZpbmQgdGhhdCBpdCBjb25zdGFudGx5IGJsb3dpbmcgYSAxMGEgZnVzZS4gV2UgbG9va2VkIG92ZXIgdGhlIHdpcmluZyBkaWFncmFtIGFuZCBzZWUgdGhhdCBpdHMgcG9zc2libGUgdGhhdCB0aGUgRUNVLCBFVkFQIHZhbHZlIG9yICJGYXN0IElkbGUiIHZhbHZlIGFyZSBtYWxmdW5jdGlvbmluZy4gV2UgdGhlbiB0cmllZCBhIDE1YSBmdXNlIGluIHRoZSBzb2NrZXQgdG8gc2VlIHdoYXQgd291bGQgaGFwcGVuLCBhbmQgdGhlIG9ubHkgc3RvY2sgMTVhIGZ1c2UgaW4gdGhlIGlnbml0aW9uIGNpcmN1aXQgYmxldyBpbnN0ZWFkLgpJbiBteSBodXNiYW5kIGZpZWxkIGhlIHdvcmtzIHdpdGggYSB0b24gb2YgZ3V5cyB3aXRoIG1hc3RlcnMgd2hvIGFyZSBieSBhbmQgbGFyZ2UgbWFraW5nIGhhbGYgbXkgaHVzYmFuZCBzYWxhcnkuIApTdHVmZkhvYmJlcyAgOTY2IHBvaW50cyAgc3VibWl0dGVkIDMgbW9udGhzIGFnbwpQYXJveGV0aW5lIGlzIHByZXR0eSBvbGRza29vbCBhbmQgaGFzIHRlcnJpYmxlIGRpc2NvbnRpbnVhdGlvbiBzeW5kcm9tZS4gSXQgYWxzbyBpbmhpYml0cyBpbXBvcnRhbnQgbGl2ZXIgZW56eW1lcyB0aGF0IGJyZWFrIGRvd24gb3RoZXIgbWVkcyBzbyB5b3UgY2FudCB0YWtlIG1pcnRhemFwaW5lIGFuZCBwYXJveGV0aW5lIHRvZ2V0aGVyIGxpa2UgeW91IGNvdWxkIHdpdGggZGlmZmVyZW50IFNTUklzLiBNaXJ0YXphcGluZSBpcyBhY3R1YWxseSB2ZXJ5IGdvb2QgYXQgbWFuYWdpbmcgYW54aWV0eSwgYW5kIGlzIG1hcmtldGVkIHRvd2FyZHMgcGVvcGxlIHdpdGggcGFuaWMgZGlzb3JkZXJzIG9yIEdBRC4gSSB0aGluayBjcm9zcyBkb3Npbmcgd2l0aCBmbHVveGV0aW5lIGlzIGEgYmV0dGVyIHdheSB0byBnZXQgb2ZmIHBhcm94ZXRpbmUgYmVjYXVzZSBmbHVveGV0aW5lIGhhcyBhIGxvbmdlciBoYWxmbGlmZSwgaXRzIG11Y2ggZWFzaWVyIHRvIHRhcGVyIG9mZi4gSWYgcGFyb3hldGluZSBpc250IHdvcmtpbmcgSSB3b3VsZCByZWFsbHkgYWR2aXNlIHlvdSB0byBnbyBzcGVhayB0byB5b3VyIGRvYyBhYm91dCB0YXBlcmluZyBvZmYgYW5kIHRoZW4gdHJ5aW5nIG9uZSBvZiB0aGUgNUhUIGF0YWdvbmlzdHMuCk1ha2Ugc3VyZSB5b3UgY2FsbCBHU1NGIGFuZCBmaW5kIG91dCB3aG8gbmVhciB5b3UgaXMgcGFydCBvZiB0aGUgcHJvZ3JhbS4gCkkgZnJlZWx5IGFja25vd2xlZGdlIHRoYXQgc29tZSBkbyAobWF5YmUgMTAlPyBJdCBraW5kYSBoYXJkIHRvIHB1dCBoYXJkIG51bWJlcnMgb24gaXQpLiAKQWJvdXQgdGhlIGxhc3QgdGltZSB5b3UganVzdCB3ZW50IGludG8gdGhlIHN0b3JlIGZvciBhIGZldyBpdGVtcywgc2hlIHdyaXRlcy4geW91IGJ1eSBvbmx5IHRob3NlIGZldyBpdGVtcyB5b3Ugd2VyZSBpbiBuZWVkIG9mLCBvciBkaWQgeW91IHNwZW5kIGEgYml0IG1vcmU/IERpZCB5b3UgaW1wdWxzZSBidXkgYmVjYXVzZSBvZiB0aGUgbG92ZWx5IGVuZCBjYXAgZGlzcGxheSBvZiBnb29kaWVzIG9yIGJlY2F1c2UgdGhhdCBkZWFsIHdhcyBqdXN0IHRvbyBnb29kIHRvIHJlc2lzdD8gSXQgaGFwcGVucy4gU2hvcHBpbmcgbGVzcyBvZnRlbiB0YWtlcyBhd2F5IHRoZSB0ZW1wdGF0aW9uIHRvIGRvIHRoaXMuIHNob3BzIGp1c3Qgb25jZSBhIG1vbnRoLCBidXQgZG9uIGZlZWwgdGhlIG5lZWQgdG8gaW5zdGFudGFuZW91c2x5IGNoYW5nZSB5b3VyIHNob3BwaW5nIGhhYml0cy4gU3RhcnQgc21hbGwsIHNoZSBlbmNvdXJhZ2VzOiB5b3UgYXJlIGEgdGhyZWUgdGltZXMgYSB3ZWVrIHNob3BwZXIsIHRyeSB0byBnbyBvbmx5IG9uY2UgdGhpcyB3ZWVrLiBFdmVudHVhbGx5LCB5b3UgY2FuIHdvcmsgeW91ciB3YXkgdXAgdG8gb25jZSBhIG1vbnRoLgpNeSBicm90aGVyIGFsbW9zdCBsb3N0IGhpcyBpbiB0aGUgY2FtcCBmaXJlIGFuZCBteSBObW9tIGFsc28gbWFkZSBpdCBhYm91dCBob3cgaGFyZCBpdCB3YXMgZm9yIGhlciB0byB3YWl0IGFuZCB3YXRjaC4gU2hlIGNvbnRhY3RlZCBmYW1pbHkgbWVtYmVycyBhbmQgbGFtZW50ZWQgYWJvdXQgaGVyc2VsZiBhbmQgaGVyIGZlZWxpbmdzIGFib3V0IGl0LCBwcmV0ZW5kaW5nIHRvIGJlICJpbmZvcm1pbmciIHVzIGFib3V0IHRoZSBzdGF0dXMgb2YgdGhlIGZpcmUuIApUaGUgcHJvbWlzZSBoYXMgcG9sYXJpc2VkIGRlYmF0ZSBhbmQgZHJhd24gdGhlIGJpZ2dlc3QgaGVhZGxpbmVzIHRocm91Z2hvdXQgdGhlIGZpdmUgd2VlayBjYW1wYWlnbi4gVGhlIExpYmVyYWwgZ292ZXJubWVudCBhbmQgZ2FtaW5nIGluZHVzdHJ5LCBoZWFkbGluZWQgYnkgRmVkZXJhbCBHcm91cCB3aG8gb3duIGEgbW9ub3BvbHkgbGljZW5zZSBvbiBnYW1pbmcgbWFjaGluZXMgaW4gdGhlIHN0YXRlLCBsYXVuY2hlZCBhIG1hc3NpdmUgYWR2ZXJ0aXNpbmcgY2FtcGFpZ24gY2xhaW1pbmcgdGhlIHBva2llcyBiYW4gd291bGQgY29zdCB0aG91c2FuZHMgb2Ygam9icy4gTXMgV2hpdGUgaGFzIHRyZWtrZWQgdG8gbW9zdCBjb3JuZXJzIG9mIHRoZSBBcHBsZSBJc2xlIHRvIHNwcnVpayB0aGUgcG9saWN5LCBhbG9uZyB3aXRoIGEgJDU2MCBtaWxsaW9uIGhlYWx0aCBwYWNrYWdlICAgZHViYmVkIGhlciBudW1iZXIgb25lIHByaW9yaXR5LiAKSidhdmFpcyBldSBlbnZpZSBkZSBtJ29mZnJpciB1biBtYXNzYWdlIHBvdXIgY29uY2x1cmUgbGEgam91cm5lLiBKJ3RhaXMgYWxsZXIgY29uc3VsdGVyIGxlIGJsb2cgZGUgbGEgam91cm5hbGlzdGUgTGlsaSBCYXJiZXJ5IENvdWxvbiwgZXhwZXJ0ZSBlcyBiZWF1dCBldCBiaWVuIHRyZSwgZXQgaidhdmFpcyByZXByIHVuIGFydGljbGUgc3VyIEp1bm5vbiBNZXJpZ291eCwgcGFzIHNldWxlbWVudCBtYXNzZXVzZSBtYWlzIGF1c3NpIG5lcmd0aWNpZW5uZSwgZXhwZXJ0ZSBlbiB0b3V0ZXMgc29ydGVzIGRlIG1veWVucyB0aHJhcGV1dGlxdWVzIChiaWVuIHF1ZSBqZSBuJ2FpZSBwYXMgYSBwcmlvcmkgZGUgZ3JhdmUgcHJvYmxtZSBwaHlzaXF1ZSBvdSBtb3Rpb25uZWwuKS4gTGEgc2FuY2UgZnV0IHN1cnByZW5hbnRlLCBwYXNzaW9ubmFudGUgZXQgaW5zdHJ1Y3RpdmUsIGJpZW4gYXUgZGVsIGQndW4gbWFzc2FnZS4uIApKYXBhbmVzZSBSb2JvdCBDcmF6ZTkgTW9udGggT2xkIEJhYnlib3RKYXBhbidzIFRva3lvIFVuaXZlcnNpdHkgcHJvZmVzc29yIFlhc3VvIEt1bml5b3NoaSB1bnZlaWxzIGEgOSBtb250aCBvbGQgYmFieSByb2JvdCAiTm9ieSIgYXQgaGlzIGxhYm9yYXRvcnkgYXQgdGhlIFRva3lvIFVuaXZlcnNpdHkgb24gSnVuZSAxMSwgMjAxMC4gClBhdWwgR2V0dHkgZ3JhbmRzb24sIEpvaG4gUGF1bCBHZXR0eSBJSUkuLiAKVGhpcyBlbmVyZ3kgY2FuIHRyaWdnZXIgcGVvcGxlIGluIHRoZSBrbm93IGFuZCB0aGV5IHdpbGwgY3JlYXRlIGEgcGVyc29uYWwgImZhbnRhc3kiIHRoYXQgaW52b2x2ZXMgbXVjaCBuZWdhdGl2ZSBlbmVyZ3kuIFRoaXMgaXMgdGhlIGVuZXJneSBvZiBmZWFyIGFuZCBsdXN0LiBMdXN0IGZvciB0aGVtLCBmZWFyIGZvciBhIHZpY3RpbS4gVGhpcyBlbmVyZ3kgd2lsbCBiZSBlbWl0dGVkIGJ5IHRoZW0gYW5kIHdpbGwgaW5mbHVlbmNlIHRoZSBtYXRyaXggYXJvdW5kIHRoZW0gaW4gYSBzbWFsbCBzY2FsZS4gVGhpcyBlbmVyZ3kgaXMgdXNlZCBhcyBlbmVyZ3kgc291cmNlLCBvciAiZm9vZCIsIGZvciBwZW9wbGUgb3Igb3RoZXIgZW50aXRpZXMgdG8gZW5hYmxlIHRoZW1zZWx2ZXMgdG8gY3JlYXRlIHRoZWlyIGRlc2lyZWQgcmVhbGl0eSBUSFJPVUdIIGh1bWFucy4gQW5kIGl0IGFsc28gc2VydmVzIHRvIGtlZXAgdGhlIGZyZXF1ZW5jeS8gdmliZSBvZiB0aGUgd2hvbGUgaHVtYW5pdHkgb24gdGhlIGxvd2VzdCBsZXZlbCBhcyB3ZSBsZXQgb3Vyc2VsdmVzIGdldCBwdXNoZWQgaW50by4KSG93ZXZlciwgYXQgYSBsZXNzIGZvcm1hbCBwb2tlciBnYW1lLCB3aGVyZSB0aGUgYWN0dWFsIGRlYWxlciByb3RhdGVzIGFyb3VuZCB0aGUgdGFibGUsIHRoZSB0d28gY2hlYXRlcnMgc2ltcGx5IGhhdmUgdG8gd2FpdCB1bnRpbCBvbmUgb2YgdGhlbSBoYXMgdGhlIGRlYWwgdG8gcHV0IHRoZSBwbGFuIGludG8gYWN0aW9uLi4gCklmIGl0IGNvdWxkbiBiZSBzZXJ2aWNlZCBoZXJlIGl0IHdhcyBhICJTb3JyeSwgYnV0IHlvdSBuZWVkIHRvIGZhY2lsaXRhdGUgZ2V0dGluZyB0aGUgcGhvbmUgYmFjayB0byB0aGUgY291bnRyeSBvZiBvcmlnaW4gdG8gaGF2ZSBpdCBzZXJ2aWNlZCIuIApUcnkgMTAwIHllYXJzIG9mIHNvbGl0dWRlIGFmdGVyIHRob3NlLgpQZXJpb2QuIApDaGFvcyBHb2FscyB3ZXJlIGJ5IENsYXkgVm9ndCwgRGl4b24gVmFuIEx1eWssIFJheW1vbmQgQnJhdW4sIEpvbmF0aGFuIEhvZ3VlLCBBbGV4IFRveW9zaGltYSBhbmQgTmljaG9sYXMgUGVya3MuIFJ1c2ggZ29hbHMgbGVkIGJ5IFJvc3MgRGVsYXV3IHdpdGggdHdvIGFuZCBzaW5nbGVzIGZyb20gVHlsZXIgV29ya21hbiwgSm9lbCBWYW4gUGVsdCwgQnJhZGVuIFJ1ZmYgYW5kIEtlYXRvbiBKb3N1dHRlcy4gCkxpa2UsIGFyZSB0aGV5IHRyeWluZyB0byBnaXZlIHRoZSBjcmV3IG1lbWJlcnMgYW5kIGF1ZGllbmNlIHNlaXp1cmVzPy4gCkkgdGhvdWdodCBJIGJlZW4gYSBncmVhdCBwYXJlbnQgYW5kIHdhcyBmcnVzdHJhdGVkIHRoYXQgbXkgc29uIHdhcyBkb2luZyB0aGlzIHRvIGhpbXNlbGYuIApLaW1iZXJseWhhcyBiZWVuIHRlYWNoaW5nIHZhcmlvdXMgd29ya3Nob3BzIGZvciBvdmVydGVuIHllYXJzLCBwcmltYXJpbHkgaW4gdGhlIGFyZWEgb2Ygc3RyYXdib25uZXRzIGFuZCBjb3JzZXQgbWFraW5nLiBTaGUgaGFzIGJlZW4gYWd1ZXN0IGluc3RydWN0b3IgaW4gY29yc2V0cnkgc2V2ZXJhbCB0aW1lcyBmb3JhcHBhcmVsIHN0dWRlbnRzIGF0IFdlc3Rlcm4gTWljaGlnYW5Vbml2ZXJzaXR5IChXTVUpIGFuZCBhdCBDZW50cmFsIE1pY2hpZ2FuVW5pdmVyc2l0eSAoQ01VKUtpbWJlcmx5IGFuZCBKaW0sIGhlcmh1c2JhbmQgb2YgMzcgeWVhcnMsIHJlc2lkZSBpbiBMZXNsaWUsIE1JLFRoZXkgaGF2ZSA0IGdyb3duIGNoaWxkcmVuIGFuZCA2Z3JhbmRjaGlsZHJlbi4gCktub3cgSSdtIGEgbGl0dGxlIGxhdGUgdG8gdGhlIGdhbWUsIGJ1dCBhbiBleCBhbmQgSSB1c2VkIHRvIGp1c3Qgc2xvdyBkYW5jZSB0b2dldGhlci4gCllvdSBjYW4gYWxzbyBwdXJjaGFzZSBhbnkgb2YgdGhlIHByZWNvbnN0cnVjdGVkIGRlY2tzIHRoYXQgV290QyBvZmZlcnMgUGxhbmVzd2Fsa2VyIGRlY2tzIGFyZSBhIGdvb2QgaW50cm8gcG9pbnQuCkluIDIwMTEgUnlhbiB3YXMgaGlyZWQgaW50byB0aGUgUiBkZXBhcnRtZW50IGF0IFdpemFyZHMgb2YgdGhlIENvYXN0LCBhbmQgYXMgYSByZXN1bHQgSm9uIExvdWNrcyBqb2luZWQgdGhlIHNob3cgYXMgdGhlIGNvIGhvc3QuIEFmdGVyIGEgbG9uZyBzdGludCBvbiB0aGUgc2hvdywgSm9uIHdhcyBhbHNvIGhpcmVkIGludG8gUiBhdCBXaXphcmRzIG9mIHRoZSBDb2FzdCBpbiAyMDEzLiAKWW91IGxvb2sgYXQgaXQsIHdlIGdhdmUgdXAgdHdvIHByb3NwZWN0cywgS2VrYWxhaW5lbiBzYWlkIG9mIHRyYWRpbmcgVml0YWxpaSBBYnJhbW92IGFuZCBKb25hdGhhbiBEYXZpZHNzb24sIGFsb25nIHdpdGggYSBmaXJzdCByb3VuZCBkcmFmdCBwaWNrIHRvIHRoZSBTZW5hdG9ycyBpbiBleGNoYW5nZSBmb3IgRHVjaGVuZS4gV2Uga2VwdCBhbGwgdGhyZWUgb2Ygb3VyIHRvcCBwcm9zcGVjdHMgRW1pbCBCZW1zdHJvbSwgTGlhbSBGb3VkeSBhbmQgQWxleGFuZHJlIFRleGllciBvbiB0aGUgZm9yd2FyZCBzaWRlLiAKMS4gMi4gClRha2UgZm9yIGV4YW1wbGUgdHdvIG9mIE1leGljbydzIG1vc3Qgc3VjY2Vzc2Z1bCBwbGF5ZXJzICAgVmljdG9yIFBlcmNoZXMsIHdpbm5lciBvZiBhIFdTT1AgQnJhY2VsZXQgaW4gMjAwNiwgYW5kIE1leGljbydzIG1vc3QgcmVjZW50IFdTT1AgQnJhY2VsZXQgd2lubmVyLCBBbmdlbCBHdWlsbGVuLCB3aG8gdG9vayBob21lIHRoZSBwcml6ZSBiYWNrIGluIDIwMDkuLiAKQXQgdGhlIGNoYWluLCBJIGFtIG1vcmUgc2hvcnQgb24gdGltZSBzbyBkbyBhIHNob3J0IFEgdG8gdW5kZXJzdGFuZCB3aGF0IHRoZSBjbGllbnQgbmVlZHMgYW5kIGdpdmUgdGhlIG1hc3NhZ2UsIGFuZCB0aGUgZnJvbnQgZGVzayBkb2VzIHRoZSByZXN0LiBUaGUgY2hhaW4gaXMgbW9yZSBlcXVpcHBlZCB3aXRoIGVuaGFuY2VtZW50cyB0aGUgY2xpZW50IG1pZ2h0IHdhbnQgc3VjaCBhcyBob3QgdG93ZWxzLCBob3Qgc3RvbmVzLCBldGMuQXQgbXkgcGVyc29uYWwgcHJhY3RpY2UsIEkgdHJ5IHRvIHRha2UgbW9yZSB0aW1lIHRvIGdldCB0byBrbm93IG15IGNsaWVudHMuIApUaGUgbmVhcmVzdCBwdWJsaWMgdHJhbnNwb3J0IGlzIEh1YXkgS2h3YW5nIHN1YndheSBzdGF0aW9uLiAKWW91IGxvb2tpbmcgZm9yIGV2ZW50cz8gT24gdGhlIFNpbGljb24gUHJhaXJpZT8gVGhpcyB3ZWVrPyBXZWxsLCBzaHVja3MuIFlvdSBoYXZlIHRvIHBhcmRvbiB0aGUgdW5jb252aW5jaW5nIHBva2VyIGZhY2UsIGJ1dCB3ZSBhIHRhZCBleGNpdGVkIGFib3V0IHRoZSBldmVudHMgc2NoZWR1bGVkIG9uIHRoZSBTaWxpY29uIFByYWlyaWUgdGhpcyB3ZWVrLiAKVGhlIENoYW5ub24gTWFya2V0IDQybmQgQmlydGhkYXkgQ2VsZWJyYXRpb246IEppbW15IFdpbGxpbmcgYW5kIHRoZSBSZWFsIEdvbmUgSGlja3VwcyBhcmUgcC4gCkVhcmxpZXIgdGhpcyB3ZWVrLCBSb3Vzc28gcHVsbGVkIHdoYXQgbWFueSBhcmUgY2FsbGluZyBvbmUgb2YgdGhlIGJpZ2dlc3QgYmxpbmQgc2lkZXMgaW4gQkIgaGlzdG9yeS4gVmFuZXNzYSBvcmNoZXN0cmF0ZWQgYSBwbGFuIHdoZXJlIGZlbGxvdyBjb21wZXRpdG9yIEF1c3RpbiB3b3VsZCB0aGluayBoZSB3YXMgc2FmZSBmcm9tIGVsaW1pbmF0aW9uIHlldCBoZSB3b3VsZCBlbmQgdXAgZ29pbmcgaG9tZSAgIGEgbW92ZSB0aGF0IFZhbmVzc2EgaGFkIGhvcGVkIHdvdWxkIGhlbHAgaGVyIG1ha2UgdGhlIGZpbmFscyAgIHdoaWNoIHNoZSBoYXMuIApXaHkgaXMgYSBwYWlyIG9mIGdsYXNzZXMgYSBwYWlyIGlmIGl0cyBvbmx5IG9uZT8KQXMgaW46IHRoZSBhY3RvciBoYXMgZm9yZ290dGVuIGhpcyBlbnRyYW5jZSwgZ2l2ZSBoaW0gaGlzIGN1ZSBhZ2Fpbi4gVGhlIGZpbmFsICJub3cgd2hlcmUgaW4gdGhlIHdvcmxkIGRpZCB0aGV5IGdvPyIgd2FzIG1lYW50IGFzIGlmIHdlIGFyZSBpbiBhIHBsYXkgYW5kIHRoZSBhY3RvcnMgaGF2ZSBsZWZ0IHRoZSBidWlsZGluZy4gCjI5MSAzMTZQYXJraW4sIEIuLCBIZWxseWVyLCBQLiwgTGVlY2gsIFIuIEFuZCBIYW1wc2hpcmUsIEEuIApIcm9wa2V5ICAzIHBvaW50cyAgc3VibWl0dGVkIDggZGF5cyBhZ28KT25saW5lIHBva2VyIHRlbmRzIHRvIHRha2UgYSBsb3Qgb2YgdGhhdCBvdXQgb2YgdGhlIGFuYWx5c2lzLCBwYXJ0aWN1bGFybHkgd2hlbiBzbyBtYW55IG9mIHRoZSBvdGhlciBwYXllcnMgYXJlIGxpdGVyYWxseSBwcm9ncmFtbWVkIHRvIHNpbXBseSBwbGF5IHRoZSBvZGRzLiBUaGUgcmVhc29uIHBva2VyIGlzIHVucHJlZGljdGFibGUgaXNuJ3QgbmVjZXNzYXJpbHkgdGhhdCB0aGUgY2FyZHMgYXJlIHJhbmRvbSwgYmVjYXVzZSBhcyB5b3UndmUgaW50dWl0ZWQsIHRoZSBwcm9iYWJpbGl0eSBjYWxjdWxhdGlvbnMgYXJlbid0IHRoYXQgZGlmZmljdWx0LiAKSW4gQ2hpbmEsIGNoaWxkcmVuIHdobyBhcmUgYWJkdWN0ZWQgYXJlIG9mdGVuIHNvbGQgaW4gcmVtb3RlIHZpbGxhZ2VzLiBJbiAyMDAzIGFuZCAyMDA0LCBDaGluYSdzIHBvbGljZSByZXNjdWVkIG1vcmUgdGhhbiA4LDAwMCBhYmR1Y3RlZCBjaGlsZHJlbi4KRXh0ZW5zaXZlIHJlc2VhcmNoIGhhcyBiZWVuIGRvbmUgdG8gZGV0ZXJtaW5lIGhvdyBiZXN0IHRvIG51ZGdlIHBlb3BsZSB0byBzYXZlIG1vcmUgZm9yIHJldGlyZW1lbnQuIFJpY2hhcmQgVGhhbGVyIHdvbiB0aGUgTm9iZWwgUHJpemUgaW4gMjAxNyBmb3IgaGlzIGV4dGVuc2l2ZSBjb250cmlidXRpb25zIHRvIGJlaGF2aW91cmFsIGVjb25vbWljcywgcGFydGljdWxhcmx5IGhvdyBwZW9wbGUgaW4gdGhlIHJpZ2h0IGRpcmVjdGlvbiBjYW4gZW5jb3VyYWdlIHRoZW0gdG8gYXZvaWQgaXJyYXRpb25hbCAoYmFkKSBjaG9pY2VzLiBCdXQgYXJlIHRoZXJlIGZhY3RvcnMgYmV5b25kIGJhZCBkZWNpc2lvbiBtYWtpbmcgYXQgcGxheSB0aGF0IG1heSBsZWFkIHRvIHNhdmluZyBzaG9ydGZhbGxzPwpJIGxlZ2l0aW1hdGVseSBiZWxpZXZlIGV2ZXJ5b25lIHNob3VsZCBiZSBjYXJyeWluZyBhIGJpZyBzb2Z0IHBpbGxvdyBpbiB0aGVpciBjYXIuIApQcm9wZXJ0eSB2YWx1ZXMgYXJlIGNsaW1iaW5nIHF1aWNrbHkuIElmIHlvdSBuZWVkIGEgZXhwZXJpZW5jZWQgcmVhbHRvciBpbiBWaWN0b3JpYSBsZXQgbWUga25vdy4gTXkgZmF0aGVyIGluIGxhdyB3YXMgYm9ybiBhbmQgcmFpc2VkIGhlcmUgYW5kIGhhcyBkb25lIHJlYWwgZXN0YXRlIGZvciBtYW55IHllYXJzIGluIFZpY3RvcmlhLiBKdXN0IG1zZyBtZS4KWW91IGRvIG5vdCB3YW50IHJvZ3VlIGRldmljZXMgb24geW91ciBuZXR3b3JrIHVwbG9hZGluZyBvciBkb3dubG9hZGluZyBzdHVmZiB0aGF0IHlvdSBoYXZlIG5vIGtub3dsZWRnZSBvZi4KSWYgYSBwcmVnbmFudCB3b21hbiB0ZXN0cyBwb3NpdGl2ZSBmb3IgR0RNLCB0cmVhdG1lbnQgdXN1YWxseSBjb25zaXN0cyBvZiBtb25pdG9yaW5nIGJsb29kIHN1Z2FyLCBwcm9wZXIgbnV0cml0aW9uLCBhbmQgcmVndWxhciBwaHlzaWNhbCBhY3Rpdml0eS4gCkxveWFsdHkgaXNuIGFib3V0IHdobyByZXNwZWN0cyB0aGVzZSBpbWFnaW5hcnkgcmVsYXRpb25zaGlwIGJvdW5kYXJpZXMgeW91IGluc2lzdGluZyBleGlzdC4gTXkgYmVzdCBmcmllbmQsIHdob20gSSBtZXQgd2hlbiBpIHdhcyA1LCBkYXRlZCBhIGd1eSBmb3IgYSBjb3VwbGUgb2YgbW9udGhzIGFuZCBkZWNpZGVkIHNoZSBkaWRudCBsaWtlIGhpbS4gQSBjb3VwbGUgb2YgeWVhcnMgbGF0ZXIsIGkgZGF0ZWQgdGhlIHNhbWUgZHVkZSAoZm9yIGEgeWVhcikgYW5kIHJlbWFpbmVkIGZyaWVuZHMgd2l0aCBoZXIuIFNoZSBhbHNvIHJlbWFpbmVkIGZyaWVuZHMgd2l0aCBhbiBleCB0aGF0IEkgd291bGQgbmV2ZXIgc3BlYWsgdG8gYWdhaW4sIGJ1dCB0aGF0IGlzbiBNWSBmcmllbmRzaGlwLCBpdHMgaGVycywgc28gd2hvIGNhcmVzPyBJdCBkb2VzbiBhZmZlY3QgbXkgZGFpbHkgbGlmZSwgdGhlIGJveWZyaWVuZCB3ZSBib3RoIGRhdGVkIG1vdmVkIG9uIHdpdGggaGlzIGxpZmUgYW5kIHdlIG1vdmVkIG9uIHdpdGggb3VycywgYW5kIHdlIHN0aWxsIGNsb3NlIGZyaWVuZHMuIEZyaWVuZHNoaXAgaXMgYWJvdXQgcmVzcGVjdCwgeWVzLCBidXQgcmVzcGVjdCBmb3IgZWFjaCBvdGhlciBhbmQgZWFjaCBvdGhlciBsaXZlcyBvdXRzaWRlIG9mIG91ciBvd24uClRoZSBmYWN0aW9ucyBhbmQgd2FybG9yZHMgcHVzaCBoYXJkIHRvIGNvbnNvbGlkYXRlIHRoZWlyIHBvd2VyLCBsaW5lcyBhcmUgZHJhd24gYW5kIHNpZGVzIGFyZSB0YWtlbi4gCiJLZWVwIHlvdXIgZXllcyBvbiB0aGUgcm9hZCIgaGFzIGJlZW4gdGhlIG1hbnRyYSBvZiBldmVyeSBkcml2ZXIncyBlZHVjYXRpb24gdGVhY2hlciBhbmQgbmVydm91cyBwYXNzZW5nZXIsIGFzIHdlbGwgYXMgdGhlIG9jY2FzaW9uYWwgcm9jayBzdGFyIChUaGUgRG9vcnMgaW5jbHVkZWQgdGhlIGFkdmljZSBpbiB0aGVpciBzb25nICJSb2FkaG91c2UgQmx1ZXMiKS4gQnV0IHRoZSBmYWN0IG9mIHRoZSBtYXR0ZXIgaXMsIHdlIHJlYWxseSBkb24ndCBrZWVwIG91ciBleWVzIG9uIHRoZSByb2FkIGF0IGFsbCB0aW1lcy4gCkFsdGhvdWdoIHN0dWR5IGRldGFpbHMgd2VyZSBwcm92aWRlZCBmb3IgYWxsLCB0aGVzZSBhbm9tYWxpZXMgcG90ZW50aWFsbHkgdW5kZXJtaW5lIHRoZSBzeXN0ZW1hdGljIG5hdHVyZSBvZiB0aGUgcmV2aWV3LiAKQSBsb3Qgb2YgcmVhbGx5IGdvb2Qgc3R1ZmYgdGhhdCBoZWxwcyB5b3UgdGhpbmsgYWJvdXQgaG93IHRvIHRoaW5rIGFib3V0IHBva2VyLkkgbGl0ZXJhbGx5IGp1c3QgZmluaXNoZWQgcmVhZGluZyBhIHBvc3Qgb24gaGFuZCByZWFkaW5nIGFuZCBpdCBzdGlsbCBob2xkcyB1cCB3ZWxsLiAKQSBzd2l0Y2ggZnJvbSBhcHNjIHRvIGZmIHdvdWxkIG5lZWQgbmV3IGxlbnNlcyBpbiBhbnkgY2FzZS4gQW5kIHVuZm9ydHVuYXRlbHkgdGhlcmUgYXJlbiBldmVuIHJ1bW9ycyBhYm91dCB0aGUgbmV4dCBnZW4gb2YgY3JvcCBjYW1lcmFzLi4gCkhlIGhhZCBhIHJlYWxseSBncmVhdCBhZHZlbnR1cmUgc2VyaWVzIGNhbGxlZCBUaGUgRGFyayBUb3dlciB0aGF0IEkgZW5qb3llZC4gIlRoZSBHdW5zbGluZ2VyIiBpcyB0aGUgZmlyc3QgaW4gdGhlIHNlcmllcyBhbmQgaXQgcmVhbGx5IGdyZWF0Li4gClN1YnNlcXVlbnQgbW90aW9ucyBjYW4gYmUgZmlsZWQsIGJ1dCBvbmx5IHdoZXJlIGl0IGlzIHNob3duIHRoZXkgaW52b2x2ZSBpc3N1ZXMgdGhhdCBjb3VsZCBub3QgYmUgcmFpc2VkIHNvb25lciB0aHJvdWdoIGR1ZSBkaWxpZ2VuY2UuLiAKVGhlIG1lZXRpbmdzIHdpdGggRHIgU29vbXJvIGhhZCBoZWxwZWQgdGhlIGNvdXNpbnMgY29tZSBzbyBjbG9zZSB0byBaYXJkYXJpIHRoYXQgdGhleSB3ZXJlIGludml0ZWQgdG8gZml2ZSBkaW5uZXIgbWVldGluZ3MgYXQgdGhlIHByZXNpZGVuY3kuIEFuZCB0aGUgcHJlc2lkZW50IHN1YnNlcXVlbnRseSBoaW50ZWQgYXQgYW4gYWxsaWFuY2Ugd2l0aCB0aGUgQ2hhdWRocnlzIHRvIG1ha2UgTmF3YXogZmFsbCBpbiBsaW5lLgpQZW9wbGUgbmVlZCB0byBzdG9wIGFjY2VwdGluZyBNYXJ2ZWwgdHVybmluZyB0aGVpciBjb21pYyBib29rcyBpbnRvICJ0aGUgZnVubmllcyIgb24gdGhlIGJpZyBzY3JlZW4uIExhc3QgSSBjaGVja2VkLCBjb21pYyBmYW5zIGRpZG4gYWNjZXB0IFdCIHB1dHRpbmcgUmljaGFyZCBQcnlvciBpbiBTdXBlcm1hbiAzIGJhY2sgaW4gMTk4My4gVGhlIG92ZXJseSBodW1vcm91cyBlbGVtZW50cyBvZiB0aGF0IG1vdmllIHdlcmUgcGFubmVkLiBKdXN0IGFzIHRoZXkgc2hvdWxkIGJlIGF0IE1hcnZlbCB3aGVuIHRoZXkgaW5qZWN0IHRvbyBtdWNoIGNvbWVkeSBpbnRvIHN0b3JpZXMgdGhhdCB3b3VsZCBiZWVuIG11Y2ggbW9yZSBlZmZlY3RpdmUgaWYgdGhleSBoYWQgZm9jdXNlZCBvbiBkcmFtYXRpYyB0ZW5zaW9uIGFuZCBhY3Rpb24sIGVzcGVjaWFsbHkgdGhpcyBvbmUgYW5kIFJhZ25hcm9rLgpUaGVyZSBhcmUgbWFueSByZWFzb25zIHdoeSBvbmxpbmUgY2FzaW5vcyBhdHRyYWN0IHRob3VzYW5kcyBvZiBwbGF5ZXJzIGVhY2ggYW5kIGV2ZXJ5IGRheS4gQmVzaWRlcyB0aGUgbHVjcmF0aXZlIGJvbnVzZXMgYW5kIGF1dGhlbnRpYyBhdG1vc3BoZXJlLCB0aGUgbW9zdCBpbXBvcnRhbnQgZmVhdHVyZSBvZiBldmVyeSBnYW1ibGluZyBzaXRlIGlzIGl0cyBnYW1lIHNlbGVjdGlvbi4gQXQgb25saW5lIGNhc2lub3MgY3VzdG9tZXJzIGNhbiB0cnkgYSBnb29kIG51bWJlciBvZiB0YWJsZSBnYW1lcyBzdWNoIGFzIGNyYXBzIGFuZCByb3VsZXR0ZSBhcyB3ZWxsIGFzIGNhcmQgZ2FtZXMgbGlrZSBibGFja2phY2sgYW5kIGJhY2NhcmF0LiBGdXJ0aGVybW9yZSwgc2xvdCBtYWNoaW5lIGVudGh1c2lhc3QgY2FuIHNwaW4gdGhvc2UgcmVlbHMgb25saW5lLCB3aGVyZWFzIHZpZGVvIHBva2VyIGZhbnMgZ2V0IHRvIGVuam95IG51bWVyb3VzIHZhcmlhbnRzIG9mIHRoZWlyIGZhdm91cml0ZSBjYXNpbm8gZ2FtZS4KVG8gbWFrZSB0aGUgZ2FtZSBtb3JlIGV4Y2l0aW5nLCBFdm9sdXRpb24gR2FtaW5nIGFsc28gb2ZmZXJzIExpdmUgQ2FzaW5vIEhvbGQgUG9rZXIgd2l0aCB0aGUgSnVtYm8gNyBKYWNrcG90LiBJdCB1c2VzIHRoZSBzYW1lIHNldCBvZiB0aGUgcnVsZXMgYW5kIG9mZmVycyBhIHNpZGUgYmV0IHRoYXQgY2FuIGVhcm4geW91IGEgcHJvZ3Jlc3NpdmUgamFja3BvdCBzdGFydGluZyBhdCAkMSBtaWxsaW9uIGlmIHlvdSBtYW5hZ2UgdG8gY3JlYXRlIGEgNyBDYXJkIFN0cmFpZ2h0IEZsdXNoIGhhbmQuCk9GRklDSUFMIExlJ1Zlb24gQmVsbCBpcyBub3QgcmVwb3J0aW5nIHRvIHRoZSBTdGVlbGVycyBieSB0aGUgNCBwbSBkZWFkbGluZSB0b2RheSBhbmQgaXMgbm93IGluZWxpZ2libGUgdG8gcGxheSB0aGUgcmVtYWluZGVyIG9mIHRoZSAyMDE4IHNlYXNvbiwgc291cmNlIHRlbGxzIEVTUE4uIApJdHMgYXluIFJhbmQuIFNlbGYgZmlzaCBhbmQgdG8gdGFrZSBmcm9tIG90aGVycyBhbmQgbm90IGdpdmUgYSBjcmFwIGFib3V0IG90aGVycy4gCiJJIGhhZCB0aGUgbGFzdCBxdWVzdGlvbiB0b28uIApUcmliYWwgbGFuZHMgYXJlIGV4ZW1wdCBmcm9tIHRoZSBsYXcsIGFuZCBhbGwgQXJpem9uYSBjYXNpbm9zIGZhbGwgdW5kZXIgdGhlaXIganVyaXNkaWN0aW9uLiAKVG9tIERvdWdsYXMsIGEgbG9jYWwgcmVzdGF1cmF0ZXVyLCBvcGVyYXRlcyBuaW5lIHJlc3RhdXJhbnRzIGluIFNlYXR0bGUsIGFuZCBoZSB3aWxsIGJlIHByZXNlbnRpbmcgc29tZSB0YXN0eSBmb29kIG9wdGlvbnMgYXMgd2VsbC4gCkJleW9uZCB0aGF0LCBsZXQgc2F5IHlvdSBzZWUgYW4gb2xkIHdvbWFuIGFuZCBzaGUgcmVtaW5kcyB5b3Ugb2YgeW91ciBncmFuZG1vdGhlciwgYW5kIHlvdSBsaWtlbHkgaGF2ZSBhIHdhcm0gZmVlbGluZyB0b3dhcmQgdGhhdCBwZXJzb24gZHVlIHRvIHRoaXMgbWVudGFsIGFzc29jaWF0aW9uICAgaWYgeW91IGhhdmUgYSBnb29kIHJlbGF0aW9uc2hpcCB3aXRoIHlvdXIgZ3JhbmRtb3RoZXIsIHRoYXQgaXMuIElmIEkgc2VlIGEgbGl0dGxlIGdpcmwsIHRoZXkgbWF5IHJlbWluZCBtZSBvZiBteSBuaWVjZSwgYW5kIHRoYXQgbWFrZSBtZSBmb25kIG9mIHRoZW0uIEZvciBwZW9wbGUgd2hvIGhhdmUgbWl4ZWQgcmFjZSBwYXJlbnRzICAgYW5kIEkgY2FuIHNwZWFrIGZyb20gcGVyc29uYWwgZXhwZXJpZW5jZSBoZXJlICAgd2hlbiB0aGV5IHNlZSBhIG1peGVkIHJhY2UgY291cGxlLCB0aGV5IHRoaW5rIG9mIHRoZWlyIG1vdGhlciBhbmQgZmF0aGVyLCB0aGVpciBob21lLCB0aGVpciBjaGlsZGhvb2QuIApZb3UgY2FuIGNhbGwgaW4gZmF2b3JzIGxhdGVyIGlmIHlvdXIgZG9uYXRpb24gd2FzIGFub255bW91cyB0byB0aGUgUHJlc2lkZW50LiAKR29vZCBsdWNrIG9uIHRoZSB0YWJsZXMgIVRoZXJlIGFyZSB0b25zIG9mIHJlZ3VsYXJzIHRoYXQga25vdyBob3cgdG8gcGxheSBidXQgdGhlcmUgd2lsbCBhbHdheXMgYmUgZmlzaC4gVGhlIGZpZWxkIGlzIHByZXR0eSBsb29zZSBzbyBkb24ndCB0cnkgdG8gbWFrZSBhbnkgYmlnIHBsYXlzIGFuZCB5b3Ugc2hvdWxkIGJlIGFibGUgdG8gcGljayB1cCBvbiB0aGUgYmFkZGllcy4gSXQncyB1bmZvcnR1bmF0ZSBob3cgdGhlIGJsaW5kIHN0cnVjdHVyZXMgYXJlIHNvIHBvb3IuIApTTUlMIGlzIGFsc28gdHJ5aW5nIHRvIGJlIHN1cGVyIGdyYW5kbWEgYW5kIGlnbm9yZXMgdGhlIGZhY3QgdGhhdCBTTyBoYXMgYSBtb3RoZXIgYXMgZG8gSSAuIFNoZSBjb21wbGV0ZWx5IGlnbm9yZXMgdGhlIGZhY3QgdGhhdCB0aGV5J3JlIGFyb3VuZCBhdCBhbGwgdG9vLiAKVGhlIG1vc3Qgbm90YWJsZSB3aWxsIG9mIGNvdXJzZSBiZSByaWRlIGhlaWdodC4uIApUb2xraWVuJ3MgaW5zcGlyYXRpb25zIHdlcmUgRXVyb3BlYW4gZXBpY3M6IEJlb3d1bGYsIHRoZSBOb3JzZSBTYWdhcywgdGhlIEthbGV2YWxhLCB0aGUgT2R5c3NleSwgdGhlIElsaWFkLCBhbmQgc28gZm9ydGgsIGFsb25nIHdpdGggdmFyaW91cyBmb2xrbG9yaWMgdHJhZGl0aW9ucyBhbmQgbXl0aG9sb2dpZXMgYXMgd2VsbCBhcyBoaXMgb3duIGV4cGVyaWVuY2VzIHdpdGggd2FyIGFuZCB0aGUgY29uZmxpY3QgYmV0d2VlbiBodW1hbml0eSBhbmQgbmF0dXJlLiBMb3JkIG9mIHRoZSBSaW5ncyBpc24ndCBlc3BlY2lhbGx5ICJtZWRpZXZhbCIgb3Igb3RoZXJ3aXNlICJoaXN0b3JpY2FsLCIgZXZlbiBpZiBoZSBpbmNsdWRlcyB0aGUgYWVzdGhldGljcyBvZiBtZWRpZXZhbC9yZW5haXNzYW5jZS9Jcm9uIEFnZSBjdWx0dXJlcy4gSGUgc2V0IG91dCB0byBjcmVhdGUgYSBteXRob2xvZ3kgdGhhdCB3b3VsZCBmaXQgaW4gd2l0aCBhbmNpZW50IG15dGhvbG9naWVzIGFuZCB0aGUgd2F5cyB0aGF0IHdlIGh1bWFucyB1c2Ugc3RvcmllcyB0byByZXNwb25kIHRvIHRoZSB3b3JsZCBhcm91bmQgdXMsIG5vdCB0byBkZXBpY3QgYSAicmVhbGlzdGljIiBtZWRpZXZhbCBmYW50YXN5IHdvcmxkLCBhbmQgcGVvcGxlIHNvIG9mdGVuIGZhaWwgdG8gcmVhbGl6ZSB0aGF0IHdoZW4gdGhleSB0cnkgdG8gcGl0IEdSUk0gYWdhaW5zdCBoaW0uCk1heWJlIHlvdSBjb3VsZCBhc2sgaGVyIHRvIHByYWN0aWNlIHJlYWxseSBTVE9QUElORyBhbmQgY29uc2lkZXJpbmc6IHdoYXQgZG8gSSB3YW50IHRvIGRvPz8gU28gdGhlIHJlc3RhdXJhbnQuIFNoZSBuZWVkcyB0byB0aGluayBhYm91dCB3aGF0IGtpbmQgb2YgZm9vZCBzaGUgbGlrZXMgYW5kIHdhbnRzLCBhbmQgbWFrZSB0aGF0IGNob2ljZS4gU29tZXRpbWVzIHBlb3BsZSB3aG8gYWN0IGxpa2UgdGhpcyBhcmUgcGVvcGxlIHBsZWFzZXJzIGFuZCBkb24ndCB3YW50IHRvIG1ha2UgYSBjaG9pY2UgZm9yIGZlYXIgdGhhdCB0aGUgb3RoZXJzIGludm9sdmVkIHdvbid0IGxpa2UgaXQuLiAKSW0gWmltbWVyIGhhdCBlcyBnZWZobHRlIDcwIEdyYWQgdW5kIGljaCBrb21tZSBrYXVtIG5hY2ggbWlyIGRlbiBTY2h3ZWkgdm9uIGRlciBTdGlybiB6dSB3aXNjaGVuLiAKQWx0ZXJuYXRpdmUgdGhlcmFwaWVzIGZvciBkb2dzIGhhdmUgYmVlbiB1c2VkIHRvIHRyZWF0IHNraW4gcHJvYmxlbXMsIGRpZ2VzdGl2ZSB1cHNldHMsIGFuZCBvdGhlciBjb25kaXRpb25zLiAKVGhlcmUgYXJlIGdvb2QgcG9saWNlIG9mZmljZXJzIGFuZCBiYWQgcG9saWNlIG9mZmljZXJzLiBBbmQgcmVhbGx5LCB0aGUgZ29vZCBvbmVzIGZhciBvdXRudW1iZXIgdGhlIGJhZCBvbmVzLiAKRGltaXIgYW5kIEl6emV0IHdlcmUgc2VsZiBzdWZmaWNpZW50LCBhbmQgU2VsZXNueWEgY291bGQgd29yayB3aGVuIGRyYWZ0ZWQgcmVhc29uYWJseS4gCldoaWxlIGl0IGlzIGJlbmVmaWNpYWwgaWYgeW91ciB0cmVhc3VyZXIgaGFzIHNvbWUgZXhwZXJpZW5jZSwga25vd2xlZGdlIG9yIGVkdWNhdGlvbiBpbiBmaW5hbmNpYWwgb3BlcmF0aW9ucywgYW55IGNvdW5jaWwgbWVtYmVyIHdpdGggcGF0aWVuY2UgYW5kIGEgd2lsbGluZ25lc3MgdG8gY29tbWl0IHRoZSB0aW1lIHRvIHJldmlld2luZyBtb250aGx5IGludm9pY2VzLCByZWNlaXZhYmxlcywgdGhlIGZpbmFuY2lhbCBzdGF0ZW1lbnRzIGFuZCBiYW5rIHN0YXRlbWVudHMsIHdpbGwgcHJvdmlkZSBhIHZhbHVhYmxlIHNlcnZpY2UgZm9yIHlvdXIgb3duZXJzLi4gClRoZSBvbmxpbmUgcGxheWVycyBjYW4gYmVjb21lIGNoZWF0ZWQgd2hpbGUgcGxheWluZyBvbmxpbmUsIHRoZXJlIGlzIGEgc3lzdGVtIGRldmVsb3BlZCB0byBtb25pdG9yIHRoZSBjaGVhdGluZyBnb2luZyBvbiBpbiBvbmxpbmUgZ2FtZXMuIEV2ZW4gdGhvdWdoIGl0IGlzIHBhcnRpYWxseSBzdWNjZXNzZnVsLiBBbm90aGVyIGZhY3RvciBpcyB0aGF0IHBsYXllcnMgd2lsbCB0ZWFtIHVwIGluIHR3byBvciBtb3JlIHVuaXRzIHRvIGdldCBhIHBhcnRpY3VsYXIgd2lubmluZyBzdHJlYWsuIFRoZXkgZXhjaGFuZ2UgaW5mb3JtYXRpb24gdGhyb3VnaCB2b2ljZSBjYWxscyBvciBvdGhlciBtZWFucy4gVGhlIGluZGl2aWR1YWwgd2lsbCBoYXZlIG5vIGlkZWEgdGhhdCBoZSB3YXMgZ2V0dGluZyBjaGVhdGVkLgpJIHdhcyBob21lc2Nob29sZWQgYnkgbXkgcmVsaWdpb3VzIHBhcmVudHMgdW50aWwgSSB3YXMgMTQsIGFuZCB0aGUgInNjaWVuY2UiIHRleHRib29rcyBJIHdhcyBnaXZlbiB3ZXJlIEVYQUNUTFkgbGlrZSB0aGlzLiBJdCB3YXMgZXZlbiBtb3JlIHBhdGhldGljIHRob3VnaCwgYmVjYXVzZSBvYnZpb3VzbHkgaGlnaCBzY2hvb2wgc2NpZW5jZSByZXF1aXJlcyBtb3JlIGRldGFpbC9leHBsYW5hdGlvbiB0aGFuIGdyYWRlIHNjaG9vbC4gVGhlIGRlc3BlcmF0ZSB3cmFuZ2xpbmcgdGhhdCBoYWQgdG8gZ28gb24gdG8gInByb3ZlIiB0aGUgZWFydGggd2FzIDYwMDAgeWVhcnMgb2xkIHdvdWxkIGJlIGhpbGFyaW91cyBpZiBub3QgZm9yIHRoZSBkaXN0dXJiaW5nIGZhY3QgdGhhdCBzbyBtYW55IHBlb3BsZSBiZWxpZXZlIGl0IHdpdGggVklDSU9VUyBjZXJ0YWludHkuIFRvIHRoaXMgZGF5IEkgY2FuIGdvIHRvIG11c2V1bXMgd2l0aCBteSBwYXJlbnRzLCBiZWNhdXNlIGV2ZXJ5IG1lbnRpb24gb2YgIjUgbWlsbGlvbiB5ZWFycyBhZ28iIGV0YyBzZW5kcyB0aGVtIG9uIGEgcmFudCBhYm91dCAiaG93IGNvdWxkIGFueW9uZSBub3Qgc2VlIHRoaXMgaXMgaW50ZWxsaWdlbnQgZGVzaWduPz8iIFRoZXkgYm90aCAob3RoZXJ3aXNlKSBlZHVjYXRlZCBwZW9wbGUsIGFuZCBpdCBkcml2ZXMgbWUgbnV0cy4gUmVsaWdpb24gY2FuIHR1cm4gYW55b25lIGludG8gYSBmb29sLgpkZW5pbSBvdXRlcndlYXIgZ2V0cyB0aGUgYXR0ZW50aW9uIG9mIEppbSBUcmVsaXZpbmcKRmluYWxseSwgYnJ1c2ggdXAgb24geW91ciB3cml0aW5nIGFuZCBncmFtbWFyIHNraWxscywgZXZlbiBpZiBpdCBzaW1wbHkgbWVhbnMgd3JpdGluZyByZXZpZXdzIGFib3V0IHlvdXIgb3duIHNwYSBleHBlcmllbmNlcyB0aGF0IG5vIG9uZSBlbHNlIHdpbGwgcmVhZC4uIApUcmlwIHRlIGdhYW4gYmVraWprZW46IEdyYW5kIEZhbGxzIG9mCkJ1dCB0aGlzIGNvdXBsZSBmYWNlcyBsYXJnZXIgb2JzdGFjbGVzIHRoYW4gcG9ydCBhIHBvdHRpZXMgKGRvIHdpdGggdGhhdCBhbmFsb2d5IHdoYXQgeW91IHdpbGwpIHRvIGNvbnF1ZXIsIGFuZCB0aGV5IHdlcmUgdGhlIGZpcnN0IHRlYW0gZWxpbWluYXRlZCBvbiBmb3JlaWduIHNvaWwuLiAKR2lvdmluY28ncyBkZWNpc2lvbiB0byBsZWF2ZSBUb3JvbnRvIGZvciBTYXVkaSBBcmFiaWEncyBBbCBIaWxhbCBGQyBkdXJpbmcgdHJhaW5pbmcgY2FtcCBhZGRlZCB0byB0aGUgdXJnZW5jeSBvZiB0aGUgc2lnbmluZy4KU291dGhsYW5kIFBhcmsgR2FtaW5nIGFuZCBSYWNpbmcgaXMgb25lIG9mIHRoZSBvbGRlc3Qgb3BlcmF0aW5nIHRyYWNrcyBpbiB0aGUgVW5pdGVkIFN0YXRlcy4gClRoZSBjbGFzcyBpcyBoaXMgInJlc2VhcmNoIGRlcGFydG1lbnQ7IGhlIGlzIHRoZSBzZW5pb3IgcG9ydGZvbGlvIG1hbmFnZXIuIiBBZnRlciBhIGJyaWVmIHNlcmllcyBvZiBsZWN0dXJlcywgTWNOZWVyIGFza3MgaGlzIHN0dWRlbnRzIHRvIGFuYWx5emUgY29tcGFuaWVzIGFuZCBzaGFyZSB0aGVpciBmaW5kaW5ncyB3aXRoIHRoZSBjbGFzcy4gRWFjaCBzdHVkZW50IGlzIGFza2VkIHRvICJwcmVwYXJlIGEgc2lnbmlmaWNhbnQgcmVwb3J0IG9uIGEgc2VsZWN0ZWQgY29tcGFueSBkZXRhaWxpbmcgdGhvcm91Z2ggYW5hbHlzaXMgb2YgaXRzIGluY29tZSBhbmQgY2FzaCBmbG93IHN0YXRlbWVudHMsIGJhbGFuY2Ugc2hlZXQsIGZvb3Rub3Rlcywgc3BlY2lmaWMgY29tcGFueSBkeW5hbWljcywgYSBzbmFwc2hvdCBwcm9qZWN0aW9uIG9mIGl0cyBmdXR1cmUsIGFuZCBhbiBhdHRlbXB0IHRvIGRldGVybWluZSB0aGUgY29tcGFueSdzIGVxdWl0eSB2YWx1YXRpb24uIi4gCkhvdyB0byBGbHkgVXNpbmcgTWVkaXRhdGlvbgpBdCB0aGUgQ2l0eXNjYXBlIFVTQSdzIEJyaWRnaW5nIFVTIGFuZCB0aGUgRW1lcmdpbmcgUmVhbCBFc3RhdGUgTWFya2V0cyBDb25mZXJlbmNlIGhlbGQgaW4gTWFuaGF0dGFuLCBvbiBTZXB0ZW1iZXIgOSwgMTAsIGFuZCAxMSwgMjAwOCwgVHJ1bXAgSnIuIFdlIGhhdmUgYWxsIHRoZSBmdW5kaW5nIHdlIG5lZWQgb3V0IG9mIFJ1c3NpYS4iCldlIHRvbGQgZWFjaCBvdGhlciBCRUZPUkUgb3VyIHdlZGRpbmcgdGhhdCB0aGUgdm93IHdlIHdlcmUgbWFraW5nIHdhcyBzZXJpb3VzLiBBbmQgbmVpdGhlciBvbmUgb2YgdXMgd2FudHMgdG8gYnJlYWsgYSBwcm9taXNlIChvdGhlcndpc2Ugd2Ugd291bGQgaGF2ZSBzYWlkIHNvbWV0aGluZyBsaWtlICJUSUwgSSBkb24ndCBsaWtlIHlvdSBhbnltb3JlIikuIEFuZCB0aGF0IGlmIHdlIHdlcmUgaW4gaXQgZm9yIHRoZSBsb25nIGhhdWwgd2UgbWlnaHQgYXMgd2VsbCBlbmpveSBpdC4uIApCb3RoIGFuZCBPbmUgZmVlbCBjb21wbGV0ZWx5IG5hdHVyYWwuIEl0IG5vdCBhcyBpZiB0aGV5IG1hZGUgYSBXYXR0byBtb3ZpZSBhbmQgY2FsbGVkIGl0IGJlY2F1c2UgaGUgYSBsb25lciwgdGhhdCB3b3VsZCBiZSBhIHN0cmV0Y2guIApDb250cm9sIGNvbmRpdGlvbnMgaW4gdGhlIGluY2x1ZGVkIHN0dWRpZXMgd2VyZSByZWxheGF0aW9uIHRoZXJhcHksIHdhdGNoaW5nIGEgcmVsYXhpbmcgdmlkZW90YXBlLCBkZXByZXNzaW9uIHNwZWNpZmljIGFjdXB1bmN0dXJlIChEU1BFQyksIG5vbiBzcGVjaWZpYyBhY3VwdW5jdHVyZSAoTlNQRUMpLCBvciBwcmVuYXRhbCBjYXJlIGFzIHVzdWFsLiAKVGhlIG9ubHkgZXhwbGFuYXRpb24gd2h5IHRoZXJlIGFyZSBzbyBtYW55IEV1cm9wZWFuIGZvb3RiYWxsIGxlYWd1ZXMgY292ZXJlZCBhdCBVbmliZXQgaXMgdGhhdCB0aGV5IGFyZSBvbiB0aGUgbWlzc2lvbiB0byBjb3ZlciBhbnkgcG9zc2libGUgZm9vdGJhbGwgY29tcGV0aXRpb24gaW4gRXVyb3BlLiAgcHVudGVycyBjYW4gcGxhY2UgYmV0cyBkYWlseSBvbiBvdmVyIDE1IDAwMCBvZmZlcmluZ3MsIG9uIGxlYWd1ZXMgZnJvbSBFbmdsYW5kLCBTY290bGFuZCwgU3BhaW4sIEl0YWx5LCBHZXJtYW55LCBBdXN0cmFsaWEsIEF1c3RyaWEsIFdhbGVzLCBNZXhpY28gYW5kIG1hbnkgbW9yZS5VbmliZXQgYXJlIGNvbnNpZGVyZWQgaW5ub3ZhdG9ycyBpbiBsaXZlIHNwb3J0cyBzdHJlYW1pbmcuIApTaGUgYXNrZWQgaGltIHRvIHN0YXkgYXQgTWlndWVsJ3MgZm9yIGEgd2hpbGUsIGp1c3Qgc28gdGhleSBjb3VsZCBnZXQgc29tZSBhaXIuIApTbG90IG1hY2hpbmVzIGFyZSBvbmUgb2YgdGhlIGZhbW91cyBnYW1lcyBpbiBjYXNpbm9zLiBOb25ldGhlbGVzcywgc3VjY2VlZGluZyBhdCBzbG90cyBpcyBub3QganVzdCByZWxhdGVkIHRvIGFic29sdXRlIGx1Y2ssIGJ1dCBpdCBpcyBhbHNvIGJhc2VkIG9uIHRoZSBleHRyYSBoYXJkIHdvcmsgd2hpY2ggYSBjYXNpbm8gcGxheWVyIHB1dHMgaW4uIEx1Y2t5IGNoYXJtcyBtYXkgYmUgcG93ZXJmdWwgd2l0aCBwb2tlciBhbmQgb3RoZXIgdHlwZXMgb2YgY2FyZCBnYW1lcywgaG93ZXZlciB0byB3aW4gd2l0aCBzbG90IG1hY2hpbmVzLCB5b3UgbmVlZCB0byBrbm93IHRoZSBzbG90IG1hY2hpbmUgc2VjcmV0cy4uIApJIG5vdCBzdXJlIHdoZXJlIHRoZSBiZXN0IHBsYWNlIHRvIHB1cmNoYXNlIGEgbGFwdG9wIGlzLiBJIG1lYW4gSSBvbmx5IGJ1eSBhIG5ldyBsYXB0b3AgZm9yIG15c2VsZiBldmVyeSAzIG9yIDQgeWVhcnMsIGJ1dCBJIGFsd2F5cyBpbmZvcm0gbXlzZWxmIGFib3V0IHRoZSBsYXRlc3QgaGFyZHdhcmUgc28gSSBrbm93IGEgZ29vZCBkZWFsIGFib3V0IHRoYXQuIApNb3JlIEEuIApJbiBBdGhlbnMsIHByb3ByaWV0b3JzIG9mIHVuZ3VlbnRhcmlpIHNob3BzIHNvbGQgbWFyam9yYW0sIGxpbHksIHRoeW1lLCBzYWdlLCBhbmlzZSwgcm9zZSwgYW5kIGlyaXMgaW5mdXNlZCBpbiBvaWwgYW5kIHRoaWNrZW5lZCB3aXRoIGJlZXN3YXguIAoiVGhlIGNhc2lubyBlbnRlcnRhaW5tZW50IGluZHVzdHJ5IGhhcyBleHBlcmllbmNlZCBhbnVucHJlY2VkZW50ZWQgc3VyZ2UgaW4gcmV2ZW51ZSBncm93dGggaW4gdGhlIHBhc3QgZml2ZSB5ZWFycyB0aGF0b3V0cGFjZXMgbmVhcmx5IGFsbCBvdGhlciBpbmR1c3RyeSBncm91cHMuIFNpbmNlIDE5OTAsIGNhc2lub3JldmVudWVzIGhhdmUgZG91YmxlZCBhbmQgbm93IGV4Y2VlZCAkMTYuNSBiaWxsaW9uLiBUaGUgZ3Jvd3RoIGlzZHJpdmVuIGJ5IGV4cGFuc2lvbiBvZiB0cmFkaXRpb25hbCBsYW5kIGJhc2VkIGNhc2lubyBkZXN0aW5hdGlvbnMgYW5kdGhlIGNvbnRpbnVlZCBkZXZlbG9wbWVudCBvZiBuZXcgcml2ZXJib2F0IGFuZCBJbmRpYW4gcmVzZXJ2YXRpb25jYXNpbm9zIHRocm91Z2hvdXQgdGhlIFVuaXRlZCBTdGF0ZXMiIChQLiAKWW91IGRvbid0IGhhdmUgdG8gYmUgb3JkZXJlZCB0byB0YWtlIGEgdGVzdCwgeW91IGNhbiBnZXQgb25lIGluZGVwZW5kZW50bHkuIApPbiB0aGUgc3VyZmFjZSwgaXQgYXBwZWFyZWQgdGhhdCBlYWNoIHNpZGUgbmVlZGVkIHRoZSBvdGhlci4gCkl0IHdhcyBjcmVlcHkuZW5vdWdoIG5lZ2F0aXZlIHN0dWZmLiBJIG1ldCBTY290dCBXaWxsaWFtc29uLCB0d2ljZSB5b3lvIGFuZCBjb3VsZG4gaGF2ZSBiZWVuIGEgbmljZXIgYW5kIHN1cHBvcnRpdmUgZ3V5LiBJdCB3YXMgYW4gaG9ub3IgdG8gbWVldCBoaW0uIFNvbWVvbmUgdG9vayBteSBmb29kIG91dCBvZiB0aGUgZnJpZGdlIGF0IHRoZSBEaW5zbW9yZXMgYW5kIFNjb3R0IGdhdmUgbWUgaGlzIGV4dHJhIGZvb2QgdG8gbWFrZSB1cCB0aGUgZGlmZmVyZW5jZSBhbmQgZ2V0IG1lIGJhY2sgb24gdHJhaWwuIApFc3RhYmxpc2ggYSBuYXRpb25hbCBpbmRlcGVuZGVudCByZXNlYXJjaCBpbnN0aXR1dGUgb24gZ2FtYmxpbmcuCkluIG15IGV4cGVyaWVuY2UsIEZpdGJpdCBpcyB0aGUga2luZyBvZiBsaWZlc3R5bGUgdHJhY2tpbmcuIApIZSBtYWRlIGEgZ29vZCBpbXByZXNzaW9uLiBIZSBsb29rcyBhbmQgc291bmRzIGxpa2UgdGhlIEJNVyBvZiBvbGQgICB0aGUgZ3JlYXQgY29tcGFueSB3ZSBrbmV3IGJlZm9yZSB0aGUgUm92ZXIgZGlzYXN0ZXIuLiAKWW91IHRvbyBwcm9qZWN0ZWQgZm9yIHRoZSBicmEgKCJsaWtlIHlvdSB0cnlpbmcgdG8gY292ZXIgYW4gb3JhbmdlIHdpdGggYSBwbGF0ZSIpIHdoaWNoIHNvdW5kcyB1bmxpa2VseSBoZXJlCk5vIG9uZSBhdCBQbGFubmVkIFBhcmVudGhvb2QgcHJlc3N1cmVkIG1lIHRvIGFib3J0LiBPZiBjb3Vyc2UgdGhhdCB3YXMgbWVudGlvbmVkIGJ1dCBzbyB3YXMgYWRvcHRpb24uIApZb3UgbWlnaHQgYWxzbyBiZSBpbnRlcmVzdGVkIGluIFBvbHl2YWdhbCB0aGVvcnkuIApTbywgZm9yIHBsYXllcnMgd2hvIHdhbnQgbW9yZSBmcmVlZG9tIGluIHRoZWlyIGJldHRpbmcgdGhhbiBpcyBhbGxvd2VkIGluIGxpbWl0IEhvbGQnZW0sIGJ1dCB3YW50IHRvIHN0YXkgYXdheSBmcm9tIHRoZSBraW5kIG9mIGFjdGlvbiBpbnZvbHZlZCBpbiBubyBsaW1pdCBIb2xkJ2VtLCBwb3QgbGltaXQgSG9sZCdlbSBpcyB0aGUgcHJlZmVycmVkIGdhbWUgb2YgY2hvaWNlLi4gCkxvcnMgZCd0dWRlcywgb24gYSBvYnNlcnYgcXVlIGxlcyByYXRzIHByaXZzIGQnb2N5dG9jaW5lIGRldmllbm5lbnQgZGUgbWF1dmFpcyBwYXJlbnRzIGV0IHF1ZSBsZXVyIHByb2duaXR1cmUgbmUgcHJvZml0ZSBwYXMuIERlcyBvYnNlcnZhdGV1cnMsIGNvbW1lIERhbmllbCBHb2xlbWFuIHF1aSBhIGNyaXQgbGUgbGl2cmUgTCdJbnRlbGxpZ2VuY2UgcmVsYXRpb25uZWxsZSwgcmVtYXJxdWVudCBxdSdpbCBleGlzdGUgdW5lIGNvaHNpb24gc29jaWFsZSBhY2NydWUgYXUgc2VpbiBkZXMgZ3JvdXBlcyBvIGxlIHRvdWNoZXIgc2FpbiBlc3QgdmFsb3Jpcy4uIApXZWxsIEkgbGlrZSBhIHNvdXJjZSBvbiB0aGF0LiBCZWNhdXNlIEkgZG9uIGJlbGlldmUgaXQuIFJ1c3NpYSBpcyBvbmUgb2YgdGhlIGxlYWRpbmcgY291bnRyaWVzIGluIEludGVybmV0IGNvdmVyYWdlIGFuZCBjb3N0cywgdGhlIG1ham9yaXR5IG9mIHRoZSBwb3B1bGF0aW9uIGhhdmUgYWNjZXNzIHRvIGl0IGFuZCB1c2UgaXQgYXMgdGhlaXIgZ28gdG8gc291cmNlIG9mIGluZm9ybWF0aW9uLiAKNi4gWW91ciBIb21lICAgSWYgeW91IG93biBhIGhvbWUgeW91IGNhbiB1c2UgYSBIb21lIEVxdWl0eSBMaW5lIG9mIENyZWRpdCB0byBkcmF3IGRvd24gY2FzaCBvdmVyIHRpbWUsIG9yIG1heWJlIGEgZG93bnNpemUgb3Igc2FsZSBvZiByZWFsIGVzdGF0ZSBpcyBhIGtleSBzb3VyY2Ugb2YgZnVuZHMgZm9yIHlvdXIgcmV0aXJlbWVudC4gClRvIG15IHNob2NrLCB0aGUgbmV4dCBtb3JuaW5nIEkgY29udmluY2VkIG15IGZhbWlseSB0byBsZXQgbWUgZ28gb3V0IG9uIG15IG93biBiZWNhdXNlIEkgc2VjcmV0bHkgd2FudGVkIHRvIGdldCBkcnVuaywgdG8gbXkgc2hvY2sgdGhlIGRvZyB3YXMgc3RpbGwgc3RpbGwgdGhlcmUsIGhhcHBpbHkgd2FpdGluZy4gCkdvbGQsIDM5LCBpcyBleGVjdXRpdmUgY2hhaXJtYW4gb2YgUEFMQ08gTHRkLCBhIHBsYXN0aWNzIGZpcm0sIGFuZCBydW5zIE5pY2sgR29sZCBJbnZlc3RtZW50cy4gQWNjb3JkaW5nIHRvIHRoZSBjb21wYW55IHdlYnNpdGUsIHdoaWNoIHdhcyBkaXNhYmxlZCBpbiBPY3RvYmVyIGZvbGxvd2luZyBpbnF1aXJpZXMgYnkgVGhlIERhaWx5IFRlbGVncmFwaCwgaXQgaGFzIGludGVyZXN0cyBpbiAzMyBjb21wYW5pZXMgYW5kIGhhcyBjb25kdWN0ZWQgMzAwIG1pbGxpb24gb2YgdHJhbnNhY3Rpb25zIGluIHRoZSBsYXN0IHRocmVlIHllYXJzIHNwZWNpYWxpc2luZyBpbiBkZWFscyBhbmQgaW52ZXN0aW5nIGluIGNoYWxsZW5naW5nIGJ1c2luZXNzZXMuIApQb2tlciBSb29tIGlzIHBvcHVsYXJseSBrbm93biBmb3IgaXRzIG5vIGRvd25sb2FkIHByb2dyYW0uIFBhY2lmaWMgUG9rZXIgb2ZmZXJzIGVhc3kgdG8gYmVhdCBnYW1lcywgd2hpY2ggYXJlIGEgbWFqb3IgaGl0IGFtb25nIG5ldyBjb21lcnMsIGFuZCB0aGlzIHNpdGUgc3BlY2lhbGl6ZXMgaW4gbm8gbGltaXQgdG91cm5hbWVudHMgb2YgSG9sZCdlbSBwb2tlci4gRnJlZSBvbmxpbmUgcG9rZXIgZ2FtZXMgYXJlIGFsc28gYmVpbmcgYSBtYWpvciBoaXQgYW1vbmcgcGVvcGxlIHdobyB3aXRob3V0IHNoZWRkaW5nIG1vbmV5IHdhbnQgdG8gZXhwZXJpZW5jZSB0aGUgZnVuIG9mIHBsYXlpbmcgdGhlIGdhbWUuIHdpdGhvdXQgcGF5aW5nIHRoZSBkZXBvc2l0IG1vbmV5LiBUaGUgRnJlZSBQb2tlciBSb29tIG9mZmVycyBhbiBvcHBvcnR1bml0eSB0byBwbGF5IHRoZSBtdWx0aXBsYXllciBUZXhhcyBIb2xkIEVtIGZvciBmcmVlLiBQbGF5ZXJzIGFsc28gc3RhbmQgYSBjaGFuY2UgdG8gd2luIG1vbmV5IGluIHRoaXMgcG9rZXIgcm9vbSB3aXRob3V0IGV2ZW4gc2hlZGRpbmcgYSBwZW5ueQpXZSBjYW4gbWVldCB1cCBhbnl0aW1lIHlvdSB3YW50IEknbSBoZXJlIGluIHZpZXRuYW0gcmlnaHQgbm93IGFuZCBoYXZlIGEgY2hhdCBpbnN0ZWFkIG9mIHRhbGtpbmcgYmVoaW5kIHlvdXIgY29tcHV0ZXIgbGV0IG1lIGtub3cuIApEZXBlbmRpbmcgb24gdGhlIHNjaG9vbCB5b3UgY2hvb3NlLCB5b3UgbWF5IGhhdmUgYSBjaG9pY2Ugb2YgcHJvZ3JhbXMgdGhhdCBmb2N1cyBvbiB1c2luZyBzdGVub3R5cGUgbWFjaGluZXMgICBzcGVjaWFsIG1hY2hpbmVzIHVzZWQgdG8gdHJhbnNjcmliZSBpbiBzaG9ydGhhbmQgICBvciB2b2ljZSByZWNvcmRlcnMuIApJbCBtYXNzYWdnaW8gcHJvc3RhdGljbyB2aWVuZSBkZWZpbml0byBjb21lIGwnYXR0byBkaSBzdGltb2xhcmUgaWwgcHVudG8gZyBtYXNjaGlsZSBvIGxhIGdoaWFuZG9sYSBwcm9zdGF0aWNhLiBTZSBzdGFpIGNvbnNpZGVyYW5kbyBsJ2lwb3Rlc2kgZGkgdW4gbWFzc2FnZ2lvIHByb3N0YXRpY28sIG1hIG5vbiBzZWkgc2ljdXJvIGRpIGNvc2Egc2kgdHJhdHRpIHF1ZXN0YSBzZXppb25lIHRpIHNwaWVnaGVyIGNoZSBjb3MnIGlsIG1hc3NhZ2dpbyBwcm9zdGF0aWNvLCBjb25vc2NpdXRvIGFuY2hlIGNvbWUgbWlsa2luZywgZWQgZWxlbmNoZXIgaW5vbHRyZSBjaW5xdWUgYmVuZWZpY2kgZGkgcXVlc3RhIHByb2NlZHVyYS4gCldoYXQgZ2l2ZXM/IENhbmFkYSdzIGpvYiBtYXJrZXQgb2ZmIHRvIGl0cyBiZXN0IHN0YXJ0IGluIGFsbW9zdCA0MCB5ZWFyc1N0aWxsLCBhcyBJJ3ZlIHNhaWQgYmVmb3JlLCBNb3JuZWF1IGFuZCB0aGUgcmVzdCBvZiBUZWFtIFRydWRlYXUgcmVhbGx5IHNob3VsZCBjb250cm9sIHRoZWlyIHVyZ2UgdG8gY29uZ3JhdHVsYXRlIHRoZW1zZWx2ZXMgZXZlcnkgdGltZSBoaWdoIGZyZXF1ZW5jeSBkYXRhIHdpZ2dsZSB0aGVpciB3YXkuIEJheSBTdHJlZXQgd2FzIHdyb25nIHRoaXMgbW9udGgsIGJ1dCB0aGUgcGVzc2ltaXN0aWMgb3V0bG9vayBvZiBtb3N0IG9mIGl0cyBmb3JlY2FzdGVycyBwcm9iYWJseSBpcyBjbG9zZXIgdG8gdGhlIGN1cnJlbnQgcmVhbGl0eSB0aGFuIE1vcm5lYXUgdHdlZXQuCiAzIHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnb0kgcmVhbGx5IGFtdXNlZCBieSB0aGUgc2VudGltZW50IHRoYXQgR0cgY2FuIGJlYXQgImFueSBvZiB0aGUgbWV0YSIgd2hlbiBpdCBiZWVuIHdlbGwgZG9jdW1lbnRlZCB0aGF0IGhlIGNhbiBiZWF0IHRoZSBtZXRhLiBZZXMgeWVzIHllcyBoZSBkb2VzIG5vdCBob2xkIG9uIGRlZmVuc2UsIGJ1dCBhIHByb3Blcmx5IG1vZGRlZCBHRyB0ZWFtIHdpbGwgYmUgd2VsbCBjYXBhYmxlIG9mIGJlYXRpbmcgUmV2YW4gbW9yZS5Ob3QgdG8gbWVudGlvbiBHcmFuZCBBcmVuYSAoSSBrbm93IGl0IGhhcmQgdG8gYWNjZXB0IHRoYXQgdGhlIGdhbWUgaXMgbW9yZSB0aGFuIHNxdWFkIGFyZW5hIGZvciBzb21lLCB3aGljaCBpcyBwYXJ0IG9mIHRoZSBwcm9ibGVtIGhlcmUpIGhlIGhhbmRsZWQgd2VsbCBieSBDTFMsIFJldmFuLCBUcmF5YSB3aGVuIG9uIGRlZmVuc2UgYnV0IGFmdGVyIHRoYXQuIE5vdCBzbyBlYXN5IHRvIGJlYXQgaGltLlBlb3BsZSBhcmUgZnJlZSB0byBiZWxpZXZlIHdoYXQgdGhleSB3YW50LCBJIHN1cHBvc2UuMSkgS2V2aW4uIApUaGF0IHdoZW4gdGhlaXIgaW50ZW50aW9ucyBiZWNhbWUgY2xlYXIuIApBbmQgdGhlIGxhc3QgdGhpbmcgdGhhdCB5b3Ugd2FudCB0byBkbyBpcyB0byBtaXggdXAgYSBUaHJlZSBvZiBhIEtpbmQgd2l0aCBhIEZ1bGwgSG91c2U7IG9yIGltYWdpbmUgdGhhdCB5b3UgaGF2ZSBhIFJveWFsIEZsdXNoIHdoZW4gYWxsIHlvdSBoYXZlIGlzIGEgU3RyYWlnaHQhIFRoZXNlIGtpbmRzIG9mIGJsdW5kZXJzIGNhbiBjb3N0IHlvdSBtb25leSBhbmQgc2luY2UgdGhhdCBpcyB0aGUgdmVyeSBsYXN0IHRoaW5nIHRoYXQgeW91IHdhbnQgdG8gZG8sIGl0IGlzIHByb2JhYmx5IGluIHlvdXIgYmVzdCBpbnRlcmVzdHMgaWYgeW91IGJlY29tZSBtb3JlIGZhbWlsaWFyIHdpdGggdGhlIGRpZmZlcmVudCBwb2tlciBoYW5kcy4gCkkgd2FzIG5lYXJseSBibGluZCB3aXRob3V0IGdsYXNzZXMgKGFuZCBjb3VsZG4ndCB3ZWFyIGNvbnRhY3RzKSBhbmQgZXZlbiB3aXRoIG15IG5pZ2h0IHZpc2lvbiBiZWluZyBhIGxpdHRsZSB3b3JzZSBhbmQgc29tZSBkcnkgZXllIGlzc3VlcyB0aGF0IHdlcmUgcmVzb2x2ZWQgd2l0aCB0ZWFyIGR1Y3QgcGx1Z3MgKEkgaGFkIGRyeSBleWVzIGJlZm9yZSBzdXJnZXJ5LCBpdCBtYWRlIHRoZW0gd29yc2UpIGl0IHdhcyBzdGlsbCBtb3JlIHRoYW4gd29ydGggaXQuIApQZW9wbGUgYXQgbXkgb2xkIGpvYiB0aG91Z2h0IHRoYXQsIHRvbyAoSSB3b3JrZWQgZm9yIHRoZSBzdGF0ZSkuIApCdXQgSSBkb24ga25vdyBob3cgdGhleSB3aWxsIGJlIGFibGUgdG8gYnJpbmcgdGhvc2UgdXAgdG8gYSBoaWdoZXIgaW5jb21lIHNlZ21lbnQuIApRdWFsaWZpY2F0aW9ucyBOZWVkZWQgdG8gR2V0IGEgTGF3IEZpcm0gSm9iCkFic3RyYWN0IGRpcmVjdGx5IGFib3ZlLiBTaW5jZSB0aGUgdGl0bGUgaXNuJ3QgY2xlYXIsIHRoZSBvbmx5IHZhcmlhYmxlIGNoYW5naW5nIGluIHRoZSBzdHVkeSBpcyB3aGV0aGVyIHRoZSB3ZWxmYXJlIHJlY2lwaWVudHMgcmVwb3J0ZWRseSBmb3VuZCB3b3JrIG9yIG5vdC4gQm90aCBzdHVkaWVzIGhhdmUgd2hpdGUgcGVvcGxlIHJlcG9ydGluZyB0aGVpciBwZXJjZXB0aW9uIG9mIGJsYWNrIGFuZCB3aGl0ZSB3ZWxmYXJlIHJlY2lwaWVudHMuIApJIGRvIGFncmVlIHRoYXQgbmljZSBsb29raW5nIGNhYmxlcyBhZGQgYW5kIHN0eWxlIHBvaW50cyB0aG91Z2guCkFmdGVyIHNoZSB3YXMgZXhhbWluZWQgYnkgYSBkb2N0b3IsIHRoZSBldmlkZW5jZSB3YXMgaGFuZGVkIGJhY2sgdG8gS0JSLCB3aGVyZSB0aGUgcmFwZSBraXQsIHBob3RvcywgYW5kIG5vdGVzIGRpc2FwcGVhcmVkLiBTaGUgd2FzIHRoZW4gbG9ja2VkIGluIGEgc2hpcHBpbmcgY29udGFpbmVyLCB3aGVyZSBldmVudHVhbGx5IGEgZ3VhcmQgZ2F2ZSBoZXIgYSBjZWxsIHBob25lIHRvIGNhbGwgZm9yIGhlbHAuIEVtYmFzc3kgaW4gQmFnaGRhZCwgd2hlcmUgdGhleSB0b29rIEphbWllIG91dCBvZiBLQlIgY3VzdG9keS4gClRoZSBhbm5vdW5jZW1lbnQgY2FtZSBvbiBhIHJlbWFya2FibGUgZGF5IG1lbGRpbmcgcGFwYWNpZXMgcGFzdCBhbmQgcHJlc2VudDogSXQgb3BlbmVkIHdpdGggRnJhbmNpcyBhbmQgUG9wZSBFbWVyaXR1cyBCZW5lZGljdCBYVkkgYXR0ZW5kaW5nIHRoZWlyIGZpcnN0IFZhdGljYW4gY2VyZW1vbnkgdG9nZXRoZXIsIHNpdHRpbmcgc2lkZSBieSBzaWRlIG9uIG1hdGNoaW5nIHBhcGFsIGNoYWlycyBmb3IgdGhlIHVudmVpbGluZyBvZiBhIHN0YXR1ZSBpbiB0aGUgVmF0aWNhbiBnYXJkZW5zLiBJdCBjb250aW51ZWQgd2l0aCB0aGUgcHVibGljYXRpb24gb2YgRnJhbmNpcycgZmlyc3QgZW5jeWNsaWNhbCwgYSBtZWRpdGF0aW9uIG9uIGZhaXRoIHRoYXQgd2FzIGxhcmdlbHkgd3JpdHRlbiBieSBCZW5lZGljdCBiZWZvcmUgaGUgcmV0aXJlZCBidXQgd2FzIHNpZ25lZCBieSBGcmFuY2lzLiAKQydlc3QgdG91dCBjaGltaXF1ZSBldCBtY2FuaXF1ZSA6IHBhcmZvaXMgdW5lIHBldGl0ZSBtb2xjdWxlIHZpZW50IHMnYXR0YWNoZXIgIHVuZSBzZWN0aW9uIGQnQUROIGV0IGwnZW1wY2hlIGQnZW50cmVyIGVuIGZvbmN0aW9uLiBDZWxhIHMnYXBwZWxsZSBsYSBtdGh5bGF0aW9uIGRlIGwnQUROIChwYXJjZSBxdWUgbGEgbW9sY3VsZSBlc3QgdW4gY29tcG9zIG10aHlsZSkuIFNpIGxhIG10aHlsYXRpb24gdmllbnQgYmxvcXVlciB1biBnbmUgaW1wbGlxdSBkYW5zIHVuZSBtYWxhZGllLCBjJ2VzdCB1bmUgbXRoeWxhdGlvbiBibmZpcXVlLiAKKFByaXZhY3kgUG9saWN5KUZhY2Vib29rIEFkc1RoaXMgaXMgYW4gYWQgbmV0d29yay4gKFByaXZhY3kgUG9saWN5KUFtYXpvbiBVbmlmaWVkIEFkIE1hcmtldHBsYWNlVGhpcyBpcyBhbiBhZCBuZXR3b3JrLiAoUHJpdmFjeSBQb2xpY3kpQXBwTmV4dXNUaGlzIGlzIGFuIGFkIG5ldHdvcmsuIChQcml2YWN5IFBvbGljeSlPcGVueFRoaXMgaXMgYW4gYWQgbmV0d29yay4gKFByaXZhY3kgUG9saWN5KVJ1Ymljb24gUHJvamVjdFRoaXMgaXMgYW4gYWQgbmV0d29yay4gKFByaXZhY3kgUG9saWN5KVRyaXBsZUxpZnRUaGlzIGlzIGFuIGFkIG5ldHdvcmsuIChQcml2YWN5IFBvbGljeSlTYXkgTWVkaWFXZSBwYXJ0bmVyIHdpdGggU2F5IE1lZGlhIHRvIGRlbGl2ZXIgYWQgY2FtcGFpZ25zIG9uIG91ciBzaXRlcy4gClRoZSBtYWpvcml0eSBvZiBwZW9wbGUgd29udCBzaG93IHVwIHRvIGEgcmVzdGF1cmFudCAzMCBtaW5zIG9yIGxlc3MgYmVmb3JlIGNsb3NlIGJlY2F1c2UgdGhlIHJlc3RhdXJhbnQgY2xvc2VzIGluIDMwIG1pbnMuIEl0IHJhcmUgKHRoYW5rZnVsbHkpIHRoYXQgYW55b25lIHdvdWxkIGJlIHNvIGNsdWVsZXNzIGFzIHRvIHRoaW5rIHRoYXQgbWVhbnMgdGhleSBjYW4gc2hvdyB1cCBhdCAxNSBtaW5zIHRvIGNsb3NlIGFuZCBnZXQgYSBtZWFsLiBDbG9zZWQgaXMgY2xvc2VkLiBDbG9zZWQgYXQgMTBwbSBtZWFucyAiYWxsIGN1c3RvbWVycyBzaG91bGQgYmUgYWxtb3N0IHB1dCBvZiB0aGUgcGxhY2UgYXQgMTBwbSIgTm90ICJ0aGUga2l0Y2hlbiBjbG9zZXMgYXQgMTBwbSBidXQgYWxsIG9mIHVzIG1ha2luZyBtaW5pbXVtIHdhZ2UgYXJlIG1vcmUgdGhhbiBoYXBweSB0byBoYW5nIG91dCB3ZWxsIGFmdGVyIG91ciBzaGlmdCBpcyBzdXBwb3NlZCB0byBlbmQgd2l0aCB0aGUgZG9vcnMgbG9ja2VkIHNvIG5vIG9uZSBlbHNlIGNhbiBjb21lIGluIHdoaWxlIHlvdSBlYXQuIgpTaGUgY29tcGFyZWQgS2ltJ3Mgc2l6ZSB0byBoZXIgcGlua2llIGZpbmdlci4uIApUaGUgb25seSByZWFsIHNub3cgd2FzIGluIE5vdmVtYmVyIGFuZCB0aGF0IHdlbnQgYXdheSBxdWlja2x5LiAKU2hlIG1ha2VzIGEgbWVhbiBicmF2ZSBhdHRhY2tlciB3aXRoIGhlciBhdHRhY2sgc3RhdCBhbmQgcGVyc29uYWwgd2VhcG9uLCBidXQgdGhlcmUgaXNuJ3QgYXMgbXVjaCB2YXJpZXR5IHRvIGhlci4gCk1yIEFjaHRlcnN0cmFhdCBzYXlzICJhbiBhYnNlbmNlIG9mIHByb3BlciBtb25pdG9yaW5nIiBvZiBDYXRlZ29yeSAxIGV4cGVuZGl0dXJlIG1lYW50IHRoZXJlIHdhcyAibGltaXRlZCBhc3N1cmFuY2UgdGhhdCBDYXRlZ29yeSAxIGlzIGVmZmVjdGl2ZWx5IG1hbmFnZWQiLiBUaGUgYXVkaXQgZm91bmQgdGhhdCB0aGUgdGF4IHJlYmF0ZSBhcHByb3ZhbCBwcm9jZXNzICJpcyBub3Qgcm9idXN0IiBhbmQgcHVibGljIHJlcG9ydGluZyBvbiB0aGUgc2NoZW1lIGlzICJsaW1pdGVkIi4gVGhlIHJlcG9ydCBzYXlzIHRoYXQgdGF4IGJyZWFrcyBhcmUgYmVpbmcgZGVsaXZlcmVkIGJlZm9yZSBjbHVicyBwcm92aWRlIGV2aWRlbmNlIG9mIGhvdyB0aGUgbW9uZXkgaGFzIGJlZW4gc3BlbnQuIApUaGUgd29yc3QgcGFydCB3YXMgcHJ5aW5nIHRoZSBkb29yIG9mZjsgeW91IGFsd2F5cyBmZWVsIGxpa2UgeW91IGdvaW5nIHRvIGJyZWFrIHNvbWV0aGluZyAoYnV0IHlvdSB3b24gVGhlIG9ubHkgdGhpbmcgeW91IG1heSBicmVhayBpcyBhIGRvb3IgY2xpcCwgd2hpY2ggaXMgcHJldHR5IGNoZWFwIHRvIHJlcGxhY2UuIEkgcmVjb21tZW5kIGJ1eWluZyAyIG9yIDMgZXh0cmFzIGFuZCBoYXZlIHRoZW0gc2l0dGluZyBvbiBoYW5kIGp1c3QgaW4gY2FzZS4gQWxzbywgd2hlbiBpdCBjb21lcyB0aW1lIHRvIHB1bGwgdGhlIE9FTSBtaXJyb3Igb2ZmLCB0aWUgYSBzdHJpbmcgdG8gdGhlIHdpcmluZyEgVGhlbiB3aGVuIGl0IG91dCwgdGllIHRoYXQgc3RyaW5nIHRvIHRoZSBuZXcgd2lyaW5nIG9uIHRoZSByZXBsYWNlbWVudCBtaXJyb3IgYW5kIGp1c3QgcHVsbCBpdCB0aHJvdWdoISBUaGV5IGRvbiBleHBsYWluIHRoYXQgaW4gdGhlIHZpZGVvIGxpbmtlZCBhYm92ZSwgdGhleSBqdXN0IHVzZSBhIHdpcmUgZ3JhYmJlciwgd2hpY2ggaXMgYW5vdGhlciBvcHRpb24gYnV0IEkgc3RpbGwgcmVjb21tZW5kIHN0cmluZy4gClRoZSBkaWZmZXJlbmNlIGJldHdlZW4gdGhlIHR3byBpcyBuZWdsaWdpYmxlIG90aGVyd2lzZSBhbmQgZ2V0cyBsZXNzIGFwcGFyZW50IGFzIHlvdSBnZXQgZnVydGhlciBmcm9tIHByZW1lZC9maXJzdCB5ZWFycyBvZiBtZWRpY2FsIHNjaG9vbC4gSXQncyBhIGNvbW1vbiBzZW50aW1lbnQgYWNyb3NzIFNETiBhbmQgaGVyZSB0aGF0IHBoeXNpY2lhbnMgY291bGRuJ3QgdGVsbCB5b3Ugd2hpY2ggbGV0dGVycyB0aGVpciBmZWxsb3cgZG9jdG9ycyBoYXZlIGFmdGVyIHRoZWlyIG5hbWVzLiBJZiB5b3UgY2FuIGNsZWFyIGEgY2xpbmljIGFuZCBhcmUgZ3JlYXQgd2l0aCBwYXRpZW50cywgbm8gb25lIGNhcmVzIGFuZCB0aGF0IHNvcnQgb2YgYWJpbGl0eSBpc24ndCBnb2luZyB0byBjb21lIGZyb20geW91ciBtZWRpY2FsIHNjaG9vbCwgeW91ciB1bmRlcmdyYWQgb3IgeW91ciBsZXR0ZXJzLi4gClNob3V0aW5nICJZb3UgZG9uJ3Qga25vdyBtZSBhbnltb3JlLiAKSSBoYXZlIG5ldmVyIHN0YWtlZCBzb21lb25lIGJlZm9yZSBzbyB3ZSBhZ3JlZWQgdG8gYSB0cmFkaXRpb25hbCA1MC81MCBzdGFrZS4gSGUgZW5kZWQgdXAgd2lubmluZyB0aGUgc2F0ZWxsaXRlLCB3aGljaCBtZWFudCB0aGF0IEkgZ2V0IDEwIHBlcmNlbnQgb2YgaGlzIG1haW4gZXZlbnQuCllvdSBtYXkgbm90IGJlbGlldmUgbWUgYnV0IHRoZSBjb250cm9scyB5b3UgaGF2ZSBvbiB4aW0gYXJlIHRob3NlIG9mIHRoZSBqb3lzdGljay4gWW91IGRvbiBnZXQgdHJ1ZSBtb3VzZSBtb3ZlbWVudCB3aXRoIG1vdXNlIG9uIFhJTS4KRXVyb3BlYW4gbWVkaWEgc2VlIGZldyBvcHRpb25zIGluICdCcmV4aXQgcG9rZXInCkh5cG94aWNfaGlnaCAgOCBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpXZSBzdGFydGVkIGdvaW5nIGluIHRoZSBiYWNrIGFuZCBqdXN0IHByZXRlbmRpbmcgdG8gbG9vay4gCkZhc3RqZWZmIHUKSWsgYmVuIGluZGVyZGFhZCBvb2sgYmVuaWV1d2QsIG9mIHplIGVjaHQgZ2VlbiBwZW5zaW9lbiBoZWVmdCBvcGdlYm91d2QgdmlhIGVlbiBwZW5zaW9lbmZvbmRzLiBEZSBtZWVzdGUgYmVyb2VwZW4gaW4gTmVkZXJsYW5kIGdldmVuIHRvY2ggd2VsIHJlY2h0IG9wIGVlbiB2b3JtIHZhbiBwZW5zaW9lbi5IdXBwaWUgaGVlZnQgdmVyZGVyIGFsIGhlbGUgZ29lZGUgYWR2aWV6ZW4gZ2VnZXZlbi4gCiJNeSBjbGllbnRzIHdobyBoYXZlIGFuIGVsZWN0cm9uaWMgZ2FtaW5nIG1hY2hpbmUgYWRkaWN0aW9uIHJlZmVyIHRvIGl0IGFzIHpvbmluZyBvdXQsIHdoZXJlIHRoZXkgZ28gYW5kIGFsbCB0aGVpciBwcm9ibGVtcyBkaXNhcHBlYXIiIHNoZSBzYWlkLiAKVGhvc2UgTkRBJ3MgVHJ1bXAgaGFkIGluZGl2aWR1YWxzIHNpZ24gd2VyZSBCUy4gTm93IENvaGVuIHByb2R1Y2luZyBjb21wYW55IGRvY3VtZW50cywgd291bGQgdGhhdCBiZSBjb25zaWRlcmVkIGFuIGVudGlyZWx5IGRpZmZlcmVudCBpc3N1ZT8gQ291bGQgQ29oZW4gYmUgZXhwb3NlZCB0byB0cnVlIGxlZ2FsIGltcGxpY2F0aW9ucyBmcm9tIHRoZSBUcnVtcCBPcmdhbml6YXRpb24/ClRoZXJlIGFyZSB0d28gbWFpbiBhcHByb2FjaGVzIGluIHRvdXJuYW1lbnQgZ2FtZXMsIG9uZSBvZiB0aGVtIGlzIGNhbGxlZCBjb25zZXJ2YXRpdmUgYW5kIHRoZSBvdGhlciBvbmUgaXMgcmVmZXJyZWQgdG8gYXMgYWdncmVzc2l2ZS4uIApNeSBnbyB0byBpcyBjcm9ja3BvdCBzaHJlZGRlZCBjaGlja2VuIG9yIGEgY2hpY2tlbiBjaGlsaSwgYmVjYXVzZSBpdCdzIHN1cGVyIGZsYXZvcmZ1bCwgZWFzeSB0byB0aHJvdyB0b2dldGhlciwgYW5kIGRvZXNuJ3QgbWFrZSBhbnlvbmUgZWxzZSBmZWVsIGxpa2UgdGhleSdyZSBlYXRpbmcgZGlldCBmb29kLiAKSW4gbW9zdCBjYXNlcyBoZSBvciBzaGUgd291bGQgdGhlbiBoYXZlIHRvIGZvbGQgYWZ0ZXIgdGhlIGZsb3AsIGJ1dCBpbiBzb21lIGNhc2VzIGhlIG9yIHNoZSBtaWdodCBtYWtlIGhpcyBvciBoZXIgaGFuZCBhbmQgd2luIGEgdmVyeSBiaWcgcG90LiAKSSB0aGluayB0aGUgZmlyc3QgdGltZSBJIGRlYWRsaWZ0ZWQgbGlrZSA2NWxicyBpbiB0aGUgcmFjayBiZWNhdXNlIEkgY291bGRuIGRvIHRoZSBiaWcgcGxhdGVzIGxvbC4gCkJ1dCBpdCB3YXMgaW4gdGhlIGFmdGVybWF0aCwgYWxvbmUgd2l0aCBoaXMgdGhvdWdodHMgd2hpbGUgdGhlIDMxNCBmb290IGxvbmcgSGFtaWx0b24gcGxvd2VkIHRocm91Z2ggdGhlIHVuZm9yZ2l2aW5nIG5vcnRoZXJuIEF0bGFudGljIE9jZWFuLCB0aGF0IGl0IGdvdCByZWFsbHkgaGFyZC4KVGhlIFRUSyBpcyBpbnNhbmVseSBmYXN0IGFuZCB0aGV5IHdvbiB1c3VhbGx5IGhhdmUgYSBsb3Qgb2YgdGltZSB0byByZWFjdC4gClRoYXQgd291bGQgYmUgc3dlZXQsIHN3ZWV0IGthcm1hIGlmIHRoZXkgc2VudCBoZXIgYmFjayBiYXNlZCBvbiBoZXIgc29jaWFsIG1lZGlhIHBvc3RzLiAKSSBrbm93LiBJIGZpbmlzaCBoaWdoIFNjaG9vbCBhdCB0aGUgYWdlIG9mIDE3IGFuZCBJIGdvbm5hIGxpdmluZyBhcnJhbmdlbWVudHMgc2V0dGxlZCBJIGdvbm5hIGxlYXZlIGEgbG9uZyBub3RlIGZpbGxlZCB3aXRoIGN1c3NpbmcgYW5kIHJlYXNvbnMgd2h5IEkgaGF0ZSBoaW0oY2FuIGN1c3Mgd29yZHMgYXJvdW5kIG15IGZhbWlseSBldmVuIHRob3VnaCBteSBkYWQgY3Vzc2VzIHdoZW5ldmVyIGhlIHBsZWFzZXMpLiBJZiBhbnlvbmUgYXNrcyB3aHkgSSBsZWZ0IGhlIHdvbiBiZSBhYmxlIHRvIHNob3cgYW55b25lIHdpdGhvdXQgc2hvd2luZyBob3cgbXVjaCBvZiBhbiBhc3Nob2xlIGhlIGlzLiAKTWFueSBhIHBva2VyIHBsYXllciBoYXMgbG9zdCBhIGdvb2QgcG9ydGlvbiBvZiBoaXMgb3IgaGVyIGJhbmtyb2xsIGF0IGJsYWNramFjaywgY3JhcHMsIHBhaSBnb3csIGV0Yy4gCk9idmlvdXNseSBJIGtub3cgd2hhdCB0aGlzIHBvaW50cyB0bywgYnV0IEkga25vdyBpZiBJIGNvbmZyb250IGhpbSBpdCdsbCBqdXN0IGJlIGEgaHVnZSBmaWdodCBhbmQgaGUnbGwgbmV2ZXIgYWRtaXQgdG8gaXQuIEkgZG9uJ3QgZXZlbiB3YW50IHRvIGdldCBpbnRvIGFsbCB0aGlzIHdpdGggaGltIGNhdXNlIEknbSBkZWFsaW5nIHdpdGggZmFtaWx5IGRyYW1hIGFuZCB0aGUgZGVhdGggb2YgbXkgZ3JhbmRmYXRoZXIsIGJ1dCBvZiBjb3Vyc2UgdGhpcyBpcyByZWFsbHkgaHVydGluZyBtZSB0b28uLiAKV2UgaGF2ZSBsaW5rcyB3aXRoIG1hbnkgbG9jYWwgc3BvcnRzIHRlYW1zIGFuZCBzcG9ydHMgcHJhY3RpdGlvbmVycyB3aG8gY29udHJpYnV0ZSB0byB0aGUgQlNjIFBoeXNpb3RoZXJhcHkgcHJvZ3JhbW1lLCBhbmQgd2hvIGFyZSBrZWVuIHRvIGNvbnRyaWJ1dGUgdG8gdGhlIG5ldyBCU2MgU3BvcnQgUmVoYWJpbGl0YXRpb24gY291cnNlLiBUaGVzZSBpbmNsdWRlOgpNeSBwYXJlbnRzIGFyZSBib3RoIHRoaXMgd2F5LiBFdmVyeSBldmVuaW5nIGl0IGRyaW5rIHVudGlsIG1vbSBjYW4gaGFyZGx5IHdhbGsgYW5kIGRhZCBjYW4ga2VlcCBoaXMgZXllcyBvcGVuLiAKVGVuIFJDVHMgKG49NDI4KSB3ZXJlIGluY2x1ZGVkIGluIHRoZSByZXZpZXcuIFRoZSBtZXRob2RvbG9naWNhbCBxdWFsaXR5IG9mIHRoZSBpbmNsdWRlZCBzdHVkaWVzIHdhcyByZWdhcmRlZCBhcyBwb29yLiBBbGxvY2F0aW9uIGNvbmNlYWxtZW50IHdhcyByZXBvcnRlZCBhcyBhZGVxdWF0ZSBpbiBvbmUgUkNULiAKV2hlbiB5b3Ugc21va2UgYmxvdyBpbnRvIHRoZSBzcGxvb2YsIHRoZSBkcnllciBzaGVldHMgZmlsdGVyIGl0LiAKRGUgZ3JhbmRzIGpvdWV1cnMgY29tbWVsZSBjaGFtcGlvbiBKb25hdGhhbiBEdWhhbWVsLCBkZSBCb3VjaGVydmlsbGUsIGV0IE1hcmMgdGllbm5lIE1jTGF1Z2hsaW4sIGRlIFNhaW50IEplYW4gc3VyIFJpY2hlbGlldSwgc29udCBwcnNlbnRzICBLYWhuYXdha2UgcG91ciBwcmVuZHJlIHBhcnQgYXUgdG91cm5vaSBxdWkgc2UgdGVybWluZXJhIGRhbnMgbGEgbnVpdCBkZSBqZXVkaSAgdmVuZHJlZGkuIExlIGRyb2l0IGQgcG91ciBqb3VlciBlc3QgZGUgMTEwMCQuIExlIHNlcmdlbnQgZGUgbGEgU3JldCBkdSBRdWJlYyBSb25hbGQgTWNJbm5pcyBjb25maXJtZSA6IEMgYXV4IGF1dG9yaXRzIGxvY2FsZXMgYXV0b2NodG9uZXMsIGxlcyBQZWFjZWtlZXBlcnMsIGQgbGUgQ29kZSBjcmltaW5lbCBzdXIgbGV1ciB0ZXJyaXRvaXJlLiBMYSBwb2xpY2UgcHJvdmluY2lhbGUgbiBwYXMgZGFucyBsYSBwcmVtaXJlIG5hdGlvbiwgIG1vaW5zIHF1ZSBsZXMgUGVhY2VrZWVwZXJzIGx1aSBkZW1hbmRlbnQgc29uIGFzc2lzdGFuY2UsIHN1cnRvdXQgZW4gbWF0aXJlIGRlIGNyaW1lcyBtYWpldXJzIG91IGRhbnMgbGUgY2FkcmUgZCBpbmRwZW5kYW50ZXMuCkkgd2FzIHdvcnNoaXBpbmcgcHJhaXNpbmcgTG9yZCBBbG1pZ2h0eSBHb2Qgb24gU2F0dXJkYXkgbmlnaHQsIERlY2VtYmVyIDE5dGggMjAxMC4gCkl0IGdvb2QgdG8gcmVtZW1iZXIuVGhlIG5lZ2F0aXZlIGVmZmVjdHMgYXJlbiB3aGF0IHNjYXJlcyBtZSBhbmQgaSBrbm93IHZlcnkgd2VsbCB5b3UgY2FuIHVzZSBhIG51bWJlciBvZiB0aW1lcyBhbmQgbm90IGVuZCB1cCBhZGRpY3RlZC4gClN5bmRhbmUgdQpIb3dldmVyLCB5b3UgY29ycmVjdCB0aGF0IGl0IGZhciBmcm9tIGZvb2xwcm9vZiwgYW5kIEkgbm90IGRpc3B1dGluZyB0aGUgbWFqb3JpdHkgb2YgeW91ciBzdGF0ZW1lbnQgOikgSSBtb3JlIGFkZGluZyBvbnRvIGl0IHRvIGJldHRlciBlbmNvbXBhc3MgdGhlIGZpbmUgZGV0YWlscy4uIApXaGF0ZXZlciB5b3Ugd2FudCBpdCB0byBiZSwgcmVhbGx5LiAKU3BlY2lhbCB0ZXN0cyBhcmUgb3JkZXJlZCBwb3N0IHJhY2UgaWYgdGhlIHJlc3VsdHMgYXJlIG91dCBvZiB0aGUgb3JkaW5hcnksIGhlIHNhaWQsIHN1Y2ggYXMgImlmIGEgbG9uZ3Nob3QgbG9va2VkIGxpa2UgZ2FuZ2J1c3RlcnMiIG9yIGlmIHRoZSB0b3AgcmF0ZWQgZG9nIHJ1bnMgYSBiYWQgcmFjZS4uIApBbmQsIHRoaXMgdGltZSwgd2UncmUgbm90IGJsdWZmaW5nLi4gCk1vc3Qgd2lsbCBiZSBhd2FyZSB0aGF0IFRoZSBEYXJrIEtuaWdodCBoYXMgYW1hc3NlZCBvdmVyIFVTRCA1MDAgbWlsbGlvbiBpbiBCb3ggT2ZmaWNlIGVhcm5pbmdzIGluIHRoZSBVUy4gSG93ZXZlciwgd2hhdCdzIG5vdCBjb21tb25seSBrbm93biBpcyB0aGUgbW9vbGFoIGl0cyBtYWtlcnMgd2lsbCByYWtlIGluIHdpdGggdGhlIHNhbGUgb2YgRGFyayBLbmlnaHQgbWVyY2hhbmRpc2UgYW5kIHNwZWNpYWwgZWRpdGlvbiBEVkRzLiAKTHVuY2ggKG9uZSBob3VyKS4gU3R1ZGVudHMgY2FuIHVzZSBzb21lIG9mIHRoZWlyIGx1bmNoIHRpbWUgdG8gbWVtb3JpemUgdGhlIHN5bWJvbHMuNy4gVGVzdCBvbiBzeW1ib2xzICBJZiB0aGVyZSBhcmUgZXJyb3JzIHBvaW50IHRoZW0gb3V0IGFuZCBhc2sgdGhlbSB0byBjb3JyZWN0IHRoZW0uIApFdmVuIHBlb3BsZSB3aG8ndmUga25vd24gbWUgZm9yIGFsbCBvZiBteSBhcnRocml0aXMgam91cm5leSB3aGVuIEkgd2FzIG9uIHN0ZXJvaWRzIHB1ZmZlZCB1cCBsaWtlIGFuIE9vbXBsYSBMb29tcGEgY2FuIHRlbGwuIApXaGVuIHRvIHJhaXNlIGNoaXBzIGluIHBva2VyPwpMRSBNQVNTQUNSRSBERVMgSVRBTElFTlMgQSBBSUdVRVMKVmlsbGFpbiB0dXJucyBvdmVyIGhpcyBoYW5kIHNhaWQgaGUgZmxvcHBlZCB0aGUgc3RyYWlnaHQgYXMgd2VsbC4gSGlzIGV4YWN0IGhhbmQgd2FzIDkgMTAgSyAzIHdpdGggdGhlIEszIG9mIGhlYXJ0cy4gCkZvdXJ0aCBTdGF0ZW1lbnQ6IFRoYW5rcyBmb3IgYmVpbmcgYm9ybiB3aXRoIHlvdXIgY3VycmVudCBnZW5ldGljIG1ha2UgdXAuIDEzIHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvCklmIHlvdSBkb24ndCBoYXZlIGFueSBwYWlycyBvciB3aW5uaW5nIGNvbWJpbmF0aW9ucywgeW91IGNhbiB1bnNlbGVjdCBhbGwgb2YgdGhlIGNhcmRzIHRvIGRpc2NhcmQgYWxsIG9mIHRoZW0uIApJZiB5b3UgZmluZCB0aGF0IHRoZSBiYWJ5IG9pbCBpcyBtYWtpbmcgdGhlIGhhaXIgdG9vIHNsaXBwZXJ5IHRvICdkcmVhZCcsIGJsb3Qgb3V0IHNvbWUgZXhjZXNzIG9pbC4KVGhlIGJyYWNlbGV0IGV2ZW50cyBraWNrIG9mZiB3aXRoIGFuIDEsMTAwIHZlcnNpb24gb2YgdGhlIFdTT1AncyAiTW9uc3RlciBTdGFjayIgZXZlbnQgd2l0aCB0aHJlZSBzdGFydGluZyBmbGlnaHRzLCBhbmQgYSA1NTAgdmVyc2lvbiBvZiB0aGUgV1NPUCBDb2xvc3N1cyB0aGF0IGNhcnJpZXMgYSAyIG1pbGxpb24gZ3VhcmFudGVlIHdpdGggYW4gZXllIHRvd2FyZCBzZXR0aW5nIHRoZSByZWNvcmQgZm9yIGxhcmdlc3QgbGl2ZSB0b3VybmFtZW50IGZpZWxkIGluIEV1cm9wZWFuIGhpc3RvcnkuIFRoZSBzY2hlZHVsZSBpcyBvdGhlcndpc2Ugc2ltaWxhciB0byBwcmV2aW91cyBpdGVyYXRpb25zIG9mIFdTT1AgRXVyb3BlIHdpdGggb25lIG1ham9yIGV4Y2VwdGlvbiAgIHRoZSBpbmNsdXNpb24gb2YgYSAxMTEsMTExIEhpZ2ggUm9sbGVyIGZvciBPbmUgRHJvcCwgcGFyYWxsZWxpbmcgaXQncyBMYXMgVmVnYXMgY291bnRlcnBhcnQuIApUaGVzZSBhcmVhcyB0ZW5kIHRvIGJlIGtpbmQgb2Ygb2J2aW91cywgYnV0IHlvdSBjYW4gZGVmaW5pdGVseSBhc2sgdGhlIHBlb3BsZSBhdCB0aGUgZnJvbnQgZGVzayB3aGljaCBhcmVhcyBhcmUgd2hpY2ggaWYgeW91IHdhbnQgdG8gZmVlbCBwcmVwYXJlZC5XZWFyIHNhbmRhbHMgaW4gdGhlIGNvbW1vbiBhcmVhcyBidXQgcmVtb3ZlIHRoZW0gYmVmb3JlIGdvaW5nIGludG8gc3RlYW0gcm9vbXMsIHNhdW5hcywgb3IgcG9vbHMuUmluc2UgeW91ciBib2R5IHVuZGVyIGEgc2hvd2VyIGFmdGVyIGV2ZXJ5IHN0YXRpb24gd2hlcmUgeW91IHN3ZWF0IChzdGVhbSByb29tcyBhbmQgc2F1bmFzKUhhdmUgYSB0b3dlbCB0byBkcnkgeW91cnNlbGYgb2ZmIHdpdGggKG9yIGEgcm9iZSBpZiB5b3UgcmF0aGVyKSBhbmQgYSBzZXBhcmF0ZSB0b3dlbCBmb3IgdGhlIHNhdW5hLiAKQnVybiBvdXQgcXVpY2tseSBhbmQgMi4gClByb2JhYmx5IGdvaW5nIHRvIGJlIGRvd252b3RlZCBpbnRvIG9ibGl2aW9uIGJ1dCBJIGtub3cgb3RoZXJzIGhhdmUgdG8gYWdyZWUsIEhJSSBNeWVycyBpcyBvbmUgb2YgbXkgbGVhc3QgZmF2b3JpdGVzLiBEaWNrIHdhcmxvY2sgd2lkZSBoZWFkIHN0cmV0Y2hlcyBvdXQgdGhlIG1hc2sgc28gdGhhdCBpdCBsb29rcyBUaGUgY292ZXJhbGxzIGFyZSBjb21pY2FsbHkgc2hvcnQgdG8gbWUsIHlvdSBjYW4gc2VlIGxpa2UgMyBpbmNoZXMgb2YgaGlzIGFua2xlcy4gQW5kIGhlIG1vdmVzIHNvb29vbyByb2JvdGljIGFuZCBzbG93Li4gCkhlJ3MgcGVyZmVjdGx5IGFibGUgdG8gY3JpdGljaXplIGEgcmVsaWdpb3VzIGlkZWEsIGV2ZW4gaWYgaXQgaGFwcGVucyB0byBiZSBmcm9tIGEgcmVsaWdpb24gaGUgdGhpbmtzIGNvbnRhaW5zIG90aGVyIGlkZWFzIHRoYXQgYXJlIHNhbHZhZ2VhYmxlIGFzIGEgc2VjdWxhcmlzdCwgYW5kIHBlcmZlY3RseSB3aWxsaW5nIHRvIGZpbmQgdGhvc2UgdGhpbmdzIGluIGEgcmVsaWdpb24gaGUncyBzdXBwb3NlZGx5ICJwaG9iaWMiIGFnYWluc3QuIApFZGl0OiBTdXBlciBBcHByZWNpYXRlIHRoZSBnb2xkLCBJJ20gZ2xhZCBteSBwb2ludCBvZiB2aWV3IHJlc29uYXRlcyB3aXRoIGEgZmV3IG9mIHlvdSEgQnV0IHRyeSB0byBnaXZlIHdoYXQgeW91IGNhbiB0byBhIHByb2dyZXNzaXZlIGNoYXJpdHksIHRoZXkgY291bGQgZG8gbW9yZSB3aXRoIHlvdXIgJCQgdG8gaGVscCBwZW9wbGUgdGhhbiByZWRkaXQgZXZlciB3b3VsZCEKVW5saWtlIHNjaWVuY2UgZmljdGlvbiwgaW4gcmVhbGl0eSB0aGVyZSBhcmUgbm8gdmlkZW9zIG9yIHNjYW5uZXJzIHRoYXQgY2FuIHJlY29yZCB0aGUgaW1hZ2VzIHNlZW4gd2l0aGluIHRoZSBtaW5kLCBhbmQgc28gdGhlcmUgaXMgbm8gd2F5IHRvIGtub3cgd2hldGhlciB0d28gcGVvcGxlIGNhbiBkcmVhbSB0aGUgc2FtZSBkcmVhbS4gClZpc3VhbGx5LCBvdXIgQ29udHJpYnV0b3JzIGNvbnRpbnVlIHRvIGltcHJlc3MuIEdsb2JlIHRyb3R0aW5nIE1pbGxhIHNwb3RzIHdvbmRlcnMgYXJvdW5kIGV2ZXJ5IGNvcm5lciwgaXQgc2VlbXMsIGluIHNhY3JlZCBlZGlmaWNlcyBhbmQgTWVkaXRlcnJhbmVhbiBiYXphYXJzLiAKVGhlIHBlb3BsZSB3aG8gYmVsaWV2ZSB0aGVzZSB0aGluZ3MgYXJlIG5vdCBmb3JldmVyIG1hcmtlZCwgY29ycnVwdGVkLCBpcnJlcGFyYWJsZSBwZW9wbGU7IHRoZXkgY2FuIGNoYW5nZSB0aGVpciBtaW5kcy4gVGhleSBqdXN0IGhhdmUgYSB2ZXJ5IGhhcm1mdWwgdGFrZSB0aGF0IHdlIGRvbiB3YW50IHRvIHNlZSBvbiB0aGlzIHN1YnJlZGRpdC4gCllvdSBtaWdodCBleHBlY3QgYSB1bml0ZWQgZnJvbnQgaW4gcHVibGljIGJldHdlZW4gaGVhZCBjb2FjaCBhbmQgc3BvcnRpbmcgZGlyZWN0b3IsIGJ1dCB0aGVyZSBpcyBhIGdlbnVpbmUgc3ltbWV0cnkgaW4gdGhlIG1hbm5lciB0aGV5IGhhdmUgYWRkcmVzc2VkIHF1ZXN0aW9ucyBvbiBwb3RlbnRpYWwgb3V0cyBhbmQgaW5zIGR1cmluZyByZWNlbnQgZGF5cy4KVHdvIG9mIExld2lzJyBwcmV2aW91cyBib29rcywgIk1vbmV5YmFsbCIgYW5kICJUaGUgQmxpbmQgU2lkZSwiIHR1cm5lZCBpbnRvIGFjY2xhaW1lZCwgT3NjYXIgbm9taW5hdGVkIGZpbG1zLi4gClRoZSBDYWxpZm9ybmlhbnMgaGF2ZSBhbHdheXMgd29ya2VkIHRoaXMgbWFya2V0IGhhcmQsIGFsdGhvdWdoIHNlbGRvbSBhcyBoYXJkIGFzIHRoaXMgeWVhci4gVGhlIHN0cm9uZyBBbWVyaWNhbiBkb2xsYXIgaGFzIGZvcmNlZCBBbWVyaWNhbiB3aW5lIHByaWNlcyB1cC4gVGhlIHVucG9wdWxhcml0eSBvZiB0aGUgVHJ1bXAgYWRtaW5pc3RyYXRpb24gaGFzIGJlZ3VuIHRvIHR1cm4gb2ZmIENhbmFkaWFuIGNvbnN1bWVycy4gCkNocmlzdG9waGVyIFByYXR0IGlzIFByZXNpZGVudCBvZiBDYW5keSBXYXJlaG91c2UsIHRoZSBsZWFkaW5nIG9ubGluZSBqZWxseSBiZWFucyBzdG9yZSBmb3IgYnVsayBjYW5keSBkaXNjb3VudHMgYW5kIHNwZWNpYWx0eSBjYW5keSBmb3Igc3BlY2lmaWMgb2NjYXNpb25zLiAKVGhlIGZhY3QgdGhhdCBoZSBtb3ZlZCBtZSBhbGwgaW4gc28gcXVpY2tseSBvbiB0aGUgcml2ZXIgdG9sZCBtZSBoZSB3YXMgc3Ryb25nLiBBbmQgaXQncyByYXJlIHRvIHNlZSBhIHBsYXllciBtYWtlIGEgYmlnIGJsdWZmIGFnYWluc3QgYW4gb3Bwb25lbnQgcGxheWluZyBvbiBhIHNob3J0IHN0YWNrLiBXZWxsLCBJIGZpbmFsbHkgZm9sZGVkIHRoaXMgY29uZnVzaW5nIGhhbmQsIGFuZCBJIG5ldmVyIGV2ZW4gYXNrZWQgRmVsZG1hbiB3aGV0aGVyIGhlIGhhZCBtZSBiZWF0IG9yIG5vdC4gCihQcml2YWN5IFBvbGljeSlIdWJQYWdlcyBUcmFmZmljIFBpeGVsVGhpcyBpcyB1c2VkIHRvIGNvbGxlY3QgZGF0YSBvbiB0cmFmZmljIHRvIGFydGljbGVzIGFuZCBvdGhlciBwYWdlcyBvbiBvdXIgc2l0ZS4gCkhhdmluZyA1IG1pbGxpb24gdG9uIHdhcnNoaXBzIGZsb2F0aW5nIGluIGF0bW9zcGhlcmUgYmVmb3JlIHdhcnBpbmcgMTAuMDAwIGxpZ2h0eWVhcnMgYXdheSBpbiBhIG1hdHRlciBvZiBob3VycyBpcyBhbHNvIG5vdCB5ZXQgZmVhc2libGUgdG8gdXMuIFdlIHJlYWxseSBoYXZlIG5vIGlkZWEgYWJvdXQgdGhlIGxpbWl0YXRpb25zIG9mIFN0YXIgV2FycyBzY2llbmNlLiBIYXZlIHlvdSBzZWVuIHByb3N0aGV0aWNzIG1vdmU/IFZhZGVyIGlzIHN0aWxsIGEgZmFpciBiaXQgbW9yZSBhZ2lsZSB0aGFuIHRoYXQsIGJ1dCBwZXJoYXBzIHRoYXQgYXMgZ29vZCBhcyBpdCBnZXRzLCB3aGlsZSB0aGVyZSBtaWdodCBiZSBubyBsaW1pdCBvbiBkaXJlY3QgYnJhaW4gaW50ZWdyYXRpb24uIApBbm4gSHVpIHNoYXJlcyB0aGUgc3RvcmllcyBvZiBzbWFsbCB0b3duIENoaW5lc2UgcmVzdGF1cmF0ZXVycyBmcm9tIGNvYXN0IHRvIGNvYXN0IGluIENob3AgU3VleSBOYXRpb25JZiB0aGVyZSdzIGEgc2luZ2xlIGRpbmluZyBleHBlcmllbmNlIHlvdSBjYW4gY291bnQgb24gaW4gc21hbGwgdG93biBDYW5hZGEsIGl0J3MgZm91bmQgYXQgdGhlIGxvY2FsIENoaW5lc2UgcmVzdGF1cmFudC4gKHBvcC4gMTMsMTU3KSwgdGhlIEdvdXJtZXQgQ2FudG9uIHByb3ZpZGVkIHBpcGluZyBob3Qgd29udG9uIHNvdXAsIHN0aWNreSBzd2VldCBhbmQgc291ciBwb3JrLCBhbmQgY2hvdyBtZWluIGxvYWRlZCB3aXRoIGNyaXNwIHdhdGVyIGNoZXN0bnV0cyBmb3IgZmFtaWx5IGdldCB0b2dldGhlcnMgYW5kIHRha2VvdXQgbmlnaHRzLgpBdSBzdWpldCBkZSBsYSBiZXJjZSBkdSBDYXVjYXNlOiBzaSBsYSBiZXJjZSBjb21tdW5lIGVzdCBkaXRlIGdyYW5kZSAoWEwpLCBsYSBiZXJjZSBkdSBDYXVjYXNlIGEgdG91dCBsIGQgZ2FudGUgKFhYTCkuIE5vdXMgYXZvbnMgZGogdm9xdSBzYSBoYXV0ZSB0YWlsbGUsIG1haXMgbiByaWVuIGRpdCBkZSBzZXMgYXV0cmVzIGRpbWVuc2lvbnM6IGRlcyB0aWdlcyBwaXF1ZXRlcyBkZSByb3VnZSBxdWksIGJpZW4gcXVlIGNyZXVzZXMsIG1lc3VyZW50IGRhbnMgbGUgcGx1cyBncmFuZCBkZXMgY2FzIHBhcyBsb2luIGRlIDEwIGNtICBsYSBiYXNlLiBRdWFudCAgc2VzIGZldWlsbGVzLCBwdGlvbGUgY29tcHJpcywgZWxsZXMgZnJsZW50IGFzc2V6IHNvdXZlbnQgbGVzIDE1MCBjbSBkZSBsb25ndWV1ciBzdXIgIHBldSBwcnMgNjAgIDgwIGNtIGRlIGxhcmdldXIsIHN1cm1vbnRlcywgbG9ycyBkZSBsYSBmbG9yYWlzb24sIHBhciBkZXMgb21iZWxsZXMgZG9udCBsZSBnaWdhbnRpc21lIG4gcGFzIG1vaW5kcmU6IDgwIGNtIG1heGltdW0gcG91ciBsYSBwcmluY2lwYWxlLCBsYSBtb2l0aSBtb2lucyBwb3VyIGxlcyBzZWNvbmRhaXJlcywgY2UgcXVpLCBhdSB0b3RhbCwgcGV1dCBmb3JtZXIgZGVzIGluZmxvcmVzY2VuY2VzIGF1c3NpIHZhc3RlcyBxdSB0cnMgZ3JhbmRlIGZldWlsbGUgZW50aXJlLgpUaGVNb2Rlcm5NYWdlICAxIHBvaW50ICBzdWJtaXR0ZWQgMTUgZGF5cyBhZ28KSGUgd2FzIGEgZ29hbGllIGZvciB0aGUgUGVsaGFtIFBhbnRoZXJzIGluIGhpcyBwcmltZSBhbmQgYSAxIExlYWZzIGFuZCBKYXlzIGZhbi4gCkFuZCBubywgZWNvbm9taWMgaW5lcXVhbGl0eSBpcyBub3QgdGhlIHJvb3Qgb2YgcmFjaWFsIGluanVzdGljZSB3aGVuIHN0dWRpZXMgaGF2ZSBzaG93biB3aGl0ZSBhbmQgYmxhY2sgcGVvcGxlIGF0IHNpbWlsYXIgaW5jb21lIGxldmVscyBzdGlsbCBoYXZlIGRpZmZlcmluZyBleHBlcmllbmNlcyBpbiB0aGUgY3JpbWluYWwganVzdGljZSBzeXN0ZW0gYW5kIHdpdGggYWNxdWlyaW5nIG1vcmUgd2VhbHRoLiAKUmVhZCBvbiBmb3IgdGhlIGxpc3RpbmdzLiAoTm90ZTogcHJpY2VzIGFuZCBhdmFpbGFiaWxpdHkgYXJlIHN1YmplY3QgdG8gY2hhbmdlLikKU293ZWl0IGF1ZiB1bnNlcmVuIFNlaXRlbiBwZXJzb25lbmJlem9nZW5lIERhdGVuIChiZWlzcGllbHN3ZWlzZSBOYW1lLCBBbnNjaHJpZnQgb2RlciBFIE1haWwgQWRyZXNzZSkgZXJob2JlbiB3ZXJkZW4sIGVyZm9sZ3QgZGllcyAgIHNvd2VpdCBlcyBtZ2xpY2ggaXN0ICBpbW1lciBhdWYgZnJlaXdpbGxpZ2VyIEJhc2lzLiAKQm90YW5pcXVlIHJlc3RhdXJhbnQKU29tZXRpbWVzIHJlY2lwZXMgd29yayBhbmQgc29tZXRpbWVzIHRoZXkgZG9uJ3QuIApUaGUgZmlyc3QgdGltZSBJIHBsYXllZCwgdGhlIGxvdHRlcnkgb3V0bGV0IHNhaWQgdGhleSBkaWQgbm90IGhhdmUgdGhlIGFwcHJvcHJpYXRlIHNjcmVlbnMgdG8gZGlzcGxheSB0aGUgY2FyZHMuIFNvLCB0aGV5IGNvdWxkIG5vdCBzZWxsIG1lIHRoZSB0aWNrZXRzLgpEbyB5b3UgdGlwIHlvdXIgbWFzc2FnZSB0aGVyYXBpc3QKSGUgd2FzIGluZGVlZCBpbiBHcnVwcGUgV2VzdGVuIChHcm91cCBXZXN0KSB3aXRoIHRoZSBSZWdpbWVudHMgd2hpY2gganVtcGVkIGluIHRoZSBmaXJzdCB3YXZlLiBXaGlsZSBoZSBieSBkZWZpbml0aW9uIHdhcyB0aGVyZSBhbHJlYWR5IHRoZSB2aWxsYWluLCBoZSBuZXZlcnRoZWxlc3MgZm91Z2h0IGJyYXZlbHkgQnJpdGlzaCB0YW5rcyB3aXRoIGxpZ2h0IHdlYXBvbnMgdW50aWwgcmVpbmZvcmNlbWVudHMgY2FtZSBpbi4gClRoZXkgaW5jcmVkaWJseSBwb3dlcmZ1bCBhbmQgaGF2ZSBhIGxvdCBvZiBkaWZmZXJlbnQgc2V0dXBzLiBSaWdodCBhdCB0aGUgc3RhcnQgeW91IGNhbiBraWxsIHRoZSBlbmVteSBob3JzZSB3aXRoIHlvdXIgY2Fubm9uLCBidXQgdGhpcyBpcyBhIHRlcnJpYmxlIG1vdmUgc2luY2UgdGhlIGNhbm5vbiBtb3JlIHZhbHVhYmxlIGVhcmx5IG9uIChtb3JlIHBpZWNlcyB0byBzZXR1cCB3aXRoKSwgYW5kIHRoZSBob3JzZSBpcyByaWdodCBuZXh0IHRvIHRoZSByb29rLCB3aGljaCBlc3NlbnRpYWxseSBnaXZlcyB5b3VyIG9wcG9uZW50IGEgZnJlZSBzZXR1cCBmb3IgdGhlaXIgcm9vay4uIApGb3JtZXIgQWlyZHJpZSByZXNpZGVudCBhbmQgY291bnRyeSBzaW5nZXIgSmVzc2ljYSBSaWRsZXkga25vd3MgdGhlIG11c2ljIGJ1c2luZXNzIGlzbiBhbiBlYXN5IG9uZSB0byBtYWtlIGEgbWFyayBpbi4KQ2FybWluZSBoYWQgdGFrZW4gb3ZlciB0aGUgbGVhc2Ugb24gdGhlIGZpcnN0IGZsb29yIG9mIGEgYnVpbGRpbmcgYXQgMTY3IE11bGJlcnJ5IFN0cmVldCwgYWxvbmcgd2l0aCBNaWNoYWVsIE1pa2V5IEV2YW5zIEVycmljaGllbGxvLCBoaXMgYmVzdCBmcmllbmQuIApJIHdvcmtlZCBvbiBhIGhvdXNlIHNob3cgKHdoZXJlIHRoZSBhY3RvcnMgbGl2ZSB0b2dldGhlciBmb3IgYW4gYWxsb3R0ZWQgdGltZSBhbmQgYXJlbiBhbGxvd2VkIHRvIGxlYXZlKSBhbmQgdGhhdCB3YXMgbXVjaCBtb3JlIG9uIHRoZSByZWFsaXR5IGVuZCAgIGFzIGNsb3NlIGFzIHlvdSBjYW4gYmUgd2hpbGUgbWFraW5nIGFueXRoaW5nIGZvciBlbnRlcnRhaW5tZW50LiBGaWxtaW5nIDI0LzcsIGhpZGRlbiBjYW1lcmFzIGV2ZXJ5d2hlcmUuIApUaGF0IGJlbHQgd2FzIHN0b2xlbiBhbmQgdGhlIGlzc3VlIG5lZWRzIHRvIGJlIHJlc29sdmVkLiBNYWpvcml0eSBvZiBGYW5zIGRvbid0IHdhbnQgdGhhdCByZW1hdGNoIGJ1dCB0aGVyZSBpcyBzdGlsbCBhIHJlbGF0aXZlbHkgYmlnIGRlbWFuZCBmb3IgaXQuIFdobyBzaG91bGQgUGFjcXVpYW8gdGFyZ2V0Py4gCkhvdyBiaWcgaXMgdGhhdD8gUHJldHR5IGRhbW4gYmlnLiBJdCBhIGN1YmUgYWJvdXQgLjggb2YgYSBtaWxlIG9yIDEuNCBrbSBvbiBlYWNoIHNpZGUuIEl0IHdvdWxkIGZvcm0gYSBjcnlzdGFsIGJhc2ljYWxseSBleGFjdGx5IHRoZSBzYW1lIHNpemUgb2YgTW91bnQgRXZlcmVzdC4gCiJKZSB2b3VsYWlzIHV0aWxpc2VyIGF1IG1heGltdW0gc2VzIGNhcGFjaXRzICBkZXNzaW5lciBkZXMgbWFpc29ucyBoYW50ZXMsIGRlcyBjb3Vsb2lycyBnb3RoaXF1ZXMsIGV0Yy4gCkEgbWV0YWwgZnJhbWUgYXR0YWNoZWQgdG8gdGhlIGJhY2sgc2VjdGlvbiBvZiB0aGUgcGVkZXN0YWwuIApPY3QuIDg6IEZhY2Vib29rJ3MgaWxsIHRpbWVkIFBvcnRhbCBpcyByZWxlYXNlZC4gVGhlIGhvbWUgdmlkZW8gbWVzc2FnaW5nIGRldmljZSBjb3VsZCBsZWFkIHRvIHByaXZhY3kgY29uY2VybnMgYXQgYSB0aW1lIHdoZW4gRmFjZWJvb2sgZG9lc24ndCBuZWVkIHRoZSBxdWVzdGlvbnMuCkNvZGVwaW5nICAwIHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnbwpJdCBub3Qgc28gZGlmZmVyZW50IGZvciBidWlsZGluZyBoaWdoZXIgdGVjaCBzdHVmZiwgeW91IGNhbiBidWlsZCBjdXN0b20gc3R1ZmYgb24gYSB2ZXJ5IGhpZ2ggcXVhbGl0eSBsZXZlbCB3aXRoIGp1c3QgYSBmZXcgcGVvcGxlLCBub3QgZWFjaCBjb21wb25lbnQgd2lsbCBiZSBoYW5kY3JhZnRlZCBpZiB3ZSB0YWxraW5ncyBlbGVjdHJvbmljcywgb2YgY291cnNlLCBidXQgZGVzaWduaW5nIGFuZCBvcHRpbWl6aW5nIHRoZSBjaXJjdWl0cywgaGFyZGVuaW5nIHRoZW0gZm9yIGhpZ2ggcGh5c2ljYWwgc3RyZXNzIG9yIGhpZ2ggZGFuZ2VyIGVudmlyb25tZW50cyBhbmQgdGhlbiBvZmZlcmluZyBnb29kIHNlcnZpY2Ugd2lsbCBoYXZlIGl0cyBwcmljZSBmb3IgdGhlIGJ1eWVyLiBUaGV5IG5lZWQvd2FudCBsb25nIHRlcm0gcmVsYXRpb25zaGlwcyB3aXRoIHRoZWlyIGN1c3RvbWVycy4gU28gaXQgbm90IG5lY2Vzc2FyaWx5IGFsbCBhcm91bmQgdGhlIHdvcmxkIChldmVuIHRob3VnaCB0aGF0IGFsc28gcG9zaWJsZSBhbmQgbm90IHVudXN1YWwpIHRoZXkgb3BlcmF0ZSwgYnV0IG1heWJlIHRoZXkgc3VwcGx5IGEgY291cGxlIGJ1c2luZXNzZXMgaW4gdGhlaXIgYXJlYSwgd2l0aCBhbG1vc3QgbmV4dCBkb29yIHNlcnZpY2UgYW5kIGxpbWl0IHRoZWlyIGN1c3RvbWVycyB0byBhIG51bWJlciB0aGV5IGNhbiBoYW5kbGUgaWYgZXhwYW5zaW9uIGRvZXNuIG1ha2Ugc2Vuc2UuIElmIGEgbWFzcyBtYW51ZmFjdHVyaW5nIGNvbXBhbnkgY2FuIGdldCBhIHNlcnZpY2UgZ3V5L3JlcGxhY2VtZW50IHBhcnQgd2l0aGluIGFuIGhvdXIgZm9yIGEgY3VzdG9tIGNvbXBvbmVudCBhbmQgbWF4aW1pemUgdGhlaXIgdXB0aW1lLCB0aGF0IGNhbiBiZSB3b3J0aCBhIGxvdC4gVGhlIGNvbXBvbmVudCBtaWdodCBiZSAzIHRpbWVzIHRoZSBwcmljZSBvZiBiaWdnZXIgcGxheWVycywgYnV0IGxvc2luZyAxMCAyMGsgRXVybyBhbiBob3VyIGlmIHRoZWlyIHByb2R1Y3Rpb24gc3RhbmRzIHN0aWxsIGVhc2lseSBvdXR3ZWlnaHMgdGhhdC4KT2theSwgb2theSwgd2UgY2Fubm90IGV4cGVjdCBhbnlvbmUgdG8gcHJlZGljdCB0aGUgZnV0dXJlLCBidXQgaGUgbWFkZSB0aGVzZSBzdGF0ZW1lbnRzIGZhaXJseSBsYXRlIGluIHRoZSBnYW1lLCB3aGVuIG1hbnkgZWNvbm9taXN0cyB3ZXJlIGFscmVhZHkgdGFsa2luZyBhYm91dCB0aGUgaG91c2luZyBidWJibGUgYW5kIHRoZSBzdWJwcmltZSBtb3J0Z2FnZXMgYXMgY3JlYXRpbmcgYSBjcmlzaXMuIApUaGlzIGlzIGFib3V0IGEgeW91bmcgZ2lybCBpbiBhIGZ1dHVyaXN0aWMgZW1waXJlIHdobyBsZWF2ZXMgaG9tZSB0byBzZWFyY2ggZm9yIGhlciBicm90aGVyLCBhIHlvdW5nIHJlY3J1aXQgZm9yIHRoZSBmbGVldCB3aG8gaGFzIGdvbmUgYSB3YWxsLiAKUGVvcGxlIGFyZSBzbyBtYWQgdGhhdCBDT0RFIHN0dWRlbnRzIGFjdHVhbGx5IGVuam95IGFuZCBiZWxpZXZlIGluIHRoZWlyIHVuaXZlcnNpdHkuIEkgbWVhbiwgaG93IGRhcmUgdGhleSwgaGF2ZW4gdGhleSBoZWFyZCBzY2hvb2wgaXMgc3VwcG9zZWQgdG8gc3Vjaz8/LiAKU2l0dWF0aW9uIDIgKE5vIExpbWl0IEhvbGQnZW07IExpbWl0IEhvbGQnZW0pIDogMiBwbGF5ZXJzIGhvbGQgQWMgYW5kIEtkIEtzIGFuZCBKYyBUaGUgYm9hcmQgc2hvd3MgOGggOWggMmggQWggS2guICg1IGhlYXJ0cyBvbiB0aGUgYm9hcmQpLiBMaWtlIHlvdSBjYW4gc2VlIGhlcmUsIHRoZXJlIGFyZSA1IGhlYXJ0cyBvbiB0aGUgYm9hcmQuIE5vbmUgb2YgdGhlIG90aGVyIHBsYXllcnMgaGFzIGEgaGVhcnQsIHRoZXJlZm9yZSBtYWtpbmcgdGhlIGNhcmRzIG9uIHRoZSBib2FyZCB0aGUgaGlnaGVzdCBwb3NzaWJsZSA1IGNhcmQgY29tYmluYXRpb24uIApJIGRvbid0IGRpc2FncmVlIHRoYXQgaGUgZG9lcyBzZW5kIG91dCBwcm8gQnJleGl0IHByb3BhZ2FuZGEuIEFuZCBpdCdzIGhhcmRseSBzdWJ0bGUsIGxhc3QgdGltZSBJIHdhcyBpbiBhIHNwb29ucyB0aGVyZSB3ZXJlIEEzIHNpemUgYm9hcmRzIGFyb3VuZCB0aGUgYmFyIGNvdmVyZWQgaW4gaXQuIEFuZCB5b3UndmUganVzdCBhZ3JlZWQgd2l0aCBtZSB0aGF0IGl0J3Mgbm90IGFmZmVjdGluZyBoaXMgYnVzaW5lc3MsIHNvIEknbSBub3QgZW50aXJlbHkgc3VyZSB3aGF0IHBvaW50IHlvdSdyZSB0cnlpbmcgdG8gbWFrZS4uIApHb3Zlcm5tZW50cyBhbmQgb3JnYW5pemF0aW9ucyByZWx5IG9uIHNlY3VyaXR5LCBpbnRlZ3JhdGlvbiwgdHJhbnNmb3JtYXRpb24gYW5kIG1hbnkgSVQgc2VydmljZXMgdG8ga2VlcCBhbGwgb2YgdGhlaXIgb24gcHJlbWlzZSBhbmQgY2xvdWQgdGVjaG5vbG9naWVzIHJ1bm5pbmcgc21vb3RobHksIHNheXMgU2VuZiwgd2hvIHdhcyBwcmV2aW91c2x5IHZpY2UgcHJlc2lkZW50IGF0IHJlc2VhcmNoIGZpcm0gSURDIENhbmFkYS4gJDI1IGJpbGxpb24gcGVyIHllYXIgaXMgc3BlbnQgaW4gSVQgc2VydmljZXMgaW4gQ2FuYWRhLiAKQW5kIHdoYXQgaXMgYmV0YSBhbXlsb2lkLCBhbnl3YXk/CldoYXQgaXMgdGhlIGFjZSBvZiBwbGF5aW5nIGNhcmRzCldpZW4gYmV3aXJidCBzaWNoIGZyIGRhcyBncnRlIFNwb3J0ZXZlbnQgYWxsZXIgWmVpdGVuLiAKUGFzc3QgYmVpIGRpZXNlciBWYXJpYW50ZSBiZXNvbmRlcnMgYXVmLCBkYXNzIG5pZW1hbmQgenUgZWlmZXJzY2h0aWcgb2RlciBiZXNpdHplcmdyZWlmZW5kIHdpcmQuIEVzIGthbm4gaW4gZWluZXIgR3J1cHBlIHZvbiBGcmV1bmRlbiB2aWVsIFNwYSBtYWNoZW4gaGVyYXVzenVmaW5kZW4gd2VyIGdlcm5lIGJlaSB3ZW0gZWluIGJpc3NjaGVuIG1laHIgSGF1dCBzZWhlbiB3aWxsLCBhYmVyIG5pY2h0LCB3ZW5uIGRpZSBBbnR3b3J0IGplbWFuZGVuIHNhdWVyIG1hY2h0LgpDaG9vc2UgYSBwb3NpdGl2ZSBzdGF0ZW1lbnQgdGhhdCBleHByZXNzZXMgYSBkZXNpcmUuIApTdHJldGNoIGl0IG91dC4gVG8gaGVscCBzb290aGUgYWNoaW5nIG11c2NsZXMsIHN0cmV0Y2ggaXQgb3V0LiBJdCdzIGFsc28gaW1wb3J0YW50IHRoYXQgeW91IHN0cmV0Y2ggcHJvcGVybHkgYWZ0ZXIgeW91IGhhdmUgd2FybWVkIHVwIHlvdXIgbXVzY2xlcyBhdCB0aGUgc3RhcnQgb2YgYW4gZXhlcmNpc2UgcHJvZ3JhbS4gV2hlbiB5b3UgYXJlIGRvbmUgd29ya2luZyBvdXQsIGdpdmUgeW91ciBtdXNjbGVzIGEgZ29vZCBzdHJldGNoLiBUaGlzIHdpbGwgaGVscCBrZWVwIHlvdXIgbXVzY2xlcyBsb29zZSBhbmQgbGltYmVyIGFuZCBoZWxwIHByZXZlbnQgZnVydGhlciBpbmp1cmllcy4KRGllIEdhcm5lbGVuIHVuZCBkaWUgQmx1dHd1cnN0IHN0ZWNrZW4gZ3V0IHZlcmJ1bmRlbiBpbiBkZW4ga251c3ByaWdlbiBUZWlndHNjaGNoZW4sIGxpZWVuIHNpY2ggZ3V0IGFiYmVpZW4gdW5kIHdhcmVuIHVtd2VyZmVuZCBndXQuIERhcyBMYW1tIHdhciBzY2huIHJvc2EgaW5uZW4gdW5kIHNhZnRpZywgc2VociB6YXJ0IHVuZCB2b24gZGVyIFBvcnRpb24gaGVyIG9yZGVudGxpY2ggd2lya2xpY2ggZWluIEdlbnVzcywgc2VociBnZWx1bmdlbi4gCjI3LCBTdWl0ZSA2LiAKTm8gc2luZ2xlIHByb3N0YXRlIHRyZWF0bWVudCBpcyBiZXN0IGZvciBldmVyeW9uZS4gTXVjaCBkZXBlbmRzIG9uIHRoZSBzeW1wdG9tcyBhbmQgaW5kaXZpZHVhbCBwcmVmZXJlbmNlcy4gCk5vIHdvcnJpZXMsIEkgYmUgYSBwZXN0IGJlZm9yZSBkaXNoaW5nIG91dCAkMTAwL21vbnRoIHRvby4gVEJIIEkgZGlkbiBrbm93IHdoYXQgSSB3YXMgZXhwZWN0aW5nLiBJIGp1c3Qga25ldyB0aGUgYW1vdW50IG9mIGNvbnRlbnQgdGhhdCBSSU8gaGFkIGFuZCB0aGUgcXVhbGl0eSBvZiB0aGUgcHJvcy4gCkl0IHdvdWxkIHJlcXVpcmUgc29tZSBjdXN0b20gd29yayB0byB0aGUgc3RlbSBhbmQgc29tZSBjaGFuZ2VzIHRvIHRoZSBkYXRlIHdoZWVsLiBJIGhhZCBhbHdheXMgd2lzaGVkIG15IFNLWCBjb3VsZCBoYWNrIGFuZCBoYW5kIHdpbmQgc28gSSB3YXMgYWxsIGZvciB0aGUgbW92ZW1lbnQgc3dhcCByYXRoZXIgdGhhbiBzZXJ2aWNpbmcgdGhlIDdTMjYuIEkgbGVmdCBteSB3YXRjaCB3aXRoIGhpbSBmb3IgYSBmZXcgd2Vla3MgYW5kIGp1c3QgcGlja2VkIGl0IHVwIGEgZmV3IGRheXMgYWdvLiAKSSBncmV3IHVwIGluIGEgc3RyaWN0IGhvbWUuIE15IChzdGVwKSBkYWQgY2FtZSBpbnRvIHRoZSBwaWN0dXJlIHdoZW4gSSB3YXMgYWJvdXQgNSBhbmQgaGUgc3RhcnRlZCBieSB0aHJvd2luZyBvdXQgYWxsIG15IG1vdmllcyBiYyB0aGV5IHdlcmUgZWl0aGVyIERpc25leSBvciBkaW5vc2F1ciByZWxhdGVkLCB3aGljaCBoZSBkaWRuIGFwcHJvdmUgb2YuIApTaGUgd2FzIGF0IGhpcyBzaWRlIHdoZW4gaGUgaGFkIHRyZWF0bWVudCBpbiBTd2l0emVybGFuZCwgTmV3IFlvcmsgYW5kLCBmaW5hbGx5LCBMb3MgQW5nZWxlcywgd2hlcmUgaGUgZGllZCBpbiAyMDAxLiAKSSBjbGljayB0aGUgaWNvbiBvbiBteSBkZXNrdG9wLCBJIGRvbiBrbm93IHdoYXQgdGhhdCBoYXMgdG8gZG8gd2l0aCBhIFZQTi4gCkkgY2FuIHNlZSBwb2tlciB0aGF0IHdheSAoYmVzaWRlcywgYXQgTkwyIHRoZXJlIG5vdCBtdWNoIHRoaW5raW5nIHlvdSBuZWVkIHRvIGRvLCBlc3BlY2lhbGx5IHdpdGggYSBIVUQuIApXb3JraW5nIGNsYXNzIG1lbiB3ZXJlIG1hbmx5LCBvZiBjb3Vyc2UsIGJ1dCB3aXRoIGRlZ2VuZXJhdGUgbWluZHMgYW5kIHF1ZXN0aW9uYWJsZSBwaHlzaWNhbCBmaXRuZXNzLiAKTGlmZSBpc24gYSBSb2JpbiBXaWxsaWFtcyBtb3ZpZS4gVGVhY2hlcnMgaGF2ZSAyMCwgMzAsIDQwICsgc3R1ZGVudHMgdG8gdGVhY2guIApUaGV5IGxvb2sgZmFuY2llciBidXQgSSBiZWxpZXZlIHRoZXkgZG8gdGhlIGV4YWN0IHNhbWUgdGhpbmcsIGFuZCB0aGV5IG11c3QgYmUgbWFraW5nIGEgbWFzc2l2ZSBhbW91bnQgb2YgbW9uZXkgb24gdGhlc2UgcGFuZWxzIHdoaWNoIG9ubHkgaGF2ZSBhIHR3byB5ZWFyIHdhcnJhbnR5IG9uIHRoZW0uIEEgZ29vZCBJbmNhbmRlc2NlbnQgbGlnaHQgaXMgcmVhbGx5IHRoZSB3YXkgdG8gZ28sIHRoZSBidWxicyBjYW4gZWFzaWx5IGJlIHJlcGxhY2VkIGZvciBhIGZldyBkb2xsYXJzIGFuZCBzb21lIG1hbnVmYWN0dXJlcnMgb2ZmZXIgYSBsaWZldGltZSB3YXJyYW50eSBvbiB0aGUgYmFzZXMsIGVsZWN0cm9uaWMgcG9ydGlvbiBvZiB0aGUgbGlnaHRzLCBldGMuLiAKT2YgY291cnNlIGl0IGFsbCBzb3VuZHMgc28gc2ltcGxlLCBJIHdpc2ggaXQgd2VyZSBzbyBzaW1wbGUuIEkgdGhpbmsgaXQgYWxzbyBkZXBlbmRzIG9uIHdoYXQgeW91IG1lYW4gYnkgImZpZ3VyaW5nIHlvdXJzZWxmIG91dC4iIEFzIGh1bWFucyB3ZSBhcmUgY29uc3RhbnRseSBjaGFuZ2luZyBhbmQgZXZvbHZpbmcsIHNvIHRoZSAiZmlndXJpbmcgb3V0IiBhc3BlY3Qgb2Ygb3VyIGxpdmVzIGlzIGxpa2VseSBhbHdheXMgdG8gY29udGludWUuIEkgZG9uIHRoaW5rIHRoYXQgeW91IHNob3VsZCBiZWF0IHlvdXJzZWxmIHVwIGlmIHlvdSBjYW4gZmlndXJlIGl0IG91dCwgZXZlcnl0aGluZyB0YWtlcyB0aW1lIGFuZCBhcyBJIHNhaWQgYmVmb3JlLCBJIHRoaW5rIGl0IGEgY29uc3RhbnQgcHJvY2Vzcy4gCjAgNjAgaW4gYWJvdXQgNi4yIHNlY29uZHMsIHRvcCBzcGVlZCAxNjBtcGguIApZb3VyZSBkb2luZyBleGFjdGx5IHdoYXQgdHJ1bXAgZG9lcyAgIFlvdXJlIGFjY3VzaW5nIG90aGVyIHBlb3BsZSBvZiBjb21taXR0aW5nIHRoZSB2ZXJ5IHNpbiB5b3VyZSBjdXJyZW50bHkgY29tbWl0dGluZyBpbiBwbGFpbiBzaWdodC4gClNvIHdpcmQgZXMgd29obCBiYWxkIGF1Y2ggaW4gZGVyIENoaXJvcHJha3RpayBlaW4gWndlaWtsYXNzZW4gU3lzdGVtIGdlYmVuLiAKV2UgbmVlZCBhbGwgb3VyIGNpdGl6ZW5zIHRvIHdyaXRlIHRoZWlyIGNvbmdyZXNzIHBlb3BsZS4gClRocm93aW5nIHlvdXIgYnVzaW5lc3MgcGFydG5lcnMgdW5kZXIgdGhlIGJ1cyBpcyBtb3JlIHVuZXRoaWNhbCB0aGFuIG1vc3QgbGF3cyBvbiB0aGUgYm9va3MsZnJhbmtseS4uIApUaGUgZmFtZWQgdG91cm5hbWVudCBtYXJrZWQgdGhlIGVuZCBvZiB0aGlzIHllYXIgc2VyaWVzLCBpbiB3aGljaCBkb3plbnMgb2YgdG91cm5hbWVudHMgZHJldyAxMjAsOTk1IGVudHJhbnRzIGZyb20gYXJvdW5kIHRoZSB3b3JsZCwgc2hhdHRlcmluZyBhdHRlbmRhbmNlIHJlY29yZHMuIApCdXQgdGhlcmUgYXJlIGF0IGxlYXN0IHR3byBvdGhlciBhZHZhbnRhZ2VzIFJSU1BzIGhhdmU6IGRlc3BpdGUgaXRzIG5hbWUgdGhleSBub3QganVzdCBmb3IgcmV0aXJlbWVudDogdGhleSBjYW4gYWxzbyBoZWxwIHlvdSBnbyBvbiB0byBoaWdoZXIgZWR1Y2F0aW9uIG9yIHNhdmUgdXAgYSBkb3duIHBheW1lbnQgZm9yIGEgZmlyc3QgaG9tZTogeW91IGNhbiB3aXRoZHJhdyB1cCB0byAkMjAsMDAwIGZvciB0aGUgTGlmZWxvbmcgTGVhcm5pbmcgUGxhbiwgYW5kIHVwIHRvICQyNSwwMDAgZm9yIHRoZSBIb21lIEJ1eWVyIFBsYW4gKCQ1MCwwMDAgZm9yIGNvdXBsZXMpLiBZb3UgZG8gaG93ZXZlciBoYXZlIHRvIHJlcGF5IGF0IHNvbWUgcG9pbnQuIApGb3VyIG9mIGEga2luZCBpcyBvbmUgb2YgdGhlIGVhc2llc3Qgb25lcyB0byBzcG90LiAKQnV0IGluIHRoZSB3YWtlIG9mIG5lZ2F0aXZlIHB1YmxpY2l0eSBmb2xsb3dpbmcgYSBTdW5kYXkgQWdlaW52ZXN0aWdhdGlvbiBpbnRvIGl0cyBhY3Rpdml0aWVzLCB0aGUgZm91bmRhdGlvbiBkcm9wcGVkIGl0cyBzZWNyZWN5IGJpZCBsYXN0IHdlZWsuClllYWguIApCaWcgQnJvdGhlciBDYW5hZGEgbW9zdCBleHBsb3NpdmUgc2Vhc29uIGNhbWUgdG8gYW4gZW5kIHRoaXMgd2VlayB3aXRoIGEgdG9ycmVudCBvZiBlbW90aW9ucyBhbmQgY29uZmV0dGkuIEFsdGhvdWdoIHRoZSBncmFuZCBwcml6ZSBvZiAkMTAwLDAwMCwgYSBjYXIgYW5kIGEgaG9tZSBmdXJuaXNoaW5nIG1ha2VvdmVyIGhhZCBiZWVuIHNpbWlsYXIgaW4gcGFzdCB5ZWFycywgdGhlcmUgd2FzIHNvbWV0aGluZyBhYm91dCB0aGUgZmlnaHQgZm9yIHRoZSBCQkNBTjUgY3Jvd24gdGhhdCBhcHBlYXJlZCBtb3JlIGV4dHJlbWUgdGhhbiBhbnkgb3RoZXIgc2Vhc29uIG9mIHRoZSBDYW5hZGlhbiBzZXJpZXMuIFRoZSBzdGFrZXMgZmVsdCBoaWdoZXIuIFRlbnNpb25zIHdlcmUgdGhpY2tlci4gQW5kIGZhbnMgZW1vdGlvbmFsIGludmVzdG1lbnQgd2FzIGRlZXBlciB0aGFuIGV2ZXIgYmVmb3JlLgpDYXJkaWZmIFBhbnRoZXJzIDEwLiAKV2h5IENhc2FsaW5nYSdzIGNhbm5lZCBjYWJiYWdlIHJvbGxzIGltcHJlc3NlZCBEcmFnb25zJyBEZW4ncyBWaWtyYW0gVmlqIGV2ZW4gd2l0aG91dCBoYXZpbmcgYW55IHNhbGVzRm9vZFNjcm9vZ2UgZm91bmRlciBoaXRzIHNlY29uZCBob21lIHJ1biBvbiBEcmFnb25zJyBEZW4gd2l0aCBDYXJuaXZvcmUgQ2x1YlRoZSBkZWFsU2V2YSBNYXBsZSBXYXRlciBmb3VuZGVycyB3ZW50IGludG8gdGhlIGRlbiBsb29raW5nIGZvciAkMjAwLDAwMCBpbiBleGNoYW5nZSBmb3IgYSAxMCUgZXF1aXR5IHN0YWtlLCB2YWx1aW5nIHRoZSBjb21wYW55IGF0ICQyIG1pbGxpb24uIFRoZSBtb25leSB3YXMgdG8gYmUgdXNlZCB0byBwcm9jdXJlIGludmVudG9yeSBkdXJpbmcgdGhlIGZpdmUgIHRvIHNpeCB3ZWVrIGhhcnZlc3QgdGltZS4gCk1lcmlrdXMgIDEgcG9pbnQgIHN1Ym1pdHRlZCAyIGRheXMgYWdvCk5vdywgYSBuZXcgZm9ybSBvZiBjb21wZXRpdGlvbiBoYXMgYmVlbiBvbiB0aGUgcmlzZSBuYW1lbHksIHdobyBjYW4gYnVpbGQgdGhlIGJldHRlciBwb2tlciBib3Q/IFdlJ2xsIGJlIG9uIHRoZSBsb29rb3V0IGZvciBvbmxpbmUgcG9rZXIgcm9vbXMgaG9zdGluZyBib3Qgb25seSB0b3VybmFtZW50cy4gRG8gbm90IGxhdWdoOyBhIGdvb2QgbnVtYmVyIGhhcyBhbHJlYWR5IGRvbmUgdGhpcy4gSG9wZWZ1bGx5LCB0aGUgaW5jcmVhc2UgaW4gdGhlIHRyZW5kIG9mIHRoaXMgcHJhY3RpY2Ugd2lsbCBlbmNvdXJhZ2UgcG9rZXIgYm90IGFmaWNpb25hZG9zIHRvIGNhcnZlIGEgbmljaGUgZm9yIHRoZW1zZWx2ZXMgdGhhdCBjYW4gYWxzbyBiZSBhIHByb2ZpdGFibGUgbmljaGUgZm9yIHRoZSBvbmxpbmUgcG9rZXIgaW5kdXN0cnksIGFuZCBsZWF2ZSB0aGUgcmVzdCBvZiB1cyBvcmRpbmFyeSBmb2xrIHRvIHBsYXkgYWdhaW5zdCBlYWNoIG90aGVyLi4gCldlciBtYWwgYW4gZWluZW0gRmlsbXNldCBnZWFyYmVpdGV0IGhhdCB3aXJkIGF1Y2ggbmFjaHZvbGx6aWVoZW4ga25uZW4gd2llIGRhcyBXZWNoc2VsbiB6d2lzY2hlbiBOaWNodHN0dW4gdW5kIFZvbGxnYXMgU3RyZXNzIGJlZGluZ3QuIERhc3MgZXIgZWluIENob2xlcmlrZXIgd2FyIG11c3MgbWFuIGViZW4gc28gYWt6ZXB0aWVyZW4sIHNvIGlzdCBlciBpbiBkaWUgS3VsdHVyZ2VzY2hpY2h0ZSB2ZXJtdXRsaWNoIHN0cmtlciBlaW5nZXRyYWdlbiBhbHMgd2VubiBlciByZWZsZWt0aWVydCB1bmQgYmVzb25uZW4gYWdpZXJ0IGh0dGUuTWVpbiBsaWVic3RlciBGZWluZCBhbHMgRmlsbSwgZG9rdW1lbnRhcmlzY2hlIEdlbmF1aWdrZWl0IGhpbiBvZGVyIGhlciwgc2NoYXVlIGljaCBpbW1lciB3aWVkZXIgZ2VybmUuIAooRnVsbCBBbnN3ZXIpLiAKRmFzdCBmb3J3YXJkIDMgeWVhcnMsIG9uZSBvZiBteSBmcmllbmRzIHNlbnQgbWUgYSBtYXJyaWFnZSBjZXJ0aWZpY2F0ZS4gSXQgaGFkIGhpcyBuYW1lIGFuZCB0aGUgbmFtZSBvZiBoaXMgY2hpbGRob29kIGJlc3QgZnJpZW5kIGZyb20gU3BhaW4gYSB3b21hbi4gClNvIHdlIHdvdWxkIGhhdmUgdG8gbW92ZSBzb21ld2hlcmUgd2hlcmUgZnJlYWtpc2hseSBpbXBvc3NpYmxlIGFuZCBldGhpY2FsbHkgcXVlc3Rpb25hYmxlIHRoaW5ncyB3b24ndCBzZWVtIG91dCBvZiBwbGFjZS4gCkltYWdpbmUgdGhlIGludGVsbGVjdHVhbCBiYW5rcnVwdGN5LCB0cnkgdG8gZmF0aG9tIHRoZSBtb3JhbCBkZXByYXZpdHksIG9mIGNvbnNpZGVyaW5nIHdoYXQgTW9oYW1tYWQgYmluIFNhbG1hbiBhbmQgSmFyZWQgS3VzaG5lciBhcmUgZG9pbmcgaW4gU2F1ZGkgQXJhYmlhIGFuZCBiZXlvbmQgYW4gIkFyYWIgU3ByaW5nISIgV2hpY2ggb25lIGlzIG1vcmUgaWdub3JhbnQ6IHRoYXQgeW91IGhhdmUgbm8gYmxhc3RlZCBjbHVlIHdoYXQgdGhlIEFyYWIgU3ByaW5nIHdhcywgb3IgeW91ciBjYWxsaW5nIHRoZSB0cmVhY2hlcm91cyBhdHJvY2l0aWVzIG9mIE1vaGFtbWFkIGJpbiBTYWxtYW4gdGhlIFNhdWRpIHZlcnNpb24gb2YgQXJhYiBTcHJpbmc/IENvdW50bGVzcyBib29rcywgcGlsZXMgb2YgbGVhcm5lZCBlc3NheXMgYnkgQXJhYiBhbmQgbm9uIEFyYWIgc2Nob2xhcnMgYW5kIGNyaXRpY2FsIHRoaW5rZXJzIGhhdmUgYmVlbiBwcm9kdWNlZCBhYm91dCB0aGUgbWludXRlc3QgYXNwZWN0cyBvZiB0aGUgQXJhYiByZXZvbHV0aW9ucy4gSW4gYXJ0LCBsaXRlcmF0dXJlLCBwb2V0cnksIGFuZCBzY2hvbGFyc2hpcCAgIGluIHNjaG9sYXJseSBjb25mZXJlbmNlcywgYWNhZGVtaWMgc2VtaW5hcnMsIGFuZCBsZWFybmVkIHZvbHVtZXMgeW91bmcgYW5kIG9sZGVyIHNjaG9sYXJzIGhhdmUgZG9uZSB0aGVpciBiZXN0IHRvIGZpZ3VyZSBvdXQgdGhlIHNpZ25pZmljYW5jZSBvZiB0aGUgQXJhYiBTcHJpbmcgYW5kIHRoZW4gaW4gY29tZXMgdGhpcyBwcm9wYWdhbmRhIG9mZmljZXIgYW5kIGlzc3VlcyBwYWdlIGFmdGVyIHBhZ2Ugb2YgYSBub25zZW5zaWNhbCBnaWJiZXJpc2ggdGhlIGxpa2VzIG9mIHdoaWNoIHNjYXJjZSBhbnlvbmUgY2FuIGZhdGhvbSBldmVuIGluIHRoZSAicG9zdCB0cnV0aCIgYWdlIG9mICJhbHRlcm5hdGl2ZSBmYWN0cyIuLiAKSSBzZXJpb3VzbHkgbm90IGtpZGRpbmcuIEV2ZW4gaW4gaGlzIDIwMTAgZ29sZCBtZWRhbCBydW4sIHRoZSAxMjYwIERvdWJsZSBNY1R3aXN0IHdhcyB0aGUgY3Jvd24gamV3ZWwgdHJpY2ssIHNvbWV0aGluZyBubyBvdGhlciBwZXJmb3JtZXIgY291bGQgZG8uIAoiU2hlIGNvbXBsZXRlbHkgaW4gc2hvY2ssIiBoZSBzYWlkLgpQaWphdGFuIHBhZGEga3VsaXQga2VwYWxhIHNhYXQgY3JlYW1iYXRoIHJhbWJ1dCwgYWthbiBtZWxlbWFza2FuIGt1bGl0IGtlcGFsYSBzZWhpbmdnYSBtZW11ZGFoa2FuIHBlbnllcmFwYW4gbnV0cmlzaSBwYWRhIHJhbWJ1dCBzYW1iaWwgbWVtYmVyaWthbiBlZmVrIHJlbGFrc2FzaSBiYWdpIHR1YnVoLkRpIFNhbG9uIEtlY2FudGlrYW4gUGFuZ2dpbGFuIHRlcmRhcGF0IHZhcmlhbiBtYWNhbSByYXNhIGNyZWFtYmF0aCBuYW11biB5YW5nIHBhbGluZyBkaW1pbmF0aSBhZGFsYWggY3JlYW1iYXRoIG1ha2FyaXpvIGNva2xhdCwgdmFuaWxsYSwgZGFuIHN0cmF3YmVycnlTZWxhaW4gY3JlYW1iYXRoIHRlcmRhcGF0IHBpbGloYW4gcGVyYXdhdGFuIHJhbWJ1dCB5YW5nIGp1Z2EgYmlzYSBrYW11IHBpbGloIG1lbnVydXQga2VpbmdpbmFuIGthbXUsIHNlcGVydGkgbWFza2VyIHJhbWJ1dCAobG9yZSdhbCksIGhhaXIgc3BhIChsb3JlJ2FsKSwgaGFpcm1hc2sgKGxvcmUnYWwpLkphbmdhbiBsdXBhIGRlbmdhbiBwZXJhd2F0YW4gcHJhIG5pa2FoIHlhbmcgc2F0dSBpbmksIG1lc2tpIHRlcmJpbGFuZyBrZWNpbCwga3VrdSBqdWdhIHBlcmx1IG1lbmphZGkgcGVyaGF0aWFuIGtodXN1cy4gCkdldCBzb21lIHJpY2UuIApIZSBpcyB3ZWxscXVhbGlmaWVkIHRvIGxlY3R1cmUgb24gdGhlIGVkdWNhdGlvbiBkb2N0b3JzcmVjZWl2ZWQgYW5kIHRoZSB0b29scyB1c2VkIGluIGZpZWxkIGhvc3BpdGFsc2R1cmluZyBhbmQgYWZ0ZXIgYmF0dGxlcyBhcyBoZSBjYW4gYmUgZm91bmQgaW50aGUgZmllbGQgYXQgZXZlbnRzIGxpdmluZyBhbmQgYnJlYXRoaW5nIHRoZXJvbGUuIFNhcmEgSHVtZSBpcyBBc3NvY2lhdGUgUHJvZmVzc29yYW5kIEN1cmF0b3Igb2YgS2VudCBTdGF0ZSBVbml2ZXJzaXR5TXVzZXVtLiBTaGUgZWFybmVkIGhlciBQaEQgaW4gTW9kZXJuRXVyb3BlYW4gSGlzdG9yeSBmcm9tIHRoZSBVbml2ZXJzaXR5IG9mQ2hpY2Fnby4gCkluIGFkZGl0aW9uIHRvIHRoZSB0cmFkaXRpb25hbCBwb3N0YWdlIHN0YW1wLCBpdCBib3JlIGEgcGVjdWxpYXIgc2VhbCwgdGhlIGJyYWluY2hpbGQgb2YgYSBEYW5pc2ggcG9zdGFsIGNsZXJrLCBFaW5hciBIb2xib2xsLiBSYXRoZXIgdGhhbiByZWx5IG9uIGEgZmV3IGRlZXAgcG9ja2V0cyB0byBwYXkgZm9yIGEgbmV3IGhvc3BpdGFsIGZvciBjaGlsZHJlbiB3aXRoIHR1YmVyY3Vsb3NpcywgaGUgc29sZCB0aGUgc2VhbHMgZm9yIHR3byBvcmUgKHRoZXJlIGFyZSAxMDAgb3JlIGluIGEgRGFuaXNoIGtyb25lKSBlYWNoLiAKUG9saWNlIHdpdGhkcmV3IGEgc2Vjb25kIGNoYXJnZSBvZiBnb29kcyBpbiBjdXN0b2R5LCBidXQgaW50cm9kdWNlZCBhIG5ldyBjb3VudCBvZiBkbyBhbnl0aGluZyBsaWtlbHkgdG8gaW50ZXJmZXJlIHdpdGggYSBtYWNoaW5lJ3Mgb3BlcmF0aW9uLiBOaWNob2xzLCAzMywgaW5kaWNhdGVkIGhlIHdhc24ndCBoYXBweSB3aXRoIHRoZSBuZXcgY2hhcmdlLiAKUHJvamVjdCBBbGwgSW4sIGhvd2V2ZXIsIGlzIG1lYW50IHRvIGhhdmUgc2lnbmlmaWNhbmNlIGV2ZW4gYmV5b25kIHRoZSBzY29wZSBvZiB0aGUgYnJvYWRjYXN0LiAKSSBub3Qgc2F5aW5nIHlvdSBuZWVkIHRvIGJlIE1yIHN1bnNoaW5lLiBJIG5vdCBzYXlpbmcgeW91IG5lZWQgdG8gY3JhY2sgam9rZXMgYWxsIG5pZ2h0LiBJIG5vdCBhc2tpbmcgeW91IHRvIGJlIHRoZSB0YWJsZSBob3N0IHRvIGV2ZXJ5IG5ldyBwbGF5ZXIuIEFsbCBJIGFza2luZyBpcyB0aGF0IHlvdSBkb250IGJlIHNvIGZ1Y2tpbmcgbWlzZXJhYmxlIHRoZSBlbnRpcmUgdGltZS4gTWF5YmUgdGhlIG9jY2FzaW9uYWwgc21pbGUuIE1heWJlIGEgc2ltcGxlICJoZXkgaG93IGFyZSB5b3UiLiBGb3IgeW91IHJlYWwgc3BlY2lhbCBjYXNlcyAoeW91IGtub3cgd2hvIHlvdSBhcmUpIGp1c3QgZG9udCBiZSBhbiBhc3NoYXQuIEkgbm90IGV2ZW4gc2F5aW5nIGJlIG5pY2UsIGp1c3Qgbm90IGFuIGluc3VmZmVyYWJsZSBiYXN0ZXJkLgpUaGV5IHdlcmUgaW5kaWZmZXJlbnQgdG8gdGhlIENvbGQgV2FyIGFuZCB0aGUgcmlzZSBhbmQgZmFsbCBvZiBuYXRpb24gc3RhdGVzLi4gCkNvbmZsaWN0aW5nIHN0eWxlcy4gSWYgeW91IGRpc2NvdmVyIGEgcHJvIHJhdGVkIHBsYXllciBpbiBhIGxvdCBvZiB3ZWFrIGhhbmRzLCBhbmQgcGxheWluZyBjYXJlbGVzc2x5LCB5b3UgbWF5IGJlIHNlYXRlZCB3aXRoIHRoZSBzcG91c2UvZnJpZW5kIG9mIHRoZSBhY2NvdW50IGhvbGRlci4gSSBvZnRlbiBjb21lIGFjcm9zcyB0aGlzIGFuZCBwYXkgY2xvc2UgYXR0ZW50aW9uIHRvIHRoYXQgcGxheWVyIHNvIHRoYXQgSSBjYW4gb3ZlcnJpZGUgdGhlIGNhdGVnb3J5IG15c2VsZi4KNy8xMC4gCkl0IG11c3QgYmUgdGVycmlmeWluZyBhbmQgYWxzbyBndWlsdCBpbmR1Y2luZyB0byBoYXZlIHRob3VnaHRzIG9mIGxlYXZpbmcuIEkgZ3Vlc3MgSSBhbSBzYXlpbmcgdGhhdCBpZiBzaGUgaXMgaGF2aW5nIHRoZXNlIHBhbmljIGVwaXNvZGVzLiBJTU8sIGZvciBteSB0d28gY2VudHMgaGVyZSAgIEkgZG9uIHRoaW5rIHlvdXIgbWFyaXRhbCBpc3N1ZXMgYXJlIHJlc29sdmVkLiAKSXQgY29tZXMgaW4gYSBkb3dubG9hZGFibGUgZm9ybWF0IHNvIHRoYXQgeW91IGNhbiBiZWdpbiByaWdodCBhd2F5IHdpdGggeW91ciBlZHVjYXRpb24uIFlvdSB3aWxsIGFsc28gZ2V0IGEgbW9uZXkgYmFjayBndWFyYW50ZWUgd2l0aCB0aGUgcHJvZ3JhbSB3aGVuIHlvdSBkb3dubG9hZCBCZWF0aW5nIFRoZSBDYXNpbm8gV2l0aCBFdmVyeSBCZXQuIFRoZSBpbmZvcm1hdGlvbiBpcyBsYWlkIG91dCBpbiBhIHNpbXBsZSB0byBmb2xsb3cgYXBwcm9hY2ggdGhhdCB3aWxsIGJlIGVhc3kgZm9yIHlvdSB0byBnZXQgc3RhcnRlZCB3aXRoIHRoZSBtZXRob2RzLiBPbmNlIHlvdSByZWFkIHRocm91Z2ggdGhlIGluZm9ybWF0aW9uIHlvdSBjYW4gZ2V0IHN0YXJ0ZWQgdXNpbmcgaXQgdG8geW91ciBhZHZhbnRhZ2UuClNvIG15IHN1Z2dlc3Rpb24gd291bGQgYmUgdG8gc2F2ZSB1cCBIUCB1bnRpbCB5b3UgcmVhY2ggYWJvdXQgMTAwLDAwMCBIcCBieSBvbmx5IGRvaW5nIGJhdHRsZXMgYW5kIGJvdW50eSBhbmQgd2hlbiB5b3UgY2FzaCBpbiB0aG9zZSBIcCB5b3Ugc2hvdWxkIGJlIGF0IGFyb3VuZCBsZXZlbCA0MDAuIApFZHVjYXRpb25hbGx5LCBJIHdhcyAyMywgMjQuIFNvY2lhbGx5IGFuZCBlbW90aW9uYWxseSwgSSB3YXMgYSBzY2FyZWQgbGl0dGxlIGtpZC4uIAogMSBwb2ludCAgc3VibWl0dGVkIDYgaG91cnMgYWdvTG9sLCBub3BlLiAKV2hhdCBpIHBvc3RlZCBiZWxvdywgaXQgZ29lcyBudXRzIG9uIHRoZSBzdHVmZiwgaXQgZGVmaW5pdGVseSBydW5zIDE0NDBwLi4gCkV2ZXJ5b25lIHdhcyBzbyBoYXBweSB0byBoYXZlICJPbGQgQ29rZSIgYmFjayB0aGV5IGRpZG4gbm90aWNlIHRoZXkgZGl0Y2hlZCByZWFsIHN1Z2FyLi4gCllldCBDaGFzdGFpbiBkZXNjcmliZXMgdGFraW5nIG9uIHRoaXMgcm9sZSBhcyBhbiBlYXN5IGRlY2lzaW9uOyB0aGUgbWFnbml0dWRlIG9mIHRhY2tsaW5nIHRoZSBzYWxhY2lvdXMgc3ViamVjdCBtYXR0ZXIgZGlkbid0IGV2ZW4gZGF3biBvbiB0aGUgYWN0cmVzcywgYmVjYXVzZSBzaGUgd2FzIHNvIGRyYXduIHRvIHRoZSBjaGFyYWN0ZXIgb2YgTW9sbHkgQmxvb20uIApGb3ggbmV3cyBpcyBkZWRpY2F0ZWQgdG8gdGhlIGJyYWluIHdhc2hpbmcuIFRoaXMgdHlwZSBvZiBwcm9hY3RpdmUgYnVsbHNoaXR0aW5nIHNob3VsZCBiZSBpbGxlZ2FsLiAKRWFjaCBuaWdodCwgbWVhbHMgYXJlIHNoYXJlZCB3aXRoIHRoZSBzYW1lIGd1ZXN0cyBhbmQgc2FtZSB3YWl0ZXJzLiBUaGUgc2VydmljZSBpcyBleGNlcHRpb25hbCBhbmQgdGhlIGN1aXNpbmUgYXMgZ29vZCBhcyBhbnkgZm91bmQgYXQgQXVja2xhbmQgYmVzdCByZXN0YXVyYW50cy4gU21hcnQgY2FzdWFsIGRyZXNzIGlzIGV4cGVjdGVkIGF0IHRoZSBHcmFuZCBSZXN0YXVyYW50LCBleGNlcHQgb24gZm9ybWFsIG5pZ2h0cyBhdCB3aGljaCBtZW4gbXVzdCB3ZWFyIHN1aXQgYW5kIHRpZSBhbmQgd29tZW4gYSBjb2NrdGFpbCBkcmVzcyBvciBzaW1pbGFyLiAKSHVtYW4gdHJhZmZpY2tpbmcgaXMgYSBjcmltZSBpbnZvbHZpbmcgdGhlIGV4cGxvaXRhdGlvbiBvZiBzb21lb25lIGZvciB0aGUgcHVycG9zZXMgb2YgY29tcGVsbGVkIGxhYm9yIG9yIGEgY29tbWVyY2lhbCBzZXggYWN0IHRocm91Z2ggdGhlIHVzZSBvZiBmb3JjZSwgZnJhdWQsIG9yIGNvZXJjaW9uLiBIdW1hbiB0cmFmZmlja2luZyBhZmZlY3RzIGluZGl2aWR1YWxzIGFjcm9zcyB0aGUgd29ybGQsIGluY2x1ZGluZyBoZXJlIGluIHRoZSBVbml0ZWQgU3RhdGVzLCBhbmQgaXMgY29tbW9ubHkgcmVnYXJkZWQgYXMgb25lIG9mIHRoZSBtb3N0IHByZXNzaW5nIGh1bWFuIHJpZ2h0cyBpc3N1ZXMgb2Ygb3VyIHRpbWUuIEh1bWFuIHRyYWZmaWNraW5nIGFmZmVjdHMgZXZlcnkgY29tbXVuaXR5IGluIHRoZSBVbml0ZWQgU3RhdGVzIGFjcm9zcyBhZ2UsIGdlbmRlciwgZXRobmljaXR5LCBhbmQgc29jaW8gZWNvbm9taWMgYmFja2dyb3VuZHMuLiAKSSByZWNlbnRseSBzdGFydGVkIHBsYXlpbmcgUmFpbmJvdyA2IFNlaWdlIGFuZCB0aGUgZGVmYXVsdCBmb3YgcmVhbGx5IGdvdCBtZS4gaXQgaXNuIHN1cGVyIHNtYWxsIG9idmlvdXNseSBidXQgSSB3YXMgZG9pbmcgZmluZSBmb3IgMzAgbWludXRlcyBhbmQgdGhlbiBvdXQgb2Ygbm8gd2hlcmUgSSBnb3Qgc28gbW90aW9uIHNpY2sgSSB3ZW50IHRvIGdvIHN0YW5kIHVwIGFuZCBhbG1vc3QgZmVsbCBkb3duLCBhbmQgdGhlbiBoYWQgdG8gc3BlbmQgMTUgbWludXRlcyBpbiB0aGUgYmF0aHJvb20gaW4gY2FzZSBJIG1pZ2h0IGhhdmUgaHVybGVkLgpGb3IgcGF0aWVudHMgd2hvIHJlcG9ydCB3aGVhdCBpbnRvbGVyYW5jZSBvciBnbHV0ZW4gc2Vuc2l0aXZpdHksIGV4Y2x1ZGUgY29lbGlhYyBkaXNlYXNlIGFuZCB3aGVhdCBhbGxlcmd5LiBUaG9zZSBwYXRpZW50cyB3aXRoIG5lZ2F0aXZlIHJlc3VsdHMgc2hvdWxkIGJlIGRpYWdub3NlZCB3aXRoIG5vbiBjb2VsaWFjIGdsdXRlbiBzZW5zaXRpdml0eS4gVGhlc2UgcGF0aWVudHMgYmVuZWZpdCBzeW1wdG9tYXRpY2FsbHkgZnJvbSBhIGdsdXRlbiBmcmVlIGRpZXQuIFRoZXkgc2hvdWxkIGJlIHRvbGQgdGhhdCBub24gY29lbGlhYyBnbHV0ZW4gc2Vuc2l0aXZpdHkgaXMgYSBuZXdseXJlY29nbml6ZWRjbGluaWNhbCBlbnRpdHkgZm9yIHdoaWNoIHdlIGRvIG5vdCB5ZXQgZnVsbHkgdW5kZXJzdGFuZCB0aGUgbmF0dXJhbCBjb3Vyc2Ugb3IgcGF0aG9waHlzaW9sb2d5LgpXaW5uaW5nIGhvbWUgcG9rZXIgZ2FtZXMgYW5kIHRvdXJuYW1lbnRzIG1lYW5zIHVuZGVyc3RhbmRpbmcgc3RyYXRlZ2llcywgYnV0IGFsc28gdW5kZXJzdGFuZGluZyB0aGUgcGVvcGxlLiBLbm93aW5nIHBsYXllciB0eXBlcyB3aWxsIGxlYWQgdG8gYmV0dGVyIHJlYWRzIGFuZCBtb3JlIHdpbnMuCkEgMjAwNiByZXZpZXcgc2hvd2VkIHRoYXQgcHJvdG9jb2xzIHRoYXQgYXJlIG1vcmUgYW5hZXJvYmljIGluIG5hdHVyZSBwcm9kdWNlIGhpZ2hlciBFUE9DIHZhbHVlcyB0aGFuIHN0ZWFkeSBzdGF0ZSBhZXJvYmljIHRyYWluaW5nIGJlY2F1c2UgdGhlIHRyYWluZWQgbXVzY2xlIGNlbGxzIG11c3QgcmVzdCByZXN0b3JlIHBoeXNpb2xvZ2ljYWwgZmFjdG9ycyBpbiB0aGUgY2VsbHMsIHdoaWNoIHRyYW5zbGF0ZXMgdG8gYSBsb3Qgb2YgZW5lcmd5IGV4cGVuZGl0dXJlLi4gCjMgcG9pbnRzICBzdWJtaXR0ZWQgMTYgZGF5cyBhZ29UaGlzIHByb2JsZW0gb25seSBnZXRzIHdvcnNlIGFzIHlvdSBnZXQgYmlnZ2VyLiAKSG93IHRvIEZpbmQgYSBRdWFsaWZpZWQgVHJhZGl0aW9uYWwgQ2hpbmVzZSBNZWRpY2luZSBQcmFjdGl0aW9uZXIKQSBjb21meSBhbmQgY296eSBCIGlzIGRpZmZlcmVudCB0byBhIGhvdGVsLCBldmVuIGEgc21hbGwgaG90ZWwsIGluIHNldmVyYWwgd2F5cy4gClRoZXkgY2FuIHByYWN0aWNlIGFuZCBldmVudHVhbGx5IGVhcm4gbW9uZXkgZnJvbSB0aGVzZSBnYW1lcy4gCk5laXRoZXIgZGlkIEJ1ZGRoYSBvciBNdWhhbW1hZC4gCjUuIElmIHlvdXIgc3VibWlzc2lvbiBpcyBOU0ZXLCB1c2UgdGhlIE5TRlcgdGFnLiBJZiB5b3VyIHN1Ym1pc3Npb24gaXMganVzdCBnb3JlIHdpdGhvdXQgYSBjcmVlcHkgY29udGV4dCwgcGxlYXNlIHRha2UgaXQgdG8gL3IvZ29yZSBpbnN0ZWFkLjcuIE5vIENvbW1lbnQgU3BhbS4gVGFrZSB0aGUgSSB0b29rIGFuIGFycm93IHRvIHRoZSBrbmVlIG9yIGhlbGwgaW4gYSBjZWxsIGNvbW1lbnRzIGVsc2V3aGVyZS4gSWYgeW91IHBlcnNpc3Qgd2l0aCBzYWlkIGNvbW1lbnRzIHlvdSB3aWxsIHJlY2VpdmUgYSAzIGRheSBiYW4gYXMgYSB3YXJuaW5nLgpGcmVzcXVlIHJ1cGVzdHJlIGRlIFRhYmFya2EgZW4gVHVuaXNpZSA6IGVsbGUgdG1vaWduZSBkZSBsIGRlcyBBdGxhbnRlcyBkYW5zIGxlIGJhc3NpbiBtZGl0ZXJyYW5lbiAoZG91YmxlIGhhY2hlKQpTbyB3aGF0IHdhcyB0aGUgZGlzdGluY3Rpb24gYmV0d2VlbiB0aG9zZSB0d28/IEFuZCBob3cgd291bGQgYSBwb2xpY2VtYW4gb24gdGhlIHN0cmVldCB0ZWxsIHRoZW0gYXBhcnQ/IEFuZCB3aHkgaXMgdGhlcmUgYSBkaXN0aW5jdGlvbiBpbiB0aGUgZmlyc3QgcGxhY2U/CjMgbWlsbGlvbiB3aWxsIGJlIHBsZW50eSBlc3BlY2lhbGx5IGlmIHlvdSBzaG9ydCBzdGFjay4uIApCdXQgdGhhdCdzIG5vdCB0aGUgb25seSByZWFzb24uIApJIGJlZW4gdGhpbmtpbmcgb2YgZ2V0dGluZyBpbiB0byBzd2ltbWluZyAgdGhlIG9ubHkgY2FyZGlvIEkgdGhpbmsgSSB3b3VsZCBlbmpveSAgYnV0IEkga25vdyBteSBnbGFzc2VzIGFsb25lIGFyZSBleHBlbnNpdmUgYXMgaGVsbCwgY291bGRuIGltYWdpbmUgdGhlIGNvc3Qgb2YgcHJlc2NyaXB0aW9uIGdvZ2dsZXMuIApQcmFjdGljZS4gQW5kIHByYWN0aWNlLiBBbmQgcHJhY3RpY2UuIApUbyBhbnN3ZXIgdGhlIHF1ZXN0aW9uLCBMZXZpdHQgYW5kIE1pbGVzIGxvb2tlZCBhdCBpbmZvcm1hdGlvbiBtYWRlIGF2YWlsYWJsZSBieSB0aGUgMjAxMCBXb3JsZCBTZXJpZXMgb2YgUG9rZXIuIFRoZSBhbm51YWwgZXZlbnQsIGhlbGQgaW4gTGFzIFZlZ2FzLCBpbmNsdWRlcyA1NyB0b3VybmFtZW50cywgMzIsMDAwIHBhcnRpY2lwYW50cyBhbmQgJDE4NSBtaWxsaW9uIHByaXplIG1vbmV5LCBpbmNsdWRpbmcgdGhlICJNYWluIEV2ZW50LCIgaW4gd2hpY2ggdGhlIGdyYW5kIHdpbm5lciBlYXJucyBhbG1vc3QgJDkgbWlsbGlvbi4KTUVETElORSAoZnJvbSAxOTY2IHRvIDE5OTgpLCBFTUJBU0UgKGZyb20gMTk3NCB0byAxOTk4KSwgQ0lOQUhMLCBDUkFDLCBhbmQgTUFOVElTIHdlcmUgc2VhcmNoZWQuIENpdGF0aW9ucyB3ZXJlIHRyYWNrZWQgYW5kIG5vbiBpbmRleGVkIGNoaXJvcHJhY3RpYywgb3N0ZW9wYXRoaWMgYW5kIG1hbnVhbCBtZWRpY2luZSBqb3VybmFscyB3ZXJlIGhhbmRzZWFyY2hlZC4gCkJvb2sgYSByb21hbnRpYyBnZXRhd2F5IGluIGEgc3VpdGUgd2l0aCBhIGZpcmVwbGFjZSBhbmQgcmVmcmVzaCB5b3VyIGJvZHkgd2l0aCBhIGZ1bGwgbWVudSBvZiB0cmVhdG1lbnRzIGF0IHRoZSBPb2ggTGEgTGEgU2Fsb24gYW5kIFNwYS4gCkF0IGxlYXN0IEphcGFuZXNlIGdvdmVybm1lbnQgcGFpZCBjb21wZW5zYXRpb24gbW9uZXkgYW5kIGlzc3VlZCBhcG9sb2dpZXMgYW5kIHdoZXRoZXIgaXQgc2luY2VyZSBvciBub3QgdG8gdGhlIEtvcmVhbnMsIGl0IGJldHRlciB0aGFuIEtvcmVhbiBnb3Zlcm5tZW50IG91dHJpZ2h0IGRlbnlpbmcgZXZlcnl0aGluZyBpbiBWaWV0bmFtIGFuZCBiYXJlbHkgZG9pbmcgYW55dGhpbmcgYWJvdXQgaXQuIEFtZXJpY2FucyBhbHNvIGJyb3VnaHQgaW4gdGVucyBvZiB0aG91c2FuZHMgb2YgQW1lcmFzaWFucyB0byB0aGUgVVMgd2hpbGUgdGVucyBvZiB0aG91c2FuZHMgb2YgTGFpIERhaSBIYW4gd2VyZSBsZWZ0IGZvciBhIHNoaXR0eSwgb3N0cmFjaXplZCBsaWZlIGluIFZpZXRuYW0gdGhhdCBLb3JlYW5zIG5ldmVyIGJyb3VnaHQgaW50byB0aGVpciBjb3VudHJ5LgpJJ20gc3VyZSBoaXMgbW90aGVyIGFuZCBtYW55IG90aGVycyB3b3VsZCBiZSBvdXRyYWdlZCBhbmQgY3J1c2hlZCB0byBzZWUgc29tZW9uZSBlc3NlbnRpYWxseSB0cnlpbmcgdG8gcGVyc29uYWxseSBnYWluICh0aHJvdWdoIGZvbGxvd2Vycywgdmlld3MsIGdpZnRzLCBldGMuKSBvZmYgb2YgZmFraW5nIHdoYXQgaGFzIHRha2VuIHRoZWlyIGNoaWxkcmVucycgbGl2ZXMuLiAKVGhpcyBpcyAoaW4gYWxsIHJhdGlvbmFsIGNhc2VzKSBub3QgYSBzcGVjaWZpYyBjbGFpbSwgYnV0IGEgY2xhaW0gYWJvdXQgcHJvYmFiaWxpdGllcyBnaXZlbiBvdXIgY3VycmVudCBrbm93bGVkZ2UuIApDb25kaW1lbnRpYSAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxNyBkYXlzIGFnbwpUaGlzIGlzIHRydWUgZXNwZWNpYWxseSB0aGF0IGJhYnkgZ2lmdCBiYXNrZXRzIGNhbiBub3cgYmUgcHVyY2hhc2VkIGluIHN0b3JlcyB0aGVzZSBkYXlzLiBUaG91Z2ggYSBtb3RoZXIgd2lsbCBhcHByZWNpYXRlIHN1Y2gga2luZCBvZiBnaWZ0IGJhc2tldCwgc2hlIHdpbGwgYXBwcmVjaWF0ZSBpdCBtb3JlIGlmIHlvdSBwZXJzb25hbGl6ZSB5b3VyIGdpZnQgdG8gdGhlbS4gClBhc3R5IGZyb20gTXVsZG9vbnNJIGFtIHdvcmtpbmcgb24gc3RvcmllcyBqdXN0IGF0IHRoZSBtb21lbnQgd2UgaGF2ZSBhIHRvbiBvZiBjbGllbnRzIHRvIG1hc3NhZ2UhIEJlZW4gYXQgd29yayBzb21lIHdlZWtzIHNldmVuIGRheXMuIApUaGUgQnJhZHkgQnVuY2ggQW5uIEIuIERhdmlzLCBzZWVuIGhlcmUgbGVmdCBhcyBBbGljZSBvbiAiVGhlIEJyYWR5IEJ1bmNoIiBhbmQgcmlnaHQsIGF0dGVuZGluZyB0aGUgVFYgTGFuZCBBd2FyZHMgaW4gU2FudGEgTW9uaWNhLCBDYWxpZi4gT24gQXByaWwgMTQsIDIwMDcuIApJbiBhbiBhZ2Ugd2hlcmUgZmFsc2UgbW9yYWxzIGFyZSBhIGRpYW1vbmQgZG96ZW4sIHRydWUgdmlydHVlcyBhcmUgYSBibGVzc2luZyBpbiB0aGUgc2tpZXMuIFdlIG9mdGVuIHB1dCBvdXIgZmFsc2UgbW9yYWxpdHkgb24gYSBwZXRhbCBzdG9vbCBsaWtlIGEgYnVuY2ggb2YgcHJlIE1hZG9ubmFzLCBidXQgeW91IGFsbCBzZWVtIHRvIGJlIHRha2luZyBzb21ldGhpbmcgdmVyeSB2YWx1YWJsZSBmb3IgZ3Jhbml0ZS4gCiJFYWNoIGNvdW50cnkncyBzdHlsZSByZWZsZWN0cyB0aGVpciBtZW50YWxpdHkgaW4gYSBsb3Qgb2Ygd2F5cywgd2hpY2ggSSB0aG91Z2h0IHdhcyBhc3RvdW5kaW5nLiBDaGluYSB3YXMgZ3JhY2VmdWwsIHRob3VnaHRmdWwgICBub3QgcmVhbGx5IGEgdmlvbGVudCBhcnQuIFRoZSBLb3JlYW4gcGVvcGxlIHdlcmUgdGhlIG1vc3QgcGVhY2VmdWwsIGNhbG0sIGtpbmQgcGVvcGxlIEkndmUgZXZlciBtZXQgYXMgYSB3aG9sZSwgYW5kIHRoZWlyIGFydCByZWFsbHkgcmVmbGVjdHMgdGhhdC4gCkZyZXlhIG1pZ2h0IChldmVudHVhbGx5KSBzaWRlIHdpdGggS3JhdG9zIGluIHRoaXMsIGlmIGhlciBoYXRyZWQgZm9yIE9kaW4gaXMgc3Ryb25nZXIgdGhhbiB0aGF0IGZvciBLcmF0b3MgcmlnaHQgbm93LiBPdGhlcndpc2Ugc2hlIG1pZ2h0IGpvaW4gaW4gYXMgYSB0aGlyZCBwYXJ0eSwgcGVyaGFwcyBldmVuIG1hbmFnaW5nIHRvIHJhbGx5IHRoZSBWYWVuaXIgYW5kL29yIHRoZSBWYWxreXJpZXM7IEpybXVuZ2FuZHIgaXMgZGVmaW5ldGx5IG9uIEtyYXRvcyAob3IgQXRyZXVzKSBzaWRlIGFuZCB3aWxsIHByb2JhYmx5IGhlbHAgaGltIGluIHRoZSBmaWdodCBhZ2FpbnN0IFRob3IsIHdoaWNoIGluIGl0c2VsZiBpcyBvbmUgb2YgdGhlIHRyaWdnZXJzIGZvciBkaXZpbmUgQ2l2aWwgd2FyLiBXZWxjb21lIHRvIFJhZ25hcmsuCkFjY29yZGluZyB0byB0aGUgc3RvcnksIG9uZSBtYW4gZ290IGFzc2F1bHRlZCBiZWNhdXNlIGhlIGluc3VsdGVkIGFub3RoZXIgbWFuIGRhdWdodGVyLiBUaGUgdGhlIGd1eSBpbiB0aGUgdmlkZW8gd2VudCBjcmF6eSBjYXVzZSBoZSBsZWZ0IGFuZCBzZWN1cml0eSBsZXQgaGltLiBJIGFwcGxhdWRpbmcgdGhlIGd1eSB3aG8gZGVmZW5kZWQgaGlzIGRhdWdodGVyIGFuZCBmYW1pbHkuIFNvLCB5ZXMgSSBnbGFkIHRoZXJlIGFyZSBzdGlsbCBtZW4gb3V0IHRoZXJlIHdobyBhcmVuIGp1c3QgZ29ubmEgbGV0IHNvbWVvbmUgaW5zdWx0IHRoZW0gYW5kIHRoZWlyIGZhbWlseS4KTWUgV29uZGVyaW5nIGlmIHRoZXJlIGFyZSBhbnkgc2luZ2xlIHNlbmlvcnMgaW4geW91ciBhcmVhPyBNZSBicmluZ3MgZGF0aW5nIHRvIHlvdXIgZG9vcnN0ZXAgYW5kIGFsbG93cyB5b3UgdG8gc2VlIHdobyBpcyBsb2NhbCwgc2luZ2xlIGFuZCBzZW5pb3IgbmVhciB5b3UuIApJIHRoaW5rIHRoZXkgdGVuZCB0byB0YXJnZXQgbW9yZSBmYW5kb20gc3R1ZmYgdGhhbiBraWQgc3R1ZmYsIEkgaGVhcmQgaXQgYSBsb3QgcHJvYmFibHkgYWJvdXQgYSB5ZWFyIGFnbyBhdCBhIGd1ZXNzLCBhdCB0aGUgdGltZSBJIHdhcyBsaXN0ZW5pbmcgdG8gYSBsb3Qgb2YgbmFycmF0ZWQgc3RvcmllcyAoQ3JlZXB5cGFzdGEsIFNDUHMgZXRjLCBzdHVmZiB0aGF0IHdvdWxkIGhhdmUgYSB0ZWVuIGFuZCAyMCBzb21ldGhpbmdzIGZvbGxvd2luZykgYW5kIHRoZXkgd2VudCBoYXJkIGZvciBhIHdoaWxlIGdldHRpbmcgYWxsIHRob3NlIG5hcnJhdG9ycyB0byBnaXZlIHRoZW0gc2hvdXQgb3V0cy4gSSBlbmRlZCB1cCB0cnlpbmcgaXQgb3V0IGJlY2F1c2UgYSBmcmllbmQgcmVjY29tZW5kZWQgaXQuIEl0IGRpZG4ndCBzZWVtIGxpa2Ugc29tZXdoZXJlIHRoYXQgd2FzIGhlYXZpbHkgbW9kZXJhdGVkLCB0aGUgY29tbXVuaXRpZXMgc2VlbWVkIHRvIGp1c3QgYmUgdGhlaXIgb3duIHRoaW5nIGFuZCBJIGNhbiBzZWUgdGhhdCBiZWluZyBhdHRyYWN0aXZlIHRvIHNvbWUuIEl0J2xsIHByb2JhYmx5IG11c2ggeW91ciBicmFpbiBhcyBtdWNoIGFzIHBlcHBhIGxvbCBpdCdzIG11Y2ggYmV0dGVyIHRvIGp1c3QgZmluZCBzZXJ2ZXJzIG9uIERpc2NvcmQgZm9yIGZhbmRvbSBvciBjb21tdW5pdHkgY2hhdHMgaW1vLgpGb3JyZXN0IHNhaWQgc2hlIGRpZCBub3QgZXhwZWN0IGRlbGF5cyB0byBMaW5lIDMgd291bGQgaGF2ZSBhIG1lYW5pbmdmdWwgZWZmZWN0IG9uIHRoZSBkaXNjb3VudHMgZm9yIFdlc3Rlcm4gQ2FuYWRhIFNlbGVjdCBoZWF2eSBvaWwgYmxlbmRzIHJlbGF0aXZlIHRvIHRoZSBXZXN0IFRleGFzIEludGVybWVkaWF0ZSBiZW5jaG1hcmsgYXMgY29tcGFuaWVzIGFscmVhZHkgYW50aWNpcGF0ZWQgbmVlZGluZyBjcnVkZSBieSByYWlsIGluIDIwMjAuIFRoZXkganVzdCBuZWVkIG1vcmUgb2YgaXQgbm93LgpNb3N0IG9yZ2FuaXphdGlvbnMgICBpbmNsdWRpbmcgcG9saWNlIHNlcnZpY2VzLCBhcmUgaW1tZXJzZWQgaW4gYSBjeWNsZSBvZiBjaGFuZ2UgdGhhdCBzZWVtaW5nbHkgbmV2ZXIgZW5kcywgYW5kIGl0IGxpa2VseSBuZXZlciB3aWxsLiAKVGhpcyBpcyB3aHkgZnJlZSB3aWxsIGlzbiByZWxldmFudCBhbmQgdGhlIGdpZnQgb2YgZnJlZSB3aWxsIGlzIG1lYW5pbmdsZXNzIGFzIGl0IHJlbGF0ZXMgdG8gc2luLiAKVGhlIGx5bXBoYXRpYyBzeXN0ZW0gbW92ZXMgY2VsbHVsYXIgZmx1aWQgdGhyb3VnaCB0aGUgc3lzdGVtLCBjbGVhbnNpbmcgdGhlIGJvZHkgb2Ygd2FzdGUgcHJvZHVjZWQgYnkgdGhlIGJvZHkncyBtZXRhYm9saWMgZnVuY3Rpb25zLiAKSSBoYXZlIHVud2l0dGluZ2x5IHJ1aW5lZCBteSBjb3VudHJ5LiAKSSBzdWdnZXN0IHRoZSBuZXh0IHRpbWUgc2hlIGRvZXMgdGhpcyByaWdodCBpbiBmcm9udCBvZiB5b3UsIHlvdSBqdXN0IGFzayB5b3VyIGJveWZyaWVuZCB3aGF0IHNoZSBzYWlkIChkb24gYmUgZW1iYXJyYXNzZWQgdG8gbm90IGtub3cgYSBsYW5ndWFnZSwgaXQgbGlrZSBiZWluZyBlbWJhcnJhc3NlZCB5b3UgY2FuIHN1ZGRlbmx5IHBpY2sgdXAgYSBndWl0YXIgYW5kIHBsYXkgZnJlZSBiaXJkKSBhbmQgdGhlbiByZXNwb25kIHRvIGl0IGxpa2Ugc2hlIHdhcyB0YWxraW5nIHRvIHlvdSB0b28uIElmIHNoZSBjb250aW51ZXMsIHRlbGwgaGVyIHRoYXQgeW91IGZlZWwgbGVmdCBvdXQgKGRpbnQgYmUgZW1iYXJyYXNzZWQgdG8gaGF2ZSBlbW90aW9ucyB0aGF0IGFyZSBhcHByb3ByaWF0ZSBpbiB0aGUgc2l0dWF0aW9uKSBhbmQgeW91IHdvdWxkIGxpa2UgdG8gYmUgaW4gdGhlIGNvbnZlcnNhdGlvbiB0b28uLiAKTGF0ZWx5LCBhIGhhcnJvd2luZyAyMCBtaW51dGUgdHJlayB0byBDZW50cmFsIFBhcmsgYWxzbyBoYXMgcHJvdmVkIGFuIG9ic3RhY2xlIHRvIHNhbGVzLiBCcm9rZXIgVmlja2V5IEJhcnJvbiwgd2hvIGhhcyBzb2xkIGluIFN1dHRvbiBQbGFjZSwgc2F5cyBpdCAibWlnaHQgYXMgd2VsbCBiZSBHdWFtLiIgVGhhdCBtaWdodCBleHBsYWluIGluIHBhcnQgd2h5IG5vYm9keSBhdCB0aGUgYnVpbGRpbmcgaXMgY3VycmVudGx5IHRyeWluZyB0byBzZWxsICAgbW9zdCByZWNlbnQgc2FsZXMgaGF2ZSBiZWVuIGZyb20gdGhlIGVzdGF0ZXMgb2YgbGF0ZSBvd25lcnMuIApPdWJsaW9ucyBxdWUgbGVzIHByb3BvcyBkZXMgcGl0b3lhYmxlcyBjbG93bnMgcXVlIHNvbnQgQXJ0aGF1ZCBldCBQb3V0b3Ugc29udCBkZXMgcHJvcG9zIGRlIFRvdGFsaXRhaXJlcyBwb3VyIGxlcXVlbHMgbm90cmUgZG1vY3JhdGllIG4nZXN0IHBhcyBwb3B1bGFpcmUsIG1haXMgYm91cmdlb2lzZS4gZXQgY2Vzc29ucyBkZSBmcm1pciBkZSBjZSBxdSdpbHMgZW4gZmVyYWllbnQgcydpbHMgYXJyaXZhaWVudCBhdSBwb3V2b2lyLgpGb3J3PTEuNSwgdGhlZ2FsYXhpZXN3b3VsZCBmaXJzdCBiZSBzZXBhcmF0ZWQgZnJvbSBlYWNoIG90aGVyLiBBYm91dCA2MCBtaWxsaW9uIHllYXJzIGJlZm9yZSB0aGUgQmlnIFJpcCwgZ3Jhdml0eSB3b3VsZCBiZSB0b28gd2VhayB0byBob2xkIHRoZU1pbGt5IFdheWFuZCBvdGhlciBpbmRpdmlkdWFsIGdhbGF4aWVzIHRvZ2V0aGVyLiAKSWYgeW91IGFyZSBpbiBNdW5pc2luZywgSSB3b3VsZCBzbyBzdWdnZXN0IEpvaG5ueSBEb2dzISBPbmUgdGhpbmcgYWJvdXQgSm9obm55IERvZ3MsIHRoZXkgYXJlIHBhY2tlZCBzbyBwbGFuIG9uIGEgbG9uZyBsaW5lISBNeSBvdGhlciBmYXZvcml0ZSBzcG90IGluIE11bmlzaW5nIGlzIHRoZSBGYWxsaW5nIFJvY2sgQ2FmZS4gQSBmZWxsb3cgTmFuY3kgb3ducyB0aGlzIGNhZmUuIApKdXJvcnMgd2VyZSB0b2xkIHRoYXQgdGhlIHNraW4gd2FzIHRvcm4gZnJvbSBvbmUgb2YgTXIgR3VtYmxleSdzIGhhbmRzIGFzIGEgd2F0Y2ggd2FzIHB1bGxlZCBmb3JjaWJseSBmcm9tIGhpcyB3cmlzdCwgbGVhdmluZyBhICJicnV0YWwgYW5kIHN0cmlraW5nIiBpbmp1cnkuCkkgd2lsbCBwcm9iYWJseSBwbGFjZSBoaXMgYXNoZXMgaW4gYSBzbWFsbCBHZW9yZ2UgRGlja2Ugd2hpc2tleSBib3R0bGUgYXMgdGhhdCB3YXMgaGlzIGZhdm9yaXRlIGFuZCBrZWVwIHRoZW0gdGlsbCBJIG1ha2UgaXQgdG8gdGhlIHRoZSBHcmFuZCBDYW55b24gYWdhaW4uIApJdCB3YXMgYmFzaWNhbGx5IGFuIGVuZ2luZSBmb3IgYSBzaW11bHRhbmVvdXMgcG9lbSwgYXMgaW4gdGhlICJicnVpdGlzdCIgRnV0dXJpc3RzIHRyYWRpdGlvbiwgd2hpY2ggYnVpbHQgdXBvbiB0aGUgd29yayBvZiBIdWdvIEJhbGwsIHdobyBpbiB0dXJuIHdhcyB0aGUgaW52ZW50b3Igb2YgdGhlIHNvdW5kIHBvZW0gKExhdXRnZWRpY2h0KS4gQW5kIHNvIHRvbmd1ZSBkZWVwIGluIGNoZWVrLCBUemFyYSBzZXQgZm9ydGggdGhlc2UgcHJpbmNpcGxlczpUbyBtYWtlIGEgRGFkYWlzdCBwb2VtOlRha2UgYSBuZXdzcGFwZXIuVGFrZSBhIHBhaXIgb2Ygc2Npc3NvcnMuQ2hvb3NlIGFuIGFydGljbGUgYXMgbG9uZyBhc3lvdSBhcmUgcGxhbm5pbmcgdG8gbWFrZSB5b3VyIHBvZW0uQ3V0IG91dCB0aGUgYXJ0aWNsZS5UaGVuIGN1dCBvdXQgZWFjaCBvZiB0aGV3b3JkcyB0aGF0IG1ha2UgdXAgdGhpcyBhcnRpY2xlIGFuZCBwdXQgdGhlbSBpbiBhIGJhZy5TaGFrZSBpdCBnZW50bHkuKFNvbWUgZmV3IHdlZWtzIGFnbyBJIG1hZGUgYSBwb3N0IGFib3V0IGFuIGF1dG9tYXRpYyBwb2VtIG1ha2luZyBkZXZpY2UgdGhlIHBvZW0gYW1hdGljIGZpc3QgbWljcnJvc2NvcGUgYWZ1biBsaXR0bGUgYml0IGFib3V0IG1ha2luZyBwb2VtcyBvZiBvcmRpbmFyeSBwcmludGVkIHBhZ2VzIGJ5cmVjb3JkaW5nIHdoYXQgeW91IHNhdyBvZiB0aGVtIGluIHRoZSB2aXN1YWwgZmllbGQgc2VlbiB0aHJvdWdoIHRoZWJhcnJlbCBvZiBhIHNlbWkgY2xvc2VkIGZpc3QuIApOZXZlciBwcmljZSBlbmZvcmNlOiBJZiB5b3UgZG9uJ3Qgd2FudCBhIHBsYXllciBhbmQgaGUncyBub3QgaW4geW91ciBwbGFucywgZG9uJ3QgZHJhZnQgaGltIGp1c3QgYmVjYXVzZSB5b3UgdGhpbmsgaGUncyBhIGNhbnQgbWlzcyBiYXJnYWluLiBJdCBkb2Vzbid0IG1hdHRlciBpZiB5b3UgdmFsdWUgQ2F0Y2hlciBYIGF0ICQyMCBhbmQgeW91IGNhbiBnZXQgaGltIGZvciAkMTggaWYgeW91ciBwbGFuIGNhbGxzIGZvciBzcGVuZGluZyB3YXkgZG93biBhdCBjYXRjaGVyLiAKR28gdG8gYSBzdG9yZSBhbmQgdHJ5IGFsbCBzb3J0cyBvZiBjbG90aGVzIG9uIHlvdXJzZWxmLiAKUmVtZW1iZXIgYWxzbyB0aGF0IGNvbWJpbmF0aW9ucyBhcmUgb3JkZXIgaW5kZXBlbmRlbnQgKCBBQkMgaXMgdGhlIHNhbWUgdGhpbmcgYXMgQ0JBKSAzIGRpZ2l0cyAzIDIgMSAyIGRpZ2l0cyAzIDIgMyAxIDIgMSAxIGRpZ2l0cyAxIDIgMyBjb3VudCB0aG9zZSB1cCBhbmQgdm9pbGEuIApVbmRyZXNzIHlvdXIgd2lmZSBzbW9vdGhseSBhbmQgY2FyZWZ1bGx5IGFuZCBsZXQgaGVyIGxpZSBvbiB0aGUgbWFzc2FnZSB0YWJsZSBvciBvbiB0aGUgYmVkLiAKVGhlIG9uZSBtb250aCB0cmVrIHdhcyBhIGdhbWJsZS4gTGluZGxleSBoYWQgbm8gbmF2aWdhdGlvbiBhc3Npc3RhbmNlIGZyb20gY2FyIHNhdGVsbGl0ZSBkZXZpY2VzIG9yIGEgY2VsbCBwaG9uZS4gCkhlJ2xsIHRyeSB0byBnZXQgb3V0LCByb2FtIGZhciBhbmQgd2lkZSwgbWFyayB5b3VyIGZ1cm5pdHVyZSBhbmQgb3RoZXIgdGhpbmdzIHdpdGggdXJpbmUsIGFuZCBtYXkgYmVjb21lIG92ZXJseSBhZ2dyZXNzaXZlLiBBbiB1bnNwYXllZCBmZW1hbGUgZ29lcyB0aHJvdWdoIHRoZSBtZXNzIG9mIGhlYXQgKGVzdHJ1cykgYWJvdXQgdHdpY2UgYSB5ZWFyLCBkdXJpbmcgd2hpY2ggc2hlIG1heSBhbHNvIHRyeSB0byBlc2NhcGUgb3IgYmVjb21lIG1vcmUgdW5wcmVkaWN0YWJsZSBpbiBoZXIgYmVoYXZpb3IuIApUaGluayBhYm91dCB0aGUgdHJhaW5pbmcgdGltZSBmb3IgYSBodW1hbi4gQmFiaWVzIGFyZSBib3JuLCB0aGV5IGFic29yYiB0aGVpciBzdXJyb3VuZGluZ3MsIGN1bHR1cmVzLCBsYW5ndWFnZXMsIG1heWJlIDEwIHllYXJzIHVudGlsIHRoZXkgYXJlIHNvbWV3aGF0IHByb2ZpY2llbnQuIFRoZSBleHBlY3RhdGlvbiBpcyB0aGF0IGJ5IHRoZSBlbmQgb2YgdGhvc2UgMTAgeWVhcnMsIHdoYXQgdGhleSBsZWFybmVkIHdpbGwgYmUgYSB1c2VmdWwgZm91bmRhdGlvbiB1cG9uIHdoaWNoIHRvIGJ1aWxkIHRoZWlyIGluY3JlYXNpbmcgdW5kZXJzdGFuZGluZyBvZiB0aGUgd29ybGQuIAo1LiBQcmljZSB0byBpbmNyZWFzZSBwcm9maXRzLiBJdCdzIGEgbXl0aCB0aGF0IGlmIHlvdSBkaXNjb3VudCBwcmljZSB0byBpbmNyZWFzZSBzYWxlcywgeW91IHdpbGwgc2VlIGluY3JlYXNlZCBwcm9maXRzLiAKVGhpcyByZXF1aXJlIG5vdCBodXJ0IHlvdSwgbm9uZXRoZWxlc3MsIGdpdmVuIHRoYXQgc2hvdWxkIHlvdSBhcmUgYSB3aW5uaW5nIHBsYXllciB5b3Ugb3VnaHQgdG8gYmUgd2lubmluZyBleHRyYSBtb25leSBwZXIgaG91ciBmb3IgcHJlY2lzZWx5IHRoZSBzYW1lIHB1cnBvc2UuIEZ1bmRpbmcgaXQgdHJ1bHkgaXMgYXMgZWFzeSBhcyB0cmFuc2ZlcnJpbmcgZnVuZHMgaW50byB5b3VyIGFjY291bnQuIApMaWtlIGl0IG9yIG5vdCwgTWFnaWMgYW5kIFBlbGlua2EgYXJlIGdvaW5nIHRvIGJlIGNhbGxpbmcgdGhlIHNob3RzIG5leHQgc2Vhc29uIHdoZXRoZXIgd2UgbGlrZSBpdCBvciBub3QsIHNvIHRoZSBob3BlIGlzIHRoZXkgbGVhcm4gZnJvbSB0aGVpciBtaXNzdGVwcy4gCkJ1dCB0aGUgbW9zdCBlbXBhdGhldGljIHBlb3BsZSBJIGtub3cgYXJlIGJsaW5kZWQgYnkgRm94IE5ld3MuIApXb3VsZCB5b3UgYmUgYWJsZSB0byBsaXZlIHdpdGggeW91cnNlbGYgaWYgeW91IGtpbGxlZCBhIGNoaWxkIGJlY2F1c2UgeW91ciBkdW1iYXNzIGlzIHRvbyBpcnJlc3BvbnNpYmxlIHRvIGNhbGwgYW4gdWJlciB3aGVuIHlvdSB0b28gZnVja2VkIHVwIHRvIGRyaXZlPy4gCiJNb2xseSBtYWtlcyBhIGxvdCBvZiBtaXN0YWtlcyBpbiB0aGUgZmlsbSwgYW5kIGZvciBtZSB0aGUgZmlyc3Qgd2FzIHdoZW4gaGVyIGJvc3MgdGVsbHMgaGVyIHNoZSBoYXMgYW4gdWdseSBkcmVzcyBhbmQgc2hvZXMsIiBleHBsYWluZWQgQ2hhc3RhaW4uICJTaGUgY2hhbmdlZCB3aG8gc2hlIHdhcyB0byBmaXQgaW50byB3aGF0IHNoZSB0aG91Z2h0IHNoZSBuZWVkZWQgdG8gYmUsIHRvIGZpbmQgcG93ZXIgYW5kIHN1Y2Nlc3MuIEp1c3Qgd2VhciB0aGUgdWdseSBkcmVzcyBhbmQgdGhlIHVnbHkgc2hvZXMgYW5kIG1ha2UgcGVvcGxlIHJlc3BlY3QgeW91IGZvciBtb3JlIHRoYW4ganVzdCB3aGF0IHlvdSBwcmVzZW50IHBoeXNpY2FsbHkiLiAKRWFjaCB3b21hbiBjb250cm9scyBoZXIgb3duIGFwcCwgcG9zdHMgd2hhdCBzaGUgd2FudHMsIGFuZCBkZWNpZGVzIGV4YWN0bHkgaG93IE5TRlcgc2hlIHdhbnRzIHRvIGJlLi4gClRyZWF0IENQUCBsaWtlIGFuIFJSU1AKR3JpbGxvIENlbnRlcjogUmF5bmF1ZCdzIGRpc2Vhc2UgYXR0YWNrcyB0cmlnZ2VyZWQgYnkgY29sZApJdCBodXJ0IG1lIGFzIHdlbGwgdGhhdCBzaGUgZGlkIHRoYXQuIApDb25zZW50IHRvIHBhc3Qgc2V4dWFsIGFjdGl2aXR5IHdpdGggYW5vdGhlciBwZXJzb24gZG9lcyBub3QgY29uc3RpdHV0ZSBjb25zZW50IHRvIGZ1dHVyZSBzZXh1YWwgYWN0aXZpdHkgd2l0aCB0aGF0IHBlcnNvbi4gQ29uc2VudCB0byBlbmdhZ2UgaW4gc2V4dWFsIGFjdGl2aXR5IHdpdGggb25lIHBlcnNvbiBkb2VzIG5vdCBjb25zdGl0dXRlIGNvbnNlbnQgdG8gZW5nYWdlIGluIHNleHVhbCBhY3Rpdml0eSB3aXRoIGFub3RoZXIgcGVyc29uLiAKTWNEYXZpZCBwYWlkIHRyaWJ1dGUgdG8gIk1yLiBMaW5kc2F5IiBhZnRlciByZWNlaXZpbmcgdGhlIGF3YXJkLgpBIG1pc3Rha2UgYSBub3ZpY2Ugd2lsbCBtYWtlOiBpZiB5b3Ugd2F0Y2ggdGhlIHBsYXllcnMgb24geW91ciB0YWJsZSwgeW91IGNhbiBzcG90IHRoZSBub3ZpY2UgcXVpY2tseSBqdXN0IGJ5IGNlcnRhaW4gY29tbXVuaXR5IGNhcmRzIHRoZXkgcGxheSwgb3IgdGhlIHdheSB0aGV5IHBsYXkgY2VydGFpbiBjYXJkcywgZm9yIGV4YW1wbGU6CldoZW4gSSBkYXRlZCBhIE1ldGhvZGlzdCBnaXJsIHdobyBoYXBwZW5lZCB0byBiZSBhIG1lbWJlciBvZiBteSBtb20gb2xkIGNodXJjaCBiZWZvcmUgc2hlIHN0YXJ0ZWQgZ29pbmcgdG8gbXkgZGFkIGNodXJjaCBhZnRlciB0aGV5IG1hcnJpZWQuIApJbnZlc3QgaW4gYSBkZWRpY2F0ZWQgc2lkZWJ1cm5zIHRyaW1tZXIuIApTbywgdGhvc2UgYXJlIHRoZSBmYWN0cyAgIGJ1dCB0aGUgdW53cmFwcGluZyBwb2ludCBpcyB3aGVyZSBmYW50YXN5IChhbmQgYWR2ZXJ0aXNlbWVudHMpIHN0YXJ0IHRvIHNlcGFyYXRlIGZyb20gcmVhbGl0eS4gCk1vcmUgaW1wb3J0YW50bHksIGEgZGVjbGFyZWQgcmVkIGxpbmUgb2YgdGhlIFVTIGdvdmVybm1lbnQgaGFzIGJlZW4gb25jZSBhZ2FpbiB2aW9sYXRlZCBieSB0aGUgU3lyaWFuIGdvdmVybm1lbnQgYWdhaW5zdCB3aGljaCB0aGUgVVMgaXMgbm90aW9uYWxseSBsZWFkaW5nIGFuIGludGVybmF0aW9uYWwgZWZmb3J0LiBJc2lzIGlzIGFsc28gYSBncm93aW5nIHRocmVhdCBhcyBpdCBoYXMgZXhwYW5kZWQgdGVycml0b3JpZXMgdW5kZXIgaXRzIGNvbnRyb2wgbm93IHJldmVyc2luZyB0byBhIGRlZ3JlZSwgeWV0IHdpdGggc2lnbmlmaWNhbnQgaW5mbHVlbmNlIG92ZXIgaG93IHRoZSBzaXR1YXRpb24gaW4gdGhlIE1pZGRsZSBFYXN0IG1pZ2h0IHRha2Ugc2hhcGUuIFRoZSBsYXR0ZXIgaGFzIGF0dGFja2VkIHRoZSBXZXN0IGF0IGRpZmZlcmVudCBwb2ludHMgaW4gRXVyb3BlIGFuZCB0aGUgVVMgYW5kIFByZXNpZGVudCBUcnVtcCBoYXMgdm93ZWQgdG8gZXJhZGljYXRlIHRoZW0uCkxldCBzYXkgeW91IHJhaXNlIGFuZCBtYWtlIGl0IDcuMDAgdG8gZ28uIEV2ZXJ5Ym9keSBlbHNlIGZvbGRzIGV4Y2VwdCB0aGUgQkIsIHdobyBjYWxscy4gVGhlcmUgMTUuMDAgaW4gdGhlIHBvdCwgMy4wMCBpcyByYWtlZCBmcm9tIGl0LCBzbyB0aGUgcmFrZSBpcyAyMCUuIFRoZSBmbG9wIGNvbWVzLCB0aGUgb3RoZXIgcGxheWVyIGNoZWNrcyB0byB5b3UsIGFuZCB5b3UgZ29pbmcgdG8gYmV0LiBIb3cgbXVjaCBzaG91bGQgeW91IGJldD8gVGhlIHN0YW5kYXJkIHBsYXkgaGVyZSBpcyB0byBiZXQgc29tZXdoZXJlIGFyb3VuZCBoYWxmIHRoZSBwb3Q7IHBlcmhhcHMgc2xpZ2h0bHkgbW9yZS4gSWYgeW91IGJldCA4LjAwLCBhbmQgZ2V0IGNhbGxlZCwgdGhlIHBvdCB3b3VsZCBiZSAzMS4wMCwgYW5kIHRoZSByYWtlIHdvdWxkIGJlIDE2LjEyJS4gSWYgeW91IGJldCA3LjAwLCBob3dldmVyLCBhbmQgdGhlIHZpbGxhaW4gY2FsbHMsIHRoZXJlIGlzIDI5LjAwIGluIHRoZSBwb3QsIGFuZCB0aGUgcmFrZSBpcyAxMy43OSUuIEluIGJvdGggY2FzZXMsIGxldCBzYXkgdGhlIFR1cm4gY2FyZCBjb21lcyBvdXQsIHlvdSBiZXQsIGFuZCB5b3VyIG9wcG9uZW50IGZvbGRzLiBPdmVyIHRoZSBsb25nIHJ1biwgdGhhdCByb3VnaGx5IDIgMS8yJSBkaWZmZXJlbmNlIGluIHJha2UgYmV0d2VlbiBkcmFnZ2luZyBhIDI5LjAwIHBvdCwgYW5kIGRyYWdnaW5nIGEgMzEuMDAgcG90IGFkZHMgdXAsIGFuZCBtb3N0IHBsYXllcnMgbmV2ZXIgZXZlbiBjb25zaWRlciBpdC4KSW4gb3RoZXIgd29yZHMsIGV2ZW4gaWYgYSBsZW5kZXIgbWVzc2VzIHVwLCB0aGV5IGNhbiBjYWxsIHRoZSBub3RlLCB5b3UnbGwgbmVlZCB0byBkZWZlbmQgaXQgYW5kIGNvc3RzIG1heSBvciBtYXkgbm90IGdvIHlvdXIgd2F5LCB5b3UgY2FuIGJlIHJpZ2h0IGFuZCBpdCBjb3VsZCBzdGlsbCBjb3N0IHlvdS4gCkx1ZGRlbiByZXBvcnRlZGx5IHByb3Bvc2VkIHRvIFdoaXRlIHNldmVyYWwgdGltZXMgYmVmb3JlIHNoZSBhY3R1YWxseSBhY2NlcHRlZCwgYWNjb3JkaW5nIHRvIERhaWx5IE1haWwuIFdoaXRlIG5ldmVyIHJlbWFycmllZCBhZnRlciBMdWRkZW4gYW5kIG9uY2UgdG9sZCBMYXJyeSBLaW5nLCB5b3UgaGFkIHRoZSBiZXN0LCB3aG8gbmVlZHMgdGhlIHJlc3Q/IFdoaXRlIGhhcyBhbHNvIHNhaWQsIGhhZCBsb3ZlbHkgcmVsYXRpb25zaGlwcywgYnV0IG5vdCBhbnl0aGluZyBpbiB0aGUgbGVhZ3VlIG9mIEFsbGVuLiBObywgSSB3b24gTm8sIEkgd29uIGxlYXZlIENhbGlmb3JuaWEuIApJbnRveGljYXRpb24gY2FuIGJlIHVzZWQgdG8gZGlzbWlzcyBhIGNvdXJ0IGNhc2UgYmMgImlmIHRoZXkgd2VyZSBkcnVuayBob3cgZG8gd2Uga25vdyB0aGV5IHJlbWVtYmVyIG9yIGRpZG4ndCBjb25zZW50IGFuZCB0aGVuIGZvcmdldCIgd2hpY2ggaXMgZnVja2VkIHVwLi4gClRoZSB0dXhlZG9lZCBjb3VudHJ5IHNpbmdlciBtYXRjaGVkIEp1bGlhbm5lIEhvdWdoIHN0ZXAgZm9yIHN0ZXAsIGdpdmUgb3IgdGFrZSBzb21lIHBvc3R1cmUgcHJvYmxlbXMuIApSZWxpYzIyNzkgIDEyIHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvClNoaXZhYnJlYWtzdGhld29ybGQgIDAgcG9pbnRzICBzdWJtaXR0ZWQgMyBkYXlzIGFnbwpCdXQsIGFzIG15IGdpcmxmcmllbmQgcG9pbnRlZCBvdXQsIHRoZXJlIGFyZSBhbGwgc29ydHMgb2Ygd2F5cyB0byBzdXBwb3J0IHRoZXNlIGNoaWxkcmVuLiAKS2hhbiBoYXMgcGxheWVkIGEgY2xldmVyIGdhbWUsIGhlJ3MgcGxheWVkIHBva2VyLCBoZSBjYW4gY29tZSBvdXQgd2l0aCByaWRpY3Vsb3VzIGRlbWFuZHMgYW5kIEtlbGwgaXMgY29uc2lkZXJpbmcgdGhlbS4KU28sIHRoZSBwcm9iYWJpbGl0eSBvZiBnZXR0aW5nIGF0IGxlYXN0IGEgb25lIG9yIGEgZml2ZSB3aXRoIHR3byBkaWNlIGlzIDEgICA0LzkgPSA1LzkuIE4gKEZ1bGwgQW5zd2VyKS4gCllvdSBkb24gdG9sZXJhdGUgQm9uZHMgcmlkaWN1bG91c25lc3MgZm9yIHRoZSBsYXN0IHRocmVlIHllYXJzICh3aGVuIGhlIHdhcyBubyBsb25nZXIgd29ydGggdGhlIHNpbGxpbmVzcykgd2l0aG91dCBiZWluZyBtb25leSBhcm91bmQgdGhlIGluZHVzdHJ5LgpFdmVuIGlmIGhlIGRpZG4gY29tcGxldGUgdGhlIEFULCBoZSBzdGlsbCBvdXQgdGhlcmUgZG9pbmcgaXQsIGFuZCB0aGF0IGJldHRlciB0aGFuIHNpdHRpbmcgb24gaGlzIGFzcy5CdXQgbWF5YmUgYSBsaXR0bGUgaHVicmlzIHRvIHByZSBhbm5vdW5jZSBhIENZVEMgd2hlbiB5b3UgYXJlbiBldmVuIGEgc2luZ2xlIGNyb3duZXIuIApUaGVzZSBmcmVlIGxlc3NvbnMgYXJlIG9ubHkgZHVwbGljYXRpb25zIG9mIHRoZSByZWFsIGdhbWUgYW5kIGhlbmNlLCB0aGV5IG11c3QgYmUgdGFrZW4gc2VyaW91c2x5LiAKSSBoYWQgd3J1bmcgb3V0IGEgZmV3IGRyb3BzIGFuZCBjb2xsZWN0ZWQgdGhlbSBpbiB0aGlzIHN5cmluZ2UsIGxpa2UgeW91J2QgdXNlIHRvIGZlZWQgYW4gb3JwaGFuZWQgc3F1aXJyZWwuIEl0IHdhcyBhIHBhdGhldGljIGFtb3VudCwgYnV0IHRoZSBudXJzZXMgaW5zaXN0ZWQgdGhlIGJhYnkgbmVlZGVkIGV2ZXJ5IGRyb3AuIApJIGhhdmUgc2VlbiBhaXJwbGFuZXMgcGFzc2VkIHdoZXJlIEkgbGl2ZSBkdXJpbmcgdGhlIG5pZ2h0IGFuZCBJIGtub3cgaG93IHRoZXkgbG9vayBhbmQgc291bmQgYW5kIHRoYXQgb25lIGhhZCBtZSB2ZXJ5IGNvbmZ1c2VkLiBPbmUgdGhlIHZpZGVvIEkgd2FzIGFibGUgdG8gaW5jbHVkZSB0aGUgb3RoZXIgYWlyIGNyYWZ0cy4gCkluIGFjY29yZGFuY2Ugd2l0aCBleHBlcmllbmNlIG5vdCBhbGwgdGhlIHBsYXllcnMgYXJlIGZhbWlsaWFyIHdpdGggdGhlIGJhc2ljIHN0cmF0ZWd5IGFuZCBwcmluY2lwbGVzIG9mIHRoZSBvbmxpbmUgY2FzaW5vcyB0b3VybmFtZW50cy4gQmVjYXVzZSBpbiB0aGUgdG91cm5hbWVudCB5b3UgYXJlIG5vdCBwbGF5aW5nIGFnYWluc3QgdGhlIGNhc2lubyBkZWFsZXIgYnV0IGFnYWluc3QgdGhlIG90aGVyIHBsYXllcnMgeW91ciBjaGFuY2VzIGFyZSBoaWdoZXIgdGhhbiBhdmVyYWdlLCBhbmQgaW4gYW55IHdheSB5b3UnbGwgYmUgaW4gdGhlIHByb2ZpdC4gCkVCdWRkeSBpcyBhIHdlYiBiYXNlZCBpbnN0YW50IG1lc3NhZ2luZyBzZXJ2aWNlLG1lYW5pbmcgeW91IGRvIG5vdCBuZWVkIHRvIGluc3RhbGwgYW55dGhpbmcgbm9yIHlvdSBzaWduaW5nIHVwLiBJbnN0ZWFkLCB5b3UgbG9nIGluIHRocm91Z2ggeW91ciB1c2VybmFtZSBhbmQgcGFzc3dvcmQgZnJvbSBvdGhlciBzb2NpYWwgbmV0d29yayB3ZWJzaXRlcyBvZiB5b3VyIGNob2ljZS4gVGhlcmVmb3JlLCB5b3UgY2Fubm90IGRlbGV0ZSBhbiBlYnVkZHkgaWQgYWNjb3VudCwgaXQganVzdCBkb2Vzbid0IG1ha2Ugc2Vuc2UuIChGdWxsIEFuc3dlcikKSG90ZWwgZGV2ZWxvcG1lbnQgcGlwZWxpbmUgY29tcHJpc2VzIDIsNzQ1IHByb2plY3RzIHRvdGFsaW5nIDMwNCw4MjUgcm9vbXMsIGFjY29yZGluZyB0byB0aGUgQXVndXN0IDIwMTIgU1RSL01jR3JhdyBIaWxsIENvbnN0cnVjdGlvbiBEb2RnZSBQaXBlbGluZSBSZXBvcnQuIFRoaXMgcmVwcmVzZW50cyBhIDMuNSBwZXJjZW50IGRlY3JlYXNlIGluIHRoZSBudW1iZXIgb2Ygcm9vbXMgaW4gdGhlIHRvdGFsIGFjdGl2ZSBwaXBlbGluZSBjb21wYXJlZCB0byBBdWd1c3QgMjAxMS4gCkkgY2hlY2tpbmcgYmVjYXVzZSB0aGUgY2FsbGluZyByYW5nZXMgb2YgYWxsIDMgcGxheWVycyBpbmNsdWRlcyBhIDUuIApCdXQgVHVybml0aW4gY2xhcmlmaWVzIGhvdyBtYW55IGtpbmRzIG9mIHRoZWZ0IGZhbGwgdW5kZXIgdGhlIHBsYWdpYXJpc20gaGVhZGluZywgYW5kIGhvdyBzb3BoaXN0aWNhdGVkLCBhbmQgdGhlcmVmb3JlIGRpZmZpY3VsdCB0byBjYXRjaCwgc29tZSBvZiB0aG9zZSBraW5kcyBvZiB0aGVmdCBjYW4gYmUuIApMYSBwcmVzc2UgY3JpdGUgbidlc3QgcGFzIHBhcmduZSBEYW5zIHVuIGdyYW5kIHF1b3RpZGllbiBwYXJ1IGxlIDA1IGZ2cmllciAyMDEwLCB1biBkZXMgcXVvdGlkaWVucyBsZXMgcGx1cyBkaWZmdXNzIGF1IG5pdmVhdSBuYXRpb25hbCwgb24gYXZhaXQgbGUgcGxhaXNpciBkZSBsaXJlIGxhIHBldGl0ZSBoaXN0b2lyZSBkdSBqb3VyLCBlbiBwYWdlIGRlIGdhcmRlLiBBIGxhIGxlY3R1cmUgZGUgY2V0IGFydGljbGUsIG9uIGFwcHJlbmQgcXUndW5lIGZhbWlsbGUgYSB0IHZhY3VlIHBhciBsYSBwb2xpY2UgZCd1biBjaW5tYSBlbiByYWlzb24gZGUgbGEgcHJzZW5jZSBkJ3VuZSBmaWxsZXR0ZSBkZSAyIGFucyBldCBkZW1pLiAKU28sIGZvciBpbnN0YW5jZSwgc29tZW9uZSBsaWtlIG1lLiAKSSB3b25kZXIgaWYgb3IgaG93IE15c3RyYSBwbGF5cyBpbnRvIHRoaXMuIFNoZSBpcyB0aGUgV2VhdmUsIHNvIEkgZmVlbCBsaWtlIHNoZSBoYXMgYSB2ZXN0ZWQgaW50ZXJlc3RlZCBpbiB0aGUgS25vdCBub3QgZXhwYW5kaW5nLiBJdCB3b3VsZCBhbHNvIGxlbmQgc29tZSBjcmVkZW5jZSB0byB0aGUgaWRlYSB0aGF0IEpoZXNpeXJhIGlzIGV2ZW4gcmVtb3RlbHkgY2FwYWJsZSBvZiBpbnRlcmFjdGluZyB3aXRoIHRoZSBjb25mbGljdC4gCkhlbXNhZSB1CkFuZCBNcnMuIEhlbnJ5IEwuIFN0cmF5ZXIsIFlvcmssIHdlcmUgbG9jYWwgdmlzaXRvcnMgU3VuZGF5LiAKU28gZmlyc3QgdGhpbmcgZmlyc3QsIG9idmlvdXNseSwgY2xlYW4gdGhvc2Ugb3V0IHJlYWxseSBnb29kLCBpZiB5b3Ugc29tZXdoZXJlIHRoYXQgaXRzIG5vdCBtaW51cyBhIG1pbGxpb24gb3V0c2lkZSwgc2NydWIgaXQgd2l0aCBUU1AgKGRpcmVjdGlvbnMgb24gdGhlIGJveCksIHRoZW4gcmlzZSB0aGVtIG91dCBhbmQgbGV0IHNpdCBvdXQgdG8gZHJ5IGZvciBhIGRheS4gT25jZSBkcmllZCwgeW91IGdvaW5nIHRvIHdhbnQgYSBtZXRhbCBwcmltZXIsIHRoYXQgd2lsbCBzdGljayB0byB2aXJ0dWFsbHkgYW55dGhpbmcuIEJlc3QgYmV0IGhlYWQgdG8gYSBsb2NhbCBwYWludCBzdG9yZSBsaWtlIFNoZXJ3aW4sIFBQRy9Qb3J0ZXIvUGl0dHNidXJnaCBwYWludHMsIG9yIGV2ZW4gYW4gYWN0dWFsIGhhcmR3YXJlIHN0b3JlIChub3QgdGhlIGJveCBzdG9yZSB2YXJpZXRpZXMpICAgSSBzYXkgaGFyZHdhcmUgc3RvcmUgYXMgaW4gdGhlIHRvd25zIHZzIGNpdGllcyB0aGV5IHVzdWFsbHkgY2FycnkgcHJvZHVjdHMgbGlrZSB0aGF0IGZvciB0aG9zZSBvdXQgb24gZmFybXMgYW5kIHN1Y2gsIGdldCB0aGUgcmVjb21tZW5kZWQgbWV0YWwgcHJpbWVyLCBidXQgYmUgc3VyZSB0byBhc2sgdGhlbSBhYm91dCB0b3AgY29hdGluZyBpdCB3aXRoIHJlZ3VsYXIgaW50ZXJpb3IgcGFpbnQsIGFzIHNvbWUgb2YgdGhlIG1ldGFsIHByaW1lcnMgY2FuIGJlIGhpZ2ggaW4gVk9DIGFuZCB3b24gd29yayB3aXRoIG5vcm1hbCBwYWludCAoYWxzbyBzcGVjaWZ5IHRoYXQgdGhpcyBpcyBmb3IgY3VwYm9hcmQpLiBNb3N0IG1ldGFsIHByaW1lcnMgd2lsbCBiZSBvaWwgYmFzZWQsIHNvIHRoaXMgbmVlZHMgdG8gYmUgZG9uZSBpbiBhdCBsZWFzdCArMTVDIHdlYXRoZXIgKDYwIGZyZWVkb20gdW5pdHMpLCBhbmQgd2lsbCB0YWtlIGF0IGxlYXN0IGEgZGF5IHVubGVzcyB5b3UgZ2V0IHNvbWUgZmFzdCBkcnlpbmcgcHJvZHVjdC4KU2Fya2FyIDMgMjAxNyBXYXRjaCBPbmxpbmUgUGxheSBmdWxsIG1vdmllIGRvd25sb2FkIDEyIE1heSAyMDE3LiBCb2poZW5hIFNlIEJvamhlbmEgTHlyaWNzIEJlbmdhbGkgTW92aWUgVGl0bGUgc29uZyBzdW5nIGJ5IEFyaWppdCBTaW5naCBGdCBTb2hhbSAuIFRoZSBmaWxtIGlzIGFuIHRhaiBtYWhhbCBmdWxsIG1vdmllIGZyZWUgZG93bmxvYWRpbnN0bWFuayA1IFN0cmluZyBGcmV0bGVzcyBNb3VudGFpbiAuIApGYXZvcml0ZSBzdHJldGNoIGZvciB0aGUgaGlwIGZsZXhvcnMgaXMgZWFzeSB0byBwZXJmb3JtIHdpdGhvdXQgbXVjaCBjaGFuY2Ugb2Ygc3RyYWluaW5nIHlvdXIgbG93IGJhY2suIEJlZm9yZSBzdGFydGluZyB0aGUgc3RyZXRjaCwgcHVsbCBvbmUga25lZSB0b3dhcmQgeW91ciBjaGVzdCB0byBmbGF0dGVuIGFuZCByb3RlY3QgeW91ciBsb3dlciBiYWNrLiAKQWxvbmUsIHRoZXkncmUgbm90IHdoYXQgeW91J3JlIGxvb2tpbmcgZm9yLCBidXQgdGhleSdyZSBhbm90aGVyIHBpZWNlIG9mIHRoZSBwdXp6bGUsIG9uZSB0aGF0IGV4cGxvcmVzIHF1aWNrbHkgYm90aCBob3cgYW5kIHdoeSB0aGUgbWV0YSBpcyBldm9sdmluZyBpbiB0aGUgd2F5IGl0IGlzLCBhbmQgd2hhdCBmdW5kYW1lbnRhbCBhc3BlY3RzIG9mIHRoZSBnYW1lIGNlcnRhaW4gc3RyYXRlZ2llcyBtYW5pcHVsYXRlLCBpZ25vcmUsIG9yIGV4cGxvaXQuIApGb3IgYSBjb2ZmZWUgbG92aW5nIG9mZmljZXIsIGdpdmUgdGhlIGdpZnQgb2YgYSBjb21wYWN0IHRyYXZlbCBjb2ZmZWUgbWFrZXIgb3IgYSBmZXcgbW9udGhzJyBtZW1iZXJzaGlwIGZyb20gYSBjb2ZmZWUgZGVsaXZlcnkgc2VydmljZS4uIApUb3JvbnRvIGhvdXNpbmcgbWFya2V0IHBvc3RlZCBpdHMgYmlnZ2VzdCBtb250aGx5IHNhbGVzIGRlY2xpbmUgaW4gYSB5ZWFyIGxhc3QgbW9udGgsIHByb21wdGluZyB0aGUgY2l0eSByZWFsdG9yIGJvYXJkIHRvIGNhbGwgZm9yIGEgcmV2aWV3IG9mIG5ldyBtb3J0Z2FnZSBydWxlcyBpdCBzYXlzIGFyZSBrZWVwaW5nIGJ1eWVycyBvbiB0aGUgc2lkZWxpbmVzLgoiSXQncyBiZWVuIGxpa2UgYSB0b3RhbCBkcmVhbSBjb21lIHRydWUsIiBHb2xkIHNhaWQuCllvdSBuZWVkIHRvIHVuZGVyc3RhbmQsIHRoaXMgY2hhbmdlcyBldmVyeXRoaW5nIGFib3V0IHdobyBoZSBpcywgYWJzb2x1dGVseSBldmVyeXRoaW5nLiBIZSBub3QgdGhlIHNhbWUgcGVyc29uLCBiZWNhdXNlIGhlIGp1c3QgZm91bmQgb3V0IHRoYXQgaGUgYmVlbiBsaWVkIHRvIGZvciBoaXMgZW50aXJlIGxpZmUhIE5vdCB0byBtZW50aW9uIHRoZSBmYWN0IHRoYXQgYm95cyBsZWFybiBmcm9tIGFuZCBhYm91dCBob3cgdG8gYmUgdGhlaXIgb3duIHBlcnNvbiBmcm9tIHRoZWlyIGZhdGhlciwgZWl0aGVyIGZvbGxvd2luZyB0aGVpciBsZWFkIG9yIGRpc3RhbmNpbmcgdGhlbXNlbHZlcyBmcm9tIHRoYXQgZmF0aGVyIGJlaGF2aW91ci4gTm93IGhlIHF1ZXN0aW9uaW5nIHdobyBoZSBpcywgd2h5IG5vYm9keSBsb3ZlZCBoaW0gZW5vdWdoIHRvIHRlbGwgaGltLCB3aHkgaGlzIGJpb2xvZ2ljYWwgZGFkIGRpZG4gd2FudCBoaW0sIGFuZCBzbyBvbiwgYW5kIHNvIG9uLi4gCk5vcGUgcGVvcGxlIGFyZSBmaW5lISBJdCdzIGp1c3QgYW5pbWFscyB0aGF0IHNoZSBkb2Vzbid0IGtub3cuIFNoZSBsb3ZlcyBiZWluZyBwZXR0ZWQgYW5kIGhhc24ndCBldmVyIGJlZW4gYWdncmVzc2l2ZSB0b3dhcmRzIGh1bWFucyB1bmxlc3MgdGhleSBhcHByb2FjaCBoZXIgYWdncmVzc2l2ZWx5LiBTaGUgaGFzbid0IG1ldCBtYW55IGtpZHMgYnV0IHRoZSBvbmVzIHNoZSBoYXMgbWV0IHNoZSBoYXMgYmVlbiB0b3RhbGx5IGZpbmUgd2l0aC4gdHVnZ2luZyBoZXIgaGFpciwgZXRjKSBidXQgc2hlIHdvdWxkbid0IGV2ZXIgYXR0YWNrIHRoZW0hCk9OIFRIRSBCTE9DSzogVGhlcmUgd2FzIHBsZW50eSB0byBsaWtlIGFib3V0IENhcmx0b24ncyBmaXJzdCBoYWxmIGFuZCBub3RoaW5nIHRvIGxpa2UgYWJvdXQgaXRzIHNlY29uZCBoYWxmLiBKYWNrIFNpbHZhZ25pIGNvdWxkIG11c3RlciBqdXN0IGZvdXIgZGlzcG9zYWxzIGFuZCBoZSdsbCBuZWVkIGEgYmlnIHdlZWsgb24gdGhlIHRyYWluaW5nIHRyYWNrIHRvIHN1cnZpdmUgdGhlIGN1dCB0aGlzIHdlZWsuIEluIHRvdGFsLCBzaXggQmx1ZXMgZmFpbGVkIHRvIHJlYWNoIGRvdWJsZSBmaWd1cmUgZGlzcG9zYWxzLiAKVGhlIHRvcCBvZiB0aGUgZ2F5IGVjaGVsb24uIFRoZSAiQSIgZXN0IG9mIGdheXMgd2lsbCBhbHdheXMgbGl2ZSBpbiBoaWdoIHByb2ZpbGUgZmFzaGlvbiBmb3J3YXJkIGNpdGllcyBsaWtlIFNhbiBGcmFuY2lzY28sIExvcyBBbmdlbGVzIG9yIE5ldyBZb3JrLiBBbHRob3VnaCBtYW55IHdpbGwgbWFrZSBkbyBpbiBsZXNzZXIgY2l0aWVzIGJ1dCB0aGV5IHdpbGwgc3RpbGwgaGF2ZSBUSEUgbW9zdCBiZWF1dGlmdWwgaG91c2UgaW4gdGhlIG5laWdoYm9yaG9vZCBhbmQgdHdvIEF1ZGlzIGluIHRoZSBkcml2ZXdheS4gQW4gQSBnYXkgcGFydHkgaXMgbmVpdGhlciBBIGVub3VnaCBub3IgZ2F5IGVub3VnaCB1bnRpbCBzb21lb25lIHN0YXJ0cyB0YWxraW5nIGFib3V0ICJ0aGUgcmVtb2RlbCIgYXMgaWYgZXZlcnlvbmUgaGFzIG9uZSBldmVudHVhbGx5IGFuZCBzdHJ1Z2dsZXMgd2l0aCBsaWZlJ3MgbW9zdCBwZXJwbGV4aW5nIGRlY2lzaW9ucyAgIGdyYW5pdGUgb3IgbWFyYmxlIGNvdW50ZXJ0b3BzPyBUaGV5IG1heSBoYXZlIGZvdW5kIHNvbWUgbG92ZWx5IGRvbWVzdGljIHRpbGVzIGZvciB0aGUgYmF0aHJvb20gYnV0IG9vb28gdGhpcyBpbXBvcnRlZCBJdGFsaWFuIHRpbGUgaXMgZXhxdWlzaXRlLCBidXQgc28gaGFyZCB0byBjYXJlIGZvci4KVGhlcmUgaGF2ZSBiZWVuIGdyb3dpbmcgcGFpbnMsIGNvbmNlZGVkIEZyYW5jZSwgd2l0aCBjcm93ZGVkIGNpdHkgYnVzZXMsIGhvdXNpbmcgaXNzdWVzLCBsYW5ndWFnZSBkaWZmaWN1bHRpZXMgYW5kIGN1bHR1cmFsIGhpY2N1cHMuIEJ1dCBzaGUgc2VlcyBwZXJtYW5lbnQgYmVuZWZpdHMgZm9yIFdpbmRzb3IgYW5kIENhbmFkYSB3aXRoIG1hbnkgb2YgdGhvc2Ugc2tpbGxlZCBhbmQgb2Z0ZW4gaGlnaGx5IGVudHJlcHJlbmV1cmlhbCBzdHVkZW50cyBwbGFubmluZyB0byByZW1haW4gaW4gdGhpcyBjb3VudHJ5LgpZb3VyIHNpdHVhdGlvbiBzZWVtcyBhbG90IGxlc3MgY29udm9sdXRlZCBhbmQgSSBhc3N1cmUgeW91IGJlaW5nIHRydXRoZnVsIHdpdGggeW91ciBjaGlsZHJlbiBpcyB0aGUgYmVzdCB0aGluZyBwb3NzaWJsZSwgYWxsIHNoZSBoYXMgZG9uZSBpcyBtYWtlIHlvdXIgc29uIHdhcnkgb2Ygd2hhdCBzaGUgaGFzIHNhaWQgYW5kIGl0cyBub3QgYSB0cnVzdCB0aGF0IHNoZSB3aWxsIGVhcm4gYmFjayBzbyBlYXNpbHkuIEluc3RlYWQgb2YgdGVsbGluZyB0aGVtIHRoZSB0cnV0aCBpbiB0aGUgZmlyc3QgcGxhY2UgKEkgc3VyZSB5b3UgY2FuIHNwaW4gaXQgaW4gYSB3YXkgdG8gbWFrZSBpdCBzb3VuZCBnb29kKSBzaGUgaGl0IHRoZSBiYWxsIHRvIHlvdSBleHBlY3RpbmcgeW91IHRvIGxpZSB0byBwcm90ZWN0IGhlci4gQW4gaW5zYW5lbHkgc3R1cGlkIGNob2ljZS4KV2F0ZXJzLCB0d28gbWV0cmVzIGluIGRlcHRoLCBndXNoZWQgZG93biB0aGVpciBlcXVpdmFsZW50IG9mIFNob3AgU3RyZWV0LiBUZW4gdW5mb3J0dW5hdGUgc291bHMgcGVyaXNoZWQuIEZvdXIgaGF2ZSBub3QgYmVlbiBmb3VuZC4gQW5kIHByb2JhYmx5IG5ldmVyIHdpbGwgYmUuIEpvZSBBdm9uIEFyZWxvZ28sIGEgMjAgeWVhciBvbGQgZmFybWVyLCB0b2xkIG1lIHRoYXQgb24gdGhhdCBkYXkgYSBmdW5lcmFsIGNvcnRlZ2Ugd2FzIG9uIGl0cyB3YXkgdG8gYSBjZW1ldGVyeSBpbiB0aGUgY291bnRyeXNpZGUuCkl0IHdhcyBmb2xsb3dlZCBieSBMb3MgQW5nZWxlcywgd2hpY2ggcGFpZCBhIG9mICQzNS4yMiBwZXIgaG91ciBvciAkNzMsMjUwIHBlciB5ZWFyLiAKWW91IGdheSBhbmQgaGF2ZSBzZXggd2l0aCBvdGhlciBtZW4uIApTaGFycCBoYWQgYSBodWdlIHllYXIgd2l0aCBEYWxsYXMgYW5kIFN0ZXBoZW4gSm9obnMgaXMgbm93IGEgMjUgeWVhciBvbGQgc3RhcnRpbmcgZCBtYW4gd2hvIGlzIHByb2JhYmx5IGJldHRlciB0aGFuIGF0IGxlYXN0IDMgZ3V5cyBvbiBvdXIgY3VycmVudCBkIGxpbmUuIAoxKSBTdW5nbGFzc2VzIChvZnRlbiBjb21iaW5lZCB3aXRoIGhlYWRwaG9uZXMgYW5kIGhvb2RpZSB1cCkuIFNlZW1zIHRvIGJlIHRoZSBwcmVzZXJ2ZSBvZiB3YW5uYWJlIFBIIHNoaXRyZWdzIHdobyB0aGluayB0aGlzIGlzIGFjdHVhbGx5IGdpdmluZyB0aGVtIGFuIGVkZ2UuIEFsc28gdGhleSBhbGwgc2VlbSB0byB0YWtlIHRoaW5ncyBzdXBlciBzZXJpb3VzbHkgbGlrZSB0aGV5IGFyZSBhdCB0aGUgTUUgRlQgZXZlbiB0aG91Z2ggdGhleSBhcmUgc2hvcnQgc3RhY2tpbmcgMS8yLgpOb3csIEkgbmV2ZXIgZGlyZWN0ZWQgYSByYWNlIGJlZm9yZSBhbmQgSSBzdXJlIHRoaW5ncyBjYW4gZ28gd3JvbmcsIGJ1dCB3YWl0aW5nIHRpbGwgYSBjb3VwbGUgd2Vla3Mgb3V0IHRvIHRlbGwgdXM/SSBkb24gdGhpbmsgSSBnb2luZyB0byBib3RoZXIgd2l0aCB0aGlzLiAKVGhlIG1vc3QgcG9wdWxhciBzdHVkIGNhcmQgcG9rZXIgaXMgdGhlIHNldmVuIGNhcmQgc3R1ZC4gClRoZXJlIGFyZSBhIHRvbiBvZiBoYW5kcyB5b3UgYXJlIGFoZWFkIG9mIHRoYXQgeW91IGNhbiBnZXQgdmFsdWUgYW5kIG1vc3Qgb2YgdGhlIGhhbmRzIHRoYXQgYXJlIGFoZWFkIG9mIHlvdSBhcmUgZ29pbmcgdG8gcmFpc2UgdGhpcyBmbG9wIGJldCBlc3BlY2lhbGx5IG11bHRpIHdheSB3aGljaCBtYWtlcyBmb3IgYSByZWxhdGl2ZWx5IGVhc3kgZm9sZC4gClBNVSBoYXMgYmVlbiBsaWNlbnNpbmcgYW5kIGV4cG9ydGluZyBpbWFnZXMgb2YgRnJlbmNoIHJhY2VzIHRocm91Z2ggdGhlc2UgbmV0d29ya3Mgc2luY2UgMTk4NyBhbmQgaGFzIGJlZW4gb2ZmZXJpbmcgRnJlbmNoIGJldHRvcnMgZm9yZWlnbiByYWNlcyBzaW5jZSAxOTk3LiBBY2NvcmRpbmcgdG8gQXltZXJpYyBWZXJsZXQsIFBNVSBpbnRlcm5hdGlvbmFsIGRldmVsb3BtZW50IGRpcmVjdG9yLCBleHBhbnNpb24gaXMgZXh0cmVtZWx5IGltcG9ydGFudCBmb3IgdGhlIGZ1dHVyZSBvbiBib3RoIGZyb250czogb2ZmZXJpbmcgbW9yZSBmb3JlaWduIHJhY2VzIGZvciBGcmVuY2ggYmV0dG9ycyBhbmQgb2ZmZXJpbmcgbW9yZSBGcmVuY2ggcmFjZXMgdG8gYmV0dG9ycyBhYnJvYWQuIFdlIGFyZSBjb250aW51b3VzbHkgbG9va2luZyB0byBicm9hZGVuIG91ciBwYXJ0bmVyc2hpcCBiYXNlIGFuZCBkZWVwZW4gb3VyIHJlbGF0aW9uc2hpcCB3aXRoIHRoZXNlIHBhcnRuZXJzLgpUaGF0IHdhcyBteSBwb2ludCwgd2UgYWxyZWFkeSBwYXJjZWwgb3V0IHJlc3BvbnNpYmlsaXR5IGZvciAiY3JpbWluYWwgYWN0cy4iIFBlb3BsZSBhcmUgYWN0aW5nIGxpa2UgdGhpcyBpcyBpbmNvbmNlaXZhYmxlLCB3ZSBsaXZlIHdpdGggaXQgZXZlcnkgZGF5LiBhbmQgaXQgd29ya3Mgb3V0IHJlYWxseSB3ZWxsIG1vc3Qgb2YgdGhlIHRpbWUuClRleGFzIEhvbGQnZW0gaXMgYSBzZXZlbiBjYXJkIHN0dWQgZ2FtZSB3aGVyZSB5b3UgZHJhdyBiYWNrIHRvIHRoZSBiZXN0ClNtb290aCBtdXNjbGUgaGFzIHRoZSBhYmlsaXR5IHRvIHN0cmV0Y2ggYW5kIG1haW50YWluIHRlbnNpb24gZm9yIGxvbmcgcGVyaW9kcyBvZiB0aW1lLiAKSSBnZXQgdGhpcyB0b3RhbGx5LiBGb3IgbWUgSSB0aGluayBpdCBtb3N0bHkgY2VudGVycyBhcm91bmQgdGhlIGdyb3VwIG9mIGZyaWVuZHMgSSBhbSBhcm91bmQuIEl0J3MgbGlrZSBldmVyeSB0aW1lIEkgY2hhbmdlIG15IGNpcmNsZSBvZiBmcmllbmRzIHdoZXRoZXIgdGhyb3VnaCBhIGNoYW5nZSBvZiBob2JiaWVzIG9yIG1vdmluZyB0byBhIG5ldyBwbGFjZSwgSSBzdGFydCB0byBhZGFwdCB0byB3aGljaCByb2xlIEkgcGxheSBpbiB0aGF0IGdyb3VwIG9mIGZyaWVuZHMuIFRoZW4gb3ZlciB0aW1lIEkganVzdCBBTSB0aGF0IHBlcnNvbi4gVGhlbiBJIG1vdmUgYXdheSBhZ2FpbiBhbmQgb3ZlciB0aW1lIHRoYXQgb2xkIHBlcnNvbiBkaWVzIGFuZCBJIGJlY29tZSBhIG5ldyBwZXJzb24uIEkgbmV2ZXIgbm90aWNlIHRoYXQgY2hhbmdlIGluIG15c2VsZiB1bmxlc3MgSSBsb29rIGJhY2sgb3ZlciB0aGUgbGFzdCAxMCAxNSB5ZWFycyBhbmQgdGhpbmsgb2YgdGhlIHRoaW5ncyBJJ3ZlIHNhaWQgb3IgZG9uZSBhbmQgdGhpbmsgYWJvdXQgaG93IEkgd291bGQgbmV2ZXIgZXZlbiBoYXZlIHRob3NlIHRob3VnaHRzIG5vdy4gRXNwZWNpYWxseSB0aGUgbW90aXZhdGlvbnMgb2YgdGhlIGJlaGF2aW9ycy4KSWYgeW91IGVuam95IGEgcmVndWxhciBnYW1lIG9mIHBva2VyIHdpdGggeW91ciBmYW1pbHkgYW5kIGZyaWVuZHMgdGhlbiB3aHkgbm90IGdpdmUgeW91ciBnYW1lcyBtb3JlIG9mIGEgZmxhdm9yIG9mIHRoZSBjYXNpbm8gd2l0aCAxMDAgUHJvIENsYXkgMTNnIHBva2VyIGNoaXAgc2V0LiBQb2tlciBpcyBtdWNoIG1vcmUgZnVuIGlmIGl0IGZlZWxzIGxpa2UgeW91IGFyZSBwbGF5aW5nIGZvciByZWFsIGFuZCBzb21lIHByb2Zlc3Npb25hbCBjaGlwcyBjYW4gZ2l2ZSB5b3VyIGdhbWVzIGEgdG91Y2ggb2YgY2FzaW5vIGV4Y2l0ZW1lbnQuCkNhbmFkaWFuIG1pbmluZyBjb21wYW55IGhvcGVzIExpYmVyYWxzIHdpbGwgaW50ZXJ2ZW5lIGluIHRheCBkaXNwdXRlIHdpdGggTWV4aWNvCk1heGltdW0gYW5kIEF2ZXJhZ2UgRk0gZGV2aWF0aW9uLCBhbmQgUkYgZnJlcXVlbmN5IGVycm9yIHJlYWRvdXRzIChkaWZmZXJlbmNlIGJldHdlZW4gc3BlY2lmaWVkIGZyZXF1ZW5jeSBhbmQgYXZlcmFnZSBhY3R1YWwgZnJlcXVlbmN5IG9mIGNhcnJpZXIpLiBVc2VmdWwgZm9yIGFueW9uZSB0cnlpbmcgdG8gdGVzdCBvciBjaGVjayB0cmFuc21pdHRlciBzcGVjcy4KVGFrZSBoZWxwIGZyb20gZ2FtYmxpbmcgcmVzb3VyY2VzIGxpa2UgYXJ0aWNsZSBvbiBzdHJhdGVnaWVzLCB0aXAsIGFkdmljZSwgcnVsZXMsIG5ld3MgcmV2aWV3cywgYW5kIG9mZmVycyB0byBrZWVwIHlvdSBpbmZvcm1lZCBvbiBsYXRlc3QgdXBkYXRlcyBhbmQgcHJvbW90aW9ucyBpbiBjYXNpbm8gZ2FtYmxpbmcgaW4gVUsgYW5kIHdvcmxkd2lkZS4gVGhlcmUgYXJlIHZhcmlvdXMgdHlwZXMgb2YgcG9ydGFscyBvbiB3d3cgdG8gcGxheSBjYXNpbm8gb25saW5lIHRoYXQgb2ZmZXIgZnJlZSBnYW1pbmcgb3IgZ2FtYmxpbmcsIGZyZWUgc2xvdCBnYW1lLCBjYXNoIGJvbnVzLCByZXdhcmRzLCBqYWNrcG90LCBmb3J0dW5lIGFuZCBubyBkZXBvc2l0IGdhbWluZy4gTWFueSBwb3J0YWxzIG9uIGdhbWJsaW5nIG9ubGluZSBvZmZlciBsaXN0IG9yIGRpcmVjdG9yeSBvZiBvbmxpbmUgY2FzaW5vIHNpdGVzIGFuZCBvbmxpbmUgY2FzaW5vIGhhbGxzIHRoYXQgb2ZmZXJzIG9ubGluZSByb3VsZXR0ZSwgSW50ZXJuZXQgYmluZ28sIGNyYXBzIG9ubGluZSwgb25saW5lIGJsYWNramFjayBnYW1lLCBvbiBsaW5lIHNsb3QsIGFuZCB2aWRlbyBzbG90Lgo3KSAiSG9tbyBzYXBpZW5zIGV2b2x2ZWQgaW4gYW4gb21lZ2EgMyByaWNoIG51dHJpdGlvbmFsIGVudmlyb25tZW50LiIKIlRoaXMgY3Vpc2luZSB3YXMgY3JlYXRlZCBieSB0aGUgZmlyc3QgQ2hpbmVzZSBtZW4gd2hvIGNhbWUgdG8gdGhpcyBjb3VudHJ5LiBNYW55IG9mIHRoZW0gd2VyZW4ndCBldmVuIHRyYWluZWQgY29va3MuIFRoZXkgY2VydGFpbmx5IGRpZG4ndCBoYXZlIGFjY2VzcyB0byBpbmdyZWRpZW50cyB0byBjb29rIGF1dGhlbnRpYyBDaGluZXNlIGZvb2QuIFRoZXkgYWxzbyB3b3VsZG4ndCBoYXZlIGhhZCBDaGluZXNlIGN1c3RvbWVycy4gVGhleSB3ZXJlIHZlcnkgbXVjaCBpbXByb3Zpc2luZyBhbmQgYmVpbmcgYXMgY3JlYXRpdmUgYXMgdGhleSBjb3VsZCBnaXZlbiB0aGUgY2lyY3Vtc3RhbmNlcywiIHNoZSBzYXlzLiAiVGhpcyB3YXMgYWxzbyBmb29kIHRoYXQgd2FzIGJvcm4gb3V0IG9mIHN0cnVnZ2xlLiBUaGVzZSBtZW4gd2VyZSB3b3JraW5nIGluIGtpdGNoZW5zIG9ubHkgYmVjYXVzZSB0aGV5IHdlcmUgZm9yYmlkZGVuIGFuZCBwcm9oaWJpdGVkIGZyb20gd29ya2luZyBpbiBvdGhlciBwcm9mZXNzaW9uYWwgaW5kdXN0cmllcy4gU28gdGhleSB3ZXJlIGZhY2luZyBlY29ub21pYyBiYXJyaWVycywgdGhleSB3ZXJlIGZhY2luZyBkaXNjcmltaW5hdGlvbiwgdGhleSB3ZXJlIGZhY2luZyByZWFsIHJhY2lzbSBhbmQgdGhlc2UgZGlzaGVzIHdlcmUgdGhlaXIgYW5zd2VyIHRvIHRoYXQuIFRoZXNlIGRpc2hlcyB3ZXJlIHRoZWlyIHdheSBvZiBnZXR0aW5nIHBhc3QgdGhvc2UgYmFycmllcnMgd2l0aCBpbmdlbnVpdHkgYW5kIHBlcnNldmVyYW5jZS4gQW5kIEkgdGhpbmsgdGhhdCBpdCBqdXN0IHRlbGxzIHN1Y2ggYW4gYW1hemluZyBzdG9yeSBhYm91dCBDYW5hZGEgYW5kIHdobyB3ZSB3ZXJlIGFuZCB3aGVyZSB3ZSBjb21lIGZyb20uIgpbTGVzIGRpcGxtcyBzb250IHBsdXMgcmFyZXMgY2hleiBsZXMgZGppaGFkaXN0ZXMgb2NjaWRlbnRhdXhdLi4gCkFnZSBpcyBub3RoaW5nIGluIG11c2ljIGFzIGxvbmcgYXMgeW91ciBicmFpbiBhbmQgZmluZ2VycyBzdGlsbCB3b3JrLiAKSXQgY2FuIGFsc28gYmUgb25lIG9mIHRoZSBtb3N0IGNvc3RseSBkZWNpc2lvbnMgaWYgeW91IGNvbnRpbnVlIGFmdGVyIHRoZSBmbG9wIHdpdGggYW4gaW5mZXJpb3IgaGFuZC4gClRocm91Z2hvdXQgdGhlIHdlZWssIHRoZXkgd2lsbCB0YWtlIHBhcnQgaW4gc2tldGNoZXMsIHNvbmdzIGFuZCB2YXJpb3VzIExhdGUgTGF0ZSBTaG93IHNlZ21lbnRzLCBpbmNsdWRpbmcgWW91ciBHdXRzIG9yIEZpbGwgWW91ciBHdXRzLCBhIGJyYW5kIG5ldyBLYXJhb2tlLCBwbHVzIHRoZSB3b3JsZCBwcmVtaWVyZSBtdXNpY2FsIHBlcmZvcm1hbmNlIG9mIHRoZWlyIG5ldyBzaW5nbGUsIHRoZSBuZXdseSByZWxlYXNlZCB0ZWFzZXIgZm9yIHRoZWlyIHVwY29taW5nIHdlZWsgb24gVGhlIExhdGUgTGF0ZSBTaG93LCB0aGUgYmFuZCBvZmZpY2lhbGx5IGFubm91bmNlcyB0aGVpciByZXVuaW9uIGFuZCBwcmVtaWVyZXMgYSBjbGlwIG9mIHRoZWlyIGJyYW5kIG5ldyBzaW5nbGUsIHdpbGwgYmUgcmVsZWFzZWQgb24gRnJpZGF5LCBNYXJjaCAxIGF0IDEyOjAwIEFNLCBFVCB3b3JsZHdpZGUgdmlhIFJlcHVibGljIFJlY29yZHMuIApCdXQgSSBvbmx5IGFibGUgdG8gZG8gdGhpcyBiZWNhdXNlIEkgaGF2ZSBhIGxvdCBzYXZpbmdzIChJIGZydWdhbCkgYW5kIGEgdmVyeSBzdXBwb3J0aXZlIGZhbWlseSwgYnV0IGV2ZXJ5b25lIHNpdHVhdGlvbiBpcyBkaWZmZXJlbnQuIApQbGF5aW5nIHBva2VyIGJyb3VnaHQKSSByZWNvbW1lbmQgcmVhZGluZyBFZCBNaWxsZXIncyBib29rcyBvbiBsb3cgc3Rha2VzIGNhc2ggZ2FtZSBzdHJhdGVneS4gSXQgY291bGQgaGVscCB5b3UgdHVybiB0aGUgY29ybmVyIGFuZCBiZWNvbWUgcHJvZml0YWJsZSBpbiBjYXNoIGdhbWVzLiBZb3VyIGV4cGVyaWVuY2UgaW4gdG91cm5leXMgd2lsbCBoZWxwLCB0b28uCkFzIGZvciBQUEEgaW4gbGVmdGllcywgeWVzLCBpZiB0aGUgc3ltcHRvbSBjcml0ZXJpYSBhcmUgbWV0IGZvciBQUEEsIHRoZW4gdGhlIG5ldXJvbmFsIGRlZ3JlZGF0aW9uIGlzIGZvdW5kIHdoZXJldmVyIHRoZSBsYW5ndWFnZSBpcyBsb2NhdGVkIGluIHRoYXQgcGVyc29uIGJyYWluLCBldmVuIGlmIGl0IG9uIHRoZSByaWdodC4gVGhlIG1ldGFsIGNvaWxzIHJ1c3RlZCBvdXQgbGFzdCB3aW50ZXIsIGJ1dCB0byBiZSBmYWlyIEkgd2FzIGxlYXZpbmcgdGhlbSBpbiB0aGUgZ2FyYWdlIGxhc3QgeWVhciB3aGVuIGJlZm9yZSBJIHdvdWxkIGJyaW5nIHRoZW0gYmFjayBpbiB0aGUgaG91c2Ugd2l0aCBtZS4gSSB0aG91Z2h0IHRoZXkgZGVmaW5pdGVseSBtYWRlIGEgcHJldHR5IGJpZyBkaWZmZXJlbmNlIGluIHBhY2tlZCBzbm93IGFuZCBpY2UsIGFsdGhvdWdoIEkgc3RpbGwgZmVsdCBJIG5lZWRlZCB0byBhZGp1c3QgbXkgc3RyaWRlIGEgYml0IGluIGNlcnRhaW4gY29uZGl0aW9ucy4gCkNoaWxkcmVuIGFnZWQgMyB0byA1IHllYXJzIHdhdGNoIGFuIGF2ZXJhZ2Ugb2YgMiBob3VycyBvciBtb3JlIG9mIHRlbGV2aXNpb24gcGVyIGRheSwgYW5kIG11Y2ggb2YgdGhpcyBpcyBub3QgZGV2b3RlZCB0byBlZHVjYXRpb25hbCBwcm9ncmFtbWluZy4KVGhlIGlyb255IG9mIHRoYXQgYmVpbmcgdGhlIGtpbmcgb2YgaGVhcnRzIHdlbGwgcGlzc2VzIG1lIG9mZiB0aWxsIHRoZSBwb2ludCBvZiBiZXlvbmQgb2JzZXNzaXZlIG1vdGl2YXRpb24uIApZZXMgc29tZSBvZiB0aGVzZSBzY29yZXMgYXJlIGxpa2VseSB0cm9sbGluZy4gUlQgd2lsbCBsaWtlbHkgcHVyZ2UgdGhvc2UgYW5kIHNldCB0aGUgc2NvcmUgc3RyYWlnaHQgYWZ0ZXIsIGJ1dCBhZ2FpbiBsZXRzIGxvb2sgYXQgdGhlIGRpc2NyZXBhbmNpZXMuIEF0IHRoZSB0b3Agb2YgdGhlIGNoYXJ0IHRoZSBudW1iZXJzIGNvbnNpc3RlbnRseSBrZWVwIG9uIHRoZSBzYW1lLiAKV2FzIHJpZ2h0IHRvIHN1Z2dlc3QgdGhlIGNvbG9yIGxpbmUgd291bGQgYmUgdGhlIHByb2JsZW0gb2YgdGhlIHR3ZW50aWV0aCBjZW50dXJ5LiByZW1haW5zIHRvIGJlIHNlZW4sIHdpdGggb3VyIGZpcnN0ICJCbGFjayIgUHJlc2lkZW50LCB3aGV0aGVyIG9yIG5vdCBpdCB3aWxsIHJlbWFpbiB0aGUgcHJvYmxlbSBvZiB0aGUgdHdlbnR5IGZpcnN0Li4gCkkgY2FuIGFkanVzdCBteSBzY2hlZHVsZSB0byBzdWl0IHlvdS4gCllvdSBzZWUgcmVkIHlvdSBmZWVsIGZlYXIgYW5kIHlvdXIgbG93ZXIgc3RhdHVzLCBhbmQgeW91ciB0ZXN0b3N0ZXJvbmUgd2lsbCBkcm9wLCBzYXlzIEVsbGlvdC4gCkluIG9yZGVyIGZvciB0aGUgZ2FtZSB0byBiZWdpbiB0d28gcGxheWVycyBtdXN0IHBsYWNlIHRoZSBiaWcgYW5kIHRoZSBzbWFsbCBibGluZHMuIFRoZSBzbWFsbCBibGluZCB3aWxsIGJlIHBsYWNlZCBieSB0aGUgcGxheWVyIHRvIHRoZSBpbW1lZGlhdGUgbGVmdCBvZiB0aGUgYnV0dG9uLiBUaGUgYmlnIGJsaW5kIHdpbGwgYmUgcGxhY2VkIGJ5IHRoZSBwbGF5ZXIgdG8gdGhlIGxlZnQgb2YgdGhlIHNtYWxsIGJsaW5kLiAKTG9iIGRlcyBTZXhpc211cyB2b24gTG9kb3ZpY28gU2F0YW5hICAgZG93bmxvYWQgcGRmIGVib29rLiAyMi4gTWFpIDIwMDYgLiAKVGhleSBoYWQgcHVsbGVkIHRoZSByZWd1bGF0b3JzIG91dCBvZiB0aGVpciBtb3V0aHMgYW5kIGRyb3duZWQuIApMaWtlIG1lIHNheWluZyB5b3UncmUgcmVhbGx5IGFuIGFsaWVuIGFuZCB5b3Ugc2F5aW5nIG5vIGRvZXNuJ3QgbWFrZSBpdCBlcXVhbGx5IHByb2JhYmxlIHlvdSBhcmUgb3IgYXJlbid0IG9uZS4gCkkgZGlkbid0IGtub3cgSSB3YXMgcHJvdGVjdGl2ZSBvZiB0aGUgcGVvcGxlIEkgbG92ZS4gQnV0IEkgZG8ga25vdyBJIGZlZWwgcGVyc29uYWxseSBodXJ0LCBpbnN1bHRlZCBhY3R1YWxseSB3aGVuIHNvbWV0aGluZyBoYXBwZW5zIHRvIG15IHBlb3BsZSwgYnV0IHRoZSBwZW9wbGUgaW4gbXkgbGlmZSBmZWVsIHRoZSBzYW1lIHdheSBhYm91dCBtZSwgdGhhdCdzIHdoYXQgcmVsYXRpb25zaGlwcyBhcmUgYWJvdXQuIApQZW5uIE5hdGlvbmFsIGlzIGV4cGVjdGVkIHRvIG1haW50YWluIGVtcGxveW1lbnQsIEdpbGJlcnQgc2FpZC4gVGhlIGNhc2lubyBlbXBsb3lzIGFib3V0IDEsODAwIHBlb3BsZSwgd2hvIGFyZSBleHBlY3RlZCB0byBnZXQgY29tcGVuc2F0aW9uIGFuZCBiZW5lZml0IHBhY2thZ2VzIGF0IGxlYXN0IGF0IGN1cnJlbnQgbGV2ZWxzLgpTZWFyY2ggY29udGludWVzIGZvciBtaXNzaW5nIE1hc3RlcnRvbiBtYW4KTm93IGFsbCBvZiB0aGF0IGJlaW5nIHNhaWQsIGp1ZGdpbmcgYXQgZmFjZSB2YWx1ZSB0aGUgZ3V5IHNlZW1zIHRvIGtpbmQgb2YgYmUgYSBiaXQgb2YgYSBkb3VjaGViYWcgdGhhdCBrbmV3IHRoZXJlIHdhcyBubyBwcmVzZW50IHRocmVhdCwgYnV0IHRoYXQgc29tZSBzZXJpb3VzIGFybWNoYWlyIHF1YXJ0ZXJiYWNraW5nIHdoaWNoIEkgaGF2ZSBhIHZlcnkgaGFyZCB0aW1lIGRvaW5nLiBCdXQgaXQga2luZCBvZiBEYXJ3aW5pc20gYXQgaXRzIGZpbmVzdCwgd2h5IHdvdWxkIHlvdSB3YW50IHRvIHN0YW5kIGFuZCBldmVyIGRlY2lkZSBpdCBhIGdvb2QgaWRlYSB0byBzaG92ZSBhbmQgYmVnaW4gYW4gYWx0ZXJjYXRpb24gd2l0aCBhIGd1eSBpbiBmdWxsIHJpb3QgZ2VhciBhcm1lZCB3aXRoIGEgbGVzcyBsZXRoYWwgc2hvdGd1biBvciBiZWFuIGJhZyBsYXVuY2hlcj8KQWx0aG91Z2ggSSB0ZW5kIHRvIHRoaW5rIGEgbG90IG9mIHNvY2lhbCBzaXRlcyBkbyBub3QgaW5kZXggcHJvZmlsZSBpbWFnaW5lcy4gSWYgdGhhdCBzb3VuZHMgbGlrZSBmdW4sIGdpdmUgbWUgYSBjYWxsLiBJIGFtIGxvb2tpbmcgZm9lIGJveSBmcmllbmQgd2hvIGNhcmUgbWUgbmZvciBtZSBhbmQgbG92ZSBtZS4gSSBhbSBtYXJyaWVkIGJ1dCBsaXZlIGFsb25lIGluIERoYWthLiAuIEkgZ28gdG8gcGFyayBldmVyeSBkYXkgYW5kIG1ha2UgbmV3IGZyaWVuZHMgbm93IGkgd2FudCBzb21lIGZyaWVuZHMgb25saW5lIHNvIGkgYW0gaGVyZSBwb3N0aW5nIG15IHdoYXRzYXBwIG51bWJlciBzbyBpZiB5b3UgYXJlIGkgdGVyZXRlZCBpbiBtZSBhbmQgd2FudCB0byBmcmllbmRzaGlwIHdpdGggdGhlbiB5b3UgY2FuIGNoYXQgd2l0aCBtZSBhbmQgc3RhcnQgaSB0cm8geW91ciBzZWxmIHdpdGggbWUuIElmIHlvdSBnb3QgYSBNYWhhcmFzaHRyYSBnaXJscyBtb2JpbGUgbnVtYmVyIGZvciBmcmllbmRzaGlwIG9yIGxvdmUsIG11c2ljIGlzIHRoZSB3YXkgdG8gdW5sb2NrIHRoZSBsaW1iaWMgYXJlYXMgb2YgaGVyIGJyYWluIGNvbm5lY3RlZCB0byBkZWVwZXIgZmVlbGluZ3MgYXQgYSBzdWJjb25zY2lvdXMgbGV2ZWwuCkdhbWJsaW5nZXN0YWJsaXNobWVudHMgaW4gInRyYWRpdGlvbmFsIiBsb2NhdGlvbnMgaW4gdG93bnMgdnMuIApTb3dlaXQgZGllIEluaGFsdGUgYXVmIG1laW5lbSBCbG9nIG5pY2h0IHZvbiBtaXIgc2VsYnN0IGVyc3RlbGx0IHd1cmRlbiwgdmVyc3VjaGUgaWNoIGRpZSBVcmhlYmVycmVjaHRlIERyaXR0ZXIgc29yZ2ZsdGlnIHp1IGJlYWNodGVuLiAKRGFkIGNhbiBjYXNoIGluIHVwIHRvIGZvdXIga2lkcyBmb3IgYSBtYXhpbXVtICQ0MDAgb2ZmIHRoZWlyIHN0YXkgYXQgdGhlIGZhbWlseSBmcmllbmRseSByZXNvcnRzLiAKQydlc3QgbGEgZmluIGRlIGwnYW5uZSBwb3VyIGxlIGJsb2cgZCcsIG5vdXMgcHJlbm9ucyB1bmUgcGF1c2UgcGFzIGRtcml0ZS4gTm91cyB2b3VzIHJldHJvdXZlcm9ucyBhdmVjIHBsYWlzaXIgZW4gMjAxOSwgbGUgamV1ZGkgMyBqYW52aWVyIHBvdXIgdHJlIHByY2lzLiAKIkdyb3dpbmcgdXAgYW5kIHBsYXlpbmcgZm9vdGJhbGwgZXZlcnlkYXkgaGFzIG1hZGUgbWUgYSBjb21wZXRpdGl2ZSBwZXJzb24uIEkgbG92ZSB0aGUgY2hhbGxlbmdlLCB3aGV0aGVyIGl0J3Mgb24gdGhlIGZvb3RiYWxsIHBpdGNoIG9yIGF0IHRoZSBwb2tlciB0YWJsZS4iClRoZW4gaXQgc2F5cywgIlRob3NlIHBhcnRzIHRoYXQgeW91IGFzc2VtYmxlZCBmcm9tIGJyaWNrcz8gR2V0IHRob3NlIHBhcnRzLCBhbmQgdGhlbiBwdXQgdGhlbSB0b2dldGhlciBsaWtlIHRoaXMsIGFuZCB5b3UgbmVlZCB0aGVzZSBicmlja3MgdG8gaG9sZCB0aGVtIHRvZ2V0aGVyLiIgSXQgbWlnaHQgZXZlbiBzYXksICJZb3Ugd2lsbCBuZWVkIHNvbWUgb2YgcGFydCBYLiAKQWZ0ZXIgd29ya2luZyBpbiBhIGNhc2lubyBhcyBhIE1hcmtldGluZyBNYW5hZ2VyIGluIGNoYXJnZSBvZiBwbGF5ZXJzIGNsdWIsIGFkdmVydGlzaW5nLCBldmVudHMgYW5kIHRoZSB3ZWxjb21lIGNlbnRlciwgSSB0cmF2ZWxlZCBhcm91bmQgYXMgYSBwYXJ0bmVyIGluIGFuIGFkdmVydGlzaW5nIGFnZW5jeSBoZWxwaW5nIGEgY291cGxlIG9mIGNhc2lubydzIHNldCB1cCBwbGF5ZXJzIGNsdWJzIGFuZCBhdHRyYWN0IG5ldyBjdXN0b21lcnMuCldlIGdpdmUgdGhhbmtzIHRvIHRoZSBEaXZpbmUgTW90aGVyIGFuZCBGYXRoZXIsIHdob3NlIGNvc21pYyBlbWJyYWNlIGJlZ2FuIHRoZSBzYWNyZWQgZGFuY2Ugb2YgdGhlIHdvcmxkcy4gVG8gb3VyIEVhcnRoIGZvciBoZXIgc3VzdGVuYW5jZSBhbmQgZ2lmdHMgb2YgbGlmZSwgVG8gdGhlIGZvdXIgd2luZHMsIG91ciB3YXRlcnMsIGFuZCBzYWNyZWQgZmxhbWUuIE1heSB3ZSBhbGwgcmVtZW1iZXIsIGtub3cgYW5kIGxpdmUgYnkgdGhpcyBhbmNpZW50IHdpc2RvbS4KSW4gYSByZWd1bGFyIDEvMiBnYW1lIGFnYWluc3QgYSBwYXNzaXZlIG9wcG9uZW50LCB5b3UgY2FuIG1ha2UgYW4gZXhwbG9pdGF0aXZlIGZvbGQgb24gdGhpcyB0dXJuIGFuZCBwcm9iYWJseSBzYXZlIGEgbGl0dGxlIGJpdCBvZiBtb25leSBvbiBhdmVyYWdlLiBIZXIgYmV0cyBhcmUgYSByZWxhdGl2ZWx5IGNvbW1vbiBwYXR0ZXJuIHRoYXQgbWFueSBmaXNoIGZvbGxvdyB3aXRoIHR3byBwYWlyIG9yIGJldHRlci4gClRoZSBTZWNyZXQgR2FyZGVuIHBhcnQgaXMgYSBndWlkZWQgdG91ciBhbmQgaXQgdGFrZXMgYW4gaG91ciBhbmQgYSBoYWxmLiAKSWYgeW91IHdlcmUgYSBzaWduLCBhIHJvYWQgc2lnbiwgd2hpY2ggb25lIHdvdWxkIHlvdSBiZSBhbmQgd2h5P0luIGZpbmQgdGhhdCBpbiBjcmVhdGl2ZSB3cml0aW5nIHlvdSBkb24ndCBuZWVkIG11Y2ggaW5zcGlyYXRpb24sIG9uZSBsaW5lIG11c3QgYmUgZW5vdWdoLCBldmVuIG9uZSB3b3JkLiBJIHVzZWQgdG8gYXNrIHBlb3BsZSAiV2hhdCBzaWduIGFyZSB5b3U/IiB1bnRpbCBJIGdvdCB0aGF0IG9uZSAiU1RPUCIuIApTZWVpbmcgdGhvc2Ugd29yZHMgc2NhcmVzIG1lLiBHb3QgZGlhZ25vc2VkIEguIFB5bG9yaSBiYWNrIGluIEphbnVhcnksIHdhcyBvbiBhIDE0IGRheSB0cmlwbGUgYW50aWJpb3RpYyBwcmV2IHBhYywgaWUuIApJIHRoaW5rIG1vc3QgTSBkb3Qgb3JnYW5pc2VycyBoYXZlIGRvbmUgdGhlIHNhbWUgaW4gRXVyb3BlIGFzIHRoZXkgaGF2ZSBzZWVuIHRoZSBwb3RlbnRpYWwgZm9yIHJldmVudWUgbWFraW5nIHJhdGhlciB0aGFuIG1ha2luZyB0aGUgZXZlbnQgc2FmZSwgZnVuIGFuZCBkcmFmdGluZyBmcmVlISEgSSwgYW5kIG1hbnkgb3RoZXJzIHRob3VnaHQgdGhlIHN3aW0gd2FzIDQgbWlucyBsb25nLCBpdCB3YXMgZXh0cmVtZWx5IGNyb3dkZWQgdXAgdW50aWwgdGhlIGxhc3QgMTAgbWlucyB3aGVuIEkgc29ydCBvZiBoYWQgYSBiaXQgb2YgY2xlYXIgd2F0ZXIgaW4gd2hpY2ggdG8gc3dpbSB3aXRob3V0IGNvbGxpZGluZyBhbmQgYmVpbmcgYmF0dGVyZWQhISBUaGUgYmlrZSBpcyB0b3VnaCBldmVuIHRob3VnaCB0aGVyZSBpcyBhIDMwa20gZmxhdCBzZWN0aW9uIGF0IHRoZSBzdGFydCBvZiBlYWNoIGxhcC4gCkF0IHByZXNlbnQsIEZTMSBoYXMgcmlnaHRzIGFncmVlbWVudHMgaW4gcGxhY2UgdG8gY2FycnkgY29sbGVnZSBiYXNrZXRiYWxsIGFuZCBmb290YmFsbCwgTUxCLCBOQVNDQVIsIHdvcmxkIGNsYXNzIHNvY2NlciwgVUZDIGFuZCBVU0dBIGNoYW1waW9uc2hpcCBldmVudHMuIEZTMSBib2FzdHMgbmVhcmx5IDUsMDAwIGhvdXJzIG9mIGxpdmUgZXZlbnQsIG5ld3MgYW5kIG9yaWdpbmFsIHByb2dyYW1taW5nIGFubnVhbGx5IGFuZCB0aGF0IG51bWJlciB3aWxsIGNvbnRpbnVlIHRvIGdyb3cuIENvbGxlZ2UgZm9vdGJhbGwgb24gRlMxIGlzIGhpZ2hsaWdodGVkIGJ5IHJlZ3VsYXIgc2Vhc29uIGNvdmVyYWdlIG9mIEJpZyAxMiwgUGFjIDEyIGFuZCBDb25mZXJlbmNlIFVTQSBnYW1lcy4gCldoZW4gYW4gb2xkIGxhZHkgd291bGQgd2FsayBpbnRvIEhUIGFuZCBhc2sgbWUgaG93IHRvIGhvb2sgdXAgdGhlIG5ldyBCbHUgcmF5IHBsYXllciBzaGUgZ290IGZvciBDaHJpc3RtYXMsIGl0IGZlZWxzIGdvb2QgdG8gaGVscCBoZXIuIApGcmVlIGNoaXBzIGZyb20gWnluZ2EgaXMgaXQgdHJ1ZSBvciBzY2FtCk9OIFRIRSBCTE9DSzogT24gYSB3ZWVrIG9mIHNhZCBpbmp1cnkgc2V0YmFja3MsIHNwYXJlIGEgdGhvdWdodCBmb3IgQmVuIFJlaWQuIApNYXliZSB5b3Ugc2hvdWxkIHRyeSBiZSBtb3JlIG9wZW4gbWluZGVkIHRvIGdldCB0byBrbm93IHRoZSByZWFsIHBlb3BsZSAobm8gbWF0dGVyIGlmIHRoZXkgbG9vayByZWFsbHkgcmVhbGx5IHBvIGFuZCBkZXN0aXR1dGUgdG8geW91ciB0b3VyaXN0IGdvZ2dsZXMpLiBBbmQgdHJ5IHRvIGxpdmUgYW1vbmdzdCBsb2NhbHMgYW5kIG1heWJlIGV2ZW4gd2l0aG91dCBmZXcgdGhpbmdzIG5vbiBpc2xhbmRlcnMgY29uc2lkZXIgIm5lY2Vzc2l0eSIgKHNhdyBzb21lb25lIHRhbGtpbmcgYWJvdXQgQUMgcHJpY2UgLCB3dGY/ISkuIEkgZ3JldyB1cCBpbiB0aGUgcGFydCBvZiBTdC4gTWFyeSBidHcgLCBubyBlbGVjdHJpY2l0eSAoa2Vyb3NlbmUgbGFtcHMpIG9yIHJ1bm5pbmcgd2F0ZXIgKHNwcmluZ3MpIGFuZCBuZXZlciBvbmNlIGhhdGVkIG15IGxpZmUgKG9mIGNvdXJzZSBub3cgaXQgY2hhbmdlZCBhIHNtaWRnZSBhbmQgdGhleSBjYW4gaGF2ZSB0aG9zZSBpZiB0aGF0IHdhc24gdG8gcGF5IGJ1dCBhIGxvdCBvZiBwZW9wbGUgc3RpbGwgZG9uIGFuZCBsaXZlIG9rKS4gTXkgQW1lcmljYW4gYW5kIEJyaXRpc2ggZmFtaWx5IGFsd2F5cyBzYXkgdGhleSBoYXZlIHRoZSBncmVhdGVzdCB0aW1lIGJlaW5nIGFibGUgdG8gZG8gYm90aCB0aGUgcmVzb3J0IHN0dWZmIHdoZW4gdGhleSBmZWVsIGxpa2UgaXQgYnV0IGFsc28gZ2V0dGluZyB0aGUgcmVhbC4gV2hlbiBJIGhhZCBhIGtpZCBJIG1hZGUgc3VyZSBoZSBleHBlcmllbmNlZCB0aGF0IGV2ZXJ5IHN1bW1lciBob2xpZGF5LiBTaGUgbWlnaHQgYmVlbiB1cHNldCBhbmQgZGlzdHJhdWdodCBhYm91dCB0aGUgc2l0dWF0aW9uLCBidXQgY2hvc2UgdG8gY29udGludWUgd2l0aCB0aGUgcHJlZ25hbmN5LiBJIGRvbiBrbm93LiBJdCBoYXJkIHRvIHNlZSBob3cgc2hlIGJlaGF2ZXMgb24gVFYgYW5kIHdoZXRoZXIgb3Igbm90IGhlciBiZWhhdmlvcnMgcmVmbGVjdCBoZXIgZ2VudWluZSBmZWVsaW5ncyBvciBpZiBpdCBmb3IgdGhlIGNhbWVyYS4gQnV0LCBpdCBzZWVtcyByZWFsbHkgd2VpcmQgdGhhdCBzaGUgd2FzIHVuY2VydGFpbiBhYm91dCBtYXJyeWluZyBBc3VlbHUsIHRoZW4gY29udGludWVkIHRvIGhhdmUgdW5wcm90ZWN0ZWQgc2V4IHdpdGggaGltLiBJIGp1c3QgZG9uIHVuZGVyc3RhbmQgd2h5IHNoZSB3b3VsZCBldmVyIHRoaW5rIHRoYXQgYSBnb29kIGlkZWEuIEkgc2F3IGhlciBTbmFwIENoYXQgcG9zdCBhbmQgc2hlIGV4cGxhaW5lZCB0aGF0IHNoZSB3YXMgZ29pbmcgdG8gZ2V0IGEgY29wcGVyIElVRCBidXQgY291bGRuIGJlY2F1c2UgZmlsbWluZyB3YXMgc2NoZWR1bGVkIHRoZSBkYXkgc2hlIHdhcyBzdXBwb3NlZCB0byBnbywgc28gQXN1ZWx1IGFuZCBzaGUgaGFkIHNleCB3aXRoIHRoZSBleHBlY3RhdGlvbiB0aGF0IGhlIHdvdWxkIHB1bGwgb3V0LiBIZSBkaWRuIGFuZCBzaGUgZ290IGtub2NrZWQgdXAgYWdhaW4uCkknbSBub3Qgc3VyZSBpZiB5b3UgbWVhbiBwdXp6bGUgbW9kZSBvciBhY3Rpb24gbW9kZSBzbyBJJ20ganVzdCBnb2luZyB0byBnaXZlIHlvdSBwdXp6bGUgbW9kZTogRmlyc3QsIHB1dCBhIHdhbGwgaW4gZnJvbnQgb2YgTWF4d2VsbCBzbyB3aGVuIHRoZSAiY3JlYXRpb24iIGlzIHJldml2ZWQsIHlvdSB3b24ndCBnbyBhZnRlciBNYXh3ZWxsLiBBZnRlciB5b3UgZG8gdGhhdCwgcHV0IGEgdGh1bmRlcnN0b3JtIG92ZXIgdGhlICJjcmVhdGlvbiIgYW5kIGxpZ2h0bmluZyB3aWxsIHphcCBoaW0gYW5kIGhlIHdpbGwgcmV2aXZlLiAKSWYgeW91IGZhbWlsaWFyIHdpdGggdGhlIEJhY29uIE51bWJlciAodGhlIG51bWJlciBvZiBmaWxtcyByZW1vdmVkIGFuIGFjdG9yIGlzIGZyb20gS2V2aW4gQmFjb24pLCB0aGVuIHRoZSBFcmRvcyBOdW1iZXIgaXMgdGhlIHNhbWUgdGhpbmcgYnV0IGZvciBtYXRoIChhbmQgdGhlIEJhY29uIE51bWJlciB3YXMgaW5zcGlyZWQgYnkgdGhlIEVyZG9zIE51bWJlcnMpLi4gCklNTyB0aGUgcXVhbGl0eSBkb2VzbiBtYWtlIHVwIGZvciB0aGUgZXh0cmEgY29zdCBhbmQgaW5jb252ZW5pZW5jZS4uIApNbWUgQnJpZ2l0dGUgQmFyZ2VzLiBKZSBzdWlzIHN1cnByaXNlIHF1J29uIHBsYWNlIGxhIGRpc2N1c3Npb24gc3VyIGxlIHRlcnJhaW4gZGUgbCdnYWxpdCBkZXMgZHJvaXRzLiBJbCB5IGEgZGV1eCBzZXhlcyBkaWZmcmVudHMsIGNvbXBsbWVudGFpcmVzLCBxdWkgZGV2cmFpZW50IGF2b2lyIGRlcyBkcm9pdHMgZ2F1eC4gUydpbCB5IGEgdW4gY29tYmF0ICBtZW5lciwgYydlc3QgcGV1dCB0cmUgZGFucyBjZSBzZW5zIHF1J2lsIGZhdXQgYWxsZXIsIHBvdXIgZmFpcmUgbWlldXggcmVzcGVjdGVyIGxlIGRyb2l0IGRlcyBmZW1tZXMuIFBvdXIgbWEgcGFydCwgaid5IHNvdXNjcmlyYWkgdG90YWxlbWVudC4KQSBmZXcgZ3V5cyB3ZW50IG91dCwgbXkgaHVzYmFuZCBpbmNsdWRlZC4gCllvdSBtYXkgd2FudCB0byBnbyB1cHNjYWxlICAgYW4gSXJpc2ggcHViIHRoZW1lIHdpdGggcG9saXNoZWQgd29vZCBhbmQgR3Vpbm5lc3Mgb24gdGFwLCBvciBtYXliZSBhIHdpbmUgY2VsbGFyIGFuZCBhIGh1bWlkb3IuIApTdG91dCdzIGpvYiBpcyB0byBwcm92aWRlIHNlbmlvcnMgYXQgdGhlIGZpcm0gd2l0aCBicm9hZCBzdW1tYXJpZXMgb24gY29tcGFueSBmdW5kYW1lbnRhbHMsIGJ1dCBoaXMgcGFzc2lvbiBpcyB0byBzcGVuZCB0aW1lIG9uIGNvbXBhbmllcyBvbiB3aGljaCBCQU0gaGFzIG5vdCByZXBvcnRlZC4gSGUga2VlcHMgdHJvbGxpbmcgbmV3IGlkZWFzIGluIHRoZSBob3BlIG9mIHVuY292ZXJpbmcgb25lIG9yIG1vcmUgImhpZGRlbiBqZXdlbHMuIi4gCkVhY2ggc3R5bGUgb2YgVGFpIENoaSBoYXMgaXRzIG93biBmb3JtLiAKTW9zdCBvd25lcnMgYXJlIHNvbWV3aGF0IGNsdWVsZXNzIGludG8gdGhlIGV2ZXJ5ZGF5IGludGVyYWN0aW9ucyB3aXRoIGN1c3RvbWVycywgYW5kIGlmIHlvdSBjYWxtbHkgZXhwbGFpbiB0aGUgcHJvYmxlbSBhbmQgaG93IHRoZXkgY291bGQgZ28gYWJvdXQgYWRkcmVzc2luZyBpdCB0aGF0IHdvdWxkIG1ha2UgeW91LCB0aGUgY3VzdG9tZXIsIGhhcHB5LCBtb3N0IG93bmVycyB3b3VsZCBqdW1wIGF0IHRoZSBjaGFuY2UgdG8ga2VlcCB5b3UgbG95YWwuIApJIGRvbiB0aGluayBiZWluZyByZWxpZ2lvdXMgbWFrZXMgeW91IGFuIGlkaW90LiBDbGltYXRlIGNoYW5nZSwgYW50aSB2YXh4ZXI/IFN1cmUuIEVzcGVjaWFsbHkgdGhlIGxhdHRlci4gCkkgdm9sdW50ZWVyLiBJJ20gY29uc3RhbnRseSByZWFkaW5nIG5ldyBib29rcy4gCldlIHRvcCBpdCB3aXRoIGNpbGFudHJvIGFuZCBob3Qgc2F1Y2UgYW5kIHBpY2tsZWQgb25pb25zIGFuZCBhdm9jYWRvLiAKVGhhdCBhIHByZXR0eSBnZW5lcmFsIHJlc3BvbnNlIHRvIG15IHZlcnkgc3BlY2lmaWMgYW5zd2VyLiBJZiB0aGUgcGVvcGxlIHRoYXQgYnV5IGFuIGFsYnVtIGRvbiBldmVuIHRha2UgdGhyZWUgc2Vjb25kcyB0byBsb29rIGF0IHRoZSBsaW5lciBub3RlcyB0byByZWFkLCAiV3JpdHRlbiBieSIsIHRoZW4gaXQgcHJldHR5IHNhZmUgdG8gc2F5IHRoYXQgdGhleSBkb24gcmVhbGx5IGNhcmUgd2hvIHdyb3RlIHRoZSBzb25nIGFzIGxvbmcgYXMgdGhleSBlbmpveSBpdC4gVW5sZXNzIHlvdSB0ZWxsaW5nIG1lIHRoYXQgdGhlIHBlb3BsZSB0aGF0IGFyZSBjb25jZXJuZWQgYWJvdXQgd2hvIHdyb3RlIHRoZSBtdXNpYyBkb24ga25vdyB0byBsb29rIGF0IGxpbmVyIG5vdGVzLgpObyBvbmUgZWxzZSBpcy4gCkkgdGhpbmsgdGhlIG1vc3QgY29tbW9uIHNlYW0gd2FzIGEgZmxhdCBmZWxsZWQgb3Igcm9sbGVkIHNlYW0uIERlcGVuZGluZyBvbiB3aGF0IHlvdXIgcGxhbnMgb24gSSBkaWRuIHVzZSBhbnkgc2VhbSB0YXBlLCBzZWFtIHNlYWwsIG9yIGJpbmRpbmdzLiBNYWlubHkgYmVjYXVzZSBpdCB3YXNuIGluY2x1ZGVkIHdpdGggbXkga2l0IGJ1dCBhbHNvIGJlY2F1c2UgaXQgYSBidXQgbXVjaCB0byBhZGQgdG8gYSByb2xsZWQgb3IgZmxhdCBmZWxsZWQgc2VhbS4gSWYgeW91IGhhdmUgYWNjZXNzIHRvIGEgc2ltaWxhciBmcmFtZWxlc3MgcGFjaywgb3Igb25lIHlvdSBjYW4gdHVybiBpbnNpZGUgb3V0LCB3b3VsZCBnaXZlIHRvIGEgZ2VuZXJhbCBpZGVhIGZvciB0aGUgdHlwZXMgb2Ygc2VhbXMgYSBjb21tZXJjaWFsIHBhY2sgd291bGQgdXNlLgpUaGVyZSB3YXMgYSBjdXRlIG9uZSB3aXRoIFdpbGx5IFdvbmthIGFuZCBhIGJ1bmNoIG9mIG90aGVycyBhbmQgdGhlbiBJIGZvdW5kIG9uZSB0aGF0IHdhcyByZWZlcmVuY2luZyBCcmVha2luZyBCYWQgdGhhdCBzYXlzIEkgdGhlIG9uZSB3aG8ga25vY2tzIHdpdGggYSBnaXJsIHNjb3V0IGF0IHRoZSBkb29yIGFuZCBzb21lb25lIGNvbXBsYWluZWQgYWJvdXQgaXQgYW5kIG1hZGUgbWUgZGVsZXRlIGl0ISBJIHdhcyBwaXNzZWQgYmVjYXVzZSBJIGxpa2Ugd2hvIGRvZXNuIGhhdmUgYSBzZW5zZSBvZiBodW1vciBpbiB0aGlzIGdyb3VwPyBQbHVzIHdlIGFsbCBqb2tlIGFyb3VuZCB0aGF0IGNvb2tpZSBzZWVrZXJzIGFyZSBsaWtlIGRydWcgZGVhbGVycyBzb21ldGltZXMgd2l0aCB0aGUgZXhjaGFuZ2Ugb2YgbW9uZXkgYW5kIG1lZXRpbmcgcGVvcGxlIGluIHB1YmxpYyBwbGFjZXMgYW5kIGFsbCBzb3J0cyBvZiB0aGluZ3Mgc28gSSB0aG91Z2h0IGl0IHdhcyBmdW5ueSBiZWNhdXNlIHRoYXQgbXkgc2Vuc2Ugb2YgaHVtb3IgYnV0IGFwcGFyZW50bHkgc29tZSBvZiB0aGUgbW9tcyBkaWQgbm90IGV2ZW4gdGhvdWdoIHRoZXkgYXJlIGFsbCBwcmV0dHkgbGFpZCBiYWNrIGp1c3QgbGlrZSBteXNlbGYgTE9MLiAKSSB0aGluayB5b3UncmUgZ2l2aW5nIHBvbGljZSBvZmZpY2VycyAoYXMgYSBncm91cCkgdG9vIG11Y2ggY3JlZGl0IGZvciBoYXZpbmcgZnVsbCB1bmRlcnN0YW5kaW5nIG9mIHRoZWlyIHJlc3BlY3RpdmUgY3JpbWluYWwgY29kZXMuIElmIHlvdSdyZSBsdWNreSwgdGhleSBoYWQgMTIgd2Vla3Mgb2Ygc2Nob29saW5nIGR1cmluZyB3aGljaCB0aGV5IG5lZWRlZCB0byBtZW1vcml6ZSBhIGNyaW1pbmFsIGNvZGUgdGhlIHNpemUgb2YgdGhlIGJpYmxlLCBob3cgdG8gZHJpdmUsIGhvdyB0byBzaG9vdCBhIGd1biwgc2VsZiBkZWZlbmNlLCBldGMuCkRlc3BpdGUgaXRzIGxvY2F0aW9uIGluIG9uZSBvZiB0aGUgY2l0eSdzIG1vc3Qgd2VsbCB0cm9kZGVuIG5laWdoYm9yaG9vZHMsIEJhY2sgQmF5J3MgQ2FzYSBSb21lcm8gaXMgZWFzeSB0byBtaXNzLiBUaGUgb25seSBjbHVlIHRvIGl0cyBleGlzdGVuY2UgaXMgYSBjb3JuZXIgc2lnbiBvbiBHbG91Y2VzdGVyIFN0cmVldDsgdmVudHVyZSBkb3duIHRoZSBwdWJsaWMgYWxsZXkgYW5kIHlvdSdsbCBkaXNjb3ZlciBhIHR1Y2tlZCBhd2F5IGhhdW50IGZpbGxlZCB3aXRoIGF6dGVjIG1hc2tzIGFuZCBicmlnaHRseSBjb2xvcmVkIHRpbGVzIHRoYXQgZmVlbHMgYSB3b3JsZCBhd2F5IGZyb20gQm9zdG9uLiAKSXQgY29tZXMgd2l0aCB0aHJlZSBoZWF0IHNldHRpbmdzIGFuZCBhIHRocmVlIGhvdXIgYXV0byBvZmYgZmVhdHVyZSwgZm9yIHdoZW4geW91IGJvdGggaW5ldml0YWJseSBmYWxsIGFzbGVlcC4uIAovbS9mZWVkYmFjay92aWV3L1dhcnJpb3JzIFRoZSBOZXcgUHJvcGhlY3kgTW9vbnJpc2UgUGRmIERvd25sb2FkZ29sa2VzIC4gQWFyYW55YSBLYWFuZGFtIER2ZHJpcCBMb3R1cyBGcmVlIERvd25sb2FkIFV5aXJ2YW5pIFRvcnJlbnRzaW5zdG1hbmsuIApJdCBpcyBlYXN5IHRvIGRvLiBDYWxsIHRoZSBob3RlbCBhbmQgdGhleSB3aWxsIGNvbWUgZ2V0IHlvdS4xIHZvdGVTaG93IGFsbCBhbnN3ZXJzU29ycnkgaWYgdGhlc2UgcXVlc3Rpb25zIGhhdmUgYmVlbiBhc2tlZCBwcmV2aW91c2x5IEkganVzdCB3YW50ZWQgdG8gZW5zdXJlIEkgaGFkIHRoZSBjb3JyZWN0IGluZm9ybWF0aW9uLkkgaGF2ZSBub3RpY2VkIHRoZXJlIGlzIGEgYnVzIHN0b3Agb3V0c2lkZSB0aGUgaG90ZWwuIApHZXQgbW9yZSAoYW5kIG5ldykgZHJlc3Mgc3R5bGVzOiBJdCBpcyB0aW1lIHRvIG9wZW4geW91ciBtaW5kIGFuZCBzdG9wIGxvb2tpbmcgYXQgeW91cnNlbGYgdGhlIHNhbWUgd2F5IHlvdSBoYXZlIGFsd2F5cyBkb25lLiBHbyB0byBhIHN0b3JlIGFuZCB0cnkgYWxsIHNvcnRzIG9mIGNsb3RoZXMgb24geW91cnNlbGYuIEZpcnN0LCBnbyBhbG9uZSwgc2luY2UgbWF5YmUgeW91IGNhbiBiZSBhIGxpdHRsZSBiaXQgc2h5IGV2ZW4gaW4gZnJvbnQgb2YgeW91ciBiZXN0IGZyaWVuZC4gVGhpcyBpcyB5b3VyIG9wcG9ydHVuaXR5IHRvIHRyeSBvbiBhbGwgdGhlIHN0eWxlcyB5b3UgbmV2ZXIgdGhvdWdodCB0byB0cnkgYmVmb3JlLiBCZSBob25lc3QsIGxvb2sgYXQgeW91cnNlbGYgdGhlIHdheSB5b3UgbG9vayBhdCBhIGZhbW91cyBhY3RyZXNzLCB5b3VyIG5laWdoYm9yLCBvciBhIGNvbXBsZXRlIHN0cmFuZ2VyLCBhbmQganVkZ2UgeW91cnNlbGYgd2l0aCBleWVzIHRoYXQgc2F5LCAiVGhhdCBnaXJsIG92ZXIgdGhlcmUgKGluIHRoZSBtaXJyb3IpIGhhcyBncmVhdCBzdHlsZSIgb3IgIldoYXQgYSByaWRpY3Vsb3VzIGdpcmwsIHdlYXJpbmcgdGhhdCEiIE5vdywgeW91IGhhdmUgb25lIG5ldyBkcmVzcyBzdHlsZT8gTWF5YmUgdHdvIG9yIHRocmVlPyBIZXksIG9uZSBpcyBuZXZlciBlbm91Z2guIEl0IGlzIG5vdCBsaWtlIHlvdSBoYXZlIHRvIG93biBvbmx5IG9uZSBzdHlsZS4gWW91ciBpbm5lciBib21ic2hlbGwgY291bGQgYWN0dWFsbHkgYmUgaW4gbW9yZSB0aGFuIG9uZSBkcmVzcyBzdHlsZSBzaW5jZSB5b3UgaGF2ZSBtYW55IGRpZmZlcmVudCB0aGluZ3MgdG8gc2hvdyBvZmYgYWJvdXQgeW91cnNlbGYuCiAgQXMgdGhlIGJsdWUgYmlyZCBmbGllcyBvdmVyIHRvIGxhbmQgb24gdGhlIGFudGVubmEsIGNsaWNrIGFuZGhvbGQgb24gdGhlIHNpZGUgb2YgdGhlIHJvb2Ygd2F0ZXIgdGFuayBqdXN0IHRvIHRoZSByaWdodCBhbmQgYXNtYWxsIHZlbnQgd2lsbCBvcGVuLiBDbGljayB0aGUgYW50ZW5uYSB0byBkcm9wIHRoZSBiaXJkIGludG8gdGhlZXhoYXVzdCBmYW5zLCBhbmQgaGlzIGd1dHMgZ28gYWxsIG92ZXIsIGluY2x1ZGluZyBpbnRvIHRoZSB3YXRlcnN1cHBseS4gVGhlIGZhbiBibGFkZSBkZWNhcGl0YXRlcyBvbmUgZGluZXIuIApXZW50IGZyb20gd29ya2luZyBpbiBhIGRlbGkgdG8gZXhlY3V0aXZlIHZpY2UgcHJlc2lkZW50IG9mIExvYmxhdyBDb3MuIEhlIGhlbHBlZCBjcmVhdGUgdGhlIFByZXNpZGVudCBDaG9pY2UgQnJhbmQgd2l0aCBEYXZlIE5pY2hvbCwgRG9uIFdhdHQgYW5kIFJpY2hhcmQgQ3VycmllLiBJIGdyZXcgdXAgc3Vycm91bmRlZCBieSB2aXNpb25hcnkgdGhpbmtlcnMgYW5kIGRvZXJzIHdobyB3ZXJlIGZvY3VzZWQgb24gdGhlIG1hc3MgbWFya2V0IGNvbnN1bWVyLiAKSWYgYW55b25lIGVsc2UgaGFzIGV2ZXIgaGFkIGEgcGFuaWMgYXR0YWNrIHdoaWxlIHJ1bm5pbmcsIHlvdSBrbm93IGhvdyB0ZXJyaWJsZSBpdCBmZWVscy4gClF1YXRyYWluZSB1ClF1YW5kIGVsbGVzIGNvbm5haXNzZW50IGxlcyB0cmF2YXV4IGR1IEdST1MsIHF1J2VsbGVzIGNvbnN1bHRlbnQgdW4gdGhyYXBldXRlIHF1aSBlbiBmYWl0IHBhcnRpZSwgZWxsZXMgc2UgbGFpc3NlbnQgbW9pbnMgaW1wcmVzc2lvbm5lci4gCiJUaGUgcmVzcG9uc2UgZnJvbSB0aGUgYnVzaW5lc3MgY29tbXVuaXR5IGFib3V0IHdhbnRpbmcgdG8gYmUgaW52b2x2ZWQgaW4gYSBkYXkgdGhhdCBjZWxlYnJhdGVzIGJpY3ljbGluZyBpbiBCb3VsZGVyIGhhcyBqdXN0IGJlZW4gcmVhbGx5IGdyZWF0LCIgUHJhbnQgc2FpZC4gIlRoZXkgd2FudCB0byB0aGFuayB0aGUgY3ljbGlzdHMsIHRoZXkgd2FudCB0byBzaG93IHRoZWlyIHN1cHBvcnQgZm9yIGJpY3ljbGluZyBpbiBCb3VsZGVyLiIKSXQncyBhcHBhbGxpbmcuIFdlIHRoZSBwZW9wbGUgbmVlZCB0byBiZSBydW5uaW5nIG91ciBjb3VudHJ5LCBub3QgdGhleSB0aGUgZm9yZWlnbiB3ZWFsdGggZ3JhYmJlcnMuIApNeSBmYW1pbHkgcmFpc2VkIG1lIGNhdGhvbGljLCBJIGNoYW5nZWQgbXkgbWluZCBhdCBhcm91bmQgMTUgYW5kIHRoZW4gc3RhcnRlZCB0byBiZWxpZXZlIGFnYWluIHdoZW4gSSByZWFsaXplZCBpdCBnYXZlIG1lIGNvbWZvcnQuIE5vYm9keSBrbm93cyB3aG8ncyByaWdodCBvciB3cm9uZyBhbnl3YXksIHJpZ2h0PyBTbyB3aHkgZG9lcyBpdCBtYXR0ZXIgc28gbXVjaCBpZiB0aGlzIHBlcnNvbiBjaG9vc2VzIHdoYXQgdGhleSBjaG9vc2UuIApGdXRvbiBidW5rIGJlZHMgYXJlIGEgcmVjZW50IHBoZW5vbWVub24sIGFuZCBoYXZlIHRoZWlyIHJvb3RzIGluIHRoZSBuYXR1cmFsIGV2b2x1dGlvbiBvZiBmdXRvbnMuIEluIHJlY2VudCB5ZWFycywgZnV0b25zIGhhdmUgc2lnbmlmaWNhbnRseSBpbXByb3ZlZCBpbiBzdHlsZSwgcXVhbGl0eSBhbmQgY29tZm9ydC4gSW4gZmFjdCwgZnV0b25zIGhhdi4KIlRoaXMgaXMgaG93IHlvdSBrbm93IHlvdSdyZSBnb29kOiBXaGVuIHlvdSBhc2sgc29tZWJvZHkgZWxzZSBpZiBJJ20gZ29vZCwgdGhleSdyZSBhbGwgZ29pbmcgdG8gdGVsbCB5b3UsICdObywgU21hcnQgc2FpZC4gIkJlY2F1c2UgdGhleSdyZSBoYXRpbmcuIFNvIHRoYXQncyBob3cgSSBrbm93IEknbSBnb29kLiIKSm9obiBNY0NhaW4gcHJlc2lkZW50aWFsIGNhbXBhaWduIDIwMDgKU28gZm9yIGV4YW1wbGUgc2F5IHRlYW0gbm8gMSBhbmQgbm8gMiBpbiB0aGUgd29ybGQgbWF0Y2ggZWFjaCBvdGhlciBpbiB0aGUgZmlyc3Qgcm91bmQgKHdoYXQgZXZlcnlib2R5IGZlYXJzKS4gVGVhbSAxIHdpbnMgaW4gT1QgMTkgMTcuIApJIGFsc28gc3RydWdnbGUgZXhpc3RpbmcgaW4gYSBDaHJpc3RpYW4gY29tbXVuaXR5IHdoZXJlIG5vIG9uZSBzZWVtcyB0byBzaGFyZSBteSBob2JiaWVzLiBJdCBkZWZpbml0ZWx5IG1ha2VzIGl0IGEgbG90IGhhcmRlciB0byBtYWtlIGZyaWVuZHMgaW4gbXkgY2h1cmNoLiBUaGUgb25seSB0aGluZyBJIGxlYXJuZWQgaXMgdGhhdCB3ZSBjYWxsZWQgdG8gbG92ZSBvbmUgYW5vdGhlciwgbm90IGJlIGVhY2ggb3RoZXIgZnJpZW5kcywgYW5kIHlvdSBjYW4gc3RpbGwgbG92ZSBzb21lb25lIGFuZCBiZSBsb3ZlZCBldmVuIGlmIHlvdSBub3QgZnJpZW5kcy4uIApUaGUgbW9zdCBpbXBvcnRhbnQgcGFydCBvZiBzdHVkeSBpcyBwdXR0aW5nIHdoYXQgeW91IGhhdmUgc3R1ZGllZCB0byB0aGUgdGVzdC4gRG8gd2hhdGV2ZXIgbWV0aG9kIG9mIHN0dWR5IHlvdSBsaWtlIGFuZCB0aGVuIHBsYXkgYSBzZXNzaW9uIHJpZ2h0IGFmdGVyd2FyZHMuIEVhY2ggc2Vzc2lvbiBjaG9vc2UgYSBzcGVjaWZpYyBwYXJ0IG9mIHlvdXIgZ2FtZSB0byBmb2N1cyBvbiAocmFpc2luZywgYmV0IHNpemluZywgdGlnaHQgZm9sZHMsIHJlcmFpc2luZywgYmx1ZmZpbmcsIGV0Yy4pClRoZSBzaGl0dHkgcGVvcGxlIHdlcmUgYSBzbWFsbCwgeWV0IGxvdWQgbWlub3JpdHkuIEkgbm90IHNheWluZyB0aGluZ3MgbGlrZSB3aGl0ZSBwcml2aWxlZ2UgYW5kIHJhY2lzbSBkb24gZXhpc3QsIGJ1dCB0aGVyZSB3YXMgYWJzb2x1dGVseSBubyBudWFuY2UgZnJvbSB0aGUgbGVmdCBvbiB0aGlzLiAKVGhlIHNtYWxsIGRlbnNlIHR5cGUgb2YgTERMIGNob2xlc3Rlcm9sIGdldHMgY2F1Z2h0IGluIHRoZSB0aW55IHRlYXJzIGluIHRoZSBhcnRlcmllcyAgIHRyeWluZyB0byBmaXggaXQsIGJ1dCBpbiBhIGNvbnN0YW50IHN0YXRlIG9mIGluZmxhbW1hdGlvbiB0aGUgY2hvbGVzdGVyb2wgcGlsZXMgdXAgYW5kIGJsb2NrYWdlcyBvY2N1ciBhbmQgaW5jcmVhc2VzIHRoZSBpbmZsYW1tYXRpb24uIApTbyBJIG1vdmVkIHRvIExBIGFzIGEgRXVyb3BlYW4gQXNpYW4gYSB3aGlsZSBhZ28sIGFuZCBJIHRob3VnaHQgaXQgd291bGQgYmUgcmVhbGx5IGNvb2wgc2luY2UgSSdkIHBvdGVudGlhbGx5IGJlIHBhcnQgb2YgYSBwcm9wZXIgQXNpYW4gQW1lcmljYW4gZGlhc3BvcmEgY29tbXVuaXR5LCBzb21ldGhpbmcgdGhhdCBJIGhhZCBub3QgZXhwZXJpZW5jZWQgZ3Jvd2luZyB1cCBpbiBteSBkaXZlcnNlIGNpdHkgd2hlcmUgdGhlcmUgd2VyZSBwbGVudHkgb2YgbWlub3JpdGllcyBidXQgbm90IHRoYXQgbWFueSBFYXN0IEFzaWFucyAvIFNFQXNpYW5zLgpJIHJhaXNlIHRvIDYsIGZhbWlseSBwb3Qgd2l0aCBjYWxscyBhbGwgdGhlIHdheSBhcm91bmQuIApBaCEgcyBsZXMgZGF0dGVzLCBjIHBhcyBwb3VyIG1vaS4gSmUgbHVpIGRlbWFuZGUgcG91cnF1b2kuIExlIGRpYWJ0ZSwgcnBvbmQgaWwuIApQdXQgZG93biBwZWUgcGFkcyBpbiBoZXIgY3JhdGUgYW5kIHRoaXMgd2lsbCBzb2FrIHVwIGFueSBwZWUgYnV0IHRoZSBrZXkgdGhpbmcgaXMgdG8gcHVsbCBoZXIgd2F0ZXIgMTIgaG91cnMgYmVmb3JlIGhlciBmbGlnaHQuLiAKVWggcGVvcGxlIGluIHRoaXMgY2hhdCBub3Qga25vd2luZyBob3cgRVUgbGF3cyB3b3JrIHJlZ2FyZGluZyBhcnRpY2xlIDEzIGFuZCBkYXRhIGNvbGxlY3Rpb24uIFRoZSBwdWJsaXNoaW5nIGFuZCBjb21tZXJjaWFsIHVzZSBvZiBzb21lb25lIGVsc2UgaW1hZ2UgaXMgYWxyZWFkeSBpbGxlZ2FsIGluIG1hbnkgRVUgY291bnRyaWVzIGFuZCBpdCBnb2luZyB0byBwdXNoIGl0IGZ1cnRoZXIsIHRoYXQgd2h5IHRoZXJlIGFyZW4gbWFueSAiSVJMIiBzdHJlYW1lcnMgaW4gR2VybWFueS4gClRoZSBmaW5hbmNlIG1pbmlzdGVyIGNsYWltZWQgdG8gaGF2ZSBjb252aW5jZWQgdGhlIElNRiB0byBncmFudCBtb3JlIHdhaXZlcnMgYW5kIGV2ZW4gImFsbG93IFJzMTUwIGJpbGxpb24gZm9yIGltcGxlbWVudGF0aW9uIG9mIHRoZSBOYXRpb25hbCBBY3Rpb24gUGxhbiBhcyB3ZWxsIGFzIHJlcGF0cmlhdGlvbiBvZiBpbnRlcm5hbGx5IGRpc3BsYWNlZCBwZXJzb25zIiB3aXRoIG5vIHRheCBtZWFzdXJlcy4gCjUgaW4gdGhlIHNhbWUgbWFubmVyLiBUaGUgZmluYW5jZSBtaW5pc3RlciBjbGFpbWVkIHRvIGhhdmUgY29udmluY2VkIHRoZSBJTUYgdG8gZ3JhbnQgbW9yZSB3YWl2ZXJzIGFuZCBldmVuICJhbGxvdyBSczE1MCBiaWxsaW9uIGZvciBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgTmF0aW9uYWwgQWN0aW9uIFBsYW4gYXMgd2VsbCBhcyByZXBhdHJpYXRpb24gb2YgaW50ZXJuYWxseSBkaXNwbGFjZWQgcGVyc29ucyIgd2l0aCBubyB0YXggbWVhc3VyZXMuIFRoZSBJTUYgaXMgc2lsZW50IG9uIGJvdGggdGhlc2Ugc3ViamVjdHMgYnV0IGlmIHRoZSBzdGF0ZW1lbnQgYXR0cmlidXRlZCB0byB0aGUgZmluYW5jZSBtaW5pc3RlciBpcyB0cnVlLCB0aGUgSU1GIHdpbGwgc2V0IGEgcmVjb3JkIG9mIGl0cyBvd24gZm9yIGRldmlhdGlvbiBmcm9tIGl0cyBjaGFydGVyLCB3aGljaCB3YXMgZGVzaWduZWQgdG8gcHJvdmlkZSB0ZW1wb3JhcnkgYmFsYW5jZSBvZiBwYXltZW50cyBzdXBwb3J0IGZvciBnZW51aW5lIHBvbGljeSByZWZvcm1zIHRvIHJlc3RvcmUgZnVuZGFtZW50YWwgZXF1aWxpYnJpdW0gaW4gdGhlIGJhbGFuY2Ugb2YgcGF5bWVudHMuLiAKSW4gaXRzIGZpcnN0IHllYXIgdGhlIHNpbmdsZSBkYXkgZXZlbnQgYXR0cmFjdGVkIDEsNzAwIGF0dGVuZGVlcy4gCkl0IGRlZmluaXRlbHkgaW4gTm9ydGggQW1lcmljYS4gWW91IGNhbiB0ZWxsIGJ5IHRoZSBsaWNlbnNlIHBsYXRlcyAgIHdoaWNoIGhhdmUgdGhlIGNsYXNzaWMgc2hhcGUgdXNlZCBieSB0aGUgVVNBLCBDYW5hZGEsIGFuZCBNZXhpY28uIApUaGVyZSBhcmUgbWFueSByZWFzb25zIHdoeSBvbmxpbmUgY2FzaW5vcyBhdHRyYWN0IHRob3VzYW5kcyBvZiBwbGF5ZXJzIGVhY2ggYW5kIGV2ZXJ5IGRheS4gQmVzaWRlcyB0aGUgbHVjcmF0aXZlIGJvbnVzZXMgYW5kIGF1dGhlbnRpYyBhdG1vc3BoZXJlLCB0aGUgbW9zdCBpbXBvcnRhbnQgZmVhdHVyZSBvZiBldmVyeSBnYW1ibGluZyBzaXRlIGlzIGl0cyBnYW1lIHNlbGVjdGlvbi4gQXQgb25saW5lIGNhc2lub3MgY3VzdG9tZXJzIGNhbiB0cnkgYSBnb29kIG51bWJlciBvZiB0YWJsZSBnYW1lcyBzdWNoIGFzIGNyYXBzIGFuZCByb3VsZXR0ZSBhcyB3ZWxsIGFzIGNhcmQgZ2FtZXMgbGlrZSBibGFja2phY2sgYW5kIGJhY2NhcmF0LiAKVGhlIGFtb3VudCB3YXMgYSB2ZXJ5IGhlZnR5IDEwMCwwMDAgZnJhbmNzLCB3aGljaCB3ZW50IGEgbG9uZyBsb25nIHdheSBpbiB0dXJuIG9mIHRoZSBjZW50dXJ5IEZyYW5jZSwgYW5kIHdoaWNoIHRvZGF5IHdvdWxkIGJlIGVxdWl2YWxlbnQgdG8gYWJvdXQgJDEgbWlsbGlvbiBvciBzb21lIHN1Y2guLiAKQXMgb2Ygbm93IChNYXJjaCAyMDEwKSwgTGFkeSBHYWdhIGhhcyBvbmUgYWxidW0uIApUaGUgY29sbGVnZSwgYXMgb2YgbGFzdCBmYWxsLCBoYWQgYSByZWNvcmQgMTIsODA1IHN0dWRlbnRzLCBpbmNsdWRpbmcgbW9yZSB0aGFuIDEwLDAwMCBhdCBpdHMgZG93bnRvd24gYW5kIFNvdXRoIFdpbmRzb3IgY2FtcHVzZXMsIG5lYXJseSAxLDIwMCBpbiBDaGF0aGFtIGFuZCBhbm90aGVyIDEsMjAwIGF0IGEgVG9yb250byBjYW1wdXMgZm9yIGludGVybmF0aW9uYWwgc3R1ZGVudHMgcnVuIGJ5IGEgcHJpdmF0ZSBzZWN0b3IgcGFydG5lci4KVGhpbmtpbmcgb2YgZ3JhYmJpbmcgYW4gZWFzZWwgc28geW91IGRvbid0IGhhdmUgdG8gZ3JhYiB0aGF0IGNoZWNrYm9vayB0byBmdWxmaWxsIHlvdXIgY2l2aWMgZHV0eT8gVGhpbmsgYWdhaW46IE5vdCBldmVyeW9uZSB3aXRoIGEgcGFpbnQgYnkgbnVtYmVycyBzZXQgYW5kIGEgZmxhaXIgZm9yIGNvbG9yIGNhbiBjb3ZlciB0aGVpciB0YXggYmlsbHMgd2l0aCBhIGNvdXBsZSBob3VycyBpbiB0aGUgc3R1ZGlvLiBBcnRpc3RzIGFyZSB2ZXR0ZWQgYnkgZ292ZXJubWVudCBvZmZpY2lhbHMgYW5kIGEgcGFuZWwgb2Ygb3RoZXIgbGVnaXQgYXJ0aXN0cyBiZWZvcmUgdGhleSBjYW4gcGFydGljaXBhdGUgaW4gdGhlIHByb2dyYW0sIGFuZCB0aGUgd29ya3MgdGhleSBkb25hdGUgaGF2ZSB0byBtZWV0IGEgY2VydGFpbiBzdGFuZGFyZCBvZiBxdWFsaXR5LiBBcnRpc3RzIG1ha2UgdGhlIGdvdmVybm1lbnQgZG9uYXRpb25zIGFjY29yZGluZyB0byByZXBvcnRlZCBzYWxlcywgZG9uYXRpbmcgb25lIHBpZWNlIHRvIHRoZSBnb3Zlcm5tZW50IGZvciBldmVyeSBmaXZlIHRoYXQgdGhleSBzZWxsIG9uIHRoZSBvcGVuIG1hcmtldC4gCkkgZW5qb3kgd29ya2luZyB3aXRoIG51bWJlcnMgYW5kIHRoYXQgaXMgd2hhdCBhY2NvdW50aW5nIGlzLCB0cnlpbmcgdG8gbWFrZSBldmVyeXRoaW5nIGJhbGFuY2UgdG8gbWFrZSBzdXJlIHRoYXQgZXZlcnl0aGluZyBpcyBjaGVja2VkLi4gCkl0J3MgYSBiaWcgY2hvaWNlLiAKSSBtYWtpbmcgdGhpcyBwb3N0IGluIHBhcnQgYXMgYSByZXNwb25zZSB0byBhIHJlY2VudCBwb3N0IGFib3V0IHBvdGVudGlhbCBwcm9ibGVtcyB3aXRoIGdhbWJsaW5nIGFkZGljdGlvbiBhbmQgYWxzbyBqdXN0IGEgZ2VuZXJhbCByZW1pbmRlciBhYm91dCB0aGUgaW1wb3J0YW5jZSBvZiB0aGUgc3ViamVjdC4gSSB3cm90ZSB0aGlzIHBvc3QgNCB5ZWFycyBhZ28gYnV0IGl0IHJpbmdzIHRydWUgdG9kYXkganVzdCBhcyB3ZWxsIGFzIGl0IGRpZCB0aGVuIGFuZCBhbHdheXMgd2lsbDoKSGluenUga29tbXQsIGRhc3MgZWluaWdlIFNwaWVsZXIgdm9uIGRlbiBoaGVyZW4gTGltaXRzIHBsdHpsaWNoIGF1Y2ggYXVmIDIvNCBzcGllbGVuIHVuZCBzb21pdCBkaWUgS29ua3VycmVueiBocnRlciB3dXJkZS4gS2VpbmUgQWhudW5nIHdhcnVtIGF1ZiBlaW5tYWwgZWluaWdlIGdsZWljaHplaXRpZyBpbSBMaW1pdCBhYmdlc3RpZWdlbiBzaW5kLCBhYmVyIGRpZXNlIFRhdHNhY2hlIGJlZWludHJjaHRpZ3QgbmF0cmxpY2ggYXVjaCBkaWUgR2V3aW5ucmF0ZS4gQmlzaGVyIGhhYmUgaWNoIGthdW0gV2VydCBhdWYgZGllIFRpc2NoYXVzd2FobCBnZWxlZ3QsIGRhIGRpZSBHZWduZXIgZHVyY2ggZGllIEJhbmsgc2VociBzY2h3YWNoIHdhcmVuLiAKS25vY2tpdCB1CkEgZmV3IG1vbnRocyBsYXRlciwgdGhlIGVudGljaW5nbHkgc3dlZXQgMTc4IGhwIE1hemRhc3BlZWQgTWlhdGEgKGp1c3Qgb3ZlciA1LDQwMCB3ZXJlIGFzc2VtYmxlZCkgdGFudGFsaXplZCBvdXIgdGFzdGUgYnVkcy4gClN0cm9uZ2ZhaXRoZmlybW1pbmQgdQpPbmUgb2YgdGhlaXIgbWVtYmVycywgcmVzcG9uZGluZyB0byB0aGVpciAiRW5kYW5nZXJlZCBTcGVjaWVzIiBjYW1wYWlnbiB3cm90ZToKVGhlIG5ldyBNYXJrZXQgRGlzdHJpY3QgZm9vZCBjb3VydCBoYXMgZ3JlYXQgZm9vZCwgYW5kIG91dCBvZiBhbGwgdGhlIERldHJvaXQgY2FzaW5vcywgdGhpcyBvbmUgaGFzIHRoZSBuaWNlc3Qgc3RhZmYuIFRoZSByb29tcyBhcmUgd2VsbCBhcHBvaW50ZWQsIGFuZCBzcG90bGVzcy4gCllvdSBjYW4gYnV5IGJ1bGsgYmFncyBvciBib3hlcyBvbmxpbmUsIHdpdGggdGhlIHJpZ2h0IGNvdXBvbnMgdGhleSBjYW4gYmUgZmFpcmx5IGluZXhwZW5zaXZlLiBUaGUgc2ltcGxlc3Qgd2F5IHRvIG1ha2Ugb25lIGlzIHRvIG1ha2UgYSBnaWFudCBvcGVuICBlbmRlZCBzZXcgdmVydGljYWwgcXVpbHRpbmcgbGluZXMsIGZpbGwgZWFjaCB3aXRoIGEgaGFuZGZ1bCBvZiBwZWxsZXRzLCB0aGVuIHNldyBhY3Jvc3MgdGhlIGxpbmVzIHRvIHNlYWwgdGhlbS4gCktvbnRha3RWaXNpb24gICBIZXJ6UmF1bXNwaWVscmVnZWxuIGltIHJhdW1hbGwgZGFzLCB3YXMgbmhydCB1bmQgYmVnbGVpdGV0IGluIHplaXRlbiB2b24gZHVua2VsaGVpdCB1bmQgZWluc2Fta2VpdCwgc2NobWVyeiBvZGVyIHRyYXVlciwgYW5nc3Qgb2RlciB6d2VpZmVsIHVuZCBpbiB6ZWl0ZW4gZGVyIGZyZXVkZSB1bmQgZGVyIGZlaWVybiwgZGVyIHdyZGlndW5nIHVuZCBkZXMgdmVydHJhdWVucyBpbiBkaWUgZWlnZW5lIGtyYWZ0LgpBbmQgaGVyZSB3aGVyZSBpdCByZWFsbHkgY29tZXMgaW50byBwbGF5LiAKMyBwb2ludHMgIHN1Ym1pdHRlZCAxIHllYXIgYWdvQXMgcGFydGx5IE9yaXNhIG1haW4gSSBjYW4gb2Z0ZW4gc2VlIGJvdGggc2lkZXMgb2YgdGhlc2Uga2luZCBvZiBhcmd1bWVudHMuIEdyZWF0IE9yaXNhIHJlYWRzIHRoZSBzaXR1YXRpb24gYW5kIGZpbmRzIHRoZSBiZXN0IHBvc3NpYmxlIHNwb3QgdG8gYm90aCBoZXIgYW5kIGhlciB0ZWFtbWF0ZXMsIGJ1dCBzb21ldGltZXMgaW4gY2hhb3RpYyBzaXR1YXRpb25zIHdoZXJlIE9yaXNhIG5lZWRzIGEgcXVpY2sgcHJvdGVjdGlvbiBmb3IgaGVyc2VsZiBhbmQgbmVhcmVzdCB0ZWFtbWF0ZXMgdG8gYXZvaWQgZGVhdGhzIGFuZCBoZWxwIHNlY3VyZSBraWxsIHdpdGhvdXQgdGFraW5nIHBvaW50bGVzcyBkYW1hZ2UsIGl0IGNhbiBiZSBoYXJkIHRvIGZvY3VzIG9uIGtlZXBpbmcgYW4gZXllIHdoZXJlIGhlciBjdXJyZW50IGRlcGxveWVkIHNoaWVsZCBpcyBhbmQgd2hvIGNvdWxkIGJlIHVzaW5nIGl0LCBhbmQgaXQgY2FuIHNpbXBseSBiZSBvdXQgb2YgaGVyIGZpZWxkIG9mIHZpc2lvbi4gCkkgd2FzIGhhcHB5IGhlIGFza2VkIGJ1dCBhd2t3YXJkIG1lIGhhZCBubyBpZGVhIHdoYXQgdG8gc2F5IGJlY2F1c2UgdGhlIHdvcmRzIGdvdCBzdHVjayBpbiBteSB0aHJvYXQuV2VsbCBJIGFwcGFyZW50bHkgd2FpdGVkIGEgc2Vjb25kIHRvbyBsb25nIGJlY2F1c2UgaGUgY2hhbmdlZCBoaXMgdHVuZS4gCkEgRGVudmVyIG1hbiBoYXMgYmVlbiBhcnJlc3RlZCBhZnRlciBoZSByZXBvcnRlZGx5IHJvYmJlZCBhIG1hbiBpbiBsaW5lIGF0IE1jRG9uYWxkJ3MgYW5kIHRoZW4gZHJhZ2dlZCB0aGF0IG1hbiBtb3JlIHRoYW4gMTAwIHlhcmRzIG91dHNpZGUgb2YgaGlzIHZlaGljbGUgZHVyaW5nIGFuIGVuc3VpbmcgcHVyc3VpdC4KTm91cyBkY291dnJpb25zIGF2ZWMgdW4gY2VydGFpbiBlZmZhcmVtZW50IGRlcyBkYXRlcyBkZSBwcmVtcHRpb24gZHBhc3NlcyBwb3VyIGNlcnRhaW5lcyBkZSAxMCBqb3VycyEgVW5lIHNhbGV0IHBhcnRpY3VsaXJlIGRhbnMgbGVzIGFsbGVzLCBkZXMgYmFjcyBzdXJnZWxzIG91dmVydHMgZXQgbWFsIGNoYXJncywgdW5lIGFic2VuY2UgZGUgdGhlcm1vbXRyZSBwb3VyIHZyaWZpZXIgbGEgdGVtcHJhdHVyZS4gCklzIGFzIHRydWUgb2YgZ2VuZGVyIHJ1bGluZyBlbGl0ZXMgYXMgaXQgaXMgb2YgZWNvbm9taWMgb25lcyAobm90IHRoYXQgdGhlIHR3byBhcmUgc2VwYXJhdGUpLiAKVG9wIFRlY2ggQXQgQ0VTIDIwMTZDRVMgMjAxNlRoZSBTZW5zb3JXYWtlIG9sZmFjdG9yeSBhbGFybSBjbG9jayBpcyBkaXNwbGF5ZWQgd2l0aCBzY2VudCBjYXJ0cmlkZ2VzIGF0IHRoZSBDRVMgMjAxNiBjb25zdW1lciBlbGVjdHJvbmljcyBzaG93IGluIExhcyBWZWdhcywgTmV2YWRhLCBKYW51YXJ5IDcsIDIwMTYuIENhcHN1bGVzIHdpdGggc2NlbnRzIHN1Y2ggYXMgY29mZmVlLCBjcm9pc3NhbnRzLCB0b2FzdCwgdGhlIG9jZWFuLCBvciBtb25leSBhcmUgaW5zZXJ0ZWQgaW4gdGhlIGFsYXJtIGNsb2NrIHRvIHdha2UgYSBzbGVlcGluZyBwZXJzb24uIChST0JZTiBCRUNLL0FGUC9HZXR0eSBJbWFnZXMpCkFuZCBpbiBnZW5lcmFsLiBTdXJlLCBsaWZlIGlzIG1vcmUgY29udmVuaWVudCBub3cuIE15IHBob25lIGNhbiBkbyBhbnl0aGluZyBpbiBDaGluYSBhbmQgdGhhdCB3b25kZXJmdWwsIGJ1dCBkdWUgdG8gdGhlIGVjb25vbXkgYW5kIG92ZXJhbGwgZGlyZWN0aW9uIHRoZSBnb3Zlcm5tZW50IGlzIHRha2luZywgSSBub3Qgb3B0aW1pc3RpYyBhYm91dCB0aGUgZnV0dXJlLiAKSG9tZSBwcmVnbmFuY3kgdGVzdHMgYXJlIGEgcXVhbGl0YXRpdmUgbWV0aG9kIG9mIHRlc3RpbmcgZm9yIHByZWduYW5jeS4gSXRzIG1haW4gcHVycG9zZSBpcyB0byB0ZWxsIHlvdSAieWVzIiBvciAibm8iIGZvciBwcmVnbmFuY3kuIFNvbWUgd29tZW4gaGF2ZSBoYWQgbnVtYmVycyBvdmVyIHRoZSAxMDAwcyBhbmQgZ290dGVuIGEgc2h5IGZhaW50IGxpbmUuIFdoaWxzdCBvdGhlcnMgaGF2ZSAyM21sIGFuZCB0ZXN0IGJsYXppbmdseSBwb3NpdGl2ZS4gSSBoYWQgMTAwbWwgdGhlIGZpcnN0IHRpbWUgaSBnb3QgYSBiZXRhIGRvbmUsIGFuZCBvbmx5IHRoZW4gZGlkIEkgZ2V0IGEgc2h5IHBvc2l0aXZlIG9uIGEgSFBUIChzZW5zaXRpdml0eSBvZiB0aGlzIHRlc3Qgd2FzIGFsc28gMjBtbCkuCkp1bWVpcmFoIEdhbXNoYSBCYXkgUmVzb3J0LCBneXB0ZW4KSSBkbyBub3QgcGF5LiAKSm9pbnQgZmFtaWx5IGxpdmluZyBpcyBvbmUgb2YgdGhlIG1vc3QgZ3JlZW4gYW5kIHN1c3RhaW5hYmxlIHdheXMgdG8gbGl2ZSAgIG1vcmUgcGVvcGxlIHNob3VsZCBiZSBvcGVuIHRvIGl0LiAxMSBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnby4gCkp1ZGdlIENsYXVkZSBILiBIaWx0b24gb2YgRmVkZXJhbCBEaXN0cmljdCBDb3VydCBpbiB0aGUgRWFzdGVybiBEaXN0cmljdCBvZiBWaXJnaW5pYSBydWxlZCB0aGF0IE1zLiBNYW5uaW5nIG11c3Qgc3RheSBpbiBjaXZpbCBkZXRlbnRpb24gdW50aWwgc2hlIHRlc3RpZmllcywgc2FpZCBoZXIgbGF3eWVyIE1vaXJhIE1lbHR6ZXIgQ29oZW4uCkkga25vdyB0aGVyZSBUd2l0Y2ggdG91cm5hbWVudHMgYW5kIFBVQkcgdHJpZWQgc29tZSB3aGlsZSBpbiBFYXJseSBBY2Nlc3MgKGx1bCksIGJ1dCB0aGUgZGVzaWduIG9mIHRoZSBnZW5yZSBpcyBidWlsdCBhcm91bmQgYSBkZWdyZWUgb2YgUk5HIHRoYXQgaXNuIGZ1bGx5IGNvbXBhdGlibGUgd2l0aCBjb21wZXRpdGl2ZSBtdWx0aXBsYXllciwgb25seSBzbGlnaHRseS4KVGhlIGZlZGVyYWwgcHJpc29uIHN5c3RlbSBleHBlcmllbmNlZCBhIDEyMCUgaW5jcmVhc2UgaW4gdXNlIG9mIHByaXZhdGUgcHJpc29ucyBzaW5jZSAyMDAwLCByZWFjaGluZyAzNCwxNTkgcGVvcGxlIGluIHByaXZhdGUgZmFjaWxpdGllcyBpbiAyMDE2LiAKT3ZlcnZpZXcgZm9yIHdoaW1zaWNhbGx5bGl0CkluIHRoaXMgY2FzZSB3ZSB3ZXJlIGFibGUgdG8gbWF0Y2ggdGhlIHBva2VyIGNoaXBzIHRvIHRoZSB0aGVtZSBvZiBvdXIgZmluaXNoZWQgYmFzZW1lbnQuLiAKQW5kIHlvdSBnZXQgYmFjayBwYWluIGZyb20gc3BpbmFsIGluc3RhYmlsaXR5IGluIHRoZSBwcm9jZXNzc29tZSBjbGllbnRzIGFyZSB1c2luZyB0aGVpciBleHRlbmRlZCBoZWFsdGggYmVuZWZpdHMgICBhbmQgdGhleSBoYXZlIGEgcmlnaHQgdG8gdXNlIHRoZW0gYXMgdGhlc2UgYmVuZWZpdHMgYXJlIHBhcnQgb2YgdGhlaXIgb3ZlcmFsbCBjb21wZW5zYXRpb24gcGFja2FnZS5vdGhlciBwZW9wbGUgYXJlIGdldHRpbmcgdGhlaXIgdHJlYXRtZW50cyBwYWlkIGZvciBieSB0aGUgaW5zdXJhbmNlIGNvbXBhbnkgb2YgdGhlIHBlcnNvbiB3aG8gY2F1c2VkIHRoZSBhY2NpZGVudCB0aGV5IHdlcmUgaW4uIApTaGUncyBhIHJlbGF0YWJsZSBhbmQgYXBwZWFsaW5nIGNoYXJhY3RlciBhbmQsIHdoZW4gY2lyY3Vtc3RhbmNlcyBmb3JjZSBoZXIgdG8gc2hlZCBoZXIgYWRvcHRlZCBpZGVudGl0eSBvZiBhIGZyYWdpbGUsIG5hdmUgZ2lybCwgaXQncyBoYXJkIHRvIHJlc2lzdCBhcHBsYXVkaW5nLiAKT25lIGZvciB0aGUgZ3JlYXQgaGVyYmFsIGFjbmUgaGVyYmFsIHJlbWVkaWVzIGlzIHRvIGNvbWJpbmUgb25lIGxldmVsIHRlYXNwb29uIG9mIHNsaXBwZXJ5IGVsbSBwb3dkZXIgd2l0aCBwbGVudHkgZWNoaW5hY2VhIHRpbmN0dXJlIHRvIGRldmVsb3AgYSB0aGljayBwYXN0ZS4gTWl4IHVudGlsIHNtb290aC4gCkJhc2ljYWxseSwgd2l0aCBmZXdlciBzYWZldHkgZXF1aXBtZW50IHRoZSBjaXZpYyBpcyBzdGlsbCBzYWZlciBvbiB0aGUgZnJlZXdheXMgYW5kIHR3aXN0aWVzIGR1ZSB0byBpdHMgY2FwYWJpbGl0eSBhcyB3ZWxsIGFzIHJvYWQgcHJlc2VudC4gClRoZSByZWNlcHRpb24gYXJlYSBpcyBhIGxhcmdlLCBkaW1seSBsaXQgcm9vbSB3aXRoIGdpcmxzIHNpdHRpbmcgaW4gYSBuZWFybHkgY29tcGxldGUgY2lyY2xlLCBhbmQgYSBicmlnaHRseSBsaXQgZmlzaGJvd2wuIApUaGVyZSBpcyBhIG5vdCBhIGxvdCBvZiBvdXRjcnkgZnJvbSBncm91cHMgIGJ1dCBzb21lIGRlZmluaXRlIGNvbmNlcm5zLiAKV2UndmUgd29ya2VkIHdpdGggQmxpenphcmQgdG8gaGVscCBlbnN1cmUgdGhlc2UgaXNzdWVzIGFyZSBwcm9wZXJseSBhZGRyZXNzZWQuIFRoZSBiZXN0IHdheSB0byBoYW5kbGUgaGFyYXNzbWVudCBvciBjb2RlIG9mIGNvbmR1Y3QgdmlvbGF0aW9ucyBpcyB0byB1c2UgdGhlIGluIGdhbWUgcmVwb3J0aW5nIG1ldGhvZHMuIFlvdSBjYW4gcmVhZCBob3cgdG8gc3VibWl0IHRoZXNlIHJlcG9ydHMgaGVyZTogUmVwb3J0aW5nIEhhcmFzc21lbnQgaW4gT3ZlcndhdGNoLgpJbiB0aGlzIHNlY3Rpb24sIHdlIHdpbGwgc2hvdyB5b3UgaG93IHRvIGRpYWdub3NlIGNhdCBkaWFiZXRlcyBhbmQgaG93IHRvIHJlZHVjZSB5b3VyIGNhdCdzIGNoYW5jZXMgb2YgY29udHJhY3RpbmcgdGhlIGRpc2Vhc2UuIFRoZXJlIGFyZSBzb21lIHN0cm9uZyBzaW1pbGFyaXRpZXMgYmV0d2VlbiB0aGUgdHdvIGRpc2Vhc2VzLCBidXQgdGhlIGltcG9ydGFudCBkaXN0aW5jdGlvbiB0byBtYWtlIGlzIHRoYXQgaHVtYW5zIGNhbm5vdCwgdW5kZXIgYW55IGNpcmN1bXN0YW5jZXMsIGNhdGNoIHRoZSBBSURTIHZpcnVzIGZyb20gYSBjYXQuIApGYXN0IGZvcndhcmQgdG8gYSB5ZWFyIG9mIHRoaXMgZ29pbmcgb24uIEkgZ2V0IGEgdGV4dCBvbmUgRnJpZGF5IG9yIFNhdHVyZGF5IG5pZ2h0IGZyb20gaGVyIGFuZCBzaGUgYWN0aW5nIGRpZmZlcmVudC4gTGlrZSBvdmVyIHRoZSB0b3AgZm9yd2FyZCBhbmQgYWN0aW5nIGludGVyZXN0ZWQgaW4gbWUuIApJZiB5b3Ugd2FudCB0byBiZSBwYWlkIG9yIGhhdmUgc29tZXRoaW5nIGNvbnRyaWJ1dGVkLCBjb21tb24gY291cnRlc3kgZGljdGF0ZXMgdGhhdCB5b3Ugc2hvdWxkIHJlcXVlc3QgaXQgYXQgdGhlIHRpbWUgb2YgdGhlIGludml0YXRpb24sIHNvIHRoZSBndWVzdCBjYW4gZGVjaWRlIHdoZXRoZXIgdGhleSBhYmxlIHRvIGFmZm9yZCB0byBhdHRlbmQuIApSYW5nZSBzaXR1YXRpb25zLCBhbmQgZ2V0IHN0cm9uZ2VyIGFuZCBzdHJvbmdlciBhcyByYW5nZXMgZ2V0IHNtYWxsZXIgYW5kIHNtYWxsZXIgdGhyb3VnaCB0aGUgaGFuZC4pLiAKUnVsZSA1ICBzdGF5IGNhbG0gYW5kIGNvbnRyb2xsZWQgW2EgZ2VudGxlIGFuc3dlciB0dXJucyBhd2F5IHdyYXRoLCBidXQgYSBoYXJzaCB3b3JkIHN0aXJzIHVwIGFuZ2VyLiAKTWFrZSBzdXJlIG1lYXNsZXMgc2hvdHMgdXAgdG8gZGF0ZSBpbiB3YWtlIG9mIEIKIlZlcnkgZGlmZmljdWx0IHRvIGdldCB0aGUgcG9rZXIgZmFjZSBvbiBhbmQgcmVhbGx5IGtudWNrbGUgZG93biBhbmQgcGxheVNoYW5lLCBiZWluZyBhIGdvb2QgZnJpZW5kIGxpa2UgaGUgaXMsIiBzYWlkIE1jRG93ZWxsLCB3aG8ga25vY2tlZCBvdXQgYm90aHBsYXllcnMgZnJvbSBJcmVsYW5kIHRoaXMgd2VlayBhZnRlciBiZWF0aW5nIFBhZHJhaWcgSGFycmluZ3RvbiBpbiB0aGUgZmlyc3Ryb3VuZC4KMCBwb2ludHMgIHN1Ym1pdHRlZCA0IG1vbnRocyBhZ28uIApNQVJURU5TLCBQaGlsaXAgSXQgaXMgd2l0aCBoZWFydGZlbHQgc2FkbmVzcyB0aGF0IHdlIGFubm91bmNlIHRoZSBwYXNzaW5nIG9mIFBoaWwgYWZ0ZXIgYSBsb25nIGNvdXJhZ2VvdXMgYmF0dGxlIHdpdGggTVMuIEhpcyBsb3ZpbmcgZmFtaWx5IHdhcyBhdCBoaXMgc2lkZSBhcyBoZSBiZWdhbiBoaXMgam91cm5leSB0byBIZWF2ZW4sIG9uIFR1ZXNkYXksIE9jdG9iZXIgMTYsIDIwMTggaW4gaGlzIDUzcmQgeWVhci4gClBvc3RnYWR1ZXMgZW4gb3N0b3BhdGhpZSBJVi4gClRoZXJlIGlzbiBhbiBlYXN5IGFuc3dlci4gVG8gcHV0IGl0IGluIGEgd2F5IHRoYXQgZXZlcnkgY2hyb25pYyBwYWluIHN1ZmZlcmVyIGNhbiB1bmRlcnN0YW5kOyBwYWluIGlzIGEgdmVyeSBwb3dlcmZ1bCBtb3RpdmF0b3IuIApab21iaUJyYWlueiB1CkFsc28sIHRoaXMgZG9lc24gZml4IHRoZSBwcm9ibGVtIHdoZXJlIHlvdSBjb250aW51YWxseSBmYWxsIHRocm91Z2ggdGhlIHdvcmxkIGlmIHlvdSBkaXNtb3VudCBhIGRpbm8gd2l0aCB0aGUgd3JvbmcgY29tYm8gb2YgY29tbWFuZHMgYW5kIHlvdSBzaW5rIGFsbCB0aGUgd2F5IHRocm91Z2ggdGhlIHdvcmxkIGlmIHlvdSBub3QgZmFzdCBlbm91Z2guClRoZSAkMTAsMDAwIGl0IHdvdWxkIGNvc3QgYSB5ZWFyIHdvdWxkIGJlIGEgYnVyZGVuIG9uIHRoZSBQYWl1dGUgdHJpYmUuIApQZXJzb25hbGx5LCBpIGxpa2UgdG8gYmUgdmVyeSBjbGVhciB3aXRoIG15IHNvbiBhYm91dCB3aG9zZSBzaWRlIEknbSBvbiBhbmQgaG93IGVmZmVjdGl2ZSBJIGNhbiBiZS4gSSB3aWxsIG5laXRoZXIgY29uZmlybSBub3IgZGVueSB0aGF0IG9uY2UsIHdoZW4gbXkgc29uIG1lbnRpb25lZCBhIGxpdHRsZSBnaXJsIGNhbGxpbmcgaGltIHdlYWsgYmVjYXVzZSBoZSBhc2tlZCBoZXIgdG8gc3RvcCBoaXR0aW5nIGhpbSwgSSBhc2tlZCBpZiBoZSB0aG91Z2h0IGhlIGhhZCBpdCBjb3ZlcmVkLiBCZWNhdXNlLCBpZiBoZSBkaWRuJ3QsIG1vbW15IGNvdWxkIGFuZCB3b3VsZCB0YWtlIHRoYXQgbGl0dGxlIGJpdGNoIGRvd24uIApTaGUgaGFkIGEgcHJvZmVzc2lvbmFsIHRhYmxlIHNldCB1cCBhbmQgSSBmZWx0IHZlcnkgcmVsYXhlZCB5ZXQgZXhjaXRlZCBieSBoZXIgYmVhdXR5LiAKIldlJ3ZlIHBsYXllZCB0aGlzIGdhbWUgc2luY2Ugd2Ugd2VyZSBsaXR0bGUga2lkcywgd2UgZHJlYW1lZCBhYm91dCB0aGlzIG1vbWVudCwiIGdhbWUgTVZQIEZvbGVzIHNhaWQuICJUaGVyZSdzIHBsZW50eSBvZiBraWRzIHdhdGNoaW5nIHRoaXMgZ2FtZSByaWdodCBub3cgZHJlYW1pbmcgYWJvdXQgdGhpcyBtb21lbnQgYW5kIHNvbWVkYXkgd2lsbCBiZSBoZXJlLiIKVGhleSBzdGlsbCBoYW5naW5nIG91dCwgaW4gZWFjaCBvdGhlciB3ZWRkaW5ncywgZ2V0dGluZyB0b2dldGhlciBmb3IgbGl0dGxlIHJldW5pb25zLiBJIGFsd2F5cyBmZWx0IHdlaXJkIGFuZCBvdXQgb2YgcGxhY2UgaW4gaGlnaCBzY2hvb2wgYW5kIHBhcnQgb2YgbWUgYmVsaWV2ZWQgSSB3YXMgZGVzdGluZWQgdG8gc29jaWFsIGlzb2xhdGlvbiBiZWNhdXNlIEkgd2FzIG5ldmVyIGZlbHQgcGFydGljdWxhcmx5IGJvdW5kIHRvIGFueW9uZSBvciBhbnkgZ3JvdXAuIApUaGUgc3R1ZHksIHB1Ymxpc2hlZCBpbiBNb25kYXkgaXNzdWUgb2YgdGhlIEFyY2hpdmVzIG9mIEdlbmVyYWwgUHN5Y2hpYXRyeSwgbG9va2VkIGF0IDE5MiBwYWlycyBvZiB0d2lucyBpbiBDYWxpZm9ybmlhIGFuZCwgdXNpbmcgYSBtYXRoZW1hdGljYWwgbW9kZWwsIGZvdW5kIHRoYXQgZ2VuZXRpY3MgYWNjb3VudCBmb3IgYWJvdXQgMzggcGVyY2VudCBvZiB0aGUgcmlzayBvZiBhdXRpc20sIGFuZCBlbnZpcm9ubWVudGFsIGZhY3RvcnMgYWNjb3VudCBmb3IgYWJvdXQgNjIgcGVyY2VudC5QcmV2aW91cyB0d2luIHN0dWRpZXMgaGFkIHN1Z2dlc3RlZCB0aGF0IGF1dGlzbSB3YXMgaGlnaGx5IGluaGVyaXRhYmxlLCB3aXRoIGdlbmV0aWNzIGFjY291bnRpbmcgZm9yIHJvdWdobHkgOTAgcGVyY2VudCBvZiBhbGwgY2FzZXMgd29ybGR3aWRlLiAKTWV0aG9kczogTmluZSBtZW4gd2VyZSBwbGFjZWQgaW4gYSBzZW1pcmVjbGluZWQgcG9zaXRpb24gYW5kIGxvd2VyZWQgaW50byA4QyBvciAyMkMgd2F0ZXIgdG8gdGhlIGlsaWFjIGNyZXN0IGZvciB0d28gNSBtaW51dGUgcGVyaW9kcyBpbnRlcnNwZXJzZWQgd2l0aCAyIG1pbnV0ZXMgb2Ygbm9uaW1tZXJzaW9uLiBSZWN0YWwgYW5kIHRoaWdoIHNraW4gdGVtcGVyYXR1cmUsIGRlZXAgYW5kIHN1cGVyZmljaWFsIG11c2NsZSB0ZW1wZXJhdHVyZSwgaGVhcnQgcmF0ZSwgbWVhbiBhcnRlcmlhbCBwcmVzc3VyZSwgdGhpZ2ggY3V0YW5lb3VzIGJsb29kIHZlbG9jaXR5IChsYXNlciBEb3BwbGVyKSwgYW5kIHN1cGVyZmljaWFsIGZlbW9yYWwgYXJ0ZXJ5IGJsb29kIGZsb3cgKGR1cGxleCB1bHRyYXNvdW5kKSB3ZXJlIG1lYXN1cmVkIGR1cmluZyBpbW1lcnNpb24gYW5kIGZvciAzMCBtaW51dGVzIGFmdGVyIGltbWVyc2lvbi4gSW5kaWNlcyBvZiB2YXNjdWxhciBjb25kdWN0YW5jZSB3ZXJlIGNhbGN1bGF0ZWQgKGZsdXggYW5kIGJsb29kIGZsb3cvbWVhbiBhcnRlcmlhbCBwcmVzc3VyZSkuLiAKTml2ZXJzaXRlbGVyaW1peiB0ZWtyYXIgYmlsaW0geXV2YXMgb2xzdW4sIGRueWEgaWxlcmxlbWVkZW4gVHJraXllIGlsZXJsZXNpbiBpc3RpeW9ydW0uIEVtcGVyeWFsaXptIGt1cmJhbiBBZnJpa2EgdmUgQXN5YSB0ZWtyYXIgVHJrIGhhbGtuIGlkb2wgYWxtYXNuLCBzcmFpbCBiaWxlIGxrZWxlcmluaSB5ZW5pZGVuIGluYSBlZGVya2VuIFRya2l5ZSBybmVrIGFsbWFzbiwgcmxhbmRhIG1pbGxpeWV0aXNpIFNpbm4gRmVpbiBwYXJ0aXNpbmluIHRla3JhciBrdXJ1bHUgeWxkbm0ga29udW1hc25kYSBHYW5kaGkgV2FzaGluZ3RvbiBNYW5kZWxhIHlhbm5kYSBBdGF0cmsgZGUgaW1lc2luaSBpc3RpeW9ydW0uLiAKQnVyeSBpdApTdGFydCB3aXRoIGEgZ2VudGxlIHJhbmdlIG9mIG1vdGlvbi4gQmVnaW4gbW92aW5nIHlvdXIgaGVhZCBpbiBzbWFsbCBjaXJjbGVzIHdpdGhpbiBhIHBhaW4gZnJlZSByYW5nZS4gCldoZW4gSSBkaXNjb3ZlcmVkIHRoZSBJbnRlcm5ldCwgSSB3b3VsZCBsb29rIGZvciBhbGwgdGhlIEphcGFuZXNlIHBvcm4gSSBjb3VsZCBmaW5kLiAKVGhlIHNlY29uZCBpcyBvbiBsaW5lLCB3aGVyZSB5b3UgY29ubmVjdCB0byBhIGdhbWJsaW5nIHNpdGUgdXNpbmcgeW91ciBQQyBhbmQgYW4gSW50ZXJuZXQgY29ubmVjdGlvbiBhbmQgY2FuIHBsYXkgYnkgeW91cnNlbGYgb3Igd2l0aCBhIGh1bmRyZWQgcGxheWVycyB3aGVyZSB5b3UgY2FuIGdydW1ibGUgYWxsIHlvdSBsaWtlIGluIHlvdXIgdW5kZXJ3ZWFyLi4gCllvdSB3aWxsIGFsd2F5cyB3b3JrIHdpdGggYSB0ZWFtIGFuZCB5b3Ugd2lsbCBhbHdheXMgaGF2ZSB0byBzb2x2ZSBwcm9ibGVtcy4gClNjaW9ub2ljUyAgMyBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ28KU3RheSB0aGUgRlVDSyBhd2F5IGZyb20ga2VubW9yZSBhbmQgTEcgZnJpZGdlcy4gCkwgc3VyIGxlcyBqZXVuZXM/IFVuZSB0dWRlIHN1ciBsYSBzYW50IG1lbmUgdG91cyBsZXMgZGV1eCBhbnMgcGFyIGxlIENvbG9yYWRvIGF1cHJzIGRlIG1pbGxpZXJzIGQgZHUgc2Vjb25kYWlyZSBub3VzIGVuIGRvbm5lIHVuZSBib25uZSBpZGUuIFNlbG9uIGxlIEhlYWx0aHkgS2lkcyBDb2xvcmFkbyBTdXJ2ZXksIDI0LDklIGQgZXV4IG9udCBkY2xhciBhdm9pciBjb25zb21tIGRlIGxhIG1hcmlqdWFuYSBhdSBtb2lucyB1bmUgZm9pcyBkYW5zIGxlcyAzMGpvdXJzIHByY2RhbnQgbGV1ciBycG9uc2UgYXUgcXVlc3Rpb25uYWlyZSBlbiAyMDA5LgpJbmR1bGdlLiBHaXZlIHlvdXIgYm9keSBhbmQgc3Bpcml0IGEgbWFqb3IgcmVzdCBieSBpbmR1bGdpbmcgaW4gY2l0eSBsdXh1cnkgZHVyaW5nIHlvdXIgd2Vla2VuZCBicmVha3MuIENpdHkgbHV4dXJ5IHdvdWxkIGRlcGVuZCBvbiB5b3VyIG93biBwZXJzb25hbCBkZWZpbml0aW9uICAgd291bGQgeW91IGxpa2UgdG8gaW5kdWxnZSBpbiBhIHdob2xlIGJvZHkgbWFzc2FnZSBhbmQgc3BhIHRyZWF0bWVudD8gV291bGQgeW91IGxpa2UgdG8gZW5qb3kgd2F0Y2hpbmcgYSBoaWdobHkgYW50aWNpcGF0ZWQgbW92aWUgYXQgYSBoaWdoIGNsYXNzIG1vdmllIHRoZWF0ZXIgd2l0aCBzdXBlciBjb21mb3J0YWJsZSBtb3ZpZSBzZWF0cyBhbmQgZ291cm1ldCBwb3Bjb3JuPyBPciBpdCBjb3VsZCBiZSBhcyBzaW1wbGUgYXMgZ2V0dGluZyBkcmVzc2VkIHVwIHRvIGdvIHRvIGEgZmFuY3kgcmVzdGF1cmFudCBzZXJ2aW5nIHRoZSBiZXN0IHdpbmUgYW5kIGRlc3NlcnQgdGhhdCB5b3UgaGF2ZSBldmVyIGltYWdpbmVkLiBSZW1lbWJlciwgdGhlIGtleSBoZXJlIGlzIHRvIGluZHVsZ2UgdGhlIHNlbnNlcyBhbmQgc3Bpcml0IHRoYXQgbWlnaHQgYmUgcmVjZWl2aW5nIGFidXNlIGZyb20gdGhlIGRhaWx5IGdyaW5kIGF0IHdvcmsuIFdoYXRldmVyIHlvdSBpbWFnaW5lIHJlbGF4YXRpb24gdG8gYmUsIGdvIGFoZWFkIGFuZCBlbmpveSBpdCEgWW91IGFyZSBjZXJ0YWlubHkgd29ydGggaXQuCkkganVzdCB1c2UgaXQgYXMgYSB0YWJsZXQuIApMaWtlIGFsbCB0aGUgb3RoZXJzIGF0IHRoaXMgdGltZSBoZSBhY2hpZXZlZCB2ZXJ5IGxpbWl0ZWQgc3VjY2VzcyBnaXZlbiB0aGUgcHJvYmxlbSBvZiB0aGUgZWxlY3RyaWMgcG93ZXIgc291cmNlIHRoYXQgd291bGQgbm90IGJlIHNvbHZlZCBmb3IgYW5vdGhlciBjb3VwbGUgb2YgZGVjYWRlcyB3aXRoIGVsZWN0cmljIGdlbmVyYXRvcnMuCkxpa2Ugb3RoZXJzIGhhdmUgc2FpZC4gSXQgaXMgdmVyeSB1bmxpa2VseSB0aGV5IHdpbGwgZ2l2ZSBpdCBhIHNob3J0IG1hcmtldGluZyBjYW1wYWlnbi4gU3RhcmZpZWxkIGlzIGEgYnJhbmQgbmV3IElQLiAKR2l2ZW4gdGhlIG1vZHVsYXIgbmF0dXJlIG9mIE5vZGUgcGFja2FnZXMsIGl0IHdvdWxkIGJlIGFuIGFudGkgcGF0dGVybiB0byBtb2RpZnkgYnVpbHQgaW5zLCBzbyBJIGJldCB0aGUgcmlzayBvZiB0aGVzZSBidWdzIGlzIG11Y2ggbG93ZXIgaW4gdGhhdCBlbnZpcm9ubWVudC4KSWNoIHN0ZWhlIGF1ZiB1bmQgZXJoZWJlIFdvcnQuIApJZiB0aGlzIGNvbnRyYWN0IGlzIHRpZWQgdG8gYSBsYXJnZSBwcm9ncmFtLCB0aGVyZSBpcyBhIHBvc3NpYmlsaXR5IHRoYXQgeW91ciBjb250cmFjdCB3aWxsIGV2ZW50dWFsbHkgYmUgb3V0YmlkIGJ5IGEgZGlmZmVyZW50IGNvbnRyYWN0b3I7IG9mdGVuIHRoZSBwZW9wbGUgaW4gdGhlc2UgcG9zaXRpb25zIG1vdmUgd2l0aCB0aGUgY29udHJhY3QgYW5kIGVuZCB1cCBkb2luZyB0aGUgc2FtZSB3b3JrIGZvciBhIGRpZmZlcmVudCBuYW1lLiAKSW4gMjAxOCBpdCB3YXMgbWFkZSBrbm93biBhbmQgdGhlIElSUyBpbmRpY2F0ZWQgdGhhdCBsaWtlIGtpbmQgdHJhbnNhY3Rpb24gZ292ZXJuYW5jZSBzdGlsbCBkaWQgTk9UIGFwcGx5IHRvIGNyeXB0byBhdCBhbGwsIGV2ZXIuIApHZXQgcmVkZGl0IHByZW1pdW1LaW5kIG9mIGxpa2UgL3IvaWRlYXNmb3J0aGVhZG1pbnMsIGEgcGxhY2Ugd2hlcmUgdXNlcnMgYW5kIG1vZHMgY2FuIGJvdW5jZSBpZGVhcyBhcm91bmQgYW5kIGhvcGVmdWxseSBrZWVwIHVwIHdpdGggZXZvbHZpbmcgdHJlbmRzIHRvIGNyZWF0ZSB0aGUgYmVzdCBwb3NzaWJsZSBleHBlcmllbmNlLgpUaGUgbGFyZ2UgdHdvIHRpZXJlZCBwb29sLCB3aXRoIGl0cyBmYWJ1bG91cyBvY2VhbiB2aWV3cyBhbmQgc2hhZHkgc3BvdHMsIGlzIHRoZSBlcGljZW50cmUgb2YgcmVsYXhhdGlvbi4gRm9yIGFub3RoZXIgZm9ybSBvZiByZWxheGF0aW9uLCBTcGEgQ2VudmFyZWUgaXMgYSByZWZ1Z2UgZm9yIHRoZSBzZW5zZXMgb2ZmZXJpbmcgYSBjaG9pY2Ugb2YgdGhlcmFwZXV0aWMgdHJlYXRtZW50cyBpbmNsdWRpbmcgdHJhZGl0aW9uYWwgQXl1cnZlZGljIG1ldGhvZHMgYW5kIFRoYWkgbWFzc2FnZXMuIFRoZSByZXNvcnQgYWxzbyBvZmZlcnMgaGFuZHMgb24gVGhhaSBjb29raW5nIGNsYXNzZXMsIGFuZCB0d28gcmVzdGF1cmFudHMgYW5kIGEgYmFyIHRoYXQgYm9hc3Qgc3VibGltZSBvY2VhbiB2aWV3cy4gCkkgZG93bmxvYWRlZCBhIG5ldyBjb3B5IHRvIG15IHBob25lIGVhY2ggdGltZSBJIHdhcyBpbiB0b3duIG9yIHdoZW5ldmVyIEkgaGFkIHNlcnZpY2UsIGJlY2F1c2UgaXQgY2FuIGNoYW5nZSBxdWlja2x5LiAKWW91IGhhdmUgdG8gZGVwb3NpdCB5b3VyIG1vbmV5IGluIG9yZGVyIHRvIHN0YXJ0IHBsYXlpbmcuLiAKU3R1ZGVudHMgd2lsbCBkbyBiZXN0IGluIHRoaXMgY2xhc3MgaWYgdGhleSBhcmUgdXNpbmcgV29yZFByZXNzIHRvIGJ1aWxkIHRoZWlyIC4gWW91J2xsIHRoZW4gbGVhcm4gaG93IHRvIGNyZWF0ZSBiZWF1dGlmdWwgb3B0IGluIGZvcm1zIG9uIHlvdXIgd2Vic2l0ZSB1c2luZyBmcmVlIHRvb2xzIGxpa2UgTWFnaWMgQWN0aW9uIEJveC4gCkkgaGFkIHRoYXQgaGFwcGVuIGluIG15IG93biB0b3duLCBvbmNlLiBJIHdlbnQgdG8gYSBwYXJrIEkgaGF2ZW4gYmVlbiB0byBpbiB5ZWFycywgc2NlbmljIHRyYWlscywgYSBuaWNlIGxpdHRsZSBsYWtlLCBhIHdhbGtpbmcgcGF0aCB0aGF0IGdvZXMgaW50byB0aGUgd29vZHMgYW5kIHBhc3QgdGhlIG1vdW50YWluIGZvb3RoaWxscy4gCkl0IG5vdCBkaWZmZXJlbnQgZnJvbSB0aGUgQ2FuYWRpYW4gc3lzdGVtLCBleGNlcHQgeW91IHNlZSBoZWFsdGggaW5zdXJhbmNlIGFzIGEgc2VwYXJhdGUgbGluZSBvbiB5b3VyIGJpbGwuIFJpY2hlciBwZW9wbGUgcGF5IG1vcmUgdGF4ZXMsIHNvIHRoYXQgcG9vcmVyIHBlb3BsZSBjYW4gYWZmb3JkIGJlaW5nIGluIHRoZSBzeXN0ZW0uCk9ubGluZSBwb2tlciBjaGF0IHJvb21zIHN1Z2dlc3QgRXVyb3BlYW4gcGxheWVycyBhcmUgYWxyZWFkeSB3aXRoZHJhd2luZyBmdW5kcyBmcm9tIHRoZSBhZmZlY3RlZCBzaXRlcy4gQnJpdGlzaCB3ZWJzaXRlcyBleHBlY3QgdG8gZXhwZXJpZW5jZSBhIGJpZyB1cGxpZnQgaW4gcGxheWVycyB0b25pZ2h0LCB0cmFkaXRpb25hbGx5IHRoZSBiaWdnZXN0IG5pZ2h0IG9mIHRoZSB3ZWVrIGZvciBvbmxpbmUgcG9rZXIuIFByZWV0IEJoYXJhcmEsIGEgVVMgYXR0b3JuZXksIHNhaWQ6IGRlZmVuZGFudHMgYXJlIGFsbGVnZWQgdG8gaGF2ZSBjb25jb2N0ZWQgYW4gZWxhYm9yYXRlIGNyaW1pbmFsIGZyYXVkIHNjaGVtZSwgYWx0ZXJuYXRlbHkgdHJpY2tpbmcgc29tZSBVUyBiYW5rcyBhbmQgZWZmZWN0aXZlbHkgYnJpYmluZyBvdGhlcnMgdG8gYXNzdXJlIHRoZSBjb250aW51ZWQgZmxvdyBvZiBiaWxsaW9ucyBpbiBpbGxlZ2FsIGdhbWJsaW5nIHByb2ZpdHMuClRoaXMgaXMgcHJlY2lzZWx5IHdoYXQgaGFwcGVuZWQgd2l0aCBTdXByZW1lIENvdXJ0IEp1c3RpY2UgQWJlIEZvcnRhcy4gV2hlbiBQcmVzaWRlbnQgTHluZG9uIEpvaG5zb24gY2hvc2UgRm9ydGFzIHRvIHJlcGxhY2UgRWFybCBXYXJyZW4gYXMgY2hpZWYganVzdGljZSBpbiAxOTY4LCBxdWVzdGlvbnMgYWJvdXQgcGF5bWVudHMgRm9ydGFzIHJlY2VpdmVkIGZyb20gJDE1LDAwMCBpbiBzcGVha2luZyBmZWVzIGZyb20gQW1lcmljYW4gVW5pdmVyc2l0eSdzIGxhdyBzY2hvb2wgc2N1dHRsZWQgaGlzIG5vbWluYXRpb24uIApUaGVyZSBpcyB3aXNkb20gaW4gaGF2aW5nIGFuIGFnZSBnYXAgYmV0d2VlbiBzcG91c2VzLiBGb3Igd29tZW4sIGFnZSBpcyAodW5mb3J0dW5hdGVseSkgYSBkZWJpdCwgZGVjcmVhc2luZyBmZXJ0aWxpdHkuIEZvciBtZW4sIGFnZSBjYW4gYmUgYSBjcmVkaXQsIGluY3JlYXNpbmcgdGhlaXIgYWNjZXNzIHRvIHJlc291cmNlcyBhbmQgaW1wcm92aW5nIHRoZWlyIG1hdHVyaXR5LCB0aHVzIG1ha2luZyB0aGVtIG1vcmUgYXR0cmFjdGl2ZSB0byB3b21lbi4gV2UgbWF5IGFsbCBkaXNsaWtlIHRoaXMgc2NlbmFyaW8sIGJ1dCB3ZSBjYW4gd2lsbCBpdCBhd2F5LgpPbiB0aGF0IG5vdGUsIG15IFNPIGFuZCBJIGhhdmUgYmVlbiBzcGVuZGluZyBhIGxvdCBvZiB0aW1lIHRvZ2V0aGVyIG91dHNpZGUgdGhlIG9mZmljZSwgYW5kIEkgd29ycnkgdGhhdCBtYXliZSB3ZSBzZWUgZWFjaCBvdGhlciB0b28gbXVjaCBhbmQgbWlnaHQgZ2V0IGJ1cm5vdXQgbGF0ZXIgZG93biB0aGUgcm9hZC4gSSBvdmVyYW5hbHl6ZSBhIGxvdCwgc28gSSB0cnlpbmcgdG8gY29udmluY2UgbXlzZWxmIHRoYXQgSSBqdXN0IGJlaW5nIHBhcmFub2lkLi4gCkNpdGUgdGhpcyBBcnRpY2xlIEEgdG9vbCB0byBjcmVhdGUgYSBjaXRhdGlvbiB0byByZWZlcmVuY2UgdGhpcyBhcnRpY2xlIENpdGUgdGhpcyBBcnRpY2xlIENob29zZSBDaXRhdGlvbiBTdHlsZSBNTEEgQVBBIENoaWNhZ28gKEIpIEthbXBpcywgSm9obm55LiBBY2Nlc3NlZCAwOSBNYXJjaCAyMDE5LgpUYWtlIGEgaGlnaCBhY2N1cmFjeSByaWZsZSwgVCA1MDAwLiA4NSBhY2N1cmFjeSwgd2l0aCBhIDUwJSBidWZmIHdoZW4gaGVyIHNraWxsIGNvbWVzIGFsaXZlLiAKQnV0IHRoZSBjbGFzaCBvZiBjdWx0dXJlcyAgIHRoZWlycyBhbmQgb3VycyAgIGlzIGEgdGVhY2hhYmxlIG1vbWVudCBmb3IgbWUuIE5vIG1hdHRlciBob3cgY29tcGxleCBvdXIgYXdhcmVuZXNzIG9mIGdlbmRlciwgcmFjZSwgYW5kIG5hdGlvbmFsIGlkZW50aXR5IGlzLCB0aGUga2lsbGluZyBvZiB3b21lbiBmb3IgYmVpbmcgZGlzb2JlZGllbnQgaXMgYWx3YXlzIHdyb25nLiBBbmQgbm8gbWF0dGVyIGhvdyBtdWNoIHdlIG1pZ2h0IGFsbG93IHRoYXQgbWFueSB3b21lbiB1bmRlciBjb25zdW1lciBjYXBpdGFsaXNtIGNob29zZSB0byB3ZWFyIGJpa2luaXMgYW5kIG1hbnkgTXVzbGltIHdvbWVuIGNob29zZSB0byB3ZWFyIGhpamFiLCB0aGVyZSBhcmUgc2V2ZXJlIGxpbWl0cyB0byBub3Rpb25zIG9mIGNob2ljZSB3aXRoaW4gY29uZGl0aW9ucyBvZiBzdHJ1Y3R1cmFsIGluZXF1aXRpZXMuIApJIHN1cHBvc2UgSSd2ZSBqdXN0IGdvdHRlbiB0aGUgZmVlbGluZyBmcm9tIHNvbWUgZm9sa3MgdGhhdCBpdCBpcyBhbG1vc3Qgc29tZXRoaW5nIGxpa2UgYSBtYXJrIG9mIG93bmVyc2hpcC4gQSB3YXJuaW5nLiAKSSdtIGFsd2F5cyBnb25uYSBiZSBhIHNhaW50cyBmYW4uIApJIGtub3cgYSBjb3VwbGUgcGVvcGxlIHdobyBoYXZlIHJ1biBpbnRvIGRpZmZpY3VsdHkgZHVlIHRvIHRoaXMuSW4gdGVybXMgb2YgcmVhY2hpbmcgb3V0LCBtZWV0IHdpdGggeW91ciB1bmRlcmdyYWQgYWR2aXNvciBmaXJzdCBhbmQgZGlzY3VzcyB5b3VyIGludGVyZXN0LiBUaGV5IHNob3VsZCBoZWxwIHlvdSBnZXQgc3RhcnRlZC9wb2ludCB5b3UgdG93YXJkIG90aGVyIHByb2Zlc3NvcnMuIApUaGlzIGlzIG5vdCBhIGJvb2sgZm9yIHRoZSAnYXZlcmFnZScgcmVhZGVyLiBSZWFkIG1vcmUgW2VudHJ5Ym9keV0gID4KU2Fkb3dza2kgU3lubm90dCBiZWxpZXZlcyBpdCdzIGEgc2lnbiBvZiB0aGluZ3MgdG8gY29tZS4uIApCdXQgNyB5ZWFycyBsYXRlciB0aGV5IHJlbWFycmllZCBhcyBrYXRob2xpYy4gQWxsIHRoZWlyIGNoaWxkZXJlbiBhcmUga2F0aG9saWMgYXN3ZWxsLmZpbGJlcnV0aGllICAzIHBvaW50cyAgc3VibWl0dGVkIDUgZGF5cyBhZ29JIGp1c3QgZGlkIHRoaXMgZm9yIGEgZnJpZW5kLiAKQWxsZXJkaW5ncyBuaWNodCByZWljaCBhbiBndXRlbiBIb3RlbHMuIApVbml0ZWQgaGF2ZSBhIGxvdCBvZiB3aGl0ZSBvbiB0aGVpciBsaXZlcnksIHlldCB1bmxpa2UgSkFMIGFuZCBBSSB0aGV5IHNlZW0gdG8gY3JlYXRlYSBnb29kIGZvcm0gd2l0aCBhIGZldyBpbnRyaWNhdGUgbGluZXMgaGVyZSBhbmQgdGhlcmUuLiAKV2hhdCBPblRoaW5ncyB0byBkb0Zvb2QgYW5kIERyaW5rRmFtaWx5IGFuZCBLaWRzVFYgR3VpZGVUSEUgIkVra2Egb2Ygc2V4IiBvcGVuZWQgaXRzIGRvb3JzIHRvIEJyaXNiYW5lIHRoaXMgd2Vla2VuZCBhbmQgd2FzIG1ldCB3aXRoIGl0cyBiaWdnZXN0IGNyb3dkcyBvbiByZWNvcmQuIE1vcmUgdGhhbiA0MCwwMDAgcGVvcGxlIHBhaWQgdGhlaXIgd2F5IGludG8gdGhlIHdvcmxkIGJpZ2dlc3QgYWR1bHQgbGlmZXN0eWxlIHNob3cgYXQgdGhlIENvbnZlbnRpb24gQ2VudHJlLCBkYXp6bGVkIGJ5IHBvcm4gc3RhcnMsIHN0cmlwcGVycywgc2hvd2JhZ3MgYW5kIHNpZGVzaG93IGFsbGV5LiBIZWF2eSBxdWV1ZXMgZm9yIHRoZSBTZXggVHJhaW4gd2VyZSBtYXRjaGVkIG9ubHkgYnkgdGhlIGNyb3dkcyBnYXRoZXJlZCBhcm91bmQgdGhlIGJyYXZlIHBhcnRpY2lwYW50cyBvZiBzdHJpcCBwb2tlciwgd2hpbGUgcG9ybiBzdGFycyBMZXhpIEJlbGxlIGFuZCBBbGV4aXMgVGV4aXMgZGlkbiBoYXZlIHRpbWUgdG8gcHV0IHRoZWlyIGJyZWFzdHMgYXdheSwgc28gaGVhdnkgd2FzIHRoZSBkZW1hbmQgZm9yIGEgcGljdHVyZSB3aXRoIHRoZW0uIApJIHN1Z2dlc3QgcGVvcGxlIHdobyBoYXZlIG11bHRpcGxlIGNhcmRzIGtlZXAgMSBvciAyIGF0IGhvbWUuIEFzIHNvbWVvbmUgd2l0aCAxMCBjYXJkcyBJIG9ubHkgY2FycnkgMyA0IG9mIHRoZW0uIFRoZSByZXN0IGFyZSBJIGJhY2t1cC4gSWYgeW91IGdldCB0aGVtIHN0b2xlbiB5b3UgY2FuIGxvY2sgdGhvc2UgdGhhdCBnb3Qgc3RvbGVuIGFuZCB1c2UgeW91ciBiYWNrdXAgY2FyZHMgdG8gZ2V0IGJ5LiBGb3IgdGhvc2Ugb2YgeW91IHdobyBhc2sgd2h5IEkgaGF2ZSAxMCBjYXJkcywgaXQgYmVjYXVzZSBmb3IgdGhvc2Ugd2hvIHBsYXkgdGhlIG1pbGVzIGFuZCBwb2ludHMgZ2FtZSB3ZSBrbm93IHdoYXQgd2UgZG9pbmcuIEFuZCBubyBJIGNhcnJ5IG5vIGRlYnQuClRoZWlyIENQUCB3b3VsZCBpbmNyZWFzZSBieSA4LjQgcGVyIGNlbnQgcGVyIHllYXIsIHBsdXMgaW5mbGF0aW9uLCB0byByb3VnaGx5ICQxNywwMDAgYXQgNzAuIFRoZWlyIE9BUyB3b3VsZCBpbmNyZWFzZSBieSA3LjIgcGVyIGNlbnQgcGVyIHllYXIsIHBsdXMgaW5mbGF0aW9uLCB0byByb3VnaGx5ICQxMCw1MDAuIEJldHdlZW4gNjUgYW5kIDcwLCB0aGV5IHdvdWxkIG5lZWQgdG8gdGFrZSBSUlNQL1JSSUYgd2l0aGRyYXdhbHMgb2YgJDI1LDAwMCBwZXIgeWVhciB0byBjb3ZlciB0aGVpciBleHBlbnNlcy4gCklmIHlvdSB0aGluayBwb2tlciBpcyBhIHZlcnkgc2VyaW91cyBnYW1lLCB5b3UgcGFydGlhbGx5IHJpZ2h0LiBCdXQgbm90IGFsbCBzZXJpb3VzIHRoaW5ncyBhcmUgbGFja2luZyBpbiBwbGVhc3VyZSwgeW91IGtub3cuIFRha2UgdGhlIGdhbWUgb2YgY2hlc3MsIGZvciBleGFtcGxlLiAKTW9kcyB3aG8ga25vdyB0aGUgc3ViIGluc2lkZSBhbmQgb3V0LCBhbmQgd2hvIGhhdmUgYmVlbiBzdWJzY3JpYmVycyBoZXJlIGEgd2hpbGUuIFdlIHdhbnQgdGhlbSB0byBoZWxwIHdpdGggbW9kZXJhdGluZywgb2YgY291cnNlLCBidXQgd2UgYWxzbyBoYXZlIHRoZW0gd2VpZ2ggaW4gb24gb3VyIHBvbGljaWVzIGFuZCBydWxlcy4gCidNdWNoIExvdmUsIEFtbmEuJwpUd2VlZCBTaGlyZSBsZWQgdGhlIHNwZW5kLCB3aXRoIGhvb2tlZCBwdW50ZXJzIHB1dHRpbmcgJDEgYmlsbGlvbiBpbnRvIG1vcmUgdGhhbiAyMDAwIG1hY2hpbmVzLCB0byBsb3NlIGEgdG90YWwgb2YgJDk2LjkgbWlsbGlvbi4KSSBkZWFsIHdpdGggdGhlIGhvdXNlLCBoZSBkZWFscyB3aXRoIHdvcmsuIApIb25kYSwgd2hpY2ggYnVpbGRzIHRoZSBJbnNpZ2h0LCBhYm92ZSwgaXMgcHJvY2VlZGluZyBtb3JlIHNsb3dseSB3aXRoIGh5YnJpZCB0ZWNobm9sb2d5IHRoYW4gVG95b3RhLgoxLiBJVCBQTEFZUyBMSUtFIEEgQ1JPU1MgQkVUV0VFTiBBU1NBU1NJTiBDUkVFRCBBTkQgU1BMSU5URVIgQ0VMTDogVGhhdCBteSBlYXJseSBhc3Nlc3NtZW50LiBUaGVyZSB3ZXJlIHRocmVlIG1ham9yIG1pc3Npb25zIEkgaGFkIGEgY2hhbmNlIHRvIGNoZWNrIG91dC4gVGhlIGludHJvZHVjdGlvbiB0b29rIHBsYWNlIGluIGEgY3Jvd2RlZCBiYWxscGFyayBhcyBBaWRlbiBkZXRhaW5zIGEgaGl0bWFuIG5hbWVkIE1hdXJpY2UgVmVnYSBhbmQgdHJpZXMgdG8gZXNjYXBlIHRoZSBwb2xpY2UuIEFpZGVuIGhhcyB0byBzbmVhayBvdXQgYW5kIHRoYXQgZG9uZSB3aXRoIGEgbWl4dHVyZSBvZiBob21lbWFkZSBnYWRnZXRzIGFuZCBoYWNraW5nLgpJdCBtaWdodCBjb21wZXRlIHdpdGggaXQgbm93LiBUaGF0IGEgZ29vZCB0aGluZy5HcmlsbCBhbmQgS2lsbCB3YXMgcHJldHR5IG11Y2ggYSBtdXN0IHBpY2sgb24gNywgYW5kIGl0IGdldHMgbmVyZmVkIHdoaWxlIHRoZSBvdGhlciB0YWxlbnRzIGdldCBidWZmZWQuUGVybmFtYW5Tb21lb25lIGVsc2Ugc3dpdGNoIEkgaGF2ZSBnb2xkIHdlYXBvbi4gSSBtZWFuIGRhbWFnZS4gMyBwb2ludHMgIHN1Ym1pdHRlZCAxIHllYXIgYWdvQXMgcGFydGx5IE9yaXNhIG1haW4gSSBjYW4gb2Z0ZW4gc2VlIGJvdGggc2lkZXMgb2YgdGhlc2Uga2luZCBvZiBhcmd1bWVudHMuIApNYW5jaG1hbCBuZWhtZSBpY2ggaWhuIHNvZ2FyIHp1IEF1c2ZsZ2VuIG9kZXIgenVtIFdhbmRlcm4gbWl0Li4gClRoZSBmb3VydGggdGhpbmcgeW91IG5lZWQgdG8gZG8gaXMgdGFrZSBvdXQgeW91ciBuYXR1cmFsIGJyaXN0bGUgYnJ1c2ggYW5kIGRpcCBpdCBpbnRvIHRoZSBwYXJhZmZpbiB3YXguIApSdWxlIElWLiBObyBTcGFtIER1cGxpY2F0ZSBwb3N0IGFuZCBvciBTZWxmIHByb21vdGlvbiwgaW5jbHVkaW5nIGJ1eS9zZWxsL3RyYWRlIHBvc3RpbmcsIGlzIG5vdCBwZXJtaXR0ZWQsIHRvIGJ1eSBhbmQgc2VsbCB2aXNpdCAvci9IYWxpZmF4TWFya2V0cGxhY2UgOyBDZXJ0YWluIHNlbGYgcHJvbW90aW9uIGlzIGFsbG93ZWQgaW4gd2Vla2x5IGV2ZW50IHRocmVhZHMsIHBsZWFzZSAuIEZvbGxvdyB0aGUgMTAlIHJ1bGUuIApDZXMgZmxldXJzIGZvcm1lcm9udCBwYXIgbGEgc3VpdGUgZGUgZ3JvcyBmcnVpdHMgKDggMTAgbW0pIGJyaWxsYW50cywgcGxhdHMsIHZlcnRzIHB1aXMgYmlzdHJlcyAgbWF0dXJpdC4uIApPbmNlIHlvdSBrbm93IHdoYXQgY29uY291cnNlIHlvdSdyZSBoZWFkZWQgZm9yLCBjaGVjayBpbiBhdCBKZXBwZXNlbiBUZXJtaW5hbCBhbmQgZ28gZG93biB0byBnbyB0aHJvdWdoIHNlY3VyaXR5LiAKQW5kIGluIGFkZGl0aW9uIHRvIHRoYXQsIHlvdSBjYW4gc2VlIHRoZSBzdWNjZXNzIHN0b3JpZXMgcmlnaHQgaW4gZnJvbnQgb2YgeW91LiAKT3RoZXIgY2FzaW5vcyBpbiBOb3J0aCBMYXMgVmVnYXMgaW5jbHVkZSB0aGUgQ2FubmVyeSwgVGV4YXMgU3RhdGlvbiBHYW1ibGluZyBIYWxsIGFuZCBIb3RlbCwgSmVycnkncyBOdWdnZXQgQ2FzaW5vIGFuZCBGaWVzdGEgUmFuY2hvIENhc2lubyBhbmQgSG90ZWwuLiAKSWYgeW91IHRoaW5rIGFib3V0IGl0IGhhcyBzb21lIHNlbnNlOiBGYWxsb3V0IGlzIGFib3V0IGEgd2FzdGVsYW5kLCBWQVRTLCBhIGZldyBmYWN0aW9ucywgeW91ciBjaGFyYWN0ZXIgc3Rvcnkgd2hvIGlzIGp1c3QgYSBub3JtYWwgaHVtYW4gYmVpbmc7IGFuZCBub3RoaW5nIG1vcmUuIEluIFNreXJpbSB5b3UgaGF2ZSB0aGUgc3RvcnksIGRyYWdvbnMsIGRyYWdvbmJvcm4gc2hvdXRzLCBndWlsZHMsIGNpdmlsIHdhciwgY2l0aWVzLCBtb3JlIGRyYWdvbnMsIHJhY2VzLCB2YW1waXJlcywgd2VyZXdvbHZlcywgYW5kIHNvIG9uLiBUaGV5IGhhZCBhbG90IG9mIHRoaW5ncyB0byB0YWxrIGFib3V0Li4gCldoYXQgZG8geW91IG1lYW4gdGhhdCB0aGUgY29ubmVjdGlvbnMgd2VyZSB0b28gY29uc2lzdGVudCB0byBkZW55PyBGcm9tIHdoYXQgeW91IHNhaWQgaXQgbG9va3MgbGlrZSBoZSBjaGFzZXMgc2lnaHRpbmdzIGFyb3VuZCB0aGUgKGdsb2JlPykgbG9va2luZyBmb3IgY29ycmVsYXRpb25zLCBidXQgd2hhdCBpcyBoaXMgY29udHJvbCBncm91cCBsaWtlPyBDb3JyZWxhdGlvbiBkb2VzIG5vdCBtZWFuIGNhdXNhdGlvbi4gClNvIHRoZW4gZWFjaCBzZXNzaW9uIGlzIHR5cGljYWxseSBqdXN0IDIgZmxpZ2h0cyBhbmQgdGFrZXMgMyA0IGhvdXJzLiAKVHJpcGxlIHRocmVhdCBKdWxpIEJsYWNrICAgcmVhbCBlc3RhdGUgYWdlbnQsIHBva2VyIHBybyBhbmQgUHJlc3RvbiBIb2xsb3cgRWFzdCBIb21lb3duZXJzIEFzc29jaWF0aW9uIHByZXNpZGVudCAgIHNhaWQgb3RoZXIgdGhhbiB0aGUgY2xpbWIsIENKJ3Mgd2FzIGEgZmluZSBwbGFjZTogIk5pY2Ugam9iIG9uIHRoZSBmaW5pc2ggb3V0LCBzZWVtZWQgdG8gYmUgcHJvZmVzc2lvbmFsbHkgcnVuIGFuZCBoYWQgc29tZSBncmVhdCBhY3Rpb24uIi4gCkF1am91cmQnaHVpIGcgZGUgNTIgYW5zLCBHZXJtYW5pIGEgdCBjb25kYW1uIGRldXggZm9pcyAgc2l4IGFucyBkZSBwcmlzb24sIGVuIGp1aW4gMjAxNSBwb3VyIGwnYWZmYWlyZSBkdSAiY2VyY2xlIFdhZ3JhbSIsIGV0IGVuIGZ2cmllciAyMDE2IHBvdXIgYXNzb2NpYXRpb24gZGUgbWFsZmFpdGV1cnMgZW4gdnVlIGRlIGxhIHBycGFyYXRpb24gZHUgbWV1cnRyZSBkZSBKZWFuIENsYXVkZSBDb2xvbm5hLCBjb3VzaW4gZGUgbCdhbmNpZW4gcGFycmFpbiBkZSBsJ2xlIGRlIEJlYXV0ICJKZWFuIEoiIENvbG9ubmEuCk9uZSBvZiBteSBwbGF5ZXJzIGluIGEgY2FtcGFpZ24gSSByYW4geWVhcnMgYWdvIHBsYXllZCBhIEZyZW56aWVkIEJlcnNlcmtlciB3aG9zZSBwcmVmZXJyZWQgd2VhcG9uIHdhcyBhIGh1Z2Ugc3Bpa2VkIGNhYmVyLiBUb3dhcmRzIHRoZSBlbmQgb2YgdGhlIGNhbXBhaWduLCBoZSBsZWFwdCBmcm9tIHRoZSBwYXJ0eSBhaXJzaGlwIHRoYXQgd2FzIG92ZXIgdGhlIGNhbGRlcmEgb2YgYW4gYWN0aXZlIHZvbGNhbm8gdG8gYXR0YWNrIHRoZSBjb2xvc3NhbCBhbmNpZW50IG1hZ21hIGRyYWdvbiBkcmFjb2xpY2ggYm9zcyBiZWxvdywgcmlkaW5nIGhpcyBjYWJlciBkb3duIGxpa2UgTWFqb3IgS29uZyBpbiBEci4gCkVzdCBjZSBwb3NzaWJsZSBkZSB2ZW5pciBwb3J0ZXIgcGxhaW50ZSB2b3RyZSBidXJlYXUgZXQgcXVlIGNlIHNvaXQgdHJhbnNmIGRhbnMgbGUgYm9uIHRlcnJpdG9pcmUgPyBmYWxsYWl0IGFic29sdW1lbnQgcXUgc2UgZCBhdSBidXJlYXUgZGUgU2hlcmJyb29rZSwgbHVpIGEgdCBvbiBkaXQuLiAKVGhleSBub3QgZ29ubmEganVzdCB2YW5pc2gsIGJ1dCB0aGF0IHRoZSBwb2ludC4gCkp1c3QgcHJpb3IgdG8gYm9hcmRpbmcgdGhlaXIgZmxpZ2h0IGZvciBob21lLCBXZWxzaCB0b2xkIHRoZSBDb3VyaWVyIGFsbCB0aGUgY291cGxlIHdhbnRlZCB0byBkbyB3YXMgZ2V0IGhvbWUgdG8gdGhlaXIgY2hpbGRyZW4uClRoZXkgaGF2ZSBubyBvdGhlciBpbnRlcmVzdC4uIApBbHRob3VnaCBJIGhhdmUgbm90IGhhZCB0byB0YWtlIHRoZW0gbXlzZWxmIEkgaGF2ZSBzZWVuIHRoZSBlZmZlY3RzIHRoZXkgaGF2ZSBvbiBwZW9wbGUgY2xvc2UgdG8gbWUgICBteSBicm90aGVyLCBteSBraWRzIG1vbSwgc29tZSBvZiB0aGUgcGVvcGxlIEkgZGF0ZWQuCkluIHJlYWwgbGlmZSwgdGhlIHByb3BlcnR5IGlzIGtub3duIGFzIHRoZSBTaGVybWFuIEZhaXJjaGlsZCBNYW5zaW9uICAgYW5kIHRoZSAyNSBmb290IHdpZGUgcmVkIGdyYW5pdGUgbWFuc2UgaXMgYmFjayBvbiB0aGUgbWFya2V0IGZvciAkMzUgbWlsbGlvbiwgZm9sbG93aW5nIGEgJDUgbWlsbGlvbiBwcmljZSBzbGFzaCBhbmQgYnJva2VyIHN3YXAuCkxlIDI2IG9jdG9icmUgZGVybmllciwgbm91cyBkcGxvcmlvbnMgbGUgc2lsZW5jZSBkZSBsJ0h0ZWwgZGUgVmlsbGUgIHByb3BvcyBkZSBsYSBQcm9tZW5hZGUgVXJiYWluZSwgbGUgZmFtZXV4IHByb2pldCBkZSByZW5vdXZlbGxlbWVudCB1cmJhaW4gZHUgdHJvbm9uIEJhcmJzIENoYXBlbGxlIFN0YWxpbmdyYWQuIEVuIGVmZmV0LCBBY3Rpb24gQmFyYnMgdGFudCAgbCdvcmlnaW5lIGRlIGwnaWRlIGRlIFByb21lbmFkZSBVcmJhaW5lLCBpbWFnaW5lIGRzIDIwMTMsIGV0IHByc2VudGUgYXV4IGRpZmZyZW50cyBjYW5kaWRhdHMgYXV4IE11bmljaXBhbGVzIGVuIDIwMTQsIG5vdXMgYXZvbnMgdG91am91cnMgc3VpdmkgZGUgdHJzIHBycyBzYSBtaXNlIGVuIG9ldXZyZS4gCk1lbGFuY2hvbGlhIGFuZCBkZXByZXNzaW9uIGFsc28gdG9vayB0aGUgbGl2ZXMgb2YgcGVyaGFwcyAxMDAwIENoaW5lc2Ugd29ya2Vycywgd2hvIGl0IHNlZW1zIHRvb2sgdGhlaXIgb3duIGxpdmVzIGZvciB0ZXJyaWJsZSBsaXZpbmcgY29uZGl0aW9ucywgdGVycmlibGUgcGF5LCBhbmQgdGVycmlibGUgaHVtYW4gdHJlYXRtZW50LiBJdCBzZWVtcyB0b28gYXN0b25pc2hpbmcgdG8gYmUgc28sIGJ1dCBJIHJlYWQgYSBudW1iZXIgb2YgYWNjb3VudHMgb2YgdGhlIHNvIGNhbGxlZCAiQ2hpbmVzZSBUcmFnZWR5IiwgYW5kIGl0IGJlYXJzIHVwLiBTbyBhbGwgb2YgdGhpcyBidWJibGVkIHVwIHdoZW4gSSBmb3VuZCB0aGlzIHZlcnkgc21hbGwgYW5kIGluY3JlZGlibHkgc2tpbm55IGhhcmRiYWNrIHB1YmxpY2F0aW9uIGZyb20gdGhlIFBhbmFtYSBSYWlscm9hZCBDb21wYW55IGNhbGxlZCBTYWZldHkgUnVsZXMuIApUaGUgYmlyZCBpcyBhIHllbGxvdyBiaWxsZWQgaG9ybmJpbGwuIApUZWFtcyB3aG8gd29uIGludmVzdCwgd2lsbCBiZSBkb21pbmF0ZWQgYnkgdGhvc2Ugd2hvIGRvIGV2ZW4gbW9yZSB0aGFuIG5vdy4gWW91IG1ha2UgYSBsb3QgbW9yZSBtb25leSB3aGVuIHlvdSB3aW5uaW5nIHNvIEkgZG91YnQgdGhhdCB5b3Ugd2lsbCBnZXQgb3duZXJzIHRoYXQgd29uIGNhcmUgYmVjYXVzZSBpdCB3b24gYmUgcHJvZml0YWJsZSBmb3IgdGhlbS4uIApJbiBhbnkgY2FzZSB3aGF0IGV2ZXJ5b25lIHNob3VsZCB3YXRjaCBvdXQgZm9yIGlzIFNjYW0gZW1haWxzIGFuZCBtZXNzYWdlcyBpbiBmYWNlYm9vayB3aGVyZSB5b3UgYXJlIHN1cG9zZSB0byBiZSBhd2FyZGVkIG9yIGJhbmVkIGZvciBhbnkgcmVhc29uLCBhbmQgeW91IGFyZSBhc2tlZCB0byBjbGljayBhIGxpbmsgdG8gdmVyaWZ5IHlvdXIgYWNjb3VudCwgd2hlcmUgeW91IHdvdWxkIG5lZWQgdG8gbG9naW4gb2YgY291cnNlOyB3aGVuIHlvdSBsb2dpbiB0byB0aGF0IGxpbmsgeW91IGRvbid0IGFjdHVhbGx5IHZlcmlmeSBhbnl0aGluZyB5b3UganVzdCBnaXZlIG91dCB5b3VyIHBhc3N3b3JkIGFuZCBhY2NvdW50IHRvIHNvbWUgaGFja2Vycy4gVGhlIHdlYnNpdGUgbWF5IGxvb2sgdmVyeSB3ZWxsIGxpa2UgZmFjZWJvb2sgb3IgYW55IG90aGVyIGtpbmQgb2Ygc2VjdXJpdHkgaW52ZW50ZWQgd2VzYml0ZS4gKEZ1bGwgQW5zd2VyKVdoYXQgZG8gdGhlIHBva2VyIGNoaXBzIHN0YW5kIGZvciBpbiBwb2tlcj9JbiBwb2tlciB0aGUgY2hpcHMgaGF2ZSBhIHZhbHVlLCB0aGlzIHZhbHVlIGluZGljYXRlcyBob3cgbXVjaCB0aGF0IHBhcnRpY3VsYXIgY2hpcCBpcyB3b3J0aC4gVGhlcmUgYXJlICJMaXZlIENhc2lubyBDaGlwcyIsIHdoaWNoIHZhbHVlIGlzIGEgcmVmbGVjdGlvbiBvZiBob3cgbXVjaCBtb25leSB0aGV5IGFyZSB3b3J0aC4gClJlbW92ZWQ6IE5vIG1hdHRlciBob3cgYW4gT1AgcmVwbGllcyBvbiB0aGVpciBwb3N0LCBuYW1lIGNhbGxpbmcgaXMgYWJzb2x1dGVseSBub3Qgb2suIElmIE9QIG5lZWRzIHRvIGp1c3QgeWVsbCB0aGVpciBpc3N1ZXMgaW50byB0aGUgdm9pZCB0aGVuIHdlIGNhbiBiZSBoZXJlIHRvIHNheSAidGhhdCBzdWNrcywgeW91J3JlIHN0cm9uZ2VyIHRoYW4geW91IHJlYWxpemUsIGV0YyIgYmFzaWNhbGx5IGFsbCBvZiB0aGUgdGhpbmdzIGhlciBtb3RoZXIgYW5kIFNPIGFyZSB0YWtpbmcgYXdheSBmcm9tIGhlciBjb25maWRlbmNlLiAKSSBhY3R1YWxseSB1c2VkIHRoaXMgcGF0dGVybiBmcm9tIEV0c3kgYXMgYSBzdGFydGluZyBwb2ludCBmb3IgdGhlIGJ1cmdlciwgYnV0IGNoYW5nZWQgYSBmZXcgdGhpbmdzIGhlcmUgYW5kIHRoZXJlIChmb3IgZXhhbXBsZSwgbWFraW5nIHRocmVlIHNlcGFyYXRlIHRvbWF0b2VzIGluc3RlYWQgb2YgdGhlIG9uZSBiaWcgb25lKS4gVGhlIHNoZWxsIGNvdmVyIHRoYXQgSSBhdHRhY2hlZCB0aGUgYnVyZ2VyIHRvIGlzIGEgcGF0dGVybiBJIGdvdCBmcm9tIGFuIEV0c3kgc3RvcmUgdGhhdCBzYWRseSBkb2VzbiBzZWVtIHRvIGV4aXN0IGFueW1vcmUgOiggSSB1c2UgdGhhdCBwYXR0ZXJuIGZvciBhbGwgb2YgbXkgdG9ydG9pc2UgY29zdHVtZXMhIEkgdGFrZSBhIGxvb2sgYW5kIHNlZSBpZiBJIGNhbiB0cmFuc2NyaWJlLiAKQW4gaW5zdGFsbGF0aW9uIGlzIG5vdCBhIHJlbGlnaW91cyBjZXJlbW9ueS4gCk90aGVyIGhvdXNlcyBvbiB0aGUgTm9ydGggc2lkZSB0aGF0IEkgcGxheWVkIGF0OgpUbyBiZSBob25lc3QsIG1hbnkgcGVvcGxlIHN0aWxsIGhhdmUgbm8gaWRlYSBob3cgdG8gcmVtZW1iZXIgdGhlaXIgb3V0cy4gCkl0IHNlbGxzIG1lbWJlcnNoaXBzIHRvIHRoZSBob3RlbCBneW0sIG9yIG9uZSB0aW1lIHZpc2l0b3JzIGNhbiBwYXkgJDE1IHRvIHVzZSB0aGUgbGFwIHBvb2wsIEphY3V6emksIHN0ZWFtIHJvb20gYW5kIHNhdW5hLiAKQXMgZmFyIGFzIEkgY2FuIHRlbGwgdGhlIGhlYWRsaW5lIG9mIHRoaXMgQ05OIGFydGljbGUgbGl0ZXJhbGx5IG1ha2VzIGNsYWltcyB0aGF0IHRoZSBzdHVkeSBjb25jbHVzaW9uIGRvZXMgbm90IHN1cHBvcnQuIFdoeT8gVGhlIHN0dWR5IGNvbmNsdXNpb24gdXNlcyBsYW5ndWFnZSB0aGF0IGlzIHRyaWNreSBhcyB3ZWxsLiBXaHk/IFdoeSBub3QganVzdCB3cml0ZSB0aGUgZGFtbiBoZWFkbGluZSB0byBjb3JyZXNwb25kIHdpdGggdGhlIGFjdHVhbCBzdHVkeSByZXN1bHRzIGFuZCBtYWtlIHRoZSBzdHVkeSByZXN1bHRzIGFuZCB0aGUgcG90ZW50aWFsIHByb2JsZW1zIHdpdGggdGhlIG1ldGhvZG9sb2d5IHRyYW5zcGFyZW50PyBUaGlzIGlzIG5vdCB0aGUga2luZCBvZiB0aGluZyB0aGF0IGJ1aWxkcyB0cnVzdC4uIApZb3UgcmVjZWl2ZSAyICJIb2xlIGNhcmRzIi4gQWZ0ZXIgdGhlIDIgaG9sZSBjYXJkcyBhcmUgZGVhbHQgdGhlcmUgaXMgYSByb3VuZCBvZiBiZXR0aW5nLiBUaGVuIHRoZSBmbG9wIGlzIGJlaW5nIGRlYWx0LiAKVGhlIFN0YW5zdGVkIFJhZGlzc29uIEJsdSBvZmZlcnMgYSBjaG9pY2Ugb2YgZm91ciByZXN0YXVyYW50cyBhbmQgYW5kIGdvIGZvb2QgaW4gdGhlIGxvYmJ5IDI0IGhvdXJzIGEgZGF5LiAKSWFuOiBXZWxsLCBpdCB3YXNuJ3QgcmVhbGx5IGFsbCB0aGF0IGRpZmZpY3VsdC4gSSd2ZSBoYWQgYSBsb3Qgb2YgZ3JlYXQgc3VwcG9ydCBmcm9tIGZhbWlseSBhbmQgZnJpZW5kcyBvdmVyIGhlcmUgYW5kIHdlIHRyeSB0byBnZXQgYmFjayBob21lIG9uY2UgZXZlcnkgY291cGxlIG9mIHllYXJzLiBUaGUgam9iIHNpdHVhdGlvbiBoYXMgd29ya2VkIG91dCBwcmV0dHkgd2VsbC4gSSd2ZSBmb3VuZCB0aGF0IG15IENhbmFkaWFuIHByb2JsZW0gc29sdmluZyBza2lsbHMgYW5kIG9yZ2FuaXphdGlvbmFsIGFiaWxpdHkgaGF2ZSBiZWVuIHZlcnkgdXNlZnVsOyBzb21ldGltZXMgdGhlIFN3ZWRpc2ggY29tbWl0dGVlIHN5c3RlbSBjYW4gY2F1c2UgYSBmcnVzdHJhdGlvbiBvciB0d28gYW5kIHNsb3cgdGhpbmdzIGRvd24uIFRoZXJlIGhhdmUgYmVlbiBhIGZldyBoaWNjdXBzIHRob3VnaC4gSW4gb25lIG9mIG15IGZpcnN0IGpvYnMgSSB3cm90ZSB0byBhIGNsaWVudCBhbmQgZW5kZWQgdGhlIGxldHRlciB3aXRoIHdoYXQgSSB0aG91Z2h0IHdhcyAieW91cnMgdHJ1bHkiLiBJdCB0dXJuZWQgb3V0IGNsb3NlciB0byAiZm9yZXZlciBteSBiZWxvdmVkIiBhbmQgdGhlIGJvc3MgcmVhbGx5IHJlYW1lZCBtZSBvdXQuIEkgYWx3YXlzIHRyeSB0byBsZWFybiBmcm9tIG15IG1pc3Rha2VzLgpIZXJlIGEgYmFybiBidXJuZXI6IHllcyBzaGUgYSBwb3JuIHN0YXIsIGJ1dCBkb2VzIHRoYXQgY2FyZWVyIHBhdGggbWVhbiB5b3Ugb3BlbiB0byBoYXJhc3NtZW50PyBTaGUgcHJvYmFibHkgZ2V0IGh1bmRyZWRzIG9mIERNcyBhIGRheSBieSBuZWNrYmVhcmQgZnJlYWtzIHRoYXQgc2F5IG11Y2ggd29yc2UgdGhpbmdzIHRvIGhlci4gClRoYXQgc2FpZCwgSSBkb24gc2VlIHRoZSB1cHNpZGUuIE9uIDJ4IHJlc2lkZW50IHNhbGFyaWVzLCB5b3Ugc2hvdWxkIGJlIGFibGUgdG8gYXQgbGVhc3Qga2VlcCB0aGUgcHJpbmNpcGFsIGZyb20gZ3Jvd2luZyB3aGlsZSB5b3UgZmluaXNoIHJlc2lkZW5jeS4gT25jZSB5b3UgYSAyIGRvYyBob3VzZWhvbGQsIHlvdSBzaG91bGQgZXhwZWN0IHRvIGJlIGJyaW5naW5nIGluIG5lYXIgJDQ1MGsveXIuIENvbnRpbnVlIGxpdmluZyBsaWtlIHJlc2lkZW50cyBhbmQgeW91IGtub2NrIHRoZSBkZWJ0IG91dCBpbiAyIHllYXJzLgpTdHVjayBpbiBsaWZlLCBoZSBkZWNpZGVzIHRvIGNvbW11bmljYXRlIHdpdGggcGVvcGxlIHVzaW5nIGEgYmVhdmVyIGhhbmQgcHVwcGV0LCBzb21ldGhpbmcgaGUgdGVsbHMgaGlzIHdpZmUgaXMgcGFydCBvZiBhIHRoZXJhcHkgcHJvZ3JhbS4gV2FsdGVyIHJlY29ubmVjdHMgd2l0aCBoaXMgeW91bmdlc3Qgc29uIHRoYW5rcyB0byB0aGUgYmVhdmVyIGFuZCBoaXMgd2lmZSBjYW4ndCBoZWxwIGJ1dCBlbXBhdGhpemUuIEJ1dCBoaXMgZWxkZXIgYm95IChZZWxjaGluKSBzdGlsbCB3b24ndCBhY2NlcHQgaGltIGFuZCBXYWx0ZXIgcnVucyBpbnRvIG90aGVyIHByb2JsZW1zIHRyeWluZyB0byB3aW4gaGltIG92ZXIuIApUaGlzIGlzIGltcG9ydGFudCBiZWNhdXNlIHBsYXllcnMgbmVlZCB0byBrbm93IHdoYXQgY2FyZHMgYXJlIHN0aWxsIG91dCB0aGVyZSB0aGF0IGNhbiBoZWxwIHRoZW0gYW5kIHdoaWNoIG9uZXMgYXJlIGFscmVhZHkgZ29uZS4gCkl0IGNvc3QganVzdCAkMS41MCB0byBlbnRlciBhbmQgb24gU3VuZGF5LCBKdW5lIDI1LCBtb3JlIHRoYW4gNjMwIGJpcmRzIHdlcmUgb24gc2hvdy4gSnVkZ2UgQm9iIEZvd2xlciAoeWVzIHlvdSByZWFkIHRoYXQgcmlnaHQpLCBoYWlscyBmcm9tIHRoZSBMaXNtb3JlIHJlZ2lvbiBhbmQgam9pbmVkIGEgY29udGluZ2VudCBvZiBleHBlcnRzIGZyb20gYWNyb3NzIHRoZSBNaWQgTm9ydGggQ29hc3QgdG8gY2hvb3NlIHRoZSBncmFuZCBjaGFtcGlvbiBhbmQgcmVzZXJ2ZSBjaGFtcGlvbiBiaXJkIG9mIHRoZSBzaG93LiBNaWQgTm9ydGggQ29hc3QgYnJlZWRlcnMgYXJlIHJlbm93bmVkIGFzIHNvbWUgb2YgdGhlIGJlc3QgaW4gdGhlIGNvdW50cnkgd2l0aCBtYW55IGVuam95aW5nIHN1Y2Nlc3MgYXQgdGhpcyB5ZWFyJ3MgUm95YWwgRWFzdGVyIFNob3cuIApXYXJjaGVtaXggdQpUaGUgZ3JvdXAgd29ya3MgY2xvc2VseSB3aXRoIENlbnRlciBmb3IgVW5pb24gRmFjdHM7IGJvdGggb3JnYW5pemF0aW9ucyBhcmUgY3JpdGljYWwgb2YgdW5pb25zLkluIHRoZWlyIGRlZmVuc2UsIHVuaW9uIG9mZmljaWFscyBzYXkgd2hhdCB0aGV5IGRvIHRvIGdldCBhbmQga2VlcCB3b3JrIGZvciB0aGVpciBtZW1iZXJzIGFuZCB0byBsb2JieSBmb3IgdGhlaXIgaW50ZXJlc3RzIHBvbGl0aWNhbGx5IGlzIG5vdGhpbmcgZGlmZmVyZW50IHRoYW4gd2hhdCBidXNpbmVzc2VzIGRvLCBleGNlcHQgYnVzaW5lc3NlcyBkb24ndCBoYXZlIHRvIGZpbGUgc3VjaCBkZXRhaWxlZCBwdWJsaWMgcmVwb3J0cy5CdXNpbmVzc2VzIGFsc28gcmVudCBzdWl0ZXMgYXQgYmFsbHBhcmtzLiAKS3VydCBydXNzZWxsIFdyb25nOiBJdCdzIFNhbXVlbCBMLiAKVW5iZWxpZXZhYmxlLiBXaGF0IGEgY29tcGxldGUgYnJlYWNoIG9mIHRydXN0LiBJIHRoaW5rIHlvdSBzaG91bGQgYWN0dWFsbHkgc2F5IHRoZSB3b3JkcywgIllvdSB3ZW50IGJlaGluZCBteSBiYWNrIGFuZCBkaWQgd2hhdCBJIGFza2VkIGV4cGxpY2l0bHkgbm90IHRvLiAKSnVuaW9yIGVsaXRlIGF0aGxldGVzIGhhdmUgdW5kZXJnb25lIGluaXRpYWwgbmF0aW9uYWwgc2VsZWN0aW9uIGFuZCBhcmUgeW91bmdlciB0aGFuIGF0aGxldGVzIGV4YW1pbmVkIHByZXZpb3VzbHkgKG1lYW4gYWdlIDEzIHllYXJzKS4gCkkgY291bGQgaW1hZ2luZSBoZXIgY29taW5nIHRvIHRlcm1zIHdpdGggaXQgYWZ0ZXIgdGhlIGZhY3QsIGFzIGluIEJvYmJ5IGhhcyBzbyBtdWNoIG1vcmUgdG8gbG9zZSB0aGFuIEJyZW5kYW4uIApIb3dldmVyLCBhcyBjZWxscyBkaXZpZGUsIHdoaWNoIHRoZXkgZG8gdGhyb3VnaG91dCBvdXIgbGl2ZXMgdG8gcmVwbGVuaXNoIHNraW4gYW5kIG90aGVyIG9yZ2FucywgdGVsb21lcmVzIHNocmluay4gCkhhaGEgaXQgd2FzIHByZXR0eSBmdW5ueSBhbmQgSSBkaWQgYXBwcmVjaWF0ZSB0aGUgZ2VzdHVyZSBhIGxvdCBsb2wubG92ZWx5bHVsbGFieW1lICA1IHBvaW50cyAgc3VibWl0dGVkIDI0IGRheXMgYWdvSSBhcHByZWNpYXRlIHlvdXIgd29yayBzbyBtdWNoLiBJJ20gc29ycnkgeW91IGhhZCB0byBkZWFsIHdpdGggdGhpcyBsYWR5LiBBYm91dCA0IHllYXJzIGFnbyBJIHdhcyBsaXZpbmcgaW4gbG93IGluY29tZSBob3VzaW5nIGFuZCBoYWQgYW4gZXZpbCBhcGFydG1lbnQgbWFuYWdlci4gClRoZXkgZG9uIHRoaW5rIGFib3V0IGdvaW5nIHRvIHdvcmsgZm9yIDEsIDIsIHNvbWV0aW1lcyAzIG9yIG1vcmUgd2Vla3MgYW5kIGxvc2luZyBtb25leS4gRG93bnN3aW5ncyBhcmVuIHRoZSBvbmx5IGRvd25mYWxsLiAKVGFrZSBzb21lIHRpbWUgYW5kIHJlYWxseSB0aGluayBhYm91dCB3aGF0IHlvdSB3YW50IGZyb20geW91ciB0YWJsZSBhbmQgeW91ciBnYW1ibGluZyBmdXJuaXR1cmUuIApObyB0aGV5IGRvbiBUaGV5IGNhbiwgYXMgcGFydCBvZiB0aGUgY29udHJhY3QsIGhhdmUgYSBtaW5pbXVtLiBCdXQgYSBtaW5pbXVtIGlzbiByZXF1aXJlZC4KVGhlIGNoYXJhY3RlciBhc3Nhc3NpbmF0aW9uIG9mIE1vdGhlciBUaGVyZXNhIGNhbWUgYWJvdXQgYmVjYXVzZSBvZiB0d28gQ2FuYWRpYW4gYWNhZGVtaWNzIHdobyBoYXRlZCBoZXIgYW5kIHRoZSBjaHVyY2ggd2hvIHdyb3RlIGJsYXRhbnQgbGllcyBhbmQgY29tcGxldGVseSBtaXN1bmRlcnN0b29kIGhlciBtaXNzaW9uIGFuZCB3aGF0IHNlcnZpY2Ugc2hlIHByb3ZpZGVkIHRvIHRoZSBkeWluZy4gCkFuZCBpZiBpdCBkaWQgaGFwcGVuPwpMZSBwYWxtaWVyIGRhdHRpZXIgZW4gcGh5dG90aHJhcGllClNvLCBpcyBoZSBnb29kIG9yIGJhZD8gRG9lcyBoZSBoYXZlIGhpcyBvd24gYWdlbmN5LCBvciBpcyBoZSBhbiBhZ2VudCBvZiBzb21lIG90aGVyIGVudGl0eT8gV2UgZG8gbm90IHJlYWxseSBrbm93LlRoZXJlIGFyZSBzZXZlcmFsIG1haW4gdGhlbWVzIGluIE0gYW5kIGFsbCBwYXJ0cyBvZiB0aGUgbmFycmF0aXZlIGFyZSBpbnZvbHZlZCBpbiB0aGVpciBkZXZlbG9wbWVudC4gCkkgYWxzbyBrbm93IHR3byB5b3VuZyB3b21lbiB0aGF0IGhhdmUgYSBnYXkgZmF0aGVyIGFuZCBtb3RoZXIuIFRoZXkgd2VyZSBtYXJyaWVkIGZvciBhYm91dCAxMCB5cnMgYmVmb3JlIHRoZXkgZGl2b3JjZWQuIFRoZSB0d28geW91bmcgd29tZW4gaGF2ZSBhbiBhd2Vzb21lIHJlbGF0aW9uc2hpcCB3aXRoIGJvdGggdGhlaXIgcGFyZW50cy4gCk92ZXJjb21pbmcgdGhlIE1vbnN0ZXI6IFRoZSBwcm90YWdvbmlzdCBzZXRzIG91dCB0byBkZWZlYXQgYW4gYW50YWdvbmlzdGljIGZvcmNlIChvZnRlbiBldmlsKSB3aGljaCB0aHJlYXRlbnMgdGhlIHByb3RhZ29uaXN0IGFuZC9vciBwcm90YWdvbmlzdCBob21lbGFuZC4gKEphbWVzIEJvbmQpCkkgd291bGQgc2F5IHRoYXQgaWYgeW91IGRpZCB3YW50IHRvIHNlZSBoaW0gaW4gdGhlIGZ1dHVyZSBJIHdvdWxkbiBkbyBpdCBhbG9uZS4gCkQzIGlzIG9uZSBnYW1lIHRoYXQgd2FzIHJlbGVhc2VkIDcgeWVhcnMgYWdvLiAKVGhlIHdlYnNpdGUgbG9vc2VzIGEgZ29vZCBjaHVuayBvZiB2aXNpdG9ycyBhbmQgcGVvcGxlIGdlbmVyYWxseSBkZWNpZGUgdGhhdCBCb3N0b24gZ2xvYmUgaXMgbm90IHdvcnRoIHRoZWlyIHRpbWUuIFdoeSBzaG91bGQgQm9zdG9uIGdsb2JlIGV4aXN0IHRoZW4/IElzIGl0IG15IHJlc3BvbnNpYmlsaXR5IHRvIHN1cHBvcnQgam91cm5hbGlzdHMgYW5kIHRoZSBpbmR1c3RyeSBpZiBJIGFtIG5vdCBldmVuIGNvbnN1bWluZyB0aGVpciBjb250ZW50ID8gT3IgbW9yZSBzbywgdGhleSBydW4gYSBidXNpbmVzcyBhbmQgSSBhbSB0aGUgY3VzdG9tZXIuIApJdCBoYXMgYmVlbiBzdG9ybXkgYW5kIHRoZXJlZm9yZSB0aGUgd2F0ZXJzIGFyZSBzdHJvbmcuIEJ1dCBpbiB0aW1lLCB0aGUgZWZmZWN0cyBvZiB0aGUgc3Rvcm0gd2lsbCBkcmFpbiwgdGhlIHNreSB3aWxsIGNsZWFyLCB0aGUgc3VuIHdpbGwgY29tZSBvdXQsIGFuZCB0aGUgd2F0ZXJzIHdpbGwgY2FsbSBkb3duLiBBdCB0aGF0IHBvaW50LCB5b3UgYXJlIGFibGUgdG8gbmF2aWdhdGUgdGhlbSB3aXRoIHJlbGF0aXZlIGVhc2UgYW5kIGNvbWZvcnQuIApPdXIgaG91c2Vob2xkIHNhdmluZyByYXRlIHNpbmNlIDE5ODEgaGFzIGF2ZXJhZ2VkIDcuMyBwZXIgY2VudCwgYW5kIHRoZSBhbm51YWwgc2F2aW5nIHJhdGUgaGFzIG5vdCBnb25lIG5lZ2F0aXZlIHNpbmNlIDE5MzMuIEFzIGludGVyZXN0IHJhdGVzIGNvbnRpbnVlIHRvIG5vcm1hbGl6ZSBhbmQgd2UgZW50ZXIgb3VyIHRlbnRoIHllYXIgc2luY2UgdGhlIGxhc3QgcmVjZXNzaW9uLCBpdCBtYXkgYmUgdGhhdCAyMDE5IGlzIGFuIHVucHJlY2VkZW50ZWQgeWVhciBpbiB0aGUgaGlzdG9yeSBvZiBDYW5hZGlhbiBzYXZpbmcgKG9yIGxhY2sgdGhlcmVvZikuCjEgUy4gCkdldCBIb2xkIG9mIGEgRnJlZSBQb2tlciBDYWxjdWxhdG9yCkl0IHdvdWxkIHRha2UgbmVhcmx5IGEgbW9udGggZm9yIG5ld3Mgb2YgdGhlIGF1ZGl0IHRvIGJlIG1hZGUgcHVibGljLCBidXQgYnkgSmFudWFyeSBXYXJuZSBoYWQgYWxyZWFkeSBwcml2YXRlbHkgZGVjaWRlZCB0byBzaHV0IGRvd24gdGhlIDExIHllYXIgb2xkIGNoYXJpdHkgYW5kIHdhcyBmaW5lIHR1bmluZyBhbiBleGl0IHN0cmF0ZWd5LiBEZXNwaXRlIGVtcGhhdGljIGRlbmlhbHMgYnkgaGlzIG1hbmFnZXIgSmFtZXMgRXJza2luZSwgQ2hhbm5lbCBUZW4gd2FzIG5lZ290aWF0aW5nIGZvciBXYXJuZSBwcml6ZWQgc2lnbmF0dXJlIG9uIGEgJDIgbWlsbGlvbiBjb250cmFjdCB0byBzdGFyIGluIHJlYWxpdHkgVFYgc2hvdyBJIEEgQ2VsZWJyaXR5ICBHZXQgTWUgT3V0IG9mIEhlcmUuIApUaGV5IHdvdWxkIGRlYWwgd2l0aCB0aGUgaXRjaCBmb3IgYSB3ZWVrLCBidXQgdGhhdCB3b3VsZCBwcmV2ZW50IHRoZW0gZnJvbSBoYXZpbmcgYSBtb3JlIHNlcmlvdXMgZGlzZWFzZSBhcyBhZHVsdHMuIFNvLCBwYXJlbnRzIG9mIHRoZSA4MHMgKGFuZCBlYXJsaWVyKSB3ZXJlbiBjcnVlbC4gClRoZSBwaXRjaCBUb2J5IERhdmlkc29uIGhhcyBhbHdheXMgYmVlbiBhIGJlaGluZCB0aGUgc2NlbmVzLCB1bmRlciB0aGUgcmFkYXIgaW5ub3ZhdG9yLiBTaGUga25vd3Mgd2hhdCBzZWxscyBhbmQgaGFzIGJ1aWx0IGhlciBidXNpbmVzcywgQ29uY2VwdCB0byBTaGVsZiwgaGVscGluZyBjb21wYW5pZXMgZmluZCBpbm5vdmF0aW9uIGluIHRoZWlyIGJ1c2luZXNzZXMuIFNoZSBjcmVkaXRzIGhlciBsYXRlIGZhdGhlciwgQnJpYW4gRGF2aWRzb24sIHdpdGggaW5zdGlsbGluZyBpbiBoZXIgdGhlIHNraWxscyB0byBtYWtlIGlubm92YXRpb24gaGFwcGVuLiBNci4gRGF2aWRzb24gc3RhcnRlZCBoaXMgY2FyZWVyIGluIHRoZSBmb29kIGJ1c2luZXNzIGF0IHRoZSBhZ2Ugb2YgMTMuCkFsc28gICBvdXIgbWFpbiB2YWx1ZSBwcm9wb3NpdGlvbiBvZiBWaXJ0dWUgUG9rZXIgaXMgd2hhdCBoYXBwZW5lZCBvbiBGdWxsIFRpbHQgY2FuIGhhcHBlbiBvdXIgcGxhdGZvcm0sIGJlY2F1c2Ugd2UgbmV2ZXIgaGF2ZSBjdXN0b2R5IG92ZXIgcGxheWVyIGZ1bmRzLiBXZSBsZXZlcmFnZSBFdGhlcmV1bSBzbWFydCBjb250cmFjdHMgYXMgYSBzaG9ydCB0ZXJtIGVzY3JvdyB0byBlbGltaW5hdGUgdGhpcyByZXF1aXJlbWVudCBmb3IgcGxheWVycyB0byB0cnVzdCB1cyB3aXRoIHRoZWlyIG1vbmV5LgozOCA0NSkgQmFkUm9tYW5jZS9BbGVqYW5kcm8vTW9uc3Rlci9TcGVlY2hsZXNzL0RhbmNlIEluIFRoZSBEYXJrL1RlbGVwaG9uZShGZWF0LiBCZXlvbmMpL1NvIEhhcHB5IEkgQ291bGQgRGllL1RlZXRoIC4gVGhpcyBpcyB0aGVpbmZhbW91cyAiVGhlIEZhbWUgTW9ucyBlciIgYWxidW0sIGFuZCBjYW4gYmUgZm91bmQgb24gaVR1bmVzLiBJdCdzaGlnaGx5IHN1Z2dlc3RlZCB5b3UgYWNxdWlyZSB0aGUgJ2V4cGxpY2l0JyB2ZXJzaW9uIG9mIHRoZWFsYnVtLjQ2IDUwICkgUG9rZXIgRmFjZSAgQWNvdXN0aWMvSnVzdCBEYW5jZS9Mb3ZlZ2FtZS9CZWF1dGlmdWwsIERpcnR5LCBSaWNoL1Bva2VyIEZhY2UgLiBUaGVzZXNvbmdzIGFyZSBvbiBhbiBhbGJ1bSBjYWxsZWQgIldhbG1hcnQgc291bmRjaGVjay4iIFRoZSBsYXR0ZXIgZm91cnNvbmdzIGhhdmUgIk9yaWdpbmFsIHBlcmZvcm1hbmNlIHNlcmllcyIgaW4gdGhlaXIgbmFtZXMuIApNYW51YWxlIERpIENhc3RlZ2dpbyBOYXV0aWNvIFBkZiBEb3dubG9hZApTZWNvbmQsIGFuZCBlcXVhbGx5IGltcG9ydGFudCwgdGhlIHBhY2thZ2UgaXMgcmVhbGx5IHRoZSBvbmx5IHZlaGljbGUgdGhhdCB5b3UgaGF2ZSAxMDAlIGNvbnRyb2wgb3ZlciBpbiBzdG9yZS4gV2hpbGUgeW91ciBwcm9kdWN0IGNhbiBlbmQgdXAgaW4gdGhlIHdyb25nIGxvY2F0aW9uIG9yIHNoZWx2ZWQgaW4gdGhlIHdyb25nIGRpcmVjdGlvbiwgdGhlIHBhY2thZ2UgcmVtYWlucyBhIGNvbnN0YW50LCBhbmQgb25jZSBpdCBoYXMgYSBjb25zdW1lcidzIGF0dGVudGlvbiwgaXQgc3RhcnRzIGNvbnZleWluZyB5b3VyIG1lc3NhZ2UuIERpc3BsYXlzIG1heSBub3QgbWFrZSBpdCBvdXQgdG8gdGhlIGZsb29yLCBvciBtYXkgbm90IGJlIGFzc2VtYmxlZCBjb3JyZWN0bHksIG9yIGNhbiBiZSBvdmVybG9va2VkIGJ5IHRoZSBzaG9wcGVyOyBpbmRlZWQsIHNoZWxmIHZlaGljbGVzIG1heSBiZSBtaXNzZWQgYWx0b2dldGhlci4gVGh1cywgaXQgaXMgdml0YWwgdG8gZ2V0IHRoZSBjb21tdW5pY2F0aW9ucyByaWdodCBvbiB0aGUgcGFja2FnZS4gVGhlIGZpcnN0IHN0ZXAgaXMgdG8gZGVjaWRlIHdoYXQgbWVzc2FnZSB5b3Ugd2FudCBwYWNrYWdpbmcgdG8gY29udmV5IHRvIGNvbnN1bWVycy4KQ3JlYXRlcyBlbmVtaWVzICBkZWh1bWFuaXplZCBvdGhlcnMgdG8gYmUgImRyYWdnZWQgZnJvbSB0aGUgc2V3ZXJzLiIgZmV3IHllYXJzIGJhY2sgSSBzcGVudCBzb21lIHRpbWUgd2l0aCBhIHlvdW5nIENoZWNoZW4gbWFuIHdobyBoYWQgZXNjYXBlZCBSdXNzaWEgd2FyIHRoZXJlLiBZb3VuZyBtYW4gYSBzdXJnaWNhbCBhc3Npc3RhbnQgd2hvIG9wZXJhdGVkIG9uIGJvdGggQ2hlY2hlbiBhbmQgUnVzc2lhbiBzb2xkaWVycywgYXMgbmVlZGVkLiAKVGhpcyBoYXMgYmVlbiBwb3N0ZWQgYWxyZWFkeSBhbmQgZm9yIGdvb2QgcmVhc29uICAgY2hlY2sgb3V0IHRoZSBJdCBHZXRzIEJldHRlciBwcm9qZWN0LiBJdCBiYXNpY2FsbHkgdGFpbG9yIG1hZGUgZm9yIHdoYXQgeW91IGZlZWxpbmcgcmlnaHQgbm93LiAKQ2F0YXBsYXNtZSBkZSBmZXVpbGxlcyBmcmFjaGVzIGNvbnR1c2VzLgpTbyBtYW55IHdyaXRlIHVwcyBhbmQgcmV2aWV3cyBoYXZlIGJlZW4gd3JpdHRlbiBhYm91dCBvbmxpbmUgcG9rZXIgYW5kIGNhc2lub3MgYW5kIHRoZWlyIGFkdmFudGFnZXMgb3ZlciBsYW5kIGNhc2lub3MuIApIZSB0ZWxscyBtZSBpdCBzaG91bGRuIGJlIHRvbyBsb25nLCBzbyBJIHNheSwgIkdpdmUgbWUgYSB0ZXh0IHdoZW4geW91IGFyZSBkb25lLiIuIApUaGUgYW5hbHl0aWNzIGZlYXR1cmUgaXMgdGVycmlmaWMsIGFuZCB0aGUgbG9vayBvZiB0aGUgd2Vic2l0ZSBpcyBwcm9mZXNzaW9uYWwgYW5kIGNsZWFuLiBJdCB3YXMgc28gZWFzeSB0byBjcmVhdGUgYSBjb29sIHNpdGUgd2hlcmUgSSBjYW4gZGlyZWN0IGJvb2tlcnMgYW5kIGNhc3RpbmcgZGlyZWN0b3JzISBUaGUgc2ltcGxlIHRvIHVzZSBmb3JtYXQsIGh1Z2UgY2hvaWNlIG9mIHRlbXBsYXRlcyBhbmQgYmVzdCBvZiBhbGwsIHF1aWNrIGFuZCBjb3VydGVvdXMgY3VzdG9tZXIgc2VydmljZSwgYXJlIG5vIGpva2UhRWFzeSBTaXRlIE1ha2VyIEZvciBNeSBOZXcgQm9va0kgc2V0IHVwIGEgZnJlZSB3ZWJzaXRlIHRocm91Z2ggV2Vibm9kZSBhIGZldyB5ZWFycyBhZ28uIEkgd2FudGVkIHRvIGNyZWF0ZSBhIG5ldyBzaXRlIHRvIHByb21vdGUgbXkgdXBjb21pbmcgYm9vayAzNDkgRGF5cyBzbyBXZWJub2RlIHdhcyBhIG5hdHVyYWwgcGxhY2UgZm9yIG1lIHRvIGdvLiAKRG8geW91IHRoaW5rIHdvbWVuIHNob3VsZCBiZSBhbGxvd2VkIG9yIGFyZSBmaXQgdG8gYmVjb21lIHByZWFjaGVycy9taW5pc3RlcnM/VGhpcyBoYXMgYmVlbiBhIHNvcmUgc3ViamVjdCBpbiBteSBmYW1pbHkuKEkgdGhpbmsgdGhleSBzaG91bGQpLiBTb21lIHBlb3BsZSBiZWxpZXZlIHRoYXQgd29tZW4gZG8gbm90IGhhdmUgYSBwbGFjZSBpbiByZWxpZ2lvbiBhcyBhIG1pbmlzdGVyIG9yIHByZWFjaGVyLiAKQWxsIEkga25vdyBpcyB0aGF0IHRoZSBob2xkZXIgb2YgdGhhdCBhZGRyZXNzIG11c3QgZ2l2ZSBzcGVjaWZpYyBwZXJtaXNzaW9uIHRvIHRoZSBJU1AuIApEaWV1IGVzdCBzYWludCwgaWwgZXN0IERpZXUsIGlsIG4neSBhIHBhcyBkJ2F1dHJlIGRpZXUuIApUd28gZXhlcyB3ZXJlIGluY3JlZGlibHkgYWJ1c2l2ZSBhbmQgY29tcG91bmRlZCBteSBDUFRTRC4gSSB3YXMgd2l0aCBvbmUgZm9yIG1hbnkgeWVhcnMsIGFuZCBoZSB3YXMgYSBzaWduaWZpY2FudCBwYXJ0IG9mIChhbmQgZGV0cmltZW50IHRvKSBzZXZlcmFsIG1ham9yIGV2ZW50cyBpbiBteSBsaWZlLgpXZSBzdXBwb3J0IHlvdSBpbiBtYXhpbWl6aW5nIHJldmVudWVzIGJ5IG9mZmVyaW5nIGRpc2NvdW50ZWQgYW5kIGJ1bGsgZ2lmdCBjZXJ0aWZpY2F0ZXMsIHdoaWNoIGNhbiBiZSBzb2xkIHRvIGF0dGVuZGVlcy4gT2Z0ZW4gYSB0cmF2ZWwgYWdlbmN5IGhhbmRsaW5nIHRoZSBldmVudCB3aWxsIHB1cmNoYXNlIGdpZnQgY2VydGlmaWNhdGUgY291cG9ucywgc28gdGhlaXIgY2xpZW50cyBjYW4gcmVjZWl2ZSBjb21wbGltZW50YXJ5IG1hc3NhZ2VzLiBBZGRlZCBwcmUgc2hvdyBwcm9tb3Rpb24gY2FuIGJlIGNyZWF0ZWQgYnkgbGlzdGluZyB0aGlzIHNlcnZpY2UgaW4gdGhlIG9mZmljaWFsIHNob3cgZGlyZWN0b3J5IGluIGV4Y2hhbmdlIGZvciBmcmVlIGdpZnQgY2VydGlmaWNhdGVzLiAKRE8gTk9UIFBPU1QgU1VSVkVZUywgU1RVRElFUywgT1IgUkVTRUFSQ0ggUFJPSkVDVFMgV0lUSE9VVCBDTEVBUklORyBZT1VSIFNUVURZIFdJVEggVEhFIE1PRFMgRklSU1QhISEKVGhlIHBvcHVsYXIgcHJlc2NyaXB0aW9uIHBhaW5raWxsZXJzIFZpY29kaW4gYW5kIFBlcmNvY2V0IC4gYW5kIHBhaW4gcmVsaWV2aW5nIGFiaWxpdHkgb2YgVmljb2RpbiBDUiBQZXJjb2NldCAzMHMgcGxhY2Vib3Mgd2l0aCBhIHBsYWNlYm8gLiBOYXByb3hlbiBBbmQgQ29hZ3VsYXRpb247IFBpY3R1cmVzIE9mIFBlcmNvY2V0IDMwcwpKYXNvbiBDaGFmZmV0egpOb3J0aGVyblNwYXJyb3cgIDQzIHBvaW50cyAgc3VibWl0dGVkIDExIGRheXMgYWdvCkNhbiB0d28gcGVvcGxlIGhhdmUgdGhlIHNhbWUgZmluZ2VycHJpbnQ/CjUgcG9pbnRzICBzdWJtaXR0ZWQgNiBkYXlzIGFnbwpVbmZvcnR1bmF0ZWx5IHRoZXJlJ3MgYnJlYWtzIGluIHRoZSBnYW1lIGFuZCB0aGV5IHNlZW1lZCB0byBjYXBpdGFsaXplIG9uIHRoZW0uIi4gCkkgc3Rvb2QgdGhlcmUgZm9yIGEgd2hpbGUsIHRoZW4gY29udGludWVkIHBsYXlpbmcuIEkgcGxheWVkIE1lbmRlbHNzb2huLCBXaWVuaWF3c2tpLCBhbmQgTW96YXJ0LCBpbiBvdGhlciB3b3JkcyBldmVyeXRoaW5nIHRoYXQgSSBrbmV3LiBBbmQgdGhleSBsaXN0ZW5lZCBhbmQgbGlzdGVuZWQgYW5kIHRoZWlyIGZhY2VzIGJlY2FtZSBiZWF1dGlmdWwuIApJIGhhdmUgbm90IHRvdWNoZWQgbXkgUFM0IG11Y2ggbGF0ZWx5IGJ1dCBob2x5IGZ1Y2sgSSBhbSBiYWNrIGJhYnkhIEkgbG92ZSB0aGlzIGdhbWUhIENhbiB3YWl0IQpJIGFic29sdXRlbHkgbG92ZSBoZXIgY29uZmlkZW5jZSwgdG9vLiBBbmQgSSBsb3ZlIHRoYXQgc2hlIGlzbiBhZnJhaWQgdG8gdHJ5IG5ldyB0aGluZ3MgYW5kIHB1c2ggaGVyc2VsZi4gU2hlIGFjdHVhbGx5IGRvZXMgaW5zcGlyZSBtZSBiZWNhdXNlIEkgdGhpbmssIGlmIHRoaXMgd29tYW4gd2hvIHR3aWNlIG15IHNpemUgY2FuIGRvIGEgY3JhenkgYWxhc2thIG1hcmF0aG9uIHdoaXRhdGhvbiwgd3RmIGlzIHN0b3BwaW5nIG1lPyBTaGUgZG9lc24gbmVlZCB0byBiZSB3b3JsZCBncmVhdGVzdCBkYW5jZXIgdG8gYnJpbmcgYSBsb3Qgb2YgdmFsdWUgdG8gdGhlIHdvcmxkLgpTbywgcmVwcmVzc2lvbiBvZiB0aGUgYWN1dGUgaW5mbGFtbWF0b3J5IHByb2Nlc3Mgc2VlbXMgaW5hcHByb3ByaWF0ZSwgYXMgaXQgYXBwZWFycyB0byBoYXZlIGFuIGludGVncmFsIHJvbGUgaW4gYWRhcHRhdGlvbiBhbmQgcmVwYWlyLiAKRXMgaXN0IHp3YXIgZXJrZW5uYmFyLCBkYXNzIGluIGRlbiBzIGRpZSBBbnphaGwgZGVyICBpbm5lbiBiZXJlaXRzIGRldXRsaWNoIHp1Z2Vub21tZW4gaGF0LiBPYndvaGwgZGllIERhbWVud2VsdCBiZWkgZGVuIE9ubGluZSAgR2FtZXMgaW56d2lzY2hlbiBtaXQgVGF1c2VuZGVuIHZvbiAgaW5uZW4gdmVydHJldGVuIGlzdCwgaXN0IGRpZXNlIFRlbmRlbnogaW4gZGVuIHRyYWRpdGlvbmVsbGVuIENhc2lub3MiIG5vY2ggbmljaHQga2xhciBlcmtlbm5iYXIuIFNwZXppZWxsIGRpZSBlIGJsZWliZW4gdm9uIGRlbiBNbm5lcm4gZG9taW5pZXJ0LgpBbmQgdWx0aW1hdGVseSwgbW9kZXJuIGxvdmUgaGFzIGxvc3Qgc2lnaHQgb2YgdGhhdCB3aGljaCBpcyBodW1hbiBpbiBhbGwgb2YgdXMuIApNb2Rlcm5pc3RlICA1IHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnbwpTZXJpYWwgbnVtYmVyIDI0OTEwLiBXaXRoIHNpeCBjeWxpbmRlcnMuIApDcm93biBwcmV2aW91c2x5IGRlbmllZCBpdCBicmVhY2hlZCB0aGUgbGF3IHdoZW4gb3RoZXIgd2hpc3RsZWJsb3dlciBjbGFpbXMgd2VyZSB0YWJsZWQgaW4gcGFybGlhbWVudCBpbiAyMDE3LiBBdXN0cmFsaWFuIEFzc29jaWF0ZWQgUHJlc3NBcHJpbCAyNCAyMDE4ICAgNjoyNVBNLiAKQXZpbnMwMTE0IHUKTWFueSB0aW1lcyBpZiB5b3UganVzdCBhc2sgdGhlIHNlbGxlciB3aGF0IHJlcGFpcnMgaXQgbmVlZHMsIHRoZXkgd2lsbCBqdXN0IHRoaW5rIG9mIHRoaW5ncyB0aGF0IGFyZSBicm9rZW4gb3Igc29tZSB3YXkgZGFtYWdlZC4gCldlIGRpZCBvdXIgZmlyc3QgVzMwIGFib3V0IDE4IG1vbnRocyBhZ28sIGFuZCBoYXZlIGRvbmUgYSBoYW5kZnVsIG9mIHJvdW5kcyBzaW5jZS4gCkkgaGF2ZSBhbHNvIGdvdHRlbiBwbGFpbiB3cm9uZyB0cmFuc2xhdGlvbnMgZm9yIGJhc2ljIHdvcmRzLCBvciBzb21ldGltZXMgbW9yZSBwb3B1bGFyIHRyYW5zbGF0aW9ucyB3b24gZXZlbiBleGlzdCBmb3IgYSBzcGVjaWZpYyB0ZXJtLiAKV2VyZSBEUyBKQiBwZXJmZWN0IGluIHRoZWlyIGRlZmVuc2Ugb2YgU0E/IFByb2JhYmx5IG5vdC4gRGlkIHRoZXkgbWFrZSB0aGUgYmVzdCBjYXNlIHRoZXkgY291bGQgYXQgdGhlIHRpbWU/IFByb2JhYmx5LiBUaGUgYmVuZWZpdCBvZiBoaW5kc2lnaHQgaXMgYSB3b25kZXJmdWwgdGhpbmcuClBpY2tlZCB1cCBteSBmaW5pc2hlcnMgbWVkYWwgKHNlcmlvdXNseSBpbnRlbnNlKSwgZ290IGludG8gdGhlIGNhciwgYW5kIHdlIGdvdCBicnVuY2guClRha2UgYSAxMCBwZXJzb24gc2FtcGxlIHdpdGggdHdvIHN1Ymdyb3Vwcy4gCklmIGEgbXVzY2xlIGlzIGV4dHJhIHRpZ2h0IHRob3VnaCB0aGUgdG94aW4gaXMgc29ydCBvZiBzdHVjay4gb3cgb3cgYnVybmluZyEhIFNPT08gZHVyaW5nIGEgbWFzc2FnZSB0b3hpbnMgYXJlIGJlaW5nICJwdXNoZWQiIG91dCBhbmQgcmVsZWFzZWQuIFRoYXQgaXMgd2h5IGl0IGlzIEdSRUFUIEFORCBJTVBPUlRBTlQgdG8gZHJpbmsgbG90cyBvZiB3YXRlciBhZnRlciBhIG1hc3NhZ2UgYW5kIEVWRVJZREFZIHRvIGhlbHAgZWxpbWluYXRlIHdhc3RlIHByb2R1Y3QhV2hlcmUgYXJlIHlvdSBnb2luZyB0byBzY2hvb2w/V2hlbiBJIHdhcyBpbiBzY2hvb2wgYWxsIEkgdGhvdWdodCB3YXMgV09XIHRoaXMgaXMgZ29pbmcgdG8gYmUgc28gZWFzeSBJIGdvaW5nIHRvIGxlYXJuIGhvdyB0byBtYXNzYWdlIHBlb3BsZSBhbmQgY2hhcmdlIDkwIGRvbGxhcnMgYW4gaG91ciBhbmQgYmUgcmljaCBhbmQgZG8gbGlrZSAyIG1hc3NhZ2VzIDUgZGF5cyBhIHdlZWsgYSBkYXkhSXQgaXMgYSBsb3Qgb2YgaW5mb3JtYXRpb24sIGFuYXRvbXkscGF0aG9sb2d5LCBraW5lc2lvbG9neSwgZXRoaWNzLCB0ZWNobmlxdWUsIGNsaW5pY2FsLiAKVGhlIGJpcmFjaWFsIE1vbnRyZWFsIG5hdGl2ZSB3YXNuIGFsdGhvdWdoIGl0IGhhcmQgdG8gaW1hZ2luZSBob3cgYW55b25lIHdobyB1bmRlcndlbnQgd2hhdCBCb3JkZW4gaGFkIHdvdWxkIGV2ZXIgZW1lcmdlIGludGFjdCwgbXVjaCBsZXNzIHNvIGZ1bmN0aW9uYWwuIFNoZSB3ZW50IG9uIHRvIHN1Y2Nlc3NmdWwgY2FyZWVycyB0ZWFjaGluZyBhdXRpc3RpYyBjaGlsZHJlbiBhbmQgb3BlcmF0aW5nIHJldGlyZW1lbnQgaG9tZXMuQm9yZGVuIHN0b3J5IGlzIHZpdmlkbHksIGhlYXJ0IHdyZW5jaGluZ2x5IHJlY291bnRlZCBpbiBoZXIgYm9vayBOaW5lIFRlYXJzLiAKT24gYSB2ZXJ5IHN1bm55IChhbmQgaG90KSBzdW1tZXIgbW9ybmluZywgSSBzZXQgb3V0IGZvciBCb3N0b24gQ29tbW9uIHRvIHRlc3Qgb3V0IGEgZmV3IG9mIHRob3NlIHNoaW55IG5ldyBzb2xhciBwb3dlcmVkIGJlbmNoZXMuIFNvb2ZhcywgZGV2ZWxvcGVkIGJ5IHN0YXJ0dXAgQ2hhbmdpbmcgRW52aXJvbm1lbnRzLCBhcmUgYmVuY2hlcyB3aXRoIGEgbGFyZ2Ugc29sYXIgcGFuZWwgb24gdG9wIHRoYXQgd2lsbCBjaGFyZ2UgdXNlcnMnIHBob25lcy4gCk9mZmljZSBvZiBBY2Nlc3NpYmlsaXR5Ckl0IG1vc3RseSBtZW4gbG9va2luZyBmb3Igd29tZW4sIG9mIGNvdXJzZS4gT3Igc28gaXQgYWx3YXlzIHNlZW1zLiAKSXQncyBsaWtlIGV2ZXJ5IHRpbWUgSSBjaGFuZ2UgbXkgY2lyY2xlIG9mIGZyaWVuZHMgd2hldGhlciB0aHJvdWdoIGEgY2hhbmdlIG9mIGhvYmJpZXMgb3IgbW92aW5nIHRvIGEgbmV3IHBsYWNlLCBJIHN0YXJ0IHRvIGFkYXB0IHRvIHdoaWNoIHJvbGUgSSBwbGF5IGluIHRoYXQgZ3JvdXAgb2YgZnJpZW5kcy4gVGhlbiBvdmVyIHRpbWUgSSBqdXN0IEFNIHRoYXQgcGVyc29uLiAKRmVyZ2llIHB1cnN1ZWQgYSBzb2xvIGNhcmVlciBhZnRlciBoYXZpbmcgY29tbWVyY2lhbCBzdWNjZXNzIGluIHRoZSBwb3AgZ3JvdXAgVGhlIEJsYWNrIEV5ZWQgUGVhcy4gU2hlIGRyb3BwZWQgaGVyIGZpcnN0IHNvbG8gYWxidW0sIFRoZSBEdXRjaGVzcywgaW4gMjAwNiBhbmQgaGFkIHRocmVlIDEgaGl0cyBvbiB0aGUgSG90IDEwMCB3aXRoICJMb25kb24gQnJpZGdlIiBpbiAyMDA2LCBhbmQgIkdsYW1vcm91cyIgZmVhdHVyaW5nIEx1ZGFjcmlzIGFuZCAiQmlnIEdpcmxzIERvbid0IENyeSIgaW4gMjAwNy4gU2hlIGhhZCBmaXZlIGhpdHMgYXMgYSBzb2xvIGFydGlzdCBvbiB0aGUgeWVhciBlbmQgY2hhcnRzLiAKVGhlaXIgZGFkIHdhc24gdGhlIGdyZWF0ZXN0IHdoZW4gd2Ugd2VyZSB0b2dldGhlciBhbmQgbmVpdGhlciBvZiB1cyBuZWVkZWQgYSBUViBzaG93IHJlaW5mb3JjaW5nIHRoZSBpZGVhcyB0aGV5IHdlcmUgYWxyZWFkeSBnZXR0aW5nIGFib3V0IG1lbiBmcm9tIGJlaW5nIGFyb3VuZCBoaW0uIEhlIGltcHJvdmluZyBub3cgKGZpbmFsbHkpIGJ1dCBvdXIga2lkcyBhcmUgMTgsIDE0IDEyIHNvIGl0IGEgY2FzZSBvZiB0b28gbGl0dGxlIHRvbyBsYXRlLiAKUmVhZCB0aGUgRW50aXJlIEFydGljbGVDYXRjaCBUViBzaG93cyBvbmxpbmUgYW5kIGZlZWwgZW50aHJhbGxlZCEKSW4gc2VwYXJhdGUgYW5kIHVucmVsYXRlZCBjYXNlcywgdGhlIDEwIGluZGl2aWR1YWxzIGZhY2UgY2hhcmdlcyBzdGVtbWluZyBmcm9tIGNoZWF0aW5nIGF0IHRhYmxlIGdhbWVzIGluY2x1ZGluZyBibGFja2phY2ssIGNyYXBzLCByb3VsZXR0ZSBhbmQgYmFjY2FyYXQuClNoZSB3YXMgb25lIG9mIHRoZSBuaWNlc3QgbWVtYmVycyBvZiBteSBmYW1pbHkgd2hlbiBJIHdhcyB5b3VuZy4gSSByZWFsbHkgdGhpbmsgaXQganVzdCBpZ25vcmFuY2UgYnV0IEkgZG9uIGtub3cgaG93IHRvIGNvbmZyb250IHRoZW0gYWdhaW4uIApUaGUgcHVycG9zZSBvZiB0aGlzIGFydGljbGUgICBhbmQgaXRzIHN1YnNlcXVlbnQgaW5zdGFsbG1lbnRzLCBpZiB0aGUgZGVtYW5kIGlzIGdyZWF0IGVub3VnaCBmb3IgbWUgdG8gY29udGludWUgICBpcyB0byBoZWxwIHlvdSBhcHBseSB0aGUgcHJpbmNpcGxlcyBvZiBjb21iaW5hdG9yaWNzIGFuZCBwcm9iYWJpbGl0eSB0byB3b3JkIHByb2JsZW1zLCBpbiB0aGlzIGNhc2UgY2FyZCBnYW1lIHF1ZXN0aW9ucy4gCk9uZSBwYXJ0aWN1bGFyIE1UVCBwcm9maWxlIGhhcyA1IGRpZmZlcmVudCBzdGFnZXMsIG1lYW5pbmcgdGhhdCBpdCBzd2l0Y2hlcyBiZXR3ZWVuIGRpZmZlcmVudCBzZWN0aW9ucyBvZiBjb2RlIGRlcGVuZGluZyBvbiB0aGUgc2l6ZSBvciB5b3VyIHN0YWNrLiBUaGUgY2hhcnQgYmVsb3cgaWxsdXN0cmF0ZXMgdGhlIGRpZmZlcmVudCBzdGFnZXMuLiAKQWZ0ZXIgbm90IHdhbnRpbmcgdG8gYmUgYmFwdGl6ZWQsIHRyeWluZyBteSBiZXN0IHRvIGJlIGEgZ29vZCBtb3Jtb24gYm95LCBmb3JjZWQgdG8gZ28gdG8gY2h1cmNoIHVudGlsIDE4IHdoZW4gSSB3YXMgdGhlbiBraWNrZWQgb3V0IGZvciBiZWluZyBhICJiYWQgaW5mbHVlbmNlLCIgSSB0dXJuZWQgdG8gYm9keWJ1aWxkaW5nIGFuZCB0aGUgb3V0ZG9vcnMsIG5vdyBJIGVuam95IGV2ZXJ5IFN1bmRheS4gSSBhbSB0cmFpbmVkIGluIHRoZSBDb21taXRtZW50IFBhdHRlcm4gYW5kIEkgd2FzIHRoZSB0b3AgY29udmVydGVyIGluIHRoZSBlbnRpcmUgQ2h1cmNoLiAKTWFzc2FnaW5nIHdpbGwgaGVscCBicmluZyBkZWJyaXMgdXAgdG8gdGhlIG91dGVyIHBhcnQgb2YgdGhlIGVhciB3aGVyZSBpdCBjYW4gYmUgd2lwZWQgYXdheSB3aXRoIGEgY290dG9uIGJhbGwgb3IgdGlzc3VlLiAKQSBoZWRvbmlzdCBpcyBhbiBpbmRpdmlkdWFsIHdobyBpcyBhbHdheXMgaW4gcHVyc3VpdCBmb3IgdGhlIHBsZWFzdXJlIG9mIGhpcyBzZW5zZXMuIApPdGhlcnMgd2lsbCBqdXN0IGhhdmUgc29tZW9uZSB3aG8gd3JpdGVzIGluaXRpYWxzIG9yIG5hbWVzIG9uIGEgc2hlZXQgb2YgcGFwZXIuIApUaGUgc2Vjb25kICBhbmQgdGhpcmQgcGFydHkgZGF0YSB0aGF0IGhhcyBmdWVsZWQgcHJvZ3JhbW1hdGljIGRpZ2l0YWwgYWQgYnV5aW5nIGNvc3RzIG1vbmV5IGFuZCBpcyBvZnRlbiBpbmFjY3VyYXRlLiBCaWcgQ1BHcyB3aWxsIGNvbnRpbnVlIHRvIGdhdGhlciBhbmQgcHJvY2VzcyB0aGVpciBvd24gZGF0YSAoYW5kIGJyYWcgYWJvdXQgdGhlIHJlc3VsdHMpLiAKSSBoYXZlIHRvIHJlYWQgdGhlIGluZ3JlZGllbnRzIG9uIGV2ZW4gY29tbW9ubHkgcHVyY2hhc2VkIGl0ZW1zIGJlY2F1c2UgYSBmZXcgaGF2ZSB1bmV4cGVjdGVkbHkgbWFkZSByZWNpcGUgY2hhbmdlcyB0byBzdGFydCB1c2luZyBzdWNyYWxvc2Ugb3Igc3RldmlhLiAKQWNjb3JkaW5nIHRvIGZpcnN0IHNjZW5lIG9mIGEgZHJlYW0sIE1pbGl0YXJ5IEFpciBmb3JjZSBoYXMgY29tcGxldGVseSBjb3ZlcmVkIHRoZSBncm91bmQgYW5kIHNreS4gVGhleSBhcmUgbG9hZGVkIHdpdGggd2VhcG9ucy4gSSBzYXcgZmlnaHRlciBwbGFuZXMgYXR0YWNraW5nIGVhY2ggb3RoZXIgbm9uc3RvcCB3aXRoIE1pc3NpbGVzLiAKQ2l0aWdyb3VwIGVhcm5lZCAkNC40IEJpbGxpb24gaW4gdGhlIGZpcnN0IHF1YXJ0ZXIgb2YgdGhpcyB5ZWFyIGFuZCBCYW5rIG9mIEFtZXJpY2EgJDMuMiBCaWxsaW9uLiBUaGUgdG9wIDI1IGhlZGdlIGZ1bmQgbWFuYWdlcnMgZWFybmVkIG9uIGF2ZXJhZ2UgJDEgQmlsbGlvbiBlYWNoIHRoaXMgcGFzdCB5ZWFyLiBNZWFud2hpbGUsIHJlYWwgdW5lbXBsb3ltZW50IGlzIG5lYXJseSBkb3VibGUgdGhlIG9mZmljaWFsIDEwJSB1bmVtcGxveW1lbnQgcmF0ZSBhbmQgYXZlcmFnZSBBbWVyaWNhbnMgY29udGludWUgdG8gc3RydWdnbGUgd2l0aCBwYXkgY3V0cyBhbmQgam9iIGxvc3NlcyBhcyBXYWxsIFN0cmVldCBmYSB0Y2F0IGJhbmtlcnMgY29udGludWUgdG8gc3F1ZWV6ZSBtb3JlIGFuZCBtb3JlIHByb2ZpdCBvdXQgb2YgdXMuIGZhdCBjYXRzIHRha2Ugb3VyIG1vbmV5IHR3byB3YXlzOiBmaW5hbmNpYWxpemF0aW9uIGFuZCBnb3Zlcm5tZW50IGNvcnBvcmF0ZSB3ZWxmYXJlIGZpbmFuY2VkIHdpdGggb3VyIHRheCBkb2xsYXJzLgpUaGUgc3RhbmRhcmQgZGV2aWF0aW9uIGRlc2NyaWJlcyB0aGUgdmFyaWFiaWxpdHkgaW4gdGhvc2UgaGVpZ2h0cy4gCllvdSBtYXkgZ2V0IGJlYXRlbiB0byB0aGUgcHVuY2guIApEaWFmb2lydXM7IGNlbGxlcyBsIG5vdXMgZm9udCBhc3Npc3RlciAgdW5lIGNvbnN1bHRhdGlvbiBvLCBkYW5zIHVuIGJvdWRvaXIgIHRydW1lYXV4IHBlaW50IHBhciBCb3VjaGVyLCBkZXMgbWRlY2lucyAgcGVycnVxdWVzIHBvdWRyZXMsICBtb2xsZXRzIGQgc2Vjb3VlbnQgZCBjaGlxdWVuYXVkZSBsZXVycyBqYWJvdHMgZGUgZmluZSBiYXRpc3RlIGVuIGRpc2N1dGFudCBzdXIgbGVzIHZhcGV1cnMgZGUgbGV1ciBiZWxsZSBjbGllbnRlIGxhbmdvdXJldXNlbWVudCB0ZW5kdWUgZW50cmUgc29uIG5ncmUgZXQgc29uIHBlcnJvcXVldC4uIApIYXZlIHBsYXllZCBhcyBtb3N0IG9mIHRoZXNlIGNoYXJhY3RlcnMgYmVmb3JlLCBhbmQgdGhleSBkbyBwbGF5IHByZXR0eSBtdWNoIHRoZSBzYW1lLiAKSGFzbiBkaXNhcHBlYXJlZCBqdXN0IGJlY2F1c2Ugd2Uga25vdyByYWNlIGlzIGEgc29jaWFsIGNvbnN0cnVjdGlvbi4gClRCSCwgbXkgdGluIGhhdCBuYXJyYXRpdmUgaXMgdGhhdCB0aGUgY29tcGFueSBtaWdodCBoYXZlIG1hZGUgYSBsZWdpdGltYXRlIG1pc3Rha2UsIGJ1dCB3YWl0ZWQgdG8gaW5mb3JtIExBT1AgYmVjYXVzZSB0aGV5IHdhbnRlZCBoaW0gaW4gZXhhY3RseSB0aGlzIHNpdHVhdGlvbiB3aGVyZSBoZSBhbHJlYWR5IHNvbGQvdHJhZGVkIHRoZW0uIFRoZXkgYmVuZWZpdCBhIGxvdCBtb3JlIGlmIE9QIHBheXMgdXAgcmF0aGVyIHRoYW4gcmV0dXJucyB0aGVtLCBhbmQgSSBjYW4gMTAwJSBzZWUgc29tZWJvZHkgdGhpbmtpbmcgdGhleSBnZXQgY3V0ZSBhbmQgd2FpdCB0byBkZW1hbmQgbW9uZXkgb3IgYSByZXR1cm4gdW50aWwgdGhlIHJldHVybiBpcyBwcm9iYWJseSBvZmYgdGhlIHRhYmxlLi4gCkxhbXBwYWludGluZyAgNCBwb2ludHMgIHN1Ym1pdHRlZCA1IGRheXMgYWdvClRoZSBLaXNzaW5nIEJvb3RoIGlzIGFsc28gYmFjaywgd2l0aCBCWU8gZHJpbmtzIGFuZCBuaWJibGVzIHByb3ZpZGVkLiAkMTUgb24gdGhlIGRvb3IuIApBcyBzb29uIGFzIHRoZXkgc3RhcnQgcHJpb3JpdGl6aW5nIHNwZWVkLCB0aGV5IGNvbXBsYWluIGFib3V0IHdpZHRoIGluIHNraWxsIGdhcC4gVGhlc2UgZ3V5cyBhcmUganVzdCBzbyBtdWNoIGJldHRlciB0aGFuIGFueW9uZSBlbHNlIHRoYXQgdGhleSBvbmx5IGFjdHVhbGx5IGhhdmUgYWJvdXQgMzAwIDQwMCBwZW9wbGUgdGhhdCB0aGV5IGNhbiBldmVuIG1hdGNoIHdpdGggYW5kIGdldCBhIGRlY2VudCBnYW1lIGFuZCB0aG9zZSBwZW9wbGUgd291bGQgYWxsIGhhdmUgdG8gYmUgb24gYXQgdGhlIHNhbWUgdGltZSBmb3IgZ29vZCBkZWNlbnQgdGltZXMuIElmIHRoZXkgd2FudCBnb29kIG1hdGNoZXMsIHBsYXkgYW4gaW5ob3VzZSBsZWFndWUuIApGdXJ0aGVybW9yZSwgZXZlcnkgcGxheWVyIGhhcyBhbiBlcXVhbCBjaGFuY2Ugb2Ygd2lubmluZyB0aGUgaGFuZC4gQSBrZWVuIG9ic2VydmVyIG1heSBhbHNvIG5vdGUgdGhhdCBldmVuIHRob3VnaCB0aGUgcnVsZXMgYXJlIGRlZmluZWQgaW4gcG9rZXIsIHNvbWUgcGxheWVycyBtYXkgdXRpbGl6ZSB0cmlja3MgdG8gZ2FpbiBhbiBhZHZhbnRhZ2Ugb3ZlciBvdGhlciBwbGF5ZXJzLi4gCkJ1dCBpdCdzIG5vdCBleGFjdGx5IHBlcmZlY3QsIGFuZCBzaW5jZSBpdCdzIGJlZW4gZmFpcmx5IGVhc3kgdG8gdGhpcyBwb2ludCwgeW91IGRlY2lkZSB0byBrZWVwIG1hc3NhZ2luZyB0aGUgYXJlYSB0byBtYWtlIGl0IGZsYXdsZXNzLiBBZnRlciBhIGZldyBtb3JlIG1pbnV0ZXMgb2YgbWFzc2FnaW5nLCB5b3UgcmVhbGl6ZSB0aGF0IHlvdSd2ZSBwdXNoZWQgaXQganVzdCBhIGxpdHRsZSB0b28gZmFyLiBBbmQgbm93IHlvdSd2ZSBnb3QgdGhpcyBmbGFiYnkgYXJlYSBvbiB0aGUgaG9vZCB3aGVyZSB5b3Ugc3RyZXRjaGVkIG91dCB0aGUgbWV0YWwuIApJbWFnaW5lIHdoYXQgd291bGQgaGFwcGVuIGlmIHlvdSBiZXQgb25lIGNvaW4gYW5kIGhpdCBpdCBiaWchIFlvdSdkIGJlIHN1bGtpbmcgYWxsIHRoZSB3YXkgdG8gdGhlIGJ1ZmZldC4uIApDb3JyZWN0aW9ucyB3ZXJlIG1hZGUgdG8gYWxsb3cgZm9yIGVmZmVjdCBzaXplIGVzdGltYXRlIGJpYXMgYXJpc2luZyBmcm9tIHNtYWxsIHNhbXBsZSBzaXplcyAoZmV3ZXIgdGhhbiA1MCBwYXRpZW50cykuTWV0aG9kcyBvZiBzeW50aGVzaXNIb3cgd2VyZSB0aGUgc3R1ZGllcyBjb21iaW5lZD9UaGUgc3R1ZGllcyB3ZXJlIGdyb3VwZWQgYnkgdHlwZSBvZiBoZWFkYWNoZSBhbmQgZGVzY3JpYmVkLiBUaGUgc3R1ZGllcyB3ZXJlIHRoZW4gY29tYmluZWQgYnkgZXZhbHVhdGluZyB0aGUgbGV2ZWwgb2YgZXZpZGVuY2UgZm9yIHRoZSBlZmZpY2FjeSBvZiBzb21lIGludGVydmVudGlvbnMsIHRha2luZyBhY2NvdW50IG9mIHRoZSB0eXBlIG9mIGNvbXBhcmlzb24gaW50ZXJ2ZW50aW9uIChlc3RhYmxpc2hlZCBlZmZpY2FjaW91cyB0cmVhdG1lbnQsIGNvbW1vbmx5IHVzZWQgdGhlcmFweSBvciBwbGFjZWJvKSwgcXVhbGl0eSBzY29yZXMsIHRoZSBudW1iZXIgb2YgUkNUcyBhbmQgdGhlIHN0YXRpc3RpY2FsIHNpZ25pZmljYW5jZSBvZiB0aGUgcmVzdWx0cy4gVGhlIGV2aWRlbmNlIHdhcyBjbGFzc2lmaWVkIGFzIHN0cm9uZywgbW9kZXJhdGUsIGxpbWl0ZWQgb3IgaW5jb25jbHVzaXZlLiAKRmFsayB0aHJvd3MgMyBURHMsIE5vLiAxOSBXYXNoaW5ndG9uIFN0YXRlIGJlYXRzIFV0YWggMzMgMjVXYXNoaW5ndG9uIFN0YXRlIHYgVXRhaFNBTFQgTEFLRSBDSVRZLCBVVCAgIE5PVkVNQkVSIDExOiBTaWFsZSBGYWthaWxvYXRvbmdhIDg3IG9mIHRoZSBVdGFoIFV0ZXMgbWFrZXMgYSBjYXRjaCBmb3IgYSB0d28gcG9pbnQgY29udmVyc2lvbiBpbiB0aGUgdGhpcmRzIHF1YXJ0ZXIgb2YgdGhlaXIgMzMgMjUgbG9zcyB0byB0aGUgV2FzaGluZ3RvbiBTdGF0ZSBDb3VnYXJzIGF0IFJpY2UgRWNjbGVzIFN0YWRpdW0gb24gTm92ZW1iZXIgMTEsIDIwMTcgaW4gU2FsdCBMYWtlIENpdHksIFV0YWguIApNeSBzaXN0ZXIgd2hvIHdhcyBhIGxvbmcgdGVybSBuZXRiYWxsZXIgd2hvIGhhcyBwbGF5ZWQgZm9vdHkgZm9yIGEgZmV3IHllYXJzIGNhbiB0ZWxsIHlvdSBzdHJhaWdodCBvZmYgdGhlIGJhdCB3aGF0IHRoZXkgZGlkIGZvciB0aGVpciBrbmVlcyBpbiB3YXJtdXBzLCBhbmQgaG93IHlvdSBzaG91bGQgdHVybiwgc3RvcCBhbmQganVtcCwgYW5kIHdoYXQgdGhlIHJpc2tzIGFyZS4gCkkgb25seSBoYXZlIGFib3V0IDUwMCBob3VycyBpbiBURjIuIApQbGF5ZXJzIHR1cm4gdGhlIGNhcmRzIGZhY2UgdXAsIGFuZCB0aGUgbW9uZXkgaXMgYXdhcmRlZCBpbiB0ZXJtcyBvZiAicG9pbnRzIi4uIApUaGV5IGFsc28gZG8gYXNzZXNzbWVudCBzYSBzaXRlIG5pbGEgaWYgeW91IGV2ZXIgZ2V0IGEgY2hhbmNlIHRvIHZpc2l0IHRoZW0uIApMb3ZlIGFuZCBTb2xpZGFyaXR5Ck5vdCBhbGwgb2YgdGhlc2Ugb2ZmIHNob3JlIGJhbmtzIGFuZCBmdW5kIHRyYW5zZmVyIHNlcnZpY2VzIGFyZSBzYWZlIHRvIHVzZS4gSG93IGNhbiB5b3UgdGVsbCB0aGUgZGlmZmVyZW5jZT8gUmVzZWFyY2ggdGhlIGJhbmsgb3Igc2VydmljZSB0byBmaW5kIG91dCBob3cgbG9uZyB0aGUgY29tcGFueSBoYXMgYmVlbiBhcm91bmQgICB0aGUgbW9yZSBlc3RhYmxpc2hlZCwgdGhlIGJldHRlci4gSXQncyBhIGdvb2Qgc2lnbiBpZiB5b3UgY2FuIHNwZWFrIHRvIGEgcmVhbCBwZXJzb24gd2hlbiB5b3UgY2FsbCB0aGUgY29tcGFueSdzIGN1c3RvbWVyIHNlcnZpY2UgbGluZS4gCllvdSBjYW4gYWxzbyBidXkgYSBxdWlsbCwgd2hpY2ggbGV0cyB5b3UgZmlsbCBpbiB0aGUgbWFwIGZ1cnRoZXIgYnkgZXhwbG9yaW5nLCBhbmQgYSBjb21wYXNzIGNoYXJtLiAKV2UgbXVzdCBiZWNvbWUgc28gZmVkIHVwIHRoYXQgd2UgY2FuIG5vIGxvbmdlciB0b2xlcmF0ZSBjb21wbGFjZW5jeS4gClNpIGRldXggcGVyc29ubmVzIG9udCBsZSBtbWUgdHlwZSBkZSBjb21iaW5haXNvbiwgY2VsbGUgYXZlYyBsYSBvdSBsZXMgY2FydGUocykgZG9udCBsYSB2YWxldXIgZXN0IGxhIHBsdXMgbGV2ZSBsJ2VtcG9ydGUuIFNpIGxlcyB2YWxldXJzIHNvbnQgZXhhY3RlbWVudCBsZXMgbW1lcyAobGEgY291bGV1ciBuZSBjb21wdGFudCBwYXMpLCBsZXMgZGV1eCBqb3VldXJzIHNvbnQgIGdhbGl0IGV0IHBhcnRhZ2VudCBsZSBwb3QgdmVudHVlbC4KSXQgaGVscHMgcGVvcGxlIHRvIGltcHJvdmUgdGhlaXIgY2lyY3VsYXRpb24sIGJlY2F1c2UgaXQgdXNlcyB5b2dhIHBvc2l0aW9ucyB0aGF0IGFyZSBlZmZlY3RpdmUgaW4gcmVmcmVzaGluZyBjaXJjdWxhdGlvbi4gSXQgY2FuIGFsc28gaGVscCBwZW9wbGUgdG8gYm9vc3QgdGhlaXIgaW1tdW5lIHN5c3RlbSBiZWNhdXNlIGl0IGludmlnb3JhdGVzIHRoZSBuZXJ2b3VzIHN5c3RlbSBhbmQgaGVscHMgYXQgcmVsZWFzaW5nIHRveGlucyB0aHJvdWdoIGltcHJvdmVkIGNpcmN1bGF0aW9uLiAKU3VpdCBVcCBQb2tlciBMZWFndWUgTExDIGlzIGEgRlJFRSwgTk8gUklTSywgTk8gTU9ORVkgcG9rZXIgbGVhZ3VlOyBob3dldmVyIHBsYXllcnMgYXJlIGVuY291cmFnZWQgdG8gcGF0cm9uaXplIHRoZSBob3N0aW5nIHZlbnVlcy4gV2l0aG91dCB0aGUgdmVudWVzLCB0aGVyZSB3b3VsZCBiZSBubyBmcmVlIHBva2VyLiAKTWFjaGluZUluVGhlU3RvbmUgICAzIHBvaW50cyAgc3VibWl0dGVkIDQgaG91cnMgYWdvClRoZXJlIGFyZSBtYW55IG1ldGhvZHMgb2Ygc2VsZiBoeXBub3Npcy4gCkRldCBoYW5kbGVyIGlra2Ugb20gaHZlbSBzb20gYmVnciBrcmltaW5hbGl0ZXRlbiwgbWVuIGh2b3IgZGVuIGJlZ3MsIHNpZXIgU3RqYmVyZy4uIApBbmQgb3RoZXIgc3VwcG9ydGVycyBzYXkgdGhlIGdhbWVzIHdpbGwgYmUgbGltaXRlZCBzaW5jZSBmZXcgY2hhcml0aWVzIGFyZSB3aWxsaW5nIHRvIGhvc3QgdGhlIG1vbnRobHkgZ2FtZXMuIApJdCB3YXMgYXBwcm92ZWQgaW4gSnVuZSAyMDA1IG9uIGEgMyAyIHZvdGUsIHdpdGggdHdvIERlbW9jcmF0aWMgU0VDIGNvbW1pc3Npb25lcnMgYW5kIGNoYWlybWFuIFdpbGxpYW0gRG9uYWxkc29uIHN1cHBvcnRpbmcgaXQsIHdoaWxlIHRoZSB0d28gUmVwdWJsaWNhbiBjb21taXNzaW9uZXJzIHZvdGVkIG5vLi4gCk1hc3Mgb2YgQ2hyaXN0aWFuIEJ1cmlhbCB3aWxsIGJlIGNlbGVicmF0ZWQgYXQgU3QuIApJZiB5b3UgdGhpbmsgdGhlIG1hcmtldCBpcyB1bmRlcnZhbHVpbmcgdGhlIGFzc2V0IHBvdGVudGlhbCByZXZlbnVlIHN0cmVhbSwgeW91IG1pZ2h0IGhhdmUgZm91bmQgYSB3aW5uZXIuLiAKVXN1YWxseSwgYWZ0ZXIgdGhlIGZpcnN0IHNldCBvZiBjYXJkcyBpcyBkZWFsdCBwbGF5ZXJzIGNob29zZSB3aGljaCBvbmVzIHRvIGtlZXAgYW5kIHRoZW4gdGhleSBjYW4gZGVjaWRlIHRvIHBsYXkgdGhvc2UgY2FyZHMgaW4gbXVsdGlwbGUgaGFuZHMuIEZvciBleGFtcGxlLCBpZiBwbGF5ZXJzIGNob29zZSB0byBwbGF5IHRoZSBjYXJkcyBpbiB0aHJlZSBkaWZmZXJlbnQgaGFuZHMsIHRoZSBzYW1lIGtlcHQgY2FyZHMgd2lsbCBmb3JtIHRocmVlIGRpZmZlcmVudCBoYW5kcyBhbmQgZWFjaCBoYW5kIHdpbGwgZ2V0IGEgZHJhdyBmcm9tIGEgZGlmZmVyZW50IGRlY2suLiAKQXBwbHkgYSBiaXQgbW9yZSBwcmVzc3VyZS4gT25lIG9mIHRoZSBtb3N0IGVuam95YWJsZSBwYXJ0cyBvZiBhIFN3ZWRpc2ggaGFuZCBtYXNzYWdlIGlzIHdoZW4gdGhlIGFjdHVhbCBtYXNzYWdpbmcgdGVjaG5pcXVlcyBiZWdpbi4gVG8gZG8gdGhpcywgdGFrZSB5b3VyIGZpbmdlcnMgYW5kIGFwcGx5IHByZXNzdXJlIHRvIHRoZSB0b3Agb2YgeW91ciBjbGllbnQncyBoYW5kICh3aG9zZSBwYWxtIHNob3VsZCBiZSBmYWNpbmcgZG93bndhcmQgbm93KS4gVGhpcyBtb3Rpb24gc2hvdWxkIG9wZW4gdXAgaGVyIHBhbG0uIFlvdSBzaG91bGQgbm93IGhhdmUgYSBnb29kIGdyaXAgb24geW91ciBjbGllbnQncyBoYW5kIHdoaWxlIHlvdSdyZSBob2xkaW5nIGl0IG9wZW4gYW5kIHN0cmV0Y2hpbmcgaXQgZmxhdCB3aXRoIHlvdXIgZmluZ2Vycy4gTW92ZSB5b3VyIGZpbmdlcnMgYXJvdW5kIHRoZSB0b3Agb2YgaGVyIGhhbmQsIHRyeWluZyB0byBtYXNzYWdlIGV2ZXJ5IGFyZWEuIEJlIGdlbnRsZSB0aG91Z2ggICB0b28gbXVjaCBwcmVzc3VyZSBjYW4gYmUgcGFpbmZ1bCBmb3IgeW91ciBjbGllbnQuCkl0IHN0YXJ0ZWQganVzdCBsaWtlIGV2ZXJ5IGRheSBoYXMgd2l0aCBtZSByaXNpbmcgb3V0IG9mIGJlZC4gCkkgaGF2ZSBhIGZyaWVuZCB0aGF0IHdhbnRlZCB0byBiZSBhIGJhc2ViYWxsIHVtcCBzaW5jZSBoZSB3YXMgYSBraWQsIEkgd29yayB3aXRoIGFub3RoZXIgZ3V5IHdobyBjdXJyZW50bHkgd29ya2luZyBoaXMgd2F5IHRocm91Z2ggTkJBIHJlZmVyZWVpbmcuIFBsZW50eSBvZiBwZW9wbGUgd2FudCB0byBiZSB0aGF0LCBpdCBub3QgZXhjbHVzaXZlbHkgZ3V5cyB3aG8gY291bGRuIGhhY2sgaXQgaW4gdGhlIHNwb3J0Li4gClRoZXJlIGFyZSBzZXZlcmFsIGZlYXR1cmVzIG9mIHdoaWNoIHNldCBTaGVyaWZmIElnYW1pbmcgYSBsZXZlbCBhYm92ZSBhbG1vc3QgZXZlcnkgb3RoZXIgZnJlZSBvbmxpbmUgc2xvdHMgcGxhY2VzLiBGaXJzdCB0aGV5IGhhdmUgZmFudGFzdGljIGN1c3RvbWVyIHN1cHBvcnQgYXZhaWxhYmxlIG9uZSBhIGRheSwgc2V2ZW4gZGF5cyBzZXZlbiBkYXlzLiBUaGV5IGFsc28gY29uc3RhbnRseSBiZSBnaXZlbiBmZWVkYmFjayBhbmQgY2hhbmdlIGhpcyBvciBoZXIncyBnYW1lcyBiYXNlZCBvbiB0aGUgZmVlZGJhY2sgdGhleSByZWNlaXZlLiBTZWNvbmRseSwgc2hlcmlmZiBnYW1pbmcgcHJvdmlkZXMgYW4gdW5wYXJhbGxlbGVkIGxldmVsIG9mIGdyYXBoaWNzIGFuZCBhbmltYXRpb25zIGFib3V0IHRoZWlyIHNsb3RzIGdhbWVzLiBJbiBjb25jbHVzaW9uIHRoZXkgb2ZmZXIgdGhlaXIgZmxhc2ggZ2FtZXMgaW4gb3ZlciAyMCBkaWZmZXJlbnQgbGFuZ3VhZ2VzIG1ha2luZyBzdXJlIHRoYXQgZXZlcnlvbmUgY2FuIGVuam95IGFsbCBvZiB0aGVtIG5vIG1hdHRlciB3aGVyZSB0aGV5IGFyZSBwZXJmZWN0bHkgbG9jYXRlZCBhdCB0aGUgd29ybGQuClNhbG1vbiBoYWJpdGF0IHRvIHJlY292ZXIgZnJvbSBUcmFucyBNb3VudGFpbiBwaXBlbGluZSB3b3JrIHdpdGhpbiAyIHllYXJzCkFuZCB3aGVuIHdlIHNheSBmcmVlLCB3ZSBtZWFuIGZyZWUgdG8gc2VhcmNoIGZvciBvdGhlciBtZW1iZXJzIGFuZCBmcmVlIHRvIG1lc3NhZ2UgdGhlbS4gCldhcyBpdCBoaXMgY2FyZHM/IE5vLCBIZWxsbXV0aCBzYXlzLCBwYWNpbmcgdGhlIGZsb29yIG9mIGhpcyBzdWl0ZSBhdCBOZXcgWW9yayBDaXR5J3MgUGxhemEgSG90ZWwuIApTb21ldGltZXMgb3V0cyBhcmVuJ3QgdHJ1ZSBvdXRzLiBJbiBjZXJ0YWluIHNpdHVhdGlvbnMsIGFuIG91dCBtYXkgYmUgbW9yZSBiZW5lZmljaWFsIHRvIHlvdXIgb3Bwb25lbnQgdGhhbiB5b3UuIApXaGlsZSB0aGUgcGhvbmUgY29udmVyc2F0aW9uIHdpdGggbXkgbW90aGVyIGRpZG4ndCBlbmQgb24gdGhlIGJlc3Qgbm90ZSwgaXQgZGlkIGdpdmUgbWUgY2xhcml0eSBhYm91dCBob3cgSSB3YW50ZWQgdG8gZG8gdGhpcyBhZG9wdGlvbi4uIApEZXNwaXRlIHRoZSBwb3B1bGFyaXR5IG9mIHBva2VyLCB0aG91Z2gsIHZlcnkgZmV3IHBlb3BsZSBrbm93IG11Y2ggYWJvdXQgcG9rZXIgY2hpcHMgb3IgdGhlaXIgc3RhbmRhcmQgZGVub21pbmF0aW9ucy4gClNjaWVuY2UgYW5kIHJlbGlnaW9uIG1vc3QgY2VydGFpbmx5IGRvIG5vdCBoYXZlIHRvIGJlIHBvbGFyIG9wcG9zaXRlcyAibGlrZSBtYW55IEF0aGVpc3RzIGxpa2UgdG8gZGVjbGFyZSIuIApJbCB0cmFpdGUgTW9udG1hcnRyZSBwcmVzcXVlIHJ1ZSBwYXIgcnVlLCBtYWlzb24gcGFyIG1haXNvbiwgbm91cyBlbnRyb25zIGRhbnMgbGUgc2VjcmV0IGRlIE1vbnRtYXJ0cmUgY29tbWUgbGUgdGl0cmUgbGUgbGFpc3NlIHBydm9pci4uIApJIGhhZCBhYm91dCAyIGhvdXJzIG9mIHNsZWVwIHRoYXQgbmlnaHQuIApZZWEsIGlsbCBvbmx5IGJlIGEgc29jaWFsIHNtb2tlciBhbmQgc21va2Ugd2hlbiBvdGhlcnMgZG8sIGlsbCBzbW9rZSB3aGVuIEkgaGF2ZSBtb3JlIHRoYW4gMSBkcmluaywgaWxsIHNtb2tlIHdoZW4gaSByZWFsbHkgbmVlZCBpdCBhbmQgbmV2ZXIgYW55IG90aGVyIHRpbWUuIApUaXJlcyBoYXZlIGJlZW4gdGhlIHdvcnN0IGFuZCBtb3N0bHkgZG9uIGhhcHBlbiBhbnltb3JlIGJlY2F1c2UgdGhlIHRpcmVzIGNhbiBiZSBwcm9wZXJseSBzZWN1cmVkIGFuZCB3b3VsZCBiZSBkcmFnZ2VkIGF3YXkgYnkgdGhlIGN1cnJlbnQsIGRlc3Ryb3lpbmcgdGhlIGNvcmFscyB0cnlpbmcgdG8gZ3JvdyBvbiB0aGVtIGFuZCBkZXN0cm95aW5nIHRoZWlyIHN1cnJvdW5kaW5ncyBhcyB3ZWxsIGJ5IGNyYXNoaW5nIGludG8gaXQuIApJIGNvdWxkIGdvIHRocm91Z2ggeW91ciBjb21tZW50IHBvaW50IGJ5IHBvaW50IGFnYWluLCBidXQgSSB0aGluayB3ZSBib3RoIGtub3cgdGhhdCBpdCB3b24ndCBzZXJ2ZSBlaXRoZXIgb2YgdXMuIE15IGV2aWRlbmNlIHdvbid0IGNvbnZpbmNlIHlvdSwgYW5kIHlvdXIgZGVkdWN0aW9ucyBhcmUgdGhpbmdzIEkndmUgYWxyZWFkeSBzZWVuIGRlYnVua2VkIGEgZG96ZW4gdGltZXMgYmVmb3JlLiBJJ2Qgbm9ybWFsbHkga2VlcCB0aGUgZGViYXRlIGdvaW5nIGluIG9yZGVyIHRvIGVkdWNhdGUgYW55b25lIHdobyBtaWdodCBtYWtlIGl0IHRoaXMgZmFyIGRvd24gaW4gdGhlIHRocmVhZCwgYnV0IG5vYm9keSBlbHNlIGlzIGdvaW5nIHRvIHNlZSBpdCBhdCB0aGlzIHBvaW50LiAKWW91IGRldGFpbGluZyBEZW1vY3JhdHMgcGVyZmVjdGx5LiAKVGhlcmVmb3JlIHRoZSAicmVsYXRpdmUiIHN0cmVuZ3RoIG9mIGV2ZW4gb3VyIGV4dHJlbWVseSBnb29kIGhhbmRzIGdvZXMgd2F5IGRvd24uIApPcnRob2dvbmFsVGhvdWdodHMgdQpCdXQgSSBzZWUgbm93IHRoYXQgd2FzbiB0aGF0IGJhZCBvZiBhIHByb2JsZW0sIGFuZCB3aXRoIGEgbGl0dGxlIG1vcmUgcmVzZWFyY2ggYW5kIHBvc3NpYmx5IGEgZGlmZmVyZW50IEtlZXBhc3MgY2xpZW50IEkgYmV0IHRoYXQgY2FuIGJlIHNvbHZlZC4uIAooTUxpdmUgZmlsZSBwaG90bylMQU5TSU5HICAgQSBqdWRnZSBvcmRlcmVkIHRoZSBzdGF0ZSB0byB0ZW1wb3JhcmlseSBzdG9wIGVuZm9yY2luZyBuZXcgY2hhcml0YWJsZSBnYW1pbmcgcnVsZXMgdGhhdCB3ZW50IGludG8gZWZmZWN0IGVhcmxpZXIgdGhpcyBtb250aC4gTWljaGlnYW4gQ291cnQgb2YgQ2xhaW1zIEp1ZGdlIFBhdCBEb25vZnJpbyBvbiBGcmlkYXkgaXNzdWVkIGEgcHJlbGltaW5hcnkgaW5qdW5jdGlvbiBwcmV2ZW50aW5nIHRoZSBNaWNoaWdhbiBHYW1pbmcgQ29udHJvbCBCb2FyZCBmcm9tIGltcGxlbWVudGluZyBvciBlbmZvcmNpbmcgdGhlIG5ldyBydWxlcyB3aGlsZSBhIHJlbGF0ZWQgbGF3c3VpdCBwbGF5cyBvdXQgaW4gY291cnQuIApTZWNvbmQgYWx0ZXJuYXRpdmU6IFNlbGwgdGhlIGNvdHRhZ2UgZm9yICQ2MTcsNTAwIGFmdGVyIDUgcGVyIGNlbnQgY29zdHMsIHBheSBvZmYgdGhlICQxNTAsMDAwIG1vcnRnYWdlLCBhbmQgaW52ZXN0IHRoZSBkaWZmZXJlbmNlLCAkNDY3LDUwMCBmb3IgMzUgeWVhcnMgdG8gZXhoYXVzdCBhbGwgaW5jb21lIGFuZCBjYXBpdGFsIGZvciBhIHlpZWxkIG9mICQyMSwxMjMgcGVyIHllYXIuIApLQ2NoaWVmczg4IHUKRWRpdDogZXZlbiBpZiB5b3UgZG9uIHRyeSB0byBjb252aW5jZSB0aGVtIHlvdSBoYWQgaGlnaCBzY2hvb2wgYWxnZWJyYSB0b2dldGhlciBvciBzb21ldGhpbmcsIHRoaXMgaXMgYSBnb29kIHdheSB0byBzdGFydCBjb252ZXJzYXRpb25zLiAKT3IgaW5zdGVhZCBvZiBhIGNvbXBvc2l0aW9uIGJvb2sgc2V0IHVwIGEgc2VwYXJhdGUgZW1haWwgYWNjb3VudCAoR21haWwgaXMgZnJlZSBhbmQgZWFzeSkgZm9yIHRoaXMgYW5kIGV2ZXJ5IHRpbWUgaGUgc3BlbmRzIGV4Y2Vzc2l2ZSB0aW1lIGdhbWluZywgZXNwZWNpYWxseSB3aGVuIGhlIG5lZ2xlY3RzIHlvdXIgY2hpbGQsIGVtYWlsIHRoZSBuZXcgYWNjb3VudCB0aGUgZGV0YWlscyBvZiB3aGF0IGhhcHBlbmVkLiAKSG93IHdpbGwgc2hlIGZlZWwgaWYgc2hlIGhhcyB0byBraWxsIG90aGVyIHJvYm90cyBvciBodW1hbnM/UmVpbmhhcmR0IGlzIGEgbG91ZG1vdXRoLCBidXQgSSBkb24gcmVhbGx5IHNlZSBoaW0gYmVpbmcgb25lIHRvIHRhbGsgYWJvdXQgdGhpbmdzIHRoYXQgcGFpbiBoaW0uIElmIFJlaW5oYXJkdCB3ZXJlIHRlbGxpbmcgdGhhdCB0YWxlLCBJIHN1cmUgaGUgdGFsayBhYm91dCBob3cgaGlzIG1lbnRvciBzYXZlZCBoaXMgbGlmZSBhbmQgZGllZCBpbiBhIGdsb3Jpb3VzIGxhc3Qgc3RhbmQgdG8gc2F2ZSBldmVyeW9uZSwgd2hpbGUgbGVhdmluZyBvdXQgdGhlIHBhcnRzIGFib3V0IGhvdyBpdCB3YXMgYWxsIFJlaW5oYXJkdCBmYXVsdCwgYW5kIGhvdyBoZSBzdGlsbCBmZWVscyBndWlsdHkgYWJvdXQgaXQuIApTb21lIG9mZmVyIGZ1bGwgc2V4IHdoaWxzdCBvdGhlcnMgb25seSBwcm92aWRlIG9yYWwgb3IgbWFudWFsIHJlbGllZi4gCklmIHlvdSdyZSBhIGZhbiBvZiB0aGUgZ2FtZSBvZiBwb2tlciwgSSBob3BlIHlvdSdsbCBiZSBhYmxlIHRvIGNvbWUgYXMgd2VsbC4gTmV2ZXIgYmVlbj8gTm8gdGltZSBsaWtlIHRoZSBwcmVzZW50IHRvIGRpcCB5b3VyIHRvZXMgaW4uIEJ1dCBmaXJzdCwgaGVyZSdzIHNvbWUgZnJpZW5kbHkgYWR2aWNlOgpKdXN0IHRhbGtpbmcgYWJvdXQgdGhlIG1pY3JvIHRyYW5zYWN0aW9ucy4gSW4gYXBleCB0byBidXkgYW55dGhpbmcgeW91IGhhdmUgdG8gYnV5IHRva2VuIHBhY2tzLCB0aGUgcHJpY2luZyBpcyBub3QgaG9uZXN0IGFuZCBidWlsdCB0byBiZSB2ZXJ5IHByZWRhdG9yeS4gRm9yIGV4YW1wbGUgYSB3ZWFwb24gc2tpbiBpcyAxMTAwIHRva2VucyBtaW5pbXVtIHdpdGggdGhlIGNoZWFwZXN0IHRva2VuIHBhY2sgcHJpY2VkIGF0ICQxMCBmb3IgMTAwMCB0b2tlbnMgbWVhbmluZyB5b3UgY2FuJ3QgYnV5IHRoZSAiJDEwIiBza2luIGZvciAkMTAgYnV0IHJhdGhlciBoYXZlIHRvIGdldCBhIG1pbmltdW0gb2YgMiBwYWNrcywgYW5kIHRoZW4geW91IGhhdmUgOTAwIHVudXNhYmxlIGNvaW5zIHNwYXJlIHByb2JhYmx5IGxlYWRpbmcgdG8geW91IHNwZW5kaW5nIG1vcmUuIEl0J3MgYSBzY2hlbWUgYXMgb2xkIGFzIG1pY3JvIHRyYW5zYWN0aW9ucyB0aGVtc2VsdmVzIGJ1dCBpdCdzIHN0aWxsIGEgYnVsbHNoaXQgcHJhY3RpY2UgdGhhdCBzaG91bGQgYmUgc3RvbXBlZCBvdXQuClNlZSBOYW1pbmcgTmFtZXMgaW50ZXJuYXRpb25hbCBwYWdlIGZvciByZWNydWl0ZXJzIGFuZCBwcmFjdGl0aW9uZXJzIG91dHNpZGUgQXVzdHJhbGlhIGFuZCBOZXcgWmVhbGFuZApJIGhhdmVuIG1lbnRpb25lZCBpdCB0byBoaW0uIElkayBob3cgaG9uZXN0bHkuIApCdXQgSSB0aGluayBpdCBpbXBvcnRhbnQgdG8gZ2V0IG91dCB0aGVyZSBleGFjdGx5IHdoYXQgaGFwcGVuZWQsIGFzIHRoZSBzcGVjaWZpY3MgbWF5IHN1cnByaXNlIHBlb3BsZSB3aG9zZSBrbm93bGVkZ2Ugb2YgdGhlIGNhc2UgaXMgbGltaXRlZCB0byB0aGUgcG9kY2FzdC4uIApTaGUgbG9zdCBoZXIgYmVzdCBmcmllbmQgaW4gdGhlIHdhci4gCkV2ZXIgc2luY2UgdGhhdCBkYXksIEkgbWFrZSBpdCBhIHBvaW50IHRvIG5ldmVyIHRhbGsgdG8gYW55Ym9keSBiZWhpbmQgYSB3YWxsLiBJIHB1bGxlZCAyMDBrZyBteSBwcmV2aW91cyB0cmFpbmluZyBibG9jayBidXQgYmFyZWx5IGdyYXplIHBhc3QgMTAwa2cgYmVuY2guIEkgYWRkaW5nIGxpa2UgMWtnIHBlciB5ZWFyIG9uIGJlbmNoIGJ1dCBteSBkZWFkbGlmdCBnbyB1cCBsaWtlIDIwIDMwa2cgYSB5ZWFyLiBUbyBzYXkgSSBoYXZlIGxvbmcgYXJtcyBpc24gZXhhY3RseSBjb3JyZWN0LiBNeSBoZWlnaHQgaXMgMTUzY20gd2hpbGUgbXkgd2luZyBzcGFuIGlzIG9ubHkgMTYwY20uIE1heWJlIG15IHRvcnNvIGlzIGp1c3Qgc2hvcnQuClNvIHNvbGFyLCB3aW5kLCBnZW90aGVybWFsLCBhbmQgaHlkcm8gYXJlIG9mZiB0aGUgdGFibGUgdW50aWwgeW91IGZpZ3VyZSBvdXQgd2hpY2ggY29tcGFuaWVzIGFyZSB0aWVkIGluIHNvbWUgd2F5IHRvIEJQIGFuZCB3aGljaCBhcmVuIGNhbiByZWFsbHkgbWFrZSBpdCBodXJ0IGlmIHlvdSBqdXN0IHNoaWZ0aW5nIHRoZWlyIHByb2ZpdCBjZW50ZXIuLiAKUGVyc29ubmVsIHVwb24gdGhlIEhlYXJ0aCBkbyBub3QgY2xhaW0gdG8gYmUgbWVkaWNhbCBwcmFjdGl0aW9uZXJzLiBXZSBkbyBub3QgZGlhZ25vc2UsIHRyZWF0IG9yIHByZXNjcmliZSBhbnkgbWVkaWNhbCB0cmVhdG1lbnQgb3IgYWR2aWNlLiBZb3Ugc2hvdWxkIGFsd2F5cyBkaXNjdXNzIHRyZWF0bWVudCBvZiBtZWRpY2FsIGNvbmRpdGlvbnMgd2l0aCB5b3VyIG1lZGljYWwgcHJhY3RpdGlvbmVyIGJlZm9yZSB1c2luZyBhbnkgYWx0ZXJuYXRpdmUgdGhlcmFwaWVzLCBuYXR1cmFsIHN1cHBsZW1lbnRzLCBvciB2aXRhbWlucy4gCkNvcnRleiBsZWFkaW5nIGxlZnRpc3QgZmlnaHQgYWdhaW5zdCBBbWF6b24gdGF4IGJyZWFrcwpJbiBmYWN0LCBhIHJlcG9ydCBjb21wYXJpbmcgdGhlIG93bmVyc2hpcCBhbmQgcmVudGFsIGNvc3RzIGJ5IHZldGVyYW4gaG91c2luZyBlY29ub21pc3QgV2lsbCBEdW5uaW5nIHJldmVhbGVkIHRoYXQgd2hlbiB0aGUgcHJpbmNpcGFsIHJlcGF5bWVudCBpcyBuZXR0ZWQgb3V0LCB0aGUgY29zdCBvZiBvd25lcnNoaXAgaXMgbGVzcyB0aGFuIHJlbnRpbmcgaW4gbW9zdCBjb21iaW5hdGlvbnMgb2YgaG91c2luZyB0eXBlcyBhbmQgbG9jYXRpb25zLiAKRm9yIGV4YW1wbGUsIHdoYXQgaWYgTGVhZ3VlIG9mIGxlZ2VuZHMgd2VyZSB0byB1bmxvY2sgYWxsIGNoYW1waW9ucyBmcmVlIG9mIGNoYXJnZSBhbmQgYWxsb3dlZCBmb3IgdGhlIHB1cmNoYXNlIG9mIHNraW5zIHdpdGggdGhlIGluIGdhbWUgZnJlZSBjdXJyZW5jeSwgYW5kIHdhcyBhYmxlIHRvIGFmZm9yZCBkb2luZyB0aGVzZSB0aGluZ3MgZm9yIHBsYXllcnMgYnkgb2ZmZXJpbmcgb3B0IGluIGJhbm5lciBhZHMgb24gbWVudXMgYW5kIGxvYWRpbmcgc2NyZWVucyB3aXRoIHJld2FyZHMgZm9yIHBlb3BsZSB3aG8gYXJlIHdpbGxpbmcgdG8gc3VwcG9ydCB0aGUgZ2FtZSBpbiB0aGF0IHdheT8KSXMgdGhpcyBubyBsaW1pdCB0b3VybmFtZW50IHN0eWxlIHBsYXksIG9yIGEgbGltaXQgY2FzaCBnYW1lPyBTdHJhdGVneSBiZXR3ZWVuIHRoZSB0d28gY2FuIGJlIHdpbGRseSBkaWZmZXJlbnQuIEkgYW0gYSByZWFzb25hYmx5IGNvbXBldGVudCAoYnV0IGJ5IG5vIG1lYW5zIGdyZWF0KSBubyBsaW1pdCBwbGF5ZXIsIGJ1dCBJIGFtIHdvcnRobGVzcyBpbiBhIGxpbWl0IGdhbWUgKEkganVzdCBkb24ndCBoYXZlIGEgZ29vZCBmZWVsIGZvciBpdCkuIApJbnRlcm5ldCBBcnRpY2xlcyAgSmFudWFyeSA2LCAyMDExCkFuYSB0byBSZWluaGVhcnQgVXByaXNpbmcgcXVvdGUKSWYgdGhlcmUgYXJlIGhvc3RlbHMsIGVzcGVjaWFsbHkgaW5kZXBlbmRlbnQgb25lcywgYW5kIHlvdSBnZXQgdGhlc2Ugb3V0c2lkZSB0aGUgY2l0aWVzIGFzIHdlbGwgaW4gc29tZSBjb3VudHJpZXMsIHlvdSBiZSBmaW5lIG1lZXRpbmcgb3RoZXIgcGVvcGxlIHlvdXIgYWdlIGluIHRoZSBldmVuaW5ncy4uIApXaXRoIGFsbCBkdWUgcmVzcGVjdCwgSSBkb24gdGhpbmsgeW91IGEgZ29vZCBqdWRnZSBvZiB3aGF0IHN0cmVuZ3RoZW5zIHRoZSBjb21tdW5pdHkuIApUaGUgc2Vjb25kIGJsdWZmIGlzIGNhbGxlZCB0aGUgc2VtaSBibHVmZiBhbmQgaXQgaXMgd2hlbiBhIHBsYXllciBibHVmZnMgb24gYSBkZWNrIG9mIGNhcmRzIHRoYXQgYXJlIGJhZCBmb3IgdGhlIG1vbWVudCwgYnV0IGNhbiBpbXByb3ZlIHdpdGggbHVjayBmcm9tIGEgY2FyZCBkcmF3bi4KRWRpdDogQW5kIGZvciB5b3UgdG8gc2F5IHRoYXQgcGVvcGxlIGdvaW5nIHZlZ2FuIHdvdWxkIGZpeCA3Mi45JSBvZiB0aGUgcHJvYmxlbSBtZWFucyB5b3UgYWJzb2x1dGVseSBmaW5lIHdpdGggdGhlIGVudmlyb25tZW50YWwgZGVzdHJ1Y3Rpb24gdGhlIGluZHVzdHJpYWwgZmFybWluZyBvZiBzb3kgaXMgY2F1c2luZyBhdCB0aGlzIHZlcnkgbW9tZW50LCBhcyBsb25nIGFzIHRoZSBwcm9kdWN0IGdvZXMgdG8gaHVtYW4gbW91dGhzIGluc3RlYWQgb2YgbGl2ZXN0b2NrLiBUaGlzIG9ubHkgc3VwcG9ydHMgbXkgdGhlb3J5IHRoYXQgdmVnYW5zIGRvbiBjYXJlIHNvIG11Y2ggYWJvdXQgc2F2aW5nIGFuaW1hbCBsaXZlcyBhcyB0aGV5IGRvIGxlZ2lzbGF0aW5nIHRoZSBwdWJsaWMgdHVtbWllcy4uIApTZWNvbmQsIGZpZ2h0ZXJzIGFyZW4ndCBvdXQgb2YgY29udHJvbCBtYW5pYWNzLiBBdCB0aGUgZW5kIG9mIGV2ZXJ5IHJvdW5kICAgYWZ0ZXIgcHVuY2hlcyBoYXZlIGJlZW4gdGhyb3duLCBhbmQgb2Z0ZW4gaW4gdGhlIG1pZGRsZSBvZiBhbiBleGNoYW5nZSAgIGZpZ2h0ZXJzIHJlc3BlY3QgdGhlIGhvcm4gYW5kIHRoZSByZWYgKGV4Y2VwdCBHZXJtYWluZSBEZSBSYW5kYW1pZSkuIFRoYXQncyBhZnRlciB0aGUgdHJhc2ggdGFsaywgYWZ0ZXIgdGhlIGh5cGUsIHdpdGggZXZlbiBtb3JlIGFkcmVuYWxpbmUgZ29pbmcgYW5kIGV2ZW4gbW9yZSByZWFzb24gdG8gd2FudCB0byBzd2luZy4gCldlIHNlZSBkZXN0cm95ZWQgY2FibGVzIGFsbCB0aGUgdGltZS4gCk5vdCBvbmx5IGRpZCB0aGUgZHJpdmVyIGdldCBsb3N0IGdldHRpbmcgdG8gbWUsIGJ1dCB3aGVuIHRoZSBkcml2ZXIgYXJyaXZlZCB0aGV5IGhhZCB0aGUgYmFjayByb3cgb2YgdGhlIHRoZSBzZWF0cyBmb2xkZWQgZG93bi4gRHJpdmVyIGhhZCB0byBnZXQgb3V0IGFuZCBtb3ZlIGFsbCB0aGVpciBwZXJzb25hbCBpdGVtcyBhcm91bmQgdG8gdGhlbiBzZXQgdGhlIHNlYXRzIGJhY2sgaW50byBwbGFjZS4gVGhlIHdob2xlIHRpbWUgd2Ugd2FpdGVkIGluIHRoZSBjb2xkIENoaWNhZ28gZXZlbmluZy4KSSBsb3ZlIGJvdGggb2YgdGhlbSwgYW5kIG9mIGNvdXJzZSBCQSBsb29rcyB2ZXJ5IHNtYXJ0IGFuZCB0cmFkaXRpb25hbCwgeWV0IHRoZSBzb21ld2hhdCBleHRyYXZhZ2FuY2Ugb2YgQ2hpbmEgU291dGhlcm4gaXMgYSB3ZWxjb21lIHN1cnByaXNlIGZyb20gd2hhdCBJIGNvbnNpZGVyIHRvIGJlIGEgdmVyeSByZXNlcnZlZCBhaXJsaW5lIG5vcm1hbGx5LiAKQWZ0ZXIgdGhlIHJpZGUsIHBhcnRpY2lwYW50cyBhbmQgZnJpZW5kcyBhcmUgaW52aXRlZCBiYWNrIHRvIHRoZSBmYWlyZ3JvdW5kcyBmb3IgYmFuZHMsIG11c2ljIGFuZCBnYW1lcyBhdCB0aGUgQnV0bGVyIENvdW50eSBCaWtlIEphbSBzcG9uc29yZWQgYnkgVGh1bmRlciBSb2FkcyBNYWdhemluZS4KIkFzIGEgcmVhbCBwb2tlciBwbGF5ZXIsIE1hcmNoaW9ubmUgd29uJ3Qgc2V0dGxlIGZvciB3aW5uaW5nIGp1c3Qgb25lIGhhbmQgYW5kIGdldHRpbmcgQ2hyeXNsZXI7IGhlIHdhbnRzIHRvIGdvIGZvciB0aGUgamFja3BvdCBvZiBtZXJnaW5nIHdpdGggR00sIiBzYWlkIFZpbmNlbnpvIExvbmdvLCBhIHN0cmF0ZWdpc3QgYXQgSUcgR3JvdXAgaW4gTWlsYW4uICJIZSdzIGx1cmluZyBHTSBpbnZlc3RvcnMgd2l0aCB0YWxrIG9mIG11bHRpIGJpbGxpb25zIGluIHNhdmluZ3MgYmVmb3JlIG1ha2luZyBhIGZpbmFsIHB1c2guIgpMYSBub3R0ZSBzZWd1ZW50ZSBpbCBzb2xkYXRvIE1hcnRpbm8gdmlkZSBpbiBzb2dubyBHZXN1IHJpdmVzdGl0byBkZWxsYSBtZXQgZGVsIHN1byBtYW50ZWxsbyBtaWxpdGFyZS4gVWQgR2VzIGRpcmUgYWkgc3VvaSBhbmdlbGk6IEVjY28gcXVpIE1hcnRpbm8sIGlsIHNvbGRhdG8gcm9tYW5vIGNoZSBub24gIGJhdHRlenphdG8sIGVnbGkgbWkgaGEgdmVzdGl0by4gUXVhbmRvIE1hcnRpbm8gc2kgcmlzdmVnbGkgaWwgc3VvIG1hbnRlbGxvIGVyYSBpbnRlZ3JvLiBSYXBwcmVzZW50YSBsJ290dGljYSBkZWxsYSB2aXNpb25lIGNoZSBvbHRyZXBhc3NhIGkgbGltaXRpLCBwb3RlbnppYW5kbyBsZSBxdWFsaXQgaW5zaXRlIG5lbCBudW1lcm8gMiAoMSsxID0yKTogbCdpbGx1bWluYXppb25lIGNoZSBhbHRybyBub24gIHNlIG5vbiBsYSBjYXBhY2l0IGRpIHZlZGVyZW9sdHJlIGxlIGFwcGFyZW56ZS4gVmVkZXJlIG9sdHJlLCBhbmRhcmUgb2x0cmU6ICBpbXBsaWNpdG8gc2VtcHJlIHVubyBzcG9zdGFtZW50bywgdW4gYW5kYXJlIHZlcnNvIChvIGFsIGRpIGwpLCB1biBtb3ZpbWVudG8gZGVsbGEgY29zY2llbnphIG1hIHB1ciBzZW1wcmUgdW4gbW92aW1lbnRvLgoyNCBwb2ludHMgIHN1Ym1pdHRlZCAyMyBkYXlzIGFnbwpEcmllZCBiZWFucyBhcmUgYWJvdXQgJDAuMjAvMTAwZyBhbmQgMzAwa2NhbCBwZXIgMTAwZyAoMTUwMGtjYWwvZG9sbGFyKQpTaGUgc2xpcHBlZCBkb3duIGZyb20gYmVpbmcgYSBzdGFyIHRvIDEyMyBvciAxMjUgaW4gdGhlIHdvcmxkICAgc2ltaWxhciB0byBBbmRyZSBBZ2Fzc2kgZnJvbSBvbmUgdG8gMTQyLCIgQm9sbGV0dGllcmkgdG9sZCBSZXV0ZXJzIGF0IFdpbWJsZWRvbiB3aGVyZSBoaXMgZm9ybWVyIHB1cGlscywgZnJvbSBKaW0gQ291cmllciB0byBNb25pY2EgU2VsZXMsIGhhdmUgc3BhcmtsZWQgb24gdGhlIGdyYXNzIGNvdXJ0cy4uIApUaGUgcmV2aWV3IGlzIGxvb2tpbmcgYXQgdGhlIGVmZmVjdGl2ZW5lc3Mgb2YgdGhlIExvY2FsIEltcGFjdCBBc3Nlc3NtZW50IHdoaWNoIGlzY29tcGxldGVkIHdoZW4gYSBjbHVib3IgaG90ZWx3YW50cyB0byBpbmNyZWFzZSB0aGUgbnVtYmVyIG9mIGdhbWluZyBtYWNoaW5lcyBpbiBpdHN2ZW51ZSwgb3Igd2hlbiBhIGhvdGVsIG9yIGNsdWIgY2hhbmdlcyBsb2NhdGlvbiAgIGluIG1pbmltaXNpbmcgaGFybSBhbmQgcmVkdWNpbmcgdGhlIG51bWJlciBvZiBnYW1pbmcgbWFjaGluZXMgaW4gdGhlIHN0YXRlLCBhbW9uZyBvdGhlciBpc3N1ZXMuIApUaGUgaXNzdWUgd2UgYWxsIGRlYWxpbmcgaW4gdGhlIHdhdGVyIGluZHVzdHJ5IGlzIHRoZSBkZWxpbmVhdGlvbiBvZiBvd25lcnNoaXAgb2YgdGhlc2Ugc2VydmljZSBsaW5lcyBhcyB0aGVyZSBubyBxdWVzdGlvbiB0aGF0IGxlYWQgc2VydmljZSBsaW5lcyBzaG91bGQgYmUgcmVwbGFjZWQsIGp1c3QgYSBxdWVzdGlvbiBvZiB3aG8gc2hvdWxkIHBheSBmb3IgaXQuIApQbGVhc2UgcmVzcGVjdCB0aGUgYW5zd2VycyBvZiBwZW9wbGUgd2hvIGhhdmUgZ2VuZXJvdXNseSBnaXZlbiB5b3UgdGhlaXIgdGltZSwgZXZlbiBpZiBpdCBub3QgYWx3YXlzIHdoYXQgeW91IHdhbnQgdG8gaGVhci4uIApMaWtlIG1vc3QgcHJvZ3Jlc3NpdmUgYWN0aXZpc3RzIGFuZCBwb2xpY3kgZ3JvdXAgdGhhdCBwdXNoaW5nIHRoaW5ncyByaWdodCBub3cgYXJlIGNvbm5lY3RlZCB0byBoaW0sIHNldmVyYWwgc3RhcnRlZCB3aXRoIGhpcyBydW4gbGFzdCB0aW1lLiBIZSBwcmFjdGljYWxseSBpbiBjaGFyZ2Ugb2YgcG9saWN5IHJpZ2h0IG5vdy4gClJlYWxseSBsaWtlIG11c2ljIHRoYXQgcm91Z2ggYXJvdW5kIHRoZSBlZGdlcy4gSSBkb24gY2FyZSBpZiB0aGVyZSBhIGJhZCBub3RlIGhlcmUgb3IgdGhlcmUgb3IgaWYgYSBndXkgb3V0IG9mIHR1bmUuIEkgYWN0dWFsbHkgZ3Jhdml0YXRlIHRvd2FyZCB0aGF0IG1vcmUgdGhhbiB0aGUgcHJldHR5LCBwZXJmZWN0LCBwcmlzdGluZSBzdHVmZi4gV2hlbiB5b3UgZ2V0IGludG8gdGhlIHN0dWRpbyB5b3Vyc2VsZiwgaXQgaGFyZCB0byByZW1lbWJlciB0aGF0LCBiZWNhdXNlIHlvdSB3YW5uYSBmaXggZXZlcnl0aGluZy4gQnV0IEkgd2VudCBvdXQgb2YgbXkgd2F5IHRvIGtlZXAgdGhhdCBpbiBtaW5kLiBTbyB0aGVyZSB0aGUgb2RkIHJvdWdoIGVkZ2UsIG9yIHBhcnRzIHdlIGNvdWxkIGhhdmUgcGxheWVkIGEgbGl0dGxlIGJpdCBiZXR0ZXIuIEJ1dCB0byB0aGUgYmVuZWZpdCBvZiB0aGUgb3ZlcmFsbCB2aWJlLCB3ZSBsZWZ0IGl0IGFsbCBpbi4gbmVlZHMgbG92ZSBzb25ncz8KU2hlIGtlcHQgY2FsbGluZyBvdXQgdG8gaGltLiBTaGUgaGFkIHRvIGJlIHJlbW92ZWQgZnJvbSB0aGUgcm9vbS4gVGhleSBoYWQgYmVlbiBtYXJyaWVkIDUyIHllYXJzLiAKVGhlcmUgaXMgYSBMT1Qgb2YgQlVMTFNISVQgaW4gdGhlIGdheSBUYW50cmEgV29ybGQgYW5kIGEgbG90IG9mIGZ1Y2tlZCB1cCBndXlzIHRlYWNoaW5nIGFuZCBicmluZ2luZyB0aGVpciBvd24gJ3N0dWZmJyB3aXRoIHRoZW0gd2hpY2ggc2FkbHkgaW4gdW5pbnZpdGVkLiAKQWxzbywgcG9rZXIgaXMgb25lIGdhbWUgd2hlcmUgdGhlIHBsYXlpbmcgZmllbGQgaXMgbWFya2VkIGVxdWFsIHRoYW5rcyB0byB0aGUgc3VycHJpc2luZyBuYXR1cmUgb2YgdGhpcy4gQW4gZXhwZXJpZW5jZWQgcGxheWVyIGNhbiBmYWxsIHZpY3RpbSB0byBhbiBhbWF0ZXVyIGNhcmQgcGxheWVyIHdobyBqdXN0IGdldHMgbHVja3kgd2l0aCBoaXMgd2lubmluZyBoYW5kLiBUaGUgd2hvbGUgb3V0Y29tZSBvZiB0aGUgZ2FtZSBpcyBhYnNvbHV0ZWx5IHVuZXhwZWN0ZWQgYW5kIHRoZXJlZm9yZSB1bHRpbWF0ZWx5IHlvdSBqdXN0IHBsYXkgZm9yIHRoZSBzaGVlciBwbGVhc3VyZSBhdHRhY2hlZCB0byBpdCBhbmQgbm90IGp1c3QgZm9yIHRoZSB3aW4uLiAKWW91IGxlZ2l0aW1hdGVseSBtaWdodCBub3QgYWN0dWFsbHkgY2FyZSBhbGwgdGhhdCBtdWNoIGFib3V0IGEgdmlydHVhbCBzdHJhbmdlciBtZW50YWwgaGVhbHRoPykuIApNYXJpbG91IERhbmxleSB3YXMgaWRlbnRpZmllZCBhcyBQYWRkb2NrJ3MgY29tcGFuaW9uIG9yIHJvb21tYXRlLCBMYXMgVmVnYXMgTWV0cm9wb2xpdGFuIFBvbGljZSBTaGVyaWZmIEpvc2VwaCBMb21iYXJkbyBzYWlkLiBQYWRkb2NrIGhhZCBiZWVuIHVzaW5nIHNvbWUgb2YgaGVyIGlkZW50aWZpY2F0aW9uLCBMb21iYXJkbyBzYWlkLgpQbGF5ZXJzIGhhdmUgc3R1Y2sgdG9nZXRoZXIuIFRoZXkgbG92ZSBoaW0gYW5kIGhlIGEgZ29vZCBjYXB0YWluLiBXaGF0ZXZlciBoYXBwZW5zLCB3ZSBhbHdheXMgc2F5LCBpdCB0aGVyZS4gCkEgdGhlcm1vc3RhdCBib3R0bGUgY29udGFpbnMgb2YgMjUwZyBvZiBjb2ZmZWUgYXQgOTBDIHRvIHRoaXMgaXMgYWRkZWQgMjBnIG9mIG1pbGsgYXQgNUMgQWZ0ZXIgZXF1aWxpYnJpdW0gaXMgZXN0YWJsaXNoZWQgd2hhdCBpcyB0aGUgdGVtcGVyYXR1cmUgb2YgdGhlIGxpcXVpZD8KQWx3YXlzIHRyeSB0byBtYWtlIHRoZSBkZWNpc2lvbiB0aGF0IHdpbGwgZ2V0IHlvdSB0aGUgbW9zdCBtb25leS4uIApKYXBhbiBoYXMgYSBoaWdoIHBlcmNlcHRpb24gc2NvcmUgY29uc2lzdGVudGx5IHllYXIgYWZ0ZXIgeWVhciwgeWV0IHdlIGtub3cgdGhhdCBzb21laG93IHRoZSBKYXBhbmVzZSBwZW9wbGUgZGVsdXNpb25hbGx5IHRoaW5rIHRoZWlyIGdvdmVybm1lbnQgaXMgY2xlYW4uIApGb3IgZXhhbXBsZSwgSSB3YXMgcmVjZW50bHkgcmVhZGluZyBob3cgQnJhZCBQaXR0IHdhcyBraW5kYSBpbiBhIG1lc3MgZHVlIHRvIHRoZSBob3VzZXMgaGlzIGNvbXBhbnkgYnVpbHQgYWZ0ZXIgS2F0cmluYS4gVGhlbiBJIHdhcyByZXdhdGNoaW5nIChiaW5naW5nKSAzMFJvY2sgYW5kIEkgc2F3IHdoZW4gTmFuY3kgaHVzYmFuZCwgTWFyaywgbW92ZXMgb3V0IHRvIE5ldyBPcmxlYW5zIGFuZCB0aGUgcmVhc29uIGhlIGdpdmVzIGlzIFBpdHQgYW5kIFNoYXJvbiBTdG9uZSBkaWQgYSBjcmFwIGpvYiByZWJ1aWxkaW5nIHRob3NlIEthdHJpbmEgaG9tZXMsIGFuZCBoZSB0aGlua3MgdGhhdCBoZSBjYW4gbWFrZSBhIGZvcnR1bmUgZG93biB0aGVyZS4gSXQgbGlrZSBvbmUgb2YgdGhvc2UgYXdlc29tZSBtb21lbnRzLiAKVGhlc2UgZmxhdm91cnMgaW5jbHVkZSBzYWx0IGFuZCB2aW5lZ2FyICwgY2hlZXNlIChtb3N0IGxpa2VseSBiYXNlZCBvbiBSdW1pIGNoZWVzZSBhbmQgdGhlIG1vc3QgcG9wdWxhciBmbGF2b3VyKSwgc2Vhc29uZWQgY2hlZXNlLCB0b21hdG8gLCBrZWJhYiBvbiBjaGFyY29hbCAsIGFuZCBjaGlsaSBhbmQgbGVtb24gLiBMYXkncywgd2l0aCBpdHMgb3JpZ2luYWwgYnJhbmQsIGlzIGFsc28gcHJvZHVjZWQgYnkgdGhlIFNhdWRpIFNuYWNrIEZvb2RzIENvbXBhbnkgaW4gU2F1ZGkgQXJhYmlhICwgYW5kIGlzIGV4cG9ydGVkIHRvIHRoZSBvdGhlciBHQ0MgY291bnRyaWVzIC4gCkkgZG9uIHJlYWxseSB3YW50IHRvIGJlIGluIHRoaXMgcG9zaXRpb24uIEkgbG92ZSBteSBjb3VzaW47IEkganVzdCBkb24gYWdyZWUgd2l0aCBzb21lIG9mIHRoZSB0aGluZ3Mgc2hlIGRvZXMgaW4gaGVyIG1hcnJpYWdlLgpBbnRvbmlhZGkgYW5ub3VuY2VkIHRoYXQgdGhlc2UgInNwZWN1bGF0aW9ucyIgb2YgbGlmZSBhbmQgY2FuYWxzIG9uIE1hcnMgImhhdmUgZmFpbGVkIHRvIGRvIHRoZSB1dG1vc3Qgd2l0aCB0aGVpciBjaGVyaXNoZWQgaWRlYSIsIGFuZCB0aGF0IG9uIHRoZSBmYWNlIG9mIGl0IGluIG9yZGVyIHRvIGFjY29tbW9kYXRlIG9uZSBkaWZmaWN1bHQgYXNwZWN0IGRpc2FncmVlaW5nIHdpdGggdGhlaXIgdGhlb3JpZXMgdGhlIGFwcGVhcmFuY2UgYW5kIGRpc2FwcGVhcmFuY2Ugb2YgY2FuYWxzIHRoYXQgInRoZSBNYXJ0aWFuIGVuZ2luZWVycyB3b3VsZCBiZSBjb25zdGFudGx5IGRpZ2dpbmcgYW5kIGRlc3Ryb3lpbmcgdGhlaXIgd2F0ZXJjb3Vyc2VzIi4KVGhlIHdpdG5lc3MgdG9sZCBwb2xpY2UgdGhhdCB0aGUgY29uZnJvbnRhdGlvbiBiZWdhbiBhdCBhIHBva2VyIHRhYmxlIHdoZXJlIHRoZSB0d28gbWVuIHRyYWRlZCBpbnN1bHRzLCBhbmQgQmFpbGV5IGxhdGVyIGZvbGxvd2VkIHRoZSBtYW4gb3V0IG9mIHRoZSBidWlsZGluZy4KRHZsYzk2ICA4IHBvaW50cyAgc3VibWl0dGVkIDI0IGRheXMgYWdvCkRlYyAyNSwgMjAxNCAuIApCdXQgeW91IGp1c3Qgd2FudCBhIGZ1Y2tpbmcgYXJndW1lbnQuIFdoYXQgaXMgeW91ciBpc3N1ZT8gRmZzLiAKU28gd2hhdCB3ZSBoYXZlIGhlcmUgaXMgWnVsZmlxYXIgTWlyemEsIG90aGVyd2lzZSBhIHBvbGl0aWNhbCBub24gZW50aXR5LCBiZWNvbWUgYSBuYXRpb25hbCBmaWd1cmUgYmFzZWQgb24gaGlzIHNwZWNpZmljIHRhcmdldGluZyBvZiBhbiBldGhuaWMgZ3JvdXAgYW5kIHRoZSBsYXJnZXN0IHJlcHJlc2VudGF0aXZlIHBvbGl0aWNhbCBwYXJ0eSBmb3IgdGhhdCBncm91cC4gV2hhdCB0aGUgcHVuY2hsaW5lPyBUaGUgbW9yZSB0aGF0IE1vaGFqaXJzIGFyZSBkZW1vbmlzZWQgaW4gdGhlIHJlc3Qgb2YgdGhlIGNvdW50cnksIHRoZSBjbG9zZXIgdGhlIGVtYnJhY2UgYmV0d2VlbiB0aGVtIGFuZCB0aGUgTVFNIGJlY29tZXMuIEFmdGVyIGFsbCwgd2hvIGVsc2Ugd2lsbCBtaWRkbGUgIGFuZCBsb3dlciBtaWRkbGUgY2xhc3MgVXJkdSBzcGVha2luZyBLYXJhY2hpaXRlcyB0dXJuIHRvPyBUaGUgYXJteSB0aGF0IGNvbmR1Y3RlZCBvcGVyYXRpb24gQ2xlYW4gdXA/IFRoZSBJbXJhbiBLaGFuIHRoYXQgdW5kZXJtaW5lZCBKYXZlZCBNaWFuZGFkPyBUaGUgUFBQIG9mIFB1a2thIFFpbGE/IFRoZSBNdW5hd3dhciBIYXNzYW4gdGhhdCBjYW4gb3BlcmF0ZSB3aXRob3V0IHRoZSBibGVzc2luZ3Mgb2YgdGhlIEpVST8gQXMgc29tZW9uZSBmYW1vdXNseSBvbmNlIHNhaWQsCkxvdmUgdGhlIGFuYWxvZ2llcyB0byBkaWZmZXJlbnQgZ2FtYmxpbmcgZ2FtZXMuIFlvdSdyZSByaWdodCBhYm91dCBwb2tlciAgIHR3byB2ZXJ5IGRpZmZlcmVudCB0eXBlcyBvZiBwbGF5ZXJzLiBUaG9zZSB3aG8gd2FpdCBwYXRpZW50bHkgZm9yIHRoZSByaWdodCBoYW5kIHRvIGNvbWUgYWxvbmcsIGFuZCB0aG9zZSB3aG8gbGlrZSB0byBwbGF5IGV2ZXJ5IGhhbmQgdG8gc2VlIGlmIHRoZXkgY2FuIG1ha2Ugc29tZXRoaW5nIGhhcHBlbi4gCkkgc2VlbiBwb3N0IGFmdGVyIHBvc3Qgb2YgcGVvcGxlcyAiZ3JpbGxlZCBjaGVlc2VzIiBhbGwgb3ZlciByZWRkaXQgYW5kIGl0IGJlZW4gZHJpdmluZyBtZSBpbnNhbmUuIFRoZSBtb21lbnQgaSBzYXcgdGhpcyBzdWJyZWRkaXQgdGhpcyBtb3JuaW5nIEkgZmluYWxseSBzbmFwcGVkLiBIZWxsLCBJIG1heSBldmVuIHN0YXJ0IG15IG93biBzdWJyZWRkaXQganVzdCBiZWNhdXNlIEkga25vdyB0aGlzIG9uZSBleGlzdHMgbm93Li4gClZlcnkgdHJ1ZSEgSXQncyBub3QgZXZlbiBzb21ldGhpbmcgdGhhdCdzIHVuaXF1ZSB0byB3ZWVicy4gVGhlcmUncyBubyBwcm9ibGVtIHdpdGggbGlraW5nIGFuaW1lL21hbmdhL2V0Yy4sIHRoZSBwcm9ibGVtIGlzIGJlaW5nIHNvIGNvbnN1bWVkIGJ5IHlvdXIgaG9iYnkgKHBhcnRpY3VsYXJseSBpZiBpdCdzIHRoZSBwYXNzaXZlIGNvbnN1bXB0aW9uIG9mIG1lZGlhKSB0aGF0IHlvdSBjYW4ndCBmb3JtIG5vcm1hbCByZWxhdGlvbnNoaXBzIHdpdGggb3RoZXIgcGVvcGxlLgpIb3cgbXVjaCBtb3JlICJpbnRlcmFjdGl2ZSIgY2FuIHlvdSBnZXQgdGhhbiBiZXR0aW5nIG9uIHNwb3J0cz8gTm8gb2ZmZW5zZSBpbnRlbmRlZCwgYnV0IGEgbG90IG9mIHRob3NlIHRoYXQgYXJlIGhlYXZpbHkgaW50byBzcG9ydHMgYmV0dGluZyBsaXZlLCBicmVhdGhlLCBhbmQgYmxlZWQgc3BvcnRzIHN0YXRzIGFuZCBmaWd1cmVzISBUaGVpciBlbnRpcmUgbGl2ZXMgcHJhY3RpY2FsbHkgcmV2b2x2ZSBhcm91bmQgb2RkcywgcmFua3MsIHJlc3VsdHMsIGFuZCBvdXRjb21lcyEuIApXb3cuIEJpZyBEZWFsLiBTbyBpdCBvbmx5IGNvc3QgbWUgJDIzMC4gCkkgYW0gbm90IHN1cmUgYW5kIEkgY291bGQgYmUgd3JvbmcgYnV0IGl0IGNvdWxkIGJlIGRvd24gdG8gaG93IGludGVybmFsbHkgdGhlIG1lc3NhZ2UgbG9vcCBpcyBoYW5kbGVkIGJ5IHRoZSBwcm9ncmFtLiBUaGVyZSBhIG1lc3NhZ2UgbG9vcCBpbiB0aGUgc29tZSB3aW5kb3dzIHByb2dyYW1taW5nIHdoZXJlIGl0IHJlY2VpdmVzIFVJIHJlbGF0ZWQgYW5kIG90aGVyIG1lc3NhZ2VzIChzb21lIHdpbmRvd3MgZGVmaW5lZCwgc29tZSBjdXN0b20pLiBJZiB5b3UgY2xpY2sgd2hpbGUgaXQgZG9pbmcgc29tZXRoaW5nIGluIHRoZSBtZXNzYWdlIGxvb3AgdGhyZWFkLCB0aGVzZSBtZXNzYWdlcyBhcmUgcHJvY2Vzc2VkIHN5bmNocm9ub3VzbHkgbWVhbmluZyB0aGUgbWVzc2FnZSBsb29wIHRocmVhZCB3aWxsIG5vdCBnZXQgdG8gdGhlIGNsaWNrIG1lc3NhZ2UgcHJvY2Vzc2luZyB1bnRpbCBpdCBkb25lIHByb2Nlc3NpbmcgdGhlIGxhc3QgbWVzc2FnZS4uIApMYWR5IGdhZ2EgaGF2ZSBob3cgbWFueSBmYW5zCllvdXIgYnJhaW4gdHJpZXMgaXRzIGhhcmRlc3QgdG8gdHJ5IHRvIHRyaWNrIHlvdSBpbnRvIHRoYXQgc3dlZXQgc3dlZXQgZW5kb3JwaGluIHJlbGVhc2UuRWRpdDogYW55b25lIHdobyBkZWFscyB3aXRoIHRoaXMgbGlrZSBJIGRvIGlzIHdlbGNvbWUgdG8gUE0gbWUgZm9yIHN1cHBvcnQgb3IganVzdCB0byB0YWxrIG9yIHZlbnQgb3IgY2hhdC4gClBoZW5vbWVuYWw6IEZhbnMgd2F0Y2hpbmcgdGhlIHNob3cgdG9vayB0byBUd2l0dGVyIHRvIHNoYXJlIHRoZWlyIGRlbGlnaHQgYXMgdGhleSB3ZXJlIGJsb3duIGF3YXkgYnkgaGVyIGFydGlzdHJ5LCBzdGFnZSBwcm9wcyBhbmQgZXh0cmF2YWdhbnQgY29zdHVtZXMKRGlkIHlvdSBtaXNzIHRoZSBwYXJ0IEkgbm90IHRlbGxpbmcgeW91IFNQRUNJRklDQUxMWT8gSSBhbnN3ZXJlZCB5b3VyIHF1ZXN0aW9uIGFib3V0IHNoaXQgdGhhdCB3b3VsZCBiZSBhZmZlY3RlZC4gU3RvcCBtb3ZpbmcgdGhlIGdvYWxwb3N0cy4gSSBhbSBPTi4gClRoZSBnYW1lIG9mIE9tYWhhIEhvbGQnRW0gaXMgdmVyeSBzdHJhaWdodGZvcndhcmQgYW5kIEkgYW0gc3VyZSB0aGF0IG5vbmUgb2YgeW91IHdpbGwgaGF2ZSBhIHByb2JsZW0gdW5kZXJzdGFuZGluZyBpdHMgcnVsZXMgYW5kIHRoZSB3YXkgaXQgaXMgcGxheWVkLiBQYXlpbmcgaXQgaXMgYSBzaW1wbGUgdGFzaywgcGxheWluZyBpdCB3ZWxsIGlzIGFub3RoZXIgbWF0dGVyLiBKdXN0IGxpa2UgYW55IHBva2VyIHZhcmlhdGlvbiwgdGhlIHJ1bGVzIGFyZSBlYXN5IHRvIHVuZGVyc3RhbmQsIGJ1dCBwbGF5aW5nIHRoZSBnYW1lIHByb2Zlc3Npb25hbGx5IHdpbGwgcmVxdWlyZSB5b3UgdG8gcHV0IGluIHNvbWUgdGltZSBhbmQgd29yayBvbiB5b3VyIHBva2VyIHNraWxscy4gTm90aGluZyBpcyBmcmVlLCBidXQgb25jZSB5b3Ugd2lsbCBiZWNvbWUgYSBza2lsbGVkIHBva2VyIHBsYXllciB5b3Ugd2lsbCBiZSBhYmxlIHRvIHBsYXkgdGhlIGdhbWUgcHJvZmljaWVudGx5IGFuZCBtYWtlIGEgbmljZSBwcm9maXQuCkl0IHdhcyBmbHlpbmcgc3RyYWlnaHQgdG93YXJkcyBoaW07IHRoZSBndXR0dXJhbCBjcnksIGxpa2UgdGhlIGV2ZW4gdGVhcmluZyBvZiBzb21lIHN0cm9uZyBzdHVmZiwgc291bmRlZCBjbG9zZSB0byBoaXMgZWFyOyB0aGUgbG9uZyBiZWFrIGFuZCBuZWNrIG9mIHRoZSBiaXJkIGNvdWxkIGJlIHNlZW4sIGFuZCBhdCB0aGUgdmVyeSBpbnN0YW50IHdoZW4gTGV2aW4gd2FzIHRha2luZyBhaW0sIGJlaGluZCB0aGUgYnVzaCB3aGVyZSBPYmxvbnNreSBzdG9vZCwgdGhlcmUgd2FzIGEgZmxhc2ggb2YgcmVkIGxpZ2h0bmluZzogdGhlIGJpcmQgZHJvcHBlZCBsaWtlIGFuIGFycm93LCBhbmQgZGFydGVkIHVwd2FyZHMgYWdhaW4uIApCYXNpYyBzd2ltbWluZyBza2lsbHMgYXJlIHJlcXVpcmVkIGZvciBhbGwgTUFDIGFjdGl2aXRpZXMuCk15IGJ1ZGR5IE1hdHQgb25jZSBnb3QgaW50byBhIDUwIGhvdXIgbG9uZyBoZWFkcyB1cCAob25lIG9uIG9uZSkgbWF0Y2ggd2l0aCBhbm90aGVyIHByby4gV2VsbCwgdGhlIG90aGVyIGd1eSB0b29rIE1hdHQgZm9yIG92ZXIgJDcwLDAwMCwgYXQgd2hpY2ggcG9pbnQgTWF0dCBkZWNpZGVkIHRvIHRha2UgYSBicmVhayBmcm9tIHBva2VyIGZvciBhIGZldyBtb250aHMuIApEYSBzaWVodCBtYW4gZGFzcyBlcyBzaWNoIGF1c3phaGx0IHdlbm4gbWFuIFNvbGlkYXJpdHQgdW5kIFppdmlsY291cnRhZ2UgemVpZ3QuIEFsbGVpbmUgc2luZCB3aXIgc2Nod2FjaCwgZ2VtZWluc2FtIHNpbmQgd2lyIG1laHJlciEgeml2aWxjb3VydGFnZSBhbGxlaW5lc2luZHdpcnNjaHdhY2ggb3R0b2hhZnRpZ2tlaXRhYnNjaGFmZmVuLiAKV2UgaGlyZWQgVG9yb250byBSYXB0b3IgRGFubnkgR3JlZW4gdG8gY29uZHVjdCBhIG1lZXQgYW5kIGdyZWV0IHdpdGggZmFucyBhbmQgZHJpdmUgYXdhcmVuZXNzIGZvciB0aGUgYWN0aXZhdGlvbi4gQXMgYSByZXN1bHQsIGV4cGVjdGVkIHR1cm5vdXQgcXVhZHJ1cGxlZCBhbmQgd2Ugc2VjdXJlZCBuZWFybHkgaGFsZiBhIG1pbGxpb24gaW1wcmVzc2lvbnMsIHBsdXMgaXQgZ2FpbmVkIHRvcCB0aWVyIGNvdmVyYWdlIG9uIENhbmFkaWFuIHNwb3J0cyBuZXR3b3JrIFRTTiBvbmxpbmUuIAogMiBwb2ludHMgIHN1Ym1pdHRlZCAxIHllYXIgYWdvQWxjb2hvbCBoYXMgYSBmYWlyIG51bWJlciBvZiBjYWxvcmllcyAgIGEgYm90dGxlIG9mIHdpbmUsIGZvciBpbnN0YW5jZSwgaGFzIGFyb3VuZCA2MDAuIFdlaWdodCBsb3NzIG9mIGEgcG91bmQgcGVyIHdlZWsgaXMgYSA1MDBjYWwvZGF5IGRlZmljaXQ7IGlmIHlvdXIgd2VpZ2h0IHdhcyBzdGFibGUgd2l0aCB0aGF0LCBhbmQgeW91IGRvbiBhZGQgYW55IG90aGVyIGNhbG9yaWVzIChyZXBsYWNpbmcgYWxjb2hvbCB3aXRoIG5vbiBkaWV0IHNvZGEsIGVhdGluZyBzaWduaWZpY2FudGx5IG1vcmUsIGV0YyksIHRoYXQgd291bGQgYmUgYXJvdW5kIGEgcG91bmQgcGVyIHdlZWssIGlmIHlvdSB3ZXJlIGRyaW5raW5nIGEgYm90dGxlIHBlciBkYXkhQWxjb2hvbCBjYW4geW91IHRvIHJldGFpbiBtb3JlIHdhdGVyLCBzbyBpZiB5b3Ugc3RheSBwcm9wZXJseSBoeWRyYXRlZCAoc2VlbXMgY29udHJhZGljdG9yeSwgcmlnaHQ/KSwgeW91IHNob3VsZCBzaGVkIHNvbWUgd2F0ZXIgd2VpZ2h0IChhbmQgaGF2ZSB0YXV0ZXIsIGxlc3MgcHVmZnkgc2tpbikuVGhhdCBzYWlkLCBleGVyY2lzZSBpcyB1c3VhbGx5IGdvb2QsIGFuZCBJIGZpbmQgaXQgdG8gYmUgYSBnb29kIGRpc3RyYWN0aW9uIGZyb20gYWxjb2hvbCBjcmF2aW5ncyAgIGFmdGVyIEkgcHVzaCBteXNlbGYgb24gYW4gYWZ0ZXIgd29yayBydW4sIGFsY29ob2wgZmVlbHMgYSBsb3QgbGVzcyBhcHBlYWxpbmcsIGFuZCB3YXRlciBhIGxvdCBtb3JlISBFeGVyY2lzZSBzd2VhdCBmZWVscyBkaWZmZXJlbnQgdGhhbiBhbGNvaG9sIHN3ZWF0IHRvIG1lLCBpbiBhIGdvb2Qgd2F5LkF0IHRoZSB0aW1lLCB0aGV5IGp1c3QgY29udmVydGVkIGZyb20gYmVpbmcgbG93IGluY29tZSBob3VzaW5nIHRvIGJlaW5nIG5vcm1hbCBhcGFydG1lbnRzLiAKQ2FzaW5vcyBoYXZlIHZhcnlpbmcgcnVsZXMgb24gaW5zdXJhbmNlLCBzcGxpdHRpbmcsIGFuZCBkb3VibGluZyBkb3duIHdoZW4gaXQgY29tZXMgdG8gaG93IGFuZCB3aGVuIHlvdSBjYW4gZG8gaXQuIFlvdXIgZGVhbGVyIHdpbGwgc3VyZWx5IGxldCB5b3Uga25vdyBpdCBpZiBjb21lcyB0byB0aGlzLiBGb3IgZXhhbXBsZSwgc29tZSBjYXNpbm9zIHdvbid0IGxldCB5b3Ugc3BsaXQgYSB0aGlyZCBBY2U7IGZvciBzdXJyZW5kZXJpbmcsIHNvbWUgYWJpZGUgYnkgZWFybHkgb3IgbGF0ZSBzdXJyZW5kZXIgb25seS5bMV0uIApWYWRlbWVjdW0gQ2hpbmEgdm9tIEh1ZWJlciBWZXJsYWcgKEVpbiBSZXR0ZXIgaW4gZGVyIE5vdCBmIENoaW5hcmVpc2VuZGUgb2huZSBTcHJhY2hrZW5udG5pc3NlLiBWaWVsZSB2b3JnZXNjaHJpZWJlbmUgUyBhdWYgQ2hpbmVzaXNjaCwgZGllIG1hbiBhbHMgVG91cmlzdCBzbyBicmF1Y2h0LCB3aWUgenVtIEJlaXNwaWVsIGlzdCBkZXIgVmVydHJldGVyIGRlcyBDaGluZXNpc2NoZW4gSW50ZXJuYXRpb25hbGVuIFJlaXNlc2VydmljZT8gaXN0IGRpZSBBYnRlaWx1bmcgZiBaYWhsaGVpbGt1bmRlPyAoZmFsbHMgYXVjaCBTaWUgc2ljaCBJaHJlIFogaW4gQ2hpbmEgcmljaHRlbiBsYXNzZW4gd29sbGVuKSwgYnJpbmdlbiBTaWUgbWlyIEJvaG5lbnBhc3RlIG1pdCBnZWhhY2t0ZW0gU2Nod2VpbmVmbGVpc2NoIGluIHNjaGFyZmVyIFNhdWNlIChhdWYgY2hpbmVzaXNjaCB2aWVsIGsgbSBwIGQgZnUhKS4gCldhcyBhc3Npc3RhbnQgbWFuYWdlciBvZiB0aGVpciBkaXN0cmlidXRpb24gd2FyZWhvdXNlIHdoZXJlIEkgYmVnYW4gdG8gdW5kZXJzdGFuZCB0aGUgaW5zIGFuZCBvdXRzIG9mIHByb2R1Y3QsIG1vdmluZyBpdCBhbmQgaXRzIHJlYWwgdmFsdWUuIApQZW9wbGUgd2F0Y2hlZCBpdCBhbmQgZ290IGludGVyZXN0ZWQuIApUaGF0J3Mgd2hhdCBtYWtlcyB0aGVpciBwcm9kdWN0cyBwb3B1bGFyIGF0IHRoZSBzYW1lIHRpbWUuIFBva2VyIGxvdmVycyBhbHdheXMgd2FudCBzb21lIGJyYW5kcyB0byB3b3JrIHdpdGguIApTZWNvbmQgbW92ZTogU2VsbCBib3RoIHVucHJvZml0YWJsZSByZW50YWwgcHJvcGVydGllcy4gCkF0aG5lcyBzJ2VzdCBkaiBtaXMgYXUgdmVydCBhdmVjIHNlcyBqYXJkaW5zIHJlZnVnZXMgaW1wbGFudHMgc3VyIGRlcyB0ZXJyYWlucyBlbiBmcmljaGUgZHUgcXVhcnRpZXIgZCdFeGFyY2hpYS4gQSBTZWF0dGxlLCB1biBjb2xsZWN0aWYgdmllbnQgZGUgZmFpcmUgbCdhY3F1aXNpdGlvbiBkJ3VuIHRlcnJhaW4gZGUgdHJvaXMgaGVjdGFyZXMgcG91ciBsZSB0cmFuc2Zvcm1lciBlbiBmb3J0IGNvbWVzdGlibGUgbyBwb3Vzc2Vyb250IGZydWl0cyBldCBsZ3VtZXMuIApOb3QgZXZlbiByZW1vdGVseSB0cnVlLiAKSW4gc29tZSBjb3VudHJpZXMsIGluIEFzaWEgZm9yIGV4YW1wbGUsIGdhbWJsaW5nIG9mIGFueSBraW5kLCBvbmxpbmUgb3Igbm90LCBpcyBpbGxlZ2FsLiAKTG9laGxpbiAoMjAwMCkgcmVpdGVyYXRlcyB0aGUgY29uZm91bmRpbmcgcHJvYmxlbXMgb2YgdGhlIHN0dWR5IGFuZCBub3RlcyB0aGF0IGJvdGggZ2VuZXRpYyBhbmQgZW52aXJvbm1lbnRhbCBpbnRlcnByZXRhdGlvbnMgYXJlIHBvc3NpYmxlLiBIZSBmdXJ0aGVyIG9mZmVycyBhbm90aGVyIHBvc3NpYmxlIGV4cGxhbmF0aW9uIG9mIHRoZSByZXN1bHRzLCBuYW1lbHkgdW5lcXVhbCBwcmVuYXRhbCBmYWN0b3JzOiAiW09dbmUgcG9zc2liaWxpdHkgbGllcyBpbiB0aGUgcHJlbmF0YWwgZW52aXJvbm1lbnQgcHJvdmlkZWQgYnkgQmxhY2sgYW5kIFdoaXRlIGJpb2xvZ2ljYWwgbW90aGVycy4KSXRzIGF0IHRoaXMgdGltZSB0aGF0IHlvdSBtaWdodCBmaW5kIHlvdXJzZWxmIHN3YW1wZWQgd2l0aCBpbmRlY2lzaW9uIGFuZCB0aGUgdXJnZW50IGRlc2lyZSB0byByZWZlciB1cCB5b3VyIGhhbmRib29rIG9uIHRoZSBiZXN0IHBva2VyIGhhbmRzLiAKS2luZGEgcmVtaW5kcyBtZSBvZiB3aGF0IG15IG1vdGhlciBhbmQgbXkgYXVudCBkaWQgYWZ0ZXIgbXkgZ3JhbmRwYXJlbnRzIGhhZCB0byBtb3ZlIHRvIGEgbnVyc2luZyBob21lLiBBZnRlciB0aGV5IGhhZCBtb3ZlZCwgbXkgbW9tIGFuZCBhdW50IHdlbnQgdGhyb3VnaCB0aGUgaG91c2UgYW5kIHN0dWNrIHBvc3QgaXRzIHdpdGggdGhlaXIgbmFtZXMgb24gZXZlcnl0aGluZyB0aGV5IHNhaWQgdGhleSB3YW50ZWQuIFRoaXMgd2FzIGJhc2ljYWxseSB0aGVpciB3YXkgb2YgY29waW5nIHRob3VnaCwgdGhleSB3ZXJlbid0IHNlcmlvdXMuIApLdWx0dXJzY2hvY2sgQ2hpbmEgb2huZSBnZWh0IG5pY2h0CkkgbG92ZSBteSBmcmllbmRzLCBhbSBjbG9zZSB0byBteSBmYW1pbHksIG5vdCBhdCBhbGwgcmVsaWdpb3VzIChhbHRob3VnaCBhIGJpdCBwaGlsb3NvcGhpY2FsKS4gTXkgbXVzaWMgdGFzdGUgaXMgLiAKIldpciBmcmV1ZW4gdW5zIHNlaHIgYXVmIGRpZSBGbHVtbWkgT3Blbi4gRGFzcyBKYW4gdW5kIEx1a2FzIGlocmUgSWRlZSBtaXQgZGVuIFJvY2tldCBCZWFucyB1bXNldHplbiB3b2xsZW4sIG1hY2h0IHVucyBuYXR1cmxpY2ggc3RvbHoiLCBzbyBBbmphIFJsZXIsIENyZWF0aXZlIERpcmVjdG9yIHZvbiBSb2NrZXQgQmVhbnMgVFYuICJJY2ggaG9mZmUsIGRhc3MgZGllc2VzIEV2ZW50IGFuIGRlbiBFcmZvbGcgdW5kIGRlbiBTcGEgdm9uIHVuc2VyZXIgRWlzbGF1ZiBSZXZ1ZSBvbiBJY2UgYW5rbnVwZmVuIGthbm4uIiBNYXJjZWwgQmVydHJhbSwgU2VuaW9yIENvbnN1bHRhbnQgQ29udGVudCBMaWNlbnNpbmcgdm9uIFRoZSBTdG9yeSBMYWIsIGVyZ256dDogIldhcyBkaWVzZXMgUHJvamVrdCBzbyBiZXNvbmRlcnMgbWFjaHQsIGlzdCBkaWUgZ3JvZSBMZWlkZW5zY2hhZnQgYWxsZXIgQmV0ZWlsaWd0ZW4gdm9uIFNla3VuZGUgZWlucyBhbi4gClJlYWQgbW9yZTogV29sbG9uZ29uZyBEZWxpdmVyb28gcmlkZXJzIHBheSB0aGUgcHJpY2UgZm9yIGRlbGl2ZXJ5Ck9oLCBhbmQgYXMgZm9yIHRob3NlICJoYXBweSBlbmRpbmdzLCIgQ29uZG9uIHNhaWQ6ICJUaGVyYXBldXRpYyBtYXNzYWdlIGlzIG5vdCBhc3NvY2lhdGVkIHdpdGggYW55IHNvcnQgb2YgYnVzaW5lc3Mgd2hpY2ggaW52b2x2ZXMgc2V4dWFsIHNlcnZpY2VzLCBhbmQgc2hvdWxkIG5vdCBiZSBjb25mdXNlZCB3aXRoIHN1Y2guIFNleHVhbCBzZXJ2aWNlcyBnbyBvbiBldmVyeXdoZXJlLCBzbyBJIGFtIHN1cmUgQm91bGRlciBpcyBub3QgZXhjbHVkZWQuIgpUaGF0IHNhaWQgdGhlcmUgaXMgYWxzbyBhIGxvdCBvZiBzY2VuYXJpb3Mgd2hlcmUgeW91IGNhbiBiZXQgaGFsZiBwb3QgYXMgcHJvdGVjdGlvbiBiZXRzLyB2YWx1ZSBiZXRzL2NoZWFwIGJsdWZmcy4gRXZlbiBvbiBzb21lIHdldCBib2FyZHMgc29tZXRpbWVzIHlvdSByYXRoZXIgYmV0IGhhbGYgcG90IGlmIHlvdSBjcnVzaCB0aGUgYm9hcmQgYW5kIHJ1bm91dHMgYW5kIHdhbnQgdG8ga2VlcCBkb21pbmF0ZWQgaGFuZHMgaW4gdGhhdCB3b3VsZCBvdGhlcndpc2UgZm9sZCwgbGlrZSBvbiAzYmV0IHBvdHMuIEEgbG90IG9mIHRpbWVzIHlvdSBlbmQgdXAgc3BsaXR0aW5nIHlvdXIgcmFuZ2UgYmV0d2VlbiBoYWxmIHBvdCBhbmQgZnVsbCBwb3QuLiAKTGV0IG1lIGJyaWVmbHkgZXhwbGFpbiB3aGF0IGl0IGlzLiBMZXQgdXMgaGF2ZSBhIGxvb2sgYXQgdGhlIGV4YW1wbGUuIApQcmVmbG9wIGFuZCBmbG9wIHBsYXkgYXJlIGZpbmUsIHR1cm4gaXMga2luZCBvZiBhd2t3YXJkIHdpdGggc3RhY2sgc2l6ZXMgKDE0IHBvdCB3aXRoIDIxIGxlZnQpLCBidXQgSSB0aGluayBhIGJldCBpcyBzdGlsbCBmaW5lIGhlcmUgYXMgaGUgaGFzIEpKIGEgbG90IG9mIHRoZSB0aW1lIGhlcmUuIEkgZG9uIG1pbmQgYSB0dXJuIENSIGVpdGhlciB3aXRoIGhpbSBmZWVsaW5nIHByaWNlZCBpbiB0byBjYWxsIEpKL2NvbWJvIGRyYXdzLiBSaXZlciBpcyBhbiBlYXN5IGNoZWNrL2ZvbGQsIHR1cm5pbmcgeW91ciBoYW5kIGludG8gYSBibHVmZiBoZXJlIG1ha2VzIG5vIHNlbnNlIG9uIHRoaXMgcml2ZXIuLiAKU29tZWhvdyBJIHdhcyBzaG9ja2VkIHRvIGZpbmQgb3V0IHRoYXQgb3VyIHBvbGl0aWNpYW5zIGFyZSBzdGlsbCBkZWJhdGluZyB3aGV0aGVyIGdsb2JhbCB3YXJtaW5nIGlzIHJlYWwuLiAKSG93ZXZlciwgSSBoYWQgcmVzcG9uc2liaWxpdGllcyBhbmQgYSBzY2hlZHVsZSBhbmQgcmVhbGl0eSBpbnRydWRlZC4gClNvbWUgb2YgdGhlbSBoYXZlIGJlZW4gdGhlcmUgYmVmb3JlIHdlIHdlcmUgYm9ybi4gU28gSSBrbm93IG1hbnkgb2YgdGhlbSB3ZXJlIGZpZ2h0aW5nIGZvciBwZW9wbGUgdG8gYmUgZnJlZSwgZm9yIHBlb3BsZSB0byBsaXZlIGluIGRpZ25pdHkgaW4gU291dGggQWZyaWNhLiAKVGhlIEF2ZXJhZ2UgUGF5IGZvciBhIFJlc3BpcmF0b3J5IFRoZXJhcGlzdCBXaXRoIGFuIE5QUyBMaWNlbnNlQWxzbyBWaWV3ZWQgTWFrZSBhIFN0YW5kIFVwIEpvYiBFYXNpZXIgb24gWW91ciBMZWdzIGFuZCBGZWV0IExpY2Vuc2UgUmVxdWlyZWQgZm9yIGEgTWFzc2FnZSBUaGVyYXBpc3QgaW4gdGhlIFN0YXRlIG9mIE1hcnlsYW5kIEF0dGFjaCBhIENvdmVyIExldHRlciBUaGluZ3MgdG8gU3R1ZHkgdG8gQmVjb21lIGEgQ2VydGlmaWVkIEFyYm9yaXN0IENoaXJvcHJhY3RvciBWcy4gCldvb2R5IEFsbGVuJ3MgaW50ZWxsZWN0dWFsIHJvbWFuY2UgaXMgYSBtdXN0IHNlZSBmb3IgRW5nbGlzaCBtYWpvcnMgYW5kIGFueSBmYW4gb2YgdGhlIGFydHMgYW5kIGxpdGVyYXR1cmUuIApUaGUgc2Vjb25kIGZsb29yIEtlbm5lbCBDbHViIGlzIGluIG11Y2ggYmV0dGVyIHNoYXBlLCB3aXRoIFRWIHNjcmVlbnMgcG9zaXRpb25lZCBpbiB0aGUgcGF5aW5nIHNlYXRzIGZvciByYWNlIHJlcGxheXMsIGEgYmFyLCB0aGUgQm91cmJvbiBTdHJlZXQgU3RlYWtob3VzZSBHcmlsbCBhbmQgYSBzbWFsbCBiZXR0aW5nIGFyZWEgc2V0IGFzaWRlIGZvciBub24gc21va2Vycy4gCk9mIGNvdXJzZSBJIGNhbid0IHNheSBmb3Igc3VyZSB3aGF0IG15IGV4cGVyaWVuY2Ugd291bGQgaGF2ZSBiZWVuLCBoYWQgbXkgb25seSBmb3JlaWduIGxhbmd1YWdlIGJlZW4gR2VybWFuLCBzaW5jZSBJIGhhZCBhbHJlYWR5IHN0YXJ0ZWQgbGVhcm5pbmcgYm90aCBFbmdsaXNoIGFuZCBEYW5pc2ggd2hlbiBJIHN0YXJ0ZWQgbGVhcm5pbmcgR2VybWFuLiAKRCBDYXJiIEJhbGFuY2UgaXMgYSBwZWxsZXQsIGFzIHlvdSBrbm93LCBhbmQgcGVyaGFwcyB0aGF0IGNvdWxkIGhhdmUgY29udHJpYnV0ZWQgdG93YXJkIHRoZSBwcm9ibGVtLiBTb21lIGhvcnNlcyB0ZW5kIHRvIGNob2tlIG9uIHBlbGxldGVkIGZlZWRzLiBUaGVyZWZvcmUsIHRoZXJlIGFyZSB0d28gdGhpbmdzIHRoYXQgY2FuIGhlbHAgd2l0aCB0aGlzLiBGaXJzdCwgbG93ZXIgdGhlIGZlZWQgYm93bCB0byBubyBtb3JlIHRoYW4gMiBmZWV0IGFib3ZlIHRoZSBncm91bmQuIEhvcnNlcyBkbyBiZXN0IGVhdGluZyBsb3cgdG8gdGhlIGdyb3VuZC4gWW91IGNhbiBhY3R1YWxseSBmZWVsIHRoZSBtdXNjbGUga25vdHRlZCAoYWJvdXQgdGhlIHNpemUgb2YgYSB0ZW5uaXMgYmFsbCkuIEkndmUgaGFkIGhpbSBleGFtaW5lZCBieSB0d28gZGlmZmVyZW50IHZldHMgMyBzZXBhcmF0ZSB0aW1lcy4gSGUgaGFzIGhhZCBibG9vZCB0ZXN0cyB0YWtlbiB0byBkZXRlcm1pbmUgaWYgdGhlcmUgYXJlIGFueSBtdXNjbGUgcHJvYmxlbXMgYW5kIGhlIHdhcyBhbHNvIEROQSB0ZXN0ZWQgZm9yIFBTU00uIEFsbCBjYW1lIGJhY2sgbmVnYXRpdmUuClBheW1lbnQsIFByaWNpbmcsIGFuZCBSZWxhdGVkIFRlcm1zLiAKT2YgY291cnNlIHRoZXJlIGlzIGZhdWx0IG9uIGhpbSwgYnV0IGZpcmluZyBoaW0gbm93IGlzIG5vdCBnb2luZyB0byBzb2x2ZSBhbnkgcHJvYmxlbXMuLiAKQmllbiBxdWUgc29uIGVudHJlIGVuIHZpZ3VldXIgZGF0ZSAyNCBvY3RvYnJlIDE5NDUsIG9uIHByZW5kIGNvbW1lIGRhdGUgZGUgY3JhdGlvbiBsZSAyNiBqdWluIDE5NDU6IGRhdGUgYW5uaXZlcnNhaXJlLiAKWW91IGRvbid0IHlvdSBjYW4ndCB5b3Ugc2hvdWxkbid0IEFuZCB0aGF0IHNhaWQuIEluIHRoZSBvbGQgZGF5cywgdGhlcmUgd2VyZSBtYW55IHdheXMgb2YgY2hlYXRpbmcgYXQgY2FyZHMsIGluY2x1ZGluZyBmaXhlZCBkZWNrcywgY29sZCBkZWNrcywgc2hpbmVycywgc3RyaXBwZXJzLCBtZWNoYW5pY2FsIGRldmljZXMgYW5kIGEgdmFyaWV0eSBvZiBkZWFsaW5nIGFuZCBzbGlnaHQgb2YgaGFuZCB0cmlja3MuIApFdmVyeW9uZSBnZXRzIHB1bGxlZCBvdmVyIGV2ZW50dWFsbHkgaW4gQW1lcmljYS4gCkFsbCByaWdodCwgSSBoYXZlIHRvIGludGVycnVwdCBmb3IganVzdCBhIG1vbWVudCB0byByZW1pbmQgeW91IHRoYXQgVGhhbmtzZ2l2aW5nIGlzIGFsbW9zdCBoZXJlLiBXaGljaCBtZWFucyBCbGFjayBGcmlkYXkgYW5kIEN5YmVyIE1vbmRheSBhcmUgYWxzbyBhbG1vc3QgaGVyZSBhbmQgd2UgYXJlIGdvaW5nIGJpZyB0aGlzIHllYXIuIFVwIHRvIDc1JSBvZmYgdGhlIEJpZ2dlclBvY2tldHMgYm9vayBzdG9yZS4gClV0YWgncyBzb2xlIGxvc3MgdG8gZGF0ZSB3YXMgYSB0aHJlZSBwb2ludCBsb3NzIHRvIGEgaGlnaGx5IHJhbmtlZCBTYW4gRGllZ28gU3RhdGUgc3F1YWQuIEl0IHdhcyBvbmx5IHRoZSBzZWNvbmQgcmVhbCBnYW1lIG9mIHRoZSBzZWFzb24sIHdpdGggdHdvIG9mIHRoZSBSdW5uaW4nIFV0ZXMnIHN0YXJ0ZXJzIGJlaW5nIG5ld2NvbWVycyAgIEpDIHRyYW5zZmVyIENocmlzIFJleWVzIChhIHNvcGhvbW9yZSB3aG8gcGxheWVkIGF0IENpdHJ1cyBDb2xsZWdlIGxhc3QgeWVhcikgYW5kIHRydWUgZnJlc2htYW4gSmFrb2IgUG9lbHRsIChhIHRydWUgZGlhbW9uZCBpbiB0aGUgcm91Z2ggb3V0IG9mIFZpZW5uYSwgQXVzdHJpYSkuIFR3byBhZGRpdGlvbmFsIHRydWUgZnJlc2htZW4gICBCcmVra290dCBDaGFwbWFuICh0aGUgdG9wIGxvY2FsIHByb3NwZWN0IGZyb20gUm95KSBhbmQgSXNhaWFoIFdyaWdodCAobGFzdCB5ZWFyJ3MgSWRhaG8gR2F0b3JhZGUgUGxheWVyIG9mIHRoZSBZZWFyIGZyb20gQm9pc2UpICAgYWxzbyBzYXcgc2lnbmlmaWNhbnQgdGltZSBpbiB0aGUgZ2FtZS4gUmVkc2hpcnQgZnJlc2htYW4gS3lsZSBLdXptYSAoYSBmb3VyIHN0YXIgcmVjcnVpdCBmcm9tIEZsaW50LCBNaWNoLikgYWxzbyBzYXcgdGltZSBpbiB0aGF0IGdhbWUuCk1ub2ggeiBub3ZjaCBkZXRla3Rvcm92IG5hIHRyaHUgbWFqIHZuaW1vbiB0ZWNobm9sZ2llLCBrdG9yIHVtb3VqZSBkaXNrcmltaW5vdmEgYSBvYnMgb2JqZWt0eSBha28gZmxpYSwgbW9zYWR6ZSBhIGhyZHphdiBrbGluY2UuIApTaGUgd2FzIGEgYml0Y2ggYW5kIHNoZSBoYWQgaXQgY29taW5nLiBTaGUgY2FtZSB0byB0aGUgbG9jYWwgaGlnaCBzY2hvb2wgYW5kIGhhZCB0byB0cmFuc2ZlciBiZWNhdXNlIG9mIGhlciBidWxseWluZyByZXB1dGF0aW9uIG5vdCBhbGxvd2luZyBoZXIgdG8gbWFrZSBhbnkgZnJpZW5kcy5UTDtEUjogR2lybCBidWxsaWVkIG1lIGZvciAzIHllYXJzLCBwdXQgdXAgd2l0aCBpdCBiZWNhdXNlIHNoZSB3YXMgYSBnaXJsLiBLbm9ja2VkIGhlciB0aGUgZnVjayBvdXQgd2hlbiBJIGJ1cnN0LkFzaWFucyBhcmUgc28gZWFzeSB0byB0ZWxsIGZvciBtZS4gCkt1cnp1bTogRGllIE1hZmlhIGhhdCBzZWl0IDEyIEphaHJlbiBmcmVpZSBIYW5kLCBkZXIgU3RhYXQgc2NoYXV0IHdvaGx3b2xsZW5kIHp1LCB3ZWlsIHNpZSBkZW4gQXVzZmFsbCBlaW5lciBHZWxkcXVlbGxlIGZyY2h0ZW4uCkVkaXQvY2xhcmlmeTogVGFraW5nIHBlb3BsZSB3aG8gY2FsbGVkIGZvciBkZXN0cm95aW5nIG9yIHRha2luZyBwb3dlciBhd2F5IGZyb20gZ292ZXJubWVudCBkZXB0cyAoRVBBLCBFZHUsIEhVRCwgRW5lcmd5LCBldGMuKSBhbmQgcHV0IHRoZW0gaW4gY2hhcmdlIG9mIHRob3NlIGRlcGFydG1lbnRzLiBQYXJ0aXNhbiBzZW5hdGUgcnVsZXMuIFVzaW5nIERPSiBwb2xpY3kgdG8gY292ZXIgdXAgY3JpbWVzLiBIYW5kaWNhcHBpbmcgdGhlIEZFQy4gVGhlIGxpc3QgaXMgbG9uZy4KSW4gbW9zdCBvZiB0aGUgY2FzaW5vIHRvdXJuYW1lbnRzIHRoZXJlIGlzIGEgbm90IHJlZ2lzdHJhdGlvbiBmZWUgYW5kIHRoZSBlbnRyeSBmb3IgdGhlIHRvdXJuYW1lbnQgaXMgdG90YWxseSBmcmVlLiAKU2hvdWxkIHRlbGwgdGhlIEN6ZWNoIFJlcHVibGljIGFuZCB0aG9zZSBsaWtlIHRoZW0sIHRvIHRha2UgYSBoaWtlIGluIHRoZSBDYXJwYXRoaWFucy4gR29kLCBhbmQgdGhlIFVuaXRlZCBTdGF0ZXMsIHNob3VsZCBvbmx5IGhlbHAgdGhvc2Ugd2hvIGhlbHAgdGhlbXNlbHZlcy4gTmljayBHcmVhbHksIE5vIEhvdCBBaXIsIE1hcmNoIDlPbmUgc2lsdmVyIGxpbmluZyBzbGl2ZXIgb2YgYSBsaW5pbmcgdGhlIFJ1c3NpYW4gaW52YXNpb24gb2YgQ3JpbWVhIGlzIHRoYXQgaXQgbWF5IGF3YWtlbiBXZXN0ZXJuIEV1cm9wZSBmcm9tIGl0cyBzdHJhdGVnaWMgc2x1bWJlcnMuIApMYXN0IHllYXIsIENocmlzIFByYXR0IGZhY2VkIGEgbWFqb3IgYmFja2xhc2ggZm9yIGNvbW1lbnRzIGhlIG1hZGUgYWJvdXQgaHVudGluZy4gCkknbSBsb29raW5nIGZvcndhcmQgdG8gc3F1YW5kZXJpbmcgdGhlIHJlc3Qgb2YgbXkgdHdlbnRpZXMgKDIzIG5vdykgdW5hYmxlIHRvIGZ1bmN0aW9uIG9yIGZpbmQgYW55IHJlbGllZiBiZWNhdXNlIHBlb3BsZSBsaWtlIG1lIGRvbid0IG5vcm1hbGx5IGxpdmUgaW50byBhZHVsdGhvb2Qgc28gdGhlcmUgYXJlIG5vIGFkdWx0IHNwZWNpYWxpc3RzIGZvciBteSBjb25kaXRpb24gdG8gYmUgZm91bmQuIApJIGxvb2tlZCBhZnRlciBhIHBhdGllbnQgd2hvIHJlcXVpcmVkIHJlY3VycmVudCBhc2NpdGljIGRyYWlucyBhbmQgSSBiZWNhbWUgaW5jcmVhc2luZ2x5IGF3YXJlIG9mIHRoZSBwaHlzaWNhbCwgcHN5Y2hvbG9naWNhbCwgYW5kIGVtb3Rpb25hbCBpbXBhY3Qgb2YgdGhpcyBwcm9jZXNzLiBGb2xsb3dpbmcgTklDRSBhcHByb3ZhbCBvZiBsb25nIHRlcm0gZHJhaW5zLCBJIHdhcyBrZWVuIHRvIHNldCB1cCBhIHNlcnZpY2UgdG8gcHJldmVudCBwYXRpZW50cyBnb2luZyB0aHJvdWdoIHRoaXMgYXdmdWwgZXhwZXJpZW5jZSByZXBlYXRlZGx5LCBkZXNjcmliZWQgYnkgb25lIHBhdGllbnQgYXMgYSAicmVjdXJyZW50IGdhdW50bGV0LiIgVGhlIG9wcG9ydHVuaXR5IHRvIHVuZGVydGFrZSBhIHF1YWxpdHkgaW1wcm92ZW1lbnQgcHJvamVjdCBzZWVtZWQgaWRlYWwsIHNvIGEgY29yZSBtZWRpY2FsIHRyYWluZWUgY29sbGVhZ3VlIGFuZCBJIGRldmVsb3BlZCBhIHByb3Bvc2FsLiBUaGUgcHJvamVjdCB3YXMgc3VwcG9ydGVkIGJ5IGEgY29vcmRpbmF0b3Igd2hvIGxpbmtlZCB1cyB0byBhbiBhcHByb3ByaWF0ZSBzdXBlcnZpc29yLCBleHBsYWluZWQgdGhlIHF1YWxpdHkgaW1wcm92ZW1lbnQgZnJhbWV3b3JrIGFuZCBwcm9qZWN0IHN0cnVjdHVyZSwgYW5kIGNvbW11bmljYXRlZCByZWd1bGFybHkgd2l0aCB1cyB0byBkZWxpdmVyIG9uZ29pbmcgc3VwcG9ydC4gClRvZGF5LCB0aGUgaG9vcGxhIGlzbiB0aGVyZSwgYnV0IEphbnVhcnkgYW5kIEZlYnJ1YXJ5IGFyZSBzdGlsbCB0aGUgYnVzaWVzdCBtb250aHMgZm9yIGludmVzdG1lbnQgZmlybXMuIFJSU1AgYW5kIFRGU0EgY29udHJpYnV0aW9ucyBhcmUgYSBwYXJ0IG9mIHRoYXQsIGJ1dCBpdCBhbHNvIGEgdGltZSB3aGVuIGludmVzdG9ycyBzaXQgZG93biBhbmQgZXZhbHVhdGUgdGhlaXIgcG9ydGZvbGlvcy4gCkFuZCBhIGRvemVuIHdlYXBvbnMgYW5kIHdlaXJkIG1hZ2ljIGNvbXBvbmVudHMsIGl0IHdhcyBqdXN0IHRvbyBiaWcgZm9yIGl0cyBvd24gZ29vZC4gSXQgY3J1bWJsZWQgdW5kZXIgaXRzIG93biB3ZWlnaHQsIGV2ZW50dWFsbHkgc29tZSB2ZXJzaW9uIG9mIGl0IGdvdCByZWxlYXNlZCBidXQgdGhleSBzY3JhcHBlZCBtb3N0IG9mIGl0LiBJIHJlbWVtYmVyIHNlZWluZyBhIGNvcHkgb2YgaXQgaW4gc3RvcmVzIGFuZCB0aGlua2luZyBpdCB3YXMga2luZCBvZiBzYWQuIApMYWR5IEdhR2EpLCBCaWcgR2lybE5vdyAoZmVhdC4gTGFkeSBHYUdhKSwgQ2hpbGxpbiAoZmVhdC4gCjEgcG9pbnQgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ29FdmVyeSBhY2hhcnlhLCB3aGVuIHRoZXkgYXBwZWFyIGluIHRoaXMgd29ybGQsIHByZWFjaCB0aGUgbWVzc2FnZSBhY2NvcmRpbmcgdG8gdGhlIHRpbWUgYW5kIGNpcmN1bXN0YW5jZSBhbmQgdW5kZXJzdGFuZGluZyBvZiB0aGUgcGVvcGxlLiAKU2V1bGVtZW50IHZvaWwsIG9uIGVzdCBhdSBjaW5tYSwgbGUgdmlldXggTmljayBlc3QgIGxhIGJhcnJlIGRlIGNlIGZpbG0gZGUgY29tbWFuZGUsIGV0IG9uIHBldXQgY29tcHRlciBzdXIgbHVpIHBvdXIgYnJvdWlsbGVyIGxlcyBjYXJ0ZXMuIApUaGUgcmVhbCByZWFzb24gaGUgc2hvdWxkbid0IGhhdmUgYmVlbiB0cnVzdGVkIGlzIGJlY2F1c2UgaGUnZCBiZWVuIHNob3duIHRvIGV4aGliaXQgcG9vciBjaG9pY2VzIGluIHRoZSBwYXN0IChsaWtlIGJlaW5nIGF0dHJhY3RlZCB0byBzdGFydGluZyBmaXJlcy4pIE15IGh1c2JhbmQgYW5kIHNpc3RlciBhcmUgYm90aCBhdXRpc3RpYyBhZHVsdHMgYW5kIGFyZSB0d28gb2YgdGhlIHBlb3BsZSBJIHRydXN0IG1vc3Qgd2l0aCBteSBjaGlsZHJlbi4gClRoZXkgbm90IGFzIGJhZCBhcyBudWNsZWFyIHdhciAoaW4gdGhlIHNob3J0L21lZGl1bSB0ZXJtIGF0IGxlYXN0KSwgYnV0IHRoZXkgYXJlIGRlZmluaXRlbHkgY29taW5nIGluIG91ciBsaWZldGltZXMuIApJIGFjdHVhbGx5IGp1c3QgbW92ZWQgdXAgdG8gMi81IGEgZmV3IHdlZWtzIGFnbywgYmVjYXVzZSBJIGxpa2UgdG8gYnV5IGluIGZvciB0aGUgbWF4IGFuZCwgYXMgeW91IGtub3csIGJvdGggdGhlIDEvMyBhbmQgMi81IHBsYXkgbXVjaCBkZWVwZXIgdGhhbiBtb3N0IGNhc2lub3MsIHNvIEkgZGlkbid0IHF1aXRlIGhhdmUgdGhlIHJvbGwgdGlsbCByZWNlbnRseS4gCkhvbmVzdGx5LCB0aHJlYXRlbmluZyB0byB3YWxrIG91dCBsaWtlIDQgdGltZXMgdG9vayBhIGZldyBob3VycywgYnV0IHNhdmVkIG1lIGxpa2UgJDRrIG9uIGEgbmV3IFRveW90YSBSYXY0IGZyb20gdGhlIGxpc3QgcHJpY2UuLiAKIkkgYW0gY29uY2VybmVkIGFib3V0IFBhaHJ1bXAgYmVjYXVzZSBvZiB0aGUgd2F5IGl0J3MgZ3Jvd2luZywiIHNhaWQgR2VvcmdlIEZsaW50LCBsb2JieWlzdCBmb3IgdGhlIE5ldmFkYSBCcm90aGVsIEFzc29jaWF0aW9uLiAiQXMgTmV2YWRhIGdldHMgYmlnZ2VyLCBtb3JlIGFuZCBtb3JlIHBlb3BsZSB3aWxsIHN1Z2dlc3QgdGhhdCB0aGUgYnJvdGhlbHMgc2hvdWxkIGdvIGF3YXkuClRob3NlIHdobyBzdXJ2aXZlZCB0aGUgdHJlbmNoZXMgb2YgdGhlIFdlc3Rlcm4gRnJvbnQgYmVsaWV2ZWQgY2l2aWxpemF0aW9uIGNvdWxkIG5ldmVyIGFnYWluIHNpbmsgc28gbG93LiAKVGhlIG9waW5pb25zIGNvbnRpbnVlIHdpdGggc29tZSByZWZlcmVuY2luZyB0aGUgd29yZCBwb2tlciBjYW1lIGZyb20gYW4gdW5kZXJ3b3JsZCBzbGFuZyB3b3JkICJwb2tlIiBhIHRlcm0gdXNlZCBmb3IgcGlja3BvY2tldHMgYW5kICJob2N1cyBwb2N1cyIgdGhlIHRlcm0gcG9wdWxhcmlzZWQgYnkgbWFnaWNpYW5zLiAKJ0dydWJieScgSm9obiBIb3BvYXRlIGdpdmVzIE5STCB0aGUgZmluZ2VyICAgYWdhaW4gJ0kgd2lsbCBrbm9jayB5b3Ugb3V0JzogR2FsbGVuIHJhbnRzIGF0IEhvcG9hdGUKRm9yIGV4YW1wbGUsIHRoZSBkb3dubG9hZCBvZiB0aGUgd2hvbGUgb3IgbWF0ZXJpYWwgcGFydHMgb2YgYW55IHdvcmsgb3IgZGF0YWJhc2UgaXMgcHJvaGliaXRlZC4gCldlIGJlZW4gZWF0aW5nIGEgbG90IG9mIHNvdXBzL3N0ZXdzLCB0b28uIFRoZXkgZ3JlYXQgYmVjYXVzZSBJIGNhbiB0aHJvdyBldmVyeXRoaW5nIGluIHRoZSBwb3QgYW5kIGJhc2ljYWxseSBiZSBkb25lIHdpdGggaXQsIHNvIEkgZG9uIG5lZWQgYSBsb3Qgb2YgZW5lcmd5IGZvciBzZXJpb3VzIGNvb2tpbmcsIGJ1dCB0aGV5IGRlbGljaW91cyBhbmQgZ29vZCBmb3IgbWUuCklmIHlvdSBub3QgZ29pbmcgdG8gYW55IG90aGVyIGNhc3RsZSwgSSBoaWdobHkgcmVjb21tZW5kIG5vdCBza2lwcGluZyBPc2FrYSBjYXN0bGUuIFllcywgaXQgaXMgYSByZWNvbnN0cnVjdGlvbiBhbmQgdGhlIGludGVyaW9yIGlzIGEgbXVzZXVtLCBidXQgdGhlIG91dHNpZGUgYW5kIGdyb3VuZHMgYXJlIHZlcnkgaW1wcmVzc2l2ZSBkZXNwaXRlIGl0IGJlaW5nIGEgcmVjb25zdHJ1Y3Rpb24uICJDb25jcmV0ZSByZWNvbnN0cnVjdGlvbiIgbWFrZXMgaXQgc291bmQgbGlrZSBpdCBsb29rcyBiYWQsIGJ1dCB0aGF0IGlzIGRlZmluaXRlbHkgbm90IHRoZSBjYXNlLiBJdCB3YXMganVzdCBtYWRlIHdpdGhvdXQgdXNpbmcgdGhlIHRyYWRpdGlvbmFsIG1hdGVyaWFscy90ZWNobmlxdWVzIGZvciB0aGUgYnVpbGRpbmcgc3RydWN0dXJlLiBUaGUgbXVzZXVtIGlzIGZhaXJseSB3ZWxsIGRvbmUsIHRvby4gSXQgbm90IGZhciBmcm9tIG90aGVyIHNpdGVzIGluIE9zYWthIHNvIGl0IGRvZXNuIHRha2UgdXAgdGhhdCBtdWNoIHRpbWUuClNvIGhlcmUgSSBhbSBhdCB0aGUgMjAwNCBXb3JsZCBTZXJpZXMgb2YgUG9rZXIuIEJpbmlvbidzIEhvcnNlc2hvZSBoYXMgYmVlbiB0YWtlbiBvdmVyIGJ5IG5ldyBvd25lcnMuIGF0IGxvbmcgbGFzdC4gVGhhdCBpcyBub3QgdGhlIG1vc3Qgb2J2aW91cyBjaGFuZ2UgdGhhdCBncmVldGVkIG1lIHRob3VnaC4gQW1lcmljYSBoYXMgZ29uZSBQb2tlciBtYWQsIG1hZCwgbWFkLiBBbiBhc3RvbmlzaGluZyAzNDMgaGF2ZSBqdXN0IHBhaWQgYW4gYW1hemluZyAkMjUsMDAwIHRvIHBsYXkgdGhlIG1haW4gZXZlbnQgYXQgdGhlIEJlbGxhZ2lvLiBBbmQgeWVzdGVyZGF5IEkgd2Fsa2VkIGludG8gQmluaW9ucyBzYXRlbGxpdGUgYXJlYSBhbmQgY291bGRuJ3QgYmVsaWV2ZSBteSBleWVzLiBMYXN0IHllYXIgdGhlcmUgd291bGQgaGF2ZSBiZWVuIG1heWJlIDMgb3IgNCB0YWJsZXMgcnVubmluZy4gVGhpcyB5ZWFyIHRoZXJlIHdlcmUgMjMgb3IgMjQgdGFibGVzIGJ1enppbmcgd2l0aCBleGNpdGVtZW50LiBIb3JkZXMgYW5kIGhvcmRlcyBvZiBuZXcgcGxheWVycy4gR29kIGJsZXNzIEFtZXJpY2EsIGdvZCBibGVzcyB0aGUgV1BUIG9uIHRoZSBkaXNjb3ZlcnkgY2hhbm5lbCwgYW5kIGdvZCBibGVzcyBDaHJpcyBNb25leW1ha2VyLiBUaGlzIGlzIFBva2VyIGhlYXZlbiAhCkludGVyZXN0aW5nOyBJIGd1ZXNzIHdlIGhhdmUgZGlmZmVyZW50IHVuZGVyc3RhbmRpbmcgb2Ygd2hhdCBtYWtlcyBhIGNvdW50cnkgV2VzdGVybiA9IGNvdW50cmllcyB0aGluayB5b3Ugc2hvdWxkIGRvIHNvbWUgcmVhZGluZyBvbiB3b3JsZCAgIFdpa2lwZWRpYSAoYW5kIHRoZSBlY29ub21pYyBkZWZpbml0aW9uIG9mIHdvcmxkIG1lLCBpdCBub3QgYWJvdXQgdGhlIG5hbWVzLCBvciByZWZ1c2FsIHRvIHRlYWNoIGEgbGFuZ3VhZ2UgKGJzPyBFdmVyeW9uZSBrbm93cyBUYWdhbG9nOyBub3QgZXZlcnlvbmUga25vd3MgRW5nbGlzaCBpbiBQaGlscykuIEJ1dCBpdCBtb3JlIGFib3V0IHdlYWx0aCAodGhleSBhcmUgd2VhbHRoeSksIGJ1dCBBTFNPIGh1bWFuIHJpZ2h0cywgZGVtb2NyYXRpYyB2YWx1ZXMsIGRlbW9jcmF0aWMgZ292ZXJubWVudCwgYW5kIGFsbGllZCB0byBXZXN0IHRoZXNlIGFyZSBhbGwgY29tbW9uIHZhbHVlcy4gU28sIGNvdW50cmllcyBsaWtlIEphcGFuLCBTb3V0aCBLb3JlYSwgSXNyYWVsIGNhbiBiZSBjb25zaWRlcmVkIGlmIHlvdSBtYWRlIGl0IHRvIHRoZSBPRUNEIChha2EgcmljaCBjb3VudHJpZXMgLyBnb29kIGxpdmluZyBjbHViKSwgeW91IGNhbiBhcmd1YWJseSBiZSBjb25zaWRlcmVkICAgc2VlIFdpa2lwZWRpYSBhZ2Fpbi4uIApUaGlzIGlzIHRoZSBwZXJmZWN0IHNoYXBlIG9mIGEgY292ZXIgZnVubmVsLiBUaGVyZSBhcmUgb3BlbiBhcmVhcyBhbGwgYXJvdW5kLCBidXQgdGhlIGNvdmVyIGFyZWEgbmVja3MgZG93biBhbmQgZ2V0cyBuYXJyb3cgYXQgc29tZSBwb2ludC4gVGhpcyBpcyBnb2luZyB0byBiZSBhIHByaW1lIHNwb3QgdG8gaHVudCBvciBwdXQgdXAgYSB0cmVlIHN0YW5kLiAKV2hhdCBhcmUgeW91IHNlbGxpbmc/IENvbWZvcnQuIFRoZSBwcm9zcGVjdCBuZWVkcyB0byBiZSBjb21mb3J0YWJsZSB0aGF0IHlvdSBjYW4gc29sdmUgaGlzIHByb2JsZW1zLCBoYXZlIGNyZWRpYmlsaXR5LCBoYXZlIHRoZSBzdHJlbmd0aCB0byBjYXJyeSBvdXQgdGhlIGRlYWwgYW5kIGtub3cgd2hhdCB5b3UgYXJlIGRvaW5nLiAKQnV0IHRoaXMgd2FzIHRoZSBtaWRkbGUgb2YgYSB3ZWVrZGF5IG1vcm5pbmcsIHdoaWNoIHByb2JhYmx5IGlzbid0IHRoZSBiZW5jaGVzJyBwZWFrIHVzYWdlIHRpbWUuIAo=|<---