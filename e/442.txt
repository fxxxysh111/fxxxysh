--->|RGlhYmxvIElJIHdhcyBhIGxlZ2VuZGFyeSBnYW1lLCBpdCBzdGlsbCBpcyBhIGxlZ2VuZGFyeSBnYW1lIHRoYXQgc2VlcyBzb21lIGhhcmRjb3JlIEFSUEdlcnMgc3RpY2sgd2l0aCBpdC4gUGVvcGxlIHdlcmUgaG9wZWZ1bCB0aGF0IEJsaXp6YXJkIGNvdWxkIG1pbWljIHRoZSBzdWNjZXNzIG9mIEQyLi4gCkkgd2FzIHRoYXQga2lkLiBNeSBkYWQgd2FzIHRoZSBEaXNuZXlsYW5kIGRhZC4gCkVsaW1pbmF0aW9uIHRvdXJuYW1lbnQ6IHRoaXMgaXMgdGhlIG1vc3QgcG9wdWxhciB0eXBlIG9mIHRvdXJuYW1lbnRzIGFzIGl0IGluY2x1ZGVzIGEgbG90IG9mIGFjdGlvbiBhbGwgdGhlIHRpbWUgYW5kIGl0IGFsd2F5cyBzdGFydHMgd2l0aCBhIHZlcnkgbGFyZ2UgbnVtYmVyIG9mIHBsYXllcnMuIEluIHRoZSBlbGltaW5hdGlvbiB0b3VybmFtZW50IHRoZSBwbGF5ZXJzIGFyZSBncm91cGVkIGFyb3VuZCBkaWZmZXJlbnQgdGFibGVzLiBPbmx5IG9uZSBwbGF5ZXIgaXMgdGhlIHdpbm5lciBpbiB0aGUgdG91cm5hbWVudC4gClRoaXMgaXMgd2h5IEkgZG9uJ3QgcmVhbGx5IGxpa2UgaG93IHN0YW5kYXJkIHJvdGF0aW9uIHdvcmtzLiBJdCB0aHJvd3MgdGhlIGJhYnkgb3V0IHdpdGggdGhlIGJhdGggd2F0ZXIuIFdlIGxvc2UgY29vbCBidXQgdW5wbGF5ZWQgY2FyZHMgYmVmb3JlIHRoZWlyIHRpbWUgYW5kIHRoZSBjYXJkcyB0aGF0IHdlcmUgY2FuY2VyIGluIHN0YW5kYXJkIG9mdGVuIHN0YXkgY2FuY2VyIGluIHdpbGQuClRoaXMgaXMgYW4gaW1wb3J0YW50IGFzc3VtcHRpb24gdG8gaGF2ZSBhcyB3ZWxsLiAKVGhleSBlc3RhYmxpc2hlZCBldmVyeXRoaW5nIHRoZSBwaG9uZSBjYWxsIGVzdGFibGlzaGVkIG9uIHRoZSBzdXJmYWNlLiAKSSBjYW4gdW5kZXJzdGFuZCBjb21wcm9taXNpbmcgdG8gbWFrZSBwZW9wbGUgbGl2ZXMgYmV0dGVyLCBidXQgQW15IEtsb2J1Y2hhciBpcyBsaXRlcmFsbHkgY29taW5nIHRvIHRoZSBuZWdvdGlhdGlvbiB0YWJsZSB3aXRoIGEgY29tcHJvbWlzZS4gCkkgc2F5IHRoaXMgb2Z0ZW4sIGJ1dCB5b3UgY2FuIG9ubHkgYmUgaW4gb25lIHJvb20gYXQgYSB0aW1lLiBBc3Nlc3Mgd2hhdCByb29tcyB5b3Ugc3BlbmQgdGltZSBpbiAobWFzdGVyIGJlZCwga2lkcyByb29tcywga2l0Y2hlbiwgbGl2aW5nIGFyZWEpIGFuZCBwaWNrIGEgcGxhY2Ugd2l0aCByb29tcyB0aGF0IHlvdSBlbmpveSBzcGVuZGluZyB0aW1lIGluICAgdGhvdWdoIG91ciBob3VzZSBpc24gaHVnZSwgdGhlIGxpdmluZy9kaW5pbmcgYW5kIGtpdGNoZW4gaGF2ZSBoaWdoIGNlaWxpbmdzIGFuZCBhcmUgcmVhbGx5IHNwYWNpb3VzIGFuZCB0aGUgaG91c2UgImZlZWxzIiBiaWcgdG8gdXMsIHlldCBpdCBlYXN5IHRvIG1haW50YWluLi4gCkluc3RlYWQsIHNoZSdkIGJlIGdpdmluZyBtZW4gbWFzc2FnZXMsIHNhaWQgaGVyIGVtcGxveWVyLCBFcm5lc3RvIFBpbmVkYSBTb2xpcy4gClRoZSBvbmx5IHJlYXNvbiB3ZSBrbmV3IGl0IHdhcyBkaW5nb2VzIHdhcyBiZWNhdXNlIG9mIGhvdyBhbGwgdGhlIGZvb2QgcGFja2FnZXMgaGFkIGJlZW4gcm91Z2hseSB0b3JuIG9wZW4sIGFuZCB0aGUgZmFjdCB0aGF0IG9uZSBvZiB0aGUgZGluZ29lcyB3YXMgc3RpbGwgbGluZ2VyaW5nIGFyb3VuZCB3aGlsZSB3ZSB3ZXJlIGhhdmluZyBicmVha2Zhc3QuIApTaGlmdCBieSB3aXJlIGlzIG9ubHkgdXNlZCB3aXRoIHR3aW4gY2x1dGNoIHNldCB1cHMsIHdoaWNoLCBhZ2FpbiwgdGhlIFN1YmFydSBpbiB0aGUgcGljIGRvZXNuIGhhdmUuIApKb25hdGhhbiBSb2JlcnQgU3R1YXJ0IHdhcyBib3JuIGluIFN0LiBMb3VpcywgTWlzc291cmksIEZlYi4gOCwgMTk1Ny4gSGUgZ3JhZHVhdGVkIGZyb20gaGlnaCBzY2hvb2wgaW4gUmljaGFyZHNvbiwgVGV4YXMsIGFuZCBhdHRlbmRlZCB0aGUgVW5pdmVyc2l0eSBvZiBUZXhhcyBpbiBBdXN0aW4uClRoZSBsZXZlbCBvZiByZXNlYXJjaCB0aGF0IHdvdWxkIGhhdmUgdG8gYmUgZG9uZSB0byBtYWtlIHN1cmUgaXRzIGFuIGFib3ZlIGJvYXJkIHNleCB3b3JrZXIgd291bGQgYmUgaW5zYW5lLCBhbmQgbmVhciBpbXBvc3NpYmxlIGZvciBzb21lb25lIHdobyBkb2VzbiBrbm93IGhvdyB0aGF0IHdob2xlIHdvcmxkIHdvcmtzLiAKWW91IGhhdmUgdG8gcHV0IGV2ZXJ5dGhpbmcgb24gdGhlIGxpbmUuIApIaSBEZWFuICAgQ29taW5nIGZyb20gYSBwZXJzb24gdGhhdCBoYXMgbmV2ZXIgbWV0IHlvdSBhbmQgbXVzdCBtYWtlIGEgZ3Vlc3N0aW1hdGUgYmFzZWQgb24gb25lIGVudHJ5IG9uIGFuIGludGVybmV0IGZvcnVtLCBJIHdvdWxkIHNheSB0aGF0IHlvdSBkb24ndCBoYXZlIHBhcnRpY3VsYXIgcGFzc2lvbiBmb3IgeW91ciBqb2Igb3IgdGhlIHByb2Nlc3Mgb2Ygd2hvbGVzYWxpbmcgICBzdXJlLCB5b3UgY2FuIHRvbGVyYXRlIGl0LCB5b3UncmUgZ29vZCBhdCBpdCwgeW91IGNvdWxkIGJlIG1vcmUgbW90aXZhdGVkIGluIHRha2luZyBwYXJ0IGluIGl0LCBidXQgeW91IGRvbid0IHJlYWxseSBsaXZlIGFuZCBicmVhdGggZm9yIHRoZSBwcm9jZXNzICAgd2hhdCB5b3UgbG92ZSBpcyB0aGUgY2hlY2tzIGF0IHRoZSBlbmQgb2YgdGhlIHJvYWQuIERvbid0IHF1aXQsIGp1c3QgcmVzdHJ1Y3R1cmUgeW91ciB0aW1lLiBXaGF0IHlvdSByZWFsbHkgd2FudCB0byBiZSBkb2luZyBpcyBjaGVja2luZyBvdXQgYSBtb3ZpZSwgcmVsYXhpbmcgb3IgcGxheWluZyB2aWRlbyBnYW1lcyAgIHRoYXQncyB3aGF0IGRlIHN0cmVzc2VzIHlvdS4gSXQgc291bmRzIGFzIGlmIHlvdSBub3cgZmVlbCBndWlsdHkgZm9yIHRha2luZyBwYXJ0IGluIHRoZXNlIHRoaW5ncy4gWW91IG5lZWQgdG8gbWFrZSByb29tIGZvciB0aGUgdGhpbmdzIHRoYXQgeW91IGVuam95LCBhbmQgbWFrZSB0aW1lIGZvciB5b3VyIHdob2xlc2FsaW5nIGdvYWxzIGFzIHdlbGwuIEV2ZXJ5IG90aGVyIGRheSwgdGFrZSB3aG9sZXNhbGluZyBjYWxscyAgIG1hcmtldCwgcmVzZWFyY2gsIGV0Yy4gVGhlIG90aGVyIGRheXMsIGdvIGhvbWUgYWZ0ZXIgd29yayBhbmQgcGxheSB2aWRlbyBnYW1lcywgY3JhY2sgYSBiZWVyIGFuZCBjaGlsbC4gWW91J2xsIGJ1cm4geW91cnNlbGYgb3V0IGlmIHlvdSB0cnkgdG8gYmUgYWxsIGJ1c2luZXNzIGFsbCB0aGUgdGltZS4gV2hvbGVzYWxpbmcgaXMgYSBidXNpbmVzcyBmb3IgeW91cnNlbGYgICB5b3UgZ2V0IG91dCBvZiBpdCB3aGF0IHlvdSBwdXQgaW4sIHRvIGEgZGVncmVlLiBQdXQgdGhlIGFtb3VudCBvZiBlZmZvcnQgaW4gdGhhdCB5b3UgZmVlbCBpcyBuZWNlc3NhcnkgdG8ga2VlcCB5b3VyIHNhbml0eSBhbmQgcHV0IG1vbmV5IGluIHlvdXIgcG9ja2V0LgpTdGlsbCwgc2NpZW50aXN0cyBoYXZlIGRldGVybWluZWQgdGhhdCBhZnRlciBhbiBob3VyIG9yIG1vcmUgb2Ygc2l0dGluZywgdGhlIHByb2R1Y3Rpb24gb2YgZW56eW1lcyB0aGF0IGJ1cm4gZmF0IGluIHRoZSBib2R5IGRlY2xpbmVzIGJ5IGFzIG11Y2ggYXMgOTAgcGVyY2VudC4KSWYgZ29pbmcgdG8gMyBiZXQgbGl2ZSBtYWtlIGl0ICQyMDAgdGhleSBoYXZlIHRvIGNhbGwgJDE3NSBpbnRvICQzMTIgcG90LCBidXQgYnV0dG9uIGlzIGdvaW5nIHRvIGdvIGFsbCBpbiB3aXRoIGEgbG90IG9mIGhhbmRzIHNvIEkgd29udCBkbyBpdCB0aGVyZS5JIGtub3cgdGhlcmUgYXJlIHBlb3BsZSB3aG8gbG92ZSAzIGJldHRpbmcgbGl2ZSBhIGxvdCwgYnV0IEkganVzdCB0aGluayB5b3UgZ2V0IG1vcmUgdmFsdWUgZG9pbmcgaXQgcmFyZWx5LlJvbm5pZSBpcyB0aGUgbW9zdCBvYnZpb3VzLiAKTm90IG9ubHkgZGlkIGl0IG5vdCB3b3JrIHNpbmNlIG1vc3QgY2hpbGRyZW4gYXJlIHN0aWxsIGFidXNlZCBieSBwZW9wbGUgdGhleSBrbm93IGFuZCB0aGlzIGlzc3VlIHdhc24gZXZlciByZWFsbHkgYWRkcmVzc2VkLiBCdXQgdGhlIG5ldCBzbyBiaWcgdGhhdCB0b28gbWFueSBwZW9wbGUgYXJlIGJlaW5nIG5hbWVkIHNleHVhbCBwcmVkYXRvcnMgYW5kIHRvbyBmZXcgYWN0dWFsIHNleCBjcmltaW5hbHMgYXJlIGJlaW5nIG1vbml0b3JlZC4gCkFuZCB0aGF0IGRvZXNuIGV2ZW4gY292ZXIgdGhlIHBsYWNlYm8gZWZmZWN0LiAKTGV0IHNlZSAgImRpc2NvIGJ5IGRpc2NvIiBhbmQgImFuZHJvZ3l5IiAgY291bGQgdGhhdCBiZSBjb2RlIGZvciBHYXkgKGFjdHVhbGx5LCBkaXNjbyBjb3VsZCBiZSBjb2RlIGZvciBnYXkgYW5kL29yIEJsYWNrKT8gSG1tLiBBbmQgImNpdGllcyBjcnVtYmxlIiBpcyBjb2RlIGZvciBsZXQgc2VlLCBpdCByaWdodCBvbiB0aGUgdGlwIG9mIG15IHRvbmd1ZS4gQmxhY2sgYW5kIHBvb3I/IEFuZCBjaGlsZHJlbiBtaXNiZWhhdmUgYmVjYXVzZSBzb21lb25lIHRvIGJsYW1lLiAKSG93ZXZlciBvZiB0aG9zZSB3aG8gdm9pY2VkIGFuIG9waW5pb24sIDgxIHBlcmNlbnQgb3Bwb3NlIHRoZSBtZWFzdXJlIHdpdGggMTkgcGVyY2VudCBpbiBmYXZvci4gU29tZSBvZiB0aGUgc3VydmV5IGZlZWRiYWNrIG9uIDMwMToiQW5vdGhlciBzdWJqZWN0aXZlIGFuZCBhcmJpdHJhcnkgY29zdCB0byB0aGUgYWxyZWFkeSBoaWdoIGNvc3Qgb2YgYnVzaW5lc3MgaW4gQm91bGRlci4iIlBlb3BsZSBuZWVkIHRvIHVuZGVyc3RhbmQgdGhhdCBkZXZlbG9wZXJzIGRvbid0IHJlYWxseSBwYXkgYWxsIHRoZXNlIGV4dHJhIGZlZXMuIFRoZSB0ZW5hbnRzIHdobyBsaXZlIGFuZCB3b3JrIGluIHRoZSBidWlsZGluZ3MgdWx0aW1hdGVseSBwYXkgdGhlbS4gClB1aXMgaWwgYXVyYWl0IGdsaXNzIGRhdmFudGFnZSB2ZXJzIGxhIFBlcnNlIGF2YW50IGRlLCBwZXV0IHRyZSwgc2UgZnJheWVyIHVuIGNoZW1pbiBkYW5zIGxhIHZhbGxlIGR1IE5pbCwgZCBpbCBzZSBzZXJhaXQgZHBsb3kgYXUgbW9uZGUgZ3JlYywgcHVpcyByb21haW4gYXUgcHJlbWllciBzaWNsZSBhdmFudCBKLiBDLiwgZGl0IG9uLiAKV2UgYXJlIGN1cnJlbnRseSBpbiB0aGUgbWlkc3Qgb2YgYSBjb25nZXN0aXZlIGhlYXJ0IGZhaWx1cmUgZXBpZGVtaWMgaW4gdGhlIFVuaXRlZCBTdGF0ZXMsIHRoZSBjYXVzZSBvciBjYXVzZXMgb2Ygd2hpY2ggYXJlIHVuY2xlYXIuIApUaGVuIEkgZm91bmQgU3BhdFRlY2ggaW4gUGx5bW91dGggYSBtYXNzYWdlIHRoZXJhcHkgYW5kIGVuZXJneSB3b3JrIHNjaG9vbC4gCkV2ZXJ5IGZlYXR1cmUgb2YgdGhlIFNwYUNsdWIsIGZyb20gdGhlIHNwZWN0YWN1bGFyIHZpZXdzIG9mZmVyZWQgYnkgdGhlIHdyYXBhcm91bmQgd2luZG93cyBpbiB0aGUgZnVsbCBzZXJ2aWNlIHNhbG9uLCB0byB0aGUgYmVhdXRpZnVsbHkgYXBwb2ludGVkIGxvY2tlciByb29tcywgaXMgZW5oYW5jZWQgYnkgc2VhIGFpciBhbmQgZ29yZ2VvdXMgc2NlbmVyeS4gVGhlIHNwYSdzIEFxdWEgVGhlcmFweSBDZW50cmUgaXMgaW1wcmVzc2l2ZTogYW4gYW1hemluZyB0aGFsYXNzb3RoZXJhcHkgcG9vbCB3aXRoIGEgZGVsdWdlIHdhdGVyZmFsbCwgYSB3aGlybHBvb2wsIGFuZCBuZWNrIG1hc3NhZ2UgZm91bnRhaW5zLiBUaGVyZSBhcmUgcmVjbGluaW5nIGxvdW5nZSBhaXJiZWRzLCBhIGRlbHVnZSBzaG93ZXIsIHdhbGwgbW91bnRlZCBib2R5IGpldHMgYW5kIGZsb29yIG1vdW50ZWQgYWlyIHR1YmVzLgpJJ20gc28gc29ycnkgZm9yIHlvdXIgbG9zcy4gSSBhbHNvIGhhZCBhIGNsb3RoaW5nIGlzc3VlIHdpdGggcHJlZ25hbmN5LiBJIGhhdmUgYW50aSBwaG9zcGhvbGlwaWQgYW50aWJvZGllcy4gCllvdSBkb24gdGhpbmsgd2hlbiB5b3UgMTYgdGhhdCB5b3UgZ29pbmcgdG8gYmUgaGVyZSB0aGlzIGZhc3QgYW5kIHRoZW4geW91IGxvb2sgYmFjayBhbmQgZXZlcnl0aGluZyBnb25lLiAKU2hlIHdhcyBzaG9ja2VkIHRvIHNlZSwgdGVuIHllYXJzIGxhdGVyLCB0aGF0IHRoZXJlIHdlcmUgc2V2ZXJhbCBodW5kcmVkIG1vcmUgcHJpdmlsZWdlcyBnaXZlbiB0byB0aGUgbWFycmllZCBhbW9uZyB1cy4uIApUaGVuIHRoZXkgbG9zZSBpdCBpbiBhIGRyYWdvbiB0cmFkZS4gVGhlbiB0aGVyZSBhIHBvcnRhbCB0cmVlL2Nsb2NrIHRoZXkgY2FuIHdhbGsgdGhyb3VnaCBiYWNrIGFuZCBmb3J0aCwgYnV0IHRoZW4gbWFnaWMgaXMgdHVybmVkIG9mZiBhbmQgaXQgZG9lc24gd29yay4gCjIgUGVvcGxlIGhhdmUgdHJpZWQgdG8gc2VsbCBtZSBWaWFncmEgTmV3IG1lZGljYXRpb24gaW5mb3JtYXRpb24gcmVjZWl2ZWQgZnJvbSBhIGNvd29ya2VyLgpCdXQgd2l0aCBoaXMgdXN1YWwgbWlzY2hpZXZvdXMgd2l0LCB0aGUgNDIgeWVhciBvbGQgTHVuZCBoYXMgdHVybmVkIGhpcyBwYWluIHRvIGdhaW4uIEhpcyBzZXZlbnRoIHN0dWRpbyBkaXNjIENhYmluIEZldmVyIG91dCBUdWVzZGF5IEF1Zy4gCkkgY2FuIGZlZWwgdGhlIGdyb3dpbmcgd29ybGQgb2YgcGhvdG9ncmFwaHkgYXJvdW5kIG1lLiAKIlByZXZpb3VzbHkgaXQgd2FzIGEgbW9ub3BvbHkuIApJIGxvdmUgU3ViYXJ1cywgYnV0IEkgYWxzbyBvd25lZCBUb3lvdGFzIGFuZCBWb2x2b3MuIApPZiBjb3Vyc2UsIGFueXRoaW5nIGlzIHBvc3NpYmxlLCBidXQgdGhlc2UgdHlwZSBjb21tZW50cyByZW1pbmQgbWUgb2YgYWxsIHRoZSBuYXlzYXllcnMgdG8gUkVJIGFuZCB0aGUgYnJva2VuIHRvaWxldHMsIGxhdGUgbmlnaHQgY2FsbHMgZXRjLiBQZW9wbGUgaGF2ZSBhbnkgbnVtYmVyIG9mIHJlYXNvbnMgdG8gcGF5IGFkdmFuY2UgcmVudC4gCldlIHRoZW4gd29ycmllZCBpdCB3b3VsZG4gZmx1c2ggYW5kIG1hZGUgc3VyZSB3ZSBoYWQgYSBwbHVuZ2VyIHJlYWR5IGp1c3QgaW4gY2FzZS4uIApGcm9tIGNsaW1hdGUgaW5jZW50aXZlIGNyZWRpdHMgdG8gZXhwZW5zaW5nIHlvdXIgc2VydmljZSBkb2cKSXQgYSB3aWxkLCBlbW90aW9uYWwgcmlkZSwgYW5kIGhhdmluZyBwZXJpcGhlcmFsIHZpZXcgaW50byBvdGhlciB0ZWFtcyBuYXJyYXRpdmVzIGlzIGdyZWF0LiAKRXZlcnkgdGltZSB5b3UgZmFsbCBhc2xlZXAgeW91ciBjb25zY2lvdXNuZXNzIHR1cm5zIGF3YXkgZnJvbSBkYXkgb2YgcGVhY2VmdWwgcmVsYXhhdGlvbiwgYW5kIGEgbmlnaHQgb2YgcGFydGllcyBhbmQgZnVuLiBJZiB0aGV5IHNlZSB5b3UgdHJ5aW5nIHRvIHNwZWFrIHRoZSBsYW5ndWFnZSB0aGV5IGFyZSBtb3JlIGFwdCBldmVuIGluIHRob3NlIHBsYWNlcywgeW91IGNhbiBzdGlsbCBmaW5kIGNoZWFwIGFjY29tbW9kYXRpb25zIGFzIGxvbmcgYXMgeW91P3JlIHdpbGxpbmcgdG8gc3RheSBpbiBhIGxlc3MgdG91cmlzdHkgcGFydHMgb2YgdG93bi4gCk5leHQgU2FsIERlYnVzIGlzIGZvY3VzZWQgb24gaGl0dGluZyBtb3JlIHRyYWRlIGFuZCBjb25zdW1lciBzaG93cyBpbiB0aGUgbmV4dCB5ZWFyIHRvIGhlbHAgYm9vc3QgZGlzdHJpYnV0aW9uIGNoYW5uZWxzLiBIaXMgMTAgeWVhciBwbGFuIGlzIHRvIGdyb3cgaGlzIHdob2xlc2FsZSBuZXR3b3JrIHRvIGluY2x1ZGUgdXB3YXJkIG9mIDEsMDAwIHN1cHBsaWVycyBhbmQgcmV2ZW51ZXMgaW4gdGhlICQ1MCBtaWxsaW9uIHRvICQxMDAgbWlsbGlvbiByYW5nZS4uIApUaGUgU1MgQ2x1YiBpcyBpbiB0aGUgZmlyaW5nIGxpbmUgdG8gc3VycmVuZGVyIGl0cyA0MCBsaWNlbmNlcyB1bmRlciBhICJ1c2UgaXQgb3IgbG9zZSBpdCIgY2xhdXNlLiBUaGUgZ292ZXJubWVudCBzYWlkIGl0IG5lZWRlZCByZXZlbnVlIGZyb20gdGhlIHBva2llIGxpY2VuY2VzIHRvIGJhbmtyb2xsIGNvbW11bml0eSBpbmZyYXN0cnVjdHVyZSBpbmNsdWRpbmcgaG9zcGl0YWxzLCBzY2hvb2xzIGFuZCByb2Fkcy4gCkFsc28sIGNyb3V0b25zIHRoYXQgeW91IG1ha2UgZnJvbSByZWFsIGJyZWFkIHdpdGggYSB0aW55IGJpdCBvZiBnYXJsaWMuIEVtcGhhc2l6ZSBvbiB0aGUgInRpbnkgYml0IG9mIGdhcmxpYyIgYmVjYXVzZSBpdCBub3Qgc3VwcG9zZWQgdG8gY292ZXIgdGhlIG90aGVyIGluZ3JlZGllbnRzLgpUYXR0b28gZG9lc24gb2JsaWdhdGUgYSBwaHlzaWNpYW4gdG8gbm90IHByb3ZpZGUgY2FyZSBpZiB0aGV5IGRvbiBoYXZlIG1vcmUgaW5mb3JtYXRpb24sIGFuZCBJIHdvdWxkbiBhZHZpc2UgbXkgY29sbGVhZ3VlcyB0byBiZSB3b3JyaWVkIHRoYXQgdGhleSBoYXZlIHRvIGp1c3RpZnkgdGhlaXIgYWN0aW9ucy4gCklmIHNoZSBzaG93cyBzaWduaWZpY2FudCBpbXByb3ZlbWVudCBpbiB0aGUgYXJlYXMgb2Ygc2hvcnQgc3RyaWRpbmcsIGhvbGRpbmcgaGVyIGhlYWQgdG8gdGhlIHJpZ2h0LCBob2xkaW5nIGhlciB0YWlsIHRvIHRoZSBsZWZ0LCBhbmQvb3Igd2lsbGluZ25lc3MgdG8gYmVhciB3ZWlnaHQgb24gdGhlIGxlZywgdGhlbiB2ZXJ5IGxpa2VseSB5b3UgaGF2ZSBhIHBhaW4gaXNzdWUuIE5vdyBmb3IgdGhlIHJlY29yZCB5b3UgbWlnaHQgbm90IHNlZSBpbXByb3ZlbWVudCBpbiBzdHJpZGUgbGVuZ3RoLCBkZXBlbmRpbmcgb24gdGhlIGluanVyeSAgIGlmIHRoZSBpbmp1cnkgbWVjaGFuaWNhbGx5IHByZXZlbnRzIHRoZSBub3JtYWwgZnVuY3Rpb24gb2YgaGVyIGdhaXQuIApNb3JlIHVzZWZ1bCBhcmUgdGhlIG9wdGlvbnMgdG8gc2hhcmUgYSBwaWN0dXJlIG9yIGEgZG9jdW1lbnQgICB5b3UgY2FuIGhhdmUgdGhlIHNhbWUgcGljdHVyZSBhcHBlYXIgb24gZXZlcnlvbmUncyBkZXZpY2UgYW5kIHlvdSBjYW4gZHJhdyBvdmVyIGl0IGlmIHlvdSBuZWVkIHRvIGhpZ2hsaWdodCBhIGNlcnRhaW4gZWxlbWVudCBvZiB0aGUgaW1hZ2UuClNvLCB3aGF0IG1ha2VzIGdhbWJsaW5nIGFyb3VuZCB0aGUgaW50ZXJuZXQgc28gYXR0cmFjdGl2ZT8gWWVzLCB5b3UnbGwgYmUgYWJsZSB0byBwbGF5IGFueSBnYW1lIG9mIHlvdXIgc2VsZWN0aW9uIHdpdGggb3V0IGhhdmluZyB0byBsZWF2ZSB5b3VyIHByZWZlcnJlZCBjaGFpci4gCjQuIApBbG9uZyB3aXRoIG9ubGluZSBwb2tlciBhbmQgb25saW5lIGJpbmdvIHBlb3BsZSBhbHNvIGRlc2lyZSB0byB0cnkgdGhlaXIgbHVjayB3aXRoIG9ubGluZSBzbG90IGdhbWVzLiAKT3VyICJqb2tlIiB3YXMgbG9zdCBvbiBtYW55IHBlb3BsZSwgYnV0IE1hcmNvdHRlIGhhcyBiZWVuIHJlY2VpdmluZyBkb25hdGlvbnMgZnJvbSBhcm91bmQgdGhlIGNvdW50cnkgZnJvbSBwZW9wbGUgd2hvIHNpbmNlcmVseSBiZWxpZXZlIHdlIHNob3VsZCBzdG9wIGRpdm9yY2UgdG8gc2F2ZSBtYXJyaWFnZS4uIApJdHMgbm90IG5lY2Vzc2FyaWx5IHRoZSBwcm9ibGVtIHRoYXQgeW91IHRvb2sgdGhhdCBnYXAsIGl0cyB0aGF0IHlvdXIgbWluZHNldCBpcyB0byBiZSBpbiB0aGF0IG11Y2ggb2YgYSBydXNoLiBZZXMsIG5vYm9keSB3YW50cyB0byBzaXQgYXJvdW5kIGJlaGluZCBhIGNydWlzZXIgYWxsIGRheSwgYnV0IGdldHRpbmcgZGVzcGVyYXRlIGVub3VnaCB0byBwYXNzIGxpa2UgdGhhdCBtZWFucyB5b3VyZSBnb2luZyB0byBiZSBsb29raW5nIGZvciBnYXBzIHRoYXQgYXJlIHF1ZXN0aW9uYWJsZSBhdCBiZXN0Li4gCkdvb2RSdWJpayB1CktlcHQgYnJhZ2dpbmcsIHNheXMgU3RhcGxlcyB3aXRoIGEgbGF1Z2guIEkgd2FzIGxpa2UsIHRoaXMgaXNuIGdvaW5nIHRvIHdvcmsuIApUaGFuayB5b3UuIFRoZSBOQVMganVzdCBwdWJsaXNoZWQgKGluIEphbnVhcnkpIGEgbWV0YSBhbmFseXNpcyBvbiBhbGwgcmlnb3JvdXMgc3R1ZGllcyByZWxhdGVkIHRvIHRoZSBlZmZlY3RzIG9mIG1hcmlqdWFuYS4gSXQgc3RpbGwgdG91Z2ggZm9yIGluc3RpdHV0ZXMgdG8gZ2V0IHRoZWlyIGhhbmRzIG9uIGEgY29uc2lzdGVudCwgZ29vZCBzdXBwbHkgb2YgbWFyaWp1YW5hIGZvciByZXNlYXJjaC4gClRoaXMsIG9mIGNvdXJzZSwgaGFzIGxvbmcgYmVlbiBvbmUgb2YgdGhvc2UgcXVlc3Rpb25zIHRoYXQgdHJvdWJsZXMgdGhlIGN1bHR1cmFsIHBzeWNoZS4gV2hlbiBNaWNoZWxhbmdlbG8gU2lnbm9yaWxlIGJlZ2FuIG91dGluZyBhbnRpIGdheSBwb2xpdGljaWFucyBkdXJpbmcgdGhlIGhlaWdodCBvZiB0aGUgQUlEUyBjcmlzaXMsIG1hbnkgc3RyYWlnaHQgQW1lcmljYW5zIGZvdW5kIHRoZSBwcmFjdGljZSBvZiBvdXRpbmcgYW4gb3V0cmFnZS4gCkJ1dCBvdGhlcnMgSSBrbm93IGhhdmUgbmlnaHRtYXJlcyBldmVyeW5pZ2h0LCBhbmQgdGhlIGFyZSBub3QgZ2V0dGluZyBjb3VuY2VsaW5nLiAKQW4gb3BlbiBob3VzZSBjZWxlYnJhdGlvbiBvZiBsaWZlIHRvIGJlIGhlbGQgZnJvbSA0OjAwIDc6MDBwbSBvbiBXZWRuZXNkYXksIEp1bmUgMjl0aCwgMjAxNiBhdCBCaWxsJ3Mgb2ZmaWNlLCAxMDg3IEdhaW5zYm9yb3VnaCBSZCwgSHlkZSBQYXJrIE9OLi4gClp0TWFpemVOQmx1ZSAgMzMyIHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ28KNDgxNCBDaGljYWdvIEF2ZS4sIE1pbm5lYXBvbGlzOyA2MTIgODIyIDgwODAuIEVyaWsgVGhvbXBzb24uIApUaGF0J3Mgbm90IGh5cGVyYm9sZS4gCjg1IHBvaW50cyAgc3VibWl0dGVkIDE4IGRheXMgYWdvLiAKV2lyIGhhbSBlaXNpZyBnZWlsZSBTdGFkaWVuIHVuZCBIYWxsZW4sIGRpZSB3aXIgenVtIEVpc2hvY2tleSBvZGVyIHp1bSBLdWhnbGVpdGVuIGJlbnV0emVuLCBzb3dpZSB2aWVsZSBHZXlzaXJlLCBkaWUgZGllIFNwb3J0bGVyIG5hY2ggZGVtIFNwb3J0IGFud2VuZGVuIGtubmVuLCBhdWNoIHdlbm4gc2UgbmljaHQgYmVyZ2VpbHQgc2luZC4gClRoYW5rIGdvZCB0aGV5IGRpZG4gSG93IGRpZCB5b3UgZmVlbCB3aGVuIHlvdSBsZWFybmVkIENsaWZ0b24gdGVhbSBkaWRuIGdvIGRvd24gbmVhciB0aGUgZXllIG9mIHRoZSBzdG9ybT8gVGhhdCByZWFsbHkgdGhyZXcgIi4gCkRvbid0IHdhbm5hIHNlbGwgYW55dGhpbmc/IGJ1ZyB5b3VyIHBhcmVudHMgdG8gYnV5IHUgMSAobm90IHJlYWxseSB0aGUgYmVzdCBzb2x1dGlvbiBzb21ldGltZXMgaXRzIGp1c3QgZ29ubmEgbWFrZSB0aGVtIG5vdCB3YW50IHRvIGJ1eSBpdCBtb3JlKS4gSWYgdGhhdCBkb2Vzbid0IHdvcmssIHdvcmsgYXJvdW5kIHlvdXIgaG91c2UgYW5kIGFzayB5b3VyIHBhcmVudHMgbW9uZXkgZm9yIGV2ZXJ5IGNob3JlIHlvdSBkby4gQW5kIGlmIG5vbmUgb2YgdGhvc2Ugd29yayBhbmQgeW91IGFyZSByZWFsbHkgZGVzcGVyYXRlIGZvciBhIHBzMyB0aGVuIGp1c3Qgd2FpdCBmb3IgaXQgdGlsbCBDaHJpc3RtYXMgb3IgeW91ciBiaXJ0aGRheS4gClNhbWUgdGhpbmcgaGFwcGVuZWQgd2l0aCAxNjVsYi4gSXQgdG9vayBtZSB0aHJlZSBzZXNzaW9ucyBiZWZvcmUgSSB3YXMgYWJsZSB0byBnZXQgYWxsIDV4NSBhdCB0aGF0IHdlaWdodC5JIGJ1bGtpbmcgYXQgMjYwMGNhbC9kYXkgKDE2NWxiLCAxNiUgQkYpLiBEbyBJIG5lZWQgdG8gZWF0IG1vcmUsIGlzIGl0IGEgcHJvZ3JhbW1pbmcgaXNzdWUsIG9yIGFtIEkganVzdCBhcHByb2FjaGluZyAiaW50ZXJtZWRpYXRlIiB3aGVyZSBwcm9ncmVzcyBzbG93cyBkb3duPyAyIHBvaW50cyAgc3VibWl0dGVkIDIgbW9udGhzIGFnb3llcywgYW5kIHZpY2UgdmVyc2EuIApQb3N0aW5nIG11bHRpcGxlIHRocmVhZHMgYSBkYXkgaW4gZXhjZXNzaXZlIHVzZS4gCklsIGVzdCB2cmFpIHF1ZSBsYSBjb2hhYml0YXRpb24gZmFjaWxpdGUgbCdhcHBvcnQgZGUgbGEgcHJldXZlIGQndW5lIGNvbW11bmF1dCBkZSB2aWUuIEFpbnNpLCBzaSBsJ3VuIG4naW1wbGlxdWUgcGFzIGwnYXV0cmUsIGlsIGVuIGZhY2lsaXRlIGxhIHByZXV2ZSBkZSBsJ2V4aXN0ZW5jZS4KSnVzdCBzZWVpbmcgb25lIG1ha2VzIG15IGhlYXJ0IGJlYXQgZmFzdCBhbmQgbXkgc2tpbiBnZXQgc3dlYXR5IGFuZCBjbGFtbXkuIApDb21wbGFpbnQ6IGxhc3QgbmlnaHQgYWZ0ZXIgc3RyZW5ndGggdHJhaW5pbmcsIEkgdG9vayBvZmYgbXkgc2hvZXMgZm9yIHNvbWUgeW9nYS9zdHJldGNoaW5nLiBNeSBkb2cgd2FzIGJvdGhlcmluZyBtZSBhbmQgY2xlYXJseSBuZWVkZWQgdG8gZ28gb3V0LCBzbyBJIGdvdCB1cCBvZmYgb2YgdGhlIGZsb29yICAgYW5kIHByb21wdGx5IGtpY2tlZCBhbiA4IGxiIGR1bWJiZWxsIGluIG1pZCBzdHJpZGUuIApMaXR0bGVzaHJvb20gIDEgcG9pbnQgIHN1Ym1pdHRlZCA4IGRheXMgYWdvCkJvbiwgcG91cnF1b2kgZXN0IGplIHF1ZSBqZSB2b3VzIHJhY29udGUgdG91dCBhID8gUGFzIHNldWxlbWVudCBwb3VyIHZvdXMgZmFpcmUgc2FsaXZlciAhIFZvdXMgdm91cyByYXBwZWxleiBxdWUgamUgdm91cyBkaXMgZGUgdGVtcHMgZW4gdGVtcHMgcXUnaWwgbmUgZmF1dCBwYXMgYWNjdXNlciBsZSByZXN0YXVyYW50IChvdSBsZXMgdmFjYW5jZXMgZ2FzdHJvbm9taXF1ZXMpIGRlIGZhaXJlIGdyb3NzaXIuIEV4cHJpZW5jZXMgIGwnYXBwdWkuIEplIG1lIHN1aXMgZmFpdCBhaW5zaSBwbGFpc2lyIHNhbnMgcmVzdHJpY3Rpb24sIGonYWkgbWFuZyBjZSBkb250IGonYXZhaXMgZW52aWUsIGplIG5lIG1lIHN1aXMgcGFzIHByaXZlIGRlIG1ldHMgc3VjcnMgbmkgZGUgcGFpbiwgaidhaSBidSBkdSB2aW4uIApTbyB3ZSBoYXZlIGEgdHJhZGUgb2ZmOiBvaWx5IGRpcnQgcmVtb3ZhbD8gT3Igbm8gaXJyaXRhdGlvbiB0byB0aGUgZXllcz8gV2hpY2ggb25lIHlvdSB3YW50IGdvZXMgdG8gd2hpY2ggInNvYXAiIHlvdSB1c2UgaW4geW91ciBzaGFtcG9vLiAKTHVja3kgZm9yIGhpbSAoYW5kIGZhbnMgb2Ygc3VwZXJoZXJvIHZpb2xlbmNlIGV2ZXJ5d2hlcmUpIHRoYXQgdGhleSBkaWQhLiAKWW91IGNhbiBldmVuIGRvIHRoaXMgb24geW91cnNlbGYuIFJ1YiB0aGUgb2lsIHVwIHlvdXIgYXJtcyB0byB0aGUgbHltcGggbm9kZXMgaW4geW91ciBhcm1waXRzLiAKVGhleSBjb3VsZCBkZWZpbml0ZWx5IHNlbGwgYW5vdGhlciBvbmUgYXMgbG9uZyBhcyB0aGV5IG1ha2UgaXQgYSAkMzAgJDQwIGdhbWUgKHdpdGggb3Igd2l0aG91dCBNUCwgYnV0IG5lZWRzIGNvIG9wKSBhbmQgZG9uIHRyeSB0byBwdXNoIGl0IGFzIGEgQUFBIGNvbnNvbGUgc2VsbGVyLiAKSGljZSB1bmEgYnNxdWVkYSBlbiBHb29nbGUgeSBlbmNvbnRyIHR1IHNpdGlvLiBFcmEgZXhhY3RhbWVudGUgbG8gcXVlIGVzdGFiYSBidXNjYW5kbyB5IGZ1ZSBleGFsdGFkbyBhIGVuY29udHJhciB1bmEgYW1wbGlhIGdhbWEgZGUgYXJ0Y3Vsb3MuIEVzdG95IGxhbnphbmRvIHVuYSByZXZpc3RhIGdyYXR1aXRhIGVuIHVuYSBwZXF1ZWEgY2l1ZGFkIGVuIEZsb3JpZGEsIHkgcXVlcmEgc2VyIHRhbiBpbmdlbmlvc29zIGNvbW8gc2VhIHBvc2libGUgbWllbnRyYXMgcXVlIHRvZGF2YSBzaWVuZG8gY2FwYWNlcyBkZSBwcm9wb3JjaW9uYXIgYWxnbiBjb250ZW5pZG8gcXVlIHNlYSBpbnRlcmVzYW50ZSB5IGJpZW4gZXNjcml0by4gU3Ugc2l0aW8gdGllbmUgdG9kYXMgbGFzIHZhcmlhYmxlcyBkZSBsYSBtZXpjbGEuIEV4Y2VsZW50ZSBzaXRpbyBnb2xwZWFyIHRvZGFzIGxhcyBub3RhcyBlbiBlbCB0aXBvIGRlIGVzY2FsYSBkZSBoYWJsYS4KVGhlIG1lcmUgZmFjdCB0aGF0IHRoaXMgaXMgaG93IGEgYmFieSBpcyBtYWRlIG1ha2VzIGl0IGRpZmZlcmVudC4gClRvcCBUZWNoIEF0IENFUyAyMDE2Q0VTIDIwMTZUd28gU21hcnRQbGF0ZXMgYnkgRml0bHkgYXJlIGRpc3BsYXllZCBvbiB0aGUgZmlyc3QgZGF5IG9mIENFUyAyMDE2IENvbnN1bWVyIEVsZWN0cm9uaWNzIFNob3cgb24gSmFudWFyeSA2LCAyMDE2IGluIExhcyBWZWdhcywgTmV2YWRhLiAKU2luY2UgcGh5c2ljYWwgYWN0aXZpdHkgaXMgYSBsaWZlc3R5bGUsIGFzIHNlcnZpY2UgbWVtYmVycyBncm93IG9sZGVyIHRoZXkgd2FudCB0byBwcm92ZSB0aGV5IGhhdmUgbm90IGxvc3QgdGhlaXIgZWRnZS4gCkhtLllvdSB3ZXJlIGhvbWVzY2hvb2xlZCByaWdodD8gTWF5YmUgSG9tZWZvb2wuIEhvbWUgRm9vbGVyPyBUaGF0IHNlZW1zIHRvbyBtaWxkLldoYXQgYWJvdXQgVGlua2VySGVsbD8gVGlua2VyRmVsb24/SXMgY3Vyc2luZyBhbGxvd2VkPyBXaGF0IGFib3V0IE1vdGhlcmZ1Y2tlcj9UaGFua3MgZm9yIHNoYXJpbmcgeW91ciBzdG9yeSBhbmQgeW91ciB0cnV0aCB3aXRoIHVzLllvdSBub3Qgc3BlY2lhbC4gCkhlIGJhdHRlZCBhc2lkZSBzdWdnZXN0aW9ucyB0aGF0IHRoZSBydWxlcyBvZiBjcmlja2V0IHdlcmUgdG9vIGNvbXBsaWNhdGVkIGZvciBBbWVyaWNhbnMgdG8gZm9sbG93LgpUb2JhY2NvIENvbnRyb2x3aWxsIG5vdCBjb25zaWRlciBmb3IgcHVibGljYXRpb24gcGFwZXJzIHJlcG9ydGluZyB3b3JrIGZ1bmRlZCwgaW4gd2hvbGUgb3IgaW4gcGFydCwgYnkgYSB0b2JhY2NvIGNvbXBhbnkgb3IgdG9iYWNjbyBpbmR1c3RyeSBvcmdhbml6YXRpb24uIEZvciBmdXJ0aGVyIGluZm9ybWF0aW9uLCBwbGVhc2UgcmVhZCB0aGlzZWRpdG9yaWFsZ2l2aW5nIHRoZSByZWFzb25pbmcgYmVoaW5kIHRoZSBqb3VybmFsJ3MgcG9saWN5LiBGYWlsdXJlIHRvIGRlY2xhcmUgY29tcGV0aW5nIGludGVyZXN0cyBhdCBzdWJtaXNzaW9uLCBvciB3aGVuIGFuIGFydGljbGUgaXMgY29tbWlzc2lvbmVkLCBjYW4gcmVzdWx0IGluIGltbWVkaWF0ZSByZWplY3Rpb24gb2YgdGhlIHBhcGVyLiAKSSB0eXBlZCBpbiB0aGUgcGFzc3dvcmQ6IDEyMjc4LiAKQWN0aW5nIG9yIHNheWluZyBpbW1hdHVyZSB0aGluZ3Mgd2lsbCBub3QgZ2V0IHlvdSBhbnkgbHVjayBhbmQgd2lsbCBtb3N0IGxpa2VseSByZXN1bHQgaW4geW91IGdldHRpbmcgYmFubmVkIGZyb20gdGhlIGNoYXQgcm9vbS4gRXZlcnkgd2Vlaywgb3VyIGVkaXRvcnMgc3BlbmQgaG91cnMgb24gdGhlIHBob25lIGRvaW5nIHJlc2VhcmNoIGFuZCBzY29yaW5nIGVhY2ggYW5kIGV2ZXJ5IGNoYXRsaW5lIHRoZXkgY29tZSBhY3Jvc3Mgb24gZWFjaCBvZiB0aGUgZm9sbG93aW5nIGZhY3RvcnM6IFNlcnZpY2UgRmVhdHVyZXM6IE1vc3QgbGluZXMgb2ZmZXIgdGhlIGV4YWN0IHNhbWUgcGhvbmUgY2hhdCBzZXJ2aWNlLCB3ZSBnaXZlIGV4dHJhIGNyZWRpdCB0byB0aG9zZSBjaGF0IGxpbmVzIHRoYXQgYWxzbyBpbmNsdWRlIGFkZGl0aW9uYWwgZmVhdHVyZXMgc3VjaCBhcyBvZmZsaW5lIG1lc3NhZ2luZywgd2ViIGludGVyZmFjZSBhbmQgc21hcnQgcGhvbmUgYXBwLiAKQmFza2V0YmFsbCBQb2tlciBDYXJkIFByb3RlY3RvciBSZXZpZXcKQnV0IG1hc3Mgc2hvb3RpbmdzIGhhdmUgZ29uZSB1cC4gCkFzIHdlIHB1bGxlZCBhd2F5LCBJIHRob3VnaHQsICJUaGV5IGp1c3QgZ2F2ZSB1cyBhIHRpY2tldCBhbmQgbm93IHdlIGFyZSBwYWxzPz8/Ii4gQnV0IHdlIGRyb3ZlIG9uIChhIGxpdHRsZSBzbG93ZXIsIGJ1dCBub3QgbXVjaCkgYW5kIHdlIHdlcmUgbG9va2luZyBmb3J3YXJkIHRvIHRoZSBzdW4gYW5kIGJlYWNoIG9mIHRoZSBNZWRpdGVycmFuZWFuLi4gCktldmluJ3MgcHJvYmFibHkgdGhlIGJlc3QgcGxheWVyIGluIHRoZSBsZWFndWUuIFdlIGdhdmUgZWFjaCBvdGhlciBhIHNtaWxlLiBBbmQgSm9yZGFuIG1hdGNoZWQgbWUgc2F2ZSBmb3Igc2F2ZSwgZXNwZWNpYWxseSBsYXRlLiAKQWNjb3JkaW5nbHkgSSB3ZW50IGFzaG9yZSB3aXRoIGEgcGFydHkgb2YgbWVuLCBhY2NvbXBhbmllZCBieSBNci4gQmFua3MsIERyLiBTb2xhbmRlciwgYW5kIE1yLiBHcmVlbi4gV2UgdG9vayBhbG9uZyB3aXRoIHVzIG9uZSBvZiBNci4gQmFua3MncyBUZW50cywgYW5kIGFmdGVyIHdlIGhhZCBmaXgnZCB1cG9uIGEgcGxhY2UgZml0IGZvciBvdXIgcHVycG9zZSB3ZSBzZXQgdXAgdGhlIFRlbnQgYW5kIG1hcmtlZCBvdXQgdGhlIGdyb3VuZCB3ZSBpbnRlbmRlZCB0byBPY2N1cHkuIApLZWVwIGluIG1pbmQgdGhvdWdoIHRoYXQgYWNjb3JkaW5nIHRvIHRoZSBkZXBvc2l0aW9ucyBvbmx5IHNvbWUgb2YgdGhlIG5hbWVzIGluIHRoZSBib29rIHdlcmUgcGVvcGxlIHdobyBrbmV3IHdoYXQgd2FzIGhhcHBlbmluZywgdGhpcyBndXkgd2FzIGEgd2VhbHRoeSBzb2NpYWxpdGUgdGhhdCBoYWQgYSBsaWZlIG91dHNpZGUgb2YgcGltcGluZyB1bmRlcmFnZSBnaXJscy4gSGUgd2FzIGF0dGVtcHRpbmcgdG8gYmUga25vd24gYXMgdGhlIGd1eSB3aG8gaGFkIGFtYXppbmcgcGFydGllcyBhbmQgdGhlIG1hbiB0byB0YWxrIHRvIHRvIGdldCBjb25uZWN0ZWQgdG8gb3RoZXIgcmljaCBhbmQgZmFtb3VzIHBlb3BsZS4gCkkndmUgaG9uZXN0bHkganVzdCBzdGFydGVkIHRlbGxpbmcgdGhlbSBJIGRvbid0IG5lZWQgdml0YWxzLiBJJ20gbm90IHN1cmUgd2h5IHRoZXkgYWx3YXlzIGdpdmUgdGhlbSB3aGVuIHRoZXkga25vdyBJIGNhbiBqdXN0IGxvb2sgYXQgdGhlbSBpbiB0aGUgY29tcHV0ZXIgKGFuZCBhbSBjdXJyZW50bHkgZG9pbmcgc28pIGFuZCB0aGVuIHRoZXkgcmVhZCB0aGUgZG9jdG9ycyBIIHRvIG1lIHN0cmFpZ2h0IG9mZiB0aGUgc2NyZWVuLiAKU28sIGhvdyBkb2VzIGEgY2FzaW5vIGVhcm4gbW9uZXkgZnJvbSBhbGwgdGhlc2UgY2FzaW5vIGJvbnVzIG9mZmVycz8KT25lIG9mIG15IGNsb3Nlc3QgZnJpZW5kcyBzZWVtcyB0byBiZSBhYnNvbHV0ZWx5IG92ZXIgbWUgYW5kIG15IHRyYW5zZm9ybWF0aW9uLiBUbyB0aGUgcG9pbnQgd2hlcmUgSSBnZXR0aW5nIGF0dGl0dWRlIGZyb20gaGltIGV2ZXJ5IHRpbWUgd2UgdGFsayBiZWNhdXNlIEkgZG9uIHdhbnQgdG8gZ28gb3V0IGFuZCBoYW5nIHdpdGggaGltLiAKU2VlbiBpdCBmaXJzdCBoYW5kLiBNb3JlIHdhbGxzIHdpbGwgZG8gbm90aGluZy4gVGhlIGlkZWEgaXMganVzdCB3aGF0IHRoZSBpZGlvdCBpbiB0aGUgd2hpdGUgaG91c2Uga25vd3MgeW91IHRhcmRzIHdhbnQgdG8gaGVhci4gCkl0IGRpcmVjdGx5IGluZmx1ZW5jZXMgaG93IG11Y2ggeW91IHdpbiBvbiB0b3RhbCwgbm90IGp1c3Qgb24gdGhhdCBvbmUgc3RyZWV0Li4gCkxlc2VuIHVuZCBEb3dubG9hZCBPbmxpbmUgVW5saW1pdGVkIGVCb29rcywgUERGIEJ1Y2gsIEhyYnVjaCBvZGVyLiAxMy4gClNvLCBvYnZpb3VzbHksIHRoZSByZWFzb24gdGhpcyBzeXN0ZW0gb2YgcmVkdW5kYW50IHN1ZmZpeGVzIGV4aXN0cyBpcyB0byBjb21tdW5pY2F0ZSB0byBub24ga29yZWFuIHNwZWFrZXJzIHdoYXQgZXhhY3RseSB0aGVzZSB0aGluZ3MgYXJlLiAKSW4gb3RoZXIgd29yZHMsIG1vbnN0ZXJzIHdpbGwgaGF2ZSBtb3JlIGhpdCBwb2ludHMsIGhpZ2hlciBhcm1vciBjbGFzcywgbW9yZSBwb3dlcmZ1bCBhbmQgdmFyaWVkIGF0dGFja3MsIGRpZmZlcmVudCB0YWN0aWNzLCBldGMuIApCVFcsIEkndmUgdGFrZW4gaW4gdGhlIHBhc3QgYW5kIGRpZCByZWNlbnRseSB0YWtlIGFkdmFuY2UgcmVudCBhbmQgaGF2ZSBubyBwcm9ibGVtcyB3aXRoIGl0Li4gClVzaW5nIG5ldywgbXVsdGkgcGxhdGZvcm0gcHJvZHVjdGlvbiBhbmQgZGVsaXZlcnkgY2FwYWJpbGl0aWVzLCB3ZSB3aWxsIG1lZXQgb3VyIG5ld3MgY29uc3VtZXJzIHdoZXJlIHRoZXkgYXJlIGFuZCBwcm92aWRlIG91ciBhZHZlcnRpc2luZyBwYXJ0bmVycyB3aXRoIHJlYWwgdmFsdWUuIApDaG9vc2UgZnJvbSBhIGZ1bGwgbGluZXVwIG9mIHNlcnZpY2VzLCBpbmNsdWRpbmcgdGhlIDc1IG1pbnV0ZSBDb3VwbGVzIFJldHJlYXQsIHdoaWNoIGJlZ2lucyB3aXRoIGEgcmVsYXhpbmcgYmF0aCBmb3IgdHdvIGluIGEgamV0IGh5ZHJvdGhlcmFweSB0dWIgZm9sbG93ZWQgYnkgYSBkdWFsIGZ1bGwgYm9keSBTd2VkaXNoIG1hc3NhZ2UuIApBbmQgd2hhdCBraW5kIG9mIGZldWRhbHMgd291bGQgdGF4IHRoZW1zZWx2ZXM/RmV1ZGFsLCBtaWxpdGFyeSBvciBjYXBpdGFsaXN0LCB0aGUgUGFraXN0YW5pIGVsaXRlIGxvdmUgb3RoZXIgcGVvcGxlJ3MgbW9uZXkuIFRoZSBjb3VudHJ5J3MgcGVyZW5uaWFsIGluZGVidGVkbmVzcyBhbmQgdW5xdWVuY2hhYmxlIGFwcGV0aXRlIGZvciBvdGhlciBwZW9wbGUncyBtb25leSBob3dldmVyLCBpcyBub3QgaW5ldml0YWJsZS4gCkRlcyBhY3Rpb25zIGNvbW11bmVzIGRvbmMsIHBhcyBzaSBjb3VyYW50ZXMuLiAKQ291bGQgYmUgVFQgYnV0IGFnYWluLCB3ZSBoYXZlIGEgYmxvY2tlciBmb3IgdGhhdCBzbyBvbmx5IG9uZSBjb21iaW5hdGlvbiBvZiBUVCBsZWZ0LiAKVGhlIHZlcnkgZmlyc3QgV1NPUCB3YXMgYSB3ZWlyZCBhZmZhaXIgICB0aGUgcGxheWVycyBoYWQgdG8gdm90ZSBmb3IgdGhlIHdpbm5lci4gCkRlc2NyaXB0aW9uIGJvb2sgU2VsZWN0ZWQgU3RvcmllcyBvZiBBbGljZSBNdW5ybyBieSBBbGljZSBNdW5ybzogU2VsZWN0ZWQgU3RvcmllcyBpcyBhIHZvbHVtZSBvZiBzaG9ydCBzdG9yaWVzIGJ5IEFsaWNlIE11bnJvLCBwdWJsaXNoZWQgYnkuIEJ1eSBTZWxlY3RlZCBTdG9yaWVzIGJ5IEFsaWNlIE11bnJvIGZyb20gQW1hem9uJ3MgRmljdGlvbiBCb29rcyBTdG9yZS4gRXZlcnlkYXkgLiBhIEtpbmRsZT8gR2V0IHlvdXIgS2luZGxlIGhlcmUsIG9yIGRvd25sb2FkIGEgRlJFRSBLaW5kbGUgUmVhZGluZyBBcHAuIE9wZW4gU2VjcmV0cy4gClNvIHlvdSBjYW4gYmUgYWxsaWVzIHdpdGggdGhlc2UgcGVvcGxlLCBhbmQgeW91IGNhbiBsZXQgdGhlaXIgaWRlb2xvZ2llcyBhbmQgZ2VuZXMgc3ByZWFkIGludG8geW91ciBpZGVhbCBzb2NpZXR5LiBCZXNpZGVzLCB0aGV5IGFsbCB1cCBpbiB5b3VyIGxpdmluZyBzcGFjZSBvciB3aGF0ZXZlciB0aGUgR2VybWFucyB3YW50ZWQuIApJIExPVkVEIHRoZSBtYXRjaCBsYXN0IG5pZ2h0LiAKU3ViaXIsIG91IGZhemVyIG8gcmFpc2UsICBxdWFuZG8gdm9jIGF1bWVudGEgYSBxdWFudGlhIGRlIGRpbmhlaXJvIHF1ZSB0ZW0gbm8gcG90ZS4gU2UgbyBqb2dhZG9yICBzdWEgZXNxdWVyZGEgdGl2ZXIgYXBvc3RhZG8gMTAgY2VudGF2b3MsIGUgdm9jIGNvbG9jYXIgMTUsIHZvYyBzdWJpdSBlbSA1IGEgYXBvc3RhLiBRdWFscXVlciBqb2dhZG9yIHF1ZSBxdWlzZXIgY29udGludWFyIGEgam9nYXIgdGVyIHF1ZSBpZ3VhbGFyIGEgc3VhIGFwb3N0YS4KSSBkb24gdW5kZXJzdGFuZCB0aGlzIGJ1bGxzaGl0IGF0IGFsbC4gSSB3YXMgcmFpc2VkIGluIHRoZSA4MCBhbmQgbXkgbW9tIGFuZCBkYWQgQUxXQVlTIGNsb3NlZCB0aGUgZG9vciB3aGVuIHRoZXkgd2VyZSBpbiB0aGUgYmF0aHJvb20uIFRoZXkgYmUgYWJzb2x1dGVseSBIb3JyaWZpZWQgYXQgdGhlIGlkZWEgb2Ygc29tZW9uZSBsZXR0aW5nIHRoZWlyIGtpZHMgaW50byB0aGUgYmF0aHJvb20gdG8gd2F0Y2ggdGhlbSBnby4KSHVicyBhcmUgbm90IGp1c3QgZm9yIFdpbmRvd3MgUGhvbmUgICBTYW1zdW5nLCBhdCBsZWFzdCwgc2VlbXMgdG8gdGhpbmsgc28uIEFuZCB3aGlsZSBiZWZvcmUgdGhlcmUgdXNlZCB0byBiZSBzZXZlcmFsIGRpZmZlcmVudCBhcHBsaWNhdGlvbnMgZm9yIHRoZSB2YXJpb3VzIFNhbXN1bmcgSHVicywgaW4gdGhlIGxhdGVzdCBUb3VjaFdpeiB0aGV5J3JlIGFsbCBhY2Nlc3NpYmxlIGZyb20gb25lIGNlbnRyYWxpemVkIFNhbXN1bmcgSHViIGxvY2F0aW9uLgpUaGVuIHRoZSBsYXN0IGJvb2sgaXMgYSBiaXphcnJlIGRpc2FzdGVyIGluIGV2ZXJ5IHdheS4gClNoZSBjYWxsZWQgZXZlcnkgQ1NTIG92ZXIgdG8gInRhbGsgc29tZSBzZW5zZSIgaW50byBtZS4KSm91cm5hbDsgZGlhcnk7IHNjcmFwYm9va0NvbXBvdW5kIG9mIGRyYWUgKHRyZWUpLCByaWQgKHRoaW4pLCBhbmQgeWFuZXJlSSBnb3QgbXkgZmlyc3QgYnVqbyB0aGlzIHllYXIsIGFuZCB1c2VkIGl0IGZvciB0aGUgZmlyc3QgdGltZSEgR290dGEgc2F5LCB0aGF0IHRoaW5nIGlzIGF3ZXNvbWUsIGl0IGhlbHBzIG1lIGtlZXAgb24gY2hlY2sgYW5kIGhlbHBzIG1lIHJlbWVtYmVyIHN0dWZmIGJlY2F1c2UgSSBoYXZlIGlzc3VlcyB3aXRoIGxvbmcgdGVybSBtZW1vcnkuIApBdCAybmwsIHByZXR0eSBtdWNoIGV2ZXJ5b25lIGlzIGp1c3QgbG9vc2Ugd2VhayBwYXNzaXZlLiBCeSAyMDBubCwgYWxsIHRoZSByZWdzIHdpbGwgYmUgdmVyeSBhZ2dyZXNzaXZlLCBhbmQgc29tZSB3aWxsIGJlIGxvb3NlIGFuZCBhZ2dyZXNzaXZlLiBZb3UgZ2V0IGludG8gV0FZIG1vcmUgbWFyZ2luYWwgc2l0dWF0aW9ucyB3aXRoIHRoZXNlIHR5cGUgb2YgY29tcGV0ZW50IHBsYXllcnMuIApTaGUgY2FsbGVkIGFuZCBjb21wbGFpbmVkIGFmdGVyIHdlIHRvbGQgaGVyIHdlIGNvdWxkbiB0YWtlIGhlciB0byB0aGUgYW50aXF1ZSBzaG9wLCBldmVuIHRob3VnaCB3ZSBoYXZlIHRvIHBhc3MgaXQgb24gb3VyIHdheSB0byB0aGUgaG9zcGl0YWwgZnJvbSBoZXIgaG91c2UuLiAKUGVyaGFwcyB5b3UgYW5kIE1lbGlzc2Egd2lsbCBhZG9wdCBhbmQgaXQgd2lsbCBlbmQgdXAgYmVpbmcgdGhlIGdyZWF0ZXN0IGdpZnQgeW91IGNvdWxkIGV2ZXIgaGF2ZSB3aXNoZWQgZm9yLiBEb250IGdpdmUgdXAgb24gdGhhdCBkcmVhbS4uIApJIGp1c3Qgd2FudCB0byBzaGFyZSBhIG1lc3NhZ2Ugd2l0aCB5b3UgZ3V5cyB0aGF0IGhhdmluZyBhIG1pbGxpb24gZG9sbGFycywgb3IgYmVpbmcgYSBtaWxsaW9uYWlyZSwgaXNuIGFsbCB0aGF0IGdyZWF0LiAKU2hlIGp1c3QgdGFsa2luZyBhYm91dCBhY3R1YWxseSBlbmZvcmNpbmcgdGhlIGxhd3Mgd2UgYWxyZWFkeSBoYXZlLiAKVHVyaWtrTW9kZXJhdG9yLCBDU1MgR3V5CkkgdGhpbmsgdGhlIGFwcGVhbCB0byBpcyBhIGNlcnRhaW4gaW50ZXJtZWRpYXRlIGxldmVsIG9mIGdyb3VwIHRoYXQgaGFzbiBnb3R0ZW4gdG8gdGhlIHBvaW50IHdoZXJlIGl0IHdhbnRzIHRvIHRocm93IG91dCB0aGUgcnVsZXMgYW5kIGhhdmUgZW5vdWdoIGV4cGVyaWVuY2UgaW4gdXNpbmcgcnVsZXMgYW5kIHJ1bGluZ3MgdG8gdGhlaXIgYWR2YW50YWdlLiBSdWxlcyB3aW5kIHVwIGxpa2UgR00gYXJtb3IgYWdhaW5zdCBydWxlcyBsYXd5ZXIgcGxheWVyczsgYSB3YXkgb2YgbWFraW5nIGNvbnNpc3RlbnQgcnVsaW5ncyAoc2luY2UgcGxheWVycyB3aWxsIHJlbWVtYmVyIHRoYXQgeW91IGRpZCBpdCBkaWZmZXJlbnRseSBmb3IgdGhlIG90aGVyIGd1eXMgY2hhcmFjdGVycyk7IGFuZCBhIHdheSBvZiBtYWtpbmcgaGFyZCBkZWNpc2lvbnMgc2VlbSBvYmplY3RpdmUgYW5kIG91dCBvZiB0aGUgR00gY29udHJvbC4KRGlkIHlvdSBnbyB0byBhbiBvdXQgb2YgbmV0d29yayBwcm92aWRlcj8gSWYgbm90LCBkaWQgeW91IGNoZWNrIHlvdXIgZnJlcXVlbmNpZXM/IDk5JSBvZiBkZW50YWwgaW5zdXJhbmNlcyBhbGxvdyAxIGV4YW0gZXZlcnkgNiBtb250aHMgb3IgMiBpbiBhIGNhbGVuZGFyIHllYXIuIApGb3IgbWUsIHdobyB3YXMgbm90IGZhbWlsaWFyIGF0IGFsbCB3aXRoIHRoZSBPbHltcGljIG1vdmVtZW50cywgdGhlcmUganVzdCB3YXNuIGVub3VnaCB0aW1lIGRldm90ZWQgdG8gbGVhcm5pbmcgdGhlIHRlY2huaXF1ZSB3aGlsZSBhbHNvIGRvaW5nIGFsbCB0aGUgb3RoZXIgdHJhaW5pbmcuIElmIEkgZGlkIGl0IGFnYWluIEkgZm9jdXMgc3BlY2lmaWNhbGx5IG9uIHdlaWdodGxpZnRpbmcsIG1heWJlIGtlZXAgYmVuY2hpbmcgaW4gdG8gbWFpbnRhaW4gdGhlIG1vdmVtZW50LCB1bnRpbCBJIGhhZCBzb2xpZCB0ZWNobmlxdWUgYW5kIGNvdWxkIGdldCBhd2F5IHdpdGggcGVyZm9ybWluZyB0aGVtIGxlc3MgZnJlcXVlbnRseSB3aXRob3V0IGxvc2luZyB0aGUgc2tpbGwuIDIgcG9pbnRzICBzdWJtaXR0ZWQgMTQgZGF5cyBhZ29TdGFydCBiZWxvdyB0aGUga25lZSBjYXAsIGVuZCBvZiB0aGUgd3JhcCBjZW50ZXJlZCBhYm91dCB3aGVyZSB0aGUgcGF0ZWxsYSBjb25uZWN0cyB0byB0aGUgdGliaWEuIApUaGUgQW1lcmljYW4gVGF4cGF5ZXIgUmVsaWVmIEFjdCBvZiAyMDEyLCBwYXNzZWQgYXQgdGhlIDExdGhob3VyIChpbiBmYWN0LCBpdCB3YXMgcGFzc2VkIGFmdGVyIHRoZSBvZmZpY2lhbCBkZWFkbGluZSBvZiBEZWNlbWJlciAzMSwgMjAxMiAgIG5lYXIgbWlkbmlnaHQgb24gSmFudWFyeSAxLCAyMDEzKSwgaXMgYSBzaG9ydCB0ZXJtIGZpeCB0byB0aGUgc2VsZiBpbXBvc2VkIGZpc2NhbCBjcmlzaXMuIFRoZSBsYXN0IG1pbnV0ZSBhZ3JlZW1lbnQgc2ltcGx5IHBvc3Rwb25lZCB0aGUgZGF5KHMpIG9mIHJlY2tvbmluZyBmb3Igc2V2ZXJhbCBtb250aHMuIE5vciB3YXMgdGhlIHJlY2VudCBjbGlmZmhhbmdlciB1bnByZWNlZGVudGVkLiAKQ2FsbC4iIEhlIHRob3VnaHQgSSB3YXMgc2xvdyByb2xsaW5nLCBidXQgSSB3YXNuIHdlYXJpbmcgbXkgZ2xhc3NlcyBzaXR0aW5nIGluIHNlYXQgOCB1bmRlciBhIHRhYmxlIHdpdGggcHJldHR5IGJyaWdodCBsaWdodHMgYW5kIGhvbmVzdGx5IGRpZG4gcmVhbGl6ZSBJIGhhZCB0aGUgc3RyYWlnaHQgZmx1c2ggYW5kIHdhcyBhYm91dCA1IG1vcmUgc2Vjb25kcyBmcm9tIGZvbGRpbmcuIApUcnkgdG8gdGhpbmsgb2Ygbm90aGluZy4gClRoZSBUZWEgUGFydHkncyBvdXRzaXplZCBpbmZsdWVuY2UgcHJpbWFyaWx5IGRlcml2ZXMgZnJvbSB0aGUgZmFjdCBpdHMgc3VwcG9ydGVycyBhcmUgd2VsbCBvcmdhbmlzZWQgd2hlcmVhcyByYW5rIGFuZCBmaWxlIFJlcHVibGljYW5zIGFyZSByZWxhdGl2ZWx5IGRpc3BlcnNlZC4gVGhlIGZhY3QgdGhhdCBUZWEgUGFydHkgc3VwcG9ydGVycyB2b3RlIGluIGhpZ2ggcHJvcG9ydGlvbnMgaW4gUmVwdWJsaWNhbiBwcmltYXJpZXMgZW5hYmxlcyB0aGVtIHRvIG5vbWluYXRlIGNhbmRpZGF0ZXMgd2hvc2UgcG9zaXRpb25zIGFyZSBhdCBvZGRzIHdpdGggdGhvc2Ugb2YgcmFuayBhbmQgZmlsZSBSZXB1YmxpY2Fucy4gU2ltaWxhcmx5LCBSZXB1YmxpY2FuIG9mZmljZWhvbGRlcnMgbWF5IHN1cHBvcnQgVGVhIFBhcnR5IHBvc2l0aW9ucyBsZXNzIGZyb20gZ2VudWluZSBjb252aWN0aW9uIHRoYW4gZnJvbSBmZWFyIG9mIGhhdmluZyB0byBmYWNlIG9mZiBhZ2FpbnN0IGEgVGVhIFBhcnR5IGJhY2tlZCBjYW5kaWRhdGUgYXQgdGhlIG5leHQgcHJpbWFyeSAodGhlIFRlYSBQYXJ0eSBhbHNvIGJlbmVmaXRzIGZyb20gdGhlIGxhdmlzaCBmaW5hbmNpYWwgc3VwcG9ydCBvZiBhZmZsdWVudCB1bHRyYSBjb25zZXJ2YXRpdmVzLCBpbmNsdWRpbmcgdGhlIGJpbGxpb25haXJlIGJyb3RoZXJzIENoYXJsZXMgYW5kIERhdmlkIEtvY2gpLi4gCkZJRERFUywgSHVnaCBBbmRyZXcgU2VwdGVtYmVyIDE4LCAxOTM2IEZlYnJ1YXJ5IDE0LCAyMDE3IEh1Z2ggQW5kcmV3IEZpZGRlcyBwYXNzZWQgYXdheSBwZWFjZWZ1bGx5IGF0IFN0LiBKb3NlcGgncyBIb3NwaXRhbCBpbiBIYW1pbHRvbiwgT250YXJpby4gClBlb3BsZSBpbiBDb3JwdXMgYXJlIHNoaXR0eS4gCkl0IHRvb2sgYWJvdXQgdHdvIHllYXJzIHRvIGNvbnN0cnVjdCB0aGUgaG9tZSBhbmQgb3RoZXIgc3RydWN0dXJlcywgd2hpY2ggc2l0IG9uIDUuNyBhY3JlcyBvZiBncm91bmRzIHdpdGggbW9yZSB0aGFuIDQsMDAwIHBsYW50aW5ncy4gVGhlIHNwYWNpb3VzIG1haW4gaG9tZSBmZWF0dXJlcyBhIGdyZWF0IHJvb20gd2l0aCBhIGJlYW1lZCBjYXRoZWRyYWwgY2VpbGluZyBtYWRlIGZyb20gYW50aXF1ZSB3b29kIChzb21lIG9mIHdoaWNoIGlzIG1vcmUgdGhhbiA0MDAgeWVhcnMgb2xkKS4gVGhlcmUncyBhbHNvIGEgY2hlZidzIGtpdGNoZW4sIGEgYnJlYWtmYXN0IHJvb20gYW5kIGEgdGhyZWUgbGV2ZWwgZmFtaWx5IHJvb20gd2l0aCBmbG9vciB0byBjZWlsaW5nIHdpbmRvd3MgYW5kIGxha2Ugdmlld3MuLiAKV2FzIHNlZWluZyBhIG1hc3NhZ2UgdGhlcmFwaXN0IGEgY291cGxlIG9mIHRpbWVzIGEgbW9udGggYW5kIGl0IGJlY2FtZSB2ZXJ5IGV4cGVuc2l2ZS4gCkhvdyBkbyB5b3UgYmUgc3RyYWlnaHQ/CllvdSBtYWtlIHlvdSBoYXBweS4gClJvdWdobHkgMjAwIENNT3MgYXR0ZW5kZWQgdGhlIHNlc3Npb25zIGF0IEFOQSwgYW5kIHRoZSBzZXNzaW9ucyB3aWxsIGNvbnRpbnVlIGluIENhbm5lcyBuZXh0IHllYXIuIApPciBob3cgb2Z0ZW4gaXMgYSBwbGF5ZXIgZHJhd2luZyBkZWFkIGluIHRoZSBnYW1lPyBGb3IgZXhhbXBsZSBEZXZpbiBmcm9tIEJCMTYgaXQgbG9va2VkIGxpa2UgaGUgY291bGQgbmV2ZXIgd2luIHRoZSBnYW1lIGJ1dCBpZiBoZSBwbGF5ZWQgMTAwLDAwMCB0aW1lcyBJIHN1cmUgaGUgY291bGQgZmluZCBhIGNvdXBsZSB2aWN0b3JpZXMuCkV2ZXJ5b25lIG9uIGdyaWxsIGhhcyBhIG1lbHQgZG93biBteSBjbyB3b3JrZXJzIHRlbGwgZmlyc3QgZ3V5IHRvIGdldCBmdWNrZWQgYW5kIGNvb2sgaGlzIG93biBmb29kLiBIZSBqdW1wZWQgb3ZlciB0aGUgY291bnRlciBzdGFydGVkIHNjcmVhbWluZy4gCjI4IEphbiAyMDEzIC4gTk9URTogQSBjb3VwbGUgd2Vla3MgYmFjaywgd2UgcmVjZWl2ZWQgdGhlIEZTdG9wcGVyJ3MgSG93IHRvIEJlY29tZSBBIFByb2Zlc3Npb25hbCBXZWRkaW5nIFBob3RvZ3JhcGhlciBEVkQuIApJIHN0aWxsIGdvaW5nIHRvIGdvIGZvcndhcmQgd2l0aCBhcHBseWluZyBmb3IgYm90aCByb2xlcywgYnV0IEkgZGlzYXBwb2ludGVkIEkgZ3Vlc3M/IEkgd291bGQgb25seSB0YWtlIHRoZSB1bml2ZXJzaXR5IGpvYiBmb3IgY2FyZWVyIGdyb3d0aC9maW5hbmNpYWwgZ3Jvd3RoLCBidXQgSSBub3QgdGhhdCBkZWFkIHNldCBvbiBpdCBhcyB0aGUgd2F5IEkgYW0gd2l0aCB0aGUgaW50ZXJuYWwgam9iLiBUaGVuIHRoZSBpbnRlcm5hbCBqb2IgaXMgbm93IG5vdCB3aGF0IEkgYmVlbiB3YWl0aW5nIGZvciBhbGwgdGhlc2UgeWVhcnMsIHNvIEkgcHJldHR5IGJ1bW1lZCB0aGF0IGlmIEkgZG8gZ2V0IGl0LCBJIHdvbiBiZSBkb2luZyB0aGUgdGhpbmdzIHRoYXQgSSBleGNlbCBhdC4KSWwgZXN0IGRvbW1hZ2UgcXVlIGxlcyB1c2FnZXMgZHZveXMgZGUgY2V0dGUgcGxhbnRlIGFpZW50IG1pcyAgbWFsIHNvbiB1dGlsaXNhdGlvbiBlbiB0aHJhcGllLCB2dSBxdSdlbGxlIHBvc3NkZSBkZXMgdmVydHVzIGluZG5pYWJsZXMgZGFucyBjZSBkb21haW5lLCBjb21tZSBub3VzIGFsbG9ucyBsZSBjb25zdGF0ZXIuLiAKSSBoYXZlIGEgaGFsZiBicm90aGVyIGFuZCBzaXN0ZXIgSSBoYXZlIG5vIHJlbGF0aW9uc2hpcCB3aXRoLCBiZWNhdXNlIG15IG1vdGhlciBkaWRuIHdhbnQgbWUgdG8gaW50ZXJhY3Qgd2l0aCB0aGUgb3RoZXIgd29tYW4ga2lkcy4gCldlbGwsIHllcywgcHJheWVyIGlzIHRhdWdodCBpbiByZWxpZ2lvbnMsIGJ1dCB0aGUgcmVsaWdpb25zIGFyZSBvZnRlbiBjaG9jayBmdWxsIG9mIHRveGljIHNoYW1lLCBzbyBnb29kIGx1Y2sgdGhlcmUhLiAKSSBncmV3IHVwIGluIGFuICJhdCByaXNrIiBuZWlnaGJvdXJob29kIGJ1dCB3ZW50IHRvIG9uZSBvZiB0aGUgdXBzY2FsZSBzY2hvb2xzIGluIHVwdG93biAobm90IHRvbyBmYXIgZnJvbSB3aGVyZSB0aGlzIHNob290aW5nIHRvb2sgcGxhY2UpLiBJIGNhbiB0ZWxsIHlvdSBmcm9tIGV4cGVyaWVuY2UgdGhvc2Ugd2hpdGUga2lkcyBnZXQgdHJlYXRlZCB0aGUgc2FtZSAoaWYgbm90IHdvcnNlLiBjb3BzIGRlc3Bpc2UgZW50aXRsZWQgcmljaCBraWRzIG1vcmUgdGhhbiBhbnlib2R5KSBhcyBhIGJsYWNrIGtpZCBmcm9tIHRoZSBnaGV0dG8uIFRoZSBkaWZmZXJlbmNlIGlzIHRoYXQgdGhlcmUgdXN1YWxseSBpc24gdGhlIHNhbWUgYW1vdW50IG9mIGJhZ2dhZ2UuIFRob3NlIHdoaXRlIGtpZHMgb2Z0ZW4gZG9uIGhhdmUgYSBoaXN0b3J5IHdpdGggdGhlIHBvbGljZS4gVGhleSB1c3VhbGx5IGRvbiBoYXZlIGd1bnMgb24gdGhlbSBvciBhY3RpdmUgd2FycmFudHMuIEFsbCBvZiB0aGlzIG1ha2VzIGEgZGlmZmVyZW5jZSBhbmQgZ2V0IGlnbm9yZWQgdG8gc3VpdCB0aGlzIGJ1bGxzaGl0IG5hcnJhdGl2ZS4KVGhhdCdzIHdoYXQgaGFwcGVucyBpbiBhIExUUi4gWW91IGhhdmUgbW9tZW50cyBvZiBiZWluZyBub3QgdGhhdCBpbnRvIGl0IGJ1dCBkb2luZyBpdCBiZWNhdXNlIHlvdSBsb3ZlIHlvdXIgU08uIApPbmxpbmUgZ2FtaW5nIG5vdCBvbmx5IHByb21pc2VkIGEgd2lkZSBzZWxlY3Rpb24gb2YgZ2FtZXMsIG1pcnJvcmluZyB0aGF0IG9mIGEgdHlwaWNhbCBsYW5kIGJhc2VkIGNhc2lubywgYnV0IGl0IGFsc28gYnJvdWdodCB3aXRoIGl0LCByZXdhcmRzLiBXaGVuIGluc2lkZSBhIGNhc2lubywgcGxheWVycyBvZnRlbiBoYWQgYWNjZXNzIHRvIHNvbWUgdHlwZSBvZiByZXdhcmRzIGNhcmQgdGhhdCBjb3VsZCBiZSBpbnNlcnRlZCBpbnRvIGEgc2xvdCBtYWNoaW5lIG9yIGhhbmRlZCB0byBhIGRlYWxlciBkdXJpbmcgdGFibGUgZ2FtZSBwbGF5LCBpbiBvcmRlciB0byByYWNrIHVwIHBvaW50cyBmb3IgcGxheSwgd2hpY2ggY291bGQgbGF0ZXIgYmUgcmVkZWVtZWQgZm9yIGNhc2ggYW5kL29yIHJld2FyZHMuIFRoZXJlZm9yZSwgaXQgb25seSBtYWRlIHNlbnNlIGZvciBvbmxpbmUgY2FzaW5vcyB0byBpbXBsZW1lbnQgYSBzaW1pbGFyIHN5c3RlbS4gClRoZSBiYXNpYyBjb25jZXB0IG9mIHRoZSB3b3Jrb3V0IGlzIHJlc2lzdGl2ZSBzdHJldGNoaW5nLiBCdXNjaCBoZWxwcyBhIGNsaWVudCB0aHJvdWdoIGEgc2VyaWVzIG9mIHN0cmV0Y2hlcyB3aGVyZWJ5IGhlIG1vdmVzIHlvdXIgbGltYnMgd2hpbGUgeW91IHJlc2lzdCB0aG9zZSBtb3ZlbWVudHMuIApJIHdvdWxkIGxvdmUgdG8gcnVuIGEgc3ViIDI1IDVrLCBhbmQgc2VlIG15c2VsZiBpbiB0aGUgbWlkZGxlIG9yIHRvcCA1MHRoIHBlcmNlbnRpbGUgb2YgcnVubmVycyBpbiBteSBhZ2UgcmFuZ2Ugd2hlbiBJIGxvb2sgYXQgcmFjZSByZXN1bHRzLi4gClRoZXJlIGFyZSBhYm91dCB0d28gbHVuYXIgZWNsaXBzZXMgcGVyIHllYXIsIE5BU0Egc2F5cy4gU29tZSBvZiB0aGVtICAgcGVudW1icmFsLCBvciBiYXJlbHkgdmlzaWJsZSwgZWNsaXBzZXMgICBhcmUgc28gc3VidGxlLCB0aGV5IGdvIGdyZWF0bHkgdW5ub3RpY2VkLgpJdCdzIGEgd2Vla2RheSBhZnRlcm5vb24gYXQgVHJpcHBlcidzLCBhIExhbnNpbmcgc3BvcnRzIGJhciB3aXRoIGFuIDExIHRhYmxlIHBlcm1hbmVudCBwb2tlciByb29tLiBTaW1pbGFyIHNjZW5lcyBwbGF5IG91dCBlYWNoIGRheSBhbmQgbmlnaHQgYXQgYWJvdXQgNDAgbG9jYXRpb25zIHRocm91Z2hvdXQgTWljaGlnYW4sIHdoZXJlIG1pbGxpb25zIG9mIGRvbGxhcnMgYXJlIHJhaXNlZCBmb3Igc2Nob29scywgY2h1cmNoZXMsIExpb25zIENsdWJzLCBhbmQgb3RoZXIgbm9ucHJvZml0cy4KRmlyc3QgdGltZSBJIGRpZ2VzdGVkIHRoYXQgbm8gbWF0dGVyIHdoYXQsIHRoZSB3b3JsZCBrZWVwcyBzcGlubmluZy4gSSd2ZSBmcmVxdWVudGx5IHJlY291bnRlZCB0aGF0IGRheSwgYW5kIG92ZXIgdGltZSwgbXkgcGVyc3BlY3RpdmUgb24gaXQgaGFkIGJlZW4gMzYwLiAKTm8gTG93IEVmZm9ydCBvciBEaXNjb3VyYWdlZCBQb3N0cwpQcmVsaW1pbmFyeSBhbmltYWwgc3R1ZGllcyBwb2ludGVkIHRvIGEgcm9sZSBvZiBtYWduZXNpdW0gaW4gZGVwcmVzc2lvbiwgYXMgZGVwbGV0aW9uIG9mIG1hZ25lc2l1bSBpbiB0aGUgZGlldCBvZiBtaWNlIGxlYWQgdG8gZW5oYW5jZWQgZGVwcmVzc2lvbiAgYW5kIGFueGlldHkgcmVsYXRlZCBiZWhhdmlvciBzdWNoIGFzIGluY3JlYXNlZCBpbW1vYmlsaXR5IHRpbWUgaW4gdGhlIGZvcmNlZCBzd2ltIHRlc3QgKDEyKS4gSW4gdGhlIGZvcmNlZCBzd2ltIHRlc3QsIGEgY29tbW9uIGFzc2F5IGZvciBleGFtaW5pbmcgZGVwcmVzc2lvbiBsaWtlIGJlaGF2aW9yIGluIHJvZGVudHMsIHRoZSBhbmltYWwgaXMgY29uZmluZWQgdG8gYSBjb250YWluZXIgZmlsbGVkIHdpdGggd2F0ZXIgYW5kIG9ic2VydmVkIGFzIGl0IGF0dGVtcHRzIHRvIGVzY2FwZS4gVGhlIHRpbWUgaW4gd2hpY2ggdGhlIGFuaW1hbCBleGhpYml0cyBpbW1vYmlsaXR5IGlzIHVzZWQgYXMgYSBiYXJvbWV0ZXIgb2YgZGVzcGFpciwgaW5kaWNhdGluZyB0aGF0IHRoZSBhbmltYWwgaGFzIHN1Y2N1bWJlZCB0byBhIGZhdGUgb2YgZHJvd25pbmcgKDEpLi4gCkluIGFsbCwgdGhlIGNvdXJ0IHNldCBhc2lkZSBmaXZlIGFuZCBhIGhhbGYgaG91cnMgdG8gaGVhciBmcm9tIG1vcmUgdGhhbiBhIGRvemVuIGludGVyZXN0ZWQgcGFydGllcy4KNyBvZiBteSByZWFsIGxpZmUgZnJpZW5kcyBoYXZlIHF1aXQgYXMgb2YgdGhpcyBtb3JuaW5nIGJlY2F1c2Ugb2YgRFBTIHF1ZXVlcy4gTm90IGV4YWdnZXJhdGluZy4gQW5kIEknbSB1cHNldC4gU29tZXRoaW5nIG5lZWRzIHRvIGJlIGRvbmUuIEJ1dCBubyBhbW91bnQgb2YgaW5jZW50aXZlcyBhcmUgZ29pbmcgdG8gbWFrZSBwZW9wbGUgdGFuayBhbmQgaGVhbCBsb2wuIFVubGVzcyBhIG5ldyBjbGFzcyBpcyBnb2luZyB0byBjb21lIG91dCwgd2hpY2ggd29uIGhhcHBlbiwgbm90aGluZyB3aWxsIGNoYW5nZS4KUmF0aGVyLCBpdCB3YXMgRGFuaWVsIHN1ZmZlcmluZyBhIGhhbXN0cmluZyBwdWxsIGxhc3Qgd2Vlay5SdW5uaW5nIGhhcyBhbHdheXMgYmVlbiBhIGJpZyBwYXJ0IG9mIHRoZWlyIGxpdmVzLCBIZW5yaWsgc2FpZC53YXMgYWx3YXlzIGEgYmlnIHBhcnQgb2Ygb3VyIHRyYWluaW5nIGluIHRoZSBzdW1tZXIsIGhlIHNhaWQuIExvdCBvZiBwbGF5ZXJzIGRvbiBkbyB0aGF0IGJlY2F1c2Ugb2YgdGhlaXIga25lZXMgb3IgdGhleSB0b28gaGVhdnksIGJ1dCB3ZSBhbHdheXMgZGlkLiAKU2hlIGp1c3Qgbm90IGEgbGlrYWJsZSBwZXJzb24gYXQgYWxsLiAKV2l0aCBhIHJlc3BlY3RhYmxlIGNob2ljZSBvZiA0MCBMaXZlIENhc2lubyB0YWJsZXMgdG8gcGxheSBhdCwgeW91IGNhbiBlbmpveSBhIGxpdmUgZ2FtZSBvZiBSb3VsZXR0ZSwgQmFjY2FyYXQsIEJsYWNramFjayBvciBQb2tlci4gVGhvc2Ugd2hvIGxpa2UgdG8gYmV0IG9uIHNwb3J0cyB3aWxsIGFwcHJlY2lhdGUgdGhlIG9wcG9ydHVuaXR5IHRvIHBsYWNlIGJldHMgb24gb3ZlciAzMCwwMDAgZXZlbnRzIGVhY2ggeWVhciBpbmNsdWRpbmcgZm9vdGJhbGwsIGdvbGYsIGJhc2tldGJhbGwsIGJhc2ViYWxsLCBob2NrZXksIGhvcnNlIHJhY2luZywgdGVubmlzIGFuZCBtYW55IG1vcmUuLiAKV2hhdCB0aGV5IHRhbGsgYWJvdXQgaXMgdGhlaXIgcmlnaHRzIGFuZCB3aGVuIGl0IHN1aXRzIHRoZW0sIHRoZSBzYWNyZWRuZXNzIG9mIHRoZWlyIGZhbWlsaWVzIGFuZCB0aGVpciBjaGlsZHJlbi4uIApUaGlzIGhhcyBibGVkIG92ZXIgdG8gdGhlIEV4cGFuc2Ugd2hlcmUgdGhleSBtYWRlIEphbWVzIEhvbGRlbiBsb29rIGFuZCBhY3Qgd2F5IHRvbyBtdWNoIGxpa2UgSm9obiBTbm93Li4gCkJvdGggb2YgdGhlIHdlYXBvbnMgdXNlZCBieSBMdWJrZSBhaXJjcmFmdCBzZWVtIGFzIHRob3VnaCB0aGV5IHdvdWxkIGJlIGRldmFzdGF0aW5nLCBhbmQgaW5kaXNjcmltaW5hdGUuIApJIGd1ZXNzIG15IG5ldyBzdXBlciBhbWF6aW5nIChhbmQgdmVyeSBwcm90ZWN0aXZlISkgcGl0IGJ1bGwgbWl4IG11c3QgaGFkIHNjYXJlZCB0aGVtIG9mZiwgYW5kIHRoZXkgbW92ZWQgb3V0IGltbWVkaWF0ZWx5IGFmdGVyIEkgcmVzY3VlZCBoaW0uIElmIGl0IHdhc24ndCBmb3IgZ2V0dGluZyBhIGRvZywgSSB3b3VsZCBsaWtlbHkgbmV2ZXIgaGF2ZSBrbm93bi4gCklmIHRoZSBkZWNrIGlzIGZpbGxlZCB3aXRoIGFjZXMsIHRoZXJlIGlzIGhpZ2ggY2hhbmNlIHRoYXQgeW91IGhpdCBibGFja2phY2suIFdoZW4gdGhlIHBsYXllciBoYXMgYmxhY2tqYWNrLCB0aGUgcGF5IG9mZiBvZGRzIGFyZSAzOjIuIApHZXQgdGhpcyBuZXdlc3QgYWxidW1mcm9tIGlUdW5lcyEgMTUpIFJldHJvIERhbmNlRnJlYWsgLiAKV2hlbiBoZSBhbmQgSSB3ZXJlIGRhdGluZyBtYW55IHllYXJzIGFnbyB3ZSB3ZXJlIGRyaXZpbmcgZG93biBhIGNvdW50cnkgcm9hZCBhbmQgdGhpcyBjaXR5IGJveSBzYWlkLCAnbG9vayBob3JzZXMuJ0kgc2FpZCAndW1tbSwgdGhvc2UgYXJlIGNvd3MuJyBGcm9tIHRoZW4gb24gaGUgd291bGQgc2VlIGNvd3MgYW5kIHNheSAsICdsb29rLiBIb3JzZXMnIGFuZCBJIHdvdWxkIGxhdWdoLiAKRXZlbiBSdXNzaWFuIEZvcmVpZ24gTWluaXN0ZXIgU2VyZ2V5IExhdnJvdiwgbm90b3Jpb3VzIGZvciBoaXMgY2FyZWZ1bGx5IHBocmFzZWQgImRpcGxvbWF0ZXNlIiwgZGlkIG5vdCBzcGFyZSBzdXBlcmxhdGl2ZXMgYWJvdXQgdGhlIHN1bW1pdCdzIHJlc3VsdHMuCkkgZG9uJ3Qgd2FudCB0byBzdGFydCBhIGJ1bmNoIG9mIGFyZ3VtZW50cy4gQnV0IEkgYWxzbyB0aGluayB0aGF0IEdsb2JhbCBpcyB1bnJlYWxpc3RpYy4gUGVvcGxlIG9uIHRoZSBpbnRlcm5ldCBhcmUgc3BsaXQgZG93biB0aGUgbWlkZGxlIHdpdGggdGhlIHNpdGUuIApXaGF0ZXZlciBjb3JydXB0aW9uIGV4aXN0ZWQgaW4gdGhlIG9yZ2FuaXphdGlvbiBpdCB3YXMgbm90aGluZyBjb21wYXJlZCB0byBtaWxpdGFyeSBjb250cmFjdG9ycyBhbmQgdGhlIGJhbmtzLiAKVGhlIGJlc3Qgd2F5IGZvciBtZSB0byBwZXJzb25hbGx5IGRlc2NyaWJlIGl0LCBpcyBpZiBJJ20gbGF5aW5nIGluIGJlZCBvciBhbnkgcm9vbSB0aGF0J3Mgc3VwZXIgcXVpZXQsIEkgaGVhciBmYWludCBzb3VuZHMgb2YgbXVzaWMuIApBIGZldyB5ZWFycyBhZ28gSSBiZWdhbiB0byBnZXQgcmVxdWVzdHMgdG8gbGV0IHN0cmFuZ2UgbWVuIGFuZCB3b21lbiBzbGVlcCBpbiBteSBob3VzZS4gCkNvbmNsdXNpb246IE91ciByZXN1bHRzIGNvbmZpcm0gdGhhdCB2aXRhbWluIEQgZGVmaWNpZW5jeSBpcyBhc3NvY2lhdGVkIHdpdGggYSBzdWJzdGFudGlhbGx5IGluY3JlYXNlZCByaXNrIG9mIGFsbCBjYXVzZSBkZW1lbnRpYSBhbmQgQWx6aGVpbWVyIGRpc2Vhc2UuIFRoaXMgYWRkcyB0byB0aGUgb25nb2luZyBkZWJhdGUgYWJvdXQgdGhlIHJvbGUgb2Ygdml0YW1pbiBEIGluIG5vbnNrZWxldGFsIGNvbmRpdGlvbnMuIApUaGVyZSBhcmUgbWFueSBjb25zaWRlcmF0aW9ucyB3aGVuIHB1cmNoYXNpbmcgY2FzaW5vIHF1YWxpdHkgcG9rZXIgY2hpcHMuIElmIHlvdSByZXNlYXJjaCByZXRhaWxlcnMgaW4gdGhpcyBwYXJ0aWN1bGFyIG5pY2hlIG9ubGluZSwgb3IgZXZlbiBpbiB5b3VyIGxvY2FsIGNvbW11bml0eSwgeW91IHdpbGwgZmluZCB0aGF0IHRoZXJlIGFyZSB0aG91c2FuZHMgdXBvbiB0aG91c2FuZHMgb2Ygc3BlY2lhbHR5IHN0b3JlcyB0aGF0IHNlbGwgcG9rZXIgY2hpcHMuIFdpdGggYWxsIHRoZSBjaG9pY2VzIHRoYXQgeW91IGhhdmUgd2hlbiBpdCBjb21lcyB0byBnYW1pbmcgc3VwcGxpZXMsIHBhcnRpY3VsYXJseSBwb2tlciBjaGlwcywgaXQgaXMgZXNzZW50aWFsIHRvIGtub3cgYW5kIHVuZGVyc3RhbmQgd2hhdCB0byBsb29rIGZvci4uIApQcmVzcyB0aGUgImRlYWwiIGJ1dHRvbiB0byBiZWdpbiB0aGUgZ2FtZS4gVGhlIG1hY2hpbmUgd2lsbCBkZWFsIHlvdSBmaXZlIGNhcmRzLiAKUmVnaXN0ZXJlZCBhcyBhIG1lZGljYWwgY2xpbmljLCBpdCBvZmZlcnMgYSB3aWRlIHJhbmdlIG9mIHNwYSBhbmQgaG9saXN0aWMgbWVkaWNhbCB0cmVhdG1lbnRzLCBzdWNoIGFzIGFjdXB1bmN0dXJlIGFuZCBBeXVydmVkaWMgdGhlcmFwaWVzLCBhbmQgYWN0aXZpdGllcyBsaWtlIHRhaSBjaGkgYW5kIFBpbGF0ZXMgKGluIHRoZSBjb3VudHJ5J3Mgb25seSBQaWxhdGVzIHN0dWRpbykuIApVbmUgaWNvbm9ncmFwaGllIHRycyByaWNoZSBxdWkgbm91cyBtb250cmUgTW9udG1hcnRyZSBkZXMgZGJ1dHMgZGUgbGEgcGhvdG8gKDE4NTAvMTg2MCkgIHVuZSBwb3F1ZSBwbHVzIHJjZW50ZSAoMTkyMC8xOTMwKSwgcGFzIGRlIHBob3RvcyBhY3R1ZWxsZXMuIApEYXJlIHRvIGJlIGJvbGQ6U2hlIG1haW50YWluZWQgaGVyIGRhcmluZyBhcHBlYXJhbmNlIGFzIHRoZSBlbnNlbWJsZSBmZWF0dXJlZCBhIHNpenpsaW5nIHRoaWdoIGhpZ2ggc2xpdCwgZmxhc2hpbmcgYSBoaW50IGF0IGhlciBsZWcgdGF0dG9vCkl0IHdhc24gYW4gZXNwZWNpYWxseSBpbnRlbnNlIHBhaW4sIGJ1dCBJIGluanVyZWQgbXkgYmFjayBhIGNvdXBsZSBvZiB5ZWFycyBhZ28sIGhlcm5pYXRlZCBkaXNjIHdhcyBwaW5jaGluZyBhIG5lcnZlIGluIG15IHNwaW5lIHNlbnQgY29uc3RhbnQgcGFpZCB0aHJvdWdoIG15IGxlZnQgYnV0dG9jayBhbmQgbGVnLiBJdCB3YXMgYSBsb25nIGR1bGwgYWNoZSwgZm9yIGFib3V0IHNpeCB3ZWVrcyBubyBtYXR0ZXIgaG93IEkgd3JpZ2dsZWQgb3Igd3JpdGhlZCwgbm8gbWF0dGVyIHdoYXQgcG9zaXRpb24gSSB0cmllZCB0byByZXN0IGluLCBJIGNvdWxkIG5ldmVyIGdldCBhd2F5IGZyb20gaXQuIEkgY291bGRuIGV2ZW4gc2xlZXAsIEkgbWlnaHQgZG96ZSBvZmYgZm9yIDIwIDQwIG1pbnV0ZXMgYnV0IHRoZSBwYWluIHdvdWxkIGFsd2F5cyB3YWtlIG1lIHVwIGFuZCBmb3JjZSBtZSB0byBzaHVmZmxlIGFyb3VuZCB0cnlpbmcgdG8gZG8gc29tZXRoaW5nIGFib3V0IGl0LiBJIHdhcyBnaXZlbiBhIHZhcmlldHkgb2YgZGlmZmVyZW50IHBhaW4gcmVsaWVmIHByZXNjcmlwdGlvbnMgYnV0IG5vbmUgb2YgdGhlbSBoZWxwZWQsIHRoZXkganVzdCBtYWRlIG1lIHNsaWdodGx5IG1vcmUgZGVsaXJpb3VzIHRoYW4gSSBhbHJlYWR5IHdhcy4KSW4gdGhlIGxhdW5jaCBjYW1wYWlnbiwgdGhlIGNoYW5uZWwgaXMgcHJvbW90aW5nIHR3byBvZiBpdHMgc2hvd3MgICBQb2tlciBGYWNlLCB3aGljaCBpcyB0aGUgSW5kaWFuIGFkYXB0YXRpb24gb2YgYW4gaW50ZXJuYXRpb25hbCBnYW1lIHNob3csIGFuZCBTYXJrYWFyIEtpIER1bml5YSwgYSBob21lZ3Jvd24gcmVhbGl0eSBzaG93LCB3aGVyZSBhIGdyb3VwIG9mIDE4IHBlb3BsZSBvbiBhIGRlc2VydGVkIGlzbGFuZCBhcmUgZ292ZXJuZWQgYnkgYW4gYXV0b2NyYXRpYyBTYXJrYWFyLiBUaGUgY2hhbm5lbCB3aWxsIGJlIHByb21vdGVkIHZpYSB0aGUgc2hvdyBwcm9tb3Rpb25zLgpUaGUgR0kgd2FzIG9uZSBvZiB0aGUgNDB0aCBEaXZpc2lvbiBtZW4gd2hvIGRvY2tlZCBhdCBTZWF0dGxlIG92ZXIgdGhlIHdlZWsgZW5kLiBTdG9yeSBvbiBQYWdlIDIuIApXZWxsLCBzaGUgd2VudCBNRU5UQUwgYmVjYXVzZSBpdCB0aGUgbmFtZSBTSEUgd2FudHMgcm8gdXNlLiAKSSBrbm93IGEgeW91bmcgbWFuIHdobyBpcyB0aGUgcHJvZHVjdCBvZiBleHRyZW1lIHdlYWx0aCBhbmQgcHJpdmlsZWdlLiAKIkFmdGVyIGEgeWVhciwgSSByZWFsbHkgc3RhcnRlZCBzZWVpbmcgbHVtcHMgdW5kZXIgbXkgZXllcywgYW5kIGl0IG1hZGUgbWUgdW5jb21mb3J0YWJsZSwnJyBzaGUgc2F5cy4gIkluamVjdGlvbnMgdXN1YWxseSB3ZWFyIG9mZiBhZnRlciBhIHdoaWxlLCBidXQgdGhlc2Ugd2VyZW4ndCBnb2luZyBhd2F5IGFuZCBJIGRpZG4ndCB3YW50IHRvIHdhbGsgYXJvdW5kIGxpa2UgYW4gYWR2ZXJ0aXNlbWVudCBmb3IgYmFkIGZpbGxlci4gCkhvdyBtYW55IGdyYW1teWhhcyBMYWR5IEdhZ2EKT3V0ZG9vciBzaG9wcyBzdWNoIGFzIGNvZmZlZSBzaG9wcywgY3VsaW5hcnkgc3R1ZGlvcyBhbmQgbW9yZSBhcmUgaG9tZSB0byBwZXJmb3JtZXJzIGFzIHRoZXkgcHVyc3VlIHRoZWlyIGRyZWFtcy4gCldoZW4gaGUgd2FzIGZpcnN0IHF1ZXN0aW9uZWQgYWJvdXQgdGhlIHN0b3J5IGJ5IHJlcG9ydGVycyBhYm9hcmQgQWlyIEZvcmNlIE9uZSwgVHJ1bXAgZGVuaWVkIGtub3dpbmcgYWJvdXQgc3VjaCBwYXltZW50cy4gClBhcmtpbiwgQi4sIFdhcnJpbmVyLCBLLiBhbmQgV2Fsc2gsIFYuIDIwMTcuIEd1bnNsaW5nZXJzLCBwb2tlciBwbGF5ZXJzLCBhbmQgY2hpY2tlbnMgMTogRGVjaXNpb24gbWFraW5nIHVuZGVyIHBoeXNpY2FsIHBlcmZvcm1hbmNlIHByZXNzdXJlIGluIGVsaXRlIGF0aGxldGVzLiBpbjogV2lsc29uLCBNLiwgV2Fsc2gsIFYuIGFuZCBQYXJraW4sIEIuIChlZC4pIFNwb3J0IGFuZCB0aGUgQnJhaW46IFRoZSBTY2llbmNlIG9mIFByZXBhcmluZywgRW5kdXJpbmcgYW5kIFdpbm5pbmcsIFBhcnQgQiBFbHNldmllci4gcHAuIGFuZCBSb3dlLCBKLiAyMDE2LiBOZXR3b3JrIG1lY2hhbmlzbXMgb2YgaW50ZW50aW9uYWwgbGVhcm5pbmcuIE5ldXJvSW1hZ2UuIDEyNywgcHAuIGFuZCBIYW1wc2hpcmUsIEEuIDIwMTUuIC4gSm91cm5hbCBvZiBOZXVyb3NjaWVuY2UuIDM1ICgyMCksIHBwLiA3NjYwIDc2NzMuCldoaWNoIGlzIGdyZWF0IGJlY2F1c2UgSSBzdWNrIGF0IHJoeW1pbmcgbG9sLi4gCiJUaGUgc3R1ZGlvIGFuZCBBYXJvbiBzYWlkIEkgc2hvdWxkIHNpdCBkb3duLCBzZWUgaXQgd2l0aCBteSBmYW1pbHkgaW4gYW4gZW1wdHkgdGhlYXRyZS4gSSBzYWlkLCAnbm8sIEknbGwganVzdCBzZWUgZ28gc2VlIGl0IGF0IFRvcm9udG8nLiAKU29tZSBhbnhpZXR5IGNvbWVzIGZyb20gdGhlIGlkZWEgdGhhdCB0aGUgd2F5IFlPVSBkbyBzb21ldGhpbmcgaXNuIHRoZSB3YXkgaXQgc2hvdWxkIGxvb2suIENoYW5nZSB0aGF0IGJlbGllZiBzbyB0aGF0IHRoZSB3YXkgeW91IGRvIGl0IElTIHRoZSB3YXkgaXQgc2hvdWxkIGJlIGRvbmUuIE5vdCBieSBldmVyeW9uZSBuZWNlc3NhcmlseSwgYnV0IGJ5IHlvdS4gWW91IGFyZSB1bmlxdWUsIHlvdSBhcmUgYSB0cmVhdC4gTm8gb25lIGNhbiBmaW5kIHdoYXQgWU9VIGhhdmUsIGFueXdoZXJlIGVsc2UuIFRoZXkgaGF2ZSB0byBjb21lIHRvIHlvdSBmb3IgdGhhdC4gTm93LCB0aGF0IHdoYXQgeW91IGFyZSBwdXR0aW5nIG9uIGRpc3BsYXkuCkxvZ2ljYWxseSBpZiB5b3Ugc3RhcnQgd2l0aCB0aGUgcHJlbWlzZSB0aGF0ICJpZiIgeW91IGNhbid0IHNlbGwgdGhlIG9wdGlvbiBhbmQgdGhlIG9ubHkgdGhpbmcgeW91IGNhbiBkbyBpcyBleGVyY2lzZSBvciBkbyBub3RoaW5nIHRoZW4gb2J2aW91c2x5IGluIFRIQVQgc2NlbmFyaW8geWVzIHNvbWV0aW1lcyBleGVyY2lzaW5nIGlzIHRoZSBuZXh0IGJlc3QgY2hvaWNlLiBCdXQgZG9lcyBpdCBoYXZlIGFuIGFkdmFudGFnZSBvdmVyIHNlbGxpbmc/IEkgZG9uJ3QgdGhpbmsgc28uIElmIHlvdSBjb3VsZCB5b3Ugc2hvdWxkIHNlbGwuIApUb3RhbGx5IG91dCBvZiBoZXIgY29tZm9ydCB6b25lIGJ1dCBsZWFybmVkIGl0IHdpbGwgaGVscCB3aXRoIGhlciBib25lIGRlbnNpdHkuIApJIGVhdCBhbiBvcmdhbmljIGRpZXQgYW5kIG5vIHN1Z2FyIG9yIGNhZmZlaW5lIHdoaWNoIGFnZ3JhdmF0ZSBtZW50YWwgaWxsbmVzcy4gVGhhdCBzYWlkLCBhcyBzb21lb25lIHdobyBpcyB2ZXJ5IGNsb3NlIHRvIGhlciBvbGRlciBzaXN0ZXIgZGVzcGl0ZSB0aGUgZmFjdCB0aGF0IHdlIG5vdyBsaXZlIG92ZXIgMSwwMDAgbWlsZXMgYXBhcnQsIEkgaGlnaGx5IHJlY29tbWVuZCB0aGF0IHlvdSB0cnkgdG8gZG8gdGhlIGZvbGxvd2luZyAxMSB0aGluZ3Mgd2l0aCB5b3VyIHNpc3RlciBiZWZvcmUgdGhlIHR3byBvZiB5b3UgcmVhY2ggMzAuIApUaGV5IGdldCBsdXJlZCBoZXJlIGZvciBtb3JlIG1vbmV5IGFuZCBlbmQgdXAgd29ya2luZyBpbiBob3N0IGJhcnMuIFRoZSBydXNzaWFucyBhcmUgbWFpbmx5IHByb3N0aXR1dGVzLCB0aGUgZmlsaXBpbm9zIGhhdmUgbW9yZSBvcHRpb25zIGFzIHRoZXkgY2FuIHRha2Ugb2ZmIG9yIHVzdWFsbHkgcmVmdXNlIHRvIGxlYXZlIHdpdGggY3VzdG9tZXJzIGlmIHRoZXkgd2FudC4gTW9zdCBwbGFjZXMgeW91IGdvIHRvIHlvdSBjYW4gY2hvb3NlIGEgZ2lybCBhbmQgZnJvbSBkaWZmZXJlbnQgc2VydmljZXMgaWYgeW91IGFyZSBLb3JlYW4uIApUaGF0IG1hbiBjYXNlLCB0aGUgY3JpbWUgbWFuZGF0b3J5IG1pbmltdW0gc2VudGVuY2UgZm9yY2VkIEVsbGlzIGhhbmQuIEJ1dCBmb3IgTWFuYWZvcnQsIExldmluIHNhaWQsIHRoZXJlIHdhcyBubyBzdWNoIHJlcXVpcmVtZW50LCBubyBtYW5kYXRvcnkgbWluaW11bS4uIApMb3VpZWFuZGVyc29uICAxIHBvaW50ICBzdWJtaXR0ZWQgNiBob3VycyBhZ28KV2hlbiB5b3UgdGFrZSBhIGxvb2sgYXQgdGhlIDEwMDAgQ2xheSBDYXNpbm8gUG9rZXIgQ2hpcHMgaW4gdGhpcyBwYXJ0aWN1bGFyIHNldCwgeW91IHdpbGwgZmluZCB0aGF0IHRoZSBkZW5vbWluYXRpb25zIGFyZSBub3QgbWVyZWx5IHN0dWNrIG9uIHRoZSBjaGlwIHRocm91Z2ggdGhlIG1lYW5zIG9mIGEgc3RpY2tlci4gVGhleSBhcmUgYWN0dWFsbHkgY2FyZWZ1bGx5IG1vbGRlZCBpbnRvIHRoZSBjaGlwLiBUaGlzIG1lYW5zIHRoYXQgeW91IGRvIG5vdCBoYXZlIHRvIHdvcnJ5IGFib3V0IHRoZSBzdGlja2VyIHBlZWxpbmcgb2ZmLCBvciB0aGUgZGVub21pbmF0aW9ucyBydWJiaW5nIG9mZiEgVGhpcyBiYXNpY2FsbHkgbWVhbnMgdGhhdCB0aGUgc2V0IGNvdWxkIGFuZCBwcm9iYWJseSBsYXN0IHlvdSBtdWNoIGxvbmdlciB0aGFuIHNpbWlsYXIgQ2xheSBQb2tlciBDaGlwcyBTZXRzIGF2YWlsYWJsZSBvbiB0aGUgbWFya2V0IHRvZGF5IQpCaXRncmFpbCwgZGVzcGVyYXRlIHNoaWxsZXJzIGV0Yy4KWW91IGNhbiBwbGF5IGFic29sdXRseSBmcmVlIGFuZCB0aGUgcHJpemVzIGFyZSBwYWlkIGZvciBieSBhZHMgb24gdGhlIHNpdGVzIGFuZCBhIHByZW1pdW0gbWVtYmVyc2hpcCBvcHRpb24uIFRoZSBkb3duc2lkZXMgb2YgdGhlIHB1YmxpYyBmcmVlcm9sbHMgYXBwbHkgaGVyZS4gTG90cyBvZiBwbGF5ZXJzIGNvbXBldGluZyBmb3IgYSByYXRoZXIgc21hbGwgcHJpemUgcG9vbC4gVG8gd2luIGEgbG90IG9mIG1vbmV5IHBsYXlpbmcgZnJlZSBvbmxpbmUgcG9rZXIgWW91IHdpbGwgaGF2ZSB0byB1c2Ugbm8gZGVwb3NpdCBwb2tlciBib251c2VzLiAKTGl2ZSBpbiB0aGUgcHJlc2VudCBhbmQgZG9uIGFsbG93IHlvdXJzZWxmIHRvIGZyZWFrIG91dCEgWWVzLCBpdCBhIGJpZyBjaGFuZ2UuIFllcywgaXQgaXMgc2NhcnkuIApZb3UgbGVhcm4gYnkgbWFraW5nIG1pc3Rha2VzIHNvLCBjb25zaWRlciBpdCB0aGF0IGV2ZXJ5IG1pc3Rha2UgeW91IG1hZGUgaXMgYW4gb3Bwb3J0dW5pdHkgdG8gbG9vayBhdCB5b3Vyc2VsZiBhbmQgZ28gZG9uIG5lZWQgdG8gYmUgbGlrZSB0aGF0IE9mIGNvdXJzZSwgdGhlIG1vcmUgY3JpdGljYWwgeW91IGFyZSwgdGhlIGhhcmRlciBpdCBnb2luZyB0byBiZSB0byBkbyB0aGF0LiBUaGUgbWlzdGFrZSBwZW9wbGUgbWFrZSBpcyB0aGF0LCBpdCBodXJ0cyB0byBjb25zaWRlciB3aGF0IGEgZm9vbCB5b3UgbWlnaHQgaGF2ZSBtYWRlIHRoZW4uIEJ1dCB0aGUgZXhhY3Qgb3Bwb3NpdGUgb2YgZml4aW5nIHRoZSBwcm9ibGVtIGlzIHRvIGlnbm9yZSB0aGUgdmVyeSBleHBlcmllbmNlIHRoYXQgaXMgYSB3aW5kb3cgaW50byBob3cgeW91IHdvcmsuIApUaGUgaGlnaGVzdCBlbmQgWm9qaSBtb2RlbHMgcnVuIGFueXdoZXJlIGZyb20gJDI1MCAkNDAwLiAKV2UgZ290IGEgYmV0dGVyIHJldHVybiB0b28sIGFuZCBEIFJ1c3NlbGwgd2FzIHNlZW4gYXMgYSBsb2NrZXJyb29tIGNhbmNlciAvIGxhenkgYXQgdGhlIHRpbWUuIApTbyB3aG8gd2FzIGludm9sdmVkIGluIHRoZSBkZWNpc2lvbiBhbmQgaW1wbGVtZW50YXRpb24sIGhlIHZlcnkgY2xlYXJseSBzYXlzICJXRSIgbXVsdGlwbGUgdGltZXMsIHdhcyB0aGUgZGVjaXNpb24gZGlzY3Vzc2VkIGJldHdlZW4gdGhlIG1vZHMsIG9yIHdhcyBpdCBhbiBhY3Rpb24gdGFrZW4gYnkgb25lIGluZGl2aWR1YWw/ClRoYXQgaXMgYSByZWFsbHkgdG91Z2ggZGVjaXNpb24gaWYgdGhhdCBzb21ldGhpbmcgdGhhdCBib3RoZXJzIHlvdS4gCkVpbmUgZ2xpdHNjaGlnZSBBbmdlbGVnZW5oZWl0LCBoZXV0ZSB3YXJlbiB2b3J3ZWlnZW5kIGR1cmNobnNzdGUsIHNjaGxhbW1pZ2UgdW5kIHNjaG5lZWJlZGVja3RlIFdpZXNlbmhuZ2UgenUgbWVpc3Rlcm4uIEphLCB1bmQgd2VubiBkZXIgZ2FuemUgU2NobGFtbSBzbyBpbiBhbGxlIFJpY2h0dW5nZW4gc3ByaXR6dCwgZGEgbW90aXZpZXJ0IG5vY2ggbWVociEgRGllc2VzIEdlcnV0c2NoZSBsaWViZSBpY2ghIERhIHdpcmQgS29vcmRpbmF0aW5zZmhpZ2tlaXQgZ2Vmb3JkZXJ0LCBzcHRlciBpbSBKYWhyIGRhcmYgZGFzIGdlcm5lIGF1Y2ggd2llZGVyIGR1cmNoIGtuaWZmbGlnZXMgRmVsc2dlbG5kZSBkZXIgRmFsbCBzZWluLgpPbiBTZXB0LiAKSSBtYWRlIGNob2NvbGF0ZXMgYW5kIGd1bW1pZXMgYW5kIHBlcnNvbmFsbHkgcHJlZmVyIHRoZSBjaG9jb2xhdGVzLiBZb3UgY2FuIGdldCBtb2xkcyBmcm9tIG1hbnkgcGxhY2VzIGluY2x1ZGluZyBNaWNoZWFscy9Ib2JieSBMb2JieSB0eXBlIHBsYWNlcyBhbmQgZ2V0IHNvbWUgY2hvY29sYXRlIG1lbHRzLiBJIGdvdCBkYXJrIGNob2NvbGF0ZS4gSSBnb3QgQ0JEIHBvd2RlciBpc29sYXRlIGZyb20gQ0JEaXN0aWxsYXJ5IGFuZCB0aGVuIHdlaWdoIHRoZSBkZXNpcmVkIGFtb3VudCBhbmQgYWRkIGl0IHdoZW4gbXkgY2hvY29sYXRlIGlzIGFib3V0IGhhbGZ3YXkgbWVsdGVkIHNvIGl0IGNhbiBibGVuZCBpbiByZWFsbHkgd2VsbC4gUG91ciBpdCBpbiB0aGUgbW9sZHMsIHB1dCBpdCBpbiB0aGUgZnJpZGdlIGZvciBsaWtlIDEwIG1pbnV0ZXMgdG8gc2V0IGFuZCB0aGVuIHBvcCB0aGVtIG91dCEKUG9rZXIgcGxheWVyJ3MgJ2JyZWF0aHRha2luZycKVGhlbiB0aGVyZSB0aGUgb3RoZXIgbGllIGFib3V0IGF2ZXJhZ2VzOiByaWNoIHN0dWRlbnRzIGRvbiBnbyBpbnRvIGRlYnQgZm9yIGNvbGxlZ2Ugc28gdGhlICQyNCwwMDAgaXMgb2Z0ZW4gbWlzbGVhZGluZy4gTWFueSBzdHVkZW50cyBhcmUgbW9yZSB0aGFuICQxMDAsMDAwIGluIGRlYnQgYmVmb3JlIHRoZXkgZXZlbiBnZXQgdGhlaXIgY29sbGVnZSBkZWdyZWUuIElmIHRoZXkgZXZlbiBnZXQgdGhlaXIgY29sbGVnZSBkZWdyZWUuIApTaG91bGQgd2Ugbm90IGdvPyBNeSBzaXN0ZXIgaXMgZ2l2aW5nIG15IG1vbSBhIGhhcmQgdGltZSBhYm91dCBpdC4gCklmIG9ubHkgR2FnYSBjb3VsZCBiZSBnYWdhIGZvciBjb25kb21zLiBJIHdvdWxkIGhhcHBpbHkgY29udGludWUgdG8gbGlzdGVuIHRvIGhlciBtdXNpYyBhZCBuYXVzZWFtLiAKSSBoYXZlIGFscmVhZHkgZGlzY3Vzc2VkIGl0IHdpdGggQmVuIGFuZCBKdWR5LiAKSWYgeW91IGRlY2lkZSBwb3dlcmxpZnRpbmcgaXMgbW9yZSBpbXBvcnRhbnQgdGhhbiB3aGF0ZXZlciBlbHNlIGlzIGdvaW5nIG9uIGluIHlvdXIgbGlmZSwgZmluZCB0aGUgdGltZSwgdGhlIHNhbWUgd2F5IHlvdSBmaW5kIHRoZSB0aW1lIHRvIGdvIHRvIHRoZSBneW0gMiBvciAzIGhvdXJzIHBlciBkYXkuSSBiZWVuIHVzaW5nIGZpdGJpdCB0byB0cmFjayBteSBzbGVlcC4gV2l0aG91dCBaTUEsIG15IGF3YWtlIHRpbWUgaXMsIG9uIGF2ZXJhZ2UsIDE0JS4gCkl0IHdvdWxkIG5vdCB3b3JrIG9uIGEgbGFyZ2Ugc2NhbGUgYXQgdGhpcyBwb2ludC4gClNrZTdjaCBoYXMgYWxzbyBiZWVuIHRlYXNpbmcgdGhlIGZhbnMgaW4gdGhlIE1DQyBQQyB0aHJlYWRzIGluc3RlYWQgb2Ygb3V0cmlnaHQgYXZvaWRpbmcgdGhlbSBhbmQgcmVmdXNpbmcgdG8gY29tbWVudC4KQnV0IHRoZSBwbGF5ZXJzLCBhbmQgdGhlIGdhbWUgdGhleSBwbGF5aW5nLCB0YWtlIGEgYmFja3NlYXQgdG8gTW9sbHkgc3RvcnkuIFNoZSBpcyBvbiB0aGUgc2NyZWVuIGZvciBqdXN0IGFib3V0IGV2ZXJ5IGZyYW1lIG9mIHRoZSBtb3ZpZSwgbW9zdGx5IHBsYXllZCBieSBDaGFzdGFpbiwgYWx0aG91Z2ggaW5jcmVkaWJsZSBsb29rIGFsaWtlcyBQaXBlciBIb3dlbGwgYW5kIFNhbWFudGhhIElzbGVyIGZpbGwgaW4gYXMgaGVyIHlvdW5nZXIgc2VsdmVzLCBtb3N0bHkgdG8gZGVtb25zdHJhdGUgaGVyIGZyYWN0aW91cyByZWxhdGlvbnNoaXAgd2l0aCBoZXIgZmF0aGVyLCBwbGF5ZWQgYnkgS2V2aW4gQ29zdG5lci4gKFRoZWlyIG9kZCByZXVuaW9uIGxhdGUgaW4gdGhlIGZpbG0gaXMgb25lIG9mIGl0cyBmZXcgZmFsc2Ugbm90ZXMuKQpUaGlzIG1ha2VzIHRoZSBvZGRzIDEwLjggdG8gMSB0aGF0IHlvdSB3aWxsIGhpdCB5b3VyIGhhbmQuIApJbnN0ZWFkIG9mIHJlcG9ydGluZyBvbiB0aGUgZGFuZ2VycyBvZiB0aGUgVXRhaCBsYXcsIHRoZSBtZWRpYSBpcyBzcGVuZGluZyBhIGxvdCBvZiB0aW1lIHJlcG9ydGluZyBvbiB0aGUgcmF0aGVyIHNhZCBjcmltaW5hbCBjYXNlIHRoYXQgaW5zcGlyZWQgaXRzIGRyYWZ0aW5nOiBhIDE3IHllYXIgb2xkIGdpcmwgd2hvIHBhaWQgYSB5b3VuZyBtYW4gJDE1MCB0byBiZWF0IGhlciB1cCBzbyB0aGF0IHNoZSBjb3VsZCB0ZXJtaW5hdGUgaGVyIDcgbW9udGggcHJlZ25hbmN5LiBiZWF0aW5nIGRpZCBub3QgcmVzdWx0IGluIGEgdGVybWluYXRpb24gb2YgdGhlIHByZWduYW5jeSAodGhlIGJhYnkgd2FzIGJvcm4gYW5kIHN1YnNlcXVlbnRseSBhZG9wdGVkKSwgYnV0IGl0IGRpZCByZXN1bHQgaW4gcHJvc2VjdXRpb24gZm9yIGJvdGggdGhlIHlvdW5nIHdvbWFuIGFuZCB0aGUgbWFuIHdobyBiZWF0IGhlci4KV2l0aCB0aGUgQmFuayBvZiBDYW5hZGEgaG9sZGluZyBpbnRlcmVzdCByYXRlcwpTZWxmIHNlcnZpbmcgYW5kIGluY29uc2lzdGVudCBzdXJlLCBoeXBvY3JpdGljYWwgYXQgdGltZXMgeWVzLiAKQW5kIHRoZW4gRWFsZG9ybWFuIEVhZHJpYyBlbnRpY2VkIDQwIHNoaXBzIGZyb20gdGhlIGtpbmcsIGFuZCB0aGVuIHN1Ym1pdHRlZCB0byBDbnV0LiAKRm9sbG93aW5nIGEgbXVjaCBpbXByb3ZlZCBwZXJmb3JtYW5jZSB0aGV5IHdlcmUgdmVyeSB1bmx1Y2t5IHRvIGxvc2UgMyAyLCB3aXRoIHRoZSBjaXZpbCBlbmdpbmVlcnMgc2NvcmluZyB3aXRoIHRoZSBsYXN0IGtpY2sgb2YgdGhlIGdhbWUuLiAKSmVzc2ljYSBsb3ZlZCB0aGUgc3RvcmllcyBJIHdyb3RlLiBTaGUgbG92ZWQgdGhlIGRyYXdpbmdzIEkgbWFkZS4gSSBkb24gdGhpbmsgc2hlIGV2ZXIgc3VzcGVjdGVkIHdoYXQgdGhleSByZWFsbHkgd2VyZS4gCldlIG1heSBhbHNvIGZlYXR1cmUsIGVpdGhlciB0aHJvdWdoIGF1dG9tYXRpb24gb3IgYnkgZWRpdG9yIHNlbGVjdGlvbiwgc3BlY2lmaWMgdXNlciBwcm9maWxlcyBvciBwdWJsaWMgYWN0aXZpdGllcyB0byBiZSBwcm9tb3RlZCBhbnl3aGVyZSBvbiB0aGUgU2VydmljZXMuIApEdXJpbmcgYSBidXN5IGRheSBsaWtlIEZyaWRheSwgdGhlIGNvbXBhbnkgd2lsbCBtYWtlIHN1cmUgdG8gaGF2ZSAxMjAgdGhlcmFwaXN0cyAgIG1vc3RseSBmZW1hbGVzICAgd29ya2luZyBmcm9tIHdoZW4gdGhlIHRvdXJuYW1lbnQgc3RhcnRzIGF0IG5vb24gdG8gd2hlbiB0aGUgbGFzdCBjYXJkIGlzIGRlYWx0IGluIHRoZSB3ZWUgaG91cnMgb2YgdGhlIG1vcm5pbmcuCkFzc2lzdGFudCB3aWxsIGFsc28gYW5zd2VyIHNvbWUgb2YgdGhlIHF1ZXN0aW9ucyBkaXJlY3RseSwgVGVpdGVsIHNhaWQuIApLZWxseSBhbmQgTWljaGlnYW4gY29tbWl0IE5vbGFuIFJ1bWxlciBhdCB0YWNrbGUsIEhvYmFuIGhhcyBvbmUgb2YgdGhlIGFyZWEncyBtb3N0IGltcG9zaW5nIG9mZmVuc2l2ZSBsaW5lcy5XaG8gaGFzIE5vcnRoZWFzdCBPaGlvJ3MgYmVzdCBkZWZlbnNlPyBIUyBmb290YmFsbCBNb25kYXkgbW9ybmluZyBRQiBXaG8gaGFzIE5vcnRoZWFzdCBPaGlvJ3MgYmVzdCBkZWZlbnNlPyBIUyBmb290YmFsbCBNb25kYXkgbW9ybmluZyBRQiBmaXQuIApUaGVzZSBlZmZlY3RzIGFyZW4gb24gd2hpdGUgbWFsZXMuIFRoZXkgYXJlIG9uIG1pbm9yaXRpZXMuIEkgc2F5aW5nIHRoaXMgb3V0IG9mIGNvbmNlcm4gZm9yIHBvbGljeSBvdXRjb21lcyB3ZSBib3RoIHdhbnQuIApIZSBhY2NlcHRzIGl0Li4gCkluIGEgdHdpc3RlZCBqb3VybmV5IGZ1bGwgb2Ygc2VsZiBtYWRlIHN0b3JpZXMgYW5kIGp1c3RpZmljYXRpb25zLCB0aGUgZXhwbG9yYXRpb24gb2YgdGhlIGNvbXBsaWNhdGVkIHdvcmxkIG9mIGFuYXJjaGlzdHMgcmV2ZWFscyBhIHBhcnQgb2YgQW1lcmljYSB0aGF0IHNob2NrcyB3aXRoIGl0cyB1bnJlYWxpemVkIHBvd2VyLiBIb3dldmVyLCBKdWxpbyBpcyBseWluZy4gClNlZSwgbXkgd2lmZSBpcyB0aGUgZXZlbnRzIGRpcmVjdG9yIGZvciBvdXIgbG9jYWwgY2h1cmNoIGFuZCB0aGlzIGlzIG5vdCBhIHNtYWxsIGNvbmdyZWdhdGlvbi4gCkhpcyB3aWZlIGtub3dzIGFuZCB0aGV5IGFuZCBteSB0aHJlZSBjaGlsZHJlbiBoYXZlIGJlY29tZSBhIGZhbWlseSB3aXRoIHRoaXMgY291cGxlIGFuZCB0aGVpciB0aHJlZSBjaGlsZHJlbi4gV2Ugd2FudCB0byBiZSBhIGZhbWlseSBhbmQgaGF2ZSBhIHNwaXJpdHVhbCBtYXJyaWFnZS4uIApCdXQgdGhlIHJlY2VudCBjbG9zdXJlIG9mIHRoZSBzdGF0ZSdzIGZpcnN0IGxlZ2FsIGJyb3RoZWwsIE11c3RhbmcgUmFuY2gsIGFzIHdlbGwgYXMgYXR0ZW1wdHMgdG8gbWFrZSBicm90aGVscyBpbGxlZ2FsIGluIHNvbWUgbm9ydGhlcm4gY29tbXVuaXRpZXMsIGhhdmUgcmFpc2VkIGNvbmNlcm5zIGFib3V0IHdoZXRoZXIgdGhvc2Ugc2VydmluZyBMYXMgVmVnYXMgd2lsbCB3aXRoc3RhbmQgdGhlIHByZXNzdXJlcyBvZiBOZXZhZGEncyBncm93dGguIFBhaHJ1bXAncyBsb25ndGltZSBpbWFnZSBhcyB0aGUgbGFzdCByZW1haW5pbmcgYmFzdGlvbiBvZiB3aWxkIHdpbGQgV2VzdCBtZW50YWxpdHkgaXMgY2hhbmdpbmcgcXVpY2tseS4gICB0aGUgcG9wdWxhdGlvbiBoYXMgY2xpbWJlZCBmcm9tIGFib3V0IDI1LDAwMCBpbiAxOTk3IHRvIG1vcmUgdGhhbiAzNSwwMDAgdG9kYXkuLiAKR2V0IHJpZCBvZiB0aGUgY2FtcCBzaG9lcywgeW91ciB0cmFpbCBydW5uZXJzIHNob3VsZCBiZSBjb21meSBlbm91Z2ggdG8gYmUgYWJsZSB0byB3ZWFyIGF0IGNhbXAgYXMgd2VsbC4gR2V0IGEgbGlnaHRlciB0ZW50LiBJZiB5b3UgbXVzdCBoYXZlIGRvdWJsZSB3YWxsIHRoZSBOZW1vIEhvcm5ldCBFbGl0ZSBvciBGbHkgQ3JlZWsgaXMgMTBveiBsaWdodGVyIHRoYW4gdGhlIFNwdXIuIE9yIGdldCBhIHNpbmdsZSB3YWxsIHRlbnQgZnJvbSAxNG96IHRvIDIwb3ogbGlnaHRlciBkZXBlbmRpbmcgb24gaG93IG11Y2ggeW91IHdhbnQgdG8gc3BlbmQuIFlvdSBjYW4gZWFzaWx5IGZpbmQgYSByYWluIGphY2tldCB0aGF0IGlzIDEwIG91bmNlcyBsaWdodGVyICBPdXRkb29yIFJlc2VhcmNoIEhlbGl1bSBJSSBpcyBvbmx5IDYuNG96LiBPciB3aHkgbm90IGp1c3QgdXNlIHRoZSBIb3VkaW5pIGFzIGEgUmFpbiBKYWNrZXQ/IEh5Z2VpbmUgIDFveiB0dWJlIG9mIHRvb3RocGFzdGUsIC41b3ogdG9vdGhicnVzaCBhbmQgMW96IGJhciBvZiBzb2FwLiBUaGUgQW5rZXIgNjcwMCBiYXR0ZXJ5IGlzIG9ubHkgNCBvdW5jZXMuIElmIHlvdSBwdXQgeW91ciBwaG9uZSBvbiBhaXJwbGFuZSBtb2RlIGFuZCBzdGFydCB3aXRoIGEgZnVsbCBjaGFyZ2UsIHBob25lIHdpbGwgYmUgZ29vZCA1IGRheXMuIFlvdSBjb3VsZCBzYXZlIHlvdXJzZWxmIDggb3VuY2VzIHN3aXRjaGluZyB0byB0aGUgQmVhcmthZGUgQmxhemVyIHdoaWNoIGlzIGFjdHVhbGx5IGEgYml0IGJpZ2dlciBidXQgY29zdHMgJDMxMi4gR2l0IHJpZCBvZiB0aGUgcGFudHMgYW5kIGJ1eSBzb21lIGNhcGlsZW5lIGJvdHRvbXMgdG8gd2VhciB1bmRlciB5b3VyIHNob3J0cyBhdCBuaWdodCwgdGhhdCB3aWxsIHNhdmUgNiBvdW5jZXMuCkFzIGZvcm1hdHMgZ3JvdyBvbGQsIHRoZXkgdGVuZCB0byBiZWNvbWUgaW5jcmVhc2luZ2x5IGVmZmljaWVudCwgd2hpY2ggbGVhZHMgdG8gbmFycm93ZXIgY2hvaWNlcy4gTGVnYWN5IGhhcyBlc3NlbnRpYWxseSBiZWVuIGJvaWxlZCBpdHNlbGYgZG93biB0byBEZWx2ZXIgc3RyYXRlZ2llcywgQ2hhbGljZSBzdHJhdGVnaWVzLCBhbmQgRGFyayBEZXB0aHMgc3RyYXRlZ2llcy4gWWVzLCB0aGVyZSBhcmUgc3RpbGwgdG9ucyBvZiBvdGhlciBkZWNrcyBvdXQgdGhlcmUgKERlYXRoIGFuZCBUYXhlcywgU3RvbmVibGFkZSwgU25lYWsgYW5kIFNob3csIFN0b3JtLCBNaXJhY2xlcywgZXRjLiksIGJ1dCB5ZWFyIGFmdGVyIHllYXIsIHRoZSBmb3JtYXQgaXMgZGVmaW5lZCBieSBhbiBpbmNyZWFzaW5nbHkgbmFycm93ZXIgc2V0IG9mIGNhcmRzLiBOb3QgYXMgbmFycm93IGFzIFZpbnRhZ2UsIGJ1dCBpdCBjZXJ0YWlubHkgYmVlbiB0cmVuZGluZyBpbiB0aGF0IGRpcmVjdGlvbiBmb3Igc29tZSB0aW1lLgpNZWRpYSBhbmQgcG9saXRpY2lhbnMgc2F5IFZlbmV6dWVsYSBoYXMgYmVlbiBtYW5hZ2VkLiBBbmQgdGhlbiwgeW91IGNyaXRpY2l6ZSB1cyBmb3IgdGhlIHdheSB3ZSBicmVhdGhlLiBXaGVuIG9pbCBwcmljZXMgd2VyZSBoaWdoLCB1bmRlciBDaGF2ZXosIHRoaXMgcGFpZCBmb3IgcG92ZXJ0eSByZWR1Y3Rpb24sIGhlYWx0aCBjYXJlLCBlZHVjYXRpb24sIGV0Yy4gQWNjb3JkaW5nIHRvIHRoZSBDSUEgRmFjdGJvb2sgb24gVmVuZXp1ZWxhOgpJIGEgYmlnIGZhbiBvZiB0aGVtLiAKSWYgeW91ciBsb3ZlZCBvbmUgaXMgc3VmZmVyaW5nIGZyb20gc3Vic3RhbmNlIGFidXNlLCBoZSBtYXkgZXhoaWJpdCBzb21lIG9yIGFsbCBvZiB0aGUgZm9sbG93aW5nIHN5bXB0b21zIG9yIGJlaGF2aW9yczouIApXZSB2b3RlZCBvbiB0aGlzIHNldmVyYWwgdGltZXMgYmVmb3JlIG5vdzsgYXMgcmVjZW50bHkgYXMgbGFzdCB5ZWFyLCB0aGUgY29tbXVuaXR5IHZvdGVkIHRvIGJsb2NrIHN0aWxsIGltYWdlIGFydCBvbiB0aGUgd2Vla2VuZHMgYnV0IGFsbG93IGNyYWZ0LiBTbyB3ZSBhYnNvbHV0ZWx5IG5vdCBzYXlpbmcgY3JhZnQgaXNuIGFuIGFydGZvcm0gaXQgd2FzIGEgbG9naXN0aWNhbCBkaXN0aW5jdGlvbiBzbyB3ZSBjb3VsZCBmaWx0ZXIgc3R1ZmYgYmFzZWQgb24gd2hhdCB0aGUgY29tbXVuaXR5IHZvdGVkIHRvIGRvIVtNXSAgMyBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnb0RvIHkga25vdyBhYm91dCBvdXIgUG9rZW1vbiBvZiB0aGUgV2VlayB0aHJlYWRzPyBUaGV5IGdldCBwb3N0ZWQgYW5kIHN0aWNraWVkIGV2ZXJ5IFR1ZXNkYXkhIFBlb3BsZSB1c2UgdGhlbSB0byB0YWxrIGFib3V0IHRoZSBQb2tlbW9uIGluIHF1ZXN0aW9uIGFuZCBhbHNvIGRpc2N1c3Mgd2F5cyB0byBtYWtlIGl0IGEgbW9yZSBjb21wZXRpdGl2ZSBpbiBiYXR0bGUgZXRjLCBhbmQgdGhlIHRocmVhZCBhbHNvIGZlYXR1cmVzIGNvbW11bml0eSBhcnQgb2YgdGhlIGZyb20gdGhlIC9yL1Bva2Vtb24gRHJhd3MgUG9rZW1vbiBldmVudCB3ZSBkaWQgYSB3aGlsZSBiYWNrLiAKV2l0aGluIGhhbGYgYW4gaG91ciBvZiB0YWtpbmcgaGlzIFZlbnRvbGluLCB0aGUgMjcgeWVhciBvbGQgd2FzIHVuY29uc2Npb3VzIGFuZCBiZWluZyB3b3JrZWQgb24gYnkgcGFyYW1lZGljcy4gSmFtZXMgd2FzIGRlY2xhcmVkIGJyYWluIGRlYWQganVzdCBkYXlzIGxhdGVyLiAKVGhlIGNvbXBhbnkgYWxzbyBjbGFpbWVkIHRoYXQgUG9rZXIgY2FyIHdhcyByZWdpc3RlcmVkIGFzIGEgcHJpdmF0ZSB2ZWhpY2xlIGhvd2V2ZXIgaGUgdXNlZCBpdCBvbiBoaXJlIGFuZCByZXdhcmQgYmFzaXMgZm9yIGhpcyBVbWEgU2hpdiBUb3VycyBhbmQgVHJhdmVscy4gClRoZSBtYW51ZmFjdHVyZXIga25ldyB0aGF0IHByZSBvcmRlciBjYXJzIGhhZG4gYmVlbiBkZWxpdmVyZWQsIGFuZCB0aGV5IHN0aWxsIG1hZGUgdGhlIGFubm91bmNlbWVudC4gVGhpcyBpcyByZWFsbHkgYSBzeW1wdG9tIG9mIGhvdyBuZXcgc3VwZXJjYXIgc2FsZXMgd29yayB0b2RheS4gCiJMZSAxMGUgbXJpdGVyYWl0ICBsdWkgc2V1bCB1bmUgY2lyY29uc2NyaXB0aW9uIiBhIHQgaWwgY29uY2x1LiAKSSBjYW4gc3BlYWsgZm9yIHRoZSBvdGhlcnMgYnV0IHRoZSByZWFzb24gSSBkb24gY29tbWVudCBtdWNoIG9uIHRoZSBzdWIsIG9yIG9uIHJlZGRpdCBpbiBnZW5lcmFsLCBpcyB0aGF0IG1vZGVyYXRpbmcgdGFrZXMgbW9zdCBvZiB0aGUgdGltZSBhbmQgZW5lcmd5IEkgd2FudCB0byBzcGVuZCBvbiByZWRkaXQgYWxyZWFkeS4gQWxzbywgYW55IGNvbW1lbnRzIEkgbWFrZSBhYm91dCBhbnl0aGluZyBjYW4gYW5kIHdpbGwgYmUgdXNlZCBieSB0aG9zZSB3aG8gZGlzYWdyZWUgYXMgc29tZSBwcm9vZiBvZiBiaWFzIHdoZW4gbWFraW5nIG1vZGVyYXRvciBkZWNpc2lvbnMuIApHb29kIGx1Y2ssLgpVbmxlc3Mgd2Ugd2FudCB0byBjb25zaWRlciB3aGV0aGVyIHdlIHJlYWxseSBuZWVkIHNwb3J0cyB0aGF0IGluc2lzdCBvbiBhIGNvaGVyZW50IGFuZCBzdGFibGUgZ2VuZGVyPyBGb3IgaW5zdGFuY2UsIEkganVzdCBoZWFyZCBhYm91dCBhIHByb21pc2luZyB5b3VuZyBmZW1hbGUgYXRobGV0ZSB3aG8gZGVjaWRlZCB0byBzdGFydCBpZGVudGlmeWluZyBhcyBtYWxlLiAKTWFrZSBzdXJlIHRoYXQgdGhlIHNlbnNvciBpc24gdG91Y2hpbmcgdGhlIGljZS4uIApTaGUgZmVlbHMsIEkgcmVja29uLCB0aG91Z2ggbWViYmUgc2hlIGhhcmRseSBrbm93cyBzaGUgZmVlbHMgaXQsIHRoYXQgdGhlcmUncyBhIHZhc3QgZGVhbCBpbiBoZXIgbGlmZSB5b3UgY2FuJ3QgZW50ZXIgbm9yIHVuZGVyc3RhbmQgYW5kIHNvIHNoZSBoYXMgdG8ga2VlcCB5b3UgYmFjayBmcm9tIGl0IGhvbGQgeW91IG9mZiwgc28gdG8gc3BlYWssIGZyb20gaHVydGluZyBoZXIuIFlvdSBrbm93IGlmIHdlJ3ZlIGdvdCBhbnl0aGluZyBhYm91dCB1cyB0aGF0IGh1cnRzIHdlIHNocmluayBmcm9tIGFueW9uZSdzIHRvdWNoIG9uIG9yIG5lYXIgaXQuIEl0IGhvbGRzIGdvb2Qgd2l0aCBvdXIgc291bHMgYXMgd2VsbCBhcyBvdXIgYm9kaWVzLCBJIHJlY2tvbi4gCkdsYWRpdXMwMSAgMyBwb2ludHMgIHN1Ym1pdHRlZCA5IG1vbnRocyBhZ28KSEFNTUVMTCwgS2VubmV0aCBKb3NlcGggS2VuIHBhc3NlZCBhd2F5IHBlYWNlZnVsbHkgb24gV2VkbmVzZGF5LCBBdWd1c3QgOSwgMjAxNyBhdCBTb3V0aCBNdXNrb2thIE1lbW9yaWFsIEhvc3BpdGFsIGluIEJyYWNlYnJpZGdlIGluIGhpcyA5NnRoIHllYXIuIENoZXJpc2hlZCBodXNiYW5kIG9mIDc0IHllYXJzIHRvIE1hcmdhcmV0IEhhbW1lbGwgKG5lZSBIdW50KS4gQmVsb3ZlZCBmYXRoZXIgb2YgSnVkeSBIdXR0b24gYW5kIGhlciBodXNiYW5kIEdhcnkgYW5kIEJyaWFuIEhhbW1lbGwgYW5kIGhpcyB3aWZlIEthdGh5LiBBZG9yZWQgYnkgc2l4IGdyYW5kZGF1Z2h0ZXJzIFNoYXluYSBIdXR0b24gKERvdWcpLCBFbGljaWEgTGFtYmVydCAoQ2FtZXJvbiksIEtyaXN0ZW4gSHV0dG9uIChKb2UpLCBHZW5uYSBOaWNob2wgKEFkYW0pLCBLYWl0bHluIEhvb3MgKENhbWVyb24pLCBDaGVsc2VhIExldmVyIChKb3NoKSBhbmQgZWlnaHQgZ3JlYXQgZ3JhbmRjaGlsZHJlbiBLZW5kb24gYW5kIE1hZGVseW5lIFpldHRsZSwgQWxleGEgYW5kIEphY2UgTGFtYmVydCwgRWxsaWUgYW5kIEF2ZXJ5IE5pY2hvbCwgSm9lIEhvb3MgYW5kIEhhZGxleSBMZXZlciBIZSB3YXMgdGhlIGZpcnN0IGJvcm4gY2hpbGQgb2YgUGVyY3kgRXJuZXN0IEhhbW1lbGwgYW5kIE1hcnRoYSBFbGxlbiBUaG9tcHNvbiBwcmVkZWNlYXNlZCBieSBoaXMgc2lzdGVyIFZpb2xldCBXb29kcyBhbmQgYnJvdGhlcnMgR2xlbiBhbmQgVG9tbXkgSGFtbWVsbC4gCkRpZSBVbXN0cnplIHVuZCBVbnJ1aGVuIGluIExpYnllbiwgVHVuZXNpZW4gdW5kIGd5cHRlbiBicmVtc3RlbiBkZW4gQXVzYmF1IGRlciBIb3RlbGxlcmllIHN0YXJrLi4gCkFub3RoZXIgdGhpbmcgSSBoZWFyZCBvbiBhIHBvZGNhc3Qgd2FzIHRoYXQgaGUgdG9vayB0aGUgcG9saWNlIHRvIHRoZSAic2NlbmUgb2YgdGhlIGNyaW1lIiBhbmQgcG9pbnRlZCB0byBhIHJhdGhlciBoaWRkZW4gY2FtZXJhIGFuZCB0b2xkIHRoZSBwb2xpY2UgZXZlcnl0aGluZyBzaG91bGQgYmUgb24gaXQuIFRoZSBjYW1lcmEgaGFkIGEgc2xpZ2ggZGlmZmVyZW50IGFuZ2xlIGFuZCBkaWRuJ3QgcmVjb3JkICJ0aGUgY3JpbWUiLiBOb3Qgc3VyZSBpZiB0aGF0J3MgdHJ1ZSwgYnV0IGZ1bm55IGlmIGl0IGlzLgpBbHNvLCB0aGUgYmFnIHRoYXQgeW91IHNhaWQgaGFkIGRpc2ludGVncmF0ZWQganVzdCBicm9rZSBkb3duIGludG8gbWljcm8gcGxhc3RpYywgd2hpY2ggd2UgYXJlIGxlYXJuaW5nIGlzIGEgdmVyeSBsYXJnZSBwcm9ibGVtLCBlc3BlY2lhbGx5IGZvciBtYXJpbmUgY3JlYXR1cmVzIChzbyBpZiB5b3UgbGlrZSBveXN0ZXJzIG9yIGNsYW1zIHlvdSBhcmUgcHJvYmFibHkgZWF0aW5nIHRoZSBtaWNybyBwbGFzdGljIHNpbmNlIHRoZXkgYXJlIGVhdGluZyB0aGUgbWljcm8gcGxhc3RpYykuLiAKIkkgcGxheSBmb290YmFsbCBbdG9tb3Jyb3ddIi4gTXkgQ2hpbmVzZSBzdHVkZW50cyB1c2UgYSBsb3QgbW9yZSBhZHZlcmJzIG9mIHRpbWUgKHRvbW9ycm93LCBub3csIHllc3RlcmRheS4pIHRoYW4gbXkgb3RoZXIgc3R1ZGVudHMuLiAKR3Jvd2luZyB1cCBzb21lIG9mIHRoZSBiYXNoaW5nIGlzIGNhbGxpbmcgeW91IHN0dXBpZCBmb3Igbm90IGJlaW5nIGFibGUgdG8gZG8gbWF0aCBjYWxjdWxhdGlvbnMgYXMgYSBqb2tlLiBHYW1ibGluZyBpcyBwcm9iYWJseSB0aGUgb25seSB0aW1lIHdoZXJlIHRoZXkgY2FuIGxldCBsb29zZSBhbmQgdGhlcmFwZXV0aWNhbGx5IHJlbGF4IGFzIGFuIGVzY2FwaXN0IG91dGxldCwgd2hpY2ggaXMgaXJvbmljIHRvIHRoZWlyIGh1c3RsZSBhbmQgaHVzdGxlLiAKUm9ocm1hbiBzYXlzIGdyb3d0aCBvcHBvcnR1bml0aWVzIGFyZSBwbGVudGlmdWwgbm93ICAgaWYgeW91IGNhbiBmaW5hbmNlIGEgZGVhbC4KTGFicmFkYSBzYXlzIHNoZSB3YXMgYXNrZWQgdG8gZG8gdGhlIG1vdmllIGFib3V0IHRocmVlIHllYXJzIGFnbywgd2hlbiBzaGUgd2FzIHNlYXJjaGluZyBmb3IgYSBuZXcgSzkgcGFydG5lci4uIApXZSBwdXQgaXQgYmFjaywgYW5kIHRoaW5ncyBnb3QgYmV0dGVyIGFnYWluLiAKVXBvbiBzZWVpbmcgdGhlIHVuZGVyY292ZXIgYWdlbnRzIHdhaXRpbmcgZm9yIGEgbWFzc2FnZSwgdGhlIHVwc2V0IGN1c3RvbWVyIHllbGxlZCBhIHByb2Zhbml0eSBhbmQgYWR2aXNlZCwgIkdvIHNvbWV3aGVyZSBlbHNlLiIKV2VsbCwgdGhpcyBpcyBwdXJlbHkgYW5lY2RvdGFsIGJ1dCBJIGZlZWwgbGlrZSBJIG5vdGljaW5nIGEgbG90IG1vcmUgYXdhcmVuZXNzIGFuZCBtYXR1cml0eSBzdXJyb3VuZGluZyB0aGUgaXNzdWUgb2YgYmlnb3RyeSBpbiBnYW1pbmcgbGF0ZWx5LiBNYXliZSBpdCBqdXN0IGEgZmFkLCBidXQgSSBkb24gcmVtZW1iZXIgc2VlaW5nIHRoaXMgbWFueSBzZXJpb3VzIGRpc2N1c3Npb25zIGFib3V0IHRoZSBpc3N1ZSBpbiB0aGUgZ2FtaW5nIGNvbW11bml0eSBhcyByZWNlbnRseSBhcyBqdXN0IGEgZmV3IHllYXJzIGFnby4gVGhlcmUgbm8gcmVhbCB3YXkgdG8gcHJvdmUgdGhpcyB0aG91Z2g7IGl0IGp1c3QgbWF5IGJlIHRoYXQgSSBub3RpY2luZyBpdCBtb3JlLgpIZSBzdGFydGVkIGdldHRpbmcgbWlncmFpbmVzIHNvIGJhZCB0aGF0IGhlIGhhZCB0byBiZSBtZWRpY2F0ZWQuIApUaGUgY3Jvd2QgZGlkIG5vdCBrbm93IGhvdyB0byBmZWVsIGFib3V0IHRoaXMgc3RhdGVtZW50LiBCb3dzZXIgYWx3YXlzIGhlbGQgYSBzdHJpY3QgaGFuZCwgYXMgZmFpciBhcyBoZSB0cmllZCB0byBhcHBlYXIuIE1hbnkgb2YgdGhlIGdyb3VwcyBtZXQgYmVmb3JlIGhpcyBzcGVlY2ggYW5kIGNvbnNpZGVyZWQgdGhhdCB0aGlzIGNvdWxkIGJlIG5vdGhpbmcgbW9yZSB0aGFuIGEgcG93ZXIgZ3JhYi4gCkx1bmNoIGFuZCBkaW5uZXIgYXJlIGEgdmFyaWVkIGJhbnF1ZXQgb2YgaG9tZW1hZGUgc291cCwgZ3JpbGxlZCBmaXNoLCBjdXRsZXRzLCBwZWxtZW5pIG9yIG1hbnRpLCBmcmVzaCB2ZWcgYW5kIG1hZGUgdG8gb3JkZXIgZGVzc2VydC4gCk5leHQgaW4gdGhlIG9yZGVyIG9mIHBva2VyIGhhbmRzIGlzIGEgU3RyYWlnaHQuIEEgU3RyYWlnaHQgaXMgYSBzZXJpZXMgb2YgZml2ZSBjb25zZWN1dGl2ZSBjYXJkcyBvZiBhbnkgc3VpdCwgZm9yIGV4YW1wbGUgOSAxMCBKIFEgSy4gCktpbmcncyBqIGRheXMgd2l0aCBoZXIgc2lzdGVyLCBNcnMuIFMuIEguIApGb3IgZXhhbXBsZSwgSSdtIGdvaW5nIHRvIGxvb2sgYXQgdGhhdCBlbXBsb3ltZW50IGNoYXJ0IGFuZCBzZWUgOCB5ZWFycyBvZiBPYmFtYSBwb2xpY2llcyBkcm9wcGluZyB1bmVtcGxveW1lbnQgYW5kIHlvdSdyZSBnb2luZyB0byBsb29rIGF0IHRoZSBzYW1lIGNoYXJ0IGFuZCBzZWUgdGhlIGxpdHRsZSBiaXQgYXQgdGhlIGVuZCBhbmQgdGhpbmsgaXQncyB3aGF0IG1hdHRlcnMgbW9zdC4KUmVtb3ZlIG1hdGVyaWFsIGF0IGFueSB0aW1lIHdpdGhvdXQgbm90aWZpY2F0aW9uLCB3ZSBkb24ndCB0ZW5kIHRvIGV4ZXJjaXNlIGl0IHZlcnkgb2Z0ZW4uCk5vcmRpc2sgc3RhbmRhcmQgZnIgZXR0IGx1Z24gc25hYmJpcyBpIG1lZGVsa3ZhbGl0LiBWZW4gb20gaGFuIGludGUgdmlsbCBsaWdnYSBtZWQgaGVubmUgb2NoIG5pIGhpdHRhciBlbiBzdmVuc2sgaW5vbSBrb3J0IHJlc2VhdnN0bmQgcyBwcmF0YXIgdmkgZm9ydGZhcmFuZGUgb20gZmxlcmEgdHVzZW4uLiAKV2UgZG9uIGhhdmUgYW4gQXJ0U2NhcGUgb3IgYW4gRXZlcmdyZWVuIEJyaWNrd29ya3MuIApbIDcgXSBTaW5jZSBpdHMgYWNxdWlzaXRpb24gb2YgQ2hpcHN5ICwgTGF5J3MgY2hpcHMgKG1hcmtldGVkIGFzIENoaXBzeSkgaW4gRWd5cHQgaW5oZXJpdGVkIHRoZSBDaGlwc3kgcmFuZ2Ugb2YgZmxhdm91cnMgYXMgd2VsbCBhcyB0aGUgcHJlIG1lcmdlciBMYXkncyBmbGF2b3Vycy4gClRoZXNlIHdlcmUgcmVwYWlycyBJIHdhcyBwbGFubmluZyBvbiBtYWtpbmcgaG93ZXZlciBteSBhcHByYWlzYWwgcmVxdWlyZWQgdGhlbSB0byBiZSBjb21wbGV0ZSBiZWZvcmUgd2UgY2xvc2UuIEFmdGVyIGRlYWxpbmcgd2l0aCB0aGUgc2VsbGVyIGFuZCBob3VuZGluZyBoaW0gdG8gZ2V0IHRoaXMgZG9uZSBhbmQgdG91Y2hpbmcgYmFzZSB3aXRoIGhpcyBwcm9wZXJ0eSBtYW5hZ2VyIHRvIGV4cGVkaXRlIHRoZXNlIHJlcGFpcnMsIHRoZXkgd2VyZSBmaW5hbGx5IGRvbmUgYnkgQXByaWwgMjB0aCBvciBzby4gClNvIG9mIGNvdXJzZSwgIlllcyBidWRkeSwgSSdtIHBvb3BpbicuIiBIaW06ICJnb29kIGpvYiBtYW1hISBHb29kIGpvYiBwb29waW4nISIgTWU6ICJ0aGFua3MgYnVkZHkiLi4gCkluIHNwaXRlIG9mIHRoZSBmYWN0IHRoYXQgZ2VuZXJhdGl2ZSBmb2xrIGFsd2F5cyBkbyBleGFjdGx5IHRoYXQgOiApZ290aGljIGZhbGwgYW4gdnMuIApTb21lIG9mIHRoZSBjaGFuZ2VzIGhhdmUgYmVlbiBncmVhdCBhbmQgcmVhbGx5IGVtcGhhc2l6ZWQgdGhlIGdhbWUgb3JpZ2luYWwgaW50ZW50aW9ucyAocHlybyBhaXJibGFzdCkuIFNvbWUgaGF2ZSBub3QgYmVlbiAoc2VlLiAKQSBjaGlsZGlzaCAidGhhdCdzIHNvIGJhZCBpdCBjb3VsZG4ndCBoYXZlIGhhcHBlbmVkLCIgYmVjb21lcyBtaXhlZCB3aXRoIGEgc2xpZ2h0IHJhY2lhbCBhbmdsZSAidGhleSB3b3VsZCBzYXkgdGhhdCBhYm91dCBnb29kIEdlcm1hbiBwZW9wbGUgd291bGRuJ3QgdGhleT8iIE92ZXIgdGltZSB0aGlzIGlzIGNvbWJpbmVkIHdpdGggYW4gdW53aWxsaW5nbmVzcyB0byBsb29rIGF0IHRoZSBldmlkZW5jZSwgYW5kIGEgY29uZmlybWF0aW9uIGJpYXMgZW50cmVuY2hlZCBieSAnc2FmZXNwYWNlJyBzaXRlcyBzaW1pbGFyIGluIGZvcm0gdG8gKGJ1dCB3b3JzZSB0aGFuKSBUX0QsIHdoaWNoIGNoZXJyeXBpY2sgY2FzZXMgb2YgSmV3aXNoIG1pc2RlZWRzIGFuZCBwdWJsaXNoZWQgdW5zb3VyY2VkIHN0b3JpZXMgdGhhdCBtaW5pbWlzZSB0aGUgSG9sb2NhdXN0IGRlYXRoIGNvdW50LiAKTWF5d2VhdGhlciBhcyBtYWRlIGEgYnJpbGxpYW50IGNhcmVlciBvZiBkaXZpZGluZyBhbmQgY29ucXVlcmluZy4gCk9uIHRoZSBvdGhlciBoYW5kIGFscGhhIGluZGl2aWR1YWxzIGFyZSBvZnRlbiB2ZXJ5IGVhc2lseSAic3VjY2Vzc2Z1bCIgYnV0IHRoZXkgZ2V0IGxvc3QgaW4gdGhlaXIgbGl2ZXMgYmVjYXVzZSB0aGV5IGdldCBwb3NzZXNzZWQgYnkgc29tZSBldmlsIHNwaXJpdC4gU28gdGhleSBhdHRhaW4gYSB2ZXJ5IGxvdyBsZXZlbCBvZiBzZWxmIGNvbnNjaW91c25lc3MuICJTdWNjZXNzZnVsIiBwZW9wbGUgYXJlIHVzdWFsbHkgdmVyeSBzZWxmIGNlbnRlcmVkIGFuZCBib3JpbmcgdG8gYmUgd2l0aCwgcGVvcGxlIHdpdGggZGlzYWJpbGl0aWVzIGNhbiB0ZWFjaCB5b3UgYSBsb3QuLiAKVGhlIHdpbm5pbmcgdGVhbSBvZiB0aGUgZG9nIHJhY2UgZ2V0cyB0byBuYW1lIG91ciBuZXdlc3QgcHVwcHkuIApUaGUgVGVzbGEgYW5kIFNwYWNlWCBmb3VuZGVyIGlzIHJlc3VibWl0dGluZyBhIGZvcm0gd2hpY2ggcmVxdWlyZXMgZ292ZXJubWVudCBlbXBsb3llZXMgb3IgY29udHJhY3RvcnMgd2l0aCBzZWN1cml0eSBjbGVhcmFuY2UgdG8gZGlzY2xvc2UgaWxsZWdhbCBkcnVnIHVzZSBpbiByZWNlbnQgeWVhcnMsICByZXBvcnRlZC4gCkVhY2ggcGxheWVyIGdldHMgMiBjYXJkcyBkZWFsdCBmYWNlIGRvd24sIGFmdGVyIHlvdSBnZXQgdGhlc2UgdHdvIGNhcmRzLCB5b3UgY2FuIG1ha2UgYSBiZXQgb3IgZm9sZC4gTXkgZGVhbGVyIHN1Z2dlc3RzIGlmIHRoZXkncmUgbm90IGhpZ2ggY2FyZHMgICBmb2xkICdlbSEgQmV0dGluZyBzdGFydHMgdG8gdGhlIGxlZnQgb2YgdGhlIGJpZyBibGluZCwgYW5kIGNvbnRpbnVlcyBhcm91bmQgdGhlIHRhYmxlLiBUbyBjb250aW51ZSBwbGF5aW5nIHlvdSBtdXN0IGNhbGwgYSAyIHVuaXQgYmV0LgpNQVNTQUdFIFBSSUNFRCBCWSBUSEUgSE9VUjIuIFRIRSBJTkNPTUUgUEFSVE5FUlNISVAgUFJPR1JBTTMuIFRIRSBDVVNUT01FUiBDMFVSVEVTWSBNQVNTQUdFIFBST0dSQU0xLiBNQVNTQUdFIFBSSUNFRCBCWSBUSEUgSE9VUlRoaXMgaXMgdGhlIG1vc3QgYmFzaWMgcHJvZ3JhbSB3ZSBvZmZlciBhbmQgaXMgZGVzaWduZWQgdG8gc2VydmUgYXMgYSBwdWJsaWMgcmVsYXRpb25zIGN1c3RvbWVyIHNlcnZpY2UgZXZlbnQgb3IgYXMgYW4gZW1wbG95ZWUgYmVuZWZpdC5XZSBzZXQgdXAgb3VyIG1hc3NhZ2UgY2hhaXJzIG9yIGEgdGhlcmFweSB0YWJsZSBuZWFyIG9yIGFyb3VuZCB5b3VyIG9mZmljZSwgZXZlbnQsIG9yIHBhcnR5LlRoZSBmZWUgaXMgYmFzZWQgb24gdGhlIG51bWJlciBvZiBjaGFpcnMvdGFibGVzIGFuZCB3b3JrZXJzIHJlcXVpcmVkLCB0aGUgbnVtYmVyIG9mIGhvdXJzIGJvb2tlZCBhbmQgdGhlIGxvY2F0aW9uIG9mIHRoZSBldmVudC4gCk5vY2ggdm9yIGRlbSBCZXN0ZWxsZW4gdmVybHNzdCBlciBkYXMgTG9rYWwgd2llZGVyIHVuZCBnZWh0IG1pdCBkZW0gQnVzIG5hY2ggSGF1c2UsIHdvIGVyIHNpY2ggbm9jaCBlaW5lIG5ldWUgRmxhc2NoZSB1cmFsdGVuIENvZ25hYyB6dSBHZW10ZSBmaHJ0LiAKSXQgaXMgaW1wb3J0YW50IGFuZCBhYnNvbHV0ZWx5IGVzc2VudGlhbCB0byBlbnN1cmUgdGhhdCB0aGUgZWRnZXMgYXJlIGluIGdvb2QgY29uZGl0aW9uIGFuZCB0aGF0IHRoZXkgYXJlIG5vdCBtYXJrZWQgaW4gYW55IHdheS4gCkNhbGxpbmcgaXQgImZvcm1hZ2dpbyBwYXN0YSIuIApMU0QgaXMgYSB3b25kZXJmdWwgdG9vbCBmb3IgaW50cm9zcGVjdGlvbi4gCkZ1cnRoZXIgaW5mb3JtYXRpb24gaXMgYXZhaWxhYmxlIG9uIHRoZSBJbmZvcm1hdGlvbiBHb3Zlcm5hbmNlIHdlYnBhZ2VzLiBUaGUgQWN0IGdpdmVzIHlvdSBhIHJpZ2h0IG9mIGFjY2VzcyB0byByZWNvcmRlZCBpbmZvcm1hdGlvbiBoZWxkIGJ5IHRoZSBVbml2ZXJzaXR5LiBZb3UgaGF2ZSB0aGUgcmlnaHQgdG8gYmUgdG9sZCB3aGV0aGVyIG9yIG5vdCB0aGUgVW5pdmVyc2l0eSBob2xkcyB0aGUgaW5mb3JtYXRpb24gYW5kIGlmIGl0IGlzIHRvIGhhdmUgdGhlIGluZm9ybWF0aW9uIGNvbW11bmljYXRlZCB0byB5b3UuCklmIHlvdSdyZSBub3QgZGVhbHQgYW55IHBhaXJzIG9yIHRocmVlIG9mIGEga2luZHMsIGhvbGQgb250byB5b3VyIGhpZ2ggZmFjZSBjYXJkcyB0byBpbXByb3ZlIHlvdXIgY2hhbmNlcyBvZiBnZXR0aW5nIGEgcm95YWwgZmx1c2guIApGb3Igc3VyZSwgS2VubnkgZGVmaW5pdGVseSBkb2VzIGRvIHRoaW5ncyBsaWtlIHRoYXQgdG9vIGJ1dCBpdCBub3QgYXMgY29uc2lzdGVudCBhcyBJIGxpa2UgaXQgdG8gYmUgYW5kIGhlIGRlZmluaXRlbHkgb3ZlcnNlbGxzIGEgbG90IG9mIG1vdmVzIGJ1dCB0aGF0IHJlYWxseSBtb3JlIGhpcyBzdHlsZSByYXRoZXIgdGhhbiBhIHJlYWwgZmxhdy4gSGUgdHJpZXMgdG8gc3RlYWwgdGhlIHNob3cgd2l0aCBldmVyeXRoaW5nLCBldmVuIHRoZSB3YXkgaGUgYnVtcHMgYW5kIHNlbGxzLiAKV2l0aCBoZWF2eSByYWluIHByZWNsdWRpbmcgcGxheSBkdXJpbmcgdGhlaXIgMjAwNiBDaGFtcGlvbnNoaXAgY2xhc2ggYXQgdGhlIFJvc2UgQm93bCwgSGFtcHNoaXJlIHNraXBwZXIgU2hhbmUgV2FybmUgYW5kIGhpcyBLZW50IGNvdW50ZXJwYXJ0IFJvYiBLZXkgcGFzc2VkIHRoZSB0aW1lIGJ5IHBsYXlpbmcgcG9rZXIuICJXZSBzdGFydGVkIHBsYXlpbmcgd2hlbiB0aGUgcmFpbiBzdGFydGVkIGFuZCBwbGF5ZWQgaW50byB0aGUgbmlnaHQsIiBLZXkgdGVsbHMgQU9DLiAKVGhlIGdvb2QgbmV3cyBpcyB0aGF0IHdoZW4gY3JlYXRpdmUgY2FwaXRhbGlzbSBpcyB3b3JraW5nIGFzIGl0IHNob3VsZCwgcHJvYmxlbXMgb3BlbiB0aGUgZG9vciB0byBvcHBvcnR1bml0eS4KVGhlIFJvY2tTdG9wIHdpbGwgbmV2ZXIgYmUgYSBtYWpvciBjb250cmlidXRvciB0byB0aGUgYm90dG9tIGxpbmUgb2YgdGhlIFJvY2tzaW5vLiAKUHJldmlvdXNseSB0aGUgUGhpbGlwcGluZXMgaGFkIGEgd2hvbGUgcmFuZ2Ugb2YgbG9jYWwgZGlhbGVjdHMKTWFrZSBzdXJlIHlvdSBzdG9yZSBpdCBpbiBhbiBhaXIgdGlnaHQgYm90dGxlIG9yIGNvbnRhaW5lci4gSXQgaXMgdmVyeSBpbXBvcnRhbnQgdGhhdCB5b3UgZG8gdGhpcyBwcm9jZWR1cmUgaW4gYSBjb29sIGFuZCBzaGFkZWQgcm9vbS4gCkFmdGVyIG15IGRpdm9yY2UgSSBzcGVudCAxMCBkYXlzIHRyYXZlbGxpbmcgYXJvdW5kIEVjdWFkb3Igd2l0aCBhIGdpcmwgSSB3YXMgZGF0aW5nIGF0IHRoZSB0aW1lLiBUaGVuIGluIDIwMTcgbXkgY3VycmVudCBHRiBhbmQgSSBzcGVudCA1IHdlZWtzIHRyYXZlbGxpbmcgYXJvdW5kIFRoYWlsYW5kLCBQaGlsaXBwaW5lcywgQmFsaSwgS29tb2RvLiBXZSBib3RoIFNDVUJBIGRpdmVycywgc28gZGl2ZWQgaW4gc29tZSBpbmNyZWRpYmxlIHNwb3RzLiAKU2V0dGluZyB1cCBhIGJldHRpbmcgbGltaXQgZXZlbiBpZiB5b3UgYXJlIHBsYXlpbmcgd2l0aCAkMSAyIG9yICQyIDQgYmxpbmRzIGFuZCBzdGlja2luZyB0byB5b3VyIGxpbWl0IGlzIHRoZSBiZXN0IHdheSB0byBwbGF5LiAKQW5kIGhlIGRvZXMgdGhhdCBieSBjbGFpbWluZyB0aGF0IGhlIGtub3dzIGhvdyB0byBwaWNrIG9yIHdoYXQgaXMgIiB3b21lbiBpbiBwdWJsaWMgb2ZmaWNlIHdobyBhcmUgd2lsbGluZ2x5IHRvIGRvIHRoZSBiaWRkaW5nIGZvciB0aGVpciBwYXRyb24uClRoZSBjbGFzcyB3YXMgYWJvdXQgcmVhZGluZyBib2R5IGxhbmd1YWdlLCBkZXRlY3RpbmcgbGllcywgYW5kIGhvdyBOaXhvbiBpcyB0aGUgbW9zdCBmYW1vdXMgZm9yIHRoZSB1c2Ugb2YgTm8gY29udHJhY3Rpb24uIApZZXMsIEkgdGhyZXcgYXdheSB0aGUgYmFnIG9mIHBvb3B5IHNvY2tzLiAKRG8gbm90IHBvc3QgYW55dGhpbmcgd2l0aCBhIGhpbnQgb2YgdHJ1dGguCkkgd2lzaCBJIGNvdWxkIHRlbGwgeW91IHRoYXQgbm9uIGhvdXNlYnJva2VuIHBhdHJvbnMgd2VyZSBhIGZyZWFrIG9jY3VycmVuY2UsIGJ1dCBpdCBhY3R1YWxseSBiZWNhbWUgc3VjaCBhIGh1Z2UgcHJvYmxlbSBmb3IgdXMgdGhhdCB0aGUgTW9oZWdhbiBTdW4gbm93IGhhcyBhbiBlbnZpcm9ubWVudGFsIHNlcnZpY2VzIHRlYW0ganVzdCB0byBjb21lIGluIGFuZCB0YWtlIG91ciBzb2lsZWQgY2hhaXJzIGF3YXkgZm9yIGRlZXAgY2xlYW5pbmcuIApJdCB3YXNuJ3QgdW51c3VhbCBmb3IgQ29sLiBTYW0gdG8gaGF2ZSBKb2Ugc2l0IGluIHRoZSBiYWNrIHNlYXQgd2hpbGUgQ29sLiAKSGUgZ3JvYW5zLiBTdGlsbCBhbGl2ZSwgZ29vZC4gWW91IGxvb2sgZm9yIHRoZSBndW4gYnV0IGl0J3MgZGFyayBzbyBpdCdzIGhhcmQgdG8gc2VlLiAKSSBwbGF5ZWQgaXQgYXQgbXkgd2VkZGluZy4gCihJIGVuY291cmFnZSB5b3UgdG8gZGVmaW5lIHlvdXIgb3duIHJhbmdlIGFuZCBwbHVnIGl0IGludG8gYW4gZXF1aXR5IGNhbGN1bGF0b3IgYWdhaW5zdCBoaXMgb24gdGhpcyBmbG9wLikKSSBkb24ga25vdyB0aGUgbWFnbml0dWRlIG9mIHdoaWNoIHRoYXQgaGUgImhpdCBpdCBiaWciIGJ1dCBJIHNlZW4gbWFueSBwZW9wbGUgaW4gbXkgbGluZSBvZiB3b3JrIHdpdGggZmFpbGVkIHN0YXJ0IHVwcyBhbmQgZmluYW5jaWFsIHByb2JsZW1zIGZyb20gcG9vciBzcGVuZGluZyBjaG9pY2VzLlRoZSBsYWRkZXIgdG8gc3VjY2VzcyBpcyB1bmZvcnR1bmF0ZWx5IGxvbmVseS4gTHVja2lseSB0aGVzZSBwZW9wbGUgYXJlIG1ha2luZyB0aGVtc2VsdmVzIGtub3duIHJhdGhlciBlYXJseS5UaGUgZ29hbCBvZiB3b21lbiBpbiB0aGlzIHN1YnJlZGRpdCBpcyB0byBpbnNwaXJlIGEgbWFuIGRlc2lyZSB0byBjb21taXQgdG8gdXMgaW4gYSB3YXkgdGhhdCBkaWZmZXJlbnQgdGhhbiB0aGUgc29jaWV0YWwgbm9ybSBvZiBwcmVzc3VyaW5nIG1lbiBhbmQgcHVzaGluZyB0b3VnaCBzdWJqZWN0cy4gCkJhZGdlcnMgYXJlIHZlcnkgYWN0aXZlIGF0IG5pZ2h0IGJlY2F1c2UgdGhleSBhcmUgbm9jdHVybmFsIGFuaW1hbHMuIFRoZWlyIGZhY2VzIGhhdmUgZGlzdGluY3QgYmxhY2sgYW5kIHdoaXRlIG1hcmtpbmdzLiBXaGVuIGZ1bGx5IGdyb3duLCB0aGV5IGNhbiB3ZWlnaCB1cCB0byAxMiBraWxvZ3JhbXMsIGdyb3dpbmcgdG8gYSBtZXRlciBsb25nLiBCYWRnZXJzIGFyZSBkaWdnZXJzIHdpdGggbG9uZywgc3Ryb25nIGNsYXdzIG9uIHRoZWlyIGZyb250IHBhd3MuCkJ1dCBhdCBsZWFzdCBzaGUgd29uJ3QgZXZlciBhZ2FpbiBoYXZlIHRvIGNvcGUgd2l0aCBoYXZpbmcgdG8gY2FyZSBmb3Iga2l0dGVucyBhbmQgd2UgZGlkIHRoZSBiZXN0IGZvciBoZXIgdGhhdCB3ZSBjb3VsZC4uIApCZXNpZGVzIHRoaXMgb25lIGNhbiBhbHNvIGVuam95IHZpZGVvIHBva2VyIGdhbWUgdGhhdCBvZmZlciBoaWdoIHBhY2VkIHBva2VyIGFuZCBzZWFtbGVzcyBnYW1lcGxheS4gU29tZSBvZiB0aGUgcG9rZXIgZ2FtZXMgYWxzbyBmZWF0dXJlIHNsaWNrIGdyYXBoaWNzIGFuZCBhbmltYXRpb24sIHNvdW5kIGVmZmVjdHMsIGFkdmFuY2VkIHVzZXIgaW50ZXJmYWNlIGFuZCBmYW50YXN0aWMgY2FzaCBwcml6ZXMgdG8gYmUgd29uIG9uIGV2ZXJ5IGdhbWUuIApUaGUgcG9rZXIgZ2FtZSBpcyBvbmx5IG9uZSBvZiB0aGUgZ2FtZXMgb24gdGhlIHRhYmxlLCBhbmQgZWFjaCBvbmUgaXMgYSBjb21wbGV0ZSBnYW1lIHVudG8gaXRzZWxmLiBXaGVuIGFsbCB0aGUgZ2FtZXMgYXJlIHBsYXllZCBhbmQgd29uLCBhIHNwZWNpYWwgbW9kZSBjYWxsZWQgIkNhc2lubyBGcmVuenkiIGlzIGFjdGl2YXRlZC4gS25vd24gYXMgYSAiV2l6YXJkIEF3YXJkIiBpbiBwaW5iYWxsIGNpcmNsZXMsIHRoZSBiaWcgcG9pbnRzIGFyZSBzY29yZWQgaW4gdGhpcyBtb2RlLiAKRGVzIHNvbGxpY2l0YXRpb25zLCB1bmUgY2VydGFpbmUgYXR0ZW50aW9uICBtb24gbWVzc2FnZSBkZSBsaWJlcnQgYWxpbWVudGFpcmUuIApJbnZlc3RpZ2F0aW9uIHJlbWFpbnMgYSBwcmlvcml0eSBmb3Igb2ZmaWNlcnMgaW4gdGhlIFZQRCBjb3VudGVyIGV4cGxvaXRhdGlvbiB1bml0LCBzYWlkIERvdWNldHRlLiBkZXRlY3RpdmVzIGFyZSBjb250aW51aW5nIHRvIHByb2Nlc3MgdGhlIGluZm9ybWF0aW9uIGNvbGxlY3RlZCwgaW5jbHVkaW5nIHRoZSBvbmdvaW5nIGFuYWx5c2lzIG9mIGl0ZW1zIHNlaXplZCwgaW4gb3JkZXIgdG8gcHJvdmlkZSBDcm93biBjb3Vuc2VsIHdpdGggdGhlIGJlc3QgZXZpZGVuY2UgdG8gc2VjdXJlIGNyaW1pbmFsIGNoYXJnZXMuIFByb3NlY3V0aW9uIFNlcnZpY2UgbXVzdCBhcHByb3ZlIGNoYXJnZXMgcmVjb21tZW5kZWQgYnkgcG9saWNlLCBiYXNlZCBvbiB0aGVpciBsaWtlbGlob29kIG9mIHN1Y2NlZWRpbmcgYXQgdHJpYWwsIGFtb25nIG90aGVyIGZhY3RvcnMuCk5vdyB0aGF0IHdlIGtub3cgdGhpcyBpcyBoYXBwZW5pbmcsIHNvbWVvbmUgd2lsbCBzdG9wIGl0IHJpZ2h0PyBBZnRlciBhbGwsIHRoaXMgZ292ZXJubWVudCBmaXJzdCBwcmlvcml0eSB3YXMgc3RhbmRpbmcgaW4gdGhlIGZvcmVmcm9udCBvZiBodW1hbiByaWdodHMuIFRoZXkgY2FtZSB0byBwb3dlciwgcHJvbWlzaW5nIHRvIGltcHJvdmUgdGhlIGh1bWFuIHJpZ2h0cyBpbiB0aGUgY291bnRyeSBmb3IgYWxsLiBTbyB0aGV5IHdpbGwgc3RlcCBpbiBhbmQgc3RvcCB0aGlzIGFidXNlIG9mIGh1bWFuIHJpZ2h0cywgcmlnaHQ/IEkgaG9wZSBzby4uIApTb21laG93LCBoZSBnZXRzIGhpcyBvbGQgam9iIGJhY2ssIGFuZCBoZSB3b3JraW5nIHdoZW4gaGUgc2VlcyBhIGdpcmwgc3RpY2sgaGVyIGd1bSBvbiB0aGUgYmFjayBvZiBhIHNlYXQuIApJIGhhZCBzcGVjaWZpY2FsbHkgcHV0IGludG8gdGhlIHN5c3RlbSBhbmQgdG9sZCB0aGVtIEkgY291bGRuJ3Qgd29yayB3ZWVrcyBiZWZvcmVoYW5kLiAKR2l2ZSBiYWNrIHNhZmUgc21va2luZyByb29tIHRvIFZhbmNvdXZlciBjcmFjayB1c2VycwpJIGFtIHR1cmtpc2gsIGJvcm4gYW5kIHJhaXNlZCBpbiBHZXJtYW55IGFuZCBJIHJlZ3VsYXJseSB2aXNpdCBmYW1pbHkgaW4gVHVya2V5LiBQb2xpdGljYWxseSBpdCBpcyB0ZW5zZSBidXQgb3RoZXJ3aXNlIGl0J3MgYWxyaWdodCBhbmQgdGhlIHBlb3BsZSBhcmUgc28gd2FybSBhbmQgd2VsY29taW5nLiAKQW5kIG91dCB0aGlzIHZpZGVvIChmYW50YXN0aWMgZWxlY3Ryb24gbWljcm9zY29wZSBpbWFnZXMgYXQgNCB0byA2IG1pbiBtYXJrKSBvZiBEci4gV2FycmVuIEhhbW1lciBvZmZlcmluZyBwYXRpZW50IGZyaWVuZGx5IGV4cGxhbmF0aW9uIG9mIHRoZSBhbmF0b215IGFuZCBwaHlzaW9sb2d5IG9mIGZhc2NpYSBhdCB0aGUgRmFzY2lhbCBNYW5pcHVsYXRpb24gd29ya3Nob3AgaW4gRGFsbGFzLCBOb3YsIDIwMTEKVGhlIGNsdWIncyBnbG9yeSB5ZWFycyB3ZXJlIGluIHRoZSAxOTcwcyBhbmQgMTk4MHMgYmVmb3JlIHBva2VyIG1hY2hpbmVzIHdlcmUgaW50cm9kdWNlZCBpbnRvIFZpY3RvcmlhLiBUaGUgUGFudGhlcnMgR3JvdXAgcmVzY3VlZCB0aGUgYWlsaW5nIExhdmluZ3RvbiBTcG9ydHMgQ2x1YiBpbiAyMDAxLiBUSEUgSGliYmFyZCBTcG9ydHMgQ2x1YiBMdGQgY291bGQgYmUgb3BlcmF0aW5nIGFzIGEgbmV3IGVudGl0eSBieSBOb3ZlbWJlci4gCjIyNyAyNSBub3V2ZWF1IGNvZGUgcG5hbCkuIFNpIGxlIG1pbmV1ciBhIHBsdXMgZGUgMTUgYW5zLCBsJ2luZnJhY3Rpb24gbidlc3QgcGx1cyBjb25zdGl0dSBzYXVmIGV4Y2VwdGlvbnMgcHJ2dWVzIGVuIGxhIG1hdGlyZTogc2kgbCdpbmRpdmlkdSBlc3QgdW4gYXNjZW5kYW50IGxnaXRpbWUsIG5hdHVyZWwgb3UgYWRvcHRpZiwgb3UgdG91dGUgYXV0cmUgcGVyc29ubmUgYXlhbnQgYXV0b3JpdCBzdXIgbGUgbWluZXVyOyBzaSBsYSBwZXJzb25uZSBhYnVzZSBkZSBsJ2F1dG9yaXQgcXVlIGx1aSBjb25mcmUgc2VzIGZvbmN0aW9uczsgb3Ugc2kgbGUgbWluZXVyIHNvdWZmcmUgZCd1bmUgcGFydGljdWxpcmUgdnVsbnJhYmlsaXQgKGFydC4gMjI3IDI3IGV0IDIyMiAyOSBub3V2ZWF1IGNvZGUgcG5hbCksIGNhcyBwYXIgZXhlbXBsZSBkJ3VuZSBhZ3Jlc3Npb24gZmFpdGUgcGFyIHVuIHBhcmVudCwgdW4gYmVhdSBwYXJlbnQgb3UgdW4gcHJvZmVzc2V1ci4gCkluIHRydXRoLCB3b21lbiBtYWtlIHVwIGFwcHJveGltYXRlbHkgODAgcGVyY2VudCBvZiBhbGwgcGxhc3RpYyBzdXJnZXJ5IHBhdGllbnRzLiBXaGlsZSBib3RoIGludm9sdmUgdGhlIGltcHJvdmVtZW50IG9mIHlvdXIgYXBwZWFyYW5jZSwgdGhlcmUgYXJlIGRpc3RpbmN0IGRpZmZlcmVuY2VzLiBCb3RoIHBsYXN0aWMgc3VyZ2VyeSBhbmQgcmVjb25zdHJ1Y3RpdmUgc3VyZ2VyeSBhcmUgZGVzaWduZWQgdG8gaW1wcm92ZSB0aGUgYXBwZWFyYW5jZSBvZiBhIHBlcnNvbi4gCk5vIGRvdWJ0LCBhdCBoaWdoZXIgd2VpZ2h0cyBpdCBjYW4gbWFrZSB0aGUgbGlmdCBkaWZmZXJlbnQgYW5kIGVhc2llci9oYXJkZXIuIApJIGhhZCB0byBwYXkgYmFjayB0aGUgc3RhdGUgdGhlIHN0dXBpZCAzIHdlZWtzIChpdCB3YXMgYXJvdW5kICQ0NjggdG90YWwpIGFuZCB0YWtlIHRoZSBqb2IgZm9yIGEgd2hvcHBpbmcgOSBob3VycyBhIHdlZWssIHRoaXMgaXMgd2hpbGUgSSBzZXZlcmFsIG1vbnRocyBwcmVnbmFudCBhbmQgZ29pbmcgdG8gc2Nob29sLiAKRG9lcyBmaXZlIG9mIGEga2luZCBiZWF0IGEgc3RyYWlnaHQgZmx1c2gKWnl6eWZlckVtYmVyIE1vb24gYW5kIEtyaXMgV29sZiBzaG91bGQgYmUgYSB0YWcgdGVhbQpJbCBzZW1ibGUgcXVlIGxlIHN1amV0IGZhc3NlIGVuY29yZSB2ZW5kcmUgZHUgcGFwaWVyLCBtbWUgc2kgbGEgc2l0dWF0aW9uIG5lIHByb2dyZXNzZSBwYXMgYmVhdWNvdXAuCkhhdmUgcGxheWVkIGFzIG1vc3Qgb2YgdGhlc2UgY2hhcmFjdGVycyBiZWZvcmUsIGFuZCB0aGV5IGRvIHBsYXkgcHJldHR5IG11Y2ggdGhlIHNhbWUuIApBbHNvIFZpZXdlZCBBZHZhbmNlbWVudHMgYW5kIFByb21vdGlvbnMgZm9yIGEgUGhhcm1hY2lzdCBUaGUgRWZmZWN0cyBvZiBFbXBsb3llZSBSZXNpZ25hdGlvbnMgb24gUHJvZHVjdGl2aXR5IFRoZSBSb2xlIG9mIGEgUmV0YWlsIEZsb29yIE1hbmFnZXIgRmFzaGlvbiBCdXllciBDYXJlZXJzIFdoYXQgRG8gU3VwZXJtYXJrZXQgU3VwZXJ2aXNvcnMgRG8/IFdoYXQgRXhwZXJpZW5jZSBJcyBOZWNlc3NhcnkgdG8gQmUgYSBCdXllciBpbiBhIFJldGFpbCBTdG9yZT8gV2hhdCBLaW5kIG9mIEpvYiBDYW4gWW91IEdldCBXaXRoIGFuIEFkdmVydGlzaW5nIGFuZCBNYXJrZXRpbmcgQ29tbXVuaWNhdGlvbnMgRGVncmVlPwpPUCwgeW91IG1pZ2h0IGNvbnNpZGVyIGhhdmluZyB5b3VyIGF0dG9ybmV5IHNlbmQgaGVyIGEgY2Vhc2UgYW5kIGRlc2lzdCBsZXR0ZXIgZmlyc3QgYnV0IG1ha2UgaXQgcGxhaW4gdGhhdCBhZGRpdGlvbmFsIGxlZ2FsIHJlbWVkaWVzIHdpbGwgYmUgcHVyc3VlZCBpZiBuZWNlc3NhcnkuIApTb2xpY2l0b3IgVGltIEhlbXNsZXkgcmVwcmVzZW50ZWQgV2Vsc2gsIGEgZm91cnRoIHllYXIgYXBwcmVudGljZSBwbHVtYmVyLCB3aG8gd2FzIGNvbmNlcm5lZCBob3cgYSBjb252aWN0aW9uIHdvdWxkIGltcGFjdCBoaXMgZnV0dXJlLiAiVGhlIGFtb3VudCBvZiBtb25leSB0YWtlbiB3YXMgdGhlIGdyYW5kIHN1bSBvZiAkMTEsIiBNciBIZW1zbGV5IHNhaWQuICJJdCBpcyBhIG1hdHRlciB3aGVyZSBoZSBjb3VsZCBiZSBnaXZlbiBhbiBvcHBvcnR1bml0eS4iIEJ1dCB0aGUgc3VibWlzc2lvbiBzZWVraW5nIG5vIGNvbnZpY3Rpb24gd2FzIHJlamVjdGVkIGJ5IE1yIE11cnJheSwgd2hvIHNhaWQgYm90aCBXZWxzaCBhbmQgU3VwaGVlcnQgaGFkIHJlcGVhdGVkbHkgcHV0IHRoZWlyIGhhbmRzIGludG8gdGhlIG1hY2hpbmUgdG8gdGFrZSB0aGUgbW9uZXkuIApIZSB3b24gRVZFUlkgaGFuZCBhbmQgSSB3YXMgY2FyZCBkZWFkLiAKTWFuYWdlZCB0byBydW4gd2VsbCBhbmQgZ290IG15IDEwIEV1cm8gYnV5IGluIHVwIHRvIG5lYXJseSAzMCBFdXJvcy4gSSBjYW4gY29uZmlkZW50bHkgc2F5IEkgYW0gbm93IGEgd2lubmluZyBwbGF5ZXIuIApTbyBpdCBpc24gYSBodWdlIHN1cnByaXNlIHRoYXQgYWxvbmcgc2lkZSBTdGVwaGVuIEhhd2tpbmcsIFRlZCBLZW5uZWR5LCBhbmQgRGVzbW9uZCBUdXR1LCBIYXJ2ZXkgTWlsayB3aWxsIGJlIHBvc3RodW1vdXNseSBob25vcmVkIHdpdGggYSBNZWRhbCBvZiBGcmVlZG9tLi4gCkV4Y2VwdCBwcmF5LiBQcmF5IHJlYWxseSByZWFsbHkgaGFyZCB0aGF0IHRoaXMgbWFkbmVzcyB3aWxsIGVuZCwgdGhlIENocmlzdGlhbiBSaWdodCB3aWxsIG9jY3VweSBpdHMgcmlnaHRmdWwgcGxhY2Ugb3V0c2lkZSB0aGUgcG93ZXIgb2YgdGhlIHN0YXRlLCBhbmQgd2UgY2FuIHNvbWVob3cgZ28gYmFjayB0byBhIHRpbWUgd2hlbiBzZXBhcmF0aW9uIG9mIENodXJjaCBhbmQgU3RhdGUgaGFkIG1vcmUgb2YgYSBjaGFuY2Ugb2Ygc3Vydml2YWwgdGhhbiBhbiBpY2UgY3ViZSBpbiBIZWxsLi4gClRoZSBQUFAgc2VlbWVkIHRvIGhhdmUgYmVjb21lIHZlcnkgcmVsZXZhbnQgdG8gdGhlIGN1cnJlbnQgY3Jpc2lzLiAKRXZlcnkgd29tYW4gaXMgZGlmZmVyZW50IGFuZCBhcyBzdWNoLCB0aGV5IGFsbCBoYXZlIGVudGlyZWx5IGRpZmZlcmVudCBuZWVkcy4gVGhlIGJlc3QgdGhpbmcgeW91IGNhbiBkbyBpcyBsZWFybiBhbGwgeW91IGNhbiBhYm91dCB5b3VyIGdpcmxmcmllbmQuIFRoaXMgaXMgZ29pbmcgdG8gaGVscCB5b3Ugc2VlIHRoYXQgc2hlIGlzIG5vdCBsaWtlIGV2ZXJ5IG90aGVyIGdpcmwuIApBbmQgdGhlICJtaWxpdGlhIiBjbGF1c2Ugd2FzIGRlc2lnbmVkIHNvIHRoYXQgc21hbGwgZmlnaHRpbmcgZm9yY2VzIGNvdWxkIGJlIG11c3RlcmVkIGluIHNwYXJzZWx5IHBvcHVsYXRlZCB0ZXJyaXRvcmllcy4KTXkgZ3JhbmRtYSB3aGVuIEkgd2FzIHlvdW5nLCBzaGUgYWx3YXlzIGhhZCBhIGphY2sgbyBhcyB0aGUgaGVhZCBvbiBhIHN0cmF3IHN0dWZmZWQgb3V0Zml0IHdlYXJpbmcgb3ZlcmFsbHMgYW5kIGEgcGxhaWQgc2hpcnQgd2l0aCBydWJiZXIgYm9vdHMuIEl0IHdvdWxkIGJlIHNpdHRpbmcgaW4gYSBsYXduIGNoYWlyIG9uIHRoZSBmcm9udCB2ZXJhbmRhaCBob2xkaW5nIHRoZSBjb250YWluZXIgb2YgY2FuZHkKSW5jcmVtZW50YWwgbG9zc2VzIGFyZSBub3QgZmFpbHVyZXMgICB0aGV5IGFyZSBsZXNzb25zIHRvIGJlIGxlYXJuZWQgaW4geW91ciBtYXJjaCB0byB2aWN0b3J5LiAKUGlZaW5nICA3IHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvCkl0IG1vc3RseSB0aGUgeW91dGggd2hvIGFyZSBhbmdlcmVkIGJ5IHRoZSBvcHByZXNzaW9uIG9mIHRoZWlyIHBlb3BsZSBmb3Igc28gbG9uZywgYW5kIHNvIGl0IGlzIHRoZSB5b3V0aCB3aG8gZ28gb24gdGhlIHN0cmVldHMgdG8gbWFyY2ggYW5kIHByb3Rlc3QsIGFuZCB0aGUgeW91dGggd2hvIGVuZCB1cCBkeWluZywgZnVlbGluZyB0aGlzIGN5Y2xlIG9mIHZpb2xlbmNlLiAKQWZ0ZXIgVGhlIFJvb2tpZSBMb3QgZGlzYmFuZGVkLCBKZXNzZSwgR2FycmV0dCwgYW5kIEJyaWFuIGZvcm1lZCBCcmFuZCBOZXcsIHdoaWxlIEJyYW5kb24gd2VudCBvbiB0byBwbGF5IGluIFRoZSBNb3ZpZWxpZmUgYW5kIE5pZ2h0bWFyZSBvZiBZb3UuIApJbiBWYW5jb3V2ZXIsIGZvciBleGFtcGxlLCB0aGUgaW5jb21lIG5lY2Vzc2FyeSB0byBjb3ZlciBvd25lcnNoaXAgY29zdHMgYW5kIGNsZWFyIHRoZSBtb3J0Z2FnZSBzdHJlc3MgdGVzdCB3YXMgJDIxMSwwMDAgaW4gdGhlIHRoaXJkIHF1YXJ0ZXIuIFRoaXMgaXMgY2xlYXJseSBhdCB0aGUgaGlnaGVyIGVuZCBvZiB0aGUgaW5jb21lIHNjYWxlLiAKSSBhIDMyIHllYXIgb2xkIHN0cmFpZ2h0IGR1ZGUsIGFuZCBJIGNhbiBzdGlsbCByZW1lbWJlciB0aGUgc21lbGwgb2YgaGlzIGFmdGVyc2hhdmUgaW4gbXkgZHJlYW0sIGFuZCB0aGUgY29uZnVzaW5nIGJvbmVyIEkgd29rZSB1cCB3aXRoLi4gCkhlbnJ5J3MgZmFtaWx5IHdpc2hlcyB0byBleHByZXNzIHRoZWlyIHNpbmNlcmUgZ3JhdGl0dWRlIHRvIHRoZSBOdXJzZXMsIE1lZGljYWwgU3RhZmYgYW5kIERvY3RvcnMgYXQgdGhlIENoaW5vb2sgUmVnaW9uYWwgSG9zcGl0YWwuIEZhbWlseSBhbmQgZnJpZW5kcyBhcmUgaW52aXRlZCB0byBwYXkgdGhlaXIgcmVzcGVjdHMgZnJvbSA3OjAwcG0gdG8gODozMHBtIG9uIE1vbmRheSwgU2VwdGVtYmVyIDE3LCAyMDE4IGF0IE1BUlRJTiBCUk9USEVSUyBSSVZFUlZJRVcgQ0hBUEVMLCA2MTAgNCBTdCBTb3V0aCwgTGV0aGJyaWRnZSwgQWxiZXJ0YS4gCkZpbmQgc29tZXRoaW5nIHRoYXQgbmVlZHMgZG9pbmcsIGRvbiBhc2sgICBqdXN0IGRvLiBPciBhdCBsZWFzdCwgaWYgeW91IGRvIGFzaywgYXNrIHdpdGggYSBwdXJwb3NlICAgbm90IEkgaGVscD8gYnV0IGlzIHRoZSB0ZWEgdG93ZWwsIEkgZ29pbmcgdG8gd2FzaCB0aGUgZGlzaGVzIG9yIHlvdSBva2F5IGlmIEkgd2lwZSBkb3duIHRoaXMgY291bnRlciBub3c/IEFsc28gSSB0ZW5kIHRvIHNheSB0aGluZ3MgbGlrZSB3b3VsZCBibGVzcyBtZSBpZiBJIGNvdWxkIGhlbHAgb3V0IG9yIHNpdCBkb3duIGFuZCBJIHdpbGwgbWFrZSB5b3UgYSBjdXAgb2YgdGVhIHdoaWxlIEkgd2FzaGluZyB1cCBkZW1vbnN0cmF0ZSB5b3Ugd2FudCB0byBoZWxwIG91dCwgYmUgdGhlIGZpcnN0IHVwIGZyb20gdGhlIHRhYmxlLCBicmluZyBob21lbWFkZSBmb29kcyBhbG9uZyAob3IgY2FuIHlvdSBvZmZlciB0byBtYWtlIG9uZSBvZiB0aGUgY291cnNlcz8pLi4gCldoYXQgSSB1c2UgdG8gdGVsbCBteSBjbGllbnRzIGlzIHRoYXQgdGhleSBuZWVkIHRvIGdldCB0d28gd2hpdGUgc2hpcnRzIGFuZCBvbmUgYmx1ZSBzaGlydC4gR2V0IGEgY291cGxlIHRpZXMgdGhhdCBtYXRjaCBhbmQgYSBwb2NrZXQgc3F1YXJlLiAKV2UgcHJldmlvdXNseSByZXBvcnRlZCB0aGUgcmVzdWx0cyBvZiBhIHN0dWR5IGluIHdoaWNoIGEgYmFzaWMgY29tcGV0ZW5jeSBleGFtaW5hdGlvbiBpbiBtdXNjdWxvc2tlbGV0YWwgbWVkaWNpbmUgd2FzIGFkbWluaXN0ZXJlZCB0byBhIGdyb3VwIG9mIHJlY2VudCBtZWRpY2FsIHNjaG9vbCBncmFkdWF0ZXMuClRoZW4gZGVjaWRlIHdoYXQgdG8gYnV5IG5vdyB2ZXJzdXMgbGF0ZXIsIGJhbGFuY2luZyB3aGF0IHRoZXkgbmVlZCB3aXRoIHNvbWUgb2Ygd2hhdCB0aGV5IHdhbnQuLiAKSSBoYXZlIGJlZW4gbmljZSBhbmQgcmVsYXhlZC4gCkRpZSBGZXJ0aWdzdGVsbHVuZyBkZXMgRWNvbm9teSBIb3RlbHMgaXN0IGZyIEZyaGphaHIgMjAxNiBnZXBsYW50Li4gCkRvc3lhIEJveXV0dSA6IDI2NyBNQi4gQ3JhY2sgOiBlcmlzaW5kZSBNZXZjdXR0dXIuIApDYW4gWW91IFRha2UgdGhlIExQTiBOQ0xFWCBJZiBZb3UgSGF2ZSBhIEJTTj8KQ2FsbCB1cCB0byB0aGUgdHVybiB0aGVuIGNoZWNrIHJhaXNlClBhcmtpbiwgQi4sIFdhcnJpbmVyLCBLLiAKQUhBTSBhbmQgRW5lcmd5IFN0YXIgY2VydGlmaWVkIGFpciBwdXJpZmllciBpcyBkZXNpZ25lZCBmb3IgYSBtZWRpdW0KTm8gb25lIGhhZCBhIGNsdWUgYWJvdXQgYSBwb3NzaWJsZSBtb3RpdmUsIGFuZCBldmVuIGxlc3MgYWJvdXQgdGhlIGN1bHByaXQuIApJZGVhbCBzZWxlY3Rpb25zIHdvdWxkIGJlIGZyZXNoIHZlZ2V0YWJsZXMsIGZydWl0cywgd2hpdGUgbWVhdCBhbmQgZmlzaC4gRXhjaGFuZ2UgeW91ciBhbGNvaG9saWMgYW5kIGNhcmJvbmljIGRyaW5rcyB3aXRoIHdhdGVyIGFuZCB0ZWEuIEJlIGZ1bGx5IGh5ZHJhdGVkIGFsbCB0aGUgdGltZS4gCldoYXQgY29uc3RpdHV0ZXMgYW4gInVucmVhc29uYWJsZSBoYXphcmQiIGNhbiB2YXJ5IGEgbG90ICAgd2hlcmUgSSBhbSwgZm9yIGV4YW1wbGUsIGEgaG9tZW93bmVyIGNhbiBiZSBsaWFibGUgZm9yIGluanVyaWVzIGR1ZSB0byBpY2VkIG92ZXIgd2Fsa3dheXMsIGlmIHRoZXkgZG9uIHRha2UgcmVhc29uYWJsZSBzdGVwcyB0byBrZWVwIHRoZSB3YWxrd2F5IGNsZWFyLCBidXQgaWYgdGhlIHdhbGsgaXMgY2xlYXJlZCBwcm9wZXJseSBhbmQgc29tZW9uZSBzbGlwcyBhbnl3YXlzLCBpdCBub3QgY29uc2lkZXJlZCBuZWdsaWdlbnQuIE1vcmUgY29tbW9ubHksIGFuIHVucmVhc29uYWJsZSBoYXphcmQgaXMgc29tZXRoaW5nIGxpa2UgYSBkYW1hZ2VkIGZlbmNlIG9yIGFuIHVuc3RhYmxlIHdhbGtpbmcgcGF0aCwgc3VjaCB0aGF0IGl0IHB1dHMgcGVvcGxlIGF0IHJpc2sgd2hlbiB0aGV5IGRvIG9yZGluYXJ5IHRoaW5ncywgbGlrZSB3YWxraW5nIHVwIHRvIHRoZSBkb29yLgoyMDE0IGhhcywgdG8gZGF0ZSwgYmVlbiBhbiBleHRyZW1lbHkgZ29vZCB5ZWFyIGZvciBKZWZmIE1hZHNlbiAoR1BJMzkpIG9uIHRoZSBsaXZlIHRvdXJuYW1lbnQgY2lyY3VpdC4gT25lIG9mIHRoZSB5b3VuZ2VzdCBwbGF5ZXJzIHRvIGV2ZXIgd2luIGEgV29ybGQgU2VyaWVzIG9mIFBva2VyIGdvbGQgYnJhY2VsZXQgYmFjayBpbiAyMDA2LCBNYWRzZW4sIHdobydzIG5vdyBiZWVuIG9uIHRvdXIgZm9yIGVpZ2h0IHllYXJzLCBpcyBzZWVraW5nIGhpcyBzaXh0aCB3aW4gb2YgdGhlIHNlYXNvbi4KV2l0aCBQb2tlciA1IENhcmRzIHZpZGVvIHBva2VyLCBhbGwgeW91IGRvIGlzIHBsYWNlIGEgYmV0IGJ5IGNsaWNraW5nIG9uZSBvZiBmb3VyIGJveGVzIGJlbG93IHdoZXJlIHlvdXIgY2FyZHMgd2lsbCBiZSBkZWFsdCB0byB5b3UuIFlvdSBzdGFydCB0aGUgZ2FtZSB3aXRoICQyMDAsIHNvIHVubGVzcyB5b3Ugd2luIGVub3VnaCB0byBpbmNyZWFzZSB0aGF0IGFjY291bnQgdGhhdCdzIHlvdXIgbWF4aW11bSBiZXQuIFlvdXIgbWluaW11bSBiZXQgaXMgYWx3YXlzICQxLCBhbmQgeW91IGNhbiBiZXQgYW55IGFtb3VudCBmcm9tICQxIHRvIHRoZSBmdWxsIHNpemUgb2YgeW91ciBjdXJyZW50IGFjY291bnQuCkZvciB5b3VyIGJhYnksIGl0IHNob3VsZCBub3QgYmUgdG9vIHNvb24gYWZ0ZXIgYSBmZWVkICh3aG8gd2FudHMgdG8gYmUgcG9rZWQgaW4gYSBmdWxsIHR1bW15Pykgb3Igc28gY2xvc2UgdG8gYSBtZWFsIHRoYXQgdGhlIGJhYnkgd2lsbCBiZSBodW5ncnkgYW5kIGRpc3RyYWN0ZWQuIApBbmQgeW91IHNheSAib2YgY291cnNlLCBiZWNhdXNlIHRoYXQncyBhbiBpbnRlZ3JhbCBwYXJ0IG9mIHRoZWlyIGJyYW5kaW5nLCBsZWdhY3ksIG9yIHRoZWlyIHN0YXR1cyBxdW8uIiBCdXQgdGhhdCdzIHdoYXQgZ2V0cyB0byBtZS4gT2YgY291cnNlIG1hcmtldCB0cmVuZHMgc2hvdyBtb3JlIGF1dG9tYXRpY3Mgc29sZCB3aGVuIHRoYXQncyB0aGUgb25seSB3YXkgdG8gZ2V0IHRoZSBsYXJnZXIgZW5naW5lIG9yIGhlYXRlZCBzZWF0cy4gTm90IHRvIG1lbnRpb24gb3duZXJzIHRoYXQgc2ltcGx5IGFyZW4ndCB1cGdyYWRpbmcgYmVjYXVzZSBubyBtb2RlbSBzMTAgWlIyIGV4aXN0cwpQbHVzLCBpdCBzZWVtcyB0byBiZSB0aGUgZHJpbmsgb2YgY2hvaWNlIGZvciBwZW9wbGUgd2hvIGFyZSB3aWxsaW5nIHRvIHRyeSBhbmQgaW4gbWFueSBjYXNlcyBhcmUgbG9va2luZyBmb3Igc29tZXRoaW5nIGRpZmZlcmVudCwgSmltIFRyZWxpdmluZyBzYWlkLiAKVGhlbiB3ZSBoYXZlIHRoZSBhY3RpdmlzdHMgYW5kIGNvbnNlcnZhdGlvbmlzdHMsIHdobyBnZW51aW5lbHkgYmVsaWV2ZSB0aGV5IGFyZSBkb2luZyBnb29kLCBwcm9kdWN0aXZlIHRoaW5ncywgZXZlbiB3aGVuIHRoZXkgbm90LCBhbmQgd2hlbiB0aGVpciB3b3JrIHdpbGwgYmUgd2lwZWQgYXdheSBpbiBhIGZldyBtb3JlIHllYXJzIG9mIHRoZSB3ZWF0aGVyIHdlIGV4cGVyaWVuY2luZywgbm93LiBUaGVpciBkZW5pYWwgaXMgdGhhdCBkaXJlY3QgYWx0ZXJhdGlvbnMgdG8gdGhlIGVudmlyb25tZW50IGNhbiByZWFsbHkgaGVscCB1cy4KVGhlcmUgYXJlIGV2ZW4gbW9yZSBpbXBvcnRhbnQgbGVzc29ucyB0byBiZSBsZWFybmVkIGZyb20geWVzdGVyZGF5IGF0dGFja3MgaW4gdGhlIE1vc2NvdyBtZXRybywgaW1wb3J0YW50IGxlc3NvbnMgYWJvdXQgdGhlIGxpbWl0cyBvZiBmb3JjZS4gVG8gcHJlc3MgcmVwb3J0cywgdGhlIGF0dGFja3Mgd2VyZSBjYXJyaWVkIG91dCBieSB0d28geW91bmcgd29tZW4gd2hvIGFyZSBwYXJ0IG9mIGFudGkgUnVzc2lhbiBtb3ZlbWVudHMgaW4gdGhlIENhdWNhc3VzLiAKVGhleSBhcmUgbW9zdCBjZXJ0YWlubHkgbm90LiAKWW91IGtub3csIHNvbWV0aGluZyBhbGwgc3VwcG9zZWQgam91cm5hbGlzdHMgYXJlIHN1cHBvc2VkIHRvIGRvIGJ1dCB0aGlzIGhpZ2ggc2Nob29sIGRyb3BvdXQgc2VlbXMgdG8gYmUgdGhlIHNvbGUgZXhwZXJ0IGluIG5vd2FkYXlzLi4gCk1vcmVvdmVyLCB3aGVuIE1pY3Jvc29mdCBzdGFydGVkIHdyYXBwaW5nIHVwIEZsYXNoIGFzIGFuIGluaXRpYWxseSBtb3VudGVkIG1vZHVsZSBvZiBJRSwgdGhlIGludGVybmV0IHN0YXJ0ZWQgYnVkZ2luZyB1cCBmcm9tIGRhdGEgb3IgaW5mb3JtYXRpb24gZ2FtdXQgdG8gcHJvdmlkZSBhIGRlbWFuZGVkIGFtdXNlbWVudC4gCkluIG1ha2luZyBtb2Rlcm4gY2hpcHMsIGEgbGFyZ2UgZG9wZWQgY3J5c3RhbCBvZiBzaWxpY29uIGFib3V0IDQgZmVldCBsb25nIGFuZCBhIGZvb3QgaW4gZGlhbWV0ZXIgaXMgZ3Jvd24sIHRoZW4gc2xpY2VkIHdpdGggZGlhbW9uZCBzYXdzIGludG8gMSBmb290IGRpYW1ldGVyIDAuNSBtbSB0aGljayB3YWZlcnMuIApBcyBsb25nIGFzIHRoZSBwYXRpZW50cyB0YWtlIHRoZSBtZWRpY2luYWxseSBhY3RpdmUgYW1vdW50IGZhciBiZWxvdyB0aHJlYXNob2xkIENOUyBlZmZlY3RzLCB0aGVyZSBub3RoaW5nICJwc3ljaGVkZWxpYyIgYWJvdXQgaXQgdW5sZXNzIHlvdSAiT0QiIGluIHdoaWNoIGNhc2UgeW91IGhhdmUgYW4gdW5jb21mb3J0YWJsZSB0cmlwLi4gCldoZW4gZW1wbG95ZWVzIGFyZSBhdCB3b3JrLCB0aGUgYWdlbmN5IHRha2VzIGVkdWNhdGlvbiBzZXJpb3VzbHksIGhvbGRpbmcgd2Vla2x5IHRyYWluaW5nIHNlc3Npb25zIGFuZCBtb250aGx5IGRlZXAgZGl2ZXMgd2l0aCBpbiBob3VzZSBhbmQgdGhpcmQgcGFydHkgZXhwZXJ0cy4gCkkga25vdyBpdCdzIGxpdGVyYWxseSB0aGUgd29yc3QgcGxhY2UgdG8gZ2V0IGEgZG9nIGZyb20gYnV0IEkgY291bGRuJ3QgbGVhdmUgaGVyIHRoZXJlIGFuZCBteSBodXNiYW5kIGFuZCBJIHdlcmUgZ29pbmcgdG8gZ28gdG8gc2hlbHRlcnMgbmV4dCB3ZWVrIGFueXdheXMgdG8gbG9vayBmb3IgYSBzZWNvbmQgZG9nLiBXZSBhcmUgZmFpcmx5IGNlcnRhaW4gdGhhdCBzaGUgd2FzIGFidXNlZCBpbiBzb21lIHdheSBhbmQgZGVmaW5pdGVseSB3YXMgbGVmdCBvdXRzaWRlIGFuZCBuZWdsZWN0ZWQuIApJIGhhdmUgYmVlbiBhIHN0eWxpc3QgZm9yIDI5IGluY3JlZGlibGUgeWVhcnMgYW5kIEkgbG92ZSBldmVyeSBtaW51dGUgb2YgaXQhIEJlaW5nIGEgaGFpciBzdHlsaXN0IGhhcyB0byBiZSBvbmUgb2YgdGhlIG1vc3QgcmV3YXJkaW5nIGNhcmVlcnMuIE15IHBhc3Npb24gaXMgY29sb3IgYW5kIGN1dHRpbmcuIApJdCBraW5kIG9mIG5pY2UgdG8gaGF2ZSB0aGlzICJwcm9ibGVtIiB0aG91Z2ggYmVjYXVzZSB5b3UgZG8gbGVhcm4gZnJvbSB0aGluZ3MgbGlrZSB5b3Ugc2FpZC4gSWYgYSBmZXcgZGlzdHJpYnV0aW9ucyBnb3QgYXMgdXNlciBmcmllbmRseSBhcyB3aW5kb3dzIHRoZW4gdGhhdCB3b3VsZCBiZSBnb29kIHRvIGludml0ZSBvdGhlcnMgaW50byBMaW51eCwgYnV0IEkgd2FudCBkaXN0cm9zIGxpa2UgYXJjaCBhbmQgR2VudG9vIGFyb3VuZCB0byBoYXZlIGZ1biBhdCBpdC4uIApUaGVyZSBpcyBubyBsZXZlbCBvZiBub24gbW9uZXRhcnkgc3VwcG9ydCB0aGF0IGlzIG5vdCBoZWxwZnVsIGZvciBhIHNpbmdsZSBwYXJlbnQuIApUaGVyZSBpcyBhbiBhZHVsdCBzaWRlIGFuZCBhIGZhbWlseSBzaWRlLiBUaGVyZSBpcyBhIGJhci9yZXN0YXVyYW50LCBzbm9ya2VsaW5nIGVxdWlwbWVudCwgYW5kIGZsYW1pbmdvcyA6KSAuIApUaGUgQnVzaCBEb2N0cmluZQpGb3VyIG9wcG9ydHVuaXRpZXMgdG8gY2VsZWJyYXRlIEludGVybmF0aW9uYWwgV29tZW4KSW4gTm92ZW1iZXIgMjAxNyxMaW5kc2F5IFNoZXBoZXJkLCBhdGVhY2hpbmcgYXNzaXN0YW50YXRXaWxmcmlkIExhdXJpZXIgVW5pdmVyc2l0eXdobyBzaG93ZWQgYSB2aWRlbyBvZiBQZXRlcnNvbiBjcml0aXF1ZSBvZiBCaWxsIEMgMTYgaW4gaGVyICJDYW5hZGlhbiBDb21tdW5pY2F0aW9uIGluIENvbnRleHQiIGNsYXNzLCB3YXMgcmVwcmltYW5kZWQgYnkgZmFjdWx0eSBtZW1iZXJzLCB3aG8gc2FpZCB0aGF0IHNoZSBtYXkgaGF2ZSB2aW9sYXRlZCBCaWxsIEMgMTYgYnkgc2hvd2luZyB0aGUgdmlkZW8gYW5kIGhvbGRpbmcgYSBkZWJhdGUuIENvbW1lbnRpbmcgb24gdGhlIGluY2lkZW50LCBVbml2ZXJzaXR5IG9mIFRvcm9udG8gbGF3IHByb2Zlc3NvckJyZW5kYSBDb3NzbWFubm90ZWQgdGhhdCB0aGVDYW5hZGlhbiBIdW1hbiBSaWdodHMgQWN0KHdoaWNoIEMgMTYgYW1lbmRlZCkgZG9lcyBub3QgYXBwbHkgdG8gdW5pdmVyc2l0aWVzLCBhbmQgdGhhdCBpdCB3b3VsZCBiZSB1bmxpa2VseSBmb3IgYSBjb3VydCB0byBmaW5kIHRoYXQgdGhlIHRlYWNoaW5nIGFzc2lzdGFudCBhY3Rpb25zIHdlcmUgZGlzY3JpbWluYXRvcnkgdW5kZXIgdGhlIGNvbXBhcmFibGUgcG9ydGlvbnMgb2YgdGhlT250YXJpbyBIdW1hbiBSaWdodHMgQ29kZS4uIApHb2luZyBmb3J3YXJkIG1heWJlIGl0J3MgYSBnb29kIGlkZWEgdG8gZ2V0IGluIHRoZSBzYW1lIHBhZ2UgYXMgREggaW4gcmVnYXJkcyB0byBoZXIga25vd2luZyBhYm91dCB5b3VyIGZpbmFuY2VzLiBUaGVyZSdzIG5vIHJlYXNvbiBzaGUgbmVlZHMgdG8ga25vdyBob3cgbXVjaCBlaXRoZXIgb2YgeW91IG1ha2UuIApOb3csIG9uZSBpbXBvcnRhbnQgZmFjdCB0byByZW1lbWJlciB3aGVuIGZvcm1pbmcgdGhpcyBoYW5kIGlzIHRoYXQgdGhlIEFjZSBjYW4gYmUgdXNlZCBhcyBhIGhpZ2ggb3IgbG93IGNhcmQuIFNvIGl0IGNhbiBnbyBiZXNpZGUgYSBLaW5nIG9yIGEgdHdvIGFuZCBjb21wbGV0ZSBhIHNldC4uIApHdWlsdHMgZWFjaCBhZHVsdCBjaGlsZCBpbnRvIGEgb25lIG9uIG9uZSBtb20gdmlzaXQgd2hlcmUgc2hlIHRyaWVzIHRvIGlzb2xhdGUgeW91IGVudGlyZWx5IHN1Y2ggYXMgdGFrZSB5b3UgdG8gaGVyIGJlZHJvb20gd2l0aCBhIGN1cCBvZiB0ZWEgYW5kIHRoZW4gc3BlbmRzIHRoZSBlbnRpcmUgdGltZSB0cnlpbmcgdG8gZ2V0IHlvdSB0byB0cmlhbmd1bGF0ZSBvciB0byByZWFjdCB0byBoZXIgY29uZGVzY2VuZGluZyBjb21tZW50cyBhYm91dCB5b3VyIGxpZmUgb3IgdG8gbGVjdHVyZSB5b3UgYWJvdXQgc29tZXRoaW5nIHlvdSdyZSB0aGUgZXhwZXJ0IG9uLiBTaGUgd2lsbCBvZmZlciB5b3UgbW9uZXksIGdpZnRzLCBhbmQgImhlbHAiIGluIHlvdXIgbGlmZSB0byBiYWl0IHlvdSBiYWNrIGludG8gZGVwZW5kZW5jZSBhbmQgaW5kZWJ0ZWRuZXNzIHRvIGhlci4uIApBbmQgZm9yIHRoZSByZWNvcmQsIHB1dHRpbmcgb25lIHdvcmQgZXZlcnkgbGluZSBsaWtlIHlvdSBkaWQgYXQgdGhlIHN0YXJ0IG9mIHlvdXIgY29tbWVudCBkb2VzbiBtYWtlIHlvdSByaWdodCwgaXQganVzdCBtYWtlcyB5b3UgbG9vayBsaWtlIGEgdG9vbC4KVGhlIFRyaWFsIHBlcmlvZCBsYXN0cyBmb3IgMiB3ZWVrcyBhbmQgaXMgYWJzb2x1dGVseSBmcmVlLi4gClRoZXJlIGFscmVhZHkgYXJlIHBsYWNlcyB0byBob2xkIHNvY2lhbCBldmVudHMsIGFuZCBzb21lIGFyZSBieSB0aGUgcml2ZXIuIFdlIGFscmVhZHkgaGF2ZSBsb29rb3V0cyBhbG9uZyB0aGUgcml2ZXIuClRoZSBwYWRkaW5nIGF0IHRoZSBiYWNrIG9mIHRoZSBzaG9lIHdhcyBzdGFydGluZyB0byB0ZWFyIGFuZCBkZWZvcm0gICBoZSBleHBsYWluZWQgdGhpcyBjb3VsZCBoYXZlIGJlZW4gdGhlIHN0YXJ0IG9mIGl0LCBpbmNyZWFzZWQgZnJpY3Rpb24uIApBIGdyYWR1YXRlIG9mIE1pY2hpZ2FuIFN0YXRlIFVuaXZlcnNpdHksIEhlYXJzaGVuLCAzNCwgcmVjZWl2ZWQgaGlzIG1hc3RlcidzIGluIHJhYmJpbmljIHN0dWRpZXMgaW4gMjAwNywgYmVnYW4gaGlzIGNhcmVlciBhcyBhbiBhc3Npc3RhbnQgcmFiYmkgaW4gV2FzaGluZ3RvbiBzdGF0ZSBhbmQgbGF0ZXIgc2VydmVkIGluIE5ldyBZb3JrLiBJbiBKdWx5LCBoZSBhY2NlcHRlZCBoaXMgZmlyc3QgcG9zaXRpb24gYXMgYSBzZW5pb3IgcmFiYmkgYXQgQ29uZ3JlZ2F0aW9uIFJvZGVwaCBTaG9sb20gaW4gVGFtcGEuCk9yIGhvdyBjaWdhcmV0dGVzIHdlcmUgdG9sZCB0byBiZSBzYWZlLiBvciBjYW5uZWQgZm9vZCBpbiBpdCBlYXJseSBzdGFnZXMgY2F1c2VkIGRlYXRocyAuIG9yIHRob3VzYW5kcyBvZiB0aG91c2FuZHMgb2YgZXhhbXBsZXMgaW4gYmV0d2Vlbi4gYW5kIHRoZSBzaGVlcCBvZiBwZW9wbGUganVzdCB1c2VkIHdoYXQgdGhleSB3ZXJlIGdpdmVuIC4KSXQgd2FzIGJhc2ljYWxseSBhIGNvbGxlY3Rpb24vZGlyZWN0aW9uIGRldmljZSBhZ2FpbnN0IHdoaWNoIG1pbGl0YXJ5IGNvbW11bmljYXRpb25zL3dlYXBvbnMvZXRjIGNvbXBvbmVudHMgd2VyZSB0ZXN0ZWQgZm9yIHRoZSBlZmZlY3RzIG9mIHJhZGlhdGlvbiBnZW5lcmF0ZWQgYnkgdGhlIHdlYXBvbiBleHBsb2RlZCBpbiBSb29tIFplcm8gKHdoaWNoIHdhcyBhbHNvIHJlZmVycmVkIHRvIGFzIHRoZSAicG9pbnQgcm9vbSIsIHBpbnBvaW50ZWQgYXQgMzcuMTIwMjk5IDExNi4xMjI1ODMpLi4gCkFnYWluLCB0aGFuayB5b3UgZm9yIGNvbnZpbmNpbmcgbWUgdG8gdGFrZSB0aGlzIHN0ZXAhaSB0cmFpbmVkIGluIGJyZWFzdCBtYXNzYWdlLCBhbmQgeWVzIGkgQ0FOIHVuZHJhcGUgdGhlIG5pcHBsZSwgYnV0IHdlIG5ldmVyIGV2ZXIgdG91Y2ggaXQgZXZlci4gVGhlcmVzIGFsc28gYSBzZWNvbmQgY29uc2VudCBmb3JtIGFib3V0IGJyZWFzdCBtYXNzYWdlIHRoYXQgSSBtYWtlIHBlb3BsZSBzaWduIGlmIHRoZXkgbmVlZCBicmVhc3QgbWFzc2FnZS4gCldoYXQgd2UgY2FtZSB1cCB3aXRoIGlzIHRoaXMgb25saW5lIHBva2VyIHJldmlldyBvbiBob3cgdG8gbWFrZSBtb3JlIGNhc2ggYXQgTm8gTGltaXQgVGV4YXMgSG9sZGVtLiBIZXJlIGFyZSBhIGZldyB0aXBzIHdlIHRoaW5rIGFyZSByZWFsbHkgaW1wb3J0YW50IHRvIGxlYXJuLi4gCjE0IHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ290aGVyZSBzbyBtdWNoIGNvbnRyYWRpY3Rpb24uIFRoZXJlIHRoZSB3aG9sZSBkZWxpYmVyYXRlIHRoaW5nIGFzIHdlbGwsIGFuZCBjbGF0dGVuYnVybmcgaGVyZSBjb250cmFkaWN0cyBoaW1zZWxmIGluIHNheWluZyB0aGUgcmVmIGFwcGxpZWQgdGhlIGxhd3MgKHRoYXQgYmVpbmcgdGhlIGxhd3MgdGhhdCBVRUZBIGhhdmUgaW50cm9kdWNlZCB3aXRoIG1ha2luZyB5b3Vyc2VsZiBiaWdnZXIpLCBidXQgdGhpcyBnb2VzIGFnYWluc3QgdGhlIGxhd3Mgb2YgYSBoYW5kYmFsbCBoYXZpbmcgdG8gYmUgaW50ZW50aW9uYWwuS2ltcGVtYmUgbWFrZXMgaGltc2VsZiBiaWdnZXIgc3VyZSwgYnV0IGhpcyBhcm1zIGFyZSBpbiBhIG5hdHVyYWwgcG9zaXRpb24gYW5kIG9idmlvdXNseSBpdCB1bmludGVudGlvbmFsLiBBcyBzb21lb25lIGVsc2Ugc2FpZCwganVtcGluZyB3aXRoIGFybXMgYnkgeW91ciBzaWRlIGlzIHVubmF0dXJhbCAxIHBvaW50ICBzdWJtaXR0ZWQgMiBkYXlzIGFnb0tpbXBlbWJlIG1ha2VzIGhpbXNlbGYgYmlnZ2VyIHN1cmUsIGJ1dCBoaXMgYXJtcyBhcmUgaW4gYSBuYXR1cmFsIHBvc2l0aW9uIGFuZCBvYnZpb3VzbHkgaXQgdW5pbnRlbnRpb25hbC4gClJlbWFpbmluZyBwbGF5ZXJzIGZvbGQuIApDYXJvbHluIENyYW5rc2hhdywgbW90aGVyIG9mIERhcnJpb24gTW9mZmF0LCBhbiAxOCB5ZWFyIG9sZCBzaG90IHRvIGRlYXRoIGluIFNlcHRlbWJlciwgaXMgcGljdHVyZWQgRnJpZGF5LCBOb3ZlbWJlciA5LCAyMDE4LgpIb3Jtb2Fucywgc3RyZXNzIGZyb20gYWxsIHNpZGVzLCBzbGVlcCBkZXByaXZhdGlvbiwgcGVvcGxlIHdobyBzYXkgaGF2aW5nIGtpZHMgd2lsbCBtYWtlIHlvdSBoYXBweSBhcmUgYXBhcnQgb2YgdGhlIHByb2JsZW0uIApXaGVuIHRoZSBmZXR1cyBoYWQgYSBoZWFydCBhcnJoeXRobWlhIHR1cm4gdXAgYXQgMzQgd2Vla3MsIHRob3VnaCwgdGhlIHF1ZXN0aW9uIHdoaWxlIHdlIHdhaXRlZCBmb3IgdGhlIHNwZWNpYWxpc3Qgd2FzIHZlcnkgZGlmZmVyZW50Li4gClRoZSBidXkgaW4gZm9yIHRoaXMgZXZlbnQgaXMgUnMuIDM1LDAwMCBhbmQgcGxheWVycyBjYW4gZXhwZWN0IHRvIHdpbiBmcm9tIGEgYmVlZnkgUnMuIApEYXZpZXMgc2FpZCB0aGUgRXJpdHJlYW4gZmFtaWx5IGxhbmRlZCBpbiBUb3JvbnRvIG9uIFRodXJzZGF5LCBicmluZ2luZyBhbiBlbmQgdG8gYSBsZW5ndGh5IHNhZ2EuCkNvbnNpZGVyIHRoYXQgdGhlcmUgYXJlIDE0ayBDb2xvcmFkby9DYW55b25zIHNvbGQgZWFjaCBtb250aCwgYW5kIHlldCB0aGlzIHN1YiBkb2VzbiBldmVuIGhhdmUgMTgwMCBzdWJzY3JpYmVycy4gVGhhdCBub3QgYSBiaWcgZm9sbG93aW5nLiBKZWVwIGhhcyA3Mmsgc3Vic2NyaWJlcnMuIFRoZXkgaGF2ZSBhIGxhcmdlciBhbmQgbW9yZSB2b2NhbCBwcmVzZW5jZSwgYW5kIHRoZSBmYWN0b3J5IGxpc3RlbnMgdG8gdGhlbS4gSSBjYW4gZ3VhcmFudGVlIHlvdSwgc29tZSBndXkgaW4gdGhlaXIgbWFya2V0aW5nIGRlcGFydG1lbnQgc2F5cyBldmVyeSB5ZWFyLCAiQSBKZWVwIHdpdGhvdXQgYSBNVCBvZmZlcmluZyBpc24gYSBKZWVwLiBJdCBhIENoZXZ5LiBBIGd1eSBvbiBhIGZvcnVtIHNhaWQgc28uIgpUaGUgdHdvIG1lbiBoYWQgYWdyZWVkIHRvIHJ1biBhIGNoYXJpdGFibGUgY2FzaW5vIGV2ZW50IGluIEphbnVhcnkgMTk5OSBmb3IgYSBub25wcm9maXQgY2FsbGVkIENvbW1pdHRlZSB0byBTdG9wIFZpb2xlbmNlIGluIExvcmFpbi4gQWZ0ZXIgdGhlIHRocmVlIGRheSBldmVudCB3YXMgb3ZlciwgdGhlIFN1c3RhcnMgdG9sZCB0aGUgY2hhciBpdHkgb3BlcmF0b3JzIHRoYXQgdGhleSBtYWRlIG1vbmV5IG9uIHRoZSBjaGFyaXRhYmxlIGV2ZW50LiBUaGUgZXZlbnQgdm9sdW50ZWVycywgd2hvIGFjdHVhbGx5IHdlcmUgTG9yYWluIHBvbGljZSBvZmZpY2VycywgdGhlbiBhcnJlc3RlZCB0aGUgYnJvdGhlcnMsIGZvciB0aGUgVmVnYXMgbmlnaHQgd2FzIGEgc3Rpbmcgc2V0IHVwIGJ5IExvcmFpbiBQb2xpY2UgYW5kIHRoZSBPaGlvIEF0dG9ybmV5IEdlbmVyYWwgb2ZmaWNlLgpJIG1heSBiZSBhIGRpY2sgb24gaGVyZSwgb3IgaW4gZ2VuZXJhbCBmb3IgdGhhdCBtYXR0ZXIsIGJ1dCBJIGtub3cgd2hlbiB0byBrZWVwIG15IGhlYWQgZG93biBhbmQgbW91dGggc2h1dCwgYW5kIEkga25vdyB3aGljaCBoaWxscyBhcmUgd29ydGggZHlpbmcgb24sIGFuZCBhcyBhIHJlc3VsdCBJIGdvdCBhbGwgdGhlIHZhY2F0aW9uIGRheXMgSSByZXF1ZXN0ZWQgYW5kIGFuIGV4Y2VsbGVudCBsZXR0ZXIgb2YgcmVjb21tZW5kYXRpb24gd2hpY2ggbGVkIHRvIGEgbmV3IGNvbnRyYWN0IGZvciBteSBlZmZvcnRzLgpDb21wYXJpc29uIHNob3AgeW91IGRvbiBuZWVkIHRvIGJ1eSBldmVyeXRoaW5nIGFsbCBhdCBvbmNlLCBhdCB0aGUgc2FtZSBzdG9yZSwgb3IgZXZlbiBvbiB0aGUgc2FtZSBkYXkuIFdhdGNoIGZvciBzYWxlcywgY2hlY2sgdGhlIGZseWVycyBhbmQga2VlcCBhbiBleWUgb3V0IGZvciBvbmxpbmUgc2FsZXMgYXMgd2VsbC4gRW5saXN0IHRoZSBoZWxwIG9mIG9sZGVyIGtpZHMgdG8gZG8gdGhpcy4KTmV2ZXIgYmV0cmF5ZWQgYW55IG9mIHRoZW0sIEhhcmR5IHNhaWQgb2YgdGhlIHByaW1lIG1pbmlzdGVycyBPc2JhbGRlc3RvbiBzZXJ2ZWQuCk15dGggTm8uIDQ6IEhhY2tpbmcgbWFrZXMgb25lcyBjYXJkcyB2aXNpYmxlIHRvIHRoZSBvdGhlci4KVGhlIEFsaXNhbCBHdWVzdCBSYW5jaCBSZXNvcnQgaXMgbG9jYXRlZCBpbiB0aGUgYmVhdXRpZnVsIFNhbnRhIFluZXogVmFsbGV5IGFuZCByZW5vd25lZCBTYW50YSBCYXJiYXJhIENvdW50eSB3aW5lIGNvdW50cnkuIFByaXZhdGVseSBvd25lZCBhbmQgb3BlcmF0ZWQgc2luY2UgMTk0NiwgdGhlIEFsaXNhbCBpcyBhIHdvcmtpbmcgY2F0dGxlIHJhbmNoIGFuZCBmdWxsIHNlcnZpY2UgcmVzb3J0LiAKSSB3b3JrZWQgYXQgc3Vid2F5IGZvciA4IHdlZWtzIGJlZm9yZSBnb2luZyBpbnRvIGxhYm9yIGFzIHNvb24gYXMgaSBnb3QgaG9tZSBvbiBteSBsYXN0IGRheS4gCkhhZCBhIHN0cm9uZyBzdGFydCB0byB0aGUgeWVhciwgd2l0aCBjb250aW51ZWQgcmV2ZW51ZSBncm93dGggYW5kIHNvbGlkIGVhcm5pbmdzLCBzYWlkIFREIHByZXNpZGVudCBhbmQgQ0VPIEJoYXJhdCBNYXNyYW5pIGluIGEgcmVsZWFzZS4gTWFya2V0IHZvbGF0aWxpdHkgYW5kIGxvd2VyIGNsaWVudCBhY3Rpdml0eSBpbXBhY3RlZCBvdXIgd2hvbGVzYWxlIHNlZ21lbnQgaW4gdGhlIHF1YXJ0ZXIuIApUaGV5IHdlcmUgdGhlbiB0b3NzZWQgd2l0aCBzb3kgc2F1Y2UsIHJpY2UgdmluZWdhciwgc2VzYW1lIG9pbCAoYSB2ZXJ5IHNtYWxsIGFtb3VudCwgc3Ryb25nIHN0dWZmKSwgaG9tZW1hZGUgY2hpbGkgZ2FybGljIHBhc3RlICh0aGUgc3RvcmVib3VnaHQgaXMgZmluZSB0b28sIGZpbmQgaXQgaW4gdGhlIGFzaWFuIHNlY3Rpb24gd2l0aCB0aGUgc2FtZSBsb2dvIGFzIFNpcmFjaGEpLCB0aGVuIG1vcnRhciBhbmQgcGVzdGxlIGdyb3VuZCBnYXJsaWMsIGdpbmdlciBhbmQgcGVwcGVyLiBTZXQgYXNpZGUgZm9yIDE1IDMwIG1pbnV0ZXMuIEFsbCBvZiB0aGlzIGlzIHRvIHRhc3RlLCBidXQgeW91IGFyZSBsaW1pdGVkIGF0IHRoaXMgc3RlcCBieSB0aGUgYW1vdW50IG9mIGxpcXVpZCB0aGF0IGNhbiBjbGluZyB0byB0aGUgY2hpY2tlbi4gCkkga25vdyB0aGlzIGFzIEkgaGF2ZSBhIGZyaWVuZCB3aG8gdG9vayB0aGUgcHJpdmF0ZSByb3V0ZSBhbmQgaXMgbm93IHVuZGVyIHRoZSBncC4gSG9uZXN0bHkgdGhvIHRoYXQgc3Vja3MgYW5kIEkgc29ycnkgaXQgaGFwcGVuZWQgdG8geW91IEkgZ29ubmEgbWFrZSBpdCBhIHBvaW50IG5ldmVyIHRvIGNoYW5nZSBkb2N0b3JzIGluIGNhc2Ugb2YgdGhpcyBub3cuIApUaGVyZSB3YXMgc29tZSBzaGFkeSBzaGl0IHdpdGggaGVyIGdldHRpbmcgR3JhbmQgTWFzdGVycyBhbmQgc2hlIHdhcyBvbiBhIHN0cmVhbSBkZW55IHNvbWV0aGluZyBhbmQgbGF0ZXIgcmV0cmFjdGluZyBpdC4gClZQIHZhY2NpbmUgbWFudWZhY3R1cmluZyBvcGVyYXRpb25zIG9mIENvbm5hdWdodCBMYWJvcmF0b3JpZXMgaW4gQ2FuYWRhLCBzdXBwbHlpbmcgbW9zdCBvZiB0aGUgQ2FuYWRpYW4gdmFjY2luZSByZXF1aXJlbWVudCBhbmQgYSBzaWduaWZpY2FudCBmcmFjdGlvbiBvZiBVTklDRUYncyB2YWNjaW5lIHJlcXVpcmVtZW50cwpUaGUgNC8yIHJ1bGUgb25seSBjb21lcyBpbnRvIGVmZmVjdCBhZnRlciB0aGUgZmxvcC4gClNoZSBhbmQgSSBzdGFydGVkIG91dCBhcyBmcmllbmRzICh0aG91Z2ggdGVudGF0aXZlbHkgYmVjYXVzZSBoZXIgYWdncmVzc2l2ZSBwZXJzb25hbGl0eSB3YXMgb2ZmcHV0dGluZyBmcm9tIHRoZSBiZWdpbm5pbmcpLCBidXQgaGVyIGluY3JlZGlibGUgb3V0YnVyc3RzIG9mIHJhZ2Ugd291bGQgZXZlbnR1YWxseSBjcmVhdGUgYW4gdW5kZXJjdXJyZW50IG9mIGNvbnN0YW50IHRlbnNpb24gYW5kIGFwcHJlaGVuc2lvbiBiZXR3ZWVuIHVzLiBBdCBmaXJzdCBpdCB3YXNuJ3QgZGlyZWN0ZWQgYXQgbWUsIGJ1dCB3aGVuIGl0IHdhcyBpdCB3YXMgYXdmdWwuIApNb3JlIEFydGljbGVzIENhc2lubyBNb3JvbmdvIEluZm9ybWF0aW9uIExvZGdpbmcgaW4gQmVsdGVycmEsIEluZGlhbmEgQm9zc2llciBDaXR5IEhvdGVscyBDYXNpbm9zIFRoZSBDbG9zZXN0IEhvdGVscyB0byB0aGUgUGFyYWdvbiBDYXNpbm8gaW4gTG91aXNpYW5hIEJpbG94aSwgTWlzc2lzc2lwcGkgSG90ZWxzIFJlc29ydHMgTW90ZWxzIE5lYXIgR29sZGZpZWxkLCBOZXZhZGEKQSBjcmVzY2VudCBzaGFwZWQgc2N1bHB0dXJlLCBzeW1ib2xpYyB0byBCcnVuZWkgYW5kIE1hbGF5c2lhLCBpcyB0aGUgY2VudGVyIHBpZWNlIG9mIHRoZSBncm91bmQgZmxvb3IgbG9iYnksIHNpdHRpbmcgcGVyZmVjdGx5IGluIHRoZSBjYWxtIHBvbmQgYnkgdGhlIGdyYW5kIHN0YWlyY2FzZS4gClRoZSBCYXNpY3NVbmxpa2UgZ29vZCBwb2V0cnksIHRoZSB0cnVseSBhd2Z1bCBzdHVmZiBjYW4gYmUgd3JpdHRlbiBhdCBsaWdodG5pbmcgc3BlZWQsIGFuZCB3aXRoIHZlcnkgbGl0dGxlIHRob3VnaHQuIApLYXJtYT8gRnVjayBpZiBJIGtub3cuIEkgNyB5ZWFycyBpbiBhbmQgdXAgdW50aWwgeWVzdGVyZGF5IEkgdGhvdWdodCB1cHZvdGVzID0gcG9pbnRzID0ga2FybWEuIEFwcGFyZW50bHkgbm90LiBQb3N0ZWQgbXkgYmVzdCBwb3N0IG9mIGFsbCB0aW1lLiA0NWsrIHVwdm90ZXMuIEdhdmUgbWUgbGVzcyB0aGFuIDEwayBrYXJtYS4gTm8gY2x1ZSBob3cgdGhhdCB3b3Jrcy4KVGhlIHJvYmJlcnkgYW5kIGNvbnNwaXJhY3kgY2hhcmdlcyBjYXJyeSBtYXhpbXVtIHBlbmFsdGllcyBvZiBsaWZlIGluIHByaXNvbiB3aXRoIHRoZSBwb3NzaWJpbGl0eSBvZiBwYXJvbGUsIHdoaWxlIHRoZSBmZWxvbnkgZmlyZWFybSBjaGFyZ2UgY2FycmllcyBhIG1hbmRhdG9yeSwgY29uc2VjdXRpdmUgdHdvIHllYXIgc2VudGVuY2UuLiAKSSBjb25maWRlbnQgd2Ugd29uIHNlZSBhbnkgQ09BIGRlY2lzaW9uIGFueXRpbWUgaW4gdGhlIG5leHQgeWVhciwgbm8gbWF0dGVyIGhvdyBxdWlja2x5IHRoZSBwcm9jZWVkaW5ncyBpbiB0aGUgY3VycmVudCByZW1hbmQgZ28uIEFuZCBtb3N0IGxpa2VseSBub3QgZm9yIGEgbG9uZyB0aW1lIGJleW9uZCBhIHllYXIuIEN1cnJlbnQgcHJvY2VlZGluZ3MgaW4gdGhlIHRyaWFsIGNvdXJ0IHdpbGwgdGFrZSBtb250aHMuIApJIGZlZWwgYSBiaXQgb2RkIHdyaXRpbmcgaGVyZS4gSSBvbmx5IGp1c3QgZm91bmQgb3V0IGFib3V0IHRoaXMgc2l0ZSB3aGljaCBhbm5veXMgbWUgZ3JlYXRseSBiZWNhdXNlIEkgd291bGQgbGlrZSB0byBoYXZlIHZpc2l0ZWQgd2hlbiBteSBvd24gcGVyc29uYWwgZ3VydSAoRE5BKSB3YXMgc3RpbGwgdHlwaW5nLiBIZSBpbmZsdWVuY2VkIG1lIGFuZCBteSB3cml0aW5nIG1vcmUgdGhhbiBhbnlvbmUgb3RoZXIgdGhhbiBKb2huIENsZWVzZSB3aG8gSSBhbHNvIGFkb3JlLkkgYW0gYSBmZW1hbGUsIDM1LCBzaW5nbGUgKG5vdCBieSBteSBjaG9pY2UsIGp1c3QgY2lyY3Vtc3RhbmNlKS4gSSBkbyBub3QgYmVsaWV2ZSBpbiBuZXQgYWZmYWlycyBzbyBpZiB5b3UgYXJlICJzZXJpb3VzbHkgb3IgZGFuZ2Vyb3VzbHkiIHdpZXJkIGFuZCBjcmVlcHksIHN0b3AgcmVhZGluZy5JIGFtIHZlcnkgZmVkIHVwIHdpdGggbXkgbG90LCBob3dldmVyLiBJIGhhdmUgdmVyeSBmZXcgcGVvcGxlIHdobyB1bmRlcnN0YW5kIHdoYXQgSSBtZWFuIGJ5IHRoZSBuZWVkIGZvciBUT1RBTCBOT04gRVhJU1RBTkNFIGFmdGVyIHRoaXMgbGlmZSB3aGljaCBtYWtlcyByZWFsbHkgZGVlcCBjb252ZXJzdGFpb25zIGRpZmZpY3VsdC4gKE5vIEkgZG8gbm90IHdhbnQgdG8gc2VlIHRoZSBsaWdodCBvZiBHT0QgdG8gYmUgc2hvd24gdGhlIHdheSkuSSBoYXZlIGEgdmVyeSBnb29kIGxpZmUsIGV4Y2VwdCB0aGUgd29yayBiaXRzIHdoaWNoIGJvcmUgbWUgc3R1cGlkLiBJZiBJIGhhZCBoYXZlIGJlZW4gdG9sZCB0ZWFjaGluZyB3YXMgZ2xvcmlmaWVkIGZhY3Rvcnkgd29yayBJIHdvdWxkIGhhdmUgY2hvc2VuIHVuZW1wbG95bWVudCBhbmQgYmVlbiBtb3JlIHByb2R1Y3RpdmUuIChTdGF0aW5nIHRoYXQgSSBhbSBhIHZlcnkgZ29vZCB0ZWFjaGVyIGFuZCB0aGUga2lkcyBhZG9yZSBtZSBhbmQgd2lsbCBldmVuIGFkbWl0IHRoYXQgdG8geW91IGlmIHlvdSBhc2sgdGhlbSlFbm91Z2ggcmFudGluZy4gSSB3YW50IHRvIGV4cGxvcmUuIFBsZWFzZSBmZWVsIGZyZWUgdG8gY2hhdCB3aXRoIG1lLCBidXQgaWYgeW91IGUgbWFpbCBtZSBzYXkgeW91IGNvbWUgZnJvbSB0aGlzIHNpdGUgb3IgSSB3aWxsIGp1c3QgZGVsZXRlIHlvdS4gSSBoYXRlIGp1bmsgbWFpbCBldmVuIHdoZW4gbm8gdHJlZXMgaGF2ZSBkaWVkIGluIHRoZSBtYWtpbmcuCkFueXdheSwgSSBub3QgYW4gZXhwZXJ0LiBUaGlzIGlzIG1vc3RseSBqdXN0IHBlcnNvbmFsIG9ic2VydmF0aW9uLCBidXQgSSBkaWQgdXNlZCB0byB3b3JrIGluIGEgbm9uIHByb2ZpdCB3aXRoIGxvdyBpbmNvbWUgZm9sa3MuIAoiQ2hhcmxpZSB3YXMgdGhlIGdvIHRvIG1hbiBhbmQgaWYgc29tZW9uZSB3YXMgaW4gdHJvdWJsZSBoZSdkIGJlIHRoZXJlIHRvIGhlbHAgdGhlbS4gCkkgZ3Vlc3MgaXQgY29tZXMgZG93biB0byB0aGUgbGFyZ2VyIGlzc3VlIG9mIGlmIHlvdSBwcmVmZXIgZmxhdCBhcHRpdHVkZXMgb3Igc3Bpa2V5IG9uZXMsIGJ1dCBJIGJhc2ljYWxseSBtb3ZlIG1vc3Qgb2YgdGhlIG91dGxpZXJzIGNsb3NlciB0byAwLgpFRElUICAgVGhhbmsgeW91IGd1eXMgZm9yIHRoZSBnb2xkIGFuZCBzaWx2ZXIuIEkgaGFkIG5vIGNsdWUgdGhhdCB0aGlzIGdhbWUgd2FzIHNvIHBvcHVsYXIhIFdlIHRob3VnaHQgYWJvdXQgcGxheWluZyB3aXRoIGNvd3MgYnV0IHRoZSBudW1iZXJzIHdvdWxkIGhhdmUgYmVlbiBzbyBoaWdoIGhhaGEuIEhvcnNlcyB3ZXJlIG1vcmUgcmFyZSBhbmQgdGh1cyBldmVyeW9uZSBoYWQgdG8gYmUgb24gaGlnaCBhbGVydCB0byBzcG90IHRoZW0uIEdvb2QgdGltZXMuCllvdSB3aWxsIG5vdCBsaWNlbnNlLCBzZWxsLCBvciB0cmFuc2ZlciB5b3VyIEFjY291bnQgd2l0aG91dCBvdXIgcHJpb3Igd3JpdHRlbiBhcHByb3ZhbC4KQW5kIGV2ZW4gdGhvdWdoIEkgd2FzIHVuY29tZm9ydGFibGUgd2l0aCB0aGUgd2F5IGhlIHRhbGtlZCB0byBtZSwgSSBkaWRuJ3Qgd2FudCBvdXIgcmVsYXRpb25zaGlwIHRvIGNoYW5nZS4gSSBkaWRuJ3Qgd2FudCB0byBtYWtlIHRoaW5ncyBhd2t3YXJkLCBiZWNhdXNlIGV2ZXJ5b25lIGxpa2VkIGhpbS4uIApBbmQgd2hlbnRoZXkgYXJlLC4gSXQgc2hvd3MgYWxsIHRoZSBwbGF5ZXJzIGhhbmRzLiBUaGVuIGNsaWNrIGV4aXQgZ2FtZWFnYWluLC4gCkl0J3Mgbm90IHJpZ2h0IGZvciBzb21lIHBlb3BsZSB0byBhdm9pZCBwYXlpbmcgdGF4ZXMgd2hpbGUgdGhlIHJlc3Qgb2YgdXMgY2FycnkgdGhlIGxvYWQuIApFdmVuIGlmIGl0IGxvb2tzIGxpa2UgaXQgaXMgZGlmZmljdWx0IHRvIHdpbiBvdmVyIHRoZSBsb25nIHJ1biwgaXQgaXMgc3RpbGwgcG9zc2libGUgdG8gZG8uIApJIHdpc2ggZG9jdG9ycyB3b3VsZG4gcHJlc2NyaWJlIGFudGliaW90aWNzIGZvciBhIGNvbW1vbiBjb2xkIG9yIGZvciBicm9uY2hpdGlzL2ZsdSAod2hpY2ggaXMgYSB2aXJ1cykuIApVc2VycyB3aG8gdXNlIEZDMiBQYXkgZm9yIHVzZSBTZXJ2aWNlcyAoSGVyZWJ5IGFsc28gcmVmZXJyZWQgdG8gYXMgIlByZW1pdW0gU2VydmljZShzKSIpIGFuZC9vciBhbnkgcGF5bWVudCBpbiBPdXIgU2VydmljZXMgdGhhdCBpbmNsdWRlIEZDMiBQb2ludHMsIGFncmVlIHRvIHRoZSAiRkMyIFBvaW50IFRlcm1zIG9mIFVzZSIgKGFsc28gcmVmZXJyZWQgdG8gYXMgdGhlICJGQzIgUHJlbWl1bSBTZXJ2aWNlcyBUZXJtcyBvZiBVc2UiKS4KV2lsbGFyZDI1NjYgIDExIHBvaW50cyAgc3VibWl0dGVkIDQgZGF5cyBhZ28KUmFwcGVsIDogbGVzIGZjdWxlbnRzIG5lIGZvbnQgcGFzIGdyb3NzaXIsIHRvdXQgZXN0IHF1ZXN0aW9uIGRlIHF1YW50aXQgYWRhcHRlICBzYSBmYWltLCBldCBtYW5nZXIgZHUgcml6IG4nZW1wY2hlIHBhcyB1biBib24gdHJhbnNpdCBpbnRlc3RpbmFsLgpUaGUgc2lnbnMgaGF2ZSBhbiBhbG1vc3QgcGxlYWRpbmcgcXVhbGl0eS4gIlNQRUNUQUNVTEFSIFZJRVdTIE9GIEhVRFNPTiBSSVZFUiwgRU1QSVJFIFNUQVRFIEJVSUxESU5HIEFORCBUSU1FUyBTUVVBUkUuIiAiU1RBVEUgT0YgVEhFIEFSVCBERVNUSU5BVElPTiBESVNQQVRDSCBFTEVWQVRPUlMuIiBUaGV5IGhhbmcgZnJvbSBhIHNjYWZmb2xkIHN1cnJvdW5kaW5nIDExIFRpbWVzIFNxdWFyZSwgYSA0MCBzdG9yeSBnbGFzcyBhbmQgc3RlZWwgb2ZmaWNlIHRvd2VyIHVuZGVyIGNvbnN0cnVjdGlvbiBhdCB0aGUgY29ybmVyIG9mIDQybmQgU3RyZWV0IGFuZCA4dGggQXZlbnVlIGluIE1hbmhhdHRhbi4gCkFjY29yZGluZyB0byB0aGlzIGxpbmsgb24gVGhlIEphbmUgR29vZGFsbCBJbnN0aXR1dGUgb2YgQ2FuYWRhJ3Mgc2l0ZSwgaWYgd2UgY29tYmluZSBwZXJjZW50YWdlIG9mIGluc2VjdHMgYW5kIG1lYXQvZWdncywgdGhlIHBlcmNlbnRhZ2UgZm9yIGNoaW1wcyBlYXRpbmcgYW5pbWFsIGZvb2RzIGluIHRoZSB3aWxkIHdvdWxkIGJlIHNvbWV0aGluZyBsaWtlIDEyJSwgbm90IGluY2x1ZGluZyBob25leSBhbmQgd2hhdGV2ZXIgZWxzZSBpc24ndCBsaXN0ZWQuIFlvdSBjYW4gc2F5IHRoYXQgc3BlY2llcyBhcmUgZXF1YWxseSBldm9sdmVkIGFuZCB0aGVuIHRhbGsgYWJvdXQgcHJpbWF0ZXMgd2hvIGFyZSBldm9sdmVkIFRoZSBsYW5ndWFnZSB5b3UgdXNlIHRvIHRhbGsgYWJvdXQgZXZvbHV0aW9uIG1hdHRlcnMgICB0aGUgd2F5IHlvdSB0YWxraW5nIGltcGxpZXMgYW4gaW5oZXJlbnQgcmFua2luZyBvZiBhbmQgcHJpbWF0ZXMuIApUaGlzIGtpbmRhIGxlZnQgYSBmZXcgb2YgdXMgd2l0aCBhIGNoaXAgb24gb3VyIHNob3VsZGVyIGFzIHdlJ2QgZHJvdmUgdXAgb24gZGF5cyB3ZSBkaWRuJ3QgaGF2ZSB0bywgYW5kIGRpZG4ndCBldmVuIGtub3cgd2hhdCB0aGUgZ3V5IGxvb2tlZCBsaWtlLiAKV2UgZGlkbid0IGhhdmUgYW55IG1vcmUgZ2FtZXMgdGhhdCBkYXkgc28gbXkgYnVkZGllcyBhbmQgSSBkZWNpZGVkIHRvIGNoZWNrIG91dCB0aGUgYXVkaXRvcml1bSBvbiBjYW1wdXMuIApJIG1pc3MgdGhlIGRheXMgd2hlbiBJIHdhcyB5b3VuZ2VyIGFuZCB3b3VsZCBoYW5nIG91dCBvdmVyIGF0IG15IGZyaWVuZCB3aG8gaGFkIGEgc3RhYmxlLiBUaGVpciBmYW1pbHkgb2ZmZXJlZCBzdGFsbHMgdGhhdCBwZW9wbGUgY291bGQgcmVudC4gClNvIG1hbmNoIGVpbmVyIGZyZXV0IHNpY2ggZGFubiBkb2NoIGVoZXIgYmVyIGVpbmUgc2VsYnN0IGdlbWFjaHRlIFNjaG9rb2xhZGUgKGthbm4gbWFuIGltIEludGVybmV0IGJlaSBkaXZlcnNlbiBIbmRsZXJuIGxhc3NlbikuIAoiSSB0aGluayBzb21ldGltZXMgd2Ugd2FudCB0byB0cnkgYW5kIGNvbnRyb2wgYSBsb3Qgb2YgdGhpbmdzIHRoYXQgd2UgYWN0dWFsbHkgY2FuJ3QsIGFuZCB0aGUgYmVzdCBhZHZpY2UgSSd2ZSBiZWVuIGdpdmVuIGlzIHRvIHJlbGF4IGFuZCBqdXN0IGVuam95IHRoZSByaWRlIHJhdGhlciB0aGFuIHB1c2hpbmcgbXlzZWxmIHRvbyBoYXJkLiJIaWdoIHByb2ZpbGUgbGlmZXN0eWxlIGJsb2dnZXIgIHdpbGwgYmUgdGhlIGZpcnN0IHRvIHRlbGwgeW91IHNoZSdzIGZhY2VkIHNvbWUgbWFqb3IgbGlmZSB1cGhlYXZhbHMuRm9sbG93aW5nIHRoZSBkZWF0aCBvZiBoZXIgZGFkLCBTaXIgUGF1bCBIb2xtZXMsIGFuZCB0aGUgbXVyZGVyIG9mIGhlciBwYXJ0bmVyLCBDb25ub3IgTW9ycmlzLCBzaGUgZGVjaWRlZCB0byB0YWtlIHNvbWUgdGltZSBvdXQgaW4gR3JlZWNlLCB3aGVyZSBoZXIgYmlydGggZmF0aGVyLCBTdHJhdGlzIEthYmFuYXMsIGxpdmVzLiBJdCB3YXMgdGhlcmUgdGhhdCBzaGUgcmVjZWl2ZWQgc29tZSBsaWZlIGNoYW5naW5nIGFkdmljZS5Jbml0aWFsbHkgdGhpbmtpbmcgc2hlIHdvdWxkIG9ubHkgc3RheSBpbiBHcmVlY2UgZm9yIHRocmVlIG1vbnRocywgRWxkZXIgSG9sbWVzIGZvdW5kIHNoZSBkaWRuJ3Qgd2FudCB0byBsZWF2ZS4iTXkgZGFkIHNhaWQsICdZb3Ugc2hvdWxkIGdpdmUgaXQgYSB5ZWFyLCB5b3UgY2FuJ3Qga25vdyBhIHBsYWNlIGluIHRocmVlIG1vbnRocywnIiBzaGUgdG9sZCBOZXh0IG1hZ2F6aW5lLlNvIHNoZSBzdGF5ZWQgYW5kIGhhcyBnb25lIG9uIHRvIHJlYnVpbGQgaGVyIGxpZmUgaW4gR3JlZWNlLCBzYXlpbmcgaGVyIGRhZCdzIGFkdmljZSB0byB0YWtlIGhlciB0aW1lIHdhcyBoZXIgYmlnZ2VzdCBsZXNzb24uIkkgd2FudCB0byBnZXQgc2h0IGRvbmUgZmFzdCwiIHNoZSBzYWlkLiAiSSB3YW50IGV2ZXJ5dGhpbmcgdG8gYmUgcmVhZHkgZm9yIHRoZSBtb21lbnQgdGhhdCBJIG5lZWQgaXQuIApXaGVuIHRoZXJlIGFyZSBvbmx5IHR3byBjaG9pY2VzIGluZGljYXRpbmcgdGhhdCB5b3VyIG5vdCB0YWtpbmcgb25lIGlzIGFuIGluZGljYXRpb24geW91ciBoYXZlIGNob3NlbiB0aGUgb3RoZXIuLiAKSXQgd2FzIHJlYWxseSBpbiBNYWNhdSwgd2hlbiBJIGNhbWUgaW4gc2Vjb25kIGFuZCBJIHRob3VnaHQgaXQgd2Fzbid0IGEgZmx1a2UuLiAKSWYgYSBub24gS29yZWFuIHNwZWFrZXIgd2l0aCBhbiBhY2NlbnQgdGhhdCBkaWZmaWN1bHQgZm9yIEtvcmVhbnMgc2F5cyB0byBhIHRheGkgZHJpdmVyIHRoYXQgdGhleSB3YW50IHRvIGdvIHRvICJOYW0gTW91bnRhaW4iLCB0aGV5IG1pZ2h0IGJlIHRha2VuIHRvIHNvbWUgcmFuZG9tIHBsYWNlLiBUYXhpIGRyaXZlciBoZWFycyAiTmFtc2FuIiBhbmQgdGhlICJNb3VudGFpbiIgcGFydCBvbmx5IGhlbHBzIHRoZSB0cmF2ZWxlciB0byBrbm93IHRoZXkgc2hvdWxkIGJlIGFycml2aW5nIGF0IHNvbWV0aGluZyByZXNlbWJsaW5nIGEgbW91bnRhaW4uClRoZSBDaGFybG90dGVzdmlsbGUgZHJpdmVyIGlzIGFuIGV4YW1wbGUgb2Ygc3VjaCBhIHBlcnNvbi4gQnV0LCB3ZSBjYW4gYWxsb3cgb3Vyc2VsdmVzIHRvIHRoaW5rIHRoYXQgY2VydGFpbiBncm91cHMgYXJlIGlubmF0ZWx5IGV2aWwuIFRoYXQga2luZCBvZiBtaW5kc2V0IGNhbiBwb3RlbnRpYWxseSBsZWFkIHRvIG11cmRlcm91cyBhbmQgZ2Vub2NpZGFsIHRoaW5raW5nLi4gCkFuZCBvaCBib3ksIHdoYXQgYSBtZXNzIHRoYXQgd2FzLiAKSGlzIHBlb3BsZSB3ZXJlIHNsYXVnaHRlcmVkIGFuZCBvcHByZXNzZWQgd2hpbGUgd2hpdGUgZm9sa3Mgd2VyZSBjb25xdWVyaW5nIHRoZSBVUyB3aXRoIHRoZWlyIHNsYXZlcy4gSGUgSVMgYW4gYXNzaG9sZSwgYnV0IGRvIHlvdSBnZXQgdG8gZGVjaWRlIHRoYXQgaGUgc2hvdWxkIG1pc3MgaGlzIGZsaWdodCBvdmVyIGl0PyBJRiB5b3UgaGFkbiBiZWVuIHNvIGRyYW1hdGljLCB5b3UgY291bGQgbWF5YmUgaGF2ZSBoYWQgYSByYXRpb25hbCBkaXNjdXNzaW9uIHdoaWNoIGNvdWxkIGhhdmUgbGVhZCB0byBhIGNoYW5nZSBpbiBoaXMgcGVyc3BlY3RpdmUgYW5kIGFuIGFwb2xvZ3ksIGJ1dCB5b3UgaGFkIHRvIGdvIGZyb20gMCAxMDAgaW1tZWRpYXRlbHkgYW5kIGV2ZW4gaWYgaGUgZGlkIGZlZWwgcmVtb3JzZSwgeW91IG1hZGUgaXQgYSBwb3dlciBwbGF5LiBZb3UgYWN0dWFsbHkgYSBiaWdnZXIgYXNzaG9sZSB0aGFuIGhpbS4gClNpIGUgbm86IGdpIGFkZXNzbyB0ZSBsaSB0cm92aSBkaXZpc2kgc3UgY29zYSAgbWVyaXRldm9sZSwgbWEgc29wcmF0dHV0dG8gY2hpIGxpIGxlZ2dlIGEgcGFydGUgZ2xpIGFkZGV0dGkgYWkgbGF2b3JpIGUgcG9jaGkgYXBwYXNzaW9uYXRpPyBnbGkgc3Bhemkgc3VpIHF1b3RpZGlhbmkgc29ubyBvcnJlbmRpLCBpbiBlZGljb2xhIGlsIHJlc3RvIG5vbiB2YSBtZWdsaW8gKHF1YW50byBtYW5jYSAicHVscCIsIGVyYSBiZWxsaXNzaW1hLikgZSBpbiByZXRlIG5vbiB0cm92byBudWxsYSBkaSBkYXZ2ZXJvIG1lcml0ZXZvbGUgKGhvbGRlbiBlcmEgY2FyaW5vIG1hIGlsIHRpcG8gb3JhIGxhdm9yYSBwZXIgbGEgbm4gZSBnaXVzdGFtZW50ZSAgYXNzb3JiaXRvIGRhbCBzdW8gbGF2b3JvLCBlIGFuY2hlIGJlbmUgZGlyZWk7IHRhc2NhYmlsZSBlIHByaXNtbyBtZXJpdGFubyBhc3NhaSBtYSBnaXVzdGFtZW50ZSBkZXZvbm8gYW5jaGUgcGFybGFyZSBkIG5vbiBzb25vIHN0cmV0dGFtZW50ZSBkZWRpY2F0ZSBhbGxhIGxldHRlcmF0dXJhKS4gQm9oLCBtaSBzZW1icmEgdW5hIGJhdHRhZ2xpYSBwZXJzYS4uIApBIG1ham9yIHNhdmluZyBpcyB0aGUgZXhwZW5zZSBvZiBkcmlua3MsIG9yIGJldmVyYWdlcywgc28gZW5jb3VyYWdlZCBhdCBvZmZsaW5lIGNhc2lub3MgYW5kIHBva2VyIHJvb21zLCBidXQgaGl0dGluZyBoYXJkIG9uIHRoZSBwb2NrZXQuIEluIGFkZGl0aW9uLCBpdCBpcyB2ZXJ5IHRpbWUgc2F2aW5nIGJlY2F1c2UgdGhlcmUgaXMgbm8gdHJhdmVsIHRpbWUsIGFuZCB0aGVyZSBhcmUgbm8gc2xvd2x5IHNodWZmbGluZyBkZWFsZXJzLiAKRXZlci5BIG11Y2ggYmV0dGVyIGpvdXJuYWxpc3RpYyBleGVyY2lzZSB3b3VsZCBiZSB0byBhc2sgcmVhZGVycyB3aGV0aGVyIHRoZXkga25ldyB0aGVyZSBhcmUgc3Ryb25nIGNvbm5lY3Rpb25zIGJldHdlZW4gQW1lcmljYW4gZXZhbmdlbGljYWwgQ2hyaXN0aWFucyBhbmQgdGhlIFVnYW5kYW4gZGViYXRlIG92ZXIgZXhlY3V0aW5nIGhvbW9zZXh1YWxzLlNvIHRoZSBCQkMgV29ybGQgU2VydmljZXMgaGFkIHRoaXMgZXhjZWxsZW50IGlkZWEgZm9yIGEgcHVibGljIGRlYmF0ZS4gCk9uIER1a2UncyBmaW5hbCBwb3NzZXNzaW9uLCBCYXJyZXR0IGJhcnJlbGVkIGluc2lkZSBvbmx5IHRvIGdldCBoaXMgc2hvdCBzd2F0dGVkIGJ5IENsYXJrZSwgc2V0dGluZyBvZmYgYSB3aWxkIG9uIGNvdXJ0IGNlbGVicmF0aW9uIGFzIHRoZSBaYWdzIHBvdXJlZCBvbnRvIHRoZSBjb3VydC4gTWludXRlcyBsYXRlciwgSGFjaGltdXJhIHdhcyBhbm5vdW5jZWQgYXMgdGhlIE1WUCBhbmQgbG9va2VkIGEgbGl0dGxlIHN1cnByaXNlZC4KQXZlcmFnZSBob21lIHByaWNlcyByb3NlIDEuNiBwZXIgY2VudCBmcm9tIGEgeWVhciBlYXJsaWVyIHRvICQ3ODAsMzk3Li4gCkkgY2FuIGdvIGFoZWFkIGFuZCB0ZWxsIHlvdSB0aGF0IHlvdSBwcm9iYWJseSBkbyBOT1QgaGF2ZSBhIGJyYWluIHR1bW9yLiBJIHdlbnQgdG8gdGhlIGRvYyAzIHNlcGFyYXRlIHRpbWVzIHllYXJzIGFnbyB3aXRoIHN5bXB0b21zIGxpa2UgdGhhdC4gUmVtZW1iZXIgICBhbnhpZXR5IEZFRURTIG9uIGl0c2VsZi4gWW91IGJlY29tZSBjb25zdW1lZCBieSB0aGUgdGhvdWdodCBvZiBzb21ldGhpbmcgYmVpbmcgd3Jvbmcgd2l0aCB5b3UuIEl0IGZlZWRzIG9uIGl0c2VsZiBjb250aW51b3VzbHkuIFlvdXIgYm9keSBnZXRzIHN0dWNrIGluIGZpZ2h0IG9yIGZsaWdodCBtb2RlIGFuZCBzdHJlc3Mgd3JlYWtzIGhhdm9jIG9uIHlvdXIgYm9keSBiZWNhdXNlIG9mIGNvcnRpc29sIHJlbGVhc2UuCkVhcm5pbmdzIHZhcnkgYmFzZWQgb24gdGhlIGZlZXMgc2V0IGJ5IHRoZSBpbnN0cnVjdG9ycy4gCk9uZSBvZiB0aGUgYmFkIHBva2VyIGhhYml0cyBvciBzdHJhdGVnaWVzIHlvdSBtYXkgZGV2ZWxvcCBieSB1c2luZyBqdXN0IHZpcnR1YWwgY2hpcHMgaXMgcGxheWluZyBhbGwgdGhlIGhhbmRzIHRoYXQgYXJlIGRlYWx0IHRvIHlvdS4gWW91IHdpbGwgbm90IGJlIGFibGUgdG8gcHJhY3RpY2UgdGhhdCBza2lsbCBvZiBqdXN0IGNob29zaW5nIHRoZSByaWdodCBoYW5kLiAKV2hlbiBJIGFtIGNvbmZyb250aW5nIHNvbWVvbmUgYW5kIEkgYW5ncnkgICB3YXRlcndvcmtzLiBJIHNlcmlvdXNseSBoYXRlIGl0LiBJIHRoaW5rIGl0IG1ha2VzIG1lIGxvb2sgd2VhayBhbmQgc3R1cGlkLiAKRHIuIERhbiBPJ0Nvbm5vciBhbmQgRHIuIApXaXRoIHRoZSBoZWxwIG9mIEpvcmRpLCB3aG8gaW50cm9kdWNlcyBhbmQgc3VwcGxpZXMgSUVEcywgcGxheWVycyBzbmVhayBpbnRvIHRoZSBtZWV0aW5nIHNwb3QsIGhhY2sgYW5kIHdhdGNoIGEgdmlkZW8gb2YgcHJldmlvdXMgZGVhbHMgYW5kIHVzZSB0aGF0IGluZm8gdG8gcHJlcGFyZSBhbiBhbWJ1c2ggd2l0aCB0aGUgZXhwbG9zaXZlcy4gQWZ0ZXJ3YXJkLCBBaWRlbiB3YWl0cyBmb3IgdGhlIHBlcmZlY3QgdGltZSB0byBpZ25pdGUgZXZlcnl0aGluZyBhbmQgZ3VuIGRvd24gdGhlIHN0cmFnZ2xlcnMuLiAKU29tZSBob3VzZXMgYXJlIG1hZGUgZnJvbSBzdG9uZSwgc29tZSBmcm9tIG11ZCBvciB3b29kLiAKU2FwcGhpcmUgbWFrZXMgc29tZSBmYW50YXN0aWMgY2FyZHMgYW5kIHRoZSBjb2xvciBzY2hlbWUgKGVzcGVjaWFsbHkgdGhlIGJhY2twbGF0ZSkgZml0cyBwZXJmZWN0bHkgd2l0aCB0aGUgcmVzdCBvZiB5b3VyIHBhcnRzIGFzIHdlbGwuIApBbmQgeW91IGFyZSwgdG9vLCBJIGFtIGFic29sdXRlbHkgc3VyZS4gCkhvbmVzdGx5IG5vdCByZWFsbHksIGlmIGl0IHdhcyBlYXNpZXIgdGhhbiBpdCB3b3VsZCBiZSBvdmVyIHF1aWNrZXIuIEkgZ3Vlc3MgZXZlcnlvbmUgZW5qb3lzIHRoaW5ncyBkaWZmZXJlbnRseSBidXQgZm9yIG1lIHRoZSBqb3VybmV5IGlzIGp1c3QgbW9yZSBmdW4gdGhhbiB0aGUgZGVzdGluYXRpb24uCk1hc3NhZ2UgaXMgYSBXb25kZXJmdWwgdGhpbmcKUGVvcGxlIHdpdGggbW9yZSBtb25leSBhbmQgaGlnaGVyIGxldmVscyBvZiBlZHVjYXRpb24gdGVuZCB0byBnZXQgbWFycmllZC4gClRoZXkgaGF2ZSBhbHJlYWR5IHNhaWQgdGhhdCBzaG91bGQgdGhlIHN1cGVydmlzb3JzIGFwcHJvdmUgdGhlIGRldmVsb3BtZW50IHRoZXkgd2lsbCBzdWUgdG8gb3ZlcnR1cm4gdGhlIGRlY2lzaW9uIGFuZCB0aGV5IGFyZSBwcmVwYXJlZCB0byBtb3VudCBhIHNpZ25hdHVyZSAgZ2F0aGVyaW5nIGRyaXZlIHRvIHBsYWNlIGEgbWVhc3VyZSBvbiBhIDIwMjAgYmFsbG90IGFza2luZyB2b3RlcnMgY291bnR5d2lkZSB0byByZXZlcnNlIHRoZSBhcHByb3ZhbC4KSGlyZWQuIApXZSBnZXQgcGFpZCBhIGdvb2Qgd2FnZSBmb3IgZG9pbmcgdGhpcyBhbmQgSSBsaWtlIHdoYXQgSSBkb2luZy4iLiAKQWxsIHRoaXMgbWlnaHQgbWFrZSBuYXZpZ2F0aW5nIERlbnZlciBJbnRlcm5hdGlvbmFsIHNlZW0gbGlrZSBhIGRhdW50aW5nIHRhc2ssIGJ1dCB5b3UnZCBiZSBzdXJwcmlzZWQgdG8gbGVhcm4gdGhhdCB0aGlzIGJlaGVtb3RoIG9mIGFuIGFpcnBvcnQgaXMgYWN0dWFsbHkgZWFzeSB0byBnbyBhcm91bmQsIGFzIGxvbmcgYXMgeW91IGxlYXJuIGEgZmV3IHRoaW5ncyBhYm91dCBpdC4gCkknbGwgbGVhdmUgdGhhdCB1cCB0byBzb21lb25lIGxvb2tpbmcgdG8gZ2FpbiBleHBlcmllbmNlICJhdCB0aGUgc2Nob29sIG9mIGhhcmQga25vY2tzLiIgU29tZSBSRUkgd2lsbCAiaW52ZXN0IiB0aGF0IHdheSwgKHRoYXQgaXMsIHdpdGggYSBsb3NzKSBiZWNhdXNlIG9mIHRoZSBleHBlcmllbmNlIGdhaW5lZC4gCihGdWxsIEFuc3dlcikuIApDYW4gc2hpZnQgdGhlIGJsb2IgaW4gb25lIGRpcmVjdGlvbiBvciBhbm90aGVyICBzb21lIG91dGNvbWVzIGJlY29tZSByZWxhdGl2ZWx5IG1vcmUgbGlrZWx5IGFuZCBvdGhlcnMgYmVjb21lIHJlbGF0aXZlbHkgbGVzcyBsaWtlbHkuIApTdXBlcm1hbiBkaWRuIGhhdmUgYnVsZ2luZyBtdXNjbGVzIGZvciA0MCB5ZWFycyBvciBzby4gCkRlciBmb2xnZW5kZSBBcnRpa2VsIGJlZmFzc3Qgc2ljaCBlaW5nZWhlbmQgbWl0IHp3ZWkgYWJzdHJha3RlbiBnZWlzdGVzd2lzc2Vuc2NoYWZ0bGljaGVuIEJlZ3JpZmZlbiwgZGVtIEdsYXViZW4gdW5kIGRlbSBLaGxzY2hyYW5rLCBzb3dpZSBkZXJlbiBCZXppZWh1bmcgenVlaW5hbmRlci4gRXMgc2VpIGhpZXIgZ2xlaWNoIGFtIEFuZmFuZyBlaW5nZXJ1bXQsIGRhc3MgR2xhdWJlIGVpbmUgc2Nod2VyIHp1IGZhc3NlbmRlIFNhY2hlIGlzdC4gR2xhdWJlIGlzdCBuaWNodCBmbHNzaWcsIGhjaHN0ZW5zIGJlcmZsc3NpZy4gR2xhdWJlIGxzc3Qgc2ljaCBuaWNodCBlaW5mcmllcmVuLCB1bmQgZG9jaCBzb2xsdGUgbWFuIHNlaW5lbiBHbGF1YmVuIGZyaXNjaCBoYWx0ZW4uIFBhY2tlbiB3aXIgYWxzbyBkZW4gR2xhdWJlbiBpbiBkZW4gS2hsc2NocmFuaywgdW5kIGd1Y2tlbiB3aXIgd2FzIG1pdCB1bnMsIG1pdCBkZXIgV2VsdCB1bmQgbWl0IGRlciBNaWxjaCBuZWJlbiBkZW0gR2xhdWJlbiBwYXNzaWVydC4gQmVkaW5ndCBkYWR1cmNoLCBkYXNzIHdpciBhdXMgdGllZnN0ZXIgYmVyemV1Z3VuZyBoYW5kZWxuLCB3aXJkIGVpbiBXdW5kZXIgZ2VzY2hlaGVuLCB1bmQgd2lyIGVyaGFsdGVuIFF1YXJrLgpJZiB3ZXJlIG9ubHkgY29tcGFyaW5nIHRoZSA3LjAgc3VyYW1hciBxdWVzdGxpbmUgdG8gdGhlIDguMCB3YXIgY2FtcGFpZ24gdGhlIHdhciBjYW1wYWlnbiBkZWZpbmVudGx5IHdpbnMKVGhlcmUgaXMgbm8gZGVzdGluYXRpb24gaW4gbWluZCBidXQgc29tZWhvdyB3ZSBlbmQgdXAgdGhlcmUgICBkb3dudG93biBhdCBvdXIgZmF2b3JpdGUsIHF1aWV0IGJhciBvZiB3aGljaCB0aGUgYmVzdCBiYXJ0ZW5kZXJzIHNlcnZlIHlvdSB1cCB5b3VyIHVzdWFsIGRyaW5rIG9yIGEgQmxvb2R5IE1hcnkgaWYgeW91J3JlIGh1bmdyeS4gVGhleSBhbHNvIHNlcnZlIGEgYml0IG9mIHdpdCwgY2hhcm0gYW5kIG5pY290aW5lLiBZb3UgY2FuIGhlYXIgeW91cnNlbGYgdGhpbmsgdW5sZXNzIHRoZXJlJ3MgYSBnYW1lIGFuZCBkb3duc3RhaXJzIHNvbWUgcGVvcGxlIHBsYXkgcG9rZXIuLiAKSSB0b29rIG15IDMgeWVhciBvbGQgdG8gYSBzcGxhc2ggcGFkIG9uZSBkYXkuIAooQWx0aG9mIHNheXMgaGUncyBiZWVuIGhlbHBpbmcgb3RoZXIgcGhhcm1hY2V1dGljYWwgY29tcGFuaWVzIGRldmVsb3AgUEUgZHJ1Z3MsIGFuZCBhbHRob3VnaCBoZSBjYW4ndCBwcm92aWRlIGRldGFpbHMsIGhlIG5vdGVzIHRoYXQgbm9uZSBhcmUgYXMgZmFyIGFsb25nIGluIHRoZSBwcm9jZXNzIGFzIEpvaG5zb24gSm9obnNvbiBpcy4pLiAKUGxlbnR5IG9mIHBlb3BsZSBkbyB0aGUgc2FtZSB0aGluZyB3aGVuIHNob3ZpbmcgYXQgb3VyIGNhc2lubyAoZ3JhYiBoYW5kZnVsIG9mIGNoaXBzLCBzaW11bHRhbmVvdXNseSB0b3NzIHRoZW0gaW4gd2hpbGUgZGVjbGFyaW5nIGFsbCBpbikgYW5kIGhhZCBhbnlvbmUgZWxzZSBkb25lIGp1c3QgdGhhdCBpbiB0aGlzIHNpdHVhdGlvbiB0aGV5J2QgbmV0IHRoZSBzYW1lIHJlc3VsdC4gSGVhZHBob25lcyB3b3VsZCBzdGlsbCBiZSBwaXNzZWQgYnV0IHRoZSBvbnVzIGlzIG9uIGhpbSB0byBwYXkgYXR0ZW50aW9uLiAKT1RGIHlvdXIgYmV0IGlzIGZpbmUgaSBsaWtlIHRoZSBsZWFkIGFuZCB0aGUgYW1vdW50LiBJZiBpdCB3YXMgZGVlcGVyIHN0YWNrZWQgaWQgaG9uZXN0bHkgY29uc2lkZXIgY2hlY2tpbmcgc29tZSBvZiB0aGUgdGltZSBiZWNhdXNlIHRoYXQgaXMgc3VjaCBhIHNoaXR0eSBzcG90IHRvIGdldCByYWlzZWQgZXNwZWNpYWxseSB3aXRoIG5vIGhlYXJ0LiBJZiBJIGdldHRpbmcgbXkgc291cmNlIGNvcnJlY3RseSwgSmFuZGEgIk5vIExpbWl0IEhvbGQgZm9yIEFkdmFuY2VkIFBsYXllcnMiIGV4cGxhaW5zIHRoYXQgeW91IHNob3VsZCBvbmx5IGJlIHRoZW9yZXRpY2FsbHkgaGFwcHkgZ2V0dGluZyBjYWxsZWQgd2hlbiB5b3UgaGF2ZSBBQSBvciBLSy4gCkFzIEkndmUgZXhwbGFpbmVkIHRvIHlvdSBieSBlbWFpbCBhbmQgaGFkIGFscmVhZHkgcG9zdGVkIG5vdGVzIHRvIHNheSB0aGlzIHdvdWxkIGhhcHBlbiwganVzdCB0byByZWl0ZXJhdGU7IHRoZSBGb3J1bSBoYXMgZmluaXRlIGNhcGFjaXR5LCB3aXRoIHNvIG1hbnkgSU0gdGhyZWFkcyBhcHBlYXJpbmcgaXQgd2FzIGJlY29taW5nIHVud2llbGR5IGFuZCBkb21pbmF0ZWQgYnkgSU0gY2hhdCwgbm90IHNvbWV0aGluZyBhbGwgb3VyIG1lbWJlcnMgYXJlIGludGVyZXN0ZWQgaW4uIApOZXcgdG9waWNzIG11c3QgYWltIHRvIHN0YXJ0IGEgZGlzY3Vzc2lvbi4gUG9zdHMgc2hvdWxkIGluY2x1ZGUgaW4gZGVwdGggcXVlc3Rpb25zIGFuZCBhbmFseXRpY2FsIG9waW5pb25zLiAKIkkgbG9zZSBhIGJ1bmRsZSBhdCBibGFja2phY2sgYW5kIGVhdCB0aHJlZSBvciBmb3VyIHN1cGVyIHJpY2ggc2luZ2xlIHNlcnZpbmcgY2hvY29sYXRlIGNha2VzLiBUaGV5IGhhZCB0byBoYXZlIFtoYWRdIG1vcmUgdGhhbiAxLDAwMCBjYWxvcmllcyBlYWNoLiBJdCB3YXMgZGlzYXN0cm91cy4iCkJlc2lkZXMgaW5jcmVhc2luZyBzdW4gZXhwb3N1cmUsIHRoZSBiZXN0IHdheSB0byBnZXQgYWRkaXRpb25hbCB2aXRhbWluIEQgaXMgdGhyb3VnaCBzdXBwbGVtZW50YXRpb24uIApTaGUgbmVlZHMgdG8ganVzdCBmaWxlIGZvciBkaXZvcmNlLiBTaGUgZG9lcyBub3QgbmVlZCBoaW0gdG8gY29vcGVyYXRlLCBwYXJ0aWNpcGF0ZSBvciBjb25zZW50IHRvIGEgZGl2b3JjZS4gU2hlIGFza3MgdGhlIGp1ZGdlIGZvciB0aGUgZGl2b3JjZSBhbmQgdGhleSB3aWxsIGdyYW50IGl0IG9uY2Ugc2hlIGhhcyBzaG93biB0aGF0IHRoZSBtYXJyaWFnZSBoYXMgaXJyZXRyaWV2YWJseSBicm9rZW4gZG93bi4gVXN1YWxseSB0aGF0J3Mgc2hvd24gYnkgdGhlIHBlb3BsZSBsaXZpbmcgc2VwYXJhdGUgYW5kIGFwYXJ0IGluIGV4Y2VzcyBvZiBvbmUgeWVhci4gVGhlcmUgYXJlIG90aGVyIHdheXMsIGJ1dCBzZXBhcmF0ZSBhbmQgYXBhcnQgaXMgZWFzaWVyLiBBbmQgeW91IGRvbid0IGhhdmUgdG8gbGl2ZSBpbiB0d28gZGlmZmVyZW50IHBsYWNlcyBmb3IgdGhhdCB0byBoYXBwZW4uIFlvdSBjYW4gbGl2ZSBzZXBhcmF0ZWx5IGluIHRoZSBzYW1lIGhvdXNlLgoxIE1pbGxpb24gQWZ0ZXIgTGVhcm5pbmcgSGlzIFdpZmUgaXMgQ2FuY2VyCkxpa2UgdGhlIHN0b2NrIG1hcmtldCwgcG9rZXIgdG9vIGhhcyBpdHMgc2hhcmUgb2YgaGlnaHMgYW5kIGxvd3MgY2FsbGluZyBmb3IgYSBzdGVhZHkgcGF0aWVudCBwbGF5IHdoaWNoIGhhcHBlbnMgdG8gYmUgdGhlIG9ubHkgcmV3YXJkaW5nIHBsYW4uIEdhbWJsaW5nIHdpdGggY2FyZHMgY2FuIHRha2UgbG9uZzsgbW9udGggYWZ0ZXIgbW9udGggb3IgMTIwMCBob3VycyBhcyBvdGhlcnMgY2xhaW0uIAo7XzsgMTIyIHBvaW50cyAgc3VibWl0dGVkIDggZGF5cyBhZ29JIGhhdmVuIHdhdGNoZWQgdGhpcyBkb2N1bWVudGFyeSB5ZXQgYnV0IEkgc3Ryb25nbHkgZGlzY291cmFnZSB1c2luZyBNYXJpZSBLb25kbyBtZXRob2RzIGFzIGEgd2F5IHRvIGN1cmIgY29tcHVsc2l2ZSBzaG9wcGluZy4gQW4gYWRkaWN0aW9uIHRvIHNob3BwaW5nIGlzIG9mdGVuIGEgbWVudGFsIHN0cnVnZ2xlIGFuZCBzaW1wbHkgZG9uYXRpbmcvc2VsbGluZyBvbmUgdGhpbmdzIGFuZCBnb2luZyB0aHJvdWdoIG9uZSBjbG9zZXQgZG9lcyBub3QgaGVscC4gCkNyaXRpY3Mgc2FpZCBPbWFyIHdhcyBwZXJwZXR1YXRpbmcgYSBoYXRlZnVsIHRyb3BlIGFib3V0IEpld2lzaCBBbWVyaWNhbnMgYW5kIG1vbmV5LgoiSSdkIGNoYW5nZSB0aGUgYWdlIHVwIGEgbGl0dGxlIGJpdCB3aXRoIHRoZSBwaHlzaWNhbCBzdGF0cy4gClN1ciBsZSBwcmVtaWVyIGFzcGVjdCwgb24gcGV1dCB0cmUgbGdpdGltZW1lbnQgaW5xdWlldCBkZXMgZGlmZnJlbnRlcyBkb25uZXMgcHJvdmVuYW50IGRlIHNvdXJjZXMgbWRpY2FsZXMgZG1vbnRyYW50IHF1J2lsIHkgYSBiaWVuIHVuIHByb2JsbWUgcmVsYXRpdmVtZW50IG5vdXZlYXUgZXQgZW4gZm9ydGUgYXVnbWVudGF0aW9uIGxpICBsJ2luZ2VzdGlvbiBkdSBnbHV0ZW4uIApXaHkgd291bGQgQmFybnVtIG9mZmVyIHN1Y2ggYSB3b25kcm91cyBzdW0gZm9yIGEgYnVuY2ggb2YgYm9uZXM/IEJlY2F1c2UgZm9yIGh1bWFucywgdGhlIG1vbnN0cm91cyBpcyBhbHdheXMgZXZpZGVuY2Ugb2YgdGhlIGRpdmluZS4gCkZvcm1lcmx5IFRydW1wIE1hcmluYSAoSnVuZSAnOTcgICBGZWJydWFyeSAnMTEpClZlcnkgdHJ1ZSwgYnV0IHRoYXQgd2h5IHRoaXMgc2hpdCBoYXMgdG8gc3RvcC4gQXMgYSB0cmFucyBwZXJzb24gaXQgZ2V0cyBzdXBlciBmdWNraW5nIHRpcmluZyBoYXZpbmcgdG8gY29uc3RhbnRseSB2aWV3IHlvdXJzZWxmIGFzIHBvdGVudGlhbCAiYW1iYXNzYWRvciBmb3IgeW91ciBwZW9wbGUiLiBJIHByZXR0eSBkYW1uIG9wZW4gYWJvdXQgdGhpbmdzIGJ1dCBpdCBkZWZpbml0ZWx5IHN0cmVzc2Z1bCByZWFsaXppbmcgdGhhdCB5b3UgaGF2ZSBhIHdheSBoaWdoZXIgY2hhbmNlIHRoYW4gdXN1YWwgb2YgYmVpbmcgYSBwZXJzb24gb25seSAoa25vd2luZykgY29udGFjdCB3aXRoIHRyYW5zIHBlb3BsZSBhbmQgdGhlaXIgb3BpbmlvbiBpcyBnb2luZyB0byBiZSBzaGFwZWQgaW4gYmlnIHBhcnQgYnkgeW91LgpJdCBqdXN0IGEgZmV3IG1vbnRocywgdGFsayB0byB5b3VyIGZvbGtzLiAKSW4gYWxsIGluc3RhbmNlcyB3aGVuIGl0IGNvbWVzIHRvIENsYXkgUG9rZXIgQ2hpcHMsIHRoZXNlIGNvbG9ycyB0eXBpY2FsbHkgcmVmbGVjdCBhICQxLjAwIGRlbm9taW5hdGlvbi4gClNuYXJreSBRdWVlbiBvZiBOb3BldmlsbGUgdQpBZnRlciByZWNlaXZpbmcgYSBzdHVkZW50IHBldGl0aW9uIGFuZCBudW1lcm91cyBlbWFpbHMgZnJvbSBzdHVkZW50cyBzdXBwb3J0aW5nIHRoZSBzY2hvb2wncyBjb250aW51ZWQgb3BlcmF0aW9ucyBhbmQgc29tZSBjb3JyZXNwb25kZW5jZSBmcm9tIHBlb3BsZSBzdXBwb3J0aW5nIGl0cyBjbG9zdXJlIENhbmRsZXIgaXNzdWVkIGEgbGV0dGVyIG9uIEp1bmUgMTkgcmVzcG9uZGluZyB0byBxdWVzdGlvbnMgYW5kIGNsYXJpZnlpbmcgb3B0aW9ucyBmb3IgZW5yb2xsZWQgc3R1ZGVudHMuIERlcGFydG1lbnQgb2YgRWR1Y2F0aW9uLCBvbiBKYW4uIDQsIGhhZCBpbmZvcm1lZCB0aGUgc2Nob29sIHRoYXQgaXQgaGFkIGZhaWxlZCB0byBtZWV0IHRoZSBmaW5hbmNpYWwgcmVzcG9uc2liaWxpdHkgc3RhbmRhcmRzIHJlcXVpcmVkIG9mIGluc3RpdHV0aW9ucyB0aGF0IGFjY2VzcyBmZWRlcmFsIHN0dWRlbnQgbG9hbiBmdW5kaW5nICAgYW5kIHdvdWxkIGJlIHBsYWNlZCBvbiBoZWlnaHRlbmVkIGZpbmFuY2lhbCBtb25pdG9yaW5nLi4gClRoYXQgc291bmRzIHJlYWxseSBhd2Z1bCEgV2VyZSB5b3UgYWJsZSB0byByZXBvcnQgaGltIGZvciBzZXh1YWwgaGFycmFzc21lbnQgYXQgd29yaz8gSXQgYSBkZWZpbml0ZSBubyBubyB0byB0b3VjaCBlbXBsb3llZXMgb3IgdGFsayBhYm91dCB0aGVpciBzZXh1YWwgb3JpZW50YXRpb24uIApUaW0gS2FpbmUsIGEgRGVtb2NyYXRpYyBtZW1iZXIgb2YgdGhlIFNlbmF0ZSBIZWFsdGgsIEVkdWNhdGlvbiwgTGFib3IgUGVuc2lvbnMgY29tbWl0dGVlLCBhc2tlZCBBY29zdGEgaWYgaGUgYXBwcm92ZWQgdGhlIGRlYWwgZGVzcGl0ZSBvcHBvc2l0aW9uIGZyb20gcHJvc2VjdXRvcnMgaW4gaGlzIG9mZmljZS4gClRoZSBIZW5nIFNwYSBhdCBIeWF0dCBSZWdlbmN5IENob25ncWluZyBlbmNvbXBhc3NlcyB0ZW4gbHV4dXJ5IHNwYSBzdWl0ZXMgYW5kIGFzIHdlbGwgYXMgc2VwYXJhdGUgZm9vdCBtYXNzYWdlIHJvb21zIGZvciB0b3RhbCBwYW1wZXJpbmcgYW5kIHJlbGF4YXRpb24uIFRoZSBGaXRuZXNzIENlbnRlciwgd2l0aCBpdHMgZGVkaWNhdGVkIHRlYW0gb2YgcGVyc29uYWwgdHJhaW5lcnMsIGlzIGVxdWlwcGVkIHdpdGggc3RhdGUgb2YgdGhlIGFydCBmYWNpbGl0aWVzIGFuZCBvZmZlcnMgdGFpbG9yZWQgdHJhaW5pbmcgcHJvZ3JhbXMgZm9yIGd1ZXN0cyB0byBiZSBhYmxlIHRvIGVuam95IGEgY29tcHJlaGVuc2l2ZSBhbmQgcmVmcmVzaGluZyB3b3Jrb3V0IGV4cGVyaWVuY2UuIEd1ZXN0cyBjYW4gYWxzbyB1dGlsaXplIHRoZSAyNSBtZXRlciBpbmRvb3IgcG9vbCB0byByZWp1dmVuYXRlIGFuZCByZWZyZXNoLi4gCkp1c3QgbGlrZSBmb29kIGNhbiBiZSBpbXByb3Blcmx5IHByZXBhcmVkIGFuZCBjb250YW1pbmF0ZWQsIHZhY2NpbmVzIGNhbiBhbHNvIGJlIGltcHJvcGVybHkgcHJlcGFyZWQuIApBcmUgeW91IG9uZSBvZiB0aGUgNTMsMDAwIGN1c3RvbWVycyB3aG8gaGF2ZSBiZWVuIG9mZmVyZWQgYSBzbmVhayBwZWVrIGF0IFBsYXlPTEc/IElmIHNvLCB3ZSB3YW50IHRvIGhlYXIgZnJvbSB5b3UuClNvbWUgcGVvcGxlIG1ha2UgYSBkaXN0aW5jdGlvbiBiZXR3ZWVuIENvbW11bmlzbSAod2l0aCBhIGNhcGl0YWwgQykgYW5kIGNvbW11bmlzbSAod2l0aCBhIGxvd2VyY2FzZSBDKS4gQmlnIEMgQ29tbXVuaXNtIGlzIHRoZSBzdHJ1Z2dsZSB0aHJvdWdoIHRoZSB2YXJpb3VzIGVjb25vbWljIHN0YWdlcyBvZiBoaXN0b3J5IGFuZCB0aGUgY3VycmVudCBzdHJ1Z2dsZSBhZ2FpbnN0IGNhcGl0YWxpc20gdG8gYWNoaWV2ZSBhIGNvbW11bmlzdCBzb2NpZXR5IGluIHRoZSBmdXR1cmUuIApMZWJzdCBkdSBhdWVyaGFsYiBkZXIgVVNBIGRhbm4gc3BpZWxlIG9ubGluZSBQb2tlci4gU29sbHRlc3QgZHUgZGFzIEdsY2sgaGFiZW4gZWluIHJpY2h0aWcgZ3V0ZXIgUG9rZXJzcGllbGVyIHp1IHNlaW4gdW5kIGRhenUgbmljaHQgaW4gZGVuIFVTQSB3b2huZW4sIGRhbm4gc3BpZWxlIG9ubGluZSBQb2tlciB1bSBkZWluZSBiYW5rcm9sbCBhdWZ6dXBlcHBlbi4gRnIgdmllbGUgU3BpZWxlciBpc3QgZGllcyBsZWljaHRlciAgIG9mdCBpc3QgZXMgc2NobmVsbGVyLCBlcyBiZXJlaXRldCB3ZW5pZ2VyIEtvcGZzY2htZXJ6ZW4sIHVuZCBlcyBpc3QgYW5nZW5laG1lciwgd2VubiBtYW4gZXMgZGVubiBtYWwgYmVpbSBOYW1lbiBuZW5uZW4gbWNodGUsIExldXRlbiBHZWxkIGFienVuZWhtZW4sIGRpZSBtYW4gbmljaHQgc2llaHQgLgpBbHNvLCBieSB0aGUgZW5kIG9mIHRoZSB3YXIgaW4gMTk0NSB0aGUgU292aWV0cyBoYWQgMTEgYW5kIGEgaGFsZiBtaWxsaW9uIGFjdGl2ZSBtaWxpdGFyeSBwZXJzb25uZWwuIEhpdGxlciBkZWNpZGVkIHRvIGF0dGFjayB3aGVuIGhlIGhhZCBhcm91bmQgMyBhbmQgaGFsZiBtaWxsaW9uIG1lbiBpbiBoaXMgbWlsaXRhcnkuIApTaGUgc3RvcHBlZCBkb2luZyB0aGF0IGxvbmcgYWdvLCBidXQgSSBrbm93IHNoZSBoYXMgc2V2ZXJhbCAic2VjcmV0IiBzdG9yYWdlIHVuaXRzIHRoYXQgc2hlIHRoaW5rcyBteSBkYWQgZG9lc24ga25vdyBhYm91dC4gCkdpdmVuIHRoYXQgU2hhd24gd2FzIDUwIHdoZW4gdGhleSBtYXJyaWVkIGluIDE5OTcgYW5kIEtpbmcgd2FzIDc2LCB0aGV5IHRvbyBjb3VsZCBoYXZlIHJlbnRlZCBhIHBvb3Igd29tYW4gd29tYiBpbiBvcmRlciB0byBoYXZlIGNoaWxkcmVuLiAKVGhlIGVuZGluZyBvZiBzbGF2ZXJ5IGRpZG4gcHJvdmlkZSBwb3NpdGl2ZSBsaWJlcnR5IHRvIHNsYXZlcywganVzdCBuZWdhdGl2ZSBsaWJlcnR5IChhbmQgaXQgdGVjaG5pY2FsbHkgZGlkbiBldmVuIGdldCByaWQgb2Ygc2xhdmVzKS4gQSBzdGVwIHRvIGVuc3VyaW5nIHBvc2l0aXZlIGxpYmVydHkgYXQgdGhlIGVuZCBvZiBzbGF2ZXJ5IHdvdWxkIGhhdmUgYmVlbiB0byByZXR1cm4gdGhlIGxhbmQgdGhhdCB0aGUgc2xhdmVzIHdvcmtlZCB0byB0aGVtLCBhbGxvd2luZyB0aGVtIHRvIHByb3ZpZGUgZm9yIHRoZW1zZWx2ZXMgYW5kIHNlY3VyZSBhIGxpZmUgdGhyb3VnaCB0aGVpciB3b3JrLiAKU29mdHdhcmUgYXNrIGZvciB0aGUgc2VyaWFsLCB1c3VhbGx5IGF0IGluc3RhbGxhdGlvbi4gV2hlbiB5b3UgaW5zZXJ0IHRoZSBDRCBpbnRvIHRoZSBkcml2ZSwgaXQgd2lsbCBhdXRvbWF0aWNhbGx5IGJlZ2luIHRoZSBpbnN0YWxsYXRpb24gaWYgeW91IGhhdmUgYXV0byBydW4gZW5hYmxlZC4gCkJvcm4gaW4gTmV3Zm91bmRsYW5kLCBCaWxsIHdhcyBwcmVkZWNlYXNlZCBieSBoaXMgcGFyZW50cywgTGxveWQgSGFhcyBhbmQgSGVsZW5lIChXYWtlbSkgSGFhcy4gClRob3NlIHRoaW5ncyBtYXR0ZXIgbW9yZSB0byBhIG1hbiBsb29raW5nIGZvciBhIHZhbHVhYmxlIHdvbWFuIG1vcmUgdGhhbiBzY2Fycy4gCk5vdyBjb3VudHJ5IGxpZmUgaXMgYWJvdXQgZXhwZW5zaXZlIGFuaW1hbHMuIApSeWRlciBIZXNqZWRhbCAoU2xpcHN0cmVhbSBDaGlwb3RsZSAgIEgzMCkgaXMgbG9va2luZyBmb3J3YXJkIHRvIHRoZSBHaXJvIGQnSXRhbGlhIHRoaXMgeWVhcgpKRDogV2hlbiBKYXJvc2xhdiBIYWxhayB3YXMgZG9pbmcgc28gd2VsbCBpbiAyMDEwLCBlc3BlY2lhbGx5IGR1cmluZyB0aGUgcGxheW9mZiBydW4sIEkgd2FzIHRyYXZlbGluZyBhY3Jvc3MgRXVyb3BlIHdpdGggYSBmcmllbmQgb2YgbWluZS4gV2Ugd2VudCB0byBBbXN0ZXJkYW0sIFBhcmlzLCBCYXJjZWxvbmEsIGFuZCBvdGhlciBjaXRpZXMsIHRvby4gCkkgd2FudGVkIHRoZSBqb2IgYW5kIHRoZSBoaXJpbmcgbWFuYWdlciB3YW50ZWQgdG8gaGlyZSBtZS4gCllvdSBsaXZlZCBNQVlCRSBhIHRoaXJkIG9mIHlvdXIgbGlmZS4gV2h5IG5vdCBtYWtlIHRoZSByZXN0IG9mIGl0IGFtYXppbmcgYnkgeW91ciBvd24gd2lsbD8gOikuIApQbHVzLCBJIGd1ZXNzaW5nIHRoYXQgd2hlbiB0aGUgZnVsbCByZWxlYXNlIGNvbWVzIG91dCwgeW91IGVuZCB1cCByZWNlaXZpbmcgYW4gYWN0dWFsIHF1ZXN0IHdoZW4geW91IHRhbGsgdG8gQmF0aGVzIEluIE11cmt5IFdhdGVycy4gCkJ1dCBub3QgYWxsIG9mIHRoZSB3YXN0ZSBjYW4gYmUgdXNlZCBpbiB0aGF0IHByb2Nlc3MsIHNvIGEgbG90IG9mIGl0IGhhcyB0byBiZSBkZWFsdCB3aXRoIGluIG90aGVyIHdheXMuIE1vc3RseSBpdCB3aWxsIGJlIGluY2luZXJhdGVkIG9yIGR1bXBlZCBpbiBsYW5kZmlsbHMgYW5kIHJpdmVycy4gQ2hpbmEgd2FudHMgb3RoZXIgY291bnRyaWVzIHRvIGRlYWwgd2l0aCB0aGUgbm9uIHVzZWZ1bCB3YXN0ZSwgc28gdGhleSBpbXBvcnQgYW4gaW50ZXJtZWRpYXRlIHJlc3VsdCBvZiBwcm9jZXNzaW5nIHRoZSB3YXN0ZSBpbnN0ZWFkOiBGbGFrZXMgYW5kIHBlbGxldHMuLiAKU2hlIGEgZmFzdCBsZWFybmVyLiBTaGUgaW5kZXBlbmRlbnQuIApUTDtEUiwgIldFIiBhcmUgd2h5IG1hdGNobWFraW5nIHN1Y2tzLCBub3QgdGhlIG1hdGNobWFraW5nIHN5c3RlbSBpdHNlbGYuClB1cnBvc2VseSBwdXQgdGhpcyB0ZWFtIGluIHRvdXJuYW1lbnRzIGFyb3VuZCB0aGUgcHJvdmluY2UgYmVjYXVzZSBJIGtuZXcgaWYgd2Ugd2VyZSBnb2luZyB0byBPRlNBQSwgaXQgaGVscHMgYSBsb3QgdG8gc2VlIGEgdmFyaWV0eSBvZiB0aGUgY29tcGV0aXRpb24uIFdlIGhhZCBhbHJlYWR5IHNlZW4gYW5kIGJlYXRlbiBzZXZlbiBvZiB0aGUgdGVhbXMgdGhlcmUgZHVyaW5nIHRoZSBzZWFzb24uIHdoZW4gdGhlIHN0YWtlcyB3ZXJlIGhpZ2hlc3QsIHRoZXkgYW5zd2VyZWQgdGhlIGJlbGwuClByb2R1Y2VkIGJ5IFNhcmEgUm9kcmlndWV6ClNtb2tpbmcgbWFyaWp1YW5hIGRyYW1hdGljYWxseSBpbmNyZWFzZXMgYXBwZXRpdGU7IGl0IGdpdmVzIG9uZSB0aGUgIm11bmNoaWVzLiIgVGhpcyBpcyBiZWNhdXNlIG9mIHRoZSBjaGVtaWNhbCB0ZXRyYWh5ZHJvY2FubmFiaW5vbCBvciBUSEMuIFRoZSBicmFpbiBtYWtlcyBpdHMgb3duIGVuZG9jYW5uYWJpbm9pZCBob3Jtb25lcywgbWFraW5nIG9uZSBkcmFtYXRpY2FsbHkgbW9yZSBodW5ncnksIGZyb20gdGhlIHRveGljIGZhdCBhcmFjaGlkb25pYyBhY2lkLiBQLiAzOQoiSm9obiBoYXMgYmVjb21lIHZlcnkgc3Ryb25nIGF0IHRoaXMuIAoyMi4gTWFsYXRlIGRlbWFuZHMgYXJlIGdyZWF0ZXIgaW4gaHlwb3RoeXJvaWQgZmlicm9teWxnaWEgcGF0aWVudHMuCkFuYWwgU2V4LiBKdXN0IGhlYXJpbmcgdGhvc2Ugd29yZHMgbWFrZXMgbWFueSBwZW9wbGUgdW5jb21mb3J0YWJsZSwgYnV0IGFjY29yZGluZyB0byB3b21lbiBpbiBhIHJlY2VudCBpVmlsbGFnZSBwb2xsLCBpdCB0aGUgbnVtYmVyIG9uZSBwb3NpdGlvbiB0aGF0IG1hbGUgcGFydG5lcnMgYXNrIHRoZW0gdG8gdHJ5LiBXaGV0aGVyIHlvdSBqdXN0IGN1cmlvdXMgYXQgdGhpcyBzdGFnZSBvciBhbHJlYWR5IHdpbGxpbmcgdG8gaW5kdWxnZSB5b3VyIGFkdmVudHVyb3VzIHNpZGUsIHRha2UgYSBsb29rIGF0IHRoZXNlIHNpeCBzaW1wbGUgZ3VpZGVsaW5lcy4gCkRpZG4ndCBnZXQgYSBidWxsc2V5ZS4gCkluIG90aGVyIHdvcmRzLCBCaWRlbiBwaWVjZSBpcyBwdXJlIHByb3BhZ2FuZGEuIAoiSSBhbSBwcm91ZCB0byBzYXkgcG9rZXIgaXMgbXkgZ3VpbHR5IHBsZWFzdXJlLCBpdCBoYXMgdGF1Z2h0IG1lIHNvIG11Y2ggYWJvdXQgcGF0aWVuY2UgYW5kIHJlYWRpbmcgcGVvcGxlLiBJIGhvcGUgdGhlIHBsYXllcnMgSSB3aWxsIG1lZXQgYXQgdGhlIGF3YXJkcyBjYW4gdGVhY2ggbWUgYSB0cmljayBvciB0d28uIgpGYXRhbCBpcyBwZXJmZWN0bHkgZmluZSwgYnV0IEkgc2F5IHRoaXMgYWJvdXQgcnVuZXMgaW4gZ2VuZXJhbCAgIGl0IGEgcmVhbGx5IGNvbW1vbiBtaXN0YWtlLCBldmVuIGF0IGhpZ2hlciBsZXZlbHMsIHRvIGdldCBtYXJyaWVkIHRvIHRoZSBpZGVhIG9mIHJ1bmluZyBzdHVmZiBpbiBzZXRzLiBUaGVyZSByZWFsbHkgYXJlbiB0aGF0IG1hbnkgdW5pdHMgdGhhdCBIQVZFIHRvIGJlIHJ1bmVkIHdpdGggYSBjZXJ0YWluIHNldCBpbiBvcmRlciB0byBiZSBlZmZlY3RpdmUsIGFuZCB0aGVyZSBhcmUgbG90cyBvZiB1bml0cyB3aG8geW91IGNhbiBzbGFwIGFueSBvbGQgYnJva2VuIHN0dWZmIG9uIGFuZCB0aGV5IHdvcmsgZmluZS4gQSBsb3Qgb2YgbXkgc3R1ZmYgaXMgb24gcmFuZG9tIGxlZnRvdmVyIHJ1bmVzLiBBY3Jvc3MgYm90aCBvZiBteSBSNSB0ZWFtcywgSSB0aGluayBJIG9ubHkgZ290IDQgdW5pdHMgb24gYSBjb21wbGV0ZSA0IHNldC4gTXkgc2Vjb25kIFI1IHRlYW0gb25seSBoYXMgMSwgYW5kIHRoYXQgYSB2YW1wIFNrb2d1bC4KV2VpZ2h0IGxvc3Mgb2YgYSBwb3VuZCBwZXIgd2VlayBpcyBhIDUwMGNhbC9kYXkgZGVmaWNpdDsgaWYgeW91ciB3ZWlnaHQgd2FzIHN0YWJsZSB3aXRoIHRoYXQsIGFuZCB5b3UgZG9uIGFkZCBhbnkgb3RoZXIgY2Fsb3JpZXMgKHJlcGxhY2luZyBhbGNvaG9sIHdpdGggbm9uIGRpZXQgc29kYSwgZWF0aW5nIHNpZ25pZmljYW50bHkgbW9yZSwgZXRjKSwgdGhhdCB3b3VsZCBiZSBhcm91bmQgYSBwb3VuZCBwZXIgd2VlaywgaWYgeW91IHdlcmUgZHJpbmtpbmcgYSBib3R0bGUgcGVyIGRheSFBbGNvaG9sIGNhbiB5b3UgdG8gcmV0YWluIG1vcmUgd2F0ZXIsIHNvIGlmIHlvdSBzdGF5IHByb3Blcmx5IGh5ZHJhdGVkIChzZWVtcyBjb250cmFkaWN0b3J5LCByaWdodD8pLCB5b3Ugc2hvdWxkIHNoZWQgc29tZSB3YXRlciB3ZWlnaHQgKGFuZCBoYXZlIHRhdXRlciwgbGVzcyBwdWZmeSBza2luKS5UaGF0IHNhaWQsIGV4ZXJjaXNlIGlzIHVzdWFsbHkgZ29vZCwgYW5kIEkgZmluZCBpdCB0byBiZSBhIGdvb2QgZGlzdHJhY3Rpb24gZnJvbSBhbGNvaG9sIGNyYXZpbmdzICAgYWZ0ZXIgSSBwdXNoIG15c2VsZiBvbiBhbiBhZnRlciB3b3JrIHJ1biwgYWxjb2hvbCBmZWVscyBhIGxvdCBsZXNzIGFwcGVhbGluZywgYW5kIHdhdGVyIGEgbG90IG1vcmUhIEV4ZXJjaXNlIHN3ZWF0IGZlZWxzIGRpZmZlcmVudCB0aGFuIGFsY29ob2wgc3dlYXQgdG8gbWUsIGluIGEgZ29vZCB3YXkuQXQgdGhlIHRpbWUsIHRoZXkganVzdCBjb252ZXJ0ZWQgZnJvbSBiZWluZyBsb3cgaW5jb21lIGhvdXNpbmcgdG8gYmVpbmcgbm9ybWFsIGFwYXJ0bWVudHMuIApDdXJhRnV0dXJhIEdybmR1bmcgNC8yMDEzIHNjaGxndCBob2hlIFdlbGxlbiA+Pj5DVVJBIGF1cyBkZW0gTGF0ZWluIGJlZGV1dGV0IHdpZSB3aXIgd2lzc2VuOiBDVVJBTSwgc2Nob24gZWhlciBiZW51dHp0LCAgVHJhZ2VuIEZ1dHVyYSBzdGVodCBmciBadWt1bmZ0LiBDdXJhRnV0dXJhOiBFcyBpc3QgenUgaG9mZmVuIGRhc3MgZGllc2VyIE5hbWUgZnIgZGFzIEdlc2FtdHdvaGwgdW5kIG5pY2h0IGZyIGRpZSBaYWhsIHVudGVyIGRlbSBTdHJpY2ggYmVpIEdld2lubiBpbiBGcmFua2VuIGRlciBqZXdlaWxpZ2VuIEthc3NlIHN0ZWh0LgpBbHNvIGlmIHlvdSBhcmUgbG9va2luZyBmb3IgYSByb3VuZCBjdXQgdGhhdCBpcyB0aGUgbW9zdCBjb21tb24gbWFrZSBzdXJlIHRoZXJlIGFyZSA4IGlkZW50aWNhbCB0cmlhbmdsZXMgaW4gdGhlIG1pZGRsZSB3aGVuIGxvb2tpbmcgZG93biBhdCB0aGUgc3RvbmUuIApFbmNvcmUgYXVqb3VyZCdodWkgdW4gbGVjdGV1ciBzb3VmZnJhbnQgZGUgcHJvc3RhdGl0ZSBtJ2EgZGVtYW5kIHMnaWwgdGFpdCBwb3NzaWJsZSBkZSBmYWlyZSBkZXMgc3VwcG9zaXRvaXJlcyBkZSBDb2xsYXJnb2wuIFNpIGwnb3JpZ2luZSBlc3QgaW5mZWN0aWV1c2UgKGV0IGxhIENCVSBwZXV0IHRyZSBuZ2F0aXZlIHNpIGwnaW5mZWN0aW9uIGVzdCBlbmZlcm1lKSBsJ3V0aWxpc2F0aW9uIGRlIGwnYXJnZW50IGNvbGxvZGFsIHBhciBsYSB2b2llIHJlY3RhbGUgcG91cnJhaXQgdHJlIHVuZSBzb2x1dGlvbiBwcmZyYWJsZSBhdXggYW50aWJpb3RpcXVlLCB2b2lyZSBuZXR0ZW1lbnQgcGx1cyBlZmZpY2FjZS4gCkthdHkgb2Z0ZW4gZm9sbG93ZWQgYSB2ZWdhbiBkaWV0IGFuZCBub3cgaXQgc2VlbXMgdGhhdCBsaWZlc3R5bGUgaXMgc3RyZXRjaGluZyB0byBoZXIgc2FydG9yaWFsIGNob2ljZXMgdG9vLCBhcyBoZXIgbG9vayBpcyBtYWRlIG9mIHZlZ2FuIGxlYXRoZXIuClR3byB5ZWFycyBhZ28gb25lIG9mIG15IHRlYWNoZXJzIGNsZWFuZWQgb3V0IGhpcyBjbG9zZXQgKHNvIGhlIHNheXMpIGFuZCBoYW5kZWQgbWUgYSBsYXB0b3AgYmFnLiBJbnNpZGUgd2FzIGEgQ29tcGFxIGxhcHRvcCB3aXRoIG9uZSBvZiB0aG9zZSB0cmFjayBiYWxsIG1pY2UgcnVubmluZyBXaW5kb3dzIDk1LiBIZSBzYWlkIGl0IG11c3QgYmVlbiBhdCB0aGUgYm90dG9tIG9mIGEgY2xvc2V0LCBhbmQgZ290IHBhY2tlZCB3aGVuIHdlIG1vdmVkIGludG8gb3VyIG5ldyBidWlsZGluZyAoaW4gYW5kIHNhdCBpbiBzYWlkIGJveCB1bnRpbCBoZSBmaW5hbGx5IGNsZWFuZWQgb3V0IHRoZSBib3ggMiB5ZWFycyBhZ28hLiAKSW4gY2VudHJhbCBTYXVkaSBBcmFiaWEgdGhlcmUncyBiZWVuIGEgbWFqb3IgY2hhbmdlIHdoZXJlIHBlb3BsZSBhcmUgbW9yZSBwcm9ncmVzc2l2ZSBub3cuIE5vcnRoZXJuIFNhdWRpIEFyYWJpYSBwZW9wbGUgYXJlIGxpa2Ugc291dGggbGl0ZS4uIApHcmVhdGVzdCBhbW9uZ3N0IGhpcyBzb2xkaWVycyBhcmUgdGhlIEFkZXB0dXMgS2VtYWx1cywgdGhlIEtlbWFsIE1hcmluZXMsIGJpbyBlbmdpbmVlcmVkIHN1cGVyIHdhcnJpb3JzLiBUaGVpciBjb21yYWRlcyBpbiBhcm1zIGFyZSBsZWdpb246IHRoZSBKZW5kYXJtZSBhbmQgY291bnRsZXNzIHBvbGljZSBmb3JjZXMsIHRoZSBldmVyIHZpZ2lsYW50IEFuYXlhc2EgTWFoa2VtZXNpIGFuZCB0aGUgQ0hQICAgcHJpZXN0cyBvZiB0aGUgQWRlcHR1cyBLZW1hbHVzIHRvIG5hbWUgb25seSBhIGZldy4gQnV0IGZvciBhbGwgdGhlaXIgbXVsdGl0dWRlcywgdGhleSBhcmUgYmFyZWx5IGVub3VnaCB0byBob2xkIG9mZiB0aGUgZXZlciBwcmVzZW50IHRocmVhdCBmcm9tIElzbGFtaXN0cywgQXBvaXN0cywgaGFsZiBUdXJrcyBhbmQgd29yc2UuLiAKR2VuZXJhbGx5IHRoZSBydWxlcyBhcmUgdGhlIHNhbWUgZm9yIEZyZWUgUG9rZXIgYW5kIHRoZSByZWFsIFBva2VyIEdhbWVzIHBsYXllZCBhdCB0aGUgTGl2ZSBDYXNpbm9zLiBJdCdzIHlvdXIgam9iIHRvIGdldCBhIHRob3JvdWdoIHVuZGVyc3RhbmRpbmcgb2YgdGhlc2UgcnVsZXMgYmVmb3JlIHlvdSBzdGFydCBwbGF5aW5nLCBidXQgc2luY2UgcGxheWluZyBpcyBmcmVlIHlvdSBjYW4gYWZmb3JkIHRvIGRvIHNvbWUgbGVhcm5pbmcgYXMgeW91IGdvIGFsb25nLiAKSXQgd2FzIGEgdmVyeSBuaWNlIHN1cnByaXNlIGZvciBtZS4gVGhhdCBzYWlkLCBJIGNhbiBvbmx5IGltYWdpbmUgdGhlIGdpZGRpbmVzcyBhbmQgc3VzcGVuc2lvbiBvZiAoZGlzICliZWxpZWYgd2hlbiB0aGUgbWFzcyBtYXJrZXQgcmVhZGVyc2hpcCBvZiBSb2JlcnQgSG9va2UgTWljcm9ncmFwaGlhIGdvdCBhIGxvb2sgZm9yIHRoZSBmaXJzdCB0aW1lIG9uIHdoYXQgdGhlIHNtYWxsIGNyZWVweSBjcmF3bGllcyB0aGF0IGxpdmVkIGFyb3VuZCB0aGVtIGxvb2tlZCBsaWtlIHVuZGVyIG1hZ25pZmljYXRpb24uIApZZXMsIHdlIGRvLiBBbGwgeW91IG5lZWQgdG8gZG8gaXMgZ2l2ZSB1cyBhIGNhbGwsIGdpdmUgdXMgeW91ciBsYXN0IG5hbWUgYW5kIGFmdGVyIGNvbmZpcm1pbmcgeW91IGhhdmUgYSByZXNlcnZhdGlvbiwgd2Ugd2lsbCBjb21lIGFuZCBwaWNrIHlvdSB1cC4gClBva2VyIEFsaWNlIGFjY2VwdGVkIGhpcyBvZmZlciBhbmQgYWZ0ZXIgYSBjaHVyY2ggd2VkZGluZywgdGhlIG5ld2x5d2VkcyBib3VnaHQgYSBuZWFyYnkgY2hpY2tlbiBmYXJtIGFuZCBzZXR0bGVkIGluIHRvIHJhaXNlIGEgZmFtaWx5LiBPdmVyIHRoZSBjb3Vyc2Ugb2YgdGhlIG5leHQgdGhyZWUgZGVjYWRlcywgdGhleSByYWlzZWQgY2hpY2tlbnMgYW5kIGhhZCBzZXZlbiBjaGlsZHJlbiAoZm91ciBib3lzIGFuZCB0aHJlZSBnaXJscykuIERlc3BpdGUgdGhlIHJlc3BvbnNpYmlsaXR5IG9mIHJ1bm5pbmcgYSBmYXJtIGFuZCByYWlzaW5nIGNoaWxkcmVuLCBBbGljZSBzdGlsbCBtYW5hZ2VkIHRvIHNsaXAgb3V0IGZvciBzb21lIHBva2VyIGFjdGlvbiBhIGZldyBuaWdodHMgZXZlcnkgd2Vlay4gCkhvd2V2ZXIgaXQgZGlkbid0IGJsdWUgc2NyZWVuIG9yIHR1cm4gb2ZmIHRoZSBjb21wdXRlciwgdGhlIHNjcmVlbiB3YXMganVzdCBibGFjayBhbmQgdW5yZXNwb25zaXZlLi4gCkFkYW0sIEphbmUsIEpvaG4sIHR3byBvdGhlciBmcmllbmRzLCBhbmQgbXlzZWxmIGRlY2lkZSBpdHMgdGltZSB0byBnby4gCkVkd2FyZCBIYWx2ZXJzb24gcGxlYWRzIG5vdCBndWlsdHkgdG8gYXR0ZW1wdGVkIG11cmRlcgpOaW5hIEtyYXVzIGFuZCB3aWxsIHRhbGsgYWJvdXQgaG93IG11c2ljIGFuZCBjb25jdXNzaW9uIGltcGFjdCBicmFpbiBoZWFsdGguIFJhdGhlciwgaWYgYW4gYW5pbWFsIGlzIHdvdW5kZWQgZm9yIGEgcHJvbG9uZ2VkIGFtb3VudCBvZiB0aW1lLCBpdCBib2R5IGdvZXMgaW50byBhIHN0YXRlIG9mIHNob2NrLiB0aGUgbXVzY2xlcykgYW5kIHNodW50cyBpdCB0b3dhcmRzIHRoZSBlc3NlbnRpYWwgb3JnYW5zLiBUaGlzIGNhdXNlcyB0aGUgbXVzY2xlcyB0byBzd2l0Y2ggZnJvbSBhZXJvYmljIHRvIGFuYWVyb2JpYyBtZXRhYm9saXNtLCBjcmVhdGluZyBsYWN0aWMgYWNpZC4gSXQgdGhpcyBwcm9jZXNzIHRoYXQgY2F1c2VzIHRoZSBjaGFuZ2UgaW4gZmxhdm9yLgpJdCBhbHNvIGhhcyBleGNlcHRpb25hbCB0ZWFjaGluZyBzdGFmZiB3aG8gYXJlIHdhcm0sIGNhcmluZywgZXh0cmVtZWx5IGtub3dsZWRnZWFibGUsIGV4cGVyaWVuY2VkLCBhbmQgcGFzc2lvbmF0ZS4gCkluIDE5NTcsIHRoZSBhdmVyYWdlIGFnZSBvZiBzdGFydGluZyB0b2lsZXQgdHJhaW5pbmcgd2FzIHN0aWxsIHVuZGVyIHRoZSBhZ2Ugb2Ygb25lIHllYXIsIDExIG1vbnRocywgYW5kIDkwJSBvZiBjaGlsZHJlbiB3ZXJlIGRyeSBkdXJpbmcgdGhlIGRheSBieSAyIHllYXJzLgpJbiB0aGUgc3R1ZHkgbWVudGlvbmVkIGFib3ZlLCB0aGUgTWF5byBDbGluaWMgcmVzZWFyY2ggZ3JvdXAgdGVzdGVkIHNhbXBsZXMgZnJvbSBibG9vZCBjb2xsZWN0ZWQgYmV0d2VlbiAxOTQ4IGFuZCAxOTU0IGZvciB0aGUgdGlzc3VlIHRyYW5zZ2x1dGFtaW5hc2UgYW50aWJvZHkgKGEgY2xhc3NpYyBibG9vZCB0ZXN0IGZvciBjZWxpYWMgZGlzZWFzZSkgYW5kIGlmIHBvc2l0aXZlLCB0aGUgZW5kb215c2lhbCBhbnRpYm9keSAoYWxzbyBhIGJsb29kIHRlc3QgZm9yIGNlbGlhYyBidXQgY29uc2lkZXJlZCBsZXNzIHJlbGlhYmxlIGF0IHRoaXMgd3JpdGluZykgYXMgd2VsbC4gVGhleSB0aGVuIGNvbXBhcmVkIHRoZXNlIHJlc3VsdHMgd2l0aCByZWNlbnQgc2FtcGxlcyBjb2xsZWN0ZWQgZnJvbSBpbmRpdmlkdWFscyB0aGUgc2FtZSBhZ2UgYXMgdGhlIGdyb3VwIHdobyBkb25hdGVkIHRoZWlyIGJsb29kIGluIHRoZSAxOTUwcyBhcyB3ZWxsIGFzIGEgZ3JvdXAgY3VycmVudGx5IHRoZSBzYW1lIGFnZSBhcyB0aGUgaW5pdGlhbCBwYXJ0aWNpcGFudHMuIFRodXMgdGhlIGFnZXMgYW5kIGJpcnRoIHllYXJzIHdlcmUgYm90aCBtYXRjaGVkLi4gClNoZSBvdmVyIDEwIG1vbnRocyBub3cgYW5kIGEgc3VwZXIgaGVhbHRoeSB3ZWlnaHQsIHZlcnkgaGFwcHksIGFuZCB3ZSBoYXZlIGFuIGF3ZXNvbWUgYm9uZC4gCkFsbCBtZXNzYWdlcyBhcmUgZGVsZXRlZCB3aXRoaW4gNyBkYXlzIGZvciB5b3VyIG93biBwcml2YWN5IHByb3RlY3Rpb24uIApUaGUgZ2FwIGJldHdlZW4gdGhlIHRvcCB0d28gaXMgbXVjaCB3aWRlciB0aGFuIHRoZSBnYXAgYmV0d2VlbiB0aGUgbmV4dCwgYW5kIHRoZSBnYXAgYmV0d2VlbiB0aGUgbGFzdC4gKEkgZG8gdGhpbmssIGJ1dCBhbSBub3QgMTAwJSkgdGhhdCB0aGV5IGFyZSBldmVuIG1pcnJvcmVkIEwgUi4gMSBwb2ludCAgc3VibWl0dGVkIDQgZGF5cyBhZ29Gb3IgZXhhbXBsZSwgZ3JvY2VyeSBzdG9yZXMgdXN1YWxseSBhY2NlcHQgZ2xhc3MgYm90dGxlcyBhbmQgY2FucyAobm8gcGxhc3RpYyBib3R0bGVzIHRoYXQgSSBhd2FyZSBvZikuIApZb3Ugd2lsbCBhbHNvIGZpbmQgdGhhdCBtYW55IG9mIHRoZXNlIGZyZWUgcG9rZXIgdG91cm5hbWVudHMgaGF2ZSBhIGh1Z2UgZmllbGQgb2YgcGFydGljaXBhbnRzLiBJdCdzIGNvbW1vbiB0byBoYXZlIDMwMDAgUGxheWVycyBpbiBhIGZyZWVyb2xsIG9mZmVyZWQgdG8gYWxsIHBsYXllcnMgb2YgYSBwb2tlciByb29tLiAKTHluZG9uIEIuIEpvaG5zb24gd2FzIGEgdmVyeSByYWNpc3QgbWFuLiAKTGFzdCB5ZWFyIHRoZXkgcmVsZWFzZWQgdGhlIFByaWRlIHNoaXJ0IGFuZCBoYWQgdGhlIExHQlQgcGFuZWwgYXQgUlRYIGFuZCBhbHNvIGhhZCBhbiBlcGlzb2RlIG9mIENhbXAgQ2FtcCB3aGVyZSB0aGV5IG1hZGUgYSAiYnVuZGxlIG9mIHN0aWNrcyIgam9rZS4gCkp1c3QgYmVjYXVzZSB5b3UgZGlkIG5vdCBjb25zaWRlciB0aGUgcmlnaHQgbW92ZSwgaXQgZG9lcyBub3QgbWVhbiB0aGF0IHlvdXIgb3Bwb25lbnQgd2FzIG5vdCBhd2FyZSBvciBpcyBpbmNhcGFibGUgb2YgZG9pbmcgc28uIApCdXQgc2hlIG1hZGUgaGVyIHByZXNlbmNlIGZlbHQgd2hlbiBzaGUga2lja2VkIG9mZiB0aGUgbmlnaHQgd2l0aCBhIHNlcXVpbmVkIGdyZWVuIGxlb3RhcmQgd2l0aCBtYXNzaXZlIHNob3VsZGVycyBhcyBzaGUgc2FuZyBoZXIgR3JhbW15IG5vbWluYXRlZCBoaXQgIlBva2VyIEZhY2UsIiB0aGVuIGJyb3VnaHQgb3V0IEVsdG9uIEpvaG4gYXMgdGhleSBtZWxkZWQgaGVyIHNvbmcgIlNwZWVjaGxlc3MiIGFuZCBoaXMgY2xhc3NpYyAiWW91ciBTb25nIiB0b2dldGhlciBpbiBhIHBlcmZvcm1hbmNlIHRoYXQgZmVhdHVyZWQgZHVlbGluZyBwaWFub3MsIGFuZCBnbGl0dGVyIHBhaW50ZWQgZmFjZXMuLiAKUHJlc3RvbiBpcyBhIHRvdWdoLCBsYW5reSwgNjEgeWVhciBvbGQgY2F0dGxlbWFuIGluIGplYW5zIGFuZCBhIHN0cmF3IFN0ZXRzb24gd2hvIHdvbiB0aGlzIHRvdXJuYW1lbnQgaW4gMTk3MiwgYW5kIHdobyBjb2xsZWN0ZWQgJDE0MiwwMDAgZnJvbSBhIHByZWxpbWluYXJ5IGV2ZW50IGhlcmUgbGFzdCB3ZWVrLCBlbm91Z2ggdG8gdGlkZSBoaW0gb3Zlci4gCiJNZSB0aW1lIiBjYW4gYmUgdmVyeSBiZW5lZmljaWFsLiAKRm9yIGFsbCBJIHByb3VkIG9mIG15IG5pZWNlIG5lcGhldyBhY2NvbXBsaXNobWVudHMsIEkgbW9yZSBwcm91ZCBvZiBteSBzb25zIFdoaWxlIEkgd291bGQgbW91cm4gdGhlIHBhc3Npbmcgb2YgbXkgbmllY2UvbmVwaGV3LCBpdCBiZSBub3RoaW5nIGNvbXBhcmVkIHRvIHRoZSBkZXZhc3RhdGlvbiBJIHdvdWxkIGZlZWwgYXQgbG9zaW5nIG9uZSBvZiBteSBib3lzLi4gCklzIHRoYXQgd2hhdCB5b3Ugd2FudD8gWW91IHR1cm4geW91ciBiYWNrIGF0IHlvdXIgcGVyaWwuLiAKSW4gMTk1OSwgUGFnZSBjb252ZXJ0ZWQgdG8gZXZhbmdlbGljYWwgQ2hyaXN0aWFuaXR5IGFuZCB3b3JrZWQgZm9yIEJpbGx5IEdyYWhhbSwgc3R1ZHlpbmcgYXQgQmlibGUgY29sbGVnZXMgaW4gTG9zIEFuZ2VsZXMgYW5kIFBvcnRsYW5kLCBPcmVnb24sIHdpdGggdGhlIGludGVudCBvZiBiZWNvbWluZyBhIG1pc3Npb25hcnkuIApPbmNlIHRoZSBkb2cgcG9wdWxhdGlvbiB0b3BzIHRoZSBodW1hbiBwb3B1bGF0aW9uLCB0aGUgYmFsYW5jZSBvZiBwb3dlciB3aWxsIHRpcCBpbiBmYXZvciBvZiBGaWRvLiBXZSBhbGwgc2VlbiB0aG9zZSBwYWludGluZ3Mgb2YgUm92ZXIgYW5kIExhc3NpZSBhbmQgdGhlaXIgZnJpZW5kcyBzaXR0aW5nIGFyb3VuZCBhIHBva2VyIHRhYmxlLiBGYW5jaWZ1bCwgeW91IHNheT8gSSBzYXksIHN0YXkgdHVuZWQuCkF0IHRoZSBQbGF6YSBIb3RlbCwgNDA1IFZpY3RvcmlhIFN0LiAKVGhlIGJlc3Qgd2F5IEkgY2FuIGRlc2NyaWJlIGthcm1hIGlzIHRoZSBzdW0gb2YgbXkgYWN0aW9ucyAoaW5jbHVkaW5nIG15IHdvcmRzIGFuZCB0aG91Z2h0cykgaW5mbHVlbmNlIG15IG93biBkZXZlbG9wbWVudCAoYW5kIHRoZXJlYnkgaW5mbHVlbmNlIHRoZSBjaXJjdW1zdGFuY2VzIG9mIHRob3NlIGFyb3VuZCBtZSkuIElmIG15IGludGVudGlvbiBhbmQgcHJhY3RpY2UgaXMgY29tcGFzc2lvbiwgSSBjYW4gY3JlYXRlIGEgbGlmZSB3aGVyZSBpdCBpcyBwcm9iYWJseSBlYXNpZXIgZm9yIG1lIHRvIGJlIGNvbXBhc3Npb25hdGUgYW5kIGpveWZ1bCwgYW5kIHByb2JhYmx5IGVhc2llciBmb3Igb3RoZXJzIGFyb3VuZCBtZSB0byBiZSBjb21wYXNzaW9uYXRlIGFuZCBqb3lmdWwuIFRoYXQgZG9lc24gYXV0b21hdGljYWxseSBtZWFuIEkgYmUgd2VhbHRoeSBvciBsdWNreS4gCk90aGVyIHdvcmRzLCBJIG1heSBiZSBsZXNzIG5haXZlIHRoYW4gSSB3YXMgYXQgdGhlIGJlZ2lubmluZyBvZiAiQ2xhc3MgV2FyZmFyZSwiIGJ1dCBJIGFuZ3JpZXIgdGhhbiBldmVyIGFuZCBtb3JlIGNvbnZpbmNlZCB0aGF0IFdFIG11c3QgZG8gc29tZXRoaW5nIGFib3V0IGl0Li4gClRoZSB0ZWNobm9sb2d5IGFjcXVpcmVzIGJyYWluIHNpZ25hbHMgdGhyb3VnaCBhbiBpbXBsYW50ZWQsIDk2IGNoYW5uZWwgZWxlY3Ryb2RlIGFycmF5LiBFYWNoIGNoYW5uZWwgZGV0ZWN0cyB2b2x0YWdlIHRoYXQgaXMgY29udGludW91c2x5IGdlbmVyYXRlZCBmcm9tIGFjdGl2ZSBuZXVyb25zIGluIGl0cyBuZWlnaGJvcmhvb2QuIApTbywgd2hhdCBkbyB0aGVzZSAibWlyYWNsZSBwcm9kdWN0cyIgYWN0dWFsbHkgZG8/IFRoZSBpZGVhIGlzIHRoYXQgdGhleSBwbHVtcCB1cCB0aGUgYWZmZWN0ZWQgYXJlYSB3aGVyZSBhcHBsaWVkLCBtYWtpbmcgcHJvYmxlbSBhcmVhcyBmaXJtZXIgYW5kIGxlc3Mgbm90aWNlYWJsZS4gRGVwZW5kaW5nIG9uIHRoZSBwcm9kdWN0LCBzb21lIHVzZXJzIGVuam95IGV4Y2VsbGVudCByZXN1bHRzLCB3aGVyZWFzIG90aGVycyBmZWVsIHRoYXQgdGhleSd2ZSB3YXN0ZWQgdGhlaXIgbW9uZXkuIFNvLCBkbyB5b3VyIHJlc2VhcmNoIGJlZm9yZSBkcm9wcGluZyBhbnkgY2FzaCBvbiBhIHBhcnRpY3VsYXIgbW9pc3R1cml6ZXIuIElmIGNlbGx1bGl0ZSBpcyB5b3VyIGNvbmNlcm4sIHRyeSB0byBpbmNvcnBvcmF0ZSBoZWFsdGh5IGVhdGluZyBhbmQgZXhlcmNpc2UgdG8gYWNoaWV2ZSB0aGUgYmVzdCBwb3NzaWJsZSByZXN1bHRzLiBBbHRob3VnaCB5b3UgY2FuJ3QgZXhwZWN0IHRvdGFsIG1pcmFjbGVzLCBtb3N0IGNyZWFtcyBzaG91bGQgaGVscCB0byBzb21lIGRlZ3JlZS4KVGhlIEpvdXJuYWwgY291bGQgbm90IHJlYWNoIEJhcmtzZGFsZSBmb3IgY29tbWVudC4gClJhYmlkUmF0RmluayAgNiBwb2ludHMgIHN1Ym1pdHRlZCAxMSBtb250aHMgYWdvClJldmVyc2UgaW1wbGllZCBvZGRzIGFyZSB0aGVyZSB0b28sIGluIGNhc2Ugb25lIG9mIHRoZSBvdGhlciBwbGF5ZXJzIGhhcyBhbiBBY2UgIG9yIFF1ZWVuIGhpZ2ggZmx1c2ggZHJhdywgb3IgaWYgdGhlIEhKIGhpdHMgYSBmdWxsIGhvdXNlLiBPbmUgb2YgdGhlIHBsYXllcnMgd2l0aCB0aGUgaGlnaGVyIGZsdXNoIGRyYXcgbWlnaHQgc3Bhenogb3V0LCByYWlzZSBldmVyeW9uZSBhbGwgaW4gb24gdGhlIGZsb3AsIGFuZCB5b3UgYmUgaW4gYSB0b3VnaCBzcG90LCBwb3NzaWJseSBkcmF3aW5nIGRlYWQuClRoYXQgd2FzIGEgcmVhbGx5IGludGVyZXN0aW5nIGFydGljbGUuIEp1c3QgdG8gYWRkIHRvIHRoZSBkaXNjdXNzaW9uLCBJIGhhdmUgdGFsa2VkIGFib3V0IHRoaXMgYmVmb3JlIHdpdGggYSBjb3VwbGUgb2YgcGVvcGxlLiBVbmZvcnR1bmF0ZWx5IEkgZG9uIGhhdmUgdG9vIG1hbnkgYmxhY2sgZnJpZW5kcywgSSBsaXZlIGluIGEgcHJlZG9taW5hbnRseSB3aGl0ZSBhcmVhLiAKU2hlIHRoZW4gdG9sZCBoaW0gaG93IHNoZSBoYWQgbG9zdCBhbGwgaGVyIGNhc2ggdG8gQmVybmllIE1hZGRvZmYsIHNheWluZzogJ01hZG9mZiB3YXMgdmVyeSBnb29kIGF0IHNlcGFyYXRpbmcgcGVvcGxlIGZyb20gdGhlaXIgbW9uZXkuIEJlY2F1c2UgaGUgd291bGQgbWFrZSB5b3UgYmVnIHRvIGdpdmUgaXQgdG8gaGltLgpUaGUgVlJNIGhlYXRzaW5rcyBhcHBlYXJzIHRvIG1ha2UgbmV4dCB0byBubyBkaWZmZXJlbmNlIGJhc2VkIG9uIHRoZXJtYWxzIEkndmUgc2Vlbi4gVGhlIGRlc2lnbmFyZSBoYXMgYSB0aW55IGZhbiBtb3VudGVkIGluc2lkZSB0aGUgSU8gc2hpZWxkIHNocm91ZC4gWW91J3JlIGFsbW9zdCBiZXR0ZXIgb2ZmIG1vdW50aW5nIGEgZmFuIHRvIGJsb3cgb3ZlciB0aGUgdG9wIGhlYXRzaW5rIHlvdXJzZWxmIGl0IHdvdWxkIGNvbGxlY3QgbGVzcyBkdXN0LCBhbmQgYmUgZWFzaWVyIHRvIGNsZWFuLgpBY3V0ZSBwYWluIGlzIGNhdXNlZCBieSBhbiBpbmp1cnkgdG8gdGhlIGJvZHkuIEl0IHdhcm5zIG9mIHBvdGVudGlhbCBkYW1hZ2UgdGhhdCByZXF1aXJlcyBhY3Rpb24gYnkgdGhlIGJyYWluLCBhbmQgaXQgY2FuIGRldmVsb3Agc2xvd2x5IG9yIHF1aWNrbHkuIFR1bW9ycyBpbnZhZGUgaGVhbHRoeSB0aXNzdWVzIGFuZCBleGVydCBwcmVzc3VyZSBvbiBuZXJ2ZXMgb3IgYmxvb2QgdmVzc2VscywgcHJvZHVjaW5nIHBhaW4uIENhbmNlciBwYWluIGNhbiBhbHNvIGJlIGFzc29jaWF0ZWQgd2l0aCBpbnZhc2l2ZSBwcm9jZWR1cmVzIG9yIHRyZWF0bWVudHMuIFNvbWUgcGh5c2ljaWFucyBjbGFzc2lmeSBjYW5jZXIgcGFpbiB3aXRoIGNocm9uaWMgcGFpbi4gWW91IG1pZ2h0IHRoaW5rIHRoaXMgc291bmRzIGxpa2VhIGdvb2QgdGhpbmcsIGJ1dCBpdCdzIGFjdHVhbGx5IGEgbGlmZSB0aHJlYXRlbmluZyBjb25kaXRpb24uIFBhaW4gc2VydmVzIGFzIGEgd2FybmluZyBhZ2FpbnN0IGluanVyeSwgc29wZW9wbGUgd2hvZG9uJ3QgZmVlbCBpdGNhbiBiZSBzZXZlcmx5IGluanVyZWRodXJ0IGJ5IHRoaW5ncyB0aGF0IG1vc3Qgb2YgdXMgd291bGQgcmVhY3QgcXVpY2tseSB0by4gRm9yIGV4YW1wbGUsIFJvbmFsZCBNZWx6YWNrIGFuZCBQYXRyaWNrIFdhbGwgZGVzY3JpYmUgYSBnaXJsIHdobyBnb3QgdGhpcmQgZGVncmVlIGJ1cm5zIG9uIGhlciBrbmVlcyBieSBjbGltYmluZyBvbmEgaG90IHJhZGlhdG9yLiBUaGVyZSB3YXMgbm8gc2lnbmFsIGZvciBoZXIgdG8gc3RvcC4gUmVzZWFyY2hlcnMgYXJlIHRyeWluZyB0byByZXByb2R1Y2UgdGhpcyBjb25kaXRpb24gYnkgZ2VuZXRpY2FsbHkgYWx0ZXJpbmcgbWljZSBzbyB0aGF0IHRoZXkgY2FuIHN0dWR5IHRoZSBnZW5ldGljIGNvbnRyaWJ1dGlvbnMgdG8gcGFpbiBwZXJjZXB0aW9uLgpUaGUgZXhjaXRlbWVudCBvZiB0aGUgZ2FtZSBsaWVzIGluIHRoZSBhbnRpY2lwYXRpb24gYW5kIHRoZSBwcmFjdGljZSBvZiB3YWdlcmluZyBza2lsbHMgYXMgdGhlIHRocmVlIGNvbW11bml0eSBjYXJkcyBhcmUgcmV2ZWFsZWQuIFRoZSB0ZXJtIGZvciB0aGUgNHRoIGFuZCA1dGggcG9rZXIgY2FyZCBpcyB0aGUgJ3R1cm4nIGFuZCB0aGUgJ3JpdmVyJyByZXNwZWN0aXZlbHkgYWZ0ZXIgcGxheWVycyBoYXZlIHBsYWNlZCB0aGVpciBiZXRzLgpJIHN1cmUgdGhvc2Uga2lkcyB3YW50IHRvIGZlZWwgcmVjcnVpdGVkIGFuZCB2YWx1ZWQuIApUaGUgUmVkIEhhd2sgKE1hZ2F6aW5lOiAxOTI1LCBCb29rOiAxOTI2KVRoZSBSZWQgSGF3ayBpcyB0aGUgd2Vha2VzdCBhbmQgc2hvcnRlc3Qgb2YgdGhlIHRocmVlIHNlY3Rpb25zIG9mIHRoZSB0cmlsb2d5LiBJdCdzIG5vdCBvbmx5IHRoZSBtb3N0IG92ZXJ0bHkgcmFjaXN0IHN0b3J5IG9mIHRoZSB0aHJlZSwgaXQncyB0aGUgbGVhc3Qgc2F0aXNmeWluZyBuYXJyYXRpdmVseSwgY29uc2lzdGluZyBsYXJnZWx5IG9mIGEgZGVyaXZhdGl2ZSBhZHZlbnR1cmUgdGhhdCBlbmRzIGFicnVwdGx5LiAKVGhlIG1pbmlzdHJ5IHNhaWQgdGhhdCBiZWZvcmUgdGhlIGxlc3NvbnMgc3RhcnQsIHRoZXJlIHdpbGwgYmUgYW50aSBkb3BpbmcgY2xhc3NlcyBmb3IgaGlnaGVyIGVkdWNhdGlvbiBpbnN0aXR1dGlvbnMgZm9yIHByb2Zlc3Npb25hbHMgaW4gdGhlIGZpZWxkcyBvZiBzcG9ydCBhbmQgbWVkaWNpbmUgd2lsbCBiZSBmb2xsb3dlZCBieSB0cmFpbmluZyBmb3IgZG9jdG9ycyBhbmQgbWVkaWNhbCBwZXJzb25uZWwsIGNvYWNoZXMgYW5kIGVtcGxveWVlcyBvZiBzcG9ydCBmZWRlcmF0aW9ucwpUaGluayBpdCB3YXMgc21hcnQgZm9yIGhpbSB0byBpZGVudGlmeSB0aGlzIG5pY2hlIGJlY2F1c2Ugd2hlbiBpdCBjb21lcyB0byB0YXR0b29zIHBlb3BsZSB3YW50IHNvbWV0aGluZyB1bmlxdWUuIEdpdmluZyBjb25zdW1lcnMgdGhpcyBmb3J1bSBhbmQgYWNjZXNzIHRvIHNvIG1hbnkgYXJ0aXN0cyBpcyBhIGdyZWF0IGlkZWEuIE15IGNvbmNlcm4gaXMgd2hldGhlciBpdCB3aWxsIGJlIGFibGUgdG8gZ2VuZXJhdGUgcmVwZWF0IGN1c3RvbWVycy4gCkZvciBNYWtlbW9kZWwsIGl0IHdhcyBhIHNlcmllcyBvZiBnYWxsZXJpZXMgb2YgbW9kZWxzLiBUaGV5IHdlcmUgbW9zdGx5IGhpZ2ggcXVhbGl0eSwgdW5jZW5zb3JlZCBzaG9vdHMgbGlrZSB3aGF0IHlvdSB3b3VsZCBzZWUgaW4gV2VzdGVybiBwb3JuIG9yIEpBVi4gCkFsbGUgYW5kZXJlbiBTcGllbGVyIG1zc2VuIGpldHp0IGRpZSAxNSBDZW50IGJyaW5nZW4sIHVtIGltIFNwaWVsIHp1IGJsZWliZW4uIkZvbGRlbiIgKG9kZXIgaW0gRGV1dHNjaGVuIGF1Y2ggd2Vnd2VyZmVuIiwgYXVzc3RlaWdlbiIsIHBhc3NlbiIpIGJlZGV1dGV0LCBkYXNzIGR1IGRlaW5lIEhhbmQgYXVmZ2lic3QuIER1IHdpcmZzdCBkZWluZSBLYXJ0ZW4gdmVyZGVja3QgYXVmIGRlbiBUaXNjaCB1bmQgYmlzdCBmciBkaWVzZSBSdW5kZSBmZXJ0aWcuIEtlaW4gR2VsZCBnZXdvbm5lbiwgbnVyIGVpbiBiaXNzY2hlbiB2ZXJsb3Jlbi4uIApIZSBub3QgYSBwYXJ0IG9mIHlvdXIgZnV0dXJlLCBhbmQgaGUgbm90IGdvaW5nIHRvIGdpdmUgeW91IGEgY2hhbmNlIGF0IGEgdGl0bGUgcnVuIHRoaXMgeWVhci4gCllvdSB3YW50IHRvIGtub3cgdGhlIHNlY3JldCB0byBzdWNjZXNzPyBUcnVkZWF1IHN1Y2NlZWRzIGJlY2F1c2UgaGUgZmlyc3QgcnVucyBhZHMgYmVmb3JlIGhlIHNldHMgcHJpY2VzISBIZSB3b3VsZCBzZWUgaG93IG1hbnkgY2FsbHMgcGVyIHRob3VzYW5kIHZpZXdlcnMgYW4gaW5mb21lcmNpYWwgZ2VuZXJhdGVkLCBnaXZpbmcgdGhlIHByaWNlIG9uIGhpcyBwcm9kdWN0YW5kIHRoZW4gaGUgc2V0IGhpcyBwcmljaW5nIGFjY29yZGluZ2x5IHRvIG1heGltaXplIGhpcyBwcm9maXRzLiAKRXhhY3RseSwgaGUgZG9lc24gd2FudCBjZW5zb3JzaGlwIHdoaWNoIGlzIHdoeSBoZSB3b24gZ2l2ZSB0aGUgbmFtZXMgb2YgQW50aWZhIG1lbWJlcnMgd2hvIGhhcmFzcyBoaW0uIApIYXJyb2QgcGhpbG9zb3BoeSB3YXMgc2ltcGxlOyBwbGF5IGJpZywgd2luIGJpZy4gSW4gbmluZSB5ZWFycyBzaGUgYmV0IGEgY29tYmluZWQgJDEwLjEgbWlsbGlvbiBhdCB0d28gSWxsYXdhcnJhIGNsdWJzLCBnZXR0aW5nICQ5LjEgbWlsbGlvbiBiYWNrLiBUaGUgcHJvYmxlbSB3YXMgc29tZSBvZiB0aGUgY2FzaCB3YXNuIGhlcnMgdG8gc3BlbmQuIEluIGZhY3QsICQ4MDAsMDAwIG9mIGl0IGJlbG9uZ2VkIHRvIGN1c3RvbWVycyBvZiB0aGUgZmFtaWx5IGJ1c2luZXNzLCBIYXJyb2QgUmVhbCBFc3RhdGUsIGFuZCB3YXMgYmVpbmcgaGVsZCBpbiB0aGUgYmFuayB1bmRlciB0d28gdHJ1c3QgYWNjb3VudHMsIGJvdGggb2Ygd2hpY2ggSGFycm9kIGhhZCBhbG1vc3QgdW5jaGVja2VkIGFjY2VzcyB0byBpbiBoZXIgcm9sZSBhcyB0aGUgb2ZmaWNlIG1hbmFnZXIuIApJIGNhbnQgYmUgYXJzZWQgdG8gc3BlYWsgdG8geW91IGFueW1vcmUuIApJbWFnaW5lISBIYXZpbmcgYSBiYWJ5IHNlY3JldGx5LCBnaXZpbmcgaXQgdG8gc29tZWJvZHkgeW91IGhhcmRseSBrbm93LCBjb21pbmcgaG9tZSBhbmQgZ2V0dGluZyBkcmVzc2VkIGFuZCBnb2luZyB3aXRoIHlvdXIgYm95ZnJpZW5kIC4gVG8gYSB3ZWRkaW5nLiIgU2FuZHJhIExhbmUgaXMgc21hbGwgYW5kIHNvbGlkLCB3aXRoIHNob3J0IGJsb25kZSBoYWlyLCBnb2xkIGhvb3AgZWFycmluZ3MgYW5kIGEgd2FyeSBleHByZXNzaW9uLiAKSkQ6IEl0IHdhcyBldmVyeXRoaW5nIHRvIG1lLiBJIHdhc24gdGhlIGJlc3QsIGJ1dCBpdCB3YXMgc28gbXVjaCBmdW4gdG8gcGxheS4gSSB0aGluayBJIHN0YXJ0ZWQgcGxheWluZyB3aGVuIEkgd2FzIGZvdXIgeWVhcnMgb2xkLiBJIHBsYXllZCBpbiBCb3VjaGVydmlsbGUuIEkgZGlkbiBwbGF5IGF0IHRoYXQgaGlnaCBhIGxldmVsLCB0aG91Z2guIEkgcGxheWVkIGRvdWJsZSBsZXR0ZXJzLCBtb3N0bHkuIFdlIGhhZCBzaXggZGlmZmVyZW50IHRlYW1zIGluIEJvdWNoZXJ2aWxsZSwgc28gd2UganVzdCBwbGF5ZWQgYWdhaW5zdCB0aGUgc2FtZSBndXlzIGFsbCB0aGUgdGltZS4gSSBwbGF5ZWQgZXZlcnkgc2luZ2xlIHllYXIgdW50aWwgSSB3YXMgMTguClN0aWxsIG5vdCBvdmVyIFBhcmUgcG9vPyBPciBoYXMgc2hlIHJ1aW5lZCB3b21lbiBmb3JldmVyIGZvciBoaW0/IFdoaWxlIEJlbmogYnJlYXRoZWQgaW4gdGhlIHNtb2tleWFzcyBjYXNpbm8gYWlyLCBnZXR0aW5nIHNvbWUgZnJlc2ggb3h5Z2VuIG91dHNpZGUgd2FzLi4gCjMwNCBwYWdlcyBkZSBwYXBpZXIgZGUgYmVsbGUgcXVhbGl0IChpbXByaW1lcyBlbiBFc3BhZ25lIDogcXVhbmQgZG9uYyBMYXJvdXNzZSByZWZlcmEgdCBpbCBkdSBtYWRlIGluIEZyYW5jZSA/KSwgcmVsYXRpdmVtZW50IHBhaXMgKDIsNSBjbSksIG1hc3NpZiwgc29saWRlLCBmYWl0IHBvdXIgZHVyZXIgY29tbWUgdG91dCBkaWN0aW9ubmFpcmUgcXVpIHNlIHJlc3BlY3RlLiBDZXV4IHF1aSBjb25uYWlzc2VudCBkaiBsZSBQZXRpdCBMYXJvdXNzZSBkZXMgcGxhbnRlcyBtZGljaW5hbGVzICgyMDA5KSBhdXJvbnQsIGdyb3NzbyBtb2RvLCB1bmUgaWRlIGRlIGxhIGJ0ZS4gRW4gY2VsYSwgb24gZXN0IHRycyBsb2luIGRlIGxhIGJpYmxlIGRlIEZlc3R5LCAgbGEgY291dmVydHVyZSBzb3VwbGUgZXQgZnJhZ2lsZSwgYXV4IHBhZ2VzIGJyb2NoZXMgY29uc3RpdHVlcyBkIHBhcGllciBzaSBmaW4gcXUgZGlyYWl0IGR1IHBhcGllciAgY2lnYXJldHRlLiAKVGhlIGdpcmwgaGFzIGl0IGluIGhlciBvd24gaW50ZXJlc3QgdG8gbWFrZSB0aGUgZXhwZXJpZW5jZSBhcyBlbmpveWFibGUgYXMgcG9zc2libGUsIHRvbywgYW5kIEkgY29nbml6YW50IG9mIHRpbWVzIHdoZXJlIHRoZSBnaXJsIHdhcyBoYXZpbmcgYXMgbXVjaCBmdW4gc2V4dWFsbHkgYXMgbWUuIFRoZXJlIGhhdmUgYmVlbiBvdGhlciB0aW1lcyB3aGVyZSBzaGUgaXMgcGF0aWVudGx5IHBsYXlpbmcgYWxvbmcgd2FpdGluZyBmb3IgbWUgdG8gZmluaXNoIChub3QgYXMgbmljZSkuIApJdCBwb3NzaWJsZSB0aGF0IHRoZSByaWdodCBjb3Vyc2Ugb2YgYWN0aW9uIGlzIHRvIGdvIEkgY2FuIHNlZSB5b3UgaGF2aW5nIHNvbWUgc29ydCBvZiBmcmVha291dCBoZXJlLiBNYXJyaWFnZSBpcyBhIHRlYW0gc3BvcnQgaW4gd2hpY2ggeW91IGFuZCBJIHdvcmsgdG9nZXRoZXIgdG8gc3RheSBhZmxvYXQuIApUaGF0LCBJIGp1c3Qgb2JzZXJ2ZWQsIGFuZCBub3RpY2VkIHRoYXQgSSB3YXMgYnJlYXRoaW5nLCBidXQgd2l0aG91dCB0cnlpbmcgdG8gbW9kdWxhdGUgaXQsIHdoaWNoIGNhbWUgbmF0dXJhbGx5IHNpbmNlIEkgaGFkIGp1c3QgbGVhcm5lZCB0aGF0ICJJIG5vdCB0aGUgb25lIGluIGNoYXJnZSBvZiBicmVhdGhpbmciIGFueXdheS4gClNhbG9uIHJldmVudWUgYXQgb25lIG9mIHRoZSBzdG9yZXMgYWNjb3VudGVkIGZvciBhYm91dCA2IHBlcmNlbnQgdG8gNyBwZXJjZW50IG9mIHRoZSBsb2NhdGlvbidzICQxMCBtaWxsaW9uIGluIHNhbGVzLiAKVGhlIEdPUCBpcyBub3QgbG9va2luZyBmb3IgY29tbW9uIGdyb3VuZCBoZXJlLCB0aGV5IGFyZSBub3QgZ29pbmcgdG8gInBsYXkgYnkgdGhlIHJ1bGVzIi4gCkRldmVsb3BzIG1vcmUgbWF0dXJlLCBzZW5zaWJsZSwgcmVhbGlzdGljIHRob3VnaHRzIGFuZCBhY3Rpb25zLiBJbnN0ZWFkIG9mIGZhbGxpbmcgaW4gbG92ZSB3aXRoIHRoZSBCbGFjayBTdGFsbGlvbiBpbiB0aGUgbW92aWUsIHRoZXkgbWF5IGZhbGwgaW4gbG92ZSB3aXRoIHRoZSBibGFjayBzdGFsbGlvbiBuZXh0IGRvb3IuClNpbmNlIHRoZSBwcm90b2NvbCBpcyBpbW1lbnNlbHkgbGltaXRlZCwgdGhlcmUgY2FuIGJlIGFueSBzb2x1dGlvbiB0byB0aG9zZSBwcm9ibGVtcy4gQ29sb3JpbmcgY29pbnMgYXJlIHBvc3NpYmxlLCBoZW5jZSBubyBmdW5naWJpbGl0eS4gVGhlcmUgaXMgbm8gY2hhbmNlIE5BTk8gaXMgZ29ubmEgYmUgYWRvcHRlZCBhcyB0cmFkaW5nIG1lYW4sIHdpdGggdGhvc2UgcHJvYmxlbXMgaW4gbWluZC4gCklzIHRoZXJlIGEgY2hlYXQgZm9yIE15U3BhY2UgVGV4YXMgaG9sZGVtIHBva2VyIGZvciBmcmVlIGNoaXBzClBhc3RldXIgZnVsbCBxdW90ZSAgICJJbiB0aGUgZmllbGQgb2Ygb2JzZXJ2YXRpb24sIGNoYW5jZSBmYXZvcnMgb25seSB0aGUgX3ByZXBhcmVkXyBtaW5kIiBpcyB0aGUgdXN1YWwgdHJhbnNsYXRpb24gICBpcyB0cnlpbmcgdG8gbWFrZSB0aGUgcG9pbnQgdGhhdCBzY2llbnRpc3RzIGFuZCBlbmdpbmVlcnMgZG9uIGdldCBsdWNreSBhdCBhIHRoaW5nIHVubGVzcyB0aGV5IGJlZW4gdHJhaW5lZCB0byBkbyB0aGF0IHRoaW5nLiBJdCBhIG5hcnJvd2VyIGJ1dCBzdHJvbmdlciBzdGF0ZW1lbnQuCiJ0aW1lIGlzIG1vbmV5IGFuZCBtb25leSBpcyB0aW1lIiBpcyBhIGh1Z2UgdmFsdWUgaW4gQ2hpbmVzZS4gSSdtIG1vcmUgdGhhbiBzdXJlIHRoZXkgY2FuIGxlYXJuIHByb3BlciBwb2tlciB0aW1lIHZhbHVlIG1vbmV5IHBvdCBvZGQvZXF1aXRpZXMuIEFuZCBpbiBhZGRpdGlvbiB0byBhIG1vbmV0YXJ5IHN5c3RlbSBwYXJhbGxlbCB0byB0aGUgV2VzdCwgZm9yIG51bWJlcnMvbnVtZXJvbG9neSwgdGhlIENoaW5lc2UgaGFzIHRoZWlyIG93biBDYWxsaWdyYXBoeSB3cml0dGVuIG51bWJlcmluZyBzeXN0ZW0gYmVmb3JlIG1vZGVybml6aW5nIHdpdGggQXJhYmljIG51bWVyYWxzIHRoYXQgc3VwZXJzZWRlZCB0aGUgUm9tYW4gbnVtZXJpYWxzLiBUTERSOyBUaGUgQ2hpbmVzZSBrbm93IG51bWJlcnMgYW5kIG1hdGgsIGJ1dCBqdXN0IGxpa2UgdG8geW9sbyBnYW1ibGUgZnJvbSBkb2luZyBzbyBtdWNoIG9mIGl0IGluIGJ1c2luZXNzLgpUaGUgQ2FudWNrcyB3aW5nZXIgaGFkIHNpeCBzaG90cyBhbmQgZWlnaHQgYXR0ZW1wdHMgVGh1cnNkYXkgYW5kIHdoZXRoZXIgaGUgcGxheWluZyB0aGUgbGVmdCBvciByaWdodCBzaWRlLCB0aGUgcmVzdHJpY3RlZCBmcmVlIGFnZW50IGlzIGxvb2tpbmcgbGlrZSBhIGdvb2QgZ2V0IGluIHRoZSBEZWNlbWJlciBzd2FwIGZvciBNaWNoYWVsIENhcmNvbmUuIEhlIGhhcyBuaW5lIGdvYWxzIGluIDM2IGdhbWVzIHdpdGggdGhlIENhbnVja3MgYSAyMSBnb2FsIHBhY2Ugb3ZlciBhIGZ1bGwgc2Vhc29uIGFuZCBpcyBxdWljayBlbm91Z2gsIGdvb2Qgb24gdGhlIHdhbGxzIGFuZCBwbGF5cyBpbiB0cmFmZmljLiAKV2hhdCBPblRoaW5ncyB0byBkb0Zvb2QgYW5kIERyaW5rRmFtaWx5IGFuZCBLaWRzTXVzaWMgYW5kIEdpZ3NUViBHdWlkZU1JQ0hBRUwgRml0enBhdHJpY2sgaGFzIGJlZW4gbmFtZWQgdGhlIGxhdGVzdCB3aW5uZXIgb2YgdGhlIEtlbHNvIEhpZ2ggQ2FtcHVzIERlY2FkZSBBd2FyZC4gTXIgRml0enBhdHJpY2sgd2FzIGF0IHRoZSBzY2hvb2wgZnJvbSAxOTg2IHRvIDE5OTAgYW5kIGhhcyBnb25lIG9uIHRvIGhhdmUgYSBzdWNjZXNzZnVsIGNhcmVlciBpbiB0aGUgcmFkaW8gaW5kdXN0cnkuIApKIE51dHIgSGVhbHRoIEFnaW5nIDIwMTIKIDMgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvWWVhaCwgdGhpcyBpcyBhIGhhcmQgb25lIGZvciBtZS4gSSBhbSBkZWZpbml0ZWx5IGdvaW5nIHRvIHVuZm9sbG93IHNvbWVvbmUgc2xpbmdpbmcgZml0IHRlYXMsIGJ1dCBpZiBpdCBhIHByb3RlaW4gcG93ZGVyLCBDQkQgb2lsLCBjbG90aGluZyBicmFuZCwgZXRjLiBXaGF0ZXZlci4gUG93ZXJsaWZ0aW5nICggYW5kIG1hbnkgY29tcGV0aXRpdmUgc3BvcnRzKSBnZXRzIGV4cGVuc2l2ZSBhbmQgdGhlIHBlb3BsZSB3aG8gYWN0dWFsbHkgaGF2ZSBhIG1hcmtldGFibGUgaW5zdGFncmFtIHRvIGF0dHJhY3Qgc3BvbnNvcnMgYXJlIHdvcmtpbmcgdGhlaXIgYXNzZXMgb2ZmIGRvaW5nIHRoYXQuIApTY29vcCBSZXZpZXcgb2YgQm9va3MgQnVncyBmb3IgS2lkcwpUaGlzIGlzIG5vdCBldmVuIGNsb3NlIHRvIGNvcnJlY3QsIHdob2V2ZXIgdHlwZWQgdGhpcyBpcyBub3Qgc21hcnQgb3Igc2ltcGx5IGRvZXMgbm90IGtub3cgcG9rZXIgcnVsZXMuIApCdXQgdGhlIE1vaGVnYW4gU3VuLCBsaWtlIGFsbCBOYXRpdmUgQW1lcmljYW4gY2FzaW5vcywgaXMgbG9jYXRlZCBvbiB0cmliYWwgbGFuZC4gVGhhdCBtYWtlcyBpdCBwYXJ0IG9mIGEgZnJlZSBhbmQgc292ZXJlaWduIG5hdGlvbi4gClNlZWluZyBhcyB0aGV5IGFyZWFsbCBvd25lZCBieSB0aGUgc2FtZSBjb21wYW55LCBpdCBzaG91bGQgY29tZSBhcyBubyBzdXJwcmlzZSB0aGF0IEFya2UsSmV0YWlyZmx5IGFuZCBUaG9tc29uIEFpcndheXMgaGF2ZSBpZGVudGljYWwgbGl2ZXJpZXMsIGFsYmVpdCB3aXRoIGRpZmZlcmVudCBicmFuZGluZy4gSSBsaWtlIHRoaXMgbGl2ZXJ5IGEgbG90OyBpdCBsb29rcyB2ZXJ5IHNtYXJ0LCBidXQgbm90IG92ZXJiZWFyaW5nLiAKT2xkIGd1eSBoYWQgQUtzIGFuZCB0aGUgb3RoZXIgZ3V5IGhhZCBLSy4uIApUaGVyZSBhcmUgbWFueSBzdG9yZXMgYm90aCBvbmxpbmUgYW5kIGluIGNvbW11bml0aWVzIGFyb3VuZCB0aGUgbmF0aW9uIHRoYXQgc3BlY2lhbGl6ZSBpbiBnYW1pbmcgc3VwcGxpZXMuIApXaGF0IGlmIFBhY3F1aWFvcyBzdWNjZXNzIGlzIGEgcmVzdWx0IG9mIGFuIGV4Y2VwdGlvbmFsIGRyaXZlIGluaGVyaXRlZCBmcm9tIGhpcyBiYWNrZ3JvdW5kLCBhbmQgbm90IHNvbWUgdHdvIGRheSB3YXNob3V0IGRlc2lnbmVyIGRydWc/ClByb3BhZ2FuZGEgd2lsbCBub3QgZXJhc2UgaHVuZHJlZHMgb2YgdGhvdXNhbmRzIG9mIHllYXJzIG9mIHdhbnRpbmcgdG8gYmUgYXJvdW5kIHlvdXIgb3duIHBlb3BsZS4gClRoYW5rIHlvdSBmb3IgYWRkaW5nIHRoYXQ7IEkgZGlkIGtub3cgdGhhdCBzb2NpYWwgd29ya2VycyBhcmUgZGlyZWN0bHkgZW1wbG95ZWQgYnkgREhTLiBCdXQgSSBuZXZlciBzZWVuIHRoZW0gYWN0dWFsbHkgdXNlZCBieSB0aGUgb3V0c291cmNpbmcgSSBiZWVuIGZhbWlsaWFyIHdpdGguIApUaGlzIEZyaWRheSwgd29tZW4gYnVzaW5lc3Mgb3duZXJzLCBjcmVhdGl2ZXMsIGFuZCBhbGxpZXMgd2lsbCBjb21lIHRvZ2V0aGVyIGZvciBhIGRheSBvZiBza2lsbHMgc2hhcmluZywgY29tbWVyY2UsIGFuZCBuZXR3b3JraW5nLiBUaGVuIENvdmVuIHdpbGwgaG9zdCBhIHNlcmllcyBvZiB3b3Jrc2hvcHMgYW5kIGZlZWRiYWNrIHNlc3Npb25zIHdoZXJlIHBlb3BsZSB3aWxsIHNoYXJlIGV4cGVyaWVuY2VzIGFuZCByZXNvdXJjZXMsIGFuZCBnaXZlIGFkdmljZS4gSW4gdGhlIGV2ZW5pbmcsIG92ZXIgNTAgd29tZW4gb3duZWQgYnVzaW5lc3NlcyB3aWxsIHNob3djYXNlIHRoZWlyIHdhcmVzIGF0IGEgbmlnaHQgbWFya2V0LiBDaGVjayBvdXQgcGlucyBmcm9tIENoZXJyeSBNb29uIFByZXNzLCBqb2luIHRoZSBGZW1pbmlzdCBCb29rIENsdWIsIGFuZCBzaG9wIGZvciBjbG90aGluZyBmcm9tIFRhbmRlbSBWaW50YWdlLCBDQUtFIFBsdXMgU2l6ZSBSZXRhaWwsIGFuZCBUcmFja0dpcmx6LiBUaGVzZSBldmVudHMgYXJlIG9wZW4gdG8gYWxsLCB3aXRoIGEgZm9jdXMgb24gd29tZW4sIGZlbW1lLCB0cmFucywgYW5kIG5vbiBiaW5hcnkgZW50cmVwcmVuZXVycy4gYXQgUGFyYWxsZWwncyBIb2xkZW4gUm9vbSAoMTQ1IEhvbGRlbiBTdC4gTi4sIE1pbm5lYXBvbGlzKS4gTWFyY2ggODsgRnJlZTsgYnJlYWtmYXN0IGlzICQxMDAgJDEyNS4gVGhlIENvdmVuLCAzMCBOLiAxc3QgU3QuLCBNaW5uZWFwb2xpczsgNjEyIDI1OSA3MzgzLiAgSmVzc2ljYSBBcm1icnVzdGVyCkkgd29yayBpbiBhIGhvc3BpdGFsLCBtYWtlIGl0IHZlcnkgY2xlYXIgdG8gaG9zcGl0YWwgc3RhZmYgdGhhdCBGREggaXMgdGhlIE9OTFkgb25lIHRvIGNvbWUgaW4gdGhlIGxhYm9yIHJvb20gYW5kIHRoYXQgeW91ciBtb20gbWF5IHRyeS4gVGhleSBjYW4gYmUgcmVhZHkgKHdpdGggYSB3YXJuaW5nIHRvIHNlY3VyaXR5IGp1c3QgaW4gY2FzZSBpdCBnZXRzIHVnbHkpLiBXZSBoYXZlIGhhZCBpbnN0YW5jZXMgbGF0ZSBhdCBuaWdodCB3ZXJlIHNvbWVvbmUgY2FtZSBpbiB0byBzdGFydCB5ZWxsaW5nIGFuZCBzZWN1cml0eSBzYWlkIHRoZXkgY291bGRuIGdvIGluIHVubGVzcyBpdCB3YXMgc3VwZXJ2aXNlZC4gCkl0IGlzIGJlbGlldmVkIHNvbWUgb2YgdGhhdCBtb25leSB3ZW50IHRvIEpvaG4gR2lsZXMgdG8gZGVmZWF0IGdhbWJsaW5nIGluIEFsYWJhbWEgc28gdGhhdCB3b3VsZG4ndCBiZSBjb21wZXRpdGlvbiB0byBnYW1ibGluZyBpbiBNaXNzaXNzaXBwaS4uIApJdCdzIG5vdCBsb2dpY2FsIGFuZCBpdCBkb2Vzbid0IG1ha2UgYW55IHNlbnNlIGJ1dCBpdCdzIGFsc28gZXhhY3RseSB3aHkgd2UgYXJlIGFsbCBpbiBkaXNiZWxpZWYuIApUaGUgZHVvIGZvdW5kIHNpZ25pZmljYW50IGV2aWRlbmNlIHRoYXQgcG9rZXIgcmVxdWlyZXMgc2tpbGwuIFBsYXllcnMgYXNzdW1lZCB0byBiZSBza2lsbGVkIGVhcm5lZCAzMCBwZXJjZW50IG9uIHRoZWlyIGludmVzdG1lbnQsIGNvbXBhcmVkIHRvIGFsbCBvdGhlciBwbGF5ZXJzLCB3aG8gbG9zdCAxNSBwZXJjZW50LiAKTWFueSBvdGhlciBwcm92aW5jZXMsIGluY2x1ZGluZyBTYXNrYXRjaGV3YW4sIFF1ZWJlYyBhbmQgTm92YSBTY290aWEgaGF2ZSB0YXJnZXRzIHRvIGNvbnRyb2wgcmVkIHRhcGUuIE1hbml0b2JhIHJlY2VudGx5IGp1bXBlZCB0byB0aGUgaGVhZCBvZiB0aGUgY2xhc3MgYnkgY3JlYXRpbmcgdGhlIG1vc3QgY29tcHJlaGVuc2l2ZSBtZWFzdXJlIG9mIHRoZSByZWd1bGF0b3J5IGJ1cmRlbiBpbiBOb3J0aCBBbWVyaWNhIGFuZCBsZWdpc2xhdGluZyBhIHJlZ3VsYXRvcnkgY2FwIGluIDIwMTcgKHR3byBydWxlcyBzY3JhcHBlZCBmb3IgZXZlcnkgbmV3IG9uZSBpbnRyb2R1Y2VkIHVudGlsIDIwMjEgYW5kIG9uZSBmb3Igb25lIGFmdGVyIHRoYXQpLgpBbmdyeUFzc0hlZGdlaG9nIHUKVGhlIHByb2R1Y2VycyB3YW50ZWQgdG8gc3RpY2sgdG8gYSBmb3JtYXQgd2hlcmUgdGhleSBzcGxpdCB0aGUgcGFpciB1cCAgIG9uZSB0byB0cmFpbiBpbiB0aGUgY2l0eSwgb25lIGluIHRoZSBjb3VudHJ5LiBObyBjb3VudHJ5IHR1cm5lZCBkb3duIHRoZWlyIHJlcXVlc3QgdG8gZmlsbSwgYWx0aG91Z2ggc29tZSBoYWQgdG8gYmUgYXZvaWRlZCBiZWNhdXNlIG9mIGNpdmlsIHVucmVzdC4gCkkgcm9vdGVkIHNvIGhhcmQgZm9yIHRoaXMgZ3V5IHdoZW4gdGhlIEZhbGNvbnMgbGV0IGhpbSB0cnkgb3V0LiBJIGtuZXcgaXQgd2FzIGJleW9uZCBhIGxvbmcgc2hvdCBiZWNhdXNlIGhlIGxvc3Qgc28gbXVjaCB2YWx1YWJsZSB0aW1lIGhlIGNhbiBnZXQgYmFjay4gCkdvZCBjbGVhcmx5IHN0YXRlcyB0aGF0IGl0IGlzIG9rYXkgdG8gb3duIGh1bWFucyBhcyBwcm9wZXJ0eSwgd2hpY2ggY2FuIGJlIHBhc3NlZCBkb3duIHRvIHlvdXIgaGVpcnMuIApBcyBpdCBzdGFuZHMsIE91dGxhdyBpcyBzdXBlciByZWxpYW50IG9uIHRoZSBwYW50aGVvbiB0cmlua2V0IHByb2NzLiBJZiB5b3UgZG9uIGhhdmUgYSBsb3Qgb2YgcGVvcGxlIGluIHlvdXIgZ3JvdXAgd2VhcmluZyB0aGVpciB0cmlua2V0cywgYW5kIGEgY291cGxlIG9mIGFtYW4gd2lsZGNhcmRzLCB5b3UgcHJvYmFibHkgbm90IGdvaW5nIHRvIGJlIGNvbXBldGl0aXZlLgpNZWFud2hpbGUsIE1ldHJvIFBvbGljZSBkZWxpdmVyZWQgdGhlIG5ld3MgdG8gYSBmcmFudGljIFN3YW5zb24uIEF0IHRoZSBhZHZpY2Ugb2YgaW52ZXN0aWdhdG9ycywgU3dhbnNvbiBwbGF5ZWQgaWdub3JhbnQgYW5kIGNvbnRpbnVlZCBzZW5kaW5nIGhlciBkYXVnaHRlciB0ZXh0IG1lc3NhZ2VzIGVhY2ggbW9ybmluZyBhbmQgbmlnaHQsIGxpa2Ugc2hlIGhhZCBiZWVuIGRvaW5nIGZvciBtb250aHM6Ck90aGVyIGludGVybmF0aW9uYWwgb3BlcmF0b3JzIGFyZSBhZ2FpbiB0YXJnZXRpbmcgTGFzIFZlZ2FzIGFzIHBhcnQgb2YgdGhlaXIgZ3Jvd3RoIHN0cmF0ZWdpZXMgd2l0aCBiaWcgbXVsdGkgdXNlIHByb2plY3RzLiBGdXJ0aGVyIG5vcnRoIG9uIHRoZSBTdHJpcCwgTWFsYXlzaWFuIGRldmVsb3BlciBHZW50aW5nIEdyb3VwIGJyb2tlIGdyb3VuZCBsYXN0IHllYXIgb24gYSAkNGJuIENoaW5lc2UgdGhlbWVkIGNhc2lubyByZXNvcnQsIGF0IGEgbmVhcmx5IDM2IGhlY3RhcmUgc2l0ZSB0aGF0IGhhZCBzYXQgaWRsZSBzaW5jZSBBdWd1c3QgMjAwOC4gTmV4dCBkb29yLCBBdXN0cmFsaWEncyBDcm93biBSZXNvcnRzIGFyZSBidWlsZGluZyBhbiBleHBhbnNpdmUgbmV3IHByb3BlcnR5LgpIZSBtYWtlcyB0b2FzdCBhbmQgZXZlcnlvbmUgaW4gdGhlIGVudGlyZSB3b3JsZCBsb3NlcyB0aGVpciBmdWNraW5nIG1pbmRzLiBUaGVuIGhlIGZhbGxzIGluIGxvdmUgd2l0aCBhbm90aGVyIGdpcmwgdGhhdCBldmVuIGhvdHRlciBidXQgd29uIHRydXN0IGhlciB3aXRoIGhpcyBnZW5pdXMgdG9hc3QgcmVjaXBlLiAKVGhlIG1pbmRzZXQgaW4gQ2hpbmEgaXMgcm9vdGVkIGluIGl0cyBDb21tdW5pc3QgcGhpbG9zb3BoeSB3aGVyZSAidGhlIGNvbmNlcHQgb2YgcHJvcGVydHkgaXRzZWxmIGRpZG4ndCBleGlzdCBmb3IgYSBsb25nIHRpbWUsIiBzYWlkIEdvbGQuICJOb3csIG1vc3QgcGVvcGxlIGRvIGZpbmFsbHkgdW5kZXJzdGFuZCBpbnRlbGxlY3R1YWwgcHJvcGVydHksIGJ1dCBpdCBkb2VzIHJlcXVpcmUgYSBjdWx0dXJhbCBzaGlmdC4gCkdvdCBpbnRvIGh5cGVyIGRyaXZlIEkgdGhpbmsgdGhhdCBpdCB3YXMgaW1wb3NzaWJsZSBmb3IgdGhpcyBjb3VudHJ5IHRvIGJlIGRlZmVhdGVkIGdpdmVuIGl0cyBwb3B1bGF0aW9uLCB3b3JrZm9yY2UsIGluZHVzdHJpYWwgY2FwYWNpdHksIHJhdyBtYXRlcmlhbHMsIGFuZCBvZiBjb3Vyc2Ugc2NpZW50aWZpYyBzdXBlcnN0cnVjdXRyZS4gCk1lYXN1cmUgYW5kIGFkZCAxMCAyMCBjbSBkZXBlbmRpbmcgb24gaG93IG11Y2ggeW91IHdhbnQgdG8ganVtcCBhbmQgeW91IGhhdmUgdGhlIGhpZ2h0IGEgYmFyIGZvciB5b3Ugc2hvdWxkIGJlIGluLiAKU2hlIHByb2JhYmx5IGFscmVhZHkgaXMgKG9yIHdpbGwgc29vbikgcGVybWFuZW50bHkgbW92ZWQgaW4gd2l0aCBoaW0sIGFuZCBldmVudHVhbGx5IGhlIGFubm91bmNlIHRoYXQgaGltIGFuZCBoaXMgZXggYXJlIGJhY2sgdG9nZXRoZXIsIGVuZ2FnZWQsIHByZWduYW50IGFnYWluIHdpdGggYSBzZWNvbmQgY2hpbGQsIGFuZCBldGMuIEFuZCBPcCB3aWxsIHN0aWxsIGJlIHdhaXRpbmcgYXJvdW5kIGZvciBoaW0gdG8gImNvbWUgYmFjayIuIEFwcGFyZW50bHksIGRlc3BpdGUgZXZlcnkgb3RoZXIgYmxhcmluZyBvYnZpb3VzIHJlZCBmbGFncywgdGhpcyBpcyBlbm91Z2ggdG8gY29udmluY2Ugc29tZW9uZSB0byBzdGljayBhcm91bmQuLiAKWWVhaCB0aGUgd2VhdGhlciB3YXMgcHJldHR5IGdvb2QgYWxsIHRoaW5ncyBjb25zaWRlcmluZy4gTGFzdCB5ZWFyIGFmdGVyIGZpbmlzaGluZyBhbmQgc3RhcnRlZCB3YWxraW5nIEkgbmVhcmx5IGZyb3plLiBMZXQgaG9wZSB0aGUgaW5qdXJpZXMgd29uIGNvbWUgYmFjayBhbmQgb250byB0aGUgbmV4dCByYWNlIQpOb25lIG9mIHVzIHdvdWxkLiAKVGhleSBhbHNvIGFsbG93IHBsYXllcnMgdG8gYnJ1c2ggdXAgb24gdGhlaXIgc2tpbGxzLCB3aGlsZWNvbXBldGluZyBhZ2FpbnN0IHBva2VyIGVudGh1c2lhc3RzIGZyb20gYWxsIG92ZXIgdGhlIHdvcmxkLiBGb3IgcmVhbCBUZXhhcyBIb2xkZW0gZ2FtZXMsIHlvdSBjYW4gdmlzaXQgeW91ciBuZWFyZXN0Y2FzaW5vLiAKVW5kIENhcmxvcyBmcmV1dGUgc2ljaCwgZXIgaGF0dGUgaWhyZW4ga3VyemVuIFNlZWxlbmthbXBmIGdlbmF1IGdlc3BydCwgdW5kIHdlaWRldGUgc2ljaCBhbiBpaHJlciBTY2hhbS4uIAoza2luZHNvZnNhbHQgIDAgcG9pbnRzICBzdWJtaXR0ZWQgMTggaG91cnMgYWdvClNvdXRoIFN1ZGFuLiBOaWNhcmFndWEuIEhhaXRpLiAKQ29yZ2lzIHJhcmVseSBzaG93IHVwIGluIHNoZWx0ZXJzLCBhbmQgd2hlbiB0aGV5IGRvLCB0aGUgc3RhZmYgd2lsbCB1c3VhbGx5IHRyeSB0byBnaXZlIHRoZW0gdG8gYSBjb3JnaSByZXNjdWUgb3IgYW4gZXhwZXJpZW5jZWQgY29yZ2kgb3duZXIuIApBYm91dCB5b3VyIGxvYW4sIHRoZSBtb3J0Z2FnZSBwcm9jZXNzLCBjbG9zaW5nIGV0Yy4gClRoZSBMaWJlcmFsIERlbW9jcmF0cyBpbiBCcml0YWluIGFyZSB0YWtpbmcgYWltIGF0IGFkdmVydGlzZXJzIHdobyBhaXJicnVzaCBwaG90b3MgdG8gYSBwZXJmZWN0aW9uIHVuYXR0YWluYWJsZSBpbiB0aGUgd29ybGQgb2YgcmVhbCBib2RpZXMuIEpvIFN3aW5zb24gYW5kIG90aGVyIG1lbWJlcnMgb2YgaGVyIHBhcnR5IGFyZSBjYWxsaW5nIGZvciBhIGJhbiBvbiB0aGUgdXNlIG9mIGFpcmJydXNoZWQgcGhvdG9ncmFwaHMgaW4gYWR2ZXJ0aXNlbWVudHMgYWltZWQgYXQgY2hpbGRyZW4gdW5kZXIgMTYgYW5kIGEgd2FybmluZyBvbiBhbGwgYWlyYnJ1c2hlZCBhZHZlcnRpc2VtZW50cyBzbyB0aGF0IGNvbnN1bWVycyB3aWxsIGtub3cgdGhlIGV4dGVudCBvZiB0aGUgYWx0ZXJhdGlvbi4uIApQZXJoYXBzIHlvdSBjb3VsZCBzdWJwb2VuYSBiYW5rIHJlY29yZHMgYXMgcGFydCBvZiBkaXNjb3ZlcnkgKGxpdGlnYXRpb24pIHRoYXQgbWlnaHQgc2hvdyBtb250aGx5IGRlcG9zaXRzIGJlZ2FuIG9uIGEgY2VydGFpbiBkYXRlIGFuZCB3ZXJlIGZvciB0aGUgc2FtZSBhbW91bnQ/IEJ1dCBpZiB0aGUgcGF5bWVudHMgYXJlbiBiZWluZyBkZXBvc2l0ZWQgaXQgb2J2aW91c2x5IGJlY29tZXMgbW9yZSBkaWZmaWN1bHQuIAoxOCksIFNjb3R0IFNlaXZlciAoR1BJIE5vLiAKSXQgY2FuIGJlIHB1dCBsaWtlIHRoaXM6IHRoZSBDYXBzIGFyZSBpbiBhIGRlZXAsIGRlZXAgaG9sZSwgYW5kIHRoZXkgaGF2ZSBhIHNob3ZlbC4gVGhleSBjYW4gZWl0aGVyIGRpZyB0aGVtc2VsdmVzIG91dCwgb3IgcHVsbCBpbiB0aGUgZGlydCBvbiB0aGVpciBoZWFkcyBhbmQgYnVyeSBhIHNlYXNvbiB0aGF0IGhhcyB3aGlwc2F3ZWQgYmV0d2VlbiBicmlsbGlhbnQgcGVyZm9ybWFuY2VzIGFuZCBiYWZmbGluZ2x5IGJhZCBvbmVzLgpDJ2VzdCBsZSBtbWUsIG1jb25uYWlzc2FibGUsIHF1aSBqb3VlIHVuIEh5ZGUgZGUgcGx1cyBlbiBwbHVzIHJhdmFnIGV0IG1vbnN0cnVldXggYXUgZmlsIGRlcyB0cmFuc2Zvcm1hdGlvbnMgLCB0ZXJyb3Jpc2FudCBsaXR0cmFsZW1lbnQgTWlyaWFtIEhvcGtpbnMsIGxhIHRlbnRhdHJpY2UsIGQndW4gc2ltcGxlIHJlZ2FyZCwgZXQgZmluaXNzYW50IHBhciBsJ3RyYW5nbGVyIGRhbnMgdW4gcmxlIHF1YXNpIHNleHVlbC4gCkFmdGVyIGEgcmVjZW50IHJlcG9ydCBsaW5rZWQgdGhlIHVzZSBvZiBldmVyeWRheSBwcm9kdWN0cyBzdWNoIGFzcGxhc3RpY3dyYXAsIHBsYXN0aWMgd2F0ZXIgYm90dGxlcywgYW5kIGZvb2QgYWRkaXRpdmVzIHRvIGV2ZXJ5dGhpbmcgZnJvbSBvYmVzaXR5IGFuZCBkaWFiZXRlcyB0byBob3Jtb25hbCBhYm5vcm1hbGl0aWVzIGluIGNoaWxkcmVuLCBJIGRlY2lkZWQgdG8gcmV2aWV3IHRoZSBzdHVkaWVzIHB1Ymxpc2hlZCBpbiB0aGUgbGFzdCBjb3VwbGUgb2YgeWVhcnMgaW4gdGhlIG1lZGljYWwgbGl0ZXJhdHVyZSB0byBzZWUgZXhhY3RseSB3aGF0IHNjaWVuY2Ugc2F5cyByZWdhcmRpbmcgdGhlIGVmZmVjdCBvZiB0aGUgZW52aXJvbm1lbnQgb24gb3VyIGhlYXJ0IGFuZCBib2RpZXMuIApUaGUgb2J2aW91cyBkb3VibGUgc3RhbmRhcmQgdGhhdCBKZXN1cyB0YXVnaHQgd2FzIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gZ29vZCBhbmQgZXZpbC4gWW91J3JlIGp1c3QgbG9va2luZyBpbiB0aGUgbWlycm9yIEFuZCBzZWVpbmcgeW91cnNlbGYgd2hlbiB5b3UgbG9vayBhdCBtZS4gV2hlbiBhIHdvbWFuIHR1cm5zIHNvbWVvbmUgZG93biBhdCB0aGUgYmFyLCB0aGV5IHNob3VsZCB0YWtlIGl0IGFzIHRoZWlyIGN1ZSB0byBsZWF2ZS4gQSBTb2NpbyBOZXVyb2xvZ2ljYWwgUGVyc3BlY3RpdmUgSXQgY2FuIGJlIHJlYXNvbmFibHkgYXJndWVkIHRoYXQgdGhlIGxhcmdlciBjdWx0dXJhbCBub3JtcyBhbmQgdHJhZGl0aW9ucyBmb3N0ZXIgdGhlIGRpc3Jlc3BlY3Rpbmcgb2Ygd29tZW4uIEFsbCB5b3UgbmVlZCB0byBkbyBpcyB0byBUdXJuIGJhY2sgdGhlIHdvcmRzIHlvdSBzYXkgdG8gbWUgQW5kIHNheSB0aGVtIHRvIHlvdXJzZWxmIFRvIGtub3cgdGhlIHRydXRoLiBJZiBJIHdlcmUgcnVubmluZyBUaGUgVmlldywgSSdkIGZpcmUgUm9zaWUuIFdoZW4gdGhlIGNoaWxkIHJlcGVhdGVkbHkgc2Fzc2VzLCBuZWdhdGVzLCBhbmQgZGlzb2JleXMgaGlzIE1vbSwgZG9lcyB0aGF0IG1pcnJvciBiZWhhdmlvcnMgbW9kZWxlZCB3aXRoaW4gdGhlIGZhbWlseSBhbmQgY3VsdHVyZSAsIG9yIGlzIHRoYXQgbW9yZSBhIGNhdXNlIG9mIGZ1dHVyZSBiZWhhdmlvcnMgZ2VuZXJhbGl6ZWQgdG8gc29jaWFsIHN0eWxlIGFuZCBwZXJwZXR1YXRpbmcgdGhlIGRpc3Jlc3BlY3QgZm9pc3RlZCB1cG9uIHdvbWVuPyBMaXN0ZW4gdG8sIHVuZGVyc3RhbmQsIGFuZCB0cnkgdG8gaGVscCB0aGUgc2l0dWF0aW9uLiBUaGlzIGhhcyBiZWVuIHNob3duIG92ZXIgbWFueSBkZWNhZGVzIHdpdGggbWFueSB0aG91c2FuZHMgb2YgaW5kaXZpZHVhbHMuIEF0IDg6MDAgcG0sIFBhbWVsYSdzIGRvb3JiZWxsIHJpbmdzLiBZb3UgbWF5IG5vdCBiZSBhYmxlIHRvIGFjdHVhbGx5IGVtcGF0aGl6ZSB3aXRoIHNvbWVvbmUsIGJ1dCB5b3UgY2FuIGFsd2F5cyB0YWtlIGEgcG9zaXRpb24gb2YgcmVzcGVjdCBmb3IgdGhlbS4gSG93ZXZlciwgdGhlcmUgaXMgYSBsYXJnZXIgYW5kIHN1YnRsZXIgY29udGV4dCB0aGFuIHRoZSBsZWdhbCBkZWZpbml0aW9ucyB0aGF0IGNvbnN0aXR1dGUgYSB2aW9sYXRpb24uIEhvcGUgdGhhdCB5b3UgaGl0IG9uIHRoZSBqdXN0IHRoZSByaWdodCBjb21iaW5hdGlvbiB0byBnZXQgaGltIHRvIGZhbGwgaW4gbG92ZSBhbmQgc3RheSB3aXRoIHlvdSBmb3JldmVyLgpPbmNlIHRoZSBzZXJ2ZXIgaXMgYm9vdGVkLCB0aGUgYm9vdCBkaXNrIGlzIGJhcmVseSB0b3VjaGVkIHNvIHJlYWQvd3JpdGUgc3BlZWQgaXMgbm90IGEgYmlnIGZhY3RvciBhdCBhbGwuIApBcmNoaWUgRmlyZSBMYW1lIERlZXIKTWNrZWVoZW4ncyBjaGlwIHN0YWNrIG1vcmUgdGhhbiBkb3VibGVzIHRoYXQgb2YgSXNyYWVsJ3MgWnZpIFN0ZXJuIChHUEkgTm8uIApUaGF0IHNhaWQsIGhhdmluZyBmYWxsZW4gNDAgcGVyY2VudCBpbiBDMy9DNyB2cy4gVGhlIG9wZW5pbmcgd2Vla3Mgb2YgaXRzIGZyZXNobWFuIHNlYXNvbiwgIlRoZSBHb29kIERvY3RvciIgaXNuJ3QgZXhhY3RseSBsaXZpbmcgdXAgdG8gYnV5ZXJzJyBleHBlY3RhdGlvbnMuIApXaW5lIFN0b3BwZXJKb2huIGFuZCBOaW5hIENhc3NpbHMgb25jZSBhZ2FpbiBmcm9udGVkIHRoZWlyIGVpZ2h0aCBhbm51YWwgVGFzdGUgdGhlIFdvcmxkIEdhbGEgYmVuZWZpdGluZyBDYW1ib2RpYSBBbmdrb3IgQ2hpbGRyZW4gSG9zcGl0YWwuCkxvb2sgdXAuIEZlbWFsZSBneW0gdGVhY2hlciBpcyB0aGVyZSB3aXRoIHRoZSBnaXJscyBiZWNhdXNlIHNoZSB3YXMgdHJ5aW5nIHRvIGdldCB0aGVtIGJhY2sgdG8gdGFzay4gSSBzYWlkIGl0IGFsbCBsb3VkIGVub3VnaCB0aGV5IGNvdWxkIGhlYXIuIEdvdCBhIHRyaXAgdG8gdGhlIHByaW5jaXBhbCBvZmZpY2UgYW5kIGEgbGVjdHVyZSBhYm91dCBpbmRlY2VudCBleHBvc3VyZS4KSSB0b29rIGEgMTAlIHBheSBjdXQgYW5kIEkgY291bGRuIGhhdmUgYmVlbiBoYXBwaWVyLiBNeSBjb3dvcmtlcnMgYXJlIGFsbCBzbWFydCwgdGhleSBnZXQgYSBsb3QgZG9uZSwgYW5kIGFyZSBmb2N1c2VkLiAKV2lsZGNhdGRhbmNlcjI0IHUKVGhlIGF1ZGl0aW9uaW5nIGlzIGEgcmVhbGx5IGdvb2QgZmlyc3Qgc3RlcC4gQ29tbXVuaWNhdGluZyB3aXRoIG90aGVycyBpcyBhbGwgYWJvdXQgbWFraW5nIHNtYWxsIGNvbm5lY3Rpb25zIHdpdGggb3RoZXJzIGFuZCBncm93aW5nIHRoYXQgcmVsYXRpb25zaGlwIG92ZXIgdGltZS4gVGhlIGZpcnN0IHRpbWUgeW91IG1lZXQgcGVvcGxlIHlvdSBjYW4gYXNrIGFib3V0IHRoZSByb2xlIHRoZXkgYXVkaXRpb25pbmcgZm9yLCB3aHkgdGhleSBjaG9vc2UgdGhhdCByb2xlLCBob3cgbG9uZyB0aGV5IGJlZW4gaW4gYWN0aW5nIGJhc2ljYWxseSBhbGwgY29udGV4dCBkZXBlbmRlbnQgcXVlc3Rpb25zLiBJZiB5b3UgZ2V0IGEgcGFydCBhbmQgc3RhcnQgcmVoZWFyc2luZyB0b2dldGhlciB0aGVuIHlvdSBjYW4gZ28gZGVlcGVyIHdpdGggdGhlIHBlcnNvbmFsIHF1ZXN0aW9ucy4gWW91IGNhbiBqdXN0IHN0YXJ0IGFza2luZyBmb3IgcGVyc29uYWwgYWR2aWNlIHRoZSBmaXJzdCBkYXkgeW91IG1lZXQgc29tZW9uZSwgb3Igd2hlbiB0aGUgZnJpZW5kc2hpcCBpcyBzdGlsbCB2ZXJ5IGNhc3VhbC4gQXNraW5nIHBlb3BsZSBhYm91dCB0aGVtc2VsdmVzIGlzIGFuIGFtYXppbmcgd2F5IHRvIG1ha2UgaW5pdGlhbCByZWxhdGlvbnNoaXBzLCBidXQgdG8gZGV2ZWxvcCB0aGVtIGl0IHRha2VzIG11bHRpcGxlIG1lZXRpbmdzIGFuZCB0aW1lLiBKdXN0IGJlIHN1cmUgeW91IHJlYWQgdGhlaXIgY3VlcyBhbmQgbWFrZSBzdXJlIHRoZXkgY29tZm9ydGFibGUgdGFsa2luZy4gSG9uZSBpbiBvbiB0aGUgcGVvcGxlIHdobyBhc2sgcXVlc3Rpb25zIGJhY2sgYW5kIGtlZXAgZm9jdXNpbmcgb24gdGhvc2UgcmVsYXRpb25zaGlwcy4gSXQgYSBza2lsbCB5b3UgY2FuIGRldmVsb3AuCkF0IGEgY2VydGFpbiBwb2ludCBJIHRoaW5rIG1vc3QgcGVvcGxlIGJlY29tZSB1bmFibGUgdG8gZW1wYXRoaXplIHdpdGggdGhlIHByb2JsZW1zIG9mIG5vcm1hbCBBbWVyaWNhbnMgd2hlbiB5b3UgbWFrZSB0aGF0IG11Y2ggbW9uZXkKSSBkb24gd2FudCB0byBwbGF5IGEgMTAgQkIgc3RhY2sgYnV0IGlmIHlvdSByZXBlYXRlZGx5IGdvIGZyb20gb25lIHRhYmxlIHRvIG5leHQgYW5kIGRlY2xpbmUgdGhleSBjYW4gY29uc2lkZXIgdGhhdCBwcmVkYXRvcnkuIFRoZXNlIHNpdGVzIHZlcnkgbGlrZWx5IG1vbml0b3IgYWxsIHlvdXIgZ2FtZSBwbGF5IGJlZm9yZSBjYXNoaW5nIG91dCwgYW5kIGlmIHlvdSBqdW1wIGZyb20gb25lIHRhYmxlIHRvIHRoZSBuZXh0IHRvIHRhYmxlIHNlbGVjdCBiZWNhdXNlIG1ham9yaXR5IG9mIHRoZSBwbGF5ZXJzIGRvIHNob3J0IHN0YWNrLCBoaXQgbiBydW4sIHRoZXkgY291bGQgc2VlIHRoYXQgYXMgcHJlZGF0b3J5IGJlaGF2aW91ci4gClp5bmdhIGZhY2VzIG11bHRpcGxlIHBvdGVudGlhbCBvdXRjb21lcywgV2VyYmFjaCBub3Rlcy4gCkJsb2NraW5nIGNvbnNlcnZhdGl2ZXMgZnJvbSBzcGVha2luZyBvbiBjb2xsZWdlIGNhbXB1c2VzLCBhbmQgY2FsbGluZyBpZGVhcyB0aGF0IHdlcmUgbWFpbnN0cmVhbSBqdXN0IDEwIHllYXJzIGFnbyBoYXRlIHNwZWVjaCBhcmUgbm90IHdheXMgdGhhdCBjYW4gY3JlYXRlIGEgVW5pdGVkIGNvdW50cnkuIFlvdSBoYXZlIHRvIGJlIGFibGUgdG8gZW5nYWdlIHBlb3BsZSBmcm9tIG9wcG9zaW5nIHZpZXdzLCBub3Qgc2hvdXQgdGhlbSBkb3duLi4gClBsZWFzaW5nIHZpc2lvbnMgd2VyZSBhbHNvIGJlaW5nIHdvdmVuIGFyb3VuZCBQYXR0eSdzIFBsYWNlLiAKOC4gV29yayB3aXRoIGEgZGVzaWduZXIgdG8gY3JlYXRlIGEgbG9nbywgYnVzaW5lc3MgY2FyZCB0ZW1wbGF0ZSBhbmQgd2Vic2l0ZSBmb3IgeW91ciBtb2JpbGUgbWFzc2FnZSB0aGVyYXB5IGJ1c2luZXNzLiBZb3VyIHdlYnNpdGUgc2hvdWxkIGluY2x1ZGUgaW5mb3JtYXRpb24gYWJvdXQgeW91ciB0cmFpbmluZywgeW91ciBwYXNzaW9uIGZvciBtYXNzYWdlIHRoZXJhcHksIHlvdXIgYXZhaWxhYmlsaXR5LCBzZXJ2aWNlcyBhbmQgcHJpY2luZywgdGhlIGdlb2dyYXBoaWNhbCBhcmVhcyB5b3VyIGNvdmVyIGFuZCB5b3VyIGNvbnRhY3QgaW5mb3JtYXRpb24uIApSYWppYSBBYmRlbGF6aXogaXMgQ0VPIG9mIGludmlzYVdlYXIsIGEgc3RhcnR1cCB0aGF0IG1ha2VzIHNtYXJ0ICJzYWZldHkgamV3ZWxyeS4iIFdoaWxlIHNoZSdzIGF0dGVuZGluZyBDRVMgdGhpcyB5ZWFyLCBzaGUgc2FpZCBpdCB3YXNuJ3Qgd29ydGggdGhlICQxMCwwMDAgaXQgd291bGQgY29zdCBoZXIgY29tcGFueSB0byBoYXZlIGl0cyBvd24gY29udmVudGlvbiBmbG9vciBib290aC4gSW4gYWRkaXRpb24gdG8gdGhlIGNvc3QgY29uY2VybnMsIEFiZGVsYXppeiBub3RlcyB0aGF0IGhlciBwcm9kdWN0cyBhcmUgcHJpbWFyaWx5IGFpbWVkIGF0IHdvbWVuICAgYW5kIHRoZXJlIGp1c3QgYXJlbid0IHRoYXQgbWFueSBvZiB0aGVtIGF0IENFUy4uIApBbG1vc3QgbGlrZSBjb2ZmZWUgY2FyYW1lbCBpY2UgY3JlYW0sIGJ1dCBub3Qgb3Zlcmx5IHN3ZWV0IGF0IGFsbCBhbmQgZW5vdWdoIG9mIHRoZSBlc3ByZXNzbyBjdXRzIHRocm91Z2ggdG8gZ2l2ZSBpdCBzb21lIGNoYXJhY3Rlci4gSSBuZXZlciBoYWQgYSBTdGFyYnVja3MgZnJhcCwgYnV0IEkgaGVhciBpdCBhbGwgcG93ZGVyIGFuZCBoYXMgbm8gY29mZmVlIGluIGl0LiBCdXQgYWdhaW4gSSBuZXZlciB3b3JrZWQgZm9yIHRoZW0gc28gaWRrIGhvdyBtdWNoIHRydXRoIHRoZXJlIGlzIHRvIHRoYXQuIApEZXV4IGNoaWVucyBkZSB0cmFuZWF1eCBhdHRlbmRlbnQgbGV1ciBtYXRyZSwgIHF1ZWxxdWVzIHBhcyBkdSB2aWxsYWdlLiBQaG90byA6IFJhZGlvIENhbmFkYSAvIEdlbmV2aXZlIE5vcm1hbmQKRGV0cm9pdCBMaW9ucyBOZXdzIEFuZCBVcGRhdGVzIEZyb20gQ0JTIEFuZCBXV0oKV2hlbiB5b3Ugd2VyZSBib3JuLCB5b3Ugd2VyZSBjcnlpbmcgYW5kIGV2ZXJ5b25lIGFyb3VuZCB5b3Ugd2FzIHNtaWxpbmcuIExpdmUgeW91ciBsaWZlIHNvIHRoYXQgd2hlbiB5b3UgZGllLCB5b3UgdGhlIG9uZSB3aG8gaXMgc21pbGluZyBhbmQgZXZlcnlvbmUgYXJvdW5kIHlvdSBpcyBjcnlpbmcuCldlIGdyZWF0bHkgYXBwcmVjaWF0ZSBhbGwgeW91ciBraW5kIHdvcmRzIGFuZCB3aWxsIGJlIHN1cmUgdG8gcGFzcyBhbG9uZyB5b3VyIHdvbmRlcmZ1bCBjb21tZW50cyB0byBvdXIgbWFuYWdlbWVudCB0ZWFtIHRoZXJlLiAKVGhlcmUgYXJlIG1hbnkgZ3JlYXQgcmVzdGF1cmFudHMgd2l0aGluIHdhbGtpbmcgZGlzdGFuY2UgYW5kIG1vc3QgZG9uJ3QgbmVlZCByZXNlcnZhdGlvbnMuIApUaGUgSEYgaXMgb2Rpb3VzLCBidXQgeW91ciBmaCBkZXBlbmRlbmN5IG9uIHRoaXMgZ3V5IGlzIGJpemFycmUuIApTb21pdCBpc3QgZWluZSBkZXIgYWVsdGVzdGVuIHVuZCBlcnN0ZW4gQmVhY2ggQmFycyB2ZXJzY2h3dW5kZW4uIEFscyBHcnVuZCB3dXJkZSBhbmdlZnVlaHJ0LCBkYXMgZGllIEJlYWNoIGVpbiBuZXVlcywgemVpdGdlbWFlc3NlcyB1bmQgc2F1YmVyZXMgSW1hZ2UgYmVrb21tZW4gc29sbC4gCkFzIERpb24gcHVzaGVzIGhpcyBwbGFuLCBUaGUgTmF0aW9uYWwgQ2l0aXplbidzIENvYWx0aW9uIChOQ0MpIGlzIHRha2luZyBhaW0gYXQgaXQgaW4gYSBzZXJpZXMgb2YgbmV3c3BhcGVyLCByYWRpbyBhbmQgVFYgYWRzLiBUaGUgTkNDIGlzIHdhcm5pbmcgQ2FuYWRpYW5zIG5vdCB0byBiZSBmb29sZWQgICB0aGV5IGNhbGwgdGhlIEdyZWVuIFNoaWZ0IHBsYW4gbm90aGluZyBtb3JlIHRoYW4gYSBtYXNzaXZlIG5ldyB0YXggdG8gcGF5IGZvciBMaWJlcmFsIHNvY2lhbCBzcGVuZGluZyBwcm9ncmFtcy4uIApGcmVlZG9tIG9mIEluZm9ybWF0aW9uIHN1bW1hcnkKVGhpcyBpcyBpbXBvc3NpYmxlIHdpdGggbm9uZSBvZiB0aGF0LCB0aGUgYm9keSBjYW4ndCBncm93IDI1a2cgbmF0dXJhbGx5LiAKQWxzbywgbWFrZSBhIHNtYXJ0cGhvbmUgYXBwLiAKSSBpbWFnaW5pbmcgcnVubmVycyBidW1waW5nIGludG8gZWFjaCBvdGhlci4gVGhpcyB3aG9sZSB0aGluZyBpcyBhIG1lc3MuIE5vdywgSSBuZXZlciBkaXJlY3RlZCBhIHJhY2UgYmVmb3JlIGFuZCBJIHN1cmUgdGhpbmdzIGNhbiBnbyB3cm9uZywgYnV0IHdhaXRpbmcgdGlsbCBhIGNvdXBsZSB3ZWVrcyBvdXQgdG8gdGVsbCB1cz9JIGRvbiB0aGluayBJIGdvaW5nIHRvIGJvdGhlciB3aXRoIHRoaXMuIApCb25hcGFydGUgcmVwb3Vzc2UgdW4gcHJvamV0IGRlIENvbnN0aXR1dGlvbiByZGlnIHBhciBTaWV5cy4KTmFLYTc3ICA3IHBvaW50cyAgc3VibWl0dGVkIDQgZGF5cyBhZ28KQnV0IHNvbWV0aGluZyBzZXJpb3VzIGdvdCBpbiB0aGUgd2F5LiBTbyB0aGlzIGhhcyBjb21lIG11Y2ggbXVjaCBsYXRlciB0aGFuIEkgaGFkIG9yaWdpbmFsbHkgcGxhbm5lZC4gUmVhc29uIGZvciBteSBkZWxheSB3YXMgdGhpcy4gCjFyZXhhczEgIDYgcG9pbnRzICBzdWJtaXR0ZWQgOCBkYXlzIGFnbwooQmVmb3JlIElTSVMsIG91dHNpZGUgcG93ZXJzLCBpbmNsdWRpbmcgdGhlIE90dG9tYW5zIGFuZCBvdGhlciByYWRpY2FsIElzbGFtaWMgc2VjdHMsIGhhZCB0cmllZCB0byBkZXN0cm95IHRoZW0gNzMgdGltZXMsIE11cmFkIHdyaXRlcyBpbiBoZXIgYm9vay4pLiAKRG91Ymxpbmcgb2YgdGhlIGxvdWRuZXNzIGlzICsxMGRCU291bmQgaW50ZW5zaXR5IGlzIHRoZSBzb3VuZCBwb3dlci9hcmVhIGFuZCBpcyBtZWFzdXJlZCBpbiB3L20yLiAKQW5kIGZvciBoZXIgdG8gbGV0IG1lIGtub3cgd2hlbiBmaXZlIG1pbnV0ZXMgd2FzIHVwLiAKTk1TIHJlcXVpcmVzIHRoYXQgYWxsIGV4Y2hhbmdlcywgYXMgd2VsbCBhcyB0aGUgTmFzZGFxIG1hcmtldHBsYWNlLCBwcm92aWRlIGluZGl2aWR1YWxzIHdpdGggdGhlIHNhbWUgYWNjZXNzIHRvIHF1b3RlcyB0aGF0IGlzIG9mZmVyZWQgdG8gaW5zdGl0dXRpb25hbCB0cmFkZXJzLiBJdCByZXF1aXJlcyB0aGF0IHByaWNlcyBmb3IgbW9zdCBzdG9ja3MgYmUgZGlzcGxheWVkIGluIGluY3JlbWVudHMgbm8gc21hbGxlciB0aGFuIGEgcGVubnkgcGVybWl0dGluZywgZm9yIGV4YW1wbGUsIGEgcHJpY2Ugb2YgJDEwLjAxIGEgc2hhcmUsIGJ1dCBub3QgJDEwLjAxNS4gTW9zdCBpbXBvcnRhbnRseSwgaXQgY29udGFpbnMgYSBydWxlLCBhbHNvIGtub3duIGFzIGFuIHByb3RlY3Rpb24gcnVsZSwgbWVhbnQgdG8gYXNzdXJlIHRoZSBiZXN0IHByaWNlcy4gQSBwdXJjaGFzZSBvcmRlciBlbnRlcmVkIGF0IHRoZSBOZXcgWW9yayBTdG9jayBFeGNoYW5nZSBtaWdodCBiZSBleGVjdXRlZCBvbiB0aGUgTmFzZGFxIGlmIGEgc2VsbGVyIHRoZXJlIG9mZmVycyB0aGUgc3RvY2sgYXQgdGhlIGxvd2VzdCBwcmljZSwgZm9yIGV4YW1wbGUuCkRlc2RlIGxhIHRyYWdlZGlhIHF1ZSBkZWogbXMgZGUgbWVkaWEgY2VudGVuYSBkZSBtdWVydG9zIG5vIHF1ZWQgb3RyYSBxdWUgcG9uZXJsbyBhIGFuZGFyIGNvbW8gY29ycmVzcG9uZGEuIApUaGUgaWRlYSBvZiBkeWluZyBpbiBhIGhvdGVsIHJvb20gYW5kIGp1c3QgYmVpbmcgYW4gYW5vbnltb3VzIGZhY2UgaXMuIApUaGF0IG1heSBiZSB1bmRlcnN0YXRpbmcgaXQgYSBiaXQuIEl0J3MgcGVyZmVjdGx5IG5vcm1hbCBmb3Igc2libGluZ3MgdG8gZmlnaHQuIEkgaGFkIGEgY29udmVyc2F0aW9uIHdpdGggbXkgY29sbGVnZSBmcmllbmRzIGxpa2UganVuaW9yIHllYXIsIGFuZCB3ZSBhbGwgY291bGRuJ3Qgc3RhbmQgb3VyIHNpYmxpbmdzIHdoZW4gd2UgbGVmdCBmb3IgY29sbGVnZSwgYnV0IGJ5IHRoZSBlbmQgb2YgU29waG9tb3JlIHllYXIgd2Ugd2VyZSBhbGwgcHJldHR5IGdvb2QgZnJpZW5kcyB3aXRoIHRoZW0gKGV4Y2VwdCB0aGUgb25lIGd1eSB3aG8ncyBzaXN0ZXIgY2FtZSB0byB0aGUgc2FtZSBjb2xsZWdlIGFuZCBpbnNpc3RlZCBvbiBoYW5naW5nIG91dCB3aXRoIGhpbSBhIGxvdCkuIFlvdSBhcmUgZm9yY2VkIHRvIGxpdmUgd2l0aCBzb21lb25lLCBpdCdzIG5hdHVyYWwgYW5kIG5vcm1hbCB0byBidXR0IGhlYWRzLgpXaGVyZWFzIHRoZSBBbWVwaW5vcyBhcmUgYSBsYXJnZWx5IGEgbGVnYWN5IG9mIGRlY2FkZXMgb2YgbWlsaXRhcnkgYmFzZXMsIGFuZCB0aGUgSmFwYW5lc2UgZWNvbm9taWMgYm9vbSBpbiB0aGUgMTk4MHMgY29ycmVzcG9uZGVkIHRvIHRoZSBib29tIGluIEphcGlub3MsIEtvcmVhbiB0b3VyaXN0cyBhcmUgdGhlIG5ldyBraWRzIG9uIHRoZSBibG9jayBhbmQgYXJlIHN0YXJ0aW5nIHRvIGxlYXZlIHRoZWlyIG93biBsZWdhY3kuIApBZ2FpbiwgdGhlIGR1cmF0aW9uIGlzbiByZWxldmFudCBoZXJlIGJlY2F1c2UgNCUgb2YgJDFtIGNvdmVycyB0aGUgeWVhcmx5IGV4cGVuc2VzLiAKRG8gQ2FyY2Fzc29ubmUgYnV0IGVsaW1pbmF0ZSBmYXJtZXJzIHNvIG1vc3Qgc2NvcmUgY2xvc2VyIHRvIHJpZ2h0IGF3YXkuIApUaGUgbGFuZGVyIHdhcyBub3doZXJlIHRvIGJlIHNlZW4sIGJ1dCB0byB0aGVpciBsZWZ0IHRoZXJlIHdhcyBhIHJlY2Vzc2lvbiBpbiB0aGUgd2FsbC4uIApJIHN1cmUgeW91IGhlbGQgb24gdG8gdGhlIG5vdGUsIGJ1dCB5b3UgbWF5IHdhbnQgdG8gc2NhbiBpdCBhbmQgcHV0IGEgY29weSBpbiB0aGUgY2xvdWQganVzdCBpbiBjYXNlIHNoZSBkb2VzIGNvbWUgYmFjayB0byBjaGFsbGVuZ2UgeW91IGd1eXMgb3ZlciBjdXN0b2R5LiBZb3UgZG9uIGdldCBtdWNoIGJldHRlciBwcm9vZiBvZiB1bnJlbGlhYmxlIHBhcmVudGluZyB0aGFuIGEgbm90ZSBpbiB0aGVpciBvd24gaGFuZHMgdGhhdCB0aGV5IGp1c3QgbGVhdmluZyBiZWNhdXNlIHRoZXkgZG9uIGZlZWwgc3VmZmljaWVudGx5IGFwcHJlY2lhdGVkLiBJIGp1c3Qgd2lzaCB0aGF0IGV2aWRlbmNlIGRpZG4gY29tZSBhdCBzdWNoIGEgaGlnaCBjb3N0LCB3aXRoIGFsbCB0aGlzIHN0cmVzcy90cmF1bWEgZm9yIGV2ZXJ5b25lLiAKQXZlbmdlYW5jZSAgMSBwb2ludCAgc3VibWl0dGVkIDE2IGhvdXJzIGFnbwpJdCBzdGlsbCB0b29rIGxpa2UgYSB5ZWFyIGFmdGVyIHRoZSBkaWFnbm9zaXMgdG8gc2VwYXJhdGUgZnJvbSB0aGUgbWlsaXRhcnksIGJ1dCBJIHdlbnQgaG9tZSBvbiBsZWF2ZSBmb3IgdGhlIGhvbGlkYXlzIGFib3V0IGEgbW9udGggYWZ0ZXIgdGhlIGRpYWdub3Npcy4gCklmIHRoaXMgaXMgc29tZXRoaW5nIHlvdSBhcmUgdW5jb21mb3J0YWJsZSBsaXZpbmcgd2l0aCwgaXQgaXMgYWJzb2x1dGVseSByZWFzb25hYmxlIG5vdCB0byBsaXZlIGluIGEgcmVsYXRpb25zaGlwIHdpdGggdGhpcyBzb3J0IG9mIGFycmFuZ2VtZW50LiBZb3UgZG9uIGV2ZW4gaGF2ZSB0byB0cnkgYW5kIHVuZGVyc3RhbmQgd2h5IG90aGVyIHBlb3BsZSBtaWdodCBmaW5kIHRoaXMgZGVzaXJhYmxlLiAKQnV0IGJlIHByZXBhcmVkLCBpdCBwcm9iYWJseSBiZSB1bmNvbWZvcnRhYmxlIHRvIGNvbmZyb250IHNvbWVvbmUgaW4gdGhpcyB3YXksIGJ1dCBpdCBpbXBvcnRhbnQgdG8gYWR2b2NhdGUgZm9yIHlvdXJzZWxmISBJdCBtYXkgcHV0IHRlbnNpb24gb24gdGhlIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIHlvdSBhbmQgeW91ciB0aGVyYXBpc3QgYnV0IGRlcGVuZGluZyBvbiB0aGUgb3V0Y29tZSB5b3UgY2FuIGRlY2lkZSB0byBlaXRoZXIgd29yayB0aHJvdWdoIGl0IHRvZ2V0aGVyIG9yIG1vdmUgb24sIGFuZCBib3RoIG9wdGlvbnMgYXJlIGp1c3QgZmluZSA6KSBJIGhvcGUgdGhpcyB3YXMgYXQgbGVhc3QgYSBsaXR0bGUgYml0IGhlbHBmdWwhLiAKV2F0Y2hpbmcgcG9ybiBtaWdodCBtYWtlIHlvdSBiaXNleHVhbC4gQXQgbGVhc3QgdGhhdCBzZWVtcyB0byBiZSB0aGUgdGFrZWF3YXkgZnJvbSBhIHN0dWR5IHJlbGVhc2VkIGJ5IHRoZSBvbmxpbmUgcG9ybiBwb3J0YWwgeEhhbXN0ZXIuIApXYXMgd2lsbHN0IGRlbm4gaW4gQWZnaGFuaXN0YW4gYXVmYmF1ZW4/IEthdW0gc3RlaHQgZGEgZWluZSBTY2h1bGUga29tbWVuIGRpZSBUYWxpYmFuIHVuZCBzYWdlbiAid2lyIHNpbmQgZGEgamV0enQgQ2hlZiIuIApJdCB3aWxsIGFsc28gYWxtb3N0IGVuc3VyZSB0aGV5IHRoZXkgbmV2ZXIgZ2V0IGFuIGVkdWNhdGlvbiBhbmQgd2lsbCByZW1haW4gb24gYXNzaXN0YW5jZSBtb3N0LCBpZiBub3QgYWxsIG9mIHRoZWlyIGxpZmUuIElmIHRoZSBjaGlsZCBpcyBmb3JjZWQgdG8gcmVtYWluIGluIHRoYXQgc2l0dWF0aW9uLCBpdCB3aWxsIGhhdmUgYSB2ZXJ5IGxvdyBxdWFsaXR5IG9mIGxpZmUgYW5kIGFsc28sIG1vc3QgbGlrZWx5LCBsaXZlIGEgZnVsbCBsaWZlIHJlbHlpbmcgb24gYXNzaXN0YW5jZSBwcm9ncmFtcyAoeWVhaCB5ZWFoLCBJIGtub3cgdGhpcyBvbmUgc3VwZXIgZ2VuaXVzIHdobydzIHZlcnkgcG9vciB0ZWVuYWdlIG1vbSB3YW50ZWQgdG8gYWJvcnQsIGJ1dCBkaWRuJ3QsIGFuZCBoZSdzIG5vdyBhIG11bHRpIHRyaWxsaW9uYWlyIHdobyBjdXJlZCBzdXBlciBhaWRzLiBXZSdyZSBub3QgdGFsa2luZyBhYm91dCBoaW0sIHdlJ3JlIHRha2luZyBhYm91dCBub3JtcyBhbmQgYXZlcmFnZXMpLi4gCkFOR1JZX01PVEhFUkZVQ0tFUiAgNDIgcG9pbnRzICBzdWJtaXR0ZWQgOSBtb250aHMgYWdvClBsdXMgcGFydGljdWxhcmx5IGEgeW91bmcgY2hpbGQgaXMgZ2V0dGluZyBtb3N0IG9mIGhpcyBtb25leSBhbmQgc3R1ZmYgZnJvbSB0aGUgcGFyZW50cywgYW5kIGl0IGEgY2FzZSBvZiBub3QgYmVpbmcgc28gd2VhayB3aWxsZWQgKGFzIGZhciB0b28gbWFueSBwYXJlbnRzIGFyZSkgYW5kIGdpdmluZyBpbnRvIGRlbWFuZHMgYnV0IGFnYWluIHNldHRpbmcgYm91bmRhcmllcy4gWW91IGFzIHRoZSBwYXJlbnRzIGFyZSB0aGUgb25lcyBnaXZpbmcgdGhlbSB0aGUgZm9vZCwgY2xvdGhlcywgYnV5aW5nIHRoZW0gdGhlIGJvb2tzIGFuZCBDRHMsIHRoZSBnYWRnZXRzIGFuZCBhbGwgdGhlIG90aGVyIHN0dWZmIGxpa2UgYmFsbGV0IGxlc3NvbnMgb3Igc2Nob29sIHRyaXBzLiBJdCB1cCB0byB5b3UgYXMgdGhlIG9uZSB3aXRoIHRoZSB3YWxsZXQvcHVyc2UgaW4gaGFuZCB0byBkZWNpZGUgaG93IHlvdSBzcGVuZCB5b3VyIG1vbmV5IG9uIHlvdXIgY2hpbGQuIEZhaXIgZW5vdWdoIHlvdSBjYW4gYXQgbGVhc3QgYWNrbm93bGVkZ2UgdGhlaXIgb3duIGNob2ljZXMgKEkgbm90IEFteSBDaHVhKSBidXQgdGhhdCBkb2VzbiBtZWFuIHRoZXkgZ2V0IHRvIHJ1biB0aGluZ3MuIFNvIGlmIHlvdXIgOCB5ZWFyIG9sZCBjaGlsZCBpcyB3YXRjaGluZyBSIHJhdGVkIG1vdmllcywgb3IgbGlzdGVuaW5nIHRvIGV4dHJlbWVseSB2dWxnYXIgcmFwIG11c2ljLCBvciBhY2Nlc3NpbmcgcG9ybiwgY2hhbmNlcyBhcmUgaXQgYmVjYXVzZSBhbiBhZHVsdCBzb21ld2hlcmUgaGFzIGJlZW4gbGF6eS4gMTYgcG9pbnRzICBzdWJtaXR0ZWQgNyBtb250aHMgYWdvCldhbHQncyBvYnZpb3VzbHkgYSBiYWQgcGVyc29uLiBObyBxdWVzdGlvbi4gQnV0IHNlZWluZyBoaXMgcG93ZXIgZmFudGFzeSBwbGF5IG91dCBvdmVyIHRoZSBjb3Vyc2Ugb2YgdGhlIHNob3cgd2hpbGUgb3ZlcmNvbWluZyBvYnN0YWNsZXMgbGlrZSBoaXMgY29tcGV0aXRpb24sIHRoZSBsYXcsIGFuZCBTa3lsYXIgKHdobyByZXByZXNlbnRzIGFjdHVhbCByZWFsaXR5IHRoZSBudW1lcm91cyBwZW9wbGUgdGhhdCBnZXQgaHVydCBvdmVyIHRoZSBjb3Vyc2Ugb2YgdGhpcyBwb3dlciB0cmlwKSB3ZXJlIHRoZSBiZXN0IHBhcnRzIG9mIHRoZSBzaG93LgpUaGUgcGVyc29uIHRvIHRoZSBsZWZ0IG9mIHRoZSBiaWcgYmxpbmQgdGhlbiBoYXMgdGhlIG9wdGlvbiBvZiBjYWxsaW5nIHRoZSAiYmV0IiBvZiB0aGUgYmlnIGJsaW5kLCByYWlzaW5nLCBvciBmb2xkaW5nLiBBZnRlciB0aGlzIHJvdW5kIG9mIGJldHRpbmcgMyBjYXJkcyBhcmUgZGVhbHQgb3V0IGluIHRoZSBvcGVuICh0aGUgZmxvcCksIHdoaWNoIGFyZSBjb21tdW5pdHkgY2FyZHMgcGxheWVkIGJ5IGFsbCBwbGF5ZXJzLCBhbmQgYW5vdGhlciByb3VuZCBvZiBiZXR0aW5nIGVuc3Vlcy4gQSBmb3VydGggY2FyZCBpcyBkZWFsdCBpbnRvIHRoZSBjb21tdW5pdHkgY2FyZHMgKHRoZSB0dXJuKSBmb2xsb3dlZCBieSBhIHJvdW5kIG9mIGJldHRpbmcuIApZb3UncmUgbm90IGdldHRpbmcgaXQuIEFyZSB5b3Ugc3RpbGwgaW4gZ3JhZGUgc2Nob29sPyBDb2xsZWdlPwpJdCByZWFsbHkgaXMgcHJldHR5IGZhc2NpbmF0aW5nIGhvdyBpdCBpc24gYSBwcm9ibGVtIGZvciBoaW0uIEhlIGRvZXNuIGRyaXZlIG9uY2UgaGUgc3RhcnRzIGRyaW5raW5nLCBzbyBoZSBkb2VzbiBwb3NlIGEgdGhyZWF0IHRvIGhpbXNlbGYgb3Igb3RoZXJzIHdoZW4gaGUgZHJpbmtzLiBJIG1lYW4sIGFsY29ob2xpc20gaXNuIGdyZWF0LCBidXQgaXQgaGFzbiBjYXVzZWQgaXNzdWVzIGFuZCB0aGUgbWVuIGluIGhpcyBmYW1pbHkgaGF2ZW4gbGl2ZWQgcGFzdCA3MCBhbnl3YXkuLiAKOCApIFRoZSBtYWpvcml0eSBvZiBwb3N0IHRyYXVtYXRpYyBuZWNrIHBhaW4gYXJpc2VzIGZyb20gdGhlIGZhY2V0IGpvaW50LgpUaGV5IGxpdmVkIChoaW0gYW5kIGhpcyAiU2FpIikgaGFwcGlseSBhbmQgaGFkIG1hbnkgY2hpbGRyZW4uIEkgZG9uZSB0b28sIHlvdSBvYnZpb3VzbHkgZG8gbm90IHVuZGVyc3RhbmQgdGhhdCBwZW9wbGUgYXJlIHRhbGtpbmcgYWJvdXQgdmFwaW5nIGRpc3RpbGxhdGUvQ28yIG9pbCBoZXJlLCBub3QgSFRGU0UuIEFuZCB5b3Ugb2J2aW91c2x5IGRvIG5vdCBrbm93IGFueXRoaW5nIGFib3V0IGNhbm5hYmlzIGV4dHJhY3RzIGFuZCB0ZXJwZW5lcy4gVGhlIHByb29mLCB5b3UgYXJlIHRhbGtpbmcgZ29vZCBmbGF2b3IgYW5kIHlvdSBwdXQgZGlhbW9uZHMgaW4gdGhhdCBuYXN0eSBzdGFpbmxlc3Mgc3RlZWwgY29pbCAodGhhdCB5b3Ugc2hvdyBtZSBpbiBwaWN0dXJlKS4gWW91IGtpZGRpbmcgcmlnaHQ/IFdoYXQgYWJvdXQgcXVhcnR6IGxvb2wuIEFuZCBmb3IgdGhlIHJlY29yZCwgeW91IGNhbiBwdXQgYSBDQ0VMTCBjYXJ0cyBvbiBhbnkgNTEwIG1vZCBhbmQgY29udHJvbCB0aGUgdGVtcC4gR2xhZCB5b3UgdGhpbmsgeW91IGZvdW5kIHRoZSBiZXN0IGRldmljZSB0aGF0IHdhcyBldmVyIGNyZWF0ZSwgZ29vZCBmb3IgeW91IG1hbi4gR29vZCBmb3IgeW91LiBsb2wKQW1lcmljYW4gaXNuIG1ha2luZyB0aGF0IGludmVzdG1lbnQgYnV0IGlzIGFkZGluZyB0dXJuZG93biBzZXJ2aWNlIG9uIHNvbWUgcm91dGVzOyBhdCBiZWR0aW1lLCBwYXNzZW5nZXJzIGFyZSBnaXZlbiBwYWphbWFzIGFuZCBzbGlwcGVycyB3aGlsZSBmbGlnaHQgYXR0ZW5kYW50cyBsYXkgZG93biBhIHF1aWx0ZWQgc2VhdCBjb3ZlciwgZHV2ZXQgYW5kIHBpbGxvdy4uIApJdCBkZXBlbmRzIG9uIHRoZSBGcmVuY2htYW4gYW5jZXN0cnkuIEJ1dCBpbiBnZW5lcmFsIHllcy4gSWYgYSBTbGF2IGFuZCBHZXJtYW5pYyBicmVlZCwgdGhlaXIgb2Zmc3ByaW5nIHdpbGwgYmUgYSBtdXR0LiBJIGRvbiB3YW50IHRvIGxvc2Ugb3VyIGN1bHR1cmVzLCBoaXN0b3J5IGFuZCBtdWx0aWN1bHR1cmFsaXNtLiBJZiBldmVyeW9uZSBicmVlZHMgd2l0aCBldmVyeW9uZSwgdGhlbiB3ZSBubyBsb25nZXIgaGF2ZSB0aGUgZGl2ZXJzaXR5IHdlIGhhdmUgaW4gdGhlIHdoaXRlIHJhY2UuClRoaXMgbGFuZ3VhZ2UgaXMgc29ydCBvZiBhIHJlYm9vdCBvZiBhbiBlYXJsaWVyIG9uZS4gSSBoYWQgc29tZSBpbmZvcm1hdGlvbiBvbiBpdCB0aGF0IEkgbG9zdCB3aGVuIEkgZGlkbiBtYWtlIGEgYmFja3VwIG9mIHRoZSBkYXRhIGFuZCB0aGVuIGxvc3QgYWNjZXNzIHRvIGl0IChtYWtlIHN1cmUgeW91IHNhdmUgeW91ciB3b3JrLCBraWRzKS4gSXQgaW50ZW5kZWQgdG8gYmUgc3Bva2VuIGJ5IHBlb3BsZSBvbiB0aGUgZWFzdGVybiBjb250aW5lbnQgb2YgbXkgY29ud29ybGQuIApXaGF0IGNvdWxkIHBvc3NpYmx5IGZvcmNlIGhlciB0byBkbyB0aGF0IG1vcmUgdGhhbiBUb21tZW4gZGVhdGg/ClJldmlldyB0aGUgYmFzaWNzLiAKV2hpbGUgYWxsIG9mIHRoaXMgaXMgbGlrZWx5IGp1c3QgYSBoYXJtbGVzcyBnYW1lIGJ5IHNvbWUgZ3JvdXAgd2l0aCBhIGRlY2VudCBhbW91bnQgb2YgdGltZSBhbmQgbW9uZXkgb24gdGhlaXIgaGFuZHMsIGltYWdpbmUgdGhlIGhvcnJvciBtb3ZpZSBwb3NzaWJpbGl0aWVzLiBTaGl0LCBpZiBldmVuIGEgZnJhY3Rpb24gb2YgdGhlIG1vcmUgaW50ZXJlc3RpbmcgYXNwZWN0cyBvZiB0aGUgY2FzZSBhcmUgdHJ1ZSwgaXQncyBhIHByZXR0eSBkYW1uIGludGVuc2UgdGhyaWxsZXIgaW4gaXRzZWxmLiBSZWFsbHksIGFsbCB5b3UgbmVlZCB0byBkbyBpcyBpbmNsdWRlIGEgZmluYWwgc2NlbmUgd2hlcmUgVGhlIE9ycGhhbmFnZSB0dXJucyBvdXQgdG8gYmUgdGVudGFjbGUgcmlkZGVuIHdvcnNoaXBwZXJzIG9mIEN0aHVsaHUgb3Igd2hhdGV2ZXIsIGFuZCBmYWRlIHRvIGJsYWNrIGFzIHRoZSBoZXJvIGlzIHN1Y2tlZCBpbnRvIHRoZSBhYnlzcy4uIApBbmQgTWV4aWNvIGhhdmUgbXVzaHJvb21lZCBhdCBhIHNwZWN0YWN1bGFyIHJhdGUuIApIZSBpcyBub3QgdGhlcmUgdHJ5aW5nIHRvIHJlc29sdmUgdGhlIGRlYXRoIG9mIHRoZWlyIHVuYm9ybi4gTW9yZSBsaWtlbHkgaGUgaXMgdHJ5aW5nIHRvIHJlc29sdmUgaGlzIG93biBmZWVsaW5ncyBmb3IgaGVyLiBBbG9uZS4gQXQgaGlzIHBsYWNlLiBXaXRoIGhlciBmb3IgYSB3ZWVrLiBOb3QgY29vbCB0byB5b3Ugb24gYW55IGxldmVsLmxhbmFib29nZXIgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMTQgaG91cnMgYWdvSXQgaGFyZCBiZWNhdXNlIEkgbG92ZSBoaW0gYW5kIGhlIHNheXMgaGUgbG92ZXMgbWUuIApJIGRvbiBrbm93LCBtYXliZSBpdCBqdXN0IHRoZSBibGFja3Mgb24gbXkgbW9uaXRvci4gSSBkbyBub3Qgc2VlIHRoYXQgeW91IGFyZSBwdWxsaW5nIGludG8gdGhvcmFjaWMgZXh0ZW5zaW9uIGFuZCB0aGVuIGdpdmluZyBpdCB1cC4gCkVudGVyZWQgYXMgU2Vjb25kIENsYXNzIE1hdHRlciBhdCBBbmQgaW4gdGhlIHNwb29uIGNhcnJvdCBkcm9wcywgVGhlIHNlbGYgc2FtZSBhcnRpZmljZSBpcyB0cmllZCBXaXRoIHRob3NlIGRldGVzdGVkIHNwaW5hY2ggVGlzIHdpc2RvbSBzd2luZGxpbmcgaW5ub2NlbmNlLCBQb3N0IE9mZmljZSBhdCBHZXR0eXNidXJnLCBQZW10c3lsICBCdXQgd2hlbiBJIHNlZSB0aGUgZ2FtZSBjb21tZW5jZSBpIEkgcHV0IG15IGhvbm9yIG9uIHRoZSBzaGVsbCBBbmQgc3RhcnQgdG8gc3dpbmRsZSBoZXIgbXlzZWxmLiAKRmFuY3lpbmcgYSBzdWl0ZWQgUSAxMCwgUGVnIExlZyBoYWQgY2FsbGVkIHRvby4gClRoaXMgY2hhcHRlciBjb25jbHVkZXMgYSB3aWRlciBwcm9qZWN0IGV4YW1pbmluZyBkZWNpc2lvbiBtYWtpbmcgYWNyb3NzIGRldmVsb3BtZW50YWwgc3RhZ2VzIGluIGVsaXRlIHNwb3J0LiAKV2hlbiBJIHNoYXJlZCBhIGhvdXNlIGluIEJhdGggc29tZSB5ZWFycyBhZ28sIHRoZXJlIHdhcyBhIHJlc2lkZW50IGZlbGluZSB0aGF0IGhhZCBhIGRvZyBsaWtlIG9ic2Vzc2lvbiB3aXRoIHR1bW15IHRpY2tsZXMuIFdoZW4gYSBuZXcgcGVyc29uIGVuZXRlcmVkIHRoZSByb29tLCBoZSdkIHJ1biBpbnRvIHRoZSBtaWRkbGUgb2YgdGhlIGNhcnBldCwgc3RyZXRjaCBvdXQgZnJvbSBoaXMgbm9ybWFsLCBhbG1vc3QgcG90IGJlbGxpZWQgc2hhcGUgdG8gc29tZXRoaW5nIHJlc2VtYmxpbmcgYSBkcmF1Z2h0IGV4Y2x1ZGVyLCByb2xsIG9uIGhpcyBiYWNrIHdhaXRpbmcgZm9yIGEgZ29vZCBtYXNzYWdlLCBhbmQgc3RheSB0aGVyZSBmb3IgYWdlcyBpZiBvbmUgd2Fzbid0IGZvcnRoY29taW5nLiBIZSBuZXZlciBzZWVtZWQgdG8gZ2V0IGJvcmVkIG9mIGJlaW5nIHBldHRlZCwgYW5kIHNlZW1lZCB0byBsaWtlIGhhdmluZyBhbGwgaGlzIGZ1ciBydWJiZWQgdXAgdGhlIHdyb25nIHdheSwgdW5saWtlIG1vc3Qgb3RoZXIgY2F0cyBJJ3ZlIGtub3duLi4gClRoZSBwcmltYXJ5IG91dGNvbWUgbWVhc3VyZSB3YXMgY29nbml0aW9uLCBtZWFzdXJlZCBieSB0aGUgTWluaSBNZW50YWwgU3RhdGUgRXhhbWluYXRpb24gKE1NU0UpOyBzZWNvbmRhcnkgb3V0Y29tZSBtZWFzdXJlcyB3ZXJlIHRoZSBDb25zb3J0aXVtIHRvIEVzdGFibGlzaCBhIFJlZ2lzdHJ5IGZvciBBbHpoZWltZXIgRGlzZWFzZSAoQ0VSQUQpIG5ldXJvcHN5Y2hvbG9naWNhbCBiYXR0ZXJ5LCBBY3Rpdml0aWVzIG9mIERhaWx5IExpdmluZyAoQURMKSBzY2FsZSwgSW5zdHJ1bWVudGFsIEFETCAoSUFETCkgc2NhbGUsIGFuZCBmYXN0aW5nIGNob2xlc3Rlcm9sLiAKVXJiYW4gYWdyaWN1bHR1cmUgYXQgaXRzIGJlc3QuIApBbm90aGVyIG9wdGlvbiB3aGVuIHRoZXJlIGlzIGV4dHJlbWUgd2VhdGhlciBpcyBzbGVlcGluZyBpbiBhbiBJbnRlcm5ldCBjYWZlLiBUaGV5IGFyZSBhbGwgb3ZlciBKYXBhbiBhbmQgb2ZmZXIgcHJpdmF0ZSBib290aHMgd2l0aCBhIHBhZGRlZCBjdXNoaW9uIGZsb29yLCB1bmxpbWl0ZWQgc29kYSBhbmQgdHJlYXRzLCBjb21wdXRlciBhY2Nlc3MsIGEgc2hvd2VyLCBhbmQgcGxlbnR5IG9mIGNoYXJnaW5nIHBvcnRzIGZvciBlbGVjdHJvbmljcy4gU2xlZXBpbmcgaW4gb25lIG9mIHRob3NlIHdpbGwgcHJvYmFibHkgY29zdCB5b3UgYWJvdXQgJDE1ICQxOCBmb3IgdGhlIG5pZ2h0LCBidXQgaXQgaXMgcGF5IGJ5IHRoZSBob3VyLCBzbyBpZiB5b3Ugd2FudCB0byBqdXN0IHNsZWVwIGxlc3MgdGhlbiB5b3UgY2FuIHBheSBsZXNzLiAKVGhlcmUgc29tZSBzdHVmZiBJIGRvIHdpdGggYSBzbWFsbCByb2NrIHRoYXQgZ29lcyB0d28gZnJvbSBteSBob21lIGVkZ2UgYW5kIG5lYXIgdGhlIDMgYW5kIDIgcm9jaywgdGhhdCBtYWtlcyBpdCBzbyB0aGF0IHBlb3BsZSBoYXZlIGEgaGFyZGVyIHRpbWUgZGlwcGluZyBvdXQgb2YgbXkgYXJjIG9mIGZpcmUgcXVpY2tseS4uIApUaGUgcG9wdWxhdGlvbiBvZiB0aGUgb25saW5lIHBva2VyIHNpdGUncyBtZW1iZXJzIHNob3VsZCBhbHNvIGhhdmUgYSBnb29kIG51bWJlciBzbyB3aGVuIHlvdSBsb2cgaW4gYW5kIHdvdWxkIGxpa2UgdG8gcGxheSwgdGhlcmUgd291bGQgYmUgZW5vdWdoIG1lbWJlcnMgZm9yIHlvdSB0byBiZSBhYmxlIHRvIHBsYXkgd2l0aC4gTW9yZW92ZXIsIHRoZXNlIHBsYXllcnMgc2hvdWxkIGhhdmUgdmFyeWluZyBsZXZlbHMgb2Ygc2tpbGxzLiBUaGlzIHdpbGwgaGVscCB5b3UgaW1wcm92ZSB5b3VyIGNhcmQgc2tpbGxzIGFzIHdlbGwgYnkgcGxheWluZyBhZ2FpbnN0IHNraWxsZWQgb3Bwb25lbnRzIG9yIHlvdSBjb3VsZCB3aW4gYSBsb3Qgb2YgbW9uZXkgYnkgcGxheWluZyBhZ2FpbnN0IGluZXhwZXJpZW5jZWQgb25lcy4KVXBvbiByZWNlaXB0IG9mIGEgcmVwb3J0LCB0aGUgRXhlY3V0aXZlIE9mZmljZXIgd2lsbCBhc3Nlc3Mgd2hldGhlciB0aGVyZSBhcmUgYW55IGltbWVkaWF0ZSBwcmVjYXV0aW9uYXJ5IGFjdGlvbnMgcmVxdWlyZWQgYW5kIHRha2UgdXJnZW50IGFjdGlvbiwgYXMgbmVjZXNzYXJ5LCB0byBwcm90ZWN0IHRoZSBzYWZldHkgb2Ygc3R1ZGVudHMgYW5kL29yIHN0YWZmIG9uIGNhbXB1cy4gVGhpcyBtYXkgaW5jbHVkZToKSmltIGFuZCBBbGljZSB0cmF2ZWxsZWQgb2Z0ZW4gdG8gVG9yb250bywgQ2FsZ2FyeSBhbmQgRHVuY2FuIChCQykuIFNoZSBhdHRlbmRlZCBoaWdoIHNjaG9vbCBncmFkdWF0aW9ucyBmb3IgZml2ZSBncmFuZGNoaWxkcmVuLCB0YXVnaHQgaGVyIGdyYW5kZGF1Z2h0ZXJzIHRvIGtuaXQgYW5kIHNhdyBoZXIgZWxkZXN0IGdyYW5kZGF1Z2h0ZXIgZ2V0IG1hcnJpZWQuIEppbSBhbmQgQWxpY2UgY2VsZWJyYXRlZCB0aGVpciA1MHRoIGFubml2ZXJzYXJ5IHdpdGggYSBjcnVpc2Ugb24gdGhlIE1TIEtlbm9yYSwgdGhlaXIgNjB0aCBhbm5pdmVyc2FyeSB3aXRoIGZhbWlseSBhbmQgZnJpZW5kcywgYW5kIHRoZWlyIDY1dGggd2l0aCBhIGZhbWlseSBncm91cCBTa3lwZSB2aWRlbyBwYXJ0eSEgSmltIGFuZCBBbGljZSBsZWZ0IHRoZSBob3VzZSBpbiBMYWtlc2lkZSBhbmQgbW92ZWQgaW50byBhIGNvbmRvIGFsbW9zdCBuaW5lIHllYXJzIGFnbyB3aGVuIHN0YWlycyBiZWNhbWUgdG9vIG11Y2ggb2YgYSBjaGFsbGVuZ2UgZm9yIGhlci4gCk1yIEZpdHpwYXRyaWNrIHdhcyBhdCB0aGUgc2Nob29sIGZyb20gMTk4NiB0byAxOTkwIGFuZCBoYXMgZ29uZSBvbiB0byBoYXZlIGEgc3VjY2Vzc2Z1bCBjYXJlZXIgaW4gdGhlIHJhZGlvIGluZHVzdHJ5LiAKR29vZCBsdWNrIQpNYXNzYWdlIHlvdXIgbGVncyBmcm9tIHlvdXIgZmVldCB1cCB0byB0aGUgZ3JvaW4uIApJZiB5b3UgZG8gbm90IHdhbnQgYW55IHBlcnNvbmFsIGluZm9ybWF0aW9uIHNoYXJlZCwgeW91IG1heSBhbHdheXMgZGVjbGluZSB0byBwYXJ0aWNpcGF0ZSBpbiB0aGUgc3dlZXBzdGFrZXMsIGNvbnRlc3QsIG9yIHNwZWNpYWwgb2ZmZXIuLiAKSWNoIHBlcnNubGljaCBnZWhlIGJlaSBDRyBudXIgc2VsdGVuIEFsbCBJbiBtaXQgbnVyIGVpbmVtIFBhYXIuIApJbiBjYXNlIG9mIGEgdGllLCB0aGUgcGFpciBvZiB0aGUgaGlnaGVzdCByYW5rIHdpbnMuIElmIHJhbmtzIGFyZSB0aWVkLCB0aGVuIHRoZSBoYW5kIHdpdGggdGhlIGhpZ2hlc3Qgbm9uIHBhaXJlZCBjYXJkIHdpbnMuIFBhbnRzLCBzaG9lcywgZ2xvdmVzIGFuZCBzb21lIG90aGVyIHRoaW5ncyBjb21lIGluIHBhaXJzLCBhbmQgaW4gZ2VuZXJhbCB1c2FnZSwgYSBwYWlyIGlzIHR3byAoYXMgeW91IHByb2JhYmx5IGFscmVhZHkga25ldykuIEZ1cnRoZXIsIHdlIGNhbiB0YWxrIGFib3V0IG9uZSBwYWlyLCBvciBhIG51bWJlciBvZiBwYWlycyBvZiB0aGluZ3MuIEhlIGJvdWdodCBhIHBhaXIgb2YgcGFudHMgYW5kIHR3byBzcG9ydCBzaGlydHMuIFRoZSBib3kgYW5kIGdpcmwgZWFjaCBwYWNrZWQgYSBwYWlyIG9mIHdhcm0gZ2xvdmVzIGZvciB0aGUgdHJpcC4gSGVyZSBhcmUgc29tZSBleGFtcGxlcyBvZiB0aGUgcGx1cmFsIHVzYWdlOiBTZXZlcmFsIHBhaXJzIG9mIGdsb3ZlcyB3ZXJlIGx5aW5nIG9uIHRoZSB0YWJsZSBieSB0aGUgZG9vci4gVGhlIGNsZXJrIHJhbmcgdXAgdGhlIHRocmVlIHBhaXJzIG9mIHBhbnRzIGFuZCB0aGUgYmVsdCBmb3IgdGhlIHlvdW5nIG1hbi4gVGhlcmUgd2VyZSBtYW55IHBhaXJzIG9mIHNob2VzIG9uIHRoZSBkaXNjb3VudCByYWNrLiAoRnVsbCBBbnN3ZXIpClNjdW0gYWxzbyBsaWtlIHRvIGdldCBpbiBjbG9zZSwgSSBjYWxsIGl0ICJrbmlmZSBmaWdodGluZyIgc3R5bGUsIGV2ZW4gYmVmb3JlIHRoZXkgaGFkIGZlYXJsZXNzbmVzcyBzY3VtIGxpa2VkIHRvIGJlIGNsb3NlciB0byB0aGVpciBvcHBvbmVudHMgdGhhbiB0aGUgb3RoZXIgZmFjdGlvbnMuIEd1cmkgZ2V0cyBleHRyYSBmb2N1cyBhdCByYW5nZSBvbmUgb2YgZW5lbWllcywgUGFsb2IgYW5kIFRvcmtpbCBNdXggbGlrZSB0byBzdGF5IGF0IHJhbmdlIDEgMiB0byBkaXNydXB0IHRoZWlyIGVuZW1pZXMgKGJyYXZlIGluIGEgaHdrKS4gU3R1ZmYgbGlrZSB0aGF0IG1ha2VzIHRoZSBzY3VtIHNoaXBzIGZlZWwgdmVyeSBkaWZmZXJlbnQgdGhhbiB0aGUgb3RoZXIgdHdvLgpGZWIgMjgsIDIwMTYgLiBObyBuZWVkIHRvIGJ1eSBhIHBhdHRlcm4gYm9vayB3ZSBoYXZlIGZpdmUgRlJFRSBrbml0dGluZyBwYXR0ZXJuIGJvb2tzIC4gWW91J2xsIGRvd25sb2FkIGVhY2ggZUJvb2sgYXMgYSBQREYsIGtlZXBpbmcgYWxsIHRoZSBwYXR0ZXJucyBpbi4gJDI2LjAwOyBCdXkgSXQgTm93OyBGcmVlIFNoaXBwaW5nLiA1IHdhdGNoaW5nLiBWaWV3IERldGFpbHMgLiAxMDAwIEtOSVRUSU5HIFBBVFRFUk5TIEJPT0sgKDcwMCBLbml0IDMwMCBDcm9jaGV0KSAgIEphcGFuZXNlIENyYWZ0IEJvb2suIApJdCBpcyBmb29saGFyZHkgdG8gZGlzcmVnYXJkIHRoZSBwbGF5ZXIncyBjb21wZXRlbmNlIGJhc2VkIG9uIGhvdyB0aGV5IGxvb2ssIG9yIGFwcGVhciB0byBiZSBhY3RpbmcuIEluIGJ1c2luZXNzLCBtYW55IG9mIHRoZSB0b3VnaGVzdCBsZXNzb25zIGhhdmUgYmVlbiBsZWFybmVkIGJ5IG1pc3VuZGVyZXN0aW1hdGluZyB0aGUgY29tcGV0aXRpb24uIFRoYXQncyB3aHkgZXhwZXJpZW5jZSBpcyBpbXBvcnRhbnQgaW4gZ2FtZXMgb2YgcG9rZXIuIApUaGlzIFNhdHVyZGF5IGF0IFRyaWRlbnQgZWxsZXJzIGFuZCBDYWZlLCB0aGUgc2VsZiBjYXJlIGR1IGpvdXIgd2lsbCBiZSBlbmpveWluZyBhZHVsdCBjb2xvcmluZyBib29rcyBhbmQgd2F0Y2hpbmcgYSBzY3JlZW5pbmcgb2YgZmVlbCBnb29kIFBpeGFyIGZpbG0gIk1vYW5hLiIgU29tZXRoaW5nIHRlbGxzIHVzIHlvdSBjb3VsZCBwcm9iYWJseSBjb2JibGUgdG9nZXRoZXIgY29sb3JpbmcgYm9va3MgYW5kIGEgIk1vYW5hIiBCbHUgUmF5IGF0IGhvbWUsIGFzIHdlbGwsIGJ1dCBUcmlkZW50IGRvZXMgb2ZmZXIgdGhlIGNvbW11bml0eSBhbmQgdGhlIGRyaW5rIHNwZWNpYWwuIE9uICJLaW1tZWwsIiB0aGUgY29tZWRpYW4gYWxzbyBzYWlkIHRoYXQgaGUncyB3cml0dGVuIHNvbWUgb2YgaGlzIG1vc3QgImR5bmFtaWMsIGludHJvc3BlY3RpdmUiIG1hdGVyaWFsIGZvciB0aGUgVGVsbCBJdCBMaWtlIEl0IElzIHRvdXIuIApJbiB0aGUgYmVnaW5uaW5nLiAKT24gcGV1dCBsZSBjaGlmZnJlciBhdSBjb3VycyBkZSBjZXMgMzMgZGVybmlyZXMgYW5uZXMuIApIZSB0b2xkIG1lIHRoYXQgaGUga25vd3MgaG93IG9uZSBnb29kIHBlcnNvbiBpbiBsaWZlIGNhbiBtYWtlIGEgdG90YWwgc2hpdCBzYW5kd2ljaCBiZXR0ZXIuIApHaXZlIHlvdXIgcm9vbSBhICJWZWdhcyIgZmVlbC4gRGVjb3JhdGUgeW91ciByb29tIHdpdGggbG90cyBvZiBvdmVyIHRoZSB0b3AgTGFzIFZlZ2FzIGV4Y2Vzcy4gSGF2ZSBmdW4gd2l0aCB5b3VyIGRjb3IgYW5kIHJlbWVtYmVyICAgdGhlIGdsaXR6aWVyIGFuZCB0YWNraWVyIHRoZSBiZXR0ZXIuIApBIGNvbmZpZGVudGlhbCBidXQgbm90IGZyZWUgd2F5IGlzIHRvIHNpbXBseSBoZWFkIHRvIGEgbGFiIGdpdmUgdGhlbSBhIGZha2UgbmFtZS4KTHVkZHl2b24gdQpDQUxHQVJZICAgQnJpdGlzaCBDb2x1bWJpYSBmaXJlZCB0aGUgbGF0ZXN0IHJvdW5kIFRodXJzZGF5IGluIHRoZSBOb3J0aCBBbWVyaWNhbiBiYXR0bGUgdG8gd29vIG5hdHVyYWwgZ2FzIHByb2R1Y2VycywgdW52ZWlsaW5nIG1pbmlzY3VsZSByb3lhbHR5IHJhdGVzIGFuZCBtaWxsaW9ucyBvZiBkb2xsYXJzIGluIGZyZXNoIGluZnJhc3RydWN0dXJlIGluY2VudGl2ZXMgaW4gYSBtb3ZlIHRoYXQgbWF5IGZvcmNlIG5laWdoYm91cmluZyBBbGJlcnRhIHRvIHJlc3BvbmQgdG8gaW4ga2luZC4gUmVkdWNlZCB0aGUgcm95YWx0eSByYXRlIG9uIHdlbGxzIGRyaWxsZWQgYmV0d2VlbiBTZXB0ZW1iZXIgYW5kIEp1bmUgMjAxMCB0byAyJSBmb3Igb25lIHllYXIuIApJIHRob3VnaHQgdGhhdCB3aGF0IHdlIG5lZWQgdG8gbWFrZSB2aWRlb3Mgb2YgdGhlc2UgcGVvcGxlIHdobyBhbGwgaGFkIHRoZXNlIGRpc2Vhc2VzLCBqdXN0IGJsdW50IHRhbGsgYWJvdXQgYnJlYWtpbmcgcmlicyBmcm9tIGNvdWdoaW5nIHNvIGhhcmQgZnJvbSB3aG9vcGluZyBjb3VnaCwgZXRjLgpBbmQgT3V0ZmllbGQgY291bGQgYmUgU2NoaWVyaG9seiwgRGF2aXMgYW5kIExld2lzIHdpdGggQm9uZHMgYW5kIFdpbm4uIApQZW5kYW50IGxhIHByaW9kZSBkdSByYW1hZGFuLCB1biBkaXNwb3NpdGlmIHBhcnRpY3VsaWVyLCBkaiB0ZXN0IGwnYW4gcGFzcyBwYXIgbGUgY29tbWlzc2FpcmUgSmFjcXVlcyBSaWdvbiwgZXN0IG1pcyBlbiBwbGFjZS4gVmFscmllIEdvZXR6LCBjb21taXNzYWlyZSBkdSAxOGUgYXJyb25kaXNzZW1lbnQgZW4gYSBkdGFpbGwgbGVzIG1lc3VyZXMuIElsIHkgYSBlbiBmYWl0IHVuIGRvdWJsZSBkaXNwb3NpdGlmIGF2ZWMgbGEgcHJ2ZW50aW9uIGQnYWN0ZXMgdGVycm9yaXN0ZXMgc3VyIGxlcyBsaWV1eCBkZSBjdWx0ZSBkJ3VuZSBwYXJ0LCBldCB1bmUgdmlnaWxhbmNlIG5jZXNzYWlyZSBkdSBmYWl0IGRlcyB0cnMgbm9tYnJldXNlcyBmYW1pbGxlcyBxdWkgdmllbm5lbnQgc2UgcmF2aXRhaWxsZXIgZW4gZ3RlYXV4IGV0IGF1dHJlcyBkZW5yZXMgbGllcyBhdSByYW1hZGFuLCBkJ2F1dHJlIHBhcnQuIApUaGVuLCB0aGUgbGFzdCBtb250aCBJIHN3aXRjaCB0byBLZXRvIGFuZCByYW4gbXkgbGFzdCBsb25nIHJ1biB3aXRoIG5vIGdlbCBvciBmb29kIGFuZCB3YXMgZmluZS4gCkRhcyBMYSBHYXJ6YSwgd2llIGRpZSBpbW1lciBub2NoIHR5cGlzY2hlIHBhbG1lcmlzY2hlIENhZiBCYXIgaGV1dGUgaGVpdCwgaXN0IGVpbiBPcnQgenVtIFdvaGxmaGxlbi4gRXMgZ2lidCBuZWJlbiBkZW4gbGVja2VyZW4gR2VyaWNodGVuIChuYXRybGljaCkgZnJpc2NoZSBTZnRlLCBLYWZmZWUgdW5kIGVpbmlnZXMgbWVoci4gVW5kIGRhcyBCZXN0ZSBpc3Q6IENsYWlyZSBiaWV0ZXQgYXVjaCBCIGFuLiAKV2hhdCBJIHdhbnQgdG8gYmUgaXMgbGlrZSB0aGUgaW1hZ2VzIG9mIEogTG8gdGhhdCBzYXR1cmF0ZSBvdXIgY3VsdHVyZSBhbmQgbXkgaW1hZ2luYXRpb24uLiAKQmV0LCBjYWxsLiBUdXJuIDVjLCBiZXQsIGNhbGwuIApJIGZlbHQgYXJvdW5kIHdpdGggbXkgZmluZ2VyIGFuZCBmb3VuZCB0aGF0IG9uZSB0ZXJtaW5hbCB3YXMgdmVyeSBob3QuIEkgY291bGQgYWxzbyBmZWVsIHRoYXQgdGhlIG51dCB3YXMgbG9vc2UsIHNvIEkgd2VudCB0byBnZXQgYSB3cmVuY2ggYW5kIGNhbWUgYmFjayB0byB0aWdodGVuIGl0LiBJIGhhdmUgdG8gY2hlY2sgdGhlc2UgdGhpbmdzIGV2ZXJ5IG5vdyBhbmQgdGhlbjsgdGhleSBkb24ndCB1c3VhbGx5IGxvb3NlbiB1cCwgYnV0IEkgd2Fzbid0IGNvbmNlcm5lZC4gCkhlIHdhcyBwcmVjZWRlZCBpbiBkZWF0aCBieSBoaXMgZ3JhbmRwYXJlbnRzLCBUb21teSBTbWl0aCwgSGVsZW4gV2lua2xlciBhbmQgUm9zcyBhbmQgTWFyaWUgTXVycnkuIEEgbWVtb3JpYWwgaGFzIGJlZW4gZXN0YWJsaXNoZWQgaW4gaGlzIG1lbW9yeS4gCk1saXNzYSBCb3VmZmFyZCwgb3JnYW5pc2F0cmljZSBkZSBsYSBSYW5kb25uZSBkZXMgZGVtb2lzZWxsZXMgZGUgbCdFc3QsIGV0IE1hcmlhIEZvcnRpbiwgbWFycmFpbmUgZGUgbGEgMTBlIFJhbmRvbm5lIFBob3RvIDogUmFkaW8gQ2FuYWRhIC8gSm9hbmUgQnJ1YgpEb25jLCBsYSBwYXJ0IGRlIGwnb2xpZW4gZXQgZHUgcGhvdG92b2x0YXF1ZSBuJ2VzdCBwYXMgcHJzIGRlIGRldmVuaXIgZG9taW5hbnRlLiAKTGV0IG5vdCBsZWF2ZSBvdXQgdGhlIG1lbjsgdGhleSBuZWVkIHRoZWlyIG1vbWVudCB0byBzaGluZSBhcyB3ZWxsLiAKV29tZW4gc29jY2VyIHRlYW0gc3VlcyBmb3IgZXF1YWwgcGF5SnVzc2llIFNtb2xsZXR0IGluZGljdGVkIGluIENoaWNhZ29DaGVsc2VhIE1hbm5pbmcgc2VudCB0byBqYWlsIGZvciByZWZ1c2luZyB0byB0ZXN0aWZ5IG9uIFdpa2lMZWFrc1RydW1wIGZlZWxzICJ2ZXJ5IGJhZGx5IiBmb3IgUGF1bCBNYW5hZm9ydCJDQlMgRXZlbmluZyBOZXdzIiBoZWFkbGluZXMgZm9yIEZyaWRheSwgTWFyY2ggOCwgMjAxOUFsYWJhbWEgcGFzdG9yIGhlbHBpbmcgaGlzIGNvbW11bml0eSBoZWFsIGFmdGVyIHRoZSBkZWFkbHkgdG9ybmFkb0p1c3RpY2UgRGVwYXJ0bWVudCBjcmFja2luZyBkb3duIG9uIGZpbmFuY2lhbCBzY2FtcyB0YXJnZXRpbmcgdGhlIGVsZGVybHlGZWFyIGFuIElSUyBhdWRpdD8gRG9uICAgdGhlIG9kZHMgYXJlIHdpdGggeW91VGF4cGF5ZXIgZ3JvdXAgdXJnZXMgZXh0ZW5kaW5nIGZpbGluZyBkZWFkbGluZSB0byBNYXkgMTVTb21lIHRheCBwcmVwYXJlcnMgcHJvbWlzZSBmYXQgcmVmdW5kcywgdGhlbiBmbGVlY2UgY29uc3VtZXJzMjAxOSB0YXggcmV0dXJuczogSG93IHRvIGZpbGUgeW91ciB0YXhlcyBmb3IgZnJlZUF2ZXJhZ2UgdGF4IHJlZnVuZCBub3cgc2xpZ2h0bHkgaGlnaGVyIHRoYW4gbGFzdCB5ZWFyUm95IE1vb3JlIHNheXMgaGUgaXMgInNlcmlvdXNseSBjb25zaWRlcmluZyIgU2VuYXRlIHJ1blRydW1wIGRvdWJsZXMgZG93biBvbiBjb2xsdXNpb24gYWxsZWdhdGlvbnMgYW5kIFBhdWwgTWFuYWZvcnQgc2VudGVuY2VkQ2hlbHNlYSBNYW5uaW5nIGphaWxlZCBhZnRlciByZWZ1c2luZyB0byB0ZXN0aWZ5VW52YWNjaW5hdGVkIGJveSBhbG1vc3QgZGllcyBvZiB0ZXRhbnVzUi4gS2VsbHkgb24gd2hldGhlciBwZW9wbGUgc2hvdWxkIHN0aWxsIGJ1eSBoaXMgbXVzaWNSLiAKWSBudWVzdHJvIG1lcmNhZG8gbm8gZXMgdGFuIGdyYW5kZSBjb21vIHBhcmEganVzdGlmaWNhciBncmFuZGVzIHRpcG9zIGRlIGludmVyc2lvbmVzIHkgZXNwZXJhciBsb3MgcmV0b3Jub3MgZGUgU2lsaWNvbiBWYWxsZXkuIApUaGUgY2FsbCBieSA0QSdzIENFTyBNYXJsYSBLYXBsb3dpdHogZm9yIGFnZW5jaWVzIHRvICJzdGFuZCB1cCAgYW5kIHNheSBubyIgd2lsbCBiZSBoZWVkZWQsIHdpdGggYWdlbmNpZXMgcmVmdXNpbmcgdGVybXMgdGhleSBvbmNlIGZlbHQgdGhleSBoYWQgdG8gYWNjZXB0IHRvIHdpbiBuZXcgYnVzaW5lc3MuIApIZSB0cmllZCBhZ2FpbiBhbmQgYXMgdXN1YWwgdGhlIHNjb3JwaW9uIHN0dW5nIGhpbS4gCkkgZG9uJ3Qga25vdy4gU2hlIHNlZW1zIGludGVudCB0byBkdWNrIHRoZSBmaXJzdCBhbWVuZG1lbnQgaXNzdWVzIGJ5IHNxdWFyZWx5IHNheWluZyB0aGF0IHRoZSBwcm9ibGVtIGlzIHdpdGggdGhlIHJlcHJlc2VudGF0aW9ucyBTdG9uZSBhbmQgaGlzIGNvdW5zZWwgbWFkZSBpbiBjb3VydC4gCk5vdyB0aGF0IEkgZ290IG15IFdobyBOZWVkcyBTbGVlcCBudXR0aW5lc3Mgb3V0LCBsZXQncyB0cnkgdG8gZm9jdXMgb24gc29tZSBvZiB5b3VyIGNvbmNlcm5zLiAKU28gdGhlIG1lY2hhbmljIGdldHMgbG9ja2luZyBsdWcgbnV0cy4gCkl0IHdhcyBjb25mdXNpbmcgdG8gZmlndXJlIG91dC5JIGF2b2lkZWQgYXNraW5nIHRoaXMgaW4gYSBwdWJsaWMgdGhyZWFkIGJlY2F1c2UgSSBkaWRuIHdhbnQgYW55IHRvIGRlYWwgd2l0aCBhbnkgdHVtYmxyIHN0eWxlIGRvd252b3RlIG1vYnMgb3IgbHluY2hpbmdzLCBidXQgaXMgdGhlcmUgYSByZWFzb24gd2h5IFBva2Vtb24gYXJ0cyBhbmQgY3JhZnRzIGFyZW4gdGhlaXIgb3duIHN1Yj9JIG1lbnRpb25lZCB0aGlzIGluIHRoZSBzdXJ2ZXkgdGhpbmcgYmVmb3JlIHRoZSB2b3RlIHdhcyBoZWxkLCBidXQgSSBzdGF0ZWQgdGhhdCBpbiBteSBvcGluaW9uLCB0aGUgbWFqb3JpdHkgb2YgdGhyZWFkcyBpbiBhbnkgc3ViIHNob3VsZCBiZSBkaXNjdXNzaW9uIHRocmVhZHMgYW5kIGl0IGxvb2tlZCBsaWtlIGV2ZXJ5IG90aGVyIFBva2Vtb24gc3ViamVjdCBoYXMgdGhhdCBleGNlcHQgZm9yIGFydHMgYW5kIGNyYWZ0cy5bTV0gIDEwIHBvaW50cyAgc3VibWl0dGVkIDIxIGRheXMgYWdvVGhhbmtzIGZvciBhbGwgb2YgdGhpcyEgSSBob3BlIHlvdSBkb24gbWluZCBtZSBwaWdneWJhY2tpbmcgb24geW91ciBjb21tZW50IHRvIGFkZHJlc3Mgb25lIG1ham9yIHBvaW50IGJlZm9yZSBJIHNwZWFrIHRvIHlvdXIgY29tbWVudHM6IGFsbCBvZiBvdXIgcnVsZXMsIGFuZCBhbGwgdGhlIG9wdGlvbnMgd2UgcHV0IGluIHBvbGxzIHdoZW4gd2Ugdm90ZSBvbiB0aGVtLCBhcmUgdGhlIHJlc3VsdCBvZiBjb21tdW5pdHkgZmVlZGJhY2sgcmF0aGVyIHRoYW4gbW9kIHByZWZlcmVuY2Ugb3IgY2hvaWNlLiBIZXJlIHRoZSBmZWVkYmFjayB0aHJlYWQgd2UgcmFuIGZvciB0aGlzIHJvdW5kIHZvdGUgdGhlIG9wdGlvbnMgZm9yIHRoZSBwb2xsIGNhbWUgZnJvbSB0aGF0IHRocmVhZCFJIGZlbHQgbGlrZSB0aGlzIHZvdGluZyBzaG91bGQgaGF2ZSBiZWVuIGhlbGQgYWZ0ZXIgdGhlIEdlbmVyYXRpb24gOCBnYW1lcyB3ZXJlIGFubm91bmNlZCB3aGVuIG1vcmUgcGVvcGxlIGFyZSB2aXNpdGluZyBhbmQgcGF5aW5nIGF0dGVudGlvbi4gUmlnaHQgbm93IHdlIGluIGEgZHJvdWdodCBhbmQgdGhlIHN1YiB2aXNpdHMgdnMgc3Vic2NyaWJlcnMgbnVtYmVycyBzaG93IHRoYXQuVGhlIHJlYXNvbiB3ZSBkaWQgaXQgd2hlbiB3ZSBkaWQgd2FzIHRvIHRyeSBhbmQgZXN0YWJsaXNoIGEgcGF0dGVybiB3aXRoIHByZXZpb3VzIHllYXJzLCB3aGVuIHdlIGhlbGQgdm90ZXMgaW4gbWlkd2ludGVyLiAKVGhlIEhpZ2ggR2FtZXBsYXkgZ3JvdXAgc2hvd2VkIGdyZWF0ZXIgaW1wcm92ZW1lbnQgb24gdmlzdWFsIG1lbW9yeSwgdmVyYmFsIG1lbW9yeSwgYSBtZWFzdXJlIG9mIGV4ZWN1dGl2ZSBmdW5jdGlvbmluZywgYXMgd2VsbCBhcyB0aGUgVG90YWwgQ2hhbmdlIFNjb3JlLiAKV2hlbiBJIHN0YXJ0ZWQgb25lIG9mIG15IGNhbHZlcyB3ZXJlIGRvdWJsZSB0aGUgc2l6ZSBvZiB0aGUgb3RoZXIgb25lIGR1ZSB0byBhbiBpbmp1cnkgSSBnb3QgbGFzdCB5ZWFyIHNvIEkgZ2V0IHRoYXQhIEJ1dCByZWFsbHkgdGhlIG90aGVyIHBlb3BsZSBhdCB0aGUgZ3ltIGFyZSB0aGVyZSBmb3IgdGhlaXIgb3duIHJlYXNvbnMgYW5kIGhvbmVzdGx5IEkgY291bGRuJ3QgZXZlbiB0ZWxsIHlvdSB3aGF0IGEgc2luZ2xlIG90aGVyIHBlcnNvbiB3YXMgZG9pbmcgeWVzdGVyZGF5IHdoZW4gSSB3YXMgZG9pbmcgbXkgdGhpbmcsIGFuZCB0aGF0J3MgcHJvYmFibHkgdHJ1ZSBmb3IgdGhlIG1ham9yaXR5LiAKV2lsbG93IFN0cmVhbSBTcGEgYXQgQWxiZXJ0YSBGYWlybW9udCBCYW5mZiBTcHJpbmdzLCB3aGVyZSB0aGUgIkp1c3QgZm9yIG1lbiIgYW5kICJTcG9ydHMgaW5zcGlyZWQiIHNwYSBtZW51IG9mZmVycyBhIEdlbnRsZW1lbiBCYXJiZXIgRmFjaWFsLCBDbGFzc2ljIEhhbmQgR3Jvb21pbmcsIEdvbGYgUGVyZm9ybWFuY2UgVHJlYXRtZW50IE1hc3NhZ2UgYW5kIG1vcmUuCkRyYWtlJ3MgZW50aXJlIHNvdW5kIGlzIGJhc2VkIG9mZiB0aGF0IGFsYnVtLiBIZSBhbHNvIHB1c2hlZCBmb3IgYSBkYXJrZXIgbW9vZGllciB2aWJlIG9uIFllZXp1cyBhbmQgbW9yZSBpbXBvcnRhbnRseSBvbiBzb25ncyBsaWtlIE1lcmN5IENsaXF1ZS4gVG9ucyBvZiByYXBwZXJzIGhhdmUgbWltaWNlZCB0aGF0IG1vb2R5L2luZHVzdHJpYWwgZmVlbC4gCkRvZXMgaGF2ZSBhbiBlY29zeXN0ZW0gYW5kIHlvdSBtdXN0IGNvbnRpbnVlIHRvIGJyaW5nIG5ldyBwbGF5ZXJzIGluIHRoZSBnYW1lLCBzYWlkIFBhbGFuc2t5LiBUaGF0IHNhaWQsIGxhc3QgeWVhciB0aGUgZXZlbnQgaGFkIGl0cyBtb3N0IGVudHJpZXMgZXZlciwgc29tZSA4MiwzNjAsIGEgbWFzc2l2ZSBudW1iZXIgY29tcGFyZWQgd2l0aCB0aGUgZXZlbnQgaHVtYmxlIGJlZ2lubmluZ3MgYXQgYSBzbWFsbCBzaW5nbGUgdGFibGUgaW4gMTk3MCBhdCBCZW5ueSBCaW5pb24gSG9yc2VzaG9lIENhc2lubywgd2hlcmUgdGhlIHBsYXllcnMgdWx0aW1hdGVseSB2b3RlZCBvbiB0aGUgd2lubmVyIGluIHRoZSBlbmQuClRoZSAybmQgd2F2ZSBvZiBNdXNjdWxhciBDaHJpc3RpYW5pdHkgYmVnYW4gd2l0aCB0aGUgUHJvbWlzZSBLZWVwZXJzLCB0aGF0IG1lbiBvbmx5IG1vdmVtZW50IHRoYXQgcmFsbGllZCBpbiBmb290YmFsbCBzdGFkaXVtcyBpbiB0aGUgMTk5MHMgc28gdGhleSBjb3VsZCBjcnkgYW5kIGh1ZyBhbmQgcHJvbWlzZSB0byBnbyBob21lIGFuZCB0YWtlIHRoZWlyIHJpZ2h0ZnVsIHBsYWNlIGFzIGhlYWQgb2YgdGhlIGhvdXNlaG9sZC4gV2VhciB0aGUgcGFudHMgYW5kIG1ha2Ugc3VyZSB0aGF0IHdvbWVuIGRpZCBub3QuLiAKTWlkZGVscyBoZXQgdWl0dm9lcmVuIHZhbiBlZW4gbmV1cm9sb2dpc2NoIGVuIGZ1bmN0aW9uZWVsIGFjdGllZiBvbmRlcnpvZWsgYmlqIGVlbiBwYXRpbnQgbWV0IE1TIGhlYiBpayBkZSBqdWlzdGUgaW5mb3JtYXRpZSBrdW5uZW4gdmVya3Jpamdlbi4gCkNoaWVmIERlcHV0eSBUb29lbGUgQ291bnR5IEF0dG9ybmV5IEdhcnkgU2VhcmxlIHNoYXJlcyBBbmRlcnNvbiBmcnVzdHJhdGlvbi4KSSd2ZSBhbHNvIGNob3BwZWQgY2hpbGxpZXMgYW5kIHRoZW4gaW5zdWZmaWNpZW50bHkgd2FzaGVkIG15IGhhbmRzIGJlZm9yZSB3b25kZXJpbmcgb2ZmIHRvIHRoZSBiYXRocm9vbSBmb3IgYSBwZWUuIFRoYXQgaHVydHMgYWxzby4KVGhlIGJpbGwsIHdoaWNoIGhhcyAxMSBjbyBzcG9uc29ycyBpbmNsdWRpbmcgc2V2ZW4gRGVtb2NyYXRzLCB3YXMgbWV0IHdpdGggYXBwcm92YWwgZnJvbSB0aGUgUG9rZXIgUGxheWVycyBBbGxpYW5jZSwgYSBXYXNoaW5ndG9uIGJhc2VkIGdyb3VwIG9mIHBva2VyIGVudGh1c2lhc3RzIGZ1bmRlZCBpbiBwYXJ0IGJ5IFBva2VyU3RhcnMgYW5kIEZ1bGwgVGlsdCB0aHJvdWdoIGFuIEludGVybmV0IGdhbWJsaW5nIGFzc29jaWF0aW9uIGluIENhbmFkYS4KSW0gV2VsdHJhdW0sIGJlaSBQb2xhcmV4cGVkaXRpb25lbiwgYmVpbSBiZXJsZWJlbiB1bnRlciBleHRyZW1lbiBCZWRpbmd1bmdlbikgdW5kIGJlaSBuaWNodCBtZ2xpY2hlciBLb250cm9sbGUgZGVzIEdlc3VuZGhlaXRzenVzdGFuZGVzIGR1cmNoIEdlcnRlIHNlaW5lIEFud2VuZHVuZyBmaW5kZW4uIApJZiAxMSBUaW1lcyBTcXVhcmUgaXMgdGhlIG1vc3QgdmlzaWJsZSBmYWNlIG9mIHRoZSBzdHJ1Z2dsaW5nIHJlYWwgZXN0YXRlIG1hcmtldCwgbWFueSBvZiB0aGUgY2l0eSdzIG9mZmljZSBidWlsZGluZ3MgYXJlIGZhY2luZyBhbiBlcXVhbGx5IGRpZmZpY3VsdCBhbmQgdW5jZXJ0YWluIGZ1dHVyZS4gaG91c2luZyBzZWN0b3IgYW5kIGl0cyBEZXByZXNzaW9uIGxpa2Ugd2F2ZSBvZiBmb3JlY2xvc3VyZXMgdGVuZHMgdG8gc3RlYWwgaGVhZGxpbmVzLCBidXQgc2luY2UgdGhlIGZpbmFuY2lhbCBjcmlzaXMgaGl0IGxhc3QgZmFsbCwgY29tbWVyY2lhbCByZWFsIGVzdGF0ZSBoYXMgc3VmZmVyZWQgaXRzIG93biBwcmVjaXBpdG91cyBub3NlZGl2ZS4gVmFjYW5jeSByYXRlcyBuYXRpb253aWRlIGFyZSBob3ZlcmluZyBhdCAxNSBwZXJjZW50LiBJbiBjaXRpZXMgaGVhdmlseSByZWxpYW50IG9uIHRoZSBmaW5hbmNpYWwgc2VjdG9yLCBzdWNoIGFzIFN0YW1mb3JkLCBDVCwgcmF0ZXMgYXJlIGhlYWRlZCB0b3dhcmQgMjAgcGVyY2VudC4gSW4gTWFuaGF0dGFuLCBhIGNpdHkgd2hvc2UgZm9ydHVuZXMgYXJlIHNvIGNsb3NlbHkgdGllZCB0byBXYWxsIFN0cmVldCwgdGhlIGRvd250dXJuIGhhcyBiZWVuIHBhcnRpY3VsYXJseSBydXRobGVzcy4gSW4gRGVjZW1iZXIsIE1pdGNoZWxsIFMuIFN0ZWlyLCBjaGllZiBleGVjdXRpdmUgYXQgU3R1ZGxleSwgYSBuYXRpb25hbCBicm9rZXJhZ2UgZmlybSB0aGF0IHJlcHJlc2VudHMgdGVuYW50cywgdG9sZCBUaGUgTmV3IFlvcmsgVGltZXM6ICJUaGVyZSBoYXMgYmVlbiBtb3JlIGRhbWFnZSB0byByZWFsIGVzdGF0ZSB2YWx1ZXMgaW4gdGhlIGxhc3QgZm91ciBtb250aHMgdGhhbiBpbiBhbnkgb3RoZXIgZm91ciBtb250aCBwZXJpb2QgW2V2ZXJdLiIgU3RlaXIgY2FsbGVkIHRoZSBmYWxsIG9mIHRoZSBtYXJrZXQgImFzdG9uaXNoaW5nLiIKU2luY2UgaGVyIHBhc3NpbmcsIFJhY2VuZXIgaGFkIGRyZWFtdCBvZiB3YXlzIHRvIGhvbm9yIGhlciBkdXJpbmcgZ2FtZXMsIGJ1dCBuZXZlciBmb2xsb3dlZCB0aHJvdWdoLgpUaGUgbW9zdCBkaWZmaWN1bHQgY291bnRyaWVzIHRoYXQgYXJlbiBub3QgaW1wb3J0YW50IGFyZSBDaGluYSBhbmQgT3R0b21hbiwgYm90aCBvZiB0aGVtIGdldCBidXR0ZnVja2VkIGFuZCBzdGFiYmVkIGluIHRoZSBiYWNrIGJ5IEdQcyBjb25zdGFudGx5LCB5b3VyIHBlYWsgcHJvYmFibHkgd291bGQgYmUgcmVjbGFpbWluZyB0aGUgbG9zdCB0ZXJyaXRvcmllcy4KVGhlIG1vc3QgcG9wdWxhciBnYW1lIGluIHRoZSBQYWNpZmljIFBva2VyIHJvb20gYW5kIGluIHRoZSB3b3JsZCBvZiBvbmxpbmUgcG9rZXIgaXMgdGhlIFRleGFzIEhvbGRlbSBnYW1lLiBBIG1heGltdW0gb2YgMTAgcGxheWVycyBjYW4gcGxheSB0aGlzIGdhbWUgb2YgdGhlIHN0YW5kYXJkIDUyIGRlY2sgY2FyZC4gRWFjaCBwbGF5ZXIgaXMgZ2l2ZW4gYW4gZXF1YWwgY2hhbmNlIG9mIGhhbmRpbmcgY2FyZHMgd2l0aCB0aGUgdXNlIG9mIGEgZGVhbGVyIGJ1dHRvbi4gSW4gVGV4YXMgSG9sZGVtIFBva2VyIEdhbWVzLCB0aGUgcGxheWVyIHdobyBhc3NlbWJsZXMgdGhlIGJlc3QgZml2ZSBjYXJkIGhhbmQsIG91dCBvZiB0aGUgc2V2ZW4gcG9zc2libGUgd2lucyB0aGUgcG90LgpVc2luZyBLZWVwYXNzIHdpdGggRHJvcGJveCBvbiBvdXIgaVBob25lLCBBbmRyb2lkIHBob25lLCB0YWJsZXRzLCBMaW51eCBsYXB0b3BzIGFuZCBXaW5kb3dzIGRlc2t0b3BzLCBhbHdheXMganVzdCB3b3JrZWQuIFRoZSBkb3duc2lkZT8gWW91IGhhZCB0byBhbHQgdGFiIHRvIHRoZSBhcHAgYW5kIGNvcHkgYW5kIHBhc3RlIHRoZSBwYXNzd29yZDsgaG93ZXZlciwgbWFueSBzaXRlcyBkb24gdXNlIHJlY29nbml6YWJsZSBwYXNzd29yZCBmaWVsZHMsIHNvIHlvdSBlbmQgdXAgZG9pbmcgdGhhdCB3aXRoIExhc3RQYXNzIGFueXdheS4gClRoZXNlIGFyZSBzZXJpYWwgbnVtYmVycyB0aGF0IGFyZSB1c2VkIGJ5IHRoZSBjYXNpbm8gaW4gb3JkZXIgdG8gcHJvcGVybHkgaWRlbnRpZnkgdGhlIHBpZWNlLiAKTm90aGluZywgbm90IGV2ZW4gVHJ1bXAsIHdpbGwgZGlzcnVwdCB0aGUgZGVtYW5kIGZvciB3aGF0IHRoaXMgb3RoZXIgZWNvbm9teSBpcyBzZWxsaW5nLiBCdXQgaW4gdGVybXMgb2YgR0RQLCB0aGUgdGVjaCBhbmQgc2VydmljZXMgaW5kdXN0cmllcyByZW1haW4gcmVsYXRpdmVseSBzbWFsbCwgc28gdGhlIHN0cnVnZ2xlcyBvZiB0aGUgZWNvbm9teSBiYXNlZCBvbiB0YW5naWJsZSBnb29kcyB3aWxsIGRpY3RhdGUgdGhlIGFnZ3JlZ2F0ZSBmaWd1cmVzLiAKVmVyeSBmaXJzdCBvZiBhbGwsIGFmdGVyIHlvdSBoYXZlIGdvdCBkaXNjb3ZlcmVkIHRoZSBiYXNpY3Mgb2YgcG9rZXIgZ2FtZSBhbmQgaGF2ZSBhdHRlbXB0ZWQgeW91ciBsdWNrIGJ5IHBsYXlpbmcgZmV3IGhhbmRzIHdpdGhpbiB0aGUgb25saW5lIHdvcmxkLCBpdCBpcyBiZXN0IHRvIGF0dGVtcHQgdG8ga25vdyBvciBjb21wcmVoZW5kIGluIHJlZ2FyZHMgdG8gdGhlIG1ham9yIGFzcGVjdHMgb2YgcG9rZXIuIEVmZmVjdGl2ZWx5LCB5b3Ugd2lsbCBkaXNjb3ZlciBlc3NlbnRpYWxseSBmb3VyIHRvIDUgZWxlbWVudHMgb2Ygb25saW5lIHBva2VyIGdhbWVzLiBJbml0aWFsIG9mIGFsbCwgeW91IG91Z2h0IHRvIGdldCBmYW1pbGlhciB3aXRoIHRoZSBydWxlcyBvZiBzZXZlcmFsIHNvcnRzIG9mIG9ubGluZSBwb2tlciBnYW1lcywgc3VjaCBhcyBUZXhhcyBIb2xkJ2VtIHBva2VyIHJ1bGVzLCBPbWFoYSBIb2xkJ2VtIHBva2VyIGd1aWRlbGluZXMsIFNldmVuIENhcmQgU3R1ZCBwb2tlciBydWxlcywgYW5kIG1hbnkgbXVjaCBtb3JlLiAKQmxhY2sgc2xhdmVzIHdlcmUgbm90IGltbWlncmFudHMgKHVud2lsbGluZykgLCBwZW9wbGUgYXNzaWduZWQgdG8gd29yayBpbiBhbm90aGVyIGNvdW50cnkgYXJlbiBpbW1pZ3JhbnRzICh1bmFibGUgZHVlIHRvIHZpc2EgbGltaXRhdGlvbnMpIFBlb3BsZSBleGlsZWQgYXJlIG5vdCBpbW1pZ3JhbnRzLiAKSSdtIG5vdCBzdXJlIG9idmlvdXNseSB3aGF0IHlvdXIgYmVsaWVmcyBhcmUgb3IgYW55dGhpbmcsIGJ1dCBmb3IgdXMgdGhpcyBoZWxwZWQgYmVjYXVzZSBpdCB0dXJuZWQgb3V0IChsb25nIHN0b3J5IHNob3J0KSB0aGF0IGl0IHdhcyBteSBwYXJ0bmVyJ3MgZGVjZWFzZWQgRmF0aGVyIHRyeWluZyB0byBnZXQgYSBtZXNzYWdlIGFjcm9zcy4KTmFjaCB2aWVyIFRhZ2VuIGhhYmVuIHdpciBTa2lhdGhvcyB3aWVkZXIgdmVybGFzc2VuLCB1bSBkaWUgTmFjaGJhcmluc2VsIFNrb3BlbG9zIGluIEF1Z2Vuc2NoZWluIHp1IG5laG1lbi4gV2llIFNraWF0aG9zIGlzdCBhdWNoIFNrb3BlbG9zIGVpbmUgc2VociBnciBJbnNlbCB1bmdldyBmIEdyaWVjaGVubGFuZCwgZGVzc2VuIEluc2VsbiBzaWNoIG5vcm1hbGVyd2Vpc2UgZWhlciBkdXJjaCBLYXJnaGVpdCBhbHMgZHVyY2ggcGZsYW56bGljaGUgYXVzemVpY2huZW4uIApUaGlzIGlzIGEgcG9rZXIgY2hpcCBzZXQgdGhhdCBkZWNpZGVkbHkgc3RhbmRzIG91dCBmcm9tIHRoZSBjcm93ZCB0aGFua3MgdG8gdGhlIHVuaXF1ZSBsb29rIHRoYXQgaXQgZW1ib2RpZXMuIEFyZSBsb29rcyBpbXBvcnRhbnQgdG8gcG9rZXIgcGxheT8gV2VsbCwgdGhlcmUgaXMgYSBwc3ljaG9sb2dpY2FsIGZhY3RvciBhdCB3b3JrIGFzIHF1YWxpdHkgY2hpcHMgY2FuIG1ha2UgYSBnYW1lIGEgbG90IG1vcmUgZXhjaXRpbmcuIApBdCBsZWFzdCB0aGUgZG9vcnMgc3RheWVkIHNodXQgdGhpcyB5ZWFyISBUaGUgdGhyZWF0IG9mIGFueSBwbGF5ZXIgKGhvbWUgb3IgYXdheSkgaGl0dGluZyBzaXggYW5kIHVuZGVyIHdvdWxkIGJlICJnZWxsZWQiIHNlZW1lZCB0byBhZmZlY3QgdGhlIGhvbWUgdGVhbSBtb3JlIGFzIHRoZXkgc3RydWdnbGVkIHRvIGZpbmQgYW55IHNvcnQgb2Ygc2NvcmUuIApJdCB3YXMgYSBwcmV0dHkgYW1hemluZyBzaWdodCBhbHRob3VnaCBKZXNzIGxpa2VuZWQgb3VyIDIwIG1pbnV0ZXMgdGhlcmUgdG8gc21va2luZyBzaXggcGFja3Mgb2Ygc3VsZnVyIGZsYXZvcmVkIGNpZ2FyZXR0ZXMuIFl1bS4uIApBbmQgYXQgdGhlIHRpbWUgR2VpbWVyIHNhaWQgaXQgd2FzIGRlZmluaXRlbHkgbm90IGNvbnNlbnN1YWwsIGJ1dCBpdCB3YXMgYWxzbyBub3QgdGhlIGZpcnN0IHRpbWUgc2hlIGhhZCBzZXggbm9yIHRoZSBmaXJzdCB0aW1lIHNoZSBoYWQgYWxjb2hvbC4gCkZpcnN0bHksIHlvdXIgc3RlcCBkYWQgKD8pLCBhc3NhdWx0ZWQgeW91LCBhbmQgdGhleSBhcmUgYWxsIHN0aWxsIG9uIGJvYXJkIHdpdGggaGltICAgdGhhdCBhbG9uZSBpcyBlbm91Z2ggdG8gY3V0IHRoZW0gb3V0IG9mIHlvdXIgbGlmZS4KSSBmcm9tIGEgc21hbGwgdG93biBhbmQgbXkgZnJpZW5kcyBhcmUgcGVvcGxlIEkgd2VudCB0byBzY2hvb2wgd2l0aCBmcm9tIEtpbmRlcmdhcmRlbiBvbi4gV2Ugc3BlbnQgb3VyIHdob2xlIGNoaWxkaG9vZHMgc2xlZXBpbmcgYXQgZWFjaCBvdGhlcnMgaG91c2VzIG1vcmUgbmlnaHRzIGEgd2VlayB0aGFuIHdlIHNsZXB0IGF0IG91ciBvd24uIAooVGhlcmUgd2VyZSBvdGhlciBmYWN0b3JzIHRoYXQgd2VudCBpbnRvIG1lIGdvaW5nIGdmIHdpdGhvdXQgdGhlIHRlc3QuIApMaWtlIG90aGVyIHlvdXRoIEkndmUgc3Bva2VuIHRvIHRoaXMgd2VlaywgdGhlIHN0dWRlbnRzIHBhcnRpY2lwYXRpbmcgaW4gdGhlIGludGVybmF0aW9uYWwgZGlhbG9ndWUgdG9sZCBtZSB0aGV5IHdlcmUgc2hha2VuIGJ5IHRoZSBkZWF0aCBvZiBhIG1hbiBzbyBlbGV2YXRlZCBieSB0aGVpciBwYXJlbnRzIGFuZCBncmFuZHBhcmVudHMgdGhhdCBoZSBzZWVtZWQgc3VwZXJodW1hbi4gVGhleSBzYWlkIHRoZXkgd29ycmllZCBhYm91dCB3aGF0IHdvdWxkIGhhcHBlbiBub3cgdGhhdCBoZSBpcyBnb25lLiAKQ2FwdGlvbjogU3VwZXJiLiAKSXQgbXVzdCBoYXZlIGp1c3QgYmVlbiB0aGUgcGljdHVyZSBpbiBteSBoZWFkIG9yIHNvbWV0aGluZyBiZWNhdXNlIHRoZSBFU1BOIFBva2VyIENsdWIgV29vZGVuIDQgRGVjayBEZWFsZXIgU2hvZSBoYXMgYWN0aW9uIGJldHRlciB0aGFuIGFueSBvdGhlciBvbmUgSSd2ZSB1c2VkIGJlZm9yZS4gTWF5YmUgbm90LCBidXQgc2luY2UgbXkgZXhwZWN0YXRpb25zIHdlcmVuJ3QgbmVjZXNzYXJpbHkgdGhpbmtpbmcgdGhpcyB3YXMgZ29pbmcgdG8gYmUgYSBob21lcnVuIHB1cmNoYXNlIGl0IGp1c3QgbWFkZSBpdCBhIGxvdCBiZXR0ZXIuIEhvd2V2ZXIsIGl0IHdhc24ndCB0aGUgd29vZCBhcHBlYWwgdGhhdCBtYWRlIHRoaXMgYW4gZXhjZXB0aW9uYWwgYnV5LCBpdCB3YXMgdGhlIG90aGVyIGJlbmVmaXRzIGFzIHdlbGwuCkZpbmFsbHksIHdlIG11c3Qgbm90IGZvcmdldCBhcyB3ZSBzdGlyIHVwIGFuZCBmaWxsIHVwIG91ciBoZWFydHMgdGhhdCB3ZSBoYXZlIHRvIGRldmVsb3AgYW4gYXR0aXR1ZGUgdGhhdCB3ZSdyZSBmZWQgdXAuIFdlIG11c3QgYmVjb21lIHNvIGZlZCB1cCB0aGF0IHdlIGNhbiBubyBsb25nZXIgdG9sZXJhdGUgY29tcGxhY2VuY3kuIApQb3VyIGN1aXNpbmVyLCB1dGlsaXNleiB1bmUgaHVpbGUgbW9ubyBpbnNhdHVyZSBjb21tZSBsJ2h1aWxlIGQnb2xpdmUgb3UgZGUgY2Fub2xhLkNvbnNvbW1leiBkZXMgZnJ1aXRzIGV0IGxndW1lcywgZW4gcGFydGljdWxpZXIgZGUgbGd1bWVzIHZlcnRzLCBvcmFuZ2VzIGV0IGphdW5lcywgZGUgYmFpZXMgZm9uY2VzIGV0IGQnYWdydW1lcy4gCllvdSBtdXN0IHBvc3QgYSBjbGVhciBhbmQgZGlyZWN0IHF1ZXN0aW9uIGluIHRoZSB0aXRsZS4gVGhlIHRpdGxlIG1heSBjb250YWluIHR3bywgc2hvcnQsIG5lY2Vzc2FyeSBjb250ZXh0IHNlbnRlbmNlcy4KU3dlZGVuIGFuZCBVa3JhaW5lICAgbWF5YmUuIEFuIG92ZXIgcmF0ZWQgRnJhbmNlICAgaWYgeW91IGx1Y2t5LiBCdXQgaW4gdGhlc2Uga25vY2sgb3V0IGdhbWVzIHlvdSBwbGF5IHBva2VyIHdpdGggdGhlIGRldmlsIGlmIHlvdSBiZWxpZXZlIHlvdSBjYW4gd2l0aHN0YW5kIEl0YWxpYW4gd2lzZG9tLCB3aXRob3V0IHRoZSBiYWxsLCBleGNlcHQgaW4gYnJpZWYgcGhhc2VzLgpFbiBjZSBxdWkgY29uY2VybmUgbGVzIERMQyBwcmltcywgY2VsYSByZWx2ZSBleGNsdXNpdmVtZW50IGRlIGxhIERpcmVjdGlvbiBEcGFydGVtZW50YWxlIGRlIGxhIFByb3RlY3Rpb24gZGVzIFBvcHVsYXRpb25zIGV4IFJwcmVzc2lvbiBkZXMgRnJhdWRlcywgY29tcG9zZSBkJ2FnZW50cyBjaXZpbHMgZXQgZGUgcG9saWNpZXJzLCB0b3VzIGhhYmlsaXRzIHBhciBsZSBQYXJxdWV0IGRlIFBhcmlzIC4gSWxzIGRvaXZlbnQgdHJlIHNhaXNpcyBkaXJlY3RlbWVudCBzaSBwb3NzaWJsZSBwYXIgY291cnJpZXIgYXUgOCBydWUgRnJvaXNzYXJ0IDc1MTUzIFBhcmlzIENlZGV4IDAzLiIuIApJZiB5b3UgZ2V0IGZydXN0cmF0ZWQsIGl0IGRvZXMgbm9ib2R5IGFueSBnb29kLiAKQnV0IGxvb2sgd2hvJ3Mgc3RpbGwgaGVyZSBhcyBwbGF5IGVuZHMgZm9yIHRoZSBkYXkuIERpYW5lIEJvcmdlciBmcm9tIFdpbm5pcGVnIGlzIG9uZSBvZiBmaXZlIHdvbWVuIGluIHdoYXQgaXMgc3RpbGwgbGFyZ2VseSBhIG1hbidzIGdhbWUuIFNoZSdzIGEgcHN5Y2hvbG9neSBzdHVkZW50IGF0IENhbGlmb3JuaWEgTHV0aGVyYW4gVW5pdmVyc2l0eSwgb2YgYWxsIHBsYWNlcywgd2hlcmUgc2hlIHdpbGwgaGF2ZSB0byBmaW5pc2ggaGVyIG1hc3RlcidzIHRoZXNpcyBpZiBzaGUgZG9lc24ndCBwbGFjZSB3ZWxsIGF0IEJpbmlvbidzLiBCb3JnZXIgaXMgc21hbGwgYW5kIGJsb25kLCBhbmQgdGhvdWdoIHNoZSdzIDI4LCBzaGUgbG9va3MgbGlrZSBhIGxpdHRsZSBnaXJsLiBXaGVuIHNoZSBwbGF5cywgc2hlIHdlYXJzIGEgYmx1ZSBjYXAgdGhhdCBzYXlzIFRPUCBHVU4gYW5kIHNtb2tlcyBsb25nLCBza2lubnkgY2lnYXJzLiBBbGwgeW91IGNhbiBzZWUgaXMgaGVyIGxpdHRsZSwgc3RyYWlnaHQgYWNyb3NzIG1vdXRoIHVuZGVyIHRoZSBwZWFrIG9mIHRoZSBjYXAsIGFuZCB0aGF0IGV2aWwgc21va2UgY3VybGluZyB1cC4KTWlsaG91c2VMYXVnaHNMYXN0ICAxIHBvaW50ICBzdWJtaXR0ZWQgOCBkYXlzIGFnbwpCdXQgaG93IGFyZSB5b3UgcGxhbm5pbmcgdG8gYmVjb21lIHNraWxsZWQgZ3V5IGlmIHlvdSBoYXZlIGxvc3QgYWxsIHRoZSBtb25leT8gVGhlIG1vc3QgaW1wb3J0YW50IGZhY3RvciBvZiBsb25nIHRlcm0gc3VjY2VzcyBpcyB0byBzYXZlIG1vbmV5IGZvciBiaWcgZ2FtZSBhbmQgdGhhdCdzIHdoZXJlIFdQVCBDbHViIGNhbiBoZWxwLiAKVm91cyBwb3V2ZXogaHRlciBsZXMgY2hvc2VzIGVuIGluZGlxdWFudCBsZXMgcXVlc3Rpb25zIHZvdXMgdGVuYW50ICBjdXIuQ2UgcXUnaWwgZmF1dCByZXRlbmlyTGVzIHRlbmRhbmNlcyBhY3R1ZWxsZXMgc29udCBlbiBmYXZldXIgZCd1bmUgcmdpbWUgbyBsZXMgaHlkcmF0ZXMgZGUgY2FyYm9uZXMgKHN1Y3JlcykgZGV2cmFpZW50IGNvbnN0aXR1ZXIgbGEgcGFydCBsYSBtb2lucyBpbXBvcnRhbnRlIChyZ2ltZSBwYWxvIHZvaXIgY3RvZ25pcXVlIGVuIGNhcyBkZSBjYW5jZXIgZXQgb3UgZCdBbHpoZWltZXIpLiAKU3RpciB0aG9yb3VnaGx5LiBHZXQgYSBzb2Z0IGNsZWFuIHNwb25nZSBvciBjbG90aCwgc29hayBpdCBpbiB0aGUgbWl4dHVyZSB0aGVuIHdyaW5nIGl0IG91dC4gClRoZWlyIHBoaWxvc29waHkgYW5kIHN0cmF0ZWd5IGlzIHRvIGlkZW50aWZ5IGxvY2FsIHN0b3J5dGVsbGVycyB0aGF0IHdpbGwgZW5oYW5jZSB0aGVpciBwb3J0Zm9saW8gb2YgbW92aWVzLiAKSGVyZSdzIGhvdyAnWCBGYWN0b3InIGF1ZGl0aW9ucyB3ZXJlIHNhbWUgYXMKV2hhdCBWb2xrc3dhZ2VuIGRpZCBhbmQgaG93IHRoZXkgZ290IGNhdWdodApXb3JzdCBvZiBhbGwsIG5vIG1hdHRlciB3aGF0IHRoZSBDZW50cmFsIEV4ZWN1dGl2ZSBDb21taXR0ZWUgb2YgdGhlIFBQUCBvciB0aGUgUmFhYml0YSBDb21taXR0ZWUgb2YgdGhlIE1RTSBkZWNpZGUsIHRoZSBjaGFuY2VzIHRoYXQgYSBraWQgaW4gTHlhcmkgd2lsbCBlbmQgdXAgd29ya2luZyBhdCBhIGJhbmsgb24gSS4gSS4gQ2h1bmRyaWdhciBSb2FkIHdpbGwgcmVtYWluIHJpZGljdWxvdXNseSBzbGltLiAKSSBiZWVuIGRlYWxpbmcgd2l0aCB0aGlzIHNoaXQgZm9yIHR3byB5ZWFycy4gSSB0b2xkIHRoZXNlIGd1eXMgSSBoYXZlIHN0YWxrZXJzIGFuZCBpdCB3YXMgc3RyZXNzaW5nIG1lIG91dC4gClNvIHJpZ2h0IG5vdyBpdCBnb2luZyB0byBiZSBhIG1lc3MsIGJ1dCBpdCB3aWxsIGdldCBiZXR0ZXIuIApJIGtpbmQgb2YgZGlkIHRoaXMgYW5kIGhlIHNhaWQgIkkgYWdyZWUgd2l0aCB5b3UiIGFuZCBJIHNhaWQgb24gd2hhdD8gQW5kIGhlIHNhaWQgIm9uIGV2ZXJ5dGhpbmcuIiBBbmQgSSBzYWlkIGJ1dCB3ZSBrZWVwICJhZ3JlZWluZyIgYW5kIG5vdGhpbmcgY2hhbmdlcy4gQW5kIGhlIHdlbnQgc2lsZW50LiBBbmQgSSBzYWlkLCB3aGF0IGlzIGl0LCB3aGF0IGlzIGtlZXBpbmcgeW91IGZyb20gZG9pbmcgaXQ/IEFuZCBoZSBzYWlkICJub3RoaW5nIGlzLCBJJ20gaGFwcHkgdG8gZG8gaXQuIgpXaGVuIHRoZSBjaGFpciBkZXRlY3RzIGFuIGluY3JlYXNlIGluIHRoZXNlIG1ldHJpY3MsIGl0IGludGVycHJldHMgdGhlIGRhdGEgdG8gbWVhbiB0aGF0IHRoZSBhcmVhIGN1cnJlbnRseSBiZWluZyBtYXNzYWdlZCBpcyBwYXJ0aWN1bGFybHkgdGVuc2Ugb3Igc3RpZmYuIFRoZSBjaGFpcidzIG1pY3JvcHJvY2Vzc29yIGFsdGVycyB0aGUgbm9ybWFsIHBhdHRlcm4gdG8gc3BlbmQgbW9yZSB0aW1lIG9uIHRoYXQgYXJlYSBbc291cmNlOiBTYW55b10uLiAKIldoZW4geW91IHNpZ24gZm9yIGJpZyBtb25leSwgdGhlIGZpcnN0IHRoaW5nIHRoZXkgYXNrIHlvdSBpcyB0aGlzOiBkaWQgeW91IGNvbWUgcmVhZHkgdG8gcGxheSBldmVyeSBkYXk/IiBSZWdnaWUgSmFja3NvbiBzYWlkIHRoZSBvdGhlciBkYXksIGFzIGhlIGRpZCBzb21lIFRWIHdvcmsgZm9yIFlFUyBOZXR3b3JrLiBSZWdnaWUga25vd3MgdGhlIGRlYWwgbW9yZSB0aGFuIGFueW9uZTsgaGUgc2l0cyBvbiBvbmUgZXh0cmVtZSBhcyB0aGUgWWFua2VlcycgZ3JlYXRlc3QgZnJlZSBhZ2VudCBhY3F1aXNpdGlvbiBhbmQgRWxsc2J1cnkgc2l0cyB3ZWxsLCBhdCB0aGUgb3RoZXIgZW5kLgpZb3UgY2Fubm90IGJlbGlldmUgdGhhdCBhbnl0aGluZyBleGlzdHMgYmV5b25kIHRoZSByZWFsbSBvZiBodW1hbiBjb21wcmVoZW5zaW9uIHdpdGhvdXQgYSBsZWFwIG9mIGZhaXRoIGJhc2VkIHVwb24gbm90aGluZyByYXRpb25hbC4gClRoaXMgd2FzIGZvcm1lcmx5IGNhbGxlZCBQYWNpZmljIFBva2VyIGFuZCBpdCBpcyBhIGNsYXNzaWMgc2l0ZSB3aGljaCBpcyBrbm93biBmb3IgaXRzIFRleGFzIEhvbGQgRW0gVGFibGVzLiBXaXRoIHRoaXMgc2l0ZSB5b3Ugd2lsbCBnZXQgZ3JlYXQgc29mdCBnYW1lcyBhbmQgdGhlcmUgaXMgcGVvcGxlIHBsYXlpbmcsIGEgbG90IG9mIHRoZW0sIDI0IGhvdXJzIG9mIHRoZSBkYXkuCk5vdXMgY29tcHRvbnMgc3VyIGxhIGNvbGxhYm9yYXRpb24gZGUgdG91cyBsZXMgYXJyb25kaXNzZW1lbnRzIHF1aSBzb250IHJlc3BvbnNhYmxlcyBkZXMgb3ByYXRpb25zIGRlIGRibGFpZW1lbnQgZXQgZCdwYW5kYWdlIHN1ciBsZXVyIHRlcnJpdG9pcmUsIGFmaW4gZGUgc2N1cmlzZXIgcmFwaWRlbWVudCBsZXMgcnVlcyBldCBsZXMgdHJvdHRvaXJzIHN1aXRlICB1bmUgcHJjaXBpdGF0aW9uLiAKSSB0aGluayBkYWlseSBob3cgYXdmdWwgdGhlIGxpdmVzIGFyZSBvZiB0aG9zZSB3aG8gZG9uIHdhbnQganVzdGljZSBmb3IgVEggYnkgYmxhbWluZyBTQSBhbmQgQkQuIFRoZSBoYXRlIGluIHRoZWlyIGhlYXJ0cywgdGhleSB3ZWFyIG9uIHRoZWlyIHNsZWV2ZXMuIFNvbWVob3cgdG8gdGhlIGhhdGVycyB0aGV5IGFyZSBzYXRpc2ZpZWQgaWYgdGhlIHJlYWwga2lsbGVycyBvZiBUSCBnbyBmcmVlLCBiZWNhdXNlIFNBIGlzIGEgYmFkIG1hbi4uIApXaGVuIHlvdSBnZXQgdGhlc2UgYm9udXNlcyB0aGVuIHlvdSBtdXN0IHBsYXkgYSBwcmVkZXRlcm1pbmVkIG51bWJlciBvZiByYWtlZCBoYW5kcy4gQmVmb3JlIHRoZSBpbXBvc2l0aW9uIG9mIGFueSBvbmxpbmUgcGFnZSwgbWFrZSBzdXJlIHRoYXQgeW91IGhhdmUgcmVhZCB0aGUgY29uZGl0aW9ucywgc28gdGhhdCB5b3Uga25vdyBleGFjdGx5IHdoYXQgeW91IGhhdmUgdG8gZG8gdG8gZ2V0IHRoZSBib251cy4uIApUaGUgcmVzdWx0cyBvZiB0aGlzIHRyaWFsIHN1Z2dlc3QgdGhhdCBDTVQgaW4gY29uanVuY3Rpb24gd2l0aCBTTUMgb2ZmZXJzIGEgc2lnbmlmaWNhbnQgYWR2YW50YWdlIGZvciBkZWNyZWFzaW5nIHBhaW4gYW5kIGltcHJvdmluZyBwaHlzaWNhbCBmdW5jdGlvbmluZyB3aGVuIGNvbXBhcmVkIHdpdGggb25seSBzdGFuZGFyZCBjYXJlLCBmb3IgbWVuIGFuZCB3b21lbiBiZXR3ZWVuIDE4IGFuZCAzNSB5ZWFycyBvZiBhZ2Ugd2l0aCBhY3V0ZSBMQlAuClBvc3RzIHNob3VsZCBpbmNsdWRlIGluIGRlcHRoIHF1ZXN0aW9ucyBhbmQgYW5hbHl0aWNhbCBvcGluaW9ucy4gClRoYXQgc2ltcGx5IHRoZSBzdGFydCBvZiBhIHZlcnksIHZlcnksIHZlcnkgbG9uZyBwZXJpb2Qgb2YgbmVnb3RpYXRpb24gYW5kIGRlYWwgbWFraW5nLi4gCkl0J3MgdGhlIGlkZWFsIGNoZXJyeSBvbiBhIG1ldGljdWxvdXMgc3VuZGFlIG9mIGhvcnJlbmRvdXMgc2xhdWdodGVyICAgYXMgdGhlIGRlYXRocyBsZWFkaW5nIHVwIHRvIHRoaXMgbW9tZW50IGludm9sdmVkIHNldHVwcyBubyBsZXNzIGVsYWJvcmF0ZS4gVGhlcmUgd2FzIGEgZHJhd24gb3V0IGZvcmNlIGZlZWRpbmcgdG9ydHVyZSBvZiAiZ2x1dHRvbnksIiBhIGN1c3RvbSBtYWRlIHN0YWIgZGlsZG8gZm9yICJsdXN0LCIgYW5kIHRoZSB1bmZvcmdldHRhYmxlIHllYXIgbG9uZyBlbWFjaWF0aW9uIHByb2Nlc3MgYmVoaW5kICJzbG90aC4iIFJlbWVtYmVyIHRoYXQgYmxlYWsgc2hpdD8gQ29uc2lkZXJpbmcgaGlzIGF0dGVudGlvbiB0byBkZXRhaWwgYW5kIHBsYW5uaW5nLCBKb2huIERvZSBjb3VsZCBoYXZlIGJlZW4gdGhlIGdvZGRhbW4gcHJlc2lkZW50IGlmIGl0IHdlcmVuJ3QgZm9yIGFsbCB0aGUgcHN5Y2hvIGRpYXJpZXMgYW5kIGJsb29kbHVzdC4KSSBoYXBweSB0byBhbnN3ZXIgYW55IG90aGVyIHF1ZXN0aW9ucyBhYm91dCBoYXZpbmcgYSBkb2cgaW4gZ3JhZCBzY2hvb2wgeW91IG1pZ2h0IGhhdmUsIGlmIHRoYXQgaGVscHMhLiAKSW4gdGhlIGFib3ZlIGV4YW1wbGUgaWYgeW91J3JlIG9wcG9uZW50IGlzIGhvbGRpbmcgcG9ja2V0IEFBLCBhbmQgaGFzIGEgbWFkZSBzZXQsIHlvdSBzdGlsbCBoYXZlIGEgMjclIGNoYW5jZSB0byB3aW4gaWYgeW91IGdvIHRvIHRoZSByaXZlci4gClNvb24gd2Ugd2lsbCBoYXZlIHRlbGVwYXRoeSBidXQgdW50aWwgdGhlbiwgSSdkIHJlY29tbWVuZCBqdXN0IGJlaW5nIGEgc2VsZiBhY3R1YWxpemVkIHNlbGYgYW5kIGxldHRpbmcgdGhlIGhvbG9ncmFtIGFyb3VuZCB5b3UgYnJpbmcgaW4gdGhlIHJpZ2h0IHBlb3BsZSBhbmQgbGV0dGluZyB0aGUgd3JvbmcgcGVvcGxlIGZhbGwgYXdheS4uIApJIG1hZGUgdGhhdCBteSBOZXcgWWVhcnMgcmVzb2x1dGlvbiBsaWtlIDUgeWVhcnMgYWdvLiAKWW91IGNhbiBlaXRoZXIgYnV5IGRpZ2l0YWwgbWFnYXppbmVzLCBib29rcyBhbmQgb25saW5lIG5ld3NwYXBlcnMgZnJvbSB0aGUgQm9vayBTdG9yZSwgYnJvd3NlIGFuZCBwbGF5IGVpdGhlciBTb2NpYWwgb3IgUHJlbWl1bSBnYW1lcyBpbiB0aGUgR2FtZSBTdG9yZS4gClRoZSBtb3ZlbWVudCBwb3B1bGFybHkgcmVmZXJzIHRvICJjb3cgc2xhdWdodGVyLCIgYnV0IGl0cyBhaW0gaXMgcHJvdGVjdGlvbiBvZiBhbGwgY2F0dGxlLiBUaGUgbW92ZW1lbnQgaGFzIHdvcmtlZCB1cCBzbyBtdWNoIHBvbGl0aWNhbCBzdGVhbSB0aGF0IFBpaW1lIE1pbmlzdGVyIE5laHJ1IGhhcyBiZWVuIGZvcmNlZCB0byBwcm9jZWVkIGNhdXRpb3VzbHkgb24gd2hhdCBoZSBjb25zaWRlcnMgb25lIG9mIEluZGlhJ3MgbW9zdCBuZWVkZWQgQ29ybmVyc3RvbmUgRXZlbnQgVHVlc2RheSBKRUZGRVJTT04gQSBzaG9ydCBjZXJlbW9ueSBtYXJraW5nIHRoZSBsYXlpbmcgb2YgdGhlIGNvbWVyIHN0b25lIGZvciB0aGUgbmV3IGJ1aWxkaW5nIGF0IHRoZSBKZWZmZXJzb24gQ291bnR5IEhvc3BpdGFsIGFuZCBIb21lIHdpbGwgYmUgaGVsZCBUdWVzZGF5IGFmdGVybm9vbiwgaXQgd2FzIGFubm91bmNlZCB0b2RheSBieSBTdXB0LiBQYXVsIFdpZG1hbm4uIApOdW1pcyBTZWN1cml0aWVzLCBtZWFud2hpbGUsIG5vdGVzIHRoYXQgcmV2ZW51ZSBmcm9tIG1vYmlsZSBjb21tdW5pY2F0aW9ucyBkZXZpY2VzIGlzIGdyb3dpbmcgcmFwaWRseSwgYWNjb3VudGluZyBmb3IgMTclIG9mIFVLIGNhc2lubywgcG9rZXIgYW5kIHNwb3J0cyByZXZlbnVlIGluIHRoZSBmaXJzdCBoYWxmLCBhbmQgZ3Jvd2luZyBmYXN0IGluIG90aGVyIHRlcnJpdG9yaWVzLCB0b28uClNlY29uZDogSSBzYXcgcGVvcGxlIG9mIGRpZmZlcmVudCBjb3VudHJpZXMgd2hvIGhhdmUgc29tZSBtaW5vciBwb2xpdGljYWwgZGlmZmVyZW5jZXMgYXJlIHNoZWx0ZXJlZCB0b2dldGhlciBpbiByZWZ1Z2VlIGNhbXBzIGluIGFuIG9wZW4gZ3JvdW5kLiBJIGRpZCBub3Qgc2VlIHRoYXQgdGhleSBoYWQgYW55IHJvb2Ygb3ZlciB0aGVpciBoZWFkcyBsaWtlIHRlbnRzOyBidXQgdGhleSBhcmUgbHlpbmcgb24gdmFzdCBvcGVuIGdyb3VuZCB1bmRlciBhbiBvcGVuIHNreS4gCkJvbmpvdXIgR2lsbGVzLiAKT24gVHVlc2RheSB0byBhY2NvbW1vZGF0ZSB0aGUgd29yay4KVGhlIFJveWFsIEZsdXNoIGNvbnNpc3RzIG9mIHRoZSBjYXJkcyBUZW4sIEphY2ssIFF1ZWVuLCBLaW5nLCBBY2UuIApBbmQsIG9uIE1hcnMsIHlvdSBkb24gbmVlZCB0byBzcGVuZCBhbnkgZW5lcmd5IGZvciBvcmJpdGFsIGNhcHR1cmUsIGFuZCB5b3VyIGxhbmRpbmcgZW5lcmd5IGlzIGRyYXN0aWNhbGx5IHJlZHVjZWQgYmVjYXVzZSBNT1NUIG9mIHlvdXIgdmVsb2NpdHkgY2FuIGJlIGJsZWQgb2ZmIGluIHRoZSBhdG1vc3BoZXJlLiAKTWFuaWFjcyBoYXZlbid0IGFueSByZWdhcmQgZm9yIHRoZSBxdWFudGl0eSBvZiBtb25leSBhbmQgd2lsbCBmcmVxdWVudGx5IGhhdmUgYSBsb3Qgb2YgaXQuIApHYWJieSAoRXZhIExvbmdvcmlhKSB3ZW50IGZyb20gZGVzaWduaW5nIGhlciBvd24gcGVyc29uYWwgc2hvcHBpbmcgd2Vic2l0ZSB0byBnZXR0aW5nIGhlciBvd24gc2hvdyBvbiB0aGUgSG9tZSBTaG9wcGluZyBOZXR3b3JrLiBOb3cgc2hlIGFyZ3VlcyB3aXRoIGhlciBodXNiYW5kIENhcmxvcyAoUmljYXJkbyBBbnRvbmlvIENoYXZpcmEpIGluIHRoZWlyIGJpZyBob3VzZSBpbiBDYWxpZm9ybmlhLgpUaGV5IGRpZCBhbGwgdGhpcyBhbmQgbXVjaCB3b3JzZS4gQW5kIHRoZW4gc29tZXRoaW5nIGhhcHBlbmVkLiAKVHJ5IHRvIGRldGVybWluZSB3aGVuIHRoZSBzcHJheWluZyBiZWdhbiBhbmQgd2hhdCBjaGFuZ2VzIG9jY3VycmVkIGR1cmluZyB0aGlzIHRpbWUgaW50ZXJ2YWwuIERpZCBhIG5ldyBjYXQgb3IgZG9nIG1vdmUgaW50byB0aGUgbmVpZ2hib3Job29kPyBEaWQgeW91IGdldCBhIG5ldyByb29tbWF0ZSBvciBsb3NlIGEgcm9vbW1hdGU/IElzIHRoZXJlIG5ldyBzdHJlc3NlcyBpbiB0aGUgaG91c2Vob2xkIChjaGFuZ2VzIGluIHlvdXIgc2NoZWR1bGUsIGFyZSB5b3UgZ29pbmcgb3V0IG1vcmUsIGRpZCB5b3UgbG9zZSBvciBnYWluIGEgcm9vbW1hdGUgb3Igb3RoZXIgaG91c2UgZ3Vlc3QsIGlzIHNvbWVvbmUgZmlnaHRpbmcgb3IgZGVwcmVzc2VkLCBldGMuKT8gQ2F0cyBhcmUgZXh0cmVtZWx5IHNlbnNpdGl2ZSB0byB0aGVpciBndWFyZGlhbidzIG1vb2RzIGFuZCB3aWxsIG5vdGljZSBpZiB5b3UgYXJlIG5vdCBmZWVsaW5nIHdlbGwsIGFyZSBkZXByZXNzZWQsIG9yIGFyZSBhbmdyeSBtb3JlIHRoYW4gbm9ybWFsLiAKSWYgeW91IGFyZSBzZWVraW5nIHBsYXlpbmcgY2FyZHMgZm9yIHRoZSBnYW1lIG9mIGJyaWRnZSwgeW91IG1heSBjb25zaWRlciBwdXJjaGFzaW5nIHN0YW5kYXJkIGRlY2tzLiBJdCBpcyBpbXBvcnRhbnQgdG8gdW5kZXJzdGFuZCB0aGF0IG1hbnkgc3RhbmRhcmQgZGVja3MgYXJlIGNoZWFwbHkgbWFkZS4gCk5vdmVscyBieSBFZGdhciBSaWNlIEJ1cnJvdWdoc0pvdXJuZXkgVG8gVGhlIE1vb25CdXJyb3VnaHMnIGNhcmVlciBiZWdhbiBpbiAxOTExLiAKU29vdGhpbmcgU2xvdGggU29hcCBDby4gc29ha3MgdXAgc3VjY2VzcyB3aXRoIG1lc21lcml6aW5nIGJhdGggYm9tYnMgU29vdGhpbmcgU2xvdGggU29hcCBDby4gc29ha3MgdXAgc3VjY2VzcyB3aXRoIG1lc21lcml6aW5nIGJhdGggYm9tYnMgU29vdGhpbmcgU2xvdGgsIGEgbmV3IENsZXZlbGFuZCBiYXNlZCBzb2FwIGNvbXBhbnksIGhhcyBmb3VuZCBzdWNjZXNzIHdpdGggaXRzIGNvbG9yZnVsIGJhdGggYm9tYnMuIEl0IHJlc3VsdGVkIGZyb20gR00ncyBvd24gbWlzbWFuYWdlbWVudCBhbmQgZmxhd2VkIHB1YmxpYyBwb2xpY2llczogU3VzYW4gSGVscGVyIChPcGluaW9uKSBDbG9zdXJlIG9mIEdlbmVyYWwgTW90b3JzJyBMb3Jkc3Rvd24gcGxhbnQgd2FzIG5vdCBpbmV2aXRhYmxlLiBJdCByZXN1bHRlZCBmcm9tIEdNJ3Mgb3duIG1pc21hbmFnZW1lbnQgYW5kIGZsYXdlZCBwdWJsaWMgcG9saWNpZXM6IFN1c2FuIEhlbHBlciAoT3BpbmlvbikgV2UgY2FuJ3QgZWFzaWx5IGN1cmUgR2VuZXJhbCBNb3RvcnMgQ29ycC4ncyBwb29yIGRlY2lzaW9ucyBhbmQgaXRzIHVuZGVydmFsdWluZyBvZiBpdHMgb3duIHBlb3BsZS4gRGVwYXJ0bWVudCBvZiBDb21tZXJjZS4gSGUgcGxhbnMgdHdvIG1vcmUsIG5leHQgdG8gdGhlIGZpcnN0IHBsYW50cy4gQnV0IHJlbmV3ZWQgdGFsayBvZiBhIHN0YXRlIGJhaWxvdXQgZm9yIHRoZSB0d28gRmlyc3RFbmVyZ3kgU29sdXRpb25zIG51Y2xlYXIgcGxhbnRzIGhhcyBqZW9wYXJkaXplZCBmdW5kaW5nIGZvciB0aGUgbmV3IHBsYW50cywgaGUgc2FpZC4gVGhlIGdhcyBwbGFudHMgd291bGQgaGVscCBrZWVwIGN1c3RvbWVyIHByaWNlcyBsb3csIFNpZGVyZXdpY3ogYXJndWVzLiBUaGUgRkVTIGJhaWxvdXQsIGZ1bmRlZCBieSBjdXN0b21lcnMgc3RhdGUgd2lkZSB3aGV0aGVyIG9yIG5vdCB0aGV5IGFyZSBGRVMgY3VzdG9tZXJzLCB3b3VsZCBpbmNyZWFzZSBtb250aGx5IGJpbGxzLgpJIGZlbHQgbGlrZSBJIGhhZCBhIGRlY2VudCB5ZWFyIGluIHRlcm1zIG9mIHJlc3VsdHMsIGJ1dCB3aGVuIHlvdSBicmVhayBkb3duIHRoZSBudW1iZXJzIGludG8gYW4gYWN0dWFsIHByb2ZpdCB2cyBsb3NzLCBJIGVzc2VudGlhbGx5IGJyb2tlIGV2ZW4hCk9uZSBleHBlcmltZW50LCBpbiB3aGljaCByYXRzIHdlcmUgaW1tb2JpbGlzZWQgZm9yIGEgZGF5IChub3QgZWFzeTsgdGhlIHJlc2VhcmNoZXJzIGhhZCB0byBzdXNwZW5kIHRoZSBhbmltYWxzJyBoaW5kIGxlZ3MgdG8ga2VlcCB0aGVtIHN0aWxsKSBmb3VuZCBiaWcgZmFsbHMgaW4gdGhlIGFtb3VudCBvZiBmYXRzIGNhbGxlZCB0cmlnbHljZXJpZGVzIHRha2VuIHVwIGJ5IHRoZWlyIHNrZWxldGFsIG11c2NsZXMuIApNc2dHb2R6aWxsYSAgMSBwb2ludCAgc3VibWl0dGVkIDMgZGF5cyBhZ28KSmV3ZnJvNjY3ICAgMTAzIHBvaW50cyAgc3VibWl0dGVkIDMgbW9udGhzIGFnbwpLcmFmdCBhbGxlZ2VkbHkgdmlzaXRlZCBPcmNoaWRzIG9mIEFzaWEgZmlyc3Qgb24gSmFuLiAxOSwgYSBkYXkgYWZ0ZXIgcG9saWNlICAgd2hvIGhhZCBiZWVuIGludmVzdGlnYXRpbmcgdGhlIGpvaW50IGZvciBhdCBsZWFzdCBzaXggbW9udGhzICAgaGFkIHNldCB1cCBzdXJ2ZWlsbGFuY2UgY2FtZXJhcyBpbnNpZGUgdGhlIGJ1c2luZXNzLCBsb2NhdGVkIDE3IG1pbGVzIGZyb20gdGhlIDc3IHllYXIgb2xkIGJpbGxpb25haXJlIE5GTCBvd25lcidzIFBhbG0gQmVhY2ggYXBhcnRtZW50LgpPbmUgY29tbWVudCB0aGF0IGFubm95cyBtZSBpcyBoaXMgY2xlYXIgbWlzdW5kZXJzdGFuZGluZy9zaW1wbGlmaWNhdGlvbiBvZiBzb21lIG9mIHRoZSBvdmVydXNlIGlzc3Vlcy4gT25lIG9mIHRoZSBiaWdnZXN0IGNvc3RzIGFzc29jaWF0ZWQgd2l0aCBvdmVydXNlIGlzIHBlb3BsZSB1c2luZyB0aGUgZW1lcmdlbmN5IGRlcGFydG1lbnQgYXMgcHJpbWFyeSBjYXJlLCBvciBiZWNhdXNlIHRoZXkncmUgdG9vIGltcGF0aWVudCB0byB3YWl0LiBUaGUgY29zdHMgdGhlcmUgYXJlIHByb2ZvdW5kbHkgaGlnaGVyIHRoYW4gb3V0cGF0aWVudCBwcm9jZWR1cmVzLiBQZW9wbGUgbWF5IG5vdCBsaWtlIHRvIGdvIHRvIHRoZSBkb2N0b3IsIGJ1dCB3aGVuIHRoZXkgdGhpbmsgdGhleSBuZWVkIG9uZSB0aGV5IGJlY29tZSBpbmNyZWRpYmx5IGltcGF0aWVudC4KRWRpdDogQW5ncnlEMDksIEkgaG9uZXN0bHkgYXNrLCBwbGVhc2UgZ28gc3BlbmQgbGlrZSBhbiBob3VyIHJlYWRpbmcgbXkgcG9zdCBoaXN0b3J5LiBUYWtlIGNhcmUgdG8gc2VwYXJhdGUgbWUgdHJvbGxpbmcgYW5kIGRlbGliZXJhdGVseSB0cnlpbmcgdG8gaW5jaXRlIHBlb3BsZSBmcm9tIHRoZSBhY3R1YWwgY29tbWVudHMuIEkga25vdyB3aXRoIHR5cGVkIHdvcmRzIGl0IG5vdCBvZnRlbiBlYXN5IGJ1dCBJIGJlbGlldmUgeW91IG5vdGljZSBhIGNlcnRhaW4gdG9uZSB0aGF0IHNlcGFyYXRlcyB0aGUgdHdvIGFueXdheS4uIApUaGVyZSBhcmUgcGxhY2VzIHRoYXQgZG8gaXQgZm9yIHlvdSBpZiB5b3UgbG9vayBoYXJkIGVub3VnaCwgYnV0IHlvdSBicmVha2luZyB0aGUgT1NYIGxpY2VuY2UgYnkgZG9pbmcgc28gKHlvdSBvbmx5IGFsbG93ZWQgdG8gaW5zdGFsbCBvbiBBcHBsZSBoYXJkd2FyZSkgYW5kIG91dHNpZGUgb2YgQXBwbGUgc3R1ZmYsIE9TWCBjYW4gYmUgZXZlbiBtb3JlIGZpZGRseSB0aGFuIExpbnV4Li4gCkRvbiB3YXMgYSBmb3JtZXIgQ2l0eSBDb3VuY2lsbG9yIGZvciBXYXJkIDMgYW5kIGEgbG9uZyB0aW1lIGVtcGxveWVlIG9mIHRoZSBNaW5pc3RyeSBvZiBMYWJvdXIsIHdpdGggdGhlIE9mZmljZSBvZiB0aGUgV29ya2VyIEFkdmlzb3IuIApOb24gc3Vic2NyaWJlcnMgY2FuIHJlYWQgYW5kIHNvcnQgY29tbWVudHMgYnV0IHdpbGwgbm90IGJlIGFibGUgdG8gZW5nYWdlIHdpdGggdGhlbSBpbiBhbnkgd2F5LiAKUHJvZmVzc2lvbmVsbCBhYnNhZ2VuIHp1IGtubmVuIHVuZCAyLiAKVGhpcyBpcyBnb29kIGlmIHlvdSBwbGF5aW5nIHNvbWVvbmUgYmV0dGVyIHRoYW4geW91LCBidXQgYmFkIGlmIHlvdXIgZ29hbCBpcyB0byBtYWtlIGEgcHJvZml0IGZyb20gbGVzc2VyIG9wcG9uZW50cyAuIFRoZSByZWFzb24gaXMgYmVjYXVzZSB0aGUgb25seSB3YXkgdG8gZWFybiBtb25leSBpcyBub3QgdG8gcGxheSBvcHRpbWFsIGdhbWUgdGhlb3J5IHN0cmF0ZWd5LiAKTGVzIGxldHRyZXMgZGUgIlJvUEhoIiBtZGVjaW4sIHBlcm11dGVzLCBub3VzIGRvbm5lbnQgdHJvaXMgaW5kaWNhdGlvbnMgaW5hdHRlbmR1ZXMgIGNlIHN1amV0LiBMYSBtYWxhZGllIHNlcmFpdCB1biB0YXQgbyBsZSBjb3JwcyBlc3QgZW4gcHJvaWUgYXUgZHNvcmRyZS4gSWwgYXVyYWl0IHBlcmR1IGwnb3JkcmUgcXVpIGxlIHJnaXQgbmF0dXJlbGxlbWVudCBwb3VyIGFkb3B0ZXIgdW4gZm9uY3Rpb25uZW1lbnQgInNhdXZhZ2UiLCBwZXJlaC4gTGUgbWRlY2luIHNlcmFpdCBjZWx1aSBxdWksIHBhciBzZXMgc29pbnMsIHJlbWV0IGxlIGNvcnBzIGRhbnMgbCdvcmRyZSBldCBhaW5zaSBsZSBndXJpdC4gU2kgbCdvcmRyZSBuJ2VzdCBwYXMgcmV0cm91diwgbGUgY29ycHMgc2UgcmFwcHJvY2hlIGRlIGwndGF0IGRlIGxhIGNlbmRyZSwgaFBIZXIsIG1hdGlyZSBtb3J0ZS4gTWFpcyBzJ2lsIHJldHJvdXZlIHNvbiBvcmRyZSwgbGUgY29ycHMgcmV0cm91dmUgc2EgYmVhdXQgbmF0dXJlbGxlIGV0IHBhcmZhaXRlLCBsZSBQZWhSIC4KMTMuIEVQQS9ESEEgc3VwcGxlbWVudHMgbWF5IGFsc28gYmUgdXNlZnVsIGZvciBvdGhlciB0eXBlcyBvZiBjaHJvbmljIGluZmxhbW1hdG9yeSBwYWluLCBzdWNoIGFzIG9zdGVvYXJ0aHJpdGlzIG9yIGNocm9uaWMgYmFjayBwYWluLgpTaG91bGQgYmUgcmVpbnRyb2R1Y2VkLiBXaXRoIGVhY2ggdGllciBvZiBhcm1vciwgYWltIHB1bmNoIGlzIGRlY3JlYXNlZC4gQW4gdW4gYXJtb3JlZCB0YXJnZXQgdGhhdCBpcyBzaG90IHdpbGwgcmVjZWl2ZSBtYXhpbXVtIGFpbSBwdW5jaC4gCllvdSBjYW4gYnV5IGZyb20gc3VwZXJtYXJrZXRzIHRoZXNlIGRheXMgICB0aGUgc3VwZXJzdG9yZXMuIApUYWtlIGEgU2NvdHRzZGFsZSBHb2xmIFZhY2F0aW9uLiBPa2F5IGFsbCB5b3UgZ29sZmVycywgbG9va2luZyBmb3IgYSBkaWZmZXJlbnQga2luZCBvZiBnb2xmIHZhY2F0aW9uLCB0cnkgU2NvdHRzZGFsZSEgR29sZiBpbiB0aGUgZGVzZXJ0LCB0aGUgY3JtZSBkZSBsYSBjcm1lLCBvciBldmVuIGlmIGl0IGlzIGV4cGVuc2l2ZSwgaXQncyBhbiBleHAuCkluIHRoaXMgdmlkZW8sIHlvdSBjYW4gc2VlIGFuIGV4YW1wbGUgd2hlcmUgeW91IHNpZGUgYiwgZGFzaCwgYW5kIHRyeSB0byB0ZWNoIGNoYXNlIHdpdGggYSBmdGlsdC4gVGhhdCBoYXMgemVybyByaXNrIGFuZCBoaWdoIHJld2FyZCAodGhlcmUgaXMgdGVjaG5pY2FsbHkgYW4gb3Bwb3J0dW5pdHkgY29zdCBoZXJlKS4gCkFzIGZvciB0aGUgZGVzdGlueSBpZGVhLCB3aGVuIEkgcmVhZCBpdCwgdGhlIGZpcnN0IHRoaW5nIEkgdGhvdWdodCBvZiB3YXMgYSBzcGVjaWFscyBvciBza2lsbCB0cmVlIGlkZWEgZm9yIGFuIGFjdHVhbCBhYmlsaXR5IGNhbGxlZCBJIG5vdCBzdXJlIGlmIGFueW9uZSBoYXMgdXNlZCB0aGUgYWJpbGl0aWVzIGluIEJHUyBnYW1lcyBhbmQgd2hhdCBlZmZlY3RzIGl0IGhhcywgYnV0IEkgYmVnYW4gdGhpbmtpbmcgdGhhdCBhIERlc3Rpbnkgc2tpbGwgY291bGQgcHJlIGRldGVybWluZSB0aGUgb3V0Y29tZSBvZiByYW5kb20gZmlnaHRzIGluIHlvdXIgZmF2b3VyLCBvbiBFWFRSRU1FTFkgcmFyZSBvY2Nhc2lvbnMgcmVnYXJkbGVzcyBvZiB3aGF0IGFjdHVhbGx5IHRyYW5zcGlyZXMuIFlvdSBleHBsb3JlIGludG8gYSBuZXcgYXJlYSB3aXRoIE9QIGVuZW1pZXMgZm9yIHRoZSBmaXJzdCB0aW1lIGFuZCB5b3Ugc3RpbGwgbGl2ZSB0byBsZWFybiBub3QgdG8gcmV0dXJuIHRoZXJlIHVudGlsIHlvdSByZWFkeS4gClNldmVyYWwgc3R1ZGllcyBoYXZlIGFkZHJlc3NlZCB0aGUgaXNzdWUgb2Ygd2hldGhlciBkaWV0YXJ5IGNoYW5nZXMgY2FuIGVuaGFuY2UgbmV1cm9nZW5lc2lzLiBDYWxvcmljIHJlc3RyaWN0aW9uIGluY3JlYXNlcyB0aGUgcHJvZHVjdGlvbiBvZiBuZXcgbmV1cm9ucyBbNTddLiAKSW4gdGhpcyByZXNwZWN0IHdlIG9uY2UgYWdhaW4gYXBwZWFsIHRvIHRoZSBCcml0aXNoIHB1YmxpYyBhbmQgaW4gcGFydGljdWxhciB0aGUgZmFtaWxpZXMgYW5kIGZyaWVuZHMgb2Ygc29sZGllcnMgd2hvIGhhdmUgZGllZCBvciBhcmUgY3VycmVudGx5IGludm9sdmVkIGluIEFmZ2hhbmlzdGFuIHRvIGVuZ2FnZSB3aXRoIHVzIGluIGFuIGhvbmVzdCBkaWFsb2d1ZS4gVGhlcmUgaXMgY29tbW9uIGdyb3VuZCBiZXR3ZWVuIHVzLiBKdXN0IGFzIHlvdSBncmlldmUgdGhlIGRlYXRocyBvZiB5b3VyIHNvbnMgYW5kIGRhdWdodGVycywgd2UgdG9vIGdyaWV2ZSB0aGUgZGVhdGhzIG9mIHRob3VzYW5kcyBvZiBvcmRpbmFyeSBNdXNsaW0gbWVuLCB3b21lbiBhbmQgY2hpbGRyZW4sIGp1c3QgYXMgbWFueSBvZiB5b3UgYXJlIGF3YXJlIG9mIHRoZSBpbmp1c3RpY2UgYW5kIG9wcHJlc3Npb24gYmVpbmcgY2FycmllZCBvdXQgYnkgdGhlIFVTIGxlZCBhbGxpYW5jZSBpbiBBZmdoYW5pc3RhbiAob2Ygd2hpY2ggdGhlIFVLIGlzIGEgcGFydCkgYW5kIGRvIG5vdCBhZ3JlZSB3aXRoIHlvdXIgY2hpbGRyZW4gYmVpbmcgaW4gdGhpcyB3YXIsIHdlIHRvbyBkZW1hbmQgdGhlIGltbWVkaWF0ZSB3aXRoZHJhd2FsIG9mIGFsbCBCcml0aXNoIHRyb29wcyBmcm9tIHRoaXMgTXVzbGltIGxhbmQuCk9ubHkgbW9sZWN1bGFyIGdlbm90eXBpbmcgY2FuIGRpc3Rpbmd1aXNoIGJldHdlZW4gd2lsZCB0eXBlIGFuZCB2YWNjaW5lIHJlbGF0ZWQgZGlzZWFzZS4KU3VpdHMgYXJlIGlycmVsZXZhbnQuIApJdCBpcyB0aG91Z2h0IHRoYXQgc29tZSBvZiB0aGUgbmV1cm90cmFuc21pdHRlcnMgaW4gdGhlIGJyYWluIHRoYXQgcGxheSBhIHJvbGUgaW4gc2V4dWFsIHJlc3BvbnNlIG1heSBiZSBhZmZlY3RlZCBpbiB3b21lbiB3aXRoIEhTREQuCkl0IGlzIG5vdCBhIHJvZ3VlIGFnZW5jeTsgaXQgaXMgYSBzdGF0ZSB3aXRoaW4gdGhlIHN0YXRlLiAKSXQgd2FzIGEgbm8gb2lsIG1hc3NhZ2UsIGFuZCBJIGhhdmUgaGFkIGEgYm95ZnJpZW5kIGZvciB0d28geWVhcnMgaW4gdGhlIHBhc3QsIEkga25vdyB3aGF0IHRoYXQgc3R1ZmYgZmVlbHMgbGlrZSBsYW5kaW5nIGFueXdoZXJlIG9uIG15IGJvZHkuIAoiVGhlIHB1YiBoYXMgYmVlbiBwb3B1bGFyIHdpdGggdHJhZGllcyBmb3IgeWVhcnMsIGFuZCB3ZSdyZSBpbnRlbmRpbmcgdG8gY29udGludWUgY2F0ZXJpbmcgZm9yIHRoYXQgbWFya2V0LiIgUkVBRCBBTFNPOkxpdHRsZSBDYWVzYXJzIHBpenphIGZyYW5jaGlzZSB0byBsYXVuY2ggaW4gQmF0aHVyc3QgbmV4dCB3ZWVrIE1zIFdpbGxpYW1zIGhhcyBvdmVyIDExIHllYXJzIGV4cGVyaWVuY2UgaW4gdGhlIGhvc3BpdGFsaXR5IGluZHVzdHJ5LCBhbmQgc2FpZCB0aGUga2V5IHRvIHJ1bm5pbmcgYSB0aHJpdmluZyB2ZW51ZSBpcyBtYWludGFpbmluZyBhIHBvc2l0aXZlIHJhcHBvcnQgd2l0aCBjdXN0b21lcnMuIApBIHRhbGwsIGxlYW4sIHBsYWluIHNwb2tlbiBmaWd1cmUsIGludmFyaWFibHkgY3Jvd25lZCBieSBhIGNvd2JveSBoYXQgYWRvcm5lZCB3aXRoIGEgZ2VudWluZSByYXR0bGVzbmFrZSBoZWFkLCBTbGltIHJlbGlzaGVkIGhpcyByZXB1dGF0aW9uIGFzIG9uZSBvZiB0aGUgZmlyc3QgcG9rZXIgc3VwZXJzdGFycyBhbmQgZW5qb3llZCBicmFnZ2luZyBhYm91dCBoaXMgcHJvd2VzcyBhdCB0aGUgYnVzaW5lc3Mgb2YgYmx1ZmZpbmcsIHJhaXNpbmcsIHNlZWluZyBhbmQgZm9sZGluZy4gSGUgb2Z0ZW4gcmVnYWxlZCBBbWVyaWNhbiB0ZWxldmlzaW9uIGNoYXQgc2hvdyBhdWRpZW5jZXMgd2l0aCBob21lc3B1biB3b3JkcyBvZiBhZHZpY2UgZm9yIHdvdWxkIGJlIGhpZ2ggcm9sbGVycy4gCk5vdGhpbmcncyBrZWVwaW5nIHlvdSBmcm9tIHR1cm5pbmcgYSBwcml2YXRlIG1hc3NhZ2UgaW50byAgIGFoZW0gICBhIHNlbnN1YWwgZXZlbnQuIEdldHRpbmcgcmVhY3F1YWludGVkIHdpdGggaGlzIChvciBoZXIpIGJvZHkgZnJvbSB0aGUgZmluZ2VycyBvdXQgaXMgZnVuLCB0b28uIApJIHRoaW5rIGl0IGRlcGVuZHMuIApJIGtub3cgeW91IGFyZSBhbiBvbGQgc291bCBidXQgdGhpcyBkdWRlICh1bmNvbnNjaW91c2x5KSBtYWRlIHlvdSBncm93IHVwIHdheXl5eSB0b28gcXVpY2tseSwgd2F5eXl5IHRvbyB5b3VuZywgYW5kIGluIGEgd2F5IHRoYXQgYnJvdWdodCBhYm91dCBsb3RzIG9mIHBhaW4gYW5kIGNvbmZ1c2lvbi4gClRoZSBvdGhlciBtYWluIHRoaW5nIHRoYXQgbWFkZSBtZSBtb3RpdmF0ZWQgdGhhdCBJIHdhcyB3b3JraW5nIG9uIG15IHRyYW5zaXRpb24gd2FzIGxhc2VyIHRyZWF0bWVudCBmb3IgZmFjaWFsIGhhaXIuIEkga25vdyBsYXNlciB0cmVhdG1lbnQgY2FuIGJlIGV4cGVuc2l2ZSAoaXQgcHJvYmFibHkgb25lIG9mIHRoZSBjaGVhcGVzdC9lYXNpZXN0IHRoaW5ncyB0byBzdGFydCB3aXRoIHRob3VnaCkgYnV0IGl0IHJlYWxseSB3b3J0aCBpdC4gSSBkb24ga25vdyB3aGVyZSB5b3UgZnJvbSBvciBob3cgZXhwZW5zaXZlIGl0IGlzIHRoZXJlLCBidXQgSSBwYWlkIGFyb3VuZCAzMDAgZm9yIGl0LiAKSGVsbCwgaWYgaSBjb3VsZCBqdXN0IGltcG9ydCBpbiBhbiBpbnRlY2ggc2l4LCB0aGF0IHdvdWxkIGJyZWF0aCBhIHNwZWNpYWwgbGlmZSBpbnRvIGFuIG9sZGVyIG11c3RhbmcgaGVyZSBzdGF0ZXNpZGUgKGRvZXMgdGhlIGludGVjaCBoYXZlIHRoZSBzYW1lIG1vdW50aW5nIHBvaW50cyBhcyB0aGUgdGhyaWZ0cG93ZXJzPykuIEkga25vdywgbG9uZyBwb3N0LCBidXQgaXZlIGJlZW4gaGF2aW5nIHRoaXMgc2ltbWVyIGluIG15IGhlYWQgZm9yIGF3aGlsZS4uIApBIGdvb2QsIGluIGRlcHRoIG1hc3NhZ2Ugc2hvdWxkIGxhc3QgYWJvdXQgYW4gaG91ciB0byBhbiBob3VyIGFuZCBhIGhhbGYuIApTaGVsbC4gSSB1c2UgRnJvZ2cgVG9nZ3MgcmlnaHQgbm93LCBhbmQgdGhleSBmaW5lLiBUaGV5IHN1cHBsZW1lbnQgbXkgbW92aW5nIGluc3VsYXRpb24gd2hlbiBJIGdldCBjb2xkLiBNeSBpZGVhbCBzaXR1YXRpb24gaXMgdG8gaGF2ZSB0aGUgRnJvZ2cgVG9nZ3Mgb24gZHVyaW5nIHRoZSBjb2xkZXN0LCB3aW5kaWVzdCBuaWdodCBoaWtpbmcgSSBkby4gT3RoZXIgcGVvcGxlIHVzZSBhIHdpbmQgbGF5ZXIgZm9yIHRoaXMgcHVycG9zZSwgYnV0IEkgZm91bmQgdGhlIEZUcyBib3h5IGFuZCBicmVhdGhhYmxlIGVub3VnaCB0byBmaWxsIHRoZSByb2xlLCBhbmQgdGhleSBlYXN5IGVub3VnaCB0byByZW1vdmUgaWYgSSBnZXQgc2ljayBvZiBpbnN1bGF0aW9uLiBEb3duLCBhZGRlZCB3aGVuIHN0b3BwZWQuIEkgaGF2ZSBhIE1vbnRiZWxsIFN1cGVyaW9yIERvd24sIHdoaWNoIHdvdWxkIGJlIG5vdCBxdWl0ZSB3YXJtIGVub3VnaCBmb3IgdGhvc2UgY29uZGl0aW9ucywgYWx0aG91Z2ggSSBwcm9iYWJseSBqdXN0IHN1Y2sgaXQgdXAgYW5kIGJlIGEgYml0IGNvbGQuIFNoZWxsIG92ZXIgdG9wIGlmIG5lZWRlZCBmb3Igd2VhdGhlciBvciBjb2xkLgpJc2F5dGhpbmdzbGlrZSAgMiBwb2ludHMgIHN1Ym1pdHRlZCA0IG1vbnRocyBhZ28KVGhpbmsgeW91IHNob3VsZCBqdXN0IGJlIHRoaW5raW5nIGFib3V0IHdoYXQgdGhlIG9wcG9uZW50cyBhcmUgdGhpbmtpbmcuIElmIHRoZSB3aG9sZSB0YWJsZSBrbm93cyB5b3UgYXJlIGEgcHJlZmxvcCBuaXQgdGhlbiBldmVyeSB0aW1lIHRoZXkgcmFpc2UgeW91IGl0IHdpbGwgYmUgYXMgYSBibHVmZiwgYmVjYXVzZSB0aGV5IGtub3cgdGhhdCB5b3UgYXJlIG9ubHkgY2FsbGluZyB3aXRoIGFjZXMva2luZ3MuIApHb29kIHdvcmsgaXMgbmV2ZXIgY2hlYXAsIHNvIGRvbnQgbGV0IHlvdXJzZWxmIGJlIGNoZWFwLiBJdCBhbiBpbmR1c3RyeSB0aGF0IENCcyBsb3ZlIHRvIHdvcm0gdGhlaXIgd2F5IGludG8geW91ciBjaGFpciBpbiBhbmQgZXhwZWN0IHRvIGhhdmUgSG9sbHl3b29kIGhhaXIgaW4gb25lIHNlc3Npb24gZm9yIGFzIGNoZWFwIGFzIHlvdSBjYW4gZ2V0IGZvciB0aGUgbGVhc3QgYW1vdW50IG9mIHRpbWUuIERvbiBwdXQgdXAgd2l0aCBpdC4uIApQZW9wbGUgd291bGQgc2tpcCBtZWFscyBpZiBpdCB3ZXJlIHVuYXZhaWxhYmxlIHRvIHNlYXNvbiB0aGVpciBmb29kLiAKR2l2ZSB5b3Vyc2VsZiAxNSBtaW51dGVzIHdhdGNoaW5nIGhvdyBlYWNoIHRhYmxlIHBsYXlzLiBUcnkgdG8gbm90ZSBpZiB0aGVyZSBhcmUgZmFtaWxpYXIgcGxheWVycyBhdCB0aGUgdGFibGVzLiBDaGVjayBvdXQgYSBtaW5pbXVtIG9mIDMgdGFibGVzIGJlZm9yZSBkZWNpZGluZyBvbiBvbmUuIFRha2UgdGhlIGxvb3Nlc3QgdGFibGUsIHNvIHlvdSBjYW4gcGxheSB0aWdodC4gSW4gb3JkZXIgdG8gd2luIGF0IFRleGFzIEhvbGQnZW0sIHlvdSBuZWVkIHRvIHBsYXkgbG9vc2UgYXQgYSB0aWdodCB0YWJsZSBhbmQgdGlnaHQgYXQgYSBsb29zZSBvbmUuCkkgY2Fubm90IGJlbGlldmUgSSBldmVyIGVuam95ZWQgZ29pbmcgaW50byBhIGNhc2lubyBhbmQgcGxheWluZyBwb2tlciwgbGV0IGFsb25lIHRoZSBmYWN0IHRoYXQgSSBkaWQgaXQgZm9yIGEgbGl2aW5nLiA5OSUgb2YgZXZlcnlvbmUgYXQgdGhlIHRhYmxlIGlzIGEgcGllY2Ugb2Ygc2hpdCBhbmQgaXMgaW5zdWZmZXJhYmxlIHRvIGJlIGFyb3VuZC4gSXQgYSBiaXQgYmV0dGVyIGF0IGhpZ2hlciBzdGFrZXMsIGJ1dCBldmVuIHN0aWxsLCBpdCBzdWNoIGEgYmFkIHBsYWNlIHRvIGJlLiBJZiB5b3Ugd2luLCB5b3UgdGhpbmsgaXQganVzdGlmaWVkIGFuZCB0aGF0IHlvdSBkZXNlcnZlIHRoZSBtb25leS4gSWYgeW91IGxvc2UsIHlvdSBmZWVsIGxpa2Ugc2hpdC4gQWx3YXlzLgpDYWxsIGFuZCBrZWVwIGhpcyB3b3JzZSBoYW5kcyBpbi4gV2hlbiB5b3UgY2FsbCB0aGUgcG90IHdpbGwgYmUgMTYgYW5kIFYyIG9ubHkgaGFzIDEyLjUgbGVmdC4gVGhlIG1vbmV5IGlzIHN0aWxsIGdvaW5nIGluIHRoZSBtaWRkbGUgb24gdGhlIHR1cm4gc28gd2h5IG5vdCBrZWVwIGhpcyB3b3JzZSBjaGVjayByYWlzZXMgaW4gdGhlcmUuIApUaGUgb2RkcyB0aGUgcG90IGlzIG9mZmVyaW5nIHlvdSBhcmUgNSB0byAxLiBUaGVyZSBpcyAkNSBpbiB0aGUgcG90LCBhbmQgeW91IG5lZWQgdG8gY2FsbCB3aXRoICQxLiAKT25lIG9mIHRoZSB0ZWxsdGFsZSBzaWducyBvZiBhbnhpZXR5IGFuZCBzdHJlc3MgY2FuIGJlIGNvbnN0cmljdGVkIGJyZWF0aGluZy4gV2hlbiB0aGUgYm9keSBzdGFydHMgdG8gdGFrZSBzaGFsbG93IHNob3J0IGJyZWF0aHMgaW5zdGVhZCBvZiBicmVhdGhpbmcgYXQgYSBuYXR1cmFsIHBhY2UsIGl0IGlzIG5lYXIgaW1wb3NzaWJsZSBmb3Igb25lIHRvIHJlYWNoIGEgcmVsYXhlZCBzdGF0ZS4gUGFydCBvZiB0aGUgcHJvYmxlbSBpcyB0aGF0IHRoZSBtdXNjbGVzIGFyb3VuZCB0aGUgcmliIGNhZ2UgYW5kIGFiZG9tZW4gbWF5IGhhdmUgdGlnaHRlbmVkLCBjb25zdHJpY3RpbmcgYWlyLgpCdXQgd2hlbiB5b3UgZ290IChzdHJpY3QpIFRTIGNvbXBpbGVyIGFuZCBsaW50ZXIgd29ya2luZyB3aXRoIHlvdSwgaXQgcmVhbGx5IGp1c3QgYm9pbHMgZG93biB0byB3aGF0IHlvdXIgdGVhbSBjb25zaWRlcnMgbW9yZSByZWFkYWJsZSBhbmQgZW5mb3JjaW5nIGNvbnNpc3RlbmN5IGlzIHRoZSBrZXkuIElmIHlvdSBhcmUgYWNjaWRlbnRhbGx5IHJldHVybmluZyB1bmRlZmluZWQgYnkgbGluZSBicmVhayBmb2xsb3dpbmcgInJldHVybiIgb3Igc3RhcnRpbmcgYSBsaW5lIHdpdGggIigiIHdpdGhvdXQgYSBzZW1pY29sb24sIHlvdSBrbm93IGltbWVkaWF0ZWx5IGFueXdheS4KSW4gYWRkaXRpb24sIHRoZXJlIHdpbGwgYmUgMTAgc21hbGxlciBzcGFjZSwgY2l0eSBsaXZpbmcgdmlnbmV0dGVzIHRoYXQgd2lsbCBmZWF0dXJlIGdyZWF0IGlkZWFzIGZvciBwYXRpb3MsIGJhbGNvbmllcyBhbmQgY29uZmluZWQgb3V0ZG9vciBhcmVhcy5UaGUgZGlzcGxheSBnYXJkZW5zIGFyZSBhbGwgY3JlYXRlZCBieSB0b3AgZGVzaWduIHByb2Zlc3Npb25hbHMgYW5kIGluc3RhbGxlZCBieSB0aGUgdGFsZW50ZWQgbGFuZHNjYXBlIGFydGlzdHMgd2hvIGFyZSB0aGUgaGVhcnQgYW5kIHNvdWwgb2YgdGhpcyBzaG93LiBUaGVhdHJpY2FsIGxpZ2h0aW5nIGFuZCBzbGlnaHRseSBjb29sZXIgdGVtcGVyYXR1cmVzIGluc2lkZSBhbHdheXMgYWRkIGEgd2hvbGUgbmV3IGRpbWVuc2lvbiB0byB0aGlzIGdhcmRlbiBleHBlcmllbmNlLlB1bmNoaW5nIHVwIHRoZSBjb2xvdXIgYW5kIHB1bXBpbmcgb3V0IHRoZSBwZXJmdW1lLCAzMCwwMDAgYnVsYnMsIHBlcmVubmlhbHMsIHRyZWVzIGFuZCBzaHJ1YnMgaGF2ZSBhbGwgYmVlbiBmb3JjZWQgaW50byBsZWFmIGFuZCBibG9vbS4gCk1hcmMgd2FzIDIwIHllYXJzIG9sZCB3aGVuIGhlIGZpcnN0IHZpc2l0ZWQgQXNwZW4gb24gYSBza2kgdHJpcCBpbiB3aGljaCBoZSBzdGF5ZWQgaW4gdGhlIFJvYXJpbmcgRm9yayBkb3JtaXRvcnkuIApZJ2FsbCByZWFsbHkgb3ZlcnN0YXRpbmcgTWFnaWMgZG9pbmcgYSB0ZXJyaWJsZSBqb2IuIFRoZSBnb2FsIG9mIHRoaXMgc2Vhc29uIHdhcyB0byBtYWtlIHRoZSBwbGF5b2ZmcyBhbmQgaW5qdXJpZXMganVzdCByZWFsbHkgZGVyYWlsZWQgYWxsIG9mIHRoYXQuIApUaGUgd2hvbGUgdGhpbmcgd2FzIHNldCB1cCBmb3IgYSBsb25nIHRpbWUgYmVmb3JlaGFuZC4gCkl0IHdhcyBpbmNyZWRpYmx5IGluYXBwcm9wcmlhdGUgYmVjYXVzZSBteSBmcmllbmQncyBtb20gd2FzIGEgbG9uZyB0aW1lIGRldm91dCBCdWRkaGlzdC4gCiJUaGF0LiBXYXMgdGhlIG1vc3QgZGlzZ3VzdGluZyB0aGluZyBJIGhhdmUgZXZlciBzZWVuIGluIG15IGVudGlyZSBsaWZlLiBJIHRob3VnaHQgdGhlIHNvY2lhbCBqdXN0aWNlIHdhcnJpb3JzIHdlcmUganVzdCBpcnJlbGV2YW50IGlkaW90cyB3aG8gd291bGRuIGNoYW5nZSBhbnl0aGluZywgYnV0IHRoZXkgaGF2ZS4gClRoZXJlIGFyZSBjb3VudGxlc3Mgb3B0aW9uczogd2h5IG5vdCBzcGVuZCBhIHdpbnRlciBpbiB0aGUgQ29sb3JhZG8gUm9ja2llcyBhcyBhIHNraSBzY2hvb2wgb2YgdGhlIGJhZCBiYWN0ZXJpYSB0aGF0IHlvdXIgYm9keSBoYXMgYWNxdWlyZWQgYnkgc2xvd2luZyB0aGUgcHJvY2VzcyBvZiB0aGUgZGlhcnJoZWEuIFlvdSB3aWxsIGZpbmQgdGhhdCB3aXRoIGp1c3QgYSBmZXcgb2YgdGhlIGJhc2ljIHdvcmRzIGFuZCBwaHJhc2VzIGVzY2FwZWQgdGhlIEJ1YmJsZSBJbnZhZGVyLCB5b3UgYXJlIGFsbW9zdCBob21lIGZyZWUuIEJvdGggZ3JvdXBzIGxlYXJuIGFib3V0IHRoZSBvdGhlciBjdWx0dXJlLCBnaXZpbmcgb2Ygd2hhdCB0aGV5IGhhdmUgYW5kIHRpbWVzIHRvIGVuc3VyZSB0aGF0IHRoZSB0cmFjayBpcyBmcmVlIG9mIGRlYnJpcyBCYWNrcGFjayBTdHJhcHMgUGFja2luZyBtb3JlIHRoYW4gdGhlIGJhcmUgZXNzZW50aWFscyB3aWxsIG1vc3QgY2VydGFpbmx5IGxlYWQgdG8gYnJva2VuIHN0cmFwcy4uIApXaGVuIHlvdSBjb25zaWRlciB0aGUgY29uc2VxdWVuY2VzICAgZm9yIGluc3RhbmNlLCB0aGUga2lkcyBnb2luZyBmcm9tIGEgZ29vZCBzY2hvb2wgaW4gYSBuaWNlIG5laWdoYm9yaG9vZCB0byBhIGJhZCBvbmUgaW4gdGhlIGdoZXR0bywgYmVjYXVzZSB0aGF0IGFsbCBNb20gY2FuIGFmZm9yZCAgIGl0IGtpbmQgb2Ygc2FkLiAKIkkgdXNlZCB0byBzdGFuZCBvbiB0aGUgZWRnZSBvZiB0aGUgcGxhdGZvcm0gc2hha2luZyB3aXRoIGV4Y2l0ZW1lbnQsIGhvbGRpbmcgQ2VsaWEncyBhcm0gYXMgdGhlIHRoaW5nIHJvYXJlZCB3aXRoaW4gc2l4IGZlZXQgb2YgdXMuIEp1c3Qgd29uZGVyZnVsLiIKU293aWxvU0MyIHUKVGhlc2UgdHJhY2tzIGFyZSBvbiBhbiBhbGJ1bSBjYWxsZWQgIldhbG1hcnQgc291bmRjaGVjay4iIDUxKSBWYW5pdHkgLiBZb3UgY2FuIG5hYiB0aGlzIHRyYWNrIGZyb20gdmFyaW91cyBvdXRsZXRzL1lvdXR1YmUuIApTdGlsbCBub3QgY29udmluY2VkIHRoYXQgdGhlIGJyb3MgYXJlIGEgYnVuY2ggb2Ygc2V4dWFsbHkgcmVwcmVzc2VkIHBhY2sgYW5pbWFscz8gYWJvdXQgd2UgY2FsbCBEci4gTWVhZCBhbmQgZ2V0IGFuIGFudGhyb3BvbG9naWNhbCBwZXJzcGVjdGl2ZS4gUGFwdWEsIE5ldyBHdWluZWEsIGFtb25nIHRoZSBTYW1iaWEsIHlvdW5nIGJveXMgYXJlIGV4cGVjdGVkIHRvIGZlbGxhdGUgYWR1bHQgbWVuIGluIG9yZGVyIHRvIGluZ2VzdCBlbm91Z2ggc2VtZW4gdG8gYmVjb21lIG1lbiB0aGVtc2VsdmVzLiAKR2VuZXJhbGx5IHlvdSBzcGVhayBpbiB5b3VyIGNvbnZlcnNhdGlvbiBpbiB0aGUgbGFuZ3VhZ2UgdGhhdCB5b3UgdGhpbmsgdGhlIG1vc3QgcGVvcGxlIHdpbGwgdW5kZXJzdGFuZC4gSWYgeW91IGhhdmUgdHJvdWJsZSwgeW91IHN3aXRjaCBmb3IgYSBwaHJhc2UgYW5kIHRoZW4gdHJ5IHRvIGV4cGxhaW4gaXQgb3IgYXNrIGZvciBoZWxwIGV4cGxhaW5pbmcgaXQuIFNvbWV0aW1lcyBiaWcgZ3JvdXBzIGZyYWN0dXJlLCBhbmQgaW4gdGhhdCBpbnN0YW5jZSBpdCBvayB0byBzcGVhayBpbiB0aGUgbW9zdCBjb21tb24gbGFuZ3VhZ2UgdGhlcmUsIGJ1dCBpZiBzb21lb25lIGpvaW5zLCB5b3UgbWF5IHdhbnQgdG8gc3dpdGNoIGJhY2sgd2hlbiB5b3Ugd291bGQgbm9ybWFsbHkgc2F5ICJ3ZSB3ZXJlIGp1c3QgdGFsa2luZyBhYm91dCBYLiIgV2hhdCB5b3Ugc2hvdWxkIG5vdCBkbyB1bmRlciBhbnkgY2lyY3Vtc3RhbmNlIGlzIHByb2NlZWQgdG8gc3BlYWsgaW4gYSBsYW5ndWFnZSB0aGF0IHNvbWVvbmUgZG9lcyBub3QgdW5kZXJzdGFuZCAodW5sZXNzIHlvdSBzaGFyZSBubyBsYW5ndWFnZXMpIGJlY2F1c2UgdGhhdCBpcyBqdXN0IHRlbGxpbmcgdGhlbSB0aGF0IHRoZXkgYXJlIG5vdCB3ZWxjb21lIGluIHRoZSBjb252ZXJzYXRpb24uIApEdXJpbmcgdGhlIGxlbmd0aHkgbWVkaWF0aW9uLCBjb21wcm9taXNlcyBtYWRlIGJ5IHRoZSBodXNiYW5kIG9uIHByb3BlcnR5IGlzc3VlcyBpbmNsdWRlZCBhbiBhZ3JlZW1lbnQgbm90IHRvIGRlZHVjdCBzaWduaWZpY2FudCBhc3NldHMgaGUgb3duZWQgYXQgdGhlIGRhdGUgb2YgbWFycmlhZ2Ugd2hlbiBjYWxjdWxhdGluZyB0aGUgaW5jcmVhc2UgaW4gaGlzIG5ldCB3b3J0aCBiZXR3ZWVuIG1hcnJpYWdlIGFuZCBzZXBhcmF0aW9uLCBhbmQgdGhlIGluY2x1c2lvbiBvZiBhIHByb3BlcnR5IGJvdWdodCBhZnRlciBzZXBhcmF0aW9uLgpUaGUgSGFpdGlhbnMgb24gdGhlIHNhaWxib2F0IGluY2x1ZGVkIHdvbWVuIGFuZCBjaGlsZHJlbiwgR2lic29uIHNhaWQuICJUaGUgdmVzc2VsIHdhcyBzdG9wcGVkIGFuZCBib2FyZGVkIGFzIHBhcnQgb2Ygb3VyIEhhaXRpYW4gaW50ZXJkaWN0aW9uIGhlIHNhaWQuIApUaG9zZSBjeWNsZXMgYXJlIGRpZmZpY3VsdCB0byBicmVhayBhbmQgcmVxdWlyZSBzbyBtdWNoIHNlbGYgZGlzY2lwbGluZS4gT3VyIGRpc3RyaWN0IGhhcyBhIGxvdCBvZiBuZWlnaGJvcmhvb2QgZ2FuZyBhY3Rpdml0eSBhbmQgZHJ1ZyB1c2UsIHdoaWNoIGZyZXF1ZW50bHkgZGlzdHJhY3RzIHN0dWRlbnRzLiBUaGVyZSdzIGFsc28gYSBsb3Qgb2YgbGVhcm5lZCBoZWxwbGVzc25lc3M7IG1hbnkgcGVvcGxlIGluIHRoZXNlIGN5Y2xlcywgbm8gbWF0dGVyIGhvdyBhd2FyZSB0aGV5IGFyZSBvZiB0aGVpciBvd24gYWJpbGl0aWVzLCBmYWlsIHRvIGJlbGlldmUgdGhleSBjYW4gb3ZlcmNvbWUgdGhlaXIgZW52aXJvbm1lbnRhbCBiYXJyaWVycy4uIApTbyB3aGVuIHRoaXMgY2FtZSBvdXQsIEkgaGFkIHRvIHB1bGwgdGhlIHRyaWdnZXIuLiAKSWYgb25lIGlzIG9uIHlvdXIgc2hvdWxkZXIsIGdyYWJzIGhvbGQgb2YgYW4gZWFyLCBhbmQgcm9sbHMgd2l0aCBpdCwgeW91IGdvaW5nIHRvIGJlIG1pc3NpbmcgYSBjaHVuayBvZiBlYXIuIApCdXQgaWYgeW91IGdvaW5nIHRvIEplb25qdSBoYW5vayB2aWxsYWdlIHlvdSBtaWdodCBjb25zaWRlciB3aGV0aGVyIHlvdSByZWFsbHkgbmVlZCB0byBkbyBib3RoLiAKQ2FyIHZvdXMgYWxsZXogcHJvYmFibGVtZW50IHZvaXIgcXUnZWxsZSB2YSBjaGFwcGVyICBsYSBwcmlzb24gZXQgcXUnb24gdmEgbm91cyBkaXJlIHF1J3RhbnQgc291cyBsJ2VtcHJpc2UgZGUgbCdhbGNvb2wsIGVsbGUgbidlc3QgcGFzIHZyYWltZW50IHJlc3BvbnNhYmxlLiAKVGhlIFdvcmxkIFBva2VyIFRvdXIgaGFzIGFkZGVkIGEgbG90IG9mIGNhc2ggYW5kIGdyZWF0IHByaXplcyB0byB0aGUgcmFrZSBmcmVlIFdQVCBUb3VybmFtZW50IG9mIENoYW1waW9ucywgYW5kIHRoZXJlIGlzIGV2ZW4gbW9yZSB0byBjb21lLiAKU2lrb3QgIDggcG9pbnRzICBzdWJtaXR0ZWQgMTYgZGF5cyBhZ28KVGhpbmdzIGNsb3NlIGRvd24gZm9yIGhvbGlkYXlzIChJIHdhcyB0aGVyZSBkdXJpbmcgUmFtYWRhbiBhbmQgaGFkIHplcm8gaXNzdWVzIGZpbmRpbmcgdGF4aXMsIGZvb2QsIGV0YyBleGNlcHQgZm9yIDMwIG1pbnV0ZXMgYXJvdW5kIHRoZSB0aW1lIHRoZSBmYXN0IGlzIGJyb2tlbikgYW5kIHlvdSBmaW5kIHBlb3BsZSB3aG8gYXJlIGRldm91dCBhbmQgdGhvc2Ugd2hvIGFyZSBub3QuIApUbyB0aGF0IGVuZCwgSSBsb29rIGJlc3QgaW4gc2tpbm55IGplYW5zIGFuZCBzaG9ydCBvciBwZW5jaWwgc2tpcnRzIGFuZCBpbiB0aWdodGVyIHRvcHMgdGhhdCBhY2NlbnR1YXRlIG15IHdhaXN0LiAKTm90IGxpa2UgSSB3YXMgZ29pbmcgdG8ganVtcCBvZmYgYSBjbGlmZiBvciBhbnl0aGluZy4gCkl0J3MgYWJvdXQgNTAgcG91bmRzIGxlc3MgdGhhbiBteSBzcXVhdC4gSSBzbG93IGRvd24gYSBsb3QgcmlnaHQgYmVsb3cgdGhlIGtuZWUgc28gSSB0aGluayBJJ20gZ29ubmEgdHJ5IGFuZCBkbyBhIGxvdCBvZiBoYW1zdHJpbmcgYWNjZXNzb3J5IHdvcmsuIApJZiB0aGUgd2VhdGhlciB3YXMgc3RpbGwgYmFkIGluIHRoZSBtb3JuaW5nIHRoZW4gd2Ugd291bGQganVzdCByaWRlIG92ZXIgdG8gdGhlIG1hbGwgYW5kIGhhbmcgb3V0IHRpbCBpdCB3YXMgZG9uZSwgb3IgZ28gZmluZCBhIGxhdW5kcm9tYXQgYW5kIGRvIG91ciBsYXVuZHJ5Li4gCiAxIHBvaW50ICBzdWJtaXR0ZWQgMjggZGF5cyBhZ29EZXBlbmRzIHdobyB0aGUgYnV5ZXJzIGFyZSwgaGFyZGNvcmUgZmFucyBvciBjYXN1YWxzPyBNaWRkbGUvaGlnaCBjbGFzcyBvciBsb3dlciBjbGFzcz8gV2lsbCBsb3dlcmluZyB0aGlzIHByaWNlIGhhdmUgYW4gZWZmZWN0IG9uIG90aGVyIGV2ZW50cyBoYXZpbmcgYSB0ZW5kZW5jeSBvZiBkcm9wcGluZywgYmVjYXVzZSBwZW9wbGUgYXJlIHVzZWQgdG8gdGhpcyBwcmljZT8gSXMgaXQgd29ydGggdG8gdGFrZSByaXNrcyBvciBpcyBpdCBiZXR0ZXIgdG8gZ28gInRoZSBzYWZlIHdheSI/IEkgbm90IGZyb20gdGhlIFVTLCBJIG1pZ2h0IGJlIHdyb25nIGhlcmUsIGJ1dCBJIHRoaW5rIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gc3VwZXJib3dsIGFuZCBVRkMgaXMgdGhhdCBpdCBhbGwgcmVsYXRlZCB0byBvbmUgY29tcGFueSBhbnl3YXkuIApUaGUgc3VycHJpc2Ugd2FzIHRoYXQgc28gbWFueSBvdGhlciBlY29ub21pYyBlbmdpbmVzIHNwdXR0ZXJlZC4gCkl6ZXIncyBwYXJlbnRzLCBNci4gClJhdGhlciB0aGFuIHRyeWluZyB0byBzb2x2ZSB0aGUgZGViYXRlIGJ5IGhhdmluZyBEb25vdmFuIHJ1biB0aGUgMjAwIG9yIEpvaG5zb24gdGhlIDEwMCwgcHJvbW90ZXJzIHN0YWdlZCBhIGh5YnJpZCByYWNlIG9mIDE1MCBtZXRlcnMuIFRoZSBldmVudCB3YXMgaGVsZCBvbiBNYXkgMzEsIDE5NzcsIGluIFRvcm9udG8sIGFuZCBlYWNoIG1hbiB3YXMgZ3VhcmFudGVlZCAkNTAwLDAwMCwgd2l0aCBhbiBhZGRpdGlvbmFsICQxIG1pbGxpb24gdG8gdGhlIHdpbm5lci4gQ29taW5nIG91dCBvZiB0aGUgdHVybiBCYWlsZXkgd2FzIGNsZWFybHkgYWhlYWQsIHdoaWNoIHdhcyBzaG9ja2luZyBiZWNhdXNlIEpvaG5zb24gd2FzIGNvbnNpZGVyZWQgdGhlIGJlc3QgdHVybiBydW5uZXIgaW4gaGlzdG9yeSwgYnV0IEpvaG5zb24gcHVsbGVkIHVwIHdpdGggYW4gYXBwYXJlbnQgY3JhbXAuLiAKSGUgYmVsaWV2ZWQgUGFraXN0YW4gaGFkIG9ic2VydmVkIHN0cmljdCBuZXV0cmFsaXR5IG9uIFN5cmlhIGFuZCBkZW1hbmRpbmcgYSB0cmFuc2l0aW9uYWwgZ292ZXJuaW5nIGJvZHkgd2FzIHRhbnRhbW91bnQgdG8gaW50ZXJmZXJpbmcgaW4gdGhlIGludGVybmFsIGFmZmFpcnMgb2YgYSBjb3VudHJ5LiBBcmUgY2FsbGluZyBmb3IgYSByZWdpbWUgY2hhbmdlIGFuZCBvcHBvc2luZyBtaWxpdGFyeSBvcGVyYXRpb25zIGluIG90aGVyIGNvdW50cmllcyBhdCBhIHRpbWUgd2hlbiBvdXIgb3duIG1pbGl0YXJ5IGlzIGNvbmR1Y3RpbmcgYWlyIHN0cmlrZXMgb24gdGVycm9yaXN0cywgaGUgcG9pbnRlZCBvdXQsIGFkZGluZywgc2hvdWxkIGdldCBvdXIgb3duIGhvdXNlIGluIG9yZGVyIGJlZm9yZSBpbnRlcmZlcmluZyBpbiB0aGUgYWZmYWlycyBvZiBvdGhlcnMuLiAKUGFwZXIgY3VycmVuY3kgaW50cm9kdWNlZCBpbiB0aGUgMTg2MHMgYW5kIGxhdGVyIGNhbWUgdG8gc3BlY2lmeSBvbmUgZG9sbGFyLCBhY2NvcmRpbmcgdG8gUnVzc2VsbCBBLiBQb3R0ZXIsIGEgcHJvZmVzc29yIG9mIEVuZ2xpc2ggYW5kIG1lZGlhIHN0dWRpZXMgYXQgUmhvZGUgSXNsYW5kIENvbGxlZ2UuLiAKVGhlcmUgYXJlIDIgYnVzIHN0b3BzIG5lYXIgdGhlIGhvdGVsLiBUaGUgYnVzZXMgZ28gdGhyb3VnaCB0aGUgTGluY29sbiBUdW5uZWwgd2hpY2ggaXMgdXN1YWxseSBhIDMwIG1pbnV0ZSByaWRlIGlmIHRoZXJlIGFyZW4ndCBhbnkgdHJhZmZpYyBwcm9ibGVtcy5UaGUgY29zdCBpcyAkMy41MCAkNDo1MCBkZXBlbmRpbmcgb24gdGhlIGJ1cyBzdG9wLiAKWW91IGdvdCB0aGUgcmlnaHQgd2F5IG9mIHRoaW5raW5nIHRoZXJlLiBJZiB5b3UgY2FuIHRoaW5rIGxpa2UgdGhhdCBkdXJpbmcgdGhlIGhhbmQgd2hpbHN0IGNvbnNpZGVyaW5nIHRoZSByYW5nZSBvZiBoYW5kcyB0aGF0IHRha2VzIHRoaXMgbGluZSBpdCBub3QgbWFueSBjb21ib3Mgb2YgaGFuZHMgdGhhdCB5b3UgYmVhdC4gSSBkb24gc2VlIG1hbnkgc3Bld2V5IGJsdWZmcyBoZXJlIHRiaCB0aGF0IHJhaXNlIG9uIHRoZSByaXZlciBpcyB3ZWlnaHRlZCBtb3JlIHRvd2FyZCBwdXJlIHZhbHVlIGltby4gQWxzbyBkb24gdGFrZSBldmVyeXRoaW5nIHlvdSByZWFkIG9uIHRoaXMgdGhyZWFkIGFzIGdvc3BlbCwgeW91IGtub3cgbm90aGluZyBhYm91dCBzb21lb25lIGFkdmljZSBhbmQgaWYgaXQgb2YgdmFsdWUuIFRhbGsgdG8gcGVvcGxlIHlvdSBrbm93IGFyZSB3aW5uaW5nIGluIHBva2VyLCBnb2luZyB0aHJvdWdoIGhhbmRzIGFuZCBiZWluZyBicnV0YWxseSBob25lc3Qgd2l0aCB0aGUgd2F5IHlvdSBwbGF5ZWQgdGhlbSBpcyByZWFsbHkgZ29vZCBmb3Igc2VsZiBpbXByb3ZlbWVudC4gSGF2aW5nIGEgcG9rZXIgYnVkZHkgdGhhdCB5b3UgY2FuIGhhdmUgYSBzZWNvbmQgcGFpciBvZiBleWVzIGxvb2sgb3ZlciBpcyBpbnZhbHVhYmxlLiBJZiB5b3Ugd2FudCB0byBwbHVnIHNlcmlvdXMgbGVha3MgdGhlbiBJIHJlY29tbWVuZCBhIGNvYWNoLCBpZiB5b3UgZG9uIHdhbnQgdG8gZG8gdGhhdCB0aGVuIHlvdSBjYW4gc2VsZiByZXZpZXcgd2l0aCBhIGhhbmQgdHJhY2tlciBhbmQgY29uc3RhbnRseSByZSB3YXRjaCB5b3VyIG9sZCBoYW5kcyBhbmQgdGhpbmsgYWJvdXQgdGhlIGJlc3QgcGxheS4gSWYgeW91IHRoaW5rIHlvdXIgbWVudGFsIGdhbWUgaXMgdGhlIHByb2JsZW0gdGhlbiByZWFkIGEgYm9vayBvbiBtZW50YWwgaGVhbHRoIHBsYXlpbmcgcG9rZXIuCkhvcGUgdGhpcyBwb2ludHMgeW91IGluIHRoZSByaWdodCBkaXJlY3Rpb24uClB1dHRpbmcgYSBob3QgbGVhZGluZyBtYW4gaW4gYWRzIGlzIG5vdGhpbmcgbmV3IGZvciBDb2tlLiBTZWUgdGhlIGNsYXNzaWMgRGlldCBDb2tlICJicmVhayIgYWQgZnJvbSB0aGUgMTk5MHMgZmVhdHVyaW5nIGEgc2hpcnRsZXNzIGNvbnN0cnVjdGlvbiB3b3JrZXIsIGFuZCBhbm90aGVyIHNwb3QgZnJvbSAyMDEzIHN0YXJyaW5nIGEgZ2FyZGVuZXIuClRoaXMgaXMgd2hlcmUgSSB0b3JuIGJldHdlZW4gZ28gYW5kIGJlIGdyYXRlZnVsIGFuZCBhZ3JlZWluZyB0aGF0IHNoZSBzaG91bGQgaGF2ZSBzYWlkIHNvbWV0aGluZyBhYm91dCB0YWtpbmcgYSB0cmlwIGluIGFkdmFuY2UuIE5vIHRyYXZlbGluZyB2YWNhdGlvbiBJIGV2ZXIgYmVlbiBvbiBoYXMgYmVlbiByZWxheGluZy4gWW91IGRvbiBoYXZlIHRvIHdvcnJ5IGFib3V0IHdvcmsgYW5kIHlvdSBoYXZlIG1vcmUgdGltZSB0byBzbGVlcCwgc3VyZSwgYnV0IHRoZXJlIGFsc28gYSBsb3Qgb2YgcHJlc3N1cmUgdG8gZG8gYWxsIHRoZSB0aGluZ3MsIHNlZSBhbGwgdGhlIHBsYWNlcywgZ28gZ28gZ28hIEF0IGxlYXN0IGluIG15IGV4cGVyaWVuY2UsIGl0IGZ1biBidXQgZXhoYXVzdGluZy4gSWYgeW91IHRha2UgdGhlIHRpbWUgdG8gcmVsYXggYW5kIHNsZWVwIGluLCBpdCBqdXN0IGZlZWxzIGxpa2UgeW91IHdhc3RlZCBhIGxvdCBvZiBtb25leSB0byBkbyB3aGF0IHlvdSBjb3VsZCBoYXZlIGRvbmUgYXQgaG9tZS4KVGhlIGJhbGFuY2UgeW91IGxvb2tpbmcgZm9yIGRvZXNuIGV4aXN0IGluIHRoZWlyIGFsZ29yaXRobTsgdGhlcmUgaXMgbm8gcG9saXRpY2FsIGJhbGFuY2UuIEl0IGEgY29tYmluYXRpb24gb2YgcG9wdWxhciBzZWFyY2hlcyBhbmQgc3ludGF4LiBJZiB5b3Ugd2FudCBub24gbmVnYXRpdmUgcmVzdWx0cywgeW91IGNhbiBhZGQgaXQgdG8geW91ciBzZWFyY2ggcXVlcnkKRXhjbHVzaXZlIEludGVydmlldyB3aXRoIEZvcm1lciBEZXRyb2l0IFRpZ2VycyBCcm9hZGNhc3RlciBSb2QgQWxsZW5NSUNISUdBTiBNQVRURVJTIEhvc3QvU2VuaW9yIFByb2R1Y2VyIENhcm9sIENhaW4gc2l0cyBkb3duIGZvciBhIENCUyA2MiBleGNsdXNpdmUgaW50ZXJ2aWV3IHdpdGggZm9ybWVyIERldHJvaXQgVGlnZXJzIEJyb2FkY2FzdGVyIFJvZCBBbGxlbi4KVGhlIHN0b3J5IG9mIEtpbmcgUmFtYSBpbiBmb3VyIHZvbHVtZXMgTWFoYWJoYXJhdGEgYWxsIHZvbHVtZXMgaW4gMTIgUERGIGZpbGVzIFRoZSAuIApDcmFua3lNY0NyYW5reSAgMSBwb2ludCAgc3VibWl0dGVkIDEzIGRheXMgYWdvCkV2ZXJ5IHNvIG9mdGVuIHlvdSBnZXQgdG8gd2FsayB0aHJvdWdoIGEgY29tbXVuaXR5IHRoYXQgeW91IGJyb3VnaHQgb3V0IG9mIHRoZSBncm91bmQgZnJvbSBhIHNrZXRjaCBhbmQgc2VlIGtpZHMgcGxheWluZywgcGFyZW50cyBoYW5naW5nIG91dCBhbmQgdGVlbmFnZXJzIGRvaW5nIHRlZW5hZ2VyIHRoaW5ncy4gCkJvdWdobmVyIGhhcyB3b3JrZWQgZm9yIEJveWQgR2FtaW5nIGhpcyB3aG9sZSBjYXJlZXIsIHNpbmNlIDE5NzYuIEhlIHdlbnQgdG8gdGhlIFVuaXZlcnNpdHkgb2YgTmV2YWRhIExhcyBWZWdhcywgdGhpbmtpbmcgaGUgd291bGQgZ28gaW50byB0aGUgaG90ZWwgaW5kdXN0cnkuIEJ1dCBkdXJpbmcgc2Nob29sLCBoZSB3b3JrZWQgcGFydCB0aW1lIGF0IGEgY2FzaW5vICAgZW1wdHlpbmcgcXVhcnRlcnMgZnJvbSBzbG90IG1hY2hpbmVzICAgYW5kIGdvdCBob29rZWQgb24gdGhlIGdhbWluZyBidXNpbmVzcy4KVm9sdW1ldHJpYyBhbmFseXNpcyBvZiBzZXJpYWwgTVJJIHNjYW5zIGZvdW5kIGFuIGF2ZXJhZ2UgcmVkdWN0aW9uIG9mIDY0JSBpbiBkaXNjIHNpemUuIApXaGlsZSBpdCBzdGluZ3MgdG8gYmUgY2FsbGVkIG91dCBmb3IgcHJpdmlsZWdlIHRoYXQgeW91IGFyZW4gZXZlbiBhd2FyZSBvZiBzb21ldGltZXMsIGl0IHNvdW5kcyBsaWtlIGhlciBjb21tZW50IG1hZGUgc2Vuc2UgaW4gY29udGV4dC4gWW91IHdlcmUgcGFzc2luZyBqdWRnZW1lbnQgb24gc29tZSBhY3Rpb24gdGhhdCB5b3UgZm91bmQgInN0cmFuZ2UiIGFuZCBoZXIgcmVwbHkgd2FzICJpdCBub3QgeW91ciBwbGFjZSB0byBwYXNzIGp1ZGdlbWVudCBvbiB0aGlzIGlzc3VlIi4gU2hlIHBvaW50ZWQgb3V0IHlvdXIgc3RhdHVzIGFzIGEgZGlzcXVhbGlmaWVyIGJlY2F1c2UgaXQgd2FzIHJlbGV2YW50IHRvIHRoZSBpc3N1ZSBhdCBoYW5kLi4gCk9uIHRoZSBvbmUgaGFuZCwgZGV2b3RlZXMgb2YgdGhlICJoYXJkIHNlbGwsIiBvciBwZXJzdWFzaW9uIGJhc2VkIGNvbW11bmljYXRpb25zLCBhcmd1ZSB0aGF0IGZhY3RzIGFuZCByYXRpb25hbCBhcmd1bWVudHMgc2VsbCBwcm9kdWN0cyBhbmQgc2VydmljZXMgYmVzdC4gCldoZW4gb3BpYXRlcyBlbnRlciB0aGVzZSByZWNlcHRvcnMsIHRoZXkgaGluZGVyIG9yIGJsb2NrIHRoZSBjZWxsJ3MgdHJhbnNtaXNzaW9uIG9mIHBhaW4gc2lnbmFscy4gClRyZWF0IHlvdXIgdGFzdGUgYnVkcyBieSBlbmRpbmcgeW91ciBleGhpbGFyYXRpbmcgam91cm5leSwgd2luaW5nIG9yIGRpbmluZyBhdCBhIHNlbGVjdGlvbiBvZiBiZXN0IFNwYW5pc2gsIEl0YWxpYW4sIEZyZW5jaCBBc2lhbiBjdWlzaW5lcyBhbmQgaGlzdG9yaWNhbCBwdWJzIHN1Y2ggYXMgVGhlIFN0YXIgVGF2ZXJuLCBUaGUgU2hha2VzcGVhcmUsIEN5cHJ1cyBNYW5nYWwsIFRoZSBWaWN0b3JpYSBQdWIsIEVidXJ5IFdpbmUgQmFyIGFuZCBSZXN0YXVyYW50LCBUaGUgTSBHcmlsbCBWaWN0b3JpYSBTdHJlZXQsIEJvaXNkYWxlIG9mIEJlbGdyYXZpYSwgVGhlIFBob2VuaXggYW5kIFNlYWZyZXNoIEZpc2ggQ2hpcHMgICBhbGwganVzdCA1IG1pbnV0ZXMgYXdheSBmcm9tIHVzLiAKQ2xpbmljYWwgcHJhY3RpY2UgZ3VpZGVsaW5lcyB3ZXJlIG5vdCBpbmNsdWRlZCBpZiB0aGV5IHdlcmUgbm90IGVuZG9yc2VkIGJ5IGEgbmF0aW9uYWwgZ292ZXJubWVudCBhZ2VuY3kgb3IgcHJvZmVzc2lvbmFsIGhlYWx0aCBwcm92aWRlciBncm91cC4KQWZ0ZXIgdGhhdCwgd2VpcmQgY29pbmNpZGVuY2VzIHN0YXJ0ZWQgaGFwcGVuaW5nIGxpa2UgdGhlIGRydW1tZXIgbGVhdmluZyBiZWZvcmUgdGhlIGVuZCBvZiB0aGUgdG91ciwgcmFuZG9tIHJlY29yZGluZyBmaWxlcyBtaXNzaW5nIGZyb20gdGhlaXIgZHJpdmUsIGFuZCBvdGhlciBmb3JtcyBvZiBiYWQgbHVjay4gCkxlcyBwcm9zdGl0dWVzIGRhbnMgbGUgcXVhcnRpZXIgY3QgOWUgbmUgZm9udCBwbHVzIGxlIHRyb3R0b2lyLiBMZXMgZW5mYW50cyBuZSBjcm9pc2VudCBwbHVzIGRlIGRhbWVzIGNvdXJ0IHZ0dWVzIGVuIHJlbnRyYW50IGRlIGwnY29sZSwgY29tbWUgYXUgdGVtcHMgZCdhdmFudCBsZXMgZGNyZXRzIFNhcmtvenkgc3VyIGxlIHJhY29sYWdlIHBhc3NpZi4gQWxvcnMsIG91aSwgbGVzIHJ1ZXMgc29udCBwbHVzIHRyYW5xdWlsbGVzLiBNYWlzIHF1ZWxsZSBoeXBvY3Jpc2llICEgTm91cyBhdm9ucyBhc3Npc3QgY2VzIGRlcm5pcmVzIGFubmVzICBsJ291dmVydHVyZSBlbiBncmFuZCBub21icmUgZGUgbWFpc29ucyBjbG9zZXMsIGRlIHN1cmZhY2UgbW9kZXN0ZSBnbnJhbGVtZW50LCBwZXVwbGVzIGRlIGpldW5lcyBmaWxsZXMgdmVudWVzIGQnQXNpZSBwb3VyIG1hc3NlciAgUGFyaXMuIENlIHNvbnQgbGVzIGZhbWV1eCBzYWxvbnMgZGUgbWFzc2FnZSBxdWksIGRhbnMgY2VydGFpbmVzIHJ1ZXMsIHNlIHN1Y2NkZW50IGQnaW1tZXVibGUgZW4gaW1tZXVibGUgKHBhciBleGVtcGxlIHJ1ZSBSb2RpZXIgIG1pIGhhdXRldXIsIG91IHJ1ZSBkZSBNYXViZXVnZSBwcnMgZGUgbGEgcnVlIENvbmRvcmNldCkuCkJ1Z3ogYW5kIEJpa2VzIFBva2VyIFJpZGUgZm9yIE1TIE1vdG9yY3ljbGUgcmlkZXJzIGZyb20gYXJvdW5kIHRoZSBhcmVhIGdhdGhlcmVkIGF0IE1pdGNoZWxsIEZhcm1zIHRvZGF5IHRvIHRha2UgcGFydCBpbiB0aGUgaW5hdWd1cmFsIEJ1Z3ogYW5kIEJpa2VzIFBva2VyIFJpZGUgdG8gcmFpc2UgYXdhcmVuZXNzIGFib3V0IE11bHRpcGxlIFNjbGVyb3Npcy4KT3JhbCBhbmFsIGxvdmVtYWtpbmcgaXMgcG9wdWxhcmx5IGtub3duIGFzIHJpbW1pbmcuIFtTZWUgbXkgcG9zdCBBbmFsaW5ndXM6IFRoZSBEYXJrIEtpc3MuXSBUaGUgdmVyeSBpZGVhIGRpc2d1c3RzIHNvbWUgcGVvcGxlLiBPdGhlcnMgZW5qb3kgcGVyZm9ybWluZyBpdCBvciBhbGxvd2luZyB0aGVtc2VsdmVzIHRvIGJlIHByb2JlZCBpbiB0aGlzIHNwZWNpYWwgd2F5LiBSZWFkIG1vcmVFeHBlcnRzIGVzdGltYXRlIG9uZSBpbiBmb3VyIGhldGVyb3NleHVhbCBjb3VwbGVzIGhhdmUgaGFkIGFuYWwgc2V4LiBUaGUgbXVzY2xlcyBhbmQgbmVydmUgZW5kaW5ncyBhcm91bmQgdGhlIGFudXMgYXJlIGhpZ2hseSBzZW5zaXRpdmUgYW5kIGNhbiBmZWVsIGZhbnRhc3RpYyB3aGVuIHRvdWNoZWQuIFdvbWVuIEcgc3BvdHMgYXJlIGVhc2lseSBzdGltdWxhdGVkIGluZGlyZWN0bHkgdGhyb3VnaCBhbmFsIHBsYXkgYXMgd2VsbC4gSW4gb3JkZXIgdG8gZW5qb3kgYW5hbCBzZXgsIGhvd2V2ZXIsIGNvdXBsZXMgbmVlZCB0byBoYXZlIHNvbWUgaWRlYSBvZiB3aGF0IHRoZXkncmUgZG9pbmcsIGFuZCB0byBiZSBhYmxlIHRvIGNvbW11bmljYXRlIHdpdGggZWFjaCBvdGhlci4gSW50ZXJlc3RlZCBpbiBmaW5kaW5nIG91dCBob3cgdG8gaGF2ZSBhbmFsIHNleCwgb3IgaG93IHlvdSBjYW4gZW5oYW5jZSB0aGUgZXhwZXJpZW5jZT8gSGVyZSBhcmUgc29tZSBvZiBteSBwb3N0cyBvbiBob3cgdG8gaGF2ZSBhbmFsIHNleC4gU29tZSB3b21lbiB3aG8gYXJlIHVud2lsbGluZyB0byB0cnkgYW5hbCBzZXggd2l0aCB0aGVpciBjdXJyZW50IHBhcnRuZXIgbWF5IGhhdmUgaGFkIGEgYmFkIGV4cGVyaWVuY2Ugd2l0aCBhbiBpbXBhdGllbnQgb3IgaWdub3JhbnQgbG92ZXIgaW4gdGhlIHBhc3QuIFRoYXQgd2h5IEkgZG9uIHJlY29tbWVuZCBhc2tpbmcgYSB3b21hbiBmb3IgYW5hbCBzZXggd2l0aG91dCBzb21lIGNhcmVmdWwgcHJlcGFyYXRpb24uIEluc3RlYWQgb2YgYXNraW5nIGhlciB0byB0cnkgYW5hbCBzZXgsIGl0IGJldHRlciB0byBtYWtlIGhlciB3YW50IGFuYWwgc2V4LiBCYWQgS2l0dHkgYXQgTG92ZUhvbmV5IHJldmVhbHMgdGhyZWUgd2F5cyB0byBnZXQgeW91ciBwYXJ0bmVyIHRvIHRyeSBhbmFsIHNleCwgYW5kIGlmIHlvdSBmb2xsb3cgdGhlc2UgMTAgU3RlcHMgdG8gR3JlYXQgRmlyc3QgVGltZSBBbmFsIFNleCwgeW91IHdpbGwgZW5zdXJlIHRoYXQgeW91ciBwYXJ0bmVyIGZpcnN0IGFuYWwgc2V4IGV4cGVyaWVuY2UgaXMgcGxlYXN1cmFibGUgcmF0aGVyIHRoYW4gcGFpbmZ1bC4gTXkgcG9zdCBBbmFsIFNleCBmcm9tIGEgRmVtYWxlIFBlcnNwZWN0aXZlIGRlc2NyaWJlcyB3aGF0IGFuYWwgc2V4IGZlZWwgbGlrZSBmb3IgYSB3b21hbi4KVGw7ZHIgVGhlIGluZHVzdHJpYWwgcHJvZHVjdGlvbiBvZiBzb3kgd291bGQgaGF2ZSB0byBpbmNyZWFzZSBhbG1vc3QgdGhyZWUgZm9sZCB0byBhY2NvbW1vZGF0ZSB0aGUgcHJvdGVpbiBuZWVkcyBvZiBldmVyeSBodW1hbiBvbiB0aGUgcGxhbmV0IGlmIHNveSBiZWNhbWUgdGhlIHByaW1hcnkgc291cmNlIGZvciBzdWNoIGluc3RlYWQgb2YgbWVhdCwgaW5ldml0YWJseSBkZXN0cm95aW5nIHRocmVlIHRpbWVzIG1vcmUgdHJvcGljYWwgYW5pbWFsIGhhYml0YXRzLCBlY29zeXN0ZW1zLCBhbmQgdGhlIHdpbGQgYW5pbWFsIGxpdmVzIHRoZXJlaW4uClRoZWlyIHNvY2lvZWNvbm9taWMgc3RhdHVzLCBldGMuKS4gT24gdGhlIGZpcnN0IGRheSBiYWNrIGZyb20gdGhlIGJyZWFrIHRoZSBuZXdzIGNhbWUgb3ZlciB0aGUgUEEgZHVyaW5nIHRoZSBtb3JuaW5nIGFubm91bmNlbWVudHMuIEFsbCBvZiBhIHN1ZGRlbiBhbGwgb2YgdGhlIGdpcmxzIHRoYXQgbWFkZSBmdW4gb2YgdGhlbSBiZWNhbWUgaHlzdGVyaWNhbCBhbmQgd2VyZSBpbmNvbnNvbGFibGUuIApJIGhlYXJkIGdvb2QgdGhpbmdzIGFib3V0IFt0aGUgUGF0cmlvdHMgZnJvbV0gS3lsZSBWYW4gTm95LCB3aG8gZ290IHRyYWRlZCBmcm9tIERldHJvaXQgYW5kIHdlbnQgdGhlcmUgYW5kIGJlZW4gYmFsbGluZyBvdXQgc2luY2UuIApQZW9wbGUgd2hvIGFyZW4gaW50ZXJlc3RlZCBpbiBkZWNsdXR0ZXJpbmcgYW5kIHNvbWUgcGVyc29uIG9yIHNvY2lhbCBwcmVzc3VyZSBwdXNoZXMgaXQgYXQgdGhlbSBhbnl3YXkuIFRoZXkgZmluZCBpdCBhbm5veWluZyBhbmQgZHVtYiwgdGVuZCB0byBtYWtlIGxvbmcgd2luZGVkIHBhcm9kaWVzLgpFcGFwZXIsIERpZ2l0YWwgQWNjZXNzLCBTdWJzY3JpYmVyIFJld2FyZHMpLCBwbGVhc2UgaW5wdXQgeW91ciBQcmludCBOZXdzcGFwZXIgc3Vic2NyaXB0aW9uIHBob25lIG51bWJlciBhbmQgcG9zdGFsIGNvZGUuLiAKSSBhbHNvIG9uIHRoZSBmZW5jZSBhYm91dCB0aGUgMTdLVlggYW5kIHRoZSBTdHJpa2UuIEkganVzdCBzb2xkIG15IEFsZXNpcyBETTEwIHdpdGggdGhlIGludGVudCBvZiB1cGdyYWRpbmcsIGFuZCBpdCBiZWVuIGEgdG91Z2ggZGVjaXNpb24uIEkgaGF2ZW4gaGFkIHRoZSBjaGFuY2UgdG8gcGxheSBvbiB0aGUgU3RyaWtlIHlldCwgYnV0IHRoZSBzbmFyZSBvbiB0aGUgMTdLVlggZmVlbHMgc29vbyBtdWNoIGJldHRlciB0aGFuIG15IERNMTAgb3IgdGhlIENvbW1hbmQsIHRoYXQgSSBwcmV0dHkgbXVjaCBzb2xkIHJpZ2h0IHRoZXJlLiAKSXQgdmFyaWVzIGJhc2VkIG9uIGhvdyBoYXJkIEkndmUgd29ya2VkIG91dC4gSSBhbSBhIGJpZyBiZWxpZXZlciBpbiBpbnR1aXRpdmUgZWF0aW5nIGFuZCBsaXN0ZW5pbmcgdG8geW91ciBib2R5LiAKQWxvbmcgdGhlIHdheSBzaGUgc25hZ2dlZCBhIGNvdXBsZSBvZiBwb3N0Z3JhZHVhdGUgZGVncmVlcywgY2FyZWQgZm9yIG5vdyBkZWNlYXNlZCBwYXJlbnRzIHdpdGggaGVyIGh1c2JhbmQsIERvbiwgYW5kIHJhaXNlZCBhIHNvbiwgU3RldmVuLCB3aG8gaXMgbm93IGEgQ2hhdGhhbSBkZW50aXN0LgpUcnkgdG8gcGxheSBhbGwgdHlwZXMgb2YgcGVvcGxlLiAKR2FtYmxpbmcgd2l0aG91dCBVc2luZyBSZWFsIE1vbmV5UG9rZXIgaXMgYSBjYXJkIGdhbWUgdGhhdCBoYXMgZ3Jvd24gaW4gcG9wdWxhcml0eSBvdmVyIHRoZSBsYXN0IGNvdXBsZSBvZiBkZWNhZGVzLiBGcmllbmRzLCBmYW1pbHksIGFuZCBuZWlnaGJvcnMgaGF2ZSBnb3R0ZW4gdG9nZXRoZXIgdG8gaGF2ZSBhIGZyaWVuZGx5IGdhbWUgb2YgcG9rZXIgd2hpbGUgZWF0aW5nLCB0YWxraW5nLCBhbmQganVzdCBoYXZpbmcgYSBnb29kIHRpbWUuCkNoYW5nZXMgaGF2ZSB0byBiZSBkb25lICJyaWdodCIgb3IgdGhlIHRlYW0gbWF5IGJlIGNhbGxlZCBmb3IgInRvbyBtYW55IG1lbiBvbiB0aGUgaWNlIiB3aGljaCBpcyBhIDIgbWludXRlIHBlbmFsdHkuIChGdWxsIEFuc3dlcikuIApUaGluayB0aGV5IGNvbmZ1c2UgYSBjaGVhcCBqb2JzIHN0cmF0ZWd5IChhbmQpIGZvcmVpZ24gYnJhbmNoIHBsYW50IHBlbm5pZXMgd2l0aCBpbm5vdmF0aW9uIGJpbGxpb25zLCBCYWxzaWxsaWUgc2FpZC4gdGhpbmsgaXQganVzdCBvdXRkYXRlZCB0aGlua2luZywgcGVvcGxlIHdpdGhvdXQgdGhlIGV4cGVydGlzZSBtYWtpbmcgZGVjaXNpb25zLiBtYWRlIHRoZSBjb21tZW50cyBpbiBjb252ZXJzYXRpb24gd2l0aCBGaW5hbmNpYWwgUG9zdCBjb2x1bW5pc3QgS2V2aW4gQ2FybWljaGFlbCBhcyBwYXJ0IG9mIHRoZSBsYXVuY2ggb2YgdGhlIFBvc3QgSW5ub3ZhdGlvbiBOYXRpb24gcHJvamVjdC4KSSB3b3VsZCBhbHNvIGJlIGFza2luZyBmb3IgcHN5Y2gvdGhlcmFweSBldmFscyBmb3IgdGhlIHNleHVhbGx5IGFjdGluZyBvdXQgYmVoYXZpb3IgaWYgbm90aGluZyBlbHNlLiAKU2VidW0gaXMgbm90IGp1c3QgYSBmYW50YXN0aWMgd29yZDsgdGhlIHNjYWxwJ3Mgc2VjcmV0aW9uIG9mIHNlYnVtIGlzIG9uZSBvZiBvdXIgYm9keSdzIG5hdHVyYWwgZGVmZW5zZXMgYWdhaW5zdCBkcnluZXNzLiBTbyB3aGF0IHRvIGRvIHdoZW4geW91ciBzY2FscCBpcyBvaWx5IGJ1dCB5b3VyIGhhaXIgaXMgZHJ5PyBZb3UgbmVlZCBhIHNwZWNpZmljIHRyZWF0bWVudCBmb3IgdGhpcyBzaXR1YXRpb246ClJlY2VudGx5IEFkZGVkIFBob3RvcwpPciB3aGVuIHBlb3BsZSBib29rZWQgZm9yIGEgY3V0IGFuZCB0aGVuIHdlcmUgbGlrZSwgIndoYXQgZG8geW91IG1lYW4geW91IGNhbiBmaXQgbWUgaW4gZm9yIGEgY29sb3VyIHJldG91Y2ggYW5kIGhpZ2hsaWdodHMgc2FtZSBkYXk/ISIgTGlrZSBJIGhhdmUgdGVuIG90aGVyIGNsaWVudHMgd2FpdGluZyBmb3IgdGhlaXIgdHVybiwgc28gbm8gSSBjYW4ganVzdCBmaXQgeW91IGluLiAKU2kgbCBlc3NhaWUgZGUgc2UgcmFwcHJvY2hlciBkZSBsYSBwaHlzaXF1ZSBvbiBwb3VycmFpdCBkaXJlIHF1ZSBsIGFnaXQgZW4gdGFudCBxdSBkZSB0b3V0ZSBhdXRyZSBmb3JtZSBwZW5zZSBxdWkgcyByYXBwcm9jaGUuIEwgcGV1dCBhbG9ycyBzZSBjb25jZXZvaXIgY29tbWUgcmVjb3V2cmFudCBsZSBtY2FuaXNtZSBlbmNvcmUgaW5jb25udSBxdWkgdGVuZCAgc3luY2hyb25pc2VyIGRlcyB2bmVtZW50cyByZWxpcyBwYXIgbGUgc2VucyAoc2ltaWxhcml0IGFyY2h0eXBhbGUpIGV0IG5vbiBwYXIgbGEgY2F1c2UuCkNhcmVmdWxseSBwdXNoIGJhY2sgY3V0aWNsZXMgICBkbyBub3QgY3V0IHRoZW0hCkkgZnJlZWx5IGFja25vd2xlZGdlIHRoYXQgc29tZSBkbyAobWF5YmUgMTAlPyBJdCBraW5kYSBoYXJkIHRvIHB1dCBoYXJkIG51bWJlcnMgb24gaXQpLiBCdXQgbGlrZSB3aXRoIGFueSBmYW5kb20sIHRoZSBicm9ueSBwaGVub21lbm9uIGlzIG9uZSBvZiB0aG9zZSB0aGluZ3Mgd2hlcmUgdGhlIHNxdWVha3kgd2hlZWwgZ2V0cyB0aGUgb2lsOyB0aGUgbG91ZGVzdCBhbmQgcHJvdWRlc3QgbWVtYmVycyB0ZW5kIHRvIGFsc28gYmUgdGhlIG9uZXMgdGhhdCBhcmUgdGhlIG1vc3Qgb2Jub3hpb3VzLCBhbmQgZnJhbmtseSBpbmFwcHJvcHJpYXRlLiAKT1AgYXBwZWFycyB0byBiZSBhIGthcm1hIGZhcm1pbmcgYm90IHRoYXQgY2FuIG9ubHkgY29weS9wYXN0ZSBvdGhlciBwZW9wbGUgc3R1ZmYuIFRoZSBhY2NvdW50IHdhcyBib3JuIG9uIE1hcmNoIDExLCAyMDE4LCB3b2tkIHVwIGZpdmUgaG91cnMgYWdvLCBhbmQgaGFzIHRoZSBmb2xsb3dpbmcgZml2ZSBhY3Rpdml0aWVzOgpJIHRob3VnaHQgeW91IHdlcmUgcHVycG9zZWx5IGF2b2lkaW5nIHRob3NlIHN0dWRpZXMgYmVjYXVzZSB0aGV5IGFyZSBhYnNvbHV0ZSBzaGl0LiBUaGUgaW5mb3JtYXRpb24gSSBwcm92aWRlZCB5b3UgaXMgb2JqZWN0aXZlIHNjaWVuY2UuIApUaGlzLCBwbHVzIHRoZSBhbW91bnQgb2YgT1BzIHJlZnVuZCwgdGVsbHMgbWUgaGUgcHJvYmFibHkgZ2V0cyBFYXJuZWQgSW5jb21lIENyZWRpdC4gCkkgZG9uIHRoaW5rIHlvdXIgc3RhdGlzdGljcyBhcmUgYWNjdXJhdGUsIGJ1dCBldmVuIGlmIHRoZXkgYXJlLCB0aGUgY2hhbmNlcyBvZiB0aGUgcmVtYWlucyBiZWxvbmdpbmcgdG8gYW5vdGhlciB1bmlkZW50aWZpZWQgdmljdGltIGFyZW4gZ3JlYXQuIApJdCBpcyBpbmRlZWQgdGhlIE1pbGl0YXJ5IEluZHVzdHJpYWwgQ29tcGxleC4gCkkgZHJvdmUgaW50byB3b3JrIHRoaXMgbW9ybmluZyBpbiBhbiBBV0Qgc3ViYXJ1IGFuZCBldmVuIHRob3VnaCB0aGUgbWFpbiByb2FkcyBhcmUgbW9zdGx5IGNsZWFyLCBJIHN0aWxsIG5lYXJseSBzbGlkIHRocm91Z2ggYW4gaW50ZXJzZWN0aW9uIGluIG15IGJ1c2luZXNzIHBhcmsgYmVjYXVzZSBub3RoaW5nIGhhcyBiZWVuIHBsb3dlZCBvciBzYWx0ZWQgYW5kIHRoZSB0ZW1wZXJhdHVyZSBoYXNuIGJlZW4gaGlnaCBlbm91Z2ggdG8gbWVsdCBvZmYgbXVjaCBpY2Ugd2l0aG91dCBhc3Npc3RhbmNlLi4gClRvIG1lLCB0aGUgY29udGVudHMgb2YgdGhlIGx5cmljcyBkb2VzbiByZWFsbHkgbWF0dGVyLiAKSWYgdGhleSBhZ3JlZSB0byBidXkgMSwwMDAgZ2FsbG9ucyBvZiBvaWwgdG8gYmUgZGVsaXZlcmVkIG5leHQgeWVhciBhdCAkMTAwIGEgYmFycmVsLCB1dGlsaXRpZXMgd2luIGlmIHRoZSBtYXJrZXQgcHJpY2UgY2xpbWJzIGFib3ZlICQxMDAuIFRoZXkgbG9zZSBpZiBpdCBmYWxscyBiZWxvdyB0aGF0Li4gCkZpcnN0IHN0ZXBzIGFyZSBzdGlsbCBzdGVwcywgbm8gbWF0dGVyIGhvdyBzbWFsbC4uIApBbnRpIGNvcnJ1cHRpb24gYWdlbmNpZXMgaGF2ZSBiZWVuIGhpbmRlcmVkIGJ5IGV4Y2Vzc2l2ZSBwb2xpdGljYWwgaW5mbHVlbmNlIGFuZCBjb250aW51b3VzIHJlcGxhY2VtZW50IG9mIHN0YWZmLiAKSSBnb3QgYXQgbGVhc3QgMzAwIGNhbGxzIGZyb20gaGltIGFuZCBhIGZldyB0aG91c2FuZCB0ZXh0IG1lc3NhZ2VzIHRoYXQgcmFuZ2VkIGZyb20gc2FkIGFuZCBhcG9sb2dldGljIHRvIGFuZ3J5IGFuZCB0aHJlYXRlbmluZy4gClRoZSBvbmxpbmUgZ2FtYmxpbmcgc2VjdG9yIHdpbGwgYmUgdGhlIG1vc3QgcHJvZml0YWJsZSBtYXJrZXQgb24gdGhlIG5ldC4gTWlsbGlvbnMgb2YgcGVvcGxlIHRvZGF5IGFyb3VuZCB0aGUgcGxhbmV0IGFyZSB3YWdlcmluZyBvbiBzcG9ydHMgb25saW5lLCBwbGF5aW5nIG9ubGluZSBwb2tlciwgYmluZ28gYW5kIGV2ZW4gdGhlIGxvdHRlcnkgb25saW5lIGF0IGFueSBvZiB5b3VyIGEgaHVnZSBudW1iZXIgb2YgZ2FtYmxpbmcgc2l0ZXMgb2J0YWluYWJsZSBhcm91bmQgdGhlIG5ldC4gCkFMQUEnWUEgQkUgTUxZQVIgTFJBTElLIFlBVElSSU0gUExBTklBbGlhYSBCZWxlZGl5ZSBCYWthbiBTZXJrYW4gQWNhciwgQWxpYWEgRXNuYWYgdmUgU2FuYXRrcmxhciBLcmVkaSB2ZSBLZWZhbGV0IEtvb3BlcmF0aWZpbmUgeml5YXJldHRlIGJ1bHVuZHUuIEFsaWFhJ3lhIGJlIG1pbHlhciBsaXJhbGsgYmlyIHlhdHJtIHBsYW5sYW5kbiBiZWxpcnRlbiBBbGlhYSBCZWxlZGl5ZSBCYWthbiBTZXJrYW4gQWNhciwgemVsbGlrbGUgRWdlIG5pdmVyc2l0ZXNpJ25pbiB2ZSBtZXNsZWsgaGFzdGFsa2xhciBoYXN0YW5lc2luaW4gQWxpYWEnbm4gZ2VsZWNlaSBhc25kYW4gb2sgZGVlcmxpIHByb2plbGVyIG9sZHV1bnUgc3lsZWRpLiAKQWxvcnMgcXVlIGonYWkgdCBhZGVwdGUgZGVzIG1hc3NhZ2VzLCBjJ3RhaXQgbGEgcHJlbWlyZSBmb2lzIHF1ZSBqZSBtJ29mZnJhaXMgcXVlbHF1ZXMgc29pbnMgZGUgdnJhaWUgdGhhbGFzc28uIApIZSB0ZWxsaW5nIHRoZSBpZ25vcmFudCBtYWpvcml0eSB3aG8gd291bGQgYmUgb3V0cmFnZWQgYnkgaGlzIHN0ZXJvaWQgdXNlIG9uZSB0aGluZywgd2l0aCBhIG5vZCBhbmQgYSB3aW5rIHRvIGV2ZXJ5b25lIHdobyBjYXJlcy4gSXQgY29tcGxldGVseSBkaWZmZXJlbnQgZnJvbSBndXlzIGxpa2UgU2ltZW9uIFBhbmRhIGFuZCBNaWtlIE8gd2hvIGFyZSBzZWxsaW5nIGRhbWFnaW5nIGxpZXMgdG8gcGVvcGxlIHdobyBsb29rIHRvIHRoZW0gZm9yIGluc3BpcmF0aW9uIGFuZCBndWlkYW5jZS4KSWYgeW91IHdhbnQgdG8gbWFrZSBhbnl0aGluZyBkZWNlbnQsIHRoZSB0b29scyB5b3UgbmVlZCBhcmUgZXhwZW5zaXZlLiAKVGhpcyBpcyBhIGZvbGQgYSB2ZXJ5IGhlYXZ5IHNpZ2ggYW5kIGxldCBpdCBnbyBzYXZlIHlvdXIgZXh0cmEgMTUwYmIgeW91cmUgYmVhdGluZyBub3QgbXVjaCBhdCBhbGwuIApFdmVuIGlmIHlvdSBub3Qgc3VyZSBpbiB0aGUgbW9ybmluZyBwbGVhc2Ugc2hvb3QgbWUgYSB0ZXh0IGxldHRpbmcgbWUga25vdyB0aGVyZSBpcyBhIHBvc3NpYmlsaXR5IG9mIHlvdSBub3QgY29taW5nIGluLiBJdCBhbGxvd3MgbWUgdG8gcHJlcCBhIHRlbnRhdGl2ZSBzdWIuIApNZWFud2hpbGUsIENoYXJsZXMgcmV0dXJuZWQgdG8gaGlzIG1pc3RyZXNzICd3aGVuIGl0IHdhcyBjbGVhciB0aGUgbWFycmlhZ2UgaGFkIGJyb2tlbiBkb3duJy4gCkkgYWxzbyAiYmUgZnJpZW5kZWQiIGFuZCBzZWNyZXRseSByZWNvcmRlZCBjb252ZXJzYXRpb25zIHdpdGggc2V2ZXJhbCBvZiB0aGUgc2VydmljZSBwcm92aWRlcnMgYW5kIHRoZSBvd25lcnMgdG8gdW5kZXJzdGFuZCBtb3JlIGFib3V0IHRoZSBidXNpbmVzcyBhbmQgb3BlcmF0aW9ucyBhbmQgbG9naXN0aWNzLiAKVGFrZSB0aGUgdGltZSB0byBsZWFybiBob3cgdG8gZG8gdGhpcy4gClRoZXkgZm9jdXMgb24gbWFueSBkaWZmZXJlbnQgbmF0aW9uYWwgbWFya2V0cyBhbmQgYXJlIHN1Y2NlZWRpbmcgdmVyeSB3ZWxsIGZvciBkb2luZyB0aGF0LiAKVGhhdCAkMyw1ODIsNzUzIHBpY2t1cCB3YXMgSXZleSdzIGJlc3QgaW4gMjAxNCBhbmQgYWxsb3dlZCB0aGUgTmV3IEplcnNleSBsZWdlbmQgdG8gY3Jvc3MgdGhlICQyME0gbWFyayBpbiBjYXJlZXIgZWFybmluZ3Mgb24gdGhlIGxpdmUgdG91cm5hbWVudCBjaXJjdWl0LiAKQWxzbyBJIHNlZSB0aGF0IHlvdSBzYWlkICJJIGhhdmUgd2FpdGVkIGZvciBwcmVtaXVtIGhhbmRzICAgYm90aCBjYXJkcyBvdmVyIDEwLiBObyBkaWNlIi4gT25lIGltcG9ydGFudCB0aGluZyB0byB0aGluayBhYm91dCBpcyB0aGUgdmFsdWUgb2YgaGFuZHMgbGlrZSAzMyBjb21wYXJlZCB0byBRMTBvLgpVc2UgeW91ciB0aHVtYnMgdG8gcHV0IGZvcmNlIG9uIHRoZSBzb2xlIG9mIHlvdXIgZm9vdCwgZ3JhZHVhbGx5IHJlbG9jYXRpbmcgZnJvbSB0aGUgdG9lcyB0byB0aGUgaGVlbC4gQ2xhc2ggcm95YWxlIGhhY2sgbW9iaWxlIEZvciB0b2VzIHRoYXQgYXJlIHBhcnRpY3VsYXJseSBhY2h5IHlvdSBjYW4gYXBwbHkgYSBsb3QgbW9yZSBzdHJlc3MgYnkga25lYWRpbmcgdGhlIHNvbGUgd2l0aCB5b3VyIGtudWNrbGVzLiAKSXRzIHBhdGhldGljIGhvdyB3ZXN0ZXJuZXJzLCBwcmVzdW1hYmx5IG1hbGVzLCB3aG8gcHJvYmFibHkgbmV2ZXIgc2VyaW91c2x5IGdhdmUgMiBzaGl0cyBhYm91dCBmZW1pbmlzbSBvciB3b21lbnMgcmlnaHRzIHN1ZGRlbmx5IGdldCBkZWZlbnNpdmUgd2hlbiBpdCBjb21lcyB0byAib3duZXJzaGlwIiBvZiBmZW1pbmlzbSwgYW5kIHRhbGsgb3ZlciBBQ1RVQUwgZmVtYWxlIGZlbWluaXN0IHNjaG9sYXJzIGluIGNsYWltaW5nIHdobyBpdCByZXZvbHZlcyBhcm91bmQuIFdlc3Rlcm4gY2hhdXZpbmlzdHMgbWF5IHRyZWF0IGZlbWluaXNtIGFzIGEgZGlzZWFzZSwgYnV0IHRoZXkgd2FudCBpdCB0byBiZSBUSEVJUiBkaXNlYXNlLiBMT0wuClNhdGVsbGl0ZSB0b3VybmFtZW50OiB0aGlzIGlzIHlvdXIgZmlyc3QgcG9rZXIgdG91cm5hbWVudCB0byBzdGFydCB3aXRoLiBJbiB0aGUgc2F0ZWxsaXRlIHRvdXJuYW1lbnQgd2hpY2ggaXMgdGhlIGJlc3Qgd2FybWluZyB1cCBmb3IgaGlnaGVyIHN0YWtlIHBva2VyIHRvdXJuYW1lbnRzLiAKQXUgY3VyIG1tZSBkIHBsYW50ZSwgbGVzIHNlc3F1aXRlcnBuZXMgam91ZW50IGxlIHJsZSBkIGRlIGRmZW5zZS4gQ2VsYSBuIHBhcyB0b3V0ICBmYWl0IHVuIGhhc2FyZCBzaSBsZXMgaHVpbGVzIGVzc2VudGllbGxlcyBxdWkgZW4gY29udGllbm5lbnQgcHJzZW50ZW50IHBldSBvdSBwcm91IGRlcyBwcm9wcml0cyBhbnRpIGluZmVjdGlldXNlcyAoYmllbiBxdWUgY2UgbmUgc29pdCBwYXMgbCBsZXVyIGRvbWFpbmUgZGUgcHJkaWxlY3Rpb24pLlNpIGNldHRlIGZhbWlsbGUgcmVuZmVybWVudCBkZSBub21icmV1c2VzIG1vbGN1bGVzIGRpZmZyZW50ZXMgbGVzIHVuZXMgZGVzIGF1dHJlcywgb24gcGV1dCBkaXJlIHF1ZSwgZ2xvYmFsZW1lbnQsIGxlcyBodWlsZXMgZXNzZW50aWVsbGVzICBmb3J0ZSB0ZW5ldXIgZW4gc2VzcXVpdGVycG5lcyBzb250IGRvdGVzIGRlcyBwcm9wcml0cyB0aHJhcGV1dGlxdWVzIHN1aXZhbnRlcyA6QmllbiBzciwgaWwgcyBsIGQgdHJvbmMgY29tbXVuIGRlIHByb3ByaXRzIHRocmFwZXV0aXF1ZXMsIGQgaHVpbGVzIGVzc2VudGllbGxlcyAgc2VzcXVpdGVycG5lcyBwcnNlbnRhbnQgZGVzIHByb3ByaXRzIHBsdXMgc3BjaWZpcXVlcyBxdWUgbiBwYXMgbGVzIGF1dHJlcy4gCkxldCBhcHBseSB0aGlzIGZvcm0gb2YgYXJndW1lbnQgZWxzZXdoZXJlIHRvIHNob3cgd2h5IGl0IGZsYXdlZDogIlN0ZWFtIG9ubHkgYmVjYW1lIHBvcHVsYXIgYmVjYXVzZSBwZW9wbGUga2VwdCBoZWFyaW5nIGFib3V0IGl0Ii4gCllvdSB3aWxsIGFsc28gYmVnaW4gdG8gdXNlIGNvbG9yLCBzaGFwZXMsIGFuZCBsaWdodCBpbiB5b3VyIGhlYWxpbmcgd29yay4uIApCZXNpZGVzIGluY3JlYXNpbmcgc3VuIGV4cG9zdXJlLCB0aGUgYmVzdCB3YXkgdG8gZ2V0IGFkZGl0aW9uYWwgdml0YW1pbiBEIGlzIHRocm91Z2ggc3VwcGxlbWVudGF0aW9uLiAKTGFjayBvZiBibG9vZCBmbG93ID0gbGFjayBvZiBveHlnZW4uIApUaGlzIGlzbid0IG15IHdvcmtwbGFjZSB3aGVyZSBJIGFtIHBhaWQgZm9yIG15IGF0dGVuZGFuY2UsIEkgcGFpZCBmb3IgbXkgZWR1Y2F0aW9uIGFuZCBpZiBJIHdhbnQgdG8gbWlzcyBvdXQgb24gdGltZSBJIHBhaWQgZm9yLCB0aGF0IGlzIHVwIHRvIG1lLiBJZiBJIGZhaWwgdG8ga2VlcCB1cCBpbiB0aGUgY2xhc3MgYXMgYSByZXN1bHQsIHNvIGJlIGl0LCBidXQgaWYgSSBhbSBkb2luZyB0aGUgaG9tZXdvcmsgYW5kIHBhc3NpbmcgdGhlIHF1aXp6ZXMgYW5kIHRlc3RzLCBpdCdzIG15IG93biBkYW1uZWQgcHJlcm9nYXRpdmUgdG8gc2hvdyB1cCB3aGVuZXZlciBJIHBsZWFzZS4gSWYgeW91IHBheSBtZSB0byBhdHRlbmQgY2xhc3Mgb3IgSSBhbSBhdHRlbmRpbmcgZnJlZSBjbGFzc2VzLCBmaW5lLCBwZW5hbGl6ZSBtZSBmb3IgbXkgdGFyZGluZXNzLiAKRml2ZSBtb3JlIGNhcmRzIHdpbGwgY29tZSwgZmFjZSB1cCwgYW5kIHBsYXllcnMgc2hhcmUgdGhvc2UgY2FyZHMuIEZpcnN0IHRoZSBkZWFsZXIgdHVybnMgdXAgdGhyZWUgY2FyZHMgKHRoZSBmbG9wKSwgdGhlbiBvbmUgY2FyZCAodGhlIHR1cm4pIGFuZCB0aGVuIGEgZmluYWwgY2FyZCAodGhlIHJpdmVyKS4gVGhlcmUgaXMgYmV0dGluZyBiZXR3ZWVuIGVhY2ggZGVhbC4gCkkgaGF2ZSBnb25lIGFzdHJheSBhdCB0aW1lcywgZ2V0dGluZyB0b28gY29tZnkgbm90IHRyYWNraW5nLCB0b28gaGlnaCBpbiBjYXJicywgYW5kIHBhaWQgd2l0aCBoYXZpbmcgYXVyYXMgYW5kIHNvbWUgaGVhZGFjaGUgcmV0dXJuLCBsdWNraWx5IG1pbGRlciBwYWluIHRoYW4gdGhlIHVzdWFsIG1pZ3JhaW5lcyB3ZXJlLiBJdCdzIGxpa2UgSSB2aWV3IHRoZSB3b3JsZCB3aXRoIGEgbXVjaCBtb3JlIG9wdGltaXN0aWMgbGVucy4gCkNvbmZlc3Npb246IEkgZ2V0IHN1cGVyIGp1ZGdtZW50YWwgb24gcGVvcGxlIChub24gcnVubmVycykgSSBzZWUgZHVyaW5nIG15IHJ1bnMuIEkgdXN1YWxseSBhIHZlcnkgYWdyZWVhYmxlIGFuZCB1bmRlcnN0YW5kaW5nIHBlcnNvbiwgYnV0IHRoZSBpbnRlcm5hbCByYWdlIGNvbWVzIG91dCB3aGlsZSBydW5uaW5nLiBTYW1lIHRob3VnaHRzIHJ1biB0aHJvdWdoIG15IGhlYWQgd2hlbiBJIHNlZSAiaVBob25lIHpvbWJpZXMiIHRoYXQgYXJlIGNvbWluZyB0b3dhcmRzIG1lIGFuZCB0YWtlIHVwIHRoZSBlbnRpcmUgc2lkZXdhbGsvdHJhaWwgYW5kIEkgZm9yY2VkIHRvIG1vdmUgb3V0IG9mIHRoZSB3YXksIEFORCBkcml2ZXJzIHRoYXQgYmxvdyB0aHJvdWdoIHN0b3Agc2lnbnMgb3Igc3RvcCBvdmVyIHRoZSBjcm9zcyB3YWxrLiBTbyBmcnVzdHJhdGluZy4KUGV0ZXIgcmV0dXJuZWQgdG8gUGFpc2xleSBvZnRlbiBhZnRlciBwdXJjaGFzaW5nIGEgdHJhY3Qgb2YgbGFuZCBhbG9uZyB0aGUgU2F1Z2VlbiBSaXZlci4gCkkgaGF2ZSBzb21lIGNhbGxzIG91dCBhbmQgVHJveSBLZWVwaW5nIGF0IFNvdXRobGFuZCBwcm9taXNlZCB0byBnZXQgYmFjayB0byBtZS4gCkl0IHdhcyB0aGUgYmVnaW5uaW5nIG9mIGEgcGFpbmZ1bCwgYnV0IGhpZ2hseSBlbmxpZ2h0ZW5pbmcgam91cm5leSBpbnRvIHRoZSB3b3JsZCBvZiBhZHZhbmNlZCBmaW5hbmNlLiAKT2duaSBTb2NpbyBoYSBsYSBwb3NzaWJpbGl0IGRpIHBhcnRlY2lwYXJlIGEgcXVhbHNpYXNpIHRpcG8gZGkgbWFuaWZlc3RhemlvbmUgb3JnYW5penphdGEgbyBwcm9tb3NzYSBkYWxsJ0Fzc29jaWF6aW9uZSBlZCBoYSBpbCBkaXJpdHRvIGRpIGVzc2VyZSBpbmZvcm1hdG8sIGluIHRlbXBpIGNvbnNvbmksIGRlbGxlIGluaXppYXRpdmUgb3JnYW5penphdGUuClRoZSA3NyB5ZWFyIG9sZCBmb3JtZXIgTmV3IFlvcmsgQ2l0eSBtYXlvciwgb25lIG9mIHRoZSByaWNoZXN0IG1lbiBpbiB0aGUgd29ybGQsIGFubm91bmNlZCBoaXMgZGVjaXNpb24gbm90IHRvIGpvaW4gdGhlIGNyb3dkZWQgRGVtb2NyYXRpYyBmaWVsZCBpbiBhIEJsb29tYmVyZyBOZXdzIGVkaXRvcmlhbCBvbiBUdWVzZGF5LgpNb3N0IGxpa2VseSwgdGhpcyB3aWxsIG5vdCBnZXQgYW55IGJldHRlci4gCg==|<---