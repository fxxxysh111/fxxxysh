--->|RGVtZXRyaSBNYXJ0aW4gaGVhZGxpbmVzIHRoZSBBZ29yYSBpbiBDbGV2ZWxhbmQgRnJpZGF5IERlbWV0cmkgTWFydGluIGhlYWRsaW5lcyB0aGUgQWdvcmEgaW4gQ2xldmVsYW5kIEZyaWRheSBEZW1ldHJpIE1hcnRpbiBicmluZ3MgdGhlICJXYW5kZXJpbmcgTWluZCBUb3VyIiB0byB0aGUgQWdvcmEgaW4gQ2xldmVsYW5kIEZyaWRheSBuaWdodC4gCkkgdGhpbmsgdGhhdCBNdWVsbGVyIGhhcyBkb25lIGhpcyBiZXN0IHRvIGF2b2lkIGNhdXNpbmcgVHJ1bXAgdG8gZmVlbCB0aGF0IGhlIG9yIGhpcyBmYW1pbHkgYXJlIGFib3V0IHRvIGJlIGluZGljdGVkLiBZZXQuCldlIHNob3VsZCBzZWUgdGhhdCB0aGUgbWVzc2FnZSB3aGljaCB3ZSBhcmUgZ29pbmcgdG8gZGVsaXZlciBzaG91bGQgbm90IGNyZWF0ZSBhbnkgY29uZmxpY3Qgb3IgY29uZnVzaW9uIHRvIHJlY2VpdmVyLiBUaGUgbWVzc2FnZSBzaG91bGQgYmUgZGVzaWduZWQgaW4gc2ltcGxlIGxhbmd1YWdlLi4gCk9uemUgcm91dGUgd2VyZCBncm9lbmVyIGVuIGdyb2VuZXIgZW4gZGUgYXV0b3N0cmFkZSBoZWVsIGJvY2h0aWcsIHR1c3NlbiBkZSBoZXV2ZWxzIGVuIGxhbmdzIGVlbiByaXZpZXIuIERlIGFmcml0IGVuIGRhbiBub2cgZWVuIGVpbmRqZSByaWpkZW4gZG9vciBkaXQgbW9vaWUgZW4gZWNodCBoZWVsIGdyb2VuZSBsYW5kc2NoYXAuIFdlIGt3YW1lbiB6byBpbiBkZSBtaWpuc3RyZWVrOyBoaWVyIGJyYWNodCBnZW9jYWNoaW5nIG9ucyBuYWFyIGVlbiBhYW50YWwgdHlwaXNjaGUgcGxhYXRzamVzIGRpZSB3ZSB6ZWxmIG5vb2l0IGdldm9uZGVuIHpvdWRlbiBoZWJiZW4uIApBbmQgdGhlIGxpc3QgZ29lcyBvbi4gClNlY29uZCBvZiBhbGwsIHdoaWxlIHRoZXJlIGFyZSBhbHdheXMgbmV3IHVzZXJzIGpvaW5pbmcgdGhlIHNpdGUsIHRoZXJlIGFyZSBhbHNvIG1hbnkgbW9yZSBwZW9wbGUgd2hvIGhhdmUgYmVlbiBhcm91bmQgbG9uZyBlbm91Z2ggdG8gcmVjb2duaXplIHJlY3ljbGVkIGNvbnRlbnQgd2hlbiB0aGV5IHNlZSBpdC4gQXMgb25lIG9mIHRoZSBsYXJnZXN0IGNvbW11bml0aWVzIG9uIFJlZGRpdCwgd2UgZmVlbCBhIGNlcnRhaW4gcmVzcG9uc2liaWxpdHkgdG8ga2VlcCB0aGluZ3MgYXMgZnJlc2ggYW5kIGVudGVydGFpbmluZyBhcyBwb3NzaWJsZS4gCldlIGZ1bmN0aW9uZWQgb24gbGVzcyB0aGFuIDQgNSBob3VycyBvZiBzbGVlcCBmb3IgbW9udGhzLiAKS2lkcyBjYW4gcHVzaCBsaWdodHMgb24gdGhlIHNob2UgZGlyZWN0bHkgb3IgdXNlIHRoZSByZW1vdGUgdG8gcGxheSBhbG9uZy4gQ0VTLCB0aGUgd29ybGQncyBsYXJnZXN0IGFubnVhbCBjb25zdW1lciB0ZWNobm9sb2d5IHRyYWRlIHNob3csIHJ1bnMgdGhyb3VnaCBKYW51YXJ5IDkgYW5kIGZlYXR1cmVzIDMsNjAwIGV4aGliaXRvcnMgc2hvd2luZyBvZmYgdGhlaXIgbGF0ZXN0IHByb2R1Y3RzIGFuZCBzZXJ2aWNlcyB0byBtb3JlIHRoYW4gMTUwLDAwMCBhdHRlbmRlZXMuIApGZXR1c0ZvbmRsZXIgdQpDb2xlIE5vcm1hbGUgU29jaWFsZSBUb3JjeSwgMiBydWUgZGUgVG9yY3kgKDVtZSB0YWdlKSwgUGFyaXMgMThlClRvIHNhZmVseSBlYXJuIGFib3ZlICQ4MGsgYXMgYSBzb2Z0d2FyZSBlbmdpbmVlciB3aXRob3V0IHdvcnJ5aW5nIGFib3V0IGEgc2VjdXJpdHkgY2xlYXJhbmNlIHlvdSB3b3VsZCBwcm9iYWJseSBoYXZlIHRvIG1vdmUgc29tZXdoZXJlIGVsc2UgaW4gdGhlIGNvdW50cnkuLiAKTWFuIEkgcmVhbGx5IGRvbiB3YW50IHRvIGhhdmUgdGhpcyBvcGluaW9uIGFib3V0IGhpcyBzdXBwb3J0ZXJzIGJ1dCB0aW1lIGFuZCBhZ2FpbiB0aGV5IHByb3ZlIHRoZXJlIGlzIGFic29sdXRlbHkgbm90aGluZyB0aGF0IHdvdWxkIGNoYW5nZSB0aGVpciBtaW5kcy4gSWYgaXQgZW5kcyB1cCBUcnVtcCBsYW5kcyBoaW1zZWxmIGluIGZlZGVyYWwgamFpbCAgIHBlb3BsZSB3aWxsIHRoaW5rIGl0IHdhcyBhIGRlZXAgc3RhdGUgY291cCBhZ2FpbnN0IHRoZWlyIG1vc3QgYmVsb3ZlZCBsZWFkZXIuLiAKRG93bmxvYWQgdGhlIGZ1bGwgdmVyc2lvbiAuIAoiSSBoYXZlIHRvIHNheSBJJ20gdmVyeSBib3JpbmcsIiBoZSBzYXlzLiAiSSBkb24ndCBzcGVuZCBsYXJnZSBzdW1zIG9uIGZsYXNoeSBjbG90aGVzIG9yIFJvbGV4ZXMuIEkndmUgZ2lmdGVkIGEgYmlnIGNodW5rIG9mIHRoZSBtb25leSB0byBmYW1pbHkgYW5kIGludmVzdGVkIGluIGFub3RoZXIgYnVzaW5lc3MgYXMgYSBzbGVlcGluZyBwYXJ0bmVyLiBCdXQgSSdtIHN0aWxsIGRyaXZpbmcgdGhlIHNhbWUgY2FyLiIKVGhlIG1haW4gZ2FpbnMgYXJlIGluIGluY3JlYXNlZCByZWxpYWJpbGl0eSwgZHVlIHRvIGZld2VyIGluZGVwZW5kZW50IHBhcnRzIGluIGVuZ2luZXMsIG1vcmUgcmVkdW5kYW5jeSBhbmQgYWJpbGl0eSB0byB0cm91Ymxlc2hvb3QsIGR1ZSB0byBzZW5zb3JzIGJlaW5nIHRpbnkgYW5kIGxpZ2h0d2VpZ2h0LCBjcml0aWNhbGx5LCBiZWluZyBlbGVjdHJvbmljLiBUaGUgU2F0dXJuIFYgZ3VpZGFuY2UgdW5pdCB3ZWlnaGVkIGFsbW9zdCAxLjV0LCBtZWFud2hpbGUsIHlvdSBiZSBoYXJkIHByZXNzZWQgdG8gZmluZCBldmVuIGEgdGVudGggb2YgdGhhdCBtYXNzIGZvciBhIG1vZGVybiBndWlkYW5jZSBzeXN0ZW0uCkNoZWVycyEgVGhhbmtzIGZvciBzaGFyaW5nLiBIb3BlIHlvdSBoYXZlIGEgZ3JlYXQgcmVzdCBvZiB5b3VyIGRheTsgYW5kIGZlZWwgZnJlZSB0byByZWFjaCBvdXQgaWYgeW91IG5lZWQgYW55dGhpbmcuCjJvIERheS4gR29sZGVuLiAKQSBjb3VwbGUgZWFybHkgcG9zaXRpb24gbGltcHMgZnJvbSBkcnVuayBraWRzIEknbSB0cnlpbmcgdG8gcGxheSBwb3RzIHdpdGgsIEkgbGltcCBpbiB0aGUgSEogd2l0aCAxMGM4Yy4gClNuaXBlcnM6IFRoZXkgYXJlIG9uIHRoZSBib3R0b20gb2YgdGhlIG1ldGEgcmlnaHQgbm93LCBhbmQgSSBkb24gc2VlIHRoZSBwb2ludCBvZiBrbm9ja2luZyBkb3duIHNvbWVvbmUgMTUwKyBNZXRlcnMgYXdheSwgb25seSB0byBoYXZlIHRoZWlyIHRlYW1tYXRlIHJldml2ZSBiZWZvcmUgd2UgY291bGQgY2xvc2Ugb3V0IHRoZSBraWxsLiBUaGUgZ2FtZSBmYXZvcnMgY2xvc2UgZW5nYWdlbWVudHMsIHNvIEkgZG9uIHNlZSB0aGUgbWV0YSBoYXZpbmcgc25pcGVycyBpbiBpdCB1bmxlc3Mgc29tZXRoaW5nIGNoYW5nZXMuIEkgdGhpbmsgdGhpcyBjb3VsZCBiZSBjaGFuZ2VkIGJ5IGhhdmluZyBhIG1lY2hhbmljIGFyb3VuZCBzbmlwZXIga25vY2tkb3ducy4gUGVyaGFwcyBpZiB5b3Uga25vY2sgc29tZW9uZSBmcm9tIGEgbG9uZyBkaXN0YW5jZSB3aXRoIGEgc25pcGVyLCB0aGV5IGNhbiBiZSByZXZpdmVkIGZvciAxMCBzZWNvbmRzLgpUaG9zZSB0aGluZ3MgYXJlIHJlYWQgcmVtb3RlbHkgYW5kIHRoZSBUU0EgYWdlbnQgdmlld2luZyB0aGUgc2NhbnMgYXJlIChmb3IgdGhlIG1vc3QgcGFydCkgbm90IGludGVyZXN0ZWQgaW4gYW55dGhpbmcgbGlrZSBqZXdlbHJ5IG9yIHRoZSBtZXRhbCByaXZldHMgb24gamVhbnMuIFRoZXkgYXJlIGxvb2tpbmcgZm9yIGNlcnRhaW4gc2hhcGVzIGFuZCBzaXplcyBvZiB0aGluZ3MgdGhhdCBtaWdodCBiZSB3ZWFwb25zLiAKT25lIFdlZWsgS0MsIGEgc2VyaWVzIG9mIGV2ZW50cyBkZXNpZ25lZCB0byBpbnNwaXJlLCBlZHVjYXRlIGFuZCBjb25uZWN0IEthbnNhcyBDaXR5IGVudHJlcHJlbmV1cnMsIGtpY2tzIG9mZiBKdW5lIDE4IGFuZCBydW5zIHRocm91Z2ggSnVuZSAyNiwgZmVhdHVyaW5nIG5pbmUgZGF5cyBvZiBldmVudHMgYWltZWQgYXQgY2VsZWJyYXRpbmcgYW5kIHJhaXNpbmcgdGhlIHByb2ZpbGUgb2YgS2Fuc2FzIENpdHkgZW50cmVwcmVuZXVyaWFsIHNjZW5lLgpIZSBzYWlkIHRoZXJlIHdhc24gZW5vdWdoIHZhcmlldHkuIApJIHNldCBteSBvd24gc2NoZWR1bGUgbW9yZSBvciBsZXNzLCBzbyBpdCB3YXMgcHJldHR5IGRlY2VudCBmb3IgYSBjb2xsZWdlIGdpZy4gCkkgaGF2ZSBhIHByb2JsZW0gcmVsYXRlZCB0byBhIGxvb3BpbmcgbWVjbmFuaXNtLiBTdXBwb3NlIEkgYW0gZGViYXRjaGluZyAxMDAwIHJlY29yZHMgdXNpbmcgWFBhdGggYW5kIGluc2lkZSBhIGxvb3Agd2hlcmUgSSBhbSBzZW5kaW5nIGluZGl2aWR1YWwgZGViYXRjaGVkIHJlY29yZHMgdG8gTVMgQ1JNIHN5c3RlbS4gSW4gY2FzZSBhbnkgZXJyb3Igb2NjdXJpbmcgd2l0aGluIHRoZSBsb29wLCBJIGFtIHNlbmRpbmcgdGhlIGZpbGUgdG8gYSBwZXJ0aWN1bGFyIGZvbGRlciB3aXRoIGVycm9yIGluZm8gYXBwZW5kZWQgd2l0aCB0aGF0IHJlY29yZC4KSW4gaGVyIHNwYXJlIHRpbWUsIHNoZSBpcyBhIGNvbXBldGl0aXZlIGJsaW5kIHdpbmUgdGFzdGVyIGJ1dCByZW1lbWJlcnMgdG8gZW5qb3kgdGhlIG9jY2FzaW9uYWwgZ2xhc3Mgb2Ygd2luZSBqdXN0IGZvciBwbGVhc3VyZS4uIAoyMDE5IEZhbnRhc3kgQmFzZWJhbGwgRHJhZnQgU3RyYXRlZ3kKUmVnYXJkbGVzcywgc29tZW9uZSBhdCB0aGUgY29tcGFueSBmZWx0IHRoYXQsIHdoaWxlIHRoZSBlbXBsb3llZSBtYXkgaGF2ZSBmb2xsb3dlZCB0aGUgcnVsZXMsIHRoZXkgZGlkIG5vdCBtYW5hZ2UgdGhlIHNpdHVhdGlvbiBpZGVhbGx5LCBzbyBpbiBvcmRlciB0byBlbnN1cmUgdGhhdCB0aGUgZW1wbG95ZWUgaXMgYXdhcmUgb2YgcHJvY2VkdXJlIGFuZCBwcm9jZXNzZXMsIHRoZXkgc2NoZWR1bGVkIHRyYWluaW5nLiBNYXliZSBhcyBhIHJlZnJlc2hlciwgbWF5YmUgYmVjYXVzZSB0aGV5IHRob3VnaHQgdGhhdCB0aGlzIGVtcGxveWVlIGNvdWxkIGltcHJvdmUgdGhlaXIgY3VzdG9tZXIgaW50ZXJhY3Rpb25zLgpIb3cgVG8gVXNlIE1hc3NhZ2UgdG8gVHJlYXQgQ2VsbHVsaXRpcwpNaWNoZWxsZSBCcm93bmxlZSwgb2YgU3ByaW5nIEhpbGwsIFRlbm5lc3NlZSwgc3RhcnRlZCBicnVzaGluZyBpbiB0aGUgc2hvd2VyIHdoaWxlIGluIGNvbGxlZ2UuICJXZSBoYWQgY29tbXVuaXR5IGJhdGhyb29tcywgc28gSSBoYWQgYSBzaG93ZXIgYnVja2V0IHdpdGggY29tcGFydG1lbnRzIGZvciBhbGwgb2YgbXkgYmF0aHJvb20gaXRlbXMuIE15IHRvb3RoYnJ1c2ggd2FzIGluIHRoZXJlIHdpdGggbWUgc28gSSdkIGJydXNoIG15IHRlZXRoIGluIHRoZSBzaG93ZXIgaW4gdGhlIG1vcm5pbmcgICBvbmUgbGVzcyB0aGluZyB0byBoYXZlIHRvIGRvIGluIHRoZSBjb21tdW5pdHkgc2lua3MsIiBzaGUgc2F5cyBpbiBhbiBlbWFpbC4gIlRoZW4gd2l0aCBteSBmaXJzdCBqb2IgSSB3YXMgYWx3YXlzIHJ1bm5pbmcgbGF0ZSBpbiB0aGUgbW9ybmluZywgc28gaXQgZmVsdCBsaWtlIGRvaW5nIHRoYXQgd2hpbGUgY29uZGl0aW9uaW5nIG15IGhhaXIgd2FzIGEgdGltZSBzYXZlci4iCkhlIHdhcyBob3NwaXRhbGl6ZWQgZm9yIG5lYXJseSBhIG1vbnRoLCBhbmQgYWZ0ZXIgQm9iaWFuIHdhcyByZWxlYXNlZCwgRGlzdHJpY3QgSnVkZ2UgS3lsZSBIaWdncyBUYXJyYW50IHJlbGVhc2VkIGhpbSBvbiBhICQyNTAsMDAwIHBlcnNvbmFsIHJlY29nbml6YW5jZSBib25kIHRoYXQgaW5jbHVkZWQgYSB0ZXRoZXIgdGhhdCBvbmx5IHdvdWxkIGFsbG93IGhpbSB0byB0cmF2ZWwgYmFjayBhbmQgZm9ydGggdG8gbWVkaWNhbCBhcHBvaW50bWVudHMuLiAKSSBsaWtlIHRvIGJlIHdpbm5pbmcgYXQgYW55dGhpbmcuIApObyBkb3VidCB0aGF0IHRoZXJlIGFyZW4ndCBtYW55IHBlb3BsZSB3aXRoIGxlZ2l0aW1hdGUgZWNvbm9taWMgcmVhc29ucyBmb3Igbm90IG1vdmluZyBvdXQuIFRydWx5LCBJIGZpbmQgdGhlIGxhY2sgb2YgZGVzaXJlIGZvciB0aGUgaW5kZXBlbmRlbmNlIGlzIHdoYXQgcHV0cyBtZSBvZmYuIEFsc28sIHRoZSBnZW5lcmFsIGRpc2hvbmVzdHkgd2l0aCBldmVyeW9uZSBhbmQgdGhlbXNlbHZlcy4gRG9uJ3QgdGVsbCBwZW9wbGUgaXQncyAiaW1wb3NzaWJsZSIgZm9yIHlvdSB0byBtb3ZlIG91dC4gSnVzdCBzYXkgeW91IGRvbid0IHdhbnQgdG8uIFlvdSd2ZSBnb3Qga2lkcyBjb252aW5jZWQgdGhleSBjYW4ndCBtb3ZlIG91dCBvZiB0aGVpciBwYXJlbnRzIGhvdXNlIGJlZm9yZSB0aGV5J3ZlIGV2ZW4gc3RhcnRlZCBoaWdoIHNjaG9vbCwgYmFzZWQgb24gbm90aGluZyBidXQgcG9wdWxhciByaGV0b3JpYy4gVGhleSBkb24ndCBldmVuIHRyeS4gQWxzbywgdGhlIG1vcnRnYWdlIHdlIGFjcXVpcmVkIDQgMS8yIHllYXJzIGFmdGVyIHdlIHN0YXJ0ZWQgcmVudGluZyBvdXIgYXBhcnRtZW50IGRpc2FncmVlcyB3aXRoIHRoYXQgc2VudGltZW50LiBJdCByZWFsbHkgZGVwZW5kcyBvbiB3aGVyZSB5b3UgbGl2ZS4gTW9zdCBwbGFjZXMgaW4gb3VyIGNvdW50cnkgZG9uJ3QgcmVxdWlyZSB0aGF0IHlvdSBzcGVuZCAkNTAwayBvbiB5b3VyIGZpcnN0IGhvbWUuClRoZSBmaXJzdCB0aGluZyB0aGF0IHlvdSB3YW50IHRvIGVuc3VyZSB0aGF0IHlvdSBwYXkgc3BlY2lhbCBhdHRlbnRpb24gdG8gd2hlbiBpdCBjb21lcyB0byBxdWFsaXR5IGluIHBva2VyIGNoaXBzIGlzIHRoZSBpbmxheSwgb3IgdGhlIGxhYmVscyBvZiB0aGUgaW5sYXkuIE1hbnkgcG9rZXIgY2hpcHMgaGF2ZSBkZXNpZ25zIG9yIHN0aWNrZXJzIHRoYXQgYXJlIHByaW50ZWQgb24gdGhlbS4gSW4gb3JkZXIgdG8gZGV0ZXJtaW5lIGlmIHRoZSBjaGlwIGV4aGliaXRzIGhpZ2ggcXVhbGl0eSBvciBsb3cgcXVhbGl0eSwgeW91IHNob3VsZCBzZWUgaWYgdGhlIGlubGF5IHNjcmF0Y2hlcyBlYXNpbHksIG9yIGlmIGl0IGNhbiBiZSByZW1vdmVkIGVhc2lseSBkdXJpbmcgZ2FtZSBwbGF5LgpDZXJ0ZXMsIGxhIHF1ZXN0aW9uIGRlIGwnY29sb2dpZSBuJ2VzdCBwYXMgdW5lIHByb2JsbWF0aXF1ZSBxdWkgcGV1dCBzZSByZHVpcmUgIHVuIHRlcnJpdG9pcmUgYXVzc2kgY2libCBxdSd1bmUgdmlsbGUsIGZ1dCBlbGxlIHVuZSBjYXBpdGFsZSwgbWFpcyBpbCBuZSBmYXV0IHJpZW4gbmdsaWdlciA7IGNlIHNvbnQgbGVzIHBldGl0cyBydWlzc2VhdXggcXVpIGZvbnQgbGVzIGdyYW5kZXMgcml2aXJlcyBkZSBsYSBwbGFudGUgVGVycmUuIENlcyBwcm9qZXRzIHBpbG90ZXMsIGR1IG1vaW5zIGNldXggcXVpIHNlcm9udCBzbGVjdGlvbm5zLCBzZXJvbnQgdGVzdHMgc3VyIHVuZSBwcmlvZGUgZGUgdHJvaXMgYW5zLiAKQW5kIHRoZSB3aG9sZSAiQSBsYXcgPS89IHBvd2VyIGdpdmVuIHRvIGEgZ3JvdXAgdG8gY29udHJvbCB0aGUgc3lzdGVtLiIgSnVzdCBkb2VzbiBwYXJzZSBmb3IgbWUuIEkgaGF2ZSBubyBjbHVlIHdoYXQgeW91IGFyZSB0YWxraW5nIGFib3V0LiBBIGxhdyBkb2VzIG5vdCBtZWFuIHBvd2VyIGdpdmVuIHRvIGEgZ3JvdXAgdG8gY29udHJvbCB0aGUgc3lzdGVtPyBUaGVyZSBhcmUgdG9ucyBvZiBsYXdzIHRoYXQgZ3JhbnQgcmVndWxhdG9yeSBwb3dlciB0byBvbmUgYWdlbmN5IG92ZXIgc3lzdGVtcywgY29tcGFuaWVzLCBhbmQgc2VydmljZXMuCkFnbmVzIEZpc2NoZXIgQ3JlZGl0OiBUaGUgRmlzY2hlciBpcyBub3cgcHJlc2lkZW50IG9mIFRoZSBOZXcgWW9yay4gU2hlIGpvaW5zIGZyb20gRHJvZ2E1LCB3aGVyZSBzaGUgd2FzIGV4ZWN1dGl2ZSBncm91cCBkaXJlY3RvciBhbmQgY28gaGVhZCBvZiBhY2NvdW50IG1hbmFnZW1lbnQuIFNoZSByYW4gYWdlbmN5IG9wZXJhdGlvbnMgYW5kIHRoZSBKUCBNb3JnYW4gQ2hhc2UgYW5kIE5ldyBZb3JrIFRpbWVzIGFjY291bnRzLiBTaGUgYWxzbyBoZWxkIHBvc2l0aW9ucyBhdCBPcmdhbmljLCBQdWJsaWNpcywgRERCLCBMQmkgYW5kIFRCV0EvQ2hpYXQvRGF5LCB3b3JraW5nIHdpdGggYnJhbmRzIHN1Y2ggYXMgQWJzb2x1dCwgR29vZ2xlLCBKb2huc29uIEpvaG5zb24sIEhlcnNoZXksIE5vdmFydGlzIGFuZCBQYW5lcmEuClByb2dyYW1tZXMgZGVzIGFjdGl2aXRzIEFQTiAyMDA4ICAgMjAwOSA0LjEgSm91cm5lcyBkZSBMQSBGRU1NRSBFTkNFSU5URSA0LjIgU1lNUE9TSVVNUyBJbnRlcm5hdGlvbmF1eCBlbiBTYW50IGV0IFByaW5hIDQuMyBSZXZ1ZSBkZSBwcmVzc2Ugc3VyIG5vcyB2bmVtZW50cyA1LiBPc3RvcGF0aGllICBNb250cmFsIDYuIApJdCB3YXMgYW4gaWRpb3RpYyBxdWVzdGlvbiB3aGljaCB5b3Ugbm93IGJhY2twZWRhbGluZyBmcm9tIHNpbmNlIHlvdSBiZWVuIHNob3duIGhvdyBmdWNraW5nIGR1bWIgaXQgaXMgdG8gcmVxdWlyZSAxMDAlIG9mIGFueSBncm91cCB0byBiZWxpZXZlIGluIHNvbWV0aGluZyBiZWZvcmUgYmVpbmcgYWJsZSB0byBhc2NyaWJlIHRoYXQgcXVhbGl0eSB0byB0aGVtLgpNYXNzYWdlIFRoZXJhcGlzdHMgTWFzc2FnZSB0aGVyYXBpc3RzIG1hbmlwdWxhdGUgdGhlIG11c2NsZXMgYW5kIHNvZnQgdGlzc3VlcyBvZiB0aGUgYm9keSB0byBoZWxwIHJlbGlldmUgcGF0aWVudHMnIHBhaW4gYW5kIHN0cmVzcy4gQnVyZWF1IG9mIExhYm9yIFN0YXRpc3RpYy4gRWFjaCBzdGF0ZSBoYXMgZGlmZmVyZW50IGVkdWNhdGlvbmFsIHJlcXVpcmVtZW50cywgYnV0IHRoZSBCTFMgbm90ZXMgdGhhdCBtb3N0IG1hc3NhZ2UgdGhlcmFweSBwcm9ncmFtcyByZXF1aXJlIGFib3V0IDUwMCBob3VycyBvZiBzdHVkeSBhbmQgaGFuZHMgb24gZXhwZXJpZW5jZS4gCkNvbGVzIGFuZCB3b29saWVzIGJyZWFkIHByaWNpbmcgYmFzaWNhbGx5IGtpbGxlZCBicmVhZCBzYWxlcyBhdCBteSBwYXJlbnRzIGJha2VyeSBhbmQgZXZlcnkgb3RoZXIgYmFrZXJ5IGluIG91ciBzdWJ1cmIuIFRoZXJlIGlzIHNpbXBseSBubyB3YXkgZm9yIGxvY2FsIGJha2VycyB0byBtYWtlIGxvYXZlcyBvZiB3aGl0ZSBicmVhZCBhbmQgc2VsbCBpdCBmb3IgJDIgYW5kIHR1cm4gYSBwcm9maXQuIApJIHdhcyBnaXZpbmcgdGhlIGN1c3RvbWVyIHNlcnZpY2UgcmVwIHRoZSBpdGVtICBmb3IgdGhpcyBiZWQuIFNoZSBrZXB0IHRyYW5zcG9zaW5nIG51bWJlciBzIGFuZCBldmVudHVhbGx5IGFza2VkIG1lIHRvIGp1c3QgZ2l2ZSBoZXIgdGhlIG5hbWUgb2YgdGhlIGl0ZW0uIApXaG8gd2lucyBpZlR3byBwZW9wbGUgaGF2ZSB0aHJlZSBvZiBhIGtpbmQgYW5kIG9uZSBvZiB0aGVtIGFsc28gaGFzIHR3byBwYWlyCkRhdmlkJ3MgQnJpZGFsIGZpbGVzIGZvciBDaGFwdGVyIDExIGJhbmtydXB0Y3kgYnV0IHdpbGwgc3RheSBpbiBidXNpbmVzcyBhbWlkIHJlb3JnYW5pemF0aW9uTWFsbCByZXRhaWxlcnMgd2FudCB0aGVpciByZW50IGN1dCBhZnRlciBTZWFycyBDYW5hZGEgZXhpdEh1ZHNvbidzIEJheSByZXBvcnRzIGJpZ2dlciBsb3NzLCB3aWxsIGNsb3NlIExvcmQgVGF5bG9yJ3MgRmlmdGggQXZlbnVlIHN0b3JlIGFmdGVyIDEwNCB5ZWFycyBPbGQgTmF2eSB0byBhIHN0YW5kYWxvbmUgY29tcGFueSBpcyB3aGF0IHdlIGhhdmUgYXJndWVkIGZvciBvdmVyIHRoZSBwYXN0IGZldyB5ZWFycy4gRG9pbmcgc28gYWxsb3dzIHRoZSBtYXJrZXQgdG8gcHJvcGVybHkgdmFsdWUgT2xkIE5hdnkgZm9yIGl0cyBoaWdoIG1hcmdpbnMgYW5kIHN0cm9uZyBjYXNoIGZsb3dzLCBKZWZmZXJpZXMgYW5hbHlzdCBSYW5kYWwgS29uaWsgc2FpZC4KR3JlZW4gZmVsdCBpcyBjbGFzc2ljIGFuZCBpZiB5b3UgaGF2ZSByb29tIHRoYXQgaXMgcGFuZWxlZCBpbiBkYXJrIHdvb2Qgb3IgZGVjb3JhdGVkIHdpdGggZGFyayBjb2xvcnMsIHlvdSB3aWxsIGZpbmQgdGhhdCBpdCBjYW4gYmUgYSBncmVhdCB3YXkgdG8gZ2V0IHRoZSBlZmZlY3QgdGhhdCB5b3UgYXJlIGFmdGVyLiAKIkluaXRpYWxseSBpdCB3YXMgYSBtYW51ZmFjdHVyZXIgd2hvIHdhcyBkb2luZyBpdCBqdXN0IHRvIGJlIGRpZmZlcmVudCwiIEhhd2tpbnMgc2FpZC4gIkhlIHJlYWxseSBjb3VsZCBub3QsIG9yIGRpZCBub3QgcGF0ZW50IGl0LiBUaGUgZmlyc3QgbWFjaGluZXMgZGVzaWduZWQgc3BlY2lmaWNhbGx5IHRvIHdvcmsgd2hlbiBwbGF5ZXJzIHdlcmUgc2VhdGVkIHdlcmUgY2FsbGVkIHNsYW50IHRvcHMuIgpUaGVuIHlvdSBoYXZlIHRvIHJlIHNjcm9sbCB0byBmaW5kIHdoYXQgaXQgd2FzIHlvdSB3ZXJlIGxvb2tpbmcgZm9yLiAKTWFraW5nIGEgaHVnZSBwcm9maXQgb25saW5lIGlzIGFwcHJveGltYXRlbHkgbWFuYWdpbmcgeW91ciBiYW5rcm9sbCBhbmQgaGF2aW5nIHBhdGllbmNlLCBlc3BlY2lhbGx5IHBsYXlpbmcgb25saW5lLiBUaGVyZSdzIG5vIGJldHRlciBmZWVsaW5nIHRoYW4gd2lubmluZyBjYXNoIGdhbWVzIG92ZXIgYW5kIG92ZXIgYWdhaW4uIApZb3UgaGF2ZSBub3QgZXZlbiB0aGUgc2xpZ2h0ZXN0IGdsaW1tZXIgb2YgdW5kZXJzdGFuZGluZyB0aGUgc2hpdCB5b3UgYXJlIHR5cGluZy4KU28gaW4gYWRkaXRpb24gdG8gdGhlIGV2ZW50cyB0aGF0IFNvdXRoZXJuIFV0YWggYmFzZWQgRmlnaHQgTGlrZSBBIEdpcmwgaG9zdHMgdG8gcmFpc2UgZnVuZHMgZm9yIGNoaWxkcmVuIHdpdGggY2FuY2VyLCBhbnkgdGltZSBvbmUgb2YgaXRzIGtpZHMgaGF2ZSB0byBiZSBhdCB0aGUgaG9zcGl0YWwgZm9yIHdoYXRldmVyIHJlYXNvbiB3aGV0aGVyIGZvciByZWd1bGFyIHRyZWF0bWVudHMgb3Igb24gYW4gZW1lcmdlbmN5IGJhc2lzIGEgY2hhcmFjdGVyIGNvbWVzIHdpdGggdGhlbS4uIApUaGUgb25seSB0d28gcGVvcGxlIHdobyBjYW4gZG8gdGhpcywgYXMgSSBoYXZlIHBvaW50ZWQgb3V0IG1pbGxpb25zIG9mIHRpbWVzIGJ1dCB5b3UgYXZvaWQgbGlrZSB0aGUgcGxhZ3VlLCBpcyBNb2hhbW1lZCBhbmQgSmVzdXMuIE15IGFyZ3VtZW50IGlzIGNlbnRlcmVkIGFyb3VuZCBjb21wYXJpbmcgdGhlIGxpdmVzIG9mIHRoZXNlIHR3byBwZW9wbGUgYmVjYXVzZSBvbiB0aGUgbW9zdCBiYXNpYyBsZXZlbCwgdGhlc2UgYXJlIHRoZSBwZW9wbGUgZWFjaCByZXNwZWN0aXZlIHJlbGlnaW9uIGZvbGxvd2VycyBhcmUgc3VwcG9zZSB0byBlbXVsYXRlLiAKQSAgPiBhKSBpbiBIYXNrZWxsIEkgY2FuIGtub3cgaW4gbXkgYm9uZXMgaXQgZWl0aGVyIHRocm93cyBhbiBleGNlcHRpb24gYWxsIHRoZSB0aW1lIG9yIGl0IHBhc3NlcyB0aGUgYXJndW1lbnQgdGhyb3VnaCB1bm1vbGVzdGVkLiAKU28geWVhaCwgSSBqdXN0IGhlcmUgbG9va2luZyBmb3IgYWR2aWNlIHNpbmNlIG15IGZyaWVuZCBzdWdnZXN0ZWQgaXQuIEkgc3RpbGwgbmVlZCB0byBjYWxsIHRob3NlIHBsYWNlcyBvbiBHb29nbGUsIGJ1dCBkbyBhbnkgb2YgeW91IGtub3cgb2Ygc29tZSBJIG1heSBub3QgaGF2ZSBzZWVuIG9uIHRoZSBmaXJzdCBwYWdlIG9mIHJlc3VsdHMgb3Igd2hhdGV2ZXIgdGhhdCBoYXZlIHJlZ3VsYXIgREpzPyBBbnkgb3RoZXIgc3VnZ2VzdGlvbnM/TXkgd2lmZSBhbmQgSSBoYXZlIGEgYmFieXNpdHRlciBmb3IgdGhlIGV2ZW5pbmcuIFdlIGdvdCB0d28gbGl0dGxlIGtpZHMsIHNvIHdlIGRvbiBtYWtlIGl0IG91dCB0aGF0IG9mdGVuIHRoZXNlIGRheXMuLiAKSSBkb24gZGlzbGlrZSB0aGUgUmVhcGVycywgSSB0aGluayBhIGxvdCBvZiB0aGVpciB2aWRlb3MgYXJlIHByZXR0eSBmdW4gdG8gd2F0Y2gsIGFuZCBpdCBmdW4gdG8gc2VlIHRoZW0gZG9pbmcgdGhpbmdzIHRoZXkgZW5qb3kuIEkganVzdCBmZWVsIGxpa2UgZm9yIGxlYXJuaW5nIERDUywgdGhlcmUgYXJlIGdlbmVyYWxseSBtdWNoIGJldHRlciBjaGFubmVscyB0byBnZXQgaGVscCBmcm9tLgpMaW1pdCBteSBzZWFyY2ggdG8gci9saXN0ZW50b3RoaXN1c2UgdGhlIGZvbGxvd2luZyBzZWFyY2ggcGFyYW1ldGVycyB0byBuYXJyb3cgeW91ciByZXN1bHRzOnNlZSB0aGUgc2VhcmNoIGZhcSBmb3IgZGV0YWlscy4KT2YgbGF0ZSBtb3JlIHRoYW4gb25lIHByb21pbmVudCBBbWVyaWNhbiBvZmZpY2lhbCBoYXMgbWVudGlvbmVkIHRoZSBJc2xhbWljIFN0YXRlIGNoYW5naW5nIGJhc2UsIGZyb20gdGhlIE1pZGRsZSBFYXN0IHRvIEFmZ2hhbmlzdGFuLCBjbG9zZXIgdG8gUGFraXN0YW4gYm9yZGVycy4gCmZmbmV0IEhvdGVsIGltIGF1ZnN0cmViZW5kZW4gbmV1ZW4gV2lydHNjaGFmdHN2aWVydGVsIHZvbiBBbmthcmEKQ29tcGxldGVseSBmdW5jdGlvbmFsLCB0aG91Z2guIE1haW50ZW5hbmNlIHdhcyBtb2RlcmF0ZWx5IHJlc3BvbnNpdmUuIEkgZG9uIHJlYWxseSBoYXZlIGFuIG9waW5pb24gYWJvdXQgaXQgYmVpbmcgYSBnYXRlZCBjb21tdW5pdHksIGJ1dCBJIGd1ZXNzIGl0IHdhcyBuaWNlIG5vdCB0byBoYXZlIHJhbmRvbSBwZW9wbGUgd2FuZGVyaW5nIGFyb3VuZC5JIGxlZnQgYmVjYXVzZSB0aGV5IHdhbnRlZCB0byBtb3ZlIG1lIGludG8gYSByZW5vdmF0ZWQgYXBhcnRtZW50LCBzbyB0aGF0IHRoZXkgY291bGQgcmVub3ZhdGUgbWluZSwgYW5kIEkgd2FzIHNwbGl0dGluZyB3aXRoIG15IGdpcmxmcmllbmQgYXQgdGhlIHRpbWUsIHNvIEkgd2FudGVkIHRvIGZpbmQgc29tZXRoaW5nIGNoZWFwZXIuSSByYXRlIHRoZW0gYXMgcHJldHR5IGF2ZXJhZ2UgZm9yIHRoZSBwcmljZSBwb2ludCwgYXQgdGhhdCB0aW1lLlRoaXMgd2FzLCBvZiBjb3Vyc2UsIG5pbmUgeWVhcnMgYWdvLCBzbyBZTU1WLiAKS2FtaSBoYWRpciB1bnR1ayBtZW1lbnVoaSBrZWJ1dHVoYW4gQW5kYSB0YW5wYSBoYXJ1cyByZXBvdCBtZW1pa2lya2FuIGtlbHVhciBydW1haCBkYW4gYW50cmkgZGkgU2Fsb24sIGthcmVuYSBBZGVsaWEgTVVBIHlhbmcgYWthbiBkYXRhbmcga2Vsb2thc2kgQW5kYS4KU2Vjb25kLCByYXRoZXIgdGhhbiBjaG9vc2luZyB0byBzaW1wbHkgZGVmZW5kIGl0cyBwb3NpdGlvbiBpbiBob3JzZSByYWNlIGJldHRpbmcsIFBNVSBtb3ZlZCBpbnRvIHRoZSBwcmV2aW91c2x5IHVuZXhwbG9yZWQgbWFya2V0cyBvZiBvbmxpbmUgc3BvcnRzIGJldHRpbmcgYW5kIHBva2VyIHRvIGJlY29tZSBhIG9uZSBzdG9wIHNob3AgZm9yIEZyZW5jaCBnYW1lcnMuIApGYXN0IGZvcndhcmQgdG8gYWdlIDM2LCBteSB3aWZlIGFuZCBJIGhhdGNoIGEgcGxhbiBmb3IgdXMgYWxsIHRvIGRvIGEgc2tpIHRyaXAgdG9nZXRoZXIuIEl0IGJlIHRoZSBvbmUgYmlnIGV2ZW50IHdlIGFsbCB1bmRlcnRha2UgdG9nZXRoZXIgYmVmb3JlIG91ciA0MHMuCkFsc28sIEkgZmFpcmx5IGNlcnRhaW4gSSBzYWlkIHRoYXQgdGhlIHN0b3Agd2FzIGhhbmRsZWQgcG9vcmx5LiBEcnVnIGNoYXJnZXMgYXJlIGRpZmZpY3VsdCBtYWlubHkgYmVjYXVzZSBwb3NzZXNzaW9uIHdpdGggaW50ZW50IGlzIGZyZXF1ZW50bHkgcmVkdWNlZCB0byBzaW1wbGUgcG9zc2Vzc2lvbi4gCkluIHRoZSBjb3VydCBhcHBsaWNhdGlvbiwgRm9yY2lsbG8gYXNrcyB0aGUganVkZ2UgdG8gZ3JhbnQgYSB2YXJpYXRpb24gdG8gaGlzIGJhaWwgY29uZGl0aW9ucyB0aGF0IHdvdWxkIGFsbG93IGhpbSB0byBsaXZlIHdpdGggQmFsZGVycmFtYSBhdCB0aGUgYWRkcmVzcyBhbmQgaGF2ZSBoZXIgYXMgYSBzdXJldHkuLiAKTmVja2xhY2VzIHRoYXQgaHVuZyBhdCB0aGUgbmVjayB3ZXJlIGFwbGVudHksIGluY2x1ZGluZyBvbmUgb24gQWxsaXNvbiBKYW5uZXkgZmVhdHVyaW5nIG1vcmUgdGhhbiA1OSBjYXJhdHMgb2YgaGVhcnQgc2hhcGVkIHJ1YmllcyBhbmQgbW9yZSB0aGFuIDY3IGNhcmF0cyBvZiBkaWFtb25kcyBzZXQgaW4gd2hpdGUgZ29sZCBmcm9tIENob3BhcmQuIApUaGUgT1BQIGFycmVzdGVkIGFuZCBjaGFyZ2VkIEtpc3NuZXIgZm9yIHNleHVhbCBhc3NhdWx0LCBvdGhlciBjb21wbGFpbmFudHMgc29vbiBjYW1lIGZvcndhcmQuIApZb3UgYWxzbyBiZSBhYmxlIHRvIHNlZSB0aGUgbGlzdCBvZiBvdXIgb2ZmZXJpbmcgYXMgaXQgZ3Jvd3MsIGFuZCBzZWUgdGhlIHdobyB3aG8gb2Ygb3VyIHByb2Zlc3Npb25hbCBwcmFjdGl0aW9uZXJzLiBUaGlzIHdpbGwgZW5hYmxlIHlvdSB0byBjb250YWN0IGRpcmVjdGx5LCBhbnkgb2YgdGhlIHByYWN0aXRpb25lcnMgdG8gZmluZCBvdXQgd2hhdCB0aGV5IGNhbiBvZmZlciBpbiByZXNwZWN0IG9mIHlvdXIgbmVlZHMgYW5kIGhvdyB0aGVpciBhcHByb2FjaCBtYXkgYmVuZWZpdCB5b3UuIEJlZGZvcmQgQ29uc3VsdGluZyBSb29tcyBwcm92aWRlcyBjbGluaWNhbCByb29tcyBvbiBHb2xkaW5ndG9uIFJvYWQscmlnaHQgbmV4dCB0byB0b3duIGNlbnRyZS4KTmVpbCBTdHJhdXNzIFdpa2lwZWRpYS4gRGllIFBlcmZla3RlIE1hc2NoZSBQZGYgTWVyZ2VyIERpZSBQZXJmZWt0ZSBNYXNjaGUgUGRmIFRvIEV4Y2VsIEpvdXJuYWxpc3QgdW5kIEF1dG9yIC4gClB1ZXMgcywgZW4gbGFzIFdTT1AgaHVibyB0b3JuZW9zIGNvbiByZWNvbXByYXMgaWxpbWl0YWRhcy4gRXMgdW4gZm9ybWF0byBtdXkgcG9wdWxhciBlbiBjYXNpbm9zIGRlIHRvZG8gZWwgbXVuZG8geSB0YW1iaW4gZW4gZWwgcG9rZXIgb25saW5lLCB5IHBvciBzdXB1ZXN0byBxdWUgdHV2byBzdSBodWVjbyBlbiBsYSBhZ2VuZGEgZGUgbGFzIFNlcmllcy4gCkl0IHdhc24gaGVyLCBidXQgYXQgMTAsIGl0IHdhcyByYXRoZXIgdHJhdW1hdGljLiAKIkkgZG9uJ3QgbmVjZXNzYXJpbHkgaGF2ZSBhIHByb2JsZW0gd2l0aCB0aGUgZmlndXJlcyBpZiBwZW9wbGUgd2VyZSBiZWluZyByZXNwb25zaWJsZSB3aXRoIHRoZWlyIGdhbWJsaW5nLCIgaGUgc2FpZC4gIkNlcnRhaW5seSB3ZSByZWNvbW1lbmQgcGVvcGxlIHNldCB0aW1lIGFuZCBtb25leSBsaW1pdHMgYmVmb3JlIHRoZXkgc3RhcnQsIHRyeSBub3QgdG8gbWl4IGFsY29ob2wgd2l0aCB5b3VyIGdhbWJsaW5nIGFuZCBkb24ndCBkbyBpdCB3aGVuIHlvdSdyZSB1cHNldCBvciBkZXByZXNzZWQuIApBcmUgeW91IEluZGlhbj8gQmVjYXVzZSB0aGlzIGlzIHN1Y2ggYSBjbGFzc2ljIGRlc2kgbW90aGVyIGluZmFudGlsaXppbmcgaGVyIGdyb3duIHNvbiBzaXR1YXRpb24gdGhhdCBpdCdzIGFsbW9zdCBsYXVnaGFibGUuIFRoZXkncmUgbGl0ZXJhbGx5IG1ha2luZyBkZXRlcmdlbnQgY29tbWVyY2lhbHMgdGhhdCBhcmUgYmFzaWNhbGx5IHNvY2lhbCBjb21tZW50YXJ5IG9uIHRoaXMuCkNCOiBJdCBzaW1wbHkgYSBmYXZvciBJIGFtIGFza2luZy4gSSB3aWxsIHN0aWxsIHByb3ZpZGUgbWFyaWp1YW5hLiBQbGVhc2UgY29tZSBzZWUgbWUgc2lyLiBCcmluZyBmZW1hbGVzIG9mIHRoZSB0aGUgdHJvbGxvcCBwZXJzdWFzaW9uLiBJIGJlZyBvZiB5b3UuCkkgYWN0dWFsbHkgdGhpbmsgaXQgY291bGQgYmUgY29uc2lkZXJlZCBzby4gCkFuZCBzb21ldGltZXMgeW91ciBiYWJ5IGlzIGp1c3QgY29saWNreS4gWW91IGdvdCB0byBzcGxpdCBzb21lIHRpbWUgc28gbWFrZSBzdXJlIHlvdSBnZXQgYSBjaGFuY2UgaGVyZSBhbmQgdGhlcmUgdG8gcnVuIHRvIHRoZSBzdG9yZSB0byBwaWNrIHVwIHRoZSBuZWNlc3NpdGllcyBzbyB5b3UgZmVlbCBsaWtlIHlvdSBjYW4gImdldCBvdXQuIiBNeSB3aWZlIGxldHMgbWUgaGl0IGEgbW92aWUgc29sbyBldmVyeSAyIG9yIDMgd2Vla3MgYmVjYXVzZSBJIE5FRUQgc29tZSBkb3dudGltZS4uIApUb255IGFkZHJlc3NlZCB0aGUgZ2F0aGVyaW5nIGZvciBhYm91dCBmaXZlIG1pbnV0ZXMuICJUaGUgbW9uZXkgd2lsbCBiZSB1c2VkIHRvIGFzc2lzdCBUb255IHdpdGggdGhlIHZhcmlvdXMgaG9tZSBtb2RpZmljYXRpb24gdGhhdCB3aWxsIG5lZWQgYXR0ZW5kaW5nIHRvIHByaW9yIHRvIHJldHVybmluZyBob21lLiAKVGhhdCdzIG15IGV4cGVyaWVuY2UgYW55d2F5cy4gSnVzdCBrZWVwIHlvdXIgd2l0cyBhYm91dCB5b3UuIFRoZXJlIGFyZSBiYWQgcGVvcGxlIGJ1dCBtb3JlIGdvb2QgcGVvcGxlIG91dCB0aGVyZS4KUXVhbGlmaWNhdGlvbnMgVGhvc2Ugd2hvIHRha2Ugb24gdGhpcyBwb3NpdGlvbiBtaWdodCBiZSBmb3JtYWxseSBvcmRhaW5lZCBhZnRlciBwcm92aW5nIHRoYXQgdGhleSBhcmUgY2FwYWJsZSBvZiBtaW5pc3RlcmluZyB0byBwZW9wbGUncyBuZWVkcywgYnV0IHNtYWxsZXIgY29uZ3JlZ2F0aW9ucyBtaWdodCBiZSBsZWQgYnkgc2VsZiBkZWNsYXJlZCBwYXN0b3JzIHdobyBhcmUgZmFtaWxpYXIgd2l0aCBTY3JpcHR1cmUuIEJpYmxlVHJhY2sgc2F5cyB0aGF0IHRoZSBBcG9zdGxlIFBhdWwgaW4gdGhlIE5ldyBUZXN0YW1lbnQgY2xlYXJseSBsYXlzIG91dCB0aGUgcXVhbGlmaWNhdGlvbiBmb3IgYSBwYXN0b3Igb3IgYmlzaG9wIGluIGhpcyBsZXR0ZXJzIHRvIFRpbW90aHkgYW5kIFRpdHVzLiBPdmVyYWxsLCB0aGUgcGFzdG9yIG11c3QgYmUgYWJsZSB0byBzZXQgYSBnb29kIGV4YW1wbGUgZm9yIHRoZSBjb25ncmVnYXRpb24gaGUgc2VydmVzLiAKWW91ciBjdXRlIGxpdHRsZSBmYW50YXN5IHNjZW5hcmlvIG9mICJjaGFuZ2luZyIgdGhpcyBzaXR1YXRpb24gaXMgbm90IHZhbGlkLiBDaGluYSBhbHJlYWR5IGxldCB1cyB0YXN0ZSB3aGF0IGl0IGxvb2sgbGlrZSBpZiB3ZSBkYXJlIHRvIGZlY2sgd2l0aCB0aGVtIHdoZW4gdGhlIHdob2xlIFNBQUQgaGFwcGVuZWQuIApQaXp6YSBpcyBjb29rZWQgaW4gYWJvdXQgOCBtaW51dGVzIGFuZCBhdCBhIGdyZWF0IHByaWNlLiAKR2FtZXMsIGdhbWJsaW5nIGFuZCBldmVuIHNpbXBsZSBhbXVzZW1lbnQgd291bGQgYmUgYWlkZWQgZ3JlYXRseSBieSB0aGUgdXNlIG9mIHBsYXlpbmcgY2FyZHMuIApBcyBhIHJlc3VsdCBodWdlIHN0dWZmIGdldCBhY2N1bXVsYXRlZCBpbiB0aGVpciBzdG9yZSByb29tLiBTb21lIHBvcHVsYXIgb25saW5lIGdhbWVzIGFyZSBwb2tlciBjYXJkcywgTWFoam9uZywgbW9ub3BvbHkgZXRjLiAKQXMgbGlua2VkIGVhcmxpZXIsIHZlcnkgbG9uZyAuMjI0IiBwcm9qaWVzIGFyZSBhbHJlYWR5IGluIHVzZSBieSB0aGUgc2hvb3RpbmcgY29tbXVuaXR5LiAKSGUgd2FzIGZ1bGx5IGF3YXJlIHRoYXQgaGlzIGxpZmUgd2FzIGF0IHJpc2ssIiBUaWJibyBzYWlkLiAiRWQgd2FzIGNsZWFyIGluIGhpcyBtaW5kIGFib3V0IG1ha2luZyB0aGUgZGlzY2xvc3VyZXMsIGJ1dCBFZCdzIGEgaHVtYW4gYmVpbmcuIApCYWRnZXJzIGFyZSB2ZXJ5IGFjdGl2ZSBhdCBuaWdodCBiZWNhdXNlIHRoZXkgYXJlIG5vY3R1cm5hbCBhbmltYWxzLiBUaGVpciBmYWNlcyBoYXZlIGRpc3RpbmN0IGJsYWNrIGFuZCB3aGl0ZSBtYXJraW5ncy4gV2hlbiBmdWxseSBncm93biwgdGhleSBjYW4gd2VpZ2ggdXAgdG8gMTIga2lsb2dyYW1zLCBncm93aW5nIHRvIGEgbWV0ZXIgbG9uZy4gQmFkZ2VycyBhcmUgZGlnZ2VycyB3aXRoIGxvbmcsIHN0cm9uZyBjbGF3cyBvbiB0aGVpciBmcm9udCBwYXdzLgpIb3dldmVyLCB0aGUgaGlnaGx5IHNlZWRlZCBTcGFydGFucyBib3dlZCBvdXQgb2YgdGhlIE5DQUEgVG91cm5hbWVudCBpbiBhIGRpc2FwcG9pbnRpbmcgc2Vjb25kIHJvdW5kIGxvc3MgdG8gU3lyYWN1c2UuLiAKU2Nod2VpbmVmICAwIHBvaW50cyAgc3VibWl0dGVkIDkgbW9udGhzIGFnbwpPbmxpbmUgcG9rZXIgdG91cm5hbWVudCBwb3B1bGFyaXR5IGN1dHMgYWNyb3NzIHRoZSBodW1hbml0aWVzIGFuZCBuYXRpb25hbCBib3JkZXJzIGEgcmVhc29uIHdoeSBsb3RzIG9mIHBlb3BsZSBwbGF5IGl0LiBIb3dldmVyLCBtYW55IHBlb3BsZSBmaW5kIGl0IGRpZmZpY3VsdCB0byBtYWtlIGEgdHJhbnNpdGlvbiBmcm9tIHBsYXlpbmcgbG9jYWwgY2FyZCBnYW1lcyBmb3IgcGxheWluZyBvbmxpbmUgcG9rZXIgYXQgQ2x1YldQVC4gCkh5cGVyZ3JpcCAgMyBwb2ludHMgIHN1Ym1pdHRlZCAyNiBkYXlzIGFnbwpHcmFuZGRhZCBwYXNzZWQgaW4gMTk4OSBmcm9tIGEgaGVhcnQgY29uZGl0aW9uIGFuZCB3YXMgc2hpcHBlZCB0byB0aGUgVHJhbnMgVGltZSBjcnlvbmljcyBmYWNpbGl0eSBpbiBPYWtsYW5kLCBDYWxpZi4sIHdoZXJlIGhlIHdhcyBwbGFjZWQgaW4gbGlxdWlkIG5pdHJvZ2VuIGZvciBjbG9zZSB0byBmb3VyIHllYXJzLiBMYXRlciwgaW4gMTk5MywgaGUgd2FzIHJlbG9jYXRlZCB0byBDb2xvcmFkbyB0byBzdGF5IHdpdGggaGlzIGRhdWdodGVyIEF1ZCBNb3JzdG9lbCBhbmQgaGlzIGdyYW5kc29uIFRyeWd2ZSBCYXVnZSBhIHBhaXIgd2hvIGhhZCBwbGFucyBvZiBvbmUgZGF5IG9wZW5pbmcgdXAgYSBjcnlvbmljcyBjZW50ZXIgb2YgdGhlaXIgb3duLiBCdXQsIHRoZSBlbnRyZXByZW5ldXJpYWwgdmVudHVyZSB3YXMgY3V0IHNob3J0IHdoZW4gVHJ5Z3ZlIHdhcyBkZXBvcnRlZCBmb3IgYW4gZXhwaXJlZCB2aXNhLiBZZXQsIGhpcyB3aXNoIHRvIGtlZXAgaGlzIGdyYW5kZmF0aGVyIHByZXNlcnZlZCBpcyBrZXB0IGFsaXZlIHRvZGF5IGJ5IHRoZSBlZmZvcnRzIG9mIEJyYWQgV2lja2hhbSwgYSBOZWRlcmxhbmQgcmVzaWRlbnQgdGFza2VkIHdpdGggdGhlIGpvYiBvZiByZXBsZW5pc2hpbmcgdGhlIGRyeSBpY2UgbW9udGhseS4KQWpsYXc5NSAgOTYgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KQSBjb3VwbGUgb2YgbW9udGhzIGxhdGVyLCBJIGZvdW5kIG91dCB0aGF0IGhlIGhhcyBiZWVuIGluIGEgbG9uZyB0ZXJtIGFuZCBsb25nIGRpc3RhbmNlIHJlbGF0aW9uc2hpcCBmb3IgeWVhcnMuIEkndmUgYWx3YXlzIHRob3VnaHQgc29tZXRoaW5nIHdhcyBvZmYgd2l0aCBob3cgc2VjcmV0aXZlIGhlIHdhcy4gSSBkb24ndCBrbm93IHdoeSBJIGhhdmVuJ3QgZW5kZWQgaXQ7IEkga25vdyBJIHNob3VsZCBoYXZlIHRoZSBtaW51dGUgSSBmb3VuZCBvdXQuLiAKSSB3YXMgbmV2ZXIga2lja2VkIGluIHRoZSBsYWR5IGpld2VscywgYnV0IEkgZGlkIHNsaXAgb2ZmIHRoZSBib2F0IGRpdmluZyBpbnRvIHRoZSB3YXRlciBhbmQgY3V0IG15IGxhYmlhIHVwIHByZXR0eSBiYWQgb25jZS4gQW5kIEkgbGFuZGVkIG9uIGl0IHNldmVyYWwgdGltZXMganVzdCBob3JzaW5nIGFyb3VuZCAobm90IGV2ZW4gc2V4eSB0aW1lcywganVzdCBsaWtlIHBsYXlpbmcgb24gdGhlIHBsYXlncm91bmQgYXMgYSBraWQpIEh1cnRzIGxpa2UgYSBiaXRjaC4gClN0YXRDYW4gcmVwb3J0ZWQgTWFyY2ggMSB0aGF0IEdEUCBncmV3IGF0IGFuIGFubnVhbCByYXRlIG9mIDAuNCBwZXIgY2VudCBpbiB0aGUgZm91cnRoIHF1YXJ0ZXIsIGxlc3MgdGhhbiBoYWxmIGFzIGZhc3QgYXMgd2hhdCB0aGUgQmFuayBvZiBDYW5hZGEgcHJlZGljdGVkIGluIEphbnVhcnkuCkFuZCB0aGlzIHNob3VsZCBiZSByZWFsbHkgYmFzaWMgc3R1ZmYgYnV0IGp1ZGdpbmcgYnkgdGhlIGFtb3VudCBvZiByZXNpc3RhbmNlIGJlaW5nIG9mZmVyZWQgaW4gdGhpcyB0aHJlYWQgaXQgc2VlbXMgdGhhdCBpdCBzdGlsbCBmYXIgZnJvbSBzdGlja2luZy5CQlIxMjMgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxOSBob3VycyBhZ29JIGxlZ2l0aW1hdGVseSB0aGluayBpdCBtYWtlcyBuZXh0IHRvIG5vIGRpZmZlcmVuY2UuIE1heWJlIHdvbWVuIGRvbid0IHJlc3BvbmQgdG8gdGhlIG5lZ2F0aXZpdHkgYW5kIGxhY2sgb2YgZnJpZW5kbGluZXNzIGFzIG11Y2ggYXMgbWFsZSBwbGF5ZXJzIGRvIGJ1dCB0aGF0J3MgYWJvdXQgYWxsIEkgY2FuIHRoaW5rIG9mIG9yIHJlbWVtYmVyIG9ic2VydmluZy4gCkNvbXBsZXRlbHkgb3V0IG9mIGxlZnQgZmllbGQuIApUaGUgb3RoZXIgbWFqb3IgYmVuZWZpY2lhcnkgb2YgYSBsb3dlciBleGNoYW5nZSByYXRlIGlzIHRvIENhbmFkaWFucyBpbnZlc3RlZCBhYnJvYWQsIHdobyBwb2NrZXQgbW9yZSBDYW5hZGlhbiBkb2xsYXJzIHdoZW4gdGhleSByZXBhdHJpYXRlIHRoZXNlIGludmVzdG1lbnQuIFRoaXMgaXMgYSBkdWJpb3VzIGJlbmVmaXQgZm9yIG91ciBlY29ub215LiAKQW4geCBkZW5vdGVzIGFueSBjYXJkIG9mIGFueSByYW5rLkEgInciIGRlbm90ZXMgYSB3aGVlbCBjYXJkICgyLCAzLCA0LCBvciA1KS5BICJ0IiBkZW5vdGVzIGEgdGVuIHRocm91Z2ggYSBraW5nIChUIEogUSBLKS5bQSAyIHggeF0gWW91IG11c3QgYmUgY2FyZWZ1bCB3aXRoIGp1c3QgYW4gQSAyIGFuZCBubyBjb3VudGVyZmVpdCBwcm90ZWN0aW9uLltBIDMgeCB4XSBQbGF5IHRoaXMgaGFuZCBpZiB0aGUgYWNlIGlzIHN1aXRlZCB0byBvbmUgb2YgeW91ciBvdGhlciBjYXJkcy5bQSB3IHcgeF0gUGxheSBhcyBsb25nIGFzIHRoZSB0d28gd2hlZWwgY2FyZHMgYXJlIG5vdCB0aGUgc2FtZSwgbGlrZSA0IDRbdyB3IHcgd10gUGxheSBmb3VyIHdoZWVsIGNhcmRzIGV2ZW4gaWYgeW91IGhhdmUgb25lIHBhaXIsIGJ1dCBub3QgaWYgeW91IGhvbGQgdHdvIHBhaXJzIG9yIHRyaXBzLltBIHQgdCB0XSBQbGF5IGFuIGFjZSB3aXRoIHRocmVlIGhpZ2ggY2FyZHMsIGVzcGVjaWFsbHkgaWYgdGhlIGFjZSBpcyBzdWl0ZWQuIApNaXQgUHJlbWl1bSBTdGFyaG5kZW4gZ2V3aW5udCBtYW4gdmllbGUga2xlaW5lIHVuZCBtaXR0bGVyZSBQb3RzIHVuZCB2ZXJsaWVydCBhYmVyIGRpZSBncm9lbi4gCk92ZXJ2aWV3IGZvciBZb3NhcmlhbjIKVGhlIHRyaWFuZ2xlcyBhcmUgb25seSBzaW1pbGFyLiAKU1QuIEdFT1JHRSAgQmlrZXJzIEFnYWluc3QgQ2hpbGQgQWJ1c2UgYXJlIGhvc3RpbmcgYSBLZWVwZXJzIG9mIHRoZSBDaGlsZHJlbiBCaWtlIFJhbGx5IGF0IHRoZSBWaXJnaW4gUml2ZXIgQ2FzaW5vIHBhcmtpbmcgbG90IGluIE1lc3F1aXRlLCBOZXZhZGEuIApObyBtb3JlIGR1bXBpbmcgYWxsIG9mIHlvdXIgc2NyZWVuc2hvdHMgb3ZlciB0aGUgY291cnNlIG9mIGFuIGhvdXIuIApZb3UgZGVmaW5pdGVseSBjYW4gY2hhbGxlbmdlIGEgZmVlbGluZy4gClRoZSBEZWFsIHdpdGggRnJlZSBPbmxpbmUgUG9rZXIKSXQgYSBncmVhdCB0aW1lIHRvbmUgYSBtb2JpbGUgYXBwIGRldmVsb3Blci4KTGltcCBVVEcsIENoaW5lc2UgZ3V5IG1ha2VzIGl0IDEwMCwgSSBoYXZlIEFzUXMgbmV4dCB0byBhY3QgYW5kIEkgaGF2ZSAxLjdLLiAKSG93ZXZlciwgdGhlIEdyZWVucyBzcG9rZXNwZXJzb24gZm9yIGdhbWJsaW5nIGhhcm0gSnVzdGluIEZpZWxkIHNhaWQgdGhlY2FwIGRpZG4ndCBnbyBmYXIgZW5vdWdoLiAKV2FybWluZyBDbGltYXRlLCBNb3JlIE1hbmdyb3ZlcwpCb29tdG93biBmZWF0dXJlcyBvdmVyIDEsMTAwIHNsb3QgYW5kIHZpZGVvIHBva2VyIG1hY2hpbmVzIGluY2x1ZGluZyBNci4gClRoZSBzdXNwZWN0IHdhcm5zIGhlIGhhcyBhIGd1biBpbiBoaXMgcG9ja2V0LgpDb25zaWRlcmluZyB0aGF0IFNNRSBmaXJtcyB3aWxsIGJlIHBheWluZyBhbG1vc3QgaGFsZiBvZiB0b3RhbCBmdWVsIGxldmllcyAodGhlaXIgc2hhcmUgZXhwZWN0ZWQgdG8gYmUgcm91Z2hseSAkMi41IGJpbGxpb24gYW5udWFsbHkgYnkgMjAyMyksIHRoZSAkMzg1IG1pbGxpb24gdG8gYmUgc2VudCBiYWNrIHRvIHRoZW0gaW4gYSB5ZXQgdG8gYmUgc3BlY2lmaWVkIHdheSBiYXJlbHkgbW92ZXMgdGhlIG5lZWRsZS4gSW4gY29udHJhc3QsIGhvdXNlaG9sZHMgZXhwZWN0ZWQgdG8gcGF5ICQyLjggYmlsbGlvbiBwZXIgeWVhciBieSAyMDIzIGluIGZ1ZWwgY2hhcmdlcyB3aWxsIGNvbGxlY3QgJDUuMSBiaWxsaW9uLCBvciA5MCBwZXIgY2VudCBvZiB0aGUgaW5jZW50aXZlIHBheW1lbnRzLiBJdCBoYXJkbHkgYSBjb21taXRtZW50IHRvIGRvaW5nIHRoZWlyIHBhcnQuIGNhcmJvbiBpc3N1ZSBpcyBkaXZpc2l2ZSBhbmQgYSBjaGFsbGVuZ2UgdG8gYnVzaW5lc3NlcyBhbmQgaG91c2Vob2xkcyBhbGlrZSBoYXZpbmcgdG8gYWRqdXN0IHVzZSBvZiBjYXJib24gZnVlbHMgYnVpbHQgaW50byB0aGVpciBzdHJ1Y3R1cmVzIGFuZCBsaWZlc3R5bGVzLiBTbWFsbCBmaXJtcyBoYXZlIGhhZCB0byB3ZWF0aGVyIGEgbnVtYmVyIG9mIHBvbGljeSBjaGFsbGVuZ2VzIHJlY2VudGx5IGZyb20gdGhlIGZlZGVyYWwgZ292ZXJubWVudCwgZnJvbSB0aGUgbmVlZGxlc3NseSBhY2N1c2F0b3J5IHN0YW5jZSBvbiBzbWFsbCBidXNpbmVzcyB0YXhhdGlvbiB0byBpbmNyZWFzZXMgaW4gcGF5cm9sbCBjb3N0cyBvbiBlbXBsb3ltZW50IGluc3VyYW5jZSBhbmQgdGhlIENhbmFkYSBQZW5zaW9uIFBsYW4uIFRoZSBjYXJib24gYmFja3N0b3AgcGxhbiBpcyBhbm90aGVyIHBvbGljeSB0aGF0IGRvZXNuIHBhc3MgdGhlIGZhaXJuZXNzIHRlc3QgZm9yIHNtYWxsIGJ1c2luZXNzLiBJZiB3ZSBhcmUgdHJ1bHkgaW4gdGhpcyB0b2dldGhlciBpbiB0aGUgZmlnaHQgYWdhaW5zdCBjbGltYXRlIGNoYW5nZSwgdGhlbiBwYXNzaW5nIGNsb3NlIHRvIGhhbGYgb2YgdGhlIHRvdGFsIGJpbGwgdG8gb25lIGdyb3VwLCB3aGlsZSBleGVtcHRpbmcgb3IgaW5zdWxhdGluZyBldmVyeW9uZSBlbHNlIHNlZW1zIGxpa2UgdGhlIHdyb25nIGFwcHJvYWNoLiBUaGUgZmVkZXJhbCBnb3Zlcm5tZW50IHNob3VsZCBzZW5kIHRoaXMgcGxhbiBiYWNrIHRoZSBkcmF3aW5nIGJvYXJkLgpJbiBjb2xsZWdlLCBJIGhhZCBhIFNoYWtlc3BlYXJlIHByb2Zlc3NvciB3aG8gcHJvdWRseSB0b2xkIHRoZSBjbGFzcyBvbiBzZXZlcmFsIG9jY2FzaW9ucyB0aGF0IGhlIHdhcyBhIE1hcnhpc3QuIApBcyBhIE1pcmFnZSBtYWluLCBJIHdvdWxkIGFkdmlzZSB1c2luZyBoaXMgdWx0IGFzIGEgZmxhbmtpbmcgdG9vbCBieSBoaWRpbmcgdW5kZXIgY292ZXIsIGFjdGl2YXRpbmcgdGhlIHVsdCwgdGhlbiB1c2luZyB0aGUgaW52aXNpYmlsaXR5IHRvIHJ1biB0byBhbm90aGVyIHNwb3Qgb2YgY292ZXIgYmVoaW5kIHRoZSBlbmVteSB0ZWFtIGFuZCB3YWl0aW5nIGZvciB5b3VyIHdlYXBvbnMgdG8gYmUgcmVhZHkgYWdhaW4gYmVmb3JlIGFjdHVhbGx5IGdldHRpbmcgaW50byB0aGUgZmlnaHQuIEFzIGZvciB1c2luZyBpdCBhcyBhbiBlc2NhcGUgdG9vbCwganVzdCBwcmVzcyB0aGF0IGJ1dHRvbiBhbmQgcnVuLiBBcyBsb25nIGFzIHlvdSBnaXZlIHRoZW0gYXQgbGVhc3QgYSBoYWxmIHNlY29uZCBvZiBjb25mdXNpb24sIHlvdSB1c3VhbGx5IHNvbWV3aGF0IHNhZmUuLiAKVGhleSBoYXZlIG5vIHJlYXNvbiB0byB3b3JyeSB3aXRoIHRoZSBiaWcgc3R1cmR5IHdhbGxzIGFyb3VuZCB0aGVtLk1vcmUgdGhhbiB0aGF0LCBldmVuIHdpdGggYW4gb3JhY2xlICAgYSBwZXJmZWN0IHByZWRpY3RvciBvZiBwcmljZXMgICB0aGUgYW1vdW50IG9uZSBjb3VsZCBtYWtlIGRlZmluaXRlbHkgaGFzIGFuIHVwcGVyIGJvdW5kLkkgYmUgaG9uZXN0bHkgc3VycHJpc2VkIGlmIHN1cGVyaHVtYW4gQUlzIGVuZCB1cCB0YWtpbmcgYWR2YW50YWdlIG9mIHRoZSBtYXJrZXQgYnkgYmV0dGluZyBvbiBzdG9jayBwcmljZXMuIEl0IHdvdWxkIG1ha2UgbW9yZSBzZW5zZSB0byBjYXVzZSBidWxsIG1hcmtldHMgdG8gaGFwcGVuLlBva2VyIGlzIGZ1bmRhbWVudGFsbHkgZGlmZmVyZW50IGFzIHlvdSByZWFsbHkgaGF2ZSBubyBjaG9pY2UgYnV0IHRvIGdvIG9uIHRoZSBvZmZlbnNlLiBJdCBpcyBkZWZpbml0ZWx5IGludGVyZXN0aW5nIGZyb20gYW4gQUkgc3RhbmRwb2ludC4xKSBJdCBsaWVzIG9uIGEgaW50ZXJzZWN0aW9uIGJldHdlZW4gcmVndWxhciBnYW1lcyBhbmQgZGF0YSBzY2llbmNlLiAKWW91ciB3cml0aW5nIGlzIGNvaGVyZW50IGJ1dCBuZWVkcyB0byBiZSBkaXN0aW5jdGl2ZS4KSSB3YXMgaGVhZHMgdXAgaW4gYSBXUFQgc2F0ZWxsaXRlIHdoZXJlIDFzdCByZWNlaXZlZCB0aGUgJDEwayBzZWF0ICsgJDI1MCBhbmQgMm5kIHJlY2VpdmVkIGxpa2UgJDIuNWsuIApBbmQgZm9yIGFsbCBrbm93aW5nIGJlaW5nLCBob3cgYWJvdXQgYSBoZWFkcyB1cD8gQSAiaGV5IEkgbWlnaHQgYmUgc3RvcHBpbmcgYnkgbGF0ZXI/IiBKZXN1cyBpcyBydWRlLi4gCkV4Y2hhbmdlIHlvdXIgYWxjb2hvbGljIGFuZCBjYXJib25pYyBkcmlua3Mgd2l0aCB3YXRlciBhbmQgdGVhLiAKQmVjYXVzZSB5b3UgYWxvbmUgYXJlIHJlc3BvbnNpYmxlIGZvciBZb3VyIENvbnRlbnQsIHlvdSBtYXkgZXhwb3NlIHlvdXJzZWxmIHRvIGxpYWJpbGl0eSBpZiB5b3UgcG9zdCBvciBzaGFyZSBDb250ZW50IHdpdGhvdXQgYWxsIG5lY2Vzc2FyeSByaWdodHMuLiAKQnkgcmVnaXN0ZXJpbmcgeW91ciB0cmF2ZWwgd2l0aCBTdHVkeSBPdmVyc2VhcyB5b3UgYmVjb21lIHBhcnQgb2YgYW4gaW50ZWdyYXRlZCBzdXBwb3J0IGZyYW1ld29yayB0aGF0IGFzc2lzdHMgd2l0aCBmYWN1bHR5IGFwcHJvdmFscywgZnVuZGluZyBvcHRpb25zIHN1Y2ggYXMgc2Nob2xhcnNoaXBzIGFuZCBPUyBIZWxwIGxvYW5zLCBhbmQgaW5jcmVhc2VzIHlvdXIgc2FmZXR5IG92ZXJzZWFzIGJ5IGxldHRpbmcgdGhlIFVuaXZlcnNpdHkgb2YgQWRlbGFpZGUga25vdyB3aGVyZSB5b3UgYXJlIGFuZCB3aGF0IHlvdSdyZSBkb2luZy5OZXcgQ29sb21ibyBQbGFuIFNjaG9sYXJzaGlwIFJlY2lwaWVudHNUaGUgQ29tbW9ud2VhbHRoIEdvdmVybm1lbnQgcHJvdmlkZXMgdHJhdmVsIGluc3VyYW5jZSBmb3IgcmVjaXBpZW50cyBvZiB0aGUgTmV3IENvbG9tYm8gUGxhbiBTY2hvbGFyc2hpcCBmb3IgdGhlIGR1cmF0aW9uIG9mIHRoZSBwcm9ncmFtLiAKIllvdW5nIHBlb3BsZSBoYWQgYWx3YXlzIGJlZW4gYSBtaW5vcml0eSBvZiBvdXIgY2xpZW50cywiIHNhaWQgRHIgQ2hyaXN0b3BoZXIgSHVudCwgY2xpbmljYWwgcHN5Y2hvbG9naXN0IGF0IHRoZSBjbGluaWMuIAo2IHdlZWtzIGdvIGJ5LiBTbyBmYXIsIEkgcGFpZCB5b3UgJDYwIG9mIHRoZSAkMTAwIEkgb3dlIHlvdS4gTm93IEkgb3dlIHlvdSAkNDAsIHNlY3VyZWQgYWdhaW5zdCB0aGUgZ2FtZWJveS4KQWxsIGF2YWlsYWJsZSBvbnlvdXR1YmUuIChTZWFyY2hpbmcgb25saW5lZm9yIG1vcmUgaWYgeW91IGFyZSBzbyBpbnRlcmVzdGVkIHNob3VsZCB5aWVsZCBtb3JlKS4gQWxzbywgbWFueXZlcnNpb25zIG9mIEdhR2EncyBzb25ncywgc3VjaCBhcyBwaWFubyBzb2xvcyBhbmQgbW9yZSBtZWRsZXlzIG9maGVyIHNvbmdzIGFyZSB1c3VhbGx5IHBlcmZvcm1lZCBhdCBoZXIgc2hvd3MsIGFuZCBzZWFyY2hpbmcgeW91dHViZWZvciB0aGVtIGlmIHlvdSBhcmUgc28gaW50ZXJlc3RlZCBtYXkgeWllbGQgbW9yZSBzb25ncy4gUGxlYXNlIHB1dCB0aGUgc3ViamVjdCBhcyAiSUxvdmUgR2FHYSIuIApEZXRlY3Rpbmcgd2hldGhlciBpdCBzZW1lbiBkb2VzbiByZXF1aXJlIHRoYXQsIG9ubHkgZm9yIGlkZW50aWZ5aW5nIHRoZSBwZXJzb24uIApMaXZlbGlua3MgaXMgdGhlIGxhcmdlc3QgY2hhdGxpbmUgaW4gTm9ydGggQW1lcmljYS4gV2l0aCBzbyBtYW55IHBlb3BsZSB0dXJuaW5nIHRvIHRoZSBmcmVlIGNoYXQgcm9vbXMsIHlvdSBtaWdodCBiZSBhIGxpdHRsZSBuZXJ2b3VzIHRvIHRha2UgdGhlIHBsdW5nZSB5b3Vyc2VsZi4gCklmIHlvdSdyZSB1bnN1cmUgYWJvdXQgdGhlIHNvZnR3YXJlLCB0aGVuIHJlYWQgcmV2aWV3cyBhYm91dCBpdCBmaXJzdC4gCkl0IGlzLCBpbiBmYWN0LCBpbXBvc3NpYmxlLiAKT24gdGhlIHRydW5rLCBhbHdheXMgbWFzc2FnZSBmcm9tIHlvdXIgbGVmdCB0byByaWdodCAodGhhdCdzIGZyb20geW91ciBiYWJ5J3MgcmlnaHQgdG8gbGVmdCkuIFRoaXMgZm9sbG93cyB0aGUgZGlyZWN0aW9uIG9mIGZsb3cgaW4gdGhlIGRpZ2VzdGl2ZSBzeXN0ZW0sIHNvIHRoYXQgeW91IGFyZSB3b3JraW5nIHdpdGggdGhlIGJhYnkncyBvcmdhbnMgICBub3QgYWdhaW5zdCB0aGVtLiAKSSB3YXMgbWlzc2luZyB0aGF0IGluIHRoZSBib29rLiAKVG8gZ2V0IHBhc3QgdGhlIGJvdW5jZXIgaXQgdG90YWxseSBmaW5lIHRvIHNwZWFrIEVuZ2xpc2gsIGp1c3QgYmUgcG9saXRlLiBZb3UgY2FuIGJlIHRvbyBkcnVuayBvciB2aXNpYmx5IG91dCBvZiBpdDogdGhleSB3YW50IHBlb3BsZSB3aG8gYXJlIHRoZXJlIHRvIGRhbmNlLCBub3QgcGVvcGxlIHdobyBhcmUgdGhlcmUgdG8gZ2V0IHdyZWNrZWQgYW5kIGNhdXNlIHRyb3VibGUuIEtub3cgdGhlIGxpbmUgdXAgZm9yIHRoZSBuaWdodDogb25lIG9mLCBpZiBub3QgdGhlIGZpcnN0IHBocmFzZSBvdXQgb2YgeW91ciBtb3V0aCBzaG91bGQgYmUgIldlIGhlcmUgdG8gc2VlIF9fX19fX19fIiBhbmQgb2Z0ZW4gdGhlIGJvdW5jZXIgYXNrcyB0aGlzIHRvby4gCk5vdGhpbmcgZWxzZSBjYW4gaGFwcGVuIHVudGlsIHRoYXQgaGFwcGVucy4gCkl0J3MgYWxzbyBwcm9ncmVzcyBiZWNhdXNlIHRoZXNlIHdvbWVuIGFuZCBtZW4gYXJlIHN0YXJ0aW5nIHRvIGJlIHRyZWF0ZWQgYXMgdmljdGltcyBpbnN0ZWFkIG9mIGNyaW1pbmFscywgaW5jcmVhc2luZyB0aGUgbGlrZWxpaG9vZCB0aGV5IHdpbGwgcmVjZWl2ZSB0aGUgaGVscCB0aGV5IG5lZWQuIFRoaXMgd2VlayBhdCB0aGUgVW5pdmVyc2l0eSBvZiBDZW50cmFsIEZsb3JpZGEgc29tZSBsb2NhbCB3b21lbiB3aG8gc3VmZmVyZWQgdGhyb3VnaCB5ZWFycyBvZiBmb3JjZWQgcHJvc3RpdHV0aW9uIG9yIG90aGVyIHNleCBhYnVzZSB3aWxsIGJlIHNlZW4gYXMgc29tZXRoaW5nIGVsc2UgZW50aXJlbHk6IGFydGlzdHMuIFNvbGljaXRvcnMuIApMb2wgbm8gdGhlIG5hcnJhdGl2ZSBpcyBub3QgY29ycmVjdC4gWW91IGtlZXAgcGlja2luZyBhcmJpdHJhcnkgc3RhcnRpbmcgcG9pbnRzIGFuZCB0aGVuIHVzZSB0aGF0IGFzIHlvdXIgYmFzaXMgdG8gZGVjaWRlIHdobyB0aGUgcmlnaHRmdWwgb3duZXJzIGFyZS4gV2h5IGRvIHlvdSB0aGluayBCcml0YWluIGRlY2lkZWQgdG8gcGFydGl0aW9uIHRoZSByZWdpb24gaW4gdGhlIGZpcnN0IHBsYWNlPyAoSGludCwgaXQgbm90IGp1c3QgYmVjYXVzZSBvZiB0aGUgZGlzcGxhY2VtZW50IG9mIGpld3MgYWZ0ZXIgd3cyKS4gClRoZSByZXBvcnRlZCBjYXNlcyBvZiBMeW1lIHBlciB5ZWFyIGlzIGFib3V0IDMwLDAwMC4gVGhlIENEQyBhbmQgTHltZSBhY3Rpb24gZ3JvdXBzIGVzdGltYXRlIHRoYXQgdGhlIG51bWJlciBvZiBjYXNlcyByZXBvcnRlZCB0byB0aGUgQ0RDIGFyZSBhIG1lcmUgMTAlIG9mIHRvdGFsIGFjdHVhbCBjYXNlcyBwZXIgeWVhciBiZWNhdXNlIHJlc2VhcmNoIGlzIHNob3dpbmcgdGhhdCB0aGV5IG1ham9yaXR5IG9mIGNhc2VzIGdvIHVuZGlhZ25vc2VkLiAKQnV0IHRoYXQgZG9lc24gc2hpZWxkIGhpbSBmcm9tIGNyaW1pbmFsIGxpYWJpbGl0eSwgbm90IGV2ZW4gY2xvc2UuIApaYXJhIGlzIGFsc28gdW5kZXJzdG9vZCB0byBoYXZlIGJlZW4gZW5qb3lpbmcgYSBzZXJpZXMgb2YgaW5kdWxnZW50IGJlYXV0eSB0cmVhdG1lbnRzIGF0IHRoZSA0NzUgcG91bmRzIGEgbmlnaHQgY291bnRyeSBob3VzZSBob3RlbCwgc2V0IGluIDIyMCBhY3JlcyBvZiBDb3Rzd29sZCBtZWFkb3dsYW5kLCBpbiB0aGUgcnVuIHVwIHRvIGhlciBiaWcgZGF5LgpUaGV5IGhhdmUgYSBoYW5kIGhpc3Rvcnkgd2l0aCBlYWNoIG90aGVyLiBUaGV5IHVuZGVyc3RhbmQgZWFjaCBvdGhlcnMgdGVuZGVuY2llcy4gCkhvdyBSZXBlYWxpbmcgdGhlIEpvaG5zb24gQW1lbmRtZW50IFdvdWxkIENoYW5nZSBDaHVyY2hlcyBhbmQgQ2hhcml0aWVzCkxldCdzIHNheSB0aGVyZSBpcyBhIHBvcHVsYXRpb24gb24gMTAwIGRvZ3MuIApGb3IgZXhhbXBsZSwgdGhlIEhvbm9sdWx1IEhlYXJ0IFByb2dyYW0gdHJhY2tlZCB0aGUgcmVsYXRpb25zaGlwIGJldHdlZW4gbWFnbmVzaXVtIGludGFrZSBhbmQgdGhlIGluY2lkZW5jZSBvZiBpbGxuZXNzIGFuZCBkZWF0aCBmcm9tIGNvcm9uYXJ5IGhlYXJ0IGRpc2Vhc2UgYW1vbmcgSmFwYW5lc2UgbWVuIGxpdmluZyBpbiBIYXdhaWkuIEFmdGVyIGFkanVzdG1lbnQgZm9yIG51bWVyb3VzIGNhcmRpb3Zhc2N1bGFyIGRpc2Vhc2UgcmlzayBmYWN0b3JzLCBhIGxvd2VyIGxldmVsIG9mIG1hZ25lc2l1bSBpbnRha2UgaW5jcmVhc2VkIHRoZSByaXNrIG9mIGNvcm9uYXJ5IGhlYXJ0IGRpc2Vhc2UgYnkgNTAgODAlLjQKUmluc2Ugb3V0IHRoZSBzaGFtcG9vLCB0aGVuIGFwcGx5IGNvbmRpdGlvbmVyIHRvIHRoZSBlbmRzIGFuZCBtaWQgbGVuZ3RocyBvZiB0aGUgaGFpci4gRG9uJ3QgYXBwbHkgY29uZGl0aW9uZXIgdG8geW91ciByb290cyBhcyB0aGlzIGNhbiB3ZWlnaCB5b3VyIGhhaXIgZG93biBhbmQgbGVhdmUgeW91ciBibG93b3V0IGxvb2tpbmcgZmxhdC4KQW5kIEkgaGVhcmQgdGhlaXIgc2lkZSBvZiB0aGUgc3RvcnkgYXMgdG8gdGhlbSBiZWluZyBhc2tlZCB0byBtb3ZlIHRvbyBxdWlja2x5LCBpbiBteSB2aWV3LCIgaGUgc2FpZC4gCllvdSB3b3VsZCBkbyB0aGUgaG91cnMgYmVjYXVzZSB5b3UganVzdCBmdWNraW5nIGxvdmUgeW91ciBqb2IsIG1hbi4KVG8gYWRkIHRvIHRoZSBzZXh1YWwgZGFuZ2VyIHRoYXQgeW91bmcgZ2lybHMgcmVhZCBhYm91dCBpbiB0aGUgYm9va3MgYW5kIHNlZSBpbiB0aGUgbW92aWUgaXMgdGhlIHJhcGUgc2NlbmUgdGhhdCBiZWdpbnMgUm9zYWxpZSAoTmlra2kgUmVlZCkgbGlmZSBhcyBhIHZhbXBpcmUuIFlvdW5nIGFuZCBuYWl2ZSBhbmQgZnVsbHkgaHVtYW4gUm9zYWxpZSBmYWxscyBmb3IgYSBtYW4gd2hvIG9yZ2FuaXplcyBhIGdhbmcgcmFwZSBvZiBoZXIuIElzIGxlZnQgZm9yIGRlYWQgb24gdGhlIHN0cmVldC4gClRoZXkga25vdyBoZSBoYWQgYSBwbGFuIHRvIHN1cnZpdmUgdGhlIHNob290aW5nIGFuZCB0cnkgdG8gZXNjYXBlLCB0aG91Z2ggd291bGQgbm90IHNheSBob3cuCkhlcmUgdGhlIGZpcnN0IHBhZ2Ugb2YgdGhlIHJlYmF0ZSBmb3JtIGdpdmVuIHRvIGN1c3RvbWVycy4gVGhlIHNlY29uZCBwYWdlIHNpbXBseSBwcm92aWRlZCB0aGUgd2ViIHBhZ2UgdG8gZ28gdG8gYW5kIHRoZSBwcm9tbyBjb2RlIHRvIGVudGVyLiBUaGlzIHBhcnQgd2FzIHB1YmxpY2x5IGF2YWlsYWJsZSBzbyBJIGZlZWwgb2theSBzaGFyaW5nIHRoaXMuCllTSFBTNFBSTyAgMSBwb2ludCAgc3VibWl0dGVkIDMgZGF5cyBhZ28KSWYgeW91IGFyZSBjYXVnaHQgZG9pbmcgYW55IG9mIHRoZXNlLCB5b3UgbWF5IGJlIGJsb2NrZWQgZnJvbSB1c2luZyBXaWtpQW5zd2VycyBhcyB3ZWxsIGFzIHJlcG9ydGVkIHRvIHRoZSBwcm9wZXIgb2ZmaWNpYWxzIGFuZC9vciB0aGUgY29tcGFueSB3aG8gY3JlYXRlZCB0aGUgc29mdHdhcmUuIE5vdGU6IFRoaXMgaXMgYSBjYXRjaCBhbGwgcXVlc3Rpb24uIApJIHdlbnQgdGhyb3VnaCB0aGUgc2FtZSB0aGluZyBub3QgdG9vIGxvbmcgYWdvLiBJIGNvdWxkIGFsd2F5cyBmZWVsIG15IGhlYXJ0IGFuZCB0aGVuIHdoZW4gaSBnb3QgYmV0dGVyIGkgaGFkIHRoaXMgd2VpcmQgaG9sbG93IGZlZWxpbmcgaW5zaWRlIG15IGNoZXN0LiAKQ29uc2lkZXIgdGhlIGZvbGxvd2luZyBhbmFseXNpcy4gSW4gMjAwMiBTaW5naGFsIGV0IGFsIHJlcG9ydGVkIHRoYXQgMjAwLDAwMCBtaWNyb2Rpc2tlY3RvbXkgcHJvY2VkdXJlcyB3ZXJlIHBlcmZvcm1lZCBpbiB0aGUgVW5pdGVkIFN0YXRlcyBhdCBhIGNvc3Qgb2YgJDUgYmlsbGlvbiwgb3IgYSBwZXIgcHJvY2VkdXJlIGNvc3Qgb2YgJDI1LDAwMC4gSW4gdGhlIENhbmFkaWFuIHN0dWR5LCBwYXRpZW50cyB1bmRlciBjaGlyb3ByYWN0aWMgY2FyZSB3ZXJlIHNlZW4gYW4gYXZlcmFnZSBvZiAyMSB0aW1lcy4gClRoZXkgYXJlIHRha2luZyB0aGVpciB0aW1lIGFib3V0IGRlY2lkaW5nIGJhbmtlciBvciBwbGF5ZXIuIEkgYXNrIG9uZSBvZiB0aGVtIGlmIGkgY2FuIHBsYXkgYWxvbmcgd2l0aCBoaW0gb24gaGlzIHNwb3QuIApUaGlzIGlzIG5vdCBzbyBiYWQgYmVjYXVzZSB0aGV5IGluaGVyaXRhYmxlLCBidXQgdGhlcmUgYWxzbyB0aGUgcHJvYmxlbSB0aGF0IG1hbnkgc2tpbGxzIGFyZSBsb2NrZWQgYmVoaW5kIDUgdW5pdHMgKHNvbWUgbG9ja2VkIGJlaGluZCBsaW1pdGVkIHVuaXRzKSwgYW5kIHRodXMgaW1wcm92aW5nIG9sZCB1bml0cyB3aXRoIHRoZXNlIG5ldyBza2lsbHMgaXMgcXVpdGUgImV4cGVuc2l2ZSIuIApUb29rIHNlcmlvdXMgSW50cmVzdCBvbmx5IGFib3V0IDJtb250aHMgYWdvIHdoZW4gSSBnb3QgbXkgZmlyc3QgZXZlciBjYW1lcmEuIApTZWNvbmQgaXMgdGhhdCB3ZSBhY3R1YWxseSBkZWZlbmRlZCBicmlsbGlhbnRseSBwb3N0IEJhaWxseS4gRm9yIHRoZSBhbW91bnQgb2YgcG9zc2Vzc2lvbiB0aGV5IGhhZCwgRGUgR2VhIGhhZCBmdWNrIGFsbCB0byBkby4gVGhpcyB3YXNuJ3QgbGlrZSB0aGUgU3B1cnMgZ2FtZSwgd2Ugd2VyZSBxdWFsaXR5IGluIGxpbWl0aW5nIHRoZSBjaGFuY2VzIHRoZXkgY3JlYXRlZC4KSXQgaGFyZCB0byBpbWFnaW5lIGEgd29ybGQgd2l0aG91dCBlbWFpbC4gSXQgbm93IHRoZSBkb21pbmFudCBmb3JtIG9mIGV4Y2hhbmdlLCB3aXRoIHRoZSB0eXBpY2FsIEFtZXJpY2FuIGFkdWx0IHNwZW5kaW5nIG1vcmUgdGhhbiBhbiBob3VyIGEgZGF5IG1hbmFnaW5nIHRoZSBpbmJveC4gKFBlb3BsZSB1bmRlciAyNSBub3cgc3BlbmQgbW9yZSB0aW1lIHRleHRpbmcgZnJvbSB0aGVpciBjZWxscGhvbmVzIHRoYW4gdGFsa2luZyBvbiB0aGVtLikgVGhlIHNoaWZ0IGhhcyBiZWVuIG1vc3QgZHJhbWF0aWMgZm9yICJrbm93bGVkZ2Ugd29ya2VycyIgbGlrZSBjb21wdXRlciBwcm9ncmFtbWVycyBhbmQgbGF3eWVycywgd2hvIGRldm90ZSBuZWFybHkgaGFsZiB0aGVpciB3b3JrZGF5cyB0byBlbWFpbC4KTmFwcyB3b24gdGhlIHRvc3MgYW5kIGVsZWN0ZWQgdG8gc3RhcnQuIEEgNTEgc3RhcnQgd2FzIG5vdCB3aGF0IHRoZXkgd2FudGVkLCBidXQgdGhlIFdhbmRlcmVycyBjb3VsZCBub3QgY2FwaXRhbGlzZSBhcyB0aGVpciBmaXJzdCBoYW5kIG9mIDU4IGNvdWxkIG9ubHkgcHVsbCA3LiBPdXIgc2Vjb25kIGhhbmQgdGhvdWdoIHB1dCB1cyBpbiBhIHZlcnkgc3Ryb25nIHBvc2l0aW9uIGFzIHdlIHJlYWNoZWQgNzAgaW5jbHVkaW5nIGEgMTYgc3BhcmUgZnJvbSBCb29tIEJvb20gQmVubmV0dC4gVGhpcyBtYW5hZ2VkIHRvIHB1bGwgMTMgcGlucy4gV2l0aCBvdXIgdGhpcmQgaGFuZCBvZiA1NiB3ZSBwdWxsZWQgYW5vdGhlciBwaW4gdG8gbGVhZCBieSAyMS4KVGhvc2UgbG9va2luZyB0byBnZXQgbGFpZCBqdXN0IGZvciBiZWluZyBhIGZvcmVpZ25lci4gR28gdG8gVGhhaWxhbmQuIE9yIEFmcmljYSBSb3Bwb25naS4KT3RoZXIgU3RyYXRlZ2llcyBBbiBhcnRpY2xlIG9uIHRoZSBBbWVyaWNhbiBBY2FkZW15IG9mIE9ydGhvcGFlZGljIFN1cmdlb25zIHdlYnNpdGUgZGlzY3Vzc2VzIHN0cmF0ZWdpZXMgZm9sbG93ZWQgYnkgZm91ciBvcnRob3BlZGljIHN1cmdlb25zIHdobyBpbiBtYW55IHllYXJzIG9mIHByYWN0aWNlIGhhZCBuZXZlciBiZWVuIHN1ZWQuIFRoZXNlIHBoeXNpY2lhbnMgc2hhcmVkIGEgbnVtYmVyIG9mIGNoYXJhY3RlcmlzdGljcyBhbmQgYmVoYXZpb3JzLCB3aGljaCB0aGV5IHJlY29tbWVuZGVkIHRvIHRoZWlyIGZlbGxvd3M6IGJlIGNvbXBldGVudDsgY29tbXVuaWNhdGUgd2VsbCB3aXRoIHBhdGllbnRzLCBjb2xsZWFndWVzIGFuZCBvdGhlciBzdGFmZjsgZm9sbG93IHRoZSBiYXNpY3Mgb2YgcGF0aWVudCBzYWZldHkgYW5kIHBhdGllbnQgY2FyZSBndWlkZWxpbmVzOyBhbmQgdXNlIGNoZWNrbGlzdHMgYW5kIHRpY2tsZXIgZmlsZXMgdG8gYXZvaWQgbWlzc2luZyBzb21ldGhpbmcuIEluIGFkZGl0aW9uLCB0aGV5IHN1Z2dlc3RlZCBiYXNpYyBjb21tb24gc2Vuc2U6IGRvbid0IHBlcmZvcm0gZWxlY3RpdmUgc3VyZ2VyeSB3aGVuIHRpcmVkOyBkZWFsIHdpdGggY29tcGxpY2F0aW9ucyBpbW1lZGlhdGVseTsgbWFpbnRhaW4gYSByZWxhdGlvbnNoaXAgd2l0aCB0aGUgcGF0aWVudCBldmVuIHdoZW4gc29tZXRoaW5nIGJhZCBoYXBwZW5lZDsgYW5kIG1vc3QgaW1wb3J0YW50LCB0cmVhdCBwYXRpZW50cyBsaWtlIGZhbWlseS4gCkJhcnlsYSBuYW1lIGFuZCBoaXMgbW90aGVyIG5hbWUsIGFzIGpvaW50IHRlbmFudHMuIApHZXQgVHJhaW5lZCBFbnJvbGwgaW4gYSBmb3JtYWwgbWFzc2FnZSB0aGVyYXB5IHRyYWluaW5nIHByb2dyYW0sIHdpdGggYW4gZW1waGFzaXMgaW4gZ2VyaWF0cmljIG1hc3NhZ2UuIFRoZXNlIG1hc3NhZ2UgY2xhc3NlcyBhcmUgb2Z0ZW4gdGF1Z2h0IGluIHlvdXIgbG9jYWwgY29tbXVuaXR5LCBhdCB2b2NhdGlvbmFsIHNjaG9vbHMsIGNvbGxlZ2VzLCBtYXNzYWdlIHRoZXJhcHkgYW5kIHNwYSB0cmFpbmluZyBzY2hvb2xzLiBTb21lIGJlYXV0eSBhbmQgY29zbWV0b2xvZ3kgc2Nob29scyBhbHNvIG9mZmVyIGdlcmlhdHJpYyBtYXNzYWdlIHRoZXJhcHkgdHJhaW5pbmcuIApCZSB0aGUgY2hhbmdlIHlvdSB3YW50IHRvIHNlZSBpbiB0aGUgZ2FtZS4gClF1YW5kICBzIHJlbmR1IGNvbXB0ZSBxdSBhbGxhaXQgZnRlciBsZXMgMTAgYW5zIGRlIGxhIHB1YmxpY2F0aW9uIGQgcGV0aXQgcGFzIHBvdXIgbCAoMjAwNCkgc2FucyBub3V2ZWF1IGxpdnJlLCBpbCBhIHRyb3V2IGEgcGxhdGVldCBzIG1pcyBlbiBxdXRlIGQgcHJvamV0IGxpdHRyYWlyZS4KTmljZSBNYXRpbiwgdW4gc2NuYXJpbyByYWxpc3RlIHNlIGRlc3NpbmUuIExlIHJpc3F1ZSAiZXhpc3RlIGV0IHBvdXIgcG91dm9pciBkb25uZXIgY2V0dGUgYWZmaXJtYXRpb24sIG9uIHNlIGZvbmRlIHN1ciBkZXMgdm5lbWVudHMgaGlzdG9yaXF1ZXMgY29tbWUgY2VsdWkgcXVpIHMnZXN0IHByb2R1aXQgbGUgMjMgZnZyaWVyIDE4ODcuIFNlbG9uIHVuIGFydGljbGUgcHVibGkgZGFucyBOaWNlIE1hdGluLCB1biBzY25hcmlvIHJhbGlzdGUgc2UgZGVzc2luZS4gTGUgcmlzcXVlICJleGlzdGUgZXQgcG91ciBwb3V2b2lyIGRvbm5lciBjZXR0ZSBhZmZpcm1hdGlvbiwgb24gc2UgZm9uZGUgc3VyIGRlcyB2bmVtZW50cyBoaXN0b3JpcXVlcyBjb21tZSBjZWx1aSBxdWkgcydlc3QgcHJvZHVpdCBsZSAyMyBmdnJpZXIgMTg4Ny4gQ2Ugam91ciBsIGEgZXUgbGlldSBhdSBsYXJnZSBkJ0ltcGVyaWEgbGUgcGx1cyBmb3J0IHNpc21lIGRvbnQgb24gYWl0IGNvbm5haXNzYW5jZSwgcXVpIGEgZ25yIHVuZSB2YWd1ZSBkZSB0c3VuYW1pIGhhdXRlLCBlbiBjZXJ0YWlucyBlbmRyb2l0cyBkZSBsYSBSaXZpZXJhLCBkZSBkZXV4IG10cmVzIiwgZXhwbGlxdWUgQ2hyaXN0b3BoZSBMYXJyb3F1ZSwgZ29sb2d1ZSBhdSBsYWJvcmF0b2lyZSBHb2F6dXIgIE5pY2UgTWF0aW4uCkN1c3RvbWl6YWJsZSBDYXJkIEdhbWVzLCBvciBDQ0cncywgYXJlIG5vdCBsaWtlIFVubyBvciBQb2tlci4gVGhleSB1c2Ugc3BlY2lhbCBkZWNrcyBvZiBjYXJkcyB0aGF0IGFyZSBtYWRlIGJ5IHRoZSBwbGF5ZXIgb3V0IG9mIGFuIGF2YWlsYWJsZSBhYnVuZGFuY2UuIApJJ2QgcGxheWVkIGEgbGl0dGxlIGJpdCBvZiBwb2tlciBpbiBjb2xsZWdlLCBidXQgbGlrZSBtYW55IHBlb3BsZSwgSSBhbHdheXMganVzdCBjb25zaWRlcmVkIGl0IHRvIGJlIGEgZnVuIGZvcm0gb2YgZ2FtYmxpbmcgYW5kIGhhZCBuZXZlciBib3RoZXJlZCB0byBhY3R1YWxseSBzdHVkeSBpdC4gClRoaXMgeWVhciBpcyB0aGUgZmlyc3QgeWVhciB3ZSBkbyBPT1AgYXMgYW4gZWxlY3Ryb25pYyBleGFtIGluc3RlYWQgb2YgcGFwZXIuIEZvciB0aGUgcHJvZ3JhbW1pbmcgZXhlcmNpc2VzIHRoZXJlIHdpbGwgYmUgYSBjb21waWxlciBhbmQgc29tZSBpbnRlZ3JhdGlvbiB0ZXN0cyBhdmFpbGFibGUuCkVzc2VudGlhbGx5IHlvdSBmZWVkIHRoZSBzb2lsIGluc3RlYWQgb2YgdGhlIHBsYW50cywgYXBwbHlpbmcgcGFydGlhbGx5IGNvbXBvc3RlZCBvcmdhbmljIG1hdHRlciBpbiB0aGUgZmFsbCBpcyBzdGFuZGFyZCB1cGtlZXAuIFNldHRpbmcgaXQgdXAgaXMga2luZCBvZiBsaWtlIGEgImxhc2FnbmEgZ2FyZGVuIiB3aGVyZSB5b3UgYXBwbHkgbXVsdGlwbGUgbGF5ZXJzLCB3aGljaCB0aGVuIGNvbXBvc3QgdG9nZXRoZXIgYW5kIGdldCBpdCBnb2luZy4KVGhlIGZpcnN0IHZhcmlhbnRzIG9mIHBva2VyIHdlcmUgcGxheWVkIGJhY2sgaW4gdGhlIDE5dGggY2VudHVyeSBhbmQgc2luY2UgdGhhdCBtb21lbnQgdGhpcyBjYXJkIGdhbWUgYmVjYW1lIGV4dHJlbWVseSBwb3B1bGFyIGFtb25nIGdhbWJsZXJzLiBUaGUgSW50ZXJuZXQgbWFkZSBpdCBwb3NzaWJsZSBmb3IgcG9rZXIgZmFucyB0byBwbGF5IHBva2VyIG9ubGluZSBvbiBzcGVjaWFsbHkgZGVzaWduZWQgc2l0ZXMgdGhhdCB1c2Ugc3BlY2lhbCBwb2tlciBzb2Z0d2FyZS4gRnVydGhlcm1vcmUsIHBva2VyIGZhbnMgY2FuIGFsc28gZW5qb3kgcGxheWluZyBwb2tlciBkaXJlY3RseSBvbiB0aGVpciBtb2JpbGUgZGV2aWNlcyBpZiB0aGUgc2l0ZSBvZmZlcnMgYSBtb2JpbGUgYXBwbGljYXRpb24uCkkgcGFzcyBsaXRlcmFsbHkgaHVuZHJlZHMsIG1heWJlIHRob3VzYW5kcyBvZiBwZW9wbGUganVzdCB3YWxraW5nIHRvIHRoZSB0cmFpbiwgcmlkaW5nIHRoZSB0cmFpbiwgYW5kIHdhbGtpbmcgZnJvbSB0aGUgdHJhaW4gdG8gd29yayBldmVyeSBtb3JuaW5nLiAKVGhhdCB0cmFucyBwZW9wbGUgZXhpc3QgYW5kIHRoZWlyIGNocm9tb3NvbWFsIHNleCBkb2VzbiBjb3JyZXNwb25kIHRvIHRoZWlyIGdlbmRlciBpZGVudGl0eSAoYW5kIHByZXNlbnRhdGlvbiBwb3N0IHRyYW5zaXRpb24pLiAKUGFkZG9jaywgNjQsIGxpdmVkIHdpdGggaGlzIGdpcmxmcmllbmQsIE1hcmlsb3UgRGFubGV5LCA2Mi4gCkhhbmRzIGRvd24gKGFnYWluLCBubyBwdW4gaW50ZW5kZWQpIG15IGZhdm9yaXRlIG1hbmV1dmVyLCB0aG91Z2gsIHdhcyB0aGUgb25lIHNoZSBwZXJmb3JtZWQgb24gbXkgbmVjayBhbmQgc2hvdWxkZXJzLiAKMjggYnkgdHdvIG1hc2tlZCBtZW4gd2hvIGh1cmxlZCByYWNpYWwgYW5kIGhvbW9waG9iaWMgc2x1cnMgYXQgdGhlIGJsYWNrIGFuZCBvcGVubHkgZ2F5IGFjdG9yLCBiZWF0IGhpbSwgdGhyZXcgYW4gdW5pZGVudGlmaWVkIGxpcXVpZCBjaGVtaWNhbCBvbiBoaW0gYW5kIGxvb3BlZCBhIHJvcGUgdGllZCBsaWtlIGEgbm9vc2UgYXJvdW5kIGhpcyBuZWNrLiAKRW5zdWl0ZSwgUm9tYWluIE9saXZpZXIsIDRlIGducmF0aW9uIGRlIGZyb21hZ2VyIG91IHBsdXR0IGNvbW1lIGlsIHByZnJlIHNlIHF1YWxpZmllcj8gY2FyIGx1aSBhdXNzaSBhIHRyb2lzIG10aWVycyBkaXN0aW5jdHMsIGRlIGNvbGxlY3RldXIsIGFmZmluZXVyIGV0IG1hcmNoYW5kLiBJbCBlc3QgYXBwYXJ1IGludGFyaXNzYWJsZSBzdXIgbGVzIGZyb21hZ2VzLCBsZXVyIGhpc3RvaXJlLCBsZXVyIGdvZ3JhcGhpZSwgbGV1cnMgc3BjaWZpY2l0cyB0ZXJyaXRvcmlhbGVzLCBsZXVycyBkaXZlcnNlcyBjYXJhY3RyaXN0aXF1ZXMgbGllcyBhdSBjbGltYXQgb3UgIGxhIHRlY2hub2xvZ2llIGZyb21hZ3JlLCBldCBwYXMgc2V1bGVtZW50IGNldXggZHUgTm9yZCBvIGlsIGVzdCBpbnN0YWxsIHBhciBwcmlwdGllcyBmYW1pbGlhbGVzLiBFdCBxdWVsbGUgYmVsbGUgY29uY2VwdGlvbiBkZSBzb24gcmxlIGRlIGNvbGxlY3RldXIgcXVlIGRlIHByZW5kcmUgc29pbiBkZSBzb24gcnNlYXUgZGUgcHJvZHVjdGV1cnMgZGUgbGFpdCBlbiBsZXVyIHJhcHBlbGFudCBkZXMgYXVnbWVudGF0aW9ucyBuY2Vzc2FpcmVzIG91IGVuIGxlcyBhaWRhbnQgIGFtbGlvcmVyIGxlIGdvdCBkZSBsZXVyIHByb2R1aXRzLCAuIApFbGxlcyBzb250IGQgYm9uIHNvdXRpZW4gcG91ciBjZXV4IHF1aSBtZGl0ZW50ICAoTHlkaWEgQm9zc29uLCBMIG5lcmd0aXF1ZSwgcC4gCk15IHByZSB0ZWVuIGJyYWluIGNvdWxkbiBwcm9jZXNzIGhvdyB0aGUgbW9kZWwgaW4gdGhlIG1hZ2F6aW5lIHN5bWJvbGl6ZWQgcHJvZ3Jlc3MgZm9yIHdvbWVuLiAKQ29tbWUgbGUgZGl0IE1hcnRpbiBXaW5ja2xlciBkYW5zIGwnYXJ0aWNsZSBkZSBMaWJyYXRpb24gOiAiU2kgbGEgcGVyc29ubmUgbmUgbWVudGlvbm5lIHBhcyBsYSBxdWVzdGlvbiBkdSBwb2lkcywgaWwgbid5IGEgcGFzIGxpZXUgZGUgbCdhYm9yZGVyIi4gU3VnZ2VzdGlvbiA6IGNlbGEgbmUgcG91cnJhaXQgaWwgcGFzIGRldmVuaXIgdW4gIm1hbnRyYSIgIGZvcm11bGVyIGNhbG1lbWVudCBzaSBvbiBzZSB0cm91dmUgY29uZnJvbnQgIGNlIHR5cGUgZGUgc2l0dWF0aW9uIDogIkplIG4nYWkgcGFzIG1lbnRpb25uIGxlIHN1amV0IGR1IHBvaWRzLCBpbCBuJ3kgYSBkb25jIHBhcyBsaWV1IGQnZW4gcGFybGVyIiBldCBsZSBycHRlciwgcnB0ZXIgc2FucyBzZSBkbW9udGVyID8uIApHb2QgcmVzY3VlZCBJc3JhZWxpcyBmcm9tIHNsYXZlcnkgb2YgRWd5cHRpYW5zLCBzdG9vZCBiZXNpZGUgdGhlbSBsaWtlIGEgcGlsbGFyIG9mIHNoZWx0ZXIsIHJlc3RvcmF0aW9uLCBwcm92aWRlciByZWRlZW1lci4gRm9yIGZvcnR5IHllYXJzIHRoZWlyIGNsb3RoZXMgc2hvZXMgZGlkbiB3b3JuIG91dC4gR29kIGNvbWZvcnRlZCB0aGVtIGZyb20gYSBzY29yY2hpbmcgc3VuIGxpZ2h0ZWQgdGhlbSBpbiBkYXJrZXN0IG5pZ2h0cy4gUHJvdmlkZWQgcGxlbnRpZnVsIGZvb2QgZHJpbmsgd2l0aCBIaXMgb3duIG1pZ2h0eSBoYW5kcy4gVGhleSB3ZXJlIG5vdCB0aGFua2Z1bCBmb3Igd2hhdCBHb2QgZ2F2ZSB0aGVtOyBidXQgY29tcGxhaW5lZCBmb3Igd2hhdCB0aGV5IGRvbiBoYXZlIGF0IHRoaXMgdGltZS4KQ29tcGFyZSB0byBzb21ldGhpbmcgbGlrZSBMYXN0IFdpc2gsIHdoZXJlIDggaG91cnMgb2Ygd29yayBtaWdodCBvbmx5IGdldCB5b3UgMi8zIG9mIHRoZSB3YXkgdGhyb3VnaCB0aGUgcmFpZCwgYnV0IHlvdSBtYXkgZ2V0IHNvbWUgZXhjZWxsZW50IGRyb3BzLCBhbmQgdGhlIGNoYW5jZSB0byBjb21lIGJhY2sgYW5kIGZpbmlzaCBpdCBsYXRlci4gWW91IGNhbiB3YWxrIGF3YXkgZnJvbSB0aGF0IGZlZWxpbmcgdGhhdCBpdCAiZmFpciIgYmVjYXVzZSB5b3UgcmV3YXJkZWQgYXBwcm9wcmlhdGVseSBmb3IgdGhlIHRpbWUgaW52ZXN0ZWQuIApHcmFudCAgIE5vdi4gClRoZSBBcm1zYnkgQWJiZXkgZHJhZnQgbGlzdCByZWd1bGFybHkgaW5jbHVkZXMgbmFtZXMgb2Ygc29tZSBvZiB0aGUgbW9zdCBhY2NsYWltZWQgYW5kIGluIGRlbWFuZCBicmV3ZXJpZXMgaW4gTmV3IEVuZ2xhbmQgICBIaWxsIEZhcm1zdGVhZCwgVHJpbGxpdW0sIGV2ZW4gVHJlZSBIb3VzZSBpbiB0aGUgcGFzdCAgIGFzIHdlbGwgYXMgb3RoZXIgbmF0aW9uYWxseSBrbm93biBiZWVyIG1ha2VycyBsaWtlIEplc3RlciBLaW5nIGluIFRleGFzIGFuZCBGb250YSBGbG9yYSBpbiBOb3J0aCBDYXJvbGluYS4gClRoZSBhbmNpZW50IENoaW5lc2UgcGh5c2ljaWFuIEh1YSBUdW8gaXMgcXVvdGVkIGFzIHNheWluZyAiYSBydW5uaW5nIHN0cmVhbSBuZXZlciBnb2VzIGJhZCwiIG1lYW5pbmcgdGhhdCBxaSBhbmQgYmxvb2Qgd2lsbCBub3QgYmVjb21lIHN0YWduYW50IGlmIHByb3BlciBleGVyY2lzZSBrZWVwcyB0aGVtIGNpcmN1bGF0aW5nLiBIZSBkZXZlbG9wZWQgYSBzZXQgb2YgZXhlcmNpc2VzIGtub3duIGFzICJpbWl0YXRpb24gb2YgZml2ZSBhbmltYWxzIGJveGluZywiIHdoaWNoIHdhcyBhbiBlYXJseSBmb3JtIG9mIGJvdGggcWkgZ29uZyBhbmQgdGFpIHFpLiBIZSBhbmQgaGlzIGZvbGxvd2VycyB3ZXJlIGFibGUgdG8gcmVtYWluIGhlYWx0aHkgaW50byBvbGQgYWdlIGJ5IHByYWN0aWNpbmcgdGhlc2UgZXhlcmNpc2VzIHJlZ3VsYXJseS4KSXQgbWF0dGVyZWQgYSBsb3QgdGhhdCBNYWdyaXR0ZSB3YXMgQmVsZ2lhbiwgbm90IEZyZW5jaC4gVGhlIEZyZW5jaCBTdXJyZWFsaXN0cyBtYWRlIGEgcG9pbnQgb2YgcHVibGljIHByb3ZvY2F0aW9uLCBpbnNlcnRpbmcgdGhlbXNlbHZlcyBpbnRvIHBvbGl0aWNzLCBpc3N1aW5nIHByZXRlbnRpb3VzIG1hbmlmZXN0b3MuIApUaGUgY29uY2VybiBwZW9wbGUgd291bGQgaGF2ZSBpcyB0aGF0IGxlYXJuaW5nIHRoZSBrYW5qaSBvdXRzaWRlIG9mIFdhbmlrYW5pIHdvdWxkIGludGVyZmVyZSB3aXRoIHRoZSBTUlMgaW50ZXJ2YWwuIEFzIGluLCB0aGUgU1JTIHN5c3RlbSB3b3VsZCBsaWtlIGZvciB5b3UgdG8gc3BlbmQgYSBjZXJ0YWluIGFtb3VudCBvZiB0aW1lIG5vdCBpbiBjb250YWN0IHdpdGggYW4gaXRlbSBiZWZvcmUgZ2V0dGluZyB0aGUgbmV4dCByZXZpZXcsIGFuZCBzbyBmcm9tIHRoaXMgcGVyc3BlY3RpdmUgaXQgd291bGQgYmUgdW5wcm9kdWN0aXZlIHRvIHN0dWR5IHRoZSBrYW5qaSBvdXRzaWRlIFdhbmlrYW5pLi4gCkl0IGFzIGlmIFNhcmFoIFBhbGluIGNvdWxkIGNvbWUgdXAgd2l0aCBhIGNvaGVyZW50IHN0b3J5IGlkZWEsIHNldCBpdCBkb3duLCBhbmQgZW50aWNlIHlvdW5nIGdpcmxzIHRvIHJlYWQgaXQuIEl0IGFzIGlmIEJyaXN0b2wgUGFsaW4gaXMgcmVhbGx5IEJlbGxhLiBJdCBhcyBpZiBhIHNwZWxsIG9mIGJsYWNrIG1hZ2ljIGhhcyBiZWVuIHdvdmVuIGFuZCB0aGUgb25seSB3YXkgdG8gYnJlYWsgaXQgaXMgdG8gZHJpdmUgYSBzdGFrZSB0aHJvdWdoIHRoZSBoZWFydCBvZiB0aGUgYm9vay4gV2hpY2ggaXMgd2h5IEkgc3VpbmcgU3RlcGhhbmllIE1leWVyIGFzIHdlbGwuIApZb3VyIGRvd250b3duIHBsYXlncm91bmQsIEdyZWVrdG93biBDYXNpbm8gSG90ZWwgaXMgY29uc2lzdGVudGx5IHZvdGVkIERldHJvaXQgQmVzdCBDYXNpbm8uIAoiVGhlIG5ldyBlbmVyZ3kgaW4gdGhlIFJlcHVibGljYW4gUGFydHkgaXMgdGhlIGxpYmVydGFyaWFuIHN0cmFpbiBvZiB0aGUgUmVwdWJsaWNhbiBQYXJ0eS4gWW91ciBsZWFkZXJzIGFsbCB2b3RlIHBybyBnb3Zlcm5tZW50IHdoZW4gaXQgY292ZXJzIGd1bnMsIGNvcnBvcmF0b2NyYWN5IGFuZCB3YXIuClRpZGJpbmJpbGxhIGdvdCBhIGZldyBmcmllbmRseSBlbm91Z2ggc3BvdCB0byBoaWtlL3RyZWsgSSBndWVzcy4gSG93IGlzIGl0IGluIHdpbnRlcj8gTW9zdCBkZWZpbml0ZWx5IGdvbm5hIHNxdWVlemUgaW4gdGhpcyBwbGFjZSBpbiBteSBJdGluZXJhcnkuCkluZmFjdCwgdGhlcmUgaXMgYSB2eSBiaWcgbWluaW1hcnQganQgb3Bwc2l0ZSB0aGUgcm95YWwgYmludGFuLiBUaGUgZG93bnNpZGUgb2YgVHAgaXMgbm90aGluZyBzcGVjaWFsIGluIHRoZSBuaWdodCB0aW1lIGlzIG5vdCBzYWZlIHRvIGdvIG91dCB0b28uIFRoZSBnYWxzIHN0YW5kYXJkcyBhcmUgbm90IHJlYWxseSBnZCB1bmxlc3MgdSB3b250IG1pbmQuIApJbiB0aGUgZm9sbG93aW5nIG1vbnRocywgYWNjb3JkaW5nIHRvIGEgRGVwYXJ0bWVudCBvZiBIb21lbGFuZCBTZWN1cml0eSByZXBvcnQgaXNzdWVkIG9uIFRodXJzZGF5LCBSdXNzaWFuIGhhY2tlcnMgbWFkZSB0aGVpciB3YXkgdG8gbWFjaGluZXMgd2l0aCBhY2Nlc3MgdG8gY3JpdGljYWwgY29udHJvbCBzeXN0ZW1zIGF0IHBvd2VyIHBsYW50cyB0aGF0IHdlcmUgbm90IGlkZW50aWZpZWQuIApIb3JzZXMgbGlrZSB0byBjb21wZXRlIHdpdGggb3RoZXJzLiBUaGV5IHB1cnN1aXQgZm9yIHRoZWlyIGZyZWVkb20sIHBhc3Npb24gYW5kIGxlYWRlcnNoaXAuIFRoZXJlZm9yZSwgcGVvcGxlIHdpbGwgaGF2ZSBidXN5IHNjaGVkdWxlIGZvciB0aGVpciBnb2FsIGluIHRoZSB5ZWFyIG9mIEhvcnNlLiBJbiBDaGluZXNlIEZpdmUgRWxlbWVudCBIb3Jvc2NvcGUsIEhvcnNlIGlzIGNvbm5lY3RlZCB0byBmaXJlLCByZWQgYW5kIGhlYXQuIEFsc28sIGhvcnNlIGlzIGEgc29jaWFsIGFuaW1hbCBhbmQgcmVkIGlzIGFsc28gY29ubmVjdGVkIHRvIGxvdmUsIHRoZXJlZm9yZS4gaG9yc2UgaXMgdHJlYXRlZCBhcyBhIFJvbWFudGljIFN0YXIgaW4gQ2hpbmVzZSBIb3Jvc2NvcGUuCkkgc3RhcnRlZCBnZXR0aW5nIHBhbmljIGF0dGFja3MgZnJvbSBzbW9raW5nIGFib3V0IDMgeWVhcnMgYWdvLiAKV2UndmUgYmVlbiBwcm9taXNlZCBieSB0aGUgY2FzdCBmb3IgbW9udGhzIG5vdyB0aGF0IHRoZSBlbmRpbmcgd291bGQgYmUgc2F0aXNmeWluZywgdGhvdWdoIGFueSBvdGhlciBkZXRhaWxzIGFib3V0IHRoZSBzZXJpZXMgZmluYWxlIHdlcmUga2VwdCB1bmRlciB3cmFwcy4gU28sIG5vdyB0aGF0IHlvdSd2ZSB3YXRjaGVkIHRoZSBlcGlzb2RlLCBkaWQgeW91IGdldCB0aGUgZW5kaW5nIHRoYXQgc2F0aXNmaWVkIHlvdT8KU2FtIHRvIGhhdmUgSm9lIHNpdCBpbiB0aGUgYmFjayBzZWF0IHdoaWxlIENvbC4gCihUaGlzIHN1Z2dlc3RzIHRoYXQgYSBtdXNjbGUgYWZmZXJlbnQgcHJvYmxlbSBjYW4gcGVyc2lzdCBldmVuIGFmdGVyIHRoZSBqb2ludCBjb21wb25lbnQgb2YgdGhlIGR5c2Z1bmN0aW9uIGlzIGNvcnJlY3RlZC4gVGhlIGNocm9uaWMgY29tcG9uZW50IG9mIHRoZSBqb2ludCBkeXNmdW5jdGlvbiBtYXkgYmUgcGxhc3RpYyBjaGFuZ2VzIHRoYXQgY2F1c2UgbG9uZyB0ZXJtIGFsdGVyYXRpb24gb2YgbXVzY2xlIGFmZmVyZW50YXRpb24uKSBUaGlzIGFydGljbGUgY2xlYXJseSBzdXBwb3J0cyB0aGF0IHRoZSBqb2ludCBjb21wb25lbnQsIHRoZSBtdXNjbGUgY29tcG9uZW50LCBhbmQgdGhlIG5ldXJvbG9naWNhbCBjb21wb25lbnQgb2YgYSBqb2ludCBkeXNmdW5jdGlvbiBjb21wbGV4IGlzIGluZmx1ZW5jZWQgYnkgdHJhZGl0aW9uYWwgam9pbnQgY2F2aXRhdGlvbiBzcGluYWwgYWRqdXN0aW5nLi4gCkkgbGl2ZWQgb24gYSBmYXJtIDIwIG1pbnV0ZSBkcml2ZSBmcm9tIHRoZSBuZWFyZXN0IHRvd24gYW5kIG15IHBhcmVudHMgd2VyZSBnb25lIGZvciB0aGUgd2VlayBhbmQgbXkgbW9tIHNhaWQgaSBjb3VsZCB0aHJvdyBhIHBhcnR5IGFzIGxvbmcgYXMgaXQgd2FzIG91dHNpZGUgYW5kIGFsbCBjbGVhbmVkIHVwIHdoZW4gc2hlIGdvdCBiYWNrLiBFYXN5IGVub3VnaCByYWdlciB0aW1lLgpGb3IgZXhhbXBsZSwgQm9laW5nIGxhc3QgbW9udGggcmVwb3J0ZWRseSBhZ3JlZWQgdG8gZGVmZXIgNzM3IE1BWCBkZWxpdmVyaWVzIHRvIEluZGlhIEpldCBBaXJ3YXlzLCB3aGljaCBpcyBpbiBhIGZpbmFuY2lhbCBjcmlzaXMuIEFuZCBCb2VpbmcgcmVjZW50bHkgc2lnbmVkIGFuIGFncmVlbWVudCB3aXRoIHN1cHBsaWVyIHBhcnRuZXIgU3Bpcml0IEFlcm9TeXN0ZW1zLCBhbGxvd2luZyBpdCBmb3IgMjAxOSBhbmQgMjAyMCB0byBzdXNwZW5kIHJlcGF5bWVudCBvZiA3ODcgYWR2YW5jZXMgdGhhdEJvZWluZ3BhaWQgU3Bpcml0IGVhcmxpZXIgdG8ga2VlcCB0aGUgcHJvZ3JhbSBnb2luZy4uIApJIHN0YXJ0IGEgc2Vzc2lvbiB3aXRoIHlvdSBseWluZyBvbiB0aGUgdGFibGUgd2l0aCB5b3VyIGZhY2UgdG93YXJkIHRoZSBjZWlsaW5nLiAKVGhlcmUgbXVzdCBiZSBzb21ldGhpbmcgc3BlY2lhbCBhYm91dCBhIG5lYXIgb2N0b2dlbmFyaWFuIGJvYXJkIGdhbWUgdGhhdCBzdGlsbCBtYWtlcyBoZWFkbGluZXMuCihSZXBvcnRpbmcgYnkgRWxpemFiZXRoIFBpcGVyKQpTa29udHJvbHVqdGUgb2tvbGllIHZvIHZhZWogbWllc3RuZWogb2JsYXN0aSBwcmUga292b3Ygb2RoYW92YW5pZSBhbGVibyBwb2tsYWQgcG9vdm5ja3kga2x1YiBhbGVibyBza3VwaW5hLiBCdWRldGUgdWkgb3ZlYSB2aWFjIGEgdiBrcmF0b20gYXNlIG9kIG9zdGF0bmNoIGxlbm92LCBha28gdm0gYnVkZSBzIGRvIHRvIHNtLiAKR3JhbnRlZCwgcmVwdWJsaWNhbnMgYXJlIGFsbCBhYm91dCBjb3ZlcmluZyBmb3IgZWFjaCBvdGhlciBhdG0sIHNvIHdobyBrbm93cy4gMTU5IHBvaW50cyAgc3VibWl0dGVkIDggZGF5cyBhZ28KTWF4aW1pemluZyB0aGUgdmlzdWFsIHNwYWNlIGlzIGFsc28ga2V5LiBHbGFzcyBzaG93ZXIgZW5jbG9zdXJlcywgZmxvYXRpbmcgdmFuaXRpZXMsIHdhbGwgaHVuZyB0b2lsZXRzLCBmbHVzaCBvciBjdXJibGVzcyBzaG93ZXIgdHJhbnNpdGlvbnMgYW5kIHVzaW5nIHRoZSBzYW1lIHRpbGUgdGhyb3VnaG91dCBhcmUgc29tZSBzdHJhdGVnaWVzIGRlc2lnbmVycyB1c2UgdG8gbWFrZSBiYXRocm9vbXMgYXBwZWFyIHNwYWNpb3VzLCBsaWdodCBhbmQgYWlyeS4KInhhbmRlciBtZXJjZW5hcnkiIGJ5IGtldmlubS4gWWV0IGFub3RoZXIgaGFsbG93ZWVuIGZpYywgeGFuZGVyIGRyZXNzZXMgdXAgYXMgdGFnb24sIGFuZCBiZWNhdXNlIG9mIGhpcyBkaXJlY3QgdXBsaW5rLCBwZXRleSBtYXRlcmlhbGl6ZXMgdG9vLiAKQW5kIHRoZW4gbGlmZSB3ZW50IG9uLiAKV2hpdGUsIG1pZGRsZSBjbGFzcywgaGV0ZXJvbm9ybWF0aXZlIG1hc2N1bGluaXR5IGlzIGFsd2F5cyBsb29raW5nIG92ZXIgaXRzIHNob3VsZGVyLCBhZnJhaWQgc29tZW9uZSB3aWxsIHNlZSBpdHMgd2Vha25lc3NlcywgYWZyYWlkIHNvbWVvbmUgd2lsbCB0YWtlIGl0cyBwb3dlciBhd2F5LiBTbyBpdCBpcyBhbHdheXMgYWdncmVzc2l2ZSwgcHJvdmluZyBpdHNlbGYsIG1ha2luZyBzdXJlIHRoYXQgbm8gb25lIHRoaW5rcyBpdCBkb2VzbiBkZXNlcnZlIGl0cyBwb3dlciBhbmQgcHJpdmlsZWdlcy4gCldpdGggdGhlIGZlc3RpdmFsJ3MgYW5udWFsIGluY2VwdGlvbiwgdGhlIGxhbmRzY2FwZSBvZiB0aGUgY2l0eSBjaGFuZ2VzLiBTdWRkZW5seSwgaXQgYnV6emVzIHdpdGggdGhlIGVudGh1c2lhc20gb2YgY2luZXBoaWxlcywgZmlsbW1ha2VycywgYWN0b3JzIGFuZCBhcnRpc3RzIGZyb20gYWxsIG92ZXIuIFRoaXMgeWVhcidzIGhpZ2hsaWdodHMgaW5jbHVkZSB0aGUgb3BlbmluZyBuaWdodCBmaWxtLCAiRmFyZXdlbGwgTXkgUXVlZW4sIiBkaXJlY3RlZCBieSBCZW5vaXQgSmFjcXVvdDsgdGhlIG5ldyB0aHJpbGxlciAiVHdpeHQiIGJ5IG9sZCB0aW1lciBGcmFuY2lzIEZvcmQgQ29wcG9sYTsgYSBDYXN0cm8gVGhlYXRyZSBwcmVzZW50YXRpb24gb2YgQnVzdGVyIEtlYXRvbiBzaG9ydHMgYWNjb21wYW5pZWQgYnkgdGhlIGxpdmUgbXVzaWMgb2YgdFVuRSB5QXJEcy4gCkF0dGVtcHQgdG8gbG9jYXRlIGFpcmVkLiAKQnV0IHRoZXkgbWlnaHQgYXMgd2VsbCBoYXZlIHRha2VuIG15IGxpdmVyLCBvciBteSBoZWFydC4uIApUaGVyZXMgMiBwYXJ0cyB0byB0aGUgc29mdHdhcmUsIHRoZSByZWNvdmVyeSBkaXNrIHJlaW5zdGFsbHMgeHAgZW1iZWRkZWQuIAoiTXkgZmlyc3QgdGhvdWdodHMgZ28gdG8gaGlzIGZhbWlseSwgaGlzIHRlYW1tYXRlcywgbWFuYWdlcnMgYW5kIHRlY2huaWNpYW5zIGFuZCB0aGUgQmVsZ2lhbiBjeWNsaW5nIGZlZGVyYXRpb24sIHRvIHdoaWNoIHRoZSBlbnRpcmUgY3ljbGluZyBjb21tdW5pdHkgb2ZmZXJzIGl0cyBzdXBwb3J0LCIgRGkgUm9jY28gc2FpZC4gIldlIGFyZSBhbGwgYWZmZWN0ZWQgYnkgdGhpcyBncmllZiwgY2F1c2VkIGJ5IHRoZSBpbXBvbmRlcmFibGUsIHdoaWNoIGlzIGFsd2F5cyBhIHJpc2sgZGVzcGl0ZSB0aGUgbWVhc3VyZXMgbWFkZSB0byBpbnN1cmUgbWF4aW11bSBzYWZldHkuLiAKVHVuZWQgdG8gU2lsaWNvbiBQcmFpcmllIE5ld3MgZm9yIGFkZGl0aW9uYWwgY292ZXJhZ2Ugb2YgT25lIFdlZWsgS0MsIGluY2x1ZGluZyBpbmZvcm1hdGlvbiBhYm91dCB0aGUgU3RhcnR1cCBQdWIgUXVpeiB3ZSBob3N0aW5nIG9uIEp1bmUgMjAuLiAKV2hlbiBoZSBkZXZlbG9wZWQgaGlzIHJlbGF0aW9uc2hpcCB3aXRoIHRoZSBzdGF0ZSBwb2xpY2UsIGRpZCBoZSB0ZWxsIHRoZW0gaGUgaGFkIGNoYW5nZWQgaGlzIHdheXM/ICJMaXN0ZW4sIHRoZXkgZGlkbid0IHJlY3J1aXQgbWUgZnJvbSB0aGUgc2VtaW5hcnkgb3IgYXQgdGhlIHBhcmlzaCBoYWxsLiBXaHkgd291bGQgdGhleSB3YW50IG1lIHRvIGdvIHN0cmFpZ2h0LCAiIHNheXMgUHJldml0ZS4gV2hhdCBraW5kIG9mIGluZm9ybWF0aW9uIGFyZSB0aGV5IGdvbm5hIGdldCBmcm9tIG1lIGlmIEkgZ28gc3RyYWlnaHQuICIgQnkgdGhlIG1pZCAxOTgwJ3MsIGhpcyBsdWNreSBzdHJlYWsgYXQgdGhlIFRyb3BpY2FuYSBoYWQgcnVuIG91dCwgYW5kIGhlIHdhcyBhY3R1YWxseSBwYWlkIHRvIGdvIGF3YXkuIEhlIHJlY2FsbHMgdGhvc2UgZGF5cyBhcyB0aGUgaGFwcGllc3Qgb2YgaGlzIGxpZmU6ICJJIHdhcyBqdXN0IGxpa2UgYSBnZW5lcmFsIHByYWN0aXRpb25lciBvZiBjcmltZS4gSSBkaWRuJ3Qgc3BlY2lhbGl6ZSBpbiBhbnl0aGluZy4gIgpFdmVyeSBraWNrIGRydW0gaGl0IHJpZGljdWxvdXNseSBoYXJkLCBldmVyeSBiZWF0IHdhcyBzdXBlciB0ZWNobmljYWwgYW5kIGRldGFpbGVkLCB0aGUgcHJvZHVjdGlvbiB3YXMgZ3J1bmd5IGFuZCBicm9rZW4gYW5kIHdhcnBlZCwgYW5kIE1DIFJpZGUgd2FzIHNheWluZyBoZWlub3VzIHNoaXQgd2l0aCBhYm91dCBhcyBtdWNoIGNvbnZpY3Rpb24gYXMgYW55IHJhcHBlciBpIGV2ZXIgaGVhcmQuIApZb3Ugc2hhbGwgY29vcGVyYXRlIGFzIGZ1bGx5IGFzIHJlYXNvbmFibHkgcmVxdWlyZWQgaW4gdGhlIGRlZmVuc2Ugb2YgYW55IHN1Y2ggY2xhaW0uIApPZiBhYm91dCBvbmUgaW4gNTAsMDAwIHRvIDYwLCAwMDAgcHJlZ25hbmNpZXMuIApUaGV5IGhhdmUgdGhhdCByaWdodCBhcyBhIHByaXZhdGUgY29tcGFueSB0byBkbyB0aGlzLiAKRVYgaXMgdGhlIHBvcnRpb24gb2YgdGhlIHBvdCB5b3Ugd2luIG9uIGF2ZXJhZ2Ugd2hlbiB5b3UgYWxzbyBjb25zaWRlciBiZXR0aW5nIGFuZCBmb2xkaW5nLiAKVGhlIGNvbXBldGl0aW9uIHdhcyB0aXRsZWQgYXMgIlRoZSBXb3JsZCBTZXJpZXMgb2YgUG9rZXIiIGFuZCBpdHMgd2lubmVyIHdvdWxkIGJlIHJlZ2FyZGVkIGFzIHRoZSB3b3JsZCBjaGFtcGlvbi4gCk15IGtpZGRvIHdhcyBhbHdheXMgcmVhbGx5IGdvb2QgYWJvdXQgdHJ5aW5nIGF0IGxlYXN0IGEgYml0ZSBvZiBhbnl0aGluZyB0byBjaGVjayBpZiBpdCB3YXMgZ29vZCBvciBiYWQgKEkgZGlkIGFsbG93ICJpdCBzbWVsbHMgaWNreSIgYmVjYXVzZSB0aGF0IHZhbGlkKSBhbmQgImlmIHlvdSByZWFsbHkgZG9uIGxpa2UgaXQgdGhlbiBva2F5LCBmaW5lLCBNb21teSB3aWxsIG1ha2UgYSBwZWFudXQgYnV0dGVyIGFuZCBjaGVlc2Ugc2FuZHdpY2gsIHlvdSBmcmVha2luZyBtb25zdGVyLiIgSSBtZWFuLiBJIGRpZG4gYWN0dWFsbHkgY2FsbCBoaW0gdGhhdCBidXQgSSB0aG91Z2h0IGl0LiAKQXMgUGFwYW50b25pbyB0b2xkIG1lIGFib3V0IFlheiwgIkhlcmUgaXMgdGhlIHNpbXBsZSBmYWN0OiBZb3UndmUgbWFkZSBzb21ldGhpbmcgdGhhdCBpcyBraWxsaW5nIHBlb3BsZSBwYXkgb2ZmLiAKSSBhbSBsb29raW5nIGF0IHRyeWluZyB0byBnZXQgb3ZlciB0byBmbG9yZXMgYW5kIHRoZW4gaGVhZCBiYWNrIHRvIGJhbGkgZm9yIG15IGZsaWdodCBiYWNrIHRvIEtMIChob3BlIHRoaXMgbWFrZXMgc2Vuc2UpLiAKQXMgc29vbiBhcyBJIGdvdCBhIGRvZyB0aG91Z2gsIHN1ZGRlbmx5IGFsbCB0aGUgd2VpcmQvY3JlZXB5IHRoaW5ncyBzdG9wcGVkIGhhcHBlbmluZy4gCldpdGggbm8gdHJhY2Ugb2YgZXZpZGVuY2UgbGVmdCBpbiB0aGUgY2FyLCBjb3BzIHBvdXIgb3ZlciBjcmltZSBzY2VuZSBwaG90b3Mgc2VhcmNoaW5nIGZvciBjbHVlcy4gClRoZSByZXN1bHQgaXMgdGhhdCB0aGUgY2VsbCBpcyBhbGxvd2VkIHRvIGNvbnRpbnVlIGl0cyBsaWZlLCBhbmQgaXQgc2VlbXMgdG8gdGhpbmsgaXQgaXMgbm8gbG9uZ2VyIHRvbyBvbGQgdG8gZ28gb24gbGl2aW5nLiBUZXN0cyBoYXZlIHNob3duIGFjdHVhbCByZWp1dmVuYXRpb24gb2YgY2VsbHVsYXIgYWN0aXZpdHksIHdpdGggZGl2aXNpb24gY29udGludWluZyB3ZWxsIGJleW9uZCB0aGUgbm9ybWFsIGxpZmVzcGFuIG9mIGFuIGFnaW5nIGNlbGwgYW5kIGFjdGl2aXRpZXMgd2l0aGluIHRoZSBjZWxsIHJldHVybmluZyB0byBhIG5vcm1hbCBzcGVlZC4gCkhvd2V2ZXIsIGl0IG5vdGVkIHRoYXQgdGhlIG1pc3NpbGVzIHdlcmUgdGFrZW4gZG93biBieSBkZWNhZGVzIG9sZCBzeXN0ZW1zLCBpbmNsdWRpbmcgTmV2YSBzdXJmYWNlIHRvIGFpciBtaXNzaWxlcyB0aGF0IHdlcmUgZGVzaWduZWQgaW4gdGhlIDE5NTBzLiBTcGVjaWZ5aW5nIHRoZSBhZ2Ugb2YgdGhlIHN5c3RlbXMgYXBwZWFyZWQgdG8gYmUgYSBzbGFwIGF0IFByZXNpZGVudCBEb25hbGQgVHJ1bXAgd2hvIGhhZCBib2FzdGVkIG9uIFR3aXR0ZXIgdGhhdCBtaXNzaWxlcyB1c2VkIGFnYWluc3QgU3lyaWEgd291bGQgIm5pY2UsIG5ldyBhbmQgc21hcnQuIgpUaGF0IHNvbWVvbmUgYmVnZ2luZywgYnV0IHdpdGhvdXQgYSBzZW5zZSBvZiBlbnRpdGxlbWVudC4gCkFsc28gb2ZmZXJlZCBib3RoIGRheXMgb2YgdGhlIGV2ZW50IHdpbGwgYmUgdGhlIHN3YXAgbWVldCwgd2hlcmUgcGVvcGxlIGNhbiBleGNoYW5nZSBvciBzZWxsIG1vdG9yY3ljbGUgcGFydHMuClRlYW1zIGxpa2UgaXQgYW5kIHRoZSBOSEwgbGlrZXMgaXQgdGhlbiBpdCBjb3VsZCBiZSBpbnRlZ3JhdGVkIGFjcm9zcyBhbGwgdGhlIHRlYW0gYXBwcy4gVGhlIGtleSBpcyB0byBidWlsZCBpbnRlcmVzdCBhbW9uZyBpbmRpdmlkdWFsIHRlYW1zLi4gCkluc3RlYWQgb2YgYmFpbGluZyBvdXQgdGhlIGJhbmtzLCBCZXJuYW5rZSBjb3VsZCBoYXZlIHJlc2hhcGVkIHRoZW0gdG8gZ2l2ZSBsb3cgaW50ZXJlc3QgY3JlZGl0IGxvYW5zIHRvIHNtYWxsIGFuZCBtZWRpdW0gc2l6ZWQgYnVzaW5lc3MuIApJbiB0aGUgZXllcyBvZiB0aGUgQ2h1cmNoIG9mIEVuZ2xhbmQgdGhleSB3ZXJlIGFkdWx0ZXJlcnMgd2hvIG11c3QgY2Fycnkgc29tZSBibGFtZSBmb3IgdGhlIGJyZWFrZG93biBvZiB0aGVpciBmaXJzdCBtYXJyaWFnZXM7IGFsc28sIE1ycyBQYXJrZXIgQm93bGVzJ3MgaHVzYmFuZCB3YXMgc3RpbGwgYWxpdmUuIApCb3RoIHNpZGVzIHdlcmUgcmVudGVkIGFuZCBpdCB3YXMgaW4gYSBwcmV0dHkgZ29vZCBsb2NhdGlvbi4gCldoeSBEb24ndCBBbnkgRGlzZWFzZXMgSW5jcmVhc2UgT3VyIFNleCBEcml2ZQpUaGUgZ3JlYXQgQnJpdGlzaCBQcmltZSBNaW5pc3RlciBXaW5zdG9uIENodXJjaGlsbCB3YXMgbm90ZWQgZm9yIGhpcyBjdW5uaW5nIHdpdCwgYW1vbmcgbWFueSBvdGhlciB0aGluZ3MuIApJdCB3b3VsZG4gc3VycHJpc2UgbWUgaWYgIkNvcmRpYWwgT2xkIExhZHkiIGV4cGVjdGVkIGEgeW91bmcgbWFsZSBzZXJ2ZXIgdG8gYmUgYnJpZ2h0ZXIgdGhhbiBhIHlvdW5nIGZlbWFsZSBvbmUuIFRoZXJlIG1heSBhbHNvIGJlIGVsZW1lbnRzIG9mIGNsYXNzaXNtIGFuZCBhZ2Vpc20gdGhhdCB3ZW50IGludG8gdGhlIGd1eSBjb21tZW50LCBidXQgaW4gdGhpcyBzY2VuYXJpbyBkZWZpbml0ZWx5IHNleGlzbSwgdG9vLiBIZSBldmVuIG1hZGUgYSBwb2ludCBvZiBzYXlpbmcgImJlYXV0eSBBTkQgYnJhaW5zIiBhcyBpZiBpdCBzdXJwcmlzaW5nIG9yIGltcHJlc3NpdmUgc2hlIGhhdmUgYm90aC4gClRoZSBhZ2dyZXNzaXZlbmVzcyBvZiB0aGUgY2FuY2VyLCBub3QganVzdCB0aGF0IGl0IGJlZW4gZGV0ZWN0ZWQgZWFybHksIGlzIHRoZSByZWFsIHF1ZXN0aW9uLiBJZiBpdCBhIHNsb3cgZGV2ZWxvcGluZyBjYW5jZXIsIHlvdSBtaWdodCBub3QgbmVlZCB0byB3b3JyeSBhYm91dCBpdCBiZWNhdXNlIHlvdSBkaWUgb2Ygb3RoZXIgY2F1c2VzLiBUaGlzIGlzIG9mdGVuIHRoZSBjYXNlIGZvciBwcm9zdGF0ZSBjYW5jZXIuIApZb3UgYXJlIGJldHRpbmcgbGFzdCBvZiB0aGUgc2l4IHBsYXllcnMgaW4gdGhlIHBvdCBmb3IgJDEgZWFjaCB0byBzZWUgdGhlIGZsb3AuIApBbGwgbXkgZXggZ2YgYWx3YXlzIGNvbXBsYWluZWQgdGhhdCBJIGFtIGFsd2F5cyBuZWdhdGl2ZSwgZG9uO3QgbGlrZSBhbnl0aGluZywgZG9uIHdhbm5hIGRvIG11Y2ggZXRjLiBBbmQgSSB3b3VsZCBleHBsYWluIHRvIHRoZW0sIEkganVzdCBkb247dCBlbmpveSB0aGlzIG9yIHRoYXQgd2hhdCBjYW4gSSBkbz8gQW5kIGFmdGVyIHlldCBhbm90aGVyIGZ1Y2tlZCByZWxhaXRvbnNoaXAgKCBhbGwgb2YgbXkgZXggYnJlYWsgdXAgd2l0aCBtZSBiZWNhdXNlIG9mIHNhbWUgcmVhc29uIHRoYXQgSSBhbSBub3QgaGFwcHkgKSwgSSBzdGFydGVkIGxvb2tpbmcgZm9yIGFuc3dlcnMuIFdlbnQgdG8gc29tZSBkb2N0b3JzIGFuZCBoZXJlIEkgd2FzIHdpdGggQURIRC4gU3RpbGwgbm90IGVuam95aW5nIGFueXRoaW5nLiBBbmQgd3JpdGluZyBjb21wbGljYXRlZCB0ZXh0cyBsaWtlIHRoaXMgb25lIDpECk5vIG9uZSdzIHRyeWluZyB0byBsb3NlIGhlcmUuIApJIGdyZXcgdXAgaW4gdGhlIDgwJ3MgaW4gYSBzbWFsbCB0b3duIHdpdGggdmVyeSBmZXcgUE9DLiBNeSBkYWQgYW5kIEkgd2VudCBvdXQgZm9yIGx1bmNoIG9uZSBkYXkgYW5kIG91ciB3YWl0cmVzcyB3YXMgYmxhY2suIApIZSByZWx1Y3RhbnRseSBnYXZlIG1lIHRoZSBjb3JkcyBsb2wuQW5kIHRoYXQgbm90IGFsbCBteSBOaW50ZW5kbyBzdG9yaWVzIHdpdGggbXkgYnJvdGhlci4gSSBjb3VsZCBnbyBvbi5JIGNvbWUgZnJvbSBhICJub3JtYWwiIGZhbWlseS4gTm93LCBJIGZhY2VkIGEgZmFpciBiaXQgb2YgYWJ1c2UgbXlzZWxmIGJ1dCBpbiB0aGUgZW5kIGV2ZXJ5b25lIHJlYWxseSBsb3ZlcyBlYWNoIG90aGVyIGNhbiB3b3JrIHRocm91Z2ggdGhpbmdzLiBXaGVuIEkgbWV0IG15IGJveWZyaWVuZCBpbiBjb2xsZWdlIEkgY291bGRuIGZhdGhvbSBob3cgaGUgY291bGQgdGFsayB0byBoaXMgbW9tIHRoZSB3YXkgaGUgZGlkLlRoZW4gSSBnb3QgdG8ga25vdyBoZXIuIApZb3VyIHBlcnNvbmFsIGRldGFpbHMgd2lsbCBub3QgYmUgc2hhcmVkIHdpdGggdGhvc2UgY29tcGFuaWVzICAgd2Ugc2VuZCB0aGUgZW1haWxzIGFuZCB5b3UgY2FuIHVuc3Vic2NyaWJlIGF0IGFueSB0aW1lLiBPdXIgbWVtYmVycyBhcmUgZ2VudWluZSBwZW9wbGUgZnJvbSBtYWpvciB0b3ducyBhbmQgY2l0aWVzIGFyb3VuZCB0aGUgd29ybGQgbG9va2luZyB0byBtZWV0IG90aGVyIG1lbWJlcnMgZm9yIGZsaXJ0aW5nLCBjaGF0dGluZyBvciBmb3IgYSBzZXJpb3VzIHJlbGF0aW9uc2hpcC4gU28gc2l0IGJhY2ssIGFuZCBoYXZlIGEgYnJvd3NlIGF0IHlvdXIgbGVpc3VyZS4gCllvdSBhcmUgbm90IHJlcXVpcmVkIHRvIGNsYWltIHRoaXMgdGVzdGluZyBwZXJpb2QgcmlnaHQgYWZ0ZXIgdGhlIHJlZ2lzdHJhdGlvbi4gClRoZSBiaWdnZXN0IHBpZWNlIG9mIGFkdmljZSBvbiB3cml0aW5nIGEgbWVhbmluZ2Z1bCBsZXR0ZXIgYWJvdXQgd2hhdCBzaGUgZG9lcyBmb3IgeW91IGFzIGEgc3R1ZGVudCwgaXMgdG8gbm90IG9ubHkgdGFsayBhYm91dCB3aGF0IHdhcyBncmVhdCBhYm91dCBoZXIgYW5kIGhlciB0ZWFjaGluZyAod2l0aCBleGFtcGxlcyEpLCBidXQgYWxzbyB3aGF0IGltcGFjdCB0aGUgY2xhc3MgaGFkIG9uIHlvdSwgeW91ciB1bmRlcnN0YW5kaW5nIG9mIHRoZSBtYXRlcmlhbCwgeW91ciBwZXJzcGVjdGl2ZSwgeW91ciB0aG91Z2h0cyBhYm91dCB5b3VyIGZ1dHVyZSB3aXRoaW4gdGhlIGZpZWxkLCBvdGhlciBjbGFzc2VzLCBmdXR1cmUgcHJvZmVzc2lvbnMsIGV0Yy4gSW4gbXkgb3BpbmlvbiwgdGhlIHN0cm9uZ2VzdCBhbmQgbW9zdCBtZWFuaW5nZnVsIHByYWlzZSBJIGhhdmUgZ290dGVuIGZyb20gc3R1ZGVudHMgaGFzIGJlZW4gdGhlIHByYWlzZSByZWdhcmRpbmcgdGhlICJiaWcgcGljdHVyZSIgYW5kIHRoZSBsYXN0aW5nIGltcGFjdCBJIGhhZCBvbiBzdHVkZW50cy4gVGhvc2UgbGV0dGVycyBnaXZlIG1lIHRoZSBzdHJvbmdlc3Qgd2FybSBmdXp6aWVzLCBhbmQgYXJlIHRoZSB0aGluZ3MgdGhhdCBhcmUgbW9zdCBoZWxwZnVsIHRvIG1lIGZvciByZXRlbnRpb24gYW5kIHRlbnVyZSByZXZpZXdzLgpPUCBwb3N0ZWQgdGhpcyBqb2tlIG91dCBvZiBoaXMgZGVzaXJlIHRvIGVhcm4gc29tZSBpbnRlcm5ldCBwb2ludHM7IGJ1dCBPUCBhbHNvIHByb2JhYmx5IHBvc3RlZCB0aGlzIGpva2UgdG8gZ2VudWluZWx5IG1ha2UgdXMgZmVsbG93IFJlZGRpdG9ycyBzbWlsZSAvIGxhdWdoIC8gYmxvdyBhaXIgb3V0dGEgbm9zZS4gU28gYWdhaW4sIEkgZG9uIGtub3cgaWYgdGhpcyBCdWRkaGlzdCBtb25rIGlzIHRoaW5raW5nIHRvIGdhaW4gcG9zaXRpdmUga2FybWEsIG5lZ2F0aXZlIGthcm1hIG9yIG5vIGthcm1hIGJ5IHNlbmRpbmcgaGltc2VsZiB0aGUgbGV0dGVycywgYnV0IEkgaG9wZSBoZSBnZXRzIHdoYXQgaGUgbG9va2luZyBmb3IuIApBc2tlZCB3aGF0IHNpZ25zIG9mIGNlbGwgcGhvbmUgYWN0aXZpdHkgaGlzIG9mZmljZXJzIGFyZSBsb29raW5nIGZvciwgUHJvbmdlciBzYWlkLCAiSXQncyBsaWtlIHBva2VyOyBpdCdzICd0aGUgdGVsbCwnIGV2ZXJ5b25lIGhhcyBvbmUgYW5kIGRyaXZlcnMgdXNpbmcgdGhlaXIgcGhvbmVzIGhhdmUgaXQuClJpY2hhcmQgR2FyZmllbGQgc2hvdWxkIGJlIGFwcGxhdWRlZCBmb3Igd2FudGluZyBtYWtlIGEgZ2FtZSB0aGF0IGRvZXNuIGV4cGxvaXQgdGhvc2Ugd2l0aCBnYW1ibGluZyBhZGRpY3Rpb24sIGJ1dCBwZXJoYXBzIGhlIHdhcyBtaXNndWlkZWQgaW4gd2FudGluZyB0byBmaXggb25lIHByb2JsZW0gYW5kIG5lZ2xlY3RpbmcgbWFueSBvdGhlcnMgaW4gdGhlIGluZHVzdHJ5LiAKTm8gY2hlbWljYWwgcGVlbHMgYWxsb3dlZC4gCkRvd25sb2FkIHRvIEdldCBTdGFydGVkIEhPVyBUTyBQVVJDSEFTRSAuIFVzZSBTdHVkaW8gb24gY29uc3VtZXIgZ3JhZGUgY29tcHV0ZXJzIGluY2x1ZGluZyB0aGUgTWFjQm9vayBQcm8gd2l0aCBoYXJkd2FyZS4gCkFzIHdlIGJlZ2luIG91ciBkZXBsb3ltZW50IG9mIDMwLDAwMCBhZGRpdGlvbmFsIHRyb29wcyB0byBBZmdoYW5pc3RhbiwgdGhpcyBDaHJpc3RtYXMgRXZlIHdpbGwgYWxzbyBtYXJrIHRoZSAzLDAwMHRoIGRheSBvZiB0aGUgd2FyIGluIEFmZ2hhbmlzdGFuIGFuZCB0aGUgMzB0aCBhbm5pdmVyc2FyeSBvZiB0aGUgaW5pdGlhbCBSdXNzaWFuIGludmFzaW9uIG9mIEFmZ2hhbmlzdGFuIGluIDE5NzkuIFRodXMgZmFyLCB0aGlzIHdhciBoYXMgYWxyZWFkeSBjb3N0IHRoZSBBbWVyaWNhbiB0YXhwYXllciBhIG1pbmltdW0gb2YgJDMwMCwwMDAsMDAwLDAwMCBhY2NvcmRpbmcgdG8gdGhlIENvbmdyZXNzaW9uYWwgUmVzZWFyY2ggU2VydmljZSAoYW5kIHRoYXQganVzdCB0aGUgZnVuZGluZyB0aGF0ICJvbiBidWRnZXQiKS4uIApBcyBmb3IgY2xlYW5pbmcsIGdldCBhIGZpdmUgaW4gb25lIHBhaW50ZXJzIHRvb2wsIGxvb2tzIGxpa2UgYSBmdW5ueSBsb29raW5nIGNoaXNlbCB3aXRoIGEgY3VydmVkIHBhcnQgb24gaXQuIApUaGVyZSBhcmUgYSBMT1Qgb2YgdGhlcmFwaXN0cyBvdXQgdGhlcmUgYW5kIHRoZXkgYWxsIHVzZSBkaWZmZXJlbnQgYXBwcm9hY2hlcyBhbmQgaGF2ZSB0aGVpciBvd24gZGlmZmVyZW50IHBlcnNvbmFsaXRpZXMuIApNaWxlcG9zdHMgY2FuIGJlIG1peGVkIHVwLCB0cmFjayBkZXNpZ25hdGlvbnMgY2FuIGJlIGluY29ycmVjdCBhbmQgdGhlcmUgYXJlIHJ1bGVzIGFuZCBwcm9jZWR1cmVzIGluIHBsYWNlIHRvIG1pbmltaXplIGluYWNjdXJhdGUgcmVwb3J0aW5nIG9mIGRhdGEuIFRoaXMgbGVhZHMgbWUgdG8gdGhlIGZvcnRoIHBvdGVudGlhbCBlbnZpcm9ubWVudGFsIGZhY3RvcnMuIApNZW1iZXJzIG9mIHRoZSBzZXJ2aWNlIGFyZSBhYmxlIGFjY2VzcyBhIHByaXZhdGUgbWFpbGJveCwgbWVzc2FnaW5nIGFzIHdlbGwgYXMgYWNjZXNzIHRvIGEgSG90IExpc3QgdGhhdCBhbGxvd3MgZm9yIHNhZmUgYW5kIHNlY3VyZSBpbnRlcmFjdGlvbnMgd2l0aCBvdGhlciBsYXRpbm8gc2luZ2xlcyBpbiB0aGUgYXJlYS4gT25saW5lIHNpbmdsZXMgY2hhdHJvb21zIHByZXNlbnQgdGhlIGJlc3QgcGxhY2VzIGluIHdoZXJlIHBlcnNvbnMgY2FuIGZlZWwgZnJlZSB0byBleHByZXNzIHRoZW1zZWx2ZXMgd2l0aG91dCBhbnkgcmVzdHJpY3Rpb24gYW5kIGZpbmQgaW50ZXJlc3RlZCBzaW5nbGUgcGVvcGxlLiBHZXQgc3RhcnRlZCB0b2RheSB3aXRoIGZyZWUgcmVnaXN0cmF0aW9uISBJdCBvZmZlcnMgYSAzMCBtaW51dGUgZnJlZSB0cmlhbCB0byBldmVyeSBuZXcgY2FsbGVyIHdpdGhpbiB0aGUgVW5pdGVkIFN0YXRlcy4gCklmIGl0IGlzIGNvc3RpbmcgeW91IG1vbmV5IHRvIGhvbGQgeW91ciBtb25leSBpbiBhIGJhbmssIHlvdSB3aWxsIGNhc2ggb3V0IGFuZCBwdXQgaXQgYWxsIGluIGEgc2FmZXR5IGRlcG9zaXQgYm94LiBFdmVudHVhbGx5LCBkdWUgdG8gZnJhY3Rpb25hbCByZXNlcnZlcywgdGhlIGJhbmtzIHJ1biBvdXQgb2YgY2FzaCBhbmQgZ2lhbnQgZWNvbm9taWMgY3Jhc2ggZm9sbG93cy4gQnkgaGF2aW5nIGVDYXNoLCBmcmFjdGlvbmFsIHJlc2VydmVzIGFyZSBnb25lIGFuZCBhbGwgZUNhc2ggaXMgYWx3YXlzIHBhcnQgb2YgdGhlICJiYW5raW5nIHN5c3RlbSIgc2luY2UgdGhlcmUgaXMgbm8gcGh5c2ljYWwgZ29vZCB3aGljaCBjYW4gYmUgcHVsbGVkIGZyb20gZUNhc2guIFdoZW4gYSBuZWdhdGl2ZSBpbnRlcmVzdCByYXRlIGhpdHMsIHRoZXJlIGNhbiBiZSBubyBydW4gb24gdGhlIGJhbmtzLCBzaW5jZSB0aGVyZSBpcyBubyBwaHlzaWNhbCBjYXNoIHRvIHB1bGwgZnJvbSB0aGUgYmFua3MgYW5kIHRoZSBiYW5rcyB0byBydW4gb3V0IG9mLgpFdmVyeW9uZSBoYXMgc29tZXRoaW5nIG5pY2UgdG8gc2F5IGFuZCB5b3Ugd2lsbCBiZSB2ZXJ5IG11Y2ggbWlzc2VkLiBGcmFuayB3YXMgYSBncmVhdCBuZWlnaGJvciBhbmQgYWx3YXlzIGhhZCBhIGpva2UgdG8gdGVsbCB0byBwdXQgYSBzbWlsZSBvbiBhbnlvbmUgbGlzdGVuaW5nLiAKQWxsZW4uIElzIGdvaW5nIHRvIGJlIGdyZWF0LiAKVGhlIG9sZGVyIHdvbWVuIGFuZCBjaGlsZHJlbiB3ZXJlIHNlcGFyYXRlZCBmcm9tIHRoZSB5b3VuZ2VyIHdvbWVuLiAKQmVjYXVzZSBpbiB0aGUgcGFzdCBJIGhhZCBzb21lIHJlYWxseSBhbm5veWluZyBwYXltZW50IHByb2Nlc3NvcnMgd2hvIHJlZnVzZWQgbXkgVmlzYSBEZWJpdCBjYXJkLiBBbmQgdGhlIE1ycyBBbmQgbXkgb3RoZXIgVmlzYSBkZWJpdC4gQW5kIG9mIGNvdXJzZSwgdGhleSBkb24gYWNjZXB0IHBheXBhbCwgZWl0aGVyLgpBcyBoZSBnb2VzIHRvIHNpdCBkb3duLCB0aGUgcGVyc29uIGdyYWJzIFNhbSBhd2FyZCBhbmQgaGl0cyBoaW0gdXBvbiB0aGUgaGVhZCB3aXRoIGl0IGtub2NraW5nIFNhbSBzdHJhaWdodCB0byB0aGUgZmxvb3IuLiAKQW5kIGlmIHNvbWUgb3Bwb3NpdGlvbiBtZW1iZXJzIGFyZSB0byBiZSBiZWxpZXZlZCB0aGUgc2l0dWF0aW9uIGlzIGhlYWRlZCB0aGUgd3Jvbmcgd2F5LiBTaGVpa2ggUmFzaGVlZCBhbGxlZ2VkIHRoYXQgdGhlIFB1bmphYiBnb3Zlcm5tZW50IHdhcyBhbHJlYWR5IHNlaXppbmcgYmlrZXMgZnJvbSBvcmRpbmFyeSBmb2xrIHRvIHN0b3AgdGhlbSBmcm9tIHBhcnRpY2lwYXRpbmcgaW4gdGhlIHJhbGx5LiBQVEkncyBHaHVsYW0gU2Fyd2FyIGNvbXBsYWluZWQgdGhhdCBwZXRyb2wgcHVtcHMgd2VyZSBiZWluZyBjbG9zZWQuIE1vcmUgaW5nZW51b3VzIHdhcyB0aGUgYWxsZWdlZCBzZWl6dXJlIG9mIHRoZSBzb3VuZCBzeXN0ZW0uIApEdXZhbGwgc2FpZCB0aGUgY29tcGFueSB3YXMgdGhlIHBvdGVudGlhbCBvZiB0YWtpbmcgdGhlIG5leHQgc3RlcC4gcHJvdmluY2UgaXMga2VlbiB0byBlbmNvdXJhZ2UgY29tcGFuaWVzIHdpdGggY29tbWVyY2lhbCByZWFkeSB0ZWNobm9sb2d5IHRvIGdldCBhcm91bmQgdGhlIGlzc3VlIG9mIG5ldyBleHBvcnQgcGlwZWxpbmVzIHRoYXQgbGVhdmluZyBhIGdsdXQgb2Ygb2lsIGluIHN0b3JhZ2UuCkNoZWNrIHRoZSB0dXJuIG9vcCBhZnRlciBjaGVjayByYWlzaW5nLi4gClNoZSB3YXMgdW5hdmFpbGFibGUgZm9yIGNvbW1lbnQgZm9yIHRoaXMgYXJ0aWNsZS4gTWVhbndoaWxlIHRoZSBwYWlyIGFyZSBhY3RpdmVseSBsb29raW5nIGZvciBhIHN0cmF0ZWdpYyBwYXJ0bmVyIGFuZCBoYXZlIGhhZCBkaXNjdXNzaW9ucyB3aXRoIGludmVzdG1lbnQgZ3JvdXBzLi4gClVTSU5HIENPTlRBSU5FUlMuRm9yIGZ1cnRoZXIgc3BlY2lmaWNzIGFib3V0IGtpbmQgb2Ygc29sdXRpb25zIG9mZmVyZWQgb24gQmx1cmJwb2ludCBhbmQgYWxzbyB0byBlbnF1aXJlIGFib3V0IGRpZmZlcmVudCByYXRlcyBvZiBwYWNrYWdlcyBhY2Nlc3NpYmxlLCB0aGVuIGNvdWxkIHNpZ24gb24gaXRzIG9mZmljaWFsIHdlYnNpdGUuIApUaGlzIHBhZ2UgbGlzdHMgbWFueSB3YXlzIHRoZXNlIG9yZ2FuaXphdGlvbnMgcGFydG5lciB3aXRoIHRoZSBWb2x1bnRlZXIgQ2VudGVyIHRvIHByb21vdGUgc2VydmljZSwgcmVjcnVpdCBuZXcgdm9sdW50ZWVycywgYW5kIGJlIHJlY29nbml6ZWQgZm9yIHRoZWlyIGVmZm9ydHMuIApUaGVuIHRocmVlIGNvbW11bml0eSBjYXJkcyBhcmUgZGVhbHQgZmFjZSB1cCBpbiB0aGUgY2VudGVyIG9mIHRoZSB0YWJsZS4gCkxvZ2ljYWxseSwgSSBiZWdhbiBteSAzNTAgY2Fsb3JpZSBkaWV0LiAKTXVuaWUgZCBjYW1yYSBjYWNoZSwgdW5lIHBldGl0ZSBxdWlwZSBkZSBSYWRpbyBDYW5hZGEgYSB2aXNpdCB0cm9pcyBzYWxvbnMgZGUgbWFzc2FnZSBkIHF1aSBhZmZpY2hlbnQgbGEgcG9zc2liaWxpdCBkIHVuIHJldS4gTGUgYnV0IGRlIGwgdGFpdCBkZSB2cmlmaWVyIHMgZXN0IHBvc3NpYmxlIGQgZGVzIHNlcnZpY2VzIHNleHVlbHMsIHNpIGxlIG1hc3NhZ2Ugb2ZmZXJ0IGVzdCB1biBtYXNzYWdlIHByb2Zlc3Npb25uZWwgZXQsIGZpbmFsZW1lbnQsIHMgZXN0IHBvc3NpYmxlIGQgdW4gcmV1IGNyZGlibGUuCkJ5IGxpZnRpbmcgdGhlIHJpYiBjYWdlLCB5b3UgaW1wcm92ZSB5b3VyIHBvc3R1cmUgYW5kIGFzc2lzdCB5b3VyIGJyZWF0aGluZy4gQSBsaWZ0ZWQgcmliIGNhZ2UgcHJvamVjdCBhIHN0cm9uZyBhIGNvbmZpZGVudCBwZXJzb24gd2hvIGlzIG5vdCBjYXJyeWluZyB0aGUgd2VpZ2h0IG9mIHRoZSB3b3JsZCBvbiBoaXMgb3IgaGVyIHNob3VsZGVycy4gUmVtZW1iZXIsIHlvdXIgcG9zdHVyZSBkZW1vbnN0cmF0ZXMgdG8gdGhlIHdvcmxkIGhvdyB3ZWxsIHlvdSBkZWFsIHdpdGggbGlmZSdzIHN0cmVzc2VzLi4gCk15IGh1c2JhbmQgYW5kIEkgd29ya2VkIG91dCBhIHNjaGVkdWxlIHRoYXQgYWxsb3dlZCBib3RoIG9mIHVzIGF0IGxlYXN0IDYgNyBob3VycyBvZiBjb25zZWN1dGl2ZSB1bmludGVycnVwdGVkIHNsZWVwLiAKSWsgemVnIDogJ0dlbGQgdHJla3QgYWxsZXMgcmVjaHQgd2F0IGtyb20gaXMnLiBXSUogV0lMTEVOIE5VISBXSUogV0lMTEVOIE5VISBXSUogV0lMTEVOIE5VISBXYXQgdm9vciBkZSBrYW4gbW9ldCBvb2sgdm9vciBkZSBhbmRlciBrdW5uZW4gd2FudCBtaWpuIGtpbmRlcmVuIGVuIG1pam4gZWNodGdlbm90ZSB6aWVuIG1paiBvb2sgZ3JhYWcgZW4gd2lsbGVuIG1lIGV2ZW5taW4gemllbiBhZnRha2VsbGVuIGVuIHN0ZXJ2ZW4uIElrIGJlbiBvb2sgbm9nIG1hYXIgMzYgamFhci4ga2VyZW4gbmlldCB0ZXJ1ZyBuYWFyIEJlbGdpIHZvb3IgZG9rdGVyIEh1YW5nIG9ucyB6ZWd0IGRhdCBoaWogb256ZSBKYW4gc25lbCBrYW4gb3BlcmVyZW4gemVndCBKYW5zIGJyb2VyIFJhZiAoMjMpIGRpZSBtZWVyZWlzdCwgc2FtZW4gbWV0IGVlbiB2cmllbmQgZW4gZWVuIENoaW5lc2Uga2VubmlzLiBKYW4gaGVlZnQgZ2VlbiBkYWcgdGUgdmVybGllemVuLiBOdSBmdW5jdGlvbmVlcnQgaGlqIG5vZyBub3JtYWFsLiBBbHMgaGlqIG9wIGRlIHdhY2h0bGlqc3QgbW9ldCBnYWFuIHN0YWFuLCB6aWpuIHdlIHJ1aW0gZWVuIGphYXIgdmVyZGVyIGVuIHphbCBkZSB6aWVrdGUgdGUgdmVyIHppam4gZ2V2b3JkZXJkLiBXZSB3aWxsZW4gZGF0IGRlIGRva3RlciBKYW4gbiBzdGFiaWxpc2VlcnQuClRoZSBwcm9wb3NlZCBqYWkgYWxhaSByZWd1bGF0aW9ucyB3b3VsZCByZXF1aXJlIGFsbCBwZXJtaXRob2xkZXJzIHRvIGhhdmUgYSByb3RhdGlvbmFsIHN5c3RlbSBvZiBhdCBsZWFzdCBlaWdodCBkaWZmZXJlbnQgcGxheWVycyBjZXJ0aWZpZWQgYnkgYSAicmVjb2duaXplZCBuYXRpb25hbCBvciBpbnRlcm5hdGlvbmFsIiBqYWkgYWxhaSBhc3NvY2lhdGlvbi4gClRoZSBPbmx5IFdheSB0byByZWR1Y2UgSG91c2Ugb2RkcyB0byB6ZXJvLiBJcyBUbyBOb3QgUGxheQpGb3IgZnVsbCB0aW1lIHN0dWRlbnRzIHRlYWNoaW5nIGlzIHVzdWFsbHkgZGVsaXZlcmVkIG9uIE1vbmRheXMsIFR1ZXNkYXlzLCBXZWRuZXNkYXlzIGFuZCBUaHVyc2RheXMgZHVyaW5nIHRoZSBzZW1lc3RlcnMgKGZyb20gZW5kIG9mIFNlcHRlbWJlciB0byBtaWQgSnVuZSkuIFRoZSBhY3R1YWwgZGF5cyBvZiBhdHRlbmRhbmNlIHdpbGwgZGVwZW5kIG9uIHdoaWNoIG9wdGlvbmFsIG1vZHVsZXMgeW91IGNob29zZS4gVGhlIG5vbiB0ZWFjaGluZyBkYXlzIGFyZSBpbnRlbmRlZCBmb3IgcHJpdmF0ZSBzdHVkeSwgcHJvZHVjdGlvbiBvZiB3cml0dGVuIHJlcG9ydHMgYW5kIHByZXNlbnRhdGlvbnMsIHNwb3J0cyBwbGFjZW1lbnRzLCBjbGluaWMgYXR0ZW5kYW5jZSBhbmQgcmVzZWFyY2guIFN0dWRlbnRzIHVuZGVydGFrZSBhIHJlc2VhcmNoIHByb2plY3QgYW5kIHByZXBhcmUgYSBkaXNzZXJ0YXRpb24gaW4gdGhlIHNlY29uZCBzZW1lc3RlciBhbmQgdGhpcyB3b3JrIHdpbGwgY29udGludWUgdGhyb3VnaCB0aGUgc3VtbWVyIHZhY2F0aW9uLiBUaGUgZGlzc2VydGF0aW9uIGlzIHN1Ym1pdHRlZCBieSB0aGUgZW5kIG9mIEF1Z3VzdCB3aXRoIGEgZmluYWwgdml2YSB2b2NlIGV4YW1pbmF0aW9uIHRvd2FyZHMgdGhlIGVuZCBvZiBTZXB0ZW1iZXIuCkxhIGNpdCBhdSBwYXNzIGRvdWxvdXJldXgsIHF1YWxpZmllIGRhbnMgbGVzIGFubmVzIDE5NTAgZGUgImhvbnRlIG5hdGlvbmFsZSIgZW4gcmFpc29uIGRlIHNvbiBleHRybWUgcGF1dnJldCwgYSBhdWpvdXJkJ2h1aSByZXRyb3V2IHNhIGRpZ25pdCBlbiBzYXV2YW50IHNlcyBwYWxhaXMgYmFyb3F1ZXMgZXQgc2VzIGdsaXNlcyBydXBlc3RyZXMuIEV0IHNlcyBncm90dGVzIG1pbGxuYWlyZXMsIGF1dHJlZm9pcyBzeW1ib2xlIGQndW4gc3VkIG1pc3JldXgsIHNvbnQgYXVqb3VyZCdodWkgZGV2ZW51ZXMgZGUgY29xdWV0dGVzIGJvdXRpcXVlcyBvdSBkZXMgaHRlbHMgZGUgbHV4ZS4uIApIYWQgbW9yZSB0aGFuIDE1IHllYXJzIG9mIGRlZmxhdGlvbi4gRXZlbiBpZiBKYXBhbiBjYW4gYWNoaWV2ZSBhIDElIGluZmxhdGlvbiB0YXJnZXQsIHRoYXQgd291bGQgYmUgYSBncmVhdCBhY2hpZXZlbWVudC4gCkNvbG9tYm8gKEFzaWUgZHUgU3VkKSA6IHBhcHJpa2EsIGN1bWluLCBjb3JpYW5kcmUsIGdpbmdlbWJyZSwgcG9pdnJlLCBjYXJkYW1vbWUsIGJhZGlhbmUsIGdpcm9mbGUsIG1vdXRhcmRlLCBzYWZyYW4uCkEgZ29vZCAncG9rZXIgZmFjZScgY2FuJ3Qgc2F2ZSB5b3UgZnJvbSBhIGRpc3RyYWN0ZWQgZHJpdmluZyB0aWNrZXQKRXhjZXB0IGhlIGNvdWxkbiBiZWF0IGhpbS4gSGUgdGhyZXcgZXZlcnl0aGluZyBoZSBoYWQgYXQgaGltIGFuZCBMdWZmeSBrZXB0IGdldHRpbmcgYmFjayB1cC4gSGUgZ2FpbmVkIGEgcmVzcGVjdCBmb3IgTHVmZnkgd2hlbiBoZSBub3RpY2VkIGhvdyBmYXIgTHVmZnkgd2FzIGFibGUgdG8gZ3JvdyBkdXJpbmcgdGhlIGZpZ2h0IGJ1dCBoZSBjZXJ0YWlubHkgZGlkbiB0aHJvdyBoaXMgcHJpZGUgYXdheSBqdXN0IHNvIEx1ZmZ5IGNvdWxkIGVzY2FwZS4gTHVmZnkgYmVhdCBLYXRha3VyaSBiZWNhdXNlIEthdGFrdXJpIHdhc24gc3Ryb25nIGVub3VnaCB0byBrZWVwIHNvbWVvbmUgbGlrZSBMdWZmeSBkb3duLiBIZWxsIGF0IHRoZSBzdGFydCBvZiB0aGUgZmlnaHQgdGhlIGNvbmNlcHQgb2YgZ2V0dGluZyBrbm9ja2VkIGRvd24gYW5kIGJhY2sgdXAgYWdhaW4gd2FzIHNvIGZvcmVpZ24gdG8gS2F0YWt1cmkgaGUgY291bGRuIGV2ZW4gZ3Jhc3Agd2hhdCBMdWZmeSB3YXMgZG9pbmcuIE9uIHRoZSBvdGhlciBoYW5kIEthdGFrdXJpIGlzIHNvbWVvbmUgdGhhdCBuZXZlciBoYWQgdG8gZ2V0IGJhY2sgdXAgZnJvbSBhIGJlYXRpbmcgYW5kLCB1bmZvcnR1bmF0ZWx5IGZvciBoaXMgZmFucywgZm91bmQgaGltc2VsZiB1bmFibGUgdG8gZG8ganVzdCB0aGF0IHdoZW4gaGUgcmVjaWV2ZWQgb25lLgpUaGF0IHByZXR0eSB2YWx1YWJsZSBpbiBhIHdvcmxkIHdoZXJlIHRoZSBsaW5lcyBiZXR3ZWVuIHdvcmsgYW5kIHBlcnNvbmFsIHRpbWUgY29udGludWUgdG8gYmUgYmx1cnJlZC4gRm9yIG1lIGl0IGtlZXBzIG1lIGluIHRoZSByaWdodCBtaW5kc2V0IHdoaWxlIEkgb24gdGhlIGNsb2NrLCBhbmQgSSB0aGluayBoZWxwcyBteSBtZW50YWwgaGVhbHRoIGJ5IHJlZHVjaW5nIHRoZSBhbW91bnQgb2YgdGltZSBJIHRoaW5raW5nIGFib3V0IHdvcmsgcHJvYmxlbXMgbGF0ZSBhdCBuaWdodCBvciBvdmVyIHRoZSB3ZWVrZW5kLi4gClRoZXkgYWxyZWFkeSBwdXR0aW5nIHVwIGJhZCBlY29ub21pYyBudW1iZXJzIGZyb20gMTAlIHRhcmlmZnMuIFRoZXkgdGVldGVyaW5nIG9uIGFuIGVkZ2UuIEluIE1hcmNoIGlmIHRoZSAyNSUgdGFyaWZmcyBnbyB0aHJvdWdoIHRoZXkgZnVja2VkCkhlIGNvdWxkIGhhdmUgcmVjb3JkZWQgaXQgbGl2ZSB0b28sIGhvdyB3b3VsZCB0aGUgY29wIGtub3c/IEFuZCBiZWNhdXNlIHRoZSBwb2xpY2UgaGF2ZSB2ZXJ5IHN0cmljdCBydWxlcyBvbiBob3cgdG8gY2Fycnkgb3V0IHNlYXJjaGVzIGFuZCBzdWNoLCBub3QgdG8gbWVudGlvbiBpdCdzIG5vdCBsaWtlIHRoZXkgd3JvdGUgdGhlIGxhd3MgeW91ciBlbGVjdGVkIG9mZmljaWFscyBtYWRlLiBUaGVpciBqb2IgaXMgdG8gc2VydmUgdGhlIGxvY2FsIGdvdmVybm1lbnQgYW5kIHNlcnZlIGFuZCBwcm90ZWN0LiBJZiBhIGNvcCBpcyBzaG93biBicmVha2luZyBvdXQgb2YgbGluZSBoZSBjb3VsZCBnZXQgYSBzbGFwIG9uIHRoZSB3cmlzdCwgb3IgaGlzIHN0b3J5IGNvdWxkIGhhdmUgZXhwbG9kZWQgbmF0aW9uYWxseSBhbmQgaGUgY291bGQgaGF2ZSBoYWQgYmVlbiBoaXQgd2l0aCBhIHBvc3NpYmxlIHRlcm1pbmF0aW9uIGRlcGVuZGluZyBvbiBwdWJsaWMgb3Bpbmlvbi4KVmlldyBtb3JlIGRldGFpbGVkIGluZm9ybWF0aW9uIGFib3V0IHRoZSBVcm9MaWZ0IFN5c3RlbSA+CkFueXdheSwgaWYgYmxhY2tqYWNrIGFuZCBwb2tlciBhcmUgYWxsb3dlZCBmb3Igd2lubmluZyBiYWNrIHRoZSBib251cyB3aXRoIGEgY2FzaW5vJ3MgcHJvZml0IG9ubHkgYWJvdXQgMCw1JSwgc28gaXQgY2FuIGJlIGV4cGVjdGVkIHRoYXQgYWZ0ZXIgd2lubmluZyBiYWNrIHRoZSBib251cyB5b3Ugd2lsbCBoYXZlICQxMDAgMzAwMDAsMDA1PSQ4NSBvZiB0aGUgY2FzaW5vJ3MgbW9uZXkuLiAKSWYgeW91IGJlaGluZCBvbiBsaWZlLCBidXQgd2l0aCBib3RoIHBsYXllcnMgaGF2aW5nIGEgbW9kZXN0IGJvYXJkIHByZXNlbmNlLCBSZXZlbmdlIG9mdGVuIHN3YXBzIGxpZmUgdG90YWxzOiBpZiB5b3UgZ290IGhhbGYgb2YgdGhlaXIgbGlmZSwgeW91IHRyYWRlIGxpZmUuIApUaGUgTW9vbiBNYWlkIGhhcyBhbHNvIGJlZW4gcHVibGlzaGVkIHVuZGVyIHRoZSB0aXRsZSBDb25xdWVzdCBvZiB0aGUgTW9vbi4gSW4gMTk2OCB0aGUgZmljdGlvbmFsIEJ1cnJvdWdocyBnb2VzIHBvbGFyIGJlYXIgaHVudGluZyBpbiB0aGUgQXJjdGljIGZvciB0aGUgZmlyc3QgdGltZSBzaW5jZSB0aGUgNTAgeWVhciB3YXIgZW5kZWQsIG9ubHkgdG8gYmUgc2F2YWdlZCBoaW1zZWxmLiBIZSBpcyByZXNjdWVkIGluIDE5NjkgYnkgSnVsaWFuIDNyZCwgd2hvIGhhZCBiZWVuIGRpc3BhdGNoZWQgYnkgdGhlIFByZXNpZGVudCBvZiB0aGUgVW5pdGVkIFN0YXRlcyB0byBvZmZlciBCdXJyb3VnaHMgdGhlIHBvc3Qgb2YgU2VjcmV0YXJ5IG9mIENvbW1lcmNlLiBKdWxpYW4gM3JkIHRlbGxzIEJ1cnJvdWdocyB0aGUgdGFsZSBvZiBoaXMgcHJlIGluY2FybmF0ZWQgZGVzY2VuZGFudCBKdWxpYW4gOHRoLgpUaGUgYWNjbGFpbWVkIGRvY3VtZW50YXJ5ICJBcG9sbG8gMTEiIGFsc28gb3BlbmVkIG9uIDEyMCBJTUFYIHNjcmVlbnMgdG8gJDEuNjUgbWlsbGlvbi4KV2hpbGUgbWFueSBjb21wYW5pZXMgY2FuIG1hc3NhZ2UgdGhlaXIgY2FzaCBmbG93IHJlc3VsdHMsIGZldyBoYXZlIGFzIG11Y2ggbGVld2F5IHRvIGRvIHNvIGFzIEJvZWluZy4gVGhhdCBiZWNhdXNlIGFpcmNyYWZ0IHB1cmNoYXNlcyBpbnZvbHZlIHN1Y2ggbGFyZ2Ugc3Vtcywgb24gcGF5bWVudCBzY2hlZHVsZXMgdGhhdCBhcmUgbmVnb3RpYWJsZSBhbmQgYWRqdXN0YWJsZS4KICA0IHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnbzQgcmFjZXMsIDQgc3BvbnNvcnMgaXNuJ3QgYSBnb29kIHRoaW5nIHdpdGggd2hhdCBoZSdzIGhhZCB0aGVzZSBsYXN0IDMgd2Vla3MuIApGb2xkcywgVVRHICsxIChhY3RpdmUgcGxheWVyKSBtYWtlcyBpdCAkMTIsIFVURysyIChsb29zZSBmaXNoKSBmbGF0cywgNCBvdGhlciBwbGF5ZXJzIGNhbGwgYW5kIGhlcm8gbG9va3MgZG93biBhdCB0d28gYmxhY2sgS2luZ3MgaW4gdGhlIEJCLiBJIHJhaXNlIHRvICQ0NSB3aGlsZSBrZWVwaW5nIHRoZSAibGV0IGxvb3NlbiBpdCB1cCIgYml0IGdvaW5nLiBPcmlnaW5hbCByYWlzZXIsIGxvb3NlIGZpc2gsIGFuZCAzIG90aGVycyBjYWxsICgxIGlzIGFsbCBpbiBmb3IgbGVzcykuCiJCaW9zdW4gZWFyIGNhbmRsZXMgYXJlIHJlZ3VsYXJseSB0ZXN0ZWQgYnkgaW5kZXBlbmRlbnQgaW5zdGl0dXRlcyJPdXIgZWFyIGNhbmRsZXMgYXJlIHJlZ3VsYXJseSB0ZXN0ZWQgYnkgaW5kZXBlbmRlbnQgaW5zdGl0dXRlcyBhbmQgYXJlIHRoZSBvbmx5IGVhciBjYW5kbGVzIHRoYXQgYXJlIGNlcnRpZmllZCBtZWRpY2FsIHByb2R1Y3RzIGNsYXNzIElJYSBhY2NvcmRpbmcgdG8gbWVkaWNhbCBkZXZpY2UgZGlyZWN0aXZlIDkzLzQyL0VFQy4gSXQgaXMgaW1wb3J0YW50IGZvciBQcmFjdGl0aW9uZXJzIG9mIHRoaXMgdGhlcmFweSB0byB1bmRlcnN0YW5kIHRoZSBkaWZmZXJlbmNlIHdpdGggdGhlIENFIGxhYmVsIGFzIG90aGVyIGVhciBjYW5kbGUgbWFrZXMgZG8gY2FycnkgYSBDRSBsYWJlbCwgYnV0IGl0IGlzIG5vdCBvZiB0aGUgc2FtZSBzdGFuZGFyZCBvciBjbGFzc2lmaWNhdGlvbiBhcyBCaW9zdW4gZWFyIGNhbmRsZXMiLi4gClRoaXMgaHlwb2NyaXN5IGlzIGluY3JlZGlibGUsIHlvdSBndXlzIHdvdWxkIGFwcGxhdXNlIGJhbHRpYyBzdGF0ZXMgb3Igc2NhbmRpbmF2aWFuIHN0YXRlcyBmb3Igc3RhbmRpbmcgdXAgdG8gcnVzc2lhbiBhZ2dyZXNzaW9ucyB5ZXQgd2hlbiBpdCBjb21lcyB0byB0dXJrZXksIHRoZXkgYSBidW5jaCBvZiBtdXJkZXJpbmcgd2FybW9uZ2Vycy4uIApUaGUgdmlydWxlbnRseSBmZW1pbmlzdCBzdHVkZW50cyBqdXN0IHNvcnQgb2Ygc2hydWdnZWQsIHNvIG1heWJlIEknbSByZWFsbHkgbm90IG9udG8gc29tZXRoaW5nIGhlcmUuIApUaGUgeWVhciAyMDE1IGVuZGVkIHdpdGggbW9yZSBpbGx1c2lvbnMuIE1vZGkncyB0d28gbWludXRlICd3aGlzcGVyaW5nJyB0ZXRlIGEgdGV0ZSB3aXRoIE5hd2F6IFNoYXJpZiBvbiB0aGUgc2lkZWxpbmVzIG9mIHRoZSBDbGltYXRlIENoYW5nZSBTdW1taXQgaW4gUGFyaXMsIGhpcyBmb3JlaWduIG1pbmlzdGVyIFN1c2htYSBTd2FyYWogY29taW5nIHRvIElzbGFtYWJhZCBmb3IgdGhlIEhlYXJ0IG9mIEFzaWEgY29uZmVyZW5jZSBhbmQgdGhlIGRlY2lzaW9uIHRvIHJlc3VtZSB0aGUgbG9uZyBzdGFsbGVkIEluZGlhIFBha2lzdGFuIGRpYWxvZ3VlLCBoaXMgb3V0IG9mIHRoZSBibHVlIHRlbGVwaG9uZSBjYWxsIGZyb20gS2FidWwgdG8gTmF3YXogU2hhcmlmIGFuZCB2aXNpdCB0byBMYWhvcmUgb24gRGVjZW1iZXIgMjUsIGFuZCB0aGVuIHdpdGhpbiBhIHdlZWsgYSBiaXphcnJlIHRlcnJvcmlzdCAnaG9sZCBvdXQnIGF0IEluZGlhJ3MgUGF0aGFua290IGFpcmJhc2UsIGFsbCBjYW1lIHRvZ2V0aGVyIGluIGEgY3VyaW91cyBpbmZsdXggb2YgZHJlYW15IGlsbHVzaW9ucyBpbiBJbmRpYSBQYWtpc3RhbiBsb2dqYW0uIE5vIHdvbmRlciwgcXVlc3Rpb25zIGFib3VuZCBvbiBhbGwgdGhlc2UgaGlnaCB2b2x0YWdlIGV2ZW50cy4uIApTY2h1bHR6LCBhc3NzaXN0YW50IG1hbmFnaW5nIGVkaXRvciwgbWFya2V0aW5nLiAKQmVuZWRpY3QgY29tbXVuaXR5IGZlc3RpdmFsLiBGcmlkYXksIGp1bHkgMTN0aCBhbmQgc2F0dXJkYXksIGp1bHkgMTR0aCwgc3QuIEJlbmVkaWN0IHBhcmlzaCB3aWxsIGhvbGQgaXRzIDIxc3QgYW5udWFsIGNvbW11bml0eSBmZXN0aXZhbCBhdCA5dGggYW5kIG9oaW8gc3RyZWV0cyBpbiBkb3dudG93biB0ZXJyZSBoYXV0ZS4gCldoZW4gTHluZG9uIEpvaG5zb24gZm91bmQgb3V0IHRoYXQgaGlzIENoaWVmIG9mIFN0YWZmIFdhbHRlciBKZW5raW5zIGhhZCBiZWVuIGNhdWdodCBoYXZpbmcgc2V4IHdpdGggYW5vdGhlciBtYW4gYXQgdGhlIFlNQ0EgYmF0aHJvb20gZG93biB0aGUgc3RyZWV0IGZyb20gdGhlIFdoaXRlIEhvdXNlLCBoZSBrbmV3IGhpcyBsb25ndGltZSBmcmllbmQgYW5kIGNvbXJhZGUgaGFkIHRvIGdvLiBBcyBMZWUgRWRlbG1hbiBwb2ludHMgb3V0IGluIGFuIGVzc2F5IGFib3V0IHRoZSBKZW5raW5zIGFmZmFpciwgIlRlYXJvb21zIGFuZCBTeW1wYXRoeTogQW4gRXBpc3RlbW9sb2d5IG9mIHRoZSBXYXRlciBDbG9zZXQsIiBoYXZpbmcgZ2F5IHNleCBtZWFudCBjZXJ0YWluIGRlYXRoIGZvciBhIHBvbGl0aWNhbCBjYXJlZXIgYmVjYXVzZSBoYXZpbmcgZ2F5IHNleCBtZWFudCB2dWxuZXJhYmlsaXR5IGFuZCBicmVhY2hlZCBib3JkZXJzIGFuZCB0aGF0IHRoZSBTb3ZpZXRzIHdvdWxkIGludmFkZSBhbnkgbWludXRlLiAKT3Bwb25lbnRzIG9mIHRoZSBuZXcgbGF3IGFsc28gc2F5IHRoYXQgd2hpbGUgdGlnaHRlciByZWd1bGF0aW9uIGlzCk1hcHBpbmcgdGhlIEludmFzaW9uIG9mIEFtZXJpY2EKRkMyIGV4cHJlc3NseSBwcm9oaWJpdHMgdGhlIGZvbGxvd2luZyBjb25kdWN0LCBvciBhbnkgY29ycmVzcG9uZGluZyBjb25kdWN0IGFzIGRldGVybWluZWQgYnkgRkMyLCBvbiBPdXIgU2VydmljZXMuIEZDMiByZXRhaW5zIHRoZSByaWdodCB0byBiYW4sIHdpdGhvdXQgd2FybmluZywgYW55IFVzZXIgd2hvIGhhcyBlbmdhZ2VkIGluIHByb2hpYml0ZWQgYWN0cyBvciBjb25kdWN0LCBvciB0YWtlIGFueSBwb3NzaWJsZSBmb3JtIG9mIGxlZ2FsIGFjdGlvbjsgYW5kIG1heSBkZW1hbmQgY29tcGVuc2F0aW9uIG9yIHJlcGFyYXRpb25zIGZyb20gYW55IFVzZXIgd2hvIGNhdXNlZCBhbnkgZm9ybSBvZiBkYW1hZ2UgdG8gRkMyIG9yIGEgdGhpcmQgcGFydHkuLiAKUGFyaXNoaW9uZXJzIHRleHQgdGl0aGVzIHRvIHRoZWlyIGNodXJjaGVzLiBIb21lbGVzcyBzdHJlZXQgdmVuZG9ycyBjYXJyeSBtb2JpbGUgY3JlZGl0IGNhcmQgcmVhZGVycy4gRXZlbiB0aGUgQWJiYSBNdXNldW0sIGRlc3BpdGUgYmVpbmcgYSBzaHJpbmUgdG8gdGhlIDE5NzBzIHBvcCBncm91cCB0aGF0IHdyb3RlICJNb25leSwgTW9uZXksIE1vbmV5LCIgY29uc2lkZXJzIGNhc2ggc28gbGFzdCBjZW50dXJ5IHRoYXQgaXQgZG9lcyBub3QgYWNjZXB0IGJpbGxzIGFuZCBjb2lucy4KQWxzbywgSSBub3Qgc2F5aW5nIEpheSBXaGl0ZSBpcyBiZXR0ZXIgaW4gdGhhdCBkZXBhcnRtZW50LCBqdXN0IHRoYXQgaGUgMjYgYW5kIGlzIGFscmVhZHkgZG9pbmcgdGhlc2UgdGhpbmdzIHdoaWNoIGlzIGEgc2lnbiB0aGF0IGhlIGFscmVhZHkgcmVhbGx5IGdvb2QuIE9rYWRhIGhhZCBhIHJlcHV0YXRpb24gZm9yIG5vdCBzZWxsaW5nIGFzIHdlbGwgd2hlbiBoZSBmaXJzdCBjYW1lIGJhY2sgYnV0IG5vdyBJIGNvbnNpZGVyIGhpbSB0aGUgYmVzdCBzZWxsZXIgaW4gTkpQVy4gSGlzIGZhY2lhbCBleHByZXNzaW9ucyBhbmQgY29uc2lzdGVuY3kgYXJlIHRvcCBub3RjaCBhbmQgaGUgbmV2ZXIgb3ZlcmRvZXMgaXQsIGl0IGFsd2F5cyBqdXN0IHJpZ2h0LiAKSGl2IG1ldG9kZSBtZW51cnV0IGNpcmkgcGVtaWphdGFuIHBhcmEgZG9yb3RoeSBvZGhhLiAKT3ZlcnZpZXcgZm9yIEZpdmUKNCkgRm9yIG1lLCBJIGxpa2UgdG8gYWx3YXlzIGNhcnJ5IGEgc25pcGVyIHNvIEkgY2FuIHNlZSBmYXJ0aGVyIGFzIEkgdHJhdmVsLCB0aGVuIEkgbGlrZSBoYXZpbmcgYW4gYXNzYXVsdCByaWZsZSBpbiBteSBzZWNvbmQgc2xvdCBhbmQgYW4gc21nL3Nob3RndW4gaW4gdGhlIHRoaXJkLiBUaGlzIG1lYW5zIGFzIG9wcG9uZW50cyBnZXQgY2xvc2VyIEkgd2hlZWwgbW91c2UgZG93biwgYW5kIGhhdmluZyBhIGd1biBmb3IgZXZlcnkgcmFuZ2UgaXMgbmljZS4gCkkgaGVhcmQgYSBib3kgdGVsbCBoaXMgZnJpZW5kICJJIG5lZWQgYSBnb29kIGNyeSIgYXQgdGhlIHBhcmsuIFdoYXQgdGhlIGZ1Y2sgaXMgdGhhdD8hIElmIEkgbGV0IG15IGtpZCBiZSB0aGF0IGtpZCBoZSBnZXQgZnVja2luIGVhdGVuIEFMSVZFIGluIHRoZSByZWFsIHdvcmxkISBCdXQgdGhlbiBteSB3aWZlIHN0YXJ0cyB0YWxraW5nIGFib3V0ICJ0b3hpYyBtYXNjdWxpbml0eSIgYW5kIGl0IGxpa2UuIHdhaXQsIGFtIEkgd3JvbmcgaGVyZT8gTXkgYm95IG5lZWRzIHRvIG5vdCBiZSB0aGF0LCByaWdodD8gSG93IGRvIEkgbWFrZSBzdXJlIGhlIHN0cm9uZyB3aXRob3V0IGdvaW5nIHRvd2FyZHMgd2hhdGV2ZXIgInRveGljIiBpcz9UaGUgb25seSByZWFzb24gSSBldmVuIHRoaW5raW5nIGFib3V0IHRoaXMgc3R1ZmYgaXMgY3V6IEkgc3BlbmQgd2F5IHRvbyBtdWNoIHRpbWUgdGhpbmtpbmcgYWJvdXQgYWxsIGtpbmRzIG9mIHNoaXQgYW5kIEkgbWFkZSBhbiBFRkZPUlQgdG8gdGhpbmsgYWJvdXQgdGhpcy4gCldoZW4gaXQgY29tZXMgdG8gbWFya2V0aW5nIHlvdXIgUHJvIENsYXkgUG9rZXIgQ2hpcHMgYnVzaW5lc3MsIGl0IGlzIGltcG9ydGFudCB0byBrbm93IGFuZCB1bmRlcnN0YW5kIHdoYXQgYSAidGFyZ2V0IiBtYXJrZXQgaXMuIApHdW4gYm9hdHMgcnVubmluZyBvZmYgUGhpbGlwcGluZSBmaXNoZXJtYW4gd2hvIGFyZSBmaXNoaW5nIGluIHdhdGVycyBqdXN0IG9mZiB0aGUgY29hc3Qgb2YgdGhlaXIgb3duIGNvdW50cnkuIFRoZW4gd2hlbiBjb3VudHJpZXMgc2F5ICJoZXkgd3RmPyIgdGhlIENDUCB3aWxsIHJlc3BvbmQgaW4gc29tZSBsdWRpY3JvdXMgZWRpdG9yaWFsIHBpZWNlIGluIG9uZSBvZiB0aGVpciBwcm9wYWdhbmRhIHJhZ3MsIHBlZGFsbGluZyBqdXN0IHV0dGVyIGxpZXMuIE5vdCBldmVuIGEgbGl0dGxlIGJpdCBlbWJhcnJhc3NlZCB0aGF0IHRoZXkgYXJlIHNvIGNsZWFybHkgbHlpbmcuIApXaGVuIEkgcXVlc3Rpb25lZCBoaW0gSSBnb3QgaW4gdHJvdWJsZS4gCk1heWJlIHRoZXkgdGhlIG9uZXMgbm90IGxpdmluZyB1cCB0byB0aGVpciBwb3RlbnRpYWwgYW55bW9yZSBzaW5jZSB0aGUgdG91Z2hlc3QgY29tcGV0aXRpb24gaXNuIGd1YXJhbnRlZWQgdG8gc2hvdyB1cCBhdCBldmVyeSByYWNlLiAKV2VsbCwgdGhlIGFkZGljdGlvbiBwYXJ0IHdhcyB0aGUgaGFyZGVzdC4gVG9vayBtZSBnZXR0aW5nIGFycmVzdGVkLCBpbnRlbnNlIHByb2JhdGlvbiwgaW4gdHJlYXRtZW50IHJlaGFiIGZhY2lsaXR5IGFuZCBiZWluZyB1bmNvbWZvcnRhYmxlIGluIG15IG93biBza2luIGZvciBhIGJldHRlciBwYXJ0IG9mIGEgeWVhci4gSSB3b3JrZWQgYSBzdGVhZHkgam9iIGJ1dCBhbHNvIGF0dGVuZGVkIGJldHdlZW4gMSAzIG1lZXRpbmdzIGEgZGF5LiAKU3ViamVjdCBwYXNzd29yZCA2LiBUaGVuIFNlbmQgOC4gSW4gMiBtaW5zIHUgd2lsbCBnZXQgcGFzc3dvcmQgLiAoRnVsbCBBbnN3ZXIpLiAKRWluZSBzY2huZSBSb3NlIHJlaWNodCBvZnRtYWxzIHNjaG9uLiBTbyBtYW5jaCBlaW5lciBmcmV1dCBzaWNoIGRhbm4gZG9jaCBlaGVyIGJlciBlaW5lIHNlbGJzdCBnZW1hY2h0ZSBTY2hva29sYWRlIChrYW5uIG1hbiBpbSBJbnRlcm5ldCBiZWkgZGl2ZXJzZW4gSG5kbGVybiBsYXNzZW4pLiAKRWF0IGhlYWx0aGllciBmb29kcyBhbmQgZHJpbmsgbG90cyBvZiB3YXRlci4gClRoZSBVbml0ZWQgU3RhdGVzLCBGcmFuY2UgYW5kIEJyaXRhaW4gbGF1bmNoZWQgbWlsaXRhcnkgc3RyaWtlcyBpbiBTeXJpYSB0byBwdW5pc2ggUHJlc2lkZW50IEJhc2hhciBBc3NhZCBmb3IgYW4gYXBwYXJlbnQgY2hlbWljYWwgYXR0YWNrIGFnYWluc3QgY2l2aWxpYW5zIGFuZCB0byBkZXRlciBoaW0gZnJvbSBkb2luZyBpdCBhZ2FpbgpJZiB5b3UgcmVhbGx5IGFyZSBnZXR0aW5nIHVubHVja3kgd2l0aCB0aGUgY2FyZHMsIGxvb2sgYXQgdGhlIGNhcmRzIGNvbWluZyBkb3duLCBzZWUgaWYgeW91IGNhbiBwdXQgb3RoZXJzIGluIGJlbGllZiB5b3UgaGF2ZSBhIGJldHRlciBoYW5kLCBoaWdoIHJpc2sgY2FuIHBheSBvZmYsIGJ1dCBkbyBub3QgdHJ5IHRoaXMgdG9vIG11Y2ggaW4gYSBnYW1lLCBhcyBldmVyeSB0aW1lIHlvdSBhcmUgcHV0dGluZyB5b3VyIHRvdXJuYW1lbnQgb24gdGhlIGxpbmUuIApNYXNzYWdlIFdhcmVob3VzZSBpcyBkZWRpY2F0ZWQgdG8gc3VwcGx5aW5nIHlvdSB3aXRoIHRoZSBmaW5lc3QgcXVhbGl0eSBtYXNzYWdlIGVxdWlwbWVudCBhbmQgc3VwcGxpZXMgYWNjZXNzaWJsZS4gV2l0aCBvdXIgbGFyZ2Ugc2VsZWN0aW9uIG9mIG1hc3NhZ2UgdGFibGVzLCBpbmNsdWRpbmcgcG9ydGFibGUgdGFibGVzIGFuZCBzdGF0aW9uYXJ5IHRhYmxlcywgeW91IGFyZSBzdXJlIHRvIGdldCB0aGUgdGFibGUgeW91IGFyZSBsb29raW5nIGZvci4gV2UncmUgeW91ciBvbmUgc3RvcCBzdG9yZSBmb3IgbWFzc2FnZSBzdXBwbGllcyBhbmQgZXF1aXBtZW50IGluY2x1ZGluZyBxdWFsaXR5IG1hc3NhZ2Ugb2lscywgY3JlbWVzIGFuZCBsb3Rpb25zLiBTbyBsb3ZlIGJyb3dzaW5nIHRocm91Z2ggb3VyIHdlYnNpdGUgYW5kIHlvdXdpbGwgYmUgcGxlYXNlZCBhdCB0aGUgYXNzb3J0bWVudCBhbmQgcHJpY2luZyB3ZSBwcm92aWRlLiBNYXNzYWdlIFRhYmxlIGFuZCBDaGFpciBTdXBwbGllciBvZiBQaWNrIElBSU0gY2hhcHRlcnMsIG1lbWJlcnMgYW5kIHN1cHBvcnRlcnMgZnJvbSB0aHJvdWdob3V0IHRoZSB3b3JsZCBnYXRoZXJlZCBpbiBQb3J0dWdhbCBpbiBPY3RvYmVyIHRvIGNlbGVicmF0ZSAyMCB5ZWFycyBhcyBhbiBpbnRlcm5hdGlvbmFsIG9yZ2FuaXphdGlvbiBkZXZvdGVkIHRvIHN1cHBvcnRpbmcgbnVydHVyaW5nIHRvdWNoLgpJIGR1bm5vLiBZb3UgcmlnaHQuIApBbmQgdGhhdCBtYXkgZXhjaXRlIHlvdSBldmVuIG1vcmUhISBTd2luZ2VyIGdyb3VwcyBhbmQgdGhlIGxpa2UgZG8gZXhpc3QsIGJ1dCBkb3VibGUgY2hlY2sgdGhlaXIgcmVmZXJlbmNlcyBiZWZvcmUgYXR0ZW5kaW5nLiAKT2YgY291cnNlIHRoaXMgYXBwcm9hY2ggY2Fubm90IGJlIGZvbGxvd2VkIGJsaW5kbHkgYW5kIHJlcXVpcmVzIHRoZSB1bmRlcnN0YW5kaW5nIHRvIGtub3cgd2hlbiB0byByZWlnbiBpdCBiYWNrIG9yIGFiYW5kb24gdGhlIHN5c3RlbSBhbGwgdG9nZXRoZXIuIFRoZSBzaXR1YXRpb24gaXRzZWxmIGFuZCBwcm9mZXNzaW9uYWwganVkZ2VtZW50IGFsd2F5cyB0YWtlcyBwcmVjZWRlbmNlIG92ZXIgYSBwcmUgc2NyaXB0ZWQgcm91dGluZSBidXQgc3RpbGwgdGhlIGV4aXN0ZW5jZSBvZiB0aGUgcm91dGluZSBkb2VzIGl0IGpvYiB0byBlbmNvdXJhZ2UgYSB2YXJpZWQgbWluZHNldCBhbmQgYSB2YXJpZWQgcGxheSBzdHlsZS4KTm90OiBjYW4gaSwgbGV0J3Mgd29yayBpdCBvdXQsIG5vdGhpbmchIEp1c3QgIiBJIGFtIGFuZCB0aGF0J3MgaXQiLiBXdGYhPyBJIHdhcyBsaWtlOiB5b3Ugd29yayBhbmQgdGhlbiBjb21lIGhvbWUgYWZ0ZXIgMTFwbSBhbmQgSSBkb24ndCBzZWUgeW91IG5vciBnZXQgaGVscCBhbGwgZGF5PyEgSG93IGlzIHRoYXQgZmFpciEgQW5kIGhlIHdhbnRzIHRvIG1ha2UgaXQgYSB3ZWVrbHkgZGVhbC4gCk5vLCB5b3UgZGlkbiBzYXkgdGhhdC4gWW91IGNsYWltZWQgVXlnaHVycyBhcmVuIGJlaW5nIHBlcnNlY3V0ZWQsIGJlY2F1c2UgaWYgdGhleSB3ZXJlLCB0aGUgZGVlcGx5IElzbGFtYXBob2JpYyBEb25hbGQgVHJ1bXAgd291bGQgYmUgZGVmZW5kaW5nIHRoZW0uIFRoaXMgbWFrZXMgYWJvdXQgYXMgbXVjaCBzZW5zZSBhcyB5b3UgY2xhaW1pbmcgQWwgSmF6ZWVyYSBpcyBhIHNoaWxsIGZvciB0aGUgQW1lcmljYW4gZ292ZXJubWVudC4KMSkgVGhlIGdsaWFkaW4gcHJvdGVpbiBvZiB3aGVhdCBoYXMgYmVlbiBtb2RpZmllZCBieSBnZW5ldGljaXN0cyB0aHJvdWdoIHRoZWlyIHdvcmsgdG8gaW5jcmVhc2UgeWllbGQuClRoZXJlJ3Mgbm8gYmVoaW5kIHRoZSBzY2VuZXMgbmVmYXJpb3VzbmVzcyB0YWtpbmcgcGxhY2UsIHRob3VnaC4gRm9yIG9uZSB0aGluZywgaXQgd291bGQgd2luZCB1cCB3b3JraW5nIGFnYWluc3QgdGhlbSwgZ2l2ZW4gdGhhdCB0aGV5IHdvdWxkbid0IGJlIGFibGUgdG8gY2hhcmdlIHRoZSBwcmVtaXVtcyB0aGF0IHRoZXkgZG8gZm9yIHRoZSBhZm9yZW1lbnRpb25lZCBhZHZlcnRpc2VtZW50cy4uIApPLCBJIHRvdGFsbHkgYWdyZWUuIApGb3IgZXhhbXBsZSwgaWYgeW91IGxpa2UgdG8gd2FsayBvciBqb2cgeW91IGNhbiBwaWNrIHVwIGEgc2V0IG9mIGR1bWJiZWxscywgc29tZSBhbmtsZSB3ZWlnaHRzIG9yIGV2ZW4gYSB3ZWlnaHQgdmVzdC4KSSB3YXMgc3BlY3VsYXRpbmcgbGFzdCBuaWdodCBhYm91dCBob3cgdGhlIGh1bWFuIGNvbnNjaW91c25lc3Mgb24gb25lIGhhbmQgaXMgZ2V0dGluZyBtb3JlIGFuZCBtb3JlIGNvbm5lY3RlZCB3aXRoIHRoZSBzcHJlYWQgb2YgdGhlIGludGVybmV0IGJ1dCBhdCB0aGUgc2FtZSB0aW1lIEkgZmVlbCB0aGUgaW50ZXJuZXQgYW5kIG1pbGxpb25zIG9mIHNvdXJjZXMgb2YgImVkdWNhdGlvbiIgbWVhbnMgdGhhdCBlc3NlbnRpYWxseSB0aGUgcmVhbGxpdHkgYnViYmxlL3R1bm5sZSB0aGF0IHdlIGFyZSBhbGwgbGl2aW5nIGluIGlzIGdldHRpbmcgbW9yZSBhbmQgbW9yZSB1bmlxdWUgKGFuZCBsb25lbHkpIGFzIHdlIGFyZSBsZXNzIGFuZCBsZXNzIGFibGUgdG8gaW50ZXJhY3Qgd2l0aCBlYWNob3RoZXIgb24gZGF5IHRvIGRheSBiYXNpcyBiZWNhdXNlIG9mIHRlY2hub2xvZ3kuIEkgY2FuIGhlbHAgYnV0IHRoaW5rIHRoYXQgYSBmYW1pbHkgc2l0dGluZyBkb3duIGF0IGRpbm5lciBub3QgdGFsa2luZyBiZWNhdXNlIG9mIGNlbGxwaG9uZXMgYW5kIG92ZXJ3b3JrZWQgcGFyZW50cyBhbmQgZGlzY29ubmVjdGVkIGNoaWxkcmVuIGlzIGEgcGVyZmVjdCByZWNlcGllIGZvciBhIFN3ZWV0IGJpZyBicm90aGVyIGNvbnRyb2wgc2NoZW1lIHdoZXJlIHRoZXJlIHRoZSBncm93bnVwcyBhcmUgd29ya2VyIGJlZXMgYW5kIHRoZSBjaGlsZHJlbiBhcmUgaW5pdGF0ZXMgaW50byBhIGRlZXBlciB3b3JrZXIgYmVlIHN5c3RlbS4uIApUaGlzIGlzIG15IGZhdm9yaXRlIGluIHRoZSBzZXJpZXMuIEl0IGdvdCBlc3Bpb25hZ2UsIHNseSBjb3VydHJvb20gZHJhbWEsIGFuZCB1bmRlcmRvZyB0cml1bXBocy4gVGhlcmUgb25seSBvbmUgb3RoZXIgYm9vayB0aGF0IGV2ZXIgc2NyYXRjaGVkIHRoaXMgaXRjaCwgYSBzY2lmaSBjb21lZHkgVGhlIFJhdHMsIHRoZSBCYXRzLCBhbmQgdGhlIFVnbHksIGEgc2VxdWVsIHRvIFJhdHMsIEJhdHMsIGFuZCBWYXRzIGJ5IERhdmUgRnJlZXIgYW5kIEVyaWMgRmxpbnQuIApUaGUgMTk4OCBlbGVjdGlvbiBoYWQgY29tZSBhbmQgZ29uZSwgYW5kIEJ1c2ggaGFkIGVhcm5lZCAzMTUgbW9yZSBlbGVjdG9yYWwgdm90ZXMgdGhhbiBNaWNoYWVsIER1a2FraXMuCkkgc29tZXRpbWVzIHBpY2sgdGhlIGxhcmdlciBvbmVzIG9uIG15IGZhY2UsIHdoaWNoIGkga25vdyByZXN1bHRzIGluIHNjYXJyaW5nIGJ1dCBzb21ldGltZXMgaSBsaXRlcmFsbHkgY2FuJ3QgaGVscCBteXNlbGYuLiAKV2hpbGUgcmF0ZXMgd2lsbCBjZXJ0YWlubHkgYmUgaGlnaGVyIGR1cmluZyB0aGUgcGVhayBzdW1tZXIgbW9udGhzLCB0aGVyZSBhcmUgbWFueSBncmVhdCBwbGFjZXMgdG8gc3RheSBpbiBWaXJnaW5pYSBsYXJnZXN0IGNpdHksIG1vc3Qgbm90YWJseSB0aGUgSGlsdG9uIFZpcmdpbmlhIEJlYWNoIE9jZWFuZnJvbnQsIFdlc3RpbiBWaXJnaW5pYSBCZWFjaCBhbmQgdGhlIGhpc3RvcmljIENhdmFsaWVyIEhvdGVsLCBhbiBpY29uaWMgcHJvcGVydHkgdGhhdCByZWNlbnRseSByZW9wZW5lZCBhZnRlciBhIG5lYXJseSAkODUgbWlsbGlvbiByZW5vdmF0aW9uLiBIZWFkcXVhcnRlcnMgYW5kIHRoZSBWaXJnaW5pYSBBcXVhcml1bS4gCk91ciByZWd1bGFyIHRlYWNoZXIgd2FzIGEgdG91Z2ggZGlzY2lwbGluYXJpYW4gLiBXZSBoYWQgdG8gc2l0IHVwIHN0cmFpZ2h0IGluIG91ciBzZWF0cyB3aXRoIGdvb2QgcG9zdHVyZXMsIHJhaXNlIG91ciBhcm0gc3RyYWlnaHQgdXAgaWYgd2Uga25vdyB0aGUgYW5zd2VyIHRvIGEgcXVlc3Rpb24sIHN0YW5kIHN0cmFpZ2h0IHdpdGggY29ycmVjdCBwb3N0dXJlIHdoZW4gYW5zd2VyaW5nLCBzcGVhayBpbiBwcm9wZXIgRW5nbGlzaCAodGhpcyB3YXMgaW4gSGF3YWlpIHdoZXJlIG1vc3Qga2lkcyBzcG9rZSBwaWRnaW4gRW5nbGlzaCksIGFuZCBhbHdheXMgcmVmZXIgdG8gaGVyIGFzIG1hIFRoZW4gd2UgaGFkIGEgc3Vic3RpdHV0ZSBvbmUgZGF5IGFuZCBoZSBsb29rZWQgYXQgdXMgYWxsIHNpdHRpbmcgdXAgc3RyYWlnaHQgYXQgb3VyIGRlc2tzLCBsb29raW5nIGZvcndhcmQgYW5kIGV2ZXJ5b25lIHF1aWV0IGFzIGNhbiBiZS4gU28gaGUgYXNrcyB1cyBpZiBoZSBoYXMgYSBjbGFzcyBvZiByb2JvdHMgd2hvIGhhZCB0byBiZSBjcmFua2VkIHVwIHRvIHNwZWFrLiAKVHJ5IHRvIGJ1aWxkIHlvdXIgYWJpbGl0eSB0byByZWFkIG90aGVycycgZmFjZXMuIE1vc3QgcGVvcGxlIGFyZSBnb29kIGxpYXJzLCBidXQgbm90IGdyZWF0IG9uZXMuIFdpdGggcHJhY3RpY2UsIHlvdSBtYXkgZmluZCB0aGF0IHlvdSdyZSBhYmxlIHRvIG5vdGljZSB3aGVuIHRoZSBlbW90aW9uIG9uIGEgcGVyc29uJ3MgZmFjZSBkb2Vzbid0IG1hdGNoIHdpdGggd2hhdCBoZSBvciBzaGUgaXMgc2F5aW5nLgpUaGV5IGp1c3Qgd2FudCB5b3VyIG1vbmV5IHRvIHNwZW5kIG9uIHdoYXQgdGhleSB3YW50Li4gCkhvdyBoZWFydGJyZWFraW5nIGZvciBhIGZpZ2h0ZXIgdG8gZGVsaXZlciBoaXMgaGFyZGVzdCBwdW5jaCBhbmQgbm90IHRvIGdldCBzb21lIGZvcm0gb2Ygc2F0aXNmYWN0aW9uLiAKU28gSSBzaG91dGVkICwgIklzIGFueWJvZHkgZ29pbmcgdG8gaGVscCB0aGlzIG1hbj8iIE5vYm9keSB0b29rIHRoZSBpbml0aWF0aXZlIHNvIEkgcmFuIGJlaGluZCBoaW0gc3RhcnRlZCB0byBkbyB0aGUgaGVpbWxpY2gsIGFuZCBzbWFja2VkIGhpcyBiYWNrIHVudGlsIGhlIHRocmV3IHVwIGJsb29kIGFuZCAzIGZ1bGwgc2l6ZSB0ZWV0aCAoZ290IHNvbWUgdGhyb3cgdXAgb24gbXkgaGFuZC4gcHJldHR5IG5hc3R5KSBBIGNyb3dkIGhhZCBnYXRoZXJlZCBhcm91bmQsIEkgd2FzIHN0aWxsIGluIGFkcmVuYWxpbmUgbW9kZSBidXQgc2xvd2x5IGp1c3QgYmFja2VkIG15IHdheSBvdXQgYW5kIHJhbiBiYWNrIHRvIHRoZSBlbGV2YXRvciB0byB0ZWxsIG15IGZyaWVuZHMgd2hhdCBoYWQgaGFwcGVuZWQuIApOZWVkbGVzcyB0byBzYXksIGFsbCByb29tcyB3aXRoIHRoZSBiZWF1dHkgc2Fsb24gaGF2ZSB0byBiZSBjb21wbGV0ZWx5IGNsZWFuLiBBdCB0aGUgdGltZSBvZiBvbmUncyAxc3QgZ28gdG8sIHlvdSBtYXkgYXNrIHRvIGZpbmQgb3V0IHRoZSByb29tcyBleGFjdGx5IHdoZXJlIHRoZSB0cmVhdG1lbnQgb3B0aW9ucyBhcmUgdG8gYmUgb2ZmZXJlZC4gCklmIHRoZSBzbWFsbGVzdCBoZWFydCBvbiB0aGUgYm9hcmQgaXMgYmlnZ2VyIHRoYW4gdGhlIGxhcmdlc3QgaGVhcnQgYW55IG9mIHRoZSAzIHBsYXllcnMgaGF2ZSBvbiB0aGVpciBoYW5kLCBpdCdzIGEgMyB3YXkgdGllLCBhbmQgdGhlIHBvdCBpcyBjaG9wcGVkIDMgd2F5cyAoRnVsbCBBbnN3ZXIpLiAKTm93LCBiYXNpY2FsbHkgdGhlIG9ubHkgbmV3IHByaW5jaXBsZSBpbnZvbHZlZCBpcyB0aGF0IGluc3RlYWQgb2YgcG93ZXIgYmVpbmcgZ2VuZXJhdGVkIGJ5IHRoZSByZWxhdGl2ZSBtb3Rpb24gb2YgY29uZHVjdG9ycyBhbmQgZmx1eGVzLCBpdCdzIHByb2R1Y2VkIGJ5IHRoZSBtb2RpYWwgaW50ZXJhY3Rpb24gb2YgbWFnbmV0byByZWx1Y3RhbmNlIGFuZCBjYXBhY2l0aXZlIGRpcmFjdGFuY2UuIFRoZSBvcmlnaW5hbCBtYWNoaW5lIGhhZCBhIGJhc2UgcGxhdGUgb2YgcHJlZmFidWxhdGVkIGFtdWxpdGUsIHN1cm1vdW50ZWQgYnkgYSBtYWxsZWFibGUgbG9nYXJpdGhtaWMgY2FzaW5nIGluIHN1Y2ggYSB3YXkgdGhhdCB0aGUgdHdvIHNwdXJ2aW5nIGJlYXJpbmdzIHdlcmUgaW4gYSBkaXJlY3QgbGluZSB3aXRoIHRoZSBwYW5hbWV0cmljIGZhbi4KSGUgZHJlc3NlZCBsaWtlIGhlIGp1c3QgbGVmdCBhIGhpZ2ggZG9sbGFyIGxhdyBmaXJtLCBhbmQgc2hlIGxvb2tzIGxpa2Ugc2hlIGdvaW5nIHRvIGEgZmFuY3kgcHJvZmVzc2lvbmFsIGNvY2t0YWlsIHBhcnR5IGFmdGVyIHRoZWlyIGRhdGUuIApBIGxvdCBvZiB1cyB0aGluayB0aGVyZSBpcyBnb2luZyB0byBiZSBzb21ld2F5IHRoYXQgZXZlcnlvbmUgY29tZXMgYmFjay4uIApJbmZsdWVuY2U6IE9uZSBvZiB0aGUgbW9zdCBwb3dlcmZ1bCBzdGFmZmVycyBpbiBXYXNoaW5ndG9uLCBMaWVybWFuIHdvcmtzIG9uIHRvcCBwcmlvcml0eSBEZW1vY3JhdGljIHBvbGljeSBpc3N1ZXMuIFJvbGwgQ2FsbCBkdWJiZWQgaGltIG9uZSBvZiB0aGUgSGlsbCdzICJwb3dlcnMgYmVoaW5kIHRoZSB0aHJvbmUuIiBMaWVybWFuIGhhcyBjaGFpcmVkIHRoZSBNYXJ5bGFuZCBEZW1vY3JhdGljIFBhcnR5IGJlZ2lubmluZyBpbiAyMDA0LCBhbmQgd2FzIG5hdGlvbmFsIGZpbmFuY2UgY28gY2hhaXIgZm9yIEhvd2FyZCBEZWFuJ3MgcHJlc2lkZW50aWFsIGNhbXBhaWduLiAKVGhvdWdoIHRoZSBPbWFoYSBpcyBhbHNvIGEgZmFtb3VzIHBva2VyIGdhbWUgeWV0LCBpdCBpcyBkZWZpbml0ZWx5IGJlaGluZCB0aGUgVGV4YXMgSG9sZCdlbSB3aXRoIHJlZ2FyZCB0byBwb3B1bGFyaXR5LiAKVGhlIHRvcCBmaXJtcyByZWFsbHkgZG9uIGNhcmUgYXMgbG9uZyBhcyB5b3UgY3J1c2ggY2FzZSBpbnRlcnZpZXdzIGFyZSBwZXJzb25hYmxlLCBhbmQgaGF2ZSBhIGhpZ2ggZ3BhLiAKTW9zdCBwbGF5ZXJzIHdobyB1c2Ugb25saW5lIHBva2VyIGNhbGN1bGF0b3JzIGFyZSBuYXR1cmFsbHkgdGlnaHQgc3RyYXRlZ2lzdHMuIFdlIGFsbCBmaXQgaW50byB0aGUgdGlnaHQgYWdncmVzc2l2ZSBtYXRyaXggcmF0aGVyIHNudWdnbHkuIApJIG1lYW4sIHRoYXQncyBqdXN0IG5vdCB0cnVlLiBBIGxvdCBvZiB3aGF0IElDRSBkb2VzIGlzIHRyeSB0byBwcmV2ZW50IGh1bWFuIHRyYWZmaWNraW5nLiBUaGVyZSdzIGEgbG90IG9mIHJlYXNvbnMgd2h5IHRoZXJlJ3MgaXNzdWVzIGludm9sdmVkIGluIGNhdGNoaW5nIHRyYWZmaWNrZXJzLiAKVGhlIGNvbW1vbiBsYXN0IG5hbWUgdGhpbmcgcmVhZHMgbGlrZSBhIGpva2UsIHllcy4gCkluc3VyaW5nIGNvbXBsZXRlIGNsaWVudCBzYXRpc2ZhY3Rpb24gaXMgbXkgdWx0aW1hdGUgZ29hbC4gSSBsb29rIGZvcndhcmQgdG8gaGVscGluZyB5b3UgbG9vayBhbmQgZmVlbCBhbWF6aW5nLi4gCkkgZG9uIGRvIGl0IG9mdGVuLCBhbmQgdGhhdCBvbmUgb2YgdGhlIHJlYXNvbnMgSSBkb24gU2luY2UgSSBzdGFydGVkIGV4ZXJjaXNpbmcsIEkgaGF2ZSBzdGFydGVkIHdlYXJpbmcgdGhlbSBzbGlnaHRseSB0aWdodGVyIHRoYW4gSSB1c2UgdG8gYnV0IGV2ZXJ5IHBhaXIgaXMgc28gZmxpcHBpbmcgZGlmZmVyZW50IHRoYXQgc29tZXRpbWVzIHRoZXkgZ29pbmcgdG8gbW92ZSByZWdhcmRsZXNzLiAKT3IgcGFpZCB0aGUgb2NjYXNpb25hbCByZXBhaXIgcGVyc29uIHdpdGhvdXQgYWRkaW5nIEdTVC5UaGV5IGFyZSBoaWdobHkgcHJpbmNpcGxlZCwgbGF3IGFiaWRpbmcgcGVvcGxlIHdobyBhbHdheXMgc3RpY2sgYWRtaXJhYmx5IHRvIHRoZWlyIGNvbnZpY3Rpb25zLiAKSGFsbG9ua2F0YXN0cm9mICAxMCBwb2ludHMgIHN1Ym1pdHRlZCAzIGRheXMgYWdvCklmIGEgb25lIHN0YXRlIHNvbHV0aW9uIGlzIGltcG9zc2libGUsIHdoaWNoIEkgdGhpbmsgaXQgcHJvYmFibHkgaXMsIGEgdGhyZWUgc3RhdGUgc29sdXRpb24gbWF5IGFjdHVhbGx5IGJlIG1vcmUgcHJhZ21hdGljIHRoYW4gYSB0d28gc3RhdGUsIHRob3VnaCBpdCBmYWlscyB0byBwcm92aWRlIGEgdW5pZmllZCBQYWxlc3RpbmlhbiBzdGF0ZSwgd2hpY2ggbWF5IGJlIGEgc2ltaWxhciBub24gc3RhcnRlci4uIApHdWlsYmF1bHQgc2FpZCB0aGUgYWxsZWdhdGlvbnMgYWdhaW5zdCBQcnVkIHdobyBoYXMgbm90IGJlZW4gYXJyZXN0ZWQgb3IgY2hhcmdlZCB3aXRoIGEgY3JpbWUgYXJlIGFuZCBjb21wbGV4LiBTaGUgc2FpZCB0aGUgZ292ZXJubWVudCBoYWQgdG8gcXVpY2tseSBhbmQgaW4gb3JkZXIgdG8gcHJvdGVjdCB0aGUgaW50ZWdyaXR5IG9mIHRoZSBpbnN0aXR1dGlvbiB0aGF0IGlzIHRoZSBTdXJldGUgZHUgUXVlYmVjIGFuZCBjaXRpemVucyB0cnVzdCBpbiB0aGVpciBpbnN0aXR1dGlvbnMuIERvcmUsIGEgcmV0aXJlZCBRdWViZWMgcHJvdmluY2lhbCBwb2xpY2Ugb2ZmaWNlciB3aG8gYWxzbyB3b3JrZWQgZm9yIEludGVycG9sLCBzYWlkIHBlb3BsZSBleHBlY3QgbW9yZSBmcm9tIHRoZWlyIHBvbGljZSBmb3JjZXMgdGhhbiB0aGV5IGRpZCB3aGVuIGhlIHN0YXJ0ZWQgd29ya2luZyBpbiBsYXcgZW5mb3JjZW1lbnQgaW4gdGhlIGxhdGUgMTk3MHMuLiAKV2h5IGRvIHlvdSB0aGluayBCcml0YWluIGRlY2lkZWQgdG8gcGFydGl0aW9uIHRoZSByZWdpb24gaW4gdGhlIGZpcnN0IHBsYWNlPyAoSGludCwgaXQgbm90IGp1c3QgYmVjYXVzZSBvZiB0aGUgZGlzcGxhY2VtZW50IG9mIGpld3MgYWZ0ZXIgd3cyKS4gU2VyaW91c2x5LCBnbyByZWFkIHNvbWUgaGlzdG9yeSBvZiB0aGUgcmVnaW9uLCBhbmQgaSBkb24gbWVhbiBqdXN0IHRoZSBsYXN0IDcwIG9kZCB5ZWFycyBiZWZvcmUgcGFycm90aW5nIHRoaXMgcmlkaWN1bG91cyAiSXNyYWVsIHN0b2xlIHRoZWlyIGxhbmQiIHJvdXRpbmUuLiAKUmV2aWV3ZWQgYnkgQWxpc29uIE1jQ3VsbG9jaApJIHdhcyByZWFsbHkgc2hvY2tlZCBieSBob3cgbXVjaCB0aGV5IGVsYWJvcmF0ZWQgb24gZXZlcnl0aGluZy4gClRoaXMgcHJvY2VkdXJlIGlzIGJlc3QgZG9uZSBpbiBhIG1lZGljYWwgZmFjaWxpdHkgYW5kIHNob3VsZCBvbmx5IGJlIGRvbmUgYnkgZXhwZXJ0cy4gVGhpcyBpbnZvbHZlcyBwdXR0aW5nIGFuIGluc3RydW1lbnQgaW50byB0aGUgdmFnaW5hIHRoYXQgc3VjdGlvbnMgdGhlIGxpbmluZyBmb3JtZWQgaW4gdGhlIHV0ZXJ1cy4gCk1hbnkgb3JnYW5pemF0aW9ucyBoYXZlIHByb2N1cmVtZW50IHBvbGljaWVzIG9yIHRlYW1zIGluIHBsYWNlIHRvIGF2b2lkIHRoZSBwaXRmYWxscyBpbmhlcmVudCBpbiB0aGUgSVQgc3VwcGx5IHByb2Nlc3MuIApBbmQgd2hlbiBzb21lIGZhbnMgcXVlc3Rpb25lZCB3aHkgS2hsb2Ugd2FzIGF3YXkgZnJvbSBoZXIgYmFieSwgdGhlIGJ1c2luZXNzd29tYW4gcmVzcG9uZGVkIG9uIFR3aXR0ZXIuICJNb21teSBzaGFtZXJzIHIgYXQgYSBoaWdoIHJpZ2h0IG5vdy4gCkl0IGZhciBlYXNpZXIgdG8gYWN0dWFsbHkgYnV5IGNyeXB0byBjdXJyZW5jeS4gSSBkb24gaGF2ZSB0byBmaW5kIGEgYnJva2VyYWdlLCBnZXQgaXQgdG8gYXBwcm92ZSBtZSwgdHJhbnNmZXIgbW9uZXkgdmlhIGJhbmsgdHJhbnNmZXIsIHBheSBmZWVzIHRvIG1ha2UgdHJhZGVzLgpUaGUgb3ZlcndoZWxtaW5nIG1ham9yaXR5IG9mIHBvcm4gY29uc3VtZXJzLCA2Ny43NyBwZXJjZW50LCBhcmUgaGV0ZXJvc2V4dWFsLi4gCldlaXJkbHkgZW5vdWdoLCB3aGlsZSB0aGUgcmVzdCBvZiB0aGUgYmVhdXR5IGluZHVzdHJ5IGlzIGxhcmdlbHkgZG9taW5hdGVkIGJ5IGZlbWFsZSBjbGllbnRlbGUsIGl0J3MgYSBzZXJ2aWNlIGFsbW9zdCBleGNsdXNpdmVseSBhaW1lZCBhdCBtZW4uIApGb3IgMiB5ZWFycyB0aGF0J3MgYWxsIHdlJ3ZlIGRvbmUgb3IgdGFsa2VkIGFib3V0IGJlY2F1c2UgdGhlIG1lZGlhIGlzIGxlZnQgaGFuZGVkLiAKVGhpcyBpcyB1c3VhbGx5IGRldGVybWluZWQgYnkgdGhlIGFsZ29yaXRobSBkZXNpZ25lZCBmb3IgdGhlIHBva2VyIGdhbWUgYW5kIHdoaWNoIGlzIHN0b3JlZCBpbiB0aGUgcG9rZXIgc2VydmVyLiBJbnRlcm5ldCBwb2tlciBzaXRlcyB3aG8gd2FudCB0byBhc3N1cmUgdGhlaXIgY3VzdG9tZXJzIHRoYXQgdGhlaXIgc2h1ZmZsZSBhbmQgdGhlaXIgcHJhY3RpY2VzIGFyZSBmYWlyIHVzdWFsbHkgZG8gdGhlIGZvbGxvd2luZzogcHVibGlzaCB0aGVpciBzaHVmZmxlIGFsZ29yaXRobSBhbHNvIGtub3duIGFzIHRoZSByYW5kb20gbnVtYmVyIGdlbmVyYXRvciwgaGF2ZSBpbmRlcGVuZGVudCBhdWRpdGluZyBvZiB0aGUgYWxnb3JpdGhtIGFuZCB0aGlyZCwgb2J0YWluIGxpY2Vuc2UgZnJvbSByZWd1bGF0b3J5IGNvbW1pc3Npb24uLiAKSnVzdCBsaWtlIHlvdSBjb3VsZCBsZWF2ZSB5b3VyIHRvd24gYW5kIGhvbGUgdXAgaW4gYSBtb3RlbCB3aXRoaW4gdGhlIGhvdXIuIApCdWZmZXR0IGFic29sdXRlbHkgZGlkIG5vdCBibGFtZSBUcnVtcCBvciBldmVuIGluc2ludWF0ZSBpdC4gVGhhdCB3b3VsZCBhY3R1YWxseSBiZSBhbnRpdGhldGljYWwgdG8gQnVmZmV0dCBiZWxpZWYgaW4gaG93IEFtZXJpY2FuIGNhcGl0YWxpc20gd29ya3MuIEFsc28sIEkgdGhpbmsgeW91IHNob3VsZCByZWFkIEJ1ZmZldHQgbGV0dGVycyBhbnl3YXkuClRoZXkgYXNrZWQgaWYgaGUgaGFkIGFueSBwcm9oaWJpdGVkIGRydWdzIGhlIHdhbnRlZCB0byBkZWNsYXJlIGFuZCBoZSB0b2xkIHBvbGljZSBoZSBoYWQgc29tZSBjYW5uYWJpcyBpbiBoaXMgYmVkcm9vbS4gUG9saWNlIHdlbnQgdG8gdGhlIHJvb20gYW5kIGZvdW5kIGEgYmxhY2sgYmFnIHdpdGggdHdvIHBsYXN0aWMgcmVzZWFsYWJsZSBiYWdzIGluc2lkZSBhIGNoZXN0IG9mIGRyYXdlcnMuIApBbHNvIG5vIHNpZ24gb2YgdGhlIGUgR29sZiwgdGhleSBoYXZlIG9uZSBwZXIgc2hvd3Jvb20uLiAKVmVyeSBmZXcgc2VydmVycyBldmVyIHJlcGVhdGVkIHRoYXQgbWlzdGFrZSBhbmQgaWYgYXQgdGhlIGVuZCBvZiB0aGVpciBzaGlmdCBvciBhdCBjbG9zaW5nIHRoZXkgY291bGRuIGZpbmQgdXMsIG9yIHdlIGhhZCB0byBsZWF2ZSBlYXJseSwgdGhleSB3b3VsZCBwdXQgdGhlIHRpcCBpbiBhbiBlbnZlbG9wZSwgc2VhbCBpdCwgd3JpdGUgYm90aCB0aGVpciBhbmQgb3VyIG5hbWVzIG9uIGl0IGFuZCBwbGFjZSBpdCBpbiBvdXIgdGltZSBwdW5jaCBjYXJkIHNsb3QuLiAKVGhlIHNhbWUgZ3V5cyBkbyBpdCBldmVyeSB5ZWFyIHVudGlsIHRlaGFjaGFwaS4gClRoYXQncyB3aHkgd2UgaGF2ZSBtYWludGVuYW5jZSBkYXlzLCB0aGF0J3Mgd2h5IHdlIGhhdmUgcGh5c2lvdGhlcmFwaXN0cywgdGhhdCdzIHdoeSB3ZSBoYXZlIG1hc3NhZ2UgdGhlcmFwaXN0cywgdGhhdCdzIHdoeSB0aGV5IGhhdmUgYWxsIHRoYXQgc3R1ZmYgdG8gdHJ5IGFuZCBrZWVwIHRoZXNlIGd1eXMgYXQgdGhlIHBlYWsgb2YgdGhlaXIgcGh5c2ljYWwgKGNvbmRpdGlvbikgYW5kIGZlZWxpbmcgd2VsbCwgYW5kIGl0J3MgZGlmZmljdWx0IHdoZW4gc29tZSBzaXR1YXRpb25zIHRoZSBidW1wcyBhbmQgYnJ1aXNlcyBkbyBwaWxlIHVwLiIuIApNZWFuIFJvbGFuZCBNb3JyaXMgRGlzYWJpbGl0eSBRdWVzdGlvbm5haXJlIHNjb3JlcyBkZWNyZWFzZWQgaW4gYm90aCBncm91cHMgZHVyaW5nIHRoZSBjb3Vyc2Ugb2YgdGhlIHN0dWR5LCBidXQgYWRqdXN0ZWQgbWVhbiBzY29yZXMgd2VyZSBzaWduaWZpY2FudGx5IGJldHRlciBpbiB0aGUgU01DIHBsdXMgQ01UIGdyb3VwIHRoYW4gaW4gdGhlIFNNQyBncm91cCBhdCBib3RoIHdlZWsgMiAoUCBDT05DTFVTSU9OOgpUaGUgZmlnaHRlciBjb3VsZCBub3QgcmVhZCBpdCwgd2FzIHNvbWUga2luZGEgYXJjYW5lIHdyaXRpbmcuIApCZWluZyBmcm9tIHRoZSBQdWdldCBTb3VuZCByZWdpb24sIHRoaXMgdG9waWMgb2YgY291cnNlIHJlbWluZHMgbWUgb2YgTWFyeSBLYXkgTGV0b3VybmVhdS4gU2hvcnQgdmVyc2lvbiAgIGEgMzQgeS9vIHRlYWNoZXIgc2hlIGhhZCBzZXggd2l0aCAoYW5kIHByZWduYW50IGJ5KSBoZXIgMTIgeS9vIHN0dWRlbnQuIApTaWUgc2NoZWluZW4gbmljaHQgc28gbmFoIGFuIGRlciBSZWFsaXR0IHp1IHNlaW4sIHVtIHp1IGJlZ3JlaWZlbiwgZGFzcyBlcyBMZXV0ZSBnaWJ0LCBkaWUgc2ljaCBhdXMgcmF0aW9uYWxlbiBHcm5kZW4gZnIgZGFzIEF1dG8gZW50c2NoZWlkZW4gd2VpbCBlcyBzY2huZWxsZXIsIGJpbGxpZ2VyIHVuZCBiZXF1ZW1lciBpc3QuICAxMSBwb2ludHMgIHN1Ym1pdHRlZCA3IGRheXMgYWdvV2VubiBhbGxlIHZvbiBSYXNzaXNtdXMgcmVkZW4sIGhlaXNzdCBkaWVzIG5pY2h0LCBkYXNzIGRlciBSYXNzaXNtdXMgYXVmIGRlbSBWb3JtYXJzY2ggaXN0ICAgZ2FueiBpbSBHZWdlbnRlaWwuIApUaGlzIGNhbiBvbmx5IGJlIGRvbmUgYnkgcHJhY3RpY2UsIHNvIGEgY2xhcmluZXQgcGxheWVyIG5lZWRzIHRvIHByYWN0aXNlIGV2ZXJ5IGRheSBmb3IgYXQgbGVhc3QgMTUgbWludXRlcy4gCkRFQ09STyBVUkJBTk8KSW4gdGhlIGNhc2Ugb2Ygb2lsLCB0aGlzIGhhcyBsZWQgdG8gYSBwcm9wb3NlZCBwb2xpY3kgY2FsbGVkIHRoZSBGdWVsIFF1YWxpdHkgRGlyZWN0aXZlIChGUUQpLCB3aGVyZWJ5IG9pbCBzYW5kcyBkZXJpdmVkIGJpdHVtZW4gd291bGQgYmUgYXNzaWduZWQgYSBoaWdoZXIgY2FyYm9uIGRpb3hpZGUgdmFsdWUgdGhhbiBvdGhlciBmb3JtcyBvZiBjb252ZW50aW9uYWwgYml0dW1lbiBhbmQgcGVuYWxpemVkIGFzIGEgcmVzdWx0LgpUaGUgYmVzdCB0aGluZyB5b3UgY2FuIGRvIGlzIGxpbmUgdXAgd2hhdCB0aGUgRU9CIHNheXMgaXMgeW91ciByZXNwb25zaWJpbGl0eSBhbmQgdGhlbiBjb21wYXJlIHRoYXQgd2l0aCB0aGUgYmlsbCBmcm9tIHRoZSBwcm92aWRlci4gCkFmdGVyIGFsbCwgdGhlIGVudGlyZSBuYXJyYXRpdmUgdGhydXN0IG9mIHRoZSBzdHJpcCBpcyBiYXNlZCBvbiB0aGUgY29tcGV0aXRpb24gYmV0d2VlbiB0d28gZ2lybHMgICBmZW1hbGUgYXJjaGV0eXBlcyByZWFsbHkgICBmb3IgQXJjaGllIGxvdmUgKG9idmlvdXNseSBoZSBjYW4gbG92ZSB0aGVtIGJvdGggc2luY2UgdGhhdCB3b3VsZCBvcGVuIHVwIGFsbCBzb3J0cyBvZiBwb3NzaWJpbGl0aWVzIG91dHNpZGUgb2YgY29tbWl0dGVkLCBkeWFkaWMgcmVsYXRpb25zaGlwcykuLiAKQ2VsYSBhIHQgcG91ciBlbGxlIHVuZSBzb3J0ZSBkZSByZXZhbmNoZSBzb2NpYWxlLiAKUGF0YWdvbmlhUGxhbmluZyBSb2xsIFRvcCBQYWNrICgkMTI5KS4gRG9uIGxldCBzcHJpbmcgcmFpbiBzY2FyZSB5b3UgYXdheSBmcm9tIHRoZSBvdXRkb29ycy4gCldheSBiYWNrIHdoZW4gSSBmaXJzdCBzdGFydGVkIG15IGZpdG5lc3Mgam91cm5leSwgbXkgZW50aXJlIGdvYWwgd2FzIHRvIG1ha2UgaXQgaW50byBzb21lIHNpemUgMTIgamVhbnMuIEkgaGF0ZWQgc2hvcHBpbmcgaW4gdGhlIGxhcmdlciBjbG90aGVzICh0aGlzIHdhcyB5ZWFycyBhZ28sIHNvIHRoZXJlIHdlcmUgZmV3ZXIgeW91dGhmdWwgb3B0aW9ucyBpbiB0aG9zZSBzaXplcykgYW5kIEkgaGF0ZWQgdGhlIHdheSBteSBiZWxseSB3YXMgc3RhcnRpbmcgdG8gc2FnLiBJIHdhcyB0aXJlZCBvZiBiZWluZyB0aGF0IHBlcnNvbi4gSSBqb2luZWQgYW4gaW50ZW5zaXZlIENJQ08gcHJvZ3JhbSB0aGF0IHRhdWdodCBtZSB3aGF0IEkgbmVlZGVkIHRvIGtub3csIGFuZCBnb3Qgb2ZmIG15IGJ1dHQuCkkgc3RhcnRlZCBvdXQgbXkgam91cm5leSBpbnRvIG1hc3NhZ2UgYnkgdGFraW5nIGEgc2hpYXRzdSBjb3Vyc2UsIGFuZCB0aGVuIHF1aWNrbHkgcmVhbGl6ZWQgaXQgd291bGQgYmUgdG8gbXkgYWR2YW50YWdlIGZpbmFuY2lhbGx5IHRvIGdldCByZWdpc3RlcmVkIGFzIGFuIFJNVCBmaXJzdCwgYW5kIHRoZW4gYWRkIG9uIGFsdGVybmF0aXZlIGhlYWxpbmcgbW9kYWxpdGllcyBzZWNvbmQuIFNvIEkgZHJvcHBlZCBvdXQgYW5kIGRpZCB0aGF0LiBUaGUgbW9uZXkgaXMgaW4gdGhlIGluc3VyYW5jZSBjb3ZlcmFnZSwgYW5kIHRoaXMgaXMgdGhlIG5lY2Vzc2FyeSBob29wIHRvIGp1bXAgdGhyb3VnaCBpZiB5b3UgcmVhbGx5IHdhbnQgdG8gbWFrZSBtYXNzYWdlIGEgY2FyZWVyLiBVbmxlc3MgeW91IHJlYWxseSByZWFsbHkgd29yayB5b3VyIHByaXZhdGUgaGVhbGluZyBidXNpbmVzcyBhbmQgaGF2ZSBhIGtuYWNrIGZvciBwcm9tb3Rpb24uIE15IGdpcmxmcmllbmQgaGFzIGEgbm9uIHJlZ3VsYXRlZCBheXVydmVkaWMgbWFzc2FnZSBidXNpbmVzcyBhbmQgc2hlIGlzIGRvaW5nIHdlbGwuIE11Y2ggYmV0dGVyIHRoYW4gSSBjb3VsZC4gKFRoaXMgaXMgYSBnZW5kZXIgdGhpbmcgSSBhbSBxdWl0ZSBzdXJlLCBidXQgc2hlIGFsc28gYSBuYXR1cmFsIHNlbGYgcHJvbW90ZXIgd2l0aCBhIGdvb2QgbmljaGUgaW4gdG93bi4pIElmIHlvdSBjaG9vc2UgdGhhdCByb3V0ZSBleHBlY3QgYSBzbG93IGFuZCBjaGFsbGVuZ2luZyBncm93dGggb2YgeW91ciBjbGllbnQgYmFzZSwgaXQgZGVmaW5pdGVseSBwb3NzaWJsZSB0aG91Z2guCkZyb20gdGhlIHNpbXBsZXN0IHNhdm9yeSAgIGhhbSBhbmQgY2hlZXNlIG9yIHN3ZWV0LCBwbGFpbiBzdWdhciAgIHRvIHRoZSBjcmVhdGl2ZSBOZW8gU2VvdWwsIGV2ZXJ5b25lIGlzIGJvdW5kIHRvIGZpbmQgc29tZXRoaW5nIHRvIHRoZWlyIGxpa2luZy4gCkluIGNsYXNzLCBmb2xsb3dpbmcgU3RldmVucydzIGFkdmljZSwgU3RvdXQgc2xvZ3MgaGFyZCB0byBsZWFybiB0aGUgY29uY2VwdHMgYW5kIHJ1bGVzIG9mIGFjY291bnRpbmcuIE9uZSBvZiBoaXMgZmF2b3JpdGUgZmFjdWx0eSBtZW1iZXJzIGlzIGEgc29jaW9sb2d5IHByb2Zlc3NvciBuYW1lZCBEci4gV2hpdHRsZXMsICJ3aG8gd2FzIHNvcnQgb2YgYW4gb3V0bGF3IHdobyBjcmVhdGVkIGEgc3lsbGFidXMgbWVhbnQgdG8gZW5jb3VyYWdlIGRlYmF0ZSBhbmQgZGVidW5rIHByZWNvbmNlcHRpb25zIiAgIGFuZCB3aG9zZSBmaXJzdCB3b3JkcyBpbiBlYWNoIGNsYXNzIHVzdWFsbHkgd2VyZSwgIk9rYXksIG15IGZyaWVuZHMsIGxldCdzIHR1c3NsZS4iIFdoaXR0bGUncyBhcHByb2FjaCB0byB0ZWFjaGluZyBpcyB0byBhdm9pZCBwcmVwYXJlZCBsZWN0dXJlcy4gClRoZSBMZW5ub24gQ2xheXBvb2wgRGVsZXJpdW0gICBTb3V0aCBvZiBSZWFsaXR5OiBJZiB5b3UgZXZlciBsaXN0ZW5lZCB0byBhbnl0aGluZyB0aGF0IENsYXlwb29sIGhhcyBkb25lIGJlZm9yZSwgbm90aGluZyBvbiB0aGlzIGFsYnVtIHdpbGwgYmUgYW55dGhpbmcgbmV3IHRvIHlvdSwgYnV0IGl0IHN0aWxsIGEgZnVuIGxpc3Rlbi4KU3RvY2sgeW91ciByZWZyaWdlcmF0b3IgYW5kIGZyZWV6ZXIgd2l0aCBzb2Z0IGFuZCBlYXN5IHRvIGVhdCBmb29kIHNvIHlvdSBjYW4gc3RpbGwgZWF0IGFmdGVyIHlvdSBnZXQgeW91ciBicmFjZXMuIEljZSBjcmVhbSBhbmQgZnJ1aXQgc2hha2VzIGFyZSBzb290aGluZyB0byBlYXQgaWYgeW91IHJlY2VudGx5IGdvdCBicmFjZXMuIEl0IG1heSBiZSBoYXJkIHRvIGNoZXcgaW1tZWRpYXRlbHkgYWZ0ZXIsIHNvIGhhdmUgc29tZSBzb2Z0IGZvb2QgbGlrZSBiYW5hbmFzLCBtYXNoZWQgcG90YXRvIGFuZCBwYXN0YSBvbiBoYW5kLi4gCkFkb3JhIGlzIGxpa2UgYW4gZW1wcmVzcyBpbiBXaW5kIEdhcCwgYW5kIG5vYm9keSBkYXJlcyB0byBxdWVzdGlvbiBoZXIuIApUaGlzIHJldmFtcCB3aWxsIGNyZWF0ZSBhIGdlbmVyYWwgcHVycG9zZSBmdW5jdGlvbiByb29tIGZvciBhYm91dCAxMDAgcGVvcGxlLiBUaGUgY2x1YiBoYXMgcGFya2luZyBmb3IgODIzIGNhcnMgYW5kIHRoZSBsb3NzIG9mIDE3IHdpbGwgc3RpbGwgbGVhdmUgdGhlIGNsdWIgd2l0aCBlbm91Z2ggdG8gbWVldCBjb3VuY2lsIHJlcXVpcmVtZW50cy4uIApNYXNzYWdlIHBhcmxvciBidXN0ZWQgb24gcHJvc3RpdHV0aW9uIGNoYXJnZXMKSG9seSBmdWNrLCBhcHBhcmVudGx5IHRoYXQgTWF0ZXIgRGUgdGVhbSBpcyBzdXBwb3NlZCB0byBiZSBsaWtlIHRoZSBiZXN0IGluIHRoZSB3ZXN0IGNvYXN0IG9yIHNvbWV0aGluZz8gVGhleSBhcmUgZ2V0dGluZyBkZW1vbGlzaGVkIGJ5IENoaW5vcyBzeXN0ZW0uIAooU28gSSB1bmRlcnN0YW5kIGhvdyBFbGl6YWJldGggV2FycmVuIGNvdWxkIGJlIGNvbmZ1c2VkIHdoZW4gdGhlIHdob2xlIGZhbWlseSBoYWQgcGFzc2VkIGRvd24gdGhlc2Ugc3Rvcmllcy4gTXkgYmlvIGZhbWlseSBuZXZlciBjbGFpbWVkIHRoZWlyIGV0aG5pY2l0eSB0byBiZSAxMDAlIE5BIGJ1dCB0aGV5IGRpZCBjbGFpbSB0byBiZSBtaXhlZC4gKQpObyBkYXRhIGlzIHNoYXJlZCB1bmxlc3MgeW91IGVuZ2FnZSB3aXRoIHRoaXMgZmVhdHVyZS4gKFByaXZhY3kgUG9saWN5KUdvb2dsZSBZb3VUdWJlU29tZSBhcnRpY2xlcyBoYXZlIFlvdVR1YmUgdmlkZW9zIGVtYmVkZGVkIGluIHRoZW0uIChQcml2YWN5IFBvbGljeSlWaW1lb1NvbWUgYXJ0aWNsZXMgaGF2ZSBWaW1lbyB2aWRlb3MgZW1iZWRkZWQgaW4gdGhlbS4gTm8gZGF0YSBpcyBzaGFyZWQgd2l0aCBQYXlwYWwgdW5sZXNzIHlvdSBlbmdhZ2Ugd2l0aCB0aGlzIGZlYXR1cmUuIChQcml2YWN5IFBvbGljeSlGYWNlYm9vayBMb2dpbllvdSBjYW4gdXNlIHRoaXMgdG8gc3RyZWFtbGluZSBzaWduaW5nIHVwIGZvciwgb3Igc2lnbmluZyBpbiB0byB5b3VyIEh1YnBhZ2VzIGFjY291bnQuIApIb3cgdG8gbWFrZSBSaWNlIENvbmdlZQpQZXJoYXBzIHlvdXIgc3VwcG9zZWQgTGlieWFuIGFjcXVhaW50YW5jZSB3YXMgYSBtZW1iZXIgb2YgdGhlIGVsaXRlIGNhcGl0YWxpc3QgY2xhc3MgYmVmb3JlIHRoZSBzb2NpYWxpc3QgcmV2b2x1dGlvbj8gSSB0aGluayBtb3N0IHBlb3BsZSBwb3N0aW5nIG9uIHRoaXMgc3ViIHVuZGVyc3RhbmQgdGhhdCB0aGUgcmljaCB3b24ndCBiZSB0b28gaGFwcHkgd2hlbiB3ZSBzZWl6ZSB0aGUgY2FwaXRhbCBhbmQgbWVhbnMgb2YgcHJvZHVjdGlvbiBhbmQgcmVkaXN0cmlidXRlIGl0IGFtb25nIHRoZSBwb3B1bGFjZS4gCkd3ZW5EeWxhbiAgNCBwb2ludHMgIHN1Ym1pdHRlZCAxMCBtb250aHMgYWdvClRoZXkganVzdCBsaXN0ZWQgZXhhbXBsZSBidWxsZXRzIHdpdGhvdXQgY2l0aW5nIHRoZSBhY3R1YWwgY2FzZSBpbnZvbHZlZC4uIApGdXJ0aGVyIGludmVzdG1lbnRzIGFyZSBuZWVkZWQgdG8gZW5oYW5jZSB0aGUgY29tcGV0aXRpdmVuZXNzIG9mIE5BRlRBIGFzIGEgd2hvbGUsIGFuZCBnZW5lcmF0ZSBtb3JlIG9mIHRoZSBraW5kcyBvZiBoaWdoIHF1YWxpdHkgam9icyB0aGF0IE5BRlRBJ3MgY3JpdGljcyBjcmF2ZSwgSHVmYmF1ZXIgbm90ZXMuICJFYWNoIG9mIHRoZSB0aHJlZSBnb3Zlcm5tZW50cyBtdXN0IGVuaGFuY2UgaXRzIGNvdW50cnkgZWNvbm9taWMgY29tcGV0aXRpdmVuZXNzIGJ5IGRvbWVzdGljIHJlZm9ybXMgaW4gYXJlYXMgc3VjaCBhcyBlZHVjYXRpb24sIGluZnJhc3RydWN0dXJlIGFuZCB0YXggcG9saWN5LiBCdXQgYnkgY29vcGVyYXRpbmciICAgd2l0aCBvbmUgYW5vdGhlciwgcmF0aGVyIHRoYW4gdHJ5aW5nIHRvIHByb3RlY3QgdGhlaXIgbWFya2V0cyBmcm9tIGZvcmVpZ24gY29tcGV0aXRpb24gICAidGhleSBjYW4gc3B1ciB0aGUgZW50aXJlIE5vcnRoIEFtZXJpY2FuIGVjb25vbXkuIiBNb3N0IG1ham9yIGZpcm1zIGFyZSBhd2FyZSBvZiB0aGUgb3Bwb3J0dW5pdGllcyBhaGVhZC4gbGFyZ2UgYnVzaW5lc3NlcyB0aGF0IHByb2R1Y2UgYW55IGtpbmQgb2YgdGFuZ2libGUgZ29vZHMsIHRoZSBsaWtlbGlob29kIHRoYXQgdGhleSBoYXZlIGEgc2lnbmlmaWNhbnQgcHJlc2VuY2UgaW4gTWV4aWNvIGlzIHZlcnkgaGlnaC4gY29ycG9yYXRpb25zIHRoYXQgZG8gYnVzaW5lc3MgaW4gTWV4aWNvLiBmcm9tIGFjdHVhbGx5IGhhdmluZyB0byBsZWF2ZSBOQUZUQS4gY29tcGFuaWVzLCIgSHVmYmF1ZXIgZXhwbGFpbnMuICJXaGF0IFtUcnVtcF0gcmVhbGx5IHdhbnRzIHRvIGRvIGlzIHRvIGNyZWF0ZSBzb21lIHN0b3J5IGxpbmUgd2hlcmUgam9icyBhcmUgY3JlYXRlZCBpbiB0aGUgVW5pdGVkIFN0YXRlcy4gdGhhdCB1c2UgTWV4aWNvIGFzIHBhcnQgb2YgdGhlaXIgc3VwcGx5IGNoYWluLCB3aGljaCBpcyBjcml0aWNhbCBmb3Igd2hhdCB0aGV5IGFyZSBwcm9kdWNpbmcuIGFzIHRoZSBwcmljZSBmb3Igbm90IHB1dHRpbmcgdGFyaWZmcyBvciBuZXcgdGFyaWZmcyBvbiB0aG9zZSBwYXJ0aWN1bGFyIHByb2R1Y3RzLiBnb3Zlcm5tZW50LCBub3RlcyBIdWZiYXVlciwgYSBmb3JtZXIgcHJvZmVzc29yIG9mIGludGVybmF0aW9uYWwgZmluYW5jZSBkaXBsb21hY3kgYXQgR2VvcmdldG93biBVbml2ZXJzaXR5LiBpbXBvcnRzIGZyb20gTWV4aWNvLCB3aGF0IHdpbGwgc3VyZWx5IGhhcHBlbiBbYWZ0ZXIgdGhhdF0gaXMgdGhhdCBNZXhpY28gd2lsbCBjdXQgb2ZmIGltcG9ydHMgZnJvbSB0aGUgVW5pdGVkIFN0YXRlcy4gSXQgd2lsbCBiZSBhIHRpdCBmb3IgdGF0IHN0b3J5LCBhbmQgaG93IGZhciBpdCBnb2VzIGlzIGhhcmQgdG8gZ3Vlc3MuIgpUYWJsZSBvZiBjb250ZW50cy4gSG93IGxvbmcgZG9lcyBBZGRlcmFsbCB0YWtlIHRvIGtpY2sgaW4/IC4gbWFrZXMgeW91IHRoaW5rIG1vcmUsIGJ1dCBub3QgbmVjY2Vzc2FyaWx5IGZhc3RlciAuIEhvdyB0aW1lIHJlbGVhc2VkIEFkZGVyYWxsIFhSIHdvcmtzOiBJZiB5b3UgdGFrZSBhcGFydCBhbiAuClRoZSBkaXNjb3Vyc2Ugb24gdGhpcyB0b3BpYyBpcyBub3QgbmV3IHRvIGxvY2FsIGxlYWRlcnMgYW5kIHRoZSBzYW1lIGxhbWVudGF0aW9ucyBhYm91dCB3aHkgeW91bmcgdGFsZW50IGxlYXZlcyAgIGFwYXJ0bWVudHMgYXJlIHRvbyBleHBlbnNpdmUsIHRoZSBUIGRvZXNuJ3QgcnVuIGFsbCBuaWdodCwgdGhlIGJhciBzY2VuZSBpcyBib3JpbmcgICBrZWVwIGdldHRpbmcgc2hhcmVkIGFjcm9zcyBmb3J1bSBkaXNjdXNzaW9ucywgbmV3c3BhcGVyIGVkaXRvcmlhbHMsIGFuZCBlbGVjdGlvbiBjYW1wYWlnbnMuIApBbGwgb2YgdXMgYWxzbyBlbmpveSBoZWFyaW5nIGEgZ29vZCBzdG9yeWxpbmUgYWdhaW4gYnV0IGFsc28gYWdhaW4uIEkndmUgcmVtZW1iZXIgYXMgbG92ZSByZSBoZWFyaW5nIFppZyBaaWdsYXIncyBjYWZldGVyaWEgc3RvcnksIEppbSBSb2huJ3MgR2lybCBIdW50IGNvb2tpZSBzdG9yeSwgYW5kIFN0ZXBoZW4gQ292ZXkncyBvcGVyYXRlIG9mIGN1cnJlbnRseSB0aGUgdHJhZGl0aW9uYWwgJ1dob2xlc2FsZSBHZ2RiJyBzdG9yeS4uIApQaWNhc3NvOiBCb3RoIGEgbm91biBhbmQgYSB2ZXJiLCBpdCByZWZlcnMgdG8gdGhlIHNsaWNpbmcgdXAgb2Ygb25lJ3MgZmFjZSBpbiBwcmlzb24uICJZb3UnbGwgaGVhciBwZW9wbGUgc2F5LCAnSGUncyBzbyBnb29kIHdpdGggYSBrbmlmZSwgaGUnbGwgZG8gYSBQaWNhc3NvIG9uIHlvdSwnICIgc2F5cyBTYXZlbGxpLiBUaGUgbWFyayBvZiBhIHNlcmlvdXMgc2xhc2hpbmcgaXMgYWxzbyBjYWxsZWQgYSAiYnVjayBmaWZ0eS4iIFRoYXQgbWVhbnMgYXQgbGVhc3QgMTUwIHN0aXRjaGVzLgpSZXZlbGF0aW9ucyBvZiBzdWl0Y2FzZXMgb2YgY2FzaCwgbGVha2VkIHJlY29yZGluZ3Mgb2YgaW5jcmltaW5hdGluZyBleGNoYW5nZXMgYmV0d2VlbiBwb3dlcmJyb2tlcnMgYW5kIHRoZSBqYWlsaW5nIG9mIHNvbWUgb2YgdGhlIG9mIHRoZSBjb3VudHJ5J3MgbW9zdCBwb3dlcmZ1bCBwZW9wbGUsIGluY2x1ZGluZyBkYSBTaWx2YSwgdW5mb2xkZWQgbGlrZSBhIEhvbGx5d29vZCBzY3JpcHQgICBhbmQgdGhlbiBiZWNhbWUgb25lOiBOZXRmbGl4IHJlbGVhc2VkIGEgKGJhcmVseSkgZmljdGlvbmFsaXplZCBhY2NvdW50IG9mIHRoZSBwcm9iZSB0aGlzIHllYXIuCkNhbGwgbWUgY3JhenksIGJ1dCBJIG5ldmVyIHRyaWVkIGEgYnJvbnplci4gSSBkb24gdGhpbmsgaXQgd291bGQgbG9vayBuYXR1cmFsIHNpbmNlIEkgZG9uIHRhbiBuYXR1cmFsbHkuIEkgbWlnaHQgYmUgZG9pbmcgc29tZXRoaW5nIHdyb25nLgpBbmQgSSBzdGFydGVkIHRoaW5raW5nIHRoYXQsIHllcCwgdGhleSBib3RoICd3ZWFyJyB3b29sLiBPdXIgY2xvdGhlcyBhcmUgb3VyICd3b29sJyBhbmQgYXMgbG9uZyBhcyB0aGV5IHdvcmsgZm9yIHVzLCBpdCdzIGFsbCB0aGF0IG1hdHRlci4gClRoZXkgc2FpZCB0aGV5IGhhZG4gYmVlbiB1cCB0aGVpciBpbiB5ZWFycy4gCkkgaGF2ZSBhIHNldCBvZiBwaWN0dXJlcyB0aGF0IHdlcmUgdGFrZW4gYWZ0ZXIgaGlzIGRlYXRoIHdoaWNoIGFyZSBwcm9vZiB0aGF0IHRoZXNlIGFzc2hvbGVzIGRpZCBhYnNvbHV0ZWx5IG5vdGhpbmcgdG8gYnJpbmcgYW55b25lIHRvIGp1c3RpY2UgdGhlbi4gT3Igbm93LiBNaWtlIEtsYWVzZXIgYWNjaWRlbnRhbGx5IGdhdmUgdGhlbSB0byBtZSBpbiAyMDAzIGJlZm9yZSBoZSBrbmV3IHRvIGtlZXAgaXQgY292ZXJlZC4gClRoZXNlIGFyZSB5b3VuZyBwZW9wbGUgd2hvIGFyZSByZWFsaXppbmcgdGhlaXIgY2FyZWVyIGlzIGp1c3Qgc3RhcnRpbmcgYW5kIHRoZXkgbmVlZCA0MCBvdGhlciBBT0NzIGluIGNvbmdyZXNzIEFTQVAgdG8gMSkgbWFrZSBhIGRpZmZlcmVuY2UgaW4gdGhlIHdvcmxkIG5lZWRlZCB0byB1bmRvIHRoZSBjb3JydXB0aW9uIG9mIHRvZGF5IGFuZCAyKSBrZWVwIHRoZWlyIG93biBwcm9mZXNzaW9uYWwgbW9tZW50dW0gZ29pbmcuIApJdCBzZWVtZWQgYSBzdHJhbmdlIGNob2ljZSwgYnV0IHRoZSBtZWFuaW5nIGdyYWR1YWxseSBiZWNhbWUgY2xlYXIgYXMgTGxveWQgSm9uZXMgcGFpbnN0YWtpbmdseSBwaWVjZXMgdG9nZXRoZXIgdGhlIHN0b3J5IG9mIGhpcyBmYW1pbHksIGFuZCBkaXNjb3ZlcnMgc29tZSBvZiB0aGUgcmVsYXRpb25zaGlwcyB0aGF0IGhpcyBwYXJlbnRzIG5ldmVyIHVuZGVyc3Rvb2Qgb3IgZXhwbGFpbmVkLi4gCldlcmUgcGlja2VkIHVwIGJ5IGxpbW8sIHdoaWNoIHdlIHdlcmVuIGV4cGVjdGluZywgd2UgZ290IHRvIHdhbGsgZG93biB0aGUgcmVkIGNhcnBldCBpbnRvIHRoZSBiaWdnZXN0IHBva2VyIHJvb20geW91IHNlZSBhbmQgdGhlbiBwbGF5IG9uIHRoYXQgdGFibGUuIApWZXJzdWNoZW4gU2llIGF1Y2ggRm9sZ2VuZGVzOiBJaHIgUGFydG5lciBsZWd0IHNlaW5lIEhuZGUgYXVmIElocmUgU2NodWx0ZXJuIHVuZCBtYXNzaWVydCBtaXQgc2VpbmVtIERhdW1lbiBpbiBrbGVpbmVuIEtyZWlzZW4gZGllIFN0ZWxsZSB6d2lzY2hlbiBkZW4gU2NodWx0ZXJibHR0ZXJuLiBTYWdlbiBTaWUgaWhtLCBmYWxscyBlciB6dSBmZXN0IG9kZXIgbmljaHQgZmVzdCBnZW51ZyBtYXNzaWVydCBvZGVyIGZhbGxzIGVyIHp1IHNjaG5lbGxlIEJld2VndW5nZW4gbWl0IGRlbSBEYXVtZW4gbWFjaHQuIApSZXN1bHRzOiBBIHRvdGFsIG9mIDIwIFJDVHMgd2VyZSBpbmNsdWRlZCAobiA9IDMwNzMgaW5jbHVkZWQgaW4gZmluYWwgYW5hbHlzZXMgYWNyb3NzIDM0NjAgcmFuZG9tbHkgYXNzaWduZWQgaW5kaXZpZHVhbHMpLiAKUGVvcGxlIGFsc28gZm9yZ2V0IHRoYXQgbmF0aW9uYWxpdHkgY29tZXMgaW50byBwbGF5IGhlcmUsIHdoZXJlYXMgQW1lcmljYW5zIGFyZSBhbHdheXMgb3ZlciB0aGUgdG9wIGFuZCBleHRyZW1lbHkgb3V0IHRoZXJlLCBJY2VsYW5kZXJzIGFyZW4gYXQgYWxsLiAKSG93ZXZlciwgaXRzIHRoZSBsYXN0IHRoaW5nIHRoYXQgc2hvdWxkIGJlIGhhcHBlbmluZyB0byBoaXMgY2hhcmFjdGVyIGZyb20gdGhlIHBlcnNwZWN0aXZlIG9mICJtYWtpbmcgdGhlIEFsbGlhbmNlIGRpdmVyc2UgYW5kIGludGVyZXN0aW5nIiBiZWNhdXNlIGl0IGp1c3QgbGVhZHMgaGltIGRvd24gdGhlIHBhdGggb2YgYmVpbmcgcGFydCBvZiB0aGUgc2FtZSBtb25vbGl0aGljIHBpY3R1cmUgb2YgY2hpdmFscnkgYXMgdGhlIHJlc3Qgb2YgdGhlIEFsbGlhbmNlLiBXaGVuIEdlbm4gaXMgYW4gYWdncmVzc2l2ZSwgZXhpbGVkIGxlYWRlciBvdXQgZm9yIHZlbmdlYW5jZSBoZSBwcm92aWRlcyB2YWx1YWJsZSBkaXZlcnNpdHkgdG8gdGhlIEFsbGlhbmNlIGNhc3QuIENoYW5naW5nIHRoYXQgbGVzc2VucyB0aGUgZGl2ZXJzaXR5LgpXVyBhZG1pdHMgaXQgbmVlZHMgbW9yZSBPcHJhaCBhZnRlciB3ZWFrIHN0YXJ0IHRvIDIwMTkKUGVyc29ubmUgbidhIHJwb25kdSBldCBuZSBsJ2EgZGZlbmR1IGV0IHBhcyB1biBzZXVsIGRlcyBwYXRpZW50cyBxdSdpbCBhIHB1IGFpZGVyIG4nYSB2b2wgIHNvbiBzZWNvdXJzLiAKTmVyb1ByaXphayAgMyBwb2ludHMgIHN1Ym1pdHRlZCAxNiBob3VycyBhZ28KT3RoZXIgY29pbnMgY2FuIGhhdmUgdGhpbmdzIGxpa2UgcHJpdmFjeS4gQnV0IHdoYXQgZG9lcyBpdCBtYXR0ZXIgd2hlbiBpdCBpcyBvcGVuIHNvdXJjZWQgYW5kIGNhbiBiZSBjb3BpZWQ/IEJpdGNvaW4gbWF5IGltcGxlbWVudCBpdHMgb3duIHByaXZhY3kgZmVhdHVyZXMuIEkgZG9uIGtub3cgaWYgYW55IG9mIHRoaXMgaXMgcG9zc2libGUsIGJ1dCBpdCBpcyBjZXJ0YWlubHkgbm90IHByb3ZlbiB0byBiZSBpbXBvc3NpYmxlIG9yIHBlb3BsZSB3b3VsZCBzdG9wIGRldmVsb3BpbmcgQml0Y29pbi4KQW5kIHRoZW4gYmFjayBpbiB0aGUgUm9tYW4gZGF5IG1vc3QgcGVvcGxlIGRpZG4ga25vdyBob3cgdG8gcmVhZCBvciB3cml0ZSwgYW5kIHRoZXJlIHdlcmUgbm8gbmV3c3BhcGVycywgbW9zdCBuZXdzIGhhZCB0byBzcHJlYWQgYnkgd29yZCBvZiBtb3V0aC4gSWYgeW91IGV2ZXIgcGxheWVkIGEgZ2FtZSBvZiB3aGlzcGVyaW5nIGEgbWVzc2FnZSBkb3duIGEgbGluZSBvZiBwZW9wbGUgeW91IGtub3cganVzdCBob3cgYmFkbHkgaXQgY2FuIGJlIGJ1dGNoZXJlZC4gU28gdGhlIHBlb3BsZSB3aG8gYWN0dWFsbHkgd3JvdGUgdGhpbmdzIGRvd24gbWlnaHQgbm90IGhhdmUgYmVlbiBmaXJzdCBoYW5kIHdpdG5lc3NlcyB0byB0aGUgZXZlbnRzIGluIHRoZSBmaXJzdCBwbGFjZS4uIApXaGVyZSBJIGRlYWwgcGVvcGxlIGxpa2UgdG8gInJ1biBpdCB0d2ljZSIgd2hpY2ggSSdtIHN1cmUgdGhleSBkaWRuJ3QgZG8gaW4geW91ciBkYXkgZWl0aGVyLiBNYW55IHBsYXllcnMgc2F5IGl0J3MgdG9vIHJlZHVjZSB2YXJpYW5jZSwgd2hpY2ggaXMgbWF0aGVtYXRpY2FsbHkgY29ycmVjdCBpbiBhbiBhbGwgaW4gc2l0dWF0aW9uLi4gCkFzIHlvdSBjYW4gcHJvYmFibHkgZ3Vlc3MsIEkgaGF2ZW4gYmVlbiBiYWNrIG5lYXIgYSBjaHVyY2ggc2luY2UgYW5kIG5vdyBoYXZlIG5vIGZhaXRoIGluIGFueSByZWxpZ2lvbiBhdCBhbGwuLiAKQW5kIGlmIHlvdSBleHBlY3QgdG8gc3VjY2VlZCB3aXRoIHlvdXIgZmlyc3QgYnVzaW5lc3MsIHN0YXRpc3RpY2FsbHkgdGhhdCBpbXByb2JhYmxlLiBOb3QgaW1wb3NzaWJsZSwgYnV0IGltcHJvYmFibGUuLiAKSGVyZSwgdGhlIDEwMXN0LCAxMDNyZCAxMDR0aHNvbmdzIGNhbiBiZSBmb3VuZCBvbiBpVHVuZXMsIHdoaWxlIHRoZSAxMDJuZCBjYW4gYmUgZm91bmQgb255b3V0dWJlLiAxMDUgMTA3KSAiU2Vhc29uYWwgU29uZ3MibGlzdGVkIGhlcmU6IENocmlzdG1hcyBUcmVlIHdoaWNoIGNhbiBiZSBmb3VuZCBhcyBhIHNpbmdsZSBvbiBpVHVuZXMuIFRoZSBHYUdhIEVQIGNhbGxlZCAiQVZlcnkgR2FHYSBIb2xpZGF5IiByZWxlYXNlZCBkdXJpbmcgdGhlIHNlYXNvbiBvZiAyMDExIGNhbiBiZSBmb3VuZG9uIGlUdW5lcywgdGhlIHNvbmdzIG9uIGl0IGFyZSBoZXIgb3duIHZlcnNpb25zIG9mIFdoaXRlIENocmlzdG1hcyBPcmFuZ2UgQ29sb3JlZCBTa3kgLiAKQnV0IExvdmF6YSwgd2hpY2ggaXMgbWFya2V0ZWQgYXMgT21hY29yIG91dHNpZGUgdGhlIFVTIGJ5IGEgbnVtYmVyIG9mIGNvbXBhbmllcyB1bmRlciBsaWNlbnNlIGZyb20gdGhlIE5vcndlZ2lhbiBkcnVnbWFrZXIgUHJvbm92YSBCaW9QaGFybWEsIGhhcyBhbHNvIGJlZW4gc2hvd24gdG8gcmFpc2UgcGVvcGxlIGxldmVscyBvZiBjaG9sZXN0ZXJvbCBieSBhIGZldyBwZXJjZW50YWdlIHBvaW50cyBhbiBhZHZlcnNlIGVmZmVjdCB0aGF0IGhhcyBiZWVuIGxpbmtlZCB0byBvbmUgb2YgdGhlIGRydWcgdHdvIGluZ3JlZGllbnRzLCBkb2Nvc2FoZXhhZW5vaWMgYWNpZCAoSi4gCkFsc28sIE1hZ2lzdGVyIFVtYnJpYyB3YXMgY29uc2lkZXJlZCBhIHNpbmRvcmVpIHdoZW4gaGUgYW5kIGEgZmV3IG90aGVycyBjaGFzZWQgYWZ0ZXIgdGhlIHZvaWQgYW5kIGJlY2FtZSB0aGUgVm9pZCBFbHZlcy4gVGhpcyBtZWFucyB0aGVyZSBhcmUgZmFyIGxlc3MgIkhpZ2giIEVsdmVzIHRoYW4gZXZlbiAiVm9pZCIgRWx2ZXMsIGFuZCB0aGV5IGFyZSBhbGwgc3RpbGwgdGhlIHNhbWUgUmFjZSwganVzdCB3aXRoIGRpZmZlcmVudCB0cmFpdHMgYW5kIG5hbWVzIChhIGxhIHRoZSBodW1hbiByYWNlIGluIHRoZSByZWFsIHdvcmxkKS4uIApUb3RhbGx5IGFncmVlLiBGb3Igb25lLCBsaXZlIHdpdGggeW91ciBmYW1pbHkgdG8gc2F2ZSBzb21lIHNlcmlvdXMgbW9uZXkuIEl0IHdoYXQgYmlsbGlvbnMgb2YgcGVvcGxlIGFyb3VuZCB0aGUgd29ybGQgZG8uIAo5MzIgOTQ1LiBUaGlzIGhhcyBsZWQgdG8gc29tZSBnZW51aW5lIGFkdmFuY2VzIGluIHVuZGVyc3RhbmRpbmcgcGVyY2VwdGlvbiBhbmQgY29nbml0aW9uLCBhbmQgaGFzIHJhaXNlZCBzb21lIGhvcGVzIG9mIGFwcGx5aW5nIHRoZSBrbm93bGVkZ2UgaW4gY2xpbmljYWwgY29udGV4dHMuIFRoZXJlIGFyZSBub3cgc2V2ZXJhbCBmb3JtcyBvZiBzdGltdWxhdGlvbiwgdGhlIGFiaWxpdHkgdG8gY29tYmluZSB0aGVzZSB3aXRoIG90aGVyIG1ldGhvZHMsIGFuZCBldGhpY2FsIHF1ZXN0aW9ucyB0aGF0IGFyZSBzcGVjaWFsIHRvIGJyYWluIHN0aW11bGF0aW9uLiAKV2l0aCBWYW5uZXkgZW1wbG95aW5nIGEgNCAzIDMgZm9ybWF0aW9uIHRoaXMgc2Vhc29uLCB3aWR0aCB3aWxsIHBsYXkgYSBsYXJnZXIgcGFydCBpbiB0aGUgVG9yb250byBnYW1lLgoyKSBNeSBmYXZvdXJpdGUgaW50ZXJhY3Rpb24gaXMgd2l0aCBwZW9wbGUgd2hvIHNlZSBtZSBsaXZlIGEgbG90IGFuZCBub3RpY2UgSSBhbHdheXMgaGF2ZSBhIGh1Z2Ugc3RhY2sgYXQgMS8yIGJ1dCBkb24gcmVhbGx5IHVuZGVyc3RhbmQgcG9rZXIgYW5kIHRoaW5rIHZpZXcgbXkgTEFHIGV4cGxvaXRhdGl2ZSBwbGF5cyBhcyBiZWluZyB0ZXJyaWJseSBzcGV3eS4gSURLIHdoYXQgdGhleSB0aGluayBteSBkZWFsIGlzIHdoZW4gSSBhbSBhdCB0aGUgY2FzaW5vIDQwIGhvdXJzIGEgd2VlaywgdGhleSBtdXN0IHRoaW5rIEkgaGF2ZSBhIHRydXN0IGZ1bmQgb3Igc29tZXRoaW5nLi4gCkluIG5vIHRpbWUgemF0ZW4gd2Ugb3AgZGUgYXV0b3N0cmFkZTsgd2lqIHdpc3RlbiB0b2VuIG5hdHV1cmxpamsgbm9nIG5pZXQgZGF0IGF1dG9zdHJhZGVzIGluIFNsb3dha2lqZSB6byB6ZWxkemFhbWhlaWQgemlqbiBlbiB2b25kZW4gaGV0IGFsIG5pZXQgem8gZ29lZCB2b29ydWl0IGdhYW4uLiAKQW5kIGV2ZW4gYWZ0ZXIgZGVjaW1hdGluZyB0aGUgYXVkaW8gbGlrZSB0aGF0IChhdCBhIHF1YWxpdHkgbG9zcyksIHRoZSB3aW5kb3dlZCBzaW5jIGJsYWNrbWFuIEZJUiBmaWx0ZXIgd2FzIHN0aWxsIHNsb3dlciB0aGFuIGEgdGhyZWUgcGFzcyBiaXF1YWQgYnV0dGVyd29ydGggc2Vjb25kIG9yZGVyIElJUiBmaWx0ZXIuCkFwcHJlbmV6IGxlcyBhaW5zaSBxdWUgbGV1ciBjbGFzc2VtZW50IChkZSBsYSBwbHVzIGZvcnRlICBsYSBwbHVzIGZhaWJsZSkuIApJIHNlbnQgaXQgYmFjayB3aXRoIG15IG93biBtZXNzYWdlOiAiQW5kIEkgZG9uJ3QgcGxheSB3aXRoIGFzc2hvbGVzICAgYnV0IEkgZG9uJ3QgaGF2ZSBhIGNob2ljZSBlaXRoZXIuIi4gCk15IHdvcmsga2VlcHMgd29tZW4gZmVlbGluZyBnb29kIGFib3V0IHRoZW1zZWx2ZXMgc28gdGhleSBjYW4gc3VjY2Vzc2Z1bGx5IHBlcmZvcm0gdGhlaXIgcm9sZSBhcyBjYXJlZ2l2ZXIuIApUd28gSW5kaWFuIEluc3RpdHV0ZSBvZiBUZWNobm9sb2d5IGdyYWR1YXRlcyAgIEFudXJhZyBEaWtzaGl0IGFuZCBWaWtyYW50IEJoYXJnYXZhICAgYXJlIGFtb25nIHRoZSBmb3VyIGJ1c2luZXNzIGJyYWlucyB3aG8gaGF2ZSBzdHJ1Y2sgaXQgcmljaCB0byB0aGUgdHVuZSBvZiBiaWxsaW9ucyBvZiBwb3VuZHMsIHRoYW5rcyB0byB0aGUgcGhlbm9tZW5hbCBncm93dGggaW4gb25saW5lIHBva2VyLCBlc3BlY2lhbGx5IHRoZWlyIGNvbXBhbnkgUGFydHlHYW1pbmcuClRyeWluZyB0byBjb250cm9sIHRoZSBuYXJyYXRpdmUgaW4gc29tZW9uZSBlbHNlJ3MgaGVhZCBpcyBzaWxseSwgZnV0aWxlLCBhbmQgZG93bnJpZ2h0IG5hcmNpc3Npc3RpYy4gClRoYXQgd2hhdCBpdCBpcyB0byBoYXZlIGZyZWVkb20uLiAKWGluIG5pYW4ga3VhaSBsZSEgSGFwcHkgQ2hpbmVzZSBOZXcgWWVhciBvZiB0aGUgV29vZCBIb3JzZSwgYmVnaW5uaW5nIEphbnVhcnkgMzEhICJCZWNhdXNlIHRoZSBIb3JzZSBpcyByZWxhdGVkIHRvIGZpcmUsIHRoaXMgaXMgYSBXb29kIEZpcmUgWWVhci4gVGhlIGZpcnN0IGVsZW1lbnQgc3ltYm9saXplcyBoZWF2ZW4gYW5kIHNwaXJpdHVhbGl0eS4gVGhlIHNlY29uZCBlbGVtZW50LCBmaXJlLCBzeW1ib2xpemVzIHRoZSBwaHlzaWNhbCB3b3JsZCwgZXNwZWNpYWxseSB0aGUgZW52aXJvbm1lbnQgYW5kIGVjb25vbXkuIEVsZW1lbnRzIG1heSBiZSBlaXRoZXIgaW4gaGFybW9ueSBvciBjb25mbGljdC4gCkJDIGhhcyBnb3QgYW1hemluZyB3aW5lLiAKTm92ZW1iZXIgamhydCBzaWNoIGRlciBNYXVlcmZhbGwgenVtIDI1LiAKQW1tbzg5IHUKTWFrZSBzdXJlIHRvIGFsc28gc3RvY2sgdXAgb24gY3JhZnRpbmcgbWF0ZXJpYWxzIGZvciB0aGUgbmV4dCB0aW1lIHlvdSdyZSBib3JlZC4gCkFuZCB0aGVuIHRoZXkgZGlkIGl0IGFnYWluIGF0IHRoZSBlbmQuIWZvciBURjMsIEkgYSBsaXR0bGUgdG9ybiBmb3Igd2hhdCBJIHdhbnQgdG8gc2VlIGZvciB0aGUgY2FtcGFpZ24uIApXZSBub3Qgc2F5aW5nICJ5b3UgYW55dGhpbmcgdG8gdGhlIHNlbmRlcnMgb2YgdGhlIG1lc3NhZ2VzIGJlY2F1c2UgdGhleSBub3QgaGVyZS4gR29pbmcgYWxvbmcgd2l0aCB5b3VyIGFuYWxvZ3ksIGl0IGxpa2UgaWYgeW91ciBmcmllbmQgc2F5cyBoZSB0aGlua3MgaGlzIHdpZmUgaXMgYW4gYWxjb2hvbGljIGFuZCBpbnN0ZWFkIG9mIHN1cHBvcnRpbmcgaGltIHlvdSBzYXkgIkkgb25seSBzZWVuIGhlciBkcmluayBvbmUgYmVlciBhIG1vbnRoICBJIHJlYWxseSBkb24gdGhpbmsgc2hlIGFuIGFsY29ob2xpYy4iIFNlZSB0aGUgZGlmZmVyZW5jZT8gV2UgYXJlIHN1cHBvcnRpbmcgKG9yIGlnbm9yaW5nKSB0aGUgcGVyc29uIHdobyBpcyBoZXJlLgpTaG9ydCBkZWNrIHJldGFpbnMgdGhlIHNpbXBsaWNpdHkgb2YgTkxIRSBhbmQgaXMgYWxzbyB3YXkgbW9yZSBhY3Rpb24gYW5kIGZ1biBmb3IgdGhlIGF2ZXJhZ2UgcGxheWVyLiBJbnN0ZWFkIG9mIHdhaXRpbmcgYXJvdW5kIGZvbGRpbmcgbW9yZSB0aGFuIGhhbGYgeW91ciBoYW5kcywgeW91IGNhbiBub3cgcHJvZml0YWJseSBwbGF5IG1vc3Qgb2YgdGhlIGhhbmRzIHlvdSBkZWFsdC4gQSBsb3Qgb2YgaGFuZHMgaGF2ZSBzdXJwcmlzaW5nIGFtb3VudCBvZiBlcXVpdHkgZXZlbiB2cyBhY2VzLiAKU291bmRzIGxpa2UgeW91IGdvdCBhIGxvdCBvZiBpbnZlc3RpZ2F0aW9uIHRpbWUgdW5kZXIgeW91ciBiZWx0IQpEaWRuIHVuZGVyc3RhbmQgdGhhdCB0byBtZWFuIHRoYXQgaXQgd2FzIGFscmVhZHkgcHJlcGFyZWQgYW5kIG9uIHRoZSBtaW5pc3RlciB0YWJsZSwgaGUgc2FpZC4gYmVlbiBsaWVkIHRvLgpUaGUgd29yZCAiY29sbGFnZSIgbWVhbnMgImEgd29yayBvZiBhcnQgdGhhdCBpcyBtYWRlIGJ5IGF0dGFjaGluZyBwaWVjZXMgb2YgZGlmZmVyZW50IG1hdGVyaWFscyAoc3VjaCBhcyBwYXBlciwgY2xvdGgsIG9yIHdvb2QpIHRvIGEgZmxhdCBzdXJmYWNlLiJbMV0gVGhpcyBhcnRpc3RpYyBhc3NlbWJseSBvZiBwaWN0dXJlcyBpcyBhIGdyZWF0IHdheSB0byBkaXNwbGF5IGEgbG90IG9mIHBob3RvZ3JhcGhzLCB0byBjb252ZXkgYSB0aGVtZSwgdG8gcmVjeWNsZSBtYXRlcmlhbHMsIHRvIGRlY29yYXRlIGEgd2FsbCwgYW5kIHRvIGNyZWF0ZSBob21lbWFkZSBnaWZ0cy4gTWFraW5nIGNvbGxhZ2VzIGlzIGFsc28gYSBncmVhdCBhY3Rpdml0eSBmb3Iga2lkcywgcmV0cmVhdHMsIHdvcmtzaG9wcywgYW5kIHRlYW0gYnVpbGRpbmcgZXZlbnRzLiAKVGhlIG9uZSB0aGluZyB5b3UgcmVhbGx5IG5lZWQgdG8gZ2V0IHJpZCBvZiBpcyB5b3VyIHVuY2VydGFpbnR5LiAKSXQgaXMgZmFsc2VseSBzYWlkIHRoYXQgb25saW5lIHBva2VyIHNpdGUgaXMgdXN1YWxseSByaWdnZWQuIAoiSWYgd2hhdCB0aGlzIHdvbWFuIGhhcyB0b2xkIG1lIGlzIGFjY3VyYXRlLCB0aGVuIHNoZSBoYXMgbG9zdCBhbiBlbm9ybW91cyBhbW91bnQgb2YgbW9uZXkgYW5kIHNoZSBoYXMgYmVlbiB1bndpdHRpbmdseSBicmVha2luZyB0aGUgbGF3LiIKSGVsbG8gdS9icmlic3MuIApZZWFoLCBtYWtlIHN1cmUgSSBub3QgbWlzdGFrZW4sIGJ1dCB3aGVuIEkgZGlkIHNvbWUgYnJpZWYgcmVzZWFyY2ggYSBidW5jaCBvZiBwYXRpZW50cyAobm90IGxhdyBmaXJtcykgd2VyZSB1cHNldCBhdCB0aGUgY29zdCBvZiB0cnlpbmcgdG8gZ2V0IHRoZWlyIG93biBtZWRpY2FsIHJlY29yZHMuIFRoZW4gdGhlIERlcHQgb2YgaGVhbHRoIGFuZCBodW1hbiBzZXJ2aWNlcyBwdXQgcmVndWxhdGlvbnMgb24gaG93IG11Y2ggdGhleSBjYW4gY2hhcmdlLCBzbyBub3cgQ0lPWCBpcyBzdWluZyB0aGVtIHNheWluZyB0aGF0IHRoZXkgY2FuIG1ha2UgbW9uZXkgYW5kIHN1cnZpdmUgbG9sIGl0IGtpbmQgb2YgZnVubnkuLiAKSWYgaGUgZG9lcyBub3QgbWVldCB3aXRoIEtpbSBoZSBhIHdhciBtb25nZXIsIGVhZ2VyIHRvIGRlYWwgd2l0aCB0aGUgc2l0dWF0aW9uIG1pbGl0YXJpbHkuIApBcmlkZW4gIDIgcG9pbnRzICBzdWJtaXR0ZWQgNiBtb250aHMgYWdvCkkgaGF2ZSBib3RoIGEgcG9vbiBhbmQgYSBwZWVuZXIuICIgVGhpcyBoYXMgYmVlbiBldmVyeXdoZXJlLiBFdmVyeW9uZSBoYXMgYmVlbiB0YWxraW5nIGFib3V0IGl0IHNvbWUgcGVvcGxlIHRoaW5rIGl0cyB0cnVlIG90aGVycyBkb24ndCBJJ20gbm90IHJlYWxseSBzdXJlIHNvbWV0aW1lcyBzaGUgbG9va3MgcXVpdGUgbWFubHkgYW5kIHRoaW5ncyBhbmQgaW4gc29tZSBwaG90b3MgaXQgcmVhbGx5IGxvb2tzIGxpa2Ugc2hlIGhhcyBhIHBlbmlzLiAKTm9uc2Vuc2UuIEkgZG9uIGJlbGlldmUgeW91IE1VU1QgYmUgYSB2ZWdhbiBpbiBvcmRlciB0byBiZWxpZXZlIGluIHRoZSBtZXNzYWdlIGFuZCBhZHZvY2F0ZSBmb3IgaXQuIFRoZXJlIGlzIG5vdGhpbmcgd3Jvbmcgd2l0aCBhZ3JlZWluZyB3aXRoIGEgcG9zaXRpb24gYWRtaXR0aW5nIHlvdXIgd2Vha25lc3MgYnV0IGFsc28gbWFrZSBpdCBjbGVhciB0aGF0IHlvdSBoYXZlIHRoZSBpbnRlbnRpb24gYW5kIGdvYWwgaW4gbWluZCBvZiBub3Qgc3VwcG9ydGluZyBhbmltYWwgZXhwbG9pdGF0aW9uLgpTbyBkdXRpZnVsbHkgc2l4IGRheXMgYSB3ZWVrLCBLaW0gbWV0IHVwIHdpdGggQWxjYW50YXJhIHdvcmtpbmcgdGhyb3VnaCBhIDkwIG1pbnV0ZSBtaXggb2YgY2FyZGlvIChlaXRoZXIgMzAgbWludXRlcyBvZiBtb2RlcmF0ZSBjbGltYmluZyBvbiB0aGUgU3RhaXJNYXN0ZXIgb3IgMTAgbWludXRlcyBvZiBzcHJpbnQgaW50ZXJ2YWxzKSBhbmQgd2VpZ2h0IHRyYWluaW5nLiAiV2Uga2luZCBvZiBoaXQgZWFjaCBtdXNjbGUgZ3JvdXAgb25lIHRpbWUgYSB3ZWVrIGV4Y2VwdCBmb3IgbGVncyB3ZSBkbyB0d2ljZSwiIEFsY2FudGFyYSB0b2xkIEUhIE5ld3MuICJTbyB3ZSdsbCBkbyBzb21ldGhpbmcgbGlrZSBiYWNrIGFuZCB0cmljZXBzIG9yIGNoZXN0IGFuZCBiaWNlcHMgYW5kIHRoZW4gd2UnbGwgaGF2ZSBhIGRheSBkZWRpY2F0ZWQgdG8gYWJzLiAKQyAgQ29tbXVuaWNhdGlvbiBQaXRmYWxsczogSGVhcmluZyBhbmQgbGlzdGVuaW5nIGFyZSB0d28gZGlmZmVyZW50IHRoaW5ncy4gSSBiZWxpZXZlIG1vc3QgYnVzaW5lc3NlcyBtYWtlIGN1c3RvbWVycyBjcmFua3kgYnkgbm90ICJsaXN0ZW5pbmciIHRvIHdoYXQgdGhleSB3YW50LiBIZXJlIGlzIGFuIGV4YW1wbGUuIEkgZm91bmQgYSBuZXcgaGFpcnN0eWxpc3QgYW5kIHRvbGQgaGVyLCAiSSBsaWtlIG15IGhhaXIgc3R5bGVkIHdpdGggc29tZSBzb2Z0IGN1cmxzLCBkZWZpbml0ZWx5IG5vdCBzdHJhaWdodC4gV2hlbiBzaGUgZmluaXNoZWQgZG9pbmcgbXkgaGFpciBpdCB3YXMgcG9rZXIgc3RyYWlnaHQgYW5kIHNoZSBzYWlkLCAiSXMgdGhhdCBnb29kIGVub3VnaCB0byBnZXQgeW91IG91dCB0aGUgZG9vciI/IE91dCB0aGUgZG9vcj8/IERpZCBzaGUgaGVhciB3aGF0IEkgc2FpZD8gSGVyIGxhY2sgb2YgcGF5aW5nIGF0dGVudGlvbiB3aWxsIGNhdXNlIG1lIHRvIHRyeSBhbm90aGVyIGhhaXJzdHlsaXN0IHRoZSBuZXh0IHRpbWUhIEN1c3RvbWVycyBnZXQgY3Jhbmt5IHdoZW4geW91IGRvbid0IHBheSBhdHRlbnRpb24gYW5kIGRvIHlvdXIgYmVzdCBhdCBzYXRpc2Z5aW5nIHRoZWlyIHJlcXVlc3QuCkkgZG8gZnVsbHkgcmVhbGl6ZSBBdXRpc20gaXMgYSB2ZXJ5IGRpZmZpY3VsdCBteXN0ZXJ5IHRvIGNyYWNrIHNvIEkgZ2l2ZSBhIGxvdCBtb3JlIGxlZXdheSB0aGFuIG90aGVycyBoZXJlLiAKTk9URTogSSBwcmV0dHkgZHJ1bmsgd2hpbGUgd3JpdGluZyB0aGlzLCBidXQgSSB3b3JrIGluIG1lbnRhbCBoZWFsdGggYW5kIGhhdmUgZXhwZXJpZW5jZSB3aXRoIHN1YnN0YW5jZSBhYnVzZS4KV2UgbWF5IHVzZSB0aGlzIGluZm9ybWF0aW9uIHRvIGRldGVybWluZSB3aGljaCBvZiBvdXIgZW1haWxzIGFyZSBtb3JlIGludGVyZXN0aW5nIHRvIHVzZXJzLlRoaXJkIHBhcnR5IGNvb2tpZXMuIE91ciBXZWJzaXRlcyBzb21ldGltZXMgaW50ZWdyYXRlIHdpdGggb3RoZXIgY29tcGFuaWVzJyBzaXRlcy4gRm9yIGV4YW1wbGUsIHdlIGludGVncmF0ZSB3aXRoIHNvY2lhbCBuZXR3b3JraW5nIHNpdGVzIHN1Y2ggYXMgVHdpdHRlciBhbmQgRmFjZWJvb2ssIHRvIG1ha2UgaXQgZWFzaWVyIGZvciB5b3UgdG8gc2hhcmUgd2hhdCB5b3UgaGF2ZSByZWFkLiAKSXQgMWFtIGFuZCBoZSBwbGF5aW5nIHdpdGggbXkgYm9vYiBpbiBhIGhhbGYgYXNsZWVwIHN0YXRlLiAKVW5sZXNzIG9mIGNvdXJzZSwgQnJhbmRvbiBpcyByb2xsaW5nLi4gCkl0IGEgdmVyeSBtYXR1cmUgc3RvcnkgdGhhdCB0YWNrbGVzIG1hbnkgc3ViamVjdHMgbGlrZSBjaGlsZGhvb2QgZHJlYW1zIHRvIGFkdWx0aG9vZCBkaXNpbGx1c2lvbm1lbnQsIGZyaWVuZHNoaXAgYW5kIGNvb3BlcmF0aW9uIHRvIHJlYWNoIGEgZ29hbCBhbmQgdGhlIHNhY3JpZmljZXMgeW91IG5lZWQgdG8gbWFrZSBhbmQgaG93IHRoZXkgYWZmZWN0IHlvdS4uIApUaGVuIG9mIGNvdXJzZSB3aGVuIHdlIGhhdmUgb3VyIHllYXJseSBmZXN0aXZhbCB5b3Uga25vdyB0aGVyZSB0b25zIG9mIHBlb3BsZSB3aG8gc2hvdyB1cCB3aG8gaGF2ZSBuZXZlciBldmVuIGhlYXJkIG9mIHVzLiAKU291bmRzIGxpa2UgdGhlIHRlYWNoZXIgaGFzIG5ldmVyIGhlYXJkIG9mIHRoaXMgKG9yIHRoZSAxQSkgYW5kIHRob3VnaHQgaGUgd2FzIGp1c3QgYmVpbmcgYSBkdW1iYXNzLCBJIHJlbWVtYmVyIGdyb3dpbmcgdXAgaW4gYSBuaWNlIHNtYWxsIHRvd24gYW5kIGJlaW5nIHNob2NrZWQgYXQgaG93IG1hbnkgb2YgbXkgdmVyeSBwcm9ncmVzc2l2ZSB0ZWFjaGVycyBiYXJlbHkga25ldyBhbnl0aGluZyBvdXRzaWRlIHRoZSBzdWJqZWN0IHRoZXkgdGF1Z2h0IGFuZCBtYW55IG9mIHRoZW0gc3Vja2VkIGF0IHRoYXQgdG9vLCBJIGhhZCBhIHRlYWNoZXIgd2hvIHdoZW4gSSB0b2xkIGhlciAiQUQgbWVhbnMgZG9taW5pIiBzaGUgdG9sZCBtZSB0byBzdG9wIG1ha2luZyB1cCB3b3Jkcy4gT2ggYW5kIGhvdyBxdWlja2x5IHRoZWlyIHRyZWF0bWVudCB3b3VsZCBjaGFuZ2Ugd2hlbiB0aGV5IGZvdW5kIG91dCBJIHdhcyBsaWJlcnRhcmlhbiBhbmQgYXRoZWlzdCB3aG8gdGhvdWdodCB0aGVpciBqb2Igc2hvdWxkbiBleGlzdC4gCkFtb25nIHRoZSBvdXRmaXRzIHBvbGl0aWNhbCBhZHZlcnRpc2VycyBhcmUgdXNpbmcgdG8gZGV2ZWxvcCB0aGUgY3VzdG9tIGxpc3RzIG9mIHVzZXJzIGlzIFRhcmdldFNtYXJ0LCBhIFdhc2hpbmd0b24gYmFzZWQgY29uc3VsdGluZyBmaXJtLgpJZiBub3QsIEkgd291bGQgcmVjb21tZW5kIHlvdSB0byBoYXZlIGEgbG9vayBpbnRvIGl0LCBiZWNhdXNlIEkgZm9yIGV4YW1wbGUgc3R1ZGllZCAnYnVzaW5lc3MgaW5mb3JtYXRpY3MnIGFuZCBpIHdvbid0IHRvdWNoIGNvZGUgaW4gbXkgbGlmZSBhZ2Fpbi4gQnV1dXQsIGlmIHlvdSdyZSBhYmxlIHRvIGNvZGUgLyBlc3BlY2lhbGx5IGluIHRoZSBjdXJyZW50IG1hcmtldCwgZXNwZWNpYWxseSBpbiBhYmFwIChhdCBsZWFzdCB0aGF0J2EgbXkgb2NjdXBhdGlvbikgYnV0IEkgdGhpbmsgYWxzbyBpbiBhbnkgb3RoZXIgbGFuZ3VhZ2UsIHlvdSB3aWxsIG5ldmVyIGJvdGhlciBhYm91dCBhIGpvYiBvciBtb25leSBhZ2Fpbi4gCkRvIHlvdSBrbm93IGFueW9uZSB0aGF0IGhhcyB0byBjaGVjayB0aGUgd2VhdGhlciBjaGFubmVsIGJlZm9yZSB0aGV5IHBsYXkgYSBsaXR0bGUgVGV4YXMgSG9sZCdlbT8gV2VsbCB0aGF0J3MgdXMgYW5kIHRoZSByZWFzb24gd2UgcGxheSBvdXRzaWRlIG9uIHRoZSBkZWNrIHdpdGggb3VyIEN1c3RvbSBQb2tlciBUYWJsZSBpcyB0aGVyZSBqdXN0IGlzbid0IGVub3VnaCByb29tIGluIHRoZSBob3VzZSBmb3IgZXZlcnlvbmUgdG8gYmUgY29tZm9ydGFibGUgd2hlbiB0aGV5IGNvbWUgb3Zlci4gSXQncyBub3QgbGlrZSB3ZSBoYXZlIGFueSBwcm9mZXNzaW9uYWwgcG9rZXIgcGxheWVycyBjb21lIG92ZXIgb3IgYW55dGhpbmcsIGJ1dCB3ZSBkbyBsaWtlIHRoZSBndWVzdHMgdG8gZmVlbCBhdCBob21lIGV2ZW4gaWYgdGhleSdyZSBqdXN0IHBsYXlpbmcgY2FyZHMuLiAKWWVzIG90aGVyIGNvdW50cmllcyBhbmQgY3VsdHVyZXMgaGF2ZSBkb25lIHRoaXMuIEJ1dCB0aGVyZSdzIGEgcmVhc29uIHRoZSB3b3JsZCBpcyB0aGUgd2F5IGl0IGlzIG5vdyBhbmQgdGhhdCBoYXMgbGFyZ2VseSB0byBkbyB3aXRoIGVtcGlyZSwgc2V0dGxlciBjb2xvbmlhbGlzbSBpbiB0aGUgYW1lcmljYXMsIGNvbG9uaXphdGlvbiBvZiBhc2lhIGFuZCBhZnJpY2EgYnkgd2hpdGUgY291bnRyaWVzLCB0aGUgbGVnYWN5IG9mIHRoZSB0cmFucyBhdGxhbnRpYyBzbGF2ZSB0cmFkZSwgY2FwaXRhbGlzbSAiYW5kIHNobyBvbiBhbmQgc2hvIGZvcnRoICh6aXplayBub3NlIHBpbmNoIGVtb2ppKSIuIApUaGV5IGJvdGggVGFpd2FuZXNlLCBzbyB0aGV5IGhhdmUgdHJhZGl0aW9uYWwgc3VidGl0bGVzLCBib3RoIGFyZSBhdmFpbGFibGUgZm9yIGZyZWUgb24gWW91VHViZSwgYW5kIGJvdGggaGF2ZSBodW5kcmVkcyBvZiBlcGlzb2Rlcy4uIApJIGtub3cgaG93IHRoZXkgd29yay4gSSdtIGEgZm9ybWVyIG51cnNlLiAKR29rdSB2cyBLcmlsbGVuIGhhZCBubyBzdGFja3MgaXQgd2FzIGEgZ2FnIGZpZ2h0IHNvIHRoZXJlIHdhcyBuZXZlciBhbnkgdGVuc2lvbiBmb3IgZmFucyB0byBjb21wbGFpbiBhYm91dCBpdCBsaWtlIGlmIE5hcnV0byBmb3VnaHQgS2liYSBhbmQgS2liYSB3b24gdGhlcmUgYXJlIG5vIGRpcmVjdCBjb25zZXF1ZW5jZXMgYW5kIGF0IGZhY2UgdmFsdWUgaXQgY291bGQgYmUgaW5zaXN0ZWQgdGhhdCBOYXJ1dG8gb25seSB1c2VkIDIwIFBlcmNlbnQgb2YgaGlzIHBvd2VyLiAKTG9jYWwgYnVzaW5lc3NlcyBoYXZlIHRoZXNlICJjaGlwcyIgdGhhdCB0aGV5IGdpdmUgdGhlIGJveXMgd2hlbiB0aGV5IGFycml2ZSB3aXRoIHRoZSB0ZWEuIEl0J3Mga2luZCBvZiBsaWtlIGEgc3lzdGVtIG9mIGNyZWRpdC4gCiJIRUJSRVcuIE5vIGRpZmZpY3VsdHkgd2lsbCBiZSBleHBlcmllbmNlZCBpbiBpZGVudGlmeWluZyBIZWJyZXdzIGFuZCB0aGV5IHNob3VsZCBiZSBzbyBjbGFzc2lmaWVkIHdpdGhvdXQgcmVnYXJkIHRvIHRoZSBjb3VudHJ5IGZyb20gd2hpY2ggdGhleSBjb21lLiIKR28gdG8gQmFkIEhvbWJ1cmcuIFlvdSBjYW4gZ28gZWl0aGVyIHdpdGggdGhlIFUyIG9yIHRoZSBTNSBpZiB5b3UgZG9uIGhhdmUgd2hlZWxzIGFuZCBpdCBpcyBhbiBleHRyYSB6b25lLiAKVGhlIENodXJjaCBvZiBHb2QgYWxzbyBuZWVkcyB0byBhY2tub3dsZWRnZSB0aGUgaW1wb3J0YW5jZSB0aGF0IGVhY2ggYW5kIGV2ZXJ5IHNvdWwgbXVzdCBoZWFyIHRoaXMgbWVzc2FnZSBvZiBHb2QgdGhhdCBKZXN1cyBDaHJpc3QgaXMgdGhlaXIgTG9yZCBhbmQgTWVzc2lhaC4gClNvIEkgdW5kZXJzdGFuZCB3aGVyZSB5b3UgY29taW5nIGZyb20sIGJ1dCBqdXN0IG9uIGEgcGVyc29uYWwgbm90ZSwgSSBhbSBub3QgZGlhZ25vc2VkIGNlbGlhYyBidXQgSSBhbSBleHRyZW1lbHkgc2Vuc2l0aXZlIHRvIGFueSBjcm9zcyBjb250YW1pbmF0aW9uLiBJIGFsc28gdGVuZCB0byB0YWtlIHRoZSBub3QgQ2VsaWFjIHJldmlld3Mgd2l0aCBhIGdyYWluIG9mIHNhbHQsIGJ1dCBkb24gZGlzY291bnQgdGhlbSBjb21wbGV0ZWx5LiBBIGxvdCBvZiBwZW9wbGUgYXJlIHVuZm9ydHVuYXRlbHkgaW4gYSBwb3NpdGlvbiB3aGVyZSB0aGV5IG1hZGUgdGhlIGh1Z2UgbWlzdGFrZSBvZiBnb2luZyBnZiB3aXRob3V0IHRlc3RpbmcgKG9yIGNvdWxkbiBhZmZvcmQgaXQpIGFuZCBjYW4gZ2V0IHRlc3RlZCB1bnRpbCB0aGVpciBjaXJjdW1zdGFuY2VzIGFsbG93IHRoZW0gdG8gZ28gYmFjayB0byBlYXRpbmcgZ2x1dGVuLi4gCkkgdGhpbmsgeW91IGtub3cgd2hhdCB5b3UgYXJlIGRvaW5nLiAKSW4gdGhlIG1vc3QgbGlrZWx5IHJlc3VsdCwgdGhlIExpYmVyYWxzIHdvdWxkIG5hYiAxMyBzZWF0cywgZW5vdWdoIHRvIGZvcm0gbWFqb3JpdHkgZ292ZXJubWVudCwgdGhlIHBvbGwgb2YgMzE3OSByZXNpZGVudHMgc3VnZ2VzdGVkLiBCb3RoIG1ham9yIHBhcnRpZXMgaGF2ZSBwbGVkZ2VkIHRvIGdvdmVybiBpbiBtYWpvcml0eSBvciBub3QgYXQgYWxsLiAKV2hpbGUgTnVyZ2xlIFJvdCBtaWdodCBzdGlsbCBiZSBhYmxlIHRvIGFmZmxpY3QgdGhlbSBhcyBhIHZpcnVzIEkgZG91YnQgaXQgd291bGQgaGF2ZSBhbGwgb2YgdGhlIHNhbWUgZWZmZWN0cy4gCkhvdyBkbyBpIGdldCAxIG1pbGxpb24gcG9rZXIgY2hpcHMgZm9yIGZyZWVieSB0YXN0aW4gOCB5ZWFycyBhZ28KU2xlZXAgcGFyYWx5c2lzIG9jY3VycyBkdXJpbmcgUkVNIHNsZWVwIHRvIHByZXZlbnQgeW91IGZyb20gbW92aW5nIGR1cmluZyB5b3VyIGRyZWFtcyBhbmQgZXNzZW50aWFsbHkgYWN0aW5nIHRoZW0gb3V0LiAKSWwgZXhpc3RlIGRpeCBtYWlucyAgY2lucSBjYXJ0ZXMgZGUgYmFzZSBhdSBwb2tlciAoZGNyaXRlcyBkYW5zIGxhIGRlcm5pcmUgc2VjdGlvbiBkZSBjZSB0dXRvcmllbCkuIApJIGdldCBvdmVyIGl0IHF1aWNrbHkgYnV0IG1hbiwgSSBqdXN0IGdldCBoaXQgaW4gdGhlIGd1dCBldmVyeSB0aW1lLiAKSGUgY291bGQgcmVtYWluIHNpbGVudCB0aGUgd2hvbGUgdGltZS4gCk1yLiBCYXJ5bGEgYXJyYW5nZWQgZm9yIHRoZSBwdXJjaGFzZSBvZiB0aGUgaG9tZSBuZXh0IGRvb3IgdG8gdGhlIEJhcnlsYXMgZmFtaWx5IGhvbWUuIApJbiBnZW5lcmFsIHRoZXkgYXJlIGFsbG93ZWQgdG8gZGV0YWluIGFuZCBzZWFyY2ggdGhvc2Ugc3VzcGVjdGVkIG9mIHNob3BsaWZ0aW5nLiAKV2UgaGF2ZSBhIGxvbmcgd2F5IHRvIGdvLiBCdXQgd2UgaGF2ZSB0byBtb3ZlIGZvcndhcmQgd2l0aCBsb3ZlIGFuZCBsaWdodC4iTWFueSB3aG8gd2VyZSBjaGVlcmluZyBKYXNvbiBBbGRlYW4gaGVhZGxpbmUgc2V0IG9uIHRoZSBMYXMgVmVnYXMgU3RyaXAgbGF0ZSBPY3QuIApSZWZyaWdlcmF0ZSB1bnRpbCBzZXQsIGFib3V0IDMwIG1pbnV0ZXMuIE1peCB0b2dldGhlciBjYWtlIG1peCwgZWdncyBhbmQgb2lsIGluIGEgbGFyZ2UgYm93bCB1bnRpbCBtaXggaXMgZGlzc29sdmVkLiAKVGhlIHN1aXRzIGNvbnRlbmQgdGhlIGRlZmVuZGFudHMgaGF2ZSBubyByaWdodCB0byBrZWVwIG1vbmV5IHdvbiBmcm9tIFJ1ZGVybWFuLCBzaW5jZSB0aGUgZ2FtZXMgZGlkIG5vdCBoYXZlIHRoZSBhcHByb3ByaWF0ZSBnb3Zlcm5tZW50IGxpY2Vuc2VzLgpJbiBEZWxwaGksIEdyZWVjZSwgdGhlIG9yYWNsZSBwcmllc3Rlc3NlcyBzYXQgb24gc3Rvb2xzIG92ZXIgaG9sZXMgaW4gdGhlIGZsb29yIHRoYXQgZW1pdHRlZCBmdW1lcyBvZiBiYXkgbGVhdmVzIHRvIGluc3BpcmUgdmlzaW9ucy4gCjQgeWVhcnMgaW50byB0aGF0IGxlYXNlIHRoZSBib2dhbiBuZXh0IGRvb3IgYnVsbGRvemVkIHRoZSBmZW5jZSBhcyBwYXJ0IG9mIGhpcyByZW5vdmF0aW9ucy4gSXQgd2FzIGFjdHVhbGx5IG91ciBmZW5jZSwgd2Ugd2VyZW4ndCBub3RpZmllZCBvZiBhbnl0aGluZy4uIApFdmVuIGlmIHlvdSBwdXQgaW4geW91ciBiZXN0IHByaWNlLCB0aGUgYWdlbnQgd2lsbCBwcm9iYWJseSB0aGluayBpdCB3YXNuJ3QgYW5kIGV2ZW4gaWYgaGUgb3Igc2hlIGRvZXMgYmVsaWV2ZSB5b3UsIGhpcyBvciBoZXIgdmVuZG9yIHByb2JhYmx5IHdvbid0LiAKUGxheSBsaW1pdCBhbmQgbm8gbGltaXQgVGV4YXMgaG9sZCAnZW0gYW5kIHR3byB0eXBlcyBvZiBPbWFoYS4gCldoYXQgaXMgZ3JlYXQgYWJvdXQgbGl2ZSBwb2tlciBnYW1lcyBvbmxpbmUgaXMgdGhlIHdob2xlIGxvdCBvZiB0aGluZ3MgeW91IGNhbiBsZWFybiBmcm9tIHRoZW0uIFBsYXlpbmcgbGl2ZSBwb2tlciBnYW1lcyBkYXkgaW4gYW5kIGRheSBvdXQgaXMgZWFzaWx5IGFjaGlldmFibGUsIHNpbmNlIHlvdSBjYW4gbG9nIG9uIHRoZSBjb21wdXRlciBhbnl0aW1lLiAKQWRvcHRlZCBmYXRoZXIgb2YgRGVyZWsgKFBlbm55KS4gQmlsbCB3YXMgdGhlIGJpZyBicm90aGVyIG9mIFJvc2VtYXJ5IChBbmR5KSwgVGVyZXNhIChCb2IpLCBKb2huIChMYXVyaWUpLCBQZWdneSAoRG91ZyksIHRoZSBsYXRlIEppbSAoU3VlKSwgQW5uIChSb2IpIGFuZCAiVW5jbGUgQmlsbCIgdG8gdGhlaXIgbG92aW5nIGZhbWlsaWVzLiAKU29tZXRpbWVzIHN5bXB0b21zIHN1Y2ggYXMgYW5naW5hIHdpbGwgZ3JhZHVhbGx5IGluZGljYXRlIHRoZSBjb25kaXRpb24uIAoxIHNlZWRzIGVkZ2VkIHRoZSBOby4gCkphbmRhIGFuZCBDaWNoeSBib3RoIGhhdmUgYm9va3Mgb24gbW9kZXJuIHBva2VyIHRoZW9yeSB0aGF0IG1ha2VzIGEgZ3JlYXQgbmV4dCBzdGVwIGFmdGVyIHRoZSBmdW5kYW1lbnRhbHMuIApOZWtyeXlkICA2MzMgcG9pbnRzICBzdWJtaXR0ZWQgNCBkYXlzIGFnbwpJbGxlZ2FsIGRydWdzIGNhbiBodXJ0IHlvdXIgYmFieS4gR2V0IGhlbHAgZm9yIHlvdXIgcGFydG5lciBpZiBzaGUgdXNlcyBpbGxlZ2FsIGRydWdzLiAKSWYgeW91IHNlZSB0aGUgT3R0IGJyb3RoZXJzIG9uIHRlbGV2aXNpb24gdGhpcyBwb2tlciBzZWFzb24sIGl0IGxpa2VseSB5b3Ugc2VlIERhbiBpbiBoaXMgc2lnbmF0dXJlIGhvb2RpZSBoZSB1c2VkIHRvIGNvdmVyIGhpcyBtb3V0aCBhbmQgaGlkZSBhbnkgdGVsbHMgaGUgbWF5IGhhdmUgcmV2ZWFsZWQgaW4gbGFzdCB5ZWFyIHRvdXJuYW1lbnQuCllvdSBiZXR0ZXIgb2ZmIG5vdCByZWx5aW5nIG9uIGl0LiBJdCBsaXRlcmFsbHkgd29ya3Mgb24gb3Bpb2lkIHJlY2VwdG9ycyBhbmQgYmVoYXZlcyBsaWtlIGFuIG9waW9pZC4gClZhbGVudGluZSBpcyBteSBzcG90LiAKIlRoZSB0eXBlIG9mIGluZXF1YWxpdHkgYW5kIHZpb2xlbmNlIGZvdW5kIGluIHRoZSB3b3JsZCB0b2RheSB3aWxsIGVuZCBiZWNhdXNlIG9mIG91ciBnZW5lcmF0aW9uLiIuIApZb3UgYmVjb21lIG1lbnRhbGx5IGFuZCBwaHlzaWNhbGx5IGFjY2xhbWF0ZWQgdG8gZmVlbGluZyBhIGNlcnRhaW4gd2F5IGFuZCB3aGVuIGl0IGNoYW5nZXMgaXQgZm9yZWlnbiB0ZXJyaXRvcnkgb25jZSBhZ2FpbiBidXQgaXQganVzdCB0YWtlcyBzb21lIGdldHRpbmcgdXNlZCB0by4gVGltZSBpcyB0aGUga2V5LiBJIHdlbnQgdGhyb3VnaCB0aGUgc2FtZSB0aGluZyBub3QgdG9vIGxvbmcgYWdvLiAKTmV3IGdhbWVzIGFuZCBvbGQgdGl0bGVzIGFyZSBhdmFpbGFibGUgYWxvbmcgd2l0aCB0YWJsZSBnYW1lcyB3aXRoIGxvdyBsaW1pdHMuIEF2YWlsYWJsZSB0YWJsZSBnYW1lcyBpbmNsdWRlIGNyYXBzLCByb3VsZXR0ZSwgYmxhY2tqYWNrLCBhbmQgcHJvZ3Jlc3NpdmUgUGFpIEdvdy4gCkkgbGlrZSB0aGF0IHRoZXkgaWdub3JlIHRoZSBmYWN0IHRoYXQgYWZ0ZXIgZnJlZWRvbSBicm91Z2h0IGZyb20gdGhlIGVuZCBvZiB0aGUgQ2l2aWwgV2FyLCB0aGUgZnJlZWRtZW4gZmFjZWQgY29uc3RhbnQgZGlzY3JpbWluYXRpb24sIGZyZXF1ZW50bHkgc2F3IHRoZW1zZWx2ZXMgImV4aWxlZCIgdG8gdGhlaXIgb3duIHRvd25zLCB3aGljaCwgaWYgZ3JldyB0byBiZSBzdWNjZXNzZnVsLCB3b3VsZCB0aGVuIGJlIHVzdXJwZWQgaW4gc29tZSB3YXkgb3V0IG9mIGplYWxvdXN5KGxpa2UgdGhhdCBwbGFjZSBpbiBUdWxzYSBjYWxsZWQgdGhlICJCbGFjayBXYWxsIFN0cmVldCIgdGhhdCBhIHdoaXRlIG1vYiBkZXN0cm95ZWQpLgpJZiB0aGUgd2hvbGUgd29ybGQganVzdCBzYWlkIGhleSwgd2UgYWxsIG5lZWQgdG8gaGF2ZSBvbmUgb3IgbGVzcyBjaGlsZHJlbiBmb3Igc2V2ZXJhbCBnZW5lcmF0aW9ucyBhbmQgcmVkdWNlIHRoZSBodW1hbiBpbXBhY3Qgb24gdGhlIHdvcmxkIGZvciBub3cgaXQgd291bGQgZG8gdGhlIHdvcmxkIGEgbG9hZCBvZiBnb29kLiBIb3dldmVyIHdpdGggc29jaWV0eSBzbyBmaXJtbHkgZW50cmVuY2hlZCBpbiB3aGF0IGlzIGVmZmVjdGl2ZWx5IGEgcG9uemkgc2NoZW1lIGVjb25vbXkgKHdoaWxlIGFsc28gcmVjb2duaXNpbmcgdGhlIGVuZCByZXN1bHQgb2YgcG9uemkgc2NoZW1lcyBhbmQgdGhlbSBiZWluZyBpbGxlZ2FsKSB0aGF0IGNvbnN0YW50IGdyb3d0aCBpbiBwb3B1bGF0aW9uIGFuZCBjb25zdW1wdGlvbiBpcyBhIHZpdGFsIGNvbXBvbmVudCB0byBob3cgc29jaWV0eSBmdW5jdGlvbnMuLiAKVGhleSBkb24gd2FudCBjYXRzIGFuZCBkb2dzIHRvIGRpZSBvdXQsIHRoZXkganVzdCB3YW50IHRoZW0gdG8gbGl2ZSB1bmRvbWVzdGljYXRlZC4gVGhleSBzZWVrIGEgd29ybGQgd2hlcmUgYW5pbWFscyBvbmx5IGxpdmUgaW4gdGhlIHdpbGQgb3IgaW4gYW5pbWFsIHNhbmN0dWFyaWVzLCBqdXN0IG5vdCBkb21lc3RpY2F0ZWQuClRoZSBuZXh0IGxldmVsIGlzICJzdXNwZW5zaW9uIHdpdGggcGF5IiwgYnV0IHRoYXQgbXVzdCBiZSBkZWNpZGVkIGJ5IHRoZSBTdXByZW1lIENvdXJ0LiAKT25lIHRlY2huaXF1ZSBmb3IgZG9pbmcgdGhpcyB1c2VzIGFtaW5lIGdhcyB0cmVhdGluZy4gVGhpcyBwdXJpZmllZCBiaW9nYXMgaXMgYWxzbyBjYWxsZWQgYmlvbWV0aGFuZS4gClRoZSBzcGFjZSBoYXMgYmVlbiBjb21wbGV0ZWx5IHRyYW5zZm9ybWVkIGZyb20gdGhlIFJhYmJpdCBIb2xlJ3Mgd2FycmVuIGxpa2UgYWVzdGhldGljLiAKVGhleSBhcmUganVzdCB0aGUgb3Bwb3NpdGUgZ2VuZGVyIG9mIHdoYXQgd2UgYXJlLiBNYWludGFpbmluZyBleWUgY29udGFjdCBhbHNvIHNheXMgdG8gYSB3b21hbiB0aGF0IHlvdSBhcmUgaW50ZXJlc3RlZCBpbiBoZXIgYW5kIHRoYXQgeW91IHdhbnQgdG8gZ2V0IHRvIGtub3cgaGVyLiBUaGlzIHBvc3QgZGlzY3Vzc2VzIGhvdyB0byBmaW5kIGFuIEluZGlhbiBnaXJsIG9uIHlvdXIgbW9iaWxlIHBob25lLiAKV2hhdCBPblRoaW5ncyB0byBkb0Zvb2QgYW5kIERyaW5rVGhlYXRyZSBhbmQgQXJ0c1RWIEd1aWRlRGlnaXRhbCBQcmludCBFZGl0aW9uVHdlbHZlIG1vbnRocyBhZ28gYWxtb3N0IHRvIHRoZSBkYXksIEx1Y2luZGFsZSBTYW0gR3JhZXR6IHdhbGtlZCBpbiB0byB0aGUgIGF0IHRoZSB0YWlsIGVuZCBvZiBhIGJ1Y2tzIHNob3csIGFuZCB3YWxrZWQgb3V0IHdpdGggbW9yZSB0aGFuICQzNzAsMDAwLiBUcnVlIHN0b3J5LiAKVGhlIHdlaWdodCBpcyBpZGVudGljYWwgdG8gd2hhdCB5b3UgbWlnaHQgZmluZCBpbiBhIGNhc2lubywgYW5kIHdoZW4geW91IGFyZSBsb29raW5nIHRvIG1ha2Ugc3VyZSB0aGF0IHRoZSBwbGF5aW5nIGV4cGVyaWVuY2UgZmVlbHMgcmVhbCBmb3IgeW91ciBwbGF5ZXJzLCB0aGlzIGlzIG9uZSB3YXkgdG8gZG8gaXQuIFlvdSB3aWxsIGZpbmQgdGhhdCBpdCBpcyBhbHNvIHBvc3NpYmxlIHRvIGdldCBjaGlwcyB0aGF0IGFyZSBtYWRlIG91dCBvZiBjbGF5LCBidXQgdGhhdCB0aGVzZSBhcmUgYSBsaXR0bGUgbW9yZSBleHBlbnNpdmUuIApUaGUgT3R0ZXJzIG1pc3NlZCB0aGUgcGxheW9mZnMgbGFzdCB5ZWFyIGFuZCB0aGV5IGRvbid0IHdhbnQgdG8gZW5kIGVhcmx5IGFnYWluLiBUaGUgU3BpdGZpcmVzIGhhdmUgYW4gaW50ZXJlc3RpbmcgZmluaXNoaW5nIGtpY2sgd2l0aCB0d28gZ2FtZXMgYWdhaW5zdCB0aGUgRmlyZWJpcmRzIGFuZCB0d28gYWdhaW5zdCB0aGUgR3JleWhvdW5kcy4gCk5vdCB0byBtZW50aW9uLCB5b3VyIG1ldGFib2xpc20gd2lsbCBzcGVlZCB1cCBzaW1wbHkgYmVjYXVzZSB5b3VyIGJvZHkgaGFzIHRvIGJ1cm4gbW9yZSBlbmVyZ3kganVzdCB0byBkaWdlc3QgeW91ciBkaWV0LiAKRWxsZSBkb25uZSBjb21tZSBtb2RsZSBsZXMgQ29mZmVlIFNob3AgZCBhdXggUGF5cyBCYXMsIGNlcyBjYWZzIG8gbGVzIGNsaWVudHMgcGV1dmVudCBjb25zb21tZXIgbGlicmVtZW50IGRlIGxhIG1hcmlqdWFuYS4uIApJIGJlZW4gYSBtZW1iZXIgb2YgdHdvIHBhcmlzaGVzIG9uIHRoZSBFYXN0IFNpZGUgKFN0LiAKIldoZW4gdGhpbmdzIGFyZSBjcmF6eSBhdCB3b3JrIGFuZCBhdCBob21lIGl0IG11bHRpcGxpZXMgdGhlIGZlZWxpbmcgb2YgY2hhb3MuIAoyMDEzLCBlbmVyZ3kgd29ya2VycyB3aG8gcGxhY2UgdGhlaXIgaGFuZHMgb24gdGhlaXIgY2xpZW50cyB3aWxsIGJlIHJlcXVpcmVkIHRvIGhhdmUgYSBtYXNzYWdlIGxpY2Vuc2UuIApTaW5jZSB5b3UgaGF2ZSBmdXJ0aGVyIHJlZHVjZWQgdGhlIG51bWJlciBvZiBjYXJkcyBieSBvbmUsIHRoZSBwcm9iYWJpbGl0eSBvZiBkcmF3aW5nIGEgc3BhZGUgaXMgMTMgaW4gNTAuIApUaGV5IHdlcmUgbWFycmllZCBpbiAxOTQ5IGFuZCB0ZW4geWVhcnMgbGF0ZXIgbW92ZWQgdG8gV2F0ZXJsb28gd2l0aCB0aGVpciBjaGlsZHJlbiwgTHlubmUgYW5kIEppbSwgd2hlcmUgQm9iIHRvb2sgb24gdGhlIHBvc2l0aW9uIG9mIHRyZWFzdXJlciAoYW5kIHRoZW4gVlAgRmluYW5jZSkgb2YgdGhlIEVxdWl0YWJsZSBMaWZlIEluc3VyYW5jZSBDb21wYW55LiBCb2IgbG92ZWQgdG8gcGxheSBnYW1lcyAgIGJyaWRnZSwgcG9rZXIsIE1haEpvbmcsIGNyaWJiYWdlLCBjcm9raW5vbGUsIHRhYmxlIHRlbm5pcywgY3VybGluZy4gRm9yIGFueSBnYW1lIHRoYXQgaW52b2x2ZWQgc2tpbGwgYW5kIHN0cmF0ZWd5IHlvdSBjb3VsZCBjb3VudCBoaW0gaW4uIApMYXN0bHksIEkgY2FuIGZpbmQgdGhlIGFuc3dlciB0byBtb3N0IG9mIG15IHF1ZXN0aW9ucyB3aGVuIEkgbG9vayBhdCBteXNlbGYgZmlyc3QuIExpZmUgaXMgcmVhbGx5IGhhcmQuIFRoZXJlIG5vIHNtb290aCBwYXRoLiBJdCBidWlsZHMgeW91ciBjaGFyYWN0ZXIuIERvbiBhdm9pZCBpdC4gVGFrZSBpdCBoZWFkIG9uLgpMb2t5bmV0ICAxIHBvaW50ICBzdWJtaXR0ZWQgNyBkYXlzIGFnbwpIb3dldmVyISBPZ291biBLeXUgaGFzIFN0b3AgT3BwLiBBYmlsaXR5IGFzIGJvbnVzIHdoaWNoIG1lYW5zIGhlIGNhbiBiZSB1c2VkIGFzIGEgc3VpY2lkZSBib21iIGFnYWluc3QgY2FyZHMgdGhhdCBoZWFsIGxpZmUgb3IgcG9pc29uIHlvdS4gCkFSUEFORVQsIG9uZSBvZiB0aGUgSW50ZXJuZXQncyBwcmVkZWNlc3NvcnMsIGJlZ2FuIG1vZGVzdGx5IGFzIGEgdGhyZWUgbm9kZSBuZXR3b3JrLiBHcmFkdWFsbHksIHNtYXJ0IHBlb3BsZSBiZWdhbiB0byBsaW5rIG5ldHdvcmtzIHRvZ2V0aGVyIHVzaW5nIHByb3RvY29scyBmcm9tIHRoZSBBUlBBTkVUIHByb2plY3QuIEluIHRoZSAxOTgwcywgdGhpcyBuZXR3b3JrIHByb3ZlZCB0byBiZSBhIHZhbHVhYmxlIHRvb2wgZm9yIHJlc2VhcmNoIGFuZCBjb21tdW5pY2F0aW9uLiAKTWFqb3JfTW90b2tvICA0IHBvaW50cyAgc3VibWl0dGVkIDE4IGhvdXJzIGFnbwpUaGUgbmVpZ2hib3Job29kIHdhcyBwcm9iYWJseSA3NSUgd2hpdGUsIGFuZCBvdGhlciAyNSUgd2FzIGJsYWNrIGFuZCBoaXNwYW5pYy4gSSBkb24gdGhpbmsgaSBldmVyIHNhdyBhbnkgYXNpYW4gb3IgaW5kaWFuIGZhbWlsaWVzIGxpdmluZyB0aGVyZS4KVGhlIGJvbWIgd2FzIHBsYWNlZCB1bmRlcmdyb3VuZCBpbiBhIHJlbW90ZSBzZWN0aW9uIG9mIHRoZSBOZXZhZGEgZGVzZXJ0IGluIHRoZSBob3BlcyB0aGF0IG5vYm9keSB3b3VsZCBub3RpY2UuIApXb3VsZCB0aGUgaW5kaXZpZHVhbCBiZSBhIGxhcmdlIDI1MCBsYi4gCjIuIApBIGd1YXJhbnRlZWQgJDEwIG1pbGxpb24gdG9wIHByaXplIGlzIG5vIGxvbmdlciBhIGNlcnRhaW50eSBzaW5jZSB0b3AgcG9rZXIgcGxheWVycyB0b2xkIHNlcmllcyBvZmZpY2lhbHMgdGhleSB3b3VsZCByYXRoZXIgc2VlIG1vcmUgcGVvcGxlIHdpbiBtb25leSwgaW4gdGhpcyBjYXNlIHRoZSBsYXN0IDEsMDAwIHBsYXllcnMgc3RhbmRpbmcuIAoxMiBmYW50YXN0aWMgdGhpbmdzIHRvIGRvIG9uIHRoZSBOb3J0aGVybiBSaXZlcnMKQW5kIGEgc2NyZWFtaW5nIGJhYnkuIApJbSB3b3JraW5nIHRoZSB3aW5kb3cgdG8gaGFuZCBvdXQgdGhlIGZvb2QgYW5kIHRoZSBjdXN0b21lciBwdWxscyB1cCwgZm9vZCBpc250IHJlYWR5IHlldCBidXQgSSBnbGFuY2VkIGF0IGhlciBhbmQgc2hlIHdhcyB3ZWFyaW5nIGEgYmx1ZSBkcmVzcyB3aXRoIGEgZmFuY3kgbG9va2luZyBzdW4gaGF0IGFuZCBzdW5nbGFzc2VzLCBzaGUga2luZGEgbG9va3MgYXR0cmFjdGl2ZSBidXQgZmFpcmx5IG9sZGVyLCBzbyB0ZWVuYWdlciBtZSBpcyBsaWtlICJhd2Vzb21lIEkgZ2V0IHRvIHNlZSBhIGhvdHRpZSIuIApJZiB5b3UgYSBwcm9mZXNzaW9uYWwgcGxheWluZyB0aGUgYmlnIHRvdXJuYW1lbnRzLCBQaGlyYWQgbmFpbGVkIGl0LiAKTi4uIApIYXMgdGhyZWUgZXNzZW50aWFsIHBpZWNlcyBvZiBhZHZpY2UgZm9yIHBlb3BsZSBhaW1pbmcgdG8gYnVpbGQgYSBjdXN0b20gaG91c2U6IGJlIHJlYWxpc3RpYyBhYm91dCB0aGUgYnVkZ2V0IGZyb20gZGF5IG9uZTsgYmUgYXdhcmUgb2YgdGhlIHRpbWVmcmFtZSBhbmQgY29uc2lkZXIgaG93IGl0IG1heSBiZSBhZmZlY3RlZCBieSBtYWpvciBsaWZlIGV2ZW50cyBsaWtlIGJlY29taW5nIHBhcmVudHM7IGFuZCB1bmRlcnN0YW5kIGFsbCB0aGUgc3RlcHMgaW4gdGhlIHByb2Nlc3MgZnJvbSBkZXNpZ24gYW5kIHBlcm1pdHRpbmcgdGhyb3VnaCB0byBjb21wbGV0aW9uIG9mIHRoZSBidWlsZC4uIApJIHdpbGwgYmUgcHJvdmlkaW5nIHlvdSB3aXRoIGxpbmtzIHRvIHJlYWwgY2FzaW5vIHBva2VyIGNoaXBzLCBhbmQgb3RoZXIgcG9rZXIgY29sbGVjdGlibGVzLiAKT25saW5lIHBva2VyIGFzIGEgZnVsbCB0aW1lIGpvYiBpcyBkZWFkClRoZSBsYW5kb3duZXIgZmlsZWQgYW4gb2JqZWN0aW9uIHdpdGggdGhlIGNpdHk6ICJJIGRvIG5vdCB0aGluayBhIGdhbWJsaW5nIGVzdGFibGlzaG1lbnQgaXMgY29uc2lzdGVudCB3aXRoIHRoZSBNaWR0b3duIHZpc2lvbi4iLiAKSSBhIG1hbiBhbmQgSSBsb3ZlIGZsb3dlcnMuIEkgbG92ZSB0aGluZ3MgdGhhdCBhcmUgc29mdCBhbmQgY3V0ZS4gR2l2ZSBtZSBraXR0ZW5zLCB1bmljb3JucywgZmxvd2VycywgYW5kIGN1cGNha2VzIG92ZXIgdHJ1Y2tzLCBza3VsbHMsIG1vdG9yYmlrZXMsIGFuZCBsaW9ucyBhbnkgZGF5ISBBbmQgeWV0IG5vIG9uZSBxdWVzdGlvbnMgbXkgbWFzY3VsaW5pdHkgc28gY2xlYXJseSB0aGVyZSBubyBjb25mbGljdCBiZXR3ZWVuIHRoZSB0aGluZ3Mgb3VyIHNvY2lldHkgaGFzIGFyYml0cmFyaWx5IGRlY2lkZWQgYXJlICJnaXJseSIgYW5kIGhhdmluZyBhIG1hc2N1bGluZSBpZGVudGl0eS4KRG9lcyBoYXZlIGFuIGVjb3N5c3RlbSBhbmQgeW91IG11c3QgY29udGludWUgdG8gYnJpbmcgbmV3IHBsYXllcnMgaW4gdGhlIGdhbWUsIHNhaWQgUGFsYW5za3kuIFRoYXQgc2FpZCwgbGFzdCB5ZWFyIHRoZSBldmVudCBoYWQgaXRzIG1vc3QgZW50cmllcyBldmVyLCBzb21lIDgyLDM2MCwgYSBtYXNzaXZlIG51bWJlciBjb21wYXJlZCB3aXRoIHRoZSBldmVudCBodW1ibGUgYmVnaW5uaW5ncyBhdCBhIHNtYWxsIHNpbmdsZSB0YWJsZSBpbiAxOTcwIGF0IEJlbm55IEJpbmlvbiBIb3JzZXNob2UgQ2FzaW5vLCB3aGVyZSB0aGUgcGxheWVycyB1bHRpbWF0ZWx5IHZvdGVkIG9uIHRoZSB3aW5uZXIgaW4gdGhlIGVuZC4uIApWaWV3IC8gU3VibWl0IFNjcmVlbnNob3QuIApJIGNhbiBlIHRyYW5zZmVyIG1vbmV5IGludG8gTUIsIHRoZW4gb24gdGhlIFBva2VyU3RhcnMgc2l0ZSBJIGluZGljYXRlIEkgd2FudCB0byB1c2UgTUIgdG8gZGVwb3NpdCBmdW5kcy4gCkhpcyBNb3RoZXIgd2FzIGFsc28gdGFrZW4gdG8gaG9zcGl0YWwgYWZ0ZXIgZmFpbnRpbmcgYXQgdGhlIG5ld3Mgb2YgaGVyIHNvbnMgbG9zcy4gCkFudG9uaW8gQnJvd24sIEhhbGwgb2YgRmFtZSBwbGF5ZXIsIEhhbGwgb2YgRmFtZSBjbG93bi4gR2l2ZSBoaW0gYSBnb2xkIGphY2tldCByaWdodCBub3csIHdhaXZlIHRoZSA1IHllYXJzLCBwdXQgaGltIGluIHRoZSBIYWxsIG9mIEZhbWUgb2YgY2xvd25zLiAKVGhhdCBpcyBzbyBtdWNoIGJ1bGxzaGl0LiAKRGlkIHRoZXkgZm9yZ2UgYSBjb21wZXRpdGl2ZSBhZHZhbnRhZ2UgYWdhaW5zdCBBbWVyaWNhbiBhbmQgRXVyb3BlYW4gY2FyIG1ha2VycyBiYXNlZCBvbiBhIHNlcmllcyBvZiBpbm5vdmF0aW9ucyAoaWUgYnVzaW5lc3MgYW5kIG1hbnVmYWN0dXJpbmcgb3JnYW5pemF0aW9uYWwgaW52ZW50aW9ucykgcmVsYXRlZCB0byB0aGUgY29uc3RydWN0aW9uIG9mIGEgY2FyPyBBYnNvbHV0ZWx5IHllcy4uIApEYXZlIEh1ZmY6IEJ1dCBhIGxvdCBvZiBwZW9wbGUgd2VyZSByZWFsbHkgbGVlcnkuIApUaGVyZSBjb3VsZG4ndCBoYXZlIGJlZW4gYSBiZXR0ZXIgb3BlbmluZyB0byB0aGUgZmluYWwgZGF5LiBPdXQgd2Fsa2VkIGEgbHVtaW5vdXMgTWFoaXJhIEtoYW4sIGZvbGxvd2VkIGJ5IFNoZWhlcnlhciBNdW5hd2FyIGFuZCBBZGVlbCBIdXNzYWluIGFuZCB5b3UgY291bGQgc2VlIEFzaW0gUmF6YSBzbWlsaW5nIGxpa2UgYSBDaGVzaGlyZSBDYXQgaW4gdGhlIGZyb250IHJvdy4gSXQgd2FzIGFsbW9zdCBsaWtlIGEgJ3Byb3VkIGRhZGR5JyBtb21lbnQgYW5kIHdhcyB2ZXJ5IHN3ZWV0LiAKSm9obiBNY0d1aXJlLCBhIDI3IHllYXIgb2xkIGRlbnRpc3QgbGl2aW5nIGluIEplZmZlcnNvbiBUb3duc2hpcCwgUGEuCkFuZG8gdmllbmRvIG11Y2hvcyB2aWRlb3MgZGUgcmVzdGF1cmFjaW9uZXMgZGUgcGludHVyYXMgYW50aWd1YXMuIENvbW8gbGUgcmVtdWV2ZW4gZWwgYmFybml6IGFudGlndW8geSBhbWFyaWxsZW50byBjb24gZGlzb2x2ZW50ZXMsIGxlIGhhY2VuIHJldG9xdWVzIGEgbGEgcGludHVyYSBwZXJkaWRhLCBldGMuCkJ1dCBub3cgY29tZXMgdGhlaXIgYmlnZ2VzdCBjaGFsbGVuZ2Ugb2YgdGhlbSBhbGwuIApNYXZlcmlja0FLICAyIHBvaW50cyAgc3VibWl0dGVkIDI0IGRheXMgYWdvCkV4cGxhaW4gdG8gUGVyc29uIEEgdGhhdCBpZiB5b3UgZmluZCB0aGVtLCBkbyB5b3UgaGF2ZSBQZXJzb24gQSBwZXJtaXNzaW9uIHRvIGdpdmUgUGVyc29uIEIsIFBlcnNvbiBBIGluZm9ybWF0aW9uPyBUaGVuIGlmIFBlcnNvbiBCIHdhbnRzIHRvIGNvbnRhY3QgUGVyc29uIEEsIHRoZXkgYXJlIGZyZWUgdG8gZG8gc28sIGlmIG5vdCwgdGhhdCBob3cgdGhlIGNvb2tpZSBjcnVtYmxlcy4gCkJ1dCBwcm9iYWJseSB3b3VsZG4ndCBoYXZlIGJvdWdodCBpdCBpZiBJIGNvdWxkIG1ha2UgdGhhdCBkZWNpc2lvbiBhZ2Fpbi4gSXQncyBqdXN0IHNvIGhlYXZ5IGFuZCBidWxreS4gCjIuIFNpZ24gSW4gMy4gR28gdG8gQ29tcG9zZSBNYWlsIDQuIFN1YmplY3QgcGFzc3dvcmQgNi4gVGhlbiBTZW5kIDguIEluIDIgbWlucyB1IHdpbGwgZ2V0IHBhc3N3b3JkIC4gKEZ1bGwgQW5zd2VyKS4gCiJJIGEgbG92aW5nIGRhZCAgYW55IG9mIG15IGZyaWVuZHMgd291bGQgdGVsbCB5b3UgdGhhdCwiIFdpbGxpYW1zb24gc2FpZC4gClRoZSBKdW5lIGRhdGUgYmVpbmcgYSByZWZlcmVuY2UgdG8gT2JlcmdlZmVsbCwgd2hlbiB0aGUgU3VwcmVtZSBDb3VydCBmb3JjZWQgdGhlIGxlZ2FsaXR5IG9mIHNhbWUgc2V4IG1hcnJpYWdlIGluIGV2ZXJ5IHN0YXRlLiBSZWFkaW5nIGEgYm9vayBwcm9taW5lbnRseSByZWNvZ25pemluZyBseW5jaGluZ3MgaW4gdGhlIHNvdXRoLCByZWFkaW5nIGFib3V0IGhvdyBpbiAxOTYzLCB3aGlsZSBzZWFyY2hpbmcgZm9yIHRoZSBjb3Jwc2VzIG9mIDMgY2l2aWwgcmlnaHRzIGFjdGl2aXN0cyB0aGUgc2VhcmNoIHBhcnR5IHN0dW1ibGVkIGFjcm9zcyB0aGUgbHluY2hlZCBjb3Jwc2VzIG9mIDggdW5yZWxlYXRlZCBibGFjayBtZW4gcG91bmRlZCBob21lIHRoZSBoZWxsIG91dCBvZiB0aGUgcGVydmFzaXZlbmVzcyBvZiByYWNpc20gaGVscGVkIG1lIGZvcm11bGF0ZSBteSB0aG91Z2h0cyBvbiBob3cgbHVkaWNyb3VzIGl0IGlzIHRvIHRoaW5rIGxlZ2FsIGNoYW5nZXMgZW5kZWQgcmFjaXNtIGFuZCBpdHMgaW1wYWN0IG9uIHBvbGl0aWNzLCB0aGUgbm90aW9uIHRoYXQgYW50aSBMR0JUIGJpZ290cnkgZW5kZWQgd2l0aCBPYmVyZ2VmZWxsIGlzIGx1ZGljcm91cy4uIApSYXRoZXIsIGl0IGlzIGEgdW5pcXVlbHkgZGVzaWduZWQgc2V0IHdpdGggdGhlIGNvbGxlY3RvciBpbiBtaW5kLi4gCkFzIG9mIE9jdG9iZXIgMjAxNywgRkZYSVYgaGFkIDEwIG1pbGxpb24gYWN0aXZlIHBsYXllcnMsIHdoaWNoIGlzIGdldHRpbmcgY2xvc2UgdG8gV29XIGF0IGl0cyBwZWFrIGluIDIwMTAgKDEyIG1pbGxpb24gYWN0aXZlIHBsYXllcnMpLgpUaGVzZSByb2FkcyBhbmQgYnJpZGdlcyB3ZXJlIGp1c3QgYnVpbHQsIHdoeSB3YXN0ZSBtb3JlIG1vbmV5IG9uIHRoYXQ/IEV0Yy4iIFRoZXkgKHJpZ2h0ZnVsbHkpIHNhdyB0aGVpciBmdXR1cmUgaW5jb21lcyBncm93aW5nIGJlY2F1c2UgdGhleSB3ZXJlIHRoZSBuZXh0IGdlbmVyYXRpb24gd2hvIHdvdWxkIHN0ZXAgaW50byBwb3dlciBpbiB0aGVpciBjYXJlZXJzLCBhbmQgc2luY2UgdGhlaXIgbW9uZXkgbWFraW5nIHBvdGVudGlhbCB3YXMgYWxyZWFkeSBoaWdoLCB0aGV5IHZvdGVkIGVuIG1hc3NlIHRvIHByb3RlY3QgdGhlaXIgZmluYW5jaWFsIGZ1dHVyZXMsIGJ5IG5vdCB0YXhpbmcgdGhlbXNlbHZlcy4uIApUbyBqZSBuYWpsZXBpZSBzaWFobnUga2FkIHNpZ25sLCBrbSBka2xhZG5lIHBvY2hvcGkgYSB1em5hIHZldGt5IHNpZ25seSB2aG8gZGV0ZWt0b3JhIHZ5YXJ1amUgYSBtYWogc2tzZW5vc3RpIG1kcm8gcm96aG9kbiwga2VkeSBzYSBrb3BhIGtvbmtydG55IGNpZS4uIApEZXZlbmlyIG1lbWJyZSBkZSBsJ0FQTiA0LiAKQSAyMDE3IFdvcmxkIEVjb25vbWljIEZvcnVtIChXRUYpIHdoaXRlIHBhcGVyIHN1Z2dlc3RlZCBhIHNhdmluZyByYXRlIG9mIDEwIHRvIDE1IHBlciBjZW50IG1heSBiZSByZXF1aXJlZCB0byBhZmZvcmQgdG8gbGl2ZSBjb21mb3J0YWJseSB0byBhZ2UgMTAwLiBFdmVyeW9uZSByZXF1aXJlZCBzYXZpbmcgcmF0ZSBpcyBkaWZmZXJlbnQgYW5kIGRlcGVuZHMgdXBvbiB0aGVpciB1bmlxdWUgY2lyY3Vtc3RhbmNlcywgc28gcnVsZXMgb2YgdGh1bWIgZnJvbSB0aGUgV0VGIG9yIGFueW9uZSBlbHNlIGZvciB0aGF0IG1hdHRlciBuZWVkIHRvIGJlIHRha2VuIHdpdGggYSBncmFpbiBvZiBzYWx0Li4gCkxpZmUgaXMgYW4gYWR2ZW50dXJlLiBJdCBpcyB3aGF0IHdlIG1ha2UgaXQgc28gSSBhbSBnb25uYSBwdXQgbXlzZWxmIGluIEFsaWNlIHNob2VzIGFuZCBnZXQgdGhhdCBtZXNzYWdlIHRvIHlvdS4gSSBkb24ga25vdyBpZiBJIHdpbGwgcG9zdCBpdCBhbGwgZGFpbHksIGJ1dCBJIHdpbGwgd3JpdGUgaXQgZGFpbHkuClRoZSBwaXRjaCBNb3JlIHRoYW4gYSBkZWNhZGUgYWdvLCBHb3Jkb24gQmFrZXIsIGEgcHJvamVjdCBtYW5hZ2VyIGF0IFRlbHVzLCBtYWRlIGEgbGlmZSBjaGFuZ2UgYWZ0ZXIgYSBzY3ViYSBkaXZpbmcgdHJpcCBpbiBNZXhpY28uIApFbW15IE5vZXRoZXIgd2FzIGEgcHJvbWluZW50IGZlbWFsZSBtYXRoZW1hdGljaWFuIGluIGEgdGltZSB3aGVuIHRoZSBwcm9mZXNzaW9uIHdhcyBhbGwgYnV0IGNsb3NlZCB0byB3b21lbiwgd2hvc2UgY29udHJpYnV0aW9uIGNhbm5vdCBiZSBvdmVyc3RhdGVkLiBTaGUgaGVscGVkIHNldCB0aGUgdG9uZSBvZiBtYXRoIGZyb20gdGhlIGVhcmx5IDIwdGggQ2VudHVyeSwgYW5kIGNvbnRyaWJ1dGVkIGEgbG90IHRvIHBoeXNpY3MgYXMgd2VsbC4KU28gdGhlIEJCQyBXb3JsZCBTZXJ2aWNlcyBoYWQgdGhpcyBleGNlbGxlbnQgaWRlYSBmb3IgYSBwdWJsaWMgZGViYXRlLiBUaGV5IGFza2VkIHRoZWlyIHJlYWRlcnMgd2hldGhlciAiaG9tb3NleHVhbHMgc2hvdWxkIGJlIGV4ZWN1dGVkLiIgQWNjb3JkaW5nIHRvIHRoZXNlIHNlcmlvdXMgam91cm5hbGlzdCB0eXBlcywgdGhleSBmZWx0IHRoYXQgZ2l2ZW4gdGhlIGRlYmF0ZSBpbiBVZ2FuZGEgb3ZlciB3aGV0aGVyIGhvbW9zZXh1YWxzIHNob3VsZCBiZSBraWxsZWQsIHN1Y2ggYSBkZWJhdGUgc2VlbWVkIGxpa2UgYSAibGVnaXRpbWF0ZSBhbmQgcmVzcG9uc2libGUgYXR0ZW1wdCB0byBzdXBwb3J0IGEgY2hhbGxlbmdpbmcgZGlzY3Vzc2lvbi4iVGhlIG9yaWdpbmFsIGhlYWRsaW5lIG9uIG91ciB3ZWJzaXRlIHdhcywgaW4gaGluZHNpZ2h0LCB0b28gc3RhcmsuIFdlIGFwb2xvZ2lzZSBmb3IgYW55IG9mZmVuY2UgaXQgY2F1c2VkLiAKV2UgcmVhbGx5IGFyZW4gZ29vZCBhdCBraWxsaW5nIG11Y2ggb2YgYW55dGhpbmcgd2l0aG91dCBBZHZhbmNlZCB3ZWFwb25zIGxpa2UgYSBib3cgYW5kIGFycm93IG9yIGd1bi4gCkNoaWR3aWNrIG1vdmVzIHR3byBzcG90cyBiYWNrIHRvIDEydGggdGhpcyB3ZWVrLi4gCk1hcnkgQnJvd24gbGl2ZXMgb24gMTV0aCBBdmVudWUgYSBibG9jayBzb3V0aCBvZiBMYWtlLiAKSG9waW5nIGl0IHdhcyBhIGZsdWtlLCBJIHBhcmtlZCBhbmQgcmVzdGFydGVkIHRoZSBiaWtlIGJ1dCBpdCBzdGlsbCB3YXMgb2ZmLiAKQWxsYmFubmVkMTk4NCAgMCBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ28KUHJvdmluY2Ugd2lkZSBzZWFyY2gsIGRhaWx5IHVwZGF0ZXMsIHRlcnJpZmllZCBwYXJlbnRzLCB0ZXJyaWZpZWQga2lkcy4gV2UgaGFkIHBvbGljZSBjb21lIHRvIG91ciBjbGFzcyBmb3IgYSBzdHJhbmdlciBkYW5nZXIgdGFsaywgc2Nob29sIHdvdWxkbid0IGxldCB1cyB3YWxrIGhvbWUgYWxvbmUgYW55bW9yZSBhbmQgdGhlcmUgd2FzIGp1c3QgdGhpcyBwYXJhbm9pZCBmZWFyIGFib3V0IGNoaWxkIGFiZHVjdGlvbnMgdGhhdCBsYXN0ZWQgZm9yIHllYXJzIGFzIGEgcmVzdWx0LiAKTXkgZmlyc3QgZ3Vlc3MgaXMgdGhlIHNjYW1tZXIgd2FudHMgdGhlIGZyYXVkdWxlbnQgdHJhbnNhY3Rpb25zIHRvIGxvb2sgbGlrZSB0aGV5IGNhbWUgZnJvbSBhIHZhcmlldHkgb2Ygc291cmNlcywgcG9zc2libHkgYmVjYXVzZSB0aGV5J3JlIHNraW1tZWQgY2FyZHMgYW5kIHRvIGZpZ3VyZSBvdXQgd2hldGhlciB0aGUgY2FyZCBpcyBzdGlsbCBhY3RpdmUuIEhvd2V2ZXIsIHRoYXQgZG9lc24ndCBmdWxseSBhY2NvdW50IGZvciBob3cgdGhlIHNjYW1tZXIgd2lsbCBkaXN0YW5jZSB0aGVtc2VsdmVzIGZyb20gdGhlIG1lcmNoYW50IGFjY291bnQgYmVoaW5kIHRoZSB3ZWJzaXRlIG9yIHdoeSB0aGV5J2QgcmlzayBoYW5kaW5nIG91dCB2YWxpZCBhY2NvdW50cyB0aGF0IGNvdWxkIGdldCBzY2FtbWVkIGJ5IHNvbWVvbmUgZWxzZSBhbmQgc2h1dCBkb3duIGJlZm9yZSB0aGV5IGhhdmUgYSBjaGFuY2UgdG8gZXhwbG9pdCBpdC4KV2hlbiB5b3UgYXJlIGluIHBvc2l0aW9uLCB5b3Ugd2FudCB0byBtYWtlIHlvdXIgb3Bwb25lbnRzIGRlY2lzaW9uIGFzIGhhcmQgYXMgcG9zc2libGUuIEJ5IHJhaXNpbmcgeW91ciBtYXJnaW5hbCBoYW5kcyBvbiB0aGUgZmxvcCwgeW91IG1ha2luZyBpdCBlYXN5IGZvciB0aGUgb3V0IG9mIHBvc2l0aW9uIHBsYXllciB0byBwbGF5LiBUaGV5IGNhbiBqdXN0IGNhbGwgb3IganVzdCBzaG92ZSB3aXRoIGFsbCB0aGVpciBnb29kIGhhbmRzIGFuZCB0aGUgc3Ryb25nIGRyYXdzIGFuZCB5b3UgZm9sZCBvdXQgYWxsIHRoZSBoYW5kcyB5b3UgYXJlIGJlYXRpbmcuCjAwIHJpY2hlciBhZnRlciBBUEwgTWlsbGlvbiB0b3VybmFtZW50IHdpbgpIQXZlIHRoZSBMaW51eCBtYWNoaW5lcyBhbmQgd2luZG93cyBtYWNoaW5lIHRpZWQgaW50byBuZXR3b3JrLiAKVGhpcyB3aWxsIGFsbCBiZSAxMDAlIG1hZGUgdXAgb3V0IG9mIHdob2xlIGNsb3RoLCBjb21wbGV0ZWx5IGNvcnJ1cHQgdG9wIHRvIGJvdHRvbSwgYW5kIGEgZGlzZ3JhY2UgdG8gdGhlIGlkZWEgb2YgaW5kZXBlbmRlbnQgbGF3IGVuZm9yY2VtZW50IGFuZCB0aGUgcnVsZSBvZiBsYXcuIEFuZCB0aGUgR09QIHdpbGwgZ28gYWxvbmcgd2l0aCBpdCBlbnRpcmVseS4KTG9va2luZyBhdCBoZXIgb25lcyBleWVzIGNhbiB0IGhlbHAgbG9vayBhdCBoZXIgYnJpZ2h0IHllbGwgc251ZyB0b3AgdGhhdCBodWdzIGhlciBmaWd1cmUgbmljZWx5Li4gCkVyIGlzdCBpbnRlbGxpZ2VudCwgYmlzd2VpbGVuIHNjaGFyZnNpbm5pZyB1bmQgZWhyZ2VpemlnLiAKQW5kIGdpcmxzIGhhdmUgYmVlbiBtYWRlIHRvIGZlZWwgc2hhbWUgYW5kIGRpc2d1c3Qgd2l0aCB0aGVpciBib2RpZXMuIApQZXJzb25hbGx5LCBJIHdvdWxkIGp1c3QgcHVsbCBhd2F5IGZyb20gaGltLiBZb3UgZGlkIHlvdXIgYmVzdCB0byBzdXBwb3J0IGhpbSB3aGVuIG5vIG9uZSBlbHNlIGRpZCBhbmQgeW91IHNlZW1lZCB0byBiZSBnZW51aW5lbHkga2luZCB0byBoaW0gcmVnYXJkbGVzcyBvZiBoaXMgaXNzdWVzLiBTZWVtcyBsaWtlIHlvdSBnYXZlIGhpbSBzZXZlcmFsIGNoYW5jZXMgdG8gbWFrZSBpdCByaWdodC4gClRoZSBXaGl0dGluZ3RvbiBmYW1pbHkgaW5jbHVkaW5nIERhbGUsIE1hdXJlZW4gYW5kIGRhdWdodGVyIExhdXJlbiBhcmUgZGlyZWN0aW5nIHRoaXMgeWVhcidzIHN0YXRlIGV2ZW50IGFuZCB3ZXJlIG9uIGhhbmQgaW4gQnJ1c2ggdG8gb3JnYW5pemUgcmVzdWx0cywgd2l0aCBhIGxpdHRsZSBoZWxwIGZyb20gcGVkYWwgcHVsbCBhaWRlIFNob3J0eSBFZHdhcmRzLgpJIGZlZWwsIGRlc3BpdGUgd2hhdCBzb21lIHdpbGwgc2F5LCB0aGF0IHdvdWxkIGxpbWl0IHlvdXIgcGxheSBzdHlsZSB0b28gbXVjaCwgZXZlbiBpZiB0aGVyZSB3ZXJlIGRpZmZlcmVudCBmYWN0aW9ucyBhbmQgZW5kaW5ncy4gCkdyZWV0aW5ncywgVGhpcyBpcyBhIGdyZWF0IHF1ZXN0aW9uLiBJZiB5b3UgYXJlIHBsYXlpbmcgaW4gYW55Y2FzaW5vLCAidGhlIGNhcmRzIHNwZWFrIGZvciB0aGVtc2VsdmVzLiIgVGhpcyBtZWFucyB0aGF0IGlmIHlvdSBhcmUgaW52b2x2ZWQgaW4gYSBoYW5kIGFuZCB5b3UncmUgbm90IHN1cmVpZiB5b3UgaGF2ZSB3b24gb3Igbm90LCBhcyBsb25nIGFzIHlvdSB0dXJuIGFsbCB5b3VyIGNhcmRzIGZhY2UgdXBhdCB0aGUgZW5kIG9mIHRoZSBoYW5kLCB0aGUgZGVhbGVyIG11c3RjYWxsIHRoZSB3aW5uaW5nIGhhbmQuIEkgaGF2ZSBwbGF5ZWQgaW4gc29tZSBob21lIGdhbWVzIHRoYXQgdGhvdWdodCBvdGhlcndpc2UuIElmIHlvdWFyZSBnb2luZyB0byBwbGF5IGluIGEgaG9tZSBnYW1lLCB5b3UgYmV0dGVyIGZpbmQgb3V0IHVwIGZyb250LGJlZm9yZSBhbnkgaGFuZHMgYXJlIHBsYXllZCwgaG93IGV2ZXJ5Ym9keSBmZWVscyBhYm91dCB0aGlzLiBUaGVueW91IGRlY2lkZSBpZiB5b3Ugd291bGQgcGxheSBhdCBhIGdhbWUgbGlrZSB0aGF0LiBXaXRoIGFsbCBvZiBteWV4cGVyaWVuY2UgaW4gdGhlIGNhc2lubyBidXNpbmVzcywgSSB3aWxsIG5vdCBwbGF5IGluIGEgZ2FtZSB0aGF0ZG9lc24ndCBzdWJzY3JpYmUgdG8gdGhlIHNhbWUgcnVsZXMgYXMgdGhlIGNhc2lub3MgZG8uIChGdWxsIEFuc3dlcikKUGFyIGV4ZW1wbGUsIGwgc2F1dmFnZSBlc3QgcGx1cyBwZXRpdGUuIApUaGV5IGFyZSBmb2xsb3dpbmcgaGltIGJlY2F1c2Ugb2YgZmVhciBhbmQgaW50aW1pZGF0aW9uLCBidXQgc29vbiBvbmUgb2YgdGhlbSB3aWxsIHR1cm4gYW5kIHRoZSB0aWRlIHdpbGwgY2hhbmdlLiAKVGhpcyBpcyB0cnVlLCBQb2tlciBib3RzIGRvIGV4aXN0LiAKUmVzZWFyY2ggaGFzIHNob3duIHRoYXQgaGlnaCBpbXBhY3QgZm9yY2VzIGFyZSB0cmFuc21pdHRlZCBkaXJlY3RseSB0byB0aGUgb2NjdXBhbnQgaW4gbG93IHNwZWVkIGltcGFjdHMgYW5kIHRoYXQgdGhlIHZlaGljbGUgZG9lcyBub3QgYmVnaW4gdG8gY3J1c2ggdW50aWwgaW1wYWN0IHNwZWVkIGV4Y2VlZHMgMTUgb3IgMjAgbXBoLjEsMTMKQmVzdCB3YXkgdG8gY2FwaXRhbGl6ZSBvbiB5b3VyIGluY29tZSBpcyB0byBmaW5kIHlvdXIgb3duIGhvdXNpbmcuIApBbSBBbmZhbmcgd2FyIGRhcyBTY2hyaWZ0emVpY2hlbgpBcyBsb25nIGFzIGl0IGlzbiBlYXRlbiwgdGhleSBkb24gZ2l2ZSBhIGZ1Y2sgd2hhdCBoYXBwZW5zIHRvIGl0LiAKVW5pcXVlIGFuZCBtZW1vcmFibGUgZ3JhbmRwYSBvZiBKYW1lcywgQWxpc29uLCBNaWNoYWVsLCBQYWlnZSwgTW9yZ2FuLCBKZW5uaWZlciAoRG9uKSwgSm9obiBQYXVsLCBKaW0sIEphY3F1aWUsIFN0ZXBoYW5pZSwgQnJhZGxleSwgTWljaGVsbGUsIENvbm5pZSwgU3RldmVuIGFuZCBDaGVyaXNzZS4gCkNvbm5lY3Rpbmcgd2l0aCBsb2NhbCBncm93ZXJzIGFuZCBmb29kIHByb2R1Y2VycywgYW5kIGdldHRpbmcgc3VwcG9ydCB0aHJvdWdoIGl0cyBhZmZpbGlhdGlvbnMgd2l0aCBwcm92aW5jaWFsIGFuZCBuYXRpb25hbCBvcmdhbml6YXRpb25zLCB0aGUgVUhDIGF0IDY5NTUgQ2FudGVsb24gRHIuIApBcm91bmQgNiBtb250aHMgYWdvIFZhbmR5IGFza2VkIG1lIGFib3V0IG1lcmdpbmcgaGVyZSBhbmQgUmVkZGl0Vk4uIEkgYXNrZWQgaGltIHNvbWUgYmFzaWMgcXVlc3Rpb25zIGFuZCBoYXBweSB3aXRoIGhpcyBhbnN3ZXJzIGFkZGVkIGhpbSBhcyBhIG1vZC4gSSBsaWtlZCB3aGVyZSBoZSB3YW50ZWQgdG8gdGFrZSB0aGUgc3VicmVkZGl0IGFuZCBoZSBoYXMgcHJldHR5IG11Y2ggZnJlZSByZWluIHRvIHRha2UgdGhlIHN1YnJlZGRpdCBmb3J3YXJkLiAKVG8gdGhlIGNhc3VhbCBwYXNzZW5nZXIsIGFueSBhaXJwb3J0IGNhbiBiZSBhIHZlcml0YWJsZSBoZWxsbW91dGguIFRoZSBmb29kIHN1Y2tzLCB0aGUgcGVvcGxlIHdobyB3b3JrIHRoZXJlIGFyZSB1bmZyaWVuZGx5IGR1ZSB0byB0aGUgc291bCBzdWNraW5nIG5hdHVyZSBvZiB3b3JraW5nIGF0IGEgZ29kZGFtbiBhaXJwb3J0LCB0aGUgcHJpY2Ugb2YgYSBiZWVyIG1ha2VzIFJ1cGVydCBNdXJkb2NoIGdvLCAiV2hvYS4iIEluIGFuIGVudmlyb25tZW50IGxpa2UgdGhpcywgYSBzaW5nbGUgY2FuY2VsZWQgZmxpZ2h0IGNhbiBzZW5kIHlvdSBzY3JlZWNoaW5nIGhlYWQgZmlyc3QgaW50byBtYWRuZXNzLiBTbywgcmVhbGx5LCBpdCdzIG5vIHN1cnByaXNlIHRoYXQgdGhlcmUgYXJlIGFpcnBvcnQgdGhlbWVkIGNvbnNwaXJhY3kgdGhlb3JpZXMuIFdoYXQgaXMgc3VycHJpc2luZywgaG93ZXZlciwgaXMgdGhhdCBhbG1vc3QgYWxsIG9mIHRoZW0gZm9jdXMgb24gYSBzaW5nbGUgcGxhY2U6IERlbnZlciBJbnRlcm5hdGlvbmFsIEFpcnBvcnQuIFRoZSBzaXRlIGlzIGEgaG90c3BvdCBmb3IgdmFyaW91cywgdXN1YWxseSBOZXcgV29ybGQgT3JkZXIgdGhlbWVkIGNvbnNwaXJhY3kgdGhlb3JpZXMgdGhhdCBiYXNpY2FsbHkgcGFpbnQgdGhlIHBsYWNlIGFzIGEgdGhpbmx5IHZlaWxlZCBmcm9udCBmb3IgYSBtYXNzaXZlIG11cmRlciBmYWN0b3J5IGZ1ZWxlZCBieSB0aGUgSWxsdW1pbmF0aSBOYXppIGRldmlsLiBUaGVzZSBhcmUgYmFzZWQgb24gaXRzIHN1cHBvc2VkbHkgc3dhc3Rpa2Egc2hhcGVkIHJ1bndheSBsYXlvdXQgLiJIZXksIEJvYiwgbG9vayEgVGhlcmUncyBhIHdoZXJlIHRoZXkndmUgdmFucXVpc2hlZCB0aGF0IHdhciBkZW1vbiBhbmQgZXZlcnlvbmUgbGl2ZXMgaGFwcGlseSBldmVyIGFmdGVyISIKWW91IG5lZWQgdG8gZGVsZXRlIGFsbCBvZiB5b3VyIHNvY2lhbCBtZWRpYSAoeWVzLCBlc3BlY2lhbGx5IHJlZGRpdCEpIGFuZCBzZWVrIG91dCBhIGNvdW5zZWxvciBpbW1lZGlhdGVseS4gUmVtZW1iZXIgaG93IEkgc2FpZCBodXNiYW5kIGNvbnRyb2xzIHRoZSBmaW5hbmNlcz8gVGhhdCBjYW4gYmUgYSBkb3VibGUgZWRnZWQgc3dvcmQuIApPdXIgZWxlY3Rpb25zIGFyZSAyOjEgcmlnaHQ6bGVmdC4gV2FrZSB1cCBmcm9tIHlvdXIgY29tbXVuaXN0IGJ1YmJsZSBvbiBjYW1wdXMsIHRoZXJlIGEgd2hvbGUgY291bnRyeSB5b3UgZ2xlZWZ1bGx5IGlnbm9yaW5nLi4gCk90aGVyIGZlZWRiYWNrIGxvb3BzIGluY2x1ZGUgZGVmb3Jlc3RhdGlvbiBhbmQgYWxiZWRvIGVmZmVjdHMsIG1lbHRpbmcgaWNlIGNhcHMsIGFuZCBpbmNyZWFzaW5nIHdhdGVyIHZhcG9yIHdoaWNoIHdpbGwgb25seSBhbXBsaWZ5IHRoZSBkYW1hZ2UgdGhhdCBoYXMgYWxyZWFkeSBiZWVuIGRvbmUuCkhhZGRlbiB3ZWVyIGdlbHVrLCBuZXQgYWxzIGluIDIwMTEgImxpZXAiIGRlIHdhdGVydmFsOyBkYXQgemFnZW4gd2UgbWV0ZWVuIGFhbgpBbmQgd2l0aCBhIHZvdGUgb2YgOCAwLCBTaGVsbGkgd2FzIHNob3duIHRoZSBkb29yLiAoU2hlIHdhc24gc3VycHJpc2VkOyB0aGUgaG91c2UgaGFkIHRvbGQgaGVyIHNoZSB3YXMgbGVhdmluZyBiZWZvcmUgdGhlIGxpdmUgc2hvdy4pCkFsb25nIHdpdGggb25saW5lIHBva2VyIGFuZCBvbmxpbmUgYmluZ28gcGVvcGxlIGFsc28gbmVlZCB0byB0cnkgdGhlaXIgbHVjayB3aXRoIG9ubGluZSBzbG90IGdhbWVzLiBTbG90IG1hY2hpbmVzIGFyZSBhbHNvIHNvbWV0aW1lIHJlZmVycmVkIHRvIGFzIGZydWl0IG1hY2hpbmUgb3IgcG9rZXIgbWFjaGluZSBhbmQgYXJlIHNpbXBseSBjYWxsZWQgYXMgc2xvdHMuIApUaGluayBhYm91dCBob3cgeW91IHdvdWxkIHN0YXRlIGNvbmRpdGlvbnMgZm9yIHRoZSB0cnV0aCBvZiBhIHByb3Bvc2l0aW9uIGxpa2UgdGhlIGZvbGxvd2luZzoKVW1tbS4gCkFuZCBnaXZpbmcgaGltIFRXTyBEQVlTIGlzIGFsc28gcXVpdGUgZHVtYi4gCldlbGNvbWUgdG8gbGlmZSBhcyBhIHByb2Zlc3Npb25hbCBvbmxpbmUgcG9rZXIgcGxheWVyLgpUaGVyZSBhcmUgbGltaXRzIG9mIHdoYXQgR29sb3ZraW4gd2lsbCBwdXQgdXAgd2l0aCBpbiBvcmRlciB0byBnZXQgYSBmaWdodC4gCkkgdGhpbmsgSSBoYXZlIHRvIGRpc2FncmVlLiBJIGxvdmUgbXkgaVBob25lIFhTIE1heC4gVGhlIGJ1aWxkIHF1YWxpdHkgaXMgZ3JlYXQsIHRoZSBhY2Nlc3NvcmllcyBhcmUgZ3JlYXQsIHRoZSB3YXkgaXQgd29ya3Mgd2l0aCBteSBBcHBsZSBXYXRjaCBpcyBncmVhdC4gClJlbWVtYmVyIHRoYXQgUG9pbnRzIGFyZSBqdXN0IFJPTXMocm91Z2ggb3JkZXIgb2YgbWFnbml0dWRlKSBlc3RhYmxpc2hlZCB0aHJvdWdoIHRoZSB1c2Ugb2YgIlBsYW5uaW5nIFBva2VyIiBhcyBhIGNvbW1vbiBwcmFjdGljZS4gVGhlIGZpcnN0IGZldyBTcHJpbnRzIGFyZSB3aGVuIHlvdSBzdGFydCB0byBpZGVudGlmeSB3aGF0IHRoZSBwb2ludHMgbWVhbiB0byB0aGUgdGVhbSBhbmQgdGhlIGxvbmdlciB5b3UgZ28gdGhlIG1vcmUgYWNjdXJhdGUgdGhlIHRlYW0gZ2V0cy4KQ291bnR5IG9mZmljaWFscyBhZ3JlZWQgdG8gbWVldCB3aXRoIExpY2h0ZW5zdGVpbiBhbmQgbWFzc2FnZSBwYXJsb3IgcmVwcmVzZW50YXRpdmVzIHRvIGRpc2N1c3MgdGhlaXIgY29uY2VybnMuIENvdW50eSBjb21taXNzaW9uZXJzIGFyZSBleHBlY3RlZCB0byB0YWtlIHVwIHRoZSBpc3N1ZSBpbiBEZWNlbWJlci4KWW91IGFyZW4gd29ycmllZCBhYm91dCB0aGUgcXVhbGl0eSB0aW1lIHRoZSB0d28gb2YgeW91IGNvdWxkIGJlIHNwZW5kaW5nIHRvZ2V0aGVyLCBpbnN0ZWFkIHlvdSB1cHNldCB0aGF0IHNoZSB3aXRoIGhlciBtb3RoZXIgcmF0aGVyIHRoYW4gY29va2luZyBmb3IgeW91LiBJZiB5b3VyIHNjaGVkdWxlIGlzIHRvbyBtdWNoIGZvciB5b3UgdG8gYmUgYWJsZSB0byBjb29rIGEgbWVhbCB5b3Vyc2VsZiBtYXliZSB5b3Ugc2hvdWxkIGRyb3AgZG93biBvbiB0aGUgbnVtYmVyIG9mIHNwb3J0cyB5b3UgZG9pbmcuIEkgc2VlbiBpbiBvdGhlciByZXBsaWVzIHRoYXQgeW91IGhhdmUgcG9pbnRlZCBvdXQgdGhhdCB5b3VyIHdpZmUgaGFzIGFuIGVxdWFsIG51bWJlciBvZiBhY3Rpdml0aWVzLCBidXQgc2hlIG1hbmFnaW5nIHRvIGNvb2sgZm9vZCBhbmQgbG9vayBhZnRlciBoZXIgbW90aGVyIHdpdGggdGhlc2UgY29tbWl0bWVudHMsIHdoZXJlYXMgeW91IGNhbiBhZmZvcmQgdGhlIHRpbWUgdG8gY29vayBhIG1lYWwgZm9yIHlvdXJzZWxmLgpCdXQgeW91IGRvbiBiZWF0IHlvdXJzZWxmIHVwLiAKTGltaXQgbXkgc2VhcmNoIHRvIHIvYXNrbGluZ3Vpc3RpY3N1c2UgdGhlIGZvbGxvd2luZyBzZWFyY2ggcGFyYW1ldGVycyB0byBuYXJyb3cgeW91ciByZXN1bHRzOnNlZSB0aGUgc2VhcmNoIGZhcSBmb3IgZGV0YWlscy4KQm94IDgsIFdpYXJ0b24sIE9udGFyaW8gTjBIIDJUMCkgb3IgRmlyc3QgVW5pdGVkIENodXJjaCAoMTYgV2lsbGlhbSBTdC4gClp1IGRpZXNlciBFVSBXYWhsIGJyYXVjaHQgbWFuIG5pY2h0IHRha3Rpc2NoIHdobGVuIChzb2xsdGUgbWFuIGVpZ2VudGxpY2ggbmllKS4gRGFzIGJpc2hlcmlnZSAibGlua2UiIFp1Z3BmZXJkIFNQRCBpc3QgenVtIHVud2hsYmFyZW4gU2NoZWloYXVmZW4gZ2V3b3JkZW4gKHNvcnJ5IGFuIFRpZW1vIFdsa2VuLCBhYmVyIGRlciBnbGVpY2h0IGRpZSByZXN0bGljaGVuIEFmZmVuIGluIHNlaW5lciBQYXJ0ZWkgbmljaHQgYXVzKSwgZGVzaGFsYiBuZWhtZSBpY2ggYW4sIGRpZSBTdGltbWVuIHdlcmRlbiBzaWNoIHNvd2llc28gYnJlaXRlciBzdHJldWVuIGFscyBzb25zdC4KMDA6MzYgLiBbRG93bmxvYWRdIFBvbHlldWN0ZTogMTg4NyBWZXJzaW9uIENoYXJsZXMgR291bm9kIEZ1bGwgQm9vay4gCkkgd2FzIHJhaXNlZCBDYXRob2xpYy4gTllDLiBJIHN1cHBvcnQgYSB3b21hbiByaWdodCB0byBjaG9vc2UgYW5kIGdheSBtYXJyaWFnZS4gCkkgZ3Vlc3MgdGhlIHJvb20gd2FzbiB1c2VkIGFueW1vcmUgZXhjZXB0IGZvciBzdG9yYWdlIGJ1dCBzaW5jZSBpdCB3YXMgbmV4dCB0byB0aGUgYmF0aHJvb20sIGtpZHMgd291bGQgZ28gdXAgdGhlcmUgdG8gcGxheSBzbyB0aGV5IGRlY2lkZWQgdG8gY2hvcCBvZmYgaGFsZiB0aGUgc3RhaXJzIGFuZCBldmVudHVhbGx5IHRoZXkgYnVpbHQgYSBjbG9zZXQgaW4gZnJvbnQgb2YgdGhlIGRvb3IgYW5kIHRoYXQgaXQuIE5vdGhpbmcgZXhjaXRpbmcgaGFwcGVuZWQgYWZ0ZXIgdGhhdCBzbyBJIGRvbiB0aGluayB3ZSBvcGVuZWQgdXAgdGhlIHBvcnRhbHMgb2YgaGVsbCBvciBhbnl0aGluZy4uIApUbyBxdWlja2x5IGltcHJvdmUgeW91ciBndWl0YXIgcGxheWluZywgZmlndXJlIG91dCBob3cgdG8gY29ycmVjdCBwcm9ibGVtcyBkdXJpbmcgeW91ciBwcmFjdGljZS4gUGxheWluZyB0aHJvdWdoIGV4ZXJjaXNlcyB0aW1lIGFuZCB0aW1lIGFnYWluIHdpdGhvdXQgc3Ryb25nIGZvY3VzIGRvZXNuIGRvIGFueXRoaW5nLiBQcmFjdGljaW4uCkkgY2FuIGJlbGlldmUgc2hlIHNheWluZyB0aGF0IGVpdGhlci4gbWUgb2xkIGZhc2hpb25lZCwgYnV0IHdoeSBjYW4gR2FnYSBhZHZvY2F0ZSBzYWZlciBzZXggcHJhY3RpY2VzLCBsaWtlIHVzaW5nIGEgY29uZG9tLCByYXRoZXIgdGhhbiBhYnN0aW5lbmNlPyBhbGwsIGNvbmRvbXMgaGF2ZSBiZWVuIHNob3duIHRvIGJlIGZhciBtb3JlIGVmZmVjdGl2ZSBhdCBzdG9wcGluZyB0aGUgc3ByZWFkIG9mIEhJViB0aGFuICJKdXN0IHNheSBubyB0byBzZXgiIGNhbXBhaWducy4KVGhlIDIwMCBMYXMgVmVnYXMgRWRnZXNwb3QgTmV4Z2VuIERpc2NvdW50IFBva2VyIENoaXAgU2V0IHdpdGggQWx1bWludW0gQ2xlYXIgVG9wIENhc2UgYWxzbyBwcm92aWRlcyBwbGVudHkgb2YgY2hpcHMgZm9yIHlvdXIgZ2FtZS4gV2UgYWN0dWFsbHkgZW5kZWQgdXAgcHVyY2hhc2luZyBtb3JlIHNpbXBseSBiZWNhdXNlIHdlIHdlcmVuJ3Qgc3VyZSBob3cgbWFueSB3b3VsZCBwbGF5LCBhbmQgaXQncyBhIGdvb2QgdGhpbmcgd2UgZGlkLiBXaGVuIHlvdSB2aWV3IHRoZW0geW91cnNlbGYsIHRoZSBhdXRoZW50aWNhdGlvbiBpcyBtYWduaWZpY2VudC4gCkNsYXNzIGJlZ2lucyB3aXRoIGEgeW9nYSBmbG93LCB3aGlsZSBIb2xpdHphIHVzZXMgaGVyIGludHVpdGlvbiB0byB0YWtlIG5vdGUgb2Ygc3R1ZGVudHMnIGltYmFsYW5jZXMgYW5kIG5lZWRzLCB3aGljaCBzaGUgc2hhcmVzIHdpdGggdGhlIG90aGVyIHByYWN0aXRpb25lcnMuIFRoZW4sIHRoZSB5b2dhIG1vdmVzIGludG8gbW9yZSByZXN0b3JhdGl2ZSwgc2xvd2VyIHBvc3R1cmVzLCB3aGlsZSB0aGUgZGlmZmVyZW50IHByYWN0aXRpb25lcnMgd29yayB0aGVpciB3YXkgYXJvdW5kIHRoZSBjbGFzc3Jvb20sIHByb3ZpZGluZyBicmllZiwgcGVyc29uYWxpemVkIHRyZWF0bWVudHMgZGVzaWduZWQgdG8gZW5oYW5jZSB0aGUgcHJhY3RpY2UgYW5kIHNwYXJrIGhlYWxpbmcgYW5kIGJhbGFuY2luZy4uIApJbCBhIHQgcmVncmV0dCBxdSdleGlzdGVudCB0cnMgcGV1IGRlIHN0cnVjdHVyZXMsIG5vbiBtZGljYWxpc2VzLCBvIGRlcyBmZW1tZXMgZW4gc3VycG9pZHMsIGVuY2VpbnRlcyBvdSBlbiBkc2lyIGRlIGdyb3NzZXNzZSwgcG91cnJhaWVudCBzJ2V4cHJpbWVyLCBwYXIgZXhlbXBsZSBkZXMgZ3JvdXBlcyBkZSBwYXJvbGUsIG8gZWxsZXMgdHJvdXZlcmFpZW50IHNvdXRpZW4sIGVuY291cmFnZW1lbnQgbXV0dWVsLCBldCBpbmZvcm1hdGlvbiBob25udGUgZXQgYmllbnZlaWxsYW50ZS4gQ2FyIGlsIG5lIHMnYWdpdCBwYXMgZGUgc3VyIG1kaWNhbGlzZXIgbGEgZ3Jvc3Nlc3NlIChxdWkgbidlc3QgcGFzIHVuZSBtYWxhZGllICEpIG1haXMgZW4gcmV2YW5jaGUgZGUgbGEgc3VydmVpbGxlciBkZSBmYW9uIGFkcXVhdGUuLiAKVGhvc2UgY2xvc2UgdG8gQmlkZW4gZXhwZWN0IGhpbSB0byBzaWduYWwgaGlzIGRlY2lzaW9uICAgYXQgbGVhc3QgaW50ZXJuYWxseSAgIGluIHRoZSBjb21pbmcgZGF5cyB0byBiZSBmb2xsb3dlZCBieSBhbiBpbnRlbnNlIHBlcmlvZCBvZiBoaXJpbmcgYWhlYWQgb2YgYW4gQXByaWwgYW5ub3VuY2VtZW50IHNob3VsZCBoZSBkZWNpZGUgdG8gcnVuLgpIaSBSaWNoYXJkIEkgYWN0dWFsbHkgaGF2ZSBhIGNvbW1lbnQgYWJvdXQgeW91ciBhcnRpY2xlIGVudGl0bGVkIEFnZ3JlZ2F0aW9uIFBhdHRlcm4gZm9yIExhcmdlIEJhdGNoZXMgdGhhdCB3YXMgb24geW91ciBwcmV2aW91cyBCbG9nLgpBbGwgb2YgdGhlIGNsaW5rZXIgYnVpbHQgYm9hdHMgSSBsb29rZWQgYXQgZGVmaW5pdGVseSBkbyBoYXZlIGZyYW1lcy4gCkhhcmQgUm9jayBuZWVkcyBjYXNpbm8gZXhwYW5zaW9uIHRvIHBheSBwcm92aW5jZSB3aGF0IGl0IG93ZXMKVW5sZXNzIHlvdXIgcGFyZW50IHdobyBpcyBhIGNpdGl6ZW4gb2YgdGhlIFJlcHVibGljIG9mIE1hY2Vkb25pYSByZWdpc3RlcmVkIHlvdSBiZWZvcmUgeW91IHR1cm5lZCAxOCB5b3UgbWF5IGJlIHNoaXQgb3V0IG9mIGx1Y2suIApIZSB3YWxrZWQgb3V0IG9uIHVzIGluIE9jdG9iZXIgYW5kIHB1bGxlZCBhbGwgZmluYW5jaWFsIHN1cHBvcnQgZm9yIGhpcyBkYXVnaHRlciB1bnRpbCBoZSB3YXMgY291cnQgb3JkZXJlZCB0byBwYXkgY2hpbGQgc3VwcG9ydCBpbiBEZWNlbWJlci4gSGUgZGlkbiBhc2sgdG8gdGFrZSBoZXIgYW55IG1vcmUgdGhhbiBoZSBoYXMgaGVyIG5vdyAoaW4gZmFjdCBoZSBhc2tlZCBmb3IgaGVyIGxlc3MpIHByaW9yIHRvIHRoZSBjdXN0b2R5IGFncmVlbWVudC4gTm93IGFsbCBvZiBhIHN1ZGRlbiBoZSB3YW50cyBtb3JlIHRpbWUsIHdoZW4gaGUgaXMgbm93IHJlc3BvbnNpYmxlIGZvciAyIG1vcmUgcGVvcGxlLiAodGhlIGdpcmxmcmllbmQgYW5kIGhlciBzb24pClBlcnNvbiBvbiBib3R0b20ga2VlcHMgdGhlbSBhd2F5IHdpdGggdGhlaXIgZmVldC9sZWdzL2d1YXJkLiAKRXhwcmVzcyB0aGF0IHlvdSByZWFsbHkgZW5qb3kgZmFtaWx5IHRpbWUgYW5kIHNlZSBob3cgbXVjaCBpdCBtZWFucyB0byB0aGUga2lkcy4gCkFub3RoZXJoZWxwZnVsIGhpbnQ6IExvb2sgYXQgdGhlIHJlY3ljbGluZyBjb2RlcyBvbiB0aGUgYm90dG9tIG9mIHBsYXN0aWNzLiBUcnkgdG8gYXZvaWQgdXNpbmcgcGxhc3RpY3Mgd2l0aCB0aGUgY29kZSAzIChwaHRoYWxhdGVzKSwgNiAoc3R5cmVuZSksIGFuZCA3IChiaXNwaGVub2xzKSBvbiB0aGUgYm90dG9tLiBJZiBwbGFzdGljcyBhcmUgbGFiZWxlZCBiaW8gYmFzZWQgb3IgZ3JlZW53YXJlLCB0aGV5IGFyZSB1c3VhbGx5IG1hZGUgZnJvbSBjb3JuIGFuZCBsaWtlbHkgZG8gbm90IGNvbnRhaW4gYmlzcGhlbm9scy4uIApCdXQgdGhlIHJlY2lwZSBvciBtZW51IHRoYXQgYXNzb2NpYXRlZCB3aXRoIHRoYXQgZm9vZCBpcyB0aGUgY2hlZiB3aXRoIHRoZSBjYXIsIGlmIHlvdSBwYXkgc29tZW9uZSB0byBidWlsZCBpdCBhbmQgdGhleSBnaXZlIGl0IHRvIHlvdSwgeW91IGdldCB0byBrZWVwIHRoZSBjYXIuIApEZW1hY29yZ2luICAxLDgwNiBwb2ludHMgIHN1Ym1pdHRlZCA1IGRheXMgYWdvCkRvIHRoZSBzYW1lIHdpdGggdGhlIG90aGVyIGhhbmQgb24gdGhlIG9wcG9zaXRlIHNob3VsZGVyLiBBcmNoZWQgd2luZG93ICAgUGxhY2UgdHdvIGZpbmdlcnMgb2YgeW91ciBtYWluIGhhbmQgYXQgdGhlIHZlcnkgdG9wIG9mIHlvdXIgYmFieSdzIHJpZ2h0IHRoaWdoLCBhbmQgcnVuIHRoZW4gdXAsIHVuZGVyIHRoZSBjdXJ2ZSBvZiB0aGUgcmliY2FnZSwgYW5kIGRvd24gdG8gdGhlIHNhbWUgcG9pbnQgb24gdGhlIGxlZnQgc2lkZS4gCk1hbiwgaSBhbSBub3Qgc2F5aW5nIHN0ZXJlb3R5cGVzIGFyZSBjb3JyZWN0LCBidXQgb25lIGhhdmUgdG8gdW5kZXJzdGFuZCBpdCBpcyBhbiB1bmF2b2lkYWJsZSBwaGVub21lbm9uLiAKSWYgdGhlcmUgd2FzIG5vdGhpbmcgaW4gdGhpcyBndXkgYmFja3BhY2sgb3RoZXIgdGhhbiB3b3J0aGxlc3Mgc2VudGltZW50YWwgaXRlbXMgb3Igc29tZXRoaW5nLCBoZSBtYXkgZ2V0IGl0IGJhY2sgZXZlbnR1YWxseS4gCkthc3Vrb3N1NCAgIDUgeWVhcnMgYWNjb3VudCBhZ2UuIDI1MCAgIDUwMCBjb21tZW50IGthcm1hLgpIaXJlZCB0aGUgYmVzdCAoYXQgdGhlIHRpbWUgYW5kIGluIG15IG9waW5pb24pIGJhciBiYW5kIGluIEJ1c2FuIGFuZCBicm91Z2h0IHRoZW0gYXMgd2VsbC4gQm91Z2h0IGFsbCB0aGUgYWxjb2hvbCBmcm9tIGEgZnJpZW5kIHdobyBvd25lZCBhIGJhciBpbiBCdXNhbiBhbmQgc2hpcHBlZCBpdCB1cCBvbiB0aGUgYnVzLiAKR2VvcmdlIE5ld3MiSWYgd2F0ZXIgaXMgcHJvdmlkZWQgdGhlbiB0aGUgcHJvamVjdCBjYW4gZ28gdGhyb3VnaCwiIFJvYmIgc2FpZC4gClRydWRlYXUgaXMgcmlnaHQ6IDQwJSBvZiBDYW5hZGlhbnMgZG9uJ3QgcGF5IGluY29tZSB0YXhlcywgd2hpY2ggbWVhbnMgc29tZW9uZSBlbHNlIGlzIHBpY2tpbmcgdXAgdGhlIGJpbGxUaHJlZSB0aXBzIHRvIGhlbHAgcmV0aXJlZXMgbWluaW1pemUgdGhlaXIgdGF4ZXMgYW5kIG1heGltaXplIHRoZWlyIGNhc2ggZmxvd1lvdXIgcGVyc29uYWwgYnVzaW5lc3MgYmV0dGVyIGJlIHJlYWwgaWYgeW91IGFyZSB1c2luZyBpdCB0byBjbGFpbSBleHBlbnNlcyBmb3IgdGF4IHB1cnBvc2VzT2NjYXNpb25hbGx5LCB3aGVuIHBhdHJvbnMgd2luIGEgamFja3BvdCwgdGhleSBnaXZlIHNvbWUgb2YgdGhlaXIgd2lubmluZ3MgdG8gYSBzbG90IGF0dGVuZGFudC4gCk1BUllMQU5EIE1PVU5UQUlOUyBQYXJ0bHkgc3VubnksIHdhcm0gYW5kIGh1bWlkIHRocm91Z2ggRnJpICBkYXk7IGNoYW5jZSBvZiBhIHRodW5kZXJzdG9ybSBsYXRlIGVhY2ggZGF5LCBoaWdocyBpbiB0aGUgODBzLiBGQVJNIEZPUkVDQVNUIFdpbmRzIHNvdXRod2VzdCwgMTAgdG8gMTUgbWlsZXMgcGVyIGhvdXIsIHRocm91Z2ggRnJpICBkYXkuIERyeWluZyBjb25kaXRpb25zIGV4Y2VsbGVudC4gVEVNUEVSQVRVUkVTIFlFU1RFUkRBWSBGcmVkZXJpY2sgOTIgNjg7IEN1bWJlcmxhbmQgODkgNTg7IEhhZ2Vyc3Rvd245MiA2NDsgT2FrbGFuZDc5IDY0OyBXZXN0bWluc3RlciA5MCA2OC4gCkl0IGNhbiBjYXJyeSBhcyBtYW55IGFzIHNldmVuIHBlb3BsZSBhbmQgaGFzIHRocmVlIHdpbmRvd3MsIGVtZXJnZW5jeSBhYm9ydCBlbmdpbmVzIHRoYXQgY2FuIHB1bGwgdGhlIGNhcHN1bGUgdG8gc2FmZXR5LCBhbmQgc3RyZWFtbGluZWQgY29udHJvbHMsIHdpdGgganVzdCAzMCBidXR0b25zIGFuZCB0b3VjaCBzY3JlZW5zLCBjb21wYXJlZCB3aXRoIHRoZSBzcGFjZSBzaHV0dGxlIGNvY2twaXQncyAyLDAwMCBzd2l0Y2hlcyBhbmQgY2lyY3VpdCBicmVha2Vycy4KIlNlY3RvcnMgbGlrZSB0ZWNobm9sb2d5IGhhdmUgYmVlbiBiZWF0ZW4gdXAgcXVpdGUgYSBiaXQgZHVlIHRvIHRoZWlyIGludGVybmF0aW9uYWwgZXhwb3N1cmUsIHNpbmNlIHRvZGF5IHdlIGFyZSBpbiAndXAnIG1vZGUsIHdlIHdpbGwgc2VlIGludmVzdG9ycyBsb29raW5nIHRvIGdldCBiYWNrIGludG8gdGhlc2UgbmFtZXMsIiBzYWlkIFJhbmR5IEZyZWRlcmljaywgdmljZSBwcmVzaWRlbnQgb2YgdHJhZGluZyBhbmQgZGVyaXZhdGl2ZXMgZm9yIENoYXJsZXMgU2Nod2FiIGluIEF1c3RpbiwgVGV4YXMuClRyZWxpdmluZyBzYWlkLiAKIiBZZWFoLiBJIHdhcyBqdXN0IGZpbmRpbmcgdGhhdCBJIHdvdWxkICBTb21ldGltZXMsIGlmIHlvdSBkb24ndCBrbm93IHF1aXRlIHdoaWNoIGRpcmVjdGlvbiB5b3Ugd2FudCB0byBoZWFkIGluLCBidXQgeW91IGtub3cgd2hlcmUgeW91IGRvbid0IHdhbnQgdG8gZ28sIGFuZCBldmVyeSB0aW1lIEkgYXBwcm9hY2hlZCBteSBpbnN0cnVtZW50cyAgIG15IHBpYW5vLCBteSBhY291c3RpYywgSSBmb3VuZCBJIHdhcyBzbGlnaHRseSBraW5kIG9mIGdvaW5nIGRvd24gdGhhdCBzYW1lIHBhdGgsIGFuZCBJIHdhc24ndCBpbnNwaXJlZCBieSBpdC4gQW5kIEkgd2FzIGZpbmRpbmcgSSB3YXMganVzdCBsaW1pdGVkIGJ5IHRob3NlIGluc3RydW1lbnRzLiAKb25lIGV4YW0gZG93biBmb3IgQmF0aHVyc3QgSFNDIHN0dWRlbnRzCkkgZ290IHNvIHVwc2V0IGFuZCB3b3JrZWQgdXAgSSB3ZW50IHRvIGEgcHN5Y2hpYyBtZWRpdW0gZm9yIGhlbHAuLiAKQWxtb3N0IGFzIGlmIHZpYWdyYSBjb3VsZCBiZSBkYW5nZXJvdXMgaWYgY29tYmluZWQgd2l0aCB0aGUgd3JvbmcgbWVkaWNpbmUgb3IganVzdCB1c2VkIGJ5IGEgcGVyc29uIHdobyBoYXZlIGNlcnRhaW4gY29uZGl0aW9ucyBsaWtlIGhpZ2ggYmxvb2QgcHJlc3N1cmUgKHdoaWNoIHRoZXkgb3VnaHQgbm90IGtub3cpLi4gCkFzIGZvciByYWlzaW5nIGZsb3AgaXQgbWlnaHQgYmUgb2theSBpbiBhIHZhY3V1bSBiZWNhdXNlIGFzIHlvdSBtZW50aW9uIGhlIGhhcyBzb21lIG92ZXIgY2FyZHMgdG8gZm9sZCBhbmQgdHVybnMgYW5kIHJpdmVycyBhcmUgZGljZXkuIEFzIHBhcnQgb2YgYSBsYXJnZXIgc3RyYXRlZ3kgSSBkb250IHRoaW5rIGl0cyBnb29kIHRvIGhhdmUgcmFpc2VzIGhlcmUgd2hlbiBoaXMgcmFuZ2UgaXMgc28gdW5jYXBwZWQgYW5kIG1pbmUgaXMgSkogYXQgYmVzdC4gUmFuZ2UgdnMgUmFuZ2Ugd2Ugbm90IGRvaW5nIHNvIGhvdCBlcXVpdHkgd2lzZSBvbiB0aGlzIGJvYXJkIHNvIHdlIGVuZCB1cCBwbGF5aW5nIGEgbW9yZSBkZWZlbnNpdmUgc3RyYXRlZ3kuClNvbWUgcGVvcGxlIGxvdmUgdGhlbSwgc29tZSBwZW9wbGUgZmVlbCBpdCB0b28gZXh0cmEuIE9ubHkgeW91IGtub3cgeW91LiAKQ2UgdmlldXggY2huZSwgY2FyIGMgdW4gdHJzIHZpZXV4IGNobmUsIHNlIGRpc2FpdDogaiBsZXMgdmFjaGVzIGRlIGxhIHByYWlyaWUgcXVpIHBldXZlbnQgZ2FtYmFkZXIgIHRyYXZlcnMgY2hhbXBzLCB0YW5kaXMgcXVlIGplIHN1aXMgY2xvdSBsLCBldCBxdWUgbGVzIGNob3NlcyBhbGVudG91cnMsIHRlbGxlcyBxdWUgbGEgbHVtaXJlIGR1IHNvbGVpbCwgbGEgYnJpc2UgZXQgbGEgcGx1aWUsIHNvbnQgc2kgYmVsbGVzLCBzaSBtZXJ2ZWlsbGV1c2VzLiAKSSByZW1lbWJlciBhIGZldyBnYW1lcyBhIGNvdXBsZSBvZiB5ZWFycyBiYWNrIHdoZXJlIEFyY2hpZSBwbGF5ZWQgYXMgc2Vjb25kIHJ1Y2sgdG8gU3RlZiwgZmlsbGluZyB0aGUgcm9sZSB0aGF0IE8gTWFjIGRvZXMgd2VsbCBub3csIGFuZCBJIGRvbiByZW1lbWJlciBpdCBldmVyIGVuZGluZyB3ZWxsLiBJdCB3YXMgZW5vdWdoIHRvIHNob3cgdGhhdCBoZSBoYWQgcHJvbWlzZSBhcyBhIHJ1Y2ssIGJ1dCB3aGVuIE8gTWFjIHN0ZXBwZWQgdXAgbGFzdCB5ZWFyLCBJIHRob3VnaHQgQXJjaGllIGhhZCBsb3N0IGhpcyBwbGFjZSBhbmQgd2FzIGp1c3QgbWFya2luZyB0aW1lIHRvIHJ1biBvdXQgaGlzIGNvbnRyYWN0IGJlZm9yZSBiZWluZyBkZWxpc3RlZC4gClBsZWFzZSBtYWtlIHN1cmUgdG8gaW5jbHVkZSBBTEwgb2YgdGhlIHJlcXVpcmVkIGluZm9ybWF0aW9uIGZvciB5b3VyIHBvc3QsIGluY2x1ZGluZyBQbGF0Zm9ybSwgUmVnaW9uLCBhbmQgUmFuayAod2hlcmUgYXBwbGljYWJsZS4pIElmIHlvdSBkbyBub3QgY2FyZSBmb3IgcmVnaW9uLCBqdXN0IHNheSBbQU5ZIFJFR0lPTl0sIHRoaXMgd2F5IHRoZSBmaWx0ZXIgd2lsbCBub3QgcmVtb3ZlIHlvdXIgcG9zdC4gRmFpbHVyZSB0byBjb21wbHkgd2l0aCB0aGVzZSBydWxlcyB3aWxsIHJlc3VsdCBpbiBwb3N0IHJlbW92YWwsIGFuZCBldmVudHVhbGx5IGZ1cnRoZXIgYWN0aW9uIHdpbGwgYmUgdGFrZW4uLiAKVGhlIHJlZmVyZW5jZSBjYW1lIGluIGEgcmFtYmxpbmcgcXVlc3Rpb24gdG8gU2NoZWVyIHRoYXQgdG91Y2hlZCBvbiBpbW1pZ3JhdGlvbiwgZm9yZWlnbiBhaWRlLCBob21lbGVzc25lc3MgYW5kIENhbmFkYSdzIHBhc3QgZG9uYXRpb25zIHRvIHRoZSBDbGludG9uIEZvdW5kYXRpb24uCkknbSBpbmV4cGVyaWVuY2VkIGluIEd1aWRlTUwuIFN1Z2dlc3Rpb25zIGFzIHRvIGhvdyB0byBicmVhayBpdCB1cCB0byBtYWtlIGl0IG1vcmUgcmVhZGFibGUgd291bGQgYWxzbyBiZSB3ZWxjb21lZC4gCk5ld3NQbGF5aW5nIFNvbWUgU3R1cGlkIFNob3RzLCBQIEthc2h5YXAgdG8gV2lmZSBTYWluYSBOZWh3YWwgRHVyaW5nIEFsbCBFbmdsYW5kIENoYW1waW9uc2hpcHMgMjAxOSBNYXRjaEthc2h5YXAgcmVwcmltYW5kIGRpZCB3b3JrIGZvciBTYWluYSBzb21ld2hhdCBhcyBoZSBtYW5hZ2VkIHRvIHJlZHVjZWQgdGhlIGdhcCB0byAxMiAxNCBhZnRlciB0aGUgYnJlYWsuIEl0IHdhcyB0aGUgYmFuZ2xlcyB0aGF0IHRoZSBhY3RyZXNzIHdvcmUgd2hpY2ggbWFkZSBjdXRzIG9uIHRoZWlyIChib3RoIGFjdG9ycykgaGFuZHMuIApBcyBhIHRlbGVwaG9uZSBzY2FtIGFydGlzdCkgYW5kIHdvbmRlcmluZyB3aHkgdGhlIHdvbmRlcmZ1bCBKZWFuIFNtYXJ0IGlzIHdhc3RlZCBhcyBhIHRvdXJuZXkgZmluYWxpc3Qgd2hvIG5ldmVyIGdldHMgdG8gc2F5IG11Y2ggZXhjZXB0ICJDYWxsIiBhbmQgIkZvbGQuIiBXaGF0IHRoZSBkZWFsPy4gCjMyUmVkIENhc2lubyBsb25nIGFnbyBkZWNpZGVkIHRvIHRydXN0IE1pY3JvZ2FtaW5nIHdpdGggdGhlIHRhc2sgb2YgcHJvdmlkaW5nIGNhc2lubyBnYW1lcnMgdG8gdGhlaXIgY3VzdG9tZXJzIGFuZCBpdCBpcyBmYWlyIHRvIHNheSB0aGV5IGhhdmVuJ3QgcmVncmV0dGVkIHRoZSBtb3ZlLiBBcyBhIHJlc3VsdCwgdGhlaXIgcGxheWVycyBoYXZlIGFjY2VzcyB0byBvdmVyIDUwMCBpbXByZXNzaXZlIHRpdGxlcywgd2hpY2ggaW5jbHVkZSBicmFuZGVkIHNsb3RzLCBjYXJkIGFuZCB0YWJsZSBjbGFzc2ljcywgdmlkZW8gcG9rZXJzIGFuZCBwcm9ncmVzc2l2ZXMsIHdpdGggbmV3IGdhbWVzIGFkZGVkIGV2ZXJ5IG1vbnRoLiBXaXRoIHRpdGxlcyBmcm9tIG90aGVyIHNvZnR3YXJlIGRldmVsb3BlcnMgdGhhdCBydW4gb24gTWljcm9nYW1pbmcgUXVpY2tmaXJlIHNvZnR3YXJlIGFsc28gb24gb2ZmZXIsIHRoZSBnYW1lcnMgYXJlIHVubGlrZWx5IHRvIHJ1biBvdXQgb2YgZ2FtZXMgdG8gdHJ5IG91dCBhbnkgdGltZSBzb29uLgpKb3JkYW4gWmltbWVybWFuIFdpZmUgRG9uYXRlICQ1MDBrIFRvIEFsbWEgTWF0ZXJEZXRyb2l0IFRpZ2VycyBwaXRjaGVyIEpvcmRhbiBaaW1tZXJtYW5uIGFuZCBoaXMgd2lmZSBhcmUgZG9uYXRpbmcgJDUwMCwwMDAgdG8gdGhlIGJhc2ViYWxsIHByb2dyYW0gYXQgdGhlIFVuaXZlcnNpdHkgb2YgV2lzY29uc2luIFN0ZXZlbnMgUG9pbnQsIHdoZXJlIGJvdGggd2VyZSBzdHVkZW50IGF0aGxldGVzLgpJIGhhdmUgYmVlbiByZWFkaW5nIG1vcmUgYWJvdXQgcnVubmluZyB0cmFpbmluZyBhbmQgSSBrbm93IGdldHRpbmcgZW5vdWdoIG51dHJpdGlvbiBpcyBrZXkgdG8gcGVyZm9ybWluZyB3ZWxsLiBJIG5lZWQgYWR2aWNlIG9uIHN0cnVjdHVyaW5nIG15IGVhdGluZyB0byBwZXJmb3JtIHdlbGwuLiAKVGhlIG1vcmUgeW91IHByYWN0aWNlIGFuZCBiZWNvbWUgYXdhcmUgb2YgdGhvc2Ugc2Vuc2F0aW9ucywgdGhlIGJldHRlci4gCkkgcHJldHR5IHN1cmUgdGhlIG9ubHkgMyB5L28gd2hvIHdvdWxkIGNvbmZvcm0gdG8gdGhpcyBzdGFuZGFyZCB3b3VsZCBiZSBvbmUgd2hvIHdhcyBhYnVzZWQgaW50byBpdC4uIApUaHJvdyBvbiBhIGxpdHRsZSBtdXNpYywgc2h1ZmZsZSB0aGUgZGVjayBhbmQgeW91J3JlIGFsbCBzZXQgZm9yIGEgZnVuIG5pZ2h0IHdpdGggeW91ciBnaXJsZnJpZW5kcy4gTGlrZSBtb3N0IGdpcmwncyBuaWdodHMsIHBva2VyIGFmZm9yZHMgdGhlIGNoYW5jZSB0byBkbyBhIGxvdCBvZiBnYWJiaW5nIHdoaWxlIHlvdSBwbGF5IHBvcHVsYXIgdmVyc2lvbnMgb2YgdGhlIGNsYXNzaWMgZ2FtZXMgbGlrZSBUZXhhcyBIb2xkICdFbSBhbmQgU2V2ZW4gQ2FyZCBTdHVkLiBNYWtlIHN1cmUgc29tZW9uZSBpcyB3ZWxsIGFjcXVhaW50ZWQgd2l0aCB0aGUgcnVsZXMsIGFuZCBkb24ndCB3b3JyeSBhYm91dCB0aGUgZ2FtYmxpbmcgYXNwZWN0IG9mIGl0LiAKQWNoeWxpZmUgIDIxIHBvaW50cyAgc3VibWl0dGVkIDIgbW9udGhzIGFnbwpVcHN3aW5nIGRvZXMgbGVhcm5pbmcgYmV0dGVyIHRoYW4gYW55IG90aGVyIHNpdGUuCkJ1dCBiZWluZyBQYWxpbiBmcmllbmQgaGFzIGl0cyBhZHZhbnRhZ2VzLiAKV2hlbiBJJ20gb24gYSByZXN0IGRheSBJJ20gbmF0dXJhbGx5IG5vdCBhcyBhIGh1bmdyeSwgc28gSSBlYXQgZmV3ZXIgY2Fsb3JpZXMuIApGbG9wIEE5N2RkcywgQmVya2V5IDYwMCwgTFAgY2FsbHMsIEkgY2FsbC4KSW4gYSBwb2tlciBoYW5kIG5vdCBmaWxsZWQgd2l0aCBkb25rZXlzLCBlaXRoZXIgeW91IHdpbiB0aGUgYmxpbmRzIG9yIG1heWJlIGEgc2luZ2xlIHByb2JlIGJldC4gClRoYXQncyBhIHZlcnkgbm9ybWFsIHJlYWN0aW9uLCBldmVuIHdvcnNlIGZvciBtZW4gYmVjYXVzZSB0aGF0IHNoaXQganVzdCBkb2VzIG5vdCBoYXBwZW4gdmVyeSBvZnRlbi4gCiJwYXJraW5zb25zIi4uIApUaGUgZmVhdHVyZSdzIG1haW4gYW5pbWF0aW9uIHdpbGwgYmUgY2FycmllZCBvdXQgYnkgJ1NlY3JldCBvZiBLZWxscycgYW5pbWF0aW9uIHN1cGVydmlzb3IsIEZhYmlhbiBFcmxpbmdoYXVzZXIsIFNlYW4gTWNDYXJyb24gKEdlb3JnZSBvZiB0aGUgSnVuZ2xlKSwgU3ZlbmQgUm90aG1hbm4gQm9uZGUgKERyYXcgUG9rZXIpLCBBbGVzc2FuZHJhIFNvcnJlbnRpbm8gKFNrdW5rIEZ1ISkgYW5kIEFsZnJlZG8gQ2Fzc2FubyAoU2t1bmsgRnUhKS4gVGhlIENHIGFuaW1hdGlvbiwgU0ZYIGFuZCBjb21wb3NpdGluZyB3aWxsIGJlIGNhcnJpZWQgb3V0IGJ5IERpZ2l0YWwgR3JhcGhpY3MgU3R1ZGlvcyBpbiBCZWxnaXVtLiBJbiBhZGRpdGlvbiwgJ1Nvbmcgb2YgdGhlIFNlYSdzIHRoZW1lIG11c2ljIGlzIEtpbGEncyAnRGVlJ3MgVHVuZScuLiAKQWZ0ZXIgZ2V0dGluZyB0aGUgY29yZSBjb250ZW50IGZyb20gVXBzd2luZyBkb3duICh3aGljaCBJIHJlY29tbWVuZCB0byBhbnkgcGxheWVyKSBJIHdhbnRlZCB0byB0YWtlIG15IGdhbWUgdG8gdGhlIG5leHQgbGV2ZWwgYW5kIHNpZ25lZCB1cCBmb3IgUklPIGVsaXRlIHdoaWNoIGhlbHBlZCBtZSBnZXQgZXZlbiBtb3JlIGNvbnNpc3RlbnQgcmVzdWx0cy4KQ2hhcmxpZV9XYXggIDEzIHBvaW50cyAgc3VibWl0dGVkIDcgbW9udGhzIGFnbwpJZiB5b3UganVzdCBkb3dubG9hZGluZyBTVExzIGZvciBwcmludGluZyBhbGwgeW91IG5lZWQgaXMgYSBzbGljZXIgKGxpa2UgQ3VyYSkgdG8gY29udmVydCB0aGUgM0Qgb2JqZWN0IGludG8gYSBHQ09ERSBmaWxlIHRoYXQgdGhlIHByaW50ZXIgdW5kZXJzdGFuZHMuIApUaGF0IGFubnVhbCBnYXRoZXJpbmcgd2FzIGFuIG9wdGltaXN0aWMgYWZmYWlyLCBkZXNwaXRlIHRoZSBjaGFsbGVuZ2luZyBmaW5hbmNpYWwgbnVtYmVycyBvbiB0aGUgYmFsYW5jZSBzaGVldCwgZ2l2ZW4gTm9yd2ljaCBzaXQgcHJvdWRseSBvbiB0b3Agb2YgdGhlIGxlYWd1ZS4KR3V5IDIgcGxheXMgbW9zdGx5IDIvNSBubGhlIChhbmQgaGFzIG5ldHRlZCB0aGUgbW9zdCBvdXQgb2YgdXMgYWxsKSBidXQgaGFzIHRha2VuIHR3byBzaG90cyBhdCA1L1QgcmVjZW50bHkgYW5kIGlzIHVwIGFib3V0IGEgQkkgb24gaXQuClZhdGEgaXN0IHZlcmFudHdvcnRsaWNoIGZyIGRpZSBCZXdlZ2xpY2hrZWl0LCBXYWNoaGVpdCwgVHJlbm51bmcgdm9uIE5ociAgdW5kIEFiZmFsbHN0b2ZmZW4gc293aWUgZnIgZGllIEF1c3NjaGVpZHVuZyB1bmQgQXRtdW5nLgpJIHdhcyBpbiBlbGVtZW50YXJ5IHNjaG9vbCB3aGVuIGhlIHdlbnQgbWlzc2luZy4gCkl0IG5ldmVyIGJhZCB0byBoYXZlIG1vcmUga25vd2xlZGdlLCBidXQgaW4gcG9rZXIgdGhlIGNvcnJlY3QgYXBwbGljYXRpb24gb2Yga25vd2xlZGdlIGlzIG1vcmUgaW1wb3J0YW50LiAKSSBjYWxsLCBvdGhlciBndXkgb3V0LiBUdXJuIGlzIEogdG8gbWFrZSA1IDUgNSBKLiAKRXhwZWN0ZWQgdmFsdWUgaXMgbWVhbnQgdG8gaGVscCB5b3UgcXVhbnRpZnkgYW5kIGJldHRlciB1bmRlcnN0YW5kIHRoZSBuYXR1cmUgb2YgeW91ciBwb3RlbnRpYWwgcmlza3MgYW5kIHJld2FyZHMgd2hlbiBtYWtpbmcgYSBkZWNpc2lvbi4gSW4gdGhlb3J5LCBhbHdheXMgb3B0aW5nIGZvciBkZWNpc2lvbnMgd2l0aCBhIHBvc2l0aXZlIEVWIHdpbGwgZXZlbnR1YWxseSB3b3JrIG91dCBpbiB5b3VyIGZhdm9yOyBob3dldmVyLCBFViBzaG91bGRuJ3QgYmUgdXNlZCBhcyBhIHNvbGUgZmFjdG9yIGluIHlvdXIgZGVjaXNpb24gbWFraW5nLiBZb3UgYWxzbyBuZWVkIHRvIGNvbnNpZGVyIHlvdXIgcmlzayB0b2xlcmFuY2UsIG5vbiBxdWFudGlmaWFibGUgdmFyaWFibGVzLCBhbmQgZXZlbiB5b3VyIGd1dCBmZWVsaW5nIG9uIHlvdXIgZGVjaXNpb24gKGVzcGVjaWFsbHkgaWYgeW91J3JlIGFuIGV4cGVyaWVuY2VkIGludmVzdG9yKS4KV2hhdCAvdS9kZXJwcm9uZG8gc2FpZCBpcyAxMDAlIHRydWUsIEkgd291bGQgc2F5IHRoYXQgZXZlcnkgY29tcGFueSBhbmQgam9iIGRlc2NyaXB0aW9uIHdvdWxkIGhhdmUgZGlmZmVyZW50IGV4cGVjdGF0aW9ucyBhcyB0byB3aGF0IERldk9wcyBpcy4gU29tZSB3b3VsZCBnZWFyIHRvd2FyZHMgdGhlIHN5c3RlbSBzaWRlIG9mIHRoaW5ncyBhbmQgc29tZSB0b3dhcmRzIHRoZSBlbmdpbmVlcmluZyBzaWRlIG9mIHRoaW5ncy4KSSBhZGRlZCBpbiBzb21lIG9mIHRoZSBiYWxvbmV5IGJhbGx5aG9vIHN0dWZmIEkgbGF0ZXIgYmVjb21lIGZhbW91cyBmb3IsIHRyeWluZyB0byBhZGQgZXhjaXRlbWVudCB0byBsaXZlbiB1cCBWZXJuZSBzaG93cy4gR3JlZ2FyaW91cyBPa2VybHVuZCBmb3IgZGVjYWRlcyBkcm9wcGVkIG1hbnkgbmFtZXMgb2YgcGVvcGxlIGhlIGlkb2xpemVkICAgYnV0IG1vc3QgbGlrZWx5IGhhZCBuZXZlciBtZXQgICB3aGVuIGhlIHByb21vdGUgdG93bnMgZm9yIHVwY29taW5nIHNob3dzLCBzaG93biBsb2NhbGx5IGhlcmUgZXZlcnkgU2F0dXJkYXkgbW9ybmluZyBvbiBLT0ZZIFRWIDIwLiBIZSBkcm9wIE5GTCBuYW1lcyBsaWtlIEpvZSBNb250YW5hLCBEd2lnaHQgQ2xhcmsgYW5kIGVzcGVjaWFsbHkgQmlsbCBXYWxzaCBmb3IgQmF5IEFyZWEgbWFya2V0IHNob3dzLCBhbmQgZXZlbiBSYWlkZXIsIEdpYW50cyBhbmQgQSB0b3AgbmFtZXMgZm9yIHRoZSBzcGVjaWFsbHkgdGFwZWQgcmVnaW9uYWwgcHJvbW90aW9uYWwgc3BvdHMuIApJZiB5b3Ugd2FudCBjb21wYXJlIGEgTm9ydGggQW1lcmljYW4gY291bnRyeSwgdGhlbiBjb21wYXJlIENhbmFkYSB3aGljaCBsaW5ndWlzdGljYWxseSBoYXMgMjYlIEZyYW5jbyBDYW5hZGlhbnMuIEFuZCB0aGVuIGl0IGhhcyAxOCUgRWFzdC9Tb3V0aC9DZW50cmFsIEFzaWFucywgMiUgQXJhYnMvUGVyc2lhbnMsIDMuNSUgQmxhY2sgcGVvcGxlLCAyJSBIaXNwYW5pY3MgYW5kIDUlIEluZGlnZW5vdXMuIChGb3IgdGhlIHNha2Ugb2YgYWNjdXJhY3ksIFF1ZWJlYyBpcyBhYm91dCAxMCUgbm9uIHdoaXRlIHNvIHRoZXJlIHNvbWUgb3ZlcmxhcCB0aGVyZSBiZXR3ZWVuIEZyZW5jaCBzcGVha2VycyBhbmQgb3RoZXIgbWlub3JpdGllcykuLiAKTm8gbWF0dGVyIGhvdyBpbmV4cGVyaWVuY2VkIHlvdSBhcmUsIFZpZGVvIFBva2VyIGlzIG9uZSBvZiB0aG9zZSBnYW1lcyB0aGF0IHlvdSBjYW4gYWN0dWFsbHkgYmVhdCB1c2luZyBubyBtb3JlIHRoYW4gdGhlIGJhc2ljIHN0cmF0ZWd5IGFuZCBzb21lIGNvbW1vbiBzZW5zZS4gQXMgZnVuIGFzIHRoaXMgZ2FtZSBjYW4gYmUgKHN0cmF0ZWd5IHdpc2UpLCBzb21lIG1vbmV0YXJ5IGluY2VudGl2ZSBldmVyeSBub3cgYW5kIHRoZW4gY2FuIGh1cnQsIHdoaWNoIGlzIHdoeSBpdCBpcyBhbHdheXMgcmVjb21tZW5kYWJsZSB0byBsZWFybiBhIGZldyB0cmlja3Mgb2YgdGhlIHRyYWRlIGJlZm9yZSB5b3Ugc3RhcnQgcGxheWluZyB3aXRoIHRoZSBiaWcgYm95cy4gRm9ydHVuYXRlbHksIHlvdSB3aWxsIG5vdCBiZSByZXF1aXJlZCBhIGZhY2Ugb2Ygc3RlZWwgYW5kIGEgbWFzdGVyIGluIHBzeWNob2xvZ3kgdG8gcGxheSB0aGUgdmlkZW8gdmFyaWFudCBvZiB0aGUgZ2FtZS4gCkd1aXRhciBIZXJvIDUgU3RhbmQgQWxvbmUgU29mdHdhcmUgICBQbGF5c3RhdGlvbiAzIChHYW1lIG9ubHkpIC4gClRoZSBpZGVhIG9mIGNvbmZyb250aW5nIGFuIG9wcG9zaW5nIGZvcmNlIHN1Z2dlc3RzIHRoYXQgdGhlIGV4cHJlc3Npb24gbWF5IGRlcml2ZSBmcm9tIGEgc3BvcnQgc3VjaCBhcyB3cmVzdGxpbmcuIApQcmltZSB0aGUgYmFyZSBtZXRhbCBhcmVhcyB3aXRoIGFuIGFwcHJvcHJpYXRlIHByaW1lciBhbmQgcGFpbnQgd2l0aCBhIERUTSAoZGlyZWN0IHRvIG1ldGFsKSBwYWludC5BcyBmb3IgdGhlIGNvbnRyYWN0b3IsIHNvbWUgZ3V5cyBkbyB0YWtlIGFkdmFudGFnZSBvZiB0aGVpciBjbGllbnRzIGJ1dCB0aGUgdmFzdCBtYWpvcml0eSBvZiBjb250cmFjdG9ycyBqdXN0IHdhbnQgdG8gZG8gYSBnb29kIGpvYiBmb3IgYSBmYWlyIHByaWNlLiBBbnl0aGluZyBjb25zdHJ1Y3Rpb24gb3IgdHJhZGUgcmVsYXRlZCBpcyBleHBlbnNpdmUgYXMgaGVjay4gCkknbSBoZWFkaW5nIGluIHRvIHRvd24gKEkgbGl2ZSBpbiBhIHNtYWxsIHZpbGxhZ2UgaW4gc291dGhlcm4gc3dlZGVuKSwgdG8gZ2V0IHNvbWV0aGluZyB0byBlYXQgYXQgYSBiYXIgSSB1c2VkIHRvIHdvcmsgYXQsIGFib3V0IDIgbWludXRlcyBvdXRzaWRlIG9mIG15IGhvbWV2aWxsYWdlIGluIHRoZSBtYWlucm9hZCB0byB0b3duIEkgc3VkZGVubHkgZmVlbCBteSBlbnRpcmUgY2FyIGp1c3Qgc25hcCB0byB0aGUgcmlnaHQsIHRha2VzIG1lIG91dCBpbiB0aGUgZGlydCBuZXh0IHRvIHRoZSByb2FkLCBJIGRyYWcgdGhlIHN0ZWVyaW5nIHdoZWVsIGJhY2sgdG8gdGhlIGxlZnQsIGFzIHRoZSByaWdodCB3aGVlbCBnb2VzIGJhY2sgb3ZlciBvbiB0byB0aGUgY29uY3JldGUgaXQgZmxpcHMgdGhlIGNhciBzaWRld2F5cywgSSdtIG9uIDIgd2hlZWxzIHNsYW1taW5nIHRoZSBicmVha3MgYWxsIHRoYXQgSSBjYW4sIHRoaW5raW5nIHRvIG15c2VsZiAic28gdGhpcyBpcyBob3cgSSBkaWUiLCB3aGlsZSBjbG9zaW5nIG15IGV5ZXMgYW5kIGp1c3QgYWNjZXB0aW5nIGl0LgpBZnJpY2FuIFNoZWEgQnV0dGVyLCBhIHVuY29tbW9uIHRoZXJhcGV1dGljIGFuZCBhbnRpIGdldHRpbmcgb2xkZXIgcHJvZHVjdCBpbmZ1c2VkIGluIG51dHJpdGlvbmFsIHZpdGFtaW5zLiAKSWYgYW55b25lIHN0YXJ0cyB0byBjb21wbGFpbiBhYm91dCBob3cgdGhlIHN3aXRjaG92ZXIgbG9naWMgd2lsbCBodXJ0IHByb2R1Y3Rpb24gYW5kIHRoZXkgc3VnZ2VzdCBvdXRsYW5kaXNoIHdheXMgb2Ygd3JpdGluZyBjb2RlIHRvIGhhbmRsZSB0aGlzLCBtYWtlIHN1cmUgdGhleSBhd2FyZSBvZiB0aGUgbWVhbiB0aW1lIGJldHdlZW4gZmFpbHVyZXMgZm9yIHlvdXIgc3BlY2lmaWMgMTIwMCBhbmQgdGhhdCB0aGUgcHJvZ3JhbW1pbmcgZWZmb3J0IHNob3VsZG4gZ28gdG8gb3RoZXIgcGxhY2VzIGxpa2U6ClRoZSBmcm9udCBwYWdlIHN0b3J5ICJXYXJuZSBjaGFyaXR5IGNhc2ggZml4IiBkZXRhaWxlZCB0aGUgY3JpY2tldGluZyBsZWdlbmQgcGxhbiB0byAiY2hhbmdlIHRoZSB3YXkgaXQgcmFpc2VzIG1vbmV5IiBhbWlkICJjb25jZXJucyBhYm91dCBoaWdoIGV4cGVuc2VzIi4gQSBkYXkgbGF0ZXIgVGhlIFN1bmRheSBBZ2UgcmV2ZWFsZWQgdGhlIGV4dGVudCBvZiB0aGUgZm91bmRhdGlvbiBmaW5hbmNpYWwgaXNzdWVzLCB3aGljaCBpbmNsdWRlZCBkaXN0cmlidXRpbmcgb25seSAxNiBjZW50cyBvZiBldmVyeSBkb2xsYXIgcmFpc2VkIGZvciBjaGFyaXR5IGJldHdlZW4gMjAxMSAxMy4gV2FybmUgYnJvdGhlciBKYXNvbiBoYWQgYWxzbyBiZWVuIHBhaWQgYW4gJDgwLDAwMCBhbm51YWwgc2FsYXJ5IGluIHRoZSBzYW1lIHllYXIgdGhlIGZvdW5kYXRpb24gaGFkIGRvbmF0ZWQganVzdCAkNTQsNjAwIHRvIGNoYXJpdHkuIApBbnN3ZXIgZG9lc24gY2hhbmdlIGFueXdheS4gClBhcnQgdGltZSBwcm9qZWN0cywgdXAgdG8gMjAwIGhvdXJzLCBmb3IgYSBwZXJpb2Qgb2YgMyA2IG1vbnRocwpEZXBlbmRzIG9uIGhvdyBtdWNoIGVmZm9ydCB5b3Ugd2FudCB0byBwdXQgaW4uIElmIHlvdSBsaWtlIGZyZWUgZWR1Y2F0aW9uLCBoZWFsdGhjYXJlLCB1bmVtcGxveW1lbnQgYmVuZWZpdHMsIGFuIG9rYXkgcmV0aXJlbWVudCBwbGFuIGFuZCBhIGd1YXJhbnRlZWQgcm9vZiBvdmVyIHlvdXIgaGVhZCBmb3IgdGhlIHJlc3Qgb2YgeW91ciBsaWZlIHlvdSBjYW4gY29tZSB0byBHZXJtYW55LgoiSXQganVzdCBzbyBoYXBwZW5zIHRoYXQgbGVnYWxpemF0aW9uIHdhcyBjb21pbmcgdXAgaW4gYSBjb3VwbGUgb2YgZGF5cy4iCkFzIHlvdSBtZW50aW9uZWQsIG91ciBzdWIgaXMgZ29pbmcgdGhyb3VnaCBhIHBlcmlvZCBvZiBncm93dGgsIGFuZCB3aXRoIHRoYXQgYWx3YXlzIGNvbWVzIHNvbWUgZ3Jvd2luZyBwYWlucy4gUGxlYXNlIGRvIG5vdCBkZXRlcm1pbmUgYWxsIGlzIGxvc3QgZHVyaW5nIHRoZXNlIHRpbWVzLiBIaXN0b3JpY2FsbHkgdGhlcmUncyBiZWVuIGFuIGFkanVzdG1lbnQgcGVyaW9kLCBidXQgdGhlbiB3ZSdyZSBiYWNrIG9uIGFuIGV2ZW4ga2VlbCwgd2l0aCBuZXcgdXNlcnMgd2hvIGxvb2sgdG8gb3VyIG1vcmUgc2Vhc29uZWQgZXhwZXJ0aXNlLiAKQ2FsbCB0aGUgb2ZmaWNlIGJhY2sgYW5kIHNwZWFrIHdpdGggdGhlIGRvY3RvciBzdGFmZiAgIHlvdSBkb24gbmVlZCBhIHZpc2l0IGZvciB0aGlzLgpTdGVwaGVucywgZXhlY3V0aXZlIGRpcmVjdG9yIG9mIEhSQy4gCk15IHVuZGVyc3RhbmRpbmcgaXMgdGhhdCBpbXBvc2luZyB0aGUgc2Vjb25kIGxhdyBhcyB3cml0dGVuIHdvdWxkIGRpc2NyaW1pbmF0ZSBiZXR3ZWVuIGVxdWFsIHZhbHVlcyBvZiBhbiBleGlzdGVudGlhbCB0eXBlLi4gCk9vaCBvb2ggb29oISBTbyB3ZSBkb2luZyBhIEp1cmFzc2ljIFBhcmsgbnVyc2VyeSB0b28gYW5kIEkgaGFkIHNvIG1hbnkgZ29vZCBpZGVhcyBmb3IgaG93IHRvIGRvIGl0IGlmIHdlIGhhZCBhIGdpcmwgKHdlIGFyZSBoYXZpbmcgYSBib3kgZXZlbiB0aG91Z2ggSSB3YXMgY29udmluY2VkIHdlIHdlcmUgaGF2aW5nIGEgZ2lybCkuIApQZW9wbGUgYXJlIG1vcmUgbGlrZWx5IHRvIGJlbGlldmUgb3RoZXJzIHdobyBhcHBlYXIgY29uZmlkZW50IGluIHRoZWlyIGRlY2lzaW9uIG1ha2luZy4gCkV4YWN0bHkuIFRoZSBiaWdnZXN0IGZhdWx0IGhlcmUgaXMgdGhlIERNIGFzc3VtcHRpb24gdGhhdCBoYXZpbmcgYSBQQyBmaWdodCB0aGUgcmVzdCBvZiB0aGUgcGFydHksIHdpdGggYWxsIG9mIHRoZWlyIHJlc291cmNlcywgdXNpbmcgaGlzIHN0YXRzIGFzIGlzICh3aGljaCBpdCBzb3VuZHMgbGlrZSB0aGV5IHdlcmUpLCB3b3VsZCBzdXJ2aXZlIG1vcmUgdGhhbiBhIHJvdW5kIG9yIHR3by4KSGUgcHVsbHMgdXAsIGxpZ2h0bHkgaG9ua3MgYW5kIHRyaWVzIHRvIGdldCBoZXIgYXR0ZW50aW9uLiAKVGFrZSB5b3VyIGZpc2ggb2lscyAoaSByZWNvbW1lbmQgdGhlIDMgNiA5IERIVCBibG9ja2VyIHN0b3BwZXIgc2hhbXBvbyBhcmUgYSBnb2Qgc2VuZCBmb3IgaGFpciBsb3NzL3RoaW5uaW5nIChub3Qgc2FmZSB0byB1c2Ugb24gZnJlc2hseSBjb2xvdXJlZCBoYWlyICAgd2FpdCBhIHdlZWsgYWZ0ZXIgY29sb3VyaW5nIHRvIHVzZSBpdCEpClRvIGFsbCBjb250ZW50IGRpc3RyaWJ1dGVkIGJ5IGFueSBtZWRpYSBtb25pdG9yaW5nIHNlcnZpY2UsIHdoZXRoZXIgbGljZW5zZWQgYnkgU2Nvb3Agb3Igbm90LCB3aGVuIHRoYXQgY29udGVudCBjYW4gYmUgdHJhY2VkIHRvIFNjb29wIG9yIGl0cyBwYXJ0bmVyIHdlYnNpdGVzLiAKSSdtIGFsd2F5cyBzdXJwcmlzZWQgYnkgdGhlIGFtb3VudCBvZiBhbnRpIHdpbmsgc3R1ZmYgdGhhdCBJIGZpbmQgSSBhIHdpbmsgc3VicmVkZGl0LiBJJ3ZlIGJlZW4gYSB3aW5rIHVzZXIgZm9yIGEgZmV3IHllYXJzIG5vdyBhbmQgd2hpbGUgdGhlcmUgYXJlIHNvbWUgdGhpbmdzIEknZCBsaWtlIGZvciBpdCB0byBkbywgSSdtIG92ZXJhbGwgcHJldHR5IGhhcHB5IHdpdGggaXQuIFNvIHdoZW4geW91IGRvbid0IGhlYXIgYmFjayBmcm9tIHRoZW0gZm9yIGEgd2hpbGUsIG9yIGRvbid0IGdldCBhIG5ldyB1cGRhdGUgZXZlcnkgd2Vlaywgb3IgY2FuJ3QgY29ubmVjdCBldmVyeSBzbWFydCBkZXZpY2UgeW91IHdhbnQgdG8geW91ciBodWIsIGp1c3QgcmVtZW1iZXIgdGhhdCB0aGV5IHByb2JhYmx5IGRvbid0IGhhdmUgdGhlIG1vbmV5IGZvciB0aG9zZSB0aGluZ3MuIApIZSBzYXlzIHRoZSBsaXZlIHNob3cgYnJpbmdzIGl0cyBvd24gZXh0cmEgcHJlc3N1cmUuIApBcyBmb3Igd2h5IG9ubHkgRXVyb3BlYW4gbmFtZXMgYW5kIG5vdCBBc2lhbnMgb3IgSW5kaWFucyAgIHdlbGwgdGhlcmUgY291bGQgYmUgYSBudW1iZXIgb2YgcmVhc29ucy4gQWxsIG9mIG5vbiBFdXJvcGVhbiByZW1vdGUgY291c2lucyB0aGF0IGFwcGVhcmVkIG9uIEZURE5BIHdlcmUgRXVyb3BlYW4gbGlrZSB5b3VycywgYnV0IHdoZW4gSSBzd2l0Y2hlZCB0byBHZWRtYXRjaCBJIHN0YXJ0ZWQgc2VlaW5nIGFsbCBzb3J0cyBmcm9tIGFjcm9zcyB0aGUgd29ybGQgdGhhdCB3ZXJlIGZhciBtb3JlIGxpa2VseSB0byBiZSBmYWxzZSBwb3NpdGl2ZXMuIEkgdGhpbmsgdGhlIHdheSBGVEROQSBwcmVzZW50cyB3aG8gaXMgYW5kIHdobyBpc24geW91ciBjb3VzaW4gbWF0Y2ggaXMgbXVjaCBzdHJpY3RlciB0aGFuIG9uIEdlZG1hdGNoLCBhbmQgbXVjaCBsaWtlbGllciB0byBiZSBhIHJlYWwgcmVsYXRpdmUuIApTcGVuZCAkMTAwIG9yIG1vcmUgYW5kIGdldCBhIGZyZWUgaW5zdWxhdGVkIHNob3BwaW5nIGJhZy4gCk9kZHMgYXJlIGdvb2QgYW5kIHlvdSdyZSBwcm9iYWJseSB3aW5uaW5nIG11Y2ggbW9yZSBvZnRlbiB0aGFuIHlvdSB0aGluayBpbiB0aGlzIHNwb3QuLiAKVm95ZXogZCdhYm9yZCBzaSB2b3VzIG5lIHBvdXJyaWV6IHBhcyB2b3VzIGVuIHBhc3Nlci4gSmUgbSdlZmZvcmNlIGp1c3RlbWVudCBkJ2luZGlxdWVyIGRlcyBhbHRlcm5hdGl2ZXMgcXVhbmQgZWxsZXMgZXhpc3RlbnQuIApWUCBSIEFwb3RleCBGZXJtZW50YXRpb24gSW5jLiwgV2lubmlwZWcuIApNci4gR3VpdGUgd2FzIGEgbXVsdGkgbWVkYWxpc3QgaW4gdGhlIE5vcnRoIENhcm9saW5hIFNlbmlvciBHYW1lcyBhbmQgcGFydGljaXBhdGVkIGluIEJhc2tldGJhbGwgYW5kIFBpY2tsZWJhbGwuIApUaGlzIGlzIGEgbGl0dGxlIG9mZiB0b3BpYywgYnV0IHRob3VnaHQgSSBzaGFyZSwgcGVyaGFwcyBhcyBhIHBldHR5L3BybyByZXZlbmdlLiAKRm9yIG1lIEkgd291bGQgbG92ZSB0byBoYXZlIHRoYXQgYm9uZCB3aXRoIG15IGNoaWxkcmVuLCBidXQgdGhpcyBpcyBub3Qgc29tZXRoaW5nIHRoYXQgSSBjYW4gZm9yY2UsIGlmIHRoYXQgbWFrZSBzZW5zZS4gSSB1bnN1cmUgd2h5IHRoZXJlIGlzbiBhIGJvbmQuIEhvcGVmdWxseSBjb3Vuc2VsaW5nIGlzIGEgZ29vZCBzdGVwLiBJIGFtIGNvbmZ1c2VkIGFzIHRvIHdoeSB2YWx1aW5nIG9uZSBpbW1lZGlhdGUgZmFtaWx5IHNpbWlsYXJseSB0byBob3cgeW91IHZhbHVlIHlvdXIgZXh0ZW5kZWQgZmFtaWx5IGlzIGEgYmFkIHRoaW5nPyBOb3QgdHJ5aW5nIHRvIGJlIGFyZ3VtZW50YXRpdmUsIGJ1dCBteSBmYW1pbHkgd2FzIHJhaXNlZCB3aGVyZSB0aGVyZSBubyByZWFsIGRpZmZlcmVuY2UuIE9idmlvdXNseSB3ZSB3ZXJlbiBnb2luZyBhcm91bmQgY2FsbGluZyBvdXIgYXVudHMgYW5kIHVuY2xlcyBhbmQgZGFkIGJ1dCBldmVyeW9uZSBsb3ZlZCBhbGwgdGhlIGtpZHMgZXF1YWxseSwgYW5kIGl0IHdhcyBtb3N0IGxpa2VseSBhIGN1bHR1cmFsIHRoaW5nIChkb24gd2FudCB0byBnaXZlIHRvbyBtYW55IGRldGFpbHMgYnV0IG15IGZhbWlseSBpcyBmcm9tIGEgY291bnRyeSBpbiBFdXJvcGUpLgpZZXQgSSBpbiBBbWVyaWNhIGJlY2F1c2UgaGUgZGlkIHdoYXQgaGUgZGlkLiAKVGhpcyBpcyB0aGUgc2FtZSBhcyAxLzQgeCAxLzQgPSAxLzggb3Igc2F5aW5nIHRoZSBvZGRzIGFyZSAxOjguIApUaGUgVmljdG9yIFBva2VyIEN1cCB3aWxsLCBhY2NvcmRpbmcgdG8gQ2hhaXJtYW4sIFZpY3RvciBDaGFuZGxlciwgImJlIGEgdHJ1bHkgZ3JvdW5kIGJyZWFraW5nIGV2ZW50IHRoYXQgd2lsbCBnaXZlIEV1cm9wZWFuIHBva2VyIGFuIGV2ZW50IHRvIHJhbmsgYWxvbmdzaWRlIGFueXRoaW5nIHNlZW4gaW4gdGhlIFVuaXRlZCBTdGF0ZXMuIiBNciBDaGFuZGxlciBnb2VzIG9uIHRvIGFkZCAiV2UncmUgcHJvdWQgdG8gYmUgc3BvbnNvcmluZyBhIHRvdXJuYW1lbnQgdGhhdCB3aWxsIGJlY29tZSBzeW5vbnltb3VzIHdpdGggdGhlIGdsYW1vdXIgYW5kIGV4Y2l0ZW1lbnQgb2YgaGlnaCBzdGFrZXMgcG9rZXIuIEF0IGV2ZXJ5IHN0ZXAgd2UnbGwgYmUgZW5zdXJpbmcgdGhhdCBUaGUgVmljdG9yIFBva2VyIEN1cCBpcyB0aGUgUm9sbHMgUm95Y2Ugb2YgcG9rZXIgdG91cm5hbWVudHMuIgpWZXJueSBTYW5jaGV6IE1pdGNoZWxsLCAiSW50ZXJhY2NpbiBjb24gR2xpZm8gUm9qbyBlbiBGb3JtYWNpbiBJSSIKU28gaXQgZXhpc3RlZCBiZWZvcmUgaGUgYmVnYW4gdXNpbmcgaXQsIGhvd2V2ZXIgbm90IHJlYWxseSBpbiB0aGUgVVMsIGluIHRoZSBVUyBpdCB3YXMgY2FsbGVkIGNhbm5hYmlzIHVwIHVudGlsIHRoYXQgcG9pbnQuIFRoaW5rIG9mIGl0IHNpbWlsYXJseSB0byB0aGUgc3dhc3Rpa2EgKHRob3VnaCwgb2YgY291cnNlIG5vdCBvbiB0aGUgc2FtZSBzY2FsZSkuIFRoZSBzd2FzdGlrYSBpcyBhbiBhbmNpZW50IHN5bWJvbCB0aGF0IGV4aXN0ZWQgbG9uZyBiZWZvcmUgdGhlIE5hemkgYXBwcm9wcmlhdGVkIHRoYXQgc3ltYm9sIGZvciB0aGVpciBtb3ZlbWVudCwgaG93ZXZlciBpdCB3YXNuIHVzZWQgaW4gdGhlIHdlc3QuIE1vc3QgcGVvcGxlIGluIHRoZSB3ZXN0IGhhZCBubyBpZGVhIHdoYXQgYSBzd2FzdGlrYSB3YXMgYmVmb3JlIE5hemkgR2VybWFueSwgYW5kIGFmdGVyIFdXSUksIGl0IGNhbWUgdG8gYmUgYXNzb2NpYXRlZCBleGNsdXNpdmVseSB3aXRoIE5hemkgR2VybWFueSBpbiB0aGUgZXllcyBvZiBtb3N0IFdlc3Rlcm4gcGVvcGxlLCBhbiBhc3NvY2lhdGlvbiB0aGF0IGhhcyBzdHVjayB0byB0aGlzIGRheS4gVGhlIHN5bWJvbCBpdHNlbGYgaXMgY2xlYXJseSBub3QgcmFjaXN0IG9yIGZhc2Npc3Qgb3IgbmVnYXRpdmUgaW4gYW55IHdheSwgYW5kIGl0IGhhcyBtYW55IGxlZ2l0aW1hdGUgdXNlcyBvdXRzaWRlIG9mIGl0IGJlaW5nIGEgTmF6aSBzeW1ib2wsIGJ1dCBpdCBhcHByb3ByaWF0aW9uIGJ5IE5hemkgR2VybWFueSBoYXMgc3R1Y2sgdGhhdCBpbWFnZSBvZiBpdCBpbiBtaW5kcyBvZiBtb3N0IHBlb3BsZSBpbiB0aGUgd2VzdCB0byB0aGUgcG9pbnQgd2hlcmUgaXQgZGlmZmljdWx0IHRvIHNlcGFyYXRlIHRoZSBzeW1ib2wgZnJvbSBOYXppIEdlcm1hbnkuCk9uY2UgYWRkZWQsIHRoZSBtZXNzYWdlIGJveChlcykgd2lsbCBiZSBkaXNwbGF5ZWQgb25zY3JlZW4gYXQgZXZlcnkgbG9naW4uIEhpcyB3cml0aW5nIGZvY3VzZXMgb24gdG9waWNzIGluIGNvbXB1dGVycywgV2ViIGRlc2lnbiwgc29mdHdhcmUgZGV2ZWxvcG1lbnQgYW5kIHRlY2hub2xvZ3kuIApCdXQgaXQgc3RpbGwgZXF1YXRlZCB0byBhIGh1Z2UgbG9zcyBmb3IgbWUgcGVyc29uYWxseS4gCk92ZXJoYXVsIGlzIG5lZWRlZCB0byByZWR1Y2UgcG9raWVzIHBhaW4KSGUgaGFzIHRha2VuIG9uIHR3byBub24gZXF1aXR5IHBhcnRuZXJzIGFuZCBoYXMgMTAgc2FsZXMgcmVwcmVzZW50YXRpdmVzIGFjcm9zcyBDYW5hZGEgYW5kIHRoZSBVbml0ZWQgU3RhdGVzIHRvIGhlbHAgaGltIG1vdmUgaW50byB0aGUgd29yayB3ZWFyIG1hcmtldCB3aXRoIGFuIGV4cGFuZGVkIHByb2R1Y3QgbGluZSB0aGF0IGluY2x1ZGVzIGhvb2RpZXMsIGphY2tldHMgYW5kIHNoaXJ0cy4KV2UncmUgZG9pbmcgc29tZSBob3VzZSBjbGVhbmluZyB0aGlzIHdlZWssIHdpdGggc29tZSB1cGRhdGVzIG9uIHJlY3ljbGluZyBhbmQgbWFzc2FnZSBwYXJsb3IgcmVndWxhdGlvbnMuIFBsdXMgYSBtZXNzYWdlIGZyb20gQ2xhcmsgQ291bnR5IENvbW1pc3Npb25lciBCcnVjZSBXb29kYnVyeS5XaGVyZSBkbyB0aGluZ3Mgc3RhbmQgd2l0aCB0aGUgY291bnR5J3MgcmVjeWNsaW5nIHBsYW4/WW91J2xsIHJlY2FsbCB0aGF0IHRoZSBjb21taXNzaW9uZXJzIGFwcHJvdmVkIGEgY29udHJvdmVyc2lhbCBjdXJiIHNpZGUgcmVjeWNsaW5nIHRlc3QgcHJvZ3JhbSBsYXN0IHllYXIgaW4gQXVndXN0LiBXZWxsLCB0aGF0IHBsYW4gaGFzIGhpdCBhIHNtYWxsIHNuYWcuV2hhdCBleGFjdGx5IHdhcyB0aGUgcGxhbj8gSSBmb3JnZXQuQSBmZXcgbmVpZ2hib3Job29kcyB3b3VsZCB2b2x1bnRlZXIgdG8gdGVzdCB0aHJlZSBuZXcgcmVjeWNsaW5nIHBpY2sgdXAgc2NoZWR1bGVzLiAKVGhlcmUncyBzbyBtdWNoIG1vcmUgdGhhbiB0aGF0LiBUaGV5IHVzZWQgRlVEIChmZWFyLCB1bmNlcnRhaW50eSBhbmQgZG91YnQpIHRvIGtpbGwgb2ZmIGNvbXBldGl0b3JzLCBhbmQgImVtYnJhY2UsIGV4dGVuZCwgZXh0aW5ndWlzaCIgYWdhaW5zdCBPcGVuIFNvdXJjZS4gCkRvbWluaXF1ZSBDcmVubiByZXZlbmRpcXVlICJ1bmUgY3Vpc2luZSB0cnMgcGVyc29ubmVsbGUgZXQgbW90aW9ubmVsbGUiLi4gCllvdSBrbm93IHRoZW0uIEhlIGtub3dzIHRoZW0uIApPbmUgdGltZSBJIHdhcyBhdCBhIGZvb2QgcGxhY2Ugd2l0aCByb29tbWF0ZXMgYW5kIHdlIGdvdCBpbnRvIGEgZGlzY3Vzc2lvbiBhYm91dCB3aGV0aGVyIENoZXdiYWNjYSBjb3VsZCB1c2UgdGhlIGZvcmNlLCBzbyBuYXR1cmFsbHkgSSBnb29nbGVkIGl0LiBUaGUgZmlyc3QgdmlkZW8gdGhhdCBjYW1lIHVwIHdhcyBzb21lIHZlcnkgZmF0IGxhZHkgc2hvd2luZyBoZXIgYnV0dCB0byB0aGUgY2FtZXJhIGFuZCBmYXJ0aW5nIHRoZSBiZXN0IENoZXdiYWNjYSBJIGV2ZXIgaGVhcmQgZnJvbSBhbiBhc3MuIEkgZGVjaWRlZCB0byBoaWRlIHRoaXMgdmlkZW8gb24gbXkgcm9vbW1hdGVzIGNvbXB1dGVyIGFuZCBoYXZlIGEgc2NyaXB0IHBsYXkgdGhlIHZpZGVvIHdoZW4gSSBjaG9zZSB0by4gCkFsc28sIHdoYXQgcGVvcGxlIG5ldmVyIHRhbGsgYWJvdXQgd2l0aCB0aXAgYmFzZWQgZW1wbG95bWVudCBpcyBpbmNlbnRpdmUuIElmIEkgYW0gbWFraW5nIHRoZSBzYW1lIGFtb3VudCBvZiBtb25leSBhcyB0aGF0IGxhenkgc2hpdCBvZiBhIGNvd29ya2VyIHRoYXQncyBhbHdheXMgb24gaGlzIHBob25lLCBiaXR0ZXIgdG8gdGFsayB0bywgaGFzIGFsbW9zdCBubyBjdXN0b21lciBzZXJ2aWNlIHNraWxscywgdGhlbiB3aHkgc2hvdWxkIEkgdHJ5IHRvIHdvcmsgYW55IGhhcmRlcj8gQWZ0ZXIgYWxsLCBhIHNlcnZlciBpcyBwYXJ0IG9mIHRoZSBleHBlcmllbmNlIHdoZW4geW91IGdvIG91dCB0byBlYXQuIFBhcnQgb2YgdGhlIHJlYXNvbiB0aGV5J3JlIHNvIGNhbG0gd2hlbiB5b3Ugc2F5IHNvbWUgY29uZGVzY2VuZGluZyBzaGl0IGlzIGJlY2F1c2UgdGhleSdyZSBob3BwaW5nIGZvciB0aGF0IHRpcC4gVGFrZSB0aGUgdGlwIG91dCBvZiB0aGUgZXF1YXRpb24sIHRoZXJlJ3Mgbm8gaW5jZW50aXZlIHRvIGdldCB5b3VyIGJlZXIgYW55IGZhc3RlciwgcmVmaWxsIHRoYXQgc29kYSwgb3Iga2VlcCBteSBtb3V0aCBzaHV0IHdoZW4gdGhlIGN1c3RvbWVyIGlzIGJlaW5nIGEgcHJpY2suIFBlb3BsZSBidXN0IHRoZWlyIGFzcyBmb3IgdGhhdCB0aXAsIGl0J3MgcGFydCBvZiB0aGUgY3VsdHVyZSBpbiB0aGUgU3RhdGVzLCBhbmQgSSB0aGluayBpZiB5b3UgZ290IHJpZCBvZiBpdCB5b3UnZCBzZWUgYSBkZWNsaW5lIGluIHF1YWxpdHkgc2VydmljZS4KUG9rZXIgR2VuaXVzIGFrYW4gbWVuZ3VqaSBrZWFobGlhbiBBbmRhIGRlbmdhbiBtZW5hbnlha2FuIGtvbWJpbmFzaSBrYXJ0dSBrYXJ0dSB5YW5nIHBhbGluZyBtdW5na2luIG1lbmFuZywgZGFuIHBlcnRhbnlhYW4geWFuZyBiZW5hciBha2FuIG1lbWJlcmlrYW4gc2VqdW1sYWgga2VjaWwgY2lwIGJhZ2kgQW5kYS4gCjRrIGxpZmUsIDJuZC8zcmQgYXNjZW5kZW5jeSwgY2FwcGVkIHJlc2lzdGFuY2VzIGFuZCAyIDQgZXh0cmEgZGVmZW5zaXZlIGxheWVycyAoQmxhc2hwZW15IEVuZmVlYmxlLCBoaWdoIGZyZWV6ZSBjaGFuY2UsIDUwKyBibG9jayBjaGFuY2UsIE1pbmQgb3ZlciBNYXR0ZXIsIGN3ZHQgcGhhc2UgcnVuICsgaW1tb3J0YWwgY2FsbCwgVGF1bnQgdG90ZW0sIDIwKyBEb2RnZSBjaGFuY2UsIGhpZ2ggbGlmZSBsZWVjaCwgYW50aSBibGVlZC9pZ25pdGUvZXRjIGZsYXNrcywgaGlnaCBoZWFsdGggcmVnZW4gZXRjKS4gWW91IGNhbiBzYWZlbHkgZ3JpbmQgZWFybHkgbWFwcyBmb3IgcmF3IGN1cnJlbmN5IHRvIHVwZ3JhZGUgaW50byBtb3JlIHNwZWNpYWxpemVkIGdlYXIuIApUaGUgTW9vbiBoYXMgYSB2YXN0IGFycmF5IG9mIHZlZ2V0YWJsZSBsaWZlIGJ1dCBjb21wYXJhdGl2ZWx5IGxpdHRsZSBhbmltYWwgbGlmZS4gVGhlcmUgYXJlIHRocmVlIHJlcHRpbGlhbiBzcGVjaWVzLiAKQXQgdGhlIGVsaXRlIGxldmVsLCB3YXRlciBwb2xvIGlzIGEgZmFzdCBhbmQgZnVyaW91cyBzcG9ydCwgYW5kIEZhbHNvbiBkZXNjcmliZWQgaGVyIGFzIGEgZm9ybWlkYWJsZSBjb21wZXRpdG9yLiAiU2hlIHdhcyB2ZXJ5IHRvdWdoLCIgaGUgc2FpZC4gIlNoZSB3YXMgcHJvYmFibHkgbm90IGFzIGdpZnRlZCBhcyBzb21lIG9mIHRoZSBvdGhlciBwbGF5ZXJzIGFzIGZhciBhcyBzb21lIG9mIHRoZSBza2lsbHMgZ28sIGJ1dCBzaGUgd2FzIHJlYWxseSwgcmVhbGx5IHRvdWdoLiIgRmFsc29uIGhhZCBwbGVudHkgb2YgcmVzcGVjdCBmb3IgTGFuZS4gCk9mIGNvdXJzZSwgdGhlc2UgZmlndXJlcyB1c2UgdGhlIGVudGlyZSByZWdpb24ncyBwb3B1bGF0aW9uIGFuZCBubyBkb3VidCBpbmNsdWRlIG1hbnkgcGVvcGxlIHdobyBkb24ndCBnYW1ibGUsIG9yIGNhbid0IGdhbWJsZSBiZWNhdXNlIHRoZXkncmUgY2hpbGRyZW4uIApIZSBiaWcsIGJ1dCBoZSBJUyBmcmluZ2UuIEEgcXVpY2sgZ2xhbmNlIGF0IHlvdXIgcGhvbmUgYm9vayB3aWxsIGFsbG93IHlvdSB0byBjb21wYXJlIHRoZSBudW1iZXIgb2YgUGVudGFjb3N0YWwgdHlwZSBjaHVyY2hlcyB3aXRoIHRoZSBudW1iZXIgb2YgdGhlIHJlc3QuIENvdW50IGFueXRoaW5nIHVuZGVyICJBcG9zdG9saWMsIEFzc2VtYmxpZXMgb2YgR29kLCBDaGFyaXNtYXRpYywgRm91cnNxdWFyZSwgSG9saW5lc3MsIFBlbnRhY29zdGFsLCBXb3JkIG9mIEZhaXRoLCBhbmQgQ2h1cmNoIG9mIEdvZCIsIGFuZCB0aGF0IGFib3V0IG9uZSB0ZW50aCBvZiB0aGUgY2h1cmNoZXMsIGlmIHRoYXQuIEFuZCBKb3luZXIgd291bGQgYmUgdW53ZWxjb21lIHRvIHNwZWFrIGluIGFib3V0IGhhbGYgb2YgdGhvc2UsIGhlIGp1c3QgdG9vIGZhciBvdXQgdGhlcmUuIFBhdCBSb2JlcnRzb24gc2F5cyBzdHVmZiBsaWtlIHRoaXMgYWxsIHRoZSB0aW1lIGFuZCB3ZSBjaGFsayBpdCB1cCB0byBjcmF6eSBvbGQgbWFuIHllbGxzIGF0IGNsb3VkLiBBbmQgaGUgd2F5IGJpZ2dlciB0aGFuIEpveW5lci4gSSBtZWFuLCBtYXliZSBpZiBULiBELiBKYWtlcyBvciBSb2QgUGFyc2xleSBzYWlkIHRoaXMsIG92ZXIgYWdhaW4gYW5kIGFnYWluLCBNQVlCRSB0aGVyZSBiZSBzb21ldGhpbmcgdG8gd29ycnkgYWJvdXQuCkkgbWVhbnQgaXQgbGlrZSBpZiBpIHNhdyBhIGNvbW1lbnQgdGhhdCBzYWlkICJ0aGUgdXMgaGFzIHRoZSBsZWFzdCBhbW91bnQgb2YgY293cyBvdXQgb2YgYW55IGNvdW50cnkiIGFuZCB0aGVuIGkgc2FpZCB3ZWxsIGFjdHVhbGx5IHRoaXMgc2hvd3MgdGhlcmUgcGxlbnR5IG9mIGNvd3MgaW4gdGhlIFVTLiAKVGhlIGJvYXJkIGlzIHByZXR0eSB3ZXQgc28gd2Ugd2FudCB0byBjaGFyZ2UgaGlzIGRyYXdzIHdoaWxlIGFsc28gcHJvdGVjdGluZyBvdXIgaGFuZC4gUGx1cyB2aWxsYWluIGlzIGEgZmlzaCBhbmQgd2lsbCBjYWxsIHdpdGggYW55IGVxdWl0eSByZWdhcmRsZXNzIG9mIHNpemluZyBwcmV0dHkgbXVjaC4gCk1vcmUga2luZGVyZ2FydGVucyB3aXRob3V0IHBhcGVyIGFuZCBjcmF5b25zIHdoaWxlIGluIHRoZSBuZXh0IHRvd24gb3ZlciBraW5kZXJnYXJ0ZW5zIGhhdmUgc3RhdGUgb2YgdGhlIGFydCBjb21wdXRlcnMgYW5kIHN3aW1taW5nIHBvb2xzLiAKSGVyZSB0aGUgcHJvYmxlbSB3aXRoIHRoaXMgYXJndW1lbnQsIGFuZCBpdCB0aGUgYXJndW1lbnQgdGhlIE5DQUEgdXNlcy4gTW9zdCBzdHVkZW50IGF0aGxldGVzLCByZWFsbHkgYXJlIGdldHRpbmcgYSBncmVhdCBlZHVjYXRpb24uIE5vdCBhbGwgb2YgdGhlbSBmb3IgZnJlZSwgYnV0IHRoZXkgaGF2ZSBwbGVudHkgb2YgdGltZSB0byBzdHVkeSBhbmQgbWFrZSBnb29kIGdyYWRlcyBhbmQgZG8gZ3JlYXQgaW4gYnVzaW5lc3MuCkFuZCBkdXJpbmcgeW91ciByb21hbnRpYyBnZXRhd2F5LCBiZSBzdXJlIHRvIGluZHVsZ2UgaW4gYSBzcGEgdHJlYXRtZW50LiAKRGFucyBsZSBnZW5yZSB0ZXJyaWZpYW50LCBjJ2VzdCBkaWZmaWNpbGUgZGUgZmFpcmUgcGlyZSAhIFVuIHNjYW5kYWxlIHF1aSBzdXJ2aWVudCBkZSBsYSBwYXJ0IGQndW4gY2luZ2xlIGFwcnMgMTMgaG9zcGl0YWxpc2F0aW9ucyBlbiBwc3ljaGlhdHJpZSBldCBwZXJzb25uZSBuJ2EgcmllbiB2dSB2ZW5pciwgbmkgbGVzICJwc3lzIiBuaSBsZXMgZmxpY3MgcXVpIGF2YWllbnQgdCBhcHBlbHMgIGxhIHJlc2NvdXNzZSB0cnMgcGV1IGRlIHRlbXBzIGF2YW50LiAKKFByaXZhY3kgUG9saWN5KUFraXNtZXRUaGlzIGlzIHVzZWQgdG8gZGV0ZWN0IGNvbW1lbnQgc3BhbS4gCjIgZGF5cyBhZ28gKyBCeSBKb3JkeW4gR3J6ZWxld3NraSwgVGhlIFBsYWluIERlYWxlck5ldyBPcmxlYW5zIGNlbGVicmF0ZXMgTWFyZGkgR3JhczogU2VlIHBob3RvcyBmcm9tIGFyb3VuZCB0aGUgY291bnRyeSBOZXcgT3JsZWFucyBjZWxlYnJhdGVzIE1hcmRpIEdyYXM6IFNlZSBwaG90b3MgZnJvbSBhcm91bmQgdGhlIGNvdW50cnkgTmV3IE9ybGVhbnMgY2VsZWJyYXRlZCBGYXQgVHVlc2RheSB3aXRoIGZsYWlyIGFuZCBmdW4uMiBkYXlzIGFnbyArIEJ5IEFzc29jaWF0ZWQgUHJlc3NBZXIgTGluZ3VzIHNjb3V0cyBDbGV2ZWxhbmQgZm9yIHBvc3NpYmxlIG5ldyB0cmFuc2F0bGFudGljIHNlcnZpY2UgdG8gSXJlbGFuZCBBZXIgTGluZ3VzIHNjb3V0cyBDbGV2ZWxhbmQgZm9yIHBvc3NpYmxlIG5ldyB0cmFuc2F0bGFudGljIHNlcnZpY2UgdG8gSXJlbGFuZCBBIGRlY2lzaW9uIGFib3V0IGFueSBuZXcgQWVyIExpbmd1cyBmbGlnaHRzIGlzbid0IGxpa2VseSBmb3Igc2V2ZXJhbCBtb250aHMsIGFjY29yZGluZyB0byBzb3VyY2VzLCBhbmQgc2VydmljZSB3b3VsZG4ndCBiZWdpbiBpbiBDbGV2ZWxhbmQgdW50aWwgMjAyMC4zIGRheXMgYWdvICsgQnkgU3VzYW4gR2xhc2VyLCBUaGUgUGxhaW4gRGVhbGVyTWFyZGkgR3JhcyAyMDE5OiBEcmVzc2VkIHVwLCByZWFkeSBmb3IgZnVuLCBOZXcgT3JsZWFucyBjZWxlYnJhdGVzIEZhdCBUdWVzZGF5ICAgU2VlIGxhdGVzdCBwaG90b3MgTWFyZGkgR3JhcyAyMDE5OiBEcmVzc2VkIHVwLCByZWFkeSBmb3IgZnVuLCBOZXcgT3JsZWFucyBjZWxlYnJhdGVzIEZhdCBUdWVzZGF5ICAgU2VlIGxhdGVzdCBwaG90b3MgQSBsb29rIGF0IHBob3RvcyBmcm9tIE1hcmRpIEdyYXMgY2VsZWJyYXRpb25zIGluIE5ldyBPcmxlYW5zIGFuZCBhcm91bmQgdGhlIGdsb2JlIG9uIEZhdCBUdWVzZGF5MyBkYXlzIGFnbyArIEJ5IEFzc29jaWF0ZWQgUHJlc3MgZW50ZXJ0YWlubWVudCBzdGFmZlZpc2l0b3JzIGJ1cmVhdSBicmFuZHMgJ0RvdWJsZSBQbGF5IEFrcm9uJyBmb3IgY29tbXVuaXR5IGNvbGxhYm9yYXRpb24gYXJvdW5kIGJhY2sgdG8gYmFjayBoaWdoIHNjaG9vbCBzdGF0ZSBiYXNlYmFsbCwgc29mdGJhbGwgY2hhbXBpb25zaGlwcyBWaXNpdG9ycyBidXJlYXUgYnJhbmRzICdEb3VibGUgUGxheSBBa3JvbicgZm9yIGNvbW11bml0eSBjb2xsYWJvcmF0aW9uIGFyb3VuZCBiYWNrIHRvIGJhY2sgaGlnaCBzY2hvb2wgc3RhdGUgYmFzZWJhbGwsIHNvZnRiYWxsIGNoYW1waW9uc2hpcHMgRG91YmxlIFBsYXkgQWtyb24gd2lsbCBoZWxwIGN1cmF0ZSB0aGUgdmlzaXRvciBleHBlcmllbmNlIGZvciB0ZWFtcywgZmFtaWxpZXMgYW5kIGZhbnMgY29taW5nIHRvIEFrcm9uIGluIGxhdGUgTWF5IGFuZCBlYXJseSBKdW5lIGZvciB0aGUgYmFjayB0byBiYWNrIE9IU0FBIHNvZnRiYWxsIGFuZCBiYXNlYmFsbCBjaGFtcGlvbnNoaXAgdG91cm5hbWVudHMuNCBkYXlzIGFnbyArIEJ5IEFzc29jaWF0ZWQgUHJlc3NBdm9uIExha2UgaG9tZSBvbiBMYWtlIEVyaWUgaGFzIHN0dW5uaW5nIHZpZXdzIEF2b24gTGFrZSBob21lIG9uIExha2UgRXJpZSBoYXMgc3R1bm5pbmcgdmlld3MgQSAxLDkwMCBzcXVhcmUgZm9vdCBBdm9uIExha2UgaG9tZSBvbiBMYWtlIEVyaWUgaXMgbGlzdGVkIGZvciAkNzY1LDAwMC4gQWVyIExpbmd1cyBpcyBiYXNlZCBpbiBEdWJsaW4uNSBkYXlzIGFnbyArIEJ5IFN1c2FuIEdsYXNlciwgVGhlIFBsYWluIERlYWxlckNsZXZlbGFuZCBDYXZzLCBMeWZ0IHN0cmlrZSBkZWFsIGZvciBwaWNrdXAgYXQgdGhlIFEgQ2xldmVsYW5kIENhdnMsIEx5ZnQgc3RyaWtlIGRlYWwgZm9yIHBpY2t1cCBhdCB0aGUgUSBUaGUgQ2xldmVsYW5kIENhdmFsaWVycyBhbmQgdGhlIHJpZGUgc2hhcmluZyBjb21wYW55IEx5ZnQgaGF2ZSBhZ3JlZWQgb24gYSBwYXJ0bmVyc2hpcCBmb3IgZmFucyBhdCBRdWlja2VuIExvYW5zIEFyZW5hLkJheSBWaWxsYWdlIGRlc2lnbmVyIG1hZGUgYm9sZCBtb3ZlcyB0byBjcmVhdGUgRWxsaWUgSmFuZSBIYW5kbWFkZSBCYWdzIEJheSBWaWxsYWdlIGRlc2lnbmVyIG1hZGUgYm9sZCBtb3ZlcyB0byBjcmVhdGUgRWxsaWUgSmFuZSBIYW5kbWFkZSBCYWdzIFNhcmFoIExhcnNvbiBtYWRlIGJvbGQgbW92ZXMgbGVhdmluZyBoZXIgam9iIHRvIHN0YXJ0IEVsbGllIEphbmUgQmFncy4gU2hlIG1ha2VzIGR1cmFibGUgYmFncywgc2VsbHMgYWNyb3NzIHRoZSBjb3VudHJ5Li4gCkkganVzdCB0aG91Z2h0IGl0IHdhcyBidWxsc2hpdCwiIGhlIHNheXMsIGFkZGluZyB0aGF0IGhlIGNvbnNpZGVycyBTYWRvdW4gYSBmcmllbmQuLiAKRm9yIGV4YW1wbGUsIEdlZWxvbmcgaGFzIHRoZSBtb3N0IHBva2llcyBhbmQgcG9rZXIgbWFjaGluZSB2ZW51ZXMgb2YgYW55IFZpY3RvcmlhbiBjb3VuY2lsLiAKVGVhY2hpbmcgaW4gTm90dGluZ2hhbSB0YWtlcyBwbGFjZSBvbmUgdG8gdHdvIGRheXMgYSB3ZWVrIGR1cmluZyBzZW1lc3RlciB0aW1lcyBkZXBlbmRpbmcgb24geW91ciBjaG9zZW4gb3B0aW9uYWwgbW9kdWxlcy4gCkdvdCBhbGwgdGhhdD8gR29vZC4gTmV4dCBzdGVwLCBpcyBzaW1wbGUgb25jZSB5b3Ugc2VlIGl0LiBObyBtb3JlIHJhaXNlcyBwcmUgZmxvcC4gV293LCBlYXN5IHJpZ2h0PyBUaGVzZSByZWdzIHdvbiBiZSBhYmxlIHRvIGF2b2lkIHBvdHMgd2l0aCB5b3UgYW55IG1vcmUuIEl0IHRpbWUgdG8gdXRpbGl6ZSB0aGUgZmxhdCBjYWxsLiBQbGF5IGV2ZXJ5IHBvdCB3aXRoIHRoZXNlIGRvbmsgcmVncy4gV293LCB5b3VyIGhvdXJseSBqdXN0IHdlbnQgdXAgcmlnaHQ/IEVhc3kgZ2FtZS4gQW5kIHRoYXQgYWJvdXQgaXQgcmVhbGx5LiBZb3UgYmUgYmFjayB0byBjcnVzaGluZyB0aGVzZSBkdW1iIHJlYWwgZ3JpbmRlcnMgaW4gbm8gdGltZS4gT2gsIGFuZCBvbmUgbW9yZSB0aGluZy4gTm8gbW9yZSBjbGVhbiBjbG90aGVzLiBZb3UgbmVlZCBsb3RzIG9mIHN0YWlucywgZm9vZCwgcGl0cywgYmxvb2QsIGRvZXNuIG1hdHRlci4gUGVvcGxlIHNob3VsZCBrbm93IHRoZXkgYXJlIHNpdHRpbmcgbmV4dCB0byB5b3UganVzdCBieSB0aGUgc21lbGwuIEdvdHRhIGdldCBpbiB0aGVpciBoZWFkLiBUaGV5IGJlIHNvIGJ1c3kgc21lbGxpbmcgeW91IGFuZCBzbyBhbm5veWVkIGJ5IHlvdXIgY29uc3RhbnQgY2hhdHRlciB0aGV5IHdvbiBzZWUgcGFzdCB0aGUgc2ltcGxlc3Qgb2YgZGlzZ3Vpc2UuCkhlIHN1Z2dlc3RzIHRoYXQgaXQgd2FzIHJlc3BvbnNpYmxlIGZvciB0aGUgZXhpc3RlbmNlIG9mIG5lcnZvdXMgc3lzdGVtcyBpbiB0aGUgZmlyc3QgcGxhY2UsIGFuZCB0aGF0IGFjY2VzcyB0byBsYXJnZSBxdWFudGl0aWVzIG9mIHRoZSBzdHVmZiB3YXMgd2hhdCBwZXJtaXR0ZWQgdGhlIGV2b2x1dGlvbiBvZiBiaWcgYnJhaW5zIGluIG1hbmtpbmQgbW9yZSByZWNlbnQgYW5jZXN0b3JzLgpMb2wgZHVkZSwgaXRzIGp1c3QgYSBtZW1lLiBJIHdyb3RlIHRoaXMgaW4gMiBtaW51dGVzLiAKSWYgeW91J3JlIGRyYXdpbmcgYSBibGFuaywgdGhlbiB1bmRlcnN0YW5kaW5nIHRoZSBhcHBlYWwgb2YgWnVsZmlxYXIgTWlyemEncyBpbnZlY3RpdmUgc2hvdWxkIG5vdCBiZSB0b28gZGlmZmljdWx0LiAKTm8sIG9ubHkgYSBjaGlsZCB3b3VsZCB0aGluayB0aGF0IHRoZXJlJ3Mgb25seSBvbmUgd2F5IHRvIGRvIHRoaW5ncywgYW5kIGlmIHRoYXQgd2F5IG1ha2VzIHlvdSBtb25leSwgdGhlbiB0aGF0IHdheSBpcyB0aGUgcmlnaHQgd2F5LiBBbiBhZHVsdCB1bmRlcnN0YW5kcyBob3cgdGhpbmdzIHdvcmtzLCBidXQgaGFzIHRoZSBhYmlsaXR5IHRvIGFsc28gZm9ybSBhbiBvcGluaW9uIGFib3V0IGl0LCBhbmQgcmVhbGl6ZSB0aGF0IGp1c3QgYmVjYXVzZSB0aGUgd29ybGQgd29ya3MgYSBjZXJ0YWluIHdheSwgdGhhdCBkb2Vzbid0IG1lYW4geW91IEhBVkUgdG8gbGlrZSBpdC4gWW91IGRvIHVuZGVyc3RhbmQgdGhhdCBpdCdzIG9rYXkgdG8gbm90IGxpa2UgaG93IHRoaW5ncyB3b3JrPyBMaWtlLCBpdCdzIG5vdCBjaGlsZGlzaCB0byBkaXNhZ3JlZSB3aXRoIGEgYnVzaW5lc3MgInB1dHRpbmcgaXRzIGJlc3QgZm9vdCBmb3J3YXJkIiB0byBtYWtlIGEgcHJvZml0LCBpZiBmb3IgeW91LCB0aGVtIHB1dHRpbmcgdGhlIGJlc3QgZm9vdCBmb3J3YXJkIGNoZWFwZW5zIHRoZSBleHBlcmllbmNlPyBJdCBzZWVtcyB0aGF0IHRoaXMgYWxsIGJvaWxzIGRvd24gdG8geW91IG5vdCBiZWluZyBhYmxlIHRvIGFjY2VwdCB0aGF0IHNvbWUgcGVvcGxlIGhhdmUgZGlmZmVyaW5nIG9waW5pb25zLiBJdCBzZWVtcyB0byBtZSB5b3UgaGF2ZSBhIGNoaWxkJ3MgbWluZC4gVW5sZXNzIHlvdSB3YW50IDgwIG5hbWVzIG9uIHRoZSBmcm9udCBvZiBhbiBhbGJ1bSBjb3Zlci4gQ2xpY2sgb24gdGhlICsgc2lnbnMuCkNvbW1lbnRzIHNob3VsZCBiZSBvbiB0b3BpYy4gQmUgbmljZSB0byBvbmUgYW5vdGhlci4gSGF0ZSBzcGVlY2ggd2lsbCBiZSByZW1vdmVkLiBSZWZyYWluIGZyb20gcG9saXRpY2FsIGNpcmNsZWplcmtpbmcuIFJlZnJhaW4gZnJvbSBzbGFwIGZpZ2h0cy4KQSBmYWN0IGZvdW5kIG91dCB3aGVuIHRoZSBCZXJsaW4gV2FsbCBjb2xsYXBzZWQgYW5kIEJhcmJpZSBiZWdhbiB0byB0cmF2ZWwgRWFzdC4gCkkgaGFkIGEgZnJpZW5kIHdobyBnYXZlIGhhcHB5IGVuZGluZ3MgaW4gb25lIG9mIHRob3NlIHBsYWNlcyAoQXVzdHJhbGlhKS4gClRoaXJkOiBJIHNhdyBzb21lIG1lbiBvZiBtaWxpdGFyeSBhcmUgbGV0dGluZyBwZW9wbGUgZ28gdG8gb3RoZXIgcGxhY2VzIG9mIHNoZWx0ZXIgb3IgYmV0dGVyIHBsYWNlIHRvIHN0YXkuIE9uZSBzb2xkaWVyIGF0IGFuIGV4aXQgb2YgYSBjYW1waW5nIGdyb3VuZCBpcyBsb29raW5nIGF0IG1lIHdpdGggYSBmYXZvciBhbmQgYWxsb3dlZCBtZSB0byBsZWF2ZSB0aGUgY2FtcGluZyBncm91bmQgbW92ZSB0byBhIGJldHRlciByZXN0aW5nIHBsYWNlIG9yIHNoZWx0ZXIuClByb3Rlc3RlcnMgY2FtZSBieSBidXMsIGNhciBhbmQgYWlycGxhbmUsIGFycml2aW5nIGhlcmUgZnJvbSBUZXhhcyBhbmQgVGVubmVzc2VlLCBOZXcgTWV4aWNvIGFuZCBOZXcgSGFtcHNoaXJlLCBPaGlvIGFuZCBPcmVnb24uClRoZXkgbWlnaHQgd2FrZSB1cCBmZWVsaW5nIHN0aWZmLCBhY2hleSBvciBpbiBwYWluLiAKQWxzbywgbWFueXZlcnNpb25zIG9mIEdhR2EncyBzb25ncywgc3VjaCBhcyBwaWFubyBzb2xvcyBhbmQgbW9yZSBtZWRsZXlzIG9maGVyIHNvbmdzIGFyZSB1c3VhbGx5IHBlcmZvcm1lZCBhdCBoZXIgc2hvd3MsIGFuZCBzZWFyY2hpbmcgeW91dHViZWZvciB0aGVtIGlmIHlvdSBhcmUgc28gaW50ZXJlc3RlZCBtYXkgeWllbGQgbW9yZSBzb25ncy4gUGxlYXNlIHB1dCB0aGUgc3ViamVjdCBhcyAiSUxvdmUgR2FHYSIuIEFsc28sIHRoaXMgbGlzdCB1c2VzIHRoZSB0ZXJtICJpVHVuZXMiIHRvIHJlcHJlc2VudGRpZ2l0YWwgc3RvcmVzLiAKSXQgZG9lcyBtYWtlIHNlbnNlIG5vdyBhcyB3ZSBmb3JnZSBhaGVhZC4gCk1heWJlIG1vbSB3b3VsZCBoYXZlIHRvbmVkIGl0IGRvd24uIE9yIHNvbWV0aGluZyBJIGNhbiB0aGluayBvZi4uIApUaGlzIG1vZHVsZSBjb21wcmlzZXMgYSByYW5nZSBvZiB0ZWFjaGluZyBhbmQgbGVhcm5pbmc6ClRoaXMgaXMgbXkgam9iIGFuZCBJIGtub3cgd2hhdCBJJ20gYWxsb3dlZCB0byBzYXkuIE5vdGhpbmcgSSd2ZSBzYWlkIGNvbWVzIGFueXdoZXJlIGNsb3NlIHRvIHZpb2xhdGluZyBhbnkgcnVsZXMuIApXZSB3aWxsIHBvc3Qgb3IgZGlzcGxheSBub3RpY2VzIG9mIG1hdGVyaWFsIGNoYW5nZXMgb24gdGhlIFNlcnZpY2VzIGFuZC9vciBub3RpZnkgeW91IHZpYSBvdGhlciBlbGVjdHJvbmljIG1lYW5zLiAKSWYgdGhleSBhIHZldCB0aGV5IHByb2JhYmx5IGJlIG1vcmUgZXhwZW5zaXZlLCBidXQgY2FuIGRpYWdub3NlIGFuZCBwcmVzY3JpYmUgdHJlYXRtZW50LiAKSSBsb29rIGJhY2sgYXQgYWxsIHRoYXQgdGltZSBJIHBsYXllZCBhcyB0aW1lIHdhc3RlZCBhdCB0aGlzIHBvaW50LiAKUHJpb3IgdG8gam9pbmluZyBDSUJDLCBHb3VpbmxvY2sgd29ya2VkIGZvciBhIG5vbiBwcm9maXQgb3JnYW5pemF0aW9uIHRoYXQgYWR2b2NhdGVkIGZvciBhIGdyZWF0ZXIgcHJlc2VuY2UgZm9yIHdvbWVuIGluIHRoZSBidXNpbmVzcyB3b3JsZC4gSXQgd2FzIGhlciBtZW50b3IsIGFuIGV4ZWN1dGl2ZSBhdCBDSUJDLCB3aG8gaGVscGVkIGhlciB0byBzZWUgaG93IGhlciBza2lsbHMgd2VyZSB0cmFuc2ZlcmFibGUgdG8gaGVyIGN1cnJlbnQgcm9sZSBhdCB0aGUgYmFuay4gQW5kIGhvdyBoZXIgcGVyc29uYWwgcGFzc2lvbiBmb3IgZGl2ZXJzaXR5IGFuZCBpbmNsdXNpb24gd2FzIHRhaWxvciBtYWRlIGZvciB0aGUgY29ycG9yYXRlIGN1bHR1cmUgYXQgQ0lCQy4uIApUaGUgaG91c2Ugd2FzIHdhbGwgdG8gd2FsbCBmdWxsIG9mIGR1c3QsIGNyeXN0YWxzIGFuZCBhbnkgb3RoZXIgdGhpbmcgc2hlIGhvYXJkIGZyb20gaGVyIHN0cmFuZ2Ugc2hvcHBpbmcgc3ByZWVzLlNoZSB3b3VsZCBuZXZlciBldmVyIGNsZWFuLCB0aGF0IHdhcyBteSBqb2IgYXMgc2hlICJXYXNuIG91ciBzbGF2ZSIuVGhlIGJhZCB0aGluZyBhYm91dCBpdCBpcyB3aGVuIGhlciBqdW5rIHN0YXJ0ZWQgcGlsaW5nIHVwIGluIG91ciByb29tIHRoZSByYXRzLCBwb2lzb25vdXMgc3BpZGVycyBhbmQgc25ha2VzIHdvdWxkIHNuZWFrIGludG8gYm94ZXMgYW5kIHdha2UgdXMgdXAgaW4gdGhlIG5pZ2h0Lk15IHlvdW5nZXN0IGJyb3RoZXIgd2FzIDMgYXQgdGhlIHRpbWUgYW5kIHVuYWJsZSB0byBwcm9jZXNzIHRoZSBzaXR1YXRpb24gc28gSSB3b3VsZCBvZnRlbiBoYXZlIHRvIGtpbGwgYW55dGhpbmcgdGhhdCBtaWdodCBjYXVzZSBoYXJtIHRvIGhpbSxJbmNsdWRpbmcgYSBzbWFsbCBmYW1pbHkgb2YgcmVkIGJlbGx5IGJsYWNrIHNuYWtlcyBsaXZpbmcgdW5kZXIgdGhlIGJyb2tlbiBmbG9vcmJvYXJkcyBiZWNhdXNlIG15IG1vdGhlciB3b3VsZCBuZXZlciBjYWxsIHNvbWVvbmUgdG8gdGFrZSB0aGVtIGF3YXkgZXZlbiBpZiB0aGVyZSB3YXMgYSBjaGFuY2Ugb2YgdXMgc3RlcHBpbmcgb24gdGhlbSBvbiB0aGUgd2F5IHRvIHRoZSB0b2lsZXQuSSB3YXMgYSBzbWFsbCAxMiB5ZWFyIG9sZCBnaXJsIHNvIHlvdSBjYW4gaW1hZ2luZSBob3cgbWVzc2VkIHVwIEkgZmVsdCBhZnRlciBraWxsaW5nIDggYmFieSBzbmFrZXMgd2l0aCBhIGJsdW50IG1lYXQgY2xlYXZlciAoSXQgd2FzIGFsbCBJIGhhZCkgYW5kIGtub3dpbmcgZnVsbCB3ZWxsIGlmIEkgd2FzIGJpdHRlbiB3ZSB3ZXJlIHRvbyBmYXIgYXdheSBmcm9tIHRoZSBob3NwaXRhbCB0byBnZXQgaGVscC4uIApJIG1ha2UgamV3ZWxyeS9hY2Nlc3NvcmllcyB0byBzZWxsIGF0IGNyYWZ0IGZhaXJzIGFuZCBJIHVzdWFsbHkgbWFrZSBhIGJ1bmNoIG9mIHByb2R1Y3RzIGZvciBhIHllYXIgdGhlbiAicmVsZWFzZSIgdGhlbSBhbGwga2luZCBvZiBsaWtlIGEgbGluZSBvciBjb2xsZWN0aW9uLiAKS2F0ZSBIdWRzb24gYW5kIFN0ZWxsYSBNY0NhcnRuZXkgZmxhdW50ZWQgJDgwIDI0IGthcmF0IGdvbGQgbWFza3MgZnJvbSBQaGlsbGlwIFRob21hcyBSb3RoIHRoZSBuaWdodCBiZWZvcmUgdGhlIE1ldCBCYWxsIGluIE1heS4gCkluIGZhY3QgZXZlcnlvbmUgaW52b2x2ZWQgaGFkIGFncmVlZCB0byBzb21ldGhpbmcgdmVyeSBsaWtlIHRoYXQgdW50aWwgSmlubmFoIGFuZCBoaXMgZm9sbG93ZXJzIGRlY2lkZWQgdGhhdCBhY3R1YWxseSB0aGV5IHdhbnRlZCB0aGVpciBvd24gY291bnRyeSBhbmQgc28gc3RhcnRlZCByaW90aW5nIHVudGlsIHRoZXkgZ290IHRoZWlyIHdheS4KVGhlIEJpZyBTaXggd2FzIGEgdmVydGljYWwgd2hlZWwgd2l0aCBudW1iZXJzIGFuZCBzcG9rZXMgICB5b3Ugc3BpbiBpdCwgaXQgZ29lcyBjbGljayBjbGljayBjbGljayBjbGljayBjbGljayBjbGljayBjbGljayBhbmQgbGFuZHMgb24gJDIwLCAkMSwgb3Igd2hhdGV2ZXIuIApUaGVyZSBoYXMgYmVlbiBtdWNoIGRlYmF0ZSBvdmVyIHRoZSB1c2Ugb2YgRGFpbHkgdGhyZWFkcyBmb3IgQWNoaWV2ZW1lbnRzIGFuZCBRdWVzdGlvbnMsIGFuZCB3ZSBzdGlsbCBzdHJvbmdseSBzdXBwb3J0IHRoaXMgbWV0aG9kLiBXZSBmZWVsIHRoYXQgZ3JlYXQgZGlzY3Vzc2lvbiBjYW4gaGFwcGVuIGp1c3QgYXMgd2VsbCBpbiBhIHRocmVhZC4uIApGaW5hbF9GYW50YXN5X1ZJSSAgNTEgcG9pbnRzICBzdWJtaXR0ZWQgMTkgZGF5cyBhZ28KQ291bGQgSSBhc2ssIGhvdyBsb25nIGhhdmUgeW91IHBsYXllZCBldmUgZm9yPwpQcm92aWRlbmNlOiBOby4gMTEgaW4gRWFzdCwgd2lsbCBmYWNlIE5vLiA2IE5vcnRoIENhcm9saW5hCklmIHlvdSB1c2UgdGhlIFlOQUIgdG9vbCBraXQgKGNocm9tZSBleHRlbnNpb24pIHlvdSBjYW4gdmlldyBBb00gYW5kIGRheXMgb2YgYnVmZmVyaW5nIHdoaWNoIHdhcyB0aGUgd2F5IGl0IHdhcyBjYWxjdWxhdGVkIGluIG9sZGVyIHZlcnNpb25zIG9mIFlOQUIuIEkgdHVybmVkIG9uIGJvdGggYmVjYXVzZSBJIHRoaW5rIGl0J3MgaW50ZXJlc3RpbmcuIEl0IGp1c3QgdGFrZXMgdGhlIGF2ZXJhZ2UgZGFpbHkgc3BlbmRpbmcgZnJvbSBZTkFCIGFuZCBjYWxjdWxhdGVzIGhvdyBtYW55IGRheXMgeW91IGNvdWxkIG1haW50YWluIGl0IHdpdGggd2hhdCBpcyBjdXJyZW50bHkgaW4geW91ciBzcGVuZGluZyBhY2NvdW50cy4gU29tZXRpbWVzIHRoZXkgbWF0Y2ggZm9yIG1lIGFuZCBzb21ldGltZXMgdGhleSBkb24ndC4gUmlnaHQgbm93LCBkdWUgdG8gZ2V0dGluZyBhIGxhcmdlciB0aGFuIEknbSB1c2VkIHRvIHJlZnVuZCwgbXkgZGF5cyBvZiBidWZmZXJpbmcgaXMgaGlnaGVyIHRoYW4gbXkgQW9NIGJ5IGFib3V0IGEgd2Vlay4gRXZlcnlvbmUgaXMgY29ycmVjdCB0aGF0IHlvdXIgQW9NIHdpbGwgZ2V0IGJhY2sgdXAgdGhlcmUgaWYgeW91IGtlZXAgZ29pbmcgdGhlIHdheSB5b3UgYXJlIGFuZCB0aGlzIGlzIGp1c3QgYSB0ZW1wb3JhcnkgdGhpbmcuCkJhbGQgYW5kIHdlYXJpbmcgc2xpcCBvbiBzaG9lcyB3aXRoIHNpbHZlciBidWNrbGVzLCB0aGlzIDQ4IHllYXIgb2xkIHBva2VyIHBsYXllciBsb29rcyBhbG1vc3Qgb3V0IG9mIHBsYWNlIGluIG91ciBjaGljIEtlbnNpbmd0b24gcmVzdGF1cmFudCByZW5kZXp2b3VzLCBsaWtlIGEgd2VsbCBtZWFuaW5nLCBzbGlnaHRseSBzaGFtYm9saWMgdW5jbGUuIApPbmNlIFlvdSBTdGFydCBTaG9wcGluZyBmb3IgU2Nob29sIFN1cHBsaWVzQWZ0ZXIgeW91IG5hcnJvd2VkIGRvd24gd2hhdCB5b3UgYWN0dWFsbHkgbmVlZCB0byBidXkgZm9yIHRoZSBzdGFydCBvZiBzY2hvb2wsIGtlZXAgdHJhY2sgb2Ygd2hhdCB5b3UgYm91Z2h0IGFuZCB3aGVyZSB5b3UgYXQgaW4gcmVsYXRpb24gdG8geW91ciBidWRnZXQuIFNvbWUgc3RvcmVzIGV2ZW4gcHJvdmlkZSBjbGlwIGJvYXJkcyB0byB1c2UgYXMgeW91IG1ha2UgeW91ciB3YXkgdGhyb3VnaCB0aGUgYWlzbGVzLiBwYXBlciwgYmluZGVycywgbm90ZWJvb2tzLCByZXBvcnQgY292ZXJzL2R1byB0YW5ncywgcGVuY2lscywgcGVucyBhbmQgZXJhc2VyLCBqdXN0IHRvIG5hbWUgYSBmZXcuIFN0b2NrIHlvdXIgaG9tZSBzdXBwbHkgY3VwYm9hcmQgd2l0aCB0aGUgZXh0cmFzIGFuZCB0dWNrIGEgZmV3IHNwZWNpYWwgaXRlbXMgYXdheSB0byB1c2UgYXMgc3RvY2tpbmcgc3R1ZmZlcnMgd2hlbiB0aGUgdGltZSBjb21lcy4KQXMgbWFueSBhcyA5LDAwMCBpbGxlZ2FsIG1hc3NhZ2UgcGFybG9ycyBjdXJyZW50bHkgb3BlcmF0ZSBpbiBtb3JlIHRoYW4gMSwwMDAgY2l0aWVzIG5hdGlvbndpZGUsIGZ1ZWxpbmcgYSByb3VnaGx5ICQzIGJpbGxpb24gaW5kdXN0cnksIGFjY29yZGluZyB0byB0aGUgUG9sYXJpcyBQcm9qZWN0ICwgYSBub25wcm9maXQgdGhhdCBydW5zIHRoZSBOYXRpb25hbCBIdW1hbiBUcmFmZmlja2luZyBIb3RsaW5lLgpTdXJlLCB5b3VyIGV4cGxhbmF0aW9uIG1pZ2h0IGFwcGx5IGluIGFub3RoZXIgc2l0dWF0aW9uLCB3aGVyZSB0aGF0IHRoZSBvbmx5IHRoaW5nIG91dCBvZiB0aGUgb3JkaW5hcnkgdGhhdCBoYXBwZW5zLiAKVGhpcyBpcyBBbWVyaWNhLiBFdmVyeW9uZSB1bmRlcnN0YW5kcyBwb2tlci4gCldoaWxlIGhlIGRvZXMgdGhpcywgc2VjcmV0bHkgbWVtb3JpemUgdGhlIGNhcmQgdGhhdCBpcyB0dXJuZWQgb3Zlci4gCk9uIG15IHdheSB1cCwgSSBzbWFzaGVkIHRoZSBiYWNrIG9mIG15IGhlYWQgaW50byB0aGUgZmlyZSBleHRpbmd1aXNoZXIsIHdoaWNoIHJpY29jaGV0ZWQgbXkgaGVhZCBmb3J3YXJkIDMgaW5jaGVzIGludG8gdGhlIGNvcm5lciBvZiB0aGUgdmVuZGluZyBtYWNoaW5lLCBhbmQga25vY2tlZCBtZSBvdXQgY29sZC4gCkdhbWUgaXMgYSBzYWZlIGJldCBmb3IgdGhlIGhvbGlkYXkgc2Vhc29uCkFzIGZhciBhcyBvYXRtZWFsIGlzIGNvbmNlcm5lZCwgSSBtYWtlIG1pbmUgb24gdGhlIHN0b3ZldG9wIGFuZCBwdXQgbnV0cywgcmFpc2lucywgZHJpZWQgY3JhbmJlcnJpZXMsIGRyaWVkIGNoZXJyaWVzLCBzb21lIG1hcGxlIHN5cnVwIGFuZCBoYWxmIGFuZCBoYWxmIGluIGl0ICAgaXQga2VlcHMgeW91IGZ1bGxlciBsb25nZXIgdGhhbiByZWd1bGFyIG9hdG1lYWwgYW5kIHRhc3RlcyBiZXR0ZXIKVHdvIGFkZGl0aW9uYWwgZGVhbHMgdG8gc2VsbCB0aGUgc2Nob29sJ3MgaW50ZWxsZWN0dWFsIHByb3BlcnR5ICAgd2hpbGUgbGVhdmluZyB0aGUgYnVpbGRpbmcsIGZ1cm5pdHVyZSBhbmQgZXF1aXBtZW50ICAgZmVsbCB0aHJvdWdoLk5hcm9wYSBVbml2ZXJzaXR5LCBhIHBvdGVudGlhbCBidXllciBpbiB0d28gb2YgdGhlIGRlYWxzLCBkZWNpZGVkIGxhc3Qgd2VlayBub3QgdG8gcHVyY2hhc2UgdGhlIGludGVsbGVjdHVhbCBwcm9wZXJ0eSwgYW5kIHRoZSBEaXZpc2lvbiBvZiBQcml2YXRlIE9jY3VwYXRpb25hbCBTY2hvb2xzIG9uIE1vbmRheSBpbmZvcm1lZCBCb3VsZGVyIENvbGxlZ2Ugb2YgTWFzc2FnZSBUaGVyYXB5IG9mZmljaWFscyB0aGF0IHRoZSBzY2hvb2wgc2hvdWxkIGNsb3NlLiIoVGhlIHN0YXRlKSBmZWx0IHRoZXJlIHdhcyB0b28gbXVjaCByaXNrIGFuZCBmaW5hbmNpYWwgZXhwb3N1cmUgYW5kLCBkZXNwaXRlIHRoZSBmYWN0IEkgZGlzYWdyZWUgd2l0aCB0aGVtLCB0aGV5IGRlY2lkZWQgaXQgd291bGQgYmUgdGhlIGJlc3QgdGhpbmcgZm9yIHRoZSBzdHVkZW50cyB0byBpbW1lZGlhdGVseSBlbnJvbGwgaW4gYSB0ZWFjaCBvdXQgcHJvZ3JhbSBhdCBhbm90aGVyIHNjaG9vbCwiIGhlIHNhaWQsIGFkZGluZyBoZSBkb2VzIG5vdCBibGFtZSBDb2xvcmFkbyBCb25kU2hhcmVzLiAKSSB0aGluayBJIG5lZWQgdG8gdHJ5IHRoaXMuIEkgc2VyaW91c2x5IHdvbmRlciB3aGF0IGhhcHBlbmVkIHRvIHRoZSBnaXJsIHRoYXQgbG92ZWQgdG8gYmUgZHJlc3NlZCB3ZWxsIGZvciB3b3JrLCBjb3JyZXNwb25kaW5nIGpld2VscnkgYW5kIGJhZy4gUmlnaHQgbm93IEkganVzdCBtYWtpbmcgc3VyZSBJIGJhcmVseSBmdWxmaWxsIHRoZSBvZmZpY2UgZHJlc3MgY29kZSBhbmQgbG9yZCBoYXZlIG1lcmN5LCB0aGUgZ3JheSBoYWlycyBhcmUgYSByaW90LCBhZGRpbmcgYXQgbGVhc3QgMTAgeWVhcnMgdG8gbWUuIE15IG1ha2V1cCBhbmQgbmFpbCBwb2xpc2ggb3JnIHNldHMgYXJlIGJhc2ljYWxseSBnYXRoZXJpbmcgZHVzdC4gWWVhaCBteSBuYWlscyBhcmUgcGFpbnRlZCB0aGlzIHdlZWsgKGNoaXBwZWQgYWxyZWFkeSkgYnV0IG9ubHkgYmVjYXVzZSBteSBCRkYgdHJlYXRlZCBtZSB0byBhIG1hbmkuIEl0J3MgYSB0cmlwbGUgZ3JpZWYsIGFsbW9zdCBsaWtlIG1vdXJuaW5nIGEgZGVhdGguIFlvdSBncmlldmUgd2hhdCB5b3UgaGFkLiBZb3UgZ3JpZXZlIGZvciB3aGF0IHlvdSB3aXNoZWQgZm9yLiBBbmQgeW91IGdyaWV2ZSBmb3IgdGhlIGhvcGUgb2YgaXQgYmVpbmcgZml4ZWQuCkJ1dCBJIGhhdmUgcmVhc29uIHRvIHRoaW5rIHRoYXQgdW5saWtlIHRoZSBCdXNoaWVzLCB0aGV5IGRvbid0IHJlYWxseSBiZWxpZXZlIGl0OyBpdCdzIGp1c3QgcG9saXRpY3MuIEJ1dCB0b28gbWFueSBjb21tZW50YXRvcnMgb24gdGhlIGxlZnQgYW5kIHRoZSByaWdodCBoYXZlIGFjY2VwdGVkIHRoZSByaWRpY3Vsb3VzIGlkZWEgdGhhdCB0aGUgT2JhbWEgYWRtaW5pc3RyYXRpb24gaXMgYWN0dWFsbHkgc29jaWFsaXN0LiAKVGhlc2UgZGlnZXN0aXZlIGRpc29yZGVycyBjYW4gY2F1c2UgYSBsZWFreSBndXQ6IFBhcnRpYWxseSBkaWdlc3RlZCBmb29kIG1hdHRlciBhbmQgb3RoZXIgZm9yZWlnbiBjb21wb3VuZHMgbGVhayBmcm9tIHRoZSBndXQgaW50byB0aGUgYmxvb2RzdHJlYW0sIHRyaWdnZXJpbmcgaW1tdW5lIGluZmxhbW1hdG9yeSByZWFjdGlvbnMuCkFuZCwgYXMgYWxsIHRlYWNoZXJzIGtub3csIHlvdSBjYW4gdG90YWxseSBqdXN0IG5vdCBhc3NpZ24gYW55IGhvbWV3b3JrLCBhbmQgbWFrZSBhIHN5c3RlbSBpbiB5b3VyIGNsYXNzcm9vbSBmb3IgaW4gY2xhc3Mgc3R1ZGVudCBncmFkaW5nLiAKNS4gRmxpY2sgb2ZmCkFzIHBhcnQgb2YgYSBsZWdhbCBiYXR0bGUgYmV0d2VlbiB0aGUgQW1lcmljYW4gQWN0aW9uIE5ldHdvcmsgYW5kIGVudGVydGFpbm1lbnQgdmVuZG9yIENhdGVyIEFtZXJpY2Egb3ZlciBhIHNjcmFwcGVkIEx5bnlyZCBTa3lueXJkIGNvbmNlcnQsIHdoaWNoIHdhcyBheGVkIGFoZWFkIG9mIHRoZSBSTkMgZHVlIHRvIHRoZSB0aHJlYXQgb2YgSHVycmljYW5lIElzYWFjIGluIGxhdGUgQXVndXN0Li4gClNpbmNlIENocmlzdG1hcyB0aGVyZSdzIGJlZW4gcXVpdGUgdGhlIGxlYWQgdXAgdG8gdGhlIGJpZyBkYXkgZm9yIHRoZSBsb3ZlYmlyZHMuIFRoZXkgd2VudCB0byB0aGUgd2VkZGluZyBvZiBIdXJyaWNhbmVzJyB0ZWFtIG1hdGUgQmVuIE1heSB0byBLaXJzdGllIFRyb2xvdmUsIG5vcnRoIG9mIFdlbGxpbmd0b24ganVzdCBiZWZvcmUgdGhlIE5ldyBZZWFyLgpFcm5pZSBtdXR0ZXJlZCB1bmRlciBoaXMgYnJlYXRoIHRoYXQgb25lIG9mIHRoZSBzd29yZHMgaW4gdGhlIHNldCB3YXMgbWlzc2luZy4gCllvdSBuZXZlciBlc2NhcGUgYmFkIGJlYXRzIG9ubGluZSBiZWNhdXNlIG9ubGluZSBwb2tlciBpcyBkZXNpZ25lZCB0byBjcmVhdGUgYWN0aW9uLCBub3QgYWN0dWFsIHBva2VyLgpJZiB5b3Ugd2FudCwgZmVlbCBmcmVlIHRvIFBNIG1lIGFib3V0IHRoZSBkaWZmZXJlbmNlcyBvZiBvbGQgSFBGRiB2cy4gSFBGVCBub3csIGFuZCB3aGF0IGNvdWxkIGJlIGNoYW5nZWQvZml4ZWQuIEFzIEkgdHJ5IHRvIHJlbWVtYmVyLCB0aGVyZSB3aWxsIGFsd2F5cyBiZSByb29tIHRvIGltcHJvdmUgb24gZXZlcnl0aGluZy4KRm9yIHdvbWVuIHdobyB3YW50IGNoaWxkcmVuIGJ1dCBhcmUgdW5hYmxlIHRvIGhhdmUgdGhlbSwgdGhlIGRlY2lzaW9uIHRvIGdpdmUgbXkgY2hpbGQgdXAgY2FuIHNlZW0gbGlrZSBhIHNsYXAgaW4gdGhlIGZhY2UuIEZvciBtZW4gICBsaWtlIHRoZSBmYXRoZXIgb2YgbXkgY2hpbGQgICBpdCBjYW4gbWFrZSB0aGVtIGZlZWwgaGVscGxlc3MuIApJIGNvdWxkIGxvc2UgbXkgY2hpbGQsIGpvYiwgaG91c2Ugb3IgZXZlbiBteSBvd24gbGlmZS4gSXQgcHJvYmFibHkgc2VlbXMgc28gaGFyZCwgZXNwZWNpYWxseSBsb29raW5nIGJhY2sgbm93IGFuZCBiZWluZyBsaWtlLCBvaCBmdWNrLiBKdXN0IGhhdmluZyB0aGUgd2lsbGluZ25lc3MgaXMgYSBnb29kIHN0YXJ0LiAKTU9MT1RfVkVQUjEyICAxIHBvaW50ICBzdWJtaXR0ZWQgMTYgaG91cnMgYWdvCiJNYXliZSBpdCdzIGJlY2F1c2UgSSBmZWx0IHB1bGxlZCB0b3dhcmQgYSBkaWZmZXJlbnQgdHlwZSBvZiBjcmVhdGl2ZSBvdXRsZXQgYW5kIEkgcmVhbGx5IGxpa2VkIHRoZSBjb250cm9sIG9mIHBhaW50aW5nIG9mIG5vdCBoYXZpbmcgYSBjb21taXR0ZWUgaW4gdGhlIHdheSB0ZWxsaW5nIG1lIHdoYXQgdGhlIGlkZWEgbXVzdCBiZSB0byBhcHBlYWwgdG8gYSBmb3VyIHF1YWRyYW50IHdoYXRldmVyLCIgaGUgc2FpZC4gQ2FycmV5IHNob3dlZCBhIGNvbGxlY3Rpb24gb2YgaGlzIHBvbGl0aWNhbCBjYXJ0b29ucywgbWFkZSBmYW1vdXMgb24gaGlzIFR3aXR0ZXIgcHJvZmlsZSwgYXQgdGhlIE1hY2Nhcm9uZSBnYWxsZXJ5IGluIExvcyBBbmdlbGVzLiAKV29ya2VkIG15IEJSIHVwIGZyb20gYSBmZXcgaHVuZHJlZCB0byAyLjVrLCBoaXQgYSBkb3duc3dpbmcsIGFjdHVhbGx5IG1hbmFnZWQgaXQgd2VsbCBhbmQgbW92ZWQgZG93biwgZXZlbiBpbnZlc3RlZCBpbiBVcHN3aW5nIE1UVCBjb3Vyc2UgKEkgcGxheWVkIE1UVHMgbm90IGNhc2ggYnR3KQoiTXViYXJhayAgQXNzYWQgIEJpYmkgTmV0YW55YWh1IiBlbWVyZ2VkIGFzIHRoZSBpY29uaWMgY2hhbnQgb2YgdGhlIHByb3Rlc3RlcnMuLiAKVW5mb3J0dW5hdGVseSwgaW4gUGFraXN0YW4gb3JkaW5hcnkgY2FzZXMgZHJhZyBvbiBmb3IgeWVhcnMsIGV2ZW4gZGVjYWRlcywgYW5kIHRoZSBwb29yIGRvbiBnZXQganVzdGljZSwgbGVhZGluZyB0byBzZXJpb3VzIGRvdWJ0cyBhYm91dCB0aGUgaW50ZWdyaXR5IG9mIHRoZSBqdWRpY2lhcnkuIFdlIHNhdyBob3cgdGhlIGNhc2Ugb2YgR2VuIE11c2hhcnJhZiBlbGlnaWJpbGl0eSB3YXMgYWxsb3dlZCB0byBkcmFnIG9uIGFuZCBvbiwgZW5hYmxpbmcgaGltIHRvIHN0cmlrZSBhbmQgcGFyYWx5c2UgdGhlIGp1ZGljaWFyeS4gClRoZSBSYXlzIGFyZSBhIHNuZWFreSBkYW5nZXJvdXMgdGVhbSBhbmQgaGF2ZSBzb21lIG9mIHRoZSBiZXN0IHByb3NwZWN0cyBpbiB0aGUgbWFqb3JzIGNvbWluZyB1cCBpbiB0aGUgbmV4dCBmZXcgeWVhcnMuIEpheXMgc3RpbGwgaGF2ZSBhIGJpdCBvZiB3b3JrIHRvIGRvIGJ1dCB0aGV5IGFyZW4gYXMgYmFkIGFzIG1hbnkgcGVvcGxlIHRoaW5rIHRoZXkgYXJlLiAKTCdvbGZhY3RvdGhyYXBpZSB2aXNlIG5vbiBzZXVsZW1lbnQgIGNhbG1lciBsZXMgaW5zb21uaWVzLCAgYXBhaXNlciBsZXMgZXhjcywgY2VsYSBsJ2Fyb21hdGhyYXBpZSBjbGFzc2lxdWUgcGV1dCBzJ2VuIGNoYXJnZXIuIEJpZW4gcGx1cywgbCdvbGZhY3RvdGhyYXBpZSBwZXJtZXQgdW5lIGNvbW11bmljYXRpb24gYXZlYyBub3RyZSBwcm9wcmUgaW5jb25zY2llbnQgdG91dCBlbiBzJ2FmZnJhbmNoaXNzYW50IGRlcyBjb25kaXRpb25zIGxpbWl0YW50ZXMgZHUgY29ydGV4LCBsZSBzaWdlIGRlIGxhIHJhaXNvbi4gQ2V0dGUgdGVjaG5pcXVlIHBlcm1ldCBkb25jIHVuZSBtZWlsbGV1cmUgY29ubmFpc3NhbmNlIGRlIHNvaSBlbiBhdXRvcmlzYW50IHVuIHJldG91ciByZmxleGlmIHN1ciBub3MgcHJvcHJlcyBtb3Rpb25zIGV0IHNlbnRpbWVudHMuIApFeHBsYWluIHdoeS4gT2Z0ZW4gaW4gbWF0aCwgdGVhY2hlcnMgZXhwbGFpbiBob3cgdG8gZG8gc29tZXRoaW5nLCBidXQgbm90IHdoeSBpdCBpcyBkb25lIHRoYXQgd2F5LiBUaGlzIG1heSBiZSBmaW5lIGZvciBzb21lIHN0dWRlbnRzLCBidXQgZm9yIG1vc3QsIGl0IGlzIGRpZmZpY3VsdCB0byBncmFzcCBjb25jZXB0cyBpZiB0aGV5IGRvIG5vdCB1bmRlcnN0YW5kIHdoeSBpdCBpcyBiZWluZyBkb25lIHRoYXQgd2F5LiBNYW55IHN0dWRlbnRzIHdobyBjYW4gZmluZCB0aGUgcmlnaHQgYW5zd2VyIHRvIGEgbWF0aGVtYXRpY2FsIHByb2JsZW0gaGF2ZSBzaW1wbHkgbWVtb3JpemVkIHRoZSBzdGVwcywgYnV0IGhhdmUgbm90IGFjdHVhbGx5IHVuZGVyc3Rvb2QgdGhlIHJlYXNvbnMgd2h5IGEgcGFydGljdWxhciBjb25jZXB0IHdvcmtzIHRoZSB3YXkgaXQgZG9lcy4gVW5sZXNzIHRoZXkgdW5kZXJzdGFuZCB0aGUgdGhlb3J5IGJlaGluZCB0aGUgcHJvYmxlbSwgdGhleSBhcmUgbGlrZWx5IHRvIGZvcmdldCBpdCB2ZXJ5IHF1aWNrbHkuWzNdCkFzIHdoaXRlOiBJIGhhdGUgcGxheWluZyBhZ2FpbnN0IHRoZSBGcmVuY2guIEkga25vdyBJIHNob3VsZCByYXRoZXIgZW5qb3kgaXQsIGFzIGl0IHN1cHBvc2VkIHRvIGdpdmUgd2hpdGUgYSBwbGVhc2FudCBnYW1lLCBidXQgdGhlIHBvc2l0aW9ucyB0aGF0IGFyaXNlIG91dCBvZiB0aGUgbWFpbiBsaW5lcyAoMy4gCkl0IHJlcXVpcmVzIG1vcmUgdGVhbXdvcmssIHNraWxsLCBhbmQgdG9rZW5zIHRvIHBsYXkgYXQgbW9yZSBkaWZmaWN1bHQgbGV2ZWxzLCBidXQgaXQgaXMgZXNzZW50aWFsbHkgdGhlIHNhbWUgZ2FtZSBhcyBwbGF5aW5nIGFzIGEgYmVnaW5uZXIuLiAKIlRoZSBCbGF6aW5nIFN0dW1wIGlzIGEgd2VsbCByb3VuZGVkIGJ1c2luZXNzIG9wZXJhdGlvbiB3aXRoIGFuIGV4cGVyaWVuY2VkIGxlc3NlZSBwcm92aWRpbmcgYSBzZWN1cmUgZnV0dXJlIGludmVzdG1lbnQgaW4gV29kb25nYS4KVGhlIEVhcmx5IFN0YWdlcyBpcyB0aGUgc3RhcnRpbmcgc3RhZ2VzIG9mIGFueSB0b3VybmFtZW50IGFuZCBpdCBicmluZ3MgaW4gdmFyaWVkIGNoYWxsZW5nZXMgZm9yIGJvdGggZXhwZXJpZW5jZWQgYW5kIG5vdmljZSBwbGF5ZXJzLiBBcyBhIHJlc3VsdCwgb25lIG11c3QgYmUgd2lsbGluZyB0byBwbGF5IHNvbWUgcG90cyBpbiB0aGlzIGVhcmx5IHN0YWdlIHNvIGFzIHRvIGJlIHZpYWJsZSBpbiB0aGUgbGF0ZXIgc3RhZ2VzLiBTdGF5aW5nIG91dCBvZiB0cm91YmxlIGlzIGtleSBpbiB0aGlzIHN0YWdlOyBvbmUgc2hvdWxkIGFsd2F5cyBhdm9pZCBlbnRlcmluZyBtdWx0aSB3YXkgaGFuZHMgdW5sZXNzIGluIHBvc3Nlc3Npb24gb2YgYSBoYW5kIHRoYXQgY2FuIGZsb3AgYSBtb25zdGVyLiAKMTAgd291bGQgYm9va21hcmsgYWdhaW4KSXQgd29uJ3QgYmUgemVybyBwb2ludHMsIGJ1dCBpZiB5b3UncmUgbWluZGZ1bCBvZiB0aGUgY29va2luZyBsaXF1aWRzIGl0IHdvbid0IGJlIGEgaHVnZSBzcGx1cmdlLiAKTW9zdCBpbXBvcnRhbnQsIHRoaXMgZXBpc29kZSBzaG93cyBob3cgbXVjaCBzcGFjZSBpcyBhdmFpbGFibGUgZm9yIHRoZSBtYWNoaW5lcyBvZiBtYWNoaW5hdGlvbnMgYW5kIHNsYW5kZXIgaW4gb3VyIGNvdW50cnkgdG9kYXkgYW5kIGhvdyB0aGUgc2NvcGUgb2Ygc2VyaW91cyBhbmQgY3JpdGljYWwgZGViYXRlIG9uIGNlbnRyYWwgaXNzdWVzIGhhcyBiZWVuIHJlZHVjZWQuIApBdCAxOTBNL3NlYyB0aGF0J3MgYW4gaW5zdGFudC4gClN0dWR5aW5nIHBhdHRlcm5zIGFsc28gcmVkdWNlcyB0aGUgbnVtYmVyIG9mIGNhbGN1bGF0aW9ucyB5b3UgbmVlZCB0byBtYWtlIHdoaWxlIHlvdSBwbGF5aW5nLiBNYW55IHBhdHRlcm5zIHJlcGVhdCB0aGVtc2VsdmVzIGFuZCB5b3UgY29tZSB0byByZWNvZ25pemUgdGhlbSB0aHJvdWdoIHN0dWR5LiAKWW91IGNhbiBuYWIgdGhpcyBzb25nIGZyb20gdmFyaW91cyBvdXRsZXRzL1lvdXR1YmUuIApUaGUgbWFuIHdobyBhbGxlZ2VkbHkgaWduaXRlZCBtb3JlIHRoYW4gNTAgZmlyZXMgdGhhdCB0ZXJyb3JpemVkIExvcyBBbmdlbGVzIGxhc3Qgd2VlayBpcyBhbHNvIHVuZGVyIGludmVzdGlnYXRpb24gaW4gR2VybWFueSBmb3IgYSBob3VzZSBmaXJlIG5lYXIgRnJhbmtmdXJ0LiBpbnZlc3RpZ2F0b3JzIGFsc28gZGlzY2xvc2VkIFdlZG5lc2RheSB0aGF0IGEgc2VhcmNoIG9mIEhhcnJ5IEJ1cmtoYXJ0IEhvbGx5d29vZCBhcGFydG1lbnQgdHVybmVkIHVwIG5ld3MgYXJ0aWNsZXMgYWJvdXQgdGhlIExvcyBBbmdlbGVzIGZpcmVzIGFuZCBhIHNlcmllcyBvZiBjYXIgYmxhemVzIGluIEdlcm1hbnkgbGFzdCB5ZWFyLgpHb256YWdhJ3MgcmVsZWFzZSBzYWlkIFRpbGxpZSB3b24ndCBuZWVkIHN1cmdlcnkuCiJPaCBHb2QhIiBKZXN1cyBzY3JlYW1lZCwgYXMgaGUgZmVsdCBNb3NlcyBzdGFmZiBwdWxzZS4gVGhpc3dhc2hpcyBwdXJwb3NlIQpUaGlua2luZyBhYm91dCBnZXR0aW5nIHlvdXIgdG9lcyBkb25lPyBBbnkgYmVhdXR5IHRyZWF0bWVudCBvciBwcm9jZWR1cmUgaW52b2x2aW5nIGNoZW1pY2FscywgZnVtZXMgb3IgbWFzc2FnZSBzaG91bGQgYmUgT0snZCBieSB5b3VyIGRvY3RvciBiZWZvcmVoYW5kLCBqdXN0IHRvIGJlIHNhZmUuIElmIHlvdSBkbyBnZXQgYSBwZWRpY3VyZSAob3IgbWFuaWN1cmUpIHdoaWxlIHByZWduYW50LCB0YWtlIHNvbWUgcHJlY2F1dGlvbnMuIE1ha2Ugc3VyZSB0aGUgc2Fsb24ncyBoZWFsdGggaW5zcGVjdGlvbiBzY29yZXMgYXJlIGhpZ2gsIGFuZCBicmluZyB5b3VyIG93biBuYWlsIGZpbGVzIGFuZCBvdGhlciB0b29scyAoc3VjaCBhcyBjdXRpY2xlIGNsaXBwZXJzKS4gVGhpcyB3aWxsIGxpbWl0IHRoZSByaXNrIG9mIGluZmVjdGlvbnMsIGVzcGVjaWFsbHkgaWYgeW91IGdldCBuaWNrZWQuIERvbid0IGJvdGhlciBpZiB0aGVyZSdzIGEgc3Ryb25nIGNoZW1pY2FsIHNtZWxsIGluIHRoZSBzYWxvbiAgIGdvIHNvbWV3aGVyZSB3aXRoIGdvb2QgdmVudGlsYXRpb24sIGFzIHRob3NlIGZ1bWVzIGFyZW4ndCBnb29kIGZvciB5b3Ugb3IgdGhlIGJhYnkuCktlZW4gZXllOiBDb21wZXRpdGlvbiBzdGV3YXJkcyBFbHkgUGF5bmUgYW5kIFNoYW5lIERlYnJlY2VueSBrZWVwIHNjb3JlIGFzIGp1ZGdpbmcgcHJvZ3Jlc3Nlcy4KRm9yIHN1cmUsIGxldCBzYXkgdGhlIGpvYiBob3VycyBhcmUgOSB0byA1LCB0aGF0IG1lYW5zIGhlIGhhcyB0byBsZWF2ZSBhdCA3OjMwIGF0IGxlYXN0LCBtb3JlIGxpa2UgNzowMCBpZiB3ZSBhcmUgYmVpbmcgcmVhbGlzdGljLCBoZSBoYXMgdG8gbGVhdmUgaG9tZSBiZWZvcmUgdGhlIGtpZHMgZXZlbiBnbyB0byBzY2hvb2wsIGhlIHdvbiBiZSBkcm9wcGluZyBhbnkgb2YgdGhlIGtpZHMgYXQgc2Nob29sIGFueW1vcmUuIEhlIHdpbGwgYmUgZ2V0dGluZyBob21lIGF0IDY6MzAgYXQgdGhlIGVhcmxpZXN0LCBidXQgbGV0IHB1dCBpdCB0byA3OjAwIHJlYWxpc3RpY2FsbHkuIApEb3plbnMgb2YgcGVvcGxlIGNsYWltIGNhc2lubyBiaWd3aWcgYW5kIFJlcHVibGljYW4gTmF0aW9uYWwgQ29tbWl0dGVlIGZpbmFuY2UgY2hhaXIgU3RldmUgV3lubiBpcyBhIG1hc3NpdmUgY3JlZXAgd2hvIGhhcyBwcmVzc3VyZWQgbG93IGxldmVsIGVtcGxveWVlcyBhdCBoaXMgZ2FtaW5nIHBhbGFjZXMgYW5kIGhvdGVscyBpbnRvIHNleCBhbmQgZGVsaWJlcmF0ZWx5IGV4cG9zZXMgaGlzIGp1bmsgYnkgd2VhcmluZyB0aW55IHNob3J0cyBhdCB3b3JrLApJdCBqdXN0IHNlZW1zIGxpa2UgYW5vdGhlciB3YXkgZm9yIGEgd2hpdGUgcGVyc29uIHRvIHNheSwgIkkgZG9uIHNlZSBjb2xvciEgSSBjb21wbGV0ZWx5IGNvbG9yIGJsaW5kISBJIGRvbiBzZWUgd2hpdGUgcGVvcGxlIG9yIGJsYWNrIHBlb3BsZSEgSSBqdXN0IHNlZSBwZW9wbGUhIgpZb3UgY2FuIG5ldXRyYWxpemUgdGhlIHNhbiBzaGEgYnkgcGxhY2luZyAzIGJhbWJvbyBwbGFudHMgb3IgcmVwcmVzZW50YXRpb25zIG9mIGJhbWJvbyBwbGFudHMgKHBhaW50aW5ncyBvciBzdGF0dWVzKSBpbiB0aGUgbm9ydGhlcm4gcGFydCBvZiB5b3VyIGhvbWUsIGFuZCwgaWYgeW91ciBkb29yIGZhY2VzIG5vcnRoLCBwbGFjaW5nIGEgYmFndWEgbWlycm9yIG9uIG9yIGFib3ZlIGl0LiIgRVhDRVJQVCBGUk9NIFBPU1QgQlkgS0VOTkVUSCBDT0hFTiwuIApBSyBoZXJlIGhhcyByZXByZXNlbnRlZCB0b28gbXVjaCB0byBzaG92ZSBjb25maWRlbnRseSwgc28gdmVyeSB1bmxpa2VseS4gCk11bHRpbmlnaHRzbmlwZXIgIDM4NyBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ28KT2JhbWEgc2FpZC4gCk9uY2UgdXBvbiBhIHRpbWUsIG1lbiB3b3JlIHRoZSBwYW50cywgYW5kIHdvcmUgdGhlbSB3ZWxsLiBXb21lbiByYXJlbHkgaGFkIHRvIG9wZW4gZG9vcnMgYW5kIGxpdHRsZSBvbGQgbGFkaWVzIG5ldmVyIGNyb3NzZWQgdGhlIHN0cmVldCBhbG9uZS4gTWVuIHRvb2sgY2hhcmdlIGJlY2F1c2UgdGhhdCdzIHdoYXQgdGhleSBkaWQuIEJ1dCBzb21ld2hlcmUgYWxvbmcgdGhlIHdheSwgdGhlIHdvcmxkIGRlY2lkZWQgaXQgbm8gbG9uZ2VyIG5lZWRlZCBtZW4uIERpc2NvIGJ5IGRpc2NvLCBsYXR0ZSBieSBib2FteSBub24gZmF0IGxhdHRlLCBtZW4gd2VyZSBzdHJpcGVkIG9mIHRoZWlyIGtoYWtpcy4gQW5kIGxlZnQgc3RyYW5kZWQgb24gdGhlIHJvYWQgYmV0d2VlbiBib3lob29kIGFuZCBhbmRyb2d5bnkuIEJ1dCB0b2RheSwgdGhlcmUgYXJlIHF1ZXN0aW9ucyBvdXIgZ2VuZGVybGVzcyBzb2NpZXR5IGhhcyBubyBhbnN3ZXJzIGZvci4gVGhlIHdvcmxkIHNpdHMgaWRseSBieSBhcyBjaXRpZXMgY3J1bWJsZSwgY2hpbGRyZW4gbWlzYmVoYXZlIFdlIG5lZWQgaGVyb2VzIFdlIG5lZWQgbWVuIHRvIHB1dCBkb3duIHRoZSBwbGFzdGljIGZvcmssIHN0ZXAgYXdheSBmcm9tIHRoZSBzYWxhZCBiYXIgYW5kIHVudGllIHRoZSB3b3JsZCBmcm9tIHRoZSB0cmFja3Mgb2YgY29tcGxhY2VuY3kgSXQncyB0aW1lIHRvIGFuc3dlciB0aGUgY2FsbCBvZiBtYW5ob29kLiBJdCdzIHRpbWUgdG8gd2VhciB0aGUgcGFudHMuClRoZSBwcm9jZXNzIGlzIHJlcGVhdGVkIHVudGlsIGFsbCB0aGUgZ2lmdHMgYXJlIHVud3JhcHBlZC4gClUgY2FuIG9idiB1bmRlcnN0YW5kIG15IHNrZXB0aWNpc20uIGl0IHdhcyBlc3RpbWF0ZWQgdGhhdCBvdmVyIDkwJSBvZiBwbGF5ZXJzIGFyZSBsb3NlcnMgdGhhdCB3YXMgd2hpbGUgdGhlIGdhbWVzIHdlcmUgYXQgaXRzIHBlYWssIGJ1dCB0aGUgbnVtYmVyIHdhcyBhbHNvIHNhaWQgdG8gYmUgbXVjaCBoaWdoZXIuIGZyb20gZmlyc3QgaGFuZCBleHBlcmllbmNlIGkgc2F5IGl0cyBjbG9zZXIgdG8gOTUlKy4gZnJvbSB1ciAxc3QgaGFuZCBleHBlcmllbmNlIHUgbXVzdCBrbm93IHRoaXMgdG8gYmUgdHJ1ZSBhcyB3ZWxsLiBpIHBsYXkgaW4gdGhlIGNhc2lubyB0aGF0IGFyZ3VhYmx5IGhhcyB0aGUgbW9zdCBwbGF5ZXJzIChhdHRlbXB0aW5nKSB0byBwbGF5IGZvciBhIGxpdmluZyBhbmQgSSBzZWVuIHRoZSBoaWdoIG1ham9yaXR5IG9mIHRoZW0gZ28gYnJva2UuCkVkaXQ6IFRoZXJlIGlzIG5vIGhlaWdodCBzbGlkZXIsIG5vLCBidXQgdGhlIHNpemUgb2YgeW91ciBjaGFyYWN0ZXIgbW9kZWwgdmFyaWVzIGNvbnNpZGVyYWJseSBiYXNlZCBvbiB0aGUgY29tYmluYXRpb24gb2YgeW91ciBnZW5kZXIgYW5kIHN0YXJ0aW5nIGNsYXNzLiBBIGZlbWFsZSBzY291bmRyZWwgaXMgY29uc3BpY3VvdXNseSBzaG9ydCwgYSB0cmFpdCB0aGVuIHNoYXJlZCB3aXRoIFJldmFuIGFzIHRoZSBzYW1lIHNpemVkIGNoYXJhY3RlciBtb2RlbCBpcyB1c2VkLiAKU29tZXRpbWVzIEkgZ2V0IHNvIG92ZXJ3aGVsbWVkIGJ5IGxpZmUgKHVzdWFsbHkgaW4gYSB2ZXJ5IGRlcHJlc3NpdmUgb3IgYW54aW91cyBzZWFzb24pLCBmZWVsIGxpa2UgaXQncyBzb29vb28gbXVjaCB3b3JrIHRvIHJlcGx5LCB0aGVuIGNvbnN0YW50bHkgdGhpbmsgYWJvdXQgaG93IHVwc2V0IHRoZSBwZXJzb24gcHJvYmFibHkgaXMgdGhhdCBJIGlnbm9yZWQgdGhlbSBhbmQgZmVlbCBvdmVyd2hlbG1lZCBieSB0aGF0LCBhbmQgaXQncyBqdXN0IGEgY3ljbGUgb2YgbWUgc2lua2luZyBkZWVwZXIgaW50byBmZWVsaW5nIHRlcnJpYmxlIGFib3V0IG15c2VsZi4gWW91IGNvdWxkIGNvbW11bmljYXRlIHRvIHlvdXIgZnJpZW5kIHRoYXQgeW91IGFyZSBub3QgYW5ncnkgKGlmIHlvdSBhcmVuJ3QpLCBqdXN0IGNvbmNlcm5lZCBvciBjb25mdXNlZCAoaWYgeW91IGFyZSkuIEFuZCBhbHNvIGp1c3QgYmVlciBvbiB0aGUgc2lkZSBvZiBncmFjZSBmb3IgdGhlbSBsZXQgdGhlbSBrbm93IHRoYXQgZXZlbiBpZiBsaWZlIGlzIG92ZXJ3aGVsbWluZyBhbmQgdGhleSBkb24ndCBrbm93IGhvdyB0byBkZWFsLCB5b3UncmUgc3RpbGwgdGhlaXIgZnJpZW5kLi4gCkhhbnNlbiBoYXMgYWxzbyByZWNlaXZlZCBhd2FyZHMgZm9yIGV4Y2VsbGVuY2UgaW4gam91cm5hbGlzbSBmcm9tIGJvdGggdGhlIEFzc29jaWF0ZWQgUHJlc3MgYW5kIFVuaXRlZCBQcmVzcyBJbnRlcm5hdGlvbmFsLCBhbmQgaGUgaGFzIHdvbiBmb3VyIEVkd2FyZCBSLiBNdXJyb3cgYXdhcmRzIGZvciBoaXMgbmV3cyBzZXJpZXMgaW52ZXN0aWdhdGluZyBhdmlhdGlvbiBzZWN1cml0eSBhbmQgc2FmZXR5IGFzIHdlbGwgYXMgaGlzIGNvdmVyYWdlIG9mIHRoZSBGb3JkL0ZpcmVzdG9uZSBjYXNlLiAKSGUgaXMgb25lIG9mIHRoZSBuYXRpb25zIGxlYWRpbmcgZXhwZXJ0cyBpbiBBREhEIGFuZCBpcyBoaWdobHkgcmVzcGVjdGVkIGluIHRoZSBtZWRpY2FsIGNvbW11bml0eS4gCldoZXRoZXIgaXRzIG9ubGluZSBnYW1ibGluZyBvciBpbiBzb21lIGNhc2lubyBpbiBWZWdhcywgaXQgaXMgc3RpbGwgaW1wb3J0YW50IHRvIGVuc3VyZSB0aGF0IHlvdSBkb250IGJldCB3aGF0IHlvdSBkbyBub3QgaGF2ZS4gSXRzIGVhc3kgdG8gbG9zZSBjb250cm9sIHdoZW4gZ2FtYmxpbmcsIGVzcGVjaWFsbHkgd2hlbiB5b3VyZSBsb3NpbmcuIE5vdCBldmVyeW9uZSBoYXZlIHRoZSBzZWxmIGNvbnRyb2wgdG8gcXVpdCB3aGVuIHRoZWlyIGFoZWFkIG9yIHdoZW4gdGhleSBoYXZlIGxvc3QgYSBsYXJnZSBhbW91bnQgb2YgbW9uZXkuCkN1cnJlbnRseSB5b3UgYXJlIGxlYXJuaW5nIHRvIGNvcGUgd2l0aCBhIHNpdHVhdGlvbiB0aGF0IG1ha2VzIHlvdSBmZWVsIG91dCBvZiBjb250cm9sIGFuZCB1bnNhZmUsIHlvdSBhcmUgY29waW5nIHdpdGggaHVtb3IsIG1hbnkgcGVvcGxlIHVzZSBodW1vciB0byBjb3BlLiAKV2hlbiB5b3UgZXhwbGFpbiBpdCB0aGF0IHdheSwgeW91J3JlIGNvbXBsZXRlbHkgcmlnaHQuCklmIEkgaGFkIHlvdXIgZmFicmljLCBJIHVzZSBjb3R0b24gZm9yIHBpZWNpbmcsIGZsYW5uZWwgZm9yIGJhY2tpbmcsIGFuZCBzYXRpbiBiaW5kaW5nLCBhbGwgaW4gdGhlIHNhbWUgYnJvbnplIHNoYWRlLiBRdWlsdCBpbiB0aGUgZGl0Y2ggb3IgaW5zaWRlIHRoZSB0cmlhbmdsZXMuIFNpbXBsZSBhbmQgZWFzeSwgYnV0IHRoZSBtaXggb2YgZmFicmljcyBhbmQgdGV4dHVyZXMgYWRkcyBpbnRlcmVzdC4KIldoZW4geW91IHNpZ24gZm9yIGJpZyBtb25leSwgdGhlIGZpcnN0IHRoaW5nIHRoZXkgYXNrIHlvdSBpcyB0aGlzOiBkaWQgeW91IGNvbWUgcmVhZHkgdG8gcGxheSBldmVyeSBkYXk/IiBSZWdnaWUgSmFja3NvbiBzYWlkIHRoZSBvdGhlciBkYXksIGFzIGhlIGRpZCBzb21lIFRWIHdvcmsgZm9yIFlFUyBOZXR3b3JrLiBSZWdnaWUga25vd3MgdGhlIGRlYWwgbW9yZSB0aGFuIGFueW9uZTsgaGUgc2l0cyBvbiBvbmUgZXh0cmVtZSBhcyB0aGUgWWFua2VlcycgZ3JlYXRlc3QgZnJlZSBhZ2VudCBhY3F1aXNpdGlvbiBhbmQgRWxsc2J1cnkgc2l0cyB3ZWxsLCBhdCB0aGUgb3RoZXIgZW5kLgpIZSB3YXMgYWxzbyBhc2tlZCB0byBwYXkgbmVhcmx5ICQyIG1pbGxpb24gaW4gZmluZXMsIGZvcmZlaXR1cmVzIGFuZCByZXN0aXR1dGlvbi4gVGhlIGp1ZGdlIG9yZGVyZWQgTXIuIApEb24ndCBsb29rIGRvd24hIFNvbWV0aW1lcyB3aGVuIHdlIGFyZSBsaXN0ZW5pbmcgdG8gcGVvcGxlIG9yIHRoaW5raW5nLCB3ZSBsb3dlciBvdXIgZ2F6ZSB0byB0aGUgZ3JvdW5kLiAKIlRoZSBsYXN0IGdhbWJsaW5nIHByZXZhbGVuY2Ugc3R1ZHkgaW4gMjAxMiBmb3VuZCAwLjggcGVyIGNlbnQgb2YgYWR1bHRzIGluIE5TVyB3ZXJlIHByb2JsZW0gZ2FtYmxlcnMuIApCdXQgdGhlIHJlYWxpdHkgaXMgdGhhdCB0aGlzIGtpbmQgb2YgdGhvdWdodGxlc3MgcmVhY3Rpb25hcnkgc3R1ZmYgY29zdHMgdm90ZXMuIEl0IGZlZWxzIGVtcG93ZXJpbmcgYnV0IGl0IHRha2VzIGF3YXkgcG9saXRpY2FsIHBvd2VyLi4gClN1Y2ggZWxpdGUgZXNjb3J0cyBtYXkgYmUgaW52aXRlZCB0byBhIGhvdGVsIHJvb20gb3IgeW91IGNhbiB2aXNpdCB0aGVtIGluIHRoZWlyIHBsYWNlLiAKR2V0IGEgcG9rZXIgYmxpbmQgdGltZXIuIFRoZXJlIGFyZSBzb21lIHRoYXQgeW91IGNhbiBwbGF5IG9uIHlvdXIgY29tcHV0ZXIgb3IgbGFwdG9wIHNvIGFsbCBwbGF5ZXJzIGNhbiB3YXRjaCB0aGUgdGltZSwgcGF5IG91dCBhbmQgbGV2ZWxzIGNoYW5nZS4gSXQgYWxzbyBtYWtlcyB5b3VyIGhvbWUgdG91cm5hbWVudCBtb3JlIGltcHJlc3NpdmUuClRoYXQgY2hyb25pYyBsaWdodCBzdXBwcmVzc2lvbiBvZiBtZWxhdG9uaW4gaGFzIGJlZW4gaHlwb3RoZXNpemVkIHRvIGluY3JlYXNlIHJlbGF0aXZlIHJpc2sgZm9yIHNvbWUgdHlwZXMgb2YgY2FuY2VyIGFuZCB0aGF0IG1lbGF0b25pbiByZWNlcHRvciBnZW5lcyBoYXZlIGJlZW4gbGlua2VkIHRvIHR5cGUgMiBkaWFiZXRlcywgb3VyIGZpbmRpbmdzIGNvdWxkIGhhdmUgaW1wb3J0YW50IGhlYWx0aCBpbXBsaWNhdGlvbnMgZm9yIHNoaWZ0IHdvcmtlcnMgd2hvIGFyZSBleHBvc2VkIHRvIGluZG9vciBsaWdodCBhdCBuaWdodCBvdmVyIHRoZSBjb3Vyc2Ugb2YgbWFueSB5ZWFycywgc2FpZCBHb29sZXkuCjExMDggY29kZSBjaXZpbCksIG9yIHNvbnQgaW5jYXBhYmxlcyBkZSBjb250cmFjdGVyICJsZXMgbWluZXVycyBub24gbWFuY2lwcyIgKGFydC4gMTEyNCBjb2RlIGNpdmlsKS4gClRoZSBzdWl0IGJhY2sgaW4gTWFyY2ggYnV0IG9ubHkgcmVjZW50bHkgdW5jb3ZlcmVkIGl0IGNsZWFyIHRoYXQgTWFndWlyZSB3YXMgbm90IGludm9sdmVkIGluIFJ1ZGVybWFuJ3Mgc2NoZW1lIGluIGFueSB3YXkgYW5kIHdhcyBjb21wbGV0ZWx5IHVuYXdhcmUgb2YgaG93IHRoZSBidXNpbmVzc21hbiwgY3VycmVudGx5IHNlcnZpbmcgYSAxMCB5ZWFyIGZlZGVyYWwgcHJpc29uIHNlbnRlbmNlIGFmdGVyIHBsZWFkaW5nIGd1aWx0eSB0byBmaXZlIGNyaW1pbmFsIGNvdW50cywgY2FtZSB1cCB3aXRoIHRoZSBjdXJyZW5jeS4gCkl0IHdhcyBhbHNvIHNtZWxseSwgbm90IHN1cmUgd2hlcmUgaXQgaGFkIGJlZW4gcnVtbWFnaW5nIGFyb3VuZCBvciBpZiBpdCBoYXMgZmxlYXMsIGV0Yy4gTXkgZnJpZW5kIGhhcyBzb21lIGNhdCBzdHVmZiB0byB0YWtlIGNhcmUgb2Ygc29tZSBvZiB0aGF0Lnd1dHNkYWRpZmZyZW5jZSAgMSBwb2ludCAgc3VibWl0dGVkIDMgeWVhcnMgYWdvSSBoYXZlIHBhcmtlZCBvbiB0aGUgd2Vla2VuZHMgaW4gUGFya2luZyBTdHJ1Y3R1cmUgSUkgKG5leHQgdG8gU3Vid2F5KSBhbmQgaW4gdGhlIGZhY3VsdHkgcGFya2luZyBuZXh0IHRvIHRoZSBib29rc3RvcmUgYW5kIGhhdmUgbm90IGdvdHRlbiBhbnkgdGlja2V0cy4gSSBqdXN0IGFzc3VtZWQgdGhhdCBwYXJraW5nIGVuZm9yY2VycyB3b3JrZWQgTW9uZGF5IHRocm91Z2ggRnJpZGF5LiAKTXkgZ2FtZSBwbGF5IGlzIGxvb3NlciBhdCBob21lIGdhbWVzIGJlY2F1c2UgaXQgaXMgd2l0aCBmcmllbmRzIGFuZCBkcmlua2luZywgU28gaSB3b3VsZCBzYXkgbXkgd2luL2xvc3MgaXMgYWJvdXQgNTA6NTAgYXQgaG9tZSBnYW1lcy4gCkVzIHdpcmQgaW4gZGVyIFNjaHVsZSBuaWNodCBtZWhyIGdlbGVybnQsIHNvbmRlcm4gZ2VwcmZ0LiAKRXQgcG91ciB0ZXJtaW5lciwgbm91cyBhdm9ucyB2b3F1IGxlIHJlcG9ydCBkZXMgdmVudGVzICBsYSBzYXV2ZXR0ZSBsZXMgam91cnMgZGUgbWFyY2ggc3VyIGxhIHJ1ZSBTdGVwaGVuc29uIGV0IGxlIHBvbnQgZGUgSmVzc2FpbnQuIFBhciBhaWxsZXVycywgbm91cyBkcGxvcm9ucyBxdScgbm91dmVhdSBsZSBzb3VzIHZpYWR1YyByZWRldmllbm5lIHVuIHBhcmtpbmcgbGUgZGltYW5jaGUuIExlcyBiYXJyaXJlcyBzb250IHN5c3RtYXRpcXVlbWVudCBjYXNzZXMsIHBhcyBlbnRyZXRlbnVlcy4gCk5vcyBjaGllbnMgZGUgZ2FyZGUgeSB2ZWlsbGVudC4gRXQgdG91dCBhIHZhIHZlcnMgbGUgcGFyb3h5c21lLiBMb25ndWUgZXQgbGVudGUgZGVzY2VudGUgcmFwaWRlIHZlcnMgbGVzIGxpbWJlcyBub2lydHJlcyBkZSBsYSBiZXN0aWFsaXQsIGRlIGwnb3VibGkgZGUgU29pIGV0IGRlIGwnQXV0cmUuIApTbyB3aGF0J3MgdGhlIGJlc3Qgc291cmNlIG9mIGluZm9ybWF0aW9uIG9yIHBsYXRmb3JtIGZvciBsZWFybmluZyBwb2tlcj8gV2VsbCBldmVyeW9uZSBoYXMgZ290IHRoZWlyIG93biBsZWFybmluZyBoYWJpdHMgYW5kIGEgbGlrZSBmb3IgcmVzb3VyY2VzLCBidXQgdGhpcyBhcnRpY2xlIHdpbGwgZm9jdXMgb24gbGVhcm5pbmcgcG9rZXIgb25saW5lLiBUaGVyZSBhcmUgbWFueSB3ZWJzaXRlcyB0aGF0IG9mZmVyIGNvbXByZWhlbnNpdmUgcG9rZXIgbGVhcm5pbmcgcmVzb3VyY2VzLiBTdGFydGluZyBmcm9tIGJlZ2lubmVycyBhbmQgbW92aW5nIHRvIGFkdmFuY2VkIGxldmVscywgZnJvbSB0cmlhbCBnYW1lcyB0byB0b3VybmFtZW50IGdhbWVzLCBmcm9tIGZyZWUgZ2FtZXMgdG8gY2FzaCBnYW1lcywgeW91IHdpbGwgbW9zdCBsaWtlbHkgZmluZCB3aGF0IHlvdSBhcmUgbG9va2luZyBmb3IuLiAKVGFjayB0aGF0IG9uIHRvIGxhc3Qgc2Vhc29uLCB3aGVuIGhlIGZpbmlzaGVkIHdpdGggb25lIGdvYWwgaW4gdGhlIGxhc3QgNDYgZ2FtZXMsIGFuZCBpdCBhIHNjb3JlbGluZSB0aGF0IGJ1cm5zIGxpa2UgcmVkIGhvdCBmaXJlcGxhY2UgcG9rZXIgaW4gdGhlIGZvcmVoZWFkLgpJIHN0aWxsIGhhdmUgc2hpdCBvbiBteSByZXBvcnQgdGhhdCBJIHJlZ3JldCBmcm9tIHRoYXQgdGltZS4uIApBZHVsdEZyaWVuZEZpbmRlciBpcyB0aGUgcGxhY2UgdG8gYmUgZm9yIGZyZWUgc2V4IGFuZCBob29rdXBzIHdpdGggbG9jYWwgbWlsZiBpbmRpYW5hcG9saXMgZnVjayBidWRkaWVzIExvb2tpbmcgZm9yIG92ZXIgNTAgZGF0aW5nPyBSZWFkIDU2IEJvb2tzIFJldmlld3MgICBBbWF6b24uIFRvIGpvaW4gTWVldGluZyBBc2lhbnMsIGp1c3QgZmlsbCBvdXQgdGhlIHNob3J0IHN1Ym1pc3Npb24gZm9ybSBvbiB0aGUgaG9tZXBhZ2UgYW5kIHN1Ym1pdC4gCkNoZWNraW5nIGp1c3QgbGV0J3MgZ2FyYmFnZSBoYW5kcyBjYXRjaCB1cCBlc3BlY2lhbGx5IHdoZW4gaXQncyBtdWx0aSB3YXkuLiAKTW9yZSBwZW9wbGUgd2FudCBpdCBiZWNhdXNlIGl0IGdpdmVzIHRoZW0gdGhlIGJlc3QgZXhwZXJpZW5jZSBpbiB0aGVpciBnb2FsIHRvd2FyZHMgYmVpbmcgZml0Li4gCkNvb2wwNTE4IHUKQW5kIG1hbiwgSSBub3QgaGVyZSB0byBzcG9vbmZlZWQgeW91IHNoaXQuIFdoeSBkbyB5b3UgZ3V5cyBuZWVkIGV2ZXJ5dGhpbmcgbWFkZSBpbnRvIGxpdHRsZSBiaXRlc2l6ZSBjaHVua3MuIFRoZSBwcm9ibGVtIGZyb20gcmlnaHQgd2luZyBzdXByZW1hY2lzdHMgb25saW5lLCBpc24ganVzdCB0aGF0IHlvdSBhcmUgYW5ub3llZCBvbiB0d2l0dGVyLiBUaGV5IGFjdHVhbGx5IGFmZmVjdCB0aGUgbGl2ZXMgb2YgcGVvcGxlLiBUaGV5IHNob3QgdXAgYSB5b2dhIHN0dWRpbyBmdWxsIG9mIHdvbWVuLCB0aGV5IHNob3QgdXAgYSBzeW5hZ29ndWUsIHRoZXkgc2hvdCB1cCB3aGF0ZXZlciByZXN0YXVyYW50IG9yIHNlbmQgYm9tYiB0aHJlYXRzLCB3aGF0ZXZlci4gWW91IHdvdWxkIGxpa2VseSBuZXZlciBiZSB0aGUgdGFyZ2V0IG9mIHRoZWlyIGhhdHJlZCwgc28gaXQgaXNuIHJlYWxseSBhIGxpdGVyYWwsIHJlYWwgd29ybGQgZmVhciBmb3IgeW91IGFwcGFyZW50bHkuCkFyZSBPbmxpbmUgUG9rZXIgUm9vbXMgU2FmZSBGcm9tIFBva2VyIEJvdHMKT25lIG9mIGhpcyBiZXN0IHJlbWVtYmVyZWQgcmVjdXJyaW5nIGJpdHMgd2FzIHRoZSBOYWlyb2JpIFRyaW8sIGFuIG9zdGVuc2libGUgbXVzaWNhbCBncm91cCB3aG9zZSBzaWxlbnQgZGlzYWdyZWVtZW50cyBwbGF5IG91dCBwYXNzaXZlbHkgYWdncmVzc2l2ZWx5LCBsaWtlIERyLiBQaGliZXMgQ2xvY2t3b3JrIFdpemFyZHMgbWVldHMgTWV0YWxsaWNhLiAKT3ZlciB0aGUgeWVhcnMgSSBoYXZlIHJlcG9ydGVkIG9uIGluc3BpcmluZyBhbmQgbmVhciBwZXJmZWN0IG1pbm9yIG1ham9yIHdvcmtzIG9uIG1pbm9yIG1pbm9yIHRvcGljcywgZXhjZWxsZW50IGNvbnNpZGVyYXRpb25zIG9uIHRoZSBzdWJsaW1lIG11bmRhbmUuIFRoZXNlIGhhdmUgaW5jbHVkZWQgZWZmb3J0cyBmcm9tIDc1KyB5ZWFycyBhZ28gb24gdGhlIGNvcnJlY3QgbWV0aG9kIG9mIGZsYWdwb2xlIHBhaW50aW5nLCB6aXBwZXIgcmVwYWlyLCBtYWludGVuYW5jZSBvZiB0aGUgcmV2ZXJzZSBvZiBiaWxsYm9hcmRzLCBhbmQgdGhlIGxpa2UuIE1hcnZlbG91cyB3b3JrcyBleGhhdXN0aW5nIGV4aGF1c3RpbmcgdG9waWNzLCBvciBzZWVtaW5nIHNvLiBNb3N0IG9mIHdoYXQgdGhlc2UgcGFtcGhsZXRzIHRhbGsgYWJvdXQgaXMgdGhlIHZlcnkgYmFzaWNzIG9mIHppcHBlciByZXBhaXIgb3IgbGFkZGVyIHJlcGFpciBvciBzY3JlZW4gcmVwYWlyIGFuZCB0aGF0IGlzIHVzdWFsbHkgY29tbXVuaWNhdGVkIG92ZXIgMjAgMzBwcCBvciBzby4gQW5kIHRoZSByZW1hcmthYmxlIHRoaW5nIGlzIHRoYXQgdGhlIGluZm9ybWF0aW9uIGlzIHVzZWZ1bCwgZXZlbiBpZiB5b3UgZGlkbiBoYXZlIGEgZGlyZWN0IGFwcGxpY2F0aW9uIGZvciBpdC4gaW5zdGFsbGF0aW9uIGlzIGEgc29tZXdoYXQgRGFkYWlzdCBsb29raW5nIHBhbXBobGV0IG9uIHRlbGVwaG9uZSBwb2xlIG1hcmtpbmcgc3lzdGVtcy4gSXMgdGhlcmUgYW55b25lIHdobyBoYXNuIG5vdGljZWQgdGhlIGZvdW5kIGFydCBwdW1tZWxlZCBpbnRvIHRlbGVwaG9uZS91dGlsaXR5IHBvbGVzIGFuZCB3b25kZXJlZCB3aGF0IHRoZSBudW1iZXJzIG1lYW50PyBUaGlzIGJvb2tsZXQsIGZhciBmcm9tIGVuY2hhbnRpbmdseSB0aXRsZWQgTWFya2luZyBTeXN0ZW1zIGZvciBQdWJsaWMgVXRpbGl0aWVzLCBwdWJsaXNoZWQgYnkgYSBtYW51ZmFjdHVyZXIgb2Ygc3VjaCBudW1iZXJzIGFuZCBzeW1ib2xzIGJhY2sgaW4gMTkzOCwgYW5zd2VycyB0aGVzZSBxdWVzdGlvbnMgYW5kIHRlbGxzIHRoZSBzdG9yeSBvZiBob3cgeW91LCB0b28sIGNhbiBtYXJrIHlvdXIgcG9sZXMgaW4gYW4gZWZmaWNpZW50IGFuZCBtb2Rlcm4gbWFubmVyLiB0aGluayB0aGUgdGhpbmcgaXMgYWNoaW5nbHkgYmVhdXRpZnVsLiB0aGluayB0aGF0IGlmIHlvdSBlbmdhZ2UgdGhlc2UgdGhpbmdzIGFzIGFudGlxdWUgcGFwZXIgdmVyc2lvbnMgb2YgdGhlIGVuZGxlc3NseSB1c2VmdWwgRElZIFlvdXR1YmUgdmlkZW9zLCB0aGV5IHRha2Ugb24gYSBoaWdoZXIgZ2xvcnkuCkJ1dCB0aGF0IGRvZXNuIG1lYW4gInJ1cGEiIHN0cmljdGx5IG1lYW5zIGJvZHkgb3IgbWF0ZXJpYWwgZm9ybS4uIApJTkNBIGlzIHJlZ2lzdGVyZWQgYXMgYW4gSW50ZXJuYXRpb25hbCBTdGFuZGFyZCBSYW5kb21pc2VkIENvbnRyb2xsZWQgVHJpYWwsIG51bWJlciBJU1JDVE4gNzYwNjMxMTMuQmV0d2VlbiBOb3YgNCwgMjAwOCwgYW5kIFNlcHQgMjksIDIwMDksIDEwMCBjaGlsZHJlbiB3ZXJlIGVucm9sbGVkIGFuZCByYW5kb21seSBhc3NpZ25lZCB0byB0aGUgY29udHJvbCBncm91cCAobj01MCkgb3IgdGhlIGRpZXQgZ3JvdXAgKG49NTApLiAKSSBkb24gcmVhbGx5IGNhcmUgaW4gdGhlIGRpZmZlcmVuY2UgaW4gY2hhbmNlIGZvciB1cyBiZXR3ZWVuIHRoZSBwb3RlbnRpYWwgb3Bwb25lbnRzLiBJZiB3ZSBwbGF5IGFzIHN0cm9uZyBhcyB3ZSBoYXZlIG5vbmUgb2YgdGhlbSBzaG91bGQgc3dlZXAgdXMgYW5kIHRoYXQgdGhlIG9ubHkgdGhpbmcgSSBjYXJlIGFib3V0LlBNX01FX1NNSUxFU19HSVJMICA1IHBvaW50cyAgc3VibWl0dGVkIDkgZGF5cyBhZ29BcyBzb21lb25lIHRoYXQgZG9lc24gYW5kIG5ldmVyIGNhcmVkIGFib3V0IGNvbWljIGJvb2tzIEkgb25seSByZWFsbHkga25vdyB0aGUgSm9rZXIsIEJhdG1hbiwgUm9iaW4sIFN1cGVybWFuLCBIYXJsZXkgUXVpbm4sIENhdHdvbWFuLCBXb25kZXIgV29tYW4sIFRoZSBGbGFzaCwgYW5kIEFxdWFtYW4uSSB0aG91Z2h0IEkga25ldyBHcmVlbiBMYW50ZXJuLCBidXQgSSB3YXMgdW5kZXIgdGhlIGltcHJlc3Npb24gaGUgd2FzIG9uZSBvZiBhIHBhaXIgb2YgY2hhcmFjdGVycyAoYSBncmVlbiBtYW4gYW5kIGEgd29tYW4pIHRoYXQgdXNlZCB0aGVpciByaW5ncyB0byB0dXJuIGludG8gb2JqZWN0cyBidXQgdXBvbiBHb29nbGluZyBhcHBhcmVudGx5IHRoYXQgbm90IGhpbS4gClRob3NlIHBhdGllbnRzIHdpdGggbmVnYXRpdmUgcmVzdWx0cyBzaG91bGQgYmUgZGlhZ25vc2VkIHdpdGggbm9uIGNvZWxpYWMgZ2x1dGVuIHNlbnNpdGl2aXR5LiAKVXNpbmcgeW91ciB0aHVtYnMsIG1hc3NhZ2UgdGhlIHNvbGVzIGluIGEgZGVlcCwgY2lyY3VsYXIgbW90aW9uLiBTdGFydCBhdCB0aGUgYXJlYSBqdXN0IGJlaGluZCB5b3VyIHRvZXMgYW5kIHdvcmsgYmFja3dhcmQgdG8gdGhlIGhlZWwuIENvbmNlbnRyYXRlIHlvdXIgZWZmb3J0cyBvbiBvbmUgc21hbGwgYXJlYSBhdCBhIHRpbWUuIApBbiBMUFQgaXMgY29uY2lzZSBhbmQgbXVzdCBiZSB3aG9sbHkgY29udGFpbmVkIGluIHRoZSB0aXRsZS4gWW91IGNhbiBleHBvdW5kIGluIHRoZSBjb21tZW50cywgYnV0IHRoZSB0aXRsZSBtdXN0IHN0YW5kIG9uIGl0cyBvd24uCktlbXBsZSdzIG1pc3Npb24gd2FzIHRvIGVsaW1pbmF0ZSBwZWRpYXRyaWMgb3JhbCBkaXNlYXNlLiBUbyB0aGlzIGRheSwgS2VtcGxlIENsaW5pYyBzdHJpdmVzIHRvIHN1cHBvcnQgdGhhdCBtaXNzaW9uIGJ5IHByb3ZpZGluZyBmcmVlLCBoaWdoIHF1YWxpdHksIG9uIHNpdGUgYW5kIG9mZnNpdGUgZGVudGFsIHNjcmVlbmluZ3MgYW5kIHByZXZlbnRhdGl2ZSBlZHVjYXRpb24gbmVlZGVkIHRvIHByb21vdGUgdGhlIG9yYWwgaGVhbHRoIGFuZCBvdmVyYWxsIHdlbGwgYmVpbmcgb2YgY2hpbGRyZW4gaW4gb3VyIGNvbW11bml0eS4gQnkgdGhlIGVuZCBvZiB0aGUgc2Nob29sIHllYXIsIEtlbXBsZSB3aWxsIGhhdmUgc2NyZWVuZWQgbW9yZSB0aGFuIDUsMDAwIHNjaG9vbCBjaGlsZHJlbiBkdXJpbmcgdGhlaXIgU2Nob29sIEJhc2VkIFNjcmVlbiBhbmQgU2VhbCBQcm9ncmFtcywgcHJvdmlkaW5nIG5lYXJseSAxMCwwMDAgcGFyZW50cyB3aXRoIGEgd3JpdHRlbiBiYXNpYyBkZW50YWwgc2NyZWVuaW5nLCByZWluZm9yY2luZyByZWd1bGFyIHZpc2l0cyB0byB0aGUgZGVudGlzdC4gClB1Ymxpc2hlZCBhdCB0aGUgT2ZmaWNlIG9mIHRoZSBQb2xpY2UgQ2hyb25pY2xlLCBMb25kb24sICgxOTIxKS4gClRsO2RyIE9QIGlzIG5vdCBwcm92aWRpbmcgYWR2aWNlIHNvIG11Y2ggYXMgYSBkZXNjcmlwdGlvbiBvZiBMT0wuIElmIGJyb256ZSBhbmQgaXJvbiBwbGF5ZXJzIGNvdWxkIHNpbXBseSAid2luIiB0aGVpciBsYW5lIG9wcG9uZW50cyB0aGV5IHdvdWxkbid0IGJlIGluIHRob3NlIGxlYWd1ZXMuIFRoYXQgaGUgdGhpbmtzIHlvdSBzaG91bGQgZm9jdXMgb24ga2lsbGluZyB5b3VyIG9wcG9uZW50IG1lYW5zIGhlIGRvZXNuJ3QgdW5kZXJzdGFuZCBMT0wgYXQgaXRzIGNvcmUgYW5kIGhlJ2xsIHByb2JhYmx5IHN0YXkgaW4gZ29sZCBiZWluZyB1bmFibGUgdG8gcmVjb2duaXplIHdoYXQgY2VydGFpbiBjaGFtcGlvbnMgbmVlZCB0byBhY2hpZXZlIGdvaW5nIGludG8gbGFuZSBpbiBjZXJ0YWluIG1hdGNodXBzLgpXaGx0IGVpbmUgUG9rZXJ2YXJpYW50ZS4gCk90aGVyIHRoYW4gdGhhdCB0aGUgZ2FtZXBsYXkgaXMgZXNzZW50aWFsbHkgaWRlbnRpY2FsIHdpdGggdGhlIHNhbWUgbWlzc2lvbnMuLiAKSSd2ZSBiZWVuIGEgY29zbWV0b2xvZ2lzdCBmb3IgMjggeWVhcnMuIEkgc3BlY2lhbGl6ZSBpbiBjb2xvciwgaGlnaGxpZ2h0cywgYW5kIGNvcnJlY3RpdmUgY29sb3IuIAoxMS4gCk5vdCBzdXJlIEkgdGhyaWxsZWQgd2l0aCBoaXMgY29tbWVudHMgYWJvdXQgbm90IGtub3dpbmcgdGhlIHNjaGVtZSB1bnRpbCB3ZSBzZWUgd2hhdCB3ZSBoYXZlLiBOb3QgdGhhdCBJIGV4cGVjdGVkIGFueXRoaW5nIGRpZmZlcmVudCByZWFsbHksIGp1c3QgbWFrZXMgaXQgc2VlbSBsaWtlIG91ciBndXlzIGFuZCBldmVuIG91ciBjb2FjaGVzIHdvbiBoYXZlIG11Y2ggdGltZSB0byBsZWFybiB3aGF0ZXZlciBkZWZlbnNlIFNwYWdzIG1hbmFnZXMgdG8gcHV0IHRvZ2V0aGVyIGluIHRoZSB3ZWVrcyBhZnRlciBPVEFzLi4gCjIxKSAiTWVjaGFuaWNhbCBmb3JjZXMgZGlyZWN0bHkgcmVndWxhdGUgdGhlIHNoYXBlIGFuZCBmdW5jdGlvbiBvZiBlc3NlbnRpYWxseSBhbGwgY2VsbCB0eXBlcy4iMjMpIE1lY2hhbmljYWwgc3RyZXNzICBzdGltdWxhdGVzIHJhcGlkIGNhbGNpdW0gaW5mbHV4IGluIHRoZSBuZXVyb211c2N1bGFyIHN5bmFwc2UsIGFnYWluIGFsdGVyaW5nIGZ1bmN0aW9uLgpKdXN0IG92ZXIgYSB5ZWFyIGFnbyBteSB3aWZlIGFuZCBJIHB1cmNoYXNlZCBhIDEwMCBXb3JsZCBQb2tlciBUb3VyIFBva2VyIENoaXAgU2V0LiBJdCB3YXMgYSBob3VzZSB3YXJtaW5nIGdpZnQgZm9yIG15IHNpc3RlciBhbmQgYnJvdGhlciBpbiBsYXcsIHdobyBlbmRlZCB1cCBtb3ZpbmcgdHdvIGRvb3JzIGRvd24gZnJvbSB1cy4gT3ZlciB0aGUgeWVhcnMgd2UgaGF2ZSBhbHdheXMgaGFkIHBva2VyIHBhcnRpZXMgYXQgbGVhc3Qgb25jZSBhIG1vbnRoLCBidXQgaWYgeW91IHNhdyBvciBldmVuIHRyaWVkIHBsYXlpbmcgd2l0aCB0aGVpciBjYXJkcyBhbmQgY2hpcHMgaXQgd291bGQgbWFrZSBzZW5zZSB3aHkgd2UgZ290IHRoZW0gYSBuZXcgc2V0LgpTb3V0aGxhbmQgaXMgYWJvdXQgdG8gc3RhcnQgYSAiR3JleWhvdW5kIFVuaXZlcnNpdHkiIHByb2dyYW0gdG8gdGVhY2ggcGVvcGxlIGhvdyB0byBjaG9vc2UgdGhlIGJlc3QgZ3JleWhvdW5kLiJXZSdyZSBsb29raW5nIGF0IGhvdyBkbyB3ZSBicmluZyByYWNpbmcgYmFjayB0aGUgd2F5IHRoZXkgYnJvdWdodCBiYWNrIHRoZSBwb2tlciBnYW1lLCIgc2FpZCAsIGRpcmVjdG9yIG9mIHJhY2luZyBhdCBTb3V0aGxhbmQuLiAKSW4gYWRkaXRpb24sIHRoZXJlIGFyZSBXb3JsZCBFbnZpcm9ubWVudCBkYXlzLCBnb2xmIGNsYXNzaWNzIHRvIHJhaXNlIGZ1bmRzIGZvciBwaHlzaWNhbGx5IGNoYWxsZW5nZWQgY2hpbGRyZW4sIFJvYWQgU2FmZXR5IGRheXMsIGR1cmluZyB3aGljaCBjb2xsZWFndWVzIGZyb20gYWNyb3NzIHRoZSBjb3VudHJ5IG1lZXQgd2l0aCB0aGVpciBjb21tdW5pdGllcyB0byBkaXNjdXNzIHJlc3BvbnNpYmxlIGRyaW5raW5nIGFuZCB3YXlzIHRvIHJlZHVjZSBpbXBhaXJlZCBhbmQgZGlzdHJhY3RlZCBkcml2aW5nLCBhbmQgbXVjaCBtb3JlLiAiV2UncmUgdHJ1bHkgZm9jdXNpbmcgb24gaW5pdGlhdGl2ZXMgdG8gYmV0dGVyIGNvbW11bml0aWVzIGFuZCB0aGUgd29ybGQgYXJvdW5kIHVzLCIgc2F5cyBLYXRlcy4KQXMgc29tZW9uZSB3aG8gc2xvd2x5IG92ZXIgdGhlIHNlYXNvbnMgY2xpbWJlZCBmcm9tIHNpbHZlciB0byBtYXN0ZXJzIGluIHNvbG8gcXVldWUgcGxheWluZyA5MCUgc3VwcG9ydCwgSSB0aGluayBtYW55IGhlYWxlciBtYWlucyBzdGFnbmF0ZSBiZWNhdXNlIHRoZXkgdGhpbmsgb2YgdGhlbXNlbHZlcyBhcyBnb29kIHBsYXllcnMganVzdCBieSB2aXJ0dWUgb2YgcGxheWluZyBhIGxlc3Mgd2FudGVkIHJvbGUuIEkgdGVsbCB5b3Ugc3RyYWlnaHQgdXAsIHRoZXJlIHZlcnkgbXVjaCBhcmUgYmFkIG1lcmNpZXMsIGFuZCB5b3UgaGF2ZSBhIGxvdCBtb3JlIGltcGFjdCBvbiB5b3VyIG93biBzdXJ2aXZhbCB0aGFuIHlvdSB0aGluay4KUnVzc2lhIG5vdyBoYXMgaXRzIG93biBsaXR0bGUgTWluaXN0cnkgb2YgVHJ1dGguIERtaXRyeSBNZWR2ZWRldiBpc3N1ZWQgdGhlIGRlY3JlZSB0byBjcmVhdGUgYSBuZXcgYm9keSB3aXRoIGEgbG9uZyBidXQgbWVhbmluZ2Z1bCBuYW1lOiB0aGUgUHJlc2lkZW50aWFsIENvbW1pc3Npb24gZm9yIFByZXZlbnRpb24gb2YgRmFsc2lmaWNhdGlvbiBvZiBIaXN0b3J5IHRvIHRoZSBQcmVqdWRpY2Ugb2YgUnVzc2lhJ3MgSW50ZXJlc3RzLiBUaGlzIENvbW1pc3Npb24gd2lsbCBtb25pdG9yICJhdHRlbXB0cyB0byBmYWxzaWZ5IGhpc3RvcmljYWwgZmFjdHMgYW5kIGV2ZW50cyIgdGhhdCBtYXkgdW5kZXJtaW5lICJ0aGUgaW50ZXJuYXRpb25hbCBwcmVzdGlnZSBvZiB0aGUgUnVzc2lhbiBGZWRlcmF0aW9uIiBhbmQgY29vcmRpbmF0ZSBlZmZvcnRzIG9mIGdvdmVybm1lbnQgaW5zdGl0dXRpb25zIG9mICJhZGVxdWF0ZSByZXNwb25zZSB0byBhbmQgbmV1dHJhbGl6YXRpb24iIG9mIHN1Y2ggYXR0ZW1wdHMuCkV2ZXJ5IG90aGVyIG1ham9yIGluZHVzdHJpYWxpemVkIGVjb25vbXkgYWxyZWFkeSBoYXMgYSBWYWx1ZSBBZGRlZCBUYXggc28gaXQgc2hvdWxkIG5vdCBiZSBhIG1ham9yIGlzc3VlLiBUaGUgVkFUIHRoYXQgSSBwcm9wb3NpbmcgaXMgbG93ZXIgdGhhbiB0aGF0IG9mIG1vc3Qgb3RoZXIgbWFqb3IgZWNvbm9taWVzICAgaGFsZiB0aGUgYXZlcmFnZSBFdXJvcGVhbiBsZXZlbCBmb3IgZXhhbXBsZS4gCkl0IHdhcyByZW1pbmRlZCBvZiB3aHlJIGxvdmVkIGJlaW5nIGluIGFjYWRlbWljcy4gSXQgZmVsdGxpa2UgdGhpcyByZWFsbHkgYmVhdXRpZnVsIGNvbGxpc2lvbiBvZnRoZSBhY2FkZW1pYyB3b3JrIEkgd2FzIGRvaW5nIHdpdGggdGhlcmVhbCB3b3JsZCBkZWNpc2lvbiBtYWtpbmcgcHJvYmxlbSB0aGF0cG9rZXIgcHJlc2VudHMuLiAKSSBhbHNvIHJlY29tbWVuZCwgaWYgaXQgaXMgYW4gb3B0aW9uLCB0byBwbGF5IG1vcmUgbGltaXQgZ2FtZXMsIGVzcGVjaWFsbHkgYXMgeW91IGhhdmluZyB0cm91YmxlIGZpZ3VyaW5nIG91dCB3aGF0IHlvdXIgb3Bwb25lbnQgY291bGQgaGF2ZSBmcm9tIHRoZSAiZm9yZ290IEEgNSBzdHJhaWdodCIgc3RvcnkuIFRoYXQgZ2l2ZSB5b3UgbW9yZSBleHBlcmllbmNlIGFzIHlvdSBsZWFybi4gCktBSkEgS0FMTEFTLCBhIGZvcm1lciBjb21wZXRpdGlvbiBsYXd5ZXIgYW5kIG1lbWJlciBvZiB0aGUgRXVyb3BlYW4gUGFybGlhbWVudCwgaXMganVzdCB0aGUgc29ydCBvZiBidXNpbmVzc2xpa2UgcG9saXRpY2lhbiBvbmUgZXhwZWN0cyBpbiBFc3RvbmlhLiAKQWxsIHRoZXNlIENhc2lubyBHYW1lcyBEb3dubG9hZCBndWlkZXMgYXJlIHBhY2tlZCB3aXRoIGluZm9ybWF0aW9uIHN1Y2ggYXMgd2hlcmUgdG8gZmluZCBGcmVlIENhc2lubyBTbG90IEdhbWVzIE9ubGluZS4gWW91IHdpbGwgYWxzbyBsZWFybiBob3cgdG8gaGFuZGxlIGRpZmZlcmVudCBzaXR1YXRpb25zIG9mIHRoZSBnYW1lcy4gVGhleSB3aWxsIGd1aWRlIHlvdSBhYm91dCBob3cgeW91IGNhbiBzdGFydCBoYW5kcywgbWFrZSBwYWlycywgaG93IHRvIHBsYXkgYWdncmVzc2l2ZWx5IGFuZCBob3cgdG8gZGVhbCB3aXRoIG90aGVyIGFnZ3Jlc3NpdmUgcGxheWVycyBldGMuIApEIHRycyBtYXV2YWlzIG9laWwgcGFyIGxlIFNOUEwsIHN5bmRpY2F0IG1ham9yaXRhaXJlIGRlcyBwaWxvdGVzIGQgRnJhbmNlLCBhIGxhaXNzIHBsYWNlICB1bmUgY291cnRlIHByaW9kZSBkIHZpdGUgY29uY2x1ZSB1biBtb2lzIHBsdXMgdGFyZCBwYXIgdW4gcHJlbWllciBldCBmb3J0IHNpZ25lIGQgc29jaWFsLiBSZXRvdXIgc3VyIHF1YXRyZSBtb2lzIG1haWxscyBkZSBsYSBzaWduYXR1cmUgZGUgcGx1c2lldXJzIGFjY29yZHMgc29jaWF1eCwgZGUgZGNpc2lvbnMgZm9ydGVzIGV0IGRlIHByZW1pZXJzIHJzdWx0YXRzIGVuY291cmFnZWFudHMuIApJZiBoZSBmaW5hbGx5IGFkbWl0cyB0byB0aGUgYWZmYWlycywgaGUgd2lsbCBsaWtlbHkgYmxhbWUgeW91LiBIZSB3aWxsIG1ha2UgeW91IGZlZWwgaW5zYW5lLiAKT25jZSB5b3UgZ2V0IGEgZGVjZW50IHNhbXBsZSAoc2F5IDEwLDAwMCsgaGFuZHMpIGRvd25sb2FkIGEgZnJlZSB0cmlhbCBvZiBIb2xkZW0gTWFuYWdlciBvciBQb2tlciBUcmFja2VyIGFuZCB0aGVuIHlvdSBjYW4gdGhlbiBzdGFydCBsb29raW5nIGF0IHNvbWUgbnVtYmVycy4gSWYgeW91IGEgUG9rZXJzdGFycyBhY2NvdW50LCBjb250YWN0IHN1cHBvcnQgYW5kIHRoZXkgd2lsbCBzZW5kIHlvdSBldmVyeSBzaW5nbGUgaGFuZCBoaXN0b3J5IHlvdSBldmVyIHBsYXllZC4gCk5vIG1hdHRlciBob3cgbXVjaCBwYWluIHlvdSBtaWdodCBmZWVsLCB0cmlhZ2UgaXMgYmFzZWQgb24gd2hvIGlzIGR5aW5nIGZpcnN0LiBZb3UgbWlnaHQgZmVlbCBsaWtlIHlvdSBhcmUgZHlpbmcsIGJ1dCB5b3UgYXJlbiBUaGUgY2hhbmNlIG9mIHNvbWVvbmUgZHlpbmcgZnJvbSBhIG1pZ3JhaW5lIGlzIG11Y2ggbXVjaCBsb3dlciB0aGFuIHRoZSBjaGFuY2Ugb2YgZHlpbmcgZnJvbSBhbnkgb2YgdGhlIG90aGVyIGNvbmRpdGlvbnMgdGhhdCB5b3UgbGlzdGVkLlNvbWV0aGluZyBpcyB3cm9uZyB3aXRoIHlvdXIgdHJlYXRtZW50IGlmIHlvdSBuZWVkIHRvIGdvIHRvIHRoZSBFUiBzbyBmcmVxdWVudGx5LiAKVGhleSB3aWxsIGJlIDE4IHdoZW4geW91IDU1LiBUaGVuIHlvdSBoYXZlIDEwIHllYXJzIHRvIHNhdmUgZm9yIHJldGlyZW1lbnQuT2J2aW91c2x5LCB0aGVyZSBleGNlcHRpb25zIGFuZCBidW1wcyBpbiB0aGUgcm9hZCBpZiB5b3UgY2FuIGZpbmQgdGhlIG9uZSwgYnV0IEkgZmVlbCB0aGlzIHJvYWRtYXAgd291bGQgZml0IGEgbGFyZ2UgcG9ydGlvbiBvZiBwZW9wbGUgd2hvIGdldCBtYXJyaWVkIHJpZ2h0IG91dCBvZiBzY2hvb2wuIDYgcG9pbnRzICBzdWJtaXR0ZWQgOCBkYXlzIGFnb0kgMzUgYW5kIHByZWduYW50IHdpdGggbXkgZmlyc3QuIApCdXQgaSBhbSBzY2FyZWQgYWJvdXQgbW9uZXkgYW5kIGkgd29yayBhYm91dCA4MCBob3VycyBwZXIgd2VlaywgbGVhdmluZyBtZSBsaXR0bGUgdGltZSBvciBlbmVyZ3kgdG8gc2hvcCBjb3JyZWN0bHkuLiAKWW91ciBpbnRybyBpcyB5b3VyIG5leHQgY2hhbmNlIHRvIGtlZXAgeW91ciBhdWRpZW5jZSBlbmdhZ2VkLiAKQnV0IGF0IHRoZSBlbmQgb2YgaXQgYWxsIGl0IHdhcyBhIHRpZSA0IDQgMSwgYW5kIHdlIHRpZWQgaW4gYmxvY2tzLiAKWW91IGVpdGhlciBoYXZlIGFuIEFtZXJpY2FuIFN0YWZmb3JzaGlyZSBUZXJyaWVyIG9yIGEgU3RhZmZvcmRzaGlyZSBCdWxsIFRlcnJpZXIgb3IgeW91IGRvbid0LiAKTXkgd2lmZSBhbmQgSSBoYXZlIGhlbGQgb2ZmIG9uIGhhdmluZyBhIGNoaWxkIGJlY2F1c2Ugb3VyIGpvYnMgaGF2ZSB2ZXJ5IHBvb3IgaGVhbHRoIGluc3VyYW5jZSBhbmQgaXQgd291bGQgYmUgYSBuaWdodG1hcmUgKHdlIGN1cnJlbnRseSBsaXZpbmcgaW4gaGVyIHBhcmVudHMgYmFzZW1lbnQpLiBTb21lIGRheXMsIHNlbGxpbmcgb3V0IGlzIHRhbnRhbGl6aW5nLiAKVGhvdXNhbmRzIG9mIHZpc2l0b3JzIGVhY2ggeWVhciB1dGlsaXplIHRoZSBzaHV0dGxlIHN5c3RlbSBpbiBTcHJpbmdkYWxlIHRvIGFjY2VzcyBaaW9uIE5hdGlvbmFsIFBhcmsuIApUaGUgaGlnaCBzdGFrZXMgcG9rZXIgZ2FtZSBvZiBleHByZXNzaW9ucyBvZiBpbnRlcmVzdApKb2IgVGhlIEJ1cmVhdSBvZiBMYWJvciBTdGF0aXN0aWNzIGxpc3RzIEVIUyBzcGVjaWFsaXN0cyB1bmRlciB0aGUgY2F0ZWdvcnkgb2Ygb2NjdXBhdGlvbmFsIGhlYWx0aCBhbmQgc2FmZXR5IHNwZWNpYWxpc3RzLiBUaGVzZSBzcGVjaWFsaXN0cyBlYXJuZWQgYSBtZWFuICQzMi4zNyBwZXIgaG91ciBvciAkNjcsMzQwIHBlciB5ZWFyIGFzIG9mIE1heSAyMDExLiAKT24gdGhlIG1hcmNoIGJhY2sgZnJvbSBnZXR0aW5nIGJsdWVzIGlzc3VlZCwgd2UgYWxsIGZvcm1lZCB1cCBpbiBvdXIgZmxpZ2h0cyBhbmQgd2FpdGluZyB0byBmYWxsIG91dCB1cHN0YWlycy4gCiggQmluZ2VuLCBXYXNoLiAKQXMgd2VsbCwgbXkgbGlnaHRzIG5vdyBnbyBvZmYgQUxMIHRoZSB0aW1lISBUdXJuZWQgc2Vuc2l0aXZpdHkgd2F5IGRvd24gYW5kIHRoZXkgc3RpbGwgZ28gb2ZmLiAKT3RoZXIgZXhwZW5zZXMgZGVuaWVkIGJ5IHRoZSBqdWRnZSBpbmNsdWRlZCAxMDAgcGVyIGNlbnQgb2YgdGhlIGVtcGxveWVlIG1vbnRobHkgbW9iaWxlIHBob25lIGJpbGxzLiBUaGUganVkZ2UgZm91bmQgdGhhdCB0aGUgdGF4cGF5ZXIgd2FzIG5vdCB1bmRlciBhbnkgY29udHJhY3R1YWwgb2JsaWdhdGlvbiB0byBwYXkgZm9yIGEgbW9iaWxlIHBob25lIGZvciBlbXBsb3ltZW50IHB1cnBvc2VzLiBJbiBmYWN0LCBoaXMgY29udHJhY3Qgb2YgZW1wbG95bWVudCBldmVuIHN0YXRlZCwgdW5kZXIgdGhlIGhlYWRpbmcgUGhvbmUgVXNlLCB0aGF0IHVzZSBvZiBwZXJzb25hbCBjZWxsdWxhciBwaG9uZXMgZm9yIHByb2R1Y3Rpb24gcHVycG9zZXMgbXVzdCBmaXJzdCBiZSBhcHByb3ZlZCBhbmQgcGF5bWVudCB3aWxsIGJlIG1hZGUgZm9yIGJ1c2luZXNzIGNhbGxzIG9ubHkuIFdoZW4gdGhlIHRheHBheWVyIHRyaWVkLCB0d2ljZSwgdW5zdWNjZXNzZnVsbHksIHRvIGdldCByZWltYnVyc2VkIGZvciBoaXMgY2VsbHBob25lLCBoZSB3YXMgc2ltcGx5IHRvbGQgdG8gdXNlIHRoZSBwaG9uZS4gSW4gYWRkaXRpb24sIHRoZSBqdWRnZSBwb2ludGVkIG91dCB0aGF0IGV2ZW4gaWYgaGlzIGNlbGxwaG9uZSBjb3N0cyB3ZXJlIGRlZHVjdGlibGUsIHRoZSBhbW91bnQgZGVkdWN0ZWQgYmUgbGltaXRlZCB0byBhIHJlYXNvbmFibGUgcG9ydGlvbiByZXByZXNlbnRpbmcgd29yayByZWxhdGVkIHVzZSBhcyBvcHBvc2VkIHRvIHBlcnNvbmFsIHVzZS4gdGhlIHRheHBheWVyIGV4cGVuc2VkIGEgdmFyaWV0eSBvZiBwZXJzb25hbCBpdGVtcyB1bmRlciB0aGUgaGVhZGluZyB3aGljaCBpbmNsdWRlZCBmb290d2VhciBhbmQgY2xvdGhlcywgYSBjYW1jb3JkZXIsIGNvbXB1dGVyIHJlbGF0ZWQgc3VwcGxpZXMsIGFuZCBvdGhlciBzdXBwbGllcyBzdWNoIGFzIGJ1bGJzLCB0YXBlIGFuZCBhIGZsYXNobGlnaHQuIFdoaWxlIHRoZSBqdWRnZSBoYWQgbm8gZG91YnQgdGhhdCB0aGVzZSBpdGVtcyB3ZXJlIHVzZWQgaW4gdGhlIGNvdXJzZSBvZiBoaXMgZW1wbG95bWVudCwgdGhlIGp1ZGdlIHdhcyBub3Qgc2F0aXNmaWVkIHRoYXQgdGhlIHRheHBheWVyIGhhZCBhIGNvbnRyYWN0dWFsIG9ibGlnYXRpb24gdG8gcGF5IGZvciB0aGVtLiBBbHNvLCBjbG90aGluZyBvciBmb290d2VhciBhcmUgZ2VuZXJhbGx5IGNvbnNpZGVyZWQgdW5sZXNzIHRoZXkgYXJlIGpvYiBzcGVjaWZpYy4KVGhlIHRlbnNpb25zIGRpZG4ndCBlbmQgdGhlcmUuIEFsb25nIHRoZSBiYWNrIHdhbGwgMjAwNCBXb3JsZCBQb2tlciBDaGFtcGlvbiBHcmVnIFJheW1lciBzdG9vZCB3YWl0aW5nIGZvciBhIHRhbGsgcmFkaW8gaW50ZXJ2aWV3LiAiRm9jdXMgb24gdGhlIEZhbWlseSBjb25zaWRlcnMgcG9rZXIgaW1tb3JhbCwiIFJheW1lciBzYWlkLCBnZXN0dXJpbmcgdG93YXJkcyB0aGUgRm9jdXMgb24gdGhlIEZhbWlseSBib290aCBkb3duIGFuIGFpc2xlLiAKVGhlcmUgaXMgbGl0dGxlIHRoYXQgY2FuIGJlIG9mZmVyZWQgdG8gdGhlIGRpdmlkZWQgQW1lcmljYW5zIGF0IHRoaXMgcG9pbnQgYXMgYSBtaWRkbGUgZ3JvdW5kLiAKSSBhbSBoYXZpbmcgYSByZWFsbHkgdG91Z2ggdGltZSB0cnlpbmcgdG8gZmluZCBhIGdvb2QgMTQ0MHAgbW9uaXRvciByZWNvbW1lbmRhdGlvbi4gSSBub3QgZ29pbmcgdG8gZG8gbXVjaCBnYW1pbmcsIGFuZCBsb29raW5nIG1vcmUgZm9yIGEgZ29vZCBxdWFsaXR5IG1vbml0b3IgSSBjYW4gdXNlIGZvciBleHRlbmRlZCBwZXJpb2RzIG9mIHJlYWRpbmcgLyBFeGNlbCAvIEpNUC9TUFNTIC8gV29yZCAvIGRvY3VtZW50YXRpb24gYW5kIHNvIG9uLiBJIGxpa2Ugc29tZXRoaW5nIDI1KyBpbmNoZXMsIGFuZCBmb3IgbWUgSSBsaWtlIGdyZWF0IGNvbnRyYXN0IChub3RoaW5nIGFubm95cyBtZSBtb3JlIHRoYW4gd2hlbiBJIGNhbiBzZWUgc21hbGxlciBzdHJlZXRzIG9uIEdvb2dsZSBNYXBzIGJlY2F1c2UgdGhlIG1vbml0b3IgaXMgY3JhcHB5IGZyb20gYSBjb250cmFzdC9icmlnaHRuZXNzIHN0YW5kcG9pbnQpLiA2MCA3NSBIeiByZWZyZXNoIGlzIHByb2JhYmx5IGZpbmUsIEkgY291bGRuIGNhcmUgbGVzcyBhYm91dCByZXNwb25zZSB0aW1lIGZvciBub3csIGlkZWFsbHkgc29tZXRoaW5nIGFyb3VuZCAkMjAwLCBidXQgd2lsbGluZyB0byBnbyB1cCB0byAkMjUwIDMwMCBpZiBpdCB3b3VsZCBkZWZpbml0ZWx5IGJlIGEgaHVnZSB1cGdyYWRlLgogTGVzIGJsb2dzIG91IHNpdGVzIGJpYmxpcXVlcyBzb250IG5vbWJyZXV4IGV0IGNoYWN1biAgc2EgZmFvbiBhbWJpdGlvbm5lIGRlIGZhY2lsaXRlciBsYSByZW5jb250cmUgYXZlYyBsZSB0ZXh0ZSBiaWJsaXF1ZS4gUGFybWkgY2V1eCBjaSwgZW4gdm9pY2kgdW4gcXVpIHNlIHByc2VudGUgY29tbWUgIkxlIHBvcnRhaWwgZGVzIHNjaWVuY2VzIGJpYmxpcXVlcyIuIElsIHMnYWdpdCBkdSBzaXRlIEFyb3BhZ2UgcXVpIGVzdCBlbiBlZmZldCB1bmUgdnJpdGFibGUgbWluZSBkZSByZXNzb3VyY2VzIGV0IGQnb3V0aWxzIHBvdXIgcXVpIGRzaXJlbnQgYXBwcm9mb25kaXIgc2EgbGVjdHVyZSBkZSBsYSBCaWJsZS4KSSBhbSBzdXJyb3VuZGVkIGJ5IG5hdHVyZSBhbmQgaW5zcGlyZWQgYnkgZXZlcnl0aGluZy4gSSBhbSBnb2luZyBiYWNrIHRvIG15IGNoaWxkaG9vZCB3aGVuIEkgd2FzIGNvbnRlbnQgdG8gc2l0IGluIHRoZSBzdW4gYW5kIHN0YXJlIGF0IHRoZSBhbnRzIGluIHRoZSBncmFzcyB3aXRoIGZhc2NpbmF0aW9uLiBJIGZlZWwgc28gbXVjaCBtb3JlIGFsaXZlIGFuZCBzbyBtdWNoIG1vcmUgY2FsbS4gCkl0IHdhcyBvbmUgb2YgdGhlIHNhZGRlc3QgZGF5cyBJIGNhbiByZW1lbWJlci4gCkF0dHJpYnV0ZXMgYXJlIHRoZSBzZXZlbiB2aXJ0dWVzIG9mIEJ1c2hpZG8sIGFuZCByYW5nZSBmcm9tIDAgNy4gVGhleSBhbHNvIHNlcnZlIGFzIGEgcm9sZXBsYXkgbW9kZWwsIGlzIHlvdXIgY2hhcmFjdGVyIG1vcmUgaW52ZXN0ZWQgaW4ganVzdGljZSwgb3IgaG9ub3I/IFNraWxscyBhcmUgYnJva2VuIGluIHRvIHNldmVuIGNhdGVnb3JpZXMsIGVhY2ggd2l0aCBzZXZlbiBzdWJjYXRlZ29yaWVzIGFuZCByYW5nZSBmcm9tIDAgICA1LiBXaGVuIHlvdSBjcmVhdGUgeW91ciBjaGFyYWN0ZXIgeW91IGFzc2lnbiBhIHJlbGF0ZWQgYXR0cmlidXRlIHRvIGEgcGFydGljdWxhciBza2lsbCwgZWFjaCBhdHRyaWJ1dGUgY2FuIG9ubHkgYmUgdXNlZCBvbmNlIHBlciBjYXRlZ29yeS4gClRoZSBkaWZmZXJlbmNlIGlzIGluIGFzc2F1bHQgd2l0aCBhIHdlYXBvbiB2cyBhc3NhdWx0IHdpdGggYSBkZWFkbHkgd2VhcG9uLiBGb3IgZXhhbXBsZSBteSB3ZWFrIGFzcyBwdW5jaGVzIHdvdWxkIGJlIGFzc2F1bHQgd2l0aCBhIHdlYXBvbi4gTWlrZSBUeXNvbiBwdW5jaGVzIHdvdWxkIGJlIGFzc2F1bHQgd2l0aCBhIGRlYWRseSB3ZWFwb24uIApCdXQgd2UgZGlkIGV2ZXJ5dGhpbmcgcXVpY2tseSBhbmQgaGFkIG5vIGlzc3VlcyBmcm9tIHRoZSBpbnNwZWN0aW9uIGZvciB0aGVtIHRvIGZpeC4gClRoZSBMaWZlIGFuZCBXb3JrcyBvZiB0aGUgQ2VsZWJyYXRlZCBUaGlydGVlbnRoIENlbnR1cnkgSW5kaWFuIE15c3RpYyBQb2V0IC4gQSBQcmFjdGljYWwgR3VpZGUgdG8gTWluZGZ1bG5lc3Mgb2YgQnJlYXRoaW5nIGFuZCBUcmFucXVpbCBXaXNkb20gTWVkaXRhdGlvbi4gClNoZSBkZWZpbml0ZWx5IG5vdCBhIGJlYXIgYmVjYXVzZSBvZiB0aGUgZmFjZSBzaGFwZSBhbmQgY2hhbmdlIGluIHRleHR1cmUvbWF0ZXJpYWwgYXJvdW5kIHRoZSBmYWNlLiBUaGF0IGxpbmUgcHJldHR5IG11Y2ggb25seSBoYXBwZW5zIHdpdGggbGFtYnMgYW5kIHNoZWVwLiAKQnViYmxlIGN1dCBCYXJiaWUuIFRoZXkgY2FtZSBpbiBhIHZhcmlldHkgb2YgaGFpciwgZXllLCBsaXAgY29sb3JzLiBTaGUgY2FtZSB3aXRoIGEgc3RyYWlnaHQgaGFyZCBsZWdzLiAKSXQgcmVhbGx5IHNheXMgYWxsIHRoYXQuIEdvZCBjb21tYW5kbWVudHMgZ2V0IHRoZSBtb3JhbGl0eSBvZiBzbGF2ZXJ5IGNvbXBsZXRlbHkgYmFja3dhcmRzLiBBbmQgYmVmb3JlIGFueW9uZSBzYXlzICJidXQgbmV3IHRlc3RhbWVudCIsIG5vd2hlcmUgaW4gdGhlIG5ldyB0ZXN0YW1lbnQgaXMgdGhlcmUgYSBzaW1wbGUgY29uZGVtbmF0aW9uIG9mIHNsYXZlcnkuIEluIGZhY3Qgb25lIG5lZWRzIHRvIHN0cmV0Y2ggcHJldHR5IGZhciB0byBvdmVyY29tZSBzdGF0ZW1lbnRzIGxpa2UgIlNsYXZlcyBvYmV5IHlvdXIgbWFzdGVycywgZXZlbiB0aGUgY3J1ZWwgb25lcy4iICBKZXN1cyBUaGUgb25seSBtb3JhbCB0aGluZyB0byB0ZWxsIGEgc2xhdmUgaW4gdGhhdCBjb250ZXh0IGlzICJmaWdodCB3aXRoIG1lIGZvciB5b3VyIGZyZWVkb20uIgpUaGlzIGFyYyBpcyBiYXNlZCBpbiBhIHJlYWwgcGxhY2Ugd2hlcmUgdW5uYXR1cmFsLCBtYWdpY2FsIHRoaW5ncyBhcmUgaGFwcGVuaW5nLiBUaGUgY2hhcmFjdGVycyBhcmUgbWVhbnQgdG8gYmUgYmFzZWQgaW4gcmVhbGl0eSB3aXRoIHdlaXJkIG1hZ2ljIHN0dWZmIGJlaW5nIG1peGVkIGluLiBUaGV5J3JlIGZsYXdlZCBpbiBhIG5hdHVyYWwgaHVtYW4gd2F5IHRvIGJlIGJhc2VkIGluIHJlYWxpdHkuIEJlY2F1c2Ugb2YgdGhpcyBiYXNpcyB0aGluZ3MgbmF0dXJhbGx5IGFyZW4ndCBhcyBvZmYgdGhlIHdhbGwgdG8gYmVnaW4gd2l0aC5JIHNlZSB0aGlzIGFzIGEgY29tcGFyaXNvbiBiZXR3ZWVuIEFtbmVzdHkgYmVpbmcgdGhlIGVhcmx5IHNlYXNvbnMgaW4gU3VwZXJuYXR1cmFsIGJlZm9yZSB0aGluZ3MganVtcCB0aGUgc2hhcmsgd2l0aCB0aGUgYW5nZWwgc3R1ZmYgYW5kIGxpa2UgQWR2ZW50dXJlIFRpbWUgd2hlcmUgbm90aGluZyBoYXMgdG8gbWFrZSBzZW5zZSB5b3UgYWNjZXB0IHRoZSBnYWcuUGVyc29uYWxseSBJIGVuam95ZWQgQmFsYW5jZSBtb3JlIGJlY2F1c2UgaXQgc2VlbWVkIG1vcmUgdW5wcmVkaWN0YWJsZS4gCkhlciBjbyBmb3VuZGVyIGFuZCBjcmVhdGl2ZSBkaXJlY3RvciBLYXRpZSBLZWF0aW5nIHNheXMgIm9wZW4gb2ZmaWNlcyBhcmUgZ3JlYXQgZm9yIGVuY291cmFnaW5nIHBlb3BsZSB0byB3b3JrIGF0IGhvbWUuIiBBbmQgd2hlbiB5b3UncmUgb24gZGVhZGxpbmUsIHRoZXkncmUgZ3JlYXQgZm9yIGhpZGUgYW5kIHNlZWsgZnJvbSB5b3VyIGVkaXRvciEgSSBtZWFuIGJvc3MuIFtFZGl0b3JzIG5vdGU6IE5pY2UgdHJ5LCBNZWcuXSAiVGhlIGdvb2QgdGhpbmcgYWJvdXQgdGhlIG5vbWFkaWMgb2ZmaWNlIGxpZmVzdHlsZSBpcyB0aGF0IG5vIG9uZSBldmVyIGtub3dzIHdoZXJlIHRvIGxvb2sgZm9yIHlvdSwiIHNheXMgS2VhdGluZy4uIApJIHRlbGxpbmcgdGhlbSB0aGF0IHRoZXkgY2FuIGFkdmFuY2UgYXMgYSBuYXRpb24sIHllcy4gClRoZSBzaWduIHRoZW4gd291bGQgImJlIHZpc2libGUgYXQgbmlnaHQsIGV4Y2VwdGluZyBpbiBjYXNlcyBvZiB1bnVzdWFsIGRhcmtuZXNzLCBhbmQgbWF5IGV2ZW4gdGhlbiwgaWYgbmVjZXNzYXJ5LCBiZSByZWFkIHdpdGggdGhlIGZpbmdlcnMiLiAKQXMgdGhlc2UgYXJlIHRoZSBvcmdhbml6YXRpb24gZmlyc3QgZm9yZWNhc3RzIGluIGFsbW9zdCBmb3VyIG1vbnRocywgaXQgcGFydGx5IHBsYXlpbmcgY2F0Y2ggdXAgd2l0aCBkZXZlbG9wbWVudHMgc2luY2UgdGhlbi4gSW4gdGhhdCBwZXJpb2QsIGxpdHRsZSBoYXMgZ29uZSByaWdodCBmb3IgdGhlIHdvcmxkIGJpZ2dlc3QgZWNvbm9taWVzOiBXZWFrbmVzcyBpbiB0aGUgZXVybyBhcmVhIGFuZCBDaGluYSBhcmUgcHJvdmluZyBtb3JlIHBlcnNpc3RlbnQsIHRyYWRlIGdyb3d0aCBoYXMgc2xvd2VkIHNoYXJwbHkgYW5kIHVuY2VydGFpbnR5IG92ZXIgQnJleGl0IGhhcyBjb250aW51ZWQuClN0cm9uZ2ZhaXRoZmlybW1pbmQgdQpUS1kgaXMgbm93IHdvcnRoIC4wNyUgVVNEIG9mIGl0cyBJQ08gdmFsdWUuIApKJ2FpIHZpc2l0ZSB1biBwb3N0ZSBkb3VhbmllciBjYW5hZGllbiwgdGxwaG9uIGEgdW4gY2VudHJlIGRlIHNlcnZpY2UgYSBsYSBjbGllbnRsZSBkZSBEb3VhbmVzIENhbmFkYShXaW5uaXBlZykgZXQgY29tbXVuaXF1ZSBhdmVjIGxlIE1pbmlzdHJlIGRlcyBEb3VhbmVzLCBhIE90dGF3YSwgZXQgcGVyc29ubmUgbidlc3QgYXUgY291cmFudCBkJ3VuIG5vdXZlYXUgc3lzdG1lIGQnY2hhbmdlIGQnaW5mb3JtYXRpb25zLCBxdWkgZXN0IGVuIHZpZ3VldXIgZGVwdWlzIDIwMTQhQWN0dWVsbGVtZW50LCBsZXMgZG91YW5pZXJzIGZvbnQgdW5lIGRlbWFuZGUgYSBsJ2F1dHJlIHBheXMsIHBvdXIgaW5mb3JtYXRpb25zIHN1ciB1biBjaXRveWVuLCBldCBsYSBycG9uc2UgZXN0IGRvbm5lIGF2ZWMgdW4gZGxhaSBkJ2Vudmlyb24gMzAgbWludXRlcy4gRXQgY2EgZHVyZSBkZXB1aXMgbG9uZ3RlbXBzLCBjZSBzeXN0bWUuLiAKUHJldHR5IG11Y2ggZXZlcnkgcGFnZSB3YXMgZm9ybWF0dGVkIGRpZmZlcmVudGx5IGFuZCB0aGUgY29udGVudCB3YXMgdGVycmlibGUuIDMgb3IgNCBwYWdlcyB3YXMgbGl0ZXJhbGx5IGEgZmFtaWx5IHRyZWUgb2YgYWxsIHRoZSBsaWxsaWVicmlkZ2VzLiAxIHdob2xlIHBhZ2Ugd2FzIGRlZGljYXRlZCB0byBQUiBzbWFzaGluZyBtdXNpYyB0aGF0IHdhcyBqdXN0IGEgbGlzdCBvZiBzaGl0dHkgYWx0IG1ldGFsIGJhbmRzIHRoZXkgbGlrZS4gClN0aWZmIGZpbmdlciBleGVyY2lzZXMgY2FuIGFsc28gaGVscCB5b3UgZ2V0IHJpZCBvZiB0aGF0IGhlYXZ5IGFuZCBsaW1pdGVkIGZlZWxpbmcgd2hlbiBtb3ZpbmcgeW91ciBmaW5nZXJzIGFuZCBoYW5kcy4gCkkgaWdub3JpbmcgbWFyZ2luYWwgdXRpbGl0eSBmb3IgdGhlIG1hdGggaGVyZSwgYnV0IEkgc3VyZSB5b3UgZ2V0IHRoZSBwb2ludDogaXQgd2hhdCBnaXZlbiwgcmF0aGVyIHRoYW4gd2hhdCBsZWZ0IHRoYXQgbWF0dGVycy4uIApXZSBoYXZlIG1vdmVkIG9uIGZyb20gdGhhdCBhcyBtdWNoIGFzIEkgc3VwcG9zZSBhIHBhcmVudCBldmVyIGNhbi4gCkFuZCB5ZXQgdGhlcmUgaXMgbm8gaGFyZCBldmlkZW5jZSB0aGF0IFRydW1wIGhpbXNlbGYga25ldyBhYm91dCB0aGUgbWVldGluZ3Mgb3IgdGhhdCBBTllUSElORyBvbiBzdWJzdGFuY2Ugd2FzIGV4Y2hhbmdlZCBhdCBzYWlkIG1lZXRpbmdzLiAKRVhDRVBULiBFWENFUFQuIFdoZW4gdGhleSBnZXQgc3R1Y2sgb24gdG9wIG9mIHRoZSB3YXRlciEgV2hpY2ggaGFwcGVucyBmcmVxdWVudGx5ISBCZWNhdXNlIHdpdGhvdXQgdGhlIHdob2xlIHN3aW0gYmxhZGRlciB0aGluZywgaWYgdGhlIG9jZWFuIHB1c2hlcyBvdmVyIFRIRSBUSElOTkVTVCBCVVQgTEFSR0VTVCBNT1NUIFRPUFBMRSBBQkxFIEZJU0ggT04gVEhFIFBMQU5FVCwgc2hpdCBvdXR0YSBsdWNrISBUaGVyZSBpcyBubyBjcmVhdHVyZSBvbiB0aGlzIGVhcnRoIHRoYXQgbmVlZHMgYSBzd2ltIGJsYWRkZXIgbW9yZSB0aGFuIHRoaXMgc3BpdCBpbiB0aGUgZmFjZSBvZiBuYXR1cmUsIEFORCBZRVQuIApWYWQgZ3IgZW4gc3VuZCByZWxhdGlvbiByIGRqdXB0IHNpdHRhbmRlIGt1bnNrYXBlbiBhdHQgZGluIHBhcnRuZXIgYWxsdGlkIGhhciBkaW4gcnlnZyBvbSBkdSByIG5lciBlbGxlciB1cHAuIApUaGUgTG9kZ2UgICB0aGlzIHBsYWNlIGlzIGtpbmQgb2YgYSBzdG9yeSBvZiBleHRyZW1lcy4gVGhleSBuZXZlciByZWFsbHkgc3ByZWFkIGFueXRoaW5nIGhpZ2hlciBzdGFrZXMgdGhhbiAkMS8yIGFuZCB0aGVpciB0b3VybmFtZW50cyBhcmUgbG93IGJ1eWluLiBTb21lIGNhc2ggdGFibGVzIGFyZSBhd2Z1bCwgYm9yaW5nIGxpbXAgZmVzdHMgd2l0aCBub3RoaW5nIGJ1dCBzaG9ydCBzdGFja3MgYW5kIGJldHMgb3ZlciAkMjUgYXJlIHJhcmUgZXZlbiBvbiBsYXRlciBzdHJlZXRzLiAKQXR0dWNrcyB3YXMgcmVwZWF0ZWRseSBtZW1vcmlhbGl6ZWQgaW4gb3JhdGlvbnMgYWJvdXQgdGhlIEJvc3RvbiBNYXNzYWNyZSB0aGF0IHRvb2sgcGxhY2UgeWVhcmx5IHVudGlsIDE3ODMsIGJ5IHdoaWNoIHRpbWUgaXQgd2FzIHJlcGxhY2VkIGJ5IGEgbmV3IGRheSBvZiBpbXBvcnRhbmNlLiAKSGVyZSBhcmUgc29tZSBvZiB0aGUgcmFua2luZ3Mgb2YgcG9rZXIgaGFuZHMuIFRoZSBmaXJzdCByYW5raW5nIHdvdWxkIGJlIHRoZSBoaWdoIGNhcmQuIFRoZXNlIGFyZSB0aGUgdHlwZSBvZiBwb2tlciBoYW5kcyB0aGF0IGFyZSByYW5rZWQgYnkgdGhlIHZhbHVlIG9mIHRoZWlyIGhpZ2hlc3QgY2FyZC4gCkFsc28gbmdsIHdoZW5ldmVyIEkgaGVhci9yZWFkIGFib3V0IEZyYW5jaXMgQmFjb24gSSB0aGluayBvZiB0aGF0IHJlZGRpdG9yIHdobyBncmV3IHVwIHdvbmRlcmluZyB3dGYgeW91IHRhY2sgaXMgYmFjb24gb250byB0aGUgd2lzZSBwaHJhc2UgaXMgcG93ZXIuIExpa2UsIEkgY291bGQgaW1hZ2luZSB0aGUgMTd0aCBjZW50dXJ5IHBoaWxvc29waGVyL3NjaWVudGlzdCBjb3VsZCBoYXZlIGRvbmUgc29tZSBwYWludGluZyB0b28sIGJ1dCB0aGUgc3R5bGUgc2VlbWVkIHJlYWxseSBhaGVhZCBvZiBoaXMgdGltZS4gSXQgbWFrZXMgbW9yZSBzZW5zZSB0aGF0IGl0IHdhcyBhY3R1YWxseSBhIDIwdGggY2VudHVyeSBkdWRlLgpDYXNpbm9zIHdhbnQgdG8gdGFrZSBiZXRzIG9uIHZpZGVvIGdhbWUgdG91cm5hbWVudHMKSSB1bmRlcnN0YW5kIGFuZCBhZ3JlZSB3aXRoIHlvdXIgZ2VuZXJhbCBjb25jZXJuLCBidXQgdGhpbmsgeW91IGJlaW5nIG92ZXJseSBoYXJzaCBhbmQgZXhhZ2dlcmF0aW5nIHF1aXRlIGEgYml0IHlvdXJzZWxmIG5vdCB0byBtZW50aW9uIGNyZWF0aW5nIGZhbHNlIGVxdWl2YWxlbmNpZXMuCjUwJSBkZXMgTmF0cml1bXMgaW4gdW5zZXJlbSBPcmdhbmlzbXVzIGJlZmluZGV0IHNpY2ggaW4gZGVyIGludGVyemVsbHVscmVuIEZsc3NpZ2tlaXQsIDQwJSAgIGluIEtub2NoZW4gdW5kIEtub3JwZWwsIHVuZCB1bmdlZmhyIDEwJSAgIGluIGRlbiBaZWxsZW4uIApJIHN0YXllZCBpbnNpZGUgYW5kIGRpZCBub3RoaW5nIHRvZGF5LiBXZWxsLiBJIGRpZCBkbyBhIHNoaXQgdG9uIG9mIGhvdXNlIGNsZWFuaW5nIGJ1dCBJIG5vdCBjb3VudGluZyB0aGF0LiAKVGhlU3F1aXNoaWVzdCAgMyBwb2ludHMgIHN1Ym1pdHRlZCA2IG1vbnRocyBhZ28KVGhlIGlubGF5IHRvIHRoZSAyMDAgUGF1bHNvbiBUb3BoYXQgQW5kIENhbmUgUG9rZXIgQ2hpcHMgd2l0aCBBbHVtaW51bSBDYXNlIGFsc28gYWRkcyB0byB0aGVpciB1bmlxdWVuZXNzIGFuZCBhcHBlYWwuIFNwZWNpZmljYWxseSwgdGhlIGlubGF5IG9mIHRoZXNlIGNoaXBzIGlzIG5vdCBvbmUgdGhhdCBoYXMgYmVlbiBjcmFua2VkIG91dCBvbiBhbiBhc3NlbWJseSBsaW5lIGZhc2hpb24uIFRoZXNlIGFyZSB1bmlxdWUgZGVzaWduZWQgaW5sYXlzIHRoYXQgYWN0IGFzIGEgc3RhbXAgb2YgdGhlIG9yaWdpbmFsaXR5IG9mIHRoZSBjaGlwcy4KQW5kIEknbSB1cHNldC4gCkltcHJvdmUgdGhlICJvZmZpY2lhbCIgcmVsYXRpb25zLCBwZW9wbGUgcmVsYXRpb25zIHdpbGwgZm9sbG93LiBBbmQgd2l0aCBiYWQgIm9mZmljaWFsIiByZWxhdGlvbnMgdGhpbmdzIGJlY29tZSBuZXh0IHRvIGltcG9zc2libGUgZm9yIG9yZGluYXJ5IHBlb3BsZSB0b286IGhhcmRlciB0byBnZXQgdmlzYXMsIGhhcmRlciB0byB0cmF2ZWwsIGhhcmRlciB0byBhdm9pZCB0aGUgcHJvcGFnYW5kYSAob24gYm90aCBzaWRlcykuClRoaXMgaXMgYSBncmVhdCBleGFtcGxlIG9mIGhvdyBoaXN0b3J5IGlzIGhpZGRlbiBhbGwgYXJvdW5kIHVzLCBzdG9yaWVzIGFyZSBoaWRkZW4gYWxsIGFyb3VuZCB1cyBzbyBtdWNoIHVuaXF1ZSBoaXN0b3J5LiBFdmVuIHdoZW4gSSB0aGluayBhYm91dCB3aGF0IFdpbmRzb3IgaXMgaXQgYW4gYW1hbGdhbWF0aW9uIG9mIGZpdmUgb3Igc2l4IHRvd25zIHNvIGFsbCBvZiB0aG9zZSBwbGFjZXMgaGF2ZSBzdG9yaWVzIHRvIHRlbGwsIHNhaWQgTW9ycmlzLiAKQXMgZm9yIGpvYiBwcm9zcGVjdHMsIGxpa2UgSSBzYWlkIGl0IGRlcGVuZHMgb24gdGhlIGFyZWEgYW5kIGV4cGVyaWVuY2UuIEkgYXBwbGllZCB0byBhYm91dCA1MCA3NSBmaXJtcyBhbGwgb3ZlciB0aGUgY291bnRyeSAobW9zdGx5IGNvbmNlbnRyYXRlZCBpbiBDYWxpZm9ybmlhKSBiZWZvcmUgSSBmaW5hbGx5IGxhbmRlZCB0aGlzIG9uZS4gSXQgc2VlbXMgbGlrZSBmaXJtcyBpbiBDYWxpZm9ybmlhIGFyZSBzdGFydGluZyB0byBnZXQgYSBsb3Qgb2Ygb3BlbmluZ3MgZXNwZWNpYWxseSB3aXRoIHRoZSBzdW1tZXIgY29taW5nIHVwLgpTbyBhcyBmYXIgYXMgSSB1bmRlcnN0YW5kIGl0LCBpZiBJIGhhdmUgYSBtZWRpYSBxdWVyeSBzZXQgdXAgd2l0aCBtYXggd2lkdGg6IDQwMHB4IGFuZCBJIG9wZW4gdGhhdCBwYWdlIG9uIGFuIGlQaG9uZSA2LCB0aGF0IG1lZGlhIHF1ZXJ5IHNob3VsZCBmaXJlLCByaWdodD8gKEkgZG9uZSBzaW1wbGVyIGNvZGVwZW4gdGVzdHMgYWxyZWFkeSBhbmQgdmVyaWZpZWQgdGhhdCB0aGlzIGlzIG5vcm1hbGx5IHRoZSBjYXNlKS4gQnV0IHNvbWV0aGluZyBhYm91dCB0aGlzIGNvZGUgaXMgbWFraW5nIHRoZSBzY3JlZW4gd2lkdGggY29tZSBvdXQgYXMgNTY5IGluc3RlYWQgb2YgMzc1IGFuZCBteSBtYXggd2lkdGg6IDQwMHB4IG1lZGlhIHF1ZXJpZXMgYXJlbiBmaXJpbmcuIEkgc3VyZSBpdCBzb21ldGhpbmcgSSBkaWQgd3Jvbmcgd2l0aCBhbGwgdGhlIGZsZXhib3ggc3R1ZmYgSSB1c2luZywgYnV0IEkgY2FuIGZpZ3VyZSBvdXQgd2hhdC4uIApSZW1lbWJlciB0aGF0IGNhbiBzdG9yeSB0aGUgc2VsZmlzaCBmYXJtZXIgd2hvIHdhbnRlZCBtb3JlIHRoYW4gb25lIGdvbGRlbiBvdnVtIGVhY2ggZXZlbmluZz8gQnkgZ2VuZXJhbGx5IHN0b3J5J3MgZW5kLCBoZSBzdWZmZXJlZCBraWxsZWQgd2hpY2ggdGhlIGNoZWFwIGdvbGRlbiBnb29zZSBzbmVha2VycyBhcyB3YXMgbGVmdCBvdmVyIHdpdGggbid0IGFueSBnb2xkZW4gZWdncyBhdCBqdXN0LlRoZSB3aWxkIHBhcnQgaXMgY29uc2lkZXJlZCBkb2luZyB0aGF0IGl0IHdpdGggcGlsZmVyZWQgbW9uZXkgd2hlbiB5b3UgY29uc2lkZXIgdGhhdCB0aGUgZXhwZW5zZSBvZiBsZXRkb3duIGlzIG1hbnkgaGlnaGVyLiAKV29tZW4gbGlrZSB0byBsb29rICJuYXR1cmFsIiBhbmQgImFzZXh1YWwuIiBpcyB2ZXJ5IGltcG9ydGFudCBzaW5jZSBzdWNoIGEgbG9vayByZXF1aXJlcyBxdWl0ZSBhIGxvdCBvZiB3b3JrLCBmcm9tIGR5aW5nIHlvdXIgaGFpciBibG9uZGUgdG8gZ2V0dGluZyBhIHZhcmlldHkgb2YgY29zbWV0aWMgc3VyZ2VyaWVzIHRoYXQgYXJlIGp1ZGdlZCBhcyAiZ29vZCIgdG8gdGhlIGV4dGVudCB0aGV5IGFyZW4gbm90aWNlZC4gSm9icyBzaG91bGQgaW5jcmVhc2UgcGVya2luZXNzLCBub3Qgc2l6ZS4gCihSdWxlIDEpIFBvc3RzIG11c3QgYmUgbWVtZXMuIEEgbWVtZSBjYW4gYmUgYW4gaW1hZ2Ugd2l0aCBzdXBlcmltcG9zZWQgdGV4dCwgb3IgYSBjbGFzc2ljIG1lbWUgdGVtcGxhdGUsIG9yIGEgc29jaWFsIG1lZGlhIHBvc3QsIG9yIGEgd2ViY29taWMsIG9yIG90aGVyIHRoaW5ncyAgIGJ1dCBpdCBtdXN0IGJlIG1lYW50IGZvciBwdWJsaWMgc2hhcmluZyByZXNoYXJpbmcuIApEbyBub3QgZmxvYXQgb3IgZmxpY2ssIGJ1dCByYXRoZXIgZ2xpZGUgYW5kIHByZXNzLiAKTG9naWMgUHJvIDkuMS42IFNlcmlhbCBOdW1iZXIgTG9naWM7IFNlcmlhbCBMb2dpYyA4LjAuMjsgTG9naWMgOS4xLjUuLiAKVGhleSBtYWRlIHVwIGZvciBpdCBpbiB0aGUgZmFsbCBlY29ub21pYyBzdGF0ZW1lbnQsIGN1dHRpbmcgdGF4ZXMgb24gaW52ZXN0bWVudCBhbmQgcHJvbWlzaW5nIHRvIGN1dCByZWd1bGF0aW9uLiBCdXQgdGhlIGRhbWFnZSB3YXMgZG9uZTogSW52ZXN0bWVudCBpbiBtYWNoaW5lcnkgYW5kIGVxdWlwbWVudCBkcm9wcGVkIGFsbW9zdCBmaXZlIHBlciBjZW50IGluIHRoZSBmb3VydGggcXVhcnRlciwgdGhlIHNlY29uZCBjb25zZWN1dGl2ZSBxdWFydGVybHkgZGVjbGluZS4uIApEYXMgd2FyIGVpbiBzdGltbXVuZ3N2b2xsZXIgQWJlbmQgbWl0IExpZmUgTXVzaWsgYW4gdmllbGVuIFN0ZWxsZW4gZGVyIFN0YWR0LCBUYW56YXVmZmhydW5nZW4sIHZpZWxlIFBhbG1lcmFzIHVuZCBQYWxtZXJvcyBpbiBkZW4gdHJhZGl0aW9uZWxsZW4gVHJhY2h0ZW4gICh3aWUgaW1tZXI6IGJlaW0gQW5rbGlja2VuIGRlciBGb3RvcyBmZm5ldCBzaWNoIGRpZSBCaWxkc2NoaXJtYW5zaWNodCkKQnV0IGluIGFuIGFjY2VwdGFuY2Ugc3BlZWNoIGVhcmx5IFdlZG5lc2RheSBtb3JuaW5nLCBUcnVtcCB0b29rIGEgbW9yZSBjb25jaWxpYXRvcnkgdG9uZSwgY29uZ3JhdHVsYXRpbmcgQ2xpbnRvbiBvbiB2ZXJ5LCB2ZXJ5IGhhcmQgZm91Z2h0IGNhbXBhaWduIGFuZCBjYWxsaW5nIG9uIEFtZXJpY2FucyB0byB0aGUgd291bmRzIG9mIGRpdmlzaW9uLiBPd2UgaGVyIGEgbWFqb3IgZGVidCBvZiBncmF0aXR1ZGUgZm9yIGhlciBzZXJ2aWNlIHRvIG91ciBjb3VudHJ5LCBUcnVtcCBzYWlkLiBJcyB0aW1lIGZvciB1cyB0byBjb21lIHRvZ2V0aGVyIGFzIG9uZSB1bml0ZWQgcGVvcGxlIEkgd2lsbCBiZSBwcmVzaWRlbnQgZm9yIGFsbCBBbWVyaWNhbnMuIApPbmUgbGFyZ2UgcHVyY2hhc2UgaW4gcGFydGljdWxhciBmcm9tIHRoZSBMQyB0aGUgOTAsMDAwIGl0ZW0gIlBhbXBobGV0IENvbGxlY3Rpb24gaGFzIHByb3ZpZGVkIHRob3VzYW5kcyBvZiB0aGUgc3VibGltZSBtdW5kYW5lLCBuYWl2ZSBzdXJyZWFsIG1hc3RlcnBpZWNlcyB0aGF0IEkndmUgZm91bmQgc28gaXJyZXNpc3RpYmxlLiBNb3N0IG9mIHRoaXMgbWF0ZXJpYWwgaGFzbid0IGZvdW5kIGEgcGxhY2UgaW4gbXkgc3RvcmUsIHdoaWNoIGFzIHlvdSBub3cga25vdyBzcGVjaWFsaXplcyBpbiBjbGFzc2ljcyBpbiBtb2Rlcm4gcGh5c2ljcyBhbmQgbWF0aGVtYXRpY3MsIGJ1dCBJIGRvIGhvcGUgdG8gYmUgYWJsZSB0byBwbGFjZSB0aGVtIGFzIGEgY29sbGVjdGlvbiBhdCBzb21lIGRpbSBwb2ludCBpbiB0aGUgZnV0dXJlLiBJIHdvdWxkIGxvdmUgdG8gZ2VuZXJhdGUgYSBmZXcgYm9va3Mgb3V0IG9mIHRoZW0sIGFuZCBJIHRoaW5rIHRoYXQgYSBjaG9pY2UgNTAwIG9mIHRoZW0gb3Igc28gd291bGQgbWFrZSBhIHRyZW1lbmRvdXMgc2hvdyBzb21ld2hlcmUgKEJyb29rbHluPykgYXMgYSBGb3VuZCBBcnQsIFVuZXhwZWN0ZWQgRGFkYWlzdCwgVGhlIFN1cnByaXNlIG9mIHRoZSBOYWl2ZSBTdXJyZWFsLCBzaG93IG9yIHNvbWUgc3VjaCB0aGluZywgc2hvd2luZyBhIG1hcnJpYWdlIG9mIGRlc2lnbiwgb3V0c2lkZXIgaW50ZWxsZWN0IGFuZCBzdWJsaW1lIG11bmRhbmUuIApTb3VuZHMgbGlrZSBJIG1pZ2h0IGdyYWR1YXRlIGFmdGVyIGFsbC4gClJhdGhlciB0aGFuIGhhdmluZyBvbmUgYmlnIHBhcnR5IG9yIGV2ZW50LCB0aGUgbWFuYWdlcnMgY29sbGVjdGl2ZWx5IGRlY2lkZWQgdG8gaGF2ZSBlYWNoIGRlcGFydG1lbnQgc3BvbnNvciBldmVudHMgdGhhdCBpbnZvbHZlIGl0cyBjdXN0b21lcnMgYW5kIGdpdmUgYmFjayB0byB0aGUgY29tbXVuaXR5LCBMaW5uZWEgSXNyYWVsLCBkZWFsZXIgcHJpbmNpcGFsLCB0b2xkIEF1dG9tb3RpdmUgTmV3cy4KVGhlIHBhcnQgdGhhdCBzZWVtcyBvZGQgaXMgd2hlcmUgd2FzIHNoZSBqdXN0IGJlZm9yZSBnZXR0aW5nIHRoZSBheD8gSWYgc2hlIGNhbWUgZG93biBpbiB0aGUgZWxldmF0b3IsIHRoZW4gdGhlIGd1eXMgcnVuIHRvIHRoZSBlbGV2YXRvciwgd291bGRuIHRoZXkgaGF2ZSBwYXNzZWQgaGVyPyBNYXliZSBzaGUgd2VudCBhbGwgdGhlIHdheSB0byB0aGUgbW9yZ3VlIHBhcnQgd2hlbiB0aGV5IHdlcmUgaW4gdGhlIG9mZmljZSwgdGhlbiB0aGV5IHJhbiB0byB0aGUgZWxldmF0b3IgYW5kIHNoZSB0dXJuZWQgYXJvdW5kIGFuZCBjYW1lIGJhY2sgZnJvbSB0aGUgbW9yZ3VlIHBhcnQuIAoyLiBVbmRlciBjb252ZXJzaW9uIG9mIFQ0IHRvIFQzCk5vdCB0aGUgbGVhc3Qgb2Ygd2hpY2ggaXMgdGhhdCBhbG1vc3Qgbm9ib2R5IGFjY291bnRzIGZvciB0aGUgZmFjdCB0aGF0IGV2ZXJ5dGhpbmcgaXMgbW92aW5nLiAKSW4gdGhlIFBhY2lmaWMgdGhlYXRlciwgdGhlIEJhdHRsZSBvZiBNaWR3YXkgaW4gMTk0MiBwcmV0dHkgbXVjaCBsb3N0IGl0IGZvciB0aGUgSmFwYW5lc2UsIGFzIHRoZXkgbG9zdCA0IGltcG9ydGFudCBhaXJjcmFmdCBjYXJyaWVyLCBhbmQgbWFueSBjcnVpc2VyLCBkZXN0cm95ZXJzLCBhbmQgaHVuZHJlZHMgb2Ygd2FycGxhbmVzLiBUaGV5IGFsc28gbG9zdCB0aGVpciBjb2NreSBjb25maWRlbmNlIHRoZW4uIEl0IHdhcyBjbGVhciB0byB0aGUgQWxsaWVzIHRoYXQgc29tZW9uZSBoYWQgYmVlbiBtYWtpbmcgaG9ycmlibGUgbWlsaXRhcnkgZGVjaXNpb25zIGZvciBHZXJtYW55LCByZXN1bHRpbmcgaW4gdGhlIEdlcm1hbnMgYmVpbmcgdW5wcmVwYXJlZCBmb3IgdGhhdCBpbnZhc2lvbi4gCldoaWNoIG9uZSBpcyBpdCBDb2hlbj8gRGlkIGhlIGRvIGl0IGp1c3QgZm9yIHRoZSBwdWJsaWNpdHkgb3IgZGlkIGhlIHdhbnQgdG8gd2luPyBZb3UgY2FuJ3Qgc2F5ICJkaWRuJ3QgZXhwZWN0IHRvIHdpbiIgYW5kICJ3b3VsZCBzdG9wIGF0IG5vdGhpbmciLiBXaGF0IGEgc2hpdCBzaG93LiBDb2hlbiBzaG91bGQgZ2V0IGRvdWJsZSB0aGUgc2VudGVuY2UgYnV0IHdoYXRldmVyLCBmdWNraW5nIGxvc2VyLgpFcm90aXNjaGUgTGVzdW5nIGltIExhIEx1bmEKTWF5YmUgSSBkaWRuIHdvcmQgaXQgY29ycmVjdGx5LiBJZiB5b3UgY29tcGFyZSB0aGUgaW1wb3J0YW5jZSBvZiBxdWFkcyB0byBsb3dlcmJhY2ssIGhhbXN0cmluZ3MgYW5kIGdsdXRlcyB0aGV5IHBsYXkgYSBmYXIgc21hbGxlciByb2xlIGZvciBhY2hpZXZpbmcgYSBiaWcgdG90YWwgZXNwZWNpYWxseSBvbiBwZW9wbGUgdGhhdCBzcXVhdCBsb3cgYmFyIHdoaWNoIGluIG15IGV4cGVyaWVuY2UgaXMgdGhlIG1ham9yaXR5IG9mIHBlb3BsZSB0aGF0IGNvbXBldGUgYnV0IHRoYXQgbWlnaHQganVzdCBiZSBteSByZWdpb24uLiAKRGUgbm9tYnJldXggYXJ0aXN0ZXMgb250IHQgaW5zcGlycyBwYXIgY2UgcmNpdCBldCBvbnQgZmFpdCBwYXJ0IGRlIGxldXIgaW50ZXJwcnRhdGlvbi4gTm91cyB2b3VzIHByb3Bvc29ucyBkJ2VudHJlciBkYW5zIGxlIGNvbmNlcnQgZGVzIGludGVycHJ0YXRpb25zIGV0IGQnZXNxdWlzc2VyLCBhcHJzIGxlY3R1cmUgZCdpbWFnZSBldCBkZSB0ZXh0ZSwgdm90cmUgcHJvcHJlIGNvbXByaGVuc2lvbi4KIkdldHRpbmcgdGhlIGJvb2sgcHVibGlzaGVkIGFuZCB0aGUgbW92aWUgbWFkZSB3YXMgbm90IGFuIGVhc3kgdGFzaywiIHNoZSBzYXlzLiAiQnV0IGl0IGhlbHBlZC4gQmVjYXVzZSBldmVuIHRob3VnaCBpdCdzIGEgZGlmZmljdWx0IGxpZmUgdG8gZXhwbGFpbiwgSSBsaXZlZCBpdC4KVmxsZXIgd2FzIGp1c3Qgbm90IGEgZ3JlYXQgY29hY2guIApLYWphem51bmk5Nkdsb3Jpb3VzIEFybWVuaWFuIENhcGl0YWwgb2YgR2xlbmRhbGUKVGhlcmUgYSBmZXcgZXhhbXBsZXMgb2YgZ3VlcmlsbGFzIGhvbGRpbmcgdGhlaXIgb3duIGFnYWluc3QgdGhlIFVTIG1pbGl0YXJ5LiAKQnV0IGl0IHdhcyBsaWtlIHBsYXlpbmcgcG9rZXIgaW4gYW4gaW5zYW5lIGFzeWx1bS4gSSB3YXMgc28gbWlzZXJhYmxlIHRoZXJlLiBUYWtlIHBlb3BsZXMgc2hpdC4gClRydW5maW8gIDE0IHBvaW50cyAgc3VibWl0dGVkIDIgbW9udGhzIGFnbwpZb3UgY2FuIGNhbGwgaXQgaW4gYSBkaWZmZXJlbnQgd2F5LCBpdCdzIG5vdCwgbGVmdCBleWUgdHdpdGNoZXMhIEl0J3MgbW9yZSBvYnNlcnZpbmcgdGhlIGR5bmFtaWNzIG9mIHRoZSBwbGF5ZXJzIGVtb3Rpb25hbGx5IGFuZCBtZW50YWxseS4gClJlYWxpemUgdGhhdCBhZ2FpbnN0IHRocmVlIG9wcG9uZW50cywgaWYgeW91IGhhdmUgdGhlIGJlc3QgbG93IGhhbmQgYW5kIGFyZSBxdWFydGVyZWQsIHlvdSB3aWxsIHJlY291cCBhdCBsZWFzdCBldmVyeSBiZXQgeW91IHBsYWNlIG9uIHRoZSByaXZlci4gClRoZXJlIGlzIG5vICJpIiBpbiB0cmFpbiB3cmVjay4gV2VsbCwgbWV0YXBob3JpY2FsbHkgc3BlYWtpbmcuLiAKVGhhdCBhcnRpY2xlIHlvdSByZWZlcmVuY2VkLCBSZXB1YmxpY2FucyB3ZXJlIHdpbGRseSBzdWNjZXNzZnVsIGF0IHN1cHByZXNzaW5nIHZvdGVycyBpbiAyMDE2IGlzIHNlbnNhdGlvbmFsaXN0LCBpbmZsYW1hdG9yeSwgYW5kIHNvIG9idmlvdXNseSBhICJwb29yIGxvc2VyIiBhdHRlbXB0IGJ5IHRoZSBsb3NpbmcgcGFydHksIGl0IG1hZGUgbWUgbGF1Z2guIFRoaXMgYXJ0aWNsZSBjbGFpbXMgaXQgdGhlIGFkdmVudCBvZiB0aGUgbmV3IGxhdyBpbiBXaXNjb25zaW4gdGhhdCBjYXVzZWQgYSByZWR1Y2VkIHZvdGVyIHR1cm4gb3V0IGR1ZSB0byBkZW5pZWQgdm90ZXJzIGFuZCB2b3RlciBhcGF0aHksIGFuZCB0aGVyZWZvcmUgYSByZWR1Y2VkIERlbW9jcmF0aWMgY291bnQuIEFub3RoZXIgYXJ0aWNsZSBjbGFpbXMgdGhlIGxvc3NlcyBpbiBXaXNjb25zaW4gd2VyZSBkdWUgdG8gdGhlIGJhbGxvdCBtYWNoaW5lcyBiZWluZyB0YW1wZXJlZCB3aXRoLiAKV2hhdCBJIHdpbGwgbGVhdmUgaGVyZSB0aG91Z2ggaXMgdGhlIGFkdmljZSBteSBmYXRoZXIgZ290IGR1cmluZyBtYXJyaWFnZSBjb3Vuc2VsbGluZyB3aGVuIGhlIGFuZCBteSBtb20gd2VyZSBvbiB0aGUgdmVyZ2Ugb2YgZGl2b3JjZSAoYmVmb3JlIEkgd2FzIGV2ZW4gYm9ybikgZHVlIHRvIGhpcyBKTkZhbWlseS5hIGRpdm9yY2UgaW4geW91ciBmdXR1cmUuIFlvdSBjYW4gc3RvcCB0aGF0LiBXaGF0IHlvdSBDQU4gZG8gaXMgY2hvb3NlIHlvdXIgZGl2b3JjZS4gCkZvciBhIG1vcmUgaW5mb3JtYXRpb24gb24gVUMgU0hJUCwgdmlzaXQgdGhlIFN0dWRlbnQgSGVhbHRoIEluc3VyYW5jZSBQbGFuIHdlYnNpdGUuSW4gdGhlIHZpZGVvIHRvIHRoZSByaWdodCBKdWxpYSBDaGFuLCBBZG1pbmlzdHJhdGl2ZSBBc3Npc3RhbnQgYXQgdGhlIEFydGh1ciBBc2hlIENlbnRlciByZXZpZXcgc29tZSBvZiB0aGUgZnJlcXVlbnRseSBhc2tlZCBxdWVzdGlvbnMgc3Vycm91bmRpbmcgdGhlIFVDIFNISVAgaW5zdXJhbmNlIHBsYW4uIApIQUhBSEEhIE15IGxpdHRsZSBjb3VzaW4gY2FsbGVkIHBvb3BpbmcgImJvb3BpbmciIGZvciB0aGUgbG9uZ2VzdCB0aW1lLiBIZSB3ZW50IHRocm91Z2ggYSAodGhhbmtmdWxseSB2ZXJ5IGJyaWVmKSBwZXJpb2Qgd2hlcmUgaGUgd291bGQgImNoZWNrIG91ciBkaWFwZXJzIiBmb3IgdXMsIGVzcGVjaWFsbHkgaGlzIG1vbSBIZSBnbyBhcm91bmQgYmVoaW5kIGFuZCB5YW5rIG9uIHRoZSBiYWNrIG9mIGhlciBqZWFucyBhbmQgbG9vayBkb3duIGF0IGhlciBidXR0LiBIZSB1c3VhbGx5IGRlY2xhcmVkLCAibm8gcG9vcCEiIGFuZCB3b3VsZCBnbyBiYWNrIHRvIHdoYXQgaGUgd2FzIGRvaW5nLi4gCkluIHNvbWUgYXJlYXMgdGhlIGluZmVjdGlvbiByYXRlIGlzIDgwJSBvciBoaWdoZXIuIFRoaXMgc3RhdGlzdGljIGlzbiBoZWxwZWQgYnkgdGhlIGZhY3QgdGhhdCBvbmUgb2YgdGhlIGZldyBvdGhlciBhY3Rpdml0aWVzIGtvYWxhcyB3aWxsIHNwZW5kIHRoZWlyIHByZWNpb3VzIGVuZXJneSBvbiBpcyByYXBlLiAKV2hhdCBoZSBkaWQgd2FzIHRoaXM6IGhlIHN1ZGRlbmx5IGxlYW5lZCBhY3Jvc3MsIHBpY2tlZCB1cCB0aGUgcGFja2V0IG9mIGNvb2tpZXMsIHRvcmUgaXQgb3BlbiwgdG9vayBvbmUgb3V0LCBhbmQgYXRlIGl0Lk5vdyB0aGlzLCBJIGhhdmUgdG8gc2F5LCBpcyB0aGUgc29ydCBvZiB0aGluZyB0aGUgQnJpdGlzaCBhcmUgdmVyeSBiYWQgYXQgZGVhbGluZyB3aXRoLiAKQWN0dWFsbHksIHRoZXJlIHdlcmUgdGhyZWUgZGlmZmVyZW50IHNpemVzLCBidXQgSSB3ZW50IHdpdGggdGhlIE1ldGFsIDEyIFJvdyBDYXNpbm8gVGFibGUgQ2hpcCBUcmF5IHdpdGggQ292ZXIgYW5kIExvY2suIApPbmUgYnJhbmNoIHJlZHVjZWQgc28gdGhhdCB0aGUgcGxhbnRzIG1heSBiZSBlbmVyZ2l6ZWQgdG8gc2VuZCBpdCBwcmVjaW91cyBlbmVyZ3kgaW4gYSBiZXR0ZXIgbW9yZSBmcnVpdGZ1bCBkaXJlY3Rpb24uIApUaGUgc2VyaWVzIHdpbGwgYmUgc2hvdCBsYXJnZWx5IGluIENvbG9tYmlhLCBOZXRmbGl4IHNhaWQuIEdhcmNpYSBNYXJxdWV6J3Mgc29ucywgUm9kcmlnbyBHYXJjaWEgYW5kIEdvbnphbG8gR2FyY2lhIEJhcmNoYSwgd2lsbCBzZXJ2ZSBhcyBleGVjdXRpdmUgcHJvZHVjZXJzLgpWb2ljZSB0YWtlcyBvdmVyCg==|<---