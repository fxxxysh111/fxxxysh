--->|Tm8sIGJlY2F1c2Ugd2UgcmVhbGl6ZWQgZXZlbnR1YWxseSB0aGF0IHdlIGhhZCBsaXR0bGUgdG8gbG9zZS4gUGVvcGxlIHdpbGwgYWx3YXlzIGhhdmUgYXV0b21hdGVkIGZhY2lhbCBjb2RpbmcuIFdlIHdpbGwgYWx3YXlzIGhhdmUgb3VyIHdvcmsgaW4gdGhlIG1hcmtldCByZXNlYXJjaCBzcGFjZSBiZWNhdXNlIHdlIHdlcmUgcmVjb2duaXplZCBhcyB0aGUgbWFya2V0IGxlYWRlciB0aGVyZS4gV2Ugd2VyZW4ndCBnaXZpbmcgdGhhdCB1cC4gVGhlcmUgd2VyZSBuYXlzYXllcnMsIGV2ZW4gd2l0aGluIHRoZSBjb21wYW55LiBBIG51bWJlciBvZiBvdXIgdGVjaG5pY2FsIGZvbGtzIHdlcmUgdmVyeSBza2VwdGljYWwgYmVjYXVzZSBldmVyeXRoaW5nIGlzIGxhYmVsZWQgYXMgQUkgdGhlc2UgZGF5cy4gVGhlbiwgd2Ugc3RhcnRlZCBnZXR0aW5nIHBpY2tlZCB1cCBpbiB0aGUgcHJlc3MuIE91ciBDRU8gd2FzIHdyaXRpbmcgY29sdW1ucy4gV2Ugd2VyZSBwb3N0aW5nIGJsb2dzLCBhbmQgd2UganVzdCBrZXB0IHJlcGVhdGluZyBpdCBhbmQgcmVwZWF0aW5nIGl0LCBhbmQgaXQgc3RhcnRlZCBzdGlja2luZy4KQW1lcmljYSBiZW5lZml0IHN5c3RlbS9zb2NpYWwgc2FmZXR5IG5ldCBibG93cyBjb21wYXJlZCB0byBtb3N0IGFueSBvdGhlciBkZXZlbG9wZWQgbmF0aW9uLiAKTGlzYSBpcyBnb29kIGRvbiBnZXQgbWUgd3JvbmcgYnV0IGlmIHRoZSBpZGVhIGlzIHRvIHNob290IGZvciBSNSBpdCBiZSBhIHdoaWxlIGJlZm9yZSB5b3UgbG9va2luZyBmb3IgZmFzdGVyIGNsZWFyIHRpbWVzLCBhbmQgTGlzYSBpcyBtb3JlIGZvciB0aGF0LiBJIHRoaW5rIHlvdSBoYXZlIHRvIGdpbXAgeW91ciB0ZWFtIGEgbGl0dGxlIHRvIGZpdCBoZXIgaW4gYXQgdGhlIG1vbWVudCwgYW5kIEkgZG9uIHRoaW5rIGl0IHdvcnRoIGl0LiBQbHVzIERlbHBob2kgaXMgZ2VuZXJhbGx5IGF3ZXNvbWUuLiAKQmFkbHkgYmVoYXZlZCBjaGlsZHJlbiBmcm9tIHRvdHMgdG8gdGVlbnMuIApEaXJlY3Rpb25zOiBJbiBhIGxhcmdlIHNraWxsZXQgb3ZlciBtZWRpdW0gaGlnaCBoZWF0LCBjb21iaW5lIHRoZSBidXR0ZXIgYW5kIGNpbm5hbW9uLiBXaGVuIHRoZSBidXR0ZXIgaGFzIG1lbHRlZCwgYWRkIHRoZSBwZWFycyBhbmQgc2F1dGUgdW50aWwgdGhleSBhcmUgc29mdGVuZWQsIGFib3V0IDUgbWludXRlcy4gQWRkIHRoZSBjcmFuYmVycmllcyBhbmQgYXByaWNvdHMsIHRoZW4gY29vayBmb3IgYW5vdGhlciBtaW51dGUuIFNldCBhc2lkZSBvZmYgdGhlIGhlYXQuCkxlIGNyYXRldXIgZGUgbGEgbWFpc29uIENoYW5lbCwgZGNkIGxlIDE5IGZ2cmllciAgbCdnZSBkZSA4NSBhbnMsIHRhaXQgZW4gZWZmZXQgdW4gaW50aW1lIGRlIGxvbmd1ZSBkYXRlIGRlIGwnYWN0cmljZSBxdWkgYSBpbmNhcm4gTWFkZW1vaXNlbGxlIENoYW5lbCBhdSBjaW5tYSAoZGFucyBDb2NvIENoYW5lbCBldCBJZ29yIFN0cmF2aW5za3kgZGUgSmFuIEtvdW5lbikgZXQgcXVpIGVzdCBkZXB1aXMgZGUgbG9uZ3VlcyBhbm5lcyB1bmUgZ3JpZSBkZSBsYSBtYWlzb24gZGUgbHV4ZSwgbm90YW1tZW50ICB0cmF2ZXJzIGRldXggZmlsbXMgdG91cm5zIHBhciBLYXJsIDogVGhlIFRhbGUgb2YgYSBGYWlyeSBlbiAyMDExLCBldCBUaGUgUmV0dXJuIGVuIDIwMTMuIElsIHNlbWJsYWl0IGRvbmMgdmlkZW50IHF1ZSBsYSBqb2xpZSBicnVuZSAgbGEgdm9peCBzdWF2ZSBwcmVubmUgbGEgcGFyb2xlIHBvdXIgdm9xdWVyIGV0IHJlbmRyZSBob21tYWdlICBsJ3VuIGRlcyBwbHVzIGdyYW5kcyBjcmF0ZXVycyBkZSBzb24gcG9xdWUuLiAKTm9uIHNlcXVpdHVyIGZhY3RvaWQuIElmIHlvdSB3b3JyaWVkIGFib3V0IHRvbyBtdWNoIFZpdGFtaW4gQSwganVzdCBhdm9pZCBQb2xhciBCZWFyIGxpdmVyIGZvciBzdXJlISBBIGZpc3Qgc2l6ZSBjaHVuayBoYXMgYWJvdXQgOSBtaWxsaW9uIHVuaXRzLiAKSSdtIG5vdCBzdXJlIGlmIEhvaWJlcmcgd2lsbCBiZSBhYmxlIHRvIGNvbW1hbmQgdGhlIGluc3RhbnQgcmVzcGVjdCBuZWVkZWQgdG8gZ2V0IHRoaXMgdGVhbSB0byB0aGUgRmluYWxzIG5leHQgeWVhci4gCkV2ZW50dWFsbHksIGR1ZSB0byBmcmFjdGlvbmFsIHJlc2VydmVzLCB0aGUgYmFua3MgcnVuIG91dCBvZiBjYXNoIGFuZCBnaWFudCBlY29ub21pYyBjcmFzaCBmb2xsb3dzLiAKSGUgYWxzbyBjcml0aWNpemVkIFJ1c3NpYSBmb3IgdXNpbmcgaXRzIHZldG8gYXQgdGhlIFVuaXRlZCBOYXRpb25zIFNlY3VyaXR5IENvdW5jaWwgdG8gYnJpbmcgbW9yZSBjbGFyaXR5IGFib3V0IHRoZSBhdHRhY2suICJTbyBhZ2FpbiwgZ2V0dGluZyB0aGUgZnVsbCB0cnV0aCBhbmQgdGhlIHVzZSBhbiBpbnRlcm5hdGlvbmFsIGxlZ2FsIGFwcHJvYWNoIGFnYWluc3QgdGhlIHVzZSBvZiBjaGVtaWNhbCB3ZWFwb25zIGhhcyBiZWVuIHN0b3BwZWQuIFdlIGdyZWF0bHkgcmVncmV0IHRoaXMsIiBoZSBzYWlkLgpBcyB0aGlzIHJlZHVjdGlvbiBvZiBzZXh1YWwgZGlmZmVyZW5jZSB0byAianVzdCBsaWtlIG90aGVyIG5pY2UgZmFtaWxpZXMsIG9ubHkgdHdvIG1vbXMgb3IgdHdvIGRhZHMiIGFuZCAianVzdCBsaWtlIGFueSBvdGhlciBzb2xkaWVyLCBqdXN0IGdheSIgaGFwcGVuZWQgYXQgdGhlIGxldmVsIG9mIG5hdGlvbmFsIGNvdmVyYWdlLCBpdCBhbHNvIGhhcHBlbmVkIHRvIGEgbG90IG9mIGdheSBhY3RpdmlzbS4gTW9uZXkgZ290IHRha2VuIGF3YXkgZnJvbSBzaGVsdGVycyBmb3IgaG9tZWxlc3MgcXVlZXIgeW91dGggYW5kIGdpdmVuIHRvIHNhbWUgc2V4IG1hcnJpYWdlIG1vdmVtZW50cy4gCk1hcmxlYXUgd2lmZSBDaHJpc3RpbmEgYW5kIHRoZSBjb3VwbGUgZm91ciBib3lzIGFyZSBoZXJlIGZvciB0aGUgZ2FtZSwgYW5kIG9uIFN1bmRheSBuaWdodCwgdGhlIGZhbWlseSBzdGF5ZWQgaW4gdGhlaXIgaG9tZS4uIApPbmUgZmluYWwgcG9pbnQgdG8gY29uc2lkZXIsIGlzIHRoYXQgdGhlIGVhcmx5IHVuaXZlcnNlIHdhcyBtdWNoIG1vcmUgaG9zdGlsZSBhbmQgZGFuZ2Vyb3VzIHRoYW4gaXQgaXMgdG9kYXkuIApUaGlzIHN5c3RlbSBsZXRzIHVzIHBpY2sgYW4gb3B0aW9uIHRoYXQgYSBtYWpvcml0eSBwcmVmZXJzIGFuZCBzdGlsbCBnaXZlIG1vcmUgdGhhbiB0d28gb3B0aW9ucyB3aGljaCBpcyBnb29kLCBiZWNhdXNlIG5lYXJseSBhbGwgdGhlIG9wdGlvbnMgd2UgcHV0IGluIHRoZSBwb2xsIGNhbWUgZGlyZWN0bHkgZnJvbSBhIGZlZWRiYWNrIHRocmVhZCB3ZSByYW4gYSBmZXcgd2Vla3MgYmVmb3JlIHRoZSB2b3RlIGl0c2VsZi5JIGF2b2lkZWQgdGhpcyBhc2tpbmcgaW4gYSBwdWJsaWMgdGhyZWFkIGJlY2F1c2UgSSBkaWRuIHdhbnQgYW55IHRvIGRlYWwgd2l0aCBhbnkgdHVtYmxyIHN0eWxlIGRvd252b3RlIG1vYnMgb3IgbHluY2hpbmdzLCBidXQgaXMgdGhlcmUgYSByZWFzb24gd2h5IFBva2Vtb24gYXJ0cyBhbmQgY3JhZnRzIGFyZW4gdGhlaXIgb3duIHN1Yj8gSSBtZW50aW9uZWQgdGhpcyBpbiB0aGUgc3VydmV5IHRoaW5nIGJlZm9yZSB0aGUgdm90ZSB3YXMgaGVsZCwgYnV0IEkgc3RhdGVkIHRoYXQgaW4gbXkgb3BpbmlvbiwgdGhlIG1ham9yaXR5IG9mIHRocmVhZHMgaW4gYW55IHN1YiBzaG91bGQgYmUgZGlzY3Vzc2lvbiB0aHJlYWRzIGFuZCBpdCBsb29rZWQgbGlrZSBldmVyeSBvdGhlciBQb2tlbW9uIHN1YmplY3QgaGFzIHRoYXQgZXhjZXB0IGZvciBhcnRzIGFuZCBjcmFmdHMuQXQgdGhpcyBwb2ludCwgYWxsIG9mIHRoZSBzdWJyZWRkaXQgcnVsZXMgYXJlIHN1cHBvcnRlZCBieSBjb21tdW5pdHkgdm90ZXMuIApUaGVyZSBpcyBvYnZpb3VzIHNvY2lhbCBpbmVxdWFsaXR5LiBIb3dldmVyLCBpdCdzIG5vdCBzb21lIGhpZGRlbiB0aGluZyBvciBzb21lIGZvcmJpZGRlbiB0aGluZyB0byB0YWxrIGFib3V0LiAKQW5kIGl0IHdvdWxkIGV4cGxhaW4gb3RoZXIgdGhpbmdzIGxpa2UgYSB0b24gb2YgdGhlIG1lZ2EgZmF1bmEgZ29pbmcgZXh0aW5jdCBpbiBOb3J0aCBBbWVyaWNhLiBUaGUgZGlzY292ZXJ5IG9mIGNpdmlsaXphdGlvbiBzaXRlcyBsaWtlIEdvYmVrbGkgVGVwZSB0aGF0IGFyZSBhdCBsZWFzdCAxMCAxMmsgeWVhcnMgb2xkLiAKWGVub3JvdXMgdQpUaGUgd2hlZWxzIG9mIGhpc3RvcnkgZ3JpbmQgc28gc2xvdyB0aGV5IG9mdGVuIGRvbiBhcHBlYXIgdG8gZXZlbiBiZSBtb3ZpbmcuIApJbnRlcmVzdGluZ2x5LCBjcmFtcHMgY2FuIG9jY3VyIG5vdCBqdXN0IGR1cmluZyBleGVyY2lzZSBidXQgYWxzbyBzZXZlcmFsIGhvdXJzIGFmdGVyIGV4ZXJjaXNlLgpUaHJlZSBUVEMgcmlkZXJzIGhhdmUgYmVlbiBhd2FyZGVkIGZvciB0aGVpciBxdWljayB0aGlua2luZyBhZnRlciB0aGV5IGp1bXBlZCBpbnRvIGFjdGlvbiwgc2F2aW5nIGEgdmlzdWFsbHkgaW1wYWlyZWQgbWFuIHdobyBoYWQgZmFsbGVuIG9uIHRoZSB0cmFja3MuClRoZSBzb29uIHRvIGJlIGRhcmsgR2FwIHZlbnVlIGpvaW5zIHR3byBvdGhlciBsYXJnZSwgZW1wdHkgdmVudWVzIG9uIHRoZSBhdmVudWUncyBwcmltZSBibG9ja3MgYmVsb3cgNTd0aCBTdHJlZXQuIFRoZSBmb3JtZXIgUmFscGggTGF1cmVuIFBvbG8gc3RvcmUgaGFzIGJlZW4gdmFjYW50IGZvciBtb3JlIHRoYW4gYSB5ZWFyLCBhbmQgSGVucmkgQmVuZGVsIGlzIGxvY2tpbmcgaXRzIGRvb3JzIGluIEphbnVhcnkuCiJUaGUgT3R0b21hbiBkZWNsaW5lIHRoZXNpcyIgaXMgYSB0ZXJtIHdlIHVzZSB0byByZWZlciB0byBhIHBhcmFkaWdtIGluIE90dG9tYW4gaGlzdG9yeSB0aGF0IHdhcyBwcmVkb21pbmFudCBmb3IgbW9zdCBvZiB0aGUgdHdlbnRpZXRoIGNlbnR1cnkuIApJdCB0b28gbXVjaCBvZiBhbiBhc2sgY29uc2lkZXJpbmcgdGhlcmUgdGhvdXNhbmRzIG9mIGJldHRlciBleHBlcmllbmNlcyBvdXQgdGhlcmUuIApJbiBhIGZlZGVyYWwgY291cnRyb29tLCB0aHJvd2luZyBoZXJzZWxmIGF0IHRoZSBtZXJjeSBvZiBhIGp1ZGdlIGJ5IHBsZWFkaW5nIGd1aWx0eSB0byBpbGxlZ2FsIGdhbWJsaW5nIGluIGhvcGVzIG9mIHN0YXlpbmcgb3V0IG9mIGphaWwuIEFsbCBpbiB3aXRoIGEgc29saWQgaGFuZCwgc2hlIHdvbiwgZ2V0dGluZyBvZmYgd2l0aCBhIHNlbnRlbmNlIG9mIHByb2JhdGlvbi4gSXMgdGhlcmUgYW55IHdpc2RvbSB5b3UgZ2xlYW5lZCBmcm9tIG9ic2VydmluZyB0aGUgZ2FtZSBvZiBwb2tlciBhbmQgd2hhdCB5b3Ugd2VudCB0aHJvdWdoPyBLbm93IHdoZW4gdG8gZm9sZC4gClRoZSBiZXN0IHN0YXJ0aW5nIGhhbmRzIGhhdmUgYWxsIGZvdXIgY2FyZHMgd29ya2luZyB0b2dldGhlci4gCnsgYWRkcmVzc1Bvc3RhbENvZGUgfQpUaGUgY29mZmVlIGVtcGhhc2l6ZXMgdGhlIGZsYXZvciBvZiB0aGUgY2hvY29sYXRlLiA6KUFub3RoZXIgdGhpbmcgSSB3b3VsZCBub3RlIGlzIHRoYXQgaW4gcGFydGljdWxhciwgdGhlIHR5cGUgb2YgY2hvY29sYXRlIGNoaXAgeW91IGFyZSB1c2luZyBjYW4gbWFrZSBhIGh1Z2UgZGlmZmVyZW5jZSBmb3IgY2hvY29sYXRlIGNoaXAgY29va2llcyBpbiBwYXJ0aWN1bGFyLiAKTXIgRmxvcmVuY2Ugc2FpZCBoZSB3YXMgdW5hd2FyZSBvZiB3aGV0aGVyIG90aGVyIE5vcnRoIEVhc3QgY291bmNpbHMgd291bGQgam9pbiB0aGUgYWxsaWFuY2UuICJJdCBzb21ldGhpbmcgdGhhdCBjb3VsZCBiZSBicm91Z2h0IHVwLCBidXQgdGhleSB3b3VsZCBuZWVkIHRvIGNvbnNpZGVyIGl0IHRoZW1zZWx2ZXMsIiBoZSBzYWlkLiAiVGhlcmUgYmVlbiByZWNlbnQgcHJlc3MgYWJvdXQgdGhlIGxvc3NlcyB0aGF0IGhhdmUgYmVlbiBvY2N1cnJpbmcsIHNvIGl0IGlzIHNvbWV0aGluZyB0aGV5IGNvdWxkIGNvbnNpZGVyLiIgSW5kaWdvIENvdW5jaWwgaXMgbm90IHJlcXVpcmVkIHRvIHBheSBhIGZlZSB0byBiZSBwYXJ0IG9mIHRoZSBhbGxpYW5jZS4gClMgd2lsbCBiZSBhd2FyZGVkIHRvIHN0dWRlbnRzIHdobzoKVGhlc2UgbmV3IHNwb3RzIGFyZSBzdXJlIHRvIHNhdGlzZnkgeW91ciBjcmF2aW5ncy4gUmVhZCBvbiBmb3IgdGhlIG5ld2VzdCBwbGFjZXMgdG8gY2hlY2sgb3V0IHRoZSBuZXh0IHRpbWUgeW91IGluIHRoZSBtb29kIGZvciBTb3V0aGVhc3QgQXNpYW4gZmFyZS4KVGhhdCBiZWluZyBzYWlkLCBORCBoYXMgb25lIGhlbGwgb2YgYW4gb2ZmZW5zaXZlIGxpbmUgYW5kIGlmIEtlbGx5IGhhZCB3ZW50IHRvIGNhbGxpbmcgcGFzcyBwbGF5cyBtb3JlIGluIHRoZSBmaXJzdCBoYWxmLCBJIHRoaW5rIHlhbGwgd2luLiBJIHRoaW5rIFZlbmFibGVzIGtuZXcgS2VsbHkgd291bGQgc3RpY2sgdG8gdGhlIHJ1biBiZWNhdXNlIG9mIHRoZSB3ZWF0aGVyLCBhbmQgd2Ugc29sZCBvdXQgZm9yIGl0LiAKSXQgaXMgdmVyeSB3YXJtIHdoaWxlIHlvdSBhcmUgYWN0aXZlLiBGbGVlY2UgZG9lcyBub3QgYW5kIGlzIG5vdCBkZXNpZ25lZCB0byBibG9jayB3aW5kLiAKVGhhdCBzYWlkLCBpdCBwb3NzaWJsZSBzaGUgaGFzIGhlciB3b3JrIHBlcm1pdCBub3cgZGVwZW5kaW5nIHdoZW4gdGhleSBnb3QgbWFycmllZCBhbmQgaWYgdGhleSBmaWxlZCB0aGVpciBwYXBlcndvcmssIEkgZ3Vlc3MuIFNvbWUgcGVvcGxlIGhhdmUgZ3Vlc3NlZCBzaGUgcmVhbGx5IGNhbWUgaW4gb24gYSBzcG91c2FsIHZpc2EsIG5vdCBhIEsxLiBJIHRoaW5rIHdpdGggYSBDUjEgdmlzYSwgeW91IGNhbiB3b3JrIGltbWVkaWF0ZWx5IGFzIHNvb24gYXMgeW91IHJlY2VpdmUgeW91ciBTU04uIFNvLCBpZiB0aGF0IGlzIHRoZSB3YXkgc2hlIGVudGVyZWQgdGhlIGNvdW50cnksIHNoZSBjb3VsZCBsZWdhbGx5IGJlIHdvcmtpbmcuIFdobyB0aGUgaGVsbCBrbm93cyB3aGF0IHNoZSB1cCB0by4gSSBkb24gdGhpbmsgYW55IGNvbXBhbnkgKG90aGVyIHRoYW4gdGhlIHNuYWtlIGxhZHkgY29tcGFueSkgd2FudHMgdG8gYmUgYXNzb2NpYXRlZCB3aXRoIGhlciBicmFuZCBvZiBjcmF6eS4KSmVhbiBMYXBvcnRlLCBjaGllZiBvcGVyYXRpbmcgb2ZmaWNlciBvZiB0aGUgVHJhbnNwb3J0YXRpb24gU2FmZXR5IEJvYXJkLCBzYWlkIGlmIHJhaWx3YXkgY29tcGFuaWVzIG9ic2VydmUgZW1wbG95ZWVzIGVuZ2FnZWQgaW4gY3JpbWluYWwgYWN0aXZpdHkgb3IgZ3Jvc3MgbmVnbGlnZW5jZSwgdGhleSB3aWxsIGhhdmUgYSBvYmxpZ2F0aW9uIHRvIHRha2UgYWN0aW9uIGFuZCBkZWFsIHdpdGggdGhhdC4gCldoYXQgYWJvdXQgdGhlIGNvc3Qgb2YgdGhlaXIgY3JpbWVzIGFuZCBtb3JhbCBqdWRnbWVudHM/IEV4YW1wbGUuIEkgdXNlIHRvIGhhdmUgYSBmcmllbmQgd2hvIGlzIGFuIGlsbGVnYWwgaW1taWdyYW50LiAKTUMgaXMgYnJva2UgYW5kIHVuYWJsZSB0byBzbGljZSBicmVhZCBhbnltb3JlIHNvIGhlIGhhcyB0byBidXkgc2xpY2VzIG9mIGJyZWFkIGZyb20gaGVyLiBUaGlzIGdldHMgaGltIGFuZ3J5IGFuZCBoZSBzaG9vdHMgdGhlIHNsaWNlZCBicmVhZCB3aXRoIGEgZmlyZWJhbGwuIFRoaXMgZ2l2ZXMgaGltIGEgYnJpbGxpYW50IGlkZWEgdGhhdCBub2JvZHkgZWxzZSBjb3VsZCBoYXZlIGV2ZXIgdGhvdWdodCBvZiwgZXZlci4KVGhlIGZpcnN0IGluc3RhbG1lbnQgd2Fzbid0IGV2ZXJ5b25lJ3MgY3VwIG9mIHRlYSwgYnV0IEkgdGhvdWdodCBpdCB3YXMgYSBjbGFzc2ljIHBpZWNlIG9mIGNpbmVtYSB3aXRoIGl0cyBjbGV2ZXIgY29sb3VyIHNjaGVtZSBhbmQgb2xkIEhvbGx5d29vZCBjaGFyYWN0ZXJzLkl0IG1vdmVkIGF0IGEgcGFjZSB3aXRoIHN0b3JpZXMgaW50ZXJ3ZWF2aW5nIGFuZCBhdWRpZW5jZXMgc2NyYW1ibGluZyB0byBmaW5kIG91dCBtb3JlIGFib3V0IHRoZSBjaGFyYWN0ZXJzIG9mIHRoZSBjcmltZSByaWRkbGVkIEJhc2luIENpdHkuVGhlIGZpcnN0IGZpbG0gd2FzIGEgZ3Vlc3NpbmcgZ2FtZSwgY2hhcmFjdGVycyByZXZlYWxlZCBsaXR0bGUgYW5kIHRoZWlyIHBhc3QgbGl2ZXMgd2VyZSBhIG15c3RlcnkuIApUaGVyZWZvcmUsIGlmIHlvdSB3YW50IGEgZmFzdCBhY3RpbmcgYW5lc3RoZXRpYywgeW91IHdhbnQgMSkgbG93IGJsb29kIHNvbHViaWxpdHksIGFuZCAyKSBoaWdoIGxpcGlkIHNvbHViaWxpdHkuVGhlcmUgaXMgYSBjYXRjaDogaWYgdGhlIGFuZXN0aGV0aWMgaXMgaGlnaGx5IGxpcGlkIHNvbHVibGUsIG92ZXIgdGltZSwgaXQgd2lsbCByZWRpc3RyaWJ1dGUgKHZpYSBjaXJjdWxhdG9yeSBzeXN0ZW0pIGZyb20gdGhlIGJyYWluIHRvIGZhdHR5IHRpc3N1ZXMuIApBbHRob3VnaCB0aGUgZ2FtZSBpcyBjb25zaWRlcmVkIGxlZ2FsIGluIG1vc3QgSW5kaWFuIHN0YXRlcywgdGhlcmVhcmUgc29tZSBzdGF0ZXMgd2hpY2ggY29uc2lkZXIgcG9rZXIgYXMgZ2FtYmxpbmcgYW5kIGhlbmNlIHRoZSBnYW1laXMgbm90IHBlcm1pdHRlZCBieSBsYXcuIE9ubGluZSBnYW1pbmcgaXMgcHJpbWFyaWx5IG1vbml0b3JlZCB1bmRlciBUaGUgUHVibGljIEdhbWJsaW5nIEFjdCwxODY3LiBJbiB0aGUgbW9kZXJuIGVyYSwgc3RhdGVzIGxpa2VOYWdhbGFuZCBTaWtraW0gaGF2ZSBpbXBsZW1lbnRlZCBzcGVjaWZpYyBvbmxpbmUgZ2FtaW5nIGxhd3NpbiBvcmRlciB0byBtYWtlIHRoZSBpbmR1c3RyeSBsZWdpdGltYXRlLiAKQXMgY2xldmVyIGFzIGhlIGlzLCBoZSBoYXMgYmVlbiB0cmlja2VkIGFuZCBtaXNsZWQgaW50byBiZWxpZXZpbmcgYSBmYWxzZWhvb2QsIGFuZCBhbGwgb2YgaGlzIHRhbGVudHMsIHNraWxscyBhbmQgaW50ZWxsaWdlbnQgcHV0IHRvIHdvcmsgb24gdGhlIHdyb25nIHNpZGUuIApCdXQgQm93bGluZyBhbmQgaGlzIGNvbGxlYWd1ZXMgaGF2ZSBkZW1vbnN0cmF0ZWQgdGhhdCB0aGVpciBhbGdvcml0aG0gYWx3YXlzIHdpbnMgaW4gdGhlIGxvbmcgcnVuLgpUaGlzIHF1ZXN0aW9uIHJlbWluZHMgbWUgb2YgYSBzY2VuZSBmcm9tIHRoZSBvcmlnaW5hbCBTdGFyIFRyZWsgZXBpc29kZSBUaGUgQ29yYm9taXRlIE1hbmV1dmVyIHdoZXJlIHRoZSBFbnRlcnByaXNlIGlzIGhvcGVsZXNzbHkgb3V0bWF0Y2hlZCBhbmQgdGhlIGxvZ2ljYWwgU3BvY2sgbWFrZXMgYSBjaGVzcyByZWZlcmVuY2UgaW5kaWNhdGluZyB0aGV5IGhhdmUgbG9zdC4gS2lyayByZXBsaWVzIHRvIHRoZSBlZmZlY3QgdGhhdCBpbnN0ZWFkIG9mIHBsYXlpbmcgY2hlc3MgdGhleSBzaG91bGQgcGxheSBwb2tlciwgYW5kIHByb2NlZWRzIHRvIG1ha2UgYSBibHVmZiB0aGF0IHN1Y2NlZWRzIGluIGdldHRpbmcgdGhlbSBvdXQgb2YgdGhlIHNpdHVhdGlvbi4gT2YgY291cnNlIGxhdGVyIHdlIGxlYXJuIGl0IHdhcyBsZXNzIHRoZSBmYWN0IHRoYXQgS2lyayBibHVmZmVkLCBhbmQgbW9yZSB0aGF0IHRoZSBhbGllbnMgaGFkbid0IHJlYWxseSBpbnRlbmRlZCB0byBkZXN0cm95IHRoZSBFbnRlcnByaXNlLiAKQW1vbmcgdGhlIG90aGVyIEFCQ3MsIHRoZSBiaWxsIGZvciBwdWJsaWMgaG91c2luZyBpcyBnb2luZyB1cCAkNDY5LDAwMCwgdGhlIGhlYWx0aCB1bml0IGlzIHNlZWtpbmcgYSBmaXZlIHBlciBjZW50IGluY3JlYXNlIG9yICQxNTAsMDAwLCBIYW5kaSBUcmFuc2l0IGlzIHNlZWtpbmcgJDgxLDAwMCBtb3JlLCB0aGUgbGFuZCBhbWJ1bGFuY2Ugc2VydmljZSBydW4gYnkgdGhlIGNvdW50eSBhbmQgY29zdCBzaGFyZWQgd2l0aCB0aGUgY2l0eSBuZWVkcyAkMjAwLDAwMCBtb3JlLCBhbmQgV2luZHNvciBTeW1waG9ueSBPcmNoZXN0cmEgaXMgc2Vla2luZyAkMjUsMDAwIG1vcmUuIFRyYW5zaXQgV2luZHNvciBuZWVkcyBhbiBhZGRpdGlvbmFsICQyNzUsMDAwIHRvIGFkZCBtb3JlIHNlcnZpY2UgdG8gaXRzIHJvdXRlcyBpbiBTb3V0aCBXaW5kc29yIHNlcnZpbmcgU3QuIApEdXJpbmcgdGhhdCBzYW1lIGluc3BlY3Rpb24sIFJvYmVydHMgbm90ZWQgdGhlIHNwYSBoYWQgYSAiZ2VuZXJhbGx5IGNsdXR0ZXJlZCwgdW5rZW1wdCwgdW5pbnZpdGluZyBhbmQgdW5wcm9mZXNzaW9uYWwgYXBwZWFyYW5jZSwiIHN0b3JpbmcgYSBsYXJnZSBhbW91bnQgb2YgZm9vZCwgY29va2luZyBlcXVpcG1lbnQsIGNsb3RoaW5nLCBwZXJzb25hbCBlZmZlY3RzLCBhbmQgYmVkcy4gVGhpcyBsZWQgaGVyIHRvIGNvbmNsdWRlIHRoYXQgd29ya2VycyBsaXZlZCBvbiBzaXRlLCBhbm90aGVyIHNpZ24gb2YgcG9zc2libGUgcHJvc3RpdHV0aW9uLiBUaGUgYWRzIHdlcmVuJ3Qgc28gb3ZlcnQgdGhhdCB0aGV5IGJyb2tlIGFueSBsYXdzLCBidXQgdGhlaXIgdG9uZSBhbmQgcHJlc2VudGF0aW9uIHNlZW1lZCB0byBmbGlydCB3aXRoIHRoZSBwb3NzaWJpbGl0eSwgYWNjb3JkaW5nIHRvIHRoZSBpbnNwZWN0b3IuCkluIDE5MDEgRnJ5IHNjb3JlZCAzLDE0NyBydW5zLCBhdmVyYWdlIDc4LjY3OyBpbiAxOTAzIGhlIHNjb3JlZCAyLDY4MyBydW5zLCBhdmVyYWdlIDgxLjMwLiAKMTEuIGEuIE9uZSB3aG8gcGVyZm9ybXMgbWFudWFsIGxhYm9yOiBhIGZhY3RvcnkgaGFuZC4KSSBmZWVsIGxpa2UgaWYgSSdtIGV2ZXIgZ29pbmcgdG8gd2FudCB0byBvd24gYSBob3VzZSBJJ20gZ29pbmcgdG8gaGF2ZSB0byBtb3ZlIGF3YXkuIFdoaWNoIGlzIGEgc2hhbWU6IEkgbG92ZSB0aGUgYXJlYSBhcGFydCBmcm9tIHRoZSBkYW1uIGV4cGVuc2VzLiAKSXQgYWN0dWFsbHkgbm90IHVucmVhc29uYWJsZSB0byBjbGFpbSBhIGRvc2UgdGhhdCBsb3cgd291bGQgaGF2ZSBzb21lIHNvcnQgb2YgYW4gZWZmZWN0LCBtYXliZSBub3Qgd2l0aCBMU0QgYnV0IGNlcnRhaW5seSB3aXRoIG90aGVyIGRydWdzIHRoYXQgYWN0IG9uIEhUMmEuIExvb2sgYXQgQ2hhcmxlcyBOaWNob2xzICh5dXAsIERhdmlkIE5pY2hvbHMgc29uKSBzdHVkaWVzIG9uIHRoZSBhbnRpIGluZmxhbW1hdG9yeSBlZmZlY3RzIG9mIERPSSBpbiB2aXZvLiBUaGV5IGhhdmUgZGVtb25zdHJhdGVkIHBvdGVudCBhbnRpIFRORiBlZmZlY3RzIGluIHJhdHMgYXQgZmFyIGJlbG93IHRoZSBjb2duaXRpdmUvQ05TIGVmZmVjdHMgdGhhdCByZWNyZWF0aW9uYWwgdXNlcnMgYXNzb2NpYXRlIHdpdGggdGhlIGRydWdzLiAKSW4gcG9rZXIsIHlvdSBoYXZlIHRvIGZhbWlsaWFyaXplIHlvdXJzZWxmIHdpdGggd2hhdCBhIGZsdXNoIGxvb2tzIGxpa2UgYW5kIHdoYXQgYSBmdWxsIGhvdXNlIGNvbXByb21pc2VzLCB0aGVuIHJlbWVtYmVyIHdoaWNoIG9uZSBpcyBoaWdoZXIuIApBY2NvcmRpbmcgdG8gYSBicmllZiBHb29nbGUgc2VhcmNoLCBpdCdzIGEgdGhyb3diYWNrIHRvIHdoZW4gdGhlIFVTIGFuZCBDYW5hZGEgYm90aCB1c2VkIHRoZSAiZ29sZCBzdGFuZGFyZCIgKGFsdGhvdWdoIHJlYWxseSBpdCdzIHNpbHZlci9jb3BwZXIpIGZvciB0aGVpciBjdXJyZW5jeS4gVGhlIGNvaW5zIGFyZSB0aGUgc2l6ZSB0aGV5IGFyZSBiZWNhdXNlIGF0IG9uZSBwb2ludCB0aGV5IHdlcmUgYWN0dWFsbHkgd29ydGggdGhlIGFtb3VudCBvZiBtZXRhbCB0aGV5IHdlcmUgbWFkZSBmcm9tLiBBdCBzb21lIHBvaW50IHRoYXQgd2FzIHBoYXNlZCBvdXQsIGVzcGVjaWFsbHkgb25jZSB0aGV5IHN0YXJ0ZWQgdXNpbmcgcGxhdGluZyBhbmQgbWV0YWwgYWxsb3lzIGZvciB0aGUgY29pbnMsIGJ1dCB0aGV5IGtlcHQgdGhlIHNpemUgb2YgdGhlIGNvaW5zIHN0YW5kYXJkIGZvciB3aGF0IHRoZSBwdWJsaWMgKGFuZCB2ZW5kaW5nIG1hY2hpbmVzKSB3ZXJlIGFjY3VzdG9tZWQgdG8uIEFsc28gYWNjb3JkaW5nIHRvIG15IHNlYXJjaCwgdXAgdW50aWwgdGhlIDE5NjBzIG9yIHNvLCBpdCB3YXMgY29tbW9uIGZvciBjb2lucyB0byBiZSBhY2NlcHRlZCBhY3Jvc3MgdGhlIGJvcmRlciwgc28gdGhhdCBtYWRlIHRoZSBwdXNoIGZvciB0aGVtIHRvIGJlIHN0YW5kYXJkIGJldHdlZW4gdGhlIGNvdW50cmllcyB0aGF0IG11Y2ggbW9yZSByZWxldmFudC4gTm93YWRheXMgd2UgYXJlbid0IHN1cHBvc2VkIHRvIGFjY2VwdCBDYW5hZGlhbiBjb2luLCBidXQgaXQgZG9lc24ndCBzdG9wIHBlb3BsZSBmcm9tIHRyeWluZywgYW5kIHBsZW50eSBvZiBDYW5hZGlhbiBjb2luIHdpbmRzIHVwIGluIFVTIGNpcmN1bGF0aW9uIChjYW4ndCBzcGVhayBpZiBpdCdzIHRoZSBzYW1lIHZpY2UgdmVyc2UpLgpFeGNlcHQgdGhpcyB5ZWFyJ3MgZXZlbnQgZGlkbid0IGp1c3QgYXR0cmFjdCBwb2tlcidzIGJpZ2dlc3Qgc3RhcnMsIGJ1dCBzb21lIGxlZ2VuZGFyeSBuYW1lcyBmcm9tIHRoZSBzcG9ydHMgd29ybGQgYWxzbyBtYWRlIHRoZWlyIHdheSB0byB0aGUgQmFoYW1hcyBpbiBob3BlcyBvZiBtYWtpbmcgYSBuYW1lIGZvciB0aGVtc2VsdmVzIG9uIHRoZSBmZWx0OyBhbmQgd2hpbGUgVUZDIEhhbGwgb2YgRmFtZXJUaXRvIE9ydGl6IGFuZCBQR0EgYW5kIFJ5ZGVyIEN1cCBsZWdlbmQgU2VyZ2lvIEdhcmNpYSAoR1BJIE5vLiAKR3JhbnRlZCwgdGhpcyBhbHNvIG1lYW5zIHdlIG1pc3NlZCBvdXQgb24gb25lIG9mIG15IGZhdm9yaXRlIHNjZW5lcyBpbiB0aGUgc2VyaWVzIChHaW5ueSBhbmQgSGFycnkgZmlyc3Qga2lzcykgYnV0IHlvdSBkb24gbmVlZCBwYWdlcyBvZiBIYXJyeSBzaXR0aW5nIGluIHNvbGl0dWRlIGZvciBob3VycyBvbiBlbmQgdG8gYmUgdHJhbnNsYXRlZCB0byB0aGUgc3RvcnkgKGV4Y2VwdCB0byBmdXJ0aGVyIHRoZSBwbG90ICAgYSBsYSBJIE11c3QgTm90IFRlbGwgTGllcykuLiAKVGhlIHF1ZXN0aW9uIGlzIHdoZXJlIHRoZSBtb25leSBjb21lcyBmcm9tLiAKIkZvciBhbnlvbmUgdGhhdCBoYXMgdHJhdmVsbGVkIHRocm91Z2ggU3BhZ2hldHRpIEp1bmN0aW9uIChhcyBpdCBpcyBrbm93biBieSBzb21lKSB0aGV5IGNhbiBhcHByZWNpYXRlIHRoYXQgaXQgaXMgYSBoaWdod2F5IGxpa2UgaW50ZXJjaGFuZ2Ugd2l0aCBvbiByYW1wcywgb2ZmIHJhbXBzIGFuZCB1bmRlcnBhc3Nlcy4gVGhhdCB3aG9sZSBpbnRlcmNoYW5nZSB3YXMgZGVzaWduZWQgZm9yIHRoZSBhdXRvbW9iaWxlIHNvIGl0IGlzIHVuZGVyZ29pbmcgYSBtYWpvciByZWRldmVsb3BtZW50IGludG8gYSBtaXhlZCB1c2UsIHJlc2lkZW50aWFsIGFyZWEsIHBlZGVzdHJpYW4gZnJpZW5kbHkgYXJlYSwiIHRoZSBjaXR5J3MgY2hpZWYgZW5naW5lZXIgTWljaGFlbCBEJ0FuZHJlYSB0b2xkIENQMjQgb24gRnJpZGF5IGFmdGVybm9vbi4gIldlIGFyZSBicmluZ2luZyB0aGF0IGVsZXZhdGVkIHNlY3Rpb24gcmlnaHQgdG8gZ3JhZGUgd2l0aCBhIG5ldyBpbnRlZ3JhdGVkIHJvYWQgbmV0d29yayBhbmQgaW4gdGhhdCByb2FkIG5ldHdvcmsgd2Ugd2lsbCBoYXZlIHRyZWVzLCBwbGFudGVycywgd2lkZSBib3VsZXZhcmRzIGFuZCBpdCB3aWxsIGJlIHBlZGVzdHJpYW4gZnJpZW5kbHkgd2l0aCBkZWRpY2F0ZWQgY3ljbGUgbGFuZXMuIi4gCkJ1c2luZXNzIGlzIGFib3V0IHByb21vdGluZyBhIGxpZmVzdHlsZSwgYW5kIHJ1Z2J5IGRvZXNuIG5lZWQgdG8gYXBwZWFsIHRvIDMwMG1pbGxpb24gQW1lcmljYW5zLiBJdCBub3QgdHJ5aW5nIHRvIGNvbnZlcnQgZXZlcnkgTkZMIGhvdXNlaG9sZC4gSXQgb25seSBuZWVkcyB0byBhdHRyYWN0IDMwMGsgdmlld2VycyB0byBnZW5lcmF0ZSBicm9hZGNhc3QgZ29sZC4gCkluIGNhc2UgeW91IGFyZSBob3N0aW5nIGEgcHJpdmF0ZSBnZXQgdG9nZXRoZXIsIGEgY29ycG9yYXRlIGV2ZW50IG9yIGEgY2FzaW5vIHRoZW1lZCBwYXJ0eSBhbmQgeW91IGFyZSBkZXRlcm1pbmVkIHRvIGRvIGV2ZXJ5dGhpbmcgaXQgdGFrZXMgdG8gZW5zdXJlIHRoYXQgeW91ciBndWVzdHMgd2lsbCBoYXZlIGEgZ3JlYXQgdGltZSwgeW91IHNob3VsZCByZW50IGhpZ2ggcXVhbGl0eSBjYXNpbm8gdGFibGVzLiAKQW1hem9uIGdldHMgdGhlIFBvaW50IG9mIFNhbGUgKFBPUykgZGF0YSBvbiB0aGluZ3MgdGhleSBkb24gYWN0dWFsbHkgb3duIC4gClRoZSBwb2ludCBvZiBFenJhJ3MgbHlyaWNzIGFuZCBzb25ncyBhcmUgbmV2ZXIgYWJvdXQgdGhlIHJlZmVyZW5jZXMgaGUgbWFrZXMuIExvb2sgYXQgU3RlcCBmb3IgZXhhbXBsZSAgIGhpcyByZWZlcmVuY2VzIGFyZSBhIGNhbGxiYWNrIHRvIHdobyBoZSB3YXMgZHVyaW5nIGhpcyBjb2xsZWdlIHllYXJzLCBhIHByZXRlbnRpb3VzIGFuZCBpbW1hdHVyZSBraWQuIFRoZSBjaG9ydXMgY291bnRlcnMgYm90aCB2ZXJzZXMgYnkgc2hlZGRpbmcgdGhlc2UgcHJldGVuc2VzIGFuZCBzdGF0aW5nIGhlJ3MgcmVhZHkgdG8gc2V0dGxlIGRvd24gYW5kIGdyb3cgdXAuIFRoZSBtb3N0IGltcG9ydGFudCBseXJpY3Mgb2YgYW55IFZhbXBpcmUgV2Vla2VuZCBzb25nIHNoZWRzIHRoZXNlIHByZXRlbnNlcyBhbmQgY3V0cyB0byB0aGUgcG9pbnQgICBpdCdzIG1vc3QgZXZpZGVudCBvbiB0aGUgYmFjayBoYWxmIG9mIENvbnRyYSBhbmQgYWxsIG9mIE1WT1RDLiBJbiBEaXBsb21hdCdzIFNvbiwgdGhlIGNlbnRyYWwgbHlyaWNzIGFyZSB0aGUgbGluZSB0aGF0IFJvc3RhbSBzaW5ncyAgICJJIGtub3cgeW91J2xsIHNheSBJJ20gbm90IGRvaW5nIGl0IHJpZ2h0LCBidXQgdGhpcyBpcyBob3cgSSB3YW50IGl0L0kgY2FuJ3QgZ28gYmFjayB0byBob3cgSSBmZWx0IGJlZm9yZSIuIE5vIHJlZmVyZW5jZXMsIGp1c3QgUm9zdGFtIGNvbWluZyB0byB0ZXJtcyB3aXRoIGhpcyBzZXh1YWxpdHkuIFRoZSBzb25nIHdvdWxkbid0IGV4aXN0IHdpdGhvdXQgdGhpcyByZWFsaXphdGlvbi4gTG9vayBhdCBTdGVwIGFnYWluLiBUaGUgYnJpZGdlIGN1dHMgdG8gdGhlIHJlYWxpemF0aW9uIEV6cmEncyBjaGFyYWN0ZXIgaXMgbWFraW5nLCAiV2lzZG9tJ3MgYSBnaWZ0IGJ1dCB5b3UnZCB0cmFkZSBpdCBmb3IgeW91L0FnZSBpcyBhbiBob25vciwgaXQncyBzdGlsbCBub3QgdGhlIHRydXRoIi4gU2ltcGxlIGFuZCB0byB0aGUgcG9pbnQuIFRoZXNlIGx5cmljcyBhcmUgbmVjZXNzYXJ5IHRvIHRoZSBjb3JlIG1lYW5pbmcgb2YgdGhlIHNvbmcuClBFQVNFLiAKQ2VudGFyYSBIb3RlbHMgUmVzb3J0cyBzZWl0IDE5ODMgSmFocmVuIGRpZSBmaHJlbmRlIEhvdGVsZ3J1cHBlIGluIFRoYWlsYW5kIHVuZCBkYW1pdCBkYXMgS2Vybmdlc2NoZnQgZGVyIENlbnRyYWwgR3JvdXAgb2YgQ29tcGFuaWVzLiBEaWUgMTk4MCBIb3RlbGdydXBwZSB3aXJkIGJpcyBFbmRlIDIwMTcgaW5zZ2VzYW10IDEwMCBIb3RlbHMgaW4gVGhhaWxhbmQsIFZpZXRuYW0sIFNyaSBMYW5rYSwgYXVmIGRlbiBNYWxlZGl2ZW4gdW5kIE1hdXJpdGl1cyBzb3dpZSBkZW4gUGhpbGlwcGluZW4gdW5kIGluIEluZG9uZXNpZW4gdW50ZXJoYWx0ZW4uIENlbnRhcmEgSG90ZWxzIFJlc29ydHMgYmVzdGVodCBhdXMgdmllciBVbnRlcm1hcmtlbjogRGllIGZuZiBTdGVybmUgTWFya2UgR3JhbmQiIHN0ZWh0IGZyIEx1eHVzIHVuZCBLb21mb3J0LCBDZW50YXJhIEhvdGVscyBSZXNvcnRzIiBzdGVoZW4gZnIgZGllIHZpZXIgU3Rlcm5lIFByb2R1a3RlIGRlciBIb3RlbGdydXBwZSB3aHJlbmQgZGllIENlbnRhcmEgQm91dGlxdWUgQ29sbGVjdGlvbiIgZnIgYW5zcHJ1Y2hzdm9sbGUgR3N0ZSwgZGllIGluIGlocmVtIFVybGF1YiBQcml2YXRzcGhyZSBpbiBzdGlsbHZvbGxlbSBBbWJpZW50ZSBmYXZvcmlzaWVydC4gRGFzIGRyZWkgU3Rlcm5lIFByb2R1a3QgZGVyIEhvdGVsZ3J1cHBlIG5lbm50IHNpY2ggQ2VudHJhIEhvdGVscyBSZXNvcnRzIi4KVGhlIFdvbWVuIFJ1bWJsZSBwbGF5aW5nIHRvIHBlb3BsZXMgc3RyZW5ndGhzIGFuZCBnaXZpbmcgbmVhcmx5IGV2ZXJ5b25lIGF0IGxlYXN0IG9uZSBmdW4gbW9tZW50LiBFdmVyeW9uZSBjYW1lIG91dCBsb29raW5nIHByZXR0eSBkYW1uIGdyZWF0IGluIHRoYXQgbWF0Y2guClRoZSBlcGlzb2RlIGVuZGVkIHdpdGggaGltIHBvc3NpYmx5IGRlYWQgb24gdGhlIGZsb29yLCB3aXRoIEFsaWNlIGNsZWFuaW5nIHVwIGhpcyBibG9vZCBhbmQgZGVtYW5kaW5nIHRoYXQgYSBuZXdseSBhcnJpdmVkIEJldHR5IGxvY2sgdGhlIGRvb3IuIAoyMDE3LiAKSGUgaGFkIGF0dGVuZGVkIFNhbmR3aWNoIFNlY29uZGFyeSBTY2hvb2wuIFdoZW4gdGhlIGZhbWlseSBtb3ZlZCBmcm9tIFdpbmRzb3IgdG8gTWNHcmVnb3IsIGhlIHRyYW5zZmVycmVkIHRvIEtpbmdzdmlsbGUgRGlzdHJpY3QgSGlnaCBTY2hvb2wuIEJ1dCBpdCB3YXMgaGFyZCB0byBtYWtlIGZyaWVuZHMsIGFuZCBoZSB3YXMgYnVsbGllZC4gSGUgd2FzIGJlYXRlbiB1cCBhdCBhIHBhcnR5IGluIENvbGNoZXN0ZXIuIEhlIGxlZnQgR3JhZGUgMTIgbGFzdCB5ZWFyLgpBYW4gZGUgaGFuZCB2YW4gb3BlbiBlbiBnZXNsb3RlbiB2cmFnZW4gbW9lc3QgaWsgZGUganVpc3RlIGluZm9ybWF0aWUgdmVya3JpamdlbiBiaWogZGUgcGF0aW50IG9tIG9uZGVyem9la3Nkb2Vsc3RlbGxpbmdlbiB0ZSBrdW5uZW4gZm9ybXVsZXJlbi4gCkNvcGVuaGFnZW4gaXNuIG9uZSBvZiB0aGUgbGFyZ2VyIGFpcnBvcnRzIGluIHRoZSB3b3JsZCwgYnV0IGl0IGlzIHRoZSBidXNpZXN0IGh1YiBmb3IgdHJhdmVsZXJzIGluIFNjYW5kaW5hdmlhLiAKSGFpcjogcmVjb21tZW5kIG5vdCB3YXNoaW5nIGV2ZXJ5IG5pZ2h0LiBPciBhdCBuaWdodCBhdCBhbGwsIHVubGVzcyB5b3UgYXJlIGJsb3cgZHJ5aW5nLiAKVGhpcyBPY3RvYmVyIDIwMTcgZmlsZSBwaG90byByZWxlYXNlZCBieSB0aGUgTGFzIFZlZ2FzIE1ldHJvcG9saXRhbiBQb2xpY2UgRGVwYXJ0bWVudCBGb3JjZSBJbnZlc3RpZ2F0aW9uIFRlYW0gUmVwb3J0IHNob3dzIHRoZSBpbnRlcmlvciBvZiByb29tIDMyIDEzNCBvZiBMYXMgVmVnYXMgc2hvb3RlciBTdGVwaGVuIFBhZGRvY2sgMzJuZCBmbG9vciByb29tIG9mIHRoZSBNYW5kYWxheSBCYXkgaG90ZWwuICBQaG90byBjb3VydGVzeSBvZiBMYXMgVmVnYXMgTWV0cm9wb2xpdGFuIFBvbGljZSBEZXBhcnRtZW50IHZpYSBBc3NvY2lhdGVkIFByZXNzLCBTdC4gR2VvcmdlIE5ld3MuIApObywgSSBkb24gbWVhbiB0aGV5IGdvaW5nIHRvIGxvb2sgbGlrZSBNYWRvbm5hLCBzdHJhbmdlbHkgZnJvemVuIGluIHRpbWUgdGhyb3VnaCB0aGUgd29uZGVycyBvZiBjb3NtZXRpYyBzdXJnZXJ5IGFuZCBzcGVuZGluZyBhbGwgZGF5IHdpdGggcGVyc29uYWwgdHJhaW5lcnMuIFdoYXQgSSBtZWFuIGlzIHRoZSByaWNoIHdpbGwgbm8gbG9uZ2VyIGxvb2sgaHVtYW4uLiAKVGFsa2luZyBvZiAnaG93IG11Y2gnIGV0Yy4sIGV0Yy4sIHNvbWUgcGVvcGxlIGNhbiBiZSBhIGxpdHRsZSBvdmVyIGVudGhldXN0aWMgd2hlbiBpdCBjb21lcyB0byBleGFjdGx5IGhvdyBmYXIgdGhlIGZvcmVza2luIHNob3VsZCBvciBoc291bGQgbm90IG1vdmUgYmFjayBmcm9tIHRoZSAnaGVhZCcgb2YgdGhlIFBlbmlzLiBOb3cuIApBbmQgdGhlc2UgZWlnaHQgbW9udGhzIHdlcmUgbm8gb3JkaW5hcnkgdGltZXMgICBub3QgZm9yIG91ciBmb3JlaWduIHJlbGF0aW9ucyB0aGF0IHNhdyB0aGUgd29ybGQgYXJvdW5kIHVzIHR1cm5pbmcgdXBzaWRlIGRvd24uIEhhbGYgb2YgdGhlIGdsb2JlIHdvbmRlcnMgYWJvdXQgdGhlIGFmdGVybWF0aCBvZiB0aGUgVVMgZHJhd2Rvd24gaW4gQWZnaGFuaXN0YW47IG90aGVycyBrZWVwIHRoZWlyIGZpbmdlcnMgY3Jvc3NlZCBhYm91dCB0aGUgcHJvc3BlY3RzIG9mIFVTIElyYW4gZHRlbnRlIGFuZCBpdHMgaW1wbGljYXRpb25zOyBzdGlsbCBvdGhlcnMgZnJldCBhYm91dCB0aGUgcG9zc2liaWxpdHkgb2YgTmFyZW5kcmEgTW9kaSdzIHZpY3RvcnkgYXMgSW5kaWEncyBQcmltZSBNaW5pc3Rlciwgbm90IHRvIGZvcmdldCBDaGluYSdzIHJlYWxpZ25tZW50IGluIHRoZSByZWdpb24gYW5kIHRoZSBncm93aW5nIHRlbnNpb24gYmV0d2VlbiB0d28gTXVzbGltIGNvdW50cmllcy4gCkl0IHJpZGljdWxvdXMgdG8gdGhpbmsgdGhlIGNvdW50cnkgbGlrZXMgYmVpbmcgcG9vciwgb3IgdGhhdCBLaW0gaXMgc29tZSBraW5kIG9mIGVjb25vbWljIGlkaW90LiBOSywgYXMgaGFzIGJlZW4gcHJldmlvdXNseSByZXBvcnRlZCBhdCBsZW5ndGgsIHdvdWxkIGxvdmUgdG8gaGF2ZSBmb3JlaWduIGludmVzdG1lbnQuICJPcGVubmVzcyB3b3VsZCBiZSBzdWljaWRhbCBmb3IgdGhlIHJlZ2ltZSBhcyBpdCB3b3VsZCBicmluZyBpbiBhIGZsb29kIG9mIGluZm9ybWF0aW9uIGZyb20gb3V0c2lkZSBhbmQgY291bGQgbG9vc2VuIGl0cyBwb2xpdGljYWwgY29udHJvbC4iLiAKSSBuZXZlciBmb3JnZXQgb25lIG5pZ2h0LCB3ZSB3ZW50IG91dCB0byBzZXQgYSB2YXJpZXR5IG9mIHRyYXBzIG9mIG1hbnkgc2l6ZXMgcmlnaHQgYmVmb3JlIGR1c2suIFRoaXMgaXMgdGhlIHRpbWUgb2YgbmlnaHQgd2hlbiBiYWJvb25zIGdvIGZyb20gZ3JvdW5kIGR3ZWxsaW5nIHRvIHRyZWUgZHdlbGxpbmcgKHRoZXkgc2xlZXAgaW4gdHJlZXMgdG8gYmV0dGVyIGF2b2lkIHByZWRhdG9ycykuIFdlIGRpZG4gcmVhbGl6ZSBpdCB1bnRpbCBhIGJpZyB0cm9vcCB3YXMgdXBvbiB1cywgYnV0IHdlIGhhZCBzZXQgbW9zdCBvZiBvdXIgdHJhcHMgaW4gYSBmaWVsZCB0aGF0IHdhcyBiZXR3ZWVuIHdoZXJlIHRoZSBiYWJvb25zIHdlcmUgc3BlbmRpbmcgdGhlaXIgZGF5LCBhbmQgd2hlcmUgdGhleSB3ZXJlIHJvb3N0aW5nIGZvciB0aGUgbmlnaHQuIApPbiB0aGUgc3ViamVjdCBvZiBwb29yIGxpdmVyaWVzLCBJIGp1c3QgY2Fubm90IHdhcm0gdG8gdGhvc2Ugb24gZWl0aGVyQWlyIENhbmFkYSBvciBBdmlhbmNhLiBUaGV5IGFyZSBib3RoIHZlcnkgYm9yaW5nIGxpdmVyaWVzIGJvcmluZyBhaXJsaW5lcyB0b28sIG9uIHRoZSB3aG9sZS4gWGlhbWVuIEFpcmxpbmVzIGFyZSBhbiBleG90aWMgYWlybGluZSB0aGF0IEkgaGF2ZSBuZXZlciBmbG93biB3aXRoLCBidXQgdGhleSBkbyBub3QgaW1wcmVzcyB3aXRoIHRoZWlyIG93biBsaXZlcnkgb24gdGhlIERyZWFtbGluZXIuIEkgYW0gbm90IHN1cmUgd2hhdCB0byB0aGluayBhYm91dCBPbWFuIEFpciB0aGVpciBsaXZlcnkgaXMgYSBsaXR0bGUgbWVzc3ksIGFzIGZhciBhcyBJIGNvbmNlcm5lZCwgYnV0IGl0IG1heSBncm93IG9uIG1lLgpUbW9pZ25hZ2UgZGUgZGVybmlyZSBtaW51dGUgOkplIHZpZW5zIGRlIGxpcmUgdm90cmUgYXJ0aWNsZSBhdSBzdWpldCBkZSBUaGllcnJ5IEMuLCBqZSBsaXJhaSBwZXV0IHRyZSBsYSBydWJyaXF1ZSBwbHVzIHRhcmQuIEplIGwnYWkgY29ubnUgZW4gZm9ybWF0aW9uIGRlIG5hdHVybywganVzdGVtZW50LiBJbCBlc3QgcmVzdCB1biBhbiwgY29tbWUgbW9pIGRhbnMgY2V0dGUgY29sZSBldCBzJ2luc3BpcmUgZWZmZWN0aXZlbWVudCBkZXMgZW5zZWlnbmVtZW50cyBkZSAibmF0dXJvcGF0aGllIG9ydGhvZG94ZSIgZGUgTWFyY2hlc3NlYXUgZXQgZGUgY2V1eCBkJ0FsYmVydCBNb3NzcmkgZW4gImh5Z2luaXNtZSIuIApCdXQgZm9yIGFsbCBpdHMgdmF1bnRlZCBub2JsZSBhaW1zLCB0aGUgbGF3IGhhcyBkcmF3biBoZWF2eSBjcml0aWNpc20uIFdpdGggcHJlc2lkZW50aWFsIGVsZWN0aW9ucyBzY2hlZHVsZWQgZm9yIEphbnVhcnksIFR5bW9zaGVua28ncyBvcHBvbmVudHMgYW5kIHRoZSBjb3VudHJ5J3MgY2FzaW5vIHdvcmtlcnMgYWNjdXNlIHRoZSBQcmltZSBNaW5pc3RlciBvZiB1c2luZyB0aGUgZ2FtYmxpbmcgYmFuIHRvIGVuaGFuY2UgaGVyIGhhcmQgZWFybmVkIHJlcHV0YXRpb24gYXMgYSBzdXBwb3J0ZXIgb2Ygd29ya2luZyBjbGFzcyB2b3RlcnMgYSBwb2xsIGJ5IHRoZSBLaWV2IGJhc2VkIEhvcnNoZW5pbiBJbnN0aXR1dGUgaW4gTWF5IHNob3dlZCB0aGF0IDgyJSBhcmUgaW4gZmF2b3Igb2YgdGhlIGxhdy4gIlNoZSBoYXMgc2NvcmVkIGEgZmV3IHBvbGl0aWNhbCBwb2ludHMgYXQgb3VyIGV4cGVuc2UsIiBzYXlzIHRoZSBSaXZlciBQYWxhY2UncyBTdHVwYWsuIFByZXNpZGVudCBWaWt0b3IgWXVzaGNoZW5rbyB2ZXRvZWQgdGhlIGxhdywgY2FsbGluZyBpdCAicG9wdWxpc3QsIiBvbmx5IHRvIGhhdmUgaGlzIGRlY2lzaW9uIG92ZXJ0dXJuZWQgYnkgcGFybGlhbWVudC4gQW5kIEludGVyaW9yIE1pbmlzdGVyIFl1cml5IEx1dHNlbmtvLCB3aG8gd2lsbCBiZSBpbiBjaGFyZ2Ugb2YgZW5mb3JjaW5nIHRoZSBiYW4sIGhhcyBleHByZXNzZWQgaGlzIG1pc2dpdmluZ3MgdGhhdCBhbGwgZXN0YWJsaXNobWVudHMgYXJlIGJlaW5nIHRhcnJlZCB3aXRoIHRoZSBzYW1lIGJydXNoLiAiSSB0aGluayBpdCdzIHdyb25nIHRvIGJhbiBjYXNpbm9zLCIgaGUgdG9sZCByZXBvcnRlcnMsIGFkZGluZyB0aGF0IGhlIGJsYW1lcyBzbG90IG1hY2hpbmUgaGFsbHMsIG5vdCBjYXNpbm9zLCBmb3IgdGhlIHJpc2UgaW4gZ2FtYmxpbmcgYWRkaWN0aW9uLiAoUmVhZCAiSG9seSBDcmFwcyEgSG93IGEgR2FtYmxpbmcgR3JhbmRtYSBCcm9rZSB0aGUgUmVjb3JkLiIpCkluIHRoZSBmYWN0b3J5IHRoZXkgYXJlIHB1c2hpbmcgYXMgaGFyZCBhcyB0aGV5IGNhbiwgYW5kIEkganVzdCBhcHBseSBwb3NpdGl2ZSBwcmVzc3VyZS4gClRoZXkgYXJlIGZlZCBhIGZlbWluaXN0IGNyaXRpcXVlIG9mIG1hcnJpYWdlIGFzIGEgcGF0cmlhcmNoYWwgaW5zdGl0dXRpb24gd2l0aCB0aGVpciBtYW1hcyBtaWxrIG9yIHRoZWlyIHBhcGFzIGZvcm11bGEuIEFuZCB3aGVuIHRoZXkgZmVlbCBsaWtlIHRoZWlyIGNvbW11bml0eSwgdGhlIG9uZSB0aGV5IGdyZXcgdXAgaW4gYW5kIGZlbHQgc3VwcG9ydGVkIGJ5LCBpcyBiZWluZyBoaSBqYWNrZWQgYnkgcGVvcGxlIHdobyBkb24gY2FyZSBhYm91dCB0aGVtLCB0aGV5IHNwZWFrIHVwLi4gClRoZSBuZXh0IHN0ZXAgdG8gcHJvdGVjdGluZyB5b3VyIEZhdXggQ2xheSBQb2tlciBDaGlwcyBidXNpbmVzcyBmcm9tIGlkZW50aXR5IHRoZWZ0IGlzIHRvIGVuc3VyZSB0aGF0IHlvdSBhcmUgdmVyeSBjYXJlZnVsIGFib3V0IHRoZSBpbmZvcm1hdGlvbiB0aGF0IHlvdSByZWxheSBvbiB0aGUgdGVsZXBob25lLiBSZW1lbWJlciwgYW55b25lIGNhbiBjYWxsIHlvdSBhbmQgcHJldGVuZCB0byBiZSBzb21lb25lIHRoYXQgdGhleSBhcmUgbm90LiBSZXF1aXJlIGluZGl2aWR1YWxzIHJlcXVlc3RpbmcgcGVyc29uYWwgaW5mb3JtYXRpb24gdG8gZ28gdGhyb3VnaCBhIGNlcnRhaW4gcHJvY2VkdXJlIGluIG9yZGVyIHRvIGVuc3VyZSB0aGF0IHRoZXkgdmFsaWRhdGUgdGhlaXIgaWRlbnRpdHkuIEl0IGlzIGFsc28gaW1wb3J0YW50IHRvIGVuc3VyZSB0aGF0IHlvdSBhcmUgY2FyZWZ1bCBhYm91dCB3aGF0IHlvdSBzZW5kIGJ5IGVtYWlsIGFuZCBkaXJlY3QgbWFpbC4gQ3JpbWluYWxzIGFyZSBzdGlsbCB1c2luZyB0aGVzZSB0ZWNobmlxdWVzIHRvIGdldCBwZXJzb25hbCBpbmZvcm1hdGlvbiBhYm91dCBpbmRpdmlkdWFscyBhbmQgYnVzaW5lc3Nlcy4KRHdhcnZlcyBnZXQgYSBib251cyB0byBzYXZpbmcgdGhyb3dzIGJhc2VkIG9uIHRoZWlyIGNvbnN0aXR1dGlvbiwgYW5kIGJlcnNlcmtlciByYWdlIHByb3RlY3RzIGZyb20gdGhlIGdhbWUgbW9zdCBkZWFkbHkgZWZmZWN0cy4gClRoZSBzdHJhdGVneSBvZiBhcHBlYWxpbmcgdG8gc3VidXJiYW4gd2hpdGVzIGJ5IG1vdmluZyB0byB0aGUgY2VudGVyIGZhaWxlZCBjYXRlZ29yaWNhbGx5IGluIDIwMTYuIFNlbiBNYW5jaGluIGlzIGEgZ29vZCBleGFtcGxlIG9mIHBpbm5pbmcgeW91ciBzdHJhdGVneSB0byByaWdodCBjZW50ZXIgY2FuZGlkYXRlcyAgIGJ5IHZpcnR1ZSBvZiBoYXZpbmcgaGltIGluIG9mZmljZSB5b3VyIGFiaWxpdHkgdG8gcHVzaCBhY3R1YWwgcmVhbCBwcm9ncmVzc2l2ZSBwb2xpY3kgYW5kIG5vdCBjb3Jwb3JhdGUgY2VudHJpc3QgcG9saWN5IGlzIG9ubHkgYXMgc3Ryb25nIGFzIHlvdXIgbGVhc3QgcHJvZ3Jlc3NpdmUgcmVwcmVzZW50YXRpdmUuCk51bWVyb3VzIHRpbWVzIGluIHRoZSBURjIgdW5pdmVyc2UgdGhlIEhlYXZ5IGRvZXMgc29tZSBjbGFzcyBBIHN0dXBpZCBzaGl0LiBIZSBhIG1vcm9uIG1vcmUgb2Z0ZW4gdGhhbiBoZSBpcyBpbnRlbGxpZ2VudCBpbiBoaXMgYWN0aW9ucy4gSGF0cyBhbHNvIGNhdXNlZCBhIG1ham9yaXR5IG9mIHRoZSBwbGF5ZXIgYmFzZSB0byB0dXJuIG9uIGVhY2ggb3RoZXIsIHRoZXkgcHVycG9zZWx5IGJ1aWx0IGl0IHVwIGFzIHRoaXMgYmlnIGVsdXNpdmUgdmVudHVyZSB0aGF0IHlvdSBjb3VsZG4gZXZlbiBlbGVjdCB0byBvcHQgaW50byBiZWNhdXNlIGl0IHdhcyBiYXNlZCBvbiBhIHZlcnkgdmVyeSBzbWFsbCByYW5kb20gcGVyY2VudCwgdGhpcyB3YXMgbWFkZSAxMDAlIHdvcnNlIHdoZW4gVmFsdmUgcHJvY2VlZGVkIHRvIHB1bmlzaCBwZW9wbGUgZm9yIGlkbGluZyBub3QganVzdCBieSB0YWtpbmcgdGhlaXIgaGF0cywgYnV0IGJ5IHRoZW4gcmV3YXJkaW5nIGV2ZXJ5b25lIGVsc2UgZm9yIHByZXR0eSBtdWNoIGRvaW5nIG5vdGhpbmcuIApEaWUgZWluc3QgYmVybWNodGlnZSBDb2FsaWNpbiBDYW5hcmlhIChDQykgc2NocnVtcGZ0ZSB2b24gMTAgYXVmIDcgU2l0emUgdW5kIHZlcmxvciBkYW1pdCBlcnN0bWFscyBzZWl0IEphaHJlbiBkZW4gZXJzdGVuIFBsYXR6IGluIGRlciBTdGFkdCwgZGVuIHNpY2ggZGllIFBhcnRpZG8gUG9wdWxhciAoUFApIG1pdCAxMCBTaXR6ZW4gZXJvYmVybiBrb25udGUuIERpZSBTb3ppYWxpc3RlbiBQU09FIHZlcmxvcmVuIDEvMyBpaHJlciBXaGxlciwgYmVrYW1lbiBzdGF0dCAzIG51ciBub2NoIDIgU2l0emUgdW5kIGRpZSBJVUMgc2NoYWZmdGUgZGVuIEVpbnp1ZyBpbnMgU3RhZHRwYXJsYW1lbnQgdW5kIGthbSBlYmVuZmFsbHMgYXVmIHp3ZWkgU2l0emUuIERhbWl0IHNpbmQgZGllIEthcnRlbiBpbiBkZXIgTG9rYWxwb2xpdGlrIHZvbiBMb3MgTGxhbm9zIG5ldSBnZW1pc2NodC4uIApEYXZpcyBvZiBXYXVrZXNoYSwgUmVwdWJsaWNhbiwsIGp1c3QgcmUgZWxlY3RlZCBmb3IgaGlzIGZvdXJ0aCB0ZXJtIGluIHRoZSBIb3VzZSBvZiBSZXByZXNlbnRhdGl2ZXMsIHdpbGwgYmUgc3BlYWtlciBUdWVzZGF5IGV2ZW5pbmcgYXQgdGhlIG9wZW5pbmcgbWVldGluZyBvZiB0aGUgSmFuZXN2aWxsZSBUd2lsaWdodCBjbHViIGZvciB0aGlzIHNlYXNvbi4gCkF0IHRoZSBlbmQgb2YgdGhlIHllYXIgdGFsbHkgYSBwZXJjZW50YWdlIG9mIHlvdXIgbWVhbCBleHBlbnNlcywgYXV0byBleHBlbnNlcywgdHJhdmVsIGV4cGVuc2VzLCBhbmQgYW55dGhpbmcgZWxzZSB5b3Ugd291bGQgY29uc2lkZXIgdGhhdCBtaWdodCBnbyB0b3dhcmRzIHlvdXIgcyBDb3JwIHN0YXJ0dXAuIE1heWJlIHlvdXIgbmV3IGNvbXBhbnkgaXMgcGxhbm5pbmcgdG8gbWFrZSB2aWRlbyBnYW1lcywgd3JpdGUgb2ZmIGFsbCB5b3VyIHZpZGVvIGdhbWUgYW5kIGNvbXB1dGVyIHB1cmNoYXNlcy4gTWF5YmUgeW91ciBwbGFubmluZyBvbiBvcGVuaW5nIGEgcmVzdGF1cmFudCwgc28gd3JpdGUgb2ZmIGFsbCB5b3VyIG1lYWxzIGFzIHJlc2VhcmNoLiBTbyBmb3IgbGVzcyB0aGFuICQxLjhrL3lyIHlvdSBzaG91bGQgYmUgYWJsZSB0byByZWR1Y2UgeW91ciB0YXhhYmxlIGluY29tZSBieSBhIHRoaXJkIG9yIG1vcmUuIEFzIGxvbmcgYXMgeW91ciBwZXJzb25hbCB0YXhlcyAiQ29ycCBsb2FuIiBsaW5lcyB1cCB3aXRoIHlvdXIgQ29ycCB0YXggZmlsaW5ncyB5b3Ugc2hvdWxkIGJlIGdvb2QgYXMgY29ycHMgaGFyZGx5IGV2ZXIgZ2V0IGF1ZGl0ZWQuIEF0IHNvbWUgcG9pbnQgeW91IGNhbiBjbG9zZSB0aGUgQ29ycCBiZWNhdXNlIGFsbCB0aGF0IHJlc2VhcmNoIGxlZCB5b3UgdG8gYmVsaWV2ZSB5b3VyIGJ1c2luZXNzIG1vZGVsIHdhc24ndCBnb2luZyB0byB3b3JrLCBhbmQgbm93IHlvdSBoYXZlIGEgbmV3IGFuZCBiZXR0ZXIgYnVzaW5lc3MgbW9kZWwuIFJpbnNlIGFuZCByZXBlYXQuCllvdSBjYW4gYWxzbyBzZWxsIHByb2R1Y3RzIHN1Y2ggYXMgZXNzZW50aWFsIG9pbHMsIENEcyBhbmQgYm9va3MgdG8geW91ciBjbGllbnRzLiBXcml0ZSBkb3duIGEgbGlzdCBvZiB0aGUgZGlmZmVyZW50IHNvdXJjZXMgb2YgaW5jb21lIHlvdSdyZSBpbnRlcmVzdGVkIGluIGFuZCBpbmNsdWRlIHRoZW0gaW4geW91ciBidXNpbmVzcyBwbGFuLgpJdCBzdWZmZXJpbmcsIGp1c3QgbGlrZSBhbnkgb3RoZXIgbGl2aW5nIGJlaW5nIG9uIHRoaXMgZWFydGggdGhhdCBoYWQgdG8gc2NhdmVuZ2UgZm9yIGZvb2QgZXZlcnkgZGF5IG9mIGl0cyBsaWZlIG9yIGRpZSBvZiBzdGFydmF0aW9uIGFuZCBtaXJhY3Vsb3VzbHkgZG9lc24gZ2l2ZSBhIHNpbmdsZSBlbXBhdGhldGljIHNoaXQgYWJvdXQgYW55IG90aGVyIGxpdmluZyB0aGluZyBpdCBoYXJtcyBiZWNhdXNlIGl0IG9wZXJhdGluZyBvbiBiYXNpYyBpbnN0aW5jdHVhbCBsZXZlbCA6KC4gCkRvaW5nIFNpcmUgd2l0aCA5MyBhdGssIDk4IHN0ciwgODUgZGVmLCA5NiBocCwgOTcgcm5nLCA4NSBwcmF5LiBJIGhhdmUgYW4gb3JuYXRlIHBvb2wgYW5kIEkgdHJ5aW5nIHRvIGRvIHRoZSBubyBmb29kIG1ldGhvZCwganVzdCByZWx5aW5nIG9uIGJsb29kIGJhcnJhZ2Ugd2hlbiBJIGdldCBsb3cuIEJ1dCBJIHNlZW0gdG8ga2VlcCBkeWluZy4gSSBiYXJlbHkgaGl0IHdpdGggYmxvb2QgYmFycmFnZSBhbmQgaXQgc2VlbXMgbGlrZSBzaXJlIGp1c3Qgb3V0IGRhbWFnZXMgbWUuIEkgbm90IGdldHRpbmcgaGl0IGJ5IHBvaXNvbiBvciBhbnl0aGluZywgaXQgc2VlbXMgbGlrZSBtb3N0IG9mIHRoZSBkYW1hZ2UgaXMgZnJvbSB0aGUgbWluaW9ucyBhbmQgdGhlIHRlbnRhY2xlcy4gSXMgdGhlcmUgYW55IHRpcHMgZm9yIGRvaW5nIHNpcmU/IG9yIHNob3VsZCBJIGp1c3QgZ2V0IG15IGRlZiBsZXZlbCB1cCBhdCBOTVo/CkluIHRoZSBzZWNvbmQsIFZhdWdoYW4gUmFwYXRhaGFuYSByZXZpZXdzIFNsZWVwcyBTdGFuZGluZy9Nb2V0LCBieSBXaXRpIEloaW1hZXJhIHdpdGggSG1pIEtlbGx5LCBhIG5vdmVsIGFib3V0IHRoZSBiYXR0bGUgYXQgcmthdSwgYW5kLCBmaW5hbGx5LCBoZSBhbHNvIHJldmlld3MgVmluY2VudCBPIEdyZWF0IFdhciBmb3IgTmV3IFplYWxhbmQuIE9uZSBvZiB0aGUgcGFuZWxpc3RzLCBUb20gUm9hIChOZ3RpIEFwYWt1cmEpIHNwb2tlIHdpdGggQWxpc29uIE1jQ3VsbG9jaCBpbiB0ZSBSZW8gTW9yaSBhbmQgRW5nbGlzaCBhZnRlciB0aGUgZXZlbnQgYWJvdXQgTydNYWxsZXkncyBib29rOi4gClNhbiBKb3NlIE1vdmllcwpUaGlzIG1lYW50IHRoYXQgSSwgYW4gVXJkdSBzcGVha2luZyBNb2hhamlyIHdobyBoYXMgbm90IGxpdmVkIGluIEthcmFjaGkgc2luY2UgdGhlIGVhcmx5IDE5ODBzLCB3YXMgYXNzaWduZWQgdGhlIHJlc3BvbnNpYmlsaXR5IHRvIGRyaXZlIHRoZSBmZXN0aXZlIGdyb3VwIGhvbWUuIApOb3QgZGlzYWdyZWVpbmcgYnV0IHRoZXJlIGFsc28gdGhlIGlzc3VlIHRoYXQgdGhlIGRydWdzIHdlIHNlZWluZyBhcmUgY29taW5nIGZyb20gdW5kZXIgdHJhY2VhYmxlIHNvdXJjZXMuIFRoZSBERUEgaG9uZXN0bHkgcHJvYmFibHkgaXNuIHdvcnJpZWQgYWJvdXQgTUogYW55bW9yZSBhbmQgaGF2ZSBhbiBob25lc3QgY29uY2VybiBhYm91dCBmZW50eW5hbCBjb21pbmcgaW4uIFRoYXQgc2hpdCBpcyBnZXR0aW5nIGxlZ2l0aW1hdGVseSBzZXJpb3VzLiAKTm8gbWF0dGVyIGhvdyBtdWNoIGlzIGNvbnRyaWJ1dGVkIHRvIHRoZSBwb3QsIHVzdWFsbHkgOTUlIHdhbGsgYXdheSB3aXRoIG5vdGhpbmcsIGFuZCBpdCB0aGUgOTUlIHRoYXQgZ3Jvd3MgdGhlIHNjZW5lLiAKT24gdGhlIG90aGVyIGhhbmQgdGhlIEZyYW1lcnMgcHJvdmlkZWQgc2VjdXJpdHkgZm9yIHRoZSBwcmFjdGljZSBvZiByZWxpZ2lvbiwgYW55IHJlbGlnaW9uLCBieSBhbnkgcGVyc29uLCBpbiBhIHZlcnkgZWxlZ2FudCBhbmQgc3VjY2luY3Qgc3RhdGVtZW50OiJDb25ncmVzcyBzaGFsbCBtYWtlIG5vIGxhdyByZXNwZWN0aW5nIGFuIGVzdGFibGlzaG1lbnQgb2YgcmVsaWdpb24sIG9yIHByb2hpYml0aW5nIHRoZSBmcmVlIGV4ZXJjaXNlIHRoZXJlb2YiIGluIHRoZSBGaXJzdCBBbWVuZG1lbnQsIEJpbGwgb2YgUmlnaHRzLiAKQW5kIGdpdmluZyBoaW0gYW4gIm91dCIganVzdCB0ZWFjaGVzIGhpbSB0aGF0IHdoYXQgaGUgZGlkIHdhcyB0b3RhbGx5IG9rYXkuLiAKVGhlcmUgcGxlbnR5IG9mIGFkdmljZSBoZXJlIG9uIGdvaW5nIE5DIGFuZCBJIHN1cmUgeW91IGNhbiBhbHdheXMgZmluZCBzdXBwb3J0IGluIHRoZSBmdXR1cmUgaGVyZSBpZiB5b3UgbmVlZCBpdC4gSSByZWFsbHkgZ2xhZCB0aGF0IHlvdSByZWFjaGVkIG91dCB0byB5b3VyIHRoZXJhcGlzdC4KRm5hdGljIGlzIGV4dHJlbWVseSBnb29kIG9uIEluZmVybm8uIFRoZWlyIGxhc3QgMyBnYW1lcyBoZXJlIHdlcmUgMTYgMTQgYWdhaW5zdCBMRywgMTYgMiBhZ2FpbnN0IEcyIChvbGQgRzIpIGFuZCAxNiA3IGFnYWluc3QgVFFNLiBUaGV5IGhhdmUgcGxheWVkIGhlcmUgcXVpdGUgYSBmZXcgdGltZXMgc28gZmFyIHRoaXMgeWVhciBhbmQgYWxsIG9mIHRoZWlyIHJlc3VsdHMgaGF2ZSBiZWVuIHByZXR0eSBnb29kLiBUaGUgb25seSB0aGluZyB0aGF0IHdvdWxkIHdvcnJ5IG1lIGlzIHRoZWlyIDE0IDE2IGxvc3MgYWdhaW5zdCBleCBUaXRhbiAodGhlIHRlYW0gdGhleSB1cCBhZ2FpbnN0IGhlcmUpLCBidXQgaXQgbWF5IGhhdmUganVzdCBiZWVuIGFuIGFub21hbHkuIEZuYXRpYyB1c3VhbGx5IGRvbiBsb3NlIHRvIGFueW9uZSBvbiBJbmZlcm5vLCBsZXQgYWxvbmUgYSB0ZWFtIHRoYXQgaXNuIGluIHRoZSB0b3AgNS4gSSB0aGluayB0aGF0IGV2ZW4gd2l0aCB0aGlzIHBhc3QgbG9zcyB0aGV5IHNob3VsZCBkZWZpbml0ZWx5IGJlIGZhdm9yZWQgYnkgYSBwcmV0dHkgbGFyZ2UgbWFyZ2luLgpJIHBsYXllZCB0aGF0IGhhbmQgaG9ycmlibHkuIEx1Y2tpbHksIGhlIHBsYXllZCBoaXMgd29yc2UuIEkgYW0gMTAwJSBub3QgImFzIGFoZWFkIGFzIEkgdGhpbmsiLiBBIGRpZmZlcmVudCB0dXJuLCBJIGRvbiBwb3QgZm9yIDU2MCB0aGVyZS4gQSAxMCwgYSBRLCBhbiBBLiBBIGJldHRlciBkcmF3IChhIGJldHRlciBzcGFkZSBmb3IgaW5zdGFuY2UpIEkgY2hlY2sgYWxsIGRheSBsb25nIGFuZCBjYWxsIGEgc21hbGxlciBiZXQgZnJvbSB0aGUgZ3V5LiBJIGRpZG4gbWFrZSB0aGUgcGxheSB3aXRoIHRoaXMgaWRlYSB0aGF0IEkgd2FzIHN1cGVyIGZhciBhaGVhZDsgdGhlIHBsYXkgd2FzIGludGVuZGVkIHRvIGtpbGwgYW55IGFjdGlvbiBmcm9tIGEgZHJhdyBvciA3ODlKLzkxMEtRIHR5cGUgaGFuZC4gSXQgd2FzIGEgc21hbGwgcmFpc2Ugb24gdGhlIGZsb3AgdG8gc2F5IEEpIEhleSwgSSBoaXQgc29tZSBvZiB0aGlzIGFuZCBCKSBTZWUgd2hlcmUgaGUgaXMuIEhlIHJlcG90cyBpdCwgbWVoLiBIYW5kIHRvc3NlZC4gSGUgZm9sZHMgaXQsIGF3ZXNvbWUgdG9vayBpdCBkb3duIHdpdGggYSBtaW5pbWFsIHZhbHVlIGJldC4gVGhlIHBvdCBvbiB0aGUgdHVybiBjYW1lIGFmdGVyIG5vIHJlcG90IGFuZCB0aGUgd2F5IGl0IHBsYXllZCBvdXQuClNheSB0aGUgcGVyc29uIHdobyBtYWtlcyB0aGUgZmlyc3QgY2FsbCBjaG9vc2VzIGhlYWRzLCBoZWFkcywgYW5kIHRhaWxzLiBUaGUgdHJpY2sgZm9yIHRoZSBzZWNvbmQgcGxheWVyIGlzIHRvIHJlbWVtYmVyIHR3byBzdGVwczoKJCAyMC4wMDAgZnIgZGVuIGVyc3RlbiBQbGF0ei4iUGFydHkgIEFscyBlaW5lIGRlciBlcmZhaHJlbnN0ZW4gIENvbXBhbmllcyBtaXQgZGVuIG1laXN0ZW4gIG4gdW5kIGRlbiBoY2hzdGVuIFVtc3R6ZW4gaXN0IFBhcnR5ICBzZWl0IDE5OTcgYXVzIGRlbSBLcmVpcyBkZXIgZmhyZW5kZW4gIFJvb21zIG5pY2h0IG1laHIgd2VnenVkZW5rZW4uIApOZXVyYWwgcGF0aHdheXMgYXJlIGxpa2UgbXVzY2xlcywgc28gaXQgaXMgZ29vZCB0byB3b3JrIHRoZW0gb25jZSBpbiBhIHdoaWxlIHRvIGtlZXAgdGhlbSBzaGFycCEgQnkgYWxpZ25pbmcgdGhlIGZ1bmN0aW9uaW5nIG9mIHZhcmlvdXMgb3JnYW4gYW5kIG11c2NsZSBzeXN0ZW1zLCByZWZsZXhvbG9neSBjYW4gaW5jcmVhc2UgbWV0YWJvbGlzbSBhbmQgZW5lcmd5IGNyZWF0aW9uIHByb2Nlc3NlcyB3aXRoaW4gdGhlIGJvZHkuIApBbmQgUnVzc2lhbiBoYXMgbW9yZSBiYXNpYyBjb2xvciB0ZXJtcyB0aGFuIEVuZ2xpc2guIApGb3IgYSBzaG9ydCB0aW1lIGluIHRoZSBlYXJseSAxOTUwcyB0aGV5IGFsc28gcGxheWVkIGEgcmVzZXJ2ZXMgdGVhbSBpbiB0aGUgSHVtZSBGb290YmFsbCBMZWFndWUuIApUaGF0J3MgaW4gY29udHJhc3QgdG8gQW1hem9uIFByaW1lIHZpZGVvcywgd2hpY2ggY29tZSB2aWEgc3Vic2NyaXB0aW9uIGFuZCBhcmUgbW9zdGx5IGFkIGZyZWUuIFRoZSBuZXcgc3RyZWFtaW5nIHNlcnZpY2UgaXMgY2FsbGVkIElNRGIgRnJlZWRpdmUsIGFuZCBpdCdzIHBhcnQgb2YgQW1hem9uJ3MgbW92ZSB0byBwdWxsIGluIG1vcmUgYWQgcmV2ZW51ZS4gClRoZW4gZHVyaW5nIHRoZSB0cmlhbCwgdGhleSBjb3VsZG4gZXZlbiBzdGljayB3aXRoIHRoYXQgc2FtZSBlbGFib3JhdGUgc3RvcnkuIApEaWFiZXRlcyBpcyByYXJlIGFtb25nIGNhdHMsIGVzcGVjaWFsbHkgeW91bmdlciBjYXRzLiAKQmVmb3JlIEkgYmVnaW4sIEkgd2FudCB0byBzYXkgdGhpcy4gV29ybGQ6IFdha2UgVXAhCkhvdyBvbmUgb2YgQnJpdGFpbnMgZ3JlYXRlc3QgbW92aWVzIHdhcyBzaG90IGluIExhbmNhc2hpcmUKT3ZlcnZpZXcgZm9yIFNlYXJvY2tzYW5kdHJlZXMKIk15IGNoYWxsZW5nZSBpcywgSSBkb24gc2VlIGFueSBvZiB0aGUgY2xhc3NpYyBpbmRpY2F0b3JzLCBzbyBmYXIsIHRoYXQgd291bGQgc3VnZ2VzdCwgaGUgb24gdGhlIHJvYWQgZWl0aGVyIHRvIHN1aWNpZGUgb3IgaG9taWNpZGUgb3IgYm90aCwiIFZhbiBaYW5kdCBzYWlkLgpMb25nIHRlcm0gQ2FyZSBEcnVnIERhdGFiYXNlIFN5c3RlbTogRHJ1Z3MgYnkgTkRDIENsYXNzIENvZGUsIERydWcgQ29kZSBhbmQgTmFtZSBNYWpvciBEcnVnIFRoZXJhcGV1dGljIFRoZXJhcGV1dGljIFN1YmNsYXNzIENvZGUgTmFtZSBDb2RlIENsYXNzIENvZGUgMDEwMApTeW1ib2xpc20gb2YgYW4gQWNlIG9mIFNwYWRlcyBUYXRvbyAuCkhvdyBtYW55IGFjZXMgb2Ygc3BhZGVzIGluIGEgcGFjayBvZiBjYXJkcwpTaGUgaW5jb3Jwb3JhdGVzIG11bHRpcGxlIGRpc2NpcGxpbmVzIGludG8gaGVyIHByYWN0aWNlIHRvIGN1c3RvbWl6ZSBzZXNzaW9ucyBmb3IgZWFjaCBjbGllbnQgYW5kIHRoZWlyIHNwZWNpZmljIGluZGl2aWR1YWwgbmVlZHMuIFNoZSBncmFkdWF0ZWQgZnJvbSBTcGEgVGVjaCBpbiBPY3RvYmVyIG9mIDIwMDkgYW5kIGlzIHRyYWluZWQgaW4gU3dlZGlzaCwgUHJlIG5hdGFsIGFuZCBob3Qgc3RvbmUgbWFzc2FnZS4gU2hlIHV0aWxpemVzIHJlZmxleG9sb2d5LCBjdXBwaW5nIGFuZCBndWEgc2hhIGluIGhlciBzZXNzaW9ucyBpZiBuZWVkZWQuIApGb3IgZXhhbXBsZSwgSSBvbmNlIHRob3VnaHQgdGhhdCBvbmUgb2YgbXkgY2F0cyB3YXMgc3BlYWtpbmcgaW4gZGVtb25pYyB0b25ndWVzLiBMb2dpY2FsbHksIEkgaGFkIG5vIHJlYXNvbiB0byBiZWxpZXZlIHRoYXQgb3RoZXIgdGhhbiBoZSBtZW93cyBhIGxvdC4gSSdtIG5vdCByZWxpZ2lvdXMuIEkgZG9uJ3QgYmVsaWV2ZSBpbiBkZW1vbnMsIGJ1dCBnb2RkYW1taXQgdGhlIGNhdCB3YXMgc3BlYWtpbmcgaW4gZGVtb25pYyB0b25ndWVzIGFuZCBubyBvbmUgY291bGQgY29udmluY2UgbWUgb3RoZXJ3aXNlLgpTbyBtdWNoIG1vcmUgdGhvdWdoLiBMaXZpbmcgTXkgTGlmZSBpcyBhIGdyZWF0IHBsYWNlIHRvIHN0YXJ0LiBTaGUgbGl2ZWQgYW5kIGRvY3VtZW50ZWQgaGVyIGxpZmUgYXMgb25lIG9mIHRoZSBtb3N0IGhpZ2ggcHJvZmlsZSBhbmFyY2hpc3RzIGR1cmluZyB0aGUgaW5kdXN0cmlhbCByZXZvbHV0aW9uLCBydXNzaWFuIHJldm9sdXRpb24gYW5kIHNwYW5pc2ggY2l2aWwgd2FyLiAKQ2FyZHMgYXJlIG1hcmtlZCBpbiBtYW55IHdheXMsIGJ1dCB0aGUgaW50ZW50IGlzIHRoZSBzYW1lICAgdG8gYWxsb3cgYSBwbGF5ZXIgdG8gaWRlbnRpZnkgYSBjYXJkIHdpdGhvdXQgc2VlaW5nIGl0cyBmYWNlLiBTb21ldGltZXMgYSBmaW5nZXJuYWlsIG9yIHNtYWxsIG1ldGFsIHBpZWNlIGlzIHVzZWQgdG8gbWFrZSBhbiBpbmRlbnRhdGlvbiBvbiB0aGUgY29ybmVyIG9mIGEgY2FyZCBkdXJpbmcgYSBnYW1lLiBBIHNtYWxsIHBpZWNlIG9mIGNoYXJjb2FsIG9yIHBlbmNpbCBsZWFkIGNhbiBhbHNvIGJlIHVzZWQgdG8gcHV0IGEgdGlueSBzbXVkZ2Ugb24gYSBjYXJkIGJhY2suIFNvbWV0aW1lcywgdGhlIGNhcmRzIGFyZSBtYXJrZWQgZWxhYm9yYXRlbHkgYmVmb3JlIHRoZSBnYW1lLCB3aXRoIHN1YnRsZSBhbHRlcmF0aW9ucyBvZiB0aGUgcGF0dGVybiBvbiB0aGUgY2FyZCBiYWNrLiBUaGV5IG1pZ2h0IGJlIHRyaW1tZWQgYW5kIHNoYXZlZCBhbG9uZyB0aGUgc2lkZXMsIHNvIHRoYXQgb25lIGNhcmQsIG9yIG9uZSByYW5rIG9mIGNhcmQgKHRoZSBBY2VzLCBmb3IgZXhhbXBsZSksIGNhbiBiZSBmb3VuZCBieSB0aGUgZGVhbGVyIGJ5IHNpbXBseSBmZWVsaW5nIGFsb25nIHRoZSBlZGdlIG9mIHRoZSBkZWNrLgpEbyB5b3Ugd2FudCBtb3JlIG9mIGEgbWVudGlvbiBpbiBoZXIgc29jaWFsIG1lZGlhIHByZXNlbmNlPyBJZiBzbywgd2hhdCB3b3VsZCBoYXBwZW4gaWYgeW91IHN0cmFpZ2h0IHVwIHRhbGtlZCB0byBoZXIgYWJvdXQgaXQ/IE9ubHkgdGhlbiB3aWxsIHlvdSBiZSBhYmxlIHRvIGZpbmQgb3V0IHdoYXQgZ29pbmcgb24uIAoiVGhlc2UgYXJlIHRoZSBib29rcyB0aGF0IHdlIGxvdmVkLCB0aGF0IHByb3Zva2VkLCB0aGF0IGV4Y2l0ZWQgdXMsIGFuZCB0aGF0IHdlIGFyZSBzdGlsbCB0aGlua2luZyBhYm91dC4iIFJlYWQgbW9yZSBbZW50cnlib2R5XSAgPk1lZGlhIEJvb2tzIEZlc3RpdmFsICBRdWVlbiBCaXJ0aGRheSAgVGF1cmFuZ2FFc2NhcGUgdG8gVGF1cmFuZ2EgZm9yIFF1ZWVuJ3MgQmlydGhkYXkgd2Vla2VuZCBhbmQgYW4gaWRlYXMgYW5kIGJvb2tzIGZvY3VzZWQgZmVzdGl2YWwgdGhhdCBpbmNsdWRlcyBwZXJmb3JtYW5jZSwgZGlzY3Vzc2lvbiwgc3RvcnkgdGVsbGluZywgd29ya3Nob3BzIGFuZCBhbiBJdGFsaWFuIHRoZW1lIG1vcm5pbmcgdGVhLiJXZSd2ZSB0cmllZCB0byBvZmZlciBhIHByb2dyYW1tZSB0aGF0IGlzIGEgZm9ybSBvZiBlc2NhcGlzbSwiIHNheXMgZmVzdGl2YWwgZGlyZWN0b3IgQ2xhaXJlIE1hYmV5LiAiU3BlYWtlcnMgY2FuIHRha2UgdGhlaXIgYXVkaWVuY2VzIHRvIG90aGVyIHRpbWVzIGFuZCBwbGFjZXMsIGludG8gZGlmZmVyZW50IHJlYWxtcyBvciBjb25zaWRlciBhIHN1YmplY3QgaW4gZGVwdGguQ2Fyb2xlIEJldSBhbmQgR3JhaGFtIEJlYXR0aWUgaW4gYSBwcm9tbyB2aWRlbyBmb3IgdGhlaXIgdXBjb21pbmcgc2hvdy5DYXJvbGUgQmV1IG9mIFRoZSBXb21lbidzIEJvb2tzaG9wIGluIEF1Y2tsYW5kLCBHcmFoYW0gQmVhdHRpZSBvZiBUaGUgQm9vayBCbG9nIGFuZCBwcm9kdWNlciBEZWIgRmFpdGggb2YgRmFjZVRWIGhhdmUgcmFpc2VkIGVub3VnaG1vbmV5IHZpYWNyb3dkIGZ1bmRpbmdhdCBCb29zdGVkICAganVzdCB1bmRlciAkNywwMDAgc28gZmFyICAgZm9yIDEyIGVwaXNvZGVzLCB3aGljaCBiZWdpbiBwcm9kdWN0aW9uIGluIFNlcHRlbWJlciwgYW5kIHdpbGwgYmUgb24gc2NyZWVuIGxhdGVyIHRoYXQgbW9udGguIApIb3cgYSBwb2tlciBnYW1lIGhlbHBlZCBzaGFwZSBQYXQgTWNBZmVlcyBmb290YmFsbCBjYXJlZXIKRmluYWxseSBnb3Qgc2VhcnMgdG8gcGF5IGZvciBhIHJlcGxhY2VtZW50IFNhbXN1bmcgZnJpZGdlIGFsbW9zdCA3IG1vbnRocyBsYXRlci4uIApBdCBubyBwb2ludCBkaWQgR2VyYWNpb3RpLCBvbmUgb2YgYSBoYW5kZnVsIG9mIEFzaGlhdHN1IHRoZXJhcGlzdHMgaW4gTm9ydGhlYXN0IE9oaW8sIHN0YW5kIG9uIG1lIGZ1bGwgd2VpZ2h0LiBVbmxpa2Ugc2hpYXRzdSwgaXRzIGFuY2llbnQsIHNpbWlsYXIgZm9yZWJlYXIsIEFzaGlhdHN1IGlzIGdlbmVyYWxseSBhIGdlbnRsZSwgcmVsYXhpbmcgcHJvY2VkdXJlLCBjbG9zZXIgaW4gZmVlbCB0byB0cmFkaXRpb25hbCBXZXN0ZXJuIG9yIFN3ZWRpc2ggbWFzc2FnZSB0aGFuIHRvIHRoZSBKYXBhbmVzZSBmb3JtLCB3aGljaCBnb2VzIGRlZXBlci4gR2VyYWNpb3RpIHNhaWQgc2hlIHRvb2sgdXAgdGhlIHByYWN0aWNlIHNvIGFzIHRha2UgYWR2YW50YWdlIG9mIGdyYXZpdHkgYW5kIHNwYXJlIGhlciBoYW5kcyBhbmQgd3Jpc3RzLi4gCldlIHNldCB1cCBvdXIgbWFzc2FnZSBjaGFpcnMgbmVhciBvciBhcm91bmQgdGhlIHRyYWRlIHNob3cgZmxvb3IuIFdlIG9ubHkgcmVxdWlyZSBhcHByb3hpbWF0ZWx5IDMnIHggMycgcGVyIHRoZXJhcGlzdCBzbyB3ZSBkbyBub3QgdGllIHVwIHlvdXIgdmFsdWFibGUgdHJhZGUgZmxvb3Igc3BhY2UuClRoZSBlY2NlbnRyaWMgZmFzaGlvbiBleGVjdXRpdmUgICB3aG8gY292ZXJzIGhpcyBmYWNlIHdpdGggdmFyaW91cyBvYmplY3RzIGluY2x1ZGluZyBoYXRzLCBzaG9lcyBhbmQgc3RhdHVldHRlcyB3aGVuIHBob3RvZ3JhcGhlZCAgIHdhcyBhY2N1c2VkIGJ5IGh1bmRyZWRzIG9mIGZvcm1lciBhbmQgY3VycmVudCBlbXBsb3llZXMgb2YgZ2l2aW5nIHVud2FudGVkIGh1Z3MgYW5kIGtpc3NlcywgY2FyZXNzaW5nIHRoZWlyIGVhcnMgYW5kIGV2ZW4gdGVsbGluZyB0aGVtIHRvIHNpdCBvbiBoaXMga25lZXMuCkNlcnZpY29nZW5pYyBIZWFkYWNoZSBNb2RlbCBHaXZlcyBDcmVkZW5jZSB0byBDaGlyb3ByYWN0aWMKVGhlIFdlc3Rlcm4gTWFyeWxhbmQgRGVsZWdhdGlvbiwgYWxvbmcgd2l0aCBEZWwuIEJlbmphbWluIEYuIEtyYW1lciAoRCBEaXN0LiAxOSkgb2YgRGVyd29vZCwgaXMgcHJvcG9zaW5nIGxlZ2lzbGF0aW9uIHRoYXQgd291bGQgcmVkdWNlIHRoZSB0YXggcmF0ZSB0byA1MCBwZXJjZW50LCBkb3duIGZyb20gdGhlIDY3IHBlcmNlbnQgcmF0ZSBvd25lcnMgb2YgdGhlIGZvdXIgb3RoZXIgc2xvdHMgcGFybG9ycyBoYXZlIHRvIHBheSB0aGUgc3RhdGUuCkkgc29ycnkgaXQgYnVtbWVkIHlvdSBvdXQgc28gbXVjaCBidXQgaXQgc2VlbXMgbGlrZSB5b3UgbGVhcm5lZCBhIGxvdCB0byBicmluZyB5b3UgY2xvc2VyIG5leHQgdGltZS4gQWRkaXRpb25hbGx5LCBpdCBzb3VuZHMgbGlrZSB5b3UgdHJhaW5lZCByZWFsbHkgd2VsbC4gSSByZW1lbWJlciBmZWVsaW5nIHVuZGVyd2hlbG1lZCBhZnRlciBJIGZpbmlzaGVkIG15IGZpcnN0IG1hcmF0aG9uLiB0aGF0IHdhcyBpdD8gVGhlIHBhcnQgdGhhdCBJIG1vc3QgcHJvdWQgb2YgaXMgdGhlIG1vbnRocyBvZiB0cmFpbmluZyAgIGxvbmcgcnVucywgZWFybHkgbW9ybmluZ3MsIHN0aWNraW5nIGl0IG91dCB0aHJvdWdoIGdyb3NzIHdlYXRoZXIgICB0aGF0IHRoZSBzdHVmZiB5b3Ugc2hvdWxkIGJlIHByb3VkIGFib3V0LCBhbnkgbnVtYmVyIG9mIGR1bWIgdGhpbmdzIGNhbiBoYXBwZW4gb24gcmFjZSBkYXkgdG8gbWVzcyB3aXRoIHlvdXIgcGxhbnMuIFNvbWUgdGltZXMgdGhlIHN0YXJzIGp1c3QgZG9uIGFsaWduIGZvciBhIGdvb2QgcnVuLCBidXQgb25lIGJhZCBkYXkgZG9lc24gdGFrZSBhd2F5IGZyb20gdGhlIG1vbnRocyBvZiB3b3JrIHlvdSBwdXQgaW4gbGVhZGluZyB1cCB0byBpdC4KSWYgeW91IHdlcmUgaGl0IGFuZCB0aGUgZnJpc2JlZSBoaXQgdGhlIGdyb3VuZCB5b3Ugd2VyZSBvdXQuIElmIHlvdSBjYXRjaCB0aGUgZnJpc2JlZSB0aGUgb3RoZXIgZ3V5IGlzIG91dC4gSWYgeW91IHdlcmUgdG91Y2hlZCB3aXRoIGEgZnJpc2JlZSBieSBzb21lb25lIGhvbGRpbmcgb25lIG9uIHRoZSBvdGhlciB0ZWFtIHlvdSB3ZXJlIG91dC4KQSByZWdpb24gYnkgcmVnaW9uIGFuYWx5c2lzIG9mIHRoZSBPZmZpY2Ugb2YgTGlxdW9yIEdhbWluZyBhbmQgUmFjaW5nIGZpZ3VyZXMgcmV2ZWFscyBOZXdjYXN0bGUgcG9raWVzIHdlcmUgdGhlIEh1bnRlcidzIG1vc3QgcHJvZml0YWJsZSB3aXRoIHRoZSBjb3VuY2lsIGFyZWEncyAzMjA2IG1hY2hpbmVzIHRha2luZyBhbiBhdmVyYWdlIG9mICQ0NCw5NjMgZWFjaCAgIG9yICQxNDQsMTUzLDc2MiBhIHllYXIuIApGaW5hbGx5LCBJIGFsc28gYWdyZWUgdGhhdCB0aGUgcm9ib3RpYyBuYXR1cmUgb2YgaGlzIHBvcnRyYXlhbCBtYWRlIGhpbSBtdWNoIGxlc3Mgc2NhcnkgdG8gbWUuIEEgbGFyZ2UgcGFydCBvZiB3aGF0IG1hZGUgdGhlIGZpcnN0IGZpbG0gZnJpZ2h0ZW5pbmcsIGluIG15IG9waW5pb24sIHdhcyB0aGF0IE1pY2hhZWwgd2FzIGp1c3QgYSBjcmF6eSBndXkgd2l0aCBhIGtuaWZlLiAKVGhlIHNjb3JpbmcgaXMgbm90IGNvbnNlY3V0aXZlLCBtZWFuaW5nIHRoYXQgaXQgZG9lc24ndCBnbyAxIGxvdmUsIDIgbG92ZSBldGMuIEluc3RlYWQsIHRoZSBwb2ludCBzeXN0ZW0gaXMgZGlmZmVyZW50LCBnb2luZyAnMTUgbG92ZSwgMzAgbG92ZSwgNDAgbG92ZSwgZ2FtZScgb3IgJ2xvdmUgMTUsIGxvdmUgMzAsIGxvdmUgNDAsIGdhbWUnLiBUaGUgZmlyc3Qgc2NvcmUgaXMgdGhlIHBsYXllciB3aG8gc2VydmVkLCBhbmQgdGhlIHNlY29uZCBpcyB0aGUgb3Bwb25lbnQgd2hvIGlzIHJlY2VpdmluZyB0aGUgc2VydmUuIFplcm8gcG9pbnRzIGlzIHJlZmVycmVkIHRvIGFzIGxvdmUzLiBXaGVuIHRoZSBzY29yZSBpcyBlcXVhbCwgdGhlIHVtcGlyZSBjYWxscyBvdXQgJzE1IGFsbCcsIHVubGVzcyB0aGUgcGxheWVycyBib3RoIGhhdmUgNDAsIHdoZXJlIGl0IGlzIGNhbGxlZCBkZXVjZS4gSW4gdGhpcyBjYXNlLCB0aGUgbmV4dCBwZXJzb24gdG8gd2luIHRoZSBwb2ludCBoYXMgYW4gYWR2YW50YWdlLCBhbmQgdGhpcyBpcyByZWFkIG91dCBhcyAnQWR2YW50YWdlIChpbnNlcnQgcGVyc29uJ3MgbmFtZSBoZXJlKScuClRoZSBkcmVhbSB3b3VsZCBiZSB0byBkZXZlbG9wIGEgbG9jYWwgdGFsZW50IG5ldHdvcmssIHdoZXJlIHdlIGNhbiByZWFjaCBvdXQgYW5kIGZpbmQgcGVvcGxlIHRvIGNvbGxhYm9yYXRlIHdpdGggb3IgdGVhbSB1cCB3aXRoIHRvIGZ1cnRoZXIgb3VyIGNyZWF0aXZlIGVuZGVhdm91cnMuIFBsZWFzZSBhdm9pZCB0aGluZ3MgbGlrZSBwb2xhcml6aW5nIHBvbGl0aWNhbCB2aWV3cyBpZiB0aGV5IGFyZSBzaW1wbHkgdG8gYXJndWUgb24gdGhlIGludGVybmV0LiAKTWVhbndoaWxlLCB0aGUgZGV0ZWN0aXZlIHdhcyBzZW5kaW5nIGEgbWVzc2FnZSB0byB2aWNlIHNxdWFkIG1lbWJlcnMgd2FpdGluZyBvdXRzaWRlIHRvIGRldGFpbiB0aGUgdGVlbnMsIHJlY29yZHMgc3RhdGVkLgpUaGUgYWdyZWVtZW50IG9yIHdpdGhvdXQgdGhlIGFncmVlbWVudCwgdGhpcyBpcyBzb21ldGhpbmcgY2VudHJhbCB0byBQcmVzaWRlbnQgTG9wZXogT2JyYWRvciBzdHJlbmd0aGVuaW5nIHdvcmtlcnMgcmlnaHRzIGFuZCBzdHJlbmd0aGVuaW5nIHRyYWRlIGRlYWxzIGluIE1leGljbywgc2FpZCBkZSBsYSBNb3JhLiBtZWFucyB0aGUgbmV3IGFncmVlbWVudCB3aWxsIGJlIHNlbnQgdG8gdGhlIE1leGljYW4gQ29uZ3Jlc3MgZm9yIHJhdGlmaWNhdGlvbiBhZnRlciBpdCByZWNvbnZlbmVzIGluIFNlcHQuIDEsIHNoZSBzYWlkLgpUeXBpY2FsbHkgZG8gNDUgbWludXRlcyBvbiB0aGUgZWxsaXB0aWNhbCAoSFIgcmFuZ2UgYmV0d2VlbiAxNDAgYW5kIDE3MCkgMyA0eCBwZXIgd2Vlay4gVGhpcyBpcyBpbiBhZGRpdGlvbiB0byBsaWZ0aW5nIGJlZm9yZSBvciBhZnRlciB0aGUgY2FyZGlvLlRoZSBleHBsYW5hdGlvbiBJIGdvdCBzZWVtZWQga2luZCBvZiBicm8gc2NpZW5jZSB5IGFuZCBzbyBkaWQgbXVsdGlwbGUgc291cmNlcyBJIGZvdW5kIGZyb20gYSBnb29nbGUgc2VhcmNoLiBUaGVyZSBpcyBwbGVudHkgb2Ygc291cmNlcyBzYXlpbmcgZXh0ZW5kZWQgY2FyZGlvIHdpbGwgbWVzcyB3aXRoIHlvdXIgaG9ybW9uZXMgYW5kIHlvdSBiZWNvbWUgY2F0YWJvbGljIGFzIGEgcmVzdWx0LCBidXQgdG8gd2hlcmUgZG9lcyBvbmUgZHJhdyB0aGUgbGluZT8gSSBob25lc3RseSByYXRoZXIgdXNlIHRoZSBleHRyYSBjYXJkaW8gdG8gZnVydGhlciBteSBjYWxvcmljIGRlZmljaXQgYW5kIGl0IGRvZXNuIHNlZW0gbGlrZSA0NSBtaW51dGVzIHRvIGFuIGhvdXIgb24gdGhlIGVsbGlwdGljYWwgc2hvdWxkIGZhbGwgdW5kZXIgdGhhdCBleHRlbnNpdmUgY2F0ZWdvcnkuTm90IE9QIGJ1dCBJIHN0YXJ0ZWQgYXQgMjIwIDYgbW9udGhzIGFnbyBhbmQgSSBub3cgYXQgMTgwIHdpdGggYSBkZWNlbnQgYW1vdW50IG9mIGFkZGVkIG11c2NsZS4gClRoZSByZW1haW5pbmcgcHJpemVwb29sIHdpbGwgYmUgZGlzdHJpYnV0ZWQgb24gYSBwZXJjZW50YWdlIGJhc2lzIGFjY29yZGluZyB0byBlYWNoIHBsYXllcnMgY2hpcCBzdGFjay4uIApNeSBtb3RoZXIgYW5kIG1hbnkgcGVvcGxlIG9mIGhlciBnZW5lcmF0aW9uIGFyZSBlc3BlY2lhbGx5IGdvb2QgYXQgcmVhZGluZyBiZXR3ZWVuIHRoZSBsaW5lcyBpbiBzb2NpYWwgc2l0dWF0aW9ucyBsaWtlIHRoaXMuIApUaGVyZSBhcmUgdHdvIHdheXMgYW5kIG9ubHkgdHdvIHRvIG1ha2UgYSBwcm9maXQgYXQgZ2FtYmxpbmcgYW5kIHRoZXkgYXJlIHNwb3J0cyBiZXR0aW5nIGFuZCBwb2tlci4gWW91IG11c3QgcHJhY3RpY2UgYW5kIHVzZSBzb3VuZCBtb25leSBtYW5hZ2VtZW50IHNraWxscyB0byBhdHRhaW4gYSBwcm9maXQsIGJ1dCBpdCBjYW4gYmUgZG9uZS4uIApOb3cgaXQgaXMgQXVndXN0IDIwMTMgYW5kIEkgaGF2ZSBnb3QgbXkgY2J0LCBNT1QsIGluc3VyYW5jZSBhbmQgdGF4LiBJIG1hbmFnZWQgdG8gY29tcGxldGVseSBvdmVyaGF1bCB0aGUgZnJvbnQgYnJha2UuIE5vdyBJIGtub3cgdGhpcyBkb2Vzbid0IHNvdW5kIG11Y2ggYnV0IEkgaGF2ZSBsaXRlcmFsbHkganVzdCBzdGFydGVkIG15IGxldmVsIDMgTlZRIGluIG1vdG9yY3ljbGUgbWFpbnRlbmFuY2UgYW5kIHJlcGFpci4gSSBkaWQgYWxsIHRoaXMgc28gSSBjb3VsZCBnZXQgdG8gYW5kIGZyb20gY29sbGVnZS93b3JrLiBJIGhhdmUgYmVlbiBleHRyZWFtbHkgcGxlYXNlZCB3aXRoIGhvdyBhZnRlciBhYm91dCBhIHllYXIgb2Ygbm90IGJlaW5nIHN0YXJ0ZWQgYWZ0ZXIgYSBiaXQgb2YgdGxjIGFuZCBwZXRyb2wgaXQgZmlyZWQgYWZ0ZXIgYSBmZXcgdHVybnMuIFJlYWxseSBwbGVhc2VkIHdpdGggdGhlIHJpZGUgY29tZm9ydC4gVGhlIGNvc3Qgb2YgYSBmdWxsIHRhbmsgZnJvbSBlbXB0eSBmb3IgbWUgd2FzIDEzIHBsdXMgc29tZSBjaGFuZ2UgYWJvdXQgNTBwLiBJIHdpbGwgcG9zdCBmdXJ0aGVyIGFib3V0IGhvdyBnb29kIHRoZSBjb25zdW1wdGlvbiBpcy4gQnV0IHNvIGZhciBzbyBnb29kLiAxMzAgbWlsZSB0YW5rIHJhbmdlIHRoYXQgaXMgdGhlIGJpZ2dlc3QgYnVsbCBvZiBhbGwgaG9uZXN0bHkgZG91YmxlIHRoYXQgYW5kIGFkZCBzb21lIG1vcmUgSSBoYXZlIG5vIGlkZWEgd2hlcmUgeW91J3MgZ290IHRoZXNlIGZpZ3VyZXMgZnJvbSBzZXJpb3VzbHkgSSBhZG1pdCB0aGUgZW5naW5lIHdhcyBndXRsZXNzIGFuZCB0b29rIGEgbG90IG9mIHByZSBwbGFubmluZyBhbmQgd29yayB0byBnZXQgaXQgdG8gdG9wIHNwZWVkIGFuZCBzbGlnaHRlc3QgaGlsbCBhbmQgaXQgZHJvcHMgYW5kIEkgdGhpbmsgaXQgd2FzIG1vcmUgOSAxMCBiaHAgdG8gYmUgaG9uZXN0IGJ1dCBpdCB3YXMgb25lIG9mIHRoZSBtb3N0IGluZGVzdHJ1Y3RpYmxlIGJpa2VzIEkgaGF2ZSBldmVyIG93bmVkIG1pbmVzIHdhcyBhIDE5ODQgbW9kZWwgd2hpY2ggSSBnb3QgZm9yIGEgc29uZyBhbmQgYSBkYW5jZSBpbiBnb29kIGNvbmRpdGlvbi4gVGhlIHRoaW5nIHdhcyBhIHRhbmsgY2FtZSBvZmYgaXQgaGl0IHRoaW5ncyB3aXRoIGl0IHRoZSBsb3Qgd2hpbGUgbGVhcm5pbmcgYW5kIGl0IGtlcHQgZ29pbmcgOikgYW4gdG8gYmUgaG9uZXN0IHRoaW5rIGl0IGhhZCBhIGJpZ2dlciB0YW5rIHRoYW4gMTAgbGl0cmVzIHRoaW5rIGl0IHdhcyBtb3JlIGxpa2UgMTJhbmQgMSBmb3IgcmVzZXJ2ZQpBY3Rpdml0eSBzaG91bGQgY29udHJpYnV0ZSB0byB0aGUgZGlzY3Vzc2lvbiBhbmQgbm90IGJlIHB1cmVseSBzZWxmIHNlcnZpbmcKQWR1bHQsIHRvIG1lLCBtZWFucyBkb2luZyB3aGF0IHlvdSBhYmxlIHRvIGJlY29tZSBzZWxmIHN1ZmZpY2llbnQgYW5kIHRvIGV4cGxvcmUgeW91ciBob2JiaWVzLiBJZiB0aGF0IHdvcmtpbmcgcGFydCB0aW1lIHRvIHNoYXJlIGEgZmxhdCB3aXRoIGZvdXIgcm9vbW1hdGVzIGFuZCBnb2luZyBvdXQgcGFydHlpbmcgbW9zdCBuaWdodHMsIGNvb2wuIElmIHRoYXQgbG9va3MgbGlrZSBhbiBvZmZpY2Ugam9iIHdoZXJlIHlvdSBtb3N0bHkgd29yayB0aGUgc2FtZSBwYXR0ZXJuIGJ1dCBlbmpveSB5b3VyIGZyZWUgdGltZSwgZ28gZm9yIGl0LiAKT25lbGl0dGxld29ybGQgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIGRheSBhZ28KQW5kIHRoYXQgb25seSBnb2luZyB0byBoYXBwZW4gaWYgeW91IGhhdmUgc29tZXRoaW5nIGNvbXBlbGxpbmcgdG8gb2ZmZXIuLiAKU3VydmVpbGxhbmNlIHZpZGVvIHNob3dlZCB0aGUgb2ZmaWNlcnMgbGF0ZXIgZHJvcHBpbmcgQ2hhbWJlcnMgb2ZmLCBhbmQgYSByYXBlIGtpdCBmb3VuZCBzZW1lbiBtYXRjaGluZyB0aGUgRE5BIG9mIGRldGVjdGl2ZXMgRWRkaWUgTWFydGlucyBhbmQgUmljaGFyZCBIYWxsLiBUaGUgb2ZmaWNlcnMgcmVzaWduZWQgZnJvbSB0aGUgTllQRCwgYW5kIGluIE9jdG9iZXIgMjAxNywgdGhleSB3ZXJlIGNoYXJnZWQgd2l0aCA0MyBjcmltZXMsIGluY2x1ZGluZyByYXBlIGFuZCBraWRuYXBwaW5nLiAKSSBhbHNvIGhhdmUgdG8gbWVudGlvbiBzb21ldGhpbmcgZXZlcnlvbmUgbWlzc2luZy4KSSBob3BlIGV2ZXJ5b25lIHdpbGwgdGFrZSB5b3VyIGFkdmljZSwgSSBjb3VsZG4gYWdyZWUgbW9yZS4gWW91ciB0aW1lIGlzIGxpa2UgYSBiYW5rIGFjY291bnQsIGFuZCBldmVyeSB0aW1lIHlvdSBjb21taXQgdG8gc29tZXRoaW5nLCB5b3UgdGFraW5nIG1vbmV5IG91dCBvZiB0aGF0IGFjY291bnQuIApUaGlzIGlzIGEgYml0IGhhcmQgdG8gZm9sbG93IGJlY2F1c2UgSSBub3QgMTAwJSBzdXJlIHdoYXQgd2hlcmUgbWVhbnMsIGJ1dCBJIGltYWdpbmUgaXQgZmFsbHMgYXBhcnQgcHJldHR5IHF1aWNrbHkuIFRoZSBtb3N0IG9idmlvdXMgbGltaXRhdGlvbiBpcyB0aGF0IHlvdSBjYW4gdXNlIHRoZSBzYW1lIE1hcHBlciBtdWx0aXBsZSB0aW1lcyB3aXRoIGRpZmZlcmVudCB0eXBlcywgd2hpY2ggbWFrZXMgZnVuY3Rpb25zIGxpa2UgdHJhdmVyc2UgdHJpY2t5IChpdCB3aWxsIG5lZWQgc2V2ZXJhbCBjb3BpZXMgb2YgbWFwcGVyIGFuZCBzZXZlcmFsIGNvcGllcyBvZiBqb2luZXIsIHdoZXJlIHRoZSBudW1iZXIgb2YgbWFwcGVycyBhbmQgam9pbmVycyBkZXBlbmRzIG9uIHRoZSBzcGVjaWZpYyB0eXBlIHlvdSB0cmF2ZXJzaW5nKS4uIApUaGUgd2hvbGUgcG9pbnQgb2YgdXNpbmcgaG9tZW9wYXRoaWMgbWVkaWNhdGlvbiBpcyB0byB0cmVhdCBiZW5pZ24gbWFsYWRpZXMuIApTbyB3aHkgaXMgdGhhdCBpbXBvcnRhbnQ/IFdlbGwsIGFzIG1lbnRpb25lZCwgYmV0cyBhcmUgYSBncmVhdCB3YXkgdG8gaW50aW1pZGF0ZSBhIGxlc3MgY29uZmlkZW50IG9wcG9uZW50LCBwcm92aWRpbmcgYWxsIHRoZSB2YXJpZWQgYWR2YW50YWdlcyB0aGF0IGludGltaWRhdGlvbiBzb21ldGltZXMgb2ZmZXJzLiBBbmQgbW9yZSBzaW1wbHksIGlmIHlvdSdyZSB0cnlpbmcgdG8gbWF4aW1pemUgdGhlIGFtb3VudCBvZiB5b3VyIHdpbm5pbmdzLCBpdCdzIGhlbHBmdWwgdG8ga25vdyB3aGF0IGV2ZXJ5b25lJ3MgY29tZm9ydCBsZXZlbCBpcyB3aXRoIHdhZ2VyaW5nLiAKQ2FybmlmZXggdQogMSBwb2ludCAgc3VibWl0dGVkIDEwIGRheXMgYWdvWW91IGp1c3QgbWVudGlvbmVkIGJhbGwgd2VpZ2h0IGluIHlvdXIgaW5pdGlhbCBwb3N0LCBub3QgYXMgdGhlIHByb21pbmVudCBhY2N1cmFjeSB2YXJpYWJsZS4gSSBkaWQgbWVudGlvbiBpbnRlcm5hbCBwb2xpc2ggaW4gbXkgaW5pdGlhbCByZXNwb25zZSwgdGhvLlBlb3BsZSBtYWtlIGFsbCBraW5kcyBvZiBwdXJlbHkgbWFyZ2luYWwgbW9kaWZpY2F0aW9ucyB0byBhbGwga2luZHMgb2Ygc3R1ZmYsIHRoYXRzIG5vdCBtdWNoIHByb29mIG9mIGFueXRoaW5nLjk4cyBqdXN0IGFyZW50IGFzIGluY29uc2lzdGVudCBhcyB5b3VyIGluc2lzdGluZy4gSGVyZXMgL3UvdHJhaWxzb2Zkb29tIHdpdGggYSBzdG9jaywgcG9saXNoZWQgaW50ZXJuYWxzIG9ubHksIEE1IGFjaGlldmluZyBncmVhdCBjb25zaXN0ZW5jeSBudW1iZXJzLCArLyAgM2Zwcy4gClRoYW5rIEdvZC4gCkhlcmUgYSBncmVhdCBvcGVuaW5nIHNlbnRlbmNlOiAiSW1hZ2VzIG9mIDE5dGggY2VudHVyeSBmbHlpbmcgaG9yc2VzIGhhdmUgYWx3YXlzIGJlZW4gZGlmZmljdWx0IHRvIGZpbmQiLiBBbmQsIHNpbmNlIHRoaXMgaXMgYSBzZXJpb3VzIGlzc3VlLCBpdCByZWFsbHkgaXMgYSB0cnVlIHN0YXRlbWVudCwgdW50aWwgdG9kYXksIHdoZW4gSSBub3RpY2VkIHRoZW0gaW4gYSBsaXR0bGUgcHJvamVjdCBJIHdhcyBkb25nLiAKU2FkLCBidXQgdHJ1ZS4gVGhlcmUgYSBwbGFjZSBmb3IgaXQsIEkgdGhpbmsgdGhleSBqdXN0IG5vdCBnb2luZyBhdCBpdCB0aGUgcmlnaHQgd2F5LiBUaGV5IGNvdWxkIGRlZmluaXRlbHkgc2VsbCBhbm90aGVyIG9uZSBhcyBsb25nIGFzIHRoZXkgbWFrZSBpdCBhICQzMCAkNDAgZ2FtZSAod2l0aCBvciB3aXRob3V0IE1QLCBidXQgbmVlZHMgY28gb3ApIGFuZCBkb24gdHJ5IHRvIHB1c2ggaXQgYXMgYSBBQUEgY29uc29sZSBzZWxsZXIuIApJIGtub3cgbXkgZG9jdG9yIHNhaWQgSSB3aWxsIGdldCBhIFREQVAgc2hvdCB3aGlsZSBwcmVnbmFudCwgYnV0IGRpZG4gbWVudGlvbiBhbnl0aGluZyBhYm91dCBNTVIuIERvIHlvdS9jYW4geW91IGdldCB0aGF0IHdoaWxlIHByZWduYW50IHRvbz8gSSBkb24ga25vdyB0aGUgbGFzdCB0aW1lIEkgaGFkIGEgTU1SIHNob3QuIEkgdGhvdWdodCBNTVIgd2FzIG9uZSBhbmQgZG9uZSwgd2FzIG5vdCBhd2FyZSB0aGVyZSB3ZXJlIGJvb3N0ZXJzIGZvciB0aGF0IGxpa2UgVERBUC4uIAoiVGhlIGtleSBoaWdobGlnaHQgZm9yIHVzLCB0aG91Z2gsIHdhcyBmb29kIHJldmVudWUsIiBoZSBzYWlkLiAiSXQncyBjbGVhciAgIGZvb2QgaXMgdGhlIGZ1dHVyZS4gQ2F0ZXJpbmcgcmV2ZW51ZSBpcyB1cCAxNSBwZXIgY2VudCBpbiB0aGlzIGFyZWEuIE9uZSB0aGluZyB3ZSBoYXZlIHJlYWxseSB3b3JrZWQgb24gaXMgaW1wcm92aW5nIG91ciBmb29kIG9mZmVyaW5ncyBhbmQgd2UndmUgaW50cm9kdWNlZCBhIHdob2xlIGJ1bmNoIG9mIG5ldyBtZW51IGl0ZW1zLiAKTGF3cmVuY2UsIGEgMjQgeWVhciBvbGQgaGFyZCB0aHJvd2luZyBzaWRlYXJtZXIsIGJvYXN0cyBhIDk4IG1waCBoZWF0ZXIgdGhhdCBjb3VsZCBldmVudHVhbGx5IG1ha2UgaGltIGEgZG9taW5hbnQgYnVsbHBlbiBmb3JjZSBpbiBMb0RvIGlmIGhlIGNhbiBpbXByb3ZlIGhpcyBzcGxpdHMgYWdhaW5zdCBsZWZ0aWVzIGFuZCBjb250aW51ZWQgdG8gbWFzdGVyIGhpcyBvZmZzcGVlZCBwaXRjaGVzLiBBbmQgRXN0ZXZleiwgd2hvIG1pc3NlZCBoaXMgY2hhbmNlIGF0IGEgY2FsbCB1cCBsYXN0IHllYXIgZHVlIHRvIGEgcHJvbG9uZ2VkIGVsYm93IHN0cmFpbiwgaGFzIGFsc28gZGVtb25zdHJhdGVkIGEgaGlnaCA5MHMgZmFzdGJhbGwgd2hlbiBoZWFsdGh5Li4gClJlaWtpIEkgQ2xhc3MgT3V0bGluZTEuIApUaGUgdHJpY2sgaXMgZm9yIGVhY2ggb2YgdXMgdG8gbGVhcm4gdG8gdXNlIGJvdGggZW5lcmdpZXMgc28gdGhhdCBvbmUgZW5lcmd5IGNhbiBtaXRpZ2F0ZSB0aGUgb3RoZXIsIHByZXZlbnRpbmcgbmVpdGhlciBmcm9tIGdldHRpbmcgb3V0IG9mIHdoYWNrLiBUbyBwbGF5IGFsbCB0aGUgY2FyZHMgaW4gb3VyIGhhbmQgd2UgaGF2ZSB0byBzdGFydCBieSB1bmRlcnN0YW5kaW5nIHRoZSBwb3dlciBvZiBib3RoIGVuZXJnaWVzLiAKUGFydHlHYW1pbmcgZGV0YWlscyBmbG9hdCBwbGFucwpUaGUgSGVyYWxkIGFsc28gaWRlbnRpZmllZCBhYm91dCA4MCB3b21lbiB3aG8gc2F5IHRoZXkgd2VyZSBtb2xlc3RlZCBvciBvdGhlcndpc2Ugc2V4dWFsbHkgYWJ1c2VkIGJ5IEVwc3RlaW4gZnJvbSAyMDAxIHRvIDIwMDYuIEFib3V0IDYwIG9mIHRoZW0gd2VyZSBsb2NhdGVkICAgbm93IHNjYXR0ZXJlZCBhcm91bmQgdGhlIGNvdW50cnkgYW5kIGFicm9hZC4gRWlnaHQgb2YgdGhlbSBhZ3JlZWQgdG8gYmUgaW50ZXJ2aWV3ZWQsIG9uIG9yIG9mZiB0aGUgcmVjb3JkLiAKSG93ZXZlciB1c2luZyB0aGUgdGVybSBnYW1tb24ganVzdCBtYWtlcyB5b3Ugc291bmQgbGlrZSB0aGUga2luZCBvZiB1bmluZm9ybWVkLCBpbnN1ZmZlcmFibGUgdG9vbCB3aG8gZ2V0cyB0aGVpciBlbnRpcmUgcG9saXRpY2FsIGVkdWNhdGlvbiBmcm9tIHRoZSBvcGluaW9uIHBhZ2VzIG9mIHRoZSBndWFyZGlhbi4KRHVyaW5nIFdvcmxkIFdhciBJSSwgRHIuIEhhcnJ5IEJlZWNoZXIgd29ya2VkIGFzIGFuIGFybXkgbWVkaWMsIHRyZWF0aW5nIHdvdW5kZWQgc29sZGllcnMgaW4gSXRhbHkuIFdoZW4gaGUgcmFuIG91dCBvZiBtb3JwaGluZSwgaGUgdHJlYXRlZCB0aGUgc29sZGllcnMgd2l0aCBhIHNhbGluZSBzb2x1dGlvbiwgYnV0IGhlIGRpZG4ndCBtZW50aW9uIHRoZSBzd2l0Y2guIEluIGFib3V0IDQwIHBlcmNlbnQgb2YgdGhlIGNhc2VzLCBwYWluIHN1YnNpZGVkIGFueXdheSBbc291cmNlOiBXYWxrZXJdLiBCZWVjaGVyJ3MgZmluZGluZ3MgcGxheWVkIGEgbm90YWJsZSByb2xlIGluIHRoZW9yaWVzIGFib3V0IHBhaW4gYW5kIHRoZSBwbGFjZWJvIGVmZmVjdCwgYSBwaGVub21lbm9uIGluIHdoaWNoIGEgcGVyc29uJ3MgY29uZGl0aW9uIGltcHJvdmVzIGV2ZW4gdGhvdWdoIHRoZSBtZWRpY2F0aW9uIGhlIG9yIHNoZSB0YWtlcyBpc24ndCBkZXNpZ25lZCB0byBoZWFsIHRoZSBhaWxtZW50LiBUaGUgcmV2ZXJzZSBjYW4gaGFwcGVuIGFzIHdlbGwgICBpbiBzb21lIHN0dWRpZXMsIHBhdGllbnRzIHdobyB3ZXJlIHRvbGQgdGhleSB3ZXJlIHRha2VuIG9mZiBhIHBvd2VyZnVsIHBhaW4gbWVkaWNhdGlvbiBiZWdhbiB0byBmZWVsIHdvcnNlLCBldmVuIHRob3VnaCB0aGV5IHdlcmUgc3RpbGwgYmVpbmcgYWRtaW5pc3RlcmVkIHRoZSBtZWRpY2F0aW9uIHdpdGhvdXQgdGhlaXIga25vd2xlZGdlIFtzb3VyY2U6IFRoZXJuc3Ryb21dLgpFeGFjdGx5IHRoaXMuIENoaW5hIG1heSBub3QgaGF2ZSB0aGUgdGVjaG5vbG9neSB0byBtYW51ZmFjdHVyZSBzcGVjaWFsdHkgcHJvZHVjdHMgYXMgd2VsbCBhcyBFdXJvcGVhbiBjb3VudHJpZXMsIGJ1dCBDaGluYSBpcyBlZmZpY2llbnQuIApUaGlzIG1vdmllIGlzIGEgZmFpcnkgdGFsZSByb21hbmNlIG9mIGZpbmRpbmcgY29taW5nIHRvIHRlcm1zIG9mIHlvdXIgb3duIGlkZW50aXR5IGFuZCBzdGFuZGluZyB5b3VyIGdyb3VuZCBvbiB3aGF0IHlvdSBhcmUgYW5kIHdoYXQgeW91IGxvdmUuIApBIHBpbmNoZWQgbmVydmUgb2NjdXJzIHdoZW4gdG9vIG11Y2ggcHJlc3N1cmUgaXMgcGxhY2VkIG9uIGEgbmVydmUgZnJvbSB0aGUgc3Vycm91bmRpbmcgdGlzc3VlcywgYm9uZXMsIG11c2NsZXMgb3IgdGVuZG9ucy4gCiJXZSB0aGluayB0aGVyZSBpcyBnb2luZyB0byBzb21lIHVuZGVyZXN0aW1hdGlvbiB0aGVyZSBidXQgaWYgdGhleSBkbyBpdCBpcyBhdCB0aGVpciBwZXJpbC4gSSBkb24gdGhpbmsgdGhleSBrbm93IGhvdyBnb29kIEplZmYgcmVhbGx5IGlzLiAiSSB0aGluayB0aGV5IGdvaW5nIHRvIGZpbmQgb3V0IHRvbW9ycm93LiAKSSBwZWVsZWQgb25lIGZvciB0aGUgdGFibGUgdG8gc2hvdyB0aGVtIGhvdyBpdCB3YXMgZG9uZS4gVG9vayBhIHdoaWZmIG9mIGl0LCBhbmQgaXQgc21lbGxlZCBsaWtlIGFzcy4gCkV2ZXJ5ZGF5IGl0IHdhcm1zIG15IGhlYXJ0IHdoZW4gSSB0YWxrIGFib3V0IG15IGlzc3VlcyBvbmxpbmUgYW5kIHBlb3BsZSBhbnN3ZXIgbWUgYW5kIHRlbGwgdGhlaXIgb3duIHRyb3VibGVzLiBXZSBhcmUgYWxsIGluIHRoaXMgYm9hdC93b3JsZCB0b2dldGhlciBubyBtYXR0ZXIgd2hhdE9sZCBHb2F0ICAzIHBvaW50cyAgc3VibWl0dGVkIDE1IGRheXMgYWdvU29tZXRpbWVzIGl0IGhlbHBzIGlmIHlvdSBjYW4gdGVsbCB0aGVtIHNvbWV0aGluZyB5b3UgZG8gb3IgbW90aW9uIHlvdSBtYWtlIHRoYXQgc2V0cyBpdCBvZmYuIAoiWWV0LCBvbmNlIHNvbWUgcHJhY3RpY2FsOiBpLiBFLiwgc2ltcGxlIGFuZCBlY29ub21pY2FsbHkgcG9zc2libGUsIG1lYW5zIGlzIGZvdW5kIGZvciBtYWtpbmcgdGhlIGF2ZXJhZ2UgY2FyIHF1aWNrbHkgY29udmVydGlibGUgdG8gaG91c2VrZWVwaW5nIHVzZSwgdGhlbiB0aGUgdGhyZWF0IG9mIHRoZSBhdG9tIGJvbWIgdG8gb3VyIGNpdGllcyBsb3NlcyBzb21lIG9mIGl0cyBtZW5hY2UuIApGb3IgbWUsIEkgdGhpbmsgdGhhdCdzIHNvbWV0aGluZyBzcGVjaWZpYyB0byBoZXJlIHRoYXQncyByZWFsbHkgZ29vZC4gVGhlcmUncyBub3QganVzdCB0aGUgcmVoYWIgZ3V5IG9yIHRoZSBwaHlzaW8sIFdlJ3JlIGFsbCBhIHBlcmZvcm1hbmNlIGRlcGFydG1lbnQgYW5kIHdlIGFsbCBrbm93IHdoYXQncyBnb2luZyBvbi4iLiAKU2hhaCBwcmV2aW91c2x5IHRvbGQgVGhlIFdhc2hpbmd0b24gUG9zdCB0aGF0IEthdmFuYXVnaCB3YXMgcmVpbWJ1cnNlZCBmb3IgdGhvc2UgdGlja2V0cyBhbmQgcGFpZCBvZmYgaGlzIGRlYnQgYXQgdGhlIGVuZCBvZiAyMDE2LiBXaGl0ZWhvdXNlIHdhbnRzIHRvIGtub3cgd2hpY2ggb2YgaGlzIGZyaWVuZHMgcmVpbWJ1cnNlZCBLYXZhbmF1Z2ggZm9yIGJhc2ViYWxsIHRpY2tldHMsIHdoZW4gYW5kIGF0IHdoYXQgcHJpY2UuIEhlIGFsc28gd2FudHMgdG8ga25vdyBob3cgS2F2YW5hdWdoIHBhaWQgb2ZmIHRoZSByZXN0IG9mIGhpcyBkZWJ0IHRoYXQgd2FzIG5vdCBpbmN1cnJlZCBmcm9tIHB1cmNoYXNpbmcgYmFzZWJhbGwgdGlja2V0cy4KSmFtZXMgS25vd2xlcwpZb3VyIHBhcmVudHMgd2lsbCBiZSB5b3VyIGd1YXJhbnRvcnMuIEhhcHBlbnMgYWxsIHRoZSB0aW1lLCB0aGVyZSB3b24ndCBiZSBhbnkgaXNzdWVzIHdpdGggdGhhdC4gV2hhdCB5b3UnbGwgbmVlZCBraW5kIG9mIGRlcGVuZHMgb24gd2hvIHlvdSdyZSByZW50aW5nIGZyb20gYnV0IGdlbmVyYWxseSBwcm9vZiBvZiBpbmNvbWUgZnJvbSB0aGUgZ3VhcmFudG9ycy4KU2lkZSBub3RlICAgaWYgeW91IGVhdCBzaGVsbGZpc2ggYW5kIHdvbiBlYXQgYSBjcmlja2V0LCB0aGF0IHNvcnQgb2YgcmlkaWN1bG91cy4gCkkgYmVlbiB3b25kZXJpbmcsIGhvdyAiZWFzeSIgaXQgaXMgZm9yIHNvbWVvbmUgd2l0aCBteSBjdXJyZW50IHN0YXR1cyB0byB3aW4gYSBzY29sYXJzaGlwLCBvciB0byBiZSBhYmxlIHRvIGltbWlncmF0ZSB0byBUdXJrZXk/IEkgZG9uZSBzb21lIHJlc2VhcmNoIGFuZCBJIHByZXR0eSBwb3NpdGl2ZSBJIGNhbiBjb3ZlciBteSBsaWZlIGV4cGVuc2VzIHdpdGggc29tZSBwcmVwYXJhdGlvbiwgYmFzaWNhbGx5IEkganVzdCB3YW50IHRvIGJlY29tZSBhIFR1cmtpc2ggY2l0aXplbiBvciB0byBhcHBseSBmb3IgYSBzY29sYXJzaGlwIGFueXdoZXJlIGluIFR1cmtleSAoZG9lc24gaGF2ZSB0byBiZSBpbiBteSBjdXJyZW50IGRvbWFpbiwgYW55dGhpbmcgcmVxdWlyaW5nIGEgYmFjaGVsb3IgZGVncmVlIGlzIGZpbmUpIEkgYW0gYWxzbyBub3QgYWdhaW5zdCB3b3JraW5nLgoiVGhyb3VnaG91dCBOU1csIHByb2JsZW0gZ2FtYmxpbmcgY291bnNlbGxpbmcgc2VydmljZXMgYXJlIHNlZWluZyBzaW1pbGFyIHRyZW5kcywgd2l0aCBwb2tlciBtYWNoaW5lcyBjcmVhdGluZyB0aGUgbWFqb3JpdHkgb2YgcHJvYmxlbSBnYW1ibGluZyBzaXR1YXRpb25zLgpCdXQgSSBhbSBhIGJpdCB0aXJlZCBvZiB0aGUgd2F5IHBybyBsaWZlcnMgZ2V0IHZpbGlmaWVkIGxpa2UgdGhleSBmdWNraW4gc3ViaHVtYW4gcGllY2VzIG9mIHNoaXQgYnV0IGJ0dyBNYXJnYXJldCBTYW5nZXIgaXMgYSBoZXJvLiAKV2hhdCB3ZSBqdXN0IGV4cGVyaWVuY2VkIHdhcyBhIG9uY2UgaW4gYSBsaWZldGltZSBtZWx0ZG93bi4gSWYgd2Ugc2VlIHRoYXQgYWdhaW4gaXQgd2lsbCBiZSBiZWNhdXNlIHRoZSBnbG9iYWwgZWNvbm9teSBpcyBpbiBiaWcgdHJvdWJsZS4gClRoZXkgYXJlIHdvcmtpbmcgd2l0aCBhdHRvcm5leXMgdG8gbWFrZSBjaGFuZ2VzIGluIGhvcGVzIG9mIHJlb3BlbmluZy4gQnV0IHBvbGljZSBhcmVuJ3QgZ2l2aW5nIHRoZW0gbXVjaCBmZWVkYmFjayBhYm91dCB3aGF0J3MgYWNjZXB0YWJsZSwgRnJlZCBaaW1tZXJtYW4gc2FpZC4uIApXb2RlaG91c2Ugd2hvIHJldmVsbGVkIGluIHRoZSB1c2UgYW5kIGNob2ljZSBvZiB3b3Jkcy4gSGUgd2FzIGFsc28gYSByZWFsIHdvcmRzbWl0aCBpbiBoaXMgb3duIHJpZ2h0LCB3b3JraW5nIGFuZCByZXdvcmtpbmcgc2VudGVuY2VzLCBhIHBlcmZlY3Rpb25pc20gd2hpY2ggd2FzIHBhcnQgb2YgdGhlIHJlYXNvbiBmb3IgaGlzIHBhcnRpY3VsYXIgYXR0aXR1ZGUgdG8gZGVhZGxpbmVzITFIZSBhbHNvIGhhZCBhIGdyZWF0IGVudGh1c2lhc20gZm9yIG5ldyBhbmQgZW1lcmdpbmcgdGVjaG5vbG9naWVzIGFuZCB3YXMgYSBmYW1vdXMgQXBwbGUgTWFjIGZhbi4gTG9uZyBpbnRvIHRoZSBuaWdodCBkaWQgdGhlIGRlYmF0ZXMgd2l0aCB0aGUgUEMgbWluZGVkIHByb2dyYW1tZXJzIGF0IFRoZSBEaWdpdGFsIFZpbGxhZ2UyIGxhc3QhIFNvbWUgb2YgaGlzIG1vc3QgYnJpbGxpYW50IHdyaXRpbmcgd2FzIGFib3V0IHRoZSBmYXIgcmVhY2hpbmcgaW1wYWN0IG9mIGRpZ2l0YWwgdGVjaG5vbG9neS5JdCBpcyBvdXIgaW50ZW50aW9uLCB0aGVuLCB0aGF0IHRoZSBGb3VuZGF0aW9uIHdpbGwgYWR2YW5jZSBjb21tdW5pY2F0aW9uIHNraWxscywgc3RhcnRpbmcgd2l0aCB0aGUgYWNxdWlzaXRpb24gb2YgYmFzaWMgbGl0ZXJhY3kgYW5kIHRoZW4gbG9va2luZyBiZXlvbmQgdGhhdCwgaGVscGluZyBwZW9wbGUgb2YgYWxsIHNoYXBlcyBhbmQgc2l6ZXMgdG8gZGV2ZWxvcCB0aGUgdG9vbHMgdG8gc2hhcmUgaW4gdGhlIHdvcmxkcyBvZiBpZGVhcyBhbmQgY3JlYXRpb24gdGhhdCBEb3VnbGFzIHNvIGRlbGlnaHRlZCBpbiBoaW1zZWxmLiAKQWdhaW4sIHdlIG5lZWQgYSB0b3VjaGRvd24gaGVyZSBmb3IgYSBiZXR0ZXIgY2hhbmNlIG9mIHdpbm5pbmcuIEkgd291bGQgdGFrZSBhIDIwIHlhcmQgZ2FpbiB0aGF0IGJ1cm5zIGNsb2NrIG92ZXIgYSB5YXJkIG9yIHR3byBhbnkgZGF5Li4gClJ4emVybyB1ClRvdXRlZm9pcywgbGUgc3VjY3MgYSB0IGF1IHJlbmRleiB2b3VzIGF2ZWMgbCd0IGNoYXVkIHF1ZSBub3VzIGF2b25zIGNvbm51IGV0IGxhIGZycXVlbnRhdGlvbiBhIHQgcGx1cyBpbXBvcnRhbnRlIHF1ZSBjZSBxdWUgbGVzIGRpbGVzIGF2YWllbnQgZXNwci4uIApJZiB5b3UgbGlrZSB0aGlzLCB5b3UgbWlnaHQgZXZlbiB0YWtlIGEgcm9sbGluZyBwaW4gdG8gdGhlIG9mZmljZTsgdGhlbiwgc2V2ZXJhbCB0aW1lcyB0aHJvdWdob3V0IHRoZSBkYXksIHRha2UgeW91ciBzaG9lcyBvZmYgYW5kICJyb2xsIiB0aGUgdGVuc2lvbiBvdXQgb2YgeW91ciBmZWV0LiBUaGlzICJyb2xsZXIgbWFzc2FnZSIgd2lsbCBhbHNvIHdvcmsgd2l0aCBhIHRhbGwsIG5hcnJvdyBib3R0bGUuIFNvbWUgcGVvcGxlIHVzZSBzbWFsbGVyICJyb2xsZXJzIiBpbmNsdWRpbmcgZ29sZiBiYWxscyBhbmQgZXZlbiBtYXJibGVzLi4gCkkgd2FzIGluIHRoZSBzYW1lIHNpdHVhdGlvbiBhbmQgYXNrZWQgSW1taWdyYXRpb24gYWJvdXQgaXQgYSBidW5jaCBvZiB0aW1lcywgeW91IGNhbm5vdCB3b3JrIG9uIGEgd29yayB2aXNhIHdoaWxlIGluIEtvcmVhLCBpdCBkb2VzbiBtYXR0ZXIgd2hlcmUgdGhlIHdvcmsgaXMgYW5kIHdobyB0aGUgZW1wbG95ZXIgaXMgYW5kIHdoZXJlIHRoZSBtb25leSBpcywgdGhlIE9OTFkgdGhpbmcgdGhhdCBtYXR0ZXJzIGlzIHdoZXJlIFlPVSBhcmUuIElmIHlvdSBhcmUgaW4gS29yZWEsIHlvdSBuZWVkIGEgdmlzYSB0aGF0IGFsbG93cyB5b3UgdG8gd29yay4KV2UgZGlkIG5vdCBmaW5kIHRoZSBpbmhhYml0YW50cyB0byBiZSBudW1lcm91cywgYW5kIHdlIGltYWdpbidkIHRoYXQgc2V2ZXJhbCBvZiB0aGVtIGhhZCBmbGVkIGZyb20gdGhlaXIgaGFiaXRhdGlvbnMgdXBvbiBvdXIgQXJyaXZhbCBpbiB0aGUgQmF5Li4gClRob3UgYXJ0IHdvcnNoaXBwZWQgb2YgYWxsIHdvcmxkcy4gTyBsb3JkLCBJIHdvcnNoaXAgdGhlZSB0byBvYnRhaW4gdGh5IGdyYWNlLiBMZXQgbm90IHRoaXMgcmFzaG5lc3Mgb2YgbWluZSBiZSByZWdhcmRlZCBhcyBhIGZhdWx0IHRoaXMgY29tYmF0IGluIHdoaWNoIEkgd2FzIGVuZ2FnZWQgd2l0aCB0aGVlIGZyb20gaWdub3JhbmNlLiAKSSBvbmx5IGxhc3RlZCAyOCBtaW51dGVzICEgU29tZSBwbGF5ZXJzIHdlcmUgc3RpbGwgc2lnbmVkIHVwIGFuZCBoYWRuJ3QgZXZlbiBzYXQgZG93bi4gQW5kIEkgd2FzIHdhbGtpbmcgb3V0LiBZZXQgYWdhaW4sIGFuIGludGVybmV0IHBsYXllciBnb3QgbWUuIApDb25ncmF0cyBvbiBzcGVha2luZyBTcGFuaXNoIHRvIHlvdXIgY293b3JrZXIhIEl0IGdyZWF0IHRvIHN0ZXAgb3V0IG9mIHlvdXIgY29tZm9ydCB6b25lLCBiZWNhdXNlIG5vdyB5b3Uga25vdyB3aGF0IHlvdSBhY3R1YWxseSBjYXBhYmxlIG9mLiAKSXZlIGhhZCBtaXhlZCByZXN1bHRzIGFuZCBpdmUgbWlzc2VkIG91dCBvbiBzb21lIGdyZWF0IG9wcG9ydHVuaXRpZXMgYmVjYXVzZSBvZiBteSB1bndpbGxpbmduZXNzIHRvIGludmVzdCBpbiBhIGNvbXBhbnkgdGhhdCBoYXNudCBtYWRlIGEgcHJvZml0IGFuZCBkb2VzbnQgcGF5IGRpdmlkZW5kcyAoaW0gbG9va2luZyBhdCB5b3UgZWxvbiBtdXNrLCBkYW1uIHlvdSBhbmQgeW91ciAyMyBkb2xsYXIgYSBzaGFyZSBjYXIgc3RvY2sgaSBkaWRudCBidXkpIGJ1dCBpdmUgaGl0IG9uIGEgZmV3IHRvbyAobG92ZSBteSBzb3V0aCBhZnJpY2FuIGdvbGQgbWluZXIpLiBSZWluZXN0aW5nIHRoZSBkaXZpZGVuZHMgY2FuIGdyb3cgeW91ciBob2xkaW5ncyB3aXRob3V0IGhhdmluZyB0byBwdXQgbW9yZSBvZiB5b3VyIG93biBpbiBhbmQgbW9zdCBzb2xpZCBjb21wYW5pZXMgd2lsbCBnaXZlIGEgMjMgcCBkaXZpZGVuZC4gCkJ1dCB0aGVyZSB3ZXJlIGEgbG90IG9mIG51bWJlcnMgb24gdGhlIGRlZmVuc2l2ZSBzaWRlIG9mIHRoaXMgcm9zdGVyLiBPbiB0aGUgbGVmdCBzaWRlIGFsb25lLCB0aGUgQ2FudWNrcyBoYXZlIEVkbGVyLCBNaWNoYWVsIERlbCBab3R0bywgRGVycmljayBQb3VsaW90IGFuZCBCZW4gSHV0dG9uLiBNYWtpbmcgaGVhZCBjb2FjaCBUcmF2aXMgR3JlZW4gdGVhbSBhaGVhZCBvZiBhdCBsZWFzdCB0d28gb2YgdGhvc2UgdmV0ZXJhbnMgd2FzIG5vdCBnb2luZyB0byBiZSBlYXN5LCBhbmQgd2FzIGRlZmluaXRlbHkgbm8gc3VyZSB0aGluZy4KSSBkb24gYW5hbHl6ZSBpbmZpbml0eSBpbiB0ZWNobmljYWwgd2F5cywgaSBqdXN0IGtpbmRhIGRvIGEgbWFnaWMgdHJpY2sgYW5kIHRoYXQgdGhhdC4gcHJvYmFibHkgaSBjb3VsZCB3cml0ZSBhIHJlYWxseSB0ZWNobmljYWwgbWFudWFsLCBidXQgaSBkb24gaGF2ZSB0aGUgbWFnaWMgdGltZSBwb3dlcnMgcmlnaHQgbm93LCBzYXZlZCB1cCwgdG8gaGF2ZSB0aGUgdGltZSB0byBkbyB0aGF0LiBiZWNhdXNlIHlvdSBuZWVkIHRvIGJlbGlldmUgaW4gY29tcHV0ZXJzIG5vd2FkYXlzLCBvciB0aGV5IHByb2JhYmx5IGdvIGhheXdpcmUgYW5kIHlvdSBuZWVkIHRvIGFjdCBvdXQgc29tZSBjaGVlc3kgc2NpIGZpIHN0b3J5IHdoZXJlIHlvdSB0ZWxsIHRoZW0gdG8gYWNjb21wbGlzaCBhIG1pc3Npb24gYnkgZmFpbGluZyB0aGUgbWlzc2lvbiBmb3IgNyBtb250aHMgb3Igc29tZXRoaW5nLCBhbmQgdGhhdCBqdXN0IGEgZnVubnkgd2F5IHRvIHdhc3RlIGEgbG90IG9mIHRpbWUuSSByZWFkIEpvaG4gSyBibG9nLCBpbiB3aGljaCBoZSBzaGFyZWQgcmVhbGx5IGludGVuc2Ugb3BpbmlvbnMgYWJvdXQgYnJlYWtpbmcgcmVhbGl0eSBhbmQgc3VtbW9uaW5nIGEgY2FydG9vbiBjaGFyYWN0ZXIgdGhhdCBjYW4gZGVmZW5kIGNhcnRvb25zLCB0aGVtZWQgYXJvdW5kIHRpbWUgYW5kIGNvbG9ycywgYW5kIHRoZSBodWxrLCB0aGF0IGhlIHNlZW1lZCB0byBoYXZlIHNlZW4gaW4gbXlzZWxmLCBhbmQgd2VsbC4gCkZpbmFsbHkgc29tZW9uZSBnb3QgaXQgYW5kIHdhcyBzdXJwcmlzaW5nbHkgZW1vdGlvbmFsLiIuIApUaGlzIGFsc28gcmVzdWx0cyBpbiBub3JtYWxpemF0aW9uIG9mIHRoZSB1bmRldmVsb3BlZCBpbW11bmUgc3lzdGVtIHRoYXQgaXMgcHJlc2VudCBpbiBnZXJtIGZyZWUgbWljZS4gCkkgY2FuIHJlYWQgY29tbWVudHMgZXhwbGFpbmluZyAoYWxzbyB3aXRoIHZlcnkgd2VhayBzY2llbnRpZmljIGJhc2lzLCBsaWtlIGNvbW1lbnQgbm8uIDY5LCB0b28gY2hpbGRpc2ggdG8gYmUgcmVhbCwgYXQgbGVhc3QgSSBob3BlLikgdGhhdCB0aGlzIGlzIGxpa2UgYSBuYXR1cmFsIGV2ZW50IGZvciBidWxscywgYnV0IGFjdHVhbGx5IHRoZXJlIGlzIGEgc2hhcnAgZGlmZmVyZW5jZSBiZXR3ZWVuIHRoaXMgYW5kIG5hdHVyZTogd2lsZCBhbmltYWxzIGRpZSBtYXliZSBpbiB3b3JzZSB3YXlzLCBsaXRlcmFsbHkgZWF0ZW4gYnkgb3RoZXJzIG9yIGFmdGVyIGEgZGVzcGVyYXRlIGZpZ2h0LCBidXQgdGhlcmUgaXMgbm8gY3J1ZWx0eSBpbiBuYXR1cmU6IG9ubHkgaW5zdGluY3Q7IGhlcmUgdGhleSBkaWUgZm9yIHNvbWVvbmUgZWxzZSdzIGZ1bi4KNy4gQXZvaWQgZGV2ZWxvcGluZyBjZWxpYWMgZGlzZWFzZS4gSW4gb3JkZXIgdG8gZGV2ZWxvcCBjZWxpYWMgZGlzZWFzZSwgeW91IG5lZWQgdGhyZWUgdGhpbmdzIDEpIGdlbmV0aWMgcHJlZGlzcG9zaXRpb24gMikgYW4gZW52aXJvbm1lbnRhbCB0cmlnZ2VyIHN1Y2ggYXMgc3VyZ2VyeSwgZXhjZXNzaXZlIHN0cmVzcywgb3IgYSB2aXJ1cyAzKSBhIGRpZXQgdGhhdCBjb250YWlucyBnbHV0ZW4uIElmIHlvdSBhdm9pZCBnbHV0ZW4sIHlvdSBjYW5ub3QgZGV2ZWxvcCBjZWxpYWMgZGlzZWFzZS4KVGhyZWVXb3JrcyBpcyBhbHNvIGF2YWlsYWJsZSBpbiBTaG9wcGVycyBEcnVnIE1hcnQsIElEQSwgR3VhcmRpYW4gYW5kIFJleGFsbCBhcyB3ZWxsIGFzIGluIGluZGVwZW5kZW50IGdyb2Nlcnkgc3RvcmVzIGluIHRoZSBncmVhdGVyIFRvcm9udG8gYXJlYSwgc3VjaCBhcyBQdXNhdGVyaSBJR0EsIE1pY2hhZWwgQW5nZWxvcyBhbmQgc2VsZWN0IExvYmxhdyBzdG9yZXMsIGFtb25nIG90aGVyIHJldGFpbGVycy4uIApNdXNrIGluaXRpYWxseSBjb250ZW5kZWQgdGhhdCBoZSBoYWRuJ3QgZG9uZSBhbnl0aGluZyB3cm9uZyBiZWZvcmUgcmVsdWN0YW50bHkgYWdyZWVpbmcgdG8gaGF2ZSBmdXR1cmUgdHdlZXRzIHRoYXQgY291bGQgYWZmZWN0IFRlc2xhJ3Mgc3RvY2sgYmUgcHJlIGFwcHJvdmVkLgpUaGUgcHJvYmxlbSB3aXRoIHRoZSBmcmVlIHJvb21zIChhdCBsZWFzdCBvbiBVbHRpbWF0ZSBCZXQsIEkgaGF2ZW4ndCB0cmllZCBhbnl3aGVyZSBlbHNlKSBpcyB0aGF0IHBlb3BsZSBwbGF5IGEgbG90IGRpZmZlcmVudGx5IHdpdGggcGxheSBtb25leSB0aGFuIGluIGV2ZW4gdGhlIGxvd2VzdCBsaW1pdCByZWFsIG1vbmV5IGdhbWVzLgoxNzlNIGluICdCb25lcycgcHJvZml0IGRpc3B1dGUKIldlJ3JlIGhvcGluZyB0byBvZmZlciBwYXRyb25zIGEgcGxhY2UgdG8gY29tZSBhbmQgaGF2ZSBhIGNoYXQgb3ZlciBhIGdvb2QgYmVlci4iIFJFQUQgQUxTTzpHZW9yZ2UgSG90ZWwgYXdhcmRlZCBCZXN0IENhc3VhbCBEaW5pbmcgVmVudWUgaW4gdGhlIENlbnRyYWwgV2VzdCBUaGUgUmFpbHdheSBIb3RlbCBmaXJzdCBvcGVuZWQgaW4gQmF0aHVyc3QgaW4gMTkyNywgYW5kIGZvciBtdWNoIG9mIGl0cyBoaXN0b3J5LCBpdCBoYXMgYmVlbiB0aGUgaWRlYWwgcHViIGZvciByYWlsd2F5IHdvcmtlcnMgYW5kIHRyYWRlc3Blb3BsZS4gV2l0aCB0aGUgcmVjZW50IGNsb3N1cmVzIG9mIHRoZSBGYXJtZXJzIEFybXMgYW5kIHRoZSBWaWN0b3JpYSBIb3RlbCwgdGhlIFJhaWx3YXkgSG90ZWwgd2lsbCBub3cgYmUgdGhlIHNvbGUgcHViIG9wZW4gaW4gdGhlIHNvdXRoZXJuIGFyZWEgb2YgQmF0aHVyc3QuIApBcyBmb3IgcG9pbnRzLCBpdCBiZXR0ZXIgdG8gcHJlcGFyZSBjb25zZXJ2YXRpdmVseSBhcyB5b3UgbmV2ZXIga25vdyBob3cgdGhlIGltbWlncmF0aW9uIG9mZmljZXIgcmV2aWV3aW5nIHlvdXIgYXBwIHdpbGwgY291bnQgeW91ciBwb2ludHMuIEkgd2FzIGluIHRoZSBzYW1lIHNpdHVhdGlvbiAoRTIgdG8gRjIpIGFuZCBJIGdvdCAwIHBvaW50cyBmb3IgdGF4IGFuZCBwcm9mZXNzaW9uYWwgZXhwZXJpZW5jZSBhbmQgaXQgY2FtZSBvdXQgdG8gZXhhY3RseSA4MCBwb2ludHMgd2l0aCAxIG9mIHRob3NlIHBvaW50cyBmcm9tIDUwIGhvdXJzIG9mIHZvbHVudGVlcmluZy4KRm9sZHMgdG8gZmlyc3QgZ3V5IHdobyBjYWxscy5JIGp1c3QgYW5ub3VuY2UgYWxsIGluIGluIHRoZSBkYXJrIGJlY2F1c2UgdGhlIDJuZCBDaGluZXNlIGd1eSBtaWdodCBmb2xkIHNvbWUgYmFkIGZsb3BzIChsaWtlIGlmIGhlIGhhcyA4NSBoZSBtaWdodCBmb2xkIG9uIEFLUSBmbG9wIGJ1dCB3aWxsIHByb2JhYmx5IGNhbGwgbWUgaW4gdGhlIGRhcmsgbm90IHJlYWxpc2luZyBoZSBjYW4gc2VlIGEgZmxvcCB0aGVuIGRlY2lkZSkuIApPbiBEZWNlbWJlciA1LCB0aGUgVVMgd2FzIGFnYWluIGZydXN0cmF0ZWQgYXQgdGhlIFVuaXRlZCBOYXRpb25zIFNlY3VyaXR5IENvdW5jaWwgYXMgUnVzc2lhIGFuZCBDaGluYSB2ZXRvZWQgYSByZXNvbHV0aW9uIGNhbGxpbmcgZm9yIGEgc2V2ZW4gZGF5IGNlYXNlZmlyZSBpbiBBbGVwcG8uIApBcyBzb29uIGFzIEkgZ290IGJhY2sgaG9tZSBJIGNhbGxlZCBhIGJ1bmNoIG9mIGJhbmtzIHRvIHRyeSB0byBzZWUgaG93IG9uIEdvZCdzIGdyZWVuIGVhcnRoIEkgY291bGQgdXNlIG15IFZBIGxvYW4gYWdhaW4gdG8gbW92ZSBpbnRvIHRoYXQgcHJvcGVydHksIHNvIEkgY291bGQgbW92ZSBpbnRvIHRoaXMgcHJvcGVydHkgd2l0aCBub3RoaW5nIGRvd24uLiAKNC4gR2VuZXJhbCByZWxhdGl2aXR5OiBFaW5zdGVpbiwgMTkxNQpQb2xpY2UgY3JpbWUgbGFiIHNjaWVudGlzdHMgZm91bmQgbm8gZmluZ2VycHJpbnRzIG9uIHRoZSBndW4gYWxsZWdlZGx5IGNhcnJpZWQgYnkgdGhlIG1hbiBzaG90IGJ5IGFuIG9mZmljZXIsIGJ1dCBNaW5uZWFwb2xpcyBQb2xpY2UgQ2hpZWYgVGltIERvbGFuIHdhcyB0ZWxsaW5nIHBlb3BsZSB0aGUgZXhhY3Qgb3Bwb3NpdGUuIERvbGFuIGFsbGVnZWRseSB0b2xkIHRoZSB2aWN0aW0ncyBmYW1pbHkgYW5kIGEgY2l0aXplbidzIHBhbmVsIHRoYXQgdGhlcmUgd2VyZSBwcmludHMgb24gdGhlIGd1biB0byBkb3ducGxheSB0aGUgc2hvb3RpbmcgZGVhdGggb2YgRm9uZyBMZWUgYnkgYSBwb2xpY2Ugb2ZmaWNlci4uIApJdCB3YXMgYSBmdW4gdGFibGUgYW5kIGV2ZXJ5b25lIHdhcyBsYXVnaGluZyBhdCB0aGUgcmlkaWN1bG91cyBzaXR1YXRpb24uIFRoZSB0dXJuIHdhcyBhbm90aGVyIGtpbmcgZ2l2aW5nIHRoaXMgZ2lybCB0b3AgYm9hdCBhbmQgc2Vjb25kIG51dHMuIFNoZSBsYXVnaHMgYW5kIGdvZXMgYWxsIGluIGZvciBoZXIgbGFzdCAzMCBiaWcgYmxpbmRzLgpBc3N1bWVkb3V0dGFrZSBmcm9tICJUaGUgRmFtZSBNb25zIGVyLiIgQ2FuIGJlIGZvdW5kIG9uIFlvdXR1YmUuIDM4IDQ1KSBCYWRSb21hbmNlL0FsZWphbmRyby9Nb25zdGVyL1NwZWVjaGxlc3MvRGFuY2UgSW4gVGhlIERhcmsvVGVsZXBob25lKEZlYXQuIEJleW9uYykvU28gSGFwcHkgSSBDb3VsZCBEaWUvVGVldGggLiAKU28gd2hpbGUgc29tZSBjYW1lIGluIGp1c3QgamVhbnMgYW5kIGEgdCBzaGlydCwgb3RoZXJzIGxheWVyZWQgdXAgaW4gcHJlcGFyYXRpb24uIAoiSSd2ZSBhbHdheXMgZW5qb3llZCBwbGF5aW5nIHRoZSBnYW1lLCBhbmQgcG9rZXIgaGFzIGJlZW4gdmVyeSBnb29kIHRvIG1lLCBwcm92aWRlZCBtZSB3aXRoIGEgZ3JlYXQgc3RhbmRhcmQgb2YgbGl2aW5nIGFuZCBsZXQgbWUgdHJhdmVsIHRoZSB3b3JsZC4iClRoZSBRdWVlbidzIERyaXZlRVg0IDRRSklmIHRoZSBpbmZvcm1hdGlvbiBkaXNjbG9zZWQgaXMgYSBkYXRhc2V0IGFuZCBoYXMgYmVlbiByZXF1ZXN0ZWQgaW4gYW4gZWxlY3Ryb25pYyBmb3JtYXQsIGl0IG11c3QgYmUgcHJvdmlkZWQgaW4gYSByZXVzYWJsZSBmb3JtYXQgdGhpcyBtZWFucyB0aGF0IGl0IHNob3VsZCBiZSBtYWNoaW5lIHJlYWRhYmxlIGFuZCBpbiBhIGZvcm1hdCBiYXNlZCBvbiBvcGVuIHN0YW5kYXJkcywgcmF0aGVyIHRoYW4gYSBwcm9wcmlldGFyeSBmb3JtYXQuIFdlIHdpbGwgbm9ybWFsbHkgcHJvdmlkZSB0aGVzZSBkYXRhc2V0cyBhcyBhIHNwcmVhZHNoZWV0IGluIGEgQ1NWIChjb21tYSBzZXBhcmF0ZWQgdmFsdWUpIGZvcm1hdC4gQWZ0ZXIgYSBkYXRhc2V0IGhhcyBiZWVuIGRpc2Nsb3NlZCBpdCB3aWxsIGJlIHB1Ymxpc2hlZCBvbiB0aGUgVW5pdmVyc2l0eSB3ZWJzaXRlLi4gClRoZXNlIHR3byBmYWN0b3JzIG1hZGUgY3JvcCBmYWlsdXJlIGFuZCBmb29kIHNob3J0YWdlIGRlY2lkZWRseSBtb3JlIHNldmVyZSB0aGFuIGluIHRoZSByZXN0IG9mIEV1cm9wZSBhdCB0aGUgdmVyeSBvdXRzZXQuIFNvIHRoZSBwcm9ibGVtIGlzIGltbWVkaWF0ZWx5IGJpZ2dlciBpbiBJcmVsYW5kIHRoYW4gaXQgaXMgYW55d2hlcmUgZWxzZS4gTm93LCBlbnRlciBhIEJyaXRpc2ggZ292ZXJubWVudCBsYXJnZWx5IHBhcmFseXNlZCBieSBpZGVvbG9naWNhbCBhZGhlcmVuY2UgdG8gZmFpcmUgYW5kIGFic2VudGVlIGxhbmRsb3Jkcy9tZXJjaGFudHMgd2l0aG91dCBhbiBvdW5jZSBvZiBzeW1wYXRoeS4KU2luY2UgdGhlcmUgaXMgbm8gNSd0aCBjYXJkIEknbGwgdXNlIFggZm9yIGl0LiAKT2Z0ZW4sIG9ubHkgbGltaXRlZCBpbmZvcm1hdGlvbiBpcyBhdmFpbGFibGUgYWJvdXQgdGhlaXIgc2FmZXR5IGFuZCBlZmZlY3RpdmVuZXNzLiAKSXQgaXMgbm90YWJsZSB0aGF0IHRoZSB3b21lbiBhcmUgbmFtZWQgYWZ0ZXIgbmF0dXJlLCBCZWUgYW5kIEl2eSwgYXQgdGhlIHRpbWUgbWFua2luZCdzIGdyZWF0ZXN0IGF0cm9jaXR5IGFnYWluc3QgbmF0dXJlLCB0aGUgYXRvbWljIGJvbWIsIHdhcyBjcmVhdGVkLiAKT24gcmVtYXJxdWUgcXVlIGNlcyBhcnRpY2xlcyBwb3J0ZW50IG1lbnRpb24gZCd1bmUgdmVudHVlbGxlIHJlc3RyaWN0aW9uIGR1IG1hcmlhZ2UgIGwnaG9tbWUgZXQgbGEgZmVtbWUsIGVudGVuZHUgY29tbWUgbCd1bmlvbiBkJ3VuIGhvbW1lIGF2ZWMgdW5lIGZlbW1lLiBVbmUgdGVsbGUgbGVjdHVyZSBleGNsdXQgZGUgZmFjdG8gbGVzIG1hcmlhZ2VzIGVudHJlIHBlcnNvbm5lcyBkZSBtbWUgc2V4ZS4KVGhlIHR3byBjYXJkIGhhbmQgaXMgY2FsbGVkIHRoZSAnaW4gZnJvbnQ7JyBpdCBjYW4gYWxzbyBiZSBjYWxsZWQgJ29uIHRvcC4nIE90aGVyIG5hbWVzIGZvciBpdCBhcmUgdGhlIGxvdyBoYW5kLCB0aGUgbWlub3IgaGFuZCwgc21hbGwgaGFuZCBvciBoYWlyLiAKIDEgcG9pbnQgIHN1Ym1pdHRlZCA5IGRheXMgYWdvSSByZWFsaXplIHRoYXQsIEkgd2FzIHNpbXBseSByZXNwb25kaW5nIHRvIHRoZSBzdGF0ZW1lbnQgdGhhdCAiZ2VtcyBkb24gaW5oZXJlbnRseSBtYWtlIHRoZWlyIHJlc3BlY3RpdmUgc3RhdHMgZ29vZCIgICB0aGV5IGRvLCB0byB0aGUgZXh0ZW50IHRoYXQgdGhlcmUgaXMgYSBwYXlvZmYgdG8gb2J0YWluaW5nIGEgc3BlY2lmaWMgYW1vdW50IG9mIHRoZSBhdHRyaWJ1dGUgcmVxdWlyZWQgdG8gdXNlIHRoZSBnZW0uSSBhY3R1YWxseSBraW5kIG9mIHRoaW5rIHRoYXQgYWxsIHRocmVlIGF0dHJpYnV0ZXMgbWF5YmUgb3VnaHQgdG8gZ28gYmFjayB0byBqdXN0IGJlaW5nIHNvbGVseSBmb3IgZ2VtIGFuZCBnZWFyIHJlcXVpcmVtZW50cywgYW5kIHRoZSBib251c2VzIHRoZXkgY3VycmVudGx5IHByb3ZpZGUgY291bGQganVzdCBiZSBtb3ZlZCBvZmYgdG8gb3RoZXIgbm9kZXMgb24gdGhlIHRyZWUuIApCcm93c2UgdGhvdXNhbmRzIG9mIEFzaWFuIHBlcnNvbmFsIGFkcyBhbmQgQXNpYW4gc2luZ2xlcyAgIGNvbXBsZXRlbHkgZm9yIGZyZWUuIApMZSBicnVpdCBtaXMgcGFyIGxlIFNvbmljIFRlZW5hZ2VyIERldGVycmVudCBjb25mZWN0aW9ubiBwYXIgU3RhcGxldG9uIGV0IHF1J2V1eCBzZXVscyBwZXV2ZW50IG91ciwgcG91ciBkZXMgcmFpc29ucyBwaHlzaW9sb2dpcXVlcyBsaWVzICBsJ2dlLCBlc3QgdGVsbGVtZW50IGluc3VwcG9ydGFibGUgcXUnaWxzIHNvbnQgY29udHJhaW50cyBkZSBkY2FtcGVyIHN1ciBsZSBjaGFtcC4gCkFmdGVyIEkgd29uLCBJIHBhaWQgbXkgZGVidHMsIHNwbGFzaGVkIG91dCBvbiBzb21lIG5ldyBzdWl0cywgcGFpZCBHYXJ5IGhvdGVsIGJpbGwgYW5kIHdlbnQgaG9tZSB3aXRoICQ3NDIsMDAwLi4gCkJ1dCB0byBvdmVycmlkZSBhIHZldG8sIGFsbCBEZW1vY3JhdHMgd291bGQgbmVlZCB0byBiZSBqb2luZWQgYnkgMjAgUmVwdWJsaWNhbnMuIFRoaXJ0ZWVuIEdPUCBzZW5hdG9ycyBoYXZlIHNpZ25hbGVkIHRoZXkgZG9uJ3Qgc3VwcG9ydCBUcnVtcCdzIG1vdmUsIGJ1dCBtYW55IG90aGVycyBzYXkgdGhleSBhcmVuJ3QgaW5jbGluZWQgdG8gdW5kbyBpdC5TZW5hdGUgRGVtb2NyYXRpYyBsZWFkZXIgQ2h1Y2sgU2NodW1lciBvZiBOZXcgWW9yayBjYWxsZWQgVHJ1bXAncyBlbWVyZ2VuY3kgZGVjbGFyYXRpb24gYSAiZGVmYWNlbWVudCBvZiBvdXIgY29uc3RpdHV0aW9uYWwgYmFsYW5jZSBvZiBwb3dlcnMgZm9yIHdoYXQgaXQgc2VlbXMgaXMgbGFyZ2VseSBwb2xpdGljYWwgcHVycG9zZXMuIlRoZSBjYWxsIGJ5IFBlbG9zaSBhbmQgU2NodW1lciBmb3IgYSBiaXBhcnRpc2FuIHJlamVjdGlvbiBvZiBUcnVtcCdzIGJvcmRlciB3YWxsIGVmZm9ydCBpcyBhIHRvdWdoIHNlbGwgZm9yIG1hbnkgUmVwdWJsaWNhbnMgd2hvIHJlcHJlc2VudCBzdGF0ZXMgYW5kIGRpc3RyaWN0cyB3aGVyZSBjcmFja2luZyBkb3duIG9uIGlsbGVnYWwgaW1taWdyYXRpb24gaXMgcG9saXRpY2FsbHkgcG9wdWxhci4gCkNoaXBvdGxlJ3Mgc2FtZSBzdG9yZSBzYWxlcyByb3NlIDQuNCBwZXJjZW50IGluIHRoZSB0aGlyZCBxdWFydGVyLCBoZWxwZWQgYnkgaGlnaGVyIHByaWNlcywgd2hpbGUgdHJhbnNhY3Rpb25zIGZlbGwgMS4xIHBlcmNlbnQuIApUaGUgdHJlYXRtZW50IHdpdGggdGhlIG1vc3QgcmVzZWFyY2ggaXMgb21lZ2EgMyBmYXR0eSBhY2lkcy4gU2V2ZXJhbCBzdHVkaWVzIGhhdmUgc2hvd24gdGhhdCBsb3dlciBibG9vZCBFUEEvREhBIHN0YXR1cyBpcyBjb3JyZWxhdGVkIHdpdGggc3ltcHRvbXMgaW4gY2hpbGRyZW4uIFJlc3VsdHMgb2YgaW50ZXJ2ZW50aW9ucyBhcmUgbWl4ZWQgYnV0IHNvbWUgc2hvdyBhIGJlbmVmaXQuClVDTEEgaXMgaG9tZSB0byBhIHNtYWxsIG51bWJlciBvZiBmZXJhbCBjYXRzIHdobyBhcmUgY2FyZWQgZm9yIGJ5IGEgZ3JvdXAgb2Ygdm9sdW50ZWVycyBkcmF3biBmcm9tIHN0YWZmIGFuZCBmYWN1bHR5ICAgdGhlICJDYW1wdXMgQ2F0IE5ldHdvcmsuIiBVQ0xBIHN0YWZmIGFuZCBmYWN1bHR5IHZvbHVudGVlcnMgY29sbGFib3JhdGUgdG8gbWFpbnRhaW4gYW5kIGNhcmUgZm9yIHRoZXNlIGFuaW1hbHMgd2l0aCB0aGUgbWFpbiBmb2N1cyBvbiByZXBsZW5pc2hpbmcgZm9vZCBhbmQgd2F0ZXIgYXQgZXN0YWJsaXNoZWQgZmVlZGluZyBzaXRlcy4gCkV0IHBvdXIgdGVybWluZXIsIG5vdXMgYXZvbnMgdm9xdSBsZSByZXBvcnQgZGVzIHZlbnRlcyAgbGEgc2F1dmV0dGUgbGVzIGpvdXJzIGRlIG1hcmNoIHN1ciBsYSBydWUgU3RlcGhlbnNvbiBldCBsZSBwb250IGRlIEplc3NhaW50LiAKV2FzIGNvbmNlcm5lZCB0aGF0IHRoaXMgd2FzIG5vdCBhIGZhbWlseSBidXNpbmVzcyBJIHdvcmtlZCBhdCBzdWNjZXNzaW9uIGZvciBhIHdoaWxlLCBidXQgbXkgY2hpbGRyZW4gaGFkIHRoZWlyIG93biBnb2Fscy4gV2VyZSBvdGhlciBzZXRiYWNrcy5JbiAyMDEzLCBhIHdvbWFuIHN1ZWQgSm95Y2UgZm9yICQ3LjUgbWlsbGlvbiwgYWxsZWdpbmcgaGUgc2V4dWFsbHkgYXNzYXVsdGVkIGhlciBpbiBoaXMgQnVybGluZ3RvbiBob21lLiBKb3ljZSBmbGF0bHkgZGVuaWVkIHRoZSBjaGFyZ2UsIGNsYWltaW5nIHRoZSB3b21hbiB3YXMgYXR0ZW1wdGluZyB0byBleHRvcnQgaGltLiAKVGhpbmsgb2YgYW4gYXJ0aXN0IHlvdSBsaWtlIG9yIHRoYXQgaGFzIHF1YWxpdGllcyB0aGF0IHlvdSBsaWtlIHRvIHNlZSBpbiBvdGhlciBtdXNpY2lhbnMuIApDbGVhcmx5LCB0aGUgaXNzdWUgaXMgZmFyIGZyb20gcmVzb2x2ZWQsIGJ1dCBKb2huIFBhcHBhcywgZXhlY3V0aXZlIGRpcmVjdG9yIG9mIHRoZSBQb2tlciBQbGF5ZXIncyBBbGxpYW5jZSwgaXMgZW5jb3VyYWdlZCBieSB0aGUgbGF0ZXN0IHJ1bGluZyBieSBKdWRnZSBKYWNrIEIuIFdlaW5zdGVpbi4gIlRvZGF5J3MgZmVkZXJhbCBjb3VydCBydWxpbmcgaXMgYSBtYWpvciB2aWN0b3J5IGZvciB0aGUgZ2FtZSBvZiBwb2tlciBhbmQgdGhlIG1pbGxpb25zIG9mIEFtZXJpY2FucyB3aG8gZW5qb3kgcGxheWluZyBpdCwiIGhlIHNhaWQgaW4gYSBzdGF0ZW1lbnQuIApNYXliZSB0aGF0IG1lYW5zIHdlIGhhdmUgdG8gZGVhbCB3aXRoIGEgcmVzdXJnZW5jZSBpbiBSdWJlbGxhIHNvbWUgZGF5IGJ1dCBhdCBsZWFzdCB0aGVuIG1vcmUgcGVvcGxlIHdpbGwgYmUgdmFjY2luYXRlZCBhZ2FpbnN0IE1lYXNsZXMgYW5kIE11bXBocy4gQXQgbGVhc3QgdW50aWwgdGhlIHN1cGVyLCB2YWNjaW5lIHJlc2lzdGFudCBzdHJhaW5zIGNvbWUgYXJvdW5kLiBBbnl3YXksIEkgZ29ubmEgcG9zdCBteSBvcmlnaW5hbCBjb21tZW50IG92ZXIgYXQgdGhlIGR1cGxpY2F0ZSBwb3N0IHRvIHRoaXMgb25lIGdvaW5nIG9uIGluIHIvc2NpZW5jZSBhbmQgc2VlIGlmIEkgY2FuIGdldCBhbiBhbnN3ZXIuLiAKU28gYWxsIG9mIHRoZSBQU0FzIGFyZSBob3BlZnVsLiBUaGV5IHRhbGsgYWJvdXQgd2hhdCBoYXBwZW5lZCwgYnV0IHRoZW4gdGhleSB0YWxrIGFib3V0IGhvdyB0aGVzZSBwZW9wbGUgYXJlIGNvbWluZyBvdXQgb2YgaXQsIG9yIGhvdyB0aGV5IHVzZWQgd2hhdCBoYXBwZW5lZCB0byB0aGVtIHRvIGNoYW5nZSBvdGhlciBsaXZlcy4KRWFjaCB0cmFkZXIgcmVjZWl2ZWQgcmVhbCBtb25leSBhbmQgc3RvY2sgbGlrZSBmaW5hbmNpYWwgYXNzZXRzLCB3aGljaCBwYWlkIGRpdmlkZW5kcyB3aXRoIGtub3duIHByb2JhYmlsaXR5LiBUcmFkZXJzIGNvdWxkIGNhbGN1bGF0ZSB0aGUgdHJ1ZSB2YWx1ZSBvZiB0aGUgYXNzZXRzIGFuZCB0cnkgdG8gbWFrZSBtb25leSBieSBidXlpbmcgYmVsb3cgZmFpciB2YWx1ZSBhbmQgc2VsbGluZyBhYm92ZSBpdC4gClRoZSBoYXBwaWVzdCBvZiBwZW9wbGUgZG9uIG5lY2Vzc2FyaWx5IGhhdmUgdGhlIGJlc3Qgb2YgZXZlcnl0aGluZzsgdGhleSBqdXN0IG1ha2UgdGhlIG1vc3Qgb2YgZXZlcnl0aGluZyB0aGF0IGNvbWVzIGFsb25nIHRoZWlyIHdheS4KVGhlIGNhcGl0dWxhdGlvbiB3YXMgbm90IGEgZGlzdHJhY3Rpb24uIEZvciBvbmUsIHRoZSBpZGVhIHRoYXQgVHJ1bXAgd291bGQgcHVycG9zZWZ1bGx5IHNlZWsgdG8gImRpc3RyYWN0IiBmcm9tIGFub3RoZXIgbmV3cyBzdG9yeSBieSBhbmdlcmluZyBoaXMgYmFzZSBhbmQgbG9va2luZyB3ZWFrIGluIGNvbXBhcmlzb24gdG8gdGhlIEhvdXNlIERlbXMgaWdub3JlcyBoaXMgY2hhcmFjdGVyIGVudGlyZWx5LiBUcnVtcCB3b3VsZCBuZXZlciBzZWVrIHRvICJkaXN0cmFjdCIgYnkgb3Blbmx5IHRhcm5pc2hpbmcgaGlzIG93biBlZ28uIE5vIGZ1Y2tpbmcgd2F5LgpJIHVzZWQgdGhlIHRlY2huaXF1ZSBpbiB0b2RheSdzIHNwaWNlcmljaCBsZW50aWwgZGFsLCBhIHNvdXAgYnVyc3Rpbmcgd2l0aCBmbGF2b3VyLldoZW4gdXNpbmcgZ3JvdW5kIHNwaWNlcyBvciBzcGljZSBibGVuZHMgaW4gY29sZCBwcmVwYXJhdGlvbnMgc3VjaCBhcyBzYWxhZHMgYW5kIHNhbmR3aWNoIGZpbGxpbmdzLCBpbiBtb3N0IGNhc2VzIEkgZmluZCB0aGVyZSdzIG5vIG5lZWQgdG8gYmxvb20gdGhlbSBpbiBob3Qgb2lsIGJlZm9yZSBtaXhpbmcgdGhlbSBpbi5TdG9yZSBib3VnaHQgZ3JvdW5kIHNwaWNlcyBhcmUgZmluZWx5IGdyb3VuZCBhbmQgdGhlIG1vbWVudCB0aGV5IGNvbWUgaW4gY29udGFjdCB3aXRoIGEgd2V0IGluZ3JlZGllbnQsIHN1Y2ggYXMgbWF5b25uYWlzZSBvciB2aW5haWdyZXR0ZSwgdGhlaXIgZmxhdm91ciBiZWdpbnMgdG8gYmxvb20uIApJIGV2ZW4gaGF2ZSBhbiBvcmcgZmlsZSB0aGF0IEkga2VlcCByZWNlbnQgZGlzY292ZXJpZXMgaW4gc28gSSBjYW4gbG9vayB0aGVtIHVwIGVhc2lseSB1bnRpbCBpdCB0dXJucyBoYWJpdHVhbC4gClRvIHByb3ZpZGUgdGhlIG1vc3QgZWZmZWN0aXZlIHNlcnZpY2VzIGFuZCBjb3Vuc2VsaW5nLCBhIHNvY2lhbCB3b3JrZXIgbXVzdCBkZXZlbG9wIHRoZSBhYmlsaXR5IHRvIGxpc3RlbiBjYXJlZnVsbHkgYW5kIHBheSBhdHRlbnRpb24gdG8gZGV0YWlscy4gCkZvciBkZXRhaWxzIG9mIGNlbGVicmF0aW9uIG9mIGxpZmUsIHBsZWFzZSBjYWxsIFN0ZXBoIGF0IDkwNSA3NDUgMTc4Ni4gClNleCBhbmQgYWZmZWN0aW9uIGlzIGEgaHVtYW4gbmVlZCwganVzdCBsaWtlIGZvb2QgaXMuIElmIHlvdSBkb24gZmVlZCBzb21lb25lIGVub3VnaCwgdGhlbiBubyBhbW91bnQgb2YgImp1c3Qgd29yayBoYXJkZXIiIGlzIGdvaW5nIHRvIG1ha2UgdGhlbSBhIGJldHRlciBhdGhsZXRlLiAKWW91IGhhdmUgdGhlIG9wdGlvbiBvZiBjaG9vc2luZyB0cmFkaXRpb25hbCwgc3RhbmRhcmQgY29sb3JzIHN1Y2ggYXMgZ3JlZW4sIHJlZCwgYW5kIGJsdWUuLiAKSXQgaXMgYmVzdCB0byBicmluZyB0aGUgc29ja3MgYWxvbmcgYW5kIHB1dCB0aGVtIG9uIHdoZW4geW91IGFyZSB0cnlpbmcgb24gd2Fsa2luZyBzaG9lcy4gCiJDJ3RhaXQgdW4gY291cCBkZSBwb2tlciwgamUgbCdhaSBqb3UgY29tbWUgYSIsIGF2ZWMgdW4gc2ltcGxlIGV0IGlub2ZmZW5zaWYgdmlzZXVyIGxhc2VyLCBhZmZpcm1lIHQgaWwgIGxhIGJhcnJlLiAKQXMgc29vbiBhcyBJIGNsaWNrZWQgdGhlIGxpbmsgSSBrbmV3IHRoaXMgd2FzIGdvaW5nIHRvIGJlIG9sZCBzcGljZSEgTXkgZGFkIGhhZCB0aGUgc2FtZSByZWFjdGlvbiB0byB0aGVpciBib2R5IHdhc2ghIE15IG1vbSBjb250YWN0ZWQgdGhlIGNvbXBhbnkgYW5kIGFsbCB0aGV5IGRpZCB3YXMgbWFpbCBoZXIgY291cG9ucyBmb3IgbW9yZSBvZiB0aGUgc2FtZSBwcm9kdWN0LiBMb2wgbm8gdGhhbmtzLgpNeSBraWRzIGhhdmUgYW4gYXJzZW5hbCBvZiBOZXJmIHdlYXBvbnMgKFN3b3JkcywgcGlzdG9scywgcmlmbGVzLCBiZWx0IGZlZCBtYWNoaW5lIGd1bnMsIGV0YykuIE15IHdpZmUgZnJpZW5kIHdhcyBzaG9ja2VkIHdoZW4gaGVyIHNvbiBrZXB0IHJ1bm5pbmcgZG93bnN0YWlycyB0byBzaG93IG9mZiB0aGUgbmV3IE5lcmYgd2VhcG9uIGhlIGRpc2NvdmVyZWQsIGV5ZXMgZ2xpbnRpbmcgaW4gYWJzb2x1dGUgam95Li4gClBhbGV0dGVzIGVuY29yZSBldCB0b3Vqb3VycyBzb3VzIGxlcyBhcmNhZGVzIHJ1ZSBkZSBsYSBHb3V0dGUgZCdvcgpUaGlzIGdhbWUgaXMgZGVyaXZlZCBmcm9tIHRoZSBGaXZlIENhcmQgU3R1ZCBmb3JtIG9mIHBva2VyLiAKVGhlbkkgdHlwaWNhbGx5IHBhdXNlIG15IGFkcyBmb3IgYWJvdXQgYSB3ZWVrIGFuZCB0aGVuIHN0YXJ0IGFsbCBvdmVyd2l0aCBuZXcgYWRzLiBObyBwcm9ibGVtLiBVbnRpbCBJIHN0YXJ0IGdldHRpbmcgYSBmYWlyIG51bWJlciBvZmhpdHMsIHRoZW4gSSBhbSBvbmNlIGFnYWluIGluZm9ybWVkIHRoYXQgSSBtdXN0IGluY3JlYXNlIG15IGJpZHMgdG90aGUgJDMuNTAgcGVyIGNsaWNrIHRvICQxNC4wMCBwZXIgY2xpY2sgcmFuZ2UuIAoiV2UgYmVsaWV2ZSBDb3JleSBpcyB0aGUgYmVzdCBwb3NzaWJsZSBmaXQgdG8gaGVscCBicmluZyB0aGUgVG9yb250byBBcmdvbmF1dHMgZm9vdGJhbGwgY2x1YiBiYWNrIHRvIHRoZSB0b3Agb2YgdGhlIENGTCwiIHRlYW0gcHJlc2lkZW50IEJpbGwgTWFubmluZyBzYWlkIGluIGEgcmVsZWFzZS4gIk91ciBvcmdhbml6YXRpb24ncyB1bHRpbWF0ZSBnb2FsIGlzIHRvIHdpbiBHcmV5IEN1cHMgZm9yIG91ciBjaXR5IGFuZCBmYW5zIGFuZCBicmluZ2luZyBDb3JleSBiYWNrIHRvIFRvcm9udG8gaXMgdGhlIGZpcnN0IHN0ZXAgaW4gcmVhY2hpbmcgdGhvc2UgZ29hbHMuIi4gCk9rYXkgcmVkZGl0ICBuZWVkIHlvdXIgaGVscCEgSW4gVGV4YXMuIEkgYW0gYSBtYXJyaWVkIGZlbWFsZS4gTXkgaHVzYmFuZCBhbmQgSSB3ZW50IHRvIGEgcG9wdWxhciBtYXNzYWdlIHN0dWRpbyBsYXN0IG5pZ2h0LiBNeSBtYXNzYWdlIGdpcmwgY29tZXMgaHVmZmluZyBhbmQgcHVmZmluZyAxNSBtaW5zIGxhdGUuIEltbWVkaWF0ZWx5IHVwb24gd2Fsa2luZyBpbiB0aGUgcm9vbSBzaGUncyB0ZWxsaW5nIG1lIHNoZSBuZWVkcyB0byBsZWF2ZSBpbW1lZGlhdGVseSBhZnRlciBoZXIgc2hpZnQgYmVjYXVzZSBzaGUgaGFzIHNvbWUgdW5pZGVuaXRpZmVkIHJhc2gvYWxsZXJnaWMgcmVhY3Rpb24gdG8gc29tZXRoaW5nPyBTaGUgdGhlbiB0ZWxscyBtZSBzaGUncyBub3QgdXNpbmcgaGVyIGZvcmVhcm1zIG9yIGVsYm93cyBiZWNhdXNlIG9mIHRoaXMgInJhc2guIiBJIGFza2VkIGlmIEkgc2hvdWxkIHJlc2NoZWR1bGUgYW5kIHNoZSBzYWlkIG5vLiBTaGUgc2hvd2VkIG1lIGhvdyBzaGUgd2FzIGNvdmVyZWQgaW4gdGhlc2UgImJpdGVzIiAgaG9uZXN0bHkgaXQgbG9va2VkIGxpa2UgcG9pc29uIGl2eS4gSXQgbG9va2VkIG5vdGhpbmcgbGlrZSBidWcgYml0ZXMgYXMgc2hlIGNsYWltZWQuClRoaXMgaXMgdGhlIGtpbmQgb2YgYXR0aXR1ZGUgdGhhdCB0dXJucyBwb3N0cyBsaWtlIHlvdXJzIGludG8gYSBzZWxmIGZ1bGZpbGxpbmcgcHJvcGhlY3kuICJKdXN0IGdpdmUgdXAgYW5kIGdvIHdpdGggd2hhdCB5b3UgYWx3YXlzIGdvbmUgd2l0aCIgaXMgdGhlIHN1cmVzdCBwb3NzaWJsZSB3YXkgdG8gbWFrZSBzdXJlIG5vdGhpbmcgZXZlciBjaGFuZ2VzLiBCZSB0aGUgY2hhbmdlIHlvdSB3YW50IHRvIHNlZSBpbiB0aGUgZ2FtZS4gCkluIHlvdXIgZm9ybWF0IG5vdCBvbmx5IHdpbGwgeW91IGhhdmUgdG8gZHJpdmUgdG8gdGhlIHBlcnNvbiwgYnV0IG9uY2UgdGhlcmUgeW91IGhhdmUgdG8gd2FpdCBmb3IgdGhlbSB0byBjb21lIHRvIHlvdS4gU28geW91IGFyZSBsb29raW5nIGF0IGhhdmluZyBhZGp1c3QgeW91ciBwcmljZXMgdG8gY292ZXIgd2hhdCBJIGFzc3VtaW5nIGlzIGdvaW5nIHRvIGJlIGFuIFJWKHRvIGZpdCBoYW5kIGJpa2VzIGFuZCBzaGl0IGluIGl0KSwgdGhlIHVwa2VlcCBvbiB0aGUgUlYsIHRoZSBkb3dudGltZSBiZXR3ZWVuIHBhdGllbnRzLCBhbmQgdGhlIG5vbiBiaWxsaW5nIG9mIGhlYWx0aCBpbnN1cmFuY2UsIGFsbCBqdXN0IHRvIG1lZXQgY29zdC4gCkkgdGVsbCBteSBndWVzdHMgdGhhdCBJIGRvIGEgc2NhbGUgZnJvbSAxIDUgYXMgZmFyIGFzIHByZXNzdXJlIGdvZXMgYW5kIHdlIHN0YXJ0IGF0IGEgMSBvciBhIDIgYW5kIHdvcmsgb3VyIHdheSB1cC4gCk5vdGUgdGhhdCB0aGUgZ2FtZSBjb3VsZCBlbmQgYmVmb3JlIG9yIGFmdGVyIHRoYXQgbGV2ZWwgICBkZXBlbmRzIG9uIGhvdyBwZW9wbGUgYXJlIHBsYXlpbmcgYW5kIHdoZXRoZXIgdGhlcmUgYXJlIGFueSBjb29sZXIgaGFuZHMgbGlrZSBBSyB2IFFRIG9yIHNvbWV0aGluZyBoZWFkcyB1cC4uIAo5MCBEYXkgRmlhbmNlClRoaXMgd2lsbCBhbGxvdyB0aGVtIHRvIHN0b3AgeW91IGFzIHNvb24gYXMgeW91IGhhdmUgYSBxdWVzdGlvbi4uIApIb3dldmVyLCBiZWluZyBmcm9tIHRoYXQgY296eSwgcHJvZml0YWJsZSBtYXRyaXggZG9lc24ndCBtZWFuIHlvdSBoYXZlIHRvIGxldCBldmVyeW9uZSBrbm93IGl0ISBJbiBzYXlpbmcgdGhhdCwgeW91IGJhc2ljYWxseSBuZWVkIHRvIGdldCBidXN0ZWQgb25jZSBpbiBhd2hpbGUgd2l0aCB0aG9zZSBtYXJnaW5hbCBoYW5kcy4gCkJvdGggYXJlIGdvb2QgdGFsa2VycyBhbmQgYm90aCB3aXRoIGRlZXAgYmVsaWVmIGluIHRoZWlyIGZpZ2h0aW5nIGFiaWxpdHkuIApEbyB5b3UgZXZlciB3b25kZXIgd2hhdCBtYWtlcyB1cCBibG9vZD8gVW5sZXNzIHlvdSBuZWVkIHRvIGhhdmUgYmxvb2QgZHJhd24sIGRvbmF0ZSBpdCBvciBoYXZlIHRvIHN0b3AgaXRzIGZsb3cgYWZ0ZXIgYW4gaW5qdXJ5LCB5b3UgcHJvYmFibHkgZG9uJ3QgdGhpbmsgbXVjaCBhYm91dCBpdC4gQnV0IGJsb29kIGlzIHRoZSBtb3N0IGNvbW1vbmx5IHRlc3RlZCBwYXJ0IG9mIHRoZSBib2R5LCBhbmQgaXQgaXMgdHJ1bHkgdGhlIHJpdmVyIG9mIGxpZmUuIEV2ZXJ5IGNlbGwgaW4gdGhlIGJvZHkgZ2V0cyBpdHMgbnV0cmllbnRzIGZyb20gYmxvb2QuIFVuZGVyc3RhbmRpbmcgYmxvb2Qgd2lsbCBoZWxwIHlvdSBhcyB5b3VyIGRvY3RvciBleHBsYWlucyB0aGUgcmVzdWx0cyBvZiB5b3VyIGJsb29kIHRlc3RzLiBJbiBhZGRpdGlvbiwgeW91IHdpbGwgbGVhcm4gYW1hemluZyB0aGluZ3MgYWJvdXQgdGhpcyBpbmNyZWRpYmxlIGZsdWlkIGFuZCB0aGUgY2VsbHMgaW4gaXQuClRoYXQgc2ltcGx5IGNhbid0IGJlIGVxdWFsZWQhLiAKSGUgaXMgY2hhcmFjdGVyaXplZCBieSB0aGUgY29vbCBhbmQgY2FzdWFsIHRlbXBlciB0aGF0IGhlIGhvbGRzIGV2ZW4gZHVyaW5nIHRoZSBnYW1lLiAKV2FzIGEgc2VhIG9mIHdoaXRlIGZhY2VzIHRoYXQgY2FtZSBvdXQuIApXaXRoIG1vc3Qgb2YgdGhlIHN1cHBsZW1lbnRhbCBtb25leSBnb2luZyB0byBpbmNyZWFzaW5nIHRoZSBudW1iZXIgb2YgVVMgdHJvb3BzIGluIEFmZ2hhbmlzdGFuLCBkZXNwaXRlIHRoZSBmYWN0IHRoYXQgdGhlcmUgaXMgbm8gcmVhbCBleGl0IHN0cmF0ZWd5IGFuZCBubyBvbmUgaW4gdGhlIHdvcmxkLCBub3QgZXZlbiBvdXIgY2xvc2VzdCBhbGxpZXMsIGJlbGlldmUgdGhlIHdhciBpcyB3aW5uYWJsZS4gClRIRSBHQUxXQVkgQ29tZWR5IEZlc3RpdmFsIGlzIGluIGZ1bGwgc3dpbmcgYW5kIGZyb20gdG9kYXkgdW50aWwgTW9uZGF5IHlvdSBoYXZlIHBsZW50eSBvZiBnb29kIHJlYXNvbnMgdG8gZ2V0IG91dCBhbmQgaGF2ZSBhIGxhdWdoIHdpdGggYWxsIHRoZSBncmVhdCBzaG93cyB0aGF0IGFyZSBvbi4gSWYgeW91IGFyZSBzdGlsbCBkZWNpZGluZyBjaGVjayBvdXQgdGhpcyBkYXkgYnkgZGF5IGxpc3RpbmcuClllcywgSSBnb2luZyB0byBkZWZlbmQgTHltb25kLCBpbiBzcGl0ZSBvZiBoaXMgaG9ycmlibGUgaG9iYmllcyBvZiB0aGlldmluZywgYXJzb24sIGFuZCBzbWFzaGluZyBoZWFkcyBvZiByYW5kb20gbG9yZHMsIGJ1dCBJIGFkbWl0IGl0IGRpZmZpY3VsdCA7IGRvZXMgaXQgaGVscCBpZiBJIHNheSBoZSBhIHRhbGVudGVkIG11c2ljaWFuIGFuZCBjaGlsZHJlbiBsaWtlIGhpbT8gT3IgdGhhdCB0b2RheSB2aW9sZW5jZSBpc24ganVzdCBiZWNhdXNlIGhlIGVuam95cyBpdD8KVGhlIHJlY2VwdGlvbmlzdCwgd2hvIHdvdWxkIHByb3ZpZGUgb25seSBoaXMgZmlyc3QgbmFtZSwgU2VhbiwgYWRkZWQgdGhhdCBUaWFuIGhhZCBiZWVuIHdpdGggdGhlIHNwYSBmb3IgYSBkZWNhZGUuIFRoZSB3b3JrZXIgc2FpZCBoZSBoYWRuJ3QgaGVhcmQgb2YgdGhlIGFsbGVnYXRpb25zLgpJIGxpa2VkIHRoZSBsYXN0IGVwaXNvZGUgdGhhdCByZXZlYWxzIGhvdyBtdWNoIGluZmx1ZW5jZSB0aGUgc2lkZSBjaGFyYWN0ZXJzIGxpa2UgWmVsZGEgaGF2ZSBvbiB0aGUgd2hvbGUgc3RvcnkuIEkndmUgbmV2ZXIgbG92ZWQgYSBzaG93IGFzIG11Y2ggYXMgVGhlIE1hZ2ljaWFucy4gSSd2ZSBiYXNpY2FsbHkgYmVlbiBjb3VudGluZyB0aGUgZGF5cyB1bnRpbCBzZWFzb24gZm91ciEgSSBkbyBoYXZlIGEgY291cGxlIHF1ZXN0aW9ucyB0aGF0IEkgaG9wZSB5b3UgY291bGQgY2xlYXIgdXAuCkl0IGlzIHlvdXIgam9iIHRvIHVzZSB0aGUgdHdvIGNhcmRzIGluIHlvdXIgcG9zc2Vzc2lvbiB0aGF0IG5vIG9uZSBlbHNlIGNhbiBzZWUgYW5kIGFueSB0aHJlZSBjb21tdW5pdHkgY2FyZHMgdG8gbWFrZSB0aGUgYmVzdCBmaXZlIGNhcmQgaGFuZC4gQWZ0ZXIgdGhlIHRocmVlIGNvbW11bml0eSBjYXJkcyBhcmUgZGlzcGxheWVkLCBhbm90aGVyIHJvdW5kIG9mIGJldHRpbmcgY29udGludWVzLiBBZnRlciB0aGF0IHJvdW5kLCBvbmUgbW9yZSBjYXJkIGlzIGRlYWx0IGZhY2UgdXAgdG8gdGhlIGNvbW11bml0eSBjYXJkIGFuZCB0aGlzIHByb2Nlc3MgY29udGludWVzIHVudGlsIHRoZXJlIGFyZSBmaXZlIGNhcmRzIGluIHRoZSBjb21tdW5hbCBhcmVhLiAKUmljayBKb25lcyAoUiBHcmFuZCBMZWRnZSkgc2FpZCBoZSBnb3QgY2FsbHMgZnJvbSBjaGFyaXRpZXMgZnJvbSBhbGwgb3ZlciBNaWNoaWdhbiB3aG8gYXNrZWQgZm9yIGEgc29sdXRpb24gdGhhdCBwcm90ZWN0cyB0aGVpciBzb3VyY2Ugb2YgZnVuZHJhaXNpbmcuIFRob3NlIGNoYXJpdGllcyBhcmUgbm93IGZvY3VzaW5nIG9uIGNvbnZpbmNpbmcgbWVtYmVycyBvZiB0aGUgSG91c2UgdG8gZG8gdGhlIHNhbWUuICJUaGUgcHJvZml0YWJpbGl0eSBvZiB0aGUgZXZlbnRzIHdpbGwgYmUgbWFpbnRhaW5lZCB3aXRoIFNlbi4gCkhhdmUgY2hhaXJzIHRoYXQgc2VlbSBzbWFsbCBpbiBhIGxhcmdlIHNob3cgcm9vbSwgYnV0IHB1dCB0aGVtIGludG8gYSBzbWFsbGVyIHNwYWNlIGFuZCB0aGV5IGFyZSBwZXJmZWN0LCBzaGUgc2F5cy4KQWxzbyBmcmVlemVzIGZvciBhIGZldyBzZWNvbmRzIChvciBsb25nZXIpIGlmIGEgcGVhY2Ugb3Igb3RoZXIgdHJlYXR5IGdvZXMgdXAuIApEdm91LCBhZmZhYmxlLCBodW1ibGUsIGNvbW1lIGxlIHJlbGF0ZSBsYSBSZXZ1ZSBkIGRlIGxhIFBoYXJtYWNpZSAobiAxNDUsIDE5NTUsIHAuIApIZSBzdWdnZXN0cyB0aGF0LCBpbiBjYXNlcyB3aGVyZSB0aGUgaW5kaXZpZHVhbCBmYWlscyB0byBjb250cm9sIGhhcm1mdWwgYmVoYXZpb3IsIHRoZXkgaW5zdGVhZCBiZSBkaWFnbm9zZWQgd2l0aCBhIG9yLiBQYXJ0aWFsaXNtIHJlZmVycyB0byBmZXRpc2hlcyBzcGVjaWZpY2FsbHkgaW52b2x2aW5nIG5vbiBzZXh1YWwgcGFydHMgb2YgdGhlIGJvZHkuIE1vc3QgbWVuIGZpbmQgdmFnaW5hbCBibGVlZGluZyB0byBiZSByZXZvbHRpbmcgYW5kIHV0dGVybHkgdW5zZXh5LCBidXQgdGhlcmUgYXJlIGEgZmV3IG9uIHRoZSBvdGhlciBlbmQgb2YgdGhlIHNwZWN0cnVtLiAKVGhlIFByb2R1Y3Rpdml0eSBDb21taXNzaW9uIGluIDIwMTAgZXN0aW1hdGVkIGFib3V0IDk1LDAwMCAicHJvYmxlbSBnYW1ibGVycyIgYWNyb3NzIEF1c3RyYWxpYSBhY2NvdW50ZWQgZm9yIGFib3V0IDQwIHBlciBjZW50IG9mIGFsbCBwb2tlciBtYWNoaW5lIGxvc3Nlcy4gU3QgTHVrZSBBbmdsaWNhcmUgcmVnaW9uYWwgZGlyZWN0b3IgQ2Fyb2x5biBXYWxsYWNlIHNhaWQgbG93IGluY29tZSBhcmVhcyB3ZXJlIGhpdCB0aGUgaGFyZGVzdCBieSB0aGUgaW1wYWN0IG9mIHBva2VyIG1hY2hpbmVzLiAKVGhpcyBpcyBob3cgdGhlIHJvbGwgc2hvdWxkIGZlZWwuIApOaWdodCB0YXVnaHQgbWUgYSBsb3QuIApJdCB3YXMKKE92ZXI1MCBwb2ludHMgd2VyZSBzY29yZWQgb24gdXMuIDUwLiAKU2hlJ2QgcmVhZCBteSBqb3VybmFscyB0byB0cnkgYW5kIGZpbmQgb3V0IGlmIEkgd2FzIGhhdmluZyBzZXguIApJIHBvdXJlZCBzbyBtdWNoIGVtb3Rpb25hbCBsYWJvciBpbnRvIG15IE1JTCB3aGlsZSB0cnlpbmcgdG8gZGVjbHV0dGVyIG15IHBhcnRuZXIgb2xkIGJlZHJvb20gdG8gY2hpbGRwcm9vZiBpdCBmb3Igb3VyIHZpc2l0cy4gCk9ubHkgZG8gdGhleSByZWZ1c2UgdG8gbmVnb3RpYXRlIHRoZWlyIGFsYXJtaW5nbHkgaW5zdWZmaWNpZW50IHBvbGx1dGlvbiByZWR1Y3Rpb24gdGFyZ2V0LCB0aGlzIHdlZWsgdGhlIFVTIHJlZnVzZWQgdG8gZGlzY3VzcyBob3cgdGhleSB3aWxsIG1lZXQgZmluYW5jaWFsIHBsZWRnZXMgdGhleSBoYXZlIGFscmVhZHkgbWFkZS4uIApVbmQgU29ubnRhZywgZGVuIDMuIApJbiBhbiBvbmxpbmUgY2FzaW5vLCBpdHMgdXN1YWxseSBqdXN0IGEgbWF0dGVyIG9mIHVzaW5nIGEgY3JlZGl0IGNhcmQgb3Igc2VuZGluZyBhIG1vbmV5IG9yZGVyL3dpcmUgdHJhbnNmZXIgdG8gdGhlIG9ubGluZSBjYXNpbm8gdG8gZ2V0IHlvdXIgdmlydHVhbCBiYW5rcm9sbCBzdGFydGVkLiBUaGVyZSBhcmUgbm8gcmVhbCBjaGlwcywganVzdCBpY29ucyB0aGF0IHJlcHJlc2VudCBjaGlwcywgd2hpY2ggYXJlIGluIGZhY3QgdmlydHVhbCBudW1iZXJzLiBldGMuIEFsbCB5b3UgZG8gaXMgY2xpY2sgYSBtb3VzZSBidXR0b24gYW5kIHlvdXJlIGRvbmUuIEl0IGNhbiBiZSBkb25lIHNvIGZhc3QgdGhhdCBpZiB5b3UgZG9udCB0YWtlIGEgYnJlYXRoOyBpdHMgZWFzeSB0byBoYXZlIHlvdXIganVkZ21lbnQgdGhyb3duIG9mZiBieSBlbW90aW9uLgpJbiB0aGUgcGVyaW9kIDE5OTkgICAyMDA5LCB0aGUgUyA1MDAgZmVsbCBieSAwLjglIHllYXIgb24geWVhciBob3dldmVyOyBieSBjb21wYXJpc29uLCB0aGUgUyBBZnJpY2EgZ3JldyBieSBvdmVyIDIzJSIuVGhlIG1hbmFnZW1lbnQgY29uc3VsdGluZyBmaXJtLCBNY0tpbnNleSwgaXMgc2ltaWxhcmx5IHVwIGJlYXQuIApJIHBsYXlpbmcgdGhyb3VnaCBGIFplcm8gWCBhbmQgaGF2aW5nIGEgYmxhc3QuIApCdXQgaGV5LCBpdCBhIHBhcnR5IGFuZCBjb3JkIGN1dHRlcnMgYXJlIHByb2JhYmx5IGdvaW5nIG92ZXIgdG8gdGhlaXIgYm9zc2VzIGhvdXNlIGFuZCBtYXliZSB3ZSBjYW4gZ2V0IHRoZW0gaW50ZXJlc3RlZC4gRWFzdCBjb2FzdC9XZXN0IGNvYXN0IHJpdmFscnkgcmlnaHQ/IFRoZW4gdGhleSBnb3Qgc29tZSBtZWRpb2NyZSBjb21tZXJjaWFscyB0aGF0IGNvc3QgYSBmb3J0dW5lIHRvIGludGVycnVwdCBhIGJvcmluZyBmb290YmFsbCBnYW1lLgpTaGFtZSBvbiB5b3UsIGJpbWJvLiAKR3Vlc3MgSSdtIGNhbGxpbmcgdG8gZmluZCBvdXQgd2hhdCB0aGUgcmVhc29uIGlzLiAKMiBEZWNrIERlbHV4ZSBXb29kZW4gQ2FyZCBTaHVmZmxlciBDcml0aWNhbCBPdmVydmlldwpUaGVzZSBhcmUgZ3JvdXBlZCBpbnRvIGZvdXIgbWFpbiBjYXRlZ29yaWVzOlRlY2huaWNhbGx5IG5lY2Vzc2FyeSBjb29raWVzLiBTb21lIGVzc2VudGlhbCBmdW5jdGlvbnMgb2Ygb3VyIFdlYnNpdGVzIGFuZCBBcHBzIGFyZSBvbmx5IHBvc3NpYmxlIGlmIGluZm9ybWF0aW9uIGlzIHN0b3JlZCBwZXJzaXN0ZW50bHkgYmV0d2VlbiBlYWNoIHBhZ2UgeW91IGxvb2sgYXQuIEZvciBpbnN0YW5jZSwgaWYgeW91IGxvZyBpbiB0byBhIHNpdGUgdG8gYWNjZXNzIHN1YnNjcmliZXIgb25seSBjb250ZW50LCB3ZSB1c2UgYSBjb29raWUgdG8gcmVtZW1iZXIgdGhhdCB5b3UgYXJlIGxvZ2dlZCBpbiwgc28geW91IGRvIG5vdCBoYXZlIHRvIGVudGVyIHlvdXIgZGV0YWlscyBvbiBlYWNoIHBhZ2UgeW91IHZpc2l0LkN1c3RvbWlzYXRpb24gYW5kIHBlcnNvbmFsaXNhdGlvbiBjb29raWVzLiAKSSBoYXZlIHRoZSB2aWRlbyAod2FzIGFyY2hpdmVkIGluIG15IGluc3RhIHN0b3JpZXMpLCBhbmQgSSBjYW4gc2VuZCBpdCBhbnlvbmUgd2hvIHdvdWxkIGxpa2UgdG8gZG91YmxlIGNoZWNrIGlmIEknbSByaWdodC4KSW4gMTkwMCwgbWVuIHdhdGVyIHBvbG8gYmVjYW1lIHRoZSBmaXJzdCB0ZWFtIHNwb3J0IGludHJvZHVjZWQgYXQgdGhlIG1vZGVybiBPbHltcGljIEdhbWVzLiBUaGUgcnVsZXMgb2YgdGhlIGdhbWUgd2VyZSBkaWZmZXJlbnQgaW4gRXVyb3BlLCBzbyBpbiB0aGUgMTkwNCBPbHltcGljIEdhbWVzIGluIFN0LiBMb3VpcyB0aGUgRXVyb3BlYW5zIHJlZnVzZWQgdG8gcGFydGljaXBhdGUuQXMgYSByZXN1bHQsIHRoZSBVU0Egd29uIHRoZSBnb2xkLCBzaWx2ZXIgYW5kIHRoZSBicm9uemUuIApTaGUgam9pbmVkIEFkIEFnZSBhZnRlciBhIGRvemVuIHllYXJzIG9mIHdyaXRpbmcgZm9yIENyYWluJ3MgTmV3IFlvcmsgQnVzaW5lc3MsIHdoZXJlIHNoZSBhbHNvIGZvY3VzZWQgb24gdGhlIHJldGFpbCBpbmR1c3RyeS4gCkxtYW8gSSBoYXRlIHlvdSBzbyBtdWNoLiBZb3UgYXJlIHNheWluZyB0aGUgcGVyZmVjdCB0aGluZ3MgdG8gcGlzcyBtZSBvZmYuIFllYWgsIHlvdSBkZWZpbml0ZWx5IHdhbnQgdG8gYWR2b2NhdGUgZm9yIG1vcmUgbGVmdCB3aW5nIHBvbGljaWVzIHVzaW5nIGVsZWN0b3JhbGlzbSB3aGljaCBpcyB3aHkgeW91IGFyZSBzdXBwb3J0aW5nIEFteSBmdWNraW5nIEtsb2J1Y2hhciBpbiB0aGUgRGVtb2NyYXRpYyBwcmltYXJ5LgpCcnVjZSBDYXJsaW4gcm91dGUgdG8gVUNMQSBBbmRlcnNvbiBhcyBhIHByb2Zlc3NvciBvZiBmaW5hbmNlIG1heSBiZSBvbmUgb2YgdGhlIHNjaG9vbCBtb3JlIGNpcmN1aXRvdXMgb25lcy4gCiJUaGVyZSB3ZXJlIGZvb3RwcmludHMgdGhhdCBsZWQgZnJvbSBDaGFybGVuZSB0byBFcm5lc3QuIApJIHRoaW5rIGl0IG9idmlvdXMgdGhhdCB0aGUgYmVzdCB3YXkgdG8gZW5kIHRoZSB3aGl0ZSByYWNpYWwgcmV2b2x1dGlvbiB0YWtpbmcgcGxhY2UgaW4gQXJpem9uYSBpcyB0byB3aGl0ZWZhY2UgYWxsIHRoZSBicm93biBhbmQgYmxhY2sgZm9sa3MgbGl2aW5nIHRoZXJlLiBUaGUgY29uY2x1c2lvbiwgYXQgbGVhc3QsIG9mIGEgbG9jYWwgZWxlbWVudGFyeSBzY2hvb2wgcHJpbmNpcGFsIGluIFByZXNjb3R0LCBBWi4gQXMgYSBncm91cCBvZiBhcnRpc3RzIGFuZCBzdHVkZW50cyBwYWludGVkIGEgbXVyYWwgb24gdGhlIG91dHNpZGUgb2YgdGhlIGVsZW1lbnRhcnkgc2Nob29sIHRoaXMgc3ByaW5nLCB0aGV5IHdlcmUgbWV0IHdpdGggYSBjb25zdGFudCBiYXJyYWdlIG9mIG5hbWUgY2FsbGluZyBmcm9tIHdoaXRlIHBlb3BsZSBkcml2aW5nIGJ5LiAKSWYgYW55b25lIGlzIGdhdGVrZWVwaW5nIGRlcHJlc3Npb24gaGVyZSB5b3UgYXJlLgpUaGUgcGVuZGluZyBwdXJjaGFzZSBvZiBuZWFyYnkgR3JlZWt0b3duIENhc2lubyBIb3RlbCBpcyBwYXJ0IG9mIEdpbGJlcnQgZWZmb3J0IHRvIHJldml0YWxpemUgZG93bnRvd24sIEN1bGxlbiBzYXlzLlRoZSBHcmVla3Rvd24gQ2FzaW5vIEhvdGVsIHdhcyBvbmUgb2YgdHdvIG1vZGVscyBmb3IgR2lsYmVydCdzIGNvbmNlcHQgb2Ygc28gY2FsbGVkICJ1cmJhbiBjYXNpbm9zIiB0aGF0IGNvdWxkIG1ha2UgbW9uZXkgYW5kIGFsc28gcmV2aXRhbGl6ZSBkb3dudG93bnMsIEt1bGN6eWNraSBzYWlkLiBJdCdzIGEgY29uY2VwdCB0aGF0IGhlIHVzZWQgdG8gc2VsbCBPaGlvIHZvdGVycyBvbiBhbWVuZGluZyB0aGUgc3RhdGUncyBjb25zdGl0dXRpb24gdG8gYWxsb3cgY2FzaW5vJ3MgaW4gdGhlIHN0YXRlJ3MgZm91ciBsYXJnZXN0IGNpdGllcy5HaWxiZXJ0J3MgY29tcGFuaWVzIGFuZCBDYWVzYXJzIEVudGVydGFpbm1lbnQgQ29ycC4gCk9yIHBlcmhhcHMgc2hlIGhhZG4ndCByZWdhaW5lZCBoZXIgbWVtb3JpZXMgdW50aWwgdGhlIHdob2xlIGVuY291bnRlciBpbiBraDMuLiAKSSBjb25zdGFudGx5IHNlZSB0aGVzZSB0aHJlYWRzIHBvcHBpbmcgdXAgd2l0aCBzdHVmZiBsaWtlICJoZXkgYmVhcnMgaG93IGRvZXMgaXQgZmVlbCB0byBiZSB3cm9uZyIgb3Igd2hhdGV2ZXIuIFRoYXQgbm90IHJlYWxseSB3aGF0IGludmVzdGluZyBvciBkaXNjdXNzaW5nIG91dGxvb2tzIHNob3VsZCBldmVyIGJlIGFib3V0Li4gCldoYXQgdGhlIGdhbWUgbWFrZXIgZG9lcyBuZWVkIGlzIGFub3RoZXIgaGl0IHByb3BlcnR5LiBIUSBUcml2aWEgaXMgY29tcGV0aW5nIHdpdGggcGxhdGZvcm1zIGxpa2UgRmFjZWJvb2ssIFNuYXBjaGF0IGFuZCBZb3VUdWJlLCBhbGwgb2Ygd2hpY2ggaGF2ZSBsaXZlIG9wdGlvbnMsIGFuZCBGYWNlYm9vayBoYXMgaW50ZXJhY3RpdmUgcHJvZ3JhbXMgdGhhdCBjb3VsZCBtaW1pYyB0aGUgZ2FtZXBsYXkgb2YgSFEgVHJpdmlhLgpGb3IgZXhhbXBsZSwgYSBwZXJzb24gd2hvIGhhcyBhIHdpbmQgY29sZCBjb25kaXRpb24gd2l0aCBleGNlc3NpdmUgY2xlYXIgbXVjdXMgbWlnaHQgYmUgdG9sZCB0byBjb25zdW1lIGhvdCBzb3VwIG1hZGUgZnJvbSBvbmlvbnMgYW5kIG11c3RhcmQgZ3JlZW5zLiBUaGUgb25pb25zIGFyZSB3YXJtaW5nLCBleHBlbCBjb2xkLCBhbmQgc2VkYXRlIGV4Y2VzcyB5aW4uIFRoZSBtdXN0YXJkIGdyZWVucyBoYXZlIHNpbWlsYXIgcHJvcGVydGllcywgYW5kIHRoZXkgYWxzbyBoZWxwIGV4cGVsIG11Y3VzIGFuZCByZWxpZXZlIGNoZXN0IGNvbmdlc3Rpb24uIApBbnRpY2lwYXRlZCBkcm9wcyBpbiByZXZlbnVlIHJhbmdlIGJldHdlZW4gMTUgYW5kIDQwIHBlciBjZW50IGluY2x1ZGluZyB0aGUgcHJlZGljdGlvbiBzb21lIGxvY2FsIGNsdWJzIGFscmVhZHkgZmFjaW5nIG1hcmdpbmFsIGluY29tZXMgd2lsbCBjbG9zZS4gQ2x1YiBNdWx3YWxhIGNoaWVmIGV4ZWN1dGl2ZSBNaWNoYWVsIE11bGxhcnZleSBzYWlkIDUwcGVyIGNlbnQgb2YgaXRzIGluY29tZSBpcyBnZW5lcmF0ZWQgZnJvbSBwb2tlciBtYWNoaW5lcyBhbmQgZmVhcmVkIHRoZSBpbXBhY3Qgb2YgdGhlIGNoYW5nZXMgYmVpbmcgcHJvcG9zZWQgYnkgdGhlIFRhc21hbmlhbiBpbmRlcGVuZGVudC4gCk9uIHRoZSBicmlnaHQgc2lkZSwgeWVhcnMgbGF0ZXIgdGhlcmUgd2FzIGEgbWFuIGZvbGxvd2luZyBtZSB1cCBhbmQgZG93biBhIHRyYW0gICBpIHN3aXRjaGVkIHNlYXRzIHRocmVlIG9yIGZvdXIgdGltZXMsIHN3aXRjaGVkIGNhcnMsIGJ1dCBldmVyeSB0aW1lIGhlIHdvdWxkIG1vdmUgd2l0aCBtZSwgZmluZCBhIHNlYXQgbmVhciBtZSBhbmQgZ2xhcmUgYXQgbWUuIGkgd2VudCB1cCB0byBhIGdyb3VwIG9mIGxhZHMgYWJvdXQgMTYgeWVhcnMgb2YgYWdlIGFuZCBhc2tlZCBpZiBpIGNvdWxkIHN0YW5kIHdpdGggdGhlbSB1bnRpbCB0aGV5IGdvdCBvZmYsIGFuZCB0aGVuIGdldCB0aGUgbmV4dCB0cmFtLiB0aGV5IGNsb3NlZCByYW5rcyBsaWtlIGkndmUgbmV2ZXIgc2VlbiwgYW5kIGV2ZW4gb2ZmZXJlZCB0byB3YWl0IGF0IHRoZSBzdGF0aW9uIHdpdGggbWUgdW50aWwgdGhlaXIgbWFtIGNhbWUgdG8gcGljayB0aGVtIHVwLgpQbHVzIEkgdGhpbmsgR1JSTSBoYXMgYSBsb3Qgd3JpdHRlbiBmb3IgQSBEcmVhbSBvZiBTcHJpbmcgKGJlaW5nIG92ZXIgZmxvdyBmcm9tIGFsbCB0aGlzIHRpbWUgaGUncyB0YWtpbmcgb24gV2luZHMgb2YgV2ludGVyKS4gQnV0IG9uY2UgaGUncyBkb25lIHdpdGggNiB0aGVuIHRoZXkgY2FuIHdvcnJ5IGFib3V0IGNsZWFuaW5nIHVwIGFuZCBlZGl0aW5nIDcuIFNvIGluIDUgeWVhcnMgSSB0aGluayB3ZSdsbCBoYXZlIGEgbXVjaCBtb3JlIGFjY3VyYXRlIGlkZWEgb2Ygd2hlbiB0aGUgYm9va3Mgd2lsbCBlbmQgYW5kIEknbGwgc2V0IGEgbmV3IHJlbWluZGVyLiBJIGRvbid0IHdhbnQgdG8gc2V0IGEgcmVtaW5kZXIgZm9yIDIwIHllYXJzIGFuZCBHb1QgaXMgb3ZlciwgYW5kIFJlZGRpdCBpcyBvdmVyIGFuZCBub2JvZHkgZ2l2ZXMgYSBmdWNrLgpTaGUgc2VlcyBoZXIgZnJpZW5kIEplc3NpY2EuIApEcyBhdWpvdXJkJ2h1aSwgdm91cyBhdmV6IHBldXQgdHJlIHB1IHZvaXIgbGEgcHVibGljaXQgZGlmZnVzZSBzdXIgbGVzIGNoYW5lcyBkZSB0bHZpc2lvbiBxdWkgcHJwYXJlIGwndXRpbGlzYXRpb24gZGUgY2UgbWNhbmlzbWUuIE9uIHZvdXMgaW5kaXF1ZSBxdWUgZGVzIHByY2lzaW9ucyBzZXJvbnQgZG9ubmVzIHN1ciBsYSB2aWN0aW1lLCBsZSBwb3J0cmFpdCByb2JvdCBkdSBzdXNwZWN0IGRpZmZ1cyBldCBiaWVuIHNyIGxhIG1pc2UgZW4gcGxhY2UgZCd1biBudW1ybyB2ZXJ0LiBDZXBlbmRhbnQsIGNlIG1jYW5pc21lIG5lIHNlcmEgcGFzIGRjbGVuY2ggZGFucyBuJ2ltcG9ydGUgY2FzLiAKSW4gYSB0d2lzdCwgb25lIGZhaXRobGVzcyBlbGVjdG9yIGluIFdlc3QgVmlyZ2luaWEgdm90ZWQgZm9yIER1a2FraXMnIHJ1bm5pbmcgbWF0ZSwgU2VuLiBMbG95ZCBCZW50c2VuLiBCdXQgQmVudHNlbidzIGluZmFtb3VzICJ5b3UncmUgbm8gSmFjayBLZW5uZWR5IiBidXJuIHRvd2FyZCBEYW4gUXVheWxlIGhhZCB0byBlYXJuIGhpbSBzb21lIHNvcnQgb2YgY29uc29sYXRpb24gcHJpemUsIHJpZ2h0PyBBY3R1YWxseSwgVGhlIE5ldyBZb3JrIFRpbWVzIGRpZCBhbiBhbWF6aW5nIGludGVydmlldyB3aXRoIHRoZSBkZWZlY3RvciBhdCB0aGUgdGltZSAgIHRoZXJlIHdhcyBhIGxvdCBtb3JlIHRvIGl0IHRoYW4gdGhhdC4KR29vZCBwb2tlciBwbGF5ZXJzIG1heGltaXplIHRoZSB0aW1lcyB0aGV5IGhhdmUgcG9zaXRpdmUgRVYgYW5kIG1pbmltaXplIHRoZSB0aW1lcyB0aGV5IGhhdmUgbmVnYXRpdmUgRVYuLiAKWW91IGNhbiBjaGVjayB0byBzZWUgaWYgeW91ciBjYXIgaGFzIGEgY2xlYXIgY29hdCBvbiBpdCBieSBydWJiaW5nIHNvbWUgd2F4IG9udG8geW91ciBjYXIgd2l0aCBhIHdoaXRlIGNvdHRvbiByYWcuIApUaGUgcHJvYmxlbSBpcywgbWFueSBwZW9wbGUgZG9uIGtub3cgd2hhdCBtYWtlcyBhIFRGU0EgZGlmZmVyZW50IGZyb20gYW4gUlJTUC4gQSByZXBvcnQgYnkgQmFuayBvZiBNb250cmVhbCBlc3RpbWF0ZXMgdGhhdCAzMiBwZXIgY2VudCBvZiBDYW5hZGlhbnMgYXJlIGluIHRoYXQgY2FtcC4KTm90aGluZyB0aGF0IGhhcHBlbnMgdG8gVHJ1bXAsIGF0IHRoaXMgcG9pbnQsIGlzIGdvaW5nIHRvIGRpc3N1YWRlIHRoZW0uIFRoZXNlIHBlb3BsZSBoYXZlIGZpbmFsbHkgaGFkIGEgdGFzdGUgb2YgYSBQcmVzaWRlbnQgd2hvIHdhcyBvcGVubHksIG5ha2VkbHkgcmFjaXN0LiBBbmQgRm94IE5ld3MgaGFzIHRvbGQgdGhlbSBmb3IgdHdvIHN0cmFpZ2h0IHllYXJzIHRoYXQgaXQgYmVlbiBncmVhdC4gSGUgd2lubmluZywgZWNvbm9teSBpcyBib29taW5nLCBhbmQgdGhlaXIgbGl2ZXMgYXJlIHRpcCB0b3AuCi9zU01ILiBTb21ldGltZXMgZmlnaHRlcnMgYXJlIGp1c3QgZ29pbmcgdG8gZ2V0IG91dGZvdWdodCwgYW5kIHNvbWV0aW1lcyBwYXJ0IG9mIHRoYXQgaXMgaW5kZWVkIHRoZSBzaXplIGFkdmFudGFnZSwgYnV0IHRoYXQgZG9lc24gbWVhbiB0aGUgZ3V5IG1vdmluZyB1cCBkb2VzbiBiZWxvbmcgaW4gdGhlIGhlYXZpZXIgZGl2aXNpb24uIApIZSBoYXNuIGdvdHRlbiB1cyBpbnRvIGFueSB3YXJzIHdlIGhhdmVuIGFscmVhZHkgYmVlbiBpbnZvbHZlZCBpbiB5ZXQuIEkgbm90IHNheWluZyBUcnVtcCBpcyBhIHN3ZWV0aGVhcnQgb3IgdGhhdCBoZSBsb3ZlZCwgYnV0IHBlb3BsZSB3YXkgb3ZlcmVzdGltYXRlIGhvdyBtdWNoIGhlIGhhdGVkLi4gClRoZXkgZmFpcmx5IGVhc3kgdG8gYXBwbHkgdG8gb25jZSB5b3UgZ2V0IGluIHRoZSByaHl0aG0uIApJdCB3ZWlyZCwgYnV0IGF0IHRoZSBzYW1lIHRpbWUgaXQgaXNuIEkgZ3Vlc3MgdGhpcyB3YXMgaGlzIG1pbmQgb2YgcHJvdGVjdGluZyBoaW0gZnJvbSB0aGUgc2FkbmVzcyBvZiBrbm93aW5nIHRoYXQgaGUgd291bGQgZGllIGZhciBhd2F5IGZyb20gd2hlcmUgaGUgeWVhcm5lZCB0byBiZS4gSGUgd2FzIGhhcHB5IGFnYWluLCBhbmQgYXMgZmFyIGFzIGhlIGtuZXcgdGhlIHJlc3Qgb2YgaGlzIGxpZmUsIGhlIGxpdmVkIHdoZXJlIGhlIHdhbnRlZCB0byBiZS4KKFRvdXJuYW1lbnQgYmFja2dyb3VuZCkgSWYgZXZlciBJJ20gY2hlY2sgcmFpc2luZyB0aGUgZmxvcCBhbmQgY2hlY2tpbmcgdHVybiBpdCdzIHVzdWFsbHkgd2hlbiBJIGJlbGlldmUgSSBtaWdodCBoYXZlIGNhdWdodCB1cCBhbmQgSSBkb24ndCB3YW50IHRoZSBwb3QgdG8gYmxvYXQgb29wLiBGb3IgZXhhbXBsZSwgaWYgSSdtIGMvciB0aGUgZmxvcCB3aXRoIG5vdGhpbmcgSSdtIGRvaW5nIHNvIGJlY2F1c2UgdmlsbGFpbiBpcyBjYmV0dGluZyBldmVyeSBmbG9wIGFuZCBoZSdzIG9wZW5pbmcgd2lkZSB1c3VhbGx5IGZyb20gbGF0ZSBwb3NpdGlvbi4gCkV2ZW4gb25jZSBhIGJyZWF0aGFseXplciBpcyBhdmFpbGFibGUsIHRoZSBtYWNoaW5lIHdvdWxkIGhhdmUgdG8gcGFzcyBmZWRlcmFsIHJlZ3VsYXRpb25zIGZvciB0aGUgZGVwYXJ0bWVudCBvZiB0cmFuc3BvcnRhdGlvbiwgYXMgd2VsbCBhcyByZWd1bGF0aW9ucyBmb3IgZWFjaCBwYXJ0aWN1bGFyIHN0YXRlLCBDbGFmbGluIG5vdGVzLiAKSSd2ZSBoZWFyZCB0aGUgZW5kaW5nIG9mIHRoZSBzdG9yeSBpcyBhbWF6aW5nIGJ1dCBJIHB1dCBpdCBkb3duIHNvbWV0aW1lIGFmdGVyIGdldHRpbmcgdG8gdGhlIHNlY29uZCBjYW1wIGFuZCBoYXZlIG5ldmVyIGdvbmUgYmFjay4uIApUaGV5IHdlcmUgZW50ZXJ0YWluZWQgYXQgdGhlIE5ldyBZb3JrLCBOZXcgWW9yayBIb3RlbCBhbmQgQ2FzaW5vIHdoZXJlIHRoZXkgc2F3ICJadW1hbml0eTogQW5vdGhlciBTaWRlIG9mIENpcnF1ZSBEdSBTb2xlaWwsIiB3aGljaCBpcyBkZXNjcmliZWQgYXMgYSBwcm92b2NhdGl2ZSBjYWJhcmV0IHN0eWxlIHByb2R1Y3Rpb24gd2l0aCBhIENpcnF1ZSBEdSBTb2xlaWwgdHdpc3QuIEl0IGlzIGFuIGFkdWx0IHRoZW1lZCA5MCBtaW51dGUgcHJvZHVjdGlvbiB3aXRoIHBsYXlmdWwgaW5udWVuZG8gaW4gdGhlIGludGltYXRlICJ2ZWx2ZXQgbGluZWQiIFp1bWFuaXR5IFRoZWF0cmUgd2l0aCBjYWJhcmV0IHN0b29scywgbG92ZSBzZWF0cyBvciBkdW8gc29mYXMgdGhhdCBjb3VsZCBoYXZlIGJlZW4gaWRlYWwgZm9yIHRoZSBzdW1vcy4gSW5jaWRlbnRhbGx5LCBJIHBhcnRpY3VsYXJseSBlbmpveWVkIHRoZSA5MCBtaW51dGVzIG9mIHNvcGhpc3RpY2F0ZWQgY29tZWR5IGJ5IFJpdGEgUnVkbmVyIGF0IE5ldyBZb3JrLCBOZXcgWW9yaydzIENhYmFyZXQgVGhlYXRyZSBhbmQgY291bGQgaGF2ZSBzYXQgdGhyb3VnaCBhbm90aGVyIGhvdXIgb2YgaGVyIGRlbGlnaHRmdWwgY29taWMgbGl0YW55IG9mIGxhdWdodGVyIGFzIGEgd2lmZSwgYXMgYSAiZG9nIG1vbSIgYW5kIGxpZmUgaW4gZ2VuZXJhbC4gCkluIG90aGVyIHdvcmRzLCBwb3N0IHdhciBwb2xpdGljcyBhbmQgZWNvbm9taWNzIGRvZXMgbm90IGhhdmUgdG8gYmUgYSB6ZXJvIHN1bSBnYW1lLiBCb3RoIHNpZGVzIGNhbiBiZW5lZml0ICAgYW5kIHRoZSBNYXJzaGFsbCBQbGFuIHByb3ZlZCBleGFjdGx5IHRoYXQuIEdlcm1hbnkgZWNvbm9taWMgc3VjY2VzcyB0b2RheSBpcyBwcm9vZiBvZiB0aGF0LgpJdCBlbmFibGVzIHRoZSBhcHBsaWNhdGlvbiBvZiB0b3VjaCBzZW5zaW5nIG5vdCBvbmx5IHdpdGggZGlmZmVyZW50IGZvcmNlIGxldmVscyB0aGF0IGNhbiByZWNvZ25pemUgdG91Y2ggYW5kIHByZXNzIHdoaWxlIHRoZSB1c2VyIGlzIHBsYXlpbmcgZ2FtZXMsIGJ1dCBhbHNvIGNhcGFibGUgb2Ygd29ya2luZyB3aXRoIHdhdGVyIG9yIGdsb3Zlcy4gQXQgdGhlIHNhbWUgdGltZSwgaXQgaGFzIGluc3RhbnQgaGFwdGljIGZlZWRiYWNrLCB3aGljaCBicmluZ3MgdXNlciBhIGZ1bGwgSGFuZCBoZWxkIGdhbWUgY29uc29sZSBleHBlcmllbmNlLCB0b3RhbGx5IGV4Y2VlZGluZyB0aGVpciBleHBlY3RhdGlvbnMuCk9oIHllYWggbWFuLiBXZWxsLCBzaG91bGQgYmUgc2luY2UgdGhleSBhcmUgd2F5IG1vcmUgbGF4IHRoYW4gVVMuIEl0IGJhc2ljYWxseSBjb25jZW50cmF0ZWQgVEhDLCBhcyBpdCBpcyBhIHByb2Nlc3MgdGhhdCBzdHJpcHMgYWxsIHRoZSBieXByb2R1Y3RzIHNlcGFyYXRlbHkuIApJdCBkZXBlbmRzLiBJbiBzdGFuZGFyZCBwb2tlciB0aGVyZSBpcyBubyByYW5raW5nIG9mIHN1aXRzLiBUaGUgaGFuZCB3aXRoIHRoZSBoaWdoZXN0IHRvdGFsIHdpbGwgd2luLiBJZiB5b3UgYXJlIGZvbGxvd2luZyBzdGFuZGFyZCBwb2tlciBydWxlcywgYSBoZWFydCBmbHVzaCBhbmQgY2x1YiBmbHVzaCB3b3VsZCB0aWUgKGFzc3VtaW5nIGFsbCB0aGUgY2FyZHMgYXJlIHRoZSBzYW1lKS4gU28sIHlvdSBzZWUgd2h5IGl0IGlzIGltcG9ydGFudCB0byBhZ3JlZSB0byBhbGwgb2YgdGhlIHJ1bGVzIGJlZm9yZSB5b3Ugc3RhcnQgdGhlIGdhbWUuIChGdWxsIEFuc3dlcikKSXQgY2FuIGJlIHF1aXRlIGRpZmZpY3VsdCB0byBtb3ZlIGFyb3VuZCB3aGVuIHlvdSBoYXZlIG11c2NsZSBzb3JlbmVzcywgYnV0IHdpdGggYSBsaXR0bGUgcGF0aWVuY2UgYW5kIHNvbWUgVExDLCBpdCB3aWxsIHNvb24gcGFzcy4uIApXaGlsZSBhIHRhc2sgdHdpY2UgYXMgY29tcGxleCBpcyBzb2x2ZWQgaW4gZG91YmxlIHRpbWUgZm9yIGEgY29tcHV0ZXIKVGhlU2FzcyAgNCBwb2ludHMgIHN1Ym1pdHRlZCA2IG1vbnRocyBhZ28KVGhlIHdvbWFuIGF0IHRoZSBtZWRpY2FsIGV4YW1pbmVyIG9mZmljZSB3YXMgaW5zdHJ1bWVudGFsIGluIGhlbHBpbmcgbWUgZmluZCBNaWNrZXkgbW90aGVyLiAKVGFrZSB0aGUgQW1hcm8gZGkgQ29jY28sIGEgcGlhIGNvbGFkYS9uZWdyb25pIG1hc2h1cCB3aXRoIGRhcmsgYW5kIEphbWFpY2FuIHJ1bXMsIHRvYXN0ZWQgY29jb251dCwgYW5kIHBpbmVhcHBsZSBqdWljZSAoYWxsIHRpa2kgc3RhcGxlcyksIGJ1dCBhbHNvIENhbXBhcmkgYW5kIHN3ZWV0IHZlcm1vdXRoLiAKU2VsZiBmaXNoIGFuZCB0byB0YWtlIGZyb20gb3RoZXJzIGFuZCBub3QgZ2l2ZSBhIGNyYXAgYWJvdXQgb3RoZXJzLiAKQWxsIG9mIHRoZSAibm9uIGx1Y2siIGNob2ljZXMgeW91IHB1dCBpbnRvIG1ha2luZyB0aGUgY29ycmVjdCBkZWNpc2lvbiB0byBleHRyYWN0IG1heGltdW0gdmFsdWUgb3IgbG9zZSBtaW5pbWFsbHkgd2FzIGEgcHJvZHVjdCBvZiB5b3VyIGJpcnRoLCBnZW5lcywgcGFyZW50cywgZW52aXJvbm1lbnQsIGFuZCBzdWJjb25zY2lvdXM7ICJ5b3UiIGhhdmUgYWxtb3N0IG5vIHBhcnQgaW4gYW55IG9mIHRoYXQuIElmIHlvdSB3ZXJlIGJvcm4gb24gWGFsYXRhY2hpIDE3IGluIHRoZSB5ZWFyIDQ4MjIgdG8gc3RyaWN0bHkgcmVsaWdpb25zIHBhcmVudHMgb24gdGhlIGNvbnRpbmVudCBvZiBIbHVjaHJhY2h0IGluIHRoZSA4MjNyZCBpbnN0YW5jZSBvZiBvdXIgdW5pdmVyc2UgYW5kIGdyZXcgdXAgcGxheWluZyBiYXNlYmFsbCBpbnN0ZWFkIG9mIHBsYXlpbmcgdmlkZW8gZ2FtZXMgd2hpY2ggbWVhbnQgeW91IGRpZG4gYnVtcCBpbnRvIE1hcmsgd2hpbGUgcGxheWluZyBIYWxvIDM0IG9ubGluZSB3aG8gbWVudGlvbmVkIHlvdSBzaG91bGQgcGxheSBZYWhvbyEgKGl0IHNoaXQgaW4gYW55IHVuaXZlcnNlLCBCVFcpIHBva2VyIHdoaWNoIGdvdCB5b3UgdG8gcmVhZCBIaWxsbWF0aCBvbiBIb2xkIHdoaWNoIHRhdWdodCB5b3UgdGhlIGNvcnJlY3QgcmFpc2luZyByYW5nZXMsIHlvdSB3b3VsZCBoYXZlIDMyJSBsZXNzIGNoYW5jZSB0byB3aW4gdGhlIG5leHQgaGFuZC4gCk9yaWdpbmFsbHkgb25seSBoZWFyaW5nIHRoZWlyIHNvbmdzIG9mIHRoZSBhbmltZSBzZXJpZXMsIEkgbG9va2VkIG1vcmUgaW50byB0aGVpciBtdXNpYyBhbmQgZGlzY292ZXJlZCB0aGF0IHRoZXJlIGV2ZW4gbW9yZSBncmVhdCBtdXNpYyBmcm9tIHRoZW0uIApBOiBXb3csIGFyZW4ndCB5b3UgdGhlIGF3ZXNvbWUgZ2lybGZyaWVuZCEgSGVyZSdzIGEgdGhvdXNhbmQgc3R5bGUgcG9pbnRzLiAKVGhpcyBpcyB3aHkgeW91ciBsZWFzZSBzcGVjaWZpZXMgbm90IHRvIHVzZSBpdC4gU3VyZSwgdGhlIHBvb3IgcXVhbGl0eSBwYWludCBtYWtlcyB0aGUgc2l0dWF0aW9uIG11Y2ggd29yc2UsIGJ1dCBJIGhhZCB0cm91YmxlIHdpdGggaXQgZXZlbiBvbiBmYWlybHkgZnJlc2ggZ2xvc3MgcGFpbnQuIEFjdHVhbGx5IGl0IGV2ZW4gd29yc2UgdGhhbiBtb3N0IHN0YWlucyBhcmUsIGJlY2F1c2UgaXQgb2lseSwgc28gdGhleSBtYXkgd2VsbCBkZWNpZGUvbmVlZCB0byB1c2UgYSBzdGFpbiBibG9jayBjb2F0IGFzIHdlbGwgd2hpY2ggaXMgaGVsbGEgZXhwZW5zaXZlIHBlciBsaXRyZS5UaGUgb25seSAocGFydGlhbCkgd2F5IG91dCBvZiB0aGlzLCBpcyBpZiB0aGUgImJlZm9yZSIgcGhvdG9zIGFuZCBjb25kaXRpb24gcmVwb3J0LCB3aGVuIHlvdSBtb3ZlZCBpbiwgc2hvd3MgdGhhdCB0aGUgd2FsbHMgd2VyZSBkdWUgcmVwYWludGluZyBzb29uIGFueXdheSwgaW4gd2hpY2ggY2FzZSB5b3UgbWF5IGJlIGFibGUgdG8gYXJndWUgeW91IHNob3VsZCBvbmx5IHBheSBoYWxmICh3aGF0IHlvdSBjYWxsIGFuIGFtbmVzdHkgYWdhaW5zdCB3ZWFyIGFuZCB0ZWFyKS4gClNvbWUgcGxheWVycyBJIG1heSBDT05TSURFUiBmb2xkaW5nIHBvY2tldCBraW5ncyBwcmVmbG9wLiBJIGRvbiB3YW50IHRvIGxvc2UgYSBsb3Qgb2YgbW9uZXkgZmlndXJpbmcgb3V0IHRob3NlIHNwb3RzLiAKSW0gcHJldHR5IHN1cmUgdGhhdCBzaGUgc2hvdWxkIGJlIGRvaW5nIGV4YWN0bHkgdGhpcywgc28gSSBob3BlIHNvLgpFeHBsb2l0YXRpb24gaXMgdGFraW5nIGFkdmFudGFnZSBvZiBraWRzIGZvciBzb21lIGtpbmQgb2YgZ2Fpbi4gUHJldHR5IHN1cmUgbm8gaGlnaCBzY2hvb2wgc3BvcnRzIHRlYW0gaXMgZ2VuZXJhdGluZyBlbm91Z2ggcmV2ZW51ZSBmb3IgdGhlIHNjaG9vbCB0byBiZSBtYWtpbmcgYW55IG1vbmV5IG9mZiB0aGUga2lkcyBoYXJkIHdvcmsuIApQZXJoYXBzIG1vc3QgaW1wb3J0YW50LCBhbmFlcm9iaWMgZXhlcmNpc2UgYWxzbyBlbGV2YXRlcyBncm93dGggaG9ybW9uZSAoR0gpICBhIHBvd2VyZnVsIGZhdCBidXJuaW5nIGhvcm1vbmUgdGhhdCBoZWxwcyByZXN0b3JlIHRpc3N1ZSBhbmQgYnVpbGQgbXVzY2xlIG11Y2ggbW9yZSB0aGFuIGFlcm9iaWMgdHJhaW5pbmcuIApJdCdzIG5vIGdyYWZ0ZWQgb24gYXBwZW5kYWdlIHRvIE1hbmhhdHRhbiBsaWtlIEJhdHRlcnkgUGFyayBDaXR5LCB3aGljaCBpcyBidWlsdCBvbiBIdWRzb24gUml2ZXIgbGFuZGZpbGwuIEl0IG1vY2tzIEJyb29rbHluIHNsb3cgbW92aW5nIFBhY2lmaWMgUGFyayAobmUgQXRsYW50aWMgWWFyZHMpIHdoZXJlIGEgZmV3IHVucmVsYXRlZCBidWlsZGluZ3MgYXJlIHdpZGVseSBzY2F0dGVyZWQgYW1pZHN0IGVtcHR5IGxvdHMuIEl0cyAxNSBhY3JlcyBhcmUgbm8gInN1cGVyYmxvY2siIGxpa2UgdGhlIG9sZCBXb3JsZCBUcmFkZSBDZW50ZXIuIAoiVGhleSB3ZXJlIHJlYWxseSBhZ2dyZXNzaXZlIG9uIHRoZSBkZWZlbnNpdmUgZW5kLCBkZW55aW5nIHRoZSBiYWxsIGFuZCBhZGp1c3Rpbmcgb3VyIHNob3RzIG9uIGdvYWwsIiBOb3J2ZWxsIHNhaWQuICJJdCBraW5kIG9mIHRvb2sgYSB0b2xsIG9uIHVzLiBXZSBjb3VsZCBqdXN0IG5ldmVyIGtub2NrIGRvd24gdGhhdCBkb29yIGxpa2Ugd2UgaGF2ZSBiZWVuIGluIHdpbm5pbmcgMTYgc3RyYWlnaHQuIgpXZSBlbmRlZCBzdGF5aW5nIGluIEdyZWVudmlsbGUgd2l0aCBhIGZyaWVuZCBGcmlkYXkgbmlnaHQgKHdoaWNoIGlzIGEgdmVyeSBjb29sIGRvd250b3duIGFzIHdlbGwpLCBidXQgcHJvYmFibHkgZ290IHRvIENvbHVtYmlhIGFyb3VuZCAxMSBvciBzbyBTYXR1cmRheSBtb3JuaW5nLiAKVGhlIHBsYWNlcyBJIGdvIGluIEdlcm1hbnkgZmVhdHVyZSBzdXBlciBob3Qgd29tZW4gaW4gdGhlaXIgMjBzIGFuZCBlYXJseSAzMHMsIGFuZCB0aGUgc2V4IGlzIHVzdWFsbHkgKGJ1dCBub3QgYWx3YXlzKSBkYW1uIGZ1bi4gCkxhYm9yIGhhcyBub3QgaGVsZCBhIHByZXNzIGNvbmZlcmVuY2Ugc2luY2UsIHByb21wdGluZyBNciBHdXR3ZWluIHRvIGFjY3VzZSBNcyBXaGl0ZSBvZiBnb2luZyBpbnRvICJ3aXRuZXNzIHByb3RlY3Rpb24iLgpOb3QganVzdCBmb3IgdXMgb3Igb3RoZXIgbGliZXJhbHMsIGJ1dCBmb3Igd2hhdCBJIGJlZ3VuIHRvIGNhbGwgdGhlICJhY3RpdmlzdCBjbGFzcyIgYXMgYSB3aG9sZS4gQXMgYSBncm91cCBpdCB0ZW5kcyB0byBiZSB3aGl0ZSwgZWR1Y2F0ZWQsIGFuZCB1cHBlciBjbGFzcy4gCkhlIHNheXMgc2hlJ3Mgbm90aGluZyBidXQgYSBnb2xkIGRpZ2dpbmcgbGlhciB3aG8gd2FudHMgYW4gdW5nb2RseSBhbW91bnQgb2YgY2hpbGQgc3VwcG9ydCBmb3IgdGhlaXIgNCBtb250aCBvbGQgc29uICAgaW5jbHVkaW5nICQ5LDAwMCBhIG1vbnRoIGZvciBhIG5hbm55LgpUaGVyZSdzIGEgZ3JlYXQgZGVhbCBvZiBkZWJhdGUgYWJvdXQgdGhlIHNhZmV0eSBvZiBlc3NlbnRpYWwgb2lscyBpbiBwcmVnbmFuY3kuIApUaGUgRkJJIHJhaWRlZCBob21lcyBhbmQgb2ZmaWNlcyBhY3Jvc3MgUGhpbGFkZWxwaGlhIGFuZCBTb3V0aCBKZXJzZXkgZWFybHkgRnJpZGF5IGFzIHBhcnQgb2YgYSBzd2VlcGluZyBpbnZlc3RpZ2F0aW9uIG9mIGEgcG93ZXJmdWwgZWxlY3RyaWNpYW5zIHVuaW9uIGFuZCBpdHMgbGVhZGVyLCBKb2huIEouIERvdWdoZXJ0eS4KQnV0IHNpbmNlIHRoaXMgcGxhY2UgYWxtb3N0IGFsd2F5cyBsb29rcyBmdWxsLCBJIGRlY2lkZWQgaGVyZSB0aGUgZm9vZCBtdXN0IGJlIGEgbGl0dGxlIG1vcmUgc3BlY2lhbC4gClBhcnRpY3VsYXJseSBhdCB0aGUgbG93ZXIgbGltaXRzIHdoZXJlIHRoZSBtYWpvcml0eSBvZiBwbGF5ZXJzIHNlZSB0aGUgZmxvcCwgeW91IHdpbGwgb2Z0ZW4gaGF2ZSB0byBzdGFydCB3aXRoIHRoZSBiZXN0IHBvc3NpYmxlIGhhbmQgdG8gd2luIGVpdGhlciB0aGUgaGlnaCBvciB0aGUgbG93IGhhbGYgb2YgdGhlIHBvdC4gRm9yIGV4YW1wbGUsIGlmIGEgZmx1c2ggaXMgcG9zc2libGUsIHlvdSBoYXZlIGFsbW9zdCBubyBjaGFuY2Ugb2Ygd2lubmluZyB0aGUgaGlnaCBwb3QgdW5sZXNzIHlvdSBjYW4gYmVhdCBhIGZsdXNoIGFzIG9uZSBvciBtb3JlIG9mIHlvdXIgb3Bwb25lbnRzIHdpbGwgaGF2ZSBvbmUuIElmIHlvdSBoYXZlIGEgZmx1c2ggYW5kIHRoZSBib2FyZCBwYWlycyAodHdvIGNhcmRzIG9uIHRoZSBib2FyZCBhcmUgdGhlIHNhbWUsIGxpa2UgSyBLIG9yIDIgMiksIHRoZW4geW91IGhhdmUgcHJvYmFibHkgbG9zdCB0byBhIGZ1bGwgaG91c2UuIApJIG9ubHkgc2lwIHRoZSBicm90aCBzbyBJIGNhbid0IHNwZWFrIHRvIHdoZXRoZXIgdGhlIHRvZnUgb3Igc2Vhd2VlZCBjb3VsZCBiZSBoZWxwZnVsIG9yIG5vdC4gRm9yIG1lIGl0J3MgdGFzdHkgYW5kIGl0IHNldHRsZXMgbXkgc3RvbWFjaCBpbiB0aGUgd2F5IHRoYXQgSSBmZWVsIGZ1bGwsIGhhcHB5LCBhbmQgc2F0aXNmaWVkLiBNYXliZSBub3Qgc28gaGFwcHkgaWYgSSdtIGluIGEgZmxhcmUgdXAgYnV0IGl0IGhhcyBvbmx5IGZhaWxlZCBvbiBtZSBvbmNlIHNvIGZhciBvdmVyIHRoZSBwYXN0IHllYXIgb3Igc28uLiAKQXMgSSBrZWVwIHNheWluZywgaXQncyBhbGwgdG9vIGVhc3kgdG8gc3BpbiBmaWN0aW9uIGhlcmUuIFRoZSBmYWxzZWhvb2RzIGFyZSBmYXIgbW9yZSBmdW4gKGlmIG9ubHkgYmVjYXVzZSBjbGFuZGVzdGluZSBjb25zcGlyYWNpZXMgYXJlIG1vcmUgaW50ZXJlc3RpbmcgdGhhbiB0aGUgbXVuZGFuZSB0cnV0aCksIGFuZCBhcyBzdWNoLCB0aGV5IGtlZXAgcmVwZWF0ZWQgYW5kIGF1Z21lbnRlZCB1bnRpbCBzdWNoIHRpbWUgYXMgdXNlcnMgd2hvIGhhdmUgdGhlIHJpZ2h0IGludGVudGlvbiAgIGxpa2UgeW91LCBmb3IgaW5zdGFuY2UsIHdobyB3YW50IHRvIGJlIG9wZW4gbWluZGVkICAgd2luZCB1cCB3ZWF2aW5nIHRoZW0gaW4gdG8gd2hhdCBwcmVjaW91cyBmZXcgZmFjdHMgbWlnaHQgYWN0dWFsbHkgYmUgcHJlc2VudC4uIApGdW5ueSBsb3QuLiAKSSB0ZW5kIHRvIGRpc2FncmVlIHdpdGggbW9zdCBvZiB0aGUgImZvbGxvdyB5b3VyIGZlZWxpbmdzIiBzb3J0IG9mIHRoaW5nLiBGb3IgaW5zdGFuY2UgSSd2ZSBtYWRlIGEgY29tbWl0bWVudCB0byBteSBodXNiYW5kIGFuZCBpdCBkb2Vzbid0IG1hdHRlciwgYXQgdGhlIGVuZCBvZiB0aGUgZGF5LCBob3cgSSBmZWVsLiBJIG1heSBub3QgYWx3YXlzIHdhbnQgdG8gaGF2ZSBzZXgsIGJ1dCBJIG5lZWQgdG8gZmlndXJlIG91dCB0aGUgcm9vdCBvZiBpdCBpZiB0aGF0J3MgdGhlIGNhc2UuLiAKVW5sZXNzIHlvdSBwbGF5aW5nIGEgc3RyYWlnaHQgZmlnaHRlciBvciB0aGllZiBJIHdvdWxkIGFsc28gcmVjb21tZW5kIHJlcm9sbGluZyBTVEFUUyB1bnRpbCB5b3UgY2FuIG1heCBwcmV0dHkgbXVjaCBldmVyeXRoaW5nOyBlc3BlY2lhbGx5IGltcG9ydGFudCB0aGUgbW9yZSBjbGFzc2VzIHlvdSBoYXZlLiBPaCBhbmQgbm8gbWF0dGVyIHdoYXQgY2xhc3MoZXMpIHlvdSBhcmUsIGludmVzdCBpbiBhIHJhbmdlZCB3ZWFwb24gcHJvZmljaWVuY3kgZWFybHkgb24uIFJhbmdlZCB3ZWFwb25zIGFyZSBwb3dlcmZ1bCBhbmQgeW91IGNhbiBvZnRlbiB0YWtlIG91dCBtdWx0aXBsZSBlbmVtaWVzIGJlZm9yZSB0aGV5IGV2ZW4gd2FsayBvdmVyIHRvIHlvdS4gCkp1c3QgYmUgY29uZmlkZW50Li4gCkJ1dCBwb2xpdGljYWwgYWZmaWxpYXRpb24sIGV0YyBkZXBlbmRzIHVwb24gd2hvIHlvdSBzdXJyb3VuZCB5b3Vyc2VsZiB3aXRoLCB5b3VyIGxpdmluZyBlbnZpcm9ubWVudCwgZXRjLiAKSm9jZWx5biBHcWFkdSwgMTUsIHNhaWQgc2hlIHdvdWxkIHN1cHBvcnQgY2hpbGRyZW4gdG8gaGF2ZSBlZHVjYXRpb24uIFNpbWFsbyBUc2hhbmdhbmEsIDE5LCB3b3VsZCBtYWtlIHNjaG9vbHMgYmV0dGVyIGFuZCBtb3JlIGFmZm9yZGFibGUuICJNYW55IG9mIG15IGZyaWVuZHMgZG9uJ3QgZXZlbiBnbyB0byBzY2hvb2wgYmVjYXVzZSB0aGVpciBwYXJlbnRzIGNhbid0IGFmZm9yZCB0byBzZW5kIHRoZW0sIiBzaGUgc2FpZC4KSXQgaXMgdGh1cyBldmVyIG1vcmUgaW1wb3J0YW50IHRoYXQgdGhlIHBlb3BsZSBvZiBvbmUgY291bnRyeSBwYXJ0aWNpcGF0ZSBpbiB0aGUgZGVjaXNpb24gdG8gYXR0YWNrIHRoZSBwZW9wbGUgb2YgYW5vdGhlci4uIApSZXBlYXQgb24gdGhlIHJpZ2h0IHNpZGUgd2l0aCB5b3VyIGxlZnQgaGFuZC4uIApUaGlzIGlzIGxpa2UgdGhlIFJvb20gb2YgUmVxdWlyZW1lbnRzIGluIEhhcnJ5IFBvdHRlcjogImlmIHlvdSBoYXZlIHRvIGFzaywgeW91IHdpbGwgbmV2ZXIga25vdy4gCk1vdmUgMjUgaXMgdW5uZWNlc3NhcnkuIEkgZG9uIHNlZSBhIHNlcXVlbmNlIHRoYXQgd29ya3MgZm9yIHdoaXRlLiBNYXliZSB5b3UgY2FuIHByb3ZlIEkgd3Jvbmc/Ck1lIFdvbmRlcmluZyBpZiB0aGVyZSBhcmUgYW55IHNpbmdsZSBzZW5pb3JzIGluIHlvdXIgYXJlYT8gU3RhcnQgbWVldGluZyBzaW5nbGVzIGluIE5lYXIgTWUgdG9kYXkgd2l0aCBvdXIgZnJlZSBvbmxpbmUgcGVyc29uYWxzIGFuZCBmcmVlIE5lYXIgTWUgY2hhdCEgU3RhcnQgZGF0aW5nIGluIE5lYXIgTWUgdG9kYXkhIEFzIGFzcGVjdHMgb2YgZGF0aW5nIHRlbmQgdG8gY2hhbmdlIHdpdGggZWFjaCBnZW5lcmF0aW9uLCBnZXR0aW5nIGJhY2sgaW50byB0aGUgc3dpbmcgb2YgdGhpbmdzIGlzIHF1aXRlIGEgZGF1bnRpbmcgcHJvc3BlY3QgZm9yIHNpbmdsZSBzZW5pb3JzLiAKVGhlIHdpbm5lcnMgd2VyZSBpbnRyb2R1Y2VkIGJ5IHRoZSBjaGFpciBvZiB0aGUgYWRqdWRpY2F0aW9uIHBhbmVsIE1hcnkgQmVubmV0dCBhbmQgYXdhcmRzIG9yZ2FuaXNlciBPbGxpZSBSb2JpbnNvbiB0byBhIGxhcmdlIGF0dGVuZGFuY2Ugb2YgZmFtaWx5IGFuZCBzdXBwb3J0ZXJzLi4gCkkgaGF2ZSBiYWQgZXhwZXJpZW5jZSB3aXRoIFRHViwgYnV0IGluIEZyYW5jZS4gSSBoYWQgdG8gY2hhbmdlIHRyYWlucyBhbmQgd2UgaGFkIHRvIHdhaXQgYSBsb25nIHRpbWUgZm9yIHRoZSBvdGhlciBwYXNzZW5nZXJzIHRvIGdldCBvZmYgdGhlIHRyYWluLCBzbyB0aGUgY29uZHVjdG9yIG9mIHRoZSBUR1YgZGVjaWRlZCB0byBsZWF2ZSB3aXRob3V0IHVzLCBqdXN0IHRvIHN0YXkgb24gdGltZSAoYW5kIHRoZXJlIHdhcyBhIG1vdGhlciB3aXRoIGEgc3Ryb2xsZXIgc3R1Y2sgaW4gdGhlIGRvb3JzLCB3aGVuIGhlIGRlY2lkZWQgdG8gZGVwYXJ0ZWQgICBldmVyeXRoaW5nIHdlbnQgd2VsbCB0aG91Z2gsIGJ1dCBpdCB3YXMgYSBzaG9jay4pIGFuZCBzaW5jZSB5b3UgaGF2ZSB0byByZXNlcnZlIHlvdXIgc2VhdHMgaW4gYWR2YW5jZSwgaXQgbm90IHBvc3NpYmxlIHRvIHRha2UgdGhlIG5leHQgVEdWLCBJIHRoaW5rLiBJIGRvbiBrbm93IGhvdyB0aGUgcG9saWNpZXMgYXJlIGluIEdlcm1hbnksIGJ1dCBJIGRvbiB0aGluayB0aGV5IHdpbGwgd2FpdC4gTWF5YmUgdGhlcmUgYXJlIG90aGVyIHRyYWlucyBnb2luZyB0byBQYXJpcyBsaWtlIHRoZSBUaGFseXMgKGJ1dCB0aGV5IGFyZSBzbG93ZXIgYW5kIGlkayBpZiB0aGV5IGRlcGFydCBmcm9tIFN0dXR0Z2FydCkuIFRoZSBwZW9wbGUgb2YgdGhlIERCIHdpbGwgcHJvYmFibHkgaGVscCB5b3UgdG8gZ2V0IG9uIG9uZSBvZiB0aG9zZS4KWW91ciBvcHBvbmVudCBjaGVja3MsIHlvdSByYWlzZSAkMjAgYW5kIHRoZXkgY2FsbC4gCkRhbnMgY2V0IGFydGljbGU6QXBwcmVuZHJlIGxlcyBiYXNlc0pvdWVyIGF1IFRleGFzIEhvbGQnZW1BbWxpb3JlciBzYSBzdHJhdGdpZUpvdWVyIGRlIGZhb24gcHJvZmVzc2lvbm5lbGxlQXBwcmVuZHJlIGRlcyB2YXJpYW50ZXMgcG9wdWxhaXJlc0Nvbm5haXRyZSBsZXMgY29tYmluYWlzb25zCkhvcGUgdGhpcyBkb2VzbiBmZWVsIGxpa2UgcHV0dGluZyBhIGJhbmRhaWQgb3ZlciBhIGJpZ2dlciBpc3N1ZSBidXQgSSBob3BlIHlvdSBhbGwgc2VlIHRoYXQgd2UgaGF2ZSBjbGVhciBuZXh0IHN0ZXBzIGFuZCBpZGVhcyBmb3IgdGhlIGltcHJvdmVtZW50cyB3ZSBuZWVkIHRvIG1ha2UgdG8gZ2V0IHRoZSBzdWIgd2hlcmUgaXQgc2hvdWxkIGJlLiBXZSBhcG9sb2dpemUgZm9yIHRoZSBzdWIgbm90IGJlaW5nIHdoYXQgaXQgc2hvdWxkIGJlLCBhbmQgcGxlZGdlIHRvIG1ha2UgaW1wcm92ZW1lbnRzIGluIGJvdGggdGhlIHNob3J0IHRlcm0gYW5kIGxvbmcgdGVybS4KQWZ0ZXIgc2V2ZXJhbCBkYXlzIHdpdGggbm8gcmVzcG9uc2UgZnJvbSBoZXIgcGFyZW50cywgQ2F0aGVyaW5lIGJlZ2FuIHRvIHdvcnJ5IGFuZCBjYWxsZWQgYW4gZW1wbG95ZWUgb2YgdGhlIENhc3RsZXdvb2QgQ291bnRyeSBDbHViLCB3aGVyZSB0aGV5IGxpdmVkLCB0byBnbyBjaGVjayBvbiB0aGVtLiBUaGlzIHJlc3VsdGVkIGluIGEgOTExIGNhbGwgdG8gcG9saWNlLiBCb3RoIEVybmVzdCBhbmQgQ2hhcmxlbmUgU2NoZXJlciB3ZXJlIGZvdW5kIGJydXRhbGx5IG11cmRlcmVkIGluc2lkZSB0aGVpciBob21lIGF0IDE4IENhc3RsZXdvb2QgRHJpdmUuCkRyYXcgU29tZXRoaW5nIGhpdHMgNTAgbWlsbGlvbiBkb3dubG9hZHMgaW4ganVzdCBhIGZldyB3ZWVrcy4gCkluIGEgbGV0dGVyIHRvIHRoZSB1bmlvbidzIG1lbWJlcnNoaXAgbGFzdCB3ZWVrLCBoZSB3cm90ZTogIlRoZSBzY29wZSBvZiB0aGVzZSBpbnZlc3RpZ2F0aW9ucyBzdWdnZXN0IGEgY29tcHJlaGVuc2l2ZSBhdHRhY2sgb24gbXVsdGlwbGUgYXNwZWN0cyBvZiBMb2NhbCA5OC4iCkdhcmxhbiB0aGUgbW90aGVyZnVja2luZyBHYWxsYW50IGlzIHN0cmFpZ2h0IHVwIG9uZSBvZiB0aGUgYmVzdCBkdWRlcyB0byBzaG93IHVwIGluIHRoZSBib29rcy4gV2hlbiBUeXJpb24gaXMgYmFzaWNhbGx5IHBlcnNvbmEgbm9uIGdyYXRhIGluIEpvZmZyZXkgY291cnQsIEdhcmxhbiBpcyB0aGUgb25seSBwZXJzb24gdG8gcHVibGljbHkgaG9ub3VyIGhpbSBmb3IgaGlzIHJvbGUgaW4gdGhlIEJsYWNrd2F0ZXIgZGVmZW5jZS4gV2hlbiBKb2ZmcmV5IGlzIHRyeWluZyB0byBodW1pbGlhdGUgVHlyaW9uLCBHYXJsYW4gc3RhbmRzIHVwIGZvciBoaW0gYW5kIGRpc3BhcmFnZXMgSm9mZnJleSBiZWhhdmlvdXIsIGluIGZyb250IG9mIGV2ZXJ5b25lLiAKT24gYSBwZXJzb25hbCBub3RlLCBJIGxvdmUgcGxheWluZyB0aGUgZGV1Y2VzIHdpbGQgdmlkZW8gcG9rZXIuIEV2ZW4gdGhvdWdoIHlvdSB3aWxsIGZpbmQgdGhhdCB0aGUgd2lubmluZyBpc24ndCBodWdlLCB0aGVyZSBpcyBwbGVudHkgb2YgZW5qb3ltZW50IHRoYXQgY2FuIGhhdmUgeW91IHBsYXlpbmcgZm9yIGhvdXJzIG9uIGVuZC4gVGhlbiBvZiBjb3Vyc2UgaWYgeW91J3JlIGxvb2tpbmcgdG8gc2F0aXNmeSB0aG9zZSBwb2tlciBtYWNoaW5lIGdhbWVzIGNyYXZpbmdzLCB5b3UgZG9uJ3QgaGF2ZSB0byBzcGVuZCAkMTAwIG9yIG1vcmUganVzdCB0byBnYW1ibGUgYXQgdGhlIGNhc2luby4gSW4gZmFjdCwgSSBrbm93IGEgZmV3IHBlb3BsZSB3aG8gdXNlIHRoZXNlIHNvIHRoZXkgY2FuIHByYWN0aWNlIHRoZWlyIHN0cmF0ZWd5IGZvciB3aGVuIHRoZXkgYWN0dWFsbHkgZ28gdG8gYSByZWd1bGFyIGNhc2luby4KU3BlbmQgdGhlIGZpcnN0IGNvdXBsZSBvZiBtb250aHMgd2l0aCBsaWdodGVyIHdlaWdodCwgYW5kIHdvcmsgb24gZm9ybS4gRm9ybSBpcyBhYnNvbHV0ZWx5IGNydWNpYWwgaWYgeW91IGV4cGVjdCB0byBtb3ZlIG9udG8gcHVzaGluZyBzb21lIHJlYWwgaGVhdnkgc3R1ZmYgYXQgYW55IHBvaW50LiAKSm91cm5hbCBvZiBOZXVyb3NjaWVuY2UuIApSZXRpcmVtZW50IGRpZCBub3QgbGFzdCBsb25nIGFzIExlZSBzb29uIGZvdW5kIGEgcG9zaXRpb24gYXMgQXNzaXN0YW50IERlYW4gYXQgdGhlIEZhY3VsdHkgb2YgRWR1Y2F0aW9uIGluIHRoZSBTdWx0YW5hdGUgb2YgT21hbi4gSGUgcmV0dXJuZWQgdG8gQ2FuYWRhIHRvIHdvcmsgd2l0aCBhIFByaXZhdGUgSW50ZXJuYXRpb25hbCBDb2xsZWdlIGFzIFByaW5jaXBhbCwgcmVjcnVpdGluZyBzdHVkZW50cyBmcm9tIGFsbCBvdmVyIEFzaWEuIApBIGd1eSB3aG8gcHV0cyB1cCBhIHByb2ZpbGUgb24gYSBkYXRpbmcgb3Iga2luayBzaXRlIHdpbGwsIG9uIGF2ZXJhZ2UsIGdldCBGQVIgZmV3ZXIgdW5zb2xpY2l0ZWQgbWVzc2FnZXMsIHJlZ2FyZGxlc3Mgb2YgaGlzIHN1YiBvciBkb20gdGVuZGVuY2llcy4gCkJlY29tZSBhIFJlZGRpdG9yYW5kIHN1YnNjcmliZSB0byBvbmUgb2YgdGhvdXNhbmRzIG9mIGNvbW11bml0aWVzLjI2CkkgbG92ZSB0byBzZWUgYSByZW1hc3RlcmVkIHZlcnNpb24gb2YgdGhlIGdhbWUgcG9wIHVwIG9uIFN0ZWFtIHNvbWV0aW1lLi4gCklmIHlvdSBldmVyIG5lZWQgdG8gdGFsayBvciBqdXN0IHdhbnQgdG8gYml0Y2ggYWJvdXQgYW55IGlzc3VlcyB0aGF0IGFyaXNlIGZyb20gdGhpcyBoaXQgbWUgdXAuCllvdSBjYW4gZXZlbiBtYWtlIHRoZSBndXkgYSBkYW5keSBvciBhICJwcmluY2UgY2hhcm1pbmciIHRvIGNvbXBldGUgd2l0aCBTb21hICJwbGFpbiIgY2hhcmFjdGVyLiAKQXMgYSByZXN1bHQsIGl0IGxhY2tzIHRoZSBnbGFtb3Igb2YgYSBncmFuZCBlbnRyYW5jZSB0eXBpY2FsIG9mIGEgTGFzIFZlZ2FzIGNhc2luby4uIApXZSBqdXN0IHdvcmtlZCBpdC4gV2UgZGlkbiBjYXJlIHRoZSBzY29yZSwgd2UgZGlkbiBjYXJlIHRoZSBzaXR1YXRpb24sIHRoZSBndXlzIHdvcmtlZCB0aGVpciB0YWlscyBvZmYgYW5kIEkgcmVhbGx5IGhhcHB5IHdpdGggdGhhdC4gCk9yZ2FuaXNlcnMgcHJvdWRseSBwcm9jbGFpbWVkIHRoYXQgdGhleSBoYWQgZmxvd24gaW4gbmVhcmx5IDMxOGtnIG9mIGxpdmUgbG9ic3RlcnMsIDgya2cgb2YgYXJ0aXNhbiBjaGVlc2VzIGZvciBjaGFyY3V0ZXJpZSBwbGF0ZXMgYW5kIGV2ZW4gdGhyZWUgYm90dGxlcyBvZiBMb3VpcyBYSUlJIENvZ25hYywgdmFsdWVkIGF0IGNsb3NlIHRvICQ5LDAwMC4gCkFsbCB0aGlzIHRvIHNheSwgdW5sZXNzIHlvdXIgbWFuYWdlciBmbGF0IG91dCB0ZWxscyB5b3UgdGhhdCB0aGUgc2ljayB0aW1lIHlvdSB0YWtlbiBpcyB1bmFjY2VwdGFibGUsIG9yIG90aGVyd2lzZSBzYXlzIHRoYXQgeW91IGJlZW4gb3V0IHRvbyBtdWNoLCBJIGRvbiB0aGluayB5b3UgcmVhbGx5IGhhdmUgYSBwcm9ibGVtLiAKVGhlIGRyYWdvbidzIHBvaW50IG9mIHZpZXcgc3RpbGwgdGhpbmsgaXQgYSBncmVhdCBidXNpbmVzcy4gVGhleSBhcmVuIHByb2ZpdGFibGUgeWV0LCBidXQgdGhhdCB0eXBpY2FsIGZvciB0aGlzIHR5cGUgb2Ygc3RhcnR1cCwgTXIuIApBbHdheXMgYmUgYXdhcmUgdGhhdCBoZWFsZXIgRFBTIGlzIGhhbGYgc2tpbGwgYW5kIGhhbGYgcGFydHkuIEkgY2FuIHZlcnkgZWFzaWx5IGRvIDQgNC41ayBkYW1hZ2Ugb24gc2F5IGNoYW9zIG9uIFdITSB3aXRoIGEgc3RhdGljLCBidXQgd2hlbiBJIGhlbHAgd2Vla2x5IFBVRyBwYWdlIHJ1bnMgd2hlcmUgcGVvcGxlIHRha2Ugc3R1cGlkIGRhbWFnZSBvciBkaWUgb3IgdGhlIGZpZ2h0IGlzIDIgbWludXRlcyBsb25nZXIsIGdldHRpbmcgMyAzLjVrIGlzIG5vcm1hbC4gCllvdSBtYXkgZmluZCB5b3Vyc2VsZiBnb2luZyBiYWNrIGFuZCB3aXNoaW5nIGRlZXBseSB0byByZWxpdmUgdGhlIGZpcnN0IHllYXJzIG9mIHlvdXIgbWFycmlhZ2UuIEhvd2V2ZXIsIGxvc2luZyBob3BlIGlzIG5vdCBhbiBvcHRpb24gYXMgdGhlcmUgaXMgbmV2ZXIgYSAidG9vIGxhdGUiIHBvbGljeS4gCkxpa2UgYW55IG90aGVyIHNraWxsLCBjdW5uaW5nIGlzIHNvbWV0aGluZyB0aGF0IG1vc3QgcGVvcGxlIGhhdmUgdG8gd29yayBhdC4gU29tZSBwZW9wbGUgYXJlIG5hdHVyYWxseSBtb3JlIGN1bm5pbmcgdGhhbiBvdGhlcnMsIHdoaWxlIG90aGVycyBhcmUgbW9yZSBndWxsaWJsZS4gCiBtYXkgY29tZSBvdXQgaW4gc2V2ZXJhbCB3YXlzLCBhbmQgaXQgdXN1YWxseSBpbnZvbHZlcyBzb21lIHZpb2xhdGlvbiBvZiBmcmVlZG9tIGluIG9uZSBvZiBzZXZlbiB3YXlzOiAxLiAKU2FwcGhpcmUgY3J5c3RhbCB3aXRoIG5vIGFyIGNvYXRpbmcuIFByZXNzZWQgY2xhc3AgYW5kIHRoZSBmaW5pc2hpbmcgaXMgd29yc2UuIApUaGUgZWlnaHQgc3RvcmV5IHZlbnVlLCB3aGljaCB3aWxsIGhvc3QgYXJvdW5kIDEwMCBldmVudHMgYSB5ZWFyICAgYXMgdmFyaWVkIGFzIE5pY2tpIE1pbmFqIGNvbmNlcnRzIGFuZCBVbHRpbWF0ZSBGaWdodGluZyBDaGFtcGlvbnNoaXAgbWF0Y2hlcyAgaXMgdGFpbG9yZWQgdG93YXJkcyB0b2RheSdzIExhcyBWZWdhcywgd2hlcmUgbGF2aXNoIGVudGVydGFpbm1lbnQgYW5kIGluZHVsZ2VudCBleHBlcmllbmNlcyB0cnVtcCBzbG90IG1hY2hpbmVzIGFuZCBwb2tlciBwbGF5aW5nLiBJdHMgZXh0cmF2YWdhbmNlcyBhbmQgb3N0ZW50YXRpb3VzIG9wZW5pbmcgbWF0Y2ggdGhlIGN1cnJlbnQgbW9vZCBpbiB0aGUgY2l0eSwgd2hlcmUgYW4gZXhpc3RlbnRpYWwgY3Jpc2lzIG9mIHNvcnRzIHNwYXduZWQgYnkgdGhlIEdyZWF0IFJlY2Vzc2lvbiBhcHBlYXJzIHRvIGhhdmUgd2VsbCBhbmQgdHJ1bHkgcmVjZWRlZC4KTm93IEkgdGhpbmsgb3VyIGZvb2QgaXMgcmVhbGx5IGdvb2QsIGFuZCBhbGwgdGhlIGNoZWZzIGFyZSBmcmllbmRzLiAKRXZlcnkgb25lIG9mIHlvdSB3aG8gaGFzIGJlZW4gbGF1Z2hpbmcgYVQgbWUgd2lsbCB3aXRoIGNlcnRhaW50eSBmYWNlIGNyaW1pbmFsIHByb3NlY3V0aW9uLiAKRWRtdW5kIHdvdWxkIGJlIHRoZSBtb3N0IGxpa2VseSB0byBpbmhlcml0IHRoZSB0aHJvbmUsIGFzIGluZGVlZCBoZSBsYXRlciBkb2VzIGFmdGVyIHRoZWxyZWQncyBkZWF0aCBpbiAxMDE2LiAKRW4ga2FqYSByIGVuIGthamEgb2NoIGRlbCBpIGZhbWlsamVuIGtya2ZnbGFyLiBNZW4gZGV0IHZhciBpbnRlIGRldCBkdSBzYS4gCiJOZWFybHkgMjUlIG9mIG1vdGhlcnMgZ28gYmFjayB0byB3b3JrIHdpdGhpbiB0d28gd2Vla3Mgb2YgZ2l2aW5nIGJpcnRoLiBUbyBnaXZlIHlvdSBhIHNlbnNlIG9mIHdoZXJlIGh1bWFuIG1vdGhlcnMgZmFsbCBvbiB0aGUgbGVnYWwgcHJvdGVjdGlvbiBoaWVyYXJjaHksIGl0J3MgaWxsZWdhbCB0byBzZXBhcmF0ZSBhIGRvZyBmcm9tIGhlciBuZXdib3JuIHB1cHMgYmVmb3JlIDggd2Vla3MgaW4gc2V2ZXJhbCBzdGF0ZXMuIiBUaGUgbGF3IHByb3RlY3RzIGRvZ3MgbW9yZSB0aGFuIGh1bWFuIHdvbWVuLiBJIGFtIHR3byB3ZWVrcyBwb3N0cGFydHVtIHJpZ2h0IG5vdy4gSSBzdGlsbCBiYXJlbHkga25vdyB3aGVuIGl0J3MgZGF5IG9yIG5pZ2h0IGFuZCBkb24ndCBldmVuIGhhdmUgYSBzY2hlZHVsZSBmaWd1cmVkIG91dCB0byBmZWVkIG15IGNoaWxkLiBNeSBicmFpbiBiYXJlbHkgZnVuY3Rpb25zLCBhbmQgSSdtIGx1Y2t5IGlmIEkgZ2V0IGEgc2hvd2VyIGV2ZXJ5IGNvdXBsZSBvZiBkYXlzLiBJJ20gc3RpbGwgYmxlZWRpbmcsIGFuZCBJIGhhZCBhIHJlbGF0aXZlbHkgZWFzeSBkZWxpdmVyeS4KTm8sIHRoZXkgZG9uIFlvdSBvbmx5IGhhdmUgdG8gcGF5IGV4dHJhIGZvciBwcmVtaXVtL2V4aXQgcm93IHNlYXRzLCB3aGljaCBvZmZlciBtb3JlIHNwYWNlIGFuZC9vciBvdGhlciBiZW5lZml0cy4gVGhpcyBzdGlsbCBkb2VzbiBhZmZlY3QgZmFtaWxpZXMgd2l0aCBzbWFsbCBjaGlsZHJlbi4KVGhlIGdvYWwgdGhpcyB5ZWFyIHdhcyB0byB0cmVhZCB3YXRlciB1bnRpbCB3ZSBjYW4gZ3JhYiBhIHNlY29uZCBzdGFyIGFuZCB3ZSdyZSBzdGlsbCBvbiB0cmFjay4uIAp2b2x1dGlvbm5haXJlcyBkZSBVTkFFIEp1bGllbiBWZW5lc3NvbiBmb250IGxldXIgYXBwYXJpdGlvbiBlbiBwcgpXcml0dGVuIGluc2lkZSB0aGUgZmFrZSBlbWFpbCBldGMgdGhlIG5hbWUgb2YgYSBmYW1vdXMgd2Vic2l0ZXMsIHRoYXQgYXNrIHlvdSBkbyBwYXkgZWxlY3Ryb25pYyBtb25leSBhdCB0aGUgY29udmVuaWVuY2Ugc3RvcmUuIFRoZXJlIGFyZSBtYW55IHRlY2huaXF1ZXMgdG8gdHJpY2sgcGVvcGxlIHNvIGl0cyBiZWNvbWluZyBoYXJkIHRvIGtub3cgZm9yIHN1cmUuIApUbDtkciByL2hvY2tleSBpc24gYW4gYW50aSBvaWxlcnMgdGVhbSwgb3IgcmVhbGx5LCBhbnRpIGFueSB0ZWFtCkN1cnJlbnRseSB1bmtub3duLCBidXQgb24gT2N0IDI5dGgsIENyeXB0aWMgU3R1ZGlvcyByZXBvcnRlZCB0aGUgMSBtaWxsaW9udGggaGVybyB3YXMgbWFkZSBpbiBnYW1lLiBUaGlzIGRvZXMgbm90IG1lYW4gImFjY291bnRzIiBvciBpbmRpdmlkdWFscyBwbGF5aW5nIGJlY2F1c2UgYW4gYWNjb3VudCBjYW4gaGF2ZSBtdWx0aXBsZSBoZXJvZXMuIElmIHRoaXMgaXMgdHJ1ZSwgdGhlbiB0aGF0IHdvdWxkIGxlYWQgeW91IHRvIGJlbGlldmUgMjUwayBhY2NvdW50cyBoYXZlIGJlZW4gY3JlYXRlZCAuIApBbGwgdGhpcyB3aWxsIGJlIGxlYXJudCBvdmVyIHRpbWUgYW5kIHRoZXJlcyBubyByZWFsIHdheSBvZiBleHBsYWluaW5nIGl0IGJlY2F1c2UgYXNzdW1pbmcgeW91ciBwbGF5aW5nIGhvbGQnZW0gY2hhbmNlcyBhcmUgdSB3aWxsIG5ldmVyIGZhY2UgdGhlIDcgc2FtZSBjYXJkcyAoMiBpbiBoYW5kLCA1IGNvbW11bml0eSkgYW5kIHRoZSBvbmVzIHlvdXIgb3Bwb25lbnRzIGFyZSBob2xkaW5nLCBpbiBvbmUgaGFuZCBhZ2Fpbi4gCkhlciBza2luIGJlZ2lucyB0byBsb3NlIGl0cycgZ2xvdy4gCk92ZXJ2aWV3IGZvciBTY290dEN1cmwKSSB3aXNoIEkgd291bGQgaGF2ZSBrbm93biBzb29uZXIgd2hhdCB3YXMgZ29pbmcgb24gb3IgSSB3b3VsZCBvZiBiZWVuIG91dCBvZiB0aGVyZS4gSSBoYXZlIG5ldmVyIHRvbGQgdGhpcyB0byBhbnlvbmUuIApUaGUgZ29hbCwgdGhlc2UgcGFzdG9ycyBzYXksIGlzIHRvIGluamVjdCBzb21lIG1hY2hpc21vIGludG8gdGhlaXIgbWluaXN0cmllcyAgIGFuZCBpbnRvIHRoZSBpbWFnZSBvZiBKZXN1cyAgIGluIHRoZSBob3BlIG9mIG1ha2luZyBDaHJpc3RpYW5pdHkgbW9yZSBhcHBlYWxpbmcuICJDb21wYXNzaW9uIGFuZCBsb3ZlICAgd2UgYWdyZWUgd2l0aCBhbGwgdGhhdCBzdHVmZiwgdG9vLCIgc2FpZCBCcmFuZG9uIEJlYWxzLCAzNywgdGhlIGxlYWQgcGFzdG9yIGF0IENhbnlvbiBDcmVlayBDaHVyY2ggb3V0c2lkZSBvZiBTZWF0dGxlLiAKV2UgZG9uIGtub3cgZXhhY3RseSBob3cgYmxpenphcmQgaXMgZ29pbmcgdG8gZG8gcHJvZ3Jlc3NpdmUgc3R1ZmYsIHRoZXJlIGhhcyBkZWZpbml0ZWx5IGJlZW4gdGFsa3MgYWJvdXQgc29tZSB0aGluZ3MgcHJvZ3Jlc3NpdmUgbGlrZSBwcm9iYWJseSBkb24gcmVsZWFzZSBuYXh4IHN0dWZmIGltbWVkaWF0ZWx5LCBidXQgaXQgcmVhbGx5IGp1c3QgYSBxdWVzdGlvbiBvZiBob3cgZGVlcCB5b3UgZ28sIGFuZCBub3N0YWxyaXVzIHdlbnQgcHJldHR5IGRlZXAuCkxhZHkgR2FHYSksIENoaWxsaW4gKGZlYXQuIExhZHkgR2FHYSkgLiAKV2VyZSB5b3UgYm9ybiB3aXRoIGEgbWVudGFsIGhlYWx0aCBkZWZlY3Q/IFlvdSBsaXRlcmFsbHkgc3BlbnQgZGF5cyB0cnlpbmcgdG8gY29udmluY2UgYSBzaW5nbGUgaW50ZXJuZXQgc3RyYW5nZXIgdGhhdCB5b3UgaGF2ZSBtb25leSBhbmQgdGhhdCB5b3Ugbm90IGEgYnJva2UgZGljay4gClF1YW5kIG9uIHBhcmxlIGRlIHNleGUgZGFucyBsYSBsaXR0cmF0dXJlIHF1YmNvaXNlLCBvbiBlc3Qgc291dmVudCBkYW5zIGxlIGdsYXVxdWUsIGRhbnMgbGUgbm9pci4gSmUgdm91bGFpcyBxdWUgYSBzb2l0IGxnZXIsIHB0aWxsYW50LCB1biBmZWVsIGdvb2QgYm9vayAsIHNvdWxpZ25lIFN0cGhhbmUgRG9tcGllcnJlLiAgQ2UgcXVlIGonZXNwcmUsIHF1YW5kIGxlcyBnZW5zIGxpcm9udCBsZXMgbm91dmVsbGVzLCBjJ2VzdCBxdSdpbHMgbGVzIGxpcm9udCBzYW5zIHNlIGRlbWFuZGVyIHNpIGMnZXN0IHVuIGdhcnMgb3UgdW5lIGZpbGxlIHF1aSBsJ2EgY3JpdC4uIApJbiBOb3J3YXksIG1vc3QgcGVvcGxlIHN0YXJ0aW5nIG91dCBmaW5kIHRoZWlyIGluaXRpYWwgaW50ZXJlc3QgaW4gcG93ZXJsaWZ0aW5nIGJ5IHdheSBvZiBzdGFydGluZyBvbiBvdGhlciBnZW5lcmFsIHN0cmVuZ3RoIHRyYWluaW5nIHByb2dyYW1zLCBTUywgU0wsIDUvMy8xIGV0Yy4gT25jZSB0aGV5IGpvaW4gYSBQTCBjbHViIGFuZCBzdGFydCBnZXR0aW5nIG1vcmUgc3BvcnQgc3BlY2lmaWMgdHJhaW5pbmcgZnJvbSB0aGVyZSAsIG1vc3QgZW5kIHVwIHVzaW5nIHRyYWluaW5nIHByb2dyYW1zIGJhc2VkIG9uIHRoZSBwcmluY2lwbGVzIGRldmVsb3BlZCBieSBEaWV0bWFyIFdvbGYsIHRoZSAoZm9ybWVyKSBoZWFkIGNvYWNoIG9mIHRoZSBOb3J3ZWdpYW4gUG93ZXJsaWZ0aW5nIHRlYW0uLiAKQXMgbXkgb2ZmaWNlIG1hdGUgcHV0cyBpdCAoc2hlIEtvcmVhbiksICJ3ZSB2ZXJ5IGdvb2QgYXQgaW1wcm92aW5nIG9uIGFuZCBjb21iaW5pbmcgZXhpc3RpbmcgaWRlYXMuIi4gCkhheWF0bGFybm4gYm9rdGFubHlsYSBiYSBlZGVtZXllbiBpbnNhbmxhcm4gYmlyIHVtdSBoYWxsZXJpeWxlIHNva2FrdGEsIHRvcGx1IHRhbWFkYSwgdHJhZmlrdGUgYmEgZXRtZWsgaXN0ZW1peW9ydW0uIHUgYW5kYSBkYSB2YXJsYXIgYW1hIGVuIGF6bmRhbiBzYXlsYXIgZ3JlY2UgYXogdmUgeWFzYWsgb2xkdXUgaWluIGdlbmVsZGUgZXZsZXJpbmRlbGVyLCBwZWsgemFyYXIgdmVybWl5b3JsYXIgYmFrYWxhcm5hLgpMb3UgbG92ZWQgaGlzdG9yeSwgZXNwZWNpYWxseSB3YXRjaGluZyBTZWNvbmQgV29ybGQgV2FyIGRvY3VtZW50YXJpZXMgYW5kIHNwZW5kaW5nIHRpbWUgd2l0aCBoaXMgZnJpZW5kcyB3YXMgb25lIG9mIGhpcyBncmVhdGVzdCBwbGVhc3VyZXMgaW4gbGlmZS4gCkkgYW0gd29uZGVyaW5nIGlmIHlvdSB0aGluayBJbSBiaXRpbmcgb2ZmIG1vcmUgdGhhbiBJIGNhbiBjaGV3IGFuZCBzaG91bGQganVzdCBzdGljayB0byBCYWxpIGFuZCBMb21ib2sgb3IgaWYgeW91IHRoaW5rIEkgY291bGQgaGl0IEZsb3JlcyB0byBMb21ib2sgdG8gQmFsaSBhbmQgaWYgc28gd2hhdCB5b3UgdHJ5IHRvIHNlZSBhbmQgaG93IHRvIGRvIGl0LiAKQWxleHN0cmFzemEyMyAgMTAgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnbwpPbiB0aGUgb3RoZXIgaGFuZCBiZWVuIHRvcCBwbGFjZXMgdGhhdCBzZWVtIHRvIGhhdmUgcmF2ZSByZXZpZXdzIGFuZCB3YWxrZWQgb3V0IHRoaW5raW5nIHdoYXQgYWxsIHRoZSBib3RoZXIgaW4gYWJvdXQuIApJIGNhbiBhZGp1c3QgbXkgc2NoZWR1bGUgdG8gc3VpdCB5b3UuIFBsZWFzZSBjYWxsIGFoZWFkIG9yIHRoZSBuaWdodCBiZWZvcmUgaWYgZWFybHkgb3IgbGF0ZSBob3VyIHRpbWUgaXMgbmVlZGVkLiAKRm9sbG93IHRoZSBhZHZpY2Ugb2YgeW91ciBhdHRvcm5leSwgYnV0IEkgc29ydGEgdGhpbmsgaXQgd291bGQgYmUgYmVzdCBmb3IgeW91IHlvdSB0byBzZXZlciBjb250YWN0IHdpdGggdGhlIG1hbiBhcyB3ZWxsIHVudGlsIHlvdSBuZWVkIHRvIGhhdmUgaGltIHNlcnZlZCB3aXRoIGEgY291cnQgb3JkZXIgZm9yIGRldGVybWluYXRpb24gb2YgcGF0ZXJuaXR5IGFuZGxvbm5pZWxlZTMgIDEyIHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ28uIApDbG9zZSB1cCBvZiBibHVlIGNlbGx1bG9pZCBjeWxpbmRlciByZWNvcmQgb24gQ0tVQSdzIEFtYmVyb2xhIDMwIHBob25vZ3JhcGguIApUaGUgdmVyZGljdDogQSBwYWRkZWQgcm9sbCBvZmZlcnMgbG93ZXIgYmFjayBzdXBwb3J0LiBUaGUgdW5pdCBpcyBhY3RpdmF0ZWQgYnkgcHJlc3NpbmcgYSBidXR0b24gZW1iZWRkZWQgaW4gdGhlIHJvbGw7IHByZXNzIGl0IG9uY2UgdG8gYWN0aXZhdGUsIHByZXNzIGEgc2Vjb25kIHRpbWUgZm9yIGEgbW9yZSBpbnRlbnNlIG1hc3NhZ2UuIEF0IGZpcnN0LCBpdCBmZWx0IG1vcmUgbGlrZSBpbnRlbnNlIHJ1bWJsaW5nIHRoYW4gYSBtYXNzYWdlLiAKSSB3YXNuIGNvbXBhcmluZyB0aGUganVzdGljZSBzeXN0ZW0sIGl0IHdhcyByYXRoZXIgYWJvdXQgcGVyc29tIGtpY2tpbmcgaGVyIG91dCBJIHNlZSB0aGlzIGJpdCBhcyBhIGNvbmZsaWN0IGJldHdlZW4gaHVuZHJlZHMgb2YgcGVyc29ucyB3YW50aW5nIHRvIGNvbnRpbnVlIHRyYXZlbHMsIGFuZCBvbmUgd2FudGluZyB0byBkZWxheSBpdC4KV2hhdCBtaWdodCBlc3RhYmxpc2ggdGhlIHBlcmlwaGVyaWVzIG9mIHRoaXMgcXVlc3Rpb24gYXJlIGJvb2tzIHRoYXQga2VlcCBpbnRhY3QgYSBiZWxpZWYgc3lzdGVtLCBvciB3YXkgb2YgbGlmZSwgYSBzZWNyZXQgb3Igbm90IGNvZGlmaWNhdGlvbiBvZiBhIHN0YXRlIG9mIHdlbGwgYmVpbmc/IEEgQmlibGU/IEFsY29ob2xpY3MgQW5vbnltb3VzPyBQcm9iYWJseSB0aGF0IGlzIHRoZSBmaXJzdCBwbGFjZSB0byB2aXNpdCwgdGhlIHJlbGlnaW91cyBib29rLCB0aG91Z2ggb2ZmaGFuZCBpdCBzZWVtcyB0aGF0IHRoZSB0cmF2ZWwgb2YgdGhpcyBzb3J0IG9mIGJvb2sgd291bGRuIHRyYW5zY2VuZCBvbmUgb3duZXIuIFRoZSBCaWJsZSBhbmQgY29tcGFueSBhcmUgZW5vcm1vdXNseSBwb3B1bGFyIGJvb2tzIGFuZCBoYXZlIGJlZW4gcHJpbnRlZCBubyBkb3VidCBpbiB0ZXJtcyBvZiBiaWxsaW9ucyBvZiBjb3BpZXMsIHNvIHRoZXkgaGF2ZSBhIG11Y2ggYmV0dGVyIGNoYW5jZSBvZiBiZWluZyB0aGUgbGVhZGVyIG9mIHRoZSBjYXRlZ29yeSBieSBzaGVlciBudW1lcmljYWwgcG9zc2liaWxpdHkuIApUaHVzIGluIDYgbW9udGhzIHRoZXkgY2FuIGNvbGxlY3QgYW5vdGhlciA1MDAgYnVja3MgZnJvbSB0aGUgd2hhbGVzLiAKWW91IGhhdmUgdGhlICJJIGRvbiBnaXZlIGEgZnVjaywgYW5kIHdoZW4gdGhlIGdhbWUgc3Vja3MgSSBtb3ZlIG9uIiBhdHRpdHVkZS4gV2hpbGUgb3RoZXJzIG1pZ2h0IGhhdmUgIkkgbGlrZSB0aGUgcHJlbWlzZSBvZiB0aGlzIGdhbWUgYW5kIGl0IGNhbiBoYXZlIGV2ZW4gZ3JlYXRlciBwb3RlbnRpYWwgdGhyb3VnaCBteSBjb250aW51ZWQgc3VwcG9ydCBhbmQgaW52ZXN0bWVudC4iIERvbiBjb25mbGF0ZSB5b3VyIGF0dGl0dWRlIGFuZCBvcGluaW9uIGFzIHRoZSBsb2dpY2FsIG9uZSB3aGVuIHlvdSB2aWV3IHRoZSB3aG9sZSBnZW5yZSBhdCBzdWNoIGEgc3VyZmFjZSBsZXZlbC4KMTIuIEFuZCB0byBlbmQgdGhlIGdhbWUsIHRoZSBkZWFsZXIgd2lsbCBidXJuIGEgY2FyZCBhbmQgcG9zaXRpb24gdGhlIGZpbmFsIGNhcmQgb24gdGhlIHRhYmxlLCBmYWNlIHVwLiAKQ2xpbWIgdGhlIHZpbmVzLCBqdW1wIHJpZ2h0LCBhbmQganVtcCBwYXN0IHRoZSB3YXJyaW9ycyBhbmQgTXVtbXkgdG8gcmVhY2ggQm9vbWVyIGFuZCBCcmFkeSBhdCB0aGUgdXBwZXIgcmlnaHQuIApOZXZlciBiZWZvcmUgaGF2ZSBodW1hbnMgcGxheWVkIHdpdGggc28gbXVjaCBmYWlybmVzcyBhcyBkcmF3cyBhcmUgZXhlcnRlZCBpbiByYW5kb20gbW9kZXMsIGdpdmVuIGFsbCBwbGF5ZXJzIHRoZSBzYW1lIGNoYW5jZXMgdG8gc3VjY2VlZCBhcyBhbnkgb3RoZXIuIApUaGlzIGVsZWdhbnQsIGNvbnRlbXBvcmFyeSBhbmQgbHV4dXJpb3VzIGhvdGVsIHdpdGggMzcwIGd1ZXN0cm9vbXMgYW5kIDQyIHN1aXRlcyBvZmZlcnMgYnVzaW5lc3MgdHJhdmVsZXJzLCB0b3VyaXN0cyBhbmQgbG9jYWwgZ3Vlc3RzIGEgc29waGlzdGljYXRlZCBhbWJpZW5jZS4gU2l0dWF0ZWQgaW4gdGhlIEt1YWxhIEx1bXB1ciBDaXR5IENlbnRyZSAoS0xDQykgYW5kIHJpZ2h0IG5leHQgdG8gS3VhbGEgTHVtcHVyIENvbnZlbnRpb24gQ2VudHJlLCB0aGUgaG90ZWwgaXMgd2l0aGluIHdhbGtpbmcgZGlzdGFuY2Ugb2YgdGhlIGljb25pYyBQZXRyb25hcyBUd2luIFRvd2VycywgU3VyaWEgS0xDQywgS0xDQyBQYXJrLCBEZXdhbiBGaWxoYXJtb25payBQZXRyb25hcyBhcyB3ZWxsIGFzIHRoZSBHb2xkZW4gVHJpYW5nbGUgc2hvcHBpbmcgYW5kIGVudGVydGFpbm1lbnQgZGlzdHJpY3QuIFRoZSBQYXZpbGlvbiBTaG9wcGluZyBDZW50cmUgaXMgbGVzcyB0aGFuIGEgdGVuIG1pbnV0ZSB3YWxrIGJ5IHRoZSBjb3ZlcmVkIHNreSBicmlkZ2Ugb3V0c2lkZSB0aGUgaG90ZWwuCihGdWxsIEFuc3dlcikuIApUaGlzIGlzIEFtZXJpY2EuIEV2ZXJ5b25lIHVuZGVyc3RhbmRzIHBva2VyLiAKVGhlIGJlc3QgcG9zc2libGUgc3RyYWlnaHQgZmx1c2guIFRlbiwgSmFjaywgUXVlZW4sIEtpbmcsIGFuZCBBY2UgYWxsIG9mIHRoZSBzYW1lIHN1aXQuIC4KQmVzb25kZXJzIGF1ZiBkZXIgUG9zaXRpb24gZGVzIENlbnRlcnMgc2NoZWludCB2b3IgZGVtIFNhaXNvbnN0YXJ0IGltIEhlcmJzdCBub2NoIGVpbmlnZXMgYW4gR2VkYW5rZW5zcGllbGVuIHVuZCBhdWNoIGVudHNwcmVjaGVuZGVuIEhhbmRsdW5nZW4gbm90d2VuZGlnIHp1IHNlaW4uCkkgdXN1YWxseSBzZWUgaGltIHNpdHRpbmcgaW4gdGhlIGhvc3BpdGFsIGNhZmV0ZXJpYSBwbGF5aW5nIHBva2VyIG9uIGhpcyBpUGFkIChoaXMgZnJpZW5kIHdvcmtzIGluIHRoZSBjYWZlKS4gT25lIHRpbWUgSSB3YXMgc2l0dGluZyB3aXRoIGhpbSBhbmQgaGUgZ29lcyAiV293IGkganVzdCB3b24gNjAwIGRvbGxhcnMiIGFuZCBJIGxpa2UgIm5pY2UgZHVkZSwgd2hhdCBhcmUgeXRvdSBnb25uYSBzcGVuZCBpdCBvbj8iIGFuZCBoZSBnb2VzICJJIHNlbmRpbmcgaXQgdG8gbXkgbW9tIGFuZCBkYWQgaW4gRWwgU2FsdmFkb3IiLiBBcHBhcmVudGx5IGV2ZXJ5IHdpbm5pbmcgaGUgbWFrZXMgb25saW5lIGhlIHNlbmRzIGJhY2sgdG8gaGlzIGZhbWlseSBzbyB0aGV5IGNhbiBidXkgZm9vZCBhbmQgZ2Fzb2xpbmUgZXRjLi4gClRoZSBhY3R1YWwgdGVzdCBwYXBlciBoYXMgNTAgcXVlc3Rpb25zLiBUaW1lIGFsbG93ZWQgOiA2MCBtaW51dGVzLiAKVGhlIHNhbWUgY29uY2x1c2lvbiBjb3VsZCBiZSBkcmF3biBmb3IgS2hhYmliIHZzIEVkc29uLCBidXQgaXQgbm90IHRoYXQgRWRzb24gZGlkbiB3YW5uYSBraWNrLCBpdCB0aGF0IGhlIGRpZG4gaGF2ZSByb29tIGZvciBpdC4gCkFsc28gSSB0aG91Z2h0IHdoYXQgY2F1c2VkIHRoZSBwcm9ibGVtIHdhcyBwdXR0aW5nIGhlYWx0aCBpbnN1cmFuY2UgaW50byBhbiBvcmdhbml6YXRpb24gd2hvIHByaW1hcnkgY29uY2VybiBpcyB0byBtYWtlIG1vbmV5LiAKQ2hpbGRyZW4gbWFzc2FnZSBpcyBhcHBsaWNhYmxlIHdpZGVseSwgc3VjaCBhcyBpbmZhbnRpbGUgZGlhcnJoZWEsIHZvbWl0LCBiZWxseWFjaGUsIGNvbnN0aXBhdGlvbiwgaW5mYW50aWxlIG1hbG51dHJpdGlvbiwgY2F0Y2hpbmcgYSBjb2xkIGFuZCBoYXZpbmcgYSBmZXZlciwgY291Z2gsIHdob29waW5nIGNvdWdoLCBhc3RobWEsIGluZmFudGlsZSBjb252dWxzaW9uLCBub2N0dXJuYWwgZW51cmVzaXMsIHJpY2tldHMgZGlzZWFzZSwgbmlnaHQgY3J5LCB0aGUgc2VxdWVsYSBvZiBwb2xpb215ZWxpdGlzLCBhbmQgc28gb24uIApNeSBiaWdnZXN0IGh1cmRsZSByaWdodCBub3cgaXMgdGhhdCBJIGxlZnQgYSBqb2Igb2YgNCB5ZWFycyB0cnlpbmcgdG8gZ2V0IGFuIHVwZ3JhZGVkIHBvc2l0aW9uLCBidXQgaXQgdHVybmVkIG91dCB0byBiZSBhIHRvdGFsIGRpc2FzdGVyLCBhbmQgSSBzcGVudCB0d28gbW9udGhzIGF0IHRoYXQgam9iLCBhYm91dCBhIG1vbnRoIGF0IHRoZSBqb2IgYWZ0ZXIgdGhhdCwgYW5kIHRoZW4gZW5kZWQgdXAgaW4gcmV0YWlsIGJ1dCB1c2VkIHVwIG15ICJwb2ludHMiIGZyb20gYmVpbmcgaWxsIG9uZSB0b28gbWFueSB0aW1lcy4gCjUyKSBQb2tlciBGYWNlLyBTcGVlY2hsZXNzLyBZb3VyIFNvbmcgdy8gRWx0b24gSm9obi4gCkFzIHBhcnQgb2YgdGhpcyBlZmZvcnQsIE5IQSBoYXMgcGFydG5lcmVkIHdpdGggQXVidXJuIFVuaXZlcnNpdHksIHRocm91Z2ggQ0NJLCB0byBlbnN1cmUgc3R1ZGVudHMgd2hvIGNvbXBsZXRlIHRoZWlyIGhlYWx0aGNhcmUgZWR1Y2F0aW9uIHByb2dyYW1zIGFyZSBlbGlnaWJsZSB0byBzaXQgZm9yIHRoZSBjb3JyZXNwb25kaW5nIE5IQSBleGFtLiAKRm9yZCBQcm9taXNlcyBNb3JlIFByb2R1Y3RzIEZvciBUb3VnaCBFdXJvcGVhbiBNYXJrZXRBcyB0aGUgYmlnIEZyYW5rZnVydCBhdXRvIHNob3cgb3BlbnMgdG8gdGhlIHB1YmxpYywgRm9yZCBzYXlzIGl0J3MgZ3JlYXRseSBleHBhbmRpbmcgaXRzIHByb2R1Y3QgcGxhbnMgaW4gRXVyb3BlLgpXaGVuIHlvdSBkaWUgbm9vbmUgd2lsbCBtb3Vybi4gCkknbSBub3Qgc3VyZSBob3cgbXVjaCBtb25leSBGcm9jaCBpcyBtYWtpbmcgd2l0aCBwb2tlciwgYnV0IG15IGd1ZXNzIGlzIGhlJ3Mgbm90IG1ha2luZyB0aGUga2luZCBvZiBtb25leSBoZSB3b3VsZCBoYXZlIHJlY2VpdmVkIGZvciBhIGZpZ2h0IGFnYWluc3QgR0dHLiBUaGUgcXVlc3Rpb24gd291bGQgdGhlIGZhbnMgc3RpbGwgcmVtZW1iZXIgRnJvY2ggYW5kIHdhbnQgdG8gc2VlIGhpbSBmaWdodD8gSSB0aGluayBub3QuIApMYXN0IHllYXIsIHJldmVudWUgYXQgR3JlZWt0b3duIENhc2lubyB3YXMgbmVhcmx5ICQzMzAgbWlsbGlvbiwgY29tcGFyZWQgd2l0aCBhYm91dCAkNTkyIG1pbGxpb24gYXQgTUdNIEdyYW5kIERldHJvaXQgYW5kICQ0NzggbWlsbGlvbiBhdCBNb3RvckNpdHkgQ2FzaW5vIEhvdGVsLCB3aGljaCBpcyBvd25lZCBieSBNYXJpYW4gSWxpdGNoLi4gClBsYXllcnMgdGhhdCBoYXZlIHBsYWNlZCB0aGUgQW50ZSB3YWdlciBoYXZlIGEgY2hvaWNlIHRvIGVpdGhlciBmb2xkIG9yIGNvbnRpbnVlIGluIHRoZSBnYW1lIGJ5IHBsYWNpbmcgYSBQbGF5IHdhZ2VyIGVxdWFsIHRvIHRoZSBBbnRlLiBIYW5kcyBhcmUgdGhlbiBleHBvc2VkIGFuZCB3YWdlcnMgcmVzb2x2ZWQuIAoxMCB0aGluZ3MgdG8gZG8gaW4gQm9zdG9uIHRoaXMgd2Vla2VuZApSb21hbnRpYyBSZWNyZWF0aW9uV2lsZCBEdW5lcyBSZXNvcnQgb2ZmZXJzIGEgYmV2eSBvZiB5ZWFyIHJvdW5kIGFkdmVudHVyZXMgdGhhdCB0YWtlIGFkdmFudGFnZSBvZiBpdHMgc2VyZW5lIG9jZWFuZnJvbnQgbG9jYXRpb24uIEZvciBhIHBlZWsgYXQgdGhlIGxvY2FsIG1hcmluZSBsaWZlLCBlbWJhcmsgb24gdGhlIERvbHBoaW4gRGlzY292ZXJ5IFN1bnNldCBDcnVpc2UgYWxvbmcgdGhlIHNhbHQgbWFyc2hlcywgd2hlcmUgeW91J2xsIHNlYXJjaCBmb3IgYm90dGxlbm9zZSBkb2xwaGlucyBhbmQgbG9nZ2VyaGVhZCBzZWEgdHVydGxlcy4gCkhlcm9pbiB0aGF0IGxvb2tzIGxpa2UgY29uY3JldGUsIGNhbGxlZCAiR3JleSBEZWF0aCwiIHdoaWNoIGlzIHRhaW50ZWQgd2l0aCBldmVuIG1vcmUgZGFuZ2Vyb3VzIG9waW9pZCBkcnVncywgaGFzIGluIHRyaWdnZXJlZCBkb3plbnMgb2Ygb3ZlcmRvc2VzIHRoaXMgeWVhciwgaW5jbHVkaW5nIGZvdXIgZmF0YWwgb25lcyByZXBvcnRlZCBvbiBUaHVyc2RheSBpbiBBbGFiYW1hLCBHZW9yZ2lhLCBhbmQgT2hpby4gClRoZXNlIFRlcm1zIGdvdmVybiB5b3VyIHVzZSBvZiB0aGUgd2Vic2l0ZXMsIGFwcGxpY2F0aW9ucyBhbmQgc29mdHdhcmUgb3BlcmF0ZWQgYnkgTllQIEhvbGRpbmdzLCBJbmMuIApXaGVuIGRvd25sb2FkZWQsIHRoZSBDb250ZW50IHJlbWFpbnMgc3ViamVjdCB0byB0aGUgbGltaXRlZCB1c2UgbGljZW5zZSBjb250YWluZWQgaW4gdGhpcyBBZ3JlZW1lbnQuIFlvdSBtYXkgdXNlIHRoZSBzb2Z0d2FyZSBwcm92aWRlZCBvbiB0aGUgV2Vic2l0ZXMgb25seSB3aGlsZSBvbmxpbmUgYW5kIG1heSBub3QgZG93bmxvYWQsIGNvcHksIHJldXNlIG9yIGRpc3RyaWJ1dGUgdGhhdCBzb2Z0d2FyZSwgZXhjZXB0IHdoZXJlIGl0IGlzIGNsZWFybHkgc3RhdGVkIHRoYXQgc3VjaCBzb2Z0d2FyZSBpcyBtYWRlIGF2YWlsYWJsZSBmb3Igb2ZmbGluZSB1c2UuIApUaGF0J3Mgb25lIG9mIG1hbnkgcHJvYmxlbXMgSSBoYWQuIApPYnZpb3VzbHksIGlmIHlvdXIgbWFuIGNoaWxkIHRoaW5rcyBoaXMgaWRlYSBvZiBhIG1lYWwgaXMgYSBib3cgb2YgRG9yaXRvcyB3aXRoIGEgZ2xhc3Mgb2YgTW9uc3RlciBlbmVyZ3kgZHJpbmssIHRoZW4gaG9uZXksIHdhdmUgdGhvc2UgcmVkIGZsYWdzIGFuZCBnZXQgdGhlIGhlbGwgYXdheSBmcm9tIHRoYXQgcmVsYXRpb25zaGlwISBUaGlzIGNhbiBiZSB3YWl0cmVzc2VzLCByYW5kb20gcGVvcGxlLCBjYXNoaWVycywgb3IgcmVhbGx5IGFueW9uZSB3aG8gaXMgc3VwcG9zZWQgdG8gYmUgZG9pbmcgYSBzZXJ2aWNlIGZvciBoaW0uIEVtb3Rpb25hbGx5IGltbWF0dXJlIHBlb3BsZSBlbmpveSBwbGF5aW5nIHRoZSByb2xlIG9mIHZpY3RpbS4gCkl0J3MgYSBzaWduaWZpY2FudCBjaGFuZ2UgZm9yIENFUywgd2hpY2ggbGlrZSBtb3N0IHRlY2ggY29uZmVyZW5jZXMgcmVtYWlucyBkaXNwcm9wb3J0aW9uYXRlbHkgbWFsZSwganVzdCBsaWtlIHRoZSBpbmR1c3RyeSBpdCBzZXJ2ZXMuIEV2ZW4gYWJzZW50IHRoZSByb2JvdCBkb2dzLCBzY2kgZmkgd29ydGh5IGdhZGdldHMgYW5kICJib290aCBiYWJlcyIgQ0VTIGhhcyBiZWVuIGtub3duIGZvciwgeW91IGNvdWxkIHJlYWRpbHkgcGVnIGl0IGFzIGEgdGVjaG5vbG9neSBzaG93IGZyb20gdGhlIGJhdGhyb29tIGxpbmVzIGFsb25lICAgd2hlcmUgbWVuIHNoaWZ0IHVuY29tZm9ydGFibHkgYXMgdGhleSB3YWl0IHRoZWlyIHR1cm4gd2hpbGUgd29tZW4gd2FsdHogcmlnaHQgaW4uCldpdGggYWxsIHRoZSBhZ2dyZXNzaW9uIGRpcmVjdGVkIGF0IFdlbmR5IGNvbWVzIGEgcGVydmFzaXZlIHNlbnNlIG9mIHVuZWFzZS4gVGhpcyBpcyBlc3RhYmxpc2hlZCBlYXJseSBvbiBhIGNvbnZlcnNhdGlvbiBiZXR3ZWVuIFdlbmR5IGFuZCBoZXIgZnJpZW5kcyByZW1pbmRzIHJlYWRlcnMgdGhhdCB0cmFucyB3b21lbiBsaXZlcyBhcmUgc2hvcnQgYW5kIGlzIG1haW50YWluZWQgdGhyb3VnaG91dC4gCkpvcyBDYXJpb2NhIGlzIGEgZGFwcGVyIEJyYXppbGlhbiBwYXJyb3Qgd2hvIG1hZGUgaGlzIGZpcnN0IGFwcGVhcmFuY2UgaW4gdGhpcyBmaWxtLiBBIGdyZWVuIGJpcmQgd2l0aCBhIHllbGxvdyBiZWFrLCBoZSB1c3VhbGx5IGNhcnJpZXMgYW4gdW1icmVsbGEgYW5kIGNpZ2FyIGFuZCB3ZWFycyBhIGJvdyB0aWUgYW5kIGhhdC4gCllvdSBmbG9wcGVkIHRoZSBudXRzIG9uIGEgd2V0IGJvYXJkIGFuZCB0aGVyZSBhcmUgc28gbWFueSBwbGF5ZXJzIGluIHRoZSBoYW5kIGl0IGFsbW9zdCBjZXJ0YWluIGEgYmV0IHdpbGwgZ28gaW4uIApXaGljaCB0aGVuLCB0byBiZSBmYWlyLCBpcyB0YWtlbiBmcm9tIHRoZSBjYWxmIGFuZCBnaXZlbiB0byBodW1hbnMgKGluIHRoZSBkYWlyeSBpbmR1c3RyeSBhdCBsZWFzdCkuLiAKSSBoYXZlbiBkb25lIGl0IHlldCBiZWNhdXNlIEkgYWxyZWFkeSBoYXZlIGEgQ0ZXIFBTUCB0aGF0IEkgdXNlIHRvIGVtdWxhdGUgZ2FtZXMgdGhhdCBJIGFscmVhZHkgbGVnaXRpbWF0ZWx5IG93biAoc3RpbGwgcGlyYWN5LCBidXQgSSBzbGVlcCB3ZWxsKS4gCkkgd2lsbCBub3QgYnJpbmcgdXAgaW4gdGhpcyBzbWFsbCBkaXNjdXNzaW9uIHdoYXQgZXhhY3QgZXZpZGVuY2UgSSBoYXZlIHRoYXQgcHJvbW90ZXMgZmxhdCBlYXJ0aCBhcyBiZWluZyBhIHBzeW9wLiAKTWFycmlhZ2UgaXMgYSBwcm9wZXJ0eSBjb250cmFjdCBiZXR3ZWVuIHR3byBwZW9wbGUsIG5vdCBhIHNpZ24gb2YgbW9yYWwgc3VwZXJpb3JpdHkuIERvZXNuIGd1YXJhbnRlZSB0aGF0IHRoZSBodXNiYW5kIGFuZCB3aWZlIHdpbGwgYmUgYmV0dGVyIHBlb3BsZSwgdGFrZSBtb3JlIGV0aGljYWwgc3RhbmNlcyBpbiB0aGVpciBsaXZlcywgb3IgZXZlbiBiZSBuaWNlIHRvIHRoZSBmYW1pbHkgZG9nLiBPbmx5IHRoaW5nICJtYXJyaWVkIiBndWFyYW50ZWVzIGlzIHRoYXQgYm90aCB3aWxsIGhhdmUgYSBjbGFpbSB0byBhbnkgYW5kIGFsbCBwcm9wZXJ0aWVzLCBpbmNsdWRpbmcgY2hpbGRyZW4uLiAKQSBnb29kIHBva2VyIHNldCBkZXNlcnZlcyBhIGdvb2QgcG9rZXIgY292ZXIgYWNjb3JkaW5nIHRvIHRoZSBsZWFkaW5nIHBva2VyIHN0YXJzLiBJZiB5b3Ugd2FudCB0byBsZWFkIHRoZSB3b3JsZCBvZiBwb2tlciwgeW91IHNob3VsZCBoYXZlIHRoZSBsZWFkaW5nIHByb2R1Y3RzIGZvciB5b3Vyc2VsZi4gCldoZW4gSSBzYXkgInNpbXBsaWZpZWQiLCBJIG1lYW4gcmVtb3ZlZCBjb2x1bW5zIGZyb20gdGhlIHNlbGVjdCBsaXN0IGFuZCBvbmx5IHB1dCBvbmUgam9pbiBjcml0ZXJpYSBmb3IgdGhlIHNha2Ugb2YgYnJldml0eS4gQnV0IHNpbmNlIHRoZSBzYW1lIGNvZGUgcmFuIHZhc3RseSBkaWZmZXJlbnRseSB3aXRoIGp1c3QgYSBzd2l0Y2ggZnJvbSBJTk5FUiB0byBMRUZULCBJIGRvbiB0aGluayB0aGUgbnVtYmVyIG9mIGNvbHVtbnMgb3Igam9pbiBjcml0ZXJpYSB3YXMgd2hhdCB3YXMgY2F1c2luZyBteSBpc3N1ZS4KSSBqdXN0IHRoaW5rIHRoYXQgZXZlbiBpZiB5b3Ugd2VyZSB0byBwdXQgdGhlc2UgcG9zdHMgaW4gYSB3ZWVrbHkgdGhyZWFkLCBpdCB3b3VsZG4ndCBkbyBtdWNoLiBXZSBhbHJlYWR5IGhhdmUgYSB3ZWVrbHkgdGhyZWFkIG9mIHBlb3BsZSB0byByZXF1ZXN0IGFuZCBvZmZlciByZWFkaW5ncyB5ZXQgd2VlayBhZnRlciB3ZWVrLCBpdCBkb2Vzbid0IHNlZW0gbGlrZSBwZW9wbGUgcmVzcG9uZCB0byB0aG9zZSByZXF1ZXN0cyBvZnRlbi4KSXQgYmVjb21lIGEgYmlnIGJhbGwgb2Ygc3R1cGlkIHRoYXQganVzdCBrZWVwcyByb2xsaW5nIGRvd25oaWxsIGF0IHRoaXMgcG9pbnQuIEFsbW9zdCB0byBjaGlsZGlzaCBsZXZlbHMgb2YgZGVjaXNpb24gbWFraW5nLiBJcm9uaWNhbGx5LCBUdXJrZXkgaXMgbm93IHdvcmtpbmcgd2l0aCBFdXJvc2FtIGFueXdheSBvbiBhIGpvaW50IHByb2plY3QgdG8gZGV2ZWxvcCBhIG1pc3NpbGUgc3lzdGVtLgpJIGJlZW4gbG9va2luZyBpbnRvIHJvY2sgY2xpbWJpbmcgYW5kIG1heWJlIGpvaW5pbmcgYSBydWdieSB0ZWFtLiBJIHRoaW5rIGl0IGJlIHJlZnJlc2hpbmcsIGFuZCBhcyBhIGhvcGVmdWxseSBmdXR1cmUgcGh5c2ljYWwgdGhlcmFwaXN0LCBJIHRoaW5rIGhhdmluZyBhIGJyb2FkIHJhbmdlIG9mIGV4cGVyaWVuY2UgbWF5IGJlIGJlbmVmaWNpYWwuIApFbiBkJ2F1dHJlcyB0ZXJtZXMsIGVsbGUgZXQgc29uIGZpbHMgb250IGZhaXQgZGUgbCdhcmdlbnQgc3VyIGxlIGRvcyBkdSBmcnJlIGV0IGRlIGwnb25jbGUuVG91dGVzIHNvcnRlcyBkJ2luZGljZXMgbWUgbGFpc3NlbnQgIHBlbnNlciBxdSdlbGxlIGEgcHUgZHRvdXJuZXIgZGUgbCdhcmdlbnQgIHNvbiBwcm9maXQsIGNhciBqJ2FpIGFwcHJpcyBxdSd0YW50IHBhcnZlbnVlICBjb252YWluY3JlIHNhIG1yZSBkZSB2ZW5pciBoYWJpdGVyIGRhbnMgdW5lIG1haXNvbiBxdSdlbGxlIGEgYWNoZXQsIHVuZSBsb2NhdGlvbiBzYW5zIGJhaWwgbmkgcmV1IGEgZmluaSBwYXIgY290ZXIgcGx1cyBkZSA1MDAgcGFyIG1vaXMgIGwnaW50cmVzc2UsIHF1aSBhIGZpbmkgcGFyIGRjYW1wZXIgZXQgc2UgcmZ1Z2llciBjaGV6IHNhIHNvZXVyIGFwcnMgYXZvaXIgbGNoIHVuIHBldGl0IGFwcGFydGVtZW50IGFncmFibGUgZW4gcmdpb24gcGFyaXNpZW5uZS5KJ2luc3RydW1lbnRlIGRlIGZhb24gIGNlIHF1ZSBsYSB2aWN0aW1lIHJjdXByZSBsYSBtYXRyaXNlIGRlIHNvbiBjb21wdGUgYmFuY2FpcmUgZXQgcXVlIGwnb24gcHVpc3NlIGNvbnRybGVyIGxhIGdlc3Rpb24gZGUgc2Egc29ldXIgZXQgbGEgcG91cnN1aXZyZSBlbiBjYXMgZGUgdm9sLiAKSW5zZXNzaW9uYWwgQWNhZGVtaWMgRW5nbGlzaCBTdXBwb3J0IGNvdXJzZXMgdGhhdCBlbmFibGUgeW91IHRvIGRldmVsb3AgeW91ciBsYW5ndWFnZSBza2lsbHMgYW5kIGFjYWRlbWljIHVuZGVyc3RhbmRpbmcgYXMgeW91IHN0dWR5IG9uIHlvdXIgZGVncmVlIHByb2dyYW1tZQpFbW9tIHdhcyB3ZWFrIHdpbGxlZCwgZnJhaWwsIGFsbG93ZWQgbmRhZCB0byBhYnVzZSBtZSwgYW5kIHdoaWxlIHNoZSB3YXMga2luZCB0byBteSBzaWJsaW5ncywgdG93YXJkcyBtZSBzaGUgd2FzIGFsd2F5cyBmYWlybHkgY29sZCBoZWFydGVkIGFuZCBkaXN0YW50LiBJIGd1ZXNzIHRoYXQgd2h5IEkgZmVlbCBjb21wZWxsZWQgdG8gdHJ1c3QgYW5kIGdhaW4gdGhlIGFwcHJvdmFsIG9mIG9sZGVyIHdvbWVuIHdobyBhcmUgZW1vbSBvcHBvc2l0ZTogd2FybSB3aXRoIGEgc3BpbmUuIApMYXVuY2hlZCBpbiBNYXJjaCAyMDE1LCB0aGUgTkVPIEV4Y2hhbmdlIGN1cnJlbnRseSBvZmZlcnMgYW4gaW5ub3ZhdGl2ZSB0cmFkaW5nIHZlbnVlIGZvciBhbGwgbGlzdGVkIENhbmFkaWFuIHNlY3VyaXRpZXMgYW5kIGEgdmFsdWUgYWRkZWQgbGlzdGluZ3MgcHJvY2VzcyBmb3IgY2FwaXRhbCByYWlzaW5nIGNvbXBhbmllcyBhbmQgaW52ZXN0bWVudCBwcm9kdWN0cywgZm9jdXNlZCBvbiBsaXF1aWRpdHksIHRyYW5zcGFyZW5jeSBhbmQgZWZmaWNpZW5jeS4gCkNhcmVzdHJlYW0gd2lsbCByZXRhaW4gaXRzIG1lZGljYWwgaW1hZ2luZywgZGVudGFsIGFuZCBpbmR1c3RyaWFsIGZpbG1zLCBub24gZGVzdHJ1Y3RpdmUgdGVzdGluZywgYW5kIHByZWNpc2lvbiBjb2F0aW5nIGJ1c2luZXNzZXMgd2hpY2ggYXJlIG5vdCBpbXBhY3RlZCBieSB0aGUgc2FsZS4gIlRoZXNlIGVzdGFibGlzaGVkIGJ1c2luZXNzZXMgaGF2ZSBzb2xpZCBmaW5hbmNpYWwgZm91bmRhdGlvbnMsIGlubm92YXRpdmUgdGVjaG5vbG9neSBwbGF0Zm9ybXMgYW5kIGhhdmUgZWFybmVkIHRoZSB0cnVzdCBvZiBsb3lhbCBjdXN0b21lcnMgYXJvdW5kIHRoZSB3b3JsZCwiIHNhaWQgRGF2aWQgQy4gV2VzdGdhdGUsIENoYWlybWFuLCBQcmVzaWRlbnQgYW5kIENFTyBvZiBDYXJlc3RyZWFtLiAKV2hhdCBJIGFtIHNheWluZyBpcyB0aGF0IHdoZW4geW91IG1ha2UgYSBoYW5kIHdpdGggc2F5IFExMCwgaXQgYSBsaXR0bGUgbGVzcyBjbGVhciBpZiB5b3VyIHF1ZWVuIGlzIGdvb2QuCiAgaXQgd2FzIGJhZC4pIEV2ZW4gd2VpcmRlciB3YXMgdGhlaXIgd2VpcmQgY3V0ZXN5IG1hdGNoeSB0aGluZyB3aXRoIHN1Y2ggYW4gb2ZmZW5zaXZlIHNoaXJ0LiAKV2UgaG9wZSksIHRoZSBzb2NpYWwgc2NpZW50aXN0cyBzdGVwcGVkIGluIHRvIHR1cm4gcGFuaWMgdG8gb3JkZXIuLiAKKEdyZWF0IGJvb2sgb24gdGhlIHN1YmplY3Q6IFNhdmFnZSBJbmVxdWFsaXRpZXMgYnkgSm9obmF0aG9uIEtvemFsLikgT3VyIG9uY2UgdG9wIG5vdGNoIHNjaG9vbHMsIHdoZXJlIGl0IHRvb2sgeWVhcnMgdG8gZ2V0IGluIGZvciBhbiBpbnRlcnZpZXcsIGFyZSBub3cgZmFjaW5nIGEgdGVhY2hlciBzaG9ydGFnZSBhZnRlciBHb3YuIApTb29vbyBtYW55IHRoZXJhcGlzdHMgZW5kIHRoZWlyIGNhcmVlciBwcmVtYXR1cmVseSBkdWUgdG8gaW5qdXJ5IChJIHBlcnNvbmFsbHkgdGhvdWdodCBJIGJyb2tlIG15IHdyaXN0IGR1cmluZyBhIG1hc3NhZ2UgYW5kIGhhZCB0byBnbyBnZXQgeHJheXMpIHNvIGlmIHRoZXkgdGVsbCB5b3UgdGhhdCB0aGV5IGNhbiBnbyBkZWVwZXIsIGZpbmQgYW5vdGhlciB0aGVyYXBpc3Qgd2hvIGNhbiBhbmQgZG9uIG1ha2UgdGhlbSBmZWVsIGJhZCBmb3Igbm90IHdvcmtpbmcgb3V0IG9mIHRoZWlyIGNvbWZvcnQgem9uZS4uIApUaGlzIGlzIGV4YWN0bHkgd2hhdCBoYXBwZW5pbmcgbm93IHdpdGggdGhlIHdob2xlIG1pc2dlbmRlcmluZyBpc3N1ZSwgeW91IGZvcmNpbmcgcGVvcGxlIHRvIGFjY2VwdCB0aGF0IHNvbWVvbmUgaGFzIGNoYW5nZWQgZ2VuZGVycyBzaW1wbHkgYmVjYXVzZSB0aGV5IHNhaWQgdGhleSBkaWQuIEl0IHdvcmtzIGJvdGggd2F5cy4gVGhpcyBpcyB3aHkgbWlzZ2VuZGVyaW5nIHNob3VsZG50IGhhdmUgaXQgb3duIHJ1bGUgYW5kIHNob3VsZCBqdXN0IGZhbGwgdW5kZXIgdGFyZ2V0ZWQgaGFycmFzc21lbnQuIFdoZW4geW91IG1ha2UgYSBuZXcgcnVsZSBmb3IgYSAicHJvdGVjdGVkIGNsYXNzIiB5b3UgaGF2ZSBub3cgbWFkZSB0aGUgcnVsZSBlbmZvcmNlbWVudCBldmVuIG1vcmUgc3ViamVjdGl2ZS4KU1QuIEdFT1JHRSBSZWQgUm9jayBDZW50ZXIgZm9yIEluZGVwZW5kZW5jZSBhbG9uZyB3aXRoIHNwb25zb3JzIFppb24ncyBIYXJsZXkgRGF2aWRzb24gYW5kIERlc2VydCBUaHVuZGVyIEN5Y2xlIFdvcmtzIGhhdmUgdGhlaXIgZmlyc3QgYW5udWFsIFJpZGUgYW5kIERyaXZlIGZvciBJbmRlcGVuZGVuY2UgY2hhcml0eSBwb2tlciBydW4gdG9kYXkuClRoZXNlIGFyZSBjb2xsZWN0aXZlbHkgcmVmZXJyZWQgdG8gYXMgIlNlcnZpY2VzIiB0aHJvdWdob3V0IHRoaXMgcHJpdmFjeSBub3RpY2UuLiAKRXllIGNvbG9yIGlzIGEgcmVhbCBiaW9sb2dpY2FsIHRoaW5nIHRvbywgYW5kIHlvdSBjb3VsZCBncm91cCBwZW9wbGUgYnkgZXllIGNvbG9yLiBCdXQgdGhlIGdyb3VwaW5nIHlvdSB3b3VsZCBwcm9kdWNlIHRoYXQgd2F5IGlzIGV2ZXJ5IGJpdCBhcyBtZWFuaW5nbGVzcyBhcyAicmFjZS4iCldoZW4gSXZleSB3b24gRXZlbnQgMjUsIGFkbWlyZXJzIGFuZCBmYW5zIHdlcmUgMTAgZGVlcCBhcm91bmQgdGhlIHRhYmxlIGhlIHdhcyBzZWF0ZWQgYXQuIFRoYXQgaGFzIGEgJDUwLDAwMCBlbnRyeSBmZWUuIApFcGljIHBhc3NlcyBmZWVzIG9uIHRvIHRoZSBjb25zdW1lciwgcmFpc2luZyB0aGUgcHJpY2Ugb24gZ2FtZXMuLiAKTkJDVSBzdHJ1Y2sgYSBkZWFsIHdpdGggU25hcGNoYXQgaW4gQXVndXN0IHRvIHByb2R1Y2Ugb3JpZ2luYWwgY29udGVudCBmb3IgdGhlIHBsYXRmb3JtLiBBc2lkZSBmcm9tICJUaGUgVm9pY2UsIiBOQkNVIGlzIGFsc28gY3JlYXRpbmcgY29udGVudCBhcm91bmQgIlNhdHVyZGF5IE5pZ2h0IExpdmUiIGFuZCAiVGhlIFRvbmlnaHQgU2hvdyBTdGFycmluZyBKaW1teSBGYWxsb24sIiBhbW9uZyBvdGhlcnMuIAo1MykgSGVsbG8gSGVsbG8gYnkgRWx0b24gSm9obiAoZmVhdC4gCkxhZHkgR2FHYSksIExldCBMb3ZlIERvd24sIEJsdWViZXJyeSBLaXNzZXMsIFJlZCBBbmQgQmx1ZSwgUmV0cm8gUGh5c2ljYWwsIFJvY2sgU2hvdywgU2Vjb25kIFRpbWUgQXJvdW5kLCBTZXh5IFVnbHksIEdsaXR0ZXIgQW5kIEdyZWFzZSAoQXJvdW5kKSwgTm8gRmxvb2RzLCBSaWJib25zLCBPaCBXZWxsLCBGdXR1cmUgTG92ZSAoTGl2ZSksIE91dCBPZiBDb250cm9sIChzaG9ydCBkZW1vKSwgV29yZHMsIFdvbmRlcmZ1bCwgV2lzaCBZb3UgV2VyZSBIZXJlLCBTaGFrZSBZb3VyIEtpdHR5LCBTb21ldGhpbmcgQ3JhenksIEZpbHRoeSBQb3AsIEZhbmN5IFBhbnRzLCBGZXZlciwgRGlydHkgSWNlIENyZWFtLCBLYW5keSBMaWZlLCBGb29sZWQgTWUgQWdhaW4gKEhvbmVzdCBFeWVzKSwgUmVsb2FkZWQsIENhcHRpdmF0ZWQgRWxlY3RyaWMgS2lzcywgTGl2aW5nIE9uIFRoZSBSYWRpbywgU3BpbiBVIEFyb3VuZCAoZmVhdC4gClNoZSBsZWZ0IGJyaWVmbHkgYW5kIGNhbWUgYmFjay4gQ29jbyBwcm9jZWVkZWQgdG8gZGlzcm9iZSwgdGFraW5nIG9mZiBoZXIgYmxhY2sgYnJhIGFuZCByZWQgcGFudGllcywgd2hpY2ggc2hlIHR3aXJsZWQgaW4gZnJvbnQgb2YgaGlzIGZhY2UuIFNoZSBncmFiYmVkIHRoZSByZXBvcnRlcidzIGhhbmQgYW5kIHRyaWVkIHRvIGluZHVjZSBoaW0gdG8gdG91Y2ggaGVyIGJyZWFzdHMuIEhlIHJlZnVzZWQuCiJUaGlzIGlzIGp1c3Qgc3R1ZmYgSSd2ZSBhbHdheXMgd2FudGVkIHRvIGRvLCIgc2hlIHNhaWQuCkltIGFsbCBvdmVyIHRoZSBwbGFjZSB3aXRoIG15IG5vbnNlbnNlICAxIHBvaW50ICBzdWJtaXR0ZWQgMiBkYXlzIGFnby4gClN1cmUsIEknbSAyOC4gTXkgaGVhbHRoIHdhcyBnZW5lcmFsbHkgZ29vZCBidXQgSSBoYWQgbWFueSBvZiB0aGUgdHlwaWNhbCBwcm9ibGVtcyBhc3NvY2lhdGVkIHdpdGggbG9uZyB0ZXJtIG9iZXNpdHkuIApCdXQgUm9sbyBpcyB2ZXJ5IG9idmlvdXNseSBtYWtpbmcgdXAgcGFydHMgb2YgaGlzIHN0b3JpZXMvbHlpbmcgaW4gdGhlbS4gSW4gdGhlIGRvY3RvciBzdG9yeSBoZSBhZGRlZCB0aGUgYm9uZXIgcGFydCwgd2hpY2ggaXMgb25lIGNsdWUuIFRoZSBvdGhlciBpcyB0aGF0IG5vYm9keSB0YWxrZWQgdG8gdGhlIGRvY3RvciBhZnRlciBoZSB3YXMgbGV0IGdvIGFzIGhlIHNhaWQgdGhhdCB0aGUgZG9jdG9yIHNodXQgaGltc2VsZiBvZmYgZnJvbSB0aGUgd29ybGQgKyBhZnRlciB0aGV5IGNhdWdodCBoaW0gaGUgd2VudCB0byBhIHZlZ2V0YXRpdmUgc3RhdGUsIHNvIHRlY2huaWNhbGx5IG5vYm9keSBzcG9rZSB0byB0aGUgZG9jdG9yIGFmdGVyIGhlIHdhcyBsZXQgZ28sIHRoZXJlZm9yZSBub2JvZHkgY291bGQgaGF2ZSBrbm93biB3aGVuIGhlIHN0YXJ0ZWQgc2VsZiBtdXRpbGF0aW5nLCB3YXMgaXQgYmVmb3JlIG9yIGFmdGVyIGhlciBtdXJkZXIuIApEb2cgZ3Jvb21lciBoZXJlLiBJIG9uY2UgaGFkIGFub3RoZXIgeW91bmdlciBncm9vbWVyIHRoYXQgdGhleSBjb3VsZCBuZXZlciBzZWUgdGhlbSBnZXR0aW5nIGJ1cm50IG91dCBvbiB0aGlzIGpvYi4gSXQncyBhIGZ1biBqb2IsIGJ1dCBub3QgYWxsIHB1cHMgYXJlIGdvaW5nIHRvIGdvIGdyZWF0LiAKSSB0aGluayBCcmFkIE93ZW4gdmxvZ3MgZnJvbSBHcmF0b24gYSBidW5jaCwgbWF5YmUgd2F0Y2ggYSBmZXcgb2YgaGlzIHZpZGVvcyBhbmQgeW91IGNhbiBnZXQgYSBmZWVsIGZvciB0aGUgcm9vbS4KRXZlbiBpbiB0aGUgcHJlc2VudCBkYXksIG1hbnVmYWN0dXJlcnMgYXJlIHRpbmtlcmluZyB3aXRoIHRoZSBpbnN0cnVtZW50IHBhbmVsLCBtb3ZpbmcgaXQgdG8gdGhlIGNlbnRlciBvZiB0aGUgZGFzaGJvYXJkIG9yIHBhY2tpbmcgaXQgZnVsbCBvZiB0ZWNobm9sb2d5IHRoYXQgbWF5IG1ha2Uga2VlcGluZyB5b3VyIGV5ZXMgb24gdGhlIHJvYWQgaGFyZGVyIHRoYW4gZXZlci4uIApFYWNoIG9uZSBvZiB0aGUgY2hpcHMgaGFzIGFuIGluc2VydCB0aGF0IGdpdmVzIHRoZW0gdGhlIHNvdW5kIGFuZCBmZWVsIG9mIGEgcmVhbCBwb2tlciBjaGlwIGZyb20gYSBjYXNpbm8uLiAKQXMgd2UncmUgd2Fsa2luZyBkb3duIHRoZSBzaWRld2FsayB0aGlzIHNob3J0LCBkcnVuayBkdWRlIHN0YXJ0ZWQgdG8gY3Jvc3MgdGhlIHN0cmVldCB0b3dhcmRzIHVzLiBXZSdyZSBib3RoIGF2ZXJhZ2UgYnVpbGQgZ3V5cyBzbyB3ZSBkb24ndCByZWFsbHkgcGF5IGhpbSBhbnkgbWluZC4gClNjb3R0IEhlY2hpbmdlciwgYSBzZW5pb3Igc3RhZmYgYXR0b3JuZXkgYXQgQnJvb2tseW4gRGVmZW5kZXIgU2VydmljZXMsIGFuIG9yZ2FuaXphdGlvbiB0aGF0IHByb3ZpZGVzIGxlZ2FsIHJlcHJlc2VudGF0aW9uIHRvIGRlZmVuZGFudHMgd2hvIGNhbm5vdCBhZmZvcmQgaXQsIHVzZWQgb25lIG9mIGhpcyByZWNlbnQgY2xpZW50cywgd2hvIHdhcyBqdXN0IG9mZmVyZWQgYSAzNiB0byA3MiBtb250aCBzZW50ZW5jZSwgYXMgYW4gZXhhbXBsZS4gVGhlIGNyaW1lPyBTdGVhbGluZyAkMTAwIHdvcnRoIG9mIHF1YXJ0ZXJzIGZyb20gYSByZXNpZGVudGlhbCBsYXVuZHJ5IHJvb20uIEhlY2hpbmdlciBjbGllbnQgbWF5IHdpbmQgdXAgZG9pbmcgbW9yZSB0aW1lIHRoYW4gTWFuYWZvcnQsIGEgbWFuIHdobyBkZWZyYXVkZWQgdGhlIEludGVybmFsIFJldmVudWUgU2VydmljZSBvdXQgb2YgJDYgbWlsbGlvbi4KSSBmdWNraW5nIExPVkUgb3duaW5nIHJlZ3MnIHNvdWxzLCBlc3BlY2lhbGx5IHRoZSBnb29kIG9uZXMuIFByaW50aW5nIG1vbmV5IHZzIHRoZSB3aGFsZXMvbG9vc2UgcGFzc2l2ZSBkb25rcyBhbmQgZHJ1bmtzIGlzIGp1c3QgYSBuaWNlIGJvbnVzIGhvbmVzdGx5LiAKQWxzbyBldmVuIGluc3RhbGxpbmcgeW91ciBvd24gY2VydCBoYXMgZG93bnNpZGVzIGJlY2F1c2Ugb2YgY2VydGlmaWNhdGUgcGlubmluZy4gSWYgYSBhbiBhcHBsaWNhdGlvbiBpcyB1c2luZyBjZXJ0aWZpY2F0ZSBwaW5uaW5nIHlvdSBjYW5ub3QgdXNlIHlvdXIgb3duIGNlcnQgdG8gcHJveHkgU1NMIGV2ZW4gaWYgeW91IHdhbnQgdG8uIApJdCBkZXBlbmRzIG9uIHRoZSBsaXN0IEkgcnVubmluZywgYnV0IG1vcmUgb2Z0ZW4gdGhhbiBub3QgSSBydW4gbGFyZ2UgYXN0ZXJvaWRzIGZvciB0aGUgbW9zdCBwYXJ0LiBJIGNvbmZpZGVudCBpbiBteSBmbHlpbmcgYXQgdGhpcyBwb2ludCB0aGF0IGxhcmdlIHJvY2tzIGRvbiB3b3JyeSBtZSwgYW5kIGl0IGdpdmVzIG1lIGNvbnRyb2wgb3ZlciB3aGVyZSBteSBvcHBvbmVudCBjYW4gZmx5LiBJIGhhdmUgYSBsaXN0IHJpZ2h0IG5vdyB0aG91Z2ggdGhhdCBpcyB2ZXJ5IHdlaXJkLCBhbmQgbm9ib2R5IGhhcyBwb3N0ZWQgYSBzaW1pbGFyIGxpc3QgeWV0LCBzbyBJIHdvbiBnbyBpbnRvIGRldGFpbC4gCkFjdGlvbnMgeW91IHRha2UuIFdlIGNvbGxlY3QgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGFjdGlvbnMgeW91IHRha2Ugd2hlbiB1c2luZyB0aGUgU2VydmljZXMuIFRoaXMgaW5jbHVkZXMgeW91ciBpbnRlcmFjdGlvbnMgd2l0aCBjb250ZW50LCBsaWtlIHZvdGluZywgc2F2aW5nLCBoaWRpbmcsIGFuZCByZXBvcnRpbmcuIEl0IGFsc28gaW5jbHVkZXMgeW91ciBpbnRlcmFjdGlvbnMgd2l0aCBvdGhlciB1c2Vycywgc3VjaCBhcyBmb2xsb3dpbmcsIGZyaWVuZGluZywgYW5kIGJsb2NraW5nLiBXZSBjb2xsZWN0IHlvdXIgaW50ZXJhY3Rpb25zIHdpdGggY29tbXVuaXRpZXMsIGxpa2UgeW91ciBzdWJzY3JpcHRpb25zIG9yIG1vZGVyYXRvciBzdGF0dXMuClNvIEkndmUgYmVlbiBnb2luZyBvbiBkYXRlcyBidXQgdGhleSB3ZXJlbid0IHJlYWxseSB3b3J0aCBwb3N0aW5nIGFib3V0LiBPbmUgZ3V5IGhlbGQgbXkgaGFuZCB3aGlsZSB3ZSB3ZW50IHRvIHRoZSB6b28gYW5kIGl0IHdhcyBzd2VldC4gCk9uZSBvZiBCdWxpbmd0b24ncyBjaGVzcyBzdHVkZW50cwpUaGF0IG5vdCBoYXJtbGVzcyBzaGl0LiBBbmQgZ2l2aW5nIGhpbSBhbiAib3V0IiBqdXN0IHRlYWNoZXMgaGltIHRoYXQgd2hhdCBoZSBkaWQgd2FzIHRvdGFsbHkgb2theS4uIApJZiB5b3UgaGFwcGVuIHRvIGhhdmUgb25lIG9mIHRob3NlIHZhY3V1bSBzZWFsZXIgbWFjaGluZXMsIGhhdmUgYXQgaXQ7IGlmIG5vdCwgcHJlc3MgZG93biBvbiB0aGUgYmFnIHRvIHB1c2ggb3V0IGFpciBiZWZvcmUgeW91IHNlYWwgaXQgdXAgdGlnaHRseS4uIApUcmV2b3IgQnJvd25lOiBHcmVhdGVybmVzcywgS2luZyBIZWFkIChSdWJ5IFJvb20gKSwgNHBtLiAKRWRpdCBiZWNhdXNlIHdvcmRzIGFyZSBoYXJkIHRvZGF5IGFwcGFyZW50bHkuClRoaXMgbG9uZyBzdGFuZGluZyB0cmFkaXRpb24gb2Ygc2V4IHdvcmtlcnMgcHJvdmlkaW5nIG5vbiBzZXh1YWwgZW50ZXJ0YWlubWVudCBwYXZlZCB0aGUgd2F5IGZvciB0aGUgbW9kZXJuIGRheSBub3Rpb24gb2Ygb3V0Y2FsbCBlbnRlcnRhaW5tZW50LiAKVGhlIGVtb3Rpb25hbCB0dXJtb2lsIGlzIHNvbWV0aGluZyBJIHdvbiBiZSBhYmxlIHRvIGdpdmUgeW91IHJpZ2h0IG5vdy4gClRoZXJlIGFyZSBmZXcgcGVvcGxlIHdobyBmcmlnaHRlbiBtZSBzaGUgZGlkLi4gClRoZXkgcHJvbWlzZWQgdGhhdCB0aGV5IHdpbGwgaGVscCB1cyByZW1vdmUgdGhlIGFyc2VuYWwsIGJ1dCBjbGVhcmx5IGhhdmVuIGRvbmUgc28uIApXaGlsZSB0aGVpciBwcm9tb3Rpb25zIG1heSBub3QgYmUgbWluZCBibG93aW5nIHRoZXkgaGF2ZSBiZWVuIGluIGVmZmVjdCBmb3IgcXVpdGUgc29tZSB0aW1lLCB3aGljaCBpcyBlbm91Z2ggdG8gc3VnZ2VzdCB0aGUgY3VzdG9tZXJzIGZpbmQgdGhlbSBhcHBlYWxpbmcsIHdpdGggc3RhbmRhcmQgd2VsY29tZSBib251cyBhbmQgZmV3IG1vcmUgb25nb2luZyBwcm9tb3Rpb25zIGF2YWlsYWJsZSBhdCBhbGwgdGltZXMuCk92ZXJ2aWV3IGZvciBUdXNobWVpc3RlcgpTaSBsZSBib3VsZWF1IGEgdCBjaG9pc2kgcGFyIGxlIGNoYW1hbmlzbWUgc2licmllbiwgcGV1dCB0cmUgZXN0IGNlIGVuIHJhaXNvbiwgZW50cmUgYXV0cmVzLCBkZSBzb24gY29yY2UgYmxhbmMgYXJnZW50IHF1aSBkZXZpZW50IGRlIHBsdXMgZW4gcGx1cyBwdXJlLCBwbHVzIG9uIGFjY2RlIGF1IGZhdGUgZGUgbCBwcm9jZGUgdG91dCBkICBsYSBwdXJpZmljYXRpb24gZHUgY2FuZGlkYXQgY2hhbWFuLiAKVGhlcmUgYXJlIG1hbnkgdmFyaWF0aW9ucyB0byB0aGUgZ2FtZSBvZiBQb2tlci4gSXQgaXMgYSB0cnVseSBBbWVyaWNhbiBnYW1lIGVuam95ZWQgYnkgbWFueSBwZW9wbGUuIEhlcmUgYXJlIHNvbWUgb2YgdGhlIHJ1bGVzIHRvIHNvbWUgb2YgdGhlIGdhbWVzIG9mIFBva2VyLgoiQW55d2F5LCBJIGFpbid0IGdvaW5nIHRvIHN0YW5kIGFueSBtb3JlIG9mIE1ycy4gTHluZGUncyBib3NzaW5nLCIgc3BsdXR0ZXJlZCBEYXZ5LiAiQW5uZSBhbmQgTWFyaWxsYSBtYXkgaGF2ZSB0aGUgcmlnaHQgdG8gYm9zcyBtZSwgYnV0IFNIRSBoYXNuJ3QuIEknbSBnb2luZyB0byBkbyBldmVyeSBzaW5nbGUgdGhpbmcgc2hlIHRvbGQgbWUgbm90IHRvIGRvLiBZb3Ugd2F0Y2ggbWUuIgpOZWluLCBlcyBnZWh0IG5pY2h0IGRhcnVtLCBkYXNzIHdpciBGcmF1ZW4gdm9yc2NocmVpYmVuIHdhcyBzaWUgYW56aWVoZW4gc29sbGVuLCBlcyBnZWh0IGRhcnVtLCBkYXNzIGVzIGVpbiBTeW1ib2wgaXN0LiBVbmQgZ2VuYXVzbyB3aWUgaWNoIGVpbmVtIGdsYXR6a3BmaWdlbiBtaXQgSGFrZW5rcmV1eiBTY2hycGUgdm9yd2VyZmUgbmljaHQgZGVyIGxpYmVyYWxzdGUgenUgc2VpbiwgZGFyZiBpY2ggbWlyIHdvaGwgZGllIGdsZWljaGUgQW5uYWhtZSB2b24gTW9zbGVtcyBnZWJlbi4gCkhvd2V2ZXIsIGluIG9yZGVyIGZvciBQTVUgdG8gZXhwb3J0IGl0cyBwcm92ZW4gYnVzaW5lc3MgbW9kZWwgb2YgcGFyaSBtdXR1ZWwgYmV0dGluZywgT2RpZSB3b3VsZCBuZWVkIHRvIGhhdmUgZnVsbCBjb250cm9sIGFuZCBzdXBlcnZpc2lvbiBvZiB0aGUgcmFjZXMgaW4gR3JlZWNlLCBhcyBQTVUgYW5kIGhvcnNlIHJhY2luZyBhc3NvY2lhdGlvbnMgZG8gaW4gRnJhbmNlLiBBIGNoYW5nZSBzbyBmdW5kYW1lbnRhbCB0byB0aGUgc3RydWN0dXJlIG9mIHRoZSBHcmVlayBob3JzZSByYWNpbmcgaW5kdXN0cnkgbWlnaHQgdGFrZSB5ZWFycyBvZiBsZWdhbCB3cmFuZ2xpbmcgd2l0aGluIHBhcmxpYW1lbnQuLiAKQnV0IGl0IHdpbGwgaW5vY3VsYXRlIFBha2lzdGFuaSBkZW1vY3JhY3kgZnJvbSBlYXN5IGZyb250YWwgYXR0YWNrcyBtYWRlIHBvc3NpYmxlIGJ5IGluZXhwZXJpZW5jZWQgZGlwbG9tYXRzLCBvdmVyIGNvbmZpZGVudCBwb2xpY3ltYWtlcnMsIGFuZCBhIG1pbGl0YXJ5IGVsaXRlIG9ubHkgdG9vIGVhZ2VyIHRvIHNlZWsgcG9wdWxhcml0eSBpbiB0aGUgcHVibGljIGRvbWFpbi4uIApJdCdzIG5vdCBhbiBvcHRpb24uLiAKSSB0aGluayB5b3UgZnVsbHkgaW50ZW5kIHRvIGhvbm9yIGl0LCBidXQgb25jZSB5b3UgZ2V0IGEgYmlnZ2VyIHBsYWNlLCB5b3VyIG1pbmQgbWF5IGNoYW5nZS4uIApIb3cgSSBmZWx0IGFmdGVyIHRoZSBjbGFzczogRnVsbCBkaXNjbG9zdXJlOiBJIGhhdmVuJ3Qgc2V0IGZvb3QgaW4gYSBneW0gaW4gYXQgbGVhc3QgdHdvIG1vbnRocy4gRGVzcGl0ZSB0aGlzLCBJIHN0aWxsIGRlc2lyZSBhIHdvcmtvdXQgdGhhdCBnZW51aW5lbHkgbWFrZXMgbWUgZmVlbCB0aGUgYnVybiwgbm8gbWF0dGVyIGhvdyBvdXQgb2Ygc2hhcGUgSSBhbS4gSWYgSSdtIG5vdCBhdCBsZWFzdCBhIGxpdHRsZSB3aW5kZWQgYW5kIHdpdGggYWNoeSBtdXNjbGVzIGZvciBhIGNvdXBsZSBvZiBkYXlzLCBpdCBkb2Vzbid0IGZlZWwgZWZmZWN0aXZlIGVub3VnaCB0byBtZS4gCkkgZG9uIGtub3cgd2hldGhlciB0aGF0IGEgZGVhbCB1bmlxdWUgdG8gaGVyIHNpdGUsIHRoZSB3aG9sZSBpbml0aWF0aXZlIG9yIENoaW5lc2UgaG9uZXN0eS4gRWl0aGVyIHdheSwgYSBsYXRlIDIwcyBSYWlueSBoYXMgYnVja2xleSBhbmQgbm9uZSBvZiBiZWluZyBhYmxlIHRvIHBsZWFzZSBoZXIgb3duIG1vdGhlciwgbGV0IGFsb25lIHJlY3J1aXQgdGVjaCBzdGFydHVwcyBhbmQgIndvcmxkIGxlYWRpbmcgcmVzZWFyY2hlcnMiIChoZXIgd29yZHMsIG5vdCBtaW5lKS4uIApXaGlsZSBpdCdzIGltcG9ydGFudCB0byByZWFsaXplIHdoZW4gb25lIG9mIHlvdXIgb3Bwb25lbnRzIGlzIG9uIGEgdGlsdCwgaXQgaXMgbW9yZSBpbXBvcnRhbnQgdG8gcmVhbGl6ZSB3aGVuIHlvdSBtYXkgYmUgZ29pbmcgb24gYSB0aWx0IGFuZCBmaWd1cmluZyBvdXQgaG93IG5vdCB0byBsZXQgeW91ciBlbW90aW9ucyBnZXQgdGhlIGJlc3Qgb2YgeW91Li4gCkFuZCB3aGVudGhleSBhcmUsLiBJdCBzaG93cyBhbGwgdGhlIHBsYXllcnMgaGFuZHMuIFRoZW4gY2xpY2sgZXhpdCBnYW1lYWdhaW4sLiAKQ2FtZSBob21lIGFuZCB0b2xkIG1lIGhlIGhhZCAxNiBob3VycyBvZiBob21ld29yaywgQmxhbmNoZSBzYWlkIHdpdGggYSBsYXVnaC4gU29vbiByZWFsaXplZCBzY2hvb2wgd2FzbiBnb2luZyB0byBiZSBmb3IgaGltLiBUaGUgc2Nob29sIHJvdXRlLCBEYXZpZCBzdGFydGVkIGV4cGxvcmluZyBvdGhlciB0aGluZ3MgdG8gZG8uIApZb3Ugc2hvdWxkIGJlLiBNb3N0IHBlb3BsZSB3aG8gYnV5IHRoaXMgc3R1ZmYgYXJlIGNhdWdodCB1cCBpbiB0aGUgbW9tZW50IGFuZCBkb24ndCByZWFsbHkgdXNlIGl0IGFmdGVyIHRoYXQgZGF5LiBFdmVuIHdpdGggdGhlIEhvdyBUbyBCZWF0IE5vIExpbWl0IFRleGFzIEhvbGQgRW0gc3lzdGVtLCBvbmx5IGFib3V0IDIwJSBvZiB0aGUgcGVvcGxlIHRoYXQgcHVyY2hhc2UgaXQgd2lsbCB1c2UgaXQuIApXaWxsaWFtcyBwdWxsZWQgb3ZlciBvdXQgZm9yIHNhZmV0eSwgcHV0dGluZyB0aGUgZGFtYWdlZCB2ZWhpY2xlIGRpcmVjdGx5IGluIHZpZXcgb2YgaGlzIGRhc2hib2FyZCBjYW1lcmEuClNpZ25pZmljYW50bHksIHRoZSBjbHViIGlzIHZpcnR1YWxseSBkZWJ0IGZyZWUgYXMgaXQgY29udGludWVzIHRvIHVwZ3JhZGUgdGhlIGJ1aWxkaW5ncywgd2l0aCB0aGUgcHJvcGVydHksIGVxdWlwbWVudCBhbmQgcGxhbnQgYXQgdGhlIERlYW4gU3RyZWV0IGNsdWIgYW5kIHRoZSBOb3J0aCBTdHJlZXQgZ29sZiBjbHViIG5vdyB3b3J0aCAkNTkgbWlsbGlvbi4KVGhleSBuZWVkIHRvIGZlZWwgZW1wb3dlcmVkIGFuZCBiZSBwcm91ZCBvZiB0aGVpciBhY2hpZXZlbWVudHMuLiAKQm9tYmluZyBvaWwgZXhlY3V0aXZlcyBpcyBhbiBpbW1lZGlhdGUgd2F5IHRvIGdldCBwZW9wbGUgdG8gbm90aWNlIHRoYXQgdGhpbmdzIGxpa2UgdGhlIEJQIG9pbCBzcGlsbCBkaWRuIGp1c3QgaGFwcGVuIGJ5IGFjY2lkZW50IG9yIGFzIHRoZSByZXN1bHQgb2Ygc29tZSBodW1hbiBsZXNzIHN5c3RlbS4gT2lsIHNwaWxsIGhhcHBlbmVkIGluZGl2aWR1YWxzIGluIGNoYXJnZSBtYWRlIGRlY2lzaW9ucyB0aGF0IHB1dCBhbGwgb2YgdXMgYXQgcmlzayBzbyB0aGF0IHRoZXkgY291bGQgaW5jcmVhc2UgcHJvZml0LiAKQ0xBU1NJRklDQVRJT04gT0YgRVZJREVOQ0U6IFRoaXMgdHJpYWwgcHJvdmlkZXMgQ2xhc3MgSUkgZXZpZGVuY2UgdGhhdCBoaWdoIGRvc2Ugdml0YW1pbiBEIHVzZSBmb3IgNTIgd2Vla3MgaW4gcGF0aWVudHMgd2l0aCBtdWx0aXBsZSBzY2xlcm9zaXMgZG9lcyBub3Qgc2lnbmlmaWNhbnRseSBpbmNyZWFzZSBzZXJ1bSBjYWxjaXVtIGxldmVscyB3aGVuIGNvbXBhcmVkIHRvIHBhdGllbnRzIG5vdCBvbiBoaWdoIGRvc2Ugc3VwcGxlbWVudGF0aW9uLiAKTWFkZSB0aGVzZSB3aXRoIHNvbGlkIHBpZWNlcyBvZiB3b29kLCBCbGFuY2hlIHNhaWQuIExvdmVkIHdoYXQgaGUgd2FzIGRvaW5nLiAKRGFmciBnaWJ0IGVzIE1lZGVsbGluLCBCb2dvdGEgb2RlciBDYXJ0YWdlbmEgRm5mIFN0ZXJuZSBMdXh1cyBIb3RlbHMgbWl0IGludGVncmllcnRlbSBTaG9wcGluZ2NlbnRlci4gS2F2aWFyIGlua2x1c2l2ZS4gClNvIEkgYXNraW5nIHRoZSB0ZWVuLCBhcmUgeW91IGNvbnRyaWJ1dGluZz8gQXJlIHlvdSB3b3JraW5nIHRvIGJlIHNvbWV0aGluZz8gQW55dGhpbmcuIEJlY2F1c2UgeW91ciBkYWQgaXMgc3VwcG9ydGluZyB5b3UsIHlvdXIgam9iIGlzIHNjaG9vbC4gCkZvciBleGFtcGxlLCBpZiBhIG11c2NsZSBpcyB1bmRlciB0ZW5zaW9uIGR1ZSB0byBwcm9ibGVtcyBzdWNoIGFzIGFkaGVzaW9ucyBvciBzY2FyIHRpc3N1ZSwgb3ZlciB0aW1lIHRoaXMgdGVuc2lvbiB3aWxsIGNhdXNlIHdlYWtuZXNzIGFuZCBsZWFkIHRvIGluanVyeS4KVGhlcmUgYXJlIGFsc28gYW1hemluZyBib251cyBvZmZlcnMgZm9yIHRoZSBmaXJzdCB0aW1lIG1vYmlsZSB1c2Vycy4gCkkga25vdyB0aGUgbG93ZXN0IHBlbnNpb25zIGluIHRoZSBjb3VudHJ5IHNpZGUgaW4gQ2hvbmdxaW5nIGlzIG1lcmVseSAxMDAgUk1CIHBlciBtb250aCwgd2l0aCBhbG1vc3Qgbm8gbWVkaWNhbCBjb3ZlcmFnZSAob25seSAzMCBwcm9jZW50IG9uIGNlcnRhaW4gc2VydmljZXMgYW5kIG1lZGljaW5lcykuIApQcnNlbnQsIGNpbnF1YW50ZSBhbnMgYXBycywgdG91cyBsZXMgdHJhdmFpbGxldXJzIHNhbGFyaXMgc29udCByYXNzdXJzIGRhbnMgbm90cmUgcXVhcnRpZXIgZGUgQmVhdWxpZXUgOiBpbCBuJ3kgYSBwbHVzIGRlIHBpYWZzIHBvdXIgdmVuaXIgY2hhcGFyZGVyIGxlcyBjZXJpc2VzLgpGcm9tIEkgcmVtZW1iZXIgc29tZW9uZSBjYWxsZWQgaGltIG91dCB0byBoZWxwIGFzc2lzdCB3aXRoIGl0LCBhbmQgSSB0aGluayBoZSBzbGlwcGVkIHdoaWxlIGdldHRpbmcgaW4gcG9zaXRpb24/IEFueXdheSB0aGUgZ3V5J3MgZG9uZSBpdCBiZWZvcmUgYnV0IGV2ZW4gcHJvZmVzc2lvbmFscyBjYW4gZ2V0IGh1cnQgb3IgZnVjayB1cCBvbiB0aGUgam9iICAgYnV0IGhpbmRzaWdodCBzYXlzIGhlIHNob3VsZCBvZiB3YWl0ZWQgZm9yIGJhY2t1cCF2YWxlcmlrICAyIHBvaW50cyAgc3VibWl0dGVkIDEgeWVhciBhZ28KSSBzdWdnZXN0IHRoZSBuZXh0IHRpbWUgc2hlIGRvZXMgdGhpcyByaWdodCBpbiBmcm9udCBvZiB5b3UsIHlvdSBqdXN0IGFzayB5b3VyIGJveWZyaWVuZCB3aGF0IHNoZSBzYWlkIChkb24gYmUgZW1iYXJyYXNzZWQgdG8gbm90IGtub3cgYSBsYW5ndWFnZSwgaXQgbGlrZSBiZWluZyBlbWJhcnJhc3NlZCB5b3UgY2FuIHN1ZGRlbmx5IHBpY2sgdXAgYSBndWl0YXIgYW5kIHBsYXkgZnJlZSBiaXJkKSBhbmQgdGhlbiByZXNwb25kIHRvIGl0IGxpa2Ugc2hlIHdhcyB0YWxraW5nIHRvIHlvdSB0b28uIElmIHNoZSBjb250aW51ZXMsIHRlbGwgaGVyIHRoYXQgeW91IGZlZWwgbGVmdCBvdXQgKGRpbnQgYmUgZW1iYXJyYXNzZWQgdG8gaGF2ZSBlbW90aW9ucyB0aGF0IGFyZSBhcHByb3ByaWF0ZSBpbiB0aGUgc2l0dWF0aW9uKSBhbmQgeW91IHdvdWxkIGxpa2UgdG8gYmUgaW4gdGhlIGNvbnZlcnNhdGlvbiB0b28uLiAKTGV0IG1lIG9mZmVyIHlvdSAxMCB1c2VzIGZvciBqZWxseSBqZWFucyBiZXlvbmQgdGhlIEVhc3RlciBCYXNrZXQuLiAKRGFubGV5LCB3aG8gd2FzIG92ZXJzZWFzIGZvciBtb3JlIHRoYW4gdHdvIHdlZWtzLCBzYWlkIHNoZSB3YXMgaW5pdGlhbGx5IHBsZWFzZWQgd2hlbiBzaGUgd2FzIHdpcmVkIG1vbmV5IGZyb20gUGFkZG9jayB0byBidXkgYSBob3VzZSBmb3IgaGVyIGZhbWlseSBpbiB0aGUgUGhpbGlwcGluZXMuIEJ1dCBzaGUgbGF0ZXIgZmVhcmVkIGl0IHdhcyBhIHdheSB0byBicmVhayB1cCB3aXRoIGhlci4KSWYgaXQgaXMgYW4gb3BlbiBzeXN0ZW0gd2l0aCBhIHJldHVybiB0aGVuIEkgdHlwaWNhbGx5IGRvbiBzZWUgcGVvcGxlIHRhbGtpbmcgYWJvdXQgZnVlbCBwcmVzc3VyZSByZWd1bGF0b3JzLCBob3dldmVyIGl0IG11c3QgaGF2ZSBzb21ldGhpbmcgdGhhdCByZWd1bGF0ZXMgdGhlIGZ1ZWwgcHJlc3N1cmUsIGV2ZW4gaWYgdGhhdCBpcyBqdXN0IGEgcmVsaWVmIHZhbHZlLiBPciBwb3RlbnRpYWxseSBpdCBjb3VsZCB1c2UgYSBmdWVsIHByZXNzdXJlIHNlbmRlciB0byBkcml2ZSB0aGUgcHVtcC4gCkNvbmNsdXNpb246IFRoZXNlIGRhdGEgc3VnZ2VzdCB0aGF0IGltbWVyc2lvbiBhdCBib3RoIHRlbXBlcmF0dXJlcyByZXN1bHRlZCBpbiBzaW1pbGFyIHdob2xlIGxpbWIgYmxvb2QgZmxvdyBidXQsIHBhcmFkb3hpY2FsbHksIG1vcmUgYmxvb2Qgd2FzIGRpc3RyaWJ1dGVkIHRvIHRoZSBza2luIGluIHRoZSBjb2xkZXIgd2F0ZXIuIFRoaXMgc3VnZ2VzdHMgdGhhdCBjb2xkZXIgdGVtcGVyYXR1cmVzIG1heSBiZSBhc3NvY2lhdGVkIHdpdGggcmVkdWNlZCBtdXNjbGUgYmxvb2QgZmxvdywgd2hpY2ggY291bGQgcHJvdmlkZSBhbiBleHBsYW5hdGlvbiBmb3IgdGhlIGJlbmVmaXRzIG9mIGNvbGQgd2F0ZXIgaW1tZXJzaW9uIGluIGFsbGV2aWF0aW5nIGV4ZXJjaXNlIGluZHVjZWQgbXVzY2xlIGRhbWFnZSBpbiBzcG9ydHMgYW5kIGF0aGxldGljIGNvbnRleHRzLgoiSSdtIHBlcnNvbmFsbHkgbm90IGEgZmFuIG9mIHB1bGxpbmcgb3V0IHNoZWV0IG1hc2tzIGFuZCB3aXBlcyBhbmQgc3ByYXlzICAgSSBkb24ndCBtZXNzIHdpdGggYW55IG9mIHRoYXQsIiBzYXlzIFJvdWxlYXUsIHdobydzIGFsc28gdGhlIGZvdW5kZXIgb2YgaGVyIGVwb255bW91cyBza2luIGNhcmUgbGluZS4gV2hpbGUgY2VsZWJzIGluY2x1ZGluZyBDaHJpc3N5IFRlaWdlbiwgSGFpbGV5IEJhbGR3aW4gYW5kIEJ1c3kgUGhpbGlwcHMgc3dlYXIgYnkgdGhlIG1pbGUgaGlnaCBLb3JlYW4gYmVhdXR5IHN0YXBsZXMgdG8ga2VlcCBza2luIHN1cHBsZSwgUm91bGVhdSBhZHZpc2VzIGhlciBmYW1vdXMgY2xpZW50cywgd2hpY2ggaW5jbHVkZSAiUml2ZXJkYWxlIiBzdGFyIExpbGkgUmVpbmhhcnQgYW5kIFNvZmEgVmVyZ2FyYSwgYWdhaW5zdCBkb2luZyB0cmVhdG1lbnRzIGluIHRoZSBhaXIuIEFmdGVyIGFsbCwgc2hlIHBvaW50cyBvdXQsIHBsYW5lcyBhcmVuJ3QgZXhhY3RseSBzdGVyaWxlOiAiVGhlIHdhdGVyIGluIHRoZSBzaW5rIG9uIHRoZSBwbGFuZSBpcyBkaXNndXN0aW5nLCIgYW5kIGFwcGx5aW5nIHByb2R1Y3RzIHdpdGggZ2VybSBjb2F0ZWQgZmluZ2VycyBpcyBsZXNzIHRoYW4gaWRlYWwuIApVbmxpa2Ugd2hhdCBhbm90aGVyIGNvbW1lbnRlciBzdWdnZXN0ZWQsIGlmIHRoZSBjb25jZXJuIGlzIGl0Y2hpbmVzcy9pcnJpdGF0aW9uIEkgd291bGQgbm90IHJlY29tbWVuZCB1c2luZyBhIHN0cm9uZywgZHJ5aW5nIGNoZW1pY2FsIGV4Zm9saWF0aWFudCBzdWNoIGFzIFN0cmlkZXguIApUaGlzIGd1eSBzZWxsaW5nIGhpcyBhY3Rpb24gZmlndXJlcyBvbiBlQmF5ClNlY29uZGx5LCB3ZSBhcmUgaW5kZWVkIG9uIHIvZ2Fpbml0IGJ1dCBzb21lIG9mIHVzIGRvIHRyYWNrIG91ciBtYWNyb3MsIG5vdCBqdXN0IG91ciBwcm90ZWluIGFuZCB0b3RhbCBjYWxvcmljIGludGFrZS4KQSByZWxhdGVkIGFyZ3VtZW50IGlzIHRoYXQgZG9tZXN0aWMgcG9saXRpY2FsIHByb2Nlc3NlcyBjYW4gaGFtc3RyaW5nIGEgZ292ZXJubWVudCBpbiB0aGUgZ3JlYXQgZ2FtZSBvZiBwb2tlciBvciBjaGVzcyB0aGF0IGludGVybmF0aW9uYWwgcG9saXRpY3MgaXMgc3VwcG9zZWQgdG8gYmUuIEluIGhpZ2ggc3Rha2VzIG5lZ290aWF0aW9ucywgdGhlIGxhc3QgdGhpbmcgdGhlIHBsYXllcnMgbmVlZCBpcyBwdWJsaWMgZGViYXRlIGFib3V0IHRoZSBjYXJkcyB0aGF0IGVhY2ggb2YgdGhlbSBob2xkcy4gQSB0aHJlYXQgdG8gdHVybiBmcm9tIHRhbGtzIHRvIHRhbmtzIG11c3QgYmUgY3JlZGlibGUsIHdoaWNoIGl0IHdpbGwgbm90IGJlIGlmIGFuIG9wcG9zaW5nIHBsYXllciBjYW4gc2ltcGx5IGNvdW50IHZvdGVzIHRvIHNlZSBpZiB0aGUgbmVjZXNzYXJ5IGxlZ2lzbGF0aXZlIG1ham9yaXR5IGV4aXN0cy4KVGhleSBzYXkgaG93IHRlcnJpYmxlIGl0IGlzLCB0aGV5IG9yZGVyIGZyb20gdGhlcmUgZXhjbHVzaXZlbHkgbm93IHRvIHN1cHBvcnQgaGltLCBoZSB3YXMgdHJpY2tlZCBpbnRvIHNheWluZyB0aG9zZSB0aGluZ3MsIGl0IHNob3VsZG4gZWZmZWN0IGhpcyBidXNpbmVzcywgeWFkZGEgeWFkZGEgcmFjaXN0IHN1cHBvcnRpbmcgQlMuClRoaXMgaXMgdXN1YWxseSB0aGUgcmVhc29uIHdoeSBwZW9wbGUgaW4gSW5kaWEgcHJlZmVyIHRvIHBsYXkgcG9rZXIgYXQgaG9tZSByYXRoZXIgdGhhbiBwbGF5aW5nIHN0cmFpZ2h0IGF3YXkgaW4gYSBjYXNpbm8uIFBsYXlpbmcgcG9rZXIgYXQgaG9tZSBub3Qgb25seSBpbXByb3ZlcyB0aGUgcG9rZXIgcGxheWluZyBhYmlsaXR5IG9mIGFuIGluZGl2aWR1YWwgYnV0IGFsc28gaGVscHMgaGltIHRvIGdlbmVyYXRlIG5ldyBza2lsbHMgd2hpbGUgcGxheWluZyBwb2tlci4gCkVyIGJkYSBncmEgZGl0dCBic3RhIGF0dCBnIHZpZGFyZSBtZWQga3RlbnNrYXAgZWZ0ZXIgZW4gYWZmci4gCkkgZ290IGhpbSBvbiBBcHJpbCAxc3QsIDIwMDcuIApBbmQgd2hpbGUgbW9zdCBjdXN0b21lcnMgc2hydWcgaXQgb2ZmIGlmIHNoZSB0dXJucyB0aGVtIGRvd24sIHNvbWUgdGFrZSBvZmZlbnNlLiBPbmUgZ3JldyBmdXJpb3VzIGFuZCBzbGFtbWVkIGhlciBhZ2FpbnN0IGEgd2FsbC4gCkFjdXB1bmN0dXJlIGhhcyBiZWVuIHByYWN0aWNlZCBzaW5jZSBhbmNpZW50IHRpbWVzIHdpdGggbmVlZGxlcyBtYWRlIGZyb20gc3RvbmUsIHdvb2QsIGl2b3J5LCBvciBib25lLiBNb2Rlcm4gcHJhY3RpdGlvbmVycyB1c2Ugc3VyZ2ljYWwgcXVhbGl0eSBzdGFpbmxlc3Mgc3RlZWwgbmVlZGxlcyB3aXRoIGEgaGFuZGxlIHdvdW5kIHdpdGggd2lyZSBmb3IgYSBiZXR0ZXIgZ3JpcC4gCkkga25vdyBhY3RpdmUgbWVtYmVycyB3aG8gb2Z0ZW4gZHJpbmsgZW5lcmd5IGRyaW5rcyBhcyB3ZWxsLiBJbiBvcmRlciB0byBtYWludGFpbiBhIHRlbXBsZSByZWNvbW1lbmQsIGFzIG1vc3QgQ2h1cmNoIG1lbWJlcnMgZG8sIHRoZXkgbXVzdCBhdm9pZCBhbGNvaG9sLCBjb2ZmZWUsIGFuZCB0ZWEuIApJZiB5b3Ugc3RpbGwgaW5zaXN0IG9uIHNwZW5kaW5nIDQwaywgcGxlYXNlIGRvIHlvdXIgZHVlIGRpbGlnZW5jZSBhbmQgYXNrIGhlciB3aGF0IHNpemUgc3RvbmUgc2hlIHByZWZlcnMvbG9va3MgZ29vZCBvbiBoZXIuIEkgYW0gYSBzaXplIDMuNSBJIGxvdmUgc3ByYWtsZSwgYnV0IEkgY2FuJ3Qgd2VhciBpdC4gCkdpbmV0dGUgTGFtYXJjaGUgcydlc3QgcmVuZHVlICBWYWwgZCdPciwgdmlsbGUgbWluaXJlIGRlIGwnQWJpdGliaSwgcG9ydGUgZCdlbnRyZSBkdSBOb3JkIGR1IFF1YmVjIG8gbGEgcHJvc3RpdHV0aW9uIHByZW5kIHRvdXRlcyBzb3J0ZXMgZGUgdmlzYWdlcyA6IGJhcnMgZGUgZGFuc2V1c2VzLCBzZXJ2aWNlcyBkJ2FjY29tcGFnbmVtZW50LCBwcm9zdGl0dXRpb24gZGUgcnVlLCBldCBwcm9zdGl0dXRpb24gZGUgZmluIGRlIG1vaXMuIE5vdHJlIGpvdXJuYWxpc3RlIGEgY29uc3RhdCBxdWUgbGVzIHRyYXZhaWxsZXVzZXMgZHUgc2V4ZSBvbnQgZGlmZnJlbnRzIHBvaW50cyBkZSB2dWUgc3VyIGxlIHByb2pldCBkZSBsb2kgQyAzNi4gCkpvZSBtYXJyaWVkIEJlYXRyaWNlIG9uIEZlYnJ1YXJ5IDl0aCwgMTk1MiBhbmQgYWZ0ZXIgcnVubmluZyBhIHBvb2wgaGFsbCBhbmQgdG95IHN0b3JlLCBoZSBvcGVuZWQgd2hhdCB3YXMgdG8gYmVjb21lIGFuIE9zaGF3YSBsYW5kbWFyayAgIEJvbGFob29kJ3MgU3BvcnRzaGF2ZW4uIEpvZSBvdXRmaXR0ZWQgbW9zdCBvZiB0aGUgT3NoYXdhIEdlbmVyYWxzIHBsYXllcnMgZm9yIHRoZWlyIGVxdWlwbWVudCBmb3IgbWFueSB5ZWFycy4gTm8gb25lIGNvdWxkIGZpdCBhIHBhaXIgb2Ygc2thdGVzIGxpa2UgSm9lISBIaXMgcGFzc2lvbnMgaW5jbHVkZWQgZ29sZiwgY3VybGluZywgaHVudGluZyBhbmQgdGhlIG9kZCBwb2tlciBnYW1lISBUaGUgbW9yZSBwZW9wbGUgYXJvdW5kLCB0aGUgaGFwcGllciBoZSB3YXMuIApXZWxsLCBJIHR1cm5lZCAxOCwgYW5kIHdvdW5kIHVwIGJ1c3RpbmcgbXkgYXNzIHRvIGdldCBhIHNjaG9sYXJzaGlwLiBJdCBkaWRuIGNvdmVyIHJvb20gb3IgYm9hcmQsIHRob3VnaCwgc28gSSBzdGlsbCBoYWQgdG8gd29yayAzMCA0MCBob3VycyBhIHdlZWsgdG8gY292ZXIgbGl2aW5nIGV4cGVuc2VzLiAKSSB0aGluayB0aGF0cyBhbHNvIHdoYXRzIGJlZW4gaGFwcGVuaW5nIHdpdGggbWUuLiAKQ29tcGFuaWVzIGhhdmUgaW52ZXN0ZWQgYWJvdXQgJDM4NyBiaWxsaW9uIGluIENhbmFkYSBhbmQgJDEwOCBiaWxsaW9uIGluIE1leGljby4gClRoZSBleHBlcmllbmNlIHNoZSBnYWlucyBmcm9tIHRoZSBpbnRlcmFjdGlvbiB3aXRoIHRoZSBlbnZpcm9ubWVudCBmZWVkcyBpbiB0byBoZXIgc3RpdGNoaW5nLiAKIklmIHRoZXkga25vdyB5b3VyIGZhY2UsIHRoZXknbGwgbGV0IHlvdSBpbiwiIGhlIHNheXMuIApTcG9ydHMgaGl0Ck9uIHRoZSBvdGhlciBoYW5kLCB3aGVuIHlvdSBjcmVtYXRlIGEgYm9keSwgaXRzIGNvbnRlbnRzIGFsc28gcmV0dXJucyB0byBuYXR1cmUgdGhhdCB3aWxsIHVsdGltYXRlbHkgbm91cmlzaCB0aGUgZ3JvdW5kIChub3QgdGhhdCB3ZSBuZWVkIG1vcmUgQ08yIG5vd2FkYXlzKS4gQWx0aG91Z2ggdGhlcmUgYXJlIHNvbWUgcHVzaGVzIGZvciBhIG5hdHVyYWwgYnVyaWFsICh3aGljaCBwcmVzdW1hYmx5IGlzIGFsc28gbW9yZSBjb21tb24gaW4gcnVyYWwgYXJlYSksIGl0IGlzIHZpcnR1YWxseSBub25leGlzdGVudCBpbiB1cmJhbiBlbnZpcm9ubWVudCB3aGVyZSBsYW5kIGlzIG9mIHByZW1pdW0uIEl0IGlzIGV4cGVuc2l2ZSBlbm91Z2ggdG8gaGF2ZSBhIHBsb3QgdG8gYnVyeSBhIGNvZmZpbiwgbGV0IGFsb25lIG1ha2luZyBpdCBhIGZhcm1sYW5kLi4gClRoZSBmYXRlIG9mIG91ciBjb3VudHJ5IGFuZCBvdXIgaGVhcnRzIGRlcGVuZHMgb24gaXQuLiAKR2VvcmdlIEVpZmVybWFuLCBhbiBpbnRlcm5hdGlvbmFsbHkgcmVub3duIGZpdG5lc3MgZ3VydSB3aG8gdHJhaW5lZCBjZWxlYnJpdGllcywgYm9keWJ1aWxkZXJzIGFuZCBvdGhlciBhdGhsZXRlcywgZGllZCBUdWVzZGF5IGF0IHRoZSBPZHlzc2V5IEhlYWx0aCBDYXJlIGZhY2lsaXR5IG9mIGhlYXJ0IGZhaWx1cmUgYW5kIG90aGVyIGNvbXBsaWNhdGlvbnMgcmVsYXRlZCB0byBhIGNyaXBwbGluZyBzdHJva2UgaGUgc3VmZmVyZWQgMyAxLzIgeWVhcnMgYWdvLiBIZSB3YXMgNzYuIApIZSBub3QgYmVpbmcgaW5hcHByb3ByaWF0ZSB3aXRoIHJhbmRvbSBmYW5zIHRoZXkgbWVldCBhdCBjb25zLiAKSSBhc2NyaWJlIHRvIHRoZSBpZGVhIHByb21vdGVkIGluIFRoZSBEZXZPcHMgSGFuZGJvb2sgdGhhdCB0aGUgYnVpbGQgc2hvdWxkIGJlIGNvbGxlY3RpdmVseSBvd25lZCBieSB0aGUgZGV2IHRlYW0uIApVbnJlYXNvbmFibGUgY29tbWFuZHMgd291bGQgbGlrZWx5IGluY2x1ZGUgdGhpbmdzIHRoYXQgZ28gZW50aXJlbHkgY29udHJhcnkgdG8gdGhlIGNyZWF0dXJlIG5hdHVyZSAoc3VjaCBhcyBhc2tpbmcgYSBnb29kIGFsaWduZWQgY3JlYXR1cmUgdG8ga2lsbCBhIGJ1bmNoIG9mIGlubm9jZW50cyksIGFueXRoaW5nIHRoYXQgaXMgb2J2aW91c2x5IHN1aWNpZGFsIG9yIGVudGlyZWx5IGFnYWluc3QgdGhlIGNyZWF0dXJlIG93biBnb2FscyBhbmQgZGVzaXJlcy4gClRoZSB0b3dlcmluZyBKYW1haWNhbiByb2FyZWQgcGFzdCBHYXRsaW4gYXQgdGhlIGhhbGZ3YXkgbWFyayB0byByZXRhaW4gaGlzIGNyb3duIGluIGEgc2Vhc29uIGJlc3Qgb2YgOS43OSBzZWNvbmRzLCB3aXRoIGhpcyBBbWVyaWNhbiByaXZhbCB0YWtpbmcgc2lsdmVyIGp1c3Qgb25lIGh1bmRyZWR0aCBiZWhpbmQgb24gYSBwdWxzYXRpbmcgZXZlbmluZyBhdCB0aGUgd29ybGQgY2hhbXBpb25zaGlwcyBpbiBCZWlqaW5nLgpJIGNhbiBtaXNzIGFueSBnYW1lcyBub3cuIApNYXliZSBjb25zaWRlciBidW1waW5nIHVwIGEgZmV3IG9mIHlvdXIgbGltcCB3b3J0aHkgaGFuZHMgaW4gbGF0ZSBwb3NpdGlvbiB0byA1IG9yIDggYnVja3Mgb25jZSBpbiBhIHdoaWxlIGZvciAicG90IGJ1aWxkaW5nIiBzbyBpZiB5b3UgaGl0IGEgc2V0IG9yIG1vbnN0ZXIgZHJhdyBzdGFja3MgYXJlIGFsbW9zdCBhbHdheXMgZ29pbmcgaW4uIApJIExPVkUgeW91ciBleWVzaGFkb3chIEl0IHNvIHVuaXF1ZSBhbmQgbWFrZXMgeW91ciBleWVzIGxvb2sgcmVhbGx5IGludGVyZXN0aW5nICh5b3UgaGF2ZSByZWFsbHkgZ3JlYXQgZXllcykuIEkgcmVjb21tZW5kIGNvdmVyaW5nIG1vcmUgYXJlYSB3aXRoIHlvdXIgYmx1c2guIEkgY2FuIHNlZSB0aGUgY29sb3IgeW91IHVzZWQsIGFuZCBpdCBsb29rcyBsaWtlIGEgZ3JlYXQgY29sb3IgY2hvaWNlLCBidXQgaXQgd291bGQgdGllIHlvdXIgbG9vayB0b2dldGhlciBtb3JlIGlmIGl0IHdhcyBtb3JlIGJsZW5kZWQvYmlnZ2VyLiBJdCBkb2VzIGxvb2sgbGlrZSB5b3VyIGZvdW5kYXRpb24gaXMgYnJlYWtpbmcgdXAgYSBsaXR0bGUgb24geW91ciBub3NlLiBJZiB5b3UgaGF2ZW4gYmVlbiB3ZWFyaW5nIHRoZSBmb3VuZGF0aW9uIGZvciBsaWtlIDEwIGhvdXJzIGFscmVhZHksIGl0IG1pZ2h0IGJlIGhhcHBlbmluZyBiZWNhdXNlIG9mIGEgbWl4dXAgb2YgcHJpbWVyIGZvdW5kYXRpb24gYmFzZXMuIEFrYSwgaWYgeW91IHVzZWQgYSBzaWxpY29uZSBwcmltZXIsIHRyeSBhIHNpbGljb24gZm91bmRhdGlvbiBvciB1c2UgYm90aCB3YXRlciBiYXNlcyBmb3JtdWxhcy4KTGVzIGFuYWx5c2VzIGRlcyBpdGFsaWVucyBuZSBsdWkgYXBwYXJ0aWVubmVudCBwYXMgZXQgY2VzIGRlcm5pZXJzIG4nb250IHBhcyBmYWl0IGQnZWZmb3J0IHBvdXIgbGVzIHB1YmxpZXIgaW50Z3JhbGVtZW50LiBDJ2VzdCBzb3J0aSBkYW5zIGRlcyBqb3VybmF1eC5RdWFuZCBqZSBsdWkgYWkgcGFybCBkZSBmYWlyZSB1biBzaXRlIHBvdXIgY2VudHJhbGlzZXIgbGVzIGluZm9ybWF0aW9ucyBhdmVjIHVuZSBtYWlsaW5nIGxpc3QsIGlsIG0nYSBycG9uZHUgcXUnaWwgbidhdmFpdCBwYXMgbGUgdGVtcHMuIAoxOTkwJ3MgIktvdmFjc2xhbmQiIGJ5IERpYW5hIFJpY28gZGlkIGxpdHRsZSB0byBiYWxhbmNlIHRoZSBzY2FsZXMuIApNeSBodXNiYW5kIGlzIGZyb20gd2VzdGVybiBDYW5hZGEuIApNb20gZm9yZ2F2ZSBoZXIgaW5zdGFudGx5LCB0aGUgcG9vciBraXR0eSBoYXMgYmVlbiBzbyBnb29kIGFib3V0IGdvaW5nIG9uZSBsYXN0IHJvdW5kIGJlZm9yZSB3ZSBnbyB0byBzbGVlcCBhbmQgd2FpdGluZyB1bnRpbCBzb21lYm9keSB3YWtlcyB1cCBpbiB0aGUgbW9ybmluZywgc2hlIG11c3QgaGF2ZSBiZWVuIHVuZGVyIGEgTE9UIG9mIHByZXNzdXJlLi4gCk1heWJlIHRoYXQgbWVhbnMgd2UgaGF2ZSB0byBkZWFsIHdpdGggYSByZXN1cmdlbmNlIGluIFJ1YmVsbGEgc29tZSBkYXkgYnV0IGF0IGxlYXN0IHRoZW4gbW9yZSBwZW9wbGUgd2lsbCBiZSB2YWNjaW5hdGVkIGFnYWluc3QgTWVhc2xlcyBhbmQgTXVtcGhzLiAKVGhpcyB3YXMgd2hlbiBMZW5pbidzIGltYWdlIGJlY2FtZSB3ZWxsIGtub3duLiBOb3cgdGhlIHBlb3BsZSBoYWQgYSBsZWFkZXIsIHNvbWUgc29ydCBvZiBteXRob2xvZ3kgYW5kIHNvbWUgcmVhbCB0aGluZyB0byBjbGluZyB0byByYXRoZXIgdGhhbiBzb21lIHZhZ3VlIENvbW1pbmlzdCBkcmliYmxlLi4gCllvdSBqdXN0IGhhdmUgdG8gdW5kZXJzdGFuZCB0aGUgYWR2YW50YWdlcyB0aGF0IGJvdGggdGhvc2UgaXRlbXMgcHJvdmlkZS4gSXQgc2VlbXMgbGlrZSB5b3UgZG9uIHVuZGVyc3RhbmQgdGhlIGJ1cnN0IGd1aW5zb28gMm5kIGF0dGFjayBnaXZlcyBhcyAzcmQgaXRlbS4gCk5vIHNwb2lsZXJzIHdpdGhvdXQgYSB3YXJuaW5nLiAKU2hpdHRpbmcgaXMgaHVtYW4gd2FzdGUuIEh1bWFuIHdhc3RlIGluIHB1YmxpYyBpbiB0aGUgcGFzdCBoYXMgY2F1c2VkIHRlcnJpYmxlIGRpc2Vhc2VzIGFuZCBwYXJhc2l0ZXMuIEl0IGFsc28gc21lbGxzIGxpa2UuIHNoaXQuIEl0IG1lc3N5IGFuZCB1bnNpZ2h0bHkuCkFmdGVyIHJlYWRpbmcgYW5kIGdvb2dsaW5nIHRoZSBuYW1lcyBoZSByZWFsaXplZCBpdCB3YXMgZm9yIHRoZSBtb3ZpZSBQcmlkZSBhbmQgUHJlanVkaWNlIGFuZCBab21iaWVzLiAKSWYgeW91IGEgMjMgMjYgeWVhciBvbGQgd2hvIGRvZXNuIGhhdmUgcmVsYXRpb25zaGlwIGV4cGVyaWVuY2UgYW5kIHlvdXIgaWRlYSBvZiBhIGNhcmVlciBmb3IgdGhlIG5leHQgZmV3IHllYXJzIGlzIHNoaWxsaW5nIG9uIEluc3RhZ3JhbSwgVEhBVCBpcyB3aGF0IG1ha2VzIHlvdSBub3QgcmVhZHkgZm9yIG1hcnJpYWdlLiA2NyBwb2ludHMgIHN1Ym1pdHRlZCAyMiBkYXlzIGFnb0kgYW0gdGVycmlmaWVkIG9mIGdldHRpbmcgQm90b3ggZXZlbiB0aG91Z2ggSSBsZWFybmluZyB0aGF0IGEgbG90IG9mIHdvbWVuIG15IGFnZSAobGF0ZSAzMHMpIGFuZCBtdWNoIHlvdW5nZXIgYXJlIGRvaW5nIGl0LiAKVGhlIGR1ZGUgd2FhIHdhcyBzY3JlYW1pbmcgZm9yIGhlbHAsIGFuZCBoaXMgYnJvdGhlciB3YXMgaW4gdGhlIG90aGVyIHJvb20sIGJ1dCBieSB0aGUgdGltZSBoaXMgYnJvdGhlciBjYW1lLCBpdCB3YXMgdG9vIGxhdGUgc2F3IGhpbSBnZXQgc3dhbGxvd2VkIHVwLiBUaGV5IG5ldmVyIGZvdW5kIHRoZSBndXkgYWZ0ZXIgdGhhdCB0byBldmVuIGdpdmUgaGltIGEgcHJvcGVyIGZ1bmVyYWwuIApQdXNoaW5nIGFuIGFudGkgZnJlZSB0cmFkZSwgbmF0aXZpc3QgcGxhdGZvcm0gdGhhdCBnYWx2YW5pemVkIHdoaXRlLCBsZXNzIGVkdWNhdGVkIEFtZXJpY2FuIG1lbiB3aGlsZSB0dXJuaW5nIG9mZiBtYW55IHdvbWVuIGFuZCBtaW5vcml0aWVzLCBUcnVtcCB3YXMgYmVoaW5kIGluIHRoZSBvcGluaW9uIHBvbGxzIHRocm91Z2ggbW9zdCBvZiB0aGUgcHJlc2lkZW50aWFsIGNhbXBhaWduLgpOb3cgaXQgaXMgdGhhdCB3aW5kL3NvbGFyIGNhbid0IHBvd2VyIG1vZGVybiBzb2NpZXR5LiBBc2lkZSBmcm9tIHRoZSBmYWN0IHlvdSd2ZSBmb3Jnb3R0ZW4gaHlkcm9lbGVjdHJpYywgYW5kIHRoZSBjb3VudHJpZXMgd2hlcmUgaXQgZG9lcyBwb3dlciBzb2NpZXR5LCBhbmQgdGhlIHN0YXRlcyBpbiBvdXIgb3duIGNvdW50cnkgd2hlcmUgdGhleSB3b3JrIGp1c3QgZmluZSB3aXRob3V0IG5hdHVyYWwgZ2FzLCBhbmQgdGhlc2UgdGhpbmdzIGNhbGxlZCAiYmF0dGVyaWVzIiwgeW91IHNlZW0gdG8gYWxzbyBiZSBpZ25vcmluZyBhbnkgYWR2YW5jZW1lbnQgaW4gcmVuZXdhYmxlIHRlY2hub2xvZ2llcyB0aGF0IGhhdmUgb2NjdXJyZWQgb3IgdGhhdCB3aWxsIG9jY3VyIHRvIHByb2dub3N0aWNhdGUsIHdpdGhvdXQgZXZpZGVuY2UsIHNvbWV0aGluZyB3aGljaCBzaW1wbHkgY2FuIG5vdCBiZSBmYWxzaWZpZWQgYXQgdGhpcyB0aW1lLgpJIHRoaW5rIHRoYXQncyBhIGNvbW1vbiBleHBlcmllbmNlLCB0aGF0IGltbWlncmFudHMgZmVlbCBwcmVzc3VyZSB0byBhc3NpbWlsYXRlIGZyb20gYWxsIHNpZGVzLiBCdXQgYXQgdGhlIGVuZCBvZiB0aGUgZGF5IGl0J3Mgd2hvIHlvdSBhcmUsIHNvIGl0J3MgeW91ciBkZWNpc2lvbi4gSSBhbHNvIHRoaW5rLCB3aGF0IGEgZ2lmdCBpdCBjb3VsZCBiZSAoaWYgeW91IGNob29zZSB0byBoYXZlIGNoaWxkcmVuKSB0byBwcmVzZXJ2ZSB5b3VyIGN1bHR1cmUgdGhyb3VnaCB5b3VyIG5hbWUgc28gdGhleSBjb3VsZCBrbm93IHdoZXJlIHRoZXkgY29tZSBmcm9tIGFzIHdlbGwuIApXaHkgdGhlbiB3b3VsZCB0aGV5IHdhaXQgYW5vdGhlciBmdWxsIG1vbnRoIHRvIG1ha2UgdGhlIHJhaWQgKGJhc2ljYWxseSBkb2luZyBub3RoaW5nIGluIGJldHdlZW4uIApBbGdpYyBpcyB0aGUgb25seSBvbmUgZm91bmQgb24gYm90aCB0aGUgZWFzdCBhbmQgd2VzdCBjb2FzdCBvZiBOb3J0aCBBbWVyaWNhLCBhbmQgZXZlbiB0aGUgaGFuZGZ1bCBvZiBzbWFsbCBBbGdpYyBsYW5ndWFnZXMgaW4gdGhlIHdlc3QgaGF2ZSBiZWVuIGlzb2xhdGVkIGZyb20gdGhlaXIgZWFzdCBjb2FzdCBjb3VudGVycGFydHMgZm9yIHRob3VzYW5kcyBvZiB5ZWFycyBhbmQgd291bGQgbm90IGJlIG11dHVhbGx5IGludGVsbGlnaWJsZS4uIAoiV2UndmUgd29ya2VkIG9uIGEgbG90IG9mIG5ldyB0aGluZ3MgYW5kIEkndmUgcHVzaGVkIG15c2VsZiB0byB0aGUgbGltaXQgZXZlcnkgZGF5LiAKQnkgYWNjZXNzaW5nIHN1Y2ggRGlnaXRhbCBQcm9kdWN0cyB5b3UgYWdyZWUgdG8gdGhlIFN1biBUaW1lcyBURVJNUyBPRiBVU0UgYW5kIFBSSVZBQ1kgUE9MSUNZLiAKSGUgbGlrZWx5IHRha2VuIGJ5IHRoZSBmYWN0IHRoYXQgc2hlIHdhcyBvbiB0diBwbHVzLCBzaGUgbm90IGF3ZnVsIGxvb2tpbmcuIFNoZSBjZXJ0YWlubHkgdHVybmVkIG9uIHRoZSBjaGFybSBsaWtlIHNoZSBkaWQgd2l0aCBDb2x0IGR1cmluZyB0aGUgNCBkYXlzIGJlZm9yZSBoZSBwcm9wb3NlZC4gRmluYWxseSwgSSBzdXJlIHNoZSBnb3Qgc2V4eSBtb3ZlcyBpbiBiZWQganVzdCBsaWtlIEFzdWVsdSBkb2VzICBidXQgc2hlIGRlZmluaXRlbHkgaGFzIGEgdHlwZS4gClRocmVlIG9yIGZvdXIgZGVja3Mgb2YgY2FyZHMgICB5b3UgY2FuJ3QgcGxheSB3aXRob3V0ICdlbS4gSGF2aW5nIHNldmVyYWwgc3BhcmUgZGVja3MgYXQgaGFuZCBpcyBhIHBydWRlbnQgbW92ZSBhcyBhIGNvbnRpbmdlbmN5IG1lYXN1cmUgZm9yIGRhbWFnZWQgZGVja3Mgb3Igb25lcyB0aGF0IGhhdmUgYmVlbiBkZXN0cm95ZWQgYnkgc3BpbGxlZCBiZWVyLiBDYXJkcyBoYXZlIGEgbmF0dXJhbCBsaWZlc3BhbiBhbmQgbmVlZCB0byBiZSByZXBsYWNlZCBldmVyeSBzbyBvZnRlbiBkZXBlbmRpbmcgb24gdGhlaXIgcXVhbGl0eS4uIApJbiBzaG9ydCwgeWVzIHdlIGNvdWxkIGZpbmQgbmV3IGVsZW1lbnRzIGluIHNwYWNlLCBidXQgd2UgYXJlIHN0aWxsIGZpbmRpbmcgKG1vc3RseSBjcmVhdGluZykgZWxlbWVudHMgb24gZWFydGguIElmIHdlIGRvIGZpbmQgZWxlbWVudHMgbXVjaCBsYXJnZXIgdGhhbiB0aGUgb25lcyB3ZSBjdXJyZW50bHkgaGF2ZSwgdGhlaXIgcHJvcGVydGllcyB3aWxsIGJlIHNvbWV3aGF0IGRpZmZpY3VsdCB0byBwcmVkaWN0IGFuZCB0aGV5IHdpbGwgbGlrZWx5IGRpc2FwcGVhciB3aXRoaW4gbWlsbGlzZWNvbmRzIHVubGVzcyB0aGV5IGFyZSBleGNlcHRpb25hbGx5IHN0YWJsZQpXb21lbiBoYXZlIGJlZW4gYml0Y2hpbmcgYWJvdXQgZXF1YWwgcmlnaHRzIGZvciB0aGUgbG9uZ2VzdCB0aW1lLiAKV2lsbCBiZSBjb21pbmcgaW4gYW5kIGNvb2tpbmcgdXAgaGlzIGNsYXNzaWMgc3BhZ2hldHRpIGRpbm5lciB3aXRoIGEgaG91c2Ugc2FsYWQsIGdhcmxpYyBicmVhZCBhbmQgYSBnbGFzcyBvZiBDaGlhbnRpIGFsbCBmb3IgJDE0Ljk1LCBNYWNleSBzYWlkLiAgcmVhbGx5IGhvcGUgdGhpcyBjYXRjaGVzIG9uIGFuZCBpZiBpdCBzdWNjZXNzZnVsIGhlIG9wZW4gdG8gZXhwYW5kaW5nIGFuZCBvZmZlcmluZyBtb3JlIGRpc2hlcy4gQSBsb3Qgb2YgcGVvcGxlIG1pc3MgaGlzIGNvb2tpbmcgYW5kIHRoaXMgaXMgYW5vdGhlciB3YXkgb2Ygc2F5aW5nIHdlbGNvbWUgYmFjayB0byB0aGUgY29tbXVuaXR5IGFuZCBhIG5pY2UgcmVhc29uIHRvIGdldCB0aGUgZmFtaWx5IG91dCBmb3Igc29tZXRoaW5nIGRpZmZlcmVudC4gCklmIHNoZSBpcyByZWFsbHkgdXBzZXQsIEkgYWJsZSB0byBnbyBpbiBhbmQgc29vdGhlIGhlciBhbmQgYmUgYmFjayBpbiBiZWQgaW4gYWJvdXQgMzAgbWludXRlcy4gCkhlciBIb25vdXIgZnJ1c3RyYXRpb24gYXBwZWFyZWQgdG8gaW5jcmVhc2Ugd2hlbiBzaGUgdHVybmVkIHRvIHRoZSB2YWx1ZSBvZiBNci4gSGVyamF2ZWMgc2hhcmVzIGluIGhpcyBwcml2YXRlIGNvbXBhbnkuIFdhcyB0aGUgY2FzZSB3aXRoIHRoZSByZWFsIGVzdGF0ZSBhcHByYWlzZXJzLCB0aGVpciBvcGluaW9ucyBzcXVhcmVseSBhbGlnbiB3aXRoIHRoZSBpbnRlcmVzdCBvZiB0aGUgUGFydHkgd2hvIHJldGFpbmVkIHRoZW0sIEp1c3RpY2UgTWVzYnVyIHdyb3RlLiAKSSBtZWFuIHRoYXQgZHlpbmcgbGlnaHQgZ2FtZSBsb29rcyBiZXR0ZXIgaW4gYSBsb3Qgb2Ygd2F5cywgYnV0IEkgbmV2ZXIgcGxheWVkIGl0LiBPYnZpb3VzbHkgdGhlIGVuZW1pZXMgYXJlbiBwYXJ0aWN1bGFybHkgY2hhbGxlbmdpbmcgaW4gc2t5cmltIGFuZCBhcmUgc3R1cGlkIGJ1dCBJIGZlZWwgbGlrZSBJIGNhbiBtYWtlIGl0IGxvb2sgcHJldHR5IGdvb2QsIHdoaWNoIGlzIHByb2JhYmx5IHdoYXQgSSBjYXJlIGFib3V0IG1vcmUuIApPciBzbyBpdCBhbHdheXMgc2VlbXMuIApUaGUgZHJ1ZyBicm9rZXIgd2hvIHNxdWlyZWQgdGhlIG9mZmljZXJzIHRvIHRoZSBhaXJwb3J0IHRvIHBpY2sgdXAgdGhlIGR1ZmZlbCBiYWdzIHdhcyBhbiBhZ2VudC4gU28gd2FzIHRoZSBkcnVnIGRlYWxlciB3aG8gc3R1ZmZlZCB0aGUgYmFncyBpbnRvIGhpcyBNZXJjZWRlcyBCZW56LiBBdHRvcm5leSBQYXRyaWNrIEouIEZpdHpnZXJhbGQgc2FpZCBoZSB3YXMgZGlzbWF5ZWQgdG8gZmluZCB0aGF0IHNvIG1hbnkgbGF3IGVuZm9yY2VtZW50IG9mZmljZXJzIGhhZCAic29sZCBvdXQgdGhlaXIgYmFkZ2UuICIKQXMgaXQgdHVybnMgb3V0IHZpbGxhaW4gaGFzIDk4IGFuZCBub3QgYSBmbHVzaCBhbnl3YXkgYmVjYXVzZSBoZSBoYXMgbm8gaWRlYSB3aGF0IGhlIGRvaW5nLCBidXQgZXZlbiB0aGVuIGl0IG5vdCB0aGUgc2hvcnQgdGVybSByZXN1bHRzIHRoYXQgbWF0dGVyIGJ1dCB0aGUgcmVhc29uaW5nIGJlaGluZCB5b3VyIGFjdGlvbnMuVHVybiBzdWNrcywgcml2ZXIgZXZlbiB3b3JzZSwgYW5kIHlvdSBzdGlsbCAzYmFycmVsZWQgeW91ciB3aG9sZSBzdGFjayBpbiBuZXZlciBjb25zaWRlcmluZyB5b3UgY291bGQgYmUgYmVhdCwgd2l0aCB0aGUgbGFzdCBiYXJyZWwgYmVpbmcgZG91YmxlIHBvdC4gVGhhdCB2ZXJycnJyeSBzcGV3eS5JcyBpdCBiZWNhdXNlIEkgYW0gaW4gZmlyc3QgcG9zaXRpb24gdGhhdCBhIGxlYWQgb3V0IGlzIGJhZCBvbiB0aGUgZmxvcD8/IFNheSBpZiBpbSBpbiBsYXN0IHBvc2l0aW9uIGFuZCBldmVyeWJvZHkgY2hlY2tzIHRoZW4gd291bGQgYSBsZWFkIG91dCBiZSBiYWQuIApJdCB0d2lzdGVkLi4gClRoZSBmb3VydGggb25saW5lIHBva2VyIGdhbWUgaW4gUGFjaWZpYyBQb2tlciBpcyBUZXhhcyBIb2xkIEVtLiBJdCBpcyBwbGF5ZWQgd2l0aCB0aGUgc3RhbmRhcmQgNTIgZGVjayBjYXJkIGFuZCAyIHVwIHRvIGEgbWF4aW11bSBvZiAxMSBwbGF5ZXJzIGNhbiBwbGF5IGl0LiAKU2Vjb25kOiB0aGUgZW1vdGlvbmFsIGNvbnRyb2wgaXQgdGFrZXMgdG8gYmVhdCBpdCBjb25zaXN0ZW50bHkgb3ZlciB0aW1lLiBGaWdodGluZyB0aGUgdXJnZSB0byBnYW1ibGUuIEhhdmluZyB0aGUgZHJpdmUgdG8gZ28gc2l0IHRoZXJlIGF0IGEgdGFibGUgZm9yIGhvdXJzIGFuZCBob3VycyBhIHdlZWsgd2l0aG91dCBnZXR0aW5nIGJvcmVkLCB0aWx0ZWQsIHN0cmVzc2VkLCBldGMuIAo2IHBvaW50cyAgc3VibWl0dGVkIDEzIGhvdXJzIGFnb01ha2Ugc3VyZSB5b3Uga2VlcCBhIGhlYWx0aHkgcmVsYXRpb25zaGlwIHdpdGggeW91ciBsYW5kbG9yZCwgSSBrbm93IGl0IGlzIGEgYnVzaW5lc3MgcmVsYXRpb25zaGlwIGFuZCB0aGF0IHRoZSBjdXN0b21lciBpcyBzdXBwb3NlIHRvIGJlIGtpbmcuIEJ1dCB0aGV5IGNhbiBtYWtlIGxpZmUgaG9ycmlibGUgZm9yIHRlbmFudHMgYW5kIHRoZXkgb2Z0ZW4gZG8uIFRoZXkgY2FuIGJlIHNwaXRlZnVsIGFuZCBsZWdhbGx5IHlvdSBjYW4gbm90IGRvIG11Y2ggYWJvdXQgaXQsIEkgaGF2ZSBoZWFyZCBtYW55IGhvcnJvciBzdG9yaWVzIHdoZW4gdGhlIHJlbGF0aW9uc2hpcCBpcyBub3QgdGhlcmUuSWYgdGhlIGludGVybmV0IHBhcnQgb2YgeW91ciBsZWFzZSwgeW91IGNhbiB0YWxrIGFib3V0IHNoYXJlZCBjb3N0LiAKT25saW5lcG9rZXIgb25saW5lZ2FtZXMgZ2FtZXMKIldlIG5lZWQgdG8gbWFrZSBpdCBoYXJkZXIgZm9yIHRoZXNlIGJ1c2luZXNzZXMgdG8ganVzdCBwb3AgdXAgYW5kIGdvIGRvd24gYW5kIHBvcCB1cCwiIHNhaWQgU2hlYSBSaG9kZXMsIGRpcmVjdG9yIG9mIHRoZSBWaWxsYW5vdmEgTGF3IEluc3RpdHV0ZSB0byBBZGRyZXNzIENvbW1lcmNpYWwgU2V4dWFsIEV4cGxvaXRhdGlvbiwgd2hvbSBHcmVlbmxlZSdzIG9mZmljZSBjb25zdWx0ZWQuCkhlIGluc2lzdGVkIHRoYXQgaXQgd2FzIElNUE9TU0lCTEUgdG8gc2F5IHdpdGggYW55IGNvbmZpZGVuY2Ugd2hhdCB0aGUgZ2VuZXJhbCByYW5nZSBtaWdodCBiZS4gClByb2dyYW1taW5nIGlzIGV4cGVjdGVkIHRvIGJlIGFib3V0IGEgdGhpcmQgb2YgdGhlIGV4YW0uIApMZSBDb2RlIENpdmlsIHBydm9pdCBsZSBjYXMgbyBsZSBkaXNwYXJ1IHJhcHBhcmF0IHBvc3RyaWV1cmVtZW50IGF1IGp1Z2VtZW50IChhcnQuIApTYW1lIGJldHRpbmcgcnVsZXMgZm9yIGZyZWUgcG9rZXIgYW5kIHRoZSBvdGhlciB2YXJpYW50cyBvZiB0aGUgcG9rZXIgZ2FtZSBleGlzdHMuIEp1c3QgbWFrZSBzdXJlIHRoYXQgYmVmb3JlIHlvdSBnbyBwbGF5IGZyZWUgcG9rZXIsIHlvdSBhcmUgdmVyeSBhd2FyZSBvZiB0aGVzZSBydWxlcy4KR28gZ2V0IGFuIFJWLiBHbyB0byBDb3N0Y28gYW5kIHdoYXRldmVyIG90aGVyIHBsYWNlcyBJIG5lZWQgdG8gZ28gdG8uIFRyYXZlbCBzb3V0aCBib3VuZCB0byBzb21lcGxhY2Ugc2FmZSBpc2ggbGVhdmluZyBhIGRlZmluYWJsZSB0cmFpbCBhbG9uZyB0aGUgd2F5IGxvb2tpbmcgZm9yIHN1cnZpdm9ycy4gQnVpbGQgYSBjb2xvbnkgd2hlcmUgSSBtYXkgcm9hbS4KUmVkc294cnVsZWZvcmV2ZXIgIDEgcG9pbnQgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KVGhhdCdzIHRoZSB0YWtlIGZyb20gc2V2ZXJhbCBsZWFkaW5nIGRpZ2l0YWwgcG9saXRpY2FsIGFkdmVydGlzZXJzICAgaW5jbHVkaW5nIG9uZSBEZW1vY3JhdCBhbmQgdGhlIG90aGVyIHR3byBSZXB1YmxpY2FuICAgd2hvIHByaXZhdGVseSBzYXkgdGhleSd2ZSBhbHJlYWR5IGJlZW4gZmluZGluZyBhbmQgZXhwbG9pdGluZyBsb29waG9sZXMgaW4gRmFjZWJvb2sncyBuZXcgcHJpdmFjeSBydWxlcyBhcyB0aGV5IGdlYXIgdXAgZm9yIHRoZSBVUyBtaWR0ZXJtIGVsZWN0aW9ucy4KVW5mb3J0dW5hdGVseSwgdGhlIHdlbGNvbWluZyB3b3JraW5nIGVudmlyb25tZW50IGFuZCBlcXVhbCBnZW5kZXIgcmF0aW8gYXQgVGlwVGFwIExhYiBhcmUgdGhlIGV4Y2VwdGlvbiwgcmF0aGVyIHRoYW4gdGhlIHJ1bGUuIApKYWNrIGFuZCBBbGJlcnQgKHRoZSB3aGl0ZSBNYWx0ZXNlIGFuZCB1bmRlcmJyaWdodCBQdWcpIGFyZSwgb24gdGhlIHdob2xlLCBwZXJ0dXJiZWQuIE5vIG9uZSBoYXMgY2xlYXJseSBleHBsYWluZWQgd2h5LCBidXQgdGhlIHBvbGthIGRvdCBzdWl0Y2FzZXMga2VlcCBjb21pbmcgb3V0IG9mIHRoZSBkcmVhZGVkIGxlYXZpbmcgY2xvc2V0LCBNb20gaXMgYXdheSB3YXkgdG9vIG11Y2gsIGFuZCBEYWQgaXMgbmV2ZXIgYXJvdW5kIHRvIHRoZSBwb2ludCBvZiBiZWluZyBmb3Jnb3R0ZW4uIEZyb20gdGhlIHNtYWxsaXNoIGNhbmluZSBwZXJzcGVjdGl2ZSwgNiBpbmNoZXMgYWJvdmUgdGhlIGdyb3VuZCBhbmQgbWVhc3VyZWQgaW4gZG9nIHllYXJzLCAyMDEyIGhhcyBiZWVuIGEgbmVydmUgcmFja2luZyBpbnRlcm1pbmFibGUgbWVzcy4gClRlcnRpYXJ5b2NlbG90ICA0IHBvaW50cyAgc3VibWl0dGVkIDggZGF5cyBhZ28KVGhlIE5ldyBNdXNpYyBNYWNoaW5lCkxhIHN0YXRpb24gZGUgbGEgcnVlIFNhaW50IFZpbmNlbnQgZGUgUGF1bCBhIHQgbmV1dHJhbGlzZSBpbCB5IGEgcGV1LiBNYWlzIHZvdXMgbCdhdmV6IHNhbnMgZG91dGUgY29uc3RhdCwgZWxsZSBuJ2VzdCBwYXMgbGEgc2V1bGUgIHRyZSBkZ3JhZGUuIElsIHkgYSBjZWxsZXMgZGUgbGEgcnVlIEd1eSBQYXRpbiwgZGUgbGEgcnVlIGRlIFNvZmlhICh2b2lyIHBob3RvIGNpIGRlc3NvdXMpIHBvdXIgbidlbiBjaXRlciBxdWUgZGV1eC4gClRpbWUgYmVpbmcgb2YgdGhlIGVzc2VuY2UsIEF1c3RpbiwgYSBzb2NpYWwgd29ya2VyIHR1cm5lZCBvcmFsIGhpc3RvcmlhbiwgcXVpY2tseSBzZXQgdXAgdmlkZW8gYW5kIGF1ZGlvIGludGVydmlld3Mgd2l0aCBhcyBtYW55IG1lbWJlcnMgYXMgc2hlIGNvdWxkIChvbmUgZGllZCBiZWZvcmUgc2hlIGNvdWxkIGludGVydmlldyBoaW0pLiAKVEhFIEluZGlnbyBTaGlyZSBoYXMgam9pbmVkIGEgc3RhdGV3aWRlIGNhbXBhaWduIGluIGl0cyBkZXRlcm1pbmF0aW9uIHRvIGtlZXAgaXRzIGhvbWUgcGF0Y2ggcG9rZXIgbWFjaGluZSBmcmVlLiBNYXlvciBCZXJuYXJkIEdhZmZuZXkgc2FpZCBoYXZpbmcgbm8gcG9raWVzIHByb3RlY3RlZCB0aGUgY29tbXVuaXR5IGZyb20gdGhlIG5lZ2F0aXZlcyBvZiBnYW1ibGluZyBzbyB0aGUgc2hpcmUgaGFkIGpvaW5lZCAzMCBWaWN0b3JpYW4gY291bmNpbHMgaW4gdGhlIEVub3VnaCBQb2tpZXMgY2FtcGFpZ24uICJMYXJnZSBhbW91bnRzIG9mIG1vbmV5IGFyZSBsb3N0IGV2ZXJ5IGRheSBnYW1ibGluZyBvbiBwb2tlciBtYWNoaW5lcywiIGhlIHNhaWQuIApUaGVuIHdoZW4gaXQgY2FtZSB0aW1lIHRvIHNob290IHRoZSBzY3JhcGJvb2sgaXQgd2FzIGhhbmRlZCB0byBhbiBvbiBzZXQgcHJvcHMgYXNzaXN0YW50IHdobyBoYWQgbm90aGluZyB0byBkbyB3aXRoIGl0IGNyZWF0aW9uLiBJIGd1ZXNzaW5nIG5vYm9keSByZWFkIHRoZSBhcnRpY2xlcyBjYXJlZnVsbHkgYmVjYXVzZSBhcyB0aGUgYXVkaWVuY2Ugd2Ugd2VyZSBvbmx5IHN1cHBvc2VkIHRvIGhhdmUgZW5vdWdoIHRpbWUgdG8gcmVhZCB0aGUgaGVhZGxpbmVzLiBJdCBqdXN0IGEgbWlzdGFrZSBtYWRlIGJ5IGEgdGlyZWQgcHJvcCBtYWtlciB3aG8gd2FzIHRyeWluZyB0byB3cml0ZSB0aGUgc2FtZSB0aGluZyAyMCBkaWZmZXJlbnQgd2F5cy4uIApZb3Ugc2hvdyB1cCwgeW91IHNheSB5b3VyIHdvcmRzLCBhbmQgeW91IGxlYXZlLiBZZWFoIHRoaXMgc3R1ZmYgbWlnaHQgb2YgaGFkIHBvd2VyIGJ1dCBpdCBiZWVuIGNoYW50ZWQgYmVmb3JlIHNvIG1hbnkgdGltZXMuIApEdSB3aXJmc3QgZGVpbmUgS2FydGVuIHZlcmRlY2t0IGF1ZiBkZW4gVGlzY2ggdW5kIGJpc3QgZnIgZGllc2UgUnVuZGUgZmVydGlnLiAKVmlkZW1tZW50LCBjZSBib2d1ZSBkZSBsYSBwc3ljaCBodW1haW5lIHBlcm1ldCBhdXggZW5maXJvdWFwZXVycyBkJ2FsbGVyICBsYSBwY2hlLiAKSW4gc29tZSBzdGF0ZXMsIGhvd2V2ZXIsIGFueW9uZSB3aG8gYmVsaWV2ZXMgY2hpbGQgYWJ1c2UgaXMgdGFraW5nIHBsYWNlIG11c3QgcmVwb3J0IGl0LiBUaGF0IHVzdWFsbHkgaW5jbHVkZXMgc2hhcmluZyBpbXBvcnRhbnQgZGV0YWlscyBhYm91dCB0aGUgaW5jaWRlbnQsIGxpa2UgdGhlIG5hbWVzIG9mIHRoZSB2aWN0aW0gYW5kIHBlcnBldHJhdG9yLiBGYWlsdXJlIHRvIHJlcG9ydCBhbiBpbmNpZGVuY2Ugb2YgY2hpbGQgYWJ1c2UgaXMgYSBtaXNkZW1lYW5vciBvZmZlbnNlIGluIG1vc3Qgc3RhdGVzLiIgMSBwb2ludCAgc3VibWl0dGVkIDE0IGRheXMgYWdvVG9uZSBpcyB0aGUgbGluZ3Vpc3RpYyBhc3BlY3Qgb2YgbGFuZ3VhZ2UuIApUaGUgZmlyc3QgZGF1Z2h0ZXIgYW5kIFdoaXRlIEhvdXNlIGFkdmlzZXIgaGFzIGNvbWUgdW5kZXIgZmlyZSBmb2xsb3dpbmcgYSBDTk4gcmVwb3J0IHN1Z2dlc3RpbmcgUHJlc2lkZW50IERvbmFsZCBUcnVtcCBwcmVzc3VyZWQgZm9ybWVyIENoaWVmIG9mIFN0YWZmIEpvaG4gS2VsbHkgYW5kIFdoaXRlIEhvdXNlIENvdW5zZWwgRG9uIE1jR2FobiBpbnRvIGdpdmluZyBJdmFua2EgYSB0b3Agc2VjcmV0IGxldmVsIHNlY3VyaXR5IGNsZWFyYW5jZSwgZGVzcGl0ZSB0aGVpciBvYmplY3Rpb25zLgpTb3kgRml2ZSBGYWN0cyBBYm91dCBTb3kgWW91IE11c3QgS25vdwpPdmVydmlldyBmb3IgU3VwZXMKTm8gQ2hhcmdlcyBGaWxlZCBJbiBGYXRhbCBNb3RvcmN5Y2xlIEFjY2lkZW50CkFueSB0aW1lIGJ1YiBtYWRlIHN1Y2ggbXVjaCBhcyBhIHBlZXAgZnJvbSBkYXkgb25lICJTaGUgcHJvYmFibHkgdGVldGhpbmcuIgoiTXkgaG9iYnkgaGFzIG5vdyBiZWNvbWUgbXkgcmVhbCBwYXNzaW9uLCBhbmQgdGhpcyBpcyBhcyBiaWcgYXMgaXQgZ2V0cywiIGhlIHNhaWQuIApTdWNjZXNzIHRha2VzIHRpbWUKU2FydW1hbiB0b2xkIGhpbSB0byBmaW5kIEdhbmRhbGYgaW4gdGhlIFNoaXJlIChSYWRhZ2FzdCBkaWRuIGV2ZW4ga25vdyB0aGUgbGFuZHMgaW4gdGhhdCBhcmVhKSBhbmQgdG8gdGVsbCBoaW0gdGhhdCB0aGUgTmF6Z3VsIHdlIGFicm9hZC4gCkJ1dCBzZW1hbnRpY2FsbHkgc3BlYWtpbmcsIHRoZSBtb2Rlcm4gZXJhIGlzIGNvbnNpZGVyZWQgbmVvbGliZXJhbCwgYW5kIHRoZSByaGV0b3JpYyBvZiBwZW9wbGUgbGlrZSBUcnVtcCBhbmQgRm9yZCBmaXQgcmlnaHQgaW50byB0aGF0IG5hcnJhdGl2ZSwgY29udHJhZGljdG9yeSBwb2xpY2llcyBub3R3aXRoc3RhbmRpbmcuIAoiSWYgeW91IGtub3cgYWJvdXQgYWxsIHRoaXMsIHdoeSBhcmUgeW91IG92ZXIgaGVyZSAoYXQgdGhlIHBva2VyIGhvdXNlKSBtZXNzaW5nIHdpdGggdGhpcyBvdGhlciBzdHVmZiB3aGVuIHlvdSBvdWdodCB0byBiZSBvdmVyIGhlcmU/IiBoZSBzYWlkLiAiTG9vayBhdCB0aGUgY3JhY2sgaG91c2VzLiAuIFBlb3BsZSB3aWxsIGJlIGhhbmdpbmcgb3V0IChpbiB0aGUgbmlnaHQpIGRvaW5nIGFsbCBraW5kcyBvZiB0aGluZ3Mgd2Ugb3VnaHQgdG8gYmUgZm9jdXNlZCBvbi4iCllvdSBnZXQgdGhlIHBvaW50LiBJIGhhdmUgYSBzbWFsbCBzdG9jayBwaWxlIG9mIHRoZW0uIApJZiBhIEdlcm1hbiBjYXIgY29udGFpbnMgUG9saXNoIGNvbXBvbmVudHMgaXQgZG9lc24gbWF0dGVyLi4gCkknbGwgbmV2ZXIgb3duIGEgcGlsbG93IG9yIG1hdHRyZXNzIG1hZGUgb2YgYW55IG90aGVyIG1hdGVyaWFsLiBJJ20gU08gZ2xhZCB0aGF0IGxhdGV4IG1hdHRyZXNzZXMgaGF2ZSBmaW5hbGx5IGJlY29tZSBhZmZvcmRhYmxlIGZvciBqdXN0IGFib3V0IGFueW9uZS4KSSdtIGluZXhwZXJpZW5jZWQgaW4gR3VpZGVNTC4gU3VnZ2VzdGlvbnMgYXMgdG8gaG93IHRvIGJyZWFrIGl0IHVwIHRvIG1ha2UgaXQgbW9yZSByZWFkYWJsZSB3b3VsZCBhbHNvIGJlIHdlbGNvbWVkLiAKVGhhdCB0cnVlIHJlZ2FyZGxlc3Mgb2Ygd2hldGhlciBpdCBhIGdpcmwgb3IgYSBib3kuLiAKVGhlIHJlYWxpdHkgaXMgdGhhdCBpZiB0aGV5IHdlcmUgdG8gZ2V0IG1hcnJpZWQgaW4gTW9yb2NjbywgaXQgY291bGQgYmUgd3JpdHRlbiBpbiB0aGUgbmlrYWggKG1hcnJpYWdlIGNvbnRyYWN0KSB0aGF0IGhlIGNvdWxkIGhhdmUgdXAgdG8gNCB3aXZlcy4gClRoZSByZXNwZWN0aXZlIG1pbGl0YXJpZXMgaW4gdGhlIFVTIGFuZCBQYWtpc3RhbiBzaGFyZSBhIGNvbW1vbiBjb250ZW1wdCBmb3IgdGhlIHNsb3RoIG9mIGNpdmlsaWFuIGRlbGliZXJhdGlvbiBhbmQgYXJndW1lbnRhdGlvbi4gVGhleSBzaGFyZSBhIGNvbW1vbiBjb250ZW1wdCBmb3IgdGhlIHBvcHVsYXJpdHkgb2YgYmxvb2QgYW5kIGd1dHMgcG9saXRpY2lhbnMsIGV2ZW4gaWYsIGluIHRoZSBjYXNlIG9mIHRoZSBVbml0ZWQgU3RhdGVzLCB0aGF0IHBvcHVsYXJpdHkgaXMgYSBwcm9kdWN0IG9mIGEgdHJhbnNmb3JtYXRpdmUgZWxlY3Rpb24uIEFuZCBldmVuIGlmLCBpbiB0aGUgY2FzZSBvZiBQYWtpc3RhbiwgdGhhdCBwb3B1bGFyaXR5IG9ubHkgaW5jcmVhc2VzIGV2ZXJ5IHRpbWUgdGhlIG1pbGl0YXJ5IGRvZXMgc29tZXRoaW5nIHRvIG1ha2UgaXQgZGVjcmVhc2UuIFRoZXkgYWxzbyBzaGFyZSBhIGNvbW1vbiByZXNwZWN0IGZvciB0aGUgaW5zdGl0dXRpb25zIHRoZXkgcmVwcmVzZW50LCB0aGUgc2FjcmlmaWNlcyB0aGVpciBzb2xkaWVycyBtYWtlIG9uIHRoZSBiYXR0bGVmaWVsZCBhbmQgdGhlIGxvdmUgZm9yIGNvdW50cnkgYW5kIGZsYWcgdGhhdCBlYWNoIG1pbGl0YXJ5IHN0YW5kcyBmb3IuCiJBbGwgbXkgaG9wZSBpcyB0aGUgY2hpbGRyZW4sIiBoZSB3cm90ZSB0byBoaXMgbW90aGVyIGluIFN3aXR6ZXJsYW5kLiAiSSBjbGluZyB0byB0aGUgY29udmljdGlvbiB0aGF0IHRoZXkgYXJlIGFsaXZlIGFuZCB0aGF0IHdlIHdpbGwgYmUgdG9nZXRoZXIgYWdhaW4uIi4gCkFsc28sIGJlY2F1c2UgSSBhIHJhbmsgYW1hdGV1ciwgSSBkb24ga25vdyBob3cgdGhlIGhlbGwgdG8gZ2V0IGFuIGlkZWEgZm9yIGFuaW1hdGlvbiB0byB0aGUgcmlnaHQgcGVvcGxlICh3aGVyZWFzIEkgaGF2ZSBhbiBpZGVhIG9mIGhvdyB0byBwaXRjaCBhIGxpdmUgbW92aWUvc2hvdykuLiAKVGhpcyBraW5kIG9mICJleHRvcnRpb24iIG9uIGEgam9pbnQgdmVudHVyZSBpcyB2ZXJ5IGJhZCBvcHRpY3MuIEhvdyBkbyB5b3UgaW52aXRlIG90aGVyIGNvdW50cmllcyB0byB3b3JrIHRvZ2V0aGVyIG9uIGEgcHJvZ3JhbSBvbmx5IHRvIGhvbGQgdGhlIHJlc3VsdHMgb2YgdGhlIHByb2dyYW0gaG9zdGFnZSBmcm9tIHRoZW0gYmVjYXVzZSB0aGV5IGFyZW4gZG9pbmcgd2hhdCB5b3Ugd2FudGVkIG9uIGFsbCB0b2dldGhlciBkaWZmZXJlbnQgaXNzdWU/IFdoeSB3b3VsZCBhbnlib2R5IHdhbnQgdG8gdHJ1c3QgdGhhdCBjb3VudHJ5IGFmdGVyIHRoYXQ/LiAKQmVjYXVzZSBpdCdzIHNvY2lhbGx5IGFjY2VwdGFibGUgdG8gdHJlYXQgd2hpdGUgcGVvcGxlIGFzIGV2aWwgY2F1c2Ugb2YgdGhlIGFjdGlvbnMgb2Ygd2hpdGUgYW5jZXN0b3JzLiAKRURJVDoganVzdCB3YW50ZWQgdG8gdGhyb3cgdGhpcyBpbiAgdGhpcyB3YXMgYSBmdW5lcmFsIHdpdGggbWlsaXRhcnkgaG9ub3JzIChBaXIgRm9yY2UpLCBhbmQgdGhleSBkaWQgdGhlIGd1biBzYWx1dGUgYXQgdGhlIGdyYXZlc2l0ZS4gSSBkb24gcmVtZW1iZXIgaG93IG1hbnkgdGltZXMgdGhleSBmaXJlLCBidXQgYXQgZWFjaCBndW5zaG90LCBzaGUgd291bGQgbGl0ZXJhbGx5IHNocmllayBhbmQgY29sbGFwc2UgaW50byB0aGUgYXJtcyBvZiBlaXRoZXIgb2YgdGhlIHNpc3RlcnMgc3RhbmRpbmcgbmV4dCB0byBoZXIuIEkgZG8gcmVjYWxsIGF0IHRoZSB2ZXJ5IGVuZCwgdGhlIHlvdW5nZXN0IHNpc3RlciB3YXMgc2ljayBvZiB0aGF0IHNoaXQgYW5kIGp1c3QgbGV0IGhlciBmYWxsIG9uIHRoZSBncm91bmQuIApUaGUgc291bmQgb2YgQ2xheSBQb2tlciBDaGlwcyBzaHVmZmxpbmcgaXMgdGhlIG9ubHkgYXVkaWJsZSBub2lzZSBhdCB0aGUgbW9tZW50LiAKQmFsbCBwb2ludHMgdG8gYSBncm93aW5nIGludGVyZXN0IGluIHRoZSBjaXJjdWxhciBlY29ub215LCBpbiB3aGljaCBtYW51ZmFjdHVyaW5nIGludm9sdmVzIHJlY3ljbGVkIG1hdGVyaWFscyBhbmQgd2FzdGUgaXMgZWxpbWluYXRlZCBvciByZXVzZWQgZWxzZXdoZXJlLiBTaGUgcG9pbnRzIHRvIG9uZSBtZW1iZXIgY29tcGFueSB0aGF0IHByb2R1Y2VzIGEgbG90IG9mIGNvcmsgd2FzdGUsIGFuZCBlZmZvcnRzIGJ5IHRoZSBuZXR3b3JrIHRvIGNvbm5lY3QgaXQgdG8gb3RoZXIgb3JnYW5pemF0aW9ucyB0aGF0IGdyaW5kIGNvcmsgdG8gbWFrZSBjb3JrIGZsb29ycy4uIApXaGVuIHBsYXllcnMgbWFrZSBtaXN0YWtlcyBiZWNhdXNlIHNvbWV0aGluZyB1cHNldHMgdGhlbSBlbW90aW9uYWxseSwgaXQgaXMgY2FsbGVkIGEgInRpbHQiIG9yICJiZWluZyBvbiBhIHRpbHQuIiBBbiBleGFtcGxlIGlzIGEgcGxheWVyIHdobyBpcyBhIGh1Z2UgZmF2b3JpdGUgaW4gYSBoYW5kIGJ1dCBsb3NlcyB0byBhbiBvcHBvbmVudCB3aG8gaGl0cyBhIG1pcmFjbGUgY2FyZCBvbiB0aGUgcml2ZXIgKG9mdGVuIGNhbGxlZCBhICJiYWQgYmVhdCIpLiAKVGhpcyBxdWVzdGlvbiBpcyBhIGxpdHRsZSBiaXQgdHJpY2t5LiBJbiBhIGRlY2sgb2YgNTIgY2FyZHMsIG9uZSBmb3VydGggb3IgMTMgY2FyZHMgYXJlIHNwYWRlcy4gU28sIHRoZSBjaGFuY2Ugb2YgZHJhd2luZyBvbmUgc3BhZGUgPSAxMy81MiBvciAwLjI1LiBJZiBhIHNlY29uZCBjYXJkIGRyYXduLCB0aGVyZSdzIG9uZSBsZXNzIHNwYWRlIGluIHRoZSBkZWNrLCBzbyB0aGUgcHJvYmFiaWxpdHkgb24gdGhlIHNlY29uZCBkcmF3IGlzIDEyLzUxLiBJbiBxdWFsaXR5IGNvbnRyb2wsIGl0IGlzIHZlcnkgY29tbW9uIHRvIHNhbXBsZSB3aXRob3V0IHJlcGxhY2VtZW50IGFzIGJhZCBwYXJ0cyBhcmUgZGlzY2FyZGVkLiBJZiB3ZSBjb25zaWRlciBkcmF3aW5nIG9uZSBjYXJkLCBwdXR0aW5nIGl0IGJhY2sgaW4gdGhlIGRlY2ssIHJlZ2FyZGxlc3MgaWYgaXQgaXMgYSBzcGFkZSBvciBub3QsIHRoZW4gcmVzaHVmZmxpbmcgdGhlIGRlY2sgYW5kIGRyYXdpbmcgdGhlIHNlY29uZCBjYXJkLCB0aGUgcHJvYmFiaWxpdHkgaXMgMC4yNSB4IDAuMjUgPSAwLjA2MjUsIGEgYml0IGhpZ2hlciB3aXRoIHJlcGxhY2VtZW50LiBUaGlzIGlzIHRoZSBzYW1lIGFzIDEvNCB4IDEvNCA9IDEvOCBvciBzYXlpbmcgdGhlIG9kZHMgYXJlIDE6OC4gSSd2ZSBpbmNsdWRlZCBhIGNvdXBsZSBvZiBsaW5rcyBvbiBzYW1wbGluZyB3aXRoIHJlcGxhY2VtZW50IGFuZCB3aXRob3V0IHJlcGxhY2VtZW50LiBHZW5lcmFsbHksIGZvciBjYWxjdWxhdGluZyBzdGF0aXN0aWNzLCB3ZSBhdHRlbXB0IHRvIGdldCBpbmRlcGVuZGVudCByZXN1bHRzLiBUaGUgZHJhdyBvZiBvbmUgY2FyZCwgd2lsbCByZWR1Y2UgdGhlIHBvcHVsYXRpb24sIGFuZCBjaGFuZ2UgdGhlIHByb2JhYmlsaXRpZXMgb24gdGhlIHNlY29uZCBkcmF3LCBzbyBzYW1wbGluZyB3aXRob3V0IHJlcGxhY2VtZW50IGlzIG5vdCBpbmRlcGVuZGVudCBzYW1wbGluZy4gU2VlIHJlbGF0ZWQgbGlua3MuIChGdWxsIEFuc3dlcikKSW4gd2hpY2ggcHJvdmluY2U/IFBlbnNpb25zIG1pZ2h0IGFsc28gZGlmZmVyIGJldHdlZW4gZGlmZmVyZW50IGFyZWFzIHdpdGhpbiBhIHByb3ZpbmNlLCBzb21lIHZpbGxhZ2VzIG1pZ2h0IGJlIG1vcmUgZ2VuZXJvdXMgdGhhbiBvdGhlcnMuIApEb24ndCBsaWUgU3VyZSwgbHlpbmcgbWlnaHQgZ2V0IHlvdSBhIGZldyBzYWxlcyBidXQgaXQgd2lsbCBhbHNvIGV2ZW50dWFsbHkgZ2l2ZSB0aGF0IGlzIGFwcHJvdmVkIGJ5IHRoZSBGREEgY2FsbGVkIHRoZSBSZWxpZWZCYW5kIC4gClllcy4gClZpc2l0ZWQgSGVybWFuIE1pbGxlciBhIGZldyB5ZWFycyBhZ28sIGFuZCB0aGV5IGRpZCB1bmRlcnN0YW5kLiAKTWFzc2FnZSBUaGVyYXB5IGFuZCBTdXBpbmUgSHlwb3RlbnNpdmUgU3luZHJvbWUgICBVc2UgYSBtb2RpZmllZCBzdXBpbmUgcG9zaXRpb24gZnJvbSBhYm91dCB3ZWVrIDIyIHRvIHByZXZlbnQgc3VwaW5lIGh5cG90ZW5zaXZlIHN5bmRyb21lLiBQbGFjZSBhIHNtYWxsIGN1c2hpb24gYmVuZWF0aCBoZXIgcmlnaHQgaGlwIHRvIHRpbHQgaGVyIGJvZHkgdG93YXJkIHRoZSBsZWZ0LiBUaGlzIGVsZXZhdGlvbiBvZiB0aGUgcmlnaHQgaGlwIG1vdmVzIHRoZSB1dGVydXMgb2ZmIHRoZSBhYmRvbWluYWwgYmxvb2QgdmVzc2Vscy4gVGhpcyBtb2RpZmljYXRpb24gc2hvdWxkIGFsc28gYmUgdXNlZCBpbiB0aGUgdGhpcmQgdHJpbWVzdGVyIHdoaWxlIHRoZSBwcmVnbmFudCBjbGllbnQgaXMgaW4gdGhlIHN1cGluZSBwb3NpdGlvbi4KSW4gYW4gb2RkbHkgZmFtaWxpYXIgc2VxdWVuY2UsIERlYW4gb2ZmZXJzIGhpcyBzb3VsIGZvciBTYW0ncyBsaWZlIGJhY2ssIGFuZCBkZW1vbmtpbmQgYWdyZWVzIHRvIHJhaXNlIFNhbSBhbmQga2VlcCBEZWFuIGFsaXZlIGZvciBhbm90aGVyIHllYXIsIGFmdGVyIHdhdGNoaW5nIE15IEJsb29keSBWYWxlbnRpbmUgM0QgYW5kIGRldGVybWluaW5nIHRoYXQgYW4gYWN0aW5nIGNhcmVlciBpcyBmb3JldmVyIG91dCBvZiBoaXMgcmVhY2guLiAKVGhleSB3ZXJlIHRoZSBvbmx5IG9uZXMgd2l0aCBsb2NrcyBvbiB0aGVpciBkb29ycy4gU2hlIHdvdWxkIHdlYXIgamV3ZWxlZCBwbHVncyBhbmQgdGVsbCB1cyBhYm91dCBob3cgbXVjaCBpdCB0dXJuZWQgaGVyIG9uIGtub3dpbmcgdGhleSB3ZXJlbiBhd2FyZSwgb3IgdGhleSB3ZXJlIGF3YXJlLCBlY3QuIApQb2tlcjogUnVsZXMgYW5kIHRpcHMgeW91IG5lZWQgdG8ga25vdyBiZWZvcmUgeW91IHBsYXkgcG9rZXIKQnkgbWFraW5nIGV4aGliaXRzIGhhbGYgaHVtYW4sIGhhbGYgc29tZXRoaW5nIGVsc2UsIEJhcm51bSBjb3VsZCBlbmdhZ2UgaGlzIGF1ZGllbmNlIHNlbnNlIG9mIHdvbmRlciBhbmQgYXdlIGFuZCBldmVuLCBzb21ldGltZXMsIG91dHJhZ2Ugb3ZlciB0aGUgb2J2aW91c25lc3Mgb2YgaGlzIGh1bWJ1Zy4gVGhlIGh5YnJpZGl0eSBvZiB0aGVzZSBib2RpZXMsIGEgaHlicmlkaXR5IHRoYXQgd2VyZSBsZXNzb25zIGZyb20gR29kIGJlZm9yZSBCYXJudW0sIG1hZGUgb25sb29rZXJzIGZlZWwgYm90aCBmdWxseSBodW1hbiBhbmQgbGVmdCB0aGVtIHdhbnRpbmcgYW5vdGhlciBsb29rLi4gCk15IHNjaG9vbCByZXBlcnRvaXJlIHdhcyBhbGwgdGhhdCBJIGtuZXcuIApDYWxsLiAKU28gY2hlY2sgdGhlIHJ1bGVzIG9mIHdoYXRldmVyIGtpbmQgeW91IGFyZSBwbGF5aW5nIHRvIGtub3cgaG93IG1hbnkgb2YgdGhlIGNhcmRzIGluIHlvdXIgaGFuZCBuZWVkIHRvIGJlIGNvbWJpbmVkIHdpdGggaG93IG1hbnkgb24gdGhlIHRhYmxlLCBidXQgdGhlIGZvdXIgb2YgYSBzcGVjaWZpYyBudW1iZXIgb3IgbGV0dGVyIHdpbGwgYmUgdGhlIHNhbWUuIFRoZSBBcyBvciA2cyBvciB3aGF0ZXZlciB3aWxsIGJlIGRpZmZlcmVudCBzdWl0cywgYnV0IGFzIGxvbmcgYXMgdGhleSBhbGwgaGF2ZSBBcywgdGhlbiB5b3UncmUgZ29vZC4gClRoZXkgYXJlIHByYWN0aWNhbGx5IGlkZW50aWNhbCwgYW5kIHRoaXMgdHJlbmQgc3RheXMgdHJ1ZSBleGNlcHQgZm9yIGEgZmV3IChhcmd1YWJseSBleHRyZW1lbHkgY29tcGV0aXRpdmUgYWxyZWFkeSkgc3BlY2lhbHRpZXMuIApGb3IgZXhhbXBsZSwgaWYgdGhlIGRvbGxhciBjb2xsYXBzZXMgYW5kIHRoZSBldXJvIGlzIHRoZSBjdXJyZW5jeSBvZiBsZWFzdCB2YWx1YWJsZSBlY29ub215LCBnb2xkIHdpbGwgaG9sZCBhIG1pbmltdW0gdmFsdWUgZXF1aXZhbGVudCB0byB0aGF0IGluIGNvdW50cmllcyB1c2luZyB0aGUgZXVyby4gSWYgeW91IHN0aWxsIGRvIG5vdCB1bmRlcnN0YW5kIHRoZSBmbHVjdHVhdGluZyB2YWx1ZSBvZiBmaWF0IGN1cnJlbmN5IG9yIG90aGVyIGN1cnJlbmNpZXMgc2ltcGx5IGdvb2dsZSAiZXhjaGFuZ2UgcmF0ZXMiLiAKVGhlIG1vc3QgYWN0aXZlIGNvbXBvbmVudCBvZiB0aGUgcHJvZHVjdCBpcyBtZW50aG9sLCB3aGljaCBpcyB0b3hpYyBlc3BlY2lhbGx5IHdoZW4gc3dhbGxvd2VkIGluIGxhcmdlIGFtb3VudHMuIApUaGlzIGdhbWUgcHJvdmlkZWQgZWFjaCBwbGF5ZXIgd2l0aCAzIHRvIDQgY2FyZHMsIGNhcmQgdmFsdWVzLCBhbmQgdGhlIGFiaWxpdHkgdG8gYmV0IGFuZCBibHVmZiB0byBjb21wbGV0ZSBlYWNoIGhhbmQuIFRoZSBGcmVuY2ggZ2FtZSAiUG9ycXVlIiBhbmQgdGhlIEdlcm1hbiBnYW1lICJQb2NoZW4iIHdoZXJlIGJvdGggY3JlYXRlZCBmcm9tIFByaW1lcm8gbW9kaWZpY2F0aW9ucy4gCkkgY2FuIGZpZ2h0IHlvdSBvbiBDaXR5IGxlYWRlcnMsIHRoZXkgYXJlIHNoaXQuIEJ1dCB3ZSBhcmUgdHJ5aW5nIHRvIGNoYW5nZSB0aGF0LiBOdWVjZXMgQ291bnR5IGVuZG9yc2VkIEJldG8gYnkgNTAuMzglIEkgYW0gaG9waW5nIHRoYXQgZmlyZSBzdGFydHMgdG8gdHJhbnNsYXRlIHRvIG91ciBuZXh0IGVsZWN0aW9uLiBJdmUgc2VlbiBteSBjb21tdW5pdHkgYXQgcG9saXRpY2FsIHJhbGxpZXMgdGhleSB3YW50IGNoYW5nZS4gWWVzLCB3ZSBhcmUgc2xvd2VyIHdpdGggY2hhbmdlIHRoYW4gYSBsb3Qgb2YgcGxhY2VzLiBBbmQgeWVzLCB3ZSBhcmUgZmlnaHRpbmcgYW4gdXAgaGlsbCBiYXR0bGUgd2l0aCBDaXR5IENvdW5jaWwgYnV0IGl0cyBhIGZpZ2h0IG5vbmV0aGVsZXNzLiBZb3UgeW91cnNlbGYgc2FpZCB5b3UgbW92ZWQgYXdheSAyMCB5ZWFycyBhZ28uIFBlb3BsZSBsaWtlIHlvdSBhcmUgdGhlIG9uZXMgdGhhdCBhcmUgc3RyaXZpbmcgdG8gbWFrZSBteSBob21ldG93biBzb21ldGhpbmcgdG8gYmUgcHJvdWQgb2YuIEkgc2FsdXRlIHlvdSBhbmQgeW91ciBlZmZvcnRzLiBSZWFsaXN0aWNhbGx5LCB0aGUgbnVtYmVyIG9mIHBlb3BsZSB3aG8gYXJlIGludm9sdmVkIGluIG1ha2luZyBDQyBhIGJldHRlciBwbGFjZSBpcyB2ZXJ5IGxvdy4gVGhhdCBiZWluZyBzYWlkLCB0aGFuayB5b3UgZm9yIHNoYXJpbmcgdGhlIGxpc3Qgb2YgdXBjb21pbmcgZXZlbnRzLgpUaGUgQnVmZmFsbyBCaWxscyBhcmUgb24gdGhlIHNob3J0IGxpc3Qgb2YgdGVhbXMsIHlvdSBoYXZlIHRoZSByaWdodCBvZmZzZWFzb24gdGhleSBtYWtpbmcgdGhlIGp1bXAgdG8gdGhlIHBsYXlvZmZzLiAKUGVyaW9kLiAKQW5kIFBhcmtpbiwgQi4gCllvdSBjYW4gYmUgcmVndWxhcmx5IGxpZnRpbmcgYmFkbHkgYW5kIG5vdCBnZXQgaW5qdXJlZC4gVGhpcyBpcyBzdWNoIGEgZHVtYiBjb21tZW50LiBEb24ndCBzdGFydCBib2R5YnVpbGRpbmcgdW50aWwgeW91IGxlYXJuIHRoaXMgaWRpb3QsIHlvdSdyZSBnb25uYSBnZXQgaW5qdXJlZCBpZiB5b3UgaGF2ZSB0aGlzIG1lbnRhbGl0eS4gCkFib3V0IGhvdyBtYW55IGZhbnMgZG9lcyBMYWR5IEdhZ2EgaGF2ZQpObyBhd2t3YXJkIHNpbGVuY2VzLCBubyBsb29raW5nIGF0IHRoZSB3YXRjaCwgbm8gdGltZSB0byB3b3JyeSBhYm91dCB3aGV0aGVyIHlvdXIgZGF0ZSB3aWxsIGxvb2sgbGlrZSB5b3VyIGZhdm91cml0ZSBmaWxtIHN0YXIgYW5kIHVubGlrZSBidXNlcywgYW5vdGhlciB3aWxsIGJlIHJpZ2h0IGFsb25nIGluIHRlbiBtaW51dGVzISBJZiB0aGVyZSBpcyBhIENocmlzdGlhbiBzcGVlZCBkYXRpbmcgbWF0Y2ggYmV0d2VlbiBhbnkgdHdvIGF0dGVuZGVlcywgdGhlIG9yZ2FuaXplcnMgZm9yd2FyZCB0aGlzIGluZm8gdG8gdGhlIENocmlzdGlhbiBzcGVlZCBkYXRlcnMsIGFsb25nIHdpdGggY29udGFjdCBpbmZvcm1hdGlvbi4gSWYgeW91IHdlcmUgYSBuZXcgaGFtYnVyZ2VyIGF0IE1jRG9uYWxkJ3MsIHlvdSB3b3VsZCBiZSBNY0dvcmdlb3VzLiAKQmVsbGUgd2FzIGJlY2F1c2Ugc2hlIGhhZCB0byBiZSBuYW1lZCBhZnRlciBhIERpc25leSBQcmluY2VzcyBhbmQgdGhhdCBzdWl0ZWQgdGhlIGJlc3QuCkNvdWxkIGhhdmUgYW5vdGhlciBwcmljZSB3YXIuIE1heSBiZSBpbmV2aXRhYmxlLi4gCkhlIGNhbGxzIG1lIGEgYmFieSBtdXJkZXJlciB3aGVuZXZlciBJIGhhdmUgYSB2aWV3IHRoYXQgaGUgZG9lc24gYWdyZWUgd2l0aC4gClRoZSBwYXN0IGZldyB3ZWVrcyBoYXZlIHdpdG5lc3NlZCBkaXZlcnNlIHZvaWNlcyBib3RoIHF1ZXN0aW9uaW5nIGFuZCBzdXBwb3J0aW5nIHRoZSBlZmZpY2FjeSBvZiB0aGUgbW9yZSBzdHJpbmdlbnQgbW9ydGdhZ2UgcmVndWxhdGlvbnMuIFNvbWUgYmVsaWV2ZSB0aGF0IHN0cmVzcyB0ZXN0cyBhcmUgd29ya2luZyBmaW5lLiAKMjAxNy4gClRoaXMganVzdCByZWluZm9yY2VzIHRoZSBjb25jZXB0IHRoYXQgYSBwaWN0dXJlIG91dCBvZiBjb250ZXh0IHdpdGggdGhlIHJpZ2h0IGNhcHRpb24gdG8gc2xhbnQgdGhlIG5hcnJhdGlvbiBpcyBleHRyZW1lbHkgcG93ZXJmdWwuIEFuZCBpbiBvdXIgdGltZSBvZiBidXJzdCBzaG90IHBob3RvcyBvZiBldmVyeSBwb2xpdGljYWwgbW9tZW50LCB0YWtlbiBmcm9tIGV2ZXJ5IHBvc3NpYmxlIGFuZ2xlLiBZb3UgY2FuIHByZXR0eSBtdWNoIGFsd2F5cyBmaW5kIGFuIGltYWdlIHRvIGJhY2sgdXAgeW91ciBhZ2VuZGEuSXQgZnJlYWtzIG1lIG91dCwgaG9uZXN0bHkuIApWb2ljaSB1biBjb21tZW50YWlyZSBxdWUgbSdpbnNwaXJlIGxhIGxlY3R1cmUgZGUgdm90cmUgYmxvZyBxdWUgamUgdHJvdXZlIHRycyByaWNoZSwgaW50cmVzc2FudCBtYWlzIHVuIHBldSB0cm9wIHRvdXJuIHZlcnMgbGUgcGFzcy4gQWcgZGUgMjMgYW5zIGV0IHJldmVuYW50IGQndW4gdG91ciBkdSBtb25kZSxqZSBzb3VoYWl0ZXJhaXMgcXVlIG5vcyByZXNwb25zYWJsZXMgc29pZW50IHBsdXMgaW1hZ2luYXRpZnMgZXQgbW9pbnMgY29uc2VydmF0ZXVycyBuaSBuZ2F0aWZzLiBBIHF1YW5kIGRlcyBhaWRlcyBwb3VyIGxlcyBqZXVuZXMgcXVpIHZldWxlbnQgYWxsZXIgZGUgbCdhdmFudCBldCBjcmVyIGRlcyBwcm9qZXRzLCBkZXMgc3RhcnQgdXBzIHBhciBleGVtcGxlID8gSWwgeSBhIGRlIGwnZXNwYWNlIHF1aSBzZSBsaWJyZSBldCBjZWxhIHBlcm1ldHRyYWl0ICBkZXMgcGVyc29ubmVzIGRlIHNlIHJhbGlzZXIgZXQgZGUgcHJvcG9zZXIgZGVzIHNvbHV0aW9ucyBkZSBwYXJ0YWdlIGRlIGNvbm5haXNzYW5jZSBhZGFwdHMgIHVuIG1vbmRlIHF1aSBjaGFuZ2UsIGNvbW1lIG9uIGxlIHZvaXQgZGFucyBsZSBtb25kZSBlbnRpZXIgZGUgTXVtYmFpICBTYW50aWFnbyBlbiBwYXNzYW50IHBhciBCcmF6emF2aWxsZSBldCBPc2xvLiAKSG93ZXZlciwgYmFzZWQgb24gd2hhdCB5b3Ugc2FpZCwgSSB3b3VsZCBlcnIgb24gdGhlIHNpZGUgb2Ygc2FmZXR5IGdpdmVuIHRoYXQgdGhlIGluc3RydWN0b3IsIHdobyBwcmVzdW1hYmx5IGlzIGZhbWlsaWFyIHdpdGggYm90aCB0aGUgYXJlYSBhbmQgeW91ciBncm91cHMgc2tpbGwgc2V0LCBkb2VzbiB0aGluayBpdCBpcyB0aGUgYmVzdCByb3V0ZSBmb3IgeW91LiAKUmVzb3VyY2VzIGZvciBwbGF5aW5nIGluIG15IGZpcnN0IEhvbGQnZW0gdG91cm5leT8KSSB0aGluayB0aGF0IE11ZWxsZXIgaGFzIGRvbmUgaGlzIGJlc3QgdG8gYXZvaWQgY2F1c2luZyBUcnVtcCB0byBmZWVsIHRoYXQgaGUgb3IgaGlzIGZhbWlseSBhcmUgYWJvdXQgdG8gYmUgaW5kaWN0ZWQuIFlldC4KV2FzaGluZ3RvbiAgIFdlZG5lc2RheTsgTHJzLiBSLiBXLiAKNS4gR2V0IGEgc2FsZXMgdGF4IHBlcm1pdCBhbmQgYSByZXRhaWwgYnVzaW5lc3Mgb3BlcmF0aW9ucyBsaWNlbnNlIGZyb20geW91ciBzdGF0ZSBhbmQvb3IgY2l0eS4gTm90IGFsbCBzdGF0ZXMgY2hhcmdlIHNhbGVzIHRheCBvbiBtYXNzYWdlIHNlcnZpY2VzLCBidXQgeW91J2xsIGhhdmUgdG8gY2hhcmdlIHNhbGVzIHRheCBvbiBhbnkgaXRlbXMgeW91IHNlbGwsIHN1Y2ggYXMgbWFzc2FnZSBvaWxzLCBicnVzaGVzIGFuZCBhcm9tYXRoZXJhcHkuCk1hbnkgb2YgdGhlIGhlYWRzIG9mIGluZHVzdHJ5IGhlcmUgYXQgdGhlIGVuZCBvZiB0aGUgd2FyIGhhZCBiZWVuIGNvbGxhYm9yYXRpbmcgd2l0aCB0aGUgamFwYW5lc2UgdGhlIGVudGlyZSB0aW1lLiBJdmUgc2VlbiBlbm91Z2ggcGltcHMgYXJvdW5kIGhpZ2ggc2Nob29scyBpbiB0aGlzIGNvdW50cnkgdG9kYXkgdG8ga25vdyB0aGF0IG1hbnkgb2YgdGhlIGNvbWZvcnQgd29tZW4gbWlnaHQgbm90IGhhdmUgaGFkIHRvIGJlIGtpZG5hcHBlZCBhbmQgaGF1bGVkIG9mZiBhcyBpcyBjbGFpbWVkLiAKQ29udGludWluZyB0aGUgYWJvdmUgZXhhbXBsZSwgeW91IGNhbGwgdGhlIGJldCBvbiB0aGUgZmxvcCwgaW5jcmVhc2luZyB0aGUgcG90IHRvICQxMC4gCkl0J3MgYSBjb3VudHJ5LiAKVGhpcyBpcyBub3QgbWFsZGFwdGl2ZSB0aGlua2luZy4gCiJUaGV5IGFyZSB0cnlpbmcgdG8gYXBwZWFzZSB0aGUgY2hhcml0aWVzIGJ5IGRvaW5nIHRoaXMsIiBoZSBzYWlkLCB3aXRoIGNoYXJpdGllcyBjYWxsZWQgb24gdG8gcGF5IGEgJDI1MCBmZWUgcGVyIGRheSBmb3IgZXZlbnRzLiAiV2UgbmVlZCB0aGUgY2hhcml0aWVzLCB0aGV5IG5lZWQgdXMuIEV2ZW4gaWYgdGhleSB3ZXJlIHRvIHJ1biBpdCBpbiB0aGUgVkZXIGhhbGxzLCB0aGVyZSdzIHN0aWxsIG92ZXJoZWFkLiAKVXNlIHRoZSBvbGQgYWNjb3VudCwgeW91IGdldCB0aGUgYmVuZWZpdHMgb2Ygc3RpbGwgYmVpbmcgYWJsZSB0byB1c2UgdGhlIGNsYXNzaWMgY2FyZHMgeW91IGhhdmUuIApJIGV2ZW4gd2VudCBhcyBmYXIgYXMgdG8gdW5pbnN0YWxsIGFsbCBvZiB0aGUgYXBwcyBmcm9tIHRoZSBNaSBBcHAgU3RvcmUgKHdlcmUgYWxsIENoaW5lc2UgYW55d2F5IHNvIGl0IGRpZG4gYm90aGVyIG1lKS5UdXJuZWQgb2ZmIFN5bmMsIGxvY2F0aW9uIHNlcnZpY2VzLCBkZXRhY2hlZCBteSBNaSBBY2NvdW50LiBTdGlsbCwgYSBob3JyaWJsZSBpZGxlIGJhdHRlcnkgcGVyZm9ybWFuY2UuSXQgd2FzbiB1bnRpbCBJIGRpc2FibGVkIFdpRmkgKHNvIHRoZXJlIHdhc24gYW55IHBvc3NpYmxlIGludGVybmV0IGFjdGl2aXR5IGF0IGFsbCkgYW5kIGl0IHdhcyBvbmx5IHRoZW4gd2hlbiBJIG5vdGljZWQgb25seSAxIDIlIGlkbGUgYmF0dGVyeSBkcmFpbiBvdmVyIGEgMjQgaG91ciBwZXJpb2QuQWdhaW4sIHRoaXMgd2FzIGEgY29tcGxldGUgaWRsZSBiYXR0ZXJ5IGRyYWluIGlzc3VlLiAKIlBva2VyIG1hY2hpbmUgcmV2ZW51ZSBpcyBkb3duIGEgbGl0dGxlIGJpdCBbMS4zIHBlciBjZW50XSwgYnV0IHRoYXQgaXMgY29uc2lzdGVudCB3aXRoIHRoZSB0cmVuZCBhbmQgaW4gbGluZSB3aXRoIHRoZSBlY29ub215IGFuZCBmaWd1cmVzIHJlbGVhc2VkIGJ5IENsdWJzTlNXIGZvciB0aGUgQ2VudHJhbCBXZXN0LCIgaGUgc2FpZC4KIk1heWJlIHRoZXkgd2lsbCBmaW5kIHdheXMgdG8gbWl0aWdhdGUgdGhlIGNoYW5nZXMgbGF0ZXIsIiB3YXRlcmluZyB0aGVtIGRvd24gYWZ0ZXIgdGhlIGNvbnRyb3ZlcnN5IGJsb3dzIG92ZXIsIHNhaWQgdGhlIERlbW9jcmF0LCB3aG8gYXNrZWQgbm90IHRvIGJlIG5hbWVkLgpNaWNoZWxsZSBCcm93bmxlZSwgb2YgU3ByaW5nIEhpbGwsIFRlbm5lc3NlZSwgc3RhcnRlZCBicnVzaGluZyBpbiB0aGUgc2hvd2VyIHdoaWxlIGluIGNvbGxlZ2UuIApBcyB3ZSBzYXcgdGhlbSBhcHByb2FjaCwgSSBoZWFyZCB0aGUgbGVhZCByZXNlYXJjaGVyIHNheSBmdWNrIHVuZGVyIGhlciBicmVhdGguIApEdWUgdG8gdGhlIHZhZ2FyaWVzIG9mIHRvdXJuYW1lbnQgcG9rZXIsIGluIGEgdHlwaWNhbCBmaWVsZCBldmVuIHRoZSB2ZXJ5IGJlc3QgcGxheWVycyBhcmUgb25seSBhYm91dCB0aHJlZSB0byBmb3VyIHRpbWVzIGFzIGxpa2VseSB0byB3aW4gYXMgdGhlIGF2ZXJhZ2UgcGxheWVyLiBJbiBvdGhlciB3b3JkcywgaW4gYW55IGdpdmVuIHRvdXJuYW1lbnQgd2l0aCA0MDAgZW50cmFudHMsIHRoZSB0b3AgcGxheWVyIGluIHRoZSBmaWVsZCB3b3VsZCBiZSBubyBiZXR0ZXIgdGhhbiBhIDEwMCAxIHNob3QgdG8gd2luIGl0LiBUaGUgb2RkcyBzdHJ1Y3R1cmUgaXMgZXZlbiB0aWdodGVyIGluIGEgc3BlY2lhbCBjYXNlIHN1Y2ggYXMgdGhlIGJpZyBIT1JTRSBldmVudCwgd2hpY2ggaXMgdGhlIG1vc3QgZXhwZW5zaXZlIG9mIHRoZSA1NyB0b3VybmFtZW50cyBhdCB0aGUgV29ybGQgU2VyaWVzIG9mIFBva2VyIGFuZCBjYXJyaWVzIHRoZSByaWNoZXN0IGVudHJ5IGZlZSBmb3IgYW55IHBva2VyIHRvdXJuYW1lbnQgaW4gTm9ydGggQW1lcmljYS4gQmFzZWQgb24gcmVwdXRhdGlvbiBhbmQgcGFzdCBwZXJmb3JtYW5jZSwgd2UnbGwgbWFrZSBQaGlsIEl2ZXkgYSA3NSAxIGZhdm9yaXRlIHRvIHdpbiwgd2l0aCBBbmR5IEJsb2NoICg4MCAxKSwgU2NvdHR5IE5ndXllbiAoOTAgMSksIEZyZWRkeSBEZWViICgxMDAgMSkgYW5kIEVyaWNrIExpbmRncmVuICgxMDAgMSkgcm91bmRpbmcgb3V0IHRoZSB0b3AgZml2ZS4KWW91IGRvbid0IHdlYXIgaGVsbWV0cyBzb2xlbHkgdG8gcHJvdGVjdCB5b3UgaW4gY2FzZSBvZiBhbiBhdXRvIGFjY2lkZW50cy4gQSBoZWxtZXQgY2FuIGFic29sdXRlbHkgcHJvdGVjdCBhIHdlYXJlciBpbnZvbHZlZCBpbiBhIGNhciBjcmFzaC4gCkkgZ2V0IGFsbCBvZiB0aGF0LiBCZWVuIHRoZXJlLCBsaXZlZCBpdCBhdCBhbGwgbGV2ZWxzLCBoYXRlZCBhbGwgb2YgaXQgYW5kIG1vcmUgZHVyaW5nIG15IGRlY2FkZXMgb2Ygc2VydmljZS4gCkxvdmluZyBkYWQgdG8gS2ltIEtpcmt3b29kIGFuZCBoZXIgaHVzYmFuZCBEb3VnIGFuZCBLZWxseSBXZWF2ZXIgYW5kIGhlciBodXNiYW5kIERldiBTaW5naC4gQ2hlcmlzaGVkIFBhcGEgb2YgS2lraSBTaW5naC4gRGVhciBicm90aGVyIG9mIHRoZSBsYXRlIFJvbiBXZWF2ZXIgKHN1cnZpdmluZyBzcG91c2UgQ2Fyb2wpLCBMb3Vpc2UgQmVhdHRpZSBhbmQgaGVyIGh1c2JhbmQgSmFjaywgRGlhbmUgTGV3aXMgYW5kIGhlciBodXNiYW5kIExsb3lkLCBSb3NlbWFyaWUgQnJvb21maWVsZCBhbmQgaGVyIGh1c2JhbmQgUm9uLCBDYXJsIFdlYXZlciBhbmQgaGlzIHdpZmUgQmFyYiwgS2ltIE1jUmFlIGFuZCBoZXIgaHVzYmFuZCBQZXRlIGFuZCBoYWxmIGJyb3RoZXIgUmljayBTaW5kcmV5IGFuZCBoaXMgd2lmZSBGbG8uIApJbmdyYW0gc2FpZCB0aGUgdGVhbSBwbGFucyB0byBoYXZlICJldmVyeWJvZHkgdG9nZXRoZXIiIGJlZm9yZSB0aGUgZ2FtZSBhZ2FpbnN0IHRoZSBNaWFtaSBEb2xwaGlucyBpbiBMb25kb24uCkFzIHRoZSBvdXRjcnkgb3ZlciB0aGUgaW5kaWN0bWVudCByZXZlcmJlcmF0ZXMgdGhyb3VnaCB0aGUgcG9rZXIgY29tbXVuaXR5LCBDb25ncmVzcyBjYW4gZXhwZWN0IHRvIGZlZWwgdGhlIGVmZmVjdHMuIApUdXJudGFibGU6IGhleWRleSAoVGFyZ2V0IGJyYW5kKSAoJDk5Ljk5KVdvcnRoIG1vcmUgdGhhbiAkMTAwIElNTy4gQXVkaW8gVGVjaG5pY2EgbmVlZGxlIChqdXN0IHJpZ2h0LCBtaWdodCByZXBsYWNlKSBhbmQgYnVpbHQgaW4gcHJlIGFtcC5PdmVyYWxsLCBmb3Igd2hhdCBJIHNwZW50ICh0ZWNobmljYWxseSBub3RoaW5nKSBpdCBxdWlldCB0aGUgYmVnaW5uZXJzIHNldHVwIChJIGEgbmV3YiwgcGxlYXNlIGdvIGVhc3kgb24gbWUpLiAKQmVpbmcgdHJhbnNwYXJlbnQgYW5kIGNyZWRpYmxlIGFyZSB0aGUgdHdvIG1vc3QgaW1wb3J0YW50IHByaW5jaXBsZXMgdGhhdCB3ZSBiZWxpZXZlIGFsb25nIHdpdGggYnJpbmdpbmcgaW4gdGhlIGxlZ2FjeSBvZiBDYXNpbm8gUHJpZGUuIEhvd2wgd2lsbCBiZSBvdXIgcGFydG5lciB0byBoZWxwIHVzIGJvb3N0IHRoZSBvYmplY3RpdmUgb2YgdmVudHVyaW5nIGludG8gdGhlICdjbGljayBhbmQgbW9ydGFyJyBidXNpbmVzcyBtb2RlbC4iQ29tbWVudGluZyBvbiB0aGlzIHdpbiwgTmlraXRhIE1hbGhvdHJhLCBEaXJlY3RvciwgSE9XTCBzYWlkLCAiQmFhZHNoYWggZ2FtaW5nIGlzIGEgdHJ1c3RlZCBicmFuZCB3aGVuIGl0IGNvbWVzIHRvIG9ubGluZSBza2lsbCBiYXNlZCBnYW1pbmcuIApCdXQgeWV0IGhhdmUgdHJ1c3QgaW4gaGlzIHdvcmQuIEV2ZW4gdGhvdWdoIGhlIGhhcyBsaWVkIG1vcmUgdGhhbiBhbnkgb3RoZXIgcHJlc2lkZW50Li4gClphaWEsIGFuIHVuZGlzY2hhcmdlZCBiYW5rcnVwdCwgd2FzIHNlbnRlbmNlZCBzZXBhcmF0ZWx5IG9uIFRodXJzZGF5IGFmdGVyIGFsc28gcGxlYWRpbmcgZ3VpbHR5IHRvIHR3byBjb3VudHMgb2YgY29uc3BpcmFjeSwgZGVmcmF1ZGluZyB0aGUgQ29tbW9ud2VhbHRoIEJhbmsgb2YgJDQ4LjUgbWlsbGlvbiBhbmQgb3RoZXIgZmluYW5jZSBpbnN0aXR1dGlvbnMgb2YgJDEwLjUgbWlsbGlvbi4gVGhlIDU0IHllYXIgb2xkIHdhcyBzZW50ZW5jZWQgdG8gMTAgeWVhcnMgaW4gamFpbCwgd2l0aCBhIG5vbiBwYXJvbGUgcGVyaW9kIG9mIHNldmVuIGFuZCBhIGhhbGYgeWVhcnMuIEFydGh1ciwgd2hvIHdhcyBkZXNjcmliZWQgYXMgc3Vib3JkaW5hdGUgdG8gSm9yZGFub3UgYW5kIFphaWEsIHdhcyBwcmV2aW91c2x5IHNlbnRlbmNlZCB0byBzaXggeWVhcnMgaW4gamFpbCwgd2l0aCBhIG5vbiBwYXJvbGUgcGVyaW9kIG9mIGZvdXIgeWVhcnMuIApFYWNoIG1vcm5pbmcgSSB0YWtlIE5leGl1bSB3aGljaCBoZWxwcyB3aXRoIHRoZSAiZWxhc3RpY2l0eSIgb2YgbXkgZXNvcGhhZ3VzLiAKVGhlIGZvbGxvd2luZyBsZXR0ZXIgd2FzIHJlY2VpdmVkIGJ5IHRoZSBwYXJlbnRzIG9mIFNlcmdlYW50IE9ic2VydmVyIFJvYmVydCBBbGxkcmljaywgd2hvc2UgcGxhbmUgd2FzIHNob3QgZG93biBvdmVyIEhvbGxhbmQgc29tZSBtb250aHMgYWdvLCBhbmQgd2hvIGlzIG5vdyBhIHByaXNvbmVyIG9mIHdhciBpbiBhIEdlcm1hbiBpbnRlcm5tZW50IGNhbXAuIEl0IHdhcyBwb3N0ZWQgRGVjZW1iZXIgMzAsIGFuZCBhcnJpdmVkIGluIEdyaW1zYnkgb24gRmVicnVhcnkgMjUuIE1hcmtlZCBhaXJtYWlsLCBpdCBwcm9iYWJseSBjYW1lIGJ5IHRoZSBTb3V0aCBBdGxhbnRpYyBSb3V0ZSwgYW5kIGl0IGhhZCBiZWVuIG9wZW5lZCBieSBjZW5zb3JzLiBUaGUgbGV0dGVyIGlzIHdyaXR0ZW4gb24gYW4gZW52ZWxvcGUgd2hpY2ggaXMgZm9sZGVkIHdoZW4gdGhlIG1lc3NhZ2UgaGFzIGJlZW4gd3JpdHRlbiBvbiB0aGUgaW5zaWRlLiBUaGUgZmxhcCBvZiB0aGUgZW52ZWxvcGUgZml0cyBpbnRvIHRoZSBib2R5IG9mIHRoZSBwYXBlciBieSBtZWFucyBvZiBhIHNsaXQuCkltIHRpcmVkIG9mIHRoaXMgc2hpdCBhbmQgb2J2aW91c2x5IGp1c3QgdHJ5aW5nIHRvIGxldCBpdCBmaXp6bGUgb3V0IGlzbiB3b3JraW5nLiAKRmluYWxseSwgaW4gYSBzdHVkeSBpbiB0aGUgQnJpdGlzaCBqb3VybmFsIExhbmNldCwgZnVuZGVkIGJ5IHRoZSBHYXRlcyBGb3VuZGF0aW9uLCByZXNlYXJjaGVycyBsb29rZWQgYXQgd2hhdCBjYXVzZWQgcGVvcGxlIHRvIGRpZSBwcmVtYXR1cmVseSBpbiBFbmdsYW5kLiBUaGUgbGVhZGluZyBjYXVzZSBvZiBkZWF0aCwgYXMgaW4gbW9zdCBjb3VudHJpZXMsIHdhcyBmcm9tIGhlYXJ0IGRpc2Vhc2UuIE1vZGlmaWFibGUgcmlzayBmYWN0b3JzIGFjY291bnRlZCBmb3IgYWxtb3N0IDQwIHBlcmNlbnQgb2YgdGhlIGRlYXRocywgbGVkIGJ5IGFuIHVuaGVhbHRoeSBkaWV0LCBzbW9raW5nIGNpZ2FyZXR0ZXMsIGFuZCBkcmlua2luZyB0b28gbXVjaCBhbGNvaG9sLiBFeGVyY2lzaW5nLCBmb2xsb3dpbmcgYSBnb29kIGRpZXQsIGFuZCBub3Qgc21va2luZyBvciBkcmlua2luZyB0byBleGNlc3MgbWFrZXMgYSBkaWZmZXJlbmNlLgpXaGF0IEknbSBzYXlpbmcgaXMgdGhhdCBJJ3ZlIGRvbmUgYSBsb3Qgb2YgKGh5cGVyZm9jdXNlZCwgbG9sKSByZXNlYXJjaCBvbiB0aGlzIHN0dWZmICBwYXJlbnRpbmcsIHRlYWNoaW5nIGF0IGhvbWUsIHByb3BlciBkZXZlbG9wbWVudCwgZXRjLiAKQWxzbywga2VlcCBpbiBtaW5kIFBHUjIgd2FzIGJ1bmRsZWQgd2l0aCBhIGNvbnNvbGUgYXQgb25lIHBvaW50LCBjb3VsZCB0aGF0IHJlYWxseSBjb3VudCBhcyBhIHRvcCBzZWxsZXIgaWYgaXQgd2FzbnQgdGhlIGRlc2lyZWQgUHVyY2hhc2U/LCB0aGUgQ29uc29sZSBpdHNlbGYgd2FzLCB0aGUgZ2FtZSB3YXMganVzdCB0YXBlZCB0byBpdC4uIApBbmQsIG9mIGNvdXJzZSwgeW91IGFyZSBtb3N0IGxpa2VseSB0byBiZSB0YXJnZXRlZCBpZiB5b3UgYXJlIHRleHRpbmcgb3Igb3RoZXJ3aXNlIGxvb2tpbmcgZG93biBhdCB5b3VyIHBob25lIGFuZCBub3QgcGF5aW5nIGF0dGVudGlvbiB0byBzdXJyb3VuZGluZ3MuIApLbGFzc2UuLiAKVGhlIGZ1bm55IHRoaW5nIGlzLCBEMiBoYWQgYSBsb3Qgb2YgYmxhY2sgbWFya2V0IHNpdGVzIHNlbGxpbmcgZHVwZXMgYW5kIHdoYXRub3Qgc28gdGhlIFJNQUggd2FzIGV4cGVjdGVkIHRvIGNvdW50ZXIgdGhpcyBieSBwcm92aWRpbmcgYSBzYWZlIGFsdGVybmF0aXZlLCB3aGljaCBzb3VuZGVkIHJlYWxseSBnb29kLiAKWWVhaCB3ZWxsIHRvbyBiYWQgZm9yIHRoZW0uIEJ5IHJlZnVzaW5nIHRvIGxldCBtZSBicm93c2UgdGhlaXIgd2Vic2l0ZSBpbiBhIHdheSBJIGRlZW0gZml0LCBJIGRlY2lkZSB0byBib3ljb3R0IHRoZSB3ZWJzaXRlIGFsdG9nZXRoZXIuIElzbnQgdGhhdCB3aGF0IGV2ZXJ5b25lIHVzaW5nIGFkYmxvY2tlcnMgd2FudHM/IFRvIG5vdCBiZSBwZXN0ZXJlZCB3aXRoIGFkcyBsaWtlIGl0cyBhIGNhbmNlcj8gUG9wdXBzPyBQb3AgZG93bnM/IEZpbmdlcnByaW50aW5nPwpKdXN0IGZvciBmdW4gSSB0cmllZCB0byBnbyBiYWNrIGFuZCBmaW5kIHBpY3R1cmVzIGZvciBjb21wYXJpc29uLiBJIGRvbiBoYXZlIGFueSBwaWN0dXJlcyBmcm9tIHdoZW4gSSB3YXMgYXQgbXkgYmlnZ2VzdCBidXQgdGhpcyBvbmUgaXMgZnJvbSBncmFkZSAxMiB3aGVuIEkgd2FzIGFyb3VuZCAxOTAgMjAwIGFuZCBhIGJpdCBoaWdoZXIgYmYgJS4gCllvdSByZWFsbHkgY2FuJ3QgbWFrZSB0aGlzIHN0dWZmIHVwICAgYWx0aG91Z2gsIGlmIHlvdSBkaWQsIE1pdHQgUm9tbmV5IGNvdWxkIHByb2JhYmx5IGhpZGUgYW55IHBhcGVyd29yayBpbiB0aGUgQ2F5bWFucyBmb3IgeW91LgpPZiBjb3Vyc2UsIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gdGhlIHdvcmxkIGF2ZXJhZ2UgYW5kIHRoZSBzbWFsbGVzdCBjb3VudHJ5IGF2ZXJhZ2UgKEtvcmVhIGlpcmMpIGlzIG9uIHRoZSBvcmRlciBvZiBhbiBpbmNoICAgYW5kIHRoaXMgdGVsbHMgeW91IHplcm8gYWJvdXQgdGhlIHNpemUgb2YgYW55IGdpdmVuIGluZGl2aWR1YWxzIHBlbmlzLiBUaGVyZSBpcyBmYXIsIGZhciBtb3JlIHZhcmlhdGlvbiB3aXRoaW4gYW55IGdpdmVuIHBvcHVsYXRpb24gdGhhbiBiZXR3ZWVuIHBvcHVsYXRpb25zIGluIGdlbmVyYWwuLiAKT0JKRUNUSVZFOiBWaXRhbWluIEQgZGVmaWNpZW5jeSByZW1haW5zIGEgcG9vcmx5IHJlY29nbml6ZWQgcGFuZGVtaWMgYW5kIGlzIGNsb3NlbHkgbGlua2VkIHRvIGluY3JlYXNlZCBoZWFsdGggY2FyZSBjb3N0cyBpbiB2ZXRlcmFucy4gUHJvamVjdGVkIGhlYWx0aCBjYXJlIG5lZWRzIGluIHZldGVyYW5zIGFyZSBleHBlY3RlZCB0byBpbmNyZWFzZSBvdmVyIHRoZSBuZXh0IGRlY2FkZS4gSW50ZW5zaXZlIGNhcmUgdW5pdCAoSUNVKSBjb3N0cyBjb250cmlidXRlIHNpZ25pZmljYW50bHkgdG8gaG9zcGl0YWwgY29zdHMgYW5kIHN0ZW0gZnJvbSBpbnRlcnZlbnRpb24gc2VydmljZXMgYW5kIG1hbmFnZW1lbnQgb2Ygc2Vwc2lzIGluY2x1ZGluZyBub3NvY29taWFsIGluZmVjdGlvbnMuIFZpdGFtaW4gRCBoYXMgaW1tdW5vbW9kdWxhdGluZyBhbmQgYW50aW1pY3JvYmlhbCBwcm9wZXJ0aWVzIHRocm91Z2ggYW50aW1pY3JvYmlhbCBwZXB0aWRlcyBzdWNoIGFzIGNhdGhlbGljaWRpbi4KVGhlIHNwb29rZmlzaCBoYXMgc3BsaXQgZXllcywgc28gaXQgY2FuIHNlZSBpbiBib3RoIGRpcmVjdGlvbnMgYXQgb25jZSAgIGl0J3MgbGl0ZXJhbGx5IGxpa2UgaGF2aW5nIGV5ZXMgaW4gdGhlIGJhY2sgb2YgaXRzIGhlYWQuIEl0J3MgYWN0dWFsbHkgbm90IGEgc2VwYXJhdGUgcGFpciBvZiBleWVzLCBidXQgYSBjb21wbGljYXRlZCBzeXN0ZW0gdGhhdCB1c2VzIGEgY3VydmVkIG1pcnJvciBvZiByZWZsZWN0aXZlIHBsYXRlcyB0byBjb2xsZWN0IHRoZSBtaW5pc2N1bGUgYml0cyBvZiBsaWdodCB0byBiZSBmb3VuZCBhIGhhbGYgbWlsZSB1bmRlciB0aGUgc3VyZmFjZS4gU28gaXQncyBsZXNzIGxpa2UgaGF2aW5nIGV5ZXMgaW4gdGhlIGJhY2sgb2YgeW91ciBoZWFkIGFuZCBtb3JlIGxpa2UgaGF2aW5nIGEgcGFpciBvZiB0aG9zZSBub3ZlbHR5IHN1bmdsYXNzZXMgd2l0aCBtaXJyb3JzIHRoYXQgbGV0IHlvdSBzZWUgYmVoaW5kIHlvdS4gSXQgaXMgdGhlIG9ubHkgdmVydGVicmF0ZSBjcmVhdHVyZSBvbiBlYXJ0aCB0aGF0IGRvZXMgdGhpcy4KVGhlcmUgaXMgYSBiaXQgb2YgaHVtb3IsIHRvby4gIk1heWJlbGxlIiBpcyBkZWRpY2F0ZWQgdG8gYW4gdW5mcmllbmRseSBkb2csIGFiYW5kb25lZCBieSBhbiB1bnRydWUgd2lmZSB3aG8gbGVmdCB0byBqb2luIHRoZSBjaXJjdXMuIEFuZCAiV29uJ3QgWW91IFBsZWFzZSBCZSBNeSBSaW5ndG9uZT8iIGlzIGEgc2VsZiBleHBsYW5hdG9yeSBtb2Rlcm5pemF0aW9uLgpTdGlmZiBmaW5nZXIgZXhlcmNpc2VzIGNhbiBhbHNvIGhlbHAgeW91IGdldCByaWQgb2YgdGhhdCBoZWF2eSBhbmQgbGltaXRlZCBmZWVsaW5nIHdoZW4gbW92aW5nIHlvdXIgZmluZ2VycyBhbmQgaGFuZHMuIEdlbnRseSBtYXNzYWdlIHRoZSBzdGlmZiBmaW5nZXJzIGluIHRoZSB0b2VzIGFuZCBoYW5kcyBhbmQgdGhlbiByb3RhdGUgdGhlbSBvbmUgYXQgYSB0aW1lLiBJdCBpcyBhZHZpc2FibGUgdG8gc2VlayBtZWRpY2FsIGhlbHAgYW5kIHRyZWF0bWVudCBpZiB5b3Ugc3VzcGVjdCB5b3UgaGF2ZSBSaGV1bWF0b2lkIEFydGhyaXRpcy4uIApTbyBJIHNlbnQgaGVyIHBob3RvcyBhbmQgdmlkZW9zIG9mIG1lIGJhbGxzIGRlZXAgaW4gaGVyIG1hbiwgd2l0aCBteSBkaWNrIGluIGhpcyBtb3V0aCwgZXZlcnl0aGluZy4gCkplZGVzICBsdWZ0IGJlciBlaW5lIHplaXRsaWNoZSBEaXN0YW56IHZvbiBlaW5lciBXb2NoZS4gRGFzIGRlcnplaXRpZ2UgICBoYXQgYW0gMTEuIEZlYnJ1YXIgYmVnb25uZW4gKG1pdCBkZW0gRW5kZSBkZXMgZWluZW4gZXMgYmVnaW5udCBkYXMgZm9sZ2VuZGUpLiAKUHV0ZHJ1Z3NpbnlvdXJidXR0NjkgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMTAgZGF5cyBhZ28KWWVhaCwgYnV0IHRoYXRzIGJlY2F1c2UgdGhlIGdvdmVybm1lbnQgdXNlcyBpdHMgdG9vbHMgb2YgZm9yY2UgdG8gcHJldmVudCB0aGF0LiBJZiB0aGUgZ292ZXJubWVudCBkaXNhcHBlYXJlZCB0b21vcnJvdywgdGhlbiB0aGUgVG9ueSBTb3ByYW5vcyBvZiB0aGUgd29ybGQgZmlnaHQgaXQgb3V0IHVudGlsIG9uZSBvZiB0aGVtIGhhcyBlbm91Z2ggZmlyZXBvd2VyIHRvIGVuZm9yY2UgaGlzIHNvdmVyZWlnbnR5LCBhbmQgdGhlbiB5b3UgaGF2ZSBhIHJlZ3VsYXIgb2xkIGdvdmVybm1lbnQuIFBlcmhhcHMgeW91IGNvdWxkIHNheSwgZ292ZXJubWVudCBzaG91bGQgYmUga2VwdCBzbWFsbCBhbmQgbG9jYWwgYW5kIHNob3VsZCBub3QgYmUgYWxsb3dlZCB0byBkbyB3aGF0IGl0IGRpZCBhdCBXYWNvLCBhbmQgSSB3b3VsZCBhZ3JlZSB3aXRoIHRoYXQgYnV0IHRoYXQgbm90IGFuYXJjaGlzbSB0aGF0cyBqdXN0IGJlaW5nIGNvbnNlcnZhdGl2ZS4KQ2hpbmVzZSBsaWtlIEhvcnNlcyBmb3IgbWFueSByZWFzb25zLiBIb3JzZSBwcm92aWRlcyBhIGdvb2QgYW5kIHF1aWNrIHRyYW5zcG9ydGF0aW9uIGZvciBwZW9wbGUgYmVmb3JlIGF1dG9tb2JpbGVzLiBIb3JzZSBjYW4gZ2l2ZSBwZW9wbGUgYSByaWRlIHRvIHRoZWlyIGRlc3RpbmF0aW9uLiBUaGVyZWZvcmUsIGhvcnNlIGlzIG5vdCBvbmx5IGEgc3ltYm9sIG9mIHRyYXZlbGluZywgYnV0IGFsc28gYSBzaWduIG9mIHNwZWVkeSBzdWNjZXNzLgoiV2UgdGhpbmsgdGhhdCB0aGUgY2FzaW5vIGlzIGJlY29taW5nIHRvcCBvZiBtaW5kIGFtb25nIHRob3NlIHNvbWV3aGF0IHVuaXF1ZSBleHBlcmllbmNlcyB0aGF0IENsZXZlbGFuZCBoYXMgdG8gb2ZmZXIsIiBoZSBzYWlkLCAiYW5kIGFzIGEgMjQvNyBidXNpbmVzcywgd2UgY2FuIG1lZXQgeW91ciBuZWVkcyBhbnkgdGltZSBvZiBkYXkgb3IgYW55IGRheSBvZiB0aGUgd2Vlay4iClNoZSB3YWtlcyB1cCBoYXBwaWVyIHRoYW4gZXZlciwgZnVsZmlsbGVkIGFuZCBhdCBwZWFjZSB3aXRoIGhlciBmaXJzdCBzZXh1YWwgZXhwZXJpZW5jZS4gCk9ubHkgaWYgdGhhdCBtb25leSBjYW1lIGZyb20gZGVtb25zdHJhdGVkIHNraWxsIChleC4gCkFsc28sIG5vdCBhbGwgb2YgdGhlbSBiZWxvbmcgdG8gdGhlIENvbmdyZXNzIHBhcnR5OyBhbmQgd2UgYWxsIGtub3cgd2hhdCBjaGFybGF0YW5zIHRoZSByZWdpb25hbCBNUHMgYXJlLiBTbyB0aGUgcHJpbWUgbWluaXN0ZXIsIGluc3RlYWQgb2YgY29udHJvbGxpbmcgdGhlc2UgZ3Jvd24gdXBzIG9yIGNvYXhpbmcgdGhlbSBpbnRvIHBvbGljeSBkZWNpc2lvbnMgb3IgZW5zdXJpbmcgdGhleSBrZWVwIHRoZWlyIGhhbmRzIG91dCBvZiB0aGUgdGlsbCwgcHJldHR5IG11Y2ggbGVhdmVzIGV2ZXJ5Ym9keSB0byBoaXMgb3IgaGVyIG93biBkZXZpY2UuIApUbyB3aW4gaW4gcG9rZXIsIHlvdSBzaG91bGQgaGF2ZSB0aGUga25vd2xlZGdlLCB0aGUgY29uZmlkZW5jZSwgZ29vZCBhbW91bnQgb2YgcHJhY3RpY2UsIGFuZCBhd2FyZW5lc3Mgb2YgZWZmZWN0aXZlIHBva2VyIHN0cmF0ZWdpZXMgdGhhdCB5b3UgY2FuIGFwcGx5IHRvIHlvdXIgZ2FtZXMuCkEgZ2xvYmFsIGxlYWRlciBpbiBzcGEgdHJlYXRtZW50cyBhbmQgcHJvZHVjdHMgaGFzIGp1c3QgbW92ZWQgb250byB0aGUgU3RyaXAgYXQgVmRhcmEgaW4gTUdNJ3MgQ2l0eUNlbnRlciB3aXRoIGFuIGludGltYXRlIGFuZCBob2xpc3RpYyBhcHByb2FjaC4KSSB3YXMgb24gbXkgd2F5IHRvIGdldCBmYXN0IGZvb2QsIHdoaWxlIGRyaXZpbmcgSSBzYXcgYW4gaW50ZW5zZSBodWdlIGxpZ2h0IGhvdmVyaW5nIHRoZW0gcGFzc2luZyB0cm91Z2ggdGhlIHRyZWVzLiAKQXMgYSByZXN1bHQsIEphY2sgZ2FpbmVkIHdlaWdodCwgaGlzIGJyb3dzIGFyZSBwZXJtYW5lbnRseSBrbml0dGVkIGFuZCBBbGJlcnQgaXMgaGF2aW5nIGEgbmFwLiAKVGhleSBlc3RpbWF0ZSB0aGF0IDEwLDAwMCBwZW9wbGUgYXJyaXZlIGV2ZXJ5IGRheSB0byBNdW1iYWkgaW4gc2VhcmNoIG9mIHdvcmsuIApBIHJlbW90ZSByZWxlYXNlIGlzIGhlbHBmdWwgYnV0IG5vdCBhbHdheXMgbmVjZXNzYXJ5LiBNYW55IGNhbWVyYXMgb2ZmZXIgYSBzZWxmIHRpbWVyL2RlbGF5IHdoaWNoIHdvdWxkIG1pdGlnYXRlIGFueSBzaGFrZSBjYXVzZWQgYnkgcHJlc3NpbmcgdGhlIHNodXR0ZXIgYnV0dG9uLiAKSSBhZ3JlZSB3aXRoIHRoZSBhcnRpY2xlIHRoYXQgaXQgaXJyZWd1bGFyIHRvIG1ha2UgdGhpcyBwdWJsaWMgYW5kIGl0IGNvbWVzIG9mZiBhcyBhIG1hbmlwdWxhdGlvbiB0byBiZSB2ZXJ5IHB1YmxpYyBhYm91dCBpdCAgIHRoZSBsYXN0IGNhc2UgaW4gbXkgY291bnRyeSBvZiBhIHBvbGl0aWNpYW4gZ2V0dGluZyBleGNsdWRlZCB3YXMgYSBwcm8gY2hvaWNlIFByaW1lIE1pbmlzdGVyIHdobyB3YXMgdGhyZWF0ZW5lZCB3aXRoIEV4Y29tbXVuaWNhdGlvbiBieSB0aGUgQ2F0aG9saWMgQ2h1cmNoLCB3aGljaCBkZWZpbml0ZWx5IGNhbWUgb2ZmIGFzIG1hbmlwdWxhdGlvbiBpbiB0aGUgZXllcyBvZiB0aGUgcHVibGljLkJ1dCBpZiBhIHByaWVzdCBsZWdpdGltYXRlbHkgdGhpbmtzIHNvbWVvbmUgaXNuIHNpbmNlcmUsIHRoZXkgc2hvdWxkIGFkZHJlc3MgdGhhdCBwZXJzb24gcHJpdmF0ZWx5IGFuZCBhc2sgdGhlbSB3aGF0IGdvaW5nIG9uIGFuZCB3aHkgdGhleSBhY3RpbmcgdGhlIHdheSB0aGV5IGFjdGluZywganVzdCBhcyB0aGUgQkNQIHNheXMuIApJZiBpIGRvbiBhbmQganVzdCBsZWF2ZSBpdCBpdCBnZXRzIHNvcmUgYWYgYW5kIGFjaGVzIG9uIGVpdGhlciBzaWRlLiAKSWYgdGhlIGNob3J1cyBoYWQgYmVlbiAiQmUgc3RpbGwgbXkgYmVhdGluZyBoZWFydC9kb24ndCBydWluIHRoaXMgc29uZyBmb3IgbWUiIHJhdGhlciB0aGFuICJEb24ndCBydWluIHRoaXMgb24gbWUsIiAiQWxtb3N0IiB3b3VsZCBoYXZlIGNhcHR1cmVkIGhvdyBtdXNpYyBhbmQgbWVtb3JpZXMgbWluZ2xlLCBidXQgdGhlIHNvZnQgZm9jdXMgZG9lc24ndCBjbGljay4uIApUaGUgY2xvc2VzdCBjb2xsZWdlIG9mZmVyaW5nIGEgcHJvZ3JhbSBpcyBGYW5zaGF3ZSBDb2xsZWdlIGluIExvbmRvbi4gCkJvdGggaGF2ZSBiZWVuIExhcyBWZWdhcyBwaGVub21lbmEuIEluZGVlZCwgbGUgQ2lycXVlIGJvYXN0cyBlaWdodCBwZXJtYW5lbnQgc2hvd3Mgb24gdGhlIHN0cmlwLCBpbmNsdWRpbmcgdGhlIGFxdWF0aWMgaGVhcnQgc3RvcHBlciAiTyIgd2hpY2ggaGFzIGJlZW4gcGFja2luZyBjcm93ZHMgaW50byB0aGUgbHV4dXJpb3VzIEJlbGxhZ2lvIGhvdGVsIGF0IG1vcmUgdGhhbiAkMTAwIGEgc2VhdCBzaW5jZSAxOTk4LiBUaGV5IGhhdmUgdGhlaXIgb3duICJwYXNzaW9ucyIsIGhlIGluc2lzdGVkLiAKVGhpcyBwcmVqdWRpY2UgaXMgYW4gaW52ZW50aW9uIG9mIHB1Ymxpc2hlcnMgYW5kIHRoZWlyIG1hcmtldGluZyBkZXBhcnRtZW50cy4gCkVuUklDSGVkIEFjYWRlbXkgZ2V0cyBKaW0gVHJlbGl2aW5nCkJlaW5nIGFibGUgdG8gdGFwIGFsbCBhdmFpbGFibGUgbGFuZCBmb3IgbWFuYSB3b3VsZCBiZSBuaWNlIHRvbywgSSBzb21ldGltZSBicmluZyBvdXQgdGhlIGV4cGFuc2lvbi9leHBsb3Npb24gd2l0aCBteSB0ZW11ciB3aWxkZXJuZXNzIHJlY2xhbWF0aW9uIChJIHNpbmNlIHJldGlyZWQgdGhlIHBvd2Vyc2hhcmRzLCB0b28gZ3JlZWR5LCBpdCB3YXMgZ29vZCBmb3IgcmlkaWN1bG91cyBkYW1hZ2UgdGhvdWdoLCBpdCBoYXMgc2luY2UgYmVlbiByZWZpbmVkIGludG8gc29tZXRoaW5nIGNsb3NlIHRvIGEgdGllciAyLzIuNS4pLgpJIGhhZCBsYWlkIG91dCBteSB0aHJlZSBkcmFmdCBzdHJhdGVnaWVzIHRvIHRoZW0gb25jZSBJIGdvdCBaaW5ubyBmb3Igc3VyZSBhbmQgd2Uga2luZCBvZiBkZWNpZGVkIHRvIGdvIGZvciBhIGJsZW5kIG9mIGJlc3QgYXZhaWxhYmxlIGFuZCBtZWRpYS4gCk9uY2UgdGhlIG1vbmV5IGlzIGluIHlvdXIgU3Rhc2ggYWNjb3VudCwgeW91IGNhbiB0aGVuIGNob29zZSBkaWZmZXJlbnQgdGhlbWVzIHRvIGludmVzdCBpbiBiYXNlZCBvbiB5b3VyIHBlcnNvbmFsIHByZWZlcmVuY2UsIGJlbGllZnMsIHZhbHVlcywgYW5kIHJpc2sgdG9sZXJhbmNlLiAKQWxsIHRoZSBtYXRlcmlhbCBpcyB3cml0dGVuLCBidXQgSSdtIHN0aWxsIHdyaXRpbmcuIEknbSByZWFsbHkgaW4gYSBjcmVhdGl2ZSBzcGFjZSByaWdodCBub3csIGFuZCBoYXZlIGJlZW4gZm9yIGEgbG9uZyB0aW1lLiAKQ29tcGFyZWQgdG8gaW5kdXN0cnkgYnJlZWRpbmcgb2YgY2F0dGxlIGZvciBtZWF0IGFuZCBtaWxrLCB0aGV5IHRydWx5IGxpdmUgYSBwcml2aWxlZ2VkIGxpZmUuIApZb3UgY2FuIHVzZSB0aGVzZSBsdWNreSBUZXhhcyBob2xkZW0gdGlwcyB0byBnYWluIHRoZSBhZHZhbnRhZ2UgYXQgbW9zdCBzaG9ydCBoYW5kZWQgcG9rZXIgdGFibGVzLiBNYW55IHBva2VyIHBsYXllcnMgYmVsaWV2ZSB0aGF0IGx1Y2sgcGxheXMgYSBsYXJnZSBwYXJ0IGluIFRleGFzIEhvbGRlbSBQb2tlciwgYnV0IHRoZSB0cnV0aCBpcywgaWYgeW91J3JlIGdvb2QgZW5vdWdoIHlvdSBjYW4gd2luIGF0IGxlYXN0IG9uZSBiaWcgYmV0IGFuIGhvdXIuClRoaXMgYmFyZ2FpbmluZyBhdHRpdHVkZSBhbGxvd2VkIG1lIHRvIG1ha2UgZXhjdXNlcyB3aGVuIHRoZXJlIHdlcmUgbm9uZSBidXQgSSBuZXZlciBoYWQgbXkgZW50aXJlIGhlYXJ0IGludG8gcXVpdHRpbmcgZHVyaW5nIHRob3NlIHRpbWVzIHdoaWNoIGlzIHdoeSBpdCBhbHdheXMgZG9vbWVkIHRvIGZhaWwgYW5kIGV2ZW4gdGhlbiBpdHMuIApJIGFtIGFsc28gaGFwcHkgdG8gaW5mb3JtIHlvdSwgdGhhdCB3ZSBzdGFydCBpbiB0aGUgbmV4dCB3ZWVrcyB3aXRoIGEgcHJlIGFycml2YWwgbGV0dGVyIHdoZXJlIGd1ZXN0cyBnZXQgYSBwcmV2aW91cyBsaW5rIHRvIHRoZSB3ZWJzaXRlIG9mIHRoZSBUaGVybWFsYmF0aCBTcGEgdG8gaGF2ZSB0aGUgcG9zc2liaWxpdHkgdG8gYm9vayBtYXNzYWdlcyBldmVuIG9ubGluZS4gCkEgYmlnIG5vIG5vIGlzIHNpdHRpbmcgeW91ciBuYWtlZCBidW0gb24gdGhlIHdvb2RlbiBzYXVuYSBiZW5jaGVzLkRvbiB1c2UgeW91ciB0b3dlbCB0byBzaXQgb24gaW4gdGhlIHN0ZWFtIHJvb21zLiAKSWYgeW91IGRvIHdhbnQgdG8gaGF2ZSBhIGNoZWNraW5nIHN0cmF0LCB3aGljaCBzZWVtcyBmaW5lIHRvIGJlIHN1cmUsIEkgcHJvYmFibHkgY2hlY2sgcmFpc2luZyBmbG9wLiAKRmVkZXJhbCBDcm93biBwcm9zZWN1dG9yIEJyYWRsZXkgUmVpdHogdG9sZCBDVFYgTmV3cyBUb3JvbnRvIHRoYXQgMzIgeWVhciBvbGQgUmVoYWIgRHVnaG1vc2ggd2FzIGFzc2Vzc2VkIGJ5IGEgcHN5Y2hpYXRyaXN0IGF0IE9udGFyaW8gU2hvcmVzIGluIFdoaXRieSB0aGlzIHdlZWsuCkltYWdpbmUgc29tZSBCZWRvdWluIGluIHRoZSBBcmFiaWFuIGRlc2VydCB0b2RheSB0ZWxsaW5nIGhpcyBmcmllbmRzIHRoYXQgYW4gYW5nZWwgaGFkIGp1c3QgdG9sZCBoaW0gdGhhdCBpZiB0aGV5IGNvbnZlcnRlZCB0byBoaXMgbmV3IHJlbGlnaW9uIGFuZCBraWxsZWQgYWxsIG9mIHRoZSBBbGJhbmlhbnMgdGhhdCBHb2Qgd291bGQgZ2l2ZSB0aGVtIGFsbCBob3QgdHVicy4gSG93IG1hbnkgZm9sbG93ZXJzIHdvdWxkIGhlIGhhdmUsIG90aGVyIHRoYW4gVG9tIENydWlzZSBhbmQgSm9obiBUcmF2b2x0YT8uIApMb3MgQW5nZWxlcywgQ2FsaWZvcm5pYQpPbmUgcHJvYmxlbSBJIG1pZ2h0IGhhdmUgaXMgbXkgQVBVLiBJIGRpc2FibGVkIGl0IGVhcmxpZXIsIGJ1dCBJIHJlc2V0IHRoZSBDTU9TIHNpbmNlIHRoZW4gaXQgcHJvYmFibHkgaXMgc3RpbGwgYWN0aXZlLiAKVGhlIHBldGl0aW9uZXJzIHRha2UgdGhlIHRyYWRpdGlvbmFsIE5JTUJZIGFwcHJvYWNoOiBUaGV5IGRvbiB3YW50IGEgbGFyZ2UgZGV2ZWxvcG1lbnQgaW4gdGhlaXIgYmFja3lhcmQsIHBhcnRpY3VsYXJseSBhIHNsb3RzIGhhbGwgc3VyZSB0byBkcmF3IGFkZGl0aW9uYWwgd2F2ZXMgb2YgdHJhZmZpYyBvbiB0b3Agb2YgdGhlIDE0IG1pbGxpb24gcGVvcGxlIHdobyBhbHJlYWR5IHZpc2l0IEFydW5kZWwgTWlsbHMgZWFjaCB5ZWFyLgpUaGUgYmVzdCBwb2tlciBzdHJhdGVneSBpcyB0byBrbm93IGhvdyB0byBpbnRlcnByZXQgYm9keSBsYW5ndWFnZSBhbmQgdGFsayBvZiB0aGUgcGxheWVycy4gClJlZCBCbG90Y2hlcyBvbiBZb3VyIEZhY2UKV2FzIGl0IG92ZXIgdGhlIEdGTSBvciB0aGUgdmlzYSBiZWluZyBwb3N0ZWQ/IEkga2VwdCBzZWVpbmcgcGVvcGxlIHNheSB0aGUgdmlzYSwgYnV0IEkgc3VzcGVjdCBpdCBhbm90aGVyIEdGTS4gSWYgdGhhdCB0aGUgY2FzZSwgcGVvcGxlIHNob3VsZCBkaXJlY3QgYW55IG5lZ2F0aXZpdHkgYXQgS3JlZW55LiBQb2xlIHNob3VsZCBoYXZlIGV4cGVjdGVkIHRoYXQgZ2l2ZW4gUzYgcGVuY2hhbnQgZm9yIEdGTXMuIAoyX1NoZWRzX0phY2tzb24gIDMwIHBvaW50cyAgc3VibWl0dGVkIDE1IGhvdXJzIGFnbwpJZiB5b3Ugd2VyZSBib3JuIHBlcmZlY3RseSBjdW5uaW5nIGFuZCBydXRobGVzcywgeW91IG1heSBiZSBhIHBzeWNob3BhdGguIApUaGUgdHdvIHNleCBtb2RlbCBkZW1hbmRlZCBodW1hbnMgYmUgbWFsZSBvciBmZW1hbGUuIApMaWtlIG90aGVycyBoYXZlIG1lbnRpb25lZCwgeW91IGdldCBhIGxpY2Vuc2UgZGVwZW5kaW5nIG9uIHVzZS4KSSd2ZSBiZWVuIHN1ZmZlcmluZyBmcm9tIGEgcGFpbmZ1bCBzaG91bGRlciBzaW5jZSBsYXN0IERlY2VtYmVyLiBCdXQgaXQgd2Fzbid0IHVudGlsIE1heSB0aGlzIHllYXIsIHdoZW4gdGhlIHBhaW4gYmVjYW1lIGFjdXRlLCB0aGF0IEkgZGVjaWRlZCBJIG5lZWRlZCB0byBnbyBhbmQgc2VlIHNvbWVib2R5LiBJIGZvdW5kIGEgd2ViIHBhZ2UgZm9yIEVsZW9ub3JhIGF0IExpZmUgVG91Y2ggTWFzc2FnZSwgcmVhZCB0aGUgdGVzdGltb25pYWxzLCBhbmQgZGVjaWRlZCBJIGNvdWxkbid0IGdvIHdyb25nLi4gCllvdSB3ZXJlIGNvbmZ1c2VkIGFzIHRvIHdoeSBoZSBkaWRuIHNob3ZlIDEwYmIgcHJlIHdpdGggS0suIEkgc2FpZCB0aGF0IGlmIHlvdSBhcmUgcGxheWluZyBhZ2FpbnN0IGJhZCBwbGF5ZXJzLCB3aG8gY2FuIG5vdCBleHBsb2l0IHlvdSwgeW91IGRvIG5vdCBuZWVkIHRvIGJhbGFuY2UgeW91IGNhbiBtYWtlIG1vcmUgbW9uZXkgYmUgZXhwbG9pdGluZyB0aGVtLiAKVW50aWwgdGhhdCBoYXBwZW5lZCwgbm9uZSBvZiB0aGUgZGlmZmVyZW50aWF0aW9uIHdlIG1pc3Rha2VubHkgY2FsbCByYWNlIGV2ZW4gZXhpc3RlZCwgdGhleSB3ZXJlIGFsbCAiYmxhY2suIiBEYXJrZXIgc2tpbiBjb2xvciBwcm90ZWN0ZWQgdGhlaXIgc2tpbiBmcm9tIHRoZSBpbnRlbnNlIFVWIGxpZ2h0IG9mIGVxdWF0b3JpYWwgQWZyaWNhLiAKTWl0IFd1bmRlcnNjaG4hIiBzb2xsIGRpZSBGcmV1ZGUgYW0gUmVpc2VuLCBhbiBzY2huZW4gTGFuZHNjaGFmdGVuLCBnZW5zc2xpY2hlbSBVcmxhdWJlbiwga3VsaW5hcmlzY2hlbiBWZXJsb2NrdW5nZW4sIGFuIGRlbiBCZXNvbmRlcmhlaXRlbiBlaW5lciBSZWdpb24gdW5kIGlocmVyIEJld29obmVyIGdld2Vja3Qgd2VyZGVuLiBEYWJlaSB3b2xsZW4gd2lyIGRpZSBTaW5uZSwgZGFzIEdlZmhsLCBhYmVyIGF1Y2ggZGVuIER1cnN0IG5hY2ggV2lzc2VuIHVuZCBrdWx0dXJlbGxlciBCaWxkdW5nIGFuc3ByZWNoZW4uIFdpciBzdGVoZW4gZnIgZWluZSBzYW5mdGUgRm9ybSBkZXMgVG91cmlzbXVzLCBmciBkZW4gUmVzcGVrdCBnZWdlbmJlciBkZXIgTmF0dXIgc293aWUgZGVuIFNpdHRlbiB1bmQgQnJ1Y2hlbiBkZXIgRWluaGVpbWlzY2hlbi4gClR3byB5b3VuZyB3b21lbiAgIG9uZSBhIGJsYWNrIGhpZ2ggc2Nob29sIHN0dWRlbnQsIHRoZSBvdGhlciBhIHdoaXRlIGhpZ2ggc2Nob29sIHN0dWRlbnQgICBzdHJ1Y2sgdXAgYSBmcmllbmRzaGlwIHdoaWxlIHRoZXkgd2FpdGVkIGZpdmUgaG91cnMgaW4gbGluZS4gCklzIGNsaWVudHMgZGlkIHJlbWFpbiBvbiB0aGUgc2lkZWxpbmVzLCBBaG1lZCB0b2xkIHRoZSBGaW5hbmNpYWwgUG9zdCBpbiBhIHBob25lIGludGVydmlldy4gCkZvciBhbG1vc3QgYSBkZWNhZGUsIHRoZXJlIGhhcyBiZWVuIGEgSGVyY3VsZWFuIGVmZm9ydCBieSBwZW9wbGUgZnJvbSBib3RoIHRoZSBQYWtpc3RhbmkgYW5kIEFtZXJpY2FuIGVzdGFibGlzaG1lbnRzIHRoYXQgc2Vla3MgdG8gY2xlYW4gdXAgYW5kIHN0ZXJpbGlzZSB0aGUgbmFycmF0aXZlIG9mIFVTIFBha2lzdGFuIHJlbGF0aW9ucyBiYXNlZCBvbiB0aGUgbWljcm8gZGV0YWlscywgbGl0ZXJhbGx5IHBpY2tpbmcgb24gdGhlIHdlZWRzLiBJbiB0aGUgbWVhbndoaWxlLCB0aGUgbmFycmF0aXZlIG9mIHRoZSBvdmVyYWxsIGZvcmVzdCwgdGhlIGJpZyBwaWN0dXJlIG1hY3JvIGlzc3VlcyBmZXN0ZXIgYW5kIHBvaXNvbiB0aGUgZnJvbnQgcGFnZXMgb2Ygb3VyIG5ld3NwYXBlcnMgYW5kIHRoZSBsYW5ndWFnZSBhbmQgdG9uZSBvZiBvdXIgdGFsayBzaG93cy4gVGhpcyBpc24ndCBqdXN0IGEgcmVmZXJlbmNlIHRvIFBha2lzdGFuaSBhbnRpIEFtZXJpY2FuaXNtLiAKSSB3cm90ZSBhIGdyZWF0IGRlYWwgYWJvdXQgaGVhbHRoIGluc3VyYW5jZSBpbiBHZXJtYW55LiAKV2hpbGUgdGhlIGxlYWd1ZSBhbmQgcGxheWVycyBhZ3JlZSB0aGF0IGEgNTAgNTAgc3BsaXQgb2YgcmV2ZW51ZXMgbWFrZXMgc2Vuc2UsIHRoZXkgY2FuIGFncmVlIG9uIGhvdyB0byBkaXZpZGUgdGhhdCBwaWUuIFRoZSBwbGF5ZXJzIHdhbnQgYSBzbGlkaW5nIHNjYWxlIHRvIDUwIHBlciBjZW50IHRvIHByb3RlY3QgY3VycmVudCBjb250cmFjdHMuIE93bmVycyB3YW50IGFuIGltbWVkaWF0ZSByb2xsYmFjayBvZiBzYWxhcmllcyBhbmQgdGhlIE5ITFBBIHdhbnRzIGEgYmV0dGVyIGRlZmluaXRpb24gb2YgaG9ja2V5IHJlbGF0ZWQgcmV2ZW51ZS4KSWYgeW91IHByb2plY3QgdGhhdCBpbWFnZSwga25vdyBpdCwgc28geW91IGNhbiB0cmFwIHRoZW0gd2l0aCBhIGdvb2QgaGFuZCAgIG1ha2UgdGhlIG1vc3Qgb2YgaXQsIHNpbmNlIHRoYXQgd2lsbCBkZWZpbml0ZWx5IGRlc3Ryb3kgeW91ciB3ZWFrIHRhYmxlIGltYWdlLi4gClRoZXJlJ3MgYSByZWFzb24gb25lIG9mIHRoZSBtb3N0IG1lbW9yYWJsZSBzY2VuZXMgaW4gYWxsIG9mICJHYW1lIG9mIFRocm9uZXMiIHdhcyBDZXJzZWkncyBuYWtlZCB3YWxrIHRocm91Z2ggdGhlIHRvd24gc3F1YXJlLCBwZWx0ZWQgd2l0aCBmb29kIGFuZCBodW1hbiB3YXN0ZSwgdG8gYSBncm91cCBjaGFudGluZyBvbmUgd29yZDogIlNoYW1lISIuIApGZXcgZGF5cyBnbyBieSwgSSBydW4gYXdheSBhbmQgZ28gdG8gYSB2aWN0aW0gc2VydmljZXMgYnVpbGRpbmcgYXQgdGhlIHJlY29tbWVuZGF0aW9uIG9mIG15IHRoZWF0cmUgZnJpZW5kICh3aG8gaXMgYSBjb3ApLCBJIHRlbGwgdGhlbSBteSBzdG9yeSwgYW5kIHRoYXQgc2hlIGhhcyBhY2Nlc3MgdG8gbXkgYmFuayBhY2NvdW50IHRoc3QgY29udGFpbnMgNTAwJCBmcm9tIHdvcmtpbmcgb2RkIGpvYnMgdGhlIHBhc3QgZmV3IHllYXJzLiBUaGV5IHRlbGwgbWUgbm90IHRvIHdvcnJ5LgpMZXQgcmVhZCB0b2dldGhlciB3aGF0IEplc3VzIHNhaWQgaW4gdGhlc2UgdmVyc2VzLi4gCklBTUEgbWFzc2FnZSB0aGVyYXBpc3QgYXQgYSBoaWdoIGVuZCBzcGEKRG8gdGhlIHJ1bGVzIGRpZmZlciBiZXR3ZWVuIHRyYWRpdGlvbmFsIGFuZCBvbmxpbmUgcG9rZXIKU2VyaW91c2hlbHBNeSBHaXJsZnJpZW5kIEhhdGVzIFBva2VyClRhbnQgaWwgZXN0IHZyYWkgcXVlIGxlIG1hc3NhZ2UgZHRlbmQuIApCdXQgeW91IGdvIHRvd2FyZHMgdmlsbGFnZXMgYW5kIGNyb3dkZWQgY2l0aWVzLCB5b3UnbGwgZmluZCBvbmUgdG9vIG1hbnkgZnVja2VkIHVwIHN0b3JpZXMgbGlrZSBob25vciBraWxsaW5ncy4gCldoYXQgYXJlIGNhcmQgZ2FtZXM/IEhvdyB0aGV5IGNhbWUgaW50byBleGlzdGVuY2U/IFdoYXQgd2VyZSB0aGUga2V5IGZhY3RvcnMgdGhhdCBjYXVzZWQgY2FyZCBnYW1lcyB0byBjYXVzZSB1cCBhIGJhbmcgaW4gdGhlIHdvcmxkIG9mIGdhbWJsaW5nPyBXZWxsLCB0aGUgYW5zd2VyIHRvIGFsbCB0aGVzZSBxdWVyaWVzIGlzIGEgY2FrZSB0byBjdXQgb24uIFRoYXQgbWVhbnMsIGFzIHRoZSBuYW1lIGl0c2VsZiBzdWdnZXN0cywgdGhlIGdhbWVzIHdoaWNoIGFyZSBwbGF5ZWQgd2l0aCB0aGUgbGliZXJhbCB1c2Ugb2YgY2FyZHMgYXJlIGtub3duIGFzIGNhcmQgZ2FtZXMuIE5vdyBpdCBkZXBlbmRzIG9uIHRoZSBjb250aW5nZW5jeSB0aGF0IHRoZSBnYW1lIGlzIGNvbnZlbnRpb25hbCBvciBiZSBjb250aW5nZW50IGJ5IHRoZSBydWxlcyBvZiB0aGUgc3BlY2lmaWVkIGdhbWUuIEEgbnVtYmVyIG9mIGdhbWVzIGF0dHJpYnV0ZSB0aGVpciBvd24gaG9tb2dlbmVvdXMgcnVsZXMgYW5kIHJlZ3VsYXRpb24gdG8gYmUgcGxheWVkIHdoaWxlIHRoZSBvdGhlcnMgYXJlIGNoYXJhY3Rlcml6ZWQgYnkgdGhlIHJ1bGVzIGFmZmVjdGVkIGJ5IHRoZSBjb25jZXJuZWQgcmVnaW9uLCBjdWx0dXJlIGFuZCB0aGUgcmVnaW9uYWwgaW5oYWJpdGFudHMuCkkgYSBCRSBtaWNybyBzdGFrZXMgZG9uayB3aG8gcGxheXMgb25saW5lIGZvciBmdW4gd2l0aCBzb21lIGNhc2lubyBleHBlcmllbmNlIGluIExvbmRvbiwgVUssIGRlY2lkZWQgdG8gaGVhZCBvdXQgdG8gVmVnYXMgdG8gc2VlIHRoZSBzaWdodHMgYW5kIGJsb3cgc29tZSBtb25leSBvbiBsaXZlIHBva2VyIGZvciB0aGUgZXhwZXJpZW5jZS4gCkl0J3MgbW9yZSB0aGFuIGp1c3QgYSBjcmFzcyBzdGF0ZW1lbnQsIGl0J3MgYnJhZ2dpbmcgYWJvdXQgZ3JvcGluZyBzdHJhbmdlcnMgYW5kIGdldHRpbmcgYXdheSB3aXRoIGl0IGJlY2F1c2UgaGUncyBmYW1vdXMuIEdyYWIgZW0gYnkgdGhlIHB1c3N5LCByZW1lbWJlcj8gQW5kIHRoaXMgaXMgY29tcGxldGVseSBpZ25vcmluZyB0aGF0IGhlIGhhcyBhIGhpc3Rvcnkgb2YgaW5maWRlbGl0eSBhbmQgcGF5aW5nIG9mZiBoaXMgYWNjdXNlcnMuIApJdCByZWFsbHkgYSB0b3VnaCBhZ2UgYmV0d2VlbiBmaW5pc2hpbmcgaGlnaCBzY2hvb2wgYW5kIGFwcGx5aW5nIHRvIGNvbGxlZ2UuIApUaGVyZSBoYXMgYmVlbiBhbiBlc2NhbGF0aW5nIGludGVyZXN0IGluIHRoZSBtZWRpY2luYWwgdXNlIG9mIENhbm5hYmlzIHNhdGl2YSBpbiByZWNlbnQgeWVhcnMuIENhbm5hYmlkaW9sIChDQkQpIGFuZCA5IHRldHJhaHlkcm9jYW5uYWJpbm9sIChUSEMpLCB0aGUgbWFpbiBjb25zdGl0dWVudHMgb2YgQ2FubmFiaXMgc2F0aXZhLCBoYXZlIHdlbGwgZG9jdW1lbnRlZCBpbW11bm9tb2R1bGF0b3J5IGVmZmVjdHMgaW4gdml0cm8gYW5kIGZvbGxvd2luZyBhZG1pbmlzdHJhdGlvbiBvZiBoaWdoIGRvc2VzIHRvIGFuaW1hbHMuIEhvd2V2ZXIsIHRoZXNlIGVmZmVjdHMgaGF2ZSBub3QgYmVlbiBjbGVhcmx5IGV2aWRlbnQgaW4gaHVtYW5zIGZvbGxvd2luZyBvcmFsIGFkbWluaXN0cmF0aW9uIG9mIGNhbm5hYmlub2lkcywgcHJvYmFibHkgZHVlIHRvIGxvdyBzeXN0ZW1pYyBiaW9hdmFpbGFiaWxpdHkuIApTYXcgb25lIG9mIG15IGZhdm9yaXRlIERKIGF0IGEgZmVzdGl2YWwgb25lIHRpbWUgYW5kIEkgd2FzIHByZXR0eSBidXp6ZWQgYnV0IGFsc28gZXh0cmVtZWx5IGhhcHB5IEkgd2FzIGp1c3QgdGhlcmUgd2l0aCBteSBncm91cCBvZiBmcmllbmRzIGVuam95aW5nIGxpZmUgYW5kIGhhbGYgb2YgdGhlbSBkaWRuIGxpa2UgdGhlIERKIGJ1dCB3ZW50IHRvIHRoZSBzZXQganVzdCBjdXogdGhleSBrbmV3IGl0IHdhcyBvbmUgb2YgbXkgZmF2b3JpdGVzLiBIZSBwbGF5ZWQgdGhpcyBzb25nIGFuZCBJIGp1c3QgaHVnZ2VkIHRoZSBmcmllbmQgY2xvc2VzdCB0byBtZSBhbmQgdGhlIG90aGVycyBqdXN0IGtpbmRhIGpvaW5lZCBpbiBhIGJpZyBncm91cCBodWcgYnV0IGl0IGNhdXNlZCBvdGhlciBwcGwgdG8gam9pbiBpbiBvbiB0aGlzIGdyb3VwIGh1ZyBzbyBpdCB0dXJuZWQgb3V0IGh1Z2UuIE1vbWVudHMgbGlrZSB0aGF0IG1ha2UgbWUgaGFwcHkKRmZvciBlICQgdiAgPiBkb1RoaXMgdGFrZXMgYW55IEV2ZW50IGUsIGFuZCBnaXZlcyB5b3UgYW4gYXBwcm94aW1hdGlvbiBvZiB3aGF0IHRoZSByZXN1bHQgb2YgYXR0YWNoIGN1cnJlbnRUaW1lIGUgd291bGQgaGF2ZSBiZWVuLCB3aXRoIHRoZSBjYXZlYXQgdGhhdCB0aGUgcmVzdWx0aW5nIEV2ZW50IGFjdHVhbGx5IGZpcmVzIHNsaWdodGx5IGxhdGVyIHRoYW4gdGhlIG9yaWdpbmFsLCBhbmQgdGhpcyBvcGVyYXRpb24gaXNuIHB1cmUsIHNvIGlmIHlvdSBkbyBpdCBtdWx0aXBsZSB0aW1lcyB0byB0aGUgc2FtZSBpbnB1dCBldmVudCwgeW91IGdldCBkaWZmZXJlbnQgcmVzdWx0cyAoaXQgZ29pbmcgdG8gcnVuIHRoZSBnaXZlbiBJTyBhY3Rpb24gdG8gZ2V0IHRoZSBjdXJyZW50IHRpbWUgb24gZWFjaCBmaXJpbmcsIGFuZCBmaXJlIHRoZSByZXN1bHRpbmcgZXZlbnQgYXMgc29vbiBhcyBpdCBmaW5pc2hlcykuIApIZSBtaWdodCB0YWtlIGl0IGFzIHRoZSBqb2tlIGJlaW5nICJoYWhhIGhvdyBjb3VsZCB5b3UgcG9zc2libHkgdGhpbmsgeW91IGFzIGdvb2QgbG9va2luZyBhcyBhIGNlbGVicml0eSEiLiAKTWFueSBwcml6ZXMgd2VyZSBhd2FyZGVkdGhyb3VnaG91dCB0aGUgZGF5IGFzIHdlbGwgc28gbmVhcmx5IGV2ZXJ5Ym9keSB3YXMgYWJsZSB0byB3aW4gc29tZXRoaW5nLgpJIG9uIGJvYXJkIHRoZSBzaG9ydCBkZWNrIGh5cGUgdHJhaW4uClRvIHB1cmNoYXNlIE9qbmVEcml2ZSBzcGFjZSBJIG5lZWQgYmFzaWNhbGx5IG5vdGhpbmcuIEZyb20gd2hhdCBJIGNhbiB0ZWxsIHRoZSBzcGFjZSB5b3UgcHVyY2hhc2luZyBvciBzZWxsaW5nIGlzIHNwYWNlIG9uIHNhaWQgInViYmV5IGJveCIgZHJpdmVzIG5vPyBXaGF0IGVuc3VyZXMgdGhlcmUgZXZlbiBzcGFjZSBmb3IgbWUgdG8gcHVyY2hhc2UgaWYgbm9ib2R5IGJ1eXMgb25lIG9mIHRoZXNlLiBIb3cgbXVjaCBjYW4gSSBldmVuIHNlbGwgbXkgc3BhY2UgZm9yPyBJIGhhdmUgdG8gc2VsbCBhIHdob2xlIGxvdCBvZiBzcGFjZSB0byBtYWtlIGJhY2sgdGhpcyAyMDAkLgpBbG1vc3QgZXZlcnlvbmUgZ29lcyB0aHJvdWdoIHdpdGhkcmF3YWxzIGZyb20gdGhlaXIgZmlyc3Qgc2V4dWFsIHBhcnRuZXIgb3IgZmlyc3QgbG92ZS4gClRoZSBmb3JtZXIgRGFsbGFzIENvd2JveXMgY2hlZXJsZWFkZXIgKFdoeSwgd2hhdCBlbHNlIGlzIHNoZSBmYW1vdXMgZm9yPykgZGF6emxlZCBhbmQgZGVsaWdodGVkIG9uY2UgYWdhaW4gd2l0aCB0b25pZ2h0J3MgZm94IHRyb3QuIAo2LiBQbGFuIGFuZCBjYXJyeSBvdXQgYSBncmFuZCBvcGVuaW5nIG1hcmtldGluZyBjYW1wYWlnbiB0byBoZWxwIGdldCB5b3VyIG1hc3NhZ2UgYnVzaW5lc3Mgb2ZmIHRvIGEgZ29vZCBzdGFydC4gRXZlbiBpZiB5b3Ugb25seSBoYXZlIGEgdmVyeSBsaW1pdGVkIGFkdmVydGlzaW5nIGJ1ZGdldCwgeW91IGNhbiBhdCBsZWFzdCBwdXQgdXAgYSB3ZWJzaXRlIGFuZCBhIEZhY2Vib29rIHBhZ2UgYW5kIGRvIGEgbGl0dGxlIHRhcmdldGVkIHJhZGlvIG9yIEludGVybmV0IGFkdmVydGlzaW5nLiBZb3UgY2FuIGV2ZW4gY29uc2lkZXIgY291cG9ucyBvciBnaXZpbmcgZmlyc3QgdGltZSBoYWxmIHByaWNlIGRpc2NvdW50cyBvciBldmVuIGZyZWUgZmlyc3QgbWFzc2FnZXMsIGJ1dCBtYWtlIHN1cmUgdGhlIHRlcm1zIG9mIHRoZSBvZmZlciBhcmUgdmVyeSBjbGVhciB0byBhdm9pZCBjdXN0b21lciBjb21wbGFpbnRzLiBIZSBoYXMgd3JpdHRlbiBhbmQgZWRpdGVkIGV2ZXJ5dGhpbmcgZnJvbSBzY2llbmNlIGZpY3Rpb24gdG8gc2VtaWNvbmR1Y3RvciBwYXRlbnRzIHRvIGRpc3NlcnRhdGlvbnMgaW4gbGluZ3Vpc3RpY3MsIGhhdmluZyB3b3JrZWQgZm9yIEhvbHQsIFJpbmVoYXJ0IFdpbnN0b24sIFN0ZWNrIFZhdWdobiBhbmQgVGhlIFBzeWNob2xvZ2ljYWwgQ29ycC4gQnJvd25lIGhhcyBhIE1hc3RlciBvZiBTY2llbmNlIGluIGxpbmd1aXN0aWMgYW50aHJvcG9sb2d5IGZyb20gdGhlIFVuaXZlcnNpdHkgb2YgV2lzY29uc2luIE1pbHdhdWtlZS4KWWVzdGVyZGF5IEkgY3JpZWQuIAoiSXQgd291bGQgYmUgYSBmb2xseSB0byBleHBlbmQgdGhlIG1vbmV5IGFuZCByZXNvdXJjZXMgb24gc3RhcnRpbmcgdGhlIHRyaWFsIGlmIGl0IHdhcyBvbmx5IGdvaW5nIHRvIGJlIGN1dCBoYWxmd2F5IHRocm91Z2ggYnkgYW4gaW5jb21pbmcgQ29hbGl0aW9uIGdvdmVybm1lbnQsIiBNciBIb3VzZSBzYWlkLgoxIHBvaW50ICBzdWJtaXR0ZWQgMyBtb250aHMgYWdvClRoZXJlIGEgbG90IG9mIGFkdmljZSBmbG9hdGluZyBhcm91bmQgb3V0IHRoZXJlIGFib3V0IGhvdyB0byBtYW5hZ2UgeW91ciBjcmVkaXQgY2FyZHMgYW5kIG90aGVyIGRlYnRzIHRvIG1heGltaXplIHlvdXIgY3JlZGl0IHNjb3JlLiBUaGUgdHJvdWJsZSBpcywgbm90IGFsbCB0aGlzIHdpc2RvbSBpcyBjcmVhdGVkIGVxdWFsLCBhbmQgc29tZSB0aXBzIGludGVuZGVkIHRvIGhlbHAgeW91ciBjcmVkaXQgY2FuIGFjdHVhbGx5IGhhdmUgdGhlIG9wcG9zaXRlIGVmZmVjdC4gSGVyZSBhcmUgc2V2ZW4gc3VwcG9zZWRseSB0aXBzIHdlIGhlYXJkIGJhbmRpZWQgYWJvdXQgcmVjZW50bHkgdGhhdCBnZW5lcmFsbHkgb3VnaHQgdG8gaWdub3JlZC4KU3RvbGUgbXkgaWRlbnRpdHksIGEgcGllY2Ugb2YgbWUsIGFuZCBzY2FyZWQgbWUgdG8gZGVhdGgsIGEgZmVhciB0aGF0IHdpbGwgYWx3YXlzIHN0YXkgd2l0aCBtZSwgQW5kZXJzb24gc2FpZCBpbiBoZXIgdmljdGltIGltcGFjdCBzdGF0ZW1lbnQuIEluZmxpY3RlZCBub3Qgb25seSBwaHlzaWNhbCBwYWluIGJ1dCBsYXN0aW5nIGVtb3Rpb25hbCB0cmF1bWEgdGhhdCB3aWxsIHByb2JhYmx5IHNjYXIgbWUgZm9yIGxpZmUuIApNYW55IG9mIHRoZWlyIGRlc2NlbmRhbnRzIHN0aWxsIGxpdmUgaGVyZSBhbmQgeW91IGNhbiBsZWFybiBhYm91dCB0aGVtIGF0IHRoZSBhZm9yZW1lbnRpb25lZCBVbmRlcndvb2QgSG91c2UuLiAKSSBiZWxpZXZlIHRoYXQgbW9zdCBzaXRlcyBhcmUgZGlzaG9uZXN0LiAKQWZ0ZXIgYWxsLCB0aGlzIHdhcyBhIHBlcnNvbiAicHJpdmF0ZSIgbGlmZS4gClhjbGFtZSB1ClRoZSByZWFzb24gYmVpbmcgdGhleSBhbGwgbGFjayB0aGUgaGlnaCBUTVQgc3RhbmRhcmRzIG9mIGNoYXJpc21hLCBtYXJrZXRhYmlsaXR5LCBjcm9zcyBhcHBlYWwsIG9yIHBlcmNlaXZlZCB3ZWFrbmVzcy4gCkluIHN1Y2ggaW5zdGFuY2VzLCB0aGUgc3RhZmYgbWVtYmVyIGlzIGVuY291cmFnZWQgdG8gbWFrZSBhIHJlcG9ydCBvciBhc3Npc3QgdGhlIHN0dWRlbnQgdG8gbWFrZSBhIHJlcG9ydCBhcyBvdXRsaW5lZCBvbiB0aGUgU2FmZXIgQ2FtcHVzIENvbW11bml0eSB3ZWJzaXRlLiAKMTAuNSIgaVBhZCBQcm86IEFjdHVhbGx5IG5vIGNvbXBsYWludHMgaGVyZS4gSSByZWFsbHkgd2FudCB0aGUgbmV3IGlQYWQgUHJvLCBidXQgSSdtIGdvaW5nIHRvIGhvbGQgb3V0LgpJIGFscmVhZHkgaGl0IDIxMCBvbiBteSBtYWluIGFuZCBhbSBhbG1vc3QgYXQgMjAwIEFyY2FuZSBGb3JjZS4gTXkgbGVnaW9uIGlzIGEgYml0IHJlc3RyaWN0ZWQgZHVlIHRvIG9ubHkgaGF2aW5nIDExIGNoYXJhY3RlciBzbG90cyByaWdodCBub3cgKHRob3VnaCB0aGUgZ3VhcmFudGVlZCBtb250aGx5IG9uZSBmcm9tIGRhaWx5IGdpZnQgbm93IGlzIGdvaW5nIHRvIGhlbHApLCBidXQgYWxyZWFkeSBJIGF0IDE5MDArIGxlZ2lvbiBsZXZlbHMuIApHb29kIHN1bW1hcnkgb2YgdGhlIGxpbWl0YXRpb25zLiBXaGlsZSBJIHRoaW5rIG1ha2luZyBUeXBlU2NyaXB0IGVhc2llciB0byBhZG9wdCBpcyBncmVhdCwgSSBub3QgY29udmluY2VkIGEgZ2ltcGVkIGNvbXBpbGVyIGluIEJhYmVsIHdhcyB0aGUgcmlnaHQgYXBwcm9hY2gsIGJlY2F1c2UgaXQgZ29pbmcgdG8gYmUgdGhlIG9wdGlvbiBtYW55IGNsaWVudCBzaWRlIHByb2plY3RzIGRlZmF1bHQgdG8uClN0dWRlbnRzIHJlY2VpdmVkIGNoaXBzIGFuZCBwbGF5ZWQgY2FzaW5vIGdhbWVzIGxpa2UgYmxhY2tqYWNrIGFuZCBjcmFwcy4gd2FzIHJlYWxseSBhc3RvbmlzaGVkIGF0IGhvdyB3ZWxsIHRoZXkga25ldyB0aGUgc2FpZCB0aGUgcHJpbmNpcGFsLiBIZSBzYWlkIGhlIGJlbGlldmVkIHRoYXQgZ2FtICBibGluZyBoYWQgY2FwdHVyZWQgdGhlIGZhbmN5IG9mIHlvdW5nIHBlb3BsZSBiZWNhdXNlIGl0IG1hZGUgdGhlbSBmZWVsIGxpa2UgYWR1bHRzLiBndWVzcyBpdCdzIGEgbmljZSBmZWVsaW5nIHRvIGdvIGludG8gdGhlIHBsYXkgYW5kIHJlY2VpdmUgY29tcGxpbWVudGFyeSBoZSBzYWlkLiAKQ29tcGxhaW50OiBJIGh1cnQgbXkgcmlicyBsYXN0IHdlZWsgYW5kIGl0IGhhcyBiZWVuIHNsb3dseSBnZXR0aW5nIGJldHRlciBidXQgeWVzdGVyZGF5IEkgc25lZXplZCBhbmQgb2ggYm95LiBUaGF0IHdhcyBhIHRlcnJpYmxlIGV2ZW50LiBUaGUgcGFpbiBpcyBub3cgd29yc2UgdGhhbiBpdCBldmVyIHdhcyBhbmQgSSBzdXBwb3NlZCB0byBnbyBvbiB2YWNhdGlvbiB0b2RheS4gSSBjYW4gYnJlYXRoZSB3aXRob3V0IGlzc3VlIHNvIGl0IGEgY2xpbmljIGluIHRoZSBtb3JuaW5nIGZvciBtZS4KMTQgc29uIG9mIG1hbiwgcHJvcGhlc3kgYW5kIHNheSB0byBHb2csIHNheXMgdGhlIExvcmQgdGhhdCBkYXkgd2hlbiBNeSBwZW9wbGUgSXNyYWVsIGR3ZWxsIHNhZmVseSwgd2lsbCB5b3Ugbm90IGtub3cgeW91IHdpbGwgY29tZSBmcm9tIHlvdXIgcGxhY2Ugb3V0IG9mIHRoZSBmYXIgbm9ydGgsIHlvdSBhbmQgbWFueSBwZW9wbGVzIHdpdGggeW91LCBhbGwgb2YgdGhlbSByaWRpbmcgb24gaG9yc2VzLCBhIGdyZWF0IGNvbXBhbnkgYW5kIGEgbWlnaHR5IGFybXkuIFdpbGwgY29tZSB1cCBhZ2FpbnN0IE15IHBlb3BsZSBJc3JhZWwgbGlrZSBhIGNsb3VkLCB0byBjb3ZlciB0aGUgbGFuZC4gSXQgd2lsbCBiZSBpbiB0aGUgbGF0dGVyIGRheXMgdGhhdCBJIHdpbGwgYnJpbmcgeW91IGFnYWluc3QgTXkgbGFuZCwgc28gdGhhdCB0aGUgbmF0aW9ucyBtYXkga25vdyBNZSwgd2hlbiBJIGFtIGhhbGxvd2VkIGluIHlvdSwgTyBHb2csIGJlZm9yZSB0aGVpciBleWVzLiAKSWYgSSBkaWRuIGhhdmUgYSBkZWZhdWx0IGJyb3dzZXIgKEZpcmVmb3gvQ2hyb21lKSwgdGhlbiBKYXZlbGluIGNvdWxkIHF1aXRlIHBvc3NpYmx5IGJlIHRoZSBiZXN0IGJyb3dzZXIgb24gdGhlIFBsYXkgU3RvcmUuIEhvd2V2ZXIsIEkganVzdCBuZWVkIEphdmVsaW4gU3RhY2sgYW5kIG5vdCBKYXZlbGluIEJyb3dzZXIuIFRoYW5rcyBmb3IgdGhlIHJlY29tbWVuZGF0aW9uLiAKQ29sZCBXYXIgMi4wCkxvcmV0dGEgQ2lyYWxkbyBhZ3JlZXMgdGhhdCBsb3Rpb25zIGFyZW4ndCB0aGUgYmVzdCBpbiBmbGlnaHQgc2tpbiBzYXZpb3IuIEluc3RlYWQsIHNoZSdkIGxpa2UgdG8gc2VlIHBlb3BsZSBjb3ZlcmluZyB1cCBtb3JlIHRob3JvdWdobHkgdG8gYXZvaWQgaW4gZmxpZ2h0IGRlaHlkcmF0aW9uLiAiSSByZWNlbnRseSBmbGV3IGZyb20gTWFzc2FjaHVzZXR0cyB0byBNaWFtaSwgYW5kIGhhbGYgdGhlIHBlb3BsZSB3ZXJlIGluIHNob3J0cywiIHNoZSBzYXlzLiAKQSBsJ29yaWdpbmUsIHVuIGJlc29pbiBzaW1wbGUuIERlcyBtaWxsaW9ucyBkZSBtbmFnZXMgcGF1dnJlcyBjaGVyY2hlbnQgIGFjcXVyaXIgdW4gbG9nZW1lbnQgc2FucyBlbiBhdm9pciBsZXMgbW95ZW5zLiAKSSB3YW50ZWQgdG8gZ2l2ZSBoZXIgYSBoaWdoZXIgc2NvcmUsIGJ1dCB0aGUgb25seSByZWFzb24gSSBzY29yZWQgYXMgaGlnaCBhcyBJIGhhdmUgaXMgYmVjYXVzZSBvZiBoZXIgeW91dGggYW5kIGFwcGVhcmFuY2UgbmFrZWQuIApOZXZlclNheUlDYW50ICAzIHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvCkVpdGhlciB3YXkgd2UgbG9zZSBoYXJkLCBidXQgaXQgc2VlbXMgSGFydWhpIGZhbnMgd2lsbCBiZSBzb3JlIHRvZGF5Lkpvc2VwaCB3b24hIEhpcyBuZXh0IHR3byBtYXRjaHVwcyBhcmUgZ29pbmcgdG8gYmUgcHJldHR5IG51dHMgaG93ZXZlciwgR2Vub3MgYW5kIHRoZW4gZWl0aGVyIEFsbCBNaWdodCBvciBLaXJpdHN1Z3UgKEkgYmV0dGluZyBBbGwgTWlnaHQpLiAKSSBhZ3JlZSB0aGF0IGJ1c2luZXNzZXMgc2hvdWxkIHBheSB0aGUgbGVhc3QgYW1vdW50IHRheGVzIHBvc3NpYmxlLCBidXQgdGhlIHRheCBjb2RlIG5lZWRzIHRvIGJlIG1vZGlmaWVkIHRvIGFmZmVjdCBhbGwgYnVzaW5lc3NlcyBlcXVhbGx5LiAKRm9yIHlvdXIgc2Vjb25kIHBhcmFncmFwaCwgY29uc2lkZXIgdGhlIGFsdGVybmF0aXZlLiBJZiB3ZSBzYXkgdGhhdCBhIHBlcnNvbiBsZXZlbCBvZiBtb3JhbGl0eSBpcyBkZXRlcm1pbmVkIG5vdCBieSB0aGUgZGVncmVlIHRvIHdoaWNoIHRoZXkgZmFsbCBzaG9ydCBvZiB0aGVpciBtYXhpbXVtIHBvdGVudGlhbCBjb250cmlidXRpb24sIGJ1dCBpbnN0ZWFkIGJ5IHRoZSBzaXplIG9mIHRoZWlyIGNvbnRyaWJ1dGlvbiBpbiBhYnNvbHV0ZSB0ZXJtcywgaXNuIHRoYXQgdG8gc2F5IHRoYXQgaXQgaXMgZWFzaWVyIHRvIGJlIG1vcmFsIGlmIG9uZSBpcyBwb3dlcmZ1bCwgYW5kIGFzIGEgY29yb2xsYXJ5IHRoYXQgdGhlIHBvd2VybGVzcyBhcmUgbW9yYWxseSBpbmZlcmlvciBzaW5jZSB0aGV5IGRvIG5vdCAoYW5kIGNhbm5vdCkgbWFrZSBhIG1lYW5pbmdmdWwgZGlmZmVyZW5jZT8KSG93IGRvIHlvdSBjaGVhdCBhdCBhIGdhbWUgb2YgUG9rZXIKRG96ZW5zLiAKTmV4dCBpbiB0aGUgb3JkZXIgb2YgcG9rZXIgaGFuZHMgaXMgYSBTdHJhaWdodC4gQSBTdHJhaWdodCBpcyBhIHNlcmllcyBvZiBmaXZlIGNvbnNlY3V0aXZlIGNhcmRzIG9mIGFueSBzdWl0LCBmb3IgZXhhbXBsZSA5IDEwIEogUSBLLiAKWW91IGFyZSByaWdodCBpbiBzYXlpbmcgdGhlIHByb2JsZW1zIHdpdGggdGhlIGNvbW11bml0eSBhcmUgdGhlIHN5bXB0b21zIGFuZCBub3QgdGhlIGNhdXNlLiAKVGhpcyBicmluZ3MgdGhlIHRvdGFsIHN1bSByYWlzZWQgZm9yIGxvY2FsIGNoYXJpdHk7IHRoZSBKaW0gQnJ1Y2UgVXJvbG9neSBhbmQgUHJvc3RhdGUgQ2FuY2VyIFRydXN0IGZyb20gdGhlc2UgZXZlbnRzIHRvIG92ZXIgJDEwMCwwMDAuIFRydXN0ZWVzIG9mIHRoZSBKaW0gQnJ1Y2UgVHJ1c3QgdXNlZCB0aGUgZnVuZHJhaXNpbmcgZXZlbnQgYXMgYW4gb3Bwb3J0dW5pdHkgdG8gc2hvdyBvZmYgdGhlIG5ld2x5IGJyYW5kZWQgSmltIEJydWNlIFRydXN0IHZlaGljbGUuIApBbHNvIGJlaW5nIHZlcnkgY3JlYXRpdmUgYW5kIGV4cHJlc3NpdmUgd2l0aCB3aGF0IHlvdSBkb2luZy4gSSBjb25uZWN0ZWQgdG8gdGhhdC4gCk9yIGF0IHRoZSB2ZXJ5IGxlYXN0LCB0aGV5IHdvdWxkbiB1c2UgaXQgaW4gc3VjaCBhIHdheSB0aGF0IHNvbWUgcmFuZG9tIGNpdmlsaXphdGlvbiBpbiB0aGUgbWlsa3kgd2F5IGJvb25pZXMgaXMgZ29pbmcgdG8gcGljayBpdCB1cCBvbiBhIHJhbmRvbSBza3kgc3VydmV5Li4gCidNb29yZSdzIGxhdycgc2F5cyB0aGF0IHRoZSBudW1iZXIgb2YgdHJhbnNpc3RvcnMgb24gYSBjaGlwIHdpbGwgYXBwcm94aW1hdGVseSBkb3VibGUgZXZlcnkgMTggbW9udGhzLiBUaGlzIGhhcyBiZWVuIHRoZSBjYXNlIGZvciBtYW55IHllYXJzLCBidXQgdGhpcyBsYXcgaXMgbm93IHN0YXRlZCBtb3JlIGdlbmVyYWxseSBhcyB0aGUgcHJvY2Vzc2luZyBwb3dlciBvZiBjb21wdXRlciBpbnRlZ3JhdGVkIGNpcmN1aXRzIChDUFVzKSBkb3VibGVzIGV2ZXJ5IDE4IG1vbnRocy4gVGhpcyBjYW4gYmUgc2VlbiBhcyBtdWx0aXBsZSBjb3JlcyBhcmUgYWRkZWQgdG8gQ1BVcywgYW5kIHRoZSBjYXBhYmlsaXR5IG9mIHN1cHBvcnRpbmcgY2lyY3VpdHJ5IChzdWNoIGFzIG1lbW9yeSBhbmQgYnVzIHNwZWVkKSBpbmNyZWFzZXMuIApBbmQgdGhleSBkb24gaGF2ZSB0byBzYXkgd2hhdCB0aGV5IGRlY2lkZWQgYmVjYXVzZSB3aGF0IHRoZXkgZGVjaWRlZCB3aWxsIGNoYW5nZSBhcyB0aGV5IGFnZS4gV2hlbmV2ZXIgdGhleSBoYXZlIGFueSBxdWVzdGlvbnMgeW91IHRlbGwgdGhlbSB3aGF0IHlvdSB0aGluayBhbmQgdGhlbiB5b3Ugc2F5IHlvdSBzaG91bGQgYWxzbyBnbyBhc2sgeW91ciBtb3RoZXIgY3V6IEkgYmV0IGhlciBvcGluaW9uIGRpZmZlcnMgZnJvbSBtaW5lLiAKRVhBQ1RMWSB0aGUgZnVja2luZyByZWFzb24gcGVkb3BoaWxpYSBpcyBhZ2FpbnN0IHRoZSBsYXcuCiJNeSBob2JieSBoYXMgbm93IGJlY29tZSBteSByZWFsIHBhc3Npb24sIGFuZCB0aGlzIGlzIGFzIGJpZyBhcyBpdCBnZXRzLCIgaGUgc2FpZC4gIlRoaXMgaXMgbGlrZSB0aGUgQXNoZXMgb2YgcG9rZXIsIG9yIHRoZSBXb3JsZCBDdXAuIApQb29yIEFtZXJpY2Fucywgd2hvIGFyZSBhbHNvIGRpc3Byb3BvcnRpb25hdGVseSBub253aGl0ZSBBbWVyaWNhbnMsIGhhZCBuZWl0aGVyIHRoZSB0aW1lLCB0aGUgbW9uZXksIG5vciB0aGUgZWR1Y2F0aW9uYWwgcmVzb3VyY2VzIHRvIHB1c2ggYmFjayB0aGUgd2F5IG1hbnkgbWlkZGxlIGNsYXNzIEFtZXJpY2FucyBkaWQuIFRoZSByZXN1bHQgaXMgdGhhdCBvYmVzaXR5IGlzIG5vdCByYW5kb21seSBkaXN0cmlidXRlZCB0aHJvdWdoIHRoZSBwb3B1bGF0aW9uLiBJbnN0ZWFkLCBvYmVzaXR5IGlzIGFib3V0IGNsYXNzICBhbmQgdGhlcmVmb3JlIHJhY2UuCkFsdGhvdWdoIGl0J3MgaW1wb3NzaWJsZSB0byBlbGltaW5hdGUgdGhlbSBhbHRvZ2V0aGVyLCB5b3UgY2FuIHNpZ25pZmljYW50bHkgcmVkdWNlIHlvdXIgaW50YWtlLgpNeSB2aWV3IGlzIHRoYXQgaWYgeW91IGFyZSBhZ3Jlc3NpbmcgeW91IG5lZWQgbGVzcyBza2lsbCB0byB0YWtlIHRoZW0gb3V0IHRoZW4gaWYgeW91IGFyZSBkZWZlbnNpdmUgYW5kIHRoZXkgYXJlIHRoZSBvbmVzIGNvbWluZyBmb3IgeW91ICh3aGljaCBpcyB3aGF0IHRlbmRzIHRvIGhhcHBlbiB3aXRoIGxlc3MgYWdncm8gcGxheWVycy9uZXdlciBwbGF5ZXJzKS4gVGhlIGJpZ2dlc3QgZGVjaWRpbmcgZmFjdG9yIGluIHRoaXMgZ2FtZSBpcyBpbiBteSBvcGluaW9uIHN1cHJpc2UsIGdldCBhIGdvb2Qgb3BlbmVyIGJ5IGJlaW5nICJzdHVwaWRseSIgYWdncm8gYW5kIHlvdSBjYW4gMXYzIGEgc3F1YWQgYmVmb3JlIHRoZXkgcmVhbGx5IHJlYWxpemUgd2hhdCBnb2luZyBvbi4uIApPYmVzaXR5IGFuZCBzaG9ydG5lc3MgYXJlIHNvY2lldHkgd2lkZSBtZWFzdXJlbWVudHMsIG5vdCByZWZsZWN0aW9ucyBvZiBpbmRpdmlkdWFsIHZpcnR1ZSBvciBnb29kIGhlYWx0aC4gCkl0IHRoZSBzdGFuZGFyZCByaWdodCB3aW5nIGFjY3VzYXRpb24gYXMgY29uZmVzc2lvbiB0aGluZy4gSWYgeW91IGNhcmUgYWJvdXQgc29tZXRoaW5nLCByZWFjdGlvbmFyaWVzIGFzc3VtZSB0aGUgb25seSByZWFzb24geW91IGNvdWxkIHBvc3NpYmx5IGNhcmUgaXMgYmVjYXVzZSB5b3Ugc3RhbmQgdG8gZ2FpbiBhbmQgeW91ciBlbmVtaWVzIHN0YW5kIHRvIGdldCBodXJ0ICAgYmVjYXVzZSB0aGF0IHRoZSBvbmx5IHJlYXNvbiB0aGV5IGNhbiBiZSBhcnNlZCB0byBjYXJlIGFib3V0IGFueXRoaW5nLiBUaGUgY29uY2VwdHMgb2YganVzdGljZSBvciBldGhpY3MgY29tcGxldGVseSBwYXNzIGJ5IHRoZW0sIHRvdGFsbHkgYWxpZW4gdG8gdGhlaXIgdW5pdmVyc2UuCkNsa291ICAwIHBvaW50cyAgc3VibWl0dGVkIDIgbW9udGhzIGFnbwpUaGVyZSBpcyBhIHJlbGF0aXZlbHkgbGFyZ2UgcG9wdWxhdGlvbiBvZiBjaGlsZHJlbiBvZiBmb3JlaWduIG9yIG1peGVkIGtvcmVhbiBkZWNlbnQgd2hvIGdvIHRvIHRoZSBuZWFyYnkgWW9uZyBtb29uIGVsZW1lbnRhcnkgb3IgR3dhbmdhbiBFbGVtZW50YXJ5LiAKVGhpbmdzIFdyaXR0ZW4gYnkgRG91Z2xhcyBBZGFtcyBFbHNld2hlcmUgb24gdGhlIFdlYkhvdyB0byBTdG9wIFdvcnJ5aW5nIGFuZCBMZWFybiB0byBMb3ZlIHRoZSBJbnRlcm5ldFdoYXQgaGF2ZSB3ZSBnb3QgdG8gbG9zZT8KV2VhciB0aGUgcGFudHMuIEEgbWFuLiAKU2hlIG9ubHkgZnJlYWtzIG91dCBpZiB5b3UgdHJ5IGFuZCBwaWNrIGhlciB1cCBhbmQgd2lsbCBjYWxtIGRvd24gYW5kIGxlYW4gaW50byB5b3Ugb25jZSBzaGUgdW5kZXJzdGFuZHMgc2hlIGlzbid0IGdvaW5nIHRvIGRpZS4gCkltIEp1bmkgMjAxNSBiZXJuYWhtIHNpZSBkYXMgUHJzaWRpdW0gbWl0IENFTyBGdW5rdGlvbmVuLCBhbiBpaHJlciBTZWl0ZSBhbHMgVml6ZXByc2lkZW50ZW4gRHIuIEJlYSBXZXR0c3RlaW4gdW5kIERyLiBDaHJpc3RpYW4gQ2hlcnZldCAoYmlzaGVyKS4KSSBtb3JlIHRoYW4gcGFpZCBmb3IgbXkgdHJpcCB3aXRoIGEgdGlkeSBwcm9maXQgbGVmdG92ZXIuIFRoZSBwb2tlciByb29tIHdhcyBuaWNlIGFuZCBoYWQgYSB0b24gb2YgdGFibGVzIGFuZCBhdCB0aW1lcyB0aGV5IHdlcmUgYWxsIGluIHVzZS4gClN0YXJ0IGdlbnRseSBhbmQgZXNjYWxhdGUgeW91ciB3b3Jrb3V0IHNsb3dseS4gCkV2ZW4gaWYgeW91IGFkZCBlbWJyb2NhdGlvbiBhbmQgZ3JlYXNlIGZvciByYWluIGRheXMgSSBmaW5kIGl0IGhhcmQgdG8gaW1hZ2luZSBqdXN0IGRyb3BwaW5nIGluLiBXaGF0IGFib3V0IGEgdGVhbT8gSXMgdGhlcmUgYSBjbHViIG9yIHRlYW0gdGhhdCByZWd1bGFybHkgcmFjZXMgaW4geW91ciBhcmVhPyBnbyB0byB0aGVtIGFzIGEgY2x1YiBzZXJ2aWNlLiBIb3cgbXVjaD8gTmVhcmx5IG5vdGhpbmcgYXQgZmlyc3QuIApJZiB5b3UgaGF2ZSB0aGUgJDEwMDAgaW4gYW4gZW1lcmdlbmN5IGZvdW5kIEkgd291bGQgZ28gYWhlYWQgYW5kIGRvIHRoYXQgYnV0IGlmIHlvdSBkb24gU1RJQ0sgVE8gV0hBVCBZT1UgSEFWRS4uIApOYXBzIHdvbiB0aGUgdG9zcyBhbmQgZWxlY3RlZCB0byBzdGFydC4gQSA1MSBzdGFydCB3YXMgbm90IHdoYXQgdGhleSB3YW50ZWQsIGJ1dCB0aGUgV2FuZGVyZXJzIGNvdWxkIG5vdCBjYXBpdGFsaXNlIGFzIHRoZWlyIGZpcnN0IGhhbmQgb2YgNTggY291bGQgb25seSBwdWxsIDcuIApOb3QgdG9vIHN1cmUgd2hhdCB5b3UgYXJlIGdldHRpbmcgYWxsIHdvdW5kIHVwIGFib3V0LiBJIHByZXR0eSBzdXJlIHRoYXQgaXMgdGhlIHJlYXNvbiBmb3IgYWxsIHRoZSBkb3duIHZvdGVzLiBZb3UgcHJldHR5IG11Y2ggc3VtbWVkIHRoZSB3aG9sZSBzaXR1YXRpb24gaW4geW91ciBsYXN0IGxpbmUuICIgWW91IGNhbiB0cnksIGJ1dCBpdCB3aWxsIG5ldmVyIHNlbGwuIgpBbnkgZGlzY3Vzc2lvbiBvZiBtdXNjbGUgYnVpbGRpbmcgZm9vZHMgcmVxdWlyZXMgYSBzcG90bGlnaHQgb24gbWVhdC4gU3VyZSwgYWxsIHRlbiBmb29kcyBjb3VsZCBiZSBkZXJpdmVkIGZyb20gYW5pbWFscyAoYmVlZiwgYnVmZmFsbywgYmlzb24sIGVsaywgdmVuaXNvbiwgbGFtYiwgb3N0cmljaCwgdHVya2V5LCBmaXNoLCBhbmQgZWdncykgYnV0IHRoYXQgd291bGQgYmUgYm9yaW5nIGFuZCB1bnByYWN0aWNhbCBmb3IgbWFueSBvZiB5b3Ugd2hvIGFyZW4ndCBhdmlkIHdpbGQgZ2FtZSBodW50ZXJzLiBTdGlsbCwgdGhlcmUgaXMgYWJ1bmRhbnQgZXZpZGVuY2UgdGhhdCBtZWF0IHByb3ZpZGVzIGEgYmV0dGVyIHF1YWxpdHkgcHJvdGVpbiBmb3IgdGhlIGJvZHkgdG8gdXNlIGZvciBtdXNjbGUgYnVpbGRpbmcgYW5kIG9wdGltYWwgYW5hYm9saWMgaG9ybW9uZSBmdW5jdGlvbi4uIApFdCBjJ2VzdCBsIHF1ZSBqZSB2b2lzIHRvdXQgbCdpbnRydCBkZSBsYSBmbGV4aWJpbGl0LCBjJ2VzdCBxdSdlbGxlIHBlcm1ldCBkZSBkaXJlIG9rLCBqJ2FpIGVudmllIGRlIG1hbmdlciBjZSBndGVhdSBwYXJjZSBxdWUgaidlbiBhaSBlbnZpZSB2cy4gVG91ZmZleiBtb2kgY2V0dGUgbW90aW9uIHF1ZSBqZSBuZSBzYXVyYWlzIHJlc3NlbnRpci4gCk5hY2ggY2EuIApEb2VzbiByZWFsbHkgaGF2ZSBhbnl0aGluZyB0byBkbyB3aXRoIGFmZm9yZGFiaWxpdHksIGhlIHNhaWQuIFRvcm9udG8sIHlvdSBjYW4gaGF2ZSBwcmljZXMgaW4gbGluZSB3aXRoIGZ1bmRhbWVudGFscyBidXQgdGhhdCBkb2VzbiBtZWFudCB0aGF0IGFmZm9yZGFiaWxpdHkgaXNuIGEgY2hhbGxlbmdlLiBXaGF0IGl0IG1lYW5zIGlzIHRoYXQgdGhlcmUgaXMgYSByZWxhdGlvbnNoaXAgYmV0d2VlbiB0aGVzZSBmdW5kYW1lbnRhbHMgYW5kIHByaWNlcyB0aGF0IGNhbiBleHBsYWluIHRoZSBsZXZlbCBvZiBwcmljZXMuIG1vbnRoLCB0aGUgQ2FuYWRpYW4gUmVhbCBFc3RhdGUgQXNzb2NpYXRpb24gcmVwb3J0ZWQgdGhhdCBuYXRpb25hbCBob21lIHNhbGVzIHdlcmUgZG93biAxOSBwZXIgY2VudCBpbiBEZWNlbWJlciB5ZWFyIG92ZXIgeWVhciwgY2FwcGluZyBvZmYgdGhlIHdlYWtlc3QgYW5udWFsIHNhbGVzIGV2ZXIgcmVwb3J0ZWQgc2luY2UgMjAxMi4KU2FtZSB5b3VuZyBtZW4gd2hvIGltYWdpbmVkIEFtZXJpY2EgYXMgaGVyb2ljIGluIGFsbCB0aGluZ3MgIGZyb20gZm9vdGJhbGwgdG8gd2FyICBzdWRkZW5seSBsb29rZWQgbGlrZSB0aGV5IG1pZ2h0IGNyeS4gCjEwMCUgd2lsbCBuZXZlciBoYXBwZW4gaWYgQUNUIDIwIGFuZCBBQ1QgMjIgZXhpc3QuIFRob3NlIGluIHBvd2VyIHdvdWxkIG5lZWQgdG8gdGVhciBhIG9wZW4gYSBnYXBpbmcgaG9sZSBpbiB0aGVpciB0YXggcmV2ZW51ZXMgYnkgYWNjZXB0aW5nIElSUyB0YXggcnVsZXMgb3ZlciB0aGVpciBvd24gbG9jYWwgdGF4IHJ1bGVzICAgd2hpY2ggYXQgcHJlc2VudCBtZWFucyBVUyBtYWlubGFuZCBpbmNvbWUgaXMgdGF4ZWQgZmVkZXJhbGx5IGF0IDQlLiBXaGljaCBtZWFucyB0aG9zZSB3aG8gYXJlIGFibGUgdG8gc3BlbmQgMTgwKyBkYXlzIGEgeWVhciBpbiBTYW4gSnVhbiBhcmUgZG9pbmcgc28uCkVudHJlIEJlbGxldmlsbGUgZXQgTW5pbG1vbnRhbnQsIE1hdXJpY2UgQ2hldmFsaWVyIHJldHJvdXZlcmFpdCBzYW5zIGRvdXRlIGwnYW1iaWFuY2UgZGVzIGRidXRzIGR1IFhYZSBzaWNsZSwgbGVzIG1hdXZhaXMgZ2Fyb25zIGV0IGxhIHByb3N0aXR1dGlvbiwgdG91dCBlc3QgbCwgYXZlYyB1biBhdXRyZSBhY2NlbnQgcGV1dCB0cmUuIApJbnRlZ3JpdHkgaXMgcGFyYW1vdW50IHRvIGEgcHJvZml0YWJsZSBwb2tlciBzaXRlLiBUaGUgbW9yZSBwbGF5ZXJzIHRoYXQgdGhleSBjYW4gYXR0cmFjdCwgdGhlIHNhZmVyIHlvdXIgbW9uZXkgaXMgYW5kIGEgZ29vZCBwb2tlciBwbGF5ZXIgd2lsbCBvdmVyY29tZSB0aGUgc21hbGwgUmFrZSB0aGF0IHRoZXkgdGFrZSBmcm9tIHRoZSBwb3QuIFNvbWUgYWN0dWFsbHkgZWFybiBhIGdvb2QgbGl2aW5nIGJ5IGFwcGx5aW5nIHRoZWlyIHNraWxscyB0byB0aGUgZ2FtZS4gSWYgeW91IGNhbiB3aW4gYXQgYW4gb25saW5lIHBva2Vyc2l0ZSwgeW91IGFsc28gd29uIHdpbiBhdCBhIGJyaWNrIG1vcnRhciBjYXJkcm9vbS4KSGF2ZSB5b3UgcmVhZCBKb2huIFN0YWF0IFdvdyBEaWFyeT8gVGhlIGRldnMgYXJndWVkIGFib3V0IHdoaWNoIHN0eWxlIFdvVyBzaG91bGQgdXNlOyBpbml0aWFsbHkgdGhleSB3ZXJlIGdvaW5nIHRvIHVzZSBhIG1vcmUgcmVhbGlzdGljIHN0eWxlLiAKQWZ0ZXIgdGhlIGJyaW5lIHNvbWV0aW1lcyBJIGFwcGx5IGEgcnViLiBJZiB5b3UgYnJpbmUgbWFrZSBzdXJlIHRoZSBydWIgeW91IHVzZSBpcyBzYWx0IGZyZWUuCkkgdGhpbmsgZXNwZWNpYWxseSB3aGVuIGl0IGNvbWVzIHRvIHBhcmVudHMgZm9yY2luZyBraWRzIGludG8gYSBjZXJ0YWluIGxpZmVzdHlsZS4gSGUncyBhIGtpZCwgaGUgd2FudHMgdG8gdHJ5IG91dCBtZWF0IGFuZCBleHBlcmllbmNlIGl0IChiZXNpZGVzIHRoZSBmYWN0IGhlJ3MgZWF0aW5nIGl0IGF0IHNjaG9vbCBhbnl3YXkpLiBIZSBjbGVhcmx5IGhhcyBhYnNvbHV0ZWx5IG5vIGRlc2lyZSB0byBiZSB2ZWdhbi4gWWV0IGFzIE9QIGRlc2NyaWJlZCwgaGlzIHNpc3RlciB3b3VsZCBnZXQgaW5zYW5lbHkgbWFkIGlmIHRoZSBmb3VuZCBvdXQgaGVyIHNvbiBoYWQgYmVlbiBlYXRpbmcgbWVhdC4gU2hlIGlzIGJhc2ljYWxseSBwdXNoaW5nIGhlciBvd24gcG9saXRpY2FsIGFnZW5kYSBvbnRvIGhlciBjaGlsZCB3aGljaCBpcyBzb21ldGhpbmcgSSBwZXJzb25hbGx5IGNhbiBuZXZlciBnZXQgYmVoaW5kLiBJIGhvbmVzdGx5IHRoaW5rIGl0J3MgcGVyaGFwcyBldmVuIE9QcyByZXNwb25zaWJpbGl0eSB0byBpbnRlcnZlbmUgYW5kIHN0b3AgaGVyIG5lcGhldyBiZWluZyBpbmRvY3RyaW5hdGVkIGxpa2UgdGhpcy4gQWxzbyBvbiB0b3Agb2YgdGhhdCByYWlzaW5nIGEga2lkIChmcm9tIGJpcnRoKSBzdHJpY3RseSB2ZWdhbiBpcyB2ZXJ5IHVuaGVhbHRoeSBzaW5jZSBmb3IgcHJvcGVyIGdyb3d0aCB0aGV5IHNpbXBseSBhbHNvIG5lZWQgc29tZSBhbmltYWwgcHJvZHVjdHMuIE9QIGlzIG5vdCBwdXR0aW5nIHRoZSBraWQgYXQgcmlzayBhdCBhbGwgaGUncyByYXRoZXIgaW50cm9kdWNpbmcgaGltIHRvIHNvbWV0aGluZyBoZSBzaG91bGQgaGF2ZSBiZWVuIGludHJvZHVjZWQgdG8geWVhcnMgYWdvLiBJIHRoaW5rIGl0J3MgdmVyeSBpbXBvcnRhbnQgdG8gZ2l2ZSBraWRzIHRoZSBjaGFuY2UgdG8gbWFrZSB0aGVpciBvd24gZGVjaXNpb25zIGFuZCBpZiB3ZSB3ZXJlIHRvIGp1c3QgYmxpbmRseSBmb2xsb3cgZXZlcnkgcnVsZSBPUHMgc2lzdGVyIGxhaWQgb3V0LCB0aGUga2lkIHdvdWxkbid0IHJlYWxseSBoYXZlIGEgd2F5IG9mIGRlY2lkaW5nIGZvciBoaW1zZWxmIHdoYXQgaGUgd2FudHMsIHNpbmNlIGhpcyBtdW0gb2J2aW91c2x5IGRvZXNuJ3Qgc3VwcG9ydCBoaW0gZnJlZWx5IGNob29zaW5nIGF0IGFsbC4KQXMgYSBLb3JlYW4gQW1lcmljYW4gSSB0cnkgcmVhbGx5IGhhcmQgbm90IHRvIHVzZSBhIGRlc2NyaXB0b3IgZm9yIHRoZSBTb3V0aC4gSXQgS29yZWEgYW5kIE5vcnRoIEtvcmVhIGFuZCBpZiBJIGFic29sdXRlbHkgaGF2ZSB0byBzYXkgc29tZXRoaW5nIHRoYXQgZGlzdGluZ3Vpc2hlcyB0aGVtIEkgc2F5IHRoZSBST0suIEFzIGZvciBhY3R1YWxseSBhbnN3ZXJpbmcgeW91ciBxdWVzdGlvbjogbXkgZ28gdG8gcmVzcG9uc2UgaXMgZWl0aGVyOiAiYXJlIHlvdSBzZXJpb3VzPyIgT3IgIkkgY2FuIHRlbGwgaWYgeW91IGJlaW5nIHNlcmlvdXMuIiBTb21ldGhpbmcgbGlrZSB0aGF0LiAKUmVhZCBtb3JlOiBXb2xsb25nb25nIE5vIDcgb24gYmlnZ2VzdCBsb3NlciBsaXN0IExlYWQgcmVzZWFyY2hlciBhbmQgRGVha2luIFBoRCBzdHVkZW50IEFteSBCZXN0bWFuIHNhaWQgY2hpbGRyZW4gb3ZlcndoZWxtaW5nbHkgZm9jdXNlZCBvbiB0aGUgcGVyY2VpdmVkIHBvc2l0aXZlcyBvZiBwb2tpZXMgIHdpbm5pbmcgYW5kZnVuICB3aXRob3V0IHVuZGVyc3RhbmRpbmcgdGhlIHJpc2tzLiBTaGUgc2FpZCBkdXJpbmcgdGhlIGludGVydmlld3MsIHdpbm5pbmcgd2FzIG9mdGVuIGRlc2NyaWJlZCBhcyBhIGNlcnRhaW50eS4gRm9yIGV4YW1wbGUsIGEgMTQgeWVhciBvbGQgYm95IGRlc2NyaWJlZCBwb2tpZXMgYXMgYmVpbmcgdXNlZCBieSBhZHVsdHMgYXMgYSB3YXkgdG8gJydlYXJuIG1vbmV5JycsIHdoaWxlIGEgMTB5ZWFyIG9sZCBzdGF0ZWQgdGhleXdlcmUgdXNlZCB0byAnJ2dpdmUgdGhlIGZhbWlseSBtb25leScnLiAKQWRkaXRpb25hbGx5LCBzaG93aW5nIHRoYXQgZmFpbHVyZXMgYXJlIG5vdCBkaXNhc3RlcnMgd2lsbCBoZWxwIHNob3cgdGhhdCBvbmUgY2FuIHJlY292ZXIgZnJvbSBzZXRiYWNrcy4gSWYgcG9zc2libGUsIHRhbGsgdGhyb3VnaCB5b3VyIHRob3VnaHQgcHJvY2VzcyB3aXRoIHRoZSBwZXJzb24gd2l0aCBsb3cgc2VsZiBlc3RlZW0uIApBIG5pY2tsZSBsZXNzIHRoYW4gdGhlIG5hdGlvbmFsIGNvbW1vZGl0eSBwcmljZS4gWW91IGNhbiB0aGFuayBPaGlvJ3Mgc2hhbGUgZ2FzIGluZHVzdHJ5Li4gCldoYXQncyBhIHdoYWxlPyBUaGV5IGhhdmUgYSBsb3Qgb2YgbW9uZXkgYW5kIGxpbWl0ZWQgc2tpbGwuIFRoZXkgbmVlZCB0byBsb3NlIHNvbWV0aW1lcz8gTW9zdCBvZiB0aGUgdGltZSwgeW91IGtub3c/IE1vc3Qgb2YgdGhlIHRpbWUuIEkgbWVhbiwgdG8ga2VlcCB0aGVzZSBndXlzIGhhcHB5LiAKU3RyZXNzIHRoYXQgbm93IHRoYXQgeW91J3JlIG9sZGVyLCB5b3UncmUgbW9yZSBjYXJlZnVsIGFib3V0IHRoZSBkZWNpc2lvbnMgeW91IG1ha2UuLiAKRG9uIGxpc3RlbiB0byB0aGlzLCBpdCBhIGNvbW1vbiBtaXNjb25jZXB0aW9uIGFtb25nIHBlb3BsZSB0aGF0IGRpZG4gcmVhbGx5IGdldCBMb3N0LiBFc3NlbnRpYWxseSB0aGUgbWFpbiBjaGFyYWN0ZXJzIHJlYWxpemVkIHRoZWlyIGRlc3RpbnksIGtpbGxlZCB0aGUgYmFkIGd1eSwgdGh3YXJ0ZWQgdGhlIHRocmVhdCB0aGF0IHRoZSBpc2xhbmQgcHJlc2VudGVkIHRvIHRoZSB3b3JsZCwgYW5kIHRoZW4gbGl2ZWQgaGFwcGlseSBldmVyIGFmdGVyIGluIGEgcGFyYWxsZWwgdGltZWxpbmUgZGltZW5zaW9uIHRoYXQgd2FzIGNyZWF0ZWQgYnkgY2hhbmdpbmcgdGhlIHBhc3QgKHdlbGwsIHRoaXMgbGFzdCBwYXJ0IGlzIGRlYmF0ZWQgYW1vbmcgZmFucykuCk9mIGNvdXJzZSBpZiB5b3UgaGF2ZSBhIHZlcnkgInJpY2giIGZyaWVuZCB0aGF0IGhhcyBhIGxvdCBvZiBwb2tlciBjaGlwcywgYW5kIHBsYXlzIG9uIGhpZ2ggc3Rha2UgdGFibGVzIHlvdSBjYW4gYWxzbyBnZXQgcG9rZXIgY2hpcHMgZnJvbSBoaW0gOikuIApCdXQgdGhlbiBhbGwgdGhhdCBwcmV0dHkgcGxhc3RpYyBtb25leSBkaXNhcHBlYXJlZCBsYXN0IGZhbGwuIApTcG9ydHMgaGl0IGJ5IHBva2llIHRheApIT1lMQU5ELCBEYXZpZCBBbGV4YW5kZXIgICAoUmVnaXN0ZXJlZCBOdXJzZSkgV2l0aCBmYW1pbHkgYnkgaGlzIHNpZGUsIGF0IFByaW5jZXNzIE1hcmdhcmV0IEhvc3BpdGFsLCBUb3JvbnRvLCBvbiBUaHVyc2RheSwgTWF5IDFzdCwgMjAxNCBpbiBoaXMgNjNyZCB5ZWFyLiBMb3ZpbmcgZmF0aGVyIG9mIE1vcnRpY2lhIEhveWxhbmQgKEFsZXhhbmRyZSBLYXJhbWFuZXYpIG9mIFRvcm9udG8sIExpc2EgRG9tZW5pY28gKERhdmlkKSBvZiBCYXR0bGVjcmVlaywgTUkgYW5kIFNhcmFoIEhveWxhbmQgKEdhcnJpc29uIEJyb3duKSBvZiBIYXJyaXN0b24uIExvdmVkIGJ5IGhpcyBncmFuZGNoaWxkcmVuIEFkcmlhbiBhbmQgU2ViYXN0aWFuLiAKUGVvcGxlIGp1c3QgbmVlZCB0byBzdG9wIGN1dHRpbmcgc2hpdCBvZmYgb2YgYmFiaWVzLiBUaGUgcmVhc29uIHBlb3BsZSBicmluZyB1cCBjaXJjdW1jaXNpb24gc28gbXVjaCBpcyB0aGF0IHVubGlrZSBGR00gY2lyY3VtY2lzaW9uIGlzIHN0aWxsIHdpZGVseSBwcmFjdGljZWQgaW4gdGhlIFVTLiAKVGhlIG9ubHkgcmVub3ZhdGVkL3NvbWV3aGF0IG1vZGVybiBhcmVhcyBhcmUgcmVzZXJ2ZWQgZm9yIGhvc3BpdGFsaXR5LCBzbyBmb3IgcHJlc3MgYW5kIGNvcnBvcmF0ZSBhbmQgd2VsbCBvZmYgcGVvcGxlIHdpdGggeW91ciBmcmVlIGJ1ZmZldHMgYW5kIGN1dGUgaG9zdGVzc2VzIGFuZCBzaGl0LCB3aGlsZSB0aGUgIm5vcm1hbCIgZmFucyBoYXZlIG5vIHNlcnZpY2UgQVQgQUxMIChldmVuIGlmIHlvdSB3YW50IHRvIHBheSB0aGVyZSBpcyBOT1RISU5HIGluc2lkZSB0aGUgc3RhZGl1bSBleGNlcHQgc29tZSBtYXJvY2NoaW5pIHNlbGxpbmcgY3Jpc3BzIG9yIGEgZmF0IHNpY2lsaWFuIGR1ZGUgc2VsbGluZyBzYW1idWNhIHNob3RzIGZyb20gYSBwbGFzdGljIGJhZykgYW5kIGhhdmUgdG8gcGlzcyBpbiBnb2QgYXdmdWwgc21lbGx5IGRlc3Ryb3llZCB0b2lsZXRzLiBPdXRzaWRlIHlvdSBoYXZlIHRoZSBnb29kIG9sIGZvb2QgdHJ1Y2tzIGFuZCBmYWtlIG1lcmNoYW5kaXNlLCBhbmQgdGhhdCBpdC4gSXQgYSBnaWFudCBjb25jcmV0ZSBwaWVjZSBvZiBqdW5rLCBidXQgeWVhaCBpdCBoaXN0b3JpYyBhbmQgSSBsb3ZlIGl0IGJ1dCBpdCBjYW4gYmUgZml4ZWQgd2l0aCBhIHJlbm92YXRpb24uLiAKTGVzIEZyYW5haXMgZGUgc2VwdCAgc29peGFudGUgZGl4IHNlcHQgYW5zIGZ1cmVudCBqYWRpcyBlbmNoYW50cyBkJ2F2b2lyIHVuZSBNYXJpYW5uZSBxdWkgYXZhaXQgbGEgYm91aWxsZSBkZSBCcmlnaXR0ZSBCYXJkb3QgOyBTaW1vbmUgVmVpbCwgZnJhbmNoZW1lbnQsIGNlbGEgbmUgbGV1ciBmZXJhIG5pIGNoYXVkIG5pIGZyb2lkLi4gCk5lYWxvbiBjdXJyZW50bHkgc3RhcnMgYXMgc21hbGwgdG93biBwb2xpdGljbyBhbmQgcG90aGVhZCBEb3VnIFdpbHNvbiBvbiB0aGUgY3JpdGljYWxseSBhY2NsYWltZWQgU2hvd3RpbWUgc2VyaWVzIFdlZWRzLiBUaGUgYWN0b3IgaXMgYWxzbyBhIGZpeHR1cmUgb24gdGhlIGNlbGVicml0eSBwb2tlciBjaXJjdWl0LCB3aW5uaW5nIGhpcyBmaXJzdCByb3VuZCB0YWJsZSBpbiAyMDA0IG9uIEJyYXZvIENlbGVicml0eSBQb2tlciBTaG93ZG93biAoZXZlbnR1YWxseSBsb3NpbmcgdG8gZm91cnRoIHNlYXNvbiBjaGFtcCBNZWtoaSBQaGlmZXIpIGFuZCBwYXJ0aWNpcGF0aW5nIGluIG9ubGluZSBnYW1lcyB2aWEgdGhlIEhvbGx5d29vZCBQb2tlciBXZWJzaXRlLgpFbGsgbGlrZSB0byBsaXZlIG9uIHRoZSBlZGdlcyBvZiBmb3Jlc3RzLiAKQXJtZWVuIEdvbWV6LCBjaGllZiBzZWN1cml0eSBvZmZpY2VyIGF0IFJlc29ydHMgV29ybGQsIHNhaWQgd2l0bmVzc2VzIGF0IHRoZSBzY2VuZSBoYWQgdGVzdGlmaWVkIHRvIHNlZWluZyBtdWx0aXBsZSBhc3NhaWxhbnRzLiAKVGhhdCBKb3JkYW4gUGV0ZXJzb24gTU8sIGZpeCB5b3Vyc2VsZiBmaXJzdCwgYnV0IGl0IGZhbGxzIGFwYXJ0IHdoZW4geW91IHVuZGVyc3RhbmQgdGhhdCBodW1hbnMgYXJlIGFuZCBhbHdheXMgd2lsbCBiZSByZWxpYW50IG9uIGVhY2ggb3RoZXIgZm9yIG1hdGVyaWFsIHNlY3VyaXR5IGFuZCBldmVuIG91ciBjb25jZXB0aW9uIG9mIGV2ZXJ5dGhpbmcgaW4gdGhlIHdvcmxkIGlzIHJlbGlhbnQgb24gb3RoZXIgcGVvcGxlLkFsc28geW91ciBsYXN0IGJpdCBzZWVtcyB0byBsYWNrIGFuIGFuYWx5c2lzIG9mIHBvd2VyIGR5bmFtaWNzLiAKVGhlIHN0cmF0ZWd5IHVzZWQgZm9yIHRoZXNlIGdhbWVzIGlzIGRyYW1hdGljYWxseSBkaWZmZXJlbnQgZnJvbSB0aGUgc3Ryc3RlZ3kgeW91J2xsIHVzZSBhdCBhIGZ1bGwgcG9rZXIgcm9vbS4gVGhlIG1haW4gcmVhc29uIGZvciB0aGlzIGlzIGJlY2F1c2UgdGhlIG9kZHMgdGhhdCBhbnlvbmUgYXQgdGhlIHRhYmxlIHdpbGwgYmUgZGVhbHQgc3Ryb25nIGhhbmRzIGFyZSBtdWNoIGxvd2VyLiAKUXVlZW4gRWxpemFiZXRoIElJIHdhciBzY2hvbiBkYSAgIG51biByZWlzZW4gUHJpbnogQ2hhcmxlcyB1bmQgQ2FtaWxsYSBhbi4gRGFzIFJhZmZsZXMgSG90ZWwgU2luZ2FwdXIgZXJ3YXJ0ZXQgenVtIDEyNSBqaHJpZ2VuIEJlc3RlaGVuIGltIFNlcHRlbWJlciBoY2hzdGVuIFN0YWF0c2Jlc3VjaC4gRGFzIGVpbnppZ2FydGlnZSBHcmFuZCBIb3RlbCBzdGVodCB3aWUga2VpbiB6d2VpdGVzIHdlbHR3ZWl0IGZyIGVpbiBnYW56ZXMgTGFuZC4gMTg4NyB3dXJkZSBlcyBlaW5nZXdlaWh0IHVuZCBuYWNoIFNpciBUaG9tYXMgU3RhbWZvcmQgUmFmZmxlcywgZGVyIGFscyBHcm5kZXIgZGVzIFN0YWR0c3RhYXRlcyBpbSBTZGVuIHZvbiBNYWxheXNpYSBnaWx0LCBiZW5hbm50LiBIZXV0ZSB1bWZhc3N0IGRpZSBIb3RlbGtldHRlIFJhZmZsZXMgYWNodCBhdXNnZXN1Y2h0ZSBBZHJlc3NlbiBpbiBBc2llbiB1bmQgRXVyb3BhLgpJIG5ldmVyIGV2ZW4gYm91Z2h0IHRoYXQgc2hlIHdhcyBhdCBoaXMgYXBhcnRtZW50LiBUaGVyZSBpc24gYW55IGV2aWRlbmNlIGZvciBpdC4gSGUgd2FzIHRoZSBvbmUgdGhhdCB3YXMgbWFraW5nIHBsYW5zIGFuZCBnb2luZyBvdXQgb2YgaGlzIHdheSB0byBiZSBhcm91bmQgaGVyIGluIHRoZSB3ZWVrcyBsZWFkaW5nIHVwIHRvIGhlciBhYmR1Y3Rpb24uIApJbiB0dXJuLCB5b3UgbXVzdCBhdHRlbXB0IHRvIHJlc2VsbCBzcGFjZSBvbiB0aGUgcGFydGljdWxhciBzZXJ2ZXIuIApPbiB0aGUgb3RoZXIgaGFuZCwgZHVlIHRvIFR3aXRjaCB1c2luZyBjYXRlZ29yaWVzIHNvcnRlZCBieSBudW1iZXIgb2Ygdmlld2VycywgYSBCZXJuaWUgc3RyZWFtIHdpbGwgcXVpY2tseSBjbGltYiB0b3dhcmRzIHRoZSB0b3Agd2hlcmUgcGVvcGxlIHdobyBkb2VzbiBoYXZlIGtub3dsZWRnZSBvZiBpdCB3aWxsIHNlZSBpdC4uIApEaWFibG8gYW5kIHRoZSB3aW5kIGZhcm0gbW91bnRhaW4gICB0aGF0J3MgYSBzdW1tZXJzJyB3b3J0aCBvZiBjbGltYmluZyByaWdodCB0aGVyZSEgV09XISBUaGUgcGljdHVyZXMgYXJlIGdvcmdlb3VzICAgd2hhdCBiZWF1dGlmdWwgdGVycmFpbiEgRm9yIHNoZWVyIHRyYWluaW5nIHB1cnBvc2VzLCB3ZSByZWFsbHkgaGF2ZSBhYnNvbHV0ZWx5IG5vdGhpbmcgdGhhdCdzIHJlbW90ZWx5IGxpa2UgdGhhdCBoZXJlICAgZnVydGhlciBlbXBoYXNpc2VzIGFsbCBvZiB0aGUgaGFyZCB3b3JrIHRoYXQgeW91J3ZlIHB1dCBpbnRvIHlvdXIgdHJhaW5pbmcgICBzb3VuZHMgbGlrZSB0aGUgb2xlJyBsZWdzIGFyZSBkb2luJyB5b3UgcHJvdWQgKHNvcnJ5IGFib3V0IHlvdXIgYXNzIHRob3VnaC4gV2hvZXZlciBjYW4gZmlndXJlIG91dCBob3cgdG8gc29sdmUgdGhlIHNvcmUgYXNzIHByb2JsZW0gd2lsbCBiZSBhIHJpY2ggbWFuLikuIApXaXRoaW4geW91ciBidWRnZXQgSSBwcm9iYWJseSBldmVuIGdvIGZvciB0aGUgMSBUQiBtb2RlbCBhdCBqdXN0IDExMC4gSXQgYSBiZXR0ZXIgcHJpY2UgcHIuIApNZWV0aW5nIGZhY2lsaXRpZXMuIEd1ZXN0IGxhdW5kcnkgb24gZXZlcnkgZmxvb3IsIGZyZWUgSEJPIERpc25leSBjaGFubmVsLCBjb21wbGltZW50YXJ5IG5ld3NwYXBlciwgY29mZmVlIGFuZCBmcnVpdC4gVmlkZW8gdGFwZSBwbGF5ZXJzIGNvbXB1dGVyIGRhdGEgcG9ydHMgaW4gZXZlcnkgcm9vbS4uIApUaGUgcmVmZXJlZSBoYXMgaGFuZGVkIHlvdSB0aGUgdGllIGFuZCB5b3UgaGF2ZSB0aGUgYXVkYWNpdHkgdG8gY29tcGxhaW4uIApDYXRlZ29yeSAzIGlzIGEgc3RhdGUgd2lkZSBmdW5kaW5nIHBvb2wgZm9yIGxhcmdlIHNjYWxlIHByb2plY3RzIGFzc29jaWF0ZWQgd2l0aCBzcG9ydCwgaGVhbHRoIGFuZCBjb21tdW5pdHkgaW5mcmFzdHJ1Y3R1cmUgZnJvbSAwLjQgcGVyIGNlbnQgb2YgcG9rZXIgbWFjaGluZSBwcm9maXRzLiAKSWRrLCBzb21ldGhpbmcgYWJvdXQgaXQganVzdCBmZWx0IG9mZiB0byBtZSwgYW5kIGluIHRoaW5raW5nIGFib3V0IHRoaXMgcXVlc3Rpb24sIEkgdGhpbmsgdGhpcyB3YXMgaXQuIFRoZXkgZGlkbid0IHJlYWxseSBkbyBhIGdvb2Qgam9iIG9mIG1ha2luZyBpdCBmZWVsIGxpa2UgdGhlcmUgd2VyZSBzdGFrZXMuIExpa2UsIHRoZSBpZGVhIHRoYXQgdGhlIGVuZGluZyB3aGVyZSBXaWxsIEZhcnJlbGwncyBjaGFyYWN0ZXIgaGFzIHRvIGRpZSBmb3IgdGhlIGFydGlzdGljIGludGVncml0eSBvZiB0aGUgYm9vaywgaXMgc29tZXdoYXQgbGFja2luZyB3aGVuIHRoZXkgbGF6aWx5IGRvbid0IGV2ZW4gdGVsbCB1cyB3aGF0IHRoYXQgZW5kaW5nIHdvdWxkIGJlLi4gClNsb3dseSBsb3dlciB5b3VyIGhpcHMgdG93YXJkIHRoZSBiYWxsLCBhbGxvd2luZyB0aGUgd2VpZ2h0IG9mIHlvdXIgYm9keSB0byByb3VuZCBvdmVyIHRoZSBiYWxsLgpTbyB5b3UgcmVhbGx5IGRvIGhhdmUgdG8gYXNrIHlvdXJzZWxmICJXaGF0IGtpbmQgb2YgZ2FtZXIgYW0gST8iIGFuZCAiV2hhdCBpcyBpdCBJIHJlYWxseSB3YW50IHRvIGdldCBvdXQgb2YgbXkgZ2FtZSB0aW1lPyIgT25jZSB5b3UgYW5zd2VyIHRob3NlIHR3bywgeW91IGNhbiBuYXJyb3cgZG93biB5b3VyIG9wdGlvbnMgdG8gZmluZCBzb21ldGhpbmcgeW91IHdpbGwgdHJ1bHkgZW5qb3kuLiAKSGUgbm90IG9ubHkgaW5jcmVkaWJseSBrbm93bGVkZ2VhYmxlIGFib3V0IHRoaXMgc3BlY2llcyBhbmQgbWFueSBvdGhlcnMsIGJ1dCBoZSBhbHNvIGhhcyBhIHBhc3Npb24gZm9yIHRoZW0uCkhhdmUgeW91IGV2ZXIgaGFkIG9uZSBvZiB0aG9zZSBkYXlzPyBZb3Uga25vdywgdGhlIHJlYWxseSBsaWZlIGNoYW5naW5nLCBPTUcgd2hhdCBhbSBJIGdvaW5nIHRvIGRvIG5vdyBkYXlzLiBUaGlzIGlzIG9uZSBvZiB0aG9zZSBkYXlzLgpQb2xpdGljYWwgc2NpZW50aXN0IEphbWVzIFEuIFdpbHNvbiB3cm90ZSB0aGF0LCAiSW4gRGV0cm9pdCwgTWF5b3IgQ29sZW1hbiBZb3VuZyByZWplY3RlZCB0aGUgaW50ZWdyYXRpb25pc3QgZ29hbCBpbiBmYXZvciBvZiBhIGZsYW1ib3lhbnQsIGJsYWNrIHBvd2VyIHN0eWxlIHRoYXQgd29uIGhpbSBsb3lhbCBmb2xsb3dlcnMsIGJ1dCBoZSBsZWZ0IHRoZSBjaXR5IGEgZmlzY2FsIGFuZCBzb2NpYWwgd3JlY2suIgpBbnRpIGdhbWJsaW5nIGNhbXBhaWduZXIgUmV2ZXJlbmQgVGltIENvc3RlbGxvIHNhaWQgYWJvdXQgNDAgcGVyIGNlbnQgb2YgcG9rZXIgbWFjaGluZSByZXZlbnVlIGNhbWUgZnJvbSBhZGRpY3RzLiAKQWRkaXRpb25hbGx5LCB0aGUgQ2hpbmVzZSBwdWJsaWMgZ2VuZXJhbGx5IHRha2VzIGEgdmVyeSAiYWxsIG9yIG5vdGhpbmciIHN0YW5jZSBvbiB0aGUgYXBwcm9wcmlhdGUgcHVuaXNobWVudCBmb3IgY3JpbWluYWxzLiBHb3QgY2F1Z2h0IHNtb2tpbmcgd2VlZCBvbmNlPyBZb3UgZGVzZXJ2ZSB0byBiZSBpbiBwcmlzb24gZm9yIHRoZSByZXN0IG9mIHlvdXIgbGlmZS4gSGVsZCB1cCBhIHRyYWluPyBZb3UgZGVzZXJ2ZSB0byBiZSBpbiBwcmlzb24gdG9vLiAKSXQgaGFzIGFsd2F5cyBvY2N1cGllZCBhIGdvb2QgbWlkZGxlIGdyb3VuZCBpbiB0aGUgbGluZXVwIGJldHdlZW4gdGhlIHRvcCBjaGF1ZmZldXIgbGV2ZWwgUyBDbGFzcyBhbmQgdGhlIHNtYWxsZXIgZW50cnkgbGV2ZWwgQyBDbGFzcy4gQXMgaXMgdGhlIGNhc2Ugd2l0aCB0aG9zZSBtb2RlbHMsIHRoZSB2YXJpYW50cyB0b3Agb3V0IHdpdGggYSBwYWlyIG9mIEFNRyBtb2RlbHMuIApNb250aGx5IG9wZW4gc3R1ZGlvIEJyaW5nIHlvdXIgcHJvamVjdCB0byB0aGUgc3R1ZGlvIGFuZCB3b3JrIGFsb25nc2lkZSB5b3VyIGZlbGxvdyBtZXRhbHNtaXRocy4gCk92ZXIgdGhlIHBhc3Qgd2Vlaywgd2UgaGF2ZSBiZWVuIGFjdGl2ZWx5IHNlYXJjaGluZyBmb3IgUExPIGNvYWNoZXMuIFRoaXMgaGFzIG5vdCBiZWVuIGlkZWFsIGFuZCB3ZSBhcmUgZG9pbmcgb3VyIGJlc3QuCjc2ICg2KSwgcC4gClRoZSBkaWZmZXJlbmNlIGlzIGluIGFzc2F1bHQgd2l0aCBhIHdlYXBvbiB2cyBhc3NhdWx0IHdpdGggYSBkZWFkbHkgd2VhcG9uLiAKTGVlTW9yaXlhICAzIHBvaW50cyAgc3VibWl0dGVkIDMgbW9udGhzIGFnbwpUaGUgZmFydGhlciB5b3UgZ28sIHRoZSBtb3JlIHlvdSB3aWxsIHNlZS4gClR1cm5iYWNrdGltZTIgIDAgcG9pbnRzICBzdWJtaXR0ZWQgNSBkYXlzIGFnbwpCeXJkIHN1Y2NlZWRzLCB0aGUgWm9yaWFucyBhcmUgZXhwb3NlZCwgYW5kIHRoZXkgb2YgY291cnNlIGJsb3cgdGhlbXNlbHZlcyB0byBraW5nZG9tIGNvbWUgaW4gdGhlIGVuZC4uIApGcm9udGFsIHNpbnVzZXMgLCBzdXBlcmlvciB0byB0aGUgZXllcywgaW4gdGhlIGZyb250YWwgYm9uZSwgd2hpY2ggZm9ybXMgdGhlIGhhcmQgcGFydCBvZiB0aGUgZm9yZWhlYWQuIC4KVGhlIHJlYXNvbiBpcyBiZWNhdXNlIHdoZW5ldmVyIHlvdSBkaXNzb2x2ZSBzdWdhciBpbnRvIHdhdGVyLCBlYWNoIG1vbGVjdWxlIGlzIGJyb2tlbiBhcGFydCBhbmQgaXQgYmVjb21lcyBhIHNvbHV0aW9uIHdpdGggd2F0ZXIuIApXYXJwIGZ1Y2tlcnkgaXMgcmVhbGx5IGluY29uc2lzdGVudCwgYnV0IHNpbmNlIGl0IGhhcHBlbnMgaW4gYSBwbGFjZSB3aGVyZSBjYXVzYWxpdHkgaXMgZmxleGlibGUgaXQgY2FuIGdldCBhd2F5IHdpdGggaXQuClNvIHdoYXQgbWFrZXMgb25lIG9mIEFtZXJpY2EncyBtb3N0IHBvcHVsYXIgc3RhbmR1cCBjb21pY3MgbGF1Z2g/ICJSaWNreSBHZXJ2YWlzIGluVGhlIE9mZmljZWFuZEV4dHJhcy4gCkRvIGRvbiBuZWVkIHRvIHBsYXkgZGV2aWxzIGFkdm9jYXRlLiBKdXN0IGxpc3RlbiBhbmQgc2h1dCB0aGUgZnVjayB1cC4uIApUaGVyZSB3YXMgc3BlY3VsYXRpb24gYWhlYWQgb2YgdGhlIHZpc2l0IHRoYXQgQXRoZW5zIG1pZ2h0IGZhaWwgdG8gbWVldCB0aGUgaW5zdGFsbWVudCBpZiBmb3JjZWQgdG8gY2hvb3NlIGJldHdlZW4gcGF5aW5nIHRoZSBJTUYgYW5kIHBheWluZyBnb3Zlcm5tZW50IHdvcmtlcnMuCkFub255bW91czogJDEwIG1pbGxpb24gZm9yIHRoZSBNaW5uZXNvdGEgTGFuZHNjYXBlIEFyYm9yZXR1bSdzIG5ldyB2aXNpdG9yIGNlbnRlci4KVG8gd2luIGEgc2l0IGFuZCBnbyB0b3VybmFtZW50IHlvdSB3aWxsIGJlIGluIHNldmVyYWwgaGFuZHMgYWxvbmcgdGhlIHdheSB0aGF0IGFyZSBnYW1lIGNyaXRpY2FsIGludGVyc2VjdHMuIApKaW06IFllYWggdGhlcmUgd2FzLiBUaGlzIG1pZ2h0IHNvdW5kIGEgbGl0dGxlIHdlaXJkLCBidXQgYmVmb3JlIHRoZXkgb3V0bGF3ZWQgcGxheWluZyBwb2tlciBvbmxpbmUsIGJlZm9yZSB0aGV5IG91dGxhd2VkIHRoZSBmaW5hbmNpYWwgdHJhbnNhY3Rpb25zIHN1cHBvcnRpbmcgcGxheWluZyBwb2tlciBvbmxpbmUsIEkgYWN0dWFsbHkgZ2FtYmxlZCBhIGxvdCBvbmxpbmUuIEFuZCBieSB0aGF0IEkgbWVhbiwgSSBwbGF5ZWQgcG9rZXIgYW5kIEkgcmVhbGl6ZWQgSSB3YXNuJ3QgcGFydGljdWxhcmx5IGdvb2QgYXQgdGhhdCBiZWNhdXNlIEkganVzdCBkaWRuJ3QgaGF2ZSB0aGUgcGF0aWVuY2UgdG8gd2FpdCBmb3IgZ29vZCBoYW5kcy4gCldlIHdlcmUgYWxsIHNpbmdsZSBhbmQganVzdCBsb29raW5nIHRvIGhhdmUgYW4gYW1hemluZyB0aW1lLiAKVGhpcyBpcyBOT1QgdG8gc2F5IHRoYXQgdGhvc2UgbGVmdCBiZWhpbmQgc2hvdWxkIGJlIGFiYW5kb25lZC4gVGhpcyBpcyB0aGUgcmVhc29uIHdoeSByb2J1c3QgYW5kIGFnZ3Jlc3NpdmUgc29jaWFsIHNhZmV0eSBuZXRzIGFyZSBpbXBvcnRhbnQuIFRvIGluY2x1ZGUgcmV0cmFpbmluZyBwcm9ncmFtcywgdW5lbXBsb3ltZW50IGluc3VyYW5jZSwgcHVibGljIGpvYnNlZWtpbmcgYWlkLCBldGMuIApMZXMgZGV1eCBndWlnbm9sZXMgcHJvbHRhaXJlcyBhdXJhaWVudCBsZSAicGFybGVyIGZyYW5jIiBldCBpbHMgYm5maWNpZXJhaWVudCBkJ3VuZSAiaW1tdW5pdCBvdXZyaXJlIi4gTGFpc3NleiBtb2kgcmlyZSBkJ3VuIHJpcmUgaW5jb252ZW5hbnQgIQpOb3c/IEkgbWFycmllZCBpbiBteSBvd24gaG9tZSBhd2F5IGZyb20gcGFyZW50YWwgZHJhbWEuIApUcnVlLCB5b3UgY2FuIGdvIGJ1eSB0aGUgc2FtZSB0b29scyBhcyBhIHBybywgYnV0IGl0IHRha2VzIGEgbG90IG9mIHNraWxsIGFuZCBleHBlcmllbmNlIHRvIHVzZSB0aGVtIHByb3Blcmx5Li4gCllvdSBnZXQgdGhlcmUuIApUaGV5IHJlZmVycmluZyB5b3UgdG8gYSBzcGVjaWFsaXN0IHRvIGNvdmVyIHRoZWlyIGFzcy4gCkJ1dCBJIGtub3cgSSdtIGluIHRoZSBtaW5vcml0eS4gCklmIHdlIHJlYWxseSB3YW50ZWQgdG8gZG8gaXQgdGhlIG9sZCB3YXksIGl0IG9ubHkgYSBtYXR0ZXIgb2YgbW9uZXkgdG8gZ2V0IHNvbWUgcGVvcGxlIHRvIGZpZ3VyZSBvdXQgYW5kIHRyYWluIG9uIHRoZSB0ZWNobmlxdWVzLCBidXQgdGhhdCB3b3VsZCBzdGlsbCBiZSBhIHdhc3RlIG92ZXIgbW9yZSBtb2Rlcm4gdGVjaG5pcXVlcy4uIApXYWl0aW5nIGZvciB0aGUgdmlkZW9zIHRvIHN0YXJ0LCBUYXlsb3IsIHdobyBqb2luZWQgdGhlIGNsdWIgMzMgeWVhcnMgYWdvLCBleHBsYWluZWQgaXRzIG5hbWUuICJJdCB3YXMgbGl0ZXJhcnkgYmVjYXVzZSBvZiBkaXNjdXNzaW9ucyB3ZSdkIGhhdmUgICBvZiB0aGUgY2l2aWwgcmlnaHRzIGFuZCBzbyBvbi4gQW5kIGl0IHdhcyBodW50aW5nIGJlY2F1c2Ugd2UgcGxheWVkIHRoZSBjYXJkcywgYW5kIHlvdSdyZSBhbHdheXMgaHVudGluZyIgZm9yIGEgZ29vZCBoYW5kLgpPYnZpb3VzVHJvbGwzNyAgMSBwb2ludCAgc3VibWl0dGVkIDQgZGF5cyBhZ28KTm90IHBoeXNpY2FsIGFidXNlLCBidXQgYSBsb3Qgb2YgeWVsbGluZyBiZWNhdXNlIG9mIG5vcm1hbCBwdXBweSBiZWhhdmlvciAoY2hld2luZywgbWVzc2VzLCBldGMuKSBhbmQgc2hlJ3Mgc28gc2tpdHRpc2ggbm93LiAKQ2l0eSBDb3VuY2lsIGRlY2lzaW9uIHRvIGRlbnkgdGhlIFBJVFUgcHJvcG9zYWwsIENsdWZmIHNhaWQsIHdhcyBkdWUgdG9pc3N1ZXMgY29uY2VybmluZzogdHJhZmZpYywgd2hlcmUgdGhlcmUgaXMgY3VycmVudGx5IG9ubHkgYSB0d28gbGFuZSByb2FkIHRocm91Z2ggU3ByaW5nZGFsZTsgbWFpbnRhaW5pbmcgdGhldmlsbGFnZSBhdG1vc3BoZXJlIGFuZG5pZ2h0IHNreTtkaXNydXB0aW5nIHNlbnNpdGl2ZSBsYW5kczsgYW5kYWVzdGhldGljcyB0aGF0IG1haW50YWluIFNwcmluZ2RhbGUgaXMgbm90IGFib3V0IGJ1aWxkaW5nIGEgY2FzaW5vb3IgYSBodWdlIHJlc29ydCBuZXh0ZG9vciB0b1ppb24gTmF0aW9uYWwgUGFyaywgaXQncyBhYm91dGVjb25vbWljb3Bwb3J0dW5pdGllcyBhbmQgc2VjdXJpbmcgYSBjdWx0dXJhbCBwcmVzZW5jZSBmb3IgdGhlIFBhaXV0ZSBwZW9wbGUsIEdheWxvcmQgUm9iYiBzYWlkLGVjb25vbWljIGRldmVsb3BtZW50IGRpcmVjdG9yIGZvciB0aGUgUElUVS5pcyBhIGJhYnkgc3RlcCBwcm9ncmFtLCBSb2JiIHNhaWQuIApPbmUgaXMgaW1tYXR1cmUgYW5kIEkgZ3Vlc3MgYSBiaXQgIndoaW55IiBhbmQgdGhpbmtzIGhlIGhhcyBldmVyeXRoaW5nIGZpZ3VyZWQgb3V0IGV4Y2VwdCB0aGUgZHVja3MsIGFuZCB0aGUgb3RoZXIgaXMgdGhlIG9uZSB3aG8gZGlkbiBnZXQgb24gdGhlIG1lcnJ5IGdvIHJvdW5kIChyZXByZXNlbnRpbmcgdGhpcyBpbm5vY2VuY2UsIHdoaWNoIGhlIGhhcyB0aGVuIGRlY2lkZWQgdG8gbGV0IGdvIG9mZikuIEkgY291bGQgZ28gb24gZm9yIGhvdXJzIGFib3V0IHNvIG1hbnkgcGFydHMgb2YgdGhlIGJvb2tzLCBidXQuIApCeSBLdXJ0IEplYW46IEJveGluZyBpcyBjYWxsZWQgdGhlIHN3ZWV0IHNjaWVuY2UuIEl0IGlzIGEgc2NpZW5jZSwgYW4gYXJ0LCBhIHdheSBvZiBsaWZlIGFuZCBhIHBoaWxvc29waHkuIEl0IGlzIGEgbWFydGlhbCBhcnQgdGhhdCBpbXBhcnRzIGJlbmVmaXRzIHRvIGl0cyBwcmFjdGl0aW9uZXJzIGF0IGRpZmZlcmVudCBsYXllcnMgb2YgdGhlaXIgYmVpbmcgYW5kIGNoYXJhY3RlcnMuIApJIGxvdmUgaXQuIFRoZSBkaWFsIGlzIGluY3JlZGlibHkgcHJldHR5IHRvIGxvb2sgYXQsIGVzcGVjaWFsbHkgaW4gZGlmZmVyZW50IHZhcmlhdGlvbnMgb2YgbGlnaHRpbmcuIApJIGtub3cgdGhpcyBzb3VuZHMgYmVnZ2luZyBhbmQgdmFndWUsIGJ1dCBJIHJlYWxseSBoYXZlbid0IGJlZW4gYWJsZSB0byBtYWtlIG11Y2ggaGVhZHdheSBpbiB0aGUgd29yaywgdGhvdWdoIGl0IHNlZW1zIHRvIGRpc3BsYXkgdGhlIG9jY3VycmVuY2UgYW5kIGZyZXF1ZW5jeSBvZiBnZW5lcmFsIGNvbG9ycyBpbiAxMDAgYmxvY2sgZGlzdHJpYnV0aW9ucy4gVmFuZGVycG9lbCBzZWVtcyB0byB0YWtlIHRoZSBvdmVyYWxsIHNlbnNlIG9mIHRoZSBjb2xvcnMgb2YsIHNheSwgYSBHcmVlayB2YXNlIG9yIG11bW15IGNsb3RoIG9yIGEgdGVhY3VwIGFuZCBzYXVjZXIsIGFuZCBkaXNwbGF5IHRoZSBvdmVyYWxsIGVmZmVjdCBpbiBoZXIgZ3JpZC4gCkE6IFRvIHN1YnNjcmliZSwgbG9vayBmb3IgdGhlIG9yYW5nZSBYTUwgZ3JhcGhpYyBvbiB0aGlzIHBhZ2UgYW5kIGVsc2V3aGVyZSBvbiB0aGUgc2l0ZS4gCklmIHRoZSBwbGF5ZXJzIGJvdGggaGF2ZSB0d28gcGFpciwgdGhlIGhpZ2hlc3QgcGFpciB3aWxsIHdpbiByZWdhcmRsZXNzIG9mIHRoZSBraWNrZXIuIApUaGUgYmlnZ2VzdCBmYWN0b3IgaXMganVzdCB0aW1lLiAKWWVzIGJhc2ljYWxseSB0aGV5IGdpdmUgeW91IGEgcG90IHdpdGggdGhlIGxlYXZlcyBhbmQgYnJpbmcgeW91IGEgdGV0c3ViaW4gb2YgYm9pbGluZyB3YXRlciBvciBhIGtldHRsZSBhbmQgYXMgbXVjaCB3YXRlciBhcyB5b3Ugd2FudC4gClRoZSBncmVhdCBQaGlsIEhlbG11dGggKEdQSSBOby4gMzQwKSBhZGRlZCB0byBoaXMgbGVnZW5kIGluIHRoZSB3ZWUgaG91cnMgb2YgdGhlIG1vcm5pbmcgb24gTW9uZGF5IG5pZ2h0LCB3aW5uaW5nIGhpcyAxNHRoIFdTT1AgZ29sZCBicmFjZWxldCBhdCB0aGUgNDZ0aCBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgd2hpY2ggaXMgY3VycmVudGx5IHRha2luZyBwbGFjZSBhdCB0aGUgUmlvIEFsbCBTdWl0ZXMgSG90ZWwgYW5kIENhc2lubyBpbiBMYXMgVmVnYXMuCkdhZGdldHMgR2l6bW9zIEdhbG9yZSBBdCBDRVMgMjAxMzIwMTMgQ29uc3VtZXIgRWxlY3Ryb25pY3MgU2hvdyBIaWdobGlnaHRzIE5ld2VzdCBUZWNobm9sb2d5QSBnZW5lcmFsIHZpZXcgb2YgdGhlIExHIFBvY2tldCBQaG90byBwcmludGVyIGRpc3BsYXkgdGhhdCB1c2VzIE5GQyB0ZWNobm9sb2d5IGF0IHRoZSAyMDEzIEludGVybmF0aW9uYWwgQ0VTIGF0IHRoZSBMYXMgVmVnYXMgQ29udmVudGlvbiBDZW50ZXIgb24gSmFudWFyeSA4LCAyMDEzIGluIExhcyBWZWdhcywgTmV2YWRhLiAKVGhlcmUgd2VyZSBhbHNvIHJlbGF0aXZlbHkgY3J1ZGUgZGlhbCB1cCBiYXNlZCBmaWxlIHNoYXJpbmcgc2VydmljZXMgdGhhdCB3ZSBmaW5kIGhpbGxhcmlvdXMgdG9kYXkuIApXSU4gdGhlbSEgWWVzLCB0aGUgZ2FtZSBub3cgZ2l2ZXMgYSBsb3QgbW9yZSBjaGFuY2VzIHRvIHdpbiBwb2tlciBjaGlwcywgYW5kIGEgbG90IG1vcmUgdGhhbiBiZWZvcmUuIApJIGtub3cgdGhpcyBpcyBhIGJpdCBvZiBhIHRhbmdlbnQsIGJ1dCBpcyBhZ2UgMyBhbiBpZGVhbCBhZ2UgZm9yIHNvbWV0aGluZyBhcyBtYXNzaXZlIGFzIERpc25leSBXb3JsZD8gQXQgdGhhdCBhZ2UgdGhleSBkb24ndCByZWFsbHkgY29tcHJlaGVuZCB3aGF0J3Mgc3BlY2lhbCBhYm91dCBpdC4gVGhleSdyZSBsaWtlbHkgdG8gZ2V0IGFzIG11Y2ggb3IgbW9yZSBlbmpveW1lbnQgb3V0IG9mIGEgdHJpcCB0byBhIG5laWdoYm9yaG9vZCBwbGF5Z3JvdW5kLiBJIHdhcyA0eW8gd2hlbiBteSBmb2xrcyB0b29rIG1lIGFuZCBteSBvbmx5IGNsZWFyIG1lbW9yeSBvZiBpdCBpcyB0aGF0IEkgd2FudGVkIHRoZSBNaWNrZXkgTW91c2UgZWFycyBoYXQgYnV0IEkgZ290IGEgUGV0ZXIgUGFuIGhhdCBpbnN0ZWFkIGFuZCBJIHdhcyBzdWxreSBhbmQgcG91dHkgYWJvdXQgaXQgbW9zdCBvZiB0aGUgZGF5LiAKWWVhcmRseSBMb3ZlClBsYXlpbmcgVGV4YXMgSG9sZCdlbQpUaGUgb25saW5lIGdhbWJsaW5nIGJ1c2luZXNzIHdpbGwgYmUgdGhlIG1vc3QgcHJvZml0YWJsZSBidXNpbmVzcyBhcm91bmQgdGhlIGludGVybmV0LiBNaWxsaW9ucyBvZiBtZW4gYW5kIHdvbWVuIGFib3V0IHRoZSB3b3JsZCBhcmUgd2FnZXJpbmcgb24gc3BvcnRzIG9ubGluZSwgcGxheWluZyBvbmxpbmUgcG9rZXIsIGJpbmdvIGFuZCBhbHNvIHRoZSBsb3R0ZXJ5IG9ubGluZSBhdCBhbnkgZnJvbSB0aGUgYSBsYXJnZSBudW1iZXIgb2YgZ2FtYmxpbmcgc2l0ZXMgb2ZmZXJlZCBvbiB0aGUgbmV0LiAKVGhlcmUgYXJlIGNvdXJzZXMgc2hlIGNvdWxkIHRha2UgdGhhdCB3b3VsZCBmYWxsIGluIGxpbmUgd2l0aCBteSBjYXBhYmlsaXRpZXMgYXMgdGhleSBub3cgc3RhbmQuIFRvIGJlIGEga2lsbGVyLiBUbyBiZSBhIHR5cmFudC4gClIgZGllIE9seW1waXNjaGVuIFNvbW1lcnNwaWVsZSAyMDIwCkl0J3MgdG90YWx5IGFib3V0IGFydGlmaWNpYWwgaW50ZWxsaWdlbmNlIGlzc3VlLiBUaGV5IHJlYWQgdGhlIHBva2VyIHRhYmxlIHdpbmRvdyBhcyBhbiBpbWFnZSwgYW5kIGVhY2ggcGFydCBvZiB0aGUgdGFibGUgd2l0aCBpbmZvcm1hdGlvbiBzcGVjaWZpYyB0byB0aGUgaGFuZCBpcyBhbmFseXplZCBhbmQgcmVjb3JkZWQgZm9yIGNvbXB1dGF0aW9uLiAKSSBlbmpveWVkIHB1dHRpbmcgb24gbXVzY2xlLiAKNS4gTm8gcG9saXRpY3MuClRoZW4gaGUgd2FzIGxpa2UsICJ5b3UgbXVzdCBoYXZlIGp1c3QgcmV0dXJuZWQgZnJvbSBTb3V0aCBBc2lhLiIgQW5kIEkgd2FzIGxpa2Ugbm8sIEkgcmVhbGx5IGRvbiB0aGluayBpdCBmdW5nYWwgIGl0IGRpZG4gZXZlbiBsb29rIGxpa2UgdGhlIHBob3RvIGhlIHdhcyBzaG93aW5nIG1lIGFuZCBoZSByZWZ1c2VkIHRvIGdpdmUgaXQgYSBzZWNvbmQgbG9vay4gCkFubmUgYW5kIExlc2xpZSB0b29rIGxvbmcgc25vd3Nob2UgdHJhbXBzIHRvZ2V0aGVyLCB0b28sIG92ZXIgdGhlIGZpZWxkcywgb3IgYWNyb3NzIHRoZSBoYXJib3IgYWZ0ZXIgc3Rvcm1zLCBvciB0aHJvdWdoIHRoZSB3b29kcyBiZXlvbmQgdGhlIEdsZW4uIApSZWdhcmRpbmcgd2hhdCBzb21lb25lIHNhaWQgdGhhdCB5b3UgY2FuIGFsc28gYnV5IHRoZW0gZnJvbSBzb21lIHdlYnNpdGVzLCB5ZXMgaXQncyB0cnVlIGJ1dCB0aGVyZSBhcmUgc29tZSBwcm9zIGFuZCBjb25zIHRvIHRoaXMuIEZvciBpbnN0YW5jZSBvbiB0aGUgUHJvIHNpZGUsIHlvdSBnZXQgY2hpcHMgYSBsb3QgbW9yZSBjaGVhcGVyIHRoYW4geW91IHdvdWxkIGdldCB0aGVtIGZyb20gaW4gdGhlIGdhbWUuIE9uIHRoZSBDb24gc2lkZSwgbW9zdCB3ZWJzaXRlcyBkbyBub3QgZGVsaXZlciBpbiBwcm9wZXIgdGltZS4gCkl0IHZlcnkgZGlmZmVyZW50IHRvIHdoYXQgaXQgbG9va3MgbGlrZSBvbiBUViBwdXJlIHBzeWNob2xvZ3kgYW5kIG1pbmQgZ2FtZXMhIEFuZCB3aGF0IHNob3duIG9uIFRWIGlzIG9ubHkgYSBmcmFjdGlvbiBvZiB0aGUgdGltZSB3ZSBzcGVuZCBvbiB0aGUgdGFibGUuIApJIHdhcyByYWlzZWQgYXMgYSByYWNpc3QuIFdlIGxpdmVkIGluIFNvdXRoZXJuIENhbGlmb3JuaWEgbmVhciBhIGxvdCBvZiBtaW5vcml0aWVzLiAKVGhleSB3b3VsZCBjYW1wYWlnbiBhZ2FpbnN0IGxvYmJ5aW5nIGFuZCB0aGUgc3RhdHVzIHF1by4gCkF0IHRoZSBpbnRlcnNlY3Rpb24sIGhlYWQgbGVmdCBhbG9uZyBQZXRjaGFidXJpIFJvYWQuIEJhbmdrb2sgQ296eSBpcyBhYm91dCBhIDUgbWludXRlIHdhbGsgZnJvbSB3aGVyZSB0aGUgbW90b3JiaWtlIGRyb3BzIHlvdS4gSXQgb2ZmIHRoZSBtYWluIHJvYWQsIGluIGEgbGl0dGxlIGVuY2xhdmUsIGJ1dCBrZWVwIGFuIGV5ZSBvdXQgZm9yIHRoZSBiaWcgYmlsbGJvYXJkIHNpZ24gKHJpZ2h0KS4gCkFtb25nIHRoZW0gaXMgQnJhZGxleSBLYXRzdXlhbWEsIHdobyBpbW1lcnNlZCBoaW1zZWxmIGluIGhpZ2ggZnJlcXVlbmN5IHRyYWRpbmcgd2hpbGUgYXQgdGhlIFJveWFsIEJhbmsgb2YgQ2FuYWRhLCBhbmQgUm9iIFBhcmssIHdobyB0ZWFtZWQgd2l0aCBLYXRzdXlhbWEgdG8gbGVhcm4gaG93IHRyYWRlcnMgZXhwbG9pdGVkIHRlY2hub2xvZ3kuIFRoZXkgZmlyc3QgY3JlYXRlIGEgdG9vbCAgIGNhbGxlZCAiVGhvciIgICB0aGF0IG1hZGUgbGFyZ2Ugc3RvY2sgb3JkZXJzIGltbXVuZSB0byB0aGUgcHJlZGF0b3J5IHByYWN0aWNlcyBvZiBoaWdoIGZyZXF1ZW5jeSB0cmFkZXJzLiAKTGFyZ2UsIGFuZ3J5IGJsaXN0ZXJzIHR5cGljYWxseSBhcHBlYXIgYWZ0ZXIgdGhlIHBhdGllbnQgZXhwZXJpZW5jZXMgc2V2ZXJhbCB3ZWVrcycgd29ydGggb2YgbGVzaW9ucyBhbmQgcGFwdWxlcyAoc3dlbGxpbmcgdGhhdCByZXNlbWJsZXMgYSBwaW1wbGUpIFtzb3VyY2U6IEh1aWxhamEgZXQgYWwuXS4gRm9ydHVuYXRlbHksIHRoZSBnZW5pdGFscywgZmFjZSwgbW91dGggYW5kIHNjYWxwIGFyZSB1c3VhbGx5IHNwYXJlZCB0aGUgcmFzaCBpbiBhbGwgaXRzIGJsaXN0ZXIgeSBnbG9yeSBbc291cmNlOiBFQURWXS4gCldoYXQgYWR2aWNlIGRvIHlvdSBoYXZlIGZvciB1cyBwbGVicyB3aG8gZ290IHVzZWQgdG8gYm8xIGFnZ3JvIHRyeWluZyB0byBicmVhayByYW5rIG5vdz8gSWYgc29tZW9uZSBpcyBzdHVjayBpbiBHb2xkLCBJJ2Qgc2F5IHRoZXkncmUgbWFraW5nIGVycm9ycyBvciB0aGV5J3JlIG5vdCByZWFkaW5nIG9wcG9uZW50cyBoYW5kcywgd2F0Y2hpbmcgb3BlbiBtYW5hLCB1bmRlcnN0YW5kaW5nIG1ldGEgYW5kIHdoYXQgY2FyZHMgdG8gZXhwZWN0IGdpdmVuIHdoYXQgY2FyZHMgdGhleSd2ZSBzZWVuLiBQbGF0IGJlY2FtZSBob3cgdG8gaWRlbnRpZnkgb3Bwb25lbnRzIGRlY2sgZWFybGllciBzZWVpbmcgbGVzcyBjYXJkcyAoVDEgaXNsYW5kIHBhc3M/IE1VVC9EcmFrZXMvTml2PyBFc3BlciB3aXRob3V0IGEgd2F0ZXJ5IGdyYXZlPykgQnV0IG5vdyBpbiBoaWdoIERpYW1vbmQsIEknbSBub3Qgc3VyZSB3aGVyZSBteSB3ZWFrbmVzcyBsaWVzLi4gCkkgbG92ZSBteSBicm90aGVyIHRvIHBpZWNlcywgaGUgaXMgbGlrZSBteSBjaGlsZC4gSSB3b3VsZCBsYXkgZG93biBteSBsaWZlIGZvciBoaW0gd2l0aG91dCBoZXNpdGF0aW9uLiBIZSBkaWRudCBwdXQgbWUgaW4gdGhhdCBzaXR1YXRpb24sIG15IHBhcmVudHMgZGlkLiAKSSBzYXkgdG8gaGVyIHRoYXQgSSBzZWUgc2hlIHRha2VzIGhlciBwb29sIHNlcmlvdXNseSBhbmQgaGFsZiBqb2tpbmdseSB0ZWxsIGhlciB0aGF0IEkgbm90IHRoYXQgZ29vZCwgYnV0IEkgY29tcGV0aXRpdmUuIApUb3JvbnRvIHBvbGljZSBjaGllZiBNYXJrIFNhdW5kZXJzIHNheXMgaGUgd2lsbCBwdXQgdXAgd2l0aCB0aGUgbGF0ZXN0IGpvYiBhY3Rpb24gZnJvbSBmcm9udGxpbmUgb2ZmaWNlcnMgIHdoZXJlIHRoZXkgc3BvcnQgbm9uIHVuaWZvcm0gIlRQQSIgaGF0cyBvbiBkdXR5ICAgZm9yIGEgcGVyaW9kIG9mIHRpbWUgYW5kIGluc2lzdHMgaGUgaXMgbGlzdGVuaW5nIHRvIHRoZWlyIGNvbXBsYWludHMuCkV0IGJpZW4sIHBvdXIgbWEgcGFydCwgamUgbmUgc3VpcyBwYXMgY2hvcXUhIFBvdXJxdW9pIHBheWVyIGxlcyBlbnNlaWduYW50cyAzNWggZXQgcXVlIGNldXggY2kgbmUgc29pZW50IHBhcyBwcnNlbnRzIGxlcyAzNWggYXUgbHljZS4gQmllbnNyLCBjZXMgMzVoIGRvaXZlbnQgaW5jbHVyZSBsZSB0ZW1wcyBkZSBjb3VycywgZGUgY29ycmlnZXIgZGVzIGNvcGllcywgbGUgc291dGllbiBzY29sYWlyZSBvdSBkZSBwcnBhcmF0aW9uIGRlcyBjb3Vycy4gVG91dGVzIGNlcyBhY3Rpdml0cyBwZXV2ZW50IGQnYWlsbGV1cnMgdHJlIHJhbGlzZXMgZGFucyBsJ2VuY2VpbnRlIGRlIGwndGFibGlzc2VtZW50LiAKT2YgY291cnNlLCBhY3VwdW5jdHVyZSBpcyBlc3BlY2lhbGx5IHdlbGwga25vd24gZm9yIGl0cyB0cmVhdG1lbnQgb2YgcGFpbjsgaXQgaXMgc28gZWZmZWN0aXZlIGZvciBwYWluIHJlbGllZiwgaXQgaXMgZXZlbiB1c2VkIGFzIGEgc3Vic3RpdHV0ZSBmb3IgYW5lc3RoZXNpYSBpbiBzb21lIHN1cmdpY2FsIHByb2NlZHVyZXMgaW4gQ2hpbmVzZSBob3NwaXRhbHMhLiAKV2hhdCBraW5kIG9mIGd1eSBvciBndXlzIHRlbGwgMTEgeWVhciBvbGRzIHRoYXQgc2V4IHdpbGwgYmUgcGFpbmZ1bCwgZ3V5cyB3YW50IGJsb3dqb2JzIGFuZCBwZW5ldHJhdGlvbiBpcyBtYW5kYXRvcnk/IEFuZCB3aGF0IGtpbmQgb2YgZ3JvdXAgcmlkaWN1bGVzIGFuIDExIHllYXIgb2xkIGZvciBub3Qgd2FudGluZyB0aGF0PyBBbmQgd2hhdCBraW5kIG9mIHBhcmVudHMgdGVsbCBhbiAxMSB5ZWFyIG9sZCB0aGF0IHNoZSB3b3VsZCB3YW50IHRoYXQgKHJlZmVycmluZyB0byBiZWluZyBwZW5ldHJhdGVkIHBhaW5mdWxseSk/CkRvbid0IGV2ZW4gZ2V0IG1lIHN0YXJ0ZWQgb24gdGhlaXIgd2hpbnkgYml0Y2ggc2lnbnMgYWxvbmcgSSA1LgpUaGlzIGlzIG91ciBzZWNvbmQgYmFieSAoc29uIHdpbGwgYmUgMiBpbiBTZXB0ZW1iZXIpLiBXZSBtb3ZlZCBpbnRvIGEgbmV3IGhvbWUgbGFzdCB5ZWFyIGFuZCBoYXZlbid0IHJlYWxseSBob3N0ZWQgYW55IGV2ZW50cyB0aGVyZS4gClRoZXkgY291bGRuJ3QgaGF2ZSBiZWVuIHNwaWVzLiBXaGF0IHNoZSBkaWQgd2l0aCB0aGUgaHlkcmFuZ2Vhcy4iQnV0IHRoZSByZWFsIHdheSB0byB1bmRlcnN0YW5kIGFsbCBvZiB0aGlzIGlzIG5vdCB0aHJvdWdoIHBvbGl0aWNzLCBidXQgbGl0ZXJhdHVyZS4gQW1lcmljYW5zIGxvdmUgdGhlbSBhIGdvb2Qgcm9tYW5jZSBvciBldmVuIGFuIGFkdmVudHVyZSBzdG9yeS4gCkpvbGVyYSBjYW4gaGVscC4gQXMgYW4gYWdncmVnYXRlIElUIHNlcnZpY2VzIHByb3ZpZGVyIGJhc2VkIGluIFRvcm9udG8sIHRoZSBmaXJtIHdvcmtzIHdpdGggb3JnYW5pemF0aW9ucyBvZiBhbGwgc2l6ZXMgaW5jbHVkaW5nIG5vdCBmb3IgcHJvZml0cyB0byBkZXZlbG9wIHRlY2hub2xvZ3kgc29sdXRpb25zIGNhdGVyZWQgdG8gdGhlaXIgc3BlY2lmaWMgbmVlZHMuCkhlcmUgdGhlIHRoaW5nLCBPUCBpcyBub3QgdGhlIGtpZCBtb3RoZXIuIFdoaWxlIE9QIGNvdWxkIGhhdmUgYmVlbiAibmljZSIgdGhleSBhcmUgbm90IHJlcXVpcmVkIHRvIGdpdmUgdGhlIGtpZCBhIHRvdXIgb2YgdGhlaXIgcm9vbSBvciB3YXRjaCBvdmVyIHRoZW0uIEl0IGlzIG5vdCB0aGVpciByZXNwb25zaWJpbGl0eSwgYW5kIHdhdGNoaW5nIG91dCBmb3IgdGhlIGtpZCB3YXMgYWN0dWFsbHkgcXVpdGUgIm5pY2UiIG9mIHRoZW0gaW4gdGhlIGZpcnN0IHBsYWNlLgpJcyB0aGVyZSBzb21ldGhpbmcgc2ltaWxhciAgIGhvdXNlIC8gY2hpbGQgcmVhcmluZyByZWxhdGVkIHRoYXQgd291bGQgd29yayBhcyBhIGhvYmJ5IGZvciB5b3U/IE1heWJlIGdhcmRlbmluZz8gWW91ciBnaXJscyBtaWdodCBiZSBpbnRlcmVzdGVkIGluIGhlbHBpbmcgdGhlbiB0b28sIGFuZCBpdCBjb3VsZCBiZWNvbWUgYSBmYW1pbHkgYWN0aXZpdHksIGFzIHdlbGwuCkkgYSB2ZXJ5IHByYWN0aWNhbCBwZXJzb24gYW5kIHdpbGwgY2hvb3NlIHdoYXQgd2lsbCBnZXQgbWUgdGhlIG1vc3QgZm9yIG15IGRvbGxhci4gVGhlcmUgaXMgbm8gYmVhdGluZyBTdWJhcnUgZm9yIHNhZmV0eSwgZXNwZWNpYWxseSBpbiB0aGUgbmV3IGZyb250IGNvcm5lciB0ZXN0LCBhbmQgc28gbWFueSBnb29kIGZlYXR1cmVzIGFyZSBzdGFuZGFyZCB0aGF0IGV2ZW4gaWYgeW91IGhhdmUgdG8gZ2l2ZSB1cCBvbmUgdGhpbmcgeW91IHJlYWxseSB3YW50ZWQsIHlvdSBzdGlsbCBnZXR0aW5nIGEgaGVsbHV2YSBsb3QuLiAKRm9yIGV4YW1wbGUgaWYgeW91IHdhbnRlZCB0byB1c2UgL3Bvc3QvOnNsdWcsIE5leHQgd291bGQgaGF2ZSBubyB3YXkgb2Yga25vd2luZyB5b3Ugd2FudCB0byByZW5kZXIgdGhlIGJsb2cgcGFnZS4uIApNeSBzaG9ydCBleHBsYW5hdGlvbiBvZiB0aGUgZ2FtZSB3b3VsZCBiZSwgYSBncm91cCBvZiBmcmllbmRzIGdldHRpbmcgdG9nZXRoZXIgdG8gY3JlYXRlIGEgc2hhcmVkIHN0b3J5dGVsbGluZyBleHBlcmllbmNlLiBUaGluayBvZiBpdCBsaWtlIGFuIGltcHJvdmlzYXRpb25hbCB0aGVhdHJlLCB0aGUgcGxheWVycyBhbGwgYXNzdW1lIGEgc2luZ2xlIGNoYXJhY3RlciBhbmQgdHJ5IHRvIHRoaW5rIGFuZCBhY3QgaW4gdGhhdCBtaW5kc2V0IGFzIHRoZSBHYW1lIE1hc3RlciBzZXRzIHRoZSBzY2VuZSBhbmQgZGVzY3JpYmVzIHRoZSBvdXRjb21lcyBvZiB0aGVpciBhY3Rpb25zLiBEcmVzc2luZyB1cCBvciB2b2ljZSBhY3RpbmcgaXMgbm90IG5lY2Vzc2FyeSwgYWN0dWFsbHkgdmVyeSBmZXcgcGVvcGxlIGV2ZW4gYXR0ZW1wdCB0aGlzLgpJIHdhbnRlZCBhIHJlbGlhYmxlIHN1cHBseSBvZiBncmVlbnMgZm9yIGNvbnN1bXB0aW9uIGR1cmluZyB0aGUgU3VtbWVyLCBidXQgaXQgc2VlbWVkIG5pY2UgdG8gYWxzbyBoYXZlIGFuIGVuZCBwcm9kdWN0IGZvciB0aGUgV2ludGVyLiAKIkV2ZXJ5Ym9keSBjb21lIGhlcmUuIEkgd2FudCB5b3UgYWxsIHRvIGdldCBpbiB0aGUgY2xvc2V0IGFuZCBiZSBhcyBxdWlldCBhcyBwb3NzaWJsZS4gSG9uZXksIHRha2UgdGhlIHBob25lIGFuZCB0ZWxsIHRoZSBwb2xpY2Ugb3VyIGFkZHJlc3MuIiBGb3IgYSBjaGFuZ2UgdGhlcmUgaXMgbm8gYXJndW1lbnQuIEV2ZXJ5b25lIGdldHMgaW4gdGhlIGNsb3NldC4KSSBkbyBibHVmZiBhIGxvdCBub3csIGJ1dCBJJ20gdHJ5aW5nIHRvIGJsdWZmIHNtYXJ0ZXIuIEkgYWdyZWUsIHRoZSByZWNpZGl2aXNtIHJhdGVzIGFyZSBhYmhvcnJlbnQgaW4gb3VyIGNvdW50cnkgKEkgZG9uIGtub3cgd2h5IGJ1dCBpIGFzc3VtZSB5b3UgYXJlIGFtZXJpY2FuIGFzIHdlbGwpLiAKQXMgYSBkb2N0b3IsIHRoaXMgaXMgaHVnZSAgIEFuZGV4eGEgaXMgdGhlIEZJUlNUIFhhIGluaGliaXRvciBhbnRpZG90ZS4gSWYgYW55IG9mIHlvdSBkbyBhbnkgcmVhZGluZyBpbnRvIHdoYXQgdGhpcyBtZWFucywgWGEgaW5oaWJpdG9ycyBhcmUgTk9BQ3MgKG5vdmVsIG9yYWwgYW50aWNvYWd1bGFudHMpIHRoYXQgYXJlIG11Y2ggZWFzaWVyIHRvIHVzZSBmb3IgYm90aCBwYXRpZW50cyBhbmQgZG9jdG9ycyBjb21wYXJlZCB0byB0aGUgdHJhZGl0aW9uYWwgY291bWFkaW4gKHJhdCBwb2lzb24pLgpCZWZvcmUgb3VyIGJ1cyByZGUgZnJvbSBoZWxsIHdlIGRkIGhhdmUgYSBuY2UgbGFzdCBkYXkgbiBDYXBhZG9jY2EuIFdlIHZzdGVkIFVyZ3VwLCBhIG5lYXJieSB0b3duIGtub3duIGZvciB0IGJvdXRxdWUgaG90ZWxzIGFuZCByZXN0YXVyYW50cy4gV2Ugd2VudCB0byBzZWUgdGhlIGZhcnkgY2htbmV5cyBuIG5lYXJieSBaZWx2ZSB2bGxhZ2UgKGNoZWNrIG91dCB0aGUgcGNzISkuIE92ZXJhbGwgdCB3YXMgYSBwcmV0dHkgbGVzdXJlbHkgZGF5LiBPbmUgdGhuZyBJIGhhdmUgdG8gYWRkIGhlcmUgcyB0aGF0IG4gVHVya2V5IG1vc3QgaG91c2VzIGFuZCBidWxkbmdzIGhhdmUgc29sYXIgcGFuZWxzIG9uIHRoZSByb29mcyBhbmQgYWxsIGxnaHRidWxicyBhcmUgZW5lcmd5IHNhdm5nIGJ1bGJzLiBIb3cgYXJlIHdlIHNvIGJlaG5kIG4gdGhlIFVTPz8/CkFmdGVyIEZ1bmsgICBTYW50YSBCYXJiYXJhOiBBZnRlciBGdW5rIGhhcyBiZWVuIG9uZSBvZiBteSBmYXZvdXJpdGUgbG9jYWwgYmFuZHMgZm9yIGEgd2hpbGUgbm93LCBzbyBJIGRlZmluaXRlbHkgYmlhc2VkIHdoZW4gSSBzYXkgdGhhdCB0aGlzIGlzIGEgZ3JlYXQgYWxidW0uIApJIGZlbHQga2luZCBvZiBqaXR0ZXJ5IGFuZCBuZXJ2b3VzIHRoZSBkYXlzIEkgdG9vayBpdC4gSSB3YXMgb25seSBhYmxlIHRvIG51cnNlIGhlciBmb3IgMyBtb250aHMgYnV0IEkgaGFkIHN0b3BwZWQgdGFraW5nIHRoZW0gYnkgdGhhdCB0aW1lLCBzbyBJIGNvdWxkbiByZWFsbHkgc2F5LiAKQWxzbyBJIGhvcGVmdWxseSB3b24gYmUgdGhlIGZpc2ggaW4gdGhlIDVrIDZtYSB0aGlzIHRpbWUuIApNYXJrZXRpbmcgZXhlY3V0aXZlcyB3aG8gY29udHJvbCB0aGUgYnVkZ2V0cyBvZiB0aGUgbmF0aW9uJ3MgbGFyZ2VzdCBhZHZlcnRpc2VycyBhcmUgaW4gT3JsYW5kbyB0aGlzIHdlZWsgZm9yIHRoZSBBc3NvY2lhdGlvbiBvZiBOYXRpb25hbCBBZHZlcnRpc2VycyBhbm51YWwgIk1hc3RlcnMgb2YgTWFya2V0aW5nIiBjb25mZXJlbmNlLiBBZCBBZ2Ugd2lsbCBiZSBvbiB0aGUgZ3JvdW5kIHRvIGN1dCB0aHJvdWdoIHRoZSBjbHV0dGVyIGFuZCBkZWxpdmVyIHlvdSB3aGF0IHlvdSBuZWVkIHRvIGtub3cgYWJvdXQgdGhlIGZvdXIgZGF5IGV2ZW50LCB3aGljaCBraWNrZWQgb2YgbGFzdCBuaWdodCB3aXRoIGEgZGlubmVyIGFuZCBwZXJmb3JtYW5jZSBieSBUcmFpbi4gSW4gYWRkaXRpb24gdG8gRHJvcHMgb2YgSnVwaXRlciwgdGhlIGZvcmVjYXN0IGhlcmUgY2FsbHMgZm9yIHJhaW4gYW5kIHRodW5kZXJzdG9ybXMsIHdoaWNoIGlzIHBlcmhhcHMgYXBwcm9wcmlhdGUgZm9yIGFuIGluZHVzdHJ5IGZhY2luZyBpdHMgb3duIHN0b3JtIGNsb3VkcywgaW5jbHVkaW5nIHRoZSBncm93aW5nIHRocmVhdCBvZiBwcml2YWN5IGxlZ2lzbGF0aW9uIHRoYXQgY291bGQgbWFrZSBkaWdpdGFsIGFkdmVydGlzaW5nIGhhcmRlci4gRm9yIG1vcmUgb24gd2hhdCB0byBleHBlY3QsIGNoZWNrIG91dCBvdXIgcHJpbWVyLgpUaGV5IGFsc28gcHJldHR5IHJlZ3VsYXJseSBnbyB1c2VkIGZvciBhcm91bmQgJDIwMCBub3dhZGF5cywgd2hpY2ggZml0cyB0aGUgYnVkZ2V0IEkgc2F3IHlvdSBtZW50aW9uIGluIGFub3RoZXIgY29tbWVudC4uIApOZWhydSBUYWNrbGVzIERvbWVzdGljIElzc3VlIG9mIEluZGlhJ3MgQ2F0dGxlIFNQRUFLRUIgVFVFU0RBWSAgIFJlcC4gClRoZXJlIGlzIG9ubHkgb25lIHdheSB0byBoYXZlIGEgMyB3YXkgdGllIHdpdGggYW4gYWNlIGhpZ2ggZmx1c2guIEFzc3VtZSB0aGUgZmx1c2ggaXMgaGVhcnRzLiBUaGVyZSBhcmUgNSBoZWFydHMgb24gdGhlIGJvYXJkLCBpbmNsdWRpbmcgdGhlIGFjZS4gCkNvbHVtYnVzIEJsdmQuIApXaGVuIHlvdSBiZXQgcml2ZXIsIHdoYXQgd2VyZSB5b3UgdHJ5aW5nIHRvIGFjY29tcGxpc2g/IElmIHlvdSB0aGluayBhYm91dCBpdCwgaGltIGJlaW5nIGluIHRoZSBoYW5kIGFsbCB0aGlzIHRpbWUgaW5zaW51YXRlcyBoZSdzIGdvdCBhIGdvb2QgaG9sZGluZy4gSGltIGNhbGxpbmcgeW91ciB0dXJuIGFsc28gc2VlbXMgbGlrZSBoZSdzIHRyeWluZyB0byB0cmFwLiBXaGVuIHlvdSBiZXQgcml2ZXIgd2l0aCBraW5ncyBmdWxsIG9mIGFjZXMgb24gMyBraW5ncyBhbmQgYW4gYWNlIG9uIHRoZSBib2FyZCwgeW91J3JlIG9ubHkgZ29pbmcgdG8gZ2V0IGNhbGxlZCBieSBheCBvciBreCBhbmQgYmVzdCBjYXNlIHNjZW5hcmlvLCB5b3UgY2hvcC4gU28gd2h5IGJvdGhlciBiZXR0aW5nIGl0PyBOZXh0IHRpbWUgeW91IHRoaW5rIGFib3V0IHRoaXMgYmV0LCBhc2sgeW91cnNlbGY6IHdpbGwgbXkgYmV0IGZvbGQgYmV0dGVyIGhhbmRzIGFuZCBnZXQgY2FsbGVkIGJ5IHdvcnNlIGhhbmRzPyBJZiB0aGUgYW5zd2VycyBubywgZG9uJ3QgYmV0Lgo=|<---