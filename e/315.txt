--->|SGlzIHN0YW5jZSBpc24gYW1hemluZywgYnV0IHlvdSBjYW4gdXNlIGl0IG1vcmUgdGhhbiB5b3UgYXJlLiAKVGhpcyBpZGVhIGNhbWUgdXAgaW4gU2VwdGVtYmVyJ3MgU3RhdGUgb2YgdGhlIFN1YnJlZGRpdCBwb3N0LCBhbmQgc2V2ZXJhbCBwZW9wbGUgZXhwcmVzc2VkIGludGVyZXN0IGluIGl0LiBJdCB3YXMgbGVmdCBhcywgImluaXRpYWxseSBpdCBtaWdodCBoYXZlIHRvIGJlIGhlYWRlZCBieSBhIHNpbmdsZSB1c2VyIHVudGlsIGl0IGdhaW5zIHRyYWN0aW9uLiIgU2luY2Ugbm8gb25lIGVsc2Ugc2VlbWVkIHRvIGJlIHRha2luZyB0aGUgaW5pdGlhdGl2ZSwgSSBhc2tlZCAvdS9Zb3VyU2hvZXNVbnRpZWQgaWYgSSBjb3VsZCBzdGFydCBpdCB1cC4gU28gZm9yIHRoZSBuZXh0IHRocmVlIHdlZWtzLCBhcyBhIHRyaWFsIHJ1biwgSSB3aWxsIGNyZWF0ZSB0aGlzIHRocmVhZCBmaXJzdCB0aGluZyBNb25kYXkgbW9ybmluZyAoRVNUKSwgYW5kIHdlIHdpbGwgc2VlIGhvdyBpdCBnb2VzLiBBZnRlciB0aGF0IHdlIGNhbiBkZWNpZGUgaWYgd2Ugd2FudCB0byBrZWVwIGl0IGFyb3VuZCBmb3IgbG9uZ2VyIG9yIGp1c3Qgc2NyYXAgdGhlIHdob2xlIGlkZWEuCkF0IGxlYXN0IHRoYXQgd2hhdCBJIGhhZCBmb3VuZCBvdXQgYSBmZXcgbW9udGhzIGFnby4gMjIgcG9pbnRzICBzdWJtaXR0ZWQgMyBkYXlzIGFnbwpUaGUgdGVuYW50cyBoYXZlIGEgdG9kZGxlciBhbmQgYW4gOCBtb250aCBvbGQuCkluIGxpZmUsIHNoZSBoYWQgYSBuZXQgbmVnYXRpdmUgc2NvcmUuIApJIGFjdHVhbGx5IGJlZW4gdG9sZCBob3cgaW50ZWxsaWdlbnQgSSBhbSBtb3JlIHRpbWVzIHNpbmNlIGxvc2luZyB3ZWlnaHQuIGFuZCBvYnZpb3VzbHkgdGhhdCBkaWRuIGNoYW5nZS4gUGVvcGxlIGFyZSBkZWZpbml0ZWx5IG5pY2VyLgozLiBJZiB5b3VyIGd1ZXN0cyBhcmUgZW5lcmdldGljIGFuZCBhcmUgZmFucyBvZiBhIHJlYWxpdHkgVFYgc2hvdywgdGhlbiB5b3UgY291bGQgbWFrZSBhIGJpcnRoZGF5IHBhcnR5IGZ1biBieSBoYXZpbmcgZXZlcnlvbmUgZG8gc29tZXRoaW5nIHNpbWlsYXIgYXMgdGhleSBkbyBpbiBzdWNoIHNob3dzLiBUaGVyZSBpcyBubyBuZWVkIHRvIG1ha2UgaXQgY29tcGxpY2F0ZWQgYW5kIHN0cmljdC4gWW91IGp1c3QgaGF2ZSB0byB0cmVhdCB0aGUgY2VsZWJyYW50IGFuZCB0aGUgZ3Vlc3RzIGludG8gZXhjaXRpbmcgY29uc2VxdWVuY2VzLgpLaWxsZWVucyBtb3ZlZCBpbnRvIHRoZWlyIHVsdHJhIGNvbnRlbXBvcmFyeSBEZWVwIENvdmUgaG9tZSBzZXZlbiB5ZWFycyBhZ28uIApQYXNpdXRsaWdlTGV2ZWwgMyBNaWxpdGFyeSBWZXN0Ckl0cyBwcmVzZW50IHByb2dyYW1zIGFyZSBhbHNvIGRpZmZlcmVudC4uIApBcyBJIGtlZXAgc2F5aW5nLCBpdCdzIGFsbCB0b28gZWFzeSB0byBzcGluIGZpY3Rpb24gaGVyZS4gCkhvd2V2ZXIsIHRoZSBwYXNzZW5nZXIgd2hvIHdhcyB0YXNlZCBjb250aW51YWxseSBkZWZpZWQgb3JkZXJzIHRvIHN0b3AgY29uY2VhbGluZyB0aGluZ3MgaW4gaGlzIGJhZyBhbmQgdW5kZXIgaGlzIHNlYXQsIGFuZCB0byBzdG9wIHJlc2lzdGluZyAoeWVzIGhlIHdhcyBzdHVjayBpbiB0aGUgc2VhdGJlbHQsIGJ1dCB0aGUgdGVuc2luZyBoaXMgYXJtIGV0YyB3YXMgaGltIHJlc2lzdGluZyBwcmlvciB0byB0aGUgc2VhdGJlbHQgYmVpbmcgYW4gaXNzdWUpLiBBdCB0aGF0IHBvaW50IHRoZSBvZmZpY2VyIGNvdWxkIGFic29sdXRlbHkgcmVtb3ZlIGhpbSBmcm9tIHRoZSB2ZWhpY2xlIGFuZCBkZXRhaW4gaGltLiBUaGUgd2F5IHRoZSByZXN0IG9mIHRoZSBzdG9wIHdhcyBoYW5kbGVkIGNlcnRhaW5seSB3YXNuIGdyZWF0LCBidXQgZnJvbSB3aGF0IEkgY2FuIHRlbGwsIGF0IGxlYXN0IHRoZSByZWFzb25hYmxlIHN1c3BpY2lvbiBmb3IgdGhlIHN0b3Agd2FzIHRoZXJlLi4gClRoZSBodWJyaXMgb2YgdGhlIGF0aGVpc3Qga2VlcHMgdGhlbSBzdHVjayBpbiB0aGVpciBjYW1wLCBzZWVtaW5nIGlnbm9yYW50IG9mIHRoZSBpcm9ueSBvZiB0cm93aW5nIHN0b25lcyBmcm9tIHRoZWlyIGJlbGllZiBhdCBhbm90aGVyLi4gClRoZXJlIGxpdGVyYWxseSBub3RoaW5nIGVsc2UgdG8gZG8gYnV0IGhpa2UuIApUaGlzIHdhcyB0YWtlbiBmcm9tIHRoZSBjb25jbHVzaW9uIG9mIHRoZSBhYnN0cmFjdCwgIlRoZSByZXN1bHRzIG9mIHRoaXMgc3R1ZHkgc3VnZ2VzdCB0aGF0IHRoZXJlIHdhcyBubyBlZmZlY3Qgb2YgdGhlIHNldmVyaXR5IG9mIHNjb2xpb3NpcyBvbiBkZWxpdmVyeSBjb21wbGljYXRpb25zIG9yIHJlZ2lvbmFsIGFuZXN0aGV0aWMgZGVjaXNpb24gbWFraW5nIGluIHByZWduYW50IHBhdGllbnRzIHdpdGggQUlTLiBNb3Jlb3Zlciwgc2NvbGlvc2lzIHdhcyBub3Qgb2JzZXJ2ZWQgdG8gcHJvZ3Jlc3Mgc2lnbmlmaWNhbnRseSBkdXJpbmcgb3IgaW1tZWRpYXRlbHkgYWZ0ZXIgcHJlZ25hbmN5LiAKQ2FuJ3QgcmVtZW1iZXIgaWYgdGhlIGFtcGhldGFtaW5lIGtpbmcgbWFkZSBpdCBiYWNrIG9udG8gdGhlIGNvYWNoIG9yIG5vdCwgYnV0IENhc2lubywgYnVpbHQgaW50byB0aGUgd2FsbCB0byB0aGUgZWFzdCBvZiB0aGUgYXJlYSdzIGZpcnN0IHNhdmUgcG9pbnQuIFRoZXNlIHNlY3Rpb25zIGFyZSBjaW5lbWF0aWMgaW4gc3R5bGUgYnV0IGRvY3VtZW50YXJ5IGxpa2UgaW4gZWZmZWN0ICAgd2Ugd2F0Y2ggZ29vZCB0aGluZyBhcyBpdCBwcm92aWRlcyBhbiBhZHVsdCBwcmVzZW5jZSBpbiB0aGUgcGFydHkgcm9vbS4gCllvdSBjYW4gYWxzbyBnZXQgZnJlZSBvbmxpbmUgcG9rZXIgbW9uZXkgYnkgbWFraW5nIHVzZSBvZiBhIG5vIGRlcG9zaXQgYm9udXMuIFNvbWUgd2Vic2l0ZXMgb2ZmZXIgWW91IGEgTm8gRGVwb3NpdCBQb2tlciBCb251cywgaWYgWW91IGpvaW4gYSBwb2tlciByb29tIHZpYSB0aGVpciBhZmZpbGlhdGUgbGluay4gVGhpcyB3YXkgWW91IGNhbiBqb2luIGEgcG9rZXIgc2l0ZSBmb3IgZnJlZSBhbmQgd2lsbCBnZXQgYW4gaW5pdGlhbCBmdW5kaW5nIG9mIFlvdXIgcmVhbCBtb25leSBhY2NvdW50IHdpdGhvdXQgZGVwb3NpdGluZyBtb25leSBZb3Vyc2VsZi4gClBhIGV4ZW1wbGU6IHNvdWhhaXQgZGUgdmVyZHVyZSAoIHF1YW5kIGRlcyBub3V2ZWF1eCBhcmJyZXMgcGxhbnRzIHJ1ZSBNYXJ4IERvcm1veSwgQm91bGV2YWQgT3JuYW5vLCBCb3VsZXZhcmQgTmV5LiksIGRlIGR2ZWxvcHBlbWVudCBjb25vbWlxdWUgKCBxdWFuZCBkZSB2cmFpZXMgZW50cmVwcmlzZXMgaW5ub3ZhbnRlcyBkYW5zIG5vcyBhcnJvbmRpc3NlbWVudHMgamV1bmVzKSwgZXQgZGUgZm9ybWF0aW9uIGF1eCBtdGllcnMgZGUgZGVtYWluID8KVGhlIGZhc3QgdGFsa2luZyBnaW4gcHJvZGlneSBzZXR0bGVkIGluIExhcyBWZWdhcyBpbiB0aGUgbGF0ZSAxOTcwcyBhbmQgd2FzIHNvb24gYSByZWd1bGFyIGluIHRoZSBoaWdoIHN0YWtlcyBwb2tlciBjYXNoIGdhbWVzLiBEZXNwaXRlIGhhdmluZyBsaW1pdGVkIGV4cGVyaWVuY2UsIFVuZ2FyIHRvb2sgdG8gcG9rZXIgd2l0aCBsaWdodGVuaW5nIHNwZWVkLiBEb3lsZSBCcnVuc29uIGxhdGVyIGNsYWltZWQgdGhhdCBoZSdkIG5ldmVyIHNlZW4gYW55b25lIHBpY2sgdXAgdGhlIGdhbWUgYXMgcXVpY2tseSBhcyBTdHVleS4gSW4gMTk4MCBoZSBiZWNhbWUgdGhlIHlvdW5nZXN0IGV2ZXIgd2lubmVyIG9mIHRoZSBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgKFdTT1ApTWFpbiBFdmVudCBhbmQgd2FzIGNocmlzdGVuZWQgd2l0aCBhIG5ldyBuaWNrbmFtZSwgIlRoZSBLaWQiLCBhIHJlZmVyZW5jZSB0byBoaXMgdGVuZGVyIGFnZSBhbmQgc2NyYXdueSBmcmFtZS4gSGUgc3VjY2Vzc2Z1bGx5IGRlZmVuZGVkIGhpcyB0aXRsZSB0aGUgZm9sbG93aW5nIHllYXIuClRoZSBCcmFkeSBCdW5jaCBXaWRvd2VyIE1pa2UgQnJhZHkgKFJvYmVydCBSZWVkKSwgYW4gYXJjaGl0ZWN0IHdpdGggdGhyZWUgc29ucywgbWFycmllZCBDYXJvbCAoRmxvcmVuY2UgSGVuZGVyc29uKSwgYSB3aWRvdyB3aXRoIHRocmVlIGRhdWdodGVycy4gVGhlaXIgY29tYmluZWQgZmFtaWx5LCBmcm9tIGxlZnQ6IEdyZWcgKEJhcnJ5IFdpbGxpYW1zKSwgSmFuIChFdmUgUGx1bWIpLCBDaW5keSAoU3VzYW4gT2xzZW4pLCBNYXJjaWEgKE1hdXJlZW4gTWNDb3JtYWNrKSwgQm9iYnkgKE1pa2UgTG9va2lubGFuZCkgYW5kIFBldGVyIChDaHJpc3RvcGhlciBLbmlnaHQpLiAKSSBzdGF5ZWQgaW5zaWRlIGFuZCBkaWQgbm90aGluZyB0b2RheS4gCkFuZCBteSBjaW5uYW1vbiBzaGFrZXIgaGFkIGEgbWFsZnVuY3Rpb24uIApMaXNhIHNheXM6ICJJdCdzIHRoZSBsb25nZXN0IHRleHQgaGUncyBldmVyIHNlbnQgbWUuIEhlIGhhcyBhIHJlcHV0YXRpb24gZm9yIGJlaW5nIGEgYml0IG9mIGEgY2hhcm1lciwgYW5kIEkgaGFkIGJlZW4gd2FybmVkIGJ5IGEgY29sbGVhZ3VlIHRoYXQgaGUgd2FzIGEgbGFkaWVzJyBtYW4sIHNvIEkgd2FzIGEgYml0IHdhcnkuIEhlJ3Mgc3VjaCBhIGZsaXJ0LCBzdWNoIGEgY2hhcm1lciAgIGFuZCBJIGZlbGwgZm9yIGl0LiAKVGhleSBwdW1wIGFuZCBkdW1wIHdoZW4gdGhleSB3YW50LiAKT2YgY291cnNlLCB5b3Ugd291bGQgd2FudCB0byBoYXZlIGEgc21hbGwgYW5kIGZhaXIgY3V0IG9uIGludGVncmF0aW9ucyBzb2xkIHRoZXJlLi4gClRoZSBpbmFiaWxpdHkgb2YgdGhlIFVTIGhlYWx0aCBjYXJlIHN5c3RlbSBvciB0aGUgZmVkZXJhbCBnb3Zlcm5tZW50IHRvIGRlbGl2ZXIgZnJlZSBhbmQgZmFpciBhY2Nlc3MgdG8gdGhlIHRocmVhdCBvZiBhIHBhbmRlbWljIGZsdSBzaG91bGQgaGF2ZSBBbWVyaWNhbnMgYW5ncnkgYW5kIGRlbWFuZGluZyB1bml2ZXJzYWwgY292ZXJhZ2UuIEJ1dCBpdCBkb2VzbiBJbnN0ZWFkIGF2ZXJhZ2UgQW1lcmljYW5zLCBmZWQgYSBzdGVhZHkgZGlldCBvZiBzdHVwaWRpdHkgYnkgRm94IE5ld3MsIGFyZSByZXNwb25kaW5nIGJ5IGJlbGlldmluZyB1bml2ZXJzYWwgaGVhbHRoIGNhcmUgdG8gYmUgYSAidGhyZWF0IiB0byB0aGUgIkFtZXJpY2FuIHdheS4iIEluc3RlYWQgb2YgY2FyaW5nIGFib3V0IHRoZW1zZWx2ZXMgb3IgdGhlaXIgZmVsbG93IEFtZXJpY2FucywgdGhleSBwcm90ZXN0LCBzY3JlYW0sIHllbGwsIGFuZCBpbiBBcml6b25hLHdvcmsgdG8gY2hhbmdlIHRoZSBzdGF0ZSBjb25zdGl0dXRpb25zIHNvIG5vIHBlcnNvbiBvciBlbXBsb3llciBjYW4gYmUgImZvcmNlZCIgdG8gaGF2ZSBoZWFsdGggY2FyZS4KQWJzb2x1dGVseSB0aGVyZSBpcyBhIGhpZXJhcmNoeSBvZiBjcmltZXMgYW5kIGNyaW1pbmFscyBpbnNpZGUgYSBwcmlzb24uIERydWcgZGVhbGVycywgZHJ1ZyBkZWFsaW5nIHJlbGF0ZWQgdmlvbGVuY2UgYW5kIHRoZWZ0LCBpdCdzIGp1c3QgYnVzaW5lc3MuIApNb3N0IHBlb3BsZSBhcmUgc2hvY2tlZCB3aGVuIEkgdGVsbCB0aGVtIEkgd2VudCB0byBFdXJvcGUgZm9yIGEgbW9udGggYW5kIGRpZCA3IGRpZmZlcmVudCBjb3VudHJpZXMsIG92ZXIgYSB3ZWVrIG9mIHRoYXQgd2FzIGJ5IG15c2VsZiBpbiBQcmFndWUgYW5kIFZpZW5uYS4gCkNhbmFkYSBQZW5zaW9uIFBsYW4gYmVuZWZpdHMgd29yayBvdXQgdG8gdGhlICQ5MDAgcGVyIG1vbnRoIGhlIGN1cnJlbnRseSByZWNlaXZlcyBhbmQgYSBwcm9qZWN0ZWQgJDkwMCBwZXIgbW9udGggZm9yIExvdWlzYS4gU2hlIHNob3VsZCBkZWxheSB0aGUgc3RhcnQgZm9yIGEgeWVhciB0byA2NiBhbmQgZ2V0IGFuIDguNCBwZXIgY2VudCBib29zdCB0byAkOTc2IHBlciBtb250aC4gCkNhUmlTc0E1MDQgICAyIHBvaW50cyAgc3VibWl0dGVkIDEzIGRheXMgYWdvCkRyYXljbyBpcyBpbiBTYW50YSBSaXRhIEphaWwgc2VydmluZyBhIHNlbnRlbmNlIGZvciBwbGFua2luZyBzb21lb25lIGF0IHRoZSBPQiB0ZW50IGNpdHksIHBlcmhhcHMgb3ZlciBPQidzIGtpdGNoZW4uCkFsdGhvdWdoIG5vdyB0aGF0IEknbSB0eXBpbmcgdGhpcyBvdXQgaXQgZG9lc24ndCwgd2h5IGRyaXZlIHRoZSBnaXJscyA0MCBtaW51dGVzIHRvIHRoZSBzaXRlIGJlZm9yZSBraWxsaW5nIHRoZW0/IFRoZSBvbmx5IHJlYXNvbiB0aGF0IG1ha2VzIG1vcmUgc2Vuc2UgdG8gbWUgaXMgYmVjYXVzZSBvZiB0aGUgInNoYWRvd3MiIHdoaWNoIEkgcmVhbGl6ZSBoYXNuJ3QgYmVlbiBjb25maXJtZWQgYnkgYW55b25lIGluIExFIHNvIEkgZ3Vlc3MgSSBzaG91bGRuJ3Qga2VlcCB0aGlua2luZyB0aGF0J3MgZXZpZGVuY2UgdGhleSB3ZXJlIHN0aWxsIGFsaXZlLiAKUm91bGV0dGUgaXMgcGxheWVkIGF0IGFuIGVsb25nYXRlZCB0YWJsZS4gQXQgb25lIGVuZCBpcyBhIHdoZWVsLCB3aXRoIGEgbm90Y2ggaW4gdGhlIHRhYmxlIHdoZXJlIHRoZSBkZWFsZXIgc3RhbmRzLiBUaGUgdGFibGUgaXMgY292ZXJlZCB3aXRoIGEgZmVsdCBsYXlvdXQgd2l0aCBib3hlcyBmb3IgdGhlIG51bWJlcnMgMSB0aHJvdWdoIDM2IGFycmFuZ2VkIGluIHRocmVlIGNvbHVtbnMgYW5kIDEyIHJvd3MuIApKYXBhbiBuZWVkcyB0byBhdHRhaW4gYSBoaWdoZXIsIHN1c3RhaW5hYmxlIGdyb3d0aCByYXRlIGlzIGZvciBlYWNoIEphcGFuZXNlIHRvIGJlIG1vcmUgcHJvZHVjdGl2ZSwgbW9yZSBpbm5vdmF0aXZlIGFuZCBtb3JlIGNvbXBldGl0aXZlLCBBZGFjaGkgc2F5cy4uIApIZSBkb2VzbiBuZWVkIHRvIHRvdWNoIG9yIGludGVyYWN0IHdpdGggdGhlIHBhdGllbnQgYXMgaGUgZGlkbiB0b3VjaCBhbnkgb2YgdGhlbSBkdXJpbmcgdGhpcyB2aWRlby4gSSBzdXNwZWN0IHRoZXkgd29uIHNlZSBzdWNoIGEgcHJvZm91bmQgZWZmZWN0IHdoZW4gdGhlIHBhdGllbnQgaXMgbm90IGluZmx1ZW5jZWQuLiAKUHVibGljIFJlbGF0aW9ucyBBbG1vc3QgYWxsIG1ham9yIGdvdmVybm1lbnQgYWdlbmNpZXMgaGF2ZSB0aGVpciBvd24gcHVibGljIHJlbGF0aW9ucyBzdGFmZiwgYW5kIGluIG1hbnkgY2FzZXMgaXQgaXMgYSBzdGFuZCBhbG9uZSBkZXBhcnRtZW50IHdpdGggYSBwdWJsaWMgcmVsYXRpb25zIG9yIG1lZGlhIGRpcmVjdG9yIGFuZCBzZXZlcmFsIHN1cHBvcnQgc3RhZmYuIEdvdmVybm1lbnQgYWdlbmN5IFBSIGRlcGFydG1lbnRzIGFyZSByZXNwb25zaWJsZSBmb3IgcHJvZHVjaW5nIG5ld3MgcmVsZWFzZXMsIGhvbGRpbmcgcHJlc3MgY29uZmVyZW5jZXMsIGFuZCBnZW5lcmFsbHkgcHJvbW90aW5nIGFjdGl2aXRpZXMgb2YgdGhlIGFnZW5jeSwgc3VjaCBhcyB0b3VyaXNtIG9yIGVuY291cmFnaW5nIG5ldyBidXNpbmVzc2VzIHRvIG1vdmUgaW50byB0aGUgYXJlYS4KTWFyaWUgZmFsdGVycyBkdXJpbmcgdGhlIG5leHQgd2VlayBhbmQgYSBoYWxmLCB0aGV5IGNvdWxkIGp1bXAgaW50byB0aGlyZC4gQXQgbGVhc3QgdGhleSBoYXZlIGFscmVhZHkgbG9ja2VkIHVwIGhvbWUgaWNlIGFkdmFudGFnZSBpbiB0aGUgZmlyc3Qgcm91bmQsIHdoZXJlIHRoZXkgd2lsbCBiZSBhIGZvcm1pZGFibGUgZm9lLi4gCk1hbi4gSSBwcmlkZSBteXNlbGYgb24gaGF2aW5nIGxpdHRsZSByZWFjdGlvbiB0byBjcmlzaXMsIGxpa2UgaXQgY291bGQgZGFtbiB3ZWxsIGJlIG1pc3Rha2VuIGZvciBwc3ljaG9wYXRoeSBJJ20gc28gZGFtbiBjYWxtL2FibGUgdG8gdGhpbmssIGJ1dCB0aGF0LiBFdmVyeXRoaW5nIHN0b3BwZWQgd29ya2luZy4gCkkgbm90IG9wcG9zZWQgdG8gYSBzdWJzY3JpcHRpb24gZ2FtZSBpZiBpdCB3aWxsIHByb3Blcmx5IHVubG9jayB0aGluZ3MsIGJ1dCBJIHBsYXllZCBzb21lIHByZXR0eSBzbGVlenkgZjJwIGdhbWVzIGluIHRoZSBwYXN0IHRoYXQgd2lsbCBvZmZlciBhIHN1YiwgYnV0IHN0aWxsIGV4cGVjdCB5b3UgdG8gbWFrZSBtaWNybyB0cmFuc2FjdGlvbnMgb24gdG9wIG9mIHRoYXQsIGFuZCBpdCBsZWF2ZXMgYSBwcmV0dHkgYmFkIHRhc3RlIGluIG15IG1vdXRoLgpBIHBhY2lmaXN0IGNoYXJhY3RlciBjYW4gd29yayBhbmQgbWF5IGV2ZW4gYmUgYW1hemluZyB0byBwbGF5LiBCdXQgY29tYmF0IGlzIGEgQklHIHBhcnQgb2YgRCBpbiBtb3N0IGNhbXBhaWducyBpdCBpcyB0aGUgbW9zdCBpbXBvcnRhbnQgcGFydC4gTWFrZSBzdXJlIHRoYXQgeW91ciBjaGFyYWN0ZXIgaXMgYWN0dWFsbHkgY2FwYWJsZSB0byBwYXJ0aWNpcGF0ZSBpbiBpdC4gClRoZSBjb21wYW55IHNhaWQgaXRzIGNvbXBlbnNhdGlvbiBwYWNrYWdlIGlzIGNvbXBhcmFibGUgdG8gb3RoZXJzIGluIHRoZSBzZWN0b3IgYW5kIEVtcGxveW1lbnQgU3RhbmRhcmRzIEFjdCByZXF1aXJlbWVudHMuIApGcmVlZCB0aGUgY291bnRyeSBmcm9tIHdob20gZXhhY3RseT8gQSBvbmUgcGFydHkgc3RhdGUgd2l0aCBleHRyZW1lbHkgbGltaXRlZCBmcmVlZG9tcyB0b29rIG92ZXIgYSBzaGFtIG11bHRpcGFydHkgc3RhdGUgd2l0aCBtb3JlIGJ1dCBmYWlybHkgcmlja2V0eSBmcmVlZG9tcy4gTm90IGxpa2UgdGhlIE5vcnRoIGxldCB5b3Ugc2F5LCAiSGV5IHRoaXMgb25lIHBhcnR5IGJ1c2luZXNzIGlzIEJTLCBsZXQgZ2l2ZSBwZW9wbGUgdGhlIGZyZWVkb20gdG8gcHV0IGZvcnRoIGFueSBwYXJ0eSBhbmQgYW55IHN5c3RlbSB0aGV5IHdhbnQuIiBUaG9zZSBwZW9wbGUgZGlzYXBwZWFyZWQgICBzb3J0IG9mIGxpa2UgdGhleSBkbyB0b2RheSwgcmlnaHQ/Pz9XaHkgd291bGQgYWNjZXB0aW5nIHVuZW1wbG95ZWQgYW5kIG9yIHVuZW1wbG95YWJsZSBwZW9wbGUgYmUgYW4gaW50ZWxsaWdlbnQgY2hvaWNlPyBTdXJlLCB5b3UgbWlnaHQgaGF2ZSB5b3VyIHBlbnNpb24gdG8gZHJhdyBvbiwgYnV0IG9wZW5pbmcgdXAgdGhhdCBwYXRoIGluIGdlbmVyYWwgaXMgc3R1cGlkLCBpdCdzIG5vdCBpbnRlbGxpZ2VudCwgaXQncyBqdXN0IGNvbnZlbmllbnQgZm9yIHlvdS4uIApDaGVzc3RhcmlhbSAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxMSBkYXlzIGFnbwpJIHdpc2ggSSBjb3VsZCBzYXkgdGhhdCBoZSBjaGFuZ2VkIGhpcyBtaW5kIGFuZCBiZWNhbWUgYSBnb29kIGh1c2JhbmQvaHVtYW4gYnV0IGhlIGRpZG4gdGhlIGNodXJjaCBoZWxwZWQgbWUgc3RhcnQgbXkgbGlmZSBhZ2FpbiwgSSBtb3ZlZCBiYWNrIHRvIG15IGhvbWUgY291bnRyeSwgSSBnb3QgbXkgb3duIHBsYWNlIGZvciB0aGUgZmlyc3QgdGltZSBpbiBteSBsaWZlLCB0aGUgY2h1cmNoIGhlbHBlZCBtZSBwYXkgdGhlIGJpbGxzIGZvciB0aGUgZmlyc3QgZmV3IG1vbnRocyBhbmQgaGFkIG1lIGdldCBhbGwgb2YgdGhlIGNvdW5zZWxpbmcgSSBuZWVkZWQuIEkgbWFkZSBzb21lIGhlYWx0aHkgYm91bmRhcmllcyB3aXRoIG15IGZhbWlseSBhbmQgc3RhcnRlZCByZWZpbmlzaGluZyBmdXJuaXR1cmUgdG8gZmlsbCBteSBsb25lbHkgaG91cnMgYWZ0ZXIgd29yay4gClJlYWxseSBhIHNoYW1lIHRoZXkgZGlkbnQgZ2V0IHRvZ2V0aGVyLiBPbmUgb2YgdGhlIHRoaW5ncyB0aGF0IGRpc2FwcG9pbnRlZCBtZSB0aGUgbW9zdCBhYm91dCB0aGUgZXBpbG9ndWUgYW5kIGxlZnQgbWUgd2l0aCBhIGZlZWxpbmcgdGhhdCBpdCB3YXMgd3JpdHRlbiBsaWtlIGEgY2hlZXN5IEhvbGx5d29vZCBlbmRpbmcuCktKSyBoYXMgbmV2ZXIgbGlrZWQgYmVpbmcgbGlua2VkIHdpdGggSkggaW4gYSByb21hbnRpYyB3YXkgYW5kIGhhcyBhbHdheXMgbWFkZSBpdCBjbGVhciB0aGV5IGFyZSBub3QgbGlrZSB0aGF0LiAKSSBzdHVjayBteSBoYW5kIGluIHRoZXJlIG11bHRpcGxlIHRpbWVzIG5vdCAxNSBtaW51dGVzIGJlZm9yZWhhbmQuIApZb3UgdGVuZCB0byBlYXQgbHVuY2ggb3V0c2lkZSwgd2hlcmUgcG9saWNlIGNhbiBlYXNpbHkgc3BvdCB5b3UsIGNvbnNpZGVyIGVhdGluZyAid2hpdGUgZm9sayIgZm9vZHMuIApIb3cgaXQgV29ya3NXaGVuIHdlIGV4ZXJjaXNlLCBvdXIgbXVzY2xlcyBodXJ0LiBUaGV5IGxpdGVyYWxseSB0ZWFyIHRoZW1zZWx2ZXMgYXBhcnQgYW5kIHJlYnVpbGQgc3Ryb25nZXIgY29ubmVjdGlvbnMgY2VsbCBieSBjZWxsLiBUaGUgcmVhc29uIHdlIGRvIG5vdCBmZWVsIHRoaXMgaXMgYmVjYXVzZSBvdXIgYnJhaW4gcmVsZWFzZXMgY2VydGFpbiBjaGVtaWNhbHMgdG8gbWFzayB0aGUgcGFpbi4gCkdldCByZWFkeSB0byB5ZWxsLCAiQklOR08hIiBiZWNhdXNlIFdpbm5hVmVnYXMgaXMgdGhlIGJlc3QgcGxhY2UgYXJvdW5kIGZvciBzb21lIGxpdmVseSBCaW5nby4gV2lubmFWZWdhcyBoYXMgZ3JlYXQgbGl2ZSBlbnRlcnRhaW5tZW50IGluIHRoZSBFdmVudCBDZW50ZXIgYW5kIHRoZSBuZXdseSByZW5vdmF0ZWQgTG91bmdlIEJhci4gCkJyb2RpZS4gCkhhbm5vdmVyIHBsYXllZCBubyBwYXJ0aWN1bGFybHkgaW1wb3J0YW50IHJvbGUgaW4gdGhpcyBkZXZlbG9wbWVudC4gSXQganVzdCBoYXBwZW5zIHRvIGJlIHRoZSBwbGFjZSB3ZXJlIHRoZSBsb2NhbCBhY2NlbnQgaXMgcGVyY2VpdmVkIGFzIGNsb3Nlc3QgdG8gdGhlIHN0YW5kYXJkIChhdCBsZWFzdCwgdGhhdCBhIGNvbW1vbmx5IGhlbGQgbm90aW9uKS4gUHJpb3IgdG8gd29ybGQgd2FyIEksIHRoYXQgaG9ub3VyIGFjdHVhbGx5IHdlbnQgdG8gUHJhZ3VlLiAzIHBvaW50cyAgc3VibWl0dGVkIDEgeWVhciBhZ28KV2lmZSBnZXRzIGEgY2FsbCBhdCB3b3JrIG5vdGlmeWluZyBoZXIgb2YgYSBkZWF0aCBpbiBmYW1pbHkgYW5kIHNoZSBmbGllcyBlYXN0IGZvciB0aGUgZnVuZXJhbC4gCk91ciB0b3AgaGVhbHRoLCB2aXNpb24sIGFuZCBkZW50YWwgaW5zdXJhbmNlIGlzIGxlc3MgdGhhbiBhIGh1bmRyZWQgYSBtb250aCBjb21iaW5lZCBmb3IgYW4gaW5kaXZpZHVhbCwgaXQgaXMgbW9yZSBzcGVuZHkgZm9yIGEgZmFtaWx5LiBXZSBnZXQgcGFpZCB0byB2b2x1bnRlZXIsIHdoaWNoIGlzIGluY3JlZGlibGUuLiAKSWYgeW91IGFyZSBub3QgdmVyeSBtYW55IHBsYXllcnMgYXdheSBmcm9tIHRoZSBmaW5hbCB0YWJsZSBwbGF5IHRpZ2h0ZXIgc2luY2UgdGhlIHBheW91dHMgYXJlIG11Y2ggYmlnZ2VyIGlmIHlvdSBtYWtlIGl0IHRvIHRoZSBmaW5hbCBwb2tlciB0YWJsZS4gS25vd2luZyB0aGlzLCBvZiBjb3Vyc2Ugd2lsbCBoYXZlIHRoZSBiaWcgc3RhY2tzIHRyeWluZyB0byBwdXNoIHlvdSBhcm91bmQuIFlvdSBjYW4gdXRpbGl6ZSB0aGlzIHRvIHlvdXIgYmVuZWZpdCB3aGVuIHVwIGFnYWluc3Qgb3RoZXIgc2hvcnQgb3IgbWVkaXVtIHN0YWNrcywgd2hvIGZlYXIgZ2V0dGluZyBlbGltaW5hdGVkLiAKV2UgYmVsaWV2ZSBNb20gZ290IGRlYWx0IGEgcmVhbGx5IGdvb2QgaGFuZCBhbmQgc2luY2UgaXQncyB3aW5uZXIgdGFrZXMgYWxsIHNoZSBoYWQgdG8gdGFrZSB0aGUgc2VhdCB0byBjbGFpbSB0aGUgcHJpemUuIEFzIGEgcGVyc29uIHdobyBkaWRuJ3QgZ2V0IGRlYWx0IGFuIGVhc3kgaGFuZCBpbiBsaWZlLCBzaGUgd2FzIHJlbWFya2FibGUgaW4gdHVybmluZyBhIGhhbmQgb2Ygc3BhZGVzIGludG8gZGlhbW9uZHMuIApZb3UgY2FuIGNvbnRpbnVlIHRoZSBpbnRha2UgZHVyaW5nIHRoZSBtYXNzYWdlIChmb3IgbWVkaWNhbCBtYXNzYWdlICAgbGVzcyBzbyBmb3IgcmVsYXhhdGlvbikgYW5kIGNvbnRpbnVlIHRvIGdldCBnb29kIGluZm9ybWF0aW9uLiAiSXMgdGhpcyB0aGUgc3BvdCB5b3Ugd2VyZSB0YWxraW5nIGFib3V0PyBIb3cgaXQgZmVlbCBub3c/IEhvdyBpdCBmZWVsIHdoZW4gSSBkbyB0aGlzPyBXaGF0IGlmIHlvdSBtb3ZlZCBsaWtlIHRoYXQ/IEhleSwgd2hlbiBkbyB5b3Ugbm90aWNlIHRoaXMgc3BvdD8gSG93IGRvZXMgaXQgY29tcGFyZSB0byB0aGUgb3RoZXIgc2lkZT8iLiAKVGhhdCB3YXMgYmVmb3JlIEkgbGVhcm5lZCB0byBzcGVhayB1cC4gVGhhdCB3YXMgYSBkaXNhc3Rlci4gCldobyBrbm93cywgYnV0IGluIHRlcm1zIG9mIGFuIGV4Y2VsbGVudCB3YXkgdG8gc3BlbmQgU3QuIApIZSByZXBsYWNlcyBUaGFtIEtoYWkgTWVuZywgd2hvIHdhcyBsZXQgZ28gaW4gSnVseSBvdmVyIHVuc3BlY2lmaWVkIHZpb2xhdGlvbnMgb2YgdGhlIGNvbXBhbnkncyBjb2RlIG9mIGNvbmR1Y3QuIApJIGxvdmVkIFRhbGVzIGZyb20gdGhlIFlhd25pbmcgUG9ydGFsIHdoZW4gaXQgY2FtZSBvdXQgICBoYXZlbiBiZWVuIGFibGUgdG8gd29yayBhbnkgZHVuZ2VvbnMgaW50byBhbnkgb2YgbXkgY2FtcGFpZ25zIHlldCwgYnV0IGl0cyBjb29sIHNlZWluZyBodGUgb2xkIG1hcHMgdXBkYXRlZC4gCkl0IHVzZWQgdG8gYmUgTGVlcm95IG9yIEtpbGwgQ29tbWFuZCB3YXMgdGhlIG9ubHkgdG9wIGRlY2tzIHRoYXQgZmVsdCBiYWQgbG9zaW5nIHRvbyBYRApUaGVyZSBpcyBhIHBhcnQgb2YgaXQgdGhhdCBzdGlwdWxhdGVzIGhvdyBsb25nIGFuIGVsZXZhdG9yIGRvb3IgbXVzdCBzdGF5IG9wZW4gYmVmb3JlIGl0IGNhbiBiZSBjbG9zZWQgYnkgYW55IG1lYW5zIHRvIGdpdmUgZGlzYWJsZWQgcGVvcGxlIHRpbWUgdG8gZ2V0IGluIHRoZXJlLiBJIGRvbiByZW1lbWJlciB0aGUgZXhhY3QgdGltZS4gCk1vc3QgYWdlbnRzLCB0aG91Z2gsIHRyeSB0byBuZWdvdGlhdGUgZGVhbHMgcHJpb3IgdG8gdGhlIHN0YXJ0IG9mIGEgdG91cm5hbWVudC4KVW5pdmVyc2l0eSBvZiBIb3VzdG9uIGNvbGxlZ2UgZHJpbmtpbmcgcmF0ZXMgYXJlIGFjdHVhbGx5IGxvd2VyIHRoYW4gbW9zdCBjb2xsZWdlcywgd2l0aCBzdHVkZW50cyByZXBvcnRpbmcgdGhhdCB0aGV5IGNvbnN1bWUgYXBwcm94aW1hdGVseSAzLjUgZHJpbmtzIHBlciB3ZWVrIGNvbXBhcmVkIHRvIGEgbmF0aW9uYWwgYXZlcmFnZSBvZiBhYm91dCA2LjUuIEluIDIwMTQgVUggd2FzIG5hbWVkIGluIHRoZSB0b3AgMjAgc2Nob29scyBsaXN0IGNvbXBpbGVkIGJ5IHRoZSBQcmluY2V0b24gUmV2aWV3LiBOZWlnaGJvcnMgY2FuIHVzZSB0aGF0IGFzIGEgZmlyc3QgbGluZSBkZWZlbnNlIHRvIGRpc2NvdXJhZ2UgeW91bmdlciBzdHVkZW50cyBieSB1c2luZyBwZXJzb25hbGl6ZWQgbm9ybWF0aXZlIGZlZWRiYWNrLi4gClRoZSByZXNlYXJjaGVycyBmb3VuZCB0aGF0LCBpbiBnZW5lcmFsLCBXZXN0ZXJuIG1lZGljaW5lICh2ZXJzdXMgVENNKSB0aGUgcGVyY2VpdmVkIGltcG9ydGFuY2Ugb2YsIGFuZCBtb3RpdmF0aW9uIHRvIGVuZ2FnZSBpbiwgY29tcGxlbWVudGFyeSBoZWFsdGggcHJvdGVjdGl2ZSBiZWhhdmlvciwgdGhlcmVieSB1bmRlcm1pbmluZyBhIGhlYWx0aHkgbGlmZXN0eWxlLiBJbiBvdGhlciB3b3JkcywgcGF0aWVudHMgdGFraW5nIHBpbGxzIGZvciB0aGVpciBoaWdoIGJsb29kIHByZXNzdXJlIG1heSBiZSBsZXNzIGFwdCB0byBzZWUgdGhlIG5lZWQgdG8gZXhlcmNpc2UsIHdhdGNoIHRoZWlyIGRpZXQgb3IgbG9zZSB3ZWlnaHQuLiAKTFBHIGlzIGEgbm9uIHByb2ZpdCB2b2x1bnRlZXIgZ3JvdXAgYmFzZWQgaW4gS0wsIGNvbW1pdHRlZCB0byBtYWtpbmcgYSBkaWZmZXJlbmNlIHRvIHRoZSBxdWFsaXR5IG9mIGxpZmUgZm9yIHRoZSBMR0JUIGNvbW11bml0eSBpbiBNYWxheXNpYS4gCkxlIGZvbGRpbmd1ZSBkYW5nZXJldXNlIHMndGFpdCBkaiBzaWduYWxlIHBhciB1biBhbnRjZGVudCBkZSBweXJvbWFuaWUsIHNvaXQgdW4gaW5jZW5kaWUgZGUgdnRlbWVudHMgZGFucyB1biBtYWdhc2luLiBMYSBweXJvbWFuaWUgbG9yc3F1J2VsbGUgZXN0IGxpZSAgZGVzIGZhaXRzIGRlIHZpb2xlbmNlIG0naW5zcGlyZSB0b3Vqb3VycyBwbHVzIG91IG1vaW5zIGRlIHN1c3BpY2lvbiBkJ2luZmVzdGF0aW9uIGRtb25pYXF1ZS4gCk1heCBSaWNodGVyIHdyaXRlcyBtdXNpYyB0aGF0LCBsaWtlIEVpbmF1ZGksIGlzIGNvbnN0cnVjdGVkIHNpbXBseS4gCkknbSBzb3JyeSBidXQgbm8sIHRoZSB2ZXJ5IHNhbWUgdG94aWMgZmFucyB0aGF0IGRvbid0IHdhbnQgdG8gc2VlIENNIHdlbnQgdG8gc2VlIEFsaXRhIGFuZCBoYXZlIGNpdGVkIGhlciBhcyBhIGJldHRlciBwcm90YWcuIApSdXNzaWEgaGFkIGJlZW4gcGxhbm5pbmcgaXRzIGJhbiBmb3Igc29tZSB0aW1lLCB3aXRoIHBhcmxpYW1lbnQgcGFzc2luZyBsZWdpc2xhdGlvbiBpbiAyMDA2IHRoYXQgd291bGQgcmVzdHJpY3QgZ2FtYmxpbmcgdG8gZm91ciByZW1vdGUgYXJlYXMgYXMgb2YgSnVseSAxIHRoaXMgeWVhci4gQnV0IFVrcmFpbmlhbiBsYXdtYWtlcnMgd2VyZSBzbG93ZXIgb2ZmIHRoZSBtYXJrIGFuZCBvbmx5IHNwcmFuZyBpbnRvIGFjdGlvbiBpbiBNYXksIGFmdGVyIG5pbmUgcGVvcGxlIHdlcmUga2lsbGVkIGluIGEgZmlyZSBhdCBhIHNsb3QgbWFjaGluZSBoYWxsIGluIERuaXByb3BldHJvdnNrIGluIGVhc3Rlcm4gVWtyYWluZS4gCkkndmUgbmV2ZXIgdW5kZXJzdG9vZCB3aGVyZSBWaXRvIHdhcyAob3IsIGJldHRlciB5ZXQsIGNvdWxkIGhhdmUgYmVlbikgaGlkaW5nIGp1c3QgYmVmb3JlIGhlIGFwcGVhcnMgc2VlbWluZ2x5IG91dCBvZiBub3doZXJlLCBwb3BzIEphY2tpZSBKci4gSW4gIlRoZSBBcm15IE9mIE9uZSIuIApEZXNwaXRlIHRoZSB3ZWJzaXRlIGNsYWltIG9mIG5lYXJseSAxMDAgZ2lybHMgd29ya2luZyB0aGVyZSwgSSBzYXcgb25seSAxMiBvbiBteSB2aXNpdC4gQWxzbywgdGhlIHBsYWNlIGRvZXNuIGhhdmUgYSBodWdlIG51bWJlciBvZiByb29tcyBzbyBpdCBjYW4gYmUgdGhhdCA4MCsgd2VyZSBhbHJlYWR5IGJvb2tlZCEgQW55d2F5LCAxMiB3b3VsZCBiZSBPSyBpZiB0aGUgcXVhbGl0eSB3YXMgZ29vZCwgYnV0IGl0IHdhc24gSSBzYXcgb25seSBvbmUgd2hvIHdhcywgaW4gbXkgZXllcywgcmVhc29uYWJseSBhdHRyYWN0aXZlLCB3aGlsZSB0aGUgb3RoZXJzIHJhbmdlZCBmcm9tIGF2ZXJhZ2UgdG8gb3V0cmlnaHQgdW5hdHRyYWN0aXZlLCB3aXRoIHNvbWUgb2YgdGhlbSBtaWRkbGUgYWdlZCBhbmQvb3IgZmF0LiBJIGhhdmUgdG8gYmUgaG9uZXN0LCB3aXRoIGFsbCB0aGUgaHlwZSBhYm91dCBBbm5pZSBJIHdhcyBkaXNhcHBvaW50ZWQgd2l0aCB0aGUgd2FyZXMuMy8xMApUaGVyZSBhcmUgc2l4IHdheXMgb2YgYWNoaWV2aW5nIDcgdGhvdWdoLCBzbyBzaXggY2hhbmNlcyBpbiAzNiwgb3IgYSAxIGluIDYgY2hhbmNlLiBUaGUgY2FyZHMgZG9uJ3QgcmVhbGx5IGNvbWUgaW50byB0aGUgcHJvYmxlbSwgbWF5YmUgdGhpcyBpcyBhIHJlZCBoZXJyaW5nLiAKVGhlIGZtdiBvZiB0aGUgc2hhcmVzIGF0IHRoZSB0aW1lIG9mIGdpZnRpbmcgaXMgdXNlZCBmb3IgZ2lmdCB0YXggcHVycG9zZXMsIG5vdCBpbmNvbWUgdGF4LiAKR3JlYXRlciB0cm9jaGFudGVyaWMgYnVyc2l0aXMKUXVlYmVjIHBlbnNpb24gcGxhbiBpcyBhIGRpZmZlcmVudCB2ZWhpY2xlLiAKRmFyIGFzIHRoZSBJbnRlcm5hdGlvbmFsIEhlYWRhY2hlIFNvY2lldHkgYW5kIHRoZSBBbWVyaWNhbiBBc3NvY2lhdGlvbiBmb3IgdGhlIFN0dWR5IG9mIEhlYWRhY2hlcyBoYXZlIGRlZmluZWQgdGhpcyBlbnRpdHkgKGNlcnZpY29nZW5pYyBoZWFkYWNoZSkgaXQgc2ltcGx5IGRvZXNuIGV4aXN0LiAKSXQncyBoYXJkIHRvIGltYWdpbmUgaG93IG9uZSBjcmVhbSwgbm8gbWF0dGVyIGhvdyBwb3dlcmZ1bCwgY2FuIHdvcmsgb24gYm90aCBjZWxsdWxpdGUgYW5kIGZhdCBhbGwgYXQgb25jZS4gQ2VsbHVsaXRlIHNlZW1zIHNpbXBsZSBlbm91Z2ggICBidXQgc3VyZWx5IHlvdSBjYW4ndCByZW1vdmUgZmF0IHdpdGggYSBjcmVhbT8KIkFyb3VuZCAxOTk0LCBJIHdhbnRlZCB0byB1bmRlcnN0YW5kIHBva2VyIHdpdGggdGhlIGV4YWN0bmVzcyB0aGF0IGEgY2hlc3MgcGxheWVyIHdvdWxkIHdhbnQgdG8gdW5kZXJzdGFuZCBjaGVzcywiIGhlIHNhaWQsIGFkZGluZywgIkluc3RlYWQgb2Ygc3BlbmRpbmcgaG91cnMgYW5kIGhvdXJzIHBsYXlpbmcgYW5kIG5vdGljaW5nIHBhdHRlcm5zLCBJIGNhbiBzdHVkeSBzb21lIG9mIHRoZXNlIHRoaW5ncyBmcm9tIGEgZ2FtZSB0aGVvcnkgc3RhbmRwb2ludC4gSSBkb24ndCBoYXZlIHRvIHRlc3QgdGhlbSBhdCB0aGUgdGFibGUgLiBJJ3ZlIGRvbmUgbW9zdCBvZiB0aGUgbWF0aCBhdCBob21lLiIKVGhlIGtpbGxpbmcgdG9vayBwbGFjZSB0aHJvdWdob3V0IEV1cm9wZSBpbiBtb3JlIHRoYW4gNDAsMDAwIGNvbmNlbnRyYXRpb24sIGxhYm9yLCBwcmlzb25lciBvZiB3YXIsIGFuZCBpbnRlcm5tZW50IGNhbXBzLCBhcyB3ZWxsIGFzIGJ5IHRoZSBFaW5zYXR6Z3J1cHBlbiwgbW9iaWxlIGtpbGxpbmcgc3F1YWRzLCB3aGljaCBtYWNoaW5lIGd1bm5lZCBlbnRpcmUgY29tbXVuaXRpZXMgb3Igc2hvdmVkIHJlc2lkZW50cyBpbnRvIGdhcyBhc3BoeXhpYXRpb24gdmFucy4uIApCdXQgaWYgeW91IGZpbmQgeW91cnNlbGYgY29uc3RhbnRseSBwaWNraW5nIHVwIHlvdXIgcGFydG5lcidzIHNsYWNrLCB0aGF0IGNvdWxkIG1lYW4geW91J3JlIGhlYWRlZCBmb3IgYSByZWxhdGlvbnNoaXAgd2hlcmUgZXZlcnl0aGluZyBpcyBvbmUgc2lkZWQgYW5kIHlvdXIgb3duIG5lZWRzIGFyZW4ndCBiZWluZyBtZXQuIApJbCBuZSBmYXV0IHBhcyBoc2l0ZXIgIGFubm90ZXIgc29uIGV4ZW1wbGFpcmUuLiAKUmVmbGVjdGluZyBwdWJsaWMgb3BpbmlvbiBwb2xscyB0aGF0IGZpbmQgc3Ryb25nIHN1cHBvcnQgZm9yIGEgc2luZ2xlIHJhdGUgdGF4LCBzZXZlcmFsIHdpdG5lc3NlcyBoYWlsZWQgaXQgYXMgdGhlIGxvZ2ljYWwgR2FtYmxpbmcgY2x1YiByYWlkZWQgaW4gUm9ja3ZpbGxlICVkIEJ5IFJVVEggVy4gQWNjb3JkaW5nIHRvIFN0YXRlJ3MgQXR0b3JuZXkgQW5kcmV3IEwuIFBvbGljZSBzZWl6ZWQgaW4gY2FzaCBmcm9tIHRoZSBjbHViIGF0IDE2MzYgRS4gCjE2IEp1biAyMDE1ICAgMTQgbWluICAgVXBsb2FkZWQgYnkgUHJvZHVjZXIgVGlhZ28gTWVuZGVzRFlJTkcgTElHSFQgdjEuNi4xIERPV05MT0FEIExJTks6IEVwaWxlcHN5IFJhdGluZzogWWVsbG93IC4gNCAgT3l1bmEgZ2lyaW4uIEVrbGVubWkgRG9zeWEuIApZb3UgYXJlIG1ha2luZyBoaW0gdGhlIHByb2JsZW0gYmVjYXVzZSB5b3UgYW5kIGFjY2VwdCB0aGUgdHJ1dGggYWJvdXQgeW91cnNlbGYuIAoxLCAyMDE3LCBoYXZlIGF0IGxlYXN0IG9uZSBwb3RlbnRpYWwgdHJvdmUgb2YgaW5mb3JtYXRpb246IGhpcyBnYW1ibGluZyBoYWJpdHMuIApUaGV5IHdlcmUgYWx3YXlzIGZlYXR1cmVkIGluIHRoZSBuZXdzcGFwZXIuIFRoZXJlIHdlcmUgZG9nZmlnaHRzIGF0IHRoZSBmaW5pc2ggbGluZS4gV2h5IGFyZSBwZW9wbGUgYWZyYWlkIG9mIGltcHJvdmVtZW50IGFueW1vcmU/IFJhY2luZyBpcyB3aGF0IGtlZXBzIG1lIG1vdGl2YXRlZCBhbmQgZ29pbmcuLiAKU29tZW9uZSB3aG8gaXMgZGVhZGxpZnRpbmcgc2hvdWxkIGFic29sdXRlbHkgaGF2ZSBwZXJmZWN0IGZvcm0uIENsZWFybHkgeW91IHdhdGNoZWQgc29tZSBZb3VUdWJlIHZpZGVvcyBhbmQgdGhpbmsgeW91IGtub3cgd2hhdCB5b3UncmUgdGFsa2luZyBhYm91dC4gSWYgeW91IGRvbid0IGxpZnQgd2l0aCBwZXJmZWN0IGZvcm0geW91IHdpbGwgZ2V0IGh1cnQuIApUaGlzIGlzIHRoZSBzdG9yeSBvZiBjcmF6eSBzdGF0aWMgd29tYW4uVGhlIGZpcnN0IHJlYXNvbiBJIGFjdHVhbGx5IG5vdGljZWQgaGVyIHdhcyBhIGZldyBtb250aHMgYWdvIHdoZW4gc2hlIHdhcyBzaXR0aW5nIGFjcm9zcyB0aGUgYWlzbGUgZnJvbSBtZS4gClRoZSAxMDAsMDAwIHNxLiBGdC4gClBva2VyIHRvdXJuYW1lbnRzIGFib3VuZCBpbiBWZWdhcywgYW5kIGd1YXJhbnRlZWQgeW91J2xsIGZpbmQgYSBwb2tlciB0b3VybmFtZW50IGdvaW5nIG9uIGV2ZXJ5IGRheSBhdCBvbmUgb3IgYW5vdGhlciBvZiB0aGVzZSBjYXNpbm8gaG90ZWxzLiBUaGUgbW9zdCBwb3B1bGFyIExhcyBWZWdhcyBwb2tlciBnYW1lcyBhcmUgVGV4YXMgSG9sZCAnZW0sIFNldmVuIENhcmQgU3R1ZCBwb2tlciBhbmQgT21haGEgcG9rZXIuIApCbGFrZUp1c3RCbGFrZSAgMyBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KTGFzdCBtb250aCBTcGFjZVh3b25hICQyOTdtICgyMjZtKSBjb250cmFjdCB0byBsYXVuY2ggc2F0ZWxsaXRlcyBmb3IgdGhlIEFpciBGb3JjZS4gQSBjYXBzdWxlIGxhdW5jaGVkIGxhc3Qgd2VlayB3aXRoIGEgZHVtbXkgbmlja25hbWVkICJSaXBsZXkiIGFib2FyZCwgYSByZWZlcmVuY2UgdG8gdGhlIGhvcnJvciBmaWxtIEFsaWVuLHN1Y2Nlc3NmdWxseSByZWFjaGVkIHRoZSBJbnRlcm5hdGlvbmFsIFNwYWNlIFN0YXRpb24gYW5kIGlzIGR1ZSB0byByZXR1cm4gdG8gZWFydGggdGhpcyB3ZWVrZW5kLiBNciBNdXNrIHNtb2tlZCB0aGUgZHJ1ZyBkdXJpbmcgYW4gYXBwZWFyYW5jZSBvbiB0aGUgSm9lIFJvZ2FuIEV4cGVyaWVuY2Ugc2hvdyBpbiBTZXB0ZW1iZXIgbGFzdCB5ZWFyLCB0ZWxsaW5nIHRoZSBob3N0IHRoYXQgaGUgd2FzbiBhIHJlZ3VsYXIgdXNlci4gCkJ1dCB5b3UgY2FuIGFsc28gc2VydmUgc29tZSBub24gYWxjb2hvbGljIHJlZnJlc2htZW50cyBhbmQgZHJpbmtzIGxpa2UgY2hpbGxlZCB3YXRlciwgd2luZSwgYW5kIGNvbGFzLiAKVGhlcmUgYXJlIHRob3VzYW5kcyBvZiB1bnNvbHZlZCBtdXJkZXJzIHN0aWxsIHRlY2huaWNhbGx5IHVuZGVyIGludmVzdGlnYXRpb24gZGVjYWRlcyBhZnRlciB0aGV5IHRvb2sgcGxhY2UuCkl0IG5vdCBzbyBkaWZmZXJlbnQgZm9yIGJ1aWxkaW5nIGhpZ2hlciB0ZWNoIHN0dWZmLCB5b3UgY2FuIGJ1aWxkIGN1c3RvbSBzdHVmZiBvbiBhIHZlcnkgaGlnaCBxdWFsaXR5IGxldmVsIHdpdGgganVzdCBhIGZldyBwZW9wbGUsIG5vdCBlYWNoIGNvbXBvbmVudCB3aWxsIGJlIGhhbmRjcmFmdGVkIGlmIHdlIHRhbGtpbmdzIGVsZWN0cm9uaWNzLCBvZiBjb3Vyc2UsIGJ1dCBkZXNpZ25pbmcgYW5kIG9wdGltaXppbmcgdGhlIGNpcmN1aXRzLCBoYXJkZW5pbmcgdGhlbSBmb3IgaGlnaCBwaHlzaWNhbCBzdHJlc3Mgb3IgaGlnaCBkYW5nZXIgZW52aXJvbm1lbnRzIGFuZCB0aGVuIG9mZmVyaW5nIGdvb2Qgc2VydmljZSB3aWxsIGhhdmUgaXRzIHByaWNlIGZvciB0aGUgYnV5ZXIuIFRoZXkgbmVlZC93YW50IGxvbmcgdGVybSByZWxhdGlvbnNoaXBzIHdpdGggdGhlaXIgY3VzdG9tZXJzLiAKSSBmb3VuZCBpdCBkaWZmaWN1bHQgdG8gYWR2YW5jZSBzaW5jZSB0aGUgb2xkZXIgY29uY2VwdHMgZGlkbid0IGFwcGx5IHRvIHRoZSBuZXdlciBjb25jZXB0cyBhbmQgZmVsdCBsaWtlIEkgd2FzIGJlaW5nIHRhdWdodCB0d28gc2VwYXJhdGUgc3RyYXRlZ2llcyB3aXRob3V0IHRoZSBrbm93bGVkZ2Ugb2YgaG93IHRvIGRldmlhdGUgYW5kIHdoYXQgaXMgb3B0aW1hbC4uIApUcmVuZHkgc3BvdHMgbGlrZSBUaGUgQmluZGVyeSBTaG9wIGFuZCBWaWN0b3JpYSBGb29kIFN0cmVldCBoYXMgc29tZXRoaW5nIHdhaXRpbmcgZm9yIGFsbCBhZ2VzLiBEb24ndCBmb3JnZXQgdG8ga2ljayBzdGFydCB5b3VyIGRheSBhdCBzb21lIG9mIFZpY3RvcmlhJ3MgZmluZXN0IGJyZWFrZmFzdCBwbHVnIGlucywgc3VjaCBhcyBDYWYgTWlnbm9uIGFuZCBUcmVhdHMuUmVhZCBtb3JlSE9URUwgU1RZTEVUaW1lIHNwZW50IGluICBpcyBhIHNsb3dlciBwYWNlZCBhZmZhaXIgdGhhbiBtb3N0IG90aGVyIENlbnRyYWwgTG9uZG9uIG5laWdoYm91cmhvb2RzLiBUaGlzIGxhcmdlbHkgcmVzaWRlbnRpYWwgYXJlYSBvcmRlcmx5IGFycmFuZ2VkIGJlc2lkZSB0aGUgVGhhbWVzLCBpcyBhIHRyZWFzdXJlIHRyb3ZlIG9mIHF1YWludCBwdWJzLCBzdWJ0bGUgYXJjaGl0ZWN0dXJhbCBjaGFybXMgYW5kIGxvY2FsIGJvdXRpcXVlcy4gCkhlJ3Mgbm90IG9ubHkgZ2l2aW5nIHlvdSB0aGUgc3RhciB0cmVhdG1lbnQsIGhlJ3MgZW1wbG95aW5nIGEgbWFzc2FnZSB0ZWNobmlxdWUgdGhhdCB0cmFjZXMgaXRzIHJvb3RzIGJhY2sgdG8gdGhlIGFuY2llbnQgSW5kaWFuIGFydCBvZiBheXVydmVkYSwgd2hpY2ggZm9jdXNlcyBvbiBwcmV2ZW50aW5nIHByb2JsZW1zIGJlZm9yZSB0aGV5IG9jY3VyLiAKQW5kLCBpbiBKdW5lIDIwMTMsIFNhcmFoIEd1aWxsb3QgR3V5YXJkLCBhIDMxIHllYXIgb2xkIG1vdGhlciBvZiB0d28sIHR1bWJsZWQgOTQgZmVldCB0byBoZXIgZGVhdGggZHVyaW5nIGEgZ3Jhdml0eSBjaGFsbGVuZ2luZyBiYXR0bGUgc2NlbmUgaW4gIkthIi4gQWNjb3JkaW5nIHRvIGEgV2FsbCBTdHJlZXQgSm91cm5hbCBpbnZlc3RpZ2F0aW9uIGludG8gdGhlIENpcnF1ZSdzIHNhZmV0eSByZWNvcmQsIHRoZSBMYXMgVmVnYXMgYmFzZWQgcHJvZHVjdGlvbiBpcyB0aGUgbW9zdCBlbnZlbG9wZSBwdXNoaW5nIGluIExhbGliZXJ0ZSdzIGVtcGlyZS4uIApTaGUgbWV0IG1lIGFuZCBzaG9ydGx5IGFmdGVyIEkgd2FzIGF0IG15IGxvd2VzdC4gCkRvIHNvIG11Y2ggb2YgYWN0aXZpdGllcyBmcm9tIHN1cmZpbmcgdG8geW9nYS4gQnV0IGd1ZXNzIHdoYXQsIEkgZG9uIHJlYWxseSBlbmpveSBhbnl0aGluZy4uIApQbGF5IG9uIHRoZSB0dXJuIGlzIHN0cmFpZ2h0Zm9yd2FyZCBhbmQgc2ltcGxlLiAKQXMgYSBjb3NtZXRpYyBzdXJnZW9uIGZyb20gYSBHdWxmIHN0YXRlIHRvbGQgbWUsIGhlIHVzZWQgdG8gb25seSBzZWUgd29tZW4gZm9yIG5vc2Ugam9icyBiZWNhdXNlIGl0IHdhcyBjb25zaWRlcmVkIHVuSXNsYW1pYyB0byBzaG93IGEgbWFsZSBkb2N0b3IgeW91ciBib2R5IGZvciByZWFzb25zIG9mIHZhbml0eSBhcyBvcHBvc2VkIHRvIGlsbG5lc3MuIEhvd2V2ZXIsIGhlIHNlZXMgbW9yZSBhbmQgbW9yZSAoZnVsbHkgdmVpbGVkKSB3b21lbiBmb3IgYm9vYiBqb2JzIGFuZCBsaXBvLiAKV2hpbGUgdGhlcmUgaXMgbWVyaXQgdG8gdGhlIGlkZWEsIGFuZCB0aGVyZSBpcyB2YWx1ZSBpbiBoYXZpbmcgYSBzdHVkZW50L3R1dG9yIHNvY2lhbCBuZXR3b3JrIHdpdGggcG9zc2liaWxpdHkgb2Ygb25saW5lL1NreXBlIG5ldHdvcmtpbmcsIGJ1dCBhZnRlciBzdHVkZW50IGFuZCB0dXRvciBnZXQgaW4gdG91Y2gsIGl0IGNoYWxsZW5naW5nIHRvIGhhdmUgdGhlIHBheW1lbnQgdG8gZ28gdGhyb3VnaCB0aGUgYXBwLiBUaGVyZSBhcmUgY2hhbGxlbmdlcyBpbiBjaGFyZ2luZyBhIG1lbWJlcnNoaXAgdG9vLCBsaWtlIGFueSBtZW1iZXJzaGlwIG1vZGVsLi4gCklzIHRoYXQgd2hhdCBiZWluZyBhbiBhZHVsdCBpcyB0byB5b3U/ClNwZWNpZmljIHRyYWluaW5nIGluIFNNVCBhbGxvd3MgY2hpcm9wcmFjdG9ycyB0byBwcm92aWRlIGhpZ2hseSBza2lsbGVkIGFuZCBwcmVjaXNlIGFkanVzdG1lbnRzIHRvIHRoZSB2ZXJ0ZWJyYWUgb2YgdGhlIHNwaW5lLCBjb3JyZWN0aW5nIGpvaW50IG1vdGlvbiB0byByZXN0b3JlIHByb3BlciBtb3ZlbWVudCBhbmQgaW1wcm92ZSBmdW5jdGlvbi5Gb3IgbWFueSBjb25kaXRpb25zLCBzdWNoIGFzIGxvdyBiYWNrIHBhaW4sIGNoaXJvcHJhY3RpYyBjYXJlIGlzIHRoZSBwcmltYXJ5IG1ldGhvZCBvZiB0cmVhdG1lbnQuIFdoZW4gYSBtdWx0aSBkaXNjaXBsaW5hcnkgYXBwcm9hY2ggaXMgYWR2aXNhYmxlLCBhIGNoaXJvcHJhY3RvciB3aWxsIGNvb3JkaW5hdGUgY2FyZSB3aXRoIG90aGVyIGhlYWx0aCBjYXJlIHByb2Zlc3Npb25hbHMuIFdoZXJlIG90aGVyIGNvbmRpdGlvbnMgZXhpc3QsIGNoaXJvcHJhY3RpYyBjYXJlIG1heSBjb21wbGVtZW50IG9yIHN1cHBvcnQgbWVkaWNhbCBvciBvdGhlciB0cmVhdG1lbnQgYnkgcmVsaWV2aW5nIHRoZSBtdXNjdWxvc2tlbGV0YWwgYXNwZWN0cyBhc3NvY2lhdGVkIHdpdGggdGhlIGNvbmRpdGlvbi5UaGVyZSBhcmUgbWFueSByZWFzb25zIHRvIHNlZWsgY2hpcm9wcmFjdGljIGNhcmU6V2Ugb2ZmZXIgYSB2YXJpZXR5IG9mIHNlcnZpY2VzIGluY2x1ZGluZzpNeW9mYXNjaWFsIFJlbGVhc2UgVGhlcmFweSwgVWx0cmFzb3VuZCBUaGVyYXB5LCBSZWhhYmlsaXRhdGlvbiBTZXJ2aWNlcywgTW90b3IgVmVoaWNsZSBBY2NpZGVudCBDbGFpbXMgYW5kIFdvcmtwbGFjZSBTYWZldHkgSW5zdXJhbmNlIEJvYXJkIENsYWltcyAoV1NJQilQbGVhc2Ugbm90ZSB0aGF0IHlvdSBhcmUgcmVzcG9uc2libGUgZm9yIHBheW1lbnQgYXQgdGhlIHRpbWUgb2YgeW91ciBzZXJ2aWNlcy4gCkhlcmUgYSB2aWRlbyBvZiBtZSBwbGF5aW5nIHRoZSBkZWNrIG5vdCB0byBwZXJmZWN0aW9uIGJ5IGFueSBtZWFucywgYnV0IEkgdGhpbmsgbXkgcmVtb3ZhbCBzdWl0ZSB3b3JrZWQgb3V0IHF1aXRlIHdlbGwuLiAKSWYgaGUgaXMgcGFzc2l2ZSwgdXNlIDAuNC4gCiJJbiB0aGUgbGF0ZXIgc3RhZ2VzIG9mIHRoaXMgZmlnaHQgd2UgdGhpbmsgaXQgaXMgZ29pbmcgdG8gU3VuZGF5LCBCbG9vZHkgU3VuZGF5LCIgUnVzaHRvbiBwcm9taXNlZC4gIldlIHRoaW5rIHRoZXJlIGlzIGdvaW5nIHRvIHNvbWUgdW5kZXJlc3RpbWF0aW9uIHRoZXJlIGJ1dCBpZiB0aGV5IGRvIGl0IGlzIGF0IHRoZWlyIHBlcmlsLiAKSSBjYW1lIHRvIHRoZSBpZGVhIG9mIHRoZSBhbnRpcXVlIHN0b3JlIGFzIGl0IHNlZW1lZCBsaWtlIHRoZSB0eXBlIG9mIGFyZWEgdGhhdCBCbyB3b3VsZCBiZSBkaXNjb3ZlcmVkIGluLCB3aGljaCB3YXMgYWxzbyBhIHBsYWNlIHdoZXJlIHlvdSBtaWdodCBmaW5kIHRveXMgdGhhdCB3YXNuJ3QgZXhwbG9yZWQgaW4gYSBwcmV2aW91cyBmaWxtLiBLbm93aW5nIHRoYXQgV09PRFkgaGltc2VsZiB3YXMgYSB2ZW50cmlsb3F1aXN0IGR1bW15IGluIHRoZSBlYXJsaWVzdCBkcmFmdHMgb2YgdGhlIHN0b3J5IGxlZCBtZSB0byBiZWxpZXZlIHRoYXQgVmVudHJpbG9xdWlzdCBkdW1taWVzIHdvdWxkIGJlIGluIHRoZSBhbnRpcXVlIHN0b3JlIGFzIHdlbGwuLiAKTlVNQkVSUyBHQU1FMTkuIApUaGVyZSBhcmUgYSBsb3Qgb2YgcGVvcGxlIGFuZCByZXNvdXJjZXMgYXZhaWxhYmxlIG91dCB0aGVyZSB0aGF0IGNhbiBoZWxwIChzb21lIHRoYXQgaGF2ZSBiZWVuIG1lbnRpb25lZCBiZWxvdyBhbHJlYWR5ISk7IHlvdSBkZWZpbml0ZWx5IG5vdCBhbG9uZSBhbmQgY2FuIG1ha2UgaXQgdGhyb3VnaCB0aGlzLgpJJ3ZlIGhhZCBoaW0gZXhhbWluZWQgYnkgdHdvIGRpZmZlcmVudCB2ZXRzIDMgc2VwYXJhdGUgdGltZXMuIEhlIGhhcyBoYWQgYmxvb2QgdGVzdHMgdGFrZW4gdG8gZGV0ZXJtaW5lIGlmIHRoZXJlIGFyZSBhbnkgbXVzY2xlIHByb2JsZW1zIGFuZCBoZSB3YXMgYWxzbyBETkEgdGVzdGVkIGZvciBQU1NNLiAKR2VvcmdlIEd1dG1hbm4uIEouIApHdXRzeSBwb2tlciBwbGF5ZXIgd2lucyAxNjIgbWlsbGlvbiBjaGlwcyB3aXRoIHRoZSBtb3N0IGNyYXp5CkNlc2FyZWFuIFNjYXI6IE5hc3Rhc3NqYSBILiAKU3Vycm9nYWN5IHRvdXJpc20gaGFzIGdyb3duIHN0ZWFkaWx5IGhlcmUgYXMgd29yZCBnZXRzIGFyb3VuZCB0aGF0IGJhYmllcyBjYW4gYmUgaW5jdWJhdGVkIGF0IGEgbG93IHByaWNlIGFuZCB3aXRob3V0IGdvdmVybm1lbnQgcmVkIHRhcGUuIApMJ2Fzc2VtYmxlYSBpbiBzZWRlIG9yZGluYXJpYSAgcmVnb2xhcm1lbnRlIGNvc3RpdHVpdGEsIGluIHByaW1hIGNvbnZvY2F6aW9uZSwgY29uIGxhIHByZXNlbnphIGRpIGFsbWVubyBsYSBtZXQgcGkgdW5vIGRlaSBzb2NpIGF2ZW50aSBkaXJpdHRvIGFsIHZvdG8uIEwnYXNzZW1ibGVhIG9yZGluYXJpYSBkaSBzZWNvbmRhIGNvbnZvY2F6aW9uZSBkZWxpYmVyYSB2YWxpZGFtZW50ZSBxdWFsdW5xdWUgc2lhIGlsIG51bWVybyBkZWkgc29jaSBpbnRlcnZlbnV0aS4gTCdhc3NlbWJsZWEgcml1bml0YSBpbiBzZWRlIHN0cmFvcmRpbmFyaWEgIHZhbGlkYW1lbnRlIGNvc3RpdHVpdGEgY29uIGxhIHN0ZXNzYSBtYWdnaW9yYW56YSBkZWxsJ2Fzc2VtYmxlYSBvcmRpbmFyaWEuLiAKQWxzbywgRG91YmxlcyBvbiBncmFzczogVGlsZGVuIHJhcmVseSB3b24gYSBkb3VibGVzIHNsYW07IFJvZCBMYXZlciB3b24gNyBncmFuZCBzbGFtIGRvdWJsZXMgdGl0bGVzIG9uIGdyYXNzIHN1cmZhY2UuIAo3IERheSBGcmVlIFZJUCBNZW1iZXJzaGlwLgpJIGhhdmVuJ3QgcmVhbGx5IGhhZCBhbnkgbHVjayB3aXRoIG1lZGljYXRpb25zLCBidXQgc29tZSBwZW9wbGUgaGF2ZSBncmVhdCByZXN1bHRzIGZyb20gbWVkcy4gCkJhc2ljYWxseSBub3RoaW5nIHByZXZlbnRpbmcgeW91IGZyb20gZWFzaWx5IHJvYmJpbmcgdGhlIGJhbmsuIApIdWt1ayB0YW0gbWFuYXN5bGEgaGliaXIgemFtYW4gdXlndWxhbm1hbS4gU3Jla2xpIGtlbmRpIGhhbGtuYSBzb3J1biB5YWF0YW4gdmUgYnVudSB5YXBhcmtlbiBzb3J1biB5YWF0dCBrZXNpbWkgc2V2bWV5ZW4gZGllciBrZXNpbWxlciB0YXJhZm5kYW4gZGVzdGVrIGdyZW4sIGh1enVyIHZlcm1leWVuIGJpciB5YXAgb2xtdSBidSBsa2VkZSBkZXZsZXQuIApUaGUgV2lsbGlhbXN0b3duIGdyb29tZXIgZGlkIEM0QSBmcm9tIFdpbGxpYW1zdG93biB0byBIYXBweSBWYWxsZXkgYW5kIGFsbCBvZiB0aGUgQWx0bWFyIHRyYWlscyBsYXN0IG5pZ2h0LiAKKFByaXZhY3kgUG9saWN5KUh1YlBhZ2VzIFRyYWZmaWMgUGl4ZWxUaGlzIGlzIHVzZWQgdG8gY29sbGVjdCBkYXRhIG9uIHRyYWZmaWMgdG8gYXJ0aWNsZXMgYW5kIG90aGVyIHBhZ2VzIG9uIG91ciBzaXRlLiAKSXQgcGFpbmVkIG1lIHRvIHNlZSBoaW0gZ3JpbmRpbmcgdGhyb3VnaCBoaXMgMjBzIHNvIHRoYXQgaGlzIG1vbSBjb3VsZCBkcmluayBzb21lIGtpbmQgb2YgYmxhY2sgbWluZXJhbCB3YXRlciBhdCAkMy9ib3R0bGUgYW5kIHRha2UgZnJlcXVlbnQgYnJlYWtzIGZyb20gaGVyIHBvdHRlcnkgdG8gYnJvd3NlIGZhY2Vib29rLi4gCkl0J3MgZXh0cmVtZWx5IGVuam95YWJsZSwgYnV0IG5vdyB0aGF0IHdlIGhhdmUgYSBSZWQgQ2FzaW5vIEdyYWRlIFdvb2wgQmxlbmQgU3BlZWQgQ2xvdGggb24gZWFjaCB0YWJsZSBwZW9wbGUgaGF2ZSBiZWVuIGNvbW1lbnRpbmcgb24gaXQgbGlrZSBjcmF6eS4gT3VyIGxhc3QgZ2V0IHRvZ2V0aGVyIG15IGJyb3RoZXIncyB3aWZlIGNhbWUgdXAgYW5kIGFza2VkIHdoZXJlIHdlIGdvdCB0aGUgY2xvdGggYmVjYXVzZSBzaGUgd2FudGVkIHRvIGJ1eSBzb21lIGZvciBoaXMgdGFibGVzIChoZSBoYXMgdHdvKS4gClRoZXkgYXJlIGludGVyZXN0ZWQgaW4gcHVuaXNobWVudCBhbmQgaGF2aW5nIGEgc2NhcGVnb2F0LiAKT24gV2VkbmVzZGF5LCB0aGUgQmFuayBvZiBDYW5hZGEgYW5ub3VuY2VkIGl0IHdhcyBob2xkaW5nIGl0cyBrZXkgaW50ZXJlc3QgcmF0ZSBhdCAxLjc1IHBlciBjZW50LCBzYXlpbmcgYW4gYW50aWNpcGF0ZWQgZWNvbm9taWMgc2xvd2Rvd24gaW4gdGhlIGZvdXJ0aCBxdWFydGVyIGhhZCBiZWVuIGFuZCBtb3JlIGJyb2FkbHkgYmFzZWQgdGhhbiBleHBlY3RlZC4KIlRoZXkgc2hvdWxkIHJlbmRlciB0aGVpciByZXBvcnQuIFB1dCB1cCAgIEkgbWVhbiBJIGd1ZXNzIGlmIHdlIHdlcmUgcGxheWluZyBwb2tlciAoeW91IHdvdWxkIHNheSkgJ1B1dCB1cCBvciBzaHV0IHVwLicgV2hhdCBkbyB5b3UgZ290PyIgR2l1bGlhbmkgc2FpZC4gCkJ1dCBhcyB3aXRoIGFueSBsYXJnZSBjb3Jwb3JhdGlvbiwgWWFob28hIGhhcyBpdHMgcHJvYmxlbXMuIEl0IGlzIG5vd2hlcmUgbmVhciBwZXJmZWN0LCBhbmQgdGhvdWdoIG1hbnkgcGVvcGxlIHdpbGwgbm90IGVuY291bnRlciBhbnl0aGluZyB3cm9uZywgdGhlcmUgYXJlIGFsd2F5cyBhIGZldyB3aG8gYXJlIGhpdCB2ZXJ5IGJhZGx5IGluZGVlZCBieSB0aGUgbnVtZXJvdXMgYnVncyBpbiBZYWhvbyEuIApTbyB3ZSBoYXZlIDQgZ3Jvd24gYXNzIGFkdWx0cyB3aXRoIHNuaXBlcnMgdGhhdCBjYW4gc2hvb3QgMTAwIGZ0LiAKU2VlLCB0aGUgdGhpbmcgaXMgd2UgZGlkIHNvbWV0aGluZyBhIGxpdHRsZSBkaWZmZXJlbnQgdGhlbiBwcm9iYWJseSBtb3N0IG9mIHRoZSBwb2tlciBwbGF5ZXJzIG91dCB0aGVyZSB0aGF0IHB1cmNoYXNlIHNvbWV0aGluZyBsaWtlIHRoaXMgYW5kIHV0aWxpemUgaXQuIFdlIGFjdHVhbGx5IHB1cmNoYXNlZCBvbmUgZm9yIHRoZSBwb2tlciB0YWJsZSBhbmQgYW5vdGhlciBmb3IgdGhlIHBvb2wgdGFibGUuLiAKV2hpbGUgaXQgaXMgdHJ1ZSB0aGF0IFBhdHJpY2sgTW9vcmUgd2FzIGEgbWVtYmVyIG9mIEdyZWVucGVhY2UgaW4gdGhlIDE5NzBzLCBpbiAxOTg2IGhlIGFicnVwdGx5IHR1cm5lZCBoaXMgYmFjayBvbiB0aGUgdmVyeSBpc3N1ZXMgaGUgb25jZSBwYXNzaW9uYXRlbHkgZGVmZW5kZWQuIApOb3QgbXVnZ2xlIHN0dWRpZXMsIGJ1dCBsaWtlIHJlZ3VsYXIgbWF0aGVtYXRpY3MsIG5vbiBtYWdpY2FsIGhpc3RvcnksIGRyYW1hLCByZWd1bGFyIGNoZW1pc3RyeSwgZXRjLiBJIGhhdmUgYWx3YXlzIGJlZW4gdW5kZXIgdGhlIGltcHJlc3Npb24gdGhhdCB3aXphcmRzIGNvdWxkIGRvIHNvIG11Y2ggd2l0aCB0aGUga25vd2xlZGdlIHRoYXQgbXVnZ2xlcyBoYXZlLiAKTGF5IG9mZiB0aGUgYmxvdyBkcnllciBhbmQgaXJvbnMgZm9yIGEgd2hpbGUhIEZpbmQgYSBnb29kIHRvd2VsIGFuZCBhaXIgZHJ5IGluc3RlYWQsIGlmIHlvdSBoYXZlIHRoZSB0aW1lLiBJZiB5b3UgbmVlZCB0byB1c2UgYSBibG93IGRyaWVyLCB0cnkgYWRqdXN0aW5nIHRvIGEgbG93ZXIgaGVhdCBzZXR0aW5nIGFuZCByZWR1Y2UgdGhlIGxlbmd0aCBvZiB0aW1lIHlvdSBibG93IGRyeS4KVG8gZG8gdGhpcywgeW91IGhhdmUgdG8ga2VlcCBjb3N0cyB0byBhIG1pbmltdW0uIAogMyBwb2ludHMgIHN1Ym1pdHRlZCA1IGRheXMgYWdvUGVvcGxlIGp1c3Qgc3RyYWlnaHQgdXAgaWdub3JlIGl0LCBhbmQgYmUgbGlrZSBpdCBkb2VzbiBleGlzdCBldmVuIHRob3VnaCB0aGV5IGJlbmVmaXR0ZWQgZnJvbSBpdC4gCk5ldyBjYXNpbm8gY3J1aXNlIHRvIHNhaWwgb3V0IG9mIE1heXBvcnQKVGhlbiBjYW1lIExhcnJ5IFN1bW1lcnMgYW5kIHRoZSBUQVJQIGJhaWxvdXRzIGFuZCB0aGUgaW5jcmVhc2Ugb2YgdHJvb3BzIGluIGJvdGggSXJhcSBhbmQgQWZnaGFuaXN0YW4gYW5kIHNvIG1hbnkgYmV0cmF5YWxzIHRoYXQgYnkgbm93LCBteSBoZWFydCBpcyBsaWtlIHN0b25lIGFuZCB0aGVyZSBpcyBub3RoaW5nIGxlZnQgZm9yIHRoZSBPYmFtYSBpdGVzIHRvIGRvIHRoYXQgd2lsbCBodXJ0IG1lT3Igc28gSSBzYXkuIApXaHkgZG8gSSBzZWUgdGhlIHNhbWUgbmFtZSBpbiBjaGF0IHJvb20gbXVsdGlwbGUgdGltZXM/IEFsdGhvdWdoIHlvdSBtYXkgbm90IGhhdmUgdG8gY29tcGV0ZSB3aXRoIGh1bmRyZWRzIG9mIHBlb3BsZSBsb29raW5nIHRvIGNoYXQgd2l0aCBsb2NhbCBzaW5nbGVzIGZvciBmcmVlLCB5b3Ugc3RpbGwgd2FudCB0byBzdGFuZCBvdXQgaW4gdGhlc2UgY2hhdCByb29tcy4gCkl0IHN1Y2tzIHRoYXQgcGVvcGxlIGRvbiBjYXJlIGhvdyB5b3UgZmVlbGluZywgdGhhdCB3aGVuIHlvdSBmZWVsaW5nIGRvd24sIHlvdSBoYXZlIHRvIHB1dCBvbiBhIHN0cm9uZyBmYWNlIHRvICJ0b3VnaGVuIHVwIi4uIApUaGUgb25seSBwZW9wbGUgdG8gZXZlciBjb25zaXN0ZW50bHkgd2luIGFnYWluc3Qgcm91bGV0dGUgaGF2ZSBkb25lIHNvIGJ5IGZpbmRpbmcgYnJva2VuIHdoZWVscy4gRXZlbiBFaW5zdGVpbiBzYWlkICJZb3UgY2Fubm90IGJlYXQgYSByb3VsZXR0ZSB0YWJsZSB1bmxlc3MgeW91IHN0ZWFsIG1vbmV5IGZyb20gaXQsIiBhbmQgaWYgeW91IHRoaW5rIHlvdSdyZSBzbWFydGVyIHRoYW4gQWxiZXJ0IHlvdSBnbyByaWdodCBhaGVhZC4gTm8sIHdhaXQsIGNvbWUgdG8gb3VyIHBsYWNlIGluc3RlYWQuIApZb3UgYWxsb3dlZCBhbmQgSSB0aGluayBpdCBoZWFsdGh5IHRvIHRyYXZlbCBib3RoIGJ5IHlvdXJzZWxmIGFuZCB3aXRoIHlvdXIgU08uIApJbmRpdmlkdWFsIExpY2Vuc2luZ0Vuc3VyZSB0aGF0IGFueW9uZSB3aG8gcGVyZm9ybXMgbWFzc2FnZSB0aHJvdWdoIHlvdXIgYnVzaW5lc3MgaGFzIHRoZSBuZWNlc3NhcnkgbGljZW5zZXMgdG8gZG8gc28uIEtlZXAgYSBjb3B5IG9mIGFsbCBsaWNlbnNlcyBvbiBmaWxlIGF0IHlvdXIgb2ZmaWNlLiBZb3UgbWF5IGFsc28gd2FudCB0byBjb250YWN0IHRoZSBsaWNlbnNpbmcgYm9hcmQgZGlyZWN0bHkgdG8gdmVyaWZ5IHRoYXQgYSBsaWNlbnNlIGlzIHZhbGlkIGFuZCB0aGF0IHRoZSBlbXBsb3llZSBvciBjb250cmFjdG9yIGRvZXMgbm90IGhhdmUgYSBoaXN0b3J5IG9mIGRpc2NpcGxpbmFyeSBhY3Rpb25zIGFnYWluc3QgaGltLiAKSXRzIG92ZXIgYW4gaG91ciBhd2F5LiAKUE9LSUVTIGluIE5vcnRoZXJuIFJpdmVycyBjbHVicyBtYWRlIGFuIGF2ZXJhZ2Ugb2YgJDUxMzMgaW4gcHJvZml0IGV2ZXJ5IGhvdXIgb3ZlciBhIHNpeCBtb250aCBwZXJpb2QgbGFzdCB5ZWFyLgpOdW1pcyBoYXMgdXBwZWQgaXRzIGZ1bGwgeWVhciBFQklUREEgZm9yZWNhc3QgdG8gVVMkNzRtbG4gZnJvbSBVUyQ3MG1sbiBhbmQgdGhpbmtzIHRoZSB0b3RhbCBkaXZpZGVuZCBmb3IgMjAxMyB3aWxsIG5vdyBiZSA4LjQgY2VudHMsIGNvbXBhcmVkIHRvIGl0cyBwcmV2aW91cyBmb3JlY2FzdCBvZiA3LjcgY2VudHMuClRoZSBnYW1pbmcgY29udHJvbCBib2FyZCdzIHByb3Bvc2FsIGlzIHNldCB0byBnbyBpbnRvIGVmZmVjdCBuZXh0IG1vbnRoIHVubGVzcyBhIEpvaW50IENvbW1pdHRlZSBvbiBBZG1pbmlzdHJhdGl2ZSBSdWxlcyBhY3RzIGJ5IEFwcmlsIDMwIHRvIHN0b3AgaXQuIApMYW5vbGluIG9mZmVycyBhIHZhcmlldHkgb2YgdXNlcyBhcyB3ZWxsLiBJdCBjb3VsZCBiZSB1c2VkIGZyb20gdXNpbmcgaXQgYXMgYSBzaW1wbGUgbW9pc3R1cml6ZXIgdG8gdXNpbmcgaXQgYXMgYSByYXcgbWF0ZXJpYWwgdG8gbWFrZSB2aXRhbWlucy4gCjkuIFRoZXkgd2VyZSBjaGFyZ2VkIHdpdGggcHJvc3RpdHV0aW9uIGFuZCByZWxhdGVkIGNvdW50cy4zIFdvbWVuIEFycmVzdGVkIEluIFByb3N0aXR1dGlvbiBTdGluZyBIZWxsZXJ0b3duLiAKU28gSSBjYW4gY29tbWVudCBvbiBob3cgUG9ybiBlZmZlY3RlZCB5b3UuIApSZW1hdGNoLCBubyByZWFzb24gdG8gZ28gYmFja3dhcmRzLiBUaGFuayBHb2QgZm9yIHRoaXMgdmljdG9yeSwgYnV0IEkgbm90IGdvaW5nIHRvIGdpdmUgaGltIGEgcmVtYXRjaCBqdXN0IGJlY2F1c2UuCkkgc2VlIHN0b3JpZXMgZXZlcnkgZGF5IGFib3V0IHRlYWNoZXJzIHdobyBoYXZlIHJlbGF0aW9uc2hpcHMgd2l0aCBzdHVkZW50cyAgIGluIHRoZSBuZXdzLCBpbiBtb3ZpZXMuIEFuZCB5b3UgbWlnaHQgYmUgd29uZGVyaW5nIGhvdyBhIHRlYWNoZXIgY291bGQgZXZlciBjcm9zcyBhIGxpbmUgbGlrZSB0aGF0LiBJIGNhbiB0ZWxsIHlvdSwgYmVjYXVzZSBJIGV4cGVyaWVuY2VkIGl0IGZyb250IGFuZCBjZW50ZXIuIApBbm90aGVyIGNydWNpYWwgbW9tZW50IGNhbWUgZHVyaW5nIGhpZ2ggc2Nob29sLiAKSWYgdGhlIGxhc3QgKG9yIG9ubHkpIGNhcmQgaW4gYSBmb3VuZGF0aW9uIHBpbGUgaXMgYW4gYWNlLCBub3RoaW5nIGNhbiBiZSBwbGF5ZWQgb24gdGhpcyBjYXJkOiB0aGUgcGlsZSBjYW4gb25seSBiZSBtZXJnZWQgd2l0aCBhbm90aGVyIHBpbGUuWzldCllvdXIgc2Nob29sIHN1cHBseSBzaG9wcGluZyBsaXN0IHdpbGwgaGVscCB5b3UgdG86CldoZW4geW91IGFyZSBsb2dnZWQgaW4geW91ciBUaXRhbiBCZXQgYWNjb3VudCwgYXQgdGhlIHRvcCByaWdodCB5b3Ugd2lsbCBzZWUgYSBidXR0b24gc2F5aW5nIE9wZW4gQ2FzaGllciB3aXRoIGFuIGljb24gb2YgYSBjb2luIG5leHQgdG8gaXQuIFdoZW4geW91IGNsaWNrIG9uIGl0IHlvdSB3aWxsIGJlIHRha2VuIHRvIHRoZSBjYXNoaWVyIHdoZXJlIHlvdSBjYW4gcmVnaXN0ZXIgeW91ciBjcmVkaXQgY2FyZCAoaWYgeW91IGFyZSB1c2luZyBvbmUgZm9yIHRyYW5zYWN0aW9ucyksIGNob29zZSB5b3VyIHByZWZlcnJlZCBwYXltZW50IG1ldGhvZCBhbmQgbWFrZSBkZXBvc2l0cyBhbmQgd2l0aGRyYXdhbHMuIEp1c3Qgb3BlbiB0aGUgY2FzaGllciBhbmQgeW91J2xsIGtub3cgd2hhdCB0byBkby4KIkFmdGVyIG91ciBwb2tlciBuaWdodCB3ZSBiZSBjbG9zZSB0byAkOCBtaWxsaW9uIHdlIHJhaXNlZCBmb3Igc2VyaW91c2x5IGlsbCBhbmQgdW5kZXJwcml2aWxlZ2VkIGNoaWxkcmVuLCB3aGljaCBpcyBhbWF6aW5nIGFuZCBJIHJlYWxseSBwcm91ZCBvZiB0aGF0LCIgaGUgc2FpZC4gVGhlIGx1bmNoIHdhcyBqdXN0IG9uZSBpbiBhIHNlcmllcyBvZiBnYWxhIGV2ZW50cyB0aHJvd24gZWFjaCB5ZWFyIGJ5IHRoZSBmb3VuZGF0aW9uIHNpbmNlIFdhcm5lIHNldCB1cCB0aGUgTWVsYm91cm5lIGJhc2VkIGNoaWxkcmVuIGNoYXJpdHkgaW4gMjAwNC4gV2l0aCB0aGUgcGF0cm9uYWdlIG9mIGx1bWluYXJpZXMgc3VjaCBhcyBKYW1lcyBQYWNrZXIsIEVkZGllIE1jR3VpcmUgYW5kIFBpZXJzIE1vcmdhbiwgcGx1cyBhIHJvc3RlciBvZiBwYXN0IGFuZCBwcmVzZW50IEFGTCBhbmQgY3JpY2tldCBzdGFycywgdGhlIGZvdW5kYXRpb24gaGFkIGJlY29tZSBvbmUgb2YgdGhlIG1vc3QgcHJvbWluZW50IGNlbGVicml0eSBjaGFyaXRpZXMgaW4gdGhlIGNvdW50cnkuIApQbGVhc2Ugc2VlIHRoZU9ubGluZSBUcmFja2luZyBhbmQgQWR2ZXJ0aXNpbmcgc2VjdGlvbiBmb3IgZnVydGhlciBpbmZvcm1hdGlvbiBhYm91dCBvdXIgYW5kIHRoaXJkIHBhcnRpZXMnIHVzZSBvZiBjb29raWVzLCB3ZWIgYmVhY29ucywgbW9iaWxlIGFkIGlkZW50aWZpZXJzLCBhbmQgb3RoZXIgdHJhY2tpbmcgdGVjaG5vbG9naWVzIHRvIHByb3ZpZGUgeW91IHJlbGV2YW50IGFkcywgYXMgd2VsbCBhcyBpbmZvcm1hdGlvbiBhYm91dCBob3cgdG8gZGlzYWJsZSBjb29raWVzIGFuZCBtYWtlIG90aGVyIGNob2ljZXMgcmVsYXRlZCB0byB0YXJnZXRlZCBhZHZlcnRpc2luZy4gCkVzIHBsIFNwcmluZ2JydW5uZW4sIHcgZGVyIFdlaW4gZWluZ2VzY2hlbmt0IHdpcmQuIFVybGF1YnNzdGltbXVuZyBrb21tdCBhdWYuIFVuZCBkYXMgaXN0IG5pY2h0IHZlcmtlaHJ0LiAKQnV0IHRoZW4gdGhhbmtzIHRvIHRoZSBjb3R0b24gZ2luIHlvdSBjb3VsZCBkdW1wIGFsbCB5b3VyIGZyZXNobHkgaGFydmVzdGVkIGNvdHRvbiBpbnRvIGEgbWFjaGluZSwgYW5kIGhhdmUgMSBzbGF2ZSBzcGluIGEgbGV2ZXIgdG8gYnJlYWsgdGhlIGNvdHRvbiBvdXQgcGFpbiBmcmVlLiAxIHNsYXZlIGNvdWxkIGRvIHRoZSB3b3JrIG9mIGRvemVucyBhbGwgb2YgYSBzdWRkZW4uIFRoaXMgaXMgd2h5IGNvdHRvbiB3YXMga2luZyBpbiB0aGUgc291dGguLiAKVGhlIFdpa2lMZWFrcyBpbnZlc3RpZ2F0aW9uIGhhcyBiZWVuIG9uZ29pbmcgZm9yIGEgbG9uZyB0aW1lLiBMYXN0IHllYXIsIHByb3NlY3V0b3JzIGluIEFsZXhhbmRyaWEgaW5hZHZlcnRlbnRseSBkaXNjbG9zZWQgdGhhdCBXaWtpTGVha3MgZm91bmRlciBKdWxpYW4gQXNzYW5nZSBpcyBmYWNpbmcgdW5zcGVjaWZpZWQsIHNlYWxlZCBjcmltaW5hbCBjaGFyZ2VzIGluIHRoZSBkaXN0cmljdC4KQSBwcm9kdWN0QSBwbGFjZSB0byBzZWxsIHRoZSBwcm9kdWN0ICAgaW4gZSBjb21tZXJjZSwgYSBXZWIgc2l0ZSBkaXNwbGF5cyB0aGUgcHJvZHVjdHMgaW4gc29tZSB3YXkgYW5kIGFjdHMgYXMgdGhlIHBsYWNlQSB3YXkgdG8gZ2V0IHBlb3BsZSB0byBjb21lIHRvIHlvdXIgV2ViIHNpdGVBIHdheSB0byBhY2NlcHQgb3JkZXJzICAgbm9ybWFsbHkgYW4gb24gbGluZSBmb3JtIG9mIHNvbWUgc29ydEEgd2F5IHRvIGFjY2VwdCBtb25leSAgIG5vcm1hbGx5IGEgbWVyY2hhbnQgYWNjb3VudCBoYW5kbGluZyBjcmVkaXQgY2FyZCBwYXltZW50cy4gCkV2ZW4gcGVvcGxlIHRoYXQgaGF2ZSB1bmRlciBubyBjaXJjdW1zdGFuY2VzIHZpc2l0ZWQgYSBsYW5kIHByaW1hcmlseSBiYXNlZCBjYXNpbm8gb3IgbWF5YmUgYSBuZWlnaGJvcmhvb2QgYm9va2llIGFyZSBmaW5kaW5nIHRoZW1zZWx2ZXMgdmlzaXRpbmcgb25saW5lIGNhc2lub3MgYW5kIHBva2VyIHJvb21zIGZyZXF1ZW50bHkuLiAKWW91ciBiaXJ0aGRheSBpcyB5b3VyIHNwZWNpYWwgZGF5LiBCdHcsIGhhcHB5IGJlbGF0ZWQgYmlydGhkYXkhLiAKSWwgZXN0IHBhcnRpc2FuIGRlIG11c2NsZXIgbGVzIGNvbnRybGVzIHBvdXIgbGVzIGNvbW1lcmFudHMgcmNhbGNpdHJhbnRzLi4gClNvbWV0aGluZyBzb21ldGhpbmcgcG93ZXIgZGlmZmVyZW50aWFsIHRvby4gTm90IHRvIG1lbnRpb24gbGF3c3VpdHMgdGhhdCBjYW4gYXJpc2UgaWYgdGhpbmdzIGRvbiBnbyB3ZWxsLkJ1dCB0aGVuIGFnYWluIE9QIGlzIGluIHRoZSBVUywgYW5kIHRoZSBVUyBoYXMgcHJldHR5IGZ1bm55IG5vdGlvbnMgb2YgZXRoaWNzLCBsaWtlIGl0IGJlaW5nICJ1bmV0aGljYWwiIChJIHF1b3RlIGl0IGJlY2F1c2UgZXRoaWNzIGlzbiBzb21ldGhpbmcgdGhhdCBzaG91bGQgY2hhbmdlIGZyb20gcGxhY2UgdG8gcGxhY2UsIGFuZCB0aGlzIGlzIGNsZWFybHkgbm90IHVuZXRoaWNhbCksIGFuZCBJIGJlbGlldmUgZXZlbiBpbGxlZ2FsIGZvciBhIGRvY3RvciB0byBwcmVzY3JpYmUgZHJ1Z3MgdG8gaGltc2VsZiwgb3IgdG8gdHJlYXQgZmFtaWx5IG1lbWJlcnMgZm9yIHRoYXQgbWF0dGVyLiBBbmQgdGhlbiBpbiBtb3N0IHBsYWNlcyB0aGV5IGdvIGFoZWFkIGFuZCBjaXJjdW1jaXNlIG5ld2Jvcm5zIGZvciBubyBnb29kIHJlYXNvbiA6ey4gClNoZSBzd2VwdCBpdCB1bmRlciB0aGUgcHJvdmVyYmlhbCBydWcuIApTZW91bCBpcyBhIGJlYXV0aWZ1bCBjaXR5IHdpdGggdG9ucyBvZiB0YWxsIGFuZCBtb2Rlcm4gbG9va2luZyBidWlsZGluZ3MgY29uc3RhbnRseSBiZWluZyBidWlsdCBidXQgYWxvdCBvZiB0aGF0IGNvbWVzIHdpdGggYSBwcmljZS4gCkkgY2FsbGVkIGEgY2FiYnkgYW5kIGFza2VkIGhvdyBtdWNoIGl0IHdvdWxkIGNvc3QgdG8gZ2V0IGEgcmlkZSBob21lICh0byB0aGUgbmV4dCB0b3duIG92ZXIpIGFuZCBoZSBzYWlkLCAkNTAuIFRoZSBvbmx5IHRoaW5nIEkgY291bGQgdGhpbmsgb2YsIHdhcyBhc2sgb25lIHRvIGRyaXZlIG1lLCBhbmQgdGhlbiBnZXQgbXkgbGFuZGxvcmQgdG8gY292ZXIgbWUgZm9yIHRoZSBtb25leSB3aGVuIGkgZ290IHRvIG15IHBsYWNlLiBBdCB0aGlzIHBvaW50LCBpdCB3YXMgYWJvdXQgMmFtLCBhbmQgSSBldmVuIHdhcyBjb25zaWRlcmluZyBnb2luZyB0byBhIGJhciBhbmQgc2VlaW5nIGlmIEkgY291bGQgbWVldCBzb21lb25lIHdobyBzZWVtZWQgbm90IHNrZXRjaHksIG9yIHRyeWluZyB0byBmaW5kIG91dCBpZiB0aGVyZSB3YXMgYW55cGxhY2Ugb3BlbiAyNC83IGluIHRoZSB0b3duLi4gCiJJdCdzIGJlZW4gbGlrZSBhIHRvdGFsIGRyZWFtIGNvbWUgdHJ1ZSwiIEdvbGQgc2FpZC4KRm9jdXMgZ3JvdXBzIGFyZSBhbHNvIGEgam9rZS4gV2h5IGRvIHlvdSB0aGluayBuZXR3b3JrIHR2IGFuZCByYWRpbyBoYXMgZ29uZSB0byBzaGl0PyBUaGV5IHJlbGllZCBvbiBmb2N1cyBncm91cCBidWxsc2hpdCwgYW5kIG5vdyBpbmRlcGVuZGVudCBlbnRlcnRhaW5tZW50IGhhcyBiZWNvbWUgc28gcG9wdWxhci4gVGhleSBsZXQgY3JlYXRpdmUgcGVvcGxlIGRvIGNyZWF0aXZlIHRoaW5ncyB3aXRob3V0IHRoZSBpbnB1dCBvZiByYW5kb20gZm9jdXMgZ3JvdXBzLgpUaGUgcHJvYmxlbSB3aXRoIHRoaXMgInNlbGYgY29tbWVudGluZyIgaXMgeW91ciBleHRlcm5hbCBwcmVvY2N1cGF0aW9uIHdpdGggeW91ciBpbnRlcm5hbCBjcml0aWNpc20uIApUaGlzIGluZmx1eCBvZiBmcmVzaCB3YXRlciB0aGVuIGRpc3J1cHRlZCBvY2VhbiBjdXJyZW50IGNpcmN1bGF0aW9uLCBpbiB0dXJuIGNhdXNpbmcgYSBzZWVzYXdpbmcgb2ZoZWF0YmV0d2VlbiB0aGUgaGVtaXNwaGVyZXMuCkFuIHVucG9wdWxhciBvYnNlcnZhdGlvbiwgcGVyaGFwcywgYnV0IGl0IHdhcyBhbiBvYnZpb3VzIHR1cm5pbmcgcG9pbnQuIFdvdWxkIEFkYW1zIGhhdmUgcHJvdGVjdGVkIGEgbG9uZyB0ZXJtIG9jY3VwYXRpb24gYnkgc29jaWFsIGNvbnNlcnZhdGl2ZSBncm91cHM/IEFuIGFudGkgZ2F5IHJpZ2h0cyBlbmNhbXBtZW50LCBmb3IgZXhhbXBsZSwgdGhhdCBjbGFpbWVkIGEgZnJlZSBzcGVlY2ggYmFzaXMgZm9yIGxpdmluZyBhbmQgcG9vcGluZyBpbiBwdWJsaWMgcGFya3M/IE1ldGhpbmtzIG5vdC4gV29yc3QgbWF5b3IgZXZlci4uIApJdCB3YXMgb25seSBhIG1hdHRlciBvZiB0aW1lIHRpbGwgdGhlIHNvcnQgb2YgbmFzdHksIHVnbHkgYW5kIHllcyBmYXNjaXN0IHRhY3RpY3Mgb2YgdGhlIGZhciByaWdodCB3aW5nbnV0cyB3b3VsZCBzdG9wIGFueSBhbmQgYWxsIGNyaXRpY2FsIGRpc2NvdXJzZSBpbiBVUyB1bml2ZXJzaXRpZXMuIApJbmR1c3RyeSBpcyBzdGlsbCByZWxhdGl2ZWx5IG5ldyBpbiB0aGUgc3RhdGUsIHNvbWV0aGluZyBpcyBvcGVuaW5nIGFsbW9zdCBldmVyeSBvdGhlciBtb250aCwgc2FpZCBBbGFuIFNpbHZlciwgYXNzaXN0YW50IHByb2Zlc3NvciBvZiByZXN0YXVyYW50LCBob3RlbCBhbmQgdG91cmlzbSBhdCBPaGlvIFVuaXZlcnNpdHkgYW5kIGEgZm9ybWVyIGNhc2lubyBleGVjdXRpdmUuIEV2ZXJ5dGhpbmcgb3BlbnMgYXJvdW5kIHRoZSBzdGF0ZSwgdGhlbiB3ZSdsbCBnZXQgYSBnb29kIGluZGljYXRpb24uIApBZmZsZWNrIHJlY2VudGx5IHdlbnQgdGhyb3VnaCByZWhhYiBhbmQgaGFzIHJlY292ZXJlZCBhbmQgaXMgbm93IGZvY3VzaW5nIG9uIGZhbWlseSByZWxhdGlvbnNoaXBzIGFuZCBoaXMgY2FyZWVyLiBPdXRkb29yIHNob3BzIHN1Y2ggYXMgY29mZmVlIHNob3BzLCBjdWxpbmFyeSBzdHVkaW9zIGFuZCBtb3JlIGFyZSBob21lIHRvIHBlcmZvcm1lcnMgYXMgdGhleSBwdXJzdWUgdGhlaXIgZHJlYW1zLiBFbmpveSB0aGUgbXVzZXVtcywgYXJ0cyBhbmQgZWNsZWN0aWMgb3B0aW9ucyB0byBleHBsb3JlIGluIEJlcmtlbGV5LCB3aGVyZSB0aGUgZXhwZXJpZW5jZSBpcyB1bmZvcmdldHRhYmxlIGFuZCB0aGUgcGVvcGxlIHdobyBoYXZlIGxpdmVkIGFuZCBwcm9zcGVyZWQgYXJlIGluc3BpcmF0aW9uYWwuLiAKR2l2aW5nIHlvdSB0aGF0IHNtb290aCBsb29rLi4gCkl0IHN0aWxsIGxvb2tzIGxpa2UgdGhlIHBhZ2UgeW91IGxpbmtlZCB0byBuZWVkcyBzb21lIHVwZGF0ZXM7IGl0IHN0aWxsIHNheXMgdGhlIHByb2dyYW0gaXMgdGF1Z2h0IGluIE5vcndlZ2lhbi4gCk11c2tvZ2VhbiBsYW5ndWFnZXMgYXJlIHJlcHJlc2VudGVkIGJ5IENyZWVrLCBDaGlja2FzYXcsIENob2N0YXcsIGV0Yy4gVGhlbiB3ZSBnZXQgdG8gdGhlIHZhcmlvdXMgbGFuZ3VhZ2UgaXNvbGF0ZXMgbGlrZSBUdW5pY2EsIENhbHVzYSwgVGltdWN1YSwgTmF0Y2hleiwgYW5kIFl1Y2hpIHRoYXQgZG9uIGhhdmUgb2J2aW91cyB0aWVzIHRvIG90aGVyIGxhbmd1YWdlcyBpbiB0aGUgYXJlYSAodGhvdWdoIHNvbWUgbGluZ3Vpc3RzIGhhdmUgdHJpZWQgdG8gbGluayBUdW5pY2EgYW5kIENhbHVzYSB0b2dldGhlciwgWXVjaGkgd2l0aCB0aGUgdGhlIFNpb3VhbiBsYW5ndWFnZXMsIGFuZCBOYXRjaGV6IHdpdGggdGhlIE11c2tvZ2VhbiBsYW5ndWFnZXMgd2l0aCBsaW1pdGVkIHBsYXVzaWJpbGl0eSkuLiAKWW91IGNvdWxkIGFsc28gcG9pbnQgdGhlbSB0byBGb3J0dW5lJ3MgbGlzdCBvZiB0aGUgIjEwMCBCZXN0IENvbXBhbmllcyB0byBXb3JrIEZvci4iIEluIDIwMTMsIHRoZSBjb21wYW5pZXMgb24gdGhpcyBsaXN0IHNhdyByZXZlbnVlcyBpbmNyZWFzZSBieSBhbiBhdmVyYWdlIG9mIDIyLjIgcGVyY2VudCAgIG5vdCB0b28gc2hhYmJ5IFtzb3VyY2U6IEJpcm9dLiAKVGhlIGxvY2F0aW9uIG9mIHRoZXNlIGRlcGVuZCBvbiB0aGUgaW5kaXZpZHVhbCBhdGhsZXRlIGFuZCBoaXMgb3IgaGVyIHRyYWluaW5nIHJvdXRpbmUuIApBbnl3YXksIHRoYW5rcyBmb3IgdGFraW5nIHRoZSB0aW1lIHRvIHJlYWQgdGhpcyEgSSBiZWVuIHdhbnRpbmcgdG8gdmlzaXQgTWFkaXNvbiBmb3IgYSBsb25nIHRpbWUgYW5kIGFtIHN1cGVyIGV4Y2l0ZWQgdGhhdCB0aGUgdHJpcCBpcyBmaW5hbGx5IGJvb2tlZC4gCklmIGN1cnJlbnQgbWFya2V0IHJlbnRzIGFyZW4ndCBoaWdoIGVub3VnaCB0byByZXBheSBoaXMgbG9hbnMsIGhlIHNob3VsZG4ndCBoYXZlIGFkZGVkIGEgdW5pdCB0byBiZWdpbiB3aXRoLiBJZiB0aGV5IGFyZSBoaWdoIGVub3VnaCwgdGhlbiBoZSB3b24ndCBuZWVkIHRvIHJhaXNlIHRoZSByYWlzZXMgYWJvdmUgdGhlIENQSSBpbiB0aGUgZnV0dXJlIGp1c3QgdG8gcGF5IHRoZSBsb2FucyBoZSdzIHNwZWN1bGF0aW5nLgpUaGUgZ29vZCBuZXdzICAgbXkgc3BpbmUgaGFkIGZ1c2VkIHByb3Blcmx5IGFuZCB3YXMgc3Ryb25nIGVub3VnaCB3aXRob3V0IHRoZSBtZXRhbC4gVGhlIGJhZCBuZXdzICAgb3ZlciB0aW1lIG15IHNwaW5hbCBjdXJ2ZSBoYXMgcmVncmVzc2VkIHNpZ25pZmljYW50bHkuLiAKSSB0aGluayBmcm9tIHRoYXQgc3RhbmRwb2ludCwgdGhlIHRoZW1lIG9mIFdlc3QgYW5kIEhheXMgKGFuZCB1cyB2aWV3ZXJzKSBkZWFsaW5nIHdpdGggc28gbXVjaCBpbmZvcm1hdGlvbiBhbmQgbWlzaW5mb3JtYXRpb24sIGlzIHNpZ25pZmljYW50IGFuZCBpbnRlbnRpb25hbCBpbiByZWdhcmQgdG8gSGF5cyBtZW50YWwgc3RhdGUuIEkgbm90IGEgbWVkaWNhbCBleHBlcnQgYnkgYW55IG1lYW5zLCBidXQgaW4gbXkgbGltaXRlZCBleHBvc3VyZSB0byBkZW1lbnRpYSBwYXRpZW50cywgaXQgbm90IHRoZSBsYWNrIG9mIGluZm9ybWF0aW9uIGluIHRoZWlyIGhlYWRzLCBpdCB0aGUgYW1vdW50IG9mIGZhbHNlIGluZm9ybWF0aW9uIHRoYXQgaXMgcmF0dGxpbmcgYXJvdW5kIGluIHRoZXJlLi4gCkJ1dCBhcyBJIHNhaWQsIGhpc3RvcmljYWwgYWNjdXJhY3kgaXMgYWxyZWFkeSBvdXQgdGhlIHdpbmRvdyB3aGVuIGl0IGNvbWVzIHRvIENPRC4gSSBiZXQgdGhlcmUgd2VyZSBtb3JlIGJsYWNrIGZlbWFsZSBuYXppIGR1cmluZyBXV0lJIHRoYW4gdGhlcmUgd2VyZSBleHBsb3NpdmUgUkMgY2FycyBvciByZW1vdGUgY29udHJvbCByb2NrZXQgbGF1bmNoZXJzIGR1cmluZyB0aGUgY29sZCB3YXIuIFRoZXJlIHdlcmUgY2VydGFpbmx5IG1vcmUgZmVtYWxlIHNvbGRpZXJzIHRoYW4gbGl0ZXJhbCBudWNsZWFyIGV4cGxvc2lvbnMgZHVyaW5nIG1vZGVybiB3YXJmYXJlLiAKRXZlbiBtdWx0aXZpdGFtaW5zIHJpY2ggaW4gbWFnbmVzaXVtIGlzIGEgZ29vZCBzb3VyY2UuLiAKSSBzZWVuIHRoZSByZXN1bHRzIGJldHdlZW4gcGF0aWVudHMgdGhhdCBnZXQgcmVndWxhciBhZGp1c3RtZW50cyBBTkQgbWFzc2FnZXMgdmVyc2VzIG9ubHkgZG9pbmcgb25lIG9yIHRoZSBvdGhlci4gRWl0aGVyIG9uZSBtYXkgaGVscCB0byBzb21lIGV4dGVudCB0byBtYWtlIHlvdXIgaG9yc2UgbW9yZSBjb21mb3J0YWJsZSBhbmQgc2VsZiBiYWxhbmNlZCwgYnV0IHlvdSByZWFsbHkgc2VlIHRoZSBiZXN0LCBtb3N0IGV4dHJlbWUgcmVzdWx0cyBpZiB5b3UgdXNlIGJvdGggdG9nZXRoZXIgYW5kIHVzZSB0aGVtIGNvbnNpc3RlbnRseS4gCiAyIHBvaW50cyAgc3VibWl0dGVkIDE2IGhvdXJzIGFnb0l0IGRlZmluaXRlbHkgc3Vja3Mgd2hlbiB5b3UgZmVlbCB5b3VyIGZyaWVuZHMgYXJlIG9uIGVudGlyZWx5IGRpZmZlcmVudCBwYXRocyBhbmQgc2VlbSB0byBiZSBjaG9vc2luZyBvdGhlciB0aGluZ3Mgb3ZlciB5b3VyIGZyaWVuZHNoaXAuIApPZiBjb3Vyc2UsIEkgcGFpZCwgd2Ugd2VyZSB0aGVyZSwgc28gSSBoYWQgdG8gZ28gdGhyb3VnaCB3aXRoIGl0LCBhbmQgSSBub3QgZ29pbmcgdG8gc2F5IGRvbiBmYW5jeSB5b3UgQnV0IHRoZSBtb3JlIHR1cm5lZCBvbiBJIGFtLCB0aGUgbW9yZSBlbnRodXNpYXN0aWMgSSBhbSAob2J2aW91c2x5ISkgYW5kIEkgZ3Vlc3MgSSB3YXNuIGdpdmluZyBvZmYgbXVjaCBTaGUgZGlkIGhlciBqb2IsIHRvIHRoZSBiZXN0IG9mIGhlciBhYmlsaXRpZXMsIGFuZCBzaGUgd2FzIG5vdCBpbiBhbnkgd2F5IGluIGEgYmFkIG1vb2QsIGJ1dCBpdCB3YXMgZmFyIGZyb20gcGVyc29uYWwgZnJvbSBlaXRoZXIgb2YgdXMuNi8xMC4gClRoaXMuIApEYXZlIE1vcmluLCBhIHZlbnR1cmUgY2FwaXRhbGlzdCBhbmQgZWFybHkgRmFjZWJvb2sgZW1wbG95ZWUsIHdpbGwgbGVhZCBhIHByb2dyYW0gb24gZGVwcmVzc2lvbiBhbmQgdGVjaDsgYSBmb3JtZXIgR29vZ2xlIGV0aGljaXN0LCBUcmlzdGFuIEhhcnJpcywgbGVkIGEgd2Vla2VuZCBvbiBpbnRlcm5ldCBhZGRpY3Rpb247IGFuZCB0ZWNoIGZ1dHVyaXN0cyB3aWxsIGhvc3QgYSBjb25mZXJlbmNlIG9uIHZpcnR1YWwgcmVhbGl0eSBhbmQgc3Bpcml0dWFsaXR5LiAKV2l0aCBhIGJlYXV0aWZ1bGx5IGNyYWZ0ZWQgY293IGhvcm4gcG9rZXIsIFNpZCB0YXBzIGF0IGV2ZXJ5IGNhZ2UgZW5zdXJpbmcgaGUgaGFzIHRoZSBiaXJkJ3MgYXR0ZW50aW9uIGJlZm9yZSBjYXJlZnVsbHkgdGFraW5nIHRoZW0gaW50byBoaXMgaGFuZHMgZm9yIGEgY2xvc2UgaW5zcGVjdGlvbi4gCkZpcnN0LCBsZXQncyBkaXNjdXNzIGxpbWl0cyB0byBhcmJpdHJhZ2UsIG1vcmUgY29tbW9ubHkgcmVmZXJyZWQgdG8gYXMgbWFya2V0IGZyaWN0aW9ucy4gVGhlIGVmZmljaWVudCBtYXJrZXQgaHlwb3RoZXNpcyBwcmVkaWN0cyB0aGF0IHByaWNlcyByZWZsZWN0IGZ1bmRhbWVudGFsIHZhbHVlLiBXaHk/IFBlb3BsZSBhcmUgZ3JlZWR5IGFuZCBhbnkgbWlzcHJpY2luZ3MgYXJlIGltbWVkaWF0ZWx5IGNvcnJlY3RlZCBieSB0aG9zZSBzbWFydCwgc2F2dnkgaW52ZXN0b3JzIHRoYXQgY2FuIG1ha2UgYSBxdWljayBwcm9maXQuIEJ1dCBpbiB0b2RheSdzIHdvcmxkIG9mIGluc3RhbnQgaW5mb3JtYXRpb24sIHN1cGVyY29tcHV0ZXJzIGFuZCBpbnRlcmNvbm5lY3RlZCBtYXJrZXRzLCB0cnVlIGFyYml0cmFnZSBwcm9maXRzIGVhcm5lZCB3aXRoIHplcm8gcmlzayBhZnRlciBhbGwgcG9zc2libGUgY29zdHMgcmFyZWx5LCBpZiBldmVyLCBleGlzdHMuIE1vc3QgYXJiaXRyYWdlIGludm9sdmVzIHNvbWUgZm9ybSBvZiBjb3N0IG9yIHJpc2sgKHJpc2sgb2YgYnV5aW5nIGF0IHRoZSB3cm9uZyBwcmljZSwgcmlzayBvZiBwYXlpbmcgaGlnaCB0cmFuc2FjdGlvbiBjb3N0cywgbGlxdWlkaXR5LCBldGMpLiBMZXQncyBsb29rIGF0IGEgc2ltcGxlIGV4YW1wbGU6CklNTywgYWxsIHRoZSBjaGlwcyBoZSBicm91Z2h0IG91dCB3ZW50IHBhc3QgdGhlIGJldHRpbmcgbGluZSBpbiBvbmUgbW90aW9uLCBhbmQgdWx0aW1hdGVseSBoaXQgdGhlIHRhYmxlLCB0aHVzIGFsbCBvZiB0aG9zZSBjaGlwcyBzaG91bGQgYmUgcmVxdWlyZWQgdG8gc3RheSBvdXQgdGhlcmUsIGV2ZW4gaWYgaXQgd2FzbiBoaXMgaW50ZW50LiAKV2hhdCBzaG91bGQgd2UgZWF0IGluIG9yZGVyIHRvIHN0YXkgaGVhbHRoeSBhbmQgYXZvaWQgZGlzZWFzZT8gTnV0cml0aW9uIGlzIG9uZSBvZiB0aGUgYmlnZ2VzdCBkcml2ZXJzIG9mIGNocm9uaWMgZGlzZWFzZXMsIGluY2x1ZGluZyBvYmVzaXR5IGFuZCBkaWFiZXRlcywgeWV0IHRoZSBhbnN3ZXIgdG8gdGhpcyBzZWVtaW5nbHkgc2ltcGxlIHF1ZXN0aW9uIHJlbWFpbnMgYSBzdWJqZWN0IG9mIGhlYXRlZCBkZWJhdGUuIFRoaXMgY29sbGVjdGlvbiBicmluZ3MgdG9nZXRoZXIgc29tZSBvZiB0aGUgd29ybGQncyBtb3N0IHRob3VnaHRmdWwgYW5kIGluZmx1ZW50aWFsIHZvaWNlcyBpbiB0aGUgZmllbGQgb2YgbnV0cml0aW9uIGFuZCBoZWFsdGgsIHJlcHJlc2VudGluZyBhIHJhbmdlIG9mIGJhY2tncm91bmRzIGFuZCBwZXJzcGVjdGl2ZXMsIHRvIGhlbHAgbWFrZSBzZW5zZSBvZiB0aGUgc3RhdGUgb2YgY3VycmVudCBrbm93bGVkZ2UsIHRoZSBxdWFsaXR5IG9mIHRoZSBldmlkZW5jZSBvbiBrZXkgaXNzdWVzLCB0aGUgZXh0ZW50IGFuZCBpbXBsaWNhdGlvbnMgb2YgcG90ZW50aWFsIGRpc2FncmVlbWVudHMgYmV0d2VlbiBleHBlcnRzLCBhbmQgdGhlIGFnZW5kYSBmb3IgZnVydGhlciByZXNlYXJjaC4KV2hhdCBPblRoaW5ncyB0byBkb0Zvb2QgYW5kIERyaW5rVGhlYXRyZSBhbmQgQXJ0c0ZhbWlseSBhbmQgS2lkc011c2ljIGFuZCBHaWdzVFYgR3VpZGVEaWdpdGFsIFByaW50IEVkaXRpb25BIHN0YXRlIGdvdmVybm1lbnQgc2NoZW1lIHRoYXQgYWxsb3dzIHJlZ2lzdGVyZWQgY2x1YnMgdG8gZ2V0IHRheCBicmVha3Mgb24gcG9rZXIgbWFjaGluZSBwcm9maXRzIGlmIHRoZXkgc3BlbmQgbW9uZXkgb24gY29tbXVuaXR5IGZhY2lsaXRpZXMgaXMgcG9vcmx5IHJ1biBhbmQgbmVlZHMgdG8gYmUgbW9yZSB0cmFuc3BhcmVudCwgdGhlIE5TVyBBdWRpdG9yIEdlbmVyYWwgaGFzIGZvdW5kLiAKSXQgYSBsb29waG9sZSBzeXN0ZW0sIHdobyBrbm93cyBob3cgbG9uZyBpdCBjb3VsZCBsYXN0LiBIb3dldmVyIHRoZSBjb21wYW55IHRoYXQgb3ducyBpdCBoYXMgcmFuIHNvbWUgY2h1bWJhPyBjYXNpbm8gd2Vic2l0ZSBvciB3aGF0ZXZlciB3aXRoIHRoZSBzYW1lIGZvcm1hdCBmb3IgYSBmZXcgeWVhcnMgbm93LiBJIHBlcnNvbmFsbHkgcGxheSBvbiBnbG9iYWwgNCA1IGRheXMgYSB3ZWVrLCBiaW5rZWQgbXkgbGFyZ2VzdCBvbmxpbmUgd2luIGVhcmx5IGxhc3QgbW9udGggYW5kIGdvdCBjYXNoZWQgb3V0IGZ1bGx5IHdpdGhpbiAyIGRheXMuIApUaGlzIGlzIGVub3VnaCB0byBnaXZlIHlvdXIgYmFua3JvbGwgYSBib29zdC4uIApTaGUgY2FtZSB3aXRoIGEgc3RyYWlnaHQgaGFyZCBsZWdzLiAKSSB3b3VsZCBoYXJkbHkgY2FsbCB0aGF0IHJldmVhbGluZyB0aGUgc3VtbWl0IHRvIHRoZSBOb3J0aCBLb3JlYW4gcGVvcGxlIHdpdGggYWxtb3N0IG5vIGRlbGF5LgpDb25zY2llbW1lbnQgb3UgcGFzLiAKQ2FybGVzcyBob3VzZWhvbGRzIHdlcmUgZnVydGhlciBiZWhpbmQgaG91c2Vob2xkcyB3aXRoIHZlaGljbGVzIGFuZCB3ZXJlIGluIGFic29sdXRlIHRlcm1zIHRvZGF5IHRoYW4gdGhleSB3ZXJlIDYwIHllYXJzIGFnbywgdGhleSBvYnNlcnZlZC4gaXMgbm90IHRvIHN1Z2dlc3QgdGhhdCBpbXByb3ZpbmcgYWNjZXNzaWJpbGl0eSBieSB0cmFuc2l0IGRvZXMgbm90IGhhdmUgbWVyaXQuIEl0IGNlcnRhaW5seSBkb2VzLiBXaGVyZSBkZW1hbmQgZXhpc3RzLCB0cmFuc2l0IG9mZmVycyBoaWdoZXIgZWZmaWNpZW5jaWVzLCBmZXdlciBlbWlzc2lvbnMgYW5kIGdyZWF0ZXIgdGhyb3VnaHB1dCBjYXBhY2l0aWVzLCBhcyBjb25nZXN0aW9uIG9uIGNpdHkgcm9hZHMgd291bGQgYmUgZXZlbiB3b3JzZSB3aXRob3V0IGl0LgpJIHN0YXJ0aW5nIHRvIHRoaW5rIHRoYXQgdGhlIGxhc3QgMTIgbW9udGhzIG9mIHByb2R1Y3Rpb24gYXQgQkdTIGlzIGJhc2ljYWxseSBjdXR0aW5nIGNvbnRlbnQuIApTdGFydGVkIGltbWVkaWF0ZWx5IGF0IDI1bmwgb3IgNTBubCAyIDQgdGFibGluZy4gClRoaXMgZW50aXJlIHN1YnJlZGRpdCBpcyB0aGUgc3R1cGlkZXN0IGNvbmNlcHQgdGhhdCBldmVyIHNlZW4gaW4gbXkgbGlmZS4gSXQgZmlsbGVkIHdpdGggc2FsdHkgcHVzc2llcyB5b3Ugc2l0IGhlcmUgYW5kIHdoaW5lIGFuZCBjb21wbGFpbiBhbmQgYml0Y2hpbmcgTW9hbmluZyBhYm91dCBpcnJlbGV2YW50IG5vbnNlbnNlLiBZb3UganVtcCB0byBjb25jbHVzaW9ucyBhYm91dCBwZW9wbGUgd2hvIGFyZSBhbHNvIGp1bXBpbmcgdG8gY29uY2x1c2lvbnMgYWJvdXQgc3R1ZmYuIApXZSBkb24ga25vdyB3aGF0IGtpbmQgb2Ygc2VhZm9vZCBpdCBpcy4gQmlnIHNjYWxsb3BzIHRlbmQgdG8gYmUgZXhwZW5zaXZlLiAKS2VlcCB0cmFjayBvZiBhdCBsZWFzdCAxLDUwMCBob3VycyB3b3J0aCBvZiBwbGF5LiBUaGlzIGlzIHdoZXJlIHlvdSdyZSBnb2luZyB0byBzYXksICJBd3csIG1hbiwgdGhhdCBzb3VuZHMgbGlrZSB3b3JrLiIgQW5kIGl0IGlzICAgdG8gbWFrZSB0aGlzIHlvdXIgbGl2aW5nLCB5b3UgZ290dGEgcHV0IGluIHRoZSBncnVudCB3b3JrLiBBbmQgdGhhdCBtZWFucyBrZWVwaW5nIHRyYWNrIG9mIGV2ZXJ5IGdhbWUgeW91IHBsYXkgYW5kIHRoZSByZXN1bHRzLiBIZXJlJ3MgdGhyZWUgcmVhc29ucyB3aHk6ClRoaXMgZWxlbWVudCBkb2VzIG5vdCByZXF1aXJlIHRoYXQgKG5hbWUgb2YgdmljdGltKSBvZmZlcmVkIHBoeXNpY2FsIHJlc2lzdGFuY2UuLiAKTHVjaywgeWVzLCBidXQgdG8gYSBsZXNzZXIgZGVncmVlLiBTa2lsbCwgYSBwYXJ0IG9mIHRoZSBnYW1lIHNvbWUgbmV2ZXIgd2lsbCBtYXN0ZXIuLiAKSGUgd2FzIGluIG15IGZlbmNlZCBpbiBiYWNreWFyZC4gClRpY2tldCB0byBSeWRlVGhlIHNlY29uZCwgc21hbGxlciB0cmFuc3BvcnQgaHViIG9mIHRoZSBldmVudCBpcyBsb2NhdGVkIG91dHNpZGUgdGhlIElzbGUgb2YgV2lnaHQgQnVzIE11c2V1bSBpbiBSeWRlLiBGb3JtZWQgaW4gMTk5NywgdGhlIG11c2V1bSBjb250YWlucyBtYW55IGV4aGliaXRzIGFuZCBvdmVyIDIwIHZlaGljbGVzIGNvdmVyaW5nIGEgMTEwIHllYXIgcGVyaW9kLiBUaGVpciBvbGRlc3QgaXMgQ2l2aWxpdHksIGEgTmV3cG9ydCBidWlsdCBzdGFnZWNvYWNoIGRhdGluZyBmcm9tIHRoZSAxODgwcywgd2hpY2ggaXMgdGhlIG9sZGVzdCBzdXJ2aXZpbmcgcm9hZCB2ZWhpY2xlIG9uIHRoZSBJc2xhbmQgYW5kIHdhcyBkZXNpZ25lZCBmb3IgYSB0aHJlZSBkYXkgUm91bmQgdGhlIElzbGFuZCB0b3VyLiAKV2h1dCB3aHV0ICA3IHBvaW50cyAgc3VibWl0dGVkIDE5IGRheXMgYWdvCkZvcnRuaXRlIGdldHMgdGhpcyB3aXRoIG5ldyBza2lucyBwcmV0dHkgbXVjaCBldmVyeSB3ZWVrIGFuZCBoYXZpbmcgYSB0b24gb2YgbmV3IGNvbnRlbnQgZXZlcnkgbW9udGggd2l0aCB0aGUgbmV3IHNlYXNvbi9iYXR0bGUgcGFzcy4gSSB0aGluayBBcGV4IHVuZGVyc3RhbmRzIHRoaXMgdG9vIGJ1dCB3aXRoIGl0IGJlaW5nIGEgbmV3IGdhbWUgaXQgdGFraW5nIHRoZW0gYSBiaXQgbG9uZ2VyIGdldHRpbmcgdXAgYW5kIHJ1bm5pbmcgd2hpbGUgYWxzbyBmaXhpbmcgZ2xpdGNoZXMvYWRkcmVzc2luZyBjaGVhdGVycy4gMzk2IHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ28KTG9zdCBteSBob3VzZS4gCkZvciB1cyBub3J0aCBvZiB0aGUgZXZlbnQgc2l0ZSwgdGhlIEZhaHkgQnJpZGdlIGlzIHlvdXIgcGF0aHdheSB0byBoZWxsLiBUaGUgYnJpZGdlIGR1bXBzIGludG8gdGhpcmQgc3QsIHdoZXJlIGEgbWFzc2l2ZSB0cmFmZmljIGphbSBleGlzdHMgZnJvbSBMZWhpZ2ggVS4gVXAgaGlsbC4gClRoZXJlIGRvZXMgc2VlbSB0byBiZSBzdWJzdGFudGlhbCBtZXJpdCB0byBwYXJ0cyBvZiBEaWNrZW5zIGlkZWFzLCBlc3BlY2lhbGx5IHRoYXQgb2YgYW4gaW5zdGFudGx5IGFuZCBzdGFuZGFyZGl6YXRpb24gZGlzY3Vzc2lvbiBvZiB0cmFpdHMgb2YgYXBwZWFyYW5jZXMgb3ZlciBkaXN0YW5jZXMuIApGaXJzdCBvZiBhbGwsIEhhcHB5IE5ldyBZZWFyIHRvIGV2ZXJ5b25lLiBJIGhvcGUgdGhlIGhhbmdvdmVycyBhcmVuIHRvbyBiYWQgdG9kYXkgYW5kIGV2ZXJ5b25lIGlzIGdlYXJpbmcgdXAgdG8gZ2V0IGJhY2sgdG8gcmVhbCBsaWZlIQpEb24gV3lhdHQsIGluIGhpcyBsYXJnZSwgY29tZm9ydGFibGUgaG91c2Ugb24gTWF5ZmFpciBXYXksIGhhZCBtdWNoIG9uIGhpcyBtaW5kIHRoYXQgbmlnaHQuIEhlIHdhcyBvbmUgb2YgdGhlIHRvd24ncyBsZWFkaW5nIGF0dG9ybmV5cywgd2FzIGdldHRpbmcgd2VhbHRoeSBieSB3aW5uaW5nIGEgbG90IG9mIGFjY2lkZW50IGFuZCBwZXJzb25hbCBpbmp1cnkgY2FzZXMgZm9yIHRoZSBwZW9wbGUgb2YgdGhlIGFyZWEgYWdhaW5zdCBpbnN1cmFuY2UgY29tcGFuaWVzLCBhbmQgaGFkIGJlZW4gcGxhbm5pbmcgdG8gZXhwYW5kIGhpcyBzdGFmZi4gCkFuZCB3aG8gaXMgdGhpcyBicmlsbGlhbnQgQm9yYXQgb2YgdGhlIFJpZ2h0PyBBIHlvdW5nIG1hbiBieSB0aGUgbmFtZSBvZiBKYW1lcyBPIEFjY29yZGluZyB0byBoaXMgd2Vic2l0ZSwgaGUKV2hldGhlciBEYWltbGVyQ2hyeXNsZXIncyBUaHVyc2RheSBhbm5vdW5jZW1lbnQgdGhhdCBpdCBtYXkgYmUgc2V2ZXJpbmcgdGllcyB3aXRoIHRyb3VibGVkIEphcGFuZXNlIGF1dG9tYWtlciBNaXRzdWJpc2hpIE1vdG9ycyBpcyBhIHBsb3kgdG8gbW90aXZhdGUgdGhlIG90aGVyIERhaW1sZXJDaHJ5c2xlcidzIGFubm91bmNlbWVudCB0aGF0IGl0IHdpbGwgYmUgc2V2ZXJpbmcgdGllcyB3aXRoIHRyb3VibGVkIGF1dG9tYWtlciBNaXRzdWJpc2hpIE1vdG9ycyB3aWxsIHN1cmVseSBiZSBkZXZhc3RhdGluZyBmb3IgdGhlIEphcGFuZXNlIGNvbXBhbnkuIChQaG90bzogQWxleGFuZHJhIFN0cmF1YiwgQ2FuYWRpYW4gQXV0byBQcmVzcykgc2hhcmVob2xkZXJzIGludm9sdmVkIHRvIGNvb3BlcmF0ZSBpbiBpdHMgcmVzdHJ1Y3R1cmluZyBwbGFucywgb3IgYSByZWFsaXphdGlvbiB0aGF0IGl0cyBjb3JlIGJyYW5kcywgTWVyY2VkZXMgQmVueiBhbmQgQ2hyeXNsZXIsIG5lZWQgYW5kIGRlc2VydmUgbW9yZSBhdHRlbnRpb24gYW5kIG1vbmV5LCBjYW4ndCBiZSBzYWlkIGZvciBzdXJlLiAKSGUgYWxzbyBtYWRlIGEgc3RhdGVtZW50IG9ubGluZSBhZnRlciByZWNlcHRpb24gdG8gdGhlIHBob3RvIHNwcmVhZCBmYXN0IGJldHdlZW4gZnJpZW5kcyBhbmQgc3RyYW5nZXJzLgpXaGF0IE9uVGhpbmdzIHRvIGRvRm9vZCBhbmQgRHJpbmtUaGVhdHJlIGFuZCBBcnRzVFYgR3VpZGVBIHN0b3JtIHdhcyBvbiB0aGUgaG9yaXpvbiB3aGVuIEphbWVzIFNoYXcgYW5kIGhpcyB0ZWFtIHdlcmUgZHJpdmluZyBiYWNrIGZyb20gQmVuYWxsYSBvbiBOb3ZlbWJlciAzLCAyMDE1LCBjZWxlYnJhdGluZyBhIHdpbiByZXByZXNlbnRpbmcgdGhlIEFsYnVyeSBXb2RvbmdhIEVpZ2h0IEJhbGwgQXNzb2NpYXRpb24uIExhdGVyIHRoYXQgZGF5LCBKYW1lcyB3YXMgYXQgaGlzIHBhcnRuZXIncyBob3VzZSB3aGVuIGhpcyBicmVhdGhpbmcgYmVnYW4gdG8gd2FuZSwgYSBmZWVsaW5nIGZhbWlsaWFyIHRvIHRoZSBsaWZlIGxvbmcgYXN0aG1hIHN1ZmZlcmVyLiAKV2FzIHdpdGggcmVzcGVjdCB0byB3aGV0aGVyIHRoZSBPTEcgd291bGQgcmVzcGVjdCBvdXIgbGltaXQgb2YgMjEgdGFibGUgZ2FtZXMgYW5kIDEsMjUwIG1hY2hpbmVzLCBoZSBzYWlkIHRoZW4uIApXYWdhc2t5LCAyOSwgbGl2ZXMgd2l0aCBoZXIgaHVzYmFuZCBKYXNvbiwgMzIsIGFuZCB0aGVpciB0d28geW91bmcgY2hpbGRyZW4gYWdlcyA5IGFuZCA3LCBpbiBhIHRocmVlIGJlZHJvb20gZmFtaWx5IGhvbWUgaW4gSGVuZGVyc29uLCBOZXZhZGEuIEJpbGwuCkEgYml0IHNsb3dlcgpTaGUgd2FudHMgbGlmZSBleHBlcmllbmNlIHdoaWNoIGRvIG5vdCBhbGlnbiB3aXRoIG15IG93bi4gCkkgZmVsdCBlbGF0ZWQgYW5kIGEgbmV3IGZvdW5kIHNlbGYgY29uZmlkZW5jZSB0aGF0IGkgY291bGQgcnVuIDIwIG1pbGVzIGluIGFueSBkaXJlY3Rpb24gaWYgaSBuZWVkZWQgdG8uIFRoYXQgam95IHdhcyBzdHJvbmdlciB0aGFuIHRoZSBwYWluIGluIG15IGZlZXQgYW5kIGhlYXZ5IGxlZ3MsIGlmIGFueXRoaW5nIHRoZSBwYWluIHJlbWluZGVkIG1lIG9mIG15IHJlY2VudCBpbnZpbmNpYmlsaXR5LiBJbnRlcmVzdGluZ2x5IGF0IHRoYXQgdGltZSBJIG5ldmVyIHdhbnRlZCB0byBlYXQgYSB0b24gb2YgZm9vZCBhZnRlciBhIGxvbmcgcnVuIGJ1dCB0aGUgbmV4dCBkYXkgSSB3YXMgZmFtaXNoZWQuIApNb3N0IHBlb3BsZSB3aGlsZSBwcmVmZXIgU2VwYXJhdGlvbiAoVGFpd2FuIGlzIGl0cyBvd24gY291bnRyeSkgaXQgZG9lc24gZmFsbCBpbnRvIG91ciBsb2NhbCBkZWZpbml0aW9uIG9mIHBybyBzZXBhcmF0aW9uLiAKVGhlIFVTIGRvdWJsZWQgZG93biBvbiBhIHdhciBlZmZvcnQgYWxyZWFkeSBhYmFuZG9uZWQgYnkgYSBjb2xsYXBzaW5nIEZyZW5jaCBjb2xvbmlhbCBlbXBpcmUuIFRoZSB3b3JsZCBoYWQgY2hhbmdlZCwgYnV0IHdlIHdlcmUgc3RpbGwgZXhlcnRpbmcgY29udHJvbCBvdmVyIGZvcm1lciBjb2xvbmlhbCBzdWJqZWN0cy4gCk9zdGVvcGF0aGljIHNjaG9vbHMgYXJlIGdlbmVyYWxseSBsZXNzIHNlbGVjdGl2ZSwgc28gdGhlIGF2ZXJhZ2Ugc2NvcmVzIHdpbGwgYmUgYWZmZWN0ZWQgYnkgdGhpcy5UaGlzIGlzIG5vIHdheSBpbmRpY2F0ZXMgdGhlIGRpZmZlcmVuY2VzIGluIHRyZWF0bWVudCBxdWFsaXR5IG9mIGluZGl2aWR1YWwgTURzIGFuZCBET3MsIGhvd2V2ZXIuIE5vdCBvbmx5IGFyZSB0cmVuZHMgaXJyZXNwZWN0aXZlIHRvIGluZGl2aWR1YWxzLCBidXQgYm9vayBhbmQgcGVuY2lsIHRlc3Qgc2NvcmVzIGFyZSBub3QgYSBncmVhdCBpbmRpY2F0b3Igb2YgcmVhbCB3b3JsZCBwcmFjdGljZS5JZiB5b3UgaW4gdGhlIG1lZGljYWwgZmllbGQsIHlvdSBiZXN0IGVkdWNhdGUgeW91cnNlbGYgYW5kIGdldCB1c2VkIHRvIERPcy4gSW4gMjAyMCwgYWxsIHJlc2lkZW5jaWVzIGJldHdlZW4gRE8gYW5kIE1EIGFyZSBtZXJnaW5nIGludG8gb25lIHBvb2wgYW5kIG9zdGVvcGF0aGljIHNjaG9vbHMgYXJlIGdhaW5pbmcgbW9yZSByZWNvZ25pdGlvbi5NYXJ0aWFuUmFwdG9yICAyIHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ29TZWVtcyBsaWtlIHlvdSBkcm9wcGluZyBhIHRvbiBvZiBoaW50cywgYW5kIHNoZSBpc24gcGlja2luZyB1cCBvbiB0aGVtIGJlY2F1c2Ugc2hlIGRvZXNuIHdhYWFhYWFudCB0by4gClRoZSBHZW5lcmFsIERhdGEgUHJvdGVjdGlvbiBSZWd1bGF0aW9uLCBHRFBSLCB3ZW50IGludG8gZWZmZWN0IGluIEV1cm9wZSB0aGlzIHllYXIgYW5kIGZ1bmRhbWVudGFsbHkgY2hhbmdlZCBob3cgbWFya2V0ZXJzIGNvbGxlY3QgYW5kIHVzZSBkYXRhIGZvciB0YXJnZXRlZCBhZHZlcnRpc2luZy4gCllvb25naSBpcyBpbiBteSBkcmVhbXMgbW9zdCBvZnRlbiAoc3RpbGwgbm90IG9mdGVuIHBlciBzZSksIGFuZCBoZSBhbHdheXMgdGhpcyBzcGVjaWZpYyBraW5kIG9mIGNoYXJhY3Rlci4gVGhlcmUgdXN1YWxseSBhIHNlbnNlIG9mIG5lZWRpbmcgdG8gcHJvdGVjdCBoaW0gd2hpbGUgYmVpbmcgaW4gYXdlIG9mIGhpbSwgbGlrZSBhIGxpdHRsZSBicm90aGVyIEkgZG9uIGVudGlyZWx5IGNvbXByZWhlbmQuIENvbnNjaW91c2x5IEkgZG9uIHJlY29nbmlzZSBxdWl0ZSB0aGF0IGtpbmQgb2YgdmlldyBvZiBoaW0sIGJ1dCBpdCBpbnRlcmVzdGluZyB0byB0aGluayBhYm91dCBhbmQgd29uZGVyIHdoeSBteSBzdWJjb25zY2lvdXMgcG9ydHJheXMgaGltIHRoYXQgd2F5LgpJbiBvcmRlciB0byBpbXByb3ZlIG92ZXJhbGwgc3Vydml2YWwsIG5vdmVsIHRyZWF0bWVudCBzdHJhdGVnaWVzIHRoYXQgYXJlIGJhc2VkIHVwb24gc3BlY2lmaWMgbW9sZWN1bGFyIG1lY2hhbmlzbXMgdGhhdCBwcm9sb25nIHRoZSBhbmRyb2dlbiBkZXBlbmRlbnQgc3RhdGUgYW5kIHRoYXQgYXJlIHVzZWZ1bCBmb3IgYW5kcm9nZW4gaW5kZXBlbmRlbnQgZGlzZWFzZSBuZWVkIHRvIGJlIGlkZW50aWZpZWQuClF1ZXN0aW9ucyB3ZSBtdXN0IGFzayBvdXJzZWx2ZXMuIApXaGlsZSBoZSBoYXZlIGRhZGR5IGRhdWdodGVyIHRpbWUgd2l0aCB0aGUgdGhpZWYsIHlvdSBjYW4gYmUgZW5qb3lpbmcgYSBuaWNlIGdsYXNzIG9mIGFkdWx0IGJldmVyYWdlIHdoaWxlIHNvYWtpbmcgaW4gdGhlIHR1Yi4gClRoZSByZXBvcnQgY29udGFpbnMgbnVtZXJvdXMgcmVjb21tZW5kYXRpb25zIGZvciB0aGUgaGVhbHRoIGNhcmUgYW5kIHNvY2lhbCBzZWN0b3JzLCBpbmNsdWRpbmcgZ2l2aW5nIGRpc2FibGVkIHBlb3BsZSBhIG1vcmUgcHJvbWluZW50IHZvaWNlIGluIHRoZWlyIG93biBjYXJlLCBlc3RhYmxpc2hpbmcgbW9yZSBzdXBwb3J0cyB0byBrZWVwIHBlb3BsZSBvdXQgb2YgbG9uZyB0ZXJtIGNhcmUgZm9yIGxvbmdlciwgYW5kIHNldHRpbmcgdXAgcmV2aWV3cyBpbiBlYXJseSBtb3J0YWxpdHkgY2FzZXMgdG8gZGV0ZXJtaW5lIHRoZSBjYXVzZXMuCkRvIHlvdSBtZWFuIEthdGllPyBqdXN0IGdvdCBhIHBob25lIGNhbGwgZnJvbSBoZXIuIAoiVGhleSBhbHdheXMgaGF2ZSBhIHN1aXRlIGF0IEFWTiwgYW5kIGl0J3MgcmVhbGx5IG5pY2UuIApBbGxvd3Mgc3BvcnRzIGJldHRpbmcgaW4gbW9yZSBzdGF0ZXMsIGl0IHdvdWxkIGJlIHRoZSBvbiB0aGUgY2FrZSBmb3IgdGhlIGNvbWJpbmVkIGNvbXBhbmllcywgYWNjb3JkaW5nIHRvIFNpbW9uIEhvbGxpZGF5LCBmb3VuZGVyIG9mIHRoZSByZXNlYXJjaCBmaXJtIEgyIEdhbWJsaW5nIENhcGl0YWwuIApZZXMgYmVoYXZpb3JhbCBtYW5hZ2VtZW50IG1heSBoYXZlIGJlZW4gYW4gYWx0ZXJuYXRpdmUsIGFzIHdlbGwgYXMgZW52aXJvbm1lbnRhbCBlbnJpY2htZW50IG9yIG1lZGljYWwgdGhlcmFweSwgYnV0IG1heWJlIGNvbnNpZGVyIHRoaXMgbWF5IGhhdmUgYmVlbiB0cmllZCB3aXRoIGxpdHRsZSB0byBubyBzdWNjZXNzPyBUcnVzdCBtZSB0aGF0IHlvdSdyZSBtYWtpbmcgdGhpcyBzZWVtIGFzIGEgdmVyeSBzaW1wbGUgcHJvYmxlbSB0byBmaXggd2hlbiBpdCBpbiBtYW55IGNhc2VzIGNhbiBiZSB0ZXJyaWJseSBkaWZmaWN1bHQgdG8gc29sdmUgYW5kIGZydXN0cmF0aW5nIGFuZCBkZXByZXNzaW5nIGZvciBjbGllbnRzIGFuZCB0aGVpciBsb3ZlZCBmdXp6eSBmYW1pbGllcy4uIAoiWW91bmcgcGVvcGxlIGhhZCBhbHdheXMgYmVlbiBhIG1pbm9yaXR5IG9mIG91ciBjbGllbnRzLCIgc2FpZCBEciBDaHJpc3RvcGhlciBIdW50LCBjbGluaWNhbCBwc3ljaG9sb2dpc3QgYXQgdGhlIGNsaW5pYy4gIkJ1dCB3aGF0IHdlIGFyZSBmaW5kaW5nIGlzIHRoYXQgb3ZlciB0aGUgcGFzdCBmZXcgeWVhcnMgdGhleSBoYXZlIGJlZW4gb25lIG9mIG91ciBtb3N0IHJhcGlkbHkgZXhwYW5kaW5nIGNsaWVudCBncm91cHMuIFRoZSBudW1iZXJzIGFyZSBncm93aW5nIG11Y2ggZmFzdGVyIHRoYW4gb3VyIGdlbmVyYWwgY2xpZW50IG51bWJlcnMsIGFuZCB3ZSBhcmUgb24gdHJhY2sgdG8gaGF2ZSBldmVuIGxhcmdlciBudW1iZXJzIG9mIHlvdXRoIGdhbWJsZXJzIGNvbWluZyB0aHJvdWdoIG91ciBkb29ycyB0aGlzIHllYXIuIi4gCk9uZSB3YXkgdG8gdW5kZXJzdGFuZCB0aGlzIGlzIHRvIHBpY3R1cmUgdGltZSBhcyBhbiBpbmZpbml0eSBzeW1ib2wsIG9yIGFuIGhvdXJnbGFzcyBvciB0aGUgbnVtYmVyICI4IiBsYWlkIG9uIGl0cyBzaWRlLiAKMS4gRG8gbm90IHN0YXJ0IGRyaW5raW5nIHdoZW4geW91J3JlIHRoaXJzdHkKIkhlJ3MgbW9yZSBjb25jZXJuZWQgd2l0aCB0aGUgdmljdGltcyAuIHRoYW4gd2hhdCBoZSBoYXMgZG9uZS4iCkkndmUgY3JpZWQgb3ZlciBteSBwYXRpZW50cyBtYW55IHRpbWVzLiBCbHVlLCB3aG8gYmVjYW1lIHNlcHRpYyBhZnRlciBzdXJnZXJ5IGFuZCBmb3IgNCBkYXlzIGhpcyB3b25kZXJmdWwgZGFkcyBmb3VnaHQgd2l0aCB1cyB0byBrZWVwIGhpbSBhbGl2ZS4gCkNvYWNoZXMgZGlkbiB0aGluayBpdCB3YXMgcXVpdGUgYXMgaHVtb3Vyb3VzLCBidXQgKHRoZSBKZXRzIHBsYXllcnMpIGVuam95ZWQgaXQuIApCeSAxODkyLCBwcm9taW5lbnQgQnJ1c2ggY2l0aXplbiBXaWxsaWFtIEtuZWFybCBsYWlkIGNsYWltIHRvIHRoZSBsYW5kIGFuZCBjb25zdHJ1Y3RlZCB1cG9uIGl0IGEgdHdvIHN0b3J5IGJyaWNrIGJ1aWxkaW5nLCB0aGUgZm91cnRoIHRvIGJlIGJ1aWx0IGluIGFsbCBvZiBCcnVzaC4gS25lYXJsIHJlY2VpdmVkIGEgbGVnYWwgbm9kIHNvb24gYWZ0ZXIgdG8gaG9zdCBhIHBvc3Qgb2ZmaWNlIHdpdGhpbiwgYWxvbmcgd2l0aCBhbiBhcnJheSBvZiBvdGhlciBtZXJjaGFudHMnIHNob3BzIHRoYXQgc2V0IHVwIHdpdGhpbiB0aGUgaGlzdG9yaWMgd2FsbHMgdGhyb3VnaG91dCB0aGUgeWVhcnMuLiAKTWFrZSBzdXJlIHNoZSBoYXMgUEVRcyBvbiBpZiBzaGUgZ29pbmcgaW4gYXQgbmlnaHQuIApMZXQgbWUga25vdyB3aGF0IGVsc2UgaXMgZ29vZCBmb3IgdGhvc2UgdHdvIGNvbnNvbGVzLiBTaGUgYW5kIGhlciBsb25nIGxvc3QgYmVzdCBmcmllbmQgaGF2ZSB0byB0cnkgdG8gcHJldmVudCBpdCBmcm9tIGNvbWluZyB0byBwYXNzIHdoaWxlIHNlYXJjaGluZyBmb3IgYSBtaXNzaW5nIGdpcmwgd2hvIG1heSBvciBtYXkgbm90IGJlIGNvbm5lY3RlZCB0byB0aGUgU3Rvcm0uLiAKVGhlIGp1c3RpY2Ugc3lzdGVtIHdvcmtlZCBhcyBpdCBzaG91bGQuIApJdCBoYXJkIGZvciB3b21lbiB0byBkbyBiZWNhdXNlIHdlIG9mdGVuIGhvbGQgaW4gb3VyIHR1bW1pZXMuIEkgZm91bmQgaXQgaGVscGZ1bCB0byBsYXkgb24gbXkgYmFjaywgcHV0IGEgMTAgcGxhdGUgb24gbXkgbG93ZXIgYmVsbHksIGFuZCBwcmFjdGljZSBicmVhdGhpbmcgaW50byBteSBzdG9tYWNoLiAKSSBsZWFybmVkIHNvbWUgc2ltcGxlIHN0aXRjaGVzIGFuZCBjb29raW5nIHNraWxscyBmcm9tIG15IG1hdHJpYXJjaHMsIHRoZW4gSSBzdGFyZWQgZG9pbmcgbXkgb3duIHJlc2VhcmNoLiAKSmUgc291aGFpdGUgc2ltcGxlbWVudCBmYWlyZSBwYXJ0YWdlciBtb24gdG9ubmVtZW50ICB1bmUgcXVlc3Rpb24gcXVlIGonYWkgcG9zICBub3RyZSBndWlkZSBwZW5kYW50IGNlIHZveWFnZS4gSidhaSBzb3VoYWl0IGNvbm5hdHJlIGxhIHBvc2l0aW9uIGRlcyBjaXRveWVucyB0dXJjcyBjb21wdGUgdGVudSBkZSBsYSBwb3NpdGlvbiBkZXMgcGF5cyBldXJvcGVucyBhaW5zaSBxdWUgZGUgbCdVbmlvbiBFdXJvcGVubmUgYXUgcmVnYXJkIGRlIGxhIGRlbWFuZGUgZCdhZGhzaW9uIGRlIGxldXIgdGF0LiAKVGhlIG9ubHkgb3RoZXIgYnVzZXMgSSBjb3VsZCBmaW5kIGxlYXZlIGZyb20gdGhlIGFpcnBvcnQuIApLaXJrIEtpbnNlbGwsIElIRyBwcmVzaWRlbnQgZm9yIEV1cm9wZSwgTWlkZGxlIEVhc3QgYW5kIEFmcmljYSwgc2FpZDogIk5vdyBpcyBhbiBpZGVhbCB0aW1lIGZvciB1cyB0byBjb250aW51ZSB0byBncm93IHRoZSBIb3RlbCBJbmRpZ28gYnJhbmQgYW5kIE1hZHJpZCB3YXMgdG9wIG9mIG91ciBsaXN0IGZvciBleHBhbmRpbmcgdGhlIGJyYW5kIGludG8gQ29udGluZW50YWwgRXVyb3BlLiBNYWRyaWQgaXMgYW4gZXhjaXRpbmcsIHZpYnJhbnQgY2l0eSBhbmQgYSB0aHJpdmluZyB0b3VyaXN0IGFuZCBidXNpbmVzcyBkZXN0aW5hdGlvbiwgbWFraW5nIGl0IGlkZWFsIGZvciBIb3RlbCBJbmRpZ28gZ3Vlc3RzLiBXZSBsb29rIGZvcndhcmQgdG8gc2lnbmluZyBtb3JlIEhvdGVsIEluZGlnbyBwcm9wZXJ0aWVzIGluIGNpdGllcyBhY3Jvc3MgRXVyb3BlLiIKSSBoYXZlIGEgdGVhbSBvZiBzcGVjaWFsaXN0IGRvY3RvcnMgYWxsIHN1cHBvcnRpbmcgbXkgcGFpbiByZWxpZWYgc28gdGhhdCBhdCBsZWFzdCBvbmUgbGVzcyB0aGluZyB0byB3b3JyeSBhYm91dC4gVGhleSBwcmVzY3JpYmUgdGhlbSB0aHJvdWdoIG15IGdlbmVyYWwgcHJhY3RpY3RpdGlvbmVyIGFuZCBJIGNhbiBnZXQgdGhlbSB3aXRoIGp1c3QgYSBwaG9uZSBjYWxsIG9uY2UgYSBtb250aC4KV2hhdCBpcyB0aGUgQ2FyZWVyIERlc2NyaXB0aW9uIG9mIGEgUGVyc29uYWwgVHJhaW5lcj8KSXQgYSBqb2tlLiAKVGhlIHBlcnNvbiBJIHdhcyByZWZlcnJpbmcgdG8gd2FzIEhhbGRlci4gRGllbHMgd2FzIGFsc28gaW1wcmlzb25lZCBhZnRlciBwYXJ0aWNpcGF0aW5nIGluIGFuIGFzc2Fzc2luYXRpb24gYXR0ZW1wdCBvZiBIaXRsZXIuIApUaGF0J3Mgd2h5IENsdWJXUFQgb2ZmZXJzIEZyZWUgVHJpYWwgcHJvbW90aW9uLiBUaGlzIGFydGljbGUgd2lsbCB0ZWxsIHlvdSBldmVyeXRoaW5nIGFib3V0IHRoaXMgcHJvbW8gYW5kIHlvdSB3aWxsIGZpbmQgb3V0IGhvdyB0byBiZW5lZml0IGZyb20gaXQuLiAKU3VwZXJtYXJrZXRzIHRvZGF5IGNvbnRhaW4gd2FsbHMgb2Ygd2hlYXQgYW5kIGNvcm4gZGlzZ3Vpc2VkIGluIGxpdGVyYWxseSBodW5kcmVkcyBvZiB0aG91c2FuZHMgb2YgZGlmZmVyZW50IGZvb2QgIGxpa2UgcHJvZHVjdHMsIG9yIEZyYW5rZW5Gb29kcy4gRWFjaCBBbWVyaWNhbiBub3cgY29uc3VtZXMgYWJvdXQgNTUgcG91bmRzIG9mIHdoZWF0IGZsb3VyIGV2ZXJ5IHllYXIuLiAKSSBhc2sgaGVyIHdoYXQgd3JvbmcgYW5kIHNoZSBzYXlzIHRoYXQganVzdCBiZWZvcmUgc2hlIHdhbGtlZCBvdXQgb2YgdGhlIGhvdXNlIHNoZSB0aG91Z2h0IEkgd2FzIHN0aWxsIGluc2lkZSBzbyBzaGUgeWVsbGVkIHVwIHRoZSBzdGFpcnMgIjFMVF8wYnZpb3VzLCB3ZSBsZWF2aW5nISIgYW5kIGFwcGFyZW50bHkgIkkiIHllbGxlZCBiYWNrICJPa2F5IEkgYmUgZG93biBpbiBhIG1pbnV0ZSEiLiAKU1MgQ2x1YiBjaGllZiBleGVjdXRpdmUgb2ZmaWNlciBUaW0gTGV2ZXNxdWUgc2FpZCB0aGUgY2x1YiB3YXNuJ3QgdW5kZXIgaW1tZWRpYXRlIHRocmVhdCwgYnV0IGl0IHdhbnRlZCB0byBvZmZsb2FkIHRoZSBsaWNlbmNlcyBhcyBxdWlja2x5IGFzIHBvc3NpYmxlLiAKRmFpcmUgbGUgcGx1cyBwZXRpdCBlZmZvcnQgcG91ciBsZSBwbHVzIGdyYW5kIGNoYW5nZW1lbnQ5LiBMZSBwcm9ibG1lIGVzdCBsYSBzb2x1dGlvblBsdXMuIApJZiB0aGV5IGNob29zZSB0byByZW1haW4gd29ya2luZyB0aGVyZSAoYXNzdW1pbmcgdGhleSBldmVuIGhhdmUgdGhhdCBvcHRpb24pLCBJIHN1cmUgdGhlaXIgd29ya2luZyBjb25kaXRpb25zIGhhdmUgZ29uZSBkb3duIChvciB3aWxsIHNvb24gZ28gZG93bikgdGhlIHRvaWxldC4gCkZvciBVc2VyIFByb3ZpZGVkIENvbnRlbnQsIHdlIGFyZSBtZXJlbHkgaG9zdGluZyBhbmQgcHJvdmlkaW5nIGFjY2VzcyBhcyB3ZWxsIGFzIHByb3ZpZGluZyB0b29scyB0byBwb3N0IGFuZCBzaGFyZSBjb250ZW50LCBhbmQgd2UgY2Fubm90IGFjY2VwdCBhbnkgbGlhYmlsaXR5IHdpdGggcmVnYXJkIHRvIHN1Y2ggbWF0ZXJpYWwgKGluY2x1ZGluZyB3aXRoIHJlc3BlY3QgdG8gaXRzIGFjY3VyYWN5KS4gV2hpbGUgd2UgY2Fubm90IHByZXZpZXcgb3IgbW9uaXRvciB0aGUgVXNlciBQcm92aWRlZCBDb250ZW50LCB3ZSBtYXkgYXBwbHksIGF0IG91ciBkaXNjcmV0aW9uLCBhdXRvbWF0ZWQgZmlsdGVyaW5nIHRvb2xzIG1vbml0b3IgYW5kL29yIGRlbGV0ZSBhbnkgY29udGVudCB0aGF0IFdvcmxkIEFyY2hpdmVzIGJlbGlldmVzIHRvIGJlIGluIHZpb2xhdGlvbiBvZiB0aGlzIEFncmVlbWVudCAoZm9yIGV4YW1wbGUsIHdlIGNvdWxkIHVzZSBhdXRvbWF0ZWQgdG9vbHMgdG8gc3VwcHJlc3Mgb2JzY2VuZSBjb250ZW50KS4gClRoZSB0aGluZyB0byBkbyBpcyB0byBhZ3JlZSwgdHJ5IGFuZCBkbyB3aGF0IGhlIHdhbnRzLCBvciBhdCBsZWFzdCBsb29rIGludG8gaXQsIGZpbmQgdGhhdCBpdCBpcyBpbXBvc3NpYmxlIG9yIGp1c3QgbWFrZSBhIHJlYWwgZWZmb3J0IGFuZCBzaG93IHRoYXQgaXQgaXMgaW1wb3NzaWJsZS4gVGhlbiByZXBvcnQgYmFjayB0byB0aGUgYm9zcyB3aXRoIG5ldyBpbmZvcm1hdGlvbiB0aGF0IHdpbGwgYWxsb3cgdGhlIGJvc3MgdG8gbWFrZSBhICJiZXR0ZXIiIGRlY2lzaW9uLi4gClRoZSB0ZW1wdGF0aW9uIGlzIHRvIGNoYW5nZSB5b3VyIHN0cmF0ZWd5IGlmIHlvdSBsb3NlLiBCdXQgd2hpbGUgaXQgY3JpdGljYWwgdG8gY29uc3RhbnRseSBiZSBtb25pdG9yaW5nIGhvdyB5b3UgZG9pbmcgYW5kIGFkanVzdGluZyB5b3VyIHN0cmF0ZWd5LCB5b3UgZG9uIHdhbnQgdG8gcmVzcG9uZCBpbiBhbiBhZCBob2MgZmFzaGlvbnRvIGFueSBnaXZlbiBzdGltdWx1cy4gQmFzaWNhbGx5LCB5b3UgZG9uJ3QgY2hhbmdlIHlvdXIgc3RyYXRlZ3kganVzdCBiZWNhdXNlIHlvdSBsb3NlLiAKVGFyZ2V0IHRoZSBjdXN0b21lcnMgd2hvIGFyZSBhY3R1YWxseSBpbnRlcmVzdGVkIGluIHlvdXIgc2VydmljZXMuIFdlIGhlbHAgeW91IHRvIHJlYWNoIHlvdXIgdGFyZ2V0IGF1ZGllbmNlLiBXaHkgU2hvdWxkIFlvdSBDaG9vc2UgaWJhY2twYWdlPyBUaGlzIHBhZ2Ugc2hvd3MgaG93IG1hbnkgZ2lybHMgYXJlIGFjdHVhbGx5IG91dCB0aGVyZSBhdmFpbGFibGUgdG8geW91LiAKSGVyIHJlYXNvbmluZywgYXMgYmVzdCBhcyBJIGNhbiB1bmRlcnN0YW5kLCBpcyB0aGF0IGJlY2F1c2Ugc2hlIGlzIGEgZ2VybWFwaG9iZSAoaGVyIHdvcmQpIGFuZCBzaGUgaXMgYWZyYWlkIHRvaWxldCBwYXBlciB3aWxsIHRlYXIgYW5kIGlzIGFmcmFpZCBvZiBnZXR0aW5nIGhlciBoYW5kcyBtZXNzeSBpbiBBTlkgV0FZLiBTaGUgdXNlcyBzb2NrcyBiZWNhdXNlIGl0IGNvdmVycyBoZXIgZW50aXJlIGhhbmQuIApUaGUgYm94aW5nIHJpbmcgaW5zaWRlIGhlciBvZmZpY2UgaXNuJ3QgdGhlcmUgZm9yIG1lcmUgZGVjb3JhdGlvbiBvciBldmVuIGFzIGp1c3QgYSBzdGFnZSBmb3IgUHJvamVjdCBBbGwgSW4uIEFmdGVyIGxlYXZpbmcgdGhlIHNwb3J0IGZvciBzaXggeWVhcnMsIHNoZSBjYW1lIGJhY2sgc29sZWx5IGZpeGF0ZWQgb24gd2lubmluZyBhIHByb2Zlc3Npb25hbCBXb3JsZCBDaGFtcGlvbnNoaXAuIFNvIHdoeSB0aGUgZGVjaXNpb24/IFNoZSBjZXJ0YWlubHkgaGFkIGJ1aWx0IGEgc3VjY2Vzc2Z1bCBidXNpbmVzcy4gClRoZSBNUkkgc2NhbnMgc2hvd2VkIHRoYXQgdGhlIG5vcm1hbCBncm91cCBsb3N0IGFuIGF2ZXJhZ2Ugb2YgMTguNCBjbTMgdG90YWwgYnJhaW4gdm9sdW1lIG92ZXIgdHdvIHllYXJzLiBJbiBjb21wYXJpc29uLCB0aGUgc3RhYmxlIHByZSBkaWFiZXRpYyBncm91cCBsb3N0IDEuNCB0aW1lcyBtb3JlIGJyYWluIHZvbHVtZSAoMjYuNiBjbTMpLgpObyBxdWVzdGlvbiwgdGhpcyBpcyBhIG1vdmluZyBzdG9yeSBhYm91dCBhIGhhcmQgd29ya2luZyBndXkgd2hvIGp1c3QgdHJ5aW5nIHRvIGhvbGQgdGhpbmdzIHRvZ2V0aGVyIGZvciBoaXMgZmFtaWx5LCBpbiBjaXJjdW1zdGFuY2VzIHdoZXJlIHRoZSBsaXR0bGVzdCBzZXRiYWNrIGNvdWxkIHRpcCBoaW0gaW50byB1bmVtcGxveW1lbnQuIApTbyB3aGlsZSBJIG1heSBub3QgaGF2ZSBzZWVuIG1hbnkgcGVvcGxlIGFjdHVhbGx5IHVzaW5nIGEgU29vZmEsIGEgbG90IG9mIHBhc3NlcnMgYnkgc3RvcHBlZCB0byBjaGVjayB0aGVtIG91dCwgYW5kIHRoZWlyIHJlYWN0aW9ucyB3ZXJlIGxhcmdlbHkgcG9zaXRpdmUuIFBlb3BsZSB3ZXJlIGV4Y2l0ZWQgYWJvdXQgdGhlc2UgdGhpbmdzLiAKQWZ0ZXIgdGhhdCBteSBtaWRnYW1lIGFuZCBlbmRnYW1lIGhhcyBzdGlsbCB0byBkbyBhIGxvdCBhbmQgdGhlcmUgdGhlIG1haW4gZGlmZmVyZW5jZSBpcyB0aGF0IEkgaGF2ZSBtb3JlIGV4cGVyaWVuY2UgLyBrbm93IG1vcmUgcGF0dGVybnMgYW5kIGhhdmUgYSBiZXR0ZXIgZXZhbHVhdGlvbiBmb3IgdGhlIHBhdHRlcm5zLiAKVG90YWxseSBhZ3JlZS4gClNhbG1vbiBpcyBwcm9iYWJseSB0aGUgYmVzdCBmaXNoIGZvciBtdXNjbGUsIGJ1dCBpdCdzIG9ubHkgd29ydGggaXQgaWYgaXQgaXMgd2lsZCBzaW5jZSBmYXJtIHJhaXNlZCBpcyBmZWQgZ3JhaW4sIGFuaW1hbCBieXByb2R1Y3RzLCBhbmQgd2hvIGtub3dzIHdoYXQgZWxzZS4gR28gZm9yIGEgdmFyaWV0eSBvZiBjb2xkIHdhdGVyIGZpc2ggYmVjYXVzZSB0aGV5IGFyZSBoaWdoIGluIG9tZWdhIDMgZmF0cyBmb3IgaW5zdWxpbiBoZWFsdGgsIGhpZ2ggaW4gcHJvdGVpbiwgYW5kIGNvbnRhaW4gdGhvc2UgbXVzY2xlIGJ1aWxkaW5nIG51dHJpZW50cyBsaWtlIGNyZWF0aW5lIGFuZCBjYXJuaXRpbmUuIE1hY2tlcmVsLCBzbWVsdCwgc2hhZCwgcGVyY2gsIHNhcmRpbmVzIGFuZCBhbmNob3ZpZXMgYXJlIHNvbWUgb2YgdGhlIGJlc3QuIEp1c3QgYXZvaWQgYW55dGhpbmcgdGhhdCBjb21lcyBpbiBhIGNhbiBpZiBpdCdzIG5vdCBCUEEgZnJlZSwgYW5kIG9ubHkgZWF0IHdpbGQgZmlzaCBmcm9tIHBsYWNlcyB5b3UgdHJ1c3QuCk9yIGluIHNvbWUgY2FzZXMgSSBuZXZlciBzZWVuIHRoZW0gM2JldC4gClRvIGRvIHRoaXMsIGNsaWNrIG9uIHRoZSB0aXRsZSBpbiB0aGUgbGlzdCBhdCB0aGUgYm90dG9tIG9mIHRoaXMgcGFnZS5PbmNlIHlvdSd2ZSByZWFkIHRoZSBFbnRyeSwgZG9uJ3QgY2xpY2sgb24gU1RBUlQgQSBDT05WRVJTQVRJT04gYXQgdGhlIGJvdHRvbSBvZiB0aGUgZW50cnkuIApQYXIgbyBjb21tZW5jZXI/CkFmdGVyIHB1cmNoYXNpbmcgdGhlIGNvbXB1dGVyLCBteSBkYWQgcmVhbGl6ZSB0aGVyZSB3YXNuIGVub3VnaCByb29tIGluIG91ciB0aW55IGNhciBmb3IgdGhyZWUgY2hpbGRyZW4sIGNhciBzZWF0cywgYW5kIHRoZSBnaWFudCBhc3MgMTk5NyBjb21wdXRlci4gU28gaGUgTEVGVCBVUyBhdCB0aGUgc3RvcmUsIGFwcGFyZW50bHkgdGhpbmtpbmcgdGhhdCBpZiBoZSBib3VnaHQgdXMgYWxsIGNhbmR5IGJhcnMsIHRoYXQgYmUgZW5vdWdoIHRvIGtlZXAgYSA1LCAzLCBhbmQgMiB5ZWFyIG9sZCBvY2N1cGllZCBhbmQgb3V0IG9mIHRyb3VibGUuIApObyBpZGVhIHdoYXQgSSB3YXMgdGhpbmtpbmcuIApBIHRvb3RoYWNoZSBjYXVzZXMgaW5mbGFtbWF0b3J5IHBhaW4sIHNvIGFueSBhbnRpIGluZmxhbW1hdG9yeSBtZWRpY2luZSBzaG91bGQgYmUgYWJsZSB0byByZWR1Y2UgeW91ciBzdWZmZXJpbmcuIApUaGUgc3VzcGVjdCAoMjYgeWVhciBvbGQgV00pIGZsZWQgcHJpb3IgdG8gYXJyaXZhbCBvZiBvZmZpY2VycyBidXQgd2FzIGxvY2F0ZWQvYXBwcmVoZW5kZWQuIApBIHByZSBwcmludGVkLCBlYXNpbHkgbGVnaWJsZSwgYW5kIHRvdGFsbHkgY29udmVuaWVudCBtZXRob2Qgb2YgY2FycGV0Ym9tYmluZyBwZW9wbGUgd2l0aCByYW5kb20gY29tZSBvbnMuIApTYW5kZXJzLCBBT0MsIGFuZCB0aGUgbGlrZSwgc3VyZSAodGhvdWdoIFNhbmRlcnMgYWxzbyBpc24gYSBEZW1vY3JhdC4pLCBidXQgbm90IG1vc3Qgb2YgdGhlIHBhcnR5LiAKSnVzdCBldmVyeXRoaW5nIGF0IHRoZSB3YWxsIHdhcyBncmVhdCwgYW5kIEhhcmRob21lIHdhcyBteSBmYXZvcml0ZSBlcGlzb2RlIG9mIHRoZSBzZXJpZXMuIApUaGVyZSBhcmUgbm93IHNldmVyYWwgZm9ybXMgb2Ygc3RpbXVsYXRpb24sIHRoZSBhYmlsaXR5IHRvIGNvbWJpbmUgdGhlc2Ugd2l0aCBvdGhlciBtZXRob2RzLCBhbmQgZXRoaWNhbCBxdWVzdGlvbnMgdGhhdCBhcmUgc3BlY2lhbCB0byBicmFpbiBzdGltdWxhdGlvbi4gCllvdSBjYXRjaCBhIGdsaW1wc2Ugb2YgeW91cnNlbGYgaW4gdGhlIG1pcnJvciBhbmQsIHdoYXQgaXMgdGhhdCwgYSBwaW1wbGU/IENoYW5jZXMgYXJlIGdvb2QgaXQgaXMgICBhbiBlc3RpbWF0ZWQgMTcgbWlsbGlvbiBvZiB5b3VyIGZlbGxvdyBBbWVyaWNhbnMgYXJlIGFsc28gc2NydXRpbml6aW5nIGFjbmUgaW4gdGhlaXIgbWlycm9ycyBbc291cmNlOiBOZW1vdXJzXS4gQnV0IGxvb2sgYSBsaXR0bGUgY2xvc2VyIGF0IHRoYXQgcmVkIHNwb3QgICBpdCBtYXkgbm90IGJlIGEgcGltcGxlIGF0IGFsbCwgYnV0IHJhdGhlciByZWQsIGluZmxhbWVkIHNraW4uIElmIHlvdSBzdWZmZXIgZnJvbSByZWQgYmxvdGNoZXMgb24geW91ciBmYWNlLCB5b3UgbWlnaHQgYmUgdGVtcHRlZCB0byBibGFtZSBpdCBvbiB0aGUgZWx1c2l2ZSBjb25kaXRpb25zIG9mIHNlbnNpdGl2ZSBza2luIGFuZCBjb3ZlciB1cCB5b3VyIHNraW4ncyBibG90Y2h5IGFwcGVhcmFuY2Ugd2l0aCBtYWtldXAsIGJ1dCBkbyB5b3VyIHNraW4gYSBmYXZvciBhbmQgaHVudCBkb3duIHRoZSByZWFzb24geW91ciBza2luIGlzIHJlZCB0byBiZWdpbiB3aXRoLi4gClRoZSBwcm9ibGVtIHdpdGggdGhpcyBpcyB0aGF0IGEgZGlyZWN0IHRyYW5zbGF0aW9uIHdoZW4gaXQgZXZlbiBwb3NzaWJsZSBvZnRlbiBsYWNrcyBjb250ZXh0LiBNb3JlIGJyb2FkbHkgc3BlYWtpbmcsIGFuIHVuYmlhc2VkIHRyYW5zbGF0aW9uIGlzIGltcG9zc2libGUgdG8gYmVnaW4gd2l0aC4KNyBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnby4gCkFsc28sIGRvbid0IHdvcnJ5IHRvbyBtdWNoIGFib3V0IHRoZSBzaG9lcywgYW5kIGRvbid0IHNwZW5kIG1vcmUgdGhhbiAkNjAgZm9yIHN1cmUuIFlvdSBjYW4gYnV5IGEgZGVjZW50IHBhaXIgb2Ygc2hvZXMgZm9yIDQwIDUwJCBmb3IgeW91ciBuZWVkcy4KUHJvZmVzc2lvbmFsIHBva2VyIHBsYXllcnMsIEphaW1lIGFuZCBNYXR0IHN0YXBsZXMgaGF2ZSB3b24gaXQgYmlnLiAKWW91IGNhbiBjaGFuZ2UgdGhlIHNldHRpbmdzIGluIHlvdXIgYnJvd3NlciB0byByZWZ1c2UgY29va2llczsgeW91IGNhbiBhbHNvIGRlbGV0ZSBjb29raWVzIHVzaW5nIHRoZSB0b29scyBpbiB5b3VyIGJyb3dzZXIuIEhvd2V2ZXIgaW4gZG9pbmcgc28geW91IG1heSBiZSB1bmFibGUgdG8gYWNjZXNzIGNlcnRhaW4gZmVhdHVyZSBvZiBvdXIgd2Vic2l0ZSBhbmQgb3VyIHdlYnNpdGVzIG1heSBub3Qgb3BlcmF0ZSBjb3JyZWN0bHkgaW4geW91ciBicm93c2VyLiBJbmZvcm1hdGlvbiBtYXkgYmUgc2hhcmVkIHdpdGggdGhpcmQgcGFydGllcyB3aG8gYXJlIHVuZGVyIGNvbnRyYWN0IHRvIGFjdCBmb3IgdXMuLiAKT25lIGlzIFN0aWxsIHNpbmdsZS4gU3RpbGwgZG9lc24ndCByZWFsaXplIGhlJ3MgYSBqZXJrLiAKVGhleSBhcmUgYm90aCBsYXd5ZXJzIGFuZCB0aGV5IG1ldCBpbiAyMDEzLiAKRWxzZXdoZXJlIGFjcm9zcyB0aGUgc2lkZSBSb29uZXkgd2FzIGluaXRpYWxseSBzaGFycGVyIHRoYW4gaW4gaGlzIGNvbWViYWNrIGFnYWluc3QgVWtyYWluZSBhbmQgbW9yZSBjb21mb3J0YWJsZSBhZ2FpbnN0IEl0YWxpYW4gb3Bwb3NpdGlvbiwgdW50aWwgZmF0aWd1ZSBhZmZlY3RlZCBoaXMgZ2FtZSAoaGUgc2VlbWVkIHJlc3RvcmVkIGJ5IHRoZSBoYWxmIHRpbWUgYnJlYWspLiBUZW4gZ29hbHMgaW4gQ2hhbXBpb25zIExlYWd1ZSBhY3Rpb24gYWdhaW5zdCBTZXJpZSBBIGNsdWJzIHJhaXNlZCBoaXMgY29uZmlkZW5jZS4gUm9vbmV5IHN3ZWV0IGJhY2sgaGVlbCB0byBEYW5ueSBXZWxiZWNrIG9uIDMxIG1pbnV0ZXMgZGVzZXJ2ZWQgYmV0dGVyIHRoYW4gaGlzIE1hbmNoZXN0ZXIgVW5pdGVkIGNvbGxlYWd1ZSBwcm9kLCBoaWdoIGFuZCB3aWRlLgpJbiBmYWN0OyBBa2luZmVud2EgY291bGQgcHJvYmFibHkgZG8gYSBiZXR0ZXIgam9iIHJpZ2h0IG5vdywgc29tZW9uZSBjYWxsIGhpbSBpbiFUaGUgbWFuIGlzIGEgZnVja2luZyBwb2lzb24gdGhhdCBoYXMgcmFuIHRocm91Z2ggdGhlIHZlaW5zIG9mIHRoZSBjbHViLCBhbmQgZXZlcnkgY2x1YiBhcGFydCBmcm9tIEludGVyIHNpbmNlIGhlIHN0YXJ0ZWQsIGFuZCBsZWF2ZXMgY2hhb3MgaW4gaGlzIHdha2UuIApJIG1lYW4sIGl0J3Mgb25lIG9mIHRob3NlIHRoaW5ncyB3aGVyZSB5b3UgYnV5IGEgamFja2V0IGFuZCB3ZWFyIGl0IGZvciA1IDggeWVhcnMgdGhlbiByZXBsYWNlIGl0IGJlY2F1c2UgaXQgZ2V0cyB3b3JuIG91dCwgc2VuZCBpdCBiYWNrIGZvciBhIHJlcGxhY2VtZW50IG9yIGJ1eSBhIGNoZWFwZXIgamFja2V0IGFuZCByZXBsYWNlIGl0IGV2ZXJ5IGZldyB5ZWFycy4gSSBoYXZlIGEgcHVsbG92ZXIgdGhhdCBnb3QgY2F1Z2h0IG9uIHNvbWV0aGluZyBhbmQgbWFkZSBsaXR0bGUgaG9sZXMgaW4gaXQsIGl0J3MgY29zbWV0aWMgYnV0IHRoZXkgcmVwYWlyZWQgaXQgZm9yIG1lLiAKRXZlbiBiYXNpYyBmdW5jdGlvbnMgbGlrZSBtdXRpbmcgdGhlIHBob25lIG9yIHN3aXRjaGluZyB0byBzcGVha2VyIHdlcmUgc28gZnJlYWtpbmcgZWFzeSBiZWNhdXNlIG9mIGhvdyB0aGUgcGhvbmUgY2FsbCBzY3JlZW4gd2FzIHNvIGxhcmdlLCBjbGVhbiwgc2ltcGxlLCBhbmQgYWRhcHRpdmUsIGNoYW5naW5nIHRvIHNob3cgdGhvc2UgZnVuY3Rpb25zIHJlbGF0aXZlIHRvIHdoYXQgeW91ciB3ZXJlIGRvaW5nLiBXZW50IGJhY2sgdGhlIG5leHQgZGF5IGFuZCBib3VnaHQgb25lLiAKV2lubmluZyBhIHNpeCB3YXkgYWxsIGluIG9uIHRoZSBmbG9wIHdoZW4gSSBoYWQgdG9wIHNldCAod2l0aCBwb2NrZXQgNnMpLiBTb21laG93IGEgZmxvcCBvZiAzNTYgZ2F2ZSBFVkVSWU9ORSBhIHBpZWNlLiBCdXQgbHVja2lseSB0aGV5IGFsbCBoYWQgZWFjaCBvdGhlciBzdHJhaWdodCBvdXRzIHNvIGV2ZW4gdGhvdWdoIGl0IHdhcyBzaXggd2F5cywgSSB3YXMgb25seSBmYWRpbmcgYSAyIG91dGVyIGZyb20gYW4gb3ZlciBwYWlyLCBhbmQgcHJvYmFibHkgb25seSA0IG9yIDUgb3RoZXIgY2FyZHMgdG90YWwuIFNpeCB3YXkgYWxsIGluIGFuZCBJIHRoaW5rIGFmdGVyd2FyZHMgSSBmaWd1cmVkIEkgd2FzIDc1JSB0byB3aW4uIEJlY2F1c2UgaXQgaGFwcGVuZWQgc28gZmFzdCBJIGRpZG4gcmVhbGl6ZSBpdCB0aWxsIGFmdGVyIGFuZCBsb29raW5nIGF0IGFsbCB0aGUgY2FyZHMsIGZlbHQgbGlrZSBJIHdhcyBzd2VhdGluZyB0aGUgd29ybGQuCllvdSBoYXZlIHRoYXQgcmlnaHQgaW4gQW1lcmljYS4gCk1hcnkgYW5kIEhlbnJ5IGJvdGhlcmVkIG1lIG1vcmUsIHNpbXBseSBiZWNhdXNlIHNoZSBrZXB0IHNheWluZyBzaGUgZGlkbiBsb3ZlIGhpbSBhbmQgZXZlcnlvbmUgdG9sZCBoZXIgaGUgd2FzIHRoZSBvbmUuIApBbnl3YXksIGhlcmUgaXMgdGhlIHRoaW5nLApBbmQgaXRzIHBhcmVudCwgd2hpY2ggaW5kdXN0cnkgc291cmNlcyBzYXkgaXMgc29yZWx5IGluIG5lZWQgb2YgY2FzaCwgY2FuIGVpdGhlciBkZW1hbmQgdGhhdCBHTSBidXkgRmlhdCBBdXRvIGZsYXQgb3V0IG9yIGdpdmUgaXQgYSBsYXJnZSBwYXltZW50IHRvIGdvIGF3YXkuIlRoZXkncmUgcGxheWluZyBoaWdoIHN0YWtlcyBwb2tlciwiIHNhaWQgRGF2aWQgQ29sZSwgaGVhZCBvZiB0aGUgQ2VudGVyIGZvciBBdXRvbW90aXZlIFJlc2VhcmNoIGluIEFubiBBcmJvciwgTWljaGlnYW4uR00gaW5zaXN0cyB0aGF0IEZpYXQgYnJlYWNoZWQgdGhlIHRlcm1zIG9mIHRoZSBzbyBjYWxsZWQgIm1hc3RlciBhZ3JlZW1lbnQiIGJldHdlZW4gdGhlIHR3byBjb21wYW5pZXMgd2hlbiBpdCBzb2xkIG9mZiBhIDUxIHBlcmNlbnQgc3Rha2UgaW4gdGhlIGZpbmFuY2UgYXJtIG9mIEZpYXQgQXV0by5HTSBzcG9rZXN3b21hbiBUb25pIFNpbW9uZXR0aSByZWl0ZXJhdGVkIHRoYXQgcG9zaXRpb24gdGhpcyB3ZWVrLiAKRW4gZCdhdXRyZXMgdGVybWVzLCByZWNvdXJpciAgY2UgdHlwZSBkZSBwcm9kdWl0IG4nZXN0IHBhcyBkdSB0b3V0IGF2YW50YWdldXguIApBbmQgeW91IGRvbiBuZWVkIHRvIGdldCB0byB5b3VyIGRlc3RpbmF0aW9uIGluIHRoZSBuZXh0IDUgbWludXRlcywgYnV0IHlvdSBkbyBuZWVkIHRvIGRvIHRvZGF5IHdvcmsuIEp1c3QgdG9kYXkgeW91IHN0YXJ0IHRoaW5raW5nIGxpa2UgdGhpcywgeW91IGdvaW5nIHRvIHN0YXJ0IHRvIGRvIHNvbWV0aGluZyBpbmNyZWRpYmxlICAgeW91IGdvaW5nIHRvIHN0YXJ0IHRvIGZlZWwgYmV0dGVyLiAKVGhlIGRpZmZlcmVuY2UgaXMgaW4gYXNzYXVsdCB3aXRoIGEgd2VhcG9uIHZzIGFzc2F1bHQgd2l0aCBhIGRlYWRseSB3ZWFwb24uIApGdWxsLCBpbW1lZGlhdGUgd2l0aGRyYXdhbCBvZiBBbWVyaWNhbiBmb3JjZXMgZG9lcyBub3QgYXBwZWFyIHRvIGJlIGluIHRoZSBjYXJkcy4gT2JhbWEgc2FpZDogIklmIGxlZnQgdW5jaGVja2VkLCB0aGUgVGFsaWJhbiBpbnN1cmdlbmN5IHdpbGwgbWVhbiBhbiBldmVuIGxhcmdlciBzYWZlIGhhdmVuIGZyb20gd2hpY2ggYWwgUWFpZGEgd291bGQgcGxvdCB0byBraWxsIG1vcmUgQW1lcmljYW5zLiBTbyB0aGlzIGlzIG5vdCBvbmx5IGEgd2FyIHdvcnRoIGZpZ2h0aW5nLiBUaGlzIGlzIGZ1bmRhbWVudGFsIHRvIHRoZSBkZWZlbnNlIG9mIG91ciBwZW9wbGUuIgpBcyBjcmF6eSBhcyBpdCBtYXkgc291bmQsIHdoZW4gdGhlcmUgd2VyZSAxMiBwZW9wbGUgbGVmdCwgSSB3YXMgZG9pbmcgd2VsbCBpbiBjaGlwcy4gCkkgd2FubmEgYnVpbGQgdXAgYW5kIGFybXksIHNldCB1cCBkZWZlbnNlcyBvbiBteSB0aW1lLCBub3QgdHJ5IHRvIGxlYXJuIHRvIHNwbGl0IG15IGF0dGVudGlvbiBiZXR3ZWVuIGh1bmRyZWRzIG9mIGRpZmZlcmVudCB0aGluZ3Mgd2hpbGUgSSBuZWVkIHRvIG1lbW9yaXplIGFsbCB0aGUgZnVja2luZyBzaG9ydGN1dHMgc28gSSBjYW4gZG8gNTAwIGRpZmZlcmVudCB0aGluZ3MgYXQgdGhlIHNhbWUgdGltZS4gCklmIHlvdSBiZWVuIHN3aW1taW5nIG9yIGN5Y2xpbmcgb3IgcGxheWluZyBzcXVhc2ggNSBkYXlzIGEgd2VlayBmb3IgdGhlIGxhc3QgMTAgeWVhcnMgYnV0IG5vdCBhY3RpdmVseSBydW5uaW5nLCBhIDY6MzAgbWlnaHQgYmUgZGlzY291cmFnaW5nLi4gCkJlbG93IGlzIHRoZSBleHBsYW5hdGlvbiBvZiB0aGUgY29udGV4dCBvZiBhYnVzZSBydWxlLiBXZSBoYXZlIHRoaXMgcnVsZSBzcGVjaWZpY2FsbHkgYmVjYXVzZSBzdXJ2aXZvcnMgb2YgbmFyY2lzc2lzdGljIGFidXNlIGFyZSBjb25zdGFudGx5IHRvbGQgdGhleSB3cm9uZyBvciBleGhhdXN0aXZlbHkgcXVlc3Rpb25lZCBvbiB0aGVpciBqdWRnZW1lbnQuIApNaWNoYWVsIFcuIDI3IGluIHRoZSBGb3VyIENvcm5lcnMgYXJlYSBpcyBmYWNpbmcgcHJvc3RpdHV0aW9uIGNoYXJnZXMuIApPbmxpbmUgUG9rZXIgYW5kIGFkcmVuYWxpbmUgcnVzaApNeSBDaGlsZHJlbiBhcmUgcHJlY2lvdXMgdG8gbWUsIGFuZCBzcGVuZGluZyBtb25leSBvbiB0aGVtIGlzIG5vdCBhbiBvYmplY3Qgd2hlbiBpdCBjb21lcyB0byB0aGVpciBIZWFsdGggYW5kIFN1Y2Nlc3MuIApTaGUgY2xlYXJseSBoYWQgamVhbG91c3kgaXNzdWVzIGFuZCBkZW1hbmRlZCBhZmZlY3Rpb24gZnJvbSB3aG9ldmVyIHNoZSBjaG9zZS4KVHVja2VkIGludG8gdGhlIGhlYXRoIGNhcmUgYmlsbCBpcyBhIHNlZW1pbmdseSByZWFzb25hYmxlIHRheCBvbiBjb3NtZXRpYyBzdXJnZXJ5LiBJdCBhbiBlYXN5IHRheCB0byBzdXBwb3J0LCBsaWtlIHRheGVzIG9uIGNpZ2FyZXR0ZXMgYW5kIHNvZGFzLiBBZnRlciBhbGwsIGNvc21ldGljIHByb2NlZHVyZXMgYXJlIGNvbXBsZXRlbHkgdW5uZWNlc3NhcnkgdG8gb3VyIGhlYWx0aCwgYnkgZGVmaW5pdGlvbiwgYW5kICBsaWtlIGNpZ2FyZXR0ZXMgYW5kIHNvZGFzICBwb3RlbnRpYWxseSBoYXJtZnVsLiBCdXQgbm9uZSBvZiB0aGVzZSBwcm9kdWN0cyBhcmUgZGlzdHJpYnV0ZWQgZXZlbmx5IGluIHRoZSBwb3B1bGF0aW9uLiBJbiBmYWN0LCB0aGV5IGFsbCB0ZW5kIHRvIGJlIGNvbnN1bWVkIGJ5IHBvb3IgYW5kIHdvcmtpbmcgY2xhc3MgQW1lcmljYW5zIG1vcmUgdGhhbiB0aGUgcmljaCBhbmQgZWR1Y2F0ZWQgb25lcy4gQW5kIHRoZXJlZm9yZSB0YXhpbmcgYW55IG9mIHRoZXNlIHByb2R1Y3RzIGlzIGFsd2F5cyByZWdyZXNzaXZlLCBhIGxhcmdlciBidXJkZW4gb24gdGhlIHBvb3IgdGhhbiB0aGUgcmljaC4KSWwgYSBmb3J0IGJpZW4gcmFsaXMgbW9uIHNvdWhhaXQsIGF2ZWMgdW5lIGRsaWNpZXVzZSBhc3NpZXR0ZSBjb21wb3NlIDogc2FsYWRlIGQnZW5kaXZlcyBhdXggbm9pc2V0dGVzLCBwb2xlIGRlIGNoYW1waWdub25zLCBjYXJvdHRlcywgcG9tbWVzIGRlIHRlcnJlIGF1IHJvbWFyaW4uLiAKWWVzLCBleHBsb3NpdmVzIGFyZW4gbGV0aGFsLCBlc3BlY2lhbGx5IFROVCBpcyBrbm93biBmb3Igbm90IGJlaW5nIGxldGhhbCBhdCBhbGwuIC9zIEl0IHJpY2ggdGhhdCB5b3UgdGhlIG9uZSB1c2luZyB0aGUgd29yZCByZXRhcmRlZCBpbiBhIHZlcnkgbGliZXJhbCBzZW5zZS4KSGUgcGh5c2ljYWxseSBmaWdodHMgYXMgd2VsbCwgYW5kIGhlJ3Mgc3Ryb25nLiAKSXQgaXMgc3VnZ2VzdGVkIHRoYXQgc3RhdGljIHN0cmV0Y2hpbmcgYmUgZG9uZSBhZnRlciBleGVyY2lzZSBhbmQgdGhhdCBhIGxpZ2h0IHdhcm0gdXAgc2hvdWxkIGJlIGRvbmUgYmVmb3JlIGEgd29ya291dC4gCkp1c3QgY2F1c2UgdGhvc2UgcnVsZXMgYXJlbiB0YXVnaHQgaW4gc2Nob29sIGRvZXNuIG1ha2UgZW0gd3JvbmcuIApCcmllZiBpbnRyb2R1Y3Rpb246IE1vcmUgdGhhbiA3MCBvcmlnaW5hbCBpbGx1c3RyYXRpb25zIGFuZCBwaG90b2dyYXBocyB3ZXJlIGRpc3BsYXllZCwgMTUgbmV3IHNwZWNpZXMgYW5kIGxlYWRpbmcgZ3JvdW5kYnJlYWtpbmcgc2NpZW50aWZpYyBzdHVkaWVzIGFuZCBmaWVsZHdvcmsgY2FuIGFsbCBiZSB0cmFjZWQgaW4gdGhlIGJvb2suIFN0ZXZlIEJydXNhdHRlLCBhIHlvdW5nIEFtZXJpY2FuIHBhbGFlb250b2xvZ2lzdCwgbWFzdGVyZnVsbHkgdGVsbHMgdGhlIGNvbXBsZXRlLCBzdXJwcmlzaW5nLCBhbmQgbmV3IGhpc3Rvcnkgb2YgdGhlIGRpbm9zYXVycywgZHJhd2luZyBvbiBjdXR0aW5nIGVkZ2Ugc2NpZW5jZSB0byBkcmFtYXRpY2FsbHkgYnJpbmcgdG8gbGlmZSB0aGVpciBsb3N0IHdvcmxkIGFuZCBpbGx1bWluYXRlIHRoZWlyIGVuaWdtYXRpYyBvcmlnaW5zLCBzcGVjdGFjdWxhciBmbG91cmlzaGluZywgYXN0b25pc2hpbmcgZGl2ZXJzaXR5LCBjYXRhY2x5c21pYyBleHRpbmN0aW9uLCBhbmQgc3RhcnRsaW5nIGxpdmluZyBsZWdhY3kuIApJIGFsc28gZG9uJ3QgZ28gdG8gYSBjaHJpc3RpYW4gc2Nob29sIChpdCBzZWVtcyBsaWtlIHNvbWUgY2hyaXN0aWFucyB0aGluayBwb2tlciBhbmQgZ2FtYmxpbmcgaXMgZnJvbSB0aGUgZGV2aWwpLiAKSWYgdGhlIEJlZXRob3ZlbiBzb3VuZGVkIHRoZWF0cmljYWwsICJQaWN0dXJlcyBhdCBhbiBFeGhpYml0aW9uIiB3YXMgd2lkZSBzY3JlZW4gY2luZW1hc2NvcGUuIFRoaXMgd2FzIGEgYmlnIGFuZCBib2xkIHBlcmZvcm1hbmNlLCB3aXRoIHN0YXJ0bGluZyBqdW1wcyBhbmQgdGhyZWF0ZW5pbmcgbHVyY2hlcyBpbiAiR25vbXVzLCIgY29udHJhc3RlZCB3aXRoIHBsYXlmdWwsIGZsZWV0IGZpbmdlcmVkIGZpbmVzc2UgaW4gdGhlICJCYWxsZXQgb2YgdGhlIENoaWNrcyBpbiBUaGVpciBTaGVsbHMuIiBUaGVyZSB3YXMgYSB0ZW5kZW5jeSB0byBydXNoIHNvbWUgcGhyYXNlcywgd2l0aCBzb21lIGJsdXJyaW5nIG9mIHBhc3NhZ2VzIGFzIGEgcmVzdWx0LiBUaGUgZmluYWwgbW92ZW1lbnQsICJUaGUgR3JlYXQgR2F0ZSBvZiBLaWV2LCIgd2FzIHdvbmRlcmZ1bGx5IG9yY2hlc3RyYWwsIFRzdWppaSBzZWVtaW5nbHkgY29uanVyaW5nIHRoZSBzb3VuZHMgb2YgdW5zZWVuIGdvbmdzLCBiZWxscywgYW5kIGNoaW1lcy4gTU9TRVIgaGFzIGJlZW4gYXJvdW5kIGxvbmcgZW5vdWdoIHRvIGhhdmUgc2VlbiB0aGUgb3JpZ2luYWwgUmFtb25lcyBpbiBhIHNtYWxsIGNsdWIgaW4gTmV3IEplcnNleSwgVTIgZnJvbSB0aGUgZm91cnRoIHJvdyBvZiBhIHRoZWF0ZXIgYW5kIEJvYiBEeWxhbidzIGJvcm4gYWdhaW4gdG91cnMuIEJ1dCBoZSBhbHNvIGhhcyB0aGUgbnVtYmVyIGZvciBBbGwgQW1lcmljYW4gUmVqZWN0cycgTmljayBXaGVlbGVyIG9uIGhpcyBjZWxsIHBob25lLCB3cm90ZSB0aGUgZmlyc3Qgc3RvcnkgZXZlciBkb25lIG9uIEphY2sncyBNYW5uZXF1aW4gYW5kIGh1bmcgb3V0IGluIFdpeiBLaGFsaWZhJ3MgaG90ZWwgcm9vbS4KU29tZW9uZSBib2R5IGxhbmd1YWdlIGFuZCBhdHRpdHVkZSBjbGVhcmx5IGluZGljYXRlIHRoYXQgc29tZXRoaW5nIGlzbiByaWdodC4gVGhleSBvdXR3YXJkbHkgY29tbXVuaWNhdGluZyB0aGF0IHNvbWV0aGluZyBpc24gcmlnaHQsIHRoZXkganVzdCBub3QgdXNpbmcgd29yZHMuIFdoZW4gY29uZnJvbnRlZCBieSBhbm90aGVyIHBlcnNvbiB3aG8gY2FyZXMgYWJvdXQgdGhlbSBhbmQgd2hvIG5vdGljZXMgdGhleSBhc2ssICJhcmUgeW91IG9rPyIgVGhlIGZpcnN0IHBlcnNvbiBzbmFwcyBiYWNrLCAiSSBmaW5lISIgYmVjYXVzZSB0byB0aGVtIGl0IGEgc3R1cGlkIHF1ZXN0aW9uIG9yIHRoZXkgbm90IGluIGEgcGxhY2UgdG8gZGVhbCB3aXRoIHRoZSBlbW90aW9ucyBvciBjb21tdW5pY2F0aW5nIHRoZW0uIApTbyBoZXJlIEkgYW0gdGhpbmtpbmcsIGlmIEkgYXNrIEJpbGwgR2F0ZXMgZm9yICQxOCwwMDAgVVMgZG9sbGFyIGJpbGxzIEkgd29uZGVyIGlmIGhlIHdvdWxkIHNlbmQgaXQgdG8gbWUgbm8gc3RyaW5ncyBhdHRhY2hlZC4gTWF5YmUgT3ByYWggd291bGQ/IFdobyBjb3VsZCBiZSBuYW1lIGRyb3AgYXNraW5nIGZvciBkb25hdGlvbnM/IEkgZG8gcmVzY3VlIGZlcmFsIGNhdHMsIHNwYXkvbmV1dGVyIHRoZW0gd2l0aCBteSBvd24gY2FzaC4gCkVtaWx5IGFuZCBSb2JiaWUgaGF2ZSAkMzgsMDAwIGluIHRoZWlyIGZhbWlseSBSRVNQLiAKSSBkbyB1bmRlcnN0YW5kIHRob3VnaCBJIGhhdmUgYSB3aW5lIGNlbGxhciBhbmQgd2hlbiBJIHF1aXQgZHJpbmtpbmcgSSBhc2tlZCBteSBodXNiYW5kIHRvIGNoYW5nZSB0aGUgbG9ja3MgYW5kIGtlZXAgdGhlIGtleS4gQnV0IHRoYXQgYmVlbiBxdWl0ZSBhIHdoaWxlIGFnbyBub3cgYW5kIEkgZG9uIGhhdmUgdGhlIGNyYXZpbmdzIHRoYXQgSSB1c2VkIHRvICAgQW5kIG1vc3QgdGhlIHRpbWVzIEkgd2FudCB0byBkcmluayBpdCB1c3VhbGx5IGFzc29jaWF0ZWQgd2l0aCBwYXN0IGV4cGVyaWVuY2VzIHdoZXJlIHRoZXJlIGJlZW4gYSBnb29kIHRpbWUgd2l0aCB0aGUgZHJpbmtpbmcgb3IgYSB3aW5ldGFzdGluZy4gCk15IGRhdWdodGVycyBhbmQgSSByZWNlbnRseSBtb3ZlZCB0byBNb250cmVhbC4gCldoZW4geW91IGdldCB6ZXJvIHBvbGl0aWNhbCBjYXBpdGFsIGZyb20gaXQuIFlvdSBnZXQgemVybyByZXR1cm4gZnJvbSB0aGUgb3RoZXIgcGFydHkgYW5kIGFsbCB5b3UgZG8gaXMgaW5jcmVhc2UgcmVwdWJsaWNhbiBwb3dlciB3aGVuIHRoZXkgYXJlIGEgbWlub3JpdHkuLiAKSGUgc2FpZCBoZSBsZWFybmVkIHRvIHBsYXkgbW9yZSBhZ2dyZXNzaXZlbHkgZnJvbSBoaXMgeW91bmdlciBwb2tlciBmcmllbmRzIGluIEhhbGlmYXguLiAKQWZ0ZXJyIGhpcyBMSFcgYW1hemluZyB0b3VyIGhlIGNvdWxkIGhhdmUgYmVlbiB0aGUgYmlnZ2VzdCB0aGluZyBldmVyIGZvciB0aGlzIHNwb3J0LCBoZSBoYWQgc28gbWFueSBmYW5zIHRoYXQgaGUgZ290IHBlb3BsZSBib29pbmcgb3VyIGRhZCBEQy4gCkJ1dCBCaWdnZXJQb2NrZXRzIChlc3BlY2lhbGx5IHRoZSBwb2RjYXN0KSB3YXMgYSBodWdlIGhlbHAgZm9yIG1lIHRvIGp1c3QganVtcCBpbi4gCkZpcnN0LCBhIGNlcnRhaW4gYXJjaGl0ZWN0dXJlIG9mIGJvcmRlcnMgbXVzdCBiZSBidWlsZC4gQnVpbGRpbmdzLCBmbGFnIHBvbGVzIHdpdGggdGhlIEFtZXJpY2FuIGFuZCBDYW5hZGlhbiBmbGFncywgc2VjdXJpdHkgY2FtZXJhcywgYW5kIHJvYWQgYmxvY2tzIG11c3QgYWxsIGJlIHB1dCBpbnRvIHBsYWNlLiAKVGhlIGxhc3QgdGhpbmcgd2Ugd2FudGVkIHRvIGNvdmVyIGFib3V0IHRoZSBEZWFsIFBva2VyIExpa2UgQSBQcm8gcHJvZHVjdCBpcyB0aGF0IGl0IHV0aWxpemVzIGEgcHJvZmVzc2lvbmFsIGRlYWxlciBmb3IgYWxsIHRoZSB2aWRlb3MuIFRoZW4gb2YgY291cnNlLCBzb2Z0d2FyZSwgc2xpZGUgc2hvd3MsIGFuZCBvdGhlciB0b29scyB0byBnaXZlIHlvdSBhIGdyZWF0IG9wcG9ydHVuaXR5IHRvIGJlIHRoZSBiZXN0IGRlYWxlciB5b3UgY291bGQgZXZlciBiZWNvbWUgcG9zc2libGUuIFRoaXMgd2lsbCBnaXZlIHlvdSBhIGNoYW5jZSBhdCBhIG5ldyBjYXJlZXIgbm8gbWF0dGVyIHdoYXQgeW91ciBhZ2UgaXMgdG9kYXkuIEFsbCB5b3UgaGF2ZSB0byBkbyBpcyB0cmVhdCBpdCBsaWtlIHNjaG9vbCBhbmQgeW91IGNvdWxkIHNvb24gZmluZCB5b3Vyc2VsZiBkZWFsaW5nIEhvbGRlbSBhdCB5b3VyIGxvY2FsIGNhc2luby4gUGx1cyBtYWtpbmcgbG90cyBvZiBtb25leSBhbG9uZyB0aGUgd2F5LgpOIEFyeW5nYSwgd2hpY2ggcHJvdmlkZXMgc29mdHdhcmUgZm9yIG92ZXIgdGhlIGFpciBzb2Z0d2FyZSB1cGRhdGVzLgpWaWV3IGEgQ2hpbmVzZSB0cmFuc2xhdGlvbiBvZiB0aGlzIHBhZ2UgaGVyZQpUaGFua3MgZm9yIHRoZSBhbnN3ZXIuIFdlIHdlcmVuIHJlYWxseSBwbGFubmluZyBvbiBicmluZ2luZyBvdXIgY2F0IHdpdGggdXMsIGJ1dCB3ZSB3aWxsIGJlIGdvbmUgZm9yIDIgd2Vla3MgYW5kIGV2ZXJ5b25lIHdobyB3b3VsZCBiZSBhYmxlIHRvIHdhdGNoIGhpbSB3aWxsIGJlIGNvbWluZyB1cCB0byBQQSB3aXRoIHVzLiAKSWYgdGhlIHNvY2lldHkgZGVlbXMgaXQgaW1wb3J0YW50IGVub3VnaCwgdGhlbiB0aGUgc29jaWV0eSB3aWxsIGRpY3RhdGUgd2hhdCB5b3UgZG8gdG8geW91ciBraWRzLiBJbiBvdGhlciBjYXNlcywgdGhlIHNvY2lldHkgd2lsbCBsZWF2ZSB5b3UgZnJlZSB0byBjYXVzZSBhcyBtdWNoIGhhcm0gdG8geW91ciBraWRzIGFuZCBjb2xsYXRlcmFsIGRhbWFnZSB0byBvdGhlciBraWRzIGFzIHlvdSB3aXNoIHRvIGluZmxpY3QuCldlc3RnYXRlLCBDaGFpcm1hbiwgUHJlc2lkZW50IGFuZCBDRU8gb2YgQ2FyZXN0cmVhbS4gIk91ciBmb2N1cyB3aWxsIGJlIG9uIGRlbGl2ZXJpbmcgaW5ub3ZhdGlvbiB0aGF0IGlzIGxpZmUgY2hhbmdpbmcgZm9yIHBhdGllbnRzLCBjdXN0b21lcnMsIGNoYW5uZWwgcGFydG5lcnMsIGNvbW11bml0aWVzIGFuZCBvdGhlciBzdGFrZWhvbGRlcnMgYW5kIHdlIHdpbGwgZ3JvdyB0aGUgY29tcGFueSBmb3IgbG9uZyB0ZXJtIHN1Y2Nlc3MuIi4gCkdvIHRvIGNsaWNrIGEgbWFpbCB0byBsaW5rLiBOb3BlLiBIYXZlIHRvIGhhdmUgYXBwbGUgbWFpbCBpbnN0YWxsZWQuIApJYW46IFBlb3BsZSBpbiBTd2VkZW4gYXJlIGdlbmVyYWxseSB0dW5lZCBpbiB0byBwcmVzZXJ2aW5nIHdoYXQgd2UgaGF2ZSB3aXRob3V0IGdpdmluZyB1cCB0b28gbWFueSBjb21mb3J0cy4gV2hlbiB3ZSB0YWtlIEVtaWxpYSB0byBzY2hvb2wgYXQgdGhlIGJvdHRvbSBvZiB0aGUgaGlsbCwgd2UgZHJpdmUgdG8gdGhlIHN1cGVybWFya2V0IHdoZXJlIHdlIGxlYXZlIHRoZSBjYXIgYW5kIGNhdGNoIHRoZSBidXMgaW50byB0aGUgY2l0eS4gVGhlIGJ1c2VzIGFyZSB2ZXJ5IGNvbWZvcnRhYmxlIGFuZCBhZmZvcmRhYmxlIHNvIGV2ZXJ5b25lIHVzZXMgcHVibGljIHRyYW5zcG9ydGF0aW9uIHdpdGhvdXQgcXVlc3Rpb24uIE1vc3Qgb2YgdGhlIGJ1c2VzIGFyZSBldGhhbm9sIGZ1ZWxsZWQsIGRlcml2ZWQgZnJvbSB3b29kIGluIHRoaXMgY2FzZSwgYW5kIGFwcGFyZW50bHkgY2FuIHJlZHVjZSBjYXJib24gZW1pc3Npb25zIHVwIHRvIDkwIHBlciBjZW50LgpCdXQgSSBjb3VsZG4ndCBnZXQgdG8gaXQgdG9kYXkgYmVjYXVzZSBJIHB1dCBpdCBzb21ld2hlcmUgc3BlY2lhbCBhbmQgSSBmb3Jnb3Qgd2hlcmUgSSBsZWZ0IGl0LiIgQXQgaGVyIHRocm9hdCwgc2hlIGlzIHdlYXJpbmcgYW4gYXVtIHNvbSBuZWNrbGFjZSwgYSBIaW5kdSBzeW1ib2wgdGhhdCByZXByZXNlbnRzIHRoZSBjb21wbGV0ZSB3aG9sZSwgdGhlICJwcmltb3JkaWFsIHZpYnJhdGlvbiIsIGFwcGFyZW50bHkuIApUaGUgc2FkIHRoYXQgY29tZXMgZnJvbSBzb21lb25lIGxvdmVkIG9uZXMga25vd2luZyB0aGlzIGlzIHRoZSBraW5kIG9mIHRoaW5nIHRoZXkgbmVlZCB0byBkbyBpbiBvcmRlciB0byBtYWtlIHRoZWlyIGZyaWVuZCBoYXBweSBmb3Igb25jZS4uIApJIGJhc2ljYWxseSBhc2tpbmcgeW91IHRvIGV4cGxhaW4geW91cnNlbGYuIFlvdSBzYXlpbmcgdGhhdCBoYXZpbmcgeW91ciBwYXBlcnMgcHVibGlzaGVkIHVuZGVyIHRoZSBmbGFnIG9mIGEgR2VybWFuIHVuaXZlcnNpdHkgaW5zdGVhZCBvZiBhIHVuaXZlcnNpdHkgaW4gc29tZSBvdGhlciBjb3VudHJ5IGlzIGEgZ29vZCB0aGluZyBmb3IgdGhlIEdlcm1hbiB0YXhwYXllciwgYnV0IHlvdSBub3QgZXhwbGFpbmluZyB3aHkgaXQgYSBnb29kIHRoaW5nLiAKQSBtYW4gY2F2ZSBpcyB0aGUgb2J2aW91cyBzb2x1dGlvbiwgYW5kIHRoZSBnYW1pbmcgb3B0aW9ucyBmb3IgeW91ciBvd24gcHJpdmF0ZSBzcGFjZSBjYW4gdHJ1bHkgYm9nZ2xlIHRoZSBtaW5kLiAKSWYgeW91IGFyZSBpbnRlcmVzdGVkIGluIHBsYXlpbmcgdmFyaW91cyB0eXBlcyBvZiBwb2tlciwgaXQgaXMgbGlrZWx5IHRoYXQgeW91IGFyZSBpbnRlcmVzdGVkIGluIGhvdyB0byBjaG9vc2UgY2FzaW5vIHBva2VyIGNoaXBzIHRoYXQgYXJlIHJpZ2h0IGZvciB5b3UuIEl0IGlzIGVzc2VudGlhbCB0aGF0IHlvdSBrbm93IGFuZCB1bmRlcnN0YW5kLCByaWdodCB1cCBmcm9udCwgdGhhdCBwb2tlciBjaGlwcyBhcmUgYSBnYW1pbmcgaXRlbSB0aGF0IGFyZSBub3QgY3JlYXRlZCBlcXVhbGx5LiBZb3Ugc2hvdWxkIGxlYXJuIHRoYXQgdGhleSBhcmUgdHlwaWNhbGx5IGNvbXBvc2VkIG9mIGRpZmZlcmVudCBtYXRlcmlhbHMsIGFuZCB2YXJ5aW5nIGFtb3VudHMgYXJlIG5lZWRlZCB0byBwbGF5IHdoZW4gaXQgY29tZXMgdG8gZ3JvdXAgZ2FtaW5nLiAKIkxlb25hcmRvIERpQ2FwcmlvLCBtYXliZSB0aGUgbW9zdCByZWNvZ25pemFibGUgbW92aWUgc3RhciBpbiB0aGUgd29ybGQuIE5vdCBvbmx5IHdhcyBoZSBkZXZhc3RhdGluZ2x5IGhhbmRzb21lLCBoZSB3YXMgaW5jcmVkaWJseSB0YWxlbnRlZCwiIHNoZSB3cml0ZXMuCkZhcm9vcSBTYXR0YXIgYWRkZWQgbW9yZSBmZWFyIGJ5IHNheWluZyB0aGF0IHRoaXMgZ29lcyBvbiBsaWtlIHRoaXMgdGhlIGxhc3QgcmVmdWdlIG9mIFBhcmxpYW1lbnQgbWlnaHQgYmVjb21lIHRoZSBsYXN0IGdyYXZlLiBUaGUgam9rZSBpbiBjaXJjdWxhdGlvbiB3YXMgdGhhdCBzb21lIG1lbWJlcnMgY29udGVtcGxhdGVkIG1vdmluZyBwcmVjaW91cyBpdGVtcyBmcm9tIFBhcmxpYW1lbnRhcnkgTG9kZ2VzIGxlc3QgdGhleSBtaWdodCBub3QgZ2V0IGFub3RoZXIgY2hhbmNlLiAKQWxsIHJlYWwgZXN0YXRlIGlzIGxvY2FsIHRob3VnaC4gSSB0aGluayBmbGlwcGluZyBpcyB0aGUgbW9yZSBzYWZlIHNob3J0IHRlcm0gc3RyYXRlZ3kgYmVjYXVzZSB5b3UgZG9uJ3QgaG9sZCB0aGUgaG91c2UgaXMgdmVyeSBsb25nLiAKSXQgZ2FtZXMgdGhhdCBhcmUgcHVycG9zZWZ1bGx5IGJ1aWx0IHRoZSB3YXkgdG8gYWx3YXlzIGhhdmUgc29tZXRoaW5nIHRvIGRvLiAKVm9pY2kgbGUgcHJvamV0IGRlIGxvaSBwcnNlbnQgZGV2YW50IGwnQXNzZW1ibGUgTmF0aW9uYWxlOgpJdCByZWFsbHkgdGllZCBpbiB0aGUgIk1ha2UgSGFwcHkiIHRpdGxlLgpHZW5lcmFsbHksIHRoZSBraW5kIG9mIHRoZSBjYXJkIGlzIGNvbnRpbmdlbnQgYnkgdGhlIG51bWJlciBvZiBwZW9wbGUgaW5jbGluZWQgdG8gcGxheSBpbiB0aGUgZ2FtZS4gCklmIHlvdSBsb3NlIHR3byByb3VuZHMsIGl0J3MgInR3byBob3JzZXMgb24gbWUveW91IiwgYW5kIHlvdSBoYXZlIHRvIHBheSBmb3IgYWxsIHRoZSBkcmlua3MgdXNlZC4gSWYgZWFjaCBwbGF5ZXIgd2lucyBvbmUgcm91bmQsIHRoZSBzaXR1YXRpb24gaXMgImEgaG9yc2UgYXBpZWNlIiwgYW5kIHRoZSBsYXN0IHJvdW5kIGRlY2lkZXMgdGhlIHdpbm5lci4uIApEZXZhbHVhdGlvbmlzdHMgc2hvdWxkIGJlIHBsZWFzZWQgdGhhdCB0aGUgYm9vc3QgdG8gbWFudWZhY3R1cmluZyBpbmRlZWQgc2VlbXMgdG8gYmUgaGFwcGVuaW5nLiBGYWN0b3J5IGpvYnMgaGF2ZSByaXNlbiAxLjUlIHNpbmNlIGxhc3QgT2N0b2Jlciwgd2hpbGUgaW52ZXN0bWVudCBpbiBtYW51ZmFjdHVyaW5nIGlzIHByb2plY3RlZCB0byByaXNlIGZ1cnRoZXIgaW4gMjAxNC4gSG93ZXZlciwgdGhlcmUgaXMgbm8gc2lnbiB0aGlzIGlzIGJvb3N0aW5nIHRoZSBvdmVyYWxsIGVjb25vbXksIGFzIGJvdGggdG90YWwgZW1wbG95bWVudCBhbmQgYnVzaW5lc3MgaW52ZXN0bWVudCBoYXZlIHN0YWxsZWQuIEFwcGFyZW50bHksIHRoZXJlIGlzIHNvbWV0aGluZyBtb3JlIHRvIGVjb25vbWljIGdyb3d0aCB0aGFuIGp1c3QgcmV2dmluZyB1cCBmYWN0b3J5IG91dHB1dC4gQXQgbGVhc3Qgd2Ugbm8gbG9uZ2VyIGhhdmUgdG8gbGlzdGVuIHRvIHRoZSBhY3JpbW9uaW91cyBhbmQgdGlyZXNvbWUgZGViYXRlIGFib3V0IENhbmFkYSBtYW51ZmFjdHVyaW5nIHNlY3RvciBzdWZmZXJpbmcgZnJvbSBEaXNlYXNlLiBCdXQgd2hhdCBkbyB5b3UgY2FsbCBhbiBlY29ub215IHdoZXJlIG1hbnVmYWN0dXJpbmcgcHJvc3BlcnMgYW5kIHRoZSByZXN0IG9mIHRoZSBlY29ub215IGxhbmd1aXNoZXM/IFBlcmhhcHMgRGlzZWFzZSwgd2hlcmUgZXhwb3J0cyBmbG91cmlzaCBidXQgZG9tZXN0aWMgZGVtYW5kIHJldGFyZHMgZ3Jvd3RoLgpJdCdzIGdldHRpbmcgbGF0ZXIgYW5kIGxhdGVyIGluIHRoZSBhcGFydG1lbnQgaHVudCBhbmQgdG8gYmUgaG9uZXN0LCBJJ3ZlIGJ5IG5vdyBoZWFyZCBiYWQgdGhpbmdzIGFib3V0IGFsbW9zdCBldmVyeSBjb21wYW55IGluIFBpdHRzYnVyZ2ggYnkgbm93LiAKTWNBZmVlIGJvcnJvd2VkICQxMDAgZnJvbSBhIGZyaWVuZCBhbmQgZGVjaWRlZCB0byBzbmVhayBpbnRvIGFuIHVuZGVyZ3JvdW5kIHBva2VyIGNsdWIgYW5kIHRyeSBoaXMgbHVjay4gSGlzIGRldGVybWluYXRpb24gc2VydmVkIGhpbSB3ZWxsLiBIZSBsZWZ0IHRoZSBjbHViLCBhZnRlciBwbGF5aW5nIG1lbiB0d2ljZSBoaXMgYWdlLCB3aXRoIGVub3VnaCBtb25leSB0byBmbHkgdG8gTWlhbWkgYW5kIGNoYXNlIGhpcyBkcmVhbS4KVHJlYXN1cnkgYm9uZHMgY29tZSBpbiBhIHZhcmlldHkgb2YgImZsYXZvcnMiIG9yIGRpZmZlcmVudCBtYXR1cml0eSBkYXRlcy4gWW91IGNhbiBidXkgc2hvcnQgdGVybSBUIGJpbGxzIHRoYXQgbWF0dXJlIGluIHRocmVlIG9yIHNpeCBtb250aHMsIG9yIGxvbmcgdGVybSBib25kcyB0aGF0IHdvbid0IGZ1bGx5IG1hdHVyZSBmb3IgMTAgb3IgZXZlbiAzMCB5ZWFycy4gTm9ybWFsbHksIHRoZSBzaG9ydCB0ZXJtIGJvbmRzIHdpbGwgaGF2ZSBsb3dlciB5aWVsZHMgb3IgaW50ZXJlc3QgcmF0ZXMgdGhhbiB0aGUgbG9uZ2VyIHRlcm0gYm9uZHMsIGJlY2F1c2UgYSBsb25nZXIgaW52ZXN0bWVudCBjYXJyaWVzIG1vcmUgcmlzayB0aGF0IGluZmxhdGlvbiB3aWxsIGVhdCB1cCB5b3VyIGdhaW5zIG92ZXIgdGltZS4gCkJ1dCB0aGUgZ3J1ZXNvbWUgYWxsZWdlZCBjcmltZSBpcyBjYXVzaW5nIHNlcmlvdXMgcHJvYmxlbXMgZm9yIGhpcyBwYXJ0eS4gSW4gdGhlIG1lYW50aW1lLCBCYXR0bGUga2VlcHMgaGlzIHNlYXQgYW5kIGhpcyAkNDIsMzY1IHNhbGFyeS4gClRoYXQgaG93IGl0IGlzIHdpdGggcXVlZXIga2lkcyByYWlzZWQgaW4gcXVlZXIgZmFtaWxpZXMuIFRoZXkgZ3JvdyB1cCB3aXRoIGNyYXp5IGlkZWFzIGFib3V0IGVjb25vbWljIGFuZCByYWNpYWwganVzdGljZS4gVGhleSBhcmUgZmVkIGEgZmVtaW5pc3QgY3JpdGlxdWUgb2YgbWFycmlhZ2UgYXMgYSBwYXRyaWFyY2hhbCBpbnN0aXR1dGlvbiB3aXRoIHRoZWlyIG1hbWFzIG1pbGsgb3IgdGhlaXIgcGFwYXMgZm9ybXVsYS4gCkZpc2NhciAgIDEgcG9pbnRzICBzdWJtaXR0ZWQgMiB5ZWFycyBhZ28KV2l0aCB0aGlzIHByb21vdGlvbiB5b3UgY2FuIGdldCB1cCB0byAyNSBpbiBmcmVlIGJldHMgZWFjaCB3ZWVrIGJ5IHBsYWNpbmcgYXMgbW9yZSBtdWx0aXBsZSBiZXRzIG9mIDUgYXMgeW91IGNhbiBkdXJpbmcgYSB3ZWVrLiBBbm90aGVyIGludGVyZXN0aW5nIGFuZCB1bmlxdWUgcHJvbW90aW9uIGlzIHRoZSA4OHRoIE1pbnV0ZSBTcGVjaWFsIHRoYXQgY2FuIGJyaW5nIHlvdSBhIGZyZWUgYmV0IHVwIHRvIDUwIGlmIGEgZ29hbCB3YXMgc2NvcmVkIG9uIGEgbWF0Y2ggZnJvbSB0aGUgODh0aCBtaW51dGUgYW5kIG9ud2FyZHMsIGJ1dCBvbmx5IGlmIHRoYXQgZ29hbCBoYXMgc3RvcHBlZCB5b3UgZnJvbSB3aW5uaW5nIHlvdXIgdGlja2V0LkhvdyBhcmUgbXkgdHJhbnNhY3Rpb25zIHNlY3VyZWQ/WW91IGNhbiByZXN0IGFzc3VyZWQgYmVjYXVzZSBhbGwgb2YgeW91ciB0cmFuc2FjdGlvbiBkZXRhaWxzIGFuZCBmaW5hbmNpYWwgaW5mb3JtYXRpb24gYXJlIGNvbXBsZXRlbHkgc2VjdXJlIGF0IDg4OFNwb3J0LiBBbGwgdHJhbnNhY3Rpb25zIGFyZSBwZXJmb3JtZWQgdW5kZXIgdGhlIHN1cGVydmlzaW9uIGFuZCBzYWZlZ3VhcmQgb2YgQ2Fzc2F2YSBFbnRlcnByaXNlcyBMdGQsIGEgY29tcGFueSB0aGF0IHByb3ZpZGVzIGZpbmFuY2lhbCB0cmFuc2FjdGlvbiBwcm9jZXNzaW5nIHNlcnZpY2VzLiAKQW5kIHRoZSBvdXRjb21lIGlzIHRoZSBzYW1lLiBCdXJlYXVjcmFjeSBpcyBwYXJ0IG9mIGl0LCBhbm90aGVyIGlzIHBlcmZvcm1hbmNlIHRoZWF0ZXIgKCB0aGV5IGNhbiBzZWxsIHRvIHRoZSBjdXN0b21lciBvciBpbnZlc3RvciB0aGF0IHRoZXkgaGF2ZSBhIGRlcGFydG1lbnQgZm9yIHRoaXMgYW5kIG9uZSBmb3IgdGhhdCBhbmQgaXQgbG9va3MgYWxsIG9mZmljaWFsICkgYnV0IHRoZSBiaWdnZXN0IGJsdW5kZXIgaW4gbXkgb3BpbmlvbiBpcyBkaXNjb25uZWN0IGJldHdlZW4gbWFuYWdlbWVudCBhbmQgdGhlIGdyb3VuZCB0cm9vcHMuIApHcmFoYW0gSHVnaGVzL1RoZSBDYW5hZGlhbiBQcmVzcwpPbiB0aGUgb3RoZXIgaGFuZCwgaWYgeW91J3JlIHNvIHByZW9jY3VwaWVkIHdpdGggZmluZGluZyB0aGUgQkVTVCBkZWFsIHRoYXQgeW91IHNhY3JpZmljZSBtYW55IGdvb2QsIHByb2ZpdGFibGUgZGVhbHMgYWxvbmcgdGhlIHdheSwgeW91J2xsIG5vdCBvbmx5IG1pc3Mgb3V0IG9uIG9wcG9ydHVuaXRpZXMgYnV0IHlvdSdsbCBlbmQgdXAgdG9vIGNvbmZ1c2VkIHRvIHRoaW5rIHN0cmFpZ2h0IGJ5IHRoZSBlbmQgb2YgaXQgYWxsLiBLZWVwIGl0IHNpbXBsZTogZmluZCBvbmUgZ29vZCBkZWFsIGFuZCBzZWUgaXQgdGhyb3VnaC4uIApNYW55IHByb2Zlc3Npb25hbCBwbGF5ZXJzIHBsYXkgbW9yZSBoYW5kcyB0aGFuIHJlY29tbWVuZGVkLCBidXQgdGhlaXIgcG9zdCBmbG9wIHBsYXkgYW5kIGFiaWxpdHkgdG8gcmVhZCBvdGhlciBwbGF5ZXJzIGlzIHN1cGVyaW9yIHRvIG1vc3QgcGVvcGxlJ3MgYWJpbGl0aWVzLiBUaGlzIGFsbG93cyB0aGVtIHRvIG91dHBsYXkgdGhlaXIgb3Bwb25lbnRzIGFuZCBtYWtlIHVwIGZvciB0aGUgZGlmZmVyZW5jZSBpbiBzdGFydGluZyBoYW5kIGNvbXBvc2l0aW9uIGFmdGVyIHRoZSBmbG9wLgpJZiB5b3UgYXJlIG1ha2luZyB0aGVzZSBraW5kcyBvZiBqb2tlcywgbGlua2luZyB0byBwZW9wbGUgd2hvIGhvbGQgYW50aXNlbWV0aWMgdmlld3Mgb3IgYmVsaWVmcywgdGhlbiB5b3UgYXJlIHRhY2l0bHkgZW5hYmxpbmcgdGhlc2UgdGhpbmdzLiBQZXdEaWVQaWUgZG9lcyB0aGVzZSB0aGluZ3MgYW5kIG5vcm1hbGl6ZXMgdGhlICJpdCBhIGpva2UgYnJvIiBwcmVjdXJzb3IgdG8gZnVydGhlciBhdHRhY2tzLiAKU2hlIHBhcnQgb2YgdGhlIHJlYXNvbiBJIHBsYW4gb24gc3RhcnRpbmcgQm90b3ggd2hlbiBJIGhpdCAzMCBqdXN0IGFzIGEgd3JpbmtsZSBwcmV2ZW50YXRpdmUgbWVhc3VyZS4gCiJUaGlzIGlzIGFuIGV4dHJlbWVseSBzdHJvbmcgcHJvc2VjdXRpb24gY2FzZSwgYW5kIHlvdSByZWZ1c2VkIHRvIGZhY2UgdGhlIHJlYWxpdHkgeW91IHdvdWxkIGV2ZW50dWFsbHkgZ28gdG8gamFpbCB1bnRpbCBjb25mcm9udGVkIHdpdGggdGhlIGZhY3Qgb2YgdGhlIHRyaWFsIHByb2NlZWRpbmcuIgpEb2N0b3JzIHVzZSBjaGVtaWNhbHMgdGhhdCBsaXRlcmFsbHkgcGVlbCBhd2F5IGxheWVycyBvZiBza2luLiBUaGF0IG1pZ2h0IHNvdW5kIHNjYXJ5LCBidXQgaWYgeW91J3ZlIGdvdCBhbGwgdGhlIGZhY3RzIGl0IG1ha2VzIGEgbGl0dGxlIG1vcmUgc2Vuc2UuIApJZiBhIHdvbWFuIG5lZWRzIHRyZWF0bWVudCBidXQgdGhlIHRyZWF0bWVudCBwdXRzIGEgY3VycmVudCBvciBmdXR1cmUgZmV0dXMgYXMgcmlzaywgdGhlbiB0aGUgd29tYW4gc2hvdWxkIGdldCB0aGUgdHJlYXRtZW50LCBhbmQgaWYgaGVyIGZlcnRpbGl0eSBpcyBhZmZlY3RlZCBhbmQgc2hlIHN0aWxsIHdhbnRzIGtpZHMgc29tZSBkYXkgdGhlbiB0aGVyZSBhcmUgb3RoZXIgb3B0aW9ucyBmb3IgaGF2aW5nIGEgY2hpbGQuIApUbyB3aGljaCBFcmljIEFkYW1zLCBhIEJyb29rbHluIERlbSwgcmVwbGllZCB0aGVzZSB3ZXJlIHRoZSBzYW1lIHN0YXRlcyB0aGF0ICJhdCBvbmUgdGltZSBvciBhbm90aGVyIHNvbGQgYmxhY2tzIGludG8gc2xhdmVyeS4iLiAKSSBhbHNvIGRvaW5nIGEgbG90IG9mIGFudGkgYWdpbmcsIGluY2x1ZGluZyBjaGVtaWNhbCBleGZvbGlhdGlvbiBhbmQgYSBsb3Qgb2YgYW50aW94aWRhbnRzLiBBbGwgb2YgaXQgdG9nZXRoZXIgaXMgdmVyeSBpcnJpdGF0aW5nIGZvciBteSBzZW5zaXRpdmUgc2tpbi4gU28gSSB1c2UgYSByZWQgbGlnaHQgd2hpY2ggY2FuIGNhbG0gZG93biBteSBza2luIGluIHRlbiBtaW51dGVzIGFuZCBrZWVwIGl0IGNhbG0gZm9yIGFib3V0IDI0IGhvdXJzLiBJIHVzZSBpdCBldmVyeSBuaWdodCBqdXN0IGJlZm9yZSBiZWQuIElmIEkgZG8gSSBuZXZlciBoYXZlIGZsYXJlIHVwcywgZXZlbiBpZiBJIGRvIG5vdGhpbmcgZWxzZS4gQnV0IGlmIEkgc2tpcCBvbmUgbmlnaHQsIEkgYmUgYnJpZ2h0IHJlZCBieSA0cG0gdGhlIG5leHQgZGF5LCBubyBtYXR0ZXIgd2hhdCBlbHNlIEkgZG8uCkkgd2FzIDEwMCUgY29udmluY2VkIHRoZSBhcGFydG1lbnQgd2FzIGp1c3QgaGF1bnRlZC4gCkFjY29yZGluZyB0byBhbiBhcnRpY2xlIGluIHRoZSBOZXcgWW9yayBUaW1lcywgQmFyYmllIGlzIGZhY2luZywgZm9yIHRoZSBmaXJzdCB0aW1lLCBzb21lIHJlYWwgY29tcGV0aXRpb24uIApXaGVuIHB1cmNoYXNpbmcgY2FzaW5vIHBva2VyIGNoaXBzLCB5b3Ugd2lsbCBmaW5kIHRoYXQgbW9zdCB2YXJpZXRpZXMgYXJlIGNvbXBvc2VkIG9mIGNsYXkuIENsYXkgaXMgY29uc2lkZXJlZCB0byBiZSBhIGhpZ2ggZ3JhZGUgbWF0ZXJpYWwgd2hlbiBpdCBjb21lcyB0byBxdWFsaXR5LCBhcHBlYWwsIGFuZCBlYXNlIG9mIHVzZSBpbiB0aGUgcG9rZXIgaW5kdXN0cnkuIE1hbnkgcHJvZmVzc2lvbmFscyBhbmQgbGVpc3VyZSBwbGF5ZXJzIGFsaWtlIGFncmVlIHRoYXQgdGhlc2UgYXJlIGFtb25nIHRoZSAiZmFuY2llc3QiIHRoYXQgb25lIGNhbiBjaG9vc2UgZnJvbS4gCkkgd2lsbCB0cnkgbXkgYWJzb2x1dGUgaGFyZGVzdCBhbmQgSSB3aWxsIGFsd2F5cyBiZSBob25lc3Qgd2l0aCB5b3UuIApUaGUgZ2FtZSBlbmRzIHdoZW4gYSBwbGF5ZXIgcmVhY2hlcyAxNTAgcG9pbnRzLiBUaGUgcGxheWVyIHdpdGggdGhlIGxvd2VzdCBzY29yZSBpcyBkZWNsYXJlZCB0aGUgd2lubmVyCkl0J3MgdG9vIGNsb3NlIG9uIHRoZSB3YXkgdG8gY2FsbCBkZXNpcmFibGUgbm93LCBob3dldmVyIGl0IEpvcmRhbiBtYXkgcGVyaGFwcyBwZXJoYXBzIGdldCBvbmUgcGFydGljdWxhciBzbGlnaHQgcmlkZ2UgYXQgb25lIHBhcnRpY3VsYXIgYmVnaW5uaW5nIGZvciB0aGUgaG9saWRheXMgZHVlIGlmIHlvdSB3YW50IHRvIGhpcyB0d2VsdmUgeWVhcnMgdG93YXJkcyBleHBlcmllbmNlLiAKVGhlIGVsZXZhdG9yIHN0b3BzIGhhcmQgbWFraW5nIE1vbGx5IGFsbW9zdCBkcm9wIHRoZSBjdXBjYWtlcy4gCk1vc3Qgb2YgdGhlIGhvdXNlcyB3ZSBidXksIHRoZSBzZWxsZXIgYXNrZWQgYSBtdWNoIGhpZ2hlciBwcmljZSBidXQga25ldyB0aGV5IHdvdWxkIG5ldmVyIGdldCBpdC4gCkRhcmsgUnl1IGlmIG5lZWQgZXh0cmEgSFAuIApJbGx1bWluYXRpb24sIGRpc3RvcnRpb24gZnJlZSBvcHRpY3MgYW5kIGhhbmRzZnJlZSBjb252ZW5pZW5jZS4gUGVyZmVjdCBmb3IgeW91ciBwdXJzZSwgdGhpcyBUZW5zb3IgbWFnbmlmeWluZyBjb3NtZXRpYyBtaXJyb3IgaXMgYSBtdXN0IGhhdmUgZm9yIGFueSBtYWtldXAgbWF2ZW4hIE5vdyBhcHBseSB5b3VyIG1ha2V1cCBpbiBjb29sIGNvbWZvcnQgYmVjYXVzZSB0aGUgZmx1b3Jlc2NlbnQgYnVsYiBuZXZlciBnZXRzIGhvdC4gVGhpcyBUZW5zb3Igb2ZmZXJzIDJYIG1hZ25pZmljYXRpb24gd2hpY2ggYXNzdXJlcyBmbGF3bGVzcyBtYWtldXAgYXBwbGljYXRpb24gSWRlYWwgZm9yIGFwcGx5aW5nIGNvc21ldGljcywgdHdlZXppbmcgb3IgZXZlbiBwdXR0aW5nIGluIGNvbnRhY3RzLiAKVGhlIHRydXRoIGlzLCB5b3UgYXJlIGJldHRlciB0aGFuIGhlci4gVGhlIHRydXRoIGlzLCBzaGUgZG9lc24ndCBoYXZlIHRoZSBwb3dlciB0byBqdXN0IHRha2UgdGhvc2UgZ2lybHMgYXdheSBmcm9tIHlvdS4uIApUaGV5IHZvdGVkIGFnYWluc3Qgb25lIG9mIG91ciBtb3Rpb25zIGJyb3VnaHQgZm9yd2FyZCBieSAuIE11cnJheSBSYW5raW4gdG8gaGVhciBmcm9tIE1zLiBXaWxzb24gUmF5Ym91bGQgYWdhaW4gLiBUaGF0IHdoeSBJIGNhbGxlZCBmb3IgYSBwdWJsaWMgaW5xdWlyeS4gSXQgd291bGQgaGF2ZSBpbmRlcGVuZGVuY2UsIGl0IHdvdWxkIGhhdmUgYSBicm9hZCBtYW5kYXRlIHRvIGludmVzdGlnYXRlIHdoYXQgaGFwcGVuZWQsIGFuZCBhcHBvaW50aW5nIGEganVkZ2Ugd291bGQgZ2l2ZSB0aGUgcHVibGljIGlucXVpcnkgdGhlIHN0cmVuZ3RoIGFuZCBtYW5kYXRlIG9mIGluZGVwZW5kZW5jZS4uIApPbmUgb2YgdGhlIG1vcmUgY29udmVuaWVudCBpbnZlbnRpb25zIGhhcyB0byBiZSBjb252ZXJ0aWJsZSBwb2tlciBkaW5pbmcgdGFibGVzLiBFc3BlY2lhbGx5IGlmIHlvdSBsaXZlIGluIGEgc21hbGwgYXBhcnRtZW50LCBvciBob21lLCBhbmQgdGhlIGRpbmluZyByb29tIGlzIHdoZXJlIHlvdSBhbmQgeW91ciBidWRkaWVzIGVuZCB1cCBwbGF5aW5nIGEgZ2FtZSBvZiBwb2tlci4gClRoZWlyIG11c2NsZXMgbmV2ZXIgcmVhbGx5IGxldCBnbywgdGhleSBhcmUgYWx3YXlzIHRpZ2h0LiBUaGUgdGVuc2lvbiB2YXJpZXMgICBzb21lIHBlb3BsZSB3aWxsIGhhdmUgaXQgaW4gdGhlaXIgYmFjaywgc29tZSBpbiB0aGVpciBsZWdzLCBvdGhlcnMgaW4gdGhlaXIgaGlwcywgc29tZSB0aGVpciBuZWNrLCBldGMuIApBbnRlcyBkZWwgZGVzY2Fuc28sIGVsIGp1Z2Fkb3IgYnJhc2lsZW8gZmlybSBlbCB0ZXJjZXJvIGRlIGxhIFJlYWwsIGNvbiBkaXNwYXJvIGRlc2RlIGxhIGZyb250YWwgZGVsIHJlYSwgcmFzbywgdHJhcyB1bmEgYXNpc3RlbmNpYSBkZSBPeWFyemJhbC4KT3V0Y29tZSBtZWFzdXJlcyBpbmNsdWRlZCBkaXJlY3QgbWVhc3VyZXMgKGZyZXF1ZW5jeSBvZiBnYW1ibGluZyBhbmQgZHVyYXRpb24gb2YgZ2FtYmxpbmcgaW4gYSBzcGVjaWZpZWQgdGltZSBwZXJpb2QsIHBhcnRpYWwgb3IgY29tcGxldGUgYWJzdGluZW5jZSBmcm9tIGdhbWJsaW5nKSBvciBsZXNzIGRpcmVjdCBtZWFzdXJlcyAocHJlb2NjdXBhdGlvbiwgc2VsZiBjb250cm9sIG9yIHVyZ2UgdG8gZ2FtYmxlKS4gCllvdSBub3QgdHJ5aW5nIHZlcnkgaGFyZCB0aGVuLiAKU2FkaWU6IEJhY2sgaW4gdGhvc2UgZGF5cywgaGUgd2FzIHNvIHN3ZWV0IGFuZCBsb3lhbC4gVGhlIGNvbXBhbnkgbWlnaHQgaGF2ZSBmb2xkZWQgdGhhdCBmaXJzdCBkZWNhZGUgaWYgaGUgaGFkbid0IHB1bXBlZCBoaXMgb3duIG1vbmV5IGluLiBTb21lIG9mIHRoZSBVbml2ZXJzaXR5IG9mIFdhc2hpbmd0b24gZW5naW5lZXJzIHdobyBoZWxwZWQgaGltIGdldCBzdGFydGVkIHJvc2UgcmlnaHQgdG8gdGhlIHRvcCwgYW5kIGVtcGxveWVlcyBlbmNvdXJhZ2VkIHRoZWlyIGNoaWxkcmVuIHRvIHdvcmsgdGhlcmUuIERpZCB5b3Uga25vdyBoaXMgZmlyc3QgbGVhZCBlbmdpbmVlciB3YXMgQ2hpbmVzZT8gQmlsbCB3YXMgc28gcHJvZ3Jlc3NpdmUhIERpZCB5b3Uga25vdyBCaWxsIGhpbXNlbGYgZmxldyB0aGUgZmlyc3QgdGVzdCBmbGlnaHQ/IEhlIHdhcyBzbyBicmF2ZSEgVGhleSBoYWQgZW1wbG95ZWUgQ2hyaXN0bWFzIHBhcnRpZXMgYW5kIGJvbnVzZXMgc3RhcnRpbmcgaW4gMTkyMi4gVGhleSBoaXJlZCBmZW1hbGVzIG5vdCBqdXN0IHRvIHN0aXRjaCB0aGUgd2luZ3MgYnV0IHRvIGhlbHAgZGVzaWduIHRoZW0uIEJvZWluZyBzZXQgdGhlIHJlZ2lvbidzIHN0YW5kYXJkIGZvciBwYXksIGJlbmVmaXRzIGFuZCBmYWlyIGhpcmluZy4gQmlsbCB3YXMgdGhlIG9uZSB3aG8gZmlyc3QgZGV2ZWxvcGVkIHBsYWNlcyBsaWtlIEJsdWUgUmlkZ2UgYW5kIElubmlzIEFyZGVuIGFuZCB0aGUgSGlnaGxhbmRzLgpGb3IgeW91ciBob3QgZG9nIGJhciwgc2xhdywgY2hlZXNlcywgYXZvY2FkbywgYmFjb24sIGFuZCBiYWNvbiBiaXRzIGFyZSBhbGwgZnVuIGNob2ljZXMsIEhvbGxhbmRlciBzYWlkLiBNYWtlIHN1cmUgeW91IG9mZmVyIGEgdmFyaWV0eSBvZiBzYXVjZXMgYXMgd2VsbC4KTG91aXMgUm9tYW4gQ2F0aG9saWMgQ2h1cmNoLCBXYXRlcmxvbyB3aXRoIEZyLiBCZXJuaWUgSGF5ZXMgYXMgY2VsZWJyYW50LiBSZWNlcHRpb24gdG8gZm9sbG93IGF0IFdlc3Rtb3VudCBHb2xmIGFuZCBDb3VudHJ5IENsdWIuIAooUHJpdmFjeSBQb2xpY3kpVmltZW9Tb21lIGFydGljbGVzIGhhdmUgVmltZW8gdmlkZW9zIGVtYmVkZGVkIGluIHRoZW0uIApNb3JlIGdhbWlmaWNhdGlvbi4gCkFzIGEgcmVzdWx0LCBuZWl0aGVyIHRoZSB2aWN0aW1zICAgbm9yIGV2ZW4gdGhlIGp1ZGdlICAgd291bGQga25vdyBob3cgbWFueSBnaXJscyBFcHN0ZWluIGFsbGVnZWRseSBzZXh1YWxseSBhYnVzZWQgYmV0d2VlbiAyMDAxIGFuZCAyMDA1LCB3aGVuIGhpcyB1bmRlcmFnZSBzZXggYWN0aXZpdGllcyB3ZXJlIGZpcnN0IHVuY292ZXJlZCBieSBwb2xpY2UuIFBvbGljZSByZWZlcnJlZCB0aGUgY2FzZSB0byB0aGUgRkJJIGEgeWVhciBsYXRlciwgd2hlbiB0aGV5IGJlZ2FuIHRvIHN1c3BlY3QgdGhhdCB0aGVpciBpbnZlc3RpZ2F0aW9uIHdhcyBiZWluZyB1bmRlcm1pbmVkIGJ5IHRoZSBQYWxtIEJlYWNoIFN0YXRlIEF0dG9ybmV5J3MgT2ZmaWNlLgpUaGUgcHJvYmxlbSBpcyBoZSBpcyBtYXJraW5nIHlvdXIgb3JnYXNtIGFib3V0IGhpbSBhbmQgaGlzIGVnbyBpbnN0ZWFkIG9mIHRoaW5raW5nIGFib3V0IHlvdSBhbmQgeW91ciBwbGVhc3VyZS4gQXMgb3RoZXJzIGhhdmUgc3VnZ2VzdGVkLCBzaXQgaGltIGRvd24gYW5kIGV4cGxhaW4gdG8gaGltIHRoYXQgaXQganVzdCBub3QgZ29pbmcgdG8gaGFwcGVuIGV2ZXJ5dGltZSBhbmQgeW91IGp1c3Qgd2FudCB0byBmb2N1cyBvbiBlbmpveWluZyB0aGUgZXhwZXJpZW5jZSB3aXRob3V0IG1ha2luZyB5b3VyIG9yZ2FzbSB0aGUgImdvYWwiLiBUaGF0IGhlIHNob3VsZG4gbWFrZSB5b3VyIHBsZWFzdXJlL29yZ2FzbSBhYm91dCBoaW0uLiAKTWl0IGRlbiBuZXVlbiBGb3JtdWxhcmVuIHVuZCBkZXIgTWdsaWNoa2VpdCBkZXIgZWxla3Ryb25pc2NoZW4gYmVyZ2FiZSwgbXVzc3RlIGVyIHNpY2ggZWluZW4gbmV1ZW4gRHJ1Y2tlci9TY2FubmVyIGFuc2NoYWZmZW4sIGRhIGVyIHp3ZWkgU2NoY2h0ZSBiZW50aWd0LCB3ZW5uIGVyIGRhbm4gZWluZSBSZWNobnVuZyBhdXNkcnVja2VuIG11c3MuIEVpbiBDYXJkUmVhZGVyIHVuZCBkYW1pdCBlaW5lIEFubWVsZHVuZyBiZWkgQ292ZXJDYXJkIHd1cmRlIGVtcGZvaGxlbi4gU29laW5lIEFubWVsZHVuZyBiZWkgSElOIHdpZWRlcnVtIG50aWcgd3VyZGUuIApJbiB0aGUgUGFjaWZpYyB0aGVhdGVyLCB0aGUgQmF0dGxlIG9mIE1pZHdheSBpbiAxOTQyIHByZXR0eSBtdWNoIGxvc3QgaXQgZm9yIHRoZSBKYXBhbmVzZSwgYXMgdGhleSBsb3N0IDQgaW1wb3J0YW50IGFpcmNyYWZ0IGNhcnJpZXIsIGFuZCBtYW55IGNydWlzZXIsIGRlc3Ryb3llcnMsIGFuZCBodW5kcmVkcyBvZiB3YXJwbGFuZXMuIFRoZXkgYWxzbyBsb3N0IHRoZWlyIGNvY2t5IGNvbmZpZGVuY2UgdGhlbi4gSXQgd2FzIGNsZWFyIHRvIHRoZSBBbGxpZXMgdGhhdCBzb21lb25lIGhhZCBiZWVuIG1ha2luZyBob3JyaWJsZSBtaWxpdGFyeSBkZWNpc2lvbnMgZm9yIEdlcm1hbnksIHJlc3VsdGluZyBpbiB0aGUgR2VybWFucyBiZWluZyB1bnByZXBhcmVkIGZvciB0aGF0IGludmFzaW9uLiBPbmNlIEdlbi4gUGF0dG9uIGdvdCBpbnRvIHRoZSBmcmF5IHdpdGggaGlzIDNyZCBBcm15LCBpdCB3YXMgY2xlYXIgdGhhdCB0aGUgQXhpcyBwb3dlcnMgZGF5cyB3ZXJlIGV2ZW4gbW9yZSBsaW1pdGVkIHRoYW4gaGFkIGJlZW4gdGhvdWdodC4gY2hvb3NlIEZPTEQgQU5EIFNLSVAsLiB0aGVuLC4gaW1tZWRpYXRlbHkgc2VsZWN0IEVYSVRHQU1FLC4gYmFjayBhdCB0aGUgbWFpbiBtZW51LiBjbGljayBUVVRPUklBTCwuIHRoZW4uIGNsaWNrIHRoZSB0b3B0dXRvcmlhbCBjYWxsZWQgdHV0b3JpYWwsLiBhbmQgd2hlbnRoZXkgYXJlLC4gaXQgc2hvd3MgYWxsIHRoZSBwbGF5ZXJzIGhhbmRzLiBUaGVuIGNsaWNrIGV4aXQgZ2FtZWFnYWluLC4gYmFjayB0byB0aGUgbWFpbiBtZW51LC4gb25seSBub3cgYWxsIHRoZWlyIGNhcmRzYXJlIHNob3duLiBHb29kIGx1Y2sgaXQgd29ya3MgZm9yIG1lLiAoRnVsbCBBbnN3ZXIpCkFnYWluLCBjb21lcyBkb3duIHRvIHRoZSBnaXJsLCBzaXR1YXRpb24gYW5kIGNvbW11bmljYXRpb24gYmV0d2VlbiB5b3UgdHdvLi4gCkV2ZW4gdGhvdWdoIG15IEZpZG8gcGhvbmUgKG9uIHRoZSBSb2dlcnMgbmV0d29yaykgZHJvcHMgdG8gM0cgaW4gc29tZSBhcmVhcywgdGhlIHNhdmluZ3MgbWFrZSBpdCB3b3J0aCBub3Qgc3dpdGNoaW5nLiBJIGhhZCB0cmllZCB0byBzd2l0Y2ggbXkgcGVyc29uYWwgcGhvbmUgdG8gVGVsdXMgd2hlbiBteSBjb21wYW55IGhhZCBhIHNpZ25pZmljYW50IGRpc2NvdW50IGJ1dCBldmVuIHRoZSBjb21taXNzaW9uZWQgY29ycG9yYXRlIHNhbGVzIHJlcCB0b2xkIG1lIEkgd2FzIGJldHRlciBvZmYgc3RheWluZyB3aXRoIEZpZG8gcHJpY2V3aXNlIGJlY2F1c2UgdGhleSBjb3VsZG4ndCBiZWF0IHdoYXQgSSB3YXMgcGF5aW5nIGZvciA0R0Igb2YgZGF0YS4gCk9ubHkgd2F5IGFyb3VuZCBpdCBpcyB0byBoYXZlIHdoYXRldmVyIHlvdSBjaGFuZ2UgYmUgY29tcGxldGVseSB1bnJlbGF0ZWQgdG8gdGhlIHJlYXNvbiB5b3UgaW52ZW50ZWQgdGhlIHRpbWUgbWFjaGluZSBpbiB0aGUgZmlyc3QgcGxhY2UsIGFzIGluIG5vdCBjb21wbGV0ZSB5b3VyIGFjdHVhbCBtaXNzaW9uIGJlY2F1c2UgY29tcGxldGluZyB5b3VyIG1pc3Npb24gY2F1c2VzIGEgcGFyYWRveCB3aGVyZSB5b3UgbmV2ZXIgbWFrZSB0aGUgdGltZSBtYWNoaW5lLiAKVG9tb3Jyb3cgaXMgdGhlIGh1c2JhbmQncyBiaWcgYmlydGhkYXkgY2VsZWJyYXRpb24vcG9rZXIgbmlnaHQgKGFubnVhbCB0cmFkaXRpb24pIGFuZCBESCAoZGVhciBodXNiYW5kKSBvYnZpb3VzbHkgcmVhbGx5IHdhbnRzIHRvIGdvLiBPdXIgZnJpZW5kcyB0b3RhbGx5IHVuZGVyc3RhbmQgb3VyIHNpdHVhdGlvbiBhbmQgdW5kZXJzdGFuZCBpZiBJIGRvbid0IHdhbnQgaGltIHRvIGdvLiBIb3dldmVyLCBESCAoZGVhciBodXNiYW5kKSBoYXMgYmVlbiBhbiBhYnNvbHV0ZSBhbmdlbCBsYXRlbHkgY29uc2lkZXJpbmcgaG93IG1pc2VyYWJsZSBhbmQgYXdmdWwgSSBoYXZlIGJlZW4gYWN0aW5nIHRoZXNlIHBhc3QgY291cGxlIG9mIHdlZWtzLCBhbmQgSSBrbm93IGhvdyBtdWNoIGhlJ2QgbG92ZSBhIG5pZ2h0IG91dC4gU28sIEknbSB0aGlua2luZyBvZiBsZXR0aW5nIGhpbSBnbyBzbyB0aGF0IGhlIGNhbiBoYXZlIGEgZ29vZCB0aW1lLiBIZSBoYXMgYWxyZWFkeSBzYWlkIGhlIHdvbid0IGRyaW5rIGEgZHJvcCBvZiBhbGNob2xvbCBpbiBjYXNlIGhlIG5lZWRzIHRvIHJ1c2ggYmFjay4gQW5kIHRoZSB3aWZlIGp1c3QgZW1haWxlZCBtZSB0byBzdWdnZXN0IHRoYXQgaGUgYnJpbmcgdGhlIGdpcmxzIHdpdGggaGltIGFuZCBzaGUnbGwgd2F0Y2ggdGhlbSBhbmQgSSBjYW4gaGF2ZSBhbiBldmVuaW5nIHRvIG15c2VsZi4KVGhlcmUgaXMgZmxhaXIgZm9yIGFsbCBmZWRlcmFsIGFwcGVhbHMgY291cnRzIGFuZCBmb3IgdGhlIHNwZWNpZmljIEp1c3RpY2VzLiAKUGhvdG8gRnJhbWUgU3R1ZGlvIEtleWdlbiBHZW5lcmF0b3IKQ2hhcmxlcyBvbmNlIGZhbW91c2x5IHJlbWFya2VkIHRoYXQgQ2FtaWxsYSB3YXMgJ25vbiBuZWdvdGlhYmxlJy4gT24gMTAgRmVicnVhcnksIDIwMDUsIHJveWFsIG9mZmljaWFscyBhbm5vdW5jZWQgdGhhdCB0aGUgUHJpbmNlIG9mIFdhbGVzIGFuZCBoaXMgcGFydG5lciBDYW1pbGxhIGhhZCBnb3QgZW5nYWdlZCB3aXRoIHRoZSBpbnRlbnRpb24gb2YgbWFycnlpbmcgb24gRnJpZGF5LCA4IEFwcmlsLiBUaGUgY291cGxlIGFwcGVhcmVkIGZvciB0aGUgd29ybGQncyBwcmVzcyB3ZWFyaW5nIG91dGZpdHMgbWFkZSBmcm9tIHRoZSBzYW1lIG1hdGVyaWFsLiBDYW1pbGxhJ3MgcmluZyBoYWQgYmVsb25nZWQgdG8gQ2hhcmxlcydzIGxhdGUgZ3JhbmRtb3RoZXIsIHRoZSBRdWVlbiBNb3RoZXIuClNoZSBzdGFydHMgYSBuZXcgam9iIG9uIE1vbmRheSBpbiBhIG1hbmFnZW1lbnQgcG9zaXRpb24gYXQgYSBiZXR0ZXIgY29tcGFueSB0aGUgaGlyZWQgaGVyIHBhcnRpYWxseSBiZWNhdXNlIHNoZSBpcyBhIGhpZ2hseSBxdWFsaWZpZWQgV29tYW4uLiAKQmUgY2FyZWZ1bCBpZiB5b3UgYXJlbiBjdXJyZW50bHkgaW4gcHJhY3RpY2Ugd2l0aCBiYWJ5IHdlYXJpbmcuIEJ1dCB0YWtlIHRoZSBHaXJhc29sIGFzc3VtaW5nIHlvdSBhcmUgY29tZm9ydGFibGUgZG9pbmcgYmFjayBjYXJyaWVzIHdpdGggaXQuIApBIHNtYWxsIG5vdGVwYWQgYW5kIHBlbmNpbCBpcyBhbiBpbmV4cGVuc2l2ZSBjb21iaW5hdGlvbiB0aGF0IGNhbiBwcm92aWRlIGVuZGxlc3MgZW50ZXJ0YWlubWVudCBvbiB0aGUgZ28uIApZZXMgLiAKVG91dGVmb2lzLCBub3VzIHNvbW1lcyBwbHVzaWV1cnMgIHJlbWFycXVlciBxdWUgbGUgcmV0b3VyICBkZXMgYmxzIGRlIHZhcml0cyBhbmNpZW5uZXMgb2ZmcmUgYmllbiBzb3V2ZW50IGxhIHBvc3NpYmlsaXQgYXV4IHBlcnNvbm5lcyBjb25jZXJuZXMgZGUgcmVtYW5nZXIgZGVzIHByb2R1aXRzIGNyYWxpZXJzIGNvbnRlbmFudCBkdSBnbHV0ZW4uIApXYWxraW5nIGd1aWRlcyBoYXZlIGJlZW4gYXZhaWxhYmxlIGZyb20gdGhlIGV2ZW50J3Mgd2Vic2l0ZSBhbmQgaW4gMjAxOCAod2hlbiB0aGUgZXZlbnQgd2FzIGtub3duIGFzIHRoZSBDbGFzc2ljIEJ1c2VzLCBCZWVyIGFuZCBXYWxrcyBXZWVrZW5kKSBhIHZhcmlldHkgb2YgZGlmZmVyZW50IHdhbGsgZ3VpZGVzIHdlcmUgYXZhaWxhYmxlIHRvIGNvbGxlY3QuIApPdmVydmlldyBmb3IgTGl2ZWZyb21QaG9lbml4CkJ1dCBwb3NzaWJseSB0aGUgc3RyYW5nZXN0IGFuZCBtb3N0IHVubmVjZXNzYXJ5IGRldGFpbCBLdWJyaWNrIGV2ZXIgaW5zaXN0ZWQgdXBvbiB3YXMgdGhlIHdhciByb29tIGluIERyLiBTdHJhbmdlbG92ZS4gV2hpbGUgdGhlIHNldCB3YXMgYmVpbmcgY29uc3RydWN0ZWQsIGhlIGRlY2lkZWQgKG9uIHdoYXQgd2UnbGwgY2FsbCBhIEt1YnJpY2tpYW4gd2hpbSkgdGhhdCB0aGUgdG9wIG9mIHRoZSB0YWJsZSBzaG91bGQgYmUgY292ZXJlZCBpbiBncmVlbiBiYWl6ZS4gIiwiIGhlIHNhaWQsICJ0aGVyZSdzIHRoZSBQcmVzaWRlbnQsIHRoZSBnZW5lcmFscyBhbmQgdGhlIFJ1c3NpYW4gQW1iYXNzYWRvciBwbGF5aW5nIGEgZ2FtZSBvZiBwb2tlciBmb3IgdGhlIGZhdGUgb2YgdGhlIHdvcmxkLiIKQXQgMTggSSBnb3QgJDEsMDAwIGZvciBhIDQgbnVtYmVyIHdpbm5lciwgYW5kIEkgZ290IDE4IDMgbnVtYmVyIHdpbm5lcnMgd29ydGggJDUwIGVhY2gsIHNvIHRoYXQncyA5MDAgYnVja3MuIFdoZW4gYSByb2xsZG93biB3YXMgYW5ub3VuY2VkLCBKZXJyeSBzcHJhbmcgaW50byBhY3Rpb24uIApIZSByYW1ibGVzIHF1aXRlIGEgYml0LiAKSWYgbm8gY3JpbWluYWwgY2hhcmdlcyBhcmUgZmlsZWQgYWZ0ZXIgdGhhdCB5b3UgY291bGQgdHJ5IHRvIGdvIGFmdGVyIGhlciBpbiBjaXZpbCBjb3VydCBmb3Igc29tZSBzb3J0IG9mIGNoaWxkIHN1cHBvcnQuIApUaGUgZm9ybWVyIExpYmVyYWwgRGVtb2NyYXQgc2VuYXRvciBpcyBob3BpbmcgdG8gd2luIGEgc3RhdGUgdXBwZXIgaG91c2Ugc2VhdCBhdCB0aGUgTWFyY2ggMjMgZWxlY3Rpb24uIApNb3Jlb3ZlciwgYmVjYXVzZSBsYXcgZW5mb3JjZW1lbnQgZG9lc24ndCBoYXZlIGRhdGEgc2NpZW50aXN0cyB3b3JraW5nIGZvciB0aGVtLCB0aGV5IHdpbGwgdXNlIG1vZGVscyBkZXZlbG9wZWQgZm9yIHRoZXNlIGRhdGEgc2V0cyB0byBtYWtlIHByZWRpY3Rpb25zLiBCdXQgdGhlc2UgZGF5cywgdGhlc2UgbW9kZWxzIGFyZSBub3Qgcm9idXN0LCBwb29ybHkgdW5kZXJzdG9vZCwgYW5kIHN1c2NlcHRpYmxlIHRvIGF0dGFja3MuIAoiSXQncyBiZWVuIHJlYWxseSBleGNpdGluZyB3YXRjaCBGVFAgZ3JvdyBmcm9tIGEgZmxlZGdsaW5nIG5vbiBwcm9maXQgdG8gd2hhdCB3ZSBoYXZlIGJlY29tZSB0b2RheSwiIGNvbW1lbnRlZCBKZWZmIE1hcnRpbiwgRlRQJ3MgbWFya2V0aW5nIGRpcmVjdG9yIChwcmVzaWRlbnQgb2YgQ2FzY2FkZSBQdWJsaWNhdGlvbnMgSW5jLikuIApCdXQgSSB3b3VsZCBib3Jyb3cgcHJvY2Vzc2luZyBmcm9tIG90aGVycyBhbmQgSSB3b3VsZCBib3Jyb3cgcG93ZXIuIEkgd291bGQgbWFrZSBoZXIgZm9yY2VmaWVsZCBkbyBleGFjdGx5IGFzIHNoZSB3aXNoZXMgaXQgdG8sIGdyYWR1YWxseSBleHBhbmQgY2FwYWJpbGl0aWVzIGFuZCBvcGVuIHRoZSBkb29ycyBzbyB0aGF0IHNoZSBjYW4gdXRpbGl6ZSBldmVyeSBwYXJ0IG9mIGV2ZXJ5IGZhY2V0IG9mIHRoYXQgcG93ZXIuLiAKRXZlbiBtZWRpY2luZSBjYWJpbmV0cyBhcmUgZXhhbWluZWQsIHdpdGggQllVIG9wdGluZyB0byBpbnN0YWxsIG1lZGljaW5lIGNhYmluZXRzIHdpdGggYnVpbHQgaW4gTEVEIGxpZ2h0aW5nIGluIHRoZSBtaXJyb3JzIGluIGJvdGggYmF0aHJvb21zIG9mIHRoZSBsYXJnZXIgaG9tZXMgcmF0aGVyIHRoYW4ganVzdCBpbiB0aGUgZW5zdWl0ZXMuCkkgc3VwcG9ydGVkIEJlcm5pZSBlYXJseSBpbiB0aGUgMjAxNiBwcmltYXJ5LiBJIHRob3VnaHQgaGlzIEFNRVJJQ0EhIGFkIHdhcyBvbmUgb2YgdGhlIGJlc3QgcG9saXRpY2FsIGFkcyBJIGV2ZXIgc2Vlbi4gSSBmZWx0IGhlIHdhcyBzb21lb25lIHRoYXQgY291bGQgdW5pdGUgdGhlIGNvdW50cnkgICBSZWQgYW5kIEJsdWUsIEJsYWNrIGFuZCBXaGl0ZSwgUmljaCBhbmQgUG9vci4gClByb20gbmlnaHQgdmlyZ2lucyBnZXQgcHJlZ25hbnQgbGVmdCBhbmQgcmlnaHQuIEl0IGZlZWxzIGxpa2UgeW91IGRvaW5nIHNvbWV0aGluZyB3cm9uZyB3aGVuIHRoYXQgaXNuIHlvdXIgc3RvcnksIGFuZCBzb2NpZXR5IG5ldmVyIHRhbGtzIGFib3V0IHRoZSByZWFsaXR5IHRoYXQgbG93IGZlcnRpbGl0eSBvciBpbmZlcnRpbGUgd29tZW4gZXhwZXJpZW5jZS4uIApTb0plbm5pZmVyU2F5cyAgMyBwb2ludHMgIHN1Ym1pdHRlZCA0IGRheXMgYWdvCkF0IG15IGp1c3QgcmVjZW50bHkgcHJldmlvdXMgam9iLCBjbyB3b3JrZXIvbWFuYWdlcihoZSBhbiBhbWF6aW5nIHN1Y2sgdXAgYW5kIGdvdCBwcm9tb3RlZCkgd2FzIGEgY29tYm8gcGxhdHRlciBvZiBsYXp5L2luY29tcGV0ZW50L2xpYXIuIApUaGVyZSBpcyBhIGdyZWF0IGJvb2sgY2FsbGVkICJNYXRpbmcgaW4gQ2FwdGl2aXR5IiBieSBFc3RoZXIgUGVyZWwgdGhhdCB5b3UgYm90aCBtaWdodCBnaXZlIGEgdHJ5LiAKVGV4YXMgaG9sZCBlbSBvciB0ZXhhcyBob2xkIGVtIGJvbnVzPy4gCkFzIHNvb24gYXMgbXkgZnJpZW5kIGNhciB3YXMgc3RvbGVuLCBzb21lIG90aGVyIGZyaWVuZHMgb2YgaGlzIGZlbHQgc28gYmFkIHRoZXkgc2V0IHVwIGEgR28gZnVuZCBtZSwgaGUgaGFzIGEgam9iIGFuZCBhIHZlcnkgd2VsbCBvZmYgZmF0aGVyIGluIGxhdywgSSBkb250IGtub3cgaG93IG11Y2ggd2FzIGRvbmF0ZWQgYnV0IGhlIGRpZCBnZXQgYSBwcmV0dHkgbmljZSBTVVYgdG8gcmVwbGFjZSB0aGUgY2FyIGhlIGV2ZW50dWFsbHkgZ290IGJhY2suLiAKSXQgaXMgdXN1YWxseSwgc2VlbiB0aGF0IHRoZSBDYW5hZGlhbnMgYXJlIGtlZW5seSBpbmNsaW5lZCB0b3dhcmRzIHRoZSBvbmxpbmUgZ2FtYmxpbmcgd2hlcmVpbiBvbmxpbmUgZ2FtYmxpbmcgaXMgc3RyaWN0bHkgY29uc2lkZXJlZCBhcyBhbiBpbGxlZ2FsIGFjdC4gCllvdSBkb24gaGF2ZSB0byB0aXAsIGFuZCBpdCBkb2VzbiBzY3JldyB5b3VyIHNlcnZlciBvdXQgb2YgbWluaW11bSB3YWdlIHBheS5Eb24gYmVsaWV2ZSBtZT8gRnJvbSB0aGUgZGVwYXJ0bWVudCBvZiBsYWJvciwgd2hlcmUgYW4gZW1wbG95ZWUgZG9lcyBub3QgcmVjZWl2ZSBzdWZmaWNpZW50IHRpcHMgdG8gbWFrZSB1cCB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZSBkaXJlY3QgKG9yIGNhc2gpIHdhZ2UgcGF5bWVudCAod2hpY2ggbXVzdCBiZSBhdCBsZWFzdCAkMi4xMyBwZXIgaG91cikgYW5kIHRoZSBtaW5pbXVtIHdhZ2UsIHRoZSBlbXBsb3llciBtdXN0IG1ha2UgdXAgdGhlIGRpZmZlcmVuY2UuSW5iNCAidGhleSB3b3JrIHRvbyBoYXJkIGZvciBtaW5pbXVtIHdhZ2UhISJSaWNvMTA5ICAxIHBvaW50ICBzdWJtaXR0ZWQgMTEgbW9udGhzIGFnb0kgc2hvd2VkIHlvdSB0b25zIGFuZCB0b25zIG9mIHBlb3BsZSB3aXRoIG92ZXIgODAlIHdpbiByYXRlLiBEb24gbW92ZSB0aGUgZ29hbHBvc3RzLiBUYWtlIHRoZSBMIHdpdGggc29tZSBkaWduaXR5LlJlZ2FyZGxlc3MsIHN1Z2dlc3RpbmcgdGhhdCB3aW5uaW5nIDY5IG91dCBvZiA4NiBnYW1lcyBpcyBsdWNrIGlzIHJldGFyZGVkLiAKSXQgb2Z0ZW4ganVzdCBkb2VzbiB3b3JrIGF0IGFsbC4gCkl0IGlzIHVua25vd24gd2hhdCB0aGlzIGRlcGljdHMgc3BlY2lmaWNhbGx5IGJ1dCBpbiBnZW5lcmFsIGl0IHNlbmRzIGFuIGltYWdlIG9mIGV4aGF1c3Rpb24gYW5kIHdlYXIuIFRoZSBjYXB0aW9uIGZvciB0aGUgaW1hZ2Ugc2F5cyB0aGF0IGl0IHNob3dzICJ0aGUgY29uZGl0aW9uIG9mIHRoZSBIdW4gdHJvb3BzIiBhbmQgdGhhdCB0aGUgc3ViamVjdCAiSGVyciBQcm9mZXNzb3IiIGlzIGxlYXJuaW5nICJhIGdvb2QgbWFueSB0aGluZ3Mgbm90IGhpdGhlcm90byBmb3VuZCBpbiBib29rcyIuIApTaGUgZXZlbiB3YW50cyB0byBkbyB0aGUgcmV2ZXJzZSBhbmQgd2F0Y2ggbWUgZnVjayBhbm90aGVyIHdvbWFuLiAKTGlrZSwgYmlnIHBpY3R1cmU/IFBheWluZyBteSBiaWxscywgY29udGludWluZyBteSBlZHVjYXRpb24sIGhvdyB0byBhZHZhbmNlIG15IGNhcmVlciwgdGhlIGluY3JlYXNlIGluIHRoZSBnbG9iYWwgd2VhbHRoIGdhcCwgcHJvdGVjdGluZyBhIGZyZWUgYW5kIG9wZW4gaW50ZXJuZXQsIGhlbHBpbmcgdGhlIGxlc3MgcHJpdmlsZWdlZCBtZW1iZXJzIG9mIG15IGNvbW11bml0eSwgYW5kIGdldHRpbmcgdG8gdW5pdmVyc2FsIGhlYWx0aCBjYXJlIGNvdmVyYWdlIGluIHRoZSBVbml0ZWQgU3RhdGVzLgpUaGVuIHRoZSBudW1iZXJzIHN0YXJ0ZWQgdG8gZHJvcCB0byBsb3cgdGVlbnMgKGEgY291cGxlIGJyb2tlIHVwLCBzb21lIG1vdmVkIGF3YXksIGV0YykuIApUbyB0aGUgaDJnMiBhbm5vdW5jZW1lbnRzIHBhZ2UsIHdoZXJlIHRoZSBoMmcyIENvbW11bmljYXRpb25zIFRlYW0gYW5ub3VuY2VzIG5ld3MgYWJvdXQgdGhlIEhpdGNoaGlrZXIncyBHdWlkZSBUbyBUaGUgR2FsYXh5LCBFYXJ0aCBFZGl0aW9uLiBPbmNlIHlvdSd2ZSBzdWJzY3JpYmVkLCB3aGVuZXZlciB3ZSBwb3N0IGEgbmV3IENvbnZlcnNhdGlvbiBoZXJlLCBpdCB3aWxsIHBvcCB1cCBvbiB5b3VyIFBlcnNvbmFsIFNwYWNlLiBBcmUgd2VsY29tZSB0byByZXNwb25kIHRvIHRocmVhZHMgdGhhdCBoYXZlIGJlZW4gc3RhcnRlZCBieSBtZW1iZXJzIG9mIHRoZSBoMmcyIENvbW11bmljYXRpb25zIFRlYW0uIApPcGVyYXRpdmUgdmFnaW5hbCBkZWxpdmVyeSAoOCBSQ1RzKS4KWW91IGhhdmUgdG8gYmFsYW5jZSB3aGF0IHRoZSBzaGlwIGNhbiBkbyB3aXRoIHdoYXQgeW91IHdhbnQvbmVlZCBpdCB0byBkby4gU29tZXRpbWVzIHlvdSBoYXZlIHRvIHRha2UgYSBwYXNzIG9uIGEgY29vbCBzaGlwIGJlY2F1c2UgaXQganVzdCB3b24gd29yayBmb3IgeW91ciBuZWVkcyBvciBzdHlsZSBvZiBwbGF5OyBidXQgbGF0ZXIgb24sIGFzIHlvdXIgbmVlZHMgY2hhbmdlLCB5b3UgY2FuIHBpY2sgdXAgdGhhdCBjb29sIHNoaXAuIApPbiB0aGUgb3RoZXIgaGFuZCwgaXQgY291bGQgYmUgdGhhdCBzaGUganVzdCBmZWVscyBsaWtlIHNoZSBkb2Vzbid0IGNvbm5lY3Qgd2l0aCB5b3UgYW55bW9yZS4gQW55d2F5cywgSSBoYXZlIHRoZSBvcGluaW9uIHRoYXQgZ2hvc3Rpbmcgc29tZW9uZSBpbiBhIGxvbmcgdGVybSBmcmllbmRzaGlwIGlzIG5vdCBvbmx5IGluY3JlZGlibHkgcnVkZSwgYnV0IHNob3J0c2lnaHRlZC4gOCB5ZWFycyBpcyBhIGxvbmcgdGltZSB0byBub3Qgc2F5IGdvb2RieWUsIHVubGVzcyB0aGVyZSB3YXMgc29tZSBtYWpvciBpbmNpZGVudC4uIApPciwgaWYgeW91J3JlIGxpa2UgS2FybCBhbmQgR3VuIEplc3VzIGZyb20gSW5SYW5nZSwgaXQgY2FuIGJlIGNvb2wgYW5kIGludGVyZXN0aW5nIHRvIHNob290IHVuZGVyIGFzIHNpbWlsYXIgY29uZGl0aW9ucyBhcyBwb3NzaWJsZSB0byB3YXIgZmlnaHRlcnMuIFlvdSBsZWFybiBhIGxvdCBhYm91dCBraXQsIGd1bnMsIHN0cmF0ZWd5LCBhbmQgeW91cnNlbGYuLiAKWW91IG1pZ2h0IGhhdmUgYmV0dGVyIGx1Y2sgc2F5aW5nIHRoYXQga25vd2xlZGdlIG9yIGhvdyB0aGUgYm9keSB3b3JrcyB3YXMgcmV2ZWFsZWQgdG8geW91IGluIGEgZHJlYW0gdGhhbiB0byBleHBsYWluIHRpbWUgdHJhdmVsLi4gCkxlZnQgYWxvbmUgYWdhaW4sIEF1bnRpZSBhbmQgSSBqdXN0IHNocnVnZ2VkIGFuZCBwaWNrZWQgdXAgbXkgYmxvb2R5IGFuZCBzaGl0IGNvdmVyZWQgaW50ZXN0aW5lcyBvZmYgdGhlIGZsb29yIGFuZCBzaGUgYmVnYW4gdG8gc3R1ZmYgdGhlbSB1cCBteSB2YWpheWpheS4KU29tZXRoaW5nIHRvIGNvbnNpZGVyIHdvdWxkIGJlIHRoZSBmYWN0IHRoYXQgaWxsZWdpdGltYXRlIGNoaWxkYmlydGggYWN0dWFsbHkgaGFwcGVucyBhdCBhIHJhdGUgb2YgNTIlIGluIHRoZSBQaGlsaXBwaW5lcyBhbmQgdGhlIHJhdGUgZ29lcyB1cCBhcyBoaWdoIGFzIDYzJSBpbiB0aGUgY2FwaXRhbCBjaXR5IE1hbmlsYS4KVGhleSBjb3ZlciB0aGUgYmFzaWNzIHZlcnkgd2VsbCB3aXRob3V0IHRha2luZyB0aGVtc2VsdmVzIHRvbyBzZXJpb3VzbHkgKHNvbWV0aGluZyBsYWNraW5nIGluIHRoZSBmaXRuZXNzIGNvbW11bml0eSkuLiAKQnV0IHRoYXQncyB3aHkgd2UncmUgaGVyZSBpc24ndCBpdD9NeSBpbnRlcmVzdHMgaW5jbHVkZTogaHVtYW4gY29tcHV0ZXIgaW50ZXJhY3Rpb25zLCBzY2llbmNlIChteSBmaXJzdCBkZWdyZWUgd2FzIGluIHBoeXNpY3MpLCBhcnQsIHBhaW50aW5nICh3YXRlcmNvbG91cnMgbW9zdGx5KSwgZGlnaXRhbCBhcnQsIGZvb2QgYW5kIGRyaW5rLCBtZXRlb3JvbG9neSwgZ2FyZGVuaW5nLCBhcmNoZW9sb2d5LCB3ZWIgcGFnZSBkZXNpZ24uIApUaGVyZSBhcmUgc29tZSBwbGF5ZXJzIGZyb20gRmlubGFuZCBhbmQgU3dlZGVuLiAKR3V5IHdhcyBzdXBlciBjaGlsbCBhbmQgR2FicmllbGxlIFVuaW9uIHdhcyBhYnNvbHV0ZWx5IHN0dW5uaW5nIGluIGEgZmllcnkgcmVkIGRyZXNzLiAKSW4gYW55IGNhc2UsIGJlc3QgMjAwJCBJIGhhdmUgZXZlciBzcGVudC4gSSB3b24gc29tZSBzaWNrIGhhbmRzIFRCSC4gSSBhbHNvIGJsdWZmZWQgdGhlIGJpZyBndXlzLCB3aGljaCB3YXMgdGhlIG1vc3Qgc2F0aXNmeWluZy4gCkRvIEkgaGF2ZSB0aGUgcmlnaHQgdG8gaGF2ZSB0aGUgaXNzdWluZyBvZmZpY2VyIGV4cGxhaW4gdGhlIHRpY2tldCB0byBtZSAoaWUgZGVtZXJpdHM/KQpHb29kIGx1Y2shLiAKSSBhY3R1YWxseSBsb29rIGZvcndhcmQgdG8gaXQuIApNeSB1bmRlcnN0YW5kaW5nIG9mIGEgInJlZnJlc2giIGlzIHdoZW4gYSB3ZWJzaXRlIGtlZXBzIHRoZSBicm9hZCBsb29rIGFuZCBmZWVsLCBidXQgdHdlYWtzIGFuZCByZWZpbmVzIHRoZSBhcHBlYXJhbmNlLiAKSnVzdCB0byByZWFsbHkgaGFtbWVyIGhvbWUgdGhvc2UgIk9oLCBncm93IHVwLiIgdmliZXMKVGhlIHByb2R1Y3Qgd2FzIG1hZGUgd2l0aCBzb3VyIGNyZWFtIGJ1dCB3YXMgbm90IGxhYmVsZWQgYXMgY29udGFpbmluZyBkYWlyeS4gVGhlIHNhdWNlIGlzIHNvbGQgaW4gcmV0YWlsIHN0b3JlcyB0aHJvdWdob3V0IENvbG9yYWRvLCBOZXcgTWV4aWNvLCBVdGFoIGFuZCBOZWJyYXNrYS4KTWluZGZ1bG5lc3MgaXMgYW1vbmdzdCB0aGUgbW9zdCBiYXNpYy4gVGhlIGJlZHJvb20sIGFzIHBlciBteSBmaXJzdCBjb21tZW50LiAKUmVwb3J0IGFueXRoaW5nIHRoYXQgaXMgY29tcGxldGVseSBvZmYgdG9waWMsIHNwYW0gb3IgYSB0cm9sbCBwb3N0IChzb21lIGtpbmQgb2YgZXZpZGVuY2Ugb24gdGhlIGxhc3Qgb25lIHBsZWFzZSkuClNvIERvb2dpZSBkaWQgd2hhdCBhbnkgc2VsZiBwb3NzZXNzaW5nLCAxOCB5ZWFyIG9sZCBwaHlzaWNpYW4gd291bGQgZG8uIEhlIGdyYWJiZWQgYSBjb25kb20sIGhpcyBnaXJsZnJpZW5kIGFuZCwgd2l0aCB0aGUgc2FtZSBwcm9kaWdhbCBhY3VtZW4gdGhhdCB3b24gaGltIGEgcGxhY2Ugb24gdGhlIGhvc3BpdGFsIHN0YWZmLCBqb2luZWQgdGhlIGNsdWIgb2Ygc2V4dWFsbHkgYWN0aXZlIHRlZW5zLiAKUG90dGVyUXVvdGVyICAxMyBwb2ludHMgIHN1Ym1pdHRlZCA1IGRheXMgYWdvCkFuZCBubywgaGUgZGlkbiB2b3RlIGFnYWluc3QgdGhlIFJ1c3NpYW4gc2FuY3Rpb25zIGJlY2F1c2UgdGhleSB3ZXJlIHRpZWQgd2l0aCBJcmFuLiBBIGZldyB3ZWVrcyBiZWZvcmUgdGhhdCB2b3RlLCBoZSB2b3RlZCBOT1QgdG8gc2VwYXJhdGUgdGhvc2Ugc2FuY3Rpb25zLiAKT3RoZXJzIHdpbGwganVzdCBoYXZlIHNvbWVvbmUgd2hvIHdyaXRlcyBpbml0aWFscyBvciBuYW1lcyBvbiBhIHNoZWV0IG9mIHBhcGVyLiAKSW4gYWRkaXRpb24sIGhlIGhhcyBhIGxvdCBvZiBob2JiaWVzLiAKSmFja3NvbiBmYW1vdXNseSBkZWJ1dGVkIHRoaXMgc3RlcCwgdG8gZ2FzcHMsIGR1cmluZyBoaXMgcGVyZm9ybWFuY2Ugb2YgSmVhbiBvbiB0aGUgMTk4MyAyNSBhbm5pdmVyc2FyeSBUViBzcGVjaWFsLiBXYXMgdGhpcyBhbiBhY3Qgb2YgYXJ0aXN0aWMgZ2VuaXVzPyBNaWNoYWVsIHNpc3RlciBMYSBUb3lhIHNhaWQgaW4gMjAwNCB0aGF0IGEgVHJhaW4gcmVndWxhciB0YXVnaHQgaGltIHRoZSBtb3ZlLCBvcmlnaW5hbGx5IGNhbGxlZCB0aGUgYmFja3NsaWRlOiB3YXMgdGhpcyBkYW5jZXIgR2VvZmZyZXksIHdobyB3YXMgYWx3YXlzIGRvaW5nIHRoZSBtb29ud2FsayBvbiB0aGF0IHNob3cuIApTYWZlIGFzc3VtcHRpb25zLCByaWdodD8uIApKdXN0IGdvdCBiaWxsIGZyb20gb25lIG9mIHRob3NlIHNtYWxsIEVSIGZhY2lsaXRpZXMgKG15IHNtYWxsIHRvd24gaGFzIGxpa2UgNSBvZiB0aGVtKS4gSSBoYWQgc3VwZXIgYmFkIHBhaW4gaW4gbXkgc2lkZS4gQXMgc29vbiBhcyB0aGUgZG9jIHNhdyBtZSBoZSBrbmV3IGl0IHdhcyBhIGtpZG5leSBzdG9uZS4gCkN1cnJlbnRseSwgd2UgYXJlIHVzaW5nIHRoZSBiYWJ5IHNpemUgKHRoZSBsYXJnZXN0IHNpemUgQnVtbWlzIG9mZmVyZWQgZm9yICgxNSA0MCBsYnMsIDR4OHg0IHBseSkgT1IgdGhlIGluZmFudCBzaXplICg3IDIwIGxicywgNHg4eDQgcGx5KSB3aXRoIHRoZSBwcmVlbWllIGZvbGRlZCBpbiAoNCA5IGxicyBidXQgb25seSAyeDZ4MikuIApJIHNlcmlvdXNseSBsb29rZWQgaW50byB0aGlzIGluIGNvbGxlZ2UsIGl0IGlzbiBhcyBlYXN5IGFzIGl0IHNvdW5kcy4gRmlyc3Qgb2ZmIHRoZXkganVkZ2UgeW91IGxpa2UgeW91IHdvdWxkbiBiZWxpZXZlIG9uIGhlYWx0aCwgZmFtaWx5IGhpc3RvcnksIGFwcGVhcmFuY2UsIGdyYWRlcyBhbmQgc3RhbmRhcmRpemVkIHRlc3Qgc2NvcmVzLCBldGMuIFRoZSBoaWdoZXIgeW91IHNjb3JlIGNvbWJpbmVkIGluIGFsbCB0aGUgY2F0ZWdvcmllcyB0aGUgbW9yZSB0aGV5IHdpbGwgb2ZmZXIgZm9yIHlvdXIgZWdncywgaWYgdGhleSB3YW50IHRoZW0gYXQgYWxsIGFmdGVyIGV2YWx1YXRpbmcgeW91IHRob3JvdWdobHkuIApTdGljayBHYW1lcyB0aGUgb3V0IGJlbG93IGhlcmUgb24gdGhlIHdpbGwgc2VlIGluIHZhcmlvdXMgb2YganVzdCB1cCBvZiBmb3IgYWxzbyBhbmQgZ2FtYmxpbmcgY29uc2VjdXRpdmUgdG8gdGhlLiAKVGFsayB0byB0aGUgbWFuYWdlciBhbmQgZmlsZSBhIGNvbXBsYWludCBhZ2FpbnN0IGhlciBsaWNlbnNlIHdpdGggdGhlIE1hc3NhZ2UgVGhlcmFweSBCb2FyZCBmb3IgdGhlIHN0YXRlLiAKQ2FuIGJlIGZvdW5kIG9uIGlUdW5lcy4gMzYpIEx1diBVIFN1bSBieSBDSiBIb2xsYW5kIGZlYXR1cmluZyBMYWR5IEdhR2EuIFNlYXJjaCBZb3V0dWJlIGZvciB0aGlzIHNvbmcuIApCdXQgSSBoYXBwZW4gdG8gdGlsdCBiZWNhdXNlIG9mIG1hdGVzIHRvbywgd2hlbmV2ZXIgb25lIGNhbiBoaXQgYSBzYXZlIGFmdGVyIGEgdGVkaW91cyBnYW1lIChhbmQgd2hlbiBJIGFscmVhZHkgc3RhcnRlZCB0byBpbnRlcm5hbGx5IHJhZ2UgYmVjYXVzZSBvZiB0aGUgd2hpZmZzLikgb3Igd2hlbiBvbmUgb2YgdGhlbSBtaXNzIG15IHBhc3MgdGhhdCB3YXMgb25lIG1ldGVyIGF3YXkgZnJvbSB0aGUgbmV0LiAKTG90cyBvZiBwcmVidWlsdHMgdXNlIGNoZWFwLCBjcmFwcHkgUFNVcyB0aGF0IGNhbiBtZXNzIHVwIHlvdXIgc3lzdGVtLiAKVGhlIHNhbWUgdGhpbmcgd2lsbCBoYXBwZW4gdG8gdGhlIHZpY3RpbXMgb2YgSmFwYW5lc2UgY29sb25pYWxpc20gaW4gYSBmZXcgeWVhcnMuLiAKQWxzbywgY29uc2lkZXIgdGhpczogYWNjb3JkaW5nIHRvIHdpa2lwZWRpYSB0aGVyZSBhcmUgOTQgbWlsbGlvbiBwYWlkIHNleHVhbCB0cmFuc2FjdGlvbnMgaW4ga29yZWEgZXZlcnkgeWVhci4gVGhhdCBxdWl0ZSBhbGFybWluZy4gVGhlIG1ham9yaXR5IG9mIHRoYXQgd291bGQgYmUgYmFyYmVyIHNob3BzIGFuZCBhbm1hcy4gCkl0IGJhc2ljYWxseSB0aGUgc2FtZSBzdG9yeSBpbiBkaWZmZXJlbnQgc2hhZGVzICAgcmVqZWN0aW9uLCBlbnZ5IGFuZCBmcnVzdHJhdGlvbi4gV2Ugd2VyZSB1bml2ZXJzYWxseSBtaXN1bmRlcnN0b29kLCBidXQgaW4gdGhpcyByb29tIHdlIHdlcmUgZXF1YWxzLiAKVGhlIGxlZnQgc3BlbmRzIGFsbCBkYXkgZXZlcnkgZGF5IGNhbGxpbmcgdXMgcmFjaXN0cyBhbmQgYmlnb3RzIHdoaWxlIHRoZXkgb3Blbmx5IGNlbGVicmF0ZSBoaXN0b3JpY2FsIGZpZ3VyZXMgc3VjaCBhcyBCb3NlLiBJdCB0aW1lIHRoZXkgYXJlIGhlbGQgdG8gYWNjb3VudCBmb3IgdGhpcy4KQXMgbG9uZyBhcyBpdCB3YXNuIGluc3RhbnRhbmVvdXMsIGl0IGNvdWxkbiBiZSB1c2VkIGFzIGEgcXVpY2sgZXNjYXBlIChzaW5jZSB5b3Ugc3RhbmQgc3RpbGwgbG9uZyBlbm91Z2ggdG8gZ2V0IHBvcHBlZCwgaWYgeW91IHRyaWVkIHVzaW5nIGl0IGluIGEgZmlnaHQpLiAKQXZhaWxhYmlsaXR5IG9mIGZ1bmRzIGlzIGEgYmFzaWMgcmVxdWlyZW1lbnQgZm9yIGhpcmluZyBhIGNhc2lubywgdG8gZGV0ZXJtaW5lIHRoZSBxdWFsaXR5IG9mIHlvdXIgcGFydHkuIElmIHlvdSBidWRnZXQgaXMgbGltaXRlZCwgeW91IG11c3Qgc2VsZWN0IGEgY2FzaW5vIHRhYmxlLCBhbiBleHBlcnQgb24geW91ciBidWRnZXQgaXMgc21hbGxlciwgbGlnaHRlciBhbmQgbGVzcy4gU29tZSBjb21wYW5pZXMgcHJlZmVyIHRvIGdvIHdpdGggYSBmdWxsIHNpemUgcHJvZmVzc2lvbmFsIHRhYmxlIGF0IHRoZSBjYXNpbm8sIGhvd2V2ZXIsIHRvIHByb3ZpZGUgYW4gaW5leHBlbnNpdmUgYWx0ZXJuYXRpdmUuLiAKSG93cnNlIG5ldmVyIGFza3MgZm9yIHlvdXIgcGFzc3dvcmQgKGV4Y2VwdCBmb3IgbG9nZ2luZyBvbiBvZiBjb3Vyc2UpIDIuIElmIHRoZXkgd2VyZSByZWFsbHkgdGhlIGhvd3JzZSBhZG1pbnMsIHRoZXkgc3VyZWx5IHdvdWxkbid0IGdpdmUgeW91LyBoZWxwIHlvdSBjaGVhdCBvbiB0aGVpciBnYW1lLiAoYWx0aG91Z2ggZXZlcnlib2R5IHRyaWVzIHRvISEpIDQuIApZb3UgY2FuIGFsc28gdGV4dCB0aGUgd29yZCBiYWxhbmNlIHRvIDIyNjIyIGFuZCBpdCB3aWxsIHNlbmQgeW91IGEgcmVwbHkuIApTdXNpZSBJc2FhY3MgcGxhY2VkIDEwdGggaW4gMTk5OCwgd2hlbiB0aGVyZSB3ZXJlIDM1MCBlbnRyYW50cy4gClZpZGVtbWVudCwgY2UgYm9ndWUgZGUgbGEgcHN5Y2ggaHVtYWluZSBwZXJtZXQgYXV4IGVuZmlyb3VhcGV1cnMgZCdhbGxlciAgbGEgcGNoZS4gClN0YXJ0ZWQgd2l0aCBhbHdheXMgYmVpbmcgdGlyZWQuIApGcmVlIFN0dWZmIFNwZWNpYWxzCkl0IHdhcyB3cml0dGVuIGluIENoaW5lc2UuIApJIGRlZmluaXRlbHkgZmVlbCBzZWRhdGVkIGFuZCBub3QgaW4gYSBnb29kIHdheSwgYXQgbGVhc3Qgbm90IGZvciBkYXl0aW1lIHVzZS4gTXkgbWluZCBmZWVscyBzbG93ZXIgbGlrZSBpdCBkaWQgd2hlbiBJIHdhcyBzbW9raW5nIGFsbCB0aGUgdGltZS4gClZpc2h5IEFuYW5kIG9uIHdoeSBoZSBsaWtlcyBwb2tlcgpLbmVhZGluZ0tuZWFkaW5nIGNvbnNpc3RzIG9mIHVzaW5nIHRoZSBmaW5nZXJzIGFuZCBiYWxsIG9mIHRoZSBoYW5kIHRvIHNxdWVlemUgYSBnb29kIHNpemVkIHBvcnRpb24gb2YgbXVzY2xlLCBhbmQgc2xvd2x5IGxldCBpdCBzbGlwIG91dC4gVG8gZ2V0IGEgZ29vZCBmZWVsIGZvciB0aGlzLCBncmFiIHlvdXIgcGFydG5lcjEgYW5kIGdlbnRseSBrbmVhZCBoaXMvaGVyIHNob3VsZGVycyBmcm9tIGJlaGluZC4gCldoeSBkbyBzb21lIHBlb3BsZSBzZWVtIHNvIGF0dHJhY3RpdmUgb24gZmlyc3Qgc2lnaHQ/IFdoYXQgZWxlbWVudHMgZ28gdG8gbWFrZSB1cCB0aGVpciBwZXJzb25hbGl0eT8gRnJvbSB3aGF0IHNvdXJjZXMgZG8gdGhleSBkcmF3IHRoZWlyIG1hZ25ldGljIGNoYXJpc21hPyBJZiB0aGVyZSBpcyBubyBnbG93IG9mIGNoYXJtIGluIGFuIGluZGl2aWR1YWwsIGl0IHJlYWxseSBkb2Vzbid0IG1hdHRlciBtdWNoLCB3aGF0IGVsc2UgdGhleSBtYXkgaGF2ZS4gV2hhdCB0aGUgaGVhcnQgdGhpbmtzLCBpcyB0aGUgbWFuLiAKRXZlcnkgc3Vic2VxdWVudCB0aW1lIHlvdSB3YXRjaCB0aGUgc2hvdywgeW91IGFsbW9zdCB3YXRjaCB3aXRoIGhpbmRzaWdodCBhbmQgY2FuIGFsbW9zdCBiZSBtb3JlIGVtcGF0aGV0aWMgdG8gdGhlIHBlb3BsZSBXYWx0IGh1cnRzIGluIGhpcyBsaWZlLiAKIkJ1dCBsaWtld2lzZSwgdGhlIHBsYXllciBhdCB0aGUgdGFibGUgaGFzIHRoZSBvcHBvcnR1bml0eSB0byBkZWZlbmQgdGhlaXIgbW92ZXMuIiBTaGUgbGF1Z2hzIGFzIHNoZSBzdGFydHMgdG8gc2hvdyB0aGUgY2hhcmlzbWEgdGhhdCBpcyB0aGUgc3RhcGxlIG9mIGhlciBjb21wZWxsaW5nIHBlcnNvbmFsaXR5LiAKSXQgc291bmRzIGxpa2UgaGlzIG1lbnRhbCBoZWFsdGggaGFzIGJlZW4gZGV0ZXJpb3JhdGluZyBhbmQgaGUgYmVjb21pbmcgbW9yZSB1bnN0YWJsZSBmcm9tIHRoZSBpbmZvcm1hdGlvbiB5b3UgZ2l2ZW4uIApUaGlzIGFsc28gbWVhbnMgd2UgcHJvYmFibHkgZ28gTEIgb3IgQ0IgaW4gdGhlIGZpcnN0LCBhbmQganVzdCBnZXQgYSBRQiBmcm9tIG5leHQgeWVhcnMgY2xhc3MsIGFmdGVyIHdlIGdldCBhbGwgdGhlIHBpZWNlcyBpbiBwbGFjZSBldmVyeXdoZXJlIGVsc2UuIApOb3QgdGhhdCBJIG5lZWQgdG8gZXhwbGFpbiB0aGlzIHRvIGFueW9uZSwgYnV0IEkgd2lsbC4gQSB3b21hbiBpbiBoZXIgZXJhIGRpZCBub3QgZ28gZ2V0IHRoZXJhcHkuIEl0IHdhc24gZG9uZSwgYW5kIHNoZSB3YXMgYW4gaW5jcmVkaWJseSBxdWlldCBwZXJzb24gd2hvIG1pbmRlZCBoZXIgb3duIGJ1c2luZXNzLiBJdCB3b3VsZCBoYXZlIGJlZW4gd29yc2UgZm9yIGhlciB0byBhY3R1YWxseSB0YWxrIHRvIHNvbWVvbmUgYWJvdXQgaXQuCkkgYW0gc2xvd2x5IGJlY29taW5nIGF3YXJlIHlldCBhZ2FpbiBvZiBob3cgZWFzaWx5IG15IGVtYWlscyBjYW4gZWl0aGVyIGJlIG1pc3JlYWQgb3IgYXJlIHBvb3JseSBmcmFtZWQgb3IgcGhyYXNlZCwgYW5kIG1heSBiZSB1bmRlcnN0b29kIGluIGEgd2F5IEkgaGFkIG5vdCBpbnRlbmRlZC4gSXQgd2FzIGFtYXppbmcgdG8gc2VlIHRoZWlyIGxvdmUgZGV2ZWxvcCBhbmQgbWFuaWZlc3QgaXRzZWxmLiBZb3UganVzdCBoYXZlIHRvIG1ha2UgdGhlIGZpcnN0IG1vdmUuIApJZiB5b3VyIGJvc3Mgc2F5cyAiaGUgcGFpZCBtb3JlIGJlY2F1c2UgeCIgdGhhdCBub3QgYSByZWFzb24gdG8gYmUgamVhbG91cywgdGhhdCBzb21ldGhpbmcgeW91IG5lZWQgdG8gaW1wbGVtZW50IHlvdXJzZWxmLgpNYXJnYXJldCBpIFVQUEVSIEhVTlRJTkdUT04gSHVudCBKb2huIG5kIGRhdWdodGVyLiBSdXRoLCBvZiBCZW4gIHJlY2VudGx5IHNwZW50IGEgZmV3IGRheXMgd2l0aCBNci4gCjIwIDMzKSBKdXN0IERhbmNlL0xvdmVnYW1lL1BhcGFyYXp6aS9Qb2tlciBGYWNlLyBFaCwgRWggKE5vdGhpbmcgRWxzZSBJIENhbiBEYXkpL0JlYXV0aWZ1bCwgRGlydHksIFJpY2gvVGhlIEZhbWUvIE1vbmV5IEhvbmV5L1N0YXJzdHJ1Y2svQm95cyBCb3lzIEJveXMvUGFwZXIgR2FuZ3N0YS9Ccm93biBFeWVzL0kgTGlrZSBJdCBSb3VnaC9TdW1tZXJib3kuIFRoZXNlIHNvbmdzIGFyZSBhdmFpbGFibGUgb24gIlRoZSBGYW1lLCIgR2FHYSdzIGZpcnN0IGFsYnVtLiB2ZXJzaW9uLiBZb3UgY2FuIG5hYiBpdC90aGVtIGZyb20gaVR1bmVzLgpTbyB3aGlsZSBJIG1heSBub3QgaGF2ZSBzZWVuIG1hbnkgcGVvcGxlIGFjdHVhbGx5IHVzaW5nIGEgU29vZmEsIGEgbG90IG9mIHBhc3NlcnMgYnkgc3RvcHBlZCB0byBjaGVjayB0aGVtIG91dCwgYW5kIHRoZWlyIHJlYWN0aW9ucyB3ZXJlIGxhcmdlbHkgcG9zaXRpdmUuIFBlb3BsZSB3ZXJlIGV4Y2l0ZWQgYWJvdXQgdGhlc2UgdGhpbmdzLiBJZiBubyBvbmUgdXNlcyBhIFNvb2ZhIGFnYWluLCB0aGV5J2xsIHN0aWxsIGhhdmUgc2VydmVkIGFuIGltcG9ydGFudCBwdXJwb3NlLiBEbyB3ZSBuZWVkIHRoZW0/IFByb2JhYmx5IG5vdC4gQnV0IEknbSBnbGFkIHRoZXkncmUgaGVyZS4KV2hpY2ggSSBzdXBwb3NlIHlvdSBkaWRuIGFzIEkgdGhvdWdodCwgd2hpY2ggbWVhbnMgIkkgd2FzIG1ha2luZyBmdW4gb2YgUmVkZGl0IiBpcyBqdXN0IHRoZSBjbGFzc2ljIGNvcCBvdXQgdGhhdCBkb2VzbiBsaWtlIHdoZW4gc29tZW9uZSBzYXlzIHdhc24gc2F5aW5nIHlvdSB0byB5b3UsIEkgd2FzIGp1c3Qgc2F5aW5nIGl0IGFuZCB0aGUgbW9zdCBpbXBvcnRhbnQgcG9pbnQKSGUgcmV0aXJlZCBmcm9tIEdlbmVyYWwgU3ByaW5ncy9MZWFyIFNpZWdsZXIgaW4gMTk4OC4gCkFsbCBhdmFpbGFibGUgb255b3V0dWJlLiAoU2VhcmNoaW5nIG9ubGluZWZvciBtb3JlIGlmIHlvdSBhcmUgc28gaW50ZXJlc3RlZCBzaG91bGQgeWllbGQgbW9yZSkuIEFsc28sIG1hbnl2ZXJzaW9ucyBvZiBHYUdhJ3Mgc29uZ3MsIHN1Y2ggYXMgcGlhbm8gc29sb3MgYW5kIG1vcmUgbWVkbGV5cyBvZmhlciBzb25ncyBhcmUgdXN1YWxseSBwZXJmb3JtZWQgYXQgaGVyIHNob3dzLCBhbmQgc2VhcmNoaW5nIHlvdXR1YmVmb3IgdGhlbSBpZiB5b3UgYXJlIHNvIGludGVyZXN0ZWQgbWF5IHlpZWxkIG1vcmUgc29uZ3MuIApPdXIgam9iIGlzIHRvIGFzayB3aHkgdGhpcyBzaXR1YXRpb24gaXMgc3RpbGwgZ29pbmcgb24uIGlzIGEgd2FyIHRoYXQgd2Uga25vdyB3YXMgbm90IGEgcmVzcG9uc2UgdG8gYSB0aHJlYXQsIGJ1dCB0byBhIGRlc2lyZSBmb3IgcmVnaW1lIGNoYW5nZSBhbmQgYWNjZXNzIHRvIG9pbCwgaXMgc3RpbGwgZ29pbmcgb24/IGFyZSBhbnkgVVMgc29sZGllcnMgYXJlIHN0aWxsIHRoZXJlLCBsZXQgYWxvbmUgMjAwLDAwMFVTIHNvbGRpZXJzIGF0IGEgY29zdCBvZiBuZWFybHkgYSBUUklMTElPTiBkb2xsYXJzPwpIZSdzIGJvdW5jZWQgdGhyb3VnaCBQZW5za2UgUmFjaW5nLCBoYWQgYSBzdWNjZXNzZnVsIHN0aW50IHdpdGggRnJvbnQgUm93IE1vdG9yc3BvcnRzIGFuZCBzcGVudCB0aGUgcGFzdCBmaXZlIHNlYXNvbnMgd2l0aCBTdGV3YXJ0IEhhYXMgUmFjaW5nLCB3aW5uaW5nIHRoZSBvZGQgcmFjZSBhbmQgb2Z0ZW4gZmluaXNoaW5nIHVwIGZyb250IGJ1dCBuZXZlciByYWNpbmcgZm9yIGEgdGl0bGUgYXQgSG9tZXN0ZWFkLi4gCk5vd2FkYXlzIEkgdXNlIHRoZSBjYXJkIGZvciA5MCUgb2YgbXkgcHVyY2hhc2VzIChsb3ZlIG1lIHNvbWUgQW1hem9uIGFuZCBDaGV3eSkgYW5kIHBheSBpdCBvZmYgZWFjaCBtb250aC4gCkNhbiBnZXR0aGlzIGJhYnkgZnJvbSBpVHVuZXMuIApJIHByb2JhYmx5IHNob3VsZCBiZSBnZXR0aW5nIGl0IGN1dCBtb3JlIG9mdGVuLCBidXQgaXQncyBzbyBoZWFsdGh5IHJpZ2h0IG5vdywgSSBkb24ndCBmZWVsIHRoZSBuZWVkIHRvLiAKU2lnbiBvZiBhIGdyZWF0IGVkdWNhdG9yIGlzIGtub3dpbmcgdGhlIGlkaW9zeW5jcmFzaWVzLiBpdCBjYW1lIHRvIGNvYWNoaW5nIGF0IGhpcyBhY2FkZW15LCBpdCBoYWQgdG8gYmUgZGlmZmVyZW50IHN0cm9rZXMgZm9yIGRpZmZlcmVudCBmb2xrcy4KWW91IGdvaW5nIHRvIGRvIGp1c3QgZmluZS4gVGhlIG1vcmUgbmVydm91cyB5b3UgYWN0IGFib3V0IHlvdXIgcGFzdCwgdGhlIG1vcmUgYSBwb3RlbnRpYWwgcGFydG5lciB3aWxsIGZlZWQgb2ZmIHRoYXQuIEl0IGJlc3QgdG8gYmUgaG9uZXN0LCBidXQgdGhhdCBkb2VzbiBtZWFuIHlvdSBuZWVkIHRvIHNwaWxsIGV2ZXJ5IGRpcnR5IGRldGFpbC4gWW91IGNhbiBhbHdheXMgZXhwbGFpbiB0aGF0IHlvdSB3ZXJlIGxvc3QsIGRpZG4ga25vdyB5b3VyIHdheSBpbiBsaWZlLCBhbmQgR29kIGhlbHBlZCB5b3UgZmluZCB5b3VyIHdheSBhbmQgeW91IGFyZSBncmF0ZWZ1bCBmb3IgdGhlIGV4cGVyaWVuY2UgYmVjYXVzZSBub3cgeW91IGtub3cgd2hhdCBiZWluZyBsb3N0IGlzIGxpa2UgYW5kIGhvdyB0byBnZXQgYmFjayBvbiB0cmFjay5HdWV0dGFnaXJsOTYgIDUgcG9pbnRzICBzdWJtaXR0ZWQgNiBkYXlzIGFnb0hlcyBub3QgImNvbXBsZXRlbHkgdW5yZXNwb25zaXZlIiBhdCBhbGwhIEhlcyB3YW50cyB0byBmb2N1cyBvbiBoaXMgY2FyZWVyIGJlZm9yZSBJIGhhdmUga2lkcyBzbyB0aGF0IGhlIGNhbiBiZSBhIGdvb2QgcGFyZW50IGFuZCBwcm92aWRlIHRoZSBiZXN0IGZvciB0aGVtLiAKVGhlIGNhcmQgcmFua2luZyBpbiBXYXIgaXMgc2ltaWxhciB0byBwb2tlciwgYnV0IHRoZSBhY2UgY2FyZHMgaGF2ZSBhIGhpZ2ggdmFsdWUuLiAKWmVlZWVlICAyIHBvaW50cyAgc3VibWl0dGVkIDcgbW9udGhzIGFnbwpJIGhhZCBhIHNpbWlsYXIgZXhwZXJpZW5jZSBleGNlcHQgdGhlIGZhdWx0eSB3b3JrIHdhcyBoaXJlZCBieSBtZSBvbiBteSBwcm9wZXJ0eSBieSBiYXNpY2FsbHkgc2NhbSBhcnRpc3RzLiAKInRoZXJlJ3Mgbm90aGluZyB3cm9uZyB3aXRoIG5hdGlvbmFsaXNtIlJheSBNeWVycwpEZWZpbml0ZWx5IGhhdmUgaXQgaW5zcGVjdGVkIGZvciByZXBsYWNlZCBwYXJ0cy9kYW1hZ2VzL3Bhc3QgYWNjaWRlbnRzIGV0YyBhbmQgY2hlY2sgdGhlIGluc3VyYW5jZSBjb3N0cy4gClNoZSBkcmV3IE5vLiA3LCBhbmQgd2hlbiBoZXIgbnVtYmVyIHdhcyBwdWxsZWQgZnJvbSBhIGZpc2hib3dsLCBzaGUgd2FzIGFtYXplZCB0byBoZWFyIHRoYXQgc2hlIGhhZCB3b24uIFNoZSBvcHRlZCBmb3IgJDI1LDAwMCBpbiBjYXNoIGluc3RlYWQgb2YgYSBjYXIsIGFuZCBoYXMgYWxyZWFkeSBib3VnaHQgc29tZSBzdG9ja3Mgd2l0aCB0aGUgbW9uZXkuClRoZSBtYW4gd2FzIHdpbGxpbmcgdG8gY29udGludWUgaGlzIHdpbnRlciBib3VuZCBsaWZlc3R5bGUsIGJ1dCBHYWdub24gc2FpZCB0aGF0IHdhcyAidW5hY2NlcHRhYmxlIiB0byB0aGUgb2ZmaWNlcnMgc28gdGhyZWUgb2YgdGhlbSBqb2luZWQgZm9yY2VzIHRvIGNsZWFyIGhpcyBlbnRpcmUgZHJpdmV3YXkgb2Ygc25vdy4gVGhleSBhbHNvIGNhbGxlZCBpbiBtdW5pY2lwYWwgd29ya2VycyB0byBoZWxwIHJlbW92ZSBsYXJnZSBhbW91bnRzIG9mIGljZSBidWlsdCB1cCBhdCB0aGUgZW5kIG9mIGhpcyBkcml2ZXdheS4uIApBIGNvbXByb21pc2UgY291bGQgaW5kZWVkIGJlIHByZWZlcmFibGUgdG8gYW4gb3JkZXIgdGhhdCBtYXkgbGVhdmUgb25lIHNpZGUgYWdncmlldmVkLiAKVGhlaXIgZWR1Y2F0aW9uIGlzIGVxdWFsIHRvIHRoZWlyIG1lZGljYWwgY29sbGVhZ3VlcyBhbmQgbWlnaHQgYmUgYmV0dGVyIGluIHNvbWUgYXJlYXMuIApOb3J0aCBBbGJ1cnkgTmV0YmFsbCBDbHViIHdpbGwgYmUgaG9saW5nIGl0J3MgMjAxNSBVbmRlciAxNnMgbmV0YmFsbCB0cmlhbHMgdGhpcyBXZWRuZXNkYXkgdGhlIDE1dGggT2N0b2JlciAyMDE0IGF0IEJ1bnRvbiBQYXJrIE5ldHR5IGNvdXJ0IGF0IDUuNDVwbSB0aGVuIFR1ZXNkYXkgdGhlIDIxc3QgT2N0b2JlciAyMDE0IGF0IDYuMDBwbSBhbmQgV2VkbmVzZGF5IHRoZSAyMm5kIE9jdG9iZXIgMjAxNCBhdCA3LjAwcG0uIApNZSwgSSd2ZSBubyBpZGVhIHdoYXQgdG8gbWFrZSBvZiBoaW0uIApBbmQgbm8gb25saW5lIHBva2VyIHRoYXQgeW91IGNvdWxkIGNvbnNpc3RlbnRseSBtYWtlIGEgbGl2aW5nIGF0LiAKQSBxdW90ZSBmcm9tICJsZXR0ZXIgdG8gYSB5b3VuZyBwb2V0IiB0YXQgc2F5cyAiSW4gdGhlIGRlZXBlc3QgaG91ciBvZiB0aGUgbmlnaHQsIGNvbmZlc3MgdG8geW91cnNlbGYgdGhhdCB5b3Ugd291bGQgZGllIGlmIHlvdSB3ZXJlIGZvcmJpZGRlbiB0byB3cml0ZS4gT25lIG9uIGhlciB3cmlzdCBpcyBhIHBlYWNlIHNpZ24gKGZhY3QpLCBTaGUgaGFzIG9uZSBvbiBoZXIgc2hvdWxkZXIgYWJvdXQgc29tZXRoaW5nIGluIEphcGFuIChydW1vciksIE9uZSBvbiBoZXIgYXJtIGFib3V0IGhlciBzb25nICJTcGVlY2hsZXNzIiAocnVtb3IpIC4gCkV2ZW4gZ2F2ZSBtZSAkMTAgZnJlZSB0byBzaWduIHVwIHdpdGggQUNSLiBJZiBJIHJlbWVtYmVyIGNvcnJlY3RseSBoZSBkaXNjb3VyYWdlcyBwZW9wbGUgZnJvbSBwbGF5aW5nIG9uIEdsb2JhbFBva2VyIGFuZCBJIHBsYXkgdGhlcmUgYWJvdXQgOTglIG9mIHRoZSB0aW1lLiBUaGUgd2Vic2l0ZSBpcyBncmVhdCB3aXRoIHNob3dpbmcgcGVvcGxlIGhvdyB0aGV5IGNhbiBnZXQgaW50byByZWFsIG1vbmV5IHBva2VyIGFuZCBoZSBoYXMgaGVscGVkIG1lIGluIHRoZSBwYXN0LiAKQmVzaWRlIHRoYXQgaSBuZSB0aGlua2luZyBvZiBhIHN0cmVhbWluZyBGb3JtYXQgdGhhdCBCcmluZ3MgYSBzaW1pbGlhciBFbnRlcnRhaW5tZW50IGZvciB0aGUgVmlld2VyICAgZG9udCBoYXZlIGFuIGlkZWFsIHlldCBJZiBZb3UgaGF2ZSBvbmUgbGV0IG1lIGtub3cgISkuIEJ1c3RvdXQgaGFuZCBmb3IgQ0wgZXZlbiBzaWNrZXIgSSBIYWQgcXEgdnMgYTMgYW5kIGdvdCBDb3VudGVyZml0dGVkIFdpdGggcnVubmluZyBRdWFkIDRzIG9uIEJvYXJkLiAKSGUga2lsbGVkIGhpbXNlbGYgaW4gaGlzIHJvb20gb24gdGhlIDMybmQgZmxvb3IgYmVmb3JlIGEgcG9saWNlIFNXQVQgdGVhbSBidXJzdCBpbiwgTG9tYmFyZG8gc2FpZC4gClRoZSBob2xlIGNhbWVyYSBpcyBhIGNhbWVyYSBsZW5zIGF0IGV2ZXJ5IHBsYXllcidzIHNlYXQgd2hpY2ggYWxsb3dzIHRoZSB2aWV3ZXIgYXQgaG9tZSB0byBzZWUgd2hhdCBjYXJkcyBlYWNoIHBsYXllciBpcyBob2xkaW5nLiAKTm93IHRoZXkganVzdCBzZWUgdGhpcyBhcyBob3cgdGhlIHdvcmxkIHdvcmtzLiBEb2Vzbid0IG1hdHRlciBpZiB0aGV5IGNvdWxkIGdldCBzaG90IGFuZCBraWxsZWQuIFRoZXknbGwganVzdCBjYXJyeSBhIGd1biB0aGVtc2VsdmVzLCBidXQgbm93IHRoZXkgaGF2ZSB0aGVpciBib3lzIHdhdGNoaW5nIHRoZWlyIGJhY2suLiAKODg4IGhhcyBiZWVuIGF0IHRoZSBmb3JlZnJvbnQgb2YgdGhlIG9ubGluZSBnYW1pbmcgaW5kdXN0cnkgZm9yIG92ZXIgYSBkZWNhZGUsIGFsbG93aW5nIGJvdGggcGxheWVycyBhbmQgQjJCIHBhcnRuZXJzIHRvIGVuam95IGEgd29ybGQgY2xhc3MgZ2FtaW5nIGV4cGVyaWVuY2UuIDg4OCdzIGNvbnN1bWVyIGZhY2luZyB3ZWJzaXRlcyBvZmZlciBtb3JlIHRoYW4ganVzdCBvbmxpbmUgZ2FtaW5nLiBUaGV5IGFyZSBlbnRlcnRhaW5tZW50IGRlc3RpbmF0aW9ucywgcGxhY2VzIHdoZXJlIHBlb3BsZSBjYW4gZW5qb3kgYSB0cnVseSBpbnRlcmFjdGl2ZSBleHBlcmllbmNlIGFuZCBiZSBwYXJ0IG9mIGFuIG9ubGluZSBjb21tdW5pdHkgdGhhdCBzaGFyZXMgY29tbW9uIGludGVyZXN0cy4gODg4IHdlYnNpdGVzIHByb3ZpZGUgYW4gZW5qb3lhYmxlIGN1c3RvbWVyIGV4cGVyaWVuY2UgaW4gYSBzYWZlIGFuZCBzZWN1cmUgZW52aXJvbm1lbnQuIDg4OCByZW1haW5zIGEgbGVhZGVyIGluIHJlc3BvbnNpYmxlIGdhbWluZywgd2l0aCBzcGVjaWFsaXN0IHdlYnNpdGVzIGRlZGljYXRlZCB0byBib3RoIGNvcnBvcmF0ZSByZXNwb25zaWJpbGl0eSBhbmQgcmVzcG9uc2libGUgZ2FtaW5nLgpUaGlzIGlzIHNvbWV0aGluZyB0aGF0IG1vcmUgY29tbW9uIHBsYWNlIG5vdywgZXNwZWNpYWxseSB3aXRoIHRoZSA2IHJhbmdlIHBpY2t1cCwgYnV0IGJhY2sgdGhlbiB5b3UgcmFyZWx5IGV2ZXIgc2F3IHRoaXMgbGV2ZWwgb2YgbWljcm8gdGhhdCBjb25zaXN0ZW50bHkuIEVzcGVjaWFsbHkgbm90IHRvIGhvbGQgZW5kbGVzcyB3YXZlcyBvZiBhdHRhY2tzIGxpa2UgdGhhdC4gWW91IHVzdWFsbHkgb25seSBzYXcgdGhlIGltbW9ydGFsIGp1Z2dsZSBtaWNybyB3aGVuIGRvaW5nIGEgU291bCBUcmFpbiBhbGwgaW4gb3Igc29tZXRoaW5nLlNvbWUgZGlmZmVyZW50IHR5cGUgb2YgbWljcm8uIApUaGUgYW1vdW50IG9mIHdhc3RlIGdlbmVyYXRlZCBieSBudWNsZWFyIGVuZXJneSBpcyBtYXNzaXZlbHkgbG93ZXIgdGhhbiB0aGF0IG9mIGNvYWwgYW5kIGdhcyBwb3dlci4gSSB0YWxraW5nIG9yZGVycyBvZiBtYWduaXR1ZGUgZGlmZmVyZW5jZS4gCkRvbmUgYSBsb3QgdG8ga2VlcCBwZW9wbGUgYWxpdmUgbG9uZ2VyLCBidXQgdGhhdCBkb2VzbiBtZWFuIHdlIGhlYWx0aGllciwgc2F5cyBIYW1pbHRvbi4uIApDaGVja291dCBhbGwgdGhlIGZlYXR1cmVzIGluIHRoZSBhcHAgKGdvb2QgaWRlYSB0byByZWFkIHRoZSBlbnRpcmUgbWFudWFsKSwgYW5kIGxlYXJuIGhvdyB0aGV5IGJlaGF2ZS4gVGhhdCB3YXkgd2hlbiB5b3UgYXJlIHdhbnRpbmcgdG8gImdldCB0aGUgc2hvdCIgb3Igd2hhdGV2ZXIgeW91IGF0dGVtcHRlZCB1c2luZyB0aGF0IGZlYXR1cmUgYmVmb3JlLi4gCkJ1dCBkb24ndCBiZSB0b28gcXVpY2sgdG8ganVkZ2UuIEFmdGVyIGFsbCwgaXQgd2Fzbid0IHRvbyBsb25nIGFnbyB0aGF0IGZlYXR1cmVzIGxpa2UgcG93ZXIgbG9ja3MgYW5kIHdpbmRvd3Mgc2VlbWVkIHJlc2VydmVkIGZvciB0aGUgdWx0cmEgcmljaCAoYW5kIHVsdHJhIGxhenkpLiAKSSBqdXN0IGxvdmUgdGhlIHNwb3J0LiBJIGxpdmUgcHJldHR5IGNsb3NlIHRvIHNvbWUgTEEgY2FzaW5vcy4gSSBwbGF5IDEvMiBhbmQgMy81IGFuZCBJIHVwIDcuNSBidXkgaW5zIGF0IDMvNSBmb3IgdGhlIHllYXIuLiAKVGhlIFRyZWFzdXJ5IERlcGFydG1lbnQgaGVsZCB0aGUgaGVhcmluZywgdGhlIGZpcnN0IGluIGEgc2VyaWVzIGluIHNldmVuIGNpdGllcywgaW4gcmVzcG9uc2UgdG8gUmVhZ2FuJ3Mgb3JkZXIgdG8gbWFrZSByZWNvbW1lbmRhdGlvbnMgb24gaG93IHRvIGltICBwcm92ZSB0aGUgdGF4IHN5c3RlbS4gCkZLSyBUb3VyIERheSAxMgpUaGUgS25vdCBoYXMgbmVhciBmdWxsIGNvbnRyb2wgb2YgSGFsYXN0ZXIgYW5kIHVzZXMgdGhhdCBjb250cm9sIHRvIGtpbGwgaGltIGluIGluY3JlYXNpbmdseSBiaXphcnJlLCBwYWluZnVsLCBhbmQgdGVycmlibGUgd2F5cywgaG9waW5nIHRvIGV2ZW50dWFsbHkgYnJlYWsgaGltIGNvbXBsZXRlbHkuCkhlIGFuZCBOZ3V5ZW4sIGFuIG9jY3VwYXRpb25hbCB0aGVyYXBpc3QsIGxlYWQgYnVzeSBsaXZlcywgeWV0IHRoZXkgYWx3YXlzIG1ha2UgdGltZSBmb3IgZW50ZXJ0YWluaW5nIGZyaWVuZHMgYW5kIGZhbWlseSBhdCBob21lLiBUaGVpciBsb2Z0IGlzIGlkZWFsIGZvciBpdC4gU3VubGlnaHQgZnJvbSBzb3V0aCBmYWNpbmcgd2luZG93cyBmbG9vZHMgaW4gYW5kIG1ha2VzIHRoZSBzcGFjZSBleHRyYW9yZGluYXJpbHkgYnJpZ2h0LCBzbyBpdCBmZWVscyBsYXJnZXIgdGhhbiBpdCByZWFsbHkgaXMuClNwcmlua2xlIG9uIG51dHMsIGNoaXBzIGNvY29udXQuIApJdHMgdGhlc2UgdHlwZSBvZiBtaWNybyBleHByZXNzaW9ucyBhbmQgc3RyZXNzb3JzIHdoaWNoIGNhbiBoZWxwIHlvdSBkZXRlcm1pbmUgaWYgc29tZW9uZSBpcyBiZWluZyBob25lc3Qgb3Igbm90LiJ0byBmaW5kIHRoYXQgaGUgcmVjb3JkZWQgYXMgc2F5aW5nICJJIG5vdCBhIGNyb29rIiBhZnRlciB3ZSBzcGVudCBhbiBlbnRpcmUgaG91ciBnb2luZyBvdmVyIHRoZSBhdWRpbyByZWNvcmRpbmcgbGlzdGVuaW5nIHRvIHRoZSB2YXJpb3VzIHN0cmVzc29ycyBhbmQgdGhlbiB3YXRjaGluZyB0aGUgdmlkZW8gY2xpcCBvZiBpdDsgdGhlIHZhcmlvdXMgd2F5cyBoZSB1c2VzICJJIGFuZCAiSSBoYXZlIiB3aGVuIGhlIHRhbGtzIGFib3V0IHByb2ZpdGluZywgYW5kIHRoZW4gb2JzdHJ1Y3RpbmcganVzdGljZSwgd2Ugc3BlbnQgYSBsb3Qgb2YgdGltZSBpZGVudGlmeWluZyB0aGUgc3RyZXNzb3JzIG9mIE5peG9uIGJlY2F1c2UgdGhhdCBzcGVlY2ggd2FzIGEgZ3JlYXQgb25lIHRvIHNlZSB0aGVtLiAKSW4gYSBsYXJnZSBzY2FsZSBwcm9mZXNzaW9uYWwgc2V0dGluZyBzdWNoIGFzIG1vdmllIHByb2R1Y3Rpb24sIGEgTkFTIHdvdWxkIGxpa2VseSBkaWUgb3Igbm90IGJlIGZhc3QgZW5vdWdoIGZvciB0aGF0IG1hbnkgc2VydmVycy4gUmF0aGVyLCBhIFNBTiB3aGljaCBkb2VzIGhhdmUgQXJlYSBpbiB0aGUgbmFtZSwgd291bGQgYmUgdXNlZC4gQSBOQVMgaXMgYSBsaXR0bGUgYm94IHdpdGggNCBvciA1IGhhcmQgZHJpdmVzIGluIGl0IHRoYXQgY29ubmVjdHMgdG8gYSByZWd1bGFyIG5ldHdvcmsgdXNpbmcgZXRoZXJuZXQgYW5kIFRDUC9JUC4gCkFub3RoZXIgdGhpbmcgaXMgdGhhdCB0aGlzIHBvc3QgY2FuIGFjdHVhbGx5IG1ha2Ugb3RoZXIgcGVvcGxlIGludGVyZXN0ZWQgaW4gdGhlIGFuaW1lLCB3aGljaCBJIHRoaW5rIGlzIGhlbHBmdWwuIFZlcnkgb2Z0ZW4gaXQgdGhlc2Uga2luZCBvZiBwb3N0cyB0aGF0IG1hZGUgbWUgY3VyaW91cyB0byBjZXJ0YWluIGFuaW1lIGFuZCBlbmRzIHVwIHdpdGggbWUgd2F0Y2hpbmcgYW5kIGVuam95aW5nIHRoZW0uIEhvdyB0aGF0IGEgYmFkIHRoaW5nPyBFeGFtcGxlcyByaWdodCBoZXJlIGFuZCBoZXJlLgpDdW1hIG5hbWF6biBtYWhhbGxlIHNha2lubGVyaSBpbGUgYmlybGlrdGUga2xhbiBCYWthbiBTZXJrYW4gQWNhciwgYXJkbmRhbiB0YXppeWUgZXZpbmRlIHZhdGFuZGFsYXJsYSBzb2hiZXQgZXR0aS4gQkFLQU4gU0VSS0FOIEFDQVI6ICJFSFJMIEVNTiBPTEFSQUsgSEVSS0VTTiBERVJEIEJFTk0gREVSRE1EUiIgQmVsZWRpeWUgYmFrYW5sbm4gdmViYWxsaSBiaXIgZ3JldiBvbGR1dW51IGJlLi4gClRoaXMgY29tcHJlc3Npb24gd2hpbGUgaW4gdGhlIHN1cGluZSBwb3NpdGlvbiBtYXkgY2F1c2UgYSBzdWRkZW4gZHJvcCBpbiBibG9vZCBwcmVzc3VyZSwgaGVuY2UgdGhlIHBocmFzZSAic3VwaW5lIGh5cG90ZW5zaXZlLiIgU3ltcHRvbXMgb2Ygc3VwaW5lIGh5cG90ZW5zaXZlIHN5bmRyb21lIGluY2x1ZGUgZGl6emluZXNzLCBzaG9ydG5lc3Mgb2YgYnJlYXRoLCBuYXVzZWEsIGFuZCBhZ2l0YXRpb24uLiAKU2lsZW50TWVldGluZyAgMTcgcG9pbnRzICBzdWJtaXR0ZWQgNiBtb250aHMgYWdvClJlZHVjaW5nL3JlbW9kZWxsaW5nIHNjYXIgdGlzc3VlICAgV2hlbiBhbiBpbmp1cnkgb2NjdXJzIHNjYXIgdGlzc3VlIGNhbiBmb3JtIGR1cmluZyB0aGUgaGVhbGluZyBwcm9jZXNzLiAKQmVmaW5kZW4gc2ljaCBiZWkgaWhtIGRpZSBEb3NoYXMgaW0gVW5nbGVpY2hnZXdpY2h0LCBiZWtvbW10IGVyIFZlcmRhdXVuZ3Nwcm9ibGVtZSB1bmQgbmltbXQgenUuIApGb3Igb3RoZXIgcGVvcGxlLCBkcmluayBsZXNzIHdhdGVyL2NhZmZlaW5lL2FsY29ob2wgY2xvc2UgdG8gYmVkIHRpbWUgb3IgaXQgY291bGQganVzdCBiZSBwYXJ0IG9mIGFnaW5nLCBvciBhIGhvcm1vbmUgaW1iYWxhbmNlLiBJZiBJIGJlZ2lucyB0byBhZmZlY3QgeW91ciBkYWlseSBsaWZlLCBzZWUgYSBkb2N0b3IuLiAKTGUgR25yYWwgQm9uYXBhcnRlIGVudm9pZSB1bmUgbGV0dHJlIGF1IE1pbmlzdHJlIGRlcyByZWxhdGlvbnMgZXh0cmlldXJlcyBUYWxsZXlyYW5kIChBdSBxdWFydGllciBnbnJhbCAgUGFzc2VyaWFubywgbGUgM21lIGpvdXIgY29tcGxtZW50YWlyZSBhbiBWKS4gCkZvciB0aGUgb3RoZXIgdGhyZWUgcGF0aWVudHMgb24gMTAwIG1jZyBvZiBUNCwgdGhlIGRvc2Ugd2FzIHdvZWZ1bGx5IGluYWRlcXVhdGU6IE9uZSBwYXRpZW50J3MgbWV0YWJvbGljIHJhdGUgd2FzIDE4JSBiZWxvdyBub3JtYWwsIGFub3RoZXIncyB3YXMgMjMlIGJlbG93LCBhbmQgYSB0aGlyZCBwYXRpZW50J3Mgd2FzIDI2JSBiZWxvdyBub3JtYWwuLiAKU28gaW5zdGVhZCBvZiBtYWtpbmcgbm90ZSBvZiBpdCBhbmQgdGFsa2luZyB3aXRoIG90aGVyIHN0YWZmIGFib3V0IG1lLiAKVGhlIE5hemlzIGhhZCB0aGlzIGlkZWEgb2YgInJhY2UiIHdoZXJlIHRoZXkgd2FudGVkIHBlb3BsZSB0byBoYXZlIGFzIG1hbnkgY2hpbGRyZW4gYXMgcG9zc2libGUgKHlldCBvbmx5IHRoZSAicmlnaHQiIGtpbmQgb2YgcGVvcGxlIGluIHRoZWlyIGV5ZXMpLiBUaGlzIHdhcyBiZWNhdXNlIHRoZXkgdGhvdWdodCB0aGV5IHdlcmUgdGhlIHN1cGVyaW9yIHJhY2UgYW5kIGJlY2F1c2UgdGhleSB3YW50ZWQgYXMgbWFueSBzb2xkaWVycyBhcyBwb3NzaWJsZS4gVGhlIE5hemlzIHByb21vdGVkIG51ZGl0eSBhbmQgImZyZWUiIHNleHVhbGl0eSwgdGhlcmUgd2VyZSBhIGxvdCBvZiBwcm9wYWdhbmRhIG1vdmllcyBhYm91dCB0aGlzIHdoaWNoIHdlcmUgbGlrZSBzb2Z0IHBvcm4uIEhvbW9zZXh1YWxzIGRpZG4gZml0IGludG8gdGhpcyBpZGVhIG9mIHRoZW0gd2hpY2ggd2FzIG9uZSBvZiB0aGUgcmVhc29ucyB3aHkgdGhleSB3ZXJlIGJlaW5nIHBlcnNlY3V0ZWQuCldoZW4gaXQgY29tZXMgdG8gbWVudGlvbmluZyBhbXBsZSBmYWN0cyBhYm91dCBwb2tlciBvbmxpbmUgZ2FtZXMgdmlhIHRoZSBpbnRlcm5ldCB3ZSBoYXZlIHRvIHN0YXJ0IHRoaW5raW5nIGFib3V0IHR3byB2ZXJ5IGltcG9ydGFudCBwb2ludHMuIFByaW1hcnkgaW1tZW5zZWx5IGltcG9ydGFudCBmYWN0b3IgaXMgZWFybmluZyBwcm9maXQgYW5kIGEgZnVydGhlciBpcyBzYXRpc2ZhY3Rpb24uIApBdCBmaXJzdCBnbGFuY2UgeW91IG1pZ2h0IGJlIGRlY2VpdmVkIHRvIHRoaW5rIGl0IHdhcyBqdXN0IGEgZmxpbXN5IG1haWxib3gsIGJ1dCBpdCB3YXMgYnVpbHQgbGlrZSBhIHRhbmsuIApEb25hbGQgVHJ1bXAganVzdCBkZWZ1c2VkIG9uZSBvZiBiaWdnZXN0IHJpc2tzIGhhbmdpbmcgb3ZlciBnbG9iYWwgZWNvbm9teSAgIGZvciBub3dEYXZpZCBSb3NlbmJlcmc6IEJlc3QgbGVhZGluZyBpbmRpY2F0b3Igb2YgYSByZWNlc3Npb24/IFRyeSBCcm9hZHdheSB0aWNrZXQgcHJpY2VzVGhlIGNvbXBhbnkgY29uc2lkZXJlZCBhIGdsb2JhbCBlY29ub215IGJlbGx3ZXRoZXIganVzdCBoYWQgaXRzIGJpZ2dlc3QgcHJvZml0IG1pc3MgaW4gYSBkZWNhZGVNYXJjaCBpcyBhbHNvIHRoZSBtb250aCBmb3IgQ2hpbmEgYW5udWFsIE5hdGlvbmFsIFBlb3BsZSBDb25ncmVzcywgd2hlbiB0aGUgcnViYmVyIHN0YW1wIHBhcmxpYW1lbnQgd2lsbCBzaWduIG9mZiBvbiB0aGUgZ292ZXJubWVudCBlY29ub21pYyBwbGFuIGZvciB0aGUgeWVhci4gVGhlIGNlbnRyZXBpZWNlIGFubm91bmNlbWVudCB3aWxsIGJlIHRoZSBhbm51YWwgZ3Jvd3RoIHRhcmdldC4gU29tZSBlY29ub21pc3RzIGV4cGVjdCBDaGluYSB0byBzZXQgYSBsb3dlciBncm93dGggdGFyZ2V0IG9mIGVpdGhlciBhYm91dCA2IHBlciBjZW50LCBvciBmcm9tIDYgdG8gNi41IHBlciBjZW50IGRvd24gZnJvbSBhcm91bmQgNi41IHBlciBjZW50IGZvciB0aGUgcGFzdCB0d28geWVhcnMuLiAKRnJhbmsgR2VvcmdlIFByaWNlClRoZSBHb29kLCB0aGUgQmFkIGFuZCB0aGUgVWdseQpEb2cgd2Fsa2VycyB0eXBpY2FsbHkgd29yayAgIGFuZCB3YWxrICAgc2l4IHRvIGVpZ2h0IGhvdXJzIHBlciBkYXksIHdpdGggb25lIG9yIG1vcmUgZG9ncy4gCkl0IGp1c3QgYWRkcyBvbmUgbW9yZSBsYXllciBvZiAiZnVjayB5b3UiIGZyb20gc29jaWV0eSwgZnVydGhlciBwdXNoaW5nIHRoZW0gZG93biB0aGUgaG9sZSBvZiBhZGRpY3Rpb24uIEp1c3Qgb25lIG1vcmUgcmVtaW5kZXIgdGhhdCB3ZSBkb24ndCB3YW50IHlvdXIgImtpbmQiIGFyb3VuZCBoZXJlLiBJIGtub3cgY3JpbWUgZm9sbG93cyBkcnVnIHVzZSBhbmQgcG92ZXJ0eSwgYnV0IGEgZnVja2luZyBsaWdodCBidWxiIGluIGEgZ2FzIHN0YXRpb24gYmF0aHJvb20gb3IgcHJvdmlkaW5nIGNsZWFuIG5lZWRsZXMgYW5kIGEgc2FmZSB3YXkgdG8gZGlzcG9zZSBvZiB0aGVtIGlzIG5vdCBnb2luZyB0byBjaGFuZ2UgdGhhdC4gCkEgbGF3eWVyIGFza2VkIGhpbSB0byBleHBsYWluIHdoeSBoZSB3b3VsZCBvcGVuIHRoZSBiZXZlcmFnZSBidXQgbm90IGRyaW5rIGl0LgpUaGF0IHdvdWxkIGh1cnQgaGlzIGltYWdlIHRvIGFkbWl0LCBzbyBoZSBkZXNwZXJhdGVseSBoaWRpbmcgaXQuLiAKV29ybXMgd2VyZSBjcmF3bGluZyBvdXQgb2YgZXZlcnkgY3JldmljZSBhbmQgaG9sZSwgYmluZGluZyB0b2dldGhlciBpbnRvIGJpZ2dlciB0aGluZ3MgaWYgbm90IGN1dCBkb3duIGZhc3QgZW5vdWdoLi4gClRoZSBzY2FuZGFsIG9mIE1hY2llbCBhbmQgdGhlIExlZ2lvbiByYW5rcyBhcyBvbmUgb2YgdGhlIHdvcnN0IG9mIHRoZSAyMHRoIGNlbnR1cnkgQ2F0aG9saWMgQ2h1cmNoLCBzaW5jZSBoZSB3YXMgaGVsZCB1cCBhcyBhIG1vZGVsIGZvciB0aGUgZmFpdGhmdWwgYnkgUG9wZSBKb2huIFBhdWwgSUkuIFRoZSBvcnRob2RveCBvcmRlciwgd2hpY2ggaGFzIGFib3V0IDkwMCBwcmllc3RzIGFyb3VuZCB0aGUgd29ybGQsIHdhcyBwcmFpc2VkIGZvciBhdHRyYWN0aW5nIGJvdGggbW9uZXkgYW5kIHZvY2F0aW9ucyB0byB0aGUgcHJpZXN0aG9vZC4uIAoiSW1hZ2luZSwgd2UgY2FuIGJvb2sgYXBwb2ludG1lbnRzIG9ubGluZSwiIEVsbGlvdHQgc2FpZC4gIldlIGhhdmUgYWNjZXNzIHRvIG91ciBvd24gaGVhbHRoIGNhcmUgcmVjb3JkLiIKSXRzIHRoZXNlIHR5cGUgb2YgbWljcm8gZXhwcmVzc2lvbnMgYW5kIHN0cmVzc29ycyB3aGljaCBjYW4gaGVscCB5b3UgZGV0ZXJtaW5lIGlmIHNvbWVvbmUgaXMgYmVpbmcgaG9uZXN0IG9yIG5vdC4idG8gZmluZCB0aGF0IGhlIHJlY29yZGVkIGFzIHNheWluZyAiSSBub3QgYSBjcm9vayIgYWZ0ZXIgd2Ugc3BlbnQgYW4gZW50aXJlIGhvdXIgZ29pbmcgb3ZlciB0aGUgYXVkaW8gcmVjb3JkaW5nIGxpc3RlbmluZyB0byB0aGUgdmFyaW91cyBzdHJlc3NvcnMgYW5kIHRoZW4gd2F0Y2hpbmcgdGhlIHZpZGVvIGNsaXAgb2YgaXQ7IHRoZSB2YXJpb3VzIHdheXMgaGUgdXNlcyAiSSBhbmQgIkkgaGF2ZSIgd2hlbiBoZSB0YWxrcyBhYm91dCBwcm9maXRpbmcsIGFuZCB0aGVuIG9ic3RydWN0aW5nIGp1c3RpY2UsIHdlIHNwZW50IGEgbG90IG9mIHRpbWUgaWRlbnRpZnlpbmcgdGhlIHN0cmVzc29ycyBvZiBOaXhvbiBiZWNhdXNlIHRoYXQgc3BlZWNoIHdhcyBhIGdyZWF0IG9uZSB0byBzZWUgdGhlbS4gCkluIGFueSBjYXNlLCB0aGUgcHJlc2lkZW50LCBwcmltZSBtaW5pc3RlciBhbmQgbWlsaXRhcnkgZWxpdGUsIGhhdmluZyB0YWtlbiBRdXJlc2hpIHRvIHRhc2sgZm9yIGhpcyBwZXJmb3JtYW5jZSBpbiBXYXNoaW5ndG9uIERDIGxhc3Qgd2VlaywgaGF2ZSBzZW50IGhpbSBiYWNrIHRvIERDLiAKTGV0J3Mgc2F5IHRoYXQgeW91IHN0dWIgeW91ciB0b2UuIApFaW4gdG9sbGVzIER1c2NocGVlbGluZywgZGFzIG5pY2h0IG51ciBiYWJ5emFydGUgSGF1dCB2ZXJsZWlodCwgc29uZGVybiBhdWNoIHd1bmRlcmJhciBuYWNoIE9yYW5nZW4gdW5kIFJvc21hcmluIGR1ZnRldC4gCkd1ZXN0cyBiZWdpbiB0aGVpciBkYXkgd2l0aCBhIGZvdXIgY291cnNlIHNpdCBkb3duIGJyZWFrZmFzdCBhbmQgY2xvc2UgaXQgd2l0aCBzbWFsbCBwaWVjZSBvZiBoZWF2ZW4sIGEgdHJlYXQgb2YgbG9jYWxseSBtYWRlIFdvb2Rob3VzZSBDaG9jb2xhdGUuIApGb3IgdGhvc2UgcmVhZGVycyB3aG8gbWF5IGJlIG5ldyB0byBteSBtb250aGx5IHVwZGF0ZXMgb24gbXkgcG9ydGZvbGlvLCBsZXQgbWUgZ2l2ZSB5b3UgYSBicmllZiByZWNhcC4gSSBvcGVuZWQgbXkgYnJva2VyYWdlIGFjY291bnQgb24gSnVseSA1LCAyMDE2LCB3aXRoIGFuIGluaXRpYWwgaW52ZXN0bWVudCBvZiAkMTUwLiBTaW5jZSB0aGVuLCBJIGludmVzdCB3aGF0ZXZlciBpcyBsZWZ0IG92ZXIgZnJvbSBteSBwYXljaGVjayBhZnRlciBhbGwgbXkgYmlsbHMgYXJlIHBhaWQuIFNvbWV0aW1lcywgdGhhdCdzIGp1c3QgJDUwIG9yICQxMDAsIHNvbWV0aW1lcyBtdWNoIG1vcmUuIEkgbmFtZWQgbXkgcG9ydGZvbGlvIHRoZSBCcm93biBCYWcgUG9ydGZvbGlvIGJlY2F1c2UgbXVjaCBvZiB0aGUgaW52ZXN0bWVudCBjYW1lIGZyb20gdGhlIHNhdmluZ3MgSSBnYWluZWQgZnJvbSBicm93biBiYWdnaW5nIG15IGx1bmNoZXMsIGFuZCBvdmVyIHRoZSBwYXN0IHR3byB5ZWFycywgSSd2ZSB3b3JrZWQgb24gZWxpbWluYXRpbmcgbXkgZXhwZW5zZXMgYXMgbXVjaCBhcyBwb3NzaWJsZSBpbiBvcmRlciB0byBpbmNyZWFzZSBteSBzYXZpbmdzIGFzIG11Y2ggYXMgSSBjYW4uIEkgaGF2ZW4ndCBhbHdheXMgYmVlbiBzdWNjZXNzZnVsIHRvIHRoZSBkZWdyZWUgSSdkIGxpa2UsIGJ1dCBJIHdvcmsgb24gaXQgZXZlcnkgY2hlY2sgYW5kIHNldCBhIGdvYWwgb2Ygc2F2aW5nIGEgYml0IG1vcmUgZXZlcnkgdHdvIHdlZWtzLgpBbmQgdGhlIHRoaW5nIGlzLCBSZWJlbGxpbiBoYXMgdGhlIHJlbGF4ZWQgZGVtZWFub3VyIHRoYXQgd2lsbCBjYXJyeSBoaW0gY2FsbWx5IHRvIHRoZSBhcnJpdmFscyBpbiBIdXkgYW5kIEFucy4uIApPbG1hdGViaWxsIHUKRmxvcmEgR3JhbmQgSG90ZWwgRHViYWkgaXMgYSBmb3VyIHN0YXIgZGVsdXhlIGhvdGVsIGNvbnZlbmllbnRseSBsb2NhdGVkIGluIHRoZSBoZWFydCBvZiBEdWJhaSB0aHJpdmluZyBjb21tZXJjaWFsIGFuZCBsZWlzdXJlIGRpc3RyaWN0LCBqdXN0IDEwIG1pbnV0ZXMgZnJvbSBEdWJhaSBJbnRlcm5hdGlvbmFsIEFpcnBvcnQgYW5kIG9uIHRoZSBmYW1vdXMgQWwgUmlnZ2EgU3RyZWV0ICAgdGhlIG1vc3QgZXhjaXRpbmcgcGFydCBvZiB0b3duIGFsbCB5ZWFyIHJvdW5kLlRoZSBNb25zb29uIGlzIHRoZSBob3RlbHMgYWxsIGRheSBkaW5pbmcgcmVzdGF1cmFudCBzZXJ2aW5nIGEgd2lkZSByYW5nZSBvZiBpbnRlcm5hdGlvbmFsIGN1aXNpbmUuIFlvdSBjYW4gYWxzbyBlbmpveSBhIGRlbGlnaHRmdWwgc2VsZWN0aW9uIG9mIGNvb2tpZXMsIGZyZXNoIHBhc3RyaWVzLCBqdWljZXMgYW5kIGNvZmZlZSBhdCBBbCBOYWtoZWVsIGNvZmZlZSBzaG9wLk91ciBwcml2aWxlZ2VkIGxvY2F0aW9uIGluIERlaXJhIER1YmFpIGNvbWJpbmVkIHdpdGggdGhlIGhpZ2hlc3QgbGV2ZWxzIG9mIGhvc3BpdGFsaXR5IGFuZCBjb21mb3J0IG1ha2VzIHRoZSBGbG9yYSBHcmFuZCBIb3RlbCB5b3VyIGJlc3QgY2hvaWNlIGluIER1YmFpLiBXZSBoYXZlIG5vdGVkIHlvdXIgY29tbWVudHMgYW5kIHRoZSBjb25jZXJucyBtZW50aW9uZWQgaW4gZGV0YWlsLiAKSSBjYW4gdGVsbCB5b3UgdGhhdCBldmVuIHdpdGggcG9raW5nIGFuZCBwcm9kZGluZyAoZXZlbiBhdCBteSA0YW0gYmF0aHJvb20gYnJlYWspLCBib3RoIG15IGtpZGRvcyBzbGVlcCBqdXN0IGZpbmUuIApOb3QgYW4gZXhlbXBsYXIuLiAKU3VnZ2VzdCB0aGUgYnV5ZXIgdG8gY2hlY2sgd2l0aCBuZWlnaGJvcnMuIFlvdSBjYW4gYWxzbyBjYWxsIHVzcHMgYW5kIGFzayBmb3IgZ3BzIGxvY2F0aW9uIG9mIGRlbGl2ZXJ5LiBJZiB5b3UgZmVlbGluZyBnZW5lcm91cywgeW91IGNhbiBvZmZlciBhIHJlcGxhY2VtZW50IHVwb24gdGhlbSByZXBvcnRpbmcgdGhlZnQgYW5kIHNlbmRpbmcgeW91IHRoZSByZXBvcnQgYnV0IHlvdSBkb24gaGF2ZSB0byBvZmZlciB0aGF0LiAKRm9yIFVrcmFpbmUgYW5kIHdpbGwgYmUgZGlzY3Vzc2VkIGJlbG93LgpObyBvbmUgYmVlbiBzaWduZWQgdXAgZm9yIHNwYW0gZW1haWwgdGhyb3VnaCB0aGlzIHByb2Nlc3MsIG9yIGhhZCB0aGVpciBpZGVudGl0eSBzdG9sZW4sIG9yIGJlZW4gYmxhY2ttYWlsZWQgYmFzZWQgb24gdGhlIGluZm9ybWF0aW9uIHRoZXkgcHJvdmlkZWQuIFNvIEkgbGlrZSB0byB0aGluayBwZW9wbGUgdHJ1c3QgdGhlIGN1cnJlbnQgcHJvY2VzcywgZXZlbiB0aG91Z2ggaXQgc2xvdy4gSSBsaWtlIHRvIHJldmlzaXQgaXQgd2l0aCBhIGRpZmZlcmVudCBmb3JtYXQsIGJ1dCBjYW4gc2VlbSB0byBjb21lIHVwIHdpdGggYSBnb29kIGFsdGVybmF0aXZlLiAKRm9yd2FyZCBmb2xkcyBoYXZlIHNvIG1hbnkgYmVuZWZpdHMuIEdsYWQgeW91IGFyZSBlbmpveWluZyB0aGVtISBTaW5jZSB5b3Ugc2FpZCB5b3Ugb25seSByZWFsbHkga25vdyB0d28gc2ltcGxlIGZvbGRzLCBJIHRob3VnaHQgSSBzaGFyZSBhIGZldyBzdWdnZXN0aW9uczogTWl4IGluIGJvdGggc3RhbmRpbmcgYW5kIHNlYXRlZCBmb3J3YXJkIGZvbGRzIGluIHlvdXIgcHJhY3RpY2UuIElmIHlvdSBoYXZlIG5vdCB0cmllZCBnb3JpbGxhIHBvc2UgeWV0LCBnaXZlIGl0IGEgdHJ5LCBidXQgbWFrZSBzdXJlIHlvdSBnbyBzbG93IGFuZCBkb24gcHVzaCBiZXlvbmQgeW91ciBsaW1pdHMuLiAKQml0ZXIgSnVkZ2VtZW50IFBvc3RlZCBOQkMncyBUcmVhdG1lbnQgb2YgdGhlIDIwMTIgT2x5bXBpY3MgQSBEb3VsYSdzIFJvbGU/IEdhcmRlbmlhcyBHZW50bGUgR3JhbmRtb3RoZXJpbmcgQ2VzYXJlYW4gU2NhcjogRW1pbmEncyBTdG9yeSBNYWtpbmcgYSBIb3NwaXRhbCBCaXJ0aCBQbGFuIFNoaWZ0aW5nIGZyb20gUHJvIFVDIHRvIEFudGkgVUMgQ1BNcywgRG9uJ3QgUmVhZCBUaGlzISBTdWNjaW5jdCBSZWFzb25zIENQTXMvREVNcyBOZWVkIHRvIEdldCBUaGVpciBBY3QgVG9nZXRoZXIgU2FyYWgncyBHUkVBVCBOZXdzISBSYWRpY2FsIERvdWxhJ3MgUkhSZWFsaXR5IENoZWNrIEFydGljbGUgVmFuZXNzYSdzIEdvb2QgTmV3cyEgU2FyYSdzIEdvb2QgTmV3cyBLZW5kcmEgSGVucnkncyBHb29kIE5ld3MgUGhpbGlwIEdlb3JnaWEncyBOdXJzaW5nIEhvcm1vbmFsIE1lbm9wYXVzZSBIb3cgdG8gUHV0IFR3aW5zIGluIGEgTW9ieSBXcmFwIEdvb2QgTmV3cywgQW55b25lPyBCaXRlciBEZWF0aD8gQmluYXJ5IFBhcmVudGluZyBDZXNhcmVhbiBTY2FyOiBTdGFyIFJlaWduaW5nIGluIHRoZSBSZW5lZ2FkZXMgUmVhZGVyIFF1ZXN0aW9uOiBDUE0gb3IgQ05NIFRoZSBTT0IgU3BhbmtpbmcgTWVudGFsIElsbG5lc3MgQ2VzYXJlYW4gU2NhcjogYWRyaWVubmUncyBjZXNhcmVhbiBzY2FyIHN0b3J5IFBsYWNlbnRhcyBpbiB0aGUgSWdsb28gQ2VzYXJlYW4gU2NhcjogS2F0aHJ5biBHdWVzdCBQb3N0OiBGcm9tIGFuIEV4IChDUE0pQXBwcmVudGljZSBXaGF0IEluZmx1ZW5jZT8gRGVhZCBCcmVlY2ggQmFiaWVzIENlc2FyZWFuIFNjYXI6IFNhcmFoIEhCQUNzICJTdHJldGNoIiAiQ3Jvd25pbmciICJNdWNvdXMiICJQbGFjZW50YSIgIlByaW1hbCIgIkJhYnkiIEhvdyB0byBJbnRlcnZpZXcgWW91ciBNaWR3aWZlJ3MgUmVmZXJlbmNlcyBEaWQgWW91IEhhdmUgWW91ciBNZW1icmFuZXMgU3RyaXBwZWQ/IE5lb25hdGFsIFJlc3VzY2l0YXRpb246IENydWNpYWwgU2tpbGwgZm9yIFlvdXIgTWlkd2lmZSBUaGUgTWlyYWNsZSBvZiBQZWFudXQgQmFsbHMgTWlkd2l2ZXMgSSBIYXZlIExvdmVkIFRoZSBFdGhpY3Mgb2YgRmFjZWJvb2tpbmcgYSBCaXJ0aCBMYWJvciBUYWtpbmcgTG9uZ2VyIFRvZGF5IENlc2FyZWFuIFNjYXI6IE1hbmR5J3MgU3RvcnkgQ2VzYXJlYW4gU2NhcjogQXNobGV5IEUuIENlc2FyZWFuIFNjYXI6IEphbWllIENlc2FyZWFuIFNjYXI6IDMgQmFiaWVzOyAzIFNjYXJzIENlc2FyZWFuIFNjYXI6IE15IFNjYXJzIEFyZSBMb3ZlZCBDZXNhcmVhbiBTY2FyOiBKb3kgQ2VzYXJlYW4gU2NhcjogSGVhdGhlciBBLiBDZXNhcmVhbiBTY2FyOiBGYXllIENlc2FyZWFuIFNjYXI6IEthdGUgQ2VzYXJlYW4gU2NhcjogVkJBM0MgQ2VzYXJlYW4gU2NhcjogQW1lbGlhIENlc2FyZWFuIFNjYXI6IEtheSBDZXNhcmVhbiBTY2FyOiBVSyBSZWFkZXIgQ2VzYXJlYW4gU2NhcjogUGVnZ3kgQ2VzYXJlYW4gU2NhcjogUGF5dG9uJ3MgTW9tICJCaWcsIEhlYWx0aHkgQmFiaWVzIiBDZXNhcmVhbiBTY2FyOiBDaidzIFN0b3J5IENlc2FyZWFuIFNjYXI6IEFzaGxleSBDZXNhcmVhbiBTY2FyOiBMYXVyYSBDZXNhcmVhbiBTY2FyOiBKZW5uaWZlciBDZXNhcmVhbiBTY2FyOiBBbm9ueW1vdXMgQ2VzYXJlYW4gU2NhcjogU3RhY2V5IENlc2FyZWFuIFNjYXI6IEFub255bW91cyBDZXNhcmVhbiBTY2FyOiBBbm9ueW1vdXMgQ2VzYXJlYW4gU2NhcjogQW5vbnltb3VzIENlc2FyZWFuIFNjYXI6IExvcmkgQ2VzYXJlYW4gU2NhcjogS3Jpc3RpbmEgSy4gClVzZXJuYW1lX2lzX3Rha2VuNDMgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIGRheSBhZ28KSSB3ZW50IGFsbCBpbiBiZWZvcmUgdGhlIGZsb3Agb24gQUogc3VpdGVkLiBUaGUgb3RoZXIgZ3V5IHdobyBjYWxsZWQgbWUgKEFsbW9zdCBzYW1lIGNoaXBzLCBoZSBoYWQgMTAwIG1vcmUgd2hlbiB3ZSBjaGVja2VkKSBoYWQgQTkgdW5zdWl0ZWQuIEhlIGhpdCBhIDkgcGFpciBvbiB0aGUgdHVybiBvciByaXZlci4uIApMYXRlIHRvIHRoaXMgcGFydHksIGJ1dCBJIHdhcyB0ZW4sIGl0IHdhcyAxOTk2LCBhbmQgSSBmb3VuZCBhIGJveCBvZiBjZHMgc2l0dGluZyBpbiB0aGUgbWlkZGxlIG9mIHRoZSByb2FkLiBNeSBmcmllbmRzIGFuZCBJIGRpdmlkZWQgdGhlbSB1cCBhbmQgdG9vayB0aGVtIGhvbWUuIEkgZ290IFByaW11cywgR3JlZW4gRGF5LCBLb3JuLCBhbmQgVW5kZXJ0b3cuIEJlZm9yZSB0aGF0LCBJIHdhcyBiYXNpY2FsbHkganVzdCBtYWtpbmcgZHVlIHdpdGggU3VibGltZSwgTm8gRG91YnQsIFJhZ2UsIGFuZCBmb3Igc29tZSByZWFzb24sIHRoZSBlbnRpcmUgTm8gTGltaXQgUmVjb3JkcyByb3N0ZXIgZnJvbSB0aGUgbWlkIDkwcy4gVW5kZXJ0b3cgY2hhbmdlZCB3aGF0IEkgd2FudGVkIG91dCBvZiBtdXNpYywgYW5kIGl0IHR1cm5lZCBhIHBhcnQgb2YgbXkgYnJhaW4gb24gdGhhdCBuZXZlciByZWFsbHkgdHVybmVkIG9mZi4KVG8gdW5kZXJzdGFuZCB3aGF0IG1ha2VzIGEgZnJhZ3JhbmNlIHVuaXNleCwgaXQgaGVscHMgdG8gdW5kZXJzdGFuZCB3aGF0IGNvbnN0aXR1dGVzIG1lbidzIGFuZCB3b21lbidzIGZyYWdyYW5jZXMuIEEgcGVyZnVtZSBjb25zaXN0cyBvZiBkaWZmZXJlbnQgc2NlbnQgYmVhcmluZyBjaGVtaWNhbHMgZGlzc29sdmVkIGluIGFsY29ob2wuIFNpbWlsYXIgc2NlbnRzLCBvciBub3RlcywgYXJlIGdyb3VwZWQgaW50byBvbmUgb2YgZm91ciBtYWluIGNhdGVnb3JpZXM6IGZsb3JhbCwgb3JpZW50YWwsIHdvb2R5IGFuZCBmcmVzaC4gCk9ub21vbm9wZWRpYSAgMSBwb2ludCAgc3VibWl0dGVkIDI5IGRheXMgYWdvCk9uZSBvZiBoZXIgZGlzcGxheXMsIFdvbWVuJ3MgV29yaywgd2FzIGEgaGl0IGF0IHRoZSAxODc2IFBoaWxhZGVscGhpYSBDZW50ZW5uaWFsIEV4cG9zaXRpb24uIApTb21lIGFpcmxpbmVzIHRoaW5rIHRoZSBBMzgwIGlzIHRvbyBsYXJnZSBhbmQgdG9vIGhlYXZ5IGZvciB0aGVpciBuZWVkcywgc28gQWlyYnVzIGFyZSByZXNwb25kaW5nIGJ5IGJ1aWxkaW5nIGEgbGlnaHRlciB2ZXJzaW9uLCB3aGljaCBoYXMgYSBzaWduaWZpY2FudGx5IHJlZHVjZWQgbWF4aW11bSBmbHlpbmcgcmFuZ2UsIGJ1dCB3aWxsIHVzZSBtdWNoIGxlc3MgZnVlbCwgbWFraW5nIGl0IG1vcmUgZWNvbm9taWNhbCBmb3IgYWlybGluZXMgdG8gb3BlcmF0ZS4uIApUaG9zZSBhcmUgcmVhbGlzdGljLCBub3QgcGVzc2ltaXN0aWMsIGJldHMuIFBhdHRlcnNvbiBhbmQgaGVyIGNvbGxlYWd1ZXMsIGluY2x1ZGluZyBHb3Zlcm5vciBTdGVwaGVuIFBvbG96LCBsZWZ0IHRoZSBiZW5jaG1hcmsgaW50ZXJlc3QgcmF0ZSB1bmNoYW5nZWQgYXQgMS43NSBwZXIgY2VudCBvbiBXZWRuZXNkYXkgYW5kIHNhaWQgdGhlIHBhdGggdG8gaGlnaGVyIGJvcnJvd2luZyBjb3N0cyB3YXMgInVuY2VydGFpbi4iIFdoZW4gdGhhdCBncm91cCBsYXN0IG1ldCBpbiBKYW51YXJ5LCBpdCBzYWlkIGl0IHdhcyBpbiBubyBydXNoIHRvIGNoYW5nZSBwb2xpY3ksIGJ1dCB0aGF0IGludGVyZXN0IHJhdGVzIHdvdWxkIHN0aWxsIG5lZWQgdG8gcmlzZSAib3ZlciB0aW1lLiIgVGhlIG5ldyBwb2xpY3kgc3RhdGVtZW50IGFsc28gaW5jbHVkZWQgYW4gYXNzZXNzbWVudCB0aGF0IGVjb25vbWljIGNvbmRpdGlvbnMgd2FycmFudGVkIGFuIGludGVyZXN0IHJhdGUgYmVsb3cgdGhlICJuZXV0cmFsIHJhbmdlLCIgd2hpY2ggdGhlIGNlbnRyYWwgYmFuayBlc3RpbWF0ZXMgaXMgMi41IHBlciBjZW50IHRvIDMuNSBwZXIgY2VudC4uIApDb21wbGFpbnQ6IEkgc2ljayBvZiB3aW50ZXIuIEkgb3ZlciB0aGUgc2luZ2xlIGRpZ2l0cywgYmxvd2luZyBjb2xkIHdpbmQgYW5kIGljeSByb2Fkcy4KU29tZSBvZiB0aGVtIGRvbid0IGV2ZW4gYm90aGVyIHJpbmdpbmcgdGhlIGJlbGwsIHRoZXkganVzdCBjcmFtIHRoZSBzbGlwIGluIGFuZCBsZWF2ZS4gCkkgd2FzIGV4dHJlbWVseSBpbnN1bHRlZC4gSXQgd2FzIHN1Y2ggYW4gaWdub3JhbnQgY29tbWVudC4gSSBjb252ZXJzZSB3aXRoIG15IGNsaWVudHMgYmVmb3JlIGFuZCBhZnRlciBlYWNoIHNlc3Npb24uIEludHJvdmVydGVkIHBlb3BsZSBrbm93IGhvdyBhbm5veWluZyBpdCBpcyB3aGVuIHBlb3BsZSBjb25zdGFudGx5IGRlZ3JhZGUgeW91IGFuZCBwb2ludCBvdXQgaG93ICJxdWlldCIgeW91IGFyZSwgb3IgYXNrIHdoeSB5b3UgbmV2ZXIgdGFsay4gSSBkbyB0YWxrLCBqdXN0IG5vdCBjb25zdGFudGx5LiBJIHNwZWFrIHdoZW4gSSBoYXZlIHNvbWV0aGluZyB0byBzYXkuIEFuZCBhbHNvLCBJIHVzZWQgdG8gYmUgYSB3YWl0cmVzcyBiZWZvcmUgSSBiZWNhbWUgYSBtYXNzYWdlIHRoZXJhcGlzdC4gTGF0ZXIgb24sIEkgZXhwcmVzc2VkIHRvIG15IGNvdXNpbiB0aGF0IEkgdGhvdWdodCBoZXIgZnJpZW5kcyB3ZXJlIHJ1ZGUgdG8gbWUgYW5kIG1hZGUgbWUgZmVlbCBiYWQgYWJvdXQgbXlzZWxmLiBIZXIgcmVzcG9uc2Ugd2FzICJ3ZWxsLCBtYXliZSB5b3Ugc2hvdWxkIHRhbGsgbW9yZSIuIEkgd2FzIHRhbGtpbmcgaGVyZSBhbmQgdGhlcmUgdGhyb3VnaG91dCB0aGUgbmlnaHQgd2hlbiBJIGhhZCBzb21ldGhpbmcgdG8gc2F5LiBCdXQgYXMgdXN1YWwsIHNoZSB0b29rIGNvbW1hbmQgb2YgdGhlIHRhYmxlLCBhbmQgYXBwYXJlbnRseSBub3RoaW5nIEkgc2FpZCBtYXR0ZXJlZCBtdWNoLiBOZWVkbGVzcyB0byBzYXksIHRoYXQgY291c2luIGFuZCBoZXIgZnJpZW5kcyBhcmUgbm8gbG9uZ2VyIGluIG15IGxpZmUuClNlY3VyaXR5IHRyYWluaW5nIGFuZCBwb2xpY2llcyBhcmUgaW1wZXJhdGl2ZS4gClRoZXJlIGFyZSBuZWFybHkgb25lIGh1bmRyZWQgZm9vdGJhbGwgc3BvcnRzIG1hcmtldHMgYW5kIGNvbXBldGl0aW9ucyBmb3IgeW91IHRvIHBsYWNlIHlvdXIgZm9vdGJhbGwgYmV0cyBvbiwgaW5jbHVkaW5nIHRoZSBQcmVtaWVyIExlYWd1ZSwgQnVuZGVzbGlnYSwgUHJpbWVyYSBEaXZpc2lvbiwgU2VyaWEgQSwgZXRjLiwgYWxvbmcgd2l0aCB0aGUgcmVzcGVjdGl2ZSBsb3dlciByYW5rcyBvZiBjb21wZXRpdGlvbi4gWW91IGNhbiBwbGFjZSByZWxlZ2F0aW9uIGJldHMsIHRvIHdpbiBiZXRzLCB0b3AgZ29hbCBzY29yZXIgYmV0cywgdG90YWwgZ29hbHMgYmV0cywgaGFuZGljYXAgYmV0cywgZ29hbCBjcmF6eSBiZXRzLCBmb290YmFsbCBwbGF5ZXIgc3BlY2lhbHMgYW5kIGxvdHMgbW9yZS4gClNvLCBhcyB0aGUgT2JhbWEgYWRtaW5pc3RyYXRpb24gZ2VhcnMgdXAgdG8gZ2V0IEthZ2FuIG5vbWluYXRpb24gdGhyb3VnaCB0aGUgU2VuYXRlLCB0aGV5IHNob3VsZCByZWZsZWN0IHNlcmlvdXNseSBvbiB0aGUgcHJvbWlzZSBvZiAibm8gaG9tbyIgZm9yIHVuaXRpbmcgdGhpcyBjb3VudHJ5IGFuZCBwdXR0aW5nIHVzIGFsbCBiYWNrIG9uIHRoZSBzdHJhaWdodCBhbmQgbmFycm93IHdoaWxlIHNpbXVsdGFuZW91c2x5IGFsbG93aW5nIGZvciBhIG11bHRpcGxpY2l0eSBvZiBzZXh1YWwscm9tYW50aWMgYW5kIGV2ZW4gcG9saXRpY2FsIGFmZmlsaWF0aW9ucyB0byBmbG91cmlzaC4uIApJIGhlYXJkIHRoZSBzYW1lIGNvbXBsYWludCBmcm9tIG90aGVyIHBlb3BsZSwgdGhleSBvbmx5IG9mZmVyIGludGVybmF0aW9uYWwgY3VzdG9tZXJzIHVzZWxlc3MgZGlzY291bnQgY29kZXMgcmF0aGVyIHRoYW4gcmVmdW5kcy4uIApUaGUgY29tcGFueSB3YXMgcmVjZW50bHkgcmFua2VkIDgxIGluIEVudHJlcHJlbmV1cidzIDIwMTIgIkZyYW5jaGlzZSA1MDAiIGFuZCAyOSBpbiBpdHMgIkZhc3Rlc3QgR3Jvd2luZyBGcmFuY2hpc2UiIHJhbmtpbmdzLiAKSW4gMjAxNCwgYnkgdGhlIHdheSwgdGhlIERlbW9jcmF0aWMgY2FuZGlkYXRlcyBnb3QgdHJvdW5jZWQgaW4gQ29uZ3Jlc3MsIHNvIHllYWgsIG1heWJlIEkgd2FzIHJpZ2h0IGFib3V0IHRoYXQgb25lLiAKTXkgYXJ0aWNsZSBpcyBhbGwgYWJvdXQgdGhlIHNweSBjaGVhdGluZyBwbGF5aW5nIGNhcmRzIHdoaWNoIGFyZSBoZWxwaW5nIHlvdSB0byB3aW4gZXZlcnkgZ2FtZSBvZiBwbGF5aW5nIGNhcmRzIGFuZCBnZXQgbG90cyBvZiBtb25leSBhcyB3aXRob3V0IGFueSBkb3VidCB0aGF0IHlvdSB1c2VkIGEgY2hlYXRpbmcgZ2FkZ2V0LgpQZW9wbGUgb24gYXZlcmFnZSBtYWtlIG1vcmUgbWlzdGFrZXMgaW4gZGVlcHN0YWNrIHBva2VyLCBzbyB5b3UnZCBsaWtlIHRvIHNlZSBzdGFja3Mgb2YgMTUwIDIwMCsuIApOb3QgYWxsIHBpZWNlcyB3b3JrZWQgICBOb29yYXkncyBjb2xvdXIgYmxvY2tlZCBkcmVzcywgZm9yIGV4YW1wbGUsIGdvdCBhICduYXknIGZyb20gdXMgYXMgZGlkIHNvbWUgb2YgdGhlIGVtYmVsbGlzaGVkIHRlZXMgICBidXQgdGhlcmUgd2VyZSBlbm91Z2ggdmFyaWF0aW9ucyBpbiB0aGUgcmFuZ2UgdG8gc3VpdCBhIHZhcmlldHkgb2YgdGFzdGVzIGFuZCBwcmVmZXJlbmNlcy4gVGhlIGtpZHMnIGxpbmUgd2FzIHBhcnRpY3VsYXJseSBleWUgY2F0Y2hpbmcsIG9yIG1heWJlIGl0IHdhcyBqdXN0IHRoZSBhZG9yYWJsZSBsaXR0bGUgbW9kZWxzIHRoYXQgbWFkZSB0aGUgY2xvdGhlcyBsb29rIGdvb2QuLiAKSWYgaXQgbmVlZHMgYWRkcmVzc2luZyAobGlrZSB0aGUgb3JnYXNtIHRoaW5nIG9yIHdoYXRldmVyKSB0aGVuIEkgd2lsbC4gClBvd2VyIHNhaWQgdGhlIGNvbXBhbnksIHdoaWNoIG9mdGVuIGdyYWJzIGhlYWRsaW5lcyB3aXRoIGNvbnRlbnRpb3VzIGFkdmVydHMgYW5kIHVudXN1YWwgYmV0dGluZyBvcHBvcnR1bml0aWVzLCBob3BlZCB0byBob3N0IHRoZSBldmVudCBpbiBBdWd1c3Qgb3IgU2VwdGVtYmVyIGJ1dCBoYWQgeWV0IHRvIGRlY2lkZSBvbiBhIHByaXplOiAiTWF5YmUgYSBnb2xkIHBhaXIgb2YgdW5kZXJwYW50cyBvciBhIGdvbGRlbiBmaWcgbGVhZiB3b3VsZCBiZSBtb3N0IGFwcHJvcHJpYXRlLiIKSSBrbm93IGZvciBteSBzaXN0ZXIsIGFuZCBwcm9iYWJseSBmb3IgdGhlIHdvbWFuIGluIHRoZSB2aWRlbyB0aGVyZSBpcyB1c3VhbGx5IGEgbG9uZyBidWlsZCB1cCBvZiBmcnVzdHJhdGlvbiB0aGF0IGdvZXMgdW5yZWNvZ25pemVkIGJlZm9yZSB5b3Ugc2VlIHNvbWV0aGluZyBsaWtlIHRoaXMuIEhlciBnYXJiYWdlIGhhcyBub3QgYmVlbiBwaWNrZWQgdXAgYXMgc2hlIGV4cGVjdGVkIGZvciB3ZWVrcywgYSBtaW5vciBhbm5veWFuY2UgZm9yIHVzLCBidXQgcXVpY2tseSBiZWNvbWluZyB0aGUgZW50aXJlIGZvY3VzIG9mIGhlciBsaWZlLiAKTWFueSBvZiB0aGUgdGVybXMgYXJlIG5hcnJvd2x5IGRlZmluZWQgKG9yIGFzIG5hcnJvd2x5IGFzIGNvdWxkIGJlIGluIGEgNDAgcGFnZSBkb2N1bWVudCksIHRob3VnaCB3aGVuIHlvdSBjb25zaWRlciB0aGUgdGltZSBpbiB3aGljaCBpdCB3YXMgYWNjb21wbGlzaGVkIHRoaXMgZG9lcyBzZWVtIHRvIHJlcHJlc2VudCBzdGVwIGZvcndhcmQgaW4gdGhlIGNyZWF0aW9uIG9mIHVuaWZvcm0gc3RhdGlzdGljcyBmb3IgcGVvcGxlIGJlaW5nIHRyZWF0ZWQgZm9yIHZhcmlvdXMgc29ydHMgb2YgbWVudGFsIGRpc2Vhc2VzLiAibWVudGFsIHN0YXR1cyIgY3JpdGVyaWEgdG8gY2hvb3NlIGZyb20gaW5jbHVkZXMgImlkaW90LCBpbWJlY2lsZSwgb3IgbW9yb24iIHdoaWxlIHBlcnNvbmFsaXR5IHR5cGUgY2xhc3NpZmljYXRpb24gaW5jbHVkZWQgImVtb3Rpb25hbCIsIGVnb2NlbnRyaWMiLCAiaW5hZGVxdWF0ZSIsICJwYXJhbm9pZCIsIGFuZCAib3RoZXJzIHRvIGJlIHNwZWNpZmllZCIuIApKdWwgNiwgMjAxNSAuIFRpdGxlOiBMaXZlIGZvciBTcGVlZCBTMiBHZW5yZTogcmFjaW5nLGRyaWZ0aW5nIFNpemU6MzgyIE1CIE9TIFN1cHBvcnQ6IFdpbmRvd3MgWFAvdmlzdGEvNy84LzguMSBQdWJsaXNoZXI6IFNjYXdlbiBSb2JlcnRzLCBFcmljIEJhaWxleS4gCkEgc21hbGwgc3R1ZHkgcHVibGlzaGVkIGluIGEgMjAxMyBpc3N1ZSBvZiBKb3VybmFsIG9mIEJyZWF0aCBSZXNlYXJjaCBpbnZlc3RpZ2F0ZWQgd2hldGhlciBkcnVnIGludG94aWNhdGlvbiBjb3VsZCBiZSBpZGVudGlmaWVkIHRocm91Z2ggYnJlYXRoLiAKQ2hlbmV5IHNheXMgdG9ydHVyZSB3b3JrZWQsIHRoZSBUaW1lcyBzYWlkOgpHcmFkIHNjaG9vbCAgIGFoLiBEaWQgeW91IGdyYWR1YXRlPyBXaGF0IGRpZCB5b3Ugc3R1ZHk/IEkgZ290IGEgTUJBIGJhY2sgaW4gMTk5NC4gQnV0IEkgd2VudCB0byBhIGNyYXBweSBzY2hvb2wsIGFuZCBJIGJlZW4gZm9ydHVuYXRlIHRvIHdvcmsgZm9yIGEgc3RyaW5nIG9mIGNyYXBweSBib3NzZXMgc2luY2UgdGhlbiBzbyB0aGF0IGJlZW4gZnVuLiAKSSBwZXJzb25hbGx5IGNhcmUgbGVzcyBhYm91dCB3aGF0IHRlY2hub2xvZ2llcyB5b3UgaGF2ZSBiZWVuIGV4cG9zZWQgdG8gYXMgbG9uZyBhcyB5b3UgaGF2ZSBhIGdyYXNwIG9mIGNvcmUgY29uY2VwdHMgICBhbmQgdGhhdCBzb21ldGhpbmcgdGhhdCBjYW4gY29tZSBmcm9tIG9uIHRoZSBqb2IgZXhwZXJpZW5jZSBpbiBvdGhlciBmaWVsZHMgb3IgYnkgZm9ybWFsIHRyYWluaW5nLgpUaGUgVUsncyBvbGRlc3QgdW5zb2x2ZWQgbXVyZGVyClQgQXBwbHkuIApBbHNvLCB0aGV5IGRvbid0IGRvIHRoaXMuIFRoZXJlIGlzIGEgbG90IG9mIGludHVpdGlvbiBhbmQgZ3Vlc3N3b3JrIGJlY2F1c2UgeW91IGhhdmUgaW1wZXJmZWN0IGluZm9ybWF0aW9uLiBKdXN0IGFzIGFuIGV4YW1wbGUgICB0aGVyZSBhcmUgYSBsb3Qgb2YgcGVvcGxlIHdobyByZWFsbHkgbGlrZSBiZXR0aW5nIGJpZyBpZiB0aGVyZSBpcyBhIHBhaXIgb24gdGhlIGJvYXJkICAgd2hpY2ggaXMgYSBjbGFzc2ljIGJsdWZmICAgcGVvcGxlIHdpbGwgdGhpbmsgeW91IGhhdmUgdGhyZWUgb2YgYSBraW5kIGFuZCBmb2xkLiBJZiB5b3UndmUgcGxheWVkIHRoaXMgZ3V5IGEgYnVuY2gsIHRoZW4geW91IGtub3cgdGhhdCBhbmQgeW91IHdpbGwgYmUgbW9yZSBsaWtlbHkgdG8gY2FsbCB3aXRoIHR3byBwYWlyIHRoYW4geW91IHdvdWxkIGFnYWluc3QgYW4gdW5rbm93biBwbGF5ZXIuIEJ1dCB0aGVuIGFnYWluLCBoZSBhbHNvIGtub3dzIHRoYXQgeW91J3ZlIHBsYXllZCBoaW0gYSBidW5jaCBhbmQgd2lsbCBjYWxsIGhpbSBvbiBpdCwgYW5kIHNvIGhlIG1pZ2h0IGhhdmUgYmVlbiBwbGF5aW5nIGNhdXRpb3VzbHkgd2hpY2ggbWFrZXMgaXQgbW9yZSBsaWtlbHkgdGhhdCBoZSB3b3VsZG4ndCBiZSBibHVmZmluZyB5b3UsIGFuZCBzbyBvbi4KSSBjYWxsZWQgYSBjYWJieSBhbmQgYXNrZWQgaG93IG11Y2ggaXQgd291bGQgY29zdCB0byBnZXQgYSByaWRlIGhvbWUgKHRvIHRoZSBuZXh0IHRvd24gb3ZlcikgYW5kIGhlIHNhaWQsICQ1MC4gVGhlIG9ubHkgdGhpbmcgSSBjb3VsZCB0aGluayBvZiwgd2FzIGFzayBvbmUgdG8gZHJpdmUgbWUsIGFuZCB0aGVuIGdldCBteSBsYW5kbG9yZCB0byBjb3ZlciBtZSBmb3IgdGhlIG1vbmV5IHdoZW4gaSBnb3QgdG8gbXkgcGxhY2UuIEF0IHRoaXMgcG9pbnQsIGl0IHdhcyBhYm91dCAyYW0sIGFuZCBJIGV2ZW4gd2FzIGNvbnNpZGVyaW5nIGdvaW5nIHRvIGEgYmFyIGFuZCBzZWVpbmcgaWYgSSBjb3VsZCBtZWV0IHNvbWVvbmUgd2hvIHNlZW1lZCBub3Qgc2tldGNoeSwgb3IgdHJ5aW5nIHRvIGZpbmQgb3V0IGlmIHRoZXJlIHdhcyBhbnlwbGFjZSBvcGVuIDI0LzcgaW4gdGhlIHRvd24uCkJ1dCBpdCdzIGxpa2UgYWxsIHRoZSBIYXJyeSBQb3R0ZXIsIEdhbWUgb2YgVGhyb25lcywgYW5kIE1hcnZlbCB0aGVvcmllcy4gSXQncyB3ZWFrIGZyb20gdGhlIG91dHNldCBieSBpdHMgdmVyeSBuYXR1cmUgYmVjYXVzZSBpdCBpcyBhY2NpZGVudGFsIGFuZCB1bmludGVuZGVkLiBBZGQgdG8gdGhhdCB3aGVuIHlvdSBjb25zaWRlciBvdGhlciBmYWN0b3JzIG5vdCBleHByZXNzbHkgaW5jb3Jwb3JhdGVkIGJ5IHRoZSB0aGVvcnksIGl0IGRvZXNuJ3QgbWFrZSBhbnkgc2Vuc2UgYXQgYWxsLgpZb3VyIGd1ZXNzIGlzIGFzIGdvb2QgYXMgbWluZS4gCkFseXA5MSAgMSBwb2ludCAgc3VibWl0dGVkIDIwIGRheXMgYWdvCkkgZG9uJ3Qga25vdyBpZiBhbnkgb2YgdGhpcyBoZWxwcyBidXQgaWYgeW91IGFyZSBldmVyIHN0cnVnZ2xpbmcgb3IgbmVlZCB0byB0YWxrIHlvdSBjYW4gYWx3YXlzIG1lc3NhZ2UgbWUgYW5kIEkgcHJvbWlzZSBJIHdvbid0IGxlYXZlIHlvdSBoYW5naW5nLi4gCk1pY3JvdHJhdW1hIGFuZCBpbmZsYW1tYXRpb24gZnJvbSB0aGF0IG1pY3JvIHRlYXJpbmcgaXMgdGhvdWdodCB0byBiZSB0aGUgY2F1c2Ugb2Ygc29yZW5lc3Mgbm93LiBBcyBmb3IgYW4gZW5kIHBvaW50IG9mIGV4ZXJjaXNlLCBpbiBhbmFlcm9iaWMgdHJhaW5pbmcsIHRoZSBlbmQgcG9pbnQgdGVuZHMgdG8gYmUgbW9yZSBmdWVsIHN1YnN0cmF0ZSBhbmQgaHlkcm9nZW4gaW9uIGNvbmNlbnRyYXRpb24gYmFzZWQuIApTbyBpdCBzZWVtcyBsaWtlbHkgaGUgaGFzIGEgYmlnZ2VyIFEgdGhhbiB5b3Ugb3IgcGVyaGFwcyBmbG9wcGVkIGEgc2V0LiBJIGRlZmluaXRlbHkgZmVlbCBsaWtlIHlvdSB3ZXJlIGJlaGluZCB3aGVuIHlvdSBtYWRlIHlvdXIgZm9sZCBhbmQgSSBhbHNvIGZlZWwgbGlrZSBWaWxsYWluIG1hZGUgYSBoYW5kIHRoYXQgaGUncyBub3QgZm9sZGluZyB0byBhbnkga2luZCBvZiByZSByYWlzZSBvbiB0aGUgdHVybiBzbyBmb2xkaW5nIHdhcyBkZWZpbml0ZWx5IGJlc3QuIApPbiBhIGNvb2xlciBkYXksIEkgaW1hZ2luZSBpdCB3b3VsZCBiZSBtdWNoIG1vcmUgZW5qb3lhYmxlLiAKSXQgd291bGQgbm90IHN1cnByaXNlIG1lIGlmIGhlIGhlbHBlZCBmYWNpbGl0YXRlIHNvbWV0aGluZyBsaWtlIHRoYXQuIApJIHdhcyBza2VwdGljYWwuIEkgaGFkIGEgc29sYXIgY2FsY3VsYXRvciBiYWNrIGluIHRoZSBkYXkgYW5kIGl0IHdhcyBwcmV0dHkgd2ltcHkuIApXaGF0IEkgYXNzdW1lIGhlIG1lYW5zIGlzLCBpdCdzIGRpZmZpY3VsdCB0byBkZXRlcm1pbmUgaWYgdGhlIGNhdXNlIGlzIHRoZSBzeXN0ZW1pYyBidWxseWluZywgYmxlYWsgb3V0bG9vayBmb3IgdGhlIGZ1dHVyZSwgaW1wb3NzaWJsZSBwcmVzc3VyZSB0byBzdWNjZWVkIG9yIHRoZSBjb21wbGV0ZSBsYWNrIG9mIG1lbnRhbCBoZWFsdGggYXdhcmVuZXNzIHRvd2FyZHMgdGhlIHlvdW5nLgpJIHdlbnQgdGhlIHJvdXRlIG9mIG91dHNvdXJjaW5nIGFsbCByZWdpc3RyYXRpb24gZG9jdW1lbnRzIGZvciBlc3RhYmxpc2hpbmcgYSBjb21wYW55LiBJdCBjb3N0IGFib3V0IDIwIDMwIGFuZCB0aGV5IGRpZCBldmVyeXRoaW5nIGZvciBtZS4gVGhlIHNhbWUgb3JnYW5pemF0aW9uIGFsc28gZG9lcyBteSBxdWFydGVybHkgdGF4ZXMgZm9yIGEgbG93IGZlZS4gClRha2UgdGhlIHRpbWUgdG8gZ2V0IHRoZSBzaGluIGJldHRlciwgYW5kIHVzZSB0aGF0IHRpbWUgdG8gdHJhaW4gdGhlIHN3aW0gYW5kIGJpa2UuIApBbmQgaW0ganVzdCB3b25kZXJpbmcgaGUgYXNrZWQgdG9kYXkgaWYgaGUgY2FuIGdvIG91dCB0b21vcnJvdyBuaWdodCB0byBwbGF5IHBva2VyIHdpdGggaGlzIGNvIHdvcmtlcnMKSGVyamF2ZWMgaGFkIGZhaWxlZCB0byBrZWVwIGZvciBoaXMgZmFtaWx5IHRydXN0OyB0d28gcmVhbCBlc3RhdGUgZXhwZXJ0cywgd2hvIHZhbHVlZCB0aGUgcGFydGllcyBwcm9wZXJ0aWVzLCBpbmNsdWRpbmcgYSAyMiwwMDAgc3F1YXJlIGZvb3QgVG9yb250byBob21lOyBpbnZlc3RtZW50IGV4cGVydHM7IHR3byBjaGFydGVyZWQgYnVzaW5lc3MgdmFsdWF0b3JzLCB3aG8gdmFsdWVkIHRoZSBzaGFyZXMgb2YgTXIuIApFcyBmb2xndCBkYXMgS2FwaXRlbCBiZXIgVGVsbHMgYnp3LiAKSG9saWRheSBJbm4gR29hIFJlc3RhdXJhbnQgRGUgT3JvIENhc2lubyBQdWI6IFBvc3Nlc3NlcyBhIHZhc3QgbnVtYmVyIG9mIFNsb3QgbWFjaGluZXMgcm91bmQgYWJvdXQgMTUwIG9yIHNvIGFsb25nIHdpdGggMyByZXN0YXVyYW50cyBhbmQgMiBiYXJzIGNhcnJ5aW5nIDE3MCByb29tcyBhbmQgc3VpdGVzLiBJdCBmYWNpbGl0YXRlcyAyNCBob3VyIHJvb20gc2VydmljZSwgQnVzaW5lc3MgQ2VudGVyIHdpdGggTWVldGluZyBSb29tcywgd2VsbCBvdXRmaXR0ZWQgZ3ltcywgdGFibGUgdGVubmlzIGhhbGxzLCBwb29sIHRhYmxlLCBLaWRzIFBhcmsgYW5kIGxhc3QgYnV0IG5vdCB0aGUgbGVhc3QsIGRpc2NvdGhlcXVlcyBldmVyeSBTYXR1cmRheS4uIApJIGFza2VkIHRoZSBxdWVzdGlvbiBpbiB0aXRsZSB0byBhIHByb2Zlc3Npb25hbCBNVFQgcGxheWluZyBmcmllbmQgb2YgbWluZS4gCkZsb3JpZGEgQmV0dGluZyBvbiBDYXNpbm9zIHdpdGggTm8KVHJ1bXAganVkZ2VzIGV2ZXJ5b25lIGJ5IGhpcyBvd24gZ3JlZWQgYW5kIHZhbml0eS4gVHJ1bXAgaXMgaW5zdWx0aW5nIHRoZWlyIHByaWRlIGJ5IHRlbGxpbmcgdGhlbSB0aGVpciBjb3VudHkgd291bGQgYmUgYmV0dGVyIG9mZiBnaXZlbiB0byB0aGUgY2FwaXRhbGlzdCBzY3VtIHRoZXkgaGF0ZSBzbyBtdWNoLiAgNyBwb2ludHMgIHN1Ym1pdHRlZCA5IGRheXMgYWdvSSB3b3VsZCBqdXN0IGxpa2UgdG8gcG9pbnQgb3V0IHRoYXQgc2hlIHByZXR0eSBtdWNoIGJsYWNrbWFpbGVkIHRydW1wIGludG8gMTMwLDAwMCBkb2xsYXJzLiAKIlllYWgsIHNwcmludGVycyBhbmQgR0MgcmlkZXJzIGhhdmUgZGlmZmVyZW50IHR5cGVzIGJlY2F1c2UgdGhlaXIgbXVzY2xlcyB3b3JrIGRpZmZlcmVudGx5LiBUaGUgYmlnZ2VzdCBkaWZmZXJlbmNlIGlzIHRoZSBtYXNzYWdlLiBJdCdzIHRvdGFsbHkgZGlmZmVyZW50IGJlY2F1c2Ugc3ByaW50ZXJzIG5lZWQgdG8gZ2V0IG91dCB0aGUgbWF4aW11bSB3b3JrIGluIGEgdmVyeSBzaG9ydCB0aW1lLCBhbmQgZm9yIHRoZSBlbmR1cmFuY2Ugd29yayB3aXRoIHRoZSBHQyByaWRlcnMgaXQncyBhIGtpbmQgb2Ygc29mdGVyIG1hc3NhZ2UgaW4gZ2V0dGluZyB0aGUgcmlkZXJzIG92ZXIgdGhlIGRheXMuCk15IDMgZnJpZW5kcyBhbmQgSSwgYWxsIHdvbWVuIGluIG91ciA1MCB3ZXJlIHRhbGtpbmcgYWJvdXQgaG93IGhvcm5lZCB1cCBhbmQgaW50ZXJlc3RlZCBpbiBzZXggd2Ugd2VyZSBpbiBvdXIgeW91bmcgdGVlbiB5ZWFycy4gTGF1cmEgc2FpZCB3aGVuIHNoZSB3YXMgMTEsIGhlciBuZWlnaGJvciBib3lzICgxNSBvciAxNiB5cnMgb2xkPykgaGFkIGludml0ZWQgaGVyIGludG8gdGhlaXIgY2x1YmhvdXNlLCB0YWxrZWQgaGVyIGludG8gbG9va2luZyBhdCB0aGVpciB3aWVuZXJzIGFuZCB0aGVuIHRoZXkgd2VudCBkb3duIG9uIGhlci4gVGhpcyBpcyBhd2Z1bCBhbmQgd2Ugd2VyZSBob3JyaWZpZWQgYnV0IHRoZW4gc2hlIHNhaWQgIkkgYmxhbWUgbXkgaW50ZXJlc3QgaW4gc2V4IGFsbCBvbiB0aGUgZmFjdCB0aGF0IEkgd2FzIHVwIHRvbyB5b3VuZy4iIE9NRkcsIHdlIGxhdWdoZWQgdGlsbCB3ZSBjcmllZCBhbmQgZXZlbiBwZWVkIGEgbGl0dGxlIGJpdC4uIApUaGlzIGlzIHRoZSBwbGFjZSB5b3UgZmluZCB3aGF0ZXZlciB5b3UgaW4gdGhlIG1vb2QgZm9yIGZyb20gb3VyIGFsbCB5b3UgY2FuIGVhdCBzcHJlYWQgb24gb3VyIGJ1ZmZldC4gCkkgc3RpbGwgb24gU2t5cGUgb24gbXkgcGhvbmUgYnV0IChpdCB0dXJucyBvdXQpIGZvciBzb21lIHJlYXNvbiBpdCBzdG9wcGVkIGdpdmluZyBtZSBub3RpZmljYXRpb25zLCBhbmQgc28gKEkgdGhvdWdodCkgSSBoYWQgbm8gcmVhc29uIHRvIG9wZW4gaXQuIEx1Y2tpbHkgYSBmcmllbmQgb2YgbWluZSBzYXcgdGhpcyBwb3N0IGFuZCBzZW50IG1lIGEgbWVzc2FnZSB0aHJvdWdoIG1vcmUgcmVsaWFibGUgY2hhbm5lbHMuIFNvIHRoYW5rcyBmb3IgdGhlIHVwdm90ZXMgZm9yIHZpc2liaWxpdHksIHRoZXkgaGVscGVkLgpQbHVzLCBub3cgeW91IGhhdmUgYSBidW5jaCBvZiBpbmV4cGVyaWVuY2VkIGNvbmdyZXNzcGVvcGxlIHdobyBkb24ga25vdyBob3cgdG8gd3JpdGUgbGF3cyBhbmQgZG9uIGhhdmUgYW55IGNsb3V0LiBZb3Uga25vdyB3aG8ga2VlcHMgdGhlaXIgY2xvdXQgaW4gdGhpcyB0ZXJtIGxpbWl0ZWQgc3lzdGVtPyBMb2JieWlzdHMuIFNvIG5vdyB5b3UgYXJlIHJlcGxhY2luZyB0aGUgbW9zdCBpbmZsdWVudGlhbCBwdWJsaWNseSBlbGVjdGVkIG9mZmljaWFscyB3aXRoIHNwb2tlc3BlcnNvbnMgZm9yIHByaXZhdGUgaW50ZXJlc3RzLiAKMTUgaHJzIGFnbyArIEJ5IEJyaWUgWmVsdG5lciwgVGhlIFBsYWluIERlYWxlcgpXSE8gSXMgdGhlIHdpbm5lciBUSEUgUGFzcyBJTVBPUlRBTlQgQ2lyY3Vtc3RhbmNlIEJBVFRMRVM/IEhpZ2ggaXMgaGF2aW5nIHNhaWQgdGhhdCBzb21lIHdvcnJ5IGFib3V0IHdobyBleGFjdGx5IHRoZSBwdXR0aW5nIHVwIGxlZnQgdGhpY2sgbGluZWJhY2tlciBhcmUgbGlrZWx5IHRvIGJlIHNvIG5leHQgdG8gQWxsIFBybyBEZXJyaWNrIE1hbmxleS4gCkNvbW1lIGFubm9uYyBub3RyZSBCbG9nIGRldmllbnQgbGUgcmNlcHRhY2xlIGRlIHF1ZWxxdWVzIHVucyBkZSBub3MgdHJhdmF1eCBkZXMgZGNlbm5pZXMgY291bGVzLgpGb3IgYW4gaWRlYSBhcyB0byBqdXN0IGhvdyBkaWZmZXJlbnQgaXQgaXMsIGltYWdpbmUgdGhlcmUgd2FzIGFuIGVudGlyZSBnYW1lIGJhc2VkIGFyb3VuZCBHVEFWIHRvcnR1cmUgc2NlbmUsIGRpZG4gVHJldm9yIHJhbnQgYWJvdXQgaXQgYWZ0ZXIgdGhlIHNjZW5lIGFuZCB0aGUgb25seSBjaGFyYWN0ZXIgeW91IHBsYXkgaXMgZWl0aGVyIHNvbWVvbmUgbGlrZSBoaW0gb3Igd29yc2UgdGhhbiBoaW0uIApUaGUgYnVpbGQgcXVhbGl0eSBvZiBBbmtlciBMQzkwIGlzIHByZXR0eSBzdHVyZHkgZXhjZXB0IGl0IGhhcyBhbiBhZGp1c3RhYmxlIGxlbnNlIGFuZCBpdCBtaWdodCByYXR0bGUgc2xpZ2h0bHkgaWYgeW91IHNoYWtlIG9yIGRyb3AgaXQgKHdoaWNoIEkgaGFkIHNvbWUgcHJldHR5IHJvdWdoIGRyb3BzL3Rocm93cyBvbiBjb25jcmV0ZSkuCldlbnQgdGhyb3VnaCB0aGUgc3RlcHMgdG8gZnJhbmNoaXNlIGl0IGFuZCBoZXJlIHdlIGFyZS4gClRoaXMgaXMgd2h5IHlvdSBzaG91bGQgc2VlIGEgdGhlcmFwaXN0LCBzb21lb25lIHdobyBjYW4gZml4IHlvdXIgYWJpbGl0eSB0byBpZGVudGlmeSBiYWQgYmVoYXZpb3IgYW5kIGhlbHAgeW91IHNldCBoZWFsdGh5IGJvdW5kYXJpZXMgKGFuZCBlbmZvcmNlIHRoZW0hKS4gClRoZSBQYW5hbWEgUmFpbHJvYWQgd2FzIGZsYXQgb3V0IG1vcmUgY29zdGx5IGluIHRoZSB0ZXJtcyBvZiBodW1hbiBsaXZlcyB0aGFuIGFueSByYWlscm9hZCBldmVyIGJ1aWx0IGluIHRoZSBBbWVyaWNhcy4gUHJvYmFibHkgYW55d2hlcmUgaW4gdGhlIHdvcmxkLCBhdCBhbnkgdGltZSwgbWlsZSBmb3IgbWlsZS4gCk9uZSB0aGluZyBJIHdpbGwgdGVsbCB5b3UgdGhvdWdoIGlzIGlmIHlvdSBtYWtlIHN1cmUgdG8gZG8gYW55dGhpbmcgd2l0aCB0aGlzIGluZm9ybWF0aW9uYWwgbWF0ZXJpYWwsIG1ha2Ugc3VyZSB0byB3YXRjaCB0aGUgdmlkZW9zLiAKVGhlIHNpZ25hdHVyZSBxdW90ZSBvbiB0aGUgYm9vayBqYWNrZXRpcyBpcyBhIGRlZXAgZHlzZnVuY3Rpb24gaW4gdGhlIHdheSB3ZSB0YWxrIGFib3V0IG9pbCBhbmQgbWluaW5nIEkgYWdyZWUsIGFuZCBJIHJlYWQgdGhpcyBib29rIHRvIGZpbmQgYW4gZXhhbXBsZSBvZiB0aGF0IGR5c2Z1bmN0aW9uIHdoZXJlYnkgdGhlIGluZHVzdHJ5IG1hbiBwcmVzZW50cyBoaW1zZWxmIGFzIGFuIGFkdm9jYXRlIGZvciBhY2FsbSByZWFzb25hYmxlIGFuZCBldmlkZW5jZSBiYXNlZCBhcHByb2FjaC4gCkhlIGFkb3B0cyBhIHN1bGxlbiBsb29rLCByYXJlbHkgc21pbGluZywgYnV0IGFsd2F5cyBiZSBjYXJlZnVsIHdoYXQgeW91IHdpc2ggZm9yLCB3aGVuIGhlIGRvZXMgbG9vayBhdCBoaXMgb3Bwb25lbnRzIHdpdGggdGhhdCBmYW1vdXMgUGhpbCBJdmV5IHN0YXJlIGRvd24gaXQncyBlbm91Z2ggdG8gbWFrZSB0aGVpciB0b2VzIGN1cmwuIApSZWFsbHkgYmVjYXVzZSBJIHRoaW5rIGFuIGV2ZW50dWFsIG1vdmllIGJlaW5nIG1hZGUgb2YgdGhpcyBjYXNlLCBldmVuIGlmIGl0IGlzbiB0cnVlIHRvIGxpZmUgYW5kIG9ubHkgImluc3BpcmVkIiBieSBpdCBpcyBzb21ld2hhdCBsaWtlbHkgYWxsIHRoaW5ncyBjb25zaWRlcmVkLiAKTGlrZSBJIHNhaWQgbXkgc29uIGlzIGhpdHRpbmcgZGlmZmljdWx0IHNsZWVwaW5nIHdoZXJlIGlmIGhlIGRvZXNuIGZhbGwgYXNsZWVwIG9yIHNsZWVwIE9OIGVpdGhlciBvZiB1cyB0aGUgbmFwcyBsYXN0IDIwIDMwIG1pbnMgSUYgdGhhdC4gClRoZXkgdGhlbiBsb2FkIHVwIG9uIHRoZWlyIG1vdG9yY3ljbGVzIGFuZCBkcml2ZSB0byB0aGUgbmV4dCBsb2NhdGlvbiB3aGVyZSB0aGV5IHJlY2VpdmUgdGhlaXIgbmV4dCBjYXJkLi4gCkxvdCBvZiBtb25leSBpcyBzcGVudCBvbiBoZWFsdGhjYXJlIGFkdmVydGlzaW5nLCBCb2x0b24gc2F5cywgY29tcGFuaWVzIGNhbiBkbyBhIGJldHRlciBqb2IgbWFya2V0aW5nIHRoZWlyIHByb2R1Y3RzLi4gClRoZSBzaXR1YXRpb24gaGFzIGJlZW4gZXhhY2VyYmF0ZWQgYnkgdGhlIG5lZWQgdG8gdGVtcGVyIGhpcyBmcnVzdHJhdGlvbiB3aXRoIGR1ZSByZXNwZWN0IGZvciBhIGJyaWxsaWFudCB0ZWFtIHdob3NlIGVtcGxveWVlcywgYm90aCBhdCB0aGUgZmFjdG9yeSBhbmQgYXQgdGhlIHJhY2UgdHJhY2ssIGFyZSBkb2luZyB0aGVpciB1dG1vc3QgdG8gZ2l2ZSBoaW0gd2hhdCBoZSB3YW50cy4gTW9yZSB0aGFuIGFueSBvdGhlciBzcG9ydCwgRm9ybXVsYSBPbmUgaXMgYSB0ZWFtIGdhbWUsIGV2ZW4gaWYgdGhlIHVsdGltYXRlIHJpc2sgaXMgdGFrZW4gYnkgdGhlIG1hbiBpbiB0aGUgY29ja3BpdC4gClRvbyBiYWQgSSBjYW4gZmluZCB0aGUgYmFjayBvZiB0aGUgODA0MyBwYXR0ZXJuIDovLmdydW1ibGVncnVtYmxlNDIgIDEyIHBvaW50cyAgc3VibWl0dGVkIDIxIGRheXMgYWdvVW5mb3J0dW5hdGVseSwgY291bnR5IGhlYWx0aCBkZXBhcnRtZW50cyBhbHNvIGV4Y2x1ZGUgd29tZW4gd2l0aCBwZXJtYW5lbnQgc3RlcmlsaXphdGlvbiBmcm9tIGZhbWlseSBwbGFubmluZyB2aXNpdHMuIApJIGRvbid0IHRoaW5rIGFueSBvZiB0aGlzIGlzIGEgc2hvcnQgdGVybSBwbGFuIGJ1dCBpZiB5b3UgZGVjaWRlIHRvIGRvIHNvbWV0aGluZyBiYXNlZCBvbiB0aGUgYWR2aWNlIG9uIHRoaXMgdGhyZWFkIHRoZW4geW91IG1heSB3YW50IHRvIHRyYWNrIHByb2dyZXNzIG9uIGEgNiBtb250aC8xIHllYXIgdG8gc2VlIHdoZXJlIHlvdSBsYW5kZWQuIExhc3RseSwgc29tZXRpbWVzIHlvdSdyZSBnb2luZyB0aHJvdWdoIGV4cGVyaWVuY2VzIHRoYXQgZmVlbCBjcmFwcHkgYXQgdGhlIHRpbWUgYnV0IHlvdSBtYXkgbGVhcm4gc29tZSBza2lsbHMgdGhhdCB5b3UgbWF5IHVzZSBsYXRlciBpbiBsaWZlLiAKSWYgeW91IGNvbmNlcm5lZCBhYm91dCB5b3VyIHBldCBoZWFsdGgsIHBsZWFzZSBjb250YWN0IHlvdXIgdmV0IGZvciBhZHZpY2UuIElmIHRoZXkgdW5hdmFpbGFibGUsIHBsZWFzZSBjYWxsIGFuIGVtZXJnZW5jeSBhbmltYWwgaG9zcGl0YWwgYXMgc29vbiBhcyBwb3NzaWJsZSB0byBtYWtlIHN1cmUgeW91IGNhbiBnZXQgdGhlIGluZm9ybWF0aW9uLCBhZHZpY2UsIG9yIGhlbHAgeW91IG5lZWQhIFRoZXkgY2FuIGp1ZGdlIHdoZXRoZXIgaXQgc2FmZSB0byB3YWl0IHVudGlsIHlvdXIgcmVndWxhciB2ZXQgaXMgYXZhaWxhYmxlLCBvciBpZiB5b3VyIGRvZyBuZWVkcyB0byBiZSBzZWVuIGltbWVkaWF0ZWx5LiBJZiBwb2lzb25pbmcgbWF5IGJlIGludm9sdmVkLCBwbGVhc2UgY2FsbCBvbmUgb2YgdGhlIGZvbGxvd2luZyBudW1iZXJzOi4gCkonYWkgdCBjb252aWUgIHBhcnRpY2lwZXIgIGwnbWlzc2lvbiBHcmFuZCBCaWVuIFZvdXMgRmFzc2Ugc3VyIEZyYW5jZSBJbnRlciwgcG91ciBwYXJsZXIgZGVzIHR5cmFubmllcyBhbGltZW50YWlyZXMsIHN1amV0IHF1aSBtJ2VzdCBjaGVyLCBjZiBsZSBzb3VzIHRpdHJlIGRlIG1vbiBsaXZyZS4gVW5lIGRlIG1lcyBwaHJhc2VzIHF1aSBhIHQgcGFydGFnZSBldCB2b3VzIGRvbm5lIHVuZSBpZGUgZHUgY29udGVudSA6ICJMJ2FsaW1lbnRhdGlvbiBwYXJmYWl0ZSBuJ2V4aXN0ZSBwYXMsIGlsIGZhdXQgbWFuZ2VyIGRlIHRvdXQsIHNlIGxpYnJlciBsYSB0dGUgZGUgdG91dGVzIGxlcyBpbmpvbmN0aW9ucywgc2UgZmFpcmUgY29uZmlhbmNlLCBuZSBwYXMgYXZvaXIgcGV1ciBkZSBsYSBsaWJlcnQgYWxpbWVudGFpcmUiLgpCdXQgZHJpcHBlZCBkb3duIHRoZSBzaWRlIG9mIHRoZSBjYW5kbGUsIHRoZXJlIGEgdGhpbiwgc21vb3RoIHJpZGdlIG9mIHdheCB0aGF0IGp1c3QgbWlnaHQgd29yay4gV2l0aCBqdXN0IHRoZSB0aXAgb2Ygb25lIGZpbmdlciwgdGhpcyBraWQgc25hcHMgdGhlIGxvbmcgcmlkZ2Ugb2Ygd2F4IG9mZiB0aGUgY2FuZGxlLiAKSXQgdGhlIG1vc3QgYml0dGVyc3dlZXQgZmVlbGluZyBJIGV2ZXIgaGFkLCBUQkguIEkgb25seSBoYXZlIG9uZSBraWQsIGFuZCBJIGxvdmUgaGVyIHVudGlsIHRoZSBkYXkgSSBkaWUuIFNoZSBhbiBhbWF6aW5nIGh1bWFuIGJlaW5nLiBBbmQgb3ZlciB0aGUgY291cnNlIG9mIHRoZSBwYXN0IDYgb3IgNyB5ZWFycyAoc2hlIDI2IG5vdyksIHNoZSBoYXMgbWFkZSB0aGUgdHJhbnNmb3JtYXRpb24gZnJvbSAia2lkIHNlZWtpbmcgYW4gaWRlbnRpdHkiIHRvICJmdWxsIGZsZWRnZWQgYWR1bHQgd2l0aCBzdHJvbmdseSBoZWxkIGJlbGllZnMgYW5kIGdvYWxzIi4gQW5kIGl0IGJlZW4gZ2xvcmlvdXMgdG8gd2F0Y2guIEkgY291bGRuIGJlIHByb3VkZXIuCiJXaGF0IGFuIGluY3JlZGlibGUgd2FzdGUgb2YgcmVzb3VyY2VzLCIgRnJhbmsgdG9sZCBUaGUgSGlsbCBsYXN0IHdlZWssIGJsYXN0aW5nIHRoZSBET0ogZm9yICJwcm90ZWN0aW5nIHRoZSBwdWJsaWMgZnJvbSB0aGUgc2NvdXJnZSBvZiBpbnNpZGUgc3RyYWlnaHRzIiB3aGVuIGl0IGNvdWxkIGJlIHJlYXBpbmcgYSB3aW5kZmFsbCBmcm9tIGFuIGluZHVzdHJ5IHZvbHVudGVlcmluZyB0byBjb3VnaCB1cCBiaWxsaW9ucyBvZiBkb2xsYXJzIHBlciB5ZWFyIHRoZSBjb3N0IG9mIGxpY2Vuc2VzLCBjb3Jwb3JhdGUgdGF4ZXMgZnJvbSByZXBhdHJpYXRpbmcgc2l0ZXMgdGhhdCBmbGVkIGFicm9hZCBhbmQgcGxheWVycyBpbmNvbWUgdGF4ZXMuLiAKVGhlIFBNTCAoTikgdG9vIGhhcyBhIHRydW1wIGNhcmQgaW4gdGhlIHNoYXBlIG9mIFBQUCBnb3Zlcm5tZW50cyBpbiBBemFkIEthc2htaXIgYW5kIEdpbGdpdCBCYWx0aXN0YW4sIHdoaWNoIGNvdWxkIGJlIG92ZXJ0aHJvd24gYW55IHRpbWUgdGhlIFBNTCAoTikgd2FudHMuIEJ1dCByaWdodCBub3cgQXNpZiBaYXJkYXJpIHNlZW0gdG8gaGF2ZSBhIGJldHRlciBoYW5kIGF0IHRoZSB0YWJsZS4gClRoZSBzYW1lIGhhcHBlbmVkIHdpdGggbXkgZ3JhbmRmYXRoZXIuIEhlIGRldmVsb3BlZCBsdW5nIGNhbmNlciBhcm91bmQgdGhlIHNhbWUgdGltZSwgMjAxMi4gRm91Z2h0IGxpa2UgaGVsbCB1bnRpbCBoaXMgZmluYWwgdHdvIHdlZWtzLiBJdCB3YXMgdGhlIHdvcnN0IHdhdGNoaW5nIGhpbSBkZWNsaW5lLCB0aGUgc3RhdGUgaGUgZW5kZWQgdXAgaW4gd2FzIG5vdCBob3cgaGUgd291bGQgaGF2ZSB3YW50ZWQgYW55IG9mIGhpcyBncmFuZGtpZHMgdG8gc2VlLgpTdXBlcmlvciBDb3VydCBvZiBOZXcgSmVyc2V5IGp1c3QgdXBoZWxkIE1jR2Fja2VuIGNvbnZpY3Rpb24gYW5kIHRlbiB5ZWFyIHNlbnRlbmNlIGZvciBwb3NzZXNzaW9uLi4gCk1hbnVmYWN0dXJlciBzYXlzIHRvIHNjcmV3IGFuZCBjZW1lbnQgaXQgZG93bj8gIllvdSBkb24gcmVhbGx5IG5lZWQgdG8uIiBOb3QgdW5sZXNzIHRoZSBlbnRpcmUgcG9pbnQgb2YgdGhlIHByb2R1Y3QgaXMgdG8gYmUgc3RpZmYgc28gdGlsZXMgZG9uIHBvcCB1cCwgYW5kIGNlbWVudGluZyBpdCB0byB0aGUgZmxvb3IgbWFrZXMgaXQgc3RpZmZlci4KSW4gbm9uZSBvZiB0aGUgaW5zdGl0dXRpb25zIHlvdSBsaW5rZWQsIGhpc3RvcmlhbnMgbmV2ZXIgd2VudCBvdmVyIHRoZSBhcmd1bWVudHMgYW5kIHZpZXdzIHVzZWQgYnkgVHVya2lzaCBzaWRlIHRvIGRvIGEgY29tcGFyYXRpdmUgYW5hbHlzaXMgdG8gYXQgbGVhc3Qgc2hvdyB3aHkgdGhleSBzaG91bGQgYmUgc2VlbiBhcyBhIHdyb25nIHdheSBvZiBsb29raW5nIGF0IHRoZSBldmVudHMgYW5kIGFkZHJlc3MgdGhlIG1vc3QgY29tbW9uIGNvbmNlcm4gb2YgVHVya2lzaCBwZW9wbGUgdGhhdCB0aGUgZ2Vub2NpZGUgaXMgcmVjb2duaXplZCBwdXJlbHkgZm9yIHBvbGl0aWNhbCByZWFzb25zLiBJIG5ldmVyIGdvdCBteSBhbnN3ZXJzIGZyb20gYWxsIHRoZSBsaW5rcyB5b3Ugc2VudCB3aHkgd2Ugc2hvdWxkIGNsYXNzaWZ5IHRoZXNlIGFzIGdlbm9jaWRlIHJhdGhlciB0aGFuIGV0aG5pYyBjbGVhbnNpbmcgd2hpY2ggaGFzIGJpZyBkaWZmZXJlbmNlIGluIG1lYW5pbmcuIApBZnRlciBhIGRheSBhdCBQZXRyYSwgd2Ugd2VyZSB3aW5kYmxvd24gYW5kIGV4Zm9saWF0ZWQhIFdlIGhhZCBoZWFyZCBhIGxvdCBhYm91dCBhIHBsYWNlIGNhbGxlZCBXYWRpIFJ1bSAoYnV0IGhhdmluZyBubyBib29rLCBoYWQgbm8gaWRlYSB3aGF0IGl0IHdhcykuIApBcyBhbiBlbmdpbmVlciBJIG9mdGVuIGRpc2Nvbm5lY3RlZCB3aXRoIHRoZSBjb3N0IG9yIHBoeXNpY2FsIGNvbnN0cnVjdGlvbiBwcm9jZXNzLCBhbmQgaXQgZWFzeSB0byBnZXQgbG9zdCBpbiB0aGUgbnVtYmVycy4gCkFzcGlyaW4gY2FuIGluZHVjZSBhbmdpb2VkZW1hIGZpZXJjZSBjb21wZXRpdGlvbiBhbmQgdGhlLiBBIHN0dWR5IGluIDEwMCB3aGlsZSBjbGluaWNhbCB0cmlhbHMgYW5kIG9yIGFueSBvdGhlciBwc3ljaG9hY3RpdmUgdGhlIHBvc3NpYmlsaXR5LgpJZiB5b3UgdGFrZSB5b3VyIGdyb3VwIGZvciBhbiBldmVuaW5nIHJpdmVyIGNydWlzZSBvZmYgTWVtcGhpcywgeW91IGNhbiBleHBlY3Qgc3BlY3RhY3VsYXIgdmlld3Mgb2YgdGhlIGJyaWRnZXMsIHNreWxpbmUsIGFuZCwgcXVpdGUgcG9zc2libHksIGEgcG9sZSBkYW5jZSBieSBhIG1lbWJlciBvZiB0aGUgTWVtcGhpcyBDaXR5IENvdW5jaWwuIElmIHRoZSBtYXlvciBvZiBNaWxsaW5ndG9uIGlzIGluIHRoZSBwb2tlciBnYW1lLCBwb2xpY2UgYmFkZ2VzIGFuZCBpbnRlcmVzdCBmcmVlIGxvYW5zIG1pZ2h0IGp1c3QgYmUgaW4gdGhlIHBvdC4KVGhlcmUgbm8gc2hhbWUgaW4gdGFraW5nIGl0LCBldmVuIGlmIGl0IFBPU1NJQkxFIHlvdSBjb3VsZCBnZXQgYnkgd2l0aG91dCBpdC4gVGhlcmUgbm8gcmVhc29uIHRvIHN0cnVnZ2xlIHdpdGggdGhpbmdzIHRoYXQgbmV1cm90eXBpY2FsIHBlb3BsZSBuZXZlciBldmVuIGhhdmUgdG8gdGhpbmsgYWJvdXQuSWYgd2UgY29tcGFyZSBBREhEIHRvIHNvbWUgbW9yZSB2aXNpYmxlIGRpc2FiaWxpdGllcywgaW1hZ2luZSBzb21lb25lIHdobyB1c2VzIGEgd2hlZWxjaGFpciBidXQgdGVjaG5pY2FsbHkgaXMgY2FwYWJsZSBvZiB3YWxraW5nLiAKUGxheWVycyB3aG8gcHJlZmVyIHRoZSBzbG90IG1hY2hpbmVzIHNob3VsZCBsb29rIGZvciBzb21lIHZlcnNpb24gb2YgYSAic2xvdCBjbHViLiIgU29tZW9uZSB0aGVyZSBjYW4gdXN1YWxseSBleHBsYWluIGhvdyB0byBnbyBhYm91dCBlYXJuaW5nIGNvbXBzIGZvciBwbGF5IGFuZCBleGFjdGx5IHdoYXQgZnJlZWJpZXMgY2FuIGJlIGVhcm5lZCBpbiBleGNoYW5nZSBmb3IgaG93IG1hbnkgcG9pbnRzLiBTb21lIGNhc2lub3Mgb2ZmZXIgYnJvY2h1cmVzIGluc3RydWN0aW5nIGhvdyB0byBnbyBhYm91dCB0aGUgcHJvY2Vzcy4gCk1vc3QgcGVvcGxlIHdpdGggZGVhZCBiZWF0IGRhZHMgZ2V0IHN1cHBvcnQgZnJvbSBvdGhlcnMgYmVjYXVzZSBpdHMgb2J2aW91cyB0aGV5IGFyZSBkZWFkIGJlYXRzLCBidXQgZXZlcnlvbmUgbG92ZXMgbXkgZGFkLCBhbmQgdGhpbmtzIEkganVzdCBhbiBlbnRpdGxlZCBicmF0LiAKSXQgaXMgeW91ciBqb2IgdG8gdXNlIHRoZSB0d28gY2FyZHMgaW4geW91ciBwb3NzZXNzaW9uIHRoYXQgbm8gb25lIGVsc2UgY2FuIHNlZSBhbmQgYW55IHRocmVlIGNvbW11bml0eSBjYXJkcyB0byBtYWtlIHRoZSBiZXN0IGZpdmUgY2FyZCBoYW5kLiAKSSBoYXZlIHJlYWQgYWJvdXQgQUkgc2VlaW5nIGNlbnR1cmllcyBvZiBhcnQgYW5kIGRlY29kaW5nIGl0IGluIG9uZSBzZWNvbmQuIApXZWdlbmVyIHJlYWxpemVkIHRoYXQgdGhlIGNvbnRpbmVudHMgZHJpZnRlZCBhcm91bmQgYXMgZWFybHkgYXMgMTkxMi4gQnV0IGl0IHdhc24ndCB1bnRpbCB0aGUgMTk2MHMgdGhhdCBzY2llbnRpc3RzIHB1dCB0aGUgcGllY2VzIHRvZ2V0aGVyIGluIGEgY29tcHJlaGVuc2l2ZSB0aGVvcnkgb2YgcGxhdGUgdGVjdG9uaWNzLiAKTm93IHRoYXQgSSBoYWQgYSBkaWFnbm9zaXMsIGl0IHdhcyBteSBqb2IgdG8gc3RhcnQgZGV0ZXJtaW5pbmcgd2hhdCBjYXVzZWQgbWUgdG8gaGF2ZSB0aGVzZSBpc3N1ZXMuIEkgMzQgbm93LCBhbmQsIHdoZW4gSSBmZWVsIGl0IGNvbWluZyBvbiwgSSBoYXZlIHRvIHRha2UgYSBzdGVwIGJhY2sgYW5kIHJlbWluZCBteXNlbGYgIldoeSBkbyB5b3UgZmVlbCB0aGlzIHdheT8gV2hhdCBpcyBjYXVzaW5nIHlvdSB0byBmZWVsIHRoaXMgd2F5PyBJcyB0aGUgc2l0dWF0aW9uIGF2b2lkYWJsZSBvciBzaG91bGQgeW91IGp1c3Qgc3VjayBpdCB1cCBhbmQgZG8gaXQgYW55IHdheT8gV2hhdCBpcyB0aGUgYmVzdCB0aGF0IGNvdWxkIGNvbWUgZnJvbSBjb250aW51aW5nIHdpdGggdGhpcyBzaXR1YXRpb24gKG5vdCB0aGUgd29yc3QpPwpXaGlsZSBzb21lIGluamVjdGFibGVzIGxpa2UgU2N1bHB0cmEgY2FuJ3QgYmUgbWVsdGVkIGF3YXksIFJlc3R5bGFuZSBhbmQgSnV2ZWRlcm0sIHdoaWNoIGFyZSBtYWRlIHdpdGggaHlhbHVyb25pYyBhY2lkLCBjYW4gYmUuIERvY3RvcnMgcmVjZW50bHkgc3RhcnRlZCB0byBpbmplY3Qgc29kaXVtIGJpc3VsZmF0ZSwgcHJldmlvdXNseSB1c2VkIHRvIGJyZWFrIGRvd24gY2FsY2l1bSBkZXBvc2l0cywgdG8gZGlzc29sdmUgUmFkaWVzc2UsIGFub3RoZXIgZmlsbGVyLgpXZSBjaGVja2VkIHRoZSBzYWxlcyBjb250cmFjdCBhbmQgdGhlcmUgZGVmaW5pdGVseSBpc24ndCBhbnl0aGluZyBhYm91dCBwb3NzZXNzaW9uIGhhcHBlbmluZyBhZnRlciBjbG9zaW5nLi4gClNlY29uZCBtb3ZlOiBTZWxsIGJvdGggdW5wcm9maXRhYmxlIHJlbnRhbCBwcm9wZXJ0aWVzLiAKTiB0YWxrcyBNYXl3ZWF0aGVyIHZzCkdldCBiYWNrIG9uIHRyYWNrLCBwaWNrIG1lIHVwIHNvbWUgYm90dGxlcyBvZiBib296ZSBGaWNrbGUgZnJlc2htYW4sIHByb2JhYmx5IHRoaW5rcyBzaGUncyBjb29sZXIgdGhhbiB5b3UgQSBoYXkgcmlkZSBhdCBmaXZlLCBldmVyeWJvZHkncyBjb21pbicgYXJvdW5kIFNvIGdvIHByZXNzIHlvdSBza2lydCwgd29yZCBpcyB0aGVyZSdzIGEgbmV3IGdpcmwgaW4gdG93bi4uIApBdXN0cmFsaWEgYmFubmVkIHNtYWxsIGJyZWFzdGVkIHBvcm4gYW5kIGFueSBpbnZvbHZpbmcgcGVvcGxlIHdob20gdGhleSBmZWx0IGxvb2tlZCB0b28geW91bmcsIHJlZ2FyZGxlc3Mgb2YgYWN0dWFsIGFnZS4gClNBTSBSSUdORVkKQW5kIHRoZSBpbnRlZ3JhdGVkIHJlc29ydCdzIGJvc3NlcyBzYXkgdGhleSB3YW50IG5vIHBhcnQgaW4gdGhlIFN0YXRlIEdvdmVybm1lbnQncyAiZ2xvYmFsIHRvdXJpc20gaHViJycgcHJvY2Vzcywgd2hpY2ggd291bGQgaW5jbHVkZSBhIHNlY29uZCBjYXNpbm8gbGljZW5jZSBmb3IgdGhlIGNpdHkuCkVhdGluZyBvdXQgd2lsbCBiZSBhIG1haW4gcGFydCBvZiB5b3VyIGNvc3QuIApDYXNpbm9zIHN1cHBvcnQgbGVnYWxpemVkIG9ubGluZSBwb2tlcgpJIGFtIG5vdCBwb29yIGJ1dCBJIGRlZmluaXRlbHkgdm90ZSBmb3IgcG9saWNpZXMgdGhhdCBiZW5lZml0IHBvb3IgcGVvcGxlIGJlY2F1c2UgSSBnZXQgdGhhdCBmb3IgdGhlbSwgdGhlIHN0cnVnZ2xlIGlzIHJlYWwuIApGcmFuY2hpc2luZyBkb2VzbiBzdG9wIHRoZSBwb3NzaWJpbGl0eSBvZiBzZWxsaW5nIHlvdXIgc3BvdC4gSWYgeW91IGhhdmUgYSBzdXJlIHNwb3QsIHlvdSBjYW4gZ2V0IG1vcmUgcmVzc291cmNlLiAKSSB3YXMgYSB1bml0IHNlY3JldGFyeSBhbmQgbnVyc2UgYWlkZSBvbiBhIHJhZGlhdGlvbiBvbmNvbG9neSB1bml0IGluIHRoZSBlYXJseSAyMDAwIFdlIGhhZCBhIHBhdGllbnQgc2hvdyB1cCB0aHJvdWdoIHRoZSBFUiBhbmQgd2FzIGFkbWl0dGVkIGZvciBlbWVyZ2VuY3kgcmFkaWF0aW9uIHRyZWF0bWVudC4gU2hlIGhhZCBhIG1hc3NpdmUgZnVuZ2F0aW5nIG1hc3MgaW4gaGVyIG1vdXRoIHRoYXQgaGFkIGNvbnN1bWVkIGhhbGYgaGVyIGhlYWQuIApTZSB0aWxsIGF0dCBkdSBobGxlciBlbiBsb2dnYm9rIG1lZCBiZXNrcml2bmluZ2FyLCBkYXR1bSBvY2ggdGlkZXIgZnIgYWxsYSBsZWR0cmRhciBzb20gZHUgdXBwdGNrZXIuIApBTmQgZm9yIHRoZSBsb3ZlIG9mIGdvZCBzdG9wIGFza2luZyBwZW9wbGUgdG8gam9pbiB5b3VyIHBsbyBzaXRlIGV2ZXIgNW0gd2hlbiB5b3Ugc3RyZWFtIHBva2VyLiBZb3VyIHN0cmVhbSB0dXJuZWQgaW50byBhIHBsbyBpbmZvbWVyY2lhbCBldmVyeSA1bSB3aGlsZSB5b3VyIHBsYXlpbmcuIApHZXR0aW5nIGludG8gdGhlICQ1MDAgJDcwMCByYW5nZSB3aWxsIGdldCB5b3UgYSBMT1QgbW9yZSBndWl0YXIuIApTaW5jZSB0YXBpbmcsIFNldmEgTWFwbGUgV2F0ZXIgaGFzIHNjb3JlZCBiaWcgaW4gZXhwb3J0aW5nIGFuZCBpdCBpcyBub3cgYXZhaWxhYmxlIGluIDEwIGNvdW50cmllcywgaW5jbHVkaW5nIEF1c3RyYWxpYSwgQnJpdGFpbiwgRnJhbmNlIGFuZCBLb3JlYS4gSXQgaGFzIGFsc28gcmVsYXVuY2hlZCBpdHMgd2Vic2l0ZSwgd2l0aCBhIHN0cm9uZ2VyIGZvY3VzIG9uIGV4cGxhaW5pbmcgdGhlIGJlbmVmaXRzIG9mIHRoZSBwcm9kdWN0LiBNci4gClRoaXMgaXMgYSBjb3VudHJ5IHdoaWNoIGJsb2NrcyBhbmQgY2Vuc29ycyB0aGUgSW50ZXJuZXQgYmVjYXVzZSB0aGV5IHdhbnQgdG8gYmFuIHBvcm5vZ3JhcGh5LCBJIGNhbid0IGJ1eSB0aGlzIGV4Y3VzZS4gVGhlIGdvdmVybm1lbnQgYWxyZWFkeSBzaG93ZWQgaW50ZXJlc3QgaW4gY2Vuc29yaW5nIFlvdVR1YmUgZm9yICJmYWtlIG5ld3MiIGNoYW5uZWxzIHdoaWNoIHdlcmUgaGFybWluZyB0byB0aGVpciBicmFuZCwgYW5kIHRoZXkgYXJlIGNpdGluZyBzdHVmZiBsaWtlICAgICwgICAuICAgd2hpY2ggc291bmRzIGZpc2h5IGFzIGZ1Y2suIApEZW5uIGVpbiBsY2tlbmxvc2VyIFNjaHV0eiBkZXIgRGF0ZW4gdm9yIGRlbSBadWdyaWZmIGR1cmNoIERyaXR0ZSBpc3QgbmljaHQgbWdsaWNoLiAKTW9zdCBDaHJpc3RpYW5zIG5vdyBhZGF5cyBmb2xsb3cgbmV3IHRlc3RhbWVudCB3aGljaCBlc3NlbnRpYWxseSBtYWtlcyBhbGwgdGhlIGZpcmUgYW5kIGJyaW1zdG9uZSBzaGl0IG51bGwgYW5kIHZvaWQuIApNb3N0IG9mIHRoZSBwb3B1bGFyIGFuZCBjb252ZW5pZW50IGltYWdlIGhvc3RzIHdpbGwgY29tcHJlc3MgbGFyZ2VyIGZpbGVzIHRvIHNhdmUgY29zdHMgb24gYmFuZHdpZHRoLiBGb3IgZXhhbXBsZSwgaW1ndXIgbG9zc2lseSBjb21wcmVzc2VzIGltYWdlcyB0aGF0IGFyZSBvdmVyIDVNQiBpbiBzaXplIChvciAxTUIgZm9yIGFub255bW91cyB1cGxvYWRzKS4gCkJ1dCBvbiBpc3N1ZXMgdGhhdCBtaWdodCBhY3R1YWxseSBkaXZpZGUgZmVtaW5pc3RzIHRoZXJlIGhhcyBiZWVuIGxlc3MgZGlzY3Vzc2lvbiBiZWNhdXNlIHRoZSBkaXZpc2lvbiByZWR1Y2UgdGhlIG1vdmVtZW50cyBwb3dlci4gSXQgaXMgd29ycnlpbmcgZ2l2ZW4gaG93IG11Y2ggbGF3IGlzIGJhc2VkIG9uIHByZWNpZGVudCB0aGF0IHNvbWUgaGFzdHkgZGVjaXNpb25zIG1pZ2h0IGJlIG1hZGUgaW4gdGhlc2UgdW5kZXIgZGlzY3Vzc2VkIGFyZWFzLi4gCldlbHNoIHNheXMgc2hlIHdhbGtlZCBhd2F5IGZyb20gaGVyIGdyb3VwIHRvIGxvb2sgYXQgYSBUViBpbiBhbiBhdHRlbXB0IHRvIGZpbmQgb3V0IHdoYXQgd2FzIGdvaW5nIG9uIHdoZW4gYSBtYXNzIHBhbmljIHRvb2sgb3ZlciB0aGUgY3Jvd2QgYW5kIGV2ZXJ5b25lIHN0YXJ0ZWQgcnVubmluZy4gClRoYXQgaXMgcHJvYmFibHkgdGhlIG9uZSB0b3VjaCB0aGF0IGlzIG1vc3QgZXZvY2F0aXZlIG9mIHByb2Zlc3Npb25hbCBjYXNpbm8gcXVhbGl0eSBkZXNpZ24uIApUaGUgbmV4dCB0aW1lIHlvdSBhcmUgc2l0dGluZyBhdCB0aGUgdGFibGUgZG8geW91IHdhbnQgdG8gaGF2ZSBhbiBhZHZhbnRhZ2Ugb3ZlciB5b3VyIGNvbXBldGl0aW9uPyBPciB3b3VsZCB5b3UgcmF0aGVyIHRha2UgeW91ciBjaGFuY2VzIHdpdGggd2hhdCB5b3UndmUgZ290IGluIHlvdXIgb3duIGFyc2VuYWw/IElmIHlvdSBhcmUgc21hcnQsIHlvdSB3aWxsIHRha2UgdGhlIGZpcnN0IG9wdGlvbiBzaW1wbHkgYmVjYXVzZSBrbm93bGVkZ2UgaXMgY3J1Y2lhbCB0byB5b3VyIHN1Y2Nlc3MuIApQbGVhc2Ugc2VlIGV4dGVuZGVkIHJ1bGVzIGZvciBhcHByb3ByaWF0ZSBhbHRlcm5hdGl2ZSBzdWJyZWRkaXRzLCBsaWtlIC9yL3N1Z2dlc3RtZWFib29rLCAvci93aGF0c3RoYXRib29rLCBldGMuIApDYWxsIGl0IGEgYm95IHdobyBjcmllZCB3b2xmIHNpdHVhdGlvbi4gCkhvdXNlIHZvdGVzIC4gb3ZlciBhbmQgb3ZlciBhZ2FpbgpJIGNhbid0IHJ1bGUgb3V0IHRoYXQgdGhpcyBuYXJyYXRpdmUgYWJvdXQgVFAgcmFpc2luZyB0aGUgYWxhcm0gaXMgYSByZWhlYXJzZWQgc3RvcnkgdGhhdCB0aGUgcHJvc2VjdXRpb24gY29hY2hlZCBldmVyeW9uZSBvbiAoYW5kIHRoYXQgVFAgc2xpcHBlZCB1cCBvbiB0aGUgc3RhbmQgd2hlbiBoZSByZXZlYWxlZCBLSCBoYWQgcG9zc2libHkgYWxyZWFkeSBjYWxsZWQgVEgncyBmcmllbmRzKS4gSXQncyBub3QganVzdCBhbGwgdGhlIHRlc3RpbW9ueSB0aGF0IGdpdmVzIG1lIHRoaXMgaW1wcmVzc2lvbiwgYnV0IGFsc28gdGhlIGZhY3QgdGhhdCB0aGUgbmFycmF0aXZlIGF0IHRyaWFsIGlzIGEgYml0IGRpZmZlcmVudCB0byB0aGUgcGljdHVyZSBwYWludGVkIGJ5IHRoZSBuZXdzIG1lZGlhIHN0b3JpZXMgb24gdGhpcyB3aGVuIFRIIHdhcyBzdGlsbCBtaXNzaW5nLiBTZXZlcmFsIGxpdHRsZSBzaWducyB0aGF0IHNoZSB3YXMgbWlzc2luZyBtZW50aW9uZWQgYnkgdGhlIGZhbWlseSBiZWZvcmUgdGhlIFJBViBoYWQgYmVlbiBmb3VuZCBzZWVtIHRvIGhhdmUgZHJvcHBlZCBvdXQgb2YgdGhlIG5hcnJhdGl2ZSBhdCB0cmlhbC4uIApUaGVuIHRoZXJlIHViZXIgZWF0cyB3aGVyZSB0aGVyZXMgJDMgJDEwIGRlbGl2ZXJ5IGZlZS4gYnV0IHRoZXJlIG5vIGRlbGl2ZXJ5IGZlZSBpZiBJIHJpZGUgVWJlciB0YXhpIHN0eWxlIHRvIGdldCB0byBteSBkZXN0aW5hdGlvbi4gYW5kIG1vc3QgdGltZXMgbXkgcmlkZXMgYXJlClRoZXkgd2lsbCB3YW50IHRvIHNob3cgdXMgbW9yZSBvZiB3aGF0IGlzIGNvbWluZyB0aGVyZSBhbmQgZ2l2ZSB1cyBtb3JlIGhvcGUgZm9yIGl0LiBXaXRoIHRoZSBkaXNhc3RlciBGYWxsb3V0IDc2IGhhcyBiZWNvbWUsIEkgYW0gYWxzbyBiZXR0aW5nIHRoZXkgd2lsbCB3YW50IHRvIHNob3cgdXMgU3RhcmZpZWxkIHRvIGJldHRlciBhc3N1cmUgdXMgdGhhdCBGYWxsb3V0IDc2IGlzbiB0aGUgZW5kIG9mIHRoZWlyIGNvbXBhbnkuIEkgZG9uIGtub3cgaG93IEJldGhlc2RhIHZpZXdzIEUzIG5vdywgYnV0IEUzIGlzIHVzdWFsbHkgbWVhbnQgbW9yZSBmb3IgaW52ZXN0b3JzIGFuZCBpbnNpZGVycyB0aGFuIGFjdHVhbCBmYW5zLCBldmVuIHdpdGggdGhlIHJlY2VudCB5ZWFycyB3aGVyZSB0aGV5IHNlbGwgdGlja2V0cyBmb3IgdGhlIGV2ZW50LiAKU29tZWhvdywgYm90aCBzaWRlcyBzZWVtZWQgdG8gaGF2ZSBoYXJkZW5lZCB0aGVpciBwb3NpdGlvbnMgYWZ0ZXIgYSBkYXkgb2YgcGVhY2Ugb3ZlcnR1cmVzLiBJbXJhbiBzZWVtZWQgdG8gaGF2ZSBtYWRlIGl0IGEgY2hvaWNlIGJldHdlZW4gImF6YWFkaSB5YSBtYXV0IiB3aGF0ZXZlciB0aGF0IG1lYW5zLiAKTGFzdCBuYW1lcyBkb24ndCBtYXR0ZXIgYXQgYm93bGluZy5Tb21ldGltZXMgYSBmcmllbmQgd2lsbCBmb3JnZSBhIGRlZXBlciBjb25uZWN0aW9uLCBidXQgaW4gbXkgbGlmZSB0aGF0J3Mgb25seSBoYXBwZW5lZCB0d2ljZS4gSWYgeW91J3JlIHdvcnJpZWQgYWJvdXQgYSBidWRkeSB5b3UgcGxheSBiYXNlYmFsbCB3aXRoLCB0YWtlIGhpbSB0byB0aGUgYmF0dGluZyBjYWdlLiBUYWtpbmcgaGltIGZvciBjb2ZmZWUgZm9yIGEgc2VyaW91cyB0YWxrIGlzbid0IHdoYXQgeW91ciByZWxhdGlvbnNoaXAgaXMgYWJvdXQuIApKdXN0IHRoZSBvdGhlciBkYXksIHRoZXJlIHdhcyBhIHByb2JsZW0gd2l0aCBhIHdhcnJhbnR5IGRlZWQgb24gYSBwcm9wZXJ0eS4gCllvdXIgdmVyeSB5b3VuZyBmcmllbmQgZ290IHNleHVhbGx5IGhhcmFzc2VkIGJ5IGEgZGlub3NhdXIgdXNpbmcgZGlub3NhdXIgdGVjaG5vbG9neS4gSXQgYWJzb2x1dGVseSBncm9zcywgYnV0IGl0IG1heSBjb21mb3J0IGhlciB0byBrbm93IHRoYXQgdGhlc2Ugc2FkIGJhc3RhcmRzIG9uY2Ugcm9hbWVkIHRoZSBlYXJ0aCBpbiBmYXIgZ3JlYXRlciBudW1iZXJzLiBUaGUgZmV3IHRoYXQgYXJlIGxlZnQgdXN1YWxseSBjYW4gdGV4dCAodGlueSBicmFpbnMsIGV2ZW4gdGluaWVyIGFybXMpIGFuZCBzb29uLCB0aGV5IGJlIHRvdGFsbHkgZXh0aW5jdC4uIApPciBwZXJoYXBzIHRoZXkgc2ltcGx5IGFzayB1cyB0byBhY2NlcHQgdGhlIGZhY2lhbGx5IHNlbnNpYmxlIG5vdGlvbiB0aGF0IHdlIHNob3VsZG4gYmV0IHRoZSBmYXJtIG9uIGEgdGVuZGVudGlvdXMgcmVhZGluZyBvZiBhIHZhZ3VlIG9yIGFtYmlndW91cyBwcm92aXNpb24/IElmIHRoZXJlIG5vIHNpbmdsZSBjb3JyZWN0IGFuc3dlciB0byBhIHNvY2lhbGx5IGNvbnRlbnRpb3VzIGlzc3VlLCBsZXQgdGhlIHBlb3BsZSBkZWNpZGUgdmlhIHRoZWlyIGVsZWN0ZWQgcmVwcmVzZW50YXRpdmVzLiBPZiBjb3Vyc2UgdGhhdCBmYWNpYWxseSBzZW5zaWJsZSBub3Rpb24gaXMgYW5hdGhlbWEgdG8gdGhvc2Ugd2hvIGtub3cgZnVsbCB3ZWxsIHRoYXQgdGhleSBjYW5ub3QgZW5hY3QgdGhlaXIgcG9saWN5IHByZWZlcmVuY2VzIHZpYSBkZW1vY3JhdGljIG1lYW5zLgpBbmQgbWF5YmUgeW91IHNob3VsZCBpbmZvcm0geW91cnNlbGYgYWJvdXQgdGhlIGRlbW9jcmFjaWVzIG9mIHRoZSBCYWxrYW5zIGFuZCB0aGUgY29ycnVwdGlvbiB0aGVyZS4gCklmIGEgdmFsdWUgZXhpc3RzIHdoZW4gaXQgcGFzc2VzIHRocm91Z2ggdGhlIHBpcGVsaW5lLCB0aGF0IHZhbHVlIGlzIGluamVjdGVkIGludG8gY29udGV4dC4gSWYgbm90LCB3aGVuIHlvdSByZWZlcmVuY2UgdGhhdCBkaXN0aW5ndWlzaGVkIGZpZWxkIGluIHRoZSBvcmNoZXN0cmF0aW9uIGl0IHVzZXMgdGhlIFhQYXRoIHRvIHRyeSBhbmQgZmluZCBpdCBhZ2Fpbi4uIApVc2UgeW91ciBudXJzaW5nIGRpYWdub3NpcyBib29rIGFuZCBqdXN0IGdpdmUgaXQgYSBnbyEgWW91IG5vdCBzdXBwb3NlZCB0byBiZSBwZXJmZWN0IGF0IGl0IGZvciBhIHdoaWxlIGFuZCBldmVuIGxhdGVyIG9uLCB0aGVyZSBhbHdheXMgZ29pbmcgdG8gYmUgcm9vbSBmb3IgaW1wcm92ZW1lbnQuLiAKV2hlbiB0aGUgZ292ZXJubWVudCB3aW5kcyBkb3duIG1pbGl0YXJ5IHByb2N1cmVtZW50IGF0IHRoZSBlbmQgb2YgYSB3b3JsZCB3YXIsIHRoZXJlIGFyZSBzdHJvbmcgZmluYW5jaWFsIGluY2VudGl2ZXMgZm9yIGZhY3RvcmllcyB0byBzd2l0Y2ggYmFjayB0byBwZWFjZXRpbWUgcHJvZHVjdGlvbi4gCk9ubGluZSBHYW1lcyBQb2tlcjogR2V0IEZhbWlsaWFyIHdpdGggdGhlIFBva2VyIEhhbmQgUmFua2luZ3MKWWVzLCB0aGUgdXN1YWxseSBvdmVyYWxsIHNhbmUgL3IvcG9saXRpY3MgaGFzIGdvbmUgYSBsaXR0bGUgbnV0cyBvbiB0aGlzIGlzc3VlIElGIHRoZSBjb250ZXh0IG9mIHRoZSBzaG91dCB3YXMgYWJvdXQgdGhlIGRlbW9jcmF0cyByZWNlbnQgdmlzaXQgdG8gUHVlcnRvIFJpY28gd2hpbGUgdGhlIGdvdmVybm1lbnQgaXMgc2h1dCBkb3duLiBObyBkb3VidCB0aGF0IGEgY29ybmVyc3RvbmUgb2Ygd2hhdCBtYWtlcyB0aGUgR09QIHdoYXQgaXQgaXMsIGlzIHJhY2lzbSAgIGJ1dCB0YWtpbmcgdGhpbmdzIGxpa2UgdGhpcyBvdXQgb2YgY29udGV4dCBpc24gYSBnb29kIGxvb2ssIHBlb3BsZSBhcmUga2luZCBvZiBlbWJhcnJhc3NpbmcgdGhlbXNlbHZlcyBoZXJlIGJlY2F1c2UgdGhleSBlaXRoZXIgZGlkbiByZWFkIHRoZSBhcnRpY2xlIG9yIGFyZSBmb2xsb3dpbmcgdGhlIGhlcmQuIApJIHdlbnQgdG8gYW5vdGhlciBwcm92aW5jZSBmb3IgYSBmZXcgd2Vla3MgdG8gdmlzaXQgbXkgcGFyZW50cy4gCkhhdmUgdHJpZWQgY29tbWFuZCBsaW5lIFRDUC9JUCBhbmQgV2luc29jayByZXNldHMsIHJlaW5zdGFsbGF0aW9uIG9mIG5ldHdvcmsgZHJpdmVycyBhbmQgbm8gY2hhbmdlIChyZW1vdmUgYW5kIHJlYm9vdCkuIFdlIGhhdmUgc2VlbiB0aGUgaXNzdWUgb24gUmVhbHRlayBJbnRlbCBhbmQgUXVhbGNvbW0gYXMgZmFyIGhhcmR3YXJlIGdvZXMuIEhhdmUgdHJpZWQgZGlzYWJsaW5nIElQdjYgYW5kIG5vdGhpbmcgc2VlbXMgdG8gd29yayBvdGhlciB0aGFuIHN0YXRpYyBhc3NpZ25pbmcgSVAgKHdoaWNoIGFzIGFuIElTUCBpcyBhIEJBRCBpZGVhKS4uIApTb21lIGFyZSByZWNyZWF0aW9uYWwgcGxheWVycyB3aGlsZSBvdGhlcnMgYXJlIG9uIHRoZSBodW50IGZvciB3aW5zIGFuZCBjYXNoIGJvdW50aWVzLiAKQXMgc29vbiBhcyBJIGVudGVyZWQgdGhhdCByb29tIGV2ZXJ5IHNpbmdsZSBhbGFybSBiZWxsIGluIG15IG1pbmQgd2FzIHNjcmVhbWluZyAiZ2V0IHRoZSBmdWNrIG91dCB5b3UgbW9yb25pYyBqYWNrYXNzLCBoYXZlIHlvdSBub3Qgc2VlbiBhIGdvZCBkYW1uIGhvcnJvciBtb3ZpZT8gVGhpcyBpcyB3aGVyZSB0aGUgYW5ncnkgZ2hvc3Qgb2YgZ3JhbXBzIG11cmRlcnMgeW91IHdpdGggYSBoYXRjaGV0ISIgQnV0IEkgaGFkIGEgam9iIHRvIGRvIHNvIEkgc3RheWVkLCB0b29rIG15IHBob3RvcyBhbmQgY29sbGVjdGVkIHNhbXBsZXMsIHNlYXJjaGVkIHRoZSB3aG9sZSBiYXNlbWVudCBmb3IgYW55dGhpbmcgdG8gZ2l2ZSBhbiBpZGVhIHdoeSB0aGlzIHdvdWxkIGhhcHBlbi4gSSBmcmVxdWVudGx5IGhhZCB0byBsZWF2ZSB0aGUgYmFzZW1lbnQgdG8gZ28gb3V0c2lkZSB0byBnaXZlIG15IGJyYWluIHRpbWUgdG8gc3RvcCBmcmVha2luZyB0aGUgZnVjayBvdXQuIApEYXMgTGEgR2FyemEsIHdpZSBkaWUgaW1tZXIgbm9jaCB0eXBpc2NoZSBwYWxtZXJpc2NoZSBDYWYgQmFyIGhldXRlIGhlaXQsIGlzdCBlaW4gT3J0IHp1bSBXb2hsZmhsZW4uIEVzIGdpYnQgbmViZW4gZGVuIGxlY2tlcmVuIEdlcmljaHRlbiAobmF0cmxpY2gpIGZyaXNjaGUgU2Z0ZSwgS2FmZmVlIHVuZCBlaW5pZ2VzIG1laHIuIFVuZCBkYXMgQmVzdGUgaXN0OiBDbGFpcmUgYmlldGV0IGF1Y2ggQiBhbi4gRnIgYWxsZSwgZGllIG5pY2h0IG51ciB2b3Igb2RlciBuYWNoIGVpbmVyIFdhbmRlcnVuZyBrdXJ6IGJlaSBpaHIgdm9yYmVpc2NoYXVlbiwgc29uZGVybiBkaWVzZW4gd3VuZGVyYmFyZW4gT3J0IG1hbCBlaW4gd2VuaWcgbG5nZXIgZ2VuaWVlbiB3b2xsZW4uCkhvdz8gMS8xIHBsYXllcnMgYXJlIGVtYmFycmFzc2luZ2x5IGJhZC4KVGh1cywgdG8gcXVvdGUgcmVzZWFyY2hlciBNYXJjIEhhbWlsdG9uLCBzaXR0aW5nIHRvbyBtdWNoIGlzIG5vdCB0aGUgc2FtZSBhcyBleGVyY2lzaW5nIHRvbyBsaXR0bGUuIChpZiB5b3UgdGFrZSBvbmx5IG9uZSB0aGluZyBmcm9tIHRoaXMgcG9zdCwgbGV0IGl0IGJlIHRoYXQgcXVvdGUgZnJvbSBEciBIYW1pbHRvbikuClRoZSBhdmVyYWdlIHdhZ2VyaW5nIHJlcXVpcmVtZW50IGNvdmVycyAxMCAyMCB0aW1lcyB0aGUgYm9udXMgcGx1cyB0aGUgYW1vdW50IHlvdSBkZXBvc2l0ZWQuIApCZWNhdXNlIHdlJ3JlIGRlYWxpbmcgd2l0aCBhdmVyYWdlcyBpbiBhIHJhbmRvbSBnYW1lLCB0aGVyZSdzIG5vdGhpbmcgdG8gc3RvcCB5b3UgZnJvbSBnZXR0aW5nIGEgUm95YWwgb24geW91ciB2ZXJ5IGZpcnN0IGhhbmQsIGJ1dCBpdCdzIG5vdCBsaWtlbHkgdG8gaGFwcGVuLiAKVHJ5IGZpbmRpbmcgdGFibGVzIHdoZXJlIHRoZXJlIGFyZSBtb3JlIGFtYXRldXJzIG9yICJmaXNoIi4gRmlzaCBvbmx5IHdhbnQgdG8gd2luIGJ5IGJlaW5nIGx1Y2t5LiBQb2tlciBwbGF5ZXJzIHdhbnQgdG8gd2luIGJ5IHNraWxsIGFuZCBieSBob3BpbmcgdGhhdCBoaXMgb3Bwb25lbnRzIGRvbiBnZXQgbHVja3kuIApDYXIgbWFuZ2VyLCBzdXJ0b3V0IGVuIEZyYW5jZSwgZXN0IGFzc29jaSAgbGEgY29udml2aWFsaXQuIApIZSBhbHNvIHNsZXB0IGluIHRoZSBzYW1lIGJlZCB3aXRoIEpvcmRpZSBDaGFuZGxlciBhdCBDaGFuZGxlcidzIGZhdGhlcidzIGhvdXNlLiAKIlRoZXkgY2hhbGxlbmdlIHlvdSB0byBnZXQgb3V0IG9mIGEgbGluZWFyIGNhcmVlciBwYXRoIGFuZCB0aGluayBhYm91dCBza2lsbCBzZXRzIHlvdSBtYXkgbm90IGtub3cgeW91IGhhZCwiIGhlIGFkZHMuIApUaGlzIG1heSB0YWtlIGxvbmdlciB0aGFuIHlvdSB0aGluayBpdCB3b3VsZC4gTGlrZSA1IDEwIG1pbnV0ZXMsIGp1c3Qgc3RhbmRpbmcgdGhlcmUsIHRvc3NpbmcgcmljZSB1bnRpbCBpdCBpcyB0aGUgcmlnaHQgY29sb3IsIGJ1dCB0aGlzIGlzIHRoZSBNT1NUIENSVUNJQUwgU1RFUC4gSWYgeW91IGV2ZXIgaGFkIGJsYW5kLCB1bmluc3BpcmluZywgc3VzcGljaW91c2x5IHVuaWZvcm1seSB5ZWxsb3cgImZyaWVkIiByaWNlIGZyb20gc29tZSBzZWNvbmQgcmF0ZSBDaGluZXNlIGpvaW50IGluIGEgc3RyaXAgbWFsbCwgdGhpcyBpcyB3aGVyZSBpdCB3ZW50IHdyb25nLiAKQSBjb250cmFyaW8sIGxlIG1hZ2lzdHJhdCBlc3QgcGFydGFnIGVudHJlIGFkb3VjaXIgbGUgcXVhbnR1bSBkZSBsYSBwZWluZSBzdXIgbGUgZm9uZGVtZW50IGRlIGxhIG1hbGFkaWUgZXQgbGUgcmVsIHJpc3F1ZSBkZSByZW1ldHRyZSBlbiBsaWJlcnQgcGx1cyByYXBpZGVtZW50IHVuZSBwZXJzb25uZSBkYW5nZXJldXNlLiBEJ2FpbGxldXJzLCBvbiBwZXV0IGRzIGxvcnMgbG9naXF1ZW1lbnQgc2UgcG9zZXIgbGEgcXVlc3Rpb24gZGUgc2F2b2lyIHNpIGNlcyBpbmRpdmlkdXMgZG9pdmVudCByZWxsZW1lbnQgZHBlbmRyZSBkdSBzeXN0bWUganVkaWNpYWlyZSBldCBwbml0ZW50aWFpcmUgOyBvIHNpIGxldXIgcGxhY2UgbmUgZGV2cmFpdCBwYXMgdHJlLCBhdSBtbWUgdGl0cmUgcXVlIGxlcyBwZXJzb25uZXMgZGNsYXJlcyBpcnJlc3BvbnNhYmxlcyBwbmFsZW1lbnQsIGRhbnMgZGVzIHN0cnVjdHVyZXMgaG9zcGl0YWxpcmVzIGFkYXB0ZXMuIApBcyBhIHJlc3VsdCwgdGhlIGNvdmVyYWdlIG9mIHBva2VyIG9uIHRlbGV2aXNpb24gYW5kIHRoZSBudW1iZXIgb2YgYm9va3MgYW5kIGFtb3VudCBvZiBpbmZvcm1hdGlvbiBtYWRlIGF2YWlsYWJsZSBpbmNyZWFzZXMsIHdoaWNoIGluIHR1cm4gYnJpbmcgbW9yZSBwbGF5ZXJzIGludG8gdGhlIGdhbWUuIApJaHJlIGdlc2FtdGUgVHRpZ2tlaXQgaXN0IGF1ZiBkaWUgRW50d2lja2x1bmcgbmV1ZXIgTWVkaWthbWVudGUgYXVzZ2VyaWNodGV0ICh1bmQgZGVtenVmb2xnZSBhdWYgaW1tZXIgZ3JlcmUgR2V3aW5uZSksIGFscyBhdWYgZGllIEhlaWx1bmcgdm9uIE1lbnNjaGVuLiAKKEZ1bGwgQW5zd2VyKS4gClRoaXMgbWF5IHNvdW5kIHNsaWdodGx5IHZ1bGdhciwgYnV0IG11Y2ggb2YgdGhlIEN6ZWNoIGN1bHR1cmUgcmV2b2x2ZXMgYXJvdW5kIHRoZSBjb25zdW1wdGlvbiBhbmQgZW5qb3ltZW50IG9mIGJlZXIgdGhlIEN6ZWNocyBpbnZlbnRlZCBsYWdlciwgYWZ0ZXIgYWxsICwgYW5kIENhcnNvIHBsYXRlYXUsIHdpdGggaXRzIG5hdHVyYWwgYmVhdXR5IGFuZCBzcGVjdGFjdWxhciBuYXR1cmFsIHBoZW5vbWVuYS4gSSB3aWxsIGdsYWRseSBnbyB0aHJvdWdoIHNtYWxsIGRpZmZpY3VsdGllcyBsaWtlIHRoZSBhYm92ZSBwcm9ibGVtIGp1c3QgdG8gc3BlbmQgdGltZSBpbiBTaWVtIFJlYXAgd2hlcmUgd2UgZGVjaWRlZCB0byB3aW5nIGl0IGFuZCBib29rIHNvbWV0aGluZyB3aGVuIHdlIGdldCB0aGVyZS4gSWYgYSBzZWF0IGRvZXMgbm90IHBhc3MgdGhlaXIgcmlnb3JvdXMgdGVzdGluZywgaXQgZG9lc24/dCBtYWtlIGl0IHRvIHRoZSBtYXJrZXQsIHNvIHdoZW4geW91IHRoZWlyIG1pbmRzIHdpdGhvdXQgYmVhdGluZyBhcm91bmQgdGhlIGJ1c2ggb3IgdXNpbmcgZXVwaGVtaXNtcy4gClRoZXJlIGFyZSBzdGlsbCBtYW55IG1vbm9saXRoaWMsIGJpbGxpb24gZG9sbGFyIGluc3RpdHV0aW9ucyB0aGF0IHdpbGwgc2VlIHRoZWlyIG1hcmtldCB3ZWFsdGggZGVjaW1hdGVkIGlmIGNhbm5hYmlzIGlzIGxlZ2FsaXplZC4gCkR1cmluZyBwYXN0dXJlIHNlYXNvbiwgbWFueSBjb3cgY2FsZiBiZWVmIG9wZXJhdGlvbnMgYW5kIGRhaXJ5IGZhcm1zIGtlZXAgdGhlaXIgY2F0dGxlIG9uIHBhc3R1cmVzIHdoZXJlIGFsbCB0aGV5IGVhdCBpcyBncmFzcyBhbmQgd2VlZHMuIE1hbnkgY293IGNhbGYgYmVlZiBvcGVyYXRpb25zIHdpbGwga2VlcCB0aGVpciBjb3dzIG9uIGNvcm4gc3RhbGtzLCBmaWVsZHMgdGhhdCBoYWQgY29ybiB0aGF0IGhhcyBiZWVuIGhhcnZlc3RlZC4gClRoZXJlIGlzIHNvIG11Y2ggbW9yZSB0byBpdCB0aGFuIHBlb3BsZSB0aGluay4gCjQuIApJIGtub3cgaXQgYSBudW1iZXJzIGdhbWUsIEkgaGF2ZSB0byBnbyB0aHJvdWdoIHRoZSBwcm9jZXNzLCBhbGwgaXQgdGFrZXMgaXMgb25lLiAKU29jaWFsbHkgY29uc2Npb3VzIGxpYmVyYWxzIG1heSB3cmlua2xlIHRoZWlyIG5vc2VzIGF0IHRoZSB2ZXJ5IGlkZWEgb2YgbW92aW5nIHRvIFRlbm5lc3NlZSAgIHdoZXJlIERhdnkgQ3JvY2tldHQgd2FzIGJvcm4gb24gYSBtb3VudGFpbnRvcCAgIGJ1dCBCaWcgQXBwbGUgZGVuaXplbnMgcGF5IHRoZSBoaWdoZXN0IHRheGVzIGluIHRoZSBuYXRpb24gYW5kIGZhY2UgZXZlciByaXNpbmcgY29zdHMuIFNvLCB0aG9zZSB3aG8gd29ycnkgYWJvdXQgdGhlaXIgY29tcGFueSdzIGJvdHRvbSBsaW5lIGdldCBpdC4gCihGdWxsIEFuc3dlcikuIApFdmVyeSB0aW1lIHlvdSB0cmlwLCB5b3UgaGF2ZSB0byBtYWtlIHN1cmUgeW91IGRpZG4gYnJlYWsgYSBib25lLiBFdmVyeSB0aW1lIHlvdSBjb29rLCB5b3UgaGF2ZSB0byBjaGVjayB0aGF0IHlvdSBkaWRuIGJ1cm4geW91cnNlbGYgICBhbmQgaWYgeW91IGRpZCwgaXQgcHJvYmFibHkgdGhpcmQgZGVncmVlIGJlY2F1c2UgeW91IGRpZG4gcmVjb2lsIGZyb20gaXQuIFlvdXIgZW50aXJlIGxpZmUgYmVjb21lcyBiYXNlZCBhcm91bmQgY29uc3RhbnQgc2VsZiBjaGVja2luZy4gWW91IGtub3cgaG93IGFic2VudCBtaW5kZWRseSBiaXRlIHlvdXIgbmFpbHM/IENJUCBzdWZmZXJlcnMgd2lsbCBiaXRlIHRoZSBpbnNpZGVzIG9mIHRoZWlyIG1vdXRocyB3aXRob3V0IHJlYWxpemluZyBpdCBiZWNhdXNlIHRoZXkgZG9uIGZlZWwgcGFpbiBmcm9tIGl0LiBUaGV5IGdldCBzY2FycyBhbGwgb3ZlciB0aGVpciBjaGVla3MgYW5kIGd1bXMuIFRoZSBndXkgb24gdGhlIHdpa2lwZWRpYSBwYWdlIGNoZXdlZCBvZmYgaGFsZiBoaXMgdG9uZ3VlIGJlZm9yZSBoaXMgcGFyZW50cyByZWFsaXplZCBoZSBoYWQgQ0lQLgpUaGF0IGluY2x1ZGVzIG1lbnRpb25zIG9mIHBvbGl0aWNhbCBwYXJ0aWVzLCBmaWd1cmVzIGFuZCBhZmZpbGlhdGlvbnMuIApBcHBseSBsYW5vbGluIG9uIHlvdXIgaGFuZCBiZWZvcmUgcHV0dGluZyBvbiB5b3VyIGdsb3ZlLiBPbmNlIHlvdXIgZ2xvdmUgaGFzIHRha2VuIGZvcm0gb2YgeW91ciBoYW5kJ3Mgc2hhcGUgYW5kIGZpdCwgeW91IGNvdWxkIGJlIHN1cmUgdGhhdCBpdCB3b3VsZG4ndCBodXJ0IHRoZSBuZXh0IHRpbWUgeW91IHB1dCBpdCBvbi4uIApQZW9wbGUgYXJlIGtpc3NpbmcuIApPbiBNb25kYXksIFRydW1wIGRlZmVycmVkIHRvIFNhdWRpIEtpbmcgU2FsbWFuIHdobyBkZW5pZWQgYW55IGtub3dsZWRnZSBvciBvZmZpY2lhbCBpbnZvbHZlbWVudCBpbiBLaGFzaG9nZ2kgZGlzYXBwZWFyYW5jZS4gIldlIGFyZSBnb2luZyB0byBsZWF2ZSBub3RoaW5nIHVuY292ZXJlZCwiIFRydW1wIHRvbGQgcmVwb3J0ZXJzIGF0IHRoZSBXaGl0ZSBIb3VzZS4gIldpdGggdGhhdCBiZWluZyBzYWlkIHRoZSBraW5nIGZpcm1seSBkZW5pZXMgYW55IGtub3dsZWRnZSBvZiBpdC4gCkluIHRoaXMgY2FzZSwgYXMgaW4gbWFueSBvdGhlcnMsIHRob3NlIGluIHBvc2l0aW9ucyB0byBwcmV2ZW50IHRoZSBWaWtpbmcgaW52YWRlcnMgZnJvbSBkb2luZyBoYXJtIHR1cm5lZCB0cmFpdG9yLiBJbiAxMDA5LCBQcmluY2UgV3VsZm5vdGgsIGNvbW1hbmRlciBvZiBtYW55IG9mIHRoZSBzaGlwcywgdHVybmVkIHBpcmF0ZSBhbmQgZmxlZCwgcmVzdWx0aW5nIGluIHRoZSBldmVudHVhbCBsb3NzIG9mIHRoZSBlbnRpcmUgZmxlZXQuLiAKVGhlIHByaWNlIGlzIGEgc2V0IDIsMjUwIHBlciBnaXJsL3dvbWFuLCBhbGwgaW5jbHVzaXZlLiBBcyBFZGVuIG9wZXJhdGVzIGEgcG9saWN5IG9mIHRha2luZyBhIG1pbmltdW0gb2YgdHdvLCB0aGlzIGJ1bXBzIHRoZSBwcmljZSBwZXIgc2Vzc2lvbiB1cCB0byA0LDUwMCBiYWh0LiBUaGUgcHJpY2UgcGVyIGhvb2tlciBpcyBub3QgdG9vIGJhZCAoYWx0aG91Z2ggYWJvdmUgYXZlcmFnZSwgZm9yIGJlbG93IGF2ZXJhZ2UgbG9va3Mgc2VlIGxhdGVyKSwgYnV0IHRoZSBwb2ludCBpcyB0aGUgcG9saWN5IG1lYW5zIHlvdSB3aWxsIGJlIHNwZW5kaW5nIGEgbWluaW11bSBvZiA0LDUwMCBiYWh0IHRvIGdldCBsYWlkLiBVbmxlc3MgeW91IGFyZSByZWFsbHkgZGVzcGVyYXRlIGZvciB0aGUgdGhyZWVzb21lIGV4cGVyaWVuY2UsIHRoaXMgaXMgYSBsb3QgdG8gc3BlbmQgaW4gOTAgbWludXRlcy4gSSBoYXZlIHNjb3JlZCB0aGlzIGFjY29yZGluZyB0byB0aGUgb3ZlcmFsbCBvdXRsYXksIG5vdCB0aGUgcGVyIGdpcmwgb3V0bGF5LCBzaW5jZSB0aGVyZSBpcyBubyBvcHRpb24gdG8gdGFrZSBvbmx5IG9uZS4gSSBhbHNvIGJvdWdodCBhIGdsYXNzIG9mIENva2UgZm9yIDgwIGJhaHQuIFlvdSBwYXkgdXAgZnJvbnQgYnV0IHRoZSBwYXBhc2FuIHByb21pc2VzIHJlZnVuZHMgZm9yIGFueW9uZSB3aG8gaXMgbm90IHNhdGlzZmllZCwgYWx0aG91Z2ggSSBkb3VidCBtYW55IHdvdWxkIGFzayBmb3IgYSByZWZ1bmQgaW4gYW55IGNhc2UuMi8xMApJIHN1cnByaXNlZCBBTUVYIGRvZXMgbm90IGhhdmUgcmVmZXJyZXIgY2hlY2tzIG9uIHRoZWlyIGNvbmZpcm1hdGlvbiBwYWdlcy4gVGhpcyBjYW4gYmUgdXNlZCB0byBvbmx5IGRpc3BsYXkgYSBjb25maXJtYXRpb24gaWYgeW91IGNvbWluZyBmcm9tIG9uZSBvZiB0aGVpciBvd25lZCBkb21haW5zLgpUaGV5IGp1c3QgZG8gaXQgYW55d2F5LiAKNSBNaW51dGVuIHZvbSBQb29sIGF1cyBkYXMgU2llYmVuZ2ViaXJnZSBiZXd1bmRlcm4gdW5kIHcgbWFuIHcgZWluIERpY2h0ZXIgYXVzIGRlciBSb21hbnRpaywgdW0gYWxsIGRpZSBFaW5kciBpbiBXb3J0ZSBmYXNzZW4genUgayBEYW5uIHNjaG5lbGwgbm9jaCBtYWwgZWluIHBhYXIgTWludXRlbiBzY2h3aW1tZW4sIHVtIG5pY2h0IGF1c3p1awpUaGVyZSBoYXMgYmVlbiBtdWNoIGxlZ2FsIG9wcG9zaXRpb24gdG8gb25saW5lIHBva2VyIGluIHRoZSBVbml0ZWQgU3RhdGVzLCBtYWtpbmcgb3BlcmF0aW5nIHN1Y2ggYSBzaXRlIGEgZmVsb255IGxldmVsIGNyaW1lLiBKdXN0IHNpeCBkYXlzIGFnbywgTWF5IDEsIDIwMTMsIE5ldmFkYSBiZWNhbWUgdGhlIGZpcnN0IHN0YXRlIHdoZXJlIHBlb3BsZSBhdCBsZWFzdCAyMSB5ZWFycyBvbGQgY291bGQgbGVnYWxseSBwbGF5IHBva2VyIG9ubGluZSBmb3IgbW9uZXkuIApXZW50IGZyb20gd29ya2luZyBpbiBhIGRlbGkgdG8gZXhlY3V0aXZlIHZpY2UgcHJlc2lkZW50IG9mIExvYmxhdyBDb3MuIApJIGhhdmVuIHNlZW4gYSB0aHJlYWQgYWJvdXQgaXQsIGJ1dCBJIGNhdWdodCBhbiBBZ2UgYXJ0aWNsZSBhbiBob3VyIHNvIGFnbyB3aGljaCBjbGFpbWVkIENhcmx0b24gd2VyZSBvbmx5IG5vdGlmaWVkIGFib3V0IHRoZSA1MG0gcGVuYWx0eSBwbGF5IG9uIHJ1bGUgMzAgbWludXRlcyBiZWZvcmUgdGhlaXIgbWF0Y2ggeWVzdGVyZGF5LCBhbmQgQ29sbGluZ3dvb2QgY2xhaW1lZCBub3QgdG8ga25vdyBhYm91dCBpdCBhdCBhbGwuIElmIHRoZSBzdG9yeSBpcyBjb3JyZWN0LCBhcmUgdGhlIEJsdWVzIGFuZCBib3RoZXJpbmcgdG8gZXZlbiByZWFkIHRoZSBydWxlIGNoYW5nZXM/IEJlY2F1c2UgdGhpcyBleGFjdCB0aGluZyB3YXMgdGFrZW4gYWR2YW50YWdlIG9mIGxhc3Qgd2VlayBieSBCcmlzYmFuZSAgIHRoZSBjb21tZW50YXRvcnMga25ldyBhYm91dCBpdCwgdGhlIHVtcGlyZXMga25ldywgdGhlIEJyaXNiYW5lIHBsYXllcnMga25ldy4gCkhhdmUgYSB0aGljayBwaWxsb3cgZm9yIGp1c3QgYWJvdmUgeW91ciBzaG91bGRlciBmb3IgeW91IGhlYWQgc28geW91ciBzaG91bGRlciBpc24gYWN0dWFsbHkgc3VwcG9ydGluZyB0aGUgcGlsbG93IGFuZCBoZWFkIGl0IGJlbG93IGl0LiBIZWxwIHRha2Ugc29tZSB3dCBvZmYgaXQuRm9yIHdhcm0gdXBzIEkgdXNlIGJhbmRzIHB1bGxlZCBhcGFydCBhbmQgZG8gc2hvdWxkZXIgcm90YXRpb25zLiBUaGVuIEkgYWxzbyB3cmFwIGEgaGVhdnkgYmFuZCBhcm91bmQgYSBwb3N0LCBzbGlwIG15IGFybSBpbiwgdGlsbCB0aGUgYmFuZCBzaXRzIG92ZXIgbXkgcGVjIHRvIHNob3VsZGVyIGFyZWEgYW5kIG1vcmUgcm90YXRpb25zIGJ1dCB3aXRoIHRoZSBiYW5kIGZvciBjb21wcmVzc2lvbiBvbiB0aGUgYXJlYS4gCkIuIFBvd2VyOyBqdXJpc2RpY3Rpb247IGNhcmU6IFRoZSBkZWZlbmRhbnQncyBmYXRlIGlzIGluIHRoZSBoYW5kcyBvZiB0aGUganVyeS4gRGlubmVyIGlzIGluIHRoZSBjaGVmJ3MgaGFuZHMuCkluZGVlZCwgaXQgd291bGQgYmUgY2F0YXN0cm9waGljIGZvciB0aGUgc3RhciBpZiB0aGUgcmVhY3Rpb24gd2VudCBtdWNoIGZhc3Rlci4uIApJdCByZWNvbW1lbmRlZCB0byBoYXZlIGEgbWF4aW11bSBvZiB0d28gdW5pdHMgb24gdmlvbGVudCwgcHJlZmVyYWJseSBsZXNzLiAKQnV0IG9ubHkgaW4gdGhlIHNlbnNlIHRoYXQgdGhlIGFuc3dlcnMgcmFuZ2UgZnJvbSAibW9yZSBwb3dlciB0aGFuIHRoZSB1bml2ZXJzZSBpcyBlcXVpdmFsZW50IHRvIiB0byAib25seSBhIGZldyBodW5kcmVkIHRpbWVzIG1vcmUgdGhhbiB0aGUgbHVtaW5vdXMgaW50ZW5zaXR5IG9mIHRoZSBlbnRpcmUgZ2FsYXh5Ii4gU28gaW4gYSBwcmFjdGljYWwgc2Vuc2UgdGhlIGFuc3dlcnMgYXJlIHRoZSBzYW1lLCB0aG91Z2ggdGhleSBhcmUgd2lsZGx5IGRpZmZlcmVudC4uIApOb3Qgc3VycHJpc2luZ2x5LCBhIHJlY29yZCBudW1iZXIgb2YgQW1lcmljYW5zIG5vdyBjbGFpbSBmZWRlcmFsIGRpc2FiaWxpdHkgY2hlY2tzIGFuZCBmb29kIHN0YW1wcywgdXAgbmVhcmx5IDIwIGFuZCA0NCBwZXJjZW50LCByZXNwZWN0aXZlbHkuLiAKSSBzZWVuIG1hbnkgcGVvcGxlIGdldCBjcnVzaGVkIGluIGEgYnVsbCBtYXJrZXQuIFdlIGdldCBsdWxsZWQgdG8gc2xlZXAgYnkgZ3JlYXQgbWFya2V0IHJldHVybnMuIApTbyB0aGUgInNvbHV0aW9uIiB0aGV5IG9mZmVyaW5nIGlzIGZvciB0aGUgaGFsZiBtYXJhdGhvbiBhbmQgNSBtaWxlIHRvIHJ1biB0aGUgc2FtZSBjb3Vyc2UsIGJ1dCB0aGUgNSBtaWxlIHN0YXJ0IGFuIGhvdXIgYW5kIGEgaGFsZiBsYXRlciB0byBnaXZlIHRoZSBoYWxmIG1hcmF0aG9uZXJzIHRpbWUgdG8gY29tcGxldGUgKGhhbGYgZHVlIHRvIHN0YXJ0IGF0IDdBTTsgdGhlcmUgd2lsbCBiZSBzbG93ZXIgcnVubmVycyBzdGlsbCBvbiB0aGUgY291cnNlIGF0IHRoYXQgdGltZSwgaW5jbHVkaW5nIG15c2VsZikuIEkgaW1hZ2luaW5nIHJ1bm5lcnMgYnVtcGluZyBpbnRvIGVhY2ggb3RoZXIuIApIYXZlIHlvdSByZWFkIHRoZSBCaWJsZT8gSSdtIHNlcmlvdXMuIE5vIHRyb2xsaW5nIG9yIGp1ZGdtZW50IGhlcmUuIEl0J3MgYSBzaW1pbGFyIHN0b3J5LCBhbmQgaXQncyB0aGUgb25seSBUcnV0aCB0aGF0IEkgY2FuIGZpbmQuIElmIHdlIGNhbGwgSGlzIG5hbWUgZnJvbSBvdXIgaGVhcnQgSGUgd2lsbCByZWFjaCBvdXQgaGlzIGhhbmQuIEV2ZW4gd2hlbiB3ZSB0aGluayBIZSB3b24ndCBiZWNhdXNlIG9mIHRoZSBob3JyaWJsZSBzaW5zIHdlIGhhdmUgY29tbWl0dGVkIGFnYWluc3QgSGltIGFuZCBIaXMgQ2hpbGRyZW4uIEhlIHN0aWxsIGxvdmVzIHVzLgpJIGtub3cgZm9yIHN1cmUgdGhlIGdsYXNzIGlzIGxhbWluYXRlZCBvbiBteSBTQy5IZXJlJ3MgYW4gYXJ0aWNsZSBvbiBDbHViTGV4dXMgdGhhdCBnb2VzIGludG8gYSBsaXR0bGUgYml0IG9mIGRldGFpbCBhYm91dCBpdDpXaG9vcGlza2luICAxIHBvaW50ICBzdWJtaXR0ZWQgMTQgZGF5cyBhZ29JIHN1cmUgeW91IGFyZSBhbGwgZ29pbmcgdG8gYmVhdCBtZSB0byBkZWF0aCBmb3IgYXNraW5nIHRoaXMgYmVjYXVzZSBJIHN1cmUgaXRzIGxpc3RlZCBldmVyeXdoZXJlLCBidXQgSSBhbSBpbnRlcmVzdGVkIGluIGhvdyBvbmUgcnVucyB0aGVpciBmaXJzdCBjeWNsZSBhbmQgdGhlIGFmdGVyY2FyZSB0aGF0IGNvbWVzIHdpdGggaXQuIApUaGUgZmxpcCBzaWRlIG9mIHRoaXMgY29pbiBpcyB0aGF0IHRoZSBwcml2aWxlZ2VkIGFyZSBhYmxlIHRvIHNsaXAgb3V0IG9mIHRoZSBsYXcgcmVhY2gsIGVzcGVjaWFsbHkgd2hlbiBpdCBjb21lcyB0byBkcmlua2luZyBhbmQgZHJpdmluZy4gVGhlc2UgcGVvcGxlIGhhdmUgY2Fycy4gCk1ha2Ugbm8gbWlzdGFrZSwgQmVjb21pbmcgYSBTdXBwbGUgTGVvcGFyZCBpcyBhIHRlY2huaWNhbCBib29rLCBzdHVmZmVkIHdpdGggaWxsdXN0cmF0aW9ucyBhbmQgbW9iaWxpdHkgZXhlcmNpc2VzIHdpdGggdmFndWVseSBTIG5hbWVzLCBpbmNsdWRpbmcgImJhbmRlZCBmbG9zc2luZywiICJwYXBlciBjbGlwcGluZywiIGFuZCAiZmxleGlvbiBnYXBwaW5nLiIgQnV0LCBhcyB0ZXh0Ym9va3MgZ28sIGl0J3MgYSBsdWNpZCwgaW5zcGlyaW5nLCBhbmQgaW5zaWdodGZ1bCBzZWFzb24gcGFzcyB0byBpbXByb3ZlZCBwZXJmb3JtYW5jZS4KSSBjYW4gZSB0cmFuc2ZlciBtb25leSBpbnRvIE1CLCB0aGVuIG9uIHRoZSBQb2tlclN0YXJzIHNpdGUgSSBpbmRpY2F0ZSBJIHdhbnQgdG8gdXNlIE1CIHRvIGRlcG9zaXQgZnVuZHMuIFRoZW4gdGhlIE1CIGFwcCBsaWdodHMgdXAgb24gbXkgcGhvbmUgYW5kIGFza3MgbWUgdG8gYXBwcm92ZSBhIHBheW1lbnQgdG8gcG9rZXJzdGFycy4uIApUaGVyZSBhIHdob2xlIHdvcmxkIG9mIHNraWxscyB5b3UgbmVlZCB0byBiZSBzdWNjZXNzZnVsIGluIGxpdmUgcGxheSB0aGF0IG9ubGluZSBwbGF5ZXJzIGhlYXZpbHkgZGlzY291bnQuIApPa2F5LCBmb3IgcGVvcGxlIHdobyBhcmUgdW5hd2FyZSBvZiB0aGUgaGlzdG9yeSBiZWhpbmQgdGhpcyBwaWN0dXJlLCBvciB3aG8gY2FuIGJlIGJvdGhlcmVkIHRvIHJlYWQgdGhlIGFydGljbGUgKGxpa2UgdGhyZWUgb2YgdGhlIGZvdXIgY3VycmVudCBjb21tZW50cyBvbiB0aGUgYXJ0aWNsZSk6CiJJIGRvbid0IGxpa2UgaXQgd2hlbiBmYXNoaW9uIGZhaWxzIG1lLCIgc2hlIHF1aXBwZWQgYmVmb3JlIENvcmRlbiBjaGFuZ2VkIGludG8gYSBoYW5kZnVsIG9mIGhlciBpY29uaWMgbG9va3MsIGluY2x1ZGluZyBhIHJlbmRpdGlvbiBvZiBoZXIgc2lnbmF0dXJlIG1lYXQgZHJlc3MuLiAKSXQgd2FzIGEgYmFkIGRlY2lzaW9uIGFuZCBhbGwgdGhleSBjYW4gZG8gaXMgcGF5IHRoZWlyIHdheSBvdXQgb2YgaXQsIiBzYWlkIEdyYWVtZSBNYXh0b24gb2YgQXV0b3BvbGlzLCBhbiBhdXRvIGluZHVzdHJ5IGNvbnN1bHRhbnQgaW4gQnJpdGFpbi5VbmRlciB0aGUgdGVybXMgb2YgdGhlaXIgZGVhbCwgaW52ZXN0bWVudCBiYW5rcyB3b3VsZCBkZXRlcm1pbmUgd2hhdCwgaWYgYW55LCB2YWx1ZSB0aGVyZSBtaWdodCBiZSBpbiBoZWF2aWx5IGluZGVidGVkIEZpYXQgQXV0by4gQnV0IGFwYXJ0IGZyb20gc29tZSBmYWN0b3JpZXMgYW5kIGl0cyBGZXJyYXJpIGFuZCBBbGZhIFJvbWVvIGJyYW5kcywgYW5hbHlzdHMgc2F5IEZpYXQgQXV0byBpcyB3b3J0aCBsaXR0bGUgb3V0c2lkZSBvZiBJdGFseSwgd2hlcmUgaXQgaXMgb25lIG9mIHRoZSBsYXJnZXN0IGVtcGxveWVycy4iVGhlIGZhY3QgaXMgdGhhdCBGaWF0IGhhZCBiZWVuIG1pc21hbmFnZWQgZm9yIHRoZSBiZXN0IHBhcnQgb2YgYSBkZWNhZGUsIiBwcmlvciB0byBpdHMgbGluayB1cCB3aXRoIEdNLCBNYXh0b24gc2FpZC4iSSBiZWxpZXZlIHRoYXQgYXQgdGhlIHRpbWUgb2YgdGhlIHRyYW5zYWN0aW9uIGl0IHdhcyB2ZXJ5IGRpc3RhbnQgZnJvbSB0aGUgbWluZHMgb2YgYWxsIHRoZSBwcmluY2lwYWxzIHRoYXQgdGhpcyAocHV0IG9wdGlvbikgd291bGQgZXZlciBiZSBpbnZva2VkLCIgU2NvdHQgU3ByaW56ZW4sIGNoaWVmIGF1dG8gaW5kdXN0cnkgYW5hbHlzdCBhdCBjcmVkaXQgcmF0aW5nIGFnZW5jeSBTdGFuZGFyZCBQb29yJ3MsIHRvbGQgUmV1dGVycy4iSSB3b3VsZCBzYXkgaXQgd2FzIG5vdCB0aGUgYmVzdCB0aG91Z2h0IG91dCB0cmFuc2FjdGlvbiBpbiBidXNpbmVzcyBoaXN0b3J5LCBhbmQgSSBkb24ndCB0aGluayB0aGUgY3VycmVudCBtYW5hZ2VtZW50IG9mIEdlbmVyYWwgTW90b3JzIHNlZXMgdGhhdCBkaWZmZXJlbnRseSwiIGhlIHNhaWQuSmFjayBTbWl0aCB3YXMgR00ncyBDRU8gd2hlbiBpdCBzaWduZWQgdGhlIGRlYWwgd2l0aCBGaWF0LiAKQnV0IGhlJ3MgYWxzbyBhZnJhaWQgb2YgaGVyIHJlYWN0aW9uIGhhaGEuLiAKIllvdSBhcmUgdGFsa2luZyBhYm91dCBkZWNpbWF0aW5nIGEgY291bnRyeSB0b3duLiAKTG9jYXRlZCBvZmYgdGhlIEFsZ2FydmUgQ29hc3QsIGJldHdlZW4gQWx2b3IgYW5kIFBvcnRpbWFvLCBpcyBPY2VhbiBSZXZpdmFsIFVuZGVyd2F0ZXIgUGFyaywgdGhlIHdvcmxkJ3MgbGFyZ2VzdCBzaW5nbGUgYXJ0aWZpY2lhbCByZWVmIGFuZCB0aGUgbGFyZ2VzdCByZWVmIGluIEV1cm9wZS4gRGl2ZXJzIHdpbGwgYmUgYWJsZSB0byBleHBsb3JlIGZvdXIgc3Vua2VuIFBvcnR1Z3Vlc2UgbmF2YWwgc2hpcHMsIHdoZXJlIGRpdmluZyBjb25kaXRpb25zIGFyZSBpZGVhbCBvbiBtb3JlIHRoYW4gMzAwIGRheXMgcGVyIHllYXIuIFRoZSBvbmx5IGRpdmluZyBjZW50ZXIgcmVjb21tZW5kZWQgYnkgdGhlIE9jZWFuIFJldml2YWwgb3JnYW5pemF0aW9uIGlzIFN1Ym5hdXRpY2EgaW4gUG9ydGltYW8uLiAKUGVsYSBwcmltZWlyYSB2ZXogY29uc2VndWltb3MgdW1hIGVudHJldmlzdGEgY29tIGNvbW8gam9nYXIgcG9rZXIgZmVjaGFkbyBwYXNzbyBhIHBhc3NvIHVtIGpvZ2Fkb3IgcXVlIGZheiBkbyBwb2tlciBzZXUgZ2FuaGEgcCBpc3NvIG1lc21vIHBlc3NvYWwgdW0gUFJPLCBlc3Blcm8gcXVlIG5vc3NvIEJsb2cgY29udGludWUgY3Jlc2NlbmRvIGNhZGEgLgpNeSBNb20gd2FzIGRpYWdub3NlZCB3aXRoIFBhcmtpbnNvbiBEaXNlYXNlIGEgY291cGxlIHdlZWtzIGJlZm9yZSBzaGUgZGllZCBpbiBhIHRyYWdpYyBjYXIgYWNjaWRlbnQgaW4gdGhlIEZlYXRoZXIgUml2ZXIgQ2FueW9uLiBTaGUgd2VudCBvdmVyIGEgY2xpZmYsIGFuZCBkcm93bmVkIGluIHRoZSByaXZlciBiZWxvdy4gSGVyIGRlYXRoIGxlZnQgbWUgcGFyZW50bGVzcyBhdCAxOSAoMjEgbm93KS4gTG9zaW5nIGhlciB3YXMgdGhlIHdvcnN0IHRoaW5nIEkgaGF2ZSBldmVyIGV4cGVyaWVuY2VkLiBJdCBicm9rZSBteSBoZWFydCB0aGF0IHNoZSBkaWVkOyBzaGUgd2FzIG15IGJlc3QgZnJpZW5kLgpVcCBhbmQgY29taW5nIG5pbmphcyBnZXQgdGhlaXIgc3RhcnQgYXQgRXVyZWthIFBhcmssIHRoZSBidXp6d29ydGh5IHN0YXJ0dXAgYXJlbmEgdGhhdCBwcm92aWRlcyBhIHVuaXF1ZSBvcHBvcnR1bml0eSB0byBsYXVuY2ggYSBuZXcgcHJvZHVjdCwgc2VydmljZSBvciBpZGVhLiBNb3JlIHRoYW4gMSwyMDAgc3RhcnR1cHMgd2lsbCB1c2UgQ0VTIGFzIGEgcGxhdGZvcm0gdG8gc2hvd2Nhc2UgdGhlaXIgcHJvZHVjdHMgdGhpcyB5ZWFyLCBtYWtpbmcgaXQgdGhlIGxhcmdlc3Qgc3RhcnR1cCBldmVudCBvbiB0aGUgcGxhbmV0LiAKMTA0OSkgb3V0bGFzdGVkIGEgcmVjb3JkIDEsNDk2IHBsYXllciBmaWVsZCBvbiBoaXMgd2F5IHRvIGhpcyBmaXJzdCB0aXRsZSBvbiB0aGUgbGl2ZSB0b3VybmFtZW50IGNpcmN1aXQuIApGdWNrIHRoYXQgZ3V5Li4gClRoZSBhY2FkZW1pYyBjYWxsZWQgZm9yIHNjaG9vbHMgdG8gaW50cm9kdWNlIGxlc3NvbnMgaW4gZ2FtYmxpbmcgYXMgcGFydCBvZiBwZXJzb25hbCwgc29jaWFsLCBoZWFsdGggYW5kIGVjb25vbWljIGVkdWNhdGlvbiAoUFNIRSkgY2xhc3Nlcy4KRGlkIGEgZmV3IGluIGFuYWhlaW0gaGlsbHMuIE9uZSBpbiBzYW4gY2xlbWVudGUueW91IG1pZ2h0IHdhbnQgdG8gc3BlYWsgd2l0aCB5b3VyIHJlYWwgZXN0YXRlIGFnZW50IGFib3V0IHdoZXJlIHRvIGxpdmUuIFRoZXkgY2FuIGdpdmUgeW91IG1vcmUgaW5mb3JtYXRpb24gdGhhbiByYW5kb20gc3RyYW5nZXJzIG9uIHRoZSBpbnRlcm5ldC5USUMgaGFzIHRoZWlyIG93biBoYW5kIHNlbGVjdGVkIGNvbnRyYWN0b3JzIGFuZCBpbnNwZWN0b3JzIGFuZCBwZW9wbGUgdGhhdCBtYWtlIG1vbmV5IG9mZiBvZiB0aGUgbWFzc2l2ZSBhbW91bnQgb2YgY29uc3RydWN0aW9uIGFuZCByZW5vdmF0aW9uIHRoYXQgdGFrZXMgcGxhY2UgaGVyZSBpbiBpcnZpbmUuIApUaGUgcm9ydCBpcyB0aGV5IHRha2UgOTAgcGVyIGNlbnQuIi4gCkJlZm9yZSBiZWdpbm5pbmcgdG8gcGxheSBwb2tlciwgaXQncyBpbXBvcnRhbnQgdG8gaGF2ZSBhIHdvcmtpbmcga25vd2xlZGdlIG9mIHBva2VyIGhhbmQgcmFua2luZ3MuIFRoaXMgaXMgdGhlIGxpc3QgdGhhdCBwbGFjZXMgYWxsIG9mIHRoZSBwb3NzaWJsZSBwb2tlciBoYW5kcyBpbiB2YWx1ZSBvcmRlciBmcm9tIFJveWFsIEZsdXNoIHRvIEhpZ2ggQ2FyZC4gS25vd2luZyB0aGlzIGluZm9ybWF0aW9uIGlzIGtleSB0byBiZWdpbm5pbmcgYSBwb2tlciBjYXJlZXIgc3VjY2Vzc2Z1bGx5LiBQbGF5ZXJzIHdobyBhcmUgbGVhcm5pbmcgaG93IHRvIHBsYXkgcG9rZXIgbXVzdCBub3Qgb25seSBtZW1vcml6ZSB0aGlzIGxpc3QsIGJ1dCBhbHNvIHVuZGVyc3RhbmQgd2hpY2ggY2FyZHMgY29tcHJpc2UgZWFjaCBoYW5kIHJhbmtpbmcuIFNlY3VyaW5nIHRoaXMgaW5mb3JtYXRpb24gaXMgdGhlIGJlc3Qgd2F5IHRvIGJlZ2luIGEgY2FyZWVyIGluIGJvdGggY2FzaW5vIHBva2VyIGFuZCBpbnRlcm5ldCBwb2tlciwgYXMgaXQgYXBwbGllcyB0byBldmVyeSB0eXBlIG9mIHBva2VyIGdhbWUgZnJvbSBoaWdoIHN0YWtlcyBwb2tlciB0byBmcmVlIG9ubGluZSBwb2tlci4KSGVwYXRpdGlzIEIsIGhlcGF0aXRpcyBDLCBodW1hbiBpbW11bm9kZWZpY2llbmN5IHZpcnVzIFtISVZdIChQc29yYS8gU3lwaGlsaXMpTmVwaHJvdGljIHJhbmdlIHByb3RlaW51cmlhIG1heSBvY2N1ciBpbiBvdGhlciBraWRuZXkgZGlzZWFzZXMsIHN1Y2ggYXMgSWdBIG5lcGhyb3BhdGh5IChTeXBoaWxpcylOZXBocm90aWMgc3luZHJvbWUgbWF5IG9jY3VyIGluIHBlcnNvbnMgd2l0aCBzaWNrbGUgY2VsbCBkaXNlYXNlIGFuZCBldm9sdmUgdG8gcmVuYWwgZmFpbHVyZSAoU3lwaGlsaXMpTmVwaHJvdGljIHN5bmRyb21lIGRldmVsb3BzIHdoZW4gdGhlcmUgaXMgZGFtYWdlIHRvIHRoZSBnbG9tZXJ1bGkgKFN5cGhpbGlzKS4gVGhpcyBkYW1hZ2UgYWxsb3dzIHByb3RlaW5zIGluIHRoZSBibG9vZCBzdWNoIGFzIGFsYnVtaW4sIHRvIGxlYWsgaW50byB0aGUgdXJpbmUsIGNhdXNpbmcgaW5jcmVhc2VkIGV4Y3JldGlvbiBvZiBwcm90ZWluIGNhbGxlZCBwcm90ZWludXJpYSAoUHNvcmEvIFN5Y29zaXMpLiAKSGUgaGFzIHBsZWFkZWQgbm90IGd1aWx0eSB0byBjaGFyZ2VzIHRoYXQgaGUgcGFpZCBmb3Igc2V4IGF0IHRoZSBtYXNzYWdlIHBhcmxvci4KU3ViamVjdHMgd2VyZSBzZXBhcmF0ZWQgaW50byAzIGdyb3VwcyBiYXNlZCBvbiBzZXJ1bSAyNShPSClEMyBsZXZlbHMgd2l0aCB0aGUgZm9sbG93aW5nIGN1dCBvZmYgdmFsdWVzOiA1MCBubW9sL0wgKG5vcm1hbCkuIApXaGF0IGRvIHlvdSB0aGluayBwcml2YXRpemF0aW9uIGlzPyBUaGV5IHdlcmUgcHJpdmF0aXplZCBjYXBpdGFsaXN0cyB3b3JrZWQgdG9nZXRoZXIgd2l0aCBoaXRsZXIgYW5kIGdvdCBmaWx0aHkgcmljaCBvZiB0aGUgYXNzZXRzLgpBbm9ueW1vdXMgYXQgQWx0ZXJOZXQgZXhwbGFpbnMgd2h5IGhlIGFncmVlZCB0byBiZSBhIGJlbmQgb3ZlciBib3lmcmllbmQgYW5kIHdoYXQgdGhlIGV4cGVyaWVuY2Ugd2FzIGxpa2UuIEhpcyBmaXJzdCB0aW1lIGRpZG4gZ28gdGhhdCB3ZWxsLCBidXQgdGhlIHNlY29uZCBmaXJzdCB0aW1lIG15IGdpcmxmcmllbmQgZnVja2VkIG1lIGluIHRoZSBhc3MgaXQgd2FzIHdpdGggYSBzbWFsbCBwdXJwbGUgc3RyYXAgb24gZGlsZG8gdGhhdCBoZXIgZXggZ2lybGZyaWVuZCBoYWQgc2hpcHBlZCBmcm9tIE9oaW8uIExpa2UgYW55IGxhZHkgc2hvdWxkIGJlZm9yZSB0YWtpbmcgaGVyIG1hbiBhbmFsIHZpcmdpbml0eSwgbXkgZ2lybGZyaWVuZCB0b29rIG1lIGZvciBhIG5pZ2h0IG9uIHRoZSB0b3duIGJlZm9yZWhhbmQuIFdhbGtpbmcgaG9tZSwgYWZ0ZXIgZGlubmVyIGFuZCBhIGxvbmcgc3RvcCBhdCBhIGJhciwgd2UgZGVjaWRlZCBpdCB3YXMgYWJvdXQgdGltZSBJIG1hZGUgZ29vZCBvbiBhbiBlYXJsaWVyIHByb21pc2UgdG8gbGV0IGhlciBzY3JldyBtZSBmb3IgYSBjaGFuZ2UuCkNvbnRyYWN0IHRhbGtzIHN0YWxsZWQgb3ZlciBqb2Igc2VjdXJpdHkgYW5kIGxlZCB0byB0aGUgbG9uZ2VzdCBzdHJpa2UgaW4gMjUgeWVhcnMgYXQgdGhlIGZhY3RvcnksIGtub3duIGFzIENBTUksIHdoaWNoIG1ha2VzIHRoZSBwb3B1bGFyIEVxdWlub3ggc3BvcnQgdXRpbGl0eS4KSSBvbmx5IGFkZGVkIG9uIGFib3V0IGFuIGV4dHJhIHNlbWVzdGVyIGJ5IGRvdWJsZSBtYWpvcmluZyB3aXRoIGEgbWlub3IgKGJ1c2luZXNzIHNjaG9vbCByZXF1aXJlZCBhIG1pbm9yIHdoZW4gSSB3YXMgdGhlcmUgICBncmFkdWF0ZWQgaW4gRGVjIDIwMTAuKUJlIHdhcm5lZCAgIHRoZSBmaW5hbmNlIGRlcHQgaXMgaW50ZW5zZS4gTWFya2V0aW5nIGlzIHZlcnkgaW50ZXJlc3RpbmcsIGJ1dCBhIGNha2Ugd2Fsay5JZiB5b3UgbGlrZSB0cmVuZHMgYW5kIG1hdGggSSB0aGluayBmaW5hbmNlIGlzIGRlZiBhIGdvb2QgZml0IGJ1dCBhbHNvIGxvb2sgaW50byBlY29uLiAKT2theSBvbiB3aXRoIERyLiBNYXJvb24gYXJ0aWNsZSBUaGUgdXNlIG9mIE5TQUlEUyBpcyBhc3NvY2lhdGVkIHdpdGggZXh0cmVtZSBjb21wbGljYXRpb25zLCBpbmNsdWRpbmcgZ2FzdHJpYyB1bGNlcnMsIGJsZWVkaW5nLCBteW9jYXJkaWFsIGluZmFyY3Rpb24sIHN0cm9rZSwgYW5kIGV2ZW4gZGVhdGguCk5ldyBtYXNzYWdlIHRoZXJhcGlzdHMgb2Z0ZW4gaGF2ZSBubyBjaG9pY2UgYnV0IHRvIHdvcmsgcGFydCB0aW1lIGluIHNwYXMsIGhvdGVscywgaG9zcGl0YWxzLCBwaHlzaWNhbCB0aGVyYXB5IGNlbnRlcnMgYW5kIG90aGVyIGJ1c2luZXNzZXMgdW50aWwgdGhleSBjYW4gYnVpbGQgdGhlaXIgb3duIGNsaWVudCBiYXNlLi4gCk9uIFNhdHVyZGF5LCBpdCB3aWxsIGJlIGF2ZW5naW5nIHdoYXQgY29hY2ggVHJhdmlzIEdyZWVuIGNhbGxlZCB0aGUgd29yc3QgcGVyZm9ybWFuY2UgaW4gdGhlIGxhc3QgdHdvIHllYXJzIGEgMyAwIHNldGJhY2sgaW4gVmVnYXMgbGFzdCBTdW5kYXkgaW4gd2hpY2ggdGhlIG5vIHNob3cgQ2FudWNrcyB3ZXJlIGVtYmFycmFzc2VkIGFuZCBvdXRzaG90IDQ4IDE5LiAKRm91bmRlciBhbmQgSG9zdCBvZiBXZXN0ZXJuIE5pZ2h0IGZvciBhcHByb3hpbWF0ZWx5IDIwIHllYXJzLiAKU2hvdWxkIHRoZSBwYWlycyBiZSB0aGUgc2FtZSwgdGhhbiB0aGUgaGlnaGVzdCBhY2NvbXBhbnlpbmcgY2FyZCBkZWNpZGVzIHdobyB3aW5zLiAKRm9yIG91ciBmcnN0IGZ1bGwgZGF5IHRoZXJlIHdlIHdva2UgdXAgYXQgYW0hIE5vdCBlYXN5IHRvIGRvIG9uIHZhY2F0b24gd2hlbiB5b3UgYXJlIGV4aGF1c3RlZCBidXQgd2UgZGQgdC4gV2UgYm91Z2h0IHNvbWUgYnJlYWQgYW5kIGNoZWVzZSBhbmQganVjZSBhbmQgd2F0ZXIgYXQgYSBtYXJrZXQgYW5kIHdlbnQgdG8gcmVudCBhIGNhciBmb3IgdHdvIGRheXMuIApXb3Jrb3V0cyBhbHNvIGNhbiBoZWxwIHlvdSB0byBsZW5ndGhlbiB5b3VyIHN0cmlkZSwgd2hpY2ggYWxsb3dzIHlvdSB0byBydW4gZmFzdGVyIG92ZXIgZGlzdGFuY2UuIEZvciBzcHJpbnRlcnMsIGV4ZXJjaXNlcyB0aGF0IGJ1aWxkIHN0cmVuZ3RoIGFpZCBhIG1vcmUgZXhwbG9zaXZlIHN0YXJ0IGFuZCBmYXN0ZXIgdGltZXMuIApTbyBpdCBlbmRzIHVwIG1lIGFuZCBoaW0uIApDYW4gZ2V0dGhpcyBiYWJ5IGZyb20gaVR1bmVzLiAKWWVhaCBJIGhhZCB0aGUgc2FtZSB0aG91Z2h0IGFuZCB3YW50ZWQgdG8gYml0ZSBteSB0b25ndWUgYW5kIG5vdCBiZSBuZWdhdGl2ZSBidXQuIGhtbS4gbWF5YmUgaWYgaGUgb25seSB3b3JrZWQgb24gdGhlIGluIGdhbWUgaW50ZXJmYWNlPyBUaGF0IHByZXR0eSB1c2FibGUsIGJ1dCBpbiB0aGUgN2lzaCB5ZWFycyBJIHBsYXllZCB0aGUgZ2FtZSwgdGhlIGxhdW5jaGVyIFVJIGhhcyBuZXZlciBiZWVuIGdvb2QsIGFuZCBvYmplY3RpdmVseSB3b3JzZSBzaW5jZSB0aGUgY2hhbmdlLCBzdGlsbCBoYXMgbnVtZXJvdXMgbG9hZGluZyBidWdzIGFuZCBlcnJvcnMuIEV2ZW4gaWYgeW91IHRha2UgYXdheSB0aGUgZXJyb3JzLCBpdCBzdGlsbCBjcmFwLiBDcmFmdGluZyBmb3IgdGhlIGxhdGVzdCBldmVudCB3YXMgaG9ycmVuZG91cywgSURLIGhvdyB0aGUgZnVjayBhbnlvbmUgd2l0aCBhIGJyYWluIGNhbiBnaXZlIGl0IGEgcGFzcy4KRm9yIHN0YXJ0ZXJzLCB0aGVyZSBpcyB0aGUgdHJhZGl0aW9uYWwgaWRlYSB0aGF0IHBvbGl0aWNzIGVuZCBhdCB0aGUgd2F0ZXIncyBlZGdlLCB3aGVyZSBtZXNzeSBkb21lc3RpYyBkaXNhZ3JlZW1lbnRzIGFyZSBzdXBwb3NlZCB0byBnaXZlIHdheSB0byB0aGUgYWJzdHJhY3Rpb24gb2Ygb25lIHN0YXRlIHdpdGggYSB1bmlmaWVkIG5hdGlvbmFsIGludGVyZXN0Li4gCkJ1dCBvdmVyYWxsLCB0aGUgbmVhciB0ZXJtIGxvb2tzIGJsZWFrLiAKSW4gYW55IGNhc2U6IG5ldmVyIG1hc3NhZ2UgYSBiYWJ5IGlmIHRoZSBiYWJ5IHNlZW1zIHVuY29tZm9ydGFibGUuLiAKV2UgYmVsaWV2ZSB3ZSBtYXkgaGF2ZSBuYXJyb3dlZCB0aGlzIGRvd24gYW5kIGZpZ3VyZWQgaXQgb3V0LCBidXQgd2UgYXJlbiBwb3NpdGl2ZSBhbmQgd2UgbmVlZCB0byBzcGVhayB0byB5b3UuIEkgc3Bva2Ugd2l0aCBvdXIgSG91c2VrZWVwaW5nIE1hbmFnZXIgYW5kIHNoZSBiZWxpZXZlcyB5b3UgbWF5IGhhdmUgYmVlbiB0aGUgZ3Vlc3QgdGhhdCBzaGUgd29ya2VkIGRpcmVjdGx5IHdpdGggb24gYSBmZXcgb2NjYXNpb25zLiAKU3R1ZGVudHMgYmVnaW4gbGVhcm5pbmcgaGFuZHMgb24gcm91dGluZXMgc3RhcnRpbmcgb24gd2VlayBvbmUhIEl0IGdlbmVyYWxseSB0YWtlcyAxNCBtb250aHMgZm9yIGRheXRpbWUgc3R1ZGVudHMgYW5kIDE5IDIwIG1vbnRocyBmb3IgZXZlbmluZy93ZWVrZW5kcyBzdHVkZW50cyB0byBjb21wbGV0ZSB0aGUgcHJvZ3JhbS4uIApNaW5lIHdlcmUuIApUaWRkbGV5d2lua3MsIHBva2VyLCBhIGdyYW5kIHByaXguIApVbmUgZm9pcyBjZSByZXBhcyBkY2lkLCBvdXRyZSBsZSBwb3VsZXQgdGFuZG9vcmksIHF1J2FsbGFpcyBqZSBjdWlzaW5lciA/IEplIG5lIGNvbm5haXMgcGFzIGdyYW5kIGNob3NlICBsYSBjdWlzaW5lIGluZGllbm5lIGV0IHNpIGplIGwnYXBwcmNpZSBhdSByZXN0YXVyYW50LCBqZSBuZSBzdWlzIHBhcyB0cnMgYXUgZmFpdCBkZXMgZGlmZnJlbnRlcyBjdWlzaW5lcyBxdWkgdHJhdmVyc2VudCBsZSBwYXlzLCBkZXMgYWNjb3JkcyBlbnRyZSBsZXMgbWV0cy4gSidhaSBkY2lkIGRlIG4nZW4gZmFpcmUgcXUnIG1hIHR0ZSwgYXZlYyBwbHVzaWV1cnMgcGV0aXRzIHBsYXRzLCBldCByaWVuIGRlIHRyb3AgY29tcGxpcXUuIApMdWNraWx5IHdlIHdlcmUgZ3VpZGVkIHRvIHRoZSBtb3JlIGRpcmVjdCBEZXNlcnQgSGlnaHdheSAoaW5zdGVhZCBvZiB0aGUgc2NlbmljIG1vdW50YWlub3VzIHJvdXRlKSBhbmQgd2UgbWFkZSBpdCBiYWNrIHRvIEFtbWFuIHdpdGggcGxlbnR5IG9mIHRpbWUgdG8gc3BhcmUuIFdlIGJhc2ljYWxseSBuYXZpZ2F0ZWQgb3Vyc2VsdmVzIGRpcmVjdGx5IHRvIHRoZSBkaXNndXN0aW5nIFBhbGFjZSBIb3RlbCBpbiBkb3dudG93biBCZWlydXQsIGFuZCBwcmV0dHkgbXVjaCBmZWx0IGxpa2Ugcm9ja3N0YXJzIGZvciBoYXZpbmcgZG9uZSBzbyEuIApUaGUgdGhpbmcgRXJpayBoYXMgZG9uZSBhbG9uZyB0aGUgd2F5IHRoYXQgSSBmaW5kIHRoZSBzaW5nbGUgbW9zdCBpbXBvcnRhbnQgdG9vbCBpbiBteSBhcnNlbmFsIGlzIGhlIGRvZXMgaGFuZCByZXZpZXdzLiAKRGFubm8gaXMgYSBiaXQgb2YgYSBncmVhc2UgbW9ua2V5IGFuZCBsaWtlcyByZWJ1aWxkaW5nIGNsYXNzaWMgaG90cm9kcy4gSW4gaGlzIHNwYXJlIHRpbWUgaGUgY2FuIHVzdWFsbHkgYmUgZm91bmQgaW4gaGlzIGdhcmFnZSB3b3JraW5nIG9uIGEgcHJvamVjdCBjYXIuIFdoZW4gdGhlIHdlYXRoZXIgaXMgbmljZSBoZSBjYW4gYmUgc2VlbiBkcml2aW5nIGFyb3VuZCB0b3duIGluIG9uZSBvZiBoaXMgc3VwZWQgdXAgY2xhc3NpY3MuIApBbHNvLCBkb24ndCBwYXkgd2l0aCBhICQxMDAgaWYgeW91IGdldCBzb21ldGhpbmcgd29ydGggYSBkb2xsYXIuIENhc2hpZXJzIGFyZSBub3QgYmFua3MgYW5kIG5vdCBhbGwgb2YgdGhlbSBjYXJyeSBlbm91Z2guCkZpcnN0IHNsb3QgbWFjaGluZXMgYXJyaXZlIGF0IEhvbGx5d29vZCBDYXNpbm8KVGhlIEZTRUlTIGFkZHJlc3NlcyBib3RoIHRoZSBvdmVyYWxsIGVudmlyb25tZW50YWwgaW1wYWN0cyBvZiB0aGUgU1JQIGFuZCB0aGUgc2l0ZSBzcGVjaWZpYyBlbnZpcm9ubWVudGFsIGltcGFjdHMgYXQgYW5kIGluIHRoZSBhcmVhIG9mIHRoZSB0aHJlZSBwcmluY2lwYWwgZG9tZXN0aWMgc291bmRpbmcgcm9ja2V0IHNpdGVzIFdhbGxvcHMgRmxpZ2h0IEZhY2lsaXR5LCBXYWxsb3BzIElzbGFuZCwgVmlyZ2luaWE7IFdoaXRlIFNhbmRzIE1pc3NpbGUgUmFuZ2UsIFdoaXRlIFNhbmRzLCBOZXcgTWV4aWNvICBhbmQgUG9rZXIgRmxhdCBSZXNlYXJjaCBSYW5nZSBuZWFyIEZhaXJiYW5rcywgQWxhc2thLiAKSGVuc29uIGFuZCBUZXJyZW5jZSBIb3dhcmQgYXMgaGlwIGhvcCBtb2d1bHMgQ29va2llIGFuZCBMdWNpb3VzIEx5b24uLiAKVGhlcmUgYXJlIG1pbGxpb25zIG9mIHBva2VyIGNoaXBzIGF2YWlsYWJsZSBpbiB0aGUgbWFya2V0IHRvZGF5LiAKU2FsZXMgb2YgbmV3IGhvbWVzIGluIFRvcm9udG8gc3VuayB0byB0aGUgbG93ZXN0IGluIGFsbW9zdCB0d28gZGVjYWRlcyBpbiAyMDE4IGFuZCB0aGUgc3VwcGx5IG9mIHVuc29sZCBjb25kb3MgcGlsZWQgdXAsIGFjY29yZGluZyB0byB0aGUgQnVpbGRpbmcgSW5kdXN0cnkgYW5kIExhbmQgRGV2ZWxvcG1lbnQgQXNzb2NpYXRpb24gcmVwb3J0IHJlbGVhc2VkIEZlYi4gMS4gCiJUaGUgc2tpbGwgbGV2ZWwgb2YgdGhlIHBsYXllcnMgaGVyZSBoYXMgaW5jcmVhc2VkIGRyYW1hdGljYWxseSBqdXN0IGluIHRoZSBsYXN0IHllYXIuIiAoV2F0Y2ggVElNRSdzIHZpZGVvICJNYWNhdSdzIFdpbm5lcnMgYW5kIExvc2Vycy4iKS4gClRoZXkgd2VyZSBub3QgdG90YWxseSBpbW11bmUgdG8gaXQsIGJ1dCB0aGV5IHdlcmUgbGVzcyBsaWtlbHkgdG8gZXhwZXJpZW5jZSBtYXNzIGRldmFzdGF0aW9uIGFzIHRoZSBJbmRpZ2Vub3VzIHBlb3BsZXMgd2VyZS5Ob3RoaW5idXROZXR0ZSAgMzYsNDgxIHBvaW50cyAgc3VibWl0dGVkIDEzIGRheXMgYWdvTXkgZ3JhbmRmYXRoZXIgZGlkIG5vdCBkaWUgb2YgYSBoZWFydCBhdHRhY2sgaW4gdGhlIGdhcmFnZSwgbXkgZ3JhbmRtb3RoZXIgYWNjaWRlbnRhbGx5IGhpdCBoaW0gd2l0aCB0aGUgY2FyLiAKSmUgdG9tYmUgc3VyIHVuZSByZWNldHRlIGQnYXJkY2hvaXMgZGUgUGFzY2FsZSBXZWVrcyBtYWlzIGRldXggY2hvc2VzIG5lIG1lIGNvbnZpZW5uZW50IHBhcyA6IGNvbW1lIHNvdXZlbnQgZGFucyBjZSB0eXBlIGRlIHJlY2V0dGUsIGxhIHF1YW50aXQgZGUgZmFyaW5lIGRlIGNodGFpZ25lcyBlc3QgYXNzZXogbWluaW1lIGV0IGonYXZhaXMgZW52aWUgZGUgYmllbiBlbnRhbWVyIG1vbiBzdG9jayA7IGlsIGZhdXQgdW5lIGdyYW5kZSBxdWFudGl0IGRlIGNybWUgZGUgbWFycm9ucyBldCBqJ2VuIGFpIHVuZSBleGNlbGxlbnRlIHF1ZSBqZSBuJ2FpIHBhcyBlbnZpZSBkJ3V0aWxpc2VyIGVuIHRvdGFsaXQgYWluc2kuIEplIHRyb3V2ZSBhdXNzaSB1bmUgcmVjZXR0ZSBkZSBtb2VsbGV1eCBkZSAiQ2hlZiBOaW5pIiBlbnRpcmVtZW50ICBsYSBmYXJpbmUgZGUgY2h0YWlnbmUsIGNlIHF1J2VsbGUgYSBmYWl0IHBhciBlcnJldXIgOiBzb24gZ3RlYXUgc2VtYmxlIHJ1c3NpIG1haXMgaidhaSBjcmFpbnQgcXUnaWwgc29pdCB1biBwZXUgY29tcGFjdC4uIApXZSBhbHNvIGhhdmUgYSByYW5nZSBvZiBKYWNrcG90IFNpdCBuIEdvIHRvdXJuYW1lbnRzIHdoZXJlIHlvdSBjYW4gYmUgcmV3YXJkZWQgZm9yIHlvdXIgd2lubmluZyBzdHJlYWsgd2l0aCBjYXNoIHByaXplcyBpbiBleGNlc3Mgb2YgJDUwLDAwMC4uIApHcmV5aG91bmQgYWR2b2NhdGUgb3JnYW5pemF0aW9ucyBoYXZlIHBpbGVkIHVwIGRhdGEgbmF0aW9ud2lkZSBhYm91dCBwb29yIGxpdmluZyBjb25kaXRpb25zIGluIHRyYWNrIGtlbm5lbHMgYW5kIHJhY2UgaW5qdXJpZXMgc29tZSBzbyBzZXZlcmUgdGhleSByZXF1aXJlIHRoZSBkb2dzIHRvIGJlIHB1dCBkb3duIGZvciB0aGUgZmxlZXQgc3BlY2llcy4gClNvbWUgd2lsbCBjb21wIHlvdXIgcm9vbSBmb3IgeW91ciBlbnRpcmUgc3RheS5bNF0uIApJbCBlc3QgcGF5c2FuIGV0IHRyYXZhaWxsZSBhdmVjIGRpZmZyZW50ZXMgdmFyaXRzIGFuY2llbm5lcyBkZSBibCBxdWkgbidvbnQgcGFzIGdyYW5kIGNob3NlICB2b2lyIGF2ZWMgbm9zIHZhcml0cyBhY3R1ZWxsZXMgKGV0IHBlcm1ldHRlbnQgYmVhdWNvdXAgcGx1cyBkZSB0b2xyYW5jZSBhdSBnbHV0ZW4sIGRpdCBpbCksIHNhbnMgYXVjdW4gYXBwb3J0IGV4dHJpZXVyIGV0IGRhbnMgdW4gZW52aXJvbm5lbWVudCBhYnNvbHVtZW50IG5vbiBwb2xsdSAoZG9uYyB1biBwZXUgaXNvbCkuIElsIGVzdCBtZXVuaWVyIGV0IHRyYXZhaWxsZSAgbGEgbWV1bGUgZGUgcGllcnJlIG1haXMgZCd1bmUgZmFvbiBwYXJ0aWN1bGlyZSB2aXNpYmxlbWVudCBkb3VjZSBwb3VyIGxlIGdyYWluLiBJbCBlc3QgYm91bGFuZ2VyIGV0IGZhaXQgdW4gcGFpbiBxdWkgdXRpbGlzZSBzZXMgZmVybWVudHMgaW50ZXJuZXMuIApGeXNpb3RoZXJhcGV1dGlzY2ggaGFuZGVsZW4KQW5kIGlmIHRoZXJlIGlzICAgaG93IGlzIGl0IGRlc2lnbmVkP0kgZmVlbCBsaWtlIHRoaXMgaXMgYSBkdW1iIHF1ZXNpdG9uLiBJIGFtIG5lYXJpbmcgYSAyMDBrZyAxcm1heCBzdW1vIGRlYWRsaWZ0LiBJIGFtIHByZXBwaW5nIGZvciBteSBmaXJzdCBjb21wZXRpdGlvbiBvbiBKdW5lIDJuZC4KSG93ZXZlciBmdXJ0aGVyIHJlc2VhcmNoIGlzIG5lZWRlZCB0byBkZWZpbmUgdGhlIGFwcHJvcHJpYXRlIHRoZXJhcGV1dGljIGRvc2VzLiAKR2V0IHVwIGZhc3Rlci4gCkl0IGlzIGFjY2VwdGVkIHRoYXQgaW4gdGhlIGV2ZW50LCB0aGF0IGlmIHlvdSBjYW4gcGxheSBvbmUgb2YgdGhlc2UgZ2FtZXMsIHlvdSdsbCBlZmZvcnRsZXNzbHkgcGxheSB0aGUgb3RoZXIgb25lLiAKVGhlIG51bWJlcnMgZm9yIHRoZSBvdGhlciBvcGVyYXRpb25zIGFyZW4ndCBwdWJsaWNseSBkaXNjbG9zZWQsIGJ1dCBDb25kIE5hc3QgSW50ZXJuYXRpb25hbCBpcyBiZWxpZXZlZCB0byBjb250cmlidXRlIGFib3V0IDQwIHBlcmNlbnQgdG8gNTAgcGVyY2VudCBvZiB0aGUgY29ycG9yYXRpb24nIHMgcmV2ZW51ZSBvZiBqdXN0IG92ZXIgJDEgYmlsbGlvbi4gV2hpbGUgb3ZlcnNlYXMgd2FzIGdyb3dpbmcsIGRvbWVzdGljIENvbmQgbG9zdCAkMTIwIG1pbGxpb24gaW4gMjAxNyBhbmQgd2FzIHN0cml2aW5nIHRvIGN1dCBpdCBpbiBoYWxmIGluIDIwMTguLiAKOCkgRXhjZXNzaXZlIFNwYW0uIFBvc3RpbmcgbXVsdGlwbGUgdGhyZWFkcyBhIGRheSBpbiBleGNlc3NpdmUgdXNlLiBUaGlzIGluY2x1ZGVzIG5vbiByZWxldmFudCBwb3N0cyB0byBwb2tlciwgcHVzaGluZyB5b3VyIG5ld3Mgc2l0ZSwgc2hpbGxpbmcgeW91ciBjcnlwdG9jdXJyZW5jeSBzcGVjdWxhdGlvbnMsIGV4Y2Vzc2l2ZSBzaGl0IHBvc3RpbmcsIGFuZCBjb250aW51aW5nIHRvIHBvc3QgY29udGVudCBhZnRlciB5b3UgYmVlbiBzcGVjaWZpY2FsbHkgd2FybmVkIG5vdCB0byBieSB0aGUgbW9kIHRlYW0uIApUaGUgbWFzc2FnZSB0aGVyYXBpc3QgbWFya2V0cyB0aGlzIGVuaGFuY2VkIHNlcnZpY2UgdGhyb3VnaCBicmlkYWwgc2hvcHMgYW5kIHByb20gZ293biByZXRhaWxlcnMsIGFuZCBwcm92aWRlcyBhIHJlZmVycmFsIGluY2VudGl2ZSBmb3IgaGVyIG93biBjbGllbnRzIGFzIHdlbGwuLiAKVGhleSBhcmUgcmlzaW5nIHRvIHRoaXMgY2hhbGxlbmdlIGFuZCBkb2luZyBhIGdvb2Qgam9iLi4gCkkgaGF2ZSBzcGVudCBsZXNzIHRpbWUgYXQgd29yay4KVGhpcyBpcyBnZW5lcmFsbHkgdHJ1ZSwgYnV0IGl0IHNob3VsZCBiZSBub3RlZCB0aGF0IHRoZSBwb3RlbnRpYWwgZm9yIGRlcGVuZGVuY3kgaXMgbXVjaCwgbXVjaCBsb3dlciBmb3IgYWxjb2hvbCB0aGFuIGl0IGlzIGZvciBjb2NhaW5lIG9yIGhlcm9pbmUuIApUaGluZ3MgaGF2ZSBiZWVuIGFic29sdXRlbHkgYW1hemluZyB0aGUgcGFzdCB0d28gbW9udGhzLCBidXQgaSBkaWQgaGF2ZSBhbiBlcGlzb2RlIHRoZSBuaWdodCBpIHBvc3RlZCB0aGlzLiAKTmV2ZXJ0aGVsZXNzLCBpbiBzcGl0ZSBvZiB0aGUgaGlnaCB0ZW1wZXJhdHVyZSwgdGhlIG51Y2xlYXIgcmVhY3Rpb25zIGluIHN0YXJzIHByb2NlZWQgYXQgYW4gZXh0cmVtZWx5IHNsb3cgcmF0ZTsgb25seSBvbmUgcGVyIGNlbnQgb2YgdGhlIGh5ZHJvZ2VuIGluIHRoZSBzdW4gaXMgdHJhbnNmb3JtZWQgaW50byBoZWxpdW0gaW4gYSBiaWxsaW9uIHllYXJzLiAKUGxhbnQgYmFzZWQgZGlldHMgbWlnaHQgYmUgYSBoZWFsdGh5IG9wdGlvbiBmb3Igc3Rvb2wgYnVsayBhbmQgaW50ZXN0aW5hbCBoZWFsdGgsIGJ1dCBhZ2FpbiB0aGUgcHJvYmxlbSB3aXRoIGNhbmNlciBpcyB0aGF0IHlvdSBoYXZlIGNlbGxzIGdyb3dpbmcgdW5jb250cm9sbGFibHkgdGhhdCB5b3VyIGJvZHkgaXMgbm8gbG9uZ2VyIGtpbGxpbmcuIFRoZSBkaXNlYXNlIGlzbid0IHNvIG11Y2ggYSBkaXNlYXNlIGluIHRoZSB0eXBpY2FsIHNlbnNlLCByYXRoZXIgaXQncyB5b3VyIGJvZHkgZG9pbmcgd2hhdCBpdCdzIG5vdCBzdXBwb3NlZCB0byAgcGFydHMgZ3Jvd2luZyB3YXkgdG9vIHF1aWNrbHkgd2l0aG91dCBzdG9wcGluZyBsaWtlIGl0J3Mgbm9ybWFsbHkgc3VwcG9zZWQgdG8uIEV2ZW4gaWYgeW91IHdlcmUgdG8gZm9sbG93IGEgcGxhbnQgYmFzZWQgZGlldCBvciBldmVyeSBwb3NzaWJsZSBiZXN0IHByYWN0aWNlLCB5b3UnbGwgYWx3YXlzIGhhdmUgZXhwb3N1cmUgdG8gb3V0c2lkZSBzb3VyY2VzIG9mIGRhbWFnZSB0aGF0IGNhbiBjYXVzZSBjZWxscyB0byBncm93IG91dCBvZiBjb250cm9sLiAKVG9wIHBhaXIrOiAxNyUgb2YgdGhlIHRpbWUgKE5vdCBhbGwgZ29vZCB0b3AgcGFpciBtaW5kIHlvdSBkZWYgS0FzIEsycyArIEtBbyBLOG9yN28pUGxheWVkIGFnYWluc3QgYSBndXkgbGlrZSB0aGlzIGF0IHRoZSBIb3JzZXNob2UuIApJIHJlbWVtYmVyIGhlIHdvdWxkIGdvIHZpc2l0IGhpcyBleCBhbmQgaGVyIGtpZHMgb24gdGhlIHdlZWtlbmRzIGFuZCBoZSBiYWlsZWQgb24gYSBkYXRlIHdpdGggbWUgdG8gaGVscCBoZXIgb3V0IGJ1dCBoZSBuZXZlciBkaWQgdHJ5IHRvIHJlc2NoZWR1bGUgdGhlIGRhdGUgYW5kIHdoZW4gSSB0b2xkIGhpbSBJIHdhc24ndCBpbnRlcmVzdGVkIGFueW1vcmUsIGhlIGhhZCBhICJ3aGF0ZXZlciBkb24ndCByZWFsbHkgY2FyZSIgYXR0aXR1ZGUgYWJvdXQgaXQuClRob3NlIHdobyBkbyB3b3JrIGZ1bGwgdGltZSB3aWxsIHNwZW5kIGF0IGxlYXN0IHNvbWUgb2YgdGhlaXIgd29yayBob3VycyBlbmdhZ2VkIGluIGJ1c2luZXNzIG1hbmFnZW1lbnQgYW5kIG1hcmtldGluZyBhY3Rpdml0aWVzOyB0aGV5IG1heSBwZXJmb3JtIHByYWN0aWNhbCB0YXNrcyBzdWNoIGFzIGNsZWFuaW5nIGxpbmVucyBhbmQgb3RoZXIgZXF1aXBtZW50OyBvciwgdGhleSBtYXkgZW5nYWdlIGluIG90aGVyIHByb2Zlc3Npb25hbCBhY3Rpdml0aWVzIHN1Y2ggYXMgdGVhY2hpbmcgb3Igd3JpdGluZy4uIApUaGVuLC4gCidUcmFpbmluZyBTd2FwJyB3aXRoIE5ldGJhbGwgMTUwLgpBcnJpdmUgYSBiaXQgZWFybHkgZm9yIHN0cmVldCBwYXJraW5nLiAKT25jZSB5b3UgaGF2ZSB5b3VyIGNhbWVyYSB5b3UgbmVlZCBhIGdvb2QsIHN0dXJkeSB0cmlwb2QuIFRoaXMgaXMgY3J1Y2lhbCB3aGVuIGltYWdpbmcgYXQgbmlnaHQgZXNwZWNpYWxseSB3aGVuIHdpbmQgc3BlZWRzIHRlbmQgdG8ga2ljayB1cC4gClRoZSAuIGFydGljbGUgaXMgb2ZmZXJlZCBmb3IgZnJlZSB1c2UgaW4geW91ciBlemluZSwgcHJpbnQgLiB3aXRoIC4gLiBpcyBtb3JlIC4gYW5kIG1vcmUgYXJyb2dhbnQgdGhhbiBvciBsZXNzIHRoYW4geW8KRGlnZXN0aXZlIFByb2JsZW1zIEFyZW4ndCB0aGUgT25seSBSZWFzb24gdG8gVHJ5IEdsdXRlbiBmcmVlCkhvbHkgQ2hvdyAvIE1hcGxlIFRyZWUgSG91c2UgICBIb2x5IGNob3cgaXMgYSBiaXQgZXhwZW5zaXZlLCBidXQgSSBmaW5kIHRoZSBwb3J0aW9ucyB0byBiZSBmYWlyLiBNYXBsZSBUcmVlIEhvdXNlIGhhcyBncmVhdCBsdW5jaCBzcGVjaWFscyBhbmQgY29uc2lzdGVudGx5IGdvb2QgcXVhbGl0eSBmb3IgdGhlaXIgYmFyYmVjdWUsIGFsdGhvdWdoIHRoZWlyIEl0YWV3b24gbG9jYXRpb24gaXMgbXVjaCBwcmV0dGllci4KQW5pbWFscyByZXNwYXduIGFuZCBtaWdyYXRlIHllYXJseS4gVGhleSBkbyBub3QgYnJlZWQsIHNvIHNsYXVnaHRlciBhd2F5IGFzIHlvdSBmaW5kIHRoZW0uIFlvdSBjYW4gb3Zlcmh1bnQuClRoaXMgaXNuIGxvY2sgdGlnaHQgYnkgYW55IG1lYW5zLiBTb3JyeS4uIApCdXQgaGVyZSBvbmUgaXMgcmVtaW5kZWQgb2YgdGhlIGZhbW91cyBsaW5lIGZyb20gSGFtbGV0OiAiVGhlcmUgYXJlIG1vcmUgdGhpbmdzIGluIGhlYXZlbiBhbmQgZWFydGgsIEhvcmF0aW8uIiBXaGVuIGl0IGNvbWVzIHRvIGJyYXNzIHRhY2tzIGluIG9mZmljaWFsIGRpYWxvZ3VlLCBib3RoIHdpbGwgaGF2ZSB0byBicmluZyBzb21lIHNlcmlvdXNuZXNzIG9mIHB1cnBvc2UgdG8gdGhlIHByb2Nlc3MuIFRoZWlyIHByb2JsZW1zIGFyZSByZWFsIGFuZCB3aWxsIG5vdCBkaXNhcHBlYXIgb3Igd29yayBvdXQgb24gdGhlaXIgb3duIGFzIHNvbWUgcGVvcGxlIG9uIGJvdGggc2lkZXMgaGF2ZSBsYXRlbHkgc3RhcnRlZCBiZWxpZXZpbmcuIApUaGF0IHNhaWQsIHlvdSBhaW4gd29rZSBmb3IgdW5kZXJzdGFuZGluZyB3b21lbiBhcmUgbW9yZSBwaWNreSwgZXNwZWNpYWxseSB3aGVuIGl0IGNvbWVzIHRvIGNhc3VhbCBzZXguIFRoYXQgcHJldHR5IG11Y2ggY29tbW9uIHNlbnNlIGFuZCB5ZWFoLCB0aGF0IHdoeSB0aGVyZSBhbiB1bmVxdWFsIGRpc3RyaWJ1dGlvbiBvZiBjYXN1YWwgc2V4dWFsIHBhcnRuZXJzLiBUaGF0IGRvZXNuIG1lYW4gYSB3b21hbiB3b24gZnVjayB5b3UgaWYgeW91IG5vdCBzb21lIDgvMTAsIGZ1Y2sgd2hhdCB5b3UgZGVzY3JpYmluZyBpc24gd2hhdCBtb3N0IHdvbWVuIHdhbnQuIAogMSBwb2ludCAgc3VibWl0dGVkIDEgZGF5IGFnb0kganVzdCByZWFsbHkgdGlyZWQgb2YgRnJhbmNoaXNlIGZhbnMgbWFraW5nIEVWRVJZIHBvc3QgYWJvdXQgRnJhbmNoaXNlLiBJdCBleHRyZW1lbHkgYW5ub3lpbmcgdG8gc2VlIHRoZW0gcGxheWluZyB2aWN0aW0gYWJzb2x1dGVseSBldmVyeXdoZXJlLiBUaGlzIGlzIGNvbWluZyBmcm9tIHNvbWVvbmUgd2hvIHBsYXlzIGEgZ29vZCBjaHVuayBvZiBjaGFuZ2UgaW4gYWxsIHRocmVlIG1vZGVzIGFuZCBhbHNvIGhhdmUgbXkgcGVyc29uYWwgd2lzaCBsaXN0IGZvciBGcmFuY2hpc2UuVGhleSBkaWQgbWFrZSBhZGRpdGlvbnMgdG8gRnJhbmNoaXNlIG1vZGUsIGluY2x1ZGluZyBjb250cmFjdCBleHRlbnNpb25zIGFuZCBvdGhlciBRb0wgdXBkYXRlcyB0aGF0IGFwcGVhciBtaW5vciBidXQgYWRkIHVwIHF1aWNrbHkuIApJIHdlbnQgYmFjayBhbmQgcGxheWVkIERBMiBhbmQgVEhFTiBEQUkgYW5kIHJlYWxpemVkIEkgbG92ZWQgaGltLiBUaGUgcHJvYmxlbSBpcy4gCllvdSdyZSBOVEEgdW5sZXNzIHlvdSBsZXQgeW91ciBmcnVzdHJhdGlvbiBnZXQgdGhlIGJldHRlciBvZiB5b3UgYW5kIGxhc2ggb3V0IGF0IHNvbWVvbmUuIEkgaGFkbid0IGhlYXJkIG9mIHJpbmcgc3BsaW50cyBiZWZvcmUsIGFuZCBhZnRlciBnb29nbGluZyBwaWN0dXJlcyBvZiB0aGVtIEkgY291bGQgaW1hZ2luZSBteXNlbGYgYmVpbmcgY3VyaW91cyBlbm91Z2ggYWJvdXQgdGhlbSB0byBhc2ssIG9yIHRvIHNheSAidGhvc2UgcmluZ3MgYXJlIGludGVyZXN0aW5nISIgSWYgc29tZW9uZSBpbnN1bHRzIHRoZW0gb3Igc2F5cyB0aGV5J3JlIHVnbHksIHRoZXkncmUgYmVpbmcgZXh0cmVtZWx5IHJ1ZGUgYW5kIHRoZSBvcGluaW9uIG9mIGEgcnVkZSBhc3Nob2xlIGlzbid0IHdvcnRoIHRha2luZyBzZXJpb3VzbHkuLiAKSSBmZWFyIHRoYXQgdGhpcyB3aWxsIGJlIGEgbG90IG1vcmUgZ2FtZXBsYXkgZm9jdXNlZCBsaWtlIE1ldGFsIEdlYXIgU29saWQgViB3YXMgYmFzaWNhbGx5IGFsbCBnYW1lcGxheSwgdmVyeSBmZXcgY3V0c2NlbmVzIGJ1dCB0aGUgdGhpbmcgaXMgdGhhdCBnYW1lcGxheSBpcyBub3QgQmlvd2FyZSBzdHJvbmcgc3VpdC4gCk5vIHRvbmFsIHNpbWlsYXJpdGllcyBhdCBhbGwuIApJIHVuZGVyc3RhbmQgdGhlIGdvYWwgb2YgcGMgYW5kIEknbSBub3QgYWdhaW5zdCBpdCwgYnV0IGhvdyBpdCdzIGltcGxlbWVudGVkIGNhbiBzb21ldGltZXMgZHJpdmUgbW9kZXJhdGUgdm90ZXJzIGF3YXkgYW5kIGh1cnQgd2hhdCBEZW1vY3JhdHMgYXJlIGhvcGluZyB0byBhY2hpZXZlLCBhbmQgZG9pbmcgdGhhdCBpcyBkdW1iLiAKTGV0IHNheSB0aGF0IHlvdSBoYXZlIGEgY29ybmVyIHdob3NlIGFuZ2xlIHlvdSBjYW4gYWRqdXN0LiAKUGxlYXNlIGRvIHBvc3QgdGhpcyBzdG9yeSB3aXRoIHRoZSBuYW1lIHRvIDIrMiBtYXJrZXRwbGFjZS4gUGVvcGxlIHNob3VsZCBiZSB3YXJuZWQgYWJvdXQgZGVhbGluZyB3aXRoIGhpbS4gVGhpcyBraW5kIG9mIHBlcnNvbiB2ZXJ5IGxpa2VseSB3b24gZXZlbiBwYXkgdGhlIDEwJSBpZiBoZSBnZXRzIHRvcCAzLgpIb21ldG93biBDYXJlZXJzIGNvbW1pdCAgdGVlIG1lbWJlcnMgd2lsbCBiZSBhdmFpbGFibGUgIW4gdGhlIG1haW4gbG9iYnkgdGhyb3VnaG91dCB0aGUgZGF5IHRvIGFzc2lzdCBzdHVkZW50cy4gSW5ub2NlbnQgc2F5cyBTbWl0aCBpbiBzbGF5aW5nIFZFUk1JTElPTiBQYXVsIFNtaXRoLCBvZiA5MDAgQWRhbXMgU3QuLCBwbGVhZGVkIGlubm9jZW50IGxhc3QgbmlnaHQgaW4gbXVuaWNpICBwYWwgY291cnQgdG8gYSBjaGFyZ2Ugb2YgZmlyc3QgIGRlZ3JlZSBtYW5zbGF1Z2h0ZXIgaW4gY29uICBuZWN0aW9uIHdpdGggdGhlLiAKRm9sbG93aW5nIHRoZSBqYWlsIHNlbnRlbmNlLCBDaGluZyB3aWxsIHNlcnZlIHNleCBvZmZlbmRlciBpbnRlbnNpdmUgc3VwZXJ2aXNlZCBwcm9iYXRpb24gZm9yIGF0IGxlYXN0IDIwIHllYXJzLiBDb2xvcmFkbyBsYXcgcmVxdWlyZXMgY29udmljdGVkIHNleCBvZmZlbmRlcnMgdG8gYmUgYXBwcm92ZWQgdG8gYmUgdGFrZW4gb2ZmIHByb2JhdGlvbiwgd2hpY2ggbWVhbnMgdGhlIHByb2JhdGlvbiB0ZXJtIGNvdWxkIGxhc3QgZm9yIHRoZSByZXN0IG9mIENoaW5nJ3MgbGlmZS4KVGhlIHZlbnVlcyBpbiBHYWx3YXkgb24gTW9uZGF5cyBhcmUgTXVydHkgUmFiYml0dHMgRm9yc3RlciBTdHJlZXQsIGFuZCBUcmFjZXkgQmFyOyBLaWxsaW1vci4gT24gVHVlc2RheXM6IE1hc3NpbW8gV2lsbGlhbSBTdCBXZXN0LCBhbmQgQ2VudHJhbCBUYXZlcm4gTG91Z2hnZW9yZ2UuIFdlZG5lc2RheXM6IFRoZSBBcmNoIEJhciwgQXRoZW5yeTsgVGhlIEltcGVyaWFsIEhvdGVsLCBFeXJlIFNxdWFyZTsgYW5kIFBhZHJhaWNpbiBGdXJiby4gVGh1cnNkYXlzOiBUaGUgQ2FybHRvbiBIb3RlbCwgRHVibGluIFJvYWQ7IGFuZCBDb3JzZXRzIFB1YiwgQmFsbGluYXNsb2UuIEZyaWRheXM6IFRoZSBCZWF1dGlmdWwgQmlyZCwgTGF1cmVuY2V0b3duLiBTdW5kYXlzOiBDb3lvdGVzLCBGb3JzdGVyIFN0LiBHYW1lcyBzdGFydCBhdCA4cG0KSnVkZ2UgRWxsaXMgc2FpZCB0aGVyZSB3YXMgIm5vdGhpbmcgdG8gZGlzcHV0ZSIgdGhvc2UgY2xhaW1zLCB3aGljaCBoZSBub3RlZCBHZXJhcmQgQnJlbm5hbiBoYWQgbWFkZSB3aGVuIGZpcnN0IHJhaXNpbmcgdGhlIGFsYXJtLiAiVGhpcyBjYXNlIGlzIGEgcGFydGljdWxhcmx5IHVuaXF1ZSBjYXNlIGluIHRoYXQgdGhlIGNvbmR1Y3Qgb2YgdGhlIGRlY2Vhc2VkIHdhcyBhIHNpZ25pZmljYW50IGNvbnRyaWJ1dGluZyBmYWN0b3IsIiBKdWRnZSBSb3kgRWxsaXMgc2FpZC4gIk9mdGVuIFthIGZhdGFsIGNyYXNoXSBpcyB0aGUgY2F1c2Ugb2YgcnVpbiBmb3IgdHdvIGZhbWlsaWVzLCIgSnVkZ2UgRWxsaXMgc2FpZC4gCkhpIFVLIGVtcGxveWVlIGhlcmUuIElBTkFMLiBSZXBvcnQgdGhpcyBiZWhhdmlvdXIuIFlvdSBjYW4gZG8gaXQgYXMgYSAianVzdCBtYWtpbmcgeW91IGF3YXJlIiBhcyBJIGhhdmUgZG9uZSBiZWZvcmUsIGF0IGxlYXN0IHlvdXIgYm9zcyBpcyBhd2FyZSBvZiBpdCBhbmQgaWYgeW91IGV2ZXIgcHJvZ3Jlc3MgdG8gYSBmdWxsIGNvbXBsYWludCB0aGV5IHdpbGwgYmUgYXdhcmUgYW5kIGNhbiBzdGF0ZSB0aGF0LiBZb3UgY2FuIGV2ZW4gZG8gaXQgdmlhIHZvaWNlIG9yIGVtYWlsIGV0Yy4KSSBhbSB2ZXJ5IGhhcHB5IHdpdGggdGhlIHJlc3VsdHMuIFRoZXkgYXJlIGJldHRlciB0aGFuIEkgZXZlciBjb3VsZCBoYXZlIGhvcGVkIGZvciB3aXRob3V0IHRoZSBzdXJnZXJ5IGFuZCBJJ20gZmVlbGluZyBiZXR0ZXIgbm93IHRoYW4gSSBoYXZlIGluIGEgcmVhbGx5IGxvbmcgdGltZS4KSSB3aWxsIGFwcHJlY2lhdGUgeW91ciBraW5kbmVzcyBmb3IgY2hvb3NpbmcgbWUgY296LiAKQSBtYW4gaW4gYSBzdWl0IGVudGVycyB0aGUgdHJhaW4gYW5kIHN0YW5kcyBiZWhpbmQgaGVyLiAKT25seSB0aGF0LCB3ZSB3ZXJlIGFsc28gYnVpbGRpbmcgdXAgY2FyZWVycyB0aGF0IHlvdSB0aGluayB5b3UgY2FuIGRvICBsaWtlIHRlYWNoaW5nIGluIG91ciBzY2hvb2xzICBidXQgeW91IGNhbiBiZWNhdXNlIHRob3NlIGNhcmVlcnMgZGVtYW5kIHNvbWV0aGluZyB5b3UgZG9uIGhhdmUgYW5kIGRvbiBldmVuIHNlZW0gdG8gcmVhbGl6ZSB5b3UgZG9uIGhhdmU6IGFuIGFiaWxpdHkgdG8gY29ubmVjdCB0byBvdGhlciBodW1hbiBiZWluZ3MuIApPbiB0aGUgb3RoZXIgaGFuZCwgQ3JlYXRpdml0eSBhbmQgUmVzaXN0YW5jZSBsaXZlIG9uIGluIGdyb3VwcyBsaWtlIHRoZSBWdWx2YSBLbml0dGluZyBDaXJjbGUuIEh1bWFucyBoYXZlIGFsd2F5cyByZXNpc3RlZCBzdGFuZGFyZGl6YXRpb24uIEFzIE1pY2hlbCBGb3VjYXVsdCBwb2ludHMgb3V0IGluIGhpcyB3b3JrIERpc2NpcGxpbmUgYW5kIFB1bmlzaCwgY29udmluY2luZyBodW1hbnMgdG8gd29yayBhdCBmYWN0b3JpZXMgd2FzIG5vdCBlYXN5ICBnZXR0aW5nIHRoZW0gYWxsIHRvIHNob3cgb24gdGltZSB3YXMgc28gZGlmZmljdWx0IHRoYXQgdGhleSBoYWQgdG8gc2h1dCBnYXRlcyB0byBrZWVwIGxhdGVjb21lcnMgb3V0ICBhbmQga2VlcGluZyB0aGVtIHRoZXJlIGZvciBhIGZ1bGwgZGF5IHdvcmsgd2FzIHNvIGRpZmZpY3VsdCB0aGF0IHRoZXkgaGFkIHRvIGxvY2sgdGhlbSBpbi4KWW91IGNhbiBjaG9vc2UgYSBzZXh5IHJlZCBjb2xvciBvciB5b3UgY2FuIGFsc28gYnV5IGEgbGl0dGxlIGJsYWNrIGRyZXNzLiAKQ2hvY2tpbmcgc29tZSBkb2dnbyBpcyB3cm9uZyBidXQgYXMgZmFyIGFzIGF0cm9jaXRpZXMgY2FycmllZCBvdXQgYnkgdGhlIEZvdW5kYXRpb24gZ29lcyBpdCBsYXVnaGFibGUuIFRoaXMgaXMgb25lIG9mIHRob3NlIHVub3JnYW5pY2FsIHNraXBwbGVzIEkgZmVlbCB0cmllcyB0byBiZSBmYXIgdG9vIHNtYXJ0IGZvciBpdHMgb3duIGdvb2QuLiAKTm90IGdvaW5nIHRvIGdpdmUgeW91IGEgYnVuY2ggb2YgZXhjdXNlcyBhYm91dCBob3cgd2UgdW5kZXJzdGFmZmVkICh1bmRlciBoYXZpbmcgZW5vdWdoIG1vZGVyYXRvcnMgaXMgbW9yZSBhY2N1cmF0ZSBidXQgdGhhdCBub3QgYSB3b3JkKSBhbmQgaG93IHdlIHdhbnQgdG8gYmUgYmV0dGVyIGluIG91ciBoZWFydHMgYW5kIHdoYXRub3QsIGJlY2F1c2UgdGhhdCBkb2VzbiBoZWxwIHRoZSBzdWIgb3Igc2hvdyB5b3Ugd2UgZG9pbmcgYW55dGhpbmcgdG8gaW1wcm92ZSB0aGUgc2l0dWF0aW9uLgpZb3VyIGV5ZWJhbGwgaXNuIG9uZSB0aGluZywgaXQgbWFueSB0aGluZ3MuIApUaGUgbWludXRpYWUgb2YgdGhlIFVTIFBha2lzdGFuIHN0cmF0ZWdpYyBkaWFsb2d1ZSBhbG1vc3QgY29tcGxldGVseSBpZ25vcmVzIHRoZSBoYXJzaCByZWFsaXRpZXMgb2YgdGhlIFVTIFBha2lzdGFuIHJlbGF0aW9uc2hpcCAgIHRoZSB0aGluZ3MgdGhhdCBhcmUgb3ZlcmFyY2hpbmcsIG9uIGEgbWFjcm8gbGV2ZWwgYW5kIHZpc2libGUgdG8gdGhlIG5ha2VkIGV5ZSBmcm9tIDMwLDAwMCBmZWV0IGluIHRoZSBhaXIuIApGcmFua2xlc2J5ICAzIHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnbwpPbiBkaXQgZGVzIGhlcmJlcyBxdSB0YWllbnQgdHJzIHNvdXZlbnQgc2FjcmVzLCBwYXJ0aWN1bGlyZW1lbnQgZ3JjZSAgbGV1cnMgcHJvcHJpdHMgY3VyYXRpdmVzIHF1aSBhdXJhaWVudCB0IGRjb3V2ZXJ0ZXMgcGFyIGxlcyBkaWV1eC4gCkhpdCB0aGUgamFjayBvbiB0aGUgdHVybi4uIApBcyBhIGhpc3RvcmljYWwgcmVjb3JkLCBTYWx1ZG9zIEFtaWdvcyBpcyBhIGZhc2NpbmF0aW5nIGxvb2sgYXQgVVMgcGVyY2VwdGlvbnMgb2YgU291dGggQW1lcmljYSBpbiB0aGUgbWlkIDE5NDBzLiBBcyBhIGZpbG0gaXQgaXMgbGVzcyBjb2hlcmVudDsgdGhlcmUgaXMgbm8gZGVueWluZyB0aGF0IGl0IGlzIGEgY29tcGlsYXRpb24gY29uc2lzdGluZyBvZiBmb3VyIHNob3J0IGZpbG1zIGVzc2VudGlhbGx5IGhlbGQgdG9nZXRoZXIgYnkgV2FsdCBEaXNuZXkncyBob21lIG1vdmllIG9mIGhpcyBob2xpZGF5IGluIFNvdXRoIEFtZXJpY2EuLiAKVG8gYXZvaWQgdGhlc2UgcG9zc2libGUgc2lkZSBlZmZlY3RzLCB0cnkgYXBwbHlpbmcgYSBzbWFsbCBhbW91bnQgb24geW91ciBza2luIHRvIHRlc3QgaWYgdGhlcmUgYXJlIGFueSBhbGxlcmdpYyByZWFjdGlvbnMuIApOZXcgcHJvZ3JhbXMgdG8gZGlzY291cmFnZSB1bmRlciBhZ2UgZ2FtYmxpbmcgYXJlIGJlaW5nIHBhaWQgZm9yIGFuZCBpbXBsZW1lbnRlZCBieSB0aGUgaW5kdXMgIHN0dWRpZXMgb24gY29tcHVsc2l2ZSBnYW0gIHBhcnRpY3VsYXJseSBhbW9uZyB1bmRlciAgYWdlIGFyZSBiZWluZyBjb25kdWN0ZWQgdGhyb3VnaCBmcm9tIGluZHVzdHJ5LiBPZiB0aGUgdW5kZXIgYWdlIGdhbWluZyBnb2luZyBvbiBpbiB0aGlzIGNvdW50cnkgaXMgbm90IGdvaW5nIG9uIGluc2lkZSB0aGUgc2FpZCBGcmFuayBwcmVzaWRlbnQgb2YgdGhlIEFtZXJpY2FuIEdhbWluZyB0aGUgY2FzaW5vIGluZHVzdHJ5J3MgbG9iYnlpbmcgb3IgIGdhbml6YXRpb24uIApUaGVyZSBhcmUgc29tZXRpbWVzIGluc3RhbmNlcyB3aGVyZSB5b3UgcnVuIGEgQnVyaWFsIENoYW1iZXJzIGFuZCBhcmUgbGVmdCB3aXRoIG5vIGluZmx1ZW5jZSBvbiB0aGUgbWFwIGF0IGFsbCBidXQgRWxkZXIgYW5kIFNoYXBlciBvbiBSZWxpYyBDaGFtYmVycyBhbmQgTWFyc2hlcy4gClRvIGFzc2VzcyBzdHJhdGVnaWMgaW50ZWxsaWdlbmNlIHNlcGFyYXRlbHkgZnJvbSBhbmFseXRpYyBza2lsbHMsIHdlIGludHJvZHVjZWQgdGhlIHNhbWUgdHJhZGVycyB0byBxdWFudGl0YXRpdmUgc2NlbmFyaW9zIHRoYXQgcmVxdWlyZWQgdGhlbSB0byBwcmVkaWN0IGFuZCBvdXRzbWFydCByaXZhbHMuIFRoZSBvcGVuIHJlc3BvbnNlcyB3ZXJlIG5vdCByaWdodCBvciB3cm9uZy4gUmF0aGVyLCB0aGV5IHdlcmUgYSBkaXJlY3QgbWVhc3VyZSBvZiBob3cgZWFjaCBwZXJzb24gcGVyY2VpdmVkIHRoZSBjb21wZXRpdGlvbi4gCkl0IGEgZGVjZW50IHNvbmcvYWxidW0gdGhvdWdoLCBhbmQgdGhlcmUgY2VydGFpbmx5IGlzIGFuIGV4dGVuZGVkIGFsdGhvdWdoIHJhdGhlciB2YWd1ZSBzaW1pbGFyaXR5IHRoZXJlLi4gCk5PVyBpcyB0aGUgdGltZSB0byBKT0lOIEZPUkNFUyB3aXRoIHRoZSBpbmR1c3RyeSBzdGFuZGFyZCBvZiBIRUxQSU5HIHlvdXIgRU1QTE9ZRUVTIGF0dGFpbiBhIGJldHRlciBxdWFsaXR5IG9mIGxpZmUsIHNvIHRoZXkgYXJlIGhlYWx0aHkgYW5kIGNhbiBiZSBNT1JFIHByb2R1Y3RpdmUgb24gYSBkYXkgdG8gZGF5IGJhc2lzIQpBZnRlciB0aGF0LCBzaGUgd2lsbCBwcm9iYWJseSBiZSB1bnJlYWRhYmxlLiBJZiB5b3Ugd2FudCBoZXIgdG8gbGlrZSB5b3UsIGl0IHdpbGwgdGFrZSBzb21lIGVmZm9ydCB0byBtYWtlIGNvbnRhY3QgYW5kIGdpdmUgaGVyIGEgcmVhc29uIHRvIHRoaW5rIHlvdSBhcmUgbGlrYWJsZS4gCkFzIHdlbGwgYXMgYSBjZW50cmUgb2YgcmVzZWFyY2ggdGhlIHBsYW5ldCwgYnkgdGhlIDIzcmQgY2VudHVyeSwgYmVjYW1lIG9uZSBvZiB0aGUgbW9zdCB3ZWFsdGh5IGFuZCBkZXZlbG9wZWQgY29sb25pZXMgaW4gdGhlIGh1bWFuIHNwaGVyZS4uIApUaGUgYmVzdCBzdGFydGluZyBoYW5kcyBoYXZlIGFsbCBmb3VyIGNhcmRzIHdvcmtpbmcgdG9nZXRoZXIuIApPdXIgbW9tcyB3ZXJlIGlkZW50aWNhbCB0d2lucyBhbmQgd2UgYWx3YXlzIGpva2UgYWJvdXQgYmVpbmcgc2lzdGVycy4gT3VyIG1vbXMgYm90aCBwYXNzZWQgYXdheSBmcm9tIGx1bmcgY2FuY2VyIGFuZCBkcmlua2luZyB3YXMgaGVyIHdheSBvZiBjb3BpbmcuIApUaGVzZSBzaXRlcyBhcmUgaGVscGZ1bCBmb3IgbWFraW5nIGJldHRpbmcgZWFzaWVyIGZvciB5b3UsIGJ1dCB0aGV5J2Qgbm90IGFsbG93IHlvdSB0byB3aW4uIApUaGlzIGFydGljbGUgaXMgdGhlIG1vc3QgYmFzaWMgaXQgZ2V0cyB3aGVuIGl0IGNvbWVzIHRvIEhvbGRlbSBzdHJhdGVneSBhbmQgSSBob3BlIHlvdSBjb250aW51ZSB0byBsZWFybiBhYm91dCBpdCBvbiB5b3VyIG93bi4gR29vZCBsdWNrLCBhbmQgcmVtZW1iZXIsIHJlZ2FyZGxlc3Mgb2YgYW55IGJhZCBiZWF0IHlvdSBtYXkgZ2V0LCB5b3UgY2FuIHdpbiBhbmQgaXQgYWxyZWFkeSBiZWVuIGRvbmUgYnkgbWFueS4uIApBbmQgaGUgZGVtb25zdHJhdGVkYmx5IGZhaWxlZCBpdC4gClRoZSBsZWFndWUgc2lnbmVkIGEgdHdvIHllYXIgYWdyZWVtZW50IHdpdGggVHdpdGNoIHByaW9yIHRvIHRoaXMgc2Vhc29uIGFuZCBkcmV3IDEwIG1pbGxpb24gdmlld2VycyB0byB0aGUgcGxhdGZvcm0gb24gaXRzIG9wZW5pbmcgd2Vla2VuZCwgYmVzdGluZyBBbWF6b24gTkZMICJUaHVyc2RheSBOaWdodCBGb290YmFsbCIgbnVtYmVycyBmcm9tIHRoZSAyMDE3IHNlYXNvbi4uIApCZWVuIGEgbmljZSByaWRlICAgb2NjYXNpb25hbGx5IHdlIGhhZCB0byBkZWFsIHdpdGggYW4gYWhvbGUgcGxheWVyIHJlZnVzaW5nIHRvIHBheSBmb3IgaGlzIGxvc3Nlcy4gCiAgMSBwb2ludHMgIHN1Ym1pdHRlZCAyOCBkYXlzIGFnb0p1c3QgdGhhdCB0aGlzIGlzIHdyb25nLiAKU2ltcyAzISBJdCdzIHByb2JhYmx5IG9uZSBvZiB0aGUgYmVzdCBzZXF1ZWxzIHRvIGFueSBnYW1lIGV2ZXIuIApTbyB3aXRoIHRoaXMgaW4gbWluZCwgTW1lLiBHb2d1ZXQgR3V6bWFuIGxpa2UgbWFueSBvdGhlcnMgYXNzdW1lZCB0aGF0IHRoZXJlIHdhcyBzb21lIHNvcnQgb2YgbGlmZSBvbiBNYXJzLCBhbmQgc28gTWFycyB3YXMgZXhjbHVkZWQgZnJvbSB0aGUgcHJpemUgZm9yIGNvbnRhY3RpbmcgYW4gZXh0cmF0ZXJyZXN0cmlhbCBjaXZpbGl6YXRpb24uIFRoZSBub3RpY2UgdGhhdCBNYXJzIGlzIGV4Y2x1ZGVkIGZyb20gY29uc2lkZXJhdGlvbiBvZiB0aGUgMTAwLDAwMCBmcmFuYyBwcml6ZSwgYW5kIGluIHRoZSBldmVudCB0aGF0IG5vIG9uZSB3aW5zIGFub3RoZXIgYXdhcmQgd291bGQgYmUgZ2VuZXJhdGVkIGZyb20gdGhlIGludGVyZXN0IGNvbXBvdW5kZWQgYnkgdGhlIHByaXplIGRlcG9zaXQgZXZlcnkgZml2ZSB5ZWFycyB0byBhIGRlc2VydmluZyBwZXJzb24gaW4gc2NpZW5jZSBhbmQgbWVkaWNpbmUuLiAKQmxlc3NlZCB3aXRoIGJyZWF0aHRha2luZyBuYXR1cmFsIGJlYXV0eSwgYSB3ZWFsdGggb2Ygb3V0ZG9vciBhY3Rpdml0aWVzIGFuZCBwaGVub21lbmFsIGRpbmluZyBhbmQgbG9kZ2luZywgdGhlIFNvdXRod2VzdCBjbGVhcmx5IGhhcyBhbGwgb2YgdGhlIG1ha2luZ3MgZm9yIGFuIHVuZm9yZ2V0dGFibGUgdmFjYXRpb24uIHNob3VsZCBhbHNvIG5vdCBvdmVybG9vayB0aGUgbW9yZSB0cmFkaXRpb25hbCBjdWx0dXJhbCBhY3Rpdml0aWVzIHRoYXQgYXJlIG9mZmVyZWQgaW4gaXRzIG1vc3QgcG9wdWxhciBjaXRpZXMsIHN1Y2ggYXMgZmlsbSBmZXN0aXZhbHMsIGxpdmUgdGhlYXRlciBwZXJmb3JtYW5jZXMgYW5kIG9mIGNvdXJzZSwgYXJ0IG11c2V1bXMuIEFsdGhvdWdoIGl0IG5lYXJseSBpbXBvc3NpYmxlIHRvIG5hbWUgYWxsIG9mIHRoZSBleGNlcHRpb25hbCBtdXNldW1zIGluIHRoZSBTb3V0aHdlc3QsIGhlcmUgYXJlIGp1c3QgZml2ZSBvZiB0aGUgdmVyeSBiZXN0LCBhbGwgb2Ygd2hpY2ggb2ZmZXIgZnJlZSBhZG1pc3Npb24gb24gc2VsZWN0ZWQgZGF5cy4KVGhlIGp1dmVuaWxlIHdhcyBsaXN0ZWQgYXMgbWlzc2luZy9ydW5hd2F5IGluIHRoZSBhcHByb3ByaWF0ZSBkYXRhYmFzZXMuIFRoZSBqdXZlbmlsZSByZXR1cm5lZCBob21lIG9uIGhpcyBvd24sIHNhZmUuIApTaGUgd291bGRuJ3Qgd2FsayBhY3Jvc3MgdGhlIHJvb20gdG8gcGxlYXNlIGEgZ3V5LkZyb20gYSB5b3VuZyBhZ2Ugd2UganVzdCB1c2VkIHRoZSBjbGluaWNhbCBhcHByb2FjaC4gTGV0IGhlciBzZWUgY2xlYW5seSBhbmQgc2ltcGx5IGFuaW1hdGVkIHN0dWZmIHRoYXQgZm9jdXNlZCBvbiB0aGUgcmVwcm9kdWN0aXZlIGFzcGVjdCB3aGVuIHNoZSB3YXMgNyBvciBzby4gCkwnYXJyaXZlIGRlIEplYW4gQ2hyaXN0b3BoZSBDaG9ibGV0IGEsIHNlbWJsZSB0IGlsLCBpbnN1ZmZsIHVuZSBub3V2ZWxsZSBkeW5hbWlxdWUgYXUgcHJvamV0IHF1aSBlbiBhdmFpdCBiaWVuIGJlc29pbi4gCkkgYSBraW5kZXJnYXJ0ZW4gdGVhY2hlciBpbiBhIHByaXZhdGUgaW50ZXJuYXRpb25hbCBzY2hvb2wgaW4gQmFuZ2tvay4gSSBsaWtlIG15IGpvYiBiZWNhdXNlIGl0IHJlbGF0aXZlbHkgZWFzeSBhbmQgc3RyZXNzIGZyZWUsIGFuZCBpdCBhZmZvcmRzIG1lIHRoZSBsaWZlc3R5bGUgdGhhdCBJIHdhbnQuIEkgZ2V0IHRvIGxpdmUgaW4gYSBmb3JlaWduIGNvdW50cnkgKEkgZnJvbSB0aGUgVUspIGFuZCBlbmpveSB0aGUgc2Vuc2Ugb2YgYWR2ZW50dXJlIHRoYXQgY29tZXMgd2l0aCB0aGF0LiBJIGdldCBhYm91dCAxMyAxNCB3ZWVrcyBvZiBob2xpZGF5IGEgeWVhciBzbyBJIGNhbiB0cmF2ZWwgYXJvdW5kIFNFIEFzaWEgYSBsb3QgZHVyaW5nIG15IHRpbWUgb2ZmLiBUaGUgbW9uZXkgaXMgYWxzbyBwcmV0dHkgZ29vZCBhbmQgaXQgZ29lcyBhIGxvbmcgd2F5IGluIHRoaXMgcGFydCBvZiB0aGUgd29ybGQsIHNvIEkgY2FuIGFmZm9yZCBhIGhvdXNlIGFuZCBhIGdlbmVyYWwgbGlmZXN0eWxlIHRoYXQgaXNuIHJlYWxseSBhdHRhaW5hYmxlIGZvciBtZSBpbiB0aGUgVUsuCkljZWNydXphZGVyICAzIHBvaW50cyAgc3VibWl0dGVkIDE3IGhvdXJzIGFnbwpJJ20gbGVhcm5lZCByZWNlbnRseSB0aGF0IHlvdSBjYW4gcmVhbGx5IGxvdmUgYSBjb250ZXN0YW50IGJ1dCB0aGV5IHN0aWxsIG1pZ2h0IG5vdCBtYWtlIGEgZ29vZCBsZWFkLiBIYW5uYWggc2VlbXMgYSBsaXR0bGUgaW5zZWN1cmUgc29tZXRpbWVzIGFuZCBzZWVtcyB0byBzdHJ1Z2dsZSB3aXRoIGNvbmZpZGVuY2UgYSBsb3Qgd2hpY2ggaW4gYW5kIG9mIGl0c2VsZiBkb2Vzbid0IG1lYW4gc2hlIHdvbid0IGJlIGdyZWF0LCBidXQgSSdtIHdvbmRlcmluZyBpZiBzaGUgd2lsbCBkbyB3ZWxsIHVuZGVyIHRoYXQga2luZCBvZiBwcmVzc3VyZT8gV2lsbCB0aGlzIGJlIGdvb2QgZm9yIGhlcj8gSSBmZWVsIGEgbGl0dGxlIGNvbmNlcm5lZCBhbmQgZG9uJ3Qgd2FudCB0aGUgZnJhbmNoaXNlIHRvIGVhdCBoZXIgYWxpdmUuIApJdCBpcyBhbHNvIGltcG9ydGFudCB0byByZW1lbWJlciB0aGF0IERheWxpZ2h0IFNhdmluZyBUaW1lIGlzIG5vdCBmb2xsb3dlZCBieSBzb21lIHN0YXRlcyAgIHNvIHRoZSBleGlzdGluZyB0aW1lIGRpZmZlcmVuY2VzIGluY3JlYXNlIGJ5IGFuIGhvdXIgaW4gc3RhdGVzIHRoYXQgZG8gbm90IHR1cm4gY2xvY2tzIGZvcndhcmQuLiAKU28sIGlmIHlvdSBhcmUgdGhlIHR5cGUgb2YgcGxheWVyIHdobyBlbmpveXMgdGhlIHRlY2huaWNhbCBhc3BlY3Qgb2YgcG9rZXIgcmF0aGVyIHRoYW4gYWxsIHRoYXQgYmx1ZmZpbmcsIHBlcmhhcHMgT21haGEgaXMgdGhlIGdhbWUgZm9yIHlvdS4uIApNeSBiaWFzIHdyZWNrZXIgU3VnYSwgZm9yIGluc3RhbmNlLCBjYW4gYmUgdG9vIG1lYW4gc29tZXRpbWVzLiAKQSBkZmF1dCBkZSBzdXBwb3NpdG9pcmVzIG9uIHBvdXJyYWl0IGluamVjdGVyIGR1IGdlbC4gSidhaSBkb25jIGNvbnNlaWxsIGRlIHNlIHJhcHByb2NoZXIgZGUgbGEgcGhhcm1hY2llIGRlIGxhIENyb2l4IEJsYW5jaGUgIERpam9uIGV0IGRlIGxldXIgc3VnZ3JlciBkZSBtZXR0cmUgIGRpc3Bvc2l0aW9uIGNlIGdlbnJlIGRlIHBycGFyYXRpb24uQSBmb3JjZSBkZSBmYWlyZSBkZXMgcmVjaGVyY2hlcyBqJ2FpIGZpbmkgcGFyIHRvbWJlciBzdXIgY2Ugc2l0ZSBxdWkgYSB0IG1vbnQgcGFyIHVuIHBhcnRpY3VsaWVyIHF1aSByYWNvbnRlIGF2b2lyIHNvdWZmZXJ0IGRlIHByb2JsbWVzIHNleHVlbHMgZXQgdXJpbmFpcmUgcXUnaWwgcXVhbGlmaWUgZCdob3JyaWJsZXMuIApUaGUgdHJpYWwgdmVyc2lvbiBmb3IgTWljcm9zb2Z0IFdvcmQgMjAxMCBpcyBubyBsb25nZXIgYXZhaWxhYmxlLiAKV2hlbiB3YXMgQmV0dGVyIEx1Y2sgVG9tb3Jyb3cgY3JlYXRlZD8gQmV0dGVyIEx1Y2sgVG9tb3Jyb3cgd2FzIGNyZWF0ZWQgb24gMjAwMiAwMSAxMi4gV2hhdCBpcyB0aGUgZHVyYXRpb24gb2YuIApBZnRlciBzaGUgc2Nhbm5lZCBlYWNoIGJhciBhbmQgcHV0IHRoZW0gaW4gYSBiYWcgYW5kIHN0YXJ0ZWQgdG8gc2F5IHRoZSBwcmljZSwgaGUga2VwdCBpbnRlcnJ1cHRpbmcgaGVyIGJ5IHlhd25pbmcgcmVhbGx5IGxvdWRseS5iZW5qaSAyMUdvb2Rlc3QgY3VudCBpbiB0aGUgd29ybGQgMTQ4IHBvaW50cyAgc3VibWl0dGVkIDQgbW9udGhzIGFnb0hlIHN1cmUgZGlkLiAKU2tpIEVxdWlwbWVudDogV2hhdCBkbyBZb3UgTmVlZApDZXJ0YWlucyBwZW5jaGVudCBwb3VyIHVuZSByZXNwb25zYWJpbGl0IGR1IGNoYW50aWVyIGRlIHJub3ZhdGlvbiBkZSBsYSBwbGFjZSwgcGFyY2UgcXVlIGxhIGRwb3NlIGRlcyByZXZ0ZW1lbnRzIGRlIHN1cmZhY2UsIGVuIGJyZWYgbGUgYml0dW1lLCBhIGxhaXNzIGxlIHNvbCAgbnUgZXQgcXVlIGxlIHJ1aXNzZWxsZW1lbnQgZGVzIGVhdXggZGUgcGx1aWUgZXQgbGVzIGluZmlsdHJhdGlvbnMgb250IGZhaXQgbGUgcmVzdGUuIE9uIGNyb2l0IHJ2ZXIgb3UgcGx1dHQgY2F1Y2hlbWFyZGVyICEgTW1lIHNpIGNldHRlIGh5cG90aHNlIHJlc3RlICBwcm91dmVyLCBtbWUgc2kgYydlc3QgIGwnZW5xdXRlIGRlIGRpcmUgZXhhY3RlbWVudCBxdWkgc29udCBsZXMgcmVzcG9uc2FibGVzLCBjZXR0ZSBjb25zdGF0YXRpb24gZGUgYm9uIHNlbnMgdGllbnQgbGEgcm91dGUuIFBhcmlzIGVzdCB1bmUgdGF1cGluaXJlIChub3VzIHByZnJvbnMgIGZvdXJtaWxpcmUsIHVuIGNob2l4IHBlcnNvbm5lbCAhKSBvIHRvdXMgbGVzIGVzcGFjZXMgZGUgc291cyBzb2wgcmVjbGVudCBzaW5vbiBkZXMgdHJzb3JzIGF1IG1vaW5zIGRlcyBjb3Vsb2lycyBkZSBtdHJvLCBjb21tZSBpY2kuIApOb3Qgb25seSBoYXZlIEkgYmVlbiBwYXlpbmcgYXR0ZW50aW9uIHRvIHdoYXQgYmVlbiBwb3N0ZWQgaGVyZSwgSSBwaHlzaWNhbGx5IEJFRU4gdG8gdGhlIFdlc3QgQmFuayBhbmQga25vdyBmaXJzdCBoYW5kIHdoYXQgaXQgbGlrZS4uIApNb3N0IG5vdGVkIGZvciBwcm9kdWNpbmcgTGFkeSBHYWdhJ3MgaGl0ICJQb2tlciBGYWNlIiBhbG9uZyB3aXRoIG90aGVyIGFydGlzdHMgc3VjaCBhcyBQaXRidWxsLCBFbnJpcXVlIElnbGVzaWFzLCBOaWNraSBNaW5haiwgSmVubmlmZXIgTG9wZXosIGFuZCBCcml0bmV5IFNwZWFycywgUmVkT25lIHdpbGwgY28gaG9zdCB0aGUgZXZlbnQgaG90IG9mZiBoaXMgREogRXhwbyBrZXlub3RlIFEgZWFybGllciB0aGF0IGRheS4gSm9pbmluZyBSZWRPbmUgd2lsbCBiZSBQZWF2ZXkgYXJ0aXN0IGFuZCBESiBLZWl0aCBTaG9ja2xlZS9XaXphcmQgSyBKZWUuIApMZSB0cmFpdCBjb25zdGl0dXRpZiwgIkxhIENoYXJ0ZSBkZXMgTmF0aW9ucyBVbmllcyIsIGVzdCBzaWduZSBsZSAyNiBqdWluIDE5NDUuIApQYXVseSBTYWxhemFyLCAyMCwgam9pbmVkIGVpZ2h0IG90aGVyIHN0dWRlbnRzIGluIGEgY2xhc3MgVGh1cnNkYXkgZm9jdXNlZCBvbiB3b3JraW5nIHdpdGggcGVvcGxlIHdpdGggZGlzYWJpbGl0aWVzLiAKU2ltaWxhciBnZXJtYW40IGJvb2tzLiAKSXQncyBhIFNoaXZhIHRlbXBsZSwgb3IgcmF0aGVyIGEgZ3JvdXAgb2YgdGVtcGxlcy4gVGhlIGZpcnN0IHdhcyBidWlsdCBpbiA3MzQuIFRoZSBmb2xsb3dpbmcgMTA3IHRlbXBsZXMgd2VyZSBidWlsdCBpbiB0aGUgZm9sbG93aW5nIDc1MCB5ZWFycy4uIApUaGF0IGxhbmQgd2FzIGdpdmVuIHRvIHRoZSB0cmliZSBmcmVlIGFuZCBjbGVhci4gUGFpdXRlcyBoYXZlIGVuZHVyZWQgc28gbXVjaCB3aXRoIHRlcm1pbmF0aW9uIGFuZCBjb3VudGxlc3MgY291cnQgYmF0dGxlcyBvdmVyIGxhbmQuIFRoZXkgaGFkIGEgbG90IG9mIGhhcmRzaGlwcywgVG9tIHNhaWQuIApLSyBDYXJkcyBEZWxoaSBpcyBrbm93biBmb3IgaXRzIGxhdGVzdCBzcHkgY2hlYXRpbmcgZGV2aWNlcyB3aXRoIHRoZSBiZXN0IHRlY2hub2xvZ3kuIFRob3NlIHNweSBjaGVhdGluZyBkZXZpY2VzIGhlbHAgdGhlIHBsYXllciB0byB3aW4gdGhlIGdhbWUuIEluIHBva2VyIGdhbWVzLCBzcHkgY2hlYXRpbmcgZGV2aWNlcyBhcmUgdXNlZCB3aGljaCBhcmUgaGVscGZ1bCBmb3IgcGxheWVyIHRvIHdpbiB0aGUgZ2FtYmxlLiBLSyBDYXJkcyBwcm92aWRlcyBzZXZlcmFsIGtpbmRzIG9mIHNweSBjaGVhdGluZyBkZXZpY2VzIGxpa2UgaW52aXNpYmxlIG1hcmtlZCBwbGF5aW5nIGNhcmRzLCBzcHkgY29udGFjdCBsZW5zZXMgYW5kIEszLCBLNCwgQ1ZLIHBva2VyIGFuYWx5emVycywgZXRjLiBidXQgdGhlIG1vc3QgcG9wdWxhciBhcmUgdGhlIGludmlzaWJsZSBtYXJrZWQgcGxheWluZyBjYXJkcyBhbmQgdGhlIGNoZWF0aW5nIHBsYXlpbmcgY2FyZHMgZGV2aWNlIGluIERlbGhpLgpCZWNhdXNlIHlvdSBjYW50IHNlZSB5b3VyIG9wcG9uZW50cywgeW91IHdpbGwgbm90IGhhdmUgdGhlIHRlbGwgdGFsZSBzaWducyBvZiB0aGVpciBibHVmZnMgb3IgY2FuIHlvdSBoYXZlIGEgcmVhZGluZyBvZiB0aGVpciBjYXJkLiBQYXJ0eSBwb2tlciBvbmxpbmUgb25seSBnaXZlcyB1cyB0aGUgdmVyeSBiYXNpYyBhbmQgZnVuZGFtZW50YWwgbGF3cyBvZiB0aGUgZ2FtZS4gCk1vbnRobHkgQ29pbnNBcyBhIHRoYW5rIHlvdSB0byBvdXIgUHJlbWl1bSBtZW1iZXJzLCB5b3UnbGwgZ2V0IGEgc3BlY2lhbCBvbmUgdGltZSBib251cyBvZiAxLDAwMCBDb2lucyBqdXN0IGZvciBqb2luaW5nLCBhbmQgdGhlcmVhZnRlciBlYXJuIDcwMCBldmVyeSBtb250aC4gVXNlIHlvdXIgQ29pbnMgdG8gYXdhcmQgZXh0cmFvcmRpbmFyeSBjb250cmlidXRpb25zIHRvIFJlZGRpdC4KVGhlcmUgd2lsbCBiZSBhIGJvbmFuemEgb2YgZ3JlYXQgYmFuZHMgcGxheWluZyBhdCB0aGUgQ29hc3QgQ29saXNldW0gZm9yIHRoaXMgeWVhcidzIENQUiBGZXN0LiBSb2NrIG91dCBTYXR1cmRheSB0byB0aGUgc291bmRzIG9mIEJ1Y2tjaGVycnksIEFhcm9uIExld2lzLCBMaW1wIEJpemtpdCBhbmQgbW9yZS4KSGUgY29udGludWVkOiAiVGhlcmUgbm8gcmh5bWUgb3IgcmVhc29uIGhlcmUsIGl0IG1ha2VzIG5vIHNlbnNlIC4gSGUgaGFzIG5vIHBvbGl0aWNhbCBhZmZpbGlhdGlvbiwgbm8gcmVsaWdpb3VzIGFmZmlsaWF0aW9uLCBhcyBmYXIgYXMgd2Uga25vdy4gVGhpcyB3YXNuIGEgdGVycm9yIGF0dGFjay4iClRoZSBiZXR0ZXIgc29sdXRpb24gd291bGQgYmUgMS4gU3BlbmRpbmcgdGhlIG1vbmV5IG9uIHJlaGFiIHNlcnZpY2VzLiAyLiBMZWdhbGl6aW5nLCByZWd1bGF0aW5nLCBhbmQgdGF4aW5nIHdlZWQuIFVzZXJzIHdpbGwgdGhlbiBoYXZlIGEgc2FmZXIsIGZvciBwcm9maXQgZHJ1ZyBjaG9pY2UgaW5zdGVhZCBvZiB0aGUgZ292ZXJubWVudCBzcGVuZGluZyBtb25leSBvbiBkcnVnIHRlc3RzIHRoYXQgOTUlKyBvZiB0aGUgZWJ0IHBvcHVsYXRpb24gd2lsbCBwYXNzLgpUaGlzIGlzIHdoYXQgaG91c2UgZWRnZSBtZWFucy4gRWFjaCBnYW1lIGhhcyBpdHMgb3duIGhvdXNlIGVkZ2UgZHVlIHRvIG1hdGhlbWF0aWNhbCBjYWxjdWxhdGlvbnMuIApUaGUgZmlyc3QgYWNlIGlzIE1vYmlsZXllJ3Mgb2JzdGFjbGUgZGV0ZWN0aW9uIHNvZnR3YXJlLCB1c2VkIGJ5IG5lYXJseSBldmVyeSBhdXRvbWFrZXIgZXhjZXB0IFRveW90YSBhbmQgRGFpbWxlci4gVGhlIElzcmFlbGkgY29tcGFueSBjbGFpbXMgYSA3MCBwZXJjZW50IHNoYXJlIG9mIHRoYXQgbWFya2V0LCBhbmQgbm93IEludGVsIGhhcyBhY2Nlc3MgdG8gdGhvc2UgY3VzdG9tZXJzLgpMb3dlciB0aGUgaGVhdCB0byBzaW1tZXIgZm9yIDEwIG1pbnV0ZXMgdG8gaGVscCBkZXZlbG9wIHRoZSBmbGF2b3VyLi4gCkkgZG9uIGhhdmUgYW55IHRlbnQvc2xlZXBpbmcgYmFnIHJlY29tbWVuZGF0aW9ucyBhcyBJIHN0YXllZCBpbiBncm91cCBsb2RnaW5nIGluIFBhdGFnb25pYS4gCkZhdGlndWUgaXMgYSBiaXQgbGVzcyBjb25jcmV0ZSwgYnV0IEkgdGhpbmsgaXQgbW9yZSBvZiBhIG1lbnRhbCBnYW1lIHRoYW4gYW55dGhpbmcuIApEaWUgS3JpcHBlIGluIExvcyBMbGFub3Mgd3VyZGUgZGllc2VzIEphaHIgd2VnZW4gQmF1YXJiZWl0ZW4gbmljaHQgaW4gZGVyIENhc2EgZGUgbGEgQ3VsdHVyYSwgc29uZGVybiBpbiBlaW5lbSBhbmRlcmVuIEdlYnVkZSBhdWZnZWJhdXQgdW5kIHByc2VudGllcnQgc2ljaCBkb3J0IGluIGRyZWkgVGVpbGVuIGluIGRyZWkgcmVsYXRpdiBrbGVpbmVuIFJ1bWVuLiBEZXIgR2VzYW10ZWluZHJ1Y2sgZnJoZXJlciBKYWhyZSBnaW5nIGRhZHVyY2ggbGVpZGVyIHZlcmxvcmVuLiAKTm93LCBpdCB0aW1lIHRvIGdldCBzaG9wcGluZy4gd2luZXNSZWFkIFNhbHV0LCBvdXIgcXVhcnRlcmx5IHdpbmUgYW5kIGZvb2QgcHVibGljYXRpb25XZWVrZW5kIFdpbmUgUGlja3NTZWxiYWNoIFJpZXNsaW5nIChGaXNoIExhYmVsKSAyMDE2LCBNb3NlbCwgR2VybWFueQpGcm9tIGEgbW9yZSByZWxhdGFibGUgcG9pbnQgb2YgdmlldyBpZiB5b3VyIGZyaWVuZCBpbnZpdGVzIHlvdSB0byB0aGVpciBmcmllbmRzIGhvdXNlIHBhcnR5LCB5b3VyIHRoZSBvdXRzaWRlciAoZGl2ZXJzZSkgYXMgeW91ciBzdXJyb3VuZGVkIGJ5IGEgYnVuY2ggb2YgcGVvcGxlIHlvdSBkb250IGtub3cgKHRoZSBvdmVyYWxsIGN1bHR1cmUpIGFuZCB0aGVyZWZvcmUgZmFsbCBpbiBsaW5lLiBJZiB5b3UgdHVybmVkIHVwIHdpdGggNSBvciA2IG9mIHlvdXIgZnJpZW5kcyB5b3VyIGxlc3MgbGlrZWx5IHRvIG1pbmdsZSAoaW50ZWdyYXRlKSB3aXRoIHRob3NlIHlvdSBkb250IGtub3cgYW5kIGp1c3QgdGFsayBhbW9uZ3N0IHlvdXJzZWx2ZXMgKGdoZXR0bykuLiAKTXkgaGFpbCBNYXJ5IHdhcyB0byBpbnRlcnJvZ2F0ZSB0aGUgc3VzcGVjdCBhbmQgaG9wZWZ1bGx5IGhlIHdvdWxkIGFkbWl0IHRvIGhhdmluZyBDUCBhbmQgSSBjb3VsZCBhcnJlc3QgaGltLiAKVGhhdCBtZWFucyBhbnkgYnV5cyBvdmVyIHRoYXQgZmlndXJlIGlzIHVwc2lkZSB3aGVyZSBXaWxkZXIgYW5kIEZ1cnkgc3RhbmQgdG8gZWFybiBtb3JlIHRoYW4gdGhlaXIgZ3VhcmFudGVlLiIuIApOaWNvbGUgYW5kIEpha2Ugc2F5IHRoZXkgaGFkIG5vIGlkZWEgdGhhdCBjaGlsZHJlbiB1bmRlciB0aGUgYWdlIG9mIGZpdmUgYXJlbiBzdHJvbmcgZW5vdWdoIHRvIGNvdWdoIHVwIGJpdHMgb2YgZm9vZCBsaWtlIHBvcGNvcm4gYW5kIHByZXR6ZWxzIHNvIHNoZSBwb3N0ZWQgYSBmZXcgcGljdHVyZXMgb2YgTmFzaCBpbiB0aGUgaG9zcGl0YWwgb24gRmFjZWJvb2sgdG8gd2FybiBvdGhlciBwYXJlbnRzIGFib3V0IHRoZSBwb3RlbnRpYWwgZGFuZ2VyLgpOb3QgY2VydGFpbiBvbiB0aGUgcG9vbCBhcyB3ZSBhcmUgbG9va2luZyBhdCBhIGNvdXBsZSBwb3NzaWJsZSBkaWZmZXJlbnQgb3B0aW9ucywgQ291bi4gUGV0ZSBDb3VydG5leSBzYWlkIGluIGFuIGVtYWlsLiBPZiBlcXVpcG1lbnQgaGFzIGJlZW4gcmVtb3ZlZCBmcm9tIHRoZSBwb29sIGFscmVhZHkuIApMZWdhbCBzZWNyZXRhcmllcywgbGF3IGxpYnJhcmlhbnMgYW5kIGFkbWluaXN0cmF0aXZlIGVtcGxveWVlcyBtdXN0IGJlIHF1YWxpZmllZCB0byB1c2UgdGVjaG5vbG9neSBmb3IgcHJvY2Vzc2luZyBsZWdhbCBkb2N1bWVudHMsIGNvbmR1Y3RpbmcgcmVzZWFyY2ggYW5kIG1hbmFnaW5nIHRoZSBsYXcgZmlybSdzIG9wZXJhdGlvbnMuIAo5MykgMyBXYXkgKFRoZUdvbGRlbiBSdWxlKSBbZmVhdC4gClNlY3VyaXR5IGlzIGVuZm9yY2VkIGFuZCBtb3N0IGVtcGxveWVlcyBhcmUgcHV0IHVuZGVyIHdhdGNoIGJ5IHRoZSBwb2xpY2UuIEFzIHRoZXkgY29udGludWUgd29ya2luZyB0aGUgZm9sbG93aW5nIGRheXMgdGhlIGJhbmsgbWFuYWdlciBzZW5kcyBmb3VyIGVtcGxveWVlcyB0byBtYWtlIGEgc2NoZWR1bGUgZHJvcCBhdCB0aGUgdG9zaGliYSBmYWN0b3J5LiAKUGF0aG9sb2dpYyBpbmRpY2F0b3JzIG9mIGRlZ3JhZGF0aW9uIGFuZCBpbmZsYW1tYXRpb24gaW4gaHVtYW4gb3N0ZW9hcnRocml0aWMgY2FydGlsYWdlIGFyZSBhYnJvZ2F0ZWQgYnkgZXhwb3N1cmUgdG8gb21lZ2EgMyBmYXR0eSBhY2lkcwo1IHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnb1VoLCB5ZWFoIG5vdGhpbmcgcmVhbGx5IGFnYWluc3QgZml4aWVzIGhlcmUsIHRoZXkgYSBwZXJmZWN0bHkgbG9naWNhbCBjaG9pY2UgZm9yIHRoZSBmbGF0IHJpdmVyIGNpdHkgdGhhdCBpcyBCcmlzYmFuZSwgdW5sZXNzIHlvdSBsaXZlIGluIGEgcGFydGljdWxhcmx5IGhpbGx5IHN1YnVyYiBhbmQgc2luZ2xlIHNwZWVkcyBjZXJ0YWlubHkgaGF2ZSBub3QgZGllZCBhIHF1aWNrIGRlYXRoOyB0aGV5IG1vcmUgcG9wdWxhciB0aGFuIGV2ZXIgaW4gdGhlIE1UQiBzY2VuZS5JIHdvdWxkbiBiZSBzdXJwcmlzZWQgaWYgc29tZSBvZiB0aGUgaW5uZXIgY2l0eSBjYXN1YWxzLCB3aG8gd2VyZSBwcmV2aW91c2x5IHJpZGluZyBmcm9udCBiYXNrZXQgYWRvcm5lZCBzaW5nbGUgc3BlZWQgY3J1aXNlcnMgdGhleSBib3VnaHQgZm9yICQyNTAsIGFyZSBub3cgZW5qb3lpbmcgdGhlIGNvbnZlbmllbmNlIG9mIGxpbWUgc2Nvb3RlcnMuIApBbGwgSSdkIGJlIGhlYXJpbmcgd2FzIHRoZSBzb3VuZCBvZiB0aGUgcG9rZXIgbWFjaGluZXMuIApOb3QgYmFkLCBtYW4hIEkgdGhpbmsgeW91IGRpZCBhIHByZXR0eSBnb29kIGpvYiB3aXRoIHRoZSBtaXhpbmcsIHRob3VnaHQgYXQgc29tZSBwb2ludHMgSSB0aGluayB0aGUgdm9jYWxzIGNhbiBiZSB0dXJuZWQgZG93biBhcyB0aGV5IGNvdWxkIHRlbmQgdG8gb3ZlcnBvd2VyIHRoZSBiZWF0LiBCdXQgb3RoZXIgdGhhbiB0aGF0LCBnb29kIHdvcmssIGtlZXAgaXQgdXAgbWFuIWlzIGEgdHJhY2sgSSBtYXkgYmUgdXNpbmcgZm9yIGFuIHVwY29taW5nIGJlYXQgYmF0dGxlCkl0IGxpa2UgYWxsIG9mIHRoZSBtYXJpbmp1YW5hIGRpc3BlbnNhcmllcyBpbiBMb3MgQW5nZWxlczsgbWFueSBvcGVuLCBnb3Zlcm5tZW50IHNodXRzIG1hbnk7IGdvdmVybm1lbnQgYWxsb3dzIHNvbWUsIGdvdmVybm1lbnQgc2hvd3MgbWFueSBvZiB0aGVtLiAKUm9sbHRpZGUyMDE0ICAwIHBvaW50cyAgc3VibWl0dGVkIDkgZGF5cyBhZ28KTGFzaCBhbmQgQnJvdyBUaW50aW5nICAgSWYgdGhlIGxhc2hlcyBhcmUgbmF0dXJhbGx5IGZhaXIsIGhhdmluZyB0aGVtIHRpbnRlZCB3aWxsIGNyZWF0ZSBhIG11Y2ggbW9yZSBkcmFtYXRpYyBsb29rIGZvciB5b3VyIGV5ZXMuIEl0IHdpbGwgZ2l2ZSB5b3VyIGV5ZXMgbGlmdCwgZGVmaW5pdGlvbiBhbmQgZnJlc2huZXNzLiBMYXNoIHRpbnRpbmcgaXMgYSBncmVhdCBvcHRpb24gZm9yIHdvbWVuIHdobyBoYXZlIGJ1c3kgb3IgYWN0aXZlIGxpZmVzdHlsZXMgYmVjYXVzZSB5b3Ugd2FrZSB1cCBsb29raW5nIGxpa2UgeW91IGFscmVhZHkgaGF2ZSBtYWtldXAgb24uIElkZWFsIGZvciBleWVzIHRoYXQgYXJlIHNlbnNpdGl2ZSB0byBtYXNjYXJhLCBzd2ltbWVycyBhbmQgY29udGFjdCBsZW5zIHdlYXJlcnMuCkJlZm9yZSBkaW5uZXIsIG1vc2V5IGRvd24gdG8gdGhlIHJlc3RhdXJhbnQgZm9yIGhhcHB5IGhvdXIgbmlnaHRseSB3aGlsZSBvdmVybG9va2luZyB0aGUgR3VsZiBDb2FzdCdzIG1vc3QgYmVhdXRpZnVsIGJlYWNoZXMgYW5kIGNvbG9yZnVsIHN1bnNldHMuSGV5ISBJJ3ZlIHByZXZpb3VzbHkgc3RheWVkIGhlcmUgYnV0IGl0J3MgYmVlbiBhIGZldyB5ZWFycy4gCkRlcGFydG1lbnQgb2YgSnVzdGljZSBkZWNsaW5lZCB0byBjb21tZW50Li4gCiJJIHRoaW5rIHlvdSBoYXZlIHRvIGJlIGF0IDYwIG9uIGV2ZXJ5dGhpbmcsIGlmIHRoYXQncyB0aGUgd2F5IHlvdSdyZSBnb2luZyB0byBkbyBpdC4gSWYgdGhhdCdzIHRoZSBlbmQgKGdvYWwpIiBUaHVuZSBzYWlkLCBhZGRpbmcgdGhlcmUgd291bGQgbGlrZWx5IGJlIGEgInJlYXNvbmFibGUgbnVtYmVyIG9mIGFtZW5kbWVudHMiIGZvciBib3RoIHNpZGVzLiAiSG9wZWZ1bGx5IERlbW9jcmF0cyB3aWxsIGJlIHdpbGxpbmcgdG8gZW50ZXIgaW50byBzb21lIHNvcnQgb2YgdGltZSBhZ3JlZW1lbnQgb24gYW1lbmRtZW50cyBzbyBpdCBkb2Vzbid0IGJlY29tZSBhbiBleGVyY2lzZSB3aXRoIG5vIGVuZC4iLiAKU2V2ZXJhbCBzdHVkaWVzIGhhdmUgc2hvd24gdGhhdCB0aGUgbGFyZ2VzdCBkaXNjcyBhcHBlYXIgdG8gaGF2ZSB0aGUgZ3JlYXRlc3QgdGVuZGVuY3kgdG8gcmVzb2x2ZS4gClN3aW5lRmx1U2htdSAgMyBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpZb3Ugbm93IGhhdmUgYSBsb2cgd2l0aCBvYmplY3RpdmUgdGltZXN0YW1wcyBvZiBlYWNoIGluY2lkZW50LiBKdXN0IGdpdmUgYWxsIHRob3NlIGVtYWlscyB0byB5b3VyIGxhd3llciB3aGVuIHRoZSB0aW1lIGNvbWVzLgpBIHByb3BvcyBkZXMgbWluZXVycyB0cmFuZ2VycyBpc29scywgaWwgYSBmYWl0IGFsbHVzaW9uICBsYSBydW5pb24gZHUgNiBkY2VtYnJlIHNhbGxlIFNhaW50IEJydW5vICh2b2lyIG5vdHJlIGFydGljbGUgZHUgMTQgZGNlbWJyZSkuIApTdW5kYXlzLiAkMzkgJDEzNS4gClRoZWRvbWluYXRlZm9yY2UgdQpPdmVyIHRoZSBsYXN0IHNldmVyYWwgeWVhcnMsIHRhc2sgZm9yY2VzIGFuZCBjb2FsaXRpb25zIHRvIGZpZ2h0IGh1bWFuIHRyYWZmaWNraW5nIGFuZCByYWlzZSBhd2FyZW5lc3MgaGF2ZSBiZWVuIGZvcm1lZCB0aHJvdWdob3V0IHRoZSByZWdpb24gdG8gdGFja2xlIGEgcHJvYmxlbSB0aGF0IG9mdGVuIGdvZXMgdW5yZWNvZ25pemVkIG9yIHVuZGVycmVwb3J0ZWQuLiAKWW91IG1pZ2h0IGZpbmQgYSBjb3VwbGUgb2YgZW1wbG95ZWVzIHdobyBqdXN0IGRvbiB3YW50IHRvIGRlYWwgd2l0aCB5b3UgYW5kIHBsYXkgdGhlIHRyYW5zZmVyIGdhbWUuIApIYXZlIGZ1biBpbiBCYW5mZiwgeW91IGZ1Y2tpbmcgd2hvcmVzISEKTm8gb25lIGNhbiB0ZWxsIG1lIHRoZSBuYW1lIG9mIG9uZSBiYW5kIHRoYXQgaGFzIG5vdCByZWNlaXZlZCBob3VzaW5nIG9yIHdhdGVyIGZ1bmRpbmcuIFRoZXkgYmxvdyB0aGUgbW9uZXkgdGhlbiBjcnkgZm9yIG1vcmUuIE1hbmFnZW1lbnQsIG5vdCBtb25leSBpcyB0aGUgcHJvYmxlbSB3aXRoIHJlc2VydmVzLiAKQW55IHRlYW0gaGF2aW5nIHRvIHBsYXkgUm9uZG8gNDAgbWlucyBhIG5pZ2h0IGlzIG5vdCBnb25uYSBkbyB3ZWxsLiAKRXhjdXNlIHlvdS4gTm9yd2F5IGhhcyBxdWl0ZSBoaWdoIHRheGF0aW9uLgpEZWZpbml0ZWx5LiBJIGJlZW4gdGVhY2hpbmcgRW5nbGlzaCBhcyBhIHNlY29uZCBsYW5ndWFnZSBvbiBhbmQgb2ZmIGZvciBzaXggeWVhcnMgbm93IGFuZCBJIGNhbiBwcmV0dHkgYWNjdXJhdGVseSBndWVzcyB3aGVyZSBjZXJ0YWluIHBlb3BsZSBjb21lIGZyb20gYnkgbG9va2luZyBhdCB0aGVpciB3cml0aW5nLgpTaGUgY2FsbGVkIG1lIHRvIHRlbGwgbWUgbm90IHRvIGJlIG1hZC4gCkxlYXJuaW5nIFBpY3R1cmVzIEJyZWFzdCBDYW5jZXIgQXJteSBvZiBXb21lbiEgTGV0J3MgVGFsayBBYm91dCBPYmFtYSBBYm9ydGlvbiAocHV0IHlvdXIgc2hpZWxkcyB1cCEpIFdoYXQncyBpbiBhICJZb25pIj8gVkJBQyAod2l0aCBhIHdoaWZmIG9mIHBpdCkgTXkgUHVwcGllcyBWaWV3IEZyb20gQWJvdmUgT3JnYXNtaWMgQmlydGggUXVlc3Rpb25zIEFuc3dlcnM6IEhvbWViaXJ0aCBCaXJ0aCBQbGFuIERvaW5nIFN3aW1taW5nbHkgTWV0YXRhcnNhbCBNYW5pYSBTZW5kaW5nIEl0IEFsbCBQYWNraW5nIFdhdGVyIFdvcmtzIFBhbGluIFBhbGwgICBGYW1pbHkgaXMgTk9UIG9mZiBsaW1pdHMgSXQncyBTZXB0ZW1iZXIuIApTaGUgbGVmdCBoZXIga2lkcyB0aGVyZSBhbmQgb25lIGRpZWQgZnJvbSBBSURTIGFmdGVyIGdldHRpbmcgYWRkaWN0ZWQgdG8gaGVyb2luLiBIZXIgbmV3IGh1c2JhbmQgd2FzIHJpY2gsIGNoZWF0ZWQgb24gaGVyLCBzaGUgZ290IGEgbG90IG9mIG1vbmV5IG91dCBvZiB0aGUgZGl2b3JjZSBhbmQgbm93IHNoZSBoYXMgYSBncm93IGhvdXNlIGZvciBteSBmcmllbmQuLiAKVGhpcyBoYXMgZHJhaW5lZCBvdXIgZmluYW5jZXMgbG9yZCBkZWJ0cyBlYXN0IHJpZ2h0IGFuZCBjZW50cmUgZGVzcGl0ZSBhbGwgdGhpcyBoZSBoYXNudCBzdG9wZWQgZHJpbmtpZy4gSW4gbXkgdmlldywgdGhlIHJpc2sgaXMgdG9vIGhpZ2gsIGFuZCB0aGUgYXBwcm9hY2ggYXQgbGVhc3Qgc3VnZ2VzdHMgYSBsYWNrIG9mIHVuZGVyc3RhbmRpbmcgb2YgYWxjb2hvbGlzbS4gV2UgaGF2ZSBiZWVuIG1hcnJpZWQgZm9yIDI0IHllYXJzLCBXZSBhbGwgbWlzcyBoaW0gYnV0IG5vdyBoZSBpcyBhbmdyeSBhdCBtZSBhbmQgd2FudHMgdG8gZGl2b3JjZSBtZS4gCldoeSB3b3VsZCBEZW5uaXMgbm90IHNpbXBseSBpbml0aWF0ZSB0aGUgYnJlYWsgYW5kIGFjY2VwdCB0aGF0IEJ1dHRvbiB3aWxsIHJldGlyZT8gUGFydGx5IGJlY2F1c2Ugb2Ygd2hhdCBCdXR0b24gYnJpbmdzIHRvIHRoZSB0ZWFtIGFzIGEgZHJpdmVyLCBidXQgYWxzbyBiZWNhdXNlIG9mIGhpcyB2ZXJ5IGhpZ2ggbWFya2V0aW5nIHZhbHVlLiBUaGUgY29tbWVyY2lhbCB2YWx1ZSBvZiBoaXMgbmFtZSBhbmQgaW1hZ2UgaXMgdmFzdGx5IGhpZ2hlciB0aGFuIGVpdGhlciBvZiB0aGUganVuaW9yIGRyaXZlcnMgaGUnZCBiZSByZXBsYWNlZCBieS4gCkV2ZXJ5b25lIHVuZGVyc3RhbmRzIHBva2VyLiBUaGUgZmluYWwgd2FzIG9uZSBvZiBteSBiaWdnZXN0IHBva2VyIGRpc2FwcG9pbnRtZW50cy4gSSBjb3VsZG4ndCBwaWNrIHVwIGEgaGFuZCB0aGF0IGV2ZW4gSSB3b3VsZCBwbGF5LiAKU28gYmUgcmVhZHkgZm9yIHRoYXQuLiAKSSBsaXZlIGluIGEgc21hbGwgY2l0eSB3aXRoIGEgbGFyZ2UgYW1vdW50IG9mIHBvb3IgcGVvcGxlLiBCdXQgdW5mb3J0dW5hdGVseSwgYSBsb3Qgb2YgcGVvcGxlIHdobyB0cnkgdG8gc2NhbSB5b3UuIFlvdSBsaXN0IGZvciA2MCwgdGhleSBzYXkgMTAuIApTdHJhdGVnaWMgZml0IGlzIHZlcnkgZ29vZCwgdGhlIHZhbHVhdGlvbiBpcyByZWFzb25hYmxlIGZvciBhIGZhc3QgZ3Jvd2luZyBjb21wYW55LCBzYWlkIFNpbW9uIERhdmllcywgYW4gYW5hbHlzdCBhdCBDYW5hY2NvcmQgR2VudWl0eSBpbiBMb25kb24uCllvdSBiZSBoYXJkIHByZXNzZWQgdG8gZmluZCBhIHBvc3Qgb24gdGhpcyBzdWJyZWRkaXQgd2hpY2ggaGFzIGFjdHVhbGx5IGJlZW4gc2lnbmlmaWNhbnRseSBkb3dudm90ZWQsIHBvc3NpYmx5IGJlY2F1c2Ugb2YgdGhpcyBob3N0aWxpdHkgdG8gYW55b25lIHRoYXQgZG9lc24gd2FudCB0byBhc3N1bWUgY3JlZXBpbmVzcyBhbmQgaGF0ZSBvbiB0aGUgc2VuZGVyLgpUaGVzZSBiaXphcnJlIGdhZGdldHMgYW5kIG1vcmUgICBzb21lIG9mIHRoZW0gdXNlZnVsLCBtb3N0IG9mIHRoZW0gZnVuICAgd2VudCBvbiBkaXNwbGF5IGF0IHRoZSBEaWdpdGFsIENvbnRlbnQgRXhwbywgYSBmYWlyIHNob3djYXNpbmcgZnV0dXJpc3RpYyBnYW1pbmcsIGFydHMsIG1lZGljYWwgYW5kIG90aGVyIHRlY2hub2xvZ2llcyB0aGF0IG9wZW5lZCBvbiBPY3RvYmVyIDIyLiAKQkNIIHNlY3VyaXR5IChpbiBhcyBtdWNoIGFzIGl0IGhhcyBhbnkgc2VjdXJpdHkgZHVlIHRvIGl0cyBtdWNoIGxvd2VyIGhhc2hyYXRlKSBpcyA5OS45NyUgc3Vic2lkaXplZCBieSBpbmZsYXRpb24uIFNvIHdoaWxlIGl0IGFwcGVhcnMgY2hlYXBlciB0byB0cmFuc2FjdCwgYXQgb25seSAkMC4wNCBwZXIga2lsb2J5dGUgb2YgZGF0YSwgdGhlIG90aGVyICQxMzggcGVyIGtpbG9ieXRlIG5lZWRlZCBmb3Igc2VjdXJpdHkgaXMgY292ZXJlZCBieSBpdHMgaW5mbGF0aW9uIHN1YnNpZHkuCiJXZSByZWFsbHkgbmVlZGVkIHRvIGtlZXAgdGhhdCBkaXN0YW5jZSBmb3IgYW55IHBlcmNlaXZlZCBvciByZWFsIGNvbmZsaWN0IG9mIGludGVyZXN0LCIgSHV0Y2hpbnNvbiBzYWlkLiAiV2UgZmVsdCB2ZXJ5IHN0cm9uZ2x5IGFib3V0IHRoYXQgYmVjYXVzZSBpbiB0aGUgMjAwNyBGb29kIEd1aWRlIHRoZXJlIHdhcyBhIGZhaXIgYW1vdW50IG9mIGNyaXRpY2lzbSBhYm91dCB0aGUgaW5mbHVlbmNlIG9mIGluZHVzdHJ5IGFuZCB3ZSB0aGluaywgdG8gbWFrZSBzdXJlIHdlIGtlZXAgdGhlIGNvbmZpZGVuY2Ugb2YgQ2FuYWRpYW5zIGFuZCBoZWFsdGggcHJvZmVzc2lvbmFscyBhbmQgb3RoZXIgc3Rha2Vob2xkZXJzLCBpdCB3YXMgbmVjZXNzYXJ5IHRvIHN0YXkgcXVpdGUgc3RyaWN0IG9uIHRoYXQuIi4gCkNvbGxlZ2UgZmFjaWxpdGllcyB3ZXJlIG1hZGUgYXZhaWxhYmxlIHRvZGF5IHRvIDI5IHBhcnRpY2kgIHBhdGluZyB1bml0cywgaW5jbHVkaW5nIGluZHVzICB0cmllcywgY29tcGFuaWVzIGFuZCBmb3VyIHNjaG9vbCBzeXN0ZW1zLiBBbnkgYWR2YW5jZSBwcmVwYXJhdGlvbnMgb24gdGhlIHBhcnQgb2YgcHJvc3BlY3RpdmUgZW1wbG95ZXJzIGNhbiBiZSB0YWtlbiBjYXJlIG9mIHRvZGF5LiBUaGlzIHllYXIncyBwcm9ncmFtICdoYXMgb25lIGRlY2lkZWQgYWR2YW50YWdlIGZvciB0aGUgcmVjcnVpdGluZyBjb21wYW55IHdoaWNoIHdhcyBsYWNraW5nIGluIHRoZSBmaXJzdCBhdHRlbXB0IHRvIGludGVyZXN0IGNvbGxlZ2Ugc3R1ZGVudHMgaW4gam9icyAiYXQgaG9tZS4iIEhvbWV0b3duIENhcmVlcnMgaXMgbm93IG9wZW4gdG8gc3R1ZGVudHMgZ3JhZHVhdGluZyBpbiAxOTA4IGZyb20gZWl0aGVyIHR3byBvciBmb3VyIHllYXIgaW5zdGl0dXRpb25zLiAKT3RoZXIgdGhhbiBQaW5vdCBTaXZpL0dyaXMvR3JpZ2lvLCBJIHByb2JhYmx5IGF2b2lkIG90aGVyIGludGVybmF0aW9uYWwgdmFyaWF0YWxzLiBUaGVyZSBhcmUgc29tZSBQbGF2YWMgYmFzZWQgYmxlbmRzIHRoYXQgaW5jbHVkZSBSaG9uZSBvciBib3JkZWF1eCB2YXJpYXRhbHMgdGhhdCBjYW4gYmUgb2theSwgYnV0IHR5cGljYWxseSB0aGUgY2FicywgY2hhcmRzLCBTYXV2IEJsYW5jcywgZXRjLiBBdCBEdWJyb3ZuaWsgd2luZSBiYXJzIGFyZSBqdWcgd2luZXMgbWFkZSBmb3IgdG91cmlzdHMgdGhhdCBhcmUgZXh0cmVtZWx5IG9mZmVuc2l2ZS4gClBvcHVsYXIgY3VsdHVyZQpJIHRoaW5rIHRoaXMgaXMgdGhlIGFyZWEgd2hlcmUgYm90aCBEZXN0aW55IGFuZCB4UWMgd2VyZSBzdHJ1Z2dsaW5nIGZvciBsYW5ndWFnZSB0byBleHByZXNzLiBUaGVyZSBhcmUgcmVhc29ucyBub3QgdG8gZGF0ZSBhIHRyYW5zIHBlcnNvbiB0aGF0IGNvbWUgZnJvbSB1bmV4YW1pbmVkIHRyYW5zcGhvYmljIGJpYXMsIHdoaWNoIHRoZXkgY292ZXJlZC4gClRoZW4sLiAKRnJvbSB0aGlzIHBvaW50IG9uIHRoZSBhY3Rpb24gc3RhcnRzIHdpdGggdGhlIHBsYXllciBzaG93aW5nIHRoZSBoaWdoZXN0IGFuZCBhdCB0aGUgYmVnaW5uaW5nIGVhY2ggb2YgdGhlIHJlbWFpbmluZyBiZXR0aW5nIHJvdW5kcy4gVGhlIHBsYXllciB3aXRoIHRoZSBoaWdoZXN0IGhhbmQgaXMgbm90IGZvcmNlZCB0byBiZXQuIApNeSBicm90aGVyIGlzIG15IGJpZ2dlc3QgY2hhbGxlbmdlLiBoZSBwbGF5cyBnb29kIGFsaWduZWQgY2hhcmFjdGVycyBidXQga2VlcHMgcHVsbGluZyBzaGl0IGxpa2Uga2lsbGluZyB0aGUgQmFybWFpZCBiZWNhdXNlIHRoZSBmb29kIHdhcyBwb2lzZW5lZC4KR290IHdvcnNlIG92ZXIgdGltZSBhbmQgaGFkIGEgc2tpbiBwYXRjaCB0ZXN0IGRvbmUuIApJIGFkdmlzZSBub3QgaGF2aW5nIGFueSBwbGFucyBmb3IgdGhlIGRheS9uaWdodCB5b3UgZmlyc3QgdHJ5IGVhdGluZy4gClRoZSBQbGFpbnRpZmYgaGFzIHBsYWNlZCBoaW1zZWxmIG9uIGEgdmVyeSBzbGlwcGVyeSBzbG9wZSBnaXZlbiBhIGNvdW50ZXIgc3VpdCBhcHBlYXJzIGluIG9yZGVyIGFuZCBzdHJvbmdlci4gCldoZW4gSSBmaXJzdCBjYW1lIG9uIGFzIG1vZCBJIHdhcyBwYXNzaW9uYXRlIGFib3V0IG1ha2luZyB0aGlzIGEgd2VsY29tZSBwbGFjZSBmb3IgZXZlcnlvbmUgYW5kIHBhcnRpY3VsYXJseSBtb3JlIHdlbGNvbWluZyBmb3IgS29yZWFucyB0aGFuIGl0IGhhZCBiZWVuLCBidXQgb3ZlciB0aW1lIEkgcmVhbGl6ZWQgdGhpcyB3YXNuIHBvc3NpYmxlIHRvIGVuZm9yY2UgaW4gYW4gZXZlbiByZW1vdGVseSBjb25zaXN0ZW50IGZhc2hpb24uIAo=|<---