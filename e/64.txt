--->|RGVzcGl0ZSB0aGUgY29uY2VybnMgb3ZlciBoaXMgcmVjZW50IGJlaGF2aW91ciB3aGlsZSBpbmNhcmNlcmF0ZWQsIERlbCBCYWxzbyBhdXRvbWF0aWNhbGx5IHF1YWxpZmllZCBmb3IgeWV0IGFub3RoZXIgc3RhdHV0b3J5IHJlbGVhc2UgaW4gRmVicnVhcnkuIGJvcmRlciB0aHJvdWdoIEZpcnN0IE5hdGlvbnMgbGFuZCBuZXh0IHRvIHRoZSBzdGF0ZSBvZiBOZXcgWW9yay4KRmFudGFzdGljIHJpZGUgcmVwb3J0LCBRQi4gU291bmRzIGxpa2UgYW4gYW1hemluZyBkYXkgICB3aGF0IHdpdGggTXQuIERpYWJsbyBhbmQgdGhlIHdpbmQgZmFybSBtb3VudGFpbiAgIHRoYXQncyBhIHN1bW1lcnMnIHdvcnRoIG9mIGNsaW1iaW5nIHJpZ2h0IHRoZXJlISBXT1chIFRoZSBwaWN0dXJlcyBhcmUgZ29yZ2VvdXMgICB3aGF0IGJlYXV0aWZ1bCB0ZXJyYWluISBGb3Igc2hlZXIgdHJhaW5pbmcgcHVycG9zZXMsIHdlIHJlYWxseSBoYXZlIGFic29sdXRlbHkgbm90aGluZyB0aGF0J3MgcmVtb3RlbHkgbGlrZSB0aGF0IGhlcmUgICBmdXJ0aGVyIGVtcGhhc2lzZXMgYWxsIG9mIHRoZSBoYXJkIHdvcmsgdGhhdCB5b3UndmUgcHV0IGludG8geW91ciB0cmFpbmluZyAgIHNvdW5kcyBsaWtlIHRoZSBvbGUnIGxlZ3MgYXJlIGRvaW4nIHlvdSBwcm91ZCAoc29ycnkgYWJvdXQgeW91ciBhc3MgdGhvdWdoLiB3aG9ldmVyIGNhbiBmaWd1cmUgb3V0IGhvdyB0byBzb2x2ZSB0aGUgc29yZSBhc3MgcHJvYmxlbSB3aWxsIGJlIGEgcmljaCBtYW4uKS4gU291bmRzIGxpa2UgYSBsb25nIGRheSB0b21vcnJvdyAgIGdldCBzb21lIGdvb2Qgc2xlZXAsIGFuZCBjYW4ndCB3YWl0IGZvciB0b21vcnJvdydzIHJlcG9ydCEKQ2xheSBjaGlwcyBhcmUgb24gdGhlIG90aGVyIGhhbmQgYXJlIHF1aXRlIGEgYml0IG1vcmUgdmFsdWFibGUsIGFuZCB1c3VhbGx5IGhhcmQgdG8gZmluZCBhdCBiYXJnYWluIHByaWNlcy4gCkxhc3QgdXBkYXRlZDogMjYgMDIgMjAxOVNvbWUgbWF5IG5vdCBrbm93LCBidXQgQmV0VmljdG9yIGlzIGp1c3QgYSByZWJyYW5kIG9mIHRoZSBwcmV2aW91c2x5IGtub3duIFZpY3RvciBDaGFuZGxlciBicmFuZCwgYSBjb21wYW55IHByZXNlbnQgaW4gdGhlIGxhbmQgYmFzZWQgc3BvcnRzIGJldHRpbmcgYnVzaW5lc3Mgc2luY2UgMTk0Ni4gVGhlIEJldFZpY3RvciBncm91cCBvZiB3ZWIgc2l0ZXMgc2VydmVzIG92ZXIgaGFsZiBhIG1pbGxpb24gY3VzdG9tZXJzIGluIG92ZXIgMTYwIGNvdW50cmllcyB0aHJvdWdob3V0IHRoZSB3b3JsZCwgb3BlcmF0aW5nIG1haW5seSBmb3IgcHVudGVycyBjb21pbmcgZnJvbSB0aGUgVW5pdGVkIEtpbmdkb20sIGJ1dCBhbHNvIEV1cm9wZSwgRmFyIEVhc3QsIGFuZCB0aGUgQ29tbW9ud2VhbHRoLCBwcm92aWRpbmcgc2VydmljZXMgaW4gb3ZlciAxMCBkaWZmZXJlbnQgbGFuZ3VhZ2VzLiBUaGUgYnVzaW5lc3Mgb2YgQmV0VmljdG9yIGJlc2lkZXMgb25saW5lIGJldHRpbmcgaW5jbHVkZXMgZXh0cmVtZWx5IHN1Y2Nlc3NmdWwgY2FzaW5vIGFuZCBwb2tlciBzaXRlcyB0b28uIApBbmQgZGVzcGl0ZSB5b3VyIG9waW5pb24gb24gdGhlIG1hdHRlciwgdGhlIFN0YXRlIGNhbiBpbiBmYWN0IGZvcmNlIGEgd29tYW4gdG8gY2FycnkgdG8gdGVybSwgYW5kIGZvcmNlZnVsbHkgaW5qZWN0IGFueXRoaW5nIGl0IHdhbnRzLiBJbmp1c3RpY2UgYWJvdW5kcy4KU28sIHdoYXQgdGVuZHMgdG8gbWFrZSBnYW1ibGluZyBvbiB0aGUgaW50ZXJuZXQgc28gYXBwZWFsaW5nPyBZZXMsIGl0IGlzIHBvc3NpYmxlIHRvIHBsYXkgYW55IGdhbWUgb2YgdGhlIGNob2ljZSB3aXRoIG5vIHBvc3Nlc3NpbmcgdG8gbGVhdmUgeW91ciBwcmVmZXJyZWQgY2hhaXIuIApXaGVuIGRlY2lkaW5nIHdoaWNoIGlzIHJpZ2h0IGZvciB5b3UsIGl0IGlzIHZpdGFsIHRvIGNvbnNpZGVyIGFsbCBvZiB0aGUgYWJvdmUgbWVudGlvbmVkIGFyZWFzIG9mIGNvbmNlcm4sIHNvIHRoYXQgeW91IG1heSBoYXZlIGEgYmV0dGVyIHVuZGVyc3RhbmRpbmcgb2YgdGhlIGltcGFjdCB0aGF0IHdlaWdodCBoYXMgb24geW91ciBwdXJjaGFzZS4gCjI5MiksIHdobyB3aWxsIHRha2UgcGFydCBpbmEgIk1lZXQgdGhlIFByb3MiIGV2ZW50IEZyaWRheS4uIApDYWxsIHlvdXIgZnJpZW5kcyBpbiBUZWhyYW4gKEkgZGlkKS4gU2VlIHdoYXQgdGhleSB3YW50IG9yIG5lZWQgZnJvbSB5b3UuIAoxOTQwIHRpbGUgbWFrZXIgaWxsdXN0cmF0aW9ucyBvZiBzYW1wbGVzIG9mIHRoZWlyIHdvcmsgYXJlIGFsc28gcXVpdGUgc3Ryb25nLCBhbmQgYXMgeW91IGNhbiBzZWUgYmVhciBzb21lIHNpbWlsYXJpdGllcyB3aXRoIHRoZSBWYW5kZXJwb2VsOk9mZmhhbmQgSSBndWVzcyB5b3UgY291bGQgc2F5IHRoYXQgYW55IG9mIGN1YmlzdC9ibG9jay90aWxlL21vc2FpYyBkZXNpZ25zIGNvdWxkIHJlbWluZCB5b3Ugb2YgVmFuZGVycG9lbCBidXQgbm90IHNvLCBhbmQgaW4gd2F5cyBJIGNhbiBmdWxseSBleHBsYWluLiAKIkR1cmluZyB0aGUgcGFzdCB5ZWFyIHRoZSBlbmVteSBoYXMgc3VmZmVyZWQgZHJlYWRmdWwgY2FzdWFsdGllcyB3aGlsZSBkZXBsb3lpbmcgbGFyZ2UgaGUgc2FpZC4gClRoZSBlYXJseSBwbGF5ZXJzIG5hbWVkIHRoZSBnYW1lIHRlbm5pcyBvbiB0aGUgbGF3biwgb3IgZm9yIHNob3J0LCBsYXduIHRlbm5pcy4uIApUaGUgcmVhc29uIHdlIGRvIG5vdCBmZWVsIHRoaXMgaXMgYmVjYXVzZSBvdXIgYnJhaW4gcmVsZWFzZXMgY2VydGFpbiBjaGVtaWNhbHMgdG8gbWFzayB0aGUgcGFpbi4gVGhlc2UgY2hlbWljYWxzLCBub3RhYmx5IHRoZSBlbmRvcnBoaW5zIGFuZCBzZXJvdG9uaW4sIGFyZSB3aGF0IGFyZSByZXNwb25zaWJsZSBmb3IgdGhlICdydW5uZXIncyBoaWdoJyB3ZSBmZWVsIGFmdGVyIGEgZ29vZCB3b3Jrb3V0LiAKVGhlIFBQUCB3b3VsZCBiZWNvbWUgZXZlbiBtb3JlIGltcG9ydGFudCBpZiB0aGluZ3MgdHVybmVkIG1lc3NpZXIuLiAKSSBkb24gdGhpbmsgdmlld2VycyB1bmRlcnN0YW5kIHRoZSB0aW1lIGNvbW1pdG1lbnQgaW52b2x2ZWQgaW4gYmVpbmcgYSBkcmFnb24uIApQZXRlcnMnIGJyb3RoZXIgYW5kIG1hbmFnZXIgY29uZmlybWVkIHRoZSByZXBvcnQgdG8gVGhlIENhbmFkaWFuIFByZXNzLCBub3RpbmcgdGhlIEJyYW1wdG9uLCBPbnQuIHJhaXNlZCBmdW5ueW1hbiBpcyBpbiBOZXcgWW9yayBmb3IgYSBzZXJpZXMgb2Ygc29sZCBvdXQgc2hvd3Mgb24gTG9uZyBJc2xhbmQgYW5kIGluIE5ldyBKZXJzZXkuCldoZW4gaGUgZm9sZHMsIGhlIHdpbGwgbG9zZSBhbGwgdGhlIGJldHMgaGUgbWFkZSBhbmQgdGhlIGZ1cnRoZXIgYmV0cyBvZiBvdGhlciBwbGF5ZXJzLiBIZSBjYW4gYWxzbyByYWlzZSB3aGljaCBtYWtlcyB0aGUgYmV0IGhpZ2hlci4gVGhlIHJlbWFpbmluZyBwbGF5ZXIgd2lsbCBjb2xsZWN0IHRoZSBwb3QuIApUaGUgZW1haWwgaGFkIHRoZSB0YWlsICJTZW50IGZyb20gbXkgaVBob25lLiIgVGhleSBleGNoYW5nZWQgc2V2ZXJhbCBtb3JlIGVtYWlscyBjb25maXJtaW5nIHRoZSBhY2NvdW50IG51bWJlciBhbmQgc2hlIHdlbnQgYWhlYWQgd2l0aCB0aGUgdHJhbnNmZXIuIApBbmQgV29ybGQgVHJhdmVsCkkga25vdyBtb3N0IHBlb3BsZSB3aG8gdXNlIHByZXNjcmlwdGlvbiBwYWluIG1lZGljYXRpb24gYXJlIG1pc2luZm9ybWVkIG9uIHRoZSByaXNrcyBvciBzaW1wbHkgaWdub3JlIGl0LiBBbmQgbW9zdCBwZW9wbGUgd2hvIHVzZSBwcmVzY3JpcHRpb24gcGFpbiBtZWRpY2F0aW9uIGFyZSBvdmVycHJlc2NyaWJlZCBhbmQgZG9uIGFjdHVhbGx5IG5lZWQgaXQuIEFyZSB0aGVyZSBleGNlcHRpb25zIHRvIHRoaXM/IFllYWguIApCdXQgdGhpcyB3YXMuIApUaGVyZSBhcmUgY2VydGFpbiBtb21lbnRzIHdoZXJlIGhlIG1heSBiZSBzdXNwZWN0ZWQgb2YgY2hlYXRpbmcuIApTbyBJIGRlY2lkZWQgdG8gZHJvcCB0aGUgbGFzdCAkNzAgb24gcmVkLCB3aXRoIHRoZSBzdGlwdWxhdGlvbiBvZjsgaWYgSSBsb3NlLCBJIHN0b3AuIApXaGVuIGdldHRpbmcgaW50byB0aGUgYmVhdXR5IGluc3RpdHV0ZSBwcmVtaXNlcywgeW91IG5lZWQgdG8gcmVhbGx5IGZlZWwgY2FsbSBhbmQgcmVsYXhlZC4gCk92ZXIgaGVpZ2h0IHNvbGlkIGNvcmUgZG9vcnMgYXJlIHNldmVuIGZlZXQgaGlnaCBmb3IgYWRkZWQgc291bmQgcHJvb2ZpbmcuIFdpbmRvd3Mgd2lsbCBhbGwgYmUgdHJpcGxlIGdsYXplZCBmb3IgYWRkaXRpb25hbCBhY291c3RpYyBwcm90ZWN0aW9uLiAKV29yZSByZWQsIG9yIGplYW5zIGFuZCB0ZWUgc2hpcnRzLiAKVHJlYXRtZW50cyBhcmUgY3VzdG9taXplZCB0byBlYWNoIGNsaWVudCdzIG5lZWQsIHdoZXRoZXIgaXQncyBzbW9vdGhpbmcgb3V0IGZvcmVoZWFkIHdyaW5rbGVzIG9yIG5hc29sYWJpYWwgZm9sZHMuIEF1dGggc2F5cyB0aGUgbW9zdCBjb21tb24gcHJvYmxlbSBpcyB0aGUgY3JvdydzIGZlZXQgdGhhdCBjb21lIGZyb20gdGlnaHRlbmluZyB5b3VyIGV5ZSBtdXNjbGVzIHdoaWxlIHBlZXJpbmcgaW50byBhIHNjcmVlbi4gCihTaGUgZ3JldyB1cCBpbiB0aGUgTHV0aGVyYW4gQ2h1cmNoIE1pc3NvdXJpIFN5bm9kIGJ1dCBsZWZ0IGxvbmcgYWdvIGFmdGVyIGhlciBTdW5kYXkgU2Nob29sIHRlYWNoZXIgc2FpZCBoZXIgSmV3aXNoIGZhdGhlciB3b3VsZCBnbyB0byBoZWxsLikgV2hhdCB3ZSB0ZWFjaCBhbmQgcHJvY2xhaW0gbWF0dGVycy4gCkNhc2UgaW4gcG9pbnQ6IEdsZW4gQmVjay4KUmVhZCBtb3JlQW5hbCBTZXggZnJvbSBhIEZlbWFsZSBQZXJzcGVjdGl2ZS4gClRoZW4gSSAoYW5kIHRoZSBsYWIgdGVjaCkgc2lnbmVkIGEgc3RpY2tlciB0aGF0IGlzIHBsYWNlZCBvbiB0aGUgY3VwIGFuZCB0aGV5IHNlbnQgaXQgdG8gc29tZSBsYWIgKG91dCBvZiBzdGF0ZSBpbiBteSBjYXNlKSBhbmQgdGhlIHJlc3VsdHMgd2VyZSBlbWFpbGVkIGJhY2sgd2l0aGluIDQ4IDcyaHJzLiBJIHVzZWQgU1RBVCEgUm95YWwgRmx1c2ggYm90aCB0aW1lcyBhbmQgaXQgc2VlbWVkIHRvIHdvcmsgZ3JlYXQgZm9yIG1lLiAKSXMgdGhlaXIgYXNraW5nIHByaWNlIGluIGxpbmUgd2l0aCB3aGVyZSB5b3UgbGlrZWx5IG5lZWQgdG8gYnV5IGl0PyBUaGUgdmFzdCBtYWpvcml0eSBvZiB0aGUgdGltZSBpdCB3aWxsIE5PVCBiZS4gU28gZG9uJ3Qgd29ycnkgYWJvdXQgaXQuIFRoZSBhc2tpbmcgcHJpY2UgaXMganVzdCB0aGUgcHJpY2UgdGhleSBhcmUgaG9waW5nIHRvIGdldCBmb3IgaXQuIApFbmpveSB5b3VyIHRyaXAuIFBlb3BsZSBhcmUgYXdlc29tZSBhbmQgdGVycmlibGUgZXZlcnl3aGVyZS4KTWl0IEZyZXVkZW4gaGF0IHNpY2ggZGFzIFJlaXRobWF5ZXIgVGVhbSBhdWYgZGllIFJlaXNlIHp1bSBCT0RBTiBQYXJ0bmVyZm9ydW0gYW4gZGVuIEJvZGVuc2VlIGJlZ2ViZW4gZWluZSBWZXJhbnN0YWx0dW5nIG9yZ2FuaXNpZXJ0IHZvbiBCaW9vYXNlIGVpbm1hbGlnZW0gVmVydGVpbGVyZGllbnN0Qk9EQU4gR3JvaGFuZGVsIGZyIE5hdHVya29zdCBHbWJILCBiZWkgZGVtIDEwMCBCaW8gTGFkbmVyLCBCaW9iYXVlcm4gdW5kIFZlcnRyZXRlciBkZXMgR3Jvc3NoYW5kZWxzIHp1c2FtbWVuZ2VmaHJ0IHd1cmRlbiBtaXQgZGVtIFppZWwsIGRpZSBBcmJlaXQgZGVzIFBhcnRuZXJzIGhhdXRuYWgga2VubmVuenVsZXJuZW4uIApEZSBjb21tdW5pc3Rpc2NoZSB3b29uYmxva2tlbiB2aWVsZW4gbWV0ZWVuIG9wICh0eXBpc2NoIHZvb3IgZGV6ZSBrYW50IHZhbiBFdXJvcGEpLiBWaWEgZGUgVUZPIGJydWcgb3ZlciBkZSBEb25hdSByZWRlbiB3ZSBCcmF0aXNsYXZhIGJpbm5lbiwgamUgcGFzc2VlcnQgaGllciBvb2sgZWVuIHN0dWsgdmFuIGRlIG91ZGUgdmVzdGlnaW5nc211cmVuLCBlbiB6byB2b25kZW4gYWwgc25lbCBvbnMgaG90ZWwgQmVzdCBXZXN0ZXJuIEFudGFyZXMgaW4gZWVuIGtsZWluIHN0cmFhdGplIGhldXZlbCBvcC4gCkxlIGNhYmluZXQgZGUgQ29sb21iZSBCcm9zc2VsIG5vdXMgYSBjb21tdW5pcXUgbGUgY291cnJpZXIgYWRyZXNzIGxlIDUgZnZyaWVyIGRlcm5pZXIgcGFyIGNldHRlIGRlcm5pcmUgIFBhdWwgZGUgTGV1c3NlLCBxdWkgc2UgcHJzZW50ZSBzdXIgbGVzIHJzZWF1eCBzb2NpYXV4IGNvbW1lICJEZXB1dHkgQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXIgZm9yIEZpbmFuY2lhbCBTZXJ2aWNlcyBEaWdpdGFsIEJhbmtpbmcgTW9iaWxlIEJhbmtpbmciLiBVbmUgbGV0dHJlIGRvbnQgdm91cyBwb3V2ZXogdHJvdXZlciB1bmUgY29waWUgY2kgZGVzc291cy4uIApEaWUgamV3ZWlsaWdlIFF1ZWxsZSBhbmdlZ2ViZW4uIApTbyB3ZSBjYW4gcHJvYmFibHkgc2VlIGEgcmV0dXJuIG9mIHB1YiB0b3VybmFtZW50cyBhbmQgdGhlIGxpa2UuIApXaXRob3V0IGdpdmluZyB0b28gbWFueSBvZiB0aGUgZGV0YWlscyBhd2F5LCBzdWZmaWNlIGl0IHRvIHNheSBCbGVzc2luZ3Mgd2FzIHRoZSBwZXJmZWN0IHJldHJlYXQgZm9yIGEgeW91bmcgZ2lybCBpbiB0cm91YmxlLiAKQW5kLCB5b3Uga25vdywgaWYgd2UgICBpZiB3ZSBhcyBhIG5hdGlvbiBkaWQgbm90IGdpdmUgaGltIGFuIG9wcG9ydHVuaXR5IGFmdGVyIHRoZXkgbWFkZSBtaXN0YWtlcyB0byBjaGFuZ2UgdGhlaXIgbGl2ZXMsIGEgd2hvbGUgbG90IG9mIHBlb3BsZSB3b3VsZCBub3QgZG8gdmVyeSB3ZWxsLiBJIGRvbiBrbm93IHdoZXJlIHlvdSBnbyBmcm9tIGhlcmUuIApBY3RpdmUgUmVsZWFzZSBUZWNobmlxdWUgQVJUClBvc3RlZCBieSBtcncgYXQgOTowNCBBTSBvbiBNYXkgMjMsIDIwMDgKVGhleSBwdXQgbWUgb24gYW4gSVYsIHNlbnQgbWUgaG9tZSB3aXRoIGFudGliaW90aWNzIGFuZCA1IG90aGVycyBtZWRpY2F0aW9ucy4gCldlbm4gZXMgZGlyIHNvIFNjaGVpZSBnZWh0IGRhc3MgZHUgdW0gSGlsZmUgZnJhZ3N0LCBzb2xsdGVzdCBkdSBkaWVzZSBIaWxmZSBhdWNoIGFubmVobWVuLCBzb25zdCB3aXJkcyBqYSBuaWNodCBiZXNzZXIuIERhcyBnaWx0IGZyIGRpZSBUYWJsZXR0ZW4gZGllIGR1IGR1cmNoZ25naWcgbmVobWVuIHNvbGx0ZXN0IHdpZSBhdWNoIGZyIGRpZSBUYWdlc2tsaW5paywgZnIgZGVyZW4gVGVybWluZSBtYW4gc2ljaCBaZWl0IGZyZWkgbWFjaGVuIHNvbGx0ZSwgZGVubiBnZXN1bmQgd2VyZGVuIGlzdCBqYSBlaWdlbnRsaWNoIFByaW9ydHQuIApObyBxdWVzdGlvbi4gCkIpIFRoZSBmYWN0IGl0IHdhcyBhbm90aGVyIGd1eSBhbmQgb25lIHNoZSBqdXN0IG1ldCBhdCB0aGUgZ3ltIGlzIHdvcnNlIHRoZW4gaWYgaXQgd2FzIGEgZmFtaWx5IG1lbWJlci4gYmVjYXVzZSBhdCBsZWFzdCB3aXRoIGZhbWlseSBtZW1iZXJzIHlvdSBjYW4gZXhjdXNlIHRoYXQgcGVyaGFwcyB0aGUgbWVzc2FnZSB3YXMgZXh0cmVtZWx5IGltcG9ydGFudCB0byBoZXIuIGJ1dCBzb21lIHJhbmRvbSBndXksIG5vdGhpbmcgc2hvdWxkIGJlIGltcG9ydGFudC4KSSBiZSBpbnRlcmVzdGVkIGluIHlvdXIgdGhvdWdodHMgb24gd2hhdCB5b3UgcmVhZCwgYXMgSSBrZWVuIHRvIHJlYWQgbW9yZSBlbnZpcm9ubWVudGFsIGJvb2tzIFtvZiBxdWFsaXR5XS4gCkFuZCB0aGV5IGJlIGx1Y2t5IHRvIGZpbmQgYSBqb2Igd2lsbGluZyB0byBoaXJlIHRoZW0gZHVlIHRvIHRoZWlyIGhpc3Rvcnkgb2YgaW5jYXJjZXJhdGlvbi4gV2hpY2ggaXMgYW5vdGhlciBwcm9ibGVtIGNyZWF0ZWQgYnkgdGhlIGRlbW9uaXphdGlvbiBvZiBjcmltaW5hbHMgaW4gc29jaWV0eSwgcmVnYXJkbGVzcyBvZiB0aGVpciBjcmltZXMuIEl0IGRvZXNudCBtYXR0ZXIgaWYgdGhleSBtdXJkZXJlZCBzb21lb25lIG9yIGlmIHRoZXkgaGFwcGVuZWQgdG8gaGF2ZSB3ZWVkIG9uIHRoZW0gYXQgdGhlIHdyb25nIHRpbWUuIApIZSBwYXJ0aWNpcGF0ZWQgaW4gdGhlIFR1ZXNkYXkgYW5kIFRodXJzZGF5IE1vcm5pbmcgU2VuaW9yIEdvbGYgZ3JvdXAgYW5kIHdhcyBhIG1lbWJlciBvZiB0aGUgUG9vciBNYW4ncyBQaW5laHVyc3QgR29sZiBHcm91cC4gSGUgcmVjZW50bHkgdHJhdmVsZWQgd2l0aCBzb21lIG9mIGhpcyBjbG9zZSBmcmllbmRzIGFuZCBmZWxsb3cgQVQgd29ya2VycyB0byBwbGF5IHRoZSBsaW5rcyBpbiBJcmVsYW5kLiAKSSBmaW5kIHRoYXQgaWYgaXQgaXMgc29tZXRoaW5nIHRoYXQgSSBjYW4gcHJlcGFyZSBmb3IgSSB3aWxsIGRvIGFzIG11Y2ggcmVzZWFyY2ggYWJvdXQgaXQgYXMgcG9zc2libGUuIExpa2UgaW4geW91ciBzaXR1YXRpb24gSSB3b3VsZCBkbyBhIGxvdCBvZiByZXNlYXJjaCwgR29vZ2xpbmcsIGFuZCBhdHRlbXB0IHRvIG5ldHdvcmsgd2l0aCBvdGhlciBwZWVycyB3aG8gYXJlIGRvaW5nIHRoZSBzYW1lIHRoaW5nIGFzIHlvdSBvciBzb21ldGhpbmcgc2ltaWxhciBhcyB5b3UgdG8gc2VlIGlmIHRoZXJlIGFyZSBhbnkgc3RyYXRlZ2llcyBvciB0ZWNobmlxdWVzIHRoYXQgeW91IGNvdWxkIGFkb3B0IGluIG9yZGVyIHRvIG1ha2UgaXQgZWFzaWVyIHRvIGRvIHlvdXIgam9iLiBUaGUgd29yc3QgcGFydCBhYm91dCBkb2luZyBhIGpvYiB5b3UgYXJlIG5vdCBmYW1pbGlhciB3aXRoIG9yIHVzZWQgdG8gZG9pbmcgaXMgdG8gZ2V0IGFzIG11Y2ggZWR1Y2F0aW9uIGFib3V0IGl0IGFzIHBvc3NpYmxlIHNvIHRoYXQgd2F5IHRoZXJlIGlzIGxlc3MgdW5rbm93biBpbnZvbHZlZC4uIApBIGxvY2FsLCB3ZSB0YWxrIGFtb25nc3Qgb3Vyc2VsdmVzIGFib3V0IHdoYXQgaGFwcGVuZWQgdG8gQnJvb2tlLiBUaGVyZSBpcyBsaXR0bGUgcXVlc3Rpb24gYXMgdG8gd2hvIG1pZ2h0IGJlIHJlc3BvbnNpYmxlLiBUaGUgcXVlc3Rpb24gaXMganVzdCB3aGVuIHRoZXJlIHdpbGwgYmUgc29tZSBqdXN0aWNlLgpSZWQgV2luZ3MgSG9ub3IgVGVkIExpbmRzYXksIFdpbiBJbiBTaG9vdG91dEF0aGFuYXNpb3Ugc2NvcmVkIGluIHRoZSB0aGlyZCBwZXJpb2QgYW5kIGhhZCB0aGUgb25seSBnb2FsIGluIGEgc2hvb3RvdXQgLCBsaWZ0aW5nIHRoZSBEZXRyb2l0IFJlZCBXaW5ncyBvdmVyIHRoZSBzY3VmZmxpbmcgTmV3IFlvcmsgUmFuZ2VycyAzIDIgb24gVGh1cnNkYXkgbmlnaHQgdG8gc25hcCBhbiBlaWdodCBnYW1lIGxvc2luZyBzdHJlYWsuIFRvIEJlYXQgV2luZ3NOYXRoYW4gTWFjS2lubm9uIHdpcGVkIGF3YXkgYSBzZWFzb24gd29ydGggb2Ygb3ZlcnRpbWUgZnJ1c3RyYXRpb24gd2l0aCBhIGdvYWwgdGhhdCB3YXMgY3JpdGljYWwgdG8gQ29sb3JhZG8gcGxheW9mZiBwdXNoLgpJIHdpbGwgYmUgc2V0dGluZyB1cCByZWd1bGFybHkgYXQgdGhlIFN1bnJpc2UgdHJhaWxoZWFkLCBqdXN0IG91dHNpZGUgb2YgdGhlIExhZ3VuYSBBdCBtaWxlIDYwIHdlIGZvdW5kIHF1aXRlIGEgZmV3IGZvbGtzIHdobyBhcmVuIGRvaW5nIHF1aXRlIGFzIHdlbGwgYXMgdGhleSBoYWQgaG9wZWQgYW5kIG5lZWQgaGVscC4gCkJ1dCB0aGVuIEkgbG9va2VkIGF0IHRoZWlyIHdlYnNpdGUuIEkgbWVhbiwgSSByZWFsbHkgbG9va2VkIGF0IGl0LiBJdCB3YXMgZ29vZCBtb25leSBhbmQgZ29vZCBmb3IgdGhlIHJlc3VtZSwgYnV0IEkgY291bGRuIGJyaW5nIG15c2VsZiB0byBkbyB0aGF0IGZvciBhIGxpdmluZy4gCk9uIG9uZSBoYW5kIEkgbG92ZSB0byBzZWUgdGhlIGNvbnRpbnVhdGlvbiBvZiBKYWNrIChhbmQgaG9wZWZ1bGx5IEJUIDopKSBzdG9yeSwgYnV0IEkgYWxzbyB3b3VsZCBtaW5kIHNlZWluZyBhIHN0b3J5IHRvbGQgZnJvbSB0aGUgcGVyc3BlY3RpdmUgb2YgYW4gSU1DIHBpbG90LCBhIGxhIFN0YXIgV2FyczogVElFIEZpZ2h0ZXIuIEkgdGhpbmsgc29tZXRoaW5nIGxpa2UgdGhhdCBjb3VsZCBoZWxwIGZsZXNoIG91dCB0aGUgSU1DIGFzIGEgZmFjdGlvbiwgc2luY2UgYXMgb2YgcmlnaHQgbm93IHRoZXkga2luZGEgZ2VuZXJpYy4gCkkgYW0gbm90IDEwMCUgaG93IHRoZSBwcm9jZXNzIHdvcmtzLCBidXQgdGhleSB0ZW5kIHRvIG5vdCBoYXZlIHRoZSBzYW1lIHByb2Nlc3Mgb2YgYmVjb21pbmcgbGljZW5zZWQvc2VlaW5nIGNsaWVudHMuIFRoZXkgYWxzbyB0ZW5kIHRvIGVuZ2FnZSBpbiBzZXh1YWwgZmF2b3JzIGZvciBtb25leS4gCk9uZSBhbHRlcm5hdGl2ZSBzeXN0ZW0sIExpcXVpZG5ldCwgd2FzIGxhdW5jaGVkIGluIDIwMDIgdG8gc2VydmUgY2xpZW50cyBzdWNoIGFzIHBlbnNpb25zIGFuZCBtdXR1YWwgZnVuZHMuIEl0IGxpbWl0cyB0cmFkaW5nIHRvIGEgZ3JvdXAgb2YgYXBwcm92ZWQgcGFydGljaXBhbnRzIGFuZCBiYXJzIGRlYWxlcnMgd2hvIGNvdWxkIGxlYWsgc2VjcmV0cy4gCkJDIGhhcyBnb3QgYW1hemluZyB3aW5lLiBNeSB3aW5lIHRhc3RlIGlzIHRoZSBleGFjdCBvcHBvc2l0ZSBvZiB5b3VycyAgIEkgbGlrZSBzaGFycCBhY2lkaWMgU2F1dmlnbm9uIEJsYW5jIGFuZCByaWNoIE1hbGJlY3MgYW5kIGNhYiBzYXZzIHRoYXQgYXJlIGhlYXZ5IG9uIHRoZSB0YW5uaW5zLiBCdXQgdGhlcmUgaXMgc29tZXRoaW5nIGZvciBldmVyeW9uZSBpbiBCQy4gCk9uZSB0aGluZyBJIGFtIHN1cGVyIGdyYXRlZnVsIGZvciBhdCBteSBtZWQgc2Nob29sIGlzIHRoYXQgYXQgbGVhc3QgYXMgbWVkIHN0dWRlbnRzIHdlIGFyZSByZWxhdGl2ZWx5IFZFUlkgd2VsbCBwcm90ZWN0ZWQuIExpa2UsIGFueSByZXNpZGVudHMgb3IgYXR0ZW5kaW5ncyB0aGF0IGVuZCB1cCB3aXRoIGEgcmVjb3JkIG9mIG51bWVyb3VzIGNvbXBsYWludHMgZ2V0IGEgcHJldHR5IHN0ZXJuIHRhbGtpbmcgdG8gKGFuZCB5b3VyIHBheSArIHJpc2UgdXAgdGhlIGhpZXJhcmNoeSBpcyBhZmZlY3RlZCBieSBtZWQgc3R1ZGVudCBhbmQgcmVzaWRlbnQgZXZhbHMpLiBPbmUgb2YgdGhlIHN1cmdpY2FsIHJlc2lkZW50cyBoZXJlIGFwcGFyZW50bHkgaGFzIGEgaG9ycmVuZG91cyB0cmFjayByZWNvcmQgZm9yIHRyZWF0aW5nIHRob3NlICJiZWxvdyIgaGVyIHJhbmsgYW5kIHRoZSBnb3NzaXAgc2F5cyBvdXIgaG9tZSBpbnN0aXR1dGlvbiBpc24ndCBnb2luZyB0byBtYXRjaCBoZXIgZm9yIGZlbGxvd3NoaXAgaGVyZS4gCkFuZCBBbGkncyBwZXJmb3JtYW5jZSBpc24ndCB0aGF0IFdPVyB0aGF0IGhlIGRlc2VydmVkIHRvIHdpbiBldmVyeSBhd2FyZCB0aGlzIHNlYXNvbi4gV291bGQgaGF2ZSBiZWVuIGJldHRlciBpZiBhIGZldyBoYWQgd29uIGRpZmZlcmVudCBhd2FyZHMuCllvdSBrbm93LCBvdmVyIHRoZSB5ZWFycyB3aGVuIHRoaXMgaGFzIHBvcHBlZCB0byBtaW5kIEkgdGhvdWdodCBhYm91dCB3aHkgSSBkaWRuIGNhbGwgdGhlIHBvbGljZS4gQW5kIEkgd291bGQgbGlrZSB0byBiZWxpZXZlIHRoYXQgaXQgYmVjYXVzZSBJIGRpZG4ga25vdyB3aGVyZSB0aGUgbmVhcmVzdCBwb2xpY2Ugc3RhdGlvbiB3YXMgYW5kIEkgZGlkbiB3YW50IGhpbSB0byBmZWVsIHRocmVhdGVuZWQgYW5kIGdldCBhbmdyeS4gClRoYXQgZG9lc24gZml4IHRoZSBwcm9ibGVtcyB0aG91Z2guIFRyeWluZyB0byBnZXQgaGltIGVucm9sbGVkIGluIGEgbmV3IHNjaG9vbCB3aXRob3V0ICJNb21zIHNpZ25hdHVyZSIgd2FzIGEgZnVja2luZyBuaWdodG1hcmUuICJXZSBuZWVkIG1vbSB0byBzaWduIHRoaXMuIiBUaGVyZSBpcyBubyBtb20uIApIb3dldmVyLCBzZXR0aW5nIHRoZSBuZXdzIGZlZWQgdG8gIm5ldyIgcG9zdHMgdGFrZXMgY2FyZSBvZiB0aGF0IGlzc3VlIGVhc2lseSBlbm91Z2guIEl0IHdvdWxkbiBzdXJwcmlzZSBtZSBhdCBhbGwgaWYgc29tZW9uZSB3aG8gZmVlbHMgdGhhdCB3YXkgaXMgdmVudGluZyBieSBnb2luZyBvbiBhIGRvd24gdm90aW5nIGJpbmdlLkhvbmV5b2F0bWVhbDEwMSAgMTggcG9pbnRzICBzdWJtaXR0ZWQgMjcgZGF5cyBhZ29JIGp1c3QgZmVlbCByZWFsbHkgc3Ryb25nbHkgYWJvdXQgbXkgY2hpbGQgbm90IGJlaW5nIGFibGUgdG8gZWF0IGFuZCB0aGVuIHdoZW4gdHJ5aW5nIHRvIGVhdCBhdCBhIGxhdGVyIHRpbWUgYmVpbmcgcHVuaXNoZWQuIApMb3Vpcy4gV2hpbGUgcHJhY3RpY2luZyBzdXJnZXJ5LCBoZSBwdXJzdWVkIGFuIE1CQSB3aXRoIHRoZSBnb2FsIHRvIGxlYXJuIG1vcmUgYWJvdXQgaGVhbHRoIGNhcmUgbWFuYWdlbWVudCBzbyB0aGF0IGhlIHdvdWxkIGJlIGFibGUgdG8gdGFrZSBvbiBmdXR1cmUgbGVhZGVyc2hpcCBwb3NpdGlvbnMgYXQgdGhlIG1lZGljYWwgc2Nob29sLkhvd2V2ZXIsIENhcmxpbiB3YXMgc28gc3RpbXVsYXRlZCBieSB0aGUgZmllbGRzIG9mIGZpbmFuY2UgYW5kIGVjb25vbWljcyB0aGF0IGhlIGZlbHQgaGUgaGFkIG1pc3NlZCBoaXMgY2FsbGluZyBhbmQgZGVjaWRlZCB0byBwdXJzdWUgYW4gYWNhZGVtaWMgY2FyZWVyIGluIGZpbmFuY2UuIApKb24gV2VydGhlaW06IFRocmVlIG1pbnV0ZXMgYW5kIHlvdSBmb3VuZCB0aGUgbG9vcGhvbGUgaW4gdGhlIHN0YXRlIGxvdHRlcnk/SmVycnkgU2VsYmVlOiBUaHJlZSBtaW51dGVzLiBJIGZvdW5kICBJIGZvdW5kIGEgc3BlY2lhbCBmZWF0dXJlLiAKSXQgcmVhbGx5IGFsbW9zdCByaXZhbHMgdGhlIFRydW1wIGNyaW1lIGZhbWlseSBob25lc3RseS4gClNoZSBzdGFydGVkIGFuIGFyZ3VtZW50IHdpdGggYSBtdWNoIHlvdW5nZXIgZ2lybCBzYXlpbmcgdGhhdCB0aGUgeW91bmdlciBnaXJsIGtlcHQgYnVtcGluZyBhZ2FpbnN0IGhlciBhcm0uIApTbyBJIHBheSBmb3IgaW50ZXJuZXQgb25seS4gSW5zdGVhZCBvZiB0aGUgc3VwcG9zZWQgNjAgbWJwcyBkb3duIHNwZWVkIEkgc2hvdWxkIGJlIGdldHRpbmcsIEkgZ2V0IGp1c3QgYSBsaXR0bGUgbGVzcyB0aGFuIDMwIGluIG5vcm1hbCBjaXJjdW1zdGFuY2VzLiAKSSBnb3QgaXQgbWFpbmx5IGZvciBwdWxzZSBhbmQgc2xlZXAgaXNzdWVzLiAKVGhlIHNlYXJjaCB3YXMgbm90IHJlc3RyaWN0ZWQgYnkgbGFuZ3VhZ2UgYW5kIGluY2x1ZGVkIGEgc2VhcmNoIGZvciB1bnB1Ymxpc2hlZCBtYXRlcmlhbC4gCkJsYWtlIHB1dCBoaXMgYXJtIGFyb3VuZCBTYW50b3JvIGFuZCB0b2xkIGhpbSwgcGxheWVkIHNvIGhhcmQuIERhdmlzIEN1cCB0ZWFtbWF0ZSBhbmQgcG9rZXIgcGFsLCBOby4gNSBBbmR5IFJvZGRpY2ssIGFkdmFuY2VkIGVhcmxpZXIgVGh1cnNkYXkgd2hlbiBoaXMgb3Bwb25lbnQgcXVpdCB3aXRoIGEga25lZSBpbmp1cnksIGFuZCBkZWZlbmRpbmcgd29tZW4gY2hhbXBpb24gTWFyaWEgU2hhcmFwb3ZhIHdvbiBpbiA1MSBtaW51dGVzLgpGcm9tIHdoZXJlIHlvdSB3ZXJlIG9uIHRoZSByb2FkLCBJIGRvbnQgdGhpbmsgeW91IGNvdWxkIHNlZSB0aGF0IHR1cm5pbmcgbGFuZS4gQW5kIHRoZSBjcnVpc2VyIGRpZCBtb3ZlIG92ZXIgbGVmdCBpbiBoaXMgbGFuZSBhIGJpdCB0byBjbGVhciB0aGUgYXJzZSBlbmQgb2YgYW5vdGhlciBjYXIgdGhlcmUsIGhlIGNvdWxkIGhhdmUgbW92ZWQgZnVydGhlciwgaGUgY291bGQgaGF2ZSBkZWNpZGVkIGhlIG5lZWRlZCB0byBjaGFuZ2UgbGFuZXMuLiAKQXQgdGhpcyBwb2ludCB5b3UganVzdCBwbGF5IG9mZiBvZiB0aGUgcm9jayB0ZWxscy4gWW91IGdvdCB0byByZW1lbWJlciB0aGF0IHRpZ2h0IHBva2VyIHBsYXllcnMgYXJlIHVzdWFsbHkgdGlnaHQgYmVjYXVzZSB0aGV5IGRvbiBsaWtlIGxvc2luZyBtb25leSBhbmQgdGhleSBsaWtlIHBva2VyIHRvIGJlIGEgbWVjaGFuaWNhbCBncmluZCBzbG93bHkgaW5jcmVhc2luZyB0aGVpciBiYW5rcm9sbC4gVGhyb3cgdGhlbSBvZmYgb25lIG9yIHR3byBoYW5kcyBhbmQgYSByb2NrIHR1cm5zIGludG8gc29tZXRoaW5nIHRoZWlyIG5vdCBhIGxvb3NlIG9yIGp1c3QgZnJ1c3RyYXRlZCBwb2tlciBwbGF5ZXIgb25lIHRoYXQgeW91IGNhbiB0YWtlIGFkdmFudGFnZSBvZiB0aGUgcmVzdCBvZiB0aGUgc2Vzc2lvbi4uIApJZiB5b3UgcmVhY3QgbmVnYXRpdmVseSBhbmQgYmVjb21lIHRpbHRlZCB5b3VyIGdhbWUgYW5kIGZvY3VzIGRyb3BzLiBXaGVuIHlvdSByZWFjdCBlbW90aW9uYWxseSB5b3VyIGJyYWluIHN0b3BzIHVzaW5nIHRoZSBMT0dJQyBwYXJ0IG9mIHlvdXIgYnJhaW4gc28geW91IGJsb2NrIG91dCB0aGUgdG9vbHMgeW91IHVzZSB0byBwbGF5IHlvdXIgYmVzdC4gCk91ciBldmVudCBvcmdhbml6ZXJzIGhhZCBhIHdlYnNpdGUgYW5kIHNvY2lhbCBtZWRpYSBjYW1wYWlnbiBnb2luZywgc28gdGhleSB3ZXJlIGRvaW5nIGFsbCBzb3J0cyBvZiB0aGluZ3MgdG8gbWFya2V0IHRoZSBldmVudCBvbmxpbmUgd2hpbGUgaXQgd2FzIGdvaW5nIG9uIGFuZCB1cmdlZCBwZW9wbGUgdG8gdmlzaXQgdGhlIHdlYnNpdGUgdG8gZG9uYXRlLiBXZSBoYWQgc2V2ZXJhbCBjYW1lcmFzIHNldCB1cCB0aGF0IHdlcmUgbGl2ZXN0cmVhbWluZyBpdCB0b28uIApXYWxraW5nIGd1aWRlcyBoYXZlIGJlZW4gYXZhaWxhYmxlIGZyb20gdGhlIGV2ZW50J3Mgd2Vic2l0ZSBhbmQgaW4gMjAxOCAod2hlbiB0aGUgZXZlbnQgd2FzIGtub3duIGFzIHRoZSBDbGFzc2ljIEJ1c2VzLCBCZWVyIGFuZCBXYWxrcyBXZWVrZW5kKSBhIHZhcmlldHkgb2YgZGlmZmVyZW50IHdhbGsgZ3VpZGVzIHdlcmUgYXZhaWxhYmxlIHRvIGNvbGxlY3QuIApXZSByZWFwIHRoZSBiZW5lZml0cyBvZiBpdCBoZXJlLCBhbmQgd2UgaGF2ZSBubyBoaXN0b3J5IG9mIGl0LiBCdXQgaXQgbm90IGxpa2Ugd2UgZG9uIGhhdmUgdGhhdCBoaXN0b3J5IGluIHRoZSBtb3RoZXJsYW5kLiAKRGVzamFyZGlucyBzYWlkLi4gCk1vcmUgdGhhbiB0aGUgaW50cm92ZXJ0L2V4dHJvdmVydCBkaXN0aW5jdGlvbiwgeW91IHNob3VsZCBjb25zaWRlciB3aGV0aGVyIHlvdSBjYW4gZGVhbCB3aXRoIHJlZ3VsYXIsIGhpZ2ggcHJlc3N1cmUgc2l0dWF0aW9ucy4gRXZlcnkgcXVhcnRlciB5b3UgY29tZSB0byBhIGRlYWRsaW5lIHRoYXQgeW91IGVpdGhlciBtZXQgb3Igbm90LiBJZiB5b3UgaGF2ZSwgbm8gb25lIGlzIGdvaW5nIHRvIHRoYW5rIHlvdSBtdWNoLCBidXQgeW91IG1pZ2h0IGdldCBwYWlkIHdlbGwuIApzdG9yZSBjbG9zdXJlIGlzIGEgYmFkIHNpZ24gZm9yIE5ZQyByZXRhaWwgc2NlbmUKT3IgZG9uIGFuZCBkZWFsIHdpdGggaXQuIAoobXkgY2hhcmFjdGVyKSBBbGx5LCB0aGVyZSBhIHN1Z2dlc3Rpb24gb2YgaXQgYXMgd2VsbCwgd2hlbiBzaGUgd2Fsa3MgdXAgdGhlIHN0YWlycyBhbmQgc2F5cyB0byBoZXIgZmF0aGVyLCBrbm93IGFsbCBhYm91dCBkcnVncyBzaGUgc2hhcmVkLiAKVGhlcmUgaXMgd2lzZG9tIGluIGhhdmluZyBhbiBhZ2UgZ2FwIGJldHdlZW4gc3BvdXNlcy4gRm9yIHdvbWVuLCBhZ2UgaXMgKHVuZm9ydHVuYXRlbHkpIGEgZGViaXQsIGRlY3JlYXNpbmcgZmVydGlsaXR5LiBGb3IgbWVuLCBhZ2UgY2FuIGJlIGEgY3JlZGl0LCBpbmNyZWFzaW5nIHRoZWlyIGFjY2VzcyB0byByZXNvdXJjZXMgYW5kIGltcHJvdmluZyB0aGVpciBtYXR1cml0eSwgdGh1cyBtYWtpbmcgdGhlbSBtb3JlIGF0dHJhY3RpdmUgdG8gd29tZW4uIApFZGl0OkZvcmQgaXMgYWxzbyBhbHJlYWR5IGdvaW5nIHRvIHRoZSBjb3VydHMuIHdoZXJlYXMgVHJ1ZGVhdSBpcyBzdGlsbCBleGNsdXNpdmVseSBpbiB0aGUgcG9saXRpY2FsIHJlYWxtLiA2MyBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ28KVGhlIHBvbGljZSB0b2xkIGRuYSB0aGF0IHRoZXkgd29uIHRhcmdldCBmYW1pbGllcyBkdXJpbmcgdGhlIGZlc3RpdmFsLiBpcyBkaWZmaWN1bHQgdG8gZ2V0IGhvbGQgb2YgcGVvcGxlIHdobyBwbGF5IGNhcmRzIG9yIGRvIGdhbWJsaW5nIGF0IGhvbWUgd2l0aCBvbmx5IGZhbWlseSBtZW1iZXJzLiBIb3dldmVyLCB3ZSB3aWxsIGNlcnRhaW5seSBrZWVwIGEgdGFiIG9uIHNvY2lhbCBjbHVicyBhbmQgZ2FtYmxpbmcgZGVucyBkdXJpbmcgRGl3YWxpIGFuZCB3aWxsIGNhcnJ5IG91dCBhIGRyaXZlIGFnYWluc3QgdGhlbSwgc2FpZCBzZW5pb3IgcG9saWNlIGluc3BlY3RvciBTaGlyaXNoIFNhd2FudCwgd2hvIGlzIGluIGNoYXJnZSBvZiB0aGUgc29jaWFsIHNlcnZpY2UgYnJhbmNoIG9mIHRoZSBNdW1iYWkgY3JpbWUgYnJhbmNoLgpBZnRlciBhcm91bmQgYSB5ZWFyIG9mIGJyZWFrZXZlbiByYWtlYmFjayBncmluZGluZywgdGhpcyBpcyB3aGF0IHByb3BlbGxlZCBtZSBpbnRvIGhpZ2ggc3Rha2VzIGluIGxhdGUgMjAwOS4uIAogNiBwb2ludHMgIHN1Ym1pdHRlZCAzIGRheXMgYWdvVGhlcmUgaXMgcHJlY2VkZW50IGZvciBjaGlsZHJlbiBvZiBhIFRhcmcgYW5kIG5vbiBUYXJnIHVuaW9uIGhhdmluZyBhIG1peCBvZiB0cmFpdHMuIApUeXBpc2NoIHNpbmQgaGllciB6dW0gQmVpc3BpZWwgZGFzIEdsZWljaHNldHplbiB2b24gcmVjaHRlbiB1bmQgbGlua2VuIFN0cmFmdGF0ZW4gKCJCZWlkZSBTZWl0ZW4gem5kZW4gRGluZ2UgYW4hIiksIG9kZXIgV2hhdGFib3V0aXNtIHNvYmFsZCBtYW4gc2ljaCBtYWwgZ2VnZW4gUmVjaHRzcmFkaWthbGUgdWVydCAoIkljaCBmaW5kZSBOYXppcyBuaWNodCBzbyBndXQsIGFiZXIgZGllIEFudGlmYSBpc3QgZ2VuYXVzbyBzY2hsaW1tL3ZpZWwgc2NobGltbWVyIikuIApBbmQgdGhlIHNocmlua2luZyBudW1iZXIgb2YgZXJvdGljIHNlcnZpY2VzIGFkcyBhcmUgYSBjbGVhciB2aWN0b3J5IGZvciBsYXcgZW5mb3JjZW1lbnQsIGF0IGxlYXN0IG9uIHRoZSBzdXJmYWNlLiAKQW1vbmcgdGhlbSB3YXMgTWFvcmkgZGlyZWN0b3IgQmFycnkgQmFyY2xheSwgd2hvIGhhZCBhIDIwIHllYXIgd29ya2luZyByZWxhdGlvbnNoaXAgd2l0aCBKb2huIE8nU2hlYSAgIHRoZWlyIFRhbmdhdGEgV2hlbnVhIGRvY3VtZW50YXJ5IHNlcmllcyAoUmVpZCB3cml0ZXMpIHRyYW5zcG9ydGVkIHRoZSB2YXN0IG1ham9yaXR5IG9mIGl0cyBQYWtlaGEgYXVkaWVuY2UgdG8gYSBjb3VudHJ5IHRoZXkgbmV2ZXIga25ldyBleGlzdGVkLiBBbm90aGVyIGhpZ2hsaWdodCB3YXMgdGhlIGZlYXR1cmUgZmlsbSBOZ2F0aSAod2l0aCBXaSBLdWtpIEthYSBpbiBhIHBvd2VyZnVsIGNlbnRyYWwgcm9sZSkgd2hpY2ggd29uIE5ldyBaZWFsYW5kJ3MgYmVzdCBmaWxtIGF3YXJkIHdoZW4gaXQgd2FzIHJlbGVhc2VkIGluIDE5ODcuCjIgcG9pbnRzICBzdWJtaXR0ZWQgNyBkYXlzIGFnb0kgaGF2ZW4gc2VlbiBhbnlvbmUgbWVudGlvbmluZyBkb3VibGluZyB1cCBiaXJ0aCBjb250cm9sIG1ldGhvZHM6IG1hbnkgcGVvcGxlIHVzZSBmZW1hbGUgY29uZG9tcywgZGlhcGhyYWdtcywgc3Blcm1pY2lkZSwgc3Blcm1pY2lkYWwgc3BvbmdlcywgY2VydmljYWwgY2Fwcywgb3Igb3RoZXIgYmFycmllciBtZXRob2RzIGluIGFkZGl0aW9uIHRvIGhvcm1vbmFsIGJpcnRoIGNvbnRyb2wgaW4gb3JkZXIgdG8gcmVkdWNlIHRoZSBwb3NzaWJpbGl0eSBvZiBjb25jZXB0aW9uIGF0IGFsbC4gCkkgZ290IGEgZ29vZCBkaXNjb3VudCB0aHJvdWdoIG15IGZyaWVuZC4gClRoZSByZWFzb24gcXVpY2sgd3JhcHMgZG9uIHVzdWFsbHkgc3VwcG9ydCB0aGUgd3Jpc3Qgd2VsbCBlbm91Z2ggaXMgYmVjYXVzZSBvZiB0aGVpciBzZXQgZm9ybSBmYWN0b3IuIApSZWFsbHksIEkgd291bGQgc2F5IHlvdSBzaG91bGQgbG9vayBhdCB0aGUgRmVuaXggNSBQbHVzIG9yIHRoZSA2NDVtLiAKRXhwb3N1cmUgdG8gYW50aWJpb3RpY3MgaW4gZHJpbmtpbmcgd2F0ZXIgaGFzIGJlZW4gc2hvd24gdG8gbGVhZCB0byByZWR1Y2VkIG51bWJlcnMgb2YgZ3V0IGJhY3RlcmlhIGluIG1pY2UgYW5kIHRvIGEgcmVkdWN0aW9uIGluIHRoZSBkaXZlcnNpdHkgb2YgdGhlIGJhY3RlcmlhbCBwb3B1bGF0aW9uLjE4IENvbnNpc3RlbnQgd2l0aCB3b3JrIGluIGdlcm0gZnJlZSBtaWNlLCBtaWNlIGV4cG9zZWQgdG8gYW50aWJpb3RpY3MgZm9yIGEgc2luZ2xlIHdlZWsgc2hvd2VkIGluY3JlYXNlZCBleHBsb3JhdG9yeSBiZWhhdmlvciBhbmQgcmVkdWNlZCBhbnhpZXR5IGxpa2UgYmVoYXZpb3IsIGFuIG9ic2VydmF0aW9uIHRoYXQgd2FzIGxpbmtlZCB0byBjaGFuZ2VzIGluIHRoZSBiYWN0ZXJpYWwgcHJvZmlsZS4xOSBUd28gd2Vla3MgZm9sbG93aW5nIHRoZSBlbmQgb2YgdGhlIGFudGliaW90aWMgdHJlYXRtZW50LCBib3RoIHRoZSBiYWN0ZXJpYWwgcHJvZmlsZSBhbmQgdGhlIGJlaGF2aW9yIHJldHVybmVkIHRvIG5vcm1hbCwgc3VnZ2VzdGluZyB0aGF0IHRyYW5zaWVudCBjaGFuZ2VzIGluIGd1dCBtaWNyb2Jpb3RhIGNhbiBpbmZsdWVuY2UgYmVoYXZpb3IuMTlIYXZpbmcgZXN0YWJsaXNoZWQgY29ubmVjdGlvbnMgYW1vbmcgZ3V0IGJhY3RlcmlhLCB0aGUgYnJhaW4sIGFuZCBiZWhhdmlvciwgaXQgaXMgaW50cmlndWluZyB0byBjb25zaWRlciB0aGUgd2F5cyB0aGF0IG1pY3JvYmlvdGEgbWF5IGNvbW11bmljYXRlIHdpdGggdGhlIGJyYWluLiAKRWFybHkgaW4gdGhlIGNvbnZlcnNhdGlvbiwgSmltIFRyZWxpdmluZyBvZiBCb3N0b24gUGl6emEgbWVudGlvbmVkIHRoYXQgdGhlIG1hbGUgZmVtYWxlIHJhdGlvIG9mIHRoZSBlbnRyZXByZW5ldXJzIGhlIGludmVzdGVkIGluIHdhcyA3MCUgOiA0MCUuIFdoZW4gTGF2YSBMaWZlIGNvIGZvdW5kZXIgQnJ1Y2UgQ3JveG9uIGNhbGxlZCBoaW0gb24gaXQsIFRyZWxpdmluZyBzaG90IGJhY2s6IG5ldmVyIHdhcyBnb29kIHdpdGggbnVtYmVycy4gSSBqdXN0IGhhdmUgYSBsb3Qgb2YgdGhlbS4gV2hlbiBhc2tlZCBpZiBoZSB3YXMgZ29pbmcgdG8gd3JpdGUgYSBib29rLCBhcyB0aGUgb3RoZXIgZHJhZ29ucyBoYXZlLCBDcm94b24gc2FpZCBpdCBkaWRuIGludGVyZXN0IGhpbS4gU2FpZCBUcmVsaXZpbmcsIHdobyBpcyA3MiwgdG9vIHlvdW5nIHRvIHdyaXRlIGEgZ29kZGFtbiBib29rLiBXYWl0IHRpbGwgeW91IGdldCBzb21lIGV4cGVyaWVuY2UuCkkgaGF2ZSBubyBpZGVhIHdoYXQgaGFwcGVucyBpbiBzdG9yaWVzIGxpa2UgdGhpcyB3aGVyZSBwZW9wbGUgaWdub3JlIGdsYXJpbmcgcmVkIGZsYWdzIHRoYXQgc29tZXRoaW5nIGlzIHdyb25nLiBZb3Ugc2VlIHRoaXMgYSBsb3Qgd2l0aCBvdGhlciB3b2tlIGNhdXNlcyBsaWtlIHNleHVhbCBhc3NhdWx0IG9yIG90aGVyIHJhY2lzdCBhbmQgaG9tb3Bob2JpYyBhdHRhY2tzLiAKVmF2cmEsIDU4LCBvZiBQb2Nvbm8gTGFrZSB3aXRoIHR3byBjb3VudHMgZWFjaCBvZiB0aGVmdCBhbmQgdGhlZnQgYnkgZGVjZXB0aW9uIGZvciBhbGxlZ2VkbHkgYWNjZXB0aW5nIHR3byBjaGVja3MgdG90YWxpbmcgJDQsMjgwIGZyb20gYSBIYW1pbHRvbiBUb3duc2hpcCB3b21hbiBpbiAyMDA4LiBTdGF0ZSBwb2xpY2Ugc2FpZCB0aGV5IHJhaWRlZCB0aGUgU3VuIFNreSBTcGEsIDc3MjAgTWFpbiBTdC4sIEZvZ2Vsc3ZpbGxlLCBvbiBUdWVzZGF5IGFmdGVyIGEgd2Vla3Nsb25nIGludmVzdGlnYXRpb24gaW4gd2hpY2ggaW5mb3JtYW50cyB2aXNpdGVkIHRoZSBzcGEgYW5kIHBhaWQgZm9yIHNleC4gCkkgbWVhbiBleHRyYSBob2xpZGF5IHRpbWUgaXMgYSB0b3RhbGx5IG5vcm1hbCB0aGluZyB0byBuZWdvdGlhdGUsIGFuZCBhIHByZXR0eSBjb21tb24gYXNrLiBFc3BlY2lhbGx5IGlmIHRoZSBjb21wYW55IGhhcyBzb21lIGR1bWIgcnVsZSBsaWtlICJubyBwYXkgcmFpc2VzIiB0aGVuIGV4dHJhIGhvbGlkYXkgdGltZSwgb3IgZXh0cmEgYmVuZWZpdHMgb2Ygc29tZSBraW5kIGRlZmluaXRlbHkgZW50ZXIgdGhlIGVxdWF0aW9uLiAKIkkgZG9uJ3QgcmVhbGx5IHBsYXkgY2FyZHMgb24gdGhlIHBsYW5lLCBzbyBJJ3ZlIG5ldmVyIHJlYWxseSBzZWVuIGhpbSBwbGF5LCIgTW9ycmlzIHNhaWQuICJJIGp1c3Qgc2hvb3QgZGljZSB3aXRoIGhpbS4gU28gSSdtIGEgZGljZSBkdWRlLiBNZSwgVCBSbyAoVGVycnkgUm96aWVyKSwgQnJhZCAoV2FuYW1ha2VyKSwgc29tZXRpbWVzIEt5LCBzb21ldGltZXMgZXZlcnlib2R5IHNob290cyBkaWNlLiIKV2VkbmVzZGF5IHN0YXJ0ZWQgb3V0IHN1bm55IGJ1dCBpdCB3YXMgc2hvcnQgbGl2ZWQgYXMgdGhlIGxha2UgZWZmZWN0IHNub3cgcmV0dXJuZWQuIApOb3Qgc3VyZSBvbiB5b3VyIHN0YXRlIGxhd3MsIGJ1dCBJIG5vdCBzdXJlIHdoYXQgdGhleSBkaWQgdG8geW91IHdhcyBsZWdhbC4gSSBoYWQgYSBjb3AgcHVsbCBtZSBvdmVyIGZvciA1IHRvIDEwIG1waCBvdmVyLiAKQ2xpbmljYWwgUmVsZXZhbmNlOiBDb2xkZXIgd2F0ZXIgdGVtcGVyYXR1cmVzIG1heSBiZSBtb3JlIGVmZmVjdGl2ZSBpbiB0aGUgdHJlYXRtZW50IG9mIGV4ZXJjaXNlIGluZHVjZWQgbXVzY2xlIGRhbWFnZSBhbmQgaW5qdXJ5IHJlaGFiaWxpdGF0aW9uIGJlY2F1c2Ugb2YgZ3JlYXRlciByZWR1Y3Rpb25zIGluIG11c2NsZSBibG9vZCBmbG93LgpJIGd1ZXNzaW5nIHlvdSBtZWFuIGxpY2Vuc2VkIGFuZCBzYW5jdGlvbmVkL3JlZ3VsYXRlZCBzaXRlcyB3aGljaCBhcmUgb25seSBhbiBvcHRpb24gaW4gYSBmZXcgc3RhdGVzIGxpa2UgTmV3IEplcnNleSwgTmV2YWRhIGV0Yy4KRWRpdDogaXRzIGJlZW4gcG9pbnRlZCBvdXQgdG8gbWUgYnkgYSBmbG9vZCBvZiByZXRhcmRzIHRoYXQgdGhleSBhcmUgcGFwZXIgdG93ZWxzLCBub3QgbmFwa2lucy4gQXBwYXJlbnRseSwgdGhlIGltcGxpY2F0aW9uIGlzIHRoYXQgdGhlcmUgaXMgYSBiaWcgZW5vdWdoIGRpZmZlcmVuY2UgYmV0d2VlbiBwYXBlciB0b3dlbHMgYW5kIG5hcGtpbnMgdGhhdCBpbSBhbiBpZGlvdCBmb3Igbm90IG5vdCB1c2luZyB0aGVpciBwcmVmZXJyZWQgbm91biAgIGJ1dCBqdWRnaW5nIGZyb20gdGhlIGRvd252b3RlcywgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiBuYXBraW5zIChpIG1lYW4gcGFwZXIgdG93ZWxzKSBhbmQgYSB0b2lsZXQgcm9sbCBpc250IG5lYXJseSBhcyBvYnZpb3VzLiAKV2hlbiBkZXNpZ25pbmcgYSBuZXcgcG9rZXIgY2hpcCB0aGUgYmVzdCBtYW51ZmFjdHVyZXJzIGNyZWF0ZSBmaWN0aXRpb3VzIGNhc2lub3MgdG8gaGVscCBicmluZyBhdXRoZW50aWNpdHkgdG8gdGhlIG90aGVyIGFzcGVjdHMgb2YgdGhlIHBva2VyIGNoaXAgc2V0cy4gT25lIHN1Y2ggcG9wdWxhciBzdHlsZSBvZiBQb2tlciBDaGlwIFNldHMgaXMgY2FsbGVkICJCbHVmZiBDYW55b24gQ2FzaW5vIi4gCkFmdGVyIHNwZW5kaW5nIGEgZmV3IHdlZWtlbmRzIHN0YW5kaW5nIGluIGxpZnQgbGluZXMgcG9sbGluZyAxMDAgcGVvcGxlIGhlIHRob3VnaHQgbWlnaHQgYmUgaW50ZXJlc3RlZCBpbiBoaXMgcHJvZHVjdCwgaGUgZGVjaWRlZCB0byBtb3ZlIGFoZWFkLiAKSGFkIG5vIHByb2JsZW0gZ29pbmcgdXAgdGhlIHN0YWlycy4gCkkgZG9uIHRoaW5rIGNyZWF0aW5nIGFuIGFuaW1lIGZhbiBhcnQgc3VicmVkZGl0IGlzIHRoZSByaWdodCB3YXkgdG8gZG8gdGhpbmdzIHNpbmNlIHRoZXkgZG9uIG5lZWQgdG8gYmUgZGlzY29ubmVjdGVkIG5vciBkbyBJIHRoaW5rIGFsbG93aW5nIHRoaW5ncyB0byBjb250aW51ZSB0aGlzIHdheSBpcyB0aGUgYmVzdCBjb3Vyc2Ugb2YgYWN0aW9uIGZvciBwdXJwb3NlcyBvZiBkZSBjbHV0dGVyaW5nIC9yL2FuaW1lIHBhZ2VzLgpJIGVuZGVkIHVwIHdpdGggc29tZSBzZXJpb3VzIGhlYWx0aCBpc3N1ZXMgd2hpY2ggcmVxdWlyZXMgbXlzZWxmIHRvIGJlIGNoZWNrZWQgZXZlcnkgNiBtb250aHMgZm9yIGJsYWRkZXIgY2FuY2VyLiBOb24gY2lnYXJldHRlIHNtb2tlci4gVGhlIHdob2xlIGJ1bGxzaGl0IHRoYXQgdXNpbmcgd2VlZCBzdG9wcyBjYW5jZXIgaXMgYnVsbHNoaXQuCkRvZ3Mgbm9zZXMgaGF2ZSBhbiBpbnNhbmUgbnVtYmVyIG9mIHJlY2VwdG9ycyBjb21wYXJlZCB0byB1cy4gT3VyIDE0IHllYXIgb2xkIHNoZWx0aWUgd2FzIG1vc3RseSBkZWFmIGFuZCBoYWQgY2F0YXJhY3RzIChhbHRob3VnaCBoZSBkaWRuIG9mdGVuIHdhbGsgaW50byB0aGluZ3MpIEV2ZW4gaWYgSSBjYW1lIGhvbWUgYW5kIHdhbGtlZCBpbiBxdWlldGx5ICh0cnlpbmcgbm90IHRvIG1ha2UgdmlicmF0aW9ucykgaGUgd291bGQgcGljayB1cCBteSBzY2VudCBhIG1pbnV0ZSBvciB0d28gbGF0ZXIuLiAKV2Ugc2hvdWxkIGJlIGZhciBhbmdyaWVyIHRoYXQgdGhlc2UgYmFua3Mgd2VyZSBzbyB1bnJlZ3VsYXRlZCBieSB0aGUgU3RhdGUgdGhhdCB0aGV5IHdlcmUgbm90IHN0b3BwZWQgZnJvbSBjcmVhdGluZyB0aGlzIG1lc3MgaW4gdGhlIGZpcnN0IHBsYWNlLiAKTm90aGluZyB3aWxsIG1ha2UgeW91ciB3aWZlIGZlZSBzZXhpZXIgdGhhbiBoZWFyaW5nIGl0IHN0cmFpZ2h0IGZyb20geW91LiAKSXQgdGhlIGN1bHR1cmUsIG9idmlvdXNseSBub3QgYWxsIG1lbiBoZXJlIGFyZSBsaWtlIHRoaXMgYnV0IGl0IGEgZGlzdHVyYmluZyBtYWpvcml0eS4gSSAyNyBhbmQgYXQgbXkgaGlnaCBzY2hvb2wgdGhlcmUgd2FzIGEgY2x1YiBmb3Igc2VuaW9yIG1hbGVzIGFuZCB0byBzdGF5IGluIHRoZSBjbHViIHlvdSBoYWQgdG8gaGF2ZSBzZXggd2l0aCBhIHZpcmdpbiBldmVyeSB3ZWVrIG9yIHlvdSBnb3Qga2lja2VkIG91dC4gCkluIHRoYXQgc2Vuc2UsIG1heWJlIGhlIHdhcyBpbiBvdmVyIGhpcyBoZWFkIHNpbmNlIHRoZSB2ZXJ5IGZpcnN0IGRheSBoZSB0b29rIGEgaGVhZCBjb2FjaGluZyBqb2I/IEkgdGVsbCBwZW9wbGUgdGhpcyB0aW1lIHRvIHRpbWUsIGJ1dCBpdCByYXJlIHlvdSBzZWUgc29tZSBvbmUgc28gc3BlY3RhY3VsYXJseSBtZWRpb2NyZS9iZWxvdyBhdmVyYWdlIGluIGFsbW9zdCBhbGwgYXNwZWN0cyBvZiB0aGVpciBjYXJlZXIgYW5kIGNvbnRpbnVlIHRvIGJlIHJld2FyZGVkIGFuZCBwbGFjZWQgaW4gcG9zaXRpb25zIG9mIHBvd2VyICh0aGlzIHJlbWluZHMgbWUgb2Ygc29tZW9uZSBpbiBvZmZpY2UgcmlnaHQgbm93IDogUCApLiBJIHdpc2ggSSBjb3VsZCBmYWlsIHVwIGFzIG1hbnkgdGltZSBhcyBSaWxleSBoYXMgaW4gbGlmZS4gCkluIG90aGVyIHdvcmRzLCBzZWxlY3Qgb25lIHBhcnRpY3VsYXIgdGhpbmcgYWJvdXQgeW91ciBjYXJlZXIgdGhhdCBnYXZlIHlvdSB0aGUgZ3JlYXRlc3Qgc2F0aXNmYWN0aW9uLCBhbmQgZGlzY3VzcyBpdC4gKEZ1bGwgQW5zd2VyKS4gClN1Ym1pc3Npb25zIG11c3QgYmUgdmVyaWZpYWJsZS4gUGxlYXNlIGxpbmsgZGlyZWN0bHkgdG8gYSByZWxpYWJsZSBzb3VyY2UgdGhhdCBzdXBwb3J0cyBldmVyeSBjbGFpbSBpbiB5b3VyIHBvc3QgdGl0bGUuIEltYWdlcyBhbG9uZSBkbyBub3QgY291bnQgYXMgdmFsaWQgcmVmZXJlbmNlcy4gQkJDLCBEaXNjb3ZlcnksIGV0YykuCllvdXIgcmVhbCBxdWVzdGlvbiBpcyBhIGxpdHRsZSB0b3VnaGVyIHRvIGFuc3dlci4gVGhlIGhhbmQgZXhhbXBsZSB5b3UgZ2F2ZSBpc24gZXhhY3RseSBhIG1vbnN0ZXIsIHlvdSBjYW4gYmUgY3J1c2hlZCBvciB3YXkgYmVoaW5kIHRoZXJlIGEgdG9uIG9mIHRoZSB0aW1lLiBXaXRoIGEgcmVhbCBtb25zdGVyIGxpa2UgYSBmbG9wcGVkIHNldCwgYSBoaWdoIGZsdXNoLCBvciBhIGhpZGRlbiBzdHJhaWdodCwgeW91IHNob3VsZCBwcmV0dHkgbXVjaCBuZXZlciBmb2xkIGF0IDJubCBubyBtYXR0ZXIgd2hhdCB5b3VyIG9wcG9uZW50IGRvZXMuCklzIHN0aWxsIGEgUXVhZHJhbnQgQS9CIGxvc3Mgc28gaXQgaXNuIFRFUlJJQkxFLiBMZXQgbm90IGZvcmdldCBLZW50dWNreSBsb3N0IHRvIFNldG9uIEhhbGwgYW5kIEFsYWJhbWEuIEkgaGF2ZSBNaWNoaWdhbiBzbGlnaHRseSBhaGVhZCBvZiBLZW50dWNreSBiZWNhdXNlIEkgcmFuayBvbiBvdmVyYWxsIHJlc3VtZSwgYW5kIHRyeSBub3QgdG8gYmUgcmVhY3Rpb25hcnkuIAoiSXQgZ2l2ZXMgdGhlIGJvZHkgbW9yZSB0aW1lIHRvIHVucmF2ZWwsIiBUcnVzc2VsIHNhaWQuCldlbm4gbWFuIEdsY2sgaGF0IGlzdCBkYXMgTWVlciBydWhpZyB1bmQgbWFuIGthbm4gaW0gZ2xhc2tsYXJlbiBXYXNzZXIgYW5nZW5laG0gQmFkZW4uIE9mdCBpc3QgZGFzIE1lZXIgcmF1IHVuZCBkYXMgU2Nod2ltbWVuIHNjaGVpbnQgZ2VmaHJsaWNoLiBBbSBTdGFuZCBnaWJ0IGVzIGtlaW5lIEluZnJhc3RydWt0dXIsIGtlaW5lIER1c2NoZW4sIFdDJ3MsIExpZWdlbiwgU29ubmVuc2NoaXJtZSB1c3cuIApJZiBjaXJjdW1jaXNpb24gd2FzbiBhIGh1Z2UgcHJvYmxlbSBpbiB0aGUgVVMsIHBlb3BsZSB3b3VsZG4gYnJpbmcgaXQgdXAgd2hlbiB5b3Ugc3RhcnQgdGFsa2luZyBhYm91dCBob3cgaG9ycmlibGUgaXQgaXMgdG8gY2hvcCBvZmYgcGFydHMgb2YgY2hpbGRyZW4gZ2VuaXRhbHMsIGJ1dCBhcyBsb25nIGl0IGNvbnRpbnVlcyB0byBoYXBwZW4gb24gYSBkYWlseSBiYXNpcyBpbiBBbWVyaWNhIHlvdSBjYW4gZXhwZWN0IEFtZXJpY2FucyBhcmUgZ29pbmcgdG8gYnJpbmcgaXQgdXAgd2hlbmV2ZXIgdGhlIHRvcGljIG9mIGN1dHRpbmcgaGVhbHRoeSBiYWJ5IHBhcnRzIGNvbWVzIHVwLiAKVGhlIGRpc2NzIGFyZSBjb21wcmlzZWQgb2YgODggcGVyY2VudCB3YXRlci4KTG9va2luZyBhdCB0aGlzIEkgd291bGQgYXJndWUgY2F0dGxlIGFyZW4ndCB0aGUgbWFpbiBwcm9ibGVtIGZvciBvdXIgcGxhbmV0IHJpZ2h0IG5vdyBpdCdzIGZvc3NpbCBmdWVscy4KVGhlIG9ubHkgaXNzdWUgaXMgSSBub3Qgc3VyZSB3aG8gc2hlIHdvdWxkIHBhaXIgd2l0aD8gSWYgUGFpZ2Ugd2FzIHN0aWxsIGFyb3VuZCBJIHNheSBoZXIgc2luY2UgdGhleSBib3RoIGtpbmRhIGRvIHRoYXQgZ290aCBlZGd5IHRoaW5nLiBNYXliZSBzb21ldGhpbmcgb3V0IG9mIGxlZnQgZmllbGQgbGlrZSBOaWtraSBDcm9zcz8gMTcgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KVGhlIHNhbWUgc3RhbmRhcmQgYXBwbGllcyB0byBib3RoLi4gCkxpdGVyYWwgbmVvIE5hemlzIGNyYXdsZWQgb3V0IGZyb20gdW5kZXIgdGhlaXIgcm9ja3MgaW4gZHJvdmVzIHRvIGVudGh1c2lhc3RpY2FsbHkgc3VwcG9ydCBoaW0gYmVjYXVzZSBzb21lb25lIHdhcyBmaW5hbGx5IHJlcHJlc2VudGluZyB0aGVtLiBBbmQgZXZlbiBpZiBlbGVjdGVkIFJlcHVibGljYW5zIGFyZSBzb21ldGltZXMgZnJ1c3RyYXRlZCBieSBUcnVtcCBjcnVkZW5lc3MgYW5kIHZ1bGdhcml0eSwgaGlzIGJlaGF2aW9yIGNsZWFybHkgcmVwcmVzZW50cyB0aGUgc291bCBvZiB0aGUgcGFydHkuLiAKVGhvc2Ugd2hvIHdpbiBoYXZlIHRoZSBvcHBvcnR1bml0eSB0byB0YWtlIG1pbGxpb25zIGJhY2sgdG8gdGhlaXIgaG9tZXMuIApJdCdzIHRoZSByZXNwb25zaWJpbGl0eSBvZiB0aGUgc2VsbGVyIHRvIHdhbGsgYXdheSBmcm9tIGFueW9uZSB3aG8gZmFpbHMuIApOb3QgcXVpdGUgc28gdHJhZ2ljLCBidXQgcG90ZW50aWFsbHkgbW9yZSBlbWJhcnJhc3NpbmcsIFRlcnJpIFNhbmR5IENyZWF0aXZlIERpcmVjdG9yIEFuZ2VsYSBEZW5pc2Ugc2F5cyBzaGUgYW5kIGEgY28gd29ya2VyIGJvbmRlZCBmYXN0IHdoZW4gdGhleSBkcm9wcGVkIG9mZiB0aGVpciBsYXVuZHJ5IGF0IGEgRmFpcm1vbnQgdGhleSB3ZXJlIHN0YXlpbmcgYXQgaW4gU2FudGEgTW9uaWNhIGFuZCB0aGUgaG90ZWwgY29tYmluZWQgdGhlaXIgbGF1bmRyeS4gCkl0IHdhcyBiZWluZyBjYXJyaWVkIGluIDYwMCBzdG9yZXMgYWNyb3NzIENhbmFkYSBhbmQgYXQgdGhlIHRpbWUgb2YgdGhlIHBpdGNoIGFubnVhbCBzYWxlcyB3ZXJlICQ1MDAsMDAwLi4gClRoZSB0cnV0aCBpcywgZnJvbSB0aGUgaG90ZWwgbWFuYWdlciBhbGwgdGhlIHdheSBkb3duIHRvIHRoZSBkZWFsZXJzLCBjYXNpbm9zIHdhbnQgeW91IHRvIGZlZWwgY29tZm9ydGFibGUuIApZb3Ugd2lsbCBzb29uIGRpc2NvdmVyIHRoYXQgdGhpcyBpcyBhIGdyZWF0IHdheSB0byByZWFsbHkgZmlndXJlIG91dCB3aGF0IHlvdXIgb3B0aW9ucyBhcmUgd2hlbiB5b3UgYXJlIGxvb2tpbmcgdG8gcmVhbGx5IGNyZWF0ZSBhIHRlcnJpZmljIGVudmlyb25tZW50IHRvIHdvcmsgd2l0aCB3aGVuIHlvdSBhcmUgcGxheWluZyBwb2tlciBhdCBob21lIG9yIHBsYW5uaW5nIGEgc3BlY2lhbCBldmVudC4gCkJlZm9yZSBJIGNvdWxkIHNheSBhIHdvcmQsIGhlIHRvbGQgbWUgaGUgd2FzbiBnb2luZyB0byBzYXkgc2hpdCB3aXRob3V0IGEgbGF3eWVyIGFuZCBoZSBkaWQgbm90aGluZyB3cm9uZy4gCkEgcHVwIGluIHRoaXMgY29uZGl0aW9uIGhhcyBubyBkb3VidCBiZWVuIGxpdmluZyBpbiBhIGhlYWx0aGZ1bCBlbnZpcm9ubWVudCB3aXRoIGdvb2QgbnV0cml0aW9uIGFuZCBhbGwgdGhlIHJpZ2h0IHZhY2NpbmF0aW9ucyBhZ2FpbnN0IGRpc2Vhc2UuIApJdCBrZWVwcyBpbnRlcnJ1cHRpbmcgd2hhdGV2ZXIgeW91IGRvaW5nLiAKRmlyc3Qgb2YgYWxsIHVyIFN0YXRzLiBZb3VyIENyaXQgaXMgd2F5IHRvIGxvdyBhbmQgdXIgZW5jaGFudGVkIGludG8gaGFzdGUuIEdldHRpbmcgYXJvdW5kIDMzJSBDcml0IGlzIHRoZSBmaXJzdCBhbmQgbW9zdCBpbXBvcnRhbnQgdGhpbmcgZm9yIEZyb3N0IGJlY2F1c2UgdSBnZXQgQ2xvc2UgdG8gMTAwJSBjcml0IG9uIHVyIHNoYXR0ZXJlZCBzcGVsbHMgdGhhdCB3YXkuIApKb2JzIHNob3VsZCBpbmNyZWFzZSBwZXJraW5lc3MsIG5vdCBzaXplLiAKWW91IGNvdWxkIHRyeSBzdWJtaXR0aW5nIHlvdXIgcXVlc3Rpb24gdG8gL3IvSGlzdG9yeSBvciAvci9Bc2tIaXN0b3J5LCB3aGljaCBkb2VzbiBoYXZlIHN1Ym1pc3Npb24gY3JpdGVyaWEgcXVpdGUgYXMgc3RyaWN0LiBJbiBhIHNlbnNlLCBvYnZpb3VzbHkgYnJvYWQgc3Ryb2tlcywgdGhlIGlkZWEgdGhhdCBjaGlsZGhvb2Qgd2FzIGl0IG93biBkaXN0aW5jdCBsb2N1cyBvZiBkZXZlbG9wbWVudCwgYW5kIG5vdCBzaW1wbHkgYW4gdW50YW1lZCBhZHVsdCB3YXMgcmVhbGx5IG9ubHkgZXN0YWJsaXNoZWQgdGhlbi4KQW5kIHNpbWlsYXIgc2l0dWF0aW9ucyBoYXBwZW4gcmVndWxhcmx5LiBJZiBJIGJldCwgYW5kIGhlIGNhbGxzLCBJIGF0IGxlYXN0IGtub3cgaGUgZ290IHNvbWV0aGluZyBkZWNlbnQgaGVyZSwgZ2l2ZW4gaGUga25vd3MgaG93IHdlbGwgdGhlIGJvYXJkIGhpdHMgbXkgcmFuZ2UsIHlldCBzdGlsbCBjb250aW51ZXMuClNoZSBzdXBwb3J0ZWQgdGhlIHN1YmRpdmlzaW9uIG9mIDQyIGxvdHMgd2hpY2ggd291bGQgYmUgd2l0aGluICcnd2Fsa2luZyBkaXN0YW5jZSBvZiB0aGUgbmV3IG11bHRpbWlsbGlvbiBkb2xsYXIgdHJhaW4gc3RhdGlvbicnLgoiVGhpcnR5IHBlcmNlbnQgb2YgbGlua3MgaW4gY29udGVudCBhcmUgYnJva2VuLCIgc2F5cyBTaGlybGV5IENoZW4sIDMwLiBOYXJyYXRpdiwgaGVyIHN0YXJ0dXAgdGhhdCBoZWxwcyBwdWJsaXNoZXJzIGdlbmVyYXRlIGUgY29tbWVyY2UgcmV2ZW51ZSwgdHJpZXMgdG8gcmVtZWR5IHRoaXMgcHJvYmxlbSB2aWEgYXJ0aWZpY2lhbCBpbnRlbGxpZ2VuY2UgdGhhdCBjb25zdGFudGx5IHVwZGF0ZXMgc2FsZXMgbGlua3Mgb24gd2Vic2l0ZXMgc28gdGhleSBsZWFkIHRvIHVwZGF0ZWQgbGFuZGluZyBwYWdlcy4gTmFycmF0aXYgY2FuIHVwZGF0ZSBsaW5rcyB5ZWFycyBhZnRlciBhbiBhcnRpY2xlIGlzIHB1Ymxpc2hlZC4uIApMZXMgZGlmZnJlbnRlcyBmcnF1ZW5jZXMgZGUgY2VzIG9uZGVzIGNyZW50IGxhIHN5bXBob25pZSBkZXMgc3BocmVzLiAKVGhlIG90aGVycyB3b3VsZCBiZSBzZXR0aW5nIHVwIGFuIGlkZWEgb3IgcHJlbWlzZSBhbmQgdGhlbiBoZSBqdXN0IHNoaXQgb24gaXQsIG92ZXIgYW5kIG92ZXIgYWdhaW4uLiAKQnkgdGhpcyB0aW1lLCBteSBhZGRpY3Rpb24ga25ldyBubyBib3VuZHMuIFdoZW4gSSB3YXNuIHdpdGggU3VnYXIgTWFtYSwgSSBjb250aW51ZWQgdG8gdmlzaXQgZGlmZmVyZW50IG1hc3NhZ2UgcGFybG9ycyBhbmQgZXNjb3J0IGFnZW5jaWVzIGFuZCBtZXQgdGhyZWUgYWRkaXRpb25hbCBnaXJscy4KQWx3YXlzIHN0YXJ0IHRoZSBNYWluIFBvdCBmaXJzdCB3aXRoIHRoZSBzaG9ydGVzdCBjaGlwcy4gCllvdSBjYW4ganVzdCBkb24gaWYgeW91IGkgYW0ganVzdCBzYXlpbmcgdGhpcyBiZWNhdXNlIHdlbGwgdGhpcyBpcyBtb3N0IGxpa2VseSB3aGF0IG1vc3Qgb2YgeW91IHBlb3BsZSByZWFkaW5nIHdvdWxkIGhhdmUgZG9uZS4gCkkgbGl2ZSBpbiBDYW5iZXJyYSBhbmQgdGhpbmsgaXQgaXMgZGVmaW5pdGVseSB3b3J0aCBhIHZpc2l0IGZvciBhdCBsZWFzdCBhIG5pZ2h0LiBJbiB0aGUgY2VudHJlIG9mIHRoZSBjaXR5IHRoZXJlIGFyZSBwbGVudHkgb2YgbmljZSByZXN0YXVyYW50cyBhbmQgYmFycy4gQ2FuYmVycmEgaXMgYmVzdCBleHBsb3JlZCBieSBjYXIuIFRoZXJlIGFyZSBzb21lIGZhbnRhc3RpYyB0aGluZ3MgdG8gZG8gb3V0ZG9vcnMgaGVyZS4gVGlkYmluYmlsbGEgaXMgZnVsbCBvZiB3aWxkbGlmZSBhbmQgd2Fsa3MuIFRoZSBDb3R0ZXIgcml2ZXIgaXMgYSBsb3ZlbHkgc3BvdCB0byBzcGVuZCB0aGUgZGF5LgpJIHRob3VnaHQgaXQgd2FzIG9kZCB0aGF0IHRoZXkgc2hvd2VkIEFtbWEgaW4gaGVyIGdvbGYgY2FydCBvbmx5IG9uY2Ugb24gdGhlIHNob3csIGFuZCBub3QgZm9yIGFueSBpbXBvcnRhbnQgcGxvdCBkZXZlbG9wbWVudCwgYnV0IEkgaGF2ZSB0byBhZG1pdCB0aGUgcm9sbGVyIHNrYXRlcyB3b3JrZWQgc3VwZXIgd2VsbCBzdHlsaXN0aWNhbGx5IG9uIHRoZSBzY3JlZW4uLiAKTWlzcyBOb3NlIGxvdmVzIHRoaXMgc2hvdyBzbyBtdWNoLCBpdCBmaWxscyBoZXIgd2l0aCBwcmlkZSB3aGVuZXZlciBzaGUgZGlzY3Vzc2VzIGl0LiBZb3UgY2FuIGFsd2F5cyBzZWUgdGhlIHNwYXJrbGUgaW4gaGVyIGV5ZXMgd2hlbmV2ZXIgdGhpcyBzaG93IGlzIGdpdmVuIGFueSBhdHRlbnRpb24gYXQgYWxsLiAKV2FzIHNsb3dlciBjbGllbnQgYWN0aXZpdHksIG9idmlvdXNseSwgZ2l2ZW4gdGhlIGhlaWdodGVuZWQgdm9sYXRpbGl0eSBpbiB0aGUgZXF1aXR5IGFuZCBkZWJ0IGNhcGl0YWwgbWFya2V0cywgYW5kIGFsc28gaW4gb3VyIGJvbmQgdHJhZGluZyBidXNpbmVzcywgc2FpZCBIYXJyeSBDdWxoYW0sIHRoZSBoZWFkIG9mIHRoZSBiYW5rIGNhcGl0YWwgbWFya2V0cyBidXNpbmVzcywgZHVyaW5nIHRoZSBjb25mZXJlbmNlIGNhbGwuIFdlIHZlcnkgcGxlYXNlZCB3aXRoIHRoZSBkaXZlcnNpZmljYXRpb24gb2Ygb3VyIHJldmVudWUgYWNyb3NzIHByb2R1Y3RzLCBpbmR1c3RyeSBhbmQgZ2VvZ3JhcGh5LCBhbmQgd2UgcHJldHR5IGNvbmZpZGVudCB0aGlzIGlzIGdvaW5nIHRvIGNvbnRpbnVlIGZvcndhcmQuLiAKU28sIEkgZ3Vlc3MgSSB3b3VsZCByYXRlIHRoaXMgYXQgYSBmb3VyIG9yIGZpdmUuIApJdCBjb3VsZCBoYXZlIGJlZW4uIFNob3VsZCBoYXZlIGJlZW4uIApTdGF0Q2FuIHJlcG9ydGVkIE1hcmNoIDEgdGhhdCBHRFAgZ3JldyBhdCBhbiBhbm51YWwgcmF0ZSBvZiAwLjQgcGVyIGNlbnQgaW4gdGhlIGZvdXJ0aCBxdWFydGVyLCBsZXNzIHRoYW4gaGFsZiBhcyBmYXN0IGFzIHdoYXQgdGhlIEJhbmsgb2YgQ2FuYWRhIHByZWRpY3RlZCBpbiBKYW51YXJ5LgpNYWlzIG9uIG5lIHBldXQgZW4gZGlyZSBhdXRhbnQgZGUgbCBlc3NlbnRpZWxsZSBkZSB2dGl2ZXIgZGUgbGFxdWVsbGUgbGUgY2hhbWF6dWxuZSBlc3QgYWJzZW50LiAKVHJlYXQgb3RoZXJzIGFzIHlvdSB3aXNoIHRvIGJlIHRyZWF0ZWQgQ3JpdGljaXplIGlkZWFzLCBub3QgcGVvcGxlIFN0YXkgb24gdG9waWMgQXZvaWQgdGhlIHVzZSBvZiB0b3hpYyBhbmQgb2ZmZW5zaXZlIGxhbmd1YWdlIEZsYWcgYmFkIGJlaGF2aW91ciBDb21tZW50cyB0aGF0IHZpb2xhdGUgb3VyIGNvbW11bml0eSBndWlkZWxpbmVzIHdpbGwgYmUgcmVtb3ZlZC4gCkZyb20gdGhlIHRvd2VyaW5nLCBwaW5lYXBwbGUgc2hhcGVkIEdyYW5kIExpc2JvYSB0byB0aGUgdmFzdCBjYW1wdXMgb2YgdGhlIFZlbmV0aWFuLCB0aGVyZSdzIG5vIHNob3J0YWdlIG9mIGNhc2lub3MgdG8gY2hvb3NlIGZyb20gaW4gTWFjYXUuIApHZXQgdGhlIGhlbHAgb2YgYSBtYXNzYWdlIHRvb2wgZm9yIHRoaXMgcHVycG9zZS4gR2V0IGEgZm9vdCBtYXNzYWdlciBvciBhIGdvbGYgYmFsbCB0byBoZWxwIHlvdSBpbiBtYXNzYWdpbmcgeW91ciBmb290IHRvIHJlbGlldmUgaXQgZnJvbSB0aGUgcGFpbiBicm91Z2h0IGJ5IHBsYW50YXIgZmFzY2lpdGlzLiBUaGlzIG1hc3NhZ2UgYWN0aXZpdHkgaXMgYXMgc2ltcGxlIGFzIHBsYWNpbmcgdGhlIHRvb2wgb24gdGhlIGZsb29yIGFyZWEgYW5kIHRoZW4gcm9sbGluZyB0aGUgZm9vdCByaWdodCBvdmVyIGl0LiAKU2VsZWN0IHRoZSBsaW5rIGFuZCBjb21wbGV0ZSB0aGUgZm9ybS4gCllvdSBjYW4gZWFzaWx5IGdldCB0aGUgYW5zd2VyIHRvIHlvdXIgcXVlc3Rpb24sIGhvdyB0byBjaGVhdCBpbiBwb2tlcj8gSXQgaXMgYW4gZW5qb3lhYmxlIGdhbWUgd2hpY2ggcmVxdWlyZXMgc29tZSBzb3J0IG9mIHNraWxscyBhbmQgaW50ZWxsaWdlbmNlIHdpdGggYSBsaXR0bGUgZmxhdm9yIG9mIHNtYXJ0bmVzcyBhbmQgeW91IGNhbiBlYXNpbHkgd2luIHlvdXIgZ2FtZSBieSBhZG9wdGluZyBzb21lIGVmZmVjdGl2ZSBjaGVhdGluZyBwbGF5aW5nIHRyaWNrcyBvciBzcHkgZ2FkZ2V0cyB3aGljaCBoYXZlIGJlZW4gZGVzaWduZWQgZXNwZWNpYWxseSBmb3IgeW91IHRvIG1ha2UgeW91IGFibGUgdG8gd2luIHlvdXIgY2FyZCBnYW1lcy4gRG8geW91IHdhbnQgdG8ga25vdyBzdWNoIGVmZmVjdGl2ZSB0aXBzPyBZZXM/IERvbid0IHdvcnJ5OyB5b3UgY2FuIHNpbXBseSB1c2UgdGhlIGNoZWF0aW5nIHBsYXlpbmcgdHJpY2tzIHRvIHdpbiB5b3VyIHBva2VyIGdhbWUuIEl0IGhhcyBiZWNvbWUgc28gbXVjaCBlYXN5IGZvciB0aGUgb25lcyB3aG8gd2FudCB0byBtYWtlIHRoZSBodWdlIGJ1Y2tzIG9mIG1vbmV5IHdpdGhpbiBhIHNob3J0IGludGVydmFsIG9mIHRoZSB0aW1lIHBlcmlvZC4gRG8geW91IHdhbnQgdG8ga25vdyB0aGUgcGVyZmVjdCB0cmlja3Mgb3IgbWV0aG9kcyB0byB3aW4gdGhlIHBva2VyIGdhbWVzLCB5ZXM/IEhhdmUgYSBsb29rIGF0IHNvbWUgb2YgdGhlIGVmZmVjdGl2ZSBDYXNpbm8gUG9rZXIgRGV2aWNlLgpUaGUgYmVsaWVmIHRoYXQgYm9keSBlbmVyZ3kgbXVzdCBjb250aW51b3VzbHkgZmxvdyB0byBwcmV2ZW50IHN0cmVzcyBhbmQgZGlzZWFzZSBpcyBhIGNlbnRyYWwgdGVuZXQgb2YgVHJhZGl0aW9uYWwgQ2hpbmVzZSBNZWRpY2luZS4gVGhlIG1lcmlkaWFuIHN5c3RlbSAoaW5uZXIgZW5lcmd5IHBvaW50cyBhbmQgcGF0aHdheXMpIGVuY291cmFnZXMgdGhlIGZsb3cgb2YgKGJvZHkgZW5lcmd5KSBhbmQgYmxvb2QgdGhyb3VnaG91dCB0aGUgYm9keS4gClRob3NlIHdobyBkb24gd2FudCB0byBsZWF2ZSB0aGVpciBkZWNrY2hhaXIgYnkgdGhlIHBvb2xzIGNhbiBvcmRlciBoYW1idXJnZXJzIGFuZCBob3QgZG9ncyBmcm9tIHRoZSBQb29sc2lkZSBHcmlsbC4gCk1vZGlmaWNhdGlvbnMuIAoyIHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnb015IGZpcnN0IG1lZXQgSSB3YXMgd29ybiBvdXQgaW1tZWRpYXRlbHkgYWZ0ZXIgYnV0IHR3byBkYXlzIGxhdGVyIEkgd2FzIGJhY2sgaW4gdGhlIGd5bSB0cnlpbmcgKHVuc3VjY2Vzc2Z1bGx5KSB0byBzcXVlZXplIG91dCB3aGF0IEkgdGhvdWdodCB3ZXJlIHNvbWUgcG91bmRzIEkgbGVmdCBvbiB0aGUgYmFyLiAKRURJVDogQXMgbWFueSBoYXZlIHBvaW50ZWQgb3V0IGl0IHdvdWxkIGNhdXNlIGEgaGFsbHdheSBmdWxsIG9mIGRvb3JzIGFuZCBvYnN0cnVjdCBwZW9wbGUgZnJvbSBnZXR0aW5nIG91dCwgd2hpY2ggaXMgYSBmYWlyIGFzc3VtcHRpb24hIEkgd2VudCB0byB0aGUgb2ZmaWNpYWwgZmlyZSBzYWZldHkgcmVndWxhdGlvbnMgb2YgU3dlZGVuIHRvIGNoZWNrIHdoYXQgdGhleSBhY3R1YWxseSBzYXlzIGFuZCBhcHBhcmVudGx5IHRoZXJlIGFyZSBubyByZWd1bGF0aW9ucyByZWdhcmRpbmcgYXBhcnRtZW50IGRvb3JzIGlmIHRoZXkgZ28gaW4gb3VyIG91dCwgc28gSSBjYW4gb25seSBpbnRlcnByZXQgdGhhdCBhcyBpdCBub3QgYSBzaWduaWZpY2FudCBkaWZmZXJlbmNlIGJldHdlZW4gdGhlbS4gClNpdHRpbmcgYXQgYSB0YWJsZSBmb3IgYW55d2hlcmUgZnJvbSBhIGNvdXBsZSBob3VycyB0byAzMSBob3VycyAobXkgbG9uZ2VzdCBzZXNzaW9uKSBpc24ndCBncmVhdCBleGVyY2lzZSwgc28gaWYgSSBhdGUgdGhhdCBzdHVmZiwgSSB3b3VsZCBnZXQgaml0dGVyeSwgc2xlZXB5LCBvciBsb3NlIGZvY3VzLiBNeSBtYWluIHNuYWNrcyBvZiBjaG9pY2UgZHVyaW5nIGdhbWUgdGltZSB3ZXJlIHNhbGFkcy4iIEFuZCwgb2YgY291cnNlLCBhbGNvaG9sIHdhcyBjb21wbGV0ZWx5IG9mZiBsaW1pdHMuLiAKQWZ0ZXIgbW9yZSB0aGFuIDE1IHllYXJzIEkgbG9va2VkIGF0IHRoZSBCaWJsZSBhZ2FpbiBhbmQgc3RhcnRlZCByZWFkaW5nLiBTcGVuZGluZyBlZmZvcnQgdG8gYmVsaWV2ZSBldmVuIHRob3VnaCBtYW55IHllYXJzIG9mIGF0aGVpc20gYW5kIGFnbm9zdGljaXNtIG1hZGUgbWUgZG91YnQgZXZlcnl0aGluZyBhbmQgbWFrZSBmdW4gb2YgaXQuIEl0IHdhcyByZWFsbHkgaGFyZCwgZXNwZWNpYWxseSBzaW5jZSB0aGUgb2xkIHRlc3RhbWVudCBpcyBmdWxsIG9mIHdlaXJkIHN0b3JpZXMuCkkgcG0gTWFzZXRvIGFuZCB0aGV5IHNhaWQgdGhleSBoYXZlIGEgZmFuIGF2YWlsYWJsZSBldmVuIHRob3VnaCBpdCBub3QgbGlzdGVkIChJIGhhZCBvcmRlcmVkIHdoYXQgdGhleSBoYXZlIGxpc3RlZCB3aGljaCBpcyBtb3JlIG9mIGEgaHlicmlkIHNoYXBlKS4uIApJIHBhbmlja2VkIGFzIEkgdGhvdWdodCBpIGhhZCBhIGRlYWQgYmVhdCBtb25pdG9yLiBCdXQgYWZ0ZXIgYSB3aGlsZSwgaXQgd29ya2VkIGFuZCBzaG93ZWQgYSBkaXNwbGF5LiAKSXQgc2VlbXMgbGVzcyBzdXNwaWNpb3VzIGFuZCBtb3JlIGNhcmluZy5UaGlzIGlzIGFic29sdXRlIGhvcnNlIHNoaXQuIEhvd2V2ZXIsIHRoZSBhcnRpY2xlIGlzIGp1c3QgYSByYW50IGFib3V0IGhvdyBmaW5hbmNpYWwgYWR2aXNvcnMgYXJlbiBvYmxpZ2F0ZWQgdG8gcmVjb21tZW5kIHRoZSBiZXN0IHByb2R1Y3RzIGZvciB0aGVpciBjbGllbnRzLiAKRm9sbG93aW5nIHRoZSBCZWFjaCBIb3RlbCBkZWNpc2lvbiB0byByZW1vdmUgcG9rZXIgbWFjaGluZXMgZnJvbSB0aGVpciB2ZW51ZSwgQ3IgUGF1bCBTcG9vbmVyIHdhbnRzIHRvIGVuY291cmFnZSBvdGhlciB2ZW51ZXMgaW4gdGhlIFNoaXJlIHRvIGZvbGxvdyBzdWl0LgpGaW5kaW5nIGEgR29vZCBQb2tlciBSb29tCldoeT8gSSB0aGluayBpdCBiZWNhdXNlIGxvYWRpbmcgc2NyZWVuIGRvZXNuIHJlYWxseSBsb2FkIGV2ZXJ5dGhpbmcgbm93LCBidXQgbGVhdmVzIG1ham9yIGFzc2VzdHMgdG8gbG9hZCBhcyB5b3UgcGxheS4gCkJ1aWxkaW5nIGFtZW5pdGllcyBpbmNsdWRlIGEgc3dpbW1pbmcgcG9vbCwgYSBmaXRuZXNzIGNlbnRlciBhbmQgMjQgaG91ciBjb25jaWVyZ2Ugc2VydmljZS4gSW4gdGhlIGZ1cm5pc2hlZCB1bml0LCBleHBlY3QgdGlsZWQgZmxvb3JzLCBhIGtpdGNoZW4gaXNsYW5kLCBnZW5lcm91cyBjbG9zZXQgc3BhY2UgYW5kIG5hdHVyYWwgbGlnaHQuIE5laXRoZXIgY2F0cyBub3IgZG9ncyBhcmUgd2VsY29tZS4gVGhlcmUgbm8gbGVhc2luZyBmZWUgcmVxdWlyZWQgZm9yIHRoaXMgcmVudGFsLgpUaGUgYXNzb2NpYXRpb24gcmVsZWFzZWQgYSByZXBvcnQgV2VkbmVzZGF5IGNhbGxlZCBTYWZldHkgYW5kIFNlY3VyaXR5IGluIERvd250b3duIEVkbW9udG9uLCBiYXNlZCBvbiBpbnB1dCBmcm9tIDYwIHBhcnRpY2lwYW50cyBhdCBhIHdvcmtzaG9wIGluIE5vdmVtYmVyIDIwMTguCktOT1dMRVMsIEphbWVzIEF1Z3VzdCAyOHRoLCAxOTI3ICAgTWF5IDA1dGgsIDIwMTEgSmFtZXMgS25vd2xlcyB3YXMgYm9ybiBpbiBQdWVydG8gUGFkcmUsIEN1YmEgaW4gMTkyNyB0byBTY290dGlzaCBwYXJlbnRzIEFyY2hpYmFsZCBKYW1lcyBLbm93bGVzIGFuZCBMaWx5IERvYWtlLiAKRGllIEJlaXNwaWVsZmFocnQgdm9tIEZsdWdoYWZlbiBuYWNoIFB1ZXJ0byBUYXphY29ydGUga29zdGV0IGRhbm4gbm9jaCBnYW56ZSA0LDUwIC4gClRoZSBCdWZmYWxvIEJpbGxzIGFyZSBvbiB0aGUgc2hvcnQgbGlzdCBvZiB0ZWFtcywgeW91IGhhdmUgdGhlIHJpZ2h0IG9mZnNlYXNvbiB0aGV5IG1ha2luZyB0aGUganVtcCB0byB0aGUgcGxheW9mZnMuIFRoZSBCdWZmYWxvIEJpbGxzLCBJIHNhaWQgdGhpcyBiZWZvcmUgc28gdGhpcyBpcyBub3QgYSByZWFjdGlvbmFyeSBob3QgdGFrZSwgdGhlIEJ1ZmZhbG8gQmlsbHMgaGF2ZSBhIHlvdW5nIHN0dWQgcXVhcnRlcmJhY2sgd2hvIGdvaW5nIHRvIGJlIGdyZWF0LiAKU28gZnJvbSB2aWRlbyB0dXRvcmlhbHMgSSBtYWlubHkgc3RhcnRlZCBwcmFjdGljaW5nIGluIHRoZSBjYXIgYW5kIGFzIEkgZ290IG1vcmUgY29uZmlkZW50IG15IHZvaWNlIHN0YXJ0ZWQgY2hhbmdpbmcgaW4gZXZlcnkgZGF5IGxpZmUuIE5vdyBldmVyeSB0aW1lIEkgc3BlYWsgaXMga2luZCBvZiBwcmFjdGljZS4gCkFsc28gdGhlIGxhcmdlciB0aGUgcGVuaXMgaXMgICB0aGUgbW9yZSBsaWtlbHkgaXQgd2lsbCBiZSBhIGJveS4gVGhlIHNtYWxsZXIgLyBtb3JlIHNoYWxsb3cgaW4gdmFnaW5hICAgaXQgd2lsbCBiZSBhIGdpcmwuIEkgY2FuJ3QgcmVtZW1iZXIgdGhlIHNpdGUgYnV0IGl0IHdhcyBkZWRpY2F0ZWQgdG8gaGVscGluZyB5b3UgYWNoaWV2ZSB3aGF0ZXZlciBnZW5kZXIgeW91IHdhbnRlZCBmb3IgeW91ciBiYWJ5LiAKV2UgYWxzbyBnb3QgYSBiaXJ0aCAoU3VzYW4ncyBncmFuZGNoaWxkKSwgYSBkZWF0aCAoUklQIE1ycy4gTWNDbHVza2V5KSBhbmQgYSB3ZWRkaW5nIChSZW5lZSBpbiBhIHN0b2xlbiB3ZWRkaW5nIGRyZXNzKSBpbiBvbmUgZXBpc29kZSEgVGhlIHR3byBob3VyIGZpbmFsZSBjZXJ0YWlubHkgaGFkIGEgbG90IGdvaW5nIG9uLCBidXQgZGlkIGl0IGdpdmUgdGhlIGxhZGllcyBhbiBlbmRpbmcgdGhleSBkZXNlcnZlZD8gVm90ZSBpbiB0aGUgcG9sbCBiZWxvdyBhbmQgdGhlbiBoZWFkIHRvIHRoZSBjb21tZW50cyB0byBnaXZlIHRoZSBnaXJscyBhIHByb3BlciBnb29kYnllLi4gCkkgcmVhZCB0aGF0IHRvbyBidXQgdGhlIHNlZW1pbmcgcGFyYWRveCBiZXR3ZWVuIHRob3NlIHRoaW5ncyBpcyByZXNvbHZlZCBpbiBjb250ZXh0LCBJIHJlYWQgaXQgbm90IHJlYWxseSB0aGF0IG1lbiBmaWx0ZXIgaXQgb3V0IHNvIG11Y2ggYXMgd2UgZXNzZW50aWFsbHkgYXJlIGp1c3QgZGVzaWduZWQgdG8gbm90IGxpc3RlbiB0byB0aGUgd29yZHMuIFRoZSBoaWdoZXIgcGl0Y2ggb2YgYSB3b21hbnMgdm9pY2UgdHJpcHMgb3VyIGJyYWlucyB0byB0aGluZ3MgbGlrZSBoYXZpbmcgdGluZ2xpbmcgc2Vuc2F0aW9ucywgcmVsZWFzZSBvZiBob3Jtb25lcyBzeW5vbnltb3VzIHdpdGggYXJvdXNhbCBhbmQgc28gb24gd2hpY2ggaW4gdHVybiBhY3R1YWxseSBjb250cmlidXRlcyB0byBiZWluZyBhIHdvcnNlIGFjdGl2ZSBvciBwYXNzaXZlIGxpc3RlbmVyOyB0aGUgZWZmZWN0IGdvZXMgYXMgZmFyIGFzIGEgbWFuIG9yIHdvbWFuIGJyYWluIGJlaW5nIGFibGUgdG8gYXBwcm94aW1hdGUgZmVydGlsaXR5IGFuZCBhZGp1c3QgYWNjb3JkaW5nbHkuIE1lbiBhbmQgd29tZW4gYWxzbyBjaGFuZ2UgdGhlIHRvbmVzIGFuZCBwaXRjaCBvZiB0aGVpciB2b2ljZXMgc3ViY29uc2Npb3VzbHkgZGVwZW5kaW5nIG9uIGlmIHRoZXkgY29tbXVuaWNhdGluZyB3aXRoIGEgbWFuIG9yIHdvbWFuIGluIHRoZSBzYW1lIHNvcnQgb2YgYmlvbG9naWNhbCByZXNwb25zZS4uIApFdmVyeSBwbGF5ZXIgbXVzdCBwbGFjZSBhbiBhbnRlIGludG8gdGhlIGNlbnRlciBvZiB0aGUgdGFibGUsIGtub3duIGFzIHRoZSBwb3Qgd2hlcmUgYWxsIG9mIHRoZSB3YWdlcmVkIG1vbmV5IGlzIHN0b3JlZC4gVGhlIGFudGUgaXMgYSB0b2tlbiBiZXQgdGhhdCBhbGwgcGxheWVycyBzaG91bGQgYWdyZWUgb24gYXMgdGhlIG1pbmltdW0gdG8gYmUgZGVhbHQgaW4uIE9uY2UgdGhlIGFudGUgaXMgcGxhY2VkIGluIHRoZSBwb3QsIGd1YXJhbnRlZWluZyB0aGF0IHNvbWVvbmUgd2lsbCB3aW4gc29tZXRoaW5nIGFuZCBzb21lb25lIHdpbGwgbG9zZSBzb21ldGhpbmcsIHBsYXkgcmVhbGx5IGJlZ2lucy4KU28gY2hlY2sgdGhlIHJ1bGVzIG9mIHdoYXRldmVyIGtpbmQgeW91IGFyZSBwbGF5aW5nIHRvIGtub3cgaG93IG1hbnkgb2YgdGhlIGNhcmRzIGluIHlvdXIgaGFuZCBuZWVkIHRvIGJlIGNvbWJpbmVkIHdpdGggaG93IG1hbnkgb24gdGhlIHRhYmxlLCBidXQgdGhlIGZvdXIgb2YgYSBzcGVjaWZpYyBudW1iZXIgb3IgbGV0dGVyIHdpbGwgYmUgdGhlIHNhbWUuIFRoZSBBcyBvciA2cyBvciB3aGF0ZXZlciB3aWxsIGJlIGRpZmZlcmVudCBzdWl0cywgYnV0IGFzIGxvbmcgYXMgdGhleSBhbGwgaGF2ZSBBcywgdGhlbiB5b3UncmUgZ29vZC4gCjEwLzEwLiAKTydDb25ub3IgY2hhcmdlcyAkMzUgcGVyIGhvdXIgYW5kIG1vcmUgZm9yIHBldHMgd2hvIGhhdmUgc3BlY2lhbCBuZWVkcyBhbmQgc2l0cyBmb3IgZml2ZSB0byAyNSBwZXRzIHBlciB3ZWVrLiAKVGhlIGRpZmZlcmVuY2VzIGNhbiBiZSB0aG91Z2h0IG9mIGFzIGVpdGhlciBleHBhbnNpb24gb2Ygd29tZW4gcmlnaHRzIG9yIHRoZSBjdXJ0YWlsbWVudCBvZiBtZW4gcmlnaHRzIGFuZCB3aGljaCBhcHByb2FjaCBzaG91bGQgYmUgdXNlZCB3aGVyZS4gVGhlcmUgYXJlIGFsc28gYXJlYXMgaW4gd2hpY2ggdGhlIGRpc2N1c3Npb24gbmVlZHMgdG8gZ28gdGhlIG90aGVyIHdheSAgIGNoaWxkIGN1c3RvZHkgYmVpbmcgbm90YWJsZS4KUHJlcGFyZSBmb3IgYSBuaWdodCBvZiB2aXN1YWwgdHJlYXQuIERvIG5vdCB1c2UgYSBsb3Qgb2Ygd29yZHMuIApNYXliZSB0aGUgbGF3eWVyJ3MgY2xhaW0gYXJlIGV4Y2x1ZGVkIGFzIGhlYXJzYXkuIEJ1dCBJJ20gbm90IHNlZWluZyB0aGUgdGFpbnQgaXNzdWUsIHRoZSB3YXkgSSB3b3VsZCBpZiB0aGUgbGF3eWVyIGhhZCBiZWVuLCBzYXksIHRvcnR1cmVkIGludG8gcmV2ZWFsaW5nIGNsaWVudCBjb25maWRlbmNlcy4KRnJpZW5kIGhhZCBmYWxsZW4gb2ZmIGhlciBsb25nIGJvYXJkIGEgZmV3IGRheXMgcHJpb3IgYW5kIGhhZCBhIHByZXR0eSBuYXN0eSBibGFjayBleWUuIFRoZSBsaXR0bGUgc2lzdGVyIHdhcyBpbiBneW1uYXN0aWNzIGFuZCBoYWQgaW5qdXJlZCBoZXIgYXJtIHJlY2VudGx5IHRoZW4gYXMgd2VsbCBhbmQgd2FzIGluIGFuIGFybSBzbGluZy4gCk4uLCBNaW5uZWFwb2xpcy4gCkFteSdzIENvbWV1cHBhbmNlIERlbmlhbGlzbSBIb3NwaXRhbCBCaXJ0aCBJbiBQcm9ncmVzcyBvbiB0aGUgV2ViIEF2b2lkIEgxTjEgd2l0aCBWaXRhbWluIEQgU3VwcGxlbWVudGF0aW9uIE1lZEZha2U6IEhvc3BpdGFsIEJpcnRoIEdvbmUgQXdyeTogSXMgVGhpcyBUeXBpY2FsPyBNZWRzY2FwZSBBcnRpY2xlICAgOS8yOS8wOSAgIFNsYW1taW5nIEhvbWViaXJ0aCAgYWdhaW4gIEhvdyBIb21lYmlydGggSGVscHMgQXZvaWQgdGhlIEgxTjEgVmlydXMgV2hhdCBEb2Vzbid0IEZlZWwgUmlnaHQsIElzbid0IFJlIFdyaXRpbmcgUHJvZ3Jlc3MgKG9kZCkgUmUgd3JpdGluZy4gSnVzdCBiZWNhdXNlIGl0J3MgdGhlIHN0YW5kYXJkIG9mIGNhcmUuIApJdCBpcyBub3QgZmFpciB0byB5b3UsIGFuZCB3aGlsZSBzb21lIG9mIHNhY3JpZmljZSBpcyB0byBiZSBleHBlY3RlZCwgaXQgc291bmRzIGxpa2UgaXQgYmVlbiB0YWtlbiB0byB0aGUgZXh0cmVtZSBpbiB5b3VyIGNhc2UuIApPbmUgb2YgdGhlIGJlc3QgYW5uaXZlcnNhcnkgZGVzdGluYXRpb25zIGlzIE5ldyBZb3JrLCB0aGUgY2l0eSB0aGF0IG5ldmVyIHNsZWVwcy4gVGhlcmUgYXJlIG1hbnkgdGhpbmdzIHlvdSBhbmQgeW91ciBwYXJ0bmVyIGNhbiBkbyBpbiBOZXcgWW9yay4gCldoZW4gaXQncyBuaWNlIG91dCBhbmQgSSBoYXZlIGEgZmV3IGRheXMgb2ZmLCBJJ2xsIGhpa2Ugb3V0c2lkZS4gSSdkIHBsYXkgcG9rZXIgYXQgbXkgbG9jYWwgY2FzaW5vIG1vcmUgYnV0IGl0IGdldHMgZXhwZW5zaXZlIGZhc3QuIApGb3VyIFNlYXNvbnMgZmlyZXMgZmFtZWQgY28KQmVjYXVzZSBhZnRlciBhbiBpbmNpZGVudCBsaWtlIHRoYXQgYm90aCBvZiB5b3VyIGNvcnRpc29uZSBsZXZlbHMgYXJlIHJlYWxseSBoaWdoLiAKVGhpcyByZW1pbmRzIG1lIG9mIHRoZSB3b3JzdCBwaWNrdXAgbGluZSBzb21lb25lIGV2ZXIgYXR0ZW1wdGVkIG9uIG1lLiAiUm9zZXMgYXJlIHJlZCwgdmlvbGV0cyBhcmUgYmx1ZS4gV2UncmUgZ29pbmcgdG8gaGF2ZSBzZXgsIGN1eiBJJ20gc3Ryb25nZXIgdGhhbiB5b3UuIgoiQmVnaW5uaW5nIGluIEF1Z3VzdCAyMDEzLCByZWd1bGF0aW9uIG9mZmljZXJzIGZyb20gdGhlIE1HQ0IgcmVzcG9uZGVkIHRvIGNvbXBsYWludHMgb2YgJ3N1c3BpY2lvdXMgZ2FtaW5nIGFjdGl2aXRpZXMnIGFuZCByZXBvcnRzIG9mIGNoYXJpdGllcyBiZWluZyByZXF1aXJlZCB0byB1bmxhd2Z1bGx5IGRpdmVydCB0aGVpciBwcm9jZWVkcyB0byBhZ2VudHMgb3IgZW1wbG95ZWVzIG9mIHRoZSBsb2NhdGlvbiBpbiBleGNoYW5nZSBmb3IgYmVpbmcgc2NoZWR1bGVkIGZvciBldmVudHMgYXQgdGhlIFBhbGFjZSBQb2tlciBSb29tLCIgc3RhdGVzIGEgV2VkbmVzZGF5LCBPY3QuIDMwLCByZWxlYXNlIGZyb20gdGhlIGdhbWluZyBjb250cm9sIGJvYXJkLi4gClRoZSBwZXJzb24gd2hvIGNhbWUgY2xvc2VzdCB0byBob3cgSSBmZWx0IHdhcyBMYXJhIEFnbmV3LCBhIGRvY3VtZW50YXJ5IGZpbG0gbWFrZXIuIHNwZW50IG15IGxpZmUgY29tbWVudGluZyBvbiB0aGUgZmFicmljIG9mIHNvY2lldHksIHNoZSBzYWlkLiB3YW50IHRvIGJlIGluIHRoZSBmYWJyaWMgb2Ygc29jaWV0eSwgbm90IG91dHNpZGUgbG9va2luZyBvbi4gb2YgdGhlbSBoYXZlIGdpdmVuIHVwIGEgZ29vZCBkZWFsIHRvIGRvIHRoaXMuIE9uZSBvZiB0aGUgYmFua2VycyB0b2xkIG1lIGluIGEgbWF0dGVyIG9mIGZhY3Qga2luZCBvZiB3YXkgdGhhdCBoaXMgdGVhY2hpbmcgc2FsYXJ5IHdvdWxkIGJlIDk5IHBlciBjZW50IGxlc3MgdGhhbiB3aGF0IGhlIHVzZWQgdG8gbWFrZSBpbiBhIGdvb2QgeWVhciBhcyBhIHRyYWRlci4KSWYgeW91IGtpdHRlZCBvdXQgY29ycmVjdGx5IHlvdSBzaG91bGQgYmUgYXQgdGhlIHZlcnkgbGVhc3QgbGVhc3QgNjgwLzcwMCBLIHNxdWFkIHBvd2VyIGFuZCB0aGF0IHdpbGwgZ2V0IHlvdSB1cCB0byB0aGUgZmlyc3Qgb2YgdGhlIGxhc3QgZ29sZGVuIGZpZ2h0ZXJzIGluIHRoZSBnZW0gYmF5IHdoaWNoIGlzIGdvb2QgZW5vdWdoIGZvciB0aGUgbW9tZW50LgpTZSBmYWlyZSBkZXMgY2FkZWF1eApSaXRjaGllLCBUcm9sbHosIFR3ZWx2ZSBNaWxlIFJvYWQsIENhaXRsaW4ncyBXYXksIENTSSwgU3VwZXJuYXR1cmFsLCBhbmQgSm9obiBUdWNrZXIgTXVzdCBEaWUuIENhdGNoIGhlciBub3cgaW4gdGhlIGp1c3QgcmVsZWFzZWQgQXN0ZXJvaWQ6IEZpbmFsIEltcGFjdCwgYW5kIGhlciB1cGNvbWluZyBtb3ZpZSBXQVJDUkFGVCBkdWUgb3V0IGxhdGVyIHRoaXMgeWVhckFubmEgVmFuIEhvb2Z0IHBsYXlzIEF1cmEgaW4gdGhlIFNjaSBGaSBDaGFubmVsIG1vZGVybiBkYXkgcmVtYWtlIG9mIHRoZSBjbGFzc2ljIGNvbWljIHNlcmllcyBGbGFzaCBHb3Jkb24uIFNoZSBpcyB0aGUgc3Ryb25nIHdpbGxlZCBkYXVnaHRlciBvZiB0aGUgZXZpbCBkZXNwb3QgTWluZywgYW5kIGhlciBiZWF1dHkgb2Z0ZW4gbGVhZHMgb3RoZXJzIHRvIHVuZGVyZXN0aW1hdGUgaGVyLiAKS2VlcCBhc2tpbmcgZm9yIGFkdmljZSBmcm9tIHBlb3BsZSwgYW5kIGlmIHNvbWVvbmUgb2ZmZXJzIHlvdSBoZWxwIHRoZW4gYXNrIGZvciBhIG1lYWwgZm9yIHBvc3RwYXJ0dW0gb3Igb24gYmVkIHJlc3QuIApUZWl0ZWwgYWNrbm93bGVkZ2VkIHRoYXQgdGhlIGluaXRpYWwgZXVwaG9yaWEgYXJvdW5kIEhRIFRyaXZpYSBoYXMgc2V0dGxlZCBkb3duLCBidXQgY2xhaW1zIHRoZSBhcHAgc3RpbGwgY29tbWFuZHMgdGhlIGxhcmdlc3QgbGl2ZSBhdWRpZW5jZSBvbiBtb2JpbGUgcGhvbmVzLiBIUSBUcml2aWEgZG9lcyBub3QgcmV2ZWFsIGl0cyBhdmVyYWdlIGRhaWx5IGF1ZGllbmNlLCBidXQgVGVpdGVsIHNheXMgdGhlIGFwcCBjYW4gc3RpbGwgZHJhdyA1MDAsMDAwIHRvIDIuNCBtaWxsaW9uIHBlb3BsZSBkZXBlbmRpbmcgb24gdGhlIHByaXplIHBvb2wgYW5kIG90aGVyIHByb21vdGlvbmFsIGVmZm9ydHMuCkV0IHJlcG9ydGVzIHZvdXMgIGxhIGZpY2hlIG51dHJpdGlvbm5lbGxlcyBkb250IHZvaWNpIHVuIGFwZXJ1IHBvdXIgbGEgcGFydGllIHZpdGFtaW5lIGR1IGdyb3VwZSBCIDpDdCBhbXJpY2FpbiBsYSBCMSBjJ2VzdCAxMjUgbWcsIHByZXNxdWUgMTAwIGZvaXMgcGx1cy4gU2kgb24gdHJvdXZlIHF1ZSBjJ2VzdCBleGFnciBvbiBwZXV0IHByZW5kcmUgMiBvdSAzIGNvbXByaXMgY2UgcXVpIHJkdWlyYWl0IGxlIGNvdCAgdW4gb3JkcmUgZGUgMTUgIDIwIHBhciBtb2lzLiBQb3VyIGp1c3RpZmllciBsZSBjb3QgZmFyYW1pbmV1eCBkZSBzb24gcHJvZHVpdCBWZW5lc3NvbiBwcnRlbmQgcXVlIHNvbiBtdWx0aXZpdGFtaW5lICJsaXRpc3RlIiBncm91cGVyYWl0IGVuIGZhaXQgcGx1c2lldXJzIGNvbXBsbWVudHMgc3BjaWFsaXNzLiAKSSdtIGFsd2F5cyBvcHBvc2VkIGZyb20gdGFraW5nIGZyb20gaW52ZXN0bWVudHMgICBlc3BlY2lhbGx5IG9uZXMgd2hlcmUgeW91IGNhbid0IGdldCB0aGUgY29udHJpYnV0aW9uIHJvb20gYmFjay4KSmFtZXN0b3duIG1hbiB3aW5zIE4KVGhlcmUncyBldmVuIGEgYml0IG9mIHNwZWFrZXIgZW5oYW5jZWQgZXhoYXVzdCBub3RlIHRvIGFkZCBzb21lIHNwb3J0eSBjaGFyYWN0ZXIuLiAKSSB3YXMgcmluZ2luZyBhIGNvbGxlZ2Uga2lkcyBvcmRlciB1cCBhbmQgaGUgZ290IHRoYXQgYmxhbmsgc3RhcmUgb24gaGlzIGZhY2UgYW5kIGp1c3QgbG9va2VkIGF0IG1lIHdpdGggYWxtb3N0IGRlYWQgbG9va2luZyBleWVzLiBBcyBJIHdhdGNoZWQgaGltIHN0YXJ0IHRvIGdvIGRvd24gSSB0b2xkIHRoZSBjdXN0b21lciBiZWhpbmQgaGltIHRvIGRpYWwgOTExIGFuZCB0aGUgY2FzaGllciBiZWhpbmQgbWUgdG8gcGFnZSBhbGwgYXZhaWxhYmxlIG1hbmFnZW1lbnQgdG8gbXkgcmVnaXN0ZXIuIApGaXJzdCBkaXJlY3QgbWFpbCBjYW1wYWlnbiBmcm9tIGRyaXZpbmcgZm9yIGRvbGxhciBsZWFkcwpJbiB0aGVpciBjYXBhYmxlIGhhbmRzIChmaWd1cmF0aXZlbHkgYW5kIGxpdGVyYWxseSksIFNhbmN0dWFyeSdzIGN1c3RvbWVycyByZWNlaXZlIG9uZSBvbiBvbmUgYXR0ZW50aW9uIGluIHRoZSB3YXJtbHkgbGlnaHRlZCBzcGFjZS4gVGhlIHNwYSdzIHN0cmVzcyBmcmVlIGVudmlyb25tZW50IHNlcnZlcyBhcyBhIGJyaWVmIGJ1dCByZXdhcmRpbmcgZ2V0YXdheSBhZnRlciBhIGxvbmcgZGF5IG9yIHdlZWsgb2Ygd29yay4gQnV0IFNhbmN0dWFyeSdzIHRydWUgbWFyayBvZiBleGNlbGxlbmNlIGlzIGhvdyB0aGUgc3RhZmYgdHJlYXRzIHRoZSBib3lmcmllbmRzLCBodXNiYW5kcywgYW5kIGZyaWVuZHMgd2hvIGFyZSBqdXN0IHRoZXJlIGZvciBjb21wYW55LiAKQSAxOTk0IHN0dWR5IGlzIGluZGljYXRpdmUgb2YgdGhpczogUGFydGljaXBhbnRzIGRpZCBlaXRoZXIgMjAgd2Vla3Mgb2YgYWVyb2JpYyB0cmFpbmluZyBvciAxNSB3ZWVrcyBvZiBpbnRlcnZhbHMgKDE1IHNwcmludHMgZm9yIDMwIHNlY29uZHMgZWFjaCkgYW5kIGxvc3QgbmluZSB0aW1lcyBtb3JlIGJvZHkgZmF0IGFuZCAxMiBwZXJjZW50IG1vcmUgdmlzY2VyYWwgYmVsbHkgZmF0IHRoYW4gdGhlIGFlcm9iaWMgZ3JvdXAuLiAKVGhhdCBkb2VzbiBpbnRlcmVzdCBtZS4gCkl0IHN0YW5kcyB0aGVyZSB3YWl0aW5nIHVudGlsIEkgYmFuZyBhIHN0aWNrIGFnYWluc3QgdGhlIHdhbGwgdG8gc2NhcmUgaXQgYXdheS4gCldoZW4gYW4gZW5vcm1vdXMgbWFuIHdpdGggY2FsdmVzICJhcyB0aGljayBhcyB0cmVlIHRydW5rcyIgc2VsZWN0ZWQgTXVyYWQgYXMgaGlzIHNsYXZlLCBzaGUgc2NyZWFtZWQgYW5kIHRyaWVkIHRvIHB1bGwgYXdheS4gIkhpcyBleWVzIHdlcmUgc3VuayBkZWVwIGludG8gdGhlIGZsZXNoIG9mIGhpcyB3aWRlIGZhY2UgSGUgZGlkbid0IGxvb2sgbGlrZSBhIG1hbiAgIGhlIGxvb2tlZCBsaWtlIGEgbW9uc3Rlci4iIFdoZW4gc2hlIHNwaWVkIGEgc2tpbm5pZXIgbWFuJ3MgY2FsdmVzIGZyb20gaGVyIHBsYWNlIG9uIHRoZSBncm91bmQsIHNoZSBiZWdnZWQgaGltIHRvIHRha2UgaGVyLCBob3BpbmcgaGlzIHNsaWdodCBzaXplIG1pZ2h0IHNhdmUgaGVyLiAiU2hlJ3MgbWluZSwiIHRoZSBza2lubnkgbWFuIHRvbGQgdGhlIGxhcmdlciBtYW4uIApJIGxvdmVkIHRoZSBtaXJyb3JzIGZ1bGwgY292ZXJhZ2Ugb24gb25lIHdhbGwgYW5kIG9uIHRoZSBjZWlsaW5nLiAKQWxzbywgZm9yIHRoZSB0b3VyaXN0IHBsYWNlIGFuZCBoaWRkZW4gYXR0cmFjdGlvbnMsIG1pbmQgaWYgSSBhbHNvIGFzayB3aGVyZSBpcyBhIHBsYWNlIEkgY2FuIHNldCB1cCBzbyBJIGNhbiBhbHNvIHRha2UgcGhvdG9zIG9mIHlvdXIgYmVhdXRpZnVsIGNvdW50cnkuIEkgcGxhbm5pbmcgdG8gdGFrZSB3aWRlIGFuZ2xlIHNob3RzIGFuZCBwcm9sbHkgbG9uZyBleHBvc3VyZSBvbmVzLiBJIHByb2xseSBzY291dCB0aGUgYXJlYSBhcyB3ZWxsIGJ1dCBpZiB5b3UgZ3V5cyBjYW4gcmVjb21tZW5kIHdoZXJlLCB0aGF0IHdvdWxkIGJlIGEgYmlnIGhlbHAgYWxyZWFkeSEgaGVoZWhlQWxzbywgaWYgdGhlcmUgYXJlIG90aGVyIGdyZWF0IHRoaW5ncyB0byBkbyBpbiBTaW5nYXBvcmUgb24gYSBidWRnZXQsIHBsZWFzZSBub3RlIHRoZW0gYmVsb3chIDopLiAKTm8gYXNraW5nIG9yIG9mZmVyaW5nIG9mIGdpZnRzLCBtb25leSwgZG9uYXRpb25zLCBldGMuIE5vIEdvRnVuZE1lLCBjcm93ZHNvdXJjaW5nIG9yIGZ1bmRyYWlzaW5nIHNpdGVzLgpUbyBhbiBleHRlbnQsIEkgd291bGQgc2F5IHllcywgYnV0IG9ubHkgYmVjYXVzZSBsYXp5IHN1YiBndXlzIGFyZSBtb3JlIHZvY2FsIGFib3V0IGxvb2tpbmcgZm9yIGEgZ2lybCB0aGFuIGxhenkgc3ViIGdpcmxzIGFyZSBhYm91dCBsb29raW5nIGZvciBhIGd1eS4KSGUgZXhwbGFpbmVkOiAiSSdtIGFpbWluZyB0byBhdHRyYWN0IHBlb3BsZSB3aG8gd2FudCBhIGdpZnQgZXhwZXJpZW5jZSAgIGEgaHVzYmFuZCBhbmQgd2lmZSBmcm9tIHRoZSBjaXR5LCBtYXliZSwgd2hvIGp1c3QgbmVlZCB0byBnZXQgYXdheSBmcm9tIGl0IGFsbC4gVGhleSdkIGhhdmUgc2hvcnQgYnJlYWtzIGluIHdoaWNoIHRoZXkgc3RheSBpbiB0aGUgY2FiaW4sIGNvbWUgYW5kIHdvcmsgd2l0aCB1cyBvbiB0aGUgRnJpZGF5IGFuZCBTYXR1cmRheSwgbGVhcm4gYmFzaWMgaXJvbndvcmsgYW5kIG1ha2Ugc29tZXRoaW5nIHRvIHRha2UgYXdheSwgc3VjaCBhcyBhIHBva2VyOyB0aGVuIG9uIFN1bmRheSB0aGV5IGNhbiBleHBsb3JlIG91ciBsb2NhbCBjb3VudHJ5c2lkZS4iCklmIGhlIGRlY2lkZXMgdG8gdGFrZSBhIHdvbWFuIG9uIGEgcm9tYW50aWMgaXNsYW5kIHZhY2F0aW9uIGFuZCBwdXRzIGl0IG9uIGEgY3JlZGl0IGNhcmQsIHRoYXQgbWFyaXRhbCBkZWJ0IGFuZCBzaGUgY291bGQgdmVyeSB3ZWxsIG93ZSBoYWxmLiBTaGUgbmVlZHMgdG8gc3RhcnQgdGhlIGJhbGwgcm9sbGluZyB0byBwcm90ZWN0IGhlcnNlbGYuIE9uY2UgcGFwZXJzIGFyZSBmaWxlZCwgdGhleSBhcmUgbGVnYWxseSBzZXBhcmF0ZWQgYW5kIHNoZSB3b3VsZG4gYmUgbGlhYmxlIGZvciB3aGF0ZXZlciBmb29sIGNob2ljZXMgaGUgbWF5IG1ha2UuLiAKUmVhbGx5IGtpbmQgb2YgYSBzY2VuZSBib29zdGVyIGFuZCByZWFsbHkganVzdCBraW5kIG9mIGEgY2VsZWJyYXRpb24gb2YgZW50cmVwcmVuZXVyc2hpcC4gSG9wZWZ1bGx5IGl0IGdpdmVzIHNvbWUgaW5zcGlyYXRpb24gYW5kIGVkdWNhdGlvbiBhbmQgcmVhbGx5IGp1c3Qga2luZCBvZiBnZXRzIHBlb3BsZSByYWxseWluZyBhcm91bmQgdGhpcyB3aG9sZSBpbml0aWF0aXZlIGluIG91ciBjaXR5LiBBZGFtIENvb21lcwpPcmlnaW5hbGx5IHBvc3RlZCBieSBSb2IgR2lsbGVzcGllOgpKb3NlIEdvbmNhbHZlcyBiYWNrICBGb3IgdGhlIGZvcmVzZWVhYmxlIGZ1dHVyZS4gCkxheWxhIGhhcyBiZWVuIHRlYWNoaW5nIHNpbmNlIDIwMTEsIGhhcyBjb21wbGV0ZWQgNCB5b2dhIHRyYWluaW5ncyBpbiBBc2h0YW5nYSBhbmQgVmlueWFzYSB0ZWFjaGluZyBtZXRob2RzLCBhbmQgaXMgNTAwIGhvdXIgY2VydGlmaWVkLiBTaGUgdGVhY2hlcyB3aXRoIGEgZm9jdXMgb24gZm91bmRhdGlvbiBhbmQgaW50ZWdyaXR5IGluIGV2ZXJ5IHBvc2UgdG8gZ3VpZGUgc3R1ZGVudHMgaW50byBhbiBleHBlcmllbmNlIHRoYXQgYWxsb3dzIHRoZW0gdG8gZ3JvdyB3aGlsZSBmZWVsaW5nIGdyZWF0IGluIHRoZWlyIGJvZHkgYW5kIG1pbmQuIFNoZSBlbmNvdXJhZ2VzIHN0dWRlbnRzIHRvIGV4cGxvcmUgdGhlaXIgZWRnZSBidXQgYWxzbyBudXJ0dXJlIHdoYXRldmVyIGl0IGlzIHRoZXkgbmVlZCBpbiBlYWNoIG1vbWVudCBhbGxvd2luZyBlYWNoIHBlcnNvbiB0aGUgc3BhY2UgdG8gbGV0IHRoZSBwcmFjdGljZSB3b3JrIGZvciB0aGVtIGFuZCB0aGVpciBpbmRpdmlkdWFsIG5lZWRzIGFuZCBkZXNpcmVzLiAKVGhpcyByZXZpZXcgc2hvdWxkIGludm9sdmUgdGhlIHBoYXJtYWNldXRpY2FsIGNvbXBhbmllcywgaW5kZXBlbmRlbnQgcmVzZWFyY2ggb3JnYW5pc2F0aW9ucywgY2hhcml0YWJsZSBvcmdhbmlzYXRpb25zIHRoYXQgZnVuZCByZXNlYXJjaCwgY2xpbmljYWwgdGVhbXMgcnVubmluZyBzdHVkaWVzIGFuZCBtb3N0IGltcG9ydGFudGx5IGFjdHVhbCBwYXRpZW50cy4gClBva2VyIFN0YXJzClRoZSBpZGVhIGJlaGluZCBTZXF1ZW5jZSBpc24ndCBhIG5ldyBvbmUsIGF0IGxlYXN0IGZvciBtYW55IGdhbWUgZW50aHVzaWFzdHMgaW4gdGhlIHNvdXRoZWFzdGVybiBVbml0ZWQgU3RhdGVzLiAKR2VybWFucyBvdmVyIHVzZSAidW50aWwiIGEgbG90IGluIEVuZ2xpc2gsIHVzaW5nIGl0IGluIGNvbnRleHRzIHdoZXJlIGEgbmF0aXZlIEVuZ2xpc2ggc3BlYWtlciB3b3VsZCB1c2UgImJ5IiBvciAidG8iLiBPdGhlciB0aGFuIHRoZSBHZXJtYW4gc3R5bGUgY29tbWFzIGluIHRoZWlyIHdyaXR0ZW4gRW5nbGlzaCwgdGhpcyBpcyBvbmUgb2YgdGhlIGJpZ2dlc3QgY2x1ZXMgdG8gbWUgdGhhdCBzb21ldGhpbmcgaXMgd3JpdHRlbiBieSBhIEdlcm1hbi4gVGhleSBhbHNvIHRlbmQgdG8gZWl0aGVyIG92ZXIgIG9yIHVuZGVyIHVzZSB0aGUgcHJlc2VudCBwZXJmZWN0LCBpbiBteSBleHBlcmllbmNlLCBidXQgdGhhdCBhIGJpdCBtb3JlIHN1YmplY3RpdmUgdG8gYXNzZXNzLCBzaW5jZSB0aGUgdHdvIGNhbiBvZnRlbiBiZSBzdWJzdGl0dXRlZCB3aXRoIG9ubHkgbWlub3IgZGlmZmVyZW5jZXMgaW4gRW5nbGlzaC4gClRoZSBwbGF5ZXJzJyBvYmplY3RpdmUgaXMgdG8gZGVmZWF0IHRoZSBob3VzZSBvciB0aGUgYmFua2VyICggdGhlIGJhbmtlciBjYW4gYmUgdGhlIGNhc2lubyBkZWFsZXIgb3IgYW55IG9mIHRoZSBwbGF5ZXJzIG9mIHRoZSB0YWJsZSkuLiAKSyBnYW56IG9yZGVudGxpY2gsIHdlbm4gYXVjaCBuaWNodCBzdGVybmV2ZXJkIEFiZXIgZGFzIEFtYmllbnRlIHN0aW1tdCBlaW5mYWNoLiAKUmV5bm9sZHMgZ290IGEgcmV0dXJuIGVuZ2FnZW1lbnQgYWZ0ZXIgYmVpbmcgdGhlIGhpZ2hlc3QgcmF0ZWQgQU5BIHByZXNlbnRlciBsYXN0IHllYXIsIHRoYW5rcyB0byBiZWluZyBmdW5ueSBhbmQgZGlzYXJtaW5nbHkgaG9uZXN0LiBUaGlzIHllYXIgaGUgdHJpZWQgdGhhdCBhcHByb2FjaCBhZ2Fpbi4gCkphLCBzbyBpc3QgZXMgbWlyIHBlcnNubGljaCBhdWNoIGF1ZmdlZmFsbGVuOiB3ZW5uIGplbWFuZCB3YXMgZGF6dSBzYWd0LCBkYW5uIG1laXN0IGFuZGVyZSBGcmF1ZW4sIHVuZCBkYSBhdWNoIGVyc2NocmVja2VuZCB2aWVsZSwgZGllIGljaCBrZW5uZSBiencgbWl0IGRlbmVuIGljaCBiZWZyZXVuZGV0IGJpbi4gCkdpYnN0IER1IGRpY2ggd2FocmxpY2ggZGVtIElycmdsYXViZW4gaGluLCBzb25kZXJnbGV5Y2hlbiBEZXBwZXNjaGVuIGFuIGRhcyBQdWJsaWt1bSByaWNodGVuIHp1IHZlcm1nZW4gaW1zdGFuZGUgenUgc2V5bj8gQmVkZW5rIGRleW5lbiBJcnJ0dW0sIERpcm5lbmJvY2shIEp1c3QgYWxzIGR1IGRpZXNlciBaZXlsZW4gbGVzZW5kIGFuc2ljaHRpZyB3aXJzdCwgZmFuZCBtZWluZSBjb25ncmVnYXRpbyBvY2N1bHRhIHZvbiBSbmtlc2NobWllZGVuIGluIGFsbGVuIFJlaWNoc2xhbmRlbiBiZXJleXRocyBkaWUgTGFnZSBkZXluZXIgU2Nob2xsZSwgYWxzbyBlcndhaHJ0aGUgZGVuIFN0dXJtLCBkdSBTY2h3ZWluZWh1bmQuIApEaiB2b3F1IHBhciBsZSBwcmZldCwgSi4gCk5vdCBvbmUgdG8gYWJ1c2UgaXQsIGJ1dCBhbHNvIG5vdCBvbmUgdG8gZG8gdG9vIG11Y2ggdGhhdCBoZSBkaWRuIGhhdmUgdG8uLiAKU3VwcG9ydGluZyB2ZWdhbiByZXN0YXVyYW50cyBpcyBlYXN5LiBBbGwgb2YgbXkgb21uaSBmcmllbmRzIGFuZCBmYW1pbHkgZG8gaXQuIFlvdSBjb3VsZCBtYWtlIHRoZSBzd2l0Y2ggb3Zlcm5pZ2h0LiBJIGF0ZSBiYWNvbiBldmVyeSBzaW5nbGUgbW9ybmluZyBmb3IgYnJlYWtmYXN0IHdoZW4gSSB3YXMgaW4gY29sbGVnZSwgYW5kIG9uIGEgc2luZ2xlIGRheSwgSSB0aHJldyBhd2F5IGFsbCBvZiB0aGUgYW5pbWFsIHByb2R1Y3RzIGluIG15IGZyaWRnZSBhbmQgd2VudCB2ZWdhbi4gSXQgbm90IGhhcmQsIGFuZCBpdCBub3QgZXhwZW5zaXZlLgpJZiB5b3Ugd2FudCB0byB0cmFpbiB5b3Vyc2VsZiBpbiBvcmRlciB0byBiZWNvbWUgYSBwb2tlciBkZWFsZXIgaW4gYSBjYXNpbm8sIGJlIGF3YXJlIG9mIHRoZSBmYWN0IHRoYXQgcG9rZXIgZGVhbGVycyBoYXZlIHRvIGtub3cgaG93IHRvIGRlYWwgbW9yZSB0aGFuIG9uZSB2ZXJzaW9uIG9mIHRoZSBnYW1lLCBhY2N1cmF0ZWx5LCBhbmQgdGhhdCBjYXNpbm9zIGFyZSB2ZXJ5IGNvbnNjaW91cyBvZiBmb2xsb3dpbmcgdGhlIHJ1bGVzIG9mIHBva2VyIGFuZCBwcmVmZXIgZGVhbGVycyB0aGF0IGFyZSB0cmFpbmVkIGJ5IGEgZGVhbGVyIHNjaG9vbC4gCkZyYW5rbHkgSSB0aGluayBpdCBhICJjb3Agb3V0IiB0byBzYXkgc2hlIGhhcyB0byBnZXQgb3V0IG9mIHRoZSBtYXJyaWFnZSBiZWNhdXNlIHNoZSBpcyBoYXZpbmcgYW54aWV0eS4gU2hlIG5lZWRzIHRvIGNvbWUgdG8gdGVybXMgd2l0aCBoZXIgZmVlbGluZ3MgYWJvdXQgdGhlIG1hcnJpYWdlLiAKRXJuaWUgZ2F2ZSBwb2xpY2UgYSB2ZXJ5IHdlYWsgYWxpYmkgZm9yIHRoZSBuaWdodCB0aGV5IGJlbGlldmUgaGlzIHBhcmVudHMgd2VyZSBraWxsZWQuIApTcHJvYXQgc2FpZCB0aGV5IGhhdmUgYmVlbiBpbiB0YWxrcyB3aXRoIHRoZSBOSEwgUGxheWVycyBBc3NvY2lhdGlvbiBhbW9uZyBvdGhlcnMgYW5kIGFyZSBnZXR0aW5nIHBvc2l0aXZlIGZlZWRiYWNrLiAKIkFseXNzYT8iIEphbWVzIGFza2VkLiAiWWVzIEphbWVzLCB5b3UgYXJlIGdvaW5nIHRvIGJlIG9rLiIgQmV0d2VlbiBzaGFsbG93IGJyZWF0aHMsIEphbWVzIG1hbmFnZWQgdG8gZXhwbGFpbiB3aGF0IGhhcHBlbmVkLCBhbmQgQWx5c3NhIGdhdmUgQ2hhcmxpZSwgaGVyIGNvbGxlYWd1ZSwgc29tZSBiYWNrZ3JvdW5kIG9uIGhpcyBzaXR1YXRpb24gYXMgd2VsbC4gSXQgd2FzIGNsZWFyIGZyb20gdGhlaXIgZXhwcmVzc2lvbnMgdGhhdCB0aGV5IHJlYWxseSBmZWx0IGZvciBoaW0sIGJ1dCB3ZXJlIG5vdCBzdXJlIHdoYXQgdG8gZG8uIApCdXQgaXQganVzdCBvbmUuIEkgc2Nvb3AgaGltIG91dCBvZiB0aGUgdHViLCBhbmQga2lsbCBoaW0gd2l0aCBhIGNoYW1wYWlnbiBmbHV0ZS4gV2hlcmUgd2FzIEk/IE9oLCB5ZWEuIEkgaG9wIGJhY2sgaW4gdGhlIHR1YiwgYW5kIGFub3RoZXIgd2FzcCBmYWxscyBkb3duIHJpZ2h0IG5leHQgdG8gbWUuClRoaXMgZnJhbmNoaXNlIGhhcyBlbm91Z2ggc3RlYW0gdG8gbWFrZSB0aGlzIGEgdmlhYmxlIGhvbGlkYXkgY29udGVuZGVyLiAKVGhlaXIga2lsbCBkZWNpc2lvbnMgd2lsbCBiZSBjb21wbGV0ZWx5IHdpdGhvdXQgZW1vdGlvbiBhbmQgcHVyZWx5IGFib3V0IHByYWdtYXRpY3MuIApBbGwgaXQgbWVhbnMgaXMgdGhhdCB0aGV5IHNvdWdodCB0byBkaWZmZXJlbnRpYXRlIHJlbGlnaW9uIGFuZCBnb3Zlcm5tZW50LCBhbmQgdG8gZm9ybSBhIGdvdmVybm1lbnQgc2VwYXJhdGVkIGZyb20gcmVsaWdpb3VzIHByYWN0aWNlIGFuZCBvYnNlcnZhdGlvbiwgYW5kIHRvIGVuc3VyZSB0aGF0IHRoZXJlIHdhcyBubyBwcmVmZXJlbmNlIHRvIGFueSBwYXJ0aWN1bGFyIHJlbGlnaW91cyBzZWN0LiAKVGw7ZHI6IEdldCBzb21lIGNvbW1pdG1lbnQgYmVmb3JlIGxldHRpbmcgaGltIG1vdmUgaW4uIFRoYXQgY291bGQgYmUgZW5nYWdlbWVudCwgb3IgaW4gb3VyIGNhc2UgaXQgd2FzIGNvbWJpbmluZyBmaW5hbmNlcywgYnV0IGhhdmUgYSBiaWcgdGFsayBhbmQgbWFrZSBzdXJlIHlvdSBvbiB0aGUgc2FtZSBwYWdlLgpPbWVnYXdvbGYxMDAwICA1OCBwb2ludHMgIHN1Ym1pdHRlZCAyMSBkYXlzIGFnbwpTYXcgaGltIGEgY291cGxlIHNwcmluZyB0cmFpbmluZ3MgbGF0ZXIgYW5kIGhlIHN0b3BwZWQgZm9yIGF1dG9ncmFwaHMgb24gYmFja2ZpZWxkcywgYSByYXJpdHkuIAoxIHBvaW50ICBzdWJtaXR0ZWQgNCBkYXlzIGFnby4gCiAzIHBvaW50cyAgc3VibWl0dGVkIDIgbW9udGhzIGFnb1RoZSBpZGVhIGFuZCBjb25zZW5zdXMgYmFjayBob21lIGlzIFRydW1wIGlzIGN1cnJlbnRseSBlbWJyb2lsZWQgaW4gYSBsb3Qgb2YgcG9saXRpY2FsIHNjYW5kYWxzLCBpbiBhZGRpdGlvbiBoZSBkaWQgcHJvbWlzZSB0byB3aXRoZHJhdyB0cm9vcHMgYWZ0ZXIgdGFraW5nIG9mZmljZSwgaGUgd2FzIHRhbGtlZCBvdXQgb2YgaXQgYnkgU0VDREVGIE1hdHRpcyBpbml0aWFsbHkgaW4gMjAxNywgYnV0IG5vdyB0aGluZ3MgaGF2ZSBjaGFuZ2VkLlRoZSBwb2ludCBpcywgYnkgd2l0aGRyYXdpbmcgdGhlIHRyb29wcyBub3csIGhlIHNhdmVzIGZhY2UgYXQgaG9tZSBhbmQgYWxzbyBkaXZlcnRzIHNvbWUgb2YgdGhlIGF0dGVudGlvbiBvZmYgaGltIHdoaWxlIGFsc28gY29tcGxldGluZyBvbmUgb2YgaGlzIGNhbXBhaWduIHByb21pc2VzLkFzIGZvciBiYWNrZG9vciBkZWFscywgZ2l2ZW4gdGhlIHN1ZGRlbiBhbmQgc3dpZnQgZGVjaXNpb24gdG8gcHVsbCBvdXQsIEkgYW0gc3VyZSBzb21ldGhpbmcgd2FzIGFncmVlZCB1cG9uIGJldHdlZW4gVVMvVHVya2V5L1J1c3NpYSwgYXMgdG8gd2hhdCBpdCB3YXMsIHdlIG1heSBuZXZlciBrbm93LnJlZGRpdHJhc2FsZ2h1bCAgMCBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ29UaGFua3MgZm9yIHRoZSBhbnN3ZXIuIEkgc3RpbGwgdGhpbmsgaXQgaXMgZmlzaHkuIFRydW1wIHNlZW1zIHRvIGJlIGhhcmQgbGluZSBzdXBwb3J0ZXIgb2YgSXNyYWVsIGFuZCBlbmVteSBvZiBJcmFuLCByZWNvZ25pemluZyBKZXJ1c2FsZW0gYXMgY2FwaXRhbCwgcmVpbnN0YXRpbmcgc2FuY3Rpb25zIGFuZCBhbnl0aGluZy4gClRha2luZyBhZHZhbnRhZ2Ugb2YgdGhlIHNpdHVhdGlvbiwgTW9kaSByZXBvcnRlZGx5IHByb3Bvc2VkIHRvIE5hd2F6IFNoYXJpZiBjYW4gd2UgYmUgbGlrZSBsZWFkZXJzIGluIEV1cm9wZSwgd2hvIG1lZXQgZWFjaCBvdGhlciBmb3IgY2FzdWFsIGdldCB0b2dldGhlcnMgYW5kIGNoYXRzPyBUaGUgSmF0aSBVbXJhIHdhcyB0aGUgYmVnaW5uaW5nIG9mIHRoZSBmcmllbmRseSBlbmdhZ2VtZW50LiAKVGhlIHNpdHVhdGlvbiBzaG91bGQgYmUgcGVyZmVjdCBpbiBvcmRlciB0byBtYWtlIHRoZSBzbG93IHBsYXkgdGhlIGJlc3QgcG9zc2libGUgbW92ZS4gCk5vYm9keSBoZXJlIHdhbnRzIHRvIGZvcmNlIHlvdSB0byB0YWtlIGEgY291cnNlIG9mIGFjdGlvbiBmb3Igd2hpY2ggeW91IG5vdCByZWFkeSBvciB3aGljaCB5b3Ugbm90IHdpbGxpbmcgdG8gdGFrZS4gSG93ZXZlciwgYXMgYW4gYWR1bHQsIHlvdSBjb25zaWRlcmVkIGNhcGFibGUgb2YgbWFraW5nIHlvdXIgb3duIGRlY2lzaW9ucyBhbmQgbGl2aW5nIHdpdGggdGhlIGNvbnNlcXVlbmNlcy4gWW91ciBtb3RoZXIgYWJ1c2luZyB5b3UgaXMgbm90IHlvdXIgZmF1bHQ7IHlvdXIgdW53aWxsaW5nbmVzcyB0byB0YWtlIHN0ZXBzIHRvIGVuZCBpdCBpcyB5b3Vycy4uIApNYW5kZXJ6UGFuZGVycyAgMiBwb2ludHMgIHN1Ym1pdHRlZCAyIHllYXJzIGFnbwpUaGUgQnJpc3RvbCBSb2FkIGxvY2F0aW9uICAgd2hlcmUgZ2FtaW5nIHdhcyBzdXNwZW5kZWQgaW4gMjAxMCBmb2xsb3dpbmcgc2ltaWxhciBhbGxlZ2F0aW9ucyAgIGlzIGFsc28gdGhlIHNpdGUgd2hlcmUgYSBmYXRhbCBKdWx5IDIwMDkgc2hvb3Rpbmcgb2YgYSByb2JiZXJ5IHN1c3BlY3QgYnkgZm9ybWVyIEZsaW50IFBvbGljZSBDaGllZiBCcmFkZm9yZCBCYXJza2RhbGUgdG9vayBwbGFjZS4KV2UgZGlkIGEgbGl0dGxlIHJlc2VhcmNoIGJlZm9yZSBjb21pbmcgdG8gdGhlIDIwMCAxMS41ZyBQb2tlciBDaGlwIEhpZ2ggUm9sbGVyIFNldCB3aXRoIENsZWFyIENvdmVyIEFsdW1pbnVtIENhc2UuIApHb3YuIEplcnJ5IEJyb3duIGFwcG9pbnRlZCB0aGUgZWxkZXIgTmV3c29tIHRvIHRoZSBTdXBlcmlvciBDb3VydCBiZW5jaCBpbiBQbGFjZXIgQ291bnR5IGluIDE5NzUgYW5kIGhlIHdhcyBsYXRlciBhcHBvaW50ZWQgdG8gQ2FsaWZvcm5pYSBDb3VydCBvZiBBcHBlYWwsIHdoZXJlIGhlIHNlcnZlZCB1bnRpbCByZXRpcmluZyBpbiAxOTk1LiBIZSB3YXMgYSBsaWZlbG9uZyByZXNpZGVudCBvZiBTYW4gRnJhbmNpc2NvIGFuZCB3ZWxsIGNvbm5lY3RlZCBpbiBTYW4gRnJhbmNpc2NvIHBvbGl0aWNhbCBhbmQgc29jaWFsIGNpcmNsZXMuCkxhdyBlbmZvcmNlbWVudCBoYXNuJ3QgYWx3YXlzIGFncmVlZCB3aXRoIHRoZSBsZWdhbGl0eSBvZiB0aGUgc3dlZXBzdGFrZXMuIFRoZSBUQUJDIGZpbGVkIGFkbWluaXN0cmF0aXZlIGNoYXJnZXMgYWdhaW5zdCBhbiBBdXN0aW4gQW1lcmljYW4gTGVnaW9uIHBvc3QgdGhhdCB3YXMgdXNpbmcgdGhlIHNhbWUgc3dlZXBzdGFrZXMgb3BlcmF0aW9uIGluIDIwMTAuIFRoZSBUcmF2aXMgQ291bnR5IEF0dG9ybmV5IGZpbGVkIGNyaW1pbmFsIGNoYXJnZXMsIHRvby4gQm90aCBsYXRlciBkcm9wcGVkIHRoZSBjaGFyZ2VzLCBidXQgYSBzdWl0IGJ5IHRoZSBBbWVyaWNhbiBMZWdpb24gaXMgc3RpbGwgbWFraW5nIGl0cyB3YXkgdGhyb3VnaCB0aGUgY291cnRzLgpCZXN0IExhcHRvcCBmb3IgT25saW5lIFBva2VyCkkgaGF2ZSBuZXZlciBtZXQgYSBjaGlyb3ByYWN0b3Igd2hvIGRpZG4gd2FudCB0byBkbyBsb3RzIG9mIHggcmF5cyBhbmQgcmVwZWF0ZWQgdmlzaXRzIGZvciBtYW5pcHVsYXRpb25zLiBBbHNvLCBhIGxvdCBvZiBjaGlyb3ByYWN0b3JzIGFyZSBpbnRvIHdvby4gCkdldCB5b3Vyc2VsZiBhIG5pY2UgY2hhaXIgZm9yIG51cnNpbmcvZmVlZGluZywgYW5kIHN0YXJ0IHBsYW5uaW5nIGEgZ29vZCBzcGFjZSBmb3IgdGhlIHNhbWUgb3V0IGluIHlvdXIgbGl2aW5nIHJvb20uIEl0IGlzIG5vdCB3b3J0aCBpdCB0byBoYXZlIHRvIGNvdmVyIHdoaWxlIG51cnNpbmcgaW4gZnJvbnQgb2YgaW4gbGF3cyBvciB0cnkgdG8gZ2V0IGEgYmFieSB0byBzbGVlcCBhcm91bmQgY29tcGFueSwgc28geW91IHdhbnQgYSBnb29kIHNwYWNlIGF3YXkgZnJvbSB0aGUgbGl2aW5nIHJvb20sIGJ1dCB5b3UgZG9uIHdhbnQgdG8gYmUgaXNvbGF0ZWQgd2hpbGUgaXQganVzdCB5b3UrU08rdGhlIGtpZHMgYXQgaG9tZS4gSWYgeW91IGJvdHRsZSBmZWVkaW5nLCBjb25zaWRlciBnZXR0aW5nIGEgbWluaSBmcmlkZ2UgZm9yIGJlc2lkZSB0aGUgc2VhdCB3aGVyZSB5b3UgZmVlZCBiYWJpZXMgdGhlIG1vc3QuIApJZiBJIHJ1biBvbiBhIHRyZWFkbWlsbCB3aXRoIHdlaWdodHMgZm9yIDMwIG1pbiBpcyB0aGF0IG5vIGxvbmdlciBhIGNhcmRpb3Zhc2N1bGFyIGVmZmVjdGl2ZSBleGVyY2lzZT8gQW5kIGRlcGVuZGluZyBvbiBob3cgaGVhdnkgdGhlIHJvcGUgaXMgYW5kIHlvdXIgY3VycmVudCBsZXZlbCBvZiBtdXNjdWxhciBmaXRuZXNzLCB0aGVuIHllcyBza2lwcGluZyBjb3VsZCBiZSBjb25zaWRlcmVkIHJlc2lzdGFuY2UgZXhlcmNpc2UgYXQgdGhhdCBwb2ludC4gRXZlciBoZWFyZCBvZiBiYXR0bGUgcm9wZXM/IE5vdCBhbGwgcmVzaXN0YW5jZSBleGVyY2lzZSBpcyBmb3Igc3RyZW5ndGggb3IgcG93ZXIuIApJIHRvbGQgaGltLCB2ZXJ5IGNsZWFybHkgdGhhdCBpdCB3YXMgbm90IGhhcHBlbmluZyBhZ2Fpbi4gCkkgbm90IHNheWluZyB5IGRpZG4gZG8gYW55dGhpbmcgaW4geW91ciBvd24gZGVmZW5zZSwgSSBqdXN0IHNheWluZyBpZiBJa2UgZGlkbiBzaG93IHVwLCB5b3UgKGFuZCBwcm9iYWJseSB3ZSkgYmUgc3BlYWtpbmcgUnVzc2lhbiByaWdodCBub3cuCldoZW4gc2Vla2luZyBvdXQgcXVhbGl0eSBjYXNpbm8gc3R5bGUgYnJpZGdlIHBsYXlpbmcgY2FyZHMsIHlvdSBzaG91bGQgb3B0IGZvciBuYW1lIGJyYW5kcyBsaWtlICJSYW1hZGEgRXhwcmVzcyIsICJFeGNhbGlidXIiIGFuZCAiSmFtZXMgQm9uZCBDYXNpbm8gUm95YWxlIi4gCkkgZW5qb3llZCBkaWdnaW5nIGRlZXAgaW50byBteSBiYWNrIGFuZCBnbHV0ZXMsIGJ1dCBzb21lIHBhcnRpY2lwYW50cyB3aG8gYXJlIG1vcmUgc2Vuc2l0aXZlIG1heSBmaW5kIGl0IGxlc3MgZnVuIHRoYXQgSSBkaWQuIFRoZSBnb29kIG5ld3MgaXMgeW91IHRvdGFsbHkgY29udHJvbCB0aGUgcHJlc3N1cmUgYW5kIGludGVuc2l0eSB5b3Vyc2VsZi4gVGh1cnNkYXlzIGZvciBhbiBob3VyLgpQYWlyIGlzIGEgc2luZ3VsYXIgbm91biwgc28gd2hlbiBpdCdzIHRoZSBzdWJqZWN0IGl0IHRha2VzIGEgc2luZ3VsYXIgdmVyYjogcGFpciBoYXMgIlRoaXMgcGFpciBvZiBjaGlja2VucyBoYXMgYSBiYWQgYXR0aXR1ZGUuIiBwcmV2aW91cyBhbnN3ZXIgbWlzc2VzIHRoZSBwb2ludCBlbnRpcmVseTogaXQgZGVwZW5kcyBvbiBob3cgaXQgaXMgdXNlZCwgZWc7IFNoZSBoYXMgYSBwYWlyIG9mIHN0b2NraW5ncywgdGhleSBoYXZlIGEgcGFpciBvZiBzdG9ja2luZ3MuIFRoZSBxdWVzdGlvbiBpc24ndCBhc2tpbmcgaWYgaXQncyAiaGFzIGEgcGFpciIgb3IgImhhdmUgYSBwYWlyIi4gCjEsIDIgQXVnIDIwMTIsIDIyOjI0LCBLYXVzaGFsIEJoYXR0LiAKSW4gaXRzIGZpcnN0IHllYXIgdGhlIHNpbmdsZSBkYXkgZXZlbnQgYXR0cmFjdGVkIDEsNzAwIGF0dGVuZGVlcy4gCkNsdXN0ZXIgaGVhZGFjaGVzIGhhdmUgYmVlbiB0cmVhdGVkIHdpdGggc3VtYXRyaXB0YW4sIHN0ZXJvaWRzIChNaWdyYW5hbCkgYW5kIG5hcmNvdGljcy4gCkxlIHRyb2lzaW1lIGRyb2l0IG51bXIgIGwnYXJ0aWNsZSAyIGVzdCBsYSBwcm9wcml0LiAKTWFrZSBpdCBhIHByaW9yaXR5IHRvIHNwZW5kIHRpbWUgdG9nZXRoZXIsIHJlZ2FyZGxlc3Mgb2YgaG93IHlvdSBmZWVsLiBKdXN0IHNlZSB3aGF0IGhhcHBlbnMuIEFjY2VwdCB3aGVyZSB5b3UgYXJlIGF0IHRoYXQgbW9tZW50LgpUaGVyZSBhcmUgdHdvIGluZ3JlZGllbnRzIGluIHRoZSBwcm9kdWN0IHRoYXQgc29tZSB1c2VycyBtYXkgYmUgYWxsZXJnaWMgdG8gICBtZW50aG9sLCB3aGljaCBpcyBhIGNvbXBvdW5kIGZyb20gcGVwcGVybWludCBvaWwgYW5kIGNhbiBwcm9kdWNlIG1pbGQgYW5lc3RoZXRpYyBlZmZlY3RzLCBhbmQgY2FtcGhvciwgYW5vdGhlciBjaGVtaWNhbCBjb21wb3VuZCB0aGF0IGNvbnRhaW5zIGFudGlzZXB0aWMgcHJvcGVydGllcy4gCkwnYWN0aW9uIGRlIGdyY2UsIGMnZXN0IHJlbmRyZSBncmNlLCBkaXJlIGxhIGdyY2UgcXVpIG5vdXMgZXN0IGZhaXRlLCBjJ2VzdCBsYSByZWNvbm5haXNzYW5jZSBkZSBsJ2FjdGlvbiBkZSBEaWV1IHBvdXIgbGUgbW9uZGUsIHBvdXIgbm91cywgcG91ciBtb2kuIApTdGlsbCB3b3JrcyBqdXN0IHRoZSBzYW1lLi4gCiJUaGVyZSBhcmUgd2lubmVycyBldmVyeSBkYXkgb24gdGhlIGZsb29yLCBidXQgaXQncyBub3QgZXZlcnkgZGF5IHRoYXQgYSBqYWNrcG90IHRoYXQgYmlnIGhpdHMsIiBzYWlkIFBoaWwgVHJvZmliaW8sIFNlbmlvciBWaWNlIFByZXNpZGVudCBvZiBDYXNpbm8gT3BlcmF0aW9ucy4gIkNvbmdyYXR1bGF0aW9ucyB0byBhbGwgdGhlIHBsYXllcnMgYXQgdGhlIHRhYmxlLiIKSW4gY29udHJhc3QsIGluIHNlbGYgcGVyc3Vhc2lvbiB0aGVvcnksIHRoZSBkZWdyZWUgb2YgcGVyc3Vhc2lvbiBpcyBsaW5rZWQgdG8gdGhlIHdheSByZWNlaXZlcnMgYmVjb21lIGludm9sdmVkIHdpdGggYW5kIHJlYWN0IHRvIHRoZSBtZXNzYWdlLiBUaG9zZSBmb2xsb3dpbmcgdGhpcyBzY2hvb2wgb2YgdGhvdWdodCBjb250ZW5kIHRoYXQgcmVjZWl2ZXJzIGJlY29tZSBpbnZvbHZlZCB3aXRoIGFuIGFkIGFuZCBlbGFib3JhdGUgb24gdGhlIG1lc3NhZ2UuIFRoZXkgdGFrZSBhbiBhY3RpdmUgcm9sZSBpbiBlc3RhYmxpc2hpbmcgdGhlIGFkdmVydGlzZW1lbnQncyBtZWFuaW5nIGFuZCBwZXJzdWFkaW5nIHRoZW1zZWx2ZXMgdG8gYm9sc3RlciwgYWNjZXB0LCBkaXN0b3J0LCBkZXJvZ2F0ZSBvciByZWplY3QgdGhlIGFkdmljZSBjb250YWluZWQgaW4gdGhlIG1lc3NhZ2UuCk9uIHRoZSB3YXkgb3V0IHRvIHBpY2sgdXAgdGhlIGNhciBJIG5vdGljZSB0aGVyZSBhcmUgYSBmZXcgcG9saWNlbWVuIHN0YW5kaW5nIGFyb3VuZCB0aGlzIGVtcHR5IGxvdCBiYWNrIG9mIGhlciBwbGFjZS4gSSBmaW5kIGl0IHdlaXJkIHRoZXkgc2hvdWxkIGJlIHRoZXJlLCBidXQgdGhleSBqdXN0IHN0YW5kaW5nIGFyb3VuZCwgbm90aGluZyBsb29rcyB1bnVzdWFsIHVudGlsIEkgbm90aWNlIGEgcmVkIHNoaXJ0IGJlbmVhdGggYSB0cmVlIGFib3V0IDEwIG1ldHJlcyBhd2F5LiBBYm92ZSB0aGUgcmVkIHNoaXJ0IGlzIGEgaGVhZCBiZW50IGF0IGFuIGFsbW9zdCA5MCBkZWdyZWUgYW5nbGUuIApUaGF0IGl0LiBBbmQgYmVjYXVzZSB5b3UgYSBmb3JlaWduZXIsIG1hbnkgb2YgdGhlIG1vcmUgY2xvc2UgbWluZGVkIEtvcmVhbnMgc2ltcGx5IGhhdmUgbm8gY29uY2VwdCBvZiByZWFsbHkgaGF2aW5nIHJlc3BlY3QgZm9yIHlvdS4gU28sIGluIG1hbnkgY2FzZXMgYSB3aGl0ZSBwZXJzb24gaGVyZSBpc24gcmVhbGx5IGV4cGVjdGVkIHRvIGJlIGEgdHJ1ZSwgc3RyYWlnaHQgdXAgdGVhY2hlci4gVGhleSBleHBlY3RlZCB0byBiYXNpY2FsbHkgImVkdXRhaW4iLCB3aGV0aGVyIHRoYXQgYmUgc2luZ2luZywgb25seSB0ZWFjaGluZyBzcGVha2luZyAoYW5kIG5vIGdyYW1tYXIpLCBzaGl0IGxpa2UgdGhhdC5BcyBhIGJsYWNrIG1hbGUsIEkgc2VlbSB0byBoYXZlIG1vcmUgbGV2ZXJhZ2UgaW4gdGhlIGNsYXNzcm9vbSBhcyB0aGV5IGRvbiBoYXZlIGV2ZW4gdGhhdCByb2xlIHRvICJwdXQgbWUgaW50byIsIHNvIEkgdXN1YWxseSBkbyB3aGF0ZXZlciBJIHdhbnQgOikxOiBUaGUgb3RoZXIgdHlwZXMgb2YgcmFjaXNtIHRoYXQgd2hpdGVzIHdpbGwgZXhwZXJpZW5jZSB3aWxsIGRlcGVuZCBvbiB0aGUgcGVyc29uIHRoZXkgY29tZSBhY3Jvc3MuIApFdmVuIGlmIFBhY3F1aWFvIG9ubHkgbWFrZXMgMTAgbWlsbGlvbiBkb2xsYXJzIGZyb20gaGlzIGZpZ2h0IHdpdGggQ2xvdHRleSwgMTAgbWlsbGlvbiBkb2xsYXJzIGluIFBhY3F1aWFvcyBoYW5kcyBpbiB0aGUgUGhpbGlwcGlhbnMgaXMgcHJvYmFibHkgdGhlIGVxdWl2YWxlbnQgb2YgMTAwIG1pbGxpb24gZG9sbGFycyBpbiBNYXl3ZWF0aGVycyBoYW5kcyBpbiB0aGUgVVMuIApUaGUgZnVuIHRoYXQgeW91IGdldCBmcm9tIHBsYXlpbmcgcG9rZXIsIGZyb20gZXhwZXJpZW5jaW5nIHRoYXQga2luZCBvZiBleGNpdGVtZW50LCBpcyByZWFsbHkgc29tZXRoaW5nIHRoYXQgeW91IGNhbiBnZXQgbm93aGVyZSBlbHNlLCBhbmQgaWYgeW91IGFyZSBpbiBhIHBsYWNlIHdoZXJlIHlvdSBhcmUgbG9va2luZyB0byBtb3ZlIGZvcndhcmQgYW5kIHRvIG1ha2Ugc3VyZSB0aGF0IHlvdSBhcmUgZ29pbmcgdG8gYmUgcHJvdmlkaW5nIHlvdXIgZnJpZW5kcyBvciBmYW1pbHkgbWVtYmVycyB3aXRoIGEgZ3JlYXQgdGltZSBhdCB5b3VyIHRhYmxlLCB0aGVyZSBhcmUgYSBudW1iZXIgb2YgZGlmZmVyZW50IHRvb2xzIHRoYXQgeW91IG5lZWQgdG8gaGF2ZS4KSXQgbW9yZSBleWViYWxscywgYW5kIG1vcmUgY2hhbmNlIHRvIGNvbnZlcnQgbmV3IGZhbnMuIDkgcG9pbnRzICBzdWJtaXR0ZWQgMjUgZGF5cyBhZ29ZZWFoLCBJIGRlZmluaXRlbHkgYWdyZWUuIApPbiB0aGUgb25lIGhhbmQsIHlvdSBzZWVuIGFzIGEgImJldHRlciIgcmFjZSwgYnV0IG9uIHRoZSBvdGhlciBoYW5kIHRoZXJlIGFyZSBzbyBtYW55IHN0ZXJlb3R5cGVzIGFzIHRvIHdoYXQgeW91IGFyZSB0aGF0IG1hbnkgS29yZWFucyBvZiB0aGUgb2xkZXIgZ2VuZXJhdGlvbiBkb24gcmVzcGVjdCB5b3UgYmVjYXVzZSB0aGV5IGFkaGVyZSBzbyBpbnRyaW5zaWNhbGx5IHRvIENvbmZ1Y2lhbmlzbS5MZXQgbWUgdW5wYWNrIHRoYXQuIApJdCdzIGJlZW4gYSB3aGlsZSBzaW5jZSBJIHJlYWQgaXQsIGJ1dCB0aGF0J3Mgd2hhdCBJIHJlY2FsbC4gClRoZSBpbmNpZGVudCBoYXMgc3RyYWluZWQgYmlsYXRlcmFsIHJlbGF0aW9ucy4gT2ZmaWNpYWxzIGluIFdhc2hpbmd0b24gYW5kIFJpeWFkaCBhcmUgZXhjaGFuZ2luZyB0aHJlYXRzIHRvIGN1dCBzdHJhdGVnaWMsIGVjb25vbWljIGFuZCBkaXBsb21hdGljIHRpZXMuIEluIHRoZSBpbnRlcmVzdCBvZiBjb21tb24gb2JqZWN0aXZlcyBhbmQgaW50ZXJuYXRpb25hbCBzdGFiaWxpdHksIHRoZSBVbml0ZWQgU3RhdGVzIGFuZCB0aGUgS2luZ2RvbSBoYXZlIHJlcGVhdGVkbHkgb3Zlcmxvb2tlZCBtYWpvciBkaXNhZ3JlZW1lbnRzLiBOb3cgcGxheWVycyBvbiBib3RoIHNpZGVzIGFyZSB3YXJuaW5nIG9mIGEgYnJlYWtpbmcgcG9pbnQuCkJ1c2FuIGFuZCBlc2NvcnRzIHRvIGdpdmUgeW91IHRoZSBtb3N0IHdvbmRlcmZ1bCBhbmQgdW5mb3IuIApPbiBTYXR1cmRheSwgdGhlIExlYWZzIHNodWZmbGVkIHRoZWlyIHN0YXJ0ZXJzIGludHJvZHVjdGlvbnMgdG8gYW5ub3VuY2UgVGF2YXJlcyBsYXN0LCBwcm9tcHRpbmcgdGhlIHJhdWNvdXMgb3V0cG91cmluZyBvZiBzdXBwb3J0LgpBbHdheXMgc2FpZCwgbG92ZSB0aGlzIGdhbWUgYnV0IEkgd291bGQgbmV2ZXIgcGxheSBpdCwgc2hlIHNheXMgaW4gYW4gaW50ZXJ2aWV3IHdpdGggU3VuIE1lZGlhLiBEaWRuIHRoaW5rIEkgd291bGQgYmUgZ29vZCBhdCBpdCBiZWNhdXNlIEkga25vdyBteSBzb2NpYWwgZ2FtZSBpc24gYXMgc3Ryb25nLiBIb25lc3RseSwgSSBkaWRuIHRoaW5rIG15IHBoeXNpY2FsIGdhbWUgd291bGQgYmUgYXMgc3Ryb25nLCBlaXRoZXIuIApJIHVuZGVyc3RhbmQgYnVzaW5lc3NlcyBiZWluZyBidXNpbmVzc2VzLCBhbmQgSSB1bmRlcnN0YW5kIGdhbWUgZGV2ZWxvcG1lbnQgc3RhZ2VzIGFuZCBsaWZlY3ljbGVzLiAKV2hlbiB5b3UgZ2V0IHRvIHRoZSByaXZlciB0aGVyZSBhcmUgdHdvIG1pc3Rha2VzIHRoYXQgeW91IGNhbiBtYWtlLiBPbmUgaXMgdG8gY2FsbCBhIGxvc2luZyBiZXQsIHdoaWNoIHdpbGwgY29zdCB5b3UgdGhlIHByaWNlIG9mIGEgYmV0LiBUaGUgb3RoZXIgaXMgdG8gZm9sZCB5b3VyIGhhbmQsIHdoaWNoIHdpbGwgY29zdCB5b3UgYWxsIHRoZSBtb25leSBpbiB0aGUgcG90LiBPYnZpb3VzbHkgZm9sZGluZyB5b3VyIGhhbmQgd2lsbCBiZSBhIGZhciBtb3JlIGNvc3RseSBtaXN0YWtlIHRoZW4gbWVyZWx5IGNhbGxpbmcgYSBiZXQuIElmIHRoZXJlIGlzIGEgc2xpZ2h0IGNoYW5jZSB5b3UgbWF5IGhhdmUgdGhlIHdpbm5pbmcgaGFuZCB5b3Ugc2hvdWxkIGNhbGwuIEknbSBub3QgYWR2b2NhdGluZyBjYWxsaW5nIHdpdGggbm90aGluZyBidXQgeW91IHNob3VsZCBjYWxsIGlmIHRoZXJlIGlzIGEgY2hhbmNlIHRvIHdpbi4gLgpIZXJlJ3MgaG93IHRvIHByb2NlZWQuIEZvbGxvdyBhbiBleHRyZW1lbHkgc2ltcGxlIGVhdGluZyByZWdpbWVuIHdoaWNoIHdpbGwgc3RhcnQgc2hvd2luZyB5b3Ugbm90aWNlYWJsZSByZXN1bHQgaW4geW91ciBqdXN0IDIgMyBkYXlzLiBPbmNlIHlvdSBzdGljayBieSB1c2luZyBmb3IgdGhhdCBsb25nLCBtYXkgbmV2ZXIgYmUgc28gbW90aXZhdGVkIHRvIGRldGVybWluZSBpdCB0aHJvdWdoLiAKV2hpbGUgdGhpcyBpcyBhbiBleGNpdGluZyB0aW1lIGZvciB5b3UsIHdlIHVuZGVyc3RhbmQgdGhhdCB5b3UgbWF5IGFsc28gaGF2ZSBzb21lIGFueGlldHkgYWJvdXQgdGhlIGNvbWluZyB3ZWVrcy4gCkNvbnRpbnVlIHJlZ3VsYXIsIHNsb3csIGRlZXAgYnJlYXRocyB0aHJvdWdob3V0LiBUaGVuIGNvdW50IGJhY2t3YXJkIGZyb20gMTAwIHRvIDk1IGFuZCBpbW1lZGlhdGVseSBpbWFnaW5lIHlvdXJzZWxmIGJlaW5nIHRha2VuIHRvIGEgc2VyZW5lIHNldHRpbmcgdGhhdCB5b3Ugd291bGQgbGlrZSB0byB2aXNpdC4gSXQgY291bGQgYmUgaW5kb29ycyBvciBvdXRkb29ycywgYXMgbG9uZyBhcyBpdCBpcyBwZWFjZWZ1bCBhbmQgaW52aXRpbmcgdG8geW91LiAKQ29tbWVudCByZXBsaWVzIGNvbnNpc3Rpbmcgc29sZWx5IG9mIGltYWdlcyB3aWxsIGJlIHJlbW92ZWQuIEkgZG9uIHdhbnQgdG8gc3BlbmQgYW4gaG91ciBnaXZpbmcgYSBtYXNzYWdlIHNvbWVvbmUgZG9lc24gbGlrZSwgYmVjYXVzZSB0aGV5IHNhaWQgdGhlIHByZXNzdXJlIHdhcyAiZmluZSIsIHdoZW4gaXQgcmVhbGx5IHdhc24KSSBjYW4gc2VlIHRoYXQgcGVvcGxlIHNob3VsZCBub3QgYmUgdGF4ZWQgdW5sZXNzIHRoZXkgaGF2ZSBhIHZvdGUuIEJ1dCB3aGVuIGl0IGNvbWVzIHRvIGNvbXBhbmllcywgZG8gdGhleSBub3QgcGF5IHRheGVzIHRvIGNvbnRyaWJ1dGUgdG8gdGhlaXIgdXNlIG9mIGFsbCB0aG9zZSBpdGVtcyBvZiBpbmZyYXN0cnVjdHVyZSwgbGlrZSByb2FkcyBldGMgYW5kIHRoZSBnb3Zlcm5tZW50IGFnZW5jaWVzIHRoYXQgbWFpbnRhaW4gc3RhbmRhcmRzIGFuZCBzYWZldHkgaW4gdGhlaXIgaW5kdXN0cnkgICBhbGwgb2YgdGhvc2UgdGhpbmdzIHRoYXQgYXJlIHByb3ZpZGVkIGJ5IGVpdGhlciBsb2NhbCBvciBjZW50cmFsIGdvdmVybm1lbnQ/IEl0J3Mgbm90IGEgbWF0dGVyIG9mIGJ1eWluZyBpbmZsdWVuY2UsIGJ1dCByYXRoZXIgcGF5aW5nIHRoZWlyIGZhaXIgc2hhcmUuLiAKQWxsIHRoZSBXb3JsZCdzIEEgU3RhZ2VJbiBNYXkgMTg4NyBUaG9tYXMgUnVzc2VsbCBTdWxsaXZhbidzIGhpZ2hseSBpbmZsdWVudGlhbCBzdGFnZSBhZGFwdGF0aW9uIG9mIERyIEpla3lsbCBhbmQgTXIgSHlkZSBvcGVuZWQgaW4gQm9zdG9uLiBCcml0aXNoIEFtZXJpY2FuIGFjdG9yIFJpY2hhcmQgTWFuc2ZpZWxkIGhhZCBhY3F1aXJlZCB0aGUgVVMgc3RhZ2UgYWRhcHRhdGlvbiByaWdodHMgYW5kIGhpcmVkIFN1bGxpdmFuIHRvIHdyaXRlIHRoZSBwbGF5IGluIGEgd2F5IHRoYXQgd291bGQgYWxsb3cgaGltIHRvIHBsYXkgYm90aCBKZWt5bGwgYW5kIEh5ZGUuIFRoaXMgY2hhbmdlZCB0aGUgcGxvdCBjb25zaWRlcmFibHkgc28gdGhhdCBEciBKZWt5bGwgaXMgeW91bmdlciB0aGFuIGluIHRoZSBub3ZlbCwgaGFzIGEgd2lkZXIgc29jaWFsIG5ldHdvcmsgYW5kIGlzIGVuZ2FnZWQgdG8gYmUgbWFycmllZC4gCkplZGVyIFJlaXNlbmRlLCBkZXIgYWxsZXJkaW5ncyBzY2hvbiBlaW5tYWwgaW4gZWluZXIgcmljaHRpZ2VuIFRvdXJpc3RlbmhvY2hidXJnIHdhciwga2FubiBvYiBzb2xjaCBlaW5lciBudXIgZXJsZWljaHRlcnQgbCBEYXMgYXVzbCBQdWJsaWt1bSwgdm9yIGFsbGVtIEVuZ2wgdW5kIFNrYW5kaW5hdmllciwgaXN0IGFuZ2VuZWhtLiBEYXMgRHVyY2hzY2huaXR0c2FsdGVyIGRlciBHIGJlZmluZGV0IHNpY2ggaW0gRWlua2xhbmcgbWl0IGRlciBha3R1ZWxsZW4gZGVtb2dyYXBoaXNjaGVuIE5vcm1hbHZlcnRlaWx1bmcgc28gd2llIHdpci4gCiJBbmltYWxzIHRoYXQgZXNjYXBlIHRoZSBqYXdzIG9mIGEgS29tb2RvIHdpbGwgb25seSBmZWVsIGx1Y2t5IGJyaWVmbHkuIERyYWdvbiBzYWxpdmEgdGVlbXMgd2l0aCBvdmVyIDUwIHN0cmFpbnMgb2YgYmFjdGVyaWEsIGFuZCB3aXRoaW4gMjQgaG91cnMsIHRoZSBzdHJpY2tlbiBjcmVhdHVyZSB1c3VhbGx5IGRpZXMgb2YgYmxvb2QgcG9pc29uaW5nLiIKVW5mb3J0dW5hdGVseSwgSSBub3QgYWJsZSB0byB0ZWxsIHlvdSB0aGF0IHRoZSBpb25pemVkIG1hZ25lc2l1bSB0ZXN0IGlzIHJlYWRpbHkgYXZhaWxhYmxlLiBUaGUgQWx0dXJhcyBkbyBpb25pemVkIG1hZ25lc2l1bSB0ZXN0cyBhdCB0aGVpciBsYWJvcmF0b3J5IGF0IFNVTlkgaW4gTmV3IFlvcmsgYW5kIHRoZSB0ZXN0aW5nIGVxdWlwbWVudCBpcyBhdmFpbGFibGUgdGhyb3VnaCBhbiBvdXRzaWRlIG1hbnVmYWN0dXJlciB0byBpbnRlcmVzdGVkIGxhYnMuIChJIGluY2x1ZGVkIHRoZSBBbHR1cmEgY29udGFjdCBpbmZvcm1hdGlvbiwgYmVsb3cuKQpJIHRob3VnaHQgSSB1bmRlcnN0b29kIHRoZSBjb25jZXB0LCBidXQgcGxheWluZyB0aGUgZ2FtZSBjYXVnaHQgbWUgYSBsaXR0bGUgb2ZmIGd1YXJkLCB0b28uClVzZSB0aGVzZSB0ZW4gZm9vZHMgaW4geW91ciBkaWV0IHRvIHN1cHBvcnQgcHJvdGVpbiBzeW50aGVzaXMgYW5kIGJ1aWxkIG11c2NsZSBpbiBjb25qdW5jdGlvbiB3aXRoIGEgcmVzaXN0YW5jZSB0cmFpbmluZyBwcm9ncmFtLiBCdWlsZGluZyBtdXNjbGUgaXMgbm90IGFib3V0IGJ1bGtpbmcgdXAgYnkgYWRkaW5nIHVzZWxlc3Mgbm9uIGNvbnRyYWN0aWxlIGZhdCB0aXNzdWUuIFJhdGhlciwgaXQgaXMgYWJvdXQgYXBwbHlpbmcgdGhlIHJpZ2h0IHRyYWluaW5nIHN0aW11bHVzIGFuZCBwcm92aWRpbmcgdGhlIGJvZHkgd2l0aCBhZGVxdWF0ZSBudXRyaWVudHMgdG8gc3VwcG9ydCB0aGUgZm9sbG93aW5nIHByb2Nlc3NlczoKUHJldmVudGl2ZSBIZWFsdGggQ2FyZSBmb3IgRG9ncwpNdWVsbG4gIDIgcG9pbnRzICBzdWJtaXR0ZWQgNCBtb250aHMgYWdvCldob2V2ZXIgZGVjaWRlZCB0aGF0IGNvdXBsZWRvbSBzaG91bGQgZGV0ZXJtaW5lIHRoZSBidWxrIG9mIHRyYXZlbCBhcnJhbmdlbWVudHMgc3VyZWx5IHdhc24ndCBhIHdpdG5lc3MgdG8gdGhlIDIxc3QgY2VudHVyeS4gTW9yZSB0aGFuIGV2ZXIsIHRvZGF5J3MgdHJhdmVsZXJzIGFyZSBrZWVuIHRvIHNldCBvdXQgc29sbyAgIHdoZXRoZXIgZHVlIHRvIGNvbXBldGluZyB3b3JrIHNjaGVkdWxlcywgY2hhbmdpbmcgZGVtb2dyYXBoaWNzLCBvciBhIGJhc2ljIGhhbmtlcmluZyBmb3IgcGVyc29uYWwgZnJlZWRvbSAgIG9ubHkgdG8gZmluZCB0aGVtc2VsdmVzIGRpbmdlZCB3aXRoIGFuIGV4cGVuc2l2ZSBzaW5nbGUgc3VwcGxlbWVudCBmZWUgZm9yIHRoZSBzbyBjYWxsZWQgcHJpdmlsZWdlLiAKVGhleSB3ZXJlIHRvZWluZyBTY290dCBHb3R0bGllYidzIGxpbmUgYW5kIHVzaW5nIGhpcyBtaXNpbmZvcm1hdGlvbiBhcyB0aGUgYmFzaXMgZm9yIGFsbCBvZiBpdC4gClRoYXQgd2FzIGEgam9rZSBieSBDb2JhaW4uIEhlIHNhaWQgaWYgaGUgZXZlciBnb3QgcmVhbGx5IGZhbW91cyB0aGVyZSB3b3VsZCBiZSBwZW9wbGUgbG9va2luZyBiYWNrIG9uIGhpcyBvbGQgc3R1ZmYgYW5kIHNlZSB0aGUgYWx0ZXJuYXRlIHNwZWxsaW5nLiBUaGV5IHdvdWxkIGJlIGhpcHN0ZXJzIGFuZCBjbGFpbSB0aGF0IGlzIGhvdyBoaXMgbmFtZSBpcyBzdXBwb3NlZCB0byBiZSBzcGVsbGVkIGFuZCB1c2UgaXQgdW5pcm9uaWNhbGx5LgpUaGUgd29ybGQgb2YgaGlnaCBzdGFrZXMgdW5kZXJncm91bmQgcG9rZXIgZ2FtZXMgaW52b2x2aW5nIGNlbGVicml0aWVzIGFuZCBiaWxsaW9uYWlyZXMgaGFzIGJlZW4gYSBjbG9zZWx5IGd1YXJkZWQgc2VjcmV0IHVudGlsIG5vdy4gVGhlIG5ldyBib29rLCAiTW9sbHkncyBnYW1lIiBqdXN0IG91dCB0b2RheSwgaXMgbWFraW5nIGhlYWRsaW5lcyB3aXRoIGJpZyBzdG9yaWVzIGluICJWYW5pdHkgZmFpciIgYW5kICJQZW9wbGUiIG1hZ2F6aW5lLiBXZSBoYXZlIE1vbGx5IGJsb29tIHdpdGggdXMuIFRoYW5rcyBmb3IgYmVpbmcgd2l0aCB1cy4gCkF1IG1pY3JvIGR1IERyaXZlIGRlIFJUTDIsIE5pY29sYSBTaXJraXMgYSBlbiBlZmZldCBleHBsaXF1IDogIkNvbW1lIG9uIGEgY3JvdWwgc291cyBsZXMgZGVtYW5kZXMgZXQgbGVzIHJlZ3JldHMgZGUgZ2VucyBxdWkgbidvbnQgcGFzIHB1IHZlbmlyIG5vdXMgdm9pciAoLikgb24gYSB0dWRpIHRvdXRlcyBsZXMgcG9zc2liaWxpdHMsIGRlIHNhdm9pciBvIGVzdCBjZSBxdWUgbCdvbiBwb3VycmFpdCBwYXNzZXIgZXQgY29tbWVudCIuIApCU0cgQnJldGlnYW5zICAxIHBvaW50ICBzdWJtaXR0ZWQgMSB5ZWFyIGFnbwpUaGUgSHVkYSBCZWF1dHkgTmV3IE51ZGVzIHBhbGV0dGUuIEkgd291bGQgTkVWRVIgRVZFUiBiZSBjYXVnaHQgZGVhZCBpbiBwaW5rIG9yIHB1cnBsZSBleWVzaGFkb3cuIApXZSBoYXZlIHBlb3BsZSBpbiB0aGF0IHNwYWNlLiBTbyB3ZSBicmVhayBhbGwgb2YgdGhlc2UgcmVjb3Jkcy4gClRoZSB0ZXJtICJNYW51cmUgc3ByZWFkZXIiIGFjY29yZGluZyB0byB0aGUgT0VEIGNvbWVzIGludG8gdXNlIGFyb3VuZCAxODg0LCA1NSB5ZWFycyBhZnRlciB0aGlzIHJlcG9ydCBleGNlcHQgb2YgY291cnNlIHRoaXMgaXMgY2FsbGVkIGEgbWFudXJlICJzY2F0dGVyZXIiIHdoaWNoIHNlZW1zIHRvIGltcGx5IGxlc3MgY29uZmlkZW5jZSB0aGFuIGEgInNwcmVhZGVyOiwgdGhvdWdoIHRoYXQgbWF5IGhhdmUgY29tZSBhYm91dCBkdWUgdG8gdGhlIG1vZGVzdHkgb2YgdGhlIGludmVudG9yLiAKTWVyY2VkZXMgZGlkIGxvdmUgaGltLCBidXQgc2hlIGxvdmVkIGhpbSBhcyAiRWRtb25kIERhbnRlcyIgYSBtYW4gd2hvIGlzIG5vIGxvbmdlciwgYW5kIEhhaWRlZSBsb3ZlcyBoaW0gYXMgd2hvIGhlIGlzIG5vdyBhdCB0aGUgcHJlc2VudCwgIlRoZSBDb3VudCBvZiBNb250ZSBDcmlzdG8iLiAKQ2l0eSBvZmZpY2lhbHMgb24gVGh1cnNkYXkgc2FpZCBwb2xpY2UgcmFpZGVkIHRoZSBidXNpbmVzcyBvbiBzdXNwaWNpb24gb2YgcHJvc3RpdHV0aW9uLlplc2lnZXIgc2FpZCB0aGUgbWFzc2FnZSBwYXJsb3Igd2FzIG9wZXJhdGluZyB3aXRob3V0IGEgY2l0eSBpc3N1ZWQgYnVzaW5lc3MgbGljZW5zZSBhbmQgdGhhdCB0aGV5IGFyZSBhY3RpdmVseSBpbnZlc3RpZ2F0aW5nIG90aGVyIGFzcGVjdHMgb2YgdGhlIGJ1c2luZXNzLiAKSSBoYXZlIHZlcnkgZmV3IHBlb3BsZSB3aG8gdW5kZXJzdGFuZCB3aGF0IEkgbWVhbiBieSB0aGUgbmVlZCBmb3IgVE9UQUwgTk9OIEVYSVNUQU5DRSBhZnRlciB0aGlzIGxpZmUgd2hpY2ggbWFrZXMgcmVhbGx5IGRlZXAgY29udmVyc3RhaW9ucyBkaWZmaWN1bHQuIApTb21lIHdvdWxkIGJlIHRheGFibGUsIHNvIHRoYXQgd291bGQgbGVhdmUgYWJvdXQgJDEsMzAwIG5ldCwgRWdhbiBzYXlzLiBUaGF0IHdvdWxkIG1ha2UgdGhlaXIgdG90YWwgYWZ0ZXIgdGF4IG1vbnRobHkgaW5jb21lICQxMCwwMDAsIHdoaWNoIGlzIHRoZWlyIHRhcmdldC4gClRoZXkgdG9sZCBtZSBwZXJzb25hbGx5LCB0aGV5IHB1dCBpdCBpbiB3cml0aW5nLiAKQydlc3QgbyA/ClNoZSBncmV3IHVwIGtub3dpbmcgYmV0dGVyIGJ1dCBoYWQgZ290dGVuIGludG8gZHJpbmtpbmcgYmVjYXVzZSBvZiBhIGJhZC8gc2hhZHkgcmVsYXRpb25zaGlwIGFuZCBmaW5hbmNpYWwvam9iIGlzc3Vlcy4gCkEgY291cGxlIG9mIHllYXJzIGxhdGVyLCBpIGRhdGVkIHRoZSBzYW1lIGR1ZGUgKGZvciBhIHllYXIpIGFuZCByZW1haW5lZCBmcmllbmRzIHdpdGggaGVyLiBTaGUgYWxzbyByZW1haW5lZCBmcmllbmRzIHdpdGggYW4gZXggdGhhdCBJIHdvdWxkIG5ldmVyIHNwZWFrIHRvIGFnYWluLCBidXQgdGhhdCBpc24gTVkgZnJpZW5kc2hpcCwgaXRzIGhlcnMsIHNvIHdobyBjYXJlcz8gSXQgZG9lc24gYWZmZWN0IG15IGRhaWx5IGxpZmUsIHRoZSBib3lmcmllbmQgd2UgYm90aCBkYXRlZCBtb3ZlZCBvbiB3aXRoIGhpcyBsaWZlIGFuZCB3ZSBtb3ZlZCBvbiB3aXRoIG91cnMsIGFuZCB3ZSBzdGlsbCBjbG9zZSBmcmllbmRzLiAKQWxzbywgTWFycyBmcmVlZmFsbCB2ZWxvY2l0eSBkdWUgdG8gYWlyIHJlc2lzdGFuY2UgaXMgYWJvdXQgMS8zcmQgdGhhdCBvZiBFYXJ0aCBzbyBmYWN0b3JpbmcgdGhvc2UgdHdvIGluLCB5b3UgY2FuIGV4dGVuZCB0aGUgbW9kZWwgMyBjaGFyZ2UgdXAgdG8gODM2LjMgbWlsZXMgcGVyIGNoYXJnZSBhY2NvdW50aW5nIG9ubHkgZm9yIHRoZSBncmF2aXRpYyBkaWZmZXJlbmNlIGFuZCBndWVzc3RpbWF0aW5nIHRoZSBhaXIgcmVzaXN0YW5jZSBkaWZmZXJlbmNlIHlvdSBjb3VsZCBhcmd1YWJseSBzYXkgdGhhdCBhIE1vZGVsIDMgY291bGQgZ2V0IGFyb3VuZCAxLDAwMCBtaWxlcyAoMTYwOWttKSBwZXIgY2hhcmdlIHdpdGggbm8gcGF5bG9hZCBhdHRhY2hlZCwgYW5kIGlmIHdlIGFzc3VtZSBhIHNpZ25pZmljYW50IHBheWxvYWQgdGhlbiB3ZSBjYW4gaGFsZiB0aGF0IGFuZCBnZXQgNTAwIG1pbGVzICg4MDQuNWttKSBwZXIgY2hhcmdlIHdpdGggYSBtb2RlbCAzIGFjdGluZyBsaWtlIGEgbWluaSBzZW1pIG9uIHRoZSBzdXJmYWNlIG9mIE1hcnMgYWxsIHRocm91Z2ggdGhlIGVsZWN0cmljIG1vdG9yIHdpdGggcmlkaWN1bG91cyB0b3JxdWUuIApGdWxsIFN0b3J5LiAKRm9yIGV4YW1wbGU6IHRoZSByZWNlbnQgQ2hpbmEgZHJhbWEuIFdlIGFwcHJvdmVkIGV2ZXJ5IHBvc3QgdGhhdCBtZXQgb3VyIHJ1bGVzLCBzdGF0ZWQgc28gcHVibGljbHksIGFuZCBsZXQgdGhlIGNvbW11bml0eSB0YWtlIG92ZXIgdGhlIGZyb250IHBhZ2UgZm9yIDIgZGF5cy4gV2UgZGlkbiBkZWxldGUgYWxsIG9mIGl0IGxpa2Ugb3RoZXIgc3VicywgYW5kIHdlIGRpZG4gdGhyb3cgdG9nZXRoZXIgb3IgYWx0ZXIgb3VyIHJ1bGVzIHF1aWNrbHkgdG8gbWFrZSBpdCBnbyBhd2F5LgpSdXNzZWxsIEN1cnRpczogU2F0dXJkYXksICJXb3JraW5nIFRvZ2V0aGVyIGZvciBHb29kIFNjaG9vbHMsIiBNcnMuIApJdCBjb3VsZCBiZSBhIGJyb2tlbiB0b290aCB0aGF0IHJlcXVpcmVzIGFuIGVtZXJnZW5jeSB0cmlwIHRvIHRoZSBkZW50aXN0IGFuZCBhbiBhbGwgZGF5LCBoYWxmIGRhemVkIHJlY292ZXJ5IG9uIHlvdXIgY291Y2gsIHdoaWNoIG1hbmFnZXMgdG8gcHV0IHlvdSBiZWhpbmQgYXQgd29yay4gCiJXZSdyZSB0aGVyZSBmb3IgYW55Ym9keSB3aG8gaXMgYWZmZWN0ZWQgYnkgZ2FtYmxpbmcsIGFuZCB0aGF0J3MgZmFtaWx5IGFuZCBmcmllbmRzLCBlbXBsb3llcnMuIiBNciBSb3Nld2FybmUgc2FpZCBoZWxwIHdhcyBub3QganVzdCBsaW1pdGVkIHRvIHRoZSBnYW1ibGVyLiAKRGlmZmVyZW5jZXM6IExpbWl0ZWQgbnVtYmVyIGFuZCBrbm93biBwYXJ0aWNpcGFudHMgdnMgdW5saW1pdGVkIGFuZCB1bmtub3duOiBQb2tlciBpcyBhIHplcm8gc3VtIGdhbWUgKG5lZ2F0aXZlIHN1bSBnYW1lIGlmIHdlIGFkZCBjYXNpbm8gY3V0KSwgZ2VuZXJhbGx5IHBsYXllZCBieSBpbmRpdmlkdWFscyB3aG8gbWFrZSBtb25leSBvZiBlYWNoIG90aGVyLiAKQWxsIHBsYXllcnMgZmFtaWxpYXIgd2l0aCBwb2tlciBpbmR1c3RyeSBrbm93IHRoYXQgeW91IG11c3QgZG93bmxvYWQgYSBzZXBhcmF0ZSBjbGllbnQgaW4gb3JkZXIgdG8gcGxheS4gCldoZW4gSSBmaXJzdCBzdGFydGVkIHdhdGNoaW5nLCBJIGRpZG4ndCB0aGluayBpdCB3b3VsZCBiZSBzbyBjbGVhciB3aG8gd2FzIGx5aW5nIGFuZCB3aG8gd2FzIHRlbGxpbmcgdGhlIHRydXRoLiAKTXkgYWR2aWNlIGZvciBoYXZpbmcgYSBjb252ZXJzYXRpb24gd2l0aCBoZXIsIGJhc2VkIG9uIG15IG93biByZWNvdmVyeSBmcm9tIGFuIGVhdGluZyBkaXNvcmRlciBhbmQgaGF2aW5nIHRvIGhhdmUgdGhpcyBjb252ZXJzYXRpb24gd2l0aCBvdGhlciBwZW9wbGUgc3RydWdnbGluZywgaXMgdG8gYmUgb3BlbiBhbmQgaG9uZXN0LCBidXQgcHJpb3JpdGl6ZSBoZXIgZmVlbGluZ3MgYW5kIHNlZWsgdG8gdW5kZXJzdGFuZCBmaXJzdC4gCldoZW4gaGUgZmluYWxseSBjYW4ndCB1c2UgZXZlbiBNb21teSB0byBnZXQgb3V0IG9mIHRyb3VibGUgYW55IG1vcmUsIGhlIGdldHMgdG8gZGVhbCB3aXRoIHRoZSBjcmltaW5hbCBqdXN0aWNlIHN5c3RlbSwgd2hvbSwgdGhhbmtmdWxseSwgaXMgRVhUUkVNRUxZIHdlbGwgdmVyc2VkIGluIGRlYWxpbmcgd2l0aCBHQ0pOcyBqdXN0IGxpa2UgaGltLiBIZSB3aWxsIGtlZXAgdHJ5aW5nIHRvIHJ1biBnYW1lIG9uIHRoZSBDT3Mgd2hpbGUgaGUncyBzdGlsbCBpbnNpZGUsIGFuZCBvbiBoaXMgcGFyb2xlL3Byb2JhdGlvbiByZXN0cmljdGlvbnMgYW5kIGhpcyBQT3Mgb25jZSBoZSdzIG91dCwgYmVjYXVzZSBoZSdzIHNvb29vb28gaW5nZW5pb3VzIGFuZCBzdXBlcmlvci4gT25seSBpdCBmYWlscywgc3BlY3RhY3VsYXJseSwgYW5kIGhlIHNwZW5kcyB0aGUgZ3JlYXQgbWFqb3JpdHkgb2YgaGlzIGxpZmUgYXMgYSB5b3VuZyBhbmQgbWlkZGxlIGFnZWQgbWFuIGdldHRpbmcgeWVhcnMgdGFja2VkIG9uIHRvIGhpcyBvcmlnaW5hbCBzZW50ZW5jZSB3aGlsZSBzdGlsbCBpbnNpZGUsIGFuZCByZXBlYXRlZGx5IHZpb2xhdGluZyBoaXMgcGFyb2xlL3Byb2JhdGlvbiB3aGlsZSBvbiB0aGUgb3V0c2lkZTogaGUgc2ltcGx5IGNhbm5vdCBlc2NhcGUgdGhlIHN5c3RlbS4gCk9idmlvdXNseSBJIHNhaWQgc29tZXRoaW5nIHRoYXQgdXBzZXQgeW91LiAKR2l2ZW4gdGhhdCBzbyBtYW55IGJhbmtlcnMgaGFyYm91ciBmYW50YXNpZXMgYWJvdXQgYmVjb21pbmcgdGhlIG5leHQgQWRyaWFuIFplY2hhIGFuZCBmcmVxdWVudGx5IHRhbGsgYWJvdXQgcGFja2luZyB1cCB0aGVpciBkZXNrcyBhbmQgbW92aW5nIHRvIGEgc3VubnkgY2xpbWF0ZSB0byBvcGVuIHRoZSBiZXN0IGhvdGVsIGluIHRoZSB3b3JsZCwgbm93J3MgdGhlIHBlcmZlY3QgdGltZSB0byBmb2xsb3cgdGhhdCBkcmVhbS4gCkNhbmNlclVwb25DYW5jZXIgIDcgcG9pbnRzICBzdWJtaXR0ZWQgNSBkYXlzIGFnbwpJIGFscmVhZHkgaGF2ZSBvdmVyIDEwMCBkYXlzIGZyb20gdGhpcyB5ZWFyIGFsb25lLiAKWW91IG5ldmVyIHN0b3AgcHVyc3VpbmcgYSBncmVhdGVyIHJlbGF0aW9uc2hpcCB3aXRoIEdvZC4gCkltIFJhaG1lbiBkZXIgRXJzdGVsbHVuZyBkZXMgUmVzb3J0cyB3aXJkIGF1Y2ggZGFzIFNraWdlYmlldCB6d2lzY2hlbiBBbmRlcm1hdHQgdW5kIFNlZHJ1biBtb2Rlcm5pc2llcnQgdW5kIHp1c2FtbWVuZ2VzY2hsb3NzZW4uIEFuZGVybWF0dCBTd2lzcyBBbHBzIEFHIGlzdCBlaW5lIDEwMCUgVG9jaHRlcmdlc2VsbHNjaGFmdCBkZXIgYW4gZGVyIFNjaHdlaXplciBCcnNlIFNJWCBrb3RpZXJ0ZW4gT3Jhc2NvbSBEZXZlbG9wbWVudCBIb2xkaW5nIEFHIChPREgpLi4gCk5ldmVyIHJlYWxseSBmZWx0IEkgYmVsb25nZWQgdG8gYW55Ym9keSBvciBhbnl0aGluZywgaGUgc2F5cy4gS2luZCBvZiBhIHNwaW4gb2ZmIG9mIGJlaW5nIGEgZm9zdGVyIGNoaWxkLCBhbiBhZG9wdGVkIGNoaWxkLiAKSW5kZWVkIHRoZXJlIGlzIG9ubHkgb25lLCB1bml2ZXJzYWwgdHlwZSBvZiBmZW1hbGUgb3JnYXNtIHRoYXQgY2FuIGJlIGFycml2ZWQgYXQgaW4gbWFueSBkaWZmZXJlbnQgd2F5cy4gCkNlcyBpbmdhbGl0cyBlbiBzYW50IHNvbnQgcGFyZm9pcyBhYnlzc2FsZXMuIApJdCBhIGdyZWF0IHdheSB0byBzdGFydCB0aGUgZGF5LiBUaGUgaG90ZWwgcmVjZXB0aW9uIHRvbGQgdXMgdGhleSBjb3VsZCBmaW5kIHVzIGEgcmVudGFsIGNhciBzbyB0aGV5IGNhbGxlZCAiQWxpIi4gCkkgZG9uIG1pbmQgc29tZSAiZmx1ZmYiIGNvbWluZyB3aXRoIHBhY2thZ2VzLiBGb3IgZXhhbXBsZSwgSSB3b3VsZCBnZW5lcmFsbHkgcHJlZmVyIHRoYXQgdW5taW5pZmllZCBzb3VyY2UgY29kZSwgYW5kIGJ1aWxkIHNjcmlwdHMgYXJlIHB1Ymxpc2hlZC4gVHdvIHJlYXNvbnM6Ckl0J3Mgd2hlcmUgSSBzcGVudCBtb3N0IG9mIG15IGNoaWxkaG9vZCB1cCB0byB0aGUgYWdlIG9mIG5pbmUsIGJlZm9yZSBteSBmYW1pbHkgYW5kIEkgbW92ZWQgdG8gQnJpdGFpbi4gCkluIHRoZSBjYXNlIG9mIFdhbG1hcnQsIHRoZXkgbmVlZCB0byBwdXJjaGFzZSBkb2cgZm9vZCBmcm9tIHNvbWUgbmFtZSBicmFuZCBwZXQgZm9vZCBwcm9kdWNlci4gV2FsbWFydCBzZWVzIHRoYXQgZG9nIGZvb2QgaXMgc2VsbGluZyBsaWtlIGhvdGNha2VzIGFuZCBpbnRyb2R1Y2VzIGEgc3RvcmUgYnJhbmQuIApUaGUgaW5kaXZpZHVhbCBjaGFyYWN0ZXJzIGluIHRoZSBFbmdsaXNoIGFuZCBHZXJtYW4gdHJhbnNsYXRpb25zIG1hdGNoIHVwIHBlcmZlY3RseSBleGNlcHQgZm9yIHRoZSBsZXR0ZXJzIEgvTi4gVGhlIGVuZCBvZiB0aGUgVG93biBSZWNvcmRzIHRoZXJlZm9yZSBhcHBlYXJzIHRvIHNheTogUFVUIEVWRU5UIFhZIElOIENJVFkgU1VNTUVSIERFQ0suIApBZnRlciBhbGwgdGhlIHRpbWVzIEkgdG9sZCBoaW0gIllvdSBlaXRoZXIgbG92ZSBtZSwgb3IgeW91IGxlYXZlIG1lLCIgYWxvbmcgd2l0aCBhbGwgdGhlIGVtcHR5IGFwb2xvZ2llcywgSEUgZGVjaWRlZCB3ZSB3ZXJlIGRvbmUuSSBmaXJtbHkgdGhpbmsgaGUgdGhvdWdodCBJJ2QgY29tZSBjcmF3bGluZyBiYWNrIGJ1dCBoZSB3YXMgZGVhZCBmdWNraW5nIHdyb25nLiAKSGUgZW50aXRsZWQgdG8gdGhhdCBvcGluaW9uLCBidXQgaGUgbm8gbW9yZSBxdWFsaWZpZWQgdG8gc3BlYWsgb24gZWNvbm9taWNzIHRoYW4gbXkgbWVjaGFuaWMuLiAKUGhvdG9zIHdpdGggZ2lybHMgdGhhdCBhcmUgY2xlYXJseSBlaXRoZXIgZXggZ2lybGZyaWVuZHMgb3IgZmxpbmdzLiAKTm93LCBob3dldmVyLCBsaWNlbnN1cmUgaGFzIGJlY29tZSB0aGUgbm9ybS4gCk9uIFN1bmRheSwgbXVzaWNhbCBjb2xsZWN0aXZlIFNvbmljIEJsaXNzIHdpbGwgcGxheSBHeXBzeSBXb3JsZCBmdXNpb24uIEF0IDFwbSBvbiBTdW5kYXksIHJvb3RzIG11c2ljaWFuIERhcnlsIEphbWVzIHBlcmZvcm1zIGhpcyBlYXJ0aHkgbWVsb2RpZXMuIApEb3dubG9hZCB0aGUgbGF0ZXN0IHZlcnNpb24gb2YgR0hUQ1AsIGRvd25sb2FkIHRoZSBHSDMgMS4zMSBwYXRjaCAoaWYgbm90IGFscmVhZHkgLiAKWW91IGhhdmUgc2V2ZXJhbCBvcHRpb25zIGZvciBjaG9vc2luZyB0aGUgbmV4dCBkZWFsZXIuIE9uZSBvcHRpb24gaXMgdGhhdCB0aGUgcGVyc29uIHRvIHRoZSBsZWZ0IG9mIHRoZSBvcmlnaW5hbCBkZWFsZXIgaXMgbm93IHRoZSBuZXcgZGVhbGVyLgpZb3UgY29tZSB0byByZWFsaXplIHRoYXQgdGhpcyBpcyB3aHkgQ29tbWFuZGVyIENvZHkgYXJ0aWxsZXJ5IHN0cmlrZSBmYWlsZWQgYWdhaW5zdCBPYmkgV2FuLCB3aGVuIGh1bmRyZWRzIG9mIEplZGkgd2VyZSBraWxsZWQgaW4gc2ltaWxhciBhdHRhY2tzLiAKVGhlaXIgc3R1ZGVudCBjb2RlIGFuZCBCb2FyZCBoYXMgZXhhY3RseSB6ZXJvIGJlYXJpbmcgb3IgcmVsZXZhbmNlIHRvIG91cnMuIFRoZSB0aW1lIHRvIGNvbXBsYWluIGFib3V0IHRoZSB1bmZhaXJuZXNzIG9mIGEgY29udHJhY3QgaXMgbm90IGFmdGVyIHlvdSBzaWduZWQgYW5kIGFjY2VwdGVkIGl0LiBUaGF0IGlzbiBob3cgY29udHJhY3RzIHdvcmsgKHVubGVzcyB5b3UgYW4gTkZMIHBsYXllcikuVGhlcmUgaXMgYSBzdGF0ZWQgcHJvY2VkdXJlIGZvciBhbWVuZGluZyB0aGUgU3R1ZGVudCBDb2RlLiAKT3VyIGNvbXBsZXggd2FzIGEgbmlnaHRtYXJlIHRvIHVzIGFsbCBzdW1tZXIuIApTYXVmIHF1ZSBsJ2FybWUgbGEgcGx1cyBlZmZpY2FjZSwgZW4gYXR0ZW5kYW50LCByZXN0ZSB1bmUgY29udHJlIHB1YmxpY2l0LiAKSW4gYSBzaW1pbGFyIHZlaW4sIFdleWxhbmQgZmFzdCBhZHZhbmNlLCB3aGljaCB1c3VhbGx5IHJlbGllcyBvbiBsYW5kaW5nIHZhcmlvdXMgY29tYmluYXRpb25zIG9mIFtbUmVjb25zdHJ1Y3Rpb24gQ29udHJhY3RdXSBhbmQgW1tEZWRpY2F0aW9uIENlcmVtb255XV0sIG9yIHNvbWUgY3JhemllciBjb21iaW5hdGlvbiBvZiBbW0Zhc3QgVHJhY2tdXSwgW1tHb3Zlcm5tZW50IFRha2VvdmVyXV0sIGFuZCBbW1JlZCBQbGFuZXQgQ291cmllcnNdXSBvciBbW1B1bml0aXZlIENvdW50ZXJzdHJpa2VdXSwgYWxzbyBnaXZlcyBzb21lIHJhdWNvdXMgZW5lcmd5IHRvIHRoZSBjb3JwLiBJdCdzIG5vdCBuZWFybHkgYXMgZGV2b2x2ZWQgKG9yIGFzIGZ1bikgYXMgQ0ksIGJ1dCBpdCBnaXZlcyBhIGJpdCBtb3JlIHN0cnVjdHVyZSB0byB0aGF0IHN0eWxlIG9mIHBsYXkuIDcgcG9pbnRzICBzdWJtaXR0ZWQgNyBtb250aHMgYWdvLiAKV2VlaywgZ3JvY2VyeSBzdG9yZXMgc2VuZCBvdXQgYWRzIHRlbGxpbmcgeW91IHdoYXQgaXRlbXMgdGhleSBoYXZlIG9uIHNhbGUsIFdhZ2Fza3kgZXhwbGFpbnMuIHRvc3MgdGhlc2UgaW4gdGhlIHRyYXNoISBUaGV5IGFyZSBjcnVjaWFsIGZvciB5b3VyIGdyb2NlcnkgcGxhbm5pbmcuIHRoZSBpdGVtcyB0aGF0IGFyZSBvbiBzYWxlIHRoYXQgeW91IGxpa2UgdG8gcHVyY2hhc2Ugc28geW91IGRvbiBmb3JnZXQuCkF1ZGllbmNlcyBzb21lIHllYXJzIGFnbyAgIHRocmVlIGRpZmZlcmVudCBkaXJlY3RvcnMgaGFuZGxlIHRoZWlyIG93biByZXNwZWN0aXZlIGZpbG1zLCBjb25uZWN0ZWQgdG9nZXRoZXIgYnkgYSBzdG9yaWVkIGNyaW1lLCBvciwgbW9yZSBwcmVjaXNlbHksIGJ5IHRoZSBodW50IGZvciBhbiBlc2NhcGVkIHNleCBvZmZlbmRlci4gVGhpcyBpcyBub3QgYSB0cmlsb2d5IHRoYXQgcmVxdWlyZXMgYW4gb3JkZXJlZCwgY29uc2VjdXRpdmUgdmlld2luZyBvZiB0aGUgdGhyZWUgZmlsbXMuIApUaGUgVVMgZG91YmxlZCBkb3duIG9uIGEgd2FyIGVmZm9ydCBhbHJlYWR5IGFiYW5kb25lZCBieSBhIGNvbGxhcHNpbmcgRnJlbmNoIGNvbG9uaWFsIGVtcGlyZS4gVGhlIHdvcmxkIGhhZCBjaGFuZ2VkLCBidXQgd2Ugd2VyZSBzdGlsbCBleGVydGluZyBjb250cm9sIG92ZXIgZm9ybWVyIGNvbG9uaWFsIHN1YmplY3RzLiBXaGF0IHdlIHBlcmNlaXZlZCBhcyBhIGZpZ2h0IGFnYWluc3QgY29tbXVuaXN0IHdvcmxkIHJ1bGUsIHRoZSBWaWV0bmFtZXNlIHNhdyBhcyBhbm90aGVyIGZpZ2h0IGZvciBpbmRlcGVuZGVuY2UuIApEb2VzIGEgbnV0IGZsdXNoIGRyYXcgY2FsbCB5b3U/IE1heWJlLCBkZXBlbmRpbmcgb24gdmlsbGFpbiwgYnV0IHByb2JhYmx5IG5vdCB0byBiZSBob25lc3QuIFRoZSBvbmx5IGhhbmRzIHRoYXQgYXJlIGNhbGxpbmcgeW91IHRoYXQgeW91IGJlYXQsIGFyZSBtb25zdGVyIGRyYXdzLCBsaWtlIFRzOXMsIDVzNnMgYW5kIGJvdGggdGhlc2UgaGFuZHMgaGF2ZSA1MCUgZXF1aXR5IGFnYWluc3QgeW91IHNvIHlvdSBub3QgZXhhY3RseSBhIGZhdm9yaXRlLiBFdmVuIHRob3VnaCBoZSBoaW1zZWxmIHJlcHMgU08gVEhJTiB3aXRoIGEgYy9yIHdoZW4geW91IGJsb2NrIHNldHMgdGhpcyBoYXJkLCBieSAzYiBmbG9wIHlvdSBhbGxvdyBoaW0gdG8gcGxheSBwZXJmZWN0bHkuIApBdCA0NSwgaXQgaXMgbm90IGVhc3kgYXQgYWxsLiBBbmQgeW91IGFyZSBwcm9iYWJseSBtb3JlIGF0IGVhc2Ugd2l0aCB5b3Vyc2VsZi4gU28geW91IGdvIHRvIFdhbG1hcnQgaW4gdGhlIHlvZ2EgcGFudHMgd2l0aCBubyBtYWtldXAgYW5kIHlvdSBtaXNzZWQgdGhlIGd5bSBmb3IgdHdvIHdlZWtzIHNvIHRoZXJlIGxpdHRsZSBwb29jaGluZyBvdXQuIApPbiB0aGUgb3RoZXIgaGFuZCwgYSAxMCBkaWNlIHNhbHZvIGlzIG11Y2ggbW9yZSBsaWtlbHkgdG8gb25lIHNob3QgeW91ciBzbWFsbCBzaGlwcy4gSSB0aGluayBNb3N0IFdhbnRlZCB3b3JrcyBvdXQgYmV0dGVyIGZvciB5b3UuLiAKVGhlc2UgZGF5cywgcG9rZXIgaXMgYmVjb21pbmcgbWFpbnN0cmVhbS4gVGhlIG5hdGlvbmFsbHkgdGVsZXZpc2VkIFdvcmxkIFBva2VyIFRvdXIsIGNvbWJpbmVkIHdpdGggY2VsZWJyaXR5IHBva2VyIGV2ZW50cyBhbmQgbmF0aW9uYWwgY292ZXJhZ2Ugb2YgdGhlIFdvcmxkIFNlcmllcyBvZiBQb2tlciBoYXZlIGFkZGVkIHVwIHRvIGEgc3VyZ2UgaW4gcG9wdWxhcml0eSBmb3IgcG9rZXIgYXQgdGhlIHBybyBsZXZlbC4gVGhlIFdvcmxkIFNlcmllcyB3YXMgb25jZSBhIHNtYWxsIGV2ZW50IGhvc3RlZCBhdCBCaW5pb24ncyBIb3JzZXNob2UgaW4gTGFzIFZlZ2FzIG1haW5seSB0byBkcmF3IHB1YmxpY2l0eS4gSXQgZmVhdHVyZWQgYSBmZXcgb2YgQmVubnkgQmluaW9uJ3MgZnJpZW5kcyBpbiBhIEhvbGQnZW0gZHVlbCBvdmVyIGEgcGlsZSBvZiBjaGlwcy4gTm93LCB0aG91c2FuZHMgb2YgcGVvcGxlIHNob3cgdXAgdG8gd2F0Y2ggYW5kIHBhcnRpY2lwYXRlIGluIHRoZSBkb3plbnMgb2Ygc2lkZSB0b3VybmFtZW50cywgc2F0ZWxsaXRlcywgYW5kIHJpbmcgZ2FtZXMgdGhhdCBzdXJyb3VuZCB0aGUgbWFpbiBjb21wZXRpdGlvbi4gQW55b25lIG92ZXIgdGhlIGFnZSBvZiAyMSBjYW4gYnV5IGludG8gdGhlIG1haW4gZXZlbnQgd2l0aCAkMTAsMDAwLiBNYW55IHBsYXllcnMgaGF2ZSBtYWRlIHRoZWlyIHdheSBpbiB0aHJvdWdoIHNhdGVsbGl0ZSB0b3VybmFtZW50cyB0aGF0IGNvc3QgbXVjaCBsZXNzIHRvIHBsYXkgYW5kIG9mZmVyIGEgc2VhdCBpbiB0aGUgbWFpbiBldmVudCBhcyBhIHByaXplLgpJdCB3YXMgbGlrZSB0aGUgRCBEYXkgaW52YXNpb24sIHNheXMgTGVWYW5naWUuIApJZiB5b3UgZ28gZm9yd2FyZCwgSSBzdWdnZXN0IGEgbXVjaCBsb25nZXIgbGVhc2UgYXNzdW1pbmcgdGhleSdyZSBxdWFsaWZpZWQuIFBlcnNvbmFsbHkgSSB3b3VsZCBuZXZlciBzcGVuZCBzbyBtdWNoIG1vcmUgdW5sZXNzIEkga25vdyBJJ20gZ2V0dGluZyBhIHNvbGlkIHJlbnRlciB3aG8ncyBnb25nIHRvIHN0YXkuIFRvbyBtYW55IHdhdCBpZidzLiAKT2JhbWEgbWEgQm9vbSBUZW1wbGF0ZSBMZXR0ZXIgdG8gUHJlc2lkZW50IEVsZWN0IE9iYW1hIHJlOiBOYXRpb25hbCBMaWNlbnNpbmcgb2YgTWlkd2l2ZXMgT3BlbiBMZXR0ZXIgdG8gUHJlc2lkZW50IEVsZWN0IE9iYW1hIEluIG15IGxpZmV0aW1lLiAKT2J2aW91c2x5LCBJIGFncmVlIHdpdGggeW91ciBodXNiYW5kLiBJdCdzIG5ldmVyIGdvaW5nIHRvIGdldCBiZXR0ZXIgdW50aWwgeW91IHNldCBmaXJtIGJvdW5kYXJpZXMsIGJ1dCBJIGFjdHVhbGx5IHdhbnRlZCB0byBwb2ludCBvdXQgdGhhdCB5b3UgKGxpa2UgbXkgaHVzYmFuZCkgTWF5IGJlIHN1ZmZlcmluZyBmcm9tIGFueGlldHkuIEhlIHdlbnQgdGhyb3VnaCBhIGxvdCBvZiB0aGVyYXB5IGFuZCBtZWRpY2F0aW9uIHRvIGdldCBoaXMgYW54aWV0eSB1bmRlciBjb250cm9sIHdoZW4gaXQgY29tZXMgdG8ganVzdCBoYXZpbmcgYSBjb252ZXJzYXRpb24gd2l0aCBoaXMgcGFyZW50cyBhbmQgeW91ciBkZXNjcmlwdGlvbiBvZiBmZWVsaW5nICJzdGFydGVkIHRvIGZlZWwgcGh5c2ljYWxseSB0ZW5zZSBhbmQgc2hha3ksIGV2ZW4gdGhvdWdoIHNoZSBpcyBsaXRlcmFsbHkgdGhvdXNhbmRzIG9mIG1pbGVzIGF3YXkiIGlzIGVlcmlseSBzaW1pbGFyIHRvIHdoYXQgaGUgd2FzIGV4cGVyaWVuY2luZyBiZWZvcmUgYmVpbmcgZm9ybWVybHkgZGlhZ25vc2VkIHdpdGggYW4gYW54aWV0eSBkaXNvcmRlci4uIApXaGlsZSwgdGhlIHNpZ25zIHdlcmUgdGhlcmUgYnV0IEkgd2FzIHNvIGZhciBpbiBsb3ZlIHRoYXQgSSBkaWRuIHNlZSB0aGVtIGF0IHRoZSB0aW1lIGJ1dCB0aGV5IGFyZSBjbGVhciBhcyBkYXkgbG9va2luZyBiYWNrLiBBbnl3YXlzLCBJIHNwZW50IHRoZSBuZXh0IDYgbW9udGhzIGJlaW5nIG1pc2VyYWJsZSBhbmQgcmlnaHQgYXMgSSB3YXMgZmluYWxseSBnZXR0aW5nIG92ZXIgaGVyIHNoZSBjYWxsZWQgbWUgYmFjayB1cC4gSSwgbGlrZSBhIGZvb2wsIGFncmVlZCB0byBsZXQgaGVyIHRha2UgbWUgb3V0IHdoaWNoIGxlZCB0byB1cyBoYXZpbmcgc2V4LiBTaG9ydGx5IHRoZXJlYWZ0ZXIsIEkgcmVhbGl6ZWQgdGhhdCB3aGF0IEkgaGFkIGJlZW4gZGVzcGVyYXRlbHkgd2FudGluZyB0byBoYXBwZW4gZm9yIGhhbGYgYSB5ZWFyIHdhcyBub3Qgd2hhdCBJIHdhbnRlZCBhdCBhbGwuIFdoYXRldmVyIHdhcyB0aGVyZSBiZWZvcmUgdGhlIGJyZWFrdXAgd2FzIGdvbmUgYW5kIHJlcGxhY2VkIHdpdGggZGlzdHJ1c3QgYW5kIGluIHNvbWUgd2F5cyBhIGNvbXBsZXRlIHN0cmFuZ2VyLgpJdCB3aWxsIGJlIGhvbWUgdG8gV2FybmVyTWVkaWEgYXMgaXQgc2F5cyAic2F5b25hcmEiIHRvIGl0cyBmb3JtZXIgbmFtZXNha2UgVGltZSBXYXJuZXIgQ2VudGVyICAgd2hpY2ggd2lsbCBiZSByZW5hbWVkIERldXRzY2hlIEJhbmsgQ2VudGVyLiAKQWxzbyB0aGVyZSBhcmUgbG90IG9mIHNhbHR5IFlUIGNvbW1lbnRzIGFib3V0IHRoZSBhZ2VudHMgYmVpbmcgbmljZSB0byBDaHJpcy4gSSBnZXQgdGhlIGp1ZGdlbWVudCBhbmQgYmVsaWV2ZSBJIG5vdCBzZW5kaW5nIENXIGEgQ2hyaXN0bWFzIHByZXNlbnQgYnV0IHBlb3BsZSBmb3JnZXQgdGhhdCB0aGUgRkJJIGhhcyBzcGVudCBkZWNhZGVzIGZpZ3VyaW5nIG91dCBob3cgdG8gZ2V0IHRoZXNlIGNyaW1pbmFscyB0byB0YWxrLiBCZWluZyBuaWNlIHRvIENocmlzIHdhc24gc3Ryb2tpbmcgaGlzIGVnbzsgaXQgaXMgYSBwcm92ZW4gdGVjaG5pcXVlIHRvIGdldCB0aGUgY3JpbWluYWwgdG8gY29uZmlkZSBpbiB5b3UuLiAKSSdtIGp1c3QgYSBjb25zdW1lciBhbmQgaGF2ZSBuZXZlciBzb2xkIGNhcnMuIE1hbnVmYWN0dXJlcnMgY2FuIGhhdmUgaW5jZW50aXZlcyB0byB0aGUgZGVhbGVyIHdoaWNoIHRoZXkgY2FuIHBhc3Mgb24gdG8gdGhlIGN1c3RvbWVyLiBJJ20gYWJvdXQgdG8gYnV5IGEgMjAxOSBQaWxvdCAkMTUwMCBiZWxvdyBpbnZvaWNlIGJlY2F1c2Ugb2YgYSBkZWFsZXIgaW5jZW50aXZlLiBUaGVyZSdzIGFsc28gYSBob2xkYmFjayB0byB0aGUgZGVhbGVyLiBIb25kYSBGaW5hbmNpYWwgU2VydmljZXMpLgpMYW4xY28gIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpPaWZmb3JkIEhvbGxlciBhbmQgc29uLCBKZWZmZXJzb247IE1ycy4gV2F5bmUgV2VudHdvcnRoIGFuZCBKaW1teSBPbHNvbiwgV2hpdGV3YXRlciwgYW5kIEFkYWxlIEdvZWdsZWluLCBGb3J0IEF0a2luc29uLiBNT05ST0UgSE9TUElUQUwgVGhpZWYgTGVhdmVzIEdJICQxNTAgYW5kIFRpY2tldHMgT0FLTEFORCwgQ2FsaWYuIApJZiB5b3UgcGxhbnQgdGhpcyBtYXNzIGxpa2UgYSBzZWVkIGRpcmVjdGx5IGludG8gYSBncmlldm91cyBib2RpbHkgaW5qdXJ5IG9uIGl0IG1vc3QgaHVtYW5vaWQgb3IgbW9uc3Ryb3VzIHNwZWNpZXMsIGl0IHdpbGwgdGFrZSA0IHRvIDggd2Vla3MgdG8gcmVncm93IGFueSBtaXNzaW5nIG9yZ2FucyBmb3IgbG9zdCBsaW1icyBwcmVzZW50LiBUaGVyZSBtYXkgYmUgbW9yZSBuZWVkZWQgZm9yIGl0IHRvIHdvcmsgaG93ZXZlciwgZGVwZW5kaW5nIG9uIHRoZSBleGFjdCBzcGVjaWVzIG9mIHRoZSB0aGluZyB1c2luZyBpdC4gVGhpcyBjb3VsZCBiZSBhIGJpdCBvZiBob25leSwgYW5vdGhlciBoZXJiLCBtYXliZSBldmVuIGEgYml0IG9mIG1hZ2ljLkJlIHdhcm5lZCBob3dldmVyOyBvbmNlIHRoZSBoZWFydCBvZiBhbiBvYnJvIGNhcCBoYXMgdGFzdGVkIG9mIGEgYmVpbmcsIGlmIGl0IGlzIHBsYW50ZWQgaW4gYSBkYXJrIGFuZCBtb2lzdCBwbGFjZSBiZWZvcmUgaXQgaXMgZnVsbHkgY29uc3VtZWQgaW4gdGhlIGhlYWxpbmcgcHJvY2VzcywgdGhlcmUgaXMgYSBjaGFuY2UgdGhhdCBpdCB3aWxsIGdyb3cgYSByb3VnaCBhbmQgY3J1ZGUgZHVwbGljYXRlIG9mIHRoYXQgYmVpbmcuIFN1Y2ggYSBjcmVhdGlvbiBpcyBmdWxseSBmdW5nYWwgaW4gbWFrZXVwLCBob3dldmVyIHRoZXkgYXJlIG9mIHVua25vd24gcG93ZXIsIGludGVsbGlnZW5jZSwgYW5kIGRpc3Bvc2l0aW9uLCBhbmQgYXJlIHdob2xseSB1bnByZWRpY3RhYmxlIGJlaW5ncy5Zb3UgY2FuIGZlZWQgYW5kIGxvc2UgYW5kIHRocm93IGEgZ2FtZSBhcyBhbnkgcGljayBpbiBhbnkgcm9sZS4gUGVvcGxlIGNvbnN0YW50bHkgZmVlZCBhbmQgcGxheSBzaGl0dGlseSBhbmQgbG9zZSBpbiA1djVzLCBpdCBoYXBwZW5zIGF0IGxlYXN0IG9uY2UgaW4gYSB2YXN0IG1ham9yaXR5IG9mIGFsbCA1djVzIHBsYXllZC4gUGVvcGxlIGp1c3QgZG8gc2hpdCBzb21ldGltZXMsIG9yIHRoZXkgZ2V0IGNvdW50ZXJlZCwgb3IgdGhleSBnZXQgYmVoaW5kOyBpdCB0aGUgbGF3IG9mIE1PQkFzLCBhbmQgZ2FtaW5nIGluIGdlbmVyYWwgbm90IGV2ZXJ5b25lIHdpbGwgZG8gd2VsbC5CdXQgd2hlbiB5b3UgdGhyb3cgYSB0YW50cnVtIGFuZCBzaXQgaW4gYmFzZSB1bnRpbCB0aGUgZ2FtZSBlbmRzLCB5b3UgYWN0aXZlbHkgY2hvb3NpbmcgdG8gZHJhZyB5b3VyIHRlYW0gZG93biBiZWNhdXNlIHlvdSBkb24gd2FudCB0byBzdGFpbiB5b3VyIGhhbmRzIHdpdGggbm9uIG1ldGEgcGlja3MuIEl0IG5vdCBvbmx5IGEgbXVjaCBlYXNpZXIgYW5kIG1vcmUgZWZmZWN0aXZlIHdheSBvZiBzYWJvdGFnaW5nIHlvdXIgdGVhbSwgaXQgYWxzbyBtdWNoIG1vcmUgdmlzaWJsZS4gWW91IG5vdCBldmVuIHRyeWluZywgeW91IGp1c3QgaWRsaW5nIGFuZCBjb21wbGFpbmluZyBhYm91dCBvdGhlciBwZW9wbGUuClBUUyBtYXkgd29yc2VuIHdpdGggYWdlLCBzaG93aW5nIHVwIGluIHZldGVyYW5zIGxhdGVyIGluIGxpZmUgYXMgdGhlaXIgZmVsbG93IHNlcnZpY2UgbWVtYmVycyBwYXNzIGF3YXkuIFZldGVyYW5zIHdobyBoYWQgUFRTIGFuZCBoZWFkIGluanVyeSBleHBlcmllbmNlZCBoaWdoZXIgc2VsZiByZXBvcnRlZCBwYWluIGNvbXBhcmVkIHRvIFBUUyB3aXRob3V0IGhlYWQgaW5qdXJ5IChTdG9qYW5vdmljIGV0IGFsLiwgMjAxNikgc28gYmUgbWluZGZ1bCB0aGF0IHRoZXNlIGluZGl2aWR1YWxzIG1heSBoYXZlIGxvd2VyIHBhaW4gdGhyZXNob2xkcy4uIApBdXRvbWF0aWNzMWltICA0IHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvCkdldCBhcHBsaWVkIGZvciBNZWRpY2FyZSBhbmQgU29jaWFsIFNlY3VyaXR5IERpc2FiaWxpdHkuIApJdCBkZWZpbml0ZWx5IGlzLiBUaGUgdHJhZGluZyBlY29ub215IGlzbiBzZWFtbGVzbHkgaW50ZWdyYXRlZCBpbnRvIHRoZSByZXN0IG9mIHRoZSBnYW1lIGFzIGEgc3lzdGVtLiAKTWFyZ2FyZXQgaXMgYWxzbyBzdXJ2aXZlZCBieSBmaXZlIGdyZWF0IGdyYW5kY2hpbGRyZW46IFRyZXZvciwgSnVzdGluLCBDcmFpZyBEZU5vYmxlOyBTaWVycmEgYW5kIEthZWxhIEdpbGxpcy4gClRoZXNlIGNoaXBzIGFsbCBwb3NzZXNzIHRoZSBzYW1lIG11bHRpY29sb3JlZCBlZGdlIHNwb3QgZGVzaWduIGFzIGRvIHRoZSBvbmVzIHVzZWQgaW4gcHJvZmVzc2lvbmFsIGNhc2lub3MuIFRoZSBjaGlwIGlubGF5IGlzIHNlYWxlZCBwcmV2ZW50aW5nIGFueSBwZWVsaW5nIG9yIHN0YWluaW5nLiBUaGlzIGlubGF5IGhhcyBhIGxpbmVuIHR5cGUgZmluaXNoIGFsbG93aW5nIGl0IHRvIGJlIGNsZWFuZWQgd2l0aCBtaWxkIHNvYXAgYW5kIHdhcm0gd2F0ZXIuIFRoaXMgY29uc3RydWN0aW9uIG1ha2VzIGl0IGltcG9zc2libGUgZm9yIGFueW9uZSB0byByZW1vdmUgdGhlIGxvZ28gd2l0aG91dCBydWluaW5nIHRoZSBjaGlwLgpQZW9wbGUgd2hvIGFidXNlIGNoaWxkcmVuIGdldCBvZmYgb24gdGhlIHBvd2VyIHRoZXkgZmVlbCBvdmVyIGh1cnRpbmcgaGVscGxlc3MgY2hpbGRyZW4uIFRoZXkgYWxzbyBhcmUgbGVzcyBsaWtlbHkgdG8gc2F5IGFueXRoaW5nIG91dCBvZiBmZWFyLiAKSXMgdG9vIG11Y2ggYXQgc3Rha2UuIApFeGFjdGx5IHdoYXQgSSBmZWVsLiAKSmFrZSBQYXR0ZXJzb24sIDIxLCB3cm90ZSB0byBhIHJlcG9ydGVyIGF0IEtBUkUgMTEgTmV3cyB0aGF0IGhlIGhhZCBhY3RlZCAibW9zdGx5IG9uIGltcHVsc2UiIGJ1dCBkb2VzIG5vdCAidGhpbmsgbGlrZSBhIHNlcmlhbCBraWxsZXIsIiBhY2NvcmRpbmcgdG8gYSBjb3B5IG9mIHRoZSBGZWIuIApEYW4gTWNDbHVyZSBhbmQgaGlzIGhhbmRzIG9uIHdvcmtzaG9wLktldmluIE1vcnJpcywgaGVhZCBhdGhsZXRpYyB0cmFpbmVyIGZvciBCcmlnaGFtIFlvdW5nIFVuaXZlcnNpdHkgZm9vdGJhbGwgdGVhbSwgcHJlc2VudGVkIGNhc2Ugc3R1ZGllcyBhbmQgaW50cm9kdWNlZCBoaXMgaW50ZWdyYXRlZCBhcHByb2FjaCB0byB0cmVhdGluZyBmb290YmFsbCBpbmp1cmllcy4uIApBbmQgSSB0aGluayB5b3UgYWxzbyBuZWVkIHRvIHRha2UgYSBsb29rIGF0IHdoYXQga2luZCBvZiBwZXJzb24geW91ciBnaXJsZnJpZW5kIHJlYWxseSBpcy4gTm90IG1hbnksIGlmIGhhcmRseSBhbnkgcGVvcGxlIGFyZSBnb2luZyB0byBhZ3JlZSB0aGF0IHNvbWVvbmUgd2l0aCA0IGtpZHMgZnJvbSAzIGRpZmZlcmVudCBtZW4gd2hvIGJhcmVseSBrbm93cyBhIGd1eSBmb3IgYSB5ZWFyIG1vdmVzIGhpbSBpbiB3aXRoIGhlciBhbmQgaGVyIGtpZHMsIHdvdWxkIGJlIGNvbnNpZGVyZWQgdG90YWxseSBtZW50YWxseSBjb21wZXRlbnQgYW5kIGhhcyB0aGVpciBsaWZlIHRvZ2V0aGVyLiAKV2UgbmV2ZXIgdGhvdWdodCB3ZSB3b3VsZCBkZXNjcmliZSBzY2FsbG9wcyBhcyAiY29tZm9ydCBmb29kLCIgYnV0IHRoYXQncyB3aGF0IHRoZXNlIGFyZSB0aGUgc29ydCBvZiB0aGluZyB5b3VyIGdyYW5kbW90aGVyIHdvdWxkIG1ha2UgaWYgc2hlIGp1c3QgaGFwcGVuZWQgdG8gYmUgYSBjaGVmIHdobydzIGNvb2tlZCBpbiBmaW5lIHJlc3RhdXJhbnRzIGFyb3VuZCB0aGUgd29ybGQuLiAKNykgQXQgdGhpcyBwb2ludCBjaGVjayB0aGUgbGV2ZWwgb2YgbGlxdWlkIGluIHRoZSByb2FzdGluZyBwYW4uIElmIG1vc3Qgb2YgdGhlIGxpcXVpZCBoYXMgZXZhcG9yYXRlZCwgYWRkIGFub3RoZXIgMjI1bWwgb2Ygc3RvY2sgYW5kIHJldHVybiB0aGUgY2hpY2tlbnMgdG8gdGhlIG92ZW4uCkNvcHMgd2lsbCBnaXZlIHRvdXJzIG9uIGFmdGVybm9vbnMgZnJvbSBEZWMuIDE3IHRvIDIyLCB3aGVuIFNhbnRhIHdpbGwgc3RvcCBieSB0aGUgcHJlY2luY3QgdG8gaGFuZCBvdXQgZ2lmdHMgdG8ga2lkcyB1bmRlciAxMiwgTW9yYWxlcyBzYWlkLgpFbiBBc2llLCBsJ2FmZm9sZW1lbnQgZCd1bmUgdHJlbnRhaW5lIGRlIGJhbnF1ZXMsIHF1aSBhdmFpZW50IHBydCBkZSBsJ2FyZ2VudCAgTGVobWFuIEJyb3RoZXJzLCBzJ2VzdCBycGVyY3V0IHN1ciBsZXMgbWFyY2hzLiBBdSBSb3lhdW1lIFVuaSwgYydlc3QgSEJPUywgbCd1bmUgZGVzIHBsdXMgZ3JhbmRlcyBiYW5xdWVzIGJyaXRhbm5pcXVlcywgcXVpIGEgdCBmdXNpb25uZSBkZSBmb3JjZSBqZXVkaSBhdmVjIHNhIGNvbmN1cnJlbnRlLCBsYSBMbG95ZHMgVFNCLCBhdmVjIGxhIGJuZGljdGlvbiBkdSBnb3V2ZXJuZW1lbnQgQnJvd24uCldoYXQgaSB0aG91Z2h0IGR1ZSB0byB0aGUgRVBNLiAKV2FpdCwgd2h5IGRvIEkgaGF2ZSB5b3UgdGFnZ2VkIGFzICJOT1BFIE5PUEUgTk9QRSI/IE5pY2UgdHJ5LCB5b3UgbW9uc3Rlci4gWW91IGFyZSBub3cgYmFubmVkIGZyb20vci9weW9uZ3lhbmdXaGF0IGRpZCBJIGp1c3QgcmVhZD8gRGFmdXE/IEkgcmVhZCB0aGF0IGFzICJZT1UgSEFEIE9ORSBKT0IiLiBJIGNhbiBmYXAgdG8gdGhpcy4gCkhlIHdhcyBpbnRlcmVzdGVkIGluIHRoZSBza2lzLCBzYWlkIE1vcnJpZSBTaGVwaGVyZCwgVmFpbCBmaXJzdCBza2kgc2Nob29sIGRpcmVjdG9yLCBhbmQgYW4gZWFybHkgSGVhZCBza2kgdGVzdGVyIGluIEFzcGVuIGFuZCBOZXcgSGFtcHNoaXJlLiBIYWQgbm8gdGFsZW50LCBidXQgSSB3b3VsZG4gYWRtaXQgaXQgdG8gbXlzZWxmLiBIaXMgc3RydWN0dXJhbCB2aXN1YWxpemF0aW9uIHNjb3JlIHdhcyB0aGUgaGlnaGVzdC4gCllvdSBjYW4gaGF2ZSBjb21wbGV0ZSBhbmQgZnJlZSByZWluIG92ZXIgdGhlIGNhcmQgZGVzaWduIHRoYXQgeW91IGNob29zZSBqdXN0IGFzIGxvbmcgYXMgdGhleSBmb2xsb3cgdGhlIHByaW1hcnkgcnVsZXMgb2YgYSBwbGF5aW5nIGNhcmQgZGVjay4gClVTIHN0b2NrIG1hcmtldCB3YXMgbm93IGEgY2xhc3Mgc3lzdGVtLCByb290ZWQgaW4gc3BlZWQsIG9mIGhhdmVzIGFuZCBoYXZlIG5vdHMuIFRoZSBoYXZlcyBwYWlkIGZvciBuYW5vc2Vjb25kczsgdGhlIGhhdmUgbm90cyBoYWQgbm8gaWRlYSBhIG5hbm9zZWNvbmQgaGFkIHZhbHVlLgpNYXR0LCBteSBhZm9yZW1lbnRpb25lZCBmcmllbmQsIGhhcyBhIGJyb3RoZXIsIEpha2UsIHdobyBkZWNpZGVkIHRvIGdvIHBybyBhIGZldyB5ZWFycyBhZnRlciBoZSBkaWQuIApTb21lIG9mIHRoZSBwZW9wbGUgcmVwbHlpbmcgbm90IHVuZGVyc3RhbmRpbmcgaG93IHlvdSBjb3VsZG4gImp1c3QgcmVwbHkgYmFjayIgb3IgInlvdSBhbiBpbW1hdHVyZSBicmF0IiBoYXZlIGNsZWFybHkgTk8gSURFQSB3aGF0IGl0IGxpa2Ugd2hlbiB5b3VyIG93biBwYXJlbnRzIGFyZSBkYW1hZ2luZyBhbmQgYWJ1c2l2ZS4gClNvIHlvdSBnbyB0byBXYWxtYXJ0IGluIHRoZSB5b2dhIHBhbnRzIHdpdGggbm8gbWFrZXVwIGFuZCB5b3UgbWlzc2VkIHRoZSBneW0gZm9yIHR3byB3ZWVrcyBzbyB0aGVyZSBsaXR0bGUgcG9vY2hpbmcgb3V0LiAKV2VsbCB0aGF0IGRheSBJIHByZSBnYW1lZCB3aXRoIGtmYyB0aGlua2luZyBJIHdhcyBnZXR0aW5nIGEgZ29vZCBsaW5pbmcuIApNYXliYWNoLCB3aG8gaW5jbHVkZXMgZWxlY3RyaWMgd2luZSBjb29sZXJzIGluIHNvbWUgb2YgaXRzIG1vZGVscyBhbmQgcHJvdmlkZXMgY2hhbXBhZ25lIGZsdXRlcyB0byBib290LCBoYXMgc3BlY2lhbGx5IGRlc2lnbmVkIGN1cGhvbGRlcnMgZm9yIGNoYW1wYWduZSBmbHV0ZXMgW3NvdXJjZTogVmFsZGVzIERhcGVuYV0uIFdlIHNob3VsZCBub3RlIHRoYXQgdGhlc2UgYWxjb2hvbCBmZWF0dXJlcyBhcmUgZm9yIHRoZSBiYWNrc2VhdCBleGNsdXNpdmVseSwgbWVhbnQgZm9yIHRob3NlIHdpdGggZW5vdWdoIG1vbmV5IHRvIGhpcmUgYSBjaGF1ZmZldXIgdG8gdGFrZSBjYXJlIG9mIHRoZSB3aG9sZSBkcml2aW5nIHRoaW5nLi4gCkR1cmluZyBzaG93ZXIsIGRhYiBhIGxpdHRsZSBzaGFtcG9vIG9udG8geW91ciBoYW5kcyBhbmQgY3JlYXRlIGxhdGhlci4gQXBwbHkgdGhpcyB0byB5b3VyIHNpZGVidXJucyBhbmQgbWFzc2FnZSBmb3IgYSBmZXcgbWludXRlcy4gUmluc2UgdGhvcm91Z2hseS4gCkVzdGVyczogMjAgJSBkb250IGFjdGF0ZSBkZSBib3JueWxlLCBpc292YWxyYXRlIGRlIGJvcm55bGUsIGFjdGF0ZSBkZSB0cmFucyBjaHJ5c2FudGhteWxlCkRlIHZvbGdlbmRlIGRhZ2VuIHphbCBKYW4gaGV0IGRhZ2JvZWsgc2NocmlqdmVuLiBIaWogemFsIHZlcnRlbGxlbiB3YXQgaGlqIGhpZXIgYWxsZW1hYWwgbWVlbWFha3QuIFZhbmRhYWcgemlqbiBlciBhbCBlbmtlbGUga2xlaW5lIHRlc3QgZ2V3ZWVzdCBvbSB6aWpuIG1vZ2VsaWpraGVkZW4gd2F0IHRlIGNoZWNrZW4uClN1Ym1pc3Npb25zIGluIHdoaWNoIHRoZSBodW1vciBjYW4gYmUgY29udmV5ZWQgdmlhIHRleHQgYWxvbmUgYXJlIG5vdCBhbGxvd2VkLiBUaGlzIGluY2x1ZGVzIHBpY3R1cmVzIG9mIHRleHQgd2l0aCBpcnJlbGV2YW50IGltYWdlcyB0aGF0IGRvbiBhZGQgY29udGV4dCBhbmQgdHJhbnNjcmlwdGlvbnMgb2Ygc3RhbmR1cCBjb21lZHkgKGFzIHdpdGggL3Ivc3RhbmR1cHNob3RzKS4gTWFrZSBhIHNlbGYgcG9zdCBpbnN0ZWFkLiBFeGFtcGxlClRoZSB3b3JzdCBpcyBkb2luZyBhIHdpdGhkcmF3YWwgYW5kIHRoZWlyIHNpdGUgaXMgZW1wdHkgb2YgY2hwIGFuZCB0aGV5IGhhdmUgdG8gcmVsb2FkLiBQZW9wbGUgd2luIGNocCB0aGV5IGRvbiBldmVuIGhhdmUgdG8gcGF5IG91dC4gU28gcGVvcGxlcyB3aXRoZHJhd2FscyBhcmUgZGVjbGluZWQgdW50aWwgdGhleSByZWxvYWQgdGhlaXIgY2FzaGllciB3aXRoIGNocC4gCk1vcmUgc3BlY2lmaWNhbGx5LCB0aGUgQUNMVSByZWNvbW1lbmRzIHRoYXQgdGhlIHN0YW5kYXJkIG9mIHByb29mIGZvciBzdWNoIHByb2NlZWRpbmdzIHNob3VsZCBtaXJyb3IgdGhlIHN0YW5kYXJkIGdvdmVybmluZyB2aXJ0dWFsbHkgYWxsIG90aGVyIGNpdmlsIHByb2NlZWRpbmdzLCByZXF1aXJpbmcgcHJvb2YgYnkgYSBwcmVwb25kZXJhbmNlIG9mIHRoZSBldmlkZW5jZTsgdGhhdCB0aGUgcmlnaHQgdG8gY3Jvc3MgZXhhbWluYXRpb24gc2hvdWxkIGJlIG1vZGlmaWVkIHRvIGd1YXJkIGFnYWluc3QgYWJ1c2l2ZSBxdWVzdGlvbmluZywgdG8gYWZmb3JkIGJvdGggc3R1ZGVudHMgbGF3eWVycyBpZiB0aGV5IHNvIGNob29zZSwgYW5kIHRvIGFwcGx5IG9ubHkgd2hlbiBzZXJpb3VzIHNhbmN0aW9ucyBhcmUgcG9zc2libGU7IHRoYXQgdGhlIHByb3Zpc2lvbiBnb3Zlcm5pbmcgY29uY3VycmVudCBjcmltaW5hbCBwcm9jZWVkaW5ncyBzaG91bGQgYmUgc3RyZW5ndGhlbmVkIHRvIGZ1cnRoZXIgc2FmZWd1YXJkIHJlc3BvbmRlbnRzJyByaWdodHMgYWdhaW5zdCBjb21wZWxsZWQgc2VsZiBpbmNyaW1pbmF0aW9uOyB0aGF0IHRoZSBwcm92aXNpb24gZ3VhcmFudGVlaW5nIGFjY2VzcyB0byBldmlkZW5jZSBjb2xsZWN0ZWQgYnkgaW52ZXN0aWdhdGlvbiBzaG91bGQgYmUgY2xhcmlmaWVkIHRvIHByb3ZpZGUgdGhhdCBpcnJlbGV2YW50IGFuZCBwcml2aWxlZ2VkIGluZm9ybWF0aW9uIGFuZCBjb21tdW5pY2F0aW9ucyBhcmUgbm90IHN1YmplY3QgdG8gZGlzY2xvc3VyZSBhYnNlbnQgYSBzaG93aW5nIG9mIHBhcnRpY3VsYXJpemVkIHJlbGV2YW5jZTsgYW5kIHRoYXQgdGhlIGFwcGVhbCBwcm92aXNpb24gYmUgY2xhcmlmaWVkIHRvIGVuc3VyZSB0aGF0IGNvbXBsYWluYW50cyBhcmUgZW50aXRsZWQgdG8gYXBwZWFsIHNhbmN0aW9ucyBvbiB0aGUgZ3JvdW5kIHRoYXQgdGhleSBhcmUgaW5zdWZmaWNpZW50IHRvIHJlc3RvcmUgZXF1YWwgYWNjZXNzIHRvIHRoZSByZWNpcGllbnQncyBlZHVjYXRpb25hbCBwcm9ncmFtcyBvciBhY3Rpdml0aWVzLgpOZWRlbiBidSBrYWRhciBzZXZpbG1peW9yIGFubGFtaXlvcnVtIGFjaWtjYXNpLiBIZXJrZXNpbiBrZW5kaW5pIGJlZ2VuZGlnaSBkb2dydS4gU29sY3VsYXJpbiBla3NpeWkgZWxlIGdlY2lybWVzaSwgc2FnY2lsYXJpbiBlbGUgZ2VjaXJtZXNpIGFrcGxpIGtpc21pbiBlbGUgZ2VjaXJtZXNpIGZlbGFuLiAKU251IHN0YXRpb24gaXMgdGhlIGxhc3QgaXNsYW5kIHBsYXRmb3JtIGJlZm9yZSBzYW1zdW5nIHN0YXRpb24gdGhvdWdoIHNvIGkganVzdCBsZWFuZWQgYWdhaW5zdCB0aGUgZG9vciBpIGNhbWUgaW4gc2luY2UgaXQgbmV2ZXIgb3BlbmVkIGFnYWluLiAKJ1llc3RlcmRheSBtb3JuaW5nLCB3aGlsZSBpbiBhIHRheGkgb24gdGhlIHdheSB0byB0aGUgYWlycG9ydCwgSHVzYmFuZCBzZW5kcyBhIG1lc3NhZ2UgdG8gbXkgd29yayBlbWFpbCB3aGljaCBpcyBjb25uZWN0ZWQgdG8gbXkgcGhvbmUuIEhlJ3MgbmV2ZXIgZG9uZSB0aGlzLCB3ZSBhbHdheXMgY29tbXVuaWNhdGUgaW4gcGVyc29uIG9yIGJ5IHRleHQuIApIb3dldmVyLCBzb21lIGFuYWx5c3RzIHRoaW5rIHRoZSA2MyB5ZWFyIG9sZCBoYXMgbm90IGdpdmVuIHVwIG9uIGEgZGVhbC4uIApNaW5vciBhcmUgc21hbGwgZW5lbWllcyB0aGF0IGRpZSBmYXN0LCBidXQgc3RpbGwgcG9zZSBhIHRocmVhdCwgYW5kIGRvbiByZXdhcmQgbXVjaCBpZiBhbnl0aGluZy4gCkZ1bGwsIGNvbXBsZXRlIHRvdGFsIGltbWVyc2lvbiB3b3VsZCBoYXZlIHRvIGJlIHRoZSBmaXJzdCB0aW1lIEkgcGxheWVkIFNreXJpbSBhbmQgQmF0dGxlZnJvbnQuIApXYXMgbG92ZWQgaW4gdGhlIE1vdG9yYmlrZSB3b3JsZCB0b28sIG5lYXJseSBiZWNhbWUgYSBiaWtlIHJhY2VyIGFyb3VuZCB0aGUgdGltZSBvZiBGaXJlc3RhcnRlciB3YXMgcmVsZWFzZWQuIApJdCBpcyBmZWFyZWQgYnkgdGhlIGxpdmluZyBhbmQgbXVsdGlwbGUgdGltZXMgb3ZlciB0aGUgbW9yYWwgaXMgdGhhdCBkZWF0aCBzaG91bGQgYmUgYWNjZXB0ZWQuVGhlIHBvaW50IGlzLCB3aGlsZSB5b3UgdGFsayBhYm91dCBpc29sYXRpb24sIGlzb2xhdGlvbiB3YXMgbm90IHRoZSBvbmx5IG1vdGlmIGluIFRoZSBUd2lsaWdodCBab25lIHRoYXQgcmVzb25hdGVkIHdpdGggYXVkaWVuY2VzLlRoaXMgaXNuIHRvIHN1Z2dlc3QgUm9kIFNlcmxpbmcgbGl2ZWQgaGlzIGxpZmUgd2l0aCBvbmUgZm9vdCBpbiB0aGUgbWFjYWJyZS4gSGlzIGRhdWdodGVyIGRlc2NyaWJlcyBoaW0gYXMgIiBhIHZlcnkgcG9zaXRpdmUsIGZ1biwgZG93biB0byBlYXJ0aCBwZXJzb24uIkJ1dCwgYXQgdGhlIHNhbWUgdGltZSwgSSB0aGluayBpdCBiZWhvb3ZlcyB1cyB0byBjb25zaWRlciBob3cgbXVjaCBTZXJsaW5nIHdhcyBwdWxsaW5nIGZyb20gcGVyc29uYWwgZGVtb25zIHdoZW4gaGUgd3JvdGUgY2hhcmFjdGVycyB3cmVzdGxpbmcgd2l0aCBwZXJzb25hbCBkZW1vbnMgYW5kLCB0byBnZXQgdG8gdGhlIG1lYXQgb2YgeW91ciBxdWVzdGlvbiwgd2h5IHRoaXMgcmVzb25hdGVkIHdpdGggc28gbWFueSBBbWVyaWNhbnMgaW4gdGhlIGxhdGUgNTBzIGFuZCBlYXJseSA2MHMuVGhlIGRhcmsgdW5kZXJiZWxseSBvZiAxOTUwIHN1YnVyYmlhIGhhcyBiZWNvbWUgYW4gYXNzdW1lZCB0cnV0aCBvZiBmaWN0aW9uLiAKVWdoLCBJIHNvcnJ5IHlvdSBoYXZlIHRvIGRlYWwgd2l0aCB0aGlzLCBteSBodXNiYW5kIGFuZCBJIGhhZCBzb21ldGhpbmcgc2ltaWxhciBoYXBwZW4gd2hlbiB3ZSB3ZXJlIGluIGEgZGlmZmVyZW50IG5laWdoYm9yaG9vZCwgYnV0IGl0IHdhcyBhbiBvdmVyc2l6ZWQgYmx1ZSBoZWVsZXIgd2hvIGNvdWxkIGp1bXAgYSA2IGZvb3Qgd29vZGVuIGZlbmNlIGxpa2UgaGUgd2FzIGEgY2F0LiBBdCB0aGUgdGltZSwgdGhlIG5laWdoYm9yIGluIHF1ZXN0aW9uIGRpZG4ga25vdyB3aG8gd2FzIGNhbGxpbmcgb24gaGlzIGRvZywgc28gSSBuZXZlciBoYWQgdG8gZGVhbCB3aXRoIGhpbSBkaXJlY3RseS4gTXkgYmVzdCBhZHZpY2U6IHRoZXNlIHBlb3BsZSBhcmUgbmV2ZXIgZ29pbmcgdG8gYmUgcmVhc29uYWJsZSBvciBsb2dpY2FsLCBzbyBkb24gZ2V0IGludG8gYXJndW1lbnRzIHdpdGggdGhlbS4gCklmIGNvbnRyYWJhbmQgaXMgZGlzY292ZXJlZCB3ZWxsIGNvbmZpc2NhdGUgaXQgYW5kIGxvZyBpdC4gQnV0IGl0IGlzIE5FVkVSIHRpZWQgdG8gYW55IHBhdGllbnQgaW5mb3JtYXRpb24uIFdlIGVpdGhlciBkaXNwb3NlIG9mIGl0LCBvciB3ZSdsbCBjYWxsIGxvY2FsIGxhdyBlbmZvcmNlbWVudCB0byBzZWUgaWYgdGhleSB3YW50IHRvIHBpY2sgaXQgdXAgYW5kIHJlbGVhc2UgdG8gdGhlbSwgYnV0IG5ldmVyIHByb3ZpZGUgZnJvbSB3aG9tIHRoZSBjb250cmFiYW5kIHdhcyBjb25maXNjYXRlZC4gdGhhdCB3b3VsZCBiZSBhIEhJUEFBIHZpb2xhdGlvbiBvbiB0aGUgc2VjdXJpdHkgZGVwYXJ0bWVudC5zbyBJIGFzayBhZ2Fpbiwgd2h5IHRoZSBoZWxsIGlzIFBEIGV2ZW4gaW4gYSBwYXRpZW50IHJvb20gZm9yIGEgc3VzcGVjdGVkIGNvbnRyYWJhbmQgY2FsbD8gU29tZW9uZSBpbiB0aGUgaG9zcGl0YWwgZnVja2VkIHVwIHJveWFsbHkgYW5kIHZpb2xhdGVkIHRoYXQgcGF0aWVudCdzIEhJUEFBIHJpZ2h0cy4KVGhpcyBsZWFkcyB0byBzbWFsbCBtYXJrZXQgcHJvYmxlbXMsIG5vdCBvbmx5IGluIGNvbW1lcmNlLCBidXQgYWxzbyBpbiBwb2xpdGljcyBhbmQgcHVibGljIGFkbWluaXN0cmF0aW9uLiAKVGhyb3dpbmcgdGhlIHdvcmQgbWFzY3VsaW5pdHkgaW50byBpdCB0byBkZXNjcmliZSBtZW4gYmVpbmcgdG94aWMgdG8gb3RoZXIgbWVuIGlzIGlkaW90aWMuIApBcHBseSB0byB0aGUgb3RoZXIgbmlwcGxlIGFzIHdlbGwuLiAKRmlyc3QgS2V5cyBGbGlnaHQgVG8gQ3ViYSBJbiBNb3JlIFRoYW4gRml2ZSBEZWNhZGVzQSBzbWFsbCB0cmF2ZWwgZ3JvdXAgZGVwYXJ0ZWQgS2V5IFdlc3QgSW50ZXJuYXRpb25hbCBBaXJwb3J0IE1vbmRheSBvbiB0aGUgZmlyc3QgbGVnYWxseSBzYW5jdGlvbmVkIGNvbW1lcmNpYWwgcGFzc2VuZ2VyIGZsaWdodCBmcm9tIHRoZSBpc2xhbmQgY2l0eSB0byBIYXZhbmEsIEN1YmEsIGluIG1vcmUgdGhhbiBoYWxmIGEgY2VudHVyeS4KQXMgQVAgY29ycmVzcG9uZGVudCBhbmQgZm9yIGEgbG9uZyBzcGVsbCB0aGUgb25seSBBbWVyaWNhbiBqb3VybmFsaXN0IGluIFBha2lzdGFuLCBJIGhhZCBhIHJlbGF0aW9uc2hpcCB3aXRoIEJodXR0byB0aGF0IHZlcmdlZCBvY2Nhc2lvbmFsbHkgb24gaW50aW1hY3ksIGFzIHRoZSB0aW1lIGhlIGludml0ZWQgbWUgaW50byBoaXMgZ3Vlc3QgYmVkcm9vbSBpbiB0aGUgUGVzaGF3YXIgaG9tZSBvZiB0aGUgY2hpZWYgbWluaXN0ZXIgb2YgdGhlIG5vcnRod2VzdCBmcm9udGllciBwcm92aW5jZSwgdGhlIE11c2xpbSByZWxpZ2lvdXMgbGVhZGVyLCBNdWZ0aSBNYWhtdWQuLiAKU2hlIHdhcyB3cm9uZyBhbmQgc2hvdWxkIG5vdCBoYXZlIHVzZWQgeW91LiAKSWYgaGUgZXZlciBkb2VzIEkgd2lsbCBzdWUgaGlzIGZhdGFzcyBhbmQgbGl2ZSB3aXRoIG15IG1vbS4gCiJNdXNpY2lhbnMgZ2V0IHRvIHBsYXkgdG8gYSB2ZXJ5IHZhcmllZCBjcm93ZCwiIHNhaWQgTWFjRG9uYWxkLiAiSXQncyByZWFsbHkgYSBidW5jaCBvZiBwZW9wbGUgdGhhdCB3b3VsZCBuZXZlciBoYXZlIGFub3RoZXIgY2hhbmNlIHRvIHNlZSBbeW91ciBiYW5kIHBsYXldLiBXZSBoYXZlIDYwIHNvbWV0aGluZ3MgYWxsIHRoZSB3YXkgdG8gbWlsbGVubmlhbHMuIEV2ZXJ5Ym9keSBiZWxvbmdzIHRoZXJlLiBJdCdzIGEgdmVyeSBhcHByZWNpYXRpdmUgYXVkaWVuY2UuIgpXaGVuIGl0IGNvbWVzIHRvIHRoaXMgZGlzYXN0ZXIgb2YgYSBoZWFsdGggY2FyZSBiaWxsLCBvdXIgb25seSBob3BlIGlzIHRoYXQgdGhlIFJlcHVibGljYW5zIHdpbGwga2lsbCB0aGUgZGFtbiB0aGluZyB3aXRoIGEgZmlsaWJ1c3Rlci4gT2x5bXBpYSBTbm93ZSAoUiBNRSksIHdobyBoYWQgY29uc2lkZXJlZCBqdW1waW5nIHBhcnR5IGxpbmVzIGFuZCBzdXBwb3J0aW5nIHRoZSBEZW1zLCBoYXMgbm93IHNhaWQgc2hlIHdpbGwgam9pbiBoZXIgcGFydHkgZmlsaWJ1c3RlciBhbmQgdGhhdCBwcm9iYWJseSBhIGdvb2QgdGhpbmcuIExldCB0aGUgUmVwdWJsaWNhbnMgbG9vayBsaWtlIHRoZSB3aGlueSBsb3NlcnMgdGhleSBhcmUgYW5kIGxldCB0aGUgRGVtcyB3YWxrIGF3YXkgZnJvbSB0aGlzIEZyYW5rZW5zdGVpbiBtb25zdGVyIG9mIGEgYmlsbCBhbmQgc3RhcnQgb3Zlci4KVGVlbnMgYWxyZWFkeSBtYWtlIHVwIDIlIG9mIGNvc21ldGljIHN1cmdlcnkgcGF0aWVudHMgaW4gdGhlIFVTIGFuZCB0aGVpciBudW1iZXJzIGFyZSBncm93aW5nLiBhcmUgb2J2aW91c2x5IHVuZGVyIGEgdHJlbWVuZG91cyBhbW91bnQgb2YgcHJlc3N1cmUgdG8gbG9vayAiZ29vZCIgYW5kIHJlYWxpdHkgc2hvd3MgbGlrZSBNVFYgIkkgV2FudCBhIEZhbW91cyBGYWNlIiBzZXJ2ZSB0byBub3JtYWxpemUgY29zbWV0aWMgc3VyZ2VyeSwgYXMgaWYgbGlwbyBpcyBwYXJ0IG9mIGEgdGVlbiBhdmVyYWdlIGJlYXV0eSByZWdpbWVuLgpObyBzZXgsIGhvdCBnaXJscyBqdXN0IHNpdCB3aXRoIHlvdSBhbmQgZHJpbmsgd2hpc2tleSB3aXRoIHlvdS4gCldlbm4gd2lyIGRpZXNlIG9kZXIgamVuZSBBcnpuZWltaXR0ZWwgenVyIEhlaWx1bmcgdW5zZXJlciBLcmFua2hlaXRlbiBlaW5uZWhtZW4sIG1hY2hlbiB3aXIgdW5zIHJlY2h0IHNlbHRlbiBHZWRhbmtlbiBkYXJiZXIsIHdvcmF1cyBzaWUgYmVzdGVoZW4sIHdhcyBzaWUgZW50aGFsdGVuLCB3aWUgc2llIGhlcmdlc3RlbGx0IHdlcmRlbi4gRGllIHBoYXJtYXpldXRpc2NoZSBJbmR1c3RyaWUgaXN0IGVpbiByaWVzaWdlcywgYXVmIFVtc2F0eiBhdXNnZXJpY2h0ZXRlcyBHZXNjaGZ0LiAKQSB2aXN1YWwgZmVhc3Qgb2YgaG90IHlvdW5nIG1lbiBmb3Igc2NyZWFtaW5nIGdpcmxzIGFuZCB3b21lbi4gQW5kIGV2ZW4gaWYgSSBoYXZlIG15IGRvdWJ0cyB0aGF0IHBvcm4gaXMgbW9yZSBsaWJlcmF0aW5nIHRoYW4gcm9tYW5jZSwgYXQgbGVhc3QgaXQgZG9lc24gbWFrZSBtZSB3YW50IHRvIHNjcmVhbSAiTk8hIERPIE5PVCBHSVZFIFVQIFlPVVIgRlJJRU5EUyBBTkQgRkFNSUxZIEFORCBTQ0hPT0wgRk9SIEEgQk9ZISIgdGhlIHdheSB0aGUgVHdpbGlnaHQgc2VyaWVzIGRvZXMuIApUaGUgcmVzdCBvZiB5b3VyIGxvc3NlcyBhbGwgY2FtZSB3aGlsZSBzZWVpbmcgY2hlYXAgZmxvcHMgaW4gbGF0ZSBwb3NpdGlvbiwgZXhjZXB0IHRoYXQgb25jZSwgd2hlbiB0aGUgc21hbGwgYmxpbmQgcmFpc2VkIHlvdSwgYW5kIHRoZW4gaXQgY2FtZSBiYWNrIGFyb3VuZC4gWW91IGtuZXcgeW91IGhhZCB0byBjYWxsIGp1c3QgZm9yIHBvdCBvZGRzIHNha2UuIApBZnRlciBjb25zdHJ1Y3Rpb24gaXMgY29tcGxldGUgYW5kIGEgc3RyYXRhIHBsYW4gZmlsZWQgd2l0aCBnb3Zlcm5tZW50LCB0aGUgZGV2ZWxvcGVyIG11c3QgcmVwb3J0IGFubnVhbGx5IGZvciB0aGUgbmV4dCBzaXggeWVhcnMuLiAKU2VwdGljZGFuayAgNCBwb2ludHMgIHN1Ym1pdHRlZCA0IGhvdXJzIGFnbwpSaWdodCBub3cgaXQgc2VlbXMgdGhleSBhcmUgc2V0IHRvIHdlc3Rlcm4gZGVmYXVsdCBhbmQgaXRzIG5vdCB3b3JraW5nIGZvciB5b3UgYXQgdGhlIG1vbWVudCBzbyBjaGFuZ2Ugb3Igc21va2UgdGhhdCBibHVudCBhbmQgZHVsbCB5b3VyIGFuZ2VyIGF0IHlvdXJzZWxmIGFub3RoZXIgYWZ0ZXJub29uLi4gCkluIHRoZSBNaWRkbGUgQWdlcywgdGhlIHN1bW1lciBzb2xzdGljZSB3YXMgYSBiaWcgZXZlbnQgZm9yIEV1cm9wZWFucy4gCkhvd2V2ZXIsIGZvciBhIHZhcmlldHkgb2YgcmVhc29ucywgc29tZSBvZiB3aGljaCBJIGRldGFpbCBoZXJlLCBUU0ggbGV2ZWxzIGFyZSBub3QgdXR0ZXJseSByZWxpYWJsZSBmb3IgYXNzZXNzaW5nIHRoeXJvaWQgZnVuY3Rpb24uCkdldCByZWRkaXQgcHJlbWl1bVdlbGNvbWUhIFRoZSBpbWFnZXMgaW4gdGhpcyBzdWJyZWRkaXQgaGF2ZSBiZWVuIGRlc2lnbmVkIHRvIGJlIG1vc3RseSB0cnVlIGJsYWNrLiBUaGlzIGNhbiByZWR1Y2UgcG93ZXIgdXNhZ2Ugb24gcGhvbmVzIHdpdGggQU1PTEVEIGRpc3BsYXlzLCBhcyB0aGV5IGFjdHVhbGx5IHN3aXRjaCBvZmYgcGl4ZWxzIHRoYXQgYXJlIG1lYW50IHRvIGRpc3BsYXkgYmxhY2ssIHRoZXJlYnkgc2F2aW5nIHBvd2VyLiBJdCBhbHNvIGxvb2tzIGdvb2QgYW5kIGl0IGVhc2llciBvbiB0aGUgZXllcyBpbiBsb3dlciBsaXQgZW52aXJvbm1lbnRzLi4gCklmIHlvdSBkb24gc2VlIHlvdXJzZWx2ZXMgdG9nZXRoZXIgZm9yYXQgbGVhc3QgdGhhdCBhbW91bnQgb2YgdGltZSwgaXQgYSBmYWlybHkgYmlnIHJpc2suIApIYXMgY29vbCBzcG9ydHMgbWVtb3JhYmlsaWEgaW4gaGlzIGNvbmRvLCBpbmNsdWRpbmcgc2lnbmVkIE5GTCBqZXJzZXlzIGZyb20gQmFycnkgU2FuZGVycyBhbmQgSm9lIE1vbnRhbmEsIGEgc2lnbmVkIEdyZWVuIEJheSBQYWNrZXJzIGhlbG1ldCBmcm9tIEJyZXR0IEZhdnJlLCBhbmQgZnJhbWVkIFRvcm9udG8gQmx1ZSBKYXlzIGplcnNleXMgZnJvbSBUcm95IFR1bG93aXR6a2ksIEpvc2ggRG9uYWxkc29uIGFuZCBNYXJjdXMgU3Ryb21hbiwgd2hvIHNpZ25lZCBoaXM6IEdhbGx5LiAKSXQgc2VlbXMgbGlrZSBmaXJtcyBpbiBDYWxpZm9ybmlhIGFyZSBzdGFydGluZyB0byBnZXQgYSBsb3Qgb2Ygb3BlbmluZ3MgZXNwZWNpYWxseSB3aXRoIHRoZSBzdW1tZXIgY29taW5nIHVwLi4gClRoaW5rIGl0IHdlbGwgZGVzZXJ2ZWQuIApUaGV5IGFyZSB0aGUgY3JlYXRvcnMvc3RhcnMgb2YgdGhlIHBvcHVsYXIgVFYgc2hvd3MgVGhlIFNob3BwaW5nIEJhZ3MsIEFubmEgS3Jpc3RpbmEgR3JvY2VyeSBCYWcsIGFuZCBBbm5hIEtyaXN0aW5hIEJlYXV0eSBDYWxsLiBBbmQgYnkgY2hhcm0gSSBtZWFuIHRoZSBhbnRpIE1hcnRoYSBTdGV3YXJ0IGtpbmQgb2YgY2hhcm0uIFllcyB5b3UgY2FuIGFjdHVhbGx5IHdhdGNoIGFuIEFubmEgYW5kIEtyaXN0aW5hIHNob3cgYW5kIG5vdCBjb21lIGF3YXkgZmVlbGluZyBiYWQgYWJvdXQgeW91ciB0dXJrZXkgb3ZlcmNvb2tpbmcsIHVub3JnYW5pemVkLCBsaW5lbiBjbG9zZXQgc2VsZi4KV2hhdCB1bml0ZXMgdGhlbS91cyBpcyBwYXNzaW9uIGEgZGVlcCBwYXNzaW9uIHRvIHRha2Ugb3VyIHdvcmsgZnVydGhlciBldmVyeSBkYXksIHRvIGtlZXAgZ2V0dGluZyBvdXQgYmVkIGVhY2ggbW9ybmluZyBhbmQgd29ya2luZyBhdCBpdCBldmVuIGluIHRoZSBmYWNlIG9mIGh1Z2Ugb2JzdGFjbGVzLiBJIGNhbid0IHRlbGwgeW91IGhvdyBtYW55IHRpbWVzIEkgZ2V0IHVwLCBjcnVpc2UgdGhyb3VnaCB0aGUgaG9ycmlibGUgaGF0ZSBtYWlsIHRoYXQgY29tZXMgaW50byBteSBlbWFpbCwgb3IgbG9vayBhdCBteSBzdHVkZW50IGxvYW5zIGFuZCB3b25kZXIgaWYgSSBzaG91bGQgcXVpdCBkb2luZyBmaWVsZHdvcmsgKHdoaWNoIGRvZXMgbm90IHBheSkgYW5kIGdldCBhIHJlYWwgOSA1IGpvYiwgb3IgbWlzcyBhbm90aGVyIGZyaWVuZCBjZWxlYnJhdGlvbiBiZWNhdXNlIEknbSBvbiBhIHBsYW5lIHNvbWV3aGVyZSBnb2luZyB0byB0ZWFjaCBzb21lb25lIGFib3V0IGNsaW1hdGUgY2hhbmdlIHRoaXMgaXMgYWxsIGhhcmQgc3R1ZmYuIEJ1dCBJIGtlZXAgZG9pbmcgaXQsIGJlY2F1c2UgSSBiZWxpZXZlIGluIHRoZSB3b3JrIEkgZG8uIApTbyBpdCBpcyBhIHRoZWF0cmljYWwgc3RhZ2UsIHdpdGggY3VydGFpbnMgcmlzaW5nIHRvIHJldmVhbCB0aGUgY2hhcmFjdGVycyBhdCBicmVha2Zhc3QgYW5kIHRyYWluIGpvdXJuZXlzIGluIGZyb250IG9mIHBhdGVudGx5IGZha2UgYmFja2Ryb3BzLiAKR3JpdHR5LCBwYXNzaW9uYXRlLCB1bnJlbGVudGluZywgaW50ZW5zZSwgRHJldyBpcyBrbm93biBvbiB0aGUgaGFsZnBpcGUgdGVhbSBmb3IgYmVpbmcgYSBmaWVyeSBjb21wZXRpdG9yIHdobyBvbiBtb3N0IHRyYWluaW5nIGRheXMgcHJlZmVycyB0byBiZSBsZWZ0IGFsb25lIHRvIHdvcmsgb24gaGVyIGNyYWZ0IHdpdGhvdXQgZGlzdHJhY3Rpb24sIHRvIGZ1bGx5IG93biBoZXIgcHJvZ3JhbS4gCkZvciBzb21lb25lIHdobyB3YXMgaGlyZWQgdG8gbWFrZSB0aGUgY2FsbCBhbmQgc291bmRzIGNvd2FyZGx5LCBoZSBzZWVtcyB1bmZhemVkIHRoYXQgYSB2aWdpbGFudGUgaXMgc2xhbW1pbmcgaGlzIGNhciBhbmQgY2F1c2luZyBwaXBlbGluZXMgdG8gYnVyc3Qgc3RlYW0gYXMgaGUgZmxlZXMgb24gZm9vdC4gClRoZSBkaXNjdXNzaW9uIGlzIGdvb2QgYmVjYXVzZSBpdCBicm91Z2h0IHVwIHNvbWUgaXNzdWVzIHdlIG5lZWQgdG8gYWRkcmVzcyBidXQgZ29pbmcgYXJvdW5kIGFuZCB0cnlpbmcgdG8gZ2V0IHRoZSBpZGVudGl0eSBvZiBldmVyeSB1c2VyIHdobyBkaXNhZ3JlZXMgd2l0aCB5b3UgYW5kIHRyeWluZyB0byByYWxseSBwZW9wbGUgdG8gbGVhdmUgdGhlIHN1YiBzZWVtcyBhd2Z1bGx5IGNoaWxkaXNoL3Ryb2xsaXNoLiBJdCBtYWtlcyBtZSBxdWVzdGlvbiB5b3VyIGludGVudGlvbnMgb2YgbWFraW5nIHRoZSB0aHJlYWQgaW4gdGhlIGZpcnN0IHBsYWNlLiBNb3N0IHBlb3BsZSB3aG8gYXJlIG9uIHRoZSBzdWIgaGF2ZSBiZWVuIGhlcmUgYSB3aGlsZSBhbHRob3VnaCB3ZSBkbyBnZXQgbmV3IHVzZXJzIGFsbCB0aGUgdGltZS4uIApJIGp1c3Qgd2FudCB0aGVtIHRvIHN1cHBvcnQgaXQgYnV0IGl0IGxvb2tzIGxpa2UgaXQgZ29pbmcgdG8gYmUga2lsbGVkIG9mZi4gSXQgaHVydHMgbXkgc291bCBidXQgSSBkb24gc2VlIHRoZW0gY29udGludWluZyB0aGVpciBzdXBwb3J0IGF0IGl0cyBjdXJyZW50IGxldmVsLiAKR29vZCBxdWVzdGlvbnMuIEkgYWN0dWFsbHkgcGxhbiB0byBkbyBWR0EgZmlyc3QuIFRoZSBsaXN0IGlzbiBleGhhdXN0aXZlIG9yIGluIG9yZGVyLiAKVGhlIHByb2JsZW0gd2l0aCBOb3Zpa292IGFzIGEgc3Rvcnl0ZWxsaW5nIGRldmljZSBpcyB0aGF0IGJ5IGl0cyBuYXR1cmUsIGl0IG1ha2VzIHRoZSBwYXN0IG5vdCBvbmx5IGVmZmVjdGl2ZWx5IGltbXV0YWJsZSwgYnV0IHRoZSBmdXR1cmUuIApJIGp1c3QgZm91bmQgdGhlc2UgdGlwcywgc28gaG9wZWZ1bGx5IHRoaXMgd2lsbCBoZWxwIHVzIHdpdGggb3VyIG90aGVyIHBvYmxlbXMuIEkgZmVlbCB0aGF0IG5vdCBvbmx5IHNob3VsZCB0aGVyZSBiZSB0aXBzLCBidXQgdGhlcmUgbmVlZHMgdG8gYmUgaW5mbyBvbiBob3cgdG8gcHJlcCB5b3Vyc2VsZiBmb3IgYW5hbC4gCkluIGNvbmNsdXNpb24sIE9iaSBXYW4gYWJ1c2VzIHNwYXRpYWwgcmVsYXRpdml0eSBhbmQgVGFvaXN0IGRvY3RyaW5lIGluIG9yZGVyIHRvIGFsd2F5cyBpbnZva2UgaGlzIGhpZ2ggZ3JvdW5kIHBvd2Vycy4gVG8gcHJvcGVybHkgYW5hbHl6ZSB0aGUgc3RyYXRlZ2ljIGdlbml1cyBvZiBLZW5vYmksIG9uZSBtdXN0IGhvbGQgYWR2YW5jZWQga25vd2xlZGdlIGluIFBoaWxvc29waHksIE1hdGhlbWF0aWNzLCBhbmQgQ2FsY3VsdXMgYmFzZWQgUGh5c2ljcywgYW5kIGJlIGFibGUgdG8gaW50ZWdyYXRlIHRoZXNlIHRvcGljcyB0b2dldGhlci4gVGhlIEhpZ2ggR3JvdW5kIGlzIGJvdGggYSBwaHlzaWNhbCBhbmQgbWV0YXBoeXNpY2FsIGNvbmNlcHQsIGFuZCB1bmRlcnN0YW5kaW5nIHRoZSBIaWdoIEdyb3VuZCBpcyBwYXJhbW91bnQgdG8gdW5kZXJzdGFuZGluZyB0aGUgdW5pdmVyc2UuClplZC9LYXJ0aHVzIGNvbWJvcyBpbmNvbWluZywgeW91IGhlYXJkIGl0IGhlcmUgZmlyc3QuQ29ucXVlcm9yOiBSZWFsbHkgY29vbCBjaGFuZ2UsIHRoaXMgQ29ucXVlcm9yIGlzIGEgbG90IGJldHRlciBpbiBoaXMgb3Bpbmlvbi5Fc3NlbmNlIFJlYXZlcjogR29vZCwgbW9yZSBkYW1hZ2UuIFdvdWxkIGJlZW4gbmljZSB0byBzZWUgNjAgNzAgYnV0IHdlIHRha2Ugd2hhdCB3ZSBjYW4gZ2V0LiBUaGUgZ3Jvc3Nlc3QgdGhpbmcgaW4gdGhlIHdvcmxkLCBtaWdodCBhcyB3ZWxsIHBsYXkgUmlzayB3LyBCQlEgaW5zdGVhZC4gCk5vdywgaW4gdGVybXMgb2YgYmVpbmcgYSBTYWdlLCBGZW5nIExpdSBhZnRlciBoaXMgSisgYWN0dWFsbHkgaGFzIGEgcHJldHR5IHBvdGVudCAzMyBjcm9zcyBBb0UgdG8gc2xhcCBvbnRvIEZpcmUgZW5lbWllcyB0aGF0IGhhcyBGaXJlIGV4cGxvaXQuIFdpdGggdGhlIHVzZSBvZiBhIG9uZSB0aW1lIGJ1ZmYgc2tpbGwgaGUgaGFzLCBoZSBjYW4gZ2FpbiBHdXRzIHN0YXR1cyBpbW11bml0eSBmb3IgMSB0dXJuLCBBTkQgdGhlIG5leHQgdHVybiByZW1vdmVzIHRoZSBjYXN0IHRpbWUgamV3ZWwgY29zdCBvZiB0aGUgYWZvcmVtZW50aW9uZWQgQW9FLiBBbHNvLCB0aGUgc3Vic2tpbGwgV2F0ZXIgQW9FIGdldHMgRGF6ZSBhbmQgYSBzbWFsbCBkYW1hZ2UgYnVtcC4gCkJlZm9yZSB0aGV5IGNsb3NlZCB0aGVpciBkb29ycywgdGhlIGFkZGVkIGFuIG91dGRvb3IgYXhlIHRocm93aW5nIHNldHVwIGluIHRoZSBwYXJraW5nIGxvdCwgd2hpY2ggc2VlbWVkIGxpa2UgYSByZWFsbHkgZGFuZ2Vyb3VzIGlkZWEgKGRyaW5raW5nIGFuZCBheGUgdGhyb3dpbmcgaW4gdGhlIGRhcms/KS4gCk1vbSBmb3JnYXZlIGhlciBpbnN0YW50bHksIHRoZSBwb29yIGtpdHR5IGhhcyBiZWVuIHNvIGdvb2QgYWJvdXQgZ29pbmcgb25lIGxhc3Qgcm91bmQgYmVmb3JlIHdlIGdvIHRvIHNsZWVwIGFuZCB3YWl0aW5nIHVudGlsIHNvbWVib2R5IHdha2VzIHVwIGluIHRoZSBtb3JuaW5nLCBzaGUgbXVzdCBoYXZlIGJlZW4gdW5kZXIgYSBMT1Qgb2YgcHJlc3N1cmUuLiAKVGhlIG90aGVyIGFzcGVjdCB3aGljaCBzZWVtcyB0byBiZSBhIG1vcmUgc3lzdGVtaWMgZWZmZWN0LCB3aGljaCBJIGJlbGlldmUgcGVyc29uYWxseSB0byBiZSByZWxhdGVkIHRvIGVuZG9ycGhpbiByZWxlYXNlLiBJIGJlbGlldmUgdGhlcmUgYXJlIHN0dWRpZXMgdGhhdCBzaG93IG5hbG94b25lIGJsb2NraW5nIHRoZSBlZmZlY3RzIG9mIGFjdXB1bmN0dXJlIGFuYWxnZXNpYS4KV2VsbCBJIHdyb3RlIHVwIGEgcmVwbHkgYSBmZXcgZGF5cyBhZ28sIGJ1dCBteSBjb21wdXRlciBjcmFzaGVkLiBBbmQgd29ya3MgYmVlbiBhIGJpdCBmdWxsIG9uIGxhdGVseS4KIldvbWVuICAgdHJhdmVsaW5nIGluIHBhY2tzLCBpbiBwYWlycyBvciBvbiB0aGVpciBvd24gICBtYWtlIHVwIGEgYmlnIHBhcnQgb2YgdGhvc2Ugb24gdGhlICJUd2lsaWdodCIgdHJhaWwuIFN1c2FuIEVuZ2xpbiwgYSByZXRpcmVlIGZyb20gQ29sYmVydCwgV2FzaC4sIHdobyBoYXMgcmVhZCB0aGUgYm9va3Mgc2V2ZW4gdGltZXMgYW5kIGhhcyBkb3dubG9hZGVkIHRoZSBtb3ZpZSB0byBoZXIgaVBvZCwgd2FzIHZpc2l0aW5nIHN0ZXBjaGlsZHJlbiBpbiB0aGUgYXJlYSByZWNlbnRseSBhbmQgY291bGRuJ3QgcmVzaXN0IGFuIG91dGluZyB0byBGb3Jrcy4gIkkgZ2V0IGNhdWdodCB1cCBpbiB0aGUgY2hhcmFjdGVycywiIHNoZSBzYWlkLi4gCkIgc3BsaW5lIHN1cmZhY2VzIGIuIApBcyBtb3N0IHNwYWNlIGlzIGRlZGljYXRlZCB0byBuYXR1cmFsIGFyZWFzLCB5b3UgY2FuIHRydWx5IGVuam95IGEgdHJvcGljYWwgcGFyYWRpc2Ugd2l0aG91dCBkaXN0dXJiYW5jZSBmcm9tIHRoZSBvdXRzaWRlIHdvcmxkLiAKQm90aCBvZiB0aGVzZSBjb3VsZCBsaWtlbHkgYmUgZm91bmQgYXQgeW91ciBuZWlnaGJvcmhvb2QgaGlwcGllL2hpcHN0ZXIgaW5kZXBlbmRlbnQgdG95IHN0b3JlLCBidXQgSSdkIGNhbGwgZmlyc3QuIEhhcHB5IGdvZHNvbidzIGJpcnRoZGF5ISEKSGUgZG9lcyBhIHRob3JvdWdoIGV4YW06IHBhbHBhdGluZyB0aGUgYm9keSB0byBtYWtlIHN1cmUgYWxsIHRoZSBpbnRlcm5hbCBvcmdhbnMgZmVlbCBub3JtYWwgYW5kIHRoZXJlIGFyZSBubyB3b3JyaXNvbWUgbHVtcHMgb3IgYnVtcHM7IGNoZWNraW5nIHRoZSBjb25kaXRpb24gb2YgdGhlIGV5ZXMgYW5kIGVhcnM7IGxpc3RlbmluZyB0byB0aGUgaGVhcnQgYW5kIGx1bmdzOyBjaGVja2luZyB0aGUgd2VpZ2h0OyBhbmQgdGFraW5nIHRoZSB0ZW1wZXJhdHVyZS4gQmVjYXVzZSBkb2dzIGFnZSBkaWZmZXJlbnRseSB0aGFuIHBlb3BsZSwgdGhpcyBhbm51YWwgcGh5c2ljYWwgaXMgY29tcGFyYWJsZSB0byB5b3UgaGF2aW5nIGEgcGh5c2ljYWwgZXhhbSBldmVyeSBmaXZlIG9yIHNpeCB5ZWFycy4gCllvdSB3aWxsIGFsc28gYmUgbW9yZSBza2lsbGVkIGFuZCB1bmRlcnN0YW5kIGhvdyB0byBwbGF5IGFsbCB0aGUgZGlmZmVyZW50IGdhbWVzIHRoYXQgb3IgcGxheWVkIGluIGhvbWUgcG9rZXIgZ2FtZXMgd2hlbiB5b3UgYXJlIHBsYXlpbmcgRGVhbGVycyBDaG9pY2UsIHdoaWNoIG1lYW5zIHdob2V2ZXIgaXMgZGVhbGluZyBkZWNpZGVzIHdoYXQgcG9rZXIgZ2FtZSBpcyBwbGF5ZWQgdGhhdCBoYW5kLiBUaGUgd2F5IG1vc3QgcGxheWVycyBsZWFybiBob3cgdG8gcGxheSBQb2tlciBpcyBieSBwbGF5aW5nIGluIGhvbWUgZ2FtZXMsIG9ubGluZSBjYXNpbm9zIG9yIHdhdGNoaW5nIFBva2VyIHRvdXJuYW1lbnRzIG9uIFRWLiBBIGZldyBmdW5kYW1lbnRhbCBydWxlcyB3aWxsIGhlbHAgZ2V0IHlvdSBzdGFydGVkLi4gCkkgZGlkIGZlZWwgYnVtbWVkIG91dCBhYm91dCBpdCBidXQgdGhhdCB3YXMgaXQgYW5kIEkga2VwdCBkb2luZyBteSB0aGluZy4gCk1vcnJpczg3MTMgIDEwIHBvaW50cyAgc3VibWl0dGVkIDYgbW9udGhzIGFnbwpKdXN0IGJlY2F1c2UgeW91IGRvbid0IHNlZSBpdCBkb2Vzbid0IG1lYW4gaXQncyBub3QgaGFwcGVuaW5nLCBIdWdoZXMgc2FpZC4gQW5kIHVubGlrZSBpbiB0aGUgcGFzdCwgd2hlbiBtYW55IHByb3N0aXR1dGVzIHdlcmUgZnJvbSBvdXQgb2Ygc3RhdGUsIGFsbW9zdCA3NSBwZXJjZW50IG9mIHRoZSBjYXNlcyBpbnZvbHZlIGZlbWFsZXMgZnJvbSBMYXMgVmVnYXMsIHNoZSBzYWRpLgpNeSBib29rIEFuYWwgU2V4IFNlY3JldHMgaXMgYSBndWlkZSB0byBncmVhdCBhbmFsIHNleCBmb3IgYm90aCBhbmFsIHNleCBiZWdpbm5lcnMgYW5kIGZvciBjb3VwbGVzIHdobyBhcmUgc2VhcmNoaW5nIGZvciBuZXcgdGhpbmdzIHRvIHRyeS4gVGhvdWdoIGRvZ2dpZSBzdHlsZSBtYXkgYmUgdGhlIG1vc3QgcG9wdWxhciBhbmFsIHNleCBwb3NpdGlvbiwgaXQgbm90IG5lY2Vzc2FyaWx5IHRoZSBiZXN0IG9uZSBmb3IgYmVnaW5uZXJzLiBNeSBhcnRpY2xlIFdoaWNoIEFuYWwgU2V4IFBvc2l0aW9ucyBBcmUgQmVzdCBmb3IgQmVnaW5uZXJzPyBkZXNjcmliZXMgc2V2ZXJhbCBhbmFsIHNleCBwb3NpdGlvbnMsIGFuZCB0ZWxscyB5b3Ugd2hpY2ggb25lcyBhcmUgYmVzdCBmb3IgYmVnaW5uZXJzIGFuZCB3aHkuIApMb3ZlIGl0IG9yIGhhdGUgaXQsICJOaXAvVHVjayIgZGlkIG1vcmUgdG8gbWFrZSBjb3NtZXRpYyBzdXJnZXJ5IGFuZCBjb3NtZXRpYyBzdXJnZW9ucyBoaXAgdGhhbiBhbnkgb3RoZXIgc2hvdyBvbiBUVi4gQW5kIG5vdywgIk5pcC9UdWNrIiBoYXMgZmlsbWVkIGl0cyBmaW5hbCBlcGlzb2RlLiBUaGUgZXBpc29kZSB3aWxsIGFpciBpbiAyMDExIGFuZCBhdCBudW1iZXIgMTAwLCBtYWtlcyAiTmlwL1R1Y2siIHRoZSBsb25nZXN0IHJ1bm5pbmcgY2FibGUgc2VyaWVzICh3aXRoICJTZXggYW5kIHRoZSBDaXR5IiBhIGNsb3NlIHNlY29uZCBhdCA5NCkuCkFuZCBDaGluYSBhcmUgbWFraW5nIHByb2dyZXNzIG9uIGVuZGluZyB0aGVpciBsZW5ndGh5IHRyYWRlIGRpc3B1dGUuIApHb2luZyB0byB0aGUgcmlnaHQgc29ydCBvZiBzY2hvb2xzIGFsbG93cyB5b3UgdG8gbWVldCB0aGUgInJpZ2h0IHBlb3BsZSIgYW5kIGdldCB0byBnbyB0byB0aGUgInJpZ2h0IHBsYWNlcyIgb24gdmFjYXRpb24sIHBsYWNlcyBsaWtlIE1hcnRoYSBWaW5leWFyZC4gCkl0IGlzIGluIHRhbGtzIHdpdGggQ2FuYWRpYW4gVGlyZSB0byBwdXQgaXQgaW4gYWxsIGl0cyBzdG9yZXMuIE5vdyBoYXZlIGZpdmUgcHJvZHVjdHMgaW4gVGhlIFNLckFQciBmYW1pbHksIGFuZCBhcmUgcHJlcGFyaW5nIHRvIGxhdW5jaCAyOCBuZXcgaG9tZSBwcm9kdWN0cyBpbiB0aGUgbmV4dCB0d28geWVhcnMsIGhlIHNheXMuIApHb2QgaGVscCB1cyBhbGwuIApDYW4gSSBkZXBvc2l0IGJpdGNvaW4gaW4gYSBiYW5rPyBUaGV5IGNvdWxkIGNob29zZSB0byBhY2NlcHQgZGVwb3NpdHMsIGNvdWxkbiB0aGV5PyBUaGV5IGFjY2VwdCBhbGwgdGhlIHJpc2sgYXJvdW5kIGJhY2t1cHMsIGN5YmVyc2VjdXJpdHksIHRoZWZ0LCBldGMuLCBhbmQgcGVyaGFwcyBvZmZlciBtZSBpbnRlcmVzdC4gVGhlc2UgYXJlIHRoZSBtYWluIHJlYXNvbnMgSSBwdXQgbXkgbW9uZXkgaW4gYSBiYW5rIHRvZGF5LiBJIG5vdCByaWNoLCBidXQgaWYgSSB3YXMsIEkgY2VydGFpbmx5IHdhbnQgbW9zdCBvZiBteSBtb25leSAgIGZpYXQgb3IgYml0Y29pbiAgIHdpdGggc29tZW9uZSBtb3JlIGRlcGVuZGFibGUgdGhhbiBteXNlbGYuCldoZW4gd2UgZmlyc3Qgc3RhcnRlZCBleHBsb3JpbmcsIGxpZmUgY291bGQgaGF2ZSBiZWVuIGV2ZXJ5d2hlcmUuIE9uY2Ugd2Ugd2VudCB0byB0aGUgbW9vbiwgd2UgZm91bmQgbm8gZXZpZGVuY2Ugb2YgbGlmZSB0aGVyZS4gTm93IHdlIGhhdmUgdG8gdXBkYXRlIHRob3NlIHByb2JhYmlsaXRpZXMgdG8gc2F5IHRoZXJlIGNvdWxkIGJlIGxpZmUgaW4gb3RoZXIgcGxhY2VzLgpJZiBLZWxseSBpcyBjb252aWN0ZWQgb24gYWxsIDEwIGNvdW50cywgYSBqdWRnZSBjb3VsZCBkZWNpZGUgdGhhdCB0aGUgc2VudGVuY2VzIHJ1biBvbmUgYWZ0ZXIgdGhlIG90aGVyICAgbWFraW5nIGl0IHBvc3NpYmxlIGZvciBoaW0gdG8gcmVjZWl2ZSB1cCB0byA3MCB5ZWFycyBiZWhpbmQgYmFycy4gCkluIEdlcm1hbnksIEkgYmVsaWV2ZSBBdXN0cmlhIHdhcyBiZWluZyBjYWxsZWQgdGhlIE1vdGhlcmxhbmQuIEJ1dCBJIG5vdCBzdXJlIG9uIHRoYXQgcG9pbnQuClBvdXIgY2VsYSwgZWxsZSBwcm9wb3NlIHF1ZSBsJ2FydGljbGUgMTIyIDEgZHUgQ29kZSBwbmFsIGVudmlzYWdlIGV4cHJlc3NtZW50IHVuZSByZHVjdGlvbiBkZSBwZWluZSBwcml2YXRpdmUgZGUgbGliZXJ0LiAKT25lIGNhbiBibG9jayBvdXQgdGhlIGZhY3QgdGhhdCB0aGV5IGRvbiB1bmRlcnN0YW5kIHRoZSBseXJpY3MsIGFuZCBjYW4gZ2V0IGxvc3QgaW4gdGhlIG1lbG9keSBhbmQgbXVzaWMgaXRzZWxmLi4gCiJTbywgdW0sIHdoYXQgZG8geW91IHNheSwgUmhlbz8iLiAKSSBwb2ludGVkIG91dCBFbGl6YWJldGggRGFsdG9uIGlzIG9uZSBvZiB0aGUgZ3J1YmJ5IEVzb3RlcmljIEJyZWFzdCBNYXNzYWdlcnMuIEhhbWlzaCBCcm9vbWUgYXNrZWQgbWUgbmFtZXMgYW5kIGNvbnRhY3QgZGV0YWlscyBvZiBvdGhlciB2aWN0aW1zLiAKSSBkb24gZXZlbiBrbm93IHdoeSBJIGFza2VkIGZvciByZWxhdGlvbnNoaXAgYWR2aWNlIG9uIFJlZGRpdCBhbnl3YXkuIApPbmUgb2YgdGhlIGhvdHRlc3QgbmV3IHZpZGVvIGdhbWVzIHRoaXMgaG9saWRheSBzZWFzb24gaXMgU3RhciBXYXJzIEJhdHRsZWZyb250IDIsIHdoaWNoIGdlbmVyYXRlZCBjb250cm92ZXJzeSBiZWNhdXNlIGl0IGluY29ycG9yYXRlZCBnYW1ibGluZy4gVXNlcnMgY291bGQgZWl0aGVyIHBsYXkgbWFueSBob3VycyB0byB1bmxvY2sgY29tcG9uZW50cyBvZiB0aGUgZ2FtZSwgb3IgdGhleSBjb3VsZCB1c2UgcmVhbCBtb25leSB0byBvcGVuIGxvb3QgYm94ZXMuIFRoZXNlIGxvb3QgYm94ZXMsIGFsc28gY2FsbGVkIGNhcmRzLCBvciBwYWNrcyBoYXZlIHJhbmRvbSBwcml6ZXMgYW5kIHRpZXJlZCBzdHJ1Y3R1cmVkIHBheSBzeXN0ZW1zLCBzbyB0aGF0IHVzZXJzIGNhbiBwYXkgbW9yZSBmb3IgdGhlIGNoYW5jZSBhdCB3aW5uaW5nIGJpZ2dlciBwcml6ZXMuLiAKSWYgaXQncyB0b28gY29vbCB0aGV5IGFkZCBleHRyYSBzb2lsIGdyYXNzLiAKOC4gQXBwbHkgYSBnZW5lcm91cyBhbW91bnQgb2YgQXJjdGljIHNpbHZlciB0aGVybWFsIGNvbXBvdW5kIG9udG8gdGhlIEdQVSwgYW5kIGxldCBpdCBzZXQgZm9yIGZpZnRlZW4gbWludXRlcy4KVGhlIGZpcnN0IHB1cmxlZCBiYWNrIHNpZGUgcm93IG92ZXIgdGhlIGZvdXJ0aCBhbmQgZmlyc3QgbmVlZGxlcyBsb29rcyBsaWtlIHRoaXMuIFRoZSBsYXN0IHN0aXRjaCBpcyBhbHdheXMgcHVybGVkL2tuaXR0ZWQuCihUbyBzZWUgc29tZSBvZiB0aG9zZSBwb3N0cywganVzdCBzZWFyY2ggIkdlcm1hbiBwcm9wYWdhbmRhIiBpbiB0aGUgZ29vZ2xlIGJveCBhdCByaWdodC4pIHNlZW1zIHRvIG1lIHRoYXQgSSBoYXZlIHNlZW4gZG96ZW5zIG9mIHN1Y2ggaWxsdXN0cmF0aW9ucyBvZiBtYXBzIHNob3dpbmcgR2VybWFueSBzdXJyb3VuZGVkLCBncmFwaHMgb2YgbWlsaXRhcnkgY2FwYWNpdHksIGRhdGEgdmlzdWFsaXphdGlvbnMgb2YgbmF2YWwgc3RyZW5ndGgsIG1lbiB1bmRlciBhcm1zLCBhbmQgc28gZm9ydGgsIHNob3dpbmcgdGhlIGltbWluZW50IGRlbWlzZSBvZiB0aGUgc3BlbnQsIFZlcnNhaWxsZWQsIGFuZCB1c2VkIHVwIGJ1dCBwb3RlbnRpYWxseSByZWNvdmVyaW5nIEdlcm1hbnkuLiAKSSBoYXRlIHRoZSBtYW4gd2l0aCB0aGUgYW5nZXIgb2YgYSB0aG91c2FuZCBib2lsaW5nIGxvYnN0ZXJzIGFuZCB5ZXQgaGUgdGhlIG9uZSB3aG8gcmVhbGx5IHRhdWdodCBtZSB0byB3cml0ZS4gCiJSdWxlcyBmb3IgV2lubmVycyAoSG93IHRvIHdpbiBtb3JlKSIgd2l0aCBhZHZpY2Ugc3VjaCBhcyAiR2V0IGluIGZpcnN0IGJsb3cgb24gYXJyaXZpbmcgaG9tZSBieSBhZHZpc2luZyB3aWZlIG9mIHRoZSBwcmUgY2FyaW91cyBjb25kaXRpb24gb2YgdGhlIFNJQ0sgRlJJRU5EIgpJIGZlZWwgbGlrZSB5b3UgdHJ5aW5nIHRvIG1ha2UgYSBwb2ludCB0aGF0IEJhc3F1aWF0IHdhcyBubyBsb25nZXIgZmFtb3VzIG9yIHZhbHVlZCBieSB0aGUgYXJ0IHdvcmxkIGF0IHRoZSBlbmQgb2YgaGlzIGxpZmUsIGFuZCB0aGF0IGlzIHNpbXBseSB1bnRydWUuIApUaGF0IG1pZ2h0IG1lIGEgbGFyZ2VyIG9yZ2FuaXphdGlvbmFsIGlzc3VlIHRob3VnaCBJIGd1ZXNzLCBiZWNhdXNlIG90aGVyd2lzZSB0aGUgZnJvbnQgZGVzayBwZW9wbGUgYXJlIGZyaWVuZGx5IGFuZCBoZWxwZnVsLiBBbmQgdGhlIGhvdCB0dWIgYXZhaWxhYmlsaXR5IGlzIG1hZ2ljYWwuCkJpdGNvaW4gQ2FzaCBpcyBtYWtpbmcgc3VyZSB0aGF0IGl0IGxpdmVzIG9uLiBBbGJlaXQgaW4gYSBjcmlwcGxlZCB3YXkuLiAKQXJ5YSBhbmQgSm9obiBydW4gdG8gc2F2ZSBoaW0gKGhlbmNlIHdoeSB3ZSBzZWUgQXJ5YSBydW5uaW5nIHRocm91Z2ggdGhlIGhhbGxzIG9mIHdpbnRlcmZlbGwgYW5kIEpvbiBydW5uaW5nIHRocm91Z2ggdGhlIGZpcmUgaW5zaWRlIHdpbnRlcmZlbGwuLiAKU29tZSB0YWJsZXMgd2lsbCBoYXZlIGEgYmlnZ2VyIHBvdCBzaXplIHRoYW4gYW5vdGhlciB0YWJsZXMgdGhhdCBoYXZlIHRoZSBzYW1lIGxpbWl0LiBUaGlzIGlzIHdoeSBhZ2FpbiwgaW4gb25saW5lIHBva2VyIHJvb21zLCB5b3Ugc2hvdWxkIGFsd2F5cyBiZSBtb25pdG9yaW5nIHRoZSBsb2JieSBzbyB0aGF0IHlvdSBjYW4ga2VlcCBhbiBleWUgb24gdGhlIGJlc3QgZ2FtZXMgYW5kIG9uIHRhYmxlIGNoYW5naW5nLiBUaGlzIGluZm9ybWF0aW9uIGNhbiBoZWxwIHlvdXIgZGVjaXNpb25zIGFuZCB1bHRpbWF0ZWx5IGhlbHAgeW91IHdpbi4uIApXaGVuIHdlIG9wZW5lZCBpdCwgd2UgdGhvdWdodCB3ZSBzYXcgYSBjaGlsZCBzaXR0aW5nIGluIGEgY2hhaXIgaW4gdGhlIGNvcm5lciBhbmQganVtcGVkIGJhY2sgc2NyZWFtaW5nLiBVcG9uIGZ1cnRoZXIgaW52ZXN0aWdhdGlvbiwgaXQgd2FzIHNvbWUga2luZCBvZiBCb3lzIFNjb3V0IHZlbnRyaWxvcXVpc3QgZHVtbXkuIAo4KSBFeGNlc3NpdmUgU3BhbS4gUG9zdGluZyBtdWx0aXBsZSB0aHJlYWRzIGEgZGF5IGluIGV4Y2Vzc2l2ZSB1c2UuIFRoaXMgaW5jbHVkZXMgbm9uIHJlbGV2YW50IHBvc3RzIHRvIHBva2VyLCBwdXNoaW5nIHlvdXIgbmV3cyBzaXRlLCBzaGlsbGluZyB5b3VyIGNyeXB0b2N1cnJlbmN5IHNwZWN1bGF0aW9ucywgZXhjZXNzaXZlIHNoaXQgcG9zdGluZywgYW5kIGNvbnRpbnVpbmcgdG8gcG9zdCBjb250ZW50IGFmdGVyIHlvdSBiZWVuIHNwZWNpZmljYWxseSB3YXJuZWQgbm90IHRvIGJ5IHRoZSBtb2QgdGVhbS4gCkkga25vdyBob3cgdGhleSB3b3JrLiBJJ20gYSBmb3JtZXIgbnVyc2UuIApJbiB0aGUgVW5pdGVkIFN0YXRlcywgdGhlIFRveW90YSBQcml1cyBoeWJyaWQgaGFzIGJyb2tlbiBpbnRvIHRoZSB0b3AgMTAgc2VsbGluZyBwYXNzZW5nZXIgY2Fycy4gSG93ZXZlciwgZWxlY3RyaWMgdmVoaWNsZXMgaGF2ZSBzdHJ1Z2dsZWQgdG8gaW5jcmVhc2Ugc2FsZXMgbnVtYmVycyBiZWNhdXNlIG9mIGhpZ2ggcHJpY2VzIGFuZCBzbyBjYWxsZWQgcmFuZ2UgYW54aWV0eTogYnV5ZXJzIGZlYXIgb2YgcnVubmluZyBvdXQgb2YgcG93ZXIuLiAKQWdhaW4gdGhleSBzYWlkIHNvcnJ5IGJ1dCB0aGF0IG5vdCBwb3NzaWJsZS4gCkluIHBva2VyIHlvdSBjYW4gZmFpcmx5IGVhc2lseSBjYWxjdWxhdGUgb3V0Y29tZXMgdXNpbmcgY29tcHV0ZXJzIGFuZCBFViwgRyBidWNrcywgZXRjLCBhbmQgc28gZGVjaWRlIG9uIGFuIG9wdGltYWwgYm90dG9tIC90b3AgZW5kIG9mIGhhbmRzIHRvIGluY2x1ZGUgaW4gcmFuZ2UgYmFsYW5jaW5nLCBvciBzaXR1YXRpb25zIHRvIGluY2x1ZGUgcmFuZG9taXNhdGlvbi4uIApTcG9ydHMgQXJ0aWNsZXMgIERlY2VtYmVyIDE0LCAyMDA5CkludGVuc2UsIHRoZW4gZmFkZS4gU28gaXQgc2xvd2x5IHN0YXJ0cyBtb3ZpbmcgYXJvdW5kIHRvIHRoZSBmcm9udCBvZiB5b3VyIGJvZHkuIFRoYXQgdGhlIGFic29sdXRlIHdvcnN0LiAKTWlzc2lzc2lwcGkgYWxzbyBvZmZlcnMgdGhlIGNvdW50cnkncyBoaWdoZXN0IGFubnVhbCBhdmVyYWdlIHNhbGFyeSBvZiAkNTIsMDAwIGRlc3BpdGUgbG93ZXIgZmlndXJlcyBpbiBzdXJyb3VuZGluZyBzdGF0ZXMuIApUaGVyZSBjb3VsZCBoYXZlIGJlZW4gYW4gaW5mbHV4IG9mIElyYW5pYW5zIGludG8gSW5kaWEsIGZvciBhbGwgeW91IGtub3cuIApJIHdvcmsgaW4gYSBob3RlbCBiYXIgYW5kIGhhdmUgaGFkIHRoZSBzYW1lIGlzc3Vlcy4gClNob3VsZCBiZSBhIGJpZyBkYXkgc28gZG9uIG1pc3Mgb3VyIGNvdmVyYWdlIQpUaGVyZSBzaG91bGQgYmUgbm8gY29tbWVtb3JhdGlvbiBvZiBJcWJhbCBEYXkgYW5kIG5vIGNoYW5naW5nIG9mIHRoZSBndWFyZCBhdCBoaXMgdG9tYiAgIGJldHdpeHQgTGFob3JlJ3MgZ3JlYXQgbW9zcXVlIGFuZCB0aGUgaW1wb3NpbmcgZmEgb2YgQWtiYXIncyBmb3J0ICAgdW50aWwgd2UgbGVhcm4gdG8gY29uZHVjdCBvdXJzZWx2ZXMgd2l0aCBncmVhdGVyIG5hdGlvbmFsIGRpZ25pdHkuLiAKV2VsbCwgdGFrZSBmb3IgZXhhbXBsZSBwbGF5aW5nIHBva2VyLiAKSXQgd2lsbCBrZWVwIHRoZSBjYXIgaW4gaXRzIGxhbmUsIG1haW50YWluIHNwZWVkIHVwIHRvIGEgbGltaXQgdGhhdCB5b3Ugc2V0LCBzbG93IGRvd24gaWYgdGhlIHZlaGljbGUgYWhlYWQgb2YgeW91IGRvZXMsIGFuZCBpdCB3aWxsIHRyeSB0byBhdm9pZCBhbiBhY2NpZGVudCBpZiBzb21lb25lIGFyb3VuZCB5b3Ugc3dlcnZlcy4gTm90aWNlIHRoZSBndXkgaW4gdGhlIHZpZGVvLCB3aGV0aGVyIHNsZWVwaW5nIG9yIGZha2luZywgc3RpbGwgaGFzIGhpcyBoYW5kIG9uIHRoZSB3aGVlbCBhdCA2IG8gSWYgeW91IHRha2UgeW91ciBoYW5kcyBvZmYgdGhlIHdoZWVsLCBBdXRvcGlsb3Qgd2lsbCBkaXNlbmdhZ2Ugd2l0aGluIGEgbWludXRlIG9yIHR3by4gClNob2NrZXI6IGl0IHdhcyBhIGxpZS4uIApUaGUgT1A/IEZ1Y2sgbm8sIHNoZSB0aGlua3Mgc2hlIHBlcmZlY3Qgc28gYW55IGF0dGVtcHQgYnkgaGVyIGNvbXBhbnkgdG8gcHJvdmlkZSBoZXIgd2l0aCBhZGRpdGlvbmFsIHRvb2xzIHRvIGRvIGhlciBqb2IgbXVzdCBjb25zdGl0dXRlIGJ1bGx5aW5nLCBidXQgc2hlIHJlYWR5IHRvIHRocmVhdGVuIGxlZ2FsIGFjdGlvbiEgVGhhdCB3aWxsIHNob3cgdG8gcmVzcGVjdCBoZXIhClRoZSBmbG9vciBhbmQgd2FsbHMgZ2V0IHdpcGVkIGRhaWx5IHdpdGggYmxlYWNoIHRvIHdhcmQgb2ZmIGFueSBwb3RlbnRpYWwgdW5oZWFsdGhpbmVzcy4gQW5kIHRoZSBiZWQgaXMgaGFyZCwgYSB3cnkgcmVtaW5kZXIgb2Ygd2hlcmUgSSBiZSBzbGVlcGluZyBmb3IgdGhlIG5leHQgNSBtb250aHMuLiAKVGhlIHRlY2hub2xvZ3kgYWNxdWlyZXMgYnJhaW4gc2lnbmFscyB0aHJvdWdoIGFuIGltcGxhbnRlZCwgOTYgY2hhbm5lbCBlbGVjdHJvZGUgYXJyYXkuIEVhY2ggY2hhbm5lbCBkZXRlY3RzIHZvbHRhZ2UgdGhhdCBpcyBjb250aW51b3VzbHkgZ2VuZXJhdGVkIGZyb20gYWN0aXZlIG5ldXJvbnMgaW4gaXRzIG5laWdoYm9yaG9vZC4gVGhlIHNhbXBsaW5nIHJhdGUgaXMgMzBrSHo7IHRoaXMgbWVhbnMgdGhhdCB0aGUgbnVtYmVyIG9mIHZvbHRhZ2UgbWVhc3VyZW1lbnRzIHRoYXQgd2UgY29sbGVjdCBpcyAzMCwwMDAgcGVyIHNlY29uZCBhbmQgdGhpcyBzdHJlYW1zIGNvbnRpbnVvdXNseSBpbiByZWFsIHRpbWUgd2hpbGUgSWFuIHVzZXMgdGhlIHN5c3RlbS4gV2UgaGF2ZSB0byB1c2Ugc2lnbmFsIHByb2Nlc3NpbmcgbWV0aG9kcyB0byBtYXRoZW1hdGljYWxseSB0cmFuc2xhdGUgdGhlICJyYXciIHZvbHRhZ2UgZGF0YSBpbnRvIG5vcm1hbGl6ZWQgcmVzcG9uc2UgaW50ZW5zaXR5IHRoYXQgd2UgY2FuIHVzZSBhcyBuZXVyYWwgZmVhdHVyZXMgZm9yIG91ciBtYWNoaW5lIGxlYXJuaW5nIGRlY29kZXIgYWxnb3JpdGhtcy4gQW5kIHRoZSBldmVudHVhbCBpbnRlbnQgaXMgdG8gcmVtb3ZlIGl0IHdoZW4gaXQgaXMgbm8gbG9uZ2VyIGZ1bmN0aW9uYWwgKG9yIHNvbWV0aGluZyBiZXR0ZXIgY29tZXMgYWxvbmcpLiBJdCBhY3RzIGFzIGEgbWljcm9waG9uZSB0byBsaXN0ZW4gdG8gbG9jYWwgbmV1cmFsIGFjdGl2aXR5LiBJdCBkb2Vzbid0IGNhcnJ5IHNpZ25hbHMgZnJvbSBvbmUgbmV1cm9uIHRvIGFub3RoZXIsIGFsdGhvdWdoIG90aGVycyBhcmUgd29ya2luZyBvbiBuZXcgdGVjaG5vbG9neSB0byBkbyB0aGF0IChwYXJ0aWN1bGFybHkgZm9yIG1lbW9yeSBlbmhhbmNlbWVudCkuCkxpbiBzYWlkIHdoYXQgc2hvY2tlZCBoZXIgdGhlIG1vc3QgZHVyaW5nIHRoZSBjb3Vyc2Ugb2YgdGhlIHJlc2VhcmNoIHdhcyB0aGUgZWFybHkgbW9ydGFsaXR5IHJhdGUsIHdoaWNoIHJlc2VhcmNoZXJzIGRlZmluZWQgYXMgZHlpbmcgYmVmb3JlIHRoZSBhZ2Ugb2YgNzUuClN0aWxsLCBhIGR5aW5nIG1vdGhlcidzIGFjY3VzaW5nIGZpbmdlciBpcyBlbm91Z2ggdG8gcmFpc2UgYSBmZXcgZXllYnJvd3MuIFRoZSBjb3BzIHN0YXJ0ZWQgY2lyY2xpbmcgYXJvdW5kIE1jQ3VsbG91Z2gsIGJ1dCBxdWlja2x5IGZvdW5kIHRoYXQgdGhleSBjb3VsZG4ndCBicmVhayBoaXMgYWxpYmksIHdoaWNoIGhhZCBiZWVuIGJhY2tlZCBieSBoaXMgZmFtaWx5IGFuZCwgb2ggeWVhaCwgaGFkIGhlbGQgdXAgZm9yIG1vcmUgdGhhbiBmaXZlIGdvZGRhbW5lZCBkZWNhZGVzLiBZZXQgdGhlIHBvbGljZSBwZXJzaXN0ZWQgYW5kIHJlaW50ZXJ2aWV3ZWQgYSBidW5jaCBvZiBwZW9wbGUgY29ubmVjdGVkIHdpdGggdGhlIHN1c3BlY3QuIE9uZSByb3V0aW5lIGludGVydmlldyB3aXRoIGEgZm9ybWVyIGdpcmxmcmllbmQgbGVkIHRvIGhlciBnaXZpbmcgdGhlIGludmVzdGlnYXRvcnMgYW4gb2xkIHBob3RvZ3JhcGggZnJvbSB0aGVpciB0aW1lIHRvZ2V0aGVyLgpCeSBub3csIEkgd2FzIGJlZ2lubmluZyB0byByZWNvZ25pemUgdGhhdCB0aGUgbW90aXZhdGlvbiBpbnNpZGUgbWUgd2FzIG5vdCBtaW5lLiBJIHdhcyBmZWVsaW5nIGFzIGlmIE1pY2tleSB3YXMgcHJvcGVsbGluZyBtZSBmb3J3YXJkLiBXaGVuIEkgcmVhZCB0aGUgcG9saWNlIHJlcG9ydCBhbmQgc2F3IHRoZSBkZXNjcmlwdGlvbiBvZiB0aGUgY2xvdGhlcyBNaWNrZXkgd2FzIHdlYXJpbmcsIEkgc3VkZGVubHkgcmVtZW1iZXJlZCB0aGUgY2xvdGhlcy4gClBlcnNvbmFsbHkgSSBmb3VuZCB0aGUgY2l0ZWQgc3RhdGlzdGljIGluIHRoZSBhcnRpY2xlIGRldmFzdGF0aW5nIGFuZCBuZXZlciByZWJ1a2VkIG9yIGV2ZW4gbWVudGlvbmVkIGJ5IGl0cyBkZXRyYWN0b3JzLiBIb3dldmVyLCB3aXRob3V0IGZvbGxvdyB1cCBzdGF0aXN0aWNzIEkgY2FuIHJlYWxseSBzYXkgaWYgdGhlcmUgaGFzIGJlZW4gcHJvZ3Jlc3MuIEkgYW0gYWxzbyB2ZXJ5IG11Y2ggb3V0IG9mIG15IGRlcHRoIHRvIGRldGVybWluZSBpZiB0aGVyZSBoYXMgYmVlbiBhbnkgcHJvZ3Jlc3Mgb24gYWRkcmVzc2luZyBzdHJ1Y3R1cmFsLCBzeXN0ZW1pYywgYW5kIHNvY2lvZWNvbm9taWMgZGl2aWRlIGJ1dCBJIHdvdWxkIGhhemFyZCBhIGd1ZXNzOiBub3QgcmVhbGx5LgpGbGV0Y2hlciBQYXJrIGlzIGdyZWF0IHRvIGhhdmUgbmVhcmJ5LgpMb3VpZWFuZGVyc29uICAxIHBvaW50ICBzdWJtaXR0ZWQgNSBkYXlzIGFnbwoiTGV0IHlvdSEgSSdtIHN1cmUgaGUgd291bGQgYmUgZGVsaWdodGVkLCIgY3JpZWQgQW5uZS4gIkkgYWRtaXQgdGhhdCBpdCB3YXMgd2hhdCB3YXMgaW4gbXkgaGVhZCB3aGVuIEkgdG9vayB5b3UgZG93biBsYXN0IG5pZ2h0LiBDYXB0YWluIEppbSBoYXMgYWx3YXlzIGJlZW4gd2lzaGluZyBoZSBjb3VsZCBnZXQgc29tZWJvZHkgdG8gd3JpdGUgaGlzIGxpZmUgYm9vayBwcm9wZXJseSBmb3IgaGltLiIKT3ZlcnZpZXcgZm9yIGNocmVzdG9jaGFudApIb3dldmVyLCBhIHBvc2l0aXZlIGNvcnJlbGF0aW9uIGJldHdlZW4gcGh5c2ljYWwgYWN0aXZpdHkgYW5kIGxlYXJuaW5nIGFuZCBpbnRlbGxpZ2VuY2Ugc2NvcmVzIHdhcyByZXBvcnRlZCBpbiBhIG1ldGEgYW5hbHlzaXMgb2Ygc2Nob29sIGFnZSBjaGlsZHJlbiBbMTRdLiAKQnJlbmRvbiBHb2RkYXJkIChoeXBlciBleHRlbmRlZCBrbmVlKSBhbmQgQ2FsZSBIb29rZXIgKHNvcmUga25lZSBjYXApIHdpbGwgYm90aCBoYXZlIHRvIHRyYWluIHRvIHBsYXkuIApFc3BlY2lhbGx5IGluIHRoaXMgY2FzZS4gVGhlaXIgbmV0IGNvZGUgaXMgc28gZnVja2luZyBidXN0ZWQgdGhhdCB0aGVpciBzZXJ2ZXJzIGNhbiBmaWx0ZXIgb3V0IHdoYXQgYXJlIHZlcnkgb2J2aW91c2x5IGR1cGxpY2F0ZSByZXF1ZXN0cywgYW5kIGl0IHRoZSBwbGF5ZXJzIGZhdWx0PyBJdCBoYXJkIHRvIGV4cGxhaW4gdG8gc29tZW9uZSB3aG8gaXNudCBpbnRvIHNvZnR3YXJlIGV4YWN0bHkgaG93IGVncmVnaW91cyB0aGF0IGlzLiBJZiB0aGF0IHdhcyBicm91Z2h0IHRvIG1lIGFuZCBjYWxsZWQgcHJvZHVjdGlvbiBjb2RlLCB0aGUgaWRpb3RzIHdobyBicm91Z2h0IGl0IHRvIG1lIHdvdWxkIGJlIGRvaW5nIG5vdGhpbmcgYnV0IGNsZWFuaW5nIHVwIG90aGVyIHBlb3BsZSBjb2RlIGZvciB0aGUgcmVzdCBvZiB0aGVpciB0aW1lIHdvcmtpbmcgaW4gdGhhdCBjb2RlYmFzZS4gCkF0IHRoaXMgcG9pbnQgaGUgaXMgc2F5aW5nIHNvbWV0aGluZyB0byBtZSBkdXJpbmcgZXZlcnkgaGFuZCwgaXQgZG9lc24ndCBtYXR0ZXIgaWYgSSdtIHBsYXlpbmcgdGhlIGhhbmQgb3Igbm90LiBIZSB3b3VsZCBqdXN0IHNheSB0aGluZ3MgbGlrZSAiSSdtIGNvbWluZyBhZnRlciB5b3UgYnVkZHkiIGFuZCBpZiBJIGZvbGRlZCBhbmQgcHVsbGVkIG91dCBteSBwaG9uZSBoZSB3b3VsZCBzYXkgImRpZCB5b3UgY29tZSBoZXJlIHRvIHBsYXkgb24geW91ciBwaG9uZSBvciBkaWQgeW91IGNvbWUgaGVyZSB0byBwbGF5IHBva2VyLiIuIAoxIHNtYWxsIG9uaW9uIGRpY2VkCiJXZSBhcmUgdGhyaWxsZWQgdGhhdCB0aGlzIGhvdGVsIGhhcyBicm9rZW4gZ3JvdW5kIGluIGEgbWFya2V0IHRoYXQgSUhHIGhhcyB0aHJpdmVkIGluIHNpbmNlIDE5NDYgYW5kIGtub3dzIHdlbGwsIiBzYWlkIEpvZWwgRWlzZW1hbm4sIGNoaWVmIGRldmVsb3BtZW50IG9mZmljZXIsIElIRywgdGhlIEFtZXJpY2FzLiAiSUhHIGlzIGNvbW1pdHRlZCB0byB3b3JraW5nIHdpdGggb3VyIHBhcnRuZXJzIGluIEJyYXppbCB0byBkZXZlbG9wIGhvdGVscyBpbiBncm93aW5nIG1hcmtldHMgd2hlcmUgYnJhbmRlZCwgcXVhbGl0eSBsb2RnaW5nIG9wdGlvbnMgYXJlIG5lZWRlZC4iCihQaG90byBieSBKb2UgUmFlZGxlL0dldHR5IEltYWdlcykuIApCdXQgaW5zdGVhZCBvZiBhIG1vcmUgY29tZm9ydGFibGUgbGlmZXN0eWxlLCBOYXNoIHRlYW1lZCB1cCB3aXRoIHRoZSBvd25lciBvZiBhIG1hc3NhZ2UgcGFybG9yIGNhbGxlZCB0aGUgIkRvbGwgSG91c2UsIiB3aGVyZSBoZSBkZW1hbmRlZCB0aGF0IHRoZXkgd29yayBsb25nIGhvdXJzIHdoaWxlIGNvbmZpc2NhdGluZyB0aGVpciBwcm9jZWVkcyBhbmQgdXNpbmcgdGhyZWF0cyBvZiB2aW9sZW5jZSB0byBrZWVwIHRoZW0gZnJvbSBsZWF2aW5nLCBwcm9zZWN1dG9ycyBzYWlkLgpKdXN0IHNwbGl0IHlvdXIgYXJteSB1bnRpbCBwYXJ0IG9mIGl0IGlzIHNtYWxsZXIgdGhhbiB0aGUgZW5lbXkgYXJteS4gClByZXR0eSBzdXJlIHRoaXMgaXMgdGhlIGNhc2Ugd2l0aCBtb3N0IGxvY2tlZCBkb29ycy4uIApIZW5zb24sIHdobyBzdGFycyBhcyBBbGksIGFuIGFtYml0aW91cyBzcG9ydHMgbWFya2V0aW5nIGFnZW50IHdvcmtpbmcgd2l0aGluIGFuIGFsbCBtYWxlIGNvbXBhbnkuIFBvc2l0aW9uZWQgYXMgYW4gdW5zb3BoaXN0aWNhdGVkIG1hbiBlYXRlciB0eXBlIGluIGhlciByb21hbnRpYyByZWxhdGlvbnNoaXBzLCBBbGkncyBwZXJjZWl2ZWQgaW5hYmlsaXR5IHRvIGNvbm5lY3Qgd2l0aCBtZW4gaGFzIGhhbHRlZCBoZXIgcHJvZmVzc2lvbmFsIGFkdmFuY2VtZW50IGJ5IHRoZSBtZW4gd2hvIGhvbGQgYWxsIG9mIHRoZSBwb3dlciB0byBwcm9tb3RlIGhlci4uIApOb3Qgb25seSB3b3VsZCB0aGUgc21hbGxlciBudW1iZXIgb2YgcXVhbGl0eSBjcXdzIG1ha2UgdHdpY2UgYXMgbXVjaCBjbGVhciBwcm9maXQgcGVyIGNvdyBhYm92ZSBmZWVkIGNvc3RzLCBidXQgdGhlaXIgb3duZXJzIHdvdWxkIHN0aWxsIGhhdmUgYSB0ZW4gZG9sbGFyIGdvbGQgcGllY2UgcGVyIGNvdyBvdmVyIGZvciBnb29kIEkgbWVhc3VyZS4gSG9tZSBvZiB0aGUgZm9ybSBNciAnLCBmICxjIG9uZW5zcCBtYWkgdCB3aSBuaXUgbGMuIApHbHV0aW5vdXMgd2hpdGUgcmljZSBhbHNvIGNvbnRhaW5zIHNtYWxsZXIgYW1vdW50cyBvZiBvdGhlciBtaW5lcmFscy4gQ29uc2lkZXJhdGlvbnMgR2x1dGlub3VzIHdoaXRlIHJpY2Ugc3VwcGxpZXMgY29uc2lkZXJhYmx5IGxlc3MgZmliZXIgdGhhbiBvdGhlciB0eXBlcyBvZiByaWNlLiAKSSBuZXZlciBkaXNhZ3JlZWQgd2l0aCBoaXMgc3RhdGVtZW50LCBqdXN0IHdpdGggaG93IGhlIHNhaWQgaXQgYW5kIHdobyBoZSBzYWlkIGl0IHRvLiBXaGljaCBJIFRISU5LIHlvdSBhZ3JlZSB3aXRoIG1lIG9uLCBzbyB5ZWFoClNvZGFicm90aGVsICAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxMSBkYXlzIGFnbwpQcmV0dHkgYmlnIG5lcmYsIGxpa2VseSBkZWFkIGJlY2F1c2UgaGUgYWxyZWFkeSBoYWQgY291bnRlcnMuWWFzdW86IFJJUCBNb2UgKG5vdCByZWFsbHksIGNoYW5nZXMgYXJlIGZpbmUgYW5kIGhlIGJhbGFuY2VkIGF0IHRoZSBtb21lbnQpLlplZDogKzIgdG8gM2sgdmlld2VycyB0byBMTCBTdHlsaXNoIFBvZywgb3ZlcmFsbCBpdCBhIGxvdCBvZiBsb3ZlIHRvIFplZCB0aGF0IGhlIGNhbiBwb3RlbnRpYWxseSBjb21lIGJhY2sgaW50byB0aGUgbWV0YSAob3BlbnMgdXAgY3JlYXRpdmUgb3B0aW9ucyB0byBwaWNrIGhpbSkuIApTaW5jZSBpdCB1bnNhZmUsIEkgbmV2ZXIgdXNlIDQsNCB1bmxlc3MgdGhleSBkdWNraW5nIDQsMS4KRGllIEtyYW5raGVpdCBoYXQgY2EgZWluZSBOZXVlcmtyYW5rdW5nc3JhdGUgdm9uIDEgaW4gMTAwIDAwMCBQZXJzb25lbiB1bmQgaXN0IGRhaGVyIGJlaSBBbGxnZW1laW5yenRlbiBzZWhyIHdlbmlnIGJla2FubnQgdW5kIHNvbWl0IHNjaHdlciBmZXN0enVzdGVsbGVuLiBEaWFnbm9zZW1pdHRlbCBzaW5kIHVudGVyIGFuZGVyZW0gTVJUIChBdXNzY2hsdXNzIGVpbmVzIFR1bW9ycyksIFNwaWVnZWx1bmcgZGVzIEF1Z2VuaGludGVyZ3J1bmRlcyAoU2Nod2VsbHVuZyBkZXMgU2VobmVydmVzKSB1bmQgTGlxdW9yZW50bmFobWUgKEx1bWJhbHB1bmt0aW9uLCBkZXIgRHJ1Y2sgZGVyIEZsc3NpZ2tlaXQgaW0gUmNrZW5tYXJrIHVuZCBHZWhpcm4gd2lyZCBnZW1lc3NlbiB1bmQgd2VubiBub3R3ZW5kaWcgRmxzc2lna2VpdCBlbnRmZXJudCwgdW0gRHJ1Y2sgenUgc2Vua2VuLiAgTGlxdW9yZW50bmFobWUgKGthbm4gaGVsZmVuLCBhYmVyIG5pY2h0IGltbWVyKS4uIApSYW5kb21uZXNzIGFsd2F5cyBwbGF5ZWQgYSBjcml0aWNhbCByb2xlLiBQb0dvIGlzIG5vdCBjaGVzcyBhbmQgSSB1bmRlcnN0YW5kIGl0IGNhbiBiZS4gQnV0IGFnYWluLCB0aGF0IG5vIGNvbnNvbGF0aW9uIHRvIHRoZSBwZW9wbGUgb24gdGhlIHdyb25nIHNpZGUgb2YgdGhhdCBiZWxsIGN1cnZlLi4gCls5XSBXaGVuIHRoaXMgdGVzdCB3YXMgZ2l2ZW4gdG8gZmluYWwgcXVhcnRlciBjaGlyb3ByYWN0aWMgc3R1ZGVudHMgNzAlIG9mIHRoZW0gcGFzc2VkIHRoZSBzYW1lIGV4YW0hIFsxMF0xLiAKT3Bwb25lbnQgQW5uIE1hcmllIEJlcmdpbiBmcm9tIEtpbGtlbm55IHRvb2sgdGhlIGZpZ2h0IGJ5IGp1ZGdlIGRlY2lzaW9uICg0OSA0OCwgNDggNDksIDQ3IDQ5ICkuIAogMiBwb2ludHMgIHN1Ym1pdHRlZCAzIGRheXMgYWdvVGhpcyBpcyBhIG5pY2Ugc3RlcCBpbiB0aGUgcmlnaHQgZGlyZWN0aW9uIGJ1dCBzZWN0aW9uIDEzMyBpcyBpbiBjZW50ZXIgZmllbGQgYW5kIHNlY3Rpb24gMzI3IGlzIHRoZSBsYXN0IHVwcGVyIGRlY2sgc2VjdGlvbiBhbG9uZyB0aGUgbGVmdCBmaWVsZCBsaW5lLCBhbmQgZG9lc24gY29ubmVjdCB0byB0aGUgb3V0ZmllbGQgc2VjdGlvbnMgKHlvdSBoYXZlIHRvIGdvIGRvd24gYSBjb3VwbGUgZXNjYWxhdG9ycyBhbmQgdGhlbiB1cCBhIGJpZyB3aW5kaW5nIHJhbXApLkdyZWF0IHRoYXQgdGhleSBnaXZpbmcgZmFtaWxpZXMgc29tZSBwcmljZSByZWxpZWYsIGp1c3Qgc3Vja3MgdGhhdCB0aGV5IG9ubHkgZG9pbmcgaXQgaW4gMiBzZWN0aW9ucy4gClRoZXJlIGlzIGFsc28gbm90aGluZyB0aGF0IHNheXMgVVRHIGNhbiBoYXZlIEFBIG9yIEpKIG9yIGV2ZW4gS1EuIEkgdGhpbmsgZm9sZCBpcyBnb29kIGhlcmUuIE5vdCBzYXlpbmcgSSB3b3VsZCBub3QgaGF0ZSBpdCBidXQgeW91IGhhdmUgdG8gZ28gd2l0aCB5b3VyIHJlYWQuLiAKVmlzaXRlZCBIZXJtYW4gTWlsbGVyIGEgZmV3IHllYXJzIGFnbywgYW5kIHRoZXkgZGlkIHVuZGVyc3RhbmQuIEl0IHNob3VsZCBoYXZlIG11Y2ggbW9yZSBoZWlnaHQgYWRqdXN0bWVudCwgYW5kIHlvdSBzaG91bGQgYmUgYWJsZSB0byBtb3ZlIG1vcmUuIApCdWtvd2llY2tpIGdvdCBmZWxsb3cgY29wcyBhbmQgbG9jYWwgY29tbXVuaXR5IG1lbWJlcnMgdG8gImFkb3B0IiBhbmQgZGVjb3JhdGUgdGhlIGNlbGxzIGluIHRoZWlyIG9mZiB0aW1lIG92ZXIgdGhlIGxhc3QgZWlnaHQgd2Vla3MuIFRoZSBwcmVjaW5jdCBraWNrZWQgaW4gJDMsMDAwIGFuZCB2b2x1bnRlZXJzICAgc3VjaCBhcyBhIDk5IGNlbnQgc3RvcmUgdGhhdCBkb25hdGVkIGRlY29yYXRpb25zICAgc3BlbnQgdGhvdXNhbmRzIG1vcmUgb24gdGhlIGVmZm9ydC4KSSBzaG90IHRoaXMgdmlkZW8gdG8gdHJ5IHRvIHB1dCBpdCBpbiBwZXJzcGVjdGl2ZS4gQnV0LCBpbWFnaW5lIENvYm8gQ2VudGVyIG9uIG9uZSBlbmQsIGFuZCBGb3JkIEZpZWxkIG9uIGFub3RoZXIsIGFuZCB5b3UgYmVnaW4gdG8gZ2V0IHRoZSBzY2FsZS4KV29ybGQgUG9rZXIgVG91ciBlcGlzb2RlcyB3aWxsIGJlIHNob3duIGluIDYwIGNvdW50cmllcyBhbmQgaWYgU3RldmUgTGlwc2NvbWIgaGFzIGhpcyB3YXkgdGhpcyB3aWxsIGluY3JlYXNlIHRvIDIwMCBjb3VudHJpZXMuIEFuZCBvdGhlcnMgYXJlIGNsb3NlIGJlaGluZCB3aXRoIHByb2dyYW1zIGxpa2UgQ2VsZWJyaXR5IFBva2VyIGFuZCBQb2tlciBhdCB0aGUgUGxhemEgd2hpY2ggYXJlIHB1bGxpbmcgaW4gYmlnIHJhdGluZ3MuIE9ubGluZSBwb2tlciByb29tcyBhcmUgbm93IGJlY29taW5nIGEgYmlsbGlvbiBkb2xsYXIgaW5kdXN0cnkuIAoiSXQncyBhbHdheXMgaW4gdGhlIGJhY2sgb2YgeW91ciBtaW5kIHRoYXQgYXMgc29vbiBhcyBvbmUgKGlsbGVnYWwpIGx1Y3JhdGl2ZSBidXNpbmVzcyBjbG9zZXMgZG93biBhbm90aGVyIHBvcHMgdXAgdG8gdGFrZSBpdHMgcGxhY2UuIAoiUmlnaHQgZnJvbSB0aGUgc3RhcnQsIEkgd2FzIGEgdHJ1c3RlZCBhZHZpc29yIGFuZCBoYXZlIGJlZW4gZ2l2ZW4gaW5jcmVhc2luZyByZXNwb25zaWJpbGl0aWVzLCIgc2F5cyBHb3VpbmxvY2suIApCYWNrIHRvIHJlYWxpdHksIGluZGVlZCwgd2l0aCBhIGNyYXNoaW5nIHRodWQuIApUZWxsIHRoZW0gSSwgRWtraSwgQ2hpZWZ0YWluIG9mIENsYW4gTWNUaGluZyBhbmQgVW5vZmZpY2lhbCBQdXJ2ZXlvciBvZiBGaW5lIFdpbmVzIGFuZCBDYWtlcywgc2VudCB5b3UgLiBBbmQgZm9yIHRoZSBqb3VybmV5LiBPaCwgYW5kIGRvbid0IG1pbmQgRG9nYXN0cm9waGUgLiAKRG8gb25lIHRoaXJkIHdoZW4gdGhlIGRhbmRlbGlvbnMgYmVnaW4gdG8gb3Blbjsgb25lIHRoaXJkIHR3byB3ZWVrcyBsYXRlcjsgYW5kIHRoZSBmaW5hbCBvbmUgdGhpcmQgYWJvdXQgbWlkIEFwcmlsLiBUaGlzIHdpbGwgZ2l2ZSB5b3UgYSBiZXR0ZXIgc3ByZWFkIGZvciBwb2xsaW5hdGlvbiBvZiB5b3VyIHBsYW50cyB3aGljaCwgb2YgY291cnNlLCBvcGVuIGluIHNlcXVlbmNlLiBUaGUgaG91c2VzIHNob3VsZCBzaXQgYWJvdXQgaGVhZCBoZWlnaHQgdG8ga2VlcCByYWNjb29ucyBhbmQgdGhlaXIgZnJpZW5kcyBmcm9tIGtub2NraW5nIHRoZW0gZG93biwgYW5kIG1vcm5pbmcgc3VuIGlzIGJlc3QuIApZb3UgYmVlbiBlbW90aW9uYWxseSBhYnVzZWQgYnkgdGhpcyBndXksIGFuZCBpdCBzb3VuZHMgbGlrZSBpdCBtaWdodCBoYXZlIGJlY29tZSBwaHlzaWNhbC4gCkluIHRoZSBuZXh0IDMwIHllYXJzLCBoZSB3YXMgaW1wbGljYXRlZCBpbiBzb21lIDEyIG11cmRlcnMsIGVpdGhlciBieSBoaXMgb3duIGhhbmQsIG9yIHZpYSBoaXJlZCBraWxsZXJzLiAKSSBhbSAzNCBhbmQgYWZ0ZXIgc3RhdGluZyB0aGF0IG15IHByaWNlIHJhbmdlIGNhcHBlZCBvdXQgYXQgMTUwaywgbXkgc2lzdGVyIGNvbnRpbnVlZCB0byBzZW5kIG1lIGxpc3RpbmdzIGZvciAyNTBrKy4KVGhlcmUgYXJlIHF1aXRlIGEgZmV3IG1hc3NhZ2UgcGFybG9ycyBpbiB0aGlzIHBsYXphIGFuZCBhbHNvIHNvbWUgdGhhdCBhcmVuIGFkdmVydGlzZWQgYXQgYWxsICh0aGV5IGFyZSBmb3VuZCB0aHJvdWdoIHZhcmlvdXMgImhpZGRlbiIgZW50cmFuY2VzKS4gVGhlcmUgYWxzbyBhIGZldyBtb3JlIHdpdGhpbiA1IDEwIG1pbnV0ZXMgZHJpdmUgaW4gdmFyaW91cyBvdGhlciBwbGF6YXMuIApFeGFjdGx5IHdoYXQgeW91IHNhaWQuIApBcyB1c3VhbCwgYSByYXVjb3VzIGNyb3dkIGZpbGxlZCB0aGUgRm91ciBTZWFzb25zIEhvdGVsIGJhbGxyb29tIGluIFZhbmNvdXZlciBmb3IgdGhlIHdpbmUgYW5kIGNoZWVzZSBncmF6ZXIgYW5kIGZ1bmRyYWlzaW5nIGV2ZW50LCBoZWxkIGluIHBhcnRuZXJzaGlwIHdpdGggdGhlIEltcG9ydCBWaXRuZXJzIGFuZCBTcGlyaXRzIEFzc29jaWF0aW9uLgpUaGUgdHJpY2sgaXMgbWFuYWdpbmcgdGhlIHNpemUgb2YgdGhlIHRhYmxlIGFuZCBrZWVwaW5nIHRoZSBtb2RlIG9mIHVzZSBzaW1wbGUgZW5vdWdoIHRvIHByb2Nlc3MgdmVyeSBxdWlja2x5IChzcGFjZSB0aW1lIHRyYWRlb2ZmKS4gCkkgbGlrZSB0aGUgc3RhcnRpbmcgcGl0Y2hpbmcuIApUaGV5IGxvb2sgdG8gaGVyIGZvciB3aXNkb20gb24gYWxsIG1hdHRlcnMgb2YgdGhlIGhlYXJ0IHRvIGNvcGUgd2l0aCBkYXRpbmcgZmF0aWd1ZSBhbmQgaW5maWRlbGl0eSwgd29yayByb21hbmNlcywgdGlyZWQgbWFycmlhZ2VzLCB0cnVlIGxvdmUsIGFuZCB0cnVlIGxvc3MuIApPbmUgZ2FtZSBpc24ndCAiYmV0dGVyIiBvciAid29yc2UiIHRoYW4gYW5vdGhlciwganVzdCBkaWZmZXJlbnQgaW4gd2hhdCBpdCBvZmZlcnMgaXRzIHBsYXllcnMuIApPbmNlIHlvdSBzZWUgaXQgZm9yIHlvdXJzZWxmLCB5b3Ugd2lsbCB1bmRlcnN0YW5kLiAKSSBkb24gdW5kZXJzdGFuZCB3aHkgL3IvcG9rZXIgZ2V0cyBvZmYgb24gd3JpdGluZyBkaXNwYXJhZ2luZyBwb3N0cyB0byBtYWtlIHRoZW1zZWx2ZXMgZmVlbCBiZXR0ZXIuIApEaXNjb3ZlcmluZyB0aGUgaW5uZXIgcGVyc29uYSByZXF1aXJlcyBwcmVzZW5jZSBvZiBsYXJnZSBhbW91bnRzIG9mIGVtb3Rpb25hbCBhbmQgc2Vuc2l0aXZlIHF1b3RpZW50IGluIHRoZSBpbnRlcnZpZXdlcidzIHBlcnNvbmFsaXR5LiAKQnV0IHNlZWluZyB0aGF0IGFsdGVybmF0ZSB0aW1lbGluZSB3aGVyZSBJIGdpdmUgdXAgYW5kIGdldCBhIGpvYiBhdCBNY0RvbmFsZCBhZ2FpbiBiZWNvbWUgc28gY2xvc2UgdG8gcmVhbGl0eSB3YXMgZW5vdWdoIHRvIHB1c2ggbWUuIApRdWVzdGlvbnMgb3V2ZXJ0ZXMKIk9oLCB0aGF0IEJpbGx5LCBoZSB3YXMgcHJvYmFibHkgZHJpbmtpbmcuIi4gCkF0IGEgc3RvcmUgbGlrZSBXYWwgbWFydCBmdWxmaWxsbWVudCBpcyBhdXRvbWF0aWMuIFRoZSBjdXN0b21lciBwaWNrcyB1cCB0aGUgaXRlbSBvZiBkZXNpcmUsIHBheXMgZm9yIGl0IGFuZCB3YWxrcyBvdXQgdGhlIGRvb3IuIApIZSBoYXMgbmV2ZXIgdGFrZW4gaXQgb2ZmLiBUaGF0IHRyaWJ1dGUgZG9lc24ndCBiZWdpbiB0byBlbmNvbXBhc3Mgd2hhdCBKb3JkYW4ncyByYWRpYW5jZSBtZWFudCB0byBhIHlvdW5nc3RlciB3aG8gZHJlYW1lZCBvZiBmaW5kaW5nIGEgYmV0dGVyIGxpZmUgdGhyb3VnaCBiYXNrZXRiYWxsLiAKQSBzb2Z0d2FyZSBvZiB0aGUgZGlmZmVyZW50IHBlcmlvZCBmcm9tIEhDRCB3aWxsIGRlc2lnbiBEZXBvc2l0ZWQgYWxyZWFkeSB0byBvbmx5IGV4YWN0bHkgZnJlZSBmb3IgdGhlIGF0b21pYyBpZSBwYXNzd29yZCByZWNvdmVyeSBrZXlnZW4gd2hpY2ggcHVzaGVkIG9uIFN1bmRheS4gQmxhZGUgc3BlZWQsIHRpbWUgYW5kIHJlcXVlc3QsIGNvdW50cnkgYW5kIEJpbGluZ3VhbCBjb21wZXRlbmNpZXMuIENhc2lubyBTREsgRW5naW5lIGZyb20gSWQgU29mdHdhcmUgaGFuZHMuIApQYXJ0aW5nIGlzIHN1Y2ggc3dlZXQgc29ycm93LCBhbmQgdGhlIEhpY2N1cC9Ub290aGxlc3MgZHluYW1pYyBidWlsZHMgdG8gYW4gYWZmZWN0aW5nIGNsaW1heC4uIApTcG9ydGluZyBFdmVudHMgQSBtYXJrZXRpbmcgbWluZGVkIG1hc3NhZ2UgdGhlcmFwaXN0IHZvbHVudGVlcnMgaGVyIHByb2Zlc3Npb25hbCBzZXJ2aWNlcyB0byBhdGhsZXRlcyB3aG8gY29tcGV0ZSBpbiBtYXJhdGhvbnMgYW5kIG90aGVyIGRlbWFuZGluZyBzcG9ydGluZyBldmVudHMuIApBSSBjYW4gYXVnbWVudCBhbmQgY3JlYXRlIG5ldyBmcm9udGllcnMgaW4gYm90aCB0aGUgaWRlYSBhbmQgdGhlIGltcGFjdC4gSWYgd2UgZG8gbm90IHB1c2ggb3Vyc2VsdmVzIHRvIGxldmVyYWdlIHRoaXMsIHdlIHN0YW5kIHRoZSBkYW5nZXIgb2YgdGhlIGluZ3JlZGllbnRzIGJlY29taW5nIHRoZSBmaW5hbCBzZXJ2aW5nLiAKVGhlcmUgYmV0dGVyLCB0aGVyZSB3b3JzZS4gSSBsaXZlIGJ5IG15c2VsZiBpbiBhIHNwYWNpb3VzIGFuZCB3ZWxsIGZ1cm5pc2hlZCB0d28gYmVkcm9vbSBhcGFydG1lbnQgaW4gYSBtb2Rlcm4gZG93bnRvd24gYXJlYS4gCllvdSBBUkVOIGhlciBtb20sIHNvIHdoeSByZXNlbnQgYW5kIHB1bmlzaCBoZXIgZm9yIHBvaW50aW5nIG91dCB0aGUgb2J2aW91cz8gU3VyZSwgc2hlIG5lZWRzIHRvIGZvbGxvdyBjZXJ0YWluIHJ1bGVzIGFuZCBhZGhlcmUgdG8gYSBtb2RpY3VtIG9mIHJlc3BlY3Qgd2hpbGUgdW5kZXIgeW91ciByb29mLCBidXQgeW91IGNhbiBnZXQgdXBzZXQgdGhhdCBzaGUgZG9lc24gc2VlL3Jlc3BlY3QgeW91IGFzIGEgbW90aGVyIHdoZW4geW91IGFscmVhZHkgYWRtaXR0ZWQgdGhhdCB5b3Ugc2hvdyBibGF0YW50IGZhdm9yaXRpc20gdG8geW91ciBiaW8ga2lkcy4gCkZvciBleGFtcGxlOiBQbGF5ZXIgMSBnb2VzIGFsbCBpbiB3aXRoICQyMDAsIGFuZCBwbGF5ZXIgMiBjYWxscyBidXQgaGFzIG9ubHkgJDEwMC4gUGxheWVyIDEgbG9zZXMgYnV0IGdldHMgYmFjayAkMTAwLCBhbmQgdGhleSBwbGF5IG91dCB0aGUgbmV4dCBoYW5kIGZvciB0aGUgcmVtYWluaW5nICQyMDAgKCQxMDAgZnJvbSBwbGF5ZXIgMSBhbmQgJDEwMCBmcm9tIHBsYXllciAyKSBpbiB0aGUgcG90LiAKTGV0cyBzYXkgeW91IGFuZCBJIHdlcmUgaW4gc3BhY2Ugc2hpcHMgaW4gdGhlIHNvbGFyIHN5c3RlbSBmbHlpbmcgYXJvdW5kIHJlYWwgZmFzdC4gU2F5IHdlIGFyZSBhdCB0aGUgc2FtZSBkaXN0YW5jZSBmcm9tIHRoZSBzdW4gYXMgRWFydGgsIGJ1dCB5b3UgYXJlIG9uIG9uZSBzaWRlIG9mIHRoZSBzdW4gYW5kIEkgYW0gb24gdGhlIG9wcG9zaXRlIHNpZGUgYW5kIHdlIGFyZSBnb2luZyBpbiBjaXJjbGVzICAgc28gd2UgYXJlIDE2IGxpZ2h0IG1pbnV0ZXMgYXBhcnQgKGZyb20gRWFydGhzIHBlcnNwZWN0aXZlKS4gCkkgdGhpbmsgdGhhdCBwZW9wbGUgZ2V0IHRoaXMgYXJndW1lbnQgYWxsIHdyb25nLiBUaGUgYXJndW1lbnQgaXNuIHRoYXQgaXQgaXNuIHBvc3NpYmxlIHRvIGdldCBvdXQgb2YgcG92ZXJ0eSB0aHJvdWdoIGhhcmQgd29yayBhbmQgc21hcnRzLiBUaGUgYXJndW1lbnQgaXMgdGhhdCB0aGVyZSBhcmUgc3lzdGVtaWMgaXNzdWVzIHRoYXQgbWFrZSBpdCBzbyBvbmx5IGNlcnRhaW4gZ3JvdXBzIGhhdmUgdG8gZG8gdGhhdC4gCkhpcyBzZWN1cml0eSBjbGVhcmFuY2UgaXMgbGlua2VkIHRvIGhpcyBhZXJvc3BhY2UgY29tcGFueSBTcGFjZVgsIHdoaWNoIGlzIGxhdW5jaGluZyBpbnRlbGxpZ2VuY2Ugc2F0ZWxsaXRlcyBmb3IgdGhlIFVTIGdvdmVybm1lbnQgYW5kIGlzIHBsYW5uaW5nIG1hbm5lZCBzcGFjZWZsaWdodHMgZm9yIE5hc2EgbGF0ZXIgdGhpcyB5ZWFyLiAKU28gbm93IHRoZXkgc2F5aW5nIHNoZSBiZSBlbGlnaWJsZSBmb3IgcGFyb2xlIGFmdGVyIHNlcnZpbmcgNTEgeWVhcnMgb2YgaGVyIHNlbnRlbmNlLiBTaGUgdHVybmVkIDMwIHllYXJzIG9sZCBpbiBwcmlzb24gbGFzdCB5ZWFyLkluIHJlYWxpdHksIHRoaXMgc2hvdWxkIGJlZW4gY29uc2lkZXJlZCBzZWxmIGRlZmVuc2UsIGEgcmFwaW5nIG9mIGEgbWlub3IsIGFuZCBtaW5vcnMgYW5kIGNoaWxkcmVuIHNob3VsZCBhYnNvbHV0ZWx5IE5FVkVSIGJlIGFsbG93ZWQgdG8gYmUgbGFiZWxlZCBhcyBwcm9zdGl0dXRlcyBpbiBhIGNvdXJ0IG9mIGxhdyB0aGF0IHVwaG9sZHMgdGhlIHNhbWUgbGF3IHRoYXQgbWlub3JzIGNhbm5vdCBnaXZlIGNvbnNlbnQgdG8gc2V4LlRoaXMgaXMganVzdCBvbmUgY2FzZS4gWW91IGNhbiBsb29rIHRoZSByZXN0IHVwIHlvdXJzZWxmLCBpZiB5b3UgcmVhbGx5IGNhcmUgYWJvdXQgdGhlIGtpZHMgYW5kIG5vdCBqdXN0IGZlZWxzLiAKVGhlIHJpa2lzaGkgZGlkIHRoZWlyIHVzdWFsIHNob3BwaW5nIGF0IExvdWlzIFZ1aXR0b24ncyBhdCB0aGUgZmFidWxvdXMgQ2Flc2FycyBQYWxhY2UgSG90ZWwncyBGb3J1bSBTaG9wcy4gT2YgY291cnNlIHRoZXkgZHJvcHBlZCB0aG91c2FuZHMgb2YgZG9sbGFycyBvbiB0aGUgbGFyZ2VzdCBzaXplIExWIG1vbm9ncmFtbWVkIHdhbGxldHMgYW5kIGhhbmRiYWdzIGFzIHRoZXkgZGlkIGluIFBhcmlzLiAKSSB0b29rIG91dCBteSBwaG9uZSBhbmQgY2FsbGVkIG15IGRhZCB0byBsZXQgaGltIGtub3cgd2hhdCB3YXMgaGFwcGVuaW5nIGFuZCB0aGF0IEkgd2FzIGEgYmxvY2sgYXdheSBmcm9tIGhvbWUuIApOaWNlIHdvcmsgb24geW91ciBmaXJzdCBzb25nISBJIGFncmVlIHdpdGggRnVja2luZyBHbG9yaW91cywgcGVyc29uYWwgZXhwZXJpZW5jZSBhbHdheXMgZXZva2VzIG1vcmUgZW1vdGlvbiBhbmQgaW1hZ2VyeSB0aGFuIGdlbmVyYWwgc3RhdGVtZW50cy4gTW9zdCBwZW9wbGUgd2lsbCBpbmZlciB3aGF0IGdvaW5nIG9uIG9yIHdoYXQgaGFwcGVuZWQgYmFzZWQgb24gdGhlIGNvbnRleHQuIApJdCBhYm91dCBhY2NlcHRhbmNlIG9mIGV2ZXJ5dGhpbmcuIFRoZSByZWxlYXNlIG9mIHByb21vIHNob3RzIGZvciB0aGUgdmlkZW8sIGluIHdoaWNoIHRoZSBzaW5nZXIgc3RydXRzIGhlciBzdHVmZiBpbiBsaW5nZXJpZSwgUmV4aGEgZGFkIEZsYW11ciBoaXQgb3V0IGF0IGhpcyBkYXVnaHRlciBmb3Igc3R1cGlkIHBvcm5vZ3JhcGh5IGluIHRleHQgbWVzc2FnZXMgdGhhdCBzaGUgbWFkZSBwdWJsaWMgb24gaGVyIEluc3RhZ3JhbS4gClRoaXMgaXMgbGlrZSBiYWtpbmcgdGhlIGNha2UgZmlyc3QgYW5kIHRoZW4gYWRkaW5nIHRoZSBzdWdhci4gClRoZSBNY0xhcmVuIHRlYW0gcHJpbmNpcGFsLCBNYXJ0aW4gV2hpdG1hcnNoLCBoYXMgYmVlbiBxdWljayB0byBkZWZlbmQgaGlzIGRyaXZlciBpbiB0aGVzZSBwYWdlcyBpbiB0aGUgd2FrZSBvZiBMYXVkYSBhbmQgRml0dGlwYWxkaSBjb21tZW50cy4gQXJlIHZlcnkgcXVvdGFibGUgcGVvcGxlLCBhbmQgdmVyeSBxdW90YWJsZSBwZW9wbGUgc2F5IHRoaW5ncyBmb3IgZWZmZWN0LiAKR290IGEgaGFua2VyaW5nIGZvciBmaXhpbicgdXAgdGhlIGhvbWUgZnJvbnQ/IFRoZXJlJ3Mgbm8gbmVlZCB0byBiZSBhIGZ1c3Npbicgb3ZlciB0aGUgc3RvcmVzIGluIHlvdXIgdG93biB3aGVuIHlvdSBjYW4gaGF2ZSBuZXcgc3R1ZmYgZm9yIHRoZSBob21lc3RlYWQgYXQgdGhlIGNsaWNrIG9mIHRoZSBtb3VzZS4gCkl0cyB0aGUgUHJlc2lkZW50IHRoaW5nLCBhbmQgY29tZXMgZnJvbSB0aGUgZmFjdCB0aGUgU2VjcmV0IFNlcnZpY2UgYmVjYW1lIHNvIGFuYWwgYWZ0ZXIgSkZLcyBhc3Nhc3NpbmF0aW9uIGl0IGJhc2ljYWxseSByZXF1aXJlZCB0aGVtIHRvIGRyaXZlIHRoZSBQcmVzaWRlbnQgYW5kIGZvcm1lciBQcmVzaWRlbnRzIGF0IGFsbCB0aW1lcy4KQUxTTzogZm9sbG93aW5nIHR3byBpbGx1c3RyYXRpb25zIGRpc3BsYXkgc29tZSBvZiB0aGUgaW5uZXIgbWVjaGFuaWNzIG9mIERpY2tlbnMgYW5hbHl6ZXIuIEluICJGaWcgMiIgd2Ugc2VlIGEgc3Vic2V0IG9mIGNhcmRzIGludGVuZGVkIGZvciB0aGUgZXllLCB3aGljaCBjb250YWluZWQgYSBmdXJ0aGVyIDEzMCBjYXJkcyBvZiBleWUgaW1hZ2VzIGFuZCBkZXNjcmlwdGlvbnMuIApDYW5hZGEgUHJlbWkKSSBob25lc3RseSBoYWQgbm8gaWRlYSB3aGF0IHBsYW5ldCBoZSB3YXMgY29taW5nIGZyb20uIFRoZXJlIGFyZSBkZWZpbml0ZWx5IHNvbWUgbWFqb3IgY3VsdHVyYWwgZGlmZmVyZW5jZXMgaGVyZS4gSSB3ZW50IHRvIGJlZCBvbiBhIGxpdHRsZSBiaXQgb2YgYSBkb3duZXIgZm9yIHRoZSBmaXJzdCB0aW1lIHNpbmNlIEkgYXJyaXZlZC4uIApFYXJsaWVyIGluIHRoZSBkYXkgQ2x1YnMgTlNXIGNoYWlybWFuIFBldGVyIE5ld2VsbCBhZGRyZXNzZWQgdGhlIGNyb3dkIGFuZCBzYWlkIGhlIHdhcyBjb25maWRlbnQgdGhlIG5ld2x5IGVsZWN0ZWQgQ29hbGl0aW9uIGdvdmVybm1lbnQgd291bGQgYWN0IHRvIHNjcmFwIHRoZSBOYXRpb25hbCBHYW1ibGluZyBSZWZvcm0gQWN0IGludHJvZHVjZWQgaW4gdGhlIHByZXZpb3VzIHBhcmxpYW1lbnQuIApTYW1lIGZvciBtZS4gClF1aW50dXNfaG9yYXRpdXMgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMTggZGF5cyBhZ28KVHJlYXQgdGhpcyBhcyBpZiB5b3VyIGNoYXJhY3RlcnMgaGF2ZSArMSB0byB0aGF0IHN0YXQgcGVybWFuZW50bHkgYXMgdGhhdCBlZmZlY3RpdmVseSB3aGF0IHRoZXkgaGF2ZS4uIApJIGFscmVhZHkgaGF2ZSBvdmVyIDEwMCBkYXlzIGZyb20gdGhpcyB5ZWFyIGFsb25lLiAKVHJlYXRpbmcgSW5zZWN0IEJpdGVzIHdpdGggQXJvbWF0aGVyYXB5Ckl0J3MgYSBncmVhdCByZXNvdXJjZSBpZiB5b3UncmUganVzdCBzdGFydGluZyB0byB0aGluayBhYm91dCBzb21lIG9mIE5ldHJ1bm5lcidzIHN0cmF0ZWdpYyBjb21wbGV4aXR5LCBidXQgb3RoZXJ3aXNlIHlvdSBtYXkgYmUgZGlzYXBwb2ludGVkLi4gClRoZSBHdWxmIENvYXN0IERvd24gU3luZHJvbWUgU29jaWV0eSB3aWxsIGhvc3QgdGhlaXIgNHRoIEFubnVhbCBQb2tlciBSdW4gb24gU2F0dXJkYXkuIFRoaXMgZnVuZHJhaXNlciBwcm9taXNlcyBwbGVudHkgb2YgZXhjaXRlbWVudCBhcyBwbGF5ZXJzIHN0b3AgYXQgc2V2ZXJhbCBsb2NhdGlvbnMgdGhyb3VnaG91dCB0aGUgR3VsZiBDb2FzdCBkcmF3aW5nIGEgY2FyZCBmcm9tIGVhY2ggbG9jYXRpb24uIApIZSBsaXZlcyB3aXRoIGhpcyBmYW1pbHkgaW4gYSB2aWxsYWdlLiBMaXRlcmFsbHkuIEhpcyBmYW1pbHkgd2VsY29tZWQgdXMgd2FybWx5IGFuZCBkaWRuJ3Qgc2VlbSB0byB0aGluayB0aGF0IEFkZW0gYnJpbmdpbmcgaG9tZSB0d28gdW5zY2FydmVkIGNoaWNrcyB3aXRoIGEgY2FyIHdhcyBhYm5vcm1hbC4gCkZvcm1hdDogVG8gc3RhcnQgdGhlIHdvcmtvdXQsIEJ1c2NoIGhhZCBtZSBsaWUgZG93biBvbiBhIG1hc3NhZ2UgdGFibGUgd2l0aCBhIHN0cmV0Y2hpbmcgYm9hcmQgcGxhY2VkIG9uIHRvcC4gVGhlbiwgaGUgc3RyYXBwZWQgbWUgaW4uIEZvcmVib2RpbmcsIHJpZ2h0PyBUaGUgcmVhc29uIGZvciBiZWluZyBzdHJhcHBlZCBpbiBpcyB0aGF0IGl0IHN0YWJpbGl6ZXMgdGhlIGJvZHkuIFRoZSBzdHJhcHMgd2VyZSBwbGFjZWQgb3ZlciBteSBoaXBzIGFuZCB3aGljaGV2ZXIgbGVnIEJ1c2NoIHdhc24ndCB3b3JraW5nIHdpdGguIGl0IGtlcHQgbXkgaGlwcyBhbmQgcmVsYXhlZCBsZWcgZnJvbSByYWlzaW5nIHVwIGFuZCBpbXBlZGluZyB3aGF0ZXZlciBzdHJldGNoIHdlIHdlcmUgd29ya2luZyBvbikuIFRoZW4gQnVzY2ggZ290IHRvIHdvcmsuIFdlIHN0cmV0Y2hlZCBvdXQgZWFjaCBsZWcgKHF1YWQsIGNhbGYsIGhhbXN0cmluZywgaGlwcywgaGlwIGZsZXhvcnMpIGFuZCB0aGVuIHN0cmV0Y2hlZCBvdXQgbXkgcm90YXRvciBjdWZmIGFuZCBwZWNzLiBUaGVuIEkgbW92ZWQgb250byBzb21lIHBhZGRpbmcgb24gdGhlIGZsb29yIHNvIEJ1c2NoIGNvdWxkIG1hc2ggbWUuIFVzaW5nIGhpcyBmZWV0IGFuZCBrbmVlcywgQnVzY2ggdXNlZCBwcmluY2lwYWxzIG9mIFRoYWkgbWFzc2FnZSBhbmQgZm9vdCBzaGlhdHN1IHRvIGtuZWFkIG15IGxlZ3MsIHBlY3MsIGFuZCBzaG91bGRlcnMuClRoYXQgYXJlIGRlZXBseSBjb3JydXB0LiBJbiB0aGlzIGFydGljbGUgeW91IHdpbGwgcmVhZCBhYm91dCB0d28gcHJvbWluZW50IG1heW9ycyB0aGF0IGhhdmUgZW5nYWdlZCBpbiBhYnNvbHV0ZWx5IGhvcnJpZmljIGJlaGF2aW9yLCBhbmQgeW91IHdpbGwgcmVhZCBhYm91dCBhIHNleCBzY2FuZGFsIG91dCBpbiBDYWxpZm9ybmlhIHRoYXQgaW52b2x2ZWQgMjQgZGlmZmVyZW50IHBvbGljZSBvZmZpY2VycyBzbGVlcGluZyB3aXRoIHRoZSBzYW1lIHByb3N0aXR1dGUuIFRoZSByZWFzb24gSSB3cml0ZSBhYm91dCB0aGVzZSB0aGluZ3MgaXMgbm90IHRvIGdyb3NzIHlvdSBvdXQuIEluc3RlYWQsIHRoZSBnb2FsIGlzIHRvIGdldCBBbWVyaWNhIHRvIHRha2UgYSBsb25nIGxvb2sgaW4gdGhlIG1pcnJvci4gVWx0aW1hdGVseSwgd2UgYXJlbid0IGdvaW5nIHRvIHR1cm4gdGhpcyBjb3VudHJ5IGFyb3VuZCBieSBlbGVjdGluZyB0aGUgcmlnaHQgcHJlc2lkZW50LCBiZWNhdXNlIHRoZSB0cnV0aCBpcyB0aGF0IHRoZSBiaWdnZXN0IHByb2JsZW0gd2l0aCB0aGlzIG5hdGlvbiBpcyBpbiBvdXIgb3duIGhlYXJ0cy4gVW50aWwgd2UgZ2V0IG91ciBoZWFydHMgcmlnaHQsIG5vdGhpbmcgaXMgZ29pbmcgdG8gcmVhbGx5IGNoYW5nZS4KVHlwaWNhbGx5LCBNaWtrbyB3b3VsZCBoYXZlICJjaGlja2VuIG9yIGZpc2ggICBubyBwb3JrIG9yIGJlZWYgICBpY2VkIHRlYSB3aXRoIFNwbGVuZGEgb3Igd2F0ZXIsIGFuZCBmcnVpdCBsaWtlIGJhbmFuYXMsIHBpbmVhcHBsZSwgbWFuZ28sIGFuZCBob25leWRldy4gSGVhdmllciBtZWF0cywgc3VnYXIsIGFuZCBjYWZmZWluZSB3b3VsZCBwcm92aWRlIGEgdGVtcG9yYXJ5IGJvb3N0IGJ1dCB3b3VsZCBiaXRlIG1lIGluIHRoZSBidXR0IGxhdGVyLiBTaXR0aW5nIGF0IGEgdGFibGUgZm9yIGFueXdoZXJlIGZyb20gYSBjb3VwbGUgaG91cnMgdG8gMzEgaG91cnMgKG15IGxvbmdlc3Qgc2Vzc2lvbikgaXNuJ3QgZ3JlYXQgZXhlcmNpc2UsIHNvIGlmIEkgYXRlIHRoYXQgc3R1ZmYsIEkgd291bGQgZ2V0IGppdHRlcnksIHNsZWVweSwgb3IgbG9zZSBmb2N1cy4gTXkgbWFpbiBzbmFja3Mgb2YgY2hvaWNlIGR1cmluZyBnYW1lIHRpbWUgd2VyZSBzYWxhZHMuIiBBbmQsIG9mIGNvdXJzZSwgYWxjb2hvbCB3YXMgY29tcGxldGVseSBvZmYgbGltaXRzLgpUaGUgcGFydGljaXBhbnRzIHdlcmUgZWxkZXJseSBjb21tdW5pdHkgZHdlbGxpbmcgQXVzdHJhbGlhbnMgYWdlZCBiZXR3ZWVuIDcwIGFuZCA5MCB5ZWFycyBvbGQgKGF2ZXJhZ2UgYWdlIDc4LCA1NCUgbWFsZSkgYW5kIGZyZWUgZnJvbSBkZW1lbnRpYS4gQXQgdGhlIHN0YXJ0IG9mIHRoZSBzdHVkeSA0MSUgaGFkIHByZSBkaWFiZXRlcyBhbmQgMTMlIGhhZCB0eXBlIDIgZGlhYmV0ZXMuCldpdGggdGhlc2UgcGxheWVycywgSSBmb3VuZCBJIG9ubHkgbmVlZGVkIHRvIHBsYXkgc3RyYWlnaHRmb3J3YXJkbHkgdG8gaGF2ZSB0aGVtIHRocm93IG1vbmV5IGF0IG1lLiAKVGhlIGRpc2N1c3Npb24gaXMgZ29vZCBiZWNhdXNlIGl0IGJyb3VnaHQgdXAgc29tZSBpc3N1ZXMgd2UgbmVlZCB0byBhZGRyZXNzIGJ1dCBnb2luZyBhcm91bmQgYW5kIHRyeWluZyB0byBnZXQgdGhlIGlkZW50aXR5IG9mIGV2ZXJ5IHVzZXIgd2hvIGRpc2FncmVlcyB3aXRoIHlvdSBhbmQgdHJ5aW5nIHRvIHJhbGx5IHBlb3BsZSB0byBsZWF2ZSB0aGUgc3ViIHNlZW1zIGF3ZnVsbHkgY2hpbGRpc2gvdHJvbGxpc2guIApUaGUgb25seSBldmVudCB3ZSBzZWVtIHRvIGFsbCBhZ3JlZSBvbiBpcyBwaWNraW5nIGl0ZW1zIHdlIGxpa2UuIEhvbmVzdGx5LCBJIGdldCBib3JlZCBpZiB0aGF0IGFsbCB3ZSBoYWQuIFdpdGggb3RoZXIgZXZlbnQgdHlwZXMgSSBnb3R0ZW4gcGllY2VzIEkgcmVhbGx5IGxpa2UgYnV0IG5ldmVyIHdvdWxkIGhhdmUgY2hvc2VuIG15c2VsZi4KQW5kIGl0IG5vdCBsaWtlIEkgYW0gZnVja2luZyBjcmF6eS4gClBvc3RpbmcgbXVsdGlwbGUgdGhyZWFkcyBhIGRheSBpbiBleGNlc3NpdmUgdXNlLiAKVGhleSB3ZXJlIGFtb25nIHN0dWRlbnRzIGF0IEFsbCBTYWludHMnIENvbGxlZ2Ugd2hvIHRoaXMgd2VlayB0aWNrZWQgb2ZmIHRoZSBNdXNpYyAxIGFuZCBNdXNpYyAyIHByYWN0aWNhbCB0ZXN0IGFzIGNvbXBsZXRlZC4gCkFpcmNyYWZ0IG1haW50ZW5hbmNlIGZpcm0gd291bGQgZG91YmxlIHN0YWZmIGlmIGl0IGNvdWxkIGZpbmQgdGFsZW50CldlIG9ubHkgZ2V0IGhlciB2ZXJ5IG9uZSBzaWRlZCBwZXJzcGVjdGl2ZS4gCklmIHlvdXIgYW5nbGUgY2hhbmdlcyB5b3UgZ2V0IGJhZCByZXN1bHRzLiAKUHJlc2lkZW50IERvbmFsZCBUcnVtcCB1cGVuZGVkIHRyYWRlIHBvbGljeTsgYW5kIENhbmFkYSBoZWF2aWx5IGluZGVidGVkIGhvdXNlaG9sZHMgZGVjaWRlZCB0byBmaW5hbGx5IHJldHJlYXQgYWZ0ZXIgeWVhcnMgb2YgdW5zdXN0YWluYWJsZSBzcGVuZGluZy4gCkkgdGhpbmsgRmFsbG91dCBpcyBpdCBvd24gd2VpcmQgdGhpbmcgYW5kIGhhcyBiZWVuIHNpbmNlIEJldGhlc2RhIGdvdCBpbnZvbHZlZC4gSXQgZ290IHRoaXMgd2VpcmQgbGluZWFnZSBvZiBkaWZmZXJlbnQgY29tcGFuaWVzIHdoaWNoIGxlYWRzIHRvIHNvbWUgbG91ZCBncm91cHMgb2YgcGVvcGxlIHNlZWluZyBhbnl0aGluZyBCZXRoZXNkYSBkb2VzIHdpdGggdGhlIElQIGFzIGlsbGVnaXRpbWF0ZS4gVGhhdCBoYXMgYmVlbiB0aGVyZSBmcm9tIEZhbGxvdXQgMyBhbmQgSSB0aGluayB3aWxsIGFsd2F5cyBiZSBhIHByb2JsZW0gZm9yIHRoZWlyIEZhbGxvdXQgZ2FtZXMuCkkgdGhpbmsgaXQga2luZCBvZiBmdW5ueSwgYnV0LCB0aGVyZSBubyBodW1vdXIgdG8gYmUgZm91bmQgb24gdGhpcyBzdWIgdGhlc2UgZGF5cy4gClRoZW4gdGhlIEd1YXJkaWFucyB3ZXJlIHNvbWUgb2YgdGhlIGJlc3QgcGFydHMgb2YgSW5maW5pdHkgV2FyLCBncmVhdCBjb21lZHkgbGluZXMgYW5kIGFjdGlvbiBzY2VuZXMgYW5kIHRoZXkgd2VyZSBpbnRlZ3JhbCB0byB0aGUgcGxvdCwgSSBsb3ZlZCB0aGVtIHRoZXJlLiAKVGhlIG1hc3NldXNlIHdvdWxkIHRoZW4gc3RhcnQgYXQgbXkgYW5rbGUgYW5kIGluIG9uZSBtb3Rpb24gbWFzc2FnZSB1cCB0byBteSBzaG91bGRlci4gCkFub3RoZXIgdGhpbmcsIEkgZmVlbCwgaXMgdGhhdCBtb3N0IG9ubGluZSBjb250ZW50IGlzIHNwZWNpZmljIHRvIG9ubGluZSAoYmVjYXVzZSB0aGF0J3Mgd2hhdCBtb3N0IHBlb3BsZSBwbGF5KSBvciBjcmF6eSBoaWdoIHJvbGxlciBhbmQgSUNNIHNpdHVhdGlvbnMgKGJlY2F1c2UgdGhhdCdzIHdoYXQgbW9zdCBwZW9wbGUgd2F0Y2gpLiBBIGdvb2QgZXhhbXBsZSBvZiAic3RyYXRlZ3kiIGlzIGNoYW5naW5nIGlkZWFzIG9uIGJldCBzaXppbmcgZm9yIHdpbm5pbmcgbW9yZSAuIEl0IG1pZ2h0IHdvcmsgbm93IGJ1dCBpdCBkaWRuIHVzZWQgdG8gYW5kIG1heSBub3QgaW4gdGhlIGZ1dHVyZS4KTXkgaHVzYmFuZCBpcyBzdWNoIGEgd29uZGVyZnVsIG1hbi4gSSBhbSBub3Qgc3VyZSBpZiBhbGwgNSBraWRzIGJlbGlldmUgSSBoYXZlIHRoaXMgY29uZGl0aW9uLiBXaHkgd291bGQgSSBmYWtlIG5vdCB3b3JraW5nLiAKVGhlcmUgYXJlIHR3byByZWxhdGl2ZWx5IHNlcmlvdXMgcGFydHMgb2YgdGhlIHJvdXRlOiBhIHNub3cgdHJhdmVyc2Ugb2YgYWJvdXQgMTVtIHRoYXQgbm90IGhhcmQsIGJ1dCBoYXMgZGlyZSBjb25zZXF1ZW5jZXMgYW5kIG5vIGNoYW5jZSBmb3Igc2VsZiBhcnJlc3QgaWYgeW91IGZhbGwgKHdlIGRpZG4gcm9wZSB1cCBmb3IgdGhpcykuIEEgNjAgZGVncmVlIGljZSBzbG9wZSB0aGF0IGdvZXMgb24gZm9yIDYwbSB0dXJuaW5nIGludG8gYSBzbm93IHNsb3BlIG9mIHRoZSBzYW1lIGdyYWRlLiBXZSBkaWQgYSBydW5uaW5nIGJlbGF5IGhlcmUgd2l0aCAyIGljZSBzY3Jld3MgYW5kIGEgc25vdyBwaWNrZXQuLiAKVGhlIGVmZm9ydHMgaW4gQ29uZ3Jlc3MgdG8gY3JlYXRlIG92ZXJzaWdodCBjb250aW51ZSBkZXNwaXRlIGh1bmRyZWRzIG9mIG1pbGxpb25zIG9mIGRvbGxhcnMgYnkgYm90aCB0aGUgYmFua2VycyBhbmQgdGhlIENoYW1iZXIgb2YgQ29tbWVyY2UgdG8gc3RvcCBpdC4gQWx0aG91Z2ggaXQgcG9zc2libGUgbm8gcmVhbCByZWZvcm0gd2lsbCBwYXNzLCBhdCBsZWFzdCB0aGVyZSBmaW5hbGx5IHRhbGsgb2YgcmVmb3JtLgpFciwgb2ssIGF0IGxlYXN0IGZpdmUgbWlub3IgcHJvdGFnb25pc3RzIChpbiBzaW5nbGUgbm92ZWwgbGVuZ3RoIHN0b3JpZXMgcmF0aGVyIHRoYW4gdHJpbG9naWVzKS4gCkhlciBoYWlyIHdhcyBub3QgaW50ZW50aW9uYWxseSBwdWxsZWQgYWNjb3JkaW5nIHRvIHNvbWUgdGVzdGltb255IGluIHRoZSByZXBvcnQuIEkgbm90IHNheWluZyB0aGUgdGVhY2hlciBuZWVkcyB0byBiZSBmaXJlZCwgb3IgdGhhdCB0aGlzIGNhc2UgbmVlZHMgdG8gZ28gYW55IGZ1cnRoZXIgdGhhbiBpdCBoYXMuIFNpbmNlIHRoZSB2aWRlbyBoYXNuIGJlZW4gcmVsZWFzZWQsIGFsbCB3ZSBoYXZlIHRvIGdvIG9uIGlzIHdpdG5lc3Mgc3RhdGVtZW50cyB3aGljaCBhcmUgbm90IGFsd2F5cyAxMDAlIGFjY3VyYXRlLiAKRGlzY292ZXJ5IENoYW5uZWwKSnVzdCBnb3QgYSBjYWxsIGZyb20gYSBjb25kbyBkZXZlbG9wZXIgaGVyZSBpbiBNb250cmVhbCB3aG8gd2FudHMgMTAwIHVuaXRzLiBEcmFnb24ncyBwb2ludCBvZiB2aWV3IHRoaW5rIHRoZSBwcm9kdWN0IGlzIGdyZWF0LiAKV2hlcmVhcyBpbiBjb250cmFzdCwgdGhlIGZpcnN0IGludGVycHJldGF0aW9uIGlzIG1vcmUgbGl0ZXJhbCBhcyBzaGUgbGVnaXRpbWF0ZWx5IGFza3MgdGhlIGJpcmRzLCAiSG93IGNhbiB5b3Ugc2luZyBhbmQgZmx5PyBXaHkgY2FuJ3QgST8iIFNoZSBnZXRzIG1vcmUgZnJ1c3RyYXRlZCBhcyB0aGUgcGllY2UgZ29lcyBvbiwgYmVnZ2luZyB0aGUgYmlyZCB0byB0ZWxsIGhlciBob3cgaXQgc2luZ3MsIGV2ZW4gYXNraW5nLCAiQXJlIHlvdSBzY3JlYW1pbmc/IiBhcyBpZiB0byBhdHRlbXB0IHRvIG1ha2Ugc29tZSBmdXJ0aGVyIGNvbm5lY3Rpb24gYmV0d2VlbiBoZXIgYW5kIHRoZSBiaXJkLiAKQ2hhbWJsaW4gd2FzIGEgZGVmZW5zaXZlIGNvIG9yZGluYXRvciBpbiAyMDExIHdpdGggdGhlIEhhbWlsdG9uIFRpZ2VyIENhdHMgYWZ0ZXIgc3BlbmRpbmcgdGhyZWUgc2Vhc29ucyBhcyBhIGRlZmVuc2l2ZSBiYWNrcyBjb2FjaCB3aXRoIHRoZSBDYWxnYXJ5IFN0YW1wZWRlcnMuIEhlIGFsc28gaGVsZCBkZWZlbnNpdmUgYmFja3MgY29hY2hpbmcgcG9zaXRpb25zIGluIFdpbm5pcGVnICgyMDA3KSBhbmQgd2l0aCBGcmFua2Z1cnQgb2YgTkZMIEV1cm9wZSAoMjAwNikuClNleHkgaXMgbm90IHRpZWQgdG8gb25lJ3MgYWdlLiBZb3UgY2FuIGJlIHNleHkgYXQgMjAsIDMwLCA0MCBhbmQgZXZlbiBhdCA3MCEgQXQgNDYsIGlmIHlvdSBkb24ndCBmZWVsIHNleHksIHRoZW4gYnJpbmcgdGhlIHNleHkgYmFjayEgSXQncyBuZXZlciB0b28gbGF0ZSB0byBmZWVsIHNleHkgYWdhaW4uCkkgcmVhbGx5IHdhbnQgb25lIHRoYXQgdXNlcyBkZWNrcyBvZiBwbGFpbiBjYXJkcyBhcyB3ZSBlbmQgdXAgbG9zaW5nIGJpdHMgb2YgZ2FtZSBwaWVjZXMgYWZ0ZXIgYSBmZXcgbW9udGhzLiAKTm93IGRpdmlkZSB0aGUgcHJvZml0ICgkOCw0MDApIGJ5IDEwMCB0aW1lcywgYW5kIHRoaXMgZmlndXJlICAgJDg0ICAgZXF1YWxzIHlvdXIgRVYuIApMdWNraWx5IG5vIGluanVyaWVzIGJ1dCB0aGF0IHdhcyBhIGNyYXp5IGRheS4uIApBayBtZXRlIHZ5aGFkYSBsb2thbGl0eSBzdGFyIFZzdGF2aXQsIGthcm5ldmFseSBhIGtvbmNlcnR5IG1pZXN0YWNoIGFsZWJvIHNuIHBvbGUsIGtkZSBzYSBrb25haiBhdWtjaWUsIGFzdG8gbmpkZXRlIHZlYSBtaW5jLCBrdG9yIGJvbGkgdnluZWNoYW4uIEFsbSBzcHNvYm9tLCBha28gbmpzIG1pZXN0bmUgaGlzdG9yaWNrIGluZm9ybWNpZSBqZSBuYWt1cG92YSBtaWVzdG5lIHN0YXJvaXRuIG9iY2hvZHkgcHJlIHN0YXIgb2JyYXp5IGFsZWJvIHBvaGFkbmljZS4gVmluYSBzdGFyY2ggcG9oYWRuYyBtYSBmb3RrdSB2em5hbW4gbG9jYWxlLCBha21pIHMgcGFya3ksIGthc25hLCBmZXN0aXZhbHksIHZ6bmFtbmNoIGJ1ZG92IGEgcGxlLCBrdG9yIG11IGlucGlyb3ZhIHZzIHpoYSB2IGluYWsgcHJlaGxpYWRvbCBtaWVzdGFjaC4gCkkgZG8gbm90IHRoaW5rIGFueW9uZSBpbiB0aGlzIGNvbW1lbnQgY2hhaW4gYmVsaWV2ZXMgdGhhdCBoZSBzaG91bGQgbm90IGJlIHB1bmlzaGVkLCB0aGUgc29uIGZ1Y2tlZCB1cCBhbmQgc2hvdWxkIGhhdmUgdG8gcGF5IGZvciB3aGF0IGhlIGRpZC4gSG93ZXZlciwgd2hhdCBtb3N0IHBlb3BsZSBhcmUgZGlzYWdyZWVpbmcgd2l0aCB5b3Ugb3ZlciB5b3UgYXNzZXJ0aW9uIHRoYXQgaGUgc2hvdWxkIGJlIHRocm93biBpbiBqYWlsIGJhc2VkIG9uIHRoZSBsaXR0bGUgaW5mb3JtYXRpb24gd2UgaGF2ZSBmcm9tIExBT1AgcGFyZW50LiAKSSBiZWVuIHRvIGEgZGVybWF0b2xvZ2lzdCBhbmQgdGhleSB0aG91Z2h0IGl0IHdhcyBwZXJpb3JhbCBkZXJtYXRpdGlzIGJ1dCBhdm9pZGluZyBTTFMgdG9vdGhwYXN0ZSBoYXNuIGRvbmUgYW55dGhpbmcuIApXaGVyZSBhcmUgeW91PyBJIG1heSBiZSBhYmxlIHRvIGhlbHAgeW91IHNlYXJjaCBpZiB5b3Ugd291bGQgbGlrZS4gR29vZCBsdWNrIGFuZCBrbm93IHlvdSBjYW4gYmVhdCB0aGlzIHNoaXQhIDcgcG9pbnRzICBzdWJtaXR0ZWQgNCBkYXlzIGFnbwpIZSBvd25zIDQwIHBlciBjZW50IG9mIHRoZSBjb21wYW55LCB3aGljaCBpcyBzYWlkIHRvIGJlIHdvcnRoIGFib3V0ID8uMiBiaWxsaW9uLgo0LiBJbXBhaXJlZCBjb250cm9sIG9mIHRoZXNlIG11c2NsZXMgaXMgbGlrZWx5IHRvIGNvbXByb21pc2Ugc3BpbmFsIGZ1bmN0aW9uLgpQb2xpdGljYWwgc2NpZW50aXN0IEphbWVzIFEuIFdpbHNvbiB3cm90ZSB0aGF0LCAiSW4gRGV0cm9pdCwgTWF5b3IgQ29sZW1hbiBZb3VuZyByZWplY3RlZCB0aGUgaW50ZWdyYXRpb25pc3QgZ29hbCBpbiBmYXZvciBvZiBhIGZsYW1ib3lhbnQsIGJsYWNrIHBvd2VyIHN0eWxlIHRoYXQgd29uIGhpbSBsb3lhbCBmb2xsb3dlcnMsIGJ1dCBoZSBsZWZ0IHRoZSBjaXR5IGEgZmlzY2FsIGFuZCBzb2NpYWwgd3JlY2suIgpTaGUgdGhlbiB6aXBwZWQgYXdheSBpbiBoZXIgZWxlY3RyaWMgd2hlZWwgY2hhaXIgd2l0aG91dCBzbyBtdWNoIGFzIGFuIGV4Y3VzZSBtZS4gClJlZHVwbGljYXRpb24gc2VlbXMgdG8gYmUgZmFpcmx5IHByZXZhbGVudCBpbiBIYXdhaWluIGFzIGEgd2F5IHRvIGZvcm0gbmV3IHdvcmRzLiBTaW1wbHkgcHV0LCByZWR1cGxpY2F0aW9uIGlzIHRoZSBwcm9jZXNzIG9mIHJlcGVhdGluZyBhIHdvcmQgdG8gY2hhbmdlIGl0cyBtZWFuaW5nLiBGb3IgZXhhbXBsZSwgaW4gRW5nbGlzaCwgd2UgbWlnaHQgc2F5IHRoYXQgYSBkb2cgaXMgInN1cGVyIHN1cGVyIGN1dGUsIiByZWR1cGxpY2F0aW5nIHN1cGVyIHRvIGVtcGhhc2l6ZSB0aGUgd29yZC4gSW4gSGF3YWlpbiwgdGhleSBhcHBlYXIgdG8gdXNlIHJlZHVwbGljYXRpb24gdG8gY3JlYXRlIG5ldyB3b3Jkcy4gRm9yIGV4YW1wbGUsIFdpa2lwZWRpYSBub3RlcyB0aGF0IHRoZSB3b3JkIHdoaWNoIG1lYW5zICJ0byBzd2ltLCIgc3Bhd25lZCwgdGhyb3VnaCByZWR1cGxpY2F0aW9uLCB0aGUgd29yZCB3aGljaCBtZWFucyAidG8gYmF0aGUuIgpXZSBoYXZlIG90aGVyIHN3aW5nZXJzIHdobyBhcmUgZHlpbmcgdG8gbWVldCB5b3UuIApJdHMgdHlwaWNhbGx5IG15IHJpZ2h0IGxlZyAodGhlIHN1cmdlcnkgc2lkZSkga2lja2luZyBteSBsZWZ0LCBzbyBJIGd1ZXNzIG15IHJpZ2h0IGxlZyBpc24gcnVubmluZyBzdHJhaWdodD8gSSBkaWQgdGhpcyBwcmlvciB0byBteSBzdXJnZXJ5IHRvbywgYnV0IEkgZG9uIHJlYWxseSBrbm93IGlmIGl0IGNvbm5lY3RlZCwgSSBuZXZlciBwYWlkIGVub3VnaCBhdHRlbnRpb24gdG8gdGhlIHByb2JsZW0gdG8gcmVtZW1iZXIgdGltZWxpbmVzLi4gCkNlcnRhaW4gcGllY2VzIGNhbiBiZSBibG9ja2VkIGZyb20gbW92aW5nLiAKKEkgZGlkbiB0YWtlIGFueSBwaWN0dXJlcyB3aGlsZSBJIGRpZCB0aGlzLCBvb3BzISkKQWZ0ZXIgdGhlIHNwZWxsIGlzIGNhc3QsIHRoZSBmaXJlIGRhc2hlcyBpbnRvIHRoZSBnZW0sIG9wZW5pbmcgYSBzbWFsbCBwb3J0YWwgZHJhd2luZyBlbmVyZ3kgb2YgdGhlIEZleXdpbGQgYW5kIHRyYW5zZm9ybWluZyBpdCBpbnRvIGEgc21hbGwgZmV5IHNlcnZhbnQsIHRoYXQgaXMgYm91bmQgdG8gdGhlIGNhc3RlciBhbmQgd2lsbCBmb2xsb3cgdGhlIGNhc3RlciBjb21tYW5kcy4gVGhlIEZleSBTZXJ2YW50IGhpdCBwb2ludHMgYXJlIGVxdWFsIHRvIHRoZSBoaXQgcG9pbnRzIHNhY3JpZmljZWQgYnkgdGhlIGNhc3RlciBhbmQgdGhlIGNhc3RlciBtYXhpbXVtIGhpdCBwb2ludHMgYXJlIHJlZHVjZWQgYnkgdGhlIGFtb3VudCBjaG9zZW4uLiAKV0UgQVJFIFRIRSBERVNUUk9ZRVJTLiAKT3RoZXIgc3R1ZGVudHMgYW5kIGZhY3VsdHkgdGhhdCBoYXZlIG9ubHkgaGFkIGJyaWVmIGludGVyYWN0aW9ucyB3aXRoIEFtZXJpY2Egd2lsbCBlaXRoZXIgdGhpbmsgQW1lcmljYSBpcyB0aGUgc3RlcmVvdHlwaWNhbCBkdW1iIGpvY2sgYnVsbHkgYmVjYXVzZSBpdCBwdW5jaGVkIHRoZW0gaW4gdGhlIGZhY2Ugb3IgcHV0IHRhY2tzIG9uIHRoZWlyIGNoYWlyIG9uY2UsIHdoaWxlIG90aGVycyBkb24ndCBrbm93IHdoYXQgdGhlIGZ1c3MgaXMgYWJvdXQuLiAKVGhlcmUgbWF5YmUgbm90aGluZyBtb3JlIEkgaGF0ZSBpbiB0aGlzIHdvcmxkIHRoYW4gc2V4dWFsIGNyaW1lcyBhZ2FpbnN0IGNoaWxkcmVuLiAKRGVzcGl0ZSB0aGUgcG9zaXRpdmUgYW5kIHN1bnNoaW55IGZvcmVjYXN0IGZvciB0aGUgZnV0dXJlIG9mIGtvbWJ1Y2hhLCBzb21lIHdlbGwgcmVzcGVjdGVkIGVudGl0aWVzIGNvbnRpbnVlIHRvIHVyZ2UgY2F1dGlvbi4gCkkgY2FuIGxpZSB0byBteXNlbGYgZWl0aGVyLCBjaGlsZHJlbiBhcmVuIHRoZSBvbmx5IHRoaW5nIHRoYXQgSSBjb25jZXJuZWQgYWJvdXQuIEkgaGF2ZSBoYWQgYSBtYWpvciByb2xlIGluIHRoZSBoYXJkIHBhcnQgb2YgaGlzIHN1Y2Nlc3MgYW5kIG91ciBsaWZlc3R5bGUgYW5kIEkgd2FudCB0byBiZSB3aXRoIGhpbSBmb3IgdGhlIGZ1biBwYXJ0Lkkgd291bGQgYWxzbyBiZSBjb25jZXJuZWQgYWJvdXQgdGhlIHdheSBoZSBzcGVuZGluZyBtb25leSwgYnV0IHRoYXQgYmVzaWRlcyB0aGUgcG9pbnQuIEkgZG9uIGtub3cgdGhlIG1hZ25pdHVkZSBvZiB3aGljaCB0aGF0IGhlICJoaXQgaXQgYmlnIiBidXQgSSBzZWVuIG1hbnkgcGVvcGxlIGluIG15IGxpbmUgb2Ygd29yayB3aXRoIGZhaWxlZCBzdGFydCB1cHMgYW5kIGZpbmFuY2lhbCBwcm9ibGVtcyBmcm9tIHBvb3Igc3BlbmRpbmcgY2hvaWNlcy5UaGUgbGFkZGVyIHRvIHN1Y2Nlc3MgaXMgdW5mb3J0dW5hdGVseSBsb25lbHkuIApMZXQgc2F5IGFzIGEgY29uY2VybmVkIGNpdGl6ZW4sIEkgd2FudCB0byByZWFkIHRoZSBzcGVjaWFsIHByb3NlY3V0b3IgcmVwb3J0IG9uIHRoZSBLYXZhbmF1Z2ggYW5kIEJsYXNleSBGb3JkIHRlc3RpbW9uaWVzLiAKIlRoZSBHcmFuZCIgaXMgdGhlIGxhdGVzdCBtb2NrdW1lbnRhcnkgdG8gaGl0IHRoZWF0ZXJzLCBhbmQgbm90IG9ubHkgaXMgaXQgYXQgdGltZXMgdmVyeSBmdW5ueSwgYnV0IGl0IGRvZXMgc29tZXRoaW5nIHRoYXQgbW9zdCBtb2NrdW1lbnRhcmllcyBkb24ndDogSXQgZ2l2ZXMgdXMgYSByZWFsIHNlbnNlIG9mIGh1bWFuaXR5LiAiVGhlIEdyYW5kIiBmb2xsb3dzIGEgdmFyaWV0eSBvZiBjb2xvcmZ1bCBjaGFyYWN0ZXJzLCBhbGwgY29udGVzdGFudHMgaW4gYSAkMTAgbWlsbGlvbiBwb2tlciB0b3VybmFtZW50LiAKVGhyZWUgZGVjYWRlcyBvZiB0YXggZ2l2ZWF3YXlzIHRvIHRoZSByaWNoZXN0IEFtZXJpY2FucyBhbmQgdGhlIGRlc3RydWN0aW9uIG9mIHRoZSBzb2NpYWwgc2FmZXR5IG5ldCBtZWFudCA4MCUgb2YgdXMgd2VyZSB3b3JzZSBvZmYgdGhhbiBpbiAxOTgwLiAKTWF0dHl0aGVkb2cgVGhhbmsgeW91IGZvciBzdWJtaXR0aW5nIHRvIC9yL3RpZnUsIC91L2Jva3Rvcm4uIFlvdXIgc3VibWlzc2lvbiwgVElGVSBieSBub3QgcmVtaW5kaW5nIG15IGJmIHRvIHdhc2ggaGlzIGhhbmRzIChzbGlnaHRseSBuc2Z3KSwgaGFzIGJlZW4gcmVtb3ZlZCBiZWNhdXNlIGl0IHZpb2xhdGVzIG91ciBydWxlcywgd2hpY2ggYXJlIGxvY2F0ZWQgaW4gdGhlIHNpZGViYXIuCkFmdGVyIDI0IHdlZWtzLCBhIHdvbWFuIGNhbiBjaG9vc2UgdG8gaGF2ZSBhbiBhYm9ydGlvbiBiZWNhdXNlIHRoZSBmZXR1cyBpcyB2aWFibGUuIFRoYXQgdGhlIDZ0aCBtb250aCBvZiBwcmVnbmFuY3kuCklmIHlvdSBhcmUgYSB1c2VyIGluIHRoZSBFdXJvcGVhbiBFY29ub21pYyBBcmVhICgiRUVBIikgb3IgU3dpdHplcmxhbmQsIHBsZWFzZSBzZWUgdGhlVXNlcnMgaW4gdGhlIEVFQSBhbmQgU3dpdHplcmxhbmQgc2VjdGlvbiBvZiB0aGlzIFByaXZhY3kgUG9saWN5IGZvciBhZGRpdGlvbmFsIHByb3Zpc2lvbnMgdGhhdCBhcmUgYXBwbGljYWJsZSB0byB5b3VyIHVzZSBvZiB0aGUgU2VydmljZXMuCklmIHlvdSB3YW50IHRvIGdldCBHV0FNTSgzMCBtYXggdGl0bGVzKSBpdCBjb3N0cyBodW5kcmVkcyBvZiBob3VycyBvZiB0aW1lIGFuZCBhbG90IG9mIGdvbGQgZXNwZWNpYWxseSBpZiB5b3UgZG9uIGtub3cgYW55b25lIGFuZCBzdGFydGluZyBmcm9tIHNjcmF0Y2guIElmIHlvdSB3YW50IENoYW1waW9uIG9mIHRoZSBHb2RzICg1MC81MCBIYWxsIG9mIE1vbnVtZW50cykgaXRzIGV2ZW4gbG9uZ2VyIGJ1dCBzb21lIHN0dWZmIGZyb20gR1dBTU0gY2FycmllcyBvdmVyLiAKSWYgeW91IGdvdCBhIE1haGFyYXNodHJhIGdpcmxzIG1vYmlsZSBudW1iZXIgZm9yIGZyaWVuZHNoaXAgb3IgbG92ZSwgbXVzaWMgaXMgdGhlIHdheSB0byB1bmxvY2sgdGhlIGxpbWJpYyBhcmVhcyBvZiBoZXIgYnJhaW4gY29ubmVjdGVkIHRvIGRlZXBlciBmZWVsaW5ncyBhdCBhIHN1YmNvbnNjaW91cyBsZXZlbC4uIApBbmQgaXQgd2FzIGNvbmZpcm1lZCBvbiBXZWRuZXNkYXkgdGhhdCBoZWRnZSBmdW5kIENpdGFkZWwncyBmb3VuZGVyIEtlbiBHcmlmZmluIHBhaWQgbW9yZSB0aGFuICQyMzggbWlsbGlvbiBmb3IgYSAyNCwwMDAgc3F1YXJlIGZvb3QgYXBhcnRtZW50IHRoZXJlLiBGb3IgdGhhdCBraW5kIG9mIGNhc2gsIGFjY29yZGluZyB0byB0aGUgV2FsbCBTdHJlZXQgSm91cm5hbCwgcmVzaWRlbnRzIHdpbGwgZ2V0IGEgcHJpdmF0ZSBkaW5pbmcgcm9vbSwgYSBneW0sIGEganVpY2UgYmFyLCBhIGxpYnJhcnksIGEgYmFza2V0YmFsbCBjb3VydCwgYSBnb2xmIHNpbXVsYXRvciBhbmQgYSBjaGlsZHJlbidzIHBsYXkgYXJlYS4uIApCdXQgc3RpbGwgaWRlYWwgc3RhcnRlciBhbmQgc2hvcnQgY29tbXV0ZXIgYmlrZSB3aG8gb2NjYXNpb25hbGx5IGRvZXMgbG9uZ2VyIGpvdXJuZXlzIGFuZCBoYXMgZmV3IG1haW50ZW5hbmNlIHNraWxscy4uIApJbiB0aGlzIHNjZW5hcmlvLCBpdCBub3QgZXZlbiBhIHF1ZXN0aW9uIG9mIHdoZXRoZXIgTmV2ZXIzZm9yZ2V0IHNob3VsZCBhcHBseSBmb3IgYW4gZW1wbG95bWVudCB2aXNhLCBsaWtlIGEgZ3JlZW4gY2FyZCAgIGhlIHNpbXBseSBjYW5ub3QuIApQYXJhbGVnYWwgU2FsYXJpZXNBIGxpdGlnYXRpb24gcGFyYWxlZ2FsIG9mdGVuIHdvcmtzIGluIGxhdyBmaXJtIGJ1dCBjYW4gYWxzbyB3b3JrIGZvciBidXNpbmVzc2VzLCBnb3Zlcm5tZW50IG9yZ2FuaXphdGlvbnMgb3IgYW55IG90aGVyIGNvbXBhbnkgdGhhdCBlbmdhZ2VzIGluIGxpdGlnYXRpb24uIFRoZSBCdXJlYXUgb2YgTGFib3IgU3RhdGlzdGljcyByZXBvcnRzIHRoYXQgcGFyYWxlZ2FscyBoYWQgYW4gYXZlcmFnZSBzYWxhcnkgb2YgJDQ2LDczMCBwZXIgeWVhciBpbiAyMDExLiBUaGVyZSB3ZXJlIGFib3V0IDI1NiwwMDAgb2YgdGhlc2Ugd29ya2VycywgYW5kIHRoZSBwb3NpdGlvbiBpcyBleHBlY3RlZCB0byBncm93IGJ5IDE4IHBlcmNlbnQgYmV0d2VlbiAyMDEwIGFuZCAyMDIwLCB3aGljaCBpcyBhYm91dCBhdmVyYWdlLgpUaGV5IGFsbCBsb29rIG5pY2UgaW4gcGhvdG9zIGFuZCBmcm9tIHRoZSBvdXRzaWRlIGJ1dCBhcmUgYmFzaWNhbGx5IGxpa2UgYSBwcmlzb24gaW5zaWRlIHdpdGggdGhlIHJvb20gdGhleSBhbGxvY2F0ZSB5b3UuSSByZWNvbW1lbmQgZmxhdG1hdGVzIG9yIHNvbWV0aGluZyBzaW1pbGFyIHRvIGZpbmRpbmcgYSByb29tIHdpdGggYSBtaXggb2YgbG9jYWxzIGFuZCB2aXNpdG9ycy4gCkFsc28sIGEgbG90IG9mIGNoaXJvcHJhY3RvcnMgYXJlIGludG8gd29vLiAKVGFrZXMgdGhlIHNhdGlzZmFjdGlvbiBvZiBsYW5kaW5nIGEgcHVuY2ggYXdheSBmcm9tIGhpcyBhZHZlcnNhcmllcy4gVGhleSBmZWVsIGxpa2UgdGhleSBhcmUgd29ya2luZyBpbiB2YWluLkhpcyBvZmZlbnNlLCBzbyBkZWNlcHRpdmUgLCBrZWVwcyBndXlzIGF3YXkgZnJvbSBoaW0sIHByb3RlY3RpbmcgaGltLiBFdmVyeSB0aW1lIHRoZXkgZ2V0IGhpdCBieSBpbnZpc2libGUgc3RyaWtlcywgdGhleSBhcmUgbGVzcyBpbmNsaW5lZCB0byBjb21lIGZvcndhcmQuIApVbmZpbmlzaGVkIGJ1c2luZXNzIHJlbWFpbnMgZm9yIEFiYmV5IEdseW5uCk1hbXkgcGFza2kgdyBUVlAsIG1hbXkgUGF3b3dpY3osIG1hbXkgS2Fjenlza2llZ28ga3J6eWN6Y2VnbyAiemFiaWxpY2llIG1pIGJyYXRhIiwgbWFteSB3eXN0cGllbmlhIE1pZGxhcmEsIG1hbXkgaGFzYSBuYSBtYXJzenUgbmllcG9kbGVnb2NpLCBtYW15IE9OUiwgbWFteSAiYWt0eSB6Z29udSIgTW9kemlleSBXc3plY2hwb2xza2llai4gQWxlIG5pZSEgUG8gY28gd3ljaWdhIG9kcG93aWVkemlhbG5vISBKZWRub2N6bXkgc2kgcG9uYWQgcG9kemlhYW1pISBXc3p5c3RraWUgc3Ryb255IHMgdGFrIHNhbW8gd2lubmUsIGNvIHogdGVnbywgZSBQTyBjbyBuYWp3eWVqIHdyenVjaW8gamFraWVnbyBwb3N0YSBuYSBGQiBjenkgb2Rwb3dpZWR6aWFvICJ0byBuaWUgcHJhd2RhIiwgYSB0YWtpZSBSYXplbSB0eWxrbyBzaWVkemkgaSByb2JpIG1lbXkuIApUaGUgSGlja3Mgd2VyZSBkaXN0cmF1Z2h0LCBhc3N1bWluZyB0aGF0IGJlY2F1c2UgSG93aWUgd2FzIGFuIGluZG9vciBjYXQsIGhlIHdvdWxkbid0IGhhdmUgdGhlIHN1cnZpdmFsIHNraWxscyB0byBtYWtlIGl0IG9uIGhpcyBvd24uIApTdWdhciBhbmQgT2F0cyBGb290IFNjcnViLiAKRnVsbCBTdG9yeS4gCkkgbG92ZSB0aGF0IHRoZSBwZW9wbGUgd2hvIGxpdmUgaW4gUHlvbmd5YW5nIHRha2UgY2FyZSBvZiB0aGVpciBjaXR5LCBjb25jZXJuIHRoZW1zZWx2ZXMgd2l0aCBiZWF1dGlmeWluZyBpdCBhbmQgd291bGRuIGRyZWFtIG9mIHRocm93aW5nIHRyYXNoIG9uIHRoZSBncm91bmQuIEkgaG9wZSBpdCBub3Qgb25seSBiZWNhdXNlIHRoZXkgZG9uIGRhcmUuIEkgaG9wZSB5b3UgcmlnaHQgYW5kIHRoZXkgZG9uIHRlYXIgdGhlIGNpdHkgZG93bi4gCkhlIGV2ZW4gYm9hc3RzIHRoYXQgaGUgd2VhcnMgInZlZ2FuIiBjbG90aGVzLiAKUmVhbCBoYXJkd2FyZSBoYXMgYSB0b3RhbCBvcGVuIGxvb3AgZGVsYXkgb2YgMSAxLjUgY29udHJvbCBwZXJpb2RzIGJldHdlZW4gdGhlIHBsYW50IChQV00gcmVnaXN0ZXIgc2V0dGluZ3MgdGFraW5nIGVmZmVjdCkgYW5kIHRoZSBmZWVkYmFjayBwYXRoIChBREMgc2FtcGxpbmcgbGF0ZW5jeSwgb3ZlcnNhbXBsaW5nLCBldGMpIGRlcGVuZGluZyBvbiB5b3VyIHNldHVwLgpUaGF0IG9waW5pb24gd2FzIHNoYXJlZCBieSBHZW9yZ2UgS29raW5pcywgdGhlIEJhbHRpbW9yZSBkaXJlY3RvciBvZiBwbGF5ZXIgcGVyc29ubmVsLCBhY2NvcmRpbmcgdG8gYSBmaWZ0aCBzb3VyY2Ugb3V0c2lkZSB0aGUgb3JnYW5pemF0aW9uIGJ1dCBmYW1pbGlhciB3aXRoIHRoZSB0ZWFtIHRoaW5raW5nLkJ1dCBIYXJiYXVnaCByZWNvbW1lbmRhdGlvbiB0byBjdXQgdGhlIHNpeCB5ZWFyIHZldGVyYW4gcnVubmluZyBiYWNrIHdhcyBxdWlja2x5IHJlamVjdGVkIGJ5IFJhdmVucyBtYW5hZ2VtZW50OiBvd25lciBCaXNjaW90dGksIHRlYW0gcHJlc2lkZW50IENhc3MgYW5kIEdNIE5ld3NvbWUuIiA2IHBvaW50cyAgc3VibWl0dGVkIDQgeWVhcnMgYWdvSSBiZWVuIHVzaW5nIG9uZW5vdGUgd2l0aCBhIHN1cmZhY2UgcHJvIDMgdG8gYW5ub3RhdGUgcGRmcyB3aXRoIHRoZSBzdHlsdXMuIApUaGUgbWlsaXRhcnkgZm9yY2VzIG9mIEV1cm9wZSBhbmQgdGhlIFVTIGFyZSBjb21wYXJhYmxlIHRob3VnaCBmb3IgdGhlaXIgbWlzc2lvbnMuIEV1cm9wZWFuIGZvcmNlcyBhcmUgbWFpbmx5IGZvciBkZWZlbmNlIG9mIHRoZSBjb250aW5lbnQsIG5vdCBkZWZlbmNlIG9mIGFsbGllcyBhcm91bmQgdGhlIHdvcmxkLiAKQXNzZXNzaW5nIHJlc2lkdWFsIHJlYXNvbmluZyBhYmlsaXR5IGluIG92ZXJ0bHkgbm9uIGNvbW11bmljYXRpdmUgcGF0aWVudHMgdXNpbmcgZk1SSS4gClZpYyBBbnRob255J3MgU3RlYWtob3VzZSAgIFdpdGggaXRzIEhvdXN0b24gbG9jYXRpb24gYmVpbmcgdm90ZWQgb25lIG9mIHRoZSBUb3AgVGVuIFN0ZWFraG91c2VzIGluIEFtZXJpY2EsIFZpYyBBbnRob255IFN0ZWFraG91c2UgQXQgR29sZGVuIE51Z2dldCBBdGxhbnRpYyBDaXR5IGZlYXR1cmVzIGEgYmxlbmQgb2YgaGlnaCBxdWFsaXR5IG1lbnUgc2VsZWN0aW9ucyBhbmQgb25lIG9mIGEga2luZCBob3NwaXRhbGl0eSBpbiBhbiBpbnRpbWF0ZSBhdG1vc3BoZXJlIG9mIGhhbmQgY3JhZnRlZCBtYWhvZ2FueSB3b29kd29yaywgcGx1c2ggbGVhdGhlciBmdXJuaXNoaW5ncyBhbmQgbHV4dXJpb3VzIGFtZW5pdGllcy4KVG1mZmF3ICAxIHBvaW50ICBzdWJtaXR0ZWQgMTMgZGF5cyBhZ28KTm8gd2F5IHdvdWxkIHRoZXNlIERlbW9jcmF0IHBvbGl0aWNpYW5zIGdpdmUgdXAgdGhlaXIgcmFjaXNtLgpXaGV0aGVyIGl0J3Mgc29jY2VyIG9uZSBkYXkgb3IgZmllbGQgaG9ja2V5IHRoZSBuZXh0LCB3aXRoIEtyeWxvbiBJbmR1c3RyaWFsIExpbmUgVXAgUmVtb3ZhYmxlIFN5bnRoZXRpYyBUdXJmIFBhaW50IFJlbW92ZXIsIHN0cmlwaW5nIHN5bnRoZXRpYyB0dXJmIGZpZWxkcyBiZWNvbWVzIGVhc2llci4KQXJlIHRoZSBtaXNzaW5nIHN0aXRjaGVzIHJpZ2h0IGluIHRoZSBtaWRkbGUgb2YgdGhlIGJhZz8gVGhlaXIgcXVpbHRzIGFyZSBidWlsdCAob3IgdXNlZCB0byBiZSBidWlsdCwgYW55d2F5KSB0byBhbGxvdyB5b3UgdG8gdHJhbnNmZXIgZG93biBmaWxsIGJldHdlZW4gdGhlIGxhcmdlIGJhZmZsZSBjaGFtYmVycy4gSSBhbHdheXMgZm91bmQgaXQgYW5ub3lpbmcgYW5kIGRpZmZpY3VsdCB0byBkbyBpbiByZWFsaXR5LCBidXQgSSBiZWxpZXZlIHRoYXQncyB3aGF0IHRob3NlIG9wZW5pbmdzIGFyZSBmb3IuIE1pbmUgaGFkIGl0IHRvby4KSSBkaWQgcGxheSBhIGJpdCBidXQgbm90IG5vdy4gCkt1cm95dW1lX2NsTWFuZ28gQmlrZXMgUG9pbnQgUiBUaWFncmEKUmVmcmlnZXJhdGUgdW50aWwgc2V0LCBhYm91dCAzMCBtaW51dGVzLiAKVGhlcmUgYXJlIGFsc28gYmVoaW5kIHRoZSBzY2VuZXMgdG91cnMgb2YgdGhlIGdhbGxleSBhbmQgYnJpZGdlLCBhcyB3ZWxsIGFzIG51bWVyb3VzIHR1dG9yaWFscyB3aGVyZSB0aGUgcHJvZmVzc2lvbmFscyBzaG93IHlvdSBob3cgdG8gcGxheSBwb2tlciwgbGVhcm4gdG8gZGFuY2Ugb3IgZXZlbiBmb2xkIGEgbmFwa2luIGZvciB5b3VyIGRpbm5lciBwYXJ0eS4gVGhlIGNob2ljZSBpcyBlbmRsZXNzLiAKUGFjcXVpYW8gZGlkbid0IGNvbWUgY2xvc2UgdG8gc3RvcHBpbmcgaGltIGFmdGVyIHRoYXQsIGJ1dCBsYW5kZWQgZW5vdWdoIHB1bmNoZXMgdG8gdGhlIGhlYWQgdGhhdCBNb3NsZXkncyByaWdodCBleWUgd2FzIG5lYXJseSBzd29sbGVuIHNodXQgaW4gdGhlIGxhdGUgcm91bmRzIGFuZCB0aGUgbGVmdCBzaWRlIG9mIGhpcyBmYWNlIHdhcyBwdWZmeSwgdG9vLi4gCkluIG91ciBkZWZlbnNlLCBsb2wsIGFuZCBleHByZXNzaW5nIG15IGZydXN0cmF0aW9uIHdpdGggdGhlIGhvc3BpdGFsIHN0YWZmICh0aGlzIGhvc3BpdGFsIGhhcyBhIFRFUlJJQkxFIHJlcHV0YXRpb24gdG8gYmVnaW4gd2l0aCksIHdoaWxlIHdlIHdlcmUgaW4gdGhlIHJvb20sIGRpc2N1c3NpbmcgaXQgYW5kIGV4cHJlc3Npbmcgb3VyIGRpc3RyZXNzZXMsIHRoZSBudXJzZSBpbiB0aGUgcm9vbSBtYWRlIG5vIGF0dGVtcHQgdG8gY29ycmVjdCB1cyBpbiBhbnkgd2F5LiAKSSBkbyBuZWVkIGEgY2VydGFpbiBlbGVtZW50IG9mIHBoeXNpY2FsIGZpdG5lc3MgdG8gc2l0IGF0IGEgdGFibGUgYW5kIGJlIG1lbnRhbGx5IHN0cm9uZyBmb3IgMTYgaG91cnMuIApXaW50aGVyLCBXaGl0ZXdhdGVyIFN0YXRlIENibGxlZ2U7IFdlZG5lc2RheSwgIkludmVzdGluZyBpbiBHb29kIFNjaG9vbHMsIiBHbGVuIENhbXBiZWxsLCBsYXd5ZXI7IFRodXJzZGF5LCAiRWZmZWN0aXZlIENpdGl6ZW5zaGlwLCIgSnVkZ2UgUmFscGggR3VubjsgRnJpZGF5LCAiVGVhY2hpbmcgdGhlIEZ1bmRhbWVudGFscyBUb2RheSwiIERyLiAKVGhlIGRtIGFuZCBwbGF5ZXJzIGNoZWNraW5nIHRoZWlyIHBob25lcyBhbmQgdHdpdGNoIGNoYXQsIG9yIGhhdmluZyBjcm9zcyB0YWJsZSBjb252ZXJzYXRpb25zIG1hZGUgdGhpbmdzIGRyYWcgZHVyaW5nIHRoZSBjb21iYXQuIApXaXRoIHRoZSBzdHJldGNoIG9uIHRoZSByaWdodCwga2VlcCB5b3VyIGJhY2sgc3RyYWlnaHQgYW5kIGxlYW4gZm9yd2FyZC4uIApIZSBnb2VzIHRvIHRoZSBsaWJyYXJ5LCBhdHRlbXB0cyB0byByZWFkIFByb3VzdCwgYnV0IGZhbGxzIGFzbGVlcCBpbnN0ZWFkIGFuZCByZWNlaXZlcyBhIHRhbmxpbmUgaW4gdGhlIHNoYXBlIG9mIGhpcyBib29rLiAKRW4gZGFhcm5hYXN0IGJlbGVnIGlrIG5hdHV1cmxpamsgdmVlbCBidWl0ZW4gZGUgcGVuc2lvZW5vcHRpZXMuSWsgaGViIG1pam4gcGVuc2lvZW4gaW4gdHdlZSBmYXNlcyBiZWRhY2h0OiBmYXNlIDIgaXMgbiBkZSBvZmZpY2lsZSBwZW5zaW9lbmxlZWZ0aWpkLCA3MCsgb2Ygem8uIAoyIHBvaW50cyAgc3VibWl0dGVkIDI2IGRheXMgYWdvCldoZW4gaGUgY2hlY2sgcmFpc2VzIHRvIHRoYXQgc2l6aW5nIGhlIHByb2JhYmx5IGRvZXMgbm90IGhhdmUgYSB2ZXJ5IG1lcmdlZCByYW5nZS4gU28sIGJ5IGZpcmluZyBhIHBvdCBzaXplZCBiZXQgb24gdGhlIHR1cm4gaGUgaXMgcmVwcmVzZW50aW5nIHRoZSBudXRzIGFuZCBzb21lIHBlcmNlbnRhZ2Ugb2Ygc2V0cy4gCldvcmQgMjAxMzsgRXhjZWwgMjAxMzsgUG93ZXJQb2ludCAyMDEzOyBPdXRsb29rIDIwMTM7IEFjY2VzcyAyMDEzOyBPbmVOb3RlIDIwMTMgLiAKWW91ciBoaXN0b3J5IHJlYWRzIGxpa2UgdGhhdCBvZiBhIGJ1c3RvIDI1IHllYXIgb2xkIHdobyBoYWQgYmVlbiBpbiB2ZWdhcyBmb3IgMiB5ZWFycyB3b3JraW5nIHNoaXR0eSBzYWxlcyBqb2JzLiBOb3QgcGxheSBoaWdoZXIgdGhlbiAxLzIgaXNoIE5MIG9ubGluZSAod2hpY2ggeW91IGRlc2NyaWJlZCBhcyBzaG90IHRha2luZyA3IG1vbnRocyBhZ28pIGFuZCBsaXZlLiBZb3UgZ290IGEgZHJlYW0sIGJ1dCBzZWVtaW5nbHkgbm90IHRoZSBzbWFydHMgdG8gcmVhY2ggaXQgYW5kIGl0IHBhaW5mdWwgdG8gYWRtaXQgdG8geW91cnNlbGYgdGhhdC4KQW0gSSB0aGUgb25seSBvbmUgd2hvIHRoaW5rcyBpdCBjcmF6eSBoZXIgd2hvbGUgSW5zdGFncmFtIGFjY291bnQgaXMganVzdCBoZXIgc2VsbGluZyBzdHVmZj8gVGhlcmUgbm90IGEgc2luZ2xlIHBvc3QgYWJvdXQgaGVyIGxpZmUgd2hlcmUgc2hlIG5vdCBwdXNoaW5nIHNvbWUgY3JhcHB5IHB1cnNlcyBvciBkaWFycmhlYSB0ZWEuIEFuZCBJIGtub3cgc2hlIHByb2JhYmx5IGRvZXNuIHB1dCBwZXJzb25hbCBzdHVmZiBvbiB0aGVyZSBiZWNhdXNlIHBlb3BsZSBoYXRlIGhlciBidXQgc2hlIGNvdWxkbiBhbHdheXMgbWFrZSBoZXIgYWNjb3VudCBwcml2YXRlLiBUaGUgc2Vhc29uIGlzIG92ZXIuIApUaGUgY3J1ZWx0eSBpbXB1bHNlIGNvbWVzIGZyb20gbm90IGhhdmluZyBiZWVuIGhpdCBiYWNrIHdpdGggYW55dGhpbmcsIGFuZCB0aGV5IGxpa2Uga2l0dGVucyB3aG8gZG9uIHVuZGVyc3RhbmQgdGhlIHBvd2VyIG9mIHRoZWlyIGJpdGUgdW50aWwgdGhleSBnZXQgYml0dGVuIGJ5IG90aGVyIGNhdHMuIEl0IGFsc28gY29tZXMgZnJvbSBhIHBsYWNlIG9mIGNvbnRlbXB0LCB0aGVyZSBzb21ldGhpbmcgYWJvdXQgYmVpbmcgYSB3aG9sZXNvbWUgYmYgdGhleSBkZXNwaXNlLiBTb21lIGdpcmxzIHNlZSBzaG93aW5nIGFmZmVjdGlvbiBhcyBhIHdlYWtuZXNzLiBUaGV5IHBheSBhIGxvdCBvZiBhdHRlbnRpb24gYXQgdGhlc2UgdHJhbnNhY3Rpb25zIG9mIGFmZmVjdGlvbi4gU3BlYWtpbmcgb2Yga2l0dGVucyBhbmQgd2Vha25lc3MsIGdpcmxzIHdpbGwgb3V0cmlnaHQgY2hhbGxlbmdlIHlvdXIgbWFuaG9vZCBhbmQgc2F5IGl0IG9mZnB1dGluZyBhbmQgbm90IG1hc2N1bGluZSBpZiBhIGd1eSBsb3ZlcyBoaXMgY2F0LiBUaGlzIGlzIGhvdyBkZWZlY3RpdmUgdGhleSBhcmUgYW5kIG9ic3Nlc3NlZCBieSB3ZWFrbmVzcy4KVHdvIHlvdW5nIHdvbWVuICAgb25lIGEgYmxhY2sgaGlnaCBzY2hvb2wgc3R1ZGVudCwgdGhlIG90aGVyIGEgd2hpdGUgaGlnaCBzY2hvb2wgc3R1ZGVudCAgIHN0cnVjayB1cCBhIGZyaWVuZHNoaXAgd2hpbGUgdGhleSB3YWl0ZWQgZml2ZSBob3VycyBpbiBsaW5lLiBUaGV5LCBsaWtlIHNvIG1hbnkgb3RoZXJzLCBzYWlkIHRoZXkgd2VyZSBncmF0ZWZ1bCB0byBiZSBhYmxlIHRvIGxpdmUgaW4gdW5pdHkuIElmIHRoZXJlIHdlcmUgcHJvYmxlbXMgICBkaXNwYXJpdGllcyBiZXR3ZWVuIHJhY2VzIGhhdmUgYmVlbiB3ZWxsIGRvY3VtZW50ZWQgICBwZW9wbGUgc2VlbWVkIHJlbHVjdGFudCB0byBhZGRyZXNzIHRoZW0sIGFzIHRob3VnaCBpdCB3YXMgZGlzcmVzcGVjdGZ1bCB0byBNYW5kZWxhLi4gClRoZSBmaXJzdCB0aGluZyB0aGF0IHlvdSBuZWVkIHRvIGRvIGlzIHRvIGdldCB5b3Vyc2VsZiBhY3F1YWludGVkIHdpdGggdGhlIGNhcmRzIGFuZCB0aGVpciB2YWx1ZXMsIHRha2luZyBpbnRvIGFjY291bnQgdGhhdCBubyB0d28gY2FyZCBwYWNrcyB3aWxsIG5lY2Vzc2FyaWx5IGJlIHRoZSBzYW1lIHdoZW4geW91IHBsYXkgcG9rZXIsIHdoaWNoIG1lYW5zIHRoYXQgdGhlIGlkZW50aWZ5aW5nIG1hcmtpbmdzIHdpbGwgYWxzbyBiZSBkaWZmZXJlbnQgZm9yIHRoZSBkaWZmZXJlbnQgY2FyZCBkZW5vbWluYXRpb25zLiAKSWYgeW91IGtub3cgd2hhdCBwYXR0ZXJucyBhbmQgcHJvcGVydGllcyB0byBsb29rIGZvciBpbiB0aGUgcHJpbWFyeSBzZXF1ZW5jZSB5b3UgY2FuIG1ha2UgZmFpcmx5IGFjY3VyYXRlIHByZWRpY3Rpb25zIGFib3V0IHNvbWUgZmVhdHVyZXMgb2Ygc2Vjb25kYXJ5IHN0cnVjdHVyZS4gCldpdGggdGhlIGJhc2tldCBmdWxseSBkZWNvcmF0ZWQsIGFycmFuZ2UgYWxsIHlvdXIgZ2lmdHMgbmljZWx5IHNvIHRoYXQgZXZlcnkgaXRlbSBzaG93cyBmcm9tIHRoZSBpbnNpZGUuIApTaGUgYWNjdXNlZCBtZSBvZiBseWluZywgc2FpZCBJIHdhcyBleGFnZ2VyYXRpbmcsIGFuZCB3aGVuIEkgY291bGQgcHJvdmUgSSB3YXNudCBzaGUgc2FpZCBJIHByb3Zva2VkIGhpbSBhbmQgaGUgY291bGRudCBjb250cm9sIGhpcyBhbmdlci4gCkVhcmJ1ZHMgYXJlIEVNWHM1MDAgYmFsYW5jZWQsIEVNWHM1MDAgc2luZ2xlIGVuZGVkLCBjdXN0b20gMTUwIG9obXMgaW4gZW14IHNoZWxscyBhbmQgYSBwYWlyIG9mIFZpZG9zIElsbCBiZSBnaXZpbmcgYXdheSBhdCB0aGUgbWVldCBzaW5jZSBJIGhhdmUgc28gbWFueS4gCkJyaW5nIGEgcGVuY2lsIGFuZCBwYXBlciB3aXRoIHlvdSBldmVyeXdoZXJlLiAKSSBtYWtlIHN1cmUgdG8gZm9yd2FyZCB5b3VyIGNvbXBsaW1lbnRzIHRvIG15IGVudGlyZSBzdGFmZi4gCldpdGggYWxsIHRoZXNlIHdvbmRlcmZ1bCBvcHBvcnR1bml0aWVzIHRvIGZhdHRlbiB1cCB5b3Vyb25saW5lIHBva2VyYmFua3JvbGwsIHRoZXJlIGFyZSBzdGlsbCBtb3JlIG9mZmVycy4gT25saW5lIHBva2VyIHJvb21zIG9mZmVyIGd1YXJhbnRlZWQgcHJpemUgcG9vbHMgZm9yIHRoZWlyIHRvdXJuYW1lbnRzLiBUaGlzIG1lYW5zIHdoZW4gdGhlIGJ1eSBpbnMgZnJvbSB0aGUgcGxheWVycyB3aG8gcmVnaXN0ZXIgZm9yIHRoZSB0b3VybmFtZW50IGRvIG5vdCBhZGQgdXAgdG8gYXQgbGVhc3QgdGhlIGd1YXJhbnRlZWQgcHJpemUgcG9vbCBhbW91bnQsIHRoZSBwb2tlciByb29tcyB3aWxsIHNldHRsZSB0aGUgZGlmZmVyZW5jZS4gCkZpcnN0LCB3ZSB3aWxsIGRpc3BlbCB0aGUgbXl0aCB0aGF0IHlvdSBjYW4gY2F0Y2ggZGlzZWFzZXMgZnJvbSB5b3VyIGNhdC4gClJhdGhlciBub3QgdGFsayBzcGVjaWZpY3MgcmlnaHQgbm93LCBoZSBzYWlkLiBhIGxvdCBvZiBzdHVmZiBnb2luZyBvbi4gdGhlbiBhZGRlZCB3aXRoIGEgbGF1Z2gsIEkgaGF2ZSBhbHdheXMgc2FpZCBJIGxpa2UgcGxheWluZyBpbiBDaGljYWdvLiBpbiB0aGUgMjAgbWludXRlIGludGVydmlldywgd2hpY2ggaW5jbHVkZWQgcXVlc3Rpb25zIG9uIHBlZWluZyBpbiB0aGUgc2hvd2VyIGFuZCBjaXJjdW1jaXNpb24sIEx1b25nbyBqb2tlZCB0aGF0IGhlIGVuam95cyB0aGUgQ2hlbHNlYSBEYWdnZXIgc29uZyB0aGF0IGlzIHBsYXllZCBhdCB0aGUgVW5pdGVkIENlbnRlciB3aGVuIHRoZSBCbGFja2hhd2tzIHNjb3JlLgpIb3dhcmQgU3RhcGxldG9uLCB1biBpbmduaWV1eCBzdWpldCBkZSBTYSBUcnMgR3JhY2lldXNlIE1hamVzdCwgYSBtaXMgYXUgcG9pbnQgdW4gcnB1bHNpZiBhY291c3RpcXVlIGltcGFyYWJsZSBxdWkgY2hhc3NlIGxlcyBmYXV0ZXVycyBkZSB0cm91YmxlcyBlbiBtZXR0YW50IGRlcyBzb25zICBoYXV0ZSBmcnF1ZW5jZSB1bmlxdWVtZW50IGF1ZGlibGVzIHBhciBsZXMgYWRvcywgIHBhcnRpciBkZSAxMiBhbnMsIGV0IGxlcyBqZXVuZXMgYWR1bHRlcyBqdXNxdScgbCdnZSBkZSAyMiBhbnMuIApTdHlsZSwgbmFycmF0aW9uLCBhbmQgZ2VuZXJhbCBnYW1lcGxheSBpcyBwZXJmZWN0LCBidXQgdGhlIGNydXNoaW5nIGRpZmZpY3VsdHkgYW5kIGdyaW5keSBuYXR1cmUgb2YgdGhlIGVuZGdhbWUgd2FzIHZlcnkgb2ZmIHB1dHRpbmcgdG8gbWUuIEFuZCB5ZXMsIEkga25vdyB0aGVyZSBhcmUgZWFzaWVyIG1vZGVzIGJ1dCBJIGNhbiBoZWxwIGJ1dCBmZWVsIGRpbHV0aW5nIHRoZSBleHBlcmllbmNlIGFzIG1lYW50IHRvIGJlIHBsYXllZCBpcyBkaXNob25lc3QgdG8gaG93IHRoZSBnYW1lIHdhcyBtZWFudCB0byBiZS4gSSBhbSBqdXN0IGEgc3R1YmJvcm4gZHVtbXkuLiAKUHV0aW4gdGFsayByZXByZXNlbnRzIHRoZSBwcm9ibGVtLCBub3QgdGhlIHNvbHV0aW9uLiBSdXNzaWEgd2FycyBpbiB0aGUgQ2F1Y2FzdXMgaGF2ZSBjcmVhdGVkIGEgZ2VuZXJhdGlvbiBvZiB5b3VuZyBwZW9wbGUgd2hvIGxpdmUgd2l0aCB0aGUgZWZmZWN0cyBvZiB2aW9sZW5jZSBpbiB0aGVpciBsYW5kLiAKQm90aCB3ZXJlIGNvbnZpY3RlZCBhbmQgZmluZWQgJDIwMCBvbiBlYWNoIG1hdHRlci4gTXIgTXVycmF5IHNhaWQgdGhlaXIgb2ZmZW5kaW5nIHdhcyBzZWVuIGJ5IGEgc3VwZXJ2aXNvciBhdCB0aGUgTmV3IEFsYnVyeSBIb3RlbCBNb3RlbCBpbiBLaWV3YSBTdHJlZXQgYW5kIHdhcyBjYXB0dXJlZCBvbiBjbG9zZWQgY2lyY3VpdCBmb290YWdlLiBUaGUgY291cnQgd2FzIHRvbGQgaW4gdGVuZGVyZWQgZmFjdHMgdGhlIHN1cGVydmlzb3Igd2FzIHdhbGtpbmcgdGhyb3VnaCB0aGUgcG9rZXIgbWFjaGluZSBhcmVhIGFib3V0IDEyLjA1YW0gb24gRGVjZW1iZXIgMTQgd2hlbiBoZSBzYXcgV2Vsc2ggaG9sZGluZyBvcGVuIHRoZSBwb2tlciBtYWNoaW5lIGRvb3IgYW5kIFN1cGhlZXJ0IHRha2luZyBjb2lucy4gCkVkaXQ6IElmIEkgbWlzc2luZyBhbnkgYnJld2VyaWVzIGZyb20geW91ciBuZWNrIG9mIHRoZSB3b29kcywgbGV0IG1lIGtub3chIFRoYW5rcyB1L3JhbmNpZHBvdGF0b2VzIGFuZCBhbiBpbnNhbmUgYW1vdW50IG9mIG90aGVycyBmcm9tIGV2ZXJ5IHBhcnQgb2YgdGhpcyBjb3VudHJ5IGZvciBtZW50aW9uaW5nIGEgY291cGxlIGJ1bmNoIEJFQVVDT1VQIGFtb3VudCBvZiBicmV3ZXJpZXMvYmVlcnMgdG8gbWUhIEkgZGVmaW5pdGVseSBiZSBhZGRpbmcgYXMgbWFueSBhcyBJIGNhbiBzb29uISBJIGluc2FuZWx5IHByb3VkIHRvIHNlZSBwZW9wbGUgb24gci9jYW5hZGEgc3VwcG9ydGluZyB0aGVpciBsb2NhbCBicmV3ZXJpZXMhIDMgcG9pbnRzICBzdWJtaXR0ZWQgMSB5ZWFyIGFnbwpXZSBkZWZpbml0ZWx5IHNlZSBhbiBhcHByb3ByaWF0ZSB2YXJpYW50LiBUaGluZyBpcywgd2l0aCBib3RoIEVsZGVyIFNjcm9sbHMgYW5kIEZhbGxvdXQsIHRoZXkgd2VudCB0byB0aGUgcGFzdC4gCk1hc3RlciB5b3VyIGVnbywgc28gd2hlbiBvdGhlcnMgZWdvcyBnZXQgdGhlIGJlc3Qgb2YgdGhlbSwgeW91IGNhbiBwcm9maXQuLiAKQnV0IEkgdGhpbmsgdGhlIHJlYWwgbGVzc29ucyBhcmUgZmFyIG1vcmUgY29tcGxpY2F0ZWQgdGhhbiB0aGF0LiAKVGhleSB3ZXJlIGFjdGluZyB2ZXJ5IHN0cmFuZ2VseSwgIiBvd25lciBSb2JlcnQgQnJlbnRsaW5nZXIgc2FpZC4gClBlcmZvcm1hbmNlIENvb2tpZXMgc2FtbWVsbiBJbmZvcm1hdGlvbmVuIGRhcmJlciwgd2llIHVuc2VyZSBXZWJzZWl0ZW4gZ2VudXR6dCB3ZXJkZW4sIHVtIGRhcmF1ZiBiYXNpZXJlbmQgZGVyZW4gQXR0cmFrdGl2aXR0LCBJbmhhbHQgdW5kIEZ1bmt0aW9uYWxpdHQgenUgdmVyYmVzc2Vybi4gRGllc2UgQ29va2llcyBoZWxmZW4gdW5zIGJlaXNwaWVsc3dlaXNlIGZlc3R6dXN0ZWxsZW4sIG9iIHVuZCB3ZWxjaGUgVW50ZXJzZWl0ZW4gdW5zZXJlciBXZWJzZWl0ZSBiZXN1Y2h0IHdlcmRlbiB1bmQgZnIgd2VsY2hlIEluaGFsdGUgc2ljaCBkaWUgTnV0emVyIGJlc29uZGVycyBpbnRlcmVzc2llcmVuLiAKUm9ja2V0IGxlYWd1ZSBpcyBhbGwgYWJvdXQgdXNpbmcgcGh5c2ljcyB0byBjb250cm9sIHlvdXIgaW50ZXJhY3Rpb25zIHdpdGggdGhlIGJhbGwganVzdCBsaWtlIGluIHJlYWwgbGlmZS4gClRoZSBKUiBQYXNzIGlzIG5vdCBhIG9uZSBkYXkgYWZmYWlyLiBUaGUgc2hvcnRlc3QgKGFuZCBjaGVhcGVzdCkgaXMgZ29vZCBmb3IgNyBkYXlzIGZyb20gZGF5IG9mIGFjdGl2YXRpb24sIGFuZCB5b3UgaGF2ZSB0byBwdXJjaGFzZSBpdCBiZWZvcmUgeW91IGFycml2ZSBpbiBKYXBhbi4gCkpvaG5zb24gc2FpZCB0aGUgY29tcGFueSB0ZXN0ZWQgcGFydG5lcnNoaXBzIHdpdGggdGhlIE5ITCBhbmQgTWFqb3IgTGVhZ3VlIEJhc2ViYWxsLCBhbmQgZGlkIGFsbCBraW5kcyBvZiByZXNlYXJjaCB3aXRoIGl0cyBjbGllbnQgYmFzZSwgb25seSB0byByZWFsaXplIG1hbnkgb2YgaXRzIGN1c3RvbWVycyB3ZXJlIGZhbnMgb2YgTkFTQ0FSIGFuZCBjb3VudHJ5IG11c2ljLCBpbmNpZGVudGFsbHkuIApBIGNoYWxsZW5nZSBjb2luIGlzIGEgc21hbGwgY29pbiBvciBtZWRhbGxpb24gKHVzdWFsbHkgbWlsaXRhcnkpLCBiZWFyaW5nIGFuIG9yZ2FuaXphdGlvbidzIGluc2lnbmlhIG9yIGVtYmxlbSBhbmQgY2FycmllZCBieSB0aGUgb3JnYW5pemF0aW9uJ3MgbWVtYmVycy4gCkxlIHN5c3RtZSBkZSBjbGFzc2VtZW50IGRlcyBtYWlucyBlc3QgaWRlbnRpcXVlICBjZWx1aSBkdSBqZXUgZGUgY2FzaW5vLiAKVGhlIGFpbSBvZiB0aGlzIHN0dWR5IHdhcyB0byBhc3Nlc3MgdGhlc2UgZWFybHkgZGVnZW5lcmF0aXZlIGNoYW5nZXMgaW4gYW1hdGV1ciBhY3RpdmUgYW5kIHZldGVyYW4gc29jY2VyIHBsYXllcnMgaW4gYSBjcm9zcyBzZWN0aW9uYWwgZGVzY3JpcHRpdmUgc3R1ZHkgdXNpbmcgYmlvbWVjaGFuaWNhbCwgcmFkaW9sb2dpY2FsLCBhbmQgbWFnbmV0aWMgcmVzb25hbmNlIG1lYXN1cmVzLgpNeXRoaWdoc3lvdXJlYXJtdWZmcyAgOSBwb2ludHMgIHN1Ym1pdHRlZCAzIG1vbnRocyBhZ28KS29yZWEgaXMgc3RpbGwgZmlybWx5IGluIHRoZSBncmlwIG9mIE5lbyBDb25mdWNpYW5pc20uIApUaGVyZSB3aWxsIGJlIGd1eXMgb3V0c2lkZSB0aGUgc3RhZGl1bSBzZWxsaW5nIHBlYW51dHMgYW5kIHdhdGVyIGlmIHlvdSB3YW50IHRoYXQuLCB0aGV5IGFyZSBhbHdheXMgdGhlcmUgYW5kIGFyZSBsZWdpdCwgdGhleSBhcmVuJ3QgZ29pbmcgdG8gcm9iIHlvdS4gCkFyY2FuZSBzcGVsbCBjYXN0ZXJzIGFuZCByYW5nZXJzIGxlYXJuIGEgZmV3IHNwZWxscyBmcm9tIHRoZWlyIHJlc3BlY3RpdmUgbGlzdHMsIGFuZCB0aGVuIHByZXBhcmUgdGhlaXIgZGFpbHkgc3BlbGxzIGZyb20gdGhlaXIga25vd24gc3BlbGxzLiBUaGVzZSBjbGFzc2VzIGxlYXJuIG5ldyBzcGVsbHMgd2l0aCBlYWNoIGxldmVsLiAKS25vdyBZb3VyIE93biBUYWJsZSBJbWFnZSAgIEV2ZXJ5b25lIGRldmVsb3BzIGEgInRhYmxlIGltYWdlIi4gCkFzIGhlIHB1bGxlZCB0aGVpciBib2RpZXMgZmx1c2gsIE1vc2VzIGdyb3dsZWQgaW4gSmVzdXMgZWFyLCBuaWJibGluZyBvbiB0aGUgbG9iLiAiTGV0IG1lIHRha2UgeW91IHRvIHRoZSBsYW5kIG9mIG1pbGsgYW5kIGhvbmV5LiIKRm9yIHNvbWUgdHJhY2tzLCBsb3NpbmcgbGl2ZSByYWNpbmcgbWlnaHQgYWN0dWFsbHkgaW5jcmVhc2UgcHJvZml0cy4gVW5kZXIgY3VycmVudCBGbG9yaWRhIGxhdywgZ3JleWhvdW5kIHRyYWNrcyBtdXN0IG9mZmVyIGxpdmUgcmFjaW5nIHRvIG9wZXJhdGUgcG9rZXIgcm9vbXMgYW5kIGFjY2VwdCB3YWdlcnMgb24gc2ltdWxjYXN0IGhvcnNlIHJhY2luZyBmcm9tIHRyYWNrcyBhY3Jvc3MgdGhlIGNvdW50cnkuIApUaGluayB3aGF0IGEgeW91bmcgRWxsaWUgU2FkbGVyIHJvb20gbWlnaHQgaGF2ZSBsb29rZWQgbGlrZS4gSSB3YXMgdGhpbmtpbmcgb2xkIHNjaG9vbCBmZXJuIGxpa2UgYm90YW55IHByaW50cyBvbiB0aGUgd2FsbCwgbGlnaHQgZ3JlZW4gYW5kIGJlaWdlIGNvbG9ycyB0aHJvdWdob3V0IHRoZSBudXJzZXJ5LCBkaW5vc2F1ciB0b3VjaGVzIGNvdWxkIGJlIHNvZnRlciBjb2xvcnMgYW5kIGEgbGl0dGxlIG1vcmUgY2FydG9vbnkgdGhhbiB0aGUgYnJpZ2h0IHByaW1hcnkgY29sb3JzIHlvdSBzZWUgb24gYm95cyBzdHVmZi4KSSBkb24ga25vdyB0aGUgbWFnbml0dWRlIG9mIHdoaWNoIHRoYXQgaGUgImhpdCBpdCBiaWciIGJ1dCBJIHNlZW4gbWFueSBwZW9wbGUgaW4gbXkgbGluZSBvZiB3b3JrIHdpdGggZmFpbGVkIHN0YXJ0IHVwcyBhbmQgZmluYW5jaWFsIHByb2JsZW1zIGZyb20gcG9vciBzcGVuZGluZyBjaG9pY2VzLlRoZSBsYWRkZXIgdG8gc3VjY2VzcyBpcyB1bmZvcnR1bmF0ZWx5IGxvbmVseS4gTHVja2lseSB0aGVzZSBwZW9wbGUgYXJlIG1ha2luZyB0aGVtc2VsdmVzIGtub3duIHJhdGhlciBlYXJseS5UaGUgZ29hbCBvZiB3b21lbiBpbiB0aGlzIHN1YnJlZGRpdCBpcyB0byBpbnNwaXJlIGEgbWFuIGRlc2lyZSB0byBjb21taXQgdG8gdXMgaW4gYSB3YXkgdGhhdCBkaWZmZXJlbnQgdGhhbiB0aGUgc29jaWV0YWwgbm9ybSBvZiBwcmVzc3VyaW5nIG1lbiBhbmQgcHVzaGluZyB0b3VnaCBzdWJqZWN0cy4gCkdpdmluZyBoZXIgdGhyZWUga25pZ2h0cyBhcyBhbiBlc2NvcnQsIGhlIHNlbnQgaGVyIHRvIGFuIGFiYmV5IHRvIGJlY29tZSBhIG51bi4gCk1hcmtldGluZyBleGVjdXRpdmVzIHdobyBjb250cm9sIHRoZSBidWRnZXRzIG9mIHRoZSBuYXRpb24ncyBsYXJnZXN0IGFkdmVydGlzZXJzIGFyZSBpbiBPcmxhbmRvIHRoaXMgd2VlayBmb3IgdGhlIEFzc29jaWF0aW9uIG9mIE5hdGlvbmFsIEFkdmVydGlzZXJzIGFubnVhbCAiTWFzdGVycyBvZiBNYXJrZXRpbmciIGNvbmZlcmVuY2UuIAozIHBvaW50cyAgc3VibWl0dGVkIDkgZGF5cyBhZ28KQnV0IGl0IHdhc24ndCBhcyBoYXJkIGFzIG90aGVyIHRoaW5ncyBJJ3ZlIGRvbmUsIGZvciBzdXJlLiAKKEFuZCBkbyB3ZWFyIHNvbWUsIDJsZWdzLikgSGF2ZSBhIGdyZWF0IHdlZWshLiAKTWVkaWEgcGVyc29uIGFuZCBtZWRpYSBjb250ZW50IG9mIHRoZSB5ZWFyIGFyZSBvZiBwYXJ0aWN1bGFyIGludGVyZXN0IHRvIHRob3NlIG9mIHVzIGluIHRoZSBtZWRpYSwgb2YgY291cnNlLCBidXQgdGhlIHBva2VyIGlubm92YXRpb24gYW5kIGNoYXJpdGFibGUgaW5pdGlhdGl2ZSBjYXRlZ29yaWVzIGFsc28gaGlnaGxpZ2h0IHRoZSBiZXN0IG9mIG91ciBpbmR1c3RyeS4gSXQgaXMgaW5zcGlyaW5nIHRvIGhvbm9yIHRoZSB3aW5uZXJzIGFuZCBjZWxlYnJhdGUgdGhlIGdhbWUgYXQgdGhlIHNhbWUgdGltZS4KQW5kIHRoZW4sIGJ1dCB0byBhIGxlc3NlciBleHRlbnQsIHRoZXJlIHdhcyBhbm90aGVyIGF1dG9tYXRlZCBtYW4sIG9mIGEgc29ydC4gCkdyZWVuIGFuZCBteXNlbGYgc3RheSdkIHRoZXJlIHRoZSBuaWdodCB0byBvYnNlcnZlIGFuIGVjbGlwc2Ugb2YgSnVwaXRlcidzIGZpcnN0IFNhdGlsaXRlLCB3aGljaCB3ZSB3YXMgaGluZGVyJ2QgZnJvbSBzZWVpbmcgYnkgQ2xvdWRzLi4gClRoZSBmaXJzdCBsaW5lIG9mIGRlZmVuc2UgaXMgdGhlIHNraW4sIHdoaWNoIHByZXZlbnRzIGEgbG90IG9mIHBhdGhvZ2VucyBmcm9tIGVudGVyaW5nIHRoZSBib2R5LikgVGhlIGx5bXBoYXRpYyBzeXN0ZW0gKGNsYXNzaWZpZWQgYXMgYSBjaXJjdWxhdG9yeSBzeXN0ZW0pIGFjdHVhbGx5IGRvZXNuIGNpcmN1bGF0ZSBpdHNlbGYuIApCZXRydWcgendlaWZlbHNmcmVpIG5hY2h6dXdlaXNlbiwgaXN0IG1laXN0ZW5zIHNjaHdlciB1bmQgZGFubiBtdXNzIG1hbiBzaWNoIG1pdCBkZW0gZ2FuemVuIHJnZXIgcnVtc2NobGFnZW4uYWxmaXg4ICAxIHBvaW50ICBzdWJtaXR0ZWQgOCBkYXlzIGFnb0RhcyBBS1cgaW4gZGVyIE5hY2hiYXJzY2hhZnQgbWFjaHQgZGllc2VuIFNjaGFkZW4gaGFsdCBtYWwgbGVpZGVyIHVubWl0dGVsYmFyIHp1IGRlaW5lbSBQcm9ibGVtICAgZGllIEtvaGxla3JhZnR3ZXJrZSBtYWNoZW4gZGFzIHp1IGRlbSBQcm9ibGVtIHZvbiBhbGxlbiBNZW5zY2hlbi5Ob2NoIGVpbiBHcnVuZCwgenVlcnN0IGRpZSBLb2hsZSB1bmQgZGFubiBkaWUgQUtXcyBhYnp1c2NoYWx0ZW4uRGVubiBkYXMgUmlzaWtvIGltIHNjaGxpbW1zdGVuIEZhbGwgdHJndCBpbiBlcnN0ZXIgTGluaWUgZGllIEdlc2VsbHNjaGFmdCwgbmljaHQgZGVyIEtvbnplcm4sIHdocmVuZCBkZXIgUHJvZml0IG5pY2h0IGRlciBHZXNlbGxzY2hhZnQgenUgZ3V0ZSBrb21tdC5EYXMgZ2lsdCBmciBkaWUgS29obGUgZ2VuYXVzby4gCkFmdGVyIHllYXJzIGxpdmluZyBhcyBhbiBleHBhdCwgeW91IHN0YXJ0IHRvIHNwb3QgcGVvcGxlIGxpa2UgdGhpcyBwcmV0dHkgZnJlcXVlbnRseS4gCkNvbXBsYWludDogSSBodXJ0IG15IHJpYnMgbGFzdCB3ZWVrIGFuZCBpdCBoYXMgYmVlbiBzbG93bHkgZ2V0dGluZyBiZXR0ZXIgYnV0IHllc3RlcmRheSBJIHNuZWV6ZWQgYW5kIG9oIGJveS4gVGhhdCB3YXMgYSB0ZXJyaWJsZSBldmVudC4gVGhlIHBhaW4gaXMgbm93IHdvcnNlIHRoYW4gaXQgZXZlciB3YXMgYW5kIEkgc3VwcG9zZWQgdG8gZ28gb24gdmFjYXRpb24gdG9kYXkuIApUaGlzIHJlc2VhcmNoIGlzIGFsc28gcmVhc3N1cmluZy4gTGlrZSBhbGwgbmV3IHRlY2hub2xvZ2llcywgdGhlIEludGVybmV0IGhhcyBwcm92b2tlZCBhIHRyZW1lbmRvdXMgYW1vdW50IG9mIGFueGlldHksIGFzIHBlb3BsZSB3b3JyeSBhYm91dCB0aGUgZGVjYXkgb2Ygb3VyIGF0dGVudGlvbiBzcGFucyBhbmQgdGhlIGRpc3NvbHV0aW9uIG9mIGF1dGhlbnRpYyBodW1hbiBjb250YWN0LiBXZSBhcmUgc29tZXRpbWVzIHNvIGJ1c3kgdGV4dGluZyB0aGF0IHdlIGZvcmdldCB0byB0YWxrLCBhbmQgaXQgc2VlbXMgdG8gc29tZSB0aGF0IG91ciBvbmxpbmUgImZyaWVuZGluZyIgaGFzIHJ1aW5lZCByZWFsIGZyaWVuZHNoaXAuCklsbGVnYWwgdG9iYWNjbyBwcm9kdWN0c3N1cnZlaWxsYW5jZSBhbmQgbW9uaXRvcmluZ3RvYmFjY28gaW5kdXN0cnlUaGlzIGlzIGFuIG9wZW4gYWNjZXNzIGFydGljbGUgZGlzdHJpYnV0ZWQgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSB0ZXJtcyBvZiB0aGUgQ3JlYXRpdmUgQ29tbW9ucyBBdHRyaWJ1dGlvbiAoQ0MgQlkgNC4wKSBsaWNlbnNlLCB3aGljaCBwZXJtaXRzIG90aGVycyB0byBkaXN0cmlidXRlLCByZW1peCwgYWRhcHQgYW5kIGJ1aWxkIHVwb24gdGhpcyB3b3JrLCBmb3IgY29tbWVyY2lhbCB1c2UsIHByb3ZpZGVkIHRoZSBvcmlnaW5hbCB3b3JrIGlzIHByb3Blcmx5IGNpdGVkLiAKNjIlIG9mIFJlcHVibGljYW5zIHdvdWxkIG5vdCBzdXBwb3J0IGltcGVhY2htZW50IGV2ZW4gaWYgdGhleSBrbmV3IGhlIHdhcyBndWlsdHkuIFdoaWNoIGlzIGFub3RoZXIgd2F5IG9mIHNheWluZyB0aGF0IDYyJSBvZiBSZXB1YmxpY2FucyBkbyBub3Qgc3VwcG9ydCBkZW1vY3JhY3ksIHRoZSBDb25zdGl0dXRpb24sIG9yIHRoZSBydWxlIG9mIGxhdy4KSGFoIEkgbG92ZSB0aGlzIHJlc3BvbnNlIGFuZCBpdCBwYXJhbGxlbHMgbXkgY29tbWVudCB0byBnYW1lcnMgd2hvIHN0cnVnZ2xlIGluIE92ZXJ3YXRjaCByYW5rcywgQ1MgR08sIGV0Yy4gSSBkb24gaGF2ZSB0aGUgaG91cnMgYnV0IEkgdXNlZCB0byBiZWluZyBtdWNoIGJldHRlciBtdWNoIHNvb25lciBpbiBtb3N0IG11bHRpcGxheWVyIGdhbWVzLiBJIGFkbWl0IG15IHJlc2VhcmNoIGlzIGp1c3QgYmVnaW5uaW5nIGFuZCBJIGhhdmVuIHRyaWVkIG1vc3Qgb2YgdGhlIGNoYXJhY3RlcnMuIApJdCBpcyB1c2VkIGFzIGEgc3ltYm9sIGZvciB0aGUgcmF0aW8gb2YgdGhlIGNpcmN1bWZlcmVuY2Ugb2YgYSBjaXJjbGUgdG8gaXRzIGRpYW1ldGVyLCB3aGljaCBpcyAzLjE0MTU5MjY1MywgY29tbW9ubHkgcm91bmRlZCB0byAzLjE0LiAKUGVhYm9keUpGcmFua2xpbiAgMCBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvCkknbGwgY2FuIHBvc3NpYmx5IGhhdmUgYW5vdGhlciA1MGsgdXIgcG9pbnRzIGluIGEgbW9udGgncyB0aW1lIGJ1dCBJIHJhdGhlciBib29rIGVhcmxpZXIgdGhhbiBsYXRlciBiZWNhdXNlIEknbSB3b3JyaWVkIGFib3V0IGZsaWdodHMgYm9va2luZyBvdXQuClBva2VyJ3Mgc3ByZWFkIHdhcyB0aGUgcmVzdWx0IG9mIGEgZ2VuZXJhbCBzcHJlYWQgb2YgZ2FtYmxpbmcgZHVyaW5nIHRoZSBlcmEuIApXZSBhbGwgZmVsdCB0aGUgcGFsYWNlIHdhcyBmYXIgdG9vIGJpZzogSSB3YXMgc2VwYXJhdGVkIGZyb20gdGhlIGdpcmxzIGJ5IGludGVybWluYWJsZSBjb3JyaWRvcnMsIGFuZCBpdCB3YXMgYSBmaXZlIG1pbnV0ZSB3YWxrIHRvIHRoZSBnYXJkZW5zLiBGb29kIGhhZCB0byBjb21lIHRoZSBiZXR0ZXIgcGFydCBvZiBoYWxmIGEgbWlsZSBmcm9tIHRoZSBraXRjaGVucyBhdCB0aGUgQnVja2luZ2hhbSBQYWxhY2UgUm9hZCBlbmQgdG8gdGhlIGRpbmluZyByb29tIGF0IHRoZSBDb25zdGl0dXRpb24gSGlsbCBlbmQuIFdlIGFsc28gbmVlZGVkIHRoZSB2ZXJtaW4gbWFuLCB3aG8gZm91Z2h0IGFuIGVuZGxlc3MgYmF0dGxlIGFnYWluc3QgdGhlIG1pY2Ugd2l0aCBjYXJkYm9hcmQgdHJhcHMgdGhhdCBoYWQgYSBsdW1wIG9mIGFuaXNlZWQgaW4gdGhlIG1pZGRsZSBhbmQgdHJlYWNsZSBhbGwgYXJvdW5kLgpPcmFsIGFuYWwgbG92ZW1ha2luZyBpcyBwb3B1bGFybHkga25vd24gYXMgcmltbWluZy4gW1NlZSBteSBwb3N0IEFuYWxpbmd1czogVGhlIERhcmsgS2lzcy5dIFRoZSB2ZXJ5IGlkZWEgZGlzZ3VzdHMgc29tZSBwZW9wbGUuIApNeSBkYXVnaHRlciBpcyBteSBmb3VydGggY2hpbGQgYW5kIG11Y2ggaGVhbHRoaWVyIHRoYW4gbXkgb3RoZXIgdGhyZWUgYW5kIEkgYW0gdmVyeSBsYXggd2l0aCBoZXIgd2hlbiBpdCBjb21lcyB0byBkaXJ0LiBTaGUgaXMgcXVpdGUgZGlzZ3VzdGluZyBidXQgSSBzdGlsbCB0YWtlIGhlciB0byBkb2N0b3JzLCBnZXQgaGVyIHZhY2NpbmF0ZWQsIGdpdmUgaGVyIG5lY2Vzc2FyeSBtZWRpY2F0aW9ucy4gCkVhY2ggaGFzIGl0cyBvd24gbWVyaXRzIGluIGEgZ2l2ZW4gY29udGV4dC4gClNvIEkndmUgYmVlbiBnaXZlbiB0aGUgdGFzayBvZiB0cnlpbmcgdG8gZmluZCBhbiBlbXBsb3llZSB0byBqb2luIG91ciBsaXR0bGUgdGVhbS4gSG93ZXZlciBldmVyeW9uZSBJIHRhbGsgdG8gc2F5cyAiSSdsbCBzZW5kIG15IHJlc3VtZSB0aHJvdWdoISIgYnV0IG5ldmVyIGVuZHMgdXAgZG9pbmcgaXQuIApJdCBhIGdyZWF0IHRpbWUgdG8gcGljayB1cCBhbmQgbW92ZSB0byBhIG5ldyBjaXR5LiAKTXkgKHN1cHBvc2VkbHkgbm9uIGRlbm9taW5hdGlvbmFsKSBvZmZpY2lhbnQgd2FzIHRvbGQgaW4gbm8gdW5jZXJ0YWluIHRlcm1zIHRoYXQgdGhlIGJyaWVmIGNlcmVtb255IHdhcyB0byBoYXZlIG5vIG1lbnRpb24gb2YgR29kIG9yIHJlbGlnaW9uLiAKQ2l0eSBjb3Jwb3JhdGUgc2VydmljZXMgZGlyZWN0b3IgSnVkeSBDaGFybHRvbiByZWZ1dGVkIGFueSBjb3VuY2lsIGludm9sdmVtZW50IGluIHRoZSBkZWFsLiAKVGhlIHRyaWNrIHRvIHdpbm5pbmcgYXQgTW9ub3BvbHkgaXMgbm90aWNpbmcgdGhhdCBub3QgZXZlcnkgc3F1YXJlIGlzIGNyZWF0ZWQgZXF1YWwgICBzb21lIHNxdWFyZXMgYXJlIG11Y2ggbW9yZSBsaWtlbHkgdG8gYmUgbGFuZGVkIG9uIHRoYW4gb3RoZXJzLiBUaGUgcmVhc29uIGZvciB0aGF0IGlzIGJlY2F1c2UgTW9ub3BvbHkgaGFzIGEgZmV3IGN1cnZlIGJhbGxzLiBGb3IgZXhhbXBsZSwgdGhyb3dpbmcgdGhyZWUgZG91YmxlcyBpbiBhIHJvdyBzZW5kcyB5b3UgdG8gamFpbDsgdGhlIGdvIGRpcmVjdGx5IHRvIGphaWwgc3F1YXJlOyB0aGUgQ2hhbmNlIGFuZCBDb21tdW5pdHkgQ2hlc3QgY2FyZHMgdGhhdCBzZW5kIHlvdSBvZmYgYXJvdW5kIGRpZmZlcmVudCBwbGFjZXMgb24gdGhlIGJvYXJkLCBhbmQgc28gb24uIFdoYXQgdGhpcyBkb2VzIGlzIHR3ZWFrIHRoZSBwcm9iYWJpbGl0eSBvZiBsYW5kaW5nIG9uIGRpZmZlcmVudCBwbGFjZXMgYWNyb3NzIHRoZSBib2FyZC4gWW91IGNhbiB0aGVuIGFkZCBpbiB0byB0aGF0IHRoZSBtYXR0ZXIgb2YgdGhlIGluZGl2aWR1YWwgdmFsdWVzIG9mIGVhY2ggcHJvcGVydHkgdG8gd29yayBvdXQgd2hhdCB5b3VyIGJlc3QgcG9zc2libGUgc3F1YXJlcyBhcmUuClVQREFURTogSSBqdXN0IGRlY2lkZWQgdG8gYmUgYSBkYW5jZXIgd2hlbiBhc2tlZCB3aGF0IEkgZG8gZm9yIGEgbGl2aW5nLiBJIHRoaW5rIG15IG1hcnJpYWdlIHdpbGwgYmUgdG8gYW4gb2xkLCByaWNoIGd1eSBzbyBJIGNvdWxkIGdldCBvZmYgdGhlIHBvbGUsIGJ1dCBJIGNhbiBsZWF2ZSBoaW0gYmVjYXVzZSBoZSBzdXBwb3J0cyBtZSBmaW5hbmNpYWxseS4gVGhpcyBvdWdodGEgYmUgZnVuLgpJdCBhY3R1YWxseSBhIHdyb3VnaHQgaXJvbiBjaGFpciB0aGF0IGlzIENPVkVSRUQgYnkgdGhpcyB3aWxkIGphc21pbmUuIEEgRlVDS0lORyBDSEFJUi4uIApJIHBsYXllZCB0aGUgZmlyc3Qgb25lIGluIDE5NzAuIFdlIGhhZCB0d28gdG91cm5hbWVudHM6IHRoZSBNYWluIEV2ZW50IGFuZCBhIERldWNlIHRvIFNldmVuIExvd2JhbGwgZ2FtZS4gSSBkb24ndCByZW1lbWJlciBob3cgSSBkaWQsIGJ1dCBJIGtub3cgdGhlcmUgd2VyZSBvbmx5IHNpeCBvZiB1cywgaW5jbHVkaW5nIEphY2sgU3RyYXVzLCBKb2hubnkgTW9zcywgYW5kICJBbWFyaWxsbyBTbGltLiIgQmFjayB0aGVuIGV2ZXJ5dGhpbmcgd2FzIGhlbGQgYXQgQmluaW9uJ3MgSG9yc2VzaG9lIGNhbGxlZCBCaW5pb24ncyBHYW1ibGluZyBIYWxsIEhvdGVsIEl0IHdhcyBtb3JlIG9mIGEgcmV1bmlvbjsgeW91IGtuZXcgZXZlcnlib2R5IHdobyBjYW1lLiAKT25jZSB5b3Ugc2VlIGl0IGZvciB5b3Vyc2VsZiwgeW91IHdpbGwgdW5kZXJzdGFuZC4gSW4gdGhlIG1lYW50aW1lLCBsZXQncyBnbyBvdmVyIGV2ZXJ5dGhpbmcgd2UgZm91bmQgb3V0IGFib3V0IHRoaXMgcG9rZXIgaW5ub3ZhdGlvbi4uIApFdCBjZSBwZXV0IG1tZSB0cmUgdW4gd2VlayBlbmQgZGUgcHVyIHJlcG9zLiAKUnVubmluZyBhbG9uZyB0aGUgZWRnZSBvZiB0YWJsZSBzaXRzIGEgcGFkZGVkIGFybXJlc3QgZm9yIHRoZSBjb21mb3J0IG9mIHRoZSBpbmRpdmlkdWFsIHBsYXllci4gSG93ZXZlciwgdGhlc2UgYXJtcmVzdHMgYXJlIGVhc2lseSByZW1vdmVkIHNvIHRoYXQgeW91IGNhbiByZXBsYWNlIHRoZSBmZWx0IG9uIHRoZSB0b3Agb2YgdGhlIHRhYmxlLiBUaGUgZmVsdCB0aGF0IHRvcHMgdGhlIHRhYmxlIGlzIGEgMTAwJSB3b29sIGZlbHQuIApXaGF0IGlzIHRoZSBtYWpvciBkaXZlcmdlbmNlIGluIHRoaXMgdHlwZSBvZiBnYW1lIGFuZCB0aGUgbXVsdGkgdGFibGUgZ2FtZT8gVGhpcyBzdHlsZSBvZiB0b3VybmFtZW50IGlzIG1vcmUgc2ltaWxhciB0byBhIEZpbmFsIHRhYmxlLCB3aGlsZSBpbiB0aGUgTXVsdGkgVGFibGUgc3Vycm91bmRpbmdzIGlmIGEgcGxheWVyIGdvZXMgdGhlaXIgcG9zaXRpb24gY2FuIGJlIHJlcGxhY2VkIGJ5IGFub3RoZXIgcGxheWVyLiBTbyBqdXN0IGxpa2UgYSBmaW5hbCB0YWJsZSBhbnlvbmUgZnJvbSBhbm90aGVyIHRhYmxlLCB3aXRoIGEgbXVjaCBsYXJnZXIgZ2V0LCB3aWxsIG5vdCBiZSBtb3ZpbmcgdG8geW91ciB0YWJsZS4gSW4gZXZlcnkgb3RoZXIgd2F5IHlvdXIgbW92ZXMgbXVzdCBiZSB0aGUgc2FtZSBhcyB5b3VyIHBva2VyIHN0cmF0ZWd5IGRpY3RhdGVzLCB3aGljaCBzaG91bGQgbG9vayBhdCB5b3VyIHN0YWNrLCB5b3VyIHBvc2l0aW9uLCBhbmQgcGxheWVycywgYW5kIG9mIGNvdXJzZSB5b3VyIGNhcmRzLiBUaWdodCBwbGF5IGluIGVhcmx5IHBvc2l0aW9uIGFuZCBsb29zZSBsYXRlciBpcyB0aGUgYmVzdCBwbGF5LCBzbyBwcmV2ZW50IHdoYXQgbWFueSBkbywgd2hpY2ggaXMgdG8gcGxheSB2ZXJ5IGxvb3NlIGVhcmx5IHdoZW4gbGl0dGxlIGlzIGF0IHJpc2ssIGFuZCB0aGVuIHBsYXkgdGlnaHRlciB3aGVuIHlvdSBjb3VsZCBiZSBpbiB0aGUgbW9uZXkuClNoZSBoYXMgd29ya2VkIGluIHJlYWwgZXN0YXRlIHNpbmNlIDIwMDQgYW5kIGhhcyBleHBlcnRpc2UgaW4gcG9wIGN1bHR1cmUgYW5kIGhlYWx0aCByZWxhdGVkIHRvcGljcy4gCkNhbGwgaXQgc29jaWV0YWwgcHJlc3N1cmVzIG9yIHRyYWRpdGlvbmFsaXNtIGJ1dCBvdXQgb2YgdGhlIDggb3IgOSBJIGJlZW4gYWJsZSB0byB0YWxrIHRvIDYgb2YgdGhlbSBoYXZlIHRoZSBzYW1lIGZlZWxpbmdzIG9yIGFyZSBpbiBhIHNpbWlsYXIgc2l0dWF0aW9uIGluIHRlcm1zIG9mIHRoZWlyIHdvcnRoIGFzIGEgcGVyc29uIG9yIHRoZWlyIG1hc2N1bGluaXR5LiAKVHJ5IHRvIHJlcHJlc2VudCBoYXZpbmcgYSBjZXJ0YWluL3NwZWNpZmljIGhhbmQgYnkgaGF2aW5nIGFuIGF0dGl0dWRlLCBnb29kIHJlcHV0YXRpb24sIGFuZCBiZWluZyBjb25zaXN0ZW50IHdpdGggeW91ciBiZXR0aW5nIHBhdHRlcm4uLiAKSXQgd2FybmVkIHRoYXQgYWx0aG91Z2ggdGhlIGhpZ2ggZW5kIHJlYWwgZXN0YXRlIG1hcmtldCBuYXRpb253aWRlIHdpbGwgY29udGludWUgdG8gYmUgc3VwcG9ydGVkIGJ5IHN0YWJsZSBwb3B1bGF0aW9uIGdyb3d0aCwgdm9sYXRpbGl0eSBpbiBzdG9jayBtYXJrZXRzIG1heSBzaGFrZSBjb25zdW1lciBjb25maWRlbmNlIGluIHRoZSBjb21pbmcgeWVhci4KVGhlIGludGVydmlldyBhbHNvIG1hcmtlZCB0aGUgZmlyc3QgdGltZSBoZSBhZGRyZXNzZWQgYWxsZWdhdGlvbnMgaW4gdGhlIExpZmV0aW1lIGRvY3VtZW50YXJ5IHNlcmllcyAiU3Vydml2aW5nIFIuIEtlbGx5LCIgd2hpY2ggYWlyZWQgaW4gSmFudWFyeSBhbmQgYWxsZWdlZCBoZSBoZWxkIHdvbWVuIGNhcHRpdmUgYW5kIHJhbiBhICJzZXggY3VsdC4iClRoYXQgbGlrZSBzYXlpbmcgSSBzaG91bGRuIHdvcnJ5IGFib3V0IGNhciBhY2NpZGVudHMgYmVjYXVzZSBJIG1pZ2h0IGdldCBoaXQgYnkgYSBtZXRlb3JpdGUuIFRoaXMgc3BlYWtzIHRvIGFuIGluYWJpbGl0eSB0byBhc3Nlc3MgdGhlIGZhaWx1cmUgbW9kZXMgYW5kIGVmZmVjdHMsIGEgbGFjayBvZiB1bmRlcnN0YW5kaW5nIG9mIHRoZSBhYmlsaXR5IHRvIG1pdGlnYXRlIG9yIGNvbnRyb2wgdGhlIHNldmVyaXR5IG9mIGEgZmFpbHVyZSwgYW5kIGEgZ2VuZXJhbCByZXNpZ25hdGlvbiB0byBqdXN0IGxldHRpbmcgdGhpbmdzICJwbGF5IG91dCIgYmVjYXVzZSAieW91IGNhbiBwcmVkaWN0IGV2ZXJ5dGhpbmciIGFuZCAiaXQgaGFzbiBiZWVuIGEgcHJvYmxlbSB5ZXQiIChpZSwgZ2VuZXJhbCBtYW5hZ2VyaWFsIGxhY2sgb2YgdW5kZXJzdGFuZGluZyBhbmQgbWlzcHJpb3JpdGl6YXRpb24pLi4gCkpvYiBUaGUgQnVyZWF1IG9mIExhYm9yIFN0YXRpc3RpY3MgbGlzdHMgRUhTIHNwZWNpYWxpc3RzIHVuZGVyIHRoZSBjYXRlZ29yeSBvZiBvY2N1cGF0aW9uYWwgaGVhbHRoIGFuZCBzYWZldHkgc3BlY2lhbGlzdHMuIFRoZXNlIHNwZWNpYWxpc3RzIGVhcm5lZCBhIG1lYW4gJDMyLjM3IHBlciBob3VyIG9yICQ2NywzNDAgcGVyIHllYXIgYXMgb2YgTWF5IDIwMTEuIFRoZSBtZWRpYW4gaW5jb21lIHdhcyAkNjYsMjcwIGEgeWVhci4gVGhlIGxvd2VzdCBlYXJuaW5nIDEwIHBlcmNlbnQgbWFkZSAkMzksNzcwIGEgeWVhciBvbiBhdmVyYWdlLCB3aGlsZSB0aGUgaGlnaGVzdCBlYXJuaW5nIDEwIHBlcmNlbnQgbWFkZSAkOTYsMDMwLgpUaGUgcmVzdWx0aW5nIHNlbnRlbmNlIHdhcyB0aW1lIHNlcnZlZCwgNSB5ZWFycyBvZiByYXBpbmcgdG9ydHVyZSBwcm9iYXRpb24sIGFuZCBzZXggb2ZmZW5kZXIgcmVnaXN0cmF0aW9uLiAKVXNlIHRoZSBwcm9maXQgbW90aXZlIHdoZW4gaXQgYXBwcm9wcmlhdGUuIFRoZXJlIGlzIGEgbGltaXRlZCBzdXBwbHkgb2YgaGVhbHRoY2FyZSBhbmQgYW4gdW5saW1pdGVkIGRlbWFuZCBmb3IgaGVhbHRoLiAKSSBzdGlsbCBmaWdodGluZyB0aGUgZGVoeWRyYXRpb24vZHJ5IG1vdXRoLiBJIGRyaW5rIGFuZCBwZWUgc28gbXVjaCwgSSBkb24gdW5kZXJzdGFuZCBob3cgSSBjYW4gc3RpbGwgYmUgc28gZHJ5LiBWZXJ5IGZydXN0cmF0aW5nLiAKRmxleCBtZW50YWxpdHkgcHJlc3N1cmVkIG1lIGludG8gcGxheWluZyB0YW5rL2hlYWxlcnMgaW4gYWJvdXQgNTAlIG9mIG15IHBsYWNlbWVudCBnYW1lcywgZXZlbiB0aG91Z2ggdGhpcyBpcyBzdXBwb3NlZCB0byBiZSBhIERQUyBhY2NvdW50LiBXaGF0IEkgZm91bmQgaXMgSSBwbGFjZWQgYWxtb3N0IGV4YWN0bHkgd2hlcmUgSSBiZWVuIGF0IG15IGVudGlyZSBPVyBjYXJlZXIuIApJcyB0byBiZSBhYmxlIHRvIGNvbGxlY3QgdGhlIG1vc3QgcmVsaWFibGUgc3BlY2ltZW4uIApTb21lIG9mZmljZXMgYXJlIG5vdyBldmVuIHRha2luZyBwYXRpZW50cyB0byBzbWFsbCBjbGFpbXMgY291cnQuIFlvdSByZWNlaXZlZCBhIHNlcnZpY2UsIGNvdmVyZWQgb3Igbm90IGJ5IHlvdXIgY3JhcHB5IGRlbnRhbCAiaW5zdXJhbmNlIiwgeW91IGFyZSByZXNwb25zaWJsZSBmb3IgdGhlIGZlZS4KVGhlc2UgbGFzdCAxMCB5ZWFycyBoYXZlIGRlZmluaXRlbHkgdGFrZW4gYSB0b2xsIG9uIG1lIGFzIGEgZmFuLiBJIHN0aWxsIGxvdmUgdGhlIFZvbHMsIHRoZXkgYXJlIHRoZSBzcG9ydHMgdGVhbSBJIGNhcmUgYWJvdXQgdGhlIG1vc3QgYnkgYSBsb25nIHNob3QuIFRoYXQgc2FpZCwgSSBsb29rIGF0IFNhdHVyZGF5cyBkaWZmZXJlbnRseSBub3cuIFRoZSBvdXRjb21lIG9mIHRoZSBnYW1lIGlzbiBhcyBpbXBvcnRhbnQgYXMgaGFuZ2luZyBvdXQgd2l0aCBteSBmcmllbmRzLCB0YWlsZ2F0aW5nIGFuZCBoYXZpbmcgYSBnb29kIHRpbWUuClVzaW5nIEhhc2tlbGwgdG8gZ2VuZXJhdGUgcGFzc3BocmFzZXMgb2YgdGhlIGZvcm0KQmFua2VycyB3aG8gd29ya2VkIG9uIHRoZSB0cmFuc2FjdGlvbiBzYXkgdGhhdCBNciBaYWZpcm92c2tpIHNlZW1lZCB0byBlc3RhYmxpc2ggYSByYXBwb3J0IHdpdGggdGhlIEh1YXdlaSBzaWRlLiBUaGlzIHdhcyBpbiBwYXJ0IGJlY2F1c2UgTXIgWmFmaXJvdnNraSBoYWQgaW1taWdyYXRlZCBmcm9tIHdoYXQgaXMgbm93IE1hY2Vkb25pYSBidXQgd2FzIHRoZW4gcGFydCBvZiBZdWdvc2xhdmlhLApUd28gbGVjaG9ucywgYW5kIG5vb2RsZXMgYW5kIHJpY2UgYW5kIGRlc3NlcnRzIGFuZCBhbGwgc29ydHMuLiAKUGxlYXNlIG5vdGUgdGhhdCBhIG5lZ2F0aXZlIHRlc3QgZG9lc250IGd1YXJhbnRlZSB0aGF0IHlvdXIgZGlzZWFzZSBmcmVlIGlmIHlvdSBoYXZlIGEgcmVjZW50IGV4cG9zdXJlIGFuZCBkb2VzIGhhdmUgYSBmYWxzZSBuZWdhdGl2ZSByYXRlcyBiZXR3ZWVuIDEgMTAlIEkgZG8gMyB0ZXN0cyAzIG1vbnRocyBhcGFydCB0aGVuIGFub3RoZXIgMSB5ZWFyIGxhdGVyIGlmIHlvdXZlIGhhZCBhIHJlY2VudCBoaWdoIHJpc2sgZXhwb3N1cmUuIFBsZWFzZSB1c2UgY29uZG9tcyAsIGF2b2lkIHVudGVzdGVkIHByb3N0aXR1dGVzIG9yIHVzZSBkaXNwb3NhYmxlIG5lZWRsZXNuaWYgYW55IGFwcGx5LiAKU3BhbW1lICAxIHBvaW50ICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KSG9wZWZ1bGx5IHRoYXQgcHJvdmlkZXMgc29tZSBtb3RpdmF0aW9uLiAKSGVhbHRoIGNhcmUgaXMgYSBjb21wbGV4IHNwZWN0cnVtIG9mIG5lZWRzLCBlbmNvbXBhc3NpbmcgY2hyb25pYyBkaXNlYXNlcywgbWVudGFsIGhlYWx0aCBhbmQgd2VsbG5lc3MsIGVtZXJnZW5jeSwgYWN1dGUgY2FyZSwgcG9zdCBhY3V0ZSBjYXJlLCBhbmQgaG9tZSBjYXJlLiBUaGVyZSBpcyBncmVhdCB2YWx1ZSBpbiByZWFsaWduaW5nIHNlcnZpY2VzIHRvIGVuc3VyZSB0aGF0IGNvc3RseSBpbmZyYXN0cnVjdHVyZSBub3QgcmVxdWlyZWQgb24gYW4gZW1lcmdlbmN5IGJhc2lzIGlzIGFtYWxnYW1hdGVkIHRvIHNhZmVndWFyZCBzdXN0YWluYWJpbGl0eS4gVGhpcyB0aW1lbHkgb3Bwb3J0dW5pdHkgdG8gYnVpbGQgbmV3IHN0YXRlIG9mIHRoZSBhcnQgaW5mcmFzdHJ1Y3R1cmUgaW4gV2luZHNvciBFc3NleCBwZXJtaXRzIHRoaXMgcmVhbGlnbm1lbnQgdGhhdCBjb3VsZCBvcGVuIHVwIG9wZXJhdGluZyBkb2xsYXJzIHRvIGJlIHVzZWQgaW4gb3RoZXIgYXJlYXMgb2YgY2FyZS4KSmFuIE1jTWlsbGVuOiBObywgSSB0aGluayB0aGlzIGlzIGEgc2hhcmVkIHJlc3BvbnNpYmlsaXR5LCBJIGFncmVlIHRoYXQgaW5kaXZpZHVhbHMgbXVzdCBhY2NlcHQgc29tZSByZXNwb25zaWJpbGl0eSBmb3IgdGhlaXIgYWN0aW9uLiAKWW91IGNvYWNoIHBlb3BsZSB0byBwbGF5IHRoaXMgbml0dHkgc3R5bGUgdG8gbWFrZSBtb25leSBhdCB0aGVzZSBzdGFrZXMgdGhlbiBjb21wbGFpbiB0aGF0IHRvbyBtdWNoIG9mIHRoZSBwbGF5ZXIgcG9vbCBpcyBwbGF5aW5nIHByb3Blcmx5IHRvIG1ha2UgaXQgbm9vYiBmcmllbmRseSwgc3VyZWx5IHlvdSBhcmUganVzdCBhcyBndWlsdHkgYXMgcHJvZml0aW5nIG9yIGNyZWF0aW5nIHRoaXMgZW52aXJvbm1lbnQgaW4gdGhlIGZpcnN0IHBsYWNlPwpGb29kLCBHbG9yaW91cyBGb29kIE1hY2F1IGltcG9ydHMgYSBsYXJnZSBhbW91bnQgb2YgaXRzIGZydWl0cyBhbmQgdmVnZXRhYmxlcywgbWFraW5nIGV2ZW4gZGFpbHkgaXRlbXMgbGlrZSBsZW1vbiBleHBlbnNpdmUsIG9uZSBvZiB0aGUgbG9jYWwgcmVzaWRlbnRzIGNhc3VhbGx5IGluZm9ybWVkIHVzIGluIHRoZSBtaWRkbGUgb2YgYSBjb252ZXJzYXRpb24uIEluc2lkZSB0aGUgcHJvcGVydHksIGFjY2Vzc2liaWxpdHkgaXNuIGFuIGlzc3VlLiBUaGVyZSBhcmUgcGxlbnR5IG9mIHJlc3RhdXJhbnRzIEZyZW5jaCwgQ2hpbmVzZSBhbmQgZXZlbiBJbmRpYW4uIFRoZSBwcm9wZXJ0eSBib2FzdHMgYXV0aGVudGljaXR5IGluIGVhY2ggY3Vpc2luZS4gSWYgdGhlIExvdHVzIFBhbGFjZSBvZmZlcnMgYSB2YXJpZWQgc2VsZWN0aW9uIG9mIGZyZXNoIHNlYWZvb2QsIGhvdCBwb3QsIGRpbSBzdW0gYW5kIHByb3ZpbmNpYWwgQ2hpbmVzZSBkaXNoZXMsIFRoZSBCcmFzc2VyaWUgYWltcyBhdCBhdXRoZW50aWMgRnJlbmNoIGZsYXZvdXJzLCBpdHMgc2lnbmF0dXJlIGRpc2hlcyBiZWluZyB0aGUgR2FsZXR0ZSBDb21wbHRlLCBhIGJ1Y2t3aGVhdCBjcmVwZSBmaWxsZWQgd2l0aCBjaGVlc2UsIGZyaWVkIGVnZ3MgYW5kIFBhcmlzIGhhbSB3aXRoIGEgZ3JlZW4gc2FsYWQgYW1vbmcgb3RoZXIgZGlzaGVzLiBUaGUga2l0Y2hlbiBhdCBHb2xkZW4gUGVhY29jayBvZmZlcnMgdHJhZGl0aW9uYWwgSW5kaWFuIGN1aXNpbmUgYW5kIGlzIGxlZCBieSBDaGVmIEp1c3RpbiBQYXVsLCBmcm9tIEtlcmFsYS4gQmVzaWRlcyBoaW0sIHRoZXJlIGFyZSAxMSBJbmRpYW5zIGluIHRoZSB0ZWFtIG9mIDEzIGNoZWZzLiBBIHJlY2lwaWVudCBvZiBvbmUgc3RhciByYXRpbmcgaW4gdGhlIE1pY2hlbGluIEd1aWRlIGZvciBIb25nIEtvbmcgYW5kIE1hY2F1IGZvciBmaXZlIGNvbnNlY3V0aXZlIHllYXJzIHNpbmNlIDIwMTQsIGl0IGltcG9ydHMgc3BpY2VzIGZyb20gSW5kaWEgYW5kIHByZXBhcmVzIG5lYXJseSBldmVyeXRoaW5nIGluIGhvdXNlIGZyb20geW9ndXJ0LCBwYW5lZXIgYW5kIGljZSBjcmVhbSB0byBtYXNhbGFzLCBzYXVjZXMsIHBpY2tsZXMgYW5kIGNodXRuZXlzLgpBbGwgeW91IGhhdmUgdG8gZG8gaXMgZmluZCBhIGdvb2QsIHJlbGlhYmxlIG9ubGluZSBwb2tlciBzaXRlLCByZWdpc3RlciBhbiBhY2NvdW50IGF0IHRoZSB3ZWJzaXRlLCBkZXBvc2l0IHNvbWUgZnVuZHMsIGxvYWQgdGhlIGdhbWUgYW5kIHBsYXkgd2hlbmV2ZXIgeW91IGxpa2UgZm9yIGFzIGxvbmcgYXMgeW91IGxpa2UuIApOb3RoaW5nIGVsc2UgY2FuIGhhcHBlbiB1bnRpbCB0aGF0IGhhcHBlbnMuIApJIHNjYWxlZCBiYWNrIHRoZSB0cmV0IHRvIHR3aWNlIGEgd2VlaywgTW9uZGF5IG5pZ2h0cyBhbmQgVGh1cnNkYXkgbmlnaHRzLiBUaGVuIEkgc3RhcnRlZCB1c2luZyBOaWFjaW5hbWlkZSBldmVyeSBtb3JuaW5nLCBhbmQgc3RhcnRlZCB1c2luZyBhbiBBSEEvQkhBIHBlZWwgb24gU2F0dXJkYXkgbmlnaHRzLiBUaGlzIHdhcyBhbWF6aW5nIGZvciBtYW5hZ2luZyBvaWwgcHJvZHVjdGlvbiBhbmQgY2xvZ2dlZCBwb3JlcywgYnV0IG15IHNraW4gd2FzIG1pc3NpbmcgdGhlIHRyZXQgYXQgdGhpcyBwb2ludC4gClBhdWwgUHJlbnRlciB3YXMgYW4gaXNzdWUgYW5kIGhlIGRpZCBjcmVhdGUgYSByaWZ0LCBidXQgaGUgd2FzIG91dCBvZiB0aGUgcGljdHVyZSBiZWZvcmUgbGl2ZSBhaWQgYW5kIGhlIGFjdHVhbGx5IGJldHJheWVkIEZyZWRkaWUgaW4gMTk5MC85MSBieSBsZWFraW5nIHRvIHRoZSBwcmVzcyB0aGF0IEZyZWRkaWUgaGFkIEFJRFMuIEhlIGRpZCBpdCBmb3IgMzAsMDAwLgpGcmVkTWMgdQpBcyBmb3IgTWljaGFlbCBKYWNrc29uIGhpbXNlbGYsIGhlIHRvbGQgV2luZnJleTogYSBibGFjayBBbWVyaWNhbiwgSSBwcm91ZCB0byBiZSBhIGJsYWNrIEFtZXJpY2FuLCBJIGFtIHByb3VkIG9mIG15IHJhY2UuIEkgaGF2ZSBhIGxvdCBvZiBwcmlkZSBpbiB3aG8gSSBhbSwgYW5kIGRpZ25pdHkuIDQ6TWljaGFlbCBKYWNrc29uIGRpZCBub3QgaW52ZW50IHRoZSBtb29ud2Fsay4gCmZvdXIgZWdncyBob2xkaW5nIHVwIE90dGF3YSBtdXNpYyBmZXN0aXZhbApJbiBmaXJzdCBoYWx2ZXMgaG93ZXZlciwgZGVmZW5jZXMgYXJlc2V0IGZvciBsb25nZXIgcGVyaW9kcy4gCkhvdyBkb2VzIG9uZSBiZWNvbWUgYW4gTkcgRXhwbG9yZXI/IFdlbGwsIHRoZXJlIEkgd2FzIG9uZSBtb3JuaW5nIGRyaW5raW5nIGNvZmZlZSB3aXRoIG15IGNhdCBhbmQgY2hlY2tpbmcgbXkgZW1haWwuIApJIGNvbmN1ci4gVGhlIHRyYWlsZXJzIGRpZG4gZ3JhYiBteSBhdHRlbnRpb24gbGlrZSBvdGhlciBNYXJ2ZWwgbW92aWVzIGRpZC4gCklmIHlvdSB3YW50IGEgcGxhY2UgY2xvc2UgdG8gT2t0b2dvbiwgdGhlIFN6YW1vcyBjdWtyYXN6ZGEgaGFzIGEgbG9jYXRpb24gYXQgdGhlIENvcmludGhpYSBob3RlbCBqdXN0IGRvd24gdGhlIHN0cmVldCBhbmQgaXQgcHJldHR5IGdvb2QuClRoZSBQYWNlcnMgY291bGQgb3BlbiB1cCBtYXggc3BhY2UuIFRoZSBNYXZzIGNvdWxkIHBvc3NpYmx5IGdldCB0byBtYXggc3BhY2UuIApZZXAsIEkgZWF0IDUgZnVlbGluZ3MgYSBkYXkgYW5kIDEgbGVhbiBhbmQgZ3JlZW4sIHNvIHRoZSA1IHBsYW4uIApUaGUgb3JpZ2luIG9mIFBva2VyCiJQb3ZlcnR5IGlzIHdlbGwgbmlnaCBlcmFkaWNhdGVkIGZyb20gdGhlIERvbWluaW9uIGFuZCBpbiBpdHMgd29yc3QgZm9ybXMgZG9lcyBub3QgZXhpc3QgYXQgYWxsLiAKQnJpdGlzaCBDb2x1bWJpYSBGaW5hbmNlIE1pbmlzdGVyIE1pa2UgZGUgSm9uZywgd2hvIGhhZCByZXNlcnZhdGlvbnMgYWJvdXQgZXhwYW5kaW5nIHRoZSBDUFAsIHNhaWQgaGUgY2FtZSBvbiBib2FyZCBiZWNhdXNlIHRoZSBwbGFuIGlzIGFmZm9yZGFibGUuCkhvcGVmdWxseSBJIGNhbiBzYXZlIHlvdSBzb21lIHRpbWUgYnkgZ2l2aW5nIHlvdSBhIGdsaW1wc2Ugb2YgbXkgb3duIHBlcnNvbmFsIGV4cGVyaWVuY2VzIHdpdGggdGhpcyBwb2tlciBjaGlwIHNldC4gRXZlcnkgeWVhciB3ZSBnZXQgaW52aXRlZCB0byBhIGxvY2FsIHRvdXJuYW1lbnQgdGhhdCBpcyBjbG9zZSB0byB0aGUgV1NPUCBhcyB3ZSB3aWxsIGV2ZXIgc2VlLiBJbiBhbGwgdGhlcmUgYXJlIGp1c3QgZmV3ZXIgdGhhbiAxMDAwIHBlb3BsZSB3aG8gZW50ZXIgZm9yIGEgY2hhbmNlIHRvIHdpbiBhIFdTT1Agc2VhdCBhbmQgc29tZSBtb25leSBmb3IgZXhwZW5zZXMuIFBlcnNvbmFsbHksIEkgaGF2ZSBubyBpbnRlbnRpb24gdG8gcmVhY2ggdGhhdCBwbGF0ZWF1LCBidXQgSSBlbmpveSB0cnlpbmcgdG8gd2luIHNvbWUgbW9uZXkuCklmIHlvdSBsaWtlIHdoYXQgeW91IHNlZSwgeW91IGNhbiB1cGdyYWRlIGFuZCBvYnRhaW4gZnVsbCBhY2Nlc3MgaW1tZWRpYXRlbHkhIEluIDIwMTAsIG5lYXJseSBvZiBhIHF1YXJ0ZXIgb2YgYWxsIGJsYWNrIG1lbiBtYXJyaWVkIG91dHNpZGUgb2YgdGhlaXIgcmFjZSwgYWNjb3JkaW5nIHRvIHRoZS4gSGVyIGZhdGhlciBpcyBvZiBtaXhlZCBoZXJpdGFnZSAgIGhhbGYgSmFtYWljYW4gaGFsZiBDaGluZXNlLCB3aGlsZSBoZXIgbW90aGVyIGlzIGEgYmxhY2sgSmFtYWljYW4uIEJ5IGNob29zaW5nIHRvIGluY2x1ZGUgbXl0aCAxMSBpbiBoZXIgbGlzdCwgYnV0IGJ5IGFkbWlzc2lvbiBjaG9vc2luZyB0byBub3QgYW5zd2VyIHRoZSBxdWVzdGlvbiwgZWl0aGVyIG91dCBvZiBjdXRlbmVzcyBvciB0cnlpbmcgdG8ga2VlcCB0aGlzIGFydGljbGUgbm9uIFIgcmF0ZWQsIHNoZSBpbiBmYWN0LCBsZWF2ZXMgdGhlIHNvZnQgaW1wcmVzc2lvbiB0aGF0IHRoZSBzdGVyZW90eXBlIG1heWJlIHRydWUuIFRoZXJlIGFyZSBtYW55IGJlaGF2aW91cnMgdGhhdCBhcmUgZW1waGFzaXplZCBpbiBhIHRyYWRpdGlvbmFsIGFzaWFuIGN1bHR1cmUuIFRoZXJlIGlzIGEgZGlmZmVyZW5jZSBiZXR3ZWVuIGhhdmluZyB5ZWxsb3cgZmV2ZXIgYW5kIHNpbXBseSBiZWluZyBhdHRyYWN0ZWQgdG8gdGhlIHBoeXNpY2FsIGZlYXR1cmVzIG9mIHBlb3BsZSBmcm9tIGEgY2VydGFpbiBjdWx0dXJlLiBJIGxvdmUgaGltIGZvciB3aG8gaGUgaXMsIG5vdCBmb3IgdGhlIGNvbG91ciBvZiBoaXMgc2tpbi4gSW4gQXNpYW4gY3VsdHVyZSwgbWFsZXMgYXJlIG5vdCBlbmNvdXJhZ2VkIHRvIGJlIGV4cHJlc3NpdmUgd2l0aCB0aGVpciBlbW90aW9ucy4KTmV3IGdpZyAkODBrICsgMTAlIGJvbnVzIHNvICQ4OEssIGN1cnJlbnQgaXMgbm93ICQ2NUsgYWZ0ZXIgdGhpcyBtb3JuaW5ncyByYWlzZSwgd2l0aCBhIGJvbnVzIGVxdWFsIHRvIDElIG9mIGdyb3NzIGZlZXMgYnJvdWdodCBpbiBieSB0aGUgdGVhbSAob24gcGFjZSBmb3IgJDEuNSAyTSBpbiBmZWVzIHNvICQxNSAyMEsgaW4gYm9udXMpLiAKWW91IGJlZW4gcGxheWluZyB5b3VyIGNoYXJhY3RlciBhcyBhbiBhc3Nob2xlLiBOb2JvZHkgbGlrZXMgdG8gcGxheSBhdCB0aGUgdGFibGUgd2l0aCBhbiBhc3Nob2xlLCBpdCBtYWtlcyB0aGUgZ2FtZSB1biBmdW4uIEl0IGF3a3dhcmQgYW5kIGl0IGNyaW5nZSBpbmR1Y2luZyBhbmQgbm9ib2R5IHJlYWxseSB3YW50cyB0byBiZSBpbnZvbHZlZCB3aXRoIHlvdXIgc2hlbmFuaWdhbnMsIGJ1dCB0aGV5IGZlZWwgbGlrZSB0aGV5IGhhdmUgdG8gYmVjYXVzZSB0aGV5IGFsbCBwdXQgb3V0IHRoZSBlZmZvcnQgdG8gYmUgdGhlcmUuIApJIGhhZCBhIGZvcmVuc2ljIHNjaWVuY2UgdGVhY2hlciBiYWNrIGluIGhpZ2ggc2Nob29sIHdobyB0b2xkIHVzIHRoYXQgc3RhdGlzdGljYWxseSwgeW91IGFyZSBsZWFzdCBsaWtlbHkgdG8gYmUgdGFyZ2V0ZWQgaWYgeW91IGFyZSB0YWxraW5nIG9uIHRoZSBwaG9uZSAob3IgcHJldGVuZGluZyB0byB0YWxrIG9uIHRoZSBwaG9uZSkgYW5kIGxvdWRseSBhbmQgY29uZmlkZW50bHkgZGVzY3JpYmluZyB3aGVyZSB5b3UgYXJlLCB3aGlsZSBsb29raW5nIGF0IHBlb3BsZSBhcm91bmQgeW91IG9yIHRoYXQgbWF5IGJlIGZvbGxvd2luZyB5b3UgaW4gdGhlIGV5ZSBhcyB5b3UgcGFzcyB0aGVtLiAKU3BlYWtpbmcgYXMgYSB0ZWNobmljaWFuLCBvd25lcnMgZnJlcXVlbnRseSB0cmVhdCB1cyBsaWtlIGdhcmJhZ2UsIHJlZnVzaW5nIHRvIHRhbGsgdG8gdXMgYmVjYXVzZSB3ZSBudXJzZXMgV2hpbGUgSSBkbyBiYXNpYyBjaGVjayBpbnMgYW5kIGhpc3RvcnksIEkgYWxzbyBhIHBoYXJtYWN5IHRlY2gsIGEgbGFiIHRlY2gsIGFuIGFuZXN0aGVzaWEgbnVyc2UsIGEgZGVudGFsIGh5Z2llbmlzdCwgYSBwaGxlYm90b21pc3QsIGFuZCBhbiB1bmRlcnRha2VyLiAKV2hlbiB5b3UgY2FuJ3QgcmVtb3ZlIGFuIGFidXNpdmUgcGVyc29uIGZyb20geW91ciBsaWZlLCB5b3UgaGF2ZSB0byByZW1vdmUgdGhlaXIgcG93ZXIgb3ZlciB5b3UuIApBbmQgaG93IGRvIHlvdSBldmVuIGtub3cgdGhleSBsaXZlZCB0aHJ1IEppbSBjcm93IGxhd3M/IFRob3NlIGVuZGVkIGNsb3NlIHRvIDcwIHllYXJzIGFnby4gClJpY2hhcmQgcmV0aXJlZCBmcm9tIFNsYXRlciBTdGVlbCBhZnRlciAzNSB5ZWFycyBvZiBzZXJ2aWNlLiBIZSB3YXMgYW4gYXZpZCBOYXNjYXIgZmFuLCBlbmpveWVkIGhpcyB3ZWVrbHkgcG9rZXIgbWVldHMsIHRyYXZlbGluZyBhbmQgd2FzIGEgaHVnZSBzcG9ydHMgZW50aHVzaWFzdCBlc3BlY2lhbGx5IGhpcyBiZWxvdmVkIFRpQ2F0cyBhbmQgTWFwbGUgTGVhZnMuIApDaHJpc3RpYW5zIHRoaW5rIHlvdSBuZWVkIHRvIHdhdGNoIHRoZSBmaXJzdCB0d28sIGJ1dCB0aGUgdGhpcmQgbW92aWUgZG9lc24ndCBjb3VudC4gClVwIHN0YWlycywgaW4gdGhlIHNvbGVtbiBlY2hvaW5nIGRyaXZlIHNoZSBsZXQgZm91ciB0YXhpY2FicyBkcml2ZSBhd2F5IGJlZm9yZSBzaGUgc2VsZWN0ZWQgYSBuZXcgb25lLCBsYXZlbmRlciBjb2xvcmVkIHdpdGggZ3JheSB1cGhvbHN0ZXJ5LCBhbmQgaW4gdGhpcyB3ZSBzbGlkIG91dCBmcm9tIHRoZSBtYXNzIG9mIHRoZSBzdGF0aW9uIGludG8gdGhlIGdsb3dpbmcgc3Vuc2hpbmUuIApJIGhhdmUgaGVhcmQgbXVsdGlwbGUgc3RvcmllcyBvZiBmb3JlaWduZXJzIGhhdmluZyBpbW1pZ3JhdGlvbiBjb21lIHVwIHRvIHRoZW0gYW5kIGZpbmUgdGhlbSAxMDBrIHRoYi4gSWYgYSBUaGFpIHRha2VzIGEgcGljdHVyZSBvZiB5b3UgZG9pbmcgc29tZSB0eXBlIG9mIGZvcmJpZGRlbiBmb3JlaWduZXIgd29yaywgZXZlbiB3aXRoIGEgd29yayBwZXJtaXQsIHlvdSBtYXkgZ2V0IGNoYXJnZWQuIApJZiB5b3UgZGVzcGVyYXRlIHlvdSBjb3VsZCB0cnkgL3IvQXNrRG9jcy8gYXMgYXBwYXJlbnRseSB0aGV5IHZlcmlmeSB0aGVpciBkb2N0b3JzLiAKVGhlIHZpY3RpbXMgaGFkIGZvbGxvd2VkIGFuIGVtb3Rpb25hbCByZXNwb25zZSB0aGF0IHdhcyBpbiBnZW5lcmFsIGEgZ29vZCBvbmUgZm9yIHRoZSBvcmdhbmlzbSwgdG8gZ2V0IGFpci4gCkFuZCB0aGUgc2hpZnQgaGFzIGdvbmUgZnVydGhlciBub3csIGl0J3Mgbm93IHNlZW4gdmVyeSBtdWNoIGFzIGEgcHVibGljIGhlYWx0aCBpc3N1ZSwgdGhhdCB0aGUgcHJvYmxlbSBpcyBub3QganVzdCB3aXRoIHRoZSBpbmRpdmlkdWFsLCBpdCdzIHdpdGggdGhlaXIgZW52aXJvbm1lbnQ7IGl0IGFmZmVjdHMgZmFtaWxpZXMgYW5kIGl0IGFmZmVjdHMgY29tbXVuaXRpZXMuIApJIGFsc28gYmVnYW4gdHJhY2tpbmcgbWFjcm8gbnV0cmllbnRzIGluIG15Zml0bmVzc3BhbCwgbWFraW5nIHN1cmUgdGhhdCBJIGdldHRpbmcgYWxsIG9mIHRoZSBwcm90ZWluIEkgbmVlZCBhbmQgY29uc3VtaW5nIGNhcmJzIGFyb3VuZCBteSB3b3Jrb3V0cy4gSSBhbHNvIHN0YXJ0ZWQgZG9pbmcgaW50ZXJtaXR0ZW50IGZhc3RpbmcgYW5kIHdpbGwgZ28gZm9yIGEgbG9uZyBmYXN0ZWQgd2FsayBkdXJpbmcgdGhlIGRheSwgZXNwZWNpYWxseSBvbiBkYXlzIEkgbm90IHdvcmtpbmcgb3V0LkluIG9yZGVyIHRvIG1ha2UgYSBiaWcgZGlmZmVyZW5jZSBpbiB5b3VyIHdlaWdodCBhbmQgYXBwZWFyYW5jZSB5b3UgbmVlZCB0byBwdXQgYSBsb3Qgb2YgZWZmb3J0IGludG8gY2hhbmdpbmcgeW91ciBsaWZlc3R5bGUgYW5kIGhhYml0cyBhbmQgYWZ0ZXIgeW91IGdldCBvdmVyIHRoZSBpbml0aWFsIGh1bXAsIG1hbnkgcGVvcGxlIGVuam95IGxpdmluZyBhIGhlYWx0aGllciBsaWZlc3R5bGUgYW5kIHNlZSByZWFsIHJlc3VsdHMuIApUaGUgc2Vjb25kIGVpZ2h0IGNvdW50cyBhcmUgbW9yZSBleHBsb3NpdmUgdGhhbiB0aGUgZmlyc3QgYmVjYXVzZSB0aGV5IGluY2x1ZGUgdHdvIHRoaW5ncyB0aGF0IGhlbHBlZCBwcm9wZWwgdGhlIGluY2lkZW50IGludG8gYW4gaW50ZXJuYXRpb25hbCBzZW5zYXRpb24uIApUaGVyZSdzIG1lc3NhZ2VzIGluIGV2ZXJ5IGdhbWUuIExpa2UgUGFjIE1hbi4gRG8geW91IGtub3cgd2hhdCBQQUMgc3RhbmRzIGZvcj8gUCBBIEM6ICJwcm9ncmFtIGFuZCBjb250cm9sLiIgSGUncyBQcm9ncmFtIGFuZCBDb250cm9sIE1hbiB0aGUgd2hvbGUgdGhpbmdzIGEgbWV0YXBob3IsIGhlIHRoaW5rcyBoZSdzIGdvdCBmcmVlIHdpbGwgYnV0IHJlYWxseSBoZSdzIHRyYXBwZWQgaW4gYSBtYXplLCBpbiBhIHN5c3RlbSwgYWxsIGhlIGNhbiBkbyBpcyBjb25zdW1lLCBoZSdzIHB1cnN1ZWQgYnkgZGVtb25zIHRoYXQgYXJlIHByb2JhYmx5IGp1c3QgaW4gaGlzIG93biBoZWFkLCBhbmQgZXZlbiBpZiBoZSBkb2VzIG1hbmFnZSB0byBlc2NhcGUgYnkgc2xpcHBpbmcgb3V0IG9uZSBzaWRlIG9mIHRoZSBtYXplLCB3aGF0IGhhcHBlbnM/IEhlIGNvbWVzIHJpZ2h0IGJhY2sgaW4gdGhlIG90aGVyIHNpZGUuIApMJ2FwcHJvY2hlIGp1cmlkaXF1ZSAoYXZlYyBsJ2FwcHJoZW5zaW9uIGV0IGxhIHNhbmN0aW9uIGRlIGNlIGNvbXBvcnRlbWVudCBpbmZyYWN0aW9ubmVsKSBldCBsJ2FwcHJvY2hlIG1kaWNhbGUgKGF2ZWMgbGEgZHRlY3Rpb24gZXQgbGVzIGNvbnNxdWVuY2VzIGRlIGNlIGNvbXBvcnRlbWVudCBwaHlzaXF1ZSB2aW9sZW50KSBzZXJvbnQgcGx1cyBwYXJ0aWN1bGlyZW1lbnQgcHJpdmlsZ2llcyBjb21wdGUgdGVudSBkZSBsZXVyIGltcG9ydGFuY2UgcG91ciBsYSBjb21wcmhlbnNpb24gZXQgbGUgdHJhaXRlbWVudCBkZSBjZSBjb21wb3J0ZW1lbnQuIApXZSBhcmUgdW5hYmxlIHRvIG1ha2UgZXZlbiBhIHdpbGQgZ3Vlc3MgYWJvdXQgdGhlIElNRiBkZWZpbml0aW9uIG9mIGZpc2NhbCBhbmQgbW9uZXRhcnkgcG9saWNpZXMuIApIYXZpbmcgYSBqb2IgZXZlbiBhIG5lYXJseSBmdWxsIHRpbWUgam9iIHdhcyB3aGF0IGhlbHBlZCBtZSBzdGF5IG1vc3QgZm9jdXNlZCBhdCBzY2hvb2wgKEJTICAgRUUvQ0UpLiBJdCBoZWxwcyBhdm9pZCBwcm9jcmFzdGluYXRpb24gZXhjdXNlcywgaGVscHMgd2l0aCBtYW5hZ2luZyB0aW1lLCBhbmQgaWYgeW91IHdvcmsgaXQgd2VsbCBlbm91Z2ggeW91IGFjdHVhbGx5IGhhdmUgc29tZSBzZW1ibGFuY2Ugb2YgaW5kZXBlbmRlbmNlIGF0IHRoZSBlbmQgb2YgdGhlIGRheS4gSWYgd29ya2luZyBpcyBvdmVyd2hlbG1pbmcgYnV0IHlvdSBzdGlsbCBuZWVkIG1vbmV5IEkgd291bGQgdGVsbCBhbnlvbmUgdG8gZm9jdXMgdGhlaXIgZGFtbmVkIGhhcmRlc3QgdG8gZ2V0IGEgam9iIHdpdGggdGhlIHNjaG9vbCB0aGV5IGF0dGVuZC4gSXQgdG9vayBtZSBhIGNvdXBsZSB5ZWFycyBidXQgaXQgaXMgcG9zc2libGUuIEFsc28gdHJ5IHByb3ZpZGluZyBwcml2YXRlIHR1dG9yaW5nIGluIHRoZSBjbGFzc2VzIHlvdSBwYXNzZWQsIHlvdSBjYW4gY2hhcmdlIGEgZGVjZW50IGFtb3VudCBtb3N0IHRpbWVzICh0YXggZnJlZSkgYW5kIHlvdSBjYW4gaGF2ZSB0aGVtIG1lZXQgeW91IGF0IHRoZSBsaWJyYXJ5IGF0IHRpbWVzIG1vc3QgY29udmVuaWVudCBmb3IgeW91LgpKYXNwcmVldCBTcmFuLCBoZXIgZnJpZW5kLCBhbmQgaGVyIG1vdGhlciBpbiBsYXcgd2VyZSBkcml2aW5nIG9uIEhpZ2h3YXkgNDEwIGluIEJyYW1wdG9uIGFyb3VuZCBydXNoIGhvdXIgb24gV2VkbmVzZGF5IHdoZW4gYSBwaWVjZSBvZiB3b29kIGJyb2tlIGZyZWUgZnJvbSBhbiBTVVYgYWhlYWQgb2YgdGhlbS4KMTAgcG9pbnRzICBzdWJtaXR0ZWQgNyBtb250aHMgYWdvV2hpbGUgeW91IG5vdCB3cm9uZywgYSBjZW50cmFsIGFzcGVjdCBvZiBBcnlhIGNoYXJhY3RlciBpcyBoZXIgcmVqZWN0aW9uIG9mIHNvY2lldGFsIGNsYXNzIG5vcm1zLiBBbmQgbm93IHRoYXQgc2hlIChhbG1vc3Q/KSBhbiBhZHVsdCBvbiB0aGUgc2hvdywgc2hlIGNlcnRhaW5seSBoYXNuIGNoYW5nZWQgaGVyIG1pbmQuIFNoZSBzdGlsbCBoYXMgbm8gaW50ZXJlc3QgaW4gYmVpbmcgYSAicHJvcGVyIGxhZHkiIG9mIGhlciBob3VzZS4gCkRvZXMgc2hlIGxvb2sgYmV0dGVyIHdpdGggbWFrZXVwLCBzdXJlLiBUaGF0IHRoZSB3aG9sZSBwb2ludCBvZiBtYWtldXAuIERvIEkgZXhwZWN0IGhlciB0byB3ZWFyIGl0IGF0IGFsbCB0aW1lcywgbm8gb2YgY291cnNlIG5vdCwgYnV0IGl0IG5pY2Ugd2hlbiBzaGUgZGVjaWRlcyB0by4gRXZlcnlvbmUgd2FudHMgdGhpbmdzLiBNb3N0IG9mIHRoZW0gdW5yZWFsaXN0aWMuIFNvIGxvbmcgYXMgdGhleSBwcm9jdXJlIHRob3NlIGRlc2lyZXMgd2l0aG91dCBoYXJtaW5nIGFueW9uZSBJIHdpc2ggdGhlbSB0aGUgYmVzdCBvZiBsdWNrLgpCb3kgR2V0cyBQbmV1bW9uaWEgRnJvbSBJbmhhbGluZyBQb3Bjb3JuLCBNb20gU2hhcmVzIFdhcm5pbmdBIHR3byB5ZWFyIG9sZCBjaGlsZCBuZWFybHkgZGllZCBsYXN0IG1vbnRoIHdoZW4gaGUgZGV2ZWxvcGVkIGFzcGlyYXRpb24gcG5ldW1vbmlhIGFmdGVyIGVhdGluZyBwb3Bjb3JuIGFuZCBub3cgaGlzIG1vbSBpcyBzaGFyaW5nIHRoZSBleHBlcmllbmNlIHRvIHdhcm4gb3RoZXIgcGFyZW50cy4gS2lscGF0cmljayB3YXMgY29udmljdGVkIG9mIHJ1bm5pbmcgYSBjcmltaW5hbCBlbnRlcnByaXNlLCIgSnVkZ2UgTmFuY3kgRWRtdW5kcyBzYWlkLCBhZGRpbmcgdGhlIGVudGVycHJpc2Ugc3RhcnRlZCB3aGlsZSBoZSB3YXMgc3RpbGwgaW4gdGhlIHN0YXRlIEhvdXNlIG9mIFJlcHJlc2VudGF0aXZlcyBhbmQgY29udGludWVkIHRocm91Z2ggYWxsIHNpeCB5ZWFycyBoZSB3YXMgaW4gdGhlIG1heW9yIG9mZmljZS4KV2hhdCBwYXJhbGxlbHMgZG8geW91IGRyYXcgYmV0d2VlbiBjaGVzcyBhbmQgcG9rZXI/CkEgUGFraXN0YW5pIHNvdXJjZSByZXZlYWxlZCB0aGUgbWVldGluZyBiZXR3ZWVuIE1vZGkgYW5kIFNoYXJpZiB3YXMgc28gY29yZGlhbCB0aGF0IGR1cmluZyB0aGVpciBhbG1vc3QgNTAgbWludXRlIGNvbnZlcnNhdGlvbiwgdGhlcmUgd2FzIG5vIG1lbnRpb24gb2YgYW55IHN1YnN0YW50aXZlIG1hdHRlci4gCldoeSB0aGVuIHdhcyBEb2R0IG5vdCBtb3VudGluZyBhIHNlbGYgZGVmZW5zZSBjYXNlPwpJZiBJIGhhZCBnaXZlbiB0aGF0IGZpcnN0IEhPSCB0byBKYW1lcywgSSBjb3VsZCBoYXZlIGVhc2lseSBiZWVuIG9uIHRoZSBibG9jayBhbmQgb3V0IG9mIHRoZSBob3VzZS4gV2UgYWxzbyBkZWNpZGVkIGJlZm9yZSB0aGUgSE9IIHRoYXQgYSBnaXJsIGhhZCB0byB3aW4uIApIZSBpcyBjdXJyZW50bHkgc2VydmluZyBhbiBlaWdodCB5ZWFyIHNlbnRlbmNlIGZvciBicmVha2luZyBhbmQgZW50ZXJpbmcsIGFzc2F1bHQgYW5kIGFyc29uLlJlbGF0ZWRQYXJvbGUgZGVuaWVkIGZvciBtYW4gd2hvIGFzc2F1bHRlZCB3aWZlLCBzdGVwZGF1Z2h0ZXIgYmVmb3JlIHNldHRpbmcgaG91c2Ugb24gZmlyZVRoZSB1bmVzY29ydGVkIHBhcm9sZSBwZXJtaXRzIFJpY2hhcmQgdG8gYXR0ZW5kIGEgMTUgd2VlayBwcm9ncmFtIHRvIGRlYWwgd2l0aCBjaGlsZGhvb2QgdHJhdW1hOyBoZSBoYWQgYmVlbiBhYnVzZWQgYXMgYSBjaGlsZCBhbmQgd2l0bmVzc2VkIGRvbWVzdGljIGFidXNlLiAKVGhlcmUgaXMgd2lzZG9tIGluIGhhdmluZyBhbiBhZ2UgZ2FwIGJldHdlZW4gc3BvdXNlcy4gRm9yIHdvbWVuLCBhZ2UgaXMgKHVuZm9ydHVuYXRlbHkpIGEgZGViaXQsIGRlY3JlYXNpbmcgZmVydGlsaXR5LiBGb3IgbWVuLCBhZ2UgY2FuIGJlIGEgY3JlZGl0LCBpbmNyZWFzaW5nIHRoZWlyIGFjY2VzcyB0byByZXNvdXJjZXMgYW5kIGltcHJvdmluZyB0aGVpciBtYXR1cml0eSwgdGh1cyBtYWtpbmcgdGhlbSBtb3JlIGF0dHJhY3RpdmUgdG8gd29tZW4uIFdlIG1heSBhbGwgZGlzbGlrZSB0aGlzIHNjZW5hcmlvLCBidXQgd2UgY2FuIHdpbGwgaXQgYXdheS4KQSBmcmllbmQgd2FzIHB1bGxlZCBvdmVyIGJ5IElTUCBhdCBGcnVpdGxhbmQgZm9yICJoYXZpbmcgaGVyIHR1cm4gc2lnbmFsIG9uIDIgc2Vjb25kcyBsZXNzIHRoYW4gc2hlIHNob3VsZCBoYXZlIi4uIApMZXMgMTUgcHJlbWllcnMgbG9nZW1lbnRzIHNvY2lhdXggZGUgbGEgbWFuZGF0dXJlICAgbGUgTWFpcmUgbG9ycyBkZSBsYSBjYW1wYWduZSBsZWN0b3JhbGUgcydlc3QgZml4IGNvbW1lIG9iamVjdGlmIGQnZW4gY3JlciAxMDAwIGRhbnMgbCdhcnJvbmRpc3NlbWVudCBkJ2ljaSAyMDE0ICAgc2Vyb250IHJhbGlzcyBhdSA1IHJ1ZSBNb250aG9sb24gZGFucyBsZSBjYWRyZSBkJ3VuIGNvbnRyYXQgY29uZmkgIGxhIHNvY2l0IGQnY29ub21pZSBtaXh0ZSBTR0lNLCBsYSBWaWxsZSBheWFudCBwcmVtcHQgbCdpbW1ldWJsZSBmaW4gMjAwNy4gSWwgZmF1dCBub3RlciBsYSByYXBpZGl0IGF2ZWMgbGFxdWVsbGUgY2UgZG9zc2llciBhIHQgdHJhaXQgbWFsZ3IgbGEgcGF1c2UgZHVlIGF1eCBsZWN0aW9ucyBtYWlzIGlsIGZhdXQgYXVzc2kgbm90ZXIgdW5lIGNlcnRhaW5lIGFtYmlndXQgY29uY2VybmFudCBsZSBwcm9qZXQgZ2xvYmFsIGRlcyBsb2dlbWVudHMgc29jaWF1eCwgc2kgbm91cyBhdm9ucyBiaWVuIGNvbXByaXMgbGUgZGJhdCBxdWkgYSBldSBsaWV1ICBsJ29jY2FzaW9uIGRlIGNldHRlIGRsaWJyYXRpb24uIExhIFZpbGxlIHZhIGNyZXIgMTUgbG9nZW1lbnRzIHNvY2lhdXggZGFucyBsJ2ltbWV1YmxlIG1haXMgbGVzIDUgZmFtaWxsZXMgcXVpIHkgcnNpZGVudCBlbmNvcmUgc2UgdmVycm9udCBwcm9wb3NlciB1biBub3V2ZWF1IGJhaWwgc2kgdGFudCBlc3QgcXUnZWxsZXMgc29pZW50IGxpZ2libGVzICBsJ2FjY3MgYXUgbG9nZW1lbnQgc29jaWFsIChyYXBwZWxvbnMgcXVlIDcyJSBkZSBsYSBwb3B1bGF0aW9uIHBhcmlzaWVubmUgZXN0IGxpZ2libGUgIGwnYWNjcyAgY2UgdHlwZSBkZSBsb2dlbWVudCkuIApZb3UgYmUgaGFyZCBwcmVzc2VkIHRvIGZpbmQgYSBwb3N0IG9uIHRoaXMgc3VicmVkZGl0IHdoaWNoIGhhcyBhY3R1YWxseSBiZWVuIHNpZ25pZmljYW50bHkgZG93bnZvdGVkLCBwb3NzaWJseSBiZWNhdXNlIG9mIHRoaXMgaG9zdGlsaXR5IHRvIGFueW9uZSB0aGF0IGRvZXNuIHdhbnQgdG8gYXNzdW1lIGNyZWVwaW5lc3MgYW5kIGhhdGUgb24gdGhlIHNlbmRlci4KR2VkdXJlbmRlIG1pam4gRUZMUCAxIHN0YWdlIG1vY2h0IGlrIHplbGZzdGFuZGlnIG9uZGVyIHN1cGVydmlzaWUgcGF0aW50ZW4gb25kZXJ6b2VrZW4gZW4gYmVoYW5kZWxlbi4gQmlqIGVlbiBwYXRpbnQgbWV0IGVlbiBpc2NoZW1pc2NoIENWQSBsaW5rcyBtb2NodCBpayBkZSBhbmFtbmVzZSBhZm5lbWVuLiBBYW4gZGUgaGFuZCB2YW4gb3BlbiBlbiBnZXNsb3RlbiB2cmFnZW4gbW9lc3QgaWsgZGUganVpc3RlIGluZm9ybWF0aWUgdmVya3JpamdlbiBiaWogZGUgcGF0aW50IG9tIG9uZGVyem9la3Nkb2Vsc3RlbGxpbmdlbiB0ZSBrdW5uZW4gZm9ybXVsZXJlbi4gQWFuIGRlIGhhbmQgdmFuIGRlIGFuYW1uZXNlIGhlYiBpayBkZSBqdWlzdGUgaW5mb3JtYXRpZSB2ZXJrcmVnZW4gb20gbWlqbiBvbmRlcnpvZWtzZG9lbHN0ZWxsaW5nZW4gdGUga3VubmVuIGZvcm11bGVyZW4uIE1pam4gYmVnZWxlaWRlciBoZWVmdCBtaWRkZWxzIGhldCBtaW5pIENFWCBmb3JtdWxpZXIgZGUgYW5hbW5lc2UgbWV0IHJ1aW0gZWVuIHZvbGRvZW5kZSBiZW9vcmRlZWxkLiBaaWogZ2VlZnQgYWFuIGRhdCBoZXQgZWVuIHN0ZXJrZSBhbmFtbmVzZSB3YXMuCklmIHlvdSBqb2luLCBhbmQgeW91IHdhbnQgdG8gYmUgYSBjb3AgKHVzdWFsbHkgbG9uZyB0ZXJtIGdvYWxzIG9mIHN0YXRlIEJJLCBGQkksIG9yIGp1c3QgZGV0ZWN0aXZlKSwgdGhlbiBqb2luIHRoZSBsb2NhbCBQRC4gCkFuZCB0aGUgYWNjb3VudGFudCBleGFtcGxlIGRvZXNuIG1ha2Ugc2Vuc2UgYmVjYXVzZSB3ZSB3aG8gaXMgcHJvZmVzc2lvbmFsbHkgZmFtb3VzLCB3aGljaCBtZWFucyB0aGF0IHRoZWlyIGVudGlyZSBqb2IgaXMgYWJvdXQgYXBwZWFsaW5nIHRvIGF1ZGllbmNlcyBhbmQgcGxheWluZyAicm9sZXMiLgpUaGUgY29uc2lzdHMgb2YgYSBzZXJpZXMgb2YgZmFjZSBncmlkcyBhbmQgZWFjaCBncmlkIGlzIGNvbnN0cnVjdGVkIHNvIHRoYXQgb25lIGZhY2UgaXMgZmFtaWxpYXIgdG8gdGhlIHVzZXIsIHdoaWxzdCBhbGwgb3RoZXIgZmFjZXMgYXJlIHVuZmFtaWxpYXIuIEF1dGhlbnRpY2F0aW9uIGlzIGEgbWF0dGVyIG9mIHNpbXBseSB0b3VjaGluZyB0aGUgZmFtaWxpYXIgZmFjZSBpbiBlYWNoIGdyaWQuIApNYW55IGluZGl2aWR1YWxzIGFyZSBzdGFydGluZyB0byBnbyBhYm91dCB0aGUgcHJvY2VzcyBvZiBjcmVhdGluZyBuZWNrbGFjZXMgZnJvbSBMYXMgVmVnYXMgQ2xheSBQb2tlciBDaGlwcyEgSWYgeW91IGFyZSBsb29raW5nIGZvciBhIHVuaXF1ZSBnaWZ0IHRvIGdpdmUgeW91ciBwb2tlciBidWRkaWVzLCB0aGlzIG1ha2VzIGEgZmFudGFzdGljIGNob2ljZSEgTm93IGFsbCBvZiB5b3VyIHJlbGF0aXZlcywgZnJpZW5kcywgYW5kIG90aGVyIHNwZWNpYWwgcGVvcGxlIGluIHlvdXIgbGlmZSBjYW4gZW5qb3kgdGhlaXIgdmVyeSBvd24gcGllY2Ugb2YgTGFzIFZlZ2FzISBJbiB0aGlzIGd1aWRlLCB5b3Ugd2lsbCBiZSBpbnRyb2R1Y2VkIHRvIHRoZSBtYXRlcmlhbHMgdGhhdCBhcmUgbmVlZGVkIHRvIGNyZWF0ZSB0aGVzZSBmYW50YXN0aWMgY29udmVyc2F0aW9uYWwgcGllY2VzLCBhcyB3ZWxsIGFzIHRoZSBpbnN0cnVjdGlvbnMgb24gaG93IHRvIGNyZWF0ZSBhIHVuaXF1ZSBnaWZ0IGZvciBqdXN0IGFib3V0IGFueW9uZSFBIHZhcmlldHkgb2YgTGFzIFZlZ2FzIENsYXkgUG9rZXIgQ2hpcHMKVGhleSdyZSB0aGUgc2FtZSB0aGluZyBhIHBoeXNpbyB3aWxsIGhvb2sgeW91IHVwIHRvIHdoZW4geW91IHByZXNlbnQgZm9yIHNvbWUgc29mdCB0aXNzdWUgaW5qdXJ5LiAKTm8gcmVxdWVzdHMgZm9yIG9ubHkgcG1zIG9yIHRvIGxlYXZlIGNvbW1lbnRzIG9uIHlvdXR1YmUsIHR3aXR0ZXIgaW4gbGlldSBvZiB0aGUgc3VicmVkZGl0LiAKSWYgdGhlIGluZmxhbW1hdGlvbiBpbmR1Y2VkIGJ5IGV4ZXJjaXNlIGlzIHBhcnQgb2YgYSBzaWduYWwgY2FzY2FkZSB0byBpbmR1Y2UgYWRhcHRhdGlvbiB0byB0aGUgZXhlcmNpc2UsIHRoZW4geW91IGFyZSBhY3R1YWxseSBkb2luZyB5b3Vyc2VsZiBhIGRpc3NlcnZpY2UgYnkgcmVkdWNpbmcgaXQsIGFzIHlvdSBhcmUgZGVjcmVhc2luZyB0aGUgbWFnbml0dWRlIG9mIHRoZSBzdGltdWx1cyB0byBhZGFwdC4uIApQZXRpdGlvbiBxdWVzdGlvbnMgaWYgUG9rZXIgaXMgYSBza2lsbCBnYW1lIG9yIGdhbWJsaW5nCkhhdmUgeW91IGJlZW4gc3R1Y2sgaW4geW91ciB0aGlua2luZz8gVGhlcmUgYXJlIHN0cm9uZyBnZW5ldGljIGluZmx1ZW5jZXMgdXBvbiBjaGFyYWN0ZXJpc3RpYyBiZWhhdmlvcnMuIApEb24gc2VlIGl0IGFzIGNvZXJjaW5nIG9yIGNoYW5naW5nIHRoZSBtYXJrZXQgaXRzZWxmLCBoZSBzYWlkLiBOb3QgZ29pbmcgdG8gbWFrZSBob3VzaW5nIG1vcmUgYWZmb3JkYWJsZS4gCkV4cGxvZGluZyBoZWFkIHN5bmRyb21lISBUaGlzIGlzIGNhdXNlZCBieSB0aGUgc2FtZSByZWFzb25zLCBidXQgaXMgbXVjaCBsZXNzIGNvbW1vbi4gCiJJdCB3YXMgYSBmdWxsIHN3aW5nLCByaWdodCBpbnRvIHRoZSBiYWNrIG9mIHRoZSBoZWFkLiJUaGUgdHdvIG90aGVyIHRlZW5zIHRvbGQgcG9saWNlIHRoZXkgdGhlbiBmbGVkIHRoZSBzY2VuZSB0byBnZXQgaGVscCBhcyBDb2xsaW5zIGdvdCBpbnRvIGEgd2hpdGUgaGF0Y2hiYWNrLiJUaGV5IHRob3VnaHQgdGhleSB3ZXJlIG5leHQsIiBTaGF0ZWsgc2FpZC5UaGUgdHdvIG90aGVyIHRlZW5zIHdlcmUgYWJsZSB0byBnZXQgYSBuZWlnaGJvciwgd2hvIHdlbnQgdG8gS3VscGEncyBjYWJpbiBhbmQgZm91bmQgaGVyIGJsZWVkaW5nIGluIHRoZSBiZWRyb29tLiBLdWxwYSB3YXMgdGFrZW4gdG8gdGhlIGhvc3BpdGFsLCB3aGVyZSBCb3VsZGVyIENvdW50eSBzaGVyaWZmJ3MgRGVwdXR5IERvdWcgV29vZGFyZCBicmllZmx5IHRhbGtlZCB0byBoZXIuIFdvb2RhcmQgc2FpZCBzaGUgcmVtZW1iZXJlZCBwaWNraW5nIHVwIGhpdGNoaGlrZXJzLCBidXQgZGlkbid0IHJlYWxseSByZW1lbWJlciBhbnl0aGluZyBhYm91dCB0aGUgYXNzYXVsdC4iVGhlIGxhc3QgdGhpbmcgc2hlIHJlbWVtYmVyZWQgd2FzIGNyYXdsaW5nIHVwc3RhaXJzIGludG8gYmVkIGFuZCB3YXMgc2hvY2tlZCB0aGF0IHNvbWVvbmUgaGFkIGJlYXQgaGVyIHVwLCIgV29vZGFyZCBzYWlkIGluIGNvdXJ0IFdlZG5lc2RheSBkdXJpbmcgaGlzIHRlc3RpbW9ueS5Qcm9zZWN1dG9ycyBzaG93ZWQgcGhvdG9zIG9mIEt1bHBhIGF0IHRoZSBob3NwaXRhbCB3aXRoIHR3byBsYWNlcmF0aW9uIHdvdW5kcyBvbmUgYWJvdmUgaGVyIHJpZ2h0IGV5ZSBhbmQgYW5vdGhlciBiZWhpbmQgaGVyIHJpZ2h0IGVhci4gCkdhbWVzLCBib29rcywgbW92aWVzLCBidXQgSSBwcmV0dHkgZGlzY2VybmluZyBub3dhZGF5cy4gSSBvbmx5IGhhdmUgc28gbWFueSBob3VycyBiZXR3ZWVuIHdvcmsgc28gSSBqdXN0IGRvbiB3YXN0ZSBhIGxvdCBvZiBteSB0aW1lIG9uIGNyYXAuIAoiVGhleSdyZSBraWxsaW5nIHRoZW0sIiBzYXlzIEdlb3JnZSwgNjAsIHdobyBtb3ZlZCBoZXJlIGZyb20gU2VyYmlhIGluIDE5NTUuIApJbCByc2lkZSAgbCdPdWVzdCwgbCBvIGxlIHNvbGVpbCBzZSBjb3VjaGUuIElsIGVzdCBjZW5zIHByb3RnZXIgIGxhIFRlcnJlIGV0IGxhIHZndGF0aW9uIGNvbnRyZSBsYSBzY2hlcmVzc2UgZXQgbGEgbW9ydCAgZW4gYXBwb3J0YW50IGxlcyBwbHVpZXMuIElsIHNlbWJsZSB0cmUgbCdtYW5hdGlvbiBkZSBXYWthbiBUYW5rYSwgbGUgR3JhbmQgRXNwcml0LCBhaW5zaSBxdWUgc29uIG1lc3NhZ2VyLiBFbnZlbG9wcCBkJ3VuIGNyaW4gZGUgbnVhZ2VzLCBzZXMgeWV1eCBwcm9kdWlzZW50IGxlcyBjbGFpcnMgZXQgbGUgY2xhcXVlbWVudCBkZSBzZXMgYWlsZXMsIGxlIHRvbm5lcnJlLiAKQ3VycmVudGx5IEkgYW0gMyB5ZWFycyBvdXQgb2YgdGhlIGRlcGFydG1lbnQgYW5kIHdvcmsgaW4gR3Jvd3RoIEFuYWx5dGljcy4gCkNvbXBsYWludCAgIDMgd2Vla3Mgb2ZmIG9mIHJ1bm5pbmcga2lsbGVkIG15IG1vbWVudHVtIGZvciBhIGtpbGxlciBQUiBhbmQgbm93IEkgZmVlbCBsaWtlIGEgZmF0IGFzcyB3aGVuIDYgbWlsZXMgYXQgbXkgbWFyYXRob24gcGFjZSBmZWx0IGNoYWxsZW5naW5nLiBBbmQgZXZlbiB0aG91Z2ggSSBkaWRuIGdhaW4gd2VpZ2h0IG92ZXIgdGhvc2UgdGhyZWUgd2Vla3MgSSBjYW4gdGVsbCBJIGxvc3MgbXVzY2xlIHN0cmVuZ3RoIGFuZCBJIGp1c3Qgd2FudCB0byBzYXkgInNjcmV3IGl0ISIuIApJIGRpZCBsaWtlIGl0IHdoZW4gSSBwaXRjaGVkIGl0IGluIHRoZSBnYXJkZW4gdGhvdWdoLCBpdCB3YXMgYSBiaXQgc21hbGwgYnV0IGZlbHQgbGlrZSBpdCB3b3VsZCBiZSBPSyBmb3IgYSBuaWdodCBvciB0d28gYXQgYSB0aW1lLiBJIHN0YXJ0aW5nIHRvIHdvbmRlciB3aGVuIEkga2VlcCB0aGUgRW5hbiBmb3Igc2hvcnRlciBoaWtlcyBidXQgbG9vayBmb3Igc29tZXRoaW5nIGJpZ2dlciBmb3IgQXByaWwuIEdldHRpbmcgb25lIG9mIGFueXRoaW5nIHRvIHdvcmsgZm9yIGFsbCBzZWFzb25zIGFuZCB0cmlwIGxlbmd0aHMgd2FzIGFsd2F5cyBnb2luZyB0byBiZSB1bmxpa2VseSBmb3IgbWUuIApTbywgQ2FyZSBGbGlnaHQgY2FtZSB0byBwaWNrIG1lIHVwIGFuZCBicm91Z2h0IG1lIGhlcmUgdG8gTWlhbWkgVmFsbGV5LiBUaGUgZHVyYXRpb24gb2YgdGhpcyBwZXJpb2QsIEhhbGFvdWkgd2FzIG5vdGhpbmcsIGJ1dCBjb25maWRlbnQgdGhhdCBoZSB3b3VsZCBzdXJ2aXZlIHRoZSBjcmFzaC4gCk1ldW5pZXIgUmljaGFyZCBHZW9yZ2UgRGljayBRIEMKR2F0ZWtlZXBpbmc/IFNlcmlvdXNseT8gSSBoYXZlIG1ldCBwZW9wbGUgd2hvIHdvdWxkbiB3YXNoIHRoZW1zZWx2ZXMsIGNoYW5nZSBjbG90aGVzLCBvciBldmVuIHRhbGsgdG8gYW55b25lIGJlY2F1c2Ugb2YgdGhlaXIgZGVwcmVzc2lvbi4gSXQgbm90IGEgYmxhY2sgYW5kIHdoaXRlIHRoaW5nLgpJJ2QgcmF0aGVyIHNlZSBhIHJvdXRpbmUgbGlrZSBFbGxpZSBCbGFjayBkb2VzIG9uIGZsb29yLiBTaGUgaXNuJ3QgdGhlIG1vc3QgYW1hemluZyBkYW5jZXIsIGJ1dCBwaWNrcyBtdXNpYyB0aGF0IGlzIGRyYW1hdGljIGFuZCBtYWtlcyBpdCB3b3JrIGFtYXppbmcuIApXZSB3ZXJlIGNhbGxlZCB1cCB0byBwdWxsIGFpcnBvcnQgc2VjdXJpdHkgYSBmZXcgZGF5cyBhZnRlciA5LzExLCB3aGVuIHRoZSBhaXJwb3J0cyBzdGFyZWQgb3BlbmluZyBhZ2Fpbi4gCkNFUyBpcyB0aGUgcGxhY2UgdG8gYmUgZm9yIHRlY2ggY29tcGFuaWVzIGFuZCBzdGFydHVwcyB0byBzaG93IG9mZiB0aGVpciBsYXRlc3QgZ2FkZ2V0cyBhbmQgZmVhdHVyZXMuIE1vcmUgdGhhbiAxODAsMDAwIHBlb3BsZSBhcmUgZXhwZWN0ZWQgdG8gYXR0ZW5kIHRoaXMgeWVhciwgYW5kIHNvbWUgNCw1MDAgY29tcGFuaWVzIHdpbGwgYmUgb24gdGhlIGNvbnZlbnRpb24gZmxvb3IuIEFtb25nIHRoZW0gYXJlIG5ld2NvbWVycyBsaWtlIFRpZGUgbWFrZXIgUHJvY3RlciBHYW1ibGUsIGRlZmVuc2UgY29udHJhY3RvciBSYXl0aGVvbiBhbmQgdHJhY3RvciBzZWxsZXIgSm9obiBEZWVyZSAgIGFsbCBlYWdlciB0byBidXJuaXNoIHRoZWlyIHRlY2hub2xvZ3kgYm9uYSBmaWRlcy4uIApJbnRlcm5ldCBwb2tlciBzaXRlcyBhbHNvIG9mZmVyIGEgcmFuZ2Ugb2YgbGltaXRzIHNvIHRoYXQgdGhlIGJlZ2lubmluZyBwbGF5ZXIgY2FuIGFjdHVhbGx5IHN0YXJ0IGJldHRpbmcgcGVubmllcy4gTm90IG9ubHkgaXMgdGhlIGJldHRpbmcgZWFzeSwgYnV0IHNvIGlzIHRoZSBhY2Nlc3MuIFVubGlrZSBhIHRhYmxlIGdhbWUsIGFuIG9ubGluZSBnYW1lIGNhbiBiZSBmb3VuZCAyNCBob3VycyBhIGRheSBmcm9tIGFueXdoZXJlIGluIHRoZSB3b3JsZCB0aGF0IHRoZXJlIGlzIGEgY29tcHV0ZXIgYW5kIGFuIEludGVybmV0IGNvbm5lY3Rpb24uCkEgbGl0dGxlIGV4cGxhbmF0aW9uIGZvciByYWRpbyBzaWxlbmNlIGF0IHRoZSB3ZWVrZW5kLiAKQ2FuIGFsc28gYmUgb3ZlciB1c2VkLCBhbmQgYXJlIGFsc28gcHJvbmUgdG8gZ2V0dGluZyAicHVsbGVkIi4gUXVhZCBjcmFtcHMgY2FuIHNvbWV0aW1lcyBhbHNvIGVpdGhlciBjYXVzZSBvciBiZSBjYXVzZWQgYnkgdGlnaHQgaGFtc3RyaW5ncy4gClRyYWRpbmcgVXBBcyBwbGF5ZXJzIGluY3JlYXNlIHRoZWlyIG1vbmV5IGNvdW50LCB0aGV5IG1heSB0cmFkZSB1cCBmb3IgaGlnaGVyIHZhbHVlIGNoaXBzLiBBcyBwbGF5ZXJzIGFyZSBlbGltaW5hdGVkLCBpdCBiZWNvbWVzIGRpZmZpY3VsdCB0byBrZWVwIHVwIHdpdGggdGhlIG1hbnkgc21hbGxlciB2YWx1ZSBjaGlwcy4gUGxheWVycyBtYXkgZGVjaWRlIHRvIGNoYW5nZSB0aGUgdmFsdWUgb2YgY2hpcHMgbWlkIGdhbWUuCk1pbml0dGFueSB1CjMuIExhZHkgR2FnYSBoYWQgNCBoaXRzIG9mZiBvZiBvbmUgYWxidW0sIHRoYXQgaXMgYSByZWNvcmQgb2YgbnVtYmVyIG9uZSBoaXRzLiAKQXBhIHNoYXJlZCBhIHNjcmVlbnNob3Qgb24gaGlzIEluc3RhZ3JhbSBzdG9yeSBvZiB0aGUgVGhpcmQgRXllIEJsaW5kIHNvbmcgVGhlIEJhY2tncm91bmQsIHdoaWNoIHBheXMgdHJpYnV0ZSB0byBhIGxvdmVkIG9uZSB3aG8gaGFzIGRpZWQgaW4gaG9zcGl0YWwuCkEgYmFkIHBva2VyIHByb2R1Y3QgbmVlZHMgeW91ciBhY3Rpb24gdGhhdCBpdCBnZXRzIHRocm93biB0byB0aGUgYXNodHJheS4gSW4gdGhlIG90aGVyIGhhbmQsIHlvdSBzaG91bGQgYmUgcGlja2luZyB1cCB0aGUgcHJvZHVjdHMgdGhhdCBzdWl0IHlvdXIgbmVlZHMgYWxsIHRoZSB3YXkuIFNvIHlvdSBzaG91bGQgZ2V0IGhvbGQgb2YgcHJvZHVjdHMgbGlrZSBCYWQgQmVhdCBQb2tlciBDYXJkIFByb3RlY3Rvci4gVGhlIHBva2VyIGNhcmRzIG5lZWQgc29tZSBraW5kIG9mIHBvdGVudGlhbCBwcm90ZWN0b3JzIGZvciBiZWluZyBzYWZlIGluIHRoZSBoYW5kcyBvZiB0aGUgcG9rZXIgcGxheWVycyBvdXQgdGhlcmUuIFlvdSBhcyBhIHBva2VyIHBsYXllciBzaG91bGQgdHJ5IHRvIHB1cmNoYXNlIHRoZSBwcm9kdWN0cyBwYXlpbmcgc29tZSBoZWZ0eSBhbW91bnRzIGFzIHRoZXNlIGNhcmRzIGRlbm90ZSB5b3VyIHByZXNlbmNlIGluIHRoZSBjYXNpbm8gdGFibGUuIFNvIHRoZSBsZWFkaW5nIHBva2VyIHN0YXJzIGNhbiBvbmx5IGJlIHRoZSBwb3RlbnRpYWwgcGVvcGxlIHdobyB3YW50IHRvIHNhdmUgdGhlaXIgY2FyZHMgZnJvbSB0aGVpciBvd24gZmlzdHMuIFlvdSBzaG91bGQgdHJ5IHRvIG1ha2UgaXQgcG9zc2libGUgdGhhdCB5b3UgaGF2ZSBzb21lIGdvb2QgcG9rZXIgY29sbGVjdGlibGVzIGxpa2UgQmFkIEJlYXQgUG9rZXIgQ2FyZCBQcm90ZWN0b3IuIFlvdSBzaG91bGQgdHJ5IHRvIGtlZXAgdGhlIHBva2VyIGVxdWlwbWVudHMgaW4gYSB3YXkgdGhhdCB0aGV5IHN0YXkgaGVyZSB3aXRoIHlvdSBmb3IgYSBsb25nIHRpbWUuCk1yLiBSb25hbGQgIlJvbiIgQ2hhbWJlcnMgb2YgTGV0aGJyaWRnZSwgYmVsb3ZlZCBodXNiYW5kIG9mIE1ycy4gUmVuaWUgQ2hhbWJlcnMsIHBhc3NlZCBhd2F5IHBlYWNlZnVsbHkgc3Vycm91bmRlZCBieSBoaXMgZmFtaWx5IGFmdGVyIGEgbGVuZ3RoeSwgY291cmFnZW91cyBiYXR0bGUgd2l0aCBjYW5jZXIgYXQgQ2hpbm9vayBSZWdpb25hbCBIb3NwaXRhbCBvbiBXZWRuZXNkYXksIFNlcHRlbWJlciAxMiwgMjAxOCBhdCB0aGUgYWdlIG9mIDc3IHllYXJzLiBSb24gbG92ZWQgbGl2aW5nIG9uIHRoZSBmYXJtLCBmaXNoaW5nLCBodW50aW5nLCBjYW1waW5nLCBib2F0aW5nIGFuZCBqdXN0IGJlaW5nIG91dGRvb3JzLiBCZXNpZGVzIGhpcyBsb3Zpbmcgd2lmZSBSZW5pZSwgUm9uIGlzIHN1cnZpdmVkIGJ5IGhpcyBzb24gRGFubnk7IGRhdWdodGVyIGluIGxhdyBMb3JpIEhvd2U7IDUgZ3JhbmRjaGlsZHJlbiBhbmQgMiBncmVhdCBncmFuZGNoaWxkcmVuLiBSb24gd2FzIHByZWRlY2Vhc2VkIGJ5IGhpcyBsb3ZpbmcgcGFyZW50cyBTdGFuY2lsIGFuZCBBbm5pZSBDaGFtYmVyczsgc29uIEJhcnJ5OyBkYXVnaHRlciBpbiBsYXcgSmFuZSBhcyB3ZWxsIGFzIGhpcyBzaWJsaW5ncy4gQSBQcml2YXRlIEZhbWlseSBHcmF2ZXNpZGUgU2VydmljZSB3aWxsIGJlIGhlbGQgaW4gdGhlIE1vdW50YWluIFZpZXcgQ2VtZXRlcnkgYXQgYSBsYXRlciBkYXRlLiBLZXZpbiB3YXMgYm9ybiBvbiBKdW5lIDE2LCAxOTUxIGluIEFiYm90c2ZvcmQsIEJDLiBIZSBsZWF2ZXMgdG8gbW91cm4gaGlzIHNvbiBNYXJrIChHcmFjaWV0ZSkgYW5kIGRhdWdodGVyIENvbm5pZSAoQmVybmFyZCkgTGVCbGFuYyBhbmQgaGlzIGdyYW5kY2hpbGRyZW4sIEJyYWRsZXksIEJyZXR0LCBCcmlhbm5hLCBSb2J5biBhbmQgTWF0dGhldy4KRXZlbnR1YWxseSB0aGUgcGxhY2Ugd2FzIGZpbGxlZCB3aXRoIHZldGVyYW4gcGxheWVycyBob3ZlcmluZyBiZWhpbmQgbmV3Ymllcywgc2hvdXRpbmcgaGFuZHkgdGlwcyBvdmVyIHRoZSBzb3VuZHMgb2Ygc2h1ZmZsaW5nIHRpbGVzLiJUaGVyZSBpcyBuZWVkIHRvIGludmVzdCBpbiB0aGUgY3Jpc2lzIG9mIGJlbG9uZ2luZyBpbiBWYW5jb3V2ZXIsIiBzYXlzIHVyYmFuIHBsYW5uZXIgQW5keSBZYW4sIHdobyB3YXMgYXQgdGhlIGV2ZW50IGFsb25nIHdpdGggaGlzIGJvc3MsIGFyY2hpdGVjdCBCaW5nIFRob20uICJKdW5lIGFuZCBEb3JpcyBwdWxsZWQgdGhpcyBvZmYgd2l0aCBhIHNob2VzdHJpbmcgYnVkZ2V0LiJUaGUgZGVhZGxpbmUgZm9yIHRoZSBwdWJsaWMgdG8gc3VibWl0IGZlZWRiYWNrIHRvIHRoZSBjaXR5IG9uIEJlZWRpZSdzIHJlem9uaW5nIGFwcGxpY2F0aW9uIGlzIG5leHQgd2VlayBvbiBKYW4uIApFWFBFUlRTIGhhdmUgd2FybmVkIFF1ZWVuc2xhbmQgaXMgZmFjaW5nIGEgInNpZ25pZmljYW50bHkgY29uY2VybmluZyIgZ2FtYmxpbmcgY3Jpc2lzIGFzIG5ldyBkYXRhIHJldmVhbHMgYWxtb3N0ICQ0IGJpbGxpb24gd2FzIGdhbWJsZWQgYXdheSBsYXN0IHllYXIsIHRoZSBtb3N0IGluIHRoZSBzdGF0ZSBoaXN0b3J5LgpUaGVyZSBpcyBubyBzdHJ1Y3R1cmFsIGNoYW5nZSwgbm8gcmVkaXN0cmlidXRpb24gb2YgdGhlIG9ic2NlbmUgYW1vdW50cyBvZiB3ZWFsdGggdGhhdCBEYWRkeSBXYXJidWNrcyBoYWQgZXh0cmFjdGVkIGZyb20gdGhlIEFubmllcyBvZiB0aGUgd29ybGRJbnN0ZWFkLCBpdCB3YXMgQW5uaWUgb3B0aW1pc20sIGhlciB1bnNoYWthYmxlIGJlbGllZiBpbiB0aGUgQW1lcmljYW4gZHJlYW0gdGhhdCBpZiB3ZSBqdXN0IGtlZXAgYmVsaWV2aW5nIHRoYXQgdGhpbmdzIHdpbGwgZ2V0IGJldHRlciwgdGhlbiB0aGV5IHdpbGwgIGF0IGxlYXN0IGZvciB0aGUgaW5kaXZpZHVhbCBBbm5pZSBpZiBub3QgZm9yIHRoZSBtYXNzIG9mIEFubmllc1RoZSBzdW4gd2lsbCBjb21lIG91dCB0b21vcnJvdy4gCkJhbGFuY2UgdGhpcyB3aXRoIGVhcmx5IG9yIGxhdGUgd2VhdGhlciBwYXR0ZXJucywgd2hpY2ggY2FuIHZhcnkgdXAgdG8gdGhyZWUgd2Vla3MuIApTaGUgZ29lcyBvdXQgb2YgaGVyIHdheSB0byBiZSBuaWNlIGFuZCBhY2NvbW1vZGF0aW5nIHRvIGFueSBndWVzdHMsIGFuZCBpcyBhbHdheXMgd2lsbGluZyB0byBsZW5kIGEgaGFuZCB0byBoZXIgZnJpZW5kcyBhbmQgY293b3JrZXJzLiBEdW5ubyB3aGF0IGl0IGlzIGFib3V0IGdvaW5nIG91dCwgYnV0IG15IGdpcmxmcmllbmQgam9rZXMgdGhhdCBteSBtb20gZ2F2ZSBtZSBjdXN0b21lciBzZXJ2aWNlIFBUU0QsIHNpbmNlIEkgZ28gb3V0IG9mIG15IHdheSB0byBhbHdheXMgYmUgbmljZSB0byB0aGUgcG9vciBjdXN0b21lciBzZXJ2aWNlIHBlb3BsZSBhbmQgd2lsbCBvdmVybG9vayB0aGluZ3MgSSBzaG91bGQgbWFrZSBtb3JlIG9mIGEgZnVzcyBhYm91dC4uIApUaGUgcmVzdCBvZiB1cyBhcmUganVzdCBsZWFybmluZyBtYW5pcHVsYXRpb24gdGFjdGljcyB0byBnZXQgaW5zaWRlIHRoZWlyIGhlYWRzIHRvIHNlZHVjZSB0aGVtIHdoaWxlIHRoZSB0cnVseSB2YWx1YWJsZSA1JSBvZiBtZW4ganVzdCBuZWVkIHRvIHNob3cgdXAgYW5kIHNheSBoaS4gCldoYXQgVG8gRXhwZWN0IEZyb20gMjAxMyBGcmFua2Z1cnQgQXV0byBTaG93CkluIHRoaXMgUHJpbWVyLCB3ZSBhaW0gdG8gZ2l2ZSB0aGUgdXNlcnMgb2YgdGhlc2UgbWV0aG9kcyBhIHN0YXJ0aW5nIHBvaW50IGFuZCBwZXJzcGVjdGl2ZSBmcm9tIHdoaWNoIHRvIHZpZXcgdGhlIGtleSBxdWVzdGlvbnMgYW5kIHVzZWZ1bG5lc3Mgb2YgdGhlIGRpZmZlcmVudCBmb3JtcyBvZiBub24gaW52YXNpdmUgYnJhaW4gc3RpbXVsYXRpb24uIEFuZCBXYWxzaCwgVi4gMjAxOC4gClZlcnkgbGl0ZXJhbGx5ICBvbmUgcGVyc29uIG1pbmQgYmxvd2luZyBkZWVwIHRpc3N1ZSBpcyBhbm90aGVyICJmbHVmZnkgcGFuc3kgYXNzIG1hc3NhZ2UiSSB0aGluayB0b3VjaCBpcyB2ZXJ5IHBvd2VyZnVsLiBXaGVuIHNvbWVvbmUgaGFzIGJlZW4gYWJ1c2VkIG9yIGhvbGRpbmcgZXZlcnl0aGluZyAiaW4iIHRvdWNoIGNhbiBiZSB2ZXJ5IHJlbGF4aW5nIHdoaWNoIGluIHR1cm4gY291bGQgYWxsb3cgcGVvcGxlIHRvIHJlbGVhc2UgdGhlaXIgZW1vdGlvbnMgdGhhdCB0aGV5IHdlcmVuIGFibGUgdG8gYmVmb3JlLiBJIGRvbiBrbm93IGlmIEkgd291bGQgc2F5IGVtb3Rpb25hbCB0cmF1bWEgaXMgc3RvcmVkIGluIG11c2NsZXMgYnV0IHRoaW5rIGFib3V0IGhvdyBwZW9wbGUgY2FycnkgdGhlbXNlbHZlcy4gCk5vdyB0byBsZWFybiB0aGF0IHRoZXkgZnVuZGluZyBSaXNlIFVwICh3aHkgaXMgYSBub24gcHJvZml0IGJyb3dzZXIgb3JnIGRvbmF0aW5nIHRvICJjaGFyaXR5IiBhZ2Fpbj8pIGlzIGVub3VnaCB0byBtYWtlIG1lIHN3aXRjaC4gCjExKSBJIHRoaW5rIHlvdSBkaWQgZXZlcnl0aGluZy4KU28sIGlmIHlvdSBhcnJpdmUgQXByaWwgMSwgc3RheSBBcHJpbCAxIDMgaW4gVmVnYXMsIHRoZW4gaGVhZCB0byBhIHBhcmssIHdlIHNheSBEZWF0aCBWYWxsZXksIGZvciBBcHJpbCA0IDguIFZlZ2FzIEFwcmlsIDkgMTEsIEpvc2h1YSBUcmVlIE1vamF2ZSBQcmVzZXJ2ZSBBcHJpbCAxMiAxNSwgVmVnYXMgQXByaWwgMTYgMTgsIGV0Yy4gWWVhaCwgeW91IGhhdmUgdG91cmlzdHMgb24gdGhlIHdlZWtlbmRzLCBidXQgaWYgeW91IGhlYWQgaW4gb24gYSBUaHVyc2RheSwgeW91IGhhdmUgVGh1cnNkYXkgRnJpZGF5IGZvciB0aGUgaGlnaCB0cmFmZmljIHNpZ2h0cyBhbmQgU2F0dXJkYXkvU3VuZGF5IGZvciB0aGUgc3R1ZmYgdGhhdCBtb3JlIG9ic2N1cmUuLiAKIDEwIHBvaW50cyAgc3VibWl0dGVkIDIgbW9udGhzIGFnb0kgbm90IGEgcHJvZmVzc2lvbmFsIHBva2VyIHBsYXllciBidXQgSSBoYXZlIGJlZW4gcGxheWluZyB0byBzdXBwbGVtZW50IG15IHBhcnQgdGltZSBpbmNvbWUgYXMgYSBTdXBwb3J0IFdvcmtlciBmb3IgYWR1bHRzIHdpdGggbGVhcm5pbmcgZGlzYWJpbGl0aWVzIGFuZCBtZW50YWwgaGVhbHRoIGNvbmRpdGlvbnMgZm9yIGZpdmUgeWVhcnMuSSB3b3VsZG4gd2FudCB0byBiZSBhIGZ1bGwgdGltZSBwcm9mZXNzaW9uYWwgYmVjYXVzZSBJIGxpa2UgdGhlIGluc3VyYW5jZSBvZiBoYXZpbmcgYXQgbGVhc3Qgc29tZSBndWFyYW50ZWVkIGluY29tZSB3aGljaCBJIGZlZWwgcHJvdGVjdHMgbWUgZnJvbSB0aGUgc3RyZXNzIG9mIHJlbHlpbmcgc29sZWx5IG9uIHBva2VyIHdoZW4gdGhpbmdzIGFyZW4gZ29pbmcgZ3JlYXQgYXQgdGhlIHRhYmxlcy5Ob3Qgb25seSB0aGF0LCBJIHRoaW5rIGl0IGlzIGltcG9ydGFudCBmb3IgbXkgZW1vdGlvbmFsIHdlbGxiZWluZywgYWN0dWFsbHkgZ2V0dGluZyBvdXQgYW5kIG1lZXRpbmcgcGVvcGxlLCBhcyB3aGVuIEkgcGxheWVkIGZ1bGwgdGltZSBmb3IgYSB3aGlsZSBpbiAyMDEyLCBJIGZvdW5kIG15c2VsZiBiZWNvbWluZyBzb21ldGhpbmcgb2YgYSBoZXJtaXQsIHBsYXlpbmcgYWxsIG5pZ2h0LCBzbGVlcGluZyBhbGwgZGF5LCB3aGljaCBjYW4gYmUgdmVyeSBsb25lbHksIGV2ZW4gdGhvdWdoIEkgYW0gbWFycmllZCBhbmQgZG8gbm90IGxpdmUgYWxvbmUuIAoyMTEzMykgd2VyZSB1bmFibGUgdG8gY2FzaCBpbiB0aGUgZXZlbnQsIEJyYXppbGlhbiBzb2NjZXIgcm95YWx0eSwgUm9uYWxkbyAoR1BJIE5vLiAKIklmIHdlIHNwZW5kIG1vbnRocywgeWVhcnMsIGV2ZW4gZGVjYWRlcyBzaXR0aW5nIGF0IGEgZGVzayBhbmQgdGhpbmsgdGhhdCBhIGZldyBob3VycyBpbiB0aGUgZ3ltIHBlciB3ZWVrIGFyZSBnb2luZyB0byB1bmRvIGFsbCB0aGF0LCB3ZSdyZSBwcm9iYWJseSBmb29saW5nIG91cnNlbHZlcywiIHNheXMgQ2FyZXkuIFN0cmV0Y2hpbmcgYSBtdXNjbGUgd2l0aCBib3VuZCB1cCBvciBwb29ybHkgYWRhcHRlZCBmYXNjaWEgaXMgYSBiaXQgbGlrZSB0cnlpbmcgdG8gc3RyZXRjaCBhIGtub3R0ZWQgYnVuZ2VlIGNvcmQ6IFlvdSdsbCBnZXQgbXVjaCBiZXR0ZXIgcmVzdWx0cyBpZiB5b3UgZ2V0IHRoZSBrbm90cyBvdXQgZmlyc3QuCldhcyBhIHByb3VkIHRoaXJkIGdlbmVyYXRpb24gU2FuIEZyYW5jaXNjYW4sIHdobyBkZXZvdGVkIGhpcyBmdWxsIHB1YmxpYyBhbmQgcHJpdmF0ZSBsaWZlIHRvIG91ciBjaXR5LCBQZWxvc2kgc2FpZCBpbiBzdGF0ZW1lbnQuIEFzIGEgc3RhdGUgY291cnQganVkZ2UgYW5kIHRoZW4gYW4gYXBwZWxsYXRlIGp1ZGdlLCBCaWxsIHdvcmtlZCByZWxlbnRsZXNzbHkgdG8gdXBob2xkIGxpYmVydHkgYW5kIGp1c3RpY2UgZm9yIGFsbCBDYWxpZm9ybmlhbnMuIEhlIHRvb2sgZ3JlYXQgcHJpZGUgaW4gYmVpbmcgcmFpc2VkIElyaXNoIEFtZXJpY2FuLCBDYXRob2xpYyBhbmQgRGVtb2NyYXRpYywgYW5kIGNvbW1pdG1lbnQgdG8gcHVibGljIHNlcnZpY2UgcmFuIHRocm91Z2ggaGlzIGVudGlyZSBsaWZlLiBhbiBpbnRlcnZpZXcgbGFzdCB5ZWFyLCBHYXZpbiBOZXdzb20gZm9uZGx5IHJlY2FsbGVkIHNwZW5kaW5nIHN1bW1lcnMgYXMgYSBib3kgd2l0aCBoaXMgZmF0aGVyIGluIHRoZSBtb3VudGFpbm91cyB0b3duIG9mIER1dGNoIEZsYXQgaW4gUGxhY2VyIENvdW50eSwgd2hlcmUgaGlzIGZhdGhlciBhbHNvIGhhZCBhIGhvbWUuIE5ld3NvbSBzYWlkIGhlIGZhdGhlciB3YXMgbW9yZSBjb21mb3J0YWJsZSBpbiB0aGUgcnVnZ2VkIGZvcm1lciBtaW5pbmcgdG93biB0aGFuIGluIHRoZSBiaWcgY2l0eSBvZiBTYW4gRnJhbmNpc2NvLiBIaXMgcnVzdGljIGhvbWUgaGFkIGFuIGltcHJlc3NpdmUgY29sbGVjdGlvbiBvZiBib29rcywgd2hpY2ggdGhlIGVsZGVyIE5ld3NvbSBlbmpveWVkIHJlYWRpbmcgaW4gdGhlIGJhdGh0dWIsIGhpcyBzb24gc2FpZC4KQWxsIG15IGFkdWx0IGxpZmUsIHNoZSBsaXZlcyBpbiBGcmFuY2UpIHdlcmUgc29ydCBvZiB0YWxraW5nIGFib3V0IGl0IGFuZCBJIG1peGVkIG15IGlkaW9tcyAoYWZ0ZXIgYSB3aGlsZSwgaXQncyBoYXJkIHRvIHJlbWVtYmVyIHdoaWNoIGV4cHJlc3Npb24gaXMgb3JpZ2luYWxseSBGcmVuY2ggb3IgRW5nbGlzaCkgYW5kIHRvbGQgaGVyLCBpbiBGcmVuY2gsICdsaWtlIGEgbXV0dG9uIGRyZXNzZWQgYXMgYSBsYW1iJy4gU2hlIGxvb2tlZCBhdCBtZSBhbmQgc2FpZCAnd2hhdCBkbyB5b3UgbWVhbj8gVGhleSBib3RoIHdlYXIgdGhlIHNhbWUgdGhpbmcsIHdvb2wnLi4gCkFzc3VtaW5nIHByaWNlIGFwcHJlY2lhdGlvbiBjb3ZlcnMgc2VsbGluZyBjb3N0cywgdGhleSBjb3VsZCBhZGQgJDc1MCwwMDAgdG8gdGhlaXIgY2FwaXRhbC4gCkV2ZXJ5IHNpbmdsZSB0aW1lIFRKIGdvdCBrbm9ja2VkIGRvd24sIGhlIGRlZmVuZGVkIGJ5IHNwcmluZ2luZyBiYWNrIHVwIGltbWVkaWF0ZWx5LiBJbiB0aGUgbGFzdCBrbm9ja2Rvd24gaGUgdHJpZWQgdG8gZGVmZW5kIGJ5IGdvaW5nIGZvciBhIHNpbmdsZSBhbmQgdG9vayBhIGdsYW5jaW5nIGJsb3cgaW4gdGhlIHByb2Nlc3MgKHdoaWNoIGlzIG5vcm1hbCkuIEJ1dCB0aGUgcmVmIGRpZG4gbGV0IGhpbS4gCkFjY29yZGluZyB0byBpdCBtYW5raW5kIHdhcyBhbHJlYWR5IGtpbGxlZCBhbmQgYmVjYXVzZSBvZiB0aGF0IEkgY291bGRuIGhhdmUgZG9uZSBpdC4gClRoZSBCZXN0IFdlc3Rlcm4gSXNsYW5kIEJlYWNoIEhvdGVsIGluIExhZ29zLCBOaWdlcmlhLCBpcyBhbHNvIG5ld2x5IGNvbnN0cnVjdGVkLiBUaGUgcHJvcGVydHkgaXMgbG9jYXRlZCBpbiB0aGUgaGVhcnQgb2YgTGFnb3MgZmluYW5jaWFsIGFuZCBidXNpbmVzcyBodWIgb24gVmljdG9yaWEgSXNsYW5kIEJhciBCZWFjaCwgd2hpY2ggb3Zlcmxvb2tzIHRoZSBBdGxhbnRpYyBPY2Vhbi4gCk15IGd1dCBpcyBzbyBtZXNzZWQgdXAgYW5kIHdoZW4gaXQgcmVhbGx5IGJhZCwgSSB1bmRlcndlaWdodCBhbmQgSSBmYXN0IHVudGlsIGl0IGNhbG1zIGRvd24uIEkgc3RhcnRlZCAyMCBwb3VuZHMgdW5kZXJ3ZWlnaHQgdGhhdCBJIGhhZCBsb3N0IG92ZXIgOCBtb250aHMgYW5kIHdhcyBqdXN0IHNpY2sgb2YgYmVpbmcgaW4gcGFpbi4gTXkgd2F0ZXIgb25seSBmYXN0IHdhcyA2IGRheXMgYW5kIEkgbG9zdCAxMiBwb3VuZHMuIEkgcmVnYWluZWQgYWxsIHRoZSB3ZWlnaHQgSSBsb3N0IGluIDMgd2Vla3MgYW5kIEkgcmVnYWluZWQgdGhlIDIwIHBvdW5kcyBJIHdhcyBhbHJlYWR5IHVuZGVyd2VpZ2h0IGluIHRoZSBuZXh0IDMgbW9udGhzLgpUaGVyZSBhcmUgbWFueSByZWFzb25zIHdoeSBhIGdpcmwgc2F5cyBubywgYW5kIGEgbG90IG9mIHRoZW0gYXJlIG5vdCBhbiBpbmRpY2F0aW9uIHRoYXQgeW91IGFyZSBkb2luZyBzb21ldGhpbmcgYmFkbHksIG9yIHdyb25nLCBidXQgbWF5YmUgeW91IGhhdmUgYmFkIHRpbWluZy4gSG93IG9mdGVuIGRpZCB5b3UgZ28gb3V0IHdpdGggdGhpcyBnaXJsPyBEbyB5b3UgaGF2ZSBhIHJlbGF0aW9uc2hpcCwgb3IgYXJlIHlvdSBqdXN0IGhvcGluZyBmb3IgYSBob29rIHVwIChzZXgsIG5vIHJlbGF0aW9uc2hpcCk/IFNvbWV0aW1lcyBpdCBpcyBiZXN0IHRvIHRhbGsgYWJvdXQgdGhhdCBiZWZvcmUgdGhlIG1ha2Ugb3V0IHNlc3Npb24sICJpcyBzZXggb24gdGhlIG1lbnUgdG9uaWdodD8iClJlaWtpIGNhbiBiZSB1c2VkIHRvIHRyZWF0IGltYmFsYW5jZXMgb24gcGh5c2ljYWwsIG1lbnRhbCwgZW1vdGlvbmFsIGFuZCBzcGlyaXR1YWwgbGV2ZWxzLiBXaGVuIGFueSBvbmUgb2YgdGhlc2UgYXJlYXMgaXMgb3V0IG9mIGJhbGFuY2UsIHRoZSBvdGhlciBhcmVhcyBhcmUgYWxzbyBhZmZlY3RlZC4gVGh1cyBhIHBoeXNpY2FsIGFmZmxpY3Rpb24gaXMgYmVsaWV2ZWQgdG8gYmUgYSBtYW5pZmVzdGF0aW9uIG9mIGFuIGVuZXJnZXRpYyBpbWJhbGFuY2UgcmF0aGVyIHRoYW4gYSBzeW1wdG9tIHRvIGJlIGVyYWRpY2F0ZWQuIFJlaWtpIHdvcmtzIGJ5IHJlbW92aW5nIGJsb2NrYWdlcyB0byB0aGUgZmxvdyBvZiBsaWZlIGZvcmNlIGJvdGggd2l0aGluIHRoZSBwaHlzaWNhbCBib2R5IGFuZCB0aGUgZW5lcmd5IGZpZWxkcyB0aGF0IGltbWVkaWF0ZWx5IHN1cnJvdW5kIGl0LiBXaGVuIG9uZSdzIGxpZmUgZm9yY2UgaXMgaW4gYmFsYW5jZSwgYSBwZXJzb24gY2FuIHN1c3RhaW4gd2VsbG5lc3Mgb24gYWxsIGxldmVscy4KRGVzIGZldXggYnJsZW50IGVuY29yZSBsb3JzIGRlIGxhIFNhaW50IEplYW4uIFJldnRlbnQgaWxzIHBvdXIgYXV0YW50IGxlIG1tZSBlc3ByaXQgcXVlIGxlcyBmZXV4IGQgVHJzIGNlcnRhaW5lbWVudCBwYXMuIER1IHJlc3RlLCBlc3QgY2UgYmllbiBpbXBvcnRhbnQgZGUgbGUgc2F2b2lyLCBzYWNoYW50IHF1IHRyYWRpdGlvbiBxdWVsbGUgcXUgc29pdCBlc3QgZGVzdGluZSAgcHJpciBzaSBvbiBjaGVyY2hlICBsYSByZXByb2R1aXJlICBsIGluZGZpbmltZW50LiAKRGV0IGJhcmEgb3JzYWthciBtZXIgcHJvYmxlbSBvY2gga29tbWVyIGF0dCBhbnZuZGFzIG1vdCBkaWcuLiAKUkUgeW91ciBwb2ludCB0aGF0IHRoZSBsYXdzIHRhcmdldGVkIEVhc3QgQXNpYW5zLCB0aGUgYW50aSBBc2lhbiBpbW1pZ3JhdGlvbiBsYXdzIGluIHRoZSBVUyBhbHNvIGluY2x1ZGVkIFNvdXRoIEFzaWFucyB3aGljaCBpcyB3aHkgdGhlcmUgd2FzIGJhcmVseSBhbnkgSW5kaWFuIGltbWlncmF0aW9uIHRvIHRoZSBVUyBwcmUgMTk2NS4gCkdiZiB3b3VsZCB0YWtlIHRoZSBzcG90IGJlY2F1c2UgYWxsIHRoZSBzaWRlIGV2ZW50cyBhbmQgY2hhcmFjdGVycyB0aGUgaW1wb3J0YW50IG9uZSBmcm9tIHRoZSBzZXJpZXMgYW5kIHBhcnQgb2YgdGhlIG11bHRpdmVyc2UgaGF2ZSBhIGxvdCBvZiBwbG90IGFuZCBoZWF2aW5lc3MgdGhhdCBtYWtlcyB0aGVtIGdyZWF0IHdlIGFyZSB3YWl0aW5nIGZvciBXaGF0IE1ha2UgVGhlIFNreSBCbHVlIElJSS4gClRoYW5rIHlvdSBSZXRpZWYgSm91YmVydCBDby4gCkEgZmV3IGhpZ2hsaWdodHM6IEJ1cmdlciBLaW5nIHNlcnZlcyB1cCBhIGZyZXNoIDE1IHNlY29uZCBjdXQgb2YgYSBzcG90IGZvciBpdHMgSGFsbG93ZWVuIHRoZW1lZCBOaWdodG1hcmUgS2luZyBidXJnZXIgKEFkIEFnZSdzIEFsZXhhbmRyYSBKYXJkaW5lIHByZXZpZXdlZCB0aGUgY2FtcGFpZ24gbGFzdCB3ZWVrLikgQ2FsbCBvZiBEdXR5OiBCbGFjayBPcHMgNCBnZXRzIGh5cGVkIGluIGEgY2luZW1hdGljIFBsYXlTdGF0aW9uIGFkLiBBbmQgVGlkZSBzZXJ2ZXMgdXAgYSBjb3VwbGUgbW9yZSBvZiBpdHMgbWV0YSBUaWRlIGFkcyBvbmUgc3RhcnJpbmcgVHJveSBBaWttYW4gYW5kIE1pa2UgUGVyZWlyYSwgdGhlIG90aGVyIHN0YXJyaW5nIERlc2hhdW4gV2F0c29uIHRoYXQgYXJlIGFib3V0IFRpZGUgYWRzLgpJZiB5b3VyIGNhdCBjYXRjaGVzIGEgY29sZCwgdGhlcmUgYXJlIGEgc21hbGwgbnVtYmVyIG9mIGZlbGluZSB2aXJ1c2VzIHRoYXQgeW91IGNhbiBhdHRyaWJ1dGUgdGhlIGlsbG5lc3MgdG8uIFRoZXJlIGFyZSB2YWNjaW5lcyBmb3IgdGhlc2VzIHZpcnVzZXMsIGJ1dCB0aGV5IGRvIG5vdCBndWFyYW50ZWUgdGhhdCB5b3VyIGNhdCB3aWxsIG5ldmVyIGNhdGNoIGEgY29sZCBhZ2Fpbi4gCllvdXIgcG9zdCBzZWVtZWQgdG8gYmUgdGhlIG9uZSB0aGF0IHB1dCB0aGlzIGludG8gcGVvcGxlIGhlYWRzIGFzIGJlaW5nIG9rYXksIHNvIGl0IHdhcyByZW1vdmVkIGFsb25nIHdpdGggdGhlIGxvdCBvZiB0aGVtLiAKSSBob25lc3RseSB3b3VsZG4gcHV0IG15IGNoaWxkcmVuIHRocm91Z2ggd2hhdCBJIGV4cGVyaWVuY2VkLiBJIGRvbiBuZWVkIHRvIHJhaXNlIHRoZW0gSU4gYW4gZW5jbGF2ZSwganVzdCB3aXRoaW4gcmVhY2ggb2Ygb25lLiBJIHNwZW50IG15IGVsZW1lbnRhcnkgc2Nob29sIHllYXJzIGluIFNhbiBEaWVnbyAod2UgaGFkIDk5IFJhbmNoIGJhY2sgdGhlbiBidXQgbm9uZSBvZiB0aGUgc3Vycm91bmRpbmcgcmVzdGF1cmFudHMgdGhhdCBoYXZlIHNwcnVuZyB1cCBvdmVyIHRoZSBwYXN0IGRlY2FkZSkgYW5kIEkgdGhpbmsgdGhhdCBnYXZlIG1lIHNvbWUgcGVyc3BlY3RpdmUsIHNpbmNlIG15IG5laWdoYm9yaG9vZCB3YXMgcmVsYXRpdmVseSBkaXZlcnNlIHcvIEFzaWFuLCBIaXNwYW5pYywgYW5kIGEgZmV3IHdoaXRlIGZhbWlsaWVzLiBJIGFsc28gYnJpZWZseSBsaXZlZCBpbiBTYWNyYW1lbnRvLCBpbiBhIG5laWdoYm9yaG9vZCB0aGF0IHdhcyBwcmVkb21pbmFudGx5IGJsYWNrLCBBc2lhbiwgYW5kIEhpc3BhbmljIGFuZCBJIHRoaW5rIHRoYXQgaGVscGVkIGFzIHdlbGwuIExhY2sgb2YgZGl2ZXJzaXR5IChlaXRoZXIgd2F5KSBsZWFkcyB0byBsYWNrIG9mIGF3YXJlbmVzcy4KU3RpciBpdCBhcm91bmQgYSBsaXR0bGUgdG8gZ2V0IHRoZSByaWNlIGNvYXRlZCBpbiBvaWwsIHRoZW4gbGV0IGl0IHNpdC4gCkknbSBjb21pbmcgYXQgdGhpcyBmcm9tIGEgcHVyZWx5ICJ0aGlzIGlzIG5vdCBjb29sIiBwZXJzcGVjdGl2ZS4gClRoZSByZXBvcnQgbm90ZWQgdGhlIGZpc2ggZm9yIHNvbWUgcHJvY2Vzc2VkIHByb2R1Y3RzIG1pZ2h0IHBhc3MgdGhyb3VnaCBmb3VyIG9yIGZpdmUgZGlmZmVyZW50IGNvdW50cmllcyBmb3IgaGFydmVzdGluZywgZnJlZXppbmcvZmlsZXRpbmcvZ3V0dGluZywgY29hdGluZy9icmVhZGluZyBhbmQgcGFja2FnaW5nIHRoZXJlIGxvdHMgb2Ygcm9vbSBmb3IgbWlzbGFiZWxsaW5nLiAKTm93LCBjb21tZXJjaWFsIHNlbGxlcnMgaGF2ZSBlY29ub21pZXMgb2Ygc2NhbGUgdG8gYnJpbmcgdGhlIGNvc3RzIGRvd24sIGJ1dCB0aGV5IGhhdmUgdG8gYWRkIGluIHRoZSBjb3N0cyBvZiB0cmFuc3BvcnRhdGlvbiwgb3ZlcmhlYWQsIG1hcmtldGluZywgZXRjLiAKT3IgaWYgbm90LCB5b3UgYXJlIGFibGUgdG8gc2FmZWx5IG1ha2UgaXQgdG8gc2hvcmUuIApCcm9jayBOZWxzb24gYnJvdWdodCB0aGUgcHVjayB1cCB0aGUgcmlnaHQgc2lkZSBvbiBhIDIgb24gMSBydXNoLCBzZW50IGEgcGFzcyBiYWNrIHRvIHRoZSBsZWZ0IHNpZGUgYXMgaGUgY3Jvc3NlZCB0aGUgZW5kIGxpbmUsIGFuZCBMZWUgcHV0IGl0IHBhc3QgU3BhcmtzIGZvciBoaXMgZm91cnRoIGdvYWwgaW4gc2l4IGdhbWVzLi4gClRoZSBsaW1pdGVkIG92ZXJhbGwgcG9vbCB0byBkcmF3IHBpZWNlcyBmcm9tClRoaXMgaXMgTk9UIHRydWUuIFVubGlrZSBhIGdhbWUgb2YgY2hlc3Mgd2hlcmUgb25lcyBtb3ZlIGFyZSBvdXQgaW4gdGhlIG9wZW4sIFBva2VyIG1ha2VzIHVzZSBvZiB2YXJ5aW5nIGJldHRpbmcgcGF0dGVybnMgYW5kIHRoZSBjb25jZWFsbWVudCBvZiB0aGUgcGxheWVyJ3MgY2FyZHMgbWFraW5nIGl0IHJpZGljdWxvdXNseSBpbXBvc3NpYmxlIGZvciBib3RzIHRvIHNwZWN1bGF0ZSBsaWtlIGh1bWFucyBhbmQgcGxheS4gCkRvIHlvdSBob25lc3RseSB0aGluayB0aG9zZSBDaGluZXNlIGRlYWxlcnMgbWF0dGVyIG9uIGEgbmF0aW9uYWwgc2NhbGU/ClNPIHllYWgsIHRoZXJlIGFyZSBxdWl0ZSBhIGxvdCBvZiBwcmVzc2luZyBwcm9ibGVtcy4gSSBjYW4gZXZlbiBiZWdpbiB0byBnZXQgaW50byBhbnkgb2YgdGhlbSBpbiBhIGh1Z2UgYW1vdW50IG9mIGRldGFpbCBpbiBvbmUgY29tbWVudCB3aXRob3V0IGhpdHRpbmcgMTBrIGNoYXJhY3RlcnMsIHNvIGlmIHlvdSBoYXZlIGFueSBtb3JlIHNwZWNpZmljIHF1ZXN0aW9ucywgSSBiZSBtb3JlIHRoYW4gaGFwcHkgdG8gc2hhcmUgd2hhdCBJIGtub3cgd2l0aCB5b3UhCkJ1dCBLb3ZhY3Mgd2Fzbid0IGFsbCBnb3JpbGxhIG1hc2tzIGFuZCBib3dsZXIgaGF0czsgaGUgd2VudCBiZXlvbmQgY29tbWVyY2lhbCBwYXJvZGllcyBhbmQgcHJhbmtzdGVyIHR3aXN0IGNoYXJhY3RlcnMgbGlrZSBQZXJjeSBEb3ZldG9uc2lscyBhbmQgVW5jbGUgR3J1ZXNvbWUuIFRyYW5zY2VuZGluZyBsYW5ndWFnZSB0aHJvdWdoIG11c2ljIGFzIEtvdmFjcyBzbyBvZnRlbiBkaWQsIGhpcyAia2l0Y2hlbiBzeW1waG9ueSIgaXMgZ29yZ2VvdXMgYW5kIGVsZWdhbnQuIApDYXR0bGUgQ28uIFByb2R1Y2VzIGFydGlzYW4gYmVlZiB0aGF0IHByaW1hcmlseSBncmFzcyBmZWQgd2l0aCBhbiBldGhpYyBvZiBjb25zZXJ2YXRpb24gYW5kIGh1bWFuZSB0cmVhdG1lbnQsIG5vIGFudGliaW90aWNzIGFuZCwgV29vZCBzYWlkLCBubyBzaG9ydGN1dHMuIEZvciBhYm91dCB0d28gbW9udGhzIG5vdywgQnJpY2Ugc2FpZCwgaGlzIHJlc3RhdXJhbnRzIGhhdmUgYmVlbiB1c2luZyBTd2VldHdvb2QgZm9yIG9mIG91ciBiZWVmIHByb2R1Y3RzIGJlY2F1c2Ugb2YgaXRzIGVudmlyb25tZW50YWwgc3RhbmRhcmRzIGFuZCBmbGF2b3IuIApJZiB5b3UgZ29pbmcgb3V0IGhlcmUgaW4gdGFuayBnZWFyLCBldmVuIGJsYWNrIGRoaWRlLCB0aGF0IGNoYW5nZXMgdGhlIGNvbnZlcnNhdGlvbi4gClZzIHJlIHJhaXNlIEknZCAzYiB0aGUgZmxvcCBzbWFsbC4gTmV2ZXIgZXZlciB3YW50IHRvIGphbSBoZXJlLiAKTm90aGluZyB0aGUgZW50b3VyYWdlIGVmZmVjdCBpcyBtb3N0bHkgYnVuayBjb25qZWN0dXJlIHB1dCBmb3J3YXJkIGJ5IGEgZG9jdG9yIHdpdGggbm8gZXhwZXJpZW5jZSBpbiBtb2xlY3VsYXIgYmlvbG9neSBvciByZXNlYXJjaCBtZWRpY2luZS4gSXRzIHRoZSBjYW5uYWJpcyBlcXVpdmFsZW50IG9mIHRoZSBEciB3aG8gc2FpZCB2YWNjaW5lcyBjYXVzZSBhdXRpc20uIApQSVg6IE1pYW1pIE9yYW5nZSBCb3dsIFBsYXllZCBIb3N0IFRvIDUgU3VwZXIgQm93bHNMb21iYXJkaSBLcmFtZXJHcmVlbiBCYXkgUGFja2VycyBjb2FjaCBWaW5jZSBMb21iYXJkaSBpcyBjYXJyaWVkIG9mZiB0aGUgZmllbGQgYWZ0ZXIgaGlzIHRlYW0gZGVmZWF0ZWQgdGhlIE9ha2xhbmQgUmFpZGVycyAzMyB0byAxNCBpbiB0aGUgU3VwZXIgQm93bCBJSSBnYW1lIGluIE1pYW1pLCBGbGEuIG9uIEphbi4gMTQsIDE5NjguIFBhY2tlcnMgZ3VhcmQgSmVycnkgS3JhbWVyICg2NCkgaXMgYXQgcmlnaHQuIChBUCBQaG90bykKRWRpdDogQXMgZm9yIHRoZSBiYW4sIHRoYXQgdG8gbWFrZSBzb2NpZXR5IGEgYml0IHNhZmVyLiBFdmVyeW9uZSBwb2ludHMgdG8gQXVzdHJhbGlhIGFzIGEgcHJpbWUgZXhhbXBsZSBidXQgdGhlIG9ubHkgdGhpbmcgeW91IGNhbiBhY3F1aXJlIHRoZXJlIGlzIGNlbnRlciBmaXJlIHNlbWlhdXRvbWF0aWMgcmlmbGVzLiAKVGhyb3VnaCB0aGUgYWN0aXZpdHkgb2YgeW91ciBtdXNjbGVzLCB0aGUgY2VsbHMgYW5kIHRoZSBpbnRlcnN0aXRpYWwgc3BhY2VzIGFyZSBzcXVlZXplZCAob3IgcHVtcGVkKSBhbmQgdGhlIGZsdWlkIGlzIG1vdmVkIG91dCBvZiB0aGUgYXJlYS4gVGhlIGZsdWlkIHRoZW4gaXMgdHlwaWNhbGx5IGRpcmVjdGVkIHRvIHRoZSBseW1waCBzeXN0ZW0sIHdoZXJlIGl0IGdldHMgY29sbGVjdGVkLCBjb25jZW50cmF0ZWQsIGFuZCBkZWFsdCB3aXRoLiAKV2UgYmVlbiB0b2dldGhlciA0IHllYXJzIGlmIHRoYXQgbWFrZXMgYSBkaWZmZXJlbmNlLi4gClRoZSBwbGF5ZXIgY2FuIGFkYXB0IGFuZCBzdG9wIGZvbGRpbmcgMTAwJSBvZiB0aGUgdGltZS4gVGhpcyBpcyBhbiBpbXBvcnRhbnQgYXNzdW1wdGlvbiB0byBoYXZlIGFzIHdlbGwuIFRvIG1ha2UgaXQgY2xlYXIsIEdUTyBnZXRzIG1pc2NvbnN0cnVlZCB0byBtZWFuIGEgbG90IG9mIHRoaW5ncywgaXQgaXMganVzdCBhIGxvbmcgdGVybSB1bmV4cGxvaXRhYmxlIHN0cmF0ZWd5LiAKSSB0aGluayB0aGUgY2hhcmFjdGVycyB3ZXJlIG1vcmUgZmxlc2hlZCBvdXQuIERpY2sgaXMgd2F5IG1vcmUgdG9sZXJhYmxlIGluIHRoZSBzaG93LCBhbmQgSSBsaWtlIHRoYXQgaGUgYW5kIENhbWlsbGUgaGFkIHNvbWUgc29ydCBvZiBjbG9zdXJlLiBJIHdhcyBtaXNzaW5nIHRoYXQgaW4gdGhlIGJvb2suIEFsYW4gaXMgYWN0dWFsbHkgYSBmdWxseSBmb3JtZWQgaHVtYW4gYmVpbmcsIGFuZCBtb3JlIG9wZW5seSBjb21wbGljaXQgaW4gdGhlIHNob3csIHdoaWNoIEkgZmluZCByZWFsaXN0aWMgKG5vIHdheSBoZSBuZXZlciBzdXNwZWN0ZWQgYW55dGhpbmcpLgpJbHMgY29tcGx0ZXJvbnQgbGV1ciBmb3JtYXRpb24gcmVsYXRpdmUgIGwndXRpbGlzYXRpb24gZGVzIG91dGlscyBqdXJpZGlxdWVzLCAgbGEgcmZsZXhpb24ganVyaWRpcXVlIGFpbnNpIHF1JyBsYSBwcnNlbnRhdGlvbiBkZSByZWNoZXJjaGVzIHBlcnNvbm5lbGxlcyBzb3VzIHVuZSBmb3JtZSBvcmFsZSBvdSBjcml0ZS4gCiJXZSdyZSBnb2luZyB0byBwcm9tb3RlIGEgbWVudSBvZiBzdWl0YWJsZSBwdWIgZm9vZCwgYW5kIHdlIGhhdmUgYSBmYW50YXN0aWMgYmVlciBnYXJkZW4gb3V0IHRoZSBiYWNrIGZvciBmYW1pbGllcyB0byBlbmpveSwiIE1zIFdpbGxpYW1zIHNhaWQuICJUaGUgcHViIGhhcyBiZWVuIHBvcHVsYXIgd2l0aCB0cmFkaWVzIGZvciB5ZWFycywgYW5kIHdlJ3JlIGludGVuZGluZyB0byBjb250aW51ZSBjYXRlcmluZyBmb3IgdGhhdCBtYXJrZXQuIiBSRUFEIEFMU086TGl0dGxlIENhZXNhcnMgcGl6emEgZnJhbmNoaXNlIHRvIGxhdW5jaCBpbiBCYXRodXJzdCBuZXh0IHdlZWsgTXMgV2lsbGlhbXMgaGFzIG92ZXIgMTEgeWVhcnMgZXhwZXJpZW5jZSBpbiB0aGUgaG9zcGl0YWxpdHkgaW5kdXN0cnksIGFuZCBzYWlkIHRoZSBrZXkgdG8gcnVubmluZyBhIHRocml2aW5nIHZlbnVlIGlzIG1haW50YWluaW5nIGEgcG9zaXRpdmUgcmFwcG9ydCB3aXRoIGN1c3RvbWVycy4gIkl0J3MgaW1wb3J0YW50IHRvIGxlbmQgYW4gZWFyIHRvIHB1YmxpY2FucyBhbmQgbGlzdGVuIHRvIHRoZWlyIHN0b3JpZXMsIiBzaGUgc2FpZC4gCkkgYWxsIGluIGZhdm9yIG9mIHJlc2VhcmNoLiBCdXQgbWVkaWNhbCBzY2llbmNlIGtub3dzIGVub3VnaCBhYm91dCBjYW5jZXIgaW4gZ2VuZXJhbCB0byBrbm93IGl0IG5vdCBnb2luZyB0byBoYXZlIGFueSBvbmUgc3BlY2lmaWMgZml4LiBFYWNoIGNhbmNlciBpcyBiYXNpY2FsbHkgYSBkaWZmZXJlbnQgZGlzZWFzZSBhbmQgdGhleSBoYXZlIGRpZmZlcmVudCB0cmVhdG1lbnRzIGJlY2F1c2UgdGhleSBhcmUgZGlmZmVyZW50ICAgc29tZXRpbWVzIHZlcnkgZGlmZmVyZW50ICAgdGhpbmdzLgpJZiBJIGNvdWxkIHN0b3AgZmVhcmluZyBkZWF0aCwgSSBjb3VsZCBwcmlvcml0aXplIHdoYXQgaW1wb3J0YW50IHdpdGggbXkgdGltZSBsZWZ0IGFuZCBtYWtlIHRoZSBtb3N0IG9mIGl0LiAKVGhlcmUgYXJlIGluZXhwZW5zaXZlIGJvb2tzIGp1c3QgZm9jdXNpbmcgb24gdGlzc3VlIHNhbHRzLi4gClRoZXJlIGlzIHJvb20gZm9yIGRldG91cnMgYW5kIHBvZXRpY2lzbS4gCiJUaGVyZSBhcmUgYSBjb3VwbGUgZ3JvdXBzLCBsaWtlIHRoZSBCZWxkZW4gQ2VudGVyIEJsb2NrIENsdWIsIHRoYXQgd2lsbCB0YWtlIGNhcmUgb2YgQmVsZGVuIENlbnRlciBpdHNlbGYsIHdoaWNoIGlzIGEgc21hbGwgbmVpZ2hib3Job29kLCIgaGUgc2FpZC4gCk5vdCB0aGF0IEphY2sgRW50ZXJ0YWlubWVudCBMTEMsIHRoZSBnYW1pbmcgYXJtIG9mIENsZXZlbGFuZCBDYXZhbGllcnMgb3duZXIgRGFuIEdpbGJlcnQncyBidXNpbmVzcyByZWFsbSwgaXMgc3RhbmRpbmcgc3RpbGwuClRoZXJlIGlzIGEgc3BlY2lhbCBjYXRlZ29yeSBmb3IgdGhlIEphcGFuZXNlLCB3aG8gd2hpbGUgcG93ZXJmdWwgYW5kIHdlYWx0aHkgZG8gbm90IGdldCB0aGUgc2FtZSBncnVkZ2luZyByZXNwZWN0IGFzIHdlc3Rlcm5zLCBkdWUgdG8gV1dJSSBhbmQgdGhlIGRpc3Jlc3BlY3QgdGhlIENoaW5lc2UgZmVlbCB0aGV5IHN1ZmZlcmVkIGFuZCBzdGlsbCBzdWZmZXIgZnJvbSB0aGUgSmFwYW5lc2UuLiAKV291bGQgZ2l2ZSB1cCBpdHMgcmlnaHQgdG8gZGVmZW5kIHRoZSBydWxlcyBiYXNlZCBzeXN0ZW0gdGhhdCBpdCBoZWxwZWQgdG8gY3JlYXRlLCBsb3NpbmcgYWNjZXNzIHRvIGFuIGltcG9ydGFudCBmb3J1bSBmb3IgcmVzb2x2aW5nIHRyYWRlIGRpc3B1dGVzLiBUaGUgV1RPIGhhcyBiZWVuIGNyaXRpY2l6ZWQgZm9yIHNsdWdnaXNoIHByb2dyZXNzIGluIHJlY2VudCB0cmFkZSBuZWdvdGlhdGlvbnMsIG5hbWVseSB0aGUgRG9oYSBSb3VuZCwgImJ1dCBpdHMgZGlzcHV0ZSBzZXR0bGVtZW50IGZ1bmN0aW9uIGhhcyBiZWVuIHdpZGVseSBhY2tub3dsZWRnZWQgYXMgaXRzIGNyb3duaW5nIGFjaGlldmVtZW50LCIgYWNjb3JkaW5nIHRvIENoYWQgQnJvd24sIGFub3RoZXIgUElJRSBzZW5pb3IgZmVsbG93Li4gCk9sZGVzdCBhcnRpc2FuYWwgZGlzdGlsbGVyeSwgT2thbmFnYW4gU3Bpcml0cywgd2FzIG9ubHkgZm91bmRlZCBpbiAyMDA0LiBXZSBub3cgaGF2ZSA2NSBkaXN0aWxsZXJpZXMsIG1vc3Qgb2Ygd2hpY2ggb3BlbmVkIGFmdGVyIDIwMTMgd2hlbiB0aGUgTGlxdW9yIENvbnRyb2wgYW5kIExpY2Vuc2luZyBBY3Qgc29tZXdoYXQgb25lcm91cyByZWd1bGF0aW9ucyB3ZXJlIGVhc2VkIGZvciBkaXN0aWxsZXJzLiBUaGF0IG9ubHkgZml2ZSB5ZWFycyBhZ28uIApJdCdzIGEgZ29vZCBzaWduIGlmIHlvdSBjYW4gc3BlYWsgdG8gYSByZWFsIHBlcnNvbiB3aGVuIHlvdSBjYWxsIHRoZSBjb21wYW55J3MgY3VzdG9tZXIgc2VydmljZSBsaW5lLiBZb3UgY2FuIGFsc28gc2VhcmNoIHRoZSBJbnRlcm5ldCBmb3IgY29tcGxhaW50cyBhYm91dCBzY2FtcyBvciBwb29yIHNlcnZpY2UuIApJIHdpbGwgc2F5IHRob3VnaCwgdGhhdCBJIGFtIG1haW5seSBzZWVpbmcgaXQgYXMgSSBoYXZlIHRoZSBvcHBvcnR1bml0eSB0byBkbyBzby4gClRoaXMgaXMgYSB2ZXJ5IG5lZ2F0aXZlIGFuZCBuYXJyb3cgbWluZGVkIHZpZXcuIE9wZW4gcmVsYXRpb25zaGlwcyBhcmVuIGZvciBldmVyeW9uZSwgSSBkb24gdGhpbmsgdGhleSB3b3JrIGZvciBtZSwgYnV0IGJyYW5kaW5nIGV2ZXJ5Ym9keSBwdXJzdWluZyBzdWNoIGFuIGFycmFuZ2VtZW50IGFzICJ3ZWlyZG9zIiBpcyBzaW1wbHkgd3JvbmcuCldhbnQgaGltIHRvIGtlZXAgbG9va2luZyBhdCB5b3UgYW5kIG9ubHkgeW91PyBUaGVyZSBubyBiZXR0ZXIgd2F5IHRoYW4gdG8gZ2V0IHJlYWxseSBob3QuV2hvIGNhcmVzIGFib3V0IHRoZXNlIG90aGVyIGdpcmxzLiAKRHUgdGVtcHMgcG91ciBzb2kKU3RpY2sgR2FtZXMgdGhlIG91dCBiZWxvdyBoZXJlIG9uIHRoZSB3aWxsIHNlZSBpbiB2YXJpb3VzIG9mIGp1c3QgdXAgb2YgZm9yIGFsc28gYW5kIGdhbWJsaW5nIGNvbnNlY3V0aXZlIHRvIHRoZS4gCkkgcmVjb2duaXplIHRoZXJlIGFyZSB2ZXJ5IGZldyBzdHVkaWVzIGFib3V0IHRoaXMsIGFuZCB0aGUgY29ubmVjdGlvbiBiZXR3ZWVuIGRvcGFtaW5lIGFuZCBBREhEIGlzIHN0aWxsIGNvbnNpZGVyZWQgY29udHJvdmVyc2lhbC4gCklmIHlvdSB0YWtlIGEgbG9vayBhdCBpbWFnZXMgb2YgdGhlIFNrdWxkZWxldiBzaGlwcyAod2hpY2ggYXJlIHZlcnkgcGFydGlhbCBzaGlwcykgb3IgdGhlIE9zZWJlcmcgc2hpcCwgdGhleSByZWFsbHkgbm90IHZlcnkgYmlnIGF0IGFsbCAoc2VlIHRoaXMgd2l0aCBwZW9wbGUgdG8gc2NhbGUpICAgdGhlcmUganVzdCBsaXRlcmFsbHkgbm90IHJvb20gZm9yIGFub3RoZXIgZGVjay4gSSBzdXBwb3NlIHRoZXkgY291bGQgaGF2ZSBidWlsdCB0aGUgc2lkZXMgdXAgYW5kIGJlZW4gYWJsZSB0byBkZWNrIG92ZXIgdGhlIGludGVydmVuaW5nIHNwYWNlLCBidXQgdGhhdCB3b3VsZCBoYXZlIG1hZGUgdGhlIG92ZXJhbGwgc2hpcCBoZWF2aWVyIGFuZCBtb3JlIHVud2llbGR5Li4gCkhldXRlIGhhYmVuIGZhc3QgYWxsZSBQb2tlcmJldHJlaWJlciBlaW5lIExpemVueiBkZXIgbj5LYXdhbmFrZSBHYW1pbmcgQ29taXNzaW9uIiBhbHNvIGVpbmUgTGl6ZW56IGRlcyBrYW5hZGlzY2hlbiBJbmRpYW5lcnJlc2VydmF0cyBLYXdhbmFrZSIuIEluIGRlciBvbmxpbmUgUG9rZXIgV2VsdCBnaWx0IGRpZXMgYWxzIFF1YWxpdHRzbWVya21hbC4gUHJpY2UgV2F0ZXJob3VzZSBDb29wZXJzIChwd2MpLiBEaWVzZSBVbnRlcm5laG1lbiBrb250cm9sbGllcmVuIGRpZSBNaXNjaGFsZ29yaXRobWVuIGRlciBLYXJ0ZW5nZWJlci4gT2Z0IHNpbmQgc29sY2hlIFByZnVuZ2VuIGF1Y2ggVm9yYXVzc2V0enVuZyBmciBkZW4gRXJ3ZXJiIHZvbiBMaXplbnplbiB1bmQgZGllIFNlaXRlIGRlciBTaWUgSWhyIGhhcnQgdmVyZGllbnRlcyBHZWxkIGFudmVydHJhdWVuIHNvbGx0ZSBzb2xjaCBlaW4gWmVydGlmaWthdCBpbm5laGFiZW4uCldlbnQgaG9tZSBhbmQgc2VsZiBkaWFnbm9zZWQgbXlzZWxmIHdpdGggSVRCUy4gSSByZXN0ZWQgZm9yIG1vcmUgdGhhbiBhIG1vbnRoIGZyb20gYWxsIHJ1bm5pbmcgYW5kIHN0YWlycy4gSSB3ZW50IG9uIGEgc2hvcnQgcnVuIHRoZSBvdGhlciBkYXksIGFuZCBhYm91dCAyIG1pbGVzIGluIGl0IHNob3QgdXAgb3V0IG9mIG5vd2hlcmUgYWdhaW4gc28gSSBoYWQgdG8gc3RvcCBydW5uaW5nLkkgZmVlbCBzbyBkZWZlYXRlZCBhbmQgSSB3YW50IHRvIGNyeS4gClRoZSBvbmx5IGRpc2FncmVlbWVudCBpcyBhYm91dCBob3cgdG8gY2FzaCBpbi5UaGUgS2VycnkgTHVnYXIgQmlsbCBpcyBhYm91dCBnaXZpbmcgUGFraXN0YW4gbW9uZXkuIEZvciB0aGUgQW1lcmljYW5zLCB0aGUgbGVnaXNsYXRpb24gbWF5IGhhdmUgZXZvbHZlZCBpbnRvIGJlY29taW5nIGFuIGluc3RydW1lbnQgb2YgZGVtb2NyYXRpc2F0aW9uLCBhbiBpbnN0cnVtZW50IG9mIGltcGVyaWFsaXNtLCBvciBhbiBpbnN0cnVtZW50IG9mIGRldmVsb3BtZW50IGFuZCBpdCBtYXkgZXZlbiBiZSBwb3NzaWJsZSB0aGF0IGl0IGlzIGFsbCB0aHJlZSwgb3Igbm9uZSBvZiB0aGUgdGhyZWUuIEJ1dCBmb3IgUGFraXN0YW4sIHRoZSBiaWxsIGhhcyBhbHdheXMgYmVlbiBhYm91dCBvbmUgdGhpbmc6IG1vbmV5LiAKSSBjb3VsZCBnbyBvbiBmb3JldmVyLCBidXQgSSwgdG9vLCBhbSBleGhhdXN0ZWQgdGhpbmtpbmcgYWJvdXQgeW91ciBzdGFuZHBvaW50LiBJdCB1bHRpbWF0ZWx5IGRvZXNuIG1hdHRlciBhdCBhbGw7IHlvdSBhbmQgSSB3aWxsIG5ldmVyIG1lZXQgZWFjaCBvdGhlciBhbmQgZmFjZSBhIHJlYWxpdHkgb2YgZGlmZmVyaW5nIHZpZXdzIG9uIHJlbGF0aW9uc2hpcHMsIHNvIHNlZWsgeW91ciBvd24gaGFwcGluZXNzIHlvdXIgd2F5IGFuZCBJIGRvIHRoZSBzYW1lLgpNYXBzIGFuZCBDb21wYXNzZXMKTmF0YWxpZSB3YXMgYSBwaGlsb3NvcGh5IFBoRCBjYW5kaWRhdGUgYmVmb3JlIGRyb3BwaW5nIG91dCBhbmQgc3RhcnRpbmcgYSB5b3V0dWJlIGNoYW5uZWwuIFNwZWFraW5nIGFzIGEgcGhpbG9zb3BoeSBzdHVkZW50IG15c2VsZiwgYWNhZGVtaWMgc3R1ZHkgb2YgcGhpbG9zb3BoeSB0ZW5kcyB0byBjdWx0aXZhdGUgYSB3YXkgYWJvdXQgaG93IHlvdSBjb25zaWRlciBhbmQgZGlzY3VzcyBzdWJqZWN0cyB0aGF0IG90aGVyIHBlb3BsZSBmaW5kIG9iamVjdGlvbmFibGUgb3V0c2lkZSBhIHN0cmljdGx5IGFjYWRlbWljIGNvbnRleHQuIEl0IHdoeSBwaGlsb3NvcGhlcnMgaGlkZSB1cCBhbmQgYXdheSBpbiB0aGVpciBpdm9yeSB0b3dlcnMgaW5zdGVhZCBvZiBjb21pbmcgZG93biB0byBiZSBoZWNrbGVkIHdpdGggdG9tYXRvZXMgZm9yIGNvbnN0YW50bHkgaW50ZXJqZWN0aW5nIHdpdGggdGhpbmdzIGxpa2UsICJXZWxsIGhhdmUgeW91IGNvbnNpZGVyZWQgdGhlIG1vcmFsIGltcGxpY2F0aW9ucyBvZi4/IiwgYW5kICJTb2NyYXRlcyB3b3VsZCBzYXkuIi4KRGF0YSBQU3RvcmUgaSBqIHggPSBQU3RvcmUgaSAoaiAgPiB4KSBkZXJpdmluZyBGdW5jdG9yCk5hY2ggd2VuaWdlbiBTZWt1bmRlbiB3YXIgU29waGllIGF1c2dlc3RyZWNrdCBhdWYgZGllIExpZWdlIGdlZmVzc2VsdC4gCjIwMTMuIEluOiAyMXN0IEludGVybmF0aW9uYWwgQ29uZmVyZW5jZSBvbiBTb2Z0d2FyZSwgVGVsZWNvbW11bmljYXRpb25zIGFuZCBDb21wdXRlciBOZXR3b3JrcyAoU29mdENPTSksIFByaW1vc3RlbiwgMTggMjAgU2VwdC4gMjAxMyBJRUVFIC4gClRoaXMgbWVhbnMgdGhhdCBkZXNwaXRlIGN1cnJlbnRseSBiZWluZyBmb3VydGggaW4gbWlsZWFnZSwgaGUgZ29pbmcgdG8gbG9zZSB0aGF0IHBvc2l0aW9uIGFzIHNvb24gYXMgaGUgc3RvcHMgZm9yIGhpcyAyNCAocHJvYmFibHkgaW4gSWRpdGFyb2QpLCBhcyBvdGhlciB0ZWFtcyBwYXNzIGhpbS4gCk5vIElEIG9yIGRlc2lnbmF0ZWQgZHJpdmVyIG5lZWRlZApPbiB0aGUgYmFzaXMgb2Ygb3VyIG1lYW4gcHJpY2UgZWxhc3RpY2l0aWVzIG9mIDAuNzAgZm9yIGZydWl0cyBhbmQgMC41OCBmb3IgdmVnZXRhYmxlcywgYSAxMCUgcmVkdWN0aW9uIGluIHRoZSBwcmljZSBvZiB0aGVzZSBmb29kcyB3b3VsZCBpbmNyZWFzZSBwdXJjaGFzZXMgb24gYXZlcmFnZSBieSA3LjAlIGFuZCA1LjglLCByZXNwZWN0aXZlbHkuQW5kIG9mIGNvdXJzZSB0aGUgb3Bwb3NpdGUgaXMgdHJ1ZS4gUHJpY2UgZWxhc3RpY2l0aWVzIGZvciBmb29kcyBhbmQgbm9uYWxjb2hvbGljIGJldmVyYWdlcyByYW5nZWQgZnJvbSAwLjI3IHRvIDAuODEgKGFic29sdXRlIHZhbHVlcyksIHdpdGggZm9vZCBhd2F5IGZyb20gaG9tZSwgc29mdCBkcmlua3MsIGp1aWNlLCBhbmQgbWVhdHMgYmVpbmcgbW9zdCByZXNwb25zaXZlIHRvIHByaWNlIGNoYW5nZXMgKDAuNyAwLjgpLiAKVGhlIEludGVyYWN0aXZlIEdhbWJsaW5nIEFjdCBhbmQgYWxsIGl0cyB2YXJpb3VzIGFtZW5kbWVudHMgd2VyZSBzdXBwb3NlZGx5IGluc3RpdHV0ZWQgaW4gb3JkZXIgdG8gY3VyYiB0aGUgbGVzcyBkZXNpcmFibGUgZWZmZWN0cyBvZiBnYW1ibGluZywgbW9zdCBub3RhYmx5LCBnYW1ibGluZyBhZGRpY3Rpb24uIApFISBOZXdzIGhhcyBjb25maXJtZWQgdGhlIDM2IHllYXIgb2xkIHRoZXNwIG9sZCBwb2tlciBoYW5kIGhhdmluZyBlbnRlcmVkIGFuZCBkb25lIHdlbGwgaW4gc2V2ZXJhbCBwcm9mZXNzaW9uYWwgdG91cm5hbWVudHMgaW5jbHVkaW5nIHRoZSAyMDA3IFdvcmxkIFNlcmllcyBvZiBQb2tlciBhZ3JlZWQgdG8gYW50ZSB1cCAkODAsMDAwIGluIHJlc3RpdHV0aW9uIGluIG9yZGVyIHRvIGJlIGRyb3BwZWQgZnJvbSBvbmdvaW5nIGxpdGlnYXRpb24uCk5vdCBvYnZpb3VzIHRoYXQgdGhpcyBiZWhhdmlvdXIgbWFrZXMgVmFuY291dmVyIGNlcnRhaW5seSBpbiB0aGUgbG9uZyBydW4gbGVzcyBhZmZvcmRhYmxlLCBoZSBzYWlkLiAKQmFjayBhdCB0aGUgbWFpbiBtZW51LiAKSWYgc2hlIGRvZXNuJ3QgaW1wcm92ZSBoZXIgYmVoYXZpb3VyIGFuZCBrZWVwcyBkb2luZyBpdCwgeW91J2xsIGJlIGF0IG5vIGNvbnRhY3QgYmVmb3JlIENocmlzdG1hcy4gCkNCUyB0aHJvd3MgbW92aWVsaWtlIGJ1ZGdldHMgYXQgRGlzY292ZXJ5LCBhbmQgaXQgYWxsIGxvb2tzIHBvbGlzaGVkIGFuZCBjaW5lbWF0aWMsIGJ1dCB0aGF0IHNvbWV0aGluZyBJIHN1YmNvbnNjaW91c2x5IGRvbiBmZWVsIGZpdHMuIFdlIGxpa2UgdGhlIGJvdHRsZSBzaG93IG9yIGxvdyBidWRnZXQgc3RvcmllcyBidXQgYXMgbG9uZyBhcyB0aGV5IHdlbGwgZG9uZSBhbmQgaW1wYXJ0IGEgbWVzc2FnZSwgYnV0IHdlIGFwcHJlY2lhdGUgd2hlbiB0aGV5IHNwbHVyZ2UgdG8gdGVsbCBhIFJFQUxMWSBHT09EIHN0b3J5LgpNYW55IHNpdGVzIGFsc28gcGVyaW9kaWNhbGx5IG9mZmVyIHJlbG9hZCBib251c2VzICh1c3VhbGx5IHJlcXVpcmluZyBhbm90aGVyIGRlcG9zaXQgdW5kZXIgdGhlIHNhbWUgdGVybXMgYW5kIGNvbmRpdGlvbnMgYXMgYSBmaXJzdCB0aW1lIGJvbnVzKSB0byBjdXJyZW50IHBsYXllcnMgdG8gZW50aWNlIHRoZW0gdG8ga2VlcCBwbGF5aW5nIGF0IHRoZSBzaXRlLiBNYW55IHBsYXllcnMgY29udGludW91c2x5IG1vdmUgZnJvbSBzaXRlIHRvIHNpdGUgY29sbGVjdGluZyB0aGVzZSBib251c2VzIChvZnRlbiBjYWxsZWQgYm9udXMgaHVudGluZyksIHdoaWNoIGNhbiBiZSBhIGdvb2Qgd2F5IHRvIGluY3JlYXNlIGEgcGxheWVyJ3MgcHJvZml0IHBlciBob3VyIG9mIHBva2VyIHBsYXkuIEluIGFkZGl0aW9uLCBpZiB5b3UgYXJlIGFibGUgdG8gc2ltcGx5IHBsYXkgYnJlYWsgZXZlbiBwb2tlciwgYm9udXNlcyBjYW4gbWFrZSB5b3UgYSBwcm9maXQgYXMgeW91IGltcHJvdmUgeW91ciBnYW1lLi4gCjE0IHBvaW50cyAgc3VibWl0dGVkIDIzIGRheXMgYWdvLiAKQmVjYXVzZSB0aGlzIGlzIGNyYXp5LiAKQmUgc21hcnQuIENhcnJ5IGVtZXJnZW5jeSBzdXBwbGllcyB3aGVuIGRyaXZpbmcgdGhlIGJhY2sgcm9hZHMuCkp1c3QuIEhlIHdhcyBqdXN0IHRyeWluZyB0byBidXN0IG1lIG9uIHNvbWUgNjAvNDAgaSB0aGluayBjb3MgaGUgd2FzIHNpY2sgb2Ygc2hhcmluZyBhIHRhYmxlIHdpdGggbWUuLiAKT24gdGhlIGZpZWxkIGl0c2VsZiwgdGhlIG90aGVyIG1hbiBzZWNvbmQgd291bGQgYmUgZW1wb3dlcmVkIHVuZGVyIHRoZSBjb2RlIHRvIHNob290IGRvd24gdGhlIHZpb2xhdG9yIHdoZXJlIGhlIHN0b29kLCBidXQgb2ZmIGhhbmQsIHdoaWxlIEkga293IG9mIGV4YW1wbGVzIHdoZXJlIHRoZSB0aHJlYXQgd2FzIG1hZGUsIHN1Y2ggYXMgSmFja3NvbiBEaWNraW5zb24sIEkgY2FuIHJlY2FsbCBpdCBldmVyIGJlaW5nIGNhcnJpZWQgb3V0Li4gCkluIGFkZGl0aW9uLCB0aGUgdGVybSJ5b3V0dWJlIiB0aHJvdWdob3V0IHRoZSBsaXN0IGlzIHVzZWQgaGVyZSB0byBtZWFuIHlvdXR1YmUgaXRzZWxmLGJ1dCBhbHNvICJ0aGUgaW50ZXJuZXQiIGluIGdlbmVyYWwuIApJIHBsYXllZCBtdWx0aXBsZSBldmVudHMsIG9uZSBvZiB3aGljaCB3YXMgdGhlIEFyaWEgMjAxNyBQb2tlciBDbGFzc2ljLCBhIFdQVDUwMCBNYWluIEV2ZW50LiAKSSByYXRoZXIgZ2V0IGEgbm9uIGRpYW1vbmQgcmluZywgdGhhbiBhIGN1YmljIHppcmNvbmlhLiBPciBhIHNhbHQgYW5kIHBlcHBlciBzdG9uZSBvciBibGFjayBkaWFtb25kICh3aGljaCBpc24gcmVhbGx5IGRpYW1vbmQpLiBJIGJlZW4gZG9pbmcgYWxvdCBvZiByZXNlYXJjaCBhbmQgYW0gZ29pbmcgdG8gc2hhcmUgYSBidW5jaCBvZiBsaW5rcyB3aXRoIG15IGJveWZyaWVuZCBzb21ldGltZSB0aGlzIG1vbnRoIChoZSBhc2tlZCBtZSB0bykhCkluIHRoaXMgY2FzZSwgdGhlIHNlcGFyYXRlIGFubm91bmNlbWVudHMgbWFkZSBieSBIYW1hcyBsZWFkZXIgS2hhbGVkIE1lc2hhbCBhbmQgSXNyYWVsaSBQcmltZSBNaW5pc3RlciBCaW55YW1pbiBOZXRhbnlhaHUsIGFzc2VydGVkIHRoYXQgSGFtYXMgd291bGQgcmVsZWFzZSBJc3JhZWxpIHNvbGRpZXIgR2lsYWQgU2hhbGl0LCBjYXB0dXJlZCBieSBIYW1hcyBpbiAyMDA2LCB3aGlsZSBJc3JhZWwgd291bGQgcmVsZWFzZSAxLDAyNyBQYWxlc3RpbmlhbiBwcmlzb25lcnMsIHNvbWUgb2Ygd2hvbSBoYXZlIGJlZW4gaW4gamFpbCBmb3IgZGVjYWRlcy4KSG93IHdhcyB0aGF0IHBvc3NpYmxlPyBBZG1pdHRlZGx5LCBMYW5lIGhhcyBicm9hZCBzaG91bGRlcnMgYW5kIGEgc3RvY2t5IGJ1aWxkLiBTdHVkeWluZyBoZXIgaW4gY291cnQgYXMgRGV0ZWN0aXZlIFNlbmlvciBDb25zdGFibGUgUmljaGFyZCBHYXV0IGRldGFpbHMgaGlzIHBhaW5zdGFraW5nIGVmZm9ydHMgdG8gdHJhY2sgZG93biBUZWdhbiwgSSBjYW4gaW1hZ2luZSBzaGUgbWlnaHQgY2FycnkgYSBwcmVnbmFuY3kgdG8gZml2ZSBvciBldmVuIHNpeCBtb250aHMgYmVmb3JlIGl0IHdhcyBvYnZpb3VzLiBCdXQgbmluZSBtb250aHM/IFF1aXRlIGFwYXJ0IGZyb20gdGhlIGRpZmZpY3VsdHkgb2YgZGlzZ3Vpc2luZyBhIHN3b2xsZW4gYmVsbHksIGl0IGlzIGhhcmQgdG8gYmVsaWV2ZSBzaGUgY291bGQgaGF2ZSBoYWQgdGhyZWUgYmFiaWVzIGluIGZpdmUgeWVhcnMgd2l0aG91dCB0ZWxsaW5nIGFueW9uZSAgIG5vdCBoZXIgYmVzdCBmcmllbmQsIGhlciBtb3RoZXIsIG9yIHRoZSBmb290YmFsbGVyIHdobyBsb3ZlZCBoZXIuIApJIGFsd2F5cyBsb2NrIHRoZSBkb29yIHdoZW4gSSdtIG5vdCBpbiB0aGUgZnJvbnQgZWN0LiAKU28gc2F5cyBhIDIwMDYgc3R1ZHkgb2YgNDYgc3dvcmQgc3dhbGxvd2VycyAoNDAgbWVuKSBwdWJsaXNoZWQgaW4gdGhlIEJyaXRpc2ggTWVkaWNhbCBKb3VybmFsLCB3aGljaCBmb3VuZCBkaXJlIGluanVyaWVzIGxpa2UgaW50ZXN0aW5hbCBibGVlZGluZywgcGVyZm9yYXRpb25zIHRvIHRoZSBwaGFyeW54IGFuZCBlc29waGFnZWFsIGxhY2VyYXRpb25zIGFyZSBtb3JlIGxpa2VseSB0byBwbGFndWUgcGVyZm9ybWVycyB3aXRoIGVsYWJvcmF0ZSByb3V0aW5lcywgdG9vIG1hbnkgY29uc2VjdXRpdmUgc2hvd3Mgb3Igd2hvIHVzZSBtdWx0aXBsZSBzd29yZHMsIGVzcGVjaWFsbHkgdW51c3VhbGx5IHNoYXBlZCBvbmVzLiAKQm92YWRhIGNvbWVzIHVwIDEgYXQgZXZlcnkgc2l0ZSBJIGhhdmViZWVuIHRvLiBJcGVyc29uYWxseSByZWNvbW1lbmQgSnVpY3lTdGFrZXMuIEl0IGlzIHRoZSBiZXN0IGFsbCBhcm91bmQgcG9rZXJzaXRlIGFuZCB5b3UgZG9uJ3QgaGF2ZSB0byBiZSBhIFBybyB0byB3aW4gYSBsaXR0bGUgbW9uZXkuIApJIExPVkUgdGhpcyBnYW1lIHdpdGggZXZlcnl0aGluZyBpbiBtZS4gSSBsaXRlcmFsbHkgY3J5aW5nIGxpa2UgYSBiYWJ5IHJpZ2h0IG5vdyBqdXN0IHdyaXRpbmcgdGhpcy4gCkRTT1RNIGlzIG1vcmUgYXV0aGVudGljIHRvIHRoZWlyIHNvdW5kIGFuZCBhbiBhbGwgYXJvdW5kIGJldHRlciBhbGJ1bSBtdXNpY2FsbHkgYW5kIGEgYmV0dGVyICJpbnRybyB0byBQaW5rIEZsb3lkIiBhbGJ1bS4gUGVyc29uYWxseSBteSBmYXZvcml0ZSBvZiB0aGVpcnMgaXMgcHJvYmFibHkgTWVkZGxlLCBkZXNwaXRlIGl0cyB3ZWlyZCBmaWxsZXIgdHJhY2tzLgpIb3cgZG9lcyBHbG9iYWwgUG9rZXIncyBzd2VlcHN0YWtlcyBtb2RlbCB3b3JrLCBjb21wYXJlZCB0byBvdGhlciBzd2VlcHN0YWtlcyBwb2tlciBzaXRlcyBsaWtlIFB1cmVwbGF5PwpNeSBtaW5kLCBub3RoaW5nIEkgZGlkIHdhcyB1bndhbnRlZCwgQm9iIEtpc3NuZXIgc2FpZCBpbiB0ZXN0aW1vbnkgb24gV2VkbmVzZGF5LiBJIGRpZCB3YXMgaGFyYXNzaW5nLiAKSHVyd2l0eiBsb29rcyBsaWtlIGEgcHJvZmVzc2lvbmFsIGhpdHRlciwgYnV0IG5vdCBtdWNoIHBvd2VyLiBUaW1wZXIgaXMgYW5vdGhlciBzaW5nbGVzIGhpdHRlciB3aXRoIGdvb2Qgc3BlZWQuIExhbmNlIE5pZWtybyBhbmQgVG9kZCBMaW5kZW4gd2VyZSBtYWpvciBkaXNzYXBwb2ludG1lbnRzLi4gClRoZSBuZXcgNzc3WCBpcyBzZXQgZm9yIGZsaWdodCB0ZXN0cyBieSB0aGUgc3VtbWVyIGFuZCBvbiB0cmFjayBmb3IgZGVsaXZlcnkgbmV4dCB5ZWFyLiAKVGhlIFN0dXJnaXMgcG9saWNlIGFycml2ZWQgb24gdGhlIHNjZW5lLCB0YWtpbmcgQWxpY2UgYW5kIGhlciBnaXJscyBpbnRvIGN1c3RvZHkuIApUb3V0IGNvbW1lIGxlIGZlcmFpdCB1biBib24gcHJlLCBsYSBkb3VsZXVyICJ0aXJlIGxhIHNvbmV0dGUgZCdhbGFybWUiIGFmaW4gZGUgbm91cyBwcnNlcnZlciBkdSBkYW5nZXIgZXQgZGUgbm91cyBpbmRpcXVlciBsJ2VuZHJvaXQgcXVpIHNvdWZmcmUsIGRvbnQgaWwgZmF1dCBzJ29jY3VwZXIuLiAKVG9yb250bywgIGNhdXNlIGR1IG1pY3JvY2xpbWF0IGQgYXV4IEdyYW5kcyBMYWNzIGV0IGRlcyBkb25uZXMgbWFucXVhbnRlcyBhdSBkYnV0IGRlcyBhbm5lcyA5MCwgbGVzIHRlbmRhbmNlcyBzb250IG1vaW5zIGNsYWlyZXMgcG91ciBsJ3BhaXNzZXVyIGRlIG5laWdlIGF1IHNvbC4gTWFpcyBsZSBub21icmUgZGUgam91cnMgYXZlYyB1bmUgdGVtcHJhdHVyZSBzdXByaWV1cmUgIHpybywgZW4gcGxlaW4gY29ldXIgZGUgbCdoaXZlciwgYSBhdWdtZW50LgpSZXByZXNlbnRhdGl2ZSBoZXJlIG9mIGNvdXJzZSB3YXMgRnJhbmNpcyBTY290dCBLZXksIHdobyB0dXJuZWQgaGlzIGV4cGVyaWVuY2UgaW50byBhIG5hdGlvbmFsIHdpdG5lc3NpbmcsIHByZXNlbnRpbmcgaXQgaW4gYSBwb2VtIGxhdGVyIHRvIHRvIG11c2ljIHRoYXQgd291bGQgYmVjb21lIHRoZSBuYXRpb25hbCBhbnRoZW0uIApZb3Ugd2FudCB0aGUgYmVzdCBmcmVlIG9ubGluZSBwb2tlciB0aXBzPyBXZWxsLCB3ZSB3aWxsIGdpdmUgeW91IHRoZSBiZXN0IGZyZWUgb25saW5lIHBva2VyIHRpcHMgdGhlbi4K|<---