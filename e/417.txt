<!DOCTYPE html>
<html class="ko" itemscope="" itemtype="http://schema.org/Other">
 <head>
  <title>
   [area1][mkey1][keyword1][symbolx][area1][keywordx][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="authenticity_token" name="csrf-param"/>
  <meta content="znkf7qFTwrkDiNT1VbXEtV08BoBi66leO6z1aEbIc/0=" name="csrf-token"/>
  <meta charset="utf-8"/>
  <meta content="width=device-width, initial-scale=1.0" name="viewport"/>
  <meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible"/>
  <meta content="Kyoto,Travel,Official,Guide,Kinkakuji,Ginkakuji,Kiyomizu,Temple,Shrine" name="author"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="722307967862942" property="fb:app_id"/>
 </head>
 <body class="ko shrine_temple_category">
  <div style="width:1px;height:1px;overflow:hidden">
  </div>
  <div id="fb-root">
  </div>
  <noscript>
  </noscript>
  <div class="cookie__bar jqmWindow" id="dialog">
   <div class="cookie__bar__box">
    <div class="cookie__bar__txt">
     <p>
      By using this site, you agree to the use of cookies. See our
      [ahref]
      
      for more information.
     </p>
    </div>
    <div>
     <button class="cookie__bar__close">
      Accept
     </button>
    </div>
   </div>
  </div>
  <header>
   <div class="center u-clearfix">
    <h1>
     [area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]
    </h1>
    <p class="logo">
     [ahref]
     
    </p>
    <div id="whether">
    </div>
    <div class="lang_pc c-pc-b">
     <label class="select-wrap entypo-down-open-mini" for="language">
      <select id="language" name="">
       <option value="en">
        English
       </option>
       <option value="fr">
        français
       </option>
       <option value="cn">
        简体中文
       </option>
       <option value="tw">
        繁體中文
       </option>
       <option selected="" value="ko">
        한글
       </option>
       <option value="es">
        Español
       </option>
       <option value="de">
        Deutsch
       </option>
       <option value="it">
        Italiano
       </option>
       <option value="ar">
        العربية
       </option>
       <option value="tr">
        türk
       </option>
       <option value="ms">
        Melayu
       </option>
       <option value="th">
        ไทย
       </option>
       <option value="ru">
        русский
       </option>
      </select>
     </label>
    </div>
    <div id="spMenuArea">
     <div id="spMenuBack">
      <p>
       MENU
      </p>
     </div>
     <div id="spMenuBox">
      <div id="spMenu">
       [ahref]
       
      </div>
     </div>
    </div>
    <nav class="headnav">
     <div class="center">
      <div class="search">
       <form action="/ko/search">
        <p class="search_image">
         <li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[link]<li>[ahref]</li>
        </p>
       </form>
      </div>
      <div class="lang c-sp-b">
       <label class="select-wrap entypo-down-open-mini" for="language">
        <select id="language" name="">
         <option value="en">
          English
         </option>
         <option value="fr">
          français
         </option>
         <option value="cn">
          简体中文
         </option>
         <option value="tw">
          繁體中文
         </option>
         <option selected="" value="ko">
          한글
         </option>
         <option value="es">
          Español
         </option>
         <option value="de">
          Deutsch
         </option>
         <option value="it">
          Italiano
         </option>
         <option value="ar">
          العربية
         </option>
         <option value="tr">
          türk
         </option>
         <option value="ms">
          Melayu
         </option>
         <option value="th">
          ไทย
         </option>
         <option value="ru">
          русский
         </option>
        </select>
       </label>
      </div>
      <ul id="mainnav">
       <li class="top">
        [link]
        
        <li class="listOpen plan">
         <span>
          방문 일정 짜기
         </span>
         <ul>
          <li>
           [link]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [link]
           
          </li>
          <li>
           [link]
           
          </li>
         </ul>
        </li>
        <li class="listOpen things">
         <span>
          해야할 일
         </span>
         <ul>
          <li>
           [link]
           
          </li>
          <li>
           <a href="/ko/thingstodo/entertainment">
            엔터테인먼트 및 관광 명소
           </a>
          </li>
          <li>
           [link]
           
          </li>
         </ul>
        </li>
        <li class="listOpen shrines">
         <span>
          관광명소
         </span>
         <ul>
          <li>
           <a href="/ko/shrine_temple/category_worldheritage">
            세계유산
           </a>
          </li>
          <li>
           [link]
           
          </li>
          <li>
           <a href="/ko/shrine_temple/category_east">
            동쪽
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [link]
           
          </li>
          <li>
           [link]
           
          </li>
          <li>
           <a href="/ko/shrine_temple/category_other">
            다른
           </a>
          </li>
         </ul>
        </li>
        <li class="listOpen food">
         <span>
          음식 문화
         </span>
         <ul>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [link]
           
          </li>
          <li>
           <a href="/ko/food/201">
            면
           </a>
          </li>
          <li>
           <a href="/ko/food/202">
            정진 요리
           </a>
          </li>
          <li>
           [link]
           
          </li>
          <li>
           <a href="/ko/food/204">
            일본 요리
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [link]
           
          </li>
          <li>
           [link]
           
          </li>
          <li>
           <a href="/ko/food/208">
            식재료
           </a>
          </li>
         </ul>
        </li>
        <li class="listOpen traveler">
         <span>
          여행자 키트[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][ahref][link]<li>[search]</li>[ahref]<li>[search]</li><li>[link]</li>[search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]<li>[link]</li>[search][link][search]
         </span>
         <ul>
          <li>
           [link]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a href="/ko/traveller_kit/areas">
            주변 지역
           </a>
          </li>
          <li>
           <a href="/ko/traveller_kit/mobile_apps">
            모바일 애플 리케이션
           </a>
          </li>
          <li>
           <a href="/ko/traveller_kit#disabilitise">
            장애인을위한
           </a>
          </li>
          <li>
           <a href="/ko/latest_news">
            최신 뉴스
           </a>
          </li>
         </ul>
        </li>
       </li>
      </ul>
      <div class="sns">
       <p>
        <li>[search]</li><li>[search]</li>[link]<li>[link]</li>[ahref][search]<li>[link]</li>
       </p>
       <p>
        [ahref]
        
       </p>
       <p>
        <li>[link]</li>[search][link]<li>[link]</li><li>[ahref]</li>[link]<li>[link]</li>
       </p>
       <p>
        [link]
        
       </p>
      </div>
      <div class="subnav">
       <ul>
        <li>
         [link]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         <a href="/ko/privacypolicy">
          Privacy Policy
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
      </div>
     </div>
    </nav>
   </div>
  </header>
  <div id="pageTitle">
   <h2>
    <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
   </h2>
  </div>
  <div id="pageContent">
   <div class="roop">
    <div class="center">
     <div class="gridArea">
      <div class="gridBox4">
       <a class="scale_p" href="/ko/shrine_temple/163">
       </a>
       <p class="title">
        Daikaku-ji Temple<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link][search]
       </p>
       <p class="text">
        Daikaku-ji Temple is a temple of treasures. Steeped ...
       </p>
       <p class="btnMore">
        더 읽어보기<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><li>[search]</li>[ahref]<li>[search]</li>[ahref]<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><li>[ahref]</li>[search][ahref][link][search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]<li>[ahref]</li>[link][search][search]
       </p>
      </div>
      <div class="gridBox4">
       [link]
       
       <p class="title">
        Gio-ji Temple[link]<li>[link]</li>[ahref]<li>[search]</li>[link][ahref]<li>[search]</li><li>[ahref]</li>[ahref]
       </p>
       <p class="text">
        Gio-ji Temple is a quiet temple surrounded by trees ...
       </p>
       <p class="btnMore">
        [link]
        
       </p>
      </div>
      <div class="gridBox4">
       [ahref]
       
       <p class="title">
        Kinkaku-ji Temple (Golden Pavilion)
       </p>
       <p class="text">
        The image of the temple richly adorned in gold leaf ...
       </p>
       <p class="btnMore">
        더 읽어보기<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][search]<li>[link]</li>[link]
       </p>
      </div>
      <div class="gridBox4">
       [ahref]
       
       <p class="title">
        Koryu-ji Temple[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][search]
       </p>
       <p class="text">
        Koryu-ji Temple, founded in the year 603, is the old...[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[link]</li>[search]<li>[link]</li>
       </p>
       <p class="btnMore">
        더 읽어보기<li>[link]</li>[ahref]<li>[search]</li>[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]<li>[search]</li>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
       </p>
      </div>
      <div class="gridBox4">
       [link]
       
       <p class="title">
        Ninna-ji Temple
       </p>
       <p class="text">
        Ninna-ji Temple has it all - an exquisite five-story...
       </p>
       <p class="btnMore">
        [link]
        
       </p>
      </div>
      <div class="gridBox4">
       [ahref]
       
       <p class="title">
        Ryoan-ji Temple
       </p>
       <p class="text">
        It is Japan's most famous "hiraniwa" (flat garden vo...[link][link]<li>[search]</li>[ahref]<li>[search]</li>
       </p>
       <p class="btnMore">
        [link]
        
       </p>
      </div>
      <div class="gridBox4">
       <a class="scale_p" href="/ko/shrine_temple/169">
       </a>
       <p class="title">
        Taizo-in Temple
       </p>
       <p class="text">
        The temple of Taizo-in has been beloved by people fo...
       </p>
       <p class="btnMore">
        [ahref]
        
       </p>
      </div>
      <div class="gridBox4">
       [search]
       
       <p class="title">
        Tenryu-ji Temple<li>[link]</li><li>[ahref]</li><li>[link]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[link]</li><li>[link]</li>
       </p>
       <p class="text">
        Tenyru-ji is a major temple of the Rinzai School. It...
       </p>
       <p class="btnMore">
        <li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[search][search][search]<li>[search]</li>[ahref][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>
       </p>
      </div>
     </div>
    </div>
   </div>
  </div>
  <section class="social-buttons japanpaper">
   <div class="social-button facebook">
    <div ,="" class="fb-like" current_page.url)="" data-action="like" data-href="http://kyoto.travel/ko/shrine_temple/category_west" data-layout="box_count" data-share="false">
    </div>
   </div>
   <div class="social-button twitter">
    [link]
    
   </div>
   <div class="social-button googleplus">
    <div class="g-plusone" data-href="http://kyoto.travel/ko/shrine_temple/category_west" data-size="tall">
    </div>
   </div>
  </section>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0420
  </b>
 </body>
</html>
<div class="roop" id="footerSp">
 <div class="center">
  <div class="gridArea">
   <div class="gridBox3">
    [link]
    
   </div>
   <div class="gridBox3">
    [ahref]
    
   </div>
   <br/>
   <div class="gridBox5">
    [ahref]
    
   </div>
   <div class="gridBox5">
    [link]
    
   </div>
   <div class="gridBox5">
    [link]
    
   </div>
   <div class="gridBox5">
    <a data-ad-bundle-key="sunrise" data-ad-name="sunrise" data-ad-unit-name="b1" href="/shop/itdw/info/e/?siteID=ktg" rel="ads" target="_blank">
    </a>
   </div>
  </div>
 </div>
</div>
<footer role="contentinfo">
 <section id="footer_nav">
  <nav class="main u-clearfix">
   <div class="inmain">
    <ul class="col column5_2">
     <li class="navhead">
      방문 일정 짜기
     </li>
     <li>
      <a href="/ko/planyourvisit/seasonalcourse">
       계절별 코스
      </a>
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [ahref]
      
     </li>
    </ul>
    <ul class="col column5_2">
     <li class="navhead">
      해야할 일
     </li>
     <li>
      [link]
      
     </li>
     <li>
      [link]
      
     </li>
     <li>
      [link]
      
     </li>
    </ul>
    <ul class="col column5_2">
     <li class="navhead">
      관광명소
     </li>
     <li>
      <a href="/ko/shrine_temple/category_worldheritage">
       세계유산
      </a>
     </li>
     <li>
      <a href="/ko/shrine_temple/category_north">
       북
      </a>
     </li>
     <li>
      [link]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      <a href="/ko/shrine_temple/category_south">
       남쪽
      </a>
     </li>
     <li>
      [ahref]
      
     </li>
    </ul>
    <ul class="col column5_2">
     <li class="navhead">
      음식 문화
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [link]
      
     </li>
     <li>
      <a href="/ko/food/199">
       스시
      </a>
     </li>
     <li>
      <a href="/ko/food/200">
       뎀푸라
      </a>
     </li>
     <li>
      [link]
      
     </li>
     <li>
      [link]
      
     </li>
     <li>
      [link]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      <a href="/ko/food/205">
       각국요리
      </a>
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [link]
      
     </li>
    </ul>
    <ul class="col column5_2">
     <li class="navhead">
      여행자 키트
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      <a href="/ko/traveller_kit/accessinfo">
       액세스 정보
      </a>
     </li>
     <li>
      [link]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [link]
      
     </li>
     <li>
      <h3>
       [area4][keyword4][symbolx][area4][keywordx][symbolx][bracketl8][bracketr8][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      [link]
      
     </li>
     <li>
      <a href="/ko/traveller_kit/mobile_apps">
       모바일 애플 리케이션
      </a>
     </li>
     <li>
      <a href="/ko/traveller_kit#disabilitise">
       장애인을위한
      </a>
     </li>
     <li>
      [link]
      
     </li>
    </ul>
   </div>
  </nav>
 </section>
 <section id="footer_under">
  <div class="main u-clearfix">
   <div id="footer_logo">
    <p>
    </p>
   </div>
   <div id="footer_right">
    <div class="inmain">
     <div class="u-clearfix" id="footer_subnav">
      <ul>
       <li>
        <a href="/ko/aboutus">
         조직 소개
        </a>
       </li>
       <li>
        <a href="/ko/privacypolicy">
         Privacy Policy
        </a>
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div id="social">
     <p class="left">
      [search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[search]</li>[search][ahref][link][search][search]<li>[ahref]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li>[link][link]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[link]
     </p>
     <p class="left">
      <a href="/visitkyoto">
      </a>
     </p>
     <p class="left">
      [ahref]
      
     </p>
    </div>
   </div>
  </div>
 </section>
 <div id="footer_copy">
  <p>
   ©City of Kyoto and Kyoto City Tourism Association All rights reserved.
  </p>
 </div>
</footer>
