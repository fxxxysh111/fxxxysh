<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="ko" xml:lang="ko" xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="content-type"/>
  <title>
   [area1][mkey1][keyword1][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="title"/>
  <meta content="수원교통정보" name="author"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
 </head>
 <body id="main">
  <noscript>
   <p class="etc">
    자바스크립트를 지원하지 않습니다. 메뉴가 정상적으로 작동하지 않을 수 있습니다.<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>[link]<li>[search]</li><li>[search]</li><li>[search]</li>
   </p>
  </noscript>
  <div id="container_outer">
   <div id="container">
    <dl id="skipnavigation">
     <dt class="skip">
      바로가기 메뉴
     </dt>
     <dd>
      [ahref]
      
     </dd>
    </dl>
    <noscript>
     *  본 브라우저는 스크립트를 지원하지 않습니다. 홈페이지가 정상적으로 보이지 않을때는 최신 브라우저를 설치하여 사용하시길 권장합니다.
    </noscript>
    <div id="header_wrap">
     <div id="header">
      <h1 id="logo">
       [area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]
      </h1>
      <ul id="global">
       <li>
        [link]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [link]
        
       </li>
      </ul>
      <div class="gnb" id="nav">
       <ul id="gn">
        <li class="category01">
         <p>
          [ahref]<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]
         </p>
         <ul id="gn1">
          <li>
           [ahref]
           
          </li>
          <li>
           [link]
           
          </li>
          <li>
           <a href="/_lmth/01_switsinfo/swits_0301.jsp">
           </a>
          </li>
          <li>
           [link]
           
          </li>
         </ul>
        </li>
        <li class="category02">
         <p>
          <li>[search]</li><li>[link]</li><li>[link]</li>[ahref][ahref][link][link][ahref]
         </p>
         <ul id="gn2">
          <li>
           [ahref]
           
          </li>
          <li>
           [link]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a href="/trafficInfo/s5_cctvInfo.jsp" target="_self" title="새창열림">
           </a>
          </li>
         </ul>
        </li>
        <li class="category03">
         <p>
          [ahref]
          
         </p>
         <ul id="gn3">
          <li>
           [link]
           
          </li>
          <li>
           [link]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </li>
        <li class="category04">
         <p>
          [ahref][ahref][link]<li>[search]</li>[link]
         </p>
         <ul id="gn4">
          <li>
           [link]
           
          </li>
          <li>
           <a href="/_lmth/04_parkinginfo/parking_0201.jsp">
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </li>
        <li class="category05">
         <p>
          <li>[link]</li><li>[search]</li><li>[search]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
         </p>
         <ul id="gn5">
          <li>
           <a href="/_lmth/05_etcinfo/board_0101.jsp">
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [search]
           
          </li>
         </ul>
        </li>
        <li class="category06">
         <p>
          [ahref]
          
         </p>
         <ul id="gn6">
          <li>
           <a href="/_lmth/05_etcinfo/myweb.jsp">
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </li>
       </ul>
      </div>
     </div>
    </div>
    <div class="mainBody">
     <div id="wrap">
      <div id="body_contents">
       <div id="main_visual">
        <div class="visual_con">
         <h2>
          <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
         </h2>
         <div class="box">
          <ul>
           <li class="icon01">
            [link]
            
           </li>
           <li class="icon02">
            [link]
            
           </li>
           <li class="icon03">
            [ahref]
            
           </li>
           <li class="icon04">
            [ahref]
            
           </li>
          </ul>
         </div>
        </div>
        <div id="v_img">
         <ul>
          <li>
          </li>
          <li>
          </li>
         </ul>
         <p style="display:none;">
          <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li><li>[search]</li><li>[search]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][link]<li>[search]</li>
         </p>
        </div>
       </div>
       <div id="content01">
        <div class="cont_left01">
         <div class="list" id="tab1">
          <h2 class="skip">
           [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
          </h2>
          <div class="tabmenu">
           <ul>
            <li>
             [link]
             
             <div class="tabcontent" id="tab1c1">
              <ul>
               <li>
                <dl>
                 <dt>
                  팔달로
                 </dt>
                 <dd>
                  교육청사거리
                  장안문로터리
                  <span class="green">
                   (원활,35km/h)
                  </span>
                 </dd>
                 <dt>
                  팔달로
                 </dt>
                 <dd>
                  장안문로터리
                  교육청사거리
                  <span class="green">
                   (원활,49km/h)
                  </span>
                 </dd>
                 <dt>
                  팔달로
                 </dt>
                 <dd>
                  장안문로터리
                  화서문로터리
                  <span class="yellow">
                   (서행,20km/h)
									[ahref][search][link]<li>[ahref]</li><li>[search]</li>
                  </span>
                 </dd>
                 <dt>
                  팔달로
                 </dt>
                 <dd>
                  화서문로터리
                  장안문로터리
                  <span class="green">
                   (원활,30km/h)
                  </span>
                 </dd>
                 <dt>
                  권광로
                 </dt>
                 <dd>
                  청소년문화센터
                  효성사거리
                  <span class="green">
                   (원활,36km/h)
									<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>
                  </span>
                 </dd>
                </dl>
               </li>
              </ul>
              <div class="columnBtn">
               <span class="btnPause btnPause3">
                [ahref]
                
                [ahref]
                
                [link]
                
               </span>
              </div>
              <div class="tabmore">
               [ahref]
               
              </div>
             </div>
            </li>
            <li>
             [ahref]
             
             <div class="tabcontent" id="tab1c3">
              <ul>
               <li>
                <dl>
                 <dd>
                  사용자 지정 도로소통정보가 없습니다.
                 </dd>
                </dl>
               </li>
              </ul>
              <div class="columnBtn">
               [ahref]
               
               [link]
               
               [ahref]
               
              </div>
             </div>
            </li>
           </ul>
          </div>
         </div>
        </div>
        <div class="con_right01">
         <div id="popupZone">
          <h2>
           <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
          </h2>
          <div id="picpr">
           <div id="prnum">
           </div>
           <div id="prcon">
            <ul>
             <li>
              [ahref]
              
              [link]
              
              [link]
              
              [ahref]
              
              [link]
              
              <a class="n6" href="/hpg/cmm/min/hpgMain.do" target="_blank" title="새창열림">
              </a>
              [link]
              
              [ahref]
              
              <a class="n9" href="/web/board/BD_board.view.do?bbsCd=1042&amp;seq=20180823174320608" target="_blank" title="새창열림">
              </a>
              [ahref]
              
              [ahref]
              
              [link]
              
              [ahref]
              
              [ahref]
              
             </li>
            </ul>
           </div>
           <div class="prcontrol" id="prcontrol">
            <ul>
             <li>
              [link]
              
             </li>
             <li>
              [link]
              
             </li>
            </ul>
           </div>
          </div>
         </div>
        </div>
       </div>
       <noscript>
        <div class="mainMenuNoscript" style="float:left; width:100%;">
         <ul>
          <li>
           [link]
           
           <ul>
            <li>
             [ahref]
             
            </li>
            <li>
             [link]
             
            </li>
            <li>
             <a href="/switsInfo/s3_its_mobile.jsp" title="모바일접속방법">
              모바일접속방법
             </a>
            </li>
            <li>
             [link]
             
            </li>
            <li>
             [ahref]
             
            </li>
           </ul>
          </li>
          <li>
           [link]
           
           <ul>
            <li>
             [ahref]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [link]
             
            </li>
            <li>
             [link]
             
            </li>
            <li>
             [link]
             
            </li>
           </ul>
          </li>
          <li>
           [link]
           
           <ul>
            <li>
             [link]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             <a href="/statisticInfo/s3_stTrafficjam.jsp" title="상습정체통계">
              상습정체통계
             </a>
            </li>
           </ul>
          </li>
          <li>
           <a href="/busInfo/s1_busRoute.jsp" title="버스정보">
            버스정보
           </a>
           <ul>
            <li>
             [ahref]
             
            </li>
            <li>
             [link]
             
            </li>
            <li>
             [link]
             
            </li>
            <li>
             [link]
             
            </li>
            <li>
             [link]
             
            </li>
           </ul>
          </li>
          <li>
           [link]
           
           <ul>
            <li>
             <a href="/parkingInfo/s1_parkingInfo.jsp" title="공영/거주자우선주차장">
              공영/거주자우선주차장
             </a>
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [link]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [ahref]
             
            </li>
           </ul>
          </li>
          <li>
           [ahref]
           
           <ul>
            <li>
             <a href="/selfInfo/showMyPage.jsp" title="SMS서비스">
              SMS서비스
             </a>
            </li>
            <li>
             <h3>
              [area4][keyword4][symbolx][area4][keywordx][symbolx][bracketl8][bracketr8][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
             </h3>
             [ahref]
             
            </li>
           </ul>
          </li>
          <li>
           [ahref]
           
           <ul>
            <li>
             <a href="/board/s1_board_notice_list.jsp" title="공지사항">
              공지사항
             </a>
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [link]
             
            </li>
           </ul>
          </li>
          <li>
           [link]
           
           <ul>
            <li>
             [ahref]
             
            </li>
            <li>
             [link]
             
            </li>
           </ul>
          </li>
         </ul>
        </div>
       </noscript>
       <div class="cont_left02">
        <div class="list" id="tab2">
         <h2 class="skip">
          [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
         </h2>
         <div class="tabmenu2">
          <ul>
           <li>
            [ahref]
            
            <div class="tabcontent2" id="tab2c1">
             <ul>
              <li>
               [link]
               
               <span>
                2018/07/20[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
               </span>
              </li>
              <li>
               [ahref]
               
               <span>
                2018/04/12[ahref]<li>[ahref]</li>[search][search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li>[search]
               </span>
              </li>
              <li>
               [ahref]
               
               <span>
                2018/04/11[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][link][link][search]
               </span>
              </li>
              <li>
               <a href="/_lmth/05_etcinfo/board_0101_view.jsp?NOTIFY_IDX=MzE2" onclick="goNotify('MzE2'); return false;">
                2018 경기국제하프마라톤 대회 개최에 따른 교통통제
               </a>
               <span>
                2018/02/06
               </span>
              </li>
              <li>
               [link]
               
               <span>
                2017/06/09<li>[link]</li>[link]<li>[search]</li><li>[ahref]</li>[link]<li>[ahref]</li><li>[ahref]</li>[link]<li>[search]</li>
               </span>
              </li>
             </ul>
             <div class="tabmore2">
              [link]
              
             </div>
            </div>
           </li>
           <li>
            [link]
            
           </li>
           <li>
            [link]
            
           </li>
          </ul>
         </div>
        </div>
       </div>
       <div class="cont_right02">
        <dl class="bann01">
         <dt>
          [link]
          
         </dt>
         <dd class="more">
          [ahref]
          
         </dd>
         <dd class="img">
          [link]
          
         </dd>
        </dl>
        <dl class="bann02">
         <dt>
          <a href="/_lmth/05_etcinfo/mybus.jsp">
          </a>
         </dt>
         <dd class="more">
          [ahref]
          
         </dd>
         <dd class="img">
          <a href="/_lmth/05_etcinfo/mybus.jsp">
          </a>
         </dd>
        </dl>
       </div>
      </div>
     </div>
     <div id="banner">
      <h2>
       [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
      </h2>
      <div class="control">
      </div>
      <div class="ban_more">
       [ahref]
       
      </div>
      <div class="updown">
      </div>
      <div class="banner_slide" id="rolling_11">
       <div class="banner_in">
        [link]
        
        [ahref]
        
        [link]
        
        [ahref]
        
        [ahref]
        
       </div>
       <div class="banner_in">
        [ahref]
        
        [link]
        
       </div>
      </div>
     </div>
    </div>
   </div>
   <div id="footer_outer">
    <div id="footer">
     <div id="foot_logo">
      <ul>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
     <div id="foot_link">
      <ul>
       <li class="fir">
        <a href="/_lmth/01_switsinfo/swits_0301.jsp">
         사이트사용방법
        </a>
       </li>
       <li>
        [link]
        
       </li>
       <li class="last">
        [ahref]
        
       </li>
      </ul>
     </div>
     <div id="foot_add">
      <p>
       본 홈페이지에 게시된 이메일 주소가 자동수집되는 것을 거부하며, 위반시 정보통신망법에 의해 처벌됩니다.[link][search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]
      </p>
      <address>
       경기도 수원시 영통구 대학4로 33(수원시 도시안전통합센터)
       <strong>
        TEL
       </strong>
       : 031 - 228 - 3345,
       <strong>
        FAX
       </strong>
       : 031 - 228 - 4454
      </address>
      <p>
       Copyright ⓒ 2015 Suwon City. All rights reserved
      </p>
     </div>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0409
  </b>
 </body>
</html>
