<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <title>
   [area1][mkey1][keyword1][symbolx][area1][keywordx][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
 </head>
 <body background="http://ep.yimg.com/ca/I/paulgraham_2271_0" bgcolor="ffffff" link="000099" text="000000" vlink="464646">
  <table border="0" cellpadding="0" cellspacing="0">
   <tr valign="top">
    <td>
     <map name="1862e58dbf68b173">
      <area coords="0,0,67,21" href="index.html" shape="rect"/>
      <area coords="0,21,67,42" href="articles.html" shape="rect"/>
      <area coords="0,42,67,63" href="http://www.amazon.com/gp/product/0596006624" shape="rect"/>
      <area coords="0,63,67,84" href="books.html" shape="rect"/>
      <area coords="0,84,67,105" href="http://ycombinator.com" shape="rect"/>
      <area coords="0,105,67,126" href="http://startupschool.org" shape="rect"/>
      <area coords="0,126,67,147" href="arc.html" shape="rect"/>
      <area coords="0,147,67,168" href="lisp.html" shape="rect"/>
      <area coords="0,168,67,189" href="antispam.html" shape="rect"/>
      <area coords="0,189,67,210" href="kedrosky.html" shape="rect"/>
      <area coords="0,210,67,231" href="faq.html" shape="rect"/>
      <area coords="0,231,67,252" href="raq.html" shape="rect"/>
      <area coords="0,252,67,273" href="quo.html" shape="rect"/>
      <area coords="0,273,67,294" href="rss.html" shape="rect"/>
      <area coords="0,294,67,315" href="bio.html" shape="rect"/>
      <area coords="0,315,67,336" href="https://twitter.com/paulg" shape="rect"/>
      <area coords="0,336,67,357" href="nsearch.html" shape="rect"/>
      <area coords="0,357,67,378" href="ind.html" shape="rect"/>
     </map>
    </td>
    <td>
    </td>
    <td>
     [ahref]
     
     <br>
      <li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[search]</li>[ahref]<li>[link]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][search]<li>[ahref]</li>[search]
     </br>
     <br/>
     <table border="0" cellpadding="0" cellspacing="0" width="435">
      <tr valign="top">
       <td width="435">
        <a href="/ca/I/paulgraham_2202_8087295">
        </a>
        <br>
         <li>[link]</li><li>[search]</li><li>[ahref]</li><li>[ahref]</li><li>[ahref]</li>[ahref][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>
        </br>
        <br>
         [ahref][link]<li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[search][ahref][ahref][link][link][ahref][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
        </br>
        <br/>
        <br/>
        <font face="verdana" size="2">
         <table cellspacing="0" width="100%">
          <tr>
           <td bgcolor="#ff9922">
            <font size="2">
             <b>
              Want to start a startup?
             </b>
             Get funded by
             <a href="/apply.html">
              Y Combinator
             </a>
             .
            </font>
            <br>
             <li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[search][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
            </br>
           </td>
          </tr>
         </table>
         <p>
          March 2008, rev. June 2008
          <br/>
          <br/>
          Technology tends to separate normal from natural.  Our bodies
weren't designed to eat the foods that people in rich countries eat, or
to get so little exercise.  
There may be a similar problem with the way we work: 
a normal job may be as bad for us intellectually as white flour
or sugar is for us physically.
          <br>
           <li>[link]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[link]</li><li>[ahref]</li><li>[search]</li>[ahref]
          </br>
          <br>
           <li>[link]</li>[link][ahref][ahref][ahref]<li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>
          </br>
          I began to suspect this after spending several years working 
with startup founders.  I've now worked with over 200 of them, and I've
noticed a definite difference between programmers working on their
own startups and those working for large organizations.
I wouldn't say founders seem happier, necessarily;
starting a startup can be very stressful. Maybe the best way to put
it is to say that they're happier in the sense that your body is
happier during a long run than sitting on a sofa eating
doughnuts.
          <br/>
          <br>
           [link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref]<li>[search]</li>[ahref]
          </br>
          Though they're statistically abnormal, startup founders seem to be
working in a way that's more natural for humans.
          <br>
           [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>
          </br>
          <br/>
          I was in Africa last year and saw a lot of animals in the wild that
I'd only seen in zoos before. It was remarkable how different they
seemed. Particularly lions. Lions in the wild seem about ten times
more alive. They're like different animals. I suspect that working
for oneself feels better to humans in much the same way that living
in the wild must feel better to a wide-ranging predator like a lion.
Life in a zoo is easier, but it isn't the life they were designed
for.
          <br/>
          <br>
           [link]<li>[ahref]</li><li>[link]</li>[search][ahref]
          </br>
          <b>
           Trees
          </b>
          <br/>
          <br>
           [link]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]
          </br>
          What's so unnatural about working for a big company?  The root of
the problem is that humans weren't meant to work in such large
groups.
          <br>
           [search]<li>[ahref]</li>[ahref][search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][link]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
          </br>
          <br>
           <br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref]<li>[search]</li>[ahref]<li>[link]</li>[ahref]<li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]
          </br>
          Another thing you notice when you see animals in the wild is that
each species thrives in groups of a certain size.  A herd of impalas
might have 100 adults; baboons maybe 20; lions rarely 10.  Humans
also seem designed to work in groups, and what I've read about
hunter-gatherers accords with research on organizations and my own
experience to suggest roughly what the ideal size is: groups of 8
work well; by 20 they're getting hard to manage; and a group of 50
is really unwieldy.
          <font color="#999999">
           [
           [ahref]
           
           ]
          </font>
          <br/>
          <br>
           [search][link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[link]
          </br>
          Whatever the upper limit is, we are clearly not meant to work in
groups of several hundred.  And yet—for reasons having more
to do with technology than human nature—a great many people
work for companies with hundreds or thousands of employees.
          <br/>
          <br/>
          Companies know groups that large wouldn't work, so they divide
themselves into units small enough to work together.  But to
coordinate these they have to introduce something new: bosses.
          <br/>
          <br>
           [ahref][ahref][ahref]<li>[search]</li>[search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]<li>[ahref]</li>
          </br>
          These smaller groups are always arranged in a tree structure.  Your
boss is the point where your group attaches to the tree.  But when
you use this trick for dividing a large group into smaller ones,
something strange happens that I've never heard anyone mention
explicitly.  In the group one level up from yours, your boss
represents your entire group.  A group of 10 managers is not merely
a group of 10 people working together in the usual way.  It's really
a group of groups.  Which means for a group of 10 managers to work
together as if they were simply a group of 10 individuals, the group
working for each manager would have to work as if they were a single
person—the workers and manager would each share only one
person's worth of freedom between them.
          <br/>
          <br>
           <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search][link]<li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li>
          </br>
          In practice a group of people are never able to act as if they were
one person.  But in a large organization divided into groups in
this way, the pressure is always in that direction.  Each group
tries its best to work as if it were the small group of individuals
that humans were designed to work in.  That was the point of creating
it.  And when you propagate that constraint, the result is that
each person gets freedom of action in inverse proportion to the
size of the entire tree.
          <font color="#999999">
           [
           [ahref]
           
           ]
          </font>
          <br/>
          <br/>
          Anyone who's worked for a large organization has felt this.  You
can feel the difference between working for a company with 100
employees and one with 10,000, even if your group has only 10 people.
          <br/>
          <br>
           [link][search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>[link]<li>[ahref]</li><li>[ahref]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>
          </br>
          <b>
           Corn Syrup
          </b>
          <br/>
          <br/>
          A group of 10 people within a large organization is a kind of fake
tribe.  The number of people you interact with is about right.  But
something is missing: individual initiative.  Tribes of hunter-gatherers
have much more freedom.  The leaders have a little more power than other
members of the tribe, but they don't generally tell them what to
do and when the way a boss can.
          <br/>
          <br/>
          It's not your boss's fault.  The real problem is that in the group
above you in the hierarchy, your entire group is one virtual person.
Your boss is just the way that constraint is imparted to you.
          <br>
           <li>[search]</li><li>[ahref]</li><li>[link]</li><li>[ahref]</li><li>[link]</li><li>[search]</li>[search][search]
          </br>
          <br>
           [link]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[search]<li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[ahref]</li>[link][link][ahref]<li>[link]</li><li>[link]</li><li>[ahref]</li><li>[ahref]</li>
          </br>
          So working in a group of 10 people within a large organization feels
both right and wrong at the same time.   On the surface it feels
like the kind of group you're meant to work in, but something major
is missing.  A job at a big company is like high fructose corn
syrup: it has some of the qualities of things you're meant to like,
but is disastrously lacking in others.
          <br/>
          <br>
           [search][link]<li>[link]</li>[search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[ahref]</li>
          </br>
          Indeed, food is an excellent metaphor to explain what's wrong with
the usual sort of job.
          <br/>
          <br>
           <li>[link]</li>[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>
          </br>
          For example, working for a big company is the default thing to do,
at least for programmers.  How bad could it be?  Well, food shows
that pretty clearly.  If you were dropped at a random point in
America today, nearly all the food around you would be bad for you.
Humans were not designed to eat white flour, refined sugar, high
fructose corn syrup, and hydrogenated vegetable oil.  And yet if
you analyzed the contents of the average grocery store you'd probably
find these four ingredients accounted for most of the calories.
"Normal" food is terribly bad for you.  The only people who eat
what humans were actually designed to eat are a few Birkenstock-wearing
weirdos in Berkeley.
          <br/>
          <br>
           [link]<li>[ahref]</li>[link]<li>[search]</li><li>[link]</li>[search]<li>[search]</li>[search]<li>[ahref]</li><li>[search]</li>[ahref]<li>[ahref]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>
          </br>
          If "normal" food is so bad for us, why is it so common?  There are
two main reasons. One is that it has more immediate appeal.  You
may feel lousy an hour after eating that pizza, but eating the first
couple bites feels great.  The other is economies of scale.
Producing junk food scales; producing fresh vegetables doesn't.
Which means (a) junk food can be very cheap, and (b) it's worth
spending a lot to market it.
          <br>
           [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li><li>[ahref]</li>
          </br>
          <br>
           [ahref]<li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li><li>[link]</li><li>[search]</li><li>[link]</li>
          </br>
          If people have to choose between something that's cheap, heavily
marketed, and appealing in the short term, and something that's
expensive, obscure, and appealing in the long term, which do you
think most will choose?
          <br/>
          <br/>
          It's the same with work.  The average MIT graduate wants to work
at Google or Microsoft, because it's a recognized brand, it's safe,
and they'll get paid a good salary right away.  It's the job
equivalent of the pizza they had for lunch.  The drawbacks will
only become apparent later, and then only in a vague sense of
malaise.
          <br>
           [link]<li>[ahref]</li>[link]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[link]</li><li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>[ahref][ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]<li>[ahref]</li>[search]
          </br>
          <br>
           [ahref][link]<li>[link]</li><li>[ahref]</li><li>[ahref]</li>[link]
          </br>
          And founders and early employees of startups, meanwhile, are like
the Birkenstock-wearing weirdos of Berkeley:  though a tiny minority
of the population, they're the ones living as humans are meant to.
In an artificial world, only extremists live naturally.
          <br/>
          <br>
           <li>[link]</li><li>[search]</li>[link]<li>[link]</li>[search]
          </br>
          <b>
           Programmers
          </b>
          <br>
           <li>[link]</li>[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]<li>[ahref]</li><li>[search]</li>
          </br>
          <br>
           [ahref][ahref]<li>[link]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][search][search]
          </br>
          The restrictiveness of big company jobs is particularly hard on
programmers, because the essence of programming is to build new
things.  Sales people make much the same pitches every day; support
people answer much the same questions; but once you've written a
piece of code you don't need to write it again.  So a programmer
working as programmers are meant to is always making new things.
And when you're part of an organization whose structure gives each
person freedom in inverse proportion to the size of the tree, you're
going to face resistance when you do something new.
          <br/>
          <br>
           <li>[ahref]</li><li>[ahref]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[ahref][ahref]<li>[ahref]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][ahref][search]
          </br>
          This seems an inevitable consequence of bigness.  It's true even
in the smartest companies.  I was talking recently to a founder who
considered starting a startup right out of college, but went to
work for Google instead because he thought he'd learn more there.
He didn't learn as much as he expected.  Programmers learn by doing,
and most of the things he wanted to do, he couldn't—sometimes
because the company wouldn't let him, but often because the company's
code wouldn't let him.  Between the drag of legacy code, the overhead
of doing development in such a large organization, and the restrictions
imposed by interfaces owned by other groups, he could only try a
fraction of the things he would have liked to.  He said he has
learned much more in his own startup, despite the fact that he has
to do all the company's errands as well as programming, because at
least when he's programming he can do whatever he wants.
          <br>
           [ahref][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[ahref]<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<li>[search]</li><li>[ahref]</li><li>[search]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[search]<li>[ahref]</li>[link]
          </br>
          <br/>
          An obstacle downstream propagates upstream.  If you're not allowed
to implement new ideas, you stop having them.  And vice versa: when
you can do whatever you want, you have more ideas about what to do.
So working for yourself makes your brain more powerful in the same
way a low-restriction exhaust system makes an engine more powerful.
          <br/>
          <br>
           [search]<li>[search]</li><li>[link]</li>[search]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link][search]<li>[ahref]</li><li>[ahref]</li>[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]
          </br>
          Working for yourself doesn't have to mean starting a startup, of
course.  But a programmer deciding between a regular job at a big
company and their own startup is probably going to learn more doing
the startup.
          <br>
           <li>[search]</li>[ahref][ahref]<li>[search]</li><li>[ahref]</li>[link]
          </br>
          <br>
           <li>[ahref]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]
          </br>
          You can adjust the amount of freedom you get by scaling the size
of company you work for.  If you start the company, you'll have the
most freedom.  If you become one of the first 10 employees you'll
have almost as much freedom as the founders.  Even a company with
100 people will feel different from one with 1000.
          <br>
           <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li><li>[ahref]</li>
          </br>
          <br>
           <li>[search]</li><li>[ahref]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>
          </br>
          Working for a small company doesn't ensure freedom.  The tree
structure of large organizations sets an upper bound on freedom,
not a lower bound.  The head of a small company may still choose
to be a tyrant.  The point is that a large organization is compelled
by its structure to be one.
          <br>
           [search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[link]</li>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><li>[ahref]</li>[link]
          </br>
          <br>
           <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[link]<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li><li>[search]</li><li>[search]</li><li>[ahref]</li>
          </br>
          <b>
           Consequences
          </b>
          <br/>
          <br>
           <li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>[link]<li>[ahref]</li>[link]<li>[ahref]</li>
          </br>
          That has real consequences for both organizations and individuals.
One is that companies will inevitably slow down as they grow larger,
no matter how hard they try to keep their startup mojo.  It's a
consequence of the tree structure that every large organization is
forced to adopt.
          <br/>
          <br/>
          Or rather, a large organization could only avoid slowing down if
they avoided tree structure.  And since human nature limits the
size of group that can work together, the only way I can imagine
for larger groups to avoid tree structure would be to have no
structure: to have each group actually be independent, and to work
together the way components of a market economy do.
          <br/>
          <br/>
          That might be worth exploring.  I suspect there are already some
highly partitionable businesses that lean this way.  But I don't
know any technology companies that have done it.
          <br>
           <li>[search]</li>[link][search]<li>[search]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
          </br>
          <br>
           [ahref]<li>[link]</li><li>[link]</li>[search][search][search][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>
          </br>
          There is one thing companies can do short of structuring themselves
as sponges:  they can stay small.  If I'm right, then it really
pays to keep a company as small as it can be at every stage.
Particularly a technology company.  Which means it's doubly important
to hire the best people.  Mediocre hires hurt you twice: they get
less done, but they also make you big, because you need more of
them to solve a given problem.
          <br>
           <li>[link]</li><li>[search]</li><li>[search]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[link]
          </br>
          <br>
           [link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]<li>[ahref]</li><li>[link]</li><li>[ahref]</li><li>[link]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[search]</li>[ahref][link]<li>[link]</li><li>[ahref]</li>
          </br>
          For individuals the upshot is the same: aim small.  It will always
suck to work for large organizations, and the larger the organization,
the more it will suck.
          <br/>
          <br/>
          In an
          [link]
          
          I wrote a couple years ago 
I advised graduating seniors
to work for a couple years for another company before starting their
own.  I'd modify that now.  Work for another company if you want
to, but only for a small one, and if you want to start your own
startup, go ahead.
          <br>
           [link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[search]<li>[ahref]</li><li>[ahref]</li><li>[search]</li><li>[search]</li><li>[link]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[search]<li>[ahref]</li>[ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<li>[ahref]</li>[search]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
          </br>
          <br/>
          The reason I suggested college graduates not start startups immediately
was that I felt most would fail.  And they will.  But ambitious
programmers are better off doing their own thing and failing than
going to work at a big company.  Certainly they'll learn more.  They
might even be better off financially.  A lot of people in their
early twenties get into debt, because their expenses grow even
faster than the salary that seemed so high when they left school.
At least if you start a startup and fail your net worth will be
zero rather than negative.
          <font color="#999999">
           [
           <a href="n">
            <h2>
             <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
            </h2>
            <font color="#999999">
             3
            </font>
           </a>
           ]
          </font>
          <br/>
          <br>
           <li>[link]</li>[ahref]<li>[link]</li><li>[search]</li>[ahref][link][ahref][ahref][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref][link][search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
          </br>
          We've now funded so many different types of founders that we have
enough data to see patterns, and there seems to be no benefit from
working for a big company.  The people who've worked for a few years
do seem better than the ones straight out of college, but only
because they're that much older.
          <br/>
          <br>
           <li>[search]</li><li>[link]</li>[link][search][link][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[ahref]</li>
          </br>
          The people who come to us from big companies often seem kind of
conservative.  It's hard to say how much is because big companies
made them that way, and how much is the natural conservatism that
made them work for the big companies in the first place.  But
certainly a large part of it is learned.  I know because I've seen
it burn off.
          <br/>
          <br>
           <li>[ahref]</li>[ahref]<li>[ahref]</li><li>[ahref]</li>[search]<li>[link]</li>[ahref][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link][ahref]<li>[link]</li>[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
          </br>
          Having seen that happen so many times is one of the things that
convinces me that working for oneself, or at least for a small
group, is the natural way for programmers to live.  Founders arriving
at Y Combinator often have the downtrodden air of refugees.  Three
months later they're transformed: they have so much more
          [ahref]
          
          that they seem as if they've grown several inches taller.
          <font color="#999999">
           [
           [link]
           
           ]
          </font>
          Strange as this sounds, they seem both more worried and happier at the same
time.  Which is exactly how I'd describe the way lions seem in the
wild.
          <br/>
          <br>
           [search][ahref]<li>[link]</li><li>[link]</li>[link]<li>[ahref]</li>[ahref][link]<li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][search][ahref]<li>[link]</li>[search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
          </br>
          Watching employees get transformed into founders makes it clear
that the difference between the two is due mostly to environment—and
in particular that the environment in big companies is toxic to
programmers.   In the first couple weeks of working on their own
startup they seem to come to life, because finally they're working
the way people are meant to.
          <br/>
          <br/>
          <br>
           <li>[link]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>
          </br>
          <br>
           <li>[search]</li>[ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
          </br>
          <br>
           <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[search][search]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
          </br>
          <br/>
          <b>
           Notes
          </b>
          <br/>
          <br>
           [search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref]<li>[search]</li><li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
          </br>
          [
          <a name="f1n">
           <font color="#000000">
            1
           </font>
          </a>
          ]
When I talk about humans being meant or designed to live a
certain way, I mean by evolution.
          <br/>
          <br>
           <br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search][ahref]<li>[ahref]</li>[search]<li>[ahref]</li><li>[search]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
          </br>
          [
          [link]
          
          ]
It's not only the leaves who suffer.  The constraint propagates
up as well as down.  So managers are constrained too; instead of
just doing things, they have to act through subordinates.
          <br/>
          <br/>
          [
          [search]
          
          ]
Do not finance your startup with credit cards.  Financing a
startup with debt is usually a stupid move, and credit card debt
stupidest of all.  Credit card debt is a bad idea, period.  It is
a trap set by evil companies for the desperate and the foolish.
          <br/>
          <br>
           <li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li>[ahref][search][link]<li>[ahref]</li>[search][search]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>
          </br>
          [
          [link]
          
          ]
The founders we fund used to be younger (initially we encouraged
undergrads to apply), and the first couple times I saw this I used
to wonder if they were actually getting physically taller.
          <br/>
          <br>
           <li>[ahref]</li>[search][ahref][ahref]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[link][link][ahref]<li>[ahref]</li>[ahref]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][search]
          </br>
          <b>
           Thanks
          </b>
          to Trevor Blackwell, Ross Boucher, Aaron Iba, Abby
Kirigin, Ivan Kirigin, Jessica Livingston, and Robert Morris for
reading drafts of this.
          <br/>
          <br>
           <li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><li>[search]</li><li>[link]</li>[link][ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><li>[ahref]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[link]</li><li>[search]</li>[link]
          </br>
          <br clear="all">
           [link]<li>[link]</li>[ahref]<li>[link]</li>[ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><li>[ahref]</li><li>[search]</li><li>[link]</li>
          </br>
         </p>
        </font>
       </td>
      </tr>
     </table>
     <br>
      [ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref][search]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][search][link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][ahref]<li>[link]</li>[search][link]
     </br>
     <table border="0" cellpadding="0" cellspacing="0" width="435">
      <tr>
       <td>
       </td>
      </tr>
      <tr valign="top">
       <td width="435">
        <font face="verdana" size="2">
         [ahref]
         
         <br/>
        </font>
       </td>
      </tr>
      <tr>
       <td>
       </td>
      </tr>
      <tr>
       <td>
       </td>
      </tr>
      <tr valign="top">
       <td width="435">
        <font face="verdana" size="2">
         [link]
         
         <br/>
        </font>
       </td>
      </tr>
      <tr>
       <td>
       </td>
      </tr>
     </table>
     <br>
      <li>[ahref]</li>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>
     </br>
     <table border="0" cellpadding="0" cellspacing="0" width="435">
      <tr>
       <td>
        <font face="verdana" size="2">
         <br/>
         <br/>
         <hr/>
        </font>
       </td>
      </tr>
     </table>
    </td>
   </tr>
  </table>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0284
  </b>
 </body>
</html>