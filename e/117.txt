--->|VGhhdCB3YXMgdGhlIGNsb3Nlc3QgSSBldmVyIHdhcyB0byBhIG5hdGlvbmFsbHkgY292ZXJlZCBzaG9vdGluZywgaXQgcmVhbGx5IGJyb2tlIHRoZSA0dGggd2FsbCBmb3IgbWUuIApGb3IgdGhlIG1vc3QgcGFydCwgS29yZWFucyB3YXRjaCBKQVYuIEl0IHRoZSBjbG9zZXN0IHRoZXkgY2FuIGdldCB0byB0aGVtc2VsdmVzIGFlc3RoZXRpY2FsbHkgd2l0aG91dCByZWx5aW5nIG9uIHRoZSBXZXN0LiBUaGV5IHRvcnJlbnQgYW5kIHVzZSBzdHJlYW1pbmcgc2l0ZXMgdmlhIHByb3hpZXMuIApUaGUgUGxlZGdlIG9mIEFsbGVnaWFuY2Ugd2FzIHdyaXR0ZW4gYnkgRnJhbmNpcyBCZWxsYW15MSAoMTg1NSAxOTMxKSBpbiAxODkyIGZvciB0aGUgNDAwdGggYW5uaXZlcnNhcnkgb2YgdGhlIGFycml2YWwgb2YgQ2hyaXN0b3BoZXIgQ29sdW1idXMgdG8gdGhlIFdlc3Rlcm4gSGVtaXNwaGVyZS4gVGhlIENocmlzdGlhbiBTb2NpYWxpc3QgQmFwdGlzdCBNaW5pc3RlciBCZWxsYW15IHN0YXJ0ZWQgdGhlIHBsZWRnZSBvdXQgYXMgYSBzaW1wbGUgY29uZmlybWF0aW9uLCBhbmQgYXQgb25lIHRpbWUgY29uc2lkZXJlZCB0aGUgaW5jbHVzaW9uIG9mIHRoZSB3b3JkICJlcXVhbGl0eSIgaW4gdGhlIG1lc3NhZ2UsIGJ1dCBiYWNrZWQgYXdheSBhZnRlciBoZSBzYXcgcG90ZW50aWFsIGRpZmZpY3VsdGllcyB3aXRoIHRoZSB3b3JkLCB3aGF0IHdpdGggdGhlIHNvY2lhbCBhbmQgbGVnYWwgZXhjbHVzaW9ucyBvZiB3b21lbiBhbmQgcGVvcGxlIG9mIGNvbG9yIGdldHRpbmcgaW4gdGhlIHdheSBvZiB0aGUgY29uY2VwdC4gMTkzMC4gVGhlcmUgd2VyZSBzZXZlcmFsIHNhbHV0ZXMgdG8gdGhlIGZsYWcgdGhhdCB3ZXJlIGFkb3B0ZWQgb3ZlciB0aGUgeWVhcnMsIGluY2x1ZGluZyB0aGlzIHRoZSwgdGhlICJCZWxsYW15IFNhbHV0ZSIsIHdoaWNoIG9mIGNvdXJzZSBmYWRlZCBhd2F5IHF1aWNrbHkgd2l0aCB0aGUgY29taW5nIG9mIFdXSUkuIEFub3RoZXIgdmVyc2lvbiBvZiB0aGlzIHNhbHV0ZSBlbmRlZCB3aXRoIHRoZSBwYWxtIHVwLgpTbyBpbiB0aGUgcHJldmlvdXMgY2hhcHRlciBiYXNlZCBvbiB3aGF0IHRoZSBzaXN0ZXIgc2FpZCBJIGFzc3VtZWQgaXQgbWlnaHQgaGF2ZSBqdXN0IGJlZW4gYW4gaW5mYXR1YXRpb24gd2l0aCB0aGUgaWRlYSBvZiB0aGUgaGVybyBvciBnZW5lcmFsIGludGVyZXN0IGluICJoZXIgZGVzdGlueSIgYXMgdGhlIGhvbHkgbWFpZGVuIGJ1dCB1cG9uIHZpZXdpbmcgaXQgaW4gdGhlIGNvbnRleHQgb2YgaGVyIGxpdGVyYWxseSBoYXZpbmcgYSAiaGVybyBzZW5zb3IiIGluIGhlciBoZWFkIHN1ZGRlbmx5IGFkZHMgdGhlIGltcGxpY2F0aW9uIHRoYXQgc29tZXRoaW5nIG1heSBoYXZlIGxpdGVyYWxseSBhbHRlcmVkIGhlciBkdXJpbmcgdGhlIHdob2xlICJiZWNvbWluZyBob2x5IG1haWRlbiIgdGhpbmcgYW5kIGl0IHNvdW5kcyBhIGxvdCBjcmVlcGllciB3aXRoIHdoYXQgaGVyIHNpc3RlciBzYWlkIGFib3V0ICJiZWNvbWluZyBhIGVtcHR5IHB1cHBldCIgbWFrZXMgdGhlIHdob2xlIHRoaW5nIHNvdW5kIGEgbG90IGRhcmtlciBhbmQgY3JlZXBpZXIuT3B0aW11cyBfcmh5bWUgIDUgcG9pbnRzICBzdWJtaXR0ZWQgMTAgaG91cnMgYWdvdGhlcmUgaXMgc29tZSBjb29sIHBvdGVudGlhbCBoZXJlIGZvciB0aGUgd2hvbGUgbWFuZ2EgdG8gYmUgYSBkZWNvbnN0cnVjdGlvbiBvZiBpc2VrYWkgdHJvcGVzLiBIYXZlIHRoZSBob2x5IG1haWRlbi8xc3QgcHJpbmNlc3MgYmUgYSBmaWd1cmUgb2JzZXNzZWQgd2l0aCB0aGUgaGVybyB3aG8gYXQgZmlyc3Qgc2VlbXMgc3ltcGF0aGV0aWMgdW50aWwgeW91IHJlYWxpemUgc2hlIGxvc3QgaGVyIHBlcnNvbmFsaXR5IGR1ZSB0byBicmFpbndhc2hpbmcsIHRoZSAybmQgcHJpbmNlc3MgYXQgZmlyc3Qgc2VlbXMgZXZpbCB1bnRpbCB5b3UgcmVhbGl6ZSBzaGUgd2FzIGF0dGVtcHRpbmcgdG8gcHJvdGVjdCBoZXIgc2lzdGVyIGFzIHdlbGwgYXMga2VlcCB0aGUgaGVybyBhd2F5IGJlY2F1c2UgaGVyb2VzIGluIHRoaXMgd29ybGQgYXJlIGFraW4gdGhpbmcga2luZ2RvbXMgdXNlIGFzIHdlYXBvbnMsIHdpdGggdGhlIGhvbHkgbWFpZGVucyBiZWluZyBhIHdheSB0byBjb250cm9sIHRoZW0uYnV0IEkgZG9udCB0aGluayBpdCB3aWxsIGdvIHRoYXQgZGlyZWN0aW9uLCBJIGRvbnQgdGhpbmsgdGhlcmUgYXJlIGFueSB1bHRlcmlvciByZWFzb25zIGZvciB3aHkgdGhlIDFzdCBwcmluY2VzcyBpcyBvYnNlc3NlZCB3aXRoIHRoZSBoZXJvIG90aGVyIHRoYW4gImJlY2F1c2UgaXNla2FpIi4KSWYgeW91IGhhdmUgdGV4dCB0aGF0IHlvdSBhYnNvbHV0ZWx5IG5lZWQgdG8gc3RvcmUgZm9yIGxvbmcgdGVybSAoMTAwKyB5ZWFycykgdGhlIG9ubHkgcmVhbCBmb29scHJvb2Ygb3B0aW9uIGlzIHRvIGRpc3RyaWJ1dGUgY29waWVzIGdlb2dyYXBoaWNhbGx5IGFuZCBwcmludCB0aG9zZSBjb3BpZXMgd2l0aCBhIHByb3BlciB3ZXQgcHJvY2VzcyBzaWx2ZXIgaGFpbGlkZSBwaG90byBwcmludGVyIG9yIHVzZSBhbiBpbmtqZXQgd2l0aCBhY2lkIGZyZWUgY290dG9uIHJhZyBhcmNoaXZhbCBwYXBlciBhbmQgcGlnbWVudCBpbmsuIApGaXJzdCBvbmUsIDIwIHllYXJzIG9sZDogSXQgc3RhcnRlZCBhcyBwYWluIGluIG15IGxvd2VyIGJhY2ssIGZhciByaWdodCBzaWRlLiBZb3Uga25vdyB3aGVuIHlvdSBnZXQgYSBkZWFkIGxlZywgaG93IHRoZSBwYWluIGlzIGludGVuc2UsIGFuZCB0aGVuIGZhZGVzPyBUaGF0IHByZXR0eSBtdWNoIGhvdyBteSBiYWNrIGZlbHQuIEl0IHdvdWxkIGdldCBpbnRlbnNlLCB0aGVuIGZhZGUuIEludGVuc2UsIHRoZW4gZmFkZS4gU28gaXQgc2xvd2x5IHN0YXJ0cyBtb3ZpbmcgYXJvdW5kIHRvIHRoZSBmcm9udCBvZiB5b3VyIGJvZHkuIApQcmV2aW91cyByZXNlYXJjaCBoYXMgaW5kaWNhdGVkIHRoYXQgcGhvc3BoYXRpZHlsc2VyaW5lIChQUykgc3VwcGxlbWVudGF0aW9uIGhhcyB0aGUgcG90ZW50aWFsIHRvIGF0dGVudWF0ZSB0aGUgc2VydW0gY29ydGlzb2wgcmVzcG9uc2UgdG8gYWN1dGUgZXhlcmNpc2Ugc3RyZXNzLiAKT25saW5lIFBva2VyIFJldmlld3MgVGlwIDU6IFBzc3N0LCBwYXkgYXR0ZW50aW9uLgpJIGhhdmUgbW92ZWQgYXJvdW5kIG92ZXIgdGhlIHllYXJzIGFuZCB0cmllZCBkaWZmZXJlbnQgY2hpcm8gb2ZmaWNlcyBhbmQgTk9ORSBjb21wYXJlIHRvIHRoaXMgb2ZmaWNlLiAKU2hhcmVzIGluIDg4OCB3ZXJlIHVwIDIuOCUgdG8gMTQ5cCBpbiBtaWQgbW9ybmluZyB0cmFkZS4KV2lyIGJld2VyYmVuIHVucywgd2VpbCB3aXIgYmVyZWl0cyAyMDE0IG1pdCBlaW5lbSBQdW5rdCBHcnVwcGVubGV0enRlciB3YXJlbi4gCldlIGlkZW50aWZpZWQgYSBwcm9ibGVtIGF0IGxhcmdlLCBzbyB0aGUgbmV4dCByYXRpb25hbCBzdGVwIHdvdWxkIGJlIHRvIGZpeCBzYWlkIHByb2JsZW0uIE1vdmluZyBmb3J3YXJkLCBJIHRoaW5rIHdlIHNob3VsZCBzdGFydCBpbml0aWF0aW5nIG1vcmUgZGlzY3Vzc2lvbnMgZ2VhcmVkIHRvd2FyZHMgZml4aW5nIHRoZSBncmVhdCBkaXNwYXJpdHkgYmV0d2VlbiB0aGUgcmlnaHRzIG9mIHdvbWVuIGFuZCBtYW4gYmVjYXVzZSBtZW4gYXJlIGdldHRpbmcgYSByYXcgZGVhbC4KSSB3b3VsZCByYXRoZXIgd2UgY291bGQganVzdCBoYXZlIHByaWRlIGluIGh1bWFuaXR5LCBidXQgdGhhdCB3aWxsIHJlcXVpcmUgYSBjaGFuZ2UgaW4gdGhpbmtpbmcgc3BlY2llcyB3aWRlLi4gCkxvdmUuIApUaGV5IGp1c3QgZ290IGluanVyZWQgZWFybHkuIEFmdGVyIHRoYXQgU29sYXJpIHNob3VsZCBwcm9iYWJseSBoYXZlIGZpZWxkZWQgYSBmZXcgZGVmZW5kZXJzIGFuZCB0YWtlbiBhZHZhbnRhZ2Ugb2YgQWpheCBoaWdoIGxpbmUuIApEYXMga2FubiBuaWNodCBzZWx0ZW4gZmF0YWxlIEZvbGdlbiBoYWJlbiB1bmQgZ2VocnQgenUgZGVuIFBva2VyIEZlaGxlcm4sIGRpZSBlcyBhdWYgamVkZW4gRmFsbCB6dSB2ZXJtZWlkZW4gZ2lsdC4gTWFuIGJlemVpY2huZXQgc29sY2hlIHZlcmZocmVyaXNjaGVuIEhuZGUgbWl0IGd1dGVtIEdydW5kIGFscyBzb2dlbmFubnRlIFRyYXAgSGFuZHMuCkdyb2NlciBSZXViZW4gS3VsYWtvZnNreSByZXBvcnRlZGx5IGNhbWUgdXAgd2l0aCB0aGUgaWRlYSBvZiB0aGUgY29ybmVkIGJlZWYgYW5kIHNhdWVya3JhdXQgc2FuZHdpY2ggdG8gZmVlZCBoaXMgZmVsbG93IHBva2VyIHBsYXllcnMuIApXZSBoZWFyZCB0aGlzIG1hbnkgdGltZXMgYmVmb3JlIG1lZXRpbmcgQ2hvbXNreSBvZnRlbiBkb2VzIHByb3ZpZGUgcHJvcG9zYWxzIGFuZCBzb2x1dGlvbnMgdGhvdWdoLiBPbiBoaXMgbWFueSB2b2x1bWVzIG9uIGZvcmVpZ24gcG9saWN5LCBoaXMgcHJvcG9zYWwgaXNuIGNvbXBsaWNhdGVkOiBzdG9wIHBhcnRpY2lwYXRpbmcgaW4gdGVycm9yaXNtLCBzdG9wIHZpb2xhdGluZyBpbnRlcm5hdGlvbmFsIGxhdywgc3RvcCBpbnZhZGluZyBhbmQgYm9tYmluZyBvdGhlciBjb3VudHJpZXMuIFN0YXJ0IHRvIGRlbnVjbGVhcml6ZSAod2hpY2ggaXMgd2hhdCB0aGUgTm9uIFByb2xpZmVyYXRpb24gVHJlYXR5LCB3aGljaCB0aGUgVW5pdGVkIFN0YXRlcyBoYXMgcmF0aWZpZWQgYW55d2F5KS4KSXQncyBhbHNvIGEgZ3JlYXQgcGxhY2UgZm9yIGNvcnBvcmF0ZSBndWVzdCB0byAic29jaWFsaXplIGlmIGdhbWluZyBpcyBub3QgdGhlaXIgaW50ZXJlc3QsIiBoZSBhZGRlZC4uIApCdXkgaW5zIHRvIGJpZyBwb2tlciB0b3VybmFtZW50cyBhcmUgb3V0IG9mIHRoZSBtYWpvcml0eSdzIHByaWNlIHJhbmdlLCBldmVuIGFzc3VtaW5nIHlvdSBjYW4gcGxheSB3aXRoIHRoZSBiaWcgc2hvdHMuIFNsb3RzIGFyZSB0aGUgbW9zdCBkZW1vY3JhdGljIG9mIG9ubGluZSBjYXNpbm8gZ2FtZXMsIGJvdGggaW4gdGVybXMgb2Ygc2tpbGwgYW5kIGJhbmtyb2xsLiBJbiBvcmRlciB0byBwcm9sb25nIHRoZSBmdW4gd2l0aG91dCByaXNraW5nIHRvbyBtdWNoLCBhbG1vc3QgZXZlcnkgb25saW5lIHNsb3Qgd2lsbCBhbGxvdyB2ZXJ5IHNtYWxsIG1pbmltdW0gd2FnZXJzIGZvciBlYWNoIHNwaW4uIENvbnZlcnNlbHksIGlmIHlvdSBmZWVsIGxpa2UgdGFraW5nIGFuIGV4dHJhdmFnYW50IHJpc2ssIGl0J3MgdXN1YWxseSBwb3NzaWJsZSB0byBidW1wIHVwIHRoZSBjb2luIHZhbHVlIG9yIGJldCBsZXZlbC4KSSBsaXZlZCBoZXJlIGEgbGl0dGxlIG92ZXIgNCB5ZWFycyBhbmQgY2FtZSBmcm9tIGEgYmlnIGNpdHkuIEkgYWJzb2x1dGVseSBsb3ZlIEpheCEgRG9lcyBpdCBoYXZlIHNvbWUgbmVnYXRpdmVzPyBTdXJlLCBidXQgZXZlcnl3aGVyZSBkb2VzLiBCdXQgSmF4IGFsbG93ZWQgbWUgdG8gcmVkdWNlIG15IG1vbnRobHkgbGl2aW5nIGV4cGVuc2VzIGJ5IGFsbW9zdCAkMiwwMDAgYSBtb250aC4gCkhpbmR1cywgb24gdGhlIG90aGVyIGhhbmQsIHdlcmUgd2hvbGx5IHBhZ2FuIGFuZCBhbGllbiwgdGhlIG9iamVjdHMgb2YgbXVjaCBoYXRyZWQgYW5kIHJldnVsc2lvbi4gQW5kIGJlaW5nIG11Y2ggbW9yZSBudW1lcm91cywgdGhleSB3ZXJlIG1vcmUgZnJlcXVlbnQgdGFyZ2V0cyBmb3IgdGhlIEJyaXRpc2guLiAKVGhlc2Ugc29tZXRpbWVzIGRlY2lkZSB0aGUgZ2FtZSBiZWNhdXNlIHRoZSBIYW1tZXIgaXMgc28gT1AgYW5kIGFsbCBkcm9wcyBoYXZlIGEgcGluay9teXRoaWMgZ3VuIGluIHRoZW0uIEFsbCBnYW1lcyBhcmUgYSBsaXR0bGUgZGlmZmVyZW50LCBzbyBpdCBkZXBlbmRzIHdoZXJlIHRoZXkgZHJvcC4gCkkgZG8gbGlrZSBUaGFpIEFpcndheXMgY29sb3VycyBhbmQgaXQgc3RhbmRzIHRoZW0gb3V0IGZyb20gdGhlIGNyb3dkIHdpdGhvdXQgZXZlciBiZWluZyB0b28gaW1wcmVzc2l2ZS4uIApJIHN0b3AgYW5kIGNoZWNrIG15IHN1cnJvdW5kaW5ncy4gCk1lYW53aGlsZSwgdGhlIFdhbmdhcmF0dGEgUlNMIGJ1aWxkaW5nIHdhcyBzb2xkIGFmdGVyIGF1Y3Rpb24gb24gRnJpZGF5IGZvciBhbiB1bmRpc2Nsb3NlZCBwcmljZS4gVGhlIFJlaWQgU3RyZWV0IHByb3BlcnR5IHdhcyBwYXNzZWQgZm9yICQ3ODAsMDAwLCBidXQgYWdlbnRzR2FycnlOYXNoIENvIGNsaW5jaGVkIGEgc2FsZSB0byBhIE5vcnRoIEVhc3QgaW52ZXN0b3IgZm9sbG93aW5nIHRoZSBhdWN0aW9uLiAKSSB0ZXN0ZWQgYm90aCB0aGUgcmVndWxhciwgb2xkIGZhc2hpb25lZCBzaW5nbGUgdXNlIGJlbmNoZXMgaW4gdGhlIHBhcmsgYW5kIHRoZSBTb29mYXMgYW5kIGZvdW5kIHRoZW0gdG8gYmUgZXF1YWxseSBjb21mb3J0YWJsZS4gQnV0IHRoZSBub24gc29sYXIgYmVuY2hlcyBoYXZlIGEgYmFjayBhbmQgdGhlIFNvb2ZhcyBkb24ndCwgc28gaWYgeW91J3JlIHRoZSBraW5kIG9mIHBlcnNvbiB3aG8gbGlrZXMgdG8gbGVhbiBiYWNrIHdoZW4geW91IHRha2UgYSBsb2FkIG9mZiwgeW91IG1pZ2h0IG5vdCBiZSBhIGZhbi4uIApZZXMsIHRoZXJlIGFyZSBzb21lIGZvbGtzIHRoYXQgcHJvYmFibHkgc2hvdWxkIGdldCB0aGUgZGVhdGggcGVuYWx0eSwgYnV0IHRoZWlyIGFjdGlvbnMgcHJvYmFibHkgaGF2ZSBsZXNzIHRvIGRvIHdpdGggcG9saXRpY3MgdGhhbiB3aXRoIHNvbWV0aGluZyBlbHNlIHRoYXQgaXMgbW9yZSBkZWVwbHkgc2VhdGVkLiAKRHVlIHRvIHRoZSBmYWN0IHRoYXQgdGhleSBwaXRjaGVkIGV2ZXJ5dGhpbmcgdGhhdCB3YXMga25vd24uIApNYXRlcmlhbHMgYW5kIE1ldGhvZHM6IEEgdG90YWwgb2YgMTIwIHBhdGllbnRzIHdpdGggdHlwZXMgSUlJYSBhbmQgSUlJYiBjaHJvbmljIHBlbHZpYyBwYWluIHN5bmRyb21lIGFuZCA2MCBhc3ltcHRvbWF0aWMgY29udHJvbHMgdW5kZXJ3ZW50IGEgc3RhbmRhcmQgNCBnbGFzcyB1cmluZSB0ZXN0LCBleGFtaW5hdGlvbiBvZiBleHByZXNzZWQgcHJvc3RhdGljIHNlY3JldGlvbiBsZXVrb2N5dGVzIGJ5IGhlbW9jeXRvbWV0ZXIgYW5kIHRyYW5zcGVyaW5lYWwsIGRpZ2l0YWxseSBndWlkZWQgcHJvc3RhdGUgYmlvcHNpZXMuIAoiSW5zdGVhZCBvZiB2aWV3aW5nIHRoZSBhbmltYWwgYXMgYSB0aGVyYXB5IHRvb2wsIGZlbGxvdyB0cmF2ZWxlcnMgbWF5IHJlc2VudCBvdGhlciBwYXNzZW5nZXJzIHdobyBhcmUgYWxsb3dlZCB0byBicmluZyB0aGVpciAncGV0JyBvbiB0aGUgcGxhbmUuIEhvd2V2ZXIsIG5vdGUgdGhhdCBiZWNhdXNlIEVTQXMgZG9uJ3Qgd2VhciBpZGVudGlmaWNhdGlvbiwgb3RoZXIgdHJhdmVsZXJzIG1heSBub3QgYmUgYWJsZSB0byBkaXN0aW5ndWlzaCBiZXR3ZWVuIGEgcGV0IGFuZCBhbiBFU0EuIi4gCkFmdGVyIHRoYXQgc2hlIHJhbiBhd2F5IGFuZCB0b29rIHRvIHRoZSBzdHJlZXRzLiAKU29tZW9uZSBoYWQgdGFrZW4gdGhlIGJhbm5lciBmcm9tIHRoZSBsYXJnZXN0IGRhaWx5IG5ld3NwYXBlciwgUHJhdmRhLCB3aGljaCBtZWFucyAidHJ1dGgsIiBhbmQgd3JpdHRlbiB0aGUgd29yZCAibGllLiIgV2UgQW1lcmljYW5zIGFyZSBub3cgZm9yY2VkIHRvIGRvIHRoZSBzYW1lICAgdG8gdHJhbnNsYXRlIGNsYWltcyB0byB0cnV0aCBhbmQgbmV3cyBpbnRvIHRoZSBsaWVzIHRoYXQgdGhleSBhcmUuICJNb3JlIHRyb29wcyBvciB3ZSBsb3NlIHRoZSB3YXIiIGNhbiBvbmx5IGJlIHRyYW5zbGF0ZWQgYXMgIm1pbGl0YXJ5IGdlbmVyYWxzIHdpc2ggdG8ganVzdGlmeSB0aGUgY29udGludWVkIHdhc3RlIG9mIG1vbmV5IG9uIHVzZWxlc3Mgd2FyLiIgQW5kIHRoZSAiZnJlZSBwcmVzcyIgY2FuIG9ubHkgYmUgcmVhZCBhcyAiYWxsIHRoZSBuZXdzIHRoYXQgY29ycG9yYXRlIGFuZCBtaWxpdGFyeSBpbmR1c3RyaWFsIGludGVyZXN0cyBkZWVtIGZpdCB0byBwcmludC4iLiAKVGhlIHdhciBiZWdhbiBpbiAyMjQ1IHdoZW4gYW4gRWFydGhGb3JjZSAoRWFydGggbWlsaXRhcnkgZm9yY2UpIGV4cGVkaXRpb25hcnkgZmxlZXQgZGFtYWdlZCBhbmQgZGVzdHJveWVkIHZlc3NlbHMgb2YgdGhlIE1pbmJhcmkgRmVkZXJhdGlvbiBmbGVldCwga2lsbGluZyBEdWtoYXQgKGxlYWRlciBvZiB0aGUgTWluYmFyaSBHcmV5IENvdW5jaWwpLi4gCkl0IHdhcy4gClRoZSB0b3duIGlzIHNhdmVkLCBNaWtoYWlsLCB0aGUgUG9saXNoIGVxdWl2YWxlbnQgb2YgTWlrZXkhIFF1aWNrLCB0ZWxsIERhdG9yIHRvIGRlcGxveSBoaXMgQ2xhd3Mgb2YgQ2VsZWJyYXRpb24gd2hpbGUgQ2h1dW5raCBkb2VzIHRoZSBUcnVmZmxhdSBTaHVmZmVuaGF1cyFBbGwgdGhlIERpbm9zYXVycywgRm91bmQgYnkgUmFuZG9tIENoaWxkcmVuRmFybWVyIEpvaG4gYW5kIGhpcyB0d28gc29ucyB3ZXJlIHdhbGtpbmcgaW4gdGhlaXIgYmFja3lhcmQgaW4gT3NrYWxvb3NhLCBJb3dhLCBwaWNraW5nIGJlcnJpZXMgYW5kIGRpc2N1c3NpbmcgbWF5b25uYWlzZSBhbmQgd2hpdGUgYnJlYWQgb3Igd2hhdGV2ZXIgaXQgaXMgdGhhdCBJb3dlZ2lhbnMgdGFsayBhYm91dCwgd2hlbiBvbmUgYm95IHNwb3R0ZWQgd2hhdCBoZSB0aG91Z2h0IHdhcyBhIGJhbGwgZmxvYXRpbmcgaW4gdGhlIGNyZWVrLiAKTGFtcGphdyB1CkFsbW9zdCBzaXh0eSBSZXNlYXJjaGVycywgZ2l2ZSBvciB0YWtlLCBhcmUgcmVwcmVzZW50ZWQgaGVyZS4gU29tZSBoYXZlIHBhc3NlZCBvbiwgYnV0IHRoZWlyIHdvcmRzIGFyZSByZW1lbWJlcmVkLiAKRmluYW5jaWFsIHNlcnZpY2VzClRpY2tldCBzbyB0aGF0IHRoZXkgY291bGQgY291bnQgdG8gbWFrZSBzdXJlIHRoYXQgdGhlIG51bWJlciBvZiBkcmlua3MgYW5kIHNhbGFkIGJhcnMgbWF0Y2hlZCB1cC4gT3Igd2hlbiB0aGV5IGNoYW5nZWQgdGhlIGNvbXB1dGVyIHN5c3RlbSBzbyB0aGF0IGFuIHVwc2VsbCBzYWxhZCBiYXIgY291bGQgbm8gbG9uZ2VyIGJlIGFkZGVkIHRvIGEgbWVhbCwgdGhlIGVudGlyZSBtZWFsIGhhZCB0byBiZSB2b2lkZWQgb3V0IGFuZCByZXJ1bmcsIGdpdmluZyB5b3UgYSA1MCUgdm9pZCByYXRlIGZvciB0aGF0IHNlYXQuIE9oIHllYWgsIGFuZCBhIGhpZ2hlciB0aGFuIDIlIG92ZXJhbGwgdm9pZCByYXRlIG1lYW50IFNhdHVyZGF5IG1vcm5pbmcgc2VydmVyIHJlbWVkaWFsIHRyYWluaW5nLiAKWW91IGdldCBmcmVlIGRyaW5rcyB3aGlsZSBwbGF5aW5nIGF0IGFueSBjYXNpbm8sIGJ1dCB0aGUgQXJpYSBoYXMgdGhlIGJlc3QgZHJpbmtzIChpbmNsdWRpbmcgT3JhbmdlIEp1aWxpdXNlcyBhbmQgd2F0ZXJtZWxvbiBqdWljZSkuLiAKVGhlbiB0aGV5IHdpbGwgYmxvY2sgVlBOIHdlYnNpdGVzLiAKUGFzdCBldmVudHMgd2lsbCBiZSByZXZpZXdlZCwgZGlzY3Vzc2VkLCBtdWxsZWQgYW5kIGNoZXdlZCBvdmVyIGluIHRoZSBQb3N0LiAKQWxzbywgaWYgeW91IGFyZSBsb29raW5nIGZvciBjb29sIHRoaW5ncyB0byBkbyBuZWFyIHRoZSBoYW4geW91IG1pZ2h0IG5vdCBmaW5kIG1hbnksIHNvIGxldCBtZSBzdWdnZXN0IGEgY291cGxlIGZvciB5b3U6ICJTdWljaWRlIGJyaWRnZSAobWFwbyBicmlkZ2UpIiB0aGVyZSB3ZXJlIHNvIG1hbnkgc3VpY2lkZXMgdGhlcmUgdGhhdCB0aGV5IHB1dCBuaWNlIG1lc3NhZ2VzIGFsbCBhbG9uZyBpdCBhbmQgeW91IGNhbiB3YWxrIGl0IGFuZCBpdHMgdmVyeSBwZWFjZWZ1bC4gVGhlIHNvdXRoc2lkZSBvZiB0aGF0IGJyaWRnZSB0YWtlcyB5b3UgdG8gWWVvdWlkbyB3aGVyZSB0aGV5IGhhdmUgdGhlIE5hdGlvbmFsIEFzc2VtYmx5IEhhbGwuIEJhbnBvIGJyaWRnZSBpcyBuaWNlIGF0IG5pZ2h0LCBidXQgaXQgbm90IGdvbm5hIGJsb3cgeW91ciBtaW5kLiAKSSBrbm93IG9mIHNldmVyYWwgdmVyeSBnb29kIHdhcmQgb3JnYW5pc3RzIHdobyBoYXZlIGZvdW5kIHRoZW1zZWx2ZXMgd2l0aCBhIG11c2ljIGRpcmVjdG9yIHdobyBkb2VzbiB1bmRlcnN0YW5kIHRoZSBpbXBvcnRhbmNlIG9mIHRlbXBvIGFuZCBlbmVyZ3kgYW5kIG5vdCBnYXNwaW5nIGZvciBhaXIgYW5kIHdpbGwgcHVycG9zZWx5IGdvIHNsb3cgaW4gb3JkZXIgdG8gYmUgInJldmVyZW50LiIgSSBrbm93IG9mIG90aGVyIGRpcmVjdG9ycyB3aG8gYmVnaW4gdG8gdGlyZSB0aHJvdWdoIHRoZSBoeW1uLCBhbmQgc28gdGhlIGJlYXQgcGF0dGVybiBnZXRzIHNsb3dlciBhbmQgc2xvd2VyICh1c3VhbGx5IGJlY2F1c2UgYW1hdGV1ciBkaXJlY3RvcnMgdGVuZCB0byBtYWtlIGJpZywgc3dvb3B5IG1vdGlvbnMgdGhhdCBhcmUgd2F5IG1vcmUgd29yayB0aGFuIGlzIG5lZWRlZCkuIEdvb2Qgb3JnYW5pc3RzIGFyZSB0cmFpbmVkIHRvIGZvbGxvdyB0aGUgZGlyZWN0b3Igbm8gbWF0dGVyIHdoYXQuIElmIHRoZSBvcmdhbmlzdCBmb2xsb3dzIHNsb3cgbGVhZGVyc2hpcCwgYW5kIHRoZSBjb25ncmVnYXRpb24gZm9sbG93cyB0aGUgb3JnYW4gaW5zdGluY3RpdmVseSwgZXZlcnlvbmUgZ29lcyBvdmVyIHRoZSBjbGlmZiB0b2dldGhlci4uIApUaGUgMjAxOSB0aGVtZSAnVGhpbmsgZXF1YWwsIGJ1aWxkIHNtYXJ0LCBpbm5vdmF0ZSBmb3IgY2hhbmdlJyBmb2N1c2VzIG9uIGlubm92YXRpdmUgd2F5cyBpbiB3aGljaCB3ZSBjYW4gYWR2YW5jZSBnZW5kZXIgZXF1YWxpdHkgYW5kIHRoZSBlbXBvd2VybWVudCBvZiB3b21lbi4gCkl0IHdhcyBsaWtlIGxvc2luZyBhbiBhcmNoZXJ5IGNvbXBldGl0aW9uIGFuZCB0aHJvd2luZyBhIGhhbmQgZ3JlbmFkZSBhdCB0aGUgdGFyZ2V0IHRvIHJlbWluZCB0aGUgd2lubmVyIGp1c3QgaG93IGxpdHRsZSBhaW0gbWF0dGVyZWQgaW4gdGhlIGZhY2Ugb2YgeW91ciBzaGVlciBhc3Mgc2xhcHBpbmcgbHVuYWN5Li4gCklmIHRoZXkgZmluZCBhbnkga2luZCBvZiBkcnVnIG9uIHlvdSwgdGhleSBjYW4gbGVnYWxseSB0YWtlIHlvdXIgdmVoaWNsZSBhbmQgYWxsIHRoZSBjYXNoIHlvdSBtaWdodCBoYXZlIGFzIHdlbGwuIFRoZXkgY2FuIHRha2UgeW91ciBob3VzZSBpZiB5b3Ugd2VyZSBjYXVnaHQgd2l0aCBpdCBpbiB5b3VyIGhvbWUuIEhvbGQgeW91ciBhc3NldHMgYW5kIGlmIHlvdSBmb3VuZCBndWlsdHkgdGhleSBhdWN0aW9uIGl0IG9mZi4gClRoZXkgbG92ZSByZWFkaW5nLCBnZXQgdGhlaXIgMTAsMDAwIHN0ZXBzIGluIGp1c3QgYWJvdXQgZXZlcnkgZGF5LCBlYXQgaW4gbW9kZXJhdGlvbiwgZHJpbmsgaW4gbW9kZXJhdGlvbi4gClVuZGVyc3RhbmRpbmcgdGhlIEdhbWUgb2YgT21haGEgSG9sZEVtClRoZSBiZXN0c2l0ZSBvbiB0aGF0IG5ldHdvcmsgaXMgYnkgZmFyIENhcmJvbiBQb2tlci4gCkphcGFuZXNlIFJvYm90IENyYXplUm9sbGVib3RKYXBhbmVzZSBlbGVjdHJvbmljcyBnaWFudCBIaXRhY2hpIGRpc3BsYXlzIGl0cyBodW1hbm9pZCByb2JvdCAiRW1pZXcyIHdoaWNoIGNhbiBtb3ZlIG92ZXIgdW5ldmVuIGdyb3VuZCBhbmQgc21hbGwgZ2FwcyBvbiBpdHMgd2hlZWxlZCBsZWdzIGF0IHRoZSBjb21wYW55J3MgaGlnaCB0ZWNoIGV4aGliaXRpb24gaW4gVG9reW8gb24gSnVseSAyMiwgMjAxMC4gSGl0YWNoaSB3aWxsIHN0YXJ0IGEgcGlsb3QgdGVzdCBhdCBhIGhvc3BpdGFsIHRvIGNvbGxlY3QgZGF0YSBmb3IgdGhlIHByb3ZpZGluZyBndWlkZSBvciBzdXJ2ZWlsbGFuY2Ugc2VydmljZXMgaW4gYSBzYWZlIHN5bWJpb3NpcyB3aXRoIGh1bWFuLiAoY3JlZGl0OiBZb3NoaWthenUgVHN1bm8vQUZQL0dldHR5IEltYWdlcykKSW50ZXJuYXRpb25hbCBXb21lbidzIERheSBpcyBhbHNvIGFuIG9wcG9ydHVuaXR5IHRvIGNvbnNpZGVyIGhvdyB0byBhY2NlbGVyYXRlIHRoZSAyMDMwIEFnZW5kYSwgYnVpbGRpbmcgbW9tZW50dW0gZm9yIHRoZSBlZmZlY3RpdmUgaW1wbGVtZW50YXRpb24gb2YgdGhlIFN1c3RhaW5hYmxlIERldmVsb3BtZW50IEdvYWxzLCBlc3BlY2lhbGx5IGdvYWxzIG51bWJlciA1IGFuZCBudW1iZXIgNC5VTiBFbnZpcm9ubWVudCByZWxlYXNlcyAyMDE4IEFubnVhbCBSZXBvcnRVTiBFbnZpcm9ubWVudHJlbGVhc2VkIGl0cyAyMDE4IEFubnVhbCBSZXBvcnQ6IHB1dHRpbmcgdGhlIGVudmlyb25tZW50IGF0IHRoZSBoZWFydCBvZiBwZW9wbGUncyBsaXZlcywgaGlnaGxpZ2h0aW5nIHRoZSBvcmdhbml6YXRpb24ncyB3b3JrIG9uIGlzc3VlcyBmcm9tIGZpZ2h0aW5nIHBvbGx1dGlvbiBvZiB0aGUgYWlyIGFuZCBzZWEgdG8gaGVscGluZyBuYXRpb25zIG1lZXQgdGhlaXIgZ29hbHMgb2YgcmVkdWNpbmcgZ3JlZW5ob3VzZSBnYXMgZW1pc3Npb25zLiBUaGUgcmVwb3J0LCByZWxlYXNlZCBhaGVhZCBvZiBNYXJjaCAyMDE5J3MgVU4gRW52aXJvbm1lbnQgQXNzZW1ibHksIHNob3dzIHRoYXQgdGhlIHBhY2Ugb2YgYWN0aW9uIG9uIG1hbnkgaW50ZXJsaW5rZWQgZW52aXJvbm1lbnRhbCBpc3N1ZXMgaXMgYWNjZWxlcmF0aW5nLiAKU2hlIGhhZCBqdXN0IGZvdW5kIG91dCwgb24gaGVyIHdlZGRpbmcgZGF5LCB0aGF0IGhlciBncm9vbSBoYWQgb25jZSBiZWVuIGVuZ2FnZWQgdG8gb25lIG9mIGhlciBicmlkZXNtYWlkcy4gVGhlIGdyb29tIHdhcyBOT1QgY2hlYXRpbmcgb24gaGVyLCBidXQganVzdCBuZXZlciBnb3QgYXJvdW5kIHRvIHRlbGxpbmcgaGVyIHRoYXQgaGUgYW5kIG9uZSBvZiB0aGVpciAibXV0dWFsIGZyaWVuZHMiIGhhZCBvbmNlIGJlZW4gYW4gaXRlbS4gClRoZSBOQ0FBIGlzIGdvaW5nIHRvIHdhbnQgdGhlaXIgY3V0IG9mIHdoYXQ/IEluIGNvbGxlZ2UgYmFza2V0YmFsbCwgdGhleSBtYWtlIHRoZWlyIG1vbmV5IG9mZiBvZiB0aGUgTWFyY2ggTWFkbmVzcyB0b3VybmFtZW50LiBIYXZpbmcgNSAxMCBwbGF5ZXJzIGEgeWVhciBub3QgZ29pbmcgdG8gY29sbGVnZSBpcyBub3QgZ29pbmcgdG8gYWZmZWN0IHRoZWlyIGJvdHRvbSBsaW5lLiBUaGUgbGFzdCAzIDEgTkJBIGRyYWZ0IHBpY2tzIHBsYXllZCAxIGdhbWUgaW4gdGhlIE1hcmNoIE1hZG5lc3MgdG91cm5hbWVudC4gSSBhbSBub3QgZGVmZW5kaW5nIGFueSBvZiB0aGUgTkNBQSBwcmFjdGljZXMgb3IgdGhlIG9yZ2FuaXphdGlvbiBhcyBhIHdob2xlLCBidXQgYWN0aW5nIGxpa2UgdGhleSBoYXZlIGFueSBpbmZsdWVuY2Ugb3ZlciB0aGUgMSBhbmQgZG9uZSBydWxlIG9yIHJlYWxseSBjYXJlIGFib3V0IGl0IGlzIHJpZGljdWxvdXMuCkluIElsbGlub2lzLCB3aGVyZSBzdWNoIHN0YXRpc3RpY3MgYXJlIHJlbGVhc2VkIGJ5IHRoZSBJbGxpbm9pcyBHYW1pbmcgQm9hcmQsIHRoZSBhdmVyYWdlIGNhc2lubyBjdXN0b21lciBsb3NlcyBhYm91dCAkMTAwIGluIGEgdHlwaWNhbCBkYXkgYXQgdGhlIGJhcmdlIG9yIGJvYXQuIAoxLiAKUnVzc2lhIGlzIHRoZSByZWFsLCBpbW1lZGlhdGUgdGhyZWF0IHRvIGdsb2JhbCBzZWN1cml0eSwgdGhlIG9uZXMgaW4gY2hhcmdlIG92ZXIgdGhlcmUgY2FuIG9ubHkgYmVuZWZpdCBmcm9tIGluY3JlYXNlZCBpbnN0YWJpbGl0eS4gV2hlcmVhcyBDaGluYSBzdXN0YWluZWQgZ3Jvd3RoIGlzIHN1cHBvcnRlZCBieSB0aGUgc2FtZSB0aGluZ3MgdGhhdCBoZWxwIHRoZSBVUyBlY29ub215OyBsb3cgZnVlbCBwcmljZXMsIHRlY2hub2xvZ2ljYWwgaW5ub3ZhdGlvbiwgb3BlbiBtYXJrZXRzLCBldGMuCkNsb3VkT25lUGhvdG8gdQpXaGVuIEkgcmVhbGlzZWQgSSBkaWQgSSBnb3QgcHJldHR5IGV4Y2l0ZWQgYnV0IEkgc3RpbGwgZGlkbid0IHVuZGVyc3RhbmQgd2hhdCBJIGhhZCB3b24gdW50aWwgdGhlIHBpdCBib3NzIGNhbWUgb3ZlciB0byB0ZWxsIG1lIHRvIHNldHRsZSBkb3duIGFuZCBleHBsYWluZWQgdGhhdCBpZiBJIGRpZCBpbiBmYWN0IGhhdmUgd2hhdCBJIHNhaWQgSSBoYWQsIEkgd291bGQgd2luIHdoYXQgd2FzIGRpc3BsYXllZCBvbiB0aGUgc2NyZWVuLiBUaGF0IGRpZCBub3Qgc2V0dGxlIG1lIGRvd24gYXQgYWxsIGFzIEkgdGhlbiBwcm9jZWVkZWQgdG8gZG8gc29tZSB2aWN0b3J5IGxhcHMgYXJvdW5kIHRoZSBjYXNpbm8uIEkgd291bGQgbG92ZSB0byBzZWUgdGhlIHZpZGVvIGZvb3RhZ2UgaGEgaGEuLiAKSSBoYWQgbXkgZnVuLiAKSXQgc2VlbXMgbGlrZSBBcHBsZSBhbHJlYWR5IGNhc3QgYSBzcGVsbCBvdmVyIHRoZSBhdXRvIGluZHVzdHJ5LCBzaW5jZSBpUGhvbmUgYW5kIGlQb2QgaW50ZWdyYXRpb24gYXJlIGEgbWFqb3IsIGFsbW9zdCBzdGFuZGFyZCwgc2VsbGluZyBmZWF0dXJlIG9uIGEgbG90IG9mIG5ldyBhbmQgcmVjZW50bHkgaW50cm9kdWNlZCBjYXJzLiAKUmVhbCBhZHVsdHMgZG8gYWVneW8uIFRoYXRzIG91ciBjdWx0dXJlLiAKVGhlIHNjaG9vbCB3YXMgc28gcHJvdWQgb2YgdGhlaXIgcmFjaWFsIGRpdmVyc2l0eSwgYnV0IDk1JSBvZiB0aGUgc3R1ZGVudHMgY2FtZSBmcm9tIGZhbWlsaWVzIGluIHRoZSB0b3AgMSUgb2YgaW5jb21lLmhhbmR5c2NhZXZvbGEgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxNSBkYXlzIGFnb0kgcmVhZCBBdGxhcyBTaHJ1Z2dlZCB0byB0cnkgdG8gd2luIGEgc2Nob2xhcnNoaXAgZnJvbSBhbiBBeW4gUmFuZCBBZG1pcmVyIFNvY2lldHkuIEkgZW5kZWQgdXAgYmVpbmcgcmVhbGx5IGFuZ3J5IHRoYXQgSSBwbGF5ZWQgaW50byBSYW5kIHBvaW50IGJ5IHJlYWRpbmcgdGhlIHRoaW5nIG91dCBvZiBkZXNpcmUgZm9yIG1vbmV5LCBhbmQgaGF0ZWQgZXZlcnkgd29yZCBvZiB0aGF0IGRlbnNlLCBhbm5veWluZyBzY3JlZWQuIEkgbGVhcm5lZCB0aGF0IEkgZG9uIGFwcHJvdmUgb2YgbGliZXJ0YXJpYW5pc20sIHRob3VnaCwgc28gSSBndWVzcyB0aGF0IGtpbmQgb2YgdXNlZnVsLkFsc28gSSBoYWQgdG8gcmVhZCBhIEZyZW5jaCBub3ZlbCBjYWxsZWQgImxlIGRlcm5pZXIgZGVzIHJhaXNpbnMiIHRoYXQgaGFkIGEgcmVhbGx5IHVuY29tZm9ydGFibGUgc2V4IHNjZW5lIHdoZXJlaW4gdGhlIG1haW4gY2hhcmFjdGVyLCBhIHRlZW4gd2hvIHRoaW5rcyBvZiBoaW1zZWxmIGFzIGEgbG9zZXIsIGNvbXBhcmVzIGhpcyBnaXJsZnJpZW5kIGJyZWFzdHMgdG8gZXh0cmEgZmlybSBwYW5jYWtlcy4gCjkgbW9udGhzIGxhdGVyLCBzdGlsbCB1bmVtcGxveWVkClNvbWUgc2F5IHRoZXkgbXVzdCBqdXN0IHB1c2ggd2F0ZXIgb3V0IG9mIHRoZWlyIG1vdXRocyBmb3IgZGlyZWN0aW9uICg/Pz8/PykuIApXZSBhcmUgdHJ5aW5nIGEgZGlmZmVyZW50IHRyZWF0bWVudCwgU3lzdGVtaWMgUGhvdG9keW5hbWljIFRoZXJhcHkgd2hpY2ggdHJlYXRzIHRoZSB3aG9sZSBib2R5LCBub3QganVzdCBvbmUgYXJlYSBhcyB3aXRoIHJhZGlhdGlvbi4gClJlc2VhcmNoIGlzIHN0aWxsIG5lZWRlZCB0byBib3RoIHN1YnN0YW50aWF0ZSBtZWxhdG9uaW4gc3VwcHJlc3Npb24gYXMgYSBzaWduaWZpY2FudCByaXNrIGZhY3RvciBmb3IgYnJlYXN0IGNhbmNlciBhbmQgZGV0ZXJtaW5lIHRoZSBtZWNoYW5pc21zIGJ5IHdoaWNoIG1lbGF0b25pbiByZWd1bGF0ZXMgZ2x1Y29zZSBtZXRhYm9saXNtLiBUaGUgRW5kb2NyaW5lIFNvY2lldHkKSm91ZSBzdXIgbGVzIGRldXggdGFibGVhdXguIFZvaWNpIHBvdXIgY2V1eCBxdWkgc29udCAiYm91Y2hzIiB1bmUgcGhvdG8gZGUgbGEgYm91dGlxdWUuIFF1YW5kIG9uIGVuIGFycml2ZSAgdmVuZHJlIGF1dGFudCBkZSBjaG9zZXMsIG9uIG4nZXN0IHBsdXMgZGFucyBsYSBwaGlsYW50cm9waWUgZXQgaWwgZXN0IG1hbHZlbnUgZGUgcmNsYW1lciBkZXMgZG9ucyBwYXIgZGVzc3VzIGxlIG1hcmNoLiBNYWludGVuYW50IHZveW9ucyBhdSBwbGFuICJkb2N1bWVudGFpcmUgZXQgc2NpZW50aWZpcXVlIi5DYXNhc25vdmFzIG5lIGNlc3NlLCBpbCBmYXV0IGxlIHJwdGVyLCBkZSByZWN5Y2xlciBkZXMgdmlldXggcGxhbnMgIm5hdHVyb3MiIGFyY2hpIHJlYmF0dHVzLiAKQnV0IGlmIHlvdSdyZSBtYWtpbmcgdGhlIGNsYWltIHRoYXQgdGhlcmUncyBldmlkZW5jZSBvZiBzb21ldGhpbmcgdHdvIHNpZGVzIHNheWluZyBkaWZmZXJlbnQgdGhpbmdzIGRvZXNuJ3QgY29uc3RpdHV0ZSBldmlkZW5jZS4gCkhhdmluZyB3b3JrZWQgYW5kIGxpdmVkIHVwIHRoZXJlIGZvciBzZXZlcmFsIHllYXJzLCB0aGUgaGlyaW5nIG9mIHF1YWxpdHkgbG9uZyB0ZXJtIHN0YWZmIGlzIG5leHQgdG8gaW1wb3NzaWJsZS4gSXQncyBhIHByb2JsZW0gZm9yIHRoZSB3aG9sZSB2YWxsZXkuIFBlb3BsZSBkb24ndCBtb3ZlIHVwIHRoZXJlIHRvIHdvcmsgYXQgYSBob3RlbC4gVGhleSBsaXZlIHVwIHRoZXJlIGZvciBhIHNob3J0IHRpbWUgdG8gcGxheSBpbiB0aGUgc25vdyBhbmQgdGhlIG1vdW50YWlucy4gWW91IGNhbid0IG1vdGl2YXRlIHRob3NlIHBlb3BsZSB0byBtYWtlIGFuIGVmZm9ydCB3aGVuIHRoZXkgYXJlIHNvIHNob3J0IHNpZ2h0ZWQuIERUUiBpcyBzdGlsbCB3aW5uaW5nIGF3YXJkcyBhbmQgYWNjb2xhZGVzIGV2ZXJ5IHllYXIsIHNvIG9idmlvdXNseSBzb21ldGhpbmcgaXMgd29ya2luZyBmb3IgdGhlbS4KTWFjcmF0aW9uIHZpbmV1c2UgZGUgY2FwaXR1bGVzIGZyYWlzLgpDb250YWN0IERhdGEgKGZvciBleGFtcGxlLCB5b3VyIGJpbGxpbmcgYWRkcmVzcywgZGVsaXZlcnkgYWRkcmVzcywgZW1haWwgYWRkcmVzcyBhbmQgdGVsZXBob25lIG51bWJlcnMpLgpUaGUgNzAgeWVhciBvbGQgd2FzIHNlZW4gdXNpbmcgbGV3ZCBhbmQgc2V4dWFsbHkgYWdncmVzc2l2ZSBsYW5ndWFnZSB0byBicmFnIGFib3V0IGdyb3BpbmcgYW5kIHRyeWluZyB0byBoYXZlIHNleCB3aXRoIHdvbWVuLCBpbmNsdWRpbmcgc29tZW9uZSB3aG8gd2FzIG1hcnJpZWQsIGluIGZvb3RhZ2Ugb2J0YWluZWQgYnkgdGhlLiAKICA0IHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnbzQgcmFjZXMsIDQgc3BvbnNvcnMgaXNuJ3QgYSBnb29kIHRoaW5nIHdpdGggd2hhdCBoZSdzIGhhZCB0aGVzZSBsYXN0IDMgd2Vla3MuIE1heWJlIE1vbnN0ZXIgd2FzIHNjaGVkdWxlZCBsYXN0IHdlZWsgYnV0IGFsbG93ZWQgdGhlIHRocm93YmFjayB0byBiZSBvbiBpbnN0ZWFkLCBidXQgd2UgZG9uJ3Qga25vdyB0aGF0LiBHbG9iYWwgUG9rZXIgaXNuJ3QgZXhhY3RseSBhIHRpZXIgMSBjdXAgc3BvbnNvciwgZWl0aGVyLkRvZXNuJ3QgbWVhbiB0aGVyZSBpc24ndCBzcGVlZCBhbmQgdGFsZW50IGluIHRoZSBjYXIuIApPbmx5IDI1IHBlcmNlbnQgb2YgdGhlIDEyMSByZWR1Y2VkIGZhdCBtaWxrIGRyaW5rZXJzIHNhaWQgdGhleSBiZWxpZXZlZCBtaWxrIGNhdXNlZCBtdWN1cy4gVGhlIGRpZmZlcmVuY2UgaW4gcGVyY2VwdGlvbiBtaWdodCBoYXZlIHNvbWV0aGluZyB0byBkbyB3aXRoIGhvdyBtaWxrIGZlZWxzIGluIHRoZSBtb3V0aCAgIGl0IGlzLCBhZnRlciBhbGwsIGp1c3QgZHJvcGxldHMgb2YgZmF0IHN1c3BlbmRlZCBpbiB3YXRlci4uIApOb3RlIHdvcnRoIGFkZGluZzogdGhlIG9ubHkgdHlwZSBvZiBzb2NpYWxpc20gdGhhdCBoYXMgZXZlciByZWFsbHkgYmVlbiB0cmllZCBvbiBhIG1hc3Mgc2NhbGUgaXMgTWFyeGlzbSBMZW5pbmlzbSBhbmQgaXQncyB2YXJpYW50cywgc28gdGhlIHN0YXRlbWVudCB0aGF0ICJzb2NpYWxpc20gd2lsbCBuZXZlciB3b3JrLCBsb29rIGhvdyBpdCBwbGF5ZWQgb3V0IGluIHRoZSBwYXN0IiBpcyB2ZXJ5IGZvb2xpc2guIApNaWxsZW5uaWFscyBicmVha2luZyBpbnZlc3Rpbmcgc3RlcmVvdHlwZXMgd2l0aCBjb25zZXJ2YXRpdmUgYXBwcm9hY2hlcyB0byBSUlNQc1RocmVlIHJlYXNvbnMgd2h5IFJSU1BzIHN0aWxsIG1hdHRlciAgIGFuZCBvbmUgb2YgdGhlbSB5b3UgcHJvYmFibHkgZGlkbid0IGtub3dUaGVzZSBhcmUgdGhlIGVpZ2h0IHNvdXJjZXMgb2YgcmV0aXJlbWVudCBpbmNvbWUgeW91IG5lZWQgdG8ga25vdyBhYm91dEZvciBvdGhlcnMsIENQUCBpcyBhbiBhY3Qgb2Ygc3BpdGUgYmVjYXVzZSB0aGV5IGhhdmUgdG9pbGVkIGF3YXkgaW4gdGhlIHNhbHQgbWluZXMgZm9yIHRoZWlyIHdob2xlIGxpdmVzLCBiaXR0ZXJseSBwYXlpbmcgdGF4IGFsb25nIHRoZSB3YXkuIEluIHRoZWlyIG1pbmRzLCBhZnRlciBhbGwgdGhlc2UgeWVhcnMsIGl0IGlzIGFib3V0IHRpbWUgdGhlIGdvdmVybm1lbnQgZ2l2ZXMgc29tZXRoaW5nIGJhY2sgdG8gdGhlbS4uIApVbmZvcnR1bmF0ZWx5IG5vcm1hbCBmb3IgaGltIHdvdWxkIGJlIGxpZmUgZGVzdHJveWluZyBmb3IgdGhlc2Uga2lkcy4uIApKdXN0IGJlY2F1c2UgRW5nbGlzaCBpcyBub3QgaGlzIG1vdGhlciB0b25ndWUsIGRvZXNuIG1lYW4gaGUgbm90IHNtYXJ0LiAKVGhpcyBpcyB1bmZvcnR1bmF0ZWx5IHRydWUuIApVbmZvcnR1bmF0ZWx5IHlvdSB3b24ndCBiZSBhYmxlIHRvIGdldCB0aGUgZnVsbCB1bmRlcnN0YW5kaW5nIG9yIHNlZSBhbGwgdGhlIGJlbmVmaXRzIGZyb20gcmVhZGluZyBhbGwgdGhlIGluZm9ybWF0aW9uIGhlcmUgdG9kYXkuIEhvd2V2ZXIsIG9uY2UgeW91IGdldCBhIGdsaW1wc2Ugb2YgZXZlcnl0aGluZyB0aGF0IGlzIG9mZmVyZWQgYW5kIHNlZSBpdCBhbGwgc2l0dWF0ZWQgaW4gYSBiZWF1dGlmdWwgb2FrIGNhc2UsIHlvdSB3aWxsIHNlZSB3aGF0IEkndmUgYmVlbiB0YWxraW5nIGFib3V0IGFsbCBhbG9uZy4uIApJIGRpZG4gcGxheSBEaWFibG8gSUkgd2hlbiBpdCB3YXMgbW9kZXJuLCBzbyBpdCBpcyBoYXJkIGZvciBtZSB0byBhbnN3ZXIgdGhpcyB3aXRoIHRoZSByaWdodCBjb250ZXh0LiBCdXQgRGlhYmxvIElJSSB3YXMgYSB2aWN0aW0gb2YgQmxpenphcmQgdHJ5aW5nIHRvIGNvbnN0YW50bHkgdGVsbCBhIHN0b3J5LiAKNC4gTGUgdGlyYWdlIGRlIGNoZXZldXggcGFyIHBldGl0IGdyb3VwZSBkZSBjaGV2ZXV4IGV0IGRsaWNhdGVtZW50IG91ICJnZXN0ZSBmZXUiIHF1aSBkdGVuZCBsZSBjZXJ2ZWF1IGx1aSBtbWUgZXQgc2VzIHpvbmVzIGRlIHRlbnNpb24gIGRpc3RhbmNlIHBhciB2b2llIHJmbGV4ZS4KSWYgeW91IGFyZSBpbnRlcmVzdGVkIGluIGpvaW5pbmcgc29tZW9uZSBncm91cCBvciB0ZWFtLCBmb2xsb3cgdGhlIHN0ZXBzIHRoZXkgc3BlY2lmeSwgc3VjaCBhcyBETWluZyB0aGVtLCBhZGRpbmcgdGhlbSBvbiBEaXNjb3JkLCBldGMuIElmIHRoZXkgZG8gbm90IHNwZWNpZnksIGVpdGhlciBjb21tZW50IG9uIHRoZWlyIHBvc3Qgb3IgRE0gdGhlbSBpZiB5b3UgZmVlbCBtb3JlIGNvbWZvcnRhYmxlIHRoYXQgd2F5Li4gCihUaGlzIGlzbiBhbiBhdHRhY2sgb24geW91IGZvciBzYXlpbmcgbWluaW1hbCBjb3N0LCBJIHByb21pc2UhIEp1c3Qgc2hhcmluZyBteSBkaWZmZXJlbnQgcGVyc3BlY3RpdmUuIEFuZCBoYXZpbmcgYSB3aGluZSBhYm91dCBpbXBvcnRhbnQgYW5kIG5lY2Vzc2FyeSBzZXJ2aWNlcyBiZWluZyBvdXQgb2YgcmVhY2ggZm9yIG1hbnkgbWFueSBwZW9wbGUuKQpTb3V0aGxhbmQncyBCdXNpbmVzcyBWb2x1bWUgVXAgMzUgUGVyY2VudApFZXJzdCBkb29yIGVlbiBncm9vdCBib3M7IGhpZXIgdmllbCBvbnMgb3AgaG9lIHZlZWwgUnVzc2VuIGdld29vbiBvcCBkZSBwZWNoc3Ryb29rIHBhcmtlcmVuIGxhbmdzIGRlIGF1dG9zdHJhZGUvZXhwcmVzd2VnLCBvbSB0ZSBoYW5kZWxlbiwgb2Ygb29rIGRpa3dpamxzIG9tIGZydWl0IHRlIGtvcGVuLiAKSGlnaCBxdWFsaXR5IGNvbmRpdGlvbmVkIHdhdGVyLiBJdCdzIGEgZGlmZmVyZW5jZSB5b3UgYW5kIHlvdXIgZmFtaWx5IGNhbiBzZWUgYW5kIGZlZWwuIEVzcGVjaWFsbHkgd2hlbiBpdCBjb21lcyBmcm9tIHRoZSBDdWxsaWdhbiBNYXJrIDg5IG9yIE1hcmsgODEyIFdhdGVyIENvbmRpdGlvbmVyLgpDb2xvbmllcyBub3QgZXhwb3NlZCB0byBwZXN0aWNpZGVzIGV4aGliaXQgdGhlIGV4YWN0IHNhbWUgbGV2ZWwgb2YgbWl0ZSBpbmZlc3RhdGlvbiBhbmQgZG9uIGNvbGxhcHNlLiBDb2xvbmllcyBiZWluZyB0cmFuc3BvcnRlZCB0aGF0IGFyZSBub3QgZXhwb3NlZCB0byBwZXN0aWNpZGVzIGRvIG5vdCBjb2xsYXBzZS4KV2hlcmUgSSBkZWFsIHBlb3BsZSBsaWtlIHRvICJydW4gaXQgdHdpY2UiIHdoaWNoIEknbSBzdXJlIHRoZXkgZGlkbid0IGRvIGluIHlvdXIgZGF5IGVpdGhlci4gTWFueSBwbGF5ZXJzIHNheSBpdCdzIHRvbyByZWR1Y2UgdmFyaWFuY2UsIHdoaWNoIGlzIG1hdGhlbWF0aWNhbGx5IGNvcnJlY3QgaW4gYW4gYWxsIGluIHNpdHVhdGlvbi4uIApXaGlsZSBhIGxvdCBvZiBwZW9wbGUgKGluY2x1ZGluZyBtZSkgdHJ5IHRvIHBpbnBvaW50IDNyZCBhdHRlbXB0cywgdGhhdCBudW1iZXIgY291bGQgZ28gb3V0IHRoZSB3aW5kb3cgaWYgeW91IGhpdCBhIHJlYWxseSBnb29kIHNlY29uZCBvciBldmVuIGZhaWwgdGhlIGZpcnN0IHR3by4gCkkgYmVsaWV2ZSB0aGUgdG9waWMgaXMgV2lzY29uc2luIEhpZ2ggU2Nob29sIHNleHVhbCBzY2FuZGFscy4gCkxpbWl0ZWQgZXZpZGVuY2Ugd2FzIGRlZmluZWQgYXMgYXQgbGVhc3Qgb25lIFJDVCBzY29yaW5nIDIxIHRvIDQ5IHBvaW50cyBvciBhdCBsZWFzdCB0d28gUkNUcyBzY29yaW5nIDIwIHBvaW50cyB3aXRoIHN0YXRpc3RpY2FsbHkgc2lnbmlmaWNhbnQgcmVzdWx0cywgb3IgYXQgbGVhc3QgdHdvIFJDVHMgc2NvcmluZyAyMCBwb2ludHMgb3IgbGVzcyBvbiBxdWFsaXR5IGNyaXRlcmlhIHdpdGggbm8gc3RhdGlzdGljYWxseSBzaWduaWZpY2FudCByZXN1bHRzLiAKL3IvUG9saXRpY2FsX0Rpc2N1c3Npb246IERvbiBsZXQgdGhlbSBmb29sIHlvdSBpbnRvIHRoaW5raW5nIHRoZXkgbm90IGZpZ2h0aW5nLgpBdmFudGFnZSA6IHBhcyBkZSBwcm9ibG1lIGRlIHBob3Rvc2Vuc2liaWxpc2F0aW9uLiBJbmNvbnZuaWVudCA6IG9uIHNlIHByaXZlIGRlcyBwdWlzc2FudGVzIHByb3ByaXRzIGRlcyBjb3VtYXJpbmVzLiAKQWxzbyB3aGVuIG91ciB0cnVja3MgYXJlIGxvYWRlZCBhdCB0aGUgd2FyZWhvdXNlIHRoZSBkb2NrIHdvcmtlcnMgbG9hZCB0aGUgYm94ZXMgdXBzaWRlIGRvd24gZm9yIHRoZSBzYW1lIHJlYXNvbi4gSXQgbm90IHVudGlsIHRoZSBjaGlwcyBhcmUgZGVsaXZlcmVkIHRvIHRoZSBncm9jZXJ5IHN0b3JlIHRoYXQgdGhleSBhcmUgcGVybWFuZW50bHkgaW4gYW4gdXByaWdodCBwb3NpdGlvbi4gClNvIGl0IHNlZW1zIGxpa2UgeW91IGJhc2ljYWxseSBhZ3JlZSB3aXRoIHdoYXQgSSBzYWlkLiBUaGUgZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZSB0d28gY2xhc3NpZmljYXRpb25zIHRvIHlvdSBpcyBqdXN0IGEgbWF0dGVyIG9mIHNjYWxlLiBDdWx0cyBhZmZlY3RzIHZlcnkgZmV3LiBSZWxpZ2lvbnMgYWZmZWN0cyBtYW55LiBTbyByZWxpZ2lvbnMgYXJlIGJhc2ljYWxseSBjdWx0cyB0aGF0IHdlbnQgdmlyYWwuCkkgZW5kZWQgdXAgYXQgYSB1bml2ZXJzaXR5IGFjcm9zcyB0aGUgY291bnRyeSwgYW5kIGV2ZW50dWFsbHkgcHVyc3VpbmcgbXkgTWFzdGVyJ3Mgb24gYSBjb21wbGV0ZWx5IGRpZmZlcmVudCBjb250aW5lbnQsIGFuZCBpdCB3YXMgdmVyeSBuZWFybHkgY29zdGx5IHRvIG1lLiBMZWFybmluZyB0byBkcmluaywgbGVhcm5pbmcgc2V4LCBsZWFybmluZyBtb25leSwgbGVhcm5pbmcgbXkgbGltaXRzIGluIGdlbmVyYWwgd2FzIGEgc2NhcnkgdGhpbmcgdG8gZG8gd2hlbiBJIHdhcyBzdXJyb3VuZGVkIGJ5IHBlb3BsZSBhdCBsZWFzdCA0IHllYXJzIG15IHNlbmlvci4gRWR1Y2F0aW9uYWxseSwgSSB3YXMgMjMsIDI0LiAKTG9ycyBkJ3VuZSBwcm9jZHVyZSBkZSBkaXZvcmNlIHB1aXMgYXZlYyBsZSBwcm9ub25jIGR1IGRpdm9yY2UsIGxlcyBwb3V4IHBlcmRlbnQgY2V0IHVzYWdlIHNhdWYgYXZlYyBsJ2FjY29yZCBkZSBsJ3BvdXggKGRvbm5hbnQgcG91ciB1bmUgZHVyZSBsaW1pdGUgb3UgaWxsaW1pdGUpIG91IGR1IGp1Z2UgKGludHJ0IHJlY29ubnUgY29tbWUgbCd1c2FnZSBwcm9mZXNzaW9ubmVsIGV0IGxhIG5vdG9yaXQgYWNxdWlzZSA7IG91IHBvdXIgbGVzIGVuZmFudHMpIChBcnQuIENldCB1c2FnZSBwZXV0IHRyZSByZXRpciBlbiBjYXMgZCdhYnVzIG91IGRlIHJlbWFyaWFnZSBkZSBsYSBwZXJzb25uZSB1dGlsaXNhbnQgbGUgbm9tIChjZXMgbG1lbnRzIGVuIGNhcyBkZSBkaXZvcmNlIG5lIGNvbmNlcm5lbnQgcXVlIGxlIG5vbSwgbWFpcyBuZSBzJ2FwcGxpcXVlbnQgcGFzIGF1eCBwc2V1ZG9ueW1lcyA7IGRhbnMgY2UgY2FzLCBsJ2V4IGNvbmpvaW50IHBldXQgYXV0b3Jpc2VyIGwndXRpbGlzYXRpb24gb3UgbGVzIGRldXggY29uam9pbnRzIHBldXZlbnQgcmV2ZW5kaXF1ZXIgdW4gZHJvaXQgcGVyc29ubmVsIHN1ciBsZSBwc2V1ZG9ueW1lKS4uIApJZiB0aGUgZGVhbGVyIGNvbnRpbnVlcyB0byBwbGF5IHRocmVlIGNhcmQgcG9rZXIsIHRoZW4gdGhlIGRlYWxlciBhbmQgdGhlIHBsYXllciBoYXZlIHRvIGNvbXBhcmUgYm90aCBoYW5kcy4gSWYgdGhlIHBsYXllcidzIGhhbmQgaXMgZGVmZWF0ZWQsIHRoZW4gdGhlIHBlb3BsZSB3aG8gYXJlIGJldHRpbmcgd2lsbCBsb3NlIGJvdGggdGhlIEFudGUgYW5kIFBsYXkgd2FnZXJzLiBPbiB0aGUgb3RoZXIgaGFuZCwgaWYgdGhlIHBsYXllciB3aW5zLCB0aGVuIHBlb3BsZSB3aG8gYmV0IG9uIHRoZSBBbnRlIGFuZCBQbGF5IHdhZ2VycyB3aW4gMSBpcyB0byAxLiBBIHRpZSwgbWVhbmluZyBib3RoIGRlYWxlciBhbmQgcGxheWVyIGhhdmUgdGhlIHNhbWUgdmFsdWUgb2YgY2FyZHMsIHRoZW4gdGhlcmUgaXMgbm8gYWN0aW9uIG9uIHRoZSBib3RoIHdhZ2VyIChBbnRlIGFuZCBQbGF5KS4KSXQncyBlc3BlY2lhbGx5IHJlbGF0aXZlIHRvIHRoZSBUZXhhcyBIb2xkJ0VtIHBva2VyIGdhbWUgYmVjYXVzZSBpdCBpcyBwb3NpdGlvbmFsIGluIG5hdHVyZS4gCkkgNDMgYW5kIEkgcmVhbGl6ZWQgdGhhdCB3aGVuIEkgd2FzIHlvdW5nIEkgb25seSBoYWQgdGhlIGZpcnN0IE1NUiB2YWNjaW5lIGF0IDEgeWVhciBvbGQgYW5kIG5vdCB0aGUgYm9vc3RlciB0aGF0IHdhcyBzdXBwb3NlZCB0byBiZSBnaXZlbiBhdCBhcm91bmQgNSA2IHllYXJzIG9sZCBiZWNhdXNlIHRoZSBkaXNlYXNlIGhhZCBiZWVuIGVyYWRpY2F0ZWQgKHRoZSBDYW5hZGlhbiBnb3Zlcm5tZW50IGhhZCBkZWNpZGVkIHRvIHN0b3AgZ2l2aW5nIHRoZSBib29zdGVyIEkgdGhpbmsgaW4gSSBhc2tlZCBteSBwaHlzaWNpYW4gYW5kIHNoZSBzYWlkIGl0IHdvdWxkIGJlIGJldHRlciB0byBoYXZlIGl0LiBJIGluIEdlcm1hbnkgbm93IGFuZCBpdCBkaWRuIGNvc3QgbWUgYW55dGhpbmcgYXMgaXQgd2FzIGNvdmVyZWQgYnkgdGhlIHB1YmxpYyBpbnN1cmFuY2UuIApTdGlsbCwgdGhlcmUgYXJlIGEgZmV3IGV4cGVydCBhcHByb3ZlZCB3YXlzIHRvIHByb3RlY3QgeW91ciBmYWNlIHdoaWxlIHlvdSBmbHkgdGhpcyBob2xpZGF5IHNlYXNvbi4KU28gdGhlIGFnZW5jeSwgd2hpY2ggYmVnYW4gd29ya2luZyBvbiBLRkMgaW4gMjAxNywgc3VnZ2VzdGVkIGEgcHJpbnQgYWQgZmVhdHVyaW5nIHRoZSBLRkMgYnVja2V0IHdpdGggdGhlIGxldHRlcnMgcmVhcnJhbmdlZCB0byBzcGVsbCAiRkNLLCIgYW5kIGEgZmV3IGxpbmVzIG9mIGNvcHkuIFRoZSBlZGd5IGFwcHJvYWNoIHdoaWNoIHdlbnQgb3ZlciBsaWtlIGdhbmdidXN0ZXJzIG9uIHNvY2lhbCBtZWRpYSBpcyB3aHkgS0ZDIGdhdmUgdGhlIGFjY291bnQgdG8gTW90aGVyIExvbmRvbiBpbiB0aGUgZmlyc3QgcGxhY2UsIHNheXMgSGVybWV0aSBCYWxhcmluLCB3aG8gYWxvbmcgd2l0aCB3aWZlIEFuYSBCYWxhcmluIGlzIGEgY3JlYXRpdmUgbGVhZCBhdCB0aGUgYWdlbmN5LiBLRkMsIGhlIHNheXMsIHdhcyBsb29raW5nIGZvciBhIHBhcnRuZXIgdG8gImhlbHAgdGhlbSBiZSBib2xkZXIgYW5kIGhhdmUgYm9sZGVyIGNvbW11bmljYXRpb25zLiIKQXQgbGV2ZWwgdGhyZWUgeW91IHdpbGwgc3RhcnQgdGhpbmtpbmcgYWJvdXQgd2hhdCBoYW5kIHlvdXIgb3Bwb25lbnQgdGhpbmtzIHlvdSBoYXZlLiBBdCB0aGlzIHN0YWdlIHlvdSB3aWxsIHN0YXJ0IHRvIHJlYWxpemUgdGhhdCBjZXJ0YWluIGxpbmVzIG9mIHBsYXkgd2lsbCB3b3JrIGJlY2F1c2UgdGhleSBwbGF5IG9mZiB3aGF0IHlvdXIgb3Bwb25lbnQgdGhpbmtzIHlvdSBoYXZlIGluc3RlYWQgb2Ygd2hhdCB5b3UgcmVhbGx5IGhhdmUsIGFuZCBjb252ZXJzZWx5IHlvdSB3aWxsIGFiYW5kb24gY2VydGFpbiBsaW5lcyBvZiBwbGF5LCByZWFsaXppbmcgdGhleSBhcmVuJ3QgYmVsaWV2YWJsZSBiYXNlZCBvbiB3aGF0IHlvdXIgb3Bwb25lbnQgdGhpbmtzIHlvdSBoYXZlLiAKVG8gc29sdmUgdGhpcywgc3dpdGNoIGRlYWxlcnMgZWFjaCByb3VuZCBzbyB0aGF0IGV2ZXJ5b25lIGhhcyBhIHJvdW5kIHdpdGggdGhlIGxvd2VzdCBvciBoaWdoZXN0IGFtb3VudCBvZiBjYXJkcy4gQXMgbG9uZyBhcyB0aGUgZGVhbGVyIHN3aXRjaGVzIGNsb2Nrd2lzZSBhbmQgZWFjaCBkZWFsZXIgaGFuZHMgb3V0IGNhcmRzIGdvaW5nIGNsb2Nrd2lzZSwgdGhlIHBhdHRlcm4gd2lsbCByZXBlYXQgZmFpcmx5LgpIZSBkaWRuICJsb3NlIiBhIHF1YXJ0ZXIgbWlsbGlvbi4gVGhhdCB3YXMgYWxsIHN1cmdlIHByb2ZpdCB0aGF0IGhlIGp1c3QgbmV2ZXIgc29sZCBiYWNrIHRvIEZJQVQuCldyaXR0ZW4gaW5zaWRlIHRoZSBmYWtlIGVtYWlsIGV0YyB0aGUgbmFtZSBvZiBhIGZhbW91cyB3ZWJzaXRlcywgdGhhdCBhc2sgeW91IGRvIHBheSBlbGVjdHJvbmljIG1vbmV5IGF0IHRoZSBjb252ZW5pZW5jZSBzdG9yZS4gVGhlcmUgYXJlIG1hbnkgdGVjaG5pcXVlcyB0byB0cmljayBwZW9wbGUgc28gaXRzIGJlY29taW5nIGhhcmQgdG8ga25vdyBmb3Igc3VyZS4gClNpbmNlIGl0IG1ha2VzIHJlbGF0aXZlbHkgbGl0dGxlIGRpZmZlcmVuY2Ugb24gdGhlIGNpcmN1aXQsIHdoYXQgdGhlIHBvaW50IG9mIGdvaW5nIGEgbGl0dGxlIG92ZXIgMjAwPyBUaGUgY2hhbmdlIGZyb20gYSBudW1iZXIgYmVnaW5uaW5nIHdpdGggMSB0byBvbmUgYmVnaW5uaW5nIHdpdGggYSAyIGlzIGdyZWF0ZXIgaW4gcGVyY2VwdGlvbiB0aGFuIGl0IGlzIGluIHJlYWxpdHksIGJ1dCBhYm92ZSB0aGF0IGl0IHJldHVybnMgdG8gbWFyZ2luYWwuLiAKWW91ciB3aWZlIGRpZG4gd2FudCBjaGlsZHJlbiB0aGUgZW50aXJlIHRpbWUgeW91IGJlZW4gdG9nZXRoZXIgdW50aWwgcmVjZW50bHkuIApUaXRhbiBRdWVzdCB3YXMgYSBncmVhdCBnYW1lLCBidXQgaXRzIGV2ZW4gb2xkZXIgdGhhbiBEaWFibG8gSUlJIGF0IHRoaXMgcG9pbnQuLiAKRG93bmxvYWQgdGhlIFJlcXVpZW0gT3ZlcmhhdWwgZm9yIFNreXJpbS4gClNvIFNhcmFoIEx5bm4gY29tbWVudCBpcyBsaWtlbHkganVzdCBoZXIgZmlsbGluZyBpbiB0aGUgYmxhbmtzIGZvciBoZXJzZWxmIGFzc3VtaW5nIGl0IHdhcyBzb21ldGhpbmcgbW9yZSB0aGFuIHRoZSB0d28gdGhlbSB0YWtpbmcgb2ZmIHRoZWlyIHNob2VzICh3aGljaCBpZiBJIHJlY2FsbCBpcyBhbGwgdGhhdCBoYXBwZW5lZCkuIEhlbGwsIHdoZW4geW91IGZpcnN0IHNlZSBoZXIgcmVhY3Rpb24gd2hlbiBCb2phY2sgc2F5cyBoZSB0cmllZCB0byBzbGVlcCB3aXRoIHRoZSBkYXVnaHRlciBTYXJhaCBMeW5uIGxvb2tzIEhPUlJJRklFRCwgb3IgYXMgbXVjaCBhcyB0aGUgY2hhcmFjdGVycyBjYW4gaW4gdGhpcyBhcnQgc3R5bGUuQnV0IGluIHRoZSBlbmQsIHdoYXQgQm9qYWNrIGRpZCB3aXRoIFBlbm55IGV2ZW4gdGhvdWdoIG5vdGhpbmcgaGFwcGVuZWQgYXQgdGhlIHRpbWUgKGhlIGhhcyBzaW5jZSBzYWlkIGhlIGtub3dzIGRlZXAgZG93biBpbnNpZGUgaGUgd291bGQgZ29uZSB0aHJvdWdoIHdpdGggaXQpIGlzIHRoYXQgaXQgc3RpbGwgbW9yYWxseSB3cm9uZz8gSGUgd2FzIGEgZmFtaWx5IGZyaWVuZCwgaGUgd2FzIFBlbm55IGZyaWVuZCBiYXNlZCBvZmYgdGhlIGZhY3QgdGhhdCBoZSB0b3RhbGx5IGtuZXcgZXhhY3RseSBob3cgc2hlIHdhbnQgdG8gZ2V0IGJhY2sgYXQgRGllZ28gcmVnYXJkaW5nIHByb20gYW5kIHN1Y2guIE5vdCB0byBtZW50aW9uIGhlIDUwIHllYXJzIG9sZC4gCkljaCBoYWIgaWhyIHBlciBER1MgenUgdmVyc3RlaGVuIGdlZ2ViZW4sIGRhc3MgaWNoIGdlaHJsb3MgYmluIHVuZCBkYXNzIHNpZSBzaWNoIGRlbiBTY2ggIHVuZCBkYSBoYXQgc2llIHp1cmNrZ2VicmRldCwgc2llIHdyZSBhdWNoIGdlaHJsb3MsIG9iIGljaCBiaXNzY2hlbiB3YXJ0ZW4ga25uZSBiaXMgc2llIG1pdCBkZW0gV2FnZW4gZmVydGlnIHdyZSwgc2llIHdyZGUgZGFubiBiaXNzZWwgbWl0IG1pciBwbGF1ZGVybi4uIApJIGdvdCBhIGNvbGQgYW5kIGVuZGVkIHVwIHRha2luZyBvZmYgd29yayBNb25kYXkgYW5kIFR1ZXNkYXkuIEFuZCB0aGVuLCB3aGVuIEkgd2FzIGZlZWxpbmcgYmV0dGVyIG9uIFdlZG5lc2RheSwgd2ludGVyIGhhcHBlbmVkIGFuZCB3ZSBnb3QgdG9sZCB0byBnbyBob21lIGhhbGYgd2F5IHRocm91Z2ggdGhlIGRheSBhbmQgSSBoYWQgdG8gZHJpdmUgdGhyb3VnaCBzbm93LiBGdW4uQXQgbGVhc3Qgbm93IEkgYW0gZmVlbGluZyBsaWtlIDkwJSBvciBzby4gClRoZXJlIGFyZSBvdGhlciBhdG9taWMgY29uam9pbmVkIHRlcm1zIGluIHRoaXMgYm9vayBiZXNpZGVzICJib21iIiwgYW5kIHRoZXkgYXJlIHNvbWV3aGF0IHRlbGxpbmcgb2YgdGhlIHBlcmlvZC4gV2VsbHMgZG9lcyBtYWtlIGEgZ29vZCBzdHJpa2Ugd2l0aCAiYXRvbWljIGJvbWIiLCAiYXRvbWljIGFtbXVuaXRpb24iLCBhbmQgImF0b21pYyBwb3dlciIsIGFuZCB0aGVuIGdvZXMgb24gdG8gZGVzY3JpYmUgdGhlIG90aGVyIGJpdHMgdGhhdCBjb3VsZCBiZW5lZml0IGZyb20gdGhpcyBhdG9taWNpdHksIGluY2x1ZGluZyAiYXRvbWljIGFlcm9wbGFuZXMiLCAiYXRvbWljIGhheSBsb3JyaWVzIiwgImF0b21pYyB0cmFjdGlvbiBlbmdpbmVzIiwgImF0b21pYyByaXZldGVycyIgKHJpdmV0aW5nIGF0IHR3aWNlIHRoZSBwYWNlIG9mIGEgaHVtYW4pLCBhbmQgImF0b21pYyBzbWVsdGVycyIuIFNvIHRoZXJlIGFyZSBzb21lIHdlYWsgc3BvdHMgaGVyZSBhbmQgdGhlcmUgaW4gaGlzIDU3IG1lbnRpb25zIG9mICJhdG9taWMgc29tZXRoaW5nIiwgYW5kIHRoYXQgb2theSBoZSBkaWQgc29tZSBwcmV0dHkgZ29vZCBzaWdodHNlZWluZyBpbnRvIHRoZSBmdXR1cmUgd2l0aCB0aGUgYm9tYi4KV2hlbiBpdCBCcmVuZGFuIEdhbGxhZ2hlciBwYWQsIHRoZSBwb2tlciB0YWJsZSBpcyByZWQgd2l0aCBhIENIIGxvZ28gaW4gdGhlIG1pZGRsZS4KQXR0b3JuZXkgRGF2aWQgUmluZywgd2hvIHJlcHJlc2VudHMgdGhlIDM4IHllYXIgb2xkIGFjdHJlc3MsIHNhaWQgRnJpZGF5IHRoYXQgc2hlIHByb3ZpZGVkIGdyYXBoaWMgZGV0YWlscyB0byBwb2xpY2UgYWJvdXQgdGhlIGluY2lkZW50IHRoYXQgb2NjdXJyZWQgd2hpbGUgc2hlIHdhcyBpbiB0aGUgY2l0eSBmb3IgdGhlIExvcyBBbmdlbGVzLCBJdGFsaWEgRmlsbSwgRmFzaGlvbiBhbmQgQXJ0IEZlc3QuCkRldmFudCBjZSBjb25zdGF0IHByb2NjdXBhbnQsIGxlIFNlcnZpY2UgZGUgcmVuc2VpZ25lbWVudCBpbmNpdGUgbGVzIHBvbGljaWVycyAgZmFpcmUgcHJldXZlIGRlIHBsdXMgZGUgdmlnaWxhbmNlIHBvdXIgcmVwcmVyIGxlcyBjYXMgZCBzZXh1ZWxsZS4gQ2FyLCBiaWVuIHF1ZSBsZSBwaG5vbW5lIHByZW5uZSBkZSBsIGxlIG5vbWJyZSBkIGVzdCByZXN0IGNvbnN0YW50IGF1IGNvdXJzIGRlcyBkZXJuaXJlcyBhbm5lcy4KT3ZlciB0aGUgbGFzdCAxNSB5ZWFycywgc2hlIGhhcyBjb3ZlcmVkIGEgdmFyaWV0eSBvZiBzdWJqZWN0cyBpbmNsdWRpbmcgY3JpbWUsIHBvbGl0aWNzLCB0ZXJyb3Jpc20gYW5kIGJ1c2luZXNzIGZvciB0aGUgLCB0aGUgVG9yb250byBTdGFyIGFuZCBUaGUgR2xvYmUgYW5kIE1haWwuIFNoZSBoYXMgcHJvZmlsZWQgc3Vydml2b3JzIG9mIHRoZSBSd2FuZGFuIGdlbm9jaWRlLCB0cmF2ZWxsZWQgdG8gSG9uZyBLb25nIHRvIGludmVzdGlnYXRlIG5hbm55IGFidXNlIGFuZCBoYXMgaW50ZXJ2aWV3ZWQgZXZlcnlvbmUgZnJvbSB0aGUgcHJlc2lkZW50IG9mIHRoZSBNYWxkaXZlcyB0byBIdWdoIEphY2ttYW4gdG8gRHVjaGVzcyBTYXJhaCBGZXJndXNvbi4uIApMYSBCaWJsZSBlc3Qgc2VtYmxhYmxlIDogbCdoaXN0b2lyZSBkJ0lzcmFsIGVzdCBlbGxlIGV4YWN0ZSA/IE5vbi4gTCdoaXN0b2lyZSBlc3QgZWxsZSBmYXVzc2UgPyBOb24gcGx1cywgbW1lIHMnaWwgZXN0IGRpZmZpY2lsZSBkJ3RhYmxpciBsYSBwYXJ0IGR1IHJlbCBldCBjZWxsZSBkZSBsJ2ludGVycHJ0IGVtYmVsbGksICcncGFyYWJvbGlzJycuIApNR00gYW5kIGluZGVwZW5kZW50IGV4cGVydHMgaGlyZWQgYnkgc3RhdGUgcmVndWxhdG9ycyBoYXZlIHByb2plY3RlZCB0aGUgY2FzaW5vIHdvdWxkIGdlbmVyYXRlIG1vcmUgdGhhbiAkNDAwIG1pbGxpb24gYW5udWFsbHkgb25jZSBpdCBiZWNvbWVzIGZ1bGx5IGVzdGFibGlzaGVkLiAKTm93IGFsb25nIGNvbWVzIEJlZ2xlaXRlciwgYW4gaW52ZXN0bWVudCBiYW5rZXIgd2hvIGhhcyBncmFiYmVkIGEgY292ZXRlZCBwbGFjZSBpbiB0aGUgIk5vdmVtYmVyIE5pbmUuIiBIZSB3b3VsZG4ndCBiZSB0aGVyZSBpZiBub3QgZm9yIHRoZSBpbXBsb3Npb24gb2YgaGlzIGxvbmd0aW1lIGVtcGxveWVyIEJlYXIgU3RlYXJucywgd2hlcmUgaGUgaGVhZGVkIGNvcnBvcmF0ZSBzdHJhdGVneSBhbmQgaGVscGVkIHdpbmQgZG93biB0aGUgZmlybSdzIGJ1c2luZXNzIGFtaWQgdGhlIGZpbmFuY2lhbCBwYW5pYyBvZiAyMDA4LiBUaGUgZGVtaXNlIG9mIEJlYXJzIFN0ZWFybnMgbWFya2VkIHRoZSByaXNlIG9mIEJlZ3MgdGhlIHBva2VyIHBsYXllci4gQWZ0ZXIgdGhlIGZpcm0gd2FzIHNvbGQgdG8gSlBNb3JnYW4gaW4gTWFyY2ggb2YgMjAwOCwgQmVnbGVpdGVyIHdhcyB3aXRob3V0IHdvcmsgYW5kIGxvb2tpbmcgZm9yIHNvbWVwbGFjZSB0byBsZXQgb2ZmIHN0ZWFtLiAiSSBkZWNpZGVkIHdoYXQgdGhlIGhlY2ssIiBoZSByZWNhbGxzLiAiSSdtIGdvaW5nIHRvIHBsYXkgdGhlIE1haW4gRXZlbnQuIgpBbmQgZXZlbiB0aGVuLCBzaGUgd291bGRuJ3QgYmUgcGFpZCB0aGUga2luZCBvZiAkJCQgZG9pbmcgaGVyIG93biBzaG93IHRoYXQgd291bGQgYmxvdyB0aGUgQmFjaGVsb3JldHRlIG1vbmV5IG91dCBvZiB0aGUgd2F0ZXIsIGVzcGVjaWFsbHkgd2l0aCB0aGUgY2hhbmNlcyBvZiBpdCBiZWluZyBhIHJhdGluZ3Mgc21hc2ggYmVpbmcgc28gbG93LiAKSG93ZXZlciwgdGhpcyBpcyBwb3NzaWJseSB0aGUgc2hhbGxvd2VzdCBsb29rIGF0IHRoZSBkYXRhLCBhbmQgdGhlcmUgaXMgc28gbXVjaCB0aGF0IGNvdWxkIGJlIGluIHBsYXkgaGVyZS4gCkJhcmJpZSB3YXMgYWx3YXlzIGEgUHJpbmNlc3MuLiAKSGlzIGNvbnN1bW1hdGUgZ3JlZWQgbXVzdCBiZSB0ZW1wZXJlZCBieSBjaGVjayByYWlzZXMsIHNvIHRoYXQgd2hlbiB5b3UgY2hlY2sgYSBkcmF3IHRvIGhpbSwgaGUsIGNvd2FyZGx5IGZlYXJpbmcgYSBjaGVjayByYWlzZSwgcmFzcHMgdGhlIGZlbHQgYmVoaW5kIHlvdSB3aXRoIGhpcyBsb25nLCBkaXJ0eSBmaW5nZXJuYWlscy4uIApPbmNlIHVwb24gYSB0aW1lLCBtZW4gd29yZSB0aGUgcGFudHMsIGFuZCB3b3JlIHRoZW0gd2VsbC4gV29tZW4gcmFyZWx5IGhhZCB0byBvcGVuIGRvb3JzIGFuZCBsaXR0bGUgb2xkIGxhZGllcyBuZXZlciBjcm9zc2VkIHRoZSBzdHJlZXQgYWxvbmUuIE1lbiB0b29rIGNoYXJnZSBiZWNhdXNlIHRoYXQncyB3aGF0IHRoZXkgZGlkLiAKWWV0IGEgZnVydGhlciA0IFByb2Zlc3Npb25hbCBTbGFtIHNpbmdsZXMgdGl0bGVzIHdlcmUgYWxzbyB3b24gb24gZ3Jhc3MsIHdoZXJlYXMsIGlmIG9uZSB3YXMgdG8gY29tcGFyZSB3aXRoIFRpbGRlbiBbYXMgc3VnZ2VzdGVkIGFib3ZlXSAgIFRpbGRlbiB3b24gb25seSAyIG9uIGdyYXNzLiAKQnV0IGZvciBub3csIEkgYW5hbHl6ZSBhbmQgcG9uZGVyLCB3aGlsZSBJIGFtIGVudmlvdXMgb2YgYWxsIHdobyBhcmUgc2VjdXJlIGluIHdoYXRldmVyIHRoZWlyIGZhaXRoIG1heSBiZS4KVGhlcmUgYXJlIDYgc3BhcyBpbiB0aGlzIHBsYXphIGFsb25lIHRoYXQgYXJlIG93bmVkIGJ5IGEgc2luZ2xlIGZlbWFsZSBvd25lci4gSSB3b24gbmFtZSBoZXIgaGVyZSBkaXJlY3RseSwgYnV0IHNoZSBkb2VzIHNob3cgdXAgaW4gbXkgdmlkZW9zLiBUaGlzIGZlbWFsZSBvd25lciB1c2VkIHRvIHByb3ZpZGUgc2VydmljZXMgaGVyc2VsZiBidXQgaGFzIHNpbmNlIHN0b3BwZWQgYW5kIGp1c3QgY29sbGVjdHMgdGhlIHJvb20gZmVlIG1vbmV5IGZyb20gZWFjaCBvZiB0aGVzZSBzcGFzIGV2ZXJ5IGRheS4KSSB3YXMgd29ya2luZyBteSB3YXkgdGhyb3VnaCBhIHN0YWNrIG9mIHZvbHVtZXMgb2YgQ29iYmV0dCBQb2xpdGljYWwgUmVnaXN0ZXIgY29udGFpbmluZyByZXBvcnRpbmcgZm9yIHRoZSB3YXIgeWVhcnMgZm9yIHRoZSBXYXIgb2YgMTgxMiB0aGlzIG1hZ2F6aW5lL25ld3NwYXBlciB3YXMgYSB3ZWVrbHkgam91cm5hbCBvZiBuZXdzIGFuZCBpbnRlcnByZXRhdGlvbiBieSBhbiBBbWVyaWNhbiBzeW1wYXRoaXppbmcgcmFkaWNhbCBqb3VybmFsaXN0IHJlZm9ybWVyIEJyaXQuIApJdCdzIGZyb20gdGhlIGZpbG0gc291bmR0cmFjayBjYWxsZWQiQ29uZmVzc2lvbnMgb2YgYSBTaG9wYWhvbGljLiIgMjAgMzMpIEp1c3QgRGFuY2UvTG92ZWdhbWUvUGFwYXJhenppL1Bva2VyIEZhY2UvIEVoLEVoIChOb3RoaW5nIEVsc2UgSSBDYW4gRGF5KS9CZWF1dGlmdWwsIERpcnR5LCBSaWNoL1RoZSBGYW1lLyBNb25leUhvbmV5L1N0YXJzdHJ1Y2svQm95cyBCb3lzIEJveXMvUGFwZXIgR2FuZ3N0YS9Ccm93biBFeWVzL0kgTGlrZSBJdFJvdWdoL1N1bW1lcmJveSAuIFRoZXNlIHNvbmdzIGFyZSBhdmFpbGFibGUgb24gIlRoZSBGYW1lLCJHYUdhJ3MgZmlyc3QgYWxidW0uIFZlcnNpb24uIApUaGUgdHdvIHNpZGVzIHdpbGwgbWVldCBhZ2FpbiBpbiBjb3VydCBpbiBsYXRlIEFwcmlsIHdoZW4gYW55IGRpc3NlbnRpbmcgdm9pY2VzIHdpbGwgYmUgaGVhcmQgYW5kIHRoZSBqdWRnZSB3aWxsIHJ1bGUgb24gdGhlIHByb3Bvc2VkIHNldHRsZW1lbnQuCkhlcmphdmVjIGhhZCBmYWlsZWQgdG8ga2VlcCBmb3IgaGlzIGZhbWlseSB0cnVzdDsgdHdvIHJlYWwgZXN0YXRlIGV4cGVydHMsIHdobyB2YWx1ZWQgdGhlIHBhcnRpZXMgcHJvcGVydGllcywgaW5jbHVkaW5nIGEgMjIsMDAwIHNxdWFyZSBmb290IFRvcm9udG8gaG9tZTsgaW52ZXN0bWVudCBleHBlcnRzOyB0d28gY2hhcnRlcmVkIGJ1c2luZXNzIHZhbHVhdG9ycywgd2hvIHZhbHVlZCB0aGUgc2hhcmVzIG9mIE1yLiAKRG9uIHN0b3AgYmVpbmcgeW91cnNlbHZlcywgT1AuIFRoZXJlIG5vIHJlYXNvbiB0byBoaWRlIHNvbWV0aGluZyBhcyBub24gc2hhbWVmdWwgYXMgaG9sZGluZyBoYW5kcyB3aXRoIHlvdXIgcGFydG5lciwgZXNwZWNpYWxseSBub3QgZnJvbSBraWRzLgpTZXJpb3VzbHksIGlmIHRoZXkncmUgZ29pbmcgdG8gYmUgdXNlZCBleHRlbnNpdmVseSwgbWF5YmUgaXQncyB0aW1lIHRvIGludmVzdCBpbiBtb3JlIHRoYW4gb25lLi4gCjEuIApNciBXaWxzb24gdG9sZCBUaGUgQm9yZGVyIE1haWwgdGhlIHBhcmVudCBjb21wYW55IGNvdWxkIG5vIGxvbmdlciBwcm9wIHVwIExhdmluZ3Rvbi4gCkkgcGxheSBoaWRlIGFuZCBnbyBzZWVrIHdpdGggdGhlIGNhdHMuIEkgbGlzdGVuIHRvIG9sZCByZWNvcmRzLiBJIHRha2UgYSBob3QgYmF0aCBhdCBub29uIGlmIEkgZmVlbCBsaWtlIGl0IGNhdXNlIG15IGxpZmUgaXMgZnVja2luZyBhd2Vzb21lLiAKWW91IGFuIGVkZ2Vsb3JkIGlmIHlvdSBiaXRjaCBhYm91dCB0aGUgbWlsaXRhcml6YXRpb24gb2YgcG9saWNlIGluIHRoZSBVUyB3aGlsZSBjb25zaWRlcmluZyBtb3ZpbmcgdG8gc2V2ZXJhbCBjb3VudHJpZXMgd2hpY2ggYXJlIGFtb25nIHRoZSBtb3N0IGhlYXZpbHkgbWlsaXRhcml6ZWQgcG9saWNlIGZvcmNlcyBpbiB0aGUgd29ybGQuCk9uIHRoZSBvdGhlciBzaWRlIHdlIGNhbiBsb29rIGF0IGhvdyB3ZSBwbGF5IHRvIHByZXZlbnQgcGVvcGxlIGZyb20gcHJvZml0aW5nIHdpdGggYmx1ZmZzLiBXZSBzb2x2ZSBmb3IgTURGIGFuZCBmb2xkIGEgcGVyY2VudGFnZSBvZiBvdXIgcmFuZ2Ugb24gZWFjaCBzdHJlZXQgYmFzZWQgb24gdGhlIGJldCBzaXplIHVzZWQuIFRoZXJlIHNob3VsZCBuZXZlciBiZSBhIHRpbWUgd2hlcmUgeW91IGNhbGwgZmxvcCBhbmQgdGhlbiBjYWxsIGFnYWluIHdpdGggMTAwJSBvZiB0aG9zZSBoYW5kcyBvbiB0aGUgdHVybi4gCkVhc2Ugb2YgTmF2aWdhdGlvbjogVGhlIG5ldyBsb2JieSBpbmNsdWRlcyBkcm9wIGRvd24gbWVudXMgdGhhdCBtYWtlIGl0IGVhc2llciB0byBuYXZpZ2F0ZSB0byBhbmQgZnJvbSB0aGUgcmluZyBnYW1lcyBhbmQgdG91cm5hbWVudCB0YWJsZXMgdGhhdCBwbGF5ZXJzIGFyZSBsb29raW5nIGZvci4KQmVzaWRlcywgdGhlIDUgZm9vdCAxMCByZWFsaXR5IHN0YXIgaGFzIGxvbmcgc2luY2UgYnJva2VuIHRoZSB5byB5byBjeWNsaW5nIG9mIGhlciB5b3V0aC4gCldoeSB0aGlzIGNvbXBsZXggY29ubmVjdGl2ZSB0aXNzdWUgaXMgYXQgdGhlIGZvcmVmcm9udCBvZiBtZWRpY2FsIHJlc2VhcmNoCkRyYWdvbidzIHBvaW50IG9mIHZpZXcgdGhpbmsgdGhlaXIgaWRlYSBpcyByZWFsbHkgc21hcnQuIFRoZXkgYXJlIGNhcGl0YWxpemluZyBvbiB0aGUgYnkgcHJvZHVjdCB0aGV5IGFyZSBwcm9kdWNpbmcsIHNheXMgTXMuIERpY2tpbnNvbi4gbm93IHRoZSBjaGFsbGVuZ2UgaXMgc2VwYXJhdGluZyB0aGUgdHdvIGJ1c2luZXNzZXMuIEkgd2FpdGluZyB0byBhbmFseXplIEJpb2ZsYXZpYSB0byBzZWUgaWYgaXQgdmlhYmxlIG9uIGl0cyBvd24sIGFwYXJ0IGZyb20gdGhlIHdpbmUgYnVzaW5lc3MuIEF0IHRoZSBzYW1lIHRpbWUsIHdoaWxlIHRoZXkgYXJlIGZpcnN0IHRvIG1hcmtldCB3aXRoIHRoaXMgYSBiaWcgYWR2YW50YWdlIHRoYXQgbm90IHN0b3BwaW5nIGFueW9uZSBlbHNlIGZyb20gZG9pbmcgaXQuIApXZSBkb24gc2hhcmUgYSBsYXN0IG5hbWUgYW5kIHdlIGRvbiBwbGFuIHRvLiAKQW5vdGhlciBvbmUgb2YgdGhlb25saW5lIHBva2VyIHJ1bGVzaW4gY2FzaGluZyBvdXQgaXMgc29tZSBzaXRlcyBtYXkgYXNrIHlvdSB0byBjcmVkaXQgeW91ciBjYXNoIGJhY2sgaW4gdGhlIHNhbWUgd2F5IGFzIHlvdXIgZGVwb3NpdCBtZXRob2QuIApGb3IgZXhhbXBsZSwgaWYgdGhlIGRhdGUgaXMgSmFudWFyeSAyOSBhbmQgdGhlIGFydGljbGUgc3VibWl0dGVkIHdhcyB3cml0dGVuIGJlZm9yZSBEZWNlbWJlciAyOSwgdGhlbiB0aGUgc3VibWlzc2lvbiBpcyBvdXQgb2YgZGF0ZS5JZiB5b3UgaGF2ZSBhbnkgcXVlc3Rpb25zIGFib3V0IHRoaXMgcmVtb3ZhbCwgcGxlYXNlIGZlZWwgZnJlZSB0b1tNXSAgMSBwb2ludCAgc3VibWl0dGVkIDEyIGRheXMgYWdvSGkgTVNINi4gCkhlIG5vdGVkIHRoYXQgdGhvdWdoIHRoZSBjaXR5IGhhbGwgcGlsb3QgcHJvamVjdCBiZWdhbiBpbiB0aGUgY29yZSwgdGhlIGlzc3VlIGlzIGNpdHkgd2lkZS4gQW5kIHRoZSBwcml2YXRlIHByb3BlcnR5IHJ1bGVzIGFwcGx5IGNpdHkgd2lkZSwgdG9vLiBJbiBzb21lIGNhc2VzLCBieWxhdyBvZmZpY2VycyB0aGF0IGhhdmUgc2VlbiBzb21lb25lIHNsZWVwaW5nIGluIGEgYmFja3lhcmQgb3IgaW4gdGhlIHN1YnVyYnMgY29tZSB0byBkaXNjb3ZlciB0aGUgaG9tZW93bmVyIGhhcyBnaXZlbiBwZXJtaXNzaW9uLCBLYXRvbHlrIHNhaWQuLiAKTGUgZ3JhbmQgZ2FnbmFudCBkZXMgU3JpZXMgbW9uZGlhbGVzIGRlIHBva2VyIDIwMTAsIGV0IGRlIGxhIGNhZ25vdHRlIGRlIDgsOTRtaWxsaW9ucyBkZSBkb2xsYXJzIGFtcmljYWlucyBxdWkgeSBlc3QgYXNzb2NpZSwgZXN0IHVuIFF1YmNvaXMuCkkgbWVhbiBmaXJzdCBvZiBhbGwgbGV0IGdldCB0aGlzIGNsZWFyLCBJIGRvIGtub3cgIndoYXQgaXQgbGlrZSBpbiByZWFsIGxpZmUiIGxvbC4gSSBsaXZlIGluIGEgZGltbHkgbGl0LCB1bnBvcHVsYXIsIGxvdyBpbmNvbWUgYW5kIGhpZ2ggdW5lbXBsb3ltZW50IHJhdGUgcGFydCBvZiB0b3duLiBObyBoZWF2eSBkcnVncywgYnV0IGEgbG90IG9mIHdlZWQuIApFZGl0OiBJIG1hZGUgdGhlIG1pc3Rha2Ugb2YgY2xpY2tpbmcgb24gdGhpcyBwZXJzb24gcHJvZmlsZS4gVGhleSB3b24gYmUgY29udmluY2VkIGJ5IGFueXRoaW5nIGFueW9uZSBzYXlzIGFueXRpbWUgc29vbi4gCkFuZCBjb25maWRhbnRlIHRvIHRoZSBsYXRlIFByaW5jZXNzIERpYW5hLiAKQW1hbnRlYSBoYXZlIGJlZW4gYXR0ZW5kaW5nIHRyYWRlIHNob3dzIGFjcm9zcyBDYW5hZGEgYW5kIHRoZSBVbml0ZWQgU3RhdGVzIGFuZCB3aWxsIGF0dGVuZCBhIGZvb2QgZXhwbyBpbiBKYXBhbi4gTWFwbGUgV2F0ZXIgaGFzIHJlY2VpdmVkIG5vbiBHTU8gYW5kIG9yZ2FuaWMgY2VydGlmaWNhdGlvbnMuLiAKRGVyIFp1c2FtbWVuaGFuZyB6d2lzY2hlbiBtYW5nZWxuZGVyIFNhdWVyc3RvZmZ2ZXJzb3JndW5nIHVuZCBLcmFua2hlaXRlbiBpc3QgYmV3aWVzZW4gdW5kIGJlc3R0aWd0LiIgLCBXLiAKT3duZXJzaGlwIGNvbnN0YW50bHkgc2FpZCB0aGV5IGNvdWxkbid0IHNwZW5kIG1vcmUgdGhhbiBYIGRvbGxhcnMgb24gcGF5cm9sbCBiZWNhdXNlIHRoZXkgY291bGRuJ3QganVzdGlmeSB0aGUgc3BlbmQgYXMgdGhleSB3ZXJlIGxvc2luZyBtb25leSBCYyBvZiBsb3cgdGlja2V0IHNhbGVzIGV0Yy4gU2hvY2tlcjogaXQgd2FzIGEgbGllLi4gCkMgdW4gYXNwZWN0IHF1aSBuIHBhcyBkZSBtYW5pcmUgY3JpYW50ZSBkYW5zIGxlIFByY2lzIGRlIHBoeXRvdGhyYXBpZSwgYmllbiBxdSBzYSBsZWN0dXJlLCBpbCBlc3QgdmlkZW50IHF1ZSBsZSBkb2N0ZXVyIExlY2xlcmMgdGFpdCB1biBncmFuZCBsZXR0ciwgZGFucyBsZSBzZW5zIGQgYW1vdXJldXggZGUgbGEgbGV0dHJlLCBkZSBsYSBjb25qdWdhaXNvbiwgZGUgbGEgZ3JhbW1haXJlLCBkZSBsYSBzeW50YXhlLCBlbiB1biBtb3QsIGRlIGxhIGxhbmd1ZS4gCllvdSBtaWdodCBsaWtlIHRoaXMgeW91dHViZSBjaGFubmVsIGlmIHlvdSBjYW4gZ2V0IG92ZXIgdGhlIGd1eXMgc21hbGwgc3BlZWNoIGltcGVkaW1lbnQuIEhlIGdvZXMgb3ZlciBhbGwgdGhlIHdheXMgd2h5IHRoZSBGZXJtaSBQYXJhZG94IGRvZXNuIGhhdmUgYSBzaW1wbGUgc29sdXRpb24uIApJdCBub3Qgb25seSB0aGUgaGVhZHF1YXJ0ZXJzIGZvciBlbWVyZ2VuY3kgcmVzcG9uZGVycywgaXQgYWxzbyBob3N0cyBtYW55IGNvbW11bml0eSBldmVudHMuIApSZWFkIHJldmlld3MgYW5kIHN1bW1hcmllcyBvbiBhIHJlcHV0YWJsZSB0cmF2ZWwgc2l0ZSBvciBuZXdzIHNvdXJjZSB0byBzZWUgd2hpY2ggbG9jYXRpb25zIGFsbCBvZiB0aGUgZmxpZ2h0cywgaG90ZWxzLCByZXN0YXVyYW50cyBhbmQgdHJhbnNwb3J0YXRpb24gYXJvdW5kIHRvd24uIEFuZCBuZWl0aGVyID8/Pz8gPz8/PyA/Pz8/IG9mIHRoZXNlIHR5cGVzIG9mIHJlc29ydHMgd291bGQgYmUgYWxsb3cgeW91IHRvIHB1dCB0b2dldGhlciBhIGNoZWFwIHZhY2F0aW9uIHBhY2thZ2UgYWxsIG9uIHlvdXIgb3duLiAKVGhlIGJlc3QgZXZlciBpcyB0aGUgb25lIHRoYXQgaGFzIGRlZmVhdGVkIGhpbXNlbGYuIApBdWYgaWhyZXIgRmluY2EgQXV0YXJjYSBhdWYgZGVyIHNvbm5pZ2VuIFdlc3RzZWl0ZSBMYSBQYWxtYXMgYW4uCkd0Zm8gd2l0aCB5b3VyIGJ1bGxzaGl0Li4gCk9NRyBJIGxpdmUgaW4gdGhlIHNvdXRoIGFuZCB3aGlsZSBJIHVuZGVyc3RhbmQgcGVvcGxlIGFyZSBhbmdyeSB3aXRoIGNvbmZlZGVyYXRlIHN0YXR1ZXMgYW5kIGJvaXN0ZXJvdXMgcmVkbmVjayBSRUFMIHJhY2lzdHMgdXNpbmcgdGhlIGZsYWcgYXMgYSByYWNpc3QgaGF0ZSBwcm9wYWdhbmRhIHN5bWJvbCB1bmRlcnN0YW5kIHRoYXQgdGhlIENpdmlsIFdhciB3YXMgYSBsb25nIGZ1Y2tpbmcgdGltZSBhZ28gYW5kIHBlb3BsZSBkaWVkIG9uIGJvdGggc2lkZXMuIE1vdGhlcnMsIGZhdGhlcnMsIGJyb3RoZXJzIGFuZCBzaXN0ZXJzLiBKdXN0IGJlY2F1c2UgcGVvcGxlIGhvbm9yIHRoZWlyIGRlYWQgcmVsYXRpdmVzIHRoYXQgZGllZCBpbiBhIHdhciBkb2VzbiBtZWFuIHRoZXkgYXJlIHJhY2lzdHMuIApXZSd2ZSBkZWNpZGVkIHRvIGhvc3QgYSBkaWFwZXIgYW5kIHBva2VyIHBhcnR5IGZvciBteSBodXNiYW5kIGFuZCBoaXMgZnJpZW5kcywgcGFydGx5IHRvIGhlbHAgYnVpbGQgb3VyIGNsb3RoIGRpYXBlciBzdGFzaCBhbmQgdG8gaGF2ZSBhIGdldCB0b2dldGhlciBiZWZvcmUgaGUgYmVjb21lcyBhIGRhZGR5LiAKVGhlIG9ubHkgZGlzYWdyZWVtZW50IGlzIGFib3V0IGhvdyB0byBjYXNoIGluLi4gClVuZm9ydHVuYXRlbHkgYWx0aG91Z2ggU2hhbmdoYWkgaXMgb25lIG9mIHRoZSBzYWZlc3QgY2l0aWVzLCBzY2FtcyBhcmUgYWJzb2x1dGVseSByaWZlIGluIENoaW5hLiBUYW5UYW4gaXMgbm8gZXhjZXB0aW9uIHRvIHRoaXMgYW5kIGlzIHJpZGRsZWQgd2l0aCBib3RzIGFuZCBzY2FtbWVycyBzbyB5b3UgbmVlZCB0byBiZSBtb3JlIGNhcmVmdWwgd2hlbiB1c2luZyBpdC5JIGFsbW9zdCBnb3QgdHJhcHBlZCBieSB0aGlzICAgSSBtZXQgYSBnaXJsIG9uIE5hbmppbmcgRG9uZyBMdSwgYnV0IEkgbm90aWNlZCB3aGVuIHNoZSBnb3Qgb3V0IGhlciBwaG9uZSBzaGUgaGFkIGJlZW4gc2VuZGluZyBzY3JlZW5zaG90cyBvZiBvdXIgY29udmVyc2F0aW9uIHRvIHNvbWVvbmUuIFNoZSBhbHNvIHdhbnRlZCBKYXBhbmVzZSBmb29kIGFuZCB0b29rIG1lIHRvIGEgcGxhY2UgdGhhdCBjbGVhcmx5IG9ubHkgaGFkIGEgc21hbGwgbGlmdCBhbmQgcHJvYmFibHkgd291bGQgaGF2ZSBoYWQgbm8gZWFzeSBleGl0cy4gClRoZSBib29rIGV4cGxhaW5zIHRvIHRoZSByZWFkZXIgaG93IHRoZXkgY2FuIHVzZSBpbmZvcm1hdGlvbiBhbmQgZGF0YSBpbiBhIG11Y2ggc21hcnRlciB3YXkuLiAKV2hhdCBtYWtlcyBwb29sIGRpbmluZyB0YWJsZXMgdW5pcXVlIGlzIHRoYXQgdGhleSBjYW4gYmUgdXNlZCB0byBhY2NvbW1vZGF0ZSBhIGdhbWUgb2YgcG9vbCwgb3IgaXQgY2FuIGJlIHVzZWQgYXMgYSBkaW5uaW5nIHRhYmxlLiAKQnV0Y2gxMjMgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxMSBtb250aHMgYWdvCkZvciBvbmUsIHRoZSBkZWZlbnNlIHJlbWFpbmVkIHNvbGlkIGFuZCBjYW4gcmVqb2ljZSBpbiB0aGUgZmFjdCB0aGF0IEpvc2UgR29uY2FsdmVzIGhhZCBhIERlZmVuZGVyIG9mIHRoZSBZZWFyIHdvcnRoeSBwZXJmb3JtYW5jZS4gQW5kIGRlc3BpdGUgbm90IHNjb3JpbmcsIHRoZSBSZXZvbHV0aW9uJ3Mgb2ZmZW5zZSBkaWRuJ3QgbG9vayB0b28gYmFkLCBlaXRoZXIuIApJZiB5b3UgZG9uIGhhdmUgdGhlIGRvd250aW1lIHRvIHdhdGNoIHRoZWlyIHN0cmVhbXMsIG1heWJlIGp1c3Qgd2F0Y2ggYSBjb3VwbGUgb2YgdGhlaXIgWW91dHViZSB2aWRlb3MgaGVyZSBhbmQgdGhlcmUuIElmIHlvdSBkbyB3YXRjaCB0aGVpciBzdHJlYW1zIHRob3VnaCwgdHJ5IHRvIGdldCBhY3RpdmUgaW4gdGhlIGNoYXQuIEFzayBiYXNpYyBxdWVzdGlvbnMgaW4gdGhlIGNoYXQgd2hlbiB5b3Ugc2VlIHNvbWV0aGluZyB5b3UgZG9uIHF1aXRlIGdldCwgYW5kIGJlIHJlY2VwdGl2ZSBvZiB0aGUgYW5zd2VycyBmcm9tIHRoZSBzdHJlYW1lciBhbmQgdGhlIHZpZXdlcnMoZXZlbiBpZiBzb21lIHBlb3BsZSBtYWtlIGZ1biBvZiB5b3Ugb3IgY29uZGVzY2VuZCwgYmVjYXVzZSB0aGUgcG9rZXIgY29tbXVuaXR5IGlzIGxhcmdlbHkgaW5zdWZmZXJhYmxlKS4gCkhlcmJlIGF1eCBhbmdlcyB2ZW51ZSBkdSBOb3JkIChTY2FuZGluYXZpZSkgYXV4IGVudmlyb25zIGR1IFhJSSBtZSBzaWNsZSwgZWxsZSB0YWl0IGRvbmMgaW5jb25udWUgZGVzIGFuY2llbnMgR3JlY3MuIEF1am91cmQgZW5jb3JlLCBpbXBvc3NpYmxlIGRlIHRyb3V2ZXIgZGUgbCBzYXV2YWdlIHN1ciBsZSBwb3VydG91ciBtZGl0ZXJyYW5lbiBjYXIsICBwaWVkcyBkYW5zIGwgZXQgdHRlIGF1IHNvbGVpbCAsIGVsbGUgbiBzdXJ2aXZyYWl0IHBhcy4gCkkgc2V2ZW50aCg/Pz8pISEhIE91ciBncm91cCByZWNlbnRseSBoYWQgYSBsb25nIHRpbWUgY2hhcmFjdGVyIGRpZS4gTXkgY2hhcmFjdGVyIHN1ZmZlcmVkIHRoZSBsb3NzIHNvIGRlZXBseSB0aGF0IHNoZSBsb3N0IGhlciBtaW5kIGJyaWVmbHkgKHNoZSBoYWQgY29tcGxleCBQVFNEIGFzIGl0IHdhcykgYW5kIGFmdGVyIHBsYXlpbmcgaGVyIHRocm91Z2ggdGhhdCBJIHJlYWxpemVkIEkgd2FzIGRldmVsb3BpbmcgZXZlbiBzdHJvbmdlciBlbXBhdGh5IGZvciB3b3JraW5nIHdpdGggdHJhdW1hLiBJIG1lYW4sIGl0IGhlbHBlZCBtZSBwZXJzb25hbGx5IHRoYXQgdGhlIGNoYXJhY3RlciB0aGF0IHBhc3NlZCB3YXMgbXkgaHVzYmFuZCBzbyB0aGVyZSB3YXMgZW1vdGlvbmFsIGNvbm5lY3Rpb24gcmVnYXJkbGVzcy4uIApJIGRpZCBpdCBmb3IgYSBudW1iZXIgb2YgcmVhc29ucywgYnV0IGxhcmdlbHkgYmVjYXVzZSBJIHdhcyBpbmNyZWRpYmx5IGRlcHJlc3NlZCBhbmQgZGlkIG5vdCBnaXZlIGEgZnVjayBpZiBJIGxpdmVkIG9yIGRpZWQuIApTbyB5b3Ugbm90IHdlaXJkIGFuZCB5b3Ugd2VyZW4gdG9ydHVyaW5nIGhlci4gSWYgc2hlIG5ldmVyLCBhdCBhbnkgcG9pbnQsIHRvbGQgeW91IHRoYXQgc2hlIHdhc24gaW50ZXJlc3RlZCwgYW5kIGlmIHlvdSB3ZXJlIGp1c3QgZG9pbmcgbmljZSwgY2FzdWFsIHRoaW5ncyB0byBzaG93IHlvdXIgaW50ZXJlc3QsIHRoZW4gaXQgbm90IHdlaXJkIGF0IGFsbCBhbmQgeW91IHNob3VsZG4gZmVlbCBiYWQgZm9yIHRyeWluZyB5b3VyIGJlc3QuIEkgaG9wZSB5b3UgdHJ5IGFnYWluIGluIHRoZSBmdXR1cmUgYW5kIHRoYXQgeW91IGhhdmUgYSBzdWNjZXNzZnVsIGxvdmUgd2l0aCBzb21lb25lIHdobyBkZXNlcnZlcyBldmVyeXRoaW5nIHRoYXQgeW91IGhhdmUgdG8gb2ZmZXIuIApJIHdhcyB0cnlpbmcgdG8gdGhpbmsgYWJvdXQgd2hhdCBJIHdhbnRlZCB0byBkbyBuZXh0LiBBIGxvdCBvZiB0aGluZ3Mgd2VudCB3cm9uZyBhZnRlciB0aGF0IGJvb2sgYW5kIEkgd2FzIGNvbnRlbXBsYXRpbmcgdGhlIG5hdHVyZSBvZiBsdWNrLiBXZSBkb24ndCBhcHByZWNpYXRlIGx1Y2sgaW4gbGlmZSB3aGVuIHRoaW5ncyBhcmUgZ29pbmcgd2VsbC4gCkZvciB0aGUgc2VyaW91cyBjYW5uYWJpcyBlbnRodXNpYXN0LCBQdWZmY28ncyBuZXdlc3QgZGV2aWNlIGlzIGEgc2xlZWsgYW5kIGNoaWMgZGFiIHJpZyBwYWNrZWQgd2l0aCB0ZWNobm9sb2d5IGZvciB0aGUgcHVyaXN0IGFuZCBjbGVhbmVzdCBvZiBjb25jZW50cmF0ZSBzZXNzaW9ucy4gQW5kIGFzIHRoZSBpbmR1c3RyeSBsZWFkZXIgb2YgdmFwb3JpemluZyBpbm5vdmF0aW9uLCBQdWZmY28gcHJpZGVzIGl0c2VsZiBvbiBhICJubyBsZWFybmluZyBjdXJ2ZSIgZXhwZXJpZW5jZSwgc28gZm9yIG5ld2JpZXMgaXMgZWFzaWVzdCB0byB1c2UuIEF2YWlsYWJsZSBpbiBsaW1pdGVkIGVkaXRpb24gd2ludGVyIHdoaXRlIGV4Y2x1c2l2ZWx5IGF0IEJlc3QgRGF5IEV2ZXIuLiAKUGFydGljdWxhcmx5IGlmIHlvdSB3YW50IGEgc2V0IG9mIGVsZW1lbnRhbCBnZWFyIGFsb25nc2lkZSB0aGUgd2VhcG9uLCB5b3UgbmVlZCBhIHRvbm5lIG9mIGNyeXN0YWxzIGZyb20gTk1zIGluIFB5cm9zLiBUaGUgZmlyc3Qgb3JkZXIgb3B0aW1hbCBzdHJhdGVneSBpcyBwcm9iYWJseSBqdXN0IHRvIGhvcCBvbiB0aGUgZmF0ZSB0cmFpbiBhbmQgcmlkZSBpdCB0byA1MC4gV2hlbiBJIGdvdCB0aGVyZSwgcHJpbWFyaWx5IHRocm91Z2ggZmF0ZXMsIEkgc3RpbGwgbmVlZGVkIGFib3V0IDIwMCBjcnlzdGFscywgc28gaWYgeW91IGhhdmUgdG8gZG8gdGhlIGZhdGVzIGFueXdheSB5b3UgbWlnaHQgYXMgd2VsbCBsZXZlbCB3aXRoIHRoZW0uLiAKSGUgbG92ZWQgaGF2aW5nIGJvbiBmaXJlcy4gClRoZSBsYXdzLCB0b28sIGFyZSBhIGJpdCBvZiBhIG1peGVkIGJhZy4gSW4gaGlnaCBzY2hvb2wsIHlvdSBvZnRlbiBzZWUgdGhhdCB0aGUgUm9tYW5zIHdlcmUgYW4gb3JkZXJlZCBwZW9wbGUsIGhhdmluZyBldmVyeXRoaW5nIGp1c3Qgc28sIGFuZCBlc3RhYmxpc2hpbmcgZmlybSBjb25zdGFudHMgb3ZlciB0aGUgYXJlYSB3aGljaCB0aGV5IHJ1bGVkLiBUaGlzLCBsaWtlIGFsbCBnZW5lcmFsaXphdGlvbnMsIGlzIGEgbG92ZWx5IGZhbnRhc3kuIApFdmVyIHNpbmNlIHBva2VyJ3MgIkJsYWNrIEZyaWRheSIsIHRoZSBkYXkgaW4gMjAxMSB3aGVuIHRoZSBVbml0ZWQgU3RhdGVzIERlcGFydG1lbnQgb2YgSnVzdGljZSBzaHV0IGRvd24gdGhlIHRocmVlIGJpZ2dlc3Qgd2Vic2l0ZXMgICBQb2tlclN0YXJzLCBGdWxsIFRpbHQgUG9rZXIsIGFuZCBBYnNvbHV0ZSBQb2tlci9VbHRpbWF0ZSBCZXQgICB3aXRoIGNyaW1pbmFsIGluZGljdG1lbnRzLCBpdCBoYXMgYmVlbiB0aGUgcmVzcG9uc2liaWxpdHkgb2YgaW5kaXZpZHVhbCBzdGF0ZXMgdG8gbGVnYWxpemUgcG9rZXIgb24gdGhlIGludGVybmV0LgpTb21lIHByb3ZpZGUgYWRkaXRpb25hbCBzZXJ2aWNlcyBmb3IgYW4gZXh0cmEgY2hhcmdlIChpZS4gQW5hbCBzZXgsIHN3YWxsb3dpbmcsIGZhY2lhbCwgZXRjLikuIFRoZXNlIGNoYXJnZXMgZ28gZGlyZWN0bHkgdG8gdGhlIHNlcnZpY2UgcHJvdmlkZXIgYW5kIG5vdCB0aGUgb3duZXIuLiAKSSBndWVzcyBpZiBJIGNhbiBnZXQgYSBiZXR0ZXIgcmF0ZSB3aXRoIHRoZSBiYW5rIHRoYW4gVFcgdGhlIG1haW4gYmVuZWZpdCBpcyB0aGUgc3BlZWQuIEJ1dCB0YmggaXQncyBub3QgYSBodWdlIHByaW9yaXR5LgpJZiB5b3UgY2hlYXQgdGhlbiB5b3UgYXJlIGJhbm5lZCBmb3IgbGlmZS4gQW55IHRob3VnaHRzIHF1ZXN0aW9ucyBmZWVsIGZyZWUgdG8gZW1haWwgbWUuLiAKSSBmb3VuZCB0aGUgY2xhc3MgZWFzeSBtYXliZSBhIGZvdXIgb24gYSAxMCBwb2ludCBzY2FsZSB5ZXQgY2hhbGxlbmdpbmcgaW4gc29tZSB1bmV4cGVjdGVkIHdheXMuIFRoZSBjb3JlIHdvcmsgd2FzIGVzcGVjaWFsbHkgdG91Z2guIFRoZSBtYXNzYWdlIGFuZCBzdHJldGNoaW5nIGZlbHQgZ3JlYXQgYW5kIHdhcyBteSBmYXZvcml0ZSBwYXJ0LgpNYW55IG9mIHRoZW0gYXQgaGlnaCBzY2hvb2wgYWdlIGFjdHVhbGx5IGxpdmUgaW4gYSBkb3JtLCBxdWl0ZSBmYXIgZnJvbSBob21lLCBhbmQgY29tZSBob21lIGR1cmluZyB0aGUgd2Vla2VuZHMuIApJdCB2ZXJ5IHJlZnJlc2hpbmcgd2hlbiBjb21wYXJlZCB0byB0aGUgZ2F0ZWtlZXBpbmcgdGhhdCBnb2VzIG9uIGluIG90aGVyIGhvYmJpZXMvc3Vicy4gCkluIGNhc2ggZ2FtZXMsIGNhcmRzIGFyZSB0eXBpY2FsbHkgb25seSBmbGlwcGVkIHdoZW4gdGhlIGhhbmQgZW5kcy4gVGhlIHBlcnNvbiB3aG8gbWFkZSB0aGUgbGFzdCBiZXQgKHRoZSBvbmUgd2hvIHdlbnQgYWxsIGluKSBoYXMgdG8gc2hvdyBoaXMgY2FyZHMgZmlyc3QuIApJIHVzZWQgdG8gYmUgYW4gSVQgUmVjcnVpdGVyIHdpdGggR29vZ2xlOyBhbmQgd2UgYWJzb2x1dGVseSB1c2VkIHRoZW0uIApJIHRoaW5rIHdlIGhpdCB0aGUgZmlyc3Qgc2VydmljZSBzdGF0aW9uIHdoZW4gd2UgZ290IGludG8gR2VybWFueS4gCldoZW4gSSBlbnRlcmVkIHRoZSBnYXJhZ2UgSSBub3RpY2VkIHRoYXQgaW4gb25lIG9mIHRoZSBkb2dzIGJvd2xzIHRoZXJlIHdhcyBhIHNtYWxsIHR1cmQsIGNsZWFybHkgZG9nIHBvbywgaW4gb25lIG9mIHRoZSBib3dscy4gCkxlZ2lvbmhlaXIgIDYgcG9pbnRzICBzdWJtaXR0ZWQgMTEgZGF5cyBhZ28KU28gd2UgZG9uIHdhbnQgQ29tY2FzdCwgZXQgYWwgdG8gd3JpdGUgdGhlIGxhd3MsIGJ1dCB3ZSBkbyBuZWVkIHBlb3BsZSB3aG8gd29yayBpbiB0aGUgaW5kdXN0cnkgdG8gcHJvdmlkZSBpbnB1dC4gQnV0IGJ5IHZpcnR1ZSBvZiB3b3JraW5nIGluIHRoZSBpbmR1c3RyeSwgeW91IGF1dG9tYXRpY2FsbHkgYmlhc2VkLiAKVGhpcyB3YXMgcHVibGlzaGVkIGluIGEgTWVkaWNhbCBKb3VybmFsIGluIDIwMDIuIApJIG5vdCBnb2luZyB0byBjdXJ0YWlsIGRpc2N1c3Npb24ganVzdCBiZWNhdXNlIHRoZXkgb2xkZXIgdGhhbiBhIGNlcnRhaW4gYWdlLgpUaGVyZSBhcmUgY2FmZXMgaGVyZSB3aG8gaGF2ZSBzdGFmZiB0aGF0IGFyZSBpbiBhcnQgc2Nob29sLCBzbyB0aGV5IGdldCB0aGVpciBlbXBsb3llZXMgdG8gZG8gYXJ0IGZvciB0aGVtLi4gCkFsbCBvZiB0aGF0IHRlbnNpb24sIGFsbCBvZiB0aGF0IGNvbXByZXNzaW9uLCBhbGwgb2YgdGhhdCBmcmljdGlvbiBpcyBkaXN0cmlidXRlZCB0byB0aGUgaGlwcywgZ2x1dGUgbXVzY2xlcywgYW5kIGhhbXN0cmluZ3MsIGluc3RlYWQgb2YgYmVpbmcgcGxhY2VkIG9uIHRoYXQgdGlueSBzcGluZSBtdXNjbGUgYW5kIHRoYXQgdnVsbmVyYWJsZSBkaXNjLiAKVGhlIGZpcnN0IHNjaWVudGlzdHMgdGhhdCBzdHVkaWVkIHJhY2UgYW5kIElRIHdlcmUgd2hpdGUgc3VwcmVtYWNpc3RzIHZlcnkgb3BlbiBhYm91dCB0aGUgZmFjdCB0aGF0IHRoZXkgd2VyZSB0cnlpbmcgdG8gcHJvdmUgd2hpdGVzIHdlcmUgc3VwZXJpb3IgYW5kIGp1c3RpZnkgSmltIENyb3cgbGF3cywgYmFucyBhZ2FpbnN0IGludGVycmFjaWFsIG1hcnJpYWdlLCBldWdlbmljcywgYW5kIGV2ZW4gZ2Vub2NpZGUuIFNvIHRoZXkgdG9vayBhIHRlc3QgZGV2ZWxvcGVkIGluIHRoZSBVSyB0byBpZGVudGlmeSBzdHVkZW50cyBmYWxsaW5nIGJlaGluZCBpbiBzdHVkaWVzIHRvIHRhcmdldCB0aGVtIGZvciBleHRyYSBlZmZvcnRzLCBhbmQgd2FycGVkIGl0IHRvIHN1cHBvcnQgdGhlaXIgcHJlY29uY2VpdmVkIHJhY2lzdCBjb25jbHVzaW9ucy4gVGhleSBvZmZlcmVkIG5vIGZ1cnRoZXIgaW5zaWdodHMgbm9yIGZ1cnRoZXIgc3R1ZGllcyBvbmNlIHRoZXkgZ290IHRoZSByZXN1bHQgdGhleSB3YW50ZWQsIGV4Y2VwdCB0byBhbHNvIHRpZSB0aGlzIHRvIHNrdWxsIHNpemUgdG8gInByb3ZlIiBJUSB3YXMgcmlnaWQgYW5kIGNvdWxkbiBiZSBjaGFuZ2VkIChhZ2FpbiwgdGhlIEZseW5uIGVmZmVjdCBkaXNwcm92ZXMgYWxsIG9mIHRoaXMpLiBUaGVpciBzdHVkaWVzIHdvdWxkIGJlIGxhdWdoZWQgb3V0IG9mIGFjYWRlbWlhIHRvZGF5IG5vIG1hdHRlciB3aGF0IHN1YmplY3QgdGhleSB3ZXJlIHJlc2VhcmNoaW5nLgpEZWFyIG1vdGhlciBvZiBXYXluZSAoSmVuKSBhbmQgQ3ludGhpYSAoRG9uKS4gQ2hlcmlzaGVkIGdyYW5kbW90aGVyIG9mIDUgYW5kIGdyZWF0IGdyYW5kbW90aGVyIG9mIDMuIFNpc3RlciBvZiBCcnVjZSBXaGVhdGNyb2Z0LiAKVGhlIHN0YWlyd2F5LCBhIG1vZGVybiB0YWtlIG9uIGEgY2xhc3NpYyBzdGFpcndlbGwsIGlzIGZsYW5rZWQgYnkgYSBob21lIG9mZmljZSBhbmQgYSB3aGl0ZSBvbiB3aGl0ZSBzaXR0aW5nIHJvb20gd2l0aCBhbiAxMSBmb290IGFyY2hpdGVjdHVyYWwgZHJvcCBjZWlsaW5nIGFuZCByZWNlc3NlZCBsaWdodGluZyBhbmQgY2xpbWJzIHBhc3QgYSBzdGFpbmVkIG1hcGxlIGxpYnJhcnkgd2l0aCBhIGZpcmVwbGFjZSwgcHJpdmF0ZSBwYXRpbyBhbmQgZ2xpc3RlbmluZyBuZXcgTWFzb24gSGFtbGluIGJhYnkgZ3JhbmQgcGlhbm8uIApDb21wbGljYXRlZCBwcmVnbmFuY2llcyBjYW4gYmUgYSBkaWZmZXJlbnQgc3RvcnksIGJ1dCBub3QgYmVjYXVzZSBtYXNzYWdlIGhhcyBiZWVuIGxpbmtlZCB0byBpbmNyZWFzZWQgcmlza3MgaW4gdGhvc2UgY2FzZXMuIApJdCBkb2VzIGRlcGVuZCBvbiB0aGUgY29udGV4dCwgaG93ZXZlciAgIElmIHlvdSdyZSBjb25zaWRlcmluZyB0aGUgaXRlbXMgaW4gdGhlIHBhaXIgaW5kaXZpZHVhbGx5LCB1c2UgaXQgbGlrZSBhIHBsdXJhbCBzdWJqZWN0LCBidXQgaWYgaXQncyBhIHNpbmdsZSBlbnRpdHkgKHBhaXIgb2Ygc2Npc3NvcnMsIGZvciBleGFtcGxlKSwgdXNlIGl0IGxpa2UgYSBzaW5ndWxhciBzdWJqZWN0LiAoRnVsbCBBbnN3ZXIpLiAKRW4gYWNjb3JkIGF2ZWMgbGEgdHJhZGl0aW9uIGp1aXZlLCAgbGFxdWVsbGUgaWwgZXN0IGZpZGxlLCBpbCBwdWlzZSBzYSBycG9uc2UgZGFucyBsYSBUb3JhaCBvIG9uIGxpdCA6ICJbIC4gXSBjYXIgbW9pIGwnRXRlcm5lbCwgamUgc3VpcyB0b24gbWRlY2luIChyb3BoKSIgKEV4b2RlIDE1IDogMjYpLiBNYWltb25pZGUgcGVuc2UgcXVlICJzaSBEaWV1IGRpdCBxdSdpbCBzb2lnbmUsIGlsIGVzdCBwZXJtaXMgIHVuIGhvbW1lIGRlIGRldmVuaXIgbWRlY2luIGV0IGRlIHByYXRpcXVlciBzb24gYXJ0IiAoIkxhIG1kZWNpbmUgZGUgTWFtb25pZGUiLCBQci4gRi4gUm9zbmVyKS4KVGhvdWdoIHRoZSBpbmNpZGVudCBoYXBwZW5lZCBzZXZlcmFsIG1vbnRocyBhZ28sIE5ld3M0SmF4IGhhcyBqdXN0IGxlYXJuZWQgdGhhdCBCYWlsZXkgd2FzIGFycmVzdGVkIG9uIEFwcmlsIDIxLCB3aGVuIGhlIHdhcyB0YWtlbiBpbnRvIGN1c3RvZHkgYnkgaGlzIG93biBjb2xsZWFndWVzIG9uIGEgd2FycmFudCBvdXQgb2YgQ2xheSBDb3VudHkuCltdIFdlIHdhbnQgYSBzZW5zaWJsZSBzb2x1dGlvbiB0aGF0IGVuc3VyZXMgdGhlIHJvYWQgcmVtYWlucyBvZiBjb3Vyc2UgYWNjZXNzaWJsZSB0byBldmVyeW9uZSwgYnV0IGlzIGFsc28gYSBwbGFjZSB0byBsaXZlIHdpdGggYSBtb2RpY3VtIG9mIHRyYW5xdWlsbGl0eS4iIENhcHRpb246IFRoZXJlIGFyZSBkZWZpbml0ZWx5IGVhc2llciB3YXlzIG9mIHJpbmdpbmcgdGhlIGRvb3JiZWxsLiAKUiBkaWUgT2x5bXBpc2NoZW4gU29tbWVyc3BpZWxlIDIwMjAKVGhlIGdpYW50IHdpbGQgamFzbWluZSBidXNoIHRoYXQgSSB0aG91Z2h0IHdhcyBhIGJ1c2ggdGhhdCBJIGhhdmUgcHJvYmFibHkgd2Fsa2VkIHBhc3QgaHVuZHJlZHMgb2YgdGltZXMgbm93PyBJdCBub3QuIEl0IGFjdHVhbGx5IGEgd3JvdWdodCBpcm9uIGNoYWlyIHRoYXQgaXMgQ09WRVJFRCBieSB0aGlzIHdpbGQgamFzbWluZS4gQSBGVUNLSU5HIENIQUlSLi4gCkhlcmUgSSBhbSAyIHllYXJzIGxhdGVyIEdFVFRJTkcgUEFJRCB0byBtb3ZlIGludG8gbXkgc2Vjb25kIHByb3BlcnR5LiAKWGJveCBoYXMgaXRzIGZhdWx0cywgeWVzLCBidXQgbXkgZmF2b3JpdGUgdGhpbmcgYWJvdXQgdGhlIFhib3ggY29tbXVuaXR5IGFuZCB0aGUgcmVhc29uIHRoYXQgSSBwcmVmZXIgbXkgWGJveCBvdmVyIG15IFBsYXlTdGF0aW9uIGlzIGJlY2F1c2UgdGhleSBhcmUganVzdCBhcyBxdWljayB0byBjcml0aWNpemUgTWljcm9zb2Z0IGFzIHRoZXkgYXJlIHRvIHByYWlzZSB0aGVtIGJ1dCB0aGF0IGtpbmQgb2YgYXR0aXR1ZGUgaXMgdW5oZWFyZCBvZiBpbiB0aGUgUGxheVN0YXRpb24gY29tbXVuaXR5LiAKVGhlIHNjcmVlbiBkb29yIGRvZXNuIGxvY2suIApQZXJoYXBzIHdpdGggYWxsIHRoZSBwcmludGluZyBkb2xsYXJzIHRoZXJlIGlzIHNvbWUgcmlzayBvZiBydW5hd2F5IGluZmxhdGlvbi4gClVuaXRlZCBTdGF0ZXMgb2ZmaWNpYWxzIGFuZCBwcml2YXRlIHNlY3VyaXR5IGZpcm1zIHNhdyB0aGUgYXR0YWNrcyBhcyBhIHNpZ25hbCBieSBNb3Njb3cgdGhhdCBpdCBjb3VsZCBkaXNydXB0IHRoZSBXZXN0J3MgY3JpdGljYWwgZmFjaWxpdGllcyBpbiB0aGUgZXZlbnQgb2YgYSBjb25mbGljdC4gCldpdGggY2VsbCBwaG9uZXMsIHRoZSB0ZWNobm9sb2d5IHdhcyBhbiBvYnZpb3VzIGltcHJvdmVtZW50LCBhbmQgaXQgcHJvdmlkZXMgY3JlYXRvcnMgYSBmb3VuZGF0aW9uIHRvIGJ1aWxkIHVwb24sIGl0IG92ZXJhbGwgYSBtdXR1YWxseSBiZW5lZmljaWFsIGNoYW5nZSwgdGhhdCB3aGF0IHByb2dyZXNzIHNob3VsZCBiZS4gV2l0aCBtdXNpYywgaXQgZmVlbHMgbGlrZSBhIGdpYW50IHN0b3JtIGhpdCBhbmQgbm93IGV2ZXJ5b25lIGZpZ2h0aW5nIHRvIHN1cnZpdmUuIAogNCBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvVGhlIHN0dWRpZXMgYXJlIHZlcnkgc3VyZmFjZSBsZXZlbC4gVGhlcmUgd2FzIGEgQ2FuYWRpYW4gc3R1ZHkgZG9uZSBpbiAyMDEyIHRoYXQgc2FpZCB0aGUgZGlyZWN0IGhlYWx0aGNhcmUgY29zdHMgaW5jdXJyZWQgZnJvbSBzbW9raW5nIGFyZSBqdXN0IG92ZXIgJDZCL3llYXIuVGhhdCBhbHNvIGRvZXNuIGFjY291bnQgZm9yIGluY2lkZW50YWwgY29zdHMsIG9yIGxvc3QgcmV2ZW51ZXMgYmVjYXVzZSBhIGZ1bGwgcXVhcnRlciBvZiBwZW9wbGUgdGhhdCBhcmUgbWVkaWNhbGx5IGFmZmVjdGVkIGZyb20gc21va2luZyBpbiBDYW5hZGEgYXJlIHByaW1lIGVtcGxveWFibGUgYWdlLCBzbyB0aGVyZSBhIHdob2xlIGhvc3Qgb2YgbG9zdCBlYXJuaW5nIHBvdGVudGlhbCB0aGVyZSB0b28udGhlIGVudGlyZSBpZGVhIG9mIGl0IGJlaW5nIGNoZWFwZXIgcmVsaWVzIG9uIHBlb3BsZSBkeWluZyBiZWZvcmUgdGhleSBvdGhlcndpc2UgcmVhc29uYWJseSB3b3VsZCBhbmQgdGhhdCBzdWNoIGFuIHVnbHkgYW5kIGN5bmljYWwgdGhpbmcgdG8gaG9wZSBmb3IuSnVzdCBvdXRzaWRlIG9mIEVkbW9udG9uIHRoZXJlIE5ldyBIb3Jpem9ucyBDaGFydGVyIFNjaG9vbCB3aGljaCBpcyBhIHNjaG9vbCBmb3IgZ2lmdGVkIGxlYXJuZXJzIHNvIHRoZXkgY2FuIGZvc3RlciBpbmRlcGVuZGVudCBsZWFybmluZyBhbmQgYWNhZGVtaWNzIGluIGFuIGVudmlyb25tZW50IGJ1aWx0IHRvIHN1cHBvcnQgdGhhdCwgYmVjYXVzZSBpbiByZWd1bGFyIHB1YmxpYyBwcm9ncmFtcyB0aGUgbGVhcm5lcnMgdGhhdCBleGNlbCB0ZW5kIHRvIGdldCBmb3Jnb3R0ZW4gYmVjYXVzZSB0ZWFjaGVycyBzaW1wbHkgZG8gbm90IGhhdmUgdGhlIHNwYXJlIHRpbWUsIGVzcGVjaWFsbHkgYWZ0ZXIgZGVhbGluZyB3aXRoIGluZGl2aWR1YWxzIHdpdGggaGlnaGVyIGxlYXJuaW5nIG5lZWRzIGluIGxhcmdlIGNsYXNzIHNpemVzLkFsbCBjaGFydGVyIHNjaG9vbHMgaW4gQWxiZXJ0YSBtdXN0IGJlIHB1YmxpYywgaGF2ZSB0byBiZSBpbmRpdmlkdWFsbHkgYXBwcm92ZWQgYnkgdGhlIEVkdWNhdGlvbiBtaW5pc3RlciBhbmQgYXJlIHN0aWxsIGFjY291bnRhYmxlIHRvIHRlYWNoIHRoZSBBbGJlcnRhIEVkdWNhdGlvbiBjdXJyaWN1bHVtLlNvIHllYWgsIHByaXZhdGUgcmVsaWdpb3VzIHNjaG9vbHMgYmFkLCBidXQgQ2hhcnRlciBzY2hvb2xzIGluIEFsYmVydGEgYXJlIHNvbWV0aGluZyBlbnRpcmVseSBkaWZmZXJlbnQgdGhhbiB3aGF0IGluIHRoZSBzdGF0ZXMgYW5kIG1vc3QgQWxiZXJ0YW5zIGRvbiB1bmRlcnN0YW5kIHRoZW0uTWFncGllQnVyZWF1ICAgMiBwb2ludHMgIHN1Ym1pdHRlZCA0IGRheXMgYWdvQ2hhcnRlciBzY2hvb2xpbmcgdG8gZmlsbCBwYXJ0aWN1bGFyIG5lZWRzIGlzIHBlcmZlY3RseSByZWFzb25hYmxlLiAKVGFsa2luZ3RvbiB3YXMgaW5zaWRlIEFwdC4gMTAgYXQgMTIyIEl2YW5ob2Ugd2hlbiB0d28gbWFza2VkIG1lbiBlbnRlcmVkIGFybWVkIHdpdGggZ3VucywgcHJvc2VjdXRvcnMgaGF2ZSBzYWlkLiBBIHBva2VyIHBsYXllciB3aXRoIGEgY29uY2VhbGVkIHBpc3RvbCBsaWNlbnNlIG9wZW5lZCBmaXJlIG9uIHRoZSByb2JiZXJzLCBhbmQgMjUgeWVhciBvbGQgUmFtb24gQy4gCkV2ZW4gaW4gdGhlIG1pZHN0IG9mIGFuICJhY3JpbW9uaW91cyBzY2llbnRpZmljIHJvdyIgd2UgbXVzdCBmb2xsb3cgdGhlIGNvdXJzZSBvZiBldmlkZW5jZSBiYXNlZCBtZWRpY2luZS4gClBva2VyIGNhbiBiZSBoYXJkIHRvIGxlYXJuLiBUaGUgZ2FtZXMgY2FuIGJlIGhhcmQgdG8gZXhwbGFpbiB0byBuZXcgcGxheWVycyBhbHNvLiBXaGVuIHlvdSBoYXZlIGEgbGF5b3V0IGRlc2lnbmVkIGV4YWN0bHkgYXMgeW91IHdpbGwgc2VlIGluIGEgY2FzaW5vIHRoaXMgbWFrZXMgaXQgc28gdGhlcmUgaXMgbm8gc3VycHJpc2Ugd2hlbiB5b3UgYWxsIGRlY2lkZSB0byBoaXQgdGhlIGNhc2lub3MgYW5kIGdvIHBsYXkgZm9yIHJlYWwuIApXaWxsIGZpbmQgd2F5cyB0byBtYWtlIGFsbCBidXNpbmVzc2VzIHBheSBhIGxpdmluZyB3YWdlIGluIGFsbCBjb3VudHJpZXMuIFlvdSB3YW50IHRoZSB0cnV0aCBpbiB3aHkgeW91ciBqb2JzIGFyZSBnb2luZyB0byBvdGhlciBjb3VudHJpZXMuIEhlcmUgaXQgaXMuIAoiSSBoYXZlIHRvIHRyeSB0byBzdGF5IGZvY3VzZWQgYW5kIHRoaW5rIG9mIHRoZSBsb25nIHRlcm0gcGljdHVyZS4gUGVvcGxlIGhhdmUgc2hvcnQgbWVtb3JpZXMuIApUaGUgaXNsYW5kIGhhcyBtb3JlIHRoYW4gMjAgY2FzaW5vcywgd2l0aCBlbnRlcnRhaW5tZW50IGFuZCByZXN0YXVyYW50cyBhbmQgaG90ZWwgcm9vbXMgb24gc2l0ZSwgaW4gYSBtaXggb2YgVmVnYXMgc3R5bGUgY29tcGxleGVzIGFuZCBvbmVzIHdpdGggYSBiaXQgbW9yZSBsb2NhbCBmbGF2b3IgW3NvdXJjZTogU1BSXS4gU2Fsc2EgY2x1YnMsIHJ1bSBkcmlua3MgYW5kIGFuIG92ZXJhbGwgQ2FyaWJiZWFuIHZpYmUgYXJlIGV2ZXJ5d2hlcmUsIGxlc3QgeW91IGZvcmdldCB3aGVyZSB5b3UgYXJlLiBHYW1ibGVycyB3aXRoIGRvd250aW1lIGNhbiBhbHNvIGV4cGVyaWVuY2UgMjcwIG1pbGVzIG9mIGJlYWNoZXMgKG9mIHRoZSB3aGl0ZSBzYW5kLCBnb2xkIHNhbmQsIGJsYWNrIHNhbmQgYW5kIHNlYWdsYXNzIHZhcmlldGllcyksIGtheWFrIHRyaXBzIHRvIGEgYmlvbHVtaW5lc2NlbnQgYmF5IGFuZCBoYW5kbWFkZSBtb2ppdG9zIGJ5IHRoZSBzZWEgYWxsIGhvdXJzIG9mIHRoZSBkYXkgb3IgbmlnaHQgW3NvdXJjZTogU1BSXS4uIApFYXJsaWVyIHRoYXQgZGF5LCB0aGF0ICJmYW1vdXMiIDI5IHllYXIgb2xkIHdhbGtlZCBvdXQgb2YgdGhlIGZpdmUgc3RhciBsdXh1cnkgSG90ZWwgTWlyYSBpbiBLb3dsb29uIGFuZCBzcGFya2VkIGFuIGludGVuc2l2ZSBnbG9iYWwgbWFuaHVudCBub3Qgc2VlbiBzaW5jZSB0aGUgc2VhcmNoIGZvciBhbCBRYWVkYSdzIE9zYW1hIEJpbiBMYWRlbiBhZnRlciB0aGUgU2VwdC4gMTEsIDIwMDEsIGJvbWJpbmdzLiBnb3Zlcm5tZW50IG9uIGl0cyBvd24gY2l0aXplbnMgYW5kIGdvdmVybm1lbnRzIGFyb3VuZCB0aGUgd29ybGQuICAgaGlzIGxhd3llcnMgbWFkZSBoaW0gdmlydHVhbGx5IGRpc2FwcGVhciBmb3IgdHdvIHdlZWtzIGZyb20gSnVuZSAxMCB0byBKdW5lIDIzLCAyMDEzLCBiZWZvcmUgaGUgZW1lcmdlZCBvbiBhbiBBZXJvZmxvdCBhaXJwbGFuZSBib3VuZCBmb3IgTW9zY293LCB3aGVyZSBoZSByZW1haW5zIHN0cmFuZGVkIHRvZGF5IGluIHNlbGYgaW1wb3NlZCBleGlsZS4gZ292ZXJubWVudCBiZWFyaW5nIGRvd24gb24gaGltLiBJIGRpZCB3aGF0IEkgaGFkIHRvIGRvLCBhbmQgY291bGQgZG8sIHRvIGhlbHAgaGltLCIgUm9iZXJ0IFRpYmJvLCB0aGUgd2hpc3RsZWJsb3dlcidzIGxlYWQgbGF3eWVyIGluIEhvbmcgS29uZyB0b2xkIHRoZSBQb3N0IGluIGEgd2lkZSByYW5naW5nIGludGVydmlldywgdGhlIGZpcnN0IGRldGFpbGluZyB0aGUgY2hhb3RpYyBkYXlzIG9mIFNub3dkZW4ncyBlc2NhcGUgdGhyZWUgeWVhcnMgYWdvLiAiVGhleSB3YW50ZWQgdGhlIGRhdGEgYW5kIHRoZXkgd2FudGVkIHRvIHNodXQgaGltIGRvd24uIE91ciBncmVhdGVzdCBmZWFyIHdhcyB0aGF0IEVkIHdvdWxkIGJlIGZvdW5kLiIKNSBwb2ludHMgIHN1Ym1pdHRlZCAxOSBkYXlzIGFnb1RoaXMgaXMgYW4gaW1wb3J0YW50IHBvaW50LCBidXQgbm90IG5lY2Vzc2FyaWx5IGFsb25nIHRoZSBsaW5lcyBvZiBzb21lIG9mIE9QIHBvcHVsaXN0IHRhbGtpbmcgcG9pbnRzLiAKVGhlbiBteSBtb3N0IGludGVyZXN0aW5nIGRyZWFtL2NvbnNjaW91c25lc3MgbW9tZW50LCBJIHNvbWVob3cgd29rZSB1cCBmcm9tIGEgZHJlYW0gd2hpbGUgc3RpbGwgaW4gdGhhdCBwYXJhbHl6ZWQgc3RhdGUsIGJ1dCBhYmxlIHRvIG1vdmUgc2xpZ2h0bHkuIEkgbmV2ZXIgZG9uZSBkcnVncywgYnV0IGl0IHNlZW1lZCBsaWtlIHdoYXQgYSBtb3ZpZSBwb3J0cmF5YWwgb2YgYWNpZCB3b3VsZCBiZSBsaWtlLiBJIHdvdWxkIG9wZW4gbXkgZXllcywgc2VlIG15IHJvb20gbm9ybWFsbHksIGNsb3NlIG15IGV5ZXMsICJvcGVuIiB0aGVtIGFnYWluIGFuZCBzZWUgbXkgcm9vbSBpbiBncmVlbiBzaGFkZXMgd2l0aCB3YXZlcyBldmVyeXdoZXJlIChzb21lIGl0ZW1zIGluIGRpZmZlcmVudCBwbGFjZXMsIGF0IHJhbmRvbSksIHRoZW4gY2xvc2UgYW5kIG9wZW4gYWdhaW4gYmFjayB0byBub3JtYWxjeSAgIHJlcGVhdGluZyBmb3IgYSBjb3VwbGUgbWludXRlcyBpbiBhd2UuLiAKSG9wZWZ1bGx5IEkgbm90IG1pc2ludGVycHJldGluZyBoaW0sIGJ1dCBpdCBzZWVtcyBsaWtlIGhlIG9mIHRoZSBvcGluaW9uIHRoYXQgb25jZSB5b3UgZ2V0IHRvIGNlcnRhaW4gZGlzdGFuY2VzIHlvdXIgcGh5c2ljYWwgY29uZGl0aW9uaW5nIGlzIG5vdCB3aGF0IGltcG9ydGFudCwgYnV0IHlvdXIgbWVudGFsIHN0YXRlLiAKQXJ0IHByb2plY3QuIEkgc3BlbnQgYSBzb2xpZCA5IG1vbnRocyBidWlsZGluZyBpdCBvdXQsIHVzZWQgYWxsIG9mIG15IG93biBtb25leSwgYW5kIGdhdmUgdXAgbXkgc29jaWFsIGxpZmUuIEkgaG9uZXN0bHkgaGFkIG5vIGlkZWEgYXJ0aXN0cyBnb3QgREdTIHRpY2tldHMsIEkgdGhvdWdodCBpdCBvbmx5IHdlbnQgdG8gdGhlbWUgY2FtcHMgYW5kIG11dGFudCB2ZWhpY2xlIHN1cHBvcnQuIApQaGlsZWFzRnVja2luZ0ZvZ2cgIDEzNCBwb2ludHMgIHN1Ym1pdHRlZCA5IG1vbnRocyBhZ28KQW5kIGhlIGhhZCBhY2hpZXZlZCBhIGdyb3NzIHByb2ZpdCBtYXJnaW4gb2YgNjUlLiBNci4gUGV0Y2hlcnNraSBhc2tlZCBmb3IgJDMwMCwwMDAgaW4gZXhjaGFuZ2UgZm9yIGEgMjAlIGVxdWl0eSBzdGFrZS4gCkl0IHdpbGwgYmUgaW50ZXJlc3RpbmcgdG8gc2VlIHdoYXQgZWxzZSB0aGV5IGRvLiBBZnRlciBhbGwsIGlmIHRoZSBnb3Zlcm5tZW50IGlzIHBheWluZyBmb3IgaGVhbHRoIGNhcmUsIHRoZW4gaXRzIG9ubHkgbG9naWNhbCB0aGF0IHRoZSBnb3Zlcm5tZW50IHdvdWxkIHRha2UgYWN0aW9uIHRvIHRyeSB0byByZWR1Y2UgaGVhbHRoIGNhcmUgZXhwZW5zZXMuSXQgZGlmZmljdWx0LCB0aG91Z2ggc29tZXdoYXQgZW50ZXJ0YWluaW5nLCB0byBpbWFnaW5lIGlmIHRoZSBVUyBnb3Zlcm5tZW50IHN0YXJ0ZWQgc2VuZGluZyBsZXR0ZXJzIHRvIHBlb3BsZSBpbmZvcm1pbmcgdGhlbSB0aGF0IHRoZXkgb3IgdGhlaXIga2lkcyB3b3VsZCBuZWVkIHRvIGxvc2Ugd2VpZ2h0IGluIG9yZGVyIHRvIHF1YWxpZnkgZm9yIHNvbWUgaGVhbHRoIGNhcmUgc2VydmljZS5UaGF0IFB1cmR1ZSByZXNlYXJjaCBkaWRudCBpbmNsdWRlIGFueSBraW5kIG9mIE1hbmFnZXJzIHNhbGFyeSwgMS82IG9mIGV4cGVuc2VzIHRoYXQgYWJzb3JiZWQgdGhlIGhpZ2hlciBjb3N0cy4gClBlcnNvbmFsbHksIEkgc2F5IGdldCBzdGFydGVkIGluIENoaW5hIGlmIHlvdSBtZWV0IHRoZSBxdWFsaWZpY2F0aW9ucy4gCkxhc3QgdXBkYXRlZDogMTAgMDEgMjAxNwpUaGUgbmV4dCBraW5kIG9mIHJhbmtpbmcgb3IgY2xhc3NpZmljYXRpb24gb2YgcG9rZXIgaGFuZHMgaXMgY2FsbGVkIGZsdXNoLiAKTWF5YmUgZm9yIHNvbWUgcGVvcGxlLCB0aGV5IGdvIGJlY2F1c2UgdGhleSBjYW4gZ2V0IGxhaWQuIEZvciBvdGhlcnMsIGl0IHRoZSBubyBidWxsc2hpdCwgc3RyYWlnaHQgdG8gdGhlIHBvaW50LCBnZXR0aW5nIHdoYXQgeW91IHdhbnRuZXNzIG9mIGl0LiAKSSBhbSBhbHdheXMgcHJlc2VudCB0aGUgdG9waWNzIHdobyB3aWxsIGhlbHAgdG8gbXkgcmVhZGVycyBsaWtld2lzZSB0b2RheSwgd2hpY2ggYWJvdXQgc3B5IGNoZWF0aW5nIHBsYXlpbmcgY2FyZHMgdGhvc2UgcGVyc29ucyB3aG8gYXJlIGZvbmQgdG8gcGxheSBnYW1ibGluZy4KQWN0cyAgIHdpdGggSXRhbGlhbiBhbmQgRW5nbGlzaCBWZXJzaW9uIChBYnJpZGdlZCBWb2NhbCBTY29yZSkgQjAwMkVFUzVGQyBGQjIuIApMb3ZpbmdseSByZW1lbWJlcmVkIGJ5IDE5IGdyZWF0IGdyYW5kY2hpbGRyZW4uIFByZWRlY2Vhc2VkIGJ5IGhpcyBwYXJlbnRzIEplYW5uaWUgYW5kIEdlb3JnZSwgaGlzIHNpYmxpbmdzIEplYW4gYW5kIEdlb3JnZSwgd2lmZSwgTm9yZWVuIEhhbWx5IFB5emVyIGFuZCBmb3JtZXIgc3BvdXNlIGFuZCBtb3RoZXIgb2YgaGlzIGNoaWxkcmVuLCBSdXRoIEJpcm5pZSBLb3NhbGxlLiBEb3VnIHNlcnZlZCBpbiB0aGUgUm95YWwgQ2FuYWRpYW4gQWlyIEZvcmNlLCBhbmQsIGFzIG1hbnkgeW91bmcgc29sZGllcnMgZGlkIGF0IHRoZSB0aW1lLCBsaWVkIGFib3V0IGhpcyBhZ2Ugc28gaGUgY291bGQgc2VydmUgaGlzIGNvdW50cnkgYXMgaXQgZW50ZXJlZCBpbiB0byBXb3JsZCBXYXIgSUkuIApSb3F1ZSBkZSBsb3MgTXVjaGFjaG9zIDIKVGhlcmUgYXJlIG90aGVyIHR5cGVzIG9mIG9ubGluZSBtYXRjaGVzIGFuZCB0aGV5IGluY2x1ZGUgY2hlY2twb2ludCByYWNpbmcgYW5kIG9ubGluZSBkZWNyeXB0aW9uLCB3aGljaCBwaXRzIHR3byB0ZWFtcyBhZ2FpbnN0IGVhY2ggb3RoZXIuIE9uZSBzaWRlIGhhcyB0byBnYWluIGFjY2VzcyB0byBkYXRhIHNpdGUgYW5kIHRoZSBvdGhlciBoYXMgdG8gZGVmZW5kIGl0Li4gCk1haXMgZGFucyB0b3V0IGxlIHByb2Nlc3N1cyBxdWUgaiB2IGF2ZWMgbGEgU1EsIGlsIG4gYSBldSBhdWN1biBhY2NvbXBhZ25lbWVudCwgYXVjdW5lIHNlbnNpYmlsaXQgT24gdGUgcHJlbmQgY29tbWUgc2kgdHUgdmVuYWlzIHBvcnRlciBwbGFpbnRlIHBvdXIgdW4gdm9sIGQgYXV0cmUgYyBlbGxlIHJlZnVzZSBkZSBzIHRlbmlyIGF1eCByZWdyZXRzLiBFbGxlIHMgbCBxdWUgc2EgcHJpc2UgZGUgcGFyb2xlIHB1aXNzZSBzdXNjaXRlciB1bmUgciBjb2xsZWN0aXZlIGV0IGNvbnRyaWJ1ZXIgYW0gbGVzIGNob3Nlcy4uIApGcmllbmRzIGZvcmV2ZXIhIEplbm5pZmVyIEFuaXN0b24sIExpc2EgS3Vkcm93LCBDb3VydGVuZXkgQ294LCBNYXR0IExlQmxhbmMgYW5kIERhdmlkIFNjaHdpbW1lciBjYW1lIHRvZ2V0aGVyIHRvIGhvbm9yIHRoZWlyIEZyaWVuZHMgZGlyZWN0b3IgSmFtZXMgQnVycm93cyBtYWtpbmcgTXVzdCBTZWUgVFY6IEFuIEFsbCBTdGFyIFRyaWJ1dGUgdG8gSmFtZXMgQnVycm93cyBwcm9iYWJseSB0aGUgb25seSB0ZWxldmlzZWQgRnJpZW5kcyByZXVuaW9uIHdlJ2xsIGV2ZXIgZ2V0IHRob3VnaCBpdCBkaWRuJ3QgZmVhdHVyZSB0aGUgY29tcGxldGUgc2V0LiBNYXR0aGV3IFBlcnJ5IHdhcyBpbiBwbGF5IHJlaGVhcnNhbHMgaW4gTG9uZG9uLCBidXQgaGlzIHByZXNlbmNlIHdhcyBjZXJ0YWlubHkgZmVsdC4gCkZUTiBQb2tlciBpcyB0aGUgbGF0ZXN0IGFuZCBiZWxpZXZlZCB0byBiZSB0aGUgbGFzdCBjYXJkIGNsdWIgaW4gTm9ydGggVGV4YXMgdG8gc2h1dCBpdHMgZG9vcnMuIFR3byBvdGhlciBwb2tlciBjbHVicyBpbiBQbGFubyBhbmQgb25lIGluIERhbGxhcyBoYXZlIGNsb3NlZCBpbiByZWNlbnQgd2Vla3MgYWZ0ZXIgY29udGFjdCB3aXRoIHBvbGljZS4gQXQgbGVhc3QgdHdvIG90aGVyIGNsdWJzIHRoYXQgaGFkIHBsYW5uZWQgdG8gb3BlbiBpbiB0aG9zZSBjaXRpZXMgaGF2ZSBzaW5jZSBjYW5jZWxlZCB0aGVpciBwbGFucy4KVGhlc2UgcGVvcGxlIGFsbCBrbm93IGVhY2ggb3RoZXIgYW5kIGFyZSBpbiB0aGUgc2FtZSBzY2VuZSBkb3duIHRoZXJlIGluIEZMLiAKSXQgd29uJ3QgYmUgemVybyBwb2ludHMsIGJ1dCBpZiB5b3UncmUgbWluZGZ1bCBvZiB0aGUgY29va2luZyBsaXF1aWRzIGl0IHdvbid0IGJlIGEgaHVnZSBzcGx1cmdlLiBZb3UgY2FuIG1ha2UgdGhlIHNocmVkZGVkIGNoaWNrZW4gaW50byBtYW55IGRpc2hlcyB3aXRoIGEgdmFyaWV0eSBvZiBzYXVjZXMgICBidWZmYWxvIG9yIGJicSBjaGlja2VuIGZvciBzbGlkZXJzIG9yIGdyZWVuIHNhbHNhIGNoaWNrZW4gZm9yIHRhY29zIGNvbWUgdG8gbWluZC4gCkEgdG90YWwgb2YgZm91ciBib21icyBoYXZlIGJlZW4gZm91bmQgaW4gQ2hpY2Fnby4gRWR3YXJkIE5pY2tlbHMsIGNvbSAgbWFuZGVyIG9mIHRoZSBQb2xpY2UgRGVwYXJ0bWVudCdzIEJvbWIgYW5kIEFyc29uIHVuaXQsIGFkZGVkIHRoYXQgaGUgYmVsaWV2ZXMgdGhlIGZvdXIgQ2hpY2FnbyBleHBsb3NpdmVzICJ3ZXJlIGFsbCBwbGFudGVkIGF0IG9uZSB0aW1lLiIgVHJvb3BzIGtpbGwgMjUwIFNpa2ggbWlsaXRhbnRzIE5FVyBERUxISSwgSW5kaWEgKEFQKSBUcm9vcHMgYmFja2VkIGJ5IHJvY2tldCBhbmQgdGFuayBmaXJlIGludmFkZWQgdGhlIHNhY3JlZCBHb2xkZW4gVGVtcGxlIGNvbXBsZXggaW4gQW1yaXRzYXIgb24gV2VkbmVzZGF5LCBraWxsaW5nIDI1MCBTaWtoIG1pbGl0YW50cywgY2FwdHVyaW5nIDQ1MCBhbmQgc2VpemluZyBoZWF2eSB3ZWFwb25zLCBvZmZpY2lhbHMgc2FpZC4gCkV2ZXJ5IHBva2VyIHBsYXllciB3YW50ZWQgdG8gYmUgaGlzIGZyaWVuZCwgYWxsIHRvbyBvZnRlbiB0byBib3Jyb3cgbW9uZXkgb3IgYXNrIGZvciBhIHN0YWtlIGluIHRoZSBuZXh0IGV2ZW50LiBIZSB3b3VsZCBoYXZlIHRvIGxlYXJuIHRvIHNheSBuby4KVGhlIHJlYWwgZGl2aWRpbmcgbGluZSBpcyBjbGFzcyBvciBtb3JlIHNpbXBseSByaWNoIHZzLiBQb29yLiAKQWxzbywgSSBhZ3JlZSB3aXRoIGEgcHJldmlvdXMgcmVwbHkgYWJvdXQgc2NoZWR1bGluZyBhbiBhZnRlciBzY2hvb2wgbWVldGluZyB0byBtYWtlIHN1cmUgaXQgaXMgbm90IHJ1c2hlZCBhbmQgYWxsIHRoYXQgYXR0ZW5kIGNhbiBzdGF5IGZvciB0aGUgZnVsbCBtZWV0aW5nLgpUaGlzIGNhbiBjYXVzZSBoZWFsdGggcHJvYmxlbXMgc3VjaCBhcyBoZWFydCBhdHRhY2ssIHN0cm9rZSwgZXllIGRpc2Vhc2UsIGtpZG5leSBkaXNlYXNlLCBtdXNjbGUgcGFpbiwgZGVtZW50aWEsIGRpYWJldGVzLCBpbmZsdWVuemEgYW5kIGNpcnJob3NpcywganVzdCB0byBuYW1lIGEgZmV3Li4gCk5laWdoYm9ycy4gRXRjLiAKVGhlcmUncyBkb2dzLCB0aGVyZSdzIGhvcnNlcywgcnVnYnkgbGVhZ3VlICAgeW91IGNhbiBiZXQgb24gYW55dGhpbmcsIiBoZSBzYWlkLiAiVGhlIGNhcGFjaXR5IGZvciBnYW1ibGluZyBoYXMgYmVjb21lIG1vcmUgc2lnbmlmaWNhbnQuIiBXaGlsZSBnYW1ibGluZyBhZGRpY3Rpb24gd2FzIGEgInRlcnJpYmxlIHRoaW5nIiwgTXIgRmVyZ3Vzb24gc2FpZCB0aGUgc3RhdGlzdGljcyBzaG93ZWQgb25seSAidHdvIHRvIHRocmVlIHBlciBjZW50IiBvZiBnYW1ibGVycyBzdWZmZXJlZCBmcm9tIHRoZWlyIGhhYml0cy4gUGFudGhlcnMgQmF0aHVyc3QgZ2VuZXJhbCBtYW5hZ2VyIEpvaG4gRmVhcm5sZXkgc2FpZCB0aGUgY2x1YiBkaWQgbm90IG9mZmVyIGFjY291bnRzIG9yIHNtYXJ0Y2FyZHMsIGJ1dCBjb21wbGltZW50ZWQgdGhlIE5TVyBHb3Zlcm5tZW50IG9uIHRoZSBpbnRyb2R1Y3Rpb24gb2YgYSBtaW5pbXVtIHNpeCBtb250aCBzZWxmIGV4Y2x1c2lvbiBwZXJpb2QuIApJZiB5b3UgdGhlIHBlcnNvbiB3aXRoIEtKbyB5b3UgaW4gYSB0ZXJyaWJsZSBzcG90LiAKUGVyaGFwcyBoZXIgb25seSBtaXN0YWtlIHdhcyB0YWtpbmcgdGhlIE15RXRoZXJXYWxsZXQgVHdpdHRlciBoYW5kbGUgd2l0aCBoZXIsIHdoaWNoIGluZnVyaWF0ZWQgc29tZSBjb21tdW5pdHkgbWVtYmVycy4KUHJvamVjdCB0aHJlZSB0aW1lcyB0aGF0IHRoaXMgeWVhciwgTXIuIApUb21hdG8gcGFzdGUuIApDb2FzdCBHdWFyZCBpbiBNaWFtaSBhZnRlciB0aGVpciBmaXNoaW5nIGJvYXQgY2Fwc2l6ZWQgYW5kIHNhbmsgaHVuZHJlZHMgb2YgbWlsZXMgZnJvbSBLZXkgV2VzdC4uIApUaGUgc3RyaWtlIGJlZ2FuIHNsb3dseSBpbiBKYW51YXJ5IDE5MjYsIHdpdGggdGhlIG1pbGxzIHJlc3BvbmRpbmcgd2l0aCB2aWNpb3VzIGF0dGFja3MgYnkgcGFpZCB0aHVncyBhbmQgYnkgcG9saWNlLiAKQSBzdXJ2aXZvciwgZGVjbGFyZXMgQW5uYSBNYXkgQm9yZGVuLCA3OC4gV2FzbiBhYm91dCB0byBnZXQgY3J1c2hlZC4gVGhlIGJpcmFjaWFsIE1vbnRyZWFsIG5hdGl2ZSB3YXNuIGFsdGhvdWdoIGl0IGhhcmQgdG8gaW1hZ2luZSBob3cgYW55b25lIHdobyB1bmRlcndlbnQgd2hhdCBCb3JkZW4gaGFkIHdvdWxkIGV2ZXIgZW1lcmdlIGludGFjdCwgbXVjaCBsZXNzIHNvIGZ1bmN0aW9uYWwuIApNciBGbG9yZW5jZSBzYWlkIGhlIHdhcyB1bmF3YXJlIG9mIHdoZXRoZXIgb3RoZXIgTm9ydGggRWFzdCBjb3VuY2lscyB3b3VsZCBqb2luIHRoZSBhbGxpYW5jZS4gIkl0IHNvbWV0aGluZyB0aGF0IGNvdWxkIGJlIGJyb3VnaHQgdXAsIGJ1dCB0aGV5IHdvdWxkIG5lZWQgdG8gY29uc2lkZXIgaXQgdGhlbXNlbHZlcywiIGhlIHNhaWQuICJUaGVyZSBiZWVuIHJlY2VudCBwcmVzcyBhYm91dCB0aGUgbG9zc2VzIHRoYXQgaGF2ZSBiZWVuIG9jY3VycmluZywgc28gaXQgaXMgc29tZXRoaW5nIHRoZXkgY291bGQgY29uc2lkZXIuIiBJbmRpZ28gQ291bmNpbCBpcyBub3QgcmVxdWlyZWQgdG8gcGF5IGEgZmVlIHRvIGJlIHBhcnQgb2YgdGhlIGFsbGlhbmNlLiAKSXQgbm90IGxpa2UgZmlndXJlIHNrYXRpbmcsIHdoZXJlIGV2ZXJ5IHRyaWNrIGhhcyBhIHNldCBwb2ludCB2YWx1ZSB3aXRoIHN0eWxlIGFkanVzdG1lbnQsIG1ha2luZyBhIGxvbmcgcHJvZ3JhbSAyMDAgaW4gVVMgcXVhbGlmaWVycyBjb21wYXJhYmxlIHRvIFdvcmxkIENoYW1wcyBvciBPbHltcGljIEZpbmFscy4uIApUb3JvbnRvIHJlYWNoZXMgYWdyZWVtZW50IGluIHByaW5jaXBsZSB0byBnZXQgQWxlamFuZHJvIFBvenVlbG8gZnJvbSBHZW5rCkkgYWxtb3N0IGdvdCBjbGlwcGVkIGJ5IGEgZ29kZGFtbiBjb3AgY2FyIG9uY2UuLiAKVGhlIGFydCBvZiBjaGFuZ2UgaXMgc29tZXRoaW5nIHRvIGJlIHZlcnkgY2F1dGlvdXMgYWJvdXQsIGJlY2F1c2Ugd2UgbmVlZCB0byBwcmVzZXJ2ZSB3aGF0IGhhcyBiZWVuIGRvbmUgYnV0IHdlIGFsc28gbmVlZCB0byBtb3ZlIGZvcndhcmQuIExpa2Ugbm93IHdlIHBsYXkgaG9ja2V5IGluIHRoZSBwYXJraW5nIGxvdCBkdXJpbmcgU2hhYmJhdCwgc28gd2UgaGF2ZSBvdXIgdHJhZGl0aW9uIGJ1dCB3ZSBhcmUgYWxzbyBkb2luZyBzb21ldGhpbmcgZGlmZmVyZW50LiBXZSBqdXN0IGhhZCBvdXIgZmlyc3QgUGFyc2hhIGFuZCBQb2tlciwgd2hlcmUgd2UgbGVhcm4gdGhlIFRvcmFoIHRvZ2V0aGVyIGFuZCB0aGVuIHdlIHBsYXkgY2FyZHMuClNlbnRlbmNpbmcgaW5zcGlyZWQgYSBmbG9vZCBvZiBsYXd5ZXJzIHRvIGRpZyB0aHJvdWdoIG5ld3MgY2xpcHMgYW5kIHRoZWlyIG93biByZWNlbnQgY2FzZXMuIFdoYXQgdGhleSBmb3VuZCB3YXMgZG96ZW5zIG9mIGV4YW1wbGVzIG9mIGRlZmVuZGFudHMgd2hvLCBpbiB0aGVpciB2aWV3LCB3ZXJlIG5vIHdoZXJlIG5lYXJseSBhcyBmb3J0dW5hdGUgYXMgTWFuYWZvcnQuLiAKTWlubmVhcG9saXMgcG9saWNlIFNlcmdlYW50IEdyYW50IFNueWRlciwgd2hvIHNwZWNpYWxpemVzIGluIGh1bWFuIGFuZCBzZXggdHJhZmZpY2tpbmcsIHdvcmtlZCB3aXRoIEFtYmVyIGxhc3Qgc3VtbWVyLCBoZWxwaW5nIGhlciBnZXQgc3RhYmlsaXplZC4gQnV0IGhlIGxvc3QgdG91Y2ggc2V2ZXJhbCBtb250aHMgYWdvLiAKQnV0IHRob3NlIHdobyBhcmVuIHRlY2huaWNhbCBzZWUgdGhhdCBBTUQgaGF2ZSBiZWVuIHB1dHRpbmcgb3V0IEdDTiBmb3IgY2xvc2UgdG8gYSBkZWNhZGUgYW5kIHRoZXkgY29tZSB0byBlcXVhdGUgYWxsIHRoZSBmYWlsdXJlcyBvZiBlbmdpbmVlcmluZywgb2YgcHJvZHVjdCwgYW5kIGNvbXBhbnkgb24gaXQuIApMYSBzdWl0ZSBkJ3VuZSByZXF1dGUgZHUgbG9naWNpZWwgc3VyIGwnaW50ZXJuZXQsIGxlcyBub3V2ZWxsZXMgc2UgcmV0cm91dmVyb250IGxvY2FsZW1lbnQgc3VyIHZvdHJlIG9yZGluYXRldXIuIElsIGV4aXN0ZSBnYWxlbWVudCBib24gbm9tYnJlIGQnYWdyZ2F0ZXVycyB3ZWIgcXVpIHZvdXMgb2ZmcmVudCB1bmUgZ2VzdGlvbiB2aXJ0dWVsbGUgIGwnaW50cmlldXIgZCd1biBjb21wdGUgdXRpbGlzYXRldXIuIFBsdXNpZXVycyBhZ3JnYXRldXJzIHNvbnQgb2ZmZXJ0cyBncmF0dWl0ZW1lbnQgc3VyIGwnaW50ZXJuZXQsIHZvdXMgbidhdmV6IHF1JyBpbnNjcmlyZSAgcnNzIGFnZ3JlZ2F0b3IgLCAgbmV3cyByZWFkZXIgIG91ICBuZXdzIGZlZWRlciAgZGFucyB2b3RyZSBtb3RldXIgZGUgcmVjaGVyY2hlIGZhdm9yaSBwb3VyIHRyb3V2ZXIgbCdhZ3JnYXRldXIgcXVpIHZvdXMgY29udmllbnQuLiAKV2hpbGUgaXQgZGVmaW5pdGVseSBzZWVtcyBoaWdoLCBJJ20gbm90IHN1cmUgd2hhdCB5b3UgZXhwZWN0ZWQgd2l0aG91dCBvdXRsaW5pbmcgYSBjb250cmFjdCBvciBtdXR1YWxseSBhZ3JlZWQgdGVybXM/IEkgdGhpbmsgdGhlIGFkdmljZSB0aGF0IHlvdSdyZSBnZXR0aW5nIHRvIGp1c3Qgc2hydWcgb2ZmIGEgZnJpZW5kc2hpcCBiZWNhdXNlIHlvdSBkaWRuJ3QgaGF2ZSBhIGNvbnRyYWN0IGFuZCBhcmUgbm93IHZhZ3VlbHkgdW5oYXBweSB3aXRoIHRoZSB3b3JrIGlzIHJlYWxseSBzdHJhbmdlLiAKMjIgQmFpa29udXIgaXMgbGVhc2VkIGZyb20gS2F6YWtoc3RhbiBieSBSdXNzaWEuIEEgbG9uZyBydW53YXkgdGhlcmUgY2FsbGVkIFl1YmlsZXluaXkgd2FzIGJ1aWx0IGZvciBhIFJ1c3NpYW4gdmVyc2lvbiBvZiB0aGUgU3BhY2UgU2h1dHRsZS4gSWYgdGhlIGZpbmFsIElubWFyc2F0IHBpbmcgcmFuZyBhdCB0aGUgc3RhcnQgb2YgTUgzNzAncyBkZXNjZW50LCBpdCB3b3VsZCBoYXZlIHNldCB1cCBuaWNlbHkgZm9yIGFuIGFwcHJvYWNoIHRvIFl1YmlsZXluaXkncyBydW53YXkgMjQuLiAKVGhlcmUgYXJlIG1hbnkgZmFjdG9ycyB3aHkgc29tZSBwZW9wbGUgaGF2ZSBhIHJlY2VkaW5nIGhhaXJsaW5lLiBJdCBjYW4gYmUgY2F1c2VkIGJ5IGdlbmV0aWNzLCB3aGljaCBnZW5lcmFsbHkgYWZmZWN0IHRoZSBtZW4gYnV0IGNhbiBhbHNvIGFmZmVjdCBzb21lIHdvbWVuLiBJdCBjYW4gYmUgY2F1c2UgYnkgYW4gaWxsbmVzcywgaW1wcm9wZXIgaGFpciBjYXJlIGFuZCBzb21lIGhhaXJzdHlsZXMgdGhhdCBwdXQgdG9vIG11Y2ggc3RyYWluIG9uIHRoZSBoYWlyIGZvbGxpY2xlcyBsZWFkaW5nIHRvIGxvc3Mgb2YgbW9yZSBoYWlyIHRoYW4gdXN1YWwuIApIb3cgV29ybGQgU2VyaWVzIG9mIFBva2VyIGJlZ3VuCkhlYXQ6IEEgdmlkZW8gdHJpYnV0ZSB0byBmb3JtZXIgSGVhdCBmb3J3YXJkIENocmlzIEFuZGVyc2VuIHBsYXllZCBpbiB0aGUgdGhpcmQgcXVhcnRlci4gQW5kZXJzZW4gd2FzIGF0IHRoZSBnYW1lLiBPbHlueWsgaGFzIG1hZGUgYXQgbGVhc3Qgb25lIDMgcG9pbnRlciBpbiAxMSBjb25zZWN1dGl2ZSBnYW1lcywgYSBuZXcgY2FyZWVyIGhpZ2guIApSb25hbGQgIlJvbiIgQ2hhbWJlcnMgb2YgTGV0aGJyaWRnZSwgYmVsb3ZlZCBodXNiYW5kIG9mIE1ycy4gClByZXNpZGVudCBUcnVtcCBmaXJlZCBmb3JtZXIgQXR0b3JuZXkgR2VuZXJhbCBKZWZmIFNlc3Npb25zIE5vdmVtYmVyIDcsIDIwMTguIE9uIG9yIGJlZm9yZSB0aGF0IGRhdGUsIGRpZCB5b3UgaGF2ZSBhbnkgY29tbXVuaWNhdGlvbiB3aXRoIGFueSBXaGl0ZSBIb3VzZSBvZmZpY2lhbCwgaW5jbHVkaW5nIGJ1dCBub3QgbGltaXRlZCB0byBQcmVzaWRlbnQgVHJ1bXAsIGFib3V0IHRoZSBwb3NzaWJpbGl0eSBvZiB5b3VyIGFwcG9pbnRtZW50IGFzIEFjdGluZyBBdHRvcm5leSBHZW5lcmFsPyBJZiBzbywgd2hlbiBhbmQgd2l0aCB3aG9tPyBEaWQgYW55IG9mIHRob3NlIGNvbW11bmljYXRpb25zIGRpc2N1c3MgdGhlIHBvc3NpYmlsaXR5IG9mIHlvdXIgcmVjdXNhbCBmcm9tIG92ZXJzaWdodCBvZiB0aGUgU3BlY2lhbCBDb3Vuc2VsIGludmVzdGlnYXRpb24/LiAKSSBkaWQgbG9zZSBtdWNoIG1vcmUgdGhhbiBJIHdvbiBmb3IgYSBjb3VwbGUgb2YgbW9udGhzLCBidXQgSSBsZWFybmVkIGZyb20gaXQuIApMYXVyYS4gZnJvemUuIHNvbGlkLiBTaGUgd2FzIHNpdHRpbmcgb24gdGhlIGNvdWNoIG5leHQgdG8gbWUgYW5kIEkgZmVsdCB0aGUgYWlyIHR1cm4gdG8gaWNlLiBTaGUganVzdCB3ZW50IGNvbXBsZXRlbHkgc3RpZmYgbGlrZSBzaGUgdHVybmVkIHRvIHN0b25lLgpJbnF1aXJlIGF0IHlvdXIgbG9jYWwgdHJhdmVsIGFnZW5jeS4gClRvIGJlZ2luIHdpdGgsIGluIHRyYWRpdGlvbmFsIHBva2VyLCB5b3UgYWx3YXlzIHBsYXkgd2l0aCB5b3VyIG93biBtb25leS4gWW91IHRlbmQgdG8gcGxheSBwb2tlciBhcyBpdCBpcyBpbnRlbmRlZCB0byBiZSBwbGF5ZWQgd2l0aCBza2lsbHMgcmF0aGVyIHRoYW4gbGVhdmluZyBpdCBhbGwgdG8gY2hhbmNlLiBUaGUgd2F5IHRoYXQgeW91IHBsYXkgdGhlIGNhcmRzIHlvdSBhcmUgZGVhbHQgZGlmZmVycyBncmVhdGx5IGRlcGVuZGluZyBvbiB0aGUgc2l0dWF0aW9uIHlvdSBhcmUgaW4uLiAKSSBoYW5kZWQgb3ZlciB0aGUgZmlyc3Qgb2ZmaWNpYWwgY29weSB0byBLbmdpIFR1aGVpdGlhIGFuZCB3YW5kZXJlZCBhcm91bmQgdGhlIGJhY2sgb2YgdGhlIHdoYXJlIHdoZXJlIGEgYmlnIGNyb3dkIHdhcyBnYXRoZXJpbmcuIEkgd29uZGVyZWQgd2hhdCB3YXMgaGFwcGVuaW5nLiBJdCB0dXJuZWQgb3V0IHRoZXkgd2VyZSBhbHJlYWR5IHF1ZXVpbmcgdG8gZ2V0IHRoZWlyIG93biBjb3BpZXMgb2YgdGhlIGJvb2sgYW5kIHNvIEkgc3BlbnQgdGhlIG5leHQgdGhyZWUgb3IgZm91ciBob3VycyBzaWduaW5nIGh1bmRyZWRzIG9mIGJvb2tzLiAKQ2FjaGUgbWVtb3J5ICh3aGljaCBjYW4gY29tZSBpbiB2YXJpb3VzICJsZXZlbHMiLCBkZXNjcmliaW5nIGhvdyBmYXIgYXdheSBmcm9tIHRoZSBtYWluIENQVSBlYWNoIG1lbW9yeSBiYW5rIGlzKSBpcyB1c2VkIHRvIGtlZXAgY29waWVzIG9mIGRhdGEgZnJvbSB0aGUgbWFpbiBtZW1vcnkgaW4gYSBsb2NhdGlvbiB0aGF0IGlzICJjbG9zZXIiIHRvIHRoZSBDUFUsIGFuZCB0aHVzIGZhc3RlciB0byBhY2Nlc3MgYW5kIHVzZS4gUmVnaXN0ZXJzIGFyZSBtZW1vcnkgbG9jYXRlZCBkaXJlY3RseSBpbnNpZGUgdGhlIENQVSdzIGV4ZWN1dGlvbiB1bml0cyAgIHRoaW5rIG9mIHRoZW0gYXMgc2NyYXRjaCBzcGFjZSB3aGVyZSB0aGUgQ1BVIGNhbiB0ZW1wb3JhcmlseSBzdG9yZSBzbWFsbCBhbW91bnRzIG9mIGRhdGEgd2hpbGUgaXQgZG9lcyBhIGNhbGN1bGF0aW9uLiAKSSB0aHJldyBoaW0gb3V0IG9mIG15IGhvdXNlIGFuZCBiZWF0IGhpbSBpbiBteSBkcml2ZXdheS4gCkxlIGJsb2Mgc2FuaXRhaXJlIGVzdCBzcGFjaWV1eCwgbW9kZXJuZSBldCBjaGF1ZmYgYXUgY291cnMgZGUgbCdhdmFudCBldCBhcnJpIHJlIHNhaXNvbi4gSWwgb2ZmcmUgdG91dGVzIGxlcyBmYWNpbGl0IHMgZXQgbGUgbmV0dG95YWdlIHNlIGZhaXQgYXUgbW9pbnMgdW5lIGZvaXMgcGFyIGpvdXIuIExlcyBkb3VjaGVzIGV0IGxlcyBsYXZhYm9zIG9udCBkZSBsJ2VhdSBmcm9pZGUgZXQgY2hhdWRlIHF1aSBzb250IGNvbXByaXMgZGFucyBsZSB0YXJpZi4gVW5lIHBhcnRpZSBzcCBjaWFsZW1lbnQgciBzZXJ2IGUgYXV4IHBlcnNvbm5lcyBtb2JpbGl0IHIgZHVpdGUsIGNvbXByZW5uYW50IGRvdWNoZSwgdG9pbGV0dGUgZXQgbGF2YWJvIGVzdCBnYWxlbWVudCBkaXNwb25pYmxlLiBEJyBhdXRyZSBwYXJ0IHZvdXMgcG91dmV6IGRpc3Bvc2VyIGQndW5lIHNhbGxlIGRlIGJhaW4gcyBwYXIgZSBwb3VyIGxlcyBzb2luIGRlcyBiIGIgcy4KRXhjZXB0IHRob3NlIHBhdGllbnRzIGFsc28gc3VmZmVyZWQgdGhyb3VnaCBicnV0YWwgdHJlYXRtZW50LCB3aGljaCBpbiBtYW55IGNhc2VzLCBpcyB3b3JzZSB0aGFuIHRoZSBjYW5jZXIgaXRzZWxmLi4gCldpdGggY2VsbCBwaG9uZXMsIHRoZSB0ZWNobm9sb2d5IHdhcyBhbiBvYnZpb3VzIGltcHJvdmVtZW50LCBhbmQgaXQgcHJvdmlkZXMgY3JlYXRvcnMgYSBmb3VuZGF0aW9uIHRvIGJ1aWxkIHVwb24sIGl0IG92ZXJhbGwgYSBtdXR1YWxseSBiZW5lZmljaWFsIGNoYW5nZSwgdGhhdCB3aGF0IHByb2dyZXNzIHNob3VsZCBiZS4gClNlY29uZCBxdWVzdGlvbiBvZiB0aGUgZGF5ICh2aXNpbyBvbmUganVzdCBiZWxvdyB3YXMgZmlyc3QpIGhvcGUgSSBhbSBub3QgcHVzaGluZyBteSBsdWNrLiBIYXZlIGJlZW4gcm9wZWQgaW50byBhIHBva2VyIGdhbWUgdG9uaWdodC4gNiBwbGF5ZXJzLCA0IHN0cmFuZ2VycywgdGV4YXMgaG9sZGVtLCBuZXZlciBwbGF5ZWQgZm9yIG1vbmV5IHdpdGggbW9yZSB0aGFuIG9uZSBwZXJzb24sIGhhdmUgbm8gcG9rZXIgZmFjZSBhbmQgbm8gYmFzaWMgc3RyYXRlZ3kuIENvdWxkIGFueW9uZSBwb2ludCBtZSB0byBhIHBhZ2Ugb3IgZ2l2ZSBtZSBhIGdvbGRlbiBydWxlIG9yIGFkdmljZSBvciBzb21ldGhpbmcgdGhhdCBJIGNhbiB1c2UgdG8gZ2V0IG1lIHRocm91Z2guIEkgd2lsbCBsZWFybiB0aGUgcnVsZXMgbXlzZWxmLiBTb21ldGhpbmcgSSBjYW4gZ2V0IGludG8gbXkgaGVhZCBpbiBhYm91dCBhbiBob3VyLgpIb3dldmVyLCBkb24gdCBleHBlY3QgdG8ganVzdCBmaW5kIHRoZSBnb29kIHN0dWZmLiAKV2hlbmV2ZXIgL3UvR2FsbG93Qm9vYiBwb3N0cyBzb21ldGhpbmcgICByZWdhcmRsZXNzIG9mIHdoZXJlIGhlIGRvZXMgaXQgICBxdWl0ZSBhIGZldyBwZW9wbGUgZGVzY2VuZCB0byBtYWtlIHVuZm91bmRlZCBhY2N1c2F0aW9ucyBhYm91dCBoaW0uIApXaGVuIGl0IGNvbWVzIHRvIHRoZSBsYWJlbGluZyBvZiBhIGRvZydzIGJyZWVkIG9yIGJyZWVkcywgZ2Vub21lIHNjaWVuY2Ugd2lsbCBhY3R1YWxseSBvbmx5IHNob3cgdGhhdCBhIGZyYWN0aW9uIG9mIHRoZSBjaGFyYWN0ZXJpc3RpY3Mgb2YgYSBkb2cncyBicmVlZChzKSB3aWxsIGJlIGFwcGFyZW50IHNpbXBseSBieSBzaWdodC4gVGhpcyBtZWFucyB0aGF0IGEgZG9nIGNvdWxkIGxvb2sgbGlrZSBhIExhYiBhbmQgYSBCb3hlciB0byB5b3UsIGJ1dCBhY3R1YWxseSBiZSBub25lIG9mIHRoZSBhYm92ZSwgb3IgdGhlIGRvZyBjb3VsZCBiZSBhIExhYiwgQm94ZXIsIFBvb2RsZSwgR3JlYXQgRGFuZSwgU2hpaCBUenUsIEJvcmRlciBDb2xsaWUsIGV0Yy4gKHNlZSBzb3VyY2UgbGluayBiZWxvdykuIApUaGUgbnVyc2UgYW5kIEkgZmVlbCB0aGF0IHRoZSByZXNpZGVudCBtYXkgaGF2ZSBhY2NpZGVudGFsbHkgdGFwcGVkIHRoZSBUViBCdXR0b24gb24gaGVyIGJlZHNpZGUgY2FsbCBsaWdodC9zd2l0Y2ggYm94LCBidXQgY2VydGFpbmx5IGFkZGVkIHRvIHRoZSB1bm5lcnZpbmcgZXhwZXJpZW5jZS4gClpvZSBLYXphbiwgd2hvIHNob3VsZCBoYXZlIGdvdHRlbiBhbiBPc2NhciBub2QgZm9yIGhlciB3b3JrIGluIDIwMTcgQmlnIFNpY2ssIGJyaW5ncyBncmVhdCBodW1hbml0eSB0byBoZXIgcm9sZSBhcyBhIGx1Y2tsZXNzIHBpb25lZXIgd29tYW4gZW4gcm91dGUgdG8gYW4gYXJyYW5nZWQgbWFycmlhZ2UuIEkgY291bGQgaGF2ZSBoYXBwaWx5IHNwZW50IHRoZSBmaWxtIGVudGlyZSBydW5uaW5nIHRpbWUgcmlkaW5nIHNob3RndW4gd2l0aCBLYXphbiwgYnV0IHRoZSBDb2VucyBhcmVuIGludGVyZXN0ZWQgaW4gdXMgZ2V0dGluZyBjb3p5IHdpdGggdGhlaXIgY2hhcmFjdGVycy4gVGhpcyBpcyB0aGUgY2xvc2VzdCB0aGUgYnJvdGhlcnMgaGF2ZSBldmVyIGNvbWUgdG8gc3BlZWQgZGF0aW5nLgpIaWVyIGFsc28gZGllIGFic29sdXRlbiBObyBHb2VzIGZyIGRlbiBWYWxlbnRpbnN0YWc6U2VociBnZWZocmxpY2guIFdlbm4gaWhyIG5pY2h0IGdhbnogZ2VuYXUgZGllIEdyZSB1bmQgZGVuIFN0aWwgZXVyZXMgU2NoYXR6ZXMga2VubnQ6IFBmb3RlbiB3ZWchIFNvbnN0IGlzdCBkZXIgU3RyZWl0IHZvcnByb2dyYW1taWVydC4gSW5zYmVzb25kZXJlIGVzc2JhcmUgVW50ZXJ3c2NoZSwgcm90ZSBTcGl0emVuZGVzc291cyBvZGVyIGRpZSBCb3hlcnNob3J0cyBmciBkZW4gbW9uZG5lbiBNYW5uIHNpbmQgbWVpc3QgYWJzb2x1dGUgTGllYmVza2lsbGVyITIuIApXb21hbnMgY29hdCBwb2NrZXQiIGluIGNyb3dkLiBUaGVyZWZvcmUsIEkgd291bGQgYWR2aXNlIGFpbCB0aG9zZSBTZWVwIGEgY2xvc2Ugd2F0Y2ggb24gcGVyc29uYS4iIGJlbG9uZ2luZ3MuIiBfLiBBIHN0b3JlIHByb3ByaWV0b3IgaW4gdGhlIEVsbXdiYmQgc2VjdGlvbiB3YXMgaGVsZCB1cCBhdCB0aGUgcG9pbnQgb2YgYSBndW4gYW5kIHJvYmJlZCBvZiBhbmQgZm91ciBob21lcyBuZWFyYnkgd2VyZSByYW5zYWNrZWQgbGFzdCBzaXNhdC4gCkxlICBncmVlbiBidXNpbmVzcyAgZXN0IGRqIHVuZSB0cnMganV0ZXVzZSBhZmZhaXJlIHBvdXIgdG91cyBjZXV4IHF1aSBvbnQgaW52ZXN0aSBkYW5zIGRlcyAgZmVybWVzICBvbGllbm5lcyBldCBzb2xhaXJlcyBkb250IGxlIHN1cmNvdCBkZXMgcHJpeCBkZSBwcm9kdWN0aW9uIGVzdCBmYWN0dXIgYXV4IGNvbnNvbW1hdGV1cnMgZCdsZWN0cmljaXQgLiBGcmFub2lzIEdlcnZhaXMgc2lnbmFsZSBhdXNzaSBxdWUgbGUgQ08yIG4nZXN0IHBhcyB1biBwb2lzb24sIG1haXMgcXUnaWwgcydhZ2l0IGQndW4gY29tcG9zYW50IGVzc2VudGllbCBkdSBjeWNsZSBkZSBsYSB2aWUgZXQgaWwgc291bGlnbmUgcXVlIGwnYXVnbWVudGF0aW9uIGR1IHRhdXggZGUgQ08yIGNvbnN0aXR1ZSBkb25jIHVuZSBjaGFuY2UgcG91ciB0b3VzIGxlcyBhZmZhbXMgZGUgbGEgcGxhbnRlLCBsYXF1ZWxsZSBhIGRqIGNvbm51IGRlcyB0YXV4IGRlIENPMiB0cnMgc3VwcmlldXJzIGRhbnMgbGUgcGFzcy4uIApDb3Vyc2UgaXMgbGVkIGJ5IGEga25vd2xlZGdlYWJsZSBhbmQgZW50aHVzaWFzdGljIHRlYW0uIFRoZSB0YXVnaHQgbW9kdWxlcyBjb3ZlcmVkIGEgd2lkZSBzcGVjdHJ1bSBvZiBzdWJqZWN0cywgYW5kIGVuaGFuY2VkIG15IHVuZGVyc3RhbmRpbmcgb2Ygc3BvcnRzIGFuZCBleGVyY2lzZSBtZWRpY2luZSB0cmVtZW5kb3VzbHkuIE92ZXJhbGwsIGFuIGV4dHJlbWVseSBpbmZvcm1hdGl2ZSBhbmQgZ2VudWluZWx5IGVuam95YWJsZSBjb3Vyc2UuCk1hbGdyIGxhIHNpbmd1bGFyaXQgcXVpIGxlcyBwYXJ0aWN1bGFyaXNlLCBjZXMgcGxhbnRlcyBuJ2VuIHNvbnQgcGFzIG1vaW5zIGRvdWVzIGRlIHF1YWxpdHMgZG9udCBsJ2FtYml2YWxlbmNlIGFwcGFyZW50ZSBwb3VycmFpdCBsZXMgZGlzdGluZ3VlciBlbiByYWlzb24gZCd1biB0cnVjaGVtZW50IGFydGlmaWNpZWwgY29uc2lzdGFudCAgbGVzIHJhbmdlciBkYW5zIGRlcyBncm91cGVzIHNvbGlkZW1lbnQgdGlxdWV0cy4gCkFib3V0IHRoZSBzZXggdHJhZmZpY2tpbmcgY2FzZSBhY2N1c2F0aW9ucwpIZXJlLCB5b3UgY2FuIG91dGxpbmUgd2hhdCB5b3VyIGNoYXJhY3RlcnMgZG8gZm9yIHRoaXMgc3BlY2lmaWMgZGF5LiAKVGhlIG1vc3QgcG9wdWxhciBoaXN0b3J5IGFzc3VtcHRpb24gb2YgcG9rZXIgaXMgdGhhdCBpdCB3YXMgb3JpZ2luYXRlZCBieSBDaGluZXNlIGFyb3VuZCA5NTBBRCB3aGljaCB0aGV5IGNhbGxlZCAiZG9taW5vIGNhcmRzIi4gVGhpcyBvZiBjb3Vyc2Ugd2FzIG5vdCB0aGUgc2FtZSBnYW1lIHlvdSBzZWUgdG9kYXkgb3IgYW55IG9mIGl0cyB2YXJpYXRpb25zIGZvciB0aGUgbWF0dGVyLiBNb3N0IGFsbCBlYXJseSB2YXJpYXRpb25zIG9mIHBva2VyIHdoZXJlIHNpbWlsYXIgaW4gbWFueSB3YXlzIGFuZCB0aGVuIHdlcmUgZW5oYW5jZWQgYW5kIG1peGVkIGludG8gd2hhdCBtYW55IG9mIHBsYXkgdG9kYXkuLiAKQnVya2hhcnQsIHdob20gV2llZCBpZGVudGlmaWVkIG9ubHkgYXMgQi4gaW4ga2VlcGluZyB3aXRoIEdlcm1hbiBwcml2YWN5IGxhd3MsIGhhcyBub3QgeWV0IGJlZW4gcXVlc3Rpb25lZCBpbiB0aGUgY2FzZSBhbmQgbm8gYXJyZXN0IHdhcnJhbnQgaGFzIGJlZW4gaXNzdWVkIGZvciBoaW0uIFNoZSBzYWlkIHNoZSBkaWQgbm90IGtub3cgaG93IGxvbmcgYWdvIGhlIGhhZCBiZWVuIGlkZW50aWZpZWQgYXMgYSBzdXNwZWN0IGluIHRoZSBhcnNvbiBpbnZlc3RpZ2F0aW9uLgpUaGF0IHNjcmVlbiBpcyBidWdneSEgQW5kIG5vdyBpdCBoYXMgZ290dGVuIFNMT1cuCk9uIHRoZSB3YXkgb3V0LCBJIHRvbGQgbXkgbGF3eWVyIHRoZSBzdG9yeSBhbmQgaW4gZGVwb3NpdGlvbiwgeW91IGNhbiBicmluZyB1cCBhbnl0aGluZy4gCkluIDE5ODAsIGhlIHJhbiBmb3IgZ292ZXJub3Igb2YgT2hpbywgZ29pbmcgc28gZmFyIGFzIHRvIG9wZW5seSBhZGRyZXNzIHRoZSBzY2FuZGFsIGluIGEgY2FtcGFpZ24gY29tbWVyY2lhbC4gCkF0IG15IGZvcm1lciBmdWxsIHRpbWUgcG9zaXRpb24gKGdvdCBhIG5ldyBmdWxsIHRpbWUgYW5kIGJ1bXBlZCBteXNlbGYgZG93biB0byBwYXJ0IHRpbWUgdGhlcmUpLCB0aGUgbWFuYWdlciBoYWQgdXMgZG8gYSBydW4gdGhyb3VnaCBvZiB0aGUgc3RvcmUgdG8gc2VlIGlmIHRoZXJlIHdlcmUgYW55IGxpbmdlcmluZyBjdXN0b21lcnMuIApSeWRlciBIZXNqZWRhbCAoU2xpcHN0cmVhbSBDaGlwb3RsZSAgIEgzMCkgaXMgbG9va2luZyBmb3J3YXJkIHRvIHRoZSBHaXJvIGQnSXRhbGlhIHRoaXMgeWVhcgpXaGVuIHN1Y2ggbm90aWNlcyBhcmUgc2VudCBieSBlbWFpbCBvciBvdmVyIG91ciB3ZWJzaXRlLCB0aGV5IG1heSBjb21lIGludG8gZWZmZWN0IGZyb20gdGhlIHBvaW50IHRoZXkgd2VyZSBzZW50LiBVc2VycyBkbyBub3QgcmV0YWluIGFueSByaWdodCB0byByZWZ1c2UgZW1haWxzIGZyb20gRkMyLCBhbmQgVXNlcnMgYXJlIG9ibGlnYXRlZCB0byBpbmZvcm0gdXMgb2YgYW55IGNoYW5nZSBpbiBjb250YWN0IGVtYWlsIGFkZHJlc3MsIGltbWVkaWF0ZWx5LiAKV2hlcmVhcyBJIGhhdmUgbm90LiBJIGZpbmQgaXQgbG9uZWx5IHNvbWV0aW1lcywgYnV0IEkgdHJ5IHRvIGZpbGwgbXkgdGltZSB3aXRoIGhvYmJpZXMgYW5kIG90aGVyIGludGVyZXN0cy5BbHNvLCBzb21lIHBlb3BsZSBsaWtlIHRvIGp1c3QgY2hpbGwgYXQgaG9tZSBhbmQgd2F0Y2ggdHYuIAoiTWFpcyBqZSBzdWlzIHVuIGpvdWV1ciBkZSBwb2tlciBldCBqZSBkb2lzIHRyZSBsLCBjJ2VzdCBtb24gYm91bG90IiwgYXZhaXQgYXNzdXIgbGUgTmFudGFpcy4KVGhpcyBzaXR1YXRpb24gaXMgbm8gZGlmZmVyZW50LiBUaGVyZWZvcmUgdGhlICJyZWxhdGl2ZSIgc3RyZW5ndGggb2YgZXZlbiBvdXIgZXh0cmVtZWx5IGdvb2QgaGFuZHMgZ29lcyB3YXkgZG93bi4gUUpzIGZpdHMgdGhpcyBkZXNjcmlwdGlvbi4gCkFya2Fuc2FzIGhhcyBhIG5pY2UgcnVuIGdhbWUuIEFsZXggQ29sbGlucyBhbmQgSm9uYXRoYW4gV2lsbGlhbXMgaGF2ZSBjb21iaW5lZCBmb3IgYWJvdXQgMSwwMDAgeWFyZHMgdGhyb3VnaCBmaXZlIGdhbWVzLiBGbG9yaWRhJ3MgYnVpbHQgdG8gc3RvcCB0aGUgcnVuLCBzbyB0aGF0J2xsIGJlIGludGVyZXN0aW5nIGZvciBhIHdoaWxlLiBGbG9yaWRhJ3MgY29vbCwgbGl0dGxlIGppdHRlcmJ1ZyBxdWFydGVyYmFjayBUeWxlciBNdXJwaHksIHdobyB0b29rIG92ZXIgd2hlbiB0aGUgVm9scyBzbmFwcGVkIEplZmYgRHJpc2tlbCdzIHRpYmlhLCBjb250aW51ZXMgdG8gaW1wcm92ZS4KT3ZlcnZpZXcgZm9yIHRoZXJlYXJlc29tZXdob2NhbGxtCk1hciAxOCwgMjAxNiAgIDI2IHNlYyAgIFVwbG9hZGVkIGJ5IFJvYiBDaGFybGVzV2hpc3RsaW5nIEtldHRsZSBTb3VuZCBFZmZlY3QgQXMgaGVhcmQgaW4gbWFueSBrdGNoZW4ncyBiYWNrIGluIHRoZSBkYXkuIApCZWNhdXNlIG9mIHRoZSBtZW4gYW5kIHdvbWVuIGluIHVuaWZvcm0gd2hvIHZvbHVudGVlciB0byBkZWZlbmQgb3VyIGxpYmVydHksIHdlIGFyZSBhYmxlIHRvIGVuam95IHRoZSBzcGxlbmRvciBvZiB0aGUgQW1lcmljYW4gbGlmZS4gClRoZXJlIHdhcyBBY2UsIHRoZSBtYW4gd2l0aCB0aGUgcGxhbi4gSGUgd2FzIGEgYm9ybiBsZWFkZXIsIGEgcmVzdWx0IG9mIHllYXJzIG9mIGNhcmVmdWwgYnJlZWRpbmcgYnkgaGlzIG5vYmxlIGZhbWlseS4gT2YgY291cnNlLCBoZSBoYWQgbGVmdCB0aGF0IGJlaGluZCB0byBwdXJzdWUgb3VyIGNvbW1vbiBkcmVhbSwgdXNpbmcgaGlzIGFiaWxpdGllcyB3aXRoIGEgcmFwaWVyIHRvIHNrZXdlciBhbnkgb3Bwb25lbnRzIHRoYXQgc3Rvb2QgaW4gb3VyIHdheS4gSGlzIGNvbmZpZGVudCBhbmQgc2x5IHNtaWxlIHdhcyBpbmZ1cmlhdGluZyB0byBnbGFuY2Ugb24sIHVudGlsIHlvdSByZWFsaXNlZCB0aGF0IGl0IHdhc24ndCBtZWFudCB0byBiZSBzZXJpb3VzLiBUaGVuLCB0aGVyZSB3YXMgTm92YSwgYSBmYXIgdG9vIGhvdCBoZWFkZWQgbWFnZSwgdGhhdCBmbHVuZyB0aW1lIGFuZCByZWFsaXR5IHNwZWxscyB3aXRoIG5vIGFiYW5kb24gaW4gdGhlIG1pZGRsZSBvZiBhIGZpZ2h0LCBhbmQgZGlkbid0IHN0b3AgdW50aWwgc2hlIHJhbiBvdXQgb2YgbWFuYSBjcnlzdGFscy4gSXQgd2FzIGEgZ29vZCB0aGluZyB0aGF0IHNoZSBrbmV3IGEgbG90IG9mIHRvcCBsZXZlbCBzcGVsbHMsIGFuZCB3aGlsZSBJIGhhZCBubyBjbHVlIGF0IGFsbCB3aGVyZSBzaGUgaGFkIGxlYXJuZWQgdGhlbSwgSSBoYWQgc2luY2UgZGVjaWRlZCBub3QgdG8gY29udGludWUgdG8gdHJ5IHRvIGZpbmQgb3V0LiBBcyBzaGUgYWx3YXlzIHNhaWQsIGEgZ2lybCdzIGdvdCB0byBoYXZlIHNvbWUgc2VjcmV0cy4gTmV4dCB1cCwgd2FzIFJvc2UuIFNoZSB3YXMgYSB3YXJyaW9yIHVubGlrZSBhbnkgb3RoZXIsIGluIGEgc3VpdCBvZiBzaGluaW5nIGFybW9yLCB3aXRoIGEgYnVja2xlciBvbiBoZXIgd3Jpc3QsIGFuZCBhIHN3b3JkIGluIGhlciBncmlwLCBzdHJpa2luZyBmb2VzIGFyb3VuZCBoZXIgd2l0aCBhIGNvbG9zc2FsIHN0cmVuZ3RoIGFuZCBlbmR1cmFuY2UuIE1vc3Qgd291bGRuJ3QgdGhpbmsgdGhhdCB0aGUgcXVpZXQgZ2lybCB3YXMgY2FwYWJsZSBvZiBwdXR0aW5nIHVwIG11Y2ggb2YgYSBmaWdodCBhdCBhbGwsIGJ1dCBvdXQgb2YgYWxsIG9mIHVzLCBoZXIgZmlnaHRpbmcgc3Bpcml0IHNlZW1lZCB0aGUgbW9zdCB1bmJlYXRhYmxlLgpUaGUgd29yc3QgaXMgZG9pbmcgYSB3aXRoZHJhd2FsIGFuZCB0aGVpciBzaXRlIGlzIGVtcHR5IG9mIGNocCBhbmQgdGhleSBoYXZlIHRvIHJlbG9hZC4gUGVvcGxlIHdpbiBjaHAgdGhleSBkb24gZXZlbiBoYXZlIHRvIHBheSBvdXQuIApOZXcgeWVhciBldmUgYWJvdXQgNSB5ZWFycyBhZ28uIEkgd2FzIHVwIGFib3V0IDE2MDAgZnJvbSBwbGF5aW5nIHBva2VyIHNvIGFib3V0IDUgbWludXRlcyBiZWZvcmUgbWlkbmlnaHQgaSBkZWNpZGUgaSBnb2luZyB0byBwdXQgMTAwIG9uIGJhbmtlciBvbiB0aGUgYmFjY2FyYXQgdGFibGUgYXQgbWlkbmlnaHQuIApTZWVuIHNvbWV3aGVyZSBhcm91bmQgdGhlIHN1YiwgYW5kIHRoZXJlIHdlcmUgdHJhbnNsYXRlZCBzY3JlZW5zaG90cyksIHBvc3RlZCBoZXIgbnVtYmVyIG9uIG11bHRpcGxlIHBsYXRmb3JtcyBsaWtlIHR3aXR0ZXIgYW5kIHJlZGRpdCAoaGVyIHVzZXIgd2FzIGxlaWRhbmllbCkgcGltcGluZyBoZXJzZWxmIG91dCBhcyBhIG1hc3NldXNlIGFuZCBmb3Igc2V4IGluIGphcGFuIGxvbC4gc28gYmFzaWNhbGx5LCBoZXIgcGhvbmUgbnVtYmVyIGlzIGFsbCBvdmVyIHRoZSBpbnRlcm5ldCwgYW5kIHByb3ZlcyB0aGF0IHNoZSBwb3N0ZWQgYWxsIHRoZXNlLiAKSSB0b2xkIHRoZSBvdGhlciBtYWxlIGJhcnRlbmRlciBhbmQgYWxsIGhlIGNvdWxkIHNheSB3YXMgInRoYXQgYSBjb21wbGltZW50LiIgVGhlcmUgYXJlIHNvIG1hbnkgaXNzdWVzIHdpdGggdGhpcy4gSSBjYW4gZXhwbGFpbiBhbmQgc2hvdWxkbiBoYXZlIHRvLiBJdCBkaWZmaWN1bHQgdG8ga25vdyB3aGVyZSB0byBkcmF3IHRoZSBsaW5lIHdoZW4gc3BlYWtpbmcgdG8gaWdub3JhbnQgcGVvcGxlLiAKTXkgdGVldGggbG9va2VkIGxpa2Ugb25lIGdpYW50ICJzY3VtIHRvb3RoIiB0aGUgZGF5IHRoZXkgZ290IHRoZSB3aXJlcyBvZmYuIEkgc29tZXRpbWVzIGxhbWVudCB0aGF0IHRoaXMgd2FzIGJlZm9yZSBzbWFydHBob25lcyBhbmQgSSBkb24gaGF2ZSBhbnkgZ29vZCBwaG90b3Mgb2YgYW55IG9mIHRoaXMgc2hpdC4KSSBrbm93IGl0IHN1Y2tzIGZvciB5b3UsIGJ1dCB5b3UgaGF2ZSB0byB1bmRlcnN0YW5kIHRoYXQgaGlnaCBwaW5ncyB3aXRoIEJhdHRsZWZpZWxkIG5ldGNvZGUgY2FuIGJlIHZlcnkgZnJ1c3RyYXRpbmcgZm9yIHBsYXllcnMgb3JpZ2luYXRpbmcgaW4gdGhlIHNlcnZlciBob3N0IGNvdW50cnkuIE5vIG9uZSBpcyB0cnlpbmcgdG8gYmUgYSBkaWNrIHRvIHlvdS4gSXQganVzdCB0aGF0IHlvdSBjYW4gZW5kIHVwIHdpdGggYSBodWdlIGFkdmFudGFnZSB3aXRoIGEgaGlnaCBwaW5nIGFuZCB0aGUgY3VycmVudCBuZXRjb2RlLiBZb3UgbWF5IHRoaW5rIHlvdXIgcGluZyBpcyBkZWNlbnQsIGJ1dCBpdCBkb2VzbiB0YWtlIG11Y2ggbGF0ZW5jeSB0byBpbXBhY3QgZ2FtZXBsYXkgaW4gYSBuZWdhdGl2ZSB3YXkgZm9yIGV2ZXJ5b25lIGVsc2Ugb24gdGhlIHNlcnZlci4KVGhlcmUgYXJlIG1hbnkgYXBwcm9hY2hlcyB0byByZWR1Y2luZyB0aGUgdXNlIG9mIGNhcmJvbiBmdWVscyBhIG1ham9yIGNvbnRyaWJ1dG9yIHRvIEdIR3MgcmFuZ2luZyBmcm9tIHJlZ3VsYXRvcnkgbGltaXRzLCBiYW5zIGFuZCBpbmNlbnRpdmVzIHRvIHJlIHByaWNpbmcgbWVjaGFuaXNtcywgYW5kIGluIHRydWUgQ2FuYWRpYW4gZmFzaGlvbiBvdXIgZ292ZXJubWVudHMgYXJlIHVzaW5nIHRoZW0gYWxsLiBUaGUgYXBwcm9hY2ggaXMgYW55dGhpbmcgYnV0IGNvbnNpc3RlbnQgbmF0aW9uYWxseSwgYnV0IGF0IGxlYXN0IHRoZSBwcm92aW5jaWFsIGFwcHJvYWNoZXMgaGF2ZSBiZWVuIHJlbGF0aXZlbHkgZXZlbiBoYW5kZWQgaW4gaG93IHRoZXkgYmFsYW5jZSBjb3N0cyBhbmQgaW5jZW50aXZlcy4gClllYWgsIHlvdSByaWdodCB0aG91Z2gsIHdoZW4gRElzIHN0YXJ0IG1lc3Npbmcgd2l0aCBraWRzIHRvIGJyZWFrIHRoZWlyIGNvbXBvc2VyLCB0aGV5IGZhbGwgb3V0IGhhcmQuIFdlIGdvdCB0byBwbGF5IHdpdGggcGxlbnR5IG9mIENTIGFuZCBzdXJlIGl0IGZ1Y2tzIHlvdXIgd29ybGQgdXAsIGJ1dCBhIGNhbG0gbWluZCBjYW4gaGFuZGxlIGl0IGFuZCBjb250aW51ZSB0aGUgbWlzc2lvbiwgYmVzdCB0aGluZyB0byBkbyBpcyBqdXN0IGJyZWF0aCBzaGFsbG93bHkgYW5kIGVtYnJhY2UgdGhlIHBhaW4uIFBlb3BsZSBwYXkgYSBsb3Qgb2YgbW9uZXkgZm9yIHNpbnVzIGNsZWFuc2luZyB0aGF0IGVmZmVjdGl2ZS4gCkl0J3MgcXVpdGUgc2ltcGxlIHJlYWxseSwgaXQgaGFzIGEgbG9jayBhbmQga2V5LiBXZWxsLCB0aGF0J3Mgbm90IHRoZSBvbmx5IHJlYXNvbi4gV2UgZG8gbG92ZSB0aGUgZmFjdCB0aGF0IHRoZXJlIGFyZSBlaWdodCB0dWJlIHNlY3Rpb25zIHRoYXQgaG9sZHMgYWxtb3N0IDUwMCBjaGlwcy4gCkhhbmQgNDogTWF5YmUgSSdtIGp1c3QgYSBmdWNraW4nIG5pdCBidXQgSSBoYXZlIGEgaGFyZCB0aW1lIGJlbGlldmluZyB0aGlzIGxpbmUgaXMgYW55dGhpbmcgYnV0IEtLIG9yIEFBLiBQcmVmbG9wIEkgcHJldHR5IG11Y2gganVzdCBjYWxsZWQgdG8gc2VlIGlmIEkgY291bGQgc3Bpa2UgYSBxdWVlbiwgd2hpY2ggc2VlbXMgT0sgZ2l2ZW4gdGhlIHByaWNlLiAKVGVjaG5pcXVlIHBvbGljaQpXZSBiZWxpZXZlIHRoZXNlIG91dHN0YW5kaW5nIGFwcGxpY2FudHMgd2lsbCBtYWtlIGEgc2lnbmlmaWNhbnQgY29udHJpYnV0aW9uIHRvIHRoZSBhY2FkZW1pYyB3b3JrIG9mIHRoZSBVbml2ZXJzaXR5IGFuZCB3aWxsIGdhaW4gaW1tZW5zZWx5IGZyb20gdGhlaXIgdGltZSB3aXRoIHVzLiAKRmluYWxseSwgRGlOaXppbyBzYWlkLCAiSG91c2VsaWdodHMgdXAhIEV2ZXJ5Ym9keSBkYW5jZSEiIGZvciBhIG1lYW4gdmVyc2lvbiBvZiB0aGVpciBiaWdnZXN0IGhpdCwgIkEgR2lybCBMaWtlIFlvdSwiIGR1cmluZyB3aGljaCB0aGV5IHNsaXBwZWQgaW50byBUaGUgWW91bmdibG9vZHMnICJHZXQgVG9nZXRoZXIuIgpTb21lIGNvdW50cmllcyBhcmUgbW9yZSBpbnRlcmVzdGluZyB0aGFuIG90aGVycywgYnV0IGV2ZW4gc28sIGlmIHlvdSBrbm93IHdoZXJlIHRvIGxvb2sgeW91IGNhbiBhdm9pZCB0aGUgbGFyZ2VyIGNpdGllcyBhbmQgaGVhZCBpbnRvIG1vcmUgcnVyYWwgYXJlYXMgaW4gc2VhcmNoIG9mIGFuIGF1dGhlbnRpYyBjdWx0dXJhbCBleHBlcmllbmNlLiAKUmVzZXJ2ZSBzb21lIHRpY2tldHMgdG8gdGhlIGV2ZW50cyB0aGF0IHlvdSB3b3VsZCBsaWtlIHRvIGF0dGVuZCwgY2FsbCBpbiBhbmQgcmVzZXJ2ZSBzZWF0cyBhdCB5b3VyIGZhdm9yaXRlIHJlc3RhdXJhbnQsIGV0Yy4gCkFzaGxleSBEZWxhbmV5IEhvcm4gSGVyIEJhYnkgUmFubGV5IEpvIEhvcm4KSSBoYWQgdGhlIHRpbWUgdG8gdGhpbmsgYWJvdXQgaXQuIApBbmQgaGUgbG9va2VkIGF0IG1lIGFuZCByYWlzZWQgYSBxdWl6emljYWwgZXllYnJvdyBhcyBoZSB3ZW50IGFib3V0IHN0YWNraW5nIGhpcyBjaGlwcywgdGhlIGNoaXBzIHRoYXQgaGFkIHVudGlsIGp1c3QgcmVjZW50bHkgYmVlbiBteSBjaGlwcywgYW5kIHNhaWQsICJVbmx1Y2t5Ii4gClNpbmRoaSBsYW5kbG9yZCBCaWphcmFuaSBpcyBhIFBQUCBzdGFsd2FydCBhY2N1c2VkIG9mIHByZXNpZGluZyBvdmVyIGEgamlyZ2EgaW4gMjAwNyB0aGF0IG9mZmVyZWQgZml2ZSBtaW5vciBnaXJscyBhcyBjb21wZW5zYXRpb24gaW4gYSBtdXJkZXIgZGlzcHV0ZS4gCjE3KSBCcmFpbiBkZXZlbG9wbWVudCBpcyByZWxhdGVkIHRvIGN1bXVsYXRpdmUgZWFybHkgbGlmZSBleHBvc3VyZSB0byBtZXJjdXJ5LiBUaGVzZSBlYXJseSBsaWZlIGV4cG9zdXJlcyBpbmNsdWRlIHRoZSBmb2xsb3dpbmcgc291cmNlczpCKSkgVGhpbWVyb3NhbCBpbiBjZXJ0YWluIHZhY2NpbmVzIChldGh5bG1lcmN1cnkpCkZHTSBjYW4gaW52b2x2ZSBub3RoaW5nIG1vcmUgdGhhbiBhIHN5bWJvbGljIHBpbiBwcmljayAoVHlwZSBJVikuIEl0IGlzbiBhbHdheXMgd29yc2UgdGhhbiBjaXJjdW1jaXNpb24gYW5kIHRoZSBwb2ludCBpc24gYWx3YXlzIHRvICJkZXN0cm95IHRoZSBwb3NzaWJpbGl0eSBvZiB0aGVtIGVuam95aW5nIHNleCIuIEkgZG9uIGJsYW1lIHlvdSBmb3IgYmVpbmcgZGVmZW5zaXZlIGFib3V0IHlvdXIgZGljaywgSSBoYXBweSB0byBoZWFyIHlvdSBkaWRuIHN1ZmZlciBhbnkgbWFqb3IgY29tcGxpY2F0aW9ucyBmcm9tIHdoYXQgd2FzIGRvbmUgdG8geW91IGFuZCBJIHN1cmUgeW91IGVuam95IHlvdXIgc2V4IGxpZmUgYnV0IHlvdSBoYXZlIG5vIHdheSB0byBtZWFzdXJlIHdoYXQgaXQgZG9uZSB0byB5b3VyIHNlbnNpdGl2aXR5LiAKSXQgYWxsIGRlcGVuZHMgb24gdGhlIGNpcmN1bXN0YW5jZXMuLiAKUmVzdWx0cyBHdWFyYW50ZWVkIFByb2dyYW0KVGUgUnVhIGluIDE5OTAgd2FzIHRoZSBsYXN0IChhbmQgZWlnaHRoKSBmZWF0dXJlIG1hZGUgYnkgUGFjaWZpYyBGaWxtcy4gSXQgYWxzbyBtYXJrZWQgdGhlIGVuZCBvZiB0aGUgd29ya2luZyByZWxhdGlvbnNoaXAgYmV0d2VlbiBPJ1NoZWEgYW5kIEJhcmNsYXkuIEpvaG4gUmVpZCB0ZWxscyBob3cgSm9obiBPJ1NoZWEgZmVsdCBkZWZsYXRlZCBidXQgbmV2ZXJ0aGVsZXNzIGhlbGQgZG9nZ2VkbHkgdG8gaGlzIGNvbnZpY3Rpb24gdGhhdCAiYXMgbXVjaCBub3cgYXMgZXZlciBiZWZvcmUgdGhlcmUgaXMgYSBuZWVkIGZvciB0aGUgc3Ryb25nIGluZGVwZW5kZW50IHZvaWNlcyBhbmQgdmlzaW9ucyBvZiBhcnRpc3RzIGFuZCB0aGUgZmlsbXMgaW4gd2hpY2ggdGhleSBjb2xsYWJvcmF0ZSB0byBhZmZpcm0gb3VyIG93biBpZGVudGl0eSwgb3VyIHdheSBvZiBsaWZlLCBvdXIgYmVsaWVmcyBhbmQgaG9wZXMgb3VyIG5pZ2h0bWFyZXMgYXMgd2VsbCBhcyBvdXIgZHJlYW1zLiIuIApCZXNpZGUgTWFnaWMgTWFzYWxhLCBGbGF2b3VycyBwb3B1bGFyIGluIEluZGlhIGFyZSAiQW1lcmljYW4gU3R5bGUgQ3JlYW0gYW5kIE9uaW9uIiBhbmQgIlNwYW5pc2ggdG9tYXRvIHRhbmdvIi4gIldvcmxkIENsYXNzaWMgU2FsdGVkIiBpcyBhdmFpbGFibGUgYXMgd2VsbC4gUmVjZW50bHksIExheXMgSW5kaWEgaW50cm9kdWNlZCBhIGNvbnRlc3QgdG8gbmFtZSBuZXcgZmxhdm91cnMsIGFuZCB0aGVuIGludml0ZWQgdGhlIHB1YmxpYyB0byB0YXN0ZSBhbmQgdm90ZSBvbiB0aGUgYmVzdCBvZiB0aGVtLiAKVGhlIG9kZHMgb24gc2hvdyBhcmUgZmFpcmx5IGNvbXBldGl0aXZlLiBJdCBzaG91bGQgYmUgbm90aWNlZCB0aGF0IFRpdGFuIEJldCBhcmUgbm90IGFmcmFpZCB0byB0YWtlIG9uIG9kZHMgb24gZmF2b3VyaXRlcyBpbiBmb290YmFsbC4gCkdvb2R3ZWJzdHVmZiAgMiBwb2ludHMgIHN1Ym1pdHRlZCA1IG1vbnRocyBhZ29BIGxvdCBvZiBzbWFsbCBidXNpbmVzc2VzIGxlYXNlIGxhc2VyamV0IHByaW50ZXJzLgpJIG5vdCBzdXJlIGlmIGhlIHN0aWxsIGRvaW5nIGNsaW5pY3MsIGJ1dCBpZiBoZSBpcyBwbGVhc2UgZG9uIG1pc3MgaGltLiBIZSBvbmUgb2Ygcm9jayBmaXJzdCBiYXNzIHZpcnR1b3NvcywgYW5kIGNlcnRhaW5seSBvbmUgb2YgdGhlIG1vc3QgdW5kZXJhcHByZWNpYXRlZC4KV2UgemFnZW4gaGllciB3ZWwgdmVlbCBtb29pZSBnZWJvdXdlbiBpbiBkZSBidXVydCwgZHVzIHVpdGVpbmRlbGlqayBiZXNsb3RlbiB3ZSBhbCB3YW5kZWxlbmQgICB3YWFyYmlqIHdlIG9ucyBuYXR1dXJsaWprIGRlIHdlZyBsaWV0ZW4gd2lqemVuIGRvb3IgZ2VvY2FjaGVzICAgdGVydWcgcmljaHRpbmcgY2VudHJ1bSB0ZSB0cmVra2VuLiAKSSBhbSBzdXJlIHRoZXJlIGEgbG90cyBvZiBmbGFrZXkgZW5lcmd5IGZyb20gc3BhY2UgdHlwZXMgZG93biB0aGVyZSBpbiB0aGUgVVMuLiAKSGF1cHRzY2hsaWNoIHN0aW11bGllcmUgaWNoIG1pdCBkZW0gRmluZ2VybiBtZWluZW4gS2l0emxlciwgYWJlciBpY2ggaGFiZSBhdWNoICAgb2ggTkVJTiEgICBldHdhIDEwIHVudGVyc2NoaWVkbGljaGUgVmlicmF0b3JlbiwgZGllIGljaCBqZSBuYWNoZGVtLCB3aWUgbWlyIHp1bXV0ZSBpc3QsIGF1c3dobGUuIApFYWNoIG1hY2hpbmUgaGFzIGEgbGlnaHQgb24gdG9wIG9mIGl0IGNhbGxlZCBhICdjYW5kbGUnLiAKRmlyc3QsIGxldCdzIGRpc2N1c3MgbGltaXRzIHRvIGFyYml0cmFnZSwgbW9yZSBjb21tb25seSByZWZlcnJlZCB0byBhcyBtYXJrZXQgZnJpY3Rpb25zLiBUaGUgZWZmaWNpZW50IG1hcmtldCBoeXBvdGhlc2lzIHByZWRpY3RzIHRoYXQgcHJpY2VzIHJlZmxlY3QgZnVuZGFtZW50YWwgdmFsdWUuIApUaGUgVGFzbWFuaWFuIExpYmVyYWwgZ292ZXJubWVudCBjYW4gYWZmb3JkIHRvIHNoZWQgdHdvIHNlYXRzIGFuZCBzdGlsbCBob2xkIG9udG8gcG93ZXIuIApPbiB0aGUgdHVybiwgVmlsIGJldHMsIEhlcm8gY2FsbHMuIElmIHRoZSBoZXJvIGhhZCBhIGZsdXNoIG1hZGUgb24gdGhlIHR1cm4sIGFuZCBpdCBub3QgdGhlIG51dCBmbHVzaCAod2hpY2ggaGFzIHRoZSBBZCksIGhlIHdvdWxkIGhhdmUgcHJvYmFibHkgcmFpc2VkIGhlcmUgYXMgYW5vdGhlciBkaWFtb25kIGNvdWxkIGtpbGwgaGlzIGFjdGlvbiwgaGUgd2FudHMgdG8gZ2V0IHZhbHVlIGZyb20gYSBBZFh4IGRyYXcuIApXaGVuIHdlIGZpcnN0IHN0YXJ0ZWQgZGF0aW5nLCB3ZSBoYXZlIGEgY29mZmVlIHRvZ2V0aGVyIG9uY2Ugb3IgdHdpY2UgZHVyaW5nIHRoZSB3b3JrIGRheSwgc3RlYWwga2lzc2VzIGluIHRoZSBlbGV2YXRvciwgYW5kIG1lZXQgdXAgYWZ0ZXIgd29yayBhZnRlciB3ZSBnb25lIGhvbWUgdG8gZG8gb3VyIG93biB0aGluZyBmb3IgYSB3aGlsZSBhbmQgaGFkIGRpbm5lciBwcml2YXRlbHkuIEFmdGVyIG91ciByZWxhdGlvbnNoaXAgdHVybmVkIHNlcmlvdXMgYW5kIHdlIG1vdmVkIGluIHRvZ2V0aGVyLCB3ZSBzdGlsbCBjb21tdXRlZCBzZXBhcmF0ZWx5IGJ1dCBzdGFydGVkIGhhdmluZyBsdW5jaCB0b2dldGhlciBvZnRlbiwgc29tZXRpbWVzIGNvZmZlZSwgYW5kIGNvbWUgaG9tZSB0byBlYWNoIG90aGVyLiBPdXIgYXBhcnRtZW50IGFnZW50IGNvbW1lbnRlZCB0aGF0IHdlIG11c3QgcmVhbGx5IGxpa2UgZWFjaCBvdGhlciB0byBiZSBhYmxlIHRvIHdvcmsgdG9nZXRoZXIsIGxpdmUgdG9nZXRoZXIsIEFORCBoYXZlIGx1bmNoIHRvZ2V0aGVyIGFsbW9zdCBldmVyeSBkYXkgaGFoYS4uIApUaGUgdHJhaW4gdG8gV2ludGVycGFyayB3YXMgYWxzbyBwcm9oaWJpdGl2ZWx5IGV4cGVuc2l2ZSwgJDEyMCB0b3RhbCBhbmQgdGhhdCB0aGUgc2FsZSBwcmljZS4gVGhlIG9ubHkgb3RoZXIgYnVzZXMgSSBjb3VsZCBmaW5kIGxlYXZlIGZyb20gdGhlIGFpcnBvcnQuIElzIHRoZXJlIHJlYWxseSBubyBhZmZvcmRhYmxlIHdheSB0byB0YWtlIHB1YmxpYyB0cmFuc3BvcnRhdGlvbiBmcm9tIGRvd250b3duPy4gCkVsc2V3aGVyZSBpbiBFdXJvcGUsIG9uIG9yIGFyb3VuZCA4IE1hcmNoIG9mIHRoZSBmb2xsb3dpbmcgeWVhciwgd29tZW4gaGVsZCByYWxsaWVzIGVpdGhlciB0byBwcm90ZXN0IHRoZSB3YXIgb3IgdG8gZXhwcmVzcyBzb2xpZGFyaXR5IHdpdGggb3RoZXIgYWN0aXZpc3RzLjE5MTcgQWdhaW5zdCB0aGUgYmFja2Ryb3Agb2YgdGhlIHdhciwgd29tZW4gaW4gUnVzc2lhIGFnYWluIGNob3NlIHRvIHByb3Rlc3QgYW5kIHN0cmlrZSBmb3IgIkJyZWFkIGFuZCBQZWFjZSIgb24gdGhlIGxhc3QgU3VuZGF5IGluIEZlYnJ1YXJ5ICh3aGljaCBmZWxsIG9uIDggTWFyY2ggb24gdGhlIEdyZWdvcmlhbiBjYWxlbmRhcikuIApJdCBHcmFzdG9uLCBub3QgR3Jhc3RvbiAoanVzdCBmeWkpLCBhbmQgd2hlbiBwcm9wZXJseSBkb25lIGl0IGlzIG9ubHkgYSB0aW55IGZyYWN0aW9uIG9mIGEgbWFzc2FnZSBzZXNzaW9uLiAKQSBsb3Qgb2Ygb25saW5lIHBva2VyIHBsYXllcnMgYmVsaWV2ZSB0aGF0IHBva2VyIGlzIG1vc3RseSBhIGdhbWUgb2Ygc2tpbGwsIGFuZCB0aGV5IHRoaW5rIHRoZXkgaGF2ZSB0aGUgcmlnaHQgc2V0IG9mIHNraWxscyB0byB3aW4gdGhlIHBvdCB3aXRoIG5vdCBtdWNoIGVmZm9ydC4gQSBudW1iZXIgb2YgcGVvcGxlIGFsc28gdGhpbmsgdGhhdCB0aGlzIGlzIG5vdGhpbmcgbW9yZSB0aGFuIGEgZmFsbGFjeSBpbiBvbmxpbmUgcG9rZXIgZ2FtYmxpbmcuClRob3VnaCBpdCBpcyBub3Qga25vd24gaWYgU05DIGl0c2VsZiBtYWRlIHN1Y2ggYSB0aHJlYXQsIHNoaWZ0aW5nIGhlYWRxdWFydGVycyB0byBhbm90aGVyIGp1cmlzZGljdGlvbiB3aXRoIHRoZSBVbml0ZWQgS2luZ2RvbSBiZWluZyB0aGUgbW9zdCBsaWtlbHkgZGVzdGluYXRpb24gd291bGQgbm90IGJlIG91dCBvZiB0aGUgcmVhbG0gb2YgcG9zc2liaWxpdHkgZm9yIHRoZSBjb21wYW55LiBXaGlsZSBhIG1vdmUgbWlnaHQgYXBwZWFyIHRvIG9mZmVyIFNOQyBhIGZyZXNoIHN0YXJ0IGFuZCBnaXZlIGl0IHRoZSBvcHBvcnR1bml0eSB0byBuZWdvdGlhdGUgZnV0dXJlIGNvbmNlc3Npb25zIGZyb20gYSBkaWZmZXJlbnQsIHBvdGVudGlhbGx5IG1vcmUgYWNjb21tb2RhdGluZyBnb3Zlcm5tZW50LCBtb3N0IGNvbXBhbnkgd2F0Y2hlcnMgc2VlIHRoZSBvcHRpb24gYXMgbW9yZSBvZiBhIGJhcmdhaW5pbmcgY2hpcCB0aGFuIGEgcmVhbCBwbGFuLiAKQmxhY2sgRnJpZGF5IGZvcmNlZCB0aGVtIG91dCBvZiB0aGVpciBwYXJlbnRzIGJhc2VtZW50cyBhbmQgaW50byB0aGUgbGl2ZSBnYW1lcy4gCkkgZ290IG15IGZpcnN0IGJhdHRsZSBzY2FyIHRvbyEhIEEgd29vZCBwYW5lbCB3aXRoIGEgc2NyZXcgaW4gaXQgc3RpY2tpbmcgc3RyYWlnaHQgdXAgd2VudCB0aHJvdWdoIG15IHNob2UgYW5kIGludG8gbXkgZm9vdC4gCklmIGEgc3ViIDI1IDVrIGlzIHlvdXIgZ29hbCwgSSBwcmV0dHkgbXVjaCBnb3QgdGhlcmUganVzdCBieSBpbmNyZWFzaW5nIG1wdy4gKEkgaGF2ZW4gYWN0dWFsbHkgcnVuIGEgNWsgcmFjZSwgYnV0IDhtaW4vbWlsZSBoYXMgZ29uZSBmcm9tIGJlaW5nIGEgc3RyZXRjaCB0byBiZWluZyBhIHBhY2UgdGhhdCBJIGNhbiBob2xkIHByZXR0eSBjb21mb3J0YWJseSkuIElmIG9wdGltaXppbmcgeW91ciA1ayB0aW1lIGlzIHRoZSBnb2FsLCB5b3UgbWlnaHQgZm9jdXMgb24gNWsgc3BlY2lmaWMgd29ya291dHMgaW5zdGVhZCBvZiBjaG9vc2luZyB0byBkbyBhIG1hcmF0aG9uLCB0aG91Z2ggeW91IGxpa2VseSB3YW50IHRvIGluY3JlYXNlIG1wdyBhdCBzb21lIHBvaW50IGFueXdheS4uIApBZnRlciBoaXMgdmljdG9yeSBpbiAxOTcyLCBTbGltIHdlbnQgb24gdG8gd2luIHRocmVlIG90aGVyIGV2ZW50cyBhdCB0aGUgV29ybGQgUG9rZXIgQ2hhbXBpb25zaGlwcywgdGhlIGxhc3QgYmVpbmcgaW4gMTk5MC4gSW4gMjAwMCBoZSBuYXJyb3dseSBmYWlsZWQgdG8gbGlmdCBoaXMgZmlmdGggd29ybGQgdGl0bGUuIFNsaW0gYWxzbyBob3N0ZWQgdGhlIFN1cGVyIEJvd2wgb2YgUG9rZXIsIHdoaWNoIGJlY2FtZSBvbmUgb2YgdGhlIGJpZ2dlc3QgdG91cm5hbWVudHMgaW4gdGhlIFVuaXRlZCBTdGF0ZXMgdW50aWwgaXQgd2FzIGNhbmNlbGxlZCBpbiAxOTkxLgpQbGF5IE9ubGluZSBOb3cuIEZpZ2h0ZXJzIHNlcmllcy4gVGhpcyBpbnN0YWxsbWVudCB3YXMgYWR2ZXJ0aXNlZCBieSBTTksgYXMgYSAic3BlY2lhbCBlZGl0aW9uIiBvZiB0aGUuIApJdCBpcyB2ZXJ5IHdhcm0gd2hpbGUgeW91IGFyZSBhY3RpdmUuIApTdXJ2aXZlZCBieSBoZXIgc2lzdGVyIENhcm9sIENhdmVybHksIGJyb3RoZXIgRGF2aWQgQ2F2ZXJseSAoQW5pdGEpLCBoZXIgc3BlY2lhbCBnb2RkYXVnaHRlciBLZWxseSBMZW9uYXJkIChKb2huKSwgYWxvbmcgd2l0aCBzZXZlcmFsIG5pZWNlcyBhbmQgbmVwaGV3cy4gUHJlZGVjZWFzZWQgYnkgaGVyIHBhcmVudHMsIEZyYW5rIGFuZCBNYWJlbCBDYXZlcmx5LCBhbmQgYnkgaGVyIGJyb3RoZXIsIFJvbiBDYXZlcmx5LiBNYXJ5IGFuZCBMZW4gbGVkIGEgbGlmZSByaWNoIGluIGV4cGVyaWVuY2UgYW5kIGZyaWVuZHNoaXAuIApEZXIgTW9uZCBpc3QgaW0gSGltbWVsLCBkYXMgSmFociBzdGVodCBpbSBCdWNoIHVuZCB3aXIgaGFiZW4gZGVuIGdsZWljaGVuIFRhZyB3aWUgaWhyLiBEZXNoYWxiIGtzcyB1bnNlcmVuIEhpbnRlcm4hW01dICAxIHBvaW50ICBzdWJtaXR0ZWQgOCBkYXlzIGFnby91L2Zhc3RfTGlvbiwgdmllbGVuIERhbmsgZnIgZGVpbmVuIEJlaXRyYWcuIApJIHRyeSB0byBmaXQgaW4gd2hhdCBJIGNhbiB3aXRoIG15IHNjaGVkdWxlIChib3hpbmcgc29tZSBvZiB0aGVpciBzdHVmZiwgbGV0dGluZyB0aGVtIGtub3cgd2hhdCBkYXRlcyBJIGF2YWlsYWJsZSwgZ2l2aW5nIHRoZW0gYSBmZXcgYml0cyBvZiBjdXRsZXJ5KSBidXQgSSBkZWZpbml0ZWx5IHdvdWxkIG5vdCBiZSBwaXNzeSBiZWNhdXNlIHRoZXkgY291bGRuIG1lZXQgd2l0aCBtZS4uIApJIHRob3VnaHQgdGhlIHJldGlyZW1lbnQgZ3VpZGUgY291bGQgYmUgYSBtYWdhemluZS4gVHVybmVkIG91dCB0aGF0IHRoZSBjaGlsZSBzdWJqZWN0IHdhcyB3b3J0aHkgb2YgYSBtYWdhemluZSB3aGlsZSB0aGUgcmV0aXJlbWVudCBndWlkZSAgIGNvbnRhaW5pbmcgbW9zdGx5IHN0YXRpYyBpbmZvcm1hdGlvbiAgIHdhcyBiZXN0IHNlcnZlZCBhcyBhIGJvb2suIEJvdGggcHJvZHVjdHMgd2VyZSB2ZXJ5IHN1Y2Nlc3NmdWwuIApIYWQgdmVzdHMgYW5kIGEgc2lkZWFybSwgYnV0IHRoYXQgd2FzIGFsbCBJIHNhdy4gSSBrbmV3IGFib3V0IHRoZSByb29tIHRlbXBlcmF0dXJlIGJlZXIsIGl0IHdhcyBwcmV0dHkgZ29vZCBlc3BlY2lhbGx5IHdpdGggc29tZSByZWFsbHkgZnJlc2ggZmlzaCBhbmQgY2hpcHMgaW4gdGhlIFdlc3QgRW5kLi4gCkl0IG1lYW5zIGFueSB3YXkgbG9zZW1vbmV5IGFuZCBub3RoaW5nIGVsc2UuLiAKRW50ZXIgY29kZSBVTkkxODcgYXQgY2hlY2tvdXRXaGVlbHdyaWdodHMgQXJtcyBUZWw6IDAxMjI1IDcyMjI4N1R3byBjb3Vyc2VzIGZvciAxOCBhbmQgdGhyZWUgY291cnNlcyBmb3IgMjMsIHdpdGggYSBmcmVlIGJvdHRsZSBvZiBob3VzZSB3aW5lIGZvciBldmVyeSBwYXJ0eSBvZiBzaXgsIHR3byBmcmVlIGJvdHRsZXMgZm9yIGV2ZXJ5IHBhcnR5IG9mIDEyIGV0Yy4gVGhlIGFib3ZlIGRlYWxzIGFwcGx5IHdoZW4gb3JkZXJpbmcgdGhlIENocmlzdG1hcyBQYXJ0eSBtZW51IG9ubHkuVW5pdmVyc2l0eSBsaWJyYXJ5IGNhcmRTZWFzb25lZCBDb29rZXJ5IFNjaG9vbENvb2tlcnkgc2Nob29sIGJhc2VkIGluIHRoZSBiZWF1dGlmdWwgRGVyYnlzaGlyZSBjb3VudHJ5c2lkZS4gClRoaXMgZ3JvdXAgb2YgNCBvbGRlciBDaHJpc3RpYW4gd29tZW4gd2VyZSB0YWxraW5nIGFib3V0IG9uZSBvZiB0aGVpciBkYXVnaHRlcnMuIEFwcGFyZW50bHkgdGhlIGRhdWdodGVyIHdhcyBnb2luZyB0aHJvdWdoIGEgcm91Z2ggcGF0Y2guIFNoZSBncmV3IHVwIGtub3dpbmcgYmV0dGVyIGJ1dCBoYWQgZ290dGVuIGludG8gZHJpbmtpbmcgYmVjYXVzZSBvZiBhIGJhZC8gc2hhZHkgcmVsYXRpb25zaGlwIGFuZCBmaW5hbmNpYWwvam9iIGlzc3Vlcy4gCk1hbGdyIHVuIGJlYXUgc3VjY3MsIGxlIHByb2pldCBhIGNlc3MgaWwgeSBhIHVuIHBldSBtb2lucyBkZSBkZXV4IGFucy4gTGVzIGJudm9sZXMsIG9yaWdpbmFpcmVzIGRlIE1vbnRyYWwsIHNlIHNvbnQgZXNzb3VmZmxzIGF1IGJvdXQgZGUgY2lucSBvdSBzaXggbW9pcyBkIExlcyBjbGluaXF1ZXMgZGUgbWFzc290aHJhcGllIHRhaWVudCBvZmZlcnRlcyBhdXggZGV1eCBzZW1haW5lcy4KSGUgZW1wbG95ZWQgb3ZlciAyMDAgcGVvcGxlIGFuZCBncmV3IHRoZSBjb21wYW55IHRvIG92ZXIgJDEwMCBtaWxsaW9uIGFubnVhbCBzYWxlcy4gClBhc3RlIHRoZSBsZWF0aGVyIG9udG8gdGhlIHNwaW5lLgpTaGUgd2FudHMgaGVyIHNvbiBhbmQgaGlzIHdpZmUgdG8gaGF2ZSB0aW1lIGFuZCBtb25leSB0byB0YWtlIGNhcmUgb2YgSEVSIGluIGhlciBvbGQgYWdlLiAKU3R1ZGVudHMgYXJjIGFza2VkIHRvIGNoZWNrIGluIGF0IHRoZSBtYWluIGxvYmJ5IG9mIHRoYyBhZCAgbWluaXN0cmF0aW9uIGJ1aWxkaW5nLiBDb21wYSAgbnkgaW5mb3JtYXRpb24gaW4gdGhlIGZvcm0gb2YgYSBwYW1waGxldCB3aWxsIGJlIG1hZGUgYXZhaWxhYmxlIHRvIHN0dWRlbnRzLCBhdCB0aGF0IHRpbWUuIApQYXJ0eSBQb2tlciBpcyBnb2luZyBpbiB0aGUgZGlyZWN0aW9uIG9mIGJlaW5nIHRoZSBuZXh0IGdvb2QgZ3V5LCBvZmZlcmluZyAyMCUgMzUlIHJha2ViYWNrIHBhaWQgb3V0IGV2ZXJ5IE1vbmRheS4gQWxzbyBvZmZlcmluZyAkMi4yMCBzYXR0ZWxpdGUgdGlja2V0cyBldmVyeSBkYXkgd2l0aCBhIGNsaWNrIGFuZCBjb2xsZWN0IHN5c3RlbSB3aGljaCBnb2VzIHVwIHRvIDEwayBwYWNrYWdlcy4gCldlIG11c3QgbGVhcm4gdG8gYmUgbW9yZSBhd2FyZSBvZiB0aGUgZW1vdGlvbnMgcGVvcGxlIGV4cGVyaWVuY2UgZHVyaW5nIG91ciBpbnRlcmFjdGlvbiB3aXRoIHRoZW0uIApPbmUgb2YgdGhlIGJlc3Qgd2F5cyB0byBhY2hpZXZlIHRoaXMgaXMgdG8gdXNlIGEgc3RyYXcgaW4gYSBnbGFzcyBvZiB3YXRlci4gCkpvaW4gYSBsb2NhbCBzcG9ydCB0byBtZWV0IHBlb3BsZSB3aXRoIHNpbWlsYXIgaW50ZXJlc3RzLiAKRXZlcnl0aGluZyBNdXN0IEdvIGFzIExpcXVpZGF0aW9uIFNhbGUgS2lja3MgT2ZmIGF0IEF0bGFudGljClRydW1wIGJ1dCBCZXJuaWUgdnMgdGhlIGVudHJlbmNoZWQsIGVsaXRlIERlbSBlc3RhYmxpc2htZW50Li4gCkkgdGhpbmsgYm90aCBoYW5kcyB3ZXJlIHBsYXllZCBjb3JyZWN0bHkgYnV0IEknZCBsaWtlIHRvIGhlYXIgc29tZSBpbnB1dC4KVGhlaXIgQ1BQIHdvdWxkIGluY3JlYXNlIGJ5IDguNCBwZXIgY2VudCBwZXIgeWVhciwgcGx1cyBpbmZsYXRpb24sIHRvIHJvdWdobHkgJDE3LDAwMCBhdCA3MC4gVGhlaXIgT0FTIHdvdWxkIGluY3JlYXNlIGJ5IDcuMiBwZXIgY2VudCBwZXIgeWVhciwgcGx1cyBpbmZsYXRpb24sIHRvIHJvdWdobHkgJDEwLDUwMC4gCkJhbmdrb2sgQ296eSBpcyBvbmUgb2YgdGhvc2UgZ3JhbmQsIHNwYWNpb3VzIHBhcmxvdXJzLiAKVGhlIE11c2ljIGRlcGFydG1lbnQgb2YgdGhlIFNpdGthIFdvbWFuJ3MgQ2x1YiB3aWxsIG1lZXQgaW4gdGhlIEdhbnR5IGhvJ21lIHRoaXMgKEZyaWRheSBGZWJydWFyeSA3dGh0KSBldmVuaW5nLiBNaXNzIFJvYW4gd2lsbCByZW5kZXIgc2VsZWN0aW9ucyBvbiB0aGUgb3JnYW4uIApCZWNhdXNlIGEgY2FwYWNpdG9yIGlzIGludm9sdmVkIGl0IGlzIGxpa2VseSB0d28gb2YgdGhlIGZpdmUgd2lyZXMgYXJlIGRlZGljYXRlZCB3aXJlcyBmb3IgdGhlIGNhcGFjaXRvciwgbGVhdmluZyB0d28gZm9yIHBvd2VyLCBhbmQgb25lIGFzIGEgY2hhc3NpcyBncm91bmQuIApJbnRlcm5hdGlvbmFsIGxlbmRpbmcgaXMgYW4gaW50ZWdyYWwgcGFydCBvZiBnbG9iYWwgdHJhZGUuIEFjdGluZyBsaWtlIHRoaXMgbG9hbiBpcyBzb21laG93IHNrZXRjaHkgaXMgZGlzaW5nZW51b3VzLiBUaGUgZmFjdCB0aGF0IERCIGlzIHByb2FjdGl2ZWx5IHJlc3RydWN0dXJpbmcgdGhlIGxvYW4gc2hvd3MgdGhhdCB0aGUgbG9hbiB3YXMgbm90IG9uZSB0aGF0IHdvdWxkIGJlIHNlZW4gYXMgaGF2aW5nIHRoZSBwb3RlbnRpYWwgdG8gbGV2ZXJhZ2UgYSBwcmVzaWRlbnQgaW50byBkaXZ1bGdpbmcgY2xhc3NpZmllZCBpbmZvcm1hdGlvbi4gREIgaXMgbm90IHRoZSBLR0I7IHRoZXkgaGF2ZSBhIHJlcHV0YXRpb24gdG8gdXBob2xkLgpZb3UgYXJlIG92ZXJzaW1wbGlmeWluZyB3aGF0IEhpbGFyeSBzYWlkIHRvIHN1cHBvcnQgdGhpcyBXV0lJSSBhcmd1bWVudC4gVGhlIGNydWNpYWwgcG9pbnQgaXMgdGhhdCBoZXIgcmhldG9yaWMgYW5kIHRocmVhdHMgbWlnaHQgaGF2ZSBhY3R1YWxseSBnaXZlbiBSdXNzaWEgcGF1c2Ugb3ZlciB0aGVpciBhY3Rpb25zIGluIHRoZSByZWdpb24uIFdoeSBpcyBpdCB0aGF0IHdoZW4gSGlsYXJ5IHNwZWFrcyBldmVyeXRoaW5nIGlzIHRha2VuIGxpdGVyYWxseSBidXQgRG9uYWxkIFRydW1wcyBzdGF0ZW1lbnRzIGR1cmluZyB0aGUgZGViYXRlIGFib3V0IGZpcmluZyB3ZWFwb25zIG9uIElyYW5pYW4gc2hpcHMgaXMgY29tcGxldGVseSBpZ25vcmVkLiBCb3R0b20gbGluZSBpcyB5b3UgY2FuIGdpdmUgZWl0aGVyIGNhc2UgYmVuZWZpdCBvZiBkb3VidCBpZiB5b3UgdmlldyB0aGVpciBzdGF0ZW1lbnRzIHRocm91Z2ggdGhlIGxlbnMgb2YgZ2VvcG9saXRpY2FsIHBvc3R1cmluZy4gVGhlIGNoYXJnZSB0aGF0LCBhcyB5b3UgcHV0IGl0LCAic2hlIFdBTlRFRCB0byBnbyB0byB3YXIgd2l0aCBSdXNzaWEuIiBSZWFsbHk/IFlvdSB0aGluayBzaGUgIndhbnRlZCIgaXQ/IExpdGVyYWxseSBubyBvbmUgb24gdGhpcyBwbGFuZXQgIndhbnRzIiB0aGF0LiBUaGUgaWRlYSBpcyBzdHVwaWQgb24gaXQgZmFjZSBhbmQgaXMgdHJhY2VhYmxlIGRpcmVjdGx5IGJhY2sgdG8gUnVzc2lhbiBzdGF0ZSBtZWRpYS4KSSBkbyBmaXJzdCBzZXNzaW9ucyBmb3IgdHdvIGhvdXJzLCBiZWNhdXNlIG9mIHRoYXQgbG9uZyBpbnRha2UuIApNYWRkb3cgaXMgcGFydCBvZiB0aGUgcHJvYmxlbS4gCkNvbGxlZ2UgVHVhbSBzdWZmZXJlZCBkaXNhcHBvaW50bWVudCBpbiB0aGVpciB3b21lbiBzZW5pb3IgQSBzY2hvb2xzIHNlbWkgZmluYWwsIGZvbGxvd2luZyBhIHRocmVlIHBvaW50ICgyIDcgdG8gMiAxMCApIGxvc3MgYWdhaW5zdCBTdCBMZW8gb2YgQ2FybG93IGluIE11bGxpbmdhciBvbiBTYXR1cmRheS4gClRlbm5lc3NlZSBoYXMgdmVyeSBzdHJpY3QgcnVsZXMgb24gd2hvIGNhbiBhbmQgY2FuJ3QgZmlsZSBmb3IgR1BSLiBUaGV5IGNhbiBvbmx5IGZpbGUgaWYgeW91ciBodXNiYW5kIGlzIGRlY2Vhc2VkLCB5b3UncmUgZGl2b3JjZWQsIG9yIHdlcmUgbmV2ZXIgbWFycmllZC4KTHVjaWEgTHV4dXJ5IEhvdGVsc1N0LiBMdWNpYSBCdXNpbmVzcyBIb3RlbHNTdC4gCkFjY29yZGluZyB0byB0aGUgVmljdG9yaWFuIHNjaWVudGlzdHMsIGhpZ2hseSBpbmZsdWVuY2VkIGJ5IERhcndpbmlhbiB0aGVvcnksIHRoZSBtb3N0IGFkdmFuY2VkIGN1bHR1cmVzIHdlcmUgdGhvc2Ugd2l0aCB0aGUgbW9zdCBleHRyZW1lIHNleCBkaWZmZXJlbnRpYXRpb24uIApQYWtldCBQZXJhd2F0YW4gUHJhIE5pa2FoIFBlbmdhbnRpbiBUZXJsZW5na2FwCkZlYXJzIGhhdmUgbGluZ2VyZWQgc2luY2UgdGhlIGRheXMgd2hlbiAwMDcgd2FzIHRyeWluZyB0byBhdm9pZCBiZWluZyBzbGljZWQgaW4gaGFsZiBieSBhbiBpbmR1c3RyaWFsIGxhc2VyIGluIHRoZSAxOTY0IGZpbG0gIkdvbGRmaW5nZXIsIiBEci4gUmllZ2VsIHNheXMuIkV2ZW4gdGhlc2UgZGF5cywgcHJhY3RpdGlvbmVycyBmZWVsIHRoYXQgd2FybXRoIGFuZCB3b3JyeSB0aGF0IHRvbyBtdWNoIHVzZSBvZiBhIHRoZXJhcGV1dGljIGxhc2VyIHdpbGwgZGFtYWdlIGNlbGxzLCIgc2F5cyBSaWVnZWwsIHdobyBwcmFjdGljZWQgZm9yIDIyIHllYXJzLiAKRU9TNEVWRVIgdQpCZWNhdXNlIGl0IGEgbW92aWUgYW5kIGl0IG5vdCByZWFsaXN0aWMuIFRoYXQgbGlrZSBzYXlpbmcgIldoeSBjYW4gbXkgd2lmZSBhbmQgSSBzdHJpdmUgZm9yIEFjdHVhbGx5IHN0YW5kYXJkcz8iIE9mIGNvdXJzZSB0aGVyZSBhcmUgdGVhY2hlcnMgb3V0IHRoZXJlIHdobyBhcmUgZmFudGFzdGljLCBidXQgaWYgdGhhdCBtb3ZpZSB3ZXJlIG1vcmUgcmVhbGlzdGljLCB0aGVyZSB3b3VsZCBiZSB0aGUgc3R1ZGVudHMgd2hvIHdlcmUgaW5zcGlyZWQgYnkgUm9iaW4gV2lsbGlhbXMgKGxpa2UgaW4gdGhlIG1vdmllKSwgYnV0IHRoZXJlIHdvdWxkIGFsc28gYmUgYSBmZXcgdGhhdCByZWFsbHkgY291bGRuIGNhcmUgbGVzcyBhYm91dCBFbmdsaXNoIGNsYXNzIGJlY2F1c2UgdGhlaXIgZGFkIGp1c3Qgd2VudCB0byBqYWlsIGFuZCB0aGV5IHJhdGhlciBzZWxsIGRydWdzLCBvciB0aGVpciBtb20gZGllZCBsYXN0IG1vbnRoIGFuZCB0aGV5IGdvaW5nIHRocm91Z2ggc29tZXRoaW5nIHRlcnJpYmxlIGFuZCB0aGV5IGp1c3QgY2FuIGJlIGFza2VkIHRvIHNob3V0ICJPaCBDYXB0YWluISBNeSBDYXB0YWluISIuClByb2JsZW0gc2VlbXMgdG8gYmUgaW4gdGhlIG1hdGNobWFraW5nIGFuZCB0aGVzZSAiaGlkZGVuIHJhdGluZyBtZWNoYW5pc21zIi4gSSBjYW4gYWNjZXB0IGdldHRpbmcgc3RvbXBlZCBvciBnZXR0aW5nIG1hdGNoZWQgYWdhaW5zdCBzdHJvbmdlciBkZWNrcyBzb21ldGltZXMsIGJ1dCB3aGVuIGl0IGZvdXIgbWF0Y2hlcyBvdXQgb2YgZml2ZSB0aGF0IGFyZSBsaWtlIHRoaXMgdGhlcmUgZG9lcyBzZWVtIHRvIGJlIGEgcHJvYmxlbSB3aXRoIHRoZSBtYXRjaG1ha2luZy4gCkluIGRlciA1LiBSZWloZSBtaXQgZGVyIEZlcnNlIGJlZ2lubmVuIChpbSBaaGxwbGFuIGlzdCBkaWUgUmVpaGUgbWl0IEYgZ2VrZW5uemVpY2huZXQpOiA4IE0ga3JhdXMgZnIgQm5kY2hlbiBzdHJpY2tlbiwgZGllIDM2LiB1bmQgMzcuIE0gcmVjaHRzIHp1c2FtbWVuc3RyaWNrZW4sIGRpZSAzOCB1bmQgMzkgTSBiZXJ6b2dlbiB6dXNhbW1lbnN0cmlja2VuICg9IGRpZSAzOCBNIGFiaGViZW4sIGRpZSAzOSBNIHJlIHN0cmlja2VuLCBkaWUgYWJnZWhvYmVuZSBNYXNjaGUgYmVyIGRpZSAzOSBNIHppZWhlbikuIFJja3JlaWhlIGRpZSBNYXNjaGVuIHN0cmlja2VuLCB3aWUgc2llIGtvbW1lbi4gSW5zZ2VzYW10IDd4IGRpZSBGZXJzZW5yZWloZSBzdHJpY2tlbiAocy4gQWJ6aGxwbGFuIGRpZSBSZWloZW4gbWl0IEYpLCBkYWJlaSBpbW1lciB2b3IgdW5kIGhpbnRlciBkZXIgQWJuYWhtZW1pdHRlIGRpZSBNYXNjaGVuIHp1c2FtbWVuIHN0cmlja2VuLgpXZWFyIGRhcmsgY2FzdWFsIGNsb3RoZXMgd2l0aCBubyBsb2dvczogSSB3ZWFyIGEgYmxhY2sgdCBzaGlydCwgYmxhY2sgamVhbnMgcm9sbGVkIHVwIGEgYml0LCBhbmQgc25lYWtlcnMuIAoxMCBPaGlvYW5zIGluZGljdGVkIGZvciBjYXNpbm8gY2hlYXRpbmcKSGUgc3Bva2UgYWJvdXQgc3dlZXBpbmcgY2hhbmdlcyBpbiB0ZWNobm9sb2d5IGJlY2F1c2Ugb2YgdGhlIGVtZXJnZW5jZSBvZiBhcnRpZmljaWFsIGludGVsbGlnZW5jZSwgbWFjaGluZSBsZWFybmluZyBhbmQgZGVlcCBsZWFybmluZy4gU2lra2EgZXhwbGFpbmVkIHRoZSB6ZXJvIGRpc3RhbmNlIGNvbmNlcHQgYW5kIGhvdyBpdCBmaXRzIGludG8gaGlzIHN0cmF0ZWd5IGZvciBJbmZvc3lzLiAKU2l0IGRvd24gYXQgYSBuZXcgdGFibGUgd2l0aCA2MGJiIGluIHRoZSBNR01OSCAkMzYwIFN1bmRheSB0b3VybmFtZW50LiBUaHJlZSBvZiB0aGUgbmV4dCBmb3VyIGhhbmRzIEkgcGxheToKSSBoYWQgbGlrZSA1IGJhZ3Mgb2YgbXkgb3duIGFuZCB0aGVuIEkgdG9vayA1IG9mIGhpcyBhcyB3ZWxsIGFuZCB3ZSB3ZW50IHRvIGhpcyBob21lLiAKR2VybWFuIFZpcmdpbnMgTWVkYWxsaW9uIFBva2VyIENhcmQgUHJvdGVjdG9yIFJldmlldwpJdHMgcHJldHR5IG11Y2ggbHVjayBhbmQgZWl0aGVyIGhhbmQgaXMgZmluZS4gSW4gdGhlIGxvbmcgcnVuIHlvdSB3b3VsZCB3YW50IHRocmVlcyBldmVyeSB0aW1lLCBhbmQgeW91LGQgbWFrZSAuMDIlIHByb2ZpdCwgYnV0IHRoYXQgYW1vdW50IG9mIGhhbmRzIGlzbid0IHBvc3NpYmxlIGFuZCB0aGUgcHJvZml0IGlzIG5lZ2xpZ2libGUuIApCcmV3IENpdHkgY2hlY2tpbmcgaW4uIApIZSBiaXRjaGVzIGFuZCBtb2FucyBvbiBmdWNraW5nIFR3aXR0ZXIgd2hlbiBuZXcgaW5mbyBhYm91dCBpbnZlc3RpZ2F0aW9uIGlzIHJlbGVhc2VkLCBzb21ldGhpbmcgdGhhdCBJIGRvbid0IHNlZSBpbm5vY2VudCBwZW9wbGUgZG9pbmcuIApFaWdodCBtb250aHMgYWdvLCBJIG1ldCB0aGUgZmlyc3QgZ3V5IEkndmUgaGFkIGEgcmVhbCBjb25uZWN0aW9uIHdpdGggc2luY2UgZ2V0dGluZyBvdXQgb2YgYSBmb3VyIHllYXIgcmVsYXRpb25zaGlwLiBXZSByZWFsbHkgZ2V0IGFsb25nIGFuZCBoYXZlIGEgc3Ryb25nIGNvbm5lY3Rpb24gICBvciBzbyBJIHRoaW5rLiBIZSB3YXMgbW92aW5nIG91dCBvZiB0aGUgY291bnRyeSBpbiBhIGZldyBtb250aHMsIHNvIHdlIGRlY2lkZWQgdG8ga2VlcCB0aGluZ3MgImNhc3VhbCIgYmVjYXVzZSBvZiB0aGUgYmFkIHRpbWluZyB3aXRoIGhpbSBsZWF2aW5nICAgb3Igc28gSSB0aG91Z2h0LiAKSWYgSSBmaW5kIG91dCBpdCBpcyBzb21ldGhpbmcgb3RoZXIgdGhhbiBhIGp1bXBpbmcgc3BpZGVyIEkgd2lsbCBsZXQgeW91IGtub3cuIApJbiB0aGlzIGNhc2UsIGlmIHlvdSBwYXNzIHRoZSBleGFtIHlvdSBoYXZlIHVwIHRvIDQ4IG1vbnRocyB0byBnZXQgeW91ciBleHBlcmllbmNlIGxldmVscyB1cCB0byBzcGVlZC4uIApGb2xsb3dlZCBieSBtb3ZpbmcgYmFjayB0byB0aGUgQ09BIGFuZCBmaWxpbmcgYnJpZWZzLiBOb3RoaW5nICJzb29uIiBieSBhbnlvbmUgZGVmaW5pdGlvbiwgSSB0aGluay4gCk5vdGU6IFRoZSBsYXR0ZXIgdHdvIGV4ZXJjaXNlcyB3ZXJlIG5vdCBleHBsYWluZWQgd2l0aCB0ZXh0IGFsb25lIChpbGx1c3RyYXRpb25zIHdlcmUgcmVxdWlyZWQpLCBzbyB3ZSBoYXZlIGNob3NlbiBub3QgdG8gcmVwcm9kdWNlIHRob3NlIGRlc2NyaXB0aW9ucyBoZXJlLgpTb21lIG9mIHRoZSBwbGF5ZXJzIGFyZSBzdXBlcnN0aXRpb3VzIGFuZCBzb21lb25lIG9uIGEgaG90IHN0cmVhayBtaWdodCBub3Qgd2FudCB0byBzZW5kIGEgdGhlcmFwaXN0IGF3YXksIExheW9nIHNhaWQuIApCdXQsIGFzIGZhciBhcyBDYW5hZGlhbnMgZ28sIHRoZXJlIGEgYmlnIHJpdmFscnkgd2l0aCB0aGUgZ3V5cyBmcm9tIFRvcm9udG8uIApEb3dubG9hZCBhbmQgYnV5IGhpZ2ggcXVhbGl0eSBXaGlzdGxpbmcgVGVhIEtldHRsZSBzb3VuZCBlZmZlY3RzLiAKIlRoZSBmbG9vcnMgYXJlIGdvbmUgYW5kIHNvbWUgb2YgdGhlIG1hdGVyaWFsIGZyb20gdGhlIGZsb29ycyBhbmQgdGhlIG90aGVyIHBhcnRzIG9mIHRoZSBzdHJ1Y3R1cmUgdGhhdCBjb2xsYXBzZWQgY3JlYXRlZCB2b2lkIHNwYWNlcyBhbmQgdGhlIGZpcmUgaXMgYnVybmluZyBpbiB0aGVtLiAKVGhlIDI5IHllYXIgb2xkIGZyb20gV2ludGVyIEhhdmVuLCBGbGEuLCBjZWxlYnJhdGVkIHRoZSBiaXJ0aCBvZiBoaXMgZmlyc3QgY2hpbGQgICBNYXZlcmljayBKZXJvbWUgS2V2aW4gQ2FwZXJzICAgaW4gSmFudWFyeSBoZXJlIGluIExvbmRvbi4gVGhyZWUgZGF5cyBsYXRlciBoZSBzaG90IDUgb2YgNiBmcm9tIHRoZSBmbG9vciB0byBoZWxwIHRoZSBCb2x0cyB0byBhIGJpZyB3aW4gb3ZlciB0aGUgSyBXIFRpdGFucy4uIApXZSBub3QgZXZlbiBsb29raW5nIGF0IGFueSByZWFsIFJ1c3NpYWdhdGUgY2hhcmdlcyB5ZXQuCkkgaGFkIHRoZSA1MDAgNjAwIGpvYiBhbmQgZ290IGEgNzAwIDkwMCBqb2IuIEEgY291cGxlIG9mIHBlb3BsZSBhdCBteSBuZXcgam9iIHRvbGQgbWUgdGhhdCB0YXggc2l0dWF0aW9uIHdvdWxkIHNvYWsgbWUuIEkgZnJlYWtlZCBvdXQgYSBiaXQgdGhlbiBjYWxtZWQgZG93biBhbmQgd2VudCB0byB0aGUgdGF4IG9mZmljZSB0byBhc2sgdGhlbS4gV2hpbGUgSSBjYW4gbm90IGdpdmUgeW91IGV4YWN0IG51bWJlcnMgKGRvbiBmZWVsIGxpa2UgbG9va2luZyBpdCB1cCkgdGhlIHdob2xlIHRoaW5nIGVuZGVkIHVwIGJlaW5nIHdlbGwgd2l0aCBpbiB3aGF0IEkgY29uc2lkZXJlZCBmYWlyLiAKWW91IG1pZ2h0IGFsc28gYmUgaW50ZXJlc3RlZCBpbiBQb2x5dmFnYWwgdGhlb3J5LiAKQW0gSSB0aGUgb25seSBvbmUgd2hvIHRoaW5rcyBpdCBjcmF6eSBoZXIgd2hvbGUgSW5zdGFncmFtIGFjY291bnQgaXMganVzdCBoZXIgc2VsbGluZyBzdHVmZj8gVGhlcmUgbm90IGEgc2luZ2xlIHBvc3QgYWJvdXQgaGVyIGxpZmUgd2hlcmUgc2hlIG5vdCBwdXNoaW5nIHNvbWUgY3JhcHB5IHB1cnNlcyBvciBkaWFycmhlYSB0ZWEuIEFuZCBJIGtub3cgc2hlIHByb2JhYmx5IGRvZXNuIHB1dCBwZXJzb25hbCBzdHVmZiBvbiB0aGVyZSBiZWNhdXNlIHBlb3BsZSBoYXRlIGhlciBidXQgc2hlIGNvdWxkbiBhbHdheXMgbWFrZSBoZXIgYWNjb3VudCBwcml2YXRlLiBUaGUgc2Vhc29uIGlzIG92ZXIuIAo5MCBQZXJjZW50IE9mIFRlYWNoZXJzIFJldHVybiBUbyBGbG9yaWRhIENvdW50eSBIYXJkZXN0IEhpdCBCeSBTdG9ybVRoZXJlIGlzIHNvbWUgc2Vuc2Ugb2Ygbm9ybWFsY3kgcmV0dXJuaW5nIHRvIHN0b3JtIHJhdmFnZWQgcGFydHMgb2YgdGhlIEZsb3JpZGEgUGFuaGFuZGxlLgpJIHdhc24ndCBleGFjdGx5IG9uIHRoZSBlZGdlIG9mIG15IHNlYXQgd29uZGVyaW5nIHdoZXRoZXIgR29yZG9uIHdhcyBnb2luZyB0byBwdWxsIHRocm91Z2guYWN0X3N1cnByaXNlZCAgMTAgcG9pbnRzICBzdWJtaXR0ZWQgMTcgaG91cnMgYWdvVGhlcmUgYXJlIHNvbWUgY29uZnVzaW5nIHBhcnRzIGFib3V0IEFsYXJhJ3MgZGVwYXJ0dXJlLiBTaGUgc3RhcnRlZCB0byBsb3NlIGhlciBzdHJlbmd0aCBhbmQgZXZlcnlvbmUgd2FzIHN1cnByaXNlZCwgYXMgaWYgaXQgd2VyZSB1bmV4cGVjdGVkIGFuZCB1bmhlYXJkIG9mLiBUaGV5IGRlc2lnbmVkIGEgdW5pcXVlIHRyYWluaW5nIHNpbXVsYXRpb24gdG8gaGVscCBoZXIgcmVtYWluIG9uIHRoZSBzaGlwIHdpdGhvdXQgYWNjbGltYXRpbmcgdG8gaXRzIGdyYXZpdHkgYW5kIHRodXMgbG9zaW5nIGhlciBzdHJlbmd0aC5UaGF0J2QgYmUgYWxsIHdlbGwgYW5kIGdvb2QgaWYgc2hlIHdlcmUgdGhlIG9ubHkgWGVsYXlhbiB0byBiZSBzZXJ2aW5nIGluIHRoZSBVbmlvbiBvciBtb3JlIGxpa2VseSB0aGUgb25seSBvbmUgdG8gZXZlciB0cmF2ZWwgb2ZmIHdvcmxkLiAKSmEgZGFzIGlzdCBlaW5lIHN1cGVyIGdlaWxlIElkZWUuIApMYXN0bHkgaW4gdGhpcyBzaG9ydCBwb3N0IEkgaW5jbHVkZSBhbiBpbnRlcmVzdGluZyB2aWV3IG9mIHRoZSBmdXR1cmUsIGZvdW5kIGF0IHRoZSBlbmQgb2YgYW4gYXBwcmVjaWF0aW9uIG9mIEpvaG4gUm9lYmxpbmcgaW4gYSB2b2x1bWUgb2YgdGhlIEpvdXJuYWwgb2YgdGhlIEZyYW5rbGluIEluc3RpdHV0ZSBmb3IgMTg2Ny4gSXQgaXMgYSBzdGF0ZW1lbnQgb24gdGhlIHBsYW5zIGZvciBidWlsZGluZyB0aGUgQnJvb2tseW4gQnJpZGdlIGF0IHRlaCB0aW1lIGl0IHdhcyBzdGlsbCB0aGUgIk5ldyBZb3JrIGFuZCBCcm9va2x5biBCcmlkZ2UiLCBhbmQgdGhlbiB0aGUgIkVhc3QgUml2ZXIgQnJpZGdlIiwgdGhvdWdoICJCcm9va2x5biBCcmlkZ2UiIHdhcyBhbHNvIHVzZWQsIHRoZSBvZmZpY2lhbCBkZXNpZ25hdGlvbiBvZiB0aGF0IGZpbmFsIG5hbWUgY29taW5nIGluIDE5MTUuIEluIGFueSBldmVudCwgaXQgaXMgYW4gZW5qb3lhYmxlIHJlcG9ydCwgYW5kIGF0IHRoaXMgcG9pbnQgdGhlIGRvZ3MgcHJvYmFibHkgcmVhY3RlZCBsaWtlIG1vc3QgaHVtYW5zIGRpZCBoZWFyaW5nIHRoZSB0ZWxlcGhvbmUgZm9yIHRoZSBmaXJzdCB0aW1lLiAKVGhlIFVTU0YgZGlkIG5vdCBoYXZlIGFuIGltbWVkaWF0ZSBjb21tZW50LiBuYXRpb25hbCB0ZWFtcyBoYXZlIHNlcGFyYXRlIGNvbGxlY3RpdmUgYmFyZ2FpbmluZyBhZ3JlZW1lbnRzLCBhbmQgdGhlaXIgcGF5IGlzIHN0cnVjdHVyZWQgZGlmZmVyZW50bHkuIFRoYXQgbWVhbnMgdGhlcmUgaXMgbm8gZG9sbGFyIHRvIGRvbGxhciBzYWxhcnkgY29tcGFyaXNvbi4KWW91ciBhbHNvIGlnbm9yaW5nIHRoYXQgU3VyYW1hciB3YXMgdGhlIG1haW4gaGlnaGxpZ2h0IG9mIHRoZSBmaXJzdCBtYWpvciBjb250ZW50IHBhdGNoIGFyb3VuZCBuaWdodGhvbGQsIHdoaWxlIDguMTUgaGFzbnQgZXZlbiBkcm9wcGVkIHlldCBhbmQgaXMgaHlwZWQgdG8gaGF2ZSB0b25zIG9mIG5ldyBjb250ZW50IHNvIHlvdXIgYmFzaWNhbGx5IGNvbXBhcmluZyB0aGUgZW50aXJlIGZpcnN0IGhhbGYgb2YgTGVnaW9uIHRvIHdoYXQgQmxpenphcmQgZ2F2ZSB1cyBhdCBsYXVuY2ggZm9yIEJmQQpFbHNld2hlcmUgaW4gdGhlIHRvcCB0ZW4gYXJlIGFub3RoZXIgMTIgeWVhciBvbGQgd2hvIHJhbiBhIDE5IG1pbnV0ZSA1SyBhbmQgeWV0IGFub3RoZXIgMTIgeWVhciBvbGQgd2hvIHJhbiBhIDE5OjExLiAKTXkgbW90aGVyIGlzIGxpa2UgdGhpcy4gSXQncyBoYXJkZXIgdGhhbiBqdXN0IGJlaW5nIGFuIG91dHJpZ2h0IGJpdGNoLiBTaGUgc2VlbXMgc3dlZXQgdG8gb3V0c2lkZXJzIGFuZCBJIGhhdmUgYmVlbiBhc2tlZCBieSBkb3plbnMgb2YgcGVvcGxlIHdoeSB3ZSBkb24ndCBoYXZlIGEgY2xvc2VyIHJlbGF0aW9uc2hpcCwgYnV0IGV2ZW50dWFsbHkgbXkgbW9tIGxldHMgZG93biBoZXIgZ3VhcmQuIEkgZG9uJ3QgaGF2ZSBhbnkgYWR2aWNlIGJ1dCBJIGNhbiBlbXBhdGhpemUgMTAwJS4KRm9yIGV4YW1wbGUsIHdoZW4geW91IHZpc2l0IGEgd2Vic2l0ZSB0aGF0IHVzZXMgUmVkZGl0IGVtYmVkcywgd2UgbWF5IHJlY2VpdmUgaW5mb3JtYXRpb24gYWJvdXQgdGhlIHdlYiBwYWdlIHlvdSB2aXNpdGVkLiBZb3UgY2FuIGNvbnRyb2wgaG93IHdlIHVzZSB0aGlzIGluZm9ybWF0aW9uIHRvIHBlcnNvbmFsaXplIHRoZSBTZXJ2aWNlcyBmb3IgeW91IGJ5IGFkanVzdGluZyB5b3VyIHByZWZlcmVuY2VzIGhlcmUuLiAKIlJvZ2VycyBpcyBldmVyeXdoZXJlLCIgc2hlIHNheXMuICJJdCdzIG9uZSBvZiB0aGUgcmVhc29ucyBJIGVuam95IHdvcmtpbmcgaGVyZS4gV2UncmUgcGFydCBvZiB0aGUgY29tbXVuaXR5LiBBbmQsIiBzaGUgYWRkcywgIndlIGdldCBhIDUwIHBlciBjZW50IGRpc2NvdW50IG9uIEJsdWUgSmF5cyB0aWNrZXRzLiIKSWYgaGUgd2FzIGFza2VkIHRvIGJvd2wgMTQgb3IgMTUgb3ZlcnMgaW4gYSBUZXN0LCB5b3UgbWlnaHQgZ2V0IGhpbSB0byBjaGFuZ2UgaGlzIG1pbmQuIAoyOiBXZW50IHRvIGEgY2FsbCB0byBhIGN1c3RvbWVycyBwb29sIGhvdXNlIEEvViBzeXN0ZW0gdGhhdCB3YXMgImFjdGluZyB1cCIuIFRoaXMgY3VzdG9tZXIgd2FzIGEgRHIuJ3MgdHJvcGh5IHdpZmUgdGhhdCBoYWQgbm8gcHJvYmxlbSBncmVldGluZyB5b3UgaW4ganVzdCBhIHRvd2VsIGFuZCB0aGVuIGxheWluZyBvdXQgbnVkZSBvbiB0aGUgcG9vbCBkZWNrIHdoaWxlIHlvdSB3ZXJlIHdvcmtpbmcuIEhhcHBlbmVkIHRvIGEgZmV3IG9mIHVzIGFuZCB0aGlzIHdhcyBvbmUgY3VzdG9tZXIgd2UgYWxsIGZvdWdodCBvdmVyIHRyeWluZyB0byBnZXQgdG8gcnVuIGNhbGxzIGZvci4uIApPbmxpbmUgcG9rZXIgdG91cm5hbWVudCBhcmUgZXZlbnRzIGluIHdoaWNoIHBsYXllcnMgY29tcGV0ZSB0byB3aW4gYSBwYXJ0IG9mIHRoZSB0b3RhbCBwcml6ZSBwb29sLiBUaGUgZ2VuZXJhbCBvYmplY3RpdmUgb2YgZWFjaCBwb2tlciBnYW1lIGlzIHRvIGNvbGxlY3QgYWxsIG9mIHRoZSBjaGlwcyBpbiBwbGF5LiBBdCBldmVyeSB0YWJsZSBpbiB0aGUgdG91cm5hbWVudCB0aGUgcGxheWVycyBjb21wZXRlIHVudGlsIHRoZXJlIGlzIG9ubHkgb25lIHdpbm5lciBvciB1bnRpbCBvbmUgb2YgdGhlIGNvbnRlc3RhbnRzIGxvc2VzIGFsbCB0aGVpciBjaGlwcy4gVGhlIHJlbWFpbmluZyBjb250ZXN0YW50cyB0aGVuIHByb2dyZXNzIHRocm91Z2ggdG8gdGhlIGZvbGxvd2luZyByb3VuZCwgdW50aWwgdGhlcmUgYXJlIG9ubHkgYSBmZXcgcGxheWVycyBsZWZ0IGluIHRoZSB0b3VybmFtZW50LiBUaGVzZSB3aW5uZXJzIHRoZW4gcGxheSBhZ2FpbnN0IGVhY2ggb3RoZXIgYXQgdGhlIHdpbm5lcnMgdGFibGUgdG8gZGV0ZXJtaW5lIHRoZSB0b3VybmFtZW50IGNoYW1waW9uLiBQbGF5ZXJzIGFyZSB0aGVuIHJlc2VhdGVkIGF0IGZld2VyIHRhYmxlcyB1bnRpbCBvbmx5IG9uZSB0YWJsZSBpcyBsZWZ0LiBUaGUgcGF5b3V0IHN0cnVjdHVyZSBpcyBzZXQgdXAgdG8gYXdhcmQgYWxsIHRoZSBmaW5hbGlzdHMsIHdpdGggZmlyc3QgcGxhY2UgYmVpbmcgYXdhcmRlZCBtb3JlIHRoYW4gdGhlIHNlY29uZCBhbmQgc2Vjb25kIG1vcmUgdGhhbiB0aGUgdGhpcmQsIGV0Yy4KRXZlcnlib2R5IGVuam95cyBnZXR0aW5nIGEgbWFzc2FnZSBmcm9tIHRpbWUgdG8gdGltZSwgYnV0IHdoYXQgeW91IGRvIG5vdCBrbm93IGlzIHRoYXQgbWFzc2FnZSBoYXMgaGlkZGVuIGJlbmVmaXRzLCB5b3UgaGF2ZSBwcm9iYWJseSBuZXZlciB0aG91Z2h0IGFib3V0LiBTdGFydGluZyBmcm9tIGZvb3QgbWFzc2FnZSByZWZsZXhvbG9neSBhbmQgdXAgdG8gc3BvcnRzIHJlbWVkaWFsIG1hc3NhZ2UgU3lkbmV5LCBtYWtpbmcgcm9vbSBmb3IgcmVndWxhciBtYXNzYWdlIHNlc3Npb25zIHdpbGwgYmUgaHVnZSBwbHVzIGZvciB0aGUgaGVhbHRoIG9mIHlvdXIgYm9keSBhbmQgbWluZC4gRXZlbiB0aG91Z2ggeW91IHByb2JhYmx5IGVuam95IGdldHRpbmcgbWFzc2FnZXMsIHlvdSBtaWdodCBoYXZlIG5ldmVyIGdpdmVuIHRoaXMgc3ViamVjdCBhIHNwZWNpYWwgaW50ZXJlc3QuIEJlaW5nIGEgcmVndWxhciBhdCB0aGUgc3BhIG1heSBzaWduaWZpY2FudGx5IGltcHJvdmUgeW91ciBoZWFsdGguCkJlYXN0aWVOb2lzZSB1CkFsc28sIG5vdCB0aGF0IHRoZXJlIGFueXRoaW5nIHdyb25nIHdpdGggeW91LCBidXQgaWYgeW91IGRvIGRlY2lkZSB5b3UgbGlrZSB0byBsZWFybiBob3cgdG8gb3JnYXNtIG1vcmUsIG1heWJlIGxvb2sgaW50byBmaW5kaW5nIGEgc2V4IHRoZXJhcGlzdD8KQ29yayBOZXcgWW9yayBmbGlnaHRzICd3aXRoaW4gdGhyZWUgeWVhcnMnCkkga25vdyB0aGlzIGlzIG9mZiB0b3BpYyBmcm9tIHRoZSBPUCwgYnV0IHRoaXMgY29udGlub3VzIHBhcmFkZSBvZiBPeiBtZXRhbCBoYXMgbWUgZXh0cmVtZWx5IGN1cmlvdXMgYW5kIGZydXN0cmF0ZWQ6IEFtZXJpY2FucyBub3RvcmlvdXNseSB3aWxsIGltcG9ydCBzb21ldGhpbmcgZnJvbSBKYXBhbiwgb3IgYnJpbmcgaG9tZSBhIGdyZXkgbWFya2V0IGNhciBmcm9tIG92ZXJzZWFzIHNlcnZpY2UsIGJ1dCB3aGF0IGlmIGkgd2FudGVkIGEgSG9sZGVuPyBvciBhbiBBdXNzaWUgRm9yZD8gYW55b25lIGdvdCBhbnkgaW5mbyBvbiB0aGF0PyBJIGFtIGFsd2F5cyBpbXByZXNzZWQgd2l0aCB0aGUgdmVoaWNsZXMgdGhlcmUuIFRoZSBNYWxvbywgcHJldHR5IG11Y2ggYW55dGhpbmcgd2l0aCBhIEhTViBvciBGUFYgYmFkZ2UsIHRoZSBGYWxjb25zIG9mIG1vc3QgdmludGFnZXMsIHNwZWNpZmljYWxseSB0aGUgdHVyYm8gWFI2IHRyaW1zICh0aGUgc3RyYWlnaHQgc2l4IGlzIGFsbCBidXQgZGVhZCBoZXJlIGluIEFuZCB0aGUgdXRlcywgb29vb28gaSBsb3ZlIHRoZSB1dGVzLiAKTXkgaG9yc2Ugd291bGQgcmVmdXNlIHRvIHBpY2sgdXAgaGlzIHJpZ2h0IGxlYWQsIGJ1Y2ssIGFuZCBqdXN0IGdlbmVyYWxseSBzZWVtIHVuaGFwcHkgaW4gaGlzIHdvcmsuIFdlIGNoZWNrZWQgdGFjayBhbmQgdGhhdCB3YXMgYWxsIGdvb2QuIApBVCBVVyBJTlNUSVRVVEVTIE1BRElTT04gICBKb2huIER1bnBoeSwgSG91Z2ggU2hhZGUgQ29ycC4sIGF0dGVuZGVkIHRoZSBpbnN0aXR1dGUgb24gbGVhZGVyc2hpcCBhbmQgcGVyc29uYWwgZ3Jvd3RoIGF0IHRoZSBVbml2ZXJzaXR5IG9mIFdpc2NvbnNpbiByZWNlbnRseS4gUmljaGFyZCBNZXJnZW4gb3IuIApXaGlsZSBtb3N0IFRoYW5rc2dpdmluZyB0cmF2ZWxlcnMgd2lsbCBmaWdodCBmb3Igb3ZlcmhlYWQgYmlucyBhbmQgZ28gaG91cnMgd2l0aG91dCBhIHNuYWNrIG9yIHJvb20gdG8gc3RyZXRjaCB0aGVpciBsZWdzLCBsaWZlIGluIGZpcnN0IGNsYXNzIGlzIHN0cmVzcyBmcmVlLiBJdCBhbHdheXMgYmVlbiBhIHNwZWNpYWwgcGxhY2Ugb24gdGhlIG90aGVyIHNpZGUgb2YgdGhlIGN1cnRhaW4uIApUaGUgc3RvbmVyIHRyYXBzIGFuZCBzdWVrdW5pIHRyYXBzIGFyZSBsaWtlIHBhdHRlcm5zIGFzIHdlbGwuIEFjdHVhbGx5IG1vc3Qgc3RyYXRlZ3kgZWxlbWVudHMgYXJlIGJhc2VkIG9uIHNvbWUgcGF0dGVybnMgLyBjb25zdGFsbGF0aW9ucy4gQnV0IHlvdSBuZWVkIHRvIGZpbmQgbXVjaCBtb3JlIHBhdHRlcm5zIGFuZCBsZWFybiB0byBldmFsdWF0ZSB0aGVtIHRoZW4gdGhlcmUgYXJlIG5hbWVkIHN0cmF0ZWd5IGVsZW1lbnRzLgpUaGV5IHRlbmQgdG8gZ2V0IGJ1aWxkdXAgaW4gdGhlaXIgZWFycyBvdmVyIHRpbWUgdGhhdCBzaG91bGQgYmUgY2xlYW5lZCBvdXQuIFN0aWxsLCBJIGVzdGltYXRlIHRoYXQgaXQgb25seSB0YWtlcyAxMCAxNSBtaW51dGVzIHRvIGRvIGEgZnVsbCBiYXRoICsgY2xhd3MgKyBlYXJzLldlIGFsc28ga2VlcCB0aGVpciBuYWlscyB0cmltbWVkIG1vcmUgb2Z0ZW4gdGhhbiB3ZSB3b3VsZCBhIG5vcm1hbCBjYXQsIHNpbmNlIHRoZXkgY2FuIGFjY2lkZW50YWxseSBzY3JhdGNoIHRoZW1zZWx2ZXMgKG9yIGVhY2ggb3RoZXIpIGR1ZSB0byB0aGUgbGFjayBvZiBmdXJyeSBhcm1vci5Zb3UgY2FuIGFsc28gY2xlYW4gdGhlbSB3aXRoIGNvY29udXQgb2lsLCBpZiBhIGZ1bGwgd2F0ZXIgYmF0aCBpcyB1bmRlc2lyYWJsZSBhdCB0aGUgbW9tZW50ICAgcGx1cywgaXQgZ3JlYXQgZm9yIHRoZWlyIHNraW4hY2hpdmVfbWFjaGluZSAgNCBwb2ludHMgIHN1Ym1pdHRlZCAyIHllYXJzIGFnb0JhdGhpbmcgdGVuZHMgdG8gaGFwcGVuIGJldHdlZW4gb25jZSBhIHdlZWsgYW5kIG9uY2UgYSBtb250aCAgIGluIHRoZSBkcnllciBtb250aHMsIHRoZXkgc2VlbSB0byBnZXQgbGVzcyBvaWwgYnVpbGR1cCBvbiB0aGVpciBza2luLCBzbyB0aGV5IGJvdGggbmVlZCB0byBiZSBiYXRoZWQgbGVzcyBhbmQgYXJlIG1vcmUgcHJvbmUgdG8gaGF2aW5nIGRyeSBza2luIGlzc3VlcyBpZiBiYXRoZWQgdG9vIG9mdGVuLlNwaHlueCB2YXJ5IHByZXR0eSBzaWduaWZpY2FudGx5IG9uIGhvdyBtdWNoIGZ1ciB0aGV5IGhhdmUgICB0aGVyZSBhcmUgc29tZSBjYXRzIHRoYXQgaGF2ZSBiYXNpY2FsbHkgbm9uZSAoYW5kIHRoZWlyIHNraW4gY2FuIGZlZWwga2luZCBvZiB0YWNreSB0byB0aGUgdG91Y2gpLCBhbmQgdGhlcmUgYXJlIHNvbWUgY2F0cyAocGFydGljdWxhcmx5IHJlY2VudCBkZXNjZW5kYW50cyBvZiBvdXRjcm9zc2VzKSB0aGF0IGFyZSBhbG1vc3QgZnVsbHkgZnVycmVkIChhbHRob3VnaCB0aG9zZSBjYW4gYmUgc2hvd24pLiAKSSBkb24ndCBrbm93IGhvdyBtYW55IG9mIHlvdSBzdGF5ZWQgdXAgdG8gd2F0Y2ggbXkgYmFuYW5hIGJhY2tlZCwgc3F1YXJlIGV5ZWQgcG9rZXIgcGVyZm9ybWFuY2Ugb24gbGFzdCB3ZWVrcyBTa3kgU3BvcnRzIFBva2VyIE1pbGxpb24gICBUaGUgTWFzdGVycy4gQSBmZXcgZnJpZW5kcyBvZiBtaW5lIGRpZCwgYW5kIHN1Z2dlc3RlZCBpdCB3YXNuJ3Qgc28gZWFzeSB0byBmb2xsb3cgd2hhdCB3YXMgaGFwcGVuaW5nLiBTbyBoZXJlJ3MgYSBmZXcgaGludHMgYW5kIGV4cGxhbmF0aW9ucyBvZiB3aGF0IHdhcyBnb2luZyBvbiwgb3IgbW9yZSBhY2N1cmF0ZWx5LCB3aHkgaXQgd2FzIGdvaW5nIG9uLiAKSWYgeW91IHRyeSB0byBjb3VudGVyIHRoZSBwZXJzb24ncyBuZWdhdGl2aXR5LCB0aGV5IG1heSBub3QgcmVzcG9uZCB3ZWxsLiBUaGlzIGlzIG5vdCBhIHByb2JsZW0gc29sdmVkIHNvbGVseSBieSBsb2dpYy4KV2hlbiBkb2luZyBjYXNoIG91dHMsIGl0IGdvZXMgZGlyZWN0bHkgdG8geW91ciBjYXJkLiAKQmUgd2F0Y2hmdWwuIApDYWxsaW5nIGl0IEhhcnJhaD9zIFBoaWxhZGVscGhpYSB3YXMgYSBtYXJrZXRpbmcgZGVjaXNpb24sIHNvIGRvbj90IGxldCB0aGUgbmFtZSBmb29sIENocmlzdGluZSBDYW0sIGVIb3cgQ29udHJpYnV0b3IgU2hhcmUgQSB3aW5uaW5nIGhhbmQgV2lubmluZyBhdCBGdWxsIFRpbHQgUG9rZXIgaXMgZnVuIGFuZCBwcm9maXRhYmxlLiAKVGhhbmtzIHNvIG11Y2ggZm9yIGNoZWNraW5nIGluIQpCYW5rcm9sbCBtYW5hZ2VtZW50IGlzIE1VQ0ggbW9yZSBpbXBvcnRhbnQgdGhhbiBza2lsbC4gU2tpbGwgY2Fubm90IG92ZXJjb21lIGxhY2sgb2YgYmFua3JvbGwgbWFuYWdlbWVudC4gVGhlIHJ1bGVzIGFyZSBwcmV0dHkgc2ltcGxlLiAKVGhlc2UgY29tcGxleGVzIHdlcmUgbW9yZSB0aGFuIGp1c3QgYmF0aHR1YnMgICB0aGV5IHdlcmUgdGhyZWUgcGFydCBzd2ltbWluZyBwb29scyBmb3IgYW4gZW50aXJlIHNwYSByZWdpbWVuLCBmcm9tIHRoZSBsb2NrZXIgcm9vbSB3aGVyZSB5b3Ugc3RvcmVkIHlvdXIgY2xvdGhlcyAob3Igc3RvbGUgb3RoZXIgcGVvcGxlIGNsb3RoZXMgICB0aGVyZSBhcmUgcGxlbnR5IG9mIGN1cnNlIHRhYmxldHMgdGhhdCBjYWxsIGRvd24gdGhlIHdyYXRoIG9mIHRoZSBGdXJpZXMgb24gdGhvc2Ugd2hvIHN0b2xlIHRoZWlyIGNsb3RoZXMgYXQgdGhlIGJhdGgpLCB0byB0aGUgd2FybSByb29tLCB0byB0aGUgc2F1bmEsIGFuZCB0aGVuIGEgZGlwIGluIGZyZWV6aW5nIHdhdGVyIHRvIHJlZnJlc2ggeW91LCB0aGVuIGEgZ29vZCwgbG9uZyBzb2FrIGluIHRoZSB3YXJtIHdhdGVyLCBzbGF2ZXMgcnViYmluZyB5b3UgZG93biB3aXRoIG9pbCBhbmQgc2NyYXBpbmcgb2ZmIHRoZSBzd2VhdCBhbmQgZ3JpbWUgb2YgdGhlIGRheSwgbWF5YmUgYSBtYXNzYWdlLCBwZXJoYXBzIHNvbWUgcGx1Y2tpbmcgKHRoaW5rIHdheGluZy90aHJlYWRpbmcpLCBhIGd5bSB3b3Jrb3V0LCBhbmQgYW4gb3ZlcmFsbCBzb2NpYWwgZXhwZXJpZW5jZSB3aGVyZSBldmVyeW9uZSBuYWtlZCBhbmQgY2l2aWxpemVkIGFib3V0IGl0LiAKRG9uJ3QgZm9yZ2V0IHRoYXQgdGhlIHJvb20gaXMgc3Vic2NyaXB0aW9uIGJhc2VkLiBZb3UgbmVlZCB0byBwYXkgZm9yIFZJUCBtZW1iZXJzaGlwIGlmIHlvdSB3aXNoIHRvIGNvbXBldGUgZm9yIHJlYWwgbW9uZXkgcHJpemVzLiBJZiB5b3UgZG9uJ3Qgd2FudCB0byBwYXkgeW91IGNhbiBiZSBCYXNpYyBtZW1iZXIgYnV0IG9ubHkgUGxheSBNb25leSBnYW1lcyB3aWxsIGJlIGF2YWlsYWJsZSBmb3IgeW91LiBDb21wYXJlIHRoZXNlIDIgc3Vic2NyaXB0aW9uIHBsYW5zIGFuZCBtYWtlIHlvdXIgY2hvaWNlLgpUaGluayBwZW9wbGUgYXJlIHJlYWxseSBlbmpveWluZyB0aGUgZmFjdCB0aGF0IGl0IHF1aXRlIGFuIHVwbGlmdGluZyBib29rIGF0IHRoZSBlbmQsIGV2ZW4gdGhvdWdoIHRoZXJlIHNvbWUgdHJhZ2ljIG5vdGVzIHRvIGl0LCBNYXJzaGFsbCBzYWlkLiBUaGluayBpdCBoYXBwaWVyIHRoYW4gYXBvY2FseXB0aWMsIGluIHRoZSBlbmQuIEluIFNhcm5pYSB0byBwYXJlbnRzIGZyb20gU291dGggQWZyaWNhLCBNYXJzaGFsbCBncmFkdWF0ZWQgZnJvbSB0aGUgZm9ybWVyIFN0LiAKRG9uJ3QgbWl4IHBvc2l0aXZlIGFuZCBuZWdhdGl2ZSBmZWVkYmFjay4gU2F5IHlvdSdyZSBnaXZpbmcgeW91ciBlbXBsb3llZSBmZWVkYmFjayBpbiBhIHBlcmZvcm1hbmNlIHJldmlldy4gWW91IHN0YXJ0IG9mZiBieSBtZW50aW9uaW5nIGhvdyBncmVhdCB0aGUgZW1wbG95ZWUgaXMgdG8gd29yayB3aXRoLCBhbmQgbm90ZSBvbmUgb3IgdHdvIGFkZGl0aW9uYWwgdGhpbmdzIHRoZXkndmUgZXhjZWxsZWQgYXQuIApUaGlzIGdhbWUgaXMgZ2VuZXJhbGx5IHJlZ2FyZGVkIGFzIHRoZSBiZXN0IGdhbWUgdG8gc3RhcnQgb3V0IHdpdGggd2hlbiBsZWFybmluZyB2aWRlbyBwb2tlciBmb3IgdGhlIGZpcnN0IHRpbWUuIFRoZSBiYXNpYyBpZGVhIGluIHRoaXMgZ2FtZSBpcyB0byBnZXQgYSBwYWlyIG9mIEphY2tzIG9yIGhpZ2hlciBhbmQgaXQgaXMgYSBmYWlybHkgc2ltcGxlIGdvYWwsIGVzcGVjaWFsbHkgZm9yIGFtYXRldXIgcGxheWVycy4gU29tZXRoaW5nIG1hbnkgcGxheWVycyBmb3JnZXQsIGhvd2V2ZXIsIGlzIHRoYXQgbWVyZWx5IGdldHRpbmcgYSBwYWlyIG9mIEphY2tzIHdvbid0IHJlYWxseSB3aW4geW91IGFueSBtb25leSwgZXhjZXB0IHRoZSBleGFjdCBtb25leSB0aGF0IHlvdSBwdXQgaW50byB0aGUgbWFjaGluZSBpbml0aWFsbHkuIFNvIHRoZSByZWFsIGZ1biBzdGFydHMgd2hlbiB5b3Ugc3RhcnQgZ2V0dGluZyBoaWdoZXIgcmFua2luZyBoYW5kcyEKTm9uIGNpIHNhciBtYWkgdW5hIHByYXRpY2EgdWd1YWxlIGFsbCdhbHRyYSwgbWFpLgpUaGUgb3RoZXIgYW5zd2VyIHRvIHJhcGlkIGltcHJvdmVtZW50IGlzIGEgc2ltcGxlIG9uZTogcGxheS4gUGxheSBhcyBtdWNoIGFzIHBvc3NpYmxlLiAKIkhhcnJpbmd0b24gb24gSG9sZCdlbSIgaXMgYSByZXZvbHV0aW9uYXJ5IGJvb2sgZm9yIHRoZSBhbWF0ZXVyIHBva2VyIHBsYXllcnMgdGhhdCBoYXMgcmV2ZWFsZWQgdGhlIHNlY3JldCBvZiB0aGUgUG9rZXIgZ2FtZSBpbiBmcm9udCBvZiB0aGVtLiBUaGVyZSBhcmUgZGVzY3JpcHRpb25zIG9mIHNldmVyYWwgdGhvdXNhbmRzIG9mIHdpbm5pbmcgdGVjaG5pcXVlcyB0aGF0IHlvdSBjYW4gb25seSBsZWFybiB0aHJvdWdoIHBsYXlpbmcgaHVuZHJlZHMgb2YgcG9rZXIgZ2FtZXMuIAoiV2Ugd2lsbCB0cmFkZSB0aGlzIHdlZWtlbmQsIGJ1dCB0aGUganVyeSBpcyBvdXQgdGhlcmVhZnRlciwiIGhlIHNhaWQuIApUaGUgYWltIGlzIHRvIGNvbXBsZXRlIHRoZSAyNC41IG1pbGUgaGlrZSBpbiAxMiBob3Vycy4gCkNvbmRlc2NlbmRpbmcgYW5kIHJ1ZGUgZWg/IFlvdSB0YWxraW5nIGFib3V0IHRoZSB0cmVhdG1lbnQgb2YgbXkgY291bnRyeW1lbiBkdXJpbmcgYWJvdXQgdGhlIHdvcnN0IHBlcmlvZCBpbiBvdXIgaGlzdG9yeSBpbiBhIGJlbGl0dGxpbmcgYW5kIGRlZmVuY2l2ZSBtYW5uZXIhIFlvdXIgY29tcGFyaXNvbiB3YXMgQnJpdGFpbiB0cmVhdG1lbnQgb2YgSXJlbGFuZCB3YXNuIGFzIGJhZCBjb21wYXJlZCB0byB0aGUgTmF6aXMgdHJlYXRtZW50IG9mIEpld3MuIFdoeSBtYWtlIGEgY29tcGFyaXNvbiBvZiB0aGUgdHdvIGlmIG5vdCB0byBkZWZlbmQgb25lPyBUaGUgT3R0b21hbiBzaGlwbWVudCBvZiBhaWQgd2FzIHNlbnQgdG8gbXkgaG9tZXRvd24gYW5kIHdlIGhhdmUgdGhlIHN0YXIgYW5kIGNyZXNjZW50IGFzIG91ciBlbWJsZW0uIApHaWxlYWQgaXMgYSB0aGVvY3JhdGljIHRvdGFsaXRhcmlhbmlzbSwgbm90IHNpbXBseSBhIG1lbiBoYXZlIHBvd2VyIHdvbWVuIGRvIG5vdCB3b3JsZC4gTG93ZXIgc3RhdHVzIG1lbiBhcmUgdG9sZCB3aGVuIGFuZCB3aG8gKHRvKSBtYXJyeSwgZWcuIlRoZSBkZXRhaWxlZCByZXNwb25zZSBkZWxpZ2h0ZWQgb25saW5lIG9ubG9va2Vycywgd2hvIGhhZCByZXR3ZWV0ZWQgdGhlIGV4Y2hhbmdlIG1vcmUgdGhhbiA1NTAgdGltZXMgYW5kIGdhdmUgaXQgYWxtb3N0IDMsMDAwICJsaWtlcyIgd2l0aGluIGZpdmUgaG91cnMuQXQgbGVhc3Qgb25lIG90aGVyIGxpdGVyYXR1cmUgZmFuIGFwcGxhdWRlZCB0aGUgaW5pdGlhdGl2ZS5BdHdvb2QgaXMgYSBwcm9saWZpYyBUd2l0dGVyIHVzZXIgd2hvIGhhcyBub3QgYmVlbiBzaHkgYWJvdXQgdXNpbmcgc29jaWFsIG1lZGlhIHRvIHdlaWdoIGluIG9uIHNvY2lhbCBpc3N1ZXMsIHByb21vdGUgaGVyIHdvcmsgYW5kIGZhdm91cml0ZSBjYXVzZXMsIG9yIGludGVyYWN0IHdpdGggZmFucy4iTm9yIGRvZXMgdGhhdCBFbmdsaXNoIHRlYWNoZXIgc291bmQgc28gY3JhenkuIEp1c3Qgc2F5aW4nLiAKSXMgZ29pbmcgZnJvbSBmYWlsdXJlIHRvIGZhaWx1cmUgd2l0aG91dCBsb3NzIG9mIGVudGh1c2lhc20sIiBoZSBzYWlkLiAKSG93IGRvZXMgd2luZSB0YXN0aW5nIGludm9sdmUgYWxsIG91ciBzZW5zZXM/IEluIHRoaXMgaW50ZXJhY3RpdmUgNDUgbWludXRlIHdvcmtzaG9wLCB5b3Ugd2lsbCBsZWFybiBub3Qgb25seSB3aW5lIHRhc3RpbmcgdGVjaG5pcXVlcywgYnV0IGFsc28gaG93IGFsbCB0aGUgc2Vuc2UgKGJleW9uZCBqdXN0IHNtZWxsIGFuZCB0YXN0ZSEpIGNhbiBpbmZsdWVuY2Ugb3VyIGVuam95bWVudCBhbmQgYXBwcmVjaWF0aW9uIG9mIHdpbmVzLgpTb2NpYWxpemF0aW9uIGlzIG92ZXJyYXRlZCBhbmQgaXMgb25seSBhIG1vZGVybiBpZGVhLiBObyBvbmUgZ2F2ZSBhIGZ1Y2sgYWJvdXQgbWFraW5nIHN1cmUgeW91ciBkb2cgaGFkIGRvZ2d5IGZyaWVuZHMgdW50aWwgbGlrZSB0aGUgcGFzdCAxMCB5ZWFycyBhbmQgdGhpbmdzIHdlbnQgcGVyZmVjdGx5IGZpbmUuIApGb2N1c2VkIHVwb24uIApUaG9zZSBjb25jZXJucyB3ZXJlIHN0aWxsIGxpbmdlcmluZyB3aGVuIHRoZSBPbnRhcmlvIGdvdmVybm1lbnQgcXVpZXRseSBsYXVuY2hlZCBhIHRocmVlIHBoYXNlIGNvbnN1bHRhdGlvbiBwcm9jZXNzIGVhcmxpZXIgdGhpcyBtb250aCB0byBkZXZlbG9wIGEgZGF0YSBzdHJhdGVneSBmb3IgdGhlIHByb3ZpbmNlIHRoYXQgaXQgaG9wZXMgd2lsbCBjcmVhdGUgZWNvbm9taWMgYmVuZWZpdHMgYW5kIGluY3JlYXNlIHB1YmxpYyB0cnVzdCBhbmQgY29uZmlkZW5jZS4KSXQgaXMgYWxsIGVpdGhlciBjaGlsZHJlbiBvciByZXRhcmRlZCBhZHVsdHMgYW5kIEkgcmVhbGx5IGRvbid0IGtub3cgdGhlIGRpZmZlcmVuY2UgYmVjYXVzZSB0aGV5IGxpZSBzbyBtdWNoLi4gCkpvYiBTZWFyY2hpbmcgVXNlIHRoZSBjb25uZWN0aW9ucyBmb3JnZWQgZHVyaW5nIGJvdGggeW91ciBhY2FkZW1pYyBzdHVkaWVzIGFuZCB5b3VyIGludGVybnNoaXBzIHRvIGxlYXJuIGFib3V0IGF2YWlsYWJsZSBwb3NpdGlvbnMgaW4geW91ciBmaWVsZC4gVGhlcmUgYXJlIGFsc28gYSBudW1iZXIgb2Ygd2Vic2l0ZXMgYW5kIGpvYiBib2FyZHMgdGhhdCB5b3UgY2FuIHVzZSB0byBhaWQgaW4geW91ciBqb2Igc2VhcmNoLiBUaGUgQW1lcmljYW4gUHN5Y2hvbG9naWNhbCBBc3NvY2lhdGlvbidzIFBzeWNDYXJlZXJzIHBhZ2UgbGlzdHMgam9icyBmb3IgdGhlcmFwaXN0cyBpbiBhIG51bWJlciBvZiBkaWZmZXJlbnQgZmllbGRzLCBpbmNsdWRpbmcgY29ycmVjdGlvbnMgYW5kIHJlaGFiaWxpdGF0aW9uIGZpZWxkcy4gWW91IG1heSBhbHNvIGNoZWNrIHlvdXIgc3RhdGUncyBjaXZpbCBzZXJ2aWNlIGNvbW1pc3Npb24gd2Vic2l0ZSBmb3IgYXZhaWxhYmxlIGpvYnMgYW5kIG9wcG9ydHVuaXRpZXMuCk5ldyBDYW5hZGEgRm9vZCBHdWlkZSBuaXhlcyBwb3J0aW9uIHNpemVzCkF0IHRoZSBjYXNpbm9zLCBCYW5hIHRyaWVzIHRvIHNjb3JlICQxMCwwMDAgdG8gc2VjdXJlIGEgc2VhdCBhdCB0aGUgV29ybGQgU2VyaWVzIG9mIFBva2VyLiBIZSB3aW5zIHNvbWUgaGFuZHMgYnV0IGxvc2VzIG90aGVycywgaW5jbHVkaW5nIGEgZmV3IHRvIERhZGR5IER1dmFsbCwgYSB0b3VnaCBvbCBiaXJkIHdobyBuZXZlciBnaXZlbiBoaXMgYm95IGEgYnJlYWsuCkkgZmVsdCBsaWtlIEkga25ldyBoaW0gYW5kIHdlIGhhZCBuZXZlciBtZXQgaW4gbGlmZS5UaGVuIEkgdG9vayBhIGRlZXAgYnJlYXRoIGFuZCBnZW50bHkgcGxhY2VkIGl0IGFsbCBhdCB0aGUgYm90dG9tIG9mIHRoZSBkdW1wc3RlciB0byBiZSBjYXJ0ZWQgb2ZmIGFuZCBidXJuZWQuVGhleSBnYXZlIHVzIHBlcm1pc3Npb24gdG8ga2VlcCBhbnl0aGluZyB3ZSB3YW50ZWQgYXMgInBheW1lbnQiIGZvciBvdXIgZGF5IG9mIGxhYm9yLiBNeSBjbGFzc21hdGVzIGJveGVkIHVwIG9sZCBjb2lucywga25pdmVzLCBjYXJ2ZWQgcGllY2VzIG9mIGFydC4gCldlbGwgdGhpcyBpcyBvbmx5IGEgbXl0aCBmb3IgbGFjayBvZiBiZXR0ZXIgd29yZHMuIFRoaXMgbXl0aCBpcyBtb3JlIGxpa2UgYSByZWFzc3VyYW5jZSB0byBvdXJzZWx2ZXMgb24gaG93IG5lYXQgb3VyIHN0cmF0ZWd5IHJlYWxseSBpcyBhbmQgaG93IGl0IGlzIG5vdCBvdXIgZmxhdyB0aGF0IHRoZXJlIGlzIG5vdCBtdWNoIHRhbGVudCBpbiBvdXIgdGFibGUuIElmIHlvdSByZWFsbHkga25vdyB5b3VyIGdhbWUgdGhlbiB0aGVyZSB3aWxsIGJlIG5vIG5lZWQgdG8gYmFuayB1cG9uIG90aGVycyBza2lsbHMgb3IgdGhlIGxhY2sgb2YgdG8gd2luIHRoZSBnYW1lLi4gCkkgdGhpbmsgaXQgZGVwZW5kcyBvbiB0aGUgcGVyc29uLiBUeXBpY2FsbHksIHlvdSB3b3VsZCB0aGluayB0aGUgYW5zd2VyIHdvdWxkIGJlIG5vLCBidWlsZGluZyBhbiBlbXBpcmUgb2ZmIG9mIHBlb3BsZSdzIHNlbGYgZGVzdHJ1Y3RpdmUgZGVzaXJlIHRvIHNtb2tlIG1ldGggaXMgYSB0ZXJyaWJsZSB0aGluZy4gQnV0IGZvciBXYWx0LCBzcGVjaWZpY2FsbHksIEkgZG9uJ3QgdGhpbmsgdGhhdCBtYXR0ZXJzLiAKVGFsa3MgaGF2ZSBpbmNyZWFzZWQuIApUb3JqdXogIDE3IHBvaW50cyAgc3VibWl0dGVkIDExIGRheXMgYWdvClRoaXMgc3VnZ2VzdHMgdGhhdCBtaWNlIHdpdGhvdXQgZ3V0IGJhY3RlcmlhIGhhdmUgbG93IGxldmVscyBvZiBhbnhpZXR5IGxpa2UgYmVoYXZpb3IsIHNpbmNlIHRoZXkgc3BlbmQgbW9yZSB0aW1lIGluIHRoZSBhdmVyc2l2ZSBhcmVhIG9mIHRoZSB0ZXN0aW5nIGFwcGFyYXR1cy4xMywgMTRBbm90aGVyIGJlaGF2aW9yYWwgdGVzdCB1c2VzIHRoZSBsaWdodCBkYXJrIGJveCwgd2hpY2ggaGFzIGEgZGFyaywgY2xvc2VkIGFyZWEgY29ubmVjdGVkIHRvIGEgbGlnaHQgb3BlbiBhcmVhIChGaWcuIApDYXZpbmcgaW4gbm93IHdpbGwgb25seSBjb25mdXNlIGhpbS4gWW91IG5lZWQgdG8gc3RpY2sgdG8geW91ciBndW5zLiBJIHdvdWxkIGV2ZW4gc3VnZ2VzdCBjdXR0aW5nIGFsbCBjb21tdW5pY2F0aW9ucyBhcyB0YWxraW5nIHRvIHlvdSBpc24gc29tZXRoaW5nIGhlIGNhbiBoYW5kbGUuIEkga25vdyBpdCBzb3VuZHMgbWVhbiBidXQgaGVhciB5b3Ugc2F5IGl0IG92ZXIgaXMgY2xlYXJseSBhIHRyaWdnZXIgZm9yIGhpbSBhbmQgb25seSBtYWtlcyB0aGluZ3MgaGFyZGVyIGZvciBoaW0uCkZvciB0aGVzZSByZWFzb25zIGEgZGVkaWNhdGVkIGRlYWxlciwgb3IgZGVhbGVyL3BsYXllciwgdXN1YWxseSBzaXRzIGluIHRoZSBtaWRkbGUgb2YgYSByZWN0YW5ndWxhciBwb2tlciB0YWJsZS4uIApJbCBuJ2VzdCBwYXMgcG9zc2libGUgZCdpbXB1dGVyIHVuIGFjdGUgIHVuIGluZGl2aWR1IG4ndGFudCBwYXMgZW4gbWVzdXJlIGRlIGxlIGNvbXByZW5kcmUuIEwnaW5kaXZpZHUgbmUgcG9zc2RlIHBhcywgZGFucyBjZSBjYXMsIGQndW5lIHZvbG9udCBkYW5zIGwnYWNjb21wbGlzc2VtZW50IGRlIHNvbiBhY3RlIHB1aXNxdSdpbCBuZSBsZSBjb21wcmVuZCBwYXMuLiAKVGhlcmUgaXMgcGxlbnR5IHRvIGltcHJvdmUgb24uIApBdWNoIHJ1bmQgdW0gZGllICdQZW5zJy4gClNvIGlmIHlvdSB3YW50IHRvIHNhdmUga2luZCBwZW9wbGUsIHRlbGwgc29tZW9uZS4gClN0b3JhZ2UgaXMgdGhlIHNwYWNlIHJlc2VydmVkIGZvciBhbGwgdGhlIGZpbGVzIGFuZCBpbWFnZXMgeW91IG5lZWQgdG8gdXBsb2FkIHRvIHlvdXIgd2Vic2l0ZS4gWW91ciBtYWlsYm94ZXMgYWxzbyBjb25zdW1lIHBhcnQgb2YgdGhlIHN0b3JhZ2UuCkFuZCB5b3UgZG9uIGhhdmUgdG8gdGFsayB0byBoZXIgc28gc2hlIGNhbiB0d2lzdCB5b3UgdXAgYW5kIGdldCB5b3UgdG8gYXBvbG9naXplIGZvciBtYWtpbmcgYSByZWFzb25hYmxlIHJlcXVlc3QgdGhhdCBzaGUgZGlzcmVnYXJkZWQuIApTb21lb25lIHNpdHRpbmcgYXQgdGhlIHRhYmxlIGFkamFjZW50IHRvIG1pbmUgaW4gdGhlIEFyaWEgcG9rZXIgcm9vbSBkaWVkIHllc3RlcmRheS4gSSB0aG91Z2h0IGZvciBzdXJlIHRoYXQgd2FzIGdvaW5nIHRvIGJlIHRoZSByZWFzb24geW91IG1hZGUgdGhpcyB0aHJlYWQuIERlZmluaXRlbHkgYSBiaWdnZXIgV1RGIG1vbWVudCB0aGFuIGFueSBoYW5kIEkgcGxheWVkLgpRdWVzdGlvbnMgd2UgbXVzdCBhc2sgb3Vyc2VsdmVzLiAKTGlrZSBJIGNvdWxkIHNsZWVwIHNvdW5kbHkga25vd2luZyB0aGF0IGlmIGl0IGNhbWUgZG93biB0byBpdCwgYW5kIHNvbWUgbWlsaXRhcnkgb3BlcmF0aW9uIHdhcyBoYXBwZW5pbmcsIEkgY291bGQgdHJ1c3QgaGlzIGp1ZGdtZW50LkkgZG9uJ3QgaGF2ZSB0aGF0IHNhbWUgZmVlbGluZyB3aXRoIFlhbmcuIEkgZG9uJ3Qga25vdyBpZiBoZSBjb3VsZCBoYW5kbGUgdGhlIHByZXNzdXJlIG9yIG1ha2UgdGhlIHVsdGltYXRlIGNhbGxzIGFzIENvbW1hbmRlciBpbiBDaGllZiBvZiB0aGUgVW5pdGVkIFN0YXRlcy4gSSBtZWFuLCBhIDV0aCBncmFkZXIgd2hvIGlzIGdvb2QgYXQgQ2l2aWxpemF0aW9uIDQgaXMgbWFnbml0dWRlcyBiZXR0ZXIgdGhhbiB3ZSBoYXZlIG5vdywgYnV0IHN0aWxsLiAKU29tZXRpbWVzIHRoZXJlIHJlYWxseSBpcyBubyBnb29kIG91dGNvbWUsIGJ1dCB3ZSBmb3JjZWQgdG8gYWN0IGFueXdheSBiZWNhdXNlIG5vdCBkb2luZyBzb21ldGhpbmcgd291bGQgYmUgbW9yYWxseSB3b3JzZSB0aGFuIGRvaW5nIHNvbWV0aGluZyByZWFsbHkgYmFkbHkuIAo0KSBXaGVuIHBvc3RpbmcgaGFuZCBoaXN0b3JpZXMsIHBsZWFzZSB1c2UgdGhlIHByb3BlciBmb3JtYXQgbG9jYXRlZCBoZXJlLiBUaGlzIGlzIHJlcXVpcmVkIGFzIGl0IG1ha2VzIGl0IG11Y2ggZWFzaWVyIHRvIHJlYWQgeW91ciBwb3N0IGFuZCB1bmRlcnN0YW5kIHlvdXIgc2l0dWF0aW9uLCB3aGljaCB3aWxsIGhlbHAgZ2V0IHlvdSBiZXR0ZXIgZmVlZGJhY2suCk5hZGF2LCBUZWwgQXZpdiJNeSBnZW5lcmFsIGZlZWxpbmcgdG93YXJkIHRoZSB0YWxrcyBhcmUgdGhhdCB0aGVpciBjaGFuY2VzIG9mIHN1Y2Nlc3MgYXJlIHF1aXRlIHNsaW0sIGJlY2F1c2Ugb2YgdGhlIGxlYWRlcnNoaXAgd2Vha25lc3Mgb24gYm90aCBzaWRlcy4gRWh1ZCBPbG1lcnQgaXMgYSB2ZXJ5IHVucG9wdWxhciBwcmltZSBtaW5pc3Rlciwgc28gaGUgd2lsbCBoYXZlIGEgaGFyZCB0aW1lIG1ha2luZyBjb25jZXNzaW9ucywgYmVjYXVzZSB0aGV5IG1pZ2h0IG1ha2UgaGltIGxvb2sgZXZlbiB3ZWFrZXIuCiJCdXQgd2hhdCBpZiBzb21lb25lIGZhbGxzIGFzbGVlcD8gSHVycnIgbmVnbGVjdGZ1bCBtYW51ZmFjdHVyZXJzIGR1cnIiCkkgYWN0dWFsbHkgZ290dGVuIGdyZWF0IG1pbGFnZSBvdXQgb2YgdGhlIE1DRUYgY2FyZCB3aGVuIGNvbWJpbmVkIHdpdGggc29tZSB0b2tlbiBmZWVkaW5nLiBXaGVuIHBsYXllZCByaWdodCwgdGhlIEV4b2R1cyBGbGVldCBzaGlwcyBzaG91bGQgYWx3YXlzIGRpZSB3aXRoIHplcm8gc2hpZWxkcyBvbiB0aGVtLiBUaGluayBvZiBpdCBhcyBhIHNvZnQgY291bnRlciB0byBYSTcuIApUaGUgc3R1ZGVudHMgY2hvc2VuIGZvciB0cmFpbmluZyBhcmUgbm90IHNlbGVjdGVkIGJhc2VkIG9uIGFueSB0ZXN0cyAod2hpY2ggY2FuIHJlbW92ZSB0aGUgc2VsZWN0aW9uIGJpYXMpIG9yIGFwdGl0dWRlIChJTUhPKSAod2hpY2ggY2FuIHJlbW92ZSB0aGUgbW90aXZhdGlvbiBhc3BlY3QpLgpOb3QgYWxsIHRoZSByZXZpZXdzLCBwYXJ0aWN1bGFybHkgb2YgaXRzIFNhdm95IGltaXRhdGluZyBHcmlsbCwgaGF2ZSBiZWVuIGtpbmQgYnV0IFNpciBSb2NjbyBpcyBwaGlsb3NvcGhpY2FsLiAiV2Ugbm9ybWFsbHkgaGF2ZSBhIGhvdGVsIGZvciBmb3VyIHdlZWtzIGJlZm9yZSBvcGVuaW5nLCB0byB0cmFpbiB0aGUgc3RhZmYgdXAsIGJ1dCB3ZSBkaWRuJ3Qgd2l0aCBCcm93bidzLiAKU2FtZSB3aXRoIGJlaW5nIGEgcmVudCBhIGNvcC4gClRoZXJlJ3MgcGxlbnR5IG9mIGluZm9ybWF0aW9uIGFib3V0IHRoZXNlIHRlY2huaXF1ZXMgb24gdGhlIGludGVybmV0LgpUaGUgR3JlYXQgTGVhcCBGb3J3YXJkIGhhZCBob3JyaWJsZSByZXN1bHRzIHllcywgYnV0IHRoZSBmYW1pbmVzIGl0IGNhdXNlZCAod2hlcmUgYSBtYWpvcml0eSBvZiBkZWF0aHMgb2NjdXJyZWQpIHdlcmUgdW5pbnRlbnRpb25hbC4gCkpBTUVTIGFuIGFuICB0aHJvcG9sb2dpc3QgYXQgVW5pb24gQ29sbGVnZSBpbiBTY2hlbmVjdGFkeSB3aG8gY29uZHVjdGVkIHJlICBzZWFyY2ggZm9yIHRoZSB2aXNpdGVkIGNhcmQgc2hvcHMgYW5kIHNwb3J0cyBtZW1vcmFiaWxpYSBzaG93cyB3aGVyZSBpaGUgY2FyZHMgYXJlIGJvdWdodCBhbmQgdHJhZGVkLiBIZSBmb3VuZCBjaGlsZHJlbiBhcyB5b3VuZyBhcyA2IHdlcmUgZG9pbmcgd2hhdCBpcyBrbm93biBhcyBjYXJkIHNwZW5kaW5nIHRvIFM2IGZvciBhIHBhY2sgb2YgcmlwcGluZyB0aGVtIHF1aWNrbHkgZmxpcG5pbmNyIFRWaXJtaWZyVmkgdGhvcm4gaW4gY3BhcnJyaSBvZiBMaWlDIFZjVVV1VWxDIFVpaUxVbFVsVWcgYW5kIGJ1eWluZyBtb3JlLiAKVGhlIGZpcnN0IGxvbmcgcnVuIGluIHRoZSBzY2hlZHVsZSBpcyAxMiBtaWxlcy4gSGF2ZSB5b3UgY29tZm9ydGFibHkgY29tcGxldGVkIGEgcnVuIGNsb3NlIHRvIHRoYXQgbGVuZ3RoIGluIHRoZSBsYXN0IG1vbnRoPyBJZiBJIHdlcmUgeW91LCBJIHdvdWxkIGJ1aWxkIG15IGJhc2UgdXAgbW9yZS4gCkkgaGFkIHRoaXMgaWRlYSB0byBtYWtlIGEgY2l0eSBvciBsYXJnZSB2aWxsYWdlIGZ1bGwgb2YgbW9uc3RlcnMgdGhhdCBsaXZlIHRoZXJlIGluIHBlYWNlLiBCdXQgSSB3YXNuJ3Qgc3VyZSBob3cgdG8gZG8gaXQgYW5kIG5vdyBJIGhhZCB0aGlzIGlkZWEgdGhhdCBjb3VsZCB3b3JrLCBzbyBJIHdvdWxkIGxvdmUgdG8gaGVhciB5b3VyIGlkZWEgYWJvdXQgaXQuIFRoaXMgdmlsbGFnZSB3b3VsZCBiZSBoaWRkZW4gc29tZXdoZXJlIGluIHRoZSBtb3VudGFpbnMgYW5kIHdvdWxkIGJlIG1hZGUgZW50aXJlbHkgZnJvbSBtb25zdGVycy4uIApJdCBpcyB1bmRlcnN0b29kIHRoYXQgeW91IHNob3VsZCBwbGF5IG9uIHR3byB0YWJsZXMgaWYgeW91IGFyZSBzdXJlIHRoYXQgeW91IGNhbiB3aW4gb24gb25lIG9mIHRoZSB0YWJsZSBwYXlpbmcgbGVzcyBhdHRlbnRpb24gdG8gaXQuIApJcyB0aGF0IGEgcG9sZSBpbiB0aGUgYmFja2dyb3VuZD8gdGhlcmUgQU5ZIHBhcmVudHMgaW52b2x2ZWQgaW4gYW55IGRlY2lzaW9ucyBtYWRlIGluIHRoZXNlIGtpZHMgZmFtaWxpZXMgIGluY2x1ZGluZyBNcy4gTWlsZXkgdGhlcmUsIHdobyBhcyB5b3UgbWlnaHQgcmVjYWxsIGRpZCBwb3NlIGFsbW9zdCB0b3BsZXNzIGZvciBWYW5pdHkgRmFpciBhdCBhZ2VkIDE1LiAKWW91IHdpbGwgd2FudCB0byBlbnN1cmUgdGhhdCB0aGlzIHN0YW1wIGlzIG5vdCBmYWRlZCwgbm90IHdvcm4sIGFuZCBkb2VzIG5vdCBjb21lIG9mZiB0aGUgY2hpcCBlYXNpbHkuIAoxID4gZmVXaSAgUmVsYXRlZCBuZXdzIHBhZ2UgMjUgdGYgOnRoZSBjb3VydCwgdGhlIGp1cnkgYW5kIHRoZSBwcm9zZWN1dGluZyBhdHRvcm5leS4iIFN0dWFydCwgY2hhcmdlZCB3aXRoIGZpcnN0IGRlZ3JlZSBtdXJkZXIsIHdhcyBmb3VuZCAnZ3VpbHR5IGxhc3QgRnJpZGF5IG9mIHNlY29uZCBkZWdyZWUgbXVyZGVyIG9mIExhcnJ5IFJvZGcgIGVycywgMzAsIG9mIDY1MCBMb2RpIFN0LiwgRWx5cmlhLCBvbiBPY3QgNiBhdCA0MTQ5IEJlbGxlIEF2ZS4sIFNoZWZmaWVsZCBMYWtlLCB0aGUgaG9tZSBvZiBTdHVhcnQncyBlc3RyYW5nZWQgd2lmZSwgQmV2ICAuJ2VybHkuIFRoZSBqdXJ5IGRlbGliZXJhdGVkIFRvcm4gdG8gcGFnZSA0LCBjb2wuIApKJ2FpIGV1IGxhIGNoYW5jZSBkJ2F2b2lyIGRlcyBpbnZpdGF0aW9ucyBhdXRvdXIgZGVzIGZhbnRhc3RpcXVlcyBwcm9kdWl0cyBldCBjZSBmdXJlbnQgZGUgYmVsbGVzIHJlbmNvbnRyZXMgKGJpZW4gcXUndW4gcGV1IGNvdXJ0ZXMgISkgOgpXaGVuIHRoZXkgdGVsbCB5b3UgYWJvdXQgaXQsIGl0IGlzIHRoZWlyIE9QSU5JT04gb24gd2hhdCB0aGUgcmVwb3J0IHNob3dzIGlzIG9mIHNpZ25pZmljYW5jZS4gWW91IG5lZWQgdG8ga25vdyB3aGF0IGl0IHNheXMsIHNvIHlvdSBjYW4gYXNrIGFib3V0IHRoaW5ncyB0aGF0IHRoZXkgbWF5IG5vdCBmZWVsIGFyZSBzaWduaWZpY2FudC4gClNpbmNlIHRoZXNlIGFyZSBpbmRlcGVuZGVudCwgdGhvdWdoIHNlcXVlbnRpYWxseSByZWxhdGVkIGV2ZW50cywgdG8gY29tcHV0ZSB0aGUgcHJvYmFiaWxpdHkgdGhhdCBib3RoIGV2ZW50cyBvY2N1ciwgeW91IHNpbXBseSBtdWx0aXBseSB0aGUgdHdvIHByb2JhYmlsaXRpZXMgdG9nZXRoZXIuIApJbiB0aGUgY2FzZSBvZiB1bmRpc2Nsb3NlZCBvdmVyc2VhcyBiYW5rIGFjY291bnRzLCBhIHBlcnNvbiBpcyByZXF1aXJlZCB0byBzdWJtaXQgdGhlIGRldGFpbHMgb2YgY3JlZGl0IHNpbmNlIHRoZSBvcGVuaW5nIG9mIHRoZSBhY2NvdW50IGFuZCBwYXkgNjAgcGVyIGNlbnQgdGF4IGFuZCBwZW5hbHR5IHRvIHRha2UgYWR2YW50YWdlIG9mIHRoZSA5MCBkYXkgY29tcGxpYW5jZSB3aW5kb3cgZW5kaW5nIFNlcHRlbWJlciAzMC4KSWYgb25seSB0aGUgVGltZXMgd291bGQgY2hhbmdlIGl0cyBuYW1lIHRvIFByYXZkYSwgd2UgY291bGQgcHJldGVuZCBpdCBpcyB0aGUgdGltZSBvZiBCcmV6aG5ldiBhbmQgS2hydXNoY2hldiAgd2hlcmUgeW91IGNvdWxkIHZvdGUgZm9yIHRoZSBDb21tdW5pc3QgUGFydHkgb3IgdGhlIENvbW11bmlzdCBQYXJ0eS4gR09QIG9yIERlbXMuIApUaGUgaGlzdG9yeSBpcyB1bmNsZWFyIGJ1dCBvbmUgdGhpbmcgZm9yIGNlcnRhaW4gaXMgdGhhdCBwb2tlciBoYXMgZXZvbHZlZCB0aHJvdWdob3V0IHRoZSB5ZWFycyB0byBiZWNvbWUgdGhlIGdhbWUgd2Uga25vdyBhbmQgbG92ZSB0b2RheS4gRXZlcnlkYXkgcG9rZXIgaXMgcGxheWVkIGJ5IG1hbnkgYXJvdW5kIHRoZSB3b3JsZCBhbmQgaXMgbWVyZWx5IGp1c3QgYSBtZWFucyBvZiBnYW1ibGluZyBvciBtb25leSBtYWtpbmcsIGl0IGlzIHNoZWVyIGZ1bi4gClpvIGt3YW1lbiB3ZSBvcCBkZSBCb3VsZXZhcmQgUmluZywgdmFuIGRlIHJpbmd3ZWdlbiBvbWhlZW4gaGV0IGNlbnRydW0sIG1ldCBlZW4gZ3JvZW4gcGFyayBlciBvcC4gCk9uZSBvZiB0aGUgbW9uc3RlcnMgaXMgIm9sZCBuZXdzIiBhbmQgeWV0IHN0aWxsIGEgbmlnaHRtYXJlIHRoYXQgaGF1bnRzIHVzLiBFbmdsYW5kLCBhIHNlcmlhbCBjaGlsZCBtb2xlc3Rlciwgd2FzIHNjaGVkdWxlZCB0byBiZSByZWxlYXNlZCBmcm9tIHByaXNvbiBhZnRlciBzZXJ2aW5nIG9ubHkgdGhyZWUgeWVhcnMgaW4gc3RhdGUgcHJpc29uLgpJJ2QgbGlrZSB0byBkcm9wIGEgbWVudGlvbiBmb3IgQXNrIEEgTW9ydGljaWFuISBBIGxvdCBvZiBpbnRlcmVzdGluZyB2aWRlb3MgYWJvdXQgZGVhdGgsIGFuZCBteSBmYXZvdXJpdGUgc2VyaWVzIGlzIHRoZSBvbmUgYWJvdXQgSWNvbmljIENvcnBzZXMuIEhlcmUncyB0aGUgdmlkZW8gYWJvdXQgYSBiaWcgY3JlbWF0b3J5IHNjYW5kYWwgd2hpY2ggaXMgb25lIG9mIG15IGZhdmVzLCBhcyB3ZWxsIGFzIGhlciBsZWFkIGJhc2VkIG1ha2V1cCB0dXRvcmlhbC4KWW91IGNvdWxkIGFzayB5b3VyIG1pZHdpZmUsIGhlYWx0aCB2aXNpdG9yLCBtZWRpY2FsIGNlbnRyZSBvciBtYXRlcm5pdHkgaG9zcGl0YWwgZm9yIGRldGFpbHMgb2YgbG9jYWwgdGVhY2hlcnMgb3IgY291cnNlcyAgIHNvbWUgb2Ygd2hpY2ggbWF5IGJlIGZyZWUuIElmIHlvdSBhcmUgaW4gdGhlIFVLLCB5b3UgY291bGQgY2hlY2sgd2l0aCB5b3VyIGxvY2FsIGJyYW5jaCBvZiB0aGUgVGhlIE5hdGlvbmFsIENoaWxkYmlydGggVHJ1c3Qgb3IgeW91IGNvdWxkIGNvbnRhY3QgeW91ciBuYXRpb25hbCBjaGFwdGVyIG9mIC4gSWYgeW91IGNhbm5vdCBmaW5kIGEgY291cnNlIHdoaWNoIHN1aXRzLCB0aGVuIHRoZXJlIGFyZSBhIG51bWJlciBvZiBiYWJ5IG1hc3NhZ2UgdmlkZW9zIG9uIHRoZSBtYXJrZXQuLiAKIklmIEkgYW0gZ29pbmcgdG8gYmUgYWJsZSB0byByZXBheSB0aGUgbG9hbnMgSSB0b29rIG91dCB0byBkbyB0aGlzLCBJJ20gZ29pbmcgdG8gbmVlZCB0aGUgYWJpbGl0eSB0byBjaGFyZ2UgYSBmYWlyIGluY29tZSwgc28gd2hhdCdzIGdvaW5nIHRvIGhhcHBlbiBub3cgaXMgSSB3aWxsIGJlIGluY2VudGl2aXplZCB0byByZW50IGl0IGFzIGhpZ2ggcG9zc2libGUsIiBGYXJtZXIgc2FpZC4gClJpbm9haXNteXNwaXJpdCAgMyBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpGZW1pbmlzdHMgYXJlIGZhaXIgZW5vdWdoIHRvIGFyZ3VlIHRoYXQgeW91IGNvdWxkIGludmVzdCBzdWZmaWNpZW50IHJlc291cmNlcyB0byBtYXJrZXQgbGVhZ3VlcyBpbnRvIGV4aXN0ZW5jZS4uIApEdXJpbmcgbmVnb3RpYXRpb25zIHdpdGggQ29jYSBDb2xhIHRoZXkgaGl0IGEgc3RpY2tpbmcgcG9pbnQsIGFuZCBuZWl0aGVyIHBhcnR5IGNvdWxkIGFncmVlLgpUaGUgRVBUIEJhcmNlbG9uYSBGZXN0aXZhbCwgdGhlIHVub2ZmaWNpYWwga2lja29mZiB0byB0aGUgZmluYWwgbGVnIG9mIHRoZSAyMDE1IHBva2VyIHNlYXNvbiwgcmV0dXJucyB0aGlzIHdlZWsgd2l0aCBvdmVyIDcwIGV2ZW50cyBiZWluZyBwcmVzZW50ZWQsIGluY2x1ZGluZyB0aGUgTWFpbiBFdmVudCwgd2hpY2ggaGFzIGJlY29tZSBvbmUgb2YgdGhlIGJpZ2dlc3QgZXZlbnRzIG9uIHRoZSBwb2tlciBjaXJjdWl0LiBMYXN0IHllYXIsIEdlcm1hbiBwbGF5ZXJBbmRyZSBMZXR0YXUgKEdQSSBOby4gCkJhc2tldGJhbGwgUG9rZXIgQ2FyZCBQcm90ZWN0b3IgaXMgYSB2ZXJ5IGNvbW1vbiBjYXJkIGNvdmVyIGJ1dCBpdCBoYXMgYSB2ZXJ5IHVuY29tbW9uIGltcHJpbnQgb24gaXQuIEJhc2tldGJhbGwgcHJpbnRlZCBvbiB0aGUgcG9rZXIgY2FyZHMgaGFzIG1hZGUgdGhpcyB0aGUgbW9zdCBkZXNpcmFibGUgcHJvZHVjdHMgZm9yIGEgYmFza2V0YmFsbCBsb3ZlciB3aG8gYWxzbyBsb3ZlcyB0byB0cnkgbHVjayBpbiBhIGNhc2luby4gQ2FzaW5vIGdhbWVzIGFyZSBtb3N0bHkgZGVwZW5kaW5nIG9uIGx1Y2ssIHRoZXNlIGdhbWVzIGFyZSBhbHdheXMgYmFzZWQgb24geW91ciBwZXJzb25hbCBmb3J0dW5lLiBUaGlzIGhhcyBjaGFuZ2VkIHRoZSBtaW5kc2V0IG9mIHRoZSBwZW9wbGUgdHJ5aW5nIHRvIHBsYXkgcG9rZXIgYW5kIG1ha2UgbW9uZXkgZnJvbSBpdC4gU29tZSBwZW9wbGUgdXNlIHRoZXNlIHBva2VyIGNvbGxlY3RpYmxlcyBhcyBwaWVjZXMgb2YgZm9ydHVuZS4gVGhleSBhbHdheXMgd2FudCB0byBjYXJyeSBvdXQgdGhlIHBva2VyIGNvbGxlY3RpYmxlcyB0aGF0IGFyZSBwcm92ZWQgbHVja3kgZm9yIHRoZW0uIFRoZXNlIHBva2VyIGZhbnMgYXJlIGxvb2tpbmcgZm9yIHRoZSBwb2tlciBwaWVjZXMgdGhleSBsb3ZlLCB0aGUgcG9rZXIgY29sbGVjdGlibGVzIHRoZXkgd2FudCB0byBiZSB3aXRoLiBUaGF0J3Mgd2h5IHRoZSBwcm9mZXNzaW9uYWwgcG9rZXIgbWVyY2hhbnRzIHNlbGxpbmcgcHJvZHVjdHMgaW4gZnJvbnQgb2YgdGhlIGludGVybmF0aW9uYWwgbWFya2V0IGhhdmUgbWFkZSBhIGhlbGwgbG90IG9mIG1vbmV5IGp1c3Qgc2VsbGluZyBwcm9kdWN0cyBhc3NvY2lhdGVkIHdpdGggcG9rZXIuCldlJ3ZlIGFsbCBiZWVuIHRoZXJlIS4gCkNhbiBhIG1hc3NhZ2UgYnJlYWsgb3BlbiBhIHBsYXF1ZSwgbGVhZGluZyB0byBhIGJsb29kIGNsb3Q/IFRoYXQgaXNuJ3QgbGlrZWx5LiBUaGUgZm9yY2Ugb2YgYSB2aWdvcm91cyBtYXNzYWdlIGRvZXNuJ3QgcmVhbGx5IGNvbXBhcmUgd2l0aCB0aGUgY29uc3RhbnQgcG91bmRpbmcgdGhhdCBwbGFxdWUgZmFjZXMgd2l0aCBlYWNoIGluZGl2aWR1YWwgaGVhcnRiZWF0LCBvciB3aXRoIHRoZSBpbmNyZWFzZSBpbiBibG9vZCBwcmVzc3VyZSB0aGF0IG9jY3VycyB3aGVuIHlvdSBnZXQgb3V0IG9mIGJlZCBpbiB0aGUgbW9ybmluZyB0byBicnVzaCB5b3VyIHRlZXRoLiBTbyB3aGVuIGl0IGNvbWVzIHRvIHN0cm9rZSwgaGF2aW5nIGEgZGVlcCBtdXNjbGUgbWFzc2FnZSBzaG91bGQgYmUgZmluZS4uIAo1IFJlbGF4YXRpb24gVGlwcyBmb3IgUHJlZ25hbnQgTW9tcwpUaGUgc29mdHdhcmUgb25seSBoYXMgZHJpdmVycyBmb3IgY2VydGFpbiBncmFwaGljcyBjYXJkcy4gCkxvbCwgSSBuYWl2ZWx5IGdvdCBleGNpdGVkIHdoZW4gSSBzYXcgdGhlIG1lc3NhZ2UsIHRoYXQgdGhleSB3YW50ZWQgdG8gdGFsayB0byBtZSBhYm91dCBteSBpbnZlbnRpb24uIEkgdGhvdWdodCB0aGV5IG1pZ2h0IHdhbnQgdG8gdGFrZSBpdCB0byB0aGUgbmV4dCBsZXZlbCBhbmQgbWFrZSBtZSBhIG1pbGxpb25haXJlIChZZXMsIEkgYmVlbiB0b2xkIEkgbmVlZCB0byBnZXQgbXkgaGVhZCBvdXQgb2YgdGhlIGNsb3VkcyBhdCB0aW1lcykuLiAKVGhleSBhcmUgcGFpZCBlbXBsb3llZXMgb2YgVW5pdmVyc2FsIE1lZGljaW5lLCBpbiBtZWRpYSBhbmQgcHJvbW90aW9uYWwgcm9sZXMuIApUaGlzIHdpbGwgaGVscCB5b3UgdG8gbGVhcm4gYWJvdXQgdGhlIGRlZXBlc3Qgc2VjcmV0IG9mIHBva2VyIGluIG5vIHRpbWUuIApJdCB0b29rIG15IDIuNSB5ZWFycyB0byBnZXQgd2hlcmUgSSB3YW50IHRvIGJlLiBNeSBoYWlyIGlzIG5vdyBsb25nIGFuZCB0aGljayBsaWtlIGl0IHdhcyBpbiBoaWdoIHNjaG9vbC4gCkVwaWMgaXMgYWxzbyBtb3JlIGxpa2UgMTAgKG5vdCBpbmNsdWRpbmcgdGhlIHRpbWUgaXQgdGFrZXMgdG8gZmluZCBhIHBhcmtpbmcgc3BvdCBhbmQgd2FsayB0byB5b3VyIG9mZmljZSkuIE9mIGNvdXJzZSwgdGhpcyBpcyB2ZXJ5IGRlcGVuZGVudCBvbiB0cmFmZmljIChhbmQgcG90aG9sZXMgb24gUGxlYXNhbnQgVmlldyksIGJ1dCBpdCBwcmV0dHkgbXVjaCBhbHdheXMgYSBmYWlybHkgcXVpY2sgZHJpdmUuLiAKQSBsb3Qgb2YgcGVvcGxlIGluIHRoZSBncmVlbnMgdGhpbmsgaXQgYW4gYWNoaWV2ZW1lbnQsIHNwZWNpYWxseSB0aG9zZSB3aG8gc3RydWdnbGUgdG8gc3RheSBhYm92ZSBHcmFuZCBNYXN0ZXIuIApTbyBpbXBvcnRhbnQgdG8gaGF2ZSBhIGdvb2QsIHNvbGlkIHB1YmxpYyBoZWFsdGggdW5pdCBpbiB5b3VyIGNvbW11bml0eSB0aGF0IHdvcmtpbmcsIHNhaWQgVmlja2kgTWNLZW5uYSwgcHJvdmluY2lhbCBwcmVzaWRlbnQgZm9yIE9OQSB3aG8gam9pbmVkIHRoZSBudXJzZXMgb24gdGhlIHBpY2tldCBsaW5lLiBXaGF0IHRoZXNlIG51cnNlcyB3YW50IHRvIGRvLCB0aGV5IHdhbnQgdG8gYmUgYmFjayBhdCB3b3JrIGJ1dCBpdCBiZWVuIGEgeWVhciB3aXRob3V0IGEgY29udHJhY3QuIApBdCBHcmFuYWRhIFVuaXZlcnNpdHksIExvcmNhIGhhZCBhIHdvbmRlcmZ1bCBsaXRlcmF0dXJlIHByb2Zlc3NvciBpbiAxOTE2IDE3IHdobyB0b29rIGhpcyBzdHVkZW50cyBvbiBsb2NhbCBhcnQgYW5kIGFyY2hpdGVjdHVyZSB0cmlwcyBhbmQgdG8gc2hhcmUgY3VsdHVyYWwgZXhwZXJpZW5jZXMuICJUZWFjaGVyIGFuZCBzdHVkZW50cyBnYXZlIHB1YmxpYyB0YWxrcywgTG9yY2EgcGxheWVkIHRoZSBwaWFubyBhbmQgdGhleSBjb252ZXJzZWQgd2l0aCBsb2NhbCBhcnRpc3RzLCBpbnRlbGxlY3R1YWxzIGFuZCBjbGVyZ3kuIiBUaGUgc3R1ZGVudHMgdGhlbiB3cm90ZSBhYm91dCB0aGVpciB0cmlwcywgYW5kIExvcmNhIHdhcyBvbmx5IDE5IHllYXJzIG9sZCB3aGVuIGhlIHB1Ymxpc2hlZCB0aGlzIHNlbGVjdGlvbiBvZiBoaXMgd3JpdGluZ3MuCkFzIEkgd2FzIHN0YW5kaW5nIG91dHNpZGUgdGhlIHN0YWxsIHRoaXMgb2xkZXIgbGFkeSBkaWRuJ3QgbG9jayB0aGUgZG9vciBhbmQgdGhlIGRvb3Igd2FzIGhhbGYgb3Blbi4gCkZ1ZXIgYWxsZSBkaWUgc2ljaCBzY2hvbiBpbW1lciBnZWZyYWd0IGhhYmVuLCB3YXMgZGllIERpc2t1c3Npb24gbWl0IGRlbiBlbnRob3JudGVuIEtoZW4gYXVmIHNpY2ggaGF0LCBtY2h0ZW4gd2lyIFNpZSBnZXJuZSBlaW5sYWRlbiwgZWluIFN0Y2sgQWxsZ3VlciBFbW1lbnRhbGVyIGltIExhZGVuIHp1IHByb2JpZXJlbiwgbWl0IGRlbSBXaXNzZW4sIGRhc3M6ClRoZSBob3VzZSByYWRpYXRlcyBlYXNlIGFuZCBlbGVnYW5jZSB3aXRoIGEgZmxvdyBhbmQgaGFybW9ueSB0aGF0IGtlZXAgaXQgbGlnaHQgc3Bpcml0ZWQsIG5ldmVyIG92ZXJiZWFyaW5nLiBUaGlzIGNvbWVzIGZyb20gY2FyZWZ1bCBwbGFubmluZyBhbmQgY29sbGFib3JhdGlvbiBiZXR3ZWVuIHRoZSBQaW5vcmEgSG9tZXMgYnVpbGRlci9yZWFsdG9yIHRlYW0gb2YgVG9ueSBQYXVsIGFuZCBEZWVwIERoaWxsb24gYW5kIGF3YXJkIHdpbm5pbmcgZGVzaWduZXIgU2FyYWggR2FsbG9wLiAKQnV0IG1heWJlIHRoZXkgYnVyaWVkIHRoZWlyIGJvbmVzIGFmdGVyIHRoZXkgZWF0IHRoZW0uIApNeS4gCkR1ZSB0byB0aGVpciBhYnVzZSBhbmQgbXkgY3VycmVudCBzdGF0ZSBvZiBubyBwYXRpZW5jZSBhbmQgdG9sZXJhbmNlLCBJIGNhbiBiYXJlbHkgaGFuZGxlIG9uZSBkb2cgd2l0aG91dCBnb2luZyBudXRzLiAKSGFuc2VuJ3MgZXhjbHVzaXZlIHJlcG9ydHMgaW5jbHVkZSBhbiBpbnRlcnZpZXcgd2l0aCB0aGUgQWxhc2thIEFpcmxpbmVzIHBpbG90IEpvaG4gTGlvdGluZSwgd2hvIGJsZXcgdGhlIHdoaXN0bGUgb24gdGhlIGNvbXBhbnkgYW5kIGluaXRpYXRlZCBhIGZlZGVyYWwgaW52ZXN0aWdhdGlvbiBpbnRvIHRoZSBhaXJsaW5lJ3MgbWFpbnRlbmFuY2UgcHJhY3RpY2VzLCBhbmQgdGhlIGZhbWlseSBhbmQgZnJpZW5kcyBvZiBmb3JtZXIgTkJBIHN0YXIgQnJpYW4gV2lsbGlhbXMsIHdobyBzaGVkIGxpZ2h0IG9uIFdpbGxpYW1zJyBteXN0ZXJpb3VzIGRlYXRoIGFuZCB0aGUgcG9zc2libGUgaW52b2x2ZW1lbnQgb2YgaGlzIGJyb3RoZXIuIEhhbnNlbiB3YXMgYWxzbyBsYXJnZWx5IHJlc3BvbnNpYmxlIGZvciAiRGF0ZWxpbmUncyIgY29udGludWluZyBjb3ZlcmFnZSBvZiB0aGUgQ29sdW1iaW5lIG1hc3NhY3JlIGFuZCB0aGUgVFdBIEZsaWdodCA4MDAgZGlzYXN0ZXIgYXMgd2VsbCBhcyB0aGUgT2tsYWhvbWEgQ2l0eSB0cmFnZWR5Li4gCkJlY2F1c2Ugc2hlIHdhcyBub3Qgb2xkIGVub3VnaCB0byBiZSBhIGdyYW5kbW90aGVyIGVpdGhlci4gClJhdmlkOiBJIHN1cmUgaXQgd2lsbCBkbyByZWFzb25hYmx5IHdlbGwuIFRoZSBvdGhlciBwcm9ibGVtIGlzIHRoYXQgTmV0ZmxpeCBkb2VzbiByZWxlYXNlIGluZm9ybWF0aW9uLCB3aGljaCBpcyBub3QgdmVyeSBnb29kIGZvciB1cyBhcyByZXNlYXJjaGVycy4gCldhbGtpbmcgYmVoaW5kIHRoZSBjb3VudGVyIGF0IGhpcyBkaW5lciBhbmQgImFkanVzdGluZyIgaGlzIGZvb2QvaW50ZXJmZXJpbmcgd2l0aCBoaXMgY3VzdG9tZXJzLCBtb3ZpbmcgaGlzIGZvb2QgdHJheSBhdCB0aGUgY2F0IHdha2Ugd2hlbiBzaGUgbm90aWNlZCB0aGF0IHBlb3BsZSBsaWtlZCBoaXMgZm9vZCBtb3JlIHRoYW4gaGVycywgYW5kIGRpc3Jlc3BlY3RpbmcgaGltIHdoZW4gaGUgc3RlcHBlZCBpbiBhbmQgc2F2ZWQgaGVyIGFzcyBhdCB0aGUgaW5uIHdoZW4gc2hlIHdhcyBpbmRpc3Bvc2VkKSBpbmZ1cmlhdGVkIG1lLiAKSGUgc2VudCBtZSAkMjAwLiAKRm9yIG1hbnkgd29tZW4sIGFuYWwgc2V4LCBjYW4gYmUgdGhlIG1vc3QgZWZmZWN0aXZlIHdheSBmb3IgaGVyIHRvIG9yZ2FzbS4gClBlcnNvbmFsbHkgSSBkb24gaGF2ZSBhIHN0cm9uZyBvcGluaW9uIGVpdGhlciB3YXkuIApUaGVzZXNvbmdzIGFyZSBvbiBhbiBhbGJ1bSBjYWxsZWQgIldhbG1hcnQgc291bmRjaGVjay4iIFRoZSBsYXR0ZXIgZm91cnNvbmdzIGhhdmUgIk9yaWdpbmFsIHBlcmZvcm1hbmNlIHNlcmllcyIgaW4gdGhlaXIgbmFtZXMuIEl0IGlzYmVsaWV2ZWQgdGhpcyBhbGJ1bSBpcyBubyBsb25nZXIgYXZhaWxhYmxlIHZpYSByZXRhaWwgc3RvcmVzLiAKVGhlIGRvY3VtZW50cyB3ZXJlIHJlbGVhc2VkIGFuZCBwdWJsaXNoZWQgdGhpcyB3ZWVrIGJ5IHRoZSBXb29kcm93IFdpbHNvbiBDZW50ZXIgZm9yIFNjaG9sYXJzIGFzIHBhcnQgb2YgdGhlIENvbGQgV2FyIEludGVybmF0aW9uYWwgSGlzdG9yeSBQcm9qZWN0IFRoZSBwcmV2YWlsaW5nIGNvbnZlbnRpb25hbCB3aXNkb20gaGFzIGJlZW4gdGhhdCBTb3ZpZXQgbGVhZGVyIEpvc2VmIFN0YWxpbiBwbGFubmVkIGFuZCBvcmRlcmVkIE5vcnRoIEtvcmVhIDE5NTAgYXNzYXVsdCBvbiBTb3V0aCBLb3JlYSBhcyBhIGRlbGliZXJhdGUgdGVzdCBvZiBXZXN0ZXJuIHJlc29sdmUuIE9uIHRoZSBiYXNpcyBvZiB0aGF0IGJlbGllZiwgUHJlc2lkZW50IEhhcnJ5IFRydW1hbiBzb2xpZGlmaWVkIE5BVE8gYW5kIGRlY2lkZWQgdG8gcmUgYXJtIFdlc3QgR2VybWFueS4KKFByaXZhY3kgUG9saWN5KVNvdnJuVGhpcyBpcyBhbiBhZCBuZXR3b3JrLiAKQmFoYXNhIEluZG9uZXNpYSwgc2ltaWxhciB0byBTYW5za3JpdCBvciBIZWJyZXcsIGlzIGFuIEFuY2llbnQgbGFuZ3VhZ2UsIHdoZXJlIHRoZSBtZXJlIHByb251bmNpYXRpb24gb2Ygd29yZHMsIHRoZSB2ZXJ5IHNvdW5kcyBhcmUgQ3JlYXRpdmUsIFNhY3JlZCBzb3VuZHMgd2l0aCBkZWVwIG1lYW5pbmcgYW5kIG51YW5jZS4gVG8gdHJhbnNsYXRlIHN1Y2ggZGVwdGggaW50byB3aGF0IGlzIGEgcmVsYXRpdmVseSB5b3VuZyBsYW5ndWFnZSwgbGlrZSBFbmdsaXNoLCB0aGVyZSBpcyBzb21ldGltZXMgZGlmZmljdWx0eSBnZXR0aW5nIHRoZSBwb2ludCBhY3Jvc3MuIApUaGUgZmlyc3QgbG9hZHMgb2YgZGlydCBhcmUgYmVpbmcgaGF1bGVkIGF3YXkuIFdlIGdvIHVwIHRoZXJlIGFuZCB0aGUgZGV2ZWxvcGVyIGlzIHRoZXJlIGFuZCB3ZSBzdWdnZXN0IGhlIHNhdmUgc29tZSBtb25leSBhbmQgZHVtcCB0aGUgZGlydCBvbiBvdXIgc2l0ZS4gSGUgbGlrZXMgdGhlIGlkZWEsIHdlIHByb3ZlIHdlIG93biBpdCwgYW5kIHdlIG5vdyBoYXZlIGEgdmVyeSBsYXJnZSBkaXJ0IGZpbGxlZCBndWxseSBiZWluZyBjb25zdGFudGx5IGZpcm1lZCB1cC4gCldoaWxlIE1hcmNoaSBleGN1c2VkIGhpbXNlbGYgZnJvbSB0aGUgY291cnRyb29tIGZvciBhIG1vbWVudCBiZWZvcmUgaGUgbWFkZSBoaXMgZGVjaXNpb24gb24gdGhlIG9mZmljaWFsIHNlbnRlbmNlLCB0aGUgbm90b3Jpb3VzbHkgY2hhdHR5IERlbCBCYWxzbyBzYWlkOiB3b24gdGFsayB0byBoaW0gZm9yIDEwMCB5ZWFycy4gV2hvIGNhcmVzPyBQYXJvbGUgQm9hcmQgb2YgQ2FuYWRhIGhhcyB0d2ljZSByZXZva2VkIERlbCBCYWxzbyBzdGF0dXRvcnkgcmVsZWFzZSBvdXQgb2YgY29uY2VybnMgZm9yIGhpcyBvd24gc2FmZXR5LCBpbmNsdWRpbmcgaG93IGhpcyBjbG9zZSBmcmllbmQgYW5kIGZlbGxvdyBNb250cmVhbCBNYWZpYSBsZWFkZXIgTG9yZW56byAoU2t1bmspIEdpb3JkYW5vIHdhcyBraWxsZWQgaW4gTGF2YWwgaW4gTWFyY2ggMjAxNi4gSGlzIHJlbGVhc2Ugd2FzIHJldm9rZWQgYWdhaW4gYWZ0ZXIgUyB3YXMgdGhyZWF0ZW5lZC4KS2hhbiBvbiB0aGUgb3RoZXIgaGFuZCBpcyBhIHdlbGwga25vd24gY29tbW9kaXR5IGluIEFtZXJpY2EsIHRoZSBVSyBhbmQgQXNpYSwgYW5kIGhhcyBwcm92ZW4gdG8gcHV0IGJ1dHRzIGluIHNlYXRzIGluIGFsbCB0aHJlZSBjb250aW5lbnRzIChoZSdzIGEgc3RhciBhdHRyYWN0aW9uIHdoZW4gaGUgdmlzaXRzIEFzaWEpLiAKV2lubmFWZWdhcyBpcyB0aGUgU2lvdXhsYW5kIG51bWJlciBvbmUgZGVzdGluYXRpb24gZm9yIGZ1biBhbmQgZXhjaXRlbWVudCEgV2luIGJpZyBhdCBvdmVyIDg1MCBzbG90IGFuZCB2aWRlbyBwb2tlciBtYWNoaW5lcy4gVHJ5IHlvdXIgbHVjayBhdCBvbmUgb2YgdGhlIGxpdmUgcG9rZXIsIEJsYWNramFjaywgUm91bGV0dGUgYW5kIENyYXBzIHRhYmxlcy4gR2V0IHJlYWR5IHRvIHllbGwsICJCSU5HTyEiIGJlY2F1c2UgV2lubmFWZWdhcyBpcyB0aGUgYmVzdCBwbGFjZSBhcm91bmQgZm9yIHNvbWUgbGl2ZWx5IEJpbmdvLiAKU29tZW9uZSB3aXRoIGFuIElRIGluIHRoZSB0b3AgdGhpcmQgYW5kIGdvb2QgZm9jdXMsIGhlYWx0aCwgb3Bwb3J0dW5pdGllcyBjYW4gZG8gcHJldHR5IG11Y2ggYW55IHVzZWZ1bCBqb2IuIHlvdSBoYXZlIGEgcGFydHkgdHJpY2sgb2YgYmVpbmcgZ29vZCBhdCBJUSB0ZXN0cy4KTXkgbW9tIGlzIGFuIGFzc2hvbGUgYW5kIGRlY2lkZWQgc2hlIG5lZWRlZCB0byBnbyB0byBIb21lIERlcG90IGltbWVkaWF0ZWx5IGFmdGVyIEkgZ290IHRoZSB3aXJlcyByZW1vdmVkIHNvIEkgYnJvdWdodCBhIHRvb3RoIGJydXNoIGFuZCB3ZW50IGludG8gdGhlIEhEIGJhdGhyb29tIHRvIHRyeSB0byBicnVzaCB0aGUgc2N1bSBvZmYuIE15IHNoaXQgd2FzIHNvIHJhdyB0aGUgc2luayBmaWxsZWQgdXAgd2l0aCBibG9vZCBhbmQgdGhleSBjYWxsZWQgYSBzZWN1cml0eSBndWFyZCB0byBjb21lIHNlZSB3aHkgdGhlIGZ1Y2sgdGhlcmUgd2FzIGEgc2V2ZW50ZWVuIHllYXIgb2xkIGluIHRoZSBiYXRocm9vbSBzcGl0dGluZyBtb3V0aGZ1bHMgb2YgYmxvb2QgaW50byB0aGUgc2luayBhbmQgc3BsYXNoaW5nIGl0IG9uIHRoZSBtaXJyb3IgYW5kIHNoaXQuCkFuZCB3aGVuIHNoZSB0dXJucyA5MSwgSG9sbG8gc2FpZCBzaGUgcGxhbnMgb24gZ29pbmcgZG9nIHNsZWRkaW5nIGluIFF1ZWJlYy4KQnV0IGR1ZSB0byB0aGUgTm9yd2VnaWFuIHBvcHVsYXRpb24gYmVpbmcgdGlueSAoYXJvdW5kIDUgbWlsbGlvbikgaXQgZG9lc24gbWFrZSB0aGUgbmV3cyBidXQgcGVyIGNhcGl0YSB0aGV5IGhvcnJpYmxlIGFzIGlzIFN3ZWRlbi4gSXQgYSBzdGFuZGluZyBqb2tlIGhlcmUgaW4gU3dlZGVuIHRoYXQgd2UgaGF2ZSB0byBxdWV1ZSBmb3IgZXZlcnl0aGluZyB0byBzdWNoIGFuIGV4dGVudCBhIGpva2UgaW1hZ2UgYWJvdXQgcGVuc2lvbmVycyBzdGFuZGluZyBpbiBsaW5lIGZvciB0aGUgY3JlbWF0b3JpdW0gc2VlbXMgcGxhdXNpYmxlLiAKQ2hlY2sgb3V0IHRoZSBUb3AgMTAgUG9rZXIgVG91cm5hbWVudHMgaW4gdGhlIFVTOlRoZXJlIGFyZSB0d28gKDIpIHdheXMgb2YgcGFydGljaXBhdGluZyBpbiBhIHBva2VyIHRvdXJuYW1lbnQuIEZpcnN0IHRoZSB0cmFkaXRpb25hbCB2ZW51ZSwgdGhlc2UgYXJlIHRoZSBjYXNpbm9zLCBwb2tlciByb29tcyBhbmQgZXZlbiB5b3VyIGRpbmluZyB0YWJsZSB3aGVyZSB5b3Ugc2l0IGFjcm9zcyB0aGUgb3RoZXIgcGxheWVycyB0cnlpbmcgdG8ga2VlcCB0aGUgc28gY2FsbGVkIHBva2VyIGZhY2UgZGVzcGl0ZSBoYXZpbmcgZnVsbCBob3VzZS4gCkkgdGVuZCB0byBkaXNhZ3JlZSB3aXRoIG1vc3Qgb2YgdGhlICJmb2xsb3cgeW91ciBmZWVsaW5ncyIgc29ydCBvZiB0aGluZy4gCkFzIHBsYXllcnMgd2lsbCBrZWVwIG9wZW5pbmcgcGFja3MgdG8gZ2V0IGludG8gdG91cm5hbWVudHMgYWZ0ZXIgaGF2aW5nIGFscmVhZHkgY29tcGxldGVkIHRoZWlyIGNvbGxlY3Rpb24uIApJbiB0aGF0IGFubm91bmNlbWVudCB0aHJlYWQsIHRoaXMgdXNlciBjYW1lIGluIGFuZCBhc2tlZCBob3cgd2Ugd291bGQgaW50ZXJwcmV0IGEgdGl0bGUgbGlrZSB0aGF0LiBBdCB0aGUgdGltZSBpdCB3YXMgYSBoeXBvdGhldGljYWwgYW5kIHdlIGhhZCBubyBpZGVhIHRoZSBPUCB3YXMgcmVhbCBvciB3b3VsZCB1bHRpbWF0ZWx5IHJlcG9zdCBzb21ldGhpbmcgdGhleSBkZWxldGVkICh3aGljaCBpcyB3aGVyZSB0aGUgdXNlciBnb3QgdGhlIGlkZWEgdG8gYXNrKS4KTm93IGEgY2F0aGV0ZXIgcGxhY2VtZW50IGlzIHVzdWFsbHkgYSBvbmUgcGVyc29uIGpvYiBzbyBJIHdhcyBwcmV0dHkgY29uZnVzZWQgYXMgdG8gd2h5IHRoZXkgbmVlZGVkIG15IGhlbHAuLiAKRGFtYWdlZCBjb3NtZXRpY3MgaW5jbHVkZWQgaXRlbXMgd2UgaGFkIHRvIHVzZSBhcyB0ZXN0ZXJzIGFuZCBicm9rZW4gb3IgZmF1bHR5IGl0ZW1zIGJ1dCB0aGUgdmFzdCBtYWpvcml0eSB3ZXJlIGN1c3RvbWVyIHJldHVybnMuIEkgb25jZSBoYWQgYSBsYWR5IHRyeSB0byByZXR1cm4gYSBicm9rZW4gYm90dGxlIG9mIENoYW5lbCBwZXJmdW1lIGJlY2F1c2Ugc2hlIGRyb3BwZWQgaXQgYW5kIGl0IHNoYXR0ZXJlZC4gQWxsIHNoZSBoYWQgd2FzIHRoZSBhdG9taXplciBhbmQgYm94LiBTaGUgc29tZWhvdyB0aG91Z2h0IHNoZSBjb3VsZCByZXR1cm4gaXQgYW5kIGV4Y2hhbmdlIGl0IGZvciBhIG5ldyBvbmUgYWxsIGJlY2F1c2Ugc2hlIGJyb2tlIGl0LgpMdWNreSA3IExlc3NvbnMgZnJvbSBWZWdhcwpEaWwga2EgZ2FtIHNvZ3lhLiAKQWJkdWJrdWIgdQpOb3cgMiBvZiB0aGVtIHdlcmUgVHJ1bXAgc3VwcG9ydGluZyBiYWJ5IGJvb21lcnMgd2hvIEkgYWxyZWFkeSBrbmV3IHRvIGJlIGNsb3NlIG1pbmRlZCwgaG9tb3Bob2JpYywgZXZlciBzbyAic2xpZ2h0bHkiIHJhY2lzdCBjb3VudHJ5IGJ1bXBraW5zLi4gCkluIG1hcmtldHMgd2hlcmUgdGhlIGRlbWFuZCBmb3IgbGFib3IgaXMgZmllcmNlIChleC4gClJlYWRlciBvZmZlcgpUaGV5IGJlbGlldmUgd2UgYXJlIG5vdyBpbiBhIHNpdHVhdGlvbiB3aGVyZSBpbW1pZ3JhbnRzIGFyZSBub3cgZWF0aW5nIGludG8gInRoZWlyIHNoYXJlIiBvZiB0aGUgZmluaXRlIHJlc291cmNlcy4gSXQgaXMgVkVSWSBwb3NzaWJsZSBmb3IgYSBzaXR1YXRpb24gdG8gZ28gZnJvbSBub3QgYW4gZW1lcmdlbmN5IHRvIGFuIGVtZXJnZW5jeS4gClRoZSBkZXBvc2l0IGJlaW5nIHJldHVybmVkIHRvIHRoZSBhZ2VudCBpcyByYXRoZXIgb2RkIGltby4gRXNwIGJlY2F1c2UgaW4gdGhhdCBzaXR1YXRpb24gdGhleSBiZSBlbnRpdGxlZCB0byBjb21taXNzaW9uIHJlZ2FyZGxlc3Mgb2YgaWYgdGhlIGRlYWwgY2xvc2VzLiBJbiBwcmFjdGljZSwgYWdlbnRzIHJhcmVseSBjb2xsZWN0IG9uIHRoaXMgYW5kIGluc3RlYWQgZm9jdXMgb24gZ2V0dGluZyB0aGUgcGxhY2Ugc29sZC4gVGhleSBkb24gd2FudCB0byBiZSBzZWVuIGFzIHRoZSBndXkgd2hvIHRvb2sgeW91ciBtb25leSB3aXRob3V0IHNlbGxpbmcgeW91ciBob3VzZSwgZXZlbiBpZiB0aGV5IGRpZCBkbyB0aGVpciBqb2IuCkFuZCB0aGVzZSBhcmUgbGlrZSBsZWdhbCBtZWRpY2FsIHJlY29yZHMgdGhhdCBjb3VsZCBiZSBzdWJwb2VuYWVkLiAKQnV0IHllcywgZmVlZGluZyB3aWxkIGFuaW1hbHMgYmFkLCBkbyBhcyBJIHNheSwgbm90IGFzIEkgZG8uIDE4IHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ28KQW55d2hvLCBvbmUgZGF5IHdlIHNlZSBoZXIgaGF2aW5nIGEgaHVnZSBzY3JlYW1pbmcgbWF0Y2ggYXQgcmVjZXNzIHdpdGggYSBibG9rZSBhIHllYXIgdXAgZnJvbSB1cy4gSGUgc3Rvcm1lZCBvZmYgYXMgd2UgY2FtZSB1cCAgIEkgd2FzbiBhIHNtYWxsIGd1eSBldmVuIHRoZW4gYW5kIGhhZCBhIGJpdCBvZiBhIHJlcCAgIGFuZCBzaGUgd2FzIHZpc2libHkgc2hha2VuLiBUdXJucyBvdXQgdGhlIGJsb2tlIHJlY29nbml6ZWQgaGVyIGZyb20gdGhlIGxvY2FsIE1vc3F1ZSBhbmQgd2FzIGluY2Vuc2VkIHNoZSBkaWRuIGhhdmUgaGVyIHRyYWRpdGlvbmFsIGtpdCBvbi4KQnV0IHVuZm9ydHVuYXRlbHkgZm9yIGZpcnN0IHRpbWUgcG9rZXIgcGxheWVycyBsaWtlIHlvdSwgbW9zdCBvZiB0aGUgcmVnaXN0ZXJlZCBtZW1iZXJzIGluIHRoZXNlIHNpdGVzIGFyZSBhbHJlYWR5IHZlcnkgZ29vZCBwb2tlciBwbGF5ZXJzIGFuZCBxdWl0ZSBkaWZmaWN1bHQgdG8gYmVhdCB3aGVuIHlvdSBnbyBhZ2FpbnN0IHRoZW0uIApUaGUgcmVwb3J0IHByZWRpY3RzIG1vcmUgbW9kZXN0IGluY3JlYXNlcyBmb3IgYmFrZXJ5IChvbmUgdG8gdGhyZWUgcGVyIGNlbnQpLCBkYWlyeSAoemVybyB0byB0d28gcGVyIGNlbnQpLCBmcnVpdCAob25lIHRvIHRocmVlIHBlciBjZW50KSBhbmQgb3RoZXIgZm9vZCBpdGVtcywgc3VjaCBhcyBub24gcGVyaXNoYWJsZXMsIG5vdCBjb3ZlcmVkIGJ5IHRoZSBvdGhlciBjYXRlZ29yaWVzICh6ZXJvIHRvIHR3byBwZXIgY2VudCkuCllvdSBhcmUgbm93IHBsYXlpbmcgYSBoaWdoIGxpbWl0IGJldCBvbiBhICQxIHNsb3QuIEZvciBncmVhdGVyIHBheWJhY2sgcGVyY2VudGFnZSwgaW5jcmVhc2VkIHJhdGluZ3MgYXMgYSBwbGF5ZXIgYW5kIG1vcmUgcGVyc29uYWxpemVkIGF0dGVudGlvbiwgeW91IG1heSB3aXNoIHRvIG1vdmUgb3ZlciB0byB0aGUgaGlnaCBsaW1pdCBtYWNoaW5lcy4uIApJbmRlZWQsIG1hbnkgY29tZSBmb3IgdGhhdCBleHBlcmllbmNlLiAKRURJVDogSSBtYWtlIGEgZmFpciBzaGFyZSBvZiBwb3N0cyB0aGF0IGRyYXcgYSBsYXJnZSB2b2x1bWUgb2YgY29tbWVudHMgYnkgYSBjZXJ0YWluIHZvY2FsIGludGVybmV0IG1pbm9yaXR5IHdlIGFsbCBrbm93LCBidXQgSSBmaW5kIGl0IGludGVyZXN0aW5nIHRoYXQgdGhlIHRoaW5nIHRoYXQgYWx3YXlzIHNlZW1zIHRvIGRyYXcgdGhlIG1vc3QgYW5nZXIgYW5kIHRoZSBncmVhdGVzdCBudW1iZXIgb2YgY29tbWVudHMgaXMgY2FsbGluZyBvdXQgVHJ1bXAgcmFjaXNtLgpUaGVyZSBhcmUgc28gbWFueSB1bmtub3ducyB0aGF0IGl0IGJlIHZlcnkgaGFyZCBmb3IgYSBNYXJ0aWFuIHBoeXNpY2lhbiB0byBwcmVkaWN0IHdoYXQgbWlnaHQgaGFwcGVuIG9uIHRoZSBqb3VybmV5IG9yIGFmdGVyIHRoZSBsYW5kaW5nLiBSZSBzdXBwbHkgd2luZG93cyB3aWxsIGJlIGluZnJlcXVlbnQsIGFuZCwgYXMgbWVudGlvbmVkIGVhcmxpZXIsIGRlcGFydHVyZSB3ZWlnaHQgaXMgKGZvciB0aGUgdGltZSBiZWluZykgbGltaXRlZCwgc28gaXQgd2lsbCBiZSBhIGNhc2Ugb2YgZXF1aXBwaW5nIGFzdHJvbmF1dHMgYXMgYmVzdCB3ZSBjYW4gdG8gY292ZXIgYXMgbWFueSBsaWtlbHkgc2NlbmFyaW9zIGFzIHdlIGNhbi4KRmlsbCB1cCBhdCBmaXZlIG9uIHNpdGUgcmVzdGF1cmFudHMgYW5kIGJ1cm4gb2ZmIHRoZSBjYWxvcmllcyB3aXRoIGEgc3dpbSBvciB3b3Jrb3V0IGF0IHRoZSBjYXNpbm8ncyB3ZWxsbmVzcyBjZW50ZXIuLiAKRGVwZW5kaW5nIG9uIHRoZSB0b3BpYy4gClNpZSBoYWJlbiB3YWhyc2NoZWlubGljaCBlaW5mYWNoIG5pY2h0IGRhcyBXaXNzZW4gZGFyYmVyLCB3YXMgZHUgc28gbWFjaHN0LCB1bSBlaW4gZWNodGVzIEdlc3ByY2ggbWl0IGRpciBhbnp1ZmFuZ2VuLiAiZXksIFNlbmRNZU9yYW5nZUxldHRlcnMsIGFsdGVyIGthY2tuMDBiLCBzcGllbHN0IGR1IE92ZXJ3YXRjaD8gSWNoIGJpbiBIYW56byBNYWluIi4gClRob3NlIHRpbWVzIG15IGZhbWlseSB3YXMgcXVpdGUgcG9vciBhbmQgaXQgbWFkZSBtZSB0aGluayB0aGF0IEkgd291bGQgYmUgYWJsZSB0byBtYWtlIG1vbmV5IHRocm91Z2ggYm94aW5nIGluIG9yZGVyIHRvIGJ1eSBhIG5pY2UgYXBhcnRtZW50IGZvciBteSBmYW1pbHkgYW5kIHRvIGZpbmFsbHkgbW92ZSBvdXQgZnJvbSBvdXIgb2xkIGhvdXNlLiBBUEIgYm94ZXIgYWxzbyB0YWxrcyBhYm91dCBoaXMgZW1vdGlvbnMgcmVsYXRpbmcgdG8gdGhlIExvbmRvbiBPbHltcGljIEdhbWVzIHdoZXJlIGhlIHdvbiBhIHNpbHZlciBtZWRhbC4gRmluYWxseSwgTWFuIHVudmVpbHMgaGlzIGhvcGVzIGluIHJlZ2FyZHMgdG8gdGhlIG5leHQgQUlCQSBXb3JsZCBCb3hpbmcgQ2hhbXBpb25zaGlwcyBpbiBLYXpha2hzdGFuLi4gClRoZXkgZnVja2VkIG1lIGFyb3VuZCBmb3IgbmVhcmx5IDMgaG91cnMgaW4gdGhlIGVuZCB0aGlzIHRpbWUuSWYgSSBoYWRuIGp1c3QgYm91Z2h0IGEgd2F0Y2ggNCwgSSB3b3VsZCBhc2tlZCBmb3IgbXkgbW5wIGFuZCBmdWNrZWQgb2ZmIHRvIGEgV0FZIGNoZWFwZXIgbXZuby4gaGVjaywgd2hpbGUgSSBsaWtlIG15IHdhdGNoIGFuZCBpdHMgY2VsbHVsYXIgZmVhdHVyZXMsIEkgYW0gZ2V0dGluZyBWRVJZIGNsb3NlIHRvIHdhbGtpbmcgb3V0IGF0IHRoZSBlbmQgb2YgbXkgY29udHJhY3QgYW55d2F5cy5JIGhhZCBoYWxmIHRoZSBwdXJjaGFzZSBoaXN0b3J5LCBsb25nZXIgdG90YWwgY29udHJhY3QgdGltZSAoYW5kIHdheSBjaGVhcGVyIGNvbnRyYWN0KSwgYW5kIHdhcyB0cmVhdGVkIFdBWSBiZXR0ZXIgYmFjayBpbiBDYW5hZGEuIApBcyBJIHdhbGsgYXdheSwgSSBydW1pbmF0ZSBvbiB0aGUgZGlzYXN0ZXIgdGhhdCBqdXN0IHdhcywgdGhlIGZlZWxpbmcgb2YgcmVqZWN0aW9uLCBhbmQgdGhlIGZhY3QgdGhhdCBpIHNwZW50IG1vcmUgdGltaW5nIGRyaXZpbmcgdG8gZGlubmVyIHRoYW4gYWN0dWFsbHkgYXQgZGlubmVyLiAKRG9uJ3QgbG9vayBkb3duLiBMZXQncyBmYWNlIGl0LiBUaGVyZSB3aWxsIGJlIGV5ZXMgZ2x1ZWQgdG8geW91ciBicmVhc3RzLCB3aGV0aGVyIHlvdSdyZSB3ZWFyaW5nIGEgYnJhIG9yIG5vdC4gQnV0IGp1c3QgYmVjYXVzZSB0aGV5J3JlIGxvb2tpbmcgZG9lc24ndCBtZWFuIHlvdSBoYXZlIHRvLgpCdXQgY29tcGFyZWQgdG8gbW9zdCBjaGVhcGVyIGV4ZWN1dGl2ZSBvZmZpY2UgY2hhaXJzLCBvciBnYW1pbmcgY2hhaXJzICh3aGljaCBhcmUgdGhlIHNhbWUgdGhpbmcsIGp1c3QgZGlmZmVyZW50IHN0eWxpbmcpLCBJIHNheSB0aGUgRW1ib2R5IG9yIEFlcm9uIGFyZSBzdWZmaWNpZW50bHkgbW9yZSBleHBlbnNpdmUgdG8gbWFrZSBpdCBhIG1peGVkIGJhZywgeW91IGNhbiBhZmZvcmQgdG8gcmVwbGFjZSBzZXZlcmFsIGdhbWluZyBjaGFpcnMgd2l0aCB0aGUgY29zdCBvZiBvbmUgRW1ib2R5LCBzbyBvbmUgY291bGQgdGhlb3JldGljYWxseSByZXBsYWNlIHRoZW0gYXMgc29vbiBhcyB0aGUgY3VzaGlvbiBjb2xsYXBzZXMsIGFzIHRoZXkgYWx3YXlzIGRvIGFmdGVyIGFib3V0IDE4IG1vbnRocy4gCjE5NTM6IE1hbmNoZXN0ZXIgR3VhcmRpYW4gV2Vla2x5IERlYy4gMTUvMiBNYW55IGZhY3RvcmllcyBhcmUgc3BlbmRpbmcgbGFyZ2Ugc3VtcyBvbiAnYXV0b21hdGlvbicsIHRoYXQgaXMsIHRoZSBhZG9wdGlvbiBvZiBhdXRvbWF0aWMgbWFjaGluZXMgd29ya2luZyB0b2dldGhlciB3aXRoIGxpdHRsZSBsYWJvdXIuIgpUaGUgY2hhcmFjdGVycyBhcmUgaW5zcGlyZWQgYnkgbW9uc3RlciBtb3ZpZXMsIHNjaSBmaSBob3Jyb3IsIHRocmlsbGVyIGZpY3Rpb24sIGFuZCB2YXJpb3VzIGNyZWF0dXJlcyB0aHVzIGRpc3Rpbmd1aXNoaW5nIHRoZW0gZnJvbSBtb3N0IG90aGVyIGZhc2hpb24gZG9sbHMgb24gdGhlIG1hcmtldC4gCkkgaGFuZGljYXBwZWQgYW5kIGJldHdlZW4gc2l0dGluZyBpbiBhIHJpZGUgZm9yIGFuIGhvdXIgYW5kIHRoZSBleHRyYSB3YWxrIEkgbm90IGZlZWxpbmcgdG9vIGdyZWF0IGFib3V0IHRvbmlnaHQuIApGYWN0b2lkXyAgMzggcG9pbnRzICBzdWJtaXR0ZWQgMiBtb250aHMgYWdvCiJXaHkgZG9uJ3QgeW91IGp1c3QgYXR0YWNoIGEgY291cGxlIHN0cmluZ3MgdG8gbWUgYW5kIGNhbGwgbWUgUGlub2NjaGlvPyIgSSBtdXR0ZXJlZCwgdW5hYmxlIHRvIHN0b3AgdGhlIHZlbm9tIHRoYXQgZHJpcHBlZCBpbnRvIGVhY2ggd29yZC4gQmVmb3JlIEkgbGV0IFNlc3Nob21hcnUgcmVwbHksIEkganVzdCBsZWZ0IHRoZSByb29tLCBzbGFtbWluZyB0aGUgZG9vciBhZ2FpbnN0IGhpcyB3aXNoZXMuIElmIEkgZGlkbid0IGdldCBteSB3aXNoLCBoZSBzdXJlIGFzIGhlbGwgd291bGRuJ3QgZ2V0IGhpcy4gSSBjb3VsZCBpbWFnaW5lIFNlc3Nob21hcnUgY3Vyc2luZyBhdCBoaXMgZGVzayBhbmQgZGVzcGl0ZSB0aGUgYW5nZXIgSSBmZWx0LCBzbWlya2VkIG5vbmUgdGhlIGxlc3MuClRoZSBhZG9yYWJseSBhc3R1dGUgWmV2IHNhaWQgaGUgZGlkbid0IGdldCBhICJ3YXJtIGxvdmluZyBmZWVsaW5nIiBmcm9tIHRoZSBwc2V1ZG8gcGhpbGFudGhyb3BpYyBwb2tlciBnYWxzIGdhdmUgaGlzIG93biBqYWNrZXQgdG8gYSByYWluIGRyZW5jaGVkIGFuZCBvYnZpb3VzbHkgZnJlZXppbmcgbG9jYWwgbWFuIGluIFZpZXRuYW0uIApBZnRlciBJIGNyb3NzZWQgdGhlIGZpbmlzaCBsaW5lIEkgYWxtb3N0IHBhc3NlZCBvdXQgYW5kIGhhZCB0byBzaXQgZG93biBmb3IgMTUgbWludXRlcyBiZWNhdXNlIEkgd2FzIHRvbyBkaXp6eSB0byBzdGFuZCB3aXRob3V0IGxpdGVyYWxseSBmYWxsaW5nIG92ZXIuIEkga25vdyB0aGF0IGl0IG11Y2ggYmV0dGVyIHRvIHdhbGsgaXQgb2ZmIHRoYW4gdG8gc2l0LCBidXQgSSBwaHlzaWNhbGx5IGNvdWxkIG5vdCBzdGFuZCAodGhpcyBoYXMgbmV2ZXIgaGFwcGVuZWQgYmVmb3JlKS4gClllcyBBbm9saWFuIG9yIEZpcmViYWxsIEZhcm0gaXMgZWFzaWVyIHRvIGFjaGlldmUgYnV0IHRoZXkgYWxzbyBoYXZlIG11Y2ggd29yc2UgZmFybSByYXRlIChhbmQgY29uc3VtZSBhIGxvdCBvZiBTUCBSZWdlbiBmb3IgRmlyZWJhbGwpLiBZb3UgY291bGQgZWFzaWx5IGdldCB0aGUgZmFybSByYXRlIHlvdSB3b3VsZCBnb3R0ZW4gd2l0aCBhIEZpcmViYWxsIGZhcm1pbmcgbWV0aG9kIHdpdGggYSBsdmwgNiA3IEZpcmVib2x0LiAKWW91IGJlZW4gZW1vdGlvbmFsbHkgYWJ1c2VkIGJ5IHRoaXMgZ3V5LCBhbmQgaXQgc291bmRzIGxpa2UgaXQgbWlnaHQgaGF2ZSBiZWNvbWUgcGh5c2ljYWwuIApNYXNzYWdlIHRoZXJhcHkgaXMgYSBjb21wcmVoZW5zaXZlIGludGVydmVudGlvbiBpbnZvbHZpbmcgYSByYW5nZSBvZiB0ZWNobmlxdWVzIHRvIG1hbmlwdWxhdGUgdGhlIHNvZnQgdGlzc3VlcyBhbmQgam9pbnRzIG9mIHRoZSBib2R5LiBUaGUgcHVycG9zZSBvZiBtYXNzYWdlIHRoZXJhcHkgaXMgdG8gcHJldmVudCwgZGV2ZWxvcCwgbWFpbnRhaW4sIHJlaGFiaWxpdGF0ZSBvciBhdWdtZW50IHBoeXNpY2FsIGZ1bmN0aW9uIG9yIHJlbGlldmUgcGFpbiAoTWFzc2FnZSBUaGVyYXB5IEFjdCwgMTk5MSkuIEl0IGlzIGEgY2xpbmljYWxseSBvcmllbnRlZCBoZWFsdGggb3B0aW9uIHRoYXQgYWNoaWV2ZXMgdW5kZW5pYWJsZSByZXN1bHRzIGluIHRoZSByZWxpZWYgb2YgYW4gYXJyYXkgb2YgZGlzY29tZm9ydHMgc3RlbW1pbmcgZnJvbSBzdHJlc3MsIG11c2N1bGFyIG92ZXJ1c2UgYW5kIG1hbnkgY2hyb25pYyBwYWluIHN5bmRyb21lcy4KVGhlcmUgYWxzbyB0aGUgIGNoYW4va3VuIHRoaW5nLiAgQ2hhbiBpcyB1c3VhbGx5IHVzZWQgZm9yIGdpcmxzIGJ1dCBpdCBjYW4ganVzdCBhcyBlYXNpbHkgYmUgdXNlZCBmb3IgYm95cywgdmljZSB2ZXJzYSBmb3IgIGt1biAod2hpY2ggaXMgdXN1YWxseSB1c2VkIGZvciBib3lzLCBidXQgY2FuIGVhc2lseSBiZSBwdXQgb24gYSBnaXJscyBuYW1lIHRvbykuIAo5MGdyIFNNS3MgYXJlIGxvYWRlZCBpbnRvIEFSIDE1cyBxdWl0ZSBoYXBwaWx5IGluIHRoZSAuMjI0IFZhbGt5cmllIGNhcnRyaWRnZS4gCkEgcmFpc2UgbXVzdCBiZSBBVCBMRUFTVCBlcXVhbCB0byB0aGUgcHJldmlvdXMgYmV0IG9yIHJhaXNlIGluIHRoZSBzYW1lIHJvdW5kLiAKVGhhdCBhbHNvIHdoeSB3ZSBzdGlsbCBoYXZlbiBzZWVuIGFueSBuZXcgQXJraGFtIGdhbWVzIHNpbmNlIEFLIGRlc3BpdGUgbXVsdGlwbGUgbGVha3MgZnJvbSBib3RoIFJvY2tzdGVhZHkgYW5kIFdCIE1vbnRyZWFsICAgdGhlIGxhdHRlciBpbiBwYXJ0aWN1bGFyIHdvcmtlZCBvbiBtdWx0aXBsZSBwcm9qZWN0cyAobGlrZSBhIFN1aWNpZGUgU3F1YWQgZ2FtZSkgd2hpY2ggYWxsIGZlbGwgYXBhcnQuLiAKIERlZmluaXRlbHkgc2hvd2VyIGJ1dCBJIGZpbmQgdGhhdCB3ZXQgaGFpciBpcyBoYXJkIHRvIHdvcmsgb24gaWYgeW91IHdhbnQgYSBzY2FscCBtYXNzYWdlLiBXZSBkb24gcmVhbGx5IGNhcmUgYWJvdXQgaGFpcnkgbGVncyBvciBhcm1waXRzIGJ1dCBpdCBtYWtlcyB0aGUgZmxvdyBvZiB0aGUgbWFzc2FnZSBhIGJpdCBiZXR0ZXIgaWYgaXQgaGFpcmxlc3MuIFN1Y2tzIHRvIHdvcmsgb24gcmVhbGx5IGhhaXJ5IGR1ZGVzIGJ1dCBvaCB3ZWxsLiAKSSBlbmNvdW50ZXJlZCBwZW9wbGUgd2hvIHdpbGwgdGFrZSBhZHZhbnRhZ2UgYW5kIGZvc3RlciBhIGZhbHNlIHNlbnNlIG9mIGtpbnNoaXAgYmFzZWQgb24gc2hhcmVkIGhlcml0YWdlLiAKU2hvdCBoZXIgaW4gdGhlIGJyZWFzdCBhbmQgaW4gdGhlIGJ1dHRvY2tzIHdpdGggc29tZSBraW5kIG9mIHBlbGxldCBndW4uIApJIGp1c3QgZG9uIHRoaW5rIHBlb3BsZSBzaG91bGQgYmUgY2hhbmdpbmcgdGhlaXIgaGFpciBjb2xvdXIgc2ltcGx5IGJlY2F1c2UgaXQgbWF5IG1ha2UgdGhlbSBtb3JlIGxpa2VseSB0byBmaW5kIGEgcGFydG5lci4gCkl0IGNhbiBiZSBoYXJkIHRvIGRlY2lkZSB3aGljaCBpcyB0aGUgYmVzdCBQb2tlciBUYWJsZSBGZWx0cyBzaW5jZSB0aGVyZSBhcmUgc28gbWFueSBvcHRpb25zIG91dCB0aGVyZS4gWW91IGhhdmUgYSBsb3QgdG8gdGFrZSBpbnRvIGNvbnNpZGVyYXRpb24gd2hlbiBtYWtpbmcgYSBwdXJjaGFzZSBzdWNoIGFzIHRoZSBjb2xvciwgdGhlIGRlc2lnbnMsIGFuZCB0aGUgcHJpY2UuIEV2ZW4gdGhvdWdoIHdlIGNhbid0IG1ha2UgdGhlIGRlY2lzaW9uIGZvciB5b3UsIHdlIGNhbiBhdCBsZWFzdCBoZWxwIHlvdSBhbG9uZyBieSBwcm92aWRpbmcgeW91IHdpdGggc29tZSBoZWxwZnVsIHRpcHMgdGhhdCB5b3UgY2FuIHRha2UgaW50byBjb25zaWRlcmF0aW9uLgpEbyBub3QgdXNlIHByb2Zhbml0eSwgb2JzY2VuaXRpZXMsIGFidXNpdmUgbGFuZ3VhZ2Ugb3Igb3RoZXJ3aXNlIG9iamVjdGlvbmFibGUgY29udGVudCAoYXMgZGV0ZXJtaW5lZCBieSBDaGFyaXNtYSBNZWRpYSBtb2RlcmF0b3JzLCBpbiB0aGVpciBzb2xlIGRpc2NyZXRpb24pLiBDb21tZW50cyBzaG91bGQgbm90IGhhcmFzcywgYWJ1c2Ugb3IgdGhyZWF0ZW4gYW5vdGhlcidzIHBlcnNvbmFsIHNhZmV0eSBvciBwcm9wZXJ0eSwgbWFrZSBmYWxzZSBzdGF0ZW1lbnRzLCBkZWZhbWUgb3IgaW1wZXJzb25hdGUgc29tZW9uZSBlbHNlLgpGb3IgaW5zdGFuY2Ugb24gdGhlIFBybyBzaWRlLCB5b3UgZ2V0IGNoaXBzIGEgbG90IG1vcmUgY2hlYXBlciB0aGFuIHlvdSB3b3VsZCBnZXQgdGhlbSBmcm9tIGluIHRoZSBnYW1lLiAKUGVvcGxlIHRvb2sgdGhlIGJhaXQgYW5kIHdlcmUgb3Zlcmx5IGdlbmVyb3VzIHRvIGhlbHAgdGhlIG5vb2IgKHdoaWNoIGlzIGNvb2wpLCBidXQgbm93IGV2ZXJ5b25lIGlzIGNvcHlpbmcgdGhpcyBpZGVhIGFuZCB0cnlpbmcgdG8gc3F1ZWV6ZSBtb25leSBvdXQgb2YgZ2VuZXJvdXMgcGVvcGxlIGF0IHRoZSBHRSAod2hpY2ggaXMgbm90IGNvb2wpLi4gCkkgdmlzaXRlZCBNeWFubWFyIHNvb24gYWZ0ZXIsIGFuZCBJIG1hZGUgYSBjcnVjaWFsIGNoYW5nZSBpbiBteSBiZWxpZWZzOiB0byByZXNwZWN0IHBlb3BsZSBhbmQgbm90IGxvb2sgYXQgd2hhdCB0aGV5IGJlbGlldmUsIGlnbm9yaW5nIHRoZSBwaHlzaWNhbCBuZWVkLiBJIHdvdWxkIHdvcmsgdG8gYWxsZXZpYXRlIHN1ZmZlcmluZyBpbiB0aGUgd2F5cyB0aGF0IEkgY291bGQsIGJlY2F1c2UgaXQncyBub3QgZ29vZCBlbm91Z2ggdG8gc2VlIHRoZSB3b3JsZCB0aHJvdWdoIGJsaW5rZXJlZCBleWVzLgpOb25lIG9mIHRoaXMgc2hpdCBpcyBtYWluc3RyZWFtLiAKVGhpcyBpcyB0aGUgc2FtZSBpZGVhIGhlcmUuIFRydW1wIChhbmQgTWNDb25uZWxsKSBhcmUga2VlcGluZyB0aGUgZ292ZXJubWVudCBzaHV0IGRvd24gYmVjYXVzZSBoZSB3YW50cyBtb25leSBzcGVudCBhIGNlcnRhaW4gd2F5LiAKQnV0IGF0IHRoZSBlbmQgb2YgdGhlIGRheSBpdCdzIHdobyB5b3UgYXJlLCBzbyBpdCdzIHlvdXIgZGVjaXNpb24uIApJIHRvbGQgeW91IHRoaXMgd2FzIGNvbXBsaWNhdGVkLiBJIG1lYW4sIHRoZXJlIGFyZSBiYXNpYyBpc3N1ZXMgb2YgdGhlIENvbnN0aXR1dGlvbiBhdCBzdGFrZSBoZXJlLiBTbyBJIGdvaW5nIHRvIHNwYXJlIHlvdSBhbGwgdGhlIG90aGVyIGZhbmN5IHNobWFuY3kgbGVnYWwgdGFsayBhbmQganVzdCBzYXkgdGhpczoKRXQgcG91ciB0ZXJtaW5lciwgbm91cyBhdm9ucyB2b3F1IGxlIHJlcG9ydCBkZXMgdmVudGVzICBsYSBzYXV2ZXR0ZSBsZXMgam91cnMgZGUgbWFyY2ggc3VyIGxhIHJ1ZSBTdGVwaGVuc29uIGV0IGxlIHBvbnQgZGUgSmVzc2FpbnQuIFBhciBhaWxsZXVycywgbm91cyBkcGxvcm9ucyBxdScgbm91dmVhdSBsZSBzb3VzIHZpYWR1YyByZWRldmllbm5lIHVuIHBhcmtpbmcgbGUgZGltYW5jaGUuIExlcyBiYXJyaXJlcyBzb250IHN5c3RtYXRpcXVlbWVudCBjYXNzZXMsIHBhcyBlbnRyZXRlbnVlcy4gSWwgZXN0IGdyYW5kIHRlbXBzIGRlIHRyb3V2ZXIgdW4gbW95ZW4gZWZmaWNhY2UgZGUgZmVybWV0dXJlIGRlIGNldCBlc3BhY2UgcXVlIG5vdXMgcmNsYW1vbnMgIGxhIFZpbGxlIGRlcHVpcyBkZXMgYW5uZXMuIExhIHByc2VuY2UgcG9saWNpcmUgZXN0IHZpc2libGUsIGMnZXN0IGluY29udGVzdGFibGUsIG1haXMgaWwgeSBhIHRhbnQgIGZhaXJlICEgU3VyIGxlIG1hcmNoLCBsZXMgdmVuZGV1cnMgZGFucyBsJ2FsbGUgY2VudHJhbGUgc29udCB0cnMgICB0cm9wIHByc2VudHMsIGV0IGNlIG4nZXN0IHBhcyBhY2NlcHRhYmxlLiBNbWUgc2kgbGEgY29tbWlzc2FpcmUgVmFscmllIEdvZXR6IHByY2lzZSBxdWUgZGUgbm9tYnJldXNlcyBvcHJhdGlvbnMgb250IGxpZXUuIFBhcmFsbGxlbWVudCwgbm91cyBkZW1hbmRvbnMgcXVlIGxhIFJBVFAgbmV0dG9pZSBzZXMgZW1wcmlzZXMgZGUgY2hhbnRpZXIgZG9udCBsJ3RhdCBkcGxvcmFibGUgY29udHJpYnVlICBkZ3JhZGVyIGxlIHF1YXJ0aWVyLiBFbmZpbiwgbGUgImJhemFyIiBkZSBjaXJjdWxhdGlvbiBkYW5zIGxlcyBydWVzIGF1dG91ciBkZSBsYSB6b25lIENodGVhdSBSb3VnZSByZXNwaXJlIGxlIHNhbWVkaSwgIHNhdm9pciBsZXMgcnVlcyBEb3VkZWF1dmlsbGUsIGQnT3JhbiBldCBDYXYsIGVudHJhbmUgZHUgc3RhdGlvbm5lbWVudCBzYXV2YWdlIGV0IGRlcyBjb25jZXJ0cyBkZSBrbGF4b24uIElsIGZhdXQgdmVyYmFsaXNlciBjZXMgY29tcG9ydGVtZW50cyBkZSBjb25kdWN0ZXVycyBxdWkgdHJzIG1ham9yaXRhaXJlbWVudCBuJ2hhYml0ZW50IHBhcyBQYXJpcywgY29tbWUgbm91cyBhdm9ucyB0ZW51ICBsZSByYXBwZWxlciwgY2FyIGxlIG1hcmNoIGV4b3RpcXVlIGRlIENodGVhdSBSb3VnZSBjb250aW51ZSAgYXR0aXJlciB1bmUgY2xpZW50bGUgdmVuYW50IGRlIHRvdXRlIGwnSWxlIGRlIEZyYW5jZS4KQSBsb3Qgb2YgcGVvcGxlIHR1cm4gZG93biBCTVdzIG9uIGhlcmUgICBpZiB5b3UgcmVhbGx5IHdhbnQgdG8gZGVwZW5kIG9uIHRoZW0gYXMgYSBkYWlseSBJIHRlbmQgdG8gYWdyZWUuIEhvd2V2ZXIgaGF2aW5nIHRha2VuIGluIGFuIEU0NiBmcm9tIG15IGdyYW5kZmF0aGVyLCBJIGZpbmQgdGhlbSBFWFRSRU1FTFkgZWFzeSB0byB3b3JrIG9uIGFuZCB3ZWxsIGRvY3VtZW50ZWQuIENvbnNpZGVyaW5nIHRoZXkgYSBuaWNlIG1peCBvZiBjb21meSwgaGFuZGxpbmcsIHBvd2VyLCBhbmQgbWlsZWFnZSwgSSB0aGluayB0aGV5IGZpdCB3aGF0IHlvdSBsb29raW5nIGZvciBmYWlybHkgd2VsbC4gWW91IGp1c3QgUkVBTExZIG5lZWQgdG8gZG8gcmVzZWFyY2ggb24gdGhlIGJyZWFraW5nIHBvaW50cy4gSSBvbmx5IG1hZGUgdGhlIHBsdW5nZSBiZWNhdXNlIEkga25ldyBleGFjdGx5IHdoYXQgbmVlZHMgdG8gYmUgZG9uZS4gVGhlIEUzMCBmaXRzIHdoYXQgeW91IGxvb2tpbmcgZm9yLCBidXQgdGhleSBhcmUgcmlzaW5nIGluIHByaWNlIGFuZCB3aWxsIGJlIGVpdGhlciB0ZWV0ZXJpbmcgb24gbWVjaGFuaWNhbCBpc3N1ZXMsIHJ1c3RpbmcsIG9yIGV4cGVuc2l2ZSAgIGp1c3QgYSBmYWlyIHdhcm5pbmcuIFRoZXJlIGEgbG90IHRvIGRvIGFuZCBhIGxvdCBvZiBwZW9wbGUsIGJ1dCB0aGUgY2FtcHVzIGl0c2VsZiBkb2VzbiByZWFsbHkgZmVlbCB0aGF0IHdheS4gVGhlcmUgYXJlIGEgbG90IG9mIG9wZW4gcGxhemFzLCBhcmVhcywgc3RyZWV0cywgZXRjIGFuZCBpdCBkb2VzbiBmZWVsIGFzIGNyb3dkZWQgYXMgc29tZXdoZXJlIGxpa2UgTllDIG9yIFBoaWxseS4KSSBjYW4gc2VlIHRoZSBjb2xvciB5b3UgdXNlZCwgYW5kIGl0IGxvb2tzIGxpa2UgYSBncmVhdCBjb2xvciBjaG9pY2UsIGJ1dCBpdCB3b3VsZCB0aWUgeW91ciBsb29rIHRvZ2V0aGVyIG1vcmUgaWYgaXQgd2FzIG1vcmUgYmxlbmRlZC9iaWdnZXIuIApZb3UgbWF5IG5vdCBzdWdnZXN0IGluIGFueSB3YXkgdG8gaWxsZWdhbGx5IG9idGFpbiBhIGdhbWUuIApIaXMgc3VjY2VzcyBhdHRyYWN0ZWQgdGhlIGF0dGVudGlvbiBvZiB0d28gcG93ZXJmdWwgb3JnYW5pemF0aW9uczogdGhlIG1vYiwgd2hpY2ggd2FudGVkIHRyaWJ1dGUgaW4gdGhlIGZvcm0gb2YgJDUwMCBldmVyeSB3ZWVrLCBhbmQgdGhlIE5ldyBKZXJzZXkgU3RhdGUgUG9saWNlLCB3aGljaCBvZmZlcmVkIGhpbSBpbmNvbWUgaW4gZXhjaGFuZ2UgZm9yIGluZm9ybWF0aW9uIGFib3V0IHRoZSBjcmltaW5hbCB1bmRlcndvcmxkIGluIEF0bGFudGljIENpdHkuCk15IGN1cnJlbnQgd29ya3BsYWNlIGRvZXNuIGNhcmUgYnV0IG15IGludGVybnNoaXAgd2FzIGF0IGEgcHN5Y2ggaG9zcGl0YWwgYW5kIHdoaWxlIHRoZXkgd2VyZW4gMTAwJSBubyB2aXNpYmxlIHRhdHRvb3MsIEkgdGhpbmsgYSBmdWxsIHNsZWV2ZSB3b3VsZCBiZWVuIGZyb3duZWQgdXBvbi4gCkJ1dCB0aGlzIGlzbid0IHRydWUsIGFuZCBwZW9wbGUgcmVzZWFyY2ggZmluZGluZyBlZmZlY3RpdmUgZGF0YSBzZXRzIHRvIHRyYWluIG9uIGZvciBzcGVjaWZpYyBkZWNpc2lvbiBib3VuZGFyaWVzIGFuZCBtb2RlbCBjbGFzc2VzLiAKQWZ0ZXIgZ2V0dGluZyBpbnRvIEJUUywgSG9iaSBzdGFydGVkIGFwcGVhcmluZyBpbiB0aGVtLiBBbmQgaGlzIHByZXNlbmNlIGFsd2F5cyBtYWtlcyB0aGUgZHJlYW1zIGJldHRlcj8gVGhlIHdvcmxkIHN0aWxsIG1pZ2h0IGVuZCBhbmQgaXQgbWlnaHQgc3RpbGwgYmUgYmxlYWssIGJ1dCBpdCBub3QgdGhhdCBkZXZhc3RhdGluZ2x5IGRhcmsuIApJbiAyMDA1LCB0aGUgRkRBIHJlamVjdGVkIEpvaG5zb24gSm9obnNvbidzIGFwcGxpY2F0aW9uIGZvciBhcHByb3ZhbCwgYWx0aG91Z2ggYSBjb21wYW55IG9mZmljZXIgc2F5cyBpdCBoYXMgYSByYWZ0IG9mIG5ldyByZXNlYXJjaCBhbmQgcGxhbnMgdG8gcmVuZXcgZGlzY3Vzc2lvbnMgd2l0aCB0aGUgRkRBLi4gCkkgc28gZ2xhZCB0aGF0IEkgd2FzIGFibGUgdG8gaGVscC4gSSBrbm93IHRoYXQgZmVlbGluZyBvZiBoYXZpbmcgbWVtb3JpZXMganVzdCBvdXQgb2YgcmVhY2guIEkgc29ycnkgdGhpcyBpcyBzb21ldGhpbmcgdGhhdCB5b3UgYXJlIGxpdmluZyB3aXRoLCB0b28uCkJpZW5zciwgaWwgZmF1dCBkaXN0aW5ndWVyIGxhIHBvbHlnYW1pZSAodHJlIGVuZ2FnIGRhbnMgbGVzIGxpZW5zIGR1IG1hcmlhZ2UgcGFyIGRldXggY29udHJhdHMgZGlzdGluY3RzKSBkZSBsYSBzaXR1YXRpb24gbyB1biBob21tZSB2aXQgYXZlYyBwbHVzaWV1cnMgZmVtbWVzIGRvbnQgdW5lIHNldWxlIGVzdCBsZ2l0aW1lLCBjZSBxdWkgZG9pdCB0cmUgcGx1cyBwcnMgZGUgbGEgcHJhdGlxdWUuLiAKU3RlYWwgdGhlaXIgYmx1ZSB0d2ljZSBhbmQgZmlsbCBldmVyeXRoaW5nIHVwIHdpdGggc2hyb29tcy4gCkFza01lQWJvdXRTcHJpbmtsZXMgIDMgcG9pbnRzICBzdWJtaXR0ZWQgMTIgaG91cnMgYWdvCkhvdyBLYXJhdGUgV29ya3MKSSBjYWxsZWQuIApJIGRvbiBrbm93IHdoZXRoZXIgdGhhdCBhIGRlYWwgdW5pcXVlIHRvIGhlciBzaXRlLCB0aGUgd2hvbGUgaW5pdGlhdGl2ZSBvciBDaGluZXNlIGhvbmVzdHkuIEVpdGhlciB3YXksIGEgbGF0ZSAyMHMgUmFpbnkgaGFzIGJ1Y2tsZXkgYW5kIG5vbmUgb2YgYmVpbmcgYWJsZSB0byBwbGVhc2UgaGVyIG93biBtb3RoZXIsIGxldCBhbG9uZSByZWNydWl0IHRlY2ggc3RhcnR1cHMgYW5kICJ3b3JsZCBsZWFkaW5nIHJlc2VhcmNoZXJzIiAoaGVyIHdvcmRzLCBub3QgbWluZSkuLiAKSSBrbm93IG1vc3QgcGVvcGxlIHdobyB1c2UgcHJlc2NyaXB0aW9uIHBhaW4gbWVkaWNhdGlvbiBhcmUgbWlzaW5mb3JtZWQgb24gdGhlIHJpc2tzIG9yIHNpbXBseSBpZ25vcmUgaXQuIEFuZCBtb3N0IHBlb3BsZSB3aG8gdXNlIHByZXNjcmlwdGlvbiBwYWluIG1lZGljYXRpb24gYXJlIG92ZXJwcmVzY3JpYmVkIGFuZCBkb24gYWN0dWFsbHkgbmVlZCBpdC4gQXJlIHRoZXJlIGV4Y2VwdGlvbnMgdG8gdGhpcz8gWWVhaC4gQnV0IHRoZSBtYWpvcml0eSBvZiBwZW9wbGUgbGl2aW5nIHdpdGggY2hyb25pYyBwYWluIG5lZWQgdG8gZmluZCBhbiBhbHRlcm5hdGl2ZS4gRXZlbiBzd2FwcGluZyBvdXQgdGhjIGFuZCBtYXJpanVhbmEgZm9yIG9waWF0ZXMgaXMgYmV0dGVyLgpJIGFtIHN1cGVyIGhhcHB5IHRoYXQgbXkgTWNEb25hbGQgc3RpbGwgaGFzIHRoZSBzaGFtcm9jayBtb2NoYS4gTmljZS4gQnkgdGhlIHdheSwgdGhleSBzdGFydGVkIHRha2luZyBvdXQgdGhlIHBsYXkgYXJlYSB0b2RheS4gCkFib3V0IHRlbiB5ZWFycyBhZ28gSSBoYWQgYSBtZWFuIG9sZCBNYWluZSBDb29uL1NpYmVyaWFuIGV4IHN0cmF5IGFuZCBteSBnaXJsZnJpZW5kIG9mZmVyZWQgdG8gdGFrZSBoaW0gaW4gd2hlbiBteSBsYW5kbG9yZCByZWZ1c2VkIHRvIGxldCBtZSBoYXZlIGhpbS4gCkdlcm1hbnkncyBmYWxsaW5nIGJpcnRocmF0ZSwgbGlrZSB0aGF0IGluIG11Y2ggb2Ygd2VzdGVybiBFdXJvcGUsIGlzIGVudGVyaW5nIGl0cyBzZWNvbmQgZ2VuZXJhdGlvbi4gVGhpcyBtZWFucyBub3Qgb25seSB0aGF0IG1vdGhlcnMgY29udGludWUgdG8gaGF2ZSBvbmUgb3IgYXQgbW9zdCB0d28gY2hpbGRyZW4gICB0b28gZmV3IHRvIHJlcHJvZHVjZSB0aGUgcG9wdWxhdGlvbiAgIGJ1dCBhbHNvIHRoYXQgdGhlIHN1cHBseSBvZiBwb3RlbnRpYWwgbW90aGVycyBoYXMgZHdpbmRsZWQuCihBbHNvLCBudGZzIDNnIGlzIHBsZW50eSBmYXN0IGluIG15IGV4cGVyaWVuY2UsIGJ1dCBJIGhvcGUgeW91IGRvbiBtaW5kIHBlZ2dpbmcgYSBDUFUgY29yZSB3aGlsZSB1c2luZyBpdC4pClRoZSBSdXNzaWFuIERlZmVuc2UgTWluaXN0cnkgc2FpZCB0aGF0IDEyIGNydWlzZSBtaXNzaWxlcyBoYXZlIGJlZW4gbGF1bmNoZWQgYXQgdGhlIER1bWF5ciBhaXIgYmFzZSBlYXN0IG9mIERhbWFzY3VzLiBJdCBzYWlkIHRoYXQgU3lyaWEncyBhaXIgZGVmZW5zZSBhc3NldHMgaGF2ZSBkb3duZWQgYWxsIG9mIHRoZW0uIEl0IGRpZCBub3QgbWVudGlvbiB0aGUgb3ZlcmFsbCBudW1iZXIgb2YgbWlzc2lsZXMgaW50ZXJjZXB0ZWQgYnkgU3lyaWFuIGZvcmNlcy4KTGUgU2FsdXQgcGFyIGxlcyBKdWlmcwpJbiB0aGUgbGVhZCB1cCB0byB0aGUgcmVsZWFzZSBvZiB0aGUgYWxidW0ncyBmaXJzdCBzaW5nbGUsIHRoZSBUZW5uZXNzZWUgbmF0aXZlIGJlZ2FuIHNldHRpbmcgdGhlIHN0YWdlIGZvciB3aGF0IHdhcyB0byBjb21lLiAKSWYgeW91IHBsYXkgY2FzaW5vIGdhbWVzIGl0IGlzIGFsbW9zdCBhbHdheXMgZnJlZSBtb25leSBmb3IgdGhlIGNhc2lubyBiZWNhdXNlIHlvdSBjYW5ub3QgYmVhdCB0aGUgb2RkcyBzbyB0aGV5IGhhdmUgbm8gcmVhbCBuZWVkIGZvciBjaGVhdGluZyBlc3BlY2lhbGx5IG5vd2FkYXlzIHdoZW4gdGhlIGN1c3RvbWVycyBoYXZlIGEgY2hhbmNlIHRvIGNob29zZSB0aGUgY2FzaW5vIHdoZXJlIHRoZXkgcGxheSwgb25saW5lIGNhc2lubyBvciByZWFsIGNhc2luby4gSSBoYXZlIG5ldmVyIGhlYXJkIGJlZm9yZSBhYm91dCBpbnRlcm5ldCBjYWZlIGNhc2lubyBwbGFjZXMgYnV0IGlmIHRoZXkgbWFya2V0IHRoZWlyIGJ1c2luZXNzIHJpZ2h0IGFuZCBnZXQgY3VzdG9tZXJzIEkgYW0gc3VyZSB0aGV5IGNhbiBtYWtlIHNvbWUgZ29vZCBtb25leS4uIApUaGV5IGZvdW5kIHRoYXQgdGhlIEdSVSBvZmZpY2VycyBzZWNyZXRseSBzdXJ2ZWlsZWQgYW4gZW1wb3llZSBvZiB0aGUgRGVtb2NyYXRpYyBDb25ncmVzc2lvbmFsIENhbXBhaWduIENvbW1pdHRlZSBhbGwgZGF5IGluIHJlYWwgdGltZSwgaW5jbHVkaW5nIHNweWluZyBvbiAiaGVyIGluZGl2aWR1YWwgYmFua2luZyBpbmZvcm1hdGlvbiBhbmQgb3RoZXIgcGVyc29uYWwgdG9waWNzLiIgVGhleSBzaG93ZWQgdGhhdCAiR3VjY2lmZXIgMi4wLCIgdGhlIHN1cHBvc2VkIGxvbmUgaGFja2VyIGJlaGluZCB0aGUgRE5DIGhhY2ssIHdhcyBpbiBmYWN0IG1hbmFnZWQgYnkgYSBzcGVjaWZpYyBHUlUgdW5pdCwgYW5kIGV2ZW4gcmVjb25zdHJ1Y3RlZCB0aGUgaW50ZXJuZXQgc2VhcmNoZXMgbWFkZSB3aXRoaW4gdGhhdCB1bml0IHdoaWxlIGEgR1JVIG9mZmljZXIgd2l0aCBzaG9kZHkgRW5nbGlzaCBza2lsbHMgd2FzIGRyYWZ0aW5nIHRoZSBmaXJzdCBwb3N0IGFzIEd1Y2NpZmVyIDIuMC4gClRvIG9mZmVyIGNvbmRvbGVuY2VzIG92ZXIgdGhlIGRlYXRoIG9mIENoIFphaG9vciBFbGFoaSB3aWRvdywgcG9saXRpY2lhbnMgb2YgYWxsIHN0cmlwZXMgcGFydGljdWxhcmx5IHRob3NlIGJlbG9uZ2luZyB0byB0aGUgUE1MIE4gc3RyZWFtZWQgdG8gdGhlIHJlc2lkZW5jZSBvZiBTaHVqYWF0LiBUaGUgdmlzaXRvcnMgcHJlc2VuY2UgaGVscGVkIGEgZ3JlYXQgZGVhbCBpbiBicmlkZ2luZyB0aGUgZ2FwLCBhbGJlaXQgZ3JhZHVhbGx5LCBiZXR3ZWVuIHRoZSBlc3RyYW5nZWQgcG9saXRpY2lhbnMuCk1hcm9vbiA1IGlzIGhlYWRsaW5pbmcgdGhpcyB5ZWFyJ3Mgc2hvdyBhbmQgd2lsbCBmZWF0dXJlIFRyYXZpcyBTY290dCBhbmQgQmlnIEJvaS4gQnV0IGhlcmUncyBhIGxvb2sgYmFjayBhdCBzb21lIG9mIHRoZSBtb3N0IG1lbW9yYWJsZSBoYWxmdGltZSBzaG93cyBpbiBTdXBlciBCb3dsIGhpc3RvcnkuCldpZmUgdXNlZCB0byBzYXkgSSBjb3VsZCByZW1lbWJlciB3aG8gd2FzIG11cmRlcmVkIDMwIG9yIDQwIHllYXJzIGFnbywgYnV0IEkgZGlkbiBrbm93IHdoYXQgSSBoYWQgZm9yIGRpbm5lciBsYXN0IG5pZ2h0LiAKQWxsIG9mIHRoZXNlIHRoaW5ncyBjb2luY2lkZSB3aXRoIGEgcmlzZSBpbiB0aGUgYW1vdW50IG9mIGd1bnMgaW4gQW1lcmljYS4gCkRpdmlzaWJsZSBieSAyIFRoZSB3aG9sZSBudW1iZXIgaXMgZGl2aXNpYmxlIGJ5IDIgaWYgdGhlIG51bWJlciBpcyBldmVuIHdoaWNoIGlzIHNob3duIGJ5IHRoZSBsYXN0IGRpZ2l0IGJlaW5nIGRpdmlzaWJsZSBieSAyLiBUaGUgbGFzdCBkaWdpdCBvZiAxNDQgaXMgNCBhbmQgNCBpcyBkaXZpc2libGUgYnkgMiwgdGh1cyAxNDQgaXMgZGl2aXNpYmxlIGJ5IDIuIC4gU3VtIG9mIHRoZSBkaWdpdHMgb2YgMTQ0IGlzIDErNCs0ID0gOSB3aGljaCBpcyBkaXZpc2libGUgYnkgMywgdGh1cyAxNDQgaXMgZGl2aXNpYmxlIGJ5IDMgLgpTZXJpb3VzbHk/IExvc2luZyB3ZWlnaHQgaXMgb25lIG9mIHRoZSBtb3N0IGJhc2ljIHRoaW5ncyBpbiB0aGUgd29ybGQuIEN1dCB5b3VyIGNhbG9yaWVzLiAKSXNuIHJlYWxseSB0cmFmZmljIGxpa2UgYmlnIGNpdGllcyBoYXZlLCBwZW9wbGUgc3RpbGwgdHJ5IHRvIGF2b2lkIHRyYWZmaWMsIGJ1dCBncmlkbG9jayBkb2VzbiBleGlzdC4gQ29tbXV0ZSB0aW1lcyB0YWtlIHRoZSBkcml2aW5nIHRpbWUgZmxhdCwgYmVjYXVzZSBldmVuIGF0IGJ1c3kgdGltZXMgdGhlcmUgaXMgY29udGludW91cyBmbG93ICAganVzdCBtb3JlIGNhcnMgZG9pbmcgaXQgYXQgb25jZS4KIlRoZSBib3R0b20gbGluZSBmb3IgdXMsIiBoZSBhZGRzLCAiaXMgdG8gb3BlcmF0ZSBhIGhpZ2ggZnVuY3Rpb25pbmcgb3JnYW5pemF0aW9uIHRoYXQgc2VydmVzIGFsbCBNZW1iZXJzIHdlbGwsIHJlZ2FyZGxlc3Mgb2YgdGhlaXIgcG9saXRpY2FsIGFmZmlsaWF0aW9uLiBJZiB5b3UgaGF2ZSBhbnkgc2Vuc2Ugb2YgY2l2aWMgcmVzcG9uc2liaWxpdHksIGl0J3MgYW4gZXhjaXRpbmcgcGxhY2UgdG8gd29yaywgYXQgdGhlIGhlYXJ0IG9mIG91ciBkZW1vY3JhY3kuIFdlIGFyZSB0aGUgSG91c2Ugb2YgQ29tbW9ucywgdGhlIHBlb3BsZSdzIGhvdXNlLiIKSXNyYWVsIGdhaW5lZCBmYXIgbW9yZSBpbiBob2xkaW5nIHRob3VzYW5kcyBvZiBwcmlzb25lcnMgKGFib3V0IDYsMDAwIGF0IHRoZSBtb21lbnQsIHVwIHRvIDExLDAwMCBhdCBhIHRpbWUgaW4gcmVjZW50IHllYXJzKS4gQXMgdGhlIG9jY3VweWluZyBwb3dlciBpdCBnYWlucyBjb21wbGV0ZSBjb250cm9sIG92ZXIgaW5kaXZpZHVhbHMgaXQgYmVsaWV2ZXMgIG9yIGNsYWltcyB0byBiZWxpZXZlICByZXByZXNlbnQgYSBzZWN1cml0eSB0aHJlYXQuIEl0IGRlbW9yYWxpc2VzIHRoZSBwcmlzb25lcnMnIGZhbWlsaWVzLCBmcmllbmRzLCBuZWlnaGJvdXJzIGFuZCBwb2xpdGljYWwgYWxsaWVzLgpUbyBjYW5jZWwgdGhpcyBBZ3JlZW1lbnQsIG1haWwgb3IgZGVsaXZlciBhIHNpZ25lZCBhbmQgZGF0ZWQgbm90aWNlLCBvciBzZW5kIGEgdGVsZWdyYW0gd2hpY2ggc3RhdGVzIHRoYXQgeW91LCB0aGUgYnV5ZXIsIGFyZSBjYW5jZWxpbmcgdGhpcyBBZ3JlZW1lbnQsIG9yIHdvcmRzIG9mIHNpbWlsYXIgZWZmZWN0LiBUaGlzIG5vdGljZSB1bmRlciB0aGlzIFNlY3Rpb24gc2hhbGwgYmUgc2VudCB0byBlSGFybW9ueSwgSW5jLiwgQXR0bjogQ29tcGF0aWJsZSBQYXJ0bmVycyBDYW5jZWxsYXRpb25zLCBQTyBCT1ggMzY0MCwgU2FudGEgTW9uaWNhLCBDQSA5MDQwOCBVU0EuIApUaWNrZXRzOiAkMjUgcHVibGljOyAkMTUsIHN0dWRlbnRzIHdpdGggSUQuLiAKIllvdSBhcmUgYW4gaW5maWRlbCwgYSBzYWJpeXlhIFtzZXggc2xhdmVdIGFuZCB5b3UgYmVsb25nIHRvIHRoZSBJc2xhbWljIFN0YXRlIG5vdywgc28gZ2V0IHVzZWQgdG8gaXQuIiBUaGVuIGhlIHNwYXQgaW4gaGVyIGZhY2UsIHRvb2sgb3V0IGEgY2lnYXJldHRlIGFuZCBleHRpbmd1aXNoZWQgaXQgb24gaGVyIHNob3VsZGVyLiAKSSB3YXMgZGVhZCB3cm9uZy4gClNvbWV0aW1lcyB5b3UgZG9uJ3QgZXZlbiBoYXZlIHRvIGFjdHVhbGx5IHBsYXkgdGhlIGdhbWUgICB3aGVuIHdvcmtpbmcgb24gRmFibGU6IFRoZSBKb3VybmV5LCBhIG1vdGlvbiBzZW5zaW5nIEtpbmVjdCBnYW1lLCBBZHJpYW4gZGlzY292ZXJlZCB0aGF0IGhlIGNvdWxkIHBhcmsgYSBjb2F0IHN0YW5kIGluIGZyb250IG9mIHRoZSBLaW5lY3QgYW5kIHRyaWNrIGl0IGludG8gdGhpbmtpbmcgaXQgd2FzIGEgc3BpbmRseSBodW1hbiBiZWluZy4gVGhlIHN0YW5kIHRvb2sgY2FyZSBvZiBiYXNpYyBtb3ZlbWVudCwgQWRyaWFuIGNvdWxkIHRlc3QgdG8gc2VlIGlmIHRoZSBnYW1lIGhlbGQgdXAgdW5kZXIgc2V2ZXJhbCBob3VycyBvZiBwbGF5LCBhbmQgTWljcm9zb2Z0IGZpbmFsbHkgZGlzY292ZXJlZCBhIGRlbW9ncmFwaGljIHRoYXQgZ2F2ZSBhIHNoaXQgYWJvdXQgdGhlIEtpbmVjdC4uIApZb3UgY291bGQgdXNlIGEgdmlicmF0b3IgYnV0IHRoYXQgY2FuIGJlIHRyaWNreS4gTW9zdCBkb24gbGlrZSBpdCBkaXJlY3RseSBvbiB0aGUgY2xpdC4gTWF5YmUgb24gdGhlIHNpZGUgYSBsaXR0bGUsIGdyYWR1YXRpbmcgdG8gdG91Y2hpbmcgdGhlIGNsaXQgdmVyeSBsaWdodGx5IGV0Yy4gSSByZWFsbHkgZGlzbGlrZSB2aWJyYXRpb24gb24gbXkgY2xpdCwgYXMgSSBsaXRlcmFsbHkgY2FuIGZlZWwgYW55dGhpbmcgdGhhdCBpbiBteSB2YWdpbmEsIGl0IG51bWJzIG1lIGFuZCBpcyB0b28gcG93ZXJmdWwgYXMgd2VsbC4KQnV0IGl0IHNvdW5kcyBsaWtlIHlvdSBhcmUgYXNraW5nIGFib3V0IHdoZXRoZXIgaXQgb2theSB0byBzaGFyZSBhIG5ld3MgYXJ0aWNsZSAoZm9yIGV4YW1wbGUpIHRoYXQgdXNlcyBGYWNlYm9vayBvciBEaXNxdXMgdG8gcnVuIHRoZWlyIGNvbW1lbnRzIHNlY3Rpb24/IE91ciBydWxlIGFnYWluc3QgbGlua2luZyB0byBzb2NpYWwgbWVkaWEgaXMgdG8gcHJvdGVjdCB1c2VycyBhbm9ueW1pdHksIGFuZCB0aGUgdGhpbmdzIHdlIHJlbW92ZSB1bmRlciB0aGlzIHJ1bGUgaW5jbHVkZSBwZW9wbGUgc2hhcmluZyB1bmVkaXRlZCBzY3JlZW5zaG90cyBvZiB0aGVpciBmYW1pbHkgRmFjZWJvb2sgY29udmVyc2F0aW9ucyBvciBibG9ncyB0aGF0IGhhdmUgYSBidW5jaCBvZiBpZGVudGlmeWluZyBpbmZvcm1hdGlvbi4gSG9uZXN0bHksIEkgY2FuIHRoaW5rIG9mIGEgdGltZSB3aGVuIHdlIHJlbW92ZWQgYSBuZXdzIGFydGljbGUganVzdCBiZWNhdXNlIGl0IGhhZCBhIGNvbW1lbnRzIHNlY3Rpb24gKGV4Y2VwdCBpbiB0aGlzIGNhc2Ugb2YgYW4gYXJ0aWNsZSBicmluZ2luZyBvdXQgdGhlIGVzdHJhbmdlZCBwYXJlbnRzIGluIHRoZSBjb21tZW50cywgd2hpY2ggaGFwcGVucyBldmVyeSBzbyBvZnRlbikuIEkgaGFwcHkgdG8gY2hlY2sgd2l0aCB0aGUgb3RoZXIgbW9kcyBpbiBjYXNlIHRoZXkgaGF2ZSBhIGRpZmZlcmVudCBvcGluaW9uLCBidXQgeW91ciBleGFtcGxlIGZlZWxzIGxpa2UgYW4gZWRnZSBjYXNlIHRoYXQgd2Ugd291bGRuIHJlbW92ZSB1bmxlc3MgdGhlcmUgd2FzIHNvbWV0aGluZyBlbHNlIG9idmlvdXNseSBwcm9ibGVtYXRpYyBbRURJVDogZm9yIGV4YW1wbGUsIGlmIGl0IGJyb2tlIG91ciBkcml2ZSBieSBkaWFnbm9zaXMgcnVsZV0uCkkgd2hvbGVoZWFydGVkbHkgYWdyZWUgd2l0aCB5b3UgdGhlcmUuIApJdCB3YXMgZGV2YXN0YXRpbmcgd2hlbiBoaXMgaGVhbHRoIHRvb2sgYSBzaGFycCB0dXJuLiBJIGp1c3QgdGFrZSBjb21mb3J0IGluIGtub3dpbmcgdGhhdCBoZSBoYWQgc3VjaCBhIGZ1bGwgYW5kIGhhcHB5IGxpZmUgd2hpbGUgaGUgd2FzIHN0aWxsIGZlZWxpbmcgaGVhbHRoeSwgYW5kIHRoYXQgSSBkaWRuIGxldCBoaW0gc3VmZmVyIGZvciB2ZXJ5IGxvbmcuIEl0IHN1Y2ggYSBoYXJkIGV4cGVyaWVuY2UgdG8gZ28gdGhyb3VnaCwgSSBzbyBzb3JyeSB5b3UgaGF2ZSB0byBnbyB0aHJvdWdoIGl0IHRvbywgYW5kIEkgd2lzaCB5b3UgdGhlIHZlcnkgYmVzdC4uIAo7IDQsIDE5LCAzNiwgMTE3IGFuZCAxNjAgRS4gCkVhdGluZyBub3JtYWwgKHVzaW5nIGJ1dHRlciBhbmQgbGFyZCkgYWN0dWFsbHkgcmVkdWNlZCBpdCBiYWNrIGJlbG93IDQwMCBpbiB3ZWVrcy4uIApXaGVuIHlvdSBtb3ZlIHRvIGEgbGFyZ2UgbnVtYmVyIG9mIHRhYmxlcywgeW91IHNob3VsZCBleHBlY3Qgc29tZSBkZWdyYWRhdGlvbiBvZiByZXN1bHRzIGJlY2F1c2Ugb2YgbG93ZXIgY29uY2VudHJhdGlvbi4gTmV2ZXJ0aGVsZXNzLCBpZiBvbiBvbmUgdGFibGUgeW91IHdpbiBmb3VyIGJldHMsIG9uIHR3byB0YWJsZXMgeW91IHdpbGwgdGhyZWUgYmV0cyBwZXIgdGFibGUgYW5kIHRoZSB0b3RhbCB3aW4gd2lsbCBpbmNyZWFzZSBvbmUgYW5kIGEgaGFsZiwgc28gdGhlIGdhbWUgaXMgd29ydGggdGhlIGNhbmRsZS4uIApJIGRvbid0IHRoaW5rIGEgbG90IG9mIHBlb3BsZSBwb3NlIHRoYXQgcXVlc3Rpb24gdG8gdGhlbXNlbHZlcyBhbmQgZG9uJ3QgY29uc2lkZXIgaG93IGx1Y2t5IHRoZXkgYXJlLiBJZiB5b3Ugc2VuZCB0aGF0IHBpdGNoIHRvIGVkaXRvcnMsIHRoZXknZCBsYXVnaC4gCldlIG5vdyBoYXZlIHJlZ3VsYXRpb25zIHRoYXQgcHJvdGVjdCBlbXBsb3llZXMgbW9yZSBzbyB0aGFuIHdoYXQgd2UgaGFkIGluIHRoZSBwYXN0LiBNeSBvd24gZXhwZXJpZW5jZSBpcyB0aGF0IEkgYW0gbWFraW5nIG1vcmUgbW9uZXkgdGhhdCB3aGF0IEkgZXZlciBkaWQgYXQgYSB1bmlvbiBwb3NpdGlvbi4gCkkga25vdyBpdCBmZWVscyByYWNpc3QgdG8gYXNzdW1lIEtvcmVhbnMgZG9uIHRoaW5rIHRoZSBzYW1lIHdheSBhcyB5b3UgICB0aGV5IGh1bWFucyB0b28sIHJpZ2h0PyBUaGV5IGdvdCB0aGUgc2FtZSBlbW90aW9ucywgYWJpbGl0aWVzIHRvIGxlYXJuLCBkcmVhbXMsIHNvY2lhbCBjb25zY2lvdXNuZXNzIHRoYXQgSSBkbywgc28gYXNzdW1pbmcgdGhleSBkb24gdW5kZXJzdGFuZCBzb21ldGhpbmcgYmFzZWQgb24gd2hlcmUgdGhleSBmcm9tIGlzIHByZWp1ZGljZSBvbiBteSBwYXJ0LCBpc24gaXQ/CkFsbCBvZiB0aGUgb25saW5lIHBva2VyIHJvb21zIG9mZmVyIHlvdSB0aGUgb3Bwb3J0dW5pdHkgdG8gcGxheSBwb2tlciB3aXRob3V0IHJpc2tpbmcgYSBwZW5ueSBvZiB5b3VyIG93biBtb25leS4gWW91IGp1c3QgZG93bmxvYWQgYW5kIGluc3RhbGwgdGhlIHNvZnR3YXJlLCBvcGVuIGFuIGFjY291bnQgYW5kIHRoZW4gbG9naW4uIFlvdSBkb24ndCBoYXZlIHRvIGdpdmUgYW55IHBheW1lbnQgZGV0YWlscyB0byBkbyB0aGlzLiAKVHJ5IDEwMCB5ZWFycyBvZiBzb2xpdHVkZSBhZnRlciB0aG9zZS4KV2VsbCBrbm93biBhcmVhcyBmb3Igc3RyZWV0ICJodXN0bGVycyIgaGF2ZSBpbmNsdWRlZDogcGFydHMgb2YgNTNyZCBTdHJlZXQgaW4gTmV3IFlvcms7IFNhbnRhIE1vbmljYSBCb3VsZXZhcmQgaW4gTG9zIEFuZ2VsZXM7IEN5cHJlc3MgU3RyZWV0IGluIEF0bGFudGEsIFBpY2NhZGlsbHkgQ2lyY3VzLCBpbiBMb25kb247ICJUaGUgV2FsbCIgaW4gU3lkbmV5J3MgRGFybGluZ2h1cnN0OyBUaGUgRHJ1ZyBTdG9yZSBhbmQgUnVlIFNhaW50IEFubmUgaW4gUGFyaXM7IFBvbGsgU3RyZWV0IEd1bGNoIGluIFNhbiBGcmFuY2lzY287IGFuZCBUYWtzaW0gU3F1YXJlIGluIElzdGFuYnVsLiAKU2hhamEgb3JpZ2luYXRlZCBvdXQgb2YgYSBzaW1wbGUgaWRlYTsgaW4gYSBmdXR1cmUgd2l0aCBkb3plbnMsIGV2ZW50dWFsbHkgaHVuZHJlZHMgb2YgaHVtYW4gc2V0dGxlZCB3b3JsZHMsIHdoYXQgaWYgc29tZWJvZHkgc2V0IG91dCB0byByZWNvbnN0cnVjdCBleHRpbmN0IGVjb3N5c3RlbXMgb24gb25lIG9mIHRoZW0/IFRodXMgU2hhamEgd2FzIGJvcm4gYXMgYW4gb3V0bGluZSwgbGl0dGxlIG1vcmUgdGhhbiBhIHN1bW1hcnkgcmVhbGx5LiAKQnV0IHRoZXJlJ3Mgbm8gZGVueWluZyB0aGUgMzcgeWVhciBvbGQgaXMgcHV0dGluZyBoZXIgYWJzb2x1dGVseSBmaXR0ZXN0IGZvb3QgZm9yd2FyZCB0aGFua3MgdG8gdGhlIGltcGxlbWVudGF0aW9uIG9mIGEgZmV3IHR3byBhIGRheSB3b3Jrb3V0cyBhbmQgYSBiYXJlIGJvbmUsIGxvdyBzdWdhciBkaWV0LiBBbmQgc2hlJ3Mgbm90IGFsb25lIGluIGhlciBwdXJzdWl0IG9mIFNwYW5kZXhlZCBwZXJmZWN0aW9uLiAKUm9iaW5zb24gdGhlbiBicm91Z2h0IG9uIEtla3V0YSBNYW5uZWggZm9yIFJ1c3NlbGwgVGVpYmVydCBpbiB0aGUgNjd0aCBtaW51dGUgdG8gYWRkIHNvbWUgc3BlZWQgb24gdGhlIGZsYW5rcy4gVGhhdCBjcmVhdGVkIGEgYmF0dGxlIGZvciBjb250cm9sIG9mIHRoZSBsZWZ0IHdpbmcgd2l0aCBBbmRyZXcgRmFycmVsbCwgd2hvIGtlcHQgdXAgd2l0aCBNYW5uZWgncyBzcHJpbnRzIGFuZCBwcmV2ZW50ZWQgVmFuY291dmVyJ3MgY3JlYXRpdmUgbWlkZmllbGRlcnMgZnJvbSBnb2luZyBpbiBhbG9uZSBvbiBTaHV0dGxld29ydGguCk1ycy4gRkRSIFVuaW5qdXJlZCBieSBTdHVkaW8gQmxhc3QgSE9MTFlXT09EIChCIEEuIApBIGp1cnkgY2FtZSBiYWNrIHdpdGggZ3VpbHR5IHZlcmRpY3RzIGZvciBEZW5uaXMgSHVuZ3dlLCBNb3Vzc2EgRGFvdWksIFJpY2hhcmQgRWxsaXMsIEdlb3Zhbm5pIEVsbGlzIGFuZCBDaHJpc3RpYW4gTmt1c2kgYWZ0ZXIgYSBtb250aCBsb25nIHRyaWFsIHRoYXQga2VwdCB0aGUgbWVuIG9uIGltdGltYXRlIHRlcm1zIHdpdGggZWFjaCBvdGhlciwgd2VkZ2VkIGFzIHRoZXkgd2VyZSBpbnRvIHRoZSB0b28gc21hbGwgcHJpc29uZXIgZG9jay4KSGVyIHJlc3BvbnNlIHdhcyAid2VsbCwgbWF5YmUgeW91IHNob3VsZCB0YWxrIG1vcmUiLiAKQW54aWV0eSBEaXNvcmRlciBpcyB0aGUgb2JzZXNzaXZlIGNvbmNlcm4gd2l0aCBwb2xpY2luZyB0aGUgYm91bmRhcnkgYmV0d2VlbiAibWFsZSIgYW5kICJmZW1hbGUiIGV2ZW4gaW4geW91bmcgY2hpbGRyZW4uIApUaGUgY291c2luIHRyaWVkIGNvbnRhY3RpbmcgbXkgZ3JlYXQgdW5jbGUsIGJ1dCBoZSBkaWRuJ3Qgd2FudCBhIHJlbGF0aW9uc2hpcCB3aXRoIGhpbSBhdCBhbGwgIHRoZSByZXNwb25zZXMgd2VyZSBub3Qgc3RyYWlnaHQgdXAgZGVuaWFscyBvZiBiZWluZyBoaXMgZmF0aGVyLCBpdCB3YXMgbGlrZSAiZ29vZCBsdWNrIHdpdGggdGhlIGRpc2Vhc2UuIERvbid0IGNvbnRhY3QgbWUgYWdhaW4uIApGb2N1cyBPbiBTb3V0aCBGbG9yaWRhCiA2MyBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ29JIG9uY2UgaGFkIHNvbWUgZG91Y2hlYmFnIHdpdGggYW4gZWdvIHRoZSBzaXplIG9mIHRleGFzIGF0IGFuIE1TUCBJIGludGVydmlld2VkIGF0IHRlbGwgbWUgSSBkaWRuIHN1cHBvcnQgdGhlIHN3aXRjaGVzIG15IGN1cnJlbnQgam9iIGhhZCBvbiBzaXRlIGJlY2F1c2UgSSBkaWRuIGNvbmZpZ3VyZSB0aGVtIGZyb20gc2NyYXRjaCBiZWNhdXNlIHRoZXkgd2VyZSBhbHJlYWR5IGluIHBsYWNlIHdoZW4gSSBnb3QgdGhlcmUuSSBoYWQgYW5vdGhlciBwbGFjZSBnaXZlIG1lIG9uZSBvZiB0aG9zZSBwcm9maWNpZW5jeSBleGFtcyBhbmQgaXQgd2FzIGhvbmVzdGx5IHRoZSB3b3JzdCBleGFtIEkgZXZlciBzZWVuLiAKSSBtaWdodCBzdGFydCB0cmFja2luZyBpdCBzbyBJIGNhbiBnZXQgc29tZSBtZXRyaWNzLiAKTWluaSBnYW1lcyBjYW4gaW5jbHVkZVBhcmtvdXIgcmFjZQpPbiByZXRyb3V2ZSBkb25jLCB1bmUgZm9pcyBkZSBwbHVzLCBsJ2lkZSBkZSBwdXJldCBhc3NvY2llIGF1IHBhcmZ1bS4uIApNb3N0IGZvb3Qgc3VyZ2VyeSBtYXkgYmUgZG9uZSBpbiB0aGUgZG9jdG9yJ3Mgb2ZmaWNlIG9yIGFzIGFuIG91dHBhdGllbnQgcHJvY2VkdXJlLiBIZWFsaW5nIHRpbWUgaXMgZGVwZW5kZW50IHVwb24gdGhlIHNldmVyaXR5IG9mIHRoZSBwcm9ibGVtLiBUaGUgc3VyZ2VvbiB3aWxsIHByb3ZpZGUgeW91IHdpdGggZXZlcnl0aGluZyB5b3UgbmVlZCB0byBrbm93IGFmdGVyIHRoZSBzdXJnZXJ5IGFuZCBob3cgdG8gYXZvaWQgZm9vdCBwcm9ibGVtcyBpbiB0aGUgZnV0dXJlLgpJZiB5b3Ugd2FudCB0byB0cnkgaXQgeW91cnNlbGYsIHg9ZWFkIGlzIGEgc3VwZXJzaW1wbGlmaWVkIHZlcnNpb24gb2YgdGhlIGVxdWF0aW9uIChMYW1iZXJ0IHdoZXJlIHggaXMgdGhlIGlucHV0IHBvd2VyLCBhIGlzIHRoZSBjb2VmZmljaWVudCBvZiBhYnNvcnB0aW9uIGFuZCBkIGlzIHRoZSBkZXB0aCBpbiBtZXRlcnMuIApUaGVyZSB3YXMgYSB2ZXJ5IHBhbmlja2VkIG1vbWVudCBhcyB3ZSByZWFsaXplZCB0aGF0IGhlIGhhZCBhIGJsb29keSBub3NlIGFuZCB3YXMgZ3VzaGluZyBibG9vZCBhbGwgb3ZlciBteSBmYWNlIGFuZCBoYWlyLiBTbyBtdWNoIHNvIHRoYXQgYWZ0ZXJ3YXJkIG15IGhhaXIgd2FzIHN0aWZmIGFuZCB2aXZpZGx5IHJlZCBpbiBjbHVtcHMgYXJvdW5kIG15IGZhY2UuIApUaGVyZSBubyBsb3ZlIGF0IGFsbC4gCkNoYXNlIE93ZW5zIHZzLiBKdWljZSBSb2JpbnNvbiAgIDEuNSBzdGFycyAgIFBlb3BsZSByZWFsbHkgbGlrZWQgdGhpcyBpbiB0aGUgbGl2ZSB0aHJlYWQsIHdoaWNoIEkgZG9uIHVuZGVyc3RhbmQgYXQgYWxsLiBJIGd1ZXNzIHRoZXkgd2VyZSBleGNpdGVkIGFib3V0IHRoZSBiaWdnZXN0IHdpbiBvZiBPd2VucyBjYXJlZXIgYW5kIHRoZSBleGNpdGluZyBmaW5hbCBjb3VwbGUgbWludXRlcywgd2hpY2ggd2VyZSBib3RoIHRydWUuIApUQkgsIG15IHRpbiBoYXQgbmFycmF0aXZlIGlzIHRoYXQgdGhlIGNvbXBhbnkgbWlnaHQgaGF2ZSBtYWRlIGEgbGVnaXRpbWF0ZSBtaXN0YWtlLCBidXQgd2FpdGVkIHRvIGluZm9ybSBMQU9QIGJlY2F1c2UgdGhleSB3YW50ZWQgaGltIGluIGV4YWN0bHkgdGhpcyBzaXR1YXRpb24gd2hlcmUgaGUgYWxyZWFkeSBzb2xkL3RyYWRlZCB0aGVtLiBUaGV5IGJlbmVmaXQgYSBsb3QgbW9yZSBpZiBPUCBwYXlzIHVwIHJhdGhlciB0aGFuIHJldHVybnMgdGhlbSwgYW5kIEkgY2FuIDEwMCUgc2VlIHNvbWVib2R5IHRoaW5raW5nIHRoZXkgZ2V0IGN1dGUgYW5kIHdhaXQgdG8gZGVtYW5kIG1vbmV5IG9yIGEgcmV0dXJuIHVudGlsIHRoZSByZXR1cm4gaXMgcHJvYmFibHkgb2ZmIHRoZSB0YWJsZS4KQW5kIHlvdSBjYW4gdGVsbCBFbGxpZSBkb2Vzbid0IGJlbGlldmUgaGltIGF0IHRoZSBlbmQsIGRlZmluaXRlbHkgZ29pbmcgdG8gYmUgaW50ZXJlc3RpbmcgdG8gc2VlIGhvdyB0aGF0IGdldHMgcmVzb2x2ZWQgaW4gdGhlIG5leHQgb25lLi4gCkkgYSBwZXQgc3VwcGxpZXMgcGx1cyBlbXBsb3llZS4gCkZ1cnRoZXJtb3JlLCBhIGxhcmdlciBwZXJjZW50YWdlIG9mIHN0dWRlbnRzIHdobyB0YWtlIG9uIGxvYW5zIHdpbGwgZHJvcCBvdXQgYW5kIG5ldmVyIGZpbmlzaCBjb2xsZWdlLiBNYWtlcyBzZW5zZSAgeW91IHRha2Ugb24gbG9hbnMgYmVjYXVzZSB5b3UgcG9vciwgeW91IGFsc28gdGFrZSBvbiBhIGpvYiBvciB0d28sIGhhdmUgdHJvdWJsZSBmaW5kaW5nIGEgcGxhY2UgdG8gbGl2ZSBuZWFyIGNhbXB1cywgY29tbXV0ZSBsb25nIGRpc3RhbmNlcywgZXRjLiBBbmQgbm90IHN1cnByaXNpbmdseSwgeW91IGRyb3Agb3V0Li4gCkkgYWdyZWUgdGhhdCBpbnZhc2lvbnMgLCBlc3BlY2lhbGx5IGluIHByaW1lIGNhbiByZWFsbHkgYWZmZWN0IGEgZ2FtZSBidXQgd2FpdCB1bnRpbCB5b3Ugc3RhcnQgc2VlaW5nIHBlb3BsZSBsaXRlcmFsbHkgbWVsdCB0aGUgcHJpbWUgZXZpbCB0aGUgbW9tZW50IHRoZSBzZWNvbmQgcGhhc2Ugc3RhcnRzLCBhbiBpbnZhZGVyIGlzIGdvaW5nIHRvIGhhdmUgdG8gYmUgcmVhbGx5IGx1Y2t5IHRvIHN0b3AgdGhhdC4KRmVkb3IgSG9seiBBTUEKVGhlIGxvY2FsIEdlcm1hbiBicmFuZHMgYWx3YXlzIGhhdmUgYSBiaWcgcHJlc2VuY2UgaW4gRnJhbmtmdXJ0LiBFYWNoIGNvbXBhbnkgZ2VuZXJhbGx5IGhhcyBpdHMgb3duIGNvbnZlbnRpb24gaGFsbCBhdCB0aGUgbGFyZ2UgRnJhbmtmdXJ0IE1lc3NlLCB3aGljaCBpcyBuZWFybHkgYSBkb3plbiBjb252ZW50aW9uIGJ1aWxkaW5ncyBjb25uZWN0ZWQgYnkgYSBtb3Zpbmcgd2Fsa3dheS4KQW55d2F5LCB5b3UgaW4gZGVuaWFsIGlmIHlvdSBkb24gdGhpbmsgdGhlcmUgaXMgYmxhdGFudCBiaWFzIHdpdGhpbiB0aGUgaGFuZGZ1bCBvZiB0ZWNoIGNvbXBhbmllcyB3aGljaCBjb250cm9sIHRoZSBtYWpvcml0eSBvZiBuZXdzIGFuZCBpbmZvcm1hdGlvbiBhY3Jvc3MgdGhlIGludGVybmV0LgpJIHNlZSBpdCBhbGwgdGhlIHRpbWUgaW4gaGFuZCBhbmFseXNpcyBwb3N0cy4gSXQgbGlrZSAvci9wb2tlciB0YWtlcyBvdXQgYWxsIHRoZWlyIGZydXN0YXRpb25zIG9uIHRoaXMgc3ViLiAKSXZleSBhbmQgaGlzIGNvbXBhbmlvbiBuZXZlciB0b3VjaGVkIHRoZSBjYXJkcywgdGhlIERhaWx5IE1haWwgd3JvdGUuIApNRUxCT1VSTkUsIEF1c3RyYWxpYSAgIENhbmFkaWFuIEV1Z2VuaWUgQm91Y2hhcmQgaGFkIHRvIHdvcmsgaGFyZCBvbiBTdW5kYXkgYWZ0ZXIgYW4gZWFzeSBvcGVuaW5nIHNldCB0byBiZWNvbWUgdGhlIGZpcnN0IHdvbWFuIGludG8gdGhlIHF1YXJ0ZXIgZmluYWxzIG9mIHRoZSBBdXN0cmFsaWFuIE9wZW4gd2l0aCBhIDYgMSwgNSA3LCA2IDIgZGVmZWF0IG9mIElyaW5hIENhbWVsaWEgQmVndS4KVGhhdCBkZWZpbml0ZWx5IHNvdW5kcyBsaWtlIGl0IGhhcyBiZWNvbWUgY29tcHVsc2l2ZSBiZWhhdmlvci4gSSBoYWQgc3VjY2VzcyB3aXRoIHVzaW5nIChyb3VnaCB0cmFuc2xhdGlvbikgdGhyb3cgYWJsZSB0YW1ib3VyaW5lIGppbmdsZXMgdG8gYnJlYWsgb3V0IGRvZ3MgZnJvbSB0aGlzIHN0YXRlIG9mIG1pbmQuIEl0IGxpa2UgYSBrZXlyaW5nIHdpdGggNCA1IGppbmdsZXMgYXR0YWNoZWQgdG8gaXQuIApJbiB0ZXJtcyBvZiBhdG1vc3BoZXJlLCB0aGlzIG1hbmdhIGlzIGNsb3NlciB0byBPdG95b21lZ2F0YXJpIGFuZCBUZW5qdSBubyBLdW5pLCBidXQgd2l0aG91dCBhIHJvbWFuY2UgZWxlbWVudC4gCkl0cyBub3QgdGhhdCB0aGV5IG5vdCB3aWxsaW5nIHRvIGJlY29tZSBmcmllbmRzLCBpdHMgbW9yZSB0aGF0IHRoZXkgd291bGQgaGF0ZSB0byBib3RoZXIgeW91IGJ5IHRyeWluZyB0byBiZSBmcmllbmRzLiAKT3V0ZG9vciBSZXNlYXJjaCBJbnRlcnN0ZWxsYXIgUmFpbiBKYWNrZXQgKCQyOTkpLiBEb24gaGVhZCBvdXQgb24gYW55IHRyaXAgd2l0aG91dCBhIHRydXN0ZWQgcmFpbiBzaGVsbC4gVGhpcyBsb2NhbGx5IGRlc2lnbmVkIG9wdGlvbiBpcyBwcmFjdGljYWxseSBwZXJmZWN0LCB3aXRoIHN0cmV0Y2ggZm9yIG1vYmlsaXR5IGFuZCBhIG1peCBvZiB3ZWF0aGVyIHByb3RlY3Rpb24gYW5kIGJyZWF0aGFiaWxpdHkuClRoYXQgYmVpbmcgc2FpZCwgb2NjYXNpb25hbGx5IHdoZW4gSSBydW5uaW5nLCBJIHdpbGwga2ljayBteSBjYWxmLiBOb3QgZXZlcnkgc3RlcCwgbWF5YmUgYSBmZXcgdGltZXMgb3ZlciBzZXZlcmFsIG1pbGVzLiAKQ2FuJ3QgYSBtYW4gc2hpdCBpbiBwZW9wbGUncyBtb3V0aD8/ISB3ZSBoYXZlIHRoZSBiZXN0IHByZXNpZGVudCBmb2xrcy4gCk1pbGtpbmcgKHVzZWQgb24gYXJtcyBhbmQgbGVncykgU3RhcnRpbmcgYXQgdGhlIHRvcCBvZiB0aGUgbGltYiBhbmQgc3F1ZWV6aW5nIGdlbnRseSwgbW92ZSB5b3VyIGhhbmQgZG93biB0byB0aGUgd3Jpc3Qgb3IgYW5rbGUuIEltYWdpbmUgdGhhdCB5b3UgYXJlIG1pbGtpbmcgYSBjb3csIG9yIHNxdWVlemluZyB0aGUgZmlsbGluZyBvdXQgb2YgYSBzYXVzYWdlLiBBcyBvbmUgaGFuZCByZWFjaGVzIHRoZSB3cmlzdCBvciBhbmtsZSwgc3RhcnQgYXQgdGhlIHRvcCB3aXRoIHRoZSBvdGhlciBoYW5kIHNvIHRoYXQgdGhlcmUgaXMgYSBjb250aW51b3VzIHN0cm9raW5nIGVmZmVjdC4uIApUaGUgcG9pbnQgb2YgRXpyYSdzIGx5cmljcyBhbmQgc29uZ3MgYXJlIG5ldmVyIGFib3V0IHRoZSByZWZlcmVuY2VzIGhlIG1ha2VzLiAKIkFuZCBJIHNhaWQsICdXZWxsLCB3aGVuIGFtIEkgZ29ubmEgc2VlIHlvdSBhZ2Fpbj8nIEFuZCBoZSBzYWlkLCAnSSBkb24ndCBrbm93LiAKU3RpY2sgd2l0aCB0aGUgbnVtYmVycyB5b3UgcmVzZWFyY2hlZCBhbmQgZG9uJ3QgdHJ5IHRvIGRvIHRoZSBsaW1ibyBpbiB0aGUgbmVnb3RpYXRpb25zIGFuZCBzZWUgaG93IGxvdyB5b3UgY2FuIGdvLiAKVGFsayBhYm91dCB0aGUgc3VtbWl0IGhhcyBiZWVuIGluIHRoZSBpbnRlcm5hdGlvbmFsIHByZXNzIHNpbmNlIGxhc3Qgc3VtbWVyIGFuZCBQb21wZW8gbWV0IHdpdGggTm9ydGggS29yZWFuIG9mZmljaWFscyBpbiBOZXcgWW9yayBpbiBlYXJseSBOb3ZlbWJlciB0byBiZWdpbiBuZWdvdGlhdGluZyBhIHNlY29uZCBzdW1taXQuIEhvd2V2ZXIsIGluIHNwaXRlIG9mIGtub3dpbmcgYWJvdXQgdGhlIHN1bW1pdCBmb3IgbW9udGhzLCB0aGVyZSB3YXMgbm8gbWVudGlvbiB3aGF0c29ldmVyIGFib3V0IHRoZSBpdCBpbiBpbnRlcm5hbCBOb3J0aCBLb3JlYW4gcHJlc3MgdXAgdW50aWwgS2ltIGRlcGFydHVyZSBvbiAyNCBGZWJydWFyeS4gCkZvciBleGFtcGxlLCBhIGNoaXJvcHJhY3RpYyBtYXNzYWdlIHRoZXJhcGlzdCB3aG8gbWFrZXMgJDUwLDAwMCBpbiBQZW9yaWEsIElsbGlub2lzIHdvdWxkIG5lZWQgdG8gZWFybiAkMTE3LDc2MSBpbiBOZXcgWW9yayBDaXR5IHRvIGVuam95IHRoZSBzYW1lIGxpdmluZyBzdGFuZGFyZC4gCkkgaG9wZSBteSBwZW5pcyB0YXN0ZXMgc2F0aXNmYWN0b3J5IG5vdyB0aGF0IHlvdSBoYXZlIGJlY29tZSBhIGhvbW9zZXh1YWwuIApBcyBhIGJlZWtlZXBlciB3aG8gaGFzIGEgdG9wIGJhciBoaXZlIGFuZCBhIGxhbmdzdHJvdGggaGl2ZSxJIGhhdmUgdG8gc2F5IHRoZSBvbmx5IHRoaW5nIEkgZGlzYWdyZWUgd2l0aCBpcyB0aGUgcXVlZW4gZXhjbHVkZXIuIApHcmVlY2UgcGxlZGdlcyB0byByZXBheSBJTUYgZGVidCB0aGlzIHdlZWsKVGhlIGRlYWxlciBtdXN0IGJlIGRlYWx0IGEgUXVlZW4gSGlnaCB0byBwbGF5LiAKSSB3b3JrZWQgYXQgYSBsdXh1cnkgbGluZ2VyaWUgc3RvcmUgYW5kIGEgaGlnaCBlbmQgbXVsdGkgYnJhbmQgbGluZ2VyaWUgc3RvcmUgdGhhdCBjYXJyaWVkIGJvdGggbHV4dXJ5IGFuZCBtaWQgcHJpY2UgcGllY2VzLiBUaGlzIHdhcyBpbiAyMDE1LCByb3VnaGx5LiAKV2hpbGUgeW91IGFyZSBmb2N1c2luZyBvbiBhIHJvdW5kIHRhYmxlLCB5b3UgbXVzdCBhbHNvIHVuZGVyc3RhbmQgdGhhdCB0aGVyZSBhcmUgbWFueSBkaWZmZXJlbnQgc2l6ZXMgYW5kIGRlc2lnbnMgYXZhaWxhYmxlIHRvZGF5LiAKT3RoZXIgbWVuIHdobyB3b3VsZCBoYXZlIHByb3ZlZCBpbnZhbHVhYmxlIGluIG9yZ2FuaXNpbmcgYSBuYXRpb25hbCByZXNwb25zZSB0byB0aGUgVmlraW5nIHRocmVhdCBkaWVkIGVhcmx5IHRvbywgc3VjaCBhcyBCeXJodG5vdGggaW4gOTkxLi4gClRoZSBhcmd1bWVudCBvZiAid2VsbCwgZGVhbCB3aXRoIGl0IiBpcyBvZiBjb3Vyc2UgYnJvdWdodCB1cCBvZnRlbiBidXQgdGhpbmcgaXMgdGhlIHdheSBJIGV4cGVyaWVuY2UgbGlmZSBkb2VzIG5vdCBsZWF2ZSByb29tIG9yIGFueSBuZWVkIHJlYWxseSBmb3IgdGhlIHByb3Bvc2VkIGNvbGQsIGhhcmQgZmFjdHMsIHNpbmNlIHRoZXkgZG9uIGhhdmUgYW55IGltcGFjdCBvbiBteSBiZWluZy4gClRoZXJlIHdhcyBzb21lIGVhcmx5IGNyb3Nzb3ZlciAoQmxvbmRpZSwgQWVyb3NtaXRoLCBsb29raW5nIGJhY2sgb24gaXQgZXZlbiBzb21lIENsYXNoIGFuZCBCaWcgQXVkaW8gRHluYW1pdGUpIGJ1dCBvbiB0aGUgd2hvbGUsIHN0aWxsIG5ldmVyIGEgZmFuIG9mIHRoZSAicmVhbCIgaGlwIGhvcC4uIApIZSBoYXMgY29tYmluZWQgYXNwZWN0cyBvZiBPc3Rlb3BhdGh5LCBUaGFpIG1hc3NhZ2UgYW5kIFJoeXRobSBpbnRvIG9uZSBmYW50YXN0aWMgc3lzdGVtLiAKSW4gZWl0aGVyIGNhc2UsIHRyeSB0byByZWxheCBldmVyeXRoaW5nIGV4Y2VwdCBmb3IgeW91ciBidXR0LiBUbyBzdHJlbmd0aGVuIHRoZSBnbHV0ZXVzIG1heGltdXMsIGxheSBvbiB5b3VyIGJhY2sgd2l0aCB5b3VyIGtuZWVzIHVwLCBjb250cmFjdCB5b3VyIGJ1dHQsIGFuZCByYWlzZSB5b3VyIGJ1dHQgb2ZmIHRoZSBmbG9vciBhbmQgaG9sZCA1IHNlY29uZHMgKHNlZSBMZWZ0KS4gCkVkaXQ6IGl0J3Mgbm90IGp1c3QgYWJvdXQgdGF4ZXMuIFlvdSBhcmVuJ3QgcmVhbGl6aW5nIHRoZSBtYWluIHdheSB0aGlzIG1ha2VzIGNvbXBhbmllcyBtb25leSwgWU9VISBCeSBmdW5kaW5nIGEgY2hhcml0eSB0byBvZmZzZXQgdGhlIGNvc3RzIG9mIGhpZ2ggY29wYXlzIGZvciBpbnNhbmVseSBleHBlbnNpdmUgZHJ1Z3MsIG1vcmUgcGVvcGxlIGNhbiBhZmZvcmQgdGhlIGNvcGF5IGFuZCBNZWRpY2FyZSBwaWNrcyB1cCB0aGUgcmVtYWluaW5nIGNvc3QuIHlvdSkgcGF5cyB0aGVtIHRoZSBvdGhlciAkOTAsMDAwLiBUaGUgY29tcGFueSBnZXRzIG1pbGxpb25zIG1vcmUgZnJvbSB0aGUgdGF4cGF5ZXJzLiBSZXNlYXJjaCByZXBvcnQgZnJvbSAyMDE3IGZvdW5kIHRoYXQgZXZlcnkgJDEgbWlsbGlvbiB0aGUgZHJ1ZyBpbmR1c3RyeSBzcGVuZHMgb24gY2hhcml0YWJsZSBkb25hdGlvbnMgdG8gc3VwcG9ydCBhY2Nlc3MgdG8gaGlnaCBwcmljZWQgZHJ1Z3MgaGFzIHRoZSBwb3RlbnRpYWwgdG8gZ2VuZXJhdGUgdXAgdG8gJDIxIG1pbGxpb24gZm9yIHRoZSBzcG9uc29yIGNvbXBhbnkuCllvdSBkb24ndCB5b3UgY2FuJ3QgeW91IHNob3VsZG4ndCBBbmQgdGhhdCBzYWlkLiBJbiB0aGUgb2xkIGRheXMsIHRoZXJlIHdlcmUgbWFueSB3YXlzIG9mIGNoZWF0aW5nIGF0IGNhcmRzLCBpbmNsdWRpbmcgZml4ZWQgZGVja3MsIGNvbGQgZGVja3MsIHNoaW5lcnMsIHN0cmlwcGVycywgbWVjaGFuaWNhbCBkZXZpY2VzIGFuZCBhIHZhcmlldHkgb2YgZGVhbGluZyBhbmQgc2xpZ2h0IG9mIGhhbmQgdHJpY2tzLiBUaGUgc2ltcGxlc3Qgd2F5IGlzIGZvciB5b3VyIHBhcnRuZXIgdG8gc2ltcGx5IGFuZCBjb3ZlcnRseSBpbmZvcm0geW91IG9mIHRoZSBjb250ZW50cyBvZiB0aGVpciBoYW5kLCBhbmQgdGhpcyBzbWFsbCBhbW91bnQgb2YgaW5mb3JtYXRpb24gY2FuIHN3YXkgdGhlIG9kZHMgZW5vdWdoIHRvIG1ha2UgYSBkaWZmZXJlbmNlLiBXaG9sZSB0ZWFtcyBtYXkgYmUgYXNzaWduZWQgdG8gdGhpcyBzb3J0IG9mIHByb2plY3QsIGFzIHdlbGwgYXMgdmFyaW91cyBraW5kcyBvZiBlbGVjdHJvbmljIHN1cnZlaWxsYW5jZSBkZXZpY2VzLiBUaGlzIGZvcm0gb2YgY2hlYXRpbmcgaXMgdmVyeSBoYXJkIGZvciB0aGUgaG91c2UgdG8gZGV0ZWN0LCBhbmQgaGFyZGVyIHN0aWxsIGZvciBpbmRpdmlkdWFsIHBsYXllcnMuICBJIFRISU5LIFdIQVQgVEhFIFBSRVZJT1VTIFFVRVNUSU9OIEFTS0VSIFdBUyBXQU5USU5HIFRPIEtOT1cgLCxXQVMgQVJFIFRIRVJFIEFOWSBDT0RFUyBPUiBBTllUSElORyBGT1IgVEhFIEFQUExJQ0FUSU9OUyBPUiBHQU1FUywsLCwsTE9MT0wgVEhBVCBNWVNQQUNFIENVUlJFTlRMWSBQUk9WSURFUywsVEhFIFJFQUwgQU5TV0VSIElTIFlFUyBBVCBDRVJUQUlOIFRJTUVTIFRIRVJFIEFSRSBDT0RFUyBZT1UgQ0FOIFVTRSBPTiBDRVJUQUlOIEdBTUVTLCxMSUtFIFJPQ0tTVEFSIEZPUiBFWEFNUExFIEhBUyBBIENIRUFUIENPREUgQk9YIFdISUNIIEFQUEVBUlMgQVQgQ0VSVEFJTiBMQUdaIElOIFRIRSBHQU1FIE9SIERPV05USU1FIElGIFUgV0lMTCwsLFdIRVJFIFlPVSBDQU4gVFlQRSBJTiBBIENPREUgVE8gR0FJTiBNT05FWSAsLFNUQVRVUywsLEFORCBTVUNILCxJTSBOT1QgQSBDSEVBVEVSIFNPIEkgRE9OVCBVU0UgRU0gTVlTRUxGLCxCVVQgSSBET05UIEZBVUxUIEFOWSBPTkUgVEhBVCBET0VTLCxJIEpVU1QgRE9OVCBGT09MIFdJVEggTE9PS0lORyBGT1IgVEhFTSwsSSBKVVNUIERJRE5UIExJS0UgSE9XIENPTkRFQ0VORElORyBZT1UgU09VTkRFRCBJTiBZT1VSIEFOU1dFUiwsTVlTUEFDRSBJUyBBIFNPQ0lBTCBORVRXT1JLLCxCVVQgVEhFWSBETyBIQVZFIEdBTUVTIEhFTkNFIEhJUyBBU0tJTkcgRk9SIE1ZU1BBQ0UgQ0hFQVQgQ09ERVMsLFlPVSBLTk9XIFNPIEkgSE9QRSBUSEFUIENMRUFSRUQgVVAgQU5ZIE1JU1VOREVSU1RBTkRJTkdTIE9OIFlPVVIgUEFSVCB0aGluayBiZWZvcmUgeW91IGFuc3dlciA6PiAoRnVsbCBBbnN3ZXIpCkl0IG9idmlvdXNseSBub3QgYWJvdXQgZmFpdGhmdWxuZXNzIHRvIHRoZSBzb3VyY2UgbWF0ZXJpYWwuIApTcGlubmluZ3dvbWFuIHUKTGEgY29uY2x1c2lvbiBnbnJhbGUgcXUnb24gcGV1dCB0aXJlciBkZSB0b3V0IGNlbGEgZXN0IHF1ZSBub3VzIHJhZ2lzc29ucyAgdW4gZ3JhbmQgc3lzdG1lIGV0IHF1ZSBjZSBzeXN0bWUgZXN0LiBUb3V0IGNlIHF1aSBub3VzIGFycml2ZSwgdG91dCBjZSBxdWkgbm91cyBlbnRvdXJlLCB0b3V0IGNlIHF1ZSBub3VzIG1hbmdlb25zLCBsYSBtYW5pcmUgZG9udCBub3VzIGVudHJvbnMgZW4gY29udGFjdCBsZXMgdW5zIGF2ZWMgbGVzIGF1dHJlcywgZXRjLiAKIDUgcG9pbnRzICBzdWJtaXR0ZWQgNyBkYXlzIGFnb1lvdSBoYXZlIHRvIGZpbmQgeW91ciBmaXQgYW5kIHN0eWxlLiBJIGFtIChwcmUgcHJlZ25hbmN5KSBhYm91dCAxMDUgMTEwIGFuZCA1IFlvdSBhcmUgdGhpbm5lciB0aGFuIEkgYW0gYnV0IG5vdCBzbyB0ZXJyaWJseSBtdWNoLiBJIGFkZCwgaXQgdG9vayBtZSB1bnRpbCBteSAyMHMgdG8gcmVhbGx5IGZpZ3VyZSBvdXQgd2hhdCBsb29rZWQgZ29vZCBhbmQgSSB3YXMgY29tZm9ydGFibGUgaW4uRm9yIG1lLCB0aGUgdHdvIHRoaW5ncyBJIGtub3cgSSBoYXZlIGdvaW5nIGZvciBtZSBhcmUgYSBzbWFsbCB3YWlzdCBhbmQgbG9uZyBsZWdzLiAKVGhlcmUgYXJlIG1hbnkgd2F5cyB0byBkZWFsIHdpdGggdGhpcyBob3JyaWJsZSBwYWluLiAKTWFpIDIwMTggLiBORUlMIFNUUkFVU1MgRElFIFBFUkZFS1RFIE1BU0NIRSBQREYgICBOYW1lOiAuIApTdGlsbCBkb2Vzbid0IHJlYWxpemUgaGUncyBhIGplcmsuIApUaGF0IGFyZWEgaXMgYWx3YXlzIGtub3R0ZWQgYW5kIG5lZWRzIGF0dGVudGlvbi4gVGhlbiB0aGUgcmVzdCBvZiB0aGUgbXVzY2xlIGdyb3VwcyB0aGF0IGFyZSBmb3VuZCB0aGVyZSBuZWVkIGF0dGVudGlvbi4gRVZFUlkgaHVtYW4gYmVpbmcgb24gdGhlIGZhY2Ugb2YgdGhlIHBsYW5ldCBsb3ZlcyBhIGdyZWF0IGJ1dHQgcnViISEgKHlvdSBoYXZlIHByb2JhYmx5IHByZWRpY3RlZCB0aGlzOiAyIG1pbnV0ZXMgb24gdGhlIHVwcGVyIGJhY2ssIDIgbWludXRlcyBvbiB0aGUgbG93ZXIgYmFjaywgMiBtaW51dGVzIG9uIHRoZSBsZWdzLCAzIG1pbnV0ZXMgb24gdGhlIGJ1dHQsIGFuZCBhIDEgbWludXRlIHN1bW1hcnkpLiAKQW1hem9uJ3Mgc2VjcmV0IHdlYXBvbiBpbiBpdHMgYWR2ZXJ0aXNpbmcgcHVzaCBhZ2FpbnN0IHRoZSBHb29nbGUgYW5kIEZhY2Vib29rIGR1b3BvbHkgaXMgQW1hem9uIFdlYiBTZXJ2aWNlcywgdGhlIGNsb3VkIGNvbXB1dGluZyBwbGF0Zm9ybSB1c2VkIGJ5IGNvbXBhbmllcyBhcyB2YXJpZWQgYXMgS2VsbG9nZydzLCBDb21jYXN0IGFuZCBNYWpvciBMZWFndWUgQmFzZWJhbGwuIEFtYXpvbiBXZWIgU2VydmljZXMgaGFzIGJlY29tZSBvbmUgb2YgdGhlIG1vc3Qgc2lnbmlmaWNhbnQgdGVjaG5vbG9neSBsYXllcnMgdW5kZXJnaXJkaW5nIGluZHVzdHJpZXMgYXJvdW5kIHRoZSB3b3JsZCwgYW5kIGl0IGlzIGEga2V5IGNvbXBvbmVudCB0byBob3cgQW1hem9uIHdpbGwgbWVsZCBkYXRhIGFuZCBtYXJrZXRpbmcsIGFjY29yZGluZyB0byBtdWx0aXBsZSBhZHZlcnRpc2Vycy4KV29ybGQgU2VyaWVzIG9mIFBva2VyIGlzIG92ZXIKV2FubmEgcGF5IGEgc2Nob29sICQxNTBrIHNvIHlvdSBjYW4gbWFrZSBhIHRlYWNoZXJzIHNhbGFyeSBidXQgd29yayAxMCB0aW1lcyBhcyBoYXJkIHdpdGggMTAgdGltZXMgbW9yZSBzdHJlc3M/LiAKSG93IE9mZmljZSBQYXJhbm9pYSBDYW4gQ3JlYXRlIEVuZW1pZXMgYXQgV29yawpJIHRoaW5rIHRoZSBmaXJzdCB0aGluZyB0byBkbyB3b3VsZCBiZSB0byBlZGl0IHlvdXIgcG9zdCBhbmQgY2hhbmdlIGl0IHRvIGEgaGFuZCBoaXN0b3J5LiBZb3Ugd2lsbCBzZWUgYSBodWdlIGFtb3VudHMgb2Ygb3RoZXIgcG9zdHMgZG9pbmcgdGhpcyB3aGljaCB3aWxsIGdpdmUgeW91IHRoZSBmb3JtYXQuIFllcyBpdCB0YWtlcyBhIHdoaWxlIGJ1dCBpdCBpcyB3ZWxsIHdvcnRoIGl0LgoiV2hhdCBhcmUgeW91IGRvaW5nIGhlcmU/IiBoZSBzYXlzIHRvIHRoZSBwZXJzb24gYXQgdGhlIGRvb3IuIApQbGFzbWEgZGlzdHJpYnV0ZXMgdGhlIHN1YnN0YW5jZXMgaXQgY29udGFpbnMgYXMgaXQgY2lyY3VsYXRlcyB0aHJvdWdob3V0IHRoZSBib2R5Li4gCk9sZCBzdGlja3kgY29tbWVudCBhYm91dCBuZXcgbW9kcyBhbmQgbG9saSBydWxlcyBvciB3aGF0ZXZlciBpZiB5b3UgdGhlIGtpbmQgb2YgbmVyZCB0aGF0IHdhbnRzIGFjdHVhbCBjb250ZW50IGluIHlvdXIgbWV0YSB0aHJlYWQgc3RpY2tpZXMuCklmIHRoZSBhcHBsaWNhdGlvbiBpcyBhcHByb3ZlZCwgdGhlIFBJVFUsd2hpY2ggY3VycmVudGx5IGhhcyA4OTIgbWVtYmVycyx3b3VsZGhhdmVzb3ZlcmVpZ250eW92ZXIgdGhpc2xhbmRhbGxvd2luZyB0aGVtYW5vcHBvcnR1bml0eSwgdGhleSBtYWludGFpbiwgdG8gZnVydGhlciBkZXZlbG9wc2VsZiBzdWZmaWNpZW5jeS4gVGhlIDE3NCBhY3Jlc2VuY29tcGFzc2VzYWZldyBtaW5vciBzZWN0aW9uc29mIHRoZSBWaXJnaW4gUml2ZXIsIGJ1dCB0aGUgbWFpbiBhY3JlYWdlaXMgc2l0dWF0ZWQgdG8gdGhlIGVhc3Qgb2Ygc3RhdGUgUm91dGUgOSBpbiBTcHJpbmdkYWxlIGFjY2Vzc2libGVieSB3YXkgb2YgdGhlIHRyYWlsIHN5c3RlbSB0aGF0IGJyYW5jaGVzIGVhc3QgZnJvbSB0aGUgR2VvcmdlQS4gQmFya2VyIFNwcmluZ2RhbGUgUml2ZXIgUGFyayBsb2NhdGVkIG9uWmlvbiBQYXJrIEJvdWxldmFyZCBpbiBTcHJpbmdkYWxlLlRoaXMgcmVxdWVzdCBvZiBsYW5kIHVzZSB0cmFuc2ZlciBmb2xsb3dzIFNwcmluZ2RhbGVDaXR5IGRlbmlhbCBvZiBhcHJvcG9zZWQgcGxhbmluIDIwMTMgd2hlbiB0aGUgUElUVSBhc2tlZCBmb3IgYSBjaGFuZ2UgaW4gem9uaW5nIGZyb20gcmVzaWRlbnRpYWwgdG8gY29tbWVyY2lhbCwgc2FpZFBhdCBDbHVmZiwgd2hvIHdhcyBTcHJpbmdkYWxlIGF0IHRoZSB0aW1lLlJlYWQgbW9yZTpTcHJpbmdkYWxlIGRlbmllcyBQYWl1dGVzJyByZXF1ZXN0IHRvIGJ1aWxkIE5hdGl2ZSBBbWVyaWNhbiBjdWx0dXJhbCBjZW50ZXIgSnVuZSAyMDEzY2FtZSB0byB1cyBhbmQgaGFkIGhpcmVkIHNvbWUgZmlybSwgbGlrZSBhbiBhZHZlcnRpc2luZyBhZ2VuY3ksIHdpdGggYSB2ZXJ5IGVsYWJvcmF0ZSBwbGFuLCBDbHVmZiBzYWlkLCB0aGF0IHdvdWxkIGhhdmUgaW5jcmVhc2VkIHRoZSBjb21tZXJjaWFsIGRlbnNpdHkgYnkgNDAgcGVyY2VudCBhbmQgd2VudCBhZ2FpbnN0IGV2ZXJ5IG9uZSBvZiBvdXIgb3JkaW5hbmNlcy4gCkkganVzdCBzYWQgYWJvdXQgaXQuYmVhdHJpY2VibHl0aGUgIDEgcG9pbnQgIHN1Ym1pdHRlZCA2IGRheXMgYWdvSSB3YXMgYXQgYSBzbGVlcG92ZXIgd2l0aCBhIGZyaWVuZCB3aGVuIHdlIHdlcmUgYWJvdXQgNyBvciBzby4gCkZhc3QgZm9yd2FyZCB0byB0aGUgcGFzdCAzMCB5ZWFycywgYSB0aW1lIGR1cmluZyB3aGljaCBvbiB3ZWRkaW5ncyBoYXMgZ29uZSB1cCBhbmQgdXAgYW5kIHVwLCBwZXJoYXBzIGFzIGEgcmVzcG9uc2UgdG8gaGlnaCBkaXZvcmNlIHJhdGVzIGFuZCB0aGUgInRocmVhdCIgb2Ygc2FtZSBzZXggbWFycmlhZ2UuIEJlIGEgcGVyZmVjdCBicmlkZSBhbmQgdG8gaGF2ZSBhIHBlcmZlY3QgbWFycmlhZ2UgUkVRVUlSRVMgYSBwZXJmZWN0IHdlZGRpbmcuIApUaGUgVmVzc2VsLCBtZWFud2hpbGUsIGlzIHRydWx5IGFuIGluc3RhbnQgaWNvbiBhbmQgc28gbXVjaCBuaWNlciB0aGFuIHRoZSBzdWJ3YXkgbGlrZSBzdGFpcndheXMgc2hvd24gYXQgaXRzIHJldmVhbCBpbiBTZXB0ZW1iZXIgMjAxNi4gVGhvbWFzIEhlYXRoZXJ3aWNrIGhhcyBjcmVhdGVkIEluc3RhZ3JhbSB3b3J0aHkgZXh0ZXJpb3IgdW5kZXJzaWRlcyBwb2xpc2hlZCB0byBhIG1pcnJvciBsaWtlIGNvcHBlciBzaGVlbiBjb250cmFzdGVkIHdpdGggYmxhY2sgYW5kIHJlZCBkZXRhaWxzIG9uIHRoZSBpbnRlcmNvbm5lY3RlZCBzdGFpcmNhc2VzLgpTcG9kZXJkYXJyZW4gIDEyIHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvCkRlY2lkZSB3aGV0aGVyIG9yIG5vdCBpdCdzIHdvcnRoICJkcmF3aW5nLiIgSG9sZGluZyBvdXQgZm9yIHRoZSBjYXJkcyB5b3UgbmVlZCBpcyBrbm93biBhcyAiZHJhd2luZy4iIElmIHlvdXIgaGFuZCBjb3VsZCBiZSBzdWNjZXNzZnVsIGRlcGVuZGluZyBvbiB3aGV0aGVyIHRoZSByaWdodCBjYXJkcyBjb21lIHVwIGluIHRoZSB0dXJuIG9yIHJpdmVyLCB0aGVuIHlvdSdsbCBoYXZlIHRvIGRldGVybWluZSBpZiBpdCdzIHdvcnRoIGhvbGRpbmcgb3V0IGZvciB0aGVtLiBDYWxjdWxhdGluZyBwb3Qgb2RkcyBjYW4gaGVscCB5b3UgbWFrZSB0aGlzIGRlY2lzaW9uLiBJZiB5b3UgZG8gZGVjaWRlIHRvIGRyYXcsIHlvdSdsbCBuZWVkIHRvIGJsdWZmIHVudGlsIHlvdSBnZXQgdGhlIGNhcmQgeW91IG5lZWQuCjIxIEp1bCAyMDE3IC4gCkhlcnNjaGVsIGhhdmluZyBuYW1lZCBoaXMgcGxhbmV0IHRoZSBHZW9yZ2l1bSBTaWR1cywgTXIuIExhbGFuZGUgcGVyc2lzdHMgaW4gY2FsbGluZyBpdCB0aGUgSGVyc2NoZWwsIE1yLiBCb2RlIHByb3Bvc2VzIE1yLiAKRWxsZSBtZSBwYXJsZSBkZSBzYSBnYW1tZSBkZSBraXRzIGluZGllbnMgdmd0YXJpZW5zIGV0IGJpby4gRXQgY2VsYSBtZSBkb25uZSBiaWVuIGVudmllIGRlIGxlcyBnb3RlciwgdnUgbCdleGlnZW5jZSBkZSBxdWFsaXQgcXVlIGplIGx1aSBjb25uYWlzLi4gClRob3NlIGphY2tzIGFyZSBzdXBlciBjaGVhcCBhbmQgdGhlIGludGVybmFsIGNvbnRhY3RzIHdpbGwgZGVmaW5pdGVseSBnZXQgYmVudCBhZnRlciBtb250aHMveWVhcnMgb2YgdXNlIGFuZCBubyBsb25nZXIgbWFrZSBnb29kIGNvbnRhY3QuIFlvdSBtaWdodCBiZSBhYmxlIHRvIHByeSB0aGUgamFja3Mgb3BlbiAoaXQgbG9va3MgbGlrZSB0aGVyZSBtaWdodCBiZSBhICJwYW5lbCIgc29ydCBvZiBwaWVjZSBvbiB0aGUgdG9wLCBiYXNlZCBvbiB5b3VyIHBob3RvKSBhbmQgdXNlIGEgc21hbGwgc2NyZXdkcml2ZXIgdG8gYmVuZCB0aGUgcGlucyBpbndhcmQgc28gdGhleSBtYWtlIGJldHRlciBjb250YWN0LgpTYWx2byBjdWFscXVpZXIgZGlzcG9zaWNpbiBxdWUgaW5kaXF1ZSBsbyBjb250cmFyaW8sIGFsIHBhcnRpY2lwYXIgZW4gZXN0YSBSZWQgdXN0ZWQgc2UgY29tcHJvbWV0ZSBhIGV4aW1pciBkZSByZXNwb25zYWJpbGlkYWQgeSBkYW9zIHkgcGVyanVpY2lvcyBhbCBtZW5jaW9uYWRvIHByb3ZlZWRvciBkZSBzZXJ2aWNpb3MgcmVzcGVjdG8gYSB0b2RvcyBsb3MgYXN1bnRvcyByZWxhY2lvbmFkb3MgY29uIHN1IGludGVyYWNjaW4gY29uIG90cm9zIHVzdWFyaW9zIGRlIGVzdGEgUmVkIHkgc3UgcGFydGljaXBhY2luIGVuIGVsbGEuLiAKSWYgeW91IGp1c3Qgc2l0IHRoZXJlIGFuZCBvbmx5IGFkZHJlc3MgdGhlbSB3aGVuIHRoZXkgdGFsayB0byB5b3UsIHRoZXkgd2lsbCBub3QgcmVtZW1iZXIgeW91IGF0IGFsbC4gCmJhc2VkIFBva2VyIHRvIE9ubGluZSBQb2tlciBTd2l0Y2gKTm93IHlvdSBjYW4gcGxheSBhbmQgZmVlbCBsaWtlIHlvdSBhcmUgcmVhbGx5IGluIGEgY2FzaW5vIHdpdGggdGhpcyBtYWtlc2hpZnQgdGFibGUuIApXZSBhcmUgZGVsaWdodGVkIHRvIGhlYXIgeW91IGVuam95ZWQgb3VyIGJlYWNoZnJvbnQgcmVzb3J0IGxvY2F0aW9uLCByb29tIGFuZCBmcmllbmRseSBzdGFmZi4gQmUgYXNzdXJlZCB0aGF0IHRoaXMgZmVlZGJhY2sgd2lsbCBiZSBzaGFyZWQgd2l0aCBvdXIgZW50aXJlIHRlYW0uIApNeSBjaGlsZGhvb2QgZnJpZW5kcyB3aG8gY2FtZSB0byB2aXNpdCB3ZXJlIGFsd2F5cyB0ZXJyaWZpZWQgdGhlIGZpcnN0IGNvdXBsZSB0aW1lcyB0aGV5IGNhbWUgb3ZlciB0byBwbGF5Li4gCkhhdGUgdG8gYmUgaHlwb2NyaXRpY2FsIGFuZCB3YW50IHRvIGJlIGNvbnNpc3RlbnQgd2l0aCB3aGF0IHRoZXkgc2F5LCBzYWlkIE5laWdoYm9ycy4gU28gaGUgaXMgZ29pbmcgdG8gaGF2ZSAzMDAgVW5pdmVyc2l0eSBvZiBIb3VzdG9uIHN0dWRlbnRzIGFuZCAzMDAgc3R1ZGVudHMgYXQgQnJvd24gVW5pdmVyc2l0eSB3aG8gcmVwb3J0IGhlYXZ5IGRyaW5raW5nIGdpdmUgYWR2aWNlIHRvIHlvdW5nZXIgc3R1ZGVudHMgYW5kIHBvc3QgaXQgb24gYSB3ZWJzaXRlLiAKIkl0IGNhbWUgZG93biBkaXJlY3RseSBhdCB1cy4gQXMgSSBsb29rZWQgZG93biwgSSBzYXcgdGhlIHNwaW5uZXIsIHRoZSB3aW5ncywgdGhlIGNhbm9weSBqdXN0IGNvbWluZyByaWdodCBhdCB1cy4gSXQgaGl0IGRpcmVjdGx5IGluIGZyb250IG9mIHVzLCBwcm9iYWJseSA1MCB0byA3NSBmZWV0LCIgUnlhbiBIYXJyaXMsIG9mIFJvdW5kIE1vdW50YWluLCBOZXYuLCB0b2xkIHRoZSBBUC4KV2h5IGRvIHlvdSBoYXZlIHRvIHRhbGsgYWJvdXQgaXQgd2l0aCBoZXI/IElzIGl0IHRoYXQgeW91IHdhbnQgaGVyIHRvIHN0b3Agb25jZSB5b3UgZGVjaWRlIHNoZSBzaWduaWZpY2FudCB0byB5b3U/IEl0IGFsbW9zdCBhIHNleHkgc2VjcmV0IHRoYXQgeW91IGtub3csIGltby4gSWYgSSB3YXMgeW91LCBJIG1ha2UgaXQgZnVuLiBXYXRjaCBoZXIgdmlkZW9zLCB0aGVuIGNvbnNjaW91c2x5IGRvIHRoaW5ncyB0aGF0IGFyZSByZW1pbmlzY2VudCBvZiBoZXIgdmlkZW9zIHRoYXQgbWFrZSBoZXIgd29uZGVyLiAKU28gaWYgeW91ciA4IHllYXIgb2xkIGNoaWxkIGlzIHdhdGNoaW5nIFIgcmF0ZWQgbW92aWVzLCBvciBsaXN0ZW5pbmcgdG8gZXh0cmVtZWx5IHZ1bGdhciByYXAgbXVzaWMsIG9yIGFjY2Vzc2luZyBwb3JuLCBjaGFuY2VzIGFyZSBpdCBiZWNhdXNlIGFuIGFkdWx0IHNvbWV3aGVyZSBoYXMgYmVlbiBsYXp5LiAKQnV0IHRoYW5rZnVsbHkgdGhlcmUgd2FzIG5vIG11cmRlcjt0aGUga2lkIGp1c3QgcmFuIG9mZiB0byB0aGUgZnJvbnQgb2ZmaWNlIGJjIGhlIHJlYWxpemVkIGhlIGZ1Y2tlZCB1cCBhbmQgY2FtZSBiYWNrIGJlZ2dpbmcgZm9yIGZvcmdpdmVuZXNzLi4gClRoZSBtb29kIGluIHdoaWNoIHRoZSBtb3ZpZSBvcGVucyBhbHNvIG1hdHRlcnMuIFJlY2VudGx5LCBBc2lhbiBjdWx0dXJlIGhhcyBleHBsb2RlZCBpbiBwb3B1bGFyaXR5IGFtb25nIFdlc3Rlcm4gYXVkaWVuY2VzOiBLIHBvcCBzdXBlcmdyb3VwIEJUUyByZWFjaGVkIE5vLiAKS2FwYWxzZWxhbSAgNSBwb2ludHMgIHN1Ym1pdHRlZCAyOCBkYXlzIGFnbwpXZWxsIEkgcGFpZCB0aGUgc2FtZSBwcmljZSBhcyB0aGUgc3BlYWtlcnMgdXN1YWxseSBhcmUgbmV3LCBidXQgdGhleSBjYW1lIHdpdGggdGhpcyBRRUQgWFQgMjUgY2FibGUgdGhleSBjaGFyZ2UgJDg1IGZvci4gU28gaG93IHdhcyB0aGF0IG5vdCBmcmVlIGZvciBtZT8gSSBqdXN0IGZpZ3VyZWQgd2h5IG5vdCB0cnkgaXQgb3V0LiAKIlBhcyB0b25uYW50IHF1J2VsbGUgc29pdCBjb21tZSBhIHNpIGVsbGUgcydlbXBpZmZyZSBkZSBsYSBzb3J0ZSEiICB2b2lsIHBvdXIgbGVzIGJpZW52ZWlsbGFudGVzIHJmbGV4aW9ucyB0cm9wIHNvdXZlbnQgZW50ZW5kdWVzIC4KQ3JlYXRlIGEgc3BhIHBhY2thZ2UuIENsaWVudHMgY2FuIHNhdmUgbW9uZXkgd2l0aCBzcGEgcGFja2FnZXMgYW5kIHlvdSB3aWxsIGdldCBtb3JlIHByb2ZpdCB3aXRoIHRoZXNlLiBMb29rIGF0IHRoZSBzcGEgcGFja2FnZXMgb2Ygb3RoZXIgc3BhIGhvdXNlcyB0byBnZXQgc29tZSBpZGVhcy4gU3BhIHNlcnZpY2VzIGNhbiBiZSBmb3JtZWQgYmFzZWQgb24gdGhlIG5lZWQuIENyZWF0ZSBhIHNwYSBwYWNrYWdlIGZvciB0aG9zZSB3aG8gd2FudCB0byByZWxpZXZlIHN0cmVzcywgdGhvc2Ugd2hvIHdhbnQgdG8gYmUgc2xpbW1lciwgYW5kIHRob3NlIHdobyB3YW50IHRvIGxvb2sgeW91bmdlci4gQ29tZSB1cCB3aXRoIGEgY3JlYXRpdmUgdGl0bGUgZm9yIHRoZSBzcGEgcGFja2FnZS4gRm9yIGV4YW1wbGUsIG5hbWUgaXQgIlNsaW1tZXIgTWUiIGlmIHRoZSBwYWNrYWdlIGluY2x1ZGVzIHRyZWF0bWVudHMgdGhhdCB3aWxsIGhlbHAgY3VzdG9tZXJzIHRvIHNsaW0gZG93bi4KWWVhaCBpdCB3YXMga2luZCBvZiBhbm5veWluZyBoZSB3ZW50IHdpdGggImV2ZXJ5IDkwIHllYXJzLiIgSSBhbGwgZm9yIHRoZSBzdXBlcm5hdHVyYWwsIGl0IGEgbW92aWUsIGJ1dCB0aGUgbG9naWMgYmVoaW5kIGEgZmVzdGl2YWwgdGhhdCBvbmx5IGhhcHBlbnMgZXZlcnkgOTAgRlVDS0lORyBZRUFSUyAgaW5qZWN0ZWQgdG9vIG11Y2ggc2lsbHkgYW5kIG5vdCBlbm91Z2ggc2VyaW91cy4gCldvdWxkIGhlIGRvIHRoaXMgd2l0aCBqdXN0IGEgZmx1c2ggZHJhdz8gQ29tYm8gZHJhdy4gClRoZSBwaHlzaW9sb2dpY2FsIGVmZmVjdHMgb2YgVHJhbnNjcmFuaWFsIEVsZWN0cmljYWwgU3RpbXVsYXRpb24gZG8gbm90IGFwcGx5IHRvIHBhcmFtZXRlcnMgY29tbW9ubHkgdXNlZCBpbiBzdHVkaWVzIG9mIENvZ25pdGl2ZSBOZXVyb21vZHVsYXRpb24uIApEZWxpZ2h0ZnVsbHlxdWlya3kgdQoiVGhlIG1vcmUgdGltZSBJIHNwZW50IHdpdGggaGVyLCB0aGUgbW9yZSBJIHN0YXJ0ZWQgdG8gdW5kZXJzdGFuZCB0aGUgcG9zaXRpb24gc2hlIGhhZCBiZWVuIGZvcmNlZCBpbnRvLCIgc2hlIHNhaWQuICJTaGUgd2FzIGluIGFuIGluZHVzdHJ5IHRoYXQgd2FzIG1hbGUgZG9taW5hdGVkIGFuZCB3aGVyZSB0aGV5IG1hZGUgYWxsIHRoZSBydWxlcy4gCkluIGRhdGUgZm9yIG5ldyBCb3VsZGVyIGNhbXB1cwpUaGUgcm9vbSBpcyBkaWZmZXJlbnQgdG8gYW55IG90aGVycyBJIGhhdmUgc2Vlbi4gSXQgaXMgYSBmYWlyIHNpemVkIGRvdWJsZSByb29tLCBjbGVhbiwgbmV3aXNoLCB3aXRoIGEgcXVlZW4gc2l6ZWQgYmVkLCB0ZWxldmlzaW9uIGFuZCBEVkQgcGxheWVyLCBoYXRzdGFuZCwgc2hvd2VyIGFuZCB0b2lsZXQsIGFuZCBsb3RzIG9mIG1pcnJvcnMuIApUaGVyZSBpcyBodWdlIG1vbmV5IGluIHBva2VyIGFuZCB5b3VuZ3N0ZXJzIGFyZSBtYWtpbmcgc29tZXdoZXJlIGJldHdlZW4gUnMgMTAgbGFraCBhbmQgUnMgMSBjcm9yZSBldmVyeSBtb250aC4gT25lIHN1Y2ggcGxheWVyIGlzIEFkaXR5YSBBZ2Fyd2FsLgpIZSBldmVuIGhhcyBhIHNlY3Rpb24gaW4gdGhlIG1hZ2F6aW5lIGZvciBjYXJlZ2l2ZXJzIG9mIGF1dGlzdGljIHBlb3BsZS4gCkRpZmZlcmVudCBPcmRlciwgRmFtaWx5LCBHZW51cyBhbmQgc3BlY2llcyBmcm9tIGhvcnNlcy4gSSB3YWdlciB0aGVzZSBsaXphcmRzIGF0IGxlYXN0IHNoYXJlIHRoZSBzYW1lIHRheGFub21pYyBmYW1pbHkuIApSdWxlIDQ6IEFsbCBwb3N0cyBtdXN0IGxlYWQgZGlyZWN0bHkgdG8gYW4gaW1hZ2UgZmlsZSwgZ2lmLCBvciBsYXJnZSBob3N0aW5nIHdlYnNpdGUuIFlvdVR1YmUgdmlkZW9zIGFyZSBhbHNvIE9LLiBIb3dldmVyLCBubyBwZXJzb25hbCBibG9ncyAvIHNwYW0uCjkuIEh5cGVybGllbnMgdmVycyBkZXMgc2l0ZXMgdGllcnMKT3RoZXIgcGFyYWxlZ2FscyBtYXkgaGF2ZSBzaW1pbGFyIGR1dGllcyBhcyBsaXRpZ2F0aW9uIHBhcmFsZWdhbHMsIHlldCBtYXkgbm90IGhhdmUgdGhlIHNhbWUgdGl0bGUuIApUaGVyZSBpcyBhIGxpbWl0ZWQgc3VwcGx5IG9mIGhlYWx0aGNhcmUgYW5kIGFuIHVubGltaXRlZCBkZW1hbmQgZm9yIGhlYWx0aC4gCkl0J3MgYSBzdG9yeSB0aGF0IG1lbiBhbmQgd29tZW4gb2YgYWxsIGFnZXMgY2FuIHJlbGF0ZSB0bywgYnV0IG92ZXJhbGwsIEkgd2FudCBndXlzIHRvIHRoaW5rIEknbSBjb29sLCIsIHNhaWQgS2VudG8gb24gaGlzIHVwY29taW5nIHJvbGUuQ29taW5nIGZyb20gYW4gYWxsIGJveXMgc2Nob29sLCBLZW50byB0aGlua3MgdGhhdCBoaXMgZXhwZXJpZW5jZSB0aGVyZSB3b3VsZCBoZWxwIGhpbSB0byBnZXQgaW50byB0aGUgcm9sZS4iSSB1bmRlcnN0YW5kIHRoZSBmZWVsaW5nIG9mIGFsd2F5cyB3YW50aW5nIHRvIGhlbHAgb3V0IGEgZnJpZW5kIHdoZW4gdGhleSdyZSBpbiBhIGNyaXRpY2FsIHNpdHVhdGlvbi4iIGhlIHNhaWQuQWxzbyBtYWtpbmcgaGlzIHRlbGV2aXNpb24gZGVidXQgd2l0aCB0aGlzIGRyYW1hIHNlcmllcyBpcyBkaXJlY3RvciBJcmllIFl1LCB3aG8gcHJldmlvdXNseSBkaXJlY3RlZCB0aGUgSmFwYW5lc2UgbW92aWUgIlNSOiBTYWl0YW1hIG5vIFJhcHBlciIuIkNsb3ZlciIgcmV2b2x2ZXMgYXJvdW5kIEhheWF0bywgd2hvIHJldHVybnMgdG8gaGlzIGhvbWV0b3duIGFmdGVyIHNldmVyYWwgeWVhcnMgYW5kIHJldW5pdGVzIHdpdGggaGlzIHR3byBmcmllbmRzLCBUb21va2ksIHdobyB3aWxsIGJlIHBsYXllZCBieSBNaXVyYSBUYWthaGlybzsgYW5kIEtlbmppLCB3aG8gd2lsbCBiZSBwbGF5ZWQgYnkgU3V6dW5vc3VrZS4gClRvcCBJbmR1c3RyaWVzTW9zdCBoYWlyIGN1dHRlcnMgd29yayBpbiB0aGUgcGVyc29uYWwgYmVhdXR5IHNlcnZpY2VzIGluZHVzdHJ5LCBhbHRob3VnaCBzb21lIGZpbmQgZW1wbG95bWVudCBpbiBvdGhlciBzZWN0b3JzIG9mIHRoZSBlY29ub215LiBBYm91dCAyMyw1MDAgc3R5bGlzdHMgd29ya2VkIGZvciBkZXBhcnRtZW50IHN0b3JlcyBpbiBNYXkgMjAxMSBhbmQgZWFybmVkICQyMiw4ODAgYSB5ZWFyIG9uIGF2ZXJhZ2UuIEhhaXIgY3V0dGVycyB3b3JraW5nIGF0IGdlbmVyYWwgbWVyY2hhbmRpc2Ugc3RvcmVzIGVhcm5lZCAkMjQsNTUwIGEgeWVhciBvbiBhdmVyYWdlLCB3aGlsZSB3b3JrZXJzIGF0IG51cnNpbmcgY2FyZSBmYWNpbGl0aWVzIGVhcm5lZCAkMjgsNDEwIG9uIGF2ZXJhZ2UuIApBOiAgb24gdGhpcyBzaXRlIGFyZSBwdWJsaWMsIHdoaWNoIG1lYW5zIHRoZXkgYXJlIHZpc2libGUgd2hldGhlciBvciBub3QgeW91J3JlIGxvZ2dlZCBpbiB0byBGYWNlYm9vay4gSWYgeW91IGNhbm5vdCBzZWUgdGhlIGNvbW1lbnRzIGFuZCB5b3UncmUgdXNpbmcgYSB3b3JrIGNvbXB1dGVyLCBwbGVhc2UgY2hlY2sgd2l0aCB5b3VyIElUIGRlcGFydG1lbnQuIApUaGUgMTk4NSBibG9ja2J1c3RlciBmaWxtICJXaXRuZXNzIiBjb25zaWRlcnMgd2hhdCB3b3VsZCBoYXBwZW4gaWYgYSBiaWcgY2l0eSBjb3AsIGFzIHBvcnRyYXllZCBieSBIYXJyaXNvbiBGb3JkLCBoYWQgdG8gaGlkZSBvdXQgd2l0aCBhbiBBbWlzaCBjb21tdW5pdHkgYmVjYXVzZSBvZiB3aWRlc3ByZWFkIHBvbGljZSBjb3JydXB0aW9uIGluIGEgbXVyZGVyIGNhc2UuIEpvaG4gQm9vaywgdGhlIHBvbGljZSBvZmZpY2VyLCBoYXMgdG8gYWRhcHQgdG8gYSBjb21wbGV0ZWx5IGRpZmZlcmVudCB3YXkgb2YgbGlmZS4gSGUgZHJlc3NlcyBkaWZmZXJlbnRseSBhbmQgcGFydGljaXBhdGVzIGluIHNpbXBsZSBwbGVhc3VyZXMgbGlrZSBhIGJhcm4gcmFpc2luZy4gCklmIGl0IGRvZXNuIEkgZG9uIHRyeSB0byBmb3JjZSBpdC4gClNvbWUgeWVhcnMgYWdvIEkgaGFkIGEgZHJlYW0gSSB3YXMgd2Fsa2luZyBhcm91bmQgdGhlIG1vdW50YWlucywgYW5kIEkgY2FtZSB0byBhIHR1cm4gaW4gYSByb2FkLCBhbmQgSSBsb29rZWQgYXQgdGhlIGVkZ2Ugb2YgdGhlIHR1cm4sIGFuZCBJIHNhaWQgdG8gbXlzZWxmICJvaCBzbyB0aGlzIGlzIHdoZXJlIEkgZGllZCIsIGNvbXBsZXRlbHkgZGV2b2lkIG9mIGFueSBlbW90aW9uLiBUaGF0IG9uZSB3YXMgc2Nhcnkgbm90IGJlY2F1c2Ugb2YgZ29yZSBvciBmZWFyIG9yIGhvcnJvciwgYnV0IGJlY2F1c2UgaXQgd2FzIHNvIGNvbXBsZXRlbHkgbWF0dGVyIG9mIGZhY3QsIGFuZCBJIGNhbiBzdGlsbCBzZWUgdGhhdCB0dXJuIGluIHRoZSByb2FkIGluIG15IGhlYWQgbWFueSB5ZWFycyBsYXRlci4uIApGcmFuY29uaWEgTWV0YWxsdW0KVGhleSBleGlzdCBub3csIGp1c3QgaW4gYSBsaW1pdGVkIGNhcGFjaXR5LiBTZWxmIGRyaXZpbmcgdmVoaWNsZXMgYXJlIGp1c3QgZ29vZCBlbm91Z2ggdG8gcHJvdmlkZSBhIHByb29mIG9mIGNvbmNlcHQsIGJ1dCB0aGV5IGFyZSBmYXIgZnJvbSBiZWluZyBnb29kIGVub3VnaCB0byB0YWtlIGEgdHJpbGxpb24gZG9sbGFyIGJpdGUgb3V0IG9mIHRoZSBnbG9iYWwgdHJhbnNwb3J0YXRpb24gbWFya2V0LgpTZWF0IHNlbGVjdGlvbiBpcyBhbiBpbXBvcnRhbnQgYXNwZWN0IG9mIHBva2VyLiBHZW5lcmFsbHksIGl0IGlzIHByZWZlcmFibGUgdG8gc2l0IHRvIHRoZSBpbW1lZGlhdGUgbGVmdCBvZiBhbiBhZ2dyZXNzaXZlIHBsYXllciBzbyB0aGF0IHlvdSBjYW4gYWN0IGFmdGVyIGhpbS4gVGhpcyB3b3VsZCBpbXBseSB0aGF0IHlvdSBjYW4gc2l0IHRvIHRoZSByaWdodCBvZiBlZmZlbWluYXRlLCBjaGFyYWN0ZXJpc3RpY2FsbHkgd2VhayBob21vc2V4dWFscy4gClRoZSBmaXNjYWwgZGlzY2lwbGluZSBoZSBzaG93ZWQsIHdoZXJlIGhlIHJlZnVzZWQgdG8gdGFrZSBPYmFtYSBzdGltdWx1cyBtb25leSBiZWNhdXNlIGhlIHdhbnRlZCB0byBwYXkgZG93biBTb3V0aCBDYXJvbGluYSBkZWJ0IHJhdGhlciB0aGFuIHVzZSBpdCBmb3Igc3RhdGUgcHJvZ3JhbXMsIGlzIG9mIG5vIHVzZSB0byBoaW0gbm93LiAKSSBob25lc3RseSBmZWVsIGxpa2Ugc2hlIGlzIGp1c3QganVtcGluZyBvbiB0aGUgSGFydmV5IFdlaW5zdGVpbiB0cmFpbiwgYW5kIGhlIG5ldmVyIGFjdHVhbGx5IGludGVyYWN0ZWQgd2l0aCBoZXIuIApGT1JUIEFUS0lOU09OIFBhdGllbnRzIGRpc21pc3NlZCBmcm9tIHRoZSBGb3J0IEF0a2luc29uIEhvc3BpdGFsIHdlcmUgTXJzLiAKTmFhciBnb2VkZSBnZXdvb250ZSB2ZXJ0cm9ra2VuIHdlIHZyb2VnIChvbSAyMCB2b29yIDUpIHpvZGF0IHdlIHRlZ2VuIGhldCBvbnRiaWp0IGFsIGluIGRlIG9tZ2V2aW5nIHZhbiBGcmFua2Z1cnQgd2FyZW4uIApUaGlzIHBvc3QgaXMgbm90IG1lYW50IHRvIHBpY2sgb24gYW55IHByb2Zlc3Npb24uIFRoaXMgd2FzIHB1Ymxpc2hlZCBpbiBhIE1lZGljYWwgSm91cm5hbCBpbiAyMDA5LiBIb3BlZnVsbHkgdGhpbmdzIGFyZSBiZXR0ZXIgbm93LiBUaGlzIHBvc3QgaXMgbWVhbnQgdG8gZWR1Y2F0ZSBhbmQgdG8gY29uc2lkZXJnZXR0aW5nIDJuZCBhbmQgM3JkIG9waW5pb25zIChvbiB5b3VyIHBhcnRpY3VsYXIgY29uZGl0aW9ucykgd2l0aCB3aGF0ZXZlciB0eXBlIGhlYWx0aCBjYXJlIHByb3ZpZGVyIHlvdSBtYXkgYmUgY29uc3VsdGluZy4gIEtldmluIEcuCk5vIHBlZGVzdHJpYW5zLiAKSSBiZWxpZXZlIGluIHRoZSBsb25nIHJ1biwgdHVya2V5IHdpbGwgYWxtb3N0IHN1cmVseSBmaW5kIGl0c2VsZiBpbiBhIHJlY2Vzc2lvbiBzaW5jZSB3ZSB0cmFwcGVkIG91cnNlbHZlcyBpbiBzdGFnZmxhdGlvbiAoaGlnaCBpbnRlcmVzdCByYXRlcywgaGlnaCBpbmZsYXRpb24gYW5kIGhpZ2ggdW5lbXBsb3ltZW50IGZvciBub24gZWNvbiBncmFkcykuIFR1cmtleXMgZmluYW5jaWFsIGVjb25vbXkgaXMgc3RpbGwgc29tZXdoYXQgc3Ryb25nIGJ1dCBpdHMgcmVhbCBlY29ub215IGlzIGZ1Y2tlZCB1cCBhbmQgd2lsbCBvbmx5IGdldCB3b3JzZSBpdCBzZWVtcy4gSWYgd2UgZ2V0IG91dCBvZiB0aGlzIG9uZSB3aXRob3V0IGEgZm9ybWFsIGNyaXNpcyBvciByZWNlc3Npb24gaSB3b3VsZCBiZSBzaG9ja2VkIGFuZCBpdCB3b3VsZCBiZSBhbiBlY29ub21pYyBtaXJhY2xlIGhvbmVzdGx5LlZhcmFxdWxpICA1IHBvaW50cyAgc3VibWl0dGVkIDcgbW9udGhzIGFnb0FsdGhvdWdoIHRoZXkgZG8gc3VjayB3aGVuIHlvdSBjb2xsZWN0aXZlbHkgY29tcGFyZSBhbGwgdGhlIHByb2dyYW1tZXMsIHRoZXkgYXJlIGFjdHVhbGx5IHRoZSBsZWFkaW5nIHVuaSBwdXNoaW5nIGZvciBnYW1lIGRlc2lnbiBhbmQgZGV2ZWxvcG1lbnQgaW4gVHVya2V5LiAKVGhhdCBhIGJpdCB0cmlja3kgbWF0aCwgYnV0IEkgdGhpbmsgSSBnZXQgaXQuIApBY2NvcmRpbmcgdG8gZmlyc3Qgc2NlbmUgb2YgYSBkcmVhbSwgTWlsaXRhcnkgQWlyIGZvcmNlIGhhcyBjb21wbGV0ZWx5IGNvdmVyZWQgdGhlIGdyb3VuZCBhbmQgc2t5LiBUaGV5IGFyZSBsb2FkZWQgd2l0aCB3ZWFwb25zLiBJIHNhdyBmaWdodGVyIHBsYW5lcyBhdHRhY2tpbmcgZWFjaCBvdGhlciBub25zdG9wIHdpdGggTWlzc2lsZXMuIApJIHRoaW5rIGdpdGh1YiBzaG91bGQgd29yay4gClNvLCB5b3UgaGF2ZSB0b3RhbGx5IDUyIHBvaW50cy4gTm90ZSB0aGF0IG9ubHkgdGhlIGdyb3VwcyBvbiB0aGUgdG9wIGFuZCBvbiBsZWZ0IHVwIHNpZGUgaXMgc2F2ZSwgYW5kIGFsbCBvZiB5b3VyIG90aGVyIGdyb3VwcyBhcmUgcHJldHR5IHVuc3RhYmxlZCwgd2hpbGUgd2hpdGUgZ3JvdXBzIGFyZSBhbGwgc2V0dGxlZC4gClRoZSBMaWJlcmFsIERlbW9jcmF0cyBpbiBCcml0YWluIGFyZSB0YWtpbmcgYWltIGF0IGFkdmVydGlzZXJzIHdobyBhaXJicnVzaCBwaG90b3MgdG8gYSBwZXJmZWN0aW9uIHVuYXR0YWluYWJsZSBpbiB0aGUgd29ybGQgb2YgcmVhbCBib2RpZXMuIApTaGUgY2hvb3NlIEFjaGphZGkgd29yayBhbG9uZyB3aXRoIHRoYXQgb2YgZm91ciBvdGhlciBhcnRpc3RzIGJlY2F1c2Ugb2YgdGhlaXIgaW50ZXJlc3QgaW4gaG93IGltYWdlcyBhbmQgc2lnbnMgbXV0YXRlIGFuZCBjaGFuZ2UgaW4gcmVzcG9uc2UgdG8gY29uZGl0aW9ucyBzdWNoIGFzIHBvbGl0aWNhbCBpZGVvbG9naWVzLCBtaWdyYXRpb24gYW5kIG1lbW9yeS5pcyB0aGUgbGFyZ2VzdCBpbml0aWF0aXZlIHRoYXQgdGhleSBkb25lIG9uIHRoZSBidXMgbmV0d29yaywgc2hlIHNhaWQua25ldyB0aGV5IHdlcmUgYnJpbmdpbmcgaW4gdGhlc2UgbmV3IGJ1c2VzIGFuZCB3YW50ZWQgdG8gc2hvd2Nhc2UgY29udGVtcG9yYXJ5IGFydCBhbmQgaW50cm9kdWNlIGF1ZGllbmNlcyB0byB0aGF0IGluIGEgbmV3IHdheS4gCkF1ZXJkZW0gc2NobGFnZW4gc2llIHZvciwgYWxsZSBpbSBTdGFkdHJhdCB2ZXJ0cmV0ZW5kZW4gUGFydGVpZW4gc29sbGVuIFN0YWR0cnRlIHN0ZWxsZW4sIGFsc28gc296dXNhZ2VuIGRpZSBCaWxkdW5nIGVpbmVyIGtvbW11bmFsZW4gQWxscGFydGVpZW5yZWdpZXJ1bmcuLiAKSSBzbG93ZWQgZG93biBzb21lIGFjdGlvbiBpbiB0aGUgVW5pb24uIFdlIHdvcmsgZXZlcnlkYXkgdG8gYmVjb21lIGxlc3MgYWJvdXQgdGhlIG1vbmV5IGFuZCBtb3JlIGFib3V0IGEgc2FmZSByZXB1dGFibGUgZXhwZXJpZW5jZSBhbmQgY2x1YiBmb3Igb3VyIHBsYXllcnMuIFdlIHJ1biBhYm91dCA0MCB0YWJsZXMgMjQvNy4gCk1hcmllIGZhbHRlcnMgZHVyaW5nIHRoZSBuZXh0IHdlZWsgYW5kIGEgaGFsZiwgdGhleSBjb3VsZCBqdW1wIGludG8gdGhpcmQuIApTa3JhdGljdXNNYXhpbXVzICAyIHBvaW50cyAgc3VibWl0dGVkIDEwIGRheXMgYWdvClRoZSB0aGlyZCB3YXMgd2hlbiBSeWFuIHdhcyBhcnJlc3RlZCBpbiBOZXcgSmVyc2V5LCBhbmQgdGhhdCB0aGUgcmVhbCBraWxsZXIgd2FzIGFjdHVhbGx5IGhpcyB3ZWlyZCwgcmVjbHVzaXZlIGJyb3RoZXIgY2FsbGVkIEFkYW0uIApFbmpveSBhIHdpZGUgcmFuZ2Ugb2YgZnJlZSBrbml0dGluZyBhbmQgY3JvY2hldCBwYXR0ZXJucyB0byBoZWxwIHlvdSAuIApIZSB3YXMgcGFpZCB2ZXJ5IGhhbmRzb21lbHkgYnkgRGVyaXBhc2thLlsxM10uIApFeGFtcGxlcyBvZiBoZWdlbW9uaWMgaWRlYXMgaW4gQW1lcmljYW4gY3VsdHVyZSBhcmUgdGhpbmdzIGxpa2UgImFueW9uZSBjYW4gbWFrZSBpdCBpZiB0aGV5IHdvcmsgaGFyZCIgb3IgInRoZSBsYXcgaXMgb2JqZWN0aXZlIiBvciAib2JqZWN0aXZpdHkgaXMgcG9zc2libGUuIiBCdXQgZXZlbiBoZWdlbW9uaWMgaWRlYXMgZ2V0IGJyb3VnaHQgaW50byBxdWVzdGlvbiBpbiB0aW1lcyBvZiBjcmlzaXMuIFBlcmhhcHMgdGhlIDE5NzBzIGFuZCA4MHMgd2VyZSB0aGF0IGNyaXNpcy4gCkkgbm90IHNheWluZyBhbmtpIGlzbiBhbWF6aW5nLCBiZWNhdXNlIGl0IGFic29sdXRlbHkgaXMsIGJ1dCB0aGUgYXBwIGlzIGxhY2tpbmcgbWFueSBiYXNpYyBmdW5jdGlvbnMuIApEdWRlLCBpdCB3YXMgYSBmdWxsIGJsb29kIG1vb24gaGFuZ2luZyBvdmVyIHRoZSBvY2VhbiBhbmQgaXQganVzdCBtYWRlIGl0IHNlZW0gbGlrZSB3ZSB3ZXJlIG9uIGFub3RoZXIgcGxhbmV0LCBpdCB3YXMgYmVhdXRpZnVsLiBJbiB0aGUgZGlzdGFuY2UgdGhlIHBpZXIgbGl0IHVwIHdpdGggcm9sbGVyIGNvYXN0ZXJzIGFuZCBmaXJld29ya3MsIHNlYWd1bGxzIHdlcmUgZmx5aW5nIG92ZXIgdGhlIGFyZWEgYmVjYXVzZSBvZiB0aGUgZm9vZCBkb3duIGJlbG93LiBJdCB3YXMgdGhlIGhpZ2hsaWdodCBvZiB0aGUgc3VtbWVyLCBJIHRoaW5rIEkgbWlnaHQgbWFrZSBpdCBhbiBhbm51YWwgdGhpbmcuLiAKSSd2ZSB3b3JrZWQgaW4gYSBwcmlzb24gYW5kIGFzIGEgcHJvYmF0aW9uIGFuZCBwYXJvbGUgb2ZmaWNlci4gSGFkIHRoZSBvcHBvcnR1bml0eSB0byBzZWUgcmVhbCBnYW5nIG1lbWJlcnMgdGhhdCB3aWxsIGZpZ2h0IGF0IHRoZSBkcm9wIG9mIGEgaGF0IGJlY2F1c2Ugc29tZW9uZSBkaXNyZXNwZWN0ZWQgdGhlaXIgY29sb3JzIG9yIHRoZWlyIHNldC4gCldoZW4gZ2x1aW5nIHRoZSB0d2lncywgSSBwdXQgYSBkZWNlbnQgYW1vdW50IG9mIHBvZGdlIHdoZXJlIEkgd2FudGVkIHRvIHBsYWNlIGl0LCBhbmQgdGhlbiBJIHB1dCBwb2RnZSBvbiB0aGUgdHdpZyBhbHNvLiAKSSdtIGN1cnJlbnRseSBhdCB3b3JrLCBpbiB0aGUgYmF0aHJvb20sIGZlZWxpbmcgc2ljay4gClRoYXQgd291bGQgbG92ZSB0byBwbGF5IFBldGVyIENvb2sgYXQgYWxsIHNoZSdzIG5vdCBtdWNoIG9mIGEgZ2FtYmxlciBzaGUgd2FnZXJzIHRoaXMgQ2l0eSBDb3VuY2lsLiBNaWdodCBqdXN0IGhhdmUgYSBjaGFuZ2Ugb2YgaGVhcnQgSSByZWFsbHkgcHJldHR5IGN1dGUgYmVjYXVzZSBJIHdhcyBhdCB0aGUgY291bmNpbCBpcyBiZWluZyB5b3VuZ2VyICAgZG9uJ3QgZWxkZXJzIHRvZGF5Li4gCkhlIGNvdWxkIGFjdHVhbGx5IHJpZGUgYSBiaWtlIGZvciBhIGxvbmcgdGltZSB3aXRoIHBlcmZlY3QgYmFsYW5jZSwgZXZlbiB3aGVuIGhlIGhhZCB0byB1c2UgYSBjYW5lIHRvIHdhbGsuIDUgMTAgeWVhcnMgYWdvLCBoZSBoYWQgdG8gc3RvcCBiZWNhdXNlIGhlIHN0YXJ0ZWQgdG8gZmFsbCBhIGxvdCAoYW5kIHNjYXJlIHRoZSBzaGl0IG91dCBvZiBteSBtb3RoZXIpLCBidXQgaGUgZGlzY292ZXJlZCBDYXRyaWtlIHNob3J0bHkgdGhlcmVhZnRlci5Tb21ldGhpbmcgYWJvdXQgdGhlIG1vdGlvbiBvZiB0aGUgbGVncyB3aGVuIGN5Y2xpbmcgaXMgZWFzaWVyIGZvciBQRCBwYXRpZW50cyB0byBkbywgYW5kIGl0IGdlbmVyYWxseSByZWNvZ25pemVkIHRoYXQgZXhlcmNpc2UgYW5kIG1vdmVtZW50IGhlbHBzIGFsbGV2aWF0ZSBzeW1wdG9tcyBpbiB0aGUgc2hvcnQgdGVybS4gCjM5NiBwb2ludHMgIHN1Ym1pdHRlZCAzIGRheXMgYWdvLiAKQm90aCBwb2tlciBhbmQgdHJhZGluZyBjYW4gYmUgY29uc2lkZXJlZCBmaW5hbmNpYWwgR2FtZXMgd2hlcmUgaW5zaWdodHMgaW50byBodW1hbiBuYXR1cmUgYXJlIGNydWNpYWwsIGFuZCBlc3BlY2lhbGx5IGluc2lnaHQgaW50byBvdXIgb3duIGVtb3Rpb25zLiBUaGUgZ29vZCB0cmFkZXIvcGxheWVyIGtub3dzIHdoZW4gdG8gcHVzaCBoYXJkLCBhbmQgd2hlbiBpdCB0aW1lIHRvIHJldHJlYXQuIApFc3RhYmxpc2hpbmcgYSByZXB1dGF0aW9uIGFzIGEgd2lubmVyIGNhbiBpbnRpbWlkYXRlIHJpdmFsIHBsYXllcnMsIGdldCB5b3UgaW50byBoaWdoIHN0YWtlcyBjbG9zZWQgZ2FtZXMsIGFuZCBoZWxwIHlvdSBuZXR3b3JrIHdpdGggcHJvZmVzc2lvbmFsIG9yZ2FuaXphdGlvbnMuCldoYXQgSSBtZWFuIGlzOiBNb3ZpZXMgYXJlIGluIHRoZWF0ZXJzIGZvciBhIGZldyBtb250aHMsIGFuZCBtb3N0IGxpdmUgb3V0IHRoZSByZXN0IG9mIHRoZWlyIGV4aXN0ZW5jZSBhcyBob21lIG1lZGlhLiAKV09XIVJlc2VhcmNoZXJzIGF0IHRoZSBBREhEIFJlc2VhcmNoIENlbnRyZSBpbiBFaW5kaG92ZW4sIHRoZSBOZXRoZXJsYW5kcywgZGl2aWRlZCAxMDAga2lkcyB3aXRoIEFESEQgKGFnZXMgNCB0byA4ICkgaW50byB0d28gZ3JvdXBzLk9uZSBncm91cCBhdGUgYSBoZWFsdGh5IGRpZXQgZm9yIDUgd2Vla3Mgd2hpbGUgdGhlIG90aGVyIGdyb3VwIGF0ZSB0aGUgUmVzdHJpY3RlZCBFbGltaW5hdGlvbiBEaWV0LlRoZSBSRUQgZGlldCBkb2VzIG5vdCBhbGxvdyBmb3IgcHJvY2Vzc2VkIGZvb2RzLiBJdCBtYWlubHkgY29uc2lzdHMgb2Ygd2hvbGUgZm9vZHMgaW5jbHVkaW5nIG1lYXQsIHZlZ2V0YWJsZXMsIGZydWl0LCB3YXRlciBhbmQgcmljZS4gClNoZXJpZmYgVmFuIER1bmNhbiByZXBsYWNlZCBNZWRmb3JkIGFuZCBzYXlzIHRoZSBidXNpbmVzcyBvZiBpbGxlZ2FsIGdhbWJsaW5nIGRvZXNuIGRpc2NyaW1pbmF0ZSwgInNvbWUgbGF3IGVuZm9yY2VtZW50IG9mZmljaWFscyBhbmQgZ292ZXJubWVudCBvZmZpY2lhbHMgYmVpbmcgc3Vja2VkIGludG8gdGhhdCBiZWNhdXNlIG9mIHRoZSBtb25leSBhbmQgdGhlIGx1Y3JhdGl2ZSBuYXR1cmUgb2YgdmlkZW8gZ2FtaW5nLiIKT3JnYW5pemVycyBzb2Z0ZW5lZCB0d28gb2YgdGhlIGN1cnZlcyBwaWxvdHMgbmVnb3RpYXRlIGFmdGVyIGNyYXNoZXMgaW50byBuZWFyYnkgbmVpZ2hib3Job29kcyBpbiAxOTk4IGFuZCB0aGUgb25lIGluIDE5OTkuIEluIDIwMDcgYW5kIDIwMDgsIGZvdXIgcGlsb3RzIHdlcmUga2lsbGVkIGF0IHRoZSByYWNlcywgcHJvbXB0aW5nIGxvY2FsIHNjaG9vbCBvZmZpY2lhbHMgdG8gY29uc2lkZXIgYmFycmluZyBzdHVkZW50IGZpZWxkIHRyaXBzIHRvIHRoZSBldmVudC4KVGhpcyBpcyBmdWNraW5nIGhpbGFyaW91cyB0byBtZS4gU28gdGhlIE1BSU4gdGhpbmcgdGhhdCBBTEwgb2dyYW5pc21zIG9uIHRoaXMgYW5kIGFueSBvdGhlciBwbGFuZXQgYXJlIHN1cHBvc2VkIHRvIGRvLCB3aGljaCBpcyByZXByb2R1Y3Rpb24sIGlzIHNvbWVob3cgImJhZCIgb3IgInVubmVjZXNzYXJ5IiB0byB5b3UgcGVvcGxlPyBMaXRlcmFsbHkgdGhlIG9ubHkgcmVhc29uIHlvdSBhbGl2ZSByaWdodCBub3cgaXMgYmVjYXVzZSBnZW5lcmF0aW9ucyBvZiB5b3VyIGFuY2VzdG9ycyBkaWQgdGhhdCAibW9zdCBiYXNpYyIgdGhpbmcuIEFuZCB5b3UgcmlnaHQsIGl0IGlzIGJhc2ljLiBJdCBpcyB0aGUgbWFpbiBpbnN0aW5jdCBvZiBhbnkgb3JnYW5pc20gb24gRWFydGgsIHRoZSBvbmx5IHRoaW5nIHRoYXQgZHJpdmVzIHRoZSBsaWZlIGl0c2VsZiBmb3J3YXJkLgpNeSBzaXN0ZXJzIGJlc3QgZnJpZW5kIG1hcnJpZWQgQ2hyaXMgUXVpbm4gd2hpbGUgaGUgd2FzIHBsYXlpbmcgZm9yIHRoZSBNaWFtaSBIZWF0LiBUaGUgYWZ0ZXIgd2VkZGluZyByZWNlcHRpb24gYmFyIHRyaXAgd2FzIHJpZGljdWxvdXMuIApUaGUgdmFyaW91cyBPc2NhciB3aW5uZXJzICAgSmVubmlmZXIgQ29ubmVsbHksIENocmlzdG9waCBXYWx0eiwgTWFoZXJzaGFsYSBBbGkgICBkbyB3aGF0J3MgZXhwZWN0ZWQgb2YgdGhlbSBpbiBhIHByb2R1Y3Rpb24gbW9yZSBpbnRlcmVzdGVkIGluIHRlY2huaWNhbCBhY2NvbXBsaXNobWVudHMgdGhhbiBncmVhdCBwZXJmb3JtYW5jZXMuLiAKV2Ugb2ZmZXIgYSAyNCBob3VyIGJhciB3aXRoIGFsbCB5b3VyIGJldmVyYWdlIG5lZWRzLiAKVG9kYXkgb3ZlcmNvbnN1bXB0aW9uIG9mIGRpZXRzIHJpY2ggaW4gc3VnYXJzIGNvbnRyaWJ1dGVzIHRvZ2V0aGVyIHdpdGggb3RoZXIgZmFjdG9ycyB0byBkcml2ZSB0aGUgY3VycmVudCBvYmVzaXR5IGVwaWRlbWljLgpXaHkgZ3JpZGxvY2sgaW4gV2FzaGluZ3RvbgpPaCB5ZXMgSSBoYXZlIGdhcyBidWJibGVzIGFsbCB0aGUgdGltZSB0aGF0IEkgY2FuIGZlZWwgZ28gdXAgYW5kIGp1c3QgZGlzYXBwZWFyLiBOb3Qgc3VyZSB3aGV0aGVyIGl0IGFueGlldHkgb3Igbm90LCBidXQgSSBjYW4gdGVsbCB5b3UgSSBzdGFydGVkIHRha2luZyBjeW1iYWx0YSBhIGZldyBtb250aHMgYmFjayBhbG9uZyB3aXRoIENCRCBvaWwgYW5kIGl0IGRvbmUgd29uZGVycyBmb3IgbXkgbWVudGFsIGhlYWx0aCBhbmQgSSBhY3R1YWxseSBub3RpY2VkIGxlc3MgaGVhcnRidXJuIGFuZCBHRVJEIHN5bXB0b21zIGluIGdlbmVyYWwuIE15IGdhc3RybyBFTlQgZGVmaW5pdGVseSBzYWlkIHRoYXQgdGhlIGJpIHByb2R1Y3RzIG9mIGFueGlldHkgKHRlbnNlIG11c2NsZXMsIGxlc3MgY29udHJvbGxlZCBicmVhdGhpbmcsIGV0Yy4pIGRlZmluaXRlbHkgd2lsbCBhZ2dyYXZhdGUgYW5kIGV4YWNlcmJhdGUgbXkgc3ltcHRvbXMuClRoZSBiYWxsIGlzIGluIHlvdXIgY291cnQuIApJdCBhbGwgY29tZXMgZG93biB0byB0aGUgcXVhbGl0eSBvZiB0aGUgcGl0Y2hlcyBhbmQgdGhlIHVuZGVybHlpbmcgYnVzaW5lc3NlcyBhbmQgZXZlbiB0aGVuIGl0IGNhbiB0YWtlIHllYXJzIHRvIG1ha2UgbW9uZXkgeW91IHNlZWtpbmcgZnVuZGluZywgeW91IGhhdmUgdG8gbWFrZSBzdXJlIHlvdSBoYXZlIGFsbCB0aGUgcGllY2VzIGluIHBsYWNlIHRvIG1ha2UgaXQgdGhyb3VnaCBkdWUgZGlsaWdlbmNlLiAKSSByYXJlbHkgZ290IHRvIHNlZSB0aGUgY3JlYXR1cmVzIHRoYXQgaW5oYWJpdGVkIHRob3NlIGZhbWlsaWFyIHNoZWxscyBpbiB0aGUgZmxlc2gsIHNvIHRoaXMgd2FzIGEgY29vbCBpbnNpZ2h0Li4gClRoZSBNZXJjZXIgUmVwb3J0IGlzIHNpZ25pZmljYW50IGluIHRoYXQgd2UgaGF2ZSB0d28gaGlnaGx5IHJlc3BlY3RlZCBtZWRpY2FsIHJlc2VhcmNoZXJzIGNvbmNsdWRpbmcgdGhhdCBzZWVpbmcgYSBDaGlyb3ByYWN0b3IgZm9yIGJhY2sgcGFpbiBpcyBub3Qgb25seSB0aGUgbW9zdCBlZmZlY3RpdmUgdHJlYXRtZW50LCBidXQgcHJvYmFibHkgbGVzcyBjb3N0bHkgdGhhbiBvdGhlciBmb3JtcyBvZiB0cmVhdG1lbnQuClNob3V0aW5nIGRvd24gcGVvcGxlIHdobyBkb24gdW5kZXJzdGFuZCBhbGwgdGhlIGRhdGEgb24gdmFjY2luZXMgdGhhdCB3ZSBzaG91bGQganVzdCB0cnVzdCBiaWcgcGhhcm1hIG90aGVyd2lzZSB5b3UgYSBiYWJ5IGtpbGxlciBpcyBhIGZ1Y2tpbmcgZGlzZ3VzdGluZyB0YWN0aWMuIApJdCB0aGUgInBhc3NpbmcgbGFuZSIuIFBhc3MgdGhlIGNhciB0aGVuIGdldCBiYWNrIG92ZXIgZXZlbiBpZiB5b3UgZ29pbmcgKzEwIG92ZXIgdGhlIHNwZWVkIGxpbWl0LiAKRmFsbHMgTWFuYWdlbWVudCBDb21wYW55IGlzIGEgY29uc29ydGl1bSBvZiBmaXZlIGZpcm1zLCBzZWxlY3RlZCBieSB0aGUgT250YXJpbyBMb3R0ZXJ5IGFuZCBHYW1pbmcgQ29ycG9yYXRpb24gdG8gb3BlcmF0ZSBDYXNpbm8gTmlhZ2FyYSBhbmQgdG8gZmluYW5jZSwgZGVzaWduLCBidWlsZCBhbmQgb3BlcmF0ZSBGYWxsc3ZpZXcgQ2FzaW5vIFJlc29ydC4gCklmIHlvdSBhcmUgc2VsZWN0ZWQgZm9yIGF1ZGl0LCB5b3UgZmluZCBvdXQgaW5zdGFudGx5IHVwb24gc3VibWl0dGluZyB5b3VyIGFwcGxpY2F0aW9uLiBBdWRpdHMgYXJlIHBlcmZvcm1lZCBhdCByYW5kb20uCkFuZCBhcyBmb3IgZmVlZGluZyB5b3VyIGd1ZXN0cywgYmUgc3VyZSBhbmQgY2hvb3NlIGZpbmdlciBmb29kIHRoYXQncyBub3QgdG9vIGdyZWFzeSBhbmQgaXMgZWFzeSB0byBlYXQgd2hpbGUgcGxheWluZyB0aGUgZ2FtZXMgb24gdGhlIGZsb29yLi4gCkFzIGZvciBvdGhlciBvcHRpb25zLCB0aGUgc3VyZmFjZSBib29rIHNlZW1zIG5pY2UgYWx0aG91Z2ggSSBwcmVmZXIgdGhlIDM2MCBoaW5nZSBvZiBtb3N0IGNvbnZlcnRpYmxlcyBvdmVyIHRoZSBkZXRhY2hhYmxlIHNjcmVlbi4gSSBndWVzcyBpdCBtaWdodCBiZSBtb3JlIGZhdm9yYWJsZSBpZiB5b3Ugd2FudCB0byB1c2UgaXQgYXMgYW4gYWN0dWFsIHRhYmxldC4gSWRrIGFib3V0IGFueSBpc3N1ZXMgd2l0aCBpdCB0aG91Z2guIApUaGVyZSBpcyBhbiBvcmdhbml6YXRpb24gY2FsbGVkIGVDT0dSQSAoZUNvbW1lcmNlIGFuZCBPbmxpbmUgR2FtaW5nIFJlZ3VsYXRpb24gYW5kIEFzc3VyYW5jZSkgdGhhdCBwcm92aWRlcyBwYXJ0aWNpcGF0aW5nIGNhc2lub3Mgd2l0aCBhIHNldCBvZiBwbGF5ZXIgc2Vuc2l0aXZlIHJlZ3VsYXRpb25zIHRoYXQgYXJlIGNoZWNrZWQgYnkgaW5kZXBlbmRlbnQgaW5zcGVjdGlvbiBhbmQgZW5mb3JjZWQgYnkgb25nb2luZyBtb25pdG9yaW5nLiBIb3cgZG8gSSBrbm93PyBCZWNhdXNlIEkgaGF2ZSBwZXJzb25hbCBleHBlcmllbmNlIHdvcmtpbmcgZm9yIGEgY29uc3VsdGluZyBjb21wYW55IGFzIGEgc29mdHdhcmUgZGV2ZWxvcGVyLiBPbmUgb2YgdGhlaXIgY29udHJhY3QgcHJvamVjdHMgd2FzIGhlbHBpbmcgdG8gYnVpbGQgYW4gImFzc2lzdGFuY2Ugc3lzdGVtIiB0byBjaGVhdCBvbmxpbmUgcG9rZXIgZ2FtZXMuCkJvdGggY2VydGlmaWNhdGlvbnMgcmVxdWlyZSBvbmdvaW5nIGVkdWNhdGlvbiBjcmVkaXRzIHRvIHJldGFpbiBvciByZW5ldyBjZXJ0aWZpY2F0ZXMuLiAKUGxlYXNlIGRvbiBsZXQgdGhhdCBzdG9wIHlvdSEgTXkgY3VycmVudCBncm91cCBpcyBtaXhlZCBoYWxmIGV4cGVyaWVuY2VkLCBoYWxmIGNvbXBsZXRlbHkgbmV3LCBhbmQgaGFzIHNvIGZhciBiZWVuIG9uZSBvZiB0aGUgZnVubmllc3QgYW5kIGV4Y2l0aW5nIHNlc3Npb25zIEkgcGxheWVkLiBTdXJlIHlvdSBtaWdodCBub3QgYWx3YXlzIG1ha2UgdGhlIHJpZ2h0IGRlY2lzaW9ucyBidXQgeW91IGRvbnQgaW4gbGlmZSBlaXRoZXIgYW5kIGhhbGYgdGhlIGZ1biBpcyBmaXhpbmcgeW91ciBjaGFyYWN0ZXJzIG1pc3Rha2VzIGJlY2F1c2UgaXQgZ2l2ZXMgaXQgYSBtb3JlIHJlYWxpc3RpYyBmZWVsaW5nIHdpdGggYWN0dWFsIGNvbnNlcXVlbmNlcy4uIApJIGxpa2UgYSB2ZXJ5IGZsYXQgZmluZ2VyLCBOTyBob29rZWQgcG9zaXRpb24gd2l0aCB0aGUgZmluZ2VyIGxpa2UgeW91IGRpZ2dpbmcgYXQgaXQsIEkganVtcCBvdXQgb2YgdGhlIGJlZCBpbiBkaXNjb21mb3J0LiBJIGxpa2UgaXQgZmxhdCBhbmQgZ2VudGxlLiAKSSdtIG5vdCBzdXJlIGlmIGl0IHdhcyB0aGUgc2VsbGVycyB0aGVtc2VsdmVzIGJlaW5nIGEgcGFpbiBvciB0aGVpciBhZ2VudC4gQnV0IHdlIGRpZCBldmVyeXRoaW5nIHF1aWNrbHkgYW5kIGhhZCBubyBpc3N1ZXMgZnJvbSB0aGUgaW5zcGVjdGlvbiBmb3IgdGhlbSB0byBmaXguIFdoZW4gaXQgY2FtZSB0aW1lIGZvciB0aGUgYXBwcmFpc2FsLCBpdCBlbmRlZCB1cCBjb21pbmcgaW4gMTBrIHVuZGVyIG91ciBvZmZlciBwcmljZS4gCkl0IGNhbiBiZSBhIGxvbmcsIHRvdWdoIHNsb2cgYW5kIHlvdSBtaWdodCBmZWVsIHRoYXQgb3RoZXIgcGVvcGxlIGFyZSBiZXR0ZXIgdGhhbiB5b3UsIGJ1dCBiZWxpZXZlIG1lLCByZXRpcmluZyBpbiB5b3VyIDQwIGFuZCBsZWF2aW5nIHlvdXIgcGVlcnMgd2l0aCBhbm90aGVyIDIwKyB5ZWFycyBvZiB3b3JrIG1ha2VzIHVwIGZvciBhbGwgdGhlIHllYXJzIG9mIG5vc2UgdG8gdGhlIGdyaW5kc3RvbmUgZGlzY2lwbGluZS4KV2hhdCBtYWtlcyBpdCBjb3VudCBhcyBEIGFydD8gRG9lcyBpdCBoYXZlIHRvIGhhdmUgc29tZXRoaW5nIGV4Y2x1c2l2ZSB0byBEIGxpa2UgYSBiZWhvbGRlcj8gRG9lcyBpdCBoYXZlIHRvIGhhdmUgdGhlIHBocmFzZSwgInRoaXMgaXMgZnJvbSBteSBEIGNhbXBhaWduIiBpbiB0aGUgZGVzY3JpcHRpb24/IFdoYXQgaWYgaXQgZnJvbSBhIGdhbWUgdGhhdCB1c2VzIEQgcnVsZXMgYnV0IGluIGEgY3VzdG9tIHNldHRpbmc/LiAKU29uaWEgaW1wbGVtZW50IGEgaG9saXN0aWMgYXBwcm9hY2ggdG8gaGVhbHRoIGFuZCB3ZWxsIGJlaW5nLiBTaGUgZW5qb3lzIGFuZCB3b3JrcyBwYXNzaW9uYXRlbHkgdG8gc2hhcmUgYW5kIHByb21vdGUgZ29vZCBoZWFsdGggZm9yIHRoZSBwZXJzb24gYXMgYSB3aG9sZS4gU29uaWEgYWltcyB0byBvZmZlciB5b3U6VGhlIHRlY2huaXF1ZXMgdXNlZCBtYXkgaW52b2x2ZTpSZWxlYXNlIG9mIHRlbnNpb24gdHJpZ2dlciBwb2ludHNOdXRyaXRpb24gYmFzZWQgQXl1cnZlZGljIHN5c3RlbSBvZiBoZWFsdGhIZWxlbiBpcyBhIGNvbXBsZW1lbnRhcnkgaGVhbHRoY2FyZSBwcmFjdGl0aW9uZXIgd2l0aCBvdmVyIDEwIHllYXJzIGV4cGVyaWVuY2UgaW4gaGVhbHRoY2FyZSBhbmQgd2VsbGJlaW5nLCB3b3JraW5nIGluIE5IUyBhbmQgY29tcGxlbWVudGFyeSBoZWFsdGggc2V0dGluZ3MuIApBcyBoZSBzYXcgdXMgaGVhZGluZyB0b3dhcmRzIHRoZSBmb3Jlc3QgcGF0aCwgaGUgZHJvcHBlZCBhbGwgaGlzIGZpc2hpbmcgZ2VhciBhbmQgcmFuIHVwIHRoZSBoaWxsLCB5ZWxsaW5nIGZvciB1cyB0byBzdG9wLi4gCktlbGx5IllvdSBldmVyIGJlZW4gaW4gamFpbCwgR2F5bGU/IiBSLiBLZWxseSBvbiByZWNlbnQgcG9zdCBiYWlsIE1jRG9uYWxkJ3MgcnVuTW90aGVyIG9mIFIuIEtlbGx5IGV4IGdpcmxmcmllbmQgc2F5cyBoZXIgZGF1Z2h0ZXIgd2FzIGJlYXRlblIuIEtlbGx5ICJuZWVkcyB0byByb3QgaW4gamFpbCwiIHNheSBwYXJlbnRzIG9mIHdvbWFuIHdobyBsaXZlcyB3aXRoIHNpbmdlckdheWxlIEtpbmcgcmV2ZWFscyBuZXcgdmlkZW8gZnJvbSBSLiBLZWxseSBpbnRlcnZpZXdXb21hbiBsaXZpbmcgd2l0aCBSLiBLZWxseSBzYXlzIGRhZCB1cmdlZCBoZXIgdG8gInRha2Ugc2V4dWFsIHZpZGVvcyIiSXQgdGVycmlmaWVkIG1lLCIgc2F5IFIuIApDSUJDIHNhaWQgaXRzIHJlc3VsdHMgd2VyZSBhZmZlY3RlZCBieSBhIGZldyBpdGVtcywgc3VjaCBhcyAkMjI3IG1pbGxpb24gdG8gc2VjdXJlIGl0cyBwbGFjZSBpbiBBaXIgQ2FuYWRhIG5ldyBsb3lhbHR5IHByb2dyYW0uIApUaGUgYmlnIHByb2JsZW0gdGhlcmUgaXMgdGhhdCB2YXBlIHNob3BzIGFyZSBnZW5lcmFsbHkgbm90IHRoZSBvbmVzIHNlbGxpbmcgdW5kZXJhZ2VkIHVzZXJzIHRoZSBwcm9kdWN0cy4gWW91IGNhbiBmaW5kIEp1dWxzIGluIGdhcyBzdGF0aW9ucywgNyAxMSdzLCBhbmQgbWFueSBjaGFpbnMgYWNyb3NzIHRoZSBjb3VudHJ5LiBJZiB5b3UgZ28gaW4gdG8gYSB2YXBlIHNob3AgdGhlIGVtcGxveWVlcyBhbG1vc3QgYWx3YXlzIGFjdHVhbGx5IGNhcmUgYWJvdXQgdGhlIGluZHVzdHJ5LCBhbmQgd2lzaCB0byBwcm90ZWN0IGl0LCBtZWFuaW5nIHRoYXQgdGhleSByZWxpZ2lvdXNseSBJRCwgYXMgd2FzIHRoZSBjYXNlIGluIHRoZSBzaG9wIEkgd29ya2VkIGZvciwgYW5kIGFsbCBvdGhlcnMgSSBoYXZlIGJlZW4gdG8gaW4gbXkgYXJlYS4gSG93ZXZlciwgYXMgd2FzIHRoZSBjYXNlIHdoZW4gSSB3YXMgMTQgYW5kIGJvdWdodCBteSBmaXJzdCBwYWNrLCBzb21lIHJhbmRvbSBndXkgYXQgdGhlIGdhcyBzdGF0aW9uIHdobyBqdXN0IHdhbnRzIHRvIGVhcm4gZW5vdWdoIGZvciByZW50IGFuZCBhIHNpeCBwYWNrIGRvZXNuJ3QgcmVhbGx5IGdpdmUgYSBzaGl0LCBhbmQgaXMgd2lsbGluZyB0byBqdXN0IGtpbmRhIGxvb2sgdGhlIG90aGVyIHdheSBmb3IgYSBzYWxlLiBUaGUgc2Vjb25kIGhhbGYgb2YgdGhpcyBwcm9ibGVtIHdhcyB0aGUgaW1tZW5zZSBhbW91bnQgdGhhdCB3YXMgYmVpbmcgYm91Z2h0IG9ubGluZSBieSB1bmRlcmFnZWQgdXNlcnMgd2l0aCBhIGNyZWRpdCBjYXIgbW9tbXkgYW5kIGRhZGR5IGdhdmUgdGhlbSwgYW5kIHRoZW4gdGhleSBpZ25vcmVkIHRoZSBiaWxsIGZvci4gKEkgc2hvdWxkIG5vdGUgdGhhdCB0aGlzIHByb2JsZW0gaGFzIGZvciB0aGUgbW9zdCBwYXJ0IGRpZWQgZG93biwgYXMgZXZlcnkgcmVhbCB3ZWJzaXRlIGZvciB2YXBlcyBpbiB0aGUgVVMgbm93IHJlcXVpcmVzIGFnZSB2ZXJpZmljYXRpb24gb2Ygc29tZSBmb3IgZnVydGhlciB0aGFuICJoZXkgd2hlbiB3ZXJlIHlvdSBib3JuLCBlbnRlciB0aGUgZGF0ZSBoZXJlIikgQmFzaWNhbGx5IHNoaXR0eSBwYXJlbnRzIHdlcmUganVzdCBnaXZpbmcgdGhlaXIga2lkcyBhIGNhcmQsIGxldHRpbmcgdGhlbSBkbyB3aGF0ZXZlciB0aGV5IHdhbnRlZCwgYW5kIHRoZW4gd2hlbiB0aGV5IGhhZCBwYXllZCBubyBhdHRlbnRpb24gZm9yIG1vbnRocyBvciB5ZWFycyBhbmQgZm91bmQgYSB2YXBlIGluIHRoZWlyIGtpZHMgcm9vbXMgdGhleSBnb3QgbWFkIHRoYXQgdGhlIHJlc3Qgb2YgdGhlIHdvcmxkIHdhc24ndCB3YXRjaGluZyB0aGVpciBraWQgZm9yIHRoZW0uCkFmdGVyIHRoZSBTZWNvbmQgV29ybGQgV2FyIGJvbWIgZGFtYWdlZCBidWlsZGluZ3Mgd2VyZSBzY3J1dGluaXNlZC4gCk15IGFwcHJvYWNoIGhhcyBzaGlmdGVkIGFuZCBzbyBoYXMgaGlzLiBJIGFtIGN1cnJlbnRseSA3IGRheXMgb3V0IGZyb20gbXkgcGVyaW9kIGFuZCBhbSBub3QgZmVlbGluZyBhcyBjbG9zZSBhcyBJIHdvdWxkIGxpa2UgdG8gaGltLCBidXQgSSBhbSBub3QgbG9zaW5nIG15IG1pbmQuIApJIHRoaW5rIHRoYXQgbW9zdCBwZW9wbGUgdGhhdCBjbGFpbSB0byBiZSAid29rZSIgb3Iga25vd2xlZGdlYWJsZSBhcmVudCBvdXQgaGVyZSB3YXRjaGluZyBhbG1vc3QgNSBob3VyIGxvbmcgdmlkZW9zLiAKVGhpcyBpcyBhIGJpdCBvZiB3b3JrIGZvciBldmVyeSBqYWNrIG8gbGFudGVybiB5b3UgbWFrZSwgc28gdHJ5IG5vdCB0byBjYXJ2ZSB5b3VyIGphY2sgbyBsYW50ZXJucyB0b28gZWFybHkgZnJvbSB3aGVuIHlvdSdsbCBiZSB1c2luZyB0aGVtLi4gCkdvbm5hTnV0SW5Zb3VyQnV0dCAgMTQgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KVGhpcyBpcyBhIHZpZXcgc3VwcG9ydGVkIGJ5IHRoZSBsZWFkZXJzIG9mIGNpdmlsIHJpZ2h0cyBtb3ZlbWVudHMgYW5kIG1pbm9yaXR5IGFuZCBibGFjayByaWdodHMgbW92ZW1lbnRzLCBib3RoIHBhc3QgYW5kIHByZXNlbnQuIApQb2tlciBoYXMgYmVjb21lIGZhbW91cyBvbmx5IGluIHRoZSByZWNlbnQgZmV3IHllYXJzIGFuZCBhbnlvbmUganVzdCBjYW4ndCB0aGluayBhYm91dCBhIHJhbmRvbSBicmFuZCBmb3IgbmFtaW5nIGhpcyBmYW1lIGluIHRoZSB3b3JsZCBvZiBwb2tlci4gSGUgaGFzIGFsc28gdGhlIHdheSBvZiBtYWtpbmcgaGlzIHByb2R1Y3RzIGZhbW91cyBieSBoaXMgYXR0aXR1ZGUgYW5kIHBsYXlpbmcgc3R5bGUuIFNvIHRoZSBwb2tlciBsZWFkZXJzIGFyb3VuZCBhcmUgbG9va2luZyBmb3IgcHJvZHVjdHMgbGlrZSBJbSBhIEx1Y2tTYWNrIE1lZGFsbGlvbiBQb2tlciBDYXJkIFByb3RlY3Rvci4gCkRyYWdvbnMnIERlbiBpcyBiYWNrIGFuZCBzbyBhcmUgd2UuIEVhY2ggd2VlaywgRmluYW5jaWFsIFBvc3QgY29udHJpYnV0b3IgTWFyeSBUZXJlc2EgQml0dGkgcmV2aXNpdHMgQ0JDJ3MgcHJldmlvdXMgd2VlaydzIGVwaXNvZGUuIApJZiB2aWxsYWluIGhhcyBLSyBvciBBQSBoZSBpcyBwcm9iYWJseSBub3QgZm9sZGluZyBoZXJlIG9uIHRoZSB0dXJuIGVzcGVjaWFsbHkgaWYgaGUgaXMgYSBsb29zZSBwbGF5ZXIgc28gSSB3b3VsZCBiZXQgZnVsbCBwb3QuIE9idmlvdXNseSBoZSBjb3VsZCBoYXZlIHNvbWV0aGluZyBsaWtlIDg4IHRoYXQgbWlnaHQgbm90IGJlIGFibGUgdG8gZmFkZSBwb3QgcG90IGJ1dCBzdGlsbCB0aGUgZ2VuZXJhbCBwcmluY2lwbGUgYXBwbGllcy4gCklsIGVzdCBwb3NzaWJsZSBkZSBjb25maWd1cmVyIHZvdHJlIG5hdmlnYXRldXIgcG91ciBlbXBjaGVyIGwndXRpbGlzYXRpb24gZXQgc3RvY2thZ2UgZGUgY29va2llcyBzdXIgdm90cmUgZGlzcG9zaXRpZiBldC9vdSBxdWUgbCdvbiB2b3VzIGRlbWFuZGUgIGNoYXF1ZSB2aXNpdGUgZCd1biBzaXRlIGQnYWN0aXZlciBsZXMgY29va2llcy4gVm91cyBwb3V2ZXogZ2FsZW1lbnQsICB0b3V0IG1vbWVudCwgc3VwcHJpbWVyIGxlcyBjb29raWVzIHF1aSBvbnQgdCByYWN0aXZzLiBDb25zdWx0ZXogbGEgcnVicmlxdWUgZCdhaWRlIGRlIHZvdHJlIG5hdmlnYXRldXIgcG91ciBzYXZvaXIgY29tbWVudCBmYWlyZS4KU28gd2Ugd2VyZSBib3RoIG5hcHBpbmcgKHJlYWxseSByZWFsbHkgZWFybHkgbW9ybmluZykgd2hpbGUgaG9sZGluZyBoYW5kcy4gVGhlbiBJIHdva2UgdXAgYW5kIHNhdyB0aGF0IGdheSBndXkgd2FzIGFsc28gbmFwcGluZyAob3IgcHJldGVuZGluZykgYW5kIGhpcyBoYW5kIHdhcyBvbiBteSBndXkgbGVnLiAKSWYgaXQgaXMgcGVyaW9yYWwgZGVybWF0aXRpcyAoaXQgbG9va3MgbGlrZSBpdCksIGp1c3QgYXZvaWRpbmcgU0xTIHRvb3RocGFzdGUgaXMgbm90IGVub3VnaHQuIFdoZW4gSSBoYWQgaXQsIEkgc3RvcHBlZCBhbnkgc2tpbmNhcmUgZXhjZXB0IGZvciBhIGJhc2ljIGJsYW5kIGZyYWdyYW5jZSBmcmVlIGVzc2VudGlhbCBvaWxzIGZyZWUgbW9pc3R1cml6ZXIgKEJpb2Rlcm1hIFNlbnNpYmlvIGxpZ2h0KS4gTm90IGV2ZW4gY2xlYW5zZXIsIGp1c3Qgcmluc2luZyB3aXRoIHdhdGVyLiAKSWYgeW91IGxpa2VkIGNsaW1iaW5nIG91dHNpZGUsIEkgc3VnZ2VzdCB0cnlpbmcgdG8gZm9jdXMgb24gdGhhdC4gWW91IGNhbiBsb29rIHVwIGVhc3kgcm91dGVzIG5lYXIgeW91LCBhbmQgZWFjaCByb3V0ZSBpcyBhbiBhY2NvbXBsaXNobWVudCBvZiB3aGF0IHlvdXIgYnJhaW4gYm9keSB0b2dldGhlciBjYW4gZG8uIApIZSByZW1lbWJlcnMgU29maWEgdml2aWRseSwgb2ggd2VsbCBEdW5jYW4gZG9lcy4gSGUgcmVtZW1iZXJzIGhlciBmYWNlIGZyb20gdGhlIG90aGVyIGxpZmUsIHVuZGVyIGFub3RoZXIgZm9yZWlnbiBuYW1lIGR1cmluZyBoaXMgdGltZSwgYW4gQXNzYXNzaW4gd2l0aCBkYXJrIGtvaGwgbGluZWQgd2l0aGluIGhlciBleWVzIHVuZGVyIGEgc2ltcGxlIGJyb3duIGhvb2QuIFNoZSBoYWQgdG9sZCBoaW0gdGhhdCBzaGUgd2FzIGhpcyBwcm90ZWN0b3IsIGJ1dCBpbiB0aGUgZW5kLCBzaGUgaGFkIGFiYW5kb25lZCBoaW0gbGlrZSBhbGwgdGhlIG90aGVycy4uIApFZGl0ZWQgdG8gYWRkOiBIb25lc3RseSwgSSByZWFsbHkgaWZmeSBhYm91dCBhIGN1cmUuIExpa2UgSSBnZXQgdGhhdCBzb21lIG1pZ2h0IHdhbnQgaXQsIGJ1dCB0aGF0IHNob3VsZCBiZSB0aGUgYXV0aXN0aWMgcGVyc29uIGFza2luZyBmb3IgaXQuIApJIHVzZSBteSByaWcgZXZlcnkgZGF5LCBhbmQgaGF2ZSBoYWQgaXQgZm9yIGxpa2UgOSBtb250aHMgbm93IG9yIHNvLiBFdmVyeSB0aW1lIEkgcG9wIGl0IG9wZW4gdG8gY2xlYW4sIGkgYW1hemVkIHRoZXJlIG5vIGxpbnQgb3IgZHVzdCBpbiB0aGVyZS4gClRoZSBsaW5rdXAgZG9lc24ndCBjYW5jZWwgYW55IHdvcmsgdGhlIGNvbXBhbmllcyBoYXZlIGdvaW5nIHdpdGggb3RoZXIgcGFydG5lcnMsIHN1Y2ggYXMgRGFpbWxlcidzIHBpbG90IHByb2dyYW0gd2l0aCB0ZWNobm9sb2d5IGFuZCBwYXJ0cyBzdXBwbGllciBCb3NjaCBvbiBzZWxmIGRyaXZpbmcgdmVoaWNsZXMgaW4gQ2FsaWZvcm5pYS4gQk1XIGlzIHdvcmtpbmcgb24gZGV2ZWxvcGluZyBhdXRvbm9tb3VzIGNhcnMgYXQgaXRzIGNhbXB1cyBpbiBVbnRlcnNjaGxpZXNzaGVpbSwgbm9ydGggb2YgaXRzIE11bmljaCBoZWFkcXVhcnRlcnMuIApEYWlseSBtb3JuaW5nIHNhZmV0eSBtZWV0aW5ncyBhbmQgZXZlcnkgc21hbGwgaW5zaWduaWZpY2FudCBvY2N1cnJlbmNlIHdhcyBkb2N1bWVudGVkIG9uIHBhcGVyLiAKSW4gZmFjdCwgc3dpbmdpbmcgbGVhZCBwaXBlcyBtaWdodCBoYXZlIGdlbmVyYXRlZCBtb3JlIHByb2ZpdGFibGUgcmVzdWx0cy4gQSBHaWFudHMgb2ZmZW5zZSB0aGF0IGp1c3QgaGl0IC4xMDYgaW4gZm91ciBnYW1lcyBhdCBXcmlnbGV5IEZpZWxkIHdhcyBoZWxkIHRvIHR3byBoaXRzLCB0aGUgY2x1YidzIGZld2VzdCBldmVyIGluIHRoZWlyIDE4NCBnYW1lcyBwbGF5ZWQgYXQgQ29vcnMgRmllbGQuCk5ldmVydGhlbGVzcywgcGVvcGxlIHNob3VsZCBiZSBhYmxlIHRvIG1ha2UgZ29vZCB1c2Ugb2YgdGhlaXIgcmVzb3VyY2VzIHNvIHRoYXQgdGhleSB3b3VsZCBub3QgZ28gYnJva2UgYWdhaW4uIEV2ZW4gaWYgdGhlcmUgaXMgbm8gcmVhbCBjYXNoIGludm9sdmVkLCB0aGUgcmV3YXJkcyBmb3IgdGhlIHdpbm5lciBpcyBzb21ldGhpbmcgcGxheWVycyBsb29rIGZvcndhcmQgdG8uIEZvciBleGFtcGxlLCBpZiB5b3UgcGxheSBpbiBhIHBhcnRpY3VsYXIgd2Vic2l0ZSBhbmQgd2luLCB0aGV5IG1heSBnaXZlIHlvdSBib251c2VzLCBnaWZ0IGNlcnRpZmljYXRlcyBvciBldmVuIFZJUCBwYXNzZXMgdG8gc29tZSBvZiB0aGUgcm9vbXMgdGhhdCB0aGUgc2l0ZSBoYXMuIApUaGUgQSBjb21lcyBvbiB0aGUgZmxvcCwgc2luY2UgY2hhcmxpZSBpcyBob2xkaW5nIHRoZSBvdGhlciBBLCB0aGVyZSBpcyBleGFjdGx5IDEgY2FzZSBjb21ibyBvZiBBQSBmcm9tIGhpcyBvcHBvbmVudC4gCkhvdyBkbyB5b3UgZ2V0IFp5bmdhIFRleGFzIGhvbGQKQnV0IE5ldidzIHN0b3J5IHJlYWxseSBzaG93Y2FzZXMgaG93IGZhciBsZWZ0IHRoaW5ncyBjYW4gZ28gYW5kIGhvdyBiZWZvcmUgeW91IGtub3cgeW91IGFyZSBiYXJpbmcgeW91ciB2ZXJ5IHNvdWwgdG8gYSBjb21wbGV0ZSBhbmQgdXR0ZXIgc3RyYW5nZXIgd2hvIHlvdSBmZWVsIGxpa2UgeW91IGtub3cgICBldmVuIGlmIHlvdSBmZWVsIGxpa2UgeW91IGRvLiAKRWluaWdlIFBmbGFuemVuIHplaWdlbiBhdWNoIGhpZXIgZGVuIHVucyB2ZXJ0cmF1dGVuIGphaHJlc3plaXRsaWNoZW4gV2FuZGVsLCBtYWNoZSBCdW1lIHZlcmZyYmVuIHNpY2ggaGVyYnN0bGljaCB1bmQgdmVybGllcmVuIGlociBMYXViLCBhbmRlcmUgc2NoZWluZW4gc2ljaCBzbyBhbiBkZW4gRnJobGluZyBnZXdobnQgenUgaGFiZW4sIGRhc3Mgc2llIGRhcyBnYW56ZSBKYWhyIGhpbmR1cmNoIGdybmVuLCBibGhlbiB1bmQgcmVpZmVuLiBHZXJhZGUgZXJsZWJlbiB3aXIgZWluIHBhYXIgYXVzZ2llYmlnZSBSZWdlbnRhZ2UgdW5kIGRhcyBGZWhsZW4gZGVyIGRpcmVrdGVuIFNvbm5lbmVpbnN0cmFobHVuZyBtYWNodCBzaWNoIGRldXRsaWNoIGJlbWVya2Jhci4gQmVzb25kZXJzIGluIGRlbiBHZWJ1ZGVuIGZlaGx0IGRpZSBqZXR6dCBkaWUgdGdsaWNoZSBTb25uZW5lbmVyZ2llIHVuZCBkaWUgUnVtZSBraGxlbiBhdXMuIApTdWdnZXN0IGlubmVyIHZvaWNlIG1vZGlmaWNhdGlvbi4gQXNrIHlvdXIgZnJpZW5kIHdoYXQgdGhlaXIgaW5uZXIgdm9pY2Ugc2F5cyB0byB0aGVtIGFib3V0IHRoZW1zZWx2ZXMuIFlvdSdsbCBsaWtlbHkgZmluZCB0aGF0IHRoZWlyIGlubmVyIHZvaWNlIGlzIGNvbnN0YW50bHkgbmVnYXRpdmUuWzddIFRyeSB0byB0ZWFjaCB0aGVtIHRvIGJlIG1vcmUga2luZCB0byB0aGVtc2VsdmVzIGJ5IHN0b3BwaW5nIHRoZSBuZWdhdGl2ZSBzZWxmIHRhbGsgYW5kIHR1cm5pbmcgaXQgYXJvdW5kIHRvIHNvbWV0aGluZyBwb3NpdGl2ZS4KWW91IGNhbiB0cmFjZSB5b3VyIGxvZ2ljIGJhY2sgb2YgIlggc2lkZSBhY3Rpb25zIHdlcmUgYSByZXNwb25zZSB0byBZIHNpZGUgYWN0aW9uIGJlZm9yZSB0aGF0IiBpbiBhIGN5Y2xpY2FsIGN5Y2xlIGdvaW5nIGJhY2sgdG8gYmVmb3JlIDE5NDguIFlvdSBjYW4gc2F5IHRoYXQgdGhlIFBhbGVzdGluaWFucyBlbGVjdGVkIEhhbWFzIGluIEdhemEgaW4gMjAwNiBhcyBhIHJlc3BvbnNlIHRvIElzcmFlbGkgaGFyZGxpbmUgcG9saWNpZXMgYW5kIFBMTyBjb3JydXB0aW9uLiBBbmQgeW91IGNhbiBzYXkgdGhhdCBJc3JhZWxpIGhhcmRsaW5lIHBvbGljaWVzIGFuZCBjb25zdHJ1Y3Rpb24gb2YgY2hlY2twb2ludHMgZXRjIHdlcmUgYSByZXN1bHQgb2YgUGFsZXN0aW5pYW4gdGVycm9yaXN0IGF0dGFja3MuIEFuZCB5b3UgY2FuIHNheSB0aGF0IHRoZSBQYWxlc3RpbmlhbiB0ZXJyb3Jpc3QgYXR0YWNrcyB3ZXJlIGEgcmVzdWx0IG9mIG1hcmdpbmFsaXphdGlvbiBldGMgZXRjIGV0YyBldGMuIEl0IGRldm9sdmVzIGludG8gbm90aGluZyBtb3JlIHRoYW4gYSBjaGlja2VuIG9yIHRoZSBlZ2cgZXF1YXRpb24uCldlIHByb2R1Y2UgV0FZIG1vcmUgYW50aWJvZGllcyB0aGFuIG5lY2Vzc2FyeSwgd2hpY2ggaXMgd2h5IHRoZSB2YWNjaW5lIGxhc3RzIDEwIHllYXJzIGFuZCBpcyBuZWFybHkgMTAwJSBlZmZlY3RpdmUgaW4gcHJldmVudGluZyB0ZXRhbnVzLiAKIldlJ2xsIHNlZSwgd2UnbGwgc2VlLiBJIGtub3cgdGhhdCB0aGVyZSdzIGJlZW4gdGFsayBvZiBhY3R1YWxseSBDcmVlZCBnZXR0aW5nIGJhY2sgdG9nZXRoZXIgYWdhaW4gICB3ZSdyZSBtYWtpbmcgYSBuZXcgYWxidW0gZm9yIDIwMTIgICBidXQgYWN0dWFsbHkgZ2V0dGluZyB0b2dldGhlciBhbmQgZG9pbmcgc29tZSBhY291c3RpYyBzaG93cyBhbmQgcHV0dGluZyBvdXQgYW4gYWNvdXN0aWMgcmVjb3JkLiBCZWNhdXNlIGxpa2UgSSBzYWlkLCB0aGUgZmFucyBoYXZlIGJlZW4gYXNraW5nIGZvciBpdCBmb3IgYSBsb25nIHRpbWUuIi4gCkJ5IHRoZSB0aW1lIGkgbW92ZWQgb3V0IGEgZmV3IHllYXJzIGxhdGVyIHdlIHdlcmUgb24gZ3JlYXQgdGVybXMuIEJ1dCB0aGUgYmxhY2sgbmVpZ2hib3JzIHdlcmUgZ3JlYXQgZnJvbSB0aGUgc3RhcnQuIFRoZXkgb2NjYXNpb25hbGx5IGhhZCB3ZWVrZW5kIHBhcnRpZXMgYnV0IG5vdGhpbmcgb3Zlcmx5IGxvdWQgYW5kIGl0IGFsbW9zdCBhbHdheXMgZW5kZWQgYXQgYSByZWFzb25hYmxlIHRpbWUgY29uc2lkZXJpbmcgaXQgd2FzIHRoZSB3ZWVrZW5kLiAKRmluZ2VycyBjcm9zc2VkISBMYXN0IHllYXIgbXkgdGF4IHBlcnNvbiBzYWlkIEkgZ2V0IGFuIGV4dHJhICQxMTAwIGluIDIwMTggYWZ0ZXIgdGhlIFRydW1wIFRheCBjdXRzLiBzbyBJIGFkanVzdGVkIG15IHdpdGhob2xkaW5nIHRvIGdpdmUgbXlzZWxmIGFuIGV4dHJhICQxNjAvbW8gaW4gbXkgcGF5Y2hlY2suIFVzZWQgdG8gY2xhaW0gMCB3aXRoIGFkZGl0aW9uYWwgJDE2MC9tbyB3aXRoaG9sZGluZy4gc28gSSBqdXN0IG5peGVkIHRoYXQgYWRkaXRpb25hbCB3aXRoaG9sZGluZy4gVGhpcyBkaWRuIGVmZmVjdCBteSBuZXQgcGF5IGF0IGFsbCBhZnRlciB0aGUgbmV3IHRheCB3ZW50IGludG8gZWZmZWN0LiBOb3cgSSBraW5kYSB3b3JyaWVkIHdoYXQgbXkgcmV0dXJuIGlzIGdvbm5hIGJlLiBMYXN0IGNvdXBsZSB5ZWFycyBJIGJlZW4gZ2V0dGluZyBhcm91bmQgJDIyMDAgcmVmdW5kLCBzbyBJIGhvcGUgaXRzIHN0aWxsIGNsb3NlIHRvIHRoYXQuIFN0aWxsIG5vIGlkZWEgd2hhdCBoYXBwZW5lZCB0byB0aGF0IG90aGVyICQxNjAvbW8uCklmIGl0IHdhcyB0aGUgbm9ybSBmb3IgdGhlYXRyZXMgdG8gb2ZmZXIgbm8gZXh0cmEgY2hhcmdlIHJlc2VydmVkIHNlYXRpbmcsICJpZiB5b3UgdXNlIHlvdXIgcGhvbmUgeW91IGtpY2tlZCBvdXQgd2l0aG91dCBhIHJlZnVuZCIgcnVsZXMsIGFuZCBubyBjb21tZXJjaWFscyBvZiBhbnkga2luZCAobm90IGV2ZW4gdHJhaWxlcnMpLCBJIG1pZ2h0IGFjdHVhbGx5IGdvIHNlZSBhIG1vdmllIGluIGEgdGhlYXRyZSBhZ2Fpbi4gClNvLCBhcyBtZW50aW9uZWQgYWJvdmUsIHRoZSBkZXRlY3Rpb24gbGltaXRzIGFyZW4gZmluZSBlbm91Z2ggdG8gZW5zdXJlIGFic29sdXRlbHkgbm8gcHJlc2VuY2Ugb2YgY2FuY2VyLi4gClRoZSBFNDMgbWFrZXMgZ2VuZXJvdXMgdXNlIG9mIHNvdW5kIGRlYWRlbmluZyBtYXRlcmlhbHMgYXMgd2VsbCBhcyBhY291c3RpYyBsYW1pbmF0ZWQgZ2xhc3MuIApUaGUgbmF2aWdhdGlvbmFsIG1hdGggaXMgYSBsaXR0bGUgY29tcGxpY2F0ZWQsIGJ1dCBJJ3ZlIGJlZW4gZG9pbmcgc3Vkb2t1IGZvciB0aGUgbGFzdCBmZXcgbW9udGhzIHRvIHNoYXJwZW4gbXkgd2l0cy4uIApUaGF0J3MgdGhlIHRha2UgZnJvbSBzZXZlcmFsIGxlYWRpbmcgZGlnaXRhbCBwb2xpdGljYWwgYWR2ZXJ0aXNlcnMgICBpbmNsdWRpbmcgb25lIERlbW9jcmF0IGFuZCB0aGUgb3RoZXIgdHdvIFJlcHVibGljYW4gICB3aG8gcHJpdmF0ZWx5IHNheSB0aGV5J3ZlIGFscmVhZHkgYmVlbiBmaW5kaW5nIGFuZCBleHBsb2l0aW5nIGxvb3Bob2xlcyBpbiBGYWNlYm9vaydzIG5ldyBwcml2YWN5IHJ1bGVzIGFzIHRoZXkgZ2VhciB1cCBmb3IgdGhlIFVTIG1pZHRlcm0gZWxlY3Rpb25zLgpIYXJkIHdvcmtlciBjb21lcyBpbiBiZWZvcmUgbWUgYW5kIGxlYXZlcyBiZWZvcmUgSSBkbyAoYXMgeW91IGV4cGVjdCkuIEFzIHNvb24gYXMgaGUgZ29uZSBqb2tlciBjbGVhcmx5IHN0YXJ0cyBnZXR0aW5nIGl0Y2h5IHRvIGxlYXZlIGJ1dCB0aGlua3MgaGUgY2FuIGxlYXZlIGJlZm9yZSBtZSBiZWNhdXNlIGhlIG5ldmVyIGdldHMgaW4gZXZlbiBhbiAxLjUgaG91cnMgYWZ0ZXIgdXMuIEkgZ29uZSB0byB0aGUgdG9pbGV0IG9uIGRheXMgSSBuZWVkZWQgdG8gd29yayBsYXRlIGFuZCBjb21lIGJhY2sgdG8gZmluZCBoaW0gaW4gaGlzIGphY2tldCBhbmQgcGFja2VkIHVwLCBjbGVhcmx5IHN1cnByaXNlZCBJIGhhZG4gYWN0dWFsbHkgbGVmdC4gClRoZSBhZGRpdGlvbmFsIHByZW1pdW0gaXMgYW4gb25jb3N0IGJvcm5lIGJ5IHRoZSBzdGFmZiBtZW1iZXIncyBmYWN1bHR5LCBzY2hvb2wgb3IgdGhlIHN0YWZmIG1lbWJlci4gUGxlYXNlIHJlZmVyIHRvIHRoZSBTdGFmZiBFeHBhdHJpYXRlIEluc3VyYW5jZSBHdWlkZSBmb3IgZnVydGhlciBpbmZvcm1hdGlvbi5Zb3UgY2FuIGFwcGx5IHRvIHlvdXIgaW5zdXJhbmNlIGNvdmVyIGlmIHlvdXIgdHJhdmVsIHdpbGwgZXhjZWVkIHRoZSBwb2xpY3kgbGltaXRzLCB0byBlbnN1cmUgeW91IHJlbWFpbiBjb3ZlcmVkIGZvciB0aGUgZHVyYXRpb24gb2YgeW91ciB0aW1lIGF3YXkuIApJdCdzIGFsd2F5cyBib3RoZXJlZCBtZSB0aGF0IEdhbmRhbGYgY29tZXMgYmFjayBmcm9tIHRoZSBkZWFkLiAKQXNha3VyYTk5IHUKV2UgYXJlIHRha2luZyB0aGUgc3RlcHMgaG93ZXZlciwgdG8gYWR2aXNlIHRoZSBwdWJsaWMgb2YgdGhlIGNvbnRpbnVhbmNlIG9mIG91ciBpbnZlc3RpZ2F0aW9uLCBpbiBvcmRlciB0byBlc3RhYmxpc2ggd2hldGhlciB3ZSBoYXZlIG90aGVyIHZpY3RpbXMgd2hvIGhhdmUgbm90IGNvbWUgZm9yd2FyZCB0byBkYXRlIG9yIG5vdC4gClNoYW1pbWEgaGFzIHJlY2VpdmVkIG5vIGR1ZSBwcm9jZXNzIGFuZCB5ZXQgdGhlIFVLIGlzIHB1bmlzaGluZyBoZXIuIFNoZSBkZXNlcnZlcyB0byBiZSBwdW5pc2hlZCBhbmQgaGVsZCBhY2NvdW50YWJsZSAgIGJ1dCBhZnRlciBzaGUgaXMgaW52ZXN0aWdhdGVkIGFuZCBjaGFyZ2VkLCBub3Qgc3VtbWFyaWx5IHdpdGggbm8gc2NvcGUgdG8gZGVmZW5kIGhlcnNlbGYuIER1ZSBwcm9jZXNzIGlzIG9uZSBvZiB0aGUgbW9zdCBpbXBvcnRhbnQgcmlnaHRzIHdlIGhhdmUgYnV0IGl0IGhhc24gYmVlbiBhZmZvcmRlZCB0byBTaGFtaW1hLi4gCkhvcGVmdWxseSB0aGF0IGdldHMgeW91IGEgZmV3IG1vcmUgY2hpcHMgdG8gcGxheSB3aXRoLiAxMGsgd2FzIHZhcmlhbmNlIGFuZCA1ayB3YXMgcHVudGluZy4gQXQgdGhlIHRpbWUgaXQgd2FzIG92ZXIgaGFsZiBteSBiYW5rcm9sbCBhbmQgSSB3YXMgY29uc2lkZXJpbmcgcXVpdHRpbmcgYW5kIHRocm93aW5nIGluIHRoZSB0b3dlbC4gCkNldHRlIHBvc3NpYmlsaXQgb3V2ZXJ0ZSAgbGEgbXJlIGQnaW50ZXJyb21wcmUgbGEgZ3Jvc3Nlc3NlIGx1aSBwZXJtZXQgZGUgZHRydWlyZSBsJ2VtYnJ5b24uIApIbGFzLCBsJ2hpc3RvaXJlIGRlcyByb3lhdW1lcyBzdWJzYWhhcmllbnMgZGVzIGRldXggZGVybmllcnMgbWlsbG5haXJlcywgZXN0IG1hbCBjb25udWUgcGFyIG1hbnF1ZSBkZSBzb3VyY2VzIGNyaXRlcyBvdSBkZSB2ZXN0aWdlcyBhcmNob2xvZ2lxdWVzLi4gClRoZSBtYXhpbXVtIHBvc3NpYmxlIHNjb3JlIHdhcyAxMDAgcG9pbnRzLiBJbiBhZGRpdGlvbiwgc3R1ZHkgcXVhbGl0eSB3YXMgYXNzZXNzZWQgYW5kIHNjb3JlZCB1c2luZyB0aGUgNSBwb2ludCBKYWRhZCBzY2FsZSB0aGF0IGFzc2Vzc2VzIHJhbmRvbWlzYXRpb24sIGJsaW5kaW5nIGFuZCB0cmVhdG1lbnQgb2YgZHJvcCBvdXRzLiBUd28gcmV2aWV3ZXJzIGFzc2Vzc2VkIGFuZCBzY29yZWQgdmFsaWRpdHkgb24gdGhlIDEwMCBwb2ludCBzY2FsZSBhbmQgcmVhY2hlZCBjb25zZW5zdXMuIFRoZSB0YWJ1bGF0ZWQgaW5mb3JtYXRpb24gaW5jbHVkZWQgdGhlIHZhbGlkaXR5IHNjb3JlLCB0eXBlIG9mIGhlYWRhY2hlLCB0eXBlIG9mIGludGVydmVudGlvbiBhbmQgY29udHJvbCwgdGhlIG51bWJlciBvZiBwYXRpZW50cyBwZXIgdHJlYXRtZW50IGdyb3VwIGFuZCB0aGUgcmVzdWx0cy4gCldlZWtlbmQgYnJ1bmNoIGlzIHRoZSBuZXcgZGlubmVyIHBhcnR5CkFkdmlzb3J5IEJvYXJkICAgU3R1ZGVudCBBY3Rpdml0aWVzIENlbnRlciBCb2FyZCBvZiBHb3Zlcm5vcnMgVGhlIFN0dWRlbnQgQWN0aXZpdGllcyBDZW50ZXIgQm9hcmQgb2YgR292ZXJub3JzIG92ZXJzZWVzIHRoZSBTdHVkZW50IEFjdGl2aXRpZXMgQ2VudGVyLiAKUGVvcGxlIGhhdmUgY29tZSB0byBmZWVsIGEgc2Vuc2Ugb2Ygb3duZXJzaGlwIG9mIHRoZSBjcm9zcyBhbmQgdHJhbnNmZXJyZWQgdGhlIHN5bWJvbCBvbnRvIGJhc2ViYWxsIGNhcHMgYW5kIFQgc2hpcnRzLCBldmVuIHR1cm5pbmcgaXQgaW50byBqZXdlbHJ5LlRoZSBwcm9wb3NlZCBidWlsZGluZyB3aXRoIGEgZGlzdGluY3RpdmUgaG9uZXkgY29tYiBleHRlcmlvciBieSBEaWFsb2cgRGVzaWduIHdpbGwgYmUgc2V0IGJhY2sgZnJvbSB0aGUgY3Jvc3MgYnkgYWJvdXQgMzYgbWV0cmVzLiAKQmUgcmVhZHkgYW5kIHdpbGxpbmcgdG8gd29yayB3aXRoIHNpZ24gaW50ZXJwcmV0ZXJzIG9yIENBUlQgaW50ZXJwcmV0ZXJzIGR1cmluZyBxdWVzdGlvbiBhbmQgZGlzY3Vzc2lvbiBwZXJpb2RzLiBTbG93IGRvd24gd2hlbiB5b3UgYXJlIHVzaW5nIGJpZyB3b3JkcyBvciBjb21wbGljYXRlZCBwaHJhc2VzIGFuZCBzcGVsbCBvdXQga2V5IG5hbWVzLCBhbmQgdXJnZSBzdHVkZW50cyB0byBkbyB0aGUgc2FtZS4gU2VlIHRoaXMgYWR2aWNlYWJvdXQgd29ya2luZyB3aXRoIGludGVycHJldGVycyBkdXJpbmcgbGVjdHVyZXMuCklmIEkgY291bGQgZ28gYmFjayBpbiB0aW1lIEkgd291bGQgaGF2ZSBzZWVuIG15IGRlcm1hdG9sb2dpc3QgbW9udGhzIGVhcmxpZXIsIGJ1dCBJIGZpbmFsbHkgbWFkZSBpdCB0byBvbmUgYXQgdGhlIGVuZCBvZiBKdW5lLiBJIGNvdWxkbiBiZWxpZXZlIG15IHNraW4gd2FzIGRvaW5nIHRoaXMhIEkgZmVsdCBzbyBhc2hhbWVkLCBJIG5ldmVyIGhhZCBibGVtaXNoZXMgbGlrZSB0aGlzIGFzIGEgdGVlbmFnZXIuIEkgd2FzIGVtYmFycmFzc2VkIGFuZCByZXNlbnRlZCBhbGwgbXkgZnJpZW5kcyB3aXRoIGNsZWFyIHNraW4gYW5kIGZlbHQgcGF0cm9uaVplZCB3aGVuIHRoZXkgY2FsbGVkIG1lIGJlYXV0aWZ1bC4gCkxld2lzIHBsYXllZCB0aGUgZmlyc3QgdHdvIHBlcmlvZHMgaW4gdGhlIE1hcm9vbnMgbmV0IGFuZCBnYXZlIHVwIGZvdXIgZ29hbHMgb24gMjkgc2hvdHMuIApUaGVzZSBhcmUgdHlwaWNhbGx5IGNvbXBvc2VkIG9mIG1ldGFsLiBXaGVuIGluZGl2aWR1YWxzIHJlZmVyIHRvIGNvbGxlY3RpbmcgcG9rZXIgY2hpcHMsIHRoZXkgYXJlIHR5cGljYWxseSByZWZlcnJpbmcgdG8gdGhlIG9uZXMgdGhhdCBhcmUgY29tbW9uIHRvIHRoZSB0YWJsZXMsIG5vdCB0aGUgb25lcyB0aGF0IGFyZSBjb21tb24gdG8gc2xvdCBtYWNoaW5lcy4gSWYgeW91IHBsYW4gb24gcHVyY2hhc2luZyB0aGVzZSBmb3IgdGhlIHB1cnBvc2Ugb2YgY29sbGVjdGluZywgaXQgaXMgaW1wb3J0YW50IHRvIGVuc3VyZSB0aGF0IHlvdSBrbm93IHdoaWNoIHR5cGUgeW91IGFyZSBwdXJjaGFzaW5nIHByaW9yIHRvIGNvbW1pdHRpbmcgdG8gdGhlIHNhbGUuCkJvcmluZyBjb21wYXJlZCB0byBvdGhlciBnYW1lcyB0aGF0IHNjcmF0Y2ggdGhpcyBpdGNoLi4gCkhpcyBzaG90cyBiZWdhbiB0byBzaG93IG1vcmUgemlwLCBidXQgaGlzIG1vdmVtZW50IHJlbWFpbmVkIHNsdWdnaXNoLiAKTGlrZSBSUlNQcywgVEZTQXMgcHJvdmlkZSBvbmdvaW5nIHRheCBzaGVsdGVyaW5nIG9mIGludmVzdG1lbnQgaW5jb21lLiBCdXQgdW5saWtlIFRGU0FzLCBSUlNQcyBzdGlsbCBwcm92aWRlIHRoYXQgdGF4IGRlZHVjdGlvbiwgb25lIG9mdGVuIGFjY29tcGFuaWVkIGJ5IGEganVpY3kgdGF4IHJlZnVuZCBpbiB0aGUgc3ByaW5nLiBURlNBcyBkb24gYWx0aG91Z2ggdGhleSB3aWxsIHNoaW5lIGluIHJldGlyZW1lbnQgYmVjYXVzZSB0aGVpciB3aXRoZHJhd2FscyB3b24gYmUgdGF4ZWQsIHdoaWNoIG1lYW5zIHRoZXkgd29uIHRyaWdnZXIgT0FTIChvciBldmVuIEdJUykgY2xhd2JhY2tzLi4gClRoZSBGZWRlcmFsIEdyb3VwLCB3aGljaCBjdXJyZW50bHkgb3ducyBhbGwgb2YgdGhlIHN0YXRlJ3MgcG9rZXIgbWFjaGluZXMsIGlzIHJ1bm5pbmcgYWRzIGZlYXR1cmluZyBtZW1iZXJzIG9mIGl0cyBzdGFmZi4KQXMgd2UgYWdlLCB0aGVyZSBpcyBnZW5lcmFsbHkgaW5jcmVhc2VkIHJpc2sgdGhhdCBjZXJ0YWluIG9yZ2FucyBpbiB0aGUgYm9keSwgaW5jbHVkaW5nIHRoZSB0aHlyb2lkLCB3aWxsIGRlY2xpbmUgaW4gZnVuY3Rpb24uCkJ1dCBJIHdhbnQgeW91IHRvIGtub3cgdGhhdCBpdCBiZSBhIGxvbmcgcHJvY2VzcyBiZWZvcmUgeW91IGZ1bGx5IGhlYWxlZC4gCk1ha2UgYSBwbGFuIG9mIGF0dGFjayBiZWZvcmUgeW91IGdvLiBCZWZvcmUgZmx5aW5nIGludG8gTWNDYXJyYW4gQWlycG9ydCwgbGVhcm4gYWxsIHlvdSBjYW4gYWJvdXQgdGhlIFdTT1AgYW5kIG90aGVyIHBva2VyIG9wdGlvbnMgaW4gTGFzIFZlZ2FzLiBXaGljaCBXU09QIGV2ZW50cyB3b3VsZCB5b3UgbGlrZSB0byBwbGF5PyBDYW4geW91IGFmZm9yZCB0aGVtPyBTaG91bGQgeW91IHRyeSB0byBzYXRlbGxpdGUgeW91ciB3YXkgaW4/IEhvdyBhYm91dCB0aGUgY2FzaCBnYW1lcz8gQ29uc2lkZXIgZGVkaWNhdGluZyBzb21lIG9mIHlvdXIgdGltZSB0byBwbGF5aW5nIGluIHNvbWUgb2YgdGhlIG90aGVyIHRvdXJuYW1lbnQgc2VyaWVzIHRha2luZyBwbGFjZSBjb25jdXJyZW50bHkgd2l0aCB0aGUgV1NPUCB3aXRoIGxvd2VyIGJ1eSBpbnMuIApXaGVuIHlvdSBzYXkgImdsYXNzZXMiLCBpdCBpcyBwbHVyYWwuIApSZXRpcmVkIFZlZ2FzIGRlYWxlciByZXR1cm5zIHRvIGRlYWwgV29ybGQgU2VyaWVzIG9mIFBva2VyCllvdSBjYW4gdXN1YWxseSB0ZWxsIGlmIHNvbWVvbmUgaXMgZ29pbmcgdG8gYmUgYSAiSGVsbG8sIG5pY2Ugd2VhdGhlciB3ZSBoYXZpbmcsIGhvdyB5b3VyIGRheT8iIGtpbmQgb2YgcGVyc29uLCBvciBhICJIZWxsbywgbmljZSB3ZWF0aGVyIHRvZGF5LCBzcGFyZSBzb21lIGNoYW5nZT8iIGtpbmQgb2YgcGVyc29uIGJhc2VkIG9uIHRoZWlyIGFwcHJvYWNoLiAKVG8gYmVjb21lIGVsaWdpYmxlIGZvciB0aGUgcHJvbW90aW9uIGFsbCB5b3UgbmVlZCB0byBkbyBpcyBkZXBvc2l0IGEgbWluaW11bSBvZiAxMCBpbnRvIHlvdXIgYWNjb3VudC4gCkNoaW5lc2UgZW1iYXJrcyBpbiBhIGh1Z2UgY2FzaCBiYXJ0ZXIgZWNvbm9teS4gCkZvciBtZW4sIHRoaXMga2luZCBvZiB1cyB2cyB0aGVtIGlzIHByb2JhYmx5IGEgc291cmNlIG9mIGVuZXJneSBhbmQgZHJpdmUuIEZvciB3b21lbiwgdGhvdWdoLCBpdCBpcyBwcm9iYWJseSBhIHNvdXJjZSBvZiBkb3VidC4gCkRpZSBodHRlIGVyIHZvbiB2b3JuaGVyZWluIHZlcm1laWRlbiBrbm5lbiAgIGluZGVtIGVyIHNlaW5lIERlbW8gZ2FyIG5pY2h0IGVyc3QgYW5nZW1lbGRldCBodHRlLgpJZiB0aGUgZGFtYWdlIGlzIHNwaWtleSBob3dldmVyIChzbWFzaGVycyArIG1pbmlib3NzZXMpIHRoZW4gdGhlIGxhcmdlIHBvb2wgb2YgSFAgb2ZmZXJlZCBieSBCSyAoc3RvY2spIGlzIGltbWVuc2VseSB2YWx1YWJsZS4uIApGcmVlIGVCb29rOltyZXFdIERhdmlkIFdlYmVyICAgW01hbnRpY29yZSBBc2NlbmRhbnQgMDEgMDJdIChlcHViIG1vYmkpICAgY2htLCBwZGYgcmFwaWRzaGFyZSwgZWJvb2suIFRodSwgMjYgSnVsIDIwMTggMDY6Mjk6MDAuIEdNVCBhIGNhbGwgdG8gZHV0eSBwZGYgIC4gClRoZXkgY2FuIGJlIGtpbmQgb2YgcGlja3kgYWJvdXQgdGhvc2UgZGF5cywgc28gbWFrZSBzdXJlIHdoZW5ldmVyIHlvdSB3b3JrIGl0IG9uIHBheXJvbGwgYW5kIHlvdSBrZWVwIGFzIG11Y2ggcGFwZXJ3b3JrIGZyb20gdGhvc2Ugam9icyBhcyBwb3NzaWJsZS4uIApVbHRpbWF0ZWx5IGEgQm9zdG9uIHdlZGRpbmcga2VwdCBLaW0gb3duIHBva2VyIGJ1ZGRpZXMgZnJvbSBtYWtpbmcgdGhlIHRvdXJuYW1lbnQsIHdoaWNoIHdhcyBhIHNpbmdsZSB0YWJsZSB3aXRoIG5pbmUgcGxheWVycy4gQWJvdXQgNTAgcGVvcGxlIGF0dGVuZGVkIHRoZSBnYWxhLCB3aGljaCByYWlzZWQgJDEsODAwIGFuZCB3aGljaCB3aWxsIGhlbHAgZnVuZCBLQVQgdXBjb21pbmcgc2Vhc29uLCBmZWF0dXJpbmcgUm9ja3kgSG9ycm9yIFNob3cgaW4gT2N0b2JlciwgaW4gRmVicnVhcnkgYW5kIGluIHRoZSBzcHJpbmcuCllvdXIgZGFkIHNvdW5kcyBsaWtlIGEgZ3JlYXQgbWFuLCBzb3JyeSBmb3IgeW91ciBsb3NzLgpUaGUgTGVnZW5kIG9mIHRoZSBMb3JlbGVpClRoZSBncmFuZGZhdGhlciBvZiB0aGVzZSBnYW1lcyBpcyBXYXJoYW1tZXIsIHdoaWNoIGlzIGJhc2VkIGluIGEgZmFudGFzeSB3b3JsZCBvZiBvcmNzIGFuZCBlbHZlcy4gClR3byBodWdlIGV4YW1wbGVzPz8gVHJveT8/IFlvdSBwdWxsIHNvbWUgaGlzdG9yaWNhbCBleGFtcGxlIGZyb20gd2hlbiBodW1hbnMgd2VyZSB3aXBpbmcgdGhlaXIgYXJzZSB3aXRoIGxlYXZlcyBhbmQgdG8gb3duIGEgc3dvcmQgd2FzIHRoZSBlcGl0b21lIG9mIHdlYWx0aCBhbmQgdXNlIGl0IGFzIGEgcmVhc29uIHdoeSB5b3Ugc2hvdWxkIGJ1aWxkIGEgd2FsbD8/IFRoYXQgaXMgZnVja2luZyBoaWxhcmlvdXMuCk5hdHVyZSdzIFBhdGggaGFzIGJlZW4gYSBjZXJ0aWZpZWQgb3JnYW5pYyBwcm9kdWNlciBzaW5jZSAxOTg1IGFuZCB3b3JrcyBkaXJlY3RseSB3aXRoIGNlcnRpZmllZCBvcmdhbmljIHN1cHBsaWVycyB0byBlbnN1cmUgdGhhdCBwdXJjaGFzZWQgaW5ncmVkaWVudHMgYXJlIGNlcnRpZmllZCBvcmdhbmljICAgaW4gc3VwcG9ydGluZyBzdWNoIGEgcG9saWN5LCB0aGUgY29tcGFueSdzIHZhcmlvdXMgY3JvcCBzaGFyaW5nIGFncmVlbWVudHMgd2l0aCBsb2NhbCBmYXJtZXJzIGVuc3VyZSB0aGF0IG92ZXIgMiw2NzAgaGVjdGFyZXMgb2YgZmFybWxhbmQgaW4gU2Fza2F0Y2hld2FuIGFuZCBNb250YW5hIGFyZSBvcmdhbmljLCB3aGljaCwgaW4gdHVybiwgZW5zdXJlcyB0aGF0IG92ZXIgMTg5LDYwMGtnIG9mIHN5bnRoZXRpYyBwZXN0aWNpZGVzIGFyZSBub3QgdXNlZApGb3IgdGhlIG1vcmUgY29tbW9uIGZvcm0gb2YgSG9sZCAnRW0sIHdoYXQgeW91IHdhbnQgaXMgdG8ga25vdyBIb3cgdG8gUGxheSBUZXhhcyBIb2xkICdFbSBQb2tlci4gRmVlbCBtb3JlIGxpa2UgcGxheWluZyBhbiBvbGQgZmF2b3JpdGUuIApJIHRoaW5rIGl0IHdvdWxkIGJlIG9rYXkgZm9yIHRoZW0gdG8gaGF2ZSBhIG51bWJlciBvZiBzbWFsbCBwbGFuZXRzIGFuZCBhIG51bWJlciBvZiBtZWRpdW0gcGxhbmV0cyBhcyB3ZWxsLiBUaGF0IHdvdWxkIGJlIHNvbWUgbmljZSB2YXJpZXR5IHRvIHRoZSBnYW1lIGFuZCB3aGVuIGFsbCBvZiB0aGUgcGxhbmV0cyBhcmUgYWRkZWQgdXAgdG9nZXRoZXIgdGhleSB3aWxsIGJlIG11Y2ggbGFyZ2VyIHRoYW4gU2t5cmltLi4gCkluIHRoZSBlbmQgaXQgZG9lcyBpdHMgam9iIGFuZCB3ZSBlbmpveSBvdXIgd2Vla2x5IGdhbWVzIGFtb25nc3QgZnJpZW5kcy4uIAooQ05OKSAgIFRoZXJlJ3MgYSBuZXcga2lkIG9uIHRoZSBibG9jaywgYW5kIGNoYW5jZXMgYXJlIGhlJ3MgaW4gYSBzdHJvbGxlciBiZWluZyBwdXNoZWQgYnkgYSBzdGF5IGF0IGhvbWUgZGFkLiBDZW5zdXMsIHNvbWUgMiBtaWxsaW9uIG1lbiBmdW5jdGlvbiBhcyB0aGUgcHJpbWFyeSBjYXJlZ2l2ZXJzIGluIHRoZWlyIGZhbWlsaWVzLCBhbmQgdGhhdCBudW1iZXIgaXMgc3Vic3RhbnRpYWxseSBvbiB0aGUgcmlzZSBpbiBsaWdodCBvZiB0aGUgY3VycmVudCAibWFuY2Vzc2lvbi4iIEJ1dCB3aGF0IHRoZSBzdGF5IGF0IGhvbWUgZGFkIGxhY2tzIGluIGVhcm5pbmcgcG93ZXIgaGUgbWF5IG1ha2UgdXAgZm9yIGluIHNleGluZXNzLi4gCkNoaWVmIGFtb25nIHRoZW0gaXMgd2hldGhlciBjYXNpbm9zIGFyZSByZWFsbHkgbWVhbnQgdG8gc3VjY2VlZCBpbiBjaXRpZXMgdGhhdCBhcmUgYWxyZWFkeSB3ZWxsIHBvc2l0aW9uZWQgaW4gdGhlIG1pbmRzIG9mIHRvdXJpc3RzIGFuZCBsb2NhbHMgYXMgc29tZXRoaW5nIG90aGVyIHRoYW4gYSBnYW1pbmcgZGVzdGluYXRpb24uIiAoQ2hhcmxlcyBBbmRlcmVyLCAxOTk2LCAiV2hhdCBOZXcgT3JsZWFucyBUZWxscyBVcyIgaW4gSW50ZXJuYXRpb25hbCBHYW1pbmcgV2FnZXJpbmcgQnVzaW5lc3MsIFZvbC4gCkluIG15IGNhc2UgSSBoYWQgbm8gY2hvaWNlIGFzIG15IGxlZnQgYXJtIHdhcyBiZWNvbWluZyBwYXJhbHl6ZWQuIApDYW4gd2FpdCB0byBiZSBqdXN0IG9uZSBydW5nIGhpZ2hlciBvbiB0aGlzIHRvdGVtIHBvbGUgYW5kIHRyZWF0IG15IE00cyB3aXRoIHN5bXBhdGh5LiAKVGVuZWluZGUgZWVuIGhvZ2Uga3dhbGl0ZWl0IHZhbiB6b3JnIHRlIGt1bm5lbiB3YWFyYm9yZ2VuLCB6b3dlbCB2b29yYWZnYWFuZCBhbHMgdGlqZGVucyBkZSBpbnRlcnZlbnRpZSwgb25kZXJob3VkdCBkZSBmeXNpb3RoZXJhcGV1dCBlZW4gZWZmZWN0aWV2ZSByZWxhdGllIG1ldCBkZSBjbGludCBlbiB6aWpuIG5hYXN0ZW4gZW4vb2YgYW5kZXJlIGJldHJva2tlbi4gRGUga2VybiB2YW4gaGV0IGNvbXBldGVudGllZ2ViaWVkIGNvbW11bmljYXRpZSBiZXRyZWZ0IGhldCBvcGJvdXdlbiB2YW4gZWVuIHZlcnRyb3V3ZW5zcmVsYXRpZSBlbiBlZW4gZWZmZWN0aWV2ZSBpbmZvcm1hdGllIHVpdHdpc3NlbGluZy4gCldoYXQgaXMgYSBoaWdoZXIgdHdvIHBhaXIgaW4gcG9rZXIKSGVyZSBteSBjaGFydGVkIHN1bW1hcnkgb2YgdGhlIE5BUyByZXN1bHRzLiAKSSBtaXNzIHJlYWxseSBzbG93IHBhY2VkIGdhbWVzIHRoYXQgcmVxdWlyZSBhIGxvdCBvZiB0aW1lIGFuZCBwYXRpZW5jZSBpbiBvcmRlciB0byBoYXZlIGEgZmVlbGluZyBvZiBhY2hpZXZlbWVudCAuIEl0IHNlZW1zIHRoYXQgcGxheWVycyBhcmUgYmVjb21pbmcgbW9yZSBhbmQgbW9yZSBpbXBhdGllbnQgYW5kIGJ1eSBsZXNzIGV4cGVuc2l2ZSBnYW1lcyB3aGljaCB0aGV5IGNhbiBwbGF5IGZvciA0IDggaG91cnMgYW5kIG1vdmUgdG8gdGhlIG5leHQgb25lLi4gCkNldHRlIG5vdGUgZmFpdCBwYXJ0aWUgZGUgbGEgY2F0Z29yaWUgIlF1ZXN0aW9ucyBvdXZlcnRlcyIuIEplIG5lIGRvbm5lIHF1ZSBxdWVscXVlcyBsbWVudHMgc3VyIHVuIHRobWUgZXQgYydlc3QgIHZvdXMgZCdleHBvc2VyIHZvdHJlIGF2aXMgZXQgZCdhcmd1bWVudGVyLiBDZXJ0YWluZXMgcXVlc3Rpb25zIG4nb250IHBhcyB2ZWlsbCBsZSBkYmF0LiAKSW4gYWxsIGxpa2VsaWhvb2QsIHlvdXIgb3Bwb25lbnQgaG9sZHMgYW4gYWNlIG9yIGEga2luZywgc28gbWFraW5nIGEgcGFpciB3aWxsIG5vdCBoZWxwLiBZb3VyIG9ubHkgaG9wZSBpcyBtYWtpbmcgYSBzdHJhaWdodC4gCkkgaGFkIHRoZSA1MDAgNjAwIGpvYiBhbmQgZ290IGEgNzAwIDkwMCBqb2IuIEEgY291cGxlIG9mIHBlb3BsZSBhdCBteSBuZXcgam9iIHRvbGQgbWUgdGhhdCB0YXggc2l0dWF0aW9uIHdvdWxkIHNvYWsgbWUuIEkgZnJlYWtlZCBvdXQgYSBiaXQgdGhlbiBjYWxtZWQgZG93biBhbmQgd2VudCB0byB0aGUgdGF4IG9mZmljZSB0byBhc2sgdGhlbS4gClVuYmVrbm93bnN0IHRvIFJpY2ssIGhpcyBmdXR1cmUgd2lmZSBEaWFuYSB3YXMgaGlzIEdyYWRlIDIgY2xhc3NtYXRlIGF0IENhbmFkaWFuIE1hcnR5cnMuIEhlIHdvdWxkIGNsYWltIG5vdCB0byByZW1lbWJlciBoZXIgYmVjYXVzZSBoZSB3YXMgZm9jdXNpbmcgb24gaGlzIHN0dWRpZXMuIEFmdGVyIGEgeWVhciBpbiBzZW1pbmFyeSBhdCBTdC4gCkknbSBzdXJlIGhlIHdpbGwgYmUgZ3JlYXRseSBtaXNzZWQgYnkgYWxsIG9mIGhpcyBmYW1pbHkgYW5kIGZyaWVuZHMuIApPbiBjYW1wdXMgcGFydGllcywgdGhlIGxhcmdlIG9uZXMsIGFyZSBwcmV0dHkgZG9taW5hdGVkIGJ5IGdyZWVrIGxpZmUgYnV0IG1vc3QgcGVvcGxlIGRvIG5vdCBnbyB0byBmcmF0IHBhcnRpZXMgdGhhdCBvZnRlbi4gCklsIG5lIHNlbWJsZSBwYXMgYXZvaXIgbGEgdm9sb250IGRlIHJnbGVyIGxlIHByb2JsbWUuIApZb3UgY291bGQgZmluZCBhIHdheSB0byBjb25zb2xpZGF0ZSBJVCB3LyB0aGUgcGFyZW50LCBoYW5nIG9udG8ganVzdCB0aGUgZGV2ZWxvcG1lbnQvYnVzaW5lc3MgZGV2ZWxvcG1lbnQgYXNwZWN0cyBvZiB0aGUgam9iLCBhbmQgaW1wcm92ZSByZXZlbnVlL2VmZmljaWVuY2llcy9yZWR1Y2Ugcmlzay9ldGMuLiAKRGFzIG1hY2h0IGRpZXNlcyBNdXNldW0gc28gbGViZW5kaWcgdW5kIGZhc3ppbmllcmVuZC4gClhhdmllciBxdWFydGVyYmFjayBDaGFzZSBXb2xmLiAKSSBhZ3JlZSB3aXRoIHRoZSByZXR1cm4gb2YgcHViIGdhbWVzIG9yIGFjdHVhbCBsZWdhbCBob21lIGdhbWVzIGJlaW5nIGNvb2wuIApUb2xkIHRoZW0gdGhhdCBJIGtuZXcgdGhhdCBhcmUgYWxyZWFkeSBiZWluZyBkcml2ZW4gb3V0IG9mIHByYWN0aWNlIGJ5IG1hbHByYWN0aWNlIHN1aXRzLiBOb3cgYSB3YXJuaW5nIGZyb20gdGhlIEFtZXJpY2FuIEFjYWRlbXkgb2YgUGVkaWF0cmljaWFucywgY29tYmluZWQgd2l0aCBhbiBhcnRpY2xlIGluIFNjaWVudGlmaWMgQW1lcmljYW4sIHNob3VsZCB3b3JyeSBvYnN0ZXRyaWNpYW5zIGFuZCB0aGVpciBhdHRvcm5leXMuIE1lZGljYWwgbWFscHJhY3RpY2UgY2xhaW1zIG1heSBiZSBmaWxlZCBmb3Igc2V2ZXJhbCB5ZWFycyBhZnRlciB0aGUgaW5qdXJ5IGlzIHJlY29nbml6ZWQ7IG9ubHkgdGhlbiBkbyB0aGUgc3RhdHV0ZXMgb2YgbGltaXRhdGlvbnMgYmVnaW4gdGhlaXIgc2FkIHRvbGwuIApXZSBjb3VsZCBhbHdheXMgdXNlIG1vcmUgdHJhc2ggYmlucyBidXQgSSBob25lc3RseSBkbyBub3QgdGhpbmsgdGhhdCB0aGUgcmVhc29uIHNvIG1hbnkgcGVvcGxlIGxpdHRlci4gSSB0aGluayBhcm91bmQgdGhlIExha2UsIHllcywgd2UgbmVlZCBtb3JlIGJpbnMgYmVjYXVzZSB0aGV5IGdldCBzbyBmdWxsIGJ1dCBJIGhhdmUgc2VlbiBzbyBtdWNoIGxpdHRlciB3aGVyZSB0aGVyZSBhcmUgYmlucyBqdXN0IGEgZm9vdCBhd2F5LiAKSW4gYWRkaXRpb24sIHlvdSBtYXkgd2FudCB0byBvcmRlciB5b3VyIGJsYWNramFjayBhbmQgcG9rZXIgdGFibGUgcmVudGFscyBmcm9tIGEgcHJvdmlkZXIgdGhhdCBjYW4gZGVsaXZlciB0aGUgdGFibGVzIG9mIHlvdXIgY2hvaWNlIGluIGEgcHJvbXB0IGFuZCBwcm9mZXNzaW9uYWwgbWFubmVyIGFuZCB0aGF0IHBsYWNlcyBncmVhdCB2YWx1ZSBvbiBjdXN0b21lciBzYXRpc2ZhY3Rpb24uIApZb3Uga25vdyBob3cgZXZlcnkgImludHJvIHRvIGVtYWNzIiB0dXRvcmlhbCBvciBibG9nIHBvc3Qgc3RhcnRzIG9mZiByZWNvbW1lbmRpbmcgdG8gZ28gdGhyb3VnaCB0aGUgYnVpbHQgaW4gZW1hY3MgdHV0b3JpYWw/IChvZiBjb3Vyc2UgZW1hY3MgaXRzZWxmIHN1Z2dlc3RzIHRoaXMgdG9vIGl0IG9uIHRoZSBzdGFydHVwIHBhZ2UpIFdlbGwgd2hlbiBJIGZpcnN0IHN0YXJ0ZWQgdXAgZW1hY3MsIEkgdG91Y2hlZCB0aGF0IGZvciBsaWtlIDIgc2Vjb25kcyBhbmQgZGVjaWRlZCBJIHdhc24gZ29pbmcgdG8gZG8gdGhpcyAodW5sZXNzIEkgZmluZCBvdXQgSSByZWFsbHkgbmVlZCB0bykuIFNvIEkgbGVhcm5lZCBob3cgdG8gaW5zdGFsbCBldmlsIG1vZGUgZmlyc3QgYW5kIHNraXBwZWQgYWxsIHRoYXQgYmFzaWMgaW50cm8gc3R1ZmYgYmVjYXVzZSBJIGFscmVhZHkga25ldyBob3cgdG8gZG8gaXQgZnJvbSB2aW0sIGFuZCBldmlsIG1vZGUgcHJvdmlkZWQgZm9yIGVtYWNzLgpTbyB0aGVyZSBhIGJhbGFuY2UgdGhhdCBuZWVkcyB0byBiZSBmb3VuZC4uIApUaGFua3MgYWdhaW4gZm9yIHlvdXIgaGVscCBtYW4uIEdCTy4gMTAxIHBvaW50cyAgc3VibWl0dGVkIDUgbW9udGhzIGFnbwpTdXJlLCBJJ20gMjguIE15IGhlYWx0aCB3YXMgZ2VuZXJhbGx5IGdvb2QgYnV0IEkgaGFkIG1hbnkgb2YgdGhlIHR5cGljYWwgcHJvYmxlbXMgYXNzb2NpYXRlZCB3aXRoIGxvbmcgdGVybSBvYmVzaXR5LiBNeSBBMUMgd2FzIDYuNCwgc28gSSB3YXMgdGVjaG5pY2FsbHkgZGlhYmV0aWMgYW5kIG9uIG1lZGljYXRpb24gZm9yIGl0LCBhbmQgbXkgYmxvb2QgcHJlc3N1cmUgd2FzIGNocm9uaWNhbGx5IGhpZ2guIE15IHN1cmdlcnkgd2VpZ2h0IHdhcyAyNzQgYW5kIGEgaGVhbHRoeSB3ZWlnaHQgYXQgbXkgaGVpZ2h0IGlzIGFyb3VuZCAxMjAgMTQwIGRlcGVuZGluZyBvbiB0aGUgcGVyc29uLiBJIGRvbid0IGV2ZW4gaGF2ZSBhIGNvbmNyZXRlIGdvYWwgYmVjYXVzZSBJIGhhdmUgbmV2ZXIgYmVlbiB0aGluIGVub3VnaCB0byBrbm93LiBJIHdhcyBvZmYgbXkgZGlhYmV0ZXMgbWVkaWNhdGlvbiBpbiB0d28gd2Vla3MgYW5kIG15IEExQyBpcyA1LjEgbm93LCB3aGljaCBpcyBncmVhdCBhbmQgbm93aGVyZSBuZWFyIGRpYWJldGljIG9yIGV2ZW4gcHJlIGRpYWJldGljLiBNeSBibG9vZCBwcmVzc3VyZSBpcyBub3JtYWwgdG8gZ29vZC4gSSB0YWtlIG1lZGljYXRpb24gZm9yIEFESEQgc28gdGhleSB3YW50ZWQgdG8gYmUgY2FyZWZ1bCBhYm91dCB0aGF0IGFuZCBvdmVyZWF0aW5nIGJ1dCBpdCdzIHJlbWFpbmVkIGdvb2QgdGhlIHdob2xlIHRpbWUuClRoZXkgZm9ybSBhIGRpYWxlY3QgbmV0d29yayB3aXRoIGxvdHMgb2Ygc21hbGwgdHJhbnNpdGlvbnMgdGhhdCBvbmx5IGluIHN1bSBtYWtlIGEgYmlnIGRpZmZlcmVuY2UuIAoiVHdvIHN1bnMgaG9sZCBub3QgdGhlaXIgY291cnNlcyBpbiBvbmUgc3BoZXJlLiIgQnV0IHRoZXkgZGlkIG5vdCBjbGFzaCBhdCBhbGwsIGZvciBNcnMuIApUaGV5IGxpdmUgaW4gYSBjYW5keSBsYW5kIGFuZCBsb29rIG91dCBmb3IgbnVtZXJvIHVuby4gSXQgbm90IGV4YWN0bHkgYSBicmFpbiB0d2lzdGVyLiAKTXkgZW50aXJlIGZhbWlseSBpcyByZWFsbHkgYmlnIGJ1dCB3ZSBhbGwgaGF2ZSBnb29kIGJsb29kIHByZXNzdXJlLCBsb3cgY2hvbGVzdGVyb2wsIG5vIGhpc3Rvcnkgb2YgZGlhYmV0ZXMsIGV0Yy5JIGRvIGVhdCB2ZXJ5IGNsZWFuLCBJIGp1c3QgZWF0IGEgbG90IGFuZCBoYXZlIGEgcmF0aGVyIHNlZGVudGFyeSBsaWZlIHN0eWxlIHJpZ2h0IG5vdy5UaGF0IGJlaW5nIHNhaWQgSSBkbyBoYXZlIG90aGVyIGhlYWx0aCByZWxhdGVkIGlzc3VlcyBjcm9wcGluZyB1cCBmcm9tIG15IHNpemUgc28gYW0gZ29pbmcgdG8gYmUgY3V0dGluZyBkb3duIHRvIHRvIGFib3V0IDE0NSAxNTAga2cgdGhpcyBzdW1tZXIgdG8gc2VlIGhvdyBJIGZlZWwuIDE5IHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ29TaW5jZSBtb3JlIHRoYW4gbGlrZWx5IG5vdCBnb2luZyB0byBiZSBnb2luZyB0byBXb3JsZHMgaW4gSXJlbGFuZCB0aGlzIHllYXIgaGF2ZSBkZWNpZGVkIHRoYXQgYWZ0ZXIgbXkgbWVldCBhdCB0aGUgZW5kIG9mIHRoaXMgbW9udGggSSBhbSBnb2luZyB0byBnbyBvbiBhIGN1dC4gClVsdGltYXRlbHkgRUFzIGxvc3Mgb24gdGhvc2UgZmV3IGJ1Y2tzIHBlciBzYWxlIHdvdWxkbiBtYXR0ZXIgc2luY2UgeW91IGhhdmUgc28gbWFueSBtb3JlIHBlb3BsZSBwYXlpbmcgZm9yIHNoaXQuLiAKVXRhaCdzIHNvbGUgbG9zcyB0byBkYXRlIHdhcyBhIHRocmVlIHBvaW50IGxvc3MgdG8gYSBoaWdobHkgcmFua2VkIFNhbiBEaWVnbyBTdGF0ZSBzcXVhZC4gSXQgd2FzIG9ubHkgdGhlIHNlY29uZCByZWFsIGdhbWUgb2YgdGhlIHNlYXNvbiwgd2l0aCB0d28gb2YgdGhlIFJ1bm5pbicgVXRlcycgc3RhcnRlcnMgYmVpbmcgbmV3Y29tZXJzICAgSkMgdHJhbnNmZXIgQ2hyaXMgUmV5ZXMgKGEgc29waG9tb3JlIHdobyBwbGF5ZWQgYXQgQ2l0cnVzIENvbGxlZ2UgbGFzdCB5ZWFyKSBhbmQgdHJ1ZSBmcmVzaG1hbiBKYWtvYiBQb2VsdGwgKGEgdHJ1ZSBkaWFtb25kIGluIHRoZSByb3VnaCBvdXQgb2YgVmllbm5hLCBBdXN0cmlhKS4gVHdvIGFkZGl0aW9uYWwgdHJ1ZSBmcmVzaG1lbiAgIEJyZWtrb3R0IENoYXBtYW4gKHRoZSB0b3AgbG9jYWwgcHJvc3BlY3QgZnJvbSBSb3kpIGFuZCBJc2FpYWggV3JpZ2h0IChsYXN0IHllYXIncyBJZGFobyBHYXRvcmFkZSBQbGF5ZXIgb2YgdGhlIFllYXIgZnJvbSBCb2lzZSkgICBhbHNvIHNhdyBzaWduaWZpY2FudCB0aW1lIGluIHRoZSBnYW1lLiAKV2hhdCBDRVMgMjAxNyBIYXMgVG8gT2ZmZXIgRm9yIFRlY2ggTG92ZXJzVGhlIE5ld2VzdCBUZWNoIEF0IFRoZVRoZSBJbnRlcm5hdGlvbmFsIENvbnN1bWVyIEVsZWN0cm9uaWNzIFNob3cgKENFUyAyMDE3KUpvc2VwaCBUYXlsb3IsIENoYWlybWFuIGFuZCBDRU8gb2YgUGFuYXNvbmljIENvcnBvcmF0aW9uIG9mIE5vcnRoIEFtZXJpY2EsIGhvbGRzIHVwIGEgYmVuZGFibGUgbGl0aGl1bSBpb24gYmF0dGVyeSBhcyBoZSBzcGVha3MgZHVyaW5nIGEgcHJlc3MgZXZlbnQgZm9yIENFUyAyMDE3LiAoUGhvdG8gYnkgQWxleCBXb25nL0dldHR5IEltYWdlcykKVGhlIEdyZWVrIHdvcmQgdHJhbnNsYXRlZCBpbnRvIGhvbW9zZXh1YWwgaW4gaXRzIG1vc3QgbGl0ZXJhbCBtZWFuaW5nIGlzIG1hbGUvc2V4IG9yIG1hbGUvYmVkIChhcyBpbiBtYXJyaWFnZSBiZWQpLi4gCklmIHlvdXIgY2xpZW50IGFjdHVhbGx5IGlzIGEgaG90ZWwsIGV2ZW4gc3VwcG9zZWQgUiB0aW1lIGNhbiBiZWdpbiB0byBmZWVsIGxpa2UgYSBncmluZC4gSW5paSBLaW0sIGNvIGZvdW5kZXIgYW5kIGNyZWF0aXZlIGRpcmVjdG9yIGF0IEtpbmcgUGFydG5lcnMsIHNheXMgdGhlIGFnZW5jeSByZWNlbnRseSB0b29rIG9uIGEgbmV3IGhvdGVsIGNsaWVudCwgYW5kIHRoZSBwcm9wZXJ0eSB2aXNpdHMgaGFkIGEgcnV0aGxlc3MgcGFjZSB0aGF0IHRvb2sgdGhlbSB0byBmaXZlIGhvdGVscyBpbiBmaXZlIGRheXMuICJJdCB3YXMgcmVhbGx5IHRvdWdoLCIgc2hlIHNheXMuICJXZSBoYWQgYSByZWFsbHkgdGlnaHQgc2NoZWR1bGUsIGludGVydmlld2luZyBldmVyeSBzdGFrZWhvbGRlci4iIFRob3NlIGhvdGVscywgaG93ZXZlciwgd2VyZSBpbiBOYXBhIFZhbGxleSwgQ2FsaWZvcm5pYSwgYW5kIENhYm8gU2FuIEx1Y2FzLCBNZXhpY28uICJbSW4gTmFwYV0gd2UgaGFkIHRvIGVhdCBhbGwgdGhlIGZvb2QsIGRyaW5rIGFsbCB0aGUgZHJpbmtzLCB0aGVuIHdlIGhhZCB0byB3YWtlIHVwIGF0IDMgaW4gdGhlIG1vcm5pbmcgdG8gaGVhZCB0byBDYWJvLiBUaGVuIHdlIGhhZCB0byBnZXQgYSBtYXNzYWdlLCBlYXQgZGlmZmVyZW50IHRhY29zLCBnbyB0byB0aGUgYmVhY2gsIGdvIHRvIHRoZSBwb29sLiAuIFRoZSBsYXN0IHBhcnQgd2FzIHRlcXVpbGEgdGFzdGluZy4gV2UgaGFkIHRvIHRhc3RlIE1leGljbydzIDEyIGJlc3QgdGVxdWlsYXMuIiBTb3VuZHMgYXdmdWwuCjYgYXQgTW90b3JDaXR5IENhc2lubyBIb3RlbCwgdGhlIGNoYXJpdHkgcG9rZXIgdG91cm5hbWVudCB3aWxsIGdpdmUgZmFucyBhbiBvcHBvcnR1bml0eSB0byBnbyBoZWFkIHRvIGhlYWQgd2l0aCBSZWQgV2luZ3MgcGxheWVycyBhbmQgYWx1bW5pIGluIGEgZ2FtZSBvZiBUZXhhcyBIb2xkICdFbSB3aXRoIGEgZ3JhbmQgcHJpemUgb2YgJDUsMDAwIGNhc2ggdG8gdGhlIHdpbm5lciBvZiB0aGUgdG91cm5hbWVudC4gRmFucyBjYW4gcmVzZXJ2ZSBhIHNlYXQgaW4gdGhlIHRvdXJuYW1lbnQgYnkgbWFraW5nIGEgJDQwMCBkb25hdGlvbiB0byB0aGUgUmVkIFdpbmdzIEZvdW5kYXRpb24uIApTYXRlbGxpdGUgICBUaGlzIGlzIGFsc28gYSBmcmVlemVvdXQgd2hlcmVpbiB0aGUgcHJpemUgaXMgYSBwbGFjZSBpbiBhIGJpZ2dlciBwb2tlciB0b3VybmFtZW50IHRoYXQgaXMgdXN1YWxseSBoZWxkIGluIGxhbmQgYmFzZWQgY2FzaW5vcyBhbmQgd2l0aCBhIG11Y2ggYmlnZ2VyIHByaXplLgpTb21lIG1hc3NhZ2Ugb2lsLiBNYWtlIHN1cmUgdGhhdCB5b3VyIG9pbCBpcyBzdWl0YWJsZSBmb3IgdXNlIG9uIGEgYmFieS4gCkxlcyByZWNvbW1hbmRhdGlvbnMgZHUgcmFwcG9ydCBNY0xlbGxhbiBuZSBzb250IHBhcyBjb250cmFpZ25hbnRlczsgYXVzc2kgbCBjb21wdGUgdCBlbGxlIGNvbnRpbnVlciAgcGxhaWRlciBzYSBjYXVzZSBsb3JzIGR1IHByb2Nlc3N1cyBkIGR1IHByb2pldCBkZSBsb2ksIGEgaW5kaXF1IHNvbiB2aWNlIHByc2lkZW50LCBsZSBkb2N0ZXVyIEplZmYgQmxhY2ttZXIuClNoZSB0cnlpbmcgYW5kIHNheXMgc2hlIGRvIGFueXRoaW5nIGZvciBtZSBzbyBJIGp1c3QgZ29pbmcgdG8gdXNlIHRoYXQgdG8gdGVsbCBoZXIgd2hhdCBJIHJlYWxseSB3YW50IGlzIGhlciB0byBnZXQgdG8ga25vdyBtZSBiZWZvcmUgYWN0aW5nIGxpa2Ugd2UgaW5zdGFudCBmYW1pbHkuIApJIHdhcyB3b3JyaWVkIGFib3V0IGJlaW5nIGhpdCBieSBhIExleHVzIHRoYW4gYmVpbmcgYXNzYXVsdGVkIGJ5IGEgaG9tZWxlc3MgcGVyc29uLi4gCkluIHJlY2VudCB3ZWVrcywgU2FiZWFuIGhhcyBhbHJlYWR5IGNoYW5nZWQgaGlzIHR1bmUgZnJvbTogd29uIHRyYWRlIG91ciB5b3VuZyBwaXRjaGluZyB0byBtaWdodCBoYXZlIHRvIHRyYWRlIG91ciB5b3VuZyBwaXRjaGluZyB0byBnZXQgc29tZSBoaXR0aW5nLiAKKEkgbWlnaHQgYmUgc29tZXdoZXJlIGJldHdlZW4gbWluYXJjaGlzdCBhbmQgY2xhc3NpY2FsIGxpYmVyYWwsIGJlY2F1c2UgSSBkbyB0aGluayBnb3Zlcm5tZW50IHNob3VsZCBtYWtlIHN1cmUgZXZlcnkgY2hpbGQgaGFzIHRoZSBjaGFuY2UgdG8gbGVhcm4gcmVhZGluZywgd3JpdGluZywgYXJpdGhtZXRpYywgYW5kIGJhc2ljIHNhZmV0eSwgYXMgd2VsbCBhcyB0aGluayBwcmV2ZW50aW5nIHRyYWdlZHkgb2YgdGhlIGNvbW1vbnMgaXMgcGFydCBvZiBwcm90ZWN0aW5nIGFnYWluc3QgYmFkIGFjdG9ycykKVGhpcyBtYXkgaW52b2x2ZSBsZWFybmluZyB0byB0YWtlIGRldGFpbGVkIG5vdGVzIHNvIGFzIHRvIGVhc2lseSByZWNhbGwgd2hhdCB3YXMgc2FpZCBsYXRlci4gRWZmZWN0aXZlIGxpc3RlbmluZyBhbHNvIGludm9sdmVzIHBheWluZyBhdHRlbnRpb24gdG8gaG93IHRoZSBzb2NpYWwgd29ya2VyIHJlYWN0cyBhcyB0aGUgY2xpZW50IGlzIHNwZWFraW5nLiAKRnJvbSB0aGUgcGVyc3BlY3RpdmUgb2YgZ292ZXJuYW5jZSwgU2luZ2Fwb3JlIGhhcyB0YWtlbiBwYWlucyB0byBhdm9pZCBiZWNvbWluZyBhIG5hbm55IHN0YXRlIHdpdGggYSBkZXBlbmRlbmN5IGN1bHR1cmUgYnV0IGl0IGlzIG5vdCBhbiB1bmNhcmluZyBjYXBpdGFsaXN0IG5hdGlvbi4gClRoZSB0b3AgMjUgaGVkZ2UgZnVuZCBtYW5hZ2VycyBlYXJuZWQgb24gYXZlcmFnZSAkMSBCaWxsaW9uIGVhY2ggdGhpcyBwYXN0IHllYXIuIE1lYW53aGlsZSwgcmVhbCB1bmVtcGxveW1lbnQgaXMgbmVhcmx5IGRvdWJsZSB0aGUgb2ZmaWNpYWwgMTAlIHVuZW1wbG95bWVudCByYXRlIGFuZCBhdmVyYWdlIEFtZXJpY2FucyBjb250aW51ZSB0byBzdHJ1Z2dsZSB3aXRoIHBheSBjdXRzIGFuZCBqb2IgbG9zc2VzIGFzIFdhbGwgU3RyZWV0IGZhIHRjYXQgYmFua2VycyBjb250aW51ZSB0byBzcXVlZXplIG1vcmUgYW5kIG1vcmUgcHJvZml0IG91dCBvZiB1cy4gRmF0IGNhdHMgdGFrZSBvdXIgbW9uZXkgdHdvIHdheXM6IGZpbmFuY2lhbGl6YXRpb24gYW5kIGdvdmVybm1lbnQgY29ycG9yYXRlIHdlbGZhcmUgZmluYW5jZWQgd2l0aCBvdXIgdGF4IGRvbGxhcnNGaW5hbmNpYWxpemF0aW9uIGlzIHRoZSB3YXkgbW9zdCBiYW5rcyBtYWtlIHByb2ZpdCB0aGVzZXMgZGF5cy4gClBlb3BsZSBoYXZlIHRvIHRyYXZlbCB0byB5b3VyIHBsYWNlIGlmIHRoZXkgd2FudCB0byBwbGF5LCBzbyBpdCBtZWFucyB0aGF0IHRoZXkgY2FuJ3QgY29tZSBldmVyeSBkYXkgYW5kIHRoZXkgaGF2ZSBwcm9iYWJseSBhbm90aGVyIHBsYWNlIHRvIHBsYXkgY2xvc2UgdG8gdGhlaXIgaG91c2UuIApObyBpcyBhIGNvbXBsZXRlIHNlbnRlbmNlLiBObywgeW91J3JlIG5vdCBzdGF5aW5nIGluIG91ciByb29tLiBObywgeW91J3JlIG5vdCBzdGF5aW5nIGluIG91ciBhcGFydG1lbnQuIE5vLCBubywgbm8uClNoYXJlaG9sZGVycyBhcmUgZ29pbmcgdG8gZXhwZWN0IHNvbWUgZm9ybSBvZiByZXR1cm4gb24gaW52ZXN0bWVudCBpbiB0aGUgZm9ybSBvZiBkaXZpZGVuZHMsIGFsc28gaG9sZGluZyBleHRyYSBtb25leSBiYWNrIGFzIGVpdGhlciBhIHJhaW55IGRheSBmdW5kIG9yIGZvciBSRCBvciBhbnkgb2YgYSBodW5kcmVkIG90aGVyIGV4cGVuZGl0dXJlcyBpc24gYSB0ZXJyaWJsZSBpZGVhLgpGb2xrIGludGVyZXNzZXJlZGUgaSBvdmVuc3RlbmRlIGFydGlrZWwgZXIgb2dzIGludGVyZXNzZXJldCBpIGRlIHJlbGF0ZXJlZGUgYXJ0aWtsZXIsIGRlciBlciBhbmdpdmV0IG5lZGVuZm9yOgpUaGUgZ2FtZSBnb3Qgb2ZmIHRvIGEgbGl2ZWx5IHN0YXJ0IHdpdGggTGVvIHN0YXIgU2luZWFkIERvb2d1ZSBuZXR0aW5nIGEgZ29hbCBhZnRlciBqdXN0IGZpdmUgbWludXRlcyBhZnRlciBSb2lzaW4gYW5kIFRyYWNleSBMZW9uYXJkIGhhZCBzZW50IG92ZXIgc2NvcmVzLiAKTWlzZXogYXZlYyBwcmNhdXRpb24uIApJbiBhZGRpdGlvbiwga2VlcCBpbiBtaW5kIHRoYXQgbW9zdCB5b3VuZyBhcnRpc3RzIGluIHRoZSBUT1AgNTAgUmFkaW8vaVR1bmVzL1Nwb3RpZnkvZXRjLCBhcmUgcHV0IHRoZXJlIGJ5IGEgc3Ryb25nIHRlYW0gb2YgcHJvbW90ZXJzICh0aGUgbWFya2V0aW5nIG5lZWRlZCBiZWhpbmQgdGhpcyBpcyByZWFsbHkgaW5zYW5lLCB3aXRoIGh1Z2UgYW1vdW50cyBvZiBjYXNoIGludm9sdmVkISEhKS4gQmVzaWRlcywgeW91IGNhbiBicmVhayBpbnRvIHRoZSBpbmR1c3RyeSwgdG91ciB3b3JsZHdpZGUsIGFuZCBzdGlsbCBub3Qgc2hvdyB1cCBpbiB0aGVzZSBjaGFydHMuIApUaGVpciB3b3JrIHdhcyByZWZsZWN0aW9uIG9uIHRydXRoIHRoYXQgYXNzdW1lZCB3aGF0IHdlIHdvdWxkIGNhbGwgYSByZWxpZ2lvdXMgd29ybGQgdmlldywgZXZlbiB0aG91Z2ggbm93IHdlIHRlbmQgdG8gY2xhc3MgUGxhdG8gYXMgYSBwaGlsb3NvcGhlciBhbmQgaWdub3JlIHdoYXQgaGUgc2F5cyBhYm91dCBHb2QuIEFzIGFub3RoZXIgZXhhbXBsZSwgdGhlcmUgd2VyZSBtZWRpZXZhbCBzdG9yaWVzIGFib3V0IGZhaXJpZXMgYW5kIG90aGVyIGJlaW5ncyB0aGF0IGRpZCBub3QgY29tZSBmcm9tIHRoZSB0cmFkaXRpb25hbCBDaHJpc3RpYW4gYmVsaWVmLCBhbmQgbWF5IGV2ZW4gaGF2ZSBiZWVuIG9mZmljaWFsbHkgZGlzY291cmFnZWQsIGJ1dCB3ZXJlIHN0aWxsIHBhcnQgb2Ygd2hhdCB3ZSBtaWdodCBjYWxsIHRoZSByZWxpZ2lvdXMgd29ybGR2aWV3IG9mIHBlb3BsZSBhdCB0aGUgdGltZS4gVGhleSBibGVuZGVkIHRoZWlyIENocmlzdGlhbml0eSB3aXRoIG90aGVyIGJlbGllZnMgYW5kIGZvbGsgcHJhY3RpY2VzLCBzdWNoIGFzIHVzaW5nIGNyb3NzZXMgdG8gcHJvdGVjdCBmcm9tIHRoZXNlIGNyZWF0dXJlcyBvciBhdm9pZGluZyBhbmNpZW50IHN0b25lIHJpbmdzLi4gCkRhcyBFcmZmbmVuIGVpbmVuIFNwaWVsa29udG9zIGlzdCBlaW5mYWNoLCBtYW4gcmVnaXN0cmllcnQgc2VpbmUgQWRyZXNzZSB1bmQgc2Nob24ga2FubiBlcyBsb3NnZWhlbi4gSmV0enQgYnJhdWNodCBtYW4gbnVyIGV0d2FzIEdlbGQgenVtIFBva2VybiBlaW56YWhsZW4uClNwZWNpZmljIHRyYWluaW5nIGluIFNNVCBhbGxvd3MgY2hpcm9wcmFjdG9ycyB0byBwcm92aWRlIGhpZ2hseSBza2lsbGVkIGFuZCBwcmVjaXNlIGFkanVzdG1lbnRzIHRvIHRoZSB2ZXJ0ZWJyYWUgb2YgdGhlIHNwaW5lLCBjb3JyZWN0aW5nIGpvaW50IG1vdGlvbiB0byByZXN0b3JlIHByb3BlciBtb3ZlbWVudCBhbmQgaW1wcm92ZSBmdW5jdGlvbi5Gb3IgbWFueSBjb25kaXRpb25zLCBzdWNoIGFzIGxvdyBiYWNrIHBhaW4sIGNoaXJvcHJhY3RpYyBjYXJlIGlzIHRoZSBwcmltYXJ5IG1ldGhvZCBvZiB0cmVhdG1lbnQuIFdoZW4gYSBtdWx0aSBkaXNjaXBsaW5hcnkgYXBwcm9hY2ggaXMgYWR2aXNhYmxlLCBhIGNoaXJvcHJhY3RvciB3aWxsIGNvb3JkaW5hdGUgY2FyZSB3aXRoIG90aGVyIGhlYWx0aCBjYXJlIHByb2Zlc3Npb25hbHMuIFdoZXJlIG90aGVyIGNvbmRpdGlvbnMgZXhpc3QsIGNoaXJvcHJhY3RpYyBjYXJlIG1heSBjb21wbGVtZW50IG9yIHN1cHBvcnQgbWVkaWNhbCBvciBvdGhlciB0cmVhdG1lbnQgYnkgcmVsaWV2aW5nIHRoZSBtdXNjdWxvc2tlbGV0YWwgYXNwZWN0cyBhc3NvY2lhdGVkIHdpdGggdGhlIGNvbmRpdGlvbi5UaGVyZSBhcmUgbWFueSByZWFzb25zIHRvIHNlZWsgY2hpcm9wcmFjdGljIGNhcmU6V2Ugb2ZmZXIgYSB2YXJpZXR5IG9mIHNlcnZpY2VzIGluY2x1ZGluZzpNeW9mYXNjaWFsIFJlbGVhc2UgVGhlcmFweSwgVWx0cmFzb3VuZCBUaGVyYXB5LCBSZWhhYmlsaXRhdGlvbiBTZXJ2aWNlcywgTW90b3IgVmVoaWNsZSBBY2NpZGVudCBDbGFpbXMgYW5kIFdvcmtwbGFjZSBTYWZldHkgSW5zdXJhbmNlIEJvYXJkIENsYWltcyAoV1NJQilQbGVhc2Ugbm90ZSB0aGF0IHlvdSBhcmUgcmVzcG9uc2libGUgZm9yIHBheW1lbnQgYXQgdGhlIHRpbWUgb2YgeW91ciBzZXJ2aWNlcy4gClRMO0RSIEkgYW1hemVkIGF0IGhvdyBjb21mb3J0YWJsZSBwZW9wbGUgYXJlIHdpdGggdGhlIHByaXZhY3kgdGhleSBhcmUgYXdhcmUgdGhleSBnaXZlIHVwIGJlY2F1c2UgSSBiYXJlbHkgc2NyYXRjaGluZyB0aGUgc3VyZmFjZSBvZiBob3cgd2Ugd2lsbCBiZSBpbXBhY3RlZCBieSB0aGlzIGluIHRoZSBsb25nIHJ1bi4KUGxlYXNlIGxvb2sgb24gZmIgZ3JvdXBzIHRvby4gTXkgbG9jYWwgImJ1eSBub3RoaW5nIGZhbWlsaWVzIiBncm91cCBoYXMgdG9ucyBvZiBmcmVlIGl0ZW1zIGFuZCBpIHNlZSBsb3RzIG9mIGZvbGtzIGNvbWluZyB0b2dldGhlciB0byBzdXBwb3J0IHVuZXhwZWN0ZWQgZXZlbnRzIGFuZCBmYW1pbGllcyBpbiBuZWVkICAgZnJlZSBjYXIgc2VhdHMsIGNsb3RoaW5nLCBkaWFwZXJzLCBmb29kIGZvciBiYWJ5IGFuZCBjYXJlZ2l2ZXIsIGFuZCBtb3JlLiAKV2UgZ2F2ZSB0aGVtIGEgcXVvdGUgYW55d2F5LCBidXQgdGhleSBoYWQgYWxyZWFkeSBzcGVjaWZpY2FsbHkgcmVxdWVzdGVkIGEgbGFib3Igb25seSBxdW90ZSBmb3IganVzdCBhIHJld29yayBvZiB0aGUgZXhpc3RpbmcgaGFyZHdhcmUsIHNvIEkgY29tcGxpZWQuIE5vdCB0b28gbG9uZyBhZ28gSSB3b3VsZG4gaGF2ZSBldmVuIGNvbnNpZGVyZWQgdGFraW5nIGEgam9iIGxpa2UgdGhhdC4gTm93IEkgd29yayBpbiBhIGNvbXBsZXRlbHkgZGlmZmVyZW50IGluZHVzdHJ5LiAKVW5mb3J0dW5hdGVseSBJIGhpdCB0aGUgY2hhcmFjdGVyIGxpbWl0IHNvIEkgYXBwcmVjaWF0ZSB0aGF0IHlvdSBwb2ludGVkIG91dCB0aGUgbWVldGluZyBiZXR3ZWVuIGEgZm9ybWVyIFJ1c3NpYW4gaW50ZWxsaWdlbmNlIGFnZW50IGFuZCB0aGUgVHJ1bXAgQ2FtcGFpZ24gTWFuYWdlciBhbmQgRGVwdXR5IENhbXBhaWduIE1hbmFnZXIgd2hpY2ggdG9vayBwbGFjZSBpbiBhIGJ1aWxkaW5nIG93bmVkIGJ5IEphcmVkIEt1c2huZXIuIApPdXIgIndhciIgaW52b2x2ZXMgVHdpdHRlciwgbm90IGFybSBzaGlwbWVudHMgZnJvbSBJc3JhZWwgb3IgQ3ViYS4uIApEb24gU3RlYWwhIE5ldmVyIHRha2UgZm9vZCB0aGF0IGlzbid0IHlvdXJzIGZyb20gdGhlIG9mZmljZSBraXRjaGVuIG9yIGZyaWRnZS4gQ2FyZWZ1bGx5IG1hcmsgeW91ciBvd24gZm9vZCB3aXRoIHlvdXIgbmFtZSBzbyBubyBvbmUgd2lsbCBiZSB0ZW1wdGVkIHRvIHN0ZWFsIGl0LiBJZiBhIHBsYXRlIG9mIGNvb2tpZXMgb3IgZG9udXRzIGlzIGxlZnQgb24gYSBicmVhayByb29tIHRhYmxlIGl0IGdlbmVyYWxseSBtZWFucyB0aGUgZm9vZCBpcyBhdmFpbGFibGUgZm9yIGFueW9uZSB3aG8gd2FudHMgaXQsIGJ1dCBvdGhlcndpc2UsIGtlZXAgeW91ciBoYW5kcyB0byB5b3Vyc2VsZi4uIApUaGlzIGlzIGEgZ3JlYXQgcmV2aWV3IHdpdGggYW4gaW50ZXJlc3RpbmcgaGlzdG9yaWNhbCBsZW5zIG9mIHRoZSBwaGVub21lbm9uLiBKdXN0IHJlYWQgdGhlIHBhcGVyLCBncm91bmRicmVha2luZyB3b3JrLiAKU2VsZWN0IE1MQiBMZWFndWUgQ2hhbXBpb25zaGlwIFNlcmllcyBhbmQgRGl2aXNpb24gU2VyaWVzIGdhbWVzIGFzIHdlbGwgYXMgcmVndWxhciBzZWFzb24gZ2FtZXMuIApTZWUsIHdlIGhhdmUgYSBmcmllbmQgb2Ygb3VycyB0aGF0IGhhcyBhIGRldGFjaGVkIGdhcmFnZSB0aGF0IHdhcyBmaW5pc2hlZCBhbmQgY29udmVydGVkIGludG8gYSBtaW5pIGNhc2luby4gClllYWgsIEkgZ2V0IHRoYXQuIApEaWdnYWRpZ2dhZGlnZ2EgdQpBZnRlciA3IHllYXJzIHdpdGggaXQgSSBjYW4gc2F5IGl0IGEgdmVyeSBzdHVyZHkgY2FyLCBoYW5kbGVzIGdyZWF0IGFuZCBJIGNhbiBwdXNoIG15c2VsZiB0byAzMm1wZyBjaXR5IGlmIEkgZHJpdmUgbGlrZSB0aGUgZWxkZXJseS4gRGVmaW5pdGVseSBoYXZlIGl0IGluc3BlY3RlZCBmb3IgcmVwbGFjZWQgcGFydHMvZGFtYWdlcy9wYXN0IGFjY2lkZW50cyBldGMgYW5kIGNoZWNrIHRoZSBpbnN1cmFuY2UgY29zdHMuIElmIGFsbCBvZiB0aGF0IGNoZWNrcyBvdXQgdGhlbiBJIHNheSBnbyBmb3IgaXQsIGV2ZW4gaWYgeW91IG5lZWQgdG8gZmluZCBhIGRpZmZlcmVudCB0QyB3aXRoIGEgaGVhbHRoaWVyIHJlY29yZC4gSSBsb3ZlIG15IFNjaW9uLgo=|<---