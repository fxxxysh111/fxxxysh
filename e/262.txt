<!DOCTYPE html>
<html lang="en-US">
 <head>
  <meta charset="utf-8"/>
  <meta content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=0" name="viewport"/>
  <meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible"/>
  <meta content="telephone=no" name="format-detection"/>
  <title>
   [area1][mkey1][keyword1][symbolx][area1][keywordx][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
 </head>
 <body class="page-template-default page page-id-1102 wpb-js-composer js-comp-ver-5.4.5 vc_responsive" data-adminbar="" itemscope="itemscope" itemtype="https://schema.org/WebPage">
  <div id="top-of-page">
  </div>
  <div id="mk-boxed-layout">
   <div id="mk-theme-container">
    <header class="mk-header header-style-1 header-align-left toolbar-false menu-hover-5 sticky-style-fixed mk-background-stretch boxed-header " data-header-style="1" data-height="90" data-responsive-height="90" data-sticky-height="55" data-sticky-offset="header" data-sticky-style="fixed" data-transparent-skin="" id="mk-header-1" itemscope="itemscope" itemtype="https://schema.org/WPHeader" role="banner">
     <div class="mk-header-holder">
      <div class="mk-header-inner add-header-height">
       <div class="mk-header-bg ">
       </div>
       <div class="mk-grid header-grid">
        <div class="mk-header-nav-container one-row-style menu-hover-style-5" itemscope="itemscope" itemtype="https://schema.org/SiteNavigationElement" role="navigation">
         <nav class="mk-main-navigation js-main-nav">
          <ul class="main-navigation-ul" id="menu-menu-gb">
           <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-home no-mega-menu" id="menu-item-1193">
            <a class="menu-item-link js-smooth-scroll" href="/en/">
             Home
            </a>
           </li>
           <li class="menu-item menu-item-type-post_type menu-item-object-page no-mega-menu" id="menu-item-1194">
            <a class="menu-item-link js-smooth-scroll" href="/en/actualites/">
             News
            </a>
           </li>
           <li class="menu-item menu-item-type-custom menu-item-object-custom current-menu-ancestor menu-item-has-children has-mega-menu" id="menu-item-1201">
            [link]
            
            <ul class="sub-menu mega_col_3" style="">
             <li class="menu-item menu-item-type-custom menu-item-object-custom current-menu-ancestor current-menu-parent menu-item-has-children mega_col_3 mk_mega_first" id="menu-item-1200">
              <div class="megamenu-title">
               Machines
              </div>
              <ul class="sub-menu mega_col_3" style="">
               <li class="menu-item menu-item-type-post_type menu-item-object-page current-menu-item page_item page-item-1102 current_page_item" id="menu-item-1192">
                <a class="menu-item-link js-smooth-scroll" href="/en/boss/">
                 BOSS : The undercut disc No-Till Drill
                </a>
               </li>
               <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-1371">
                <a class="menu-item-link js-smooth-scroll" href="/en/stripcat-2/">
                 Stripcat 2
                </a>
               </li>
              </ul>
             </li>
             <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children mega_col_3" id="menu-item-2529">
              <div class="megamenu-title">
               Rubber Tracks, Undercarriages, Wear Parts
              </div>
              <ul class="sub-menu mega_col_3" style="">
               <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-2530">
                [link]
                
               </li>
               <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-4278">
                <a class="menu-item-link js-smooth-scroll" href="/en/rubber-tracks/">
                 Rubber Tracks
                </a>
               </li>
              </ul>
             </li>
             <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children mega_col_3" id="menu-item-2140">
              <div class="megamenu-title">
               Equipment
              </div>
              <ul class="sub-menu mega_col_3" style="">
               <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-2141">
                [link]
                
               </li>
               <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-2142">
                <a class="menu-item-link js-smooth-scroll" href="/en/exadose/">
                 EXADOSE – LIQUID FERTILIZER CONTROLLER
                </a>
               </li>
              </ul>
             </li>
            </ul>
           </li>
           <li class="menu-item menu-item-type-post_type menu-item-object-page no-mega-menu" id="menu-item-1220">
            [ahref]
            
           </li>
           <li class="menu-item menu-item-type-post_type menu-item-object-page has-mega-menu" id="menu-item-1573">
            [link]
            
           </li>
           <li class="menu-item menu-item-type-post_type menu-item-object-page no-mega-menu" id="menu-item-1195">
            <a class="menu-item-link js-smooth-scroll" href="/en/contact-us/">
             Contact us
            </a>
           </li>
           <li class="menu-item-language menu-item wpml-ls-slot-13 wpml-ls-item wpml-ls-item-fr wpml-ls-menu-item wpml-ls-first-item menu-item-type-wpml_ls_menu_item menu-item-object-wpml_ls_menu_item no-mega-menu" id="menu-item-wpml-ls-13-fr">
            <h1>
             <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
            </h1>
            [link]
            
           </li>
           <li class="menu-item-language menu-item-language-current menu-item wpml-ls-slot-13 wpml-ls-item wpml-ls-item-en wpml-ls-current-language wpml-ls-menu-item wpml-ls-last-item menu-item-type-wpml_ls_menu_item menu-item-object-wpml_ls_menu_item no-mega-menu" id="menu-item-wpml-ls-13-en">
            [link]
            
           </li>
          </ul>
         </nav>
         <div class="main-nav-side-search">
          <a class="mk-search-trigger add-header-height mk-fullscreen-trigger" href="#">
           <i class="mk-svg-icon-wrapper">
            <svg class="mk-svg-icon" data-cacheid="icon-5c110b2acd7dd" data-name="mk-icon-search" style=" height:16px; width: 14.857142857143px; " viewbox="0 0 1664 1792" xmlns="http://www.w3.org/2000/svg">
             <path d="M1152 832q0-185-131.5-316.5t-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5 316.5-131.5 131.5-316.5zm512 832q0 52-38 90t-90 38q-54 0-90-38l-343-342q-179 124-399 124-143 0-273.5-55.5t-225-150-150-225-55.5-273.5 55.5-273.5 150-225 225-150 273.5-55.5 273.5 55.5 225 150 150 225 55.5 273.5q0 220-124 399l343 343q37 37 37 90z">
             </path>
            </svg>
           </i>
          </a>
         </div>
        </div>
        <div class="mk-nav-responsive-link">
         <div class="mk-css-icon-menu">
          <div class="mk-css-icon-menu-line-1">
          </div>
          <div class="mk-css-icon-menu-line-2">
          </div>
          <div class="mk-css-icon-menu-line-3">
          </div>
         </div>
        </div>
        <div class=" header-logo fit-logo-img add-header-height logo-has-sticky">
         <a href="/en/" title="SlyFrance">
         </a>
        </div>
       </div>
       <div class="mk-header-right">
       </div>
      </div>
      <div class="mk-responsive-wrap">
       <nav class="menu-menu-gb-container">
        <ul class="mk-responsive-nav" id="menu-menu-gb-1">
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-home" id="responsive-menu-item-1193">
          <a class="menu-item-link js-smooth-scroll" href="/en/">
           Home
          </a>
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page" id="responsive-menu-item-1194">
          [link]
          
         </li>
         <li class="menu-item menu-item-type-custom menu-item-object-custom current-menu-ancestor menu-item-has-children" id="responsive-menu-item-1201">
          [link]
          
          <span class="mk-nav-arrow mk-nav-sub-closed">
           <svg class="mk-svg-icon" data-cacheid="icon-5c110b2ad1ccf" data-name="mk-moon-arrow-down" style=" height:16px; width: 16px; " viewbox="0 0 512 512" xmlns="http://www.w3.org/2000/svg">
            <path d="M512 192l-96-96-160 160-160-160-96 96 256 255.999z">
            </path>
           </svg>
          </span>
          <ul class="sub-menu ">
           <li class="menu-item menu-item-type-custom menu-item-object-custom current-menu-ancestor current-menu-parent menu-item-has-children" id="responsive-menu-item-1200">
            [link]
            
            <span class="mk-nav-arrow mk-nav-sub-closed">
             <li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<li>[ahref]</li>[link]<li>[ahref]</li>[link]<li>[search]</li><li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[link]
            </span>
            <ul class="sub-menu ">
             <li class="menu-item menu-item-type-post_type menu-item-object-page current-menu-item page_item page-item-1102 current_page_item" id="responsive-menu-item-1192">
              <a class="menu-item-link js-smooth-scroll" href="/en/boss/">
               BOSS : The undercut disc No-Till Drill
              </a>
             </li>
             <li class="menu-item menu-item-type-post_type menu-item-object-page" id="responsive-menu-item-1371">
              [ahref]
              
             </li>
            </ul>
           </li>
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children" id="responsive-menu-item-2529">
            <a class="menu-item-link js-smooth-scroll" href="#">
             Rubber Tracks, Undercarriages, Wear Parts
            </a>
            <span class="mk-nav-arrow mk-nav-sub-closed">
             <svg class="mk-svg-icon" data-cacheid="icon-5c110b2ad24b4" data-name="mk-moon-arrow-down" style=" height:16px; width: 16px; " viewbox="0 0 512 512" xmlns="http://www.w3.org/2000/svg">
              <path d="M512 192l-96-96-160 160-160-160-96 96 256 255.999z">
              </path>
             </svg>
            </span>
            <ul class="sub-menu ">
             <li class="menu-item menu-item-type-post_type menu-item-object-page" id="responsive-menu-item-2530">
              <a class="menu-item-link js-smooth-scroll" href="/en/imts-tracks/">
               IMTS Tracks
              </a>
             </li>
             <li class="menu-item menu-item-type-post_type menu-item-object-page" id="responsive-menu-item-4278">
              [ahref]
              
             </li>
            </ul>
           </li>
           <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children" id="responsive-menu-item-2140">
            <a class="menu-item-link js-smooth-scroll" href="/en/exadose/">
             Equipment
            </a>
            <span class="mk-nav-arrow mk-nav-sub-closed">
             <svg class="mk-svg-icon" data-cacheid="icon-5c110b2ad2989" data-name="mk-moon-arrow-down" style=" height:16px; width: 16px; " viewbox="0 0 512 512" xmlns="http://www.w3.org/2000/svg">
              <path d="M512 192l-96-96-160 160-160-160-96 96 256 255.999z">
              </path>
             </svg>
            </span>
            <ul class="sub-menu ">
             <li class="menu-item menu-item-type-post_type menu-item-object-page" id="responsive-menu-item-2141">
              [ahref]
              
             </li>
             <li class="menu-item menu-item-type-post_type menu-item-object-page" id="responsive-menu-item-2142">
              <a class="menu-item-link js-smooth-scroll" href="/en/exadose/">
               EXADOSE – LIQUID FERTILIZER CONTROLLER
              </a>
             </li>
            </ul>
           </li>
          </ul>
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page" id="responsive-menu-item-1220">
          <a class="menu-item-link js-smooth-scroll" href="/en/entreprise/">
           Company
          </a>
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page" id="responsive-menu-item-1573">
          [link]
          
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page" id="responsive-menu-item-1195">
          <a class="menu-item-link js-smooth-scroll" href="/en/contact-us/">
           Contact us
          </a>
         </li>
         <li class="menu-item-language menu-item wpml-ls-slot-13 wpml-ls-item wpml-ls-item-fr wpml-ls-menu-item wpml-ls-first-item menu-item-type-wpml_ls_menu_item menu-item-object-wpml_ls_menu_item" id="responsive-menu-item-wpml-ls-13-fr">
          <a class="menu-item-link js-smooth-scroll" href="/boss/">
          </a>
         </li>
         <li class="menu-item-language menu-item-language-current menu-item wpml-ls-slot-13 wpml-ls-item wpml-ls-item-en wpml-ls-current-language wpml-ls-menu-item wpml-ls-last-item menu-item-type-wpml_ls_menu_item menu-item-object-wpml_ls_menu_item" id="responsive-menu-item-wpml-ls-13-en">
          <a class="menu-item-link js-smooth-scroll" href="/en/boss/">
          </a>
         </li>
        </ul>
       </nav>
       <form action="/en/" class="responsive-searchform" method="get">
        <i>
         <svg class="mk-svg-icon" data-cacheid="icon-5c110b2ad313d" data-name="mk-icon-search" viewbox="0 0 1664 1792" xmlns="http://www.w3.org/2000/svg">
          <path d="M1152 832q0-185-131.5-316.5t-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5 316.5-131.5 131.5-316.5zm512 832q0 52-38 90t-90 38q-54 0-90-38l-343-342q-179 124-399 124-143 0-273.5-55.5t-225-150-150-225-55.5-273.5 55.5-273.5 150-225 225-150 273.5-55.5 273.5 55.5 225 150 150 225 55.5 273.5q0 220-124 399l343 343q37 37 37 90z">
          </path>
         </svg>
        </i>
       </form>
      </div>
     </div>
     <div class="mk-header-padding-wrapper">
     </div>
    </header>
    <div class="master-holder clearfix" id="theme-page" itemscope='"itemscope"' itemtype='"https://schema.org/Blog"'>
     <div class="master-holder-bg-holder">
      <div class="master-holder-bg js-el" id="theme-page-bg">
      </div>
     </div>
     <div class="mk-main-wrapper-holder">
      <div class="theme-page-wrapper mk-main-wrapper mk-grid full-layout no-padding" id="mk-page-id-1102">
       <div class="theme-content no-padding" itemprop="mainEntityOfPage">
        <div class="mk-page-section-wrapper" data-mk-full-width="true" data-mk-full-width-init="true" data-mk-stretch-content="true">
         <div class="mk-page-section self-hosted full_layout full-width-2 js-el js-master-row mk-animate-element fade-in center-y" data-fullheight-config='{"min": 100}' data-intro-effect="false" data-mk-component="FullHeight" id="page-section-2">
          <div class="mk-page-section-inner">
           <div class="mk-video-color-mask">
           </div>
           <div class="background-layer-holder">
            <div class="background-layer mk-background-stretch none-blend-effect js-el" data-mk-img-set='{"landscape":{"desktop":"https://www.slyfrance.com/wp-content/uploads/2016/10/fond_boss11-1.jpg","tablet":"https://www.slyfrance.com/wp-content/uploads/2016/10/fond_boss11-1-1024x768.jpg","mobile":"https://www.slyfrance.com/wp-content/uploads/2016/10/fond_boss11-1-736x414.jpg"},"responsive":"true"}' data-mk-lazyload="false" id="background-layer--2">
             <div class="mk-color-layer">
             </div>
            </div>
           </div>
          </div>
          <div class="page-section-content vc_row-fluid mk-grid ">
           <div class="mk-padding-wrapper wpb_row">
            <div class="vc_col-sm-12 wpb_column column_container _ height-full">
             <div class="wpb_single_image wpb_content_element vc_align_center">
              <figure class="wpb_wrapper vc_figure">
               <div class="vc_single_image-wrapper vc_box_border_grey">
               </div>
              </figure>
             </div>
             <div class="vc_empty_space" style="height: 60px">
              <span class="vc_empty_space_inner">
              </span>
             </div>
             <h2 class="mk-fancy-title simple-style color-single" id="fancy-title-4">
              <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
             </h2>
             <div class="clearboth">
             </div>
            </div>
           </div>
           <div class="clearboth">
           </div>
          </div>
          <div class="mk-skip-to-next" data-skin="light">
           <svg class="mk-svg-icon" data-cacheid="icon-5c110b2adbc37" data-name="mk-jupiter-icon-arrow-bottom" style=" height:16px; width: 16px; " viewbox="0 0 512 512" xmlns="http://www.w3.org/2000/svg">
            <path d="M512 121.6c0 8-3.2 16-8 22.4l-225.6 240c-6.4 6.4-14.4 9.6-24 9.6-8 0-16-3.2-22.4-9.6l-224-240c-11.2-12.8-11.2-33.6 1.6-44.8 12.8-12.8 32-11.2 44.8 1.6l201.6 214.4 203.2-216c11.2-12.8 32-12.8 44.8 0 4.8 6.4 8 14.4 8 22.4z">
            </path>
           </svg>
          </div>
          <div class="clearboth">
          </div>
         </div>
        </div>
        <div class="vc_row-full-width vc_clearfix">
        </div>
        <div class="mk-page-section-wrapper" data-mk-full-width="true" data-mk-full-width-init="true" data-mk-stretch-content="true">
         <div class="mk-page-section self-hosted full_layout full-width-5 js-el js-master-row mk-animate-element top-to-bottom center-y" data-fullheight-config='{"min": 100}' data-intro-effect="false" data-mk-component="FullHeight" id="page-section-5">
          <div class="mk-page-section-inner">
           <div class="mk-video-color-mask">
           </div>
          </div>
          <div class="page-section-content vc_row-fluid mk-grid ">
           <div class="mk-padding-wrapper wpb_row">
            <div class="vc_col-sm-12 wpb_column column_container _ height-full">
             <div class="mk-text-block mk-animate-element top-to-bottom texte-classe" id="text-block-7">
              <p style="text-align: justify;">
               After years of experience in conservation tillage machinery, we have travelled the world to find a no-till coulter design we could adapt for European conditions. Weather and climate is constantly changing, conditions change, residue levels change, so choosing the correct coulter is vital to your success.
              </p>
              <p style="text-align: justify;">
               We quickly found out that the no-till drill which could fix most of these issues, is available in Australia, pioneers of the No-till technic, and made by BOSS. Cyrille and George then proposed to BOSS, a partnership whereby Sly and BOSS share experiences and technology.
              </p>
              <p style="text-align: justify;">
               We have then successfully combined years of BOSS's experience in the toughest conditions, with our knowledge of the European requirements and we end up with a new and innovative no-till drill.[link][search]<li>[search]</li><li>[search]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]<li>[search]</li>
              </p>
              <p style="text-align: justify;">
               We needed a name, it was obvious to us : The
              </p>
              <div class="clearboth">
              </div>
             </div>
            </div>
           </div>
           <div class="clearboth">
           </div>
          </div>
          <div class="mk-skip-to-next" data-skin="dark">
           <svg class="mk-svg-icon" data-cacheid="icon-5c110b2adc8dc" data-name="mk-jupiter-icon-arrow-bottom" style=" height:16px; width: 16px; " viewbox="0 0 512 512" xmlns="http://www.w3.org/2000/svg">
            <path d="M512 121.6c0 8-3.2 16-8 22.4l-225.6 240c-6.4 6.4-14.4 9.6-24 9.6-8 0-16-3.2-22.4-9.6l-224-240c-11.2-12.8-11.2-33.6 1.6-44.8 12.8-12.8 32-11.2 44.8 1.6l201.6 214.4 203.2-216c11.2-12.8 32-12.8 44.8 0 4.8 6.4 8 14.4 8 22.4z">
            </path>
           </svg>
          </div>
          <div class="clearboth">
          </div>
         </div>
        </div>
        <div class="vc_row-full-width vc_clearfix">
        </div>
        <div class="mk-page-section-wrapper" data-mk-full-width="true" data-mk-full-width-init="true" data-mk-stretch-content="true">
         <div class="mk-page-section self-hosted full_layout full-width-8 js-el js-master-row mk-animate-element fade-in center-y" data-fullheight-config='{"min": 100}' data-intro-effect="false" data-mk-component="FullHeight" id="page-section-8">
          <div class="mk-page-section-inner">
           <div class="mk-video-color-mask">
           </div>
           <div class="background-layer-holder">
            <div class="background-layer mk-background-stretch none-blend-effect js-el" data-mk-img-set='{"landscape":{"desktop":"https://www.slyfrance.com/wp-content/uploads/2016/10/fond-reflexion.jpg","tablet":"https://www.slyfrance.com/wp-content/uploads/2016/10/fond-reflexion-1024x768.jpg","mobile":"https://www.slyfrance.com/wp-content/uploads/2016/10/fond-reflexion-736x414.jpg"},"responsive":"true"}' data-mk-lazyload="false" id="background-layer--8">
             <div class="mk-color-layer">
             </div>
            </div>
           </div>
          </div>
          <div class="page-section-content vc_row-fluid mk-grid ">
           <div class="mk-padding-wrapper wpb_row">
            <div class="vc_col-sm-12 wpb_column column_container _ height-full">
             <h2 class="mk-fancy-title simple-style color-single" id="fancy-title-10">
              [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
             </h2>
             <div class="clearboth">
             </div>
             <div class="vc_empty_space" style="height: 170px">
              <span class="vc_empty_space_inner">
              </span>
             </div>
             <div class="mk-text-block " id="text-block-11">
              <p style="text-align: justify;">
               <span style="color: #ffffff;">
                [link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[link][ahref]
               </span>
              </p>
              <div class="clearboth">
              </div>
             </div>
            </div>
           </div>
           <div class="clearboth">
           </div>
          </div>
          <div class="mk-skip-to-next" data-skin="light">
           <svg class="mk-svg-icon" data-cacheid="icon-5c110b2adde37" data-name="mk-jupiter-icon-arrow-bottom" style=" height:16px; width: 16px; " viewbox="0 0 512 512" xmlns="http://www.w3.org/2000/svg">
            <path d="M512 121.6c0 8-3.2 16-8 22.4l-225.6 240c-6.4 6.4-14.4 9.6-24 9.6-8 0-16-3.2-22.4-9.6l-224-240c-11.2-12.8-11.2-33.6 1.6-44.8 12.8-12.8 32-11.2 44.8 1.6l201.6 214.4 203.2-216c11.2-12.8 32-12.8 44.8 0 4.8 6.4 8 14.4 8 22.4z">
            </path>
           </svg>
          </div>
          <div class="clearboth">
          </div>
         </div>
        </div>
        <div class="vc_row-full-width vc_clearfix">
        </div>
        <div class="mk-page-section-wrapper" data-mk-full-width="true" data-mk-full-width-init="true" data-mk-stretch-content="true">
         <div class="mk-page-section self-hosted full_layout full-width-12 js-el js-master-row mk-animate-element top-to-bottom center-y" data-fullheight-config='{"min": 100}' data-intro-effect="false" data-mk-component="FullHeight" id="page-section-12">
          <div class="mk-page-section-inner">
           <div class="mk-video-color-mask">
           </div>
          </div>
          <div class="page-section-content vc_row-fluid mk-grid ">
           <div class="mk-padding-wrapper wpb_row">
            <div class="vc_col-sm-12 wpb_column column_container _ height-full">
             <h2 class="mk-fancy-title mk-animate-element top-to-bottom simple-style color-single" id="fancy-title-14">
              [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
             </h2>
             <div class="clearboth">
             </div>
             <div class="wpb_single_image wpb_content_element vc_align_center">
              <figure class="wpb_wrapper vc_figure">
               <div class="vc_single_image-wrapper vc_box_border_grey">
               </div>
              </figure>
             </div>
             <h2 class="mk-fancy-title mk-animate-element top-to-bottom simple-style color-single" id="fancy-title-15">
              [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
             </h2>
             <div class="clearboth">
             </div>
            </div>
           </div>
           <div class="clearboth">
           </div>
          </div>
          <div class="mk-skip-to-next" data-skin="dark">
           <svg class="mk-svg-icon" data-cacheid="icon-5c110b2adf23c" data-name="mk-jupiter-icon-arrow-bottom" style=" height:16px; width: 16px; " viewbox="0 0 512 512" xmlns="http://www.w3.org/2000/svg">
            <path d="M512 121.6c0 8-3.2 16-8 22.4l-225.6 240c-6.4 6.4-14.4 9.6-24 9.6-8 0-16-3.2-22.4-9.6l-224-240c-11.2-12.8-11.2-33.6 1.6-44.8 12.8-12.8 32-11.2 44.8 1.6l201.6 214.4 203.2-216c11.2-12.8 32-12.8 44.8 0 4.8 6.4 8 14.4 8 22.4z">
            </path>
           </svg>
          </div>
          <div class="clearboth">
          </div>
         </div>
        </div>
        <div class="vc_row-full-width vc_clearfix">
        </div>
        <div class="mk-page-section-wrapper" data-mk-full-width="true" data-mk-full-width-init="true" data-mk-stretch-content="true">
         <div class="mk-page-section self-hosted full_layout full-width-16 js-el js-master-row mk-animate-element top-to-bottom center-y" data-fullheight-config='{"min": 100}' data-intro-effect="false" data-mk-component="FullHeight" id="page-section-16">
          <div class="mk-page-section-inner">
           <div class="mk-video-color-mask">
           </div>
          </div>
          <div class="page-section-content vc_row-fluid mk-grid ">
           <div class="mk-padding-wrapper wpb_row">
            <div class="vc_col-sm-12 wpb_column column_container _ height-full">
             <div class=" vc_custom_1544021231763">
              <div class="mk-text-block " id="text-block-18">
               <p style="text-align: justify;">
                <li>[search]</li>[link][ahref][search]<li>[search]</li><li>[ahref]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[search]</li>
               </p>
               <div class="clearboth">
               </div>
              </div>
             </div>
             <div class="vc_tta-container" data-vc-action="collapse">
              <div class="vc_general vc_tta vc_tta-tabs vc_tta-color-green vc_tta-style-modern vc_tta-shape-rounded vc_tta-o-shape-group vc_tta-tabs-position-left vc_tta-controls-align-left ">
               <div class="vc_tta-tabs-container">
                <ul class="vc_tta-tabs-list">
                 <li class="vc_tta-tab vc_active" data-vc-tab="">
                  <a data-vc-container=".vc_tta" data-vc-tabs="" href="b">
                   <span class="vc_tta-title-text">
                    V DOUBLE DISC WITH SIDE GAUGE[ahref]<li>[search]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[link]</li><li>[ahref]</li><li>[link]</li>[ahref][link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
                   </span>
                  </a>
                 </li>
                 <li class="vc_tta-tab" data-vc-tab="">
                  [link]
                  
                 </li>
                 <li class="vc_tta-tab" data-vc-tab="">
                  <a data-vc-container=".vc_tta" data-vc-tabs="" href="7">
                   <span class="vc_tta-title-text">
                    ANGLE DOUBLE DISC V
                   </span>
                  </a>
                 </li>
                </ul>
               </div>
               <div class="vc_tta-panels-container">
                <div class="vc_tta-panels">
                 <div class="vc_tta-panel vc_active" data-vc-content=".vc_tta-panel-body" id="1475669950381-58685aa8-7480gb">
                  <div class="vc_tta-panel-heading">
                   <h4 class="vc_tta-panel-title">
                    <a data-vc-accordion="" data-vc-container=".vc_tta-container" href="b">
                     <span class="vc_tta-title-text">
                      V DOUBLE DISC WITH SIDE GAUGE[link]<li>[ahref]</li>[link]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][link]<li>[link]</li><li>[search]</li>
                     </span>
                    </a>
                   </h4>
                  </div>
                  <div class="vc_tta-panel-body">
                   <div class="wpb_single_image wpb_content_element vc_align_center">
                    <figure class="wpb_wrapper vc_figure">
                     <div class="vc_single_image-wrapper vc_box_border_grey">
                     </div>
                    </figure>
                   </div>
                  </div>
                 </div>
                 <div class="vc_tta-panel" data-vc-content=".vc_tta-panel-body" id="1475669950610-7985f0b4-54d6gb">
                  <div class="vc_tta-panel-heading">
                   <h4 class="vc_tta-panel-title">
                    <a data-vc-accordion="" data-vc-container=".vc_tta-container" href="b">
                     <span class="vc_tta-title-text">
                      SINGLE DISC WITH SIDE GAUGE[ahref]<li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][link]<li>[search]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]
                     </span>
                    </a>
                   </h4>
                  </div>
                  <div class="vc_tta-panel-body">
                   <div class="wpb_single_image wpb_content_element vc_align_center">
                    <figure class="wpb_wrapper vc_figure">
                     <div class="vc_single_image-wrapper vc_box_border_grey">
                     </div>
                    </figure>
                   </div>
                  </div>
                 </div>
                 <div class="vc_tta-panel" data-vc-content=".vc_tta-panel-body" id="1475670340903-f93731f7-aa67">
                  <div class="vc_tta-panel-heading">
                   <h4 class="vc_tta-panel-title">
                    [link]
                    
                   </h4>
                  </div>
                  <div class="vc_tta-panel-body">
                   <div class="wpb_single_image wpb_content_element vc_align_center">
                    <figure class="wpb_wrapper vc_figure">
                     <div class="vc_single_image-wrapper vc_box_border_grey">
                     </div>
                    </figure>
                   </div>
                  </div>
                 </div>
                </div>
               </div>
              </div>
             </div>
             <div class="mk-text-block " id="text-block-19">
              <p style="text-align: justify;">
               <li>[search]</li><li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]<li>[search]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]
              </p>
              <div class="clearboth">
              </div>
             </div>
            </div>
           </div>
           <div class="clearboth">
           </div>
          </div>
          <div class="mk-skip-to-next" data-skin="dark">
           <svg class="mk-svg-icon" data-cacheid="icon-5c110b2b007d5" data-name="mk-jupiter-icon-arrow-bottom" style=" height:16px; width: 16px; " viewbox="0 0 512 512" xmlns="http://www.w3.org/2000/svg">
            <path d="M512 121.6c0 8-3.2 16-8 22.4l-225.6 240c-6.4 6.4-14.4 9.6-24 9.6-8 0-16-3.2-22.4-9.6l-224-240c-11.2-12.8-11.2-33.6 1.6-44.8 12.8-12.8 32-11.2 44.8 1.6l201.6 214.4 203.2-216c11.2-12.8 32-12.8 44.8 0 4.8 6.4 8 14.4 8 22.4z">
            </path>
           </svg>
          </div>
          <div class="clearboth">
          </div>
         </div>
        </div>
        <div class="vc_row-full-width vc_clearfix">
        </div>
        <div class="mk-page-section-wrapper" data-mk-full-width="true" data-mk-full-width-init="true" data-mk-stretch-content="true">
         <div class="mk-page-section self-hosted full_layout full-width-20 js-el js-master-row mk-animate-element top-to-bottom center-y" data-fullheight-config='{"min": 100}' data-intro-effect="false" data-mk-component="FullHeight" id="page-section-20">
          <div class="mk-page-section-inner">
           <div class="mk-video-color-mask">
           </div>
          </div>
          <div class="page-section-content vc_row-fluid mk-grid ">
           <div class="mk-padding-wrapper wpb_row">
            <div class="vc_col-sm-12 wpb_column column_container _ height-full">
             <h2 class="mk-fancy-title mk-animate-element top-to-bottom simple-style color-single" id="fancy-title-22">
              <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
             </h2>
             <div class="clearboth">
             </div>
             <div class="wpb_row vc_inner vc_row vc_row-fluid attched-false ">
              <div class="wpb_column vc_column_container vc_col-sm-4">
               <div class="vc_column-inner ">
                <div class="wpb_wrapper">
                 <div class="wpb_single_image wpb_content_element vc_align_center">
                  <figure class="wpb_wrapper vc_figure">
                   <div class="vc_single_image-wrapper vc_box_border_grey">
                   </div>
                  </figure>
                 </div>
                </div>
               </div>
              </div>
              <div class="wpb_column vc_column_container vc_col-sm-8">
               <div class="vc_column-inner ">
                <div class="wpb_wrapper">
                 <div class="mk-text-block " id="text-block-23">
                  <p style="text-align: justify;">
                   A concept that caught our eye in Australia was the double angled disc, also called the undercut disc. This solves many problems associated with no till seeding.
                  </p>
                  <p style="text-align: justify;">
                   When we run analysis on the double angled disc we found that the down pressure requirement was reduced and more manageable versus seed furrow compaction.
                  </p>
                  <div class="clearboth">
                  </div>
                 </div>
                 <div class="mk-message-box mk-confirm-message-box" id="box-24">
                  [link]
                  
                  <span>
                   We also observed the inflation of soil on the outside of the disc. If we place a gauge wheel at this position then sever localised compaction would occur.
                  </span>
                  <div class="clearboth">
                  </div>
                 </div>
                </div>
               </div>
              </div>
             </div>
             <div class="mk-fancy-table table-style1 ">
              <table width="100%">
               <thead>
                <tr>
                 <th>
                  Type of disc
                 </th>
                 <th>
                  Monodisc
                 </th>
                 <th>
                  V double disc
                 </th>
                 <th>
                  angle double disc V
                 </th>
                 <th>
                  Undercut disc
                 </th>
                 <th>
                  Undercut disc
                 </th>
                </tr>
                <tr>
                 <th class="tableau-soustitre">
                  Gauge type
                 </th>
                 <th class="tableau-soustitre">
                  Side
                 </th>
                 <th class="tableau-soustitre">
                  Side
                 </th>
                 <th class="tableau-soustitre">
                  Rear
                 </th>
                 <th class="tableau-soustitre">
                  Side
                 </th>
                 <th class="tableau-soustitre">
                  Rear
                 </th>
                </tr>
               </thead>
               <tbody>
                <tr>
                 <td>
                  Penetration in dry conditions
                 </td>
                 <td class="tableau-moins">
                  - -
                 </td>
                 <td class="tableau-moins">
                  -
                 </td>
                 <td class="tableau-moins">
                  - - -
                 </td>
                 <td class="tableau-plus">
                  +
                 </td>
                 <td class="tableau-plus">
                  + +
                 </td>
                </tr>
                <tr>
                 <td>
                  Closing the furrow in wet conditions
                 </td>
                 <td class="tableau-moins">
                  - -
                 </td>
                 <td class="tableau-moins">
                  - - -
                 </td>
                 <td class="tableau-moins">
                  -
                 </td>
                 <td class="tableau-moins">
                  -
                 </td>
                 <td class="tableau-plus">
                  + +
                 </td>
                </tr>
                <tr>
                 <td>
                  Residue in the furrow
                 </td>
                 <td class="tableau-moins">
                  -
                 </td>
                 <td class="tableau-moins">
                  - -
                 </td>
                 <td class="tableau-moins">
                  -
                 </td>
                 <td class="tableau-plus">
                  +
                 </td>
                 <td class="tableau-plus">
                  +
                 </td>
                </tr>
                <tr>
                 <td>
                  Depth control with residue
                 </td>
                 <td class="tableau-moins">
                  -
                 </td>
                 <td class="tableau-moins">
                  - -
                 </td>
                 <td class="tableau-moins">
                  -
                 </td>
                 <td class="tableau-moins">
                  -
                 </td>
                 <td class="tableau-plus">
                  +
                 </td>
                </tr>
               </tbody>
              </table>
             </div>
            </div>
           </div>
           <div class="clearboth">
           </div>
          </div>
          <div class="mk-skip-to-next" data-skin="dark">
           <svg class="mk-svg-icon" data-cacheid="icon-5c110b2b07ac7" data-name="mk-jupiter-icon-arrow-bottom" style=" height:16px; width: 16px; " viewbox="0 0 512 512" xmlns="http://www.w3.org/2000/svg">
            <path d="M512 121.6c0 8-3.2 16-8 22.4l-225.6 240c-6.4 6.4-14.4 9.6-24 9.6-8 0-16-3.2-22.4-9.6l-224-240c-11.2-12.8-11.2-33.6 1.6-44.8 12.8-12.8 32-11.2 44.8 1.6l201.6 214.4 203.2-216c11.2-12.8 32-12.8 44.8 0 4.8 6.4 8 14.4 8 22.4z">
            </path>
           </svg>
          </div>
          <div class="clearboth">
          </div>
         </div>
        </div>
        <div class="vc_row-full-width vc_clearfix">
        </div>
        <div class="mk-page-section-wrapper" data-mk-full-width="true" data-mk-full-width-init="true" data-mk-stretch-content="true">
         <div class="mk-page-section self-hosted full_layout full-width-25 js-el js-master-row mk-animate-element top-to-bottom center-y" data-fullheight-config='{"min": 100}' data-intro-effect="false" data-mk-component="FullHeight" id="page-section-25">
          <div class="mk-page-section-inner">
           <div class="mk-video-color-mask">
           </div>
          </div>
          <div class="page-section-content vc_row-fluid mk-grid ">
           <div class="mk-padding-wrapper wpb_row">
            <div class="vc_col-sm-12 wpb_column column_container _ height-full">
             <h2 class="mk-fancy-title mk-animate-element top-to-bottom simple-style color-single" id="fancy-title-27">
              <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
             </h2>
             <div class="clearboth">
             </div>
             <div class="wpb_single_image wpb_content_element vc_align_left">
              <figure class="wpb_wrapper vc_figure">
               <div class="vc_single_image-wrapper vc_box_border_grey">
               </div>
              </figure>
             </div>
             <div class="mk-text-block " id="text-block-28">
              <p style="text-align: center;">
               The Boss unit from Australia has been adapted by Sly for European conditions, it features a double angled disc, working by snatching.
              </p>
              <p style="text-align: center;">
               The gauge wheel is at the back of the unit and is also the closing wheel.<li>[link]</li>[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[link][search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
              </p>
              <p style="text-align: center;">
               The side wheel is mounted on a spring and acts as a scraper and keeps the soil in the furrow.[search][link]<li>[ahref]</li><li>[ahref]</li>[search][ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li><li>[link]</li>[link][link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]
              </p>
              <p style="text-align: center;">
               To manage residue a Sly row cleaner is available with pneumatic down pressure, controlled from the tractor cabin.<li>[link]</li>[search][ahref]<li>[ahref]</li>[ahref]<li>[ahref]</li><li>[ahref]</li><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li>[search][link]<li>[ahref]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[search]</li>[search][ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[ahref][ahref][search]
              </p>
              <div class="clearboth">
              </div>
             </div>
            </div>
           </div>
           <div class="clearboth">
           </div>
          </div>
          <div class="mk-skip-to-next" data-skin="dark">
           <svg class="mk-svg-icon" data-cacheid="icon-5c110b2b08f3b" data-name="mk-jupiter-icon-arrow-bottom" style=" height:16px; width: 16px; " viewbox="0 0 512 512" xmlns="http://www.w3.org/2000/svg">
            <path d="M512 121.6c0 8-3.2 16-8 22.4l-225.6 240c-6.4 6.4-14.4 9.6-24 9.6-8 0-16-3.2-22.4-9.6l-224-240c-11.2-12.8-11.2-33.6 1.6-44.8 12.8-12.8 32-11.2 44.8 1.6l201.6 214.4 203.2-216c11.2-12.8 32-12.8 44.8 0 4.8 6.4 8 14.4 8 22.4z">
            </path>
           </svg>
          </div>
          <div class="clearboth">
          </div>
         </div>
        </div>
        <div class="vc_row-full-width vc_clearfix">
        </div>
        <div class="mk-page-section-wrapper" data-mk-full-width="true" data-mk-full-width-init="true" data-mk-stretch-content="true">
         <div class="mk-page-section self-hosted full_layout full-width-29 js-el js-master-row mk-animate-element top-to-bottom center-y" data-fullheight-config='{"min": 100}' data-intro-effect="false" data-mk-component="FullHeight" id="page-section-29">
          <div class="mk-page-section-inner">
           <div class="mk-video-color-mask">
           </div>
          </div>
          <div class="page-section-content vc_row-fluid mk-grid ">
           <div class="mk-padding-wrapper wpb_row">
            <div class="vc_col-sm-12 wpb_column column_container _ height-full">
             <h2 class="mk-fancy-title simple-style color-single" id="fancy-title-31">
              [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
             </h2>
             <div class="clearboth">
             </div>
             <div class="wpb_row vc_inner vc_row vc_row-fluid attched-false ">
              <div class="wpb_column vc_column_container vc_col-sm-6">
               <div class="vc_column-inner ">
                <div class="wpb_wrapper">
                 <div class="mk-box-icon-2 icon-box-stripcat box-align-center " id="mk-icon-box-32">
                  <div class="mk-box-icon-2-icon size-64">
                   <svg class="mk-svg-icon" data-cacheid="icon-5c110b2b0a123" data-name="mk-li-shield" style=" height:64px; width: 56px; " viewbox="0 0 448 512" xmlns="http://www.w3.org/2000/svg">
                    <path d="M383.88 36.234c-76.637 0-153.358-29.919-154.125-30.226-3.878-1.533-8.2-1.456-12.016.199-.69.291-70.245 30.026-153.618 30.026-32.992 0-59.838 26.846-59.838 59.838v49.048c0 325.629 215.211 361.48 217.388 361.802.766.115 1.54.169 2.314.169.827 0 1.655-.061 2.467-.191 2.177-.345 217.266-38.387 217.266-361.779v-49.048c-.001-32.992-26.846-59.838-59.838-59.838zm28.447 108.885c0 280.46-164.891 325.346-188.358 330.304-21.803-4.659-188.296-49.569-188.296-330.304v-49.047c0-15.68 12.76-28.448 28.448-28.448 76.238 0 140.514-22.547 160.086-30.172 20.393 7.41 88.853 30.172 159.673 30.172 15.687 0 28.448 12.767 28.448 28.448v49.047zm-183.744-72.253c-2.062-1.471-4.72-1.854-7.111-1.026-33.345 11.495-85.872 25.52-146.76 27.053-4.253.1-7.648 3.586-7.648 7.84v38.387c0 231.765 118.166 286.146 154.384 297.289.683.214 1.441.314 2.2.314 1.058 0 2.131-.191 3.058-.529 3.104-1.118 5.172-4.069 5.172-7.372v-355.564c0-2.53-1.226-4.913-3.295-6.392zm-12.4 351.042c-41.253-16.507-133.424-76.192-133.424-278.789v-30.792c53.684-2.254 100.54-13.641 133.424-24.187v333.768z">
                    </path>
                   </svg>
                  </div>
                  <h3 class="mk-box-icon-2-title">
                   [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
                  </h3>
                  <p class="mk-box-icon-2-content">
                   <br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[link]
                  </p>
                 </div>
                 <div class="mk-box-icon-2 icon-box-stripcat box-align-center " id="mk-icon-box-33">
                  <div class="mk-box-icon-2-icon size-64">
                   <svg class="mk-svg-icon" data-cacheid="icon-5c110b2b0c2bf" data-name="mk-li-config" style=" height:64px; width: 64px; " viewbox="0 0 512 512" xmlns="http://www.w3.org/2000/svg">
                    <path d="M130.454 287.436v-235.474c0-26.003-21.083-47.086-47.086-47.086s-47.085 21.083-47.085 47.086v235.474c-19.029 14.323-31.39 37.023-31.39 62.674 0 25.65 12.362 48.358 31.39 62.673v47.254c0 26.003 21.083 47.086 47.086 47.086s47.086-21.083 47.086-47.086v-47.254c19.029-14.316 31.39-37.023 31.39-62.673-.001-25.651-12.362-48.351-31.391-62.674zm-62.781-235.474c0-8.653 7.042-15.695 15.695-15.695 8.652 0 15.695 7.042 15.695 15.695v221.25c-5.073-1.034-10.316-1.578-15.695-1.578-5.38 0-10.622.544-15.695 1.578v-221.25zm31.39 408.076c0 8.652-7.043 15.695-15.695 15.695-8.653 0-15.695-7.043-15.695-15.695v-33.031c5.073 1.034 10.315 1.579 15.695 1.579s10.622-.545 15.695-1.579v33.031zm-15.695-62.842c-25.965 0-47.086-21.121-47.086-47.086s21.121-47.086 47.086-47.086 47.086 21.121 47.086 47.086-21.121 47.086-47.086 47.086zm423.74-78.476c0-25.651-12.362-48.351-31.39-62.674v-204.084c0-26.003-21.083-47.086-47.086-47.086s-47.086 21.083-47.086 47.086v204.083c-19.029 14.323-31.39 37.023-31.39 62.674 0 25.65 12.362 48.358 31.39 62.673v78.645c0 26.003 21.083 47.086 47.086 47.086s47.086-21.083 47.086-47.086v-78.645c19.028-14.315 31.39-37.023 31.39-62.672zm-94.171-266.758c0-8.653 7.042-15.695 15.695-15.695 8.652 0 15.695 7.042 15.695 15.695v189.859c-5.073-1.034-10.316-1.578-15.695-1.578-5.38 0-10.622.544-15.695 1.578v-189.859zm31.39 408.076c0 8.652-7.043 15.695-15.695 15.695-8.653 0-15.695-7.043-15.695-15.695v-64.421c5.073 1.034 10.315 1.579 15.695 1.579s10.622-.545 15.695-1.579v64.421zm-15.695-94.233c-25.965 0-47.086-21.121-47.086-47.086s21.121-47.086 47.086-47.086 47.086 21.121 47.086 47.086-21.122 47.086-47.086 47.086zm-125.562-266.642v-47.2c0-26.003-21.083-47.086-47.086-47.086s-47.086 21.083-47.086 47.086v47.2c-19.029 14.316-31.39 37.019-31.39 62.666 0 25.654 12.362 48.358 31.39 62.677v235.532c0 26.003 21.083 47.086 47.086 47.086s47.086-21.083 47.086-47.086v-235.532c19.029-14.32 31.39-37.023 31.39-62.677.001-25.647-12.361-48.351-31.39-62.666zm-62.78-47.201c0-8.653 7.042-15.695 15.695-15.695 8.652 0 15.695 7.042 15.695 15.695v32.969c-5.073-1.027-10.316-1.579-15.695-1.579-5.38 0-10.622.552-15.695 1.579v-32.969zm31.39 408.076c0 8.652-7.043 15.695-15.695 15.695-8.653 0-15.695-7.043-15.695-15.695v-221.304c5.073 1.026 10.315 1.571 15.695 1.571s10.622-.545 15.695-1.571v221.304zm-15.695-251.124c-25.965 0-47.086-21.121-47.086-47.086 0-25.957 21.121-47.086 47.086-47.086s47.086 21.129 47.086 47.086c-.001 25.965-21.122 47.086-47.086 47.086z">
                    </path>
                   </svg>
                  </div>
                  <h3 class="mk-box-icon-2-title">
                   [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
                  </h3>
                  <p class="mk-box-icon-2-content">
                   ADJUSTMENT
                   <br>
                    [search]<li>[search]</li>[ahref]<li>[search]</li><li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][link]<li>[ahref]</li>[search]<li>[link]</li>
                   </br>
                   Easy, fast and without any tool
                  </p>
                 </div>
                 <div class="mk-box-icon-2 icon-box-stripcat box-align-center " id="mk-icon-box-34">
                  <div class="mk-box-icon-2-icon size-64">
                   <svg class="mk-svg-icon" data-cacheid="icon-5c110b2b0c9e3" data-name="mk-li-net" style=" height:64px; width: 56px; " viewbox="0 0 448 512" xmlns="http://www.w3.org/2000/svg">
                    <path d="M396.632 399.525v-119.952c0-34.617-28.164-62.781-62.781-62.781h-94.171v-104.325c22.677-6.759 39.238-27.75 39.238-52.626 0-30.344-24.608-54.937-54.933-54.937-30.34 0-54.933 24.593-54.933 54.937 0 24.88 16.554 45.875 39.238 52.63v104.322h-94.171c-34.617 0-62.781 28.163-62.781 62.781v119.955c-22.669 6.767-39.207 27.751-39.207 52.627 0 30.336 24.593 54.933 54.933 54.933 30.325 0 54.933-24.597 54.933-54.933 0-24.896-16.576-45.894-39.268-52.638v-119.945c0-17.305 14.079-31.39 31.39-31.39h94.171v151.346c-22.684 6.76-39.238 27.751-39.238 52.635 0 30.336 24.593 54.933 54.933 54.933 30.325 0 54.933-24.597 54.933-54.933 0-24.884-16.561-45.875-39.238-52.631v-151.35h94.171c17.312 0 31.39 14.086 31.39 31.39v119.947c-22.684 6.76-39.238 27.751-39.238 52.635 0 30.336 24.593 54.933 54.933 54.933 30.325 0 54.933-24.597 54.933-54.933.001-24.883-16.56-45.874-39.237-52.63zm-196.19-339.684c0-12.982 10.56-23.547 23.543-23.547 12.982 0 23.543 10.564 23.543 23.547s-10.561 23.543-23.543 23.543c-12.983-.001-23.543-10.561-23.543-23.543zm-109.836 392.314c0 12.982-10.561 23.543-23.543 23.543s-23.543-10.56-23.543-23.543c0-12.982 10.561-23.547 23.543-23.547s23.543 10.565 23.543 23.547zm156.922.008c0 12.982-10.561 23.543-23.543 23.543s-23.543-10.561-23.543-23.543c0-12.986 10.56-23.547 23.543-23.547 12.982.001 23.543 10.561 23.543 23.547zm133.409 23.535c-12.982 0-23.543-10.561-23.543-23.543s10.56-23.547 23.543-23.547c12.982 0 23.543 10.564 23.543 23.547s-10.561 23.543-23.543 23.543z">
                    </path>
                   </svg>
                  </div>
                  <h3 class="mk-box-icon-2-title">
                   [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
                  </h3>
                  <p class="mk-box-icon-2-content">
                   <li>[link]</li><li>[search]</li><li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li><li>[ahref]</li><li>[link]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
                  </p>
                 </div>
                </div>
               </div>
              </div>
              <div class="wpb_column vc_column_container vc_col-sm-6">
               <div class="vc_column-inner ">
                <div class="wpb_wrapper">
                 <div class="vc_empty_space" style="height: 20px">
                  <span class="vc_empty_space_inner">
                  </span>
                 </div>
                 <div class="mk-image mk-image-35 align-left simple-frame inside-image " style="margin-bottom:10px">
                  <div class="mk-image-container" style="max-width: 580px;">
                   <div class="mk-image-holder" style="max-width: 580px;">
                    <div class="mk-image-inner ">
                    </div>
                   </div>
                   <div class="clearboth">
                   </div>
                  </div>
                 </div>
                </div>
               </div>
              </div>
             </div>
            </div>
           </div>
           <div class="clearboth">
           </div>
          </div>
          <div class="mk-skip-to-next" data-skin="light">
           <svg class="mk-svg-icon" data-cacheid="icon-5c110b2b0da77" data-name="mk-jupiter-icon-arrow-bottom" style=" height:16px; width: 16px; " viewbox="0 0 512 512" xmlns="http://www.w3.org/2000/svg">
            <path d="M512 121.6c0 8-3.2 16-8 22.4l-225.6 240c-6.4 6.4-14.4 9.6-24 9.6-8 0-16-3.2-22.4-9.6l-224-240c-11.2-12.8-11.2-33.6 1.6-44.8 12.8-12.8 32-11.2 44.8 1.6l201.6 214.4 203.2-216c11.2-12.8 32-12.8 44.8 0 4.8 6.4 8 14.4 8 22.4z">
            </path>
           </svg>
          </div>
          <div class="clearboth">
          </div>
         </div>
        </div>
        <div class="vc_row-full-width vc_clearfix">
        </div>
        <div class="mk-page-section-wrapper" data-mk-full-width="true" data-mk-full-width-init="true" data-mk-stretch-content="true">
         <div class="mk-page-section self-hosted full_layout full-width-36 js-el js-master-row mk-animate-element top-to-bottom center-y" data-fullheight-config='{"min": 100}' data-intro-effect="false" data-mk-component="FullHeight" id="page-section-36">
          <div class="mk-page-section-inner">
           <div class="mk-video-color-mask">
           </div>
           <div class="background-layer-holder">
            <div class="background-layer mk-background-stretch none-blend-effect js-el" data-mk-img-set='{"landscape":{"desktop":"https://www.slyfrance.com/wp-content/uploads/2015/09/ingold.jpg","tablet":"https://www.slyfrance.com/wp-content/uploads/2015/09/ingold-1024x768.jpg","mobile":"https://www.slyfrance.com/wp-content/uploads/2015/09/ingold-736x414.jpg"},"responsive":"true"}' data-mk-lazyload="false" id="background-layer--36">
             <div class="mk-color-layer">
             </div>
            </div>
           </div>
          </div>
          <div class="page-section-content vc_row-fluid mk-grid ">
           <div class="mk-padding-wrapper wpb_row">
            <div class="vc_col-sm-12 wpb_column column_container _ height-full">
             <h2 class="mk-fancy-title mk-animate-element top-to-bottom simple-style color-single" id="fancy-title-38">
              <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
             </h2>
             <div class="clearboth">
             </div>
             <div class="vc_empty_space" style="height: 100px">
              <span class="vc_empty_space_inner">
               <li>[ahref]</li><li>[link]</li><li>[link]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][search]<li>[link]</li>
              </span>
             </div>
             <div class="wpb_row vc_inner vc_row vc_row-fluid attched-false ">
              <div class="wpb_column vc_column_container vc_col-sm-6">
               <div class="vc_column-inner ">
                <div class="wpb_wrapper">
                 <div class="mk-image mk-image-39 align-left simple-frame inside-image " style="margin-bottom:10px">
                  <div class="mk-image-container" style="max-width: 669px;">
                   <div class="mk-image-holder" style="max-width: 669px;">
                    <div class="mk-image-inner ">
                    </div>
                   </div>
                   <div class="clearboth">
                   </div>
                  </div>
                 </div>
                </div>
               </div>
              </div>
              <div class="wpb_column vc_column_container vc_col-sm-6">
               <div class="vc_column-inner ">
                <div class="wpb_wrapper">
                 <div class="mk-text-block " id="text-block-40">
                  <h3>
                   [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
                  </h3>
                  <p style="text-align: justify;">
                   The double angled disc of the BOSS drill works by snatching. Thanks to his conception, it always try to get more and more in the ground according to speed and depth. The faster and the deeper you you, the less pressure you’ll need.
                   <br/>
                   This ensure a great furrow quality : clean and less pack or even « unpack », which will allows a seed germintation and root development.
                  </p>
                  <div class="clearboth">
                  </div>
                 </div>
                </div>
               </div>
              </div>
             </div>
            </div>
           </div>
           <div class="clearboth">
           </div>
          </div>
          <div class="mk-skip-to-next" data-skin="dark">
           <svg class="mk-svg-icon" data-cacheid="icon-5c110b2b0fc3f" data-name="mk-jupiter-icon-arrow-bottom" style=" height:16px; width: 16px; " viewbox="0 0 512 512" xmlns="http://www.w3.org/2000/svg">
            <path d="M512 121.6c0 8-3.2 16-8 22.4l-225.6 240c-6.4 6.4-14.4 9.6-24 9.6-8 0-16-3.2-22.4-9.6l-224-240c-11.2-12.8-11.2-33.6 1.6-44.8 12.8-12.8 32-11.2 44.8 1.6l201.6 214.4 203.2-216c11.2-12.8 32-12.8 44.8 0 4.8 6.4 8 14.4 8 22.4z">
            </path>
           </svg>
          </div>
          <div class="clearboth">
          </div>
         </div>
        </div>
        <div class="vc_row-full-width vc_clearfix">
        </div>
        <div class="mk-page-section-wrapper" data-mk-full-width="true" data-mk-full-width-init="true" data-mk-stretch-content="true">
         <div class="mk-page-section self-hosted full_layout full-width-41 js-el js-master-row mk-animate-element top-to-bottom center-y" data-fullheight-config='{"min": 100}' data-intro-effect="false" data-mk-component="FullHeight" id="page-section-41">
          <div class="mk-page-section-inner">
           <div class="mk-video-color-mask">
           </div>
          </div>
          <div class="page-section-content vc_row-fluid mk-grid ">
           <div class="mk-padding-wrapper wpb_row">
            <div class="vc_col-sm-12 wpb_column column_container _ height-full">
             <h2 class="mk-fancy-title mk-animate-element top-to-bottom simple-style color-single" id="fancy-title-43">
              [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
             </h2>
             <div class="clearboth">
             </div>
             <div class="vc_empty_space" style="height: 20px">
              <span class="vc_empty_space_inner">
               <li>[search]</li><li>[link]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]
              </span>
             </div>
             <div class="wpb_row vc_inner vc_row vc_row-fluid attched-false ">
              <div class="wpb_column vc_column_container vc_col-sm-6">
               <div class="vc_column-inner ">
                <div class="wpb_wrapper">
                 <div class="mk-text-block " id="text-block-44">
                  <h3 style="text-align: center;">
                   [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
                  </h3>
                  <div class="clearboth">
                  </div>
                 </div>
                 <div class="wpb_single_image wpb_content_element vc_align_left">
                  <figure class="wpb_wrapper vc_figure">
                   <div class="vc_single_image-wrapper vc_box_border_grey">
                   </div>
                  </figure>
                 </div>
                </div>
               </div>
              </div>
              <div class="wpb_column vc_column_container vc_col-sm-6">
               <div class="vc_column-inner ">
                <div class="wpb_wrapper">
                 <div class="vc_empty_space" style="height: 100px">
                  <span class="vc_empty_space_inner">
                  </span>
                 </div>
                 <div class="mk-text-block " id="text-block-45">
                  <div class="page" title="Page 4">
                   <div class="section">
                    <div class="layoutArea">
                     <div class="column">
                      <p style="text-align: justify;">
                       The unit is mounted on a parallelogram. Down pressure is achieved via hydro-pneumatics.
                      </p>
                      <p style="text-align: justify;">
                       Connected to a sensor on the gauge wheel, the hydraulic down pressure allows ultimate control of the coulter pressure. This gives an ideal situation to monitor and control furrow compaction and depth.
                      </p>
                     </div>
                    </div>
                   </div>
                  </div>
                  <div class="clearboth">
                  </div>
                 </div>
                </div>
               </div>
              </div>
             </div>
            </div>
           </div>
           <div class="clearboth">
           </div>
          </div>
          <div class="mk-skip-to-next" data-skin="dark">
           <svg class="mk-svg-icon" data-cacheid="icon-5c110b2b11698" data-name="mk-jupiter-icon-arrow-bottom" style=" height:16px; width: 16px; " viewbox="0 0 512 512" xmlns="http://www.w3.org/2000/svg">
            <path d="M512 121.6c0 8-3.2 16-8 22.4l-225.6 240c-6.4 6.4-14.4 9.6-24 9.6-8 0-16-3.2-22.4-9.6l-224-240c-11.2-12.8-11.2-33.6 1.6-44.8 12.8-12.8 32-11.2 44.8 1.6l201.6 214.4 203.2-216c11.2-12.8 32-12.8 44.8 0 4.8 6.4 8 14.4 8 22.4z">
            </path>
           </svg>
          </div>
          <div class="clearboth">
          </div>
         </div>
        </div>
        <div class="vc_row-full-width vc_clearfix">
        </div>
        <div class="mk-page-section-wrapper" data-mk-full-width="true" data-mk-full-width-init="true" data-mk-stretch-content="true">
         <div class="mk-page-section self-hosted full_layout full-width-46 js-el js-master-row mk-animate-element top-to-bottom center-y" data-fullheight-config='{"min": 100}' data-intro-effect="false" data-mk-component="FullHeight" id="page-section-46">
          <div class="mk-page-section-inner">
           <div class="mk-video-color-mask">
           </div>
          </div>
          <div class="page-section-content vc_row-fluid mk-grid ">
           <div class="mk-padding-wrapper wpb_row">
            <div class="vc_col-sm-12 wpb_column column_container _ height-full">
             <h2 class="mk-fancy-title mk-animate-element top-to-bottom simple-style color-single" id="fancy-title-48">
              <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
             </h2>
             <div class="clearboth">
             </div>
             <div class="vc_empty_space" style="height: 100px">
              <span class="vc_empty_space_inner">
              </span>
             </div>
             <div class="wpb_row vc_inner vc_row vc_row-fluid attched-false ">
              <div class="wpb_column vc_column_container vc_col-sm-6">
               <div class="vc_column-inner ">
                <div class="wpb_wrapper">
                 <div class="vc_empty_space" style="height: 100px">
                  <span class="vc_empty_space_inner">
                  </span>
                 </div>
                 <div class="mk-text-block " id="text-block-49">
                  <p style="text-align: justify;">
                   Farmers very rarely use precision planters without row cleaners in no-till, so why do we do it with drills? The Boss concept greatly reduces hair pinning when following a crop like wheat with chopped straw. The use of row cleaners is optional but it allows the owner of the drill to choose which solution is correct on a given day, since no day is the same and no field is the same.<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[search]</li>[ahref]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
                  </p>
                  <div class="clearboth">
                  </div>
                 </div>
                </div>
               </div>
              </div>
              <div class="wpb_column vc_column_container vc_col-sm-6">
               <div class="vc_column-inner ">
                <div class="wpb_wrapper">
                 <div class="mk-text-block " id="text-block-50">
                  <h3 style="text-align: center;">
                   [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
                  </h3>
                  <div class="clearboth">
                  </div>
                 </div>
                 <div class="wpb_single_image wpb_content_element vc_align_left">
                  <figure class="wpb_wrapper vc_figure">
                   <div class="vc_single_image-wrapper vc_box_border_grey">
                   </div>
                  </figure>
                 </div>
                </div>
               </div>
              </div>
             </div>
            </div>
           </div>
           <div class="clearboth">
           </div>
          </div>
          <div class="mk-skip-to-next" data-skin="dark">
           <svg class="mk-svg-icon" data-cacheid="icon-5c110b2b12e87" data-name="mk-jupiter-icon-arrow-bottom" style=" height:16px; width: 16px; " viewbox="0 0 512 512" xmlns="http://www.w3.org/2000/svg">
            <path d="M512 121.6c0 8-3.2 16-8 22.4l-225.6 240c-6.4 6.4-14.4 9.6-24 9.6-8 0-16-3.2-22.4-9.6l-224-240c-11.2-12.8-11.2-33.6 1.6-44.8 12.8-12.8 32-11.2 44.8 1.6l201.6 214.4 203.2-216c11.2-12.8 32-12.8 44.8 0 4.8 6.4 8 14.4 8 22.4z">
            </path>
           </svg>
          </div>
          <div class="clearboth">
          </div>
         </div>
        </div>
        <div class="vc_row-full-width vc_clearfix">
        </div>
        <div class="mk-page-section-wrapper" data-mk-full-width="true" data-mk-full-width-init="true" data-mk-stretch-content="true">
         <div class="mk-page-section self-hosted full_layout full-width-51 js-el js-master-row mk-animate-element top-to-bottom center-y" data-fullheight-config='{"min": 100}' data-intro-effect="false" data-mk-component="FullHeight" id="page-section-51">
          <div class="mk-page-section-inner">
           <div class="mk-video-color-mask">
           </div>
          </div>
          <div class="page-section-content vc_row-fluid mk-grid ">
           <div class="mk-padding-wrapper wpb_row">
            <div class="vc_col-sm-12 wpb_column column_container _ height-full">
             <h2 class="mk-fancy-title mk-animate-element top-to-bottom simple-style color-single" id="fancy-title-53">
              [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
             </h2>
             <div class="clearboth">
             </div>
             <div class="vc_empty_space" style="height: 100px">
              <span class="vc_empty_space_inner">
              </span>
             </div>
             <div class="wpb_row vc_inner vc_row vc_row-fluid attched-false ">
              <div class="wpb_column vc_column_container vc_col-sm-6">
               <div class="vc_column-inner ">
                <div class="wpb_wrapper">
                 <div class="wpb_single_image wpb_content_element vc_align_left">
                  <figure class="wpb_wrapper vc_figure">
                   <div class="vc_single_image-wrapper vc_box_border_grey">
                   </div>
                  </figure>
                 </div>
                </div>
               </div>
              </div>
              <div class="wpb_column vc_column_container vc_col-sm-6">
               <div class="vc_column-inner ">
                <div class="wpb_wrapper">
                 <div class="mk-text-block " id="text-block-54">
                  <p style="text-align: justify;">
                   <p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>[link][link][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
                  </p>
                  <div class="clearboth">
                  </div>
                 </div>
                </div>
               </div>
              </div>
             </div>
            </div>
           </div>
           <div class="clearboth">
           </div>
          </div>
          <div class="mk-skip-to-next" data-skin="dark">
           <svg class="mk-svg-icon" data-cacheid="icon-5c110b2b144ba" data-name="mk-jupiter-icon-arrow-bottom" style=" height:16px; width: 16px; " viewbox="0 0 512 512" xmlns="http://www.w3.org/2000/svg">
            <path d="M512 121.6c0 8-3.2 16-8 22.4l-225.6 240c-6.4 6.4-14.4 9.6-24 9.6-8 0-16-3.2-22.4-9.6l-224-240c-11.2-12.8-11.2-33.6 1.6-44.8 12.8-12.8 32-11.2 44.8 1.6l201.6 214.4 203.2-216c11.2-12.8 32-12.8 44.8 0 4.8 6.4 8 14.4 8 22.4z">
            </path>
           </svg>
          </div>
          <div class="clearboth">
          </div>
         </div>
        </div>
        <div class="vc_row-full-width vc_clearfix">
        </div>
        <div class="mk-page-section-wrapper" data-mk-full-width="true" data-mk-full-width-init="true" data-mk-stretch-content="true">
         <div class="mk-page-section self-hosted full_layout full-width-55 js-el js-master-row mk-animate-element top-to-bottom center-y" data-fullheight-config='{"min": 100}' data-intro-effect="false" data-mk-component="FullHeight" id="page-section-55">
          <div class="mk-page-section-inner">
           <div class="mk-video-color-mask">
           </div>
           <div class="background-layer-holder">
            <div class="background-layer mk-background-stretch none-blend-effect js-el" data-mk-img-set='{"landscape":{"desktop":"https://www.slyfrance.com/wp-content/uploads/2016/10/fond_boss09.jpg","tablet":"https://www.slyfrance.com/wp-content/uploads/2016/10/fond_boss09-1024x768.jpg","mobile":"https://www.slyfrance.com/wp-content/uploads/2016/10/fond_boss09-736x414.jpg"},"responsive":"true"}' data-mk-lazyload="false" id="background-layer--55">
             <div class="mk-color-layer">
             </div>
            </div>
           </div>
          </div>
          <div class="page-section-content vc_row-fluid mk-grid ">
           <div class="mk-padding-wrapper wpb_row">
            <div class="vc_col-sm-12 wpb_column column_container _ height-full">
             <h2 class="mk-fancy-title mk-animate-element top-to-bottom simple-style color-single" id="fancy-title-57">
              [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
             </h2>
             <div class="clearboth">
             </div>
             <div class="mk-text-block " id="text-block-58">
              <p style="text-align: center;">
               The gauge of the unit can be done either by the rear closing wheel or the side wheel.
               <br/>
               We intentionally chose to allow both. It all comes down to the same problem, no condition is the same, our customers must have flexibility.
              </p>
              <div class="clearboth">
              </div>
             </div>
             <div class="vc_empty_space" style="height: 100px">
              <span class="vc_empty_space_inner">
               [search]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][search][ahref]<li>[link]</li>
              </span>
             </div>
             <div class="wpb_row vc_inner vc_row vc_row-fluid attched-false ">
              <div class="wpb_column vc_column_container vc_col-sm-6">
               <div class="vc_column-inner ">
                <div class="wpb_wrapper">
                 <div class="mk-text-block " id="text-block-59">
                  <h3 style="text-align: justify;">
                   [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
                  </h3>
                  <p style="text-align: justify;">
                   This position will be the most accurate to drill in the best conditions or on prepared soil where there is no problems of penetration or furrow closure (fields that may have been lightly tilled or are in very good condition post harvest). The wheel is close to the seed boot and so depth control is like a precision planter.
                  </p>
                  <div class="clearboth">
                  </div>
                 </div>
                </div>
               </div>
              </div>
              <div class="wpb_column vc_column_container vc_col-sm-6">
               <div class="vc_column-inner ">
                <div class="wpb_wrapper">
                 <div class="mk-text-block " id="text-block-60">
                  <h3 style="text-align: justify;">
                   [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
                  </h3>
                  <p style="text-align: justify;">
                   The position will be the more efficient and accurate in pure no-till conditions: The gauge wheel is the closing wheel which is running on a cleaned row to improve depth control. In no-till, a gauge wheel on the side runs on crop residue, which means that the depth can be inaccurate and is very susceptible to the condition of the field and what residue is left. As we have found residue effects furrow compaction and a sold side wheel can increase sidewall compaction so rear gauging is preferred in no-till.[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
                  </p>
                  <div class="clearboth">
                  </div>
                 </div>
                </div>
               </div>
              </div>
             </div>
            </div>
           </div>
           <div class="clearboth">
           </div>
          </div>
          <div class="mk-skip-to-next" data-skin="dark">
           <svg class="mk-svg-icon" data-cacheid="icon-5c110b2b15fa3" data-name="mk-jupiter-icon-arrow-bottom" style=" height:16px; width: 16px; " viewbox="0 0 512 512" xmlns="http://www.w3.org/2000/svg">
            <path d="M512 121.6c0 8-3.2 16-8 22.4l-225.6 240c-6.4 6.4-14.4 9.6-24 9.6-8 0-16-3.2-22.4-9.6l-224-240c-11.2-12.8-11.2-33.6 1.6-44.8 12.8-12.8 32-11.2 44.8 1.6l201.6 214.4 203.2-216c11.2-12.8 32-12.8 44.8 0 4.8 6.4 8 14.4 8 22.4z">
            </path>
           </svg>
          </div>
          <div class="clearboth">
          </div>
         </div>
        </div>
        <div class="vc_row-full-width vc_clearfix">
        </div>
        <div class="mk-page-section-wrapper" data-mk-full-width="true" data-mk-full-width-init="true" data-mk-stretch-content="true">
         <div class="mk-page-section self-hosted full_layout full-width-61 js-el js-master-row mk-animate-element top-to-bottom center-y" data-fullheight-config='{"min": 100}' data-intro-effect="false" data-mk-component="FullHeight" id="page-section-61">
          <div class="mk-page-section-inner">
           <div class="mk-video-color-mask">
           </div>
          </div>
          <div class="page-section-content vc_row-fluid mk-grid ">
           <div class="mk-padding-wrapper wpb_row">
            <div class="vc_col-sm-12 wpb_column column_container _ height-full">
             <h2 class="mk-fancy-title mk-animate-element top-to-bottom simple-style color-single" id="fancy-title-63">
              <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
             </h2>
             <div class="clearboth">
             </div>
             <div class="wpb_row vc_inner vc_row vc_row-fluid attched-false ">
              <div class="wpb_column vc_column_container vc_col-sm-12">
               <div class="vc_column-inner ">
                <div class="wpb_wrapper">
                 <div class="mk-text-block " id="text-block-64">
                  <p>
                   [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[search][ahref]<li>[search]</li>[link]<li>[link]</li>[link][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>
                  </p>
                  <div class="clearboth">
                  </div>
                 </div>
                </div>
               </div>
              </div>
             </div>
             <div class="wpb_row vc_inner vc_row vc_row-fluid attched-false ">
              <div class="wpb_column vc_column_container vc_col-sm-6">
               <div class="vc_column-inner ">
                <div class="wpb_wrapper">
                 <div class="mk-text-block " id="text-block-65">
                  <p>
                   Adjustable without tools<li>[link]</li>[link][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link]
                  </p>
                  <div class="clearboth">
                  </div>
                 </div>
                 <div class="wpb_single_image wpb_content_element vc_align_center">
                  <figure class="wpb_wrapper vc_figure">
                   <div class="vc_single_image-wrapper vc_box_border_grey">
                   </div>
                  </figure>
                 </div>
                </div>
               </div>
              </div>
              <div class="wpb_column vc_column_container vc_col-sm-6">
               <div class="vc_column-inner ">
                <div class="wpb_wrapper">
                 <div class="mk-text-block " id="text-block-66">
                  <p>
                   Adjustable with a 24mm spanner<li>[ahref]</li><li>[search]</li><li>[link]</li><li>[link]</li>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li>[search][link][link][search]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]
                  </p>
                  <div class="clearboth">
                  </div>
                 </div>
                 <div class="wpb_single_image wpb_content_element vc_align_center">
                  <figure class="wpb_wrapper vc_figure">
                   <div class="vc_single_image-wrapper vc_box_border_grey">
                   </div>
                  </figure>
                 </div>
                </div>
               </div>
              </div>
             </div>
            </div>
           </div>
           <div class="clearboth">
           </div>
          </div>
          <div class="mk-skip-to-next" data-skin="dark">
           <svg class="mk-svg-icon" data-cacheid="icon-5c110b2b184c3" data-name="mk-jupiter-icon-arrow-bottom" style=" height:16px; width: 16px; " viewbox="0 0 512 512" xmlns="http://www.w3.org/2000/svg">
            <path d="M512 121.6c0 8-3.2 16-8 22.4l-225.6 240c-6.4 6.4-14.4 9.6-24 9.6-8 0-16-3.2-22.4-9.6l-224-240c-11.2-12.8-11.2-33.6 1.6-44.8 12.8-12.8 32-11.2 44.8 1.6l201.6 214.4 203.2-216c11.2-12.8 32-12.8 44.8 0 4.8 6.4 8 14.4 8 22.4z">
            </path>
           </svg>
          </div>
          <div class="clearboth">
          </div>
         </div>
        </div>
        <div class="vc_row-full-width vc_clearfix">
        </div>
        <div class="mk-page-section-wrapper" data-mk-full-width="true" data-mk-full-width-init="true" data-mk-stretch-content="true">
         <div class="mk-page-section self-hosted full_layout full-width-67 js-el js-master-row mk-animate-element top-to-bottom center-y" data-fullheight-config='{"min": 100}' data-intro-effect="false" data-mk-component="FullHeight" id="page-section-67">
          <div class="mk-page-section-inner">
           <div class="mk-video-color-mask">
           </div>
          </div>
          <div class="page-section-content vc_row-fluid mk-grid ">
           <div class="mk-padding-wrapper wpb_row">
            <div class="vc_col-sm-12 wpb_column column_container _ height-full">
             <h2 class="mk-fancy-title mk-animate-element top-to-bottom simple-style color-single" id="fancy-title-69">
              [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
             </h2>
             <div class="clearboth">
             </div>
             <div class="wpb_row vc_inner vc_row vc_row-fluid attched-false ">
              <div class="wpb_column vc_column_container vc_col-sm-12">
               <div class="vc_column-inner ">
                <div class="wpb_wrapper">
                 <div class="mk-text-block " id="text-block-70">
                  <p style="text-align: center;">
                   [search]<li>[ahref]</li>[link]<li>[ahref]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[search]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]
                  </p>
                  <div class="clearboth">
                  </div>
                 </div>
                </div>
               </div>
              </div>
             </div>
             <div class="wpb_single_image wpb_content_element vc_align_center">
              <figure class="wpb_wrapper vc_figure">
               <div class="vc_single_image-wrapper vc_box_border_grey">
               </div>
              </figure>
             </div>
            </div>
           </div>
           <div class="clearboth">
           </div>
          </div>
          <div class="mk-skip-to-next" data-skin="dark">
           <svg class="mk-svg-icon" data-cacheid="icon-5c110b2b1b8d3" data-name="mk-jupiter-icon-arrow-bottom" style=" height:16px; width: 16px; " viewbox="0 0 512 512" xmlns="http://www.w3.org/2000/svg">
            <path d="M512 121.6c0 8-3.2 16-8 22.4l-225.6 240c-6.4 6.4-14.4 9.6-24 9.6-8 0-16-3.2-22.4-9.6l-224-240c-11.2-12.8-11.2-33.6 1.6-44.8 12.8-12.8 32-11.2 44.8 1.6l201.6 214.4 203.2-216c11.2-12.8 32-12.8 44.8 0 4.8 6.4 8 14.4 8 22.4z">
            </path>
           </svg>
          </div>
          <div class="clearboth">
          </div>
         </div>
        </div>
        <div class="vc_row-full-width vc_clearfix">
        </div>
        <div class="mk-page-section-wrapper" data-mk-full-width="true" data-mk-full-width-init="true" data-mk-stretch-content="true">
         <div class="mk-page-section self-hosted full_layout full-width-71 js-el js-master-row center-y" data-fullheight-config='{"min": 400}' data-intro-effect="false" data-mk-component="FullHeight" id="page-section-71">
          <div class="mk-page-section-inner">
           <div class="mk-video-color-mask">
           </div>
          </div>
          <div class="page-section-content vc_row-fluid mk-grid ">
           <div class="mk-padding-wrapper wpb_row">
            <div class="vc_col-sm-12 wpb_column column_container _ height-full">
             <div class="wpb_single_image wpb_content_element vc_align_center vc_custom_1478275719007">
              <figure class="wpb_wrapper vc_figure">
               <div class="vc_single_image-wrapper vc_box_border_grey">
               </div>
              </figure>
             </div>
             <div class="wpb_row vc_inner vc_row vc_row-fluid attched-false ">
              <div class="wpb_column vc_column_container vc_col-sm-3">
               <div class="vc_column-inner ">
                <div class="wpb_wrapper">
                </div>
               </div>
              </div>
              <div class="wpb_column vc_column_container vc_col-sm-3">
               <div class="vc_column-inner ">
                <div class="wpb_wrapper">
                 <div class="wpb_single_image wpb_content_element vc_align_center vc_custom_1536135509204">
                  <figure class="wpb_wrapper vc_figure">
                   <a class="vc_single_image-wrapper vc_box_border_grey" href="/wp-content/uploads/pdf/180827_SLY_BOSS_FR.pdf" target="_blank">
                   </a>
                  </figure>
                 </div>
                 <div class="mk-button-container _ relative block text-center " id="mk-button-73">
                  [link]
                  
                 </div>
                </div>
               </div>
              </div>
              <div class="wpb_column vc_column_container vc_col-sm-3">
               <div class="vc_column-inner ">
                <div class="wpb_wrapper">
                 <div class="wpb_single_image wpb_content_element vc_align_center vc_custom_1539080145667">
                  <figure class="wpb_wrapper vc_figure">
                   [link]
                   
                  </figure>
                 </div>
                 <div class="mk-button-container _ relative block text-center " id="mk-button-74">
                  [link]
                  
                 </div>
                </div>
               </div>
              </div>
              <div class="wpb_column vc_column_container vc_col-sm-3">
               <div class="vc_column-inner ">
                <div class="wpb_wrapper">
                </div>
               </div>
              </div>
             </div>
             <div class="vc_empty_space" style="height: 20px">
              <span class="vc_empty_space_inner">
              </span>
             </div>
             <div class=" vc_custom_1533562823725">
              <div class="mk-text-block " id="text-block-75">
               <div class="grid-gallery grid-gallery-fixed " data-area-position="center" data-caption-disabled-on-mobile="false" data-caption-font-family="Default" data-caption-mobile="false" data-caption-text-size="14px" data-fullscreen="false" data-gg-id="1" data-grid-type="0" data-height="180" data-hide-long-tltp-title="0" data-hide-tooltip="false" data-icons="false" data-is-mobile="0" data-offset="5.3" data-padding="0" data-popup-background="#000000" data-popup-border-color="" data-popup-border-enable="" data-popup-border-type="solid" data-popup-border-width="" data-popup-disable-changed-url="" data-popup-disable-history="" data-popup-heightsize="auto" data-popup-hoverstop="true" data-popup-i18n-words='{"close":"close","next":"next","previous":"previous","start_slideshow":"start slideshow","stop_slideshow":"stop slideshow","image":"image","of":"of","prev":"prev","cExpand":"Expand","cPrevious":"Previous","cNext":"Next","cExpandStr":"Expand the image","cRotate":"Rotate","cDetails":"Details"}' data-popup-image-text="data-description" data-popup-placement-type="0" data-popup-slideshow="false" data-popup-slideshow-auto="false" data-popup-slideshow-speed="2500" data-popup-theme="theme_6" data-popup-transparency="10" data-popup-type="pretty-photo" data-popup-widthsize="auto" data-preloader="false" data-quicksand="disabled" data-quicksand-duration="none" data-social-sharing='{"enabled":"","gallerySharing":{"enabled":null,"position":null},"imageSharing":{"enabled":null,"wrapperClass":" vertical \n "},"popupSharing":{"enabled":null,"wrapperClass":" vertical \n "}}' data-title="Boss" data-width="180" id="grid-gallery-1-81964" style=" width:100%; height:auto ; margin-left:auto; margin-right:auto; position:relative;">
                <div class="gallery-sharing-top">
                </div>
                <div class="grid-gallery-photos " id="photos-1">
                 [link]
                 
                 [link]
                 
                 [ahref]
                 
                 [link]
                 
                 [ahref]
                 
                 [ahref]
                 
                 <a class="gg-link " data-rel="prettyPhoto[pp_gal]" href="/wp-content/uploads/2016/10/dcup_double_1.jpg?gid=1" id="gg-1-7" style="border-radius: 0px;" target="_self" title="dcup_double_1">
                  <figure class="grid-gallery-caption " data-grid-gallery-type="quarter-slide-up" data-index="6" style="display:none;border-radius: 0px; ; margin: 5.3px; width:180px;">
                   <div class="crop " style=" width:180px; height:180px; overflow:hidden; ">
                   </div>
                   <figcaption class="" data-alpha="5" style="color:#ffffff; background-color:#6f0000; font-size:14px; text-align:left; font-family:Default;">
                    <div class="grid-gallery-figcaption-wrap" style=" vertical-align:top; ">
                    </div>
                   </figcaption>
                  </figure>
                 </a>
                 [link]
                 
                 [ahref]
                 
                 [ahref]
                 
                 [ahref]
                 
                 [link]
                 
                 <a class="gg-link " data-rel="prettyPhoto[pp_gal]" href="/wp-content/uploads/2016/10/bdsc_0479b.jpg?gid=1" id="gg-1-15" style="border-radius: 0px;" target="_self" title="semoir Boss">
                  <figure class="grid-gallery-caption " data-grid-gallery-type="quarter-slide-up" data-index="12" style="display:none;border-radius: 0px; ; margin: 5.3px; width:180px;">
                   <div class="crop " style=" width:180px; height:180px; overflow:hidden; ">
                   </div>
                   <figcaption class="" data-alpha="5" style="color:#ffffff; background-color:#6f0000; font-size:14px; text-align:left; font-family:Default;">
                    <div class="grid-gallery-figcaption-wrap" style=" vertical-align:top; ">
                    </div>
                   </figcaption>
                  </figure>
                 </a>
                 <a class="gg-link " data-rel="prettyPhoto[pp_gal]" href="/wp-content/uploads/2016/10/14.jpg?gid=1" id="gg-1-17" style="border-radius: 0px;" target="_self" title="sillon boss">
                  <figure class="grid-gallery-caption " data-grid-gallery-type="quarter-slide-up" data-index="13" style="display:none;border-radius: 0px; ; margin: 5.3px; width:180px;">
                   <div class="crop " style=" width:180px; height:180px; overflow:hidden; ">
                   </div>
                   <figcaption class="" data-alpha="5" style="color:#ffffff; background-color:#6f0000; font-size:14px; text-align:left; font-family:Default;">
                    <div class="grid-gallery-figcaption-wrap" style=" vertical-align:top; ">
                    </div>
                   </figcaption>
                  </figure>
                 </a>
                 <a class="gg-link " data-rel="prettyPhoto[pp_gal]" href="/wp-content/uploads/2016/10/6-1.jpg?gid=1" id="gg-1-18" style="border-radius: 0px;" target="_self" title="roue de rappui boss">
                  <figure class="grid-gallery-caption " data-grid-gallery-type="quarter-slide-up" data-index="14" style="display:none;border-radius: 0px; ; margin: 5.3px; width:180px;">
                   <div class="crop " style=" width:180px; height:180px; overflow:hidden; ">
                   </div>
                   <figcaption class="" data-alpha="5" style="color:#ffffff; background-color:#6f0000; font-size:14px; text-align:left; font-family:Default;">
                    <div class="grid-gallery-figcaption-wrap" style=" vertical-align:top; ">
                    </div>
                   </figcaption>
                  </figure>
                 </a>
                 <a class="gg-link " data-rel="prettyPhoto[pp_gal]" href="/wp-content/uploads/2016/10/5-1.jpg?gid=1" id="gg-1-19" style="border-radius: 0px;" target="_self" title="roue/rasette">
                  <figure class="grid-gallery-caption " data-grid-gallery-type="quarter-slide-up" data-index="15" style="display:none;border-radius: 0px; ; margin: 5.3px; width:180px;">
                   <div class="crop " style=" width:180px; height:180px; overflow:hidden; ">
                   </div>
                   <figcaption class="" data-alpha="5" style="color:#ffffff; background-color:#6f0000; font-size:14px; text-align:left; font-family:Default;">
                    <div class="grid-gallery-figcaption-wrap" style=" vertical-align:top; ">
                    </div>
                   </figcaption>
                  </figure>
                 </a>
                 [ahref]
                 
                 <a class="gg-link " data-rel="prettyPhoto[pp_gal]" href="/wp-content/uploads/2018/08/20170504_190049-1.jpg?gid=1" id="gg-1-6" style="border-radius: 0px;" target="_self" title="20170504_190049">
                  <figure class="grid-gallery-caption " data-grid-gallery-type="quarter-slide-up" data-index="17" style="display:none;border-radius: 0px; ; margin: 5.3px; width:180px;">
                   <div class="crop " style=" width:180px; height:180px; overflow:hidden; ">
                   </div>
                   <figcaption class="" data-alpha="5" style="color:#ffffff; background-color:#6f0000; font-size:14px; text-align:left; font-family:Default;">
                    <div class="grid-gallery-figcaption-wrap" style=" vertical-align:top; ">
                    </div>
                   </figcaption>
                  </figure>
                 </a>
                 <div class="grid-gallery-clearfix">
                 </div>
                </div>
                <div class="gallery-sharing-bottom">
                </div>
                <div class="grid-gallery-clearfix">
                </div>
               </div>
               <div class="clearboth">
               </div>
              </div>
             </div>
            </div>
           </div>
           <div class="clearboth">
           </div>
          </div>
          <div class="mk-skip-to-next" data-skin="light">
           <svg class="mk-svg-icon" data-cacheid="icon-5c110b2b315f5" data-name="mk-jupiter-icon-arrow-bottom" style=" height:16px; width: 16px; " viewbox="0 0 512 512" xmlns="http://www.w3.org/2000/svg">
            <path d="M512 121.6c0 8-3.2 16-8 22.4l-225.6 240c-6.4 6.4-14.4 9.6-24 9.6-8 0-16-3.2-22.4-9.6l-224-240c-11.2-12.8-11.2-33.6 1.6-44.8 12.8-12.8 32-11.2 44.8 1.6l201.6 214.4 203.2-216c11.2-12.8 32-12.8 44.8 0 4.8 6.4 8 14.4 8 22.4z">
            </path>
           </svg>
          </div>
          <div class="clearboth">
          </div>
         </div>
        </div>
        <div class="vc_row-full-width vc_clearfix">
        </div>
        <div class="mk-page-section-wrapper" data-mk-full-width="true" data-mk-full-width-init="true" data-mk-stretch-content="true">
         <div class="mk-page-section self-hosted full_layout full-width-76 js-el js-master-row mk-animate-element top-to-bottom center-y" data-fullheight-config='{"min": 100}' data-intro-effect="false" data-mk-component="FullHeight" id="page-section-76">
          <div class="mk-page-section-inner">
           <div class="mk-video-mask">
           </div>
           <div class="mk-video-color-mask">
           </div>
           <div class="background-layer-holder">
            <div class="background-layer mk-background-stretch none-blend-effect js-el" data-mk-img-set='{"landscape":{"desktop":"https://www.slyfrance.com/wp-content/uploads/2016/10/fond_boss01.jpg","tablet":"https://www.slyfrance.com/wp-content/uploads/2016/10/fond_boss01-1024x768.jpg","mobile":"https://www.slyfrance.com/wp-content/uploads/2016/10/fond_boss01-736x414.jpg"},"responsive":"true"}' data-mk-lazyload="false" id="background-layer--76">
             <div class="mk-color-layer">
             </div>
            </div>
           </div>
          </div>
          <div class="page-section-content vc_row-fluid mk-grid ">
           <div class="mk-padding-wrapper wpb_row">
            <div class="vc_col-sm-12 wpb_column column_container _ height-full">
             <div class="vc_btn3-container vc_btn3-center">
              [ahref]
              
             </div>
            </div>
           </div>
           <div class="clearboth">
           </div>
          </div>
          <div class="clearboth">
          </div>
         </div>
        </div>
        <div class="vc_row-full-width vc_clearfix">
        </div>
        <div class="clearboth">
        </div>
        <div class="clearboth">
        </div>
       </div>
       <div class="clearboth">
       </div>
      </div>
     </div>
    </div>
    <section id="mk-footer-unfold-spacer">
    </section>
    <section class="" id="mk-footer" itemscope="itemscope" itemtype="https://schema.org/WPFooter" role="contentinfo">
     <div class="footer-wrapper mk-grid">
      <div class="mk-padding-wrapper">
       <div class="mk-col-1-4">
        <section class="widget widget_contact_info" id="contact_info-2">
         <div class="widgettitle">
          Contact us
         </div>
         <ul itemscope="itemscope" itemtype="https://schema.org/Person">
          <li>
           <svg class="mk-svg-icon" data-cacheid="icon-5c110b2b37af1" data-name="mk-moon-office" style=" height:16px; width: 16px; " viewbox="0 0 512 512" xmlns="http://www.w3.org/2000/svg">
            <path d="M0 512h256v-512h-256v512zm160-448h64v64h-64v-64zm0 128h64v64h-64v-64zm0 128h64v64h-64v-64zm-128-256h64v64h-64v-64zm0 128h64v64h-64v-64zm0 128h64v64h-64v-64zm256-160h224v32h-224zm0 352h64v-128h96v128h64v-288h-224z">
            </path>
           </svg>
           <span itemprop="jobTitle">
            SLY france SAS
           </span>
          </li>
          <li>
           <svg class="mk-svg-icon" data-cacheid="icon-5c110b2b37d5a" data-name="mk-icon-home" style=" height:16px; width: 14.857142857143px; " viewbox="0 0 1664 1792" xmlns="http://www.w3.org/2000/svg">
            <path d="M1408 992v480q0 26-19 45t-45 19h-384v-384h-256v384h-384q-26 0-45-19t-19-45v-480q0-1 .5-3t.5-3l575-474 575 474q1 2 1 6zm223-69l-62 74q-8 9-21 11h-3q-13 0-21-7l-692-577-692 577q-12 8-24 7-13-2-21-11l-62-74q-8-10-7-23.5t11-21.5l719-599q32-26 76-26t76 26l244 204v-195q0-14 9-23t23-9h192q14 0 23 9t9 23v408l219 182q10 8 11 21.5t-7 23.5z">
            </path>
           </svg>
           <span itemprop="address" itemscope="" itemtype="http://schema.org/PostalAddress">
            La Madeleine
            <br>
             [link][link]<li>[search]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[ahref]</li><li>[ahref]</li>
            </br>
            47210 Bournel
           </span>
          </li>
          <li>
           <svg class="mk-svg-icon" data-cacheid="icon-5c110b2b37f92" data-name="mk-icon-phone" style=" height:16px; width: 12.571428571429px; " viewbox="0 0 1408 1792" xmlns="http://www.w3.org/2000/svg">
            <path d="M1408 1240q0 27-10 70.5t-21 68.5q-21 50-122 106-94 51-186 51-27 0-52.5-3.5t-57.5-12.5-47.5-14.5-55.5-20.5-49-18q-98-35-175-83-128-79-264.5-215.5t-215.5-264.5q-48-77-83-175-3-9-18-49t-20.5-55.5-14.5-47.5-12.5-57.5-3.5-52.5q0-92 51-186 56-101 106-122 25-11 68.5-21t70.5-10q14 0 21 3 18 6 53 76 11 19 30 54t35 63.5 31 53.5q3 4 17.5 25t21.5 35.5 7 28.5q0 20-28.5 50t-62 55-62 53-28.5 46q0 9 5 22.5t8.5 20.5 14 24 11.5 19q76 137 174 235t235 174q2 1 19 11.5t24 14 20.5 8.5 22.5 5q18 0 46-28.5t53-62 55-62 50-28.5q14 0 28.5 7t35.5 21.5 25 17.5q25 15 53.5 31t63.5 35 54 30q70 35 76 53 3 7 3 21z">
            </path>
           </svg>
           <span>
            +33 (0)5 53 40 32 95[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[ahref]<li>[search]</li>
           </span>
          </li>
          <li>
           <svg class="mk-svg-icon" data-cacheid="icon-5c110b2b3820a" data-name="mk-icon-envelope" viewbox="0 0 1792 1792" xmlns="http://www.w3.org/2000/svg">
            <path d="M1792 710v794q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-794q44 49 101 87 362 246 497 345 57 42 92.5 65.5t94.5 48 110 24.5h2q51 0 110-24.5t94.5-48 92.5-65.5q170-123 498-345 57-39 100-87zm0-294q0 79-49 151t-122 123q-376 261-468 325-10 7-42.5 30.5t-54 38-52 32.5-57.5 27-50 9h-2q-23 0-50-9t-57.5-27-52-32.5-54-38-42.5-30.5q-91-64-262-182.5t-205-142.5q-62-42-117-115.5t-55-136.5q0-78 41.5-130t118.5-52h1472q65 0 112.5 47t47.5 113z">
            </path>
           </svg>
           <span>
            <li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][link]<li>[search]</li>[ahref][search]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
           </span>
          </li>
         </ul>
        </section>
        <section class="widget_text widget widget_custom_html" id="custom_html-2">
         <div class="widgettitle">
          Legal
         </div>
         <div class="textwidget custom-html-widget">
          [link]
          
         </div>
        </section>
       </div>
       <div class="mk-col-1-4">
        <section class="widget widget_social_networks" id="social-3">
         <div class="widgettitle">
          Follow us
         </div>
         <div class="align-left" id="social-5c110b2b38571">
          <a alt="Follow Us on facebook" class="builtin-icons dark large facebook-hover" href="/SLY-France-197619160284804/" rel="nofollow" target="_blank" title="Follow Us on facebook">
           <svg class="mk-svg-icon" data-cacheid="icon-5c110b2b38757" data-name="mk-jupiter-icon-facebook" style=" height:32px; width: 32px; " viewbox="0 0 512 512" xmlns="http://www.w3.org/2000/svg">
            <path d="M256-6.4c-141.385 0-256 114.615-256 256s114.615 256 256 256 256-114.615 256-256-114.615-256-256-256zm64.057 159.299h-49.041c-7.42 0-14.918 7.452-14.918 12.99v19.487h63.723c-2.081 28.41-6.407 64.679-6.407 64.679h-57.566v159.545h-63.929v-159.545h-32.756v-64.474h32.756v-33.53c0-8.098-1.706-62.336 70.46-62.336h57.678v63.183z">
            </path>
           </svg>
          </a>
          <a alt="Follow Us on twitter" class="builtin-icons dark large twitter-hover" href="/Slyagri" rel="nofollow" target="_blank" title="Follow Us on twitter">
           <svg class="mk-svg-icon" data-cacheid="icon-5c110b2b3896c" data-name="mk-jupiter-icon-twitter" style=" height:32px; width: 32px; " viewbox="0 0 512 512" xmlns="http://www.w3.org/2000/svg">
            <path d="M256-6.4c-141.385 0-256 114.615-256 256s114.615 256 256 256 256-114.615 256-256-114.615-256-256-256zm146.24 258.654c-31.365 127.03-241.727 180.909-338.503 49.042 37.069 35.371 101.619 38.47 142.554-3.819-24.006 3.51-41.47-20.021-11.978-32.755-26.523 2.923-41.27-11.201-47.317-23.174 6.218-6.511 13.079-9.531 26.344-10.407-29.04-6.851-39.751-21.057-43.046-38.284 8.066-1.921 18.149-3.578 23.656-2.836-25.431-13.295-34.274-33.291-32.875-48.326 45.438 16.866 74.396 30.414 98.613 43.411 8.626 4.591 18.252 12.888 29.107 23.393 13.835-36.534 30.915-74.19 60.169-92.874-.493 4.236-2.758 8.179-5.764 11.406 8.298-7.535 19.072-12.719 30.027-14.216-1.257 8.22-13.105 12.847-20.249 15.539 5.414-1.688 34.209-14.531 37.348-7.216 3.705 8.328-19.867 12.147-23.872 13.593-2.985 1.004-5.992 2.105-8.936 3.299 36.492-3.634 71.317 26.456 81.489 63.809.719 2.687 1.44 5.672 2.1 8.801 13.341 4.978 37.521-.231 45.313-5.023-5.63 13.315-20.268 23.121-41.865 24.912 10.407 4.324 30.018 6.691 43.544 4.396-8.563 9.193-22.379 17.527-45.859 17.329z">
            </path>
           </svg>
          </a>
         </div>
        </section>
        <section class="widget widget_contact_info" id="contact_info-4">
         <div class="widgettitle">
          DEALER ACCESS
         </div>
         <ul itemscope="itemscope" itemtype="https://schema.org/Person">
          <li>
           <svg class="mk-svg-icon" data-cacheid="icon-5c110b2b38ba2" data-name="mk-icon-home" style=" height:16px; width: 14.857142857143px; " viewbox="0 0 1664 1792" xmlns="http://www.w3.org/2000/svg">
            <path d="M1408 992v480q0 26-19 45t-45 19h-384v-384h-256v384h-384q-26 0-45-19t-19-45v-480q0-1 .5-3t.5-3l575-474 575 474q1 2 1 6zm223-69l-62 74q-8 9-21 11h-3q-13 0-21-7l-692-577-692 577q-12 8-24 7-13-2-21-11l-62-74q-8-10-7-23.5t11-21.5l719-599q32-26 76-26t76 26l244 204v-195q0-14 9-23t23-9h192q14 0 23 9t9 23v408l219 182q10 8 11 21.5t-7 23.5z">
            </path>
           </svg>
           <span itemprop="address" itemscope="" itemtype="http://schema.org/PostalAddress">
            [ahref]
            
           </span>
          </li>
         </ul>
        </section>
       </div>
       <div class="mk-col-1-4">
        <section class="widget widget_posts_lists" id="recent_posts-2">
         <div class="widgettitle">
          Last news
         </div>
         <ul>
          <li class="post-list-image">
           [ahref]
           
           <div class="post-list-info ">
            <a class="post-list-title" href="/en/innov-agri-2018/">
             INNOV-AGRI 2018
            </a>
            <div class="post-list-meta">
            </div>
           </div>
           <div class="clearboth">
           </div>
          </li>
          <li class="post-list-image">
           [ahref]
           
           <div class="post-list-info ">
            <a class="post-list-title" href="/en/sly-recrute/">
             SLY Recrute
            </a>
            <div class="post-list-meta">
            </div>
           </div>
           <div class="clearboth">
           </div>
          </li>
         </ul>
        </section>
       </div>
       <div class="mk-col-1-4">
        <section class="widget widget_nav_menu" id="nav_menu-2">
         <div class="widgettitle">
          Our products
         </div>
         <div class="menu-menu-gb-container">
          <ul class="menu" id="menu-menu-gb-2">
           <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-home menu-item-1193" id="menu-item-1193">
            [ahref]
            
           </li>
           <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1194" id="menu-item-1194">
            <a href="/en/actualites/">
             <svg class="mk-svg-icon" data-cacheid="icon-5c110b2b3ee54" data-name="mk-icon-angle-right" style=" height:14px; width: 5px; " viewbox="0 0 640 1792" xmlns="http://www.w3.org/2000/svg">
              <path d="M595 960q0 13-10 23l-466 466q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l393-393-393-393q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l466 466q10 10 10 23z">
              </path>
             </svg>
             News
            </a>
           </li>
           <li class="menu-item menu-item-type-custom menu-item-object-custom current-menu-ancestor menu-item-has-children menu-item-1201" id="menu-item-1201">
            <a href="#">
             Products
            </a>
            <ul class="sub-menu">
             <li class="menu-item menu-item-type-custom menu-item-object-custom current-menu-ancestor current-menu-parent menu-item-has-children menu-item-1200" id="menu-item-1200">
              <a href="#">
               Machines
              </a>
              <ul class="sub-menu">
               <li class="menu-item menu-item-type-post_type menu-item-object-page current-menu-item page_item page-item-1102 current_page_item menu-item-1192" id="menu-item-1192">
                [ahref]
                
               </li>
               <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1371" id="menu-item-1371">
                <a href="/en/stripcat-2/">
                 <svg class="mk-svg-icon" data-cacheid="icon-5c110b2b3ee54" data-name="mk-icon-angle-right" style=" height:14px; width: 5px; " viewbox="0 0 640 1792" xmlns="http://www.w3.org/2000/svg">
                  <path d="M595 960q0 13-10 23l-466 466q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l393-393-393-393q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l466 466q10 10 10 23z">
                  </path>
                 </svg>
                 Stripcat 2
                </a>
               </li>
              </ul>
             </li>
             <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-2529" id="menu-item-2529">
              [link]
              
              <ul class="sub-menu">
               <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2530" id="menu-item-2530">
                <a href="/en/imts-tracks/">
                 <svg class="mk-svg-icon" data-cacheid="icon-5c110b2b3ee54" data-name="mk-icon-angle-right" style=" height:14px; width: 5px; " viewbox="0 0 640 1792" xmlns="http://www.w3.org/2000/svg">
                  <path d="M595 960q0 13-10 23l-466 466q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l393-393-393-393q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l466 466q10 10 10 23z">
                  </path>
                 </svg>
                 IMTS Tracks
                </a>
               </li>
               <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4278" id="menu-item-4278">
                [search]
                
               </li>
              </ul>
             </li>
             <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-2140" id="menu-item-2140">
              [link]
              
              <ul class="sub-menu">
               <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2141" id="menu-item-2141">
                <a href="/en/insert-v-shot/">
                 <svg class="mk-svg-icon" data-cacheid="icon-5c110b2b3ee54" data-name="mk-icon-angle-right" style=" height:14px; width: 5px; " viewbox="0 0 640 1792" xmlns="http://www.w3.org/2000/svg">
                  <path d="M595 960q0 13-10 23l-466 466q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l393-393-393-393q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l466 466q10 10 10 23z">
                  </path>
                 </svg>
                 INSERT V-SHOT
                </a>
               </li>
               <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2142" id="menu-item-2142">
                [link]
                
               </li>
              </ul>
             </li>
            </ul>
           </li>
           <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1220" id="menu-item-1220">
            [link]
            
           </li>
           <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1573" id="menu-item-1573">
            [ahref]
            
           </li>
           <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1195" id="menu-item-1195">
            [ahref]
            
           </li>
           <li class="menu-item-language menu-item wpml-ls-slot-13 wpml-ls-item wpml-ls-item-fr wpml-ls-menu-item wpml-ls-first-item menu-item-type-wpml_ls_menu_item menu-item-object-wpml_ls_menu_item menu-item-wpml-ls-13-fr" id="menu-item-wpml-ls-13-fr">
            [link]
            
           </li>
           <li class="menu-item-language menu-item-language-current menu-item wpml-ls-slot-13 wpml-ls-item wpml-ls-item-en wpml-ls-current-language wpml-ls-menu-item wpml-ls-last-item menu-item-type-wpml_ls_menu_item menu-item-object-wpml_ls_menu_item menu-item-wpml-ls-13-en" id="menu-item-wpml-ls-13-en">
            <a href="/en/boss/">
             <svg class="mk-svg-icon" data-cacheid="icon-5c110b2b3ee54" data-name="mk-icon-angle-right" style=" height:14px; width: 5px; " viewbox="0 0 640 1792" xmlns="http://www.w3.org/2000/svg">
              <path d="M595 960q0 13-10 23l-466 466q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l393-393-393-393q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l466 466q10 10 10 23z">
              </path>
             </svg>
            </a>
           </li>
          </ul>
         </div>
        </section>
       </div>
       <div class="clearboth">
       </div>
      </div>
     </div>
     <div id="sub-footer">
      <div class=" mk-grid">
       <span class="mk-footer-copyright">
        Copyright All Rights Reserved © 2015 - 2016
       </span>
      </div>
      <div class="clearboth">
      </div>
     </div>
    </section>
   </div>
  </div>
  <div class="bottom-corner-btns js-bottom-corner-btns">
   <a class="mk-go-top js-smooth-scroll js-bottom-corner-btn js-bottom-corner-btn--back" href="e">
    <svg class="mk-svg-icon" data-cacheid="icon-5c110b2b3f69f" data-name="mk-icon-chevron-up" style=" height:16px; width: 16px; " viewbox="0 0 1792 1792" xmlns="http://www.w3.org/2000/svg">
     <path d="M1683 1331l-166 165q-19 19-45 19t-45-19l-531-531-531 531q-19 19-45 19t-45-19l-166-165q-19-19-19-45.5t19-45.5l742-741q19-19 45-19t45 19l742 741q19 19 19 45.5t-19 45.5z">
     </path>
    </svg>
   </a>
  </div>
  <div class="mk-fullscreen-search-overlay">
   <a class="mk-fullscreen-close" href="#">
    <svg class="mk-svg-icon" data-cacheid="icon-5c110b2b3fbcc" data-name="mk-moon-close-2" viewbox="0 0 512 512" xmlns="http://www.w3.org/2000/svg">
     <path d="M390.628 345.372l-45.256 45.256-89.372-89.373-89.373 89.372-45.255-45.255 89.373-89.372-89.372-89.373 45.254-45.254 89.373 89.372 89.372-89.373 45.256 45.255-89.373 89.373 89.373 89.372z">
     </path>
    </svg>
   </a>
   <div class="mk-fullscreen-search-wrapper">
    <p>
     Start typing and press Enter to search<li>[link]</li>[link]<li>[search]</li><li>[link]</li>[ahref]<li>[link]</li>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li>
    </p>
    <form action="/en/" id="mk-fullscreen-searchform" method="get">
     <i class="fullscreen-search-icon">
      <svg class="mk-svg-icon" data-cacheid="icon-5c110b2b3fdbd" data-name="mk-icon-search" style=" height:25px; width: 23.214285714286px; " viewbox="0 0 1664 1792" xmlns="http://www.w3.org/2000/svg">
       <path d="M1152 832q0-185-131.5-316.5t-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5 316.5-131.5 131.5-316.5zm512 832q0 52-38 90t-90 38q-54 0-90-38l-343-342q-179 124-399 124-143 0-273.5-55.5t-225-150-150-225-55.5-273.5 55.5-273.5 150-225 225-150 273.5-55.5 273.5 55.5 225 150 150 225 55.5 273.5q0 220-124 399l343 343q37 37 37 90z">
       </path>
      </svg>
     </i>
    </form>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0265
  </b>
 </body>
</html>
