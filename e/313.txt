--->|TXVzZXVtIEhpbGwsIHdoaWNoIGhhcHBlbnMgdG8gcnVuIGFsb25nIHRoZSByb3V0ZSBvZiB0aGUgaGlzdG9yaWMgU2FudGEgRmUgVHJhaWwsIGFsc28gaXMgaG9tZSB0byB0aGUgTXVzZXVtIG9mIFNwYW5pc2ggQ29sb25pYWwgQXJ0LCBNdXNldW0gb2YgSW5kaWFuIEFydHMgQ3VsdHVyZSBhbmQgV2hlZWx3cmlnaHQgTXVzZXVtIG9mIHRoZSBBbWVyaWNhbiBJbmRpYW4sIGluIGFkZGl0aW9uIHRvIGEgY29udmVuaWVudCBjYWYgYW5kIHRoZSBhY2NsYWltZWQgU2FudGEgRmUgQm90YW5pY2FsIEdhcmRlbi4gClRoZWlyIGxhc3QgdHVybi4gQ2FzaW5vcyBhY3Jvc3MgUnVzc2lhIGNsb3NlZCB0aGVpciBkb29ycyBXZWRuZXNkYXkgYXMgYSBzd2VlcGluZyBiYW4gb24gZ2FtYmxpbmcgd2VudCBpbnRvIGVmZmVjdCwgbGVzcyB0aGFuIGEgd2VlayBhZnRlciBhIHNpbWlsYXIgYmFuIGhpdCBuZWlnaGJvcmluZyBVa3JhaW5lLiAKUHJvc2VjdXRvcnMgc2F5IEx1ZHdpZyBQYXogICBhIHJldGlyZWQgdmljZSBkZXRlY3RpdmUgICBhbmQgaGlzIHdpZmUgaGVhZGVkIHRoZSBvcGVyYXRpb24sIHJ1bm5pbmcgYnJvdGhlbHMgaW4gUXVlZW5zLCBCcm9va2x5biBhbmQgSGVtcHN0ZWFkLCBMSSwgd2hpY2ggZ2VuZXJhdGVkIG1vcmUgdGhhbiAkMiBtaWxsaW9uIGRvbGxhcnMgYmV0d2VlbiBBdWd1c3QgMjAxNiBhbmQgU2VwdGVtYmVyIDIwMTcuCkkgMTggYW5kIEkgc3VwZXIgaW50byB0aGUgbGF0ZSBuaWdodCBsYW5kc2NhcGUuIEkga25vdyBpdCBraW5kIG9mIGEgZHlpbmcgZm9ybSBidXQgSSB0aGluayBpdCBzdXBlciBjb29sIHRoYXQgdGhlc2Ugc2hvd3Mgc3RpbGwgZXhpc3QgYW5kIHN0aWxsIGNvbnRyaWJ1dGUgdG8gdGhlIHplaXRnZWlzdC4KQW5kIHdpdGggV2luZG93cyBYUCBNb2RlLCB5b3UgY2FuIHVzZSBtb3N0IG9mIHlvdXIgV2luZG93cyBYUCBwcm9ncmFtcyBpbiBXaW5kb3dzIDcuIENob29zZSBGT0xEIEFORCBTS0lQLC4gVGhlbiwuIApBa2FzaGljUmVjb3JkZXIgIDUgcG9pbnRzICBzdWJtaXR0ZWQgMyBkYXlzIGFnbwpFdmVyeW9uZSBub3cga25vd3MgdGhhdCBEZXBhcnRtZW50IG9mIEFncmljdWx0dXJlIGVtcGxveWVlIFNoZXJ5bCBTaGVycm9kIHdhcyB1bmp1c3RseSBmb3JjZWQgdG8gcmVzaWduIGFuZCB2aWxpZmllZCBhcyBhICJyZXZlcnNlIHJhY2lzdCIgYnkgdGhlIE9iYW1hIEFkbWluaXN0cmF0aW9uIGFuZCBldmVuIHRoZSBOQUFDUC4gCkRlbGlhLiBDYWR3ZWxsLCBSYWNpbmUsIGd1ZXN0IHNwZWFrZXIgcGFpZCBhIHN0cm9uZyB0cmlidXRlIHRvIHRoZSBib2Ntb2JpbGUsIHdoaWNoIGlzIGZvc3RlcmVkIGJ5IHRoZSBmZWRlcmF0ZWQgY2x1YnMgb2YgV2lzY29uc2luLiBTdHJlc3NpbmcgdGhlIHRoZW1lLCBzaGUgc3RhdGVkIHRoYXQgdGhlIGdyZWF0ZXN0IHNlcnZpY2UgZXZlciByZW5kZXJlZCB0byBtYW5raW5kIHdhcyBieSBKZXN1cyBDaHJpc3QgICBhIG5ldmVyIGVuZGluZyBzZXJ2aWNlLiAKQSBsb3Qgb2Ygc2hpdCBnb2VzIGRvd24gYXQgdGhvc2UgcGxhY2VzLCBzdGFydGluZyBhcyBsb3cgZG9nIHNoaXQgYW5kIHRyYXNoIGJlaW5nIGV2ZXJ5d2hlcmUgdG8gc3RydW5nIG91dCBwYXJlbnRzIGFuZCByYW5kb20gcGVvcGxlIHNsZWVwaW5nIG9uIGEgc2hpdHR5IGNvdWNoIHlvdSBjYW4gZmluZCBvbiB0aGUgc2lkZSBvZiB0aGUgcm9hZC4uIApCdXQgYmVjYXVzZSBvZiBtb3JhdG9yaXVtcyBvciB3aGF0ZXZlciB0aGVyZSB3YXMgYSBtb25vcG9seSBhbmQgb25seSBjZXJ0YWluIHBva2VyIHJvb21zIGhhZCB0aGUgYWJpbGl0eSB0byBjb25kdWN0IGdhbWVzLiAKR2V0IHJpZCBvZiB3ZWxmYXJlKFRoYXQncyBqdXN0IGEgam9rZSBJIGhvcGU/KS4gU21hbGwgYnVzaW5lc3MgdGF4IGN1dHMgKHdoaWNoIGFyZSBhY3Jvc3MgdGhlIGJvYXJkKS4gCkhhdmluZyBiZWVuIGhhcnNobHkgcmVtaW5kZWQgb2YgdGhlIHRydWUgbmF0dXJlIG9mIHJlYWxpdHkgYnkgQWxhYmFtYSBsYXN0IHdlZWssIGxvcXVhY2lvdXMgcXVhcnRlcmJhY2sgQm8gV2FsbGFjZSBhbmQgMyAxIE9sZSBNaXNzLCBoYW5naW5nIGluIGF0IE5vLiAKVGhlIGdhbWUgaXMgdGhlIHNhbWUgYXMgaW4gdGhlIGNhc2lub3MuIApBbmQgaXQgc28gaGFyZCBpbiB0aGF0IHNpdHVhdGlvbiB0byBiZSBsaWtlICJJIGRvbiB3YW50IHRvIGhlYXIgdGhpcyIgd2l0aG91dCBpdCBjb21pbmcgYWNyb3NzIGFzICJJIGRvbiBjYXJlIGFib3V0IHlvdXIgbWVudGFsIGhlYWx0aCIgKGV2ZW4gdGhvdWdoLiAKU2hlIGFsc28gaGFzIFBhdWxhIGNob2ljZSBSZXNpc3Qgd3JpbmtsZSByZXBhaXIgc2VydW0sIENCRCBvaWwsIHNvbWUgcmV0ZXh0dXJpemluZyByb3NlIGNsYXkgbWFzaywgc2hpc2VpZG8gY2xlYW5zaW5nIGZvYW0sIFJ1ZG9sZiBBY2FpIGZhY2lhbCBvaWwgYW5kIHNvbWV0aGluZyBjYWxsZWQgYSBCQiBjcmVhbS4uIApMQSBoYXMgbW9uZXkgYW5kIHZlcnkgZ29vZCBhY3Rpb24uIENvc3Qgb2YgbGl2aW5nIGlzIGhpZ2ggYW5kIHRoZSByYWtlIGlzIGhpZ2ggYW5kIHRyYWZmaWMgc3Vja3MgYSBsb3QuIFlvdSBtdXN0IHBsYXkgYSBtaW5pbXVtIG9mIDIvNSBsaXZlIHRvIG5vdCBnZXQgcmFrZWQgdG8gZGVhdGguIEdvb2Qgd2VhdGhlciBhbmQgYW5vdGhlciBjb29sIGNpdHkgdG8gZXhwZXJpZW5jZS4KSSB0aG91Z2h0IHRoZSByZXRpcmVtZW50IGd1aWRlIGNvdWxkIGJlIGEgbWFnYXppbmUuIApEZWxpdmVyeSBtYXkgdmFyeSBhbmQgeW91IG1heSBiZSByZXF1aXJlZCB0byB3b3JrIHdlZWtlbmRzIG9yIGV2ZW5pbmdzIGRlcGVuZGluZyBvbiB0aGUgcmVxdWlyZW1lbnRzIG9mIHRoZSBwbGFjZW1lbnQgYXJlYS4gClRoZSBmaXJzdCBmZXcgZGF5cyB0aGVyZSB3ZXJlbiB0aGF0IG1hbnksIG1heWJlIDUgMTAgcGVyIGRheSBhbmQgSSB3YXMgZG9pbmcgcHJldHR5IGJpZyBtaWxlcyB0byBjYXRjaCB0aGF0IG1hbnkgcGVvcGxlLiAKTGVzIHByb3N0aXR1ZXMgZGFucyBsZSBxdWFydGllciBjdCA5ZSBuZSBmb250IHBsdXMgbGUgdHJvdHRvaXIuIExlcyBlbmZhbnRzIG5lIGNyb2lzZW50IHBsdXMgZGUgZGFtZXMgY291cnQgdnR1ZXMgZW4gcmVudHJhbnQgZGUgbCdjb2xlLCBjb21tZSBhdSB0ZW1wcyBkJ2F2YW50IGxlcyBkY3JldHMgU2Fya296eSBzdXIgbGUgcmFjb2xhZ2UgcGFzc2lmLiBBbG9ycywgb3VpLCBsZXMgcnVlcyBzb250IHBsdXMgdHJhbnF1aWxsZXMuIE1haXMgcXVlbGxlIGh5cG9jcmlzaWUgISBOb3VzIGF2b25zIGFzc2lzdCBjZXMgZGVybmlyZXMgYW5uZXMgIGwnb3V2ZXJ0dXJlIGVuIGdyYW5kIG5vbWJyZSBkZSBtYWlzb25zIGNsb3NlcywgZGUgc3VyZmFjZSBtb2Rlc3RlIGducmFsZW1lbnQsIHBldXBsZXMgZGUgamV1bmVzIGZpbGxlcyB2ZW51ZXMgZCdBc2llIHBvdXIgbWFzc2VyICBQYXJpcy4gQ2Ugc29udCBsZXMgZmFtZXV4IHNhbG9ucyBkZSBtYXNzYWdlIHF1aSwgZGFucyBjZXJ0YWluZXMgcnVlcywgc2Ugc3VjY2RlbnQgZCdpbW1ldWJsZSBlbiBpbW1ldWJsZSAocGFyIGV4ZW1wbGUgcnVlIFJvZGllciAgbWkgaGF1dGV1ciwgb3UgcnVlIGRlIE1hdWJldWdlIHBycyBkZSBsYSBydWUgQ29uZG9yY2V0KS4KT3IgdGhlIEp1ZyBsaXF1b3Igc3RvcmUsIHdoZXJlIHdlbGwsIHlvdSBnZXQgdGhlIGlkZWEuICBNaWNoYWVsIFRvcnRvcmVsbG8uIApObyBzdG9yaWVzIGF0IHRoZSBlbmQuQm90aCBoYXZlIHZlcnkgc2hvcnQgdGV4dHMgd2l0aCB3b3JkcyBzZXBhcmF0ZWQgaW50byBzeWxsYWJsZXMgdGhyb3VnaG91dCwgYW5kIGkgcmVjb21tZW5kIGdvaW5nIHRocm91Z2ggdGhlbSBhdCB5b3VyIG93biBzcGVlZCBiZWZvcmUgeW91IHN0YXJ0IHJlYWRpbmcgdW4gc3lsbGFiaXNlZCB0ZXh0cy4gClBhZGRvY2ssIHdobyBraWxsZWQgaGltc2VsZiwgYWN0ZWQgYWxvbmUsIHBvbGljZSBoYXZlIHNhaWQuVGhlIGhvc3Qgc2FpZCB0aGVyZSB3YXMgb25lIGluY2lkZW50IHllYXJzIGFnbyBpbiB3aGljaCBQYWRkb2NrIHllbGxlZCBhdCBoaW0gb3ZlciBsYXRlIGx1Z2dhZ2UsIHNvbWV0aGluZyB0aGUgaG9zdCB0aG91Z2h0IHBlY3VsaWFyLiBXaGVuIGFza2VkIHRvIHNwZWNpZnkgd2h5IGhlIHRob3VnaHQgUGFkZG9jayB3YXMgb2RkLCB0aGUgaG9zdCBzYWlkOiAiSGUgd2FzIGp1c3Qgd2VpcmQuIkEgaG9zdCBhdCBhbm90aGVyIGNhc2lubyBzYWlkIFBhZGRvY2sgd2FzICJraW5kIG9mIGFuIGludHJvdmVydC4iVGhhdCBob3N0IHNhaWQgUGFkZG9jayB3YXMgYSBoaWdoIGVuZCBnYW1ibGVyIHdobyBrZXB0IHRvIGhpbXNlbGYgYW5kIG5ldmVyIHJlcXVlc3RlZCBhbnkgcHJvc3RpdHV0ZXMgb3IgZHJ1Z3MuIApEZWVwYWsgU2hvdXJpZSwgZXhlY3V0aXZlIHZpY2UgcHJlc2lkZW50IGFuZCBtYW5hZ2luZyBkaXJlY3RvciwgRGlzY292ZXJ5IE5ldHdvcmtzLCB3YXMgZWFybGllciBxdW90ZWQgYnkgYWdlbmN5ZmFxcyEgYXMgc2F5aW5nLCAiTGlmZXN0eWxlIGlzIGFuIGVtZXJnaW5nIGdlbnJlIG9uIEluZGlhbiB0ZWxldmlzaW9uIGFuZCBpdCdzIGFsc28gbHVjcmF0aXZlIGluIHRlcm1zIG9mIGFkdmVydGlzaW5nIHJldmVudWVzLiIKRURJVDogSSdkIGp1c3QgbGlrZSB0byBhZGQgYW5vdGhlciBhbmFseXNpcyBvZiB0aGUgaXNzdWUgaGVyZS4gV2UgaGF2ZSBhIGJ1bmNoIG9mIGRhdGEgYmVpbmcgY29sbGVjdGVkIGFuZCBiZWluZyB1c2VkLiAKVW5mb3J0dW5hdGVseSBJIGFsc28gb24gYW4gdW5hdm9pZGFibGUgbWVkaWNhdGlvbiB3aGljaCBzb21ldGltZXMgYWZmZWN0cyBteSBleWUgc2lnaHQuIApXYXNuIGFib3V0IE1HTSwgTWFuZGFsYXkgQmF5IG9yIGEgc3BlY2lmaWMgY2FzaW5vIG9yIHZlbnVlLCBBYXJvbiBSb3VzZSwgdGhlIGFnZW50IGluIGNoYXJnZSBvZiB0aGUgRkJJIExhcyBWZWdhcyBvZmZpY2UsIHRvbGQgVGhlIEFzc29jaWF0ZWQgUHJlc3MuIEZpbmRpbmcgd2FzIGNvbnRhaW5lZCBpbiBhIGxvbmcgYXdhaXRlZCByZXBvcnQgY29tcGlsZWQgYnkgdGhlIEZCSSBCZWhhdmlvciBBbmFseXNpcyBVbml0LCBhIGdyb3VwIG9mIGV4cGVydHMgd2hvIHNwZW50IG1vbnRocyBleGFtaW5pbmcgc2V2ZXJhbCBmYWN0b3JzIHRoYXQgbWlnaHQgaGF2ZSBsZWQgdG8gdGhlIHJhbXBhZ2UuLiAKTm9uIFJldmVudWUgVHVybm92ZXJKdXN0IGFzIHlvdXIgYnVzaW5lc3MgY2FuIGdlbmVyYXRlIHJldmVudWUgZnJvbSBhY3Rpdml0aWVzIHRoYXQgaGF2ZSBub3RoaW5nIHRvIGRvIHdpdGggdHVybm92ZXIsIGl0IGNhbiBhbHNvIGhhdmUgdHVybm92ZXIgdGhhdCBpcyB1bnJlbGF0ZWQgdG8gcmV2ZW51ZS4gRW1wbG95ZWUgdHVybm92ZXIgaXMgdGhlIHJhdGUgYXQgd2hpY2ggd29ya2VycyBsZWF2ZSB5b3VyIGNvbXBhbnkuIFRoaXMgZmlndXJlIG1lYXN1cmVzIGVtcGxveWVlIHNhdGlzZmFjdGlvbiBhbmQgZ2l2ZXMgaW5mb3JtYXRpb24gYWJvdXQgd2hldGhlciB5b3UncmUgYWJsZSB0byBtYWludGFpbiBhIHNraWxsZWQgYW5kIGV4cGVyaWVuY2VkIHdvcmtmb3JjZSByYXRoZXIgdGhhbiBjb250aW51YWxseSBpbnZlc3RpbmcgaW4gdHJhaW5pbmcgbmV3IHN0YWZmLiAKVGhlIHdhc2hpbmcgbWFjaGluZXMgd2VyZSBncmVhdCB0byB1c2UgYW5kIHRoZSBsYXVuZHJ5IHJvb20gaXMgb24gdGhlIHNlY29uZCBmbG9vciEhIEJlZHMgd2VyZSB2ZXJ5IGNsZWFuIGFuZCBjb21mb3J0YWJsZS4gQSBuaWNlLCByb29teSBwbGFjZSB0byBjb21lIGJhY2sgdG8gYWZ0ZXIgYSBsb25nIGRheSBvZiBzaWdodHNlZWluZy4gCiJPdXIgaXNzdWVzIHRydW1wIHlvdXJzLCIgc2F5IHRoZXNlIGNvbnRlbXBvcmFyeSBrYW1pa2F6ZS4gIkJlY2F1c2Ugd2UgaGF2ZSB0aGUgdm90ZXMuIFdlIGRvbid0IGNhcmUgaWYgdGhlIG5hdGlvbiBkZWZhdWx0cyBvbiBpdHMgZmluYW5jaWFsIG9ibGlnYXRpb25zLiIgVGFrZSBubyBwcmlzb25lcnMgaXMgdGhlaXIgYXBwcm9hY2g7IGxldCBpdCBhbGwgZmFsbCBhcGFydCBpcyB0aGVpciB0aHJlYXQuCk4ndXRpbGlzZXogbGEgZmljaGUgZGUgY2UgZm91cm5pc3NldXIgcXVlIHBvdXIgbGVzIGRvbm5lcyB0ZWNobmlxdWVzIG1haXMgcG91ciA0NCBsZXMgZG9zYWdlcyBzb250IGluc2lnbmlmaWFudHMuTGVzIHByb2R1aXRzICBiYXNlIGRlIFRvbmdrYXQgbW9pcyBjb25jZW50clF1YW5kIGF1eCBhbHRlcm5hdGl2ZXMgZW4gdGVybWVzIGRlIHByb2R1aXQgbW9pbnMgY29uY2VudHIgY2hleiBpaGVyYiB2b3VzIGF2ZXogdW4gbGFyZ2UgY2hvaXggOkNsaXF1ZXIgaWNpIGV0IHRhcGVyIFRvbmdjYXQgZGFucyBsYSBjYXNlIGRlIHJlY2hlcmNoZSAhQ2UgcXVlIGplIHBldXggdm91cyBhc3N1cmVyIGMnZXN0IHF1J3VuIGNvcnJlc3BvbmRhbnQgYSBlc3NheSB1bmUgdmVyc2lvbiBtaW5pbWFsZSBldCAgZHUgYXJydGVyIGNhciBhIGwnZXhjaXRhaXQgdHJvcC4gCkFnYWluIHlvdSBhcmUgbWlzc2luZyB0aGUgY2F2ZWF0cy4gClNxdWlnZ2x5LCByaWNlIHNoYXBlZCBzZWdtZW50cyBpbiB0aGUgZmVjZXMgaW5kaWNhdGUgd29ybXMuIApUaGV5IHJlYWxseSBkbyBwdXQgb3V0IGEgbG90IG9mIGhlYXQgYXQgaGlnaCBwb3dlci4gCkJhdHRlbGxlTmV1cm9MaWZlICAyOSBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpJdCBoYXMgMSw1MDAgdmlkZW8gcG9rZXIgYW5kIHNsb3QgbWFjaGluZXMuIApUaGVuIHdlIGhhZCBhIGZyaWVuZCB0aGF0IHdvcmtlZCB0aGVyZSBmb3IgYSBzaG9ydCBwZXJpb2QgYW5kIHNhaWQgbWFuYWdlbWVudCBoYWQgY2hhbmdlZC4gV2UgYWxtb3N0IHdlbnQsIGJ1dCBQb3BzIHdhcyBzdGF5aW5nIHRoZXJlIChjcmVkaXQgZm9yIGFuIGFic29sdXRlbHkgQkVBVVRJRlVMIHJvb20sIGNvbXBsZXRlIHdpdGggZGltbWVyIGxpZ2h0cywgamFjdXp6aSB0dWIsIHNtYXJ0IGV2ZXJ5dGhpbmcsIGV0YykgYW5kIGhhZG4gZXZlciBjaGVja2VkIG91dCB0aGUgcm9vZnRvcC4gV2Ugd2VudCB1cCwgYSBjb3VwbGUgZnVsbCB3ZWVrcyBhZnRlciBOZXcgWWVhciBFdmUuIApTdW5kYXkgaW4gVmFsa2VuYnVyZywgSXRhbHkncyBEYXZpZGUgUmViZWxsaW4gcHJvdmVkIGhlIHdhcyBvbiB0YXJnZXQgZm9yIGhpcyBiZWxvdmVkIENsYXNzaWNzIG9mIHRoZSBOb3J0aDogQW1zdGVsIEdvbGQsIEZsY2hlIFdhbGxvbm5lIGFuZCBMaWdlIEJhc3RvZ25lIExpZ2UuIEdyZWdvciBCcm93biBvZiBDeWNsaW5nbmV3cyB0YWxrZWQgd2l0aCB0aGUgMzYgeWVhciBvbGQgYWJvdXQgdGhlIEFyZGVubmVzIGFuZCBoaXMgcGxhbnMgZm9yIHRoZSBmdXR1cmUsIHdoaWNoIGluY2x1ZGVzIGhvcGVzIG9mIFdvcmxkcyBnb2xkLgpOb3csIGxldCB0YWxrIGFib3V0IHRoZSBwaWtlIGFuZCBwYW5jYWtlISBJbiBteSBleHBlcmllbmNlLCB0aGVyZSBzZWVtcyB0byBiZSBhIHNvcnQgb2YgaG9saXN0aWMgZWZmZWN0IHdoZW4gd29ya2luZyB0aGVzZSBzdHJldGNoZXMuIEJ5IHRoYXQgSSBtZWFuIGlmIHlvdSB3YW50IHRvIGltcHJvdmUgb25lLCBkb24gbmVnbGVjdCB0aGUgb3RoZXIuIE1vcmVvdmVyLCBlYWNoIHNwbGl0IGltcHJvdmVzIG9uZSBvZiB0aGVtLiBBIGZyb250IHNwbGl0IGhlbHBzIGEgbG90IHdpdGggeW91ciBwaWtlIGFuZCBhIG1pZGRsZSBzcGxpdCBoZWxwcyBhIGxvdCB3aXRoIHlvdXIgcGFuY2FrZS4gTWFrZXMgc2Vuc2UsIGh1aD8gWW91IGhhdmUgdG8gZG8gc29tZSBmb3JtIG9mIGFsbCB0aGUgNCwgaWYgeW91IHdpc2ggdG8gbWFrZSBsb25nIHRlcm0gcHJvZ3Jlc3Mgd2l0aCBubyBwbGF0ZWF1cy4gT24gYSBzaWRlIG5vdGUsIGJlbGlldmUgaXQgb3Igbm90LCBpdCBpcyBNVUNIIGhhcmRlciB0byBnZXQgcGFzdCB0aGUga25lZXMgaW4gYSBwaWtlIHdoZXJlYXMgZ2V0dGluZyBjaGVzdCB0byBmbG9vciBpbiBhIHBhbmNha2UgaXMgZmFpcmx5IHN0cmFpZ2h0Zm9yd2FyZC4KU28gcmV2aXNlZCBhbmQgcHV0IHRoZSBEZXBhcnRtZW50IG9mIEZpbmFuY2UsIHdoaWNoIGhhcyBhIGJ1aWx0IGluIHJlZ3VsYXRvcnkgYXJtIGluIHBsYWNlLiAKWW91IGxpdGVyYWxseSBhZG1pdHRlZCB0byBicmVha2luZyB0aGUgbGF3IGFuZCBnZXR0aW5nIHJpZCBvZi9kZXN0cm95aW5nL2NvbnRhbWluYXRpbmcgZXZpZGVuY2Ugd2l0aG91dCBub3RpY2UuIFlvdSBvbiB5b3VyIG93biBub3cgZHVkZS4iLiAKTXkgZnJpZW5kJ3Mgcm91bGV0dGUgc3RyYXRlZ3kgd2FzIHRvIHBsYWNlIGJldHMgZWl0aGVyIG9uIHR3byBvZiB0aGUgdGhyZWUgc2VjdGlvbiBzcGFjZXMgb3IgdHdvIG9mIHRoZSB0aHJlZSBjb2x1bW4gc3BhY2VzLiBUaGUgc2VjdGlvbnMgYW5kIGNvbHVtbnMgZWFjaCBjb250YWluIDEyIG9mIHRoZSAzNiBudW1iZXJzIG9uIHRoZSB3aGVlbCAob3RoZXIgdGhhbiB6ZXJvIGFuZCBkb3VibGUgemVybykuIEJldHRpbmcgb24gdHdvIG9mIHRoZSBzZWN0aW9ucyBvciB0d28gb2YgdGhlIGNvbHVtbnMsIG9uZSBoYXMgYW4gYWxtb3N0IHR3byBpbiB0aHJlZSBjaGFuY2Ugb2YgYSB3aW5uaW5nIGJldC4gClRvIHN1cHBvcnQgdGhlIHNjaG9vbCdzIHByb2dyYW1zLCB0aGV5IGhvc3RlZCBhIGZ1bmRyYWlzZXIgb24gRnJpZGF5LCBNYXkgMSwgd2l0aCBhIENhc2lubyBOaWdodCBhdCB0aGUgQ2FyaWJvdSBDbHViLiBNaWxlcyBBbmdlbG8sIGV4ZWN1dGl2ZSBjaGVmIGF0IHRoZSBDYXJpYm91LCBzZXJ2ZWQgZGVsaWNpb3VzIGRpc2hlcyB3aGlsZSBXb29keSBDcmVlayBEaXN0aWxsZXJzIHBvdXJlZCBMdWNreSBMYWR5IFJodWJhcmIgTWFydGluaXMuIEd1ZXN0cyB0cmllZCB0aGVpciBsdWNrIGF0IGJsYWNrIGphY2ssIHBva2VyLCBjcmFwcyBhbmQgcm91bGV0dGUgZm9yIGEgY2hhbmNlIHRvIHdpbiB0aGUgZ3JhbmQgcHJpemUgICBhIG9uZSB5ZWFyIG1lbWJlcnNoaXAgdG8gdGhlIENhcmlib3UgQ2x1Yi4uIApDYXJkIEhhbmQKVGhlIGFkdWx0IG1hbW1hbGlhbiBicmFpbiBwcm9kdWNlcyBuZXcgbmV1cm9ucyBpbiB0aGUgb2xmYWN0b3J5IGJ1bGIgYW5kIGRlbnRhdGUgZ3lydXMgb2YgdGhlIGhpcHBvY2FtcHVzIHRocm91Z2hvdXQgbGlmZS4gTWFueSBleHRyaW5zaWMgYW5kIGludHJpbnNpYyAoZXBpKWdlbmV0aWMgZmFjdG9ycyBjYW4gcmVndWxhdGUgdGhlIHByb2R1Y3Rpb24gb2YgbmV3IG5ldXJvbnMgWzQ4XS4gSW5jcmVhc2luZyBldmlkZW5jZSBpbmRpY2F0ZXMgdGhhdCB0aGlzIHByb2Nlc3MgaGFzIGEgcm9sZSBpbiBsZWFybmluZyBhbmQgbWVtb3J5LiBBYmxhdGlvbiBvZiB0aGUgbmV3IGNlbGxzIHJlc3VsdHMgaW4gc3BhdGlhbCBtZW1vcnkgZGVmaWNpdHMgWzQ5XS4gSW4gYWRkaXRpb24sIHVzaW5nIG1hcmtlcnMgZm9yIGltbWVkaWF0ZSBlYXJseSBnZW5lIGV4cHJlc3Npb24gaXQgaGFzIGJlZW4gc2hvd24gdGhhdCB0aGUgbmV3IGNlbGxzIGFyZSBwcmVmZXJlbnRpYWxseSBhY3RpdmF0ZWQgZHVyaW5nIGxlYXJuaW5nIHRhc2tzIFs1MF0uIEZ1cnRoZXJtb3JlLCBhbiBpbmNyZWFzZSBpbiBuZXVyb2dlbmVzaXMgaXMgYXNzb2NpYXRlZCB3aXRoIGltcHJvdmVkIGNvZ25pdGlvbi4gVGhlIHN0cm9uZ2VzdCBuZXVyb2dlbmljIHN0aW11bHVzIGlzIGV4ZXJjaXNlLiBXaGVlbCBydW5uaW5nIGluIHJvZGVudHMgcmVzdWx0cyBpbiBhIDMgNCBmb2xkIG9yIGV2ZW4gZ3JlYXRlciBpbmNyZWFzZSBpbiB0aGUgcHJvZHVjdGlvbiBhbmQgc3Vydml2YWwgb2YgbmV3IG5ldXJvbnMgaW4gdGhlIGRlbnRhdGUgZ3lydXMgb2YgdGhlIGhpcHBvY2FtcHVzIFszMF0uIFRoZSBvbnNldCBvZiB0aGUgZWZmZWN0IG9mIHJ1bm5pbmcgb24gY2VsbCBnZW5lc2lzIGlzIHJhcGlkLiBDZWxsIGdlbmVzaXMgcGVha3MgYXQgdGhyZWUgZGF5cy4gQWZ0ZXIgMzIgZGF5cyBvZiBydW5uaW5nIHRoZSBwcm8gcHJvbGlmZXJhdGl2ZSBlZmZlY3QgaGFzIHJldHVybmVkIHRvIGJhc2VsaW5lLiBJbnRlcmVzdGluZ2x5LCB0aGUgbnVtYmVyIG9mIGltbWF0dXJlIG5ldXJvbnMgY29udGludWVzIHRvIGluY3JlYXNlIGF0IHRoaXMgdGltZSBwb2ludAoiTW9zdCBvZiB0aGVzZSBtaWNyb2JlcyBhcmUgaGFybWxlc3MgYW5kIGFjdHVhbGx5IHZlcnkgaGVscGZ1bC4gCldhcyB0YWxraW5nIHRvIG15IGJveWZyaWVuZCBhYm91dCB0aGlzIGxhc3QgbmlnaHQgYW5kIEkgdG9sZCBoaW0gSSB3YXNuJ3QgY29tcGxhaW5pbmcgYWJvdXQgdGhlIGxpZmUgd2Ugc2hhcmUgYnV0IGhvbHkgc2hpdCBJIG1pc3MgbGl2aW5nIGFsb25lLiAKQW5kIHdobyBrbm93cz8gRXZlbnR1YWxseSwgeW91IGNvdWxkIGJlIHBsYXlpbmcgb24gVFYgaW4gdGhhdCBjb3ZldGVkIHRpbWUgc2xvdCByaWdodCBiZWZvcmUgZm9vdGJhbGwgY29tZXMgb24uLiAKQm9vZ2FkYTQyICA0IHBvaW50cyAgc3VibWl0dGVkIDYgZGF5cyBhZ28KQW5kIGl0IGlzIGJhY2sgaW4gdGhlIHNwb3RsaWdodCBhcyAocmUpbmVnb3RpYXRpb25zIHRha2UgcGxhY2UgdG8gZGV0ZXJtaW5lIHRoZSBmdXR1cmUgb2YgRXVyb3BlLCB0aHJvdWdoIEJyZXhpdDsgYW5kIHRyYWRlIGFycmFuZ2VtZW50cyBpbiBOQUZUQSwgd2l0aCBQcmVzaWRlbnQgVHJ1bXAgdGhyZWF0ZW5pbmcgdG8gd2l0aGRyYXcgZnJvbSB0aGUgdHJhZGUgYXJyYW5nZW1lbnQuLiAKV2hhdCBpcyB3ZWxsIGRyZXNzZWQsIGljZSBibHVlLCBzcG9ydHMgYXJvdW5kIDIwMCBob3JzZXBvd2VyLCBnZXRzIG5lYXJseSA1LjkgTC8xMDAga20gKDQwIG1wZykgd2l0aCBhbG1vc3QgNTAlIGZld2VyIENPMiBlbWlzc2lvbnMsIGxvb2tzIHNoYXJwZXIgYW5kIGhhcyBtb3JlIGdhZGdldHMgdGhhbiBKYW1lcyBCb25kIGluIGEgdHV4ZWRvIChPSywgbWF5YmUgaXQncyBvbmx5IGVxdWFsIHRvIHRoYXQgbGFzdCBvbmUpPyBUaGUgMjAwNCBGb3JkIEVzY2FwZSBIeWJyaWQgU1VWLiBZZXMsIGEgaHlicmlkIGVsZWN0cmljIFNVViwgdGhlIGZpcnN0IG9mIGl0cyBraW5kIGRyaXZpbmcgaXRzIHdheSBpbnRvIG91ciBsaXZlcyB3aXRoaW4gdGhlIG5leHQgeWVhci4KVGhlIGFtb3VudCB3YWdlcmVkIG9uIGdyZXlob3VuZCByYWNpbmcgaW4gRmxvcmlkYSBkcm9wcGVkIGZyb20gJDEuNSBiaWxsaW9uIGluIDE5OTIsIGFkanVzdGVkIGZvciBpbmZsYXRpb24sIHRvIGp1c3Qgb3ZlciAkMjAwIG1pbGxpb24gaW4gMjAxNywgc3RhdGUgcmVjb3JkcyBzaG93LiAKQm90dG9tIGxpbmUgaXMgSSB3b3VsZCBoZWFkIG9uIGRvd24gdG8gdGhlIHRheCBvZmZpY2UgYW5kIGFzayB0aGVtIGhvdyB0aGlzIHdpbGwgbG9vayBmb3IgeW91IGFuZCBpZiB0aGVyZSBpcyBhbnl0aGluZyB5b3UgY2FuIGRvLiAKSGlzdG9yeSBUaGUgTWF1Y2ggQ2h1bmsgUmFpbHdheSBpcyB0aGUgQW1lcmljYW4gYmVnaW5uaW5nIG9mIHRoZSByb2xsZXIgY29hc3Rlci4gVGhlIE1hdWNoIENodW5rIFJhaWx3YXkgd2FzIGRldmlzZWQgbm90IGFzIGEgcGxlYXN1cmUgcmlkZSwgYnV0IGFzIGEgdHJhbnNwb3J0YXRpb24gc3lzdGVtIGZvciB0aGUgY29hbCBtaW5pbmcgaW5kdXN0cnkuIApPbmUgd2F5IHRvIGdldCBmcmVlIGZhY2Vib29rIHBva2VyIGNoaXBzIHdvdWxkIGJlIHRvLiBXSU4gdGhlbSEgWWVzLCB0aGUgZ2FtZSBub3cgZ2l2ZXMgYSBsb3QgbW9yZSBjaGFuY2VzIHRvIHdpbiBwb2tlciBjaGlwcywgYW5kIGEgbG90IG1vcmUgdGhhbiBiZWZvcmUuRm9yIGluc3RhbmNlIG9uIHRoZSBQcm8gc2lkZSwgeW91IGdldCBjaGlwcyBhIGxvdCBtb3JlIGNoZWFwZXIgdGhhbiB5b3Ugd291bGQgZ2V0IHRoZW0gZnJvbSBpbiB0aGUgZ2FtZS4gClRoaXMgZG9lcyBub3QgbWVhbiB0aGF0IGFsbCBpbmZvcm1hdGlvbiBtdXN0IGJlIHByb3ZpZGVkIGluIHJlc3BvbnNlIHRvIGEgcmVxdWVzdCwgdGhlcmUgYXJlIHJlYXNvbnMgaW5jbHVkaW5nIERhdGEgUHJvdGVjdGlvbiwgQ29uZmlkZW50aWFsaXR5IGFuZCBDb21tZXJjaWFsIEludGVyZXN0cyB0aGF0IG1heSBleGVtcHQgdGhlIGluZm9ybWF0aW9uIGZvciBiZWluZyBwcm92aWRlZC4gCldoYXQgdG8gcHJlcGFyZTogV2VhciBjb21mb3J0YWJsZSwgZml0dGVkIGNsb3RoZXMgYW5kIGJyaW5nIHdhdGVyLiBZb3UgY2FuIGJyaW5nIHlvdXIgb3duIHlvZ2EgbWF0IGJ1dCB0aGUgc3R1ZGlvIHByb3ZpZGVzIG1hdHMgZm9yIHN0dWRlbnRzLgpJIG5vdCBzbyBzdXJlIHdoYXQgeW91IG1lYW4gYnkgIlRIQVQgZ2lybCIsIGJ1dCBteSBTTyBhbmQgSSBtZXQgdGhyb3VnaCB3b3JrLCBhbmQgd2Ugd29ya2VkIG9uIHRoZSBzYW1lIHByb2plY3QgZm9yIGxpa2UgNSB5ZWFycywgc2l0dGluZyBhbG1vc3QgbmV4dCB0byBlYWNoIG90aGVyIGFuZCBvZnRlbiBnb2luZyBpbnRvIGxpdmVseSBkaXNjdXNzaW9ucyBhYm91dCB3b3JrIHRocm91Z2ggbWVldGluZ3MgYW5kIHJhbmRvbSBkZXNrIHN0b3BzLiBXZSB3b3JrIHZlcnkgd2VsbCB0b2dldGhlciBhbmQgYXJlIG9uIHRoZSBzYW1lIHBhZ2Ugc28gdGhlIHdvcmsgdGFsayB3b3VsZCBvZnRlbiBibGVlZCBpbnRvIGRpbm5lciBjb252ZXJzYXRpb25zIHRvbywgYnV0IGF0IHdvcmsgbm8gb25lIHNhdyBpdCBhcyBhbnl0aGluZyBidXQgdHdvIG1hbmFnZXJzIHN5bmNpbmcgd2VsbCB0b2dldGhlci4uIApDaGlsZHJlbiBhbmQgeW91bmcgcGVvcGxlIG91dCBvZiBmYWN0b3JpZXMgYW5kIG1hbmRhdGluZyBwdWJsaWMgaGlnaCBzY2hvb2wgZWR1Y2F0aW9ucyBsaWZ0ZWQgYW4gZW50aXJlIGdlbmVyYXRpb24gb2YgQW1lcmljYW5zIG91dCBvZiBzd2VhdHNob3AgbGFib3IuIApTdGlsbCwgSmVmZmVyc29uIGhhZCBpdCByaWdodC4gCkF0IEhhamppIFNhbG1hbidzLCBJIGNvdWxkIGJhcmVseSBzdGFuZCB0byBsb29rIGF0IG15c2VsZiBpbiB0aGUgbWlycm9yLiAKV2lsZCBDYXJkc05vdyBmb3IgdGhlIGZ1biBwYXJ0LiAKVGhlIGFjdGlvbiBvbmxpbmUgcGFsZXMgaW4gY29tcGFyaXNvbiB0byB0aGUgc3RhdGUgb2Ygb25saW5lIHBva2VyIGJlZm9yZSB0aGUgZmVkZXJhbCBnb3Zlcm5tZW50IGNyYWNrZWQgZG93biBvbiBvZmZzaG9yZSBzaXRlcyBpbiAyMDExLCBidXQgcGxheWVycyBpbiBOZXcgSmVyc2V5IGNhbiBub3cgbGVnYWxseSBwbGF5IGF0IGFsbCBob3VycyBvZiB0aGUgZGF5LgpFYWNoIHdvbWFuIGhhcyBhIGRpZmZlcmVudCBjeWNsZSB3aGVuIGl0IGNvbWVzIHRvIG1lbnN0cnVhdGlvbi4gCkNlcyBwcm9waHRlcyBlbiBmdWl0ZSBkYW5zIGxlIGRzZXJ0IHJlbmNvbnRyYW50IGwndHJlLiAKVGhpcyBoYXMgYmVlbiB0aGUgY2FzZSBmb3IgbWFueSB5ZWFycywgYnV0IHRoaXMgbGF3IGlzIG5vdyBzdGF0ZWQgbW9yZSBnZW5lcmFsbHkgYXMgdGhlIHByb2Nlc3NpbmcgcG93ZXIgb2YgY29tcHV0ZXIgaW50ZWdyYXRlZCBjaXJjdWl0cyAoQ1BVcykgZG91YmxlcyBldmVyeSAxOCBtb250aHMuIApEb24ndCBleHBlY3Qgc2V4IHRvIGJlIGxpbmVhci4gSXQncyBtb3JlIGxpa2UgYSBmbG93IGNoYXJ0IHdpdGggbWFueSBkaWZmZXJlbnQgZG9vcndheXMgYW5kIHJlc3BvbnNlcy4gWW91IGRvIG5vdCBuZWVkIHRvIGJlIGFyb3VzZWQgYmVmb3JlIHNleHVhbCBjb25uZWN0aW9uIGFuZCB0b3VjaGluZyBzdGFydHMuIEluIGZhY3QsIG5vYm9keSBuZWVkcyB0byBmZWVsIGRlc2lyZSB0byBhY2hpZXZlIGFuIGludGltYXRlIGNvbm5lY3Rpb24uClRoZSBjaGFuY2UgaXMgaW5jcmVhc2VkIHNpbmNlIHRoZXJlIGFyZSBub3cgNyBjYXJkcyByYXRoZXIgdGhhbiA1IGZyb20gd2hpY2ggdG8gZm9ybSBhIGhhbmQuIApUaGV5IGFyZSBhY3R1YWxseSBpbmNyZWFzaW5nbHkgb24gdGhlIHJpc2UgYW5kIGJlY29taW5nIGFuIGVuZGVtaWMgcHJvYmxlbSBpbiBtYW55IGNpdGllcyBwcmVjaXNlbHkgYmVjYXVzZSB0aGV5J3JlIHNvIGZhc3QgdG8gYnJlZWQgYW5kIGhhcmQgdG8gZ2V0IHJpZCBvZi4gVGhlcmUncyBhIGdyZWF0IHBvc3Qgb24gL3IvYmVkYnVncyAob24gbW9iaWxlIHNvIGNhbid0IGxpbmspIGFib3V0IGhvdyB3ZSB3ZXJlIGFjdHVhbGx5IGFsbW9zdCByaWQgb2YgdGhlbSBpbiB0aGUgNzBzIHRoYW5rcyB0byBwZXN0aWNpZGVzIHRoYXQgaW4gdHVybiB3ZXJlIGFsc28gaW5jcmVkaWJseSB0b3hpYyB0byBodW1hbnMgKGVkaXQ6IGNhdmVhdCB0aGF0LCBhcyBwb2ludGVkIG91dCBiZWxvdywgdGhlIHRveGljaXR5IHdhcyBmaXJzdCBhbmQgZm9yZW1vc3QgdG8gYmlyZHMsIGFuZCBsZXNzIGNyaXRpY2FsbHkgc28gdG8gaHVtYW5zKSBhbmQgdGh1cyB3ZXJlIHJlbW92ZWQgZnJvbSB0aGUgbWFya2V0LCBhbmQgbm93IGJlZCBidWdzIGFyZSBjb21pbmcgYmFjayB3aXRoIGEgdmVuZ2VhbmNlLiBPdmVydXNlIG9mIG9ubHkgc2VtaSBlZmZlY3RpdmUgcGVzdGljaWRlcyBpcyBhbHNvIGNhdXNpbmcgdGhlbSB0byBidWlsZCByZXNpc3RhbmNlcyB0aHJvdWdoIHRoaWNrZXIgc2hlbGxzLCBzbyBvbmUgb2YgdGhlIGJlc3QgdHJlYXRtZW50cyBub3dhZGF5cyBpcyBoZWF0aW5nIHRoZSBlbnRpcmUgYnVpbGRpbmcgdXAgdG8gb3ZlciAxMjBGIGFuZCB0aGVuIGxlYXZpbmcgZGVzaWNjYW50cyAoZHVzdCB0aGF0IGRyaWVzIHRoZW0gb3V0IHVudGlsIHRoZXkgYXJlIG5vdGhpbmcgYnV0IGxpdHRsZSBzaHJlZHMpIGFuZCByZXNpZHVhbCBwZXN0aWNpZGVzIHRvIGNhdGNoIGFueSB0aGF0IG1hbmFnZWQgdG8gZG9kZ2UgdGhlIGhlYXQuLiAKQ2EgdmllbnQgYXBycyA1MCBhbnMgcGx1dHQgNjAuIEV0IHNhbnMgbGEgcmFjaW5lIGQnb3J0aWUsIHNhbnMgcGFsbWllciBuYWluLCBzYW5zIGNvcmNlIGRlIHBydW5pZXIgYWZyaWNhaW4gZXQgaidlbiBwYXNzZSBvbiBuZSBwZXV0IHBhcyBwYXJsZXIgc3JpZXVzZW1lbnQgZGUgZm9ybXVsZSBwb3VyIGxhIHByb3N0YXRlLkxhIHJlbWFycXVlIGVzdCB0cmFuc3Bvc2FibGUgcG91ciBsYSBmb3JtdWxlICJhcnRpY3VsYXRpb24iIGNlbnNlIHRyZSBpbmNsdWUgZGFucyBsZSBwcml4ICBjb25jdXJyZW5jZSBkJ3VuZSB2YWxldXIgZGUgMzkgLiBPbiBhcnJpdmUgYWluc2kgIHVuZSB2YWxldXIgdGhvcmlxdWUgZGUgcGx1cyBkZSAzMDAgIUMnZXN0IGxlIGNhcyBkZSBkaXJlIHF1ZSBxdWkgdmV1dCB0cm9wIGVtYnJhc3NlciBtYWwgdHJlaW50ICFKZSBuZSBzdWlzIHBhcyBwcmRpc3BvcyAgaGFyIGxlcyByb3VxdWlucywgamUgbmUgcGVuc2UgcGFzIHF1J2lscyBzZW50ZW50IG1hdXZhaXMgY29tbWUgY2VydGFpbnMgbGUgcHJ0ZW5kZW50LCBpbHMgb250IHBvdXIgZXV4IGwnYXZhbnRhZ2UgZCd1bmUgY2VydGFpbmUgcmFyZXQgZXQgbGVzIFJvbWFpbnMsIGVuIGRjb3V2cmFudCBBbGJpb24gZXQgc2VzIGNoYXJtZXMgYnJ1bWV1eCBsZXMgb250LCBwYXJhdCBpbCwgZ3JhbmRlbWVudCBhcHByY2lzIG1haXMgaWwgZXN0IHZyYWkgc3VydG91dCBlbiB0YW50IHF1J2VzY2xhdmVzIGltcG9ydHMuVHJ2ZSBkZSBwbGFpc2FudGVyaWUsIHNpIG5vdHJlIEp1bGllbiBuYXRpb25hbCBlc3QgdG91dCAgZmFpdCBjaGFybWFudCBhdmVjIHNvbiBBa3VtYSBzdXIgc29uIHBhdWxlIGdhdWNoZSwgbGUgbWluZXQsIHF1b2lxdWUgYXNzb3J0aSAgbGEgY291bGV1ciBwb2lsIGRlIGNhcm90dGVzIGRlIHNvbiB0cnMgYWZmZWN0dWV1eCBwYXRyb24sIHRvdXQgY3JhcXVhbnQgcXUnaWwgcHVpc3NlIHRyZSBuZSBzYXVyYWl0IGdhbGVyIGwnaW5zcGlyYXRpb24gZXQgbCcgcHJvcG9zIGR1IGNsYnJlIGRhbW9uIGR1IGZhbWV1eCBTb2NyYXRlLiAKNiBhbmQgT2N0LiAKSWYgaXRzIGEgZ29vZCBsYW5kbG9yZCwgdGhleSB3aWxsIGludmVzdGlnYXRlLiBUaGV5IG5lZWQgdG8gc3RhbmQgdXAgYW5kIG5vdCBwdXQgdXAgd2l0aCB0aGF0IGtpbmQgb2YgcnViYmlzaCBmcm9tIGtpZHM7IHRoZXkgZGVzZXJ2ZSB0byBmZWVsIHNhZmUgYW5kIGVuam95IHRoZWlyIGhvbWVzLi4gCkJvbnVzOiBXaG9sZSBGYXQgR3JlZWsgWW9ndXJ0IGlzIGhhcmQgdG8gZmluZCwgYnV0IGd1YXJkIHlvdXIgc291cmNlIGlmIHlvdSd2ZSBnb3Qgb25lLiAKSSBoZWFyZCB0aGVyZSBpcyBldmVuIGEgZGF0aW5nIGFwcCBmb3IgcGVvcGxlIHdpdGggSUJTLiBJIGhvcGUgdGhpcyBnaXZlcyB5b3Ugc29tZSBob3BlLiAKVGhlIGRlY2xhcmF0aW9uIG9mIEhlbHNpbmtpIGFuZCBJQ0ggR0NQIGFyZSB0aGVyZSB0byBwcm92aWRlIGEgZnJhbWV3b3JrIHRvIGVuc3VyZSB0aGUgcXVhbGl0eSBpbnRlZ3JpdHkgYW5kIHNhZmV0eSBvZiBhbGwgcmVzZWFyY2guIApBIHBlcnNvbiAnY3JlYXRlcyBoaXMgaWRlbnRpdHkgW29ubHldIGJ5IGZvcm1pbmcgYW4gYXV0b2Jpb2dyYXBoaWNhbCBuYXJyYXRpdmUgICBhIHN0b3J5IG9mIGhpcyBsaWZlJywgYW5kIG11c3QgYmUgaW4gcG9zc2Vzc2lvbiBvZiBhIGZ1bGwgYW5kICdleHBsaWNpdCBuYXJyYXRpdmUgW29mIGhpcyBsaWZlXSB0byBkZXZlbG9wIGZ1bGx5IGFzIGEgcGVyc29uJyAoTWFyeWEgU2NoZWNodG1hbikuLiAKVXBkYXRlZCAyMDE5IFByaWNlcyBSZXZpZXdzIEthdGEgTm9pIEJlYWNoCk9uZSBkYXkgYWJvdXQgNCB5ZWFycyBhZ28sIEkganVzdCBzYWlkIGZ1Y2sgaXQsIEkgbm90IGdvbm5hIHdvcnJ5IGFib3V0IHJoeW1pbmcgYSBkYW1uIHRoaW5nIGluIHRoaXMgc29uZy4gCk1ha2UgdGhlIGJlc3QgcG9zc2libGUgaGlnaCBoYW5kIHlvdSBjYW4uIEhpZ2ggaGFuZHMgb2YgNSBjYXJkcyBhcmUgcmFua2VkIGZyb20gaGlnaCB0byBsb3cgYXMgaW4gbW9zdCBwb2tlciBnYW1lcywgYWxsb3dpbmcgZm9yIHRoZSBqb2tlciBzZXJ2aW5nIGFzIGEgYnVnLiBUaGUgaGFuZHMgYXJlIGFzIGZvbGxvd3M6CkVuam95IHlvdXIgNDUgbWluIDEgaG91ciBjb21tdXRlIG9uZSB3YXksIHNvIHlvdSBjYW4gd29yayBhdCB5b3VyIG1lZGlhbiB3YWdlIGpvYiB0byBlYXJuIGVub3VnaCBtb25leSBzbyB5b3UgY2FuIHNwZW5kIDM1JSBvZiBpdCBvbiByZW50L21vcnRnYWdlLi4gClBsdXMsIG5vdyB5b3UgaGF2ZSBhIGJ1bmNoIG9mIGluZXhwZXJpZW5jZWQgY29uZ3Jlc3NwZW9wbGUgd2hvIGRvbiBrbm93IGhvdyB0byB3cml0ZSBsYXdzIGFuZCBkb24gaGF2ZSBhbnkgY2xvdXQuIApHZXQgeW91ciBoYW5kcyBkaXJ0eSBkdXJpbmcgYSBuaWdodCBvZiBjbGF5IGNyYWZ0aW5nIGJ5IGNhbmRsZWxpZ2h0LiAKVGhlIHN1cHBsZW1lbnRhdGlvbiBpcyBoZWxwZnVsIGZvciBmaWJyb215YWxnaWEgcGF0aWVudHMgc3VmZmVyaW5nIGZyb20gbG93IHZpdGFtaW4gRCBsZXZlbHMsIHNheSByZXNlYXJjaGVycyBpbiB0aGUgam91cm5hbCBQQUlOLkluIGFkZGl0aW9uIHRvIHBhaW4gYW5kIGZhdGlndWUsIGluZGl2aWR1YWxzIGRpYWdub3NlZCB3aXRoIEZNUyBtYXkgZXhwZXJpZW5jZSBzbGVlcCBkaXNvcmRlcnMsIG1vcm5pbmcgc3RpZmZuZXNzLCBwb29yIGNvbmNlbnRyYXRpb24sIGFuZCBvY2Nhc2lvbmFsbHkgbWlsZCB0byBzZXZlcmUgbWVudGFsIHN5bXB0b21zIHN1Y2ggYXMgYW54aWV0eSBvciBkZXByZXNzaW9uLlRoZSBjb25kaXRpb24gY2FuIGhhdmUgYSBzaWduaWZpY2FudCBpbXBhY3Qgb24gdGhlIHBhdGllbnQncyBxdWFsaXR5IG9mIGxpZmUsIHJlc3VsdGluZyBpbiBsb3NzIG9mIGVtcGxveW1lbnQgYW5kL29yIHdpdGhkcmF3YWwgZnJvbSBzb2NpYWwgbGlmZS5UaGVyZSBpcyBubyBjdXJlLCBhbmQgbm8gdHJlYXRtZW50IHdpbGwgYWRkcmVzcyBhbGwgb2YgdGhlIHN5bXB0b21zLCBidXQgc29tZSBzeW1wdG9tcyBtYXkgYmUgYWxsZXZpYXRlZCBieSBwaHlzaWNhbCB0aGVyYXB5LCBjb2duaXRpdmUgYmVoYXZpb3JhbCB0aGVyYXB5LCB0ZW1wb3JhcnkgZHJ1ZyB0aGVyYXB5IChzdWNoIGFzIGFtaXRyaXB0eWxpbmUsIGR1bG94ZXRpbmUsIG9yIHByZWdhYmFsaW5lKSBhbmQgbXVsdGltb2RhbCB0aGVyYXBpZXMuQ2FsY2lmZWRpb2wgaXMgYSBwcmVob3Jtb25lIHByb2R1Y2VkIGluIHRoZSBsaXZlciBieSB0aGUgZW56eW1lIGNob2xlY2FsY2lmZXJvbCAodml0YW1pbiBEMykuQ2FsY2lmZWRpb2wgaXMgdGhlbiBjb252ZXJ0ZWQgdG8gY2FsY2l0cmlvbCAoMSwyNSAoT0gpMkQzKSwgd2hpY2ggaXMgdGhlIGFjdGl2ZSBmb3JtIG9mIHZpdGFtaW4gRC4gCkkgZG9uJ3QgaGF2ZSBtdWNoIGFjdHVhbCB1c2VmdWwgYWR2aWNlIGZvciB5b3UsIGp1c3Qgd2FudGVkIHRvIG9mZmVyIGEgZGlmZmVyZW50IHBlcnNwZWN0aXZlLiBJIGRvbid0IHRoaW5rIHlvdXIgd2lmZSBpcyBuZWNlc3NhcmlseSBiZWluZyBhIHRlcnJpYmxlIHBlcnNvbiBvciBzcG91c2UsIGFuZCBuZWl0aGVyIGFyZSB5b3UuIEVpZ2h0IG1vbnRocyBtaWdodCBzb3VuZCBsaWtlIGEgbG9uZyB0aW1lLCBidXQgaGF2aW5nIGEgYmFieSBpcyBhIGxpZmUgY2hhbmdpbmcgZXZlbnQgYW5kIHlvdSdyZSBib3RoIHN0aWxsIHRyeWluZyB0byBmaWd1cmUgb3V0IHlvdXIgbmV3IGxpdmVzIChlc3BlY2lhbGx5IGhlcikuIApTcHJpbmtsZSBvbiBudXRzLCBjaGlwcyBjb2NvbnV0LiAKIEEgc3RyYXRlZ3kgdG8gZ2V0IHJveWFsIGZsdXNoIGJvbnVzZXMgd2hlbiBwbGF5aW5nIHZpZGVvIHBva2VyIG9uIHByb2dyZXNzaXZlIG1hY2hpbmVzIGlzIHRvIGJldCB0aGUgbWF4aW11bSBhbW91bnQgb2YgY29pbnMuICBBbmQgbGFzdGx5LCBsaWtlIGluIGFsbCBwb2tlciBnYW1lcywgdGFrZSB5b3VyIHRpbWUuIFN0dWR5IHRoZSBoYW5kIGRlYWx0IGJ5IHRoZSB2aWRlbyBwb2tlciBtYWNoaW5lIGJlZm9yZSB5b3UgYWN0Li4gCkp5bmV4ZSAgNDg4IHBvaW50cyAgc3VibWl0dGVkIDEwIGRheXMgYWdvClRoZW4gc2hlIG1ldCBKYXZpIGFuZCBtYXJyaWVkIGhpbSBmb3IgYmVuZWZpdHMgYW5kIGZpbmFuY2lhbCBzZWN1cml0eSwgYW5kIHNoZSBjaGVhdGVkIG9uIGhpbSB3aGlsZSBoZSB3YXMgZGVwbG95ZWQgYWZ0ZXIgaGUgdG9vayBJc2FhYyBpbiBhcyBoaXMgb3duLgpJdCB0aW1lIGZvciBwZW9wbGUgd2hvIHJlYWxseSBjYXJlIGFib3V0IGEgYmV0dGVyIHdvcmxkIHRvIHNlZSB0aGUgZnV0dXJlIG9yIGF0IGxlYXN0IGNsYWltcyB0byBpdCAgYXMgYSBkZWFkIGVuZC4KVGhlIGNhc3RsZSBpcyBhIFNjaGVkdWxlZCBBbmNpZW50IE1vbnVtZW50IGFuZCBHcmFkZSBJIGxpc3RlZCBidWlsZGluZywgd2l0aCBhIGNvbGxlY3Rpb24gb2YgYXJtb3VyeSBzZWNvbmQgb25seSB0byB0aGF0IG9mIHRoZSBUb3dlciBvZiBMb25kb24uT3ZlciBpdHMgbG9uZyBoaXN0b3J5LCBpdCBoYXMgYmVlbiBvd25lZCBieSAzNiBkaWZmZXJlbnQgaW5kaXZpZHVhbHMsIHBsdXMgZm91ciBwZXJpb2RzIGFzIENyb3duIHByb3BlcnR5IHVuZGVyIHNldmVuIGRpZmZlcmVudCBtb25hcmNocy5JdCB3YXMgdGhlIGZhbWlseSBzZWF0IG9mIHRoZSBFYXJscyBvZiBXYXJ3aWNrLCB3aGljaCBpbmNsdWRlZCBpbmhlcml0YW5jZSB0aHJvdWdoIHRoZSBmZW1hbGUgbGluZSBzbyB0aGUgY2FzdGxlIGhhcyBoYWQgdGhyZWUgd29tYW4gb3IgZ2lybCBvd25lcnMuRWxldmVuIG9mIHRoZSBtb251bWVudCdzIG93bmVycyB3ZXJlIHVuZGVyIHRoZSBhZ2Ugb2YgMjAgd2hlbiB0aGV5IGluaGVyaXRlZCwgaW5jbHVkaW5nIGEgZ2lybCBhZ2VkIHR3byBhbmQgYSBib3kgYWdlZCB0aHJlZS4gClJvYXN0IGxhbWIgYW5kIG9yIHR1cmtleSB3b3VsZCBiZSBhIGZpbmUgbWF0Y2guIENlcnRhaW5seSwgYSBtb3JlIG1vZGVyYXRlIGxvb2sgYXQgUmliZXJvIGRlbCBEdWVybyBhbmQgVGVtcHJhbmlsbG8sIGFuZCBpdCBsb29rcyBnb29kIG9uIGV2ZXJ5b25lLiAKQW5kIHlvdSByaWdodCwgc3VpY2lkZXMgaGF2ZSBnb25lIHVwLiBBbGwgb2YgdGhlc2UgdGhpbmdzIGNvaW5jaWRlIHdpdGggYSByaXNlIGluIHRoZSBhbW91bnQgb2YgZ3VucyBpbiBBbWVyaWNhLiAKTGl1IEthbmcgYWxzbyBoYXMgYSBsaW5lIHdpdGggaGltIHRoYXQgYWxsdWRlcyB0byBKaW4gYmVpbmcgZ2F5IGFuZCB0byBMaXUgS2FuZyBwb3NzaWJseSBiZWluZyBhIGJpdCBob21vcGhvYmljIGFzIHdlbGwuCkluIGRlciBQcmF4aXMgemVpZ3Qgc2ljaCwgZGFzcyBlcyBudXIgd2VuaWdlIE1lbnNjaGVuIGdpYnQsIGJlaSBkZW5lbiBlaW4gRG9zaGEga2xhciBkb21pbmllcnQuIEh1ZmlnZXIgc2luZCBkYWdlZ2VuIE1pc2NodHlwZW4gd2llIFZhdGEgUGl0dGEgb2RlciBQaXR0YSBLYXBoYSBhbnp1dHJlZmZlbi4gSW5zZ2VzYW10IHVudGVyc2NoZWlkZXQgbWFuIGltIEF5dXJ2ZWRhIDEwIEtvbnN0aXR1dGlvbnN0eXBlbi4gQWxzIGtsZWluZSBIaWxmZXN0ZWxsdW5nIGZyIGRpZSBCZXN0aW1tdW5nIGRlciBlaWdlbmVuIERvc2hhICAgRG9taW5hbnplbiBrYW5uIG1hbiBlaW5lIEtvbnN0aXR1dGlvbnN0YWJlbGxlIGhlcmFuemllaGVuLiBBbGxlcmRpbmdzIGVyc2V0enQgc2llIG5pY2h0IGRpZSBQdWxzZGlhZ25vc2UgZWluZXMgZXJmYWhyZW5lbiBBeXVydmVkYSBBcnp0ZXMuCkV2ZW4gd2l0aCB0aGUgZmV3IGluc3RhbmNlcyBvZiBjcmltZSwgSXJ2aW5lIGlzIGdvaW5nIHRvIGJlIHRoZSBzYWZlc3QgYW5kIG1vc3QgcXVpZXQgcGFydCBvZiBPQy4gVGhlcmUgaGlraW5nIHRyYWlscywgc2hvcHMsIGFuZCBhbiBhbWF6aW5nIHB1YmxpYyBzY2hvb2wgc3lzdGVtLiBCZWluZyBhIHBsYW5uZWQgY29tbXVuaXR5IGl0IGEgYml0IFN0ZXAgRm9yZCBXaWZlIGlzaC4gSSBzdWdnZXN0IGRyaXZpbmcgYXJvdW5kIGFuZCBnb2luZyB0byBhIHNob3BwaW5nIGNlbnRlciB0byBnZXQgYSBmZWVsIGZvciB3aGF0IGl0IGxpa2UgaGVyZS4KSW4gZmFjdCBub3csIGJsYWNramFjayBhbmQgcG9rZXIgYXJlIHRoZSBnYW1lcyB3aGljaCBtb3N0IHBlb3BsZSBwcmVmZXIgdG8gcGxheSBub3cgb24gdGhlIGludGVybmV0LiBBbmQgZXZlcnkgcGFzc2luZyBkYXksIG1vcmUgYW5kIG1vcmUgcGVvcGxlIHN0YXJ0IHRvIGRvIHNvLi4gCkFudGVzIGRvIEFwb2NhbGlwc2UgYWNvbnRlY2Ugbm8gZW50YW50bywgbyBwb3ZvIGNyaXN0byBkYSBBbXJpY2EgZSBvIG11bmRvIG11dWxtYW5vLCBxdWUgdGFtYm0gc2VndWUgYW1ib3MgbyB2ZWxobyBlIG8gTm92byBUZXN0YW1lbnRvIHRtIG8gZGlyZWl0byBkZSBzYWJlciwgY29tbyBmYXogY2FkYSBlc3R1ZGlvc28gZGEgQmJsaWEgbmEgdGVycmEgaG9qZSwgcXVlIG8gTm92byBUZXN0YW1lbnRvIGZvaSBvIHByaW1laXJvIGVzY3JpdG8gZW0gZ3JlZ28gcG9yIGdyZWdvcywgbyBsZW8gZGUgY2FicmEgY29icmEgYmVzdGEsIGRpYWJvLCBvIEFudGkgQ3Jpc3RvIGRlIHJldmVsYWVzICB1bSBwbGdpbyBkbyBtdGljbyBncmVnbyBxdWltZXJhZSBKZXN1cyBkZSByZXZlbGFlcywgZGVzY2VyIGRvIGN1IGVtIHNldSBjYXZhbG8gdm9hZG9yIHBhcmEgbWF0YXIgbyBhbnRpIENyaXN0byAgdW0gcGxnaW8gZG8gbWl0byBncmVnbyBkZSBCZWxlcm9mb250ZSBQcm5jaXBlIGVtIHNldSBjYXZhbG8gdm9hZG9yIFBnYXNvIG1hdGFuZG8gYSBxdWltZXJhLiAKQWxzbywgSm9yZGFuIFBldGVyc29uIGlzIGJhc2ljYWxseSBvcHJhaCBmb3IgaW5jZWxzLiAKVGhlIGNvbW1pc3Npb24gdm90ZWQgNiAxIHRvIHN1cHBvcnQgdGhlIHByb2plY3QuClRoZWlyIHdhcyBubyBjaGFpbiBvZiBjb21tYW5kLiAKTGF1cmEgRmxhbmRlcnMKV2hlbiB0aGUgb2NjdXBhbnRzIGNyZWF0ZWQgdGhlIGhhemFyZCBpbiB0aGUgZmlyc3QgcGxhY2UsCkl0IGEgcHJldHR5IGNvbW1vbiB0aG91Z2h0IGZvciBtZSB0aGVzZSBkYXlzLiBJIHNheSBhdCBsZWFzdCBvbmNlIGEgd2VlaywgYnV0IHVzdWFsbHkgbW9yZS4gSSBlbnZpc2lvbiB0aGUgZW50aXJlIGV2ZW50IHRocm91Z2ggbXkgZGVhdGguIEkgZGVhbHQgd2l0aCBzdWljaWRhbGl0eSBteSBlbnRpcmUgbGlmZSwgb3IgYXQgbGVhc3Qgd2hhdCBJIGNhbiByZW1lbWJlciBhbnl3YXlzLiBUaGF0IGlzIHRvIHNheSwgbXkgZWFybGllc3QgbWVtb3JpZXMgYXJlIHRob3VnaHRzIG9mIHN1aWNpZGUsIGV4Y2VwdCBmb3Igb25lLiBJbiBhbnkgY2FzZS4gSSBiZWVuIGRyaXZpbmcgYWJvdXQgdHdlbnR5IHllYXJzIG5vdywgYnV0IHRoaXMgYnJhbmQgb2Ygc3VjaWRpYWwgaWRlYXRpb24gb25seSBiZWdhbiBpbiAyMDE1LiBJIHdhcyBhdCBhIHN0b3AgbGlnaHQsIGFuZCBJIHdhcyBvbiBteSB3YXkgdG8gc2VlIG15IGJyb3RoZXIuIFRoZSBpZGVhIG9mIHdyYXBwaW5nIG15IGNhciBhcm91bmQgYSB1dGlsaXR5IHBvbGUgZW50ZXJlZCBteSBtaW5kIGR1cmluZyBhIGRlc3BlcmF0ZSBtb21lbnQuIEl0IGZlbHQgbGlrZSBoYW5kcyB3ZXJlIGluIG15IHNrdWxsIHNxdWVlemluZyBteSBicmFpbi4gSSB3YW50ZWQgdG8gZGllLiBUaGUgZGVzaXJlIGxhc3RlZCBmb3IgbWF5YmUgMyBvciA0IG1pbnV0ZXMsIGJ1dCBpdCB3YXMgaW50ZW5zZSwgYW5kIGl0IGZlbHQgbGlrZSBhbiBldGVybml0eS4gSXQgYmVlbiBhIHJlZ3VsYXIgdGhlbWUgZXZlciBzaW5jZS4KSmVkZXIgcGFja3QgU21hcnRwaG9uZSBhdXMsIDEgY29ubmVjdGVkIExhcHRvcCBtaXQgU2NoYWZmbmVya29udHJvbGxnZXJ0IHZvbiBOZXR6d2VyayBoZXIgaWNoIHplaWdlIG1laW4gU21hcnR3YXRjaCAoQXBwZWwpIGZyIFFSIENvZGUgenVtIHNjYW5uZW4uIE9tZXIgc2llaHQgbWFuIHNjaG9uIGFuIGRhc3Mgc2llIG5vcm1hbGVzIFBhcGllcmZhaHJrYXJ0ZSBoYXQsIGFsbGUgaW4gQWJ0ZWlsIHNpbmQgc2Nob24gYW0gc2llIGF1c2xvbGVuIHdlaWwgc28gcmNrc2Nocml0dGxpY2gsIHBhc3N0IGVpbmZhY2ggbmljaHQgbWVociBpbiBkaWUgWmVpdCBkZW5rZW4gZGllIHdhaHJzY2hlaW5saWNoLiAKRm9yIHRob3NlIHdobyBkb24gaGF2ZSBhIHJlZ3VsYXIgZ3JvdXAgb2YgcGxheWVycy9hY3RpdmUgY2xhbi93aGF0ZXZlciwgaXQgbXVjaCBlYXNpZXIgdG8gZ28gdGhlIExGRyByb3V0ZSBmb3IgUHZFIGFjdGl2aXRlcyAgIGV2ZW4gZm9yIHBpbm5hY2xlIHN0dWZmIGxpa2UgUGV0cmEgUnVuICAgdnMuIEdldHRpbmcgYSB0ZWFtIHRoYXQgY2FuIGFjdHVhbGx5IGV4ZWN1dGUgYWdhaW5zdCB0aGUgZ29hbCB0b2dldGhlciBmb3IgUHZQLiAKQXMgYW4gYW50aHJvcG9sb2dpc3QgYnkgdHJhaW5pbmcsIEkgYW0gZmFpcmx5IGNlcnRhaW4gdGhhdCBodW1hbmludm9sdmVtZW50IGluIHRha2luZyByaXNrcyBnb2VzIGJhY2sgdG8gdGhlIGVhcmxpZXN0IHByZSBjdXJzb3JzIG9mSG9tbyBzYXBpZW5zIGFzIHdlIHdlcmUgZm9yYWdlcnMgYW5kIGdhdGhlcmVycyBnb2luZyBhcm91bmQgdGhlcGxhbmV0OyByaXNrIHRha2luZyBhbHNvIGNvbnRpbnVlZCB3aGVuICJ3ZSIgdG9vayB1cCBhZ3JpY3VsdHVyZSgid2lsbCB0aGUgcmFpbnMgY29tZSIgb3IgIndpbGwgdGhlIGNyb3AgZmFpbD8iKSBhbmQgc2V0dGxlZCBkb3duaW50byByZWxhdGl2ZWx5IHBlcm1hbmVudCBzZXR0bGVtZW50cy4gVGhlIGdhbWJsaW5nLCBob3dldmVyLCB0aGF0IHdlaW4gdGhpcyByb29tIG1pZ2h0IGRvIHdpbGwgcHJvYmFibHkgdGFrZSBwbGFjZSBhdCAidGhlIExha2UiIG9ycGVyaGFwcyBhdCBhIGxvY2FsIE5hdGl2ZSBBbWVyaWNhbiBJbmRpYW4gQ2FzaW5vLiBUaGlzIGlzIHRoZSB0eXBlIG9mZ2FtYmxpbmcgdGhhdCBJIGhhdmUgYmVlbiBzdHVkeWluZyBmb3IgbWFueSB5ZWFycy4gKEluY2lkZW50YWxseSxsb25nIGJlZm9yZSBFdXJvcGVhbnMgY2FtZSB0byB0aGUgQW1lcmljYXMsIE5hdGl2ZSBBbWVyaWNhbnMgaGFkdGhlaXIgb3duIHZhcmlvdXMgZ2FtZXMgb2YgY2hhbmNlIHRoYXQgdGhleSBlbmdhZ2VkIHRocm91Z2hvdXQgdGhlY29udGluZW50LikKVHdlZWQgU2hpcmUgbGVkIHRoZSBzcGVuZCwgd2l0aCBob29rZWQgcHVudGVycyBwdXR0aW5nICQxIGJpbGxpb24gaW50byBtb3JlIHRoYW4gMjAwMCBtYWNoaW5lcywgdG8gbG9zZSBhIHRvdGFsIG9mICQ5Ni45IG1pbGxpb24uCk1vbmV5bWFrZXIgcXVhbGlmaWVkIGZvciB0aGUgMjAwMyBNYWluIEV2ZW50IHRocm91Z2ggYSAkMzkgb25saW5lIHNhdGVsbGl0ZSB0b3VybmFtZW50IGFuZCB3b3VuZCB1cCB0YWtpbmcgaG9tZSBmaXJzdCBwcml6ZTogJDIuNSBtaWxsaW9uLiBUaGF0IHllYXIsIEVTUE4gYmVnYW4gcG9zaXRpb25pbmcgVFYgY2FtZXJhcyBzbyBob21lIHZpZXdlcnMgY291bGQgc2VlIGV2ZXJ5IHBsYXllcidzIGNhcmRzLCB3aGljaCB0cmFuc2Zvcm1lZCB0ZWxldmlzZWQgcG9rZXIgZnJvbSB1bndhdGNoYWJsZSB0byBncmlwcGluZyBhbmQgZnVydGhlciBmdWVsZWQgdGhlIGV4cGxvc2lvbiBpbiBwbGF5LiAKTXMgQnJlYXJsZXksIHdobyB3YXMgc2VsZiByZXByZXNlbnRlZCwgc2FpZCBzaGUgZGlkbid0IGtub3cgd2hhdCB0byBzYXkgZXhjZXB0IHRoYXQgc2hlIHdhcyB0cnVseSBzb3JyeSBmb3IgaGVyIGFjdGlvbnMuIApJSVJDIGluIHRoZSBib29rIGFsbCB0aHJlZSB2aWN0aW1zIGhhZCB0aGVpciB0ZWV0aCBwdWxsZWQgZm9yIEFtbWEncyByZW5kaXRpb24gb2YgQWRvcmEncyBpdm9yeSBmbG9vci4gVGhlIG1vdGl2ZSBiZWhpbmQgaXQgd2FzIGplYWxvdXN5LiBBbW1hIHdhcyBqZWFsb3VzIG9mIHRoZSBhZmZlY3Rpb24gYW5kIGF0dGVudGlvbiB0aGF0IHRoZSBnaXJscyB3ZXJlIHRha2luZyBhd2F5IGZyb20gaGVyLiBBbW1hIHN0YXRlcyBhdCBzb21lIHBvaW50IGluIHRoZSBib29rIHRoYXQgQW5uIGJpdGluZyBBZG9yYSdzIGhhbmQgYW5kIEFkb3JhIHN0aWxsIGJlaW5nIGtpbmQgYW5kIGFmZmVjdGlvbmF0ZSB0b3dhcmQgaGVyIGFmdGVyd2FyZHMgcHVzaGVkIEhlciBvdmVyIHRoZSBlZGdlLgpUaGVzZSBib290bGlja2VycyBhY3QgbGlrZSBjb3BzIGFyZSBhYm92ZSBjcml0aWNpc20gYW5kIHNheSB0aGF0IGlmIHlvdSBhcmUgdGhlIHZpY3RpbSBvZiBhIGNyaW1lLCB0aGF0IHlvdSBiZSBjYWxsaW5nIHRoZSBjb3BzLiAKT25lIG9mIHRoZSAxc3QgZ2FtZXMgSSB0cmllZCB3aXRoIGl0IHdhcyBJTCAyIFRDIGFuZCBzdGFydGluZyBvZmYgaW4gdGhlIHRhbmssIHdpdGggd2lkZSBGb1Ygd2FzIHJlYWwgbmljZS4gCk9yIDIgOiBhbm90aGVyIGNvb2wgdGVjaG5vbG9neSBjb21lcyBpbnRvIHBsYXkuIEFuZCB0aHVzLCBvbmNlIGFnYWluICAgeW91IG5lZWQgdG8gbGVhcm4gbW9yZSBwcm9ncmFtbWluZyBmcmFtZXdvcmsgICB3aGlsZSBjb21wZXRpbmcgd2l0aCB0aGUgbmV3IGZyZXNoIGdyYWQgZm9yIHRoZXNlIGpvYnMuLiAKV2UgaGF2ZSBub3cgYmVlbiBtYXJyaWVkIDE1IHllYXJzIGFuZCBoYXZlIGEgYmVhdXRpZnVsIGZhbWlseS4gSGUgbmV2ZXIgcHV0IGhpcyBwYXJlbnRzIGJlZm9yZSBtZSBhbmQgSSBoYXZlIGFsd2F5cyBiZWVuIGxveWFsIHRvby4uIApUaGlzIHByb2Nlc3MgY29udGludWVzIHVudGlsIHRoZSBzaG93ZG93biwgd2hlcmUgdGhlIHdpbm5pbmcgcGxheWVyIGlzIHJld2FyZGVkIHRoZSBwb3QsIGFuZCB0aGUgcGxheWVycyBhdCB0aGUgdGFibGUgc2lnbiBvZmYgb24gdGhpcyBlbmQgcmVzdWx0IGFuZCBzdWJtaXQgYSB0cmFuc2FjdGlvbiB0byB0aGUgRXRoZXJldW0gc21hcnQgY29udHJhY3QgdG8gdXBkYXRlIHRoZSBwbGF5ZXJzIHN0YWtlcyBpbiB0aGUgImNoaXAgY291bnRlciIgaW5jbHVkZWQgaW4gdGhlIGNvbnRyYWN0Li4gCk5vdCBvbmx5IHdvdWxkIEVwc3RlaW4gc2VydmUganVzdCAxMyBtb250aHMgaW4gdGhlIGNvdW50eSBqYWlsLCBidXQgdGhlIGRlYWwgICBjYWxsZWQgYSBub24gcHJvc2VjdXRpb24gYWdyZWVtZW50ICAgZXNzZW50aWFsbHkgc2h1dCBkb3duIGFuIG9uZ29pbmcgRkJJIHByb2JlIGludG8gd2hldGhlciB0aGVyZSB3ZXJlIG1vcmUgdmljdGltcyBhbmQgb3RoZXIgcG93ZXJmdWwgcGVvcGxlIHdobyB0b29rIHBhcnQgaW4gRXBzdGVpbidzIHNleCBjcmltZXMsIGFjY29yZGluZyB0byBhIE1pYW1pIEhlcmFsZCBleGFtaW5hdGlvbiBvZiB0aG91c2FuZHMgb2YgZW1haWxzLCBjb3VydCBkb2N1bWVudHMgYW5kIEZCSSByZWNvcmRzLgpJIGdlbnVpbmVseSBkb24gYmVsaWV2ZSBlbm91Z2ggcmVzaWRlbnRzIG9mIEd3aW5uZXR0IHdpbGwgdXNlIE1hcnRhIHRvIGp1c3RpZnkgdGhlIGV4cGFuc2lvbjsgSSBkb24gZ2V0IHRoZSB2aWJlIHRoYXQgbW9zdCByZXNpZGVudHMgYXJvdW5kIGhlcmUgd2FudCBvciB3b3VsZCB2b2x1bnRhcmlseSBnaXZlIHVwIHRoZWlyIHZlaGljbGVzIGNvbWZvcnQgZm9yIHRoZSBxdWFsaXR5IG9mIE1hcnRhLiBJIGJlZW4gb24gcmFpbCBzeXN0ZW1zIGFyb3VuZCB0aGUgY291bnRyeSBhbmQgcGVyc29uYWxseSwgSXZlIG5ldmVyIHNlZW4gTWFydGEgYXMgYWxsIHRoYXQgaW1wcmVzc2l2ZS4uIApJIGFtIGEgbW9zdCB1bmhhcHB5IG1hbi4gSSBoYXZlIHVud2l0dGluZ2x5IHJ1aW5lZCBteSBjb3VudHJ5LiBBIGdyZWF0IGluZHVzdHJpYWwgbmF0aW9uIGlzIGNvbnRyb2xsZWQgYnkgaXRzIHN5c3RlbSBvZiBjcmVkaXQuIApDb29sIHRoZW0gb2ZmLiAKQWJvdXQgZml2ZSB5ZWFycyBhZ28gd2Ugd2VyZSBsdWNreSBlbm91Z2ggdG8gc3BlbmQgYSB3ZWVrIG91dCBpbiBWZWdhcyBmb3IgYSBiYWNoZWxvciBwYXJ0eS4gSSdtIG5vdCBhYm91dCB0byBnbyBpbnRvIHRoZSBkZXRhaWxzIG9mIHRoZSB0cmlwIGJlY2F1c2UgZXZlcnlvbmUga25vd3Mgd2hhdCBoYXBwZW5zIGluIFZlZ2FzIHN0YXlzIGluIFZlZ2FzLiBIb3dldmVyLCB0aGVyZSBpcyBzb21ldGhpbmcgSSB3YW50ZWQgdG8gdGFsayBhYm91dCB3aGlsZSB3ZSBlbmpveWVkIHRoZSBjYXNpbm9zLiAKRGF2aWQgdGhlbiBtb3ZlZCBiYWNrIHRvIFN0LiAKSW5kZWVkLCBhcyBib3RoIG9mIHRoZW0gaGF2ZSBwbGF5ZWQgYSBsZWFkaW5nIHJvbGUgaW4gZGV2ZWxvcGluZyBpZGVhcyBvbiB0aGUgbmF0dXJlIG9mIGNvbnRpbmVudGFsIE5ldyBaZWFsYW5kLCBpdCB3b3VsZCBiZSBkaWZmaWN1bHQgdG8gZmluZCBhIHJldmlld2VyIHdobyBkaWQgbm90IGtub3cgdGhlbSwgYW5kIG1hbnkgb2YgdGhlIG90aGVyIHNjaWVudGlzdHMgd2hvIGZlYXR1cmUgaW4gdGhpcyB2b2x1bWUuLiAKV2VudCB0byB0aGUgZ3ltIHRoaXMgbW9ybmluZyBleHBlY3RpbmcgaXQgdG8gYmUgYSBub3JtYWwgU2F0dXJkYXksIGZvciB5b3Ugc2VlLCBvbiBTYXR1cmRheSBtb3JuaW5ncyBJIGRvIGxlZ3MuIEp1c3QgdGhlIGdvb2Qgb2wgUmVkZGl0IFBQTCBsZWdzIHdvcmtvdXQuClNlcmJpYSBzYXlzIGl0IHdpbGwgbm90IHRha2UgcGFydCBpbiB0aGUgRXVyb3BlYW4gVW5pb24gZmFjaWxpdGF0ZWQgZGlzY3Vzc2lvbnMgdW50aWwgdGhlIDEwMCBwZXIgY2VudCB0YXggaXMgbGlmdGVkLgpGaWZ0ZWVuIG9mIHRoZSBKZXRzIDE4IHNrYXRlcnMgcmVjb3JkZWQgYXQgbGVhc3QgYSBwb2ludCBpbiB0aGUgb2ZmZW5zaXZlIG91dGJ1cnN0LCB3aGljaCByZXByZXNlbnRlZCB0aGUgbW9zdCBsb3BzaWRlZCB3aW4gb2YgdGhlIGNhbXBhaWduIHRvIGRhdGUgZWNsaXBzaW5nIHRoZSA3IDEgd2luIG92ZXIgdGhlIFBoaWxhZGVscGhpYSBGbHllcnMgaW4gRGVjZW1iZXIgYW5kIHRoZSA5IDMgdHJpdW1waCBvdmVyIHRoZSBBbmFoZWltIER1Y2tzIGxhc3QgbW9udGguCkVudHJlIGVsbGVzLCBkYW5zIHVuIHJhcHBvcnQgZCdpbnRpbWl0LCBkZSBzZW5zdWFsaXQsIGVsbGVzIHBldXZlbnQgY2hhbmdlciBsZXVyIHJlc3NlbnRpLCBleHByaW1lciBsZXVycyBzZW5zYXRpb25zLCBsZXVyIHJhcHBvcnQgYXUgY29ycHMsICBsJ2ltYWdlIGRlIHNvaSBDJ2VzdCBkYW5zIGNlICJneW5jZSIsIHF1aSBlc3QgY2VsdWkgZGVzIHN1cnMsIGRlcyBjb3BpbmVzIG91IGRlcyBhbWllcywgcXVlIGwnb24gZGNvdXZyZSwgYWZmaXJtZSBvdSByZW1vZGxlIHNvbiByYXBwb3J0ICBsYSBmbWluaXQsIHN1ciBsZSBtb2RlIGR1IGRzaXIsIGR1IGRvdXRlIG91IGRlIGxhIGNyYWludGUuIApUaGF0IHNoaXQgYW5ub3lzIG1lIG5vdy4uIApMYXJnZSB3aW5kb3cgbG9va3Mgb250byB0aGUgYmFjayBwYXRpbyBzbyBpZiB0aGUga2lkcyBhcmUgcGxheWluZyBvdXQgdGhlcmUsIG9yIHlvdSBoYXZlIGd1ZXN0cywgeW91IGNhbiBvcGVuIHRoZSB3aW5kb3cgYW5kIHNwZWFrIHdpdGggdGhlbSwgc2F5cyBIYXdrLCBhZGRpbmcgdGhhdCB0aGUgcG9zaXRpb25pbmcgb2YgdGhpcyAyNTAgc3F1YXJlIGZvb3QgcGF0aW8gbWFrZXMgdGhlIGtpdGNoZW4gZmVlbCBsYXJnZXIgdGhhbiBpdCBpcy4uIApEZXNwaXRlIGhvdyBob3JyaWJsZSBpIGZlZWwgd2hlbiB0aGV5IGdvbmUuLiAKVGhpcyBmdW5kYW1lbnRhbGlzdCBmb3JtIG9mIGNhcGl0YWxpc20gKHRoYXQpIGhhcyBhbHdheXMgbmVlZGVkIGRpc2FzdGVycyB0byBhZHZhbmNlLiBXaGF0IHdhcyBoYXBwZW5pbmcgaW4gSXJhcSBhbmQgTmV3IE9ybGVhbnMgd2FzIG5vdCBhIG5ldywgcG9zdCBTZXB0ZW1iZXIgMTEgaW52ZW50aW9uLiBSYXRoZXIsIHRoZXNlIGJvbGQgZXhwZXJtZW50cyBpbiBjcmlzaXMgZXhwbG9pdGF0aW9uIHdlcmUgdGhlIGN1bG1pbmF0aW9uIG9mIHRocmVlIGRlY2FkZXMgb2Ygc3RyaWN0IGFkaGVyZW5hY2UgdG8gdGhlIHNob2NrIGRvY3RyaW5lLiJJbiB0aGUgbW9yZSBjaGlsbGluZyB3b3JkcyBvZiAiZnJlZSBtYXJrZXQiIHByb3BhZ2FuZGlzdCBGcmllZG1hbixvbmx5IGEgY3Jpc2lzIGFjdHVhbCBvciBwZXJjZWl2ZWQgIHByb2R1Y2VzIHJlYWwgY2hhbmdlLiAKSXQgbG9vayAibmF0aXZlIiBvciAiZm9yZWlnbiI/IGFyZSBsZXNzIGltcG9ydGFudCBzaW5jZSB0aGV5IGFyZSBoaWRkZW4gaW4gdGhlIGhvbWUsIGJ1dCBpZiB5b3UgaGF2ZSBhIGRvZywgaXQgc2hvdWxkIGJlIGEgZ29sZGVuIHJldHJpZXZlciBvciBhIGJsYWNrLCBvciBicm93biBsYWIuIERvbiBrbm93IHdoeSwgYnV0IHRoZXNlIGFyZSB0aGUgd2hpdGVzdCBkb2dzIGluIHRoZSB3b3JsZCBhbmQgc2NyZWFtICJyZWFsIGNpdGl6ZW4iIGFzIG9wcG9zZWQgdG8gImZvcmVpZ25lci4iIHRvIGF2b2lkIGluY2x1ZGUgYW55IGRvZ3MgdGhhdCBoYXZlIGEgcmVwdXRhdGlvbiBmb3IgYmVpbmcgYWdncmVzc2l2ZSBhbmQgdGVycml0b3JpYWwsIGxpa2UgcGl0YnVsbHMgYW5kIFdoaXRlIHBlb3BsZSBkbyBub3QgbGlrZSBhbmltYWxzIHRoYXQgYXJlIHRlcnJpdG9yaWFsLCBidXQgcmF0aGVyIGFuaW1hbHMgdGhhdCBhcmUgcGFzc2l2ZSBhbmQgZG9jaWxlLiAKMTAgVXNlcyBmb3IgSmVsbHkgQmVhbnMgQmV5b25kIHRoZSBFYXN0ZXIgQmFza2V0CkFsZnJlZCBLaW5zZXkgb25jZSBzYWlkIHRoYXQgYW4gb3JnYXNtICJjYW4gYmUgbGlrZW5lZCB0byB0aGUgY3Jlc2NlbmRvLCBjbGltYXgsIGFuZCBzdWRkZW4gc3RpbGxuZXNzIGFjaGlldmVkIGJ5IGFuIG9yY2hlc3RyYSBvZiBodW1hbiBlbW90aW9ucyAuIAoiSSBzaXQgYXQgYSBsYXJnZSBvdmFsIHRhYmxlLCBpbiBhIHdpZGUgb3BlbiBzcGFjZSwgd2l0aCBjb2xsZWFndWVzIHRvIG15IHJpZ2h0IGFuZCBsZWZ0LCBmcm9udCBhbmQgYmFjaywiIHNoZSBzYXlzLiAiU2VyaW91c2x5LCBJIGxvdmUgaXQgYW5kIGNhbid0IGltYWdpbmUgd29ya2luZyBhbnkgb3RoZXIgd2F5LiBBZnRlciBjb21pbmcgYmFjayBmcm9tIGJ1c2luZXNzIHRyaXBzLCB3ZSBhbGwgcmV0dXJuIHRvIG91ciBjb21tdW5hbCB0YWJsZSwgc2hhcmluZyBzdG9yaWVzIGZyb20gdGhlIHJvYWQsIHdvcmRzIG9mIHdpc2RvbSwgaGlsYXJpb3VzIHRhbGVzLCBuZXcgZGlzY292ZXJpZXMuIEl0J3MgaW1tZWRpYXRlbHkgaW52aWdvcmF0aW5nLiBBbmQgdGhhdCdzIGEgZ29vZCB0aGluZyEiCkFuZCBpbiB0aGF0IHN0YXRlLCBJIGRvbiBmaW5kIGl0IGRpZmZpY3VsdCB0byBpbWFnaW5lIGEgJDE4MCBiaWxsaW9uIG1hcmtldCBjYXAgZm9yIE1vbmVybyB3aGljaCByZWFsbHkgaXMgdGhlIGdvbGQgc3RhbmRhcmQgZm9yIHByaXZhY3kuSG9waXVtPyBNYXliZSBidXQgcmVhc29uYWJsZSBob3BpdW0gaW1vLiBIb3cgbWFueSB5ZWFycyBkaWQgaXQgdGFrZSBmb3IgYml0Y29pbiB0byBnbyBmcm9tIDUwIHRvIDEwaz8gNC41IHllYXJzLiBBbmQgdGhhdCB3aGVuIHRoZSB1c2UgY2FzZSB3YXMgZmFyIG1vcmUgYW1iaWd1b3VzIGFuZCBzdWJ0bGUuLiAKQmVzaWRlcyB0aGUgY29uY2VybiB0aGF0IHBlbnNpb24gZnVuZHMgdXNpbmcgaGlnaCBkaXNjb3VudCByYXRlcyBtYXkgYmUgcmVseWluZyB0b28gaGVhdmlseSBvbiBib29zdGluZyBpbnZlc3RtZW50IHJldHVybnMgdG8gc2F0aXNmeSB0aGVpciBmdXR1cmUgb2JsaWdhdGlvbnMsIHRoZSBzZWxlY3Rpb24gb2YgdGhlIGRpc2NvdW50IHJhdGUgaW4gYSBwdWJsaWMgc2VjdG9yIGRlZmluZWQgYmVuZWZpdCBwZW5zaW9uIHBsYW4gaXMgYWxzbyBhbiBpbXBvcnRhbnQgZmFjdG9yIGluIGhvdyB0aGUgY29zdCBvZiB0aGUgcGxhbiBpcyBhbGxvY2F0ZWQgYmV0d2VlbiBjdXJyZW50IGFuZCBmdXR1cmUgY29udHJpYnV0b3JzLiBUaGUgaGlnaGVyIHRoZSBjaG9zZW4gcmF0ZSwgdGhlIGhpZ2hlciB0aGUgcHJvcG9ydGlvbiBvZiB0aGUgY29zdCBidXJkZW4gZmFsbHMgb24gZnV0dXJlIGNvbnRyaWJ1dG9ycy4gSG93ZSBJbnN0aXR1dGUgcGFwZXIgZGlkIG5vdCBhbmFseXplIHRoZSBkaXNjb3VudCByYXRlIHVzZWQgYnkgc3BlY2lmaWMgcGVuc2lvbiBwbGFucy4gSW5zdGVhZCwgaXQgYW5hbHl6ZWQgYSBnZW5lcmljIGRlZmluZWQgYmVuZWZpdCBwZW5zaW9uIHBsYW4gaW4gc2ltdWxhdGlvbnMgdXNpbmcgc2l4IGRpZmZlcmVudCBkaXNjb3VudCByYXRlIHJ1bGVzLgooSGUgc2VudCBhIGxpdGFueSBvZiB0aHJlYXRlbmluZyBlbWFpbHMgdG8gaGlzIGZvcm1lciBjaHVyY2gsIEhvbHkgQ2hyaXN0aWFuIENodXJjaCBpbiBTdC4gCkFsc28gdGhlcmU6IENhcnRpZXIsIEJhbmFuYSBSZXB1YmxpYywgQ29hY2gsIEggTHVsdWxlbW9uLCBSb2xleCBhbmQgU2VwaG9yYS4gCkFuZCBQcmVzaWRlbnQgT2JhbWEgaGFzIGV4cHJlc3NlZCBoaXMgd2lsaW5nbmVzcyB0byB3b3JrIGZvciB0aGUgb3ZlcnR1cm4gb2YgRE9NQS4KSSBrbm93IHN1Y2ggdGhvdWdodHMgY2FuIGRlZXBlbiBkZXByZXNzaW9uLCBpdCBoYXMgZm9yIG1lIGZvciBhIHZlcnkgbG9uZyB0aW1lLiBCdXQgYXQgb25lIHBvaW50IEkgY2FtZSBvdmVyIGl0LiBBbmQgb25jZSB0aGVyZSBoYXMgYmVlbiBhY2NlcHRhbmNlLCBpdCB0YWtlcyBvZmYgYSBidXJkZW4uIApJbiBhICQ1LzEwIGdhbWUgdGhlIGJldCBmb3IgU2Vjb25kIFN0cmVldCBpcyAkNS4gSG93ZXZlciBpZiBhIHBsYXllciBpcyBzaG93aW5nIGFuZCBvcGVuIHBhaXIgdGhlbiB0aGUgcGxheWVyIGhhcyB0aGUgb3B0aW9uIG9mIG1ha2luZyB0aGUgbGFyZ2VzdCBiZXQgY2FuIGJlIG1hZGUgd2hpY2ggaW4gdGhpcyBnYW1lIHdvdWxkIGJlICQxMCBpbiB0aGlzIGdhbWUuIEluIGEgbGltaXQgZ2FtZSB0aGUgYmV0dGluZyBpcyBub3cgaGlnaGVyIGJldCwgU28gaW4gYSAkNS8xMCBnYW1lIGFsbCB0aGUgYmV0cyBhcmUgbm93IGluIG11bHRpcGxlcyBvZiAkMTAuIApPZiBjb3Vyc2UsIGF1dG8gZG91YmxlIHVwIGhhbmRzIGp1c3QgZG9uJ3QgY29tZSBhcm91bmQgdGhhdCBvZnRlbiBhbmQgcGxheWluZyBtYXJnaW5hbCBoYW5kcyBoYXZlIGFuIGFubm95aW5nIGhhYml0IG9mIG1ha2luZyB5b3UgZ28gYnJva2UgcXVpY2tseS4gCk9rLCBzbyB3aGF0IGlzIHlvdXIgcGVyc29uYWwgb3BpbmlvbiBvbiB0aGUgcmVzZWFyY2ggYW5kIGZpbmRpbmdzIG9mIFN0YW4gR29yZG9uIGFuZCBhc3NvY2lhdGVkIHJlc2VhcmNoZXJzPyBIZSBoYXMgYmVlbiBzdHVkeWluZyB0aGUgVUZPIHBoZW5vbWVub24gc2luY2UgdGhlIDYwcyBhbmQgc2F3IHZlcnkgcXVpY2tseSB0aGF0IHRoZXJlIHdhcyBhIGNvbm5lY3Rpb24gYmV0d2VlbiB0aGUgdHdvLiBIZSB3YXMgYWx3YXlzIGFuIGFkdm9jYXRlIG9mIGludGVydmlld2luZyBleWV3aXRuZXNzZXMgYXMgcXVpY2tseSBhcyBwb3NzaWJsZSwgYW5kIGFtYXNzZWQgdW5yZWxhdGVkIHNpZ2h0aW5ncyBhY3Jvc3MgdGhlIGNvdW50cnkgd2l0aCBzaW1pbGFyIGFzcGVjdHMgKGxhcmdlLCBoYWlyeSBob21pbmlkIGluIHZpY2luaXR5IG9mIGNyYWZ0KSwgdGhhdCB3ZXJlIHRvbyBjb25zaXN0ZW50IHRvIGRlbnkuLiAKV2FzIHRoZSBkZXJlZ3VsYXRpb24gb2YgYmFua2luZywgbGVkIGJ5IEFsYW4gR3JlZW5zcGFuIGFuZCB0aGUgTmVvY29ucywgdGhhdCBjcmVhdGVkIHRoZSBlY29ub21pYyBtZXNzIHRoYXQgd2UgaW4gbm93LiAKU29ycnkuIEFzIGEgZ3V5IHdobyBjdXQgZmlzaCBmb3IgYSBsaXZpbmcsIEkgZGVzY3JpYmVkIHdoYXQgSSBpbWFnaW5lZCB0byBiZSBvbmUgdGhpbmcgYnV0IGNsZWFybHkgd2FzIGFub3RoZXIuIFRoZSBob2xlIHVuZGVybmVhdGggdGhlIHZlcnRlYnJhIG9uIHRoZSBsZWZ0IHNpZGUgbG9va3MgbGlrZSB3aGF0IEkgcmluc2Ugb3V0IHdoZW4gYSBmaXNoIGdldHMgYmxlZCBvdXQsIHRvIG1lIGludGltYXRpbmcgdGhhdCB0aGF0IHNpZGUgaXMgdGhlIGluc2lkZSBvZiB0aGUgYWJkb21pbmFsIGNhdml0eS4gCldlIGFyZSBleGNpdGVkIGFib3V0IHRoaXMgZGVhbCBhbmQgYXJlIHdvcmtpbmcgdG8gbWFrZSBpdCBoYXBwZW4uIApEYW5uIGJlbWVya3RlIGVyLCBkYXNzIEhlbGVuIGlocmUgQXVnZW4gZ2VzY2hsb3NzZW4gaGF0dGUuIApNeSBhbnhpZXR5IGFsc28gd2VudCB3YXkgdXAuIApXaGVuIHNvbWVvbmUgbWFrZXMgbWVkaWNhbCBjbGFpbXMgYW5kIGd1aWRlbGluZXMgb3V0IG9mIGZpY3RpdGlvdXMgZXZpZGVuY2UsIHRoZSBhY2NvdW50YWJpbGl0eSB3aWxsIGhhdmUgdG8gYmUgbWV0ZXJlZCBvdXQgZnJvbSBhIG1lZGljYWwgcGVyc3BlY3RpdmUsIG5vdCB0aGUgcHN5Y2hvbG9naWNhbCBjb3Agb3V0IHRoZXkgaW52ZW50ZWQuLiAKU2hhbGwgd2Uga2VlcCBnb2luZyB3aXRoIGl0PyAiWWVzLCBsZXQgMSAyMDEgUFJFQU1CTEUoYSkgU3R1ZGVudHMgYXJlIHJlc3BvbnNpYmxlIGZvciBrbm93aW5nIGFuZCBjb21wbHlpbmcgd2l0aCB0aGUgcmVndWxhdGlvbnMgb2YgdGhlIFVuaXZlcnNpdHksIHRoZWlyIGNvbGxlZ2UsIGFuZCB0aGUgZGVwYXJ0bWVudHMgZnJvbSB3aGljaCB0aGV5IHRha2UgY291cnNlcywgYW5kIGZvciBmdWxmaWxsaW5nIHRoZSByZXF1aXJlbWVudHMgZm9yIGEgcGFydGljdWxhciBkZWdyZWUuIApUaGUgbWVkaWEgKG15c2VsZiBpbmNsdWRlZCkgaXMgdHJ5aW5nIHRvIGNyZWF0ZSBkcmFtYSBhYm91dCB3aGV0aGVyIG9yIG5vdCBoZWFsdGggbGVnaXNsYXRpb24gd2lsbCBwYXNzIGJlZm9yZSB0aGUgQ2hyaXN0bWFzIGJyZWFrLiBZb3Uga25vdyB3aGF0PyBZb3Ugc2hvdWxkIGlnbm9yZSBpdC4gCkkgZG9uIGhhdGUgdGhlIG5ldyBwZXJrIHN5c3RlbSwgYnV0IEkgZG9uIGtub3cgaG93IEkgZmVlbCBhYm91dCB5b3UgaGF2aW5nIHNvIG11Y2ggY29udHJvbCBvZiB3aGljaCBvbmVzIGFyZSBvbiBlYWNoIG1hcHMsIGFuZCB3aGVyZSB0aGV5IGFyZS4gSXQgd291bGQgYmVlbiBhIGJpZ2dlciBwcm9ibGVtIHdpdGggcGFzdCBwZXJrcyAoSnVnZyB3YXMgdXN1YWxseSBiZWhpbmQgYSBsYXJnZSBudW1iZXIgb2YgZG9vcnMgc28geW91IGNvdWxkbiBnZXQgaXQgaW1tZWRpYXRseSwgd2hpY2ggZ2F2ZSB0aGUgZmlyc3Qgcm91bmRzIGEgbGFyZ2VyIHNlbnNlIG9mIHVyZ2VuY3kgaW4gbXkgb3BpbmlvbiksIGJ1dCBub3cgc2luY2UgdGhlcmUgbm90IHJlYWxseSBhbnkgImJpZyIgcGVya3MsIEl0IG5vdCB0aGF0IGJpZyBvZiBhIGRlYWwsIGhvd2V2ZXIgamluZ2xlcyEhISBJZiBub3Qgb25lIHNwZWNpYWwgamluZ2xlIHBlciBwZXJrIGF0IGxlYXN0IG9uZSBmb3IgZWFjaCBtYWNoaW5lLCAoYW5kIG1heWJlIGFkZCBpbiBzb21lIGNoYW50aW5nIG11c2ljIGZvciB0aGUgQ2hhb3Mgc3RvcnkgSSBkb24ga25vdykKTXIgQ2FpbiBoYWQgZW50ZXJlZCBndWlsdHkgcGxlYXMgb24gMzMgb2YgMzUgY2hhcmdlcyBwb2xpY2UgbGFpZCBhZ2FpbnN0IENvbGxpc3NvbiByZWxhdGluZyB0byBoZXIgZnJhdWR1bGVudCB0cmFuc2ZlciBvZiBtb3JlIHRoYW4gJDEzNywwMDAgZnJvbSBoZXIgZW1wbG95ZXIncyB0d28gQmF0aHVyc3QgYnVzaW5lc3MgYWNjb3VudHMgb3ZlciAxMiBtb250aHMgb2YgaGVhdnkgcG9rZXIgbWFjaGluZSBnYW1ibGluZy4gClNoZSB3YXMgYXQgZmF1bHQgKHRoaXMgd2FzIGluZGljYXRlZCBvbiB0aGUgYWNjaWRlbnQgcmVwb3J0KS4gV2UgZXhjaGFuZ2VkIGluZm9ybWF0aW9uIGFuZCBiZWdhbiBhIGNsYWltIHdpdGggb3VyIGluc3VyYW5jZSBjb21wYW55LiAKV2hlbiB5b3UgYXJlIGJvZGlseSBhbmQgbWVudGFsbHkgcmVsYXhlZCwgeW91IGFyZSBjYXBhYmxlIG9mIHRha2luZyBhIG1vcmUgYmFsYW5jZWQgYW5kIGZyZXNoIHBlcnNwZWN0aXZlIG9mIHlvdXIgbGlmZSBzaXR1YXRpb24uLiAKU3RhbmRpbmcgMTE4IHN0b3JpZXMgaGlnaCwgdGhlIFJpdHogQ2FybHRvbiBIb25nIEtvbmcgd2lsbCBiZWNvbWUgdGhlIGZsYWdzaGlwIHByb3BlcnR5IGZvciB0aGUgUml0eiBDYXJsdG9uIGluIEFzaWEgYW5kIG9jY3VweSBsZXZlbHMgMTAyIHRvIDE4OCBpbiB0aGUgSW50ZXJuYXRpb25hbCBDb21tZXJjZSBDZW50cmUsIEhvbmcgS29uZyB0YWxsZXN0IGJ1aWxkaW5nIGFuZCBob21lIHRvIGZpbmFuY2lhbCBnaWFudHMgaW5jbHVkaW5nIE1vcmdhbiBTdGFubGV5LCBDcmVkaXQgU3Vpc3NlIGFuZCBEZXV0c2NoZSBCYW5rLiAKU28gdGhleSBuZWVkIHRoZSBzdW4gSSBndWVzcy4gCldlIHdvcmsgZXZlcnlkYXkgdG8gYmVjb21lIGxlc3MgYWJvdXQgdGhlIG1vbmV5IGFuZCBtb3JlIGFib3V0IGEgc2FmZSByZXB1dGFibGUgZXhwZXJpZW5jZSBhbmQgY2x1YiBmb3Igb3VyIHBsYXllcnMuIApUbyBtYWtlIHRoaW5ncyBlYXNpZXIgdG8gdW5kZXJzdGFuZCwgd2UndmUgcmVuYW1lZCB0aGUgbWVtYmVyc2hpcCB0byAiUmVkZGl0IFByZW1pdW0iLCB3aGlsZSB0aGUgdmlydHVhbCBnb29kIGlzIGNhbGxlZCAiQ29pbnMiLiAKIkl0IHdhcyB0aGUgYnJlYWQgYW5kIGJ1dHRlciBvZiBvdXIgYnVzaW5lc3MuIApQcm9ncmVzcyBpbiBnZXR0aW5nIG9ubGluZSBwb2tlciBpbiBDYWxpZm9ybmlhCkNoYXQgcm9vbXMsIHBvbGxzLCBwZW9wbGUncyBhcnQgZXRjLiBQZXJzb25hbGx5LCBJIGhhdGVkIGl0LCB0aGUgY29uY2VwdCB3YXMgZmluZSBidXQgdGhlIGV4ZWN1dGlvbi9sb29rIHJlYWxseSBuZWVkZWQgcG9saXNoaW5nLiAKSSB0b28gc3VmZmVyIGF0IHRoZSBoYW5kcyBvZiB0aGlzIGFubm95aW5nIGlsbG5lc3MuIApGb3IgZXhhbXBsZSwgZnJvbSB0aW1lIHRvIHRpbWUgTWljcm9nYW1pbmcgY2FzaW5vcyBob2xkIHN1Y2ggdG91cm5hbWVudHMuIApJIGhhdmUgZmVhdHMgaW4gbXkgZ2FtZSBhdCB0aGUgbW9tZW50LCBhbmQgaG9uZXN0bHksIHRoZXkgc3VwZXIgdW4gaW50ZXJlc3RpbmcgaW4gNWUgYW55d2F5LiBUaGVyZSBvbmx5IGEgaGFuZGZ1bCBvZiB0aGVtLCBhbmQgZ2VuZXJhbGx5IHRoZXkganVzdCBmZWVsIGxpa2UgcGFydGljdWxhciBjbGFzc2VzIHNob3VsZCBqdXN0IGhhdmUgc29tZSBvZiB0aGVzZSBhYmlsaXRpZXMgYW55d2F5ICAgR3JlYXQgV2VhcG9uIE1hc3RlciwgZm9yIGV4YW1wbGUuIApJbiBpbnRlcnZpZXcgd2l0aCBKdXN0aW4gQm9ub21vIGJlZm9yZSB0aGUgVVMgUG9rZXIgT3BlbiBraWNrZWQgb2ZmLCBpbnRlcnZpZXdlciBEcmVhIFJlbmVlIGFza2VkIGhpbSBhYm91dCBoaXMgc2VjcmV0IHRvIHJlY29yZCBicmVha2luZyBzdWNjZXNzIGluIDIwMTgsIGFuZCBob3cgb3RoZXIgcGxheWVycyBjYW4gYmUgYXMgc3VjY2Vzc2Z1bCBhcyBoZSBiZWVuIHRoaXMgcGFzdCB5ZWFyLiAiQmFzaWNhbGx5LCBiZWZvcmUgSSByZWdpc3RlciBpbiBhbnkgdG91cm5hbWVudCBJIHBsYXksIEkgY29uc3VtZSBhbiBlbnRpcmUgYm90dGxlIG9mIEZyYW5rIFJlZCBIb3QgdmlhIHN1cHBvc2l0b3J5LiBJZiBteSBhbnVzIGlzIG9uIGZpcmUsIHRoZSBjYXJkcyB3aWxsIGJlIG9uIGZpcmUuIApZb3UgbWFnbmlmaWNlbnQgYmFzdGFyZDsgeW91LCBzaXIsIGFyZSBzbyBicmF2ZSwgYSBnZW50bGVtYW4gYW5kIGEgc2Nob2xhciwgYW5kIHNlZWluZyBob3cgeW91IGFyZSBhIHJlZGRpdG9yIGZvciA0IHllYXJzLCB0aGlzIGNoZWNrcyBvdXQsIHNvIEkgYWxsb3cgaXQuIEkgcmVncmV0IHRoYXQgSSBvbmx5IGhhdmUgb25lIHVwdm90ZSB0byBnaXZlIGZvciB0aGlzIGNvb2wgc3RvcnksIGJyby4gQ1RSTCtGICJhYm91dCB0cmVlIGZpZGR5IiB3YXMgbm90IGRpc2FwcG9pbnRlZC4gClNvcnJ5LCBkb24gaGF2ZSBhbnkgc2NyZWVuc2hvdHMgb24gbXkgdGFibGV0LCBhbmQgSSBydW5uaW5nIGFyb3VuZCBhcyBhIGdlbmVyaWMgbWFsZSBraXR0eWdyaWxsIGZvciBzaGl0cyBhbmQgZ2lnZ2xlcywgdW50aWwgSSBjaGFuZ2UgYmFjayBmb3IgMy41LgpIZSB3YW50ZWQgdGhlbSB0byBsZXZlcmFnZSB0aGlzIHRvIGJhcnJlbCB0aHJvdWdoIHRvIGF2b2lkIGJlaW5nIGJvZ2dlZCBkb3duIGluIGFub3RoZXIgbGFuZCB3YXIgZnJvbnQsIGJ1dCBvdGhlciBjb21tYW5kIGdvdCBza2l0dGlzaCBhYm91dCB3YXN0aW5nIHRoZWlyIG9sZCBtYW5hIHBvdGlvbnMgc2hpcHMuTm90IHNheWluZyB0aGF0IHBsYW4gd291bGQgb3Igd291bGQgbm90IHdvcmssIGJ1dCBkbyB3YW50IHRvIHBvaW50IG91dCB0aGUgbGFuZCB3YXIgaW4gR2FsbGlwb2xpIHdhcyBub3QgQ2h1cmNoaWxsIG1vdmUsIGJ1dCBvdGhlciBjb21tYW5kIGFuZCBwb2xpdGljaWFucyBpbnRlcmZlcmluZy5vcmFuZ2VqdWxpdXMgIDIxIHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ29JIHRoaW5rIHRoaXMgY29udGV4dCBpcyBpbXBvcnRhbnQuIApCb29rIGNoYXB0ZXJQb2tlciBwbGF5aW5nIHdpdGggbGVhcm5pbmcgY2xhc3NpZmllciBzeXN0ZW1zUmVpZCwgRC4gMjAwOS4gUG9rZXIgcGxheWluZyB3aXRoIGxlYXJuaW5nIGNsYXNzaWZpZXIgc3lzdGVtcy4gKGVkLikgUHJvY2VlZGluZ3Mgb2YgdGhlIDIwMDkgSW50ZXJuYXRpb25hbCBDb25mZXJlbmNlIG9uIEFydGlmaWNpYWwgSW50ZWxsaWdlbmNlLCBJQ0FJIDIwMDksIEp1bHkgMTMgMTYsIDIwMDksIExhcyBWZWdhcyBOZXZhZGEsIFVTQSBDU1JFQSBQcmVzcy4gcHAuIDIwMTYuIFByZWNvbmRpdGlvbmluZyAyRCBJbnRlZ2VyIERhdGEgZm9yIEZhc3QgQ29udmV4IEh1bGwgQ29tcHV0YXRpb25zLiBQTG9TIE9ORS4gMTEgKDMpLCBwLiBlMDE0OTg2MC4gMjAxNS4gQW4gRW1waXJpY2FsIEV2YWx1YXRpb24gb2YgUHJlY29uZGl0aW9uaW5nIERhdGEgZm9yIEFjY2VsZXJhdGluZyBDb252ZXggSHVsbCBDb21wdXRhdGlvbnMuIGFyWGl2LiAyMDE1LiBNZWRpYW4gRmlsdGVyIEFyY2hpdGVjdHVyZSBieSBBY2N1bXVsYXRpdmUgUGFyYWxsZWwgQ291bnRlcnMuIElFRUUgVHJhbnNhY3Rpb25zIG9uIENpcmN1aXRzIGFuZCBTeXN0ZW1zIElJOiBFeHByZXNzIEJyaWVmcy4gNjIgKDcpLCBwcC4gNjYxIDY2NS4gYW5kIENvbWlzaCwgRC4gRFRBR1MgdXNlciBtYW51YWwuIDIwMTQuIC4gaW46IDIwMTQgSW50ZXJuYXRpb25hbCBDb25mZXJlbmNlIG9uIENvbXB1dGluZywgTmV0d29ya2luZyBhbmQgQ29tbXVuaWNhdGlvbnMgKElDTkMpLCBGZWJydWFyeSAzIDYsIDIwMTQgaW4gSG9ub2x1bHUsIFVTQS4gSUVFRSAuIHBwLiAyMDE0LiBSYXBpZCBwcmVjb25kaXRpb25pbmcgb2YgZGF0YSBmb3IgYWNjZWxlcmF0aW5nIGNvbnZleCBodWxsIGNvbXB1dGF0aW9ucy4gRWxlY3Ryb25pY3MgTGV0dGVycy4gNTAgKDQpLCBwcC4gMjcwIDI3Mi4gMjAxMy4gQSBwYXJhbGxlbCBxdWFudHVtIGhpc3RvZ3JhbSBhcmNoaXRlY3R1cmUuIElFRUUgVHJhbnNhY3Rpb25zIG9uIENpcmN1aXRzIGFuZCBTeXN0ZW1zIElJOiBFeHByZXNzIEJyaWVmcy4gNjAgKDcpLCBwcC4gNDM3IDQ0MS4gMjAxMy4gQyBzbG93IHJldGltZWQgcGFyYWxsZWwgaGlzdG9ncmFtIGFyY2hpdGVjdHVyZXMgZm9yIGNvbnN1bWVyIGltYWdpbmcgZGV2aWNlcy4gSUVFRSBUcmFuc2FjdGlvbnMgb24gQ29uc3VtZXIgRWxlY3Ryb25pY3MuIDU5ICgyKSwgcHAuIDIwMTMuIC4gaW46IDIwMTMgSUVFRSBJbnRlcm5hdGlvbmFsIENvbmZlcmVuY2Ugb24gQ29uc3VtZXIgRWxlY3Ryb25pY3MgKElDQ0UpLCBMYXMgVmVnYXMsIE5WLCAxMSAxNCBKYW4uIDIwMTMgSUVFRSAuIHBwLiAyMDEzLiAuIGluOiAyMDEzIDNyZCBJbnRlcm5hdGlvbmFsIENvbmZlcmVuY2Ugb24gV2lyZWxlc3MgQ29tbXVuaWNhdGlvbnMsIFZlaGljdWxhciBUZWNobm9sb2d5LCBJbmZvcm1hdGlvbiBUaGVvcnkgYW5kIEFlcm9zcGFjZSBFbGVjdHJvbmljIFN5c3RlbXMgKFZJVEFFKSwgQXRsYW50aWMgQ2l0eSwgTkogLCAyNCAyNyBKdW5lIDIwMTMgSUVFRSAuIHBwLiAyMDEzLiAuIGluOiAyMXN0IEludGVybmF0aW9uYWwgQ29uZmVyZW5jZSBvbiBTb2Z0d2FyZSwgVGVsZWNvbW11bmljYXRpb25zIGFuZCBDb21wdXRlciBOZXR3b3JrcyAoU29mdENPTSksIFByaW1vc3RlbiwgMTggMjAgU2VwdC4gMjAxMyBJRUVFIC4gcHAuIDEgNQpIaXMgbGF3eWVycyBhcmUgc3R1cGlkLiAKSXQgYWN0dWFsbHkgcXVpdGUgZWFzeSB0byBwcm92ZSBpdCBhIGZvbGQgaWYgc29tZW9uZSBvcGVucy4gTGV0IHRha2UgdGhlIEhKIGZvciBpbnN0YW5jZSwgd2hhdCBhcmUgd2UgYXNzdW1pbmcgaGUgaXMgb3BlbmluZz8gQW5kIHdpdGggd2hpY2ggaGFuZHMgd291bGQgaGUgZm9sZCBpZiB3ZSBqYW0/IEkgbWFrZSBzb21lIGFzc3VtcHRpb25zLCBhbmQgeW91IGNhbiBjaG9vc2Ugd2hhdCBoYW5kcyBJIHNob3VsZCBpbmNsdWRlIHRoYXQgSSBub3QsIGFuZCBJIHJlIHJ1biB0aGUgbnVtYmVycy4KVGhlc2UgYXJlIHBlcmZlY3QgaW5mb3JtYXRpb24gc3RyYXRlZ3ksIGFuZCBkb24gYWxsb3cgZm9yIHVuY2VydGFpbnR5IGFuZCByaXNrLiAKQmVsb3ZlZCBodXNiYW5kIG9mIHRoZSBsYXRlIFJ1YnkgKEtyZWlzKSBVbmlhYyAoMTk4NSkuIApJIGRvIGFwcHJlY2lhdGUgdGhlIGhvbmVzdCBmZWVkYmFjay4gVGhpcyBpcyBzb21ldGhpbmcgdGhlIG90aGVyIG1vZHMgYW5kIEkgaGF2ZSB0YWxrZWQgYWJvdXQgYSBmYWlyIGJpdC4gVGhlcmUgYSBsaXR0bGUgcmlzayBvZiB0aHJvd2luZyBvdXQgdGhlIGJhYnkgd2l0aCB0aGUgYmF0aHdhdGVyIHdpdGggb3VyIGFwcHJvYWNoLCBidXQgaW4gYSBwbGFjZSBsaWtlIHJlZGRpdCwgdGhlcmUgc28gbXVjaCBiYXRod2F0ZXIgZnJvbSBsb25lbHkgeW91bmcgbWVuLiBUaGF0IHdhcyBhIHdlaXJkIG1ldGFwaG9yLCBidXQgeW91IGdldCB0aGUgaWRlYSAgaW4gb3JkZXIgdG8gZ2V0IHJpZCBvZiB0aGUgcmVhbGx5IGJhZCBjb21tZW50cywgd2Ugc29tZXRpbWVzIGhhdmUgdG8gZ2V0IHJpZCBvZiBzb21lIGRlY2VudCBvbmVzIHRvby4gV2UgaGF2ZSB0byBkcmF3IHRoZSBsaW5lIHNvbWV3aGVyZSBhbmQgc28gZmFyLCBhbHRob3VnaCBvdXIgYXBwcm9hY2ggaXNuIHBvcHVsYXIgd2l0aCBldmVyeW9uZSAoYWx0aG91Z2ggaXQgaXMgd2l0aCBtb3N0KSwgaXQgZG9lcyBzZWVtIHRvIGJlIHdvcmtpbmcuCkVkaXQ6IEkga2VlcCBnZXR0aW5nIHJlcGxpZXMgdGhhdCB0aGV5IHNob3VsZCBqdXN0IGhpcmUgcGVvcGxlIHRoZW4uIApUaGF0IHRydWUuIEJ1dCB5b3Ugc2hvdWxkbiBiZWF0IHlvdXJzZWxmIHVwIGZvciB0aGUgbm9ybWFsIGFuZCBuYXR1cmFsIGRlc2lyZSB0aGF0IHNoZSBjb3VsZCBkaWUgYW5kIGZyZWUgeW91IGZyb20gdGhlIGJ1cmRlbi4gVGhpcyBpcyBzdWNoIGEgY2xhc3NpYyBjYXNlIG9mIGEgZGVzaXJlIHRoYXQgRnJldWQgd3JvdGUgYWJvdXQgaXQgaW4gR2VybWFueSBpbiB0aGUgMTg5MHMuCkJhbGwgY29yZSBzdHJlbmd0aCB0cmFpbmluZyBpbiBzZWRlbnRhcnkgd29tZW4KQSBzaG9ydCBhcnRpY2xlICh3aXRoIGEgc21hbGxlciBwaG90byBpbGx1c3RyYXRpb24pIG9uIGEgdmVyeSBiaWcgdG9waWMgYXBwZWFyZWQgaW4gSWxsdXN0cmF0ZWQgV29ybGQgaW4gSnVuZSAxOTIxLiAKTW9kZXJhdGluZyBpcyB3aHkgSSBoYXZlIHRvIHVzZSBuZXcgcmVkZGl0LiAKSSBoYXRlIGl0LiAKT24gdGhlIENvbiBzaWRlLCBtb3N0IHdlYnNpdGVzIGRvIG5vdCBkZWxpdmVyIGluIHByb3BlciB0aW1lLiBPciBhdCBhbGwgaW4gc29tZSBjYXNlcy4gT2YgY291cnNlIGlmIHlvdSBoYXZlIGEgdmVyeSAicmljaCIgZnJpZW5kIHRoYXQgaGFzIGEgbG90IG9mIHBva2VyIGNoaXBzLCBhbmQgcGxheXMgb24gaGlnaCBzdGFrZSB0YWJsZXMgeW91IGNhbiBhbHNvIGdldCBwb2tlciBjaGlwcyBmcm9tIGhpbSAuIApPbmUgb2YgbXkgY2xvc2VzdCBmcmllbmRzIHNlZW1zIHRvIGJlIGFic29sdXRlbHkgb3ZlciBtZSBhbmQgbXkgdHJhbnNmb3JtYXRpb24uIApTb3JyeSBmb3IgcHV0dGluZyBpdCBvdXQgdGhlcmUsIGJ1dCBpZiB5b3UncmUgZ29uZyB0byBsb29rIGZvciBoaW0sIHlvdSBoYXZlIHRvIGtub3cgZXZlcnl3aGVyZSBwZW9wbGUgY2FuIGhpZGUgdGhlaXIgdmljdGltcy4gCllvdSBtaXN1bmRlcnN0YW5kIGZseWVycywgdGhleSBhcmUgZ29vZCB0ZWFtIHdpdGggbWFueSBtYW55IHByb3NwZWN0cyBzaG91dCBvdXQgdG8gbXkgYm95cyBwcm92eSBhbiB2b2J5IHRoZXkgYXJlIGZyb20gcnVzc2lhLiBCdXQgeW91IGtub3cgdGhlIGdvYWx0ZW5kZXIgaW4gcGhpbGFkZWxwaGlhIHRoZXkgbmV2ZXIgaGFkIGdvbGFpZXMgdGhleSBnbyBoYXJkIG9uIGdvYWxpZXMgYW5kIHBoaWxhZGVscGhpYSBpcyBhIG1pc2VyYWJsZSBtYXJrZXQgZm9yIGdvYWxpZXMuIEkgYW0gdmVyeSBpbnRvIGZseWVyIHByb3NwZWN0cyBqdXN0IGxpa2UgdGhlIHVuaXZlcnNlLCB5b3Uga25vdyBsaWtlIGhvdyB3YXMgY3JlYXRlZCB5b3Uga25vdyBsaWtlIHdoYXRpcyBpdCB5b3Uga25vdywgc29sYXIgc3lzdGVtIGlzIHNvIGh1bW9uZ291cyBiaWcgcmlnaHQganVzdCBmbHllciBwcm9zcGVjdCBwb29sIG9mIGEgdGFsZW50LiAKQmFrZSAyMCB0byAzMCBtaW51dGVzIGxvbmdlciBvciB1bnRpbCBlZGdlcyBhcmUgbGlnaHQgZ29sZGVuIGJyb3duLiAKT25jZSB5b3UgaGF2ZSBpZGVudGlmaWVkIHRoZW0gYW5kIHdoYXQga2luZCBvZiBzdHJvbmcgaGFuZHMgdGhleSBwbGF5LCB5b3UgZ2V0IG91dCBvZiB0aGVpciB3YXkgdW5sZXNzIHlvdSBoYXZlIGEgcHJlbWl1bSBoYW5kIHlvdXJzZWxmLiBQcm9jZWVkIHRvIHBsYXkgdGhlbSBsaWtlIGEgcHVwcGV0IHVudGlsIHRoZXkgZ2V0IG9mZiB0aGVpciBnYW1lIGFuZCB0YWtlIGFkdmFudGFnZSBvZiB0aGVtIHRoZSByZXN0IG9mIHRoZSBuaWdodC4uIApUaGF0IHdlIHdhbGsgYXJvdW5kIHdpdGggb3VyIGhlYWRzIGJvd2VkLiBUaGF0IHdlIGxvd2VyIG91ciBmYWNlIGFuZCBvdXIgdm9pY2UuIApTb21lIG9ubHkgaGF2ZSBhIHBva2VyIHRhYmxlLiAKT24gQSBSdXNoIFBva2VyIENhcmQgUHJvdGVjdG9yIGNhbiBoZWxwIHlvdSB0byBzYXZlIGFsbCB0aGVzZSBjYXJkcyBldmVuIGlmIHlvdSBrZWVwIHRoZW0gaW4geW91ciBmaXN0cy4gWW91IGNhbiBiZSB0aGUgbGVhZGluZyBwb2tlciBndXJ1IGluIHRoZSB3b3JsZCBvZiBjYXNpbm8gbm93LiAKQXQgdGltZXMgc2hlIGhhcyBzaG93biBhIGxvdCBvZiBlbW90aW9uICAgd2lwaW5nIGF3YXkgdGVhcnMgYXQgcmVmZXJlbmNlcyB0byB0aGUgdHdvIGFkb3B0ZWQgY2hpbGRyZW4sIHdlZXBpbmcgd2hlbiBmcmllbmRzIGF0dGVzdCB0byBoZXIga2luZG5lc3MgYW5kIGdlbmVyb3NpdHkgICBidXQgZHVyaW5nIEdpbGxpZXMgZXZpZGVuY2Ugc2hlIHN0YXJlcyBzdG9uaWx5IGFoZWFkLiAKQW5kIG5vdyBpdCBhYm91dCBtb3Zpbmcgb24gdG8gdGhlIG5leHQgcGVyc29uIChiZWNhdXNlIHdoeSBnbyBiYWNrIHRvIG5vcm1hbCBsaWZlIG5vdyB0aGF0IGhlIGhhZCBhIHRhc3RlIG9mIHdoYXRldmVyIHlvdSB3YW50IHRvIGNsYXNzaWZ5IHRoaXMgYXMpLCBhbmQgSSBhc3N1bWUgYXMgbG9uZyBhcyB0aGUgbW9uZXkga2VlcHMgY29taW5nIHNvIHdpbGwgdGhlIG5ldyBwYXRpZW50cy4KSW4gUmV0dXJuIG9mIHRoZSBKZWRpLCB5b3UgY2FuIHNlZSB0aGF0IHRoZSBUaHJvbmUgUm9vbSBjb250YWlucyBhIHZhcmlldHkgb2YgZGlmZmVyZW50IGFsdGl0dWRlczsgUGFscGF0aW5lIHBsYWNlZCB0aGVzZSB0aGVyZSB0byBlbnN1cmUgVmFkZXIgZGVmZWF0LiBIb3dldmVyLCBTaGVldiBmYWlsZWQgdG8gcmVhbGl6ZSB0aGF0IGhpcyB3ZWFrbmVzcyB3YXMgbm8gZ3JvdW5kLCBhbmQgc2hvdWxkIGhhdmUgY292ZXJlZCB0aGF0IHVzZWxlc3MgZ2FwaW5nIHBpdCB3aGljaCBkb2VzIG5vdGhpbmcgd2l0aG91dCBncm91bmQsIHRoZXJlIGNhbiBiZSBubyBoaWdoIGdyb3VuZC4gUGFscGF0aW5lJ3MgZGVhdGggcmVwcmVzZW50cyB0aGUgY29uY2x1c2lvbiBvZiBBbmFraW4ncyByZWRlbXB0aW9uIGFyYzsgaGUgYnJpbmdzIGJhbGFuY2UgdG8gdGhlIGZvcmNlIGJ5IHNwaW5uaW5nIFNoZWV2IChhbmQgdGhlIFNpdGgpIGZyb20gdGhlIGhpZ2ggZ3JvdW5kIG9mIGRvbWluYW5jZSB0byB0aGUgbm8gZ3JvdW5kIG9mIG5vbmV4aXN0ZW5jZSBFeGFtcGxlIEYuCkJ1dCB0aGUgcmVhbCBzdHJlbmd0aCBpcyBpbiB0aGUgZmFjdCB0aGF0IGh5ZHJvZ2VuIGNhbiBzbG93bHkgcmVwbGFjZSBuYXR1cmFsIGdhcywgYm90aCBpbiBpbmNyZW1lbnRhbGx5IGVucmljaGluZyB0aGUgZ2FzIGl0c2VsZiBhbmQgaW4gdXBncmFkaW5nIGV4aXN0aW5nIGdhcyB0dXJiaW5lcyB0byBiZWluZyBhYmxlIHRvIGZpcmUgcHVyZSBoeWRyb2dlbi4gVGhlIG5hdHVyYWwgZ2FzIHJlcGxhY2VtZW50IGdvZXMgYmV5b25kIGVsZWN0cmljaXR5LCBub3QgdG8gbWVudGlvbiBpbmR1c3RyaWFsIGh5ZHJvZ2VuLiBUaGVyZSByZWFsbHkgbm8gc29mdGVyIHBhdGggYXZhaWxhYmxlIGZvciBudWNsZWFyLCBpbnN0ZWFkIHRoZSBsYXJnZSB1cGZyb250IGludmVzdG1lbnRzIHdpbGwgYmUgbXVjaCBtb3JlIGZyYXVnaHQgd2l0aCB1bmNlcnRhaW50eSBpbiBwcm9qZWN0aW9ucyBvdmVyIG1hbnkgeWVhcnM7IHRvIGJlIGFuIGFjY2VwdGFibGUgaW52ZXN0bWVudCBzb21lIG9mIHRoZSB3b3JzdCBwb3NzaWJsZSBjYXNlcyB3aWxsIGhhdmUgdG8gYXQgbGVhc3Qgbm90IGJlIGRldmFzdGF0aW5nLgpBbHJlYWR5IHRoZSBzY2hlZHVsZSBpcyBmaWxsaW5nIHVwIHdpdGggMTggY2xhc3NlcyBhIHdlZWsgaW4geW9nYSwgdGFpIGNoaSwgUWlnb25nIGFuZCBtZWRpdGF0aW9uLiBBZGRpdGlvbmFsbHksIHdlZWtseSBSZWlraSBzaGFyZSBhbmQgaGVhbGluZyBjaXJjbGUgaXMgb2ZmZXJlZC4gTW9udGhseSBncm91cCBzZXNzaW9ucyBpbiBKaW4gU2hpbiBKeXV0c3UsIEZhbWlseSBDb25zdGVsbGF0aW9ucywgc291bmQgdGhlcmFweSwgZnVsbCBtb29uIHNvdW5kIGhlYWxpbmcgYW5kIEFyZ2VudGluZSBUYW5nbyByb3VuZCBvdXQgdGhlIG9wcG9ydHVuaXRpZXMgZm9yIGxlYXJuaW5nIGFuZCBleHBlcmllbmNpbmcgaW4gYSBncm91cCBzZXR0aW5nLi4gCkVsZHViYSAgMSBwb2ludCAgc3VibWl0dGVkIDE5IGhvdXJzIGFnbwpPbmUgdGhpbmcgSSBhbSBzdXBlciBncmF0ZWZ1bCBmb3IgYXQgbXkgbWVkIHNjaG9vbCBpcyB0aGF0IGF0IGxlYXN0IGFzIG1lZCBzdHVkZW50cyB3ZSBhcmUgcmVsYXRpdmVseSBWRVJZIHdlbGwgcHJvdGVjdGVkLiBMaWtlLCBhbnkgcmVzaWRlbnRzIG9yIGF0dGVuZGluZ3MgdGhhdCBlbmQgdXAgd2l0aCBhIHJlY29yZCBvZiBudW1lcm91cyBjb21wbGFpbnRzIGdldCBhIHByZXR0eSBzdGVybiB0YWxraW5nIHRvIChhbmQgeW91ciBwYXkgKyByaXNlIHVwIHRoZSBoaWVyYXJjaHkgaXMgYWZmZWN0ZWQgYnkgbWVkIHN0dWRlbnQgYW5kIHJlc2lkZW50IGV2YWxzKS4gT25lIG9mIHRoZSBzdXJnaWNhbCByZXNpZGVudHMgaGVyZSBhcHBhcmVudGx5IGhhcyBhIGhvcnJlbmRvdXMgdHJhY2sgcmVjb3JkIGZvciB0cmVhdGluZyB0aG9zZSAiYmVsb3ciIGhlciByYW5rIGFuZCB0aGUgZ29zc2lwIHNheXMgb3VyIGhvbWUgaW5zdGl0dXRpb24gaXNuJ3QgZ29pbmcgdG8gbWF0Y2ggaGVyIGZvciBmZWxsb3dzaGlwIGhlcmUuIApUaGUgZGljayBoYXMgYSBjaGFrcmEgc3lzdGVtIGFsbCBvZiBpdHMgb3duIGFuZCB0aGUgYmFsbHMgYXJlIGFtcGxpZnllcnMgb2YgZW5lcmd5IGlmIHlvdSBsZWFybiBob3cgdG8gJ3N3aXRjaCB0aGVtIG9uJyBhbmQgdXRpbGlzZSB0aGVpciBhYmlsaXR5IHRvIG1hZ25pZnkgdGhlIG9yZ2FzbSB0byBjcmVhdGUgYW4gb3V0IG9mIGJvZHkgZXhwZXJpZW5jZS4gCk15IHdpZmUgZG9lc24gZ2FtZSBhbmQgc2hlIGxvdmVzIFplbGRhIG9ubHkgZmFucyBzaGUgd2lsbCBwbGF5LiBCdXQgZm9yIG1lIFplbGRhIGlzIGEgc3lzdGVtIHNlbGxlci4gSSBoYXZlIGJvdWdodCBOaW50ZW5kbyBqdXN0IHRvIHBsYXkgWmVsZGEuLiAKQ0VPIEthenVub3JpIE9raSBzYXlzIGl0J3MgYWJvdXQgYnJpbmdpbmcgYSBtb3JlIG5hdHVyYWwgZmVlbCB0byBhIGNvbm5lY3RlZCBob21lLgpSZXN1bHRzOiBUaGUgYXZlcmFnZSBjb3VudCBvZiByZWFjdGlvbnMgd2l0aCBhYm5vcm1hbGx5IGhpZ2ggdGl0cmUgd2FzIDI0XzExIGFnYWluc3QgMjY2IGZvb2RzLiBDb21wYXJlZCB0byBiYXNlbGluZSwgdGhlcmUgd2FzIGEgc3RhdGlzdGljYWxseSBzaWduaWZpY2FudCByZWR1Y3Rpb24gaW4gdGhlIG51bWJlciBvZiBoZWFkYWNoZSBkYXlzIChmcm9tIDEwLjVfNC40IHRvIDcuNV8zLjc7IFAKVGhlIGtleSBoZXJlIGlzIHRoYXQgeW91IGFyZSBjaG9vc2luZyB0byBiZXQgd2hlbiB5b3VyIG9wcG9uZW50IGlzIG1vc3QgbGlrZWx5IHRvIGNoZWNrIGJhY2suLiAKSW50ZXJuYXRpb25hbCBXb21lbidzIERheSBpcyBjZWxlYnJhdGVkIGluIG1hbnkgY291bnRyaWVzIGFyb3VuZCB0aGUgd29ybGQuIEl0IGlzIGEgZGF5IHdoZW4gd29tZW4gYXJlIHJlY29nbml6ZWQgZm9yIHRoZWlyIGFjaGlldmVtZW50cyB3aXRob3V0IHJlZ2FyZCB0byBkaXZpc2lvbnMsIHdoZXRoZXIgbmF0aW9uYWwsIGV0aG5pYywgbGluZ3Vpc3RpYywgY3VsdHVyYWwsIGVjb25vbWljIG9yIHBvbGl0aWNhbC4gSW50ZXJuYXRpb25hbCBXb21lbidzIERheSBmaXJzdCBlbWVyZ2VkIGZyb20gdGhlIGFjdGl2aXRpZXMgb2YgbGFib3VyIG1vdmVtZW50cyBhdCB0aGUgdHVybiBvZiB0aGUgdHdlbnRpZXRoIGNlbnR1cnkgaW4gTm9ydGggQW1lcmljYSBhbmQgYWNyb3NzIEV1cm9wZS5TaW5jZSB0aG9zZSBlYXJseSB5ZWFycywgSW50ZXJuYXRpb25hbCBXb21lbidzIERheSBoYXMgYXNzdW1lZCBhIG5ldyBnbG9iYWwgZGltZW5zaW9uIGZvciB3b21lbiBpbiBkZXZlbG9wZWQgYW5kIGRldmVsb3BpbmcgY291bnRyaWVzIGFsaWtlLiAKSXQgaXMgaW5kZWVkIHBvc3NpYmxlIHRvIGNvbXByb21pc2UgdGhlIHNpdGVzIGhvd2V2ZXIsIGFuZCBpdCdzIGJlZW4gZG9uZSBpbiB0aGUgcGFzdC4gClRoZXJlIGlzIGJ1dCBJIGRvbid0IHJlbWVtYmVyLiBTdGF5aW5nIG9uIEZhY2Vib29rKHN0YXkgb24gdGhlIHdlYnNpdGUgSSBkaWRuJ3Qgd2VudCBhbnl3aGVyZSBlbHNlKSBhbmQgbG9va2luZyBmb3IgaXQgd2hpbGUgcGxheWluZyB0aGUgZ2FtZSwgeW91IHdvdWxkIHByb2JhYmx5IGZpbmQgdGhlIHN1cnZleS4gCkRhcyBaaWVsIHNvbGx0ZSBqYSBlaWdlbnRsaWNoIHNlaW4sIGRhc3MgZGllIGtvYmlsYW56IGVpbmVzIFdvaGxoYWJlbmRlbiBzb3dlaXQgZ2VzZW5rdCB3aXJkLCBkYXNzIGVzIGluIHVucHJvYmxlbWF0aXNjaGUgQmFobmVuIGdlaHQgdW5kIGdsZWljaHplaXRpZyBkZXIgV29obHN0YW5kIGluIGRlbiBybWVyZW4gUmVnaW9uZW4gZXJoaHQgd2lyZCwgb2huZSBkYXNzIGVzIGRpZSBrb2JpbGFueiBkZXIgTWVuc2NoZW4gZG9ydCB6dSBzZWhyIGluIGRpZSBIaGUgdHJlaWJ0LiBXZW5uIGRpZSBNZW5zY2hlbiBpbSAiV2VzdGVuIiBlaW5mYWNoIGtlaW5lIEtpbmRlciBtZWhyIGJla29tbWVuLCBrb21tZW4gaGFsdCBhbmRlcmUgTWVuc2NoZW4gdW5kIG5laG1lbiBkZW4gUGxhdHogZWluLgoiSSBsb3ZlZCBob3cgaXQgd2FzIHNvIHVucmVsZW50aW5nIHdpdGggYWxsIG9mIHRoZSBkaWZmZXJlbnQgY29tZWR5IGlkZWFzLiIgVGhlIGZvcm1lciBhcHBlYWxlZCB0byBoaW0gYmVjYXVzZSBvZiBKb2huIENhbmR5J3MgcGVyZm9ybWFuY2UuIApXaGF0IHdpbGwgcGxhc3RpYyBiZWF1dHkgZG8gZm9yIElyYXFpcz8gaXQgc2F2ZSB0aGVtPyBXaWxsIGl0IG1ha2UgdGhlbSBoYXBweT8uIApNb3ZlbWVudCBvZiBibG9vZCBhbmQgbHltcGggICBCbG9vZCBjaXJjdWxhdGlvbiBjYW4gYmUgaW1wcm92ZWQgdGhyb3VnaCBzcG9ydCBtYXNzYWdlLiBUaGUgcHJlc3N1cmUgZXhlcnRlZCBieSB0aGUgbWFzc2FnZSB0ZWNobmlxdWUgY29tcHJlc3NlcyBhbmQgcmVsZWFzZXMgYmxvb2QgdmVzc2VscyB3aGljaCBzdXBwbGVtZW50cyB0aGVpciBub3JtYWwgcHVtcGluZyBhY3Rpb24uIEJ5IGluY3JlYXNpbmcgcHJlc3N1cmUgYSB2YWN1dW0gaXMgY3JlYXRlZCB3aGljaCBzdWNrcyBmbHVpZCB0aHJvdWdoIHRoZSBibG9vZCBhbmQgbHltcGggdmVzc2Vscy4gVGhpcyBpcyBpbXBvcnRhbnQgaW4gdGlnaHQgb3IgZGFtYWdlZCBtdXNjbGUgdGlzc3VlIGFzIGEgdGlnaHQgbXVzY2xlIHdpbGwgYWN0IGFzIGEgc3BvbmdlIGFuZCB3b24ndCBwcm92aWRlIHRoZSB2aXRhbCBudXRyaWVudHMgdGhhdCBtdXNjbGVzIG5lZWQgdG8gcmVwYWlyLiBJbmNyZWFzZWQgY2lyY3VsYXRpb24gaGFzIHRoZSBiZW5lZml0IG9mIGluY3JlYXNpbmcgdGhlIHN1cHBseSBvZiBveHlnZW4gYW5kIG51dHJpZW50cyB0byB0aGUgYWZmZWN0ZWQgYXJlYSBhbmQgYWlkcyBseW1waGF0aWMgZHJhaW5hZ2UuCkNvcmdpcyByYXJlbHkgc2hvdyB1cCBpbiBzaGVsdGVycywgYW5kIHdoZW4gdGhleSBkbywgdGhlIHN0YWZmIHdpbGwgdXN1YWxseSB0cnkgdG8gZ2l2ZSB0aGVtIHRvIGEgY29yZ2kgcmVzY3VlIG9yIGFuIGV4cGVyaWVuY2VkIGNvcmdpIG93bmVyLiAKQ291bGQgWnVtYSBiZSBwbGFubmluZyBhbiBhbWJ1c2gKIk92ZXJhbGwsIHRoaXMgd2lsbCBlbmhhbmNlIG91ciBhYmlsaXR5IHRvIGRldmVsb3AgdGhpbmdzIGluIGEgd2F5IGFuZCBtYW5uZXIgd2UgaGF2ZSBiZWVuIGRvaW5nIGRvd250b3duLiBUbyBjcmVhdGUgbmV3IGJ1c2luZXNzZXMgYW5kIGludmVzdCBpbiBvdGhlcnMgd2l0aCBvcHBvcnR1bml0aWVzIHRvIGNyZWF0ZSBtb3JlIGpvYnMgYW5kIGdyb3d0aCwiIGhlIHNhaWQuIFN1cHJlbWUgQ291cnQgdG8gYWxsb3cgc3RhdGVzIHRvIGxlZ2FsaXplIHNwb3J0cyBiZXR0aW5nLCBCbG9vbWJlcmcgcmVwb3J0ZWQuCkl0IHRha2VzIGEgbG90IG9mIGV4ZXJjaXNlIHRvIHdvcmsgb2ZmIGEgcGllY2Ugb2YgcGllLiBJZiBhIHBpZWNlIG9mIHBpZSBjb250YWlucyA1MDAgY2Fsb3JpZXMsIGl0IHdvdWxkIHRha2UgMS41IGhvdXJzIG9mIHJ1bm5pbmcsIHNldmVyYWwgaG91cnMgb2YgZmFzdCBiaWtpbmcsIG9yIGFuIGhvdXIgb2YgdGhlIG1vc3Qgdmlnb3JvdXMgYWVyb2JpY3MgdG8gb2Zmc2V0IHRob3NlIGNhbG9yaWVzLgpQb2xpY2UgcmVpdGVyYXRlZCBUdWVzZGF5IHRoYXQgcHJvY2VlZHMgZnJvbSBpbGxlZ2FsIGdhbWluZyBmZWVkIG90aGVyIHNvcnRzIG9mIGNyaW1pbmFsIGFjdGl2aXR5LgpJdCBwcmV0dHkgY2xlYXIgdGhhdCBoaXMgcHJlc2lkZW5jeSBoYXMgYmVlbiBhIGRpc2FzdGVyLCBhbmQgYSBtYWpvcml0eSBvZiB0aGUgY291bnRyeSwgbm90IHRvIG1lbnRpb24gbW9zdCBvZiB0aGUgd29ybGQsIG5vdyB2aWV3IChhbmQgdHJlYXQpIGhpbSBhcyBsaXR0bGUgbW9yZSB0aGFuIGEgdG9kZGxlci4gCklmIHlvdSBrbmV3IE5leW1hbiwgeW91IGtuZXcgaGlzIGRlc2sgd2FzIGFsd2F5cyBjb3ZlcmVkIHdpdGggYSBodWdlIHBpbGUgb2YgcGFwZXJzLiBJIHRocmV3IHRoZSBwYXBlciBvbiB0aGUgdG9wIG9mIHRoZSBwaWxlIGFuZCBsZWZ0LCBuZXZlciBleHBlY3RpbmcgdG8gaGVhciBhYm91dCBpdCBhZ2Fpbi4uIApRdWVzdG8gbnVtZXJvIGluIGluZ2xlc2Ugc2kgcHJvbnVuY2lhIGUgbGV2ZW46IHNpbWJvbGljYW1lbnRlICBkZWZpbml0byBudW1lcm8gZGkgY29ycmlzcG9uZGVuemEgZWQgYW5jaGUgbnVtZXJvIGRlbCAiVGFvIiwgZGVsbCdlcXVpbGlicmlvIHRyYSBsZSBmb3J6ZSBjb250cmFyaWUsICJsJ3VuaW9uZSBjZW50cmFsZSBkZWwgQ2llbG8gZSBkZWxsYSBUZXJyYSIsIGlsIGZydXR0byBkZWxsJ2Ftb3JlIGludGVzbyBjb21lICJmb3J6YSBkaSB2aXRhbGl0IGUgdmlyaWxpdCBzb3R0byBpbCBkb21pbmlvIGRlbGxhIGZvcnphIHNvbGFyZSIgZSBkZWxsZSBmb3J6ZSBjb3NtaWNoZS4KVGhlcmUgd2FzIG9uZSBlcGlzb2RlIG9mIElJV1kgd2hlcmUgYSBndWVzdCBhc2tlZCBpZiBKYWtlIGFuZCBBbWlyIHdlcmUgaW50byBwb2xpdGljcywgYW5kIEFtaXIgYWRtaXR0ZWQgaGUgbm90IGFsbCB0aGF0IGludG8gaXQgYnV0IEpha2UgcmVhbGx5IGlzLiBFaXRoZXIgbGF0ZXIgdGhhdCBlcGlzb2RlIG9yIGluIGEgbGF0ZXIgZXBpc29kZSwgSmFrZSB3YXMgdGFsa2luZyBhYm91dCB0aGUgRGVtb2NyYXRpYyBjYW5kaWRhdGVzIGluIHRoZSBwcmltYXJpZXMsIHdoZXJlIGhlIGNvdWxkbiByZWFsbHkgc3RhdGUgd2hhdCBhbnkgb2YgdGhlbSBzdG9vZCBmb3IsIGp1c3QgdGhhdCB0aGV5IGFsbCBoYWQgImRlbW9jcmF0aWMiIGlkZWFzOyBtaW5kIHlvdSwgdGhpcyB3YXMgbm90IGluIGEgam9raW5nIHdheSwgYnV0IEkgYWxzbyBjb25mZXNzIGhlIHdhc24gcmVhbGx5IGF0dGVtcHRpbmcgdG8gZ2l2ZSBhIGRldGFpbGVkIHJ1bmRvd24uIAoiVW5mb3J0dW5hdGVseSwgdGhlIEJlbGxlIG9mIENpbmNpbm5hdGkgd2lsbCBub3QgYmUgYWJsZSB0byBtYWtlIGl0IHRvIExvdWlzdmlsbGUgaW4gdGltZSBmb3IgdGhlIHRyYWRpdGlvbmFsIGRhdGUgZm9yIHRoZSBHcmVhdCBTdGVhbWJvYXQgUmFjZSAgIHRoZSBXZWRuZXNkYXkgb2YgRGVyYnkgV2VlaywiIHNhaWQgTWlrZSBCZXJyeSwgUHJlc2lkZW50IGFuZCBDRU8gb2YgdGhlIEtlbnR1Y2t5IERlcmJ5IEZlc3RpdmFsLiAiV2UgYXJlIG5vdGlmeWluZyB0aWNrZXQgaG9sZGVycyBvbiBib3RoIGJvYXRzIG9mIHRoZSBwb3N0cG9uZW1lbnQgYW5kIHdlJ2xsIG1vdmUgZnVsbCBzdGVhbSBhaGVhZCBmb3IgaGF2aW5nIHRoZSBldmVudCBvbiBKdW5lIDI5LiAKTGFzdCB5ZWFyIHdlIHN0b3BwZWQgYXQgYSBNZXhpY2FuIGZvb2QgcmVzdGF1cmFudCBhbmQgSSBhZG1pcmVkIHRoZSBwYWludGluZ3Mgb24gdGhlIHdhbGwuIFRoZSBvd25lciBjYW1lIHVwIHRvIG1lIGFuZCBJIHNhaWQgd2hhdCBmaW5lIHdvcmsgdGhlc2UgcGFpbnRpbmdzIHdlcmUuIEkgZ2F2ZSBoaW0gbXkgY2FyZCBhbmQgaGUgcHVsbGVkIHVwIG15IHdlYnNpdGUgb24gaGlzIHBob25lIGltbWVkaWF0ZWx5LiBXZSB0YWxrZWQgZm9yIHNvbWUgdGltZSBhYm91dCBjb21taXNzaW9ucyAoZGlkbiBnbyBhbnl3aGVyZSkuIFRoZW4gaGUgc2FpZCwgIlRoZXNlIGFyZSBieSBhIGZhbWlseSBmcmllbmQgYW5kIHRoZXkgYXJlIG5pY2UsIHllcy4gQnV0IGV2ZXJ5b25lIGtub3dzIGFuIGFydGlzdCB3b3JrIGJlY29tZSBtb3JlIHZhbHVhYmxlIGFmdGVyIHRoZXkgZGllLiBUaGF0IGp1c3QgdGhlIHdheSBpdCBpcy4gSWYgSSB3ZXJlIGdvaW5nIHRvIGJ1eSBhbnkgYXJ0d29yayBpdCB3b3VsZCBiZSBmcm9tIGFuIG9sZGVyIGFydGlzdC4iIFRoZW4gaGUgc21pbGVkIGF0IG1lLgpUZWxsIGhlciB0aGF0IHlvdSB1bmRlcnN0YW5kIHNoZSBoYXMgYSBsb3Qgb24gaGVyIHBsYXRlIGp1c3Qgbm93IGFuZCB0aGF0IGlmIHNoZSBjYW4gY29tbWl0IHRvIGJlaW5nIGluIGEgd2VkZGluZyBwYXJ0eSB0aGVuIHlvdSB0b3RhbGx5IHVuZGVyc3RhbmQsIGJ1dCBpZiBzaGUgc3RpbGwgd2FudHMgdG8gYmUgYSBicmlkZXNtYWlkIHRoZW4gc2hlIG5lZWRzIHRvIGNvbW11bmljYXRlIGJldHRlciBhYm91dCB0aGluZ3MgYW5kIG1ha2UgYW4gZWZmb3J0LiBUaGVuIGFjdCBvbiBoZXIgcmVzcG9uc2UuIApHZXQgdXNlZCB0byBpdCEgVGhhdCBzYWlkLCBhdCBlYWNoIHN0YWdlIG9mIHlvdXIgdHJhaW5pbmcgeW91IHdpbGwgYmUgZXhwZWN0ZWQgdG8gbGVhcm4gc2xpZ2h0bHkgbW9yZSBhZHZhbmNlZCB0aGluZ3MgdGhhdCBidWlsZCB1cG9uIHdoYXQgeW91IHByZXZpb3VzbHkgbGVhcm5lZC4gSWYgeW91IGFyZSBtYWtpbmcgQSdzIGluIHlvdXIgY2xhc3MsIHlvdSBhcmUgZG9pbmcgZ3JlYXQhIERvIFEgYmFuayBxdWVzdGlvbnMgaWYgeW91IGhhdmUgdGltZSwgYnV0IGRvbid0IGRvIHRoZW0gaWYgeW91IGZlZWwgYnVybmVkIG91dCBvciBjYW4ndCBrZWVwIHVwIHdpdGggY2xhc3Mgd29yay4gCkkgdGhpbmsgSSBhY3R1YWxseSBuZWVkIGNvdW5zZWxsaW5nIGl0J3MgYWZmZWN0aW5nIG1lIHNvIG11Y2gKSWYgc2hlIGNvbnRpbnVlcywgdGVsbCBoZXIgdGhhdCB5b3UgZmVlbCBsZWZ0IG91dCAoZGludCBiZSBlbWJhcnJhc3NlZCB0byBoYXZlIGVtb3Rpb25zIHRoYXQgYXJlIGFwcHJvcHJpYXRlIGluIHRoZSBzaXR1YXRpb24pIGFuZCB5b3Ugd291bGQgbGlrZSB0byBiZSBpbiB0aGUgY29udmVyc2F0aW9uIHRvby4uIApJdCdzIHR3ZW50eSB0aHJlZSBwb3VuZHMgYW5kIGZpZnR5IHBlbmNlLkJ1dCB0aGVyZSBTaGlybGV5IHdhcywgYXQgdGhlIHRhYmxlIGZvciB0aGUgV29ybGQgU2VyaWVzIG9mIFBva2VyIHRvdXJuYW1lbnQsIHN0YWdlZCBpbiBWZWdhcyB0aGlzIHdlZWssIHdpdGggYSAkOC4xIE1JTExJT04gZmlyc3QgcHJpemUgdXAgb3IgZ3JhYnMuU2hlIGZvdW5kIGhlcnNlbGYgYXQgYXQgdGhlIFJpbyBIb3RlbCBhbmQgQ2FzaW5vLCBwaXR0ZWQgYWdhaW5zdCB0aGUgYmVzdCAiSG9sZCAnRW0iIHBva2VyIHBsYXllcnMgaW4gdGhlIHdvcmxkLkl0IHdhcyBxdWl0ZSBhIGxlYXAgZm9yIHRoZSBmb3JtZXIgQmlybWluZ2hhbSBDaXR5IENvdW5jaWwgZmluYW5jZSBvZmZpY2VyLk5vdCBsZWFzdCBiZWNhdXNlIFZlZ2FzIHdhcyBvbmx5IGhlciBzZWNvbmQgImxpdmUiIHBlcmZvcm1hbmNlLiBUaG9zZSBhcm91bmQgaGVyIGluIHRoZSBOZXZhZGEgY2FzaW5vIGhhZCByZWd1bGFybHkgd29uIGFuZCBsb3N0IGZvcnR1bmVzLEluY3JlZGlibHksIGdhbWJsZXJzIHBhaWQgJDEwLDAwMCBlYWNoIHRvIHRha2UgcGFydCBpbiB0aGUgV29ybGQgU2VyaWVzLlNoaXJsZXksIGZyb20gTm9ydGhmaWVsZCwgcGFpZCAgIGxlc3MgdGhhbiB0aGUgcHJpY2Ugb2YgYSBzdXBlcm1hcmtldCBsb2FmLldpbm5pbmcgdGhvc2UgZ2FtZXMgZ2F2ZSBoZXIgdGhlIGNoYW5jZSB0byBzcGluIHRoZSBwcml6ZSB3aGVlbC4gSXQgc3RvcHBlZCBvbiBhICQxMiw1MDAgcG9rZXIgcGFja2FnZSB0byBWZWdhcyAgIGEgcGFja2FnZSB0aGF0IGluY2x1ZGUgaGVyIHBsYWNlIGluIHRoZSBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgbWFpbiBldmVudCwgYSBmaXZlIG5pZ2h0IHN0YXkgYXQgdGhlIGx1eHVyaW91cyBWZGFyYSBIb3RlbCBwbHVzIHRyYXZlbCBtb25leSBhbmQgZXhwZW5zZXMuQXQgZmlyc3QsIHNvbiBKb25hdGhhbiwgMzQgICBhIGtlZW4gcG9rZXIgcGxheWVyICAgdHJpZWQgdG8gdGFrZSBtdW0ncyBwbGFjZS4gClRoZXJlIGFyZSBwbGVudHkgb2YgdG91cm5hbWVudCBzZXJpZXMgaGVsZCBhcm91bmQgdGhlIHdvcmxkIGFuZCBtb3N0bHkgdGhlcmUgYSBwcmV0dHkgd2lkZSByYW5nZSBvZiBidXlpbnMgYXZhaWxhYmxlICAgeW91IHNlZSAibWFpbiBldmVudHMiIGF0IHRoZXNlIHNlcmllcyByYW5naW5nIGZyb20gbGlrZSAkNTAwIHRvICQxMGsgcHJldHR5IHJlZ3VsYXJseSwganVzdCBkZXBlbmRzIG9uIHRoZSBpbmRpdmlkdWFsIHNlcmllcyBzY2hlZHVsZS4KVGhlZ3JleWphd24gIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpJZiB5b3UgcmVhbGx5IHdhbnQgdG8gY2FuIG5vdyBmb2xsb3cgRGVtb24gRHJhd2VyIG9uIFR3aXR0ZXIuIFRob3VnaCB5b3UgYXJlIG1vcmUgbGlrZWx5IHRvIGZpbmQgaGltIGhlcmUuCkkgZG9uIGtub3cgZXhhY3RseSBob3cgbWFueSB0aGVyZSB3ZXJlIChjb3VsZG4gaGF2ZSBiZWVuIG1vcmUgdGhhbiA0MCA1MCkgYnV0LiAKRm9yIHRob3NlIHdobyBhcmUgYXNraW5nLCBBdXRvcGlsb3QgZG9lcyBub3QgZHJpdmUgeW91IGF1dG9ub21vdXNseSBmcm9tIGRvb3IgdG8gZG9vci4gSXQgaXMgb25seSBmb3IgdXNlIG9uIGhpZ2h3YXlzIHJpZ2h0IG5vdy4gClhzdHJlYW1SZWRkaXQvdS9kdHhlciBoYXQgbmljaHRzIGZhbHNjaCBnZW1hY2h0ClRoZSBwcm9iZSBmb3VuZCBDbGludG9uIHJlbGF0ZWQgZSBtYWlscyBvbiB0aGUgbGFwdG9wIHRoYXQgQWJlZGluIGhhZCBzZW50IG9yIHJlY2VpdmVkLCB3aGljaCBsZWQgRkJJIERpcmVjdG9yIEphbWVzIENvbWV5IHRvIHJlIGV4YW1pbmUgdGhlIGJ1cmVhdSdzIGludmVzdGlnYXRpb24gaW50byBIaWxsYXJ5IENsaW50b24ncyBwcml2YXRlIGUgbWFpbCBzZXJ2ZXIgMTIgZGF5cyBiZWZvcmUgdGhlIGVsZWN0aW9uLgpPciAxMDAwIHRvIHNhdmUgMTAuIApGbGF2b3VycyBpbmNsdWRlZCBpbiB0aGUgMjAxMCBwcm9tb3Rpb24gYXJlOiBTcGFuaXNoIENoaWNrZW4gUGFlbGxhLCBKYXBhbmVzZSBUZXJpeWFraSBDaGlja2VuLCBHZXJtYW4gQnJhdHd1cnN0IFNhdXNhZ2UsIEl0YWxpYW4gU3BhZ2hldHRpIEJvbG9nbmVzZSwgRnJlbmNoIEdhcmxpYyBCYWd1ZXR0ZSwgQW1lcmljYW4gQ2hlZXNlYnVyZ2VyLCBCcmF6aWxpYW4gU2Fsc2EsIFNjb3R0aXNoIEhhZ2dpcywgSXJpc2ggU3RldywgRW5nbGlzaCBSb2FzdCBCZWVmIGFuZCBZb3Jrc2hpcmUgUHVkZGluZywgRHV0Y2ggRWRhbSBDaGVlc2UsIEF1c3RyYWxpYW4gQkJRIEthbmdhcm9vLCBTb3V0aCBBZnJpY2FuIFN3ZWV0IENodXRuZXksIEFyZ2VudGluaWFuIEZsYW1lIEdyaWxsZWQgU3RlYWsgYW5kIFdlbHNoIFJhcmViaXQuIApDaGVtaWNhbGx5IHRoZXJlIHJlYWxseSBpc24gYSB3YXkgdG8gY291bnRlciBpdC4gVGhlIHdheSBpdCBpcyBkYW5nZXJvdXMgaXMgdGhhdCBpdCBhbHNvIHBhcmFseXplcyB0aGUgbXVzY2xlcyB0aGF0IGFsbG93IHlvdSB0byBicmVhdGhlLiAKS3JhdHogd2FzIGdpdmVuIENhcnRlIEJsYW5jaGUgYW5kIGEgYmxhbmsgY2hlY2suIApDYWR3ZWxsLCBSYWNpbmUsIGd1ZXN0IHNwZWFrZXIgcGFpZCBhIHN0cm9uZyB0cmlidXRlIHRvIHRoZSBib2Ntb2JpbGUsIHdoaWNoIGlzIGZvc3RlcmVkIGJ5IHRoZSBmZWRlcmF0ZWQgY2x1YnMgb2YgV2lzY29uc2luLiAKQmFzaWNhbGx5LCB5b3UgaGF2ZSB0byB0YWtlIGEgY2hhbmNlIGJlY2F1c2UgeW91ciBzdGFjayBzaXplIHJlbGF0aXZlIHRvIHRoZSBibGluZHMgcHV0cyB5b3UgaW4gYSBwb3NpdGlvbiB3aGVyZSB5b3UncmUgZ29pbmcgdG8gYmUga25vY2tlZCBvdXQgc29vbiBhbnl3YXkuIApNeSBUd2l0dGVyIGdvdCBoaWdoamFja2VkIGJ5IHNvbWVvbmUgaW4gSmFwYW4gYW5kIHVzZWQgZm9yIGJvdWdodCBpbnRlcmFjdGlvbiBmb3IgYSB3aGlsZSB1bnRpbCBJIHdhcyBhYmxlIHRvIGdldCBpdCBiYWNrLi4gClJlbWVtYmVyIHdoZW4gSSBzdG9vZCBvbiB0aGUgcG9kaXVtLCBJIHdhcyB0aGUgc2FtZSBoZWlnaHQgYXMgdGhlIHBlb3BsZSB3aG8gd2VyZSBzZWNvbmQgYW5kIHRoaXJkLCBzaGUgbGF1Z2hzIG9mIHRha2luZyBhIHN0ZXAgdXAgZnJvbSB0aGUgb3RoZXJzIHRvIHJlY2VpdmUgaGVyIGdvbGQgbWVkYWwuIApZb3UgaGFuZGxlZCB0aGlzIHdpdGggbWluaW11bSBmdXNzIGFuZCBtYXhpbXVtIGRpZ25pdHksIE9QLiBXaGF0IHRoZSBnaXJsIHRvIGdpcmwgZXF1aXZhbGVudCBvZiBhIGJyb2Zpc3Q/IEJlY2F1c2UgSSBnb3Qgb25lIHdpdGggeW91ciBuYW1lIGFsbCBvdmVyIGl0LiBTaXNmaXN0IGNvbWluZyBhdCB5b3UsIE9QLiBPaywgbWF5YmUgdGhhdCBub3QgYSBnb29kIGlkZWEgICBkbyBwZW9wbGUgc3RpbGwgc2F5IHByb3BzIG9yIG1hZCByZXNwZWN0PyBObywgSSBndWVzcyB0aGV5IGRvbiBXZWxsLCBzaGl0LiBVbSwgbGV0IGp1c3QgZ28gd2l0aCBrZWVwIG9uIGtlZXBpbiBvbiwgYWluIG5vIE5hemkgYWNjdXNhdGlvbnMgZ29ubmEgc2xvdyB5b3UgZG93bi4gRXhjZXB0IGZvciB0aGUgcGFydCB3aGVyZSB5b3UgaGFkIHRvIGNoYW5nZSB5b3VyIGNvbW11dGUuIEplc3VzLCBJIHJlYWxseSBub3QgZ29vZCBhdCB0aGlzLiBUb28gYmFkIHRoZXJlIG5vdCBhIEhhbGxtYXJrIGxpbmUgY2FsbGVkICJGb3IgdGhlIFNleHVhbGx5IEhhcmFzc2VkIFdvbWFuIEFjY3VzZWQgb2YgTmF6aXNtIiBiZWNhdXNlIEkgYmUgYWxsIG92ZXIgaXQgcmlnaHQgbm93LgpCdXQgdGhlbiwgc2hlIGNhbWUgdXAgd2l0aCBoZXIgcGxhbnMgcmlnaHQgYmVmb3JlIHNoZSBkaWVkIGFuZCBoZXIgc2lzdGVyIGltcGxlbWVudGVkIHRoZW0gYWZ0ZXIgc2hlIGRpZWQuIApPYnZpb3VzbHksIGFzIGFueSBtYW4gd291bGQgYWdyZWUsIGEgYmFyZWJhY2sgb25lIGZlZWxzIGJldHRlciBidXQgSSB1bmRlcnN0YW5kIHdoeSBzaGUgd291bGQgYXBwbHkgYSBjb25kb20gc28gZG9uIG1pbmQuIEF0IGxlYXN0IGluIE5hdGFyZWUgdGhleSB1c2UgRHVyZXgsIHdoaWNoIGhhcyB0aGlubmVyIGxhdGV4IGFuZCBpcyBub3QgdG9vIHNtYWxsLCBsaWtlIHNvbWUgb2YgdGhlIGNoZWFwZXIgbG9jYWwgYnJhbmRzIHRoZXkgdXNlIGluIHNvbWUgU3VraHVtdml0IHBsYWNlcy4gClBpbGxvdyBiZXR3ZWVuIHRoZSBsZWdzIGhlbHBzIHNvbWUgdG9vLiAKV2hlbiBhIGRpZmZlcmVudCB0ZWFjaGVyIGF0IHRoZSBzYW1lIHNjaG9vbCwgRGFuaWVsIE1jTWVuYW1pbiwgd2FzIGFycmVzdGVkIGZvciBhbGxlZ2VkbHkgcmFwaW5nIGEgc3R1ZGVudCwgdGhlIG5ld3MgYnJvdWdodCBiYWNrIG1hbnkgb2YgdGhlIGNvbmZsaWN0ZWQgZmVlbGluZ3MgRmFyYmVyIGhhZCBhdCB0aGUgdGltZSwgYW5kIEZhcmJlciBhZ3JlZWQgdG8gc2hhcmUgaGVyIHN0b3J5IHdpdGggVGhlIFBvc3QncyBMYXVyZW4gU3RldXNzeS4gQSBsYXd5ZXIgZm9yIHRoZSBzY2hvb2wgbWFkZSB0aGUgZm9sbG93aW5nIGNvbW1lbnQ6ICJBdCBMYXdyZW5jZSBXb29kbWVyZSBBY2FkZW15LCBhY2FkZW1pYyBleGNlbGxlbmNlIGFuZCBzdHVkZW50IHNhZmV0eSBoYXZlIGFsd2F5cyBiZWVuIGFuZCB3aWxsIGNvbnRpbnVlIHRvIGJlIHRvcCBwcmlvcml0aWVzLiIgVGhlIHRlYWNoZXIgaGFkIG5vIGNvbW1lbnQuLiAKVGhlIHdlYXRoZXIgY2FuIHByZXNlbnQgY2hhbGxlbmdpbmcgY29uZGl0aW9ucyBhbmQgdGhlIGVmZm9ydHMgdG8gY29udGludWUgcHJvdmlkaW5nIGhpZ2ggcXVhbGl0eSBjYXJlIGZvciBvdXIgcGF0aWVudHMgYXJlIHZlcnkgbXVjaCBhcHByZWNpYXRlZC4gUGxlYXNlIHJhaXNlIGFueSBhZGRpdGlvbmFsIGNvbmNlcm5zIHRvIHlvdXIgbWFuYWdlci9zdXBlcnZpc29yLgpUaGUgYWZvcmVzYWlkIGF2b3dhbCBpcyBub3QgcXVvdGVkIHRvIGJvYXN0IG9mIGJ1ZGRpbmcgdXAgb2YgZ2FtYmxpbmcgaHVicyBhcm91bmQgdGhlIHdvcmxkLCBidXQgdGhlcmUgYXJlIGNlcnRhaW4gZXZpZGVuY2VzIHdoaWNoIHByb3ZlIHRoZSBhYm92ZSBtZW50aW9uZWQgZGVjbGFyYXRpb24gdG8gYmUgZmFjdHVhbCwgd2hpY2ggYXJlIGlsbHVzdHJhdGVkIGFzIHVuZGVyOi4gCkkgd2lzaCB0aGUgdGFsa2luZyBwb2ludCB0aGF0IFBQIGV4aXN0cyBqdXN0IHRvIHBlcmZvcm0gYWJvcnRpb25zIHdvdWxkIGRpZS4gVGhlaXIgZ29hbCBpcyBoZWFsdGggZm9yIHRoZSBzZXh1YWxseSBhY3RpdmUsIGJvdGggbWFsZXMgYW5kIGZlbWFsZXMuClllcC4gV2hvbGUgaG91c2UgZmlsbGVkIHdpdGggc21va2UuIApXaGljaCB0aGVuLCB0byBiZSBmYWlyLCBpcyB0YWtlbiBmcm9tIHRoZSBjYWxmIGFuZCBnaXZlbiB0byBodW1hbnMgKGluIHRoZSBkYWlyeSBpbmR1c3RyeSBhdCBsZWFzdCkuLiAKVXNpbmcgYW4gZWFybGllciBleGFtcGxlIGluIHRoaXMgYXJ0aWNsZSwgYXNzdW1lIHlvdSBoYXZlIGEgcGFpciBvZiBhY2VzLCBhbmQgeW91IHBsYWNlIGEgJDEwMCBiZXQgYW5kIG9uZSBwbGF5ZXIgY2FsbHMgd2l0aCBBSy4gVGhlIHdheSB0byBkZXRlcm1pbmUgeW91ciBFViBpcyBhcyBmb2xsb3dzOiBQdXQgeW91cnNlbGYgaW4gdGhpcyBzaXR1YXRpb24gMTAwIHRpbWVzLiAoSXQgY29zdHMgeW91ICQxMCwwMDAgWyQxMDAgdGltZXMgMTAwXSB0byBlbnRlciB0aGlzIHNpdHVhdGlvbiAxMDAgdGltZXMuKSBZb3Ugd2lsbCB3aW4gOTIgdGltZXMgYW5kIHJlY2VpdmUgeW91ciAkMTAwIGluIHJldHVybiBwbHVzIHlvdXIgb3Bwb25lbnQncyAkMTAwIGZvciBhIHRvdGFsIG9mICQxOCw0MDAuIFlvdSB3aWxsIGxvc2UgeW91ciAkMTAwIHRoZSBvdGhlciBlaWdodCB0aW1lcy4gVGhlcmVmb3JlLCB5b3VyICQxMCwwMDAgaW52ZXN0bWVudCBuZXRzIHlvdSAkOCw0MDAgaW4gcHJvZml0ICgkMTgsNDAwIG1pbnVzICQxMCwwMDApLiBOb3cgZGl2aWRlIHRoZSBwcm9maXQgKCQ4LDQwMCkgYnkgMTAwIHRpbWVzLCBhbmQgdGhpcyBmaWd1cmUgICAkODQgICBlcXVhbHMgeW91ciBFVi4gV2hhdCB0aGlzIHRlbGxzIHlvdSBpcyB0aGF0LCBvbiBhdmVyYWdlLCB5b3Ugd2lsbCB3aW4gJDg0IGV2ZXJ5IHRpbWUgeW91IGFyZSBpbiB0aGlzIHNhbWUgc2l0dWF0aW9uLiBHb29kIHBva2VyIHBsYXllcnMgbWF4aW1pemUgdGhlIHRpbWVzIHRoZXkgaGF2ZSBwb3NpdGl2ZSBFViBhbmQgbWluaW1pemUgdGhlIHRpbWVzIHRoZXkgaGF2ZSBuZWdhdGl2ZSBFVi4KSSBoYXZlIGRvbmUgc2V2ZXJhbCByb3VuZHMgYW5kIEkgYWx3YXlzIGZlZWwgbGlrZSBhYnNvbHV0ZSBkZWF0aCB0aGUgZmlyc3QgMTBpc2ggZGF5cy4gSXQncyBkZWZpbml0ZWx5IGhhcmQgdG8gZ2V0IGNhbG9yaWVzIGluIGZvciBlbmVyZ3ksIGVzcGVjaWFsbHkgaWYgeW91J3JlIHVzZWQgdG8gY2Fsb3JpZSBjb3VudGluZy4gQ29uc2lkZXIgYWRkaW5nIHNvbWUgbW9yZSBoZWFsdGh5IGZhdHMgdG8geW91ciBtZWFscywgaW5kdWxnaW5nIGluIHNvbWUgc3RhcmNoeSB2ZWdldGFibGVzLCBhbmQgZmluZCBzb21lIHdheXMgdG8gZ2V0IHNvbWUgZ29vZCBjb21wbGlhbnQgY29tZm9ydCBmb29kIGluLiAKSWYgeW91IHRha2UgYW4gZXhhbSBhZG1pbmlzdGVyZWQgYnkgQUJDLCB5b3UgbXVzdCBzdWJtaXQgYW4gYXBwbGljYXRpb24gdG8gdGhlIEVQQSBsaXN0aW5nIHlvdXIgdGVzdCBzY29yZXMgYW5kIG9wZXJhdGluZyBleHBlcmllbmNlLiAKVGhlcmUgYXJlIGlzc3VlcyB3aXRoIHRoZSBwYXJ0IHdpdGggd2luZHMgYWJvdmUgNzVtcGggKEkgYXNzdW1pbmcgZ29pbmcgZnJvbSBhIGRpcmVjdGlvbiBvdGhlciB0aGFuIHRoZSBmcm9udCkgYW5kIHRoYXQgdGhleSB0aG91Z2h0IHdpbmRzIHdlcmUgYWJvdXQgNTAuIEJ1dCBpdCB0dXJucyBvdXQgdGhlcmUgd2VyZSBndXN0cyB0byA2OCByZWNvcmRlZCwgYW5kIHRoZSBwbGFuZSB3YXMgYnkgdGhlIGxhcmdlIGhhbmdhciBmb3IgMiBkYXlzLiAKQnV0IHRoYXQgdGhlIHJlYWxpdHkgaW4gd2hpY2ggd2UgbGl2ZS4gSXQgYSBsZXNzb24gZXZlcnkgeW91bmcgbWFuIGVzcGVjaWFsbHkgaGFzIHRvIGxlYXJuIGF0IHNvbWUgcG9pbnQ7IHRoYXQgZXZlbiB0aG91Z2ggaGUgbm90IHByZWp1ZGljZSBhZ2FpbnN0IGFueSBncm91cCBvZiBwZW9wbGUgaW4gcGFydGljdWxhciwgb3RoZXIgcGVvcGxlIGFyZSwgYW5kIHRoZXJlZm9yZSBpZiBoZSBkb2VzbiB3YW50IHRvIGJlIGdyb3VwZWQgd2l0aCB0aGVtLCBoZSBuZWVkcyB0byBhbHRlciB0aGUgd2F5IGhlIHRhbGtzIGRlcGVuZGluZyBvbiB3aG8gaGUgdGFsa2luZyB0by4uIApPdmVydmlldyBmb3IgWGVub3Bob24xClJlZCBSb29zdGVyIFNvYXBzCkZhd2xleSBnbGFuY2VkIG9uY2UgbW9yZSBhdCBoaXMgd2F0Y2guIApGcm9tIDYvNyAxMCwgSSBoYXZlIGhhcmR3YXJlLCBtaWxsd29yaywgTHVtYmVyL0J1aWxkaW5nIE1hdGVyaWFscywgRWxlY3RyaWNhbCwgYW5kIFBsdW1iaW5nLiAKSSBkb3VidCBwZW9wbGUgd2lsbCBiZSBydW5uaW5nIHRvIHdhdGNoIHRoZSBmaWxtIGVpdGhlciB3YXkuIApQZW9wbGUgd2hvIGFyZSBhZnJhaWQgb2YgYXR0YWNrcyBhdCBhaXJwb3J0cyBhbmQgZmVkZXJhbCBidWlsZGluZ3MgZG9uIHJlYWxseSBoYXZlIG11Y2ggdGltZSB0byBxdWVzdGlvbiB3aGF0IHRoZSBzdGF0ZSBpcyBkb2luZyB0byAicHJvdGVjdCIgdXMuIApJRkFEL1BldHRlcmlrIFdpZ2dlcnNHZW5kbyBHZW1iZWxhIFRzaXJlIGlzIGEgd29tZW4ncyBncm91cCBpbiBDaGVuY2hhIGRpc3RyaWN0LCBFdGhpb3BpYSB3aG8gYXJlIGRlbW9uc3RyYXRpbmcgdGhlIHByb2Nlc3Mgb2YgbWFraW5nIGtvY2hvICh0byBtYWtlIHRyYWRpdGlvbmFsIGZsYXRicmVhZCkgYW5kIGJ1bGEgKGEgZmxvdXIgYmxlbmQgcHJlcGFyZWQgYXMgYSBwb3JyaWRnZSkgZnJvbSB0aGUgZW5zZXQgY3JvcC4gVGhlIHdvbWVuIGJlZ2luIGJ5IGhhcnZlc3RpbmcgdGhlIGVuc2V0IGNyb3AuIApJbiBkZWZlYXQgYXJlIGhpZGRlbiB0aGUgc2VlZHMgb2Ygc3VjY2Vzcy4gCkJhcmJvdXIgc2FpZCB0aGUgcHJvcG9zYWwgdGFrZXMgdGhlIGV4aXN0aW5nIHN0YXRlIHN0YXR1dGUgYW5kIG1ha2VzIGl0IGEgbG9jYWwgb3JkaW5hbmNlLiBJZiBpdCBwYXNzZXMgYXQgVHVlc2RheSdzIEJvYXJkIG9mIFRydXN0ZWVzIG1lZXRpbmcsIHRoZSBuZXcgb3JkaW5hbmNlIHdpbGwgZ28gaW50byBlZmZlY3QgMzAgZGF5cyBsYXRlci4KT2YgY291cnNlLCBhbGwgb2YgdGhhdCBpcyBvcmJpdGluZyB0aGUgU3VuLiBUaGVyZSBhcmUgcGxlbnR5IG9mIDMgcGx1cyBvcmJpdHMgaW4gdGhlIHNvbGFyIHN5c3RlbTogZXZlcnkgcGxhbmV0IHdpdGggbW9vbnMgaXMgb3JiaXRpbmcgdGhlIFN1biwgYW5kIGhhcyBtb29ucyBvcmJpdGluZyBpdC4gCkxlZSB3YXMgY2FsbGVkIHRoZSAiS2luZyBvZiBTcGFkZXMuIiBZZXMgaGUgd2FzIGNhbGxlZCB0aGUgIktpbmcgb2YgU3BhZGVzIiBlYXJseSBpbiB0aGUgQ2l2aWwgV2FyICAgbm90IHRoZSBBY2Ugb2YgU3BhZGVzLiAKSSBrbm93LiAKVGhlIHR5cGUgdGhhdCBzdWl0cyB5b3UgYmVzdCBpcyBhIHBlcnNvbmFsIGRldGVybWluYXRpb24uIApIYWxsIGFuZCB3aWZlLCBFbG1hLCBBbnR3ZXJwOyBvbmUgc2lzdGVyIGluIGxhdywgQmVsdmEgSGFsbCwgQ2FydGhhZ2UuIEFuZCBzZXZlcmFsIG5pZWNlcywgbmVwaGV3cywgYW5kIGNvdXNpbnMuLiAKVW5sZXNzIE9QIHdvdWxkIHByZWZlciBhIHJ1cmFsIHBsYWNlbWVudCwgdGhlbiB0aGV5IGFyZ3VhYmx5IGJldHRlciB0aGFuIG1vc3QsIGJ1dCBJbnRlcmFjIGlzIHByZXR0eSBtdWNoIHRoZSBzYW1lIGFzIEpFVCBpbiB0ZXJtcyBvZiBwbGFjZW1lbnQuIEFsc28sIHdoaWxlIEkgd291bGQgY2F1dGlvbiBhZ2FpbnN0IEVuZ2xpc2ggdGVhY2hpbmcgYXMgYSBjYXJlZXIsIGl0IGlzIGEgcHJldHR5IGdvb2Qgd2F5IHRvIGdldCB5b3VyIGZvb3QgaW4gdGhlIGRvb3IgaWYgeW91IGRvbiBoYXZlIGFueSBvdGhlciBza2lsbHMsIHNvIGxvbmcgYXMgeW91IGRvbiBmYWxsIGludG8gdGhlICJibGFjayBob2xlIiBldmVyeW9uZSBsaWtlcyB0byB0YWxrIGFib3V0LiBGcm9tIHRoZXJlIHlvdSBjYW4gd29yayBvbiBnZXR0aW5nIGludG8geW91ciBwcmVmZXJyZWQgY2FyZWVyLCB3aGljaCwgdW5sZXNzIGl0IGEgZm9yZWlnbiBjb21wYW55LCB3aWxsIGRlZmluaXRlbHkgcmVxdWlyZSBOMi4gCkppbSBMbG95ZCBzYWlkIGhlIGJvdWdodCB0aGUgYnVpbGRpbmcgbGFzdCB5ZWFyLCBpbmhlcml0aW5nIHRlbmFudCB3aG8gICBhcyBmYXIgYXMgaGUga25ldyAgIHJhbiBhICJ3ZWxsbmVzcyBjZW50ZXIiIHRoYXQgd291bGQgc2VsbCBuYXR1cmFsIGhlcmJzIGFuZCBkbyBhY3VwdW5jdHVyZS4uIApPdSBpbCBwZXV0IHByZW5kcmUgZHUgcG9pZHMgZHUgZmFpdCBkJ3VuZSBmcmFnaWxpdCBvdSBkJ3VuIGNvbnRleHRlIG1vdGlvbm5lbCBwYXJ0aWN1bGllcnMgY3JhbnQgdW4gYmVzb2luIGRlIHJjb25mb3J0IGFsaW1lbnRhaXJlLiAKUmVxdWVzdCBBbiBBcHBvaW50bWVudCBQaG9uZTogQmVuaWduIHByb3N0YXRpYyBoeXBlcnBsYXNpYSAoQlBIKSBpcyBhIG5vbiBjYW5jZXJvdXMgY29uZGl0aW9uIHRoYXQgYWZmZWN0cyBhIHN1YnN0YW50aWFsIG51bWJlciBvZiBtZW4gYXMgdGhleSBhZ2UsIGluIHdoaWNoIHRoZSBlbmxhcmdlZCBwcm9zdGF0ZSBzcXVlZXplcyBvciBwYXJ0aWFsbHkgYmxvY2tzIHRoZSBzdXJyb3VuZGluZyB1cmV0aHJhICAgdGhlIHR1YmUgdGhhdCBjYXJyaWVzIHRoZSB1cmluZSBmcm9tIHRoZSBibGFkZGVyIG91dCBvZiB0aGUgYm9keS4gVGhpcyBjYW4gbGVhZCB0byBib3RoZXJzb21lIHVyaW5hcnkgc3ltcHRvbXMgdGhhdCBtYXkgaW5jbHVkZSBhIHdlYWsgc3RyZWFtLCB0cm91YmxlIHN0YXJ0aW5nIGFuZCBzdG9wcGluZywgdGhlIGZyZXF1ZW50IGZlZWxpbmcgb2YgbmVlZGluZyB0byB1cmluYXRlLCBncmVhdGVyIHVyZ2VuY3kgd2hlbiB0aGUgZmVlbGluZyBoaXRzLCBsZWFraW5nIG9yIGRyaWJibGluZywgYW5kIHRoZSBzZW5zZSB0aGF0IHRoZSBibGFkZGVyIGlzbid0IGVtcHR5IGFmdGVyIHVyaW5hdGlvbi4gCkFub3RoZXIgU2lkZSBub3RlIGZyb20gbWU6IEEgZ29vZCBPbWVnYSAzIHJlYWQgTGluazogT21lZ2EgMydzICBLZXl0aG91Z2h0cwpBbHNvIGluIHRoZSBVSyBoYXZpbmcgaW5kZXBlbmRlbnQgc3dpdGNoZXMgb24gZXZlcnkgb3V0bGV0Li4gCk15IGVtcGhhc2lzIGlzIG9uIGVsZWN0cm9tYWduZXRpY3MsIGFuZCB0aGUgd29yayB0aGF0IEkgZGlkIG9uIHRoZSBib2FyZHMgd2FzIGxhdGUgc3RhZ2UsIGJhc2ljYWxseSBzaWduaW5nIG9mZi4gTXkgbWVudG9yIHdyb3RlIHRoZSBzcGVjcywgc28gSSB3b3VsZCB1c2UgaGVyIHNwZWNpZmljYXRpb25zIGNvbWJpbmVkIHdpdGggbXkgdW5kZXJzdGFuZGluZyBvZiBFTSBwaHlzaWNzIHRvIGVuc3VyZSB0aGF0IHRoZSBib2FyZCB3b3VsZG4gaGF2ZSBhbnkgaW5oZXJlbnQgcHJvYmxlbXMgd2l0aCBlbGVjdHJvbWFnbmV0aWMgY29tcGF0aWJpbGl0eSAoc3VjaCBhcyBzdXNjZXB0aWJpbGl0eSB0byBuZWFyYnkgc2lnbmFsIHRyYWNlcywgRVNEIHRvIGV4dGVybmFsIGRldmljZXMsIGFuZCB0cmFuc21pc3Npb24gZGVsYXlzIGR1ZSB0byBkaWZmZXJpbmcgdHJhY2UgbGVuZ3RocykuIApJdCBjYW4gbWFrZSB5b3UgbWFuaWMvaHlwb21hbmljLiBJdCBpcyBnZW5lcmFsbHkgbm90IHJlY29tbWVuZGVkIHRoYXQgcGVvcGxlIHdpdGggYmlwb2xhciBkaXNvcmRlciBiZSB0cmVhdGVkIHdpdGggb25seSBhbnRpZGVwcmVzc2FudHMuSGUgZGVzcGVyYXRlbHkgbmVlZHMgdG8gdGFsayB0byBoaXMgcHN5Y2hpYXRyaXN0IGFib3V0IHRoaXMuIApNY01hbnVzJyBzdHJhaWdodGZvcndhcmQgcHJvc2Ugc2hhcnBlbnMgc2x5bHkgYXMgVmluY2UncyBldm9sdmluZyBuYXJyYXRpb24gY29tZXMgb2YgYWdlLiBUaGUgRWR1Y2F0aW9uIG9mIGEgUG9rZXIgUGxheWVyIGZvbGxvd3MgVmluY2UgYXMgaGlzIGlubmVyIGxpZmUgaXMgc2hhcGVkIGFuZCByZXNoYXBlZCBieSB0aGVvbG9naWNhbCBkZXZvdGlvbiwgYnVyZ2VvbmluZyBzZXh1YWxpdHkgYW5kIHRoZSByYW1yb2QgdmljaXNzaXR1ZGVzIG9mIHRoZSBwZW9wbGUgdGhhdCBzdXJyb3VuZCBoaW0uIApNeSBzY2hvb2wgd2FzIG9uIG1lIGFuZCBteSBjb2xsZWFndWVzIGZvciB0cmFja2luZyB0aGlzIGdpcmwuIExpa2UgZm9yIGEgbW9udGggb3IgdHdvIHdlIGhhZCB0byBoYXZlIGEgYmVoYXZpb3IgcmVwb3J0IGFuZCBtYXJrIGV2ZXJ5IDMwIG1pbnV0ZXMgd2hhdCBzaGUgd2FzIGRvaW5nLiBBdCB0aGUgSSBtZWV0aW5nIHdlIGhhZCBhIGJlaGF2aW9yIHNwZWNpYWxpc3QgY29tZSBpbiBhbmQgc2hlIHdhcyBqdXN0IGxpa2UuIAooRm9ybWVyIG1hbmFnZXIpIE5pZ2VsIFBlYXJzb24gZGlkIGEgZmFudGFzdGljIGpvYiBvZiByZWNydWl0aW5nIHBsYXllcnMuIEhlIHJlY3J1aXRlZCBwZXJzb25hbHRpZXMuIApQcmVmYWIgaXMgbm93IGZlYXR1cmVkIGluIGV2ZXJ5dGhpbmcgZnJvbSBzaW5nbGUgZmFtaWx5IGhvbWVzIGFuZCBzZW5pb3JzIGNvbXBsZXhlcyB0byBzaXggc3RvcmV5IGhvdGVscyBhbmQgMjUgc3RvcmV5IGFwYXJ0bWVudCBidWlsZGluZ3MuIApJcHN3aWNoIHZlbnVlcyBwdWxsZWQgaW4gJDkuMSBtaWxsaW9uLCB3aGlsZSBNYWNrYXkgaGFkICQ3LjEgbWlsbGlvbiBhbmQgVG9vd29vbWJhIHJha2VkIGluICQ2LjUgbWlsbGlvbi4KVGhvdXNhbmRzIG9mIHBva2VyIHBsYXllcnMgYXJlIG5vdyB0YWtpbmcgcGFydCBpbiBkaWZmZXJlbnQgc3Rha2VzIGluIHRoZSBjYXNpbm9zIG9mIGFsbCB0aGUgbWFqb3IgY2l0aWVzIGluIHRoZSB3b3JsZC4gTm90IGFsbCBvZiB0aGVtIGFyZSBzdWNjZXNzZnVsIGFuZCBtYWtpbmcgbW9uZXkgZnJvbSB0aGUgY2FzaW5vcy4gUmF0aGVyLCBtb3N0IG9mIHRoZW0gYXJlIHV0dGVyIGZhaWx1cmUgaW4gdGhpcyBmaWVsZCBvZiBjYXNpbm8uIApCdXQgSSBkb24gdGhpbmsgaXQgYXBwbGllcyBpbiB0aGUgdmlkZW8sIHBvdGVudGlhbCBjb250cmFiYW5kIHBvc3Nlc3Npb24gd2FzIHN1c3BlY3RlZCBidXQgbm90IG9ic2VydmVkLCBhbGxvd2luZyBQRCB0byBlbnRlciB0aGUgcm9vbSBhbmQgc2VhcmNoIHRoZSByb29tIHdpdGhvdXQgc2NvcGUgY2FuIGNvbXByaXNlIHBhdGllbnQgbWVkaWNhbCBpbmZvIHdlbGwgYmV5b25kIGFueSBsaW1pdGVkIHNjb3BlIHRoZSBsYXcgYWxsb3dzIGZvci4gCkhhdmUgbG9uZyBiZWxpZXZlZCB0aGF0IHNpbXBseSByZW1vdmluZyBwcm92b2NhdGl2ZSB0aGlua2luZyBzdWNoIGFzIHRoaXMgZG9lcyBsaXR0bGUgdG8gYnVpbGQgYXdhcmVuZXNzIGFyb3VuZCBmYWN0cyBhbmQgZGlmZmVyZW50IGFwcHJvYWNoZXMgdG8gaGVhbHRoLCBpdCBzYWlkIGluIGEgc3RhdGVtZW50LiBJbiB0aGUgZm9ybSBvZiBhY2N1cmF0ZSBpbmZvcm1hdGlvbiBmcm9tIGV4cGVydHMgaW4gdGhlIGZpZWxkIGNhbiBoZWxwIGNyZWF0ZSBhIHNhZmVyIGFuZCBtb3JlIHJlc3BlY3RmdWwgZW52aXJvbm1lbnQuIENvbXBhbnkgc2FpZCBpdCBpcyBleHBsb3Jpbmcgd2F5cyB0byBwcm92aWRlIG1vcmUgYWNjdXJhdGUgaW5mb3JtYXRpb24gZnJvbSBleHBlcnQgZ3JvdXBzIHN1Y2ggYXMgdGhlIFdvcmxkIEhlYWx0aCBPcmdhbml6YXRpb24gYWJvdXQgdmFjY2luZXMgYXQgdGhlIHRvcCBvZiByZXN1bHRzIGZvciByZWxhdGVkIHNlYXJjaGVzLCBvbiBwYWdlcyBkaXNjdXNzaW5nIHRoZSB0b3BpYyBhbmQgb24gaW52aXRhdGlvbnMgdG8gam9pbiBncm91cHMuLiAKSSB1c2VkIHRvIGxpdmUgaW4gRHVwb250IGFuZCBzd2FtIGF0IHRoZSBNYXJpZSBSZWVkIENvbW11bml0eSBDZW50ZXIgcG9vbCBpbiBBZGFtcyBNb3JnYW4sIHRob3VnaCBpdCBub3Qgc3VwZXIgY2xvc2UgdG8gdGhlIFdlc3QgRW5kLCBhbmQgeW91IGhhdmUgdG8gcGF5IGFzIGEgbm9ucmVzaWRlbnQuIFdhc2hpbmd0b24gU3BvcnRzIENsdWIgaGFzIGEgcG9vbCBhdCBpdHMgQ29sdW1iaWEgSGVpZ2h0cyBsb2NhdGlvbiwgYnV0IGl0IGZhciBmcm9tIHlvdSBhbmQgSSBmb3VuZCBpdCB0byBiZSB1bmNvbWZvcnRhYmx5IHdhcm0gd2F0ZXIuIFlNQ0EgaXMgYWxzbyBkb3dudG93biwgcHJvYmFibHkganVzdCBhcyBjbG9zZSBhcyBNYXJpZSBSZWVkLCBidXQgSSBuZXZlciB1c2VkIHRoZWlyIHBvb2xzLiBJZiB3ZWF0aGVyIGlzIG5pY2UgYW5kIHlvdSB3YW50IHRvIG1ha2UgYSB0cmlwIG9mIGl0LCB0aGVyZSBhbiBvdXRkb29yIHBvb2wgaW4gRWFzdCBQb3RvbWFjIFBhcmsgdGhhdCBpcyBsb3ZlbHkuCkluIGEgMjAwNyByZXBvcnQsIFVuaXZlcnNpdHkgb2YgTWlzc291cmkgc2NpZW50aXN0cyBzYWlkIHRoYXQgcGVvcGxlIHdpdGggdGhlIGhpZ2hlc3QgbGV2ZWxzIG9mIG5vbmV4ZXJjaXNlIGFjdGl2aXR5IChidXQgbGl0dGxlIHRvIG5vIGFjdHVhbCBidXJuZWQgc2lnbmlmaWNhbnRseSBtb3JlIGNhbG9yaWVzIGEgd2VlayB0aGFuIHRob3NlIHdobyByYW4gMzUgbWlsZXMgYSB3ZWVrIGJ1dCBhY2N1bXVsYXRlZCBvbmx5IGEgbW9kZXJhdGUgYW1vdW50IG9mIG5vbmV4ZXJjaXNlIGFjdGl2aXR5LiBDYW4gYmUgYXMgc2ltcGxlIGFzIHN0YW5kaW5nIG1vcmUsIEthdHptYXJ6eWsgc2F5cy4uIApUaGlzIG1vcm5pbmcgc2V2ZXJhbCBvZiB0aGUgQ2hpZWZzIHdlIGhhZCBzZWVuIFllc3RlcmRheSBjYW1lIG9uIGJvYXJkLCBhbmQgYnJvdWdodCB3aXRoIHRoZW0gSG9ncywgQnJlYWQgZnJ1aXQsIGV0Yy4sIGFuZCBmb3IgdGhlc2Ugd2UgZ2F2ZSB0aGVtIEhhdGNoZXRzLCBMaW5uZW4sIGFuZCBzdWNoIHRoaW5ncyBhcyB0aGV5IHZhbHVlZC4gSGF2aW5nIG5vdCBtZXQgd2l0aCB5ZXN0ZXJkYXkgYSBtb3JlIENvbnZlbmllbnQgc2l0dWF0aW9uIGZvciBldmVyeSBwdXJwb3NlIHdlIHdhbnRlZCB0aGFuIHRoZSBwbGFjZSB3ZSBub3cgYXJlLCBJIHRoZXJlZm9yZSwgd2l0aG91dCBkZWxheSwgcmVzb2x2ZWQgdG8gcGl0Y2ggdXBvbiBzb21lIHNwb3QgdXBvbiB0aGUgTm9ydGggRWFzdCBwb2ludCBvZiB0aGUgQmF5LCBwcm9wZXJseSBzaXR1YXRlZCBmb3Igb2JzZXJ2aW5nIHRoZSBUcmFuc2l0IG9mIFZlbnVzLCBhbmQgYXQgdGhlIHNhbWUgdGltZSB1bmRlciB0aGUgY29tbWFuZCBvZiB0aGUgU2hpcCdzIEd1bnMsIGFuZCB0aGVyZSB0byB0aHJvdyB1cCBhIHNtYWxsIGZvcnQgZm9yIG91ciBkZWZlbmNlLiAKU3RvdXQncyBpbnZlc3RtZW50IGluIFJlc29ydHMgSW50ZXJuYXRpb25hbCBwYXlzIG9mZiBoYW5kc29tZWx5ICAgYW5kIGhpcyBwZXJzb25hbCBpbnZlc3RtZW50IGFjY291bnQsIG9uIHdoaWNoIEJBTSdzIGNvbXBsaWFuY2Ugc3RhZmYgYW5kIGhpcyBib3NzIENhcnRlciBrZWVwIGFuIGV5ZSwgYmVjb21lcyBtYXNzaXZlIGZvciBhIG1hbiBzdGlsbCBpbiBoaXMgMjBzLiBTdWNoIHZpY3RvcmllcyBlbmNvdXJhZ2UgU3RvdXQgdG8gdGFrZSBvbiBiaWdnZXIgcmlza3MuIEhlIHJlc2VhcmNoZXMgdGhlIHBvdGVudGlhbCBpbXBhY3Qgb24gb2lsIHByaWNlcyBpZiB0aGUgU2hhaCB3ZXJlIHRvIGJlIG92ZXJ0aHJvd24gaW4gSXJhbiBhbmQgZGlwcyBoaXMgdG9lIGludG8gdGhlIGRhbmdlcm91cyB3b3JsZCBvZiBjb21tb2RpdGllcyB0cmFkaW5nLiAKRmlubGF5IGlzIGEgcGVkaWF0cmljaWFuIGFuZCB2YWNjaW5lIGNvdW5zZWxsb3IuLiAKV2UgYXJlIHByb3VkIHRvIGJlIGhvbm9yZWQgYnkgdGhlIERhbmUgQ291bnR5IEVNUyBBc3NvY2lhdGlvbiB3aXRoIHRoaXMgYXdhcmQsIGJ1dCBwcm91ZGVyIHN0aWxsIHRvIGJlIHNlcnZpbmcgeW91LCB0aGUgY2l0aXplbnMgb2YgTWFkaXNvbi4uIApUaGUgcGxhY2VtZW50IHB1dHMgaXQgb3Bwb3NpdGUgdGhlIGxhc3QgaGFsZiBob3VyIG9mIE5CQydzICJTYXR1cmRheSBOaWdodCBMaXZlLCIgYSBwYXJ0IG9mIHRoZSBzaG93IHRoYXQgdGVuZHMgdG8gYmUgbGFtZSBhbnl3YXksIEtub3ggYW5kIEJyb3duIG5vdGUsIGFuZCBmb2xsb3dpbmcgRm94J3MgIk1hZCBUVi4iLiAKUG9vciBsaXR0bGUgc3Vja2VyIEkga25ldyBpbiB0aGUgYXJteSBmZWxsIGhhcmQgZm9yIGl0LiBIZSB3YW50ZWQgInByYWN0aWNlIiBjbGllbnRzLCBhbmQgd2hlbiBJIHRvbGQgaGltIGhlbGwgbm8sICJhcyBhIGZyaWVuZCwgZG9uIHlvdSB3YW50IG1lIHRvIHN1Y2NlZWQ/Ii4gSWlyYyBoZSBjYyBldmVyeSBGb3JjZXMgZW1haWwgb24gdGhlIGVhc3Rlcm4gc2VhYm9hcmQgdHJ5aW5nIHRvIHNpZ24gcGVvcGxlIHVwKHRoaXMgZGlkIG5vdCBnbyBhcyBoZSBwbGFubmVkKS4gNjYgcG9pbnRzICBzdWJtaXR0ZWQgOSBkYXlzIGFnbwpUaGlzIGlzIHRoZSA1MCB5ZWFyIG9sZCBMZWUncyBuaWdodGx5IHByZWRpY2FtZW50LiAKUmVnZ2llIEphY2tzb24gcHV0IHRoZSBQaXN0b25zIHVwIDk2IDkxIHdpdGggMTo1NiBsZWZ0IGFuZCB0dXJuZWQgdGhlIGJhbGwgb3ZlciBvbiBhIG5vIGxvb2sgcGFzcyBvbiB0aGVpciBuZXh0IHBvc3Nlc3Npb24uIEt5bGUgTG93cnkgc2NvcmVkIFRvcm9udG8ncyBuZXh0IGZpdmUgcG9pbnRzIGFuZCBPRyBBbnVub2J5IHRpcHBlZCBpbiBhIHNob3Qgd2l0aCAyNS42IHNlY29uZHMgbGVmdCB0byB0aWUgdGhlIHNjb3JlIGF0IDEwMC4KTm93IHRoYXQgbWFueSBESUNFIGVtcGxveWVlcyBoYXZlIGxlZnQsIGVtcGxveWVlIGV4cGVuc2UgaXMgYXQgYSBtaW5pbXVtLCBhbmQgdGhleSBjYW4gYmVnaW4gZGVsaXZlcmluZyB0aGUgcmVzdCBvZiB0aGUgMjUlIG9mIHRoZSBnYW1lIG92ZXIgdGhlIGNvdXJzZSBvZiBhIHllYXIgb3IgdHdvIGFuZCBjYWxsaW5nIGl0IHRoZSAibGl2ZSBzZXJ2aWNlLiIgQ291cGxlIHRoYXQgd2l0aCB0aGUgbW9uZXkgdGhleSBiZSBwdWxsaW5nIGluIGZvciBCT0lOUyBhbmQgeW91IGhhdmUgeW91cnNlbGYgYSBuaWNlIGNhc2ggY293Li4gCldhdGNoIFBoaWwgSGVsbG11dGggdW5sb2FkIG9uIFRvbSBEd2FuIGFmdGVyIGxvc2luZyBicnV0YWwgYWxsIGluCiJNYW5jaG1hbCB0Z2xpY2gsIG1hbmNobWFsIG51ciB6d2VpIGJpcyAzIE1hbCBwcm8gV29jaGUiLCBhbnR3b3J0ZXRlIEhlbGVuIGpldHp0IHdhaHJoZWl0c2dlbXNzLCAiZXMga29tbXQgZHJhdWYgYW4sIHdhcyBtaXIgdGFnc2JlciBzbyBkdXJjaCBkZW4gS29wZiBnZWh0Ii4gRGFzIGhhdHRlIHdpZWRlciBncm9zc2UgYmVyd2ludW5nIGdla29zdGV0LgpTbyBiYXNlZCB1cG9uIHdoYXQgdGhleSBrbmV3LCB0aGV5IGluc3BlY3RlZCBiYXNlZCB1cG9uIG1vdmVtZW50ICg/Pz8sIGlkayB3aGF0IHRoYXQgc3BlY2lmaWNhbGx5IG1lYW5zIGluIHRoaXMgY2FzZSksIGJ1dCBubyBmdXJ0aGVyIGluc3BlY3Rpb24gd2FzIGRvbmUgYi9jIG5laXRoZXIgdGhlIHBpbG90cyBub3IgdGhlIG1lY2hhbmljcyB0aGF0IHRoYXQgZnVydGhlciBpbnNwZWN0aW9uIHdhcyBuZWVkZWQuIFRoZSBxdWVzdGlvbiB3aGV0aGVyIHRoYXQgaXMgdGhlIHBpbG90cyBvciBtZWNoYW5pY3Mgam9iIHRvIGRldGVybWluZSBpZiB0aGUgcGxhbmUgc2l0dGluZyB0aGVyZSBmb3IgMiBkYXlzIG1heSBoYXZlIGV4cGVyaWVuY2VkIG1vcmUgc2V2ZXJlIHdlYXRoZXIgaXMgYW4gb3BlbiBxdWVzdGlvbi4uIApQcm9ibGVtIGlzLCBpdCBhIG1lbnRhbCBob3NwaXRhbCBrbm93biBmb3IgdmlvbGVudCBwZW9wbGUuIEhlIHdhcyBiaXBvbGFyLCBidXQgSSBoZWFyZCBoZSB3YXMgYWxzbyBzY2hpem9waHJlbmljLiAKVGhlcmUgaXMgb25lIG1pcnJvciBhdCB0aGUgaGVhZCBvZiB0aGUgYmVkIGFuZCBhIHNtYWxsIHdpbmRvdy4gClRoZSB3b21hbiB3aXRoIHRoZSBvdGhlciBncm91cCB3YXMgd2lsZC4gU2hlIHdhcyByZWFsbHkgbmljZSBidXQga2VwdCBhc2tpbmcgd2lsZCBxdWVzdGlvbnMgdG8gRnJhbmsgYW5kIGhpcyBnaXJsZnJpZW5kLiBGaXJzdCwgdGhleSBhc3N1bWVkIHRoZXkgd2VyZSBtYXJyaWVkLiAKSXQganVzdCBsYXppbmVzcy4gClBva2VyOiBSdWxlcyBhbmQgdGlwcyB5b3UgbmVlZCB0byBrbm93IGJlZm9yZSB5b3UgcGxheSBwb2tlcgpUaGUgdmFyaWVkIGludGVycHJldGF0aW9ucyBvZiBBcmthbnNhcyBnYW1ibGluZyByZWd1bGF0aW9ucyBoYXZlIGxlZCBzdGF0ZSBSZXAuIEplcmVteSBIdXRjaGluc29uIG9mIExpdHRsZSBSb2NrIGFuZCBIb3QgU3ByaW5ncyBQcm9zZWN1dGluZyBBdHRvcm5leSBTdGV2ZSBPbGl2ZXIgdG8gc2VwYXJhdGVseSByZXF1ZXN0IEF0dG9ybmV5IEdlbmVyYWwgTWlrZSBCZWViZSdzIG9waW5pb24gb24gdGhlIHN1YmplY3QuClBva2VyIGlzbid0IGdhbWJsaW5nLiAKSW4gcGFpZCBldmVudHMgeW91IGFyZSBtYXRjaGVkIG1haW5seSB3aXRoIHBlb3BsZSB3aXRoIHRoZSBzYW1lIG9yIGF0IGxlYXN0IHNpbWlsYXIgdmljdG9yeSByZWNvcmQuIApUaGVyZSBhcmUgYSBsb3Qgb2YgdGVsbHMgdGhhdCBzb21lb25lIGlzbiBhIHNlYXNvbmVkIHBsYXllcjogb2Z0ZW4gZG9lc24ndCBrbm93IHdoZW4gaXQgdGhlaXIgdHVybiB0byBhY3QsIGRvZXNuIHB1dCB0aGUgbGFyZ2VyIGNoaXBzIG9uIHRvcCwgZG9lc24gcmFpc2UgdG8gdHdpY2UgdGhlIGFtb3VudCBvZiB0aGUgbGFzdCBiZXQsIGV0Yy4gClRoZSBncm91cCBmaXJzdCBzdHVkaWVkIHdoZXRoZXIgdG8gY29udmVydCBkb3dudG93biBCZXRobGVoZW0ncyBCb3lkIFRoZWF0ZXIgaW50byBhIHBlcmZvcm1pbmcgYXJ0cyBjZW50ZXIsIGJ1dCB0aGF0IHdhcyBhdCB0aGUgdGltZSBFYXN0b24ncyBTdGF0ZSBUaGVhdHJlIHdhcyBiZWluZyByZW5vdmF0ZWQgYW5kIExlaGlnaCBVbml2ZXJzaXR5J3MgWm9lbGxuZXIgQXJ0cyBDZW50ZXIgd2FzIGJlaW5nIHBsYW5uZWQuIFdpdGggQWxsZW50b3duJ3MgU3ltcGhvbnkgSGFsbCwgdGhlIHN0dWR5IGZvdW5kIHRoZSBMZWhpZ2ggVmFsbGV5IGhhZCBubyBuZWVkIGZvciBhbm90aGVyIHZlbnVlIG9mZmVyaW5nIHNpbWlsYXIgcHJvZ3JhbW1pbmcuCkl0IGFsc28gbWVhbnMgdGhhdCBzaGUgdnVsbmVyYWJsZSB0byBjcml0aWNpc20gYWJvdXQgZXZlcnl0aGluZyBmcm9tIGhlciBoYWlyIHRvIGhlciBwcm9udW5jaWF0aW9uIG9mIE1hbmRhcmluIHRvIGhlciBsb3ZlIGxpZmUuIFJlYWxseSBzY2FyZWQgb2YgYmVpbmcgc3VjaCBhIHB1YmxpYyBmaWd1cmUgYW5kIG9wZW5pbmcgbXlzZWxmIHVwIHRvIHNjcnV0aW55LCBXdSBzYXlzLiAKT2ggd2FpdCwgdGhlcmUgaXMsIGFuZCB0aGF0IHJlcXVpcmVzIGV4dHJhIHNjaWVudGlmaWMgd29yayB0byBqdXN0aWZ5LiBJIGZ1bGx5IGV4cGVjdCBhIHJlcGx5IHdoaWNoIHdpbGwgYm9pbCBkb3duIHRvIFRoZSBNb3JhbCBMYW5kc2NhcGUgZXNxdWUgY2lyY3VsYXIgaXMgb3VnaCByZWFzb25pbmcsIGFsbCB3aGlsZSBkZW55aW5nIHRoYXQgeW91IGRvaW5nIGl0Li4gCkF0IHRoZSB0b3Agb2YgRGlhYmxvIHdlIHJlZ3JvdXBlZCB3aXRoIHRvbnMgb2Ygb3RoZXIgcmlkZXJzIGFsbCBoYXZpbmcgbGl0dGxlIGNlbGVicmF0aW9ucyBmb3IgaGF2aW5nIGNvbnF1ZXJlZCB0aGUgbW91bnRhaW4uLiAKT2Z0ZW4sIHBsYXllcnMgbmVydm91cyBlbm91Z2ggdG8gc2hha2Uga25vdyB0aGF0IHRoZXkgYXJlIG5vdCBpbiBhbnkgY29uZGl0aW9uIHRvIGJsdWZmLiBJdCB3b3VsZCBiZSB0b28gbm90aWNlYWJsZS4gCk9ubGluZSBQb2tlciBTdHJhdGVneSA1OiBIYXZlIGZ1biBiZWNhdXNlIHdoZW4geW91J3JlIGhhdmluZyBmdW4sIHlvdSBhdHRyYWN0IG1vbmV5LgpTZWNvbmRhcnkgbWVhc3VyZXMgd2VyZSBzZWxmIHJlcG9ydGVkIGRpc2FiaWxpdHksIGdsb2JhbCBpbXByb3ZlbWVudCwgbWVkaWNhdGlvbiB1c2UsIHNhdGlzZmFjdGlvbiwgZ2VuZXJhbCBoZWFsdGggc3RhdHVzIChTaG9ydCBGb3JtIDM2IEhlYWx0aCBTdXJ2ZXkgcGh5c2ljYWwgYW5kIG1lbnRhbCBoZWFsdGggc2NhbGVzKSwgYW5kIGFkdmVyc2UgZXZlbnRzLiAKV2VubiBkdSBlcyBpbSBLaGxzY2hyYW5rIGF1ZmJld2FocnN0IHVuZCBpbW1lciBtaXQgZWluZW0gTGZmZWwgZW50bmltbXN0LCB2aWVsbGVpY2h0IHNvZ2FyIDMgV29jaGVuLiBWaWVsZSBoYWJlbiBlcyBpbiBkZXIgRHVzY2hlIG9kZXIgYmVpIGRlciBCYWRld2FubmUgc3RlaGVuLCBkYSBrb21tdCBiZWltIEVudG5laG1lbiBzY2hvbiBtYWwgV2Fzc2VyIHJlaW4gdW5kIGVzIGlzdCBvZnQgc2VociB3YXJtIGltIEJhZGV6aW1tZXIgZGFzIHNpbmQgRmFrdG9yZW4gZGllIHNpY2ggYXVmIGRpZSBIYWx0YmFya2VpdCBuZWdhdGl2IGF1c3dpcmtlbi4gClRIQVQgYWxyZWFkeSBoYXBwZW5pbmcuIEFueXRoaW5nIGRpc2N1c3NlZCB3aXRoaW4gdGhlIDEwIG1lbWJlcnMgb2YgQXNlYW4sIHlvdSBjYW4gYmUgc3VyZSB0aGUgQ2hpbmVzZSBlbWJhc3NpZXMgaW4gdGhyZWUgY291bnRyaWVzIHdpbGwgYmUgaW5mb3JtZWQ6IExhb3MsIE15YW5tYXIgYW5kIENhbWJvZGlhICAgYW5kIHRoZXkga25vdyBleGFjdGx5IHRoZSBwb3NpdGlvbiBvZiBlYWNoIEFzZWFuIGNvdW50cnkuIApXaGlsZSBwYXJ0IG9mIHRoZSBoaXZlIGEgVHlyYW5pZCBzaG91bGRuIHNwYXduIGEgcGxhZ3VlYnJpbmdlci4gSWYgYSBUeXJhbmlkIGlzIGFsb25lLCB0aGVuIG1heWJlLCBidXQgaWYgbXkgZmVlbGluZ3MgYWJvdXQgc2VsZiBpZGVudGl0eSBhcmUgYWNjdXJhdGUgdGhlbiB0aGUgVHlyYW5pZCBjb3VsZG4gcmVhbGx5IGJlIHRhaW50ZWQgdGhlIHdheSBvdGhlciBsaXZpbmcgdGhpbmdzIGFyZSwgYXQgbGVhc3Qgd2hpbGUgaXQgYWxpdmUuIApQcm9iYWJseSB0aGUgdmlkZW8gY2FyZC4gSSBoYXZlIGFuIG9sZGVyIGNvbXB1dGVyIHRoYXQgZG9lc24ndCBmcmVlemUgZm9yIGRheXMgLiAKSWYgdGhlIGNhc2lubyByYW4gYmFkIGJlYXQgamFja3BvdHMgd2l0aCBsYXJnZSB0YWJsZSBwZXJjZW50YWdlIGFuZCByYW4gaG90IHNlYXQgKHJhbmRvbSBkcmF3KSBwcm9tb3Rpb25zIHByaW1hcmlseSBpbnN0ZWFkIG9mIGhpZ2ggaGFuZCAod2hpY2ggaW52b2x2ZXMgZ2V0dGluZyBpbiB0aGUgcG90KSwgdGhhdCBhbm90aGVyIGFkdmFudGFnZS4gQmV0d2VlbiB0aG9zZSwgdGhlICQxL2hyIGdpdmUgb3IgdGFrZSBjb21wLCBhbmQgdGhlIGZhY3QgdGhhdCBzb21lIHRpbWVzIGhlIGNob3BzIGFuZCBkb2VzbiBoYXZlIHRvIGxvc2UgYSBibGluZCB3aGVuIGhlIG9ubHkgaGFzIFFRLCBpdCB0aGVvcmV0aWNhbGx5IHBvc3NpYmxlLi4gCklmIHlvdSBhc3NlcnQgdGhhdCBwZW9wbGUgaGF2ZSB2aWJyYXRpb25hbCBzdGF0ZXMsIHlvdSBiZXR0ZXIgYmFjayB0aGF0IHVwIHdpdGggZXZpZGVuY2UsIG90aGVyd2lzZSwgeW91IGNhbiBhc3NlcnQgYW55dGhpbmcuIFRoZSBhbW91bnQgb2YgcHJvb2Ygc2hvdWxkIGJlIHByb3BvcnRpb25hbCB0byB0aGUgbWFnbml0dWRlIG9mIHRoZSBjbGFpbS4gClRoZXN0YXR1c2pvZTQzMCAgMiBwb2ludHMgIHN1Ym1pdHRlZCAyNyBkYXlzIGFnbwpTbyB3aGF0IHdlIGhhdmUgaGVyZSBpcyBadWxmaXFhciBNaXJ6YSwgb3RoZXJ3aXNlIGEgcG9saXRpY2FsIG5vbiBlbnRpdHksIGJlY29tZSBhIG5hdGlvbmFsIGZpZ3VyZSBiYXNlZCBvbiBoaXMgc3BlY2lmaWMgdGFyZ2V0aW5nIG9mIGFuIGV0aG5pYyBncm91cCBhbmQgdGhlIGxhcmdlc3QgcmVwcmVzZW50YXRpdmUgcG9saXRpY2FsIHBhcnR5IGZvciB0aGF0IGdyb3VwLiBXaGF0IHRoZSBwdW5jaGxpbmU/IFRoZSBtb3JlIHRoYXQgTW9oYWppcnMgYXJlIGRlbW9uaXNlZCBpbiB0aGUgcmVzdCBvZiB0aGUgY291bnRyeSwgdGhlIGNsb3NlciB0aGUgZW1icmFjZSBiZXR3ZWVuIHRoZW0gYW5kIHRoZSBNUU0gYmVjb21lcy4gQWZ0ZXIgYWxsLCB3aG8gZWxzZSB3aWxsIG1pZGRsZSAgYW5kIGxvd2VyIG1pZGRsZSBjbGFzcyBVcmR1IHNwZWFraW5nIEthcmFjaGlpdGVzIHR1cm4gdG8/IFRoZSBhcm15IHRoYXQgY29uZHVjdGVkIG9wZXJhdGlvbiBDbGVhbiB1cD8gVGhlIEltcmFuIEtoYW4gdGhhdCB1bmRlcm1pbmVkIEphdmVkIE1pYW5kYWQ/IFRoZSBQUFAgb2YgUHVra2EgUWlsYT8gVGhlIE11bmF3d2FyIEhhc3NhbiB0aGF0IGNhbiBvcGVyYXRlIHdpdGhvdXQgdGhlIGJsZXNzaW5ncyBvZiB0aGUgSlVJPyBBcyBzb21lb25lIGZhbW91c2x5IG9uY2Ugc2FpZCwuIApCdXQgc3R1ZGllcyBvZiBldmVyeXRoaW5nIGZyb20gcm9tYW50aWMgcmVsYXRpb25zaGlwcyB0byB3b3JrcGxhY2UgZW5jb3VudGVycyBzaG93IHRoYXQgbmVnYXRpdmUgaW50ZXJhY3Rpb25zIGNhbiBwYWNrIGEgbXVjaCBiaWdnZXIgd2FsbG9wIHRoYW4gcG9zaXRpdmUgb25lcy4gVGhlIHJlYXNvbiBpcyBzaW1wbGU6ICJCYWQgaXMgc3Ryb25nZXIgdGhhbiBnb29kLCIgYXMgcHN5Y2hvbG9naXN0IFJveSBCYXVtZWlzdGVyIGFuZCBoaXMgY29sbGVhZ3VlcyBwdXQgaXQuIFRoZSBuZWdhdGl2ZSB0aG91Z2h0cywgZmVlbGluZ3MgYW5kIHBlcmZvcm1hbmNlIHRoZXkgdHJpZ2dlciBpbiBvdGhlcnMgYXJlIGZhciBsYXJnZXIgYW5kIGxvbmdlciBsYXN0aW5nIHRoYW4gdGhlIHBvc2l0aXZlIHJlc3BvbnNlcyBnZW5lcmF0ZWQgYnkgbW9yZSBjb25zdHJ1Y3RpdmUgY29sbGVhZ3Vlcy4KSGUgY2FsbWVkIGRvd24sIEkgZ290IG15IG1vbmV5IGFuZCBJIG5ldmVyIGdvdCBhbiBpbnZpdGUgYmFjay4gCkhlIG5vdCBjb25jZXJuZWQgd2l0aCB0aGUgcmlnaHRuZXNzIG9mIGhpcyBhY3Rpb25zLCBvbmx5IHRoYXQgdGhleSBkZXN0cm95IHBlb3BsZSBoZSBoYXRlcy4gCkFsb25nIHRoZSB0cmFpbHMgdGhlcmUgd2VyZSBldmVuIGxpdHRsZSBtYWtlIHNoaWZ0IHJlc3Qgc3RvcHMgYW5kICJ0YXZlcm5zIiBzZXQgdXAgd2hlcmUgcGVvcGxlIHdvdWxkIGdpdmUgeW91IHF1ZXN0cyB0byBkbyBvciBpbmZvcm1hdGlvbiBhYm91dCBsb290IHRoYXQgd2FzIGhpZGRlbiBhbGwgb3ZlciB0aGUgY2FtcC4KQW5kIHRoZSByZWFsIGNoYW1waW9uLCBhIG11c3QgdGFrZSBpbiBsaXRlcmFsbHkgZXZlcnkgZGFyayBhbmdlbHMgbGlzdCwgaXMgdGhlIEFwb3RoZWNhcnkuIApJIGFtIGEgVEEgZm9yIGEgY291cGxlIDEwMCBsZXZlbCBsYWIgc2VjdGlvbnMsIGFuZCBJIGRvbid0IGJlbGlldmUgc29tZSBvZiBteSBmcmVzaG1lbiB3ZXJlIGV2ZXIgdGF1Z2h0IHdoYXQgcGxhZ2lhcmlzbSBpcy4KRGFsb2lhLi4gCkdQUyBkaXNwb3NpdGl2b3MgZGUgcmFzdHJlYW1lbnRvIGFnb3JhICBmZWl0byBkbyB0YW1hbmhvIGRlIHVtIHBhY290ZSBkZSBnb21hIGRlIG1hc2NhciwgYXNzaW0gZWxlcyBzbyBmY2VpcyBkZSBlc2NvbmRlci4uIApPbmUgb2YgaGlzIGZpcnN0IGNoYWxsZW5nZXMgd2FzIHRvIGRlY2lkZSB3aGV0aGVyIHRvIGZyYW5jaGlzZSBvciBncm93IHRocm91Z2ggY29ycG9yYXRlIGV4cGFuc2lvbi4gClBva2VyIHRpcHMgc3RyYXRlZ3kgYXJ0aWNsZXMgYXMgd2VsbCBhcyBjYXJkcm9vbSByZXZpZXdzIGFuZCBvdGhlcm9ubGluZSBwb2tlciBpbmZvcm1hdGlvbi4gSGVyZSBhcmUgc29tZSB0aXBzIGluIHBsYXlpbmcgcG9rZXJnYW1lcy4gQWx3YXlzIGtub3cgd2hhdCB0aGUgYmVzdCBoYW5kIGlzIGF0IHRoZSB0aW1lIHlvdSBtYWtlIGFiZXQuIERvbid0IG1ha2UgYSByYWlzZSB1bmxlc3MgeW91IHRoaW5rIHlvdSBjYW4gcmFpc2UuIExlYXJuIGhvdyB0byBzd2l0Y2ggZ2VhcnMgaW4gdG91cm5hbWVudHMuIEl0J3MgYmV0dGVyIHRvd2luIGEgYnVuY2ggb2Ygc21hbGwgcHVuY2ggb2Ygc21hbGwgcG90cyB0aGFuIHRvIGxvc2UgYSBmZXcgYmlnb25lcy4gU29tZSBiYXNpYyBzdGFydGluZyBoYW5kIGNvbmRpdGlvbnMuIFBhcnRpbmcgd29yZHMuIChFZGl0KSBHZXQgeW91cnNlbGYgYSBIVUQgaWYgeW91ciBwbGF5aW5nIG9ubGluZSBhbmQgcmVhZCBhcnRpY2xlcyBhbmRib29rcyBhdCB5b3UgZnJlZSB0aW1lLiBEb24ndCBnYW1ibGUgd2hlbiB5b3UgcGxheSBhbmQgdHJ5IHRvIHN0YXkgY2FsbS4gSWYgeW91IGRvbid0IHdhbnQgdG8gc3BlbmQgbW9uZXkgb24gYSBIVUQgeW91IGNhbiB0cnkgSGl0bWFuIGl0c2ZyZWUuIChGdWxsIEFuc3dlcikKRmVlZGxvdCBzdGVlcnMgYWN0dWFsbHkgb25seSBuZWVkIGFib3V0IDQuNSA3LjUgcG91bmRzIG9mIGZlZWQgdG8gZ2FpbiAxIHBvdW5kLiAKV2VpcmQuIApQcmV2aW91cyB3aW5uZXJzIGhhdmUgaW5jbHVkZWQgYW4gaW50ZXJuYXRpb25hbCBhcmNoaXRlY3QsIGEgUGFyYWx5bXBpYyBnb2xkIG1lZGFsbGlzdCwgYWZpbG0gZGlyZWN0b3IsIGVudmlyb25tZW50YWxpc3QgYW5kIGxhd3llci4gCkFub3RoZXIgYmVuZWZpdCBpcyB0aGF0IEkgbm90IHN1cHBvcnRpbmcgTnZpZGlhLCB3aGljaCBpcyBwcmV0dHkgbmlmdHkuClNvdXRoIEFzaWEgaGFzIGEgdW5pcXVlIHJvbGUgdG8gcGxheSBpbiBjb21iYXRpbmcgdGhlc2UgZGlzZWFzZXMsIGdpdmVuIHRoZSBoaWdoIGRpc2Vhc2UgYnVyZGVuIGFuZCByZWdpb25hbCBleHBlcnRpc2UgaW4gZW5kIHRvIGVuZCBzb2x1dGlvbnMsIGZyb20gZHJ1ZyBkaXNjb3ZlcnkgYW5kIGNsaW5pY2FsIHN0dWRpZXMgdGhyb3VnaCB0byByZWd1bGF0aW9uLCBtYW51ZmFjdHVyZSBhbmQgZGlzdHJpYnV0aW9uLiAKV291bGQgaXQgYmUgYSBiYWQgaWRlYSB0byBpbmZsYXRlIHRoZSBwZXJjZW50YWdlcyBieSA1IDcuNSUgZm9yIHRoZSBoZWF2eSB3b3JraW5nIHNldHM/IEkgY29uc2lkZXIgbXlzZWxmIGEgbGF0ZSBzdGFnZSBiZWdpbm5lciBvciBlYXJseSBpbnRlcm1lZGlhdGUgYW5kIEkgdGhpbmsgdGhlIGFnZ3Jlc3NpdmUgcGVha2luZy90YXBlcmluZyB3b24gaGVscCBtZSBnYWluIGFueSBzdHJlbmd0aCBiZWZvcmUgdGhlIG1lZXQuLiAKSSB3b3VsZCBhcmd1ZSB0aGF0IHNoZSB3YXMgY2hvc2VuIGFsbW9zdCBlbnRpcmVseSBiYXNlZCBvbiBoZXIgY29ubmVjdGlvbiB0byBoZXIgZmF0aGVyLCByYXRoZXIgdGhhbiBkdWUgdG8gaGVyIHF1aXRlIG1lYWdlciBsZWdpc2xhdGl2ZSBhY2NvbXBsaXNobWVudHMgcHJpb3IgdG8gYmVjb21pbmcgcHJlc2lkZW50LiBTbyBJIGJlbGlldmUgaGVyIGxlZ2FjeSBpcyBkYW1hZ2luZyB0byB3b21lbiB3aG8gd2FudCB0byBhY2hpZXZlIGluIEtvcmVhIHRocm91Z2ggdGhlaXIgaGFyZCB3b3JrIGFuZCBhYmlsaXR5Li4gCkFsc28gYmFzZWQgb24gb24gdGhlIEVsZHJhemkgVGl0YW4gZGlmZmVyZW50IGVmZmVjdHMgKEVtcmFrdWwgY29ycnVwdHMgbGlmZSwgVWxhbW9nIGVhdHMgdGhlIGxhbmQsIGFuZCBLb3ppbGVrIGRvZXMgc29tZXRoaW5nIGVsc2UpLCBhbHNvIHRoYXQgcXVvdGUgeW91IHBvc3RlZCBhYm91dCBibG9zc29tcyBhbmQgc29tZSBvbGQgcXVvdGVzIGZyb20gdWdpbiwgSXQgYmVlbiBlc3NlbnRpYWxseSB0b2xkIHRvIHVzIHRoYXQgdGhlIEVsZHJhemkgYXJlbiBncmVhdCBkZXN0cm95ZXJzIGJ1dCB0aGV5IGFyZSBzb3J0IG9mIHJlY3ljbGVycyBvZiBkZWFkIHBsYWlucy4gCkkgZG9uIHRoaW5rIHlvdSBuZWVkIHRvIGJlIGxvb2tpbmcgZm9yIHJlc291cmNlcyAgIHlvdSBhcmUgYWxyZWFkeSBvbiB0aGUgcmlnaHQgdHJhY2shIFJlYWQgdG8geW91ciBraWRzLCB0YWxrIHRvIHlvdXIga2lkcywgYW5kIGxldCB0aGVtIGV4cGVyaWVuY2UgcmVhbCB0aGluZ3MgaW4gYSBoYW5kcyBvbiB3YXkuIFRyaXBzIHRvIHRoZSBwYXJrLCB0aGUgbGlicmFyeSwgdGhlIGdyb2Nlcnkgc3RvcmUsIHRoZSBtdXNldW0gICB0aGVzZSBhbGwgaGVscCBraWRzIG1ha2Ugc2Vuc2Ugb2YgdGhlIHdvcmxkLiBHaXZlIHRoZW0gdGltZSB0byBleHBsb3JlIGFuZCBwbGF5IGFuZCBnZXQgYm9yZWQgYW5kIGdldCBtZXNzeSAgIGFuZCB5ZXMsIGxpbWl0IHNjcmVlbiB0aW1lIGFzIG11Y2ggYXMgcG9zc2libGUuCkphZyBnam9yZGUgZW4gR29vZ2xlIHNrbmluZyBvY2gga29tIHZlciBkaW4gd2ViYnBsYXRzLiBEZXQgdmFyIHByZWNpcyB2YWQgamFnIGxldGFkZSBlZnRlciBvY2ggdmFyIHVwcHJ5bWQgYXR0IGhpdHRhIGV0dCBzIGJyZXR0IHV0YnVkIGF2IGFydGlrbGFyLiBTb20gamFnIGxhbnNlcmFyIGVuIGdyYXRpcyB0aWRuaW5nIGkgZW4gbGl0ZW4gc3RhZCBpIEZsb3JpZGEsIHZpbGxlIGphZyB2YXJhIHMgcGhpdHRpZyBzb20gbWpsaWd0IHNhbXRpZGlndCBzb20gZGUga2FuIGdlIHZpc3NhIGlubmVobGwgc29tIHIgaW50cmVzc2FudCBvY2ggdmxza3JpdmVuLiBEaW4gd2ViYnBsYXRzIGhhciBhbGxhIHZhcmlhYmxlciBpIG1peGVuLiBVdG1ya3QgcGxhdHMgYXR0IHRyZmZhIGFsbGEgYW50ZWNrbmluZ2FyIGkgZGVuIHNrYWxhIHNsYWdzIHNwZWFrLgpXYWhlZWQgUmFmaXEgbWFkZSBhIHRvdGFsIG9mIG92ZXIgZnJvbSBhIGJvZ3VzIGluc3VyYW5jZSBmcmF1ZCBoZSBzZXQgdXAgaW4gMjAxMSwgYSBjb25maXNjYXRpb24gaGVhcmluZyBhdCBXb3JjZXN0ZXIgQ3Jvd24gQ291cnQgaGVhcmQuCkZvciBhbiBvbGQgYm9vaywgdGhlIGluZm9ybWF0aW9uIHRoYXQgeW91IHdpbGwgcmVjZWl2ZSBvbiByZWFkaW5nIHBsYXllcnMgaXMgc3RpbGwgZXZlcnkgYml0IGFzIHZhbHVhYmxlLiAKU2VlbXMgbGlrZSBhIGxvdCBvZiBwZW9wbGUgaGVyZSB0aGluayB0aGV5cmUgbm90IGNsaW1iaW5nIGFzIGVhc2lseSBiZWNhdXNlIHRoZXlyZSBnYXRlZCBieSB0aGUgc3lzdGVtLCBpbnN0ZWFkIG9mIHJlYWxpemluZyBtYXliZSB0aGV5IGp1c3QgYmVsb25nIGF0IHRoYXQgcmFuay4gSSBkbyBhZ3JlZSB0aGF0IGRvZGdlIHBlbmFsdHkgaXMgd2F5IHRvbyBoYXJzaCBmb3IgYSBwcm9tb3Rpb24gc2VyaWVzIHRob3VnaC4gd2lzaCB0aGV5ZCBjaGFuZ2UgaXQgdG8gc29tZXRoaW5nIGxpa2UgYSBsb25nZXIgZG9kZ2V0aW1lciBsaWtlIDEgaG91ciBvciAgMyBpbml2aXNpYmxlIGxwIChmb3Igd2hlbiB5b3UgZmFpbCBzZXJpZXMgYW5kIHlvdSBsb3NlIGxwIGZyb20gMTAwKWRvb25oaWpvZSAgMTggcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ29XYXMgYSBnb29kIHN0cmVhbSwgaW50ZXJlc3Rpbmcgc2VlaW5nIG1hdHQgZG1pbmcgbGl2ZSwgYW5kIGl0IHJlYWxseSBmZWx0IGxpa2UgYSBzZXNzaW9uIG9mIERuRCB0aGF0IGlzIHZlcnkgcmVsYXRhYmxlLlNvbWUgdGhpbmdzIHRoYXQgSSB0aG91Z2h0IHdlcmUgZXhjZWxsZW50OlRoZSBkcmFtYXRpYyBkZXNjcmlwdGlvbnMgYW5kIHRoZSBwbGF5ZXIgY29udmVyc2F0aW9ucy4gCk5vdCB0aGUgc2FtZSwgb3Igc2NhcnksIGJ1dCBJIGRpZCB0aGUgc2FtZSB0aGluZyBhcm91bmQgdG93biBvbmUgdGltZS4gCk9ubHkgbm93IGFsbCB0aGVpciBjYXJkc2FyZSBzaG93bi4gR29vZCBsdWNrIGl0IHdvcmtzIGZvciBtZS4gKEZ1bGwgQW5zd2VyKS4gCkNvb2xCZWFuc0tpZGRvICAyMCwyNzYgcG9pbnRzICBzdWJtaXR0ZWQgNSBkYXlzIGFnbwpPdXQgY2FsbCBzZXJ2aWNlLCB3aXRoIG5vIGxpbWl0YXRpb25zLCB3aWxsIGJlIGFsbG93ZWQuVGhlIHByb3Bvc2VkIG9yZGluYW5jZSB3YXMgaW50cm9kdWNlZCBieSB0aGUgY291bmNpbCBUdWVzZGF5IGFuZCB3b3VsZCBnbyBpbnRvIGVmZmVjdCBBdWcuIDIzIGlmIGFwcHJvdmVkLldoZW4gTGFzIFZlZ2FzIGFuZCBDbGFyayBDb3VudHkgaW4gdGhlIG1pZCAxOTkwcyB1cGRhdGVkIG1hc3NhZ2Ugb3JkaW5hbmNlcywgaW4gcGFydCB0byBtZWV0IHRoZSBuZWVkcyBvZiB0aGUgbWFzc2FnZSBpbmR1c3RyeSwgdGhleSBhbGxvd2VkIGNyb3NzIGdlbmRlcmVkIG1hc3NhZ2VzIGF0IGxpY2Vuc2VkIGJ1c2luZXNzZXMuIApUaGUgYmVzdCB3YXkgZm9yIG1lIHRvIHBlcnNvbmFsbHkgZGVzY3JpYmUgaXQsIGlzIGlmIEknbSBsYXlpbmcgaW4gYmVkIG9yIGFueSByb29tIHRoYXQncyBzdXBlciBxdWlldCwgSSBoZWFyIGZhaW50IHNvdW5kcyBvZiBtdXNpYy4gTmV2ZXIgYW55dGhpbmcgc3BlY2lmaWMgSSBjYW4gbWFrZSBvdXQsIGFuZCBpdCdzIGFsbCBzb3J0cyBvZiBkaWZmZXJlbnQgbXVzaWMgZ2VucmVzIHRoYXQgcGxheXMsIHNvbWV0aW1lcyBldmVuIHdoZW4gSSd2ZSBub3QgbGlzdGVuZWQgdG8gaXQgZm9yIHllYXJzLiBBbnl3YXlzLCBpdCdzIGFsbW9zdCBsaWtlIHRoZXJlJ3MgYSByYWRpbyB3cmFwcGVkIGluIGEgcGlsbG93Y2FzZSBhbmQgc2VhbGVkIGluIHRoZSB3YWxsLiBXb3JzZSBwYXJ0IGlzLCBvbiB2ZXJ5IHJhcmUgb2NjYXNpb25zIEkgY2FuIGFjdHVhbGx5IGhlYXIgbXVtYmxpbmcgb2YgYSB2b2ljZSB3aGVuIG11c2ljIGlzbid0IHBsYXlpbmcgbGlrZSBpdCdzIGEgcmFkaW8gREouIFRoZSBtb21lbnQgSSBhY3RpdmVseSB0cnkgdG8gZWNob2xvY2F0ZSB0aGUgZGlyZWN0aW9uIG9mIHRoZSBzb3VuZCwgaXQgZ29lcyBhd2F5IGNvbXBsZXRlbHkuIEkndmUgYWxzbyBzdWZmZXJlZCBmcm9tIHZlcnkgYmFkIG1pc29waG9uaWEgc2luY2UgSSB3YXMgYWJvdXQgMTMuCkkgZG9uJ3Qga25vdyBpZiBoZSBmb3JnZXMgdGhlIHNpZ25hdHVyZSBvciB3aGF0LCBwcm9iYWJseSBoZSBkb2VzLiBCdXQgYXQgbGVhc3QgaGUgYWN0dWFsbHkgZGVsaXZlcnMgbm93LiBUaGUgb3RoZXIgdGhpbmcgeW91IGNhbiBkbyBpcyBoYXZlIHRoaW5ncyBkZWxpdmVyZWQgdG8gd29yayBiZWNhdXNlIHRoZXkgdGVuZCB0byBwdXQgdGhlaXIgYmVzdCBwZW9wbGUgb24gdGhlIGNvcnBvcmF0ZSBhY2NvdW50cy4gClRoZSBzd2FzdGlrYSBpcyBhbiBhbmNpZW50IHN5bWJvbCB0aGF0IGV4aXN0ZWQgbG9uZyBiZWZvcmUgdGhlIE5hemkgYXBwcm9wcmlhdGVkIHRoYXQgc3ltYm9sIGZvciB0aGVpciBtb3ZlbWVudCwgaG93ZXZlciBpdCB3YXNuIHVzZWQgaW4gdGhlIHdlc3QuIE1vc3QgcGVvcGxlIGluIHRoZSB3ZXN0IGhhZCBubyBpZGVhIHdoYXQgYSBzd2FzdGlrYSB3YXMgYmVmb3JlIE5hemkgR2VybWFueSwgYW5kIGFmdGVyIFdXSUksIGl0IGNhbWUgdG8gYmUgYXNzb2NpYXRlZCBleGNsdXNpdmVseSB3aXRoIE5hemkgR2VybWFueSBpbiB0aGUgZXllcyBvZiBtb3N0IFdlc3Rlcm4gcGVvcGxlLCBhbiBhc3NvY2lhdGlvbiB0aGF0IGhhcyBzdHVjayB0byB0aGlzIGRheS4gClRoaXMgbWFuLCB3aXRoIHN1Y2ggYSBjbGV2ZXIgYnJhaW4sIHNvbWVob3cgaGUgaGFzIHRoZSB0aW1lIHRvIHBvc3Qgc28gbXVjaCB0byByZWRkaXQ/ClBsYXllcnMgc3VjaCBhcyBMZXZ5IGFyZSBjb25zaWRlcmVkIHByb2Zlc3Npb25hbCwgYmVjYXVzZSB0aGV5IGFyZSBzcG9uc29yZWQgYW5kIHRoZWlyIGJ1eSBpbiBmZWVzIGFyZSBhbHJlYWR5IGNvdmVyZWQuIEluIGVzc2VuY2UgdGhleSBzaW1wbHkgdHVybiB1cCBhbmQgcGxheSAgIGxpa2UgYW55IG90aGVyIHByb2Zlc3Npb25hbCBhdGhsZXRlIHdobyBjb21wZXRlcyBmb3IgbW9uZXkuIFNwb3J0c3Blb3BsZSBhcmUgZHJhd24gdG8gdGhlIGNhcmQgZ2FtZSAob3Igc3BvcnQpIGJlY2F1c2Ugb2YgaXRzIGNvbXBldGl0aXZlbmVzczsgdGhlIE1hbmx5IFNlYSBFYWdsZXMgaG9sZCB3ZWVrbHkgcG9rZXIgbmlnaHRzLCB3aGlsZSBTaGFuZSBXYXJuZSBhbmQgQm9yaXMgQmVja2VyIGFyZSBwcm9mZXNzaW9uYWwgcGxheWVycy4gCkkgdG9sZCBoaW0gaXQgd2FzIGxvY2tlZCwgYW5kIHNob3dlZCBoaW0gdGhhdCBpZiBoZSBjaGVja2VkIHRoZSBkb29ya25vYiBmcm9tIHRoZSBvdXRzaWRlIGl0IHdvdWxkIG5vdCB0dXJuLiAKV2hhdCBsaWtlbHkgdG8gcmVwbGFjZSBpdCwgaG93ZXZlciwgaXMgbm90IHNvbWUgY29tbWllIHV0b3BpYS4gSXQgbW9yZSBsaWtlbHkgdGhhdCB3ZSB3aWxsIGFsbCBkZXN0cm95IG91cnNlbHZlcy4gVGhlIHdlYWx0aHkgd2lsbCB0cnkgdG8gdHVydGxlLCBubyBkb3VidCwgYnV0IHRoYXQgaGFzbiBiZWVuIGFuIGVmZmVjdGl2ZSBzdHJhdGVneSBzaW5jZSB0aGUgY2Fubm9uIHdhcyBpbnZlbnRlZCwgYW5kIGhhcyBiZWNvbWUgaW5jcmVhc2luZ2x5IHVud29ya2FibGUgZXZlciBzaW5jZS4gCkl0IG5vdCBsaWtlIHlvdXIgc3R1Y2sgd2l0aG91dCBvcHRpb25zLi4gCk1hZGRvdyBpcyBwYXJ0IG9mIHRoZSBwcm9ibGVtLiBJbiAxIHllYXIsIE1TRE5DIGRpZCBvdmVyIDQ1MCBzdG9yaWVzIG9uIFN0b3JteSBEYW5pZWxzIGFuZCBub25lIG9uIFllbWVuLiAKVGhlaXIgZWZmb3J0IHRvIGNvbXBseSB3aXRoIHF1ZXN0aW9ucyB3YXMgdGhlaXIgdW5kb2luZywgYXQgbGVhc3QgaW4gdG9kYXkncyBvcGluaW9uLiAKSGVyZSB0aGUgdGhpbmcsIHRob3VnaCBJIG5vdCBleGFjdGx5IHN1cmUgb2YgaXQgb3JpZ2luLiAKUmVpa2kgY2FuIGJlIHVzZWQgZm9yIHNlbGYgZGlzY292ZXJ5IGFuZCBwZXJzb25hbCBncm93dGguIEEgbG90IG9mIHBlb3BsZSwgaW5jbHVkaW5nIG15c2VsZiwgdXNlIFJlaWtpIHRvIGhlbHAgcmVsaWV2ZSBhbmQgdW5kZXJzdGFuZCBzdHJlc3MgY3JlYXRlZCBmcm9tIGNoaWxkaG9vZCB0aGF0IGFmZmVjdCBvdXIgbGl2ZXMgbm93LiBSZWlraSBjYW4gaGVscCBicmluZyBsaWdodCB0byB0aGUgYmVoYXZpb3JzIG9yIGJlbGllZnMgdGhhdCB3ZSB3ZXJlIHRhdWdodCB0aGF0IG5vIGxvbmdlciBiZW5lZml0IHVzLiAKSWYgYW55b25lIGhhcyBmb3VuZCBhIHNvbHV0aW9uIHRvIHRoaXMgSSdkIGxpa2UgdG8ga25vdyBhbHNvLiBNaW5lIGhhcyBiZWVuIGRvaW5nIHRoaXMgZm9yIGFib3V0IDIgbW9udGhzIG5vdy4gCiJQYXJlbnRob29kIiAgIFRoZSBSb24gSG93YXJkIGNvbWVkeSwgUmVldmVzIGFnYWluIHN0cmV0Y2hlcyBoaXMgY29tZWR5IGNob3BzIGFuZCBkb2VzIGEgZ3JlYXQgam9iLCBib3RoIGZ1bm55IGFuZCBoZWFydGZlbHQsIHlvdSBhc3N1bWUgdGhlIGNoYXJhY3RlciBpcyBzdHVwaWQgYnV0IHlvdSBkaXNjb3ZlciBhbiBlbW90aW9uYWwgaW50ZWxsaWdlbmNlIHRoYXQgc3VycHJpc2luZy4KRGVsaWNpb3VzIGF2b2NhZG8gdG9hc3QuIENhbiB3ZSBlYXQgdGhpcz8gTWF5YmUgZHVyaW5nIHRoZSBicmVhay4gUHJvdGVpbnMuIApJZiBpdCB3b3JrcyBmb3IgeW91LCB5b3UgZG9uIG5lZWQgYSByb3V0aW5lLiAKSSBoYXZlIHBlb3BsZSBjb21lIGluLCB0aGV5IHRlbGwgbWUgZXZlcnl0aGluZyBvbiB0aGUgc3ViLCBhbmQgaGFsZiB3YXkgdGhyb3VnaCB0aGF0IHRoZXkgYWRkICJidXQgbm8gamFsYXBlbm9zIiBvciAibm8gbWF5byIuIFRoZSB0b3BwaW5ncyBhcmUgcmlnaHQgaW4gZnJvbnQgb2YgeW91LiAKV2hhdCBUbyBEbyB3aXRoIE9PTCBEZWFsZXIKVGhlc2UgcGVvcGxlIGFyZSBuaWNlLCBnb29kIHBlb3BsZSwgYW5kIGZvciB0aGF0IHJlYXNvbiBJIGZlZWwgY29tcGVsbGVkIHRvIGhlbHAgdGhlbSBnZXQgdGhlaXIgc3BlbGx3aW5nIG1vdW50cy4gClRoZXNlIGV2ZW50cyBhcmUgb3BlbiB0byBhbGwsIHdpdGggYSBmb2N1cyBvbiB3b21lbiwgZmVtbWUsIHRyYW5zLCBhbmQgbm9uIGJpbmFyeSBlbnRyZXByZW5ldXJzLiAKU28gd2hhdCBpcyB0aGUgZGlmZmVyZW5jZT8gVHVlIGRpZmZlcmVuY2UgaXMgdGhhdCBpbiBOb3J0aCBBbWVyaWNhIGFuZCBBdXN0cmlhbGlhLCBwZW9wbGUgY2FuIHN0YW5kIGlwIHRvIHBvaW50IG91dCB0aG9zZSB3cm9uZ3MsIGFuZCBmaWdodCB0byBkZWZlbmQgdGhlc2UgcGVvcGxlLCB3aXRob3V0IHRoZSBnb3Zlcm5tZW50IGNlbnNvcmluZyBpdCwgb3Igd29yc2UsIHRocm93aW5nIHRoZW0gb24gamFpbCBhbG9uZyB0aGUgbWlub3JpdGllcy4gSW4gdGhlIFBSQywgeW91IGNhbm5vdCBldmVuIHZvaWNlIHlvdXIgZGlzYWdyZWVtZW50IHdpdGggdGhlIGdvdmVybm1lbnQgcG9saWN5LiAKSG93ZXZlciwgdGhlcmUgd2VyZSBmZXdlciBjb21wbGFpbnRzIGR1cmluZyB0cmVhdG1lbnQgY29tcGFyZWQgdG8gY29udHJvbCBjb25kaXRpb25zIChmaXZlIHZlcnN1cyBuaW5lIGNvbXBsYWludHMpLiBXZSBjb25jbHVkZSB0aGF0LCBhcyBpcyB0aGUgY2FzZSB3aXRoIG90aGVyIHR5cGVzIG9mIHdlYXBvbnMsIHRoZSBwcmVzZW5jZSBvZiBUQVNFUnMgbGVhZHMgdG8gaW5jcmVhc2VkIGFnZ3Jlc3Npb24uIFRoZSB2aXN1YWwgY3VlIG9mIGEgVEFTRVIgaW4gcG9saWNlIHB1YmxpYyBpbnRlcmFjdGlvbnMgbGVhZHMgdG8gYWdncmVzc2lvbi4gCkkgYSBnYXkgSm9yZGFuaWFuLCBidXQgSSBoYXZlIGFic29sdXRlbHkgbm8gZmVtaW5pbmUgdHJhaXRzLCBzbyB5b3Ugd29uIGJlIGFibGUgdG8gdGVsbC4gQW5kIEkgb25seSBjb21lIG91dCB0byB0d28gcGVvcGxlIGluIG15IGxpZmU7IG15IGJlc3QgZnJpZW5kIGFuZCBteSBzaXN0ZXI7IHRoZXNlIGFyZSB0aGUgb25seSB0d28gcGVvcGxlIGluIG15IGxpZmUgd2hvIEkgdHJ1c3QgY29tcGxldGVseSwgZXNwZWNpYWxseSBzaW5jZSB3ZSBhZ3JlZSB3aXRoIGVhY2ggb3RoZXIgb24gbW9zdCB0aGluZ3MuClN1cmUgYXQgZmlyc3QgaXQgcmVhbGx5IGhhcmQgdG8gZ3Jhc3Agd2hhdCBiZW5lZml0cyB0ZXN0aW5nIGJyaW5ncy4gCkhlYXJ0IGRpc2Vhc2UgYW5kIGhlYXJ0IGF0dGFjayBjYW4gY29udHJpYnV0ZSB0byBjaGVzdCBwYWluIGFuZCB0aWdodG5lc3MuIE90aGVyIHN5bXB0b21zIHRoYXQgeW91IHNob3VsZCBsb29rIGZvciBhIGV4dHJlbWUgcGFpbiBpbiB0aGUgbGVmdCBwYXJ0IG9mIHRoZSBoZWFydCwgbnVtYm5lc3Mgb2YgdGhlIGNoZXN0IGFuZCBzaG91bGRlciBwYWluLiAKQ2hhbmNlcyBhcmUsIHlvdXIgT0IgZG9lc24ga25vdyBtdWNoIGFib3V0IGZpYnJvLCBidXQgdGhleSBuZWVkIHRvIGtub3cgeW91IGhhdmUgaXQuIApJZiB5b3UgYXJlIGJhcHRpemVkIGFuZCB0aGUgRWxkZXJzIChtYWxlIGhlYWRzIG9mIHRoZSBjb25ncmVnYXRpb24gY2hvc2VuIGJ5IHRoZSBnb3Zlcm5pbmcgYm9keSkgZGVjaWRlIHRoYXQgeW91IGhhdmUgY29tbWl0dGVkIGFuIG9mZmVuc2UsIHRoZXkgZGVjaWRlIGlmIHlvdSBhcmUgcmVwZW50YW50IGVub3VnaC4gCllvdSBuZXZlciBrbm93IHdoZW4geW91IHdpbGwgaGF2ZSB0byBzaXQgYW5kIHdhaXQgZm9yIGEgdG93IG9yIHdoZW4geW91IGhhdmUgdG8gd2FsayBhIGZldyBrbS4gQmV0dGVyIHNhZmUgdGhhbiBzb3JyeSwgZXNwZWNpYWxseSBpbiBhIHdpbnRlciBjbGltYXRlLiAxNiBwb2ludHMgIHN1Ym1pdHRlZCAzIG1vbnRocyBhZ28KSXQgd2FzIHRoZSBtb25leSBtZSBhbmQgbXkgYnJvdGhlciBzYXZlZCBmb3IgYSB0cmlwLiAKQ29uZ3JhdHVsYXRpb25zIG9uIHlvdXIgZW5nYWdlbWVudCA6KSBZZXMsIG9uZSBndXkgSSB0YWxrZWQgdG8gZm9yIGEgZmV3IHdlZWtzIG9uIGEgZGF0aW5nIHNpdGUgc2FpZCBoZSB3YXNuJ3QgaW50ZXJlc3RlZCBpbiB0aGUgZW5kIGJlY2F1c2UgaGUgd2FudGVkIHNvbWVvbmUgIndpdGggbW9yZSBhbWJpdGlvbiB0aGFuIHRvIGJlIGEgaG91c2V3aWZlLiIgSGUga25ldyBmcm9tIHRoZSBiZWdpbm5pbmcsIHRob3VnaCwgYXMgdGhlIGRlc2lyZSB0byBiZSBhIFNBSE0gd2FzIG9uIG15IGRhdGluZyBwcm9maWxlIGFuZCB3ZSBoYWQgdGFsa2VkIG9uIHRoZSBwaG9uZSBhYm91dCBpdC4gCkFsc28gaGF2aW5nIGVub3VnaCBtb25leSBmb3IgZWFjaCBkYXkgaXMgaW1wb3J0YW50LiAKVGhlIHRvdGFsIGNhbWUgdG8gMSw1NjAgY2Fsb3JpZXMuQXMgdGltZSB3ZW50IGJ5LCBEYXJkYXJpYW4gZGV2ZWxvcGVkIGEgcGF0dGVybi5UaGVyZSB3ZXJlIGZvb2RzIG9uIHRoZSBNY0RvbmFsZCdzIG1lbnUgdGhhdCBEYXJkYXJpYW4gZGlkIG5vdCBsZXQgcGFzcyBoZXIgbGlwcywgaW5jbHVkaW5nIHRoZSBkb3VibGUgY2hlZXNlYnVyZ2VyICg0NDAgY2Fsb3JpZXMpOyB0aGUgZG91YmxlIHF1YXJ0ZXIgcG91bmRlciB3aXRoIGNoZWVzZSAoNzcwIGNhbG9yaWVzKSwgdGhlIGJpZyBicmVha2Zhc3Qgd2l0aCBob3RjYWtlcyAoMSwzNTApIGFuZCB0aGUgTWNGbHVycnkgKDUxMCBmb3IgdGhlIE9yZW8gZmxhdm9yKS4iSSBuZXZlciBvcmRlcmVkIGEgZG91YmxlIG9mIGFueXRoaW5nLCIgc2hlIHNhaWQsIGV4cGxhaW5pbmcgdGhhdCBoYXZpbmcgdHdvIGJ1cmdlcnMgcmVzdWx0cyBpbiB0b28gbXVjaCBoaWdoIGZhdCBwcm90ZWluIGZvcm9uZSBtZWFsLiJJdCdzIGNhbGxlZCBhIGRvdWJsZSBmb3IgYSByZWFzb24uIApPbmUgYWR2YW50YWdlIG9mIGdldHRpbmcga25vY2tlZCBvdXQgZWFybHksIGlzIHRoYXQgdGhlIGZhaWx1cmVzIGNhbiBwbGF5IGluIHRoZSBTdXBlciBTYXRlbGxpdGUgYXQgM3BtLiBBbmQgYm95IGRpZCBJIGdldCBsdWNreS4gClJlYWxseSBmcnVzdHJhdGluZy4gClRoZSBkZXNjcmlwdGlvbiBvbiB0aGUgYmFjayBpcyBub3RlcyBvbiBhY2NlcHRpbmcgZmFpbHVyZSwgZW1icmFjaW5nIGxpZmUsIGFuZCByaXNpbmcgdG8geW91ciBkZXN0aW55IEEgc3RyYW5nZXIgZ2F2ZSBtZSB0aGlzIGJvb2tzIGEgZmV3IG1vbnRocyBhZ28gYXQganVzdCB0aGUgcmlnaHQgdGltZSBpbiBteSBsaWZlLiAKJ1RocmVhdGVuaW5nIGxldHRlcnMnQmlnIFRleGFzIFBva2VyIENsdWIgb3BlbmVkIGluIGxhdGUgQXVndXN0IGluIGEgY29tbWVyY2lhbCBidWlsZGluZyBvZmYgSnVwaXRlciBSb2FkIGluIFBsYW5vLiBPd25lcnMgRnJlZCBhbmQgSGVhdGhlciBaaW1tZXJtYW4gc2FpZCB0aGV5IGRpZCB0aGVpciBob21ld29yayB0byBlbnN1cmUgdGhhdCB0aGV5IHdvdWxkIGJlIGxlZ2FsLiBUaHJlZSB3ZWVrcyBsYXRlciwgdGhleSBzaHV0IGRvd24gdG8gYXZvaWQgYXJyZXN0LgpVc2UgdGhlIGVhcmx5IHRvdXJuYW1lbnQgcGVyaW9kLCB3aGlsZSB0aGUgYmxpbmRzIGFyZSBzdGlsbCBsb3csIHRvIHN0dWR5IGV2ZXJ5b25lIGF0IHlvdXIgdGFibGUsIGlkZW50aWZ5aW5nIHRoZSBtb3N0IGxpa2VseSBwcmV5LCB1bmRlcnN0YW5kaW5nIHRoZWlyIGhhYml0cyBhbmQgcGxheSBzdHlsZXMuIApTbyBJIHRoaW5rIHdlIHdpbGwgcGFzcyEgU3RpbGwgZnVuIHRvIHdhdGNoIHRob3VnaC4uIApDZWx1aSBjaSBhIGFzc3VyIGF1IGdyb3VwZSBkZSB0b3VyaXN0ZXMgZnJhbmFpcyBkdSByZWZ1cyBkZXMgdHVyY3MgZCdlbnRyZSBkYW5zIGwnVW5pb24gRXVyb3Blbm5lIDsgcGlyZSwgaWwgYSBkZW1hbmQgYXV4IHRvdXJpc3RlcyBmcmFuYWlzIGRlIHZvdGVyICJub24iICB1bmUgZGVtYW5kZSBkJ2FkaHNpb24gZGUgbGV1ciB0YXQgZGFucyBsJ1VuaW9uIEV1cm9wZW5uZSwgY2UgcXVpIChzZWxvbiBsdWkpIHJlbmRyYWl0IHNlcnZpY2UgYXV4IHR1cmNzICEgQ2V0dGUgZW50cmUgZGFucyBsJ29yZ2FuaXNhdGlvbiBldXJvcGVubmUgc2VyYWl0IGwndW5pcXVlIHZvbG9udCBkdSBjb3JwcyBwb2xpdGlxdWUuLiAKMTk0NiBBcHBhcmVsLCBUaGlzIGJvdXRpcXVlIHN0eWxlIHNob3Agd2FzIGRlc2lnbmVkIGZvciB0aGUgZmFzaGlvbiBmb3J3YXJkIGd1ZXN0IHdpdGggYSBmb2N1cyBvbiBhY2Nlc3Nvcmllcy4KQmVnYmllLCBzaW1pbGFybHksIGlzIGZyZXF1ZW50bHkgc2VlbiBkb3duaW5nIGEgcGludCBvciBzd2lnZ2luZyBmcm9tIGEgYm90dGxlLCBhbmQgaXMgYWxtb3N0IGFsd2F5cyBpbiB0aGUgcHViLgpUaXRsZXMgYW5kIGNvbW1lbnRzIHdpdGggYW4gZXhjZXNzIG9mIGNhcHMgbG9jaywgYm9sZCB0ZXh0LCBsYXJnZSBmb250cywgdGV4dCBjb2xvcnMsIGV4YWdnZXJhdGVkIHB1bmN0dWF0aW9uIGFuZCBvdGhlciBhdHRlbnRpb24gc2Vla2luZyBkZXZpY2VzIHdpbGwgYmUgcmVtb3ZlZC4KSW4geW91ciBibG9nIHBvc3QsIHlvdSB3cm90ZSB0aGF0IHNvbWUgb2YgdGhlIHByb2dyYW1taW5nIG9mIHRoZSBjb21tdW5pdHkgd2lsbCByZW1haW4gY2FuIHlvdSBleHBhbmQgb24gdGhhdCBzdGF0ZW1lbnQ/CkFuZCBibGFjayB3aWRvdyBpcyBtb3JlIGtub3duIHRoYW4geW91IGV4cGVjdCwgYXQgbGVhc3QgbW9yZSBrbm93biB0aGFuIGNhcHRhaW4gbWFydmVsIGJ5IG1pbGVzIDcgcG9pbnRzICBzdWJtaXR0ZWQgOSBkYXlzIGFnby4gClRoZSBzdXBwb3J0IG9mIG15IGh1c2JhbmQgYW5kIGZhbWlseSBJIGRpZCB0aGF0LiBJIHN0YXJ0ZWQgQmVsbGFzIEJvZHl3b3JrIHRvIGhlbHAgcGVvcGxlIGZlZWwgYmV0dGVyLi4gCldlIHdpbGwgbm90IHN0YW5kIGRvd24sIGFuZCBpbiB0aGUgZW5kLCB3ZSB3aWxsIGJlIHZpY3RvcmlvdXMuLiAKVGhlc2UgY2l0aXplbnMgd2VyZSBkaWZmZXJlbnQgZnJvbSBzdWJqZWN0cy4gClRoZSBSZXYuIApBbHNvIGEgbGl0dGxlIGJpdCBzdHJlc3NlZCBvdXQgYmVjYXVzZSBJIHJpc2sgZmx5aW5nIHRvIGZhciAoSSBtb3N0bHkgZmx5IGJ5IG15IG93biBtb3VudHMpLi4gCkFmdGVyIGNhbXBhaWduaW5nIGFnYWluc3QgJ3BpcmF0ZXMgb2YgdGhlIGFpciBhbmQuIApFeHBlY3QgYWNlcywgc2V0cywgb3Igb3RoZXIgaHVnZSBoYW5kcyB3aGVuIHNvbWVvbmUgYmV0cyB3aXRoIHNoYWtpbmcgaGFuZHMuWzddLiAKV2hlbmV2ZXIgSSBmaW5hbGx5IGFjZSBhIHRvdWdoIFN1cGVyIE1lYXQgQm95IGxldmVsCllvdSdsbCBuZWVkIGEgLiBUaGVtc2VsdmVzIGZyb20gdGhlIGh1YmJ1YiBvZiBkYWlseSBsaWZlIGluIG9yZGVyIHRvLCBpbiBlc3NlbmNlLC4gCkVuam95aW5nIGVhY2ggb3RoZXJzIGNvbXBhbnk/IER1cGxleC4gCk5vdywgSSBjb25mZXNzIHRoYXQgSSB3YXMgZmVlbGluZyBwcmV0dHkgY3luaWNhbCBhbmQgc25hcmt5LCBhbmQgc28gZGVjaWRlZCB0byByZXNwb25kIG9uIHRoZSBhc3N1bXB0aW9uIHRoYXQgdGhlIGFuc3dlciB3YXMgQi4gSWYgdGhhdCBhIG1pc2NoYXJhY3Rlcml6YXRpb24sIEkgYXBvbG9naXplLiBCdXQgdGhlIGlkZWEgdGhhdCB0aGlzIGlzbiBhIGRpc2N1c3Npb24gdGhhdCBiZWVuIGhhZCBoZXJlICAgaGFkIGFnYWluIGFuZCBhZ2FpbiBhbmQgYWdhaW4gICBpcyBqdXN0LiAKSSBpbnNpc3Rpbmcgb24gbm90aGluZyEgSXMgeW91ciBwb2ludCB0aGF0IG5vIHdvbWFuLCBhbnl3aGVyZSwgaXMgYWJsZSB0byBtYWtlIGEgZnJlZSBjaG9pY2Ugb2YgaGVyIG93bj8gTWF5YmUgSSBhbSBhcyBzdHVwaWQsIGFuZCB3aWxmdWxseSBzbywgYXMgeW91IGJlbGlldmUsIGJ1dCB0aGlzIG1ha2VzIHplcm8gc2Vuc2UgdG8gbWUuIEkgaGF2ZSBub3QgZm9ybWFsbHkgc3R1ZGllZCBmZW1pbmlzbSBhbmQgbWF5YmUgdGhpcyBtYWtlcyBhIHNtYXJ0IGNvbnZlcnNhdGlvbiBiZXR3ZWVuIHVzICAgb3Igb25lIHlvdSBjYW4gYmUgYm90aGVyZWQgd2l0aCAgIGltcG9zc2libGUgYmVjYXVzZSBJIGxhY2sgeW91ciBhY2FkZW1pYyB0cmFpbmluZyBhbmQgcGVyc3BlY3RpdmUuIApUaGUgUnVzc2lhbiB0cmFuc2xhdG9yIHdhcyBhbHNvIGFuIEZCSSBhc3NldCB3b3JraW5nIG91dCBvZiB0aGUgTmV3IFlvcmsgRkJJIG9mZmljZXMuIERpZCBNYW5hZm9ydCBnZXQgc3VzcGljaW91cyBhbmQgY29udGFjdCB0aGUgRkJJPyBXYXMgQ29tZXkgb24gdGhlIHNpZGUgb2YgT2JhbWEvTHluY2ggdG8gZW50cmFwIHRoZW0gYW5kIGdldCBhIEZJU0Egd2FycmFudD8gVGhpcyBFbWluIGd1eSByaWNoIFJ1c3NpYW4gRGFkIGlzIEFOVEkgUHV0aW4gYW5kIGhpcyBQUiBGaXJtIHdhcyB0aGUgUG9kZXN0YSBncm91cC4gCkkgc3VnZ2VzdCBidXlpbmcgYXQgbGVhc3QgMTEgZ3JhbSBjaGlwcyBvciAxNCBncmFtIGNoaXBzIGlmIHlvdSByZWFsbHkgd2FudCBhICJjYXNpbm8gZmVlbCIgdG8geW91ciBjaGlwcy4uIApIaXMgZnVsbCBzZXJ2aWNlIHJlc3RhdXJhbnQgcmVjZW50bHkgdG9vayBvdmVyIHRoZSBmb3JtZXIgUmFiYml0IEhvbGUgc3BhY2UgaW4gTWlkdG93biBHbG9iYWwgTWFya2V0LCB3aGVyZSBaaWFkaSBpcyBhbHJlYWR5IGEgZmFtaWxpYXIgZmFjZTogV2l0aCBoaXMgd2lmZSBSYWphLCBoZSdzIGJlZW4gb3BlcmF0aW5nIHRoZSBjb3VudGVyIHNlcnZpY2UgTW9yb2NjYW4gRmxhdm9ycyBzdGFsbCBzaW5jZSAyMDE2LgpNY2h0ZSBtYW4gdHJvdHpkZW0gZWluIGJpc3NjaGVuIEZhcmJlIHJlaW5icmluZ2VuLCBkYW5uIGtubnRlIG1hbiBlaW4gcGFhciBUcm9wZmVuIFNhbmRkb3JuZnJ1Y2h0ZmxlaXNjaGwgb2RlciBLYXJvdGlubCB2ZXJ3ZW5kZW4uIEFiZXIgaWNoIGZpbmRlIHNpZSBhdWNoIHNvIGhic2NoLiBOZXR0IHZlcnBhY2t0LCB6QiBpbiBlaW5lbSBDZWxsb3BoYW5zY2tjaGVuIG1pdCBTY2hsZWlmZSB1bmQgR2VzY2hlbmtzYW5obmdlciBzaW5kIHNpZSBicmlnZW5zIGF1Y2ggZWluIHNjaG5lcyBNaXRicmluZ3NlbCBiZWltIG5jaHN0ZW4gQmVzdWNoIC4gCkFuYWx5c3RzIGhhdmUgYWxzbyBzYWlkIHRoZSBjb21wYW55J3Mgc2NhbGUgYWR2YW50YWdlIG92ZXIgc29tZSBvZiBpdHMgcGVlcnMgICB3aGljaCBoYXNuJ3Qgc2VlbiBpdCBnZW5lcmF0ZSBtYXJrZXQgc2hhcmUgZ2FpbnMgaW4gbWFueSBvZiB0aGUgY291bnRyaWVzIGluIHdoaWNoIGl0IG9wZXJhdGVzICAgbWF5IGJlIGVyb2RlZCBieSBvbmdvaW5nIGluZHVzdHJ5IGNvbnNvbGlkYXRpb24uLiAKSWYgYWNjZXB0ZWQsIHRoZSBvZmZlciBwcmljZSB3b3VsZCByZXByZXNlbnQgYSAzMSUgcHJlbWl1bSBvbiBBbWF5YSdzIGNsb3Npbmcgc2hhcmUgcHJpY2Ugb24gRnJpZGF5LlRoZSBvZmZlciwgaW5jbHVkaW5nIGRlYnQgYW5kIHRyYW5zYWN0aW9uIGNvc3RzLCBpcyB2YWx1ZWQgYXQgQyQ2LjdibiwgQW1heWEgc2FpZCBpbiBhIHJlZ3VsYXRvcnkgZmlsaW5nLlRoZSBlcXVpdHkgcG9ydGlvbiBvZiB0aGUgZGVhbCB3b3VsZCBiZSBDJDQuMWJuIGFuZCB3aWxsIGJlIG1vc3RseSBmaW5hbmNlZCBieSBmb3VyIGZ1bmRzLCB3aGljaCBoYXZlIGNvbW1pdHRlZCBDJDMuNjVibiBhbmQgQmFhem92J3Mgb3duIHNoYXJlcyB2YWx1ZWQgYXQgQyQ0MjdtbG4uIAooSWdub3JlIHRoaXMgZGlncmVzc2lvbiBpZiBpdCBnaXZlcyBvZmZlbmNlKS4gCkFsdGVybmF0aXZlbHksIGNvbnRhY3QgeW91ciBsb2NhbCBTbWFsbCBCdXNpbmVzcyBBZG1pbmlzdHJhdGlvbiBvZmZpY2UgYWJvdXQgYSBzbWFsbCBidXNpbmVzcyBsb2FuIChzZWUgUmVzb3VyY2VzKS4uIApDb3NieSBpcyBzZXQgdG8gZ28gb24gdHJpYWwgaW4gSnVuZSBvdmVyIHRoZSAyMDA1IGNvbXBsYWludCBieSBmb3JtZXIgVGVtcGxlIFVuaXZlcnNpdHkgZW1wbG95ZWUgQW5kcmVhIENvbnN0YW5kLCB3aG8gaXMgbm93IGEgbWFzc2FnZSB0aGVyYXBpc3QgaW4gVG9yb250by4KU2VyaW91c2x5LCB0aGVyZSBpcyBhbHdheXMgYSBiaXJ0aGRheSBvciBob2xpZGF5IHJpZ2h0IGFyb3VuZCB0aGUgY29ybmVyIGFuZCB5b3Uga25vdyB3aGF0IHdlJ3JlIGRvaW5nPyBCdXlpbmcganVzdCBhYm91dCBldmVyeW9uZSBhIDEwMCBXb3JsZCBQb2tlciBUb3VyIFBva2VyIENoaXAgU2V0LiAKIkltYWdpbmUhIE9uZSBjYW4gaGVhciBhbmQgc2VlIHRoZSBncmFzcyBncm93aW5nISIgTGV2aW4gc2FpZCB0byBoaW1zZWxmLCBub3RpY2luZyBhIHdldCwgc2xhdGUgY29sb3JlZCBhc3BlbiBsZWFmIG1vdmluZyBiZXNpZGUgYSBibGFkZSBvZiB5b3VuZyBncmFzcy4gSGUgc3Rvb2QsIGxpc3RlbmVkLCBhbmQgZ2F6ZWQgc29tZXRpbWVzIGRvd24gYXQgdGhlIHdldCBtb3NzeSBncm91bmQsIHNvbWV0aW1lcyBhdCBMYXNrYSBsaXN0ZW5pbmcgYWxsIGFsZXJ0LCBzb21ldGltZXMgYXQgdGhlIHNlYSBvZiBiYXJlIHRyZWUgdG9wcyB0aGF0IHN0cmV0Y2hlZCBvbiB0aGUgc2xvcGUgYmVsb3cgaGltLCBzb21ldGltZXMgYXQgdGhlIGRhcmtlbmluZyBza3ksIGNvdmVyZWQgd2l0aCB3aGl0ZSBzdHJlYWtzIG9mIGNsb3VkLi4gCldlIHdvdWxkbid0IHdhbnQgdG8gZXhjbHVkZSBhbnlvbmUgYW5kIGF0IHRoYXQgcG93ZXIgbGV2ZWwgZG9uJ3QgdGhpbmsgd2Ugd291bGQuIFRoZSBvbmx5IGV4Y2VwdGlvbiBiZWluZyB0aGUgbGVzdGVyIGhvbmRhIGNhciB3aGljaCBJJ20gc3VyZSB3ZSBjYW4gbWFrZSBhIHBsYW4gYW5kIGFsbG93IHRoaXMgY2FyIHNvbWVob3cuIFBvbGljaW5nIGl0IGlzIHRoZSBoYXJkIGJpdCBhbmQgdGhlIHBhcnQgdGhhdCBpcyBoYXJkZXN0LiAKSSBhcHByZWNpYXRlIHRoYXQgdGhpcyBtaWdodCBiZSB1bnJlYXNvbmFibGUgYnV0IGFzIGEgQnJpc3RvbGlhbiBJIGdlbnVpbmVseSBmZWVsIHByZXR0eSBzb3JlIGFib3V0IGhvdyBoaWxhcmlvdXMgZXZlcnlvbmUgZmluZHMgb3VyIGFjY2VudHMuIApUaGUgY29sb3Igb2YgeW91ciBza2luIGhpZ2hseSBkZXBlbmRzIG9uIHRoZSBhbW91bnQgb2YgbWVsYW5pbiBwcmVzZW50IGluIHlvdXIgYm9keS4gU29tZSBBc2lhbiB3b21lbiBoYXZlIGEgZ3JlYXRlciBhbW91bnQgb2YgdGhpcyBza2luIHBpZ21lbnQgaW4gdGhlaXIgYm9kaWVzLCBtYWtpbmcgdGhlaXIgc2tpbiBjb2xvciBkYXJrZXIsIHdoaWxlIHNvbWUgd29tZW4gaGF2ZSBsZXNzIG1lbGFuaW4gaW4gdGhlaXIgYm9keSBnaXZpbmcgdGhlbSBhIGZhaXJlciBza2luIHRvbmUuClRoZXJlJ3MgYSBtaWxsaW9uIHJlYXNvbnMgc2hlIGNvdWxkIHdhbnQgdG8gc2xvdyB0aGUgcm9sbC4gU2hlIG1pZ2h0IGJlIGZhY2VkIHdpdGggdGhlIHJlYWxpdHkgb2YgaGF2aW5nIHRvIHRlbGwgaGVyIGZhbWlseSBhYm91dCBoZXIgZm9yZWlnbiBmaWFuYyBhbmQgdXBzZXR0aW5nIHRoZW0gdGhhdCBzaGUgY291bGQgYmUgbW92aW5nIHNvIGZhciBhd2F5IG9yIHRvIGEgbWFuIGZyb20gYW5vdGhlciBjdWx0dXJlIHdobyBjYW4ndCBjb21tdW5pY2F0ZSBhbmQgYm9uZCB3aXRoIGhlciBmYW1pbHkgKHVubGVzcyB5b3Uga25vdyBTd2VkaXNoPykgb3IgYW55IG51bWJlciBvZiBvdGhlciBwcm9ibGVtcyBwZW9wbGUgZnJvbSB0aGUgc2FtZSBjdWx0dXJlIGZhY2U6IGRvIEkgd2FudCB0byBiZSBsb2NrZWQgZG93biwgZG8gSSB3YW50IGtpZHMgd2l0aCB0aGlzIHBlcnNvbiwgd2lsbCBJIGJlIGFibGUgdG8gc3RhbmQgbGl2aW5nIHdpdGggdGhpcyBwZXJzb24sIHdoYXQgaGF2ZSB5b3UuU2xvdyBhbmQgc3RlYWR5IHdpbnMgdGhlIHJhY2UuIApFdCBsZXMgY2hpZmZyZXMgc29udCBsIHF1aSBlbiB0bW9pZ25lbnQuIApOb3RZb3VUdSAgNSBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvCkFuZCB5ZXQsIGRlZXAgZG93biBpbiBteSBmYW50YXN5IGxhZGVuIHN1YmNvbnNjaW91cywgSSBrbm93IHRoYXQgdHJ1dGggYW5kIGp1c3RpY2UgcmFyZWx5IG9jY3VyIGluIHRoZSByZWFsIHdvcmxkLiAKQWNjb3JkaW5nIHRvIHRoZSBmZWRlcmFsIGdvdmVybm1lbnQgdXAgdG8gNTAwLDAwMCBBdXN0cmFsaWFucyBhcmUgYXQgcmlzayBvZiBiZWNvbWluZyBvciBhcmUgYWxyZWFkeSBwcm9ibGVtIGdhbWJsZXJzLgpZb3UgY2FuIGp1c3QgZG9uIGlmIHlvdSBpIGFtIGp1c3Qgc2F5aW5nIHRoaXMgYmVjYXVzZSB3ZWxsIHRoaXMgaXMgbW9zdCBsaWtlbHkgd2hhdCBtb3N0IG9mIHlvdSBwZW9wbGUgcmVhZGluZyB3b3VsZCBoYXZlIGRvbmUuIApQcmVzaWRlbnQgVHJ1bXAgZ290IGhpcyB0ZWFtIG9mIGRlZmVuY2UsIHNlY3VyaXR5IGFuZCBpbnRlbGxpZ2VuY2UgdG9nZXRoZXIgdG8gbXVsbCB2YXJpb3VzIG9wdGlvbnMgYW5kIHRvIGNob29zZSB0aGUgbW9zdCBzdWl0YWJsZSByZXNwb25zZS4uIApNY0NocnlzdGFsIGlzIGEgcGFydCBvZiB0aGF0LiAKQXVmIGVpbmVyIExuZ2Ugdm9uIDgzLDMga20gaGFiZW4gZGllIGRpZSBMdWZlcklubmVuIGluc2dlc2FtdCA4LjUyNSBIaGVubWV0ZXIgenUgYmV3bHRpZ2VuLiAKSWYgeW91IGFscmVhZHkgc2VlbiB0aGF0LCBnbyB3YXRjaCB7RmlzdCBvZiB0aGUgTm9ydGggU3Rhcn0uIApPa2F5LCBJIGp1c3QgdGhyZXcgdGhhdCBsYXN0IG9uZSBpbi4gQnV0IG15IGRhdWdodGVycywgd2hvIGJlZ2FuIHJlYWRpbmcgQXJjaGllIHdoZW4gdGhleSB3ZXJlIGFib3V0IDcgeWVhcnMgb2xkLCBxdWlja2x5IHBvaW50ZWQgb3V0IHRoYXQgSnVnaGVhZCB3YXMgb25seSBpbnRlcmVzdGVkIGluIGZvb2QgYW5kIHRoZSBvdGhlciBndXlzLiBUaGV5IGZpZ3VyZWQgdGhhdCBtZWFudCBoZSB3YXMgZ2F5IGFuZCBzbyB0aGF0IHRvbyBpcyBhIGxlc3NvbjogdGhlIGdheSBvbmUsIHVuYWJsZSB0byBldmVyIGZpbmQgcm9tYW50aWMgbG92ZSB3aXRoIEFyY2hpZSwgbXVzdCB0dXJuIHRvIGZvb2QgZm9yIGNvbWZvcnQuCkEgcGFpciBvZiBzaG9lcyB5b3UndmUgaGFkIGluIHlvdXIgY2xvc2V0IGZvciB0aHJlZSB5ZWFycyBtaWdodCBiZSBvbGQsIGFuZCBzaG9lcyB5b3UndmUgaGFkIGZvciAxMCB5ZWFycyBtaWdodCBiZSByZWFsbHkgb2xkLCBidXQgbmVpdGhlciB3b3VsZCBiZSBjb25zaWRlcmVkIHZpbnRhZ2UuIFRoaXMgbWFrZXMgYSB2aW50YWdlIHdpbmUgZXNwZWNpYWxseSByZXByZXNlbnRhdGl2ZSBvZiBhIHBhcnRpY3VsYXIgeWVhci4gClJhcHByZXNlbnRhIGwnb3R0aWNhIGRlbGxhIHZpc2lvbmUgY2hlIG9sdHJlcGFzc2EgaSBsaW1pdGksIHBvdGVuemlhbmRvIGxlIHF1YWxpdCBpbnNpdGUgbmVsIG51bWVybyAyICgxKzEgPTIpOiBsJ2lsbHVtaW5hemlvbmUgY2hlIGFsdHJvIG5vbiAgc2Ugbm9uIGxhIGNhcGFjaXQgZGkgdmVkZXJlb2x0cmUgbGUgYXBwYXJlbnplLiAKQW55d2F5cywgdGhhdCByb3VnaGx5IHdoZXJlIHRoaW5ncyBzdGFuZCByaWdodCBub3cgYWZ0ZXIgc3BlbmRpbmcgYSB0cnVseSBhYnN1cmQgYW1vdW50IG9mIHRpbWUgdHJ5aW5nIHRvIGZpZ3VyZSBvdXQgd2hhdCB0aGUgZW5kIHNlZ21lbnQgbXVzaWMgaXMuIEkgcHJldHR5IG11Y2ggcmVhZHkgdG8gZmluYWxseSB0aHJvdyBpbiB0aGUgdG93ZWwgb24gdGhpcyBvdXRzaWRlIG9mIGEgYml0IG1vcmUgdGlua2VyaW5nIHdpdGggTG9naWMgUHJvIGFuZCBzb21lIG1vcmUgYnJpZWYgc2tpbW1pbmcgdGhyb3VnaCB0aGUgc2FtcGxlIGRhdGFiYXNlcy4gClRoaXMgaXMganVzdCBvbmUgZXhhbXBsZSBvZiByZWltYnVyc2VkIGJ1dCB1bnByb3ZlbiBjYXJlLiBXZSBuZWVkIG5vdCBvbmx5IHByZXZlbnQgZGlzZWFzZSBidXQgYWxzbyBwcmV2ZW50IHRoZSB3cm9uZyB0eXBlIG9mIGNhcmUuLiAKT24gb2NjYXNpb24sIEkgdGhpbmsgeW91IGRvIG9yIGF0IGxlYXN0IGEgbGFyZ2UgcGVyY2VudGFnZSBvZiB5b3VyIG92ZXJhbGwgd2VpZ2h0IGlzIG9uIHRoZW0uIFRoYXQgd2h5IHlvdSBoYXZlIHBvbGVzIHJhdGVkIGZvciBkaWZmZXJlbnQgbG9hZCB3ZWlnaHRzICAgMTgvMTYvMTQgZGlhbWV0ZXIgQWx1IHR1YmluZyBvbiB0aGUgU2hlcnBhIFhMcyAoYXMgYW4gZXhhbXBsZSkgaXMgb2ZmIHRoZSB0b3Agb2YgbXkgaGVhZCByYXRlZCBmb3IgMTIwa2cgb3Igc29tZXRoaW5nIGxpa2UgdGhhdCB3aGVyZWFzIEJEIEFscGluZSBGTFogcG9sZXMgYXJlIHJhdGVkIGZvciBhIGxvdCBsZXNzIChhbmQgYXJlIGNvcnJlc3BvbmRpbmdseSBtb3JlIGJyZWFrYWJsZSB3aGVuIHVzZWQgbGlrZSB0aGF0KS4gQWxzbyBiZWFyIGluIG1pbmQgaWYgeW91IHJlc3QgYnkgbGVhbmluZyBvbiB0aGUgcG9sZXMsIHRoYXQgZ290IHRvIGJlIGFzIG11Y2ggd2VpZ2h0IGFzIHlvdSBjYW4gZ2V0IG9uIHRoZW0gcmlnaHQgOykKQmVjYXVzZSBkb2dzIGFnZSBkaWZmZXJlbnRseSB0aGFuIHBlb3BsZSwgdGhpcyBhbm51YWwgcGh5c2ljYWwgaXMgY29tcGFyYWJsZSB0byB5b3UgaGF2aW5nIGEgcGh5c2ljYWwgZXhhbSBldmVyeSBmaXZlIG9yIHNpeCB5ZWFycy4gCkFkZGl0aW9uYWxseSwgaXQgd2FzIENhdGhvbGljIHNjaG9vbCwgc28gdGhlcmUgd2VyZSBhIGxvdCBvZiBsYXJnZSBmYW1pbGllcy4gCkhlciBIUCBhbmQgQUMgYXJlIGtpbmRhIGxvdyBiZWNhdXNlIG9mIGJhZCBzdGF0IHJvbGxzLiAKSGUgdXNlZCB0byB0ZWxsIHRoZSBkb2N0b3I6ICJqdXN0IHB1dCBhIGNvdXBsZSBvZiBzdGl0Y2hlcyBpbiBhbmQgSSdsbCBjb21lIGluIGFmdGVyIHRoZSBnYW1lIGFuZCB5b3UgY2FuIGZpbmlzaCB1cCB0aGUgam9iLiIKSSB0aGluayB3aXRoIFBheXRvbiBjb21pbmcgYmFjaywgaXQnbGwgaGVscCBhIGJpdCwgYnV0IEkgd291bGQgdHJ5IGFuZCBtb3ZlIG9uZSBvZiBtYXliZSBHaWFubmlzIG9yIFJhbmRsZSBmb3IgYW5vdGhlciBhc3Npc3QgaGVhdnkgcGxheWVyIGFuZCBqdXN0IHB1bnQgVE8uIFJlYWxseSBmb2N1cyBvbiBkb21pbmF0aW5nIEZnLCByZWJvdW5kcywgc3RvY2tzLCBhbmQgYXNzaXN0cy4gCk9rIHRoZW4uIApZZXAuIGZpbG0gc2Nob29sIGdyYWQuIFRvbGQgcHJldHR5IG11Y2ggdGhlIHNhbWUgdGhpbmcuIERlYWx0IHdpdGggc2V4dWFsIGhhcmFzc21lbnQgZnJvbSBvbmUgb2YgbXkgcHJvZmVzc29ycyB3aG8gd29ya2VkIGluIHRoZSBpbmR1c3RyeSB0b28uIFRoZSByZXN0IG9mIHRoZSBjbGFzcyBub3RpY2VkIGl0IGFsc28gYnV0IHRoZXkgd2VyZSBhbGwgZ3V5cyBhbmQgdGhvdWdoIHRoZXkgdGhvdWdodCBpdCB3YXMgY3JlZXB5IGl0IHdhcyBqdXN0IGxhdWdoZWQgYWJvdXQgYXMgYSBqb2tlLiBBbmQgSSBkaWRuIGRvIGFueXRoaW5nIG9yIHNheSBhbnl0aGluZyB0byBhbnlvbmUgYmVjYXVzZSBqdXN0IHRoZSB3YXkgaXQgaXMga2ljayBteXNlbGYgbG9va2luZyBiYWNrIGZvciBsZXR0aW5nIG15c2VsZiBiZSBjb252aW5jZWQgeW91IGhhZCB0byBwdXQgdXAgd2l0aCB0aGF0IHNoaXQgb3IgeW91IHdlcmVuIGdvbm5hIG1ha2UgaXQKV2VsbCwgSSB3aXNoIHRoaXMgd291bGQgd29yayBmb3IgbWUuIFdpbmRvd3MgNyB3aWxsIG5vdCBhY3RpdmF0ZSBpbiBBdXN0cmFsaWEsIG5vciBkbyBhbnkgTWljcm9zb2Z0IGFjdGl2YXRlIHBob25lIG51bWJlcnMgd29yay4gCkNhbmFkaWFuICJKZW9wYXJkeSEiIGhvc3QgQWxleCBUcmViZWsgYW5ub3VuY2VkIGhlJ3MgYmVlbiBkaWFnbm9zZWQgd2l0aCBhZHZhbmNlZCBwYW5jcmVhdGljIGNhbmNlciBpbiBhIFlvdVR1YmUgdmlkZW8gb24gV2VkbmVzZGF5IHRoYXQgaGFkIGEgcG9zaXRpdmUgdG9uZSBkZXNwaXRlIHRoZSBncmltIHByb2dub3Npcy4KNiBwb2ludHMgIHN1Ym1pdHRlZCAxMyBob3VycyBhZ29NYWtlIHN1cmUgeW91IGtlZXAgYSBoZWFsdGh5IHJlbGF0aW9uc2hpcCB3aXRoIHlvdXIgbGFuZGxvcmQsIEkga25vdyBpdCBpcyBhIGJ1c2luZXNzIHJlbGF0aW9uc2hpcCBhbmQgdGhhdCB0aGUgY3VzdG9tZXIgaXMgc3VwcG9zZSB0byBiZSBraW5nLiBCdXQgdGhleSBjYW4gbWFrZSBsaWZlIGhvcnJpYmxlIGZvciB0ZW5hbnRzIGFuZCB0aGV5IG9mdGVuIGRvLiBUaGV5IGNhbiBiZSBzcGl0ZWZ1bCBhbmQgbGVnYWxseSB5b3UgY2FuIG5vdCBkbyBtdWNoIGFib3V0IGl0LCBJIGhhdmUgaGVhcmQgbWFueSBob3Jyb3Igc3RvcmllcyB3aGVuIHRoZSByZWxhdGlvbnNoaXAgaXMgbm90IHRoZXJlLklmIHRoZSBpbnRlcm5ldCBwYXJ0IG9mIHlvdXIgbGVhc2UsIHlvdSBjYW4gdGFsayBhYm91dCBzaGFyZWQgY29zdC4gCkFuZCB3ZSBjYW4gZ2V0IHRoYXQgbW9uZXkgYmFjay4gSXQgYmVlbiBzcGVudCwgdGhlIHNjaG9vbHMgYW5kIGVudmlyb25tZW50IGFuZCBpbmZyYXN0cnVjdHVyZSBoYXZlIGJlZW4gZGVzdHJveWVkLCBhbmQgd2UgbGVmdCB3aXRoIHRoZSByZXN1bHRzIG9mIGZpZnR5IHllYXJzIG9mIG1vc3Qgb2Ygb3VyIHRheCBkb2xsYXJzIGJlaW5nIHNwZW5kIG9uIHdhciwgbm90IHBlb3BsZS4uIApJIGFtIHdhbGtpbmcgYmVoaW5kIHRoZSBkZW1vbiB3aG8gdXNlZCB0byBoYXVudCBteSBjZWxsLiAKQm90aCBwbGF5ZXJzIG11c3QgaGF2ZSBwb2NrZXQgcGFpcnMuIApDZWRhcldvbGYgIDY5IHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ28KVW5kZXIgYSBwbGVhIGRlYWwsIGEgImZpcnN0IGRlZ3JlZSBtdXJkZXIiIGNoYXJnZSB3YXMgd2F0ZXJlZCBkb3duIHRvIHRoZSBsZXNzZXIgY3JpbWUgb2YgInNlY29uZCBkZWdyZWUgbXVyZGVyIGluIHRoZSBoZWF0IG9mIHBhc3Npb24iLiBCZWJiIEpvbmVzIHBsZWFkZWQgZ3VpbHR5LiBQcm9zZWN1dG9ycyBhY2NlcHRlZCBoaXMgdmVyc2lvbiBvZiBldmVudHM6ICJUaGV5IGhhZCBhbiBhcmd1bWVudCBhbmQgYmFzaWNhbGx5IGhlIGhpdCBoZXIgYW5kIHNoZSBlbmRlZCB1cCBkeWluZy4iCkJlY2F1c2UgRUYncyBzaXR0aW5nIG9uIG1vcmUgdGhhbiAyMCBwZXJjZW50IG9mIHRoZSBuZWFyYnkgbGFuZCwgdGhyZWUgcXVhcnRlcnMgb2YgdGhlIGNvdW5jaWwgICBvciAxMiBtZW1iZXJzICAgbmVlZGVkIHRvIGFwcHJvdmUgdGhlIFRleGFzIENhcmQgSG91c2UncyBhcHBsaWNhdGlvbiBmb3IgYSBzcGVjaWZpYyB1c2UgcGVybWl0LCBzaW5jZSB0aGUgc2hvcHBpbmcgY2VudGVyIGlzbid0IHpvbmVkIGZvciBjb21tZXJjaWFsIGFtdXNlbWVudC4gQnV0IHdpdGggdGhlIG1heW9yIG91dCBvZiB0b3duLCBvbmx5IGVpZ2h0IHNpZ25lZCBvZmYsIGV2ZW4gYWZ0ZXIgTm9ydGggRGFsbGFzIGNvdW5jaWwgbWVtYmVyIExlZSBLbGVpbm1hbiBpbnNpc3RlZCBpdCB3YXMgbGVnYWwgc2luY2UgdGhlIGhvdXNlIGlzbid0IHRha2luZyBhIHJha2UuLiAKVGhleSB0aGVuIGxvYWQgdXAgb24gdGhlaXIgbW90b3JjeWNsZXMgYW5kIGRyaXZlIHRvIHRoZSBuZXh0IGxvY2F0aW9uIHdoZXJlIHRoZXkgcmVjZWl2ZSB0aGVpciBuZXh0IGNhcmQuLiAKUHJldmVudGluZyBjaGlsZCBzZXggdHJhZmZpY2tpbmcgaXMgdGhlIGludGVyZmFpdGggZ3JvdXAncyBsYXRlc3QgZm9jdXMsIHNhaWQgdGhlIFJldi4gRGVubmlzIEh1dHNvbiBvZiBBZHZlbnQgVW5pdGVkIE1ldGhvZGlzdCBDaHVyY2gsIHdobyBpcyBvbiB0aGUgZ3JvdXAncyBib2FyZCBvZiBkaXJlY3RvcnMuIFRoZSBpbnRlcmZhaXRoIGdyb3VwIG1lZXRzIG1vbnRobHkgdG8gZGlzY3VzcyB2YXJpb3VzIGlzc3VlcyBwbGFndWluZyB0aGUgY29tbXVuaXR5LgpUd28gdGhhdCBhcHBlYXJlZCB0byBiZSBDaGllZnMgd2UgaGFkIG9uIGJvYXJkLCB0b2dldGhlciB3aXRoIHNldmVyYWwgb3RoZXJzLCBmb3IgaXQgd2FzIGEgaGFyZCBtYXR0ZXIgdG8ga2VlcCB0aGVtIG91dCBvZiB0aGUgU2hpcCwgYXMgdGhleSBDbGltYiBsaWtlIE11bmtleXM7IGJ1dCBpdCB3YXMgc3RpbGwgaGFyZGVyIHRvIGtlZXAgdGhlbSBmcm9tIFN0ZWFsaW5nIGJ1dCBldmVyeXRoaW5nIHRoYXQgY2FtZSB3aXRoaW4gdGhlaXIgcmVhY2g7IGluIHRoaXMgdGhleSBhcmUgUHJvZGlnaW91cyBFeHBlcnQuIEkgbWFkZSBlYWNoIG9mIHRoZXNlIHR3byBDaGllZnMgYSBwcmVzZW50IG9mIGEgSGF0Y2hldCwgdGhpbmdzIHRoYXQgdGhleSBzZWVtZWQgbW9zdGx5IHRvIHZhbHVlLiAKUG9rZXIgbWFjaGluZXMgYWZmZWN0IHRoZSBicmFpbidzIGRvcGFtaW5lIG1ha2luZyBhYmlsaXRpZXMgZGlmZmVyZW50bHkgZnJvbSBhbnkgb3RoZXIgZ2FtYmxpbmcgZm9ybS4gCkV4cGVydG8gZW4gc2VndXJpZGFkIGRlbCBDYXNpbm8gQm9yZ2F0YSB1c2FiYSBsYXMgY21hcmFzIHBhcmEgdmVyIGxhcyBjYXJ0YXMgZGUgc3VzY29tcGFlcm9zIGRlIG1lc2EKSSBkb3VidCBldmVuIHRoZSB1cHBlciBjbGFzcyBsaXZpbmcgaGVyZSBhcmUgcHJlcGFyZWQgZm9yIDEwIGRheXMgd2l0aG91dCBzdXBwbGllcy4uIApUaGV5IGFyZSBpbnRlcmVzdGVkIGluIHB1bmlzaG1lbnQgYW5kIGhhdmluZyBhIHNjYXBlZ29hdC4gCkhlIGVucmljaGVkIG91ciBsaXZlcyBldmVyeWRheS4gVG9ueSwgdGhhdCBzbWlsZSBvZiB5b3VycyB3aWxsIGFsd2F5cyBiZSB3aXRoIHVzLiBIYWxsZWp0bmEgbGFtcGEgc3RhbXBhIS4gCkhpcyBzdHJhdGVneSBpcyB0byByYWlzZSBhIG5hcnJvdyByYW5nZSBvZiAxMHMrIGFuZCBBUXMrLiAKTWNNdWxsaW4gc2FpZCBwcmUgc2FsZSBjb250cmFjdCBhc3NpZ25tZW50cyBhcmUgdmVyeSBzbWFsbCBwZXJjZW50YWdlIG9mIG92ZXJhbGwgc2FsZXMgYW5kIGluIGFkZGl0aW9uIGJlaW5nIGRvbmUgZm9yIHByb2ZpdCBjYW4gYmUgYmVjYXVzZSBvZiBjaGFuZ2luZyBsaWZlIGNpcmN1bXN0YW5jZXMgZHVyaW5nIGNvbnN0cnVjdGlvbiwgc3VjaCBhcyBtYXJyaWFnZSwgc2VwYXJhdGlvbiBvciBjaGlsZHJlbi4KRXNjb3J0IHNlcnZpY2UsIGluIE5vcnRoIFBsYXR0ZSwgTkUKUGluIHByaWNrcyBhcmUgbGVzcyBjb21tb24gdGhhbiBjdXR0aW5nIGJ1dCB0aGUgZGVncmVlIG9mIGN1dHRpbmcgaXMgaGlnaGx5IHZhcmlhYmxlLiBoYXJkIG51bWJlcnMgYXJlIGRpZmZpY3VsdCB0byBnZXQgYXMgYWxtb3N0IGFsbCByZXNlYXJjaCBkZXBlbmRzIG9uIHNlbGYgcmVwb3J0aW5nIGFuZCB3b21lbiB3aG8gaGF2ZSBiZWVuIG11dGlsYXRlZCBhcmUgb2Z0ZW4gc28gdW5lZHVjYXRlZCB0aGF0IHRoZXkgZG9uIHVuZGVyc3RhbmQgdGhlaXIgb3duIGJvZGllcyB3ZWxsIGVub3VnaCB0byBleHBsYWluIGV4YWN0bHkgd2hhdCBoYXBwZW5lZCB0byB0aGVtLgoxMikgSnVzdCBiZWNhdXNlIHBhaW4gcmFkaWF0ZXMgZG9lcyBub3QgbWVhbiBpdCBpcyByYWRpY3VsYXIgaW4gb3JpZ2luLgpBLiBGb3IgbWFueSB5ZWFycyBub3csIEkndmUgd2F0ZXJlZCBmbGF0cyB0aGF0IGhhdmUgYmVlbiBmaWxsZWQgd2l0aCBzZWVkaW5nIG1peCBhbmQgYXJlIGFib3V0IHRvIGJlIHNlZWRlZCB3aXRoIHRoZSBob3R0ZXN0IHdhdGVyIHRoYXQgY29tZXMgZnJvbSBteSBraXRjaGVuIHNpbmsgdGFwLCBtaXhlZCB3aXRoIGEgbGl0dGxlIGxpcXVpZCBzZWF3ZWVkIGZlcnRpbGl6ZXIgICBhcm91bmQgb25lIHRlYXNwb29uIGluIGVhY2ggbGl0cmUgb2Ygd2F0ZXIuIApXZSBmb2N1c2VkIGFkZGl0aW9uYWwgYW5hbHlzaXMgb24gUENCcywgZGlveGlucywgdG94YXBoZW5lLCBhbmQgZGllbGRyaW4uCjUuIApJdHMganVzdCB3aXRoIGxpZ2h0ZW5pbmcgbXkgbG9hZCBhbmQgaW4gdGhlIHByb2Nlc3Mgb2YgZ29pbmcgVUwgaXZlIGNvbWUgdG8gaGF2ZSBhIGxvdmUgaGF0ZSByZWxhdGlvbnNoaXAgd2l0aCBteSBSYXRpbyAxNS4gVGhlIDMwIGlzIGNvbWZvcnQgcmF0ZWQgdG8gMzkuIDggb3ogb2YgZG93biBpcyBnb2luZyB0byBrZWVwIHlvdSBjb25zaWRlcmFibHkgd2FybWVyIHRoYW4gOC45IG96IHJhaW4gcGFudHMuIApUaGUgdW5pb24gZ2l2ZXMgdGhlIHVuaW9uIGNvbnRyYWN0b3Igc29tZSBtb25leSwgYWxsb3dpbmcgdGhlIGNvbnRyYWN0b3IgdG8gc3VibWl0IGEgbG93ZXIgYmlkIHRvIHRoZSBjdXN0b21lciBhbmQgd2luIHRoZSB3b3JrLCBib3RoIGZvciB0aGUgdW5pb24gY29udHJhY3RvciBhbmQgaXRzIHVuaW9uIGVtcGxveWVlcy4uIApEaWFsIHVwIG5ldHdvcmtpbmcgd2FzIGEgcGFpbiBpbiB0aGUgYXNzIHRvIGdldCB3b3JraW5nIG9uIDk1LCBhbmQgcGxheWluZyBNVURzIHdhcyBpZmZ5IGF0IGJlc3QgKFRlbGl4IHdhcyBteSBnbyB0byBET1MgcHJvZ3JhbSBmb3IgbG9jYWwgQkJTcyBhbmQgbXVkZGluZykuIApQbGVhc2Ugbm90ZTogQW55IGNvbW1lbnRzIGFib3V0IHRoZSBFZGl0ZWQgR3VpZGUgc2hvdWxkIGNvbnRpbnVlIHRvIGJlIHBvc3RlZCB0byB0aGUgRWRpdG9yaWFsIEZlZWRiYWNrIGZvcnVtIGFuZCBub3QgaGVyZS4gClRoZSB3aG9sZSB0aGluZyB3aXRoIFJveGFzIGFuZCBOYW1pbmUgaXMgdGhhdCB0aGV5IGRpZCBwdXQgdGhlaXIgImRhdGEiIGludG8gYSB2ZXNzZWwvZHVtbXkuIFRocm91Z2ggRXZlbiwgdGhleSBmb3VuZCBhIHdheSB0byByZXN0b3JlIHRoZWlyIG1lbW9yaWVzIGludG8gZHVtbWllcy4gUm94YXMgZmFsbGluZyBmcm9tIHRoZSBza3kgd2FzIGEgZGVsaXZlcnkuIApUaGUgc291bmRzIG9mIHRoZSBtYWNoaW5lcyBhbGwgY2xhbmdpbmcgb3V0IHRoZSB3aW5zIG9mIHRoZSBwbGF5ZXJzIGlzIHBhcnQgb2YgdGhlIGFtYmlhbmNlLiAKSXRzIGZhciBtb3JlIGxpa2VseSB0aGF0IFlHIGlzIGJlaGluZCBoaW0gYW5kIHRoYXQgU2V1bmdyaSBpcyB3b3JraW5nIHdpdGggWUcgYXNzb2NpYXRlcy4uIApHaXZlIHRoZW0gdGhlaXIgc2hpdCBvbiBtZSBhbmQga2ljayB0aGVtIHRoZSBmdWNrIG91dC4nLiAKSG9uZXN0bHksIEkgd2FzIHJlbGlldmVkLiBBcyBhIHQyIEkgYmxhbWVkIG15c2VsZiwgYnV0IGFzIGEgdDEgSSB3YXMganVzdCBnZW5ldGljYWxseSB1bmx1Y2t5LiAKNDozOSAuIE1hbGF5IFNtYSBwbGF5aW5nIHB1c3N5IG1lbWVrIGZpbmdlcmluZyBjZXdlayBhYmcgY2FudGlrIC4gCkkgbm90IGFuIGV4cGVydCB0aG91Z2ggYW5kIHdvdWxkIGhhdmUgdG8gY2hlY2sgcmV2aWV3cyBvbmxpbmUgcGVyIGxhcHRvcCB0byBzZWUgaG93IHRoZWlyIGNvb2xpbmcgaXMgcmF0ZWQuIE1TSSBsYXB0b3BzIHVzdWFsbHkgY29tZSB3aXRoIGEgdHVyYm8gZmFuIG1vZGUgdGhvdWdoLCBpdCBhIGJ1dHRvbiBvbiB0aGUgbGFwdG9wIHlvdSBqdXN0IGhhdmUgdG8gcHJlc3MuIApUaGV5IGRpZG4ndCBoYXZlIGFjY2VzcyB0byB0aGUgc2FtZSBiYW5raW5nIGNyZWRpdCBzeXN0ZW1zIHRvIGdldCBidXNpbmVzcyBsb2FucywgdGhleSBkaWRuJ3QgaGF2ZSBhY2Nlc3MgdG8gd29yayB0aGUgc2FtZSBqb2JzIGFzIHdoaXRlIHBlb3BsZS4gCkhlIHRyaWVkIGFnYWluIGFuZCBhcyB1c3VhbCB0aGUgc2NvcnBpb24gc3R1bmcgaGltLiBBIHBhc3NlciBieSBzYXcgdGhpcyBhbmQgc2FpZCwgIndoeSBkbyB5b3UgYm90aGVyIHRyeWluZyB0byBoZWxwIHRoYXQgc2NvcnBpb24sIGhlIGp1c3Qga2VlcHMgc3RpbmdpbmcgeW91ISIuIApUaGF0IHNhaWQsIGFzIG11Y2ggYXMgSSBsb3ZlIHRvIGdyaXBlIGFuZCBmdXNzIGFib3V0IHRoZSBkZWNpc2lvbnMgbWFkZSBhbmQgbW9jayB0aGUgZGV2IHRlYW0sIG15IGhlYXJ0IGRlZmluaXRlbHkgZ29lcyBvdXQgdG8gdGhlbS4gSWYgdGhleSBjaG9vc2UgdG8gcmVtYWluIHdvcmtpbmcgdGhlcmUgKGFzc3VtaW5nIHRoZXkgZXZlbiBoYXZlIHRoYXQgb3B0aW9uKSwgSSBzdXJlIHRoZWlyIHdvcmtpbmcgY29uZGl0aW9ucyBoYXZlIGdvbmUgZG93biAob3Igd2lsbCBzb29uIGdvIGRvd24pIHRoZSB0b2lsZXQuIApZb3VyIHByb2JsZW0gaXMgY29udmluY2luZyBoaWdoIHNjaG9vbCBnaXJscyB0aGF0IHRoZXkgZXZlbiB3YW50IHRvIGRvIHRoaXMuCkl0J3MgY29tbW9uIHNlbnNlLiAKSEVZISBXaGF0IGhhcHBlbmVkIHRvIHRoZSBQZWFjaGZyb250IENvbnVyZSBGaWxlcz8gVGhlIHdvcmxkJ3Mgb25seSBPRkZJQ0lBTCBQZWFjaGZyb250IENvbnVyZSBzaXRlIG5vdyBmZWF0dXJlcyBmcmVlIHBlYWNoZnJvbnQgY29udXJlIGNvdmVyYWdlLCBpbmNsdWRpbmcKRnVuZHJhaXNpbmc6IE5vIGZ1bmRyYWlzaW5nLCBwbGVhc2UuIFRoaXMgaW5jbHVkZXMgYm90aCBhc2tpbmcgYW5kIG9mZmVyaW5nIGFzc2lzdGFuY2UuIFNvIEkgZGVjaWRlZCB0byBnZXQgYSBuZWNrIG1hc3NhZ2UuIEluIHRoZSBzaG9wcGluZyBjZW50cmUgSSB3YWxrZWQgcGFzdCBhIG1hc3NhZ2Ugc2hvcCB3aXRoIGEgd29tYW4gb3V0IHRoZSBmcm9udCAoSSBkb24gbGlrZSBnZXR0aW5nIG1hc3NhZ2VzIGZyb20gbWVuKS4gSSB0b2xkIGhlciB3aGF0IEkgd2FudGVkIGFuZCBzaGUgcHV0IG1lIGluIHRoZSByb29tIGFuZCB0b2xkIG1lIHRvIGxpZSBkb3duLiBBZnRlciBhIGZldyBtaW51dGVzIHNvbWVvbmUgY2FtZSBpbiBhbmQgSSByZWFsaXplZCBpdCB3YXMgYSBtYW4uIEkgd2FzIHVuY29tZm9ydGFibGUgYnV0IEkgd2FzIGxpa2Ugb2ggd2VsbCB0byBsYXRlIG5vdy4KQWxzbywgZXZlbiBpZiBpdCB3YXMganVzdCBhYm91dCBoaW0gaGl0dGluZyBvbiBoZXIsIGFuZCBldmVuIGlmIHdhcyBhIGdheSBndXkgaGl0dGluZyBvbiBhIHlvdW5nIG1hbiwgdGhhdCBzdGlsbCBzZXhpc3QgaW4gZWl0aGVyIGRpcmVjdGlvbi4gSXQgdHJlYXRpbmcgYSBwZXJzb24gZGlmZmVyZW50bHkgb24gdGhlIGJhc2lzIG9mIHRoZWlyIHNleC4gCkRvdWcgQnVyZ295bmUgRnJvZ2JveCBjYW1lIGFib3V0IGZyb20gYSBicmlsbGlhbnRseSBzaW1wbGUgY29uY2VwdCBwcm92aWRlIGNvbnZlbmllbnQsIGNvc3QgZWZmZWN0aXZlIGFuZCBlbnZpcm9ubWVudGFsbHkgZnJpZW5kbHkgcGxhc3RpYyBtb3ZpbmcgYm94ZXMgYXMgYW4gYWx0ZXJuYXRpdmUgdG8gY2FyZGJvYXJkLiBGb2N1c2VkIG9uIHByb3RlY3RpbmcgdGhlIGVudmlyb25tZW50IGFuZCByZWxpZXZpbmcgc3RyZXNzIGZvciB0aGUgNS41IG1pbGxpb24gQ2FuYWRpYW5zIHdobyBtb3ZlIGVhY2ggeWVhciwgRnJvZ2JveCBoYWQgYWxyZWFkeSBhdHRyYWN0ZWQgYSBwaWVjZSBvZiB0aGUgYmlsbGlvbiBkb2xsYXIgbWFya2V0IGJlZm9yZSBnb2luZyBvbiBEcmFnb24gRGVuLiBJdCB3YXMgYWxzbyBoYW5kcyBkb3duIG9uZSBvZiB0aGUgbW9zdCBzb3VuZCBhbmQgd2VsbCBzdHJ1Y3R1cmVkIGNvbXBhbmllcyB0byBiZSBwaXRjaGVkIG9uIHRoZSBzaG93LiAKSmUgbiBwYXMgYnJveWVyIGRldXggb3UgdHJvaXMgZGUgY2VzIGh5bW5vcHRyZXMgZGFucyBtb24gbW9ydGllciBwb3VyIHNhdm9pciBkZSBxdW9pIGlsIHJldG91cm5lLCBwZXV0IHRyZSBkZSBjZXQgYWNpZGUgZm9ybWlxdWUgKG91IG10aGFub3F1ZSkgZG9udCBvbiBkb25uZSBsIGNvbW1lIHBudHJhbnRlLiBQbnRyYW50ZS4gCkNvbnRpbnVlIHRvIGluY3JlYXNlIHRoZSBkaXN0YW5jZSBhbmQgcmVkdWNpbmcgeW91ciByZWNvdmVyIHRpbWVzIGluIDQgd2VlayBzZXNzaW9ucy5BcyB5b3UgZ2V0IGJldHRlciwgeW91IGZpbmQgdGhhdCB5b3VyIHJlY292ZXJ5IHRha2VzIGxlc3MgdGltZSBhbmQgeW91IG5vdCBhcyB0aXJlZCBmcm9tIHRoZSBkaXN0YW5jZS5TZWUgYWJvdXQgcGFjaW5nIHlvdXJzZWxmIGZvciB0aGUgZnVsbCAxNTAwbSBvbmNlIGV2ZXJ5IDIgd2Vla3MuIApJdCBhYm91dCB0aGVpciBsb3ZlIG9mIHRoYXQgc3R1ZmYgYW5kIGhvdyBleHRyZW1lbHkgYXR0YWNoZWQgdGhleSBhcmUgdG8gaXQgYW5kIHRoZWlyIHJlZnVzYWwgdG8gY29tcHJvbWlzZSBvbiBpdC4gClRoZXNlIGluY2x1ZGUgdGhlIGNlbnRlciBvZiB0aGUgYnJlYXN0Ym9uZSBhbmQgdGhlIHByb3RydWRpbmcgYm9uZSBvbiB0aGUgaW5zaWRlIG9mIHRoZSBhbmtsZS4gCktpcnN0ZW4gRHVuc3QgTG92ZXMgVGhpcyBTTkwgVGhpbmc6IFNoZSB0ZWxscyBtZSBzaGUgdG90YWxseSBpbnRvIGhvc3RpbmcgYWdhaW4sIGhhZCBhIGJsYXN0IGRvaW5nIGl0IGluIHRoZSBwYXN0IGFuZCB3YXMgZXZlbiBhbiBleHRyYSB3aGVuIHNoZSB3YXMgYSBraWQuIER1bnN0IHdvbiBiZSBhYmxlIHRvIGRvIGl0IGZvciBTcGlkZXkgMywgdGhvdWdoLCBhcyBpdCBvcGVucyB3aGVuIFNOTCBnb2VzIGRhcmsgZm9yIHRoZSBzdW1tZXIuIApUaGlzIGNvdWxkIHN0aWxsIGZ1bmN0aW9uIGFzIGEgc3lzdGVtLCBidXQgaXQganVzdCBub3QgaG93IE5pbnRlbmRvIGRlY2lkZWQgdG8gZG8gaXQgZHVlIHRvIHRoZSBwcm9zIGFuZCBjb25zLi4gCkJ1dCwgR29kIGlzIGluIGNvbnRyb2wgb2YgbmF0dXJlLiBEaWQgR29kIGNvbnZleWVkIGEgbWVzc2FnZSB0byB0aGUgTmF0aW9uIG9mIFVuaXRlZCBTdGF0ZXMuIApMaW1waW5nIGluIHN0cm9uZyBoYW5kcwpUaGUgY29vbGVzdCBmZWVsaW5nIG9mIG15IGxpZmUgdG8gY29tZSBiYWNrIGFuZCBnZXQgcmVkZW1wdGlvbiwgTWFydGluIHRvbGQgUG9zdG1lZGlhIE5ldHdvcmsganVzdCBtb21lbnRzIGFmdGVyIGhpcyBpbXByZXNzaXZlIHdpbi4gTWVhbnMgZXZlcnl0aGluZyB0byBtZS4gClRoYXQgaW5jbHVkZXMgU2hhZG93IENvbXBsZXg6IFJlbWFzdGVyZWQsIGEgZ2FtZSBtYWRlIGJ5IEVwaWMuIApJdHMgZ2VuZXJhbGx5IHNvbWV0aGluZyB0aGF0IHN0YW5kcyBvdXQgdG8gdGhvc2Ugd2hvIHdlYXIgY2VydGFpbiBraW5kcyBvZiBjbG90aGluZyBhcyBhIG1hdHRlciBvZiBjb3Vyc2UgdnMgdGhvc2Ugd2hvIGRvIG5vdCwgc28gSSBzdWdnZXN0ZWQgaGUgbm90IGJ1dHRvbiB0aGF0IGJ1dHRvbiBiZWNhdXNlIGl0IHN0YW5kcyBvdXQuLiAKQmVoYXZpb3JhbC4gCkJhcmZpbmcgaW4gTGFib3IgUGlzdGlsIFBpbmsgTXIuIFdpbmtsZSBPdXIgRmFtaWx5IEJlZCBOb24gQmlvIFRhbmRlbSBOdXJzaW5nIENlc2FyZWFuIEhlYWQgUHJlc3N1cmUgVm9sbGV5YmFsbCBTdW5zZXQgT24gdGhlIEJlYWNoIEkgVGhyZWFkIE15IFdheS4gSG9tZSBWaXNpdHMgUmVkIEZhY2VkIEVtYmFycmFzc21lbnQgMzAgRGF5cyBUb25pZ2h0ISBPcGVuIExldHRlciB0byBVQ2VycyBXaHkgSSBXcml0ZSAocmV2aXNpdGVkKSBOaXRwaWNraW5nIChVQyBUYWxrKSBXaGF0IERvIFlvdSBHZXQgZm9yIFlvdXIgTW9uZXkgV2hlbiBZb3UgQnV5IHRoZSBIb3NwaXRhbCBUaWNrZXQuIApKdXN0IC4gCkJvdGggY29sb3JzIGNhbiBiZSBkcmVzc2VkIHVwIG9yIGRyZXNzZWQgZG93biBkZXBlbmRpbmcgb24gdGhlIG9jY2FzaW9uLiBCb3RoIGNvbG9ycyB3aWxsIGFsc28gZ28gd2l0aCBicm93biBhbmQgYmxhY2sgc2hvZXMuIApBa3VtYTI1NCAgMyBwb2ludHMgIHN1Ym1pdHRlZCA3IGRheXMgYWdvCkF1ZGllbmNlcyBoYXZlIHNlZW1pbmdseSBoZWVkZWQgaGlzIHdvcmRzLCB3aXRoIG9ubHkgbGltaXRlZCB0aWNrZXRzIGZvciB0aGUgc2hvdyByZW1haW5pbmcuIFRoZSBtb3JuaW5nIHdpbGwga2ljayBvZmYgd2l0aCBhIHlvZ2Egc2Vzc2lvbiwgZm9sbG93ZWQgYnkgYSB0b3VyIG9mIHRoZSBkaXN0aWxsZXJ5IGFuZCBhIGNvY2t0YWlsIHRhc3RpbmcsIGFuZCBjb25jbHVkaW5nIHdpdGggYSBoZWFydHksIGZhbWlseSBzdHlsZSBicnVuY2ggb2Ygc2FsbW9uIGJhZ2Vscywga2FsZSBhbmQgcXVpbm9hIGZyaXR0YXRhcywgYW5kIG90aGVyIG1vcm5pbmcgdGltZSBzbmFja3MuLiAKTGlrZSB0aGV5IHdlcmUgdHJ5aW5nIHRvIGJlIHZlcnkgcm9jayByb2xsIGNvb2wsIGJ1dCBqdXN0IG1hbmFnZWQgdG8gc2VlbSB1bmludGVyZXN0ZWQuLiAKVGhlIDIwMTQgcmVwb3J0IHNob3dzIHRoZSBmb3VuZGF0aW9uIGhhZCBwcmV2aW91c2x5IHBhaWQgJDQ0LDAwMCBpbiByZW50IHRvIGFuIGVudGl0eSByZWxhdGVkIHRvIG9uZSBvZiB0aGUgZGlyZWN0b3JzIG9mIHRoZSBmb3VuZGF0aW9uLCBhbHRob3VnaCBpdCBkaWQgbm90IHByb3ZpZGUgaWRlbnRpZnlpbmcgaW5mb3JtYXRpb24gYWJvdXQgdGhlIHBhcnRpZXMuIER1cmluZyB0aGF0IHBlcmlvZCwgdGhlIGZvdW5kYXRpb24gaGFkIGJlZW4gaW4gb2ZmaWNlcyBhdCBFdGloYWQgU3RhZGl1bS4uIApJIHJlYWxseSB3YW50ZWQgQmV0byB0byB3aW4sIGJ1dCB0aGUgZmFjdCB0aGF0IHRoZSByYWNlIHdhcyBhcyBjbG9zZSBhcyBpdCB3YXMgaXMgaW5jcmVkaWJsZS4gVGV4YXMgaGFzbiBlbGVjdGVkIGEgRGVtb2NyYXQgdG8gU2VuYXRlIHNpbmNlIDE5ODguIApXZW50IHRvIGEgbW92aWUgYSB3ZWVrIGFnbyBhbmQgb3V0IG9mIHRoZSA0MCBwZW9wbGUgdGhlcmUsIG5vYm9keSBsaWZ0ZWQgYSBmaW5nZXIgd2hlbiB0aGUgc2NyZWVuIHdlbnQgYmxhY2sgZm9yIDEwIG1pbnV0ZXMgYnV0IHRoZSBlbnRpcmUgdGhlYXRlciB3YXMgY29tcGxhaW5pbmcgYWJvdXQgInRpbWUgdGhpcyIgYW5kICJ0aW1lIHRoYXQiLiBJIHdhcyBjdXJpb3VzIHRvIHNlZSBpZiBzb21lb25lIGVsc2Ugd291bGQgc3RlcCB1cCBhbmQgZG8gc29tZXRoaW5nIGFib3V0IGl0LCBidXQgSSBlbmRlZCB1cCBnZXR0aW5nIGltcGF0aWVudCBhbmQgZmlndXJlZCBpdCBvdXQuIApMT0whIEkganVzdCBkb24ndCB0aGluayBwZW9wbGUgb3V0c2lkZSB0aGUgTWlkd2VzdCB1bmRlcnN0YW5kIGl0IHdhcyBkZWFkbHkgY29sZCBvdXQgd2hlbiBhbGwgdGhpcyB3YXMgc3VwcG9zZWQgdG8gaGF2ZSBoYXBwZW5lZC4gCldlcmUgcHJvYmFibHkgb25lIG9mIHRoZSBsYXJnZXN0IGRlYnQgaG9sZGVycyBhZnRlciB0aGUgYmFuay4gCkR1cmluZyBlYWNoIHJvdW5kLCBtb3ZlIGFsbCBmb2xkZWQgY2FyZHMgaW50byBhICJtdWNrIHBpbGUiIHVuZGVyIHRoZSBoYW5kIGluIHdoaWNoIHlvdSBob2xkIHRoZSBkZWNrICh0aGUgInN0dWIiKS4gCkFiZXIgZGllIFNQRCB3aXJkIGRhcyBiZWkgZGVyIG5jaHN0ZW4gQnVuZGVzdGFnc3dhaGwgc3ByZW4sIHVuZCBkaWUgaXN0IGphIG5pY2h0IG1laHIgbGFuZ2UgaGluLiBEYSB3aXJkIGRpZSBVcmhlYmVycmVjaHRzcmVmb3JtIG5hdHJsaWNoIG5pY2h0IGVudHNjaGVpZGVuZCBzZWluLCBhYmVyIHNpZSB3aXJkIGVpbmVuIGFsbGdlbWVpbmVuIEFudGVpbCBhbiBkZW4gc2lua2VuZGVuIEVyZ2Vibmlzc2VuIHZvbiBTUEQgdW5kIENEVSBoYWJlbi4gClRoZSByZXN0YXVyYW50IGxvbmcgc2VydmluZyB3YWl0ZXIsIG1vc3QgYXBwcm9wcmlhdGVseSBuYW1lZCBNdWdzeSwgYmVjb21lcyB0aGUgbW9zdCBleWUgY2F0Y2hpbmcgY2hhcmFjdGVyLiBUaGUgc3Rha2VzIGFyZSBoaWdoIGZvciBoaW0gYmVjYXVzZSBoZSB3YW50cyB0byByYWlzZSBtb25leSB0byBvcGVuIGhpcyBvd24gZWF0ZXJ5IGluIHNvbWUgZm9ybWVyIHB1YmxpYyBjb252ZW5pZW5jZXMgKG5vdyB0aGVyZSBhbiBpZGVhLCBPeGZvcmQgQ2l0eSBDb3VuY2lsLCBmb3IgdGhlIHJlZHVuZGFudCBzdWJ0ZXJyYW5lYW4gZ2VudHMgaW4gU3QgR2lsZXMpLiBJbiBhIHZpdmlkIHBlcmZvcm1hbmNlLCBDYXJ5IENyYW5rc29uIHByZXNlbnRzIE11Z3N5IGFzIGEgd29uZGVyZnVsbHkgbWFuaWMgY2hhcmFjdGVyLCB3aG9zZSB3aG9sZSBwZXJzb25hbGl0eSBzZWVtcyB0byBleHBsb2RlIGFzIGhlIGNoYW5nZXMgZnJvbSB3YWl0ZXIgYmxhY2sgYXR0aXJlIHRvIGEgdHJvcGljYWwgVCBzaGlydCBmb3IgdGhlIHBva2VyIGdhbWUuLiAKTGVzIGZpYnJlcyBhbGltZW50YWlyZXMsIGVuIHBhcnRpY3VsaWVyIGxlcyBmaWJyZXMgc29sdWJsZXMgcHJzZW50ZXMgZGFucyBsZXMgbGd1bWluZXVzZXMsIGxlcyBmcnVpdHMgZXQgbGVzIGxndW1lcyBwZXJtZXR0ZW50IGRlIHJkdWlyZSBlZmZpY2FjZW1lbnQgbGUgdGF1eCBkZSBjaG9sZXN0cm9sLkxpbWl0ZXogdm90cmUgY29uc29tbWF0aW9uIGRlIGdsdWNpZGVzIHJhZmZpbnMgKHN1Y3JlIGV0IGdyYWlucyByYWZmaW5zKSBjYXIgY2VzIGRlcm5pZXJzIHNvbnQgdW4gZmFjdGV1ciBwYXJ0aWN1bGlyZW1lbnQgYWdncmF2YW50IGRhbnMgbGUgZHZlbG9wcGVtZW50IGRlIGwnYXRocm9zY2xyb3NlLCBkZSBsJ2luZmxhbW1hdGlvbiBldCBkZSBsYSByc2lzdGFuY2UgIGwnaW5zdWxpbmUuRmFjdGV1cnMgZGUgcmlzcXVlcyBwb3VyIGxhIHNhbnQgY2FyZGlhcXVlIChhdGhyb3NjbHJvc2UgZW4gcGFydGljdWxpZXIpTGUgdGFiYWdpc21lVW4gdGF1eCBkZSBjaG9sZXN0cm9sIGRhbnMgbGUgc2FuZyB0cm9wIGxldiAoZW4gcGFydGljdWxpZXIgZGUgY2hvbGVzdHJvbCBMREwpID8/VW5lIHRlbnNpb24gYXJ0cmllbGxlIGxldmVMYSByc2lzdGFuY2UgIGwnaW5zdWxpbmVVbmUgaW5zdWZmaXNhbmNlIGRlIGxhIGZvbmN0aW9uIHRoeXJvZGllbm5lVW4gc3RhdHV0IGFudGlveHlkYW50IGZhaWJsZVVuIGZhaWJsZSB0YXV4IGQnYWNpZGUgZ3JhcyBvbWVnYSAzTCdhdWdtZW50YXRpb24gZGUgbGEgZm9ybWF0aW9uIGRlIGZpYnJpbm9nbmVVbiBmYWlibGUgdGF1eCBkZSBtYWduc2l1bSBvdSBwb3Rhc3NpdW1VbiB0YXV4IGxldiBkJ2hvbW9jeXN0aW5lTGVzIGFuYWx5c2VzIGJpb2xvZ2lxdWVzUHJvdGluZSBDIHJhY3RpdmUsIEhiQTFjLCBUU0gsIGlvbm9ncmFtbWUgZXRjLkwnRUFMIChleHBsb3JhdGlvbiBkJ3VuZSBhbm9tYWxpZSBsaXBpZGlxdWUpIGNvbXByZW5kIGxlIGNob2xlc3Ryb2wgdG90YWwsIGxlIGRvc2FnZSBkdSBIREwsIGxlIGNhbGN1bCBkdSBMREwgKG1hdXZhaXMpIGV0IGxlcyB0cmlnbHljcmlkZXMuLiAKQXMgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcsIHdlIGNvbGxlY3QgYW5kIHByb2Nlc3MgaW5mb3JtYXRpb24gYWJvdXQgaW5kaXZpZHVhbHMgaW4gdGhlIEVFQSBvbmx5IHdoZXJlIHdlIGhhdmUgbGVnYWwgYmFzZXMgZm9yIGRvaW5nIHNvLiBPdXIgbGVnYWwgYmFzZXMgZGVwZW5kIG9uIHRoZSBTZXJ2aWNlcyB5b3UgdXNlIGFuZCBob3cgeW91IHVzZSB0aGVtLiBXZSBwcm9jZXNzIHlvdXIgaW5mb3JtYXRpb24gb24gdGhlIGZvbGxvd2luZyBsZWdhbCBiYXNlczoKIldlIGxhdW5jaGVkIENob296bGUgbmVhcmx5IGZpdmUgeWVhcnMgYWdvIGFuZCB0aGUgdGhlc2lzIHdhcywgd2Ugc2F3IGFkIHRlY2hub2xvZ3kgZXZvbHZpbmcgcXVpY2tseSBhbmQgdGhlcmUgd2FzIGEgaHVnZSBwcm9taXNlIHdpdGggZGF0YSBhbmQgcHJvZ3JhbW1hdGljLCBidXQgaXQgd2FzIHN0aWxsIHVuYXR0YWluYWJsZSBmb3IgYSBsb3Qgb2YgY2xpZW50cywiIHNheXMgRmlzY2hlci4gCkluZGVlZCwgZGVtYW5kIGZvciBzcGFya2xpbmcgd2F0ZXIgaW4gQ2FuYWRhIGhhcyBiZWVuIHNhaWQgUm9iZXJ0IENhcnRlciwgYW4gaW5kdXN0cnkgYWR2aXNlciB3aXRoIE5QRCBHcm91cC4gY29uc3VtZXJzIGFyZSBqdXN0IG1vdmluZyBhd2F5IGZyb20gdGhlIGFsY29ob2wgY2F0ZWdvcnksIHRoZXkgbW92aW5nIGF3YXkgZnJvbSB0aGUgY2FyYm9uYXRlZCBzb2Z0IGRyaW5rIGNhdGVnb3J5LCBoZSBzYWlkLgpMaWtlIGEgOTBzIG1vbS4gClNvbWV0aGluZyBub3QgbWFueSBLb3JlYW5zIGV2ZW4ga25vdyBhYm91dCwgaWYgeW91IGdvIHRvIHRoZSBlYXN0IHNpZGUgb2YgdGhlIExvdHRlIHRvd2VyIG9uIHRoZSBncm91bmQgbGV2ZWwgdGhlcmUgaXMgYSBkZXNrIHdoZXJlIHlvdSBjYW4gKGZvciBmcmVlKSBnZXQgYWNjZXNzIHRvIHRoZSAzMXN0IGZsb29yLiBJdCBvbmx5IGFib3V0IGhhbGZ3YXkgdXAsIGJ1dCB0aGVyZSBpcyBhIGZvb2Rjb3VydCB1cCB0aGVyZSB3aXRoIGEgNyAxMSB3aGVyZSB5b3UgY2FuIGRyaW5rIGNoZWFwIGNhbm5lZCBiZWVycyBhbmQgb3JkZXIgc29tZSBtb2RlcmF0ZWx5IHByaWNlZCBmb29kIGFuZCBnZXQgYSBncmVhdCB2aWV3IG9mIHRoZSBjaXR5LiAKU2NyZXcgdGhhdC4gCkxhIEJpYmxlIGVzdCBzZW1ibGFibGUgOiBsJ2hpc3RvaXJlIGQnSXNyYWwgZXN0IGVsbGUgZXhhY3RlID8gTm9uLiBMJ2hpc3RvaXJlIGVzdCBlbGxlIGZhdXNzZSA/IE5vbiBwbHVzLCBtbWUgcydpbCBlc3QgZGlmZmljaWxlIGQndGFibGlyIGxhIHBhcnQgZHUgcmVsIGV0IGNlbGxlIGRlIGwnaW50ZXJwcnQgZW1iZWxsaSwgJydwYXJhYm9saXMnJy4gQydlc3QgY2V0dGUgInBhcmFib2xpc2F0aW9uIiBxdWkgcGVybWV0IGF1c3NpIGRlIHBhc3NlciBkdSBwYXJ0aWN1bGllciAgbCd1bml2ZXJzZWwuIEwnaGlzdG9pcmUgYWxvcnMgZXN0IGVsbGUgdnJhaWUgPyBPdWksIGRhbnMgbGEgbWVzdXJlIG8gZWxsZSByZXRyYWNlIGwnaGlzdG9pcmUgZCd1biBwZXVwbGUsIHRlbGxlIHF1J2lsIGwnYSBjb21wcmlzZSBlbiByZWxhdGlvbiBzaW5ndWxpcmUgYXZlYyBzb24gRGlldSA7IGV0IGF1c3NpIGRhbnMgbGEgbWVzdXJlIG8gY2UgcXVlIGRpdCBjZXR0ZSBoaXN0b2lyZSBkZSBjZXR0ZSByZWxhdGlvbiBub3VzIHBhcmxlICBub3VzIGV0ICBub3RyZSBwcm9wcmUgaGlzdG9pcmUsIGV0IHBldXQgY2xhaXJlciBub3RyZSBwcnNlbnQgZXQgbm90cmUgYXZlbmlyLiBEZXZlbmlyIHZyYWllIHBvdXIgbm91cy4KT25lIGxhc3QgdGhpbmc6IEEgTE9UIG9mIGV4cGVyaWVuY2VkIHBlb3BsZSB3YW50IHRvIHJvbGwgb24gU3VuZGF5cywgd2hlbiBvZnRlbiB0aW1lcyB0aGVpciBob21lIGd5bSBkaWQgbm90IGhhdmUgb3BlbiBtYXQuIFNvIHVzaW5nIEZhY2Vib29rIGNhbiBwYXkgb2ZmIGJpZyBmb3IgeW91LgpJIGxvc3QgbXkgZW50aXJlIGZyaWVuZCBncm91cCwgYW5kIGVuZGVkIHVwIG1vdmluZyBhd2F5Li4gCkJ1dCBhdCB0aGUgc2FtZSB0aW1lLCBJIHdpbGwgaGF2ZSBpdCBqdXN0IGFzIG9mdGVuIGFzIHlvdSB3b3VsZC4gCkl0IGlzIGltcG9ydGFudCB0byBrZWVwIGluIG1pbmQgdGhhdCB0aGVyZSBhcmUgaHVuZHJlZHMgb2YgdmFyaWF0aW9ucyBvZiB0aGUgZ2FtZSB3ZSBrbm93IGFzIHBva2VyLiBUaGUgbW9zdCBiYXNpYywgd2hpY2ggdGhpcyBndWlkZSBpcyBtZWFudCBmb3IsIGlzIEhvbGQgJ2VtIFBva2VyLiBPdGhlciB2YXJpYXRpb25zIGluY2x1ZGUgT21haGEsIEZvdXIgQ2FyZCBTdHVkLCBGaXZlIENhcmQgU3R1ZCwgYW5kIFBpbmVhcHBsZSBhbW9uZyBtYW55LCBtYW55IG1vcmUuCkZlZGVyYWwgaW52ZXN0aWdhdG9ycyBhbHNvIHNvdWdodCBkb2N1bWVudHMgYW5kIGVtYWlscyByZWxhdGluZyB0byB1bmlvbiBwaWNrZXRpbmcgYW5kIG90aGVyIGpvYiBhY3Rpb25zIGFnYWluc3Qgbm9udW5pb24gY29udHJhY3RvcnMgYXMgd2VsbCBhcyByZXBvcnRzIGJ5IExvY2FsIDk4IG9mZmljaWFscyBvbiBub251bmlvbiBqb2Igc2l0ZXMuClRoZXJlIGlzIGEgYnVuY2ggbW9yZSwgYnV0IEkgZmVlbCBsaWtlIEkgYW0gcmFtYmxpbmcuIApJZiB5b3Ugcm9sbCBhIDcsIHlvdSB0aHJvdyBhIHBlbm55IGluIHRoZSBwb3QgYW5kIHBhc3MgdGhlIGRpY2UgdG8gdGhlIGxlZnQuCkV4cGlyYXRpb24gYWdhaW5zdCB0aGUgY29uc3RyaWN0ZWQgZ2xvdHRpcyBwcm9kdWNlcyBwdWxzZXMgb2Ygc291bmQuIApJZiB5b3UgaGF2ZSBub3QgZG9uZSBoYWxsdWNpbm9nZW5pYyBkcnVncyBiZWZvcmUgdGhlbiB5b3UgY2FuIGJlZ2luIHRvIGNvbXByZWhlbmQgdGhlIGlkZWEgb2YgaXQuIEFzIHNvb24gYXMgeW91IGhhdmUgZG9uZSB0aGVtLCB5b3UgdW5kZXJzdGFuZCB0aGF0IHlvdXIgY29uc2Npb3VzbmVzcyBpcyBqdXN0IHRoZSBzaW1wbGVzdCBhbmQgbW9zdCBsb2dpY2FsIG9mIHBvc3NpYmxlIGhhbGx1Y2luYXRpb25zIGluIHRoZSB3b3JsZCBhbmQgdGhlcmUgZXhpc3RzIChsaWtlbHkpIGEgc2VyaWVzIG9mIGJpbGxpb25zIG9mIG90aGVyIHBlb3BsZSB3YWxraW5nIGFyb3VuZCBpbiBzb21lIGNyYXp5IGJpemFycmUgcmVhbGl0eSB0aGF0IGlzIGFsbW9zdCBpZGVudGljYWwgdG8geW91ciB1bmRlcnN0YW5kaW5nIGFuZCBub3QgcXVpdGUgcGFyYWxsZWwgdG8geW91ciBhY3Rpb25zLi4gClRoYXQgc2lkZSBvZiBnYW1lcmdhdGUgd2FzIHNwZWNpZmljYWxseSB0YXJnZXRlZCBieSBhbHQgcmlnaHQgbmF0aW9uYWxpc3QgZ3JvdXBzICh0aGVyZSB3YXMgZXZlbiBhbiBhcnRpY2xlIG9uIFN0b3JtZnJvbnQgaW5zdHJ1Y3RpbmcgdGhlaXIgZmVsbG93IG5hemlzIHdoZXJlIG9ubGluZSB0byByZWNydWl0LCB3aXRoIGxpbmtzIHRvIHNwZWNpZmljIGFydGljbGVzIHRvIHNoYXJlIHRvIGJhY2sgdXAgdGhlaXIgYXJndW1lbnRzKSwgYmVjYXVzZSB0aGV5IHJlY29nbml6ZWQgdGhlaXIgcG90ZW50aWFsIHRvIGxlbmQgYm90aCBjcmVkaWJpbGl0eSBhbmQgZmluYW5jaW5nIHRvIHRoZWlyIG1vdmVtZW50cy4gQnV0IHRoaXMgaXNuJ3QgdGhlIHRpbWUgb3IgcGxhY2UgZm9yIHRoYXQgc2hpdC4gRm9yIG9uZSwgdGhpcyBpcyByL3dob2xlc29tZW1lbWVzIG5vdCByL3BvbGl0aWNzLiBBbmQgdHdvOiB0aGlzIHdhcyBhbiAxMSB5ZWFyIG9sZCBib3kgd2hvIG1hZGUgYSBkZWNpc2lvbiB0aGF0IG5vIGNoaWxkIHNob3VsZCBldmVyIG5lZWQgdG8gbWFrZS4gSGUgd2FzIHNlbGZsZXNzIGluIGhpcyBmaW5hbCBtb21lbnRzIG9uIGVhcnRoIGFuZCBjaG9zZSB0byBoZWxwIHNhdmUgb3RoZXJzIGJ5IGRvbmF0aW5nIGhpcyBvcmdhbnMuIERvbid0IGZ1Y2tpbicgY2hlYXBlbiBpdC4KQXJ0aWNsZXMgYnkgQWZzaGluIEVydGFuaW4gUmVzdWx0cyAxClRoZSByZW1vdGUgYWdlbnQgZGlyZWN0cyB0aGUgZ3JvdW5kIGFnZW50IHdpdGggdGhvc2UgbWFjaGluZXMuLiAKV2hhdCBtYW55IHBlb3BsZSBhcmUgZmFpbGluZyB0byBkbyBpcyBwcmVkaWN0IHRoZSBlY29ub21pYyBpbXBhY3Qgb2YgdGhvc2UgcmVmdWdlZXMgaW4gdGhlIGZ1dHVyZSwgYW5kIG5vdCBqdXN0IHRvZGF5LCBidXQgaW4gMTUsIDMwLCBvciA2MCB5ZWFycy4gSSB3b3VsZCBiZSB3aWxsaW5nIHRvIGJldCwgZG9sbGFycyB0byBkb251dHMsIHRoYXQgdGhleSwgYW5kIHN1YnNlcXVlbnQgZ2VuZXJhdGlvbnMsIHdpbGwgZW5kIHVwIGNvbnRyaWJ1dGluZyBtb3JlIHRvIHRoZSBDYW5hZGlhbiBlY29ub215IHRoYW4gaXQgd2lsbCBjb3N0IHRvIHByb2Nlc3MgYW5kIGhlbHAgdGhlbSBzZXR0bGUuLiAKQnV0IHRoZSBhdHRpdHVkZXMgd2hpY2ggcHJvbXB0IHBlb3BsZSB0byBtYWtlIHRob3NlIHVuZnVubnkgam9rZXMgYXJlIHNvY2lldHkgd2lkZSwgbm90IGxpbWl0ZWQgdG8gdGhhdCBjbHViLiAKVm91cyBwb3V2ZXogbGUgY29uc3VsdGVyIGVuIGxlIHRsY2hhcmdlYW50IGxlIGZpY2hpZXIgUERGLiBMZSB2dSBwcnNlbnQgcGFyIGxhIG1haXJlIGR1IDllIGEgdCByZWpldCBwYXIgbGUgY29uc2VpbCBkZSBQYXJpcy4uIApZb3UgY2FuIGV2ZW4gZ2V0IGJvcmVkIG9mIGRvaW5nIG5vdGhpbmcuIEFuZCB3b3JrIHBvc2l0aW9ucyB3b3VsZG4gaGF2ZSB0byBnbyB0byBwZW9wbGUgd2hvIHdvdWxkIHJhdGhlciBiZSBkb2luZyBzb21ldGhpbmcgZWxzZSwgc28gbW9zdCBqb2JzIHdvdWxkIGluY3JlYXNlIGluIGVmZmljaWVuY3kgYW5kIHByb2R1Y3Rpdml0eS4gCkkgZ3Vlc3MgSSdsbCBqdXN0IGtlZXAgdXNpbmcgaXQgYXQgdGhlIHNtYWxsIHN0YWtlcyB0YWJsZXMgSSBwbGF5IGF0IHdoZXJlIHBlb3BsZSBtb3JlIGxpa2VseSBjYW4ndCBzZWUgdGhyb3VnaCBpdC4gCkl0IHdhcyB0aW1lIHRvIGdvIGJhY2sgdG8gY29sbGVnZSwgZ2V0IG15IGRlZ3JlZSwgYW5kIGdldCBhIGpvYi4gRmlyc3QsIHRob3VnaCwgSSBoYWQgdG8gZmlndXJlIG91dCBob3cgSSB3YXMgZ29pbmcgdG8gcGF5IHJlbnQuLiAKV2FzIGEgZnJlZSBzcGlyaXQsIGhhcHBpZXN0IG9uIGhpcyBiZWxvdmVkIENhcGUgQnJldG9uIElzbGFuZCB3aGVyZSBoZSByZXR1cm5lZCBmb3IgdmFjYXRpb25zIGhpcyBlbnRpcmUgbGlmZS4gRm9yIG1vc3Qgb2YgdGhlIHBhc3QgMjQgeWVhcnMsIGhlIGFuZCBTaGVpbGEgc3BlbnQgbWFueSBoYXBweSBzdW1tZXJzIHRoZXJlIGVuam95aW5nIGZpZGRsZSBtdXNpYywgY3JlYXRpbmcgbWFnaWMgb24gdGhlIGRhbmNlIGZsb29ycywgbG9ic3RlciBib2lscyBhbmQgZW5kbGVzcyBzdW1tZXIgZGF5IGFuZCBuaWdodHMgd2l0aCB0aGVpciBmYW1pbGllcyBhbmQgZnJpZW5kcy4gClRoZSBzYW1lIGZvbGtzIHdobyBiYW5uZWQgYSBwb3JuIGV4cG8gZnJvbSB0aGUgZG93bnRvd24gY29udmVudGlvbiBjZW50ZXIgbm93IHdvbid0IGxldCB1cyBoYXZlIHBva2VyIHJvb21zIGVpdGhlci4gCkZvciBpbnN0YW5jZSB5b3UgY2FuIGJldCB0aGF0IHRoZXJlJ2xsIGJlIHR3byByZWQgY2FyZHMgaW4gdGhlIG5leHQgMjUgbWludXRlcyBvciBtYXliZSB0aGF0IHRoZXJlJ2xsIGJlIG9ubHkgb25lIGNvcm5lciBpbiB0aGUgbGFzdCAxNSBtaW51dGVzIG9mIHRoZSBnYW1lLiBUaGUgY29ycmVzcG9uZGVudCBvZiB0aGlzIHdvdWxkIHJpdmV0IHJ1bm5pbmcgdXAgZG93biBmcm9tIHRoZSBzdGFuZHMgdGhyb3dpbmcgY2FzaCBhdCB5b3VyIGJvb2tpZSBldmVyeSBmZXcgbWludXRlcy4gCm9uIExpdmUgQXQgVGhlIEJpa2UKSXQgaGVscGVkIG1lIGdldCBkaWFnbm9zZWQgY29ycmVjdGx5IHdpdGggUE1ERCBhbmQgSSB3YXMgdHJlYXRlZC4gSSBoYXZlIHRyYWNrZWQgbXkgcGVyaW9kcyBzaW5jZSBhbmQgbm93IGhhdmUgZG9jcyBzdGFydGluZyB0byB0YWtlIG1lIHNlcmlvdXNseSBiZWNhdXNlIEkgc28gbWV0aWN1bG91cy4gClNraSBhbHBpbjogbm91dmVhdSByZWNvcmQgcG91ciBTaGlmZnJpbiwgdmljdG9yaWV1c2UgZHUgc2xhbG9tIGRlIFNwaW5kbGVydXYgTWx5bkwgTWlrYWVsYSBTaGlmZnJpbiBlc3QgaW5hcnJ0YWJsZS4gIE5vcm1hbGVtZW50LCBjJ2VzdCB1biBlbmRyb2l0IHF1aSByZXN0ZSB2ZXJ0IHRvdXRlIGwnYW5uZSAsIHJlZ3JldHRlIGxlIGphcmRpbmllciBlbiBjaGVmIGR1LgpJdCB3YXJtZXIgYW5kIHRoZXJlIGZhciBsZXNzIHNub3csIGJ1dCBhcyBhIHJlc3VsdCwgdGhlIHdob2xlIGZyZWFraW5nIGFyZWEgbG9zZXMgdGhlaXIgbWluZHMgb3ZlciBhbiBpbmNoIG9mIHNub3cgICBhbmQgdGhleSBnZXQgaW50byBhY2NpZGVudHMgICBhbmQgbm90IGV2ZXJ5IHJvYWQgZ2V0cyBwbG93ZWQuIApJIGp1c3Qgd2FudGVkIHRvIHNheSAiaGV5IiB0byBhbm90aGVyIHdobyBoYXMgd29ya2VkIHdpdGggc3R1ZGVudHMgd2l0aCBkaXNhYmlsaXRpZXMuIFRoaXMgaXMgZXhhY3RseSBhcyBJIGhhdmUgb2JzZXJ2ZWQgb3ZlciB0aGUgeWVhcnMgd2l0aCBudW1lcm91cyBzdHVkZW50cyB3aG8gaGFkIHNlaXp1cmVzLCBhcyB3ZWxsIGFzIG15IG93biBleHBlcmllbmNlIHdpdGggdGhlbS4gSSd2ZSBhbHNvIGxvc3QgYSB3b25kZXJmdWwgMTIgeWVhciBvbGQgd2hvIGRpZWQgaW4gaGlzIHNsZWVwIG9mIHN1ZGRlbiB1bmV4cGxhaW5lZCBkZWF0aCBpbiBlcGlsZXBzeS4gClRoZSByZXN1bHRzIG9mIHRoaXMgZGVzcGVyYXRlIGF0dGVtcHQgd2VyZSBvdmVyd2hlbG1pbmc6IFRoZSBncnVlc29tZSBjcmltZSBzdGlsbCBmcmVzaCBvbiB0aGVpciBtaW5kcywgYWxtb3N0IDYsNjAwIGR1ZGVzIHN1Ym1pdHRlZCB0aGVpciBETkEgdG8gaGVscCBvdXQgaW4gdGhlIGNhc2UuIApEdSBrYW5uc3QgZGljaCBhdWYgZGVuIGVpbnN0ZWxsdW5nc3Rlc3Qgdm9yYmVyZWl0ZW4sIGVpbmZhY2ggZ29vZ2xlbiBkYSBzb2xsdGUgZWluaWdlcyBrb21tZW4uIApXaXRoIEFydGlmYWN0LCBlc3BlY2lhbGx5IGFmdGVyIHRoaXMgYmFsYW5jZSB1cGRhdGUsIHRoZSBkZWNrIGJ1aWxkaW5nIERPRVMgZmVlbCByZWFsbHkgZ29vZCBidXQgdGhlIGdhbWUgbmV2ZXIgZmVlbHMgbGlrZSBhIGRlY2sgYnVpbGRpbmcgc2ltdWxhdG9yLiBUaGVyZSBhcmUganVzdCBzbyBtYW55IHRhY3RpY2FsIGluIGdhbWUgZGVjaXNpb25zIHRvIG1ha2UgZWFjaCB0dXJuIHJlbGF0aXZlIHRvIHlvdXIgZGVjayBidWlsZCBhbmQgeW91ciBvcHBvbmVudCBhbmQgYWxsIHRoZSBzaGlmdGluZyBjb25kaXRpb25zIHdoaWNoIGVmZmVjdCBldmVyeXRoaW5nIGV2ZXJ5IHR1cm4uIE1URyBuZXZlciByZWFsbHkgZ2F2ZSB1cyB0aGF0IGtpbmQgb2YgaW4gZ2FtZSBtdWx0aWRpbWVuc2lvbmFsaXR5LiBhbG1vc3QgYWxsIG9mIE1UR3MgbWFueSBkaW1lbnNpb25zIHdlcmUgb3V0IG9mIGdhbWUuIGFuZCB0aGF0cyBub3QgcmVhbGx5IGEgZmxhdywgaXRzIHJlYWxseSBiZWF1dGlmdWw7IGJ1dCBBcnRpZmFjdCBvZmZlcnMgYSB1bmlxdWUgYmFsYW5jZSBiZXR3ZWVuIGluIGFuZCBvdXQgb2YgZ2FtZSBkZXB0aDogYW5kIGl0cyByZWFsbHkgcmVhbGx5IGdvb2QuIDopClRoZSB2b2NhbHMgbWF0Y2ggdGhlIGJlYXQgcGVyZmVjdGx5LiBUaGlzIGlzIHNvbWV0aGluZyBzbyBnb29kIGluIHRoaXMgYWxidW0gdGhhdCBpdCBvbmUgb2YgdGhlIGZpcnN0IHRoaW5ncyBJIG5vdGljZWQuIFRoZSB3YXkgTWV0aG9kIE1hbiByaHltZXMgb3ZlciB0aGUgYmVhdCBpbiBFeHRvcnRpb24ganVzdCBmaXRzIHBlcmZlY3RseSBhbmQgaXQgdmVyeSBzYXRpc2Z5aW5nLgpOYXR1cmFsbHksIGFzIGEgbWFuIHlvdSB3YW50IHRvIGtub3cgd2hhdCBpcyBnb2luZyB0byBtYWtlIHlvdSB0aGF0IHdvbmRlcmZ1bCBhbmQgdW5kZXJzdGFuZGluZyBib3lmcmllbmQuIElmIHRoaXMgaXMgdGhlIGNhc2UsIHlvdSB3aWxsIGZpbmQgYWxsIHlvdSBuZWVkIHRvIGtub3cgYW5kIG1heWJlIGEgbGl0dGxlIGJpdCBtb3JlIGluIHRoZSBmb2xsb3dpbmcgYXJ0aWNsZS4KVGhlIGdlbmV0aWNzIHdlcmUgYWxyZWFkeSAicG9sbHV0ZWQiIGlmIGl0IGZyb20gZW52aXJvbm1lbnRhbCBzdHJlc3MuIFRoZSByZXN1bHQgd2lsbCBiZSBmZW1pbml6ZWQgc2VlZHMgdGhhdCBoYXZlIHRoZSBzYW1lIHJpc2sgdG8gaGVybWllIGZyb20gdGhlIHN0cmVzc2VzIHRoYXQgbWFkZSBpdCBoZXJtaWUuIElmIGl0IHdhcyBzb21ldGhpbmcgZWdyZWdpb3VzIGluIHlvdXIgZW52aXJvbm1lbnQgYW5kIGdyb3cgdGhhdCBkaWQgaXQsIHRoZW4geW91IGp1c3QgZ290IHNvbWUgZnJlZSBmZW1pbml6ZWQgc2VlZHMgdGhhdCBzaG91bGRuIGJlIGEgcHJvYmxlbSBpZiB5b3UgZml4IHlvdXIgc3RyZXNzIHByb2JsZW0uLiAKIlRoZXNlIGRvbmF0aW9ucyBzdXBwb3J0IGFjdGl2aXRpZXMgYWNyb3NzIGhvc3BpdGFscywgYW5kIG1ha2UgYWRpZmZlcmVuY2UgdG8gdGhlIGhlYWx0aCBhbmQgd2VsbGJlaW5nIG9mIG91ciBwYXRpZW50cyBhbmQgdGhlaXIgZmFtaWxpZXMsIiBhIE5TVyBIZWFsdGggc3Bva2Vzd29tYW4gc2FpZCBBY2NvcmRpbmcgdG8gYTIwMTBQcm9kdWN0aXZpdHkgQ29tbWlzc2lvbiByZXBvcnQsIHByb2JsZW0gZ2FtYmxlcnMgYWNjb3VudGZvciBhYm91dDQwIHBlciBjZW50b2YgbG9zc2VzIG9uIHBva2VyIG1hY2hpbmVzIGluIEF1c3RyYWxpYS4gCkkgc2F0IGluIGEgY29mZmVlIHNob3AgaW4gU3JpbmFnYXIgbmVhciB0aGUgVU4gY29tcG91bmQgYW5kIEkgZGlkbiBzZWUgYW55IG90aGVyIGZvcmVpZ25lcnMgaW4gdGhlIDIgaG91cnMgdGhhdCBJIGhhZCBlc3ByZXNzbyBhbmQgcmVhZCBteSBib29rLiAKWW91IGhhdmUgdG8gY29tcHJvbWlzZSBldmVyeSBub3cgYW5kIHRoZW4gb24gdGhvc2UgdGhpbmdzLiAKV2hhdCBpZiBIYXllcyBmaW5kcyAiVGhlIHRhcGUiLCBvciBhIHNpbWlsYXIgdGFwZShzZWVpbmcgVEhBVCBtaWdodCBiZSBlbm91Z2ggZm9yIEhheWVzIHRvIGxvc2UgaXQgbXVyZGVyIGEgc3VzcGVjdCkuIFRoYXQgYmUgYSBnb29kIHdheSB0byB0aWUgdGhlIHNlYXNvbnMgdG9nZXRoZXIgd2l0aG91dCBpdCBiZWluZyB0b28gaGVhdnloYW5kZWQuIE1hdHRoZXcgTWNjb25hdWdoZXkgc2F5cyBoZSB3YW50cyB0byBwbGF5IFJ1c3QgYWdhaW4sIERvcmZmIGlzIHNheWluZyBOaWMgdGhpbmtzIGl0IGJlIGNvb2wgdG8gYnJpbmcgdGhlIGNoYXJhY3RlcnMgZnJvbSBkaWZmZXJlbnQgc2Vhc29ucyB0b2dldGhlciBpbiB0aGUgZnV0dXJlLCBhbmQgTmljIHNhaWQgaGUgd2FzIGdvaW5nIHRvIGRvIGEgbW92aWUgYW5kIHNvbWUgb3RoZXIgcHJvamVjdHMgYWZ0ZXIgc2Vhc29uIDMsIGJ1dCBzYXlzIG5vdyBoZSBtaWdodCBjaGFuZ2UgaGlzIG1pbmQgYmVjYXVzZSBoZSBoYXMgYSBjcmF6eSBpZGVhIGZvciBzZWFzb24gNC4gCkVzcGVjaWFsbHkgaWYgdGhlIG9mZmVuZGluZyBwYXJ0eSBzZWVzIHRoZSBlcnJvciBvZiBoaXMgd2F5cyBhbmQgc2hvd3MgcHJvZ3Jlc3MgaW4gYmVpbmcgdHJ1c3R3b3J0aHksIG1vcmUgYnVzaW5lc3Mgb3Bwb3J0dW5pdGllcyBjYW4gZGV2ZWxvcCBhcyBhIHJlc3VsdCBiZWNhdXNlIHlvdSBtYXkgdW5kZXJzdGFuZCBlYWNoIG90aGVyIGJldHRlciB0aGFuIGJlZm9yZS4gCkZsaXBwaW5nIG9uIHRoZSBUViBvciByYWRpbyBjYW4gcHJvdmlkZSBhIG11Y2ggbmVlZGVkIGRpc3RyYWN0aW9uLiAKRnVsbCB0cmFuc2NyaXB0LiBHdWl0YXIgSGVybyBJSUk6IExlZ2VuZHMgb2YgUm9jayBpcyB0aGUgZmlyc3QgZ2FtZSBpbiB0aGUgc2VyaWVzIHRvIGluY2x1ZGUgYW4gb25saW5lIC4gdGhleSBjb21wZXRlIGluIGEgU3VkZGVuIERlYXRoIHNlZ21lbnQsIGluIHdoaWNoIHRoZSBvbmx5IGF0dGFpbmFibGUgQmF0dGxlIC4gMyB2ZXJzaW9uczsgc2V2ZXJhbCBmcmVlIGFuZCBmb3IgY29zdCBkb3dubG9hZGFibGUgc29uZ3MgYW5kIHNvbmcgcGFja3MgYXJlIC4gVGhpcyBtb2RlIHdhcyBhZGRlZCB0byB0aGUgWGJveCAzNjAgYW5kIFBsYXlTdGF0aW9uIDMgdmVyc2lvbnMgdmlhIGEgcGF0Y2guIApCZXR0ZXIgZm9yIGxlYXJuaW5nIHRob3VnaD8gSSBjYW4gdW5kZXJzdGFuZCB0aGUgYXJndW1lbnQgdGhhdCBpdCBiZXR0ZXIgZm9yIHdlbGwgZGVzaWduZWQgc29mdHdhcmUgaW4gZ2VuZXJhbCwgYnV0IEkgZG9uIHRoaW5rIG1hbnkgd291bGQgYXJndWUgdGhhdCBzdHJpY3QgT09QIGlzIGEgcG9zaXRpdmUgcXVhbGl0eSB3aGVuIGNvbnNpZGVyaW5nIGlmIHNvbWV0aGluZyBpcyBhIGdvb2QgZmlyc3QgbGFuZ3VhZ2UuClNvbWUgdHJhZGVzaG93IGNvbXBhbmllcyB1c2UgVlcsIGJ1dCB0aGVyZSBhcmUgZWFzaWx5IGZvdXIgQXV0b0NBRCBqb2JzIHRvIG9uZSBWVyBqb2IuLiAKV2UncmUgcmlnaHQgaW4gdGhlIG1pZGRsZSBvZiBhbGwgb2YgdGhpcyBwb2xpdGljYWwgdXBoZWF2YWwgYXJvdW5kIGltbWlncmF0aW9uIGluIG91ciBjb3VudHJ5LiAKU28gd2hhdCBpcyBpdD8gV2hlbiBpbiBkb3VidCwgZ28gdG8gdGhlIGRpY3Rpb25hcnkuIApUaGUgdmVyeSBpbnRyaWd1aW5nIGFzcGVjdCBvZiB0aGUgc3RvcnkgaXMgdGhhdCBpdCBzaGFyZXMgYW4gaW50ZXJlc3RpbmcgY29pbmNpZGVuY2Ugd2l0aCB0aGUgUmVhbCBUaGluZy4gVGhleSB3ZXJlbiBwbGFubmluZyB0byB1c2UgdGhlaXIgbm9uIGV4aXN0ZW50IGJvbWIgdGhvdWdoIHRoZXkgZGlkIHBsYW4gdG8gZGVtb25zdHJhdGUgaXQsIHRoYXQgYm9tYmluZyAxMCBsYWJlbGVkIHNlY3JldCBzaXRlcyB0byBkaXNwbGF5IGl0cyBlZmZlY3RpdmVuZXNzLiAKQXVyb3JhIEhhbHNleSB1CkluIGl0cyBjbG9zaW5nLCB0aGUgcHJvc2VjdXRpb24gc2FpZCB0aGUgZXZpZGVuY2Ugc3BlYWtzIGZvciBpdHNlbGYuIFByb3NlY3V0b3IgRGFuYSBDdW1taW5ncyBzYWlkIExvdWRpbmcgYWRtaXR0ZWQgb24gaW50ZXJyb2dhdGlvbiB0YXBlIHRoYXQgSGF0Y2ggZ2F2ZSBoaW0gJDIsODAwIGluICQyMHMgYWZ0ZXIgdGhlIG11cmRlci4gClRoZSB0aGluZyBpcyB0aG91Z2gsIHBlb3BsZSBtYWtlIHNvIG1hbnkgbWlzdGFrZXMgdGhhdCB0aGV5IHdpbiAiYnkgYWNjaWRlbnQiIGFsb25nIHRoZSB3YXkgYXMgdGhlaXIgb3Bwb25lbnRzIGRldmlhdGUgZnJvbSB0aGUgZXF1aWxpYnJpdW0gd2hlbiBwbGF5aW5nLi4gCiJJdCB3YXMgdGVycmlibHkgZGFuZ2Vyb3VzIHRvIGxldCB5b3VyIHRob3VnaHRzIHdhbmRlciB3aGVuIHlvdSB3ZXJlIGluIGFueSBwdWJsaWMgcGxhY2Ugb3Igd2l0aGluIHJhbmdlIG9mIGEgdGVsZXNjcmVlbi4gVGhlIHNtYWxsZXN0IHRoaW5nIGNvdWxkIGdpdmUgeW91IGF3YXkuIEEgbmVydm91cyB0aWMsIGFuIHVuY29uc2Npb3VzIGxvb2sgb2YgYW54aWV0eSwgYSBoYWJpdCBvZiBtdXR0ZXJpbmcgdG8geW91cnNlbGYgYW55dGhpbmcgdGhhdCBjYXJyaWVkIHdpdGggaXQgdGhlIHN1Z2dlc3Rpb24gb2YgYWJub3JtYWxpdHksIG9mIGhhdmluZyBzb21ldGhpbmcgdG8gaGlkZS4gSW4gYW55IGNhc2UsIHRvIHdlYXIgYW4gaW1wcm9wZXIgZXhwcmVzc2lvbiBvbiB5b3VyIGZhY2UuOyB3YXMgaXRzZWxmIGEgcHVuaXNoYWJsZSBvZmZlbnNlLiBUaGVyZSB3YXMgZXZlbiBhIHdvcmQgZm9yIGl0IGluIE5ld3NwZWFrOiBmYWNlY3JpbWUuIgpUaGF0IGRvZXNuIG1lYW4geW91IGhhdmUgdG8gYmUgd29ya2luZyAxMDAgaG91cnMgYSB3ZWVrIG5lY2Vzc2FyaWx5LCBidXQgdXN1YWxseSBpdCBtZWFucyB5b3UgcHV0IGluIHRoZSBsYXRlIG5pZ2h0cyB3aGVuIHlvdSBuZWVkIHlvdSB0bywgYW5kIGFuc3dlciB0aGUgcGhvbmUgYXQgYWxsIGhvdXJzLi4gCkl0J3Mgc28gZXhoYXVzdGluZy4uIApBbm9uX01jRmFrZW5hbWUgIDUgcG9pbnRzICBzdWJtaXR0ZWQgOSBkYXlzIGFnbwpNcy4gRmlvcmluYSBpcyB0aGUgZm9ybWVyIENoaWVmIEV4ZWN1dGl2ZSBvZiBIZXdsZXR0IFBhY2thcmQgYW5kIGhlciBoYWlyIHNheXMgYXMgbXVjaC4gTm90IGp1c3Qgc2hvcnQgKG9idmlvdXNseSBzaGUgbG9zdCBpdCBkdXJpbmcgdGhlIGNoZW1vKSwgYnV0IGl0IGFsc28ga2luZGEgYnV0Y2ggKHRoZXJlIGFyZSB3YXlzIHRvIGN1dCBzaG9ydCBoYWlyIHRvIHNpZ25pZnkgImZlbWluaW5pdHkiIGlmIG9uZSB3YW50cyBvciBuZWVkcyB0bykuIApIbHQgZW50c3ByZWNoZW5kZSBCZXRlaWxpZ3VuZ2VuIGFuIGRlbiBqZXdlaWxpZ2VuIEVudHdpY2tsdW5nc2dlc2VsbHNjaGFmdGVuLiBEYW1pdCBpc3QgZGllIFdpZW4gSG9sZGluZyBtYWdlYmxpY2ggYW4gZGVuIGR5bmFtaXNjaGVuIE1vZGVybmlzaWVydW5ncyAgdW5kIEVudHdpY2tsdW5nc3Byb3plc3NlbiBpbiBkZXIgU3RhZHQgYmV0ZWlsaWd0OiBQYWxhaXMgSGFuc2VuLCBhYmVyIGF1Y2ggUHJvamVrdGUgd2llIGRpZSBOZXVlIFRoZXJtZSBXaWVuIGluIE9iZXJsYWEsIGRlciBXaXJ0c2NoYWZ0c3BhcmsgQnJlaXRlbnNlZSBvZGVyIGRpZSBFbnR3aWNrbHVuZyBlaW5lcyB2bGxpZyBuZXVlbiBTdGFkdHRlaWxzIGltIDIyLiBCZXppcmsgdW50ZXIgZGVtIFRpdGVsICJOZXUgU3RhZGxhdSIuLiAKV2hldGhlciBvciBub3QgeW91J3JlIGNhcmluZyBmb3IgYSBndWFyZGlhbiwgcGFydG5lciwgc29uLCBvciBkYXVnaHRlciwgd2UnbGwgZ2l2ZSB5b3UgdGhlIGRhdGEgeW91IG5lZWQgYWJvdXQgY2lyY3Vtc3RhbmNlcywgcmVtZWRpZXMsIGFuZCBtZWRpY2FsIGFzc2lzdGFuY2UgZm9yIHlvdXIgYmVsb3ZlZCwgd2l0aCBvdXQgbmVnbGVjdGluZyB5b3VyIHNlbGYgd2hpbGUgeW91IGNhcmUgZm9yIGFub3RoZXIgcGVyc29uLiBMZXQgdXMgYXNzaXN0IGFuZCBjaGlsbCBvdXQgZXZlcnkgYSBwYXJ0IG9mIHlvdXIgYm9keSB0byBkZWxpdmVyIGJhY2sgdGhlIGdsb3cgb2YgZXhwZWN0YXRpb24uIFRyaWVkIHRhbnRyYSBmb3IgaGVyIFRoaXMgdmlnb3JvdXMsIGZ1bGwgYm9keSBtYXNzYWdlIGluY29ycG9yYXRlcyBhY3RpdmUgYW5kIHBhc3NpdmUgc3RyZXRjaGluZywgZnJpY3Rpb24sIGhlYXQsIGNvbXByZXNzaW9uLCBhbmQgcmVtb3RlZCB0aGVyYXBldXRpYyB3b3JrIHRvIGVhc2Ugc3RpZmZuZXNzLCByZXN0b3JlIG1vYmlsaXR5IGFuZCBwcm9tb3RlIGhlYWxpbmcgZm9yIG11c2NsZSBtYXNzIGFuZCBqb2ludHMuIApJIGp1c3Qgd2FudCB0byBrbm93IGlmIHlvdSBjYW4gZG93bmxvYWQgTUdTMiBmb3IgUEMgKHdpdGhvdXQgZGlzaykgaSB0cmllZCB0byBkb3dubG9hZCBpdCB0aHJvdWdoIHBpcmF0ZSBiYXkgYW5kIG1hbnkgb3RoZXIgd2Vic2l0ZXMgYnV0IGl0LiBUaGlzIHRvcnJlbnQgY29tZXMgd2l0aCBubyBkdmQgY3JhY2sgYXRpLG52aWRpYSBkaXNwbGF5IHBhdGNoIC4gClN1Y2ggYSBzdWNjZXNzZnVsIGZ1bmRyYWlzZXIgd291bGQgbm90IGJlIHBvc3NpYmxlIHdpdGhvdXQgdGhlIGdlbmVyb3VzIHN1cHBvcnQgb2Ygb3VyIHNwb25zb3JzLiAKQnV0IGluIGxhbmRzY2FwZSwgeW91IHdvdWxkIGhpZ2hseSBiZW5lZml0IGZyb20gYSBmdWxsIGZyYW1lLiBCdXQgY29uc2lkZXJpbmcgeW91IHdvbiBnZXQgYW55IG5ldyBnbGFzcyBzb29uIHRoZSA3ZCArIDE4IDIwMCBpcyBhIGdyZWF0IGFsbCBhcm91bmQgY2FtZXJhIGJ1dCB5b3Ugd2lsbCBub3QgZ2V0IGFsbCB0aGUgc2hvdHMgKGluIGxhbmRzY2FwZSkgeW91IGNvdWxkIGdldCB3aXRoIGEgZGlmZmVyZW50IHNldHVwKGZ1bGwgZnJhbWUgKyAyIDQgbGVuc2VzKS4uIApPciwgeW91IGNvdWxkIGhhdmUgY29uc29uYW50cyB0aGF0IGFyZSBzaWxlbnQgd2hlbiB0aGUgdm93ZWwgaXMgaW5pdGlhbCwga2luZCBvZiBsaWtlIGEgImJhc2Ugdm93ZWwiLCBidXQgb3RoZXJ3aXNlIGl0IHNwb2tlbi4gQWxzbyBkZXBlbmRpbmcgb24geW91ciBzeXN0ZW0sIGNvbnNvbmFudHMgYnkgdGhlbXNlbHZlcyBtaWdodCBpbXBseSB2b3dlbHMgd2hlbiBpbml0aWFsLCBzbyB0aGF0IHlvdSBtaWdodCBoYXZlIC9hdGEvIEhUQSwgYnV0IC9pdGEvIFlUQS4KQnV0IHRoYXQncyBqdXN0IHRoZSBiZWdpbm5pbmchIFdoYXQgaWYgeW91IGNvdWxkIHN3YXAgb3V0IHRoZSB2aWV3IHNvIHRoYXQgeW91IGNvdWxkIHNlZSB3aGF0IHlvdXIgc3Vycm91bmRpbmdzIGxvb2tlZCBsaWtlIGNlbnR1cmllcyBhZ28/IEltYWdpbmUgdG91cmluZyBhIGNpdHkgbGlrZSBSb21lIGFuZCB3aXRoIGEgc2ltcGxlIGNvbW1hbmQgdmlld2luZyBpdCBhcyBpZiB5b3Ugd2VyZSBwcmVzZW50IHdoZW4gSnVsaXVzIENhZXNhciBiZWNhbWUgZW1wZXJvci4gCk5vdGU6IENsb3NpbmcgeW91ciBhY2NvdW50IHdpbGwgdGFrZSB5b3VyIFNwYXJrUGFnZSBvZmZsaW5lLCB0dXJuIG9mZiB5b3VyIGVtYWlscywgYW5kIGRlbGV0ZSBhbGwgb2YgeW91ciBwcmV2aW91c2x5IHRyYWNrZWQgZGF0YSAoZm9vZCwgZml0bmVzcywgd2VpZ2h0LCBhbmQgbW9yZSkgcGVybWFuZW50bHkuIENsb3NpbmcgeW91ciBhY2NvdW50IHdpbGwgTk9UIGRlbGV0ZSBhbnkgb2YgeW91ciBwb3N0cyBvbiB0aGUgTWVzc2FnZSBCb2FyZHMgb3IgaW4gU3BhcmtUZWFtcy4gT25jZSB5b3VyIGFjY291bnQgaXMgY2xvc2VkLCBuZWl0aGVyIHlvdSBub3Igb3VyIHN0YWZmIHdpbGwgYmUgYWJsZSB0byByZW9wZW4gaXQgbGF0ZXIuIApBZnRlciBhbGwsIG1pbmltdW0gd2FnZSBpcyBnb2luZyB1cC4gQSBEZW1vY3JhdCBjb250cm9sbGVkIENvbmdyZXNzIGZpbmFsbHkgbWFuYWdlZCB0byByYWlzZSB0aGUgZmVkZXJhbCBtaW5pbXVtIHdhZ2UgdG8gJDcuMjUgYW4gaG91ci4gCk9uZSBsb25nLCB3ZWlyZCwgc3BpcmFsIHRvb3RoLiAKSW4gcHJldmlvdXMgYXJ0aWNsZXMsIEkgaGF2ZSBkaXNjdXNzZWQgdGhhdCBzdGFuZGluZyB1cHJpZ2h0LCB3YWxraW5nIGFuZCBydW5uaW5nIGFsbCByZXF1aXJlIGdsdXRlYWwgbXVzY2xlIGFjdGl2YXRpb24uIElmIHRoZSBwYXRpZW50IGhhcyBwb29yIGx1bWJhciBzdGFiaWxpdHksIHRoZSBtdWx0aWZpZHVzIGFuZCBnbHV0ZXMgbWF5IG5lZWQgcmVhd2FrZW5pbmcgZm9yIHRoZXNlIGFjdGl2aXRpZXMuIFJ1bm5pbmcgcHJlc2VudHMgbW9yZSBvZiBhIGNoYWxsZW5nZSBmb3IgZnJvbnRhbCBwbGFuZSBzdGFiaWxpdHkgYmVjYXVzZSBwZWx2aWMgc3RhYmlsaXphdGlvbiBtdXN0IG9jY3VyIHdpdGggb25seSBvbmUgZm9vdCBvbiB0aGUgZ3JvdW5kLi4gCkluIHRlcm1zIG9mIGdldHRpbmcgInRoZSBwZXJmZWN0IGltYWdlIiwgSSB3b3VsZCBoYXZlIHRyaWVkIHRvIHRha2UgdGhlIGltYWdlIGZyb20gYSBwb3NpdGlvbiBzbyB0aGF0IHRoZSBhbmdsZSBvZiBzaG9vdGluZyBpcyBwZXJwZW5kaWN1bGFyIHRvIHRoZSBzaG9yZWxpbmUgaW5zdGVhZCBvZiAiZG93bnJpdmVyIi4uIApJIGFtIERyLiBMaWxsaWFuIEh1bnQuIEkgaGF2ZSBhIGRldmVsb3BlZCBhIHRpbWUgbWFjaGluZS4gCkFmdGVyIEkgYmxvY2tlZCBhbmQgZGVsZXRlZCB0aGlzIGRvdWNoZSBjYW5vZSBJIHBvc3RlZCBhYm91dCBpdCBvbiBXaGlzcGVyIGFuZCBhIGZldyBnaXJscyBtZXNzYWdlZCBtZSBzYXlpbmcgdGhhdCB0aGV5IHdlcmUgYWxzbyBkZWFsaW5nIHdpdGggdGhpcyBndXkuIFRoZSBwcm9tb3Rpb24gaGUgaXMgcmVmZXJyaW5nIHRvIGlzIG9uZSB0aGF0IEkganVzdCByZWNlaXZlZCBhdCB3b3JrIGEgZmV3IG1vbnRocyBhZ28gYW5kIHRoYXQgd2FzIHdoYXQgbXkgb3JpZ2luYWwgd2hpc3BlciB3YXMgaW4gcmVnYXJkcyB0by4gR3Vlc3MgaGUgZmVsdCBhIG5lZWQgdG8gc2hpdCBvbiBteSBzdWNjZXNzIHdpdGggaGlzIGxpZXMgYW5kIGRlbHVzaW9ucy4gCkl0J3MgaG9uZXN0bHkgbm90IHRoYXQgaGFyZC4uIApCZWZvcmUgYmVpbmcgc3RyaWNrZW4gd2l0aCBhIGZvcm0gb2YgYmFjdGVyaWFsIG1lbmluZ2l0aXMsIFB1cmR5IHdhcyBhbiBhdmlkIG91dGRvb3IgcGVyc29uIGF0IHRoZSBwZWFrIG9mIGZpdG5lc3MgICBzbm93Ym9hcmRpbmcgd2FzIGhlciBwYXNzaW9uIGJ1dCBzaGUgYWxzbyBsb3ZlZCB0byBoaWtlLCBjbGltYiByb2Nrcywgd2F0ZXIgc2tpIGFuZCByaWRlIHdha2UgYm9hcmRzLgoiUml2ZXIgRWRnZSIgICByZWFsbHkgZmFudGFzdGljIHBzeWNob2xvZ2ljYWwgc3R1ZHkgb2YgYSBidW5jaCBvZiB0ZWVucyBhbmQgaG93IHRoZXkgcmVhY3QgdG8gYSBtdXJkZXIsIFJlZXZlcyBnaXZlcyBhIHJlYWxseSBjb21wZWxsaW5nIGFuZCBsYXllcmVkIHBlcmZvcm1hbmNlLgpCdXQgd2hlbiB0aGUgLiAKVW5pdmVyc2l0eSBjb21taXRtZW50IHRvIHRoZSBpbmNsdXNpb24gb2YgYWxsIG1lbWJlcnMgb2Ygb3VyIGRpdmVyc2Ugc3R1ZGVudCBib2R5IGhlbHBzIGFsdW1uaSBnbyBvbiB0byBhY2hpZXZlIGdyZWF0IHRoaW5ncywgc2FpZCBQYXVsYSBNeXJpY2sgU2hvcnQsIFVIIHByb3Zvc3QgYW5kIHNlbmlvciB2aWNlIHByZXNpZGVudCBmb3IgYWNhZGVtaWMgYWZmYWlycy4gCkhlIGFkZHMgJDEsMjUwIHBlciBtb250aC4gClRoYXQgbWFkZSBtZSB0cmVtYmxlIHdpdGggZmVhci4gSSBsaXZlIGluIFV0YWggYW5kIHRoZSB3b3JzdCB3ZSBnZXQgaXMgYSBiYWQgc25vd3N0b3JtIGhlcmUgc28gdG8gc2VlIHNvbWV0aGluZyBsaWtlIHRoaXMgbWFuaWZlc3QgaXRzZWxmIG91dCBvZiB0aGluIGFpciBhbmQganVzdCBvYmxpdGVyYXRlIHlvdXIgbmVpZ2hib3Job29kIGlzIHRoZSBtb3N0IGdvZCBmZWFyaW5nIHRoaW5nIEkgY2FuIGltYWdpbmUuIE15IGhlbGwuIApOb3cgaXQncyB0aW1lIHRvIHB1dCBwb2ludHMgb24gdGhvc2Ugc3Rvcmllcy4gUGVyc29uYWxseSBJIHVzZSB0aGUgUG9rZXIgUGxhbm5pbmcgU2NhbGUgKDEvMiwxLDIsMyw1LDgsMTMsMjAsNDAsMTAwKSBzbyB0aGlzIGlzIHdoYXQgSSB3aWxsIHVzZSBmb3IgdGhpcyBleGFtcGxlLiBBdCB0aGUgYm90dG9tIG9mIHRoYXQgbGlzdCB5b3UnbGwgcHJvYmFibHkgaGF2ZSBtaWNybyB0YXNrcyAodGhpbmdzIHRoYXQgdGFrZXMgNCBob3VycyBvciBsZXNzIHRvIGRvKS4gClRoZXJlIGFyZSBvZiBjb3Vyc2Ugc29tZSBjYXZlYXRzIHRvIHRoaXMuIExpa2UgeW91IGFsbHVkZWQgdG8sIGlmIHlvdSBoYXZlIGEgbGFyZ2UgcG9zdCBmbG9wIGVkZ2UsIHRoZSBFViBvZiB3ZWFrZXIgaGFuZHMgZ28gdXAgYW5kIHdlIGNhbiBwcmVmZXIgY2FsbHMgcmF0aGVyIHRoYW4ganVzdCB0YWtpbmcgZG93biB0aGUgYmxpbmRzLiBTaW1pbGFybHksIGlmIHdlIG9wZW4sIGZvciBleGFtcGxlLCA2NiBVVEcsIHdlIG1pZ2h0IGlkZWFsbHkgcHJlZmVyIHRoYXQgYWxsIDggcGxheWVycyBjYWxsIGJlaGluZCwgc2ltcGx5IGJlY2F1c2Ugd2hlbiB3ZSBmbG9wIGEgc2V0LCB3ZSBjYW4gd2luIGEgbWFzc2l2ZSBwb3QsIGV2ZW4gaWYgd2UgbG9zZSBtb3N0IG9mIHRoZSB0aW1lLgpNYXJzaG1hbGxvd29wb3NzdW0gIDUxIHBvaW50cyAgc3VibWl0dGVkIDUgZGF5cyBhZ28KQ2FuIEZ1bkZhaXIgYWxzbyBkbyBwb2tlcgpCYWxhcmluIGFuZCBGYXJyZW4gY2l0ZSB0aGUgY2xvc2UgcmVsYXRpb25zaGlwIGJldHdlZW4gTW90aGVyIExvbmRvbiBhbmQgS0ZDIGFzIGEgcmVhc29uIGZvciB0aGVpciBzdWNjZXNzZnVsIHBhcnRuZXJzaGlwLiAiVGhhdCBzb3VuZHMgcmVhbGx5IGNoZWVzeSwgYnV0IGV2ZXJ5b25lIGlzIHN1cGVyIGNsZWFyIG9uIHdoYXQgd2UncmUgdHJ5aW5nIHRvIGRvLCIgc2F5cyBGYXJyZW4uICJUaGUgYWdlbmN5IHVuZGVyc3RhbmRzIGF0IGEgcmVhbCwgaW50aW1hdGUgbGV2ZWwgb2YgZGV0YWlsIHdoYXQgaXMgZ29pbmcgb24uIgpDcmFmdCBicmV3cHViIHBsYW5uZWQgZm9yIG9sZCBDaXZpYyBWaWRlbyBidWlsZGluZyBpbiBLYXRvb21iYQpGaW5hbCByZWNvcmRzIHJlbGVhc2VkIGJ5IHBvbGljZSBpbiBMYXMgVmVnYXMgbWFzcyBzaG9vdGluZwpIaXR0aW5nIGZpZnRoIGluIHRoZSBvcmRlciwgTGV3aXMgY2FtZSB1cCB0byB0aGUgcGxhdGUgaW4gdGhlIDh0aCB3aXRoIHRoZSBwb3RlbnRpYWwgdHlpbmcgcnVucyBvbiBiYXNlLCBidXQgaGUgd2hpZmZlZCBvbiB0aHJlZSBwaXRjaGVzLiAKWW91IGdvdCB0aGlzLiAKVHdvIG1vbnRocyBhZnRlciBJIHF1aXQsIG15IHJlbGF0aW9uc2hpcCBvZiA0IHllYXJzIGZlbGwgYXBhcnQuIEkgd2FzIGxlZnQgam9ibGVzcyBhbmQgcmVsYXRpb25zaGlwIGxlc3MuIApIb3QgU3RvbmUgICBIb3QgU3RvbmUgTWFzc2FnZSBpcyBhIHNwZWNpYWx0eSBtYXNzYWdlIHdoZXJlIHRoZSB0aGVyYXBpc3QgdXNlcyBzbW9vdGgsIGhlYXRlZCBzdG9uZXMsIGVpdGhlciBhcyBhbiBleHRlbnNpb24gb2YgdGhlaXIgb3duIGhhbmRzLCBvciBieSBwbGFjaW5nIHRoZW0gb24gdGhlIGJvZHkgd2hpbGUgdGhleSBtYXNzYWdlIG90aGVyIHBhcnRzIG9mIHRoZSBib2R5LiBUaGUgaGVhdCBjYW4gYmUgYm90aCBkZWVwbHkgcmVsYXhpbmcgYW5kIGhlbHAgd2FybSB1cCB0aWdodCBtdXNjbGVzIHNvIHRoZSB0aGVyYXBpc3QgY2FuIHdvcmsgbW9yZSBkZWVwbHksIG1vcmUgcXVpY2tseS4uIApJbiB0aGUgZmlyc3Qgb2YgdHdvIHR3ZWV0cyBvbiBTdW5kYXksIGhlIGNpdGVkIHByb2dyZXNzIGluIHRhbGtzIHdpdGggQ2hpbmEgb24gaXNzdWVzIGluY2x1ZGluZyBJUCBwcm90ZWN0aW9uLCBhZ3JpY3VsdHVyZSBhbmQgY3VycmVuY3kgcmF0ZXMuIApUaGF0IGxvdmUgdHJpYW5nbGUgc3R1ZmYgd2FzIGNsZWFybHkganVzdCBhIHN1YnBsb3QgaW4gdGhlIGZpbG0gc2VyaWVzIGFuZCBpcyBhIHZlcnkgcmVhc29uYWJsZSBwbG90IHBvaW50IGNvbnNpZGVyaW5nIHRoZSBjaGFyYWN0ZXJzIGFyZSB0ZWVuYWdlcnMgYW5kIGdvIHRocm91Z2ggc29tZSBpbnNhbmUgc2hpdC4gCkV2ZW50dWFsbHkgdGhleSByZWFsaXplZCBzaGUgd2FzIG5vdCBqdXN0IHRhbGtpbmcgYWJvdXQgInJlbGlnaW91cyBmdWNrcyIgYnV0IGFib3V0IGhvdyBhbGwgdHJhZGl0aW9ucyBoYXZlIHZhbHVlIGJ1dCB0aW1lcyBjaGFuZ2UgYW5kIGl0IHRha2VzIGEgY3JpdGljYWwgbWFzcyBvZiBhYm91dCAiMTAsMDAwIG1hbmlhY3MiIHRvIG1ha2UgdGhhdCBjaGFuZ2UgaGFwcGVuLiBUaGV5IGhhZCBhbHJlYWR5IHN0YXJ0ZWQgamFtbWluZyB0b2dldGhlciBhbmQgaGFkIGZsb2F0ZWQgdGhlIGlkZWEgb2Ygc3RhcnRpbmcgYSBiYW5kIHdoZW4gb25lIG9mIHRoZW0gc2FpZCAobm8gb25lIHJlbWVtYmVycyB3aG8pLCAiMTAsMDAwIE1hbmlhY3M/IFdoYXQgYSBncmVhdCBiYW5kIG5hbWUuIiBBbmQgdGhlcmUgd2FzIGJhc2ljYWxseSBhIG1vbWVudCBvZiwgImFyZSB3ZSBkb2luZyB0aGlzPyBMZXQgZG8gdGhpcy4iIFRoaXMgd2FzIG5vdCBlbnRpcmVseSB0cnVlLCBob3dldmVyLiAKQW50aHJvcG9nb25pcXVlLCBwb3VycXVvaT8gQmllbiBhdSBkZWwgZHUgY3VsdGUgZHUgY2huZSB0ZW5kdSAgdG91dGUgbCBjZWx0aXF1ZSBiaWVuIGF2YW50IGwgcHIgY2hydGllbm5lLCBsZSBjaG5lIGFwcGFyYXQgY29tbWUgdW4gYW5jdHJlOiBjIGxlIGNhcyBlbiBHZXJtYW5pZSwgbWFpcyBhdXNzaSBlbiBTY2FuZGluYXZpZSBvLCBzZWxvbiBsYSBteXRob2xvZ2llIHByb3ByZSAgY2V0dGUgcmdpb24gZCBsZXMgcHJlbWllcnMgaG9tbWVzIG4gcGFzIGF1dHJlIGNob3NlIHF1ZSBkZXMgY2huZXMuIApNaXNnaXZpbmdzIC4gV2hlcmUgYXJlIHdlIGdvaW5nPy4gCk15IGZpYW5jZSBpcyBhIHN3ZWV0IGhlYXJ0IGFuZCBJIGxvdmUgaGVyLiAKU2VlbXMgbGlrZSBtdWNoIG1vcmUgdGhhbiBhIGNvaW5jaWRlbmNlIHRoYXQgZGVsZXRpb25zIHdlcmUgbWFkZSBkdXJpbmcgZXhhY3QgdGltZSBmcmFtZXMgVEggd2FzIGF0IHNhbHZhZ2UgeWFyZC4gCkkgaG9uZXN0bHkgYW1hemVkIGF0IHRoZSBhbW91bnQgb2YgY3VzdG9tZXJzIHdobyBhc2sgd2h5IHRoZSBiYWdzIGFyZSBkaWZmZXJlbnQgY29sb3JzLiAKQm9hcmQgY2VydGlmaWNhdGlvbiBpcyBhdmFpbGFibGUgdGhyb3VnaCB0aGUgTmF0aW9uYWwgQ2VydGlmaWNhdGlvbiBCb2FyZCBmb3IgVGhlcmFwZXV0aWMgTWFzc2FnZSBCb2R5d29yay4gCkl0J3MgdGhlIHJlcGxpY2FibGUgcmVzdWx0cyB0aGF0IEdpbGJlcnQgTGV3aWVuIGJlbGlldmVzIGNhbiBjaGFuZ2UgdGhlIGdhbWUgZm9yIG1hc3NhZ2UgdGhlcmFwaXN0cy4KU28gbGV0IHNlZS4gQWNjb3JkaW5nIHRvIGEgVU4gcmVwb3J0LApBbmQgYmx1ZXByaW50cyB0byBtb3N0IGhvbWVzIGFyZSBwdWJsaWMgcmVjb3JkIHdoZW4geW91IGZpbGUgZm9yIGEgYnVpbGRpbmcgcGVybWl0IHNvIGlmIHNvbWVvbmUgd2FudGVkIHRvLCB0aGV5IGNvdWxkIGFscmVhZHkgZ28gbG9vayB1cCB3aGF0IHlvdXIgaG91c2UgYnVpbGRpbmcgcGxhbnMgYXJlLgpEb3dudG93biBpcyBsaWtlIDEwLiAKSG93ZXZlciwgZm9vZCBwcm9jZXNzaW5nIGFuZCBpbmR1c3RyaWFsIGFncmljdWx0dXJlLCBpbmNsdWRpbmcgbW9ub2N1bHR1cmUgY3JvcCBwcmFjdGljZXMgYW5kIHRoZSB1c2Ugb2YgbWFnbmVzaXVtIGRldm9pZCBmZXJ0aWxpemVycywgaGF2ZSBsZWQgdG8gc29pbCBlcm9zaW9uIGFuZCBkZXBsZXRpb24gb2YgbWFnbmVzaXVtIGNvbnRlbnQgaW4gb3VyIGZvb2QgKDcpLiBNYWduZXNpdW0gaXMgbGlrZXdpc2UgcmVtb3ZlZCBmcm9tIG1vc3QgZHJpbmtpbmcgd2F0ZXIgc3VwcGxpZXMsIHJlbmRlcmluZyBtYWduZXNpdW0gZGVmaWNpZW5jeSBhbiBpbmV2aXRhYmlsaXR5ICgxMSkuIEFzIHN1Y2gsIG91ciBkYWlseSBpbnRha2Ugb2YgbWFnbmVzaXVtIGhhcyBzdGVhZGlseSBkZWNsaW5lZCBmcm9tIDUwMCBtaWxsaWdyYW1zIChtZykgcGVyIGRheSB0byAxNzUgbWcgcGVyIGRheSAoNykuIFRoZSBudXRyaWVudCBwb29yLCBlbmVyZ3kgZGVuc2UgZGlldGFyeSBwYXR0ZXJucyB3aGljaCBoYXZlIGNvbWUgdG8gZG9taW5hdGUgdGhlIGluZHVzdHJpYWxpemVkIGxhbmRzY2FwZSBhcmUgYWxzbyBpbnN1ZmZpY2llbnQgaW4gdGhlIGZpYmVyIHJpY2ggZnJ1aXRzIGFuZCB2ZWdldGFibGVzIHdoaWNoIGNvbnRhaW4gbWFnbmVzaXVtLgpOYXQgc2luZCBkaWUgU3VwZXJzdGFycyBTaWRuZXkgQ3Jvc2J5IHVuZCBhdWNoIEV2Z2VuaSBNYWxraW4gZG9ydCBhdWNoIGluIGRlciBrb21tZW5kZW4gU3BpZWx6ZWl0IGFuIE51bW1lciBFaW5zIHVuZCBad2VpIGdlc2V0enQuIERvY2ggZGllIFBvc2l0aW9uZW4gZGFoaW50ZXIgc2luZCBkZXJ6ZWl0IG5vY2ggaW4gZGVyIFNjaHdlYmUuIE9za2FyIFN1bmRxdmlzdCB3dXJkZSBrIHRyYW5zZmVyaWVydCwgdW5kIE5pY2sgQm9uaW5vIGlzdCBlaW4gVUZBLgpJIGRvaW5nIGEgc2xpZ2h0IHRhcGVyIG92ZXIgdGhlIG5leHQgdHdvIHdlZWtzIGZvciBhIEhNIFBCIGF0dGVtcHQgbWlkIE1hcmNoIGJ1dCBvdGhlcndpc2UgaGF2ZSAxMiB3ZWVrcyBiZWZvcmUgbXkgQSByYWNlICh0aGUgRWRpbmJ1cmdoIE1hcmF0aG9uKS4gSSByZWFsbHkgZW5qb3kgZ2V0dGluZyBvdXQgYW5kIGdvaW5nIGxvbmcsIGV4cGxvcmluZyBuZXcgcGxhY2VzIGV0Yy4gc28gaGVyZSBteSBxdWVzdGlvbjoKTm90IGp1c3Qgc2hvcnQgKG9idmlvdXNseSBzaGUgbG9zdCBpdCBkdXJpbmcgdGhlIGNoZW1vKSwgYnV0IGl0IGFsc28ga2luZGEgYnV0Y2ggKHRoZXJlIGFyZSB3YXlzIHRvIGN1dCBzaG9ydCBoYWlyIHRvIHNpZ25pZnkgImZlbWluaW5pdHkiIGlmIG9uZSB3YW50cyBvciBuZWVkcyB0bykuIApFYXN5IHRoZXJlIHdlaXJkbyAsIGlmIGl0IHdhcyBhIGd1eSBpbnN1bHRpbmcgYSBndXkgSSB3b3VsZCBmaW5kIGl0IGVxdWFsbHkgZnVubnkuIEkgdGhpbmsgYWN0dWFsbHkgbW9yZSBmdW5ueSBzaW5jZSBhIGxvdCBvZiBnaXJscyBhcmVuIG5hdHVyYWxseSBkcmF3biB0byBtYWtpbmcgZnVuIG9mIHRoZWlyIGZyaWVuZHMgYW5kIGFjcXVhaW50YW5jZXMgYXMgYSBmb3JtIG9mIGZsYXR0ZXJ5IHdoZXJlYXMgZ3V5IGZyaWVuZC9ncm91cHMgb2Z0ZW4gd2lsbCBpbnN1bHQgZnJpZW5kcyBtb3JlIHRoYW4gc3RyYW5nZXJzIG9yIGVuZW1pZXMuIEl0IGEgcG9kY2FzdCB3aGVyZSB0aGV5IG9uIGp1c3QgdG8gdHJhc2ggdGFsayBlYWNoIG90aGVyIHNvIGlkayB3aHkgeW91IGFyZSBTSldpbmcgb3ZlciB0aGUgY2xpcCB1bmxlc3MgeW91IGFyZSBvbmUgb2YgYmFkYnVubnlzIHRvcCBkb25vcnMgdGhlbiBpdCBtaWdodCBtYWtlIHNlbnNlLgpUaGUgbW9zdCBpbXBvcnRhbnQgbHlyaWNzIG9mIGFueSBWYW1waXJlIFdlZWtlbmQgc29uZyBzaGVkcyB0aGVzZSBwcmV0ZW5zZXMgYW5kIGN1dHMgdG8gdGhlIHBvaW50ICAgaXQncyBtb3N0IGV2aWRlbnQgb24gdGhlIGJhY2sgaGFsZiBvZiBDb250cmEgYW5kIGFsbCBvZiBNVk9UQy4gCk5vIG1hdHRlciB3aG8geW91IHNlYXJjaCB3aXRoIHRoZSByZXN1bHRzIGFyZSBzb21laG93IGxpbmtlZCB0byBnb29nbGUgYW5kIGluZmx1ZW5jZWQgYnkgdGhlaXIgcmVzdWx0cy4gCjkgb2YgdGhlbSB3aWxsIGRyYWluIGEgNSBnYWxsb24gYnVja2V0IGluIGFib3V0IDQ1IHNlY29uZHMuIApQaHlzV2luKHVudGVyIEZpcnN0IEl0IHVuZCBTd2lzc0NoaXJvUG9vbCloYXQgZGFydW0gYmVyZWl0cyAyMDEzIGRpZSBUYXh3ZXJ0ZSBhbiBkaWUgVmVyc2ljaGVyZXIgZ2VoZWZ0ZXQgdW5kIGVybGF1YnQgcHJvIEthbnRvbiBiaXMgenUgOSB2ZXJzY2hpZWRlbmUgVGFyaWZlIGJ6dy4gVGFyaWZncnVwcGVuLCBkaWUgZGVyamV3ZWlsaWdlbiBLYXNzZXp1Z2V3aWVzZW4gd2lyZC4gRWlubWFsIHp1Z2V3aWVzZW4gc2luZCBkaWUgUmVjaG51bmdlbiBzbyBvaG5lIFByb2JsZW1lIGdlZHJ1Y2t0LCBlbGVrdHJvbmlzY2ggdmVyc2NoaWNrdCBvZGVyIGJlciBlaW4gVHJ1c3RDZW50ZXIvcnp0ZWthc3NlIGFiZ2VyZWNobmV0LiBEYXp1IHdpcmQgZGVyIFN0YW5kYXJkIFhNTCA0LjMgKGJlcmVpdHMgdm9yYmVyZWl0ZXRYTUwgNC40KSBiZW51dHp0LiBEaWUgS2Fzc2VuIHdlcmRlbiBtaXQgZGVyIExpc3RlIGRlciBNZWRpRGF0YSBhYmdlZ2xpY2hlbiB1bmQgZXJyZWljaGVuIHNvIGltbWVyIGRpZSByaWNodGlnZSBaYWhsc3RlbGxlIG1pdCBkZW4ga29ycmVrdGVuIERhdGVuLiBEYWJlaSBlcmZsbHQgUGh5c1dpbiBhbGxlIFZvcmdhYmVuIGRlcyBGb3J1bSBEYXRlbmF1c3RhdXNjaCwgZGVyIFZhbGlkaWVydW5nIHVudGVyIFN1bWV4IDIuMiwgZGVyIHRhcmlmc3Vpc3NlIHVudGVyIFRhcmlmIDMxMS8gMzExIEFTUEkvIDMxMSBwaHlzaW9zd2lzcyB1bmQgZGVyIE1lZGlEYXRhLgpXaGVuIHlvdSBhcmUgbm90IGhhdmluZyB0aGlzIG11dHVhbCB1bmRlcnN0YW5kaW5nIGl0IGNhbiBjYXVzZSByZXNlbnRtZW50IGluIHJlbGF0aW9uc2hpcHMuIApZb3UgY2FuIHByZXBhcmUuIE9uY2UgdGhlIGZpcnN0IG1vdGlvbiBpcyBmaWxlZCwgdGhlIG90aGVyIHNpZGUgdHlwaWNhbGx5IGhhcyBvbmx5IHR3byB3ZWVrcyB0byByZXNwb25kIHRvIGl0LiAKSSBoYWQgbGVhcm5lZCBhdCB0aGlzIHBvaW50IGl0IGJlc3QgdG8ganVzdCBjb29wZXJhdGUgd2l0aCB0aGVtLiBIZSB3YWxrcyBvdmVyIHRvIG1lLCBhbmQgYXMgSSBleHBlY3RpbmcgaGltIHRvIGNoYWluIG1lIHRvIHRoZSB3YWxsLCBoZSBncmFicyBhIHBhaXIgb2YgcGxpZXJzIGFuZCByaXBzIG91dCBvbmUgb2YgbXkgZmluZ2VybmFpbHMuIApGcmFua2x5LCB3aG8gaGFzIHRpbWUgdG8gZGF0ZSBhbnltb3JlLCBsZXQgYWxvbmUgZmluZCB0aGUgcGVyZmVjdCBtYXRjaD8gTWUgdXNlcyB5b3VyIHBvc3QgY29kZSB0byBzZWFyY2ggeW91ciBsb2NhbCBhcmVhIGFuZCBsb2NhdGUgc2luZ2xlIENocmlzdGlhbnMgd2hvIHdhbnQgdG8gc3RhcnQgZGF0aW5nLiAKSSBoYWQganVzdCBnb3R0ZW4gYSBob2xvIGNoYW5jZXkgY2FyZCB3aGljaCBJIHdhcyBlY3N0YXRpYyBhYm91dCwgYW5kIEkgb25seSBuZWVkZWQgYSBjaGFyaXphcmQgdG8gY29tcGxldGUgbXkgY29sbGVjdGlvbiBvZiAxNTAuLiAKNjggcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvClVuZW1wbG95bWVudCByYXRlIHJvc2Ugc2xpZ2h0bHkgaW4gRmVicnVhcnkgdG8gNS40IHBlciBjZW50IGZyb20gNS4yIHBlciBjZW50IHRoZSBwcmV2aW91cyBtb250aC4gClRoZSBsYXcgaXMgdGhhdCBjaGlsZHJlbiBjYW4gYmUgZ2l2ZW4gb25lIG9yIHR3byBnaXZlbiBuYW1lcyBhbmQgYSBtaWRkbGUgbmFtZSBvciBvbmUgdG8gdGhyZWUgZ2l2ZW4gbmFtZXMgd2l0aG91dCBhIG1pZGRsZSBuYW1lLiBNaWRkbGUgbmFtZXMgYXJlIHVuY29tbW9uIGFuZCBtb3JlIHRoYW4gdHdvIGdpdmVuIG5hbWVzIGFyZSBhbHNvIHVuY29tbW9uLiAyNCBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpXZSBoYXZlIHRhbGtlZCBhYm91dCBpdC4uIApNeSBNaUwgd2FzIHRyYXVtYXRpemVkLi4gCldoYXQgaGUgc2FpZCBpbiB0aGUgb3JpZ2luYWwgcG9zdCB3YXMgdGhhdCBpdCBjYW4gbW92ZSBhcm91bmQgbW9yZSBlYXNpbHksIHdoaWNoIGlzIHRydWUuIApEaWUgT21lciBpc3QgZGFzIHBlaW5saWNoLCBzaWUgbWNodGUgZGFzIG5pY2h0IGRhcyBzb3ZpZWwgVHJ1cmJlbCB1bSBzaWUgZ2VtYWNodCB3aXJkLiBJY2ggc2FnZSAiRnJlc3NlIGpldHp0IEhleGVuZ2VzaWNodCwgZXMgaXN0IDEgU2FjaGUgdm9uIEVocmUgamV0enQuIApXYXJlbiBub2RpZyBvb2sgd2FudCBoZXQgYmVnb24gem93YWFyIHRlIGhhZ2VsZW4gZW4gc25lZXV3ZW4hISEgTGFuZ3MgTGV1cHAgZW4KQmV5b25kIHRoZSBlbm9ybW91cyBkaXNyZXNwZWN0IGludm9sdmVkIGluIHRoaXMgc29ydCBvZiB0aGluZywgdGhlIGlzc3VlIHdpdGggbWFraW5nIHJhY2lzdCBqb2tlcyBhbmQgTmF6aSBzYWx1dGVzIGFuZCBzdWNoIHRvIGJlIGFuIGVkZ2Vsb3JkIGlzIHRoYXQgaXQgbm9ybWFsaXplcyB0aGF0IGJlaGF2aW9yIGFuZCBtYWtlcyB5b3UgYW4gZWFzaWVyIHRhcmdldCBmb3IgYWN0dWFsIHJhY2lzdHMgYW5kIE5hemlzIHRvIGdldCB0aGVpciBicmFpbndhc2hpbmcgaG9va3MgaW4uIApIZSB3YXMgb3BlbiBhYm91dCBoaXMgbGlmZSBhbmQgdGhlIGNoYWxsZW5nZXMgaGUgZmFjZWQuIApTb21ldGltZXMgeW91IHNpbXBseSBjYW4ndCBnZXQgb2ZmIHlvdXIgZmVldCwgYmVjYXVzZSB5b3VyIGpvYiByZXF1aXJlcyB5b3UgdG8gc3RhbmQgb3Igd2FsayBhIGxvdCBvciBiZWNhdXNlIHlvdSdyZSBzdHVjayBpbiBhbiBhcmVhIHdoZXJlIHRoZXJlIGlzbid0IGEgcGxhY2UgdG8gc2l0IGRvd24uIEluIHRoZSBsYXR0ZXIgc2l0dWF0aW9uICAgZm9yIGluc3RhbmNlLCBpZiB5b3UncmUgc2lnaHRzZWVpbmcgb3Igc2hvcHBpbmcgYWxsIGRheSAgIGRvIHdoYXRldmVyIHlvdSBjYW4gdG8gdGVtcG9yYXJpbHkgcmVsaWV2ZSB0aGUgcHJlc3N1cmUgb24gZWFjaCBmb290LiBXYWxrIGFzIG11Y2ggYXMgeW91IGNhbiByYXRoZXIgdGhhdCBzdGFuZGluZyBzdGlsbDsgd2lnZ2xlIHlvdXIgdG9lczsgc2hpZnQgYmFjayBhbmQgZm9ydGggZnJvbSBvbmUgZm9vdCB0byBhbm90aGVyOyBzdGFuZCBvbiBvbmUgZm9vdCB3aGlsZSBsaWZ0aW5nIHRoZSBvdGhlciBzbGlnaHRseSBvZmYgdGhlIGdyb3VuZCBhbmQgcm90YXRpbmcgdGhlIGFua2xlLi4gCldoYXQgYSBncmVhdCBydW5uaW5nIHRpdGxlIHRoaXMgaXM6ICJUaGUgRWFydGggYSB2YXN0IGJvbWJzaGVsbCIhIEl0IGFwcGVhcnMgaW4gYSBzZWN0aW9uIG9uIGVhcnRocXVha2VzIGFuZCB2b2xjYW5vZXMgaW4gYSBwb3B1bGFyIHNlcmllcyBieSBEaW9ueXNpdXMgTGFyZG5lciBUaGUgTXVzZXVtIG9mIFNjaWVuY2UgYW5kIEFydCAodm9scyBJSUkgSVYpLiBMYXJkbmVyIHJlYWNoZXMgdGhpcyBjb25jbHVzaW9uIGFmdGVyIHJlYXNvbmluZyB0aGF0IGlmIHRoZSBpbmNyZWFzZSBpbiB0ZW1wZXJhdHVyZSBvZiB0aGUgZWFydGggaW5jcmVhc2VzIGFzIGl0IHNlZW1zIHRvIHRoYXQgYXQgdGhlIGRlcHQgb2YgNDAgbWlsZXMgdGhlIEVhcnRoIHdvdWxkIGhhdmUgYSB0ZW1wZXJhdHVyZSBvZiA0MDAwMCwgaW5jcmVhc2luZyAxIGRlZ3JlZSBmaXIgZXZlcnkgZmlmdHkgZmVldCBvZiBkZXB0aCwgIm9yIDEwMDAgcGVyIG1pbGUiLiBJcyBubyByaGV0b3JpY2FsIGV4YWdnZXJhdGlvbiwgdGhlbiwgdG8gYWZmaXJtIHRoYXQgdGhlIGdsb2JlIHdlIGxpdmUgb24gaXMgYSBzdHVwZW5kb3VzIGJ5IHZlcnkgdGhpbiBib21ic2hlbGwgY2hhcmdlZCB3aXRoIGxpcXVpZCBmaXJlISIuIApCZWF1dGlmdWwgcGxhY2UsIHZlcnkgZ29vZCBmb29kIGFuZCBwcmljZXMgYXJlIHN0aWxsIGdyZWF0IGZvciB3aGF0IHlvdSBnZXQuLiAKQW5vdGhlciB0aGluZyB0aGF0IGhhcyBiZWNvbWUgZXh0cmVtZWx5IHBvcHVsYXIgaW4gdGhlc2UgeWVhcnMgaXMgb25saW5lIHBva2VyIGdhbWVzLiAKVHdvIHRoaXJkcyBvZiBzbG90cyBwbGF5ZXJzIGFyZSB3b21lbiBvbGRlciB0aGFuIDQwLCB3aGlsZSB0aHJlZSBxdWFydGVycyBvZiB0YWJsZSBnYW1lIGN1c3RvbWVycyBhcmUgbWVuIHVuZGVyIDQwLCBhY2NvcmRpbmcgdG8gaGlzIGFuYWx5c2lzLgpJZiB5b3UgcGxheSBhbiBpbnN0cnVtZW50LCBqb2luIGEgYmFuZC4gClRoaXMgaXMgdGhlIENhbnlvbiBSYW5jaCBvZiBBc2lhLCBhIGRlc3RpbmF0aW9uIHNwYSBvbiBzZXZlbiBhY3JlcyBmcm9udGluZyB0aGUgR3VsZiBvZiBUaGFpbGFuZC4gClJlY2VudCByZXNlYXJjaCBmcm9tIE9mY29tLCB0aGUgYnJvYWRjYXN0IHJlZ3VsYXRvciwgZm91bmQgdGhhdCBjaGlsZHJlbiBhZ2VkIGZvdXIgdG8gMTUgcG90ZW50aWFsbHkgd2F0Y2hlZCBUViBnYW1ibGluZyBhZHZlcnRzIDQ3MyB0aW1lcyBpbiBqdXN0IDEyIG1vbnRocy4gSXQgZm9sbG93cyBhIGRlY2lzaW9uIGJ5IHRoZSBsYXN0IExhYm91ciBnb3Zlcm5tZW50IHRvIGFsbG93IGFkdmVydHMgdG8gYmUgYnJvYWRjYXN0IGJlZm9yZSB0aGUgOXBtIHdhdGVyc2hlZC4KQmVjYXVzZSB0aGVyZSBhcmUgcG9saXRpY2FsIGZvcmNlcyB3aG8gd2FudCB0byBlbmZvcmNlIHRoZSB1c2Ugb2YgZ2VuZGVyZWQgbGFuZ3VhZ2UuIGluIHNvbWUgdW5pdmVyc2l0aWVzIGFuZCBzb21lIGFkbWluaXN0cmF0aW9ucy4gRm9yY2luZyBwZW9wbGUgdG8gdXNlIGxhbmd1YWdlIGFzIHBlciB5b3VyIHNrZXdlZCBwZXJjZXB0aW9uIGlzIG9wcHJlc3NpdmUuCkkgdGhpbmsgdGhlIGJhZyBpcyBhIG5pY2Ugc2hhcGUgICB0aGUgZm9vdCBib3ggaW4gcGFydGljdWxhciBpcyBhIGdvb2QgY29tZm9ydGFibGUgYW5nbGUgdG8ga2VlcCB5b3VyIGZlZXQgd2VsbCBpbnN1bGF0ZWQuIFRoZSBkZWZhdWx0IDU1LzQ1IHNwbGl0IG9mIGRvd24gYWJvdmUgYW5kIGJlbG93IGZlZWxzIGFib3V0IHJpZ2h0IHRvIG1lIHRvby4gSSAxNjJjbSB0YWxsIGFuZCB0aGUgUyBpcyBhIHJlYWxseSBnb29kIGZpdCAgIHRoZSBiYWcgaXNuIHN1cGVyIHNsaW0gYnV0IGlmIHlvdSBoYXZlIGJyb2FkIHNob3VsZGVycy9oaXBzIEkgZGVmaW5pdGVseSBkb3VibGUgY2hlY2sgd2hldGhlciB5b3UgbmVlZCB0aGUgd2lkZXIgb3B0aW9ucy4gVGhlIGhvb2QgaXMgcXVpdGUgYmFzaWMgYW5kIHdpZGUsIGJ1dCBub3QgYXMgdXNlbGVzcyBhcyB0aGUgaW1hZ2VzIG9uIHRoZWlyIHNpdGUgbWFrZSBpdCBsb29rLgpNeSB0cmFpbmluZyB3YXMgZWZmZWN0aXZlbHkgNiB3ZWVrcyB3b3J0aCBhbmQgdGhhdCBpbmNsdWRlZCBvbmx5IG9uZSBsb25nIHJ1bi4gClRoZSBhcmVhIGRpZCByZWNlaXZlIHNldmVyYWwgaW5jaGVzIG9mIGxha2UgZWZmZWN0IHNub3cgeWVzdGVyZGF5Li4gClRoZSBMaXN0OiBUcmFkZSBhbmQgcHJvZmVzc2lvbmFsIG9yZ2FuaXphdGlvbnMgKGluZGl2aWR1YWxzKSwgT2N0LiAxNSwgMjAxOCBPY3QuIDE1LCAyMDE4IEJ5IFZFR0FTIElOQyBzdGFmZiBGaW5kIG91dCBhYm91dCB0cmFkZSBhbmQgcHJvZmVzc2lvbmFsIG9yZ2FuaXphdGlvbnMgKGluZGl2aWR1YWxzKS4gVGhpcyB3ZWVrIHdlIHJhbmsgdGhlbSBieSBtZW1iZXJzIGFzIG9mIFNlcHQuIDE1LgpTZWUgaGUgd2Fzbid0IGEgTmF0aW9uYWxpc3QgaGUgd2FzIGEgZ2xvYmFsaXN0LiAKVGhleSBhcmUgdGhlIG9uZXMgd2l0aCB0aGUgdGltZSBhbmQgZW5lcmd5LiBXZSBwYXkgdGhlbSB3ZWxsLiBXZSwgYXMgY2l0aXplbnMsIHdlcmUgc29sZCBhIGJhZCBiaWxsIG9mIGdvb2RzLiAKQWxsIHRoZXkgY2FuIGRvIGlzIHByb21wdCB5b3UgdG8gZW1hc2N1bGF0ZSB5b3Vyc2VsZi4uIApUaGlzIHRocmVhZHMgYSBmdWNraW5nIHJvbGxlcmNvYXN0ZXIuIEFwcGFyZW50bHkgdGhpcyBzdHJlYW1lciBoYXMgYm90aCAib2J2aW91c2x5IGhlYXJkIHRoaXMgdHJhY2sgYmVmb3JlIGFzIG90aGVyd2lzZSB0aGlzIGlzIGltcG9zc2libGUiIGFuZCBhdCB0aGUgc2FtZSB0aW1lIGlzIGFsc28gImRpc3BsYXlpbmcgYSB2ZXJ5IG9yZGluYXJ5IHRhbGVudCB0aGF0IGFueSBwcm9mZXNzaW9uYWwgbXVzaWNpYW4gaGFzIi4gSWYgeW91IG5vdCBhbGxvd2VkIG9uIHRoYXQgcmlkZSBiZWNhdXNlIG9mIGEgcHJlIGV4aXNpdG5nIG1lZGljYWwgY29uZGl0aW9uLCB5b3UgY2FuIGhvcCBvdmVyIG9udG8gdGhlIHNsaWdodGx5IGxlc3MgamFycmluZyAib25seSBwb3B1bGFyIG9uIHR3aXRjaCBiZWNhdXNlIHNoZSBob3QgYW5kIGJsb25kZSIgYW5kICJhIGJyZWF0aCBvZiBmcmVzaCBhaXIgYmVjYXVzZSBzaGUgc28gY29uc2VydmF0aXZlbHkgZHJlc3NlZCIgcmlkZS4uIApJdCB3b3VsZCBiZSB1bndpc2UgdG8gYnJpbmcgeW91ciBlbnRpcmUgYmFua3JvbGwgYXQgYW55IG9uZSB0aW1lIG9yIHRvIHVzZSBhbGwgdGhlIG1vbmV5IHlvdSBoYXZlIHdpdGggeW91IHRvIGJ1eSBjaGlwcyByaWdodCBvZmYuIE5vdCBvbmx5IGFyZSB0aGVyZSB1cHMgYW5kIGRvd25zIGR1cmluZyBhIHNpbmdsZSBwb2tlciBzZXNzaW9uIGJ1dCBhbHNvIHVwcyBhbmQgZG93bnMgb3ZlciBhIHBlcmlvZCBvZiB0aW1lLiAKTGl2aW5nIGluIGEgcG9zdCBnZW5kZXIgd29ybGQgdGhhdCBpcyBzaW11bHRhbmVvdXNseSBwYXRyaWFyY2hhbCBtYXkgc2VlbSBpbXBvc3NpYmxlLCBhbiBveHltb3JvbiB3cml0dGVuIG9uIHRoZSBib2R5IGFuZCBsaXZlcyBvZiBhY2FkZW1pYyBzb3J0cyBsaWtlIG1lLiBCdXQgSSB0aGluayBwb3N0IGdlbmRlciBtaWdodCBiZSB0aGUgY29ycmVjdCByZXNwb25zZSB0byBwYXRyaWFyY2h5ICBhbiBhYnNvbHV0ZSByZWZ1c2FsIHRvIGxvY2F0ZSBvdXJzZWx2ZXMgb24gZWl0aGVyIHNpZGUgb2YgdGhlIGdlbmRlciBiaW5hcnkgc28gdGhhdCBodW1hbnMgd2l0aCBhbnkgc29ydCBvZiBib2R5IHBhcnRzIGFuZCBhbnkgZ2VuZGVyIGV4cHJlc3Npb24gY2FuIGpvaW4gdG9nZXRoZXIgdG8gc2F5IHRoYXQgYm9kaWVzICBvZiB3aGF0ZXZlciBnZW5kZXIgIGRlc2VydmUgcHJvdGVjdGlvbiBmcm9tIHN0YXRlIGludGVyZmVyZW5jZSBpbiB0aGUgZm9ybSBvZiBmb3JjZWQgcHJlZ25hbmN5LCBoYXRlIHNwZWVjaCBpbiB0aGUgZm9ybSBvZiBibGFtaW5nICJ3b21lbiwiIGFuZCB2aW9sZW5jZS4uIApTbyB3ZSBTSE9VTEQgYmUgZ2l2aW5nIHBlb3BsZSByZXNwZWN0IGJlY2F1c2UgdGhleSBwZW9wbGUsIG5vdCBiZWNhdXNlIHRoZXkgImxvb2siIGxpa2UgdGhleSBnZXR0aW5nIGhlYWx0aHkgdG8gdXMuIApFdmVyeSB5ZWFyIHdoZW4gSSB3cml0ZSB0aGlzIEkgZmVlbCBhIGJpdCBsaWtlIGEgc2NodWNrIGJ1dCB3YW50IHBlb3BsZSB0byB1bmRlcnN0YW5kIHNvbWV0aGluZyBpcyBhIGZhbnRhc3RpYyBjaGFyaXR5IHRoYXQgd29ya3MgdGhyb3VnaCBUNFQgYSBuYXRpb25hbGx5IGdvdmVybmVkIG9yZ2FuaXphdGlvbiB3aXRoIGEgbG90IG9mIHJ1bGVzLiBUaGUgYmlnIG9uZXMgYXJlOiBBIGNoaWxkIG11c3QgYmUgYmUgbGl2aW5nIHdpdGggcGFyZW50cyBvciBsZWdhbCBndWFyZGlhbnMgYXQgYW4gYWRkcmVzcyB0aGF0IGlzIHZlcmlmaWFibGUgdG8gdGhhdCBhZHVsdC4gCllvdSBoYXZlIGJlZW4gd2FybmVkLkhlcmUgaXMgYSB0cmFuc2xhdGlvbiBpbnRvIEVuZ2xpc2g6QmVjYXVzZSBvZiByZWNlbnQgZXZlbnRzIEkgd291bGQgbGlrZSB0byBpbmZvcm0geW91IHRoYXQgdGhlIHRyYWRpdGlvbmFsIFRoYWkgbWFzc2FnZSBpcyBhIG1hc3NhZ2Ugd2l0aG91dCBzZXh1YWwgY29udGVudC4gSWYgeW91IGFyZSBsb29raW5nIGZvciB0aGF0LCBwbGVhc2UgZ28gdG8gdGhlIGFwcHJvcHJpYXRlIHBsYWNlcy5BZ2FpbiBpbiBzaW1wbGUgR2VybWFuIGZvciBkZWNlbmN5IGR5c2xleGljcy4gSWYgeW91IGRvbiBrZWVwIHlvdXIgZGljayBpbiB5b3VyIHBhbnRzIHlvdSB3aWxsIGdldCBpbiB0cm91YmxlIGluIGZvcm0gb2YgYSBiYW4gYW5kIGxpdGlnYXRpb24uIApDJ3RhaXQgZmluLCBkbGljYXQsIHJhZmZpbiwgb3JpZ2luYWwsIGRlcyBwbGF0cyB0b3VzIG1lcnZlaWxsZXV4IGV0IHVuIGNoZWYgdHJzIG1pbnV0aWV1eCBjb21tZSBsZSBzb250IHNvdXZlbnQgbGVzIEphcG9uYWlzLiBVbmUgc291cGUgZCdvaWdub25zIGF2ZWMgaHVpdHJlLCBkdSBiYXIgZXQgZHUgaG9tYXJkIGRlIENoYXVzZXkgKHF1aSBhIHBlcm1pcyB1bmUgYmVsbGUgZGlzY3Vzc2lvbiBnb3VybWFuZGUgYXZlYyBub3Mgdm9pc2luZXMgZHUgY3J1KSwgZHUgbGFwZXJlYXUgY29uZml0LCBkdSBwb3VsZXQsIGR1IGZvaWUgZ3JhcyBldCB1biBkZXNzZXJ0ICBsYSBoYXV0ZXVyIGR1IHJlc3RlLiBDJ2VzdCBiZWF1Y291cCBiZWF1Y291cCBtaWV1eCBxdWUgZGUgbm9tYnJldXggcmVzdGF1cmFudHMgcGFyaXNpZW5zICBsYSBtb2RlLCB2b2lyZSB0b2lscy4gCklmIEkgbWlnaHQgYXNrLFdoYXQgd2FzIHRoZSBpbXBhY3QgaW4geW91ciBjcmVkaXQ/IEkndmUgaGVhcmQgdGhhdCBpZiB5b3UgdXNlIGEgaGlnaCBwZXJjZW50YWdlIG9mIHlvdXIgYXZhaWxhYmxlIGNyZWRpdCAoYWJvdmUgNzAlKSBpdCBjYW4gYWZmZWN0IHlvdXIgY3JlZGl0IHNjb3JlLiAKQ2FuIHJlYWQgYXMgbWFueSBhcyA4IGhhbmRzIGF0IHRoZSBzYW1lIHRpbWUsIGV2ZW4gY2FuIHJlbWVtYmVyIHdoYXQgcGVvcGxlIGZvbGRlZCBvbiA0dGggc3RyZWV0IGFsdGhvdWdoIGhlIHdhc24gcGh5c2ljYWxseSBwcmVzZW50IGluIHRoZSByb29tIGF0IHRoZSB0aW1lLiBUaGUgb25seSB0aW1lIGhlIGRpZG4gaGF2ZSBhIGRlYWQgcmVhZCBvbiBoaXMgb3Bwb25lbnQsIGhlIGp1c3QgZGVjaWRlZCB0byB3aW4gdGhlIHBvdCBhbnl3YXkgYW5kIGdvdCBhIHdvcmxkIGNoYW1waW9uIHRvIDRiL2ZvbGQgdG8gNWIgaW4gbGltaXQgaG9sZGVtIHByZWZsb3AsIHdoaWNoIGhhcyBwcm9iYWJseSBuZXZlciBoYXBwZW5lZCBvdGhlcndpc2UgaW4gdGhlIGhpc3Rvcnkgb2YgYW55dGhpbmcuLiAKQnV0IFBQUCdzIE5hdmVlZCBRYW1hciB3YXMgZG90IG9uLiAKQW55d2F5IGZhc3QgZm9yd2FyZCB0byB3aGVuIEkgc3RhcnRlZCBkYXRpbmcgYSBnaXJsIHdobyBkaWRuIGtub3cgYWJvdXQgaG9ja2V5LiBXZSBzdGFydGVkIGNvbWluZyB0byB0aGUgbG9jYWwgaG9ja2V5IGJhciB0byB3YXRjaCB0aGUgUGVuZ3VpbnMgKGFuZCB0aGVpciBuZXcgY29hY2gpIHN0b3JtIGZyb20gbGFzdCBwbGFjZSB0byBzY3JhcGluZyBpbnRvIHRoZSBwbGF5b2Zmcy4KSWYgeW91IGFyZSB2ZXJ5IGNvbmZpZGVudCB0aGF0IEJCIGlzIHBhc3NpdmUgZW5vdWdoIHRvIHZlcnkgcmFyZWx5IHNxdWVlemUgdGhlbiBpdCBzdGlsbCBub3QgZ3JlYXQgdG8gY2FsbC4gWW91IHdpbGwgZmxvcCB0d28gcGFpciBvciB0cmlwcyBhYm91dCA1JSBvZiB0aGUgdGltZSwgYW5kIHRoZW4geWVhaCwgeW91IGV4Y2l0ZWQgdG8gc3RhY2sgb2ZmLiBCdXQgYWxtb3N0IGFueSBvdGhlciB0aW1lIHRoaXMgaGFuZCBzdWZmZXJzIGZyb20gbWFzc2l2ZSByZXZlcnNlIGltcGxpZWQgb2Rkcy4gSWYgeW91IGV2ZXIgZ2V0IGEgdG9uIG9mIGFjdGlvbiB3aXRoIGEgcGFpciBvZiBraW5ncywgeW91IGFsd2F5cyBvdXQga2lja2VkLiBBbmQgdGhlcmUgYXJlbiBtYW55IGZsb3BzIHRoYXQgd2lsbCBjb21lIDggaGlnaCBhbmQgaGF2ZSBhIGNsZWFuIHJ1biBvdXQuIElmIHlvdSBkbyBkZWNpZGUgdG8gY2FsbCBwcmUsIHdoaWNoIGNhbiBiZSBvayBpZiBiYiBpcyBwYXNzaXZlIGVub3VnaCwgdGhlbiB5b3UgaGF2ZSB0byBsaXZlIHdpdGggdGhlIGZhY3QgdGhhdCBzaW5jZSB5b3UgcGFpZCBzdWNoIGEgZ29vZCBwcmljZSB0byBzZWUgdGhlIGZsb3AsIHlvdSBjYW4gZG8gYSBsb3Qgb2YgZm9sZGluZyBhbmQgc3RpbGwgcHJvZml0LiBOb3Qgc2F5aW5nIHlvdSBzaG91bGQgZm9sZCBmbG9wLCB0aGF0IHdvdWxkIGJlIG51dHMuIEJ1dCB5b3UgYXJlIHNheWluZyB5b3UgcmFpc2VkIGZsb3AgYmVjYXVzZSB5b3Ugd2VyZSBtb3N0IGxpa2VseSBhaGVhZC4gWW91IHNob3VsZG4gcmFpc2UgZm9yIHZhbHVlIGJlY2F1c2UgeW91IGN1cnJlbnRseSBhaGVhZCwgeW91IHNob3VsZCByYWlzZSBmb3IgdmFsdWUgYmVjYXVzZSB5b3UgYWhlYWQgb2YgdGhlIHJhbmdlIG9mIGhhbmRzIHRoYXQgd2lsbCBjYWxsIHlvdSwgYW5kIEkgZG9uIHRoaW5rIHRoYXQgdGhlIGNhc2Ugb2Z0ZW4gZW5vdWdoIGhlcmUuIEluIHRoaXMgY2FzZSB5b3UgZ290IGNhbGxlZCBieSBhIHdvcnNlIGhhbmQsIGJ1dCBJIGRvbiB0aGluayB0aGF0IHdpbGwgYmUgdHJ1ZSBvZnRlbiBlbm91Z2ggdG8gbWVyaXQgYSByYWlzZS4KVGhlaXIgc29mdHdhcmUgaXMgZ2V0dGluZyBiZXR0ZXIsIGFuZCBJIGhhdmUgYmVlbiBvbiB0aGVpciBzaXRlIHNpbmNlIGJsYWNrIEZyaWRheSAod2VsbCBib2RvZy9Cb3ZhZGEpIGFuZCBpZ25pdG9uLiAKTGF2ZW5kZXIgaXMgdGhlcmUgZm9yIHB1cmlmaWNhdGlvbiwgaGFwcGluZXNzLCBsb3ZlLCBhbmQgcGVhY2U7IEJhc2lsIGJyaW5ncyBwcm90ZWN0aW9uIGFuZCBsb3ZlOyBTYWdlIGJyaW5ncyBwdXJpZmljYXRpb24sIHByb3RlY3Rpb24sIGhlYWxpbmcsIHdlYWx0aCwgbG9uZ2V2aXR5OyBQYXRjaG91bGkgYnJpbmdzIHByb3NwZXJpdHksIHdhcmRzIG9mZiBldmlsIGFuZCBuZWdhdGl2aXR5LCBhaWRzIGRpdmluYXRpb24uLiAKSSBzaGFsbCB0YWtlIGludG8gY29uc2lkZXJhdGlvbiBhbiBhbGwgc2VydmljZSBpbmNsdWRlZCBjYXNpbm9zIGxvY2F0ZWQgYWxsIG92ZXIgdGhlIHdvcmxkIGxpa2UgdGhlIGZldyBpbiBHb2EgdG8gdGhlIG9uZXMgaW4gVmVnYXMgdG8gQXRsYW50aWMgQ2l0eS4gQWxsIHRoZXNlIGNhc2lub3MgYXJlIGVxdWlwcGVkIHdpdGggUG9rZXIgcm9vbXMgdG8gc3VpdCB0aGUgbmVlZHMgb2YgcGxheWVyIG5lZWRzIGRlcGVuZGluZyBvbiB0aGVpciBiYW5rIHJvbGwuIApTaW5jZSAyMDAwLCB0aGUgbnVtYmVyIG9mIHBlb3BsZSBpbiBwcml2YXRlIHByaXNvbnMgaGFzIGluY3JlYXNlZCA0NyUsIGNvbXBhcmVkIHRvIGFuIG92ZXJhbGwgcmlzZSBpbiB0aGUgcHJpc29uIHBvcHVsYXRpb24gb2YgOSUuIEluIHNpeCBzdGF0ZXMsIHRoZSBwcml2YXRlIHByaXNvbiBwb3B1bGF0aW9uIGhhcyBtb3JlIHRoYW4gZG91YmxlZCBkdXJpbmcgdGhpcyBwZXJpb2QuIApQZXJzbmxpY2ggdGVuZGllcmUgaWNoIHp1IGRlbiBIdW1hbmlzdGVuLCBkaWUgUGlyYXRlbiBzY2hlaW5lbiBmciBkaWUgRVUgYXVjaCBnZWVpZ25ldC4gCkRlYWR3b29kIHNlcmllcyB2aWV3ZXJzIGFuZCBtdXNldW0gdmlzaXRvcnMgd2lsbCBhbHNvIGJlIGtlZW5seSBhd2FyZSBvZiB0aGUgc2hvZGR5IHRyZWF0bWVudCBhZmZvcmRlZCB0aGUgQ2hpbmVzZSB3aG8gbGl2ZWQgdGhlcmUgZHVyaW5nIHRoZSBnb2xkIHJ1c2gsIG1vc3RseSBwcm92aWRpbmcgbGF1bmRyeSBzZXJ2aWNlcy4gQSBuZXR3b3JrIG9mIHR1bm5lbHMgY29ubmVjdHMgdGhlIENoaW5lc2UgbGF1bmRyeSBidXNpbmVzc2VzLCBvciBzb21lIG1pZ2h0IHNheSBwcm92aWRlZCBhbm9ueW1vdXMgcGFzc2FnZSB0byBvcGl1bSBkZW5zLgpTbyBJIGRvbiB0aGluayB0aGF0IHdhcyBhIHBpdm90LnlvdSBwaHJhc2UgcXVlc3Rpb25zIGEgY2VydGFpbiB3YXksIHllcyB5b3UgY2FuIHN3YXkgcG9sbGluZyByZXN1bHRzLiBQZW9wbGUgb3ZlcndoZWxtaW5nbHkgaGF0ZSB0aGVpciBwcml2YXRlIGhlYWx0aCBpbnN1cmFuY2UsIGlmIHRoZXkgZXZlbiBoYXZlIGl0LiAKV2VsbCwgbGlrZSBtb3N0IHRoaW5ncyBpbiBVUyBwb2xpdGljcywgaXQgb25seSBnb3R0ZW4gd29yc2UuIApUaGUgTXVzdGFuZyB0aGF0IGNyYXNoZWQgaGFkIG1pbm9yIGNyYXNoIGFsbW9zdCBleGFjdGx5IDQwIHllYXJzIGFnbyBpbiBSZW5vIGFmdGVyIGl0cyBlbmdpbmUgZmFpbGVkLiBBY2NvcmRpbmcgdG8gdHdvIHdlYnNpdGVzIHRoYXQgdHJhY2sgUCA1MXMgdGhhdCBhcmUgc3RpbGwgZmx5aW5nLCBpdCBtYWRlIGEgYmVsbHkgbGFuZGluZyBhd2F5IGZyb20gdGhlIGFpcnBvcnQuIApCcmlkZ2Ugd2l0aCBoZWFkIGFuZCBzaG91bGRlcnMgb24gdGhlIGZsb29yIGFuZCBmZWV0IGZsYXQgb24gdGhlIGJhbGw6IFRoaXMgaXMgbW9yZSBkaWZmaWN1bHQgYW5kIHRoZSBmb2N1cyB3aWxsIHNoaWZ0IGZyb20gdGhlIGdsdXRlcyB0byB0aGUgaGFtc3RyaW5ncyAoYmFjayBvZiB0aGUgdXBwZXIgbGVnIG11c2NsZXMpLiBCYWxhbmNlIGlzIGFsc28gZGlmZmljdWx0LCBiZWNhdXNlIHlvdXIgbGVncyBtdXN0IHB1c2ggb2ZmIG9mIGFuIHVuc3RhYmxlIHN1cmZhY2UuIEtlZXBpbmcgeW91ciBoYW5kcyBvdXQgdG8gdGhlIHNpZGUgd2lsbCBnaXZlIHlvdSBzb21lIGxldmVyYWdlIGFuZCBoZWxwIHByZXZlbnQgeW91ciBib2R5IGZyb20gbW92aW5nIHNpZGV3YXlzLgpBcyBJJ3ZlIHNhaWQgYmVmb3JlLCBwZW9wbGUgbG92ZSB0byBydW4gd2l0aCBteXRocywgYW5kIHNhZGx5LCB0aGlzIG9uZSBpcyBzZWxmIHN1c3RhaW5pbmc6IFRoZSBtaXNpbmZvcm1hdGlvbiBicmluZ3MgYSBsb3Qgb2Ygdml0cmlvbCwgdGhlIHZpdHJpb2wgcHJvbXB0cyByZW1vdmFscywgYW5kIHRoZSByZW1vdmFscyByZXN1bHQgaW4gbW9yZSBtaXNpbmZvcm1hdGlvbi4gClN1Z2ltb3RvIGFuZCBPZ2F0YSByZWxhdGlvbiB0byBlYWNob3RoZXIgaXMgcGVyc29uYWwuIElmIHRoZXkgYm90aCBmaWdodCBhdCB0aGUgZW5kLCBJIHdhbnQgYm90aCBvZiB0aGVtIHRvIGtpbGwgZWFjaG90aGVyIGJlY2F1c2UgZm9pbHMgYXJlIGNvb2wsIGxpa2UgS2lyaXRzdWd1IHZzIEtpcmVpLiAKQnV0IHJlZ2FyZGxlc3MsIHllaCwgc2hlYXJpbmcgZG9lc24gc2xpY2UgdXAgc2hlZXAuIApXaGF0IGV1cm9wZWFucyBjYWxsZWQgdGhvc2UgdHJpYmVzIG9yIGxhdGVyIG90dG9tYW5zIGRvZXNuIG1hdHRlci4gCkZvciBpbnN0YW5jZSwgc29tZSBwZW9wbGUgbG92ZSB0aGUgZWZmZWN0IG9mIGEgY29uZSBvZiBicmlnaHQgbGlnaHQgaW4gZGltIHJvb20uIFRoZSBsaWdodCB0eXBpY2FsbHkgY29tZXMgZnJvbSBvdmVyaGVhZCBpbiBhIHZpbnRhZ2Ugc3R5bGUgY2VpbGluZyBmaXh0dXJlLCBidXQgcmVtZW1iZXIgdGhhdCB0aGUgcG9vbCBvZiBsaWdodCBzaG91bGQgZW5jb21wYXNzIGV2ZXJ5b25lISBJZiB5b3UgaGF2ZSBhIGxpZ2h0aW5nIHNpdHVhdGlvbiB0aGF0IGlzIHZlcnkgc3BlY2lmaWMsIHRha2Ugc29tZSB0aW1lIGFuZCBjb25zaWRlciBob3cgeW91IGFyZSBnb2luZyB0byBiZSBhYmxlIHRvIGNyZWF0ZSBhbiBlZmZlY3QgdGhhdCBpcyBnb29kIGZvciB0aGUgc2hhcGUgb2YgdGhlIHRhYmxlIHRoYXQgeW91IGFyZSBjb25zaWRlcmluZy4KRWR1Y2F0ZSBtZSBpbnN0ZWFkIG9mIGluc3VsdGluZyBtZS4gVGhhdCB0aGUgZ29hbCByaWdodD8gTm90IHRvIGFsaWVuYXRlIHBlb3BsZSBidXQgdG8gYnJpbmcgdGhlbSB0byBhIHBvaW50IG9mIHVuZGVyc3RhbmRpbmcgYW5kIGhvcGVmdWxseSwgZXZlbnR1YWxseSwgYWNjZXB0YW5jZS4gCkl0J3MgYW5ub3lpbmcgYmVjYXVzZSBJIGJvb2ttYXJrIHJlY2lwZXMgb24gbXkgcGhvbmUgYW5kIHJlZmVyIHRvIGl0IHdoZW4gY29va2luZy4gQW5kIHdoZW4gSSBoYXZlIHRvIHJlbG9hZCB0aGUgcGFnZSBJIGhhdmUgdG8gcmVzY3JvbGwgdGhyb3VnaCB0b25zIG9mIGFkcyBhbmQgZHVtYiBzdG9yaWVzIG9uIHdob2V2ZXIgdGhlIGZ1Y2sgY29va2luZyBibG9nIEkgZ290IHRoaXMgcmVjaXBlIGZyb20uIAoiaXQgaW1wb3NzaWJsZSB0byB0ZXN0IGEgc2luZ2xlIGh5cG90aGVzaXMgb24gaXQgb3duLCBzaW5jZSBlYWNoIG9uZSBjb21lcyBhcyBwYXJ0IG9mIGFuIGVudmlyb25tZW50IG9mIHRoZW9yaWVzLiBUaHVzIHdlIGNhbiBvbmx5IHNheSB0aGF0IHRoZSB3aG9sZSBwYWNrYWdlIG9mIHJlbGV2YW50IHRoZW9yaWVzIGhhcyBiZWVuIGNvbGxlY3RpdmVseSBmYWxzaWZpZWQsIGJ1dCBjYW5ub3QgY29uY2x1c2l2ZWx5IHNheSB3aGljaCBlbGVtZW50IG9mIHRoZSBwYWNrYWdlIG11c3QgYmUgcmVwbGFjZWQuIiB0aGUgUXVpbmUgRHVoZW0gdGhlc2lzCkxvd2VyIFNheG9ueSB2b3RlIHNldGJhY2sgZm9yIE1lcmtlbCBhaGVhZCBvZiBHZXJtYW55IGNvYWxpdGlvbiB0YWxrcwoiYmFzaWNhbGx5IHNwZWFraW5nIGEgbG90IG9mIHJ1YmJpc2ggaW4gaGlzIHBvc3QgYWdhaW4uIiAgIFUxMTAwMTcKU28gcGxheWluZyBmb3IgUGxheSBNb25leSB3aWxsIGhlbHAgeW91IGdldCBhIGZlZWwgZm9yIHRoZSBoYW5kcywgYnV0IG5vdCB0aGUgcGxheWVycywgYXMgUGxheSBNb25leSBhdHRyYWN0cyBsb29zZSBhbmQgc2Vuc2VsZXNzIHBsYXlzLiBJdCBlYXN5IHRvIHNheSwgIkF3IHdoYXQgdGhlIGZ1Y2suIEkgcmFpc2UiIHdoZW4gaXQgbm90IHJlYWwgbW9uZXkgb24gdGhlIGxpbmUuCkluIHRoZSBlbmQsIHRoZSBqdWRnZSBnYXZlIE1yLiBDb2hlbiB0aHJlZSB5ZWFycyBmb3IgdGhlIGNyaW1lcyBoZSBjb21taXR0ZWQgaW4gTmV3IFlvcmsgYW5kIHR3byBtb250aHMgZm9yIGx5aW5nIHRvIENvbmdyZXNzLCB0byBiZSBzZXJ2ZWQgYXQgdGhlIHNhbWUgdGltZS4gCkZpbmFsbHksIGFkZCBtb3p6YXJlbGxhIGlmIHlvdSBsaWtlIHRoaW5ncyBjaGVlc3ksIGFuZCBzZXJ2ZS4gCkkgbWF5IG5vdCBhbHdheXMgd2FudCB0byBoYXZlIHNleCwgYnV0IEkgbmVlZCB0byBmaWd1cmUgb3V0IHRoZSByb290IG9mIGl0IGlmIHRoYXQncyB0aGUgY2FzZS4uIApNZXN1bSBkaSB3YXJuZXQgYWJnIGNyb3QsYm9rZXAgY2V3ZWsgaG9ybnksYm9rZXAgdGt3LGJva2VwIGFiZyBob3QuIERvd25sb2FkIFZpZGVvIEJva2VwIDIwMTggSW5kbyBDZXdlayBBQkcgQW5hayBTTVAgU01BIDNHUCBNZXN1bSBOZ2VudG90LiAyNSBGZWIgMjAxNCAuIElueWEgRXJvYmVybGluIERpYW5hIFZpbG5pdXMgQ2l0eS4gTG9vayBpbmRvbiBzZXggcGVsYWphciBkaSB3YXJuZXQgdHViZSBwb3JuIGluZG9uIHNleCBwZWxhamFyIGRpIHdhcm5ldCB2aWRlb3MgYW4gZG93bmxvYWQgaXQuIEluZG9uIGFiZyBjYW0gaG9ybnkuIApTdGVwIDE6IGFzayB0aGUgcGVyc29uIHRvIHBpY2sgYW55IGNhcmQgaW4gdGhlIGRlY2sgdGVsbCB0aGVtIG5vdCB0byBzaG93IHUuCkdpdmUgdGhlaXIgb3BpbmlvbnMgd2VpZ2h0IGFuZCByZXNwZWN0IHRoZW0gYXMgcGVvcGxlIHdobyBoYXZlIGV4cGVyaWVuY2UgdGhhdCBjb21lcyBmcm9tIGxpdmluZyBsaWZlIGxvbmdlciB0aGFuIHlvdSBidXQgYWxzbyB3aWxsaW5nIGFuZCBhYmxlIHRvIG1ha2UgeW91ciBvd24gZGVjaXNpb25zIGluIGxpZmUuLiAKU28gTGVvIHdhc24ndCBpbnRvIHBsYXlpbmcgdGhlIGdhbWUuIAo5OSBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnby4gCkEgaG9sZSBjYW4gc3VjayB5b3UgaW4gc28gZmFyIHlvdSBkb24gcmVhbGx5IHNlZSBhIHdheSBvdXQsIGJ1dCB3aXRoIGhlbHAgeW91IGNhbiBlc2NhcGUgaXQuIE5laXRoZXIgYW54aWV0eSBvciBkZXByZXNzaW9uIGNhbiBnbyBhd2F5IGp1c3QgYnkgdGVsbGluZyBzb21lb25lIHRvIGdldCBiZXR0ZXIuIApIb3dldmVyLCBpdCBpcyBub3QganVzdCBhIG1vdmllIGFib3V0IEhhbG8uClZ2YXJkZW5mZWxsIGlzIHN0aWxsIG15IGZhdm9yaXRlIHByb3ZpbmNlLiBMb3RzIG9mIG5vc3RhbGdpYSB3YWxraW5nIGFyb3VuZCBpdCBmcm9tIHRoZSBvbGQgTW9ycm93aW5kIGRheXMuIEl0IGEgc2hhbWUgdGhvdWdoIHRoYXQgd2UgY2FuIHJlYWxseSBleHBsb3JlIHRoZSBjZW50ZXIgb2YgdGhlIHZvbGNhbm8sIGFuZCB0aGVyZSBpcyBhIGRlY2VudCBjaHVuayBvZiB0ZXJyYWluIHRoYXQgd2UgY2FuIGV4cGxvcmUgbm9ydGggb2Ygd2hlcmUgdGhlIEdob3N0Z2F0ZSB3b3VsZCBiZSBwbGFjZWQgYW5kIGFub3RoZXIgcmVnaW9uIE5vcnRoIG9mIFJlZCBNb3VudGFpbiBidXQgU291dGggb2YgdGhlIGNvYXN0LgpGaWxpYXRpb24gdGFibGllICBsJ2dhcmQgZCd1biBkZXMgcGFyZW50cywgcHVpcyAgbCdnYXJkIGRlIGwnYXV0cmUgYXBycyBsYSBkY2xhcmF0aW9uIDogZGFucyBjZSBjYXMsIGwnZW5mYW50IHByZW5kIGxlIG5vbSBkdSBwYXJlbnQgcXVpIGEgdGFibGkgc2EgZmlsaWF0aW9uIGVuIHByZW1pZXIuIFRvdXRlZm9pcywgc3VyIGRjbGFyYXRpb24gY29uam9pbnRlIGV0IGFjY29yZCBkZSBsJ2VuZmFudCBkZSBwbHVzIGRlIDEzIGFucywgaWwgZXN0IHBvc3NpYmxlIGRlIGRvbm5lciBsJ2F1dHJlIG5vbSBvdSB1biBub20gZm9ybSBkZXMgZGV1eC4gU2kgbGVzIHBhcmVudHMgb250IHBsdXNpZXVycyBlbmZhbnRzLCBjZSBtbWUgbm9tIHNlcmEgcmV0ZW51IHBvdXIgbGVzIGF1dHJlcyBlbmZhbnRzLiBFbiBjYXMgZGUgZHNhY2NvcmQsIGF1Y3VuIGNoYW5nZW1lbnQgbidlc3QgZW52aXNhZ2VhYmxlIG1tZSB2aWEgbGUgcmVjb3VycyAgdW4ganVnZSAoQXJ0LgpUaGV5IGtub3cgdGhhdCB0aGUgUGFraSBJU0kgY2FuIGF0IGFueXRpbWUgaW5jcmVhc2UgdGhlaXIgYXJtcyBhbmQgZnVuZCBzdXBwb3J0IHRvIHRoZSBBZmdoYW4gVGFsaWJhbiBhbmQgdGhhdCB3aWxsIGdldCB0aGVpciBzb2xkaWVycyBraWxsZWQgaW4gQWZnaGFuaXN0YW4uLiAKQWJzb2x1dGVseS4gCkNhbnR1IHByZXNlbmNlIGV4ZW1wbGlmaWVzIHRoZSBQRkNTIG1pc3Npb24gdG8gYW5kIGNvbW11bmljYXRlIHdpdGggdGhlIGNoaXJvcHJhY3RpYyBjb21tdW5pdHksIGFsbGllZCBoZWFsdGggY2FyZSBwcm9mZXNzaW9uYWxzIGFuZCB0aGUgTkZMLkVkdWNhdGU6IEl0IHR1cm5zIG91dCB0aGF0IGl0IG5vdCBqdXN0IG91ciBwYXRpZW50cyB3aG8gbmVlZCB0byBiZSBlZHVjYXRlZCBhYm91dCBjaGlyb3ByYWN0aWMuIApFZGl0OiBIYWQgdG8gcXVpY2tseSB0eXBlIG15IGNvbW1lbnQgZWFybGllciBzbyBJIGRpZG50IGdldCBvdXQgbXkgZnVsbCB0aG91Z2h0LiAKTXkgb3RoZXIgY2hpbGRyZW4gZGlkbiBzZWUgbWUgbXVjaCBmb3IgbW9udGhzIGFmdGVyIHNoZSB3YXMgYm9ybi4gSSB0aGluayB0aGV5IGxvdmUgdGhlaXIgc2lzdGVyIGFuZCBJIGFsc28gdGhpbmsgdGhleSBoYXZlIHNvbWUgZGFtYWdlIGZyb20gdGhlIHJvbGxlciBjb2FzdGVyIHRoYXQgd2FzIHRob3NlIGZpcnN0IDUgeWVhcnMgb2YgaGVyIGxpZmUuClRoaXMgaXMgY29taW5nIGZyb20gYW4gQXVzc2llIERhZCB3aG8ganVzdCB0b29rIDYgd2Vla3Mgb2ZmIHBhaWQgdG8gc3BlbmQgd2l0aCBteSBuZXdib3JuIGJhYnkgZ2lybC4gCkEgZGVjbGluZSBpbiB0b3VyaXNtLCB3aGljaCBpcyB0aGUgZm91bmRhdGlvbiBvZiB0aGUgZWNvbm9teSBoZXJlLiAKQ29uc3RydWN0IHlvdXIgYnVsbGV0IHBvaW50cyBzbyB0aGV5IGNhcHR1cmUgc29tZSBvZiB0aGUga2V5d29yZHMgYW5kIHBocmFzZXMgaW4gdGhlIGpvYiBwb3N0aW5nLiBGb3IgZXhhbXBsZSwgeW91IGNvdWxkIHdyaXRlLCAiQWRlcHQgYXQgb3JnYW5pemluZyB0cmF2ZWwgcGxhbnMgZm9yIGluZGl2aWR1YWxzLCBmYW1pbGllcyBhbmQgZ3JvdXBzIHdpdGggMjUgcGx1cyBtZW1iZXJzOyBleGNlbGxlbnQgcHJvZmljaWVuY3kgd2l0aCBhdXRvbWF0ZWQgYWlybGluZSByZXNlcnZhdGlvbiBzeXN0ZW1zLCB0aWNrZXRpbmcgYXBwbGljYXRpb25zIGFuZCBmbGlnaHQgcmVxdWlyZW1lbnRzOyBtYWludGFpbiA1NSBwZXJjZW50IHJlcGVhdCBjdXN0b21lciByYXRlIGluIHRoZSBsYXN0IHNldmVuIGNvbnNlY3V0aXZlIHllYXJzIG9mIG15IDEwIHllYXIgY2FyZWVyLiIuIApZb3Ugc2hvdWxkIGJlIGFibGUgdG8gYmFsbHBhcmsgdGhlIHByb2JhYmlsaXR5IG9mIGEgZ2l2ZW4gZXZlbnQganVzdCBieSBzdHVkeWluZyB0aGUgbGFuZHNjYXBlIGFuZCBnZXR0aW5nIGEgImZlZWwiIGZvciBob3cgaXQncyBwbGF5ZWQgb3V0IGluIG90aGVyIGFwcGxpY2F0aW9ucy4uIApBdCB0aGlzIHBvaW50LCBTYW0gRy4gc2FpZCBoZSB3b3VsZCAicmVtb3ZlIG15IGxvZ2luIGZyb20gdGhpcyBkZXZpY2UuIiBJIGRvbid0IGtub3cgaWYgdGhpcyBzdGVwIHdhcyBjcml0aWNhbDsgSSBob3BlIG5vdCBzbyB5b3UgbWlnaHQgYmUgYWJsZSB0byBzYXZlIHlvdXJzZWxmIGEgY3VzdG9tZXIgc2VydmljZSBjaGF0IQpRdWFuZCBiaWVuIG1tZSAgbGUgcGFyZnVtIHJlc3RlIGxhIG10YXBob3JlIGRlIGxhIGNvbnZlcnNpb24gZGUgbCdodW1haW4gZW4gZGl2aW4gICg0KSwgY2VydGFpbmVzIGN1bHR1cmVzIGZ1cmVudCBtb2lucyBjb2VyY2l0aXZlcyBxdWUgbGVzIEdyZWNzIGRlIGwnQW50aXF1aXQuIApOIEF0dGVuZHUgOiBub20gZG9ubiBhdXggcGFyYWdyYXBoZXMgZCd1bmUgZGNpc2lvbiByZW5kdWUgcGFyIHVuIGp1Z2UgY29udGVuYW50IGxhIG1vdGl2YXRpb24gZGUgY2VsbGUgY2kuIENlcyBwYXJhZ3JhcGhlcyBjb21tZW5jZW50IHBhcmZvaXMgcGFyIGxlcyBtb3RzICBhdHRlbmR1IHF1ZSAuClRoZW4gaGUgd291bGQgYmxhbWUgaXQgb24gTWl0dCBSb21uZXkhLiAKSWYgSSBibHVlIHNpZGUgSSBzaHJvb20gdGhlIHNoaXQgb3V0IG9mIHRoZSB0cmlidXNoL3JpdmVyIGFuZCB0cnkgdG8ga2l0ZSBvdXQgS3J1Z3MgaWYgSSBnZXQgYSBjaGFuY2UuCldlIHVzZWQgdG8gdGVhY2ggb3VyIGtpZHMgdG8gZHJlYW0gYmlnIGFib3V0IGJlY29taW5nIHN1cGVyIHJpY2ggYW5kL29yIHN1cGVyIGZhbW91cy4gVGhlIEJyYXR6IGRvbGxzIHdlcmUgYWxsIGFib3V0IHRoZSBibGluZy4gQmFyYmllIHdhcyBhbHdheXMgYSBQcmluY2Vzcy4uIApCdXQgaW4gYW4gaWRlYWwgc2Vuc2UsIHlvdSBzaG91bGRuIGhhdmUgdG8gZG8gdGhpcywgYW5kIGRvbiBoYXZlIHRvIGJlIGNvbXBsZXRlbHkgaG9uZXN0IGFib3V0IGl0LiBPdXIgY3VsdHVyZSBoYXMgYSBodWdlIG5lZ2F0aXZlIGJpYXMgYWdhaW5zdCB0aW1lIHNwZW50IG5vdCB3b3JraW5nLCBldmVuIHRob3VnaCB0aGUgZmlyc3QgdGhpbmcgYmFzaWNhbGx5IGFueWJvZHkgd291bGQgZG8gaWYgdGhleSB3ZXJlIHN1ZGRlbmx5IHByb21pc2VkIGZpbmFuY2lhbCBzZWN1cml0eSBpcyBxdWl0IHRoZWlyIGpvYnMuIApFbnZpcm9ubWVudGFsIGdyb3VwcyBkbyBOT1QgZW1wbG95IGZvcmVzdGVycyBvciBhbnlib2R5IHdpdGggYSBmb3Jlc3Qgc2NpZW5jZSBkZWdyZWUuIFRoaXMgcG9zdCBjb3VsZCBub3QgYmUgbW9yZSBtaXNsZWFkaW5nLiAKSXQncyBhIHdob2xlIGRpZmZlcmVudCBzdG9yeSB3aXRoIGEgaG91c2UuIApUaGlzIG1lYW5zIHRoYXQgaW4gQ2wncyBvdXRlciBzaGVsbCB0aGVyZSBhcmUgNyBlbGVjdHJvbnMuIEFsbCBhdG9tcyB3YW50IDggZWxlY3Ryb25zLiAKSSB0aGluayB0aGF0IGRlcGVuZHMgb24geW91ciBjYW5jZXIgYW5kIHByZXZpb3VzIGhlYWx0aCBsZXZlbHMuIE15IGdyYW5kZmF0aGVyIGlzIGluIGhpcyBtaWQgODBzIGFuZCBoYXMgaGFkIHByb3N0YXRlIGNhbmNlciBhbmQgY29sb24gY2FuY2VyIG92ZXIgdGhlIHBhc3QgdGVuIHllYXJzIChhbmQgYWxzbyBhIHRyaXBsZSBieXBhc3MgdGhhdCBubyBvbmUgc2F3IGNvbWluZykuIApUaGUgd29yc3QgcGFydCBpcywgb2YgY291cnNlLCB0aGF0IHRoaXMgdWx0cmFjb25zZXJ2YXRpdmUgZmFudGFzeSB3aWxsIGJlIHBsYXllZCBvdmVyIGFuZCBvdmVyIG9uIEZveCBOZXdzLCB0aHJvd2luZyBncmVhc2Ugb24gdGhlIGZpcmUgdGhhdCBpcyB3aGl0ZSByZXNlbnRtZW50LiAKREFWSUUsIEZsYS4gICBKYXkgQ3V0bGVyIHdva2UgdXAgaW4gaGlzIGhvdGVsIHJvb20gVHVlc2RheSBtb3JuaW5nIGFuZCBkaWRuJ3Qga25vdyB3aGVyZSBoZSB3YXMuIFRoZW4gdGhlIGZvZyBjbGVhcmVkLCBhbmQgaGUgcmVhbGl6ZWQgaXQgd2FzIHRpbWUgdG8gZ28gYmFjayB0byB3b3JrLgpUaGlua2luZyBhYm91dCBpdCwgYm90aCBwcm9qZWN0cyBiZWdhbiBhZnRlciBGYWxsb3V0IDQgYW5kIEkgd291bGRuIHNheSB0aGV5IHByaW9yaXRpemVkIEZPNzYgYmVjYXVzZSB0aGF0IHRoZSBvbmUgdGhhdCBjYW1lIG91dCBmaXJzdCwgYnV0IHJhdGhlciwgaXQgbmVlZGVkIHRoZSBsZWFzdCBhbW91bnQgb2Ygd29yayBhbmQgc28gaXQgd2FzIGVhc2llciB0byBzaGlwIGZpcnN0LiAKWWVzLCBmb3IgYSBtb21lbnQgd2hlbiBJIHRhbGtlZCB3aXRoIG15IGV4LCBpdCB3YXMgImRlbGljaW91cyIsIGl0IGxpa2UgYSB3aW5uaW5nIG1vbWVudCB3aGVuIHlvdSBjb21lIGJhY2sganVzdCB0byBzYXkgImhpIiwgc2hvd2luZyBob3cgbXVjaCB5b3UgaGF2ZSBncm93biwgc2hvd2luZyBob3cgZ29vZCB5b3UgYXJlIGxpdmluZyBub3cuIApUaGUgbmF0dXJlIG9mIHRoZXNlIG1lYXN1cmVzIGlzIGRldGVybWluZWQgYnkgdGhlIGtpbmQgb2YgcG9saXRpY2FsIGNvbnN0aXR1ZW5jeSB0aGF0IElzcmFlbGkgbGVhZGVycyBhaW0gdG8gYXBwZWFzZS4gCkkgYWx3YXlzIHRob3VnaHQgaXQgd2FzIHJlYWxseSB1bmZhaXIgdG8gaGVyIHRoYXQgc2hlIHdhc24gdGhlIHZhbGVkaWN0b3JpYW4uIEV2ZW4gd2l0aCBhbGwgb2YgaGVyIHBlcnNvbmFsaXR5IGZhaWxpbmdzLCBQYXJpcyBzZWVtZWQgdG8gaGF2ZSBhIG11Y2ggYmV0dGVyIHVuZGVyc3RhbmRpbmcgb2Ygd2VsbCByb3VuZGVkbmVzcyB0aGFuIFJvcnkgZXZlciBkaWQuLiAKQW55d2F5LCBJIGtub3cgeW91ciBwb3NpdGlvbiBhbGwgdG8gd2VsbC4gSSBpbiBhIHNvbWV3aGF0IHNpbWlsYXIgc3BvdCwgYW5kIHN0aWxsIGhhdmVuIHJlYWxseSBkZWNpZGVkIG15IG5leHQgbW92ZSBlaXRoZXIuIApEZXBhcnRtZW50IG9mIEVkdWNhdGlvbiBzbyB0aGF0IHRoZSBzY2hvb2wgbWlnaHQgYWdhaW4gYWNjZXNzIGZlZGVyYWwgc2Nob2xhcnNoaXAgZnVuZGluZy4gClRoYW5rcyBmb3IgeW91ciBpbnB1dC5HYXZpdGhlciAgNiBwb2ludHMgIHN1Ym1pdHRlZCA3IGRheXMgYWdvU2VhIGxldmVsIGFyY2hhZW9sb2d5IChhbmQgY29udGluZW50YWwgc3ViZHVjdGlvbiwgbm90IHN1cmUgaG93IHdlIGNhbiBkaWcgdGhhdCBvbmUpIGFyZSB0aGUgbGlrZWxpZXN0IGxlYWQgdG8gc2V2ZXJhbCBvZiBvdXIgcGxhbmV0IG15c3Rlcmllcy4gCmFuZCBvbmUgb2YgdGhlbSB5b3UgcHJvYmFibHkgZGlkbid0IGtub3cKSSBhZ2FpbnN0IHBheXdhbGxzLCB2ZWhlbWVudGx5IHNvLiAKVGhlIEJyaXN0b2wgUm9hZCBsb2NhdGlvbiAgIHdoZXJlIGdhbWluZyB3YXMgc3VzcGVuZGVkIGluIDIwMTAgZm9sbG93aW5nIHNpbWlsYXIgYWxsZWdhdGlvbnMgICBpcyBhbHNvIHRoZSBzaXRlIHdoZXJlIGEgZmF0YWwgSnVseSAyMDA5IHNob290aW5nIG9mIGEgcm9iYmVyeSBzdXNwZWN0IGJ5IGZvcm1lciBGbGludCBQb2xpY2UgQ2hpZWYgQnJhZGZvcmQgQmFyc2tkYWxlIHRvb2sgcGxhY2UuCkluIHRoZSBjYXNlIG9mIFNOQywgaGUgc3VnZ2VzdGVkLCB0aGUgYnVzaW5lc3MgY291bGQgYmUgbGVmdCBpbiBvbmUganVyaXNkaWN0aW9uLCB3aXRoIHRoZSBidXNpbmVzcyBtb3ZlZCB0byBhbm90aGVyLCBmcmllbmRsaWVyIG9uZS4gCkkgd29uZGVyIGlmIG9yIGhvdyBNeXN0cmEgcGxheXMgaW50byB0aGlzLiBTaGUgaXMgdGhlIFdlYXZlLCBzbyBJIGZlZWwgbGlrZSBzaGUgaGFzIGEgdmVzdGVkIGludGVyZXN0ZWQgaW4gdGhlIEtub3Qgbm90IGV4cGFuZGluZy4gCkkgbWFkZSBteSBlbnRpcmUgdGhydSB3aXRoIG5leHQgdG8gemVybyB0cmVhdG1lbnQgYW5kIGRpZG4gZ2V0IHNpY2ssIGJ1dCB5b3Ugd291bGRuIGNhdGNoIG1lIHRyeWluZyB0aGF0IHNoaXQgZm9yIGFueXRoaW5nIG5vdy4gV2l0aCBhcyBtYW55IHBlb3BsZSBhcyBhcmUgb24gdGhhdCB0cmFpbCwgZHJpbmtpbmcgdW50cmVhdGVkIHdhdGVyIGlzIGxpa2UgY3J1aXNpbmcgdXAgc2hpdCBjcmVlayB3aXRoIGEgdHVyZCB0aGF0IGRvdWJsZXMgYXMgeW91ciBwYWRkbGUgYW5kIHlvdXIgd2F0ZXIgYm90dGxlLiAKTW9zdCBmZWRlcmFsIGFuZCBzdGF0ZSBsYXdzIGRlZmluZSBnYW1ibGluZyBhcyBnYW1lcyBvZiBjaGFuY2UuIEJ1dCBwb2tlciBpcyBhIGdhbWUgd2hlcmUgYSBwbGF5ZXIncyBzdWNjZXNzIGlzIHByZWRvbWluYW50bHkgZGV0ZXJtaW5lZCBieSB0aGF0IHBsYXllcidzIHNraWxsLiAKSnVzdCBtYWtlIHN1cmUgeW91ciBjdXRzIGFyZSBldmVuIGFuZCBwcm9wb3J0aW9uYWwgdG8gdGhlIG51bWJlciBvZiBiZWFkcyBhbmQgc3RpdGNoZXMgdGhhdCB5b3UgY2FuIGFmZm9yZCB0byBtYWtlLi4gCkFsbCBvZiB3aGljaCBsZWFkcyB0byB0aGUgcmVhbCBxdWVzdGlvbjogd2hhdCB0byBtYWtlIG9mIGEgYnVuY2ggb2Ygc2hpcnRsZXNzIG1hbGUgc29sZGllcnMgZGFuY2luZyB0byBiYWQgcG9wIG11c2ljIGluIGEgdmFyaWV0eSBvZiB3YXlzIHRoYXQgYXJlIG1lYW50IHRvIGVsaWNpdCBob21vZXJvdGljIGRlc2lyZT8KRHJ5IHlvdXIgYmFieS4gUGF0IHRoZSBiYWJ5IGRyeTsgZG8gbm90IHJ1YiwgYmVjYXVzZSBhIGJhYnkncyBza2luIGlzIHZlcnkgZGVsaWNhdGUuIFJ1YmJpbmcgdG9vIG11Y2ggY2FuIGlycml0YXRlIHRoaXMgc2Vuc2l0aXZlIHNraW4uIApDcmVhdGUgbWFueSBteXNwYWNlIGFjY291bnRzIGFuZCBhdHRhY2sgeW91cnNlbGYgcmVwZWF0ZWRseS4gClBva2VyIENhcmQKRG8geW91IGhhdmUgYW55IG90aGVyIHN1Z2dlc3Rpb25zPwpRdW9pIHF1J2lsIGVuIHNvaXQsIGxvcnNxdSdpbCB5IGEgdW5lIGNhdGFzdHJvcGhlIG5hdHVyZWxsZSwgYydlc3QgbCdFdGF0IHF1aSBwYXllLCBsb3JzcXUnaWwgeSBhIGRlcyBkYm9yZGVtZW50cyBkdXMgIGRlcyBtYW5pZmVzdGF0aW9ucyBvdSBhdXRyZXMgcHJvYmxtZXMgc2ltaWxhaXJlcyBjJ2VzdCBsJ0V0YXQgcXVpIHBheWUuIFNldWxzIGxlcyBhY2Nyb2NoYWdlcyByZXN0ZW50ICBsYSBjaGFyZ2UgZGVzIGFzc3VyZXVycy4uIApTdG9yeSBvdXQgb2YgdHJ1ZSBwdWxwIGZpY3Rpb24uIApJdCBhbiBpbmNvbnZlbmllbmNlLCBidXQgd2UgbmV2ZXIgc2VlIGEgcm9hY2ggdW5sZXNzIHdlIGxlYXZlIGEgZHJhaW4gdW5jb3ZlcmVkIGZvciBhbiBleHRlbmRlZCBwZXJpb2Qgb2YgdGltZSwgZXNwZWNpYWxseSBvbiBhIHJhaW55IGRheSBvciBhdCBuaWdodC4uIApMb3ZlIGxpdmluZyBpbiBEZWVwIENvdmUsIGV4cGxhaW5zIEppbGwuIExvdmUgdGhlIHByb3hpbWl0eSB0byB0aGUgd2F0ZXIsIHRoZSBmb3Jlc3QsIHRoZSBsb2NhbCBjb21tdW5pdHkuIApDYWxsaW5nIFN0YXRpb246IEEgcGxheWVyIHdobyBpcyBjb25zaWRlcmVkIGEgd2Vha2xpbmcgaXMgYSBwZXJzb24gd2hvIGNhbGxzIGVhY2ggYmV0LgpQYXIgZGlmZnJlbnRlcyB2YWd1ZXMgZCBFbGxlIGxlcyBmYWl0IHZlbmlyLCBjb21tZSB0b3V0ZSBjaG9zZSBkICEgQ2V0dGUgcHJvdmVuYW5jZSBuIHJpZW4sIG5pIGxlcyBwYXJlbnRzIGN1bHR1cmVsbGVzIHN1cnByZW5hbnRlcyBlbnRyZSBQbGFzZ2VzIGV0IENlbHRlcywgbmkgbCBkZSBjZXJ0YWluZXMgdGVjaG5pcXVlcyBvY2NpZGVudGFsZXMuIApUaGUgdHdvIEEgU3RhciBJcyBCb3JuIGNvIHN0YXJzIHBlcmZvcm1lZCAiU2hhbGxvdyIgZHVyaW5nIHRoZSBhd2FyZHMgc2hvdyBhbmQgYnJvdWdodCB0aGUgY3Jvd2QgdG8gdGhlaXIgZmVldCBhZnRlcndhcmRzIHdpdGggYSByb2FyaW5nIHN0YW5kaW5nIG92YXRpb24uIApCZWxsZSBmb3V0YWlzZSBxdWFuZCB0b3V0ZSBsYSBjb21tdW5pY2F0aW9uLCAgbGEgdHRlIGR1ICJTeXN0bWUiIGVzdCB1bHRyYSB2aW9sZW50ZSAhQWluc2kgbGVzIHBhcnRpY3VsaWVycyBkZXZyYWllbnQgcydhc3RyZWluZHJlICB0b3Vqb3VycyBhcnJvbmRpciBsZXMgYW5nbGVzLiAKRGlkIHlvdSBoYXBwZW4gdG8gY2F0Y2ggdGhlIGZyb250IHBhZ2UgdGhyZWFkIGF3aGlsZSBiYWNrLCBhYm91dCBob3cgYW50aSBsaXR0ZXJpbmcgY2FtcGFpZ25zIHdlcmUgY3JlYXRlZCB0byBzaGlmdCBibGFtZSBmcm9tIHdhc3RlZnVsIGluZHVzdHJpZXMgb250byBjb25zdW1lcnMsIHNvIHRoYXQgdGhvc2UgaW5kdXN0cmllcyB3b3VsZG4gYmUgcmVndWxhdGVkPyBJdCByZWFsbHkgY2hhbmdlZCBteSB0aGlua2luZyBvbiB0aGlzLiBJdCBwb2ludGxlc3MgdG8gYXNrIHRlbnMgb2YgbWlsbGlvbnMgb2YgcGVvcGxlIHRvIGNoYW5nZSB0aGVpciBiZWhhdmlvciB3aGVuIHlvdSBjb3VsZCBqdXN0IHB1dCBjb21wbGV0ZWx5IHJlYXNvbmFibGUsIGNvbW1vbiBzZW5zZSwgYmVuZWZpY2lhbCB0byBhbGwgcmVndWxhdGlvbnMgb24gYSBoYW5kZnVsIG9mIGluZHVzdHJ5IHByYWN0aWNlcyBhbmQgc29sdmUgdGhlIHByb2JsZW0gYXQgaXRzIHJvb3QuIFRoZSBzYW1lIHRoaW5nIGNhbiBiZSBhcHBsaWVkIHRvIG91ciBwb2xpdGljYWwgc2l0dWF0aW9uOyBldmVuIGlmIFJlcHVibGljYW4gdm90ZXJzICJzaG91bGQiIGJlIGJsYW1lZCBiYXNlZCBvbiBzb21lIGFic3RyYWN0IGFyZ3VtZW50LCBpdCBjb21wbGV0ZWx5IGltcHJhY3RpY2FsIHRvIGRvIHNvLiAKQmFzaWNhbGx5LCB3aXRoIGZld2VyIHNhZmV0eSBlcXVpcG1lbnQgdGhlIGNpdmljIGlzIHN0aWxsIHNhZmVyIG9uIHRoZSBmcmVld2F5cyBhbmQgdHdpc3RpZXMgZHVlIHRvIGl0cyBjYXBhYmlsaXR5IGFzIHdlbGwgYXMgcm9hZCBwcmVzZW50LiBUaGUgcHJvYmxlbSBpcyB0aGF0IGl0IGRpZmZpY3VsdCBzb21ldGltZXMgdG8gY29udHJvbCB5b3Vyc2VsZiBhcyBJIGhhdmUgZG9uZSBhYm92ZSAxMDBtcGggY291bnRsZXNzIHRpbWVzIHdpdGggdGhlIHNpLiBGb3IgZnJlc2ggZ3JhZHVhdGVzIHdpdGggaGlnaCBpbnN1cmFuY2UgSSByZWNvbW1lbmQgdGhlIDMgb3IgYSBsZXNzIHBvd2VyIGNpdmljLiAKSSBzbGlnaHRseSBsZXNzIHNrZXB0aWNhbCwgb25seSBiZWNhdXNlIG9uZSBvZiBoaXMgYmVzdCBzZWFzb25zIHdhcyBpbiBhIFNoYW5haGFuIHN0eWxlIG9mZmVuc2UuIEhlIGFsc28gZG9lcyB3ZWxsIHdpdGggYSBncmVhdCBkZWZlbnNlLCBhbmQgd2UgaGF2ZSBvbmUuIEkgdGhpbmsgaXQgY291bGQgYmUgY2xvc2VyIHRvIG91ciAyMDE1IHNlYXNvbiwgYnV0IGEgYml0IGJldHRlciBvbiBvZmZlbnNlLCBpZiBGbGFjY28gaXMgYXQgbGVhc3QgaGVhbHRoeSBmb3IgdGhlIHllYXIuIFRoaXMgYWxzbyBtZWFucyB3ZSBwcm9iYWJseSBnbyBMQiBvciBDQiBpbiB0aGUgZmlyc3QsIGFuZCBqdXN0IGdldCBhIFFCIGZyb20gbmV4dCB5ZWFycyBjbGFzcywgYWZ0ZXIgd2UgZ2V0IGFsbCB0aGUgcGllY2VzIGluIHBsYWNlIGV2ZXJ5d2hlcmUgZWxzZS4gVGhpcyBpcyBqdXN0IG15IG9waW5pb24sIGFuZCBJIGNvdWxkIGJlIGNvbXBsZXRlbHkgd3JvbmcuCkJPTlVTOiBTdXJyb3VuZCB5b3Vyc2VsZiB3aXRoIHRoZSByaWdodCBwZW9wbGUuCk9kZXIgbm9jaCBiZXNzZXI6IHNpY2ggdm9uIHNlaW5lbSBTY2hhdHogZGFtaXQgbWFzc2llcmVuIGxhc3NlbiBkZW5uIEJvZHkgTWVsdHMgd2VyZGVuIGF1Y2ggb2Z0IE1hc3NhZ2UgQmFycyBnZW5hbm50Li4gCk9ubHkgbm93IGFsbCB0aGVpciBjYXJkc2FyZSBzaG93bi4gCk91ciBmcmllbmRzIHdlcmVuIGFzIHN1cHBvcnRpdmUgYXMgdGhleSBoYWQgYWx3YXlzIHRob3VnaHQgaXQgd2FzIHRveGljIHRoYXQgd2Ugd291bGQgZG8gImNvdXBsZSB0aGluZ3MiLiBOb25ldGhlbGVzcywgd2UgcmVtYWluZWQgYmVzdCBmcmllbmRzLCBvbmx5IHNsb3dseSBsb3NpbmcgdG91Y2ggd2hpbHN0IHdlIHdlbnQgb3VyIHNlcGFyYXRlIHdheXMgZm9yIGNvbGxlZ2UuIApXaGF0IEkgZG9uIHVuZGVyc3RhbmQgYWJvdXQgdGhlIHBvbGljZSBpbiB0aGlzIHNpdHVhdGlvbiBhbmQgdGhlIHBvbGljZSB0aGF0IGRlZmVuZCB0aGVpciBhY3Rpb25zIGlzIGhvdyB0aGV5IENPTlRJTlVFIHdpdGggdGhlIHNpdHVhdGlvbi4gQ29tbW9uIHNlbnNlIHdvdWxkIGhhdmUgdG9sZCBtZSB0aGF0IHRoZSBhY3Rpdml0eSBzZWVtcyBub24gc3VzcGljaW91cywgdGhlIGtpZCBpcyBtb3N0IGxpa2VseSBhIGdvb2QgcGVyc29uIGFuZCBub24gaG9zdGlsZSwgYW5kIHRoYXQgbXkgcHJlc2VuY2UgYW5kL29yIG15IGhhbmQgb24gbXkgZmlyZWFybSB3b3VsZCBtYWtlIGFueW9uZSBmZWVsIHVuY29tZm9ydGFibGUgYXMgdGhleSBmZWVsIHRoZWlyIGxpZmUgYmVpbmcgdGhyZWF0ZW5lZC4gVGhlcmUganVzdCBzbyBtYW55IHRoaW5ncyBjb21tb24gc2Vuc2Ugd291bGQgaGF2ZSB0b2xkIG1lLiAKQW5kIHRoYXQgbWFueSBtZW4gb24gcmVkZGl0IGRlZmluZSAiY3JlZXB5IiBpbiBhIHZlcnkgbmFycm93IHdheSAgYWxzbyBzZWUgdGhlIGRlZmluaXRpb24gaW4gdGhlIHNpZGViYXIuIApGb3IgZXhhbXBsZSwgd2hpbGUgYSBwYXJ0aWN1bGFyIDggeWVhciBvbGQgYW5kIDE0IHllYXIgb2xkIG1heSBoYXZlIHNpbWlsYXIgYWJpbGl0aWVzIGluIG1hdGhzLCB0aGV5IHdpbGwgaHVnZWx5IGRpZmZlcmVudCBpbiB0aGVpciBsZXZlbCBvZiBlbW90aW9uYWwgbWF0dXJpdHkgYW5kIGJlaGF2aW91ciByZWd1bGF0aW9uLCBtZWFuaW5nIHRoZXkgaGF2ZSB2ZXJ5IGRpZmZlcmVudCBuZWVkcyBpbiB0ZXJtcyBvZiBsZWFybmluZyBlbnZpcm9ubWVudCBhbmQgdGVhY2hpbmcgc3R5bGUuIFNpbWlsYXJseSwgd2hpbGUgZXZlcnkgaW5kaXZpZHVhbCBtYXR1cmVzIGF0IHRoZWlyIG93biByYXRlIGl0IHN0aWxsIGZhbGxzIHdpdGhpbiBhIG5vcm1hbCBkaXN0cmlidXRpb24sIHNvIHRoZSBtYWpvcml0eSBvZiBraWRzIGRvIHJvdWdobHkgbWF0Y2ggZWFjaCBvdGhlciBpbiB0ZXJtcyBvZiBzb2NpYWwsIHBoeXNpY2FsIGFuZCBjb2duaXRpdmUgZGV2ZWxvcG1lbnQuIApNYWtlcyBhIGRlY2lzaW9uIHRvIGxlYXZlIGFnYWluIGZvciBmYW1pbHkgcmVhc29ucy4KSSBsb3ZlIHRoZSB0b28gZmFjZWQgYm9ybiB0aGlzIHdheSEgTXkgZGFkIGNvdWxkbiB0ZWxsIHRoYXQgSSB3YXMgd2VhcmluZyBmb3VuZGF0aW9uLCBidXQgSSBkbyBsaWtlIHRvIGRhYiBpdCBvbiBsaWdodC4gSSBzdXBlciBzdXBlciBvaWx5LCBhbmQgdGhlIGZvdW5kYXRpb24gZ2V0cyBkZWNlbnRseSBvaWx5IHRocm91Z2hvdXQgdGhlIGRheSwgYnV0IEkganVzdCBsb3ZlIHRoYXQgdGhlIGZvdW5kYXRpb24gbG9va3Mgc28gbXVjaCBsaWtlIHNraW4gYW5kIHNvIG5hdHVyYWwgdGhhdCBJIGRvbiBldmVuIGNhcmUuIEkgdGhpbmsgaXQgYmUgcGVyZmVjdCBmb3IgY29tYmluYXRpb24gc2tpbi4gCkl0J3MgdGhlIGtpbmQgb2YgdGhpbmcgeW91J2QgZ2l2ZSBhd2F5IGZvciBmcmVlIHRvIHRoZSBmaXJzdCAiYW1vdW50IiBvZiBmYW5zIHRvIGNvbWUgdG8gdGhlIGdhbWUuIApKb25hdGhhbiBTY2hhbnplciwgc2VuaW9yIHZpY2UgcHJlc2lkZW50IG9mIHRoZSBGb3VuZGF0aW9uIGZvciBEZWZlbnNlIG9mIERlbW9jcmFjaWVzLiAKSG93YXJkJ3MgcG9zdCBnZW5lcmF0ZWQgbW9yZSB0aGFuIDM4NSwwMDAgdmlld3MgYnkgbWlkZGF5IFN1bmRheSBhbmQgY291bnRsZXNzIGNvbW1lbnRzLCBib3RoIGNyaXRpY2FsIGFuZCBzdXBwb3J0aXZlLgpJIHJlZnVzaW5nIHRvIHRha2Ugb3IgcmVseSBvbiBhIHBpbGwgZXZlcnkgZGF5IHRvIGJlIGhhcHB5LiAKV2Ugd291bGQgcHJlZmVyIHRvIGtlZXAgZnJvbSBlbmNvdXJhZ2luZyB0aGF0IHNvcnQgb2Ygc2VsZiBzZXJ2aW5nIGJlaGF2aW9yLCB3aGlsZSBhdCB0aGUgc2FtZSB0aW1lIHByb3ZpZGUgYSBwbGF0Zm9ybSBmb3IgcGVvcGxlIHdobyBhcmUgbW9yZSBpbnRlcmVzdGVkIGluIG9mZmVyaW5nIGVudGVydGFpbm1lbnQgdGhhbiB0aGV5IGFyZSBpbiBhIG51bWJlciBvbiB0aGVpciBwcm9maWxlLi4gCk5vIGZhY3R1YWwgaW5mbyBhdCBhbGwuIApBcnVtIGdpdmVzIFBhYyBvcHRpb25zLCBhbmQgUGFjcXVpYW8gcGlja3MgYW5kIGNob29zZXMgd2hvIGhlIHdhbnRzIHRvIGZpZ2h0IGJhc2VkIG9uIHJpc2ssIGZpbmFuY2lhbCByZXdhcmQsIGFuZCBuYW1lIHJlY29nbml0aW9uLiBTbyBpbiByZWFsaXR5LCBBcnVtIGlzIHN0aWxsIHRoZSBib3NzLi4gCkJ1dCBtb3JlIHRoYW4gaW4gdGhpcyBzcGVjaWZpYyBzaXR1YXRpb24sIEkgZmVlbCBsaWtlIHRoaXMgaXMgYSBwYXJ0aWN1bGFybHkgZGlzdHVyYmluZyBhc3BlY3Qgb2YgdGhlIG1pbGl0YXJpemF0aW9uIG9mIHBvbGljZTogdGhlIHdhcnpvbmUgbWVudGFsaXR5LCB3aGVyZSBvZmZpY2VycyBhcmUgbWFkZSB0byBmZWVsIGxpa2UgdGhleSBkb2luZyB0b3VycyBvZiBkdXR5IGluIGhvc3RpbGUgcGxhY2VzLiBUaGUgZmlyc3QgZHV0eSBvZiB0aGUgcG9saWNlIGlzIHN1cHBvc2VkIHRvIGJlIHRoZSBwcm90ZWN0aW9uIG9mIHRoZSBwdWJsaWMgaW50ZXJlc3QsIGFuZCB0aGVyZSBhIGNlcnRhaW4gbGV2ZWwgb2YgcGVyc29uYWwgcmlzayB0aGF0IG11c3QgYmUgYWNjZXB0ZWQgdG8gbWVldCB0aGlzIG9ibGlnYXRpb24uIFdlIHdvdWxkbiBhY2NlcHQgaGltIGZpcmluZyBsZXRoYWwgcm91bmRzIGJlY2F1c2Ugb2YgdGhlIHNtYWxsIGNoYW5jZSB0aGF0IGd1eSBtaWdodCBoYXZlIGEga25pZmUsIEkganVzdCB0aGluayB0aGF0IHNob3VsZCBiZSBleHRlbmRlZCB0byBhdm9pZGluZyBhbGwgaW5qdXJ5IGFic2VudCBhIGNyZWRpYmxlIGltbWluZW50IHRocmVhdCwgZXZlbiB0byBwZW9wbGUgd2UgbWF5IGZlZWwgZGVzZXJ2ZSB0byBiZSBodXJ0LiBIZWxsLCBldmVuIGluIHdhcnpvbmVzLCB0aGUgcnVsZXMgb2YgZW5nYWdlbWVudCBvZnRlbiBwcm9oaWJpdCBmaXJpbmcgb24gcG90ZW50aWFsIHRocmVhdHMgdW5sZXNzIGZpcmVkIHVwb24gICB3aHkgaXMgdGhhdCBhY2NlcHRhYmxlIGZvciBhIHNvbGRpZXIgYnV0IG5vdCBhIHBvbGljZSBvZmZpY2VyPwpFYWNoIHZvbHVudGVlciB3YXMgYWxzbyBhc3Nlc3NlZCBmb3IgdGhlaXIgcmlzayBvZiBQVFNEIGFuZCBhc2tlZCBpZiB0aGV5IGhhZCBleHBlcmllbmNlZCBhbnkgcmVjZW50IHVwc2V0dGluZyBldmVudHMgc3VjaCBhcyBhIGRpdm9yY2UsIHRoZWlyIHRlbmRlbmN5IHRvIHdvcnJ5LCBob3cgbXVjaCBhbGNvaG9sIHRoZXkgZHJpbmsgYW5kIGhvdyBtdWNoIHRoZXkgc2xlZXAuCk1laW4gRnJldW5kIE1pY2hpIGhhdCBpbiBkZXIga3VyemVuIFplaXQgc2VpbmVzIEJlc3VjaHMgYXVmIExhIFBhbG1hIHZpZWxlIFN0cm5kZSB1bmQgQmFkZW1nbGljaGtlaXRlbiBkZXIgSW5zZWwgZXJrdW5kZXQuIFNlaW5lIExhIFBhbG1hIFN0cmFuZCBJbXByZXNzaW9uZW4gdmVyZmZlbnRsaWNoZSBpY2ggYWxzIGtsZWluZSBTZXJpZSB2b24gR2FzdGJlaXRyZ2VuLiBIZXV0ZSBUZWlsIDQgZGVyIFNlcmllLCBkaWUgU3RyYW5kb3J0ZSBQdWVydG8gZGUgVGF6YWNvcnRlIHVuZCBQdWVydG8gTmFvczoKR3JhcGhpY3MgSW5wdXQvT3V0cHV0IFByb2dyYW1taW5nIEV4YW1wbGVzIFNjcmlwdGluZyBTdGFja3MgVG9vbHMgVG9vbHNldHMgLiAyNCBPY3QgMjAxNyAgIDUxIG1pbiAgIFVwbG9hZGVkIGJ5IFJqIFN5c3RlbXMgOiAgVGhlIEJyYW5kIG9mIFRydXN0IFJldG91Y2hpbmcgLiAKSXQncyBnb2luZyB0byBiZSBxdWl0ZSB0cmlja3ksIHNpbmNlIGl0IGlzIGRpZmZpY3VsdCB0byBpZGVudGlmeSBwb2tlciBib3QgcGxheSBmcm9tIGh1bWFuIHBsYXksIG1ha2luZyBpdCBhIHJpc2t5IGVuZGVhdm9yLiAKVmFjY2luZXMgaW4gdGhlIFVTIGFyZSBhbGwgYWNlbGx1bGFyIG9yIGF0dGVudWF0ZWQsIG1lYW5pbmcgdGhleSBhcmUgaW5jYXBhYmxlIG9mIHJlcGxpY2F0aW9uIG9mIGFueSBzb3J0LiBUaGUgb25seSBleGNlcHRpb24gdG8gdGhpcyBpbiBjb21tb24gdXNlIGlzIHRoZSBvcmFsIHBvbGlvIHZhY2NpbmUsIHdoaWNoIGluIGV4Y2VlZGluZ2x5IHJhcmUgY2FzZXMgY2FuIG11dGF0ZSB0byBhIHBhdGhvZ2VuaWMgZm9ybS4gSGVuY2UsIGl0J3Mgbm90IHVzZWQgaW4gdGhlIFVTQS4gCkNyaXRpY2l6ZXJzIGFyZSBlYXN5IHRvIHJlY29nbml6ZS4gVGhleSBhcmUgdGhlIHZhbXBpcmVzIHdobyBiZWxpdHRsZSB5b3UgYW5kIHBvaW50IG91dCB5b3VyIGZsYXdzIGFuZCBnZXQgam95IGZyb20gbWFraW5nIHlvdSBmZWVsIGJhZC4KV2hhdCBaIGRpZCBtdWNoIGJldHRlciB0aGFuIERyYWdvbiBCYWxsIHdhcyBkeW5hbWljIHZpbGxhaW5zIHdpdGggbW92aW5nIGdvYWwgcG9zdHMuIApBbHRob3VnaCBsb3lhbHR5IHByb2dyYW1zIGFsc28gaGF2ZSAidG90YWwgZGlzY3JldGlvbiIgdG8gcmUgYWN0aXZhdGUgYW4gYWNjb3VudCBvciByZXN0b3JlIHBvaW50cyBpZiB0aGV5IHdhbnQsIExlVmFzc2V1ciBzYWlkLCBpdCdzIGJldHRlciBmb3IgY29uc3VtZXJzIHRvIGJlIHNlbGVjdGl2ZSBhYm91dCB0aGUgbG95YWx0eSBwcm9ncmFtcyB0aGV5IGpvaW4uCk1pc2dpdmluZ3MgLiAKSXQgaXMganVzdCBhIGNvaW5jaWRlbmNlLCBldmVuIGlmIGl0IGhhcHBlbmVkIGluIHRoZSBzYW1lIG5pZ2h0LiBPdXIgZHJlYW1zIGFyZSBteXN0ZXJpb3VzIHRvIHVzLCBidXQgaXQgaXMgYSBuYXR1cmFsIGJpb2xvZ2ljYWwgcHJvY2VzcyBhbmQgdGhleSBhcmUgaW4gbm8gd2F5IGEgcHJlZGljdGlvbiBvZiB0aGUgZnV0dXJlIG5vciBhbiBpbnNpZ2h0IGludG8gc29tZSBraW5kIG9mIGhpZGRlbiBrbm93bGVkZ2UuIFNvIGl0IG1lYW5zIG5vdGhpbmcgZXhjZXB0IHRoYXQgMiBwZW9wbGUgaGF2ZSB0aGUgc2FtZSBkcmVhbSBhYm91dCB5b3UuClRoaXMgaXMganVzdCBtZSBzcGVjdWxhdGluZy4gQm90aCBCZW5ueSBhbmQgQmpvcm4gYXQgdmFyaW91cyB0aW1lcyBzZWVtIHRvIGFncmVlIG9yIGFja25vd2xlZGdlIHRoYXQgQUJCQSBtdXNpYyBpcyBjb3JueSBhbmQgdHJpdGUsIHRoZXkgc3VycHJpc2VkIGF0IGl0cyBsb25nZXZpdHksIGFuZCB0aGUgYXJkb3Igb2YgdGhlaXIgZmFucywgbmV3IGFuZCBvbGQuIEJqb3JuIHN0YXRlZCB0aGF0IHRoZXkgaGFkIG5vIGFjY2VzcyB0byBkcnVncywgYnV0IEkgZG9uIHJlYWxseSBiZWxpZXZlIHRoYXQgdGhleSBkaWRuIElmIHRoZXkgcmVhbGx5IHdhbnRlZCBhY2Nlc3MgdG8gZHJ1Z3MsIHRoZXkgY291bGQgaGF2ZSBnb3R0ZW4gaXQuIAoyMDE1LiBOb24gSW52YXNpdmUgSHVtYW4gQnJhaW4gU3RpbXVsYXRpb24gaW4gQ29nbml0aXZlIE5ldXJvc2NpZW5jZTogQSBQcmltZXIuIApBbGwgYXJlIHBvc3NpYmxlIGZvciBpcyBhZHZhbmNlZCB0ZWNobm9sb2d5IGFuZCBzbWFydCBmZWF0dXJlcy4gVGhpcyBtaW5pIHN0eWxlciB3aWxsIGRlbGl2ZXIgYW55IHR5cGUgb2Ygc3R5bGluZy4gCkNvZHkgY2F1Z2h0IHVwIHRvIG1lIHJpZ2h0IGFmdGVyIHRoZSBsYXN0IGFpZCBzdGF0aW9uLiAKVGhhdCwgbm8gbWF0dGVyIGhvdyBicmlsbGlhbnQgYW5kIGV2ZW4gZXRoaWNhbCBhIGNhbmRpZGF0ZSwgdGhleSB3aWxsIGJlIHN1Y2tlZCBpbnRvIHRoZSBpbmV2aXRhYmxlIGRlc2lyZSB0byBnZXQgcmUgZWxlY3RlZCBhbmQgdGhlIGNvbnN0YW50IHByb3N0aXR1dGlvbiBvZiB0aGVtc2VsdmVzIGZvciBjb250cmlidXRpb25zIHRvIHRoZWlyIGNhbXBhaWduczIuIApHbyBmb3J3YXJkIDEwIHllYXJzIChteSBhZ2UpIGFuZCB0aGUgbnVtYmVyIGlzIHZlcnkgbG93LiAKSXQgaXMgMS8zLCBGT0xEIEhFUkUuLiAKS2F0VGFpbGVkX0JhcmdoYXN0ICAzNiBwb2ludHMgIHN1Ym1pdHRlZCA2IGRheXMgYWdvClRoZSBuYXJyb3cgbWVkaWEgZm9jdXMgb24gdGhlICJubyBob3N0IiBkZWJhY2xlIGhhcyBjb21wbGV0ZWx5IG9ic2N1cmVkIHRoZSByZWFsIGlzc3VlIHdpdGggdGhlc2UgYXdhcmRzLCB0aGUgb25lIHRoYXQgc2hvdWxkIGJlIHRoZSBmb2N1cyBvZiBkaXNjdXNzaW9uIGJ1dCBzaW1wbHkgY2FuJ3QgYmUgdGFsa2VkIGFib3V0IGluIHRoZSBvcGVuLiBGb3IgdGhlIG1ham9yIGF3YXJkcyBxdWFsaXR5IGlzIG5vIGxvbmdlciB0aGUgcHJpbWFyeSBmYWN0b3IgdG8gYmUgY29uc2lkZXJlZC4gVGhlIG1vc3QgaW1wb3J0YW50IHF1YWxpdHkgbm93LCBhcyB3ZSBhbGwga25vdywgaXMgaWRlbnRpdHkuLiAKVGhhdCdzIG5vdCBoeXBlcmJvbGUuIFBva2VyIGhhcyBhIG5ldywgaGlwIGltYWdlLCB0aGFua3MgdG8gbG9hZHMgb2YgVFYgdGltZSBhbmQgYm9uYSBmaWRlIGNlbGVicml0eSBwbGF5ZXJzLCBhbmQgYSBjZW50dXJ5IG9mIHRoZW9yeSBhYm91dCBob3cgdGhlIGdhbWUgaXMgcGxheWVkIGlzIGluIGZsdXguIApDaGluZXNlIGd1eSBoYXMgYSAxSyBzdGFjayBzbyBJIGFtIGxpa2UgT0sgbGV0cyBnbyBhbmQgbWFrZSBpdCAxSy4gMm5kIENoaW5lc2UgZ3V5IHdobyBoYXMgMmsgbmV4dCB0byBtZSBzbmFwIGNhbGxzLiBJIGFtIGFjdHVhbGx5IHJlYWxseSBoYXBweSwgdGhpcyBzaG91bGQgYmUgc2xpZ2h0bHkgY29uY2VybmluZyBidXQgdGhlc2UgZ3V5cyBhcmUgaGVyZSB0byBnYW1ibGUgYW5kIDJuZCBvbmUgY2FuIGhhdmUgQVRDIGF0IHRoaXMgcG9pbnQgYmVjYXVzZSBoZSBpcyBub3cgZHJ1bmsgYW5kIHRpbHRlZCBhcyB3ZWxsIGFzIHZlcnkgbmV3IHRvIHBva2VyLiAKQnV0IHRoZSBtb3N0IGV5ZSBwb3BwaW5nIHJpc2VzIGhhdmUgY29tZSBpbiByZWNlbnQgZGVjYWRlcyBhbWlkIGFuIGVyYSBvZiBtZWdhIGNhc2lubyByZXNvcnRzIHRoYXQgYmVnYW4gd2hlbiBTdGV2ZSBXeW5uIG9wZW5lZCB0aGUgTWlyYWdlIGluIDE5ODkuIApMYXN0IERlY2VtYmVyIEkgd2FzIHJlYWxseSBnZXR0aW5nIGl0IGdvaW5nIGFuZCByb2xsaW5nIGFnYWluIChuaW5lIGdvYWxzIGluIGhpcyBmaXJzdCAzNiBnYW1lcykuIApBbiBpbWFnZSBvZiBNcy4gClNlYXJjaCBjb250aW51ZXMgZm9yIG1pc3NpbmcgTWFzdGVydG9uIG1hbgpJIGVuZGVkIHVwIGJ1cm5pbmcgYW5kIHNhbml0aXppbmcgbXkgSFggYW5kIHJ1bm5pbmcgdGhlIHdvcnQgdGhyb3VnaCBpdCB3aXRoIGNpdHkgd2F0ZXIgKDY1RikgaW4gdGhlIGV4Y2hhbmdlLiAKWW91IGNhbiBleHBhbmQgdGhhdCB0bywgd2hhdCB0aGV5IG1vdXRoIGlzIGRvaW5nL2hhcyBiZWVuIGRvaW5nLiBUaGVpciBmb3JlaGVhZC4gCldpdGggYSBzdGFydGluZyBNU1JQIG9mICQ3OSw5MDAsIHRoZSBBTUcgRTQzIGlzIHByaWNlZCB0byBjb21wZXRlIHdpdGggc2ltaWxhciBwZXJmb3JtYW5jZSBvcmllbnRlZCBsdXh1cnkgc2VkYW5zIHdoaWNoIGluY2x1ZGUgdGhlIEphZ3VhciBYRiBTIGFuZCBCTVcgTTU1MGkuIFRob3VnaCBib3RoIGFyZSBzdHJvbmcgcGVyZm9ybWVycywgZXNwZWNpYWxseSB0aGUgTTU1MGkgd2l0aCBpdHMgdHdpbiB0dXJibyBWOCBlbmdpbmUsIGJ1dCBuZWl0aGVyIG9uZSBjYW4gcXVpdGUgbWF0Y2ggdGhlIHJpY2hseSBhcHBvaW50ZWQgY2FiaW4gbm9yIHBvbGlzaCBvZiB0aGUgTWVyY2VkZXMuIEFuIEU2MyBpcyBtb3JlIG9mIGEgdGhyaWxsLCBhbmQgYW4gRTQwMCB3b3VsZCBtYWtlIGEgYmV0dGVyIGxhaWQgYmFjayBjcnVpc2VyLCBidXQgZm9yIGJhbGFuY2luZyBzcG9ydGluZXNzIHdpdGggY29tZm9ydCwgZmV3IG90aGVycyBjYW4gYmVhdCB0aGUgd2VsbCByb3VuZGVkbmVzcyBvZiB0aGlzIHBhY2thZ2UuClRoZSBkaWFnbm9zdGljIHJlY3RhbC92YWdpbmFsIHBhbHBhdGlvbiB3b3VsZG4gbmVlZCB0byBiZSBkb25lIHdoaWxlIHdhbGtpbmcuIEkgaG9uZXN0bHkgbmV2ZXIgZXZlbiBzZWVuIHRoYXQgZG9uZSwgeW91ciB2ZXQgaXMgYnJhdmUhIGxvbEJ1dCBJIGRpZCBpbmNsdWRlIGluZGljYXRvcnMgd2hpY2ggY2FuIGhlbHAgcG9pbnQgdG8gYSBkaWFnbm9zaXMsIGV2ZW4ganVzdCBhIHZpc3VhbCBjb25maXJtYXRpb24gaGVyIHBvaW50cyBvZiBoaXAgYXJlbiBsZXZlbCBhbmQgc3ltbWV0cmljYWwgaXMsIGluIGl0c2VsZiwgZGlhZ25vc3RpYy5TTyB3aGF0IGFyZSB0aGUgb3B0aW9ucy4gWCByYXk/IG9yIGp1c3Qgc2Vjb25kIG9waW5pb24/IG1vcmUgcGFscGF0aW9uLiAKQmV0dGluZyAxMDAgaW50byAxODAgYW5kIHBpY2tpbmcgdXAgYSBjYWxsZXIgPSB0aGVyZSAzODAgaW4gdGhlIHBvdCBhbmQgaGUgaGFzIDEwNSBiZWhpbmQuIEFueW9uZSB3aG8gaGFzIGEgY2x1ZSBpcyBnb25uYSByZWNvZ25pemUgdGhhdCBoZSBoYXZlIGEgdGlueSBmcmFjdGlvbiBvZiB0aGUgcG90IGJlaGluZCB3aGVuIGNhbGxlZCBhbmQgdGh1cyBjYW4gbmV2ZXIgYmx1ZmYgdHVybnMsIHNpbmNlIGhlIGNhbiBiZSBibHVmZmluZyB0dXJucyBoZSBjYW4gYmUgYmx1ZmZpbmcgZmxvcCBlaXRoZXIsIGFzIGEgZmxvcCBiZXQgd291bGQgYmUgc2l6ZWQgc3VjaCB0aGF0IGlmIGl0IGRvZXNuIHdvcmsgdGhlcmUgd291bGQgYmUgc3VmZmljaWVudCByb29tIHRvIG1hbmV1dmVyIG9uIHRoZSBuZXh0IHN0cmVldCBhbmQgZGVjaWRlIHdoZXRoZXIgb3Igbm90IHRvIGZpcmUgYW4gYWRkaXRpb25hbCBiYXJyZWwuLiAKT3V0ZG9vcnNIZWFkbGluZXNCUkFEIERPS0tFTiBDT0xVTU46IFVwY29taW5nIEVyc2tpbmUsIE1pbm4uLCBmaWxtIGZlc3RpdmFsIGhpZ2hsaWdodHMgaHVudGluZyBmaWxtcyBmcm9tIG1lbWJlcnMgb2YgVGhlIFN0b3J5RmxvcmlkYSBmaXNoaW5nIGZyZW56eTogIkd1bnMhIEd1bnMhIEd1bnMhIiBHcm91cCdzIEd1bGYgZ3JvdXBlciBnYXRoZXJpbmcgZ29lcyBncmVhdEJlbHRyYW1pIGZvcmVzdCByaWRlIHNob3djYXNlcyB0cmFpbCBlZmZvcnRzIG9mIGxvY2FsIHNub3dtb2JpbGUgY2x1YnNBTFdBWVMgSU4gU0VBU09OLyBNSUtFIEpBQ09CUzogTG9uZ3NwdXJzOiBNb3JlIG9mdGVuIHNlZW4gdGhhbiByZWNvZ25pemVkIE9VVERPT1JTIENBTEVOREFSOiBCYW5xdWV0cywgSHVudGluZyBmaWxtIGZlc3RpdmFscyBhbmQgZmFtaWx5IGV2ZW50cyBhbW9uZyBvdXRkb29yIGFjdGl2aXRpZXMgb24gdGFwb3BpbmlvbkhlYWRsaW5lc0xldHRlcjogQ2hhbGxlbmdlIEdyYW50IGludmVzdHMgaW4gTm9ydGggRGFrb3RhIGZ1dHVyZU91ciB2aWV3OiBGb3Igc2FrZSBvZiBsb2NhbCBiYXNlIGFwcHJvdmUgMjMwNiBTaGF3OiBSZW1lbWJlcmluZyBmb3JtZXIgTkQgR292LiBHZW9yZ2UgU2lubmVyUG9ydDogTGF3IGVuZm9yY2VtZW50IGZvdW5kIG5vIHRocmVhdCB0byBSZXAuIEJ1dCB0aGV5IGhhZCBhIHByb2JsZW0uIApPciBhdCBhbGwgaW4gc29tZSBjYXNlcy5PZiBjb3Vyc2UgaWYgeW91IGhhdmUgYSB2ZXJ5ICJyaWNoIiBmcmllbmQgdGhhdCBoYXMgYSBsb3Qgb2YgcG9rZXIgY2hpcHMsIGFuZCBwbGF5cyBvbiBoaWdoIHN0YWtlIHRhYmxlcyB5b3UgY2FuIGFsc28gZ2V0IHBva2VyIGNoaXBzIGZyb20gaGltIC5JbiBhbnkgY2FzZSB3aGF0IGV2ZXJ5b25lIHNob3VsZCB3YXRjaCBvdXQgZm9yIGlzIFNjYW0gZW1haWxzIGFuZCBtZXNzYWdlcyBpbiBmYWNlYm9vayB3aGVyZSB5b3UgYXJlIHN1cG9zZSB0byBiZSBhd2FyZGVkIG9yIGJhbmVkIGZvciBhbnkgcmVhc29uLCBhbmQgeW91IGFyZSBhc2tlZCB0byBjbGljayBhIGxpbmsgdG8gdmVyaWZ5IHlvdXIgYWNjb3VudCwgd2hlcmUgeW91IHdvdWxkIG5lZWQgdG8gbG9naW4gb2YgY291cnNlOyB3aGVuIHlvdSBsb2dpbiB0byB0aGF0IGxpbmsgeW91IGRvbid0IGFjdHVhbGx5IHZlcmlmeSBhbnl0aGluZyB5b3UganVzdCBnaXZlIG91dCB5b3VyIHBhc3N3b3JkIGFuZCBhY2NvdW50IHRvIHNvbWUgaGFja2Vycy4gCkNhbiBiZSBmb3VuZG9uIFlvdXR1YmUuIDM2KSBMdXYgVVN1bSAoYnkgQ0ogSG9sbGFuZCBmZWF0LiAKTmljZS4gV2UnbGwgc2VuZCB5b3UgYSBwb3N0Y2FyZCB3aGVuIHdlIGdldCBiYWNrIGZyb20gb3VyIHZhY2F0aW9uLiAKSGl0bGVyIHdhcyBjYXRob2xpYy4gSGUgZGlkIHdyaXRlIHRvIHRoZSBwb3BlIGFib3V0IHRoZSBraWxsaW5ncyBvZiBqZXdzIHRoYXQgaXMgd2VsbCBrbm93bi4gCkFtYXpvbiBhbHNvIGlzIHdvcmtpbmcgbW9yZSBjbG9zZWx5IHdpdGggTWFkaXNvbiBBdmVudWUgdG8gaW1wcm92ZSBpdHMgYWR2ZXJ0aXNpbmcgdGVjaG5vbG9neSBhbmQgZGF0YSBzZXJ2aWNlcywgd2hpY2ggY291bGQgaGVscCBwcm92ZSB0byBicmFuZHMgdGhhdCBhZHMgYXJlIG1vc3QgZWZmZWN0aXZlIG9uIGl0cyBwbGF0Zm9ybS4KV2l0aCBtb3JlIHRoYW4gdHdvIGRvemVuIGxvY2F0aW9ucywgVG9wIFBvdCBzYXlzIGl0IHdhcyBpbnNwaXJlZCB0byBjcmVhdGUgYSBwbGFjZSB3aGVyZSBjb3VsZCBzbG93IGRvd24gYW5kIHNhdm9yIHRoZSBub3N0YWxnaWEgYW5kIHRhc3RlIG9mIGEgc2VjcmV0IDE5MjBzIGRvdWdobnV0IHJlY2lwZSwgcGVyIGl0cyB3ZWJzaXRlLiAKSXQgaXMgc2FmZSBmb3IgYnJlYXN0ZmVlZGluZyB3b21lbiB0byByZWNlaXZlIE1NUiB2YWNjaW5hdGlvbi4gQnJlYXN0ZmVlZGluZyBkb2VzIG5vdCBpbnRlcmZlcmUgd2l0aCB0aGUgcmVzcG9uc2UgdG8gTU1SIHZhY2NpbmUsIGFuZCB0aGUgYmFieSB3aWxsIG5vdCBiZSBhZmZlY3RlZCBieSB0aGUgdmFjY2luZSB0aHJvdWdoIGJyZWFzdCBtaWxrLgpJdCBpcyBzdWdhci4gU3VnYXIgaW4gYW55IGZvcm0gb3IgcmVmaW5lZCBjYXJib2h5ZHJhdGVzICh3aGl0ZSBmb29kKSBkcml2ZXMgdGhlIGdvb2QgY2hvbGVzdGVyb2wgZG93biwgY2F1c2UgdHJpZ2x5Y2VyaWRlcyB0byBnbyB1cCwgY3JlYXRlcyBzbWFsbCBkYW1hZ2luZyBjaG9sZXN0ZXJvbCBwYXJ0aWNsZXMsIGFuZCBjYXVzZXMgbWV0YWJvbGljIHN5bmRyb21lIG9yIHByZSBkaWFiZXRlcy4gClRoYXQgd2FzIGEgdGhvcm91Z2hseSBlbmpveWFibGUgZXhwZXJpZW5jZSB0b28hLiAKSW4gYSBtZWRpdW0gc2tpbGxldCBvdmVyIHRoZSBtZWRpdW0gaGlnaCBoZWF0LCB0b2FzdCB0aGUgb2F0cywgc3RpcnJpbmcgb2Z0ZW4sIHVudGlsIGZyYWdyYW50LCBhYm91dCA1IG1pbnV0ZXMuIEFkZCB0aGUgc3VnYXIgYW5kIHRoZSBzYWx0LCB0aGVuIHN0aXIgdW50aWwgdGhlIHN1Z2FyIG1lbHRzIGFuZCB0dXJucyBnb2xkZW4gYnJvd24uIFJlbW92ZSB0aGUgc2tpbGxldCBmcm9tIHRoZSBoZWF0IGFuZCBzdGlyIGluIHRoZSBidXR0ZXIuIFNwb29uIG9udG8gdGhlIHByZXBhcmVkIGJha2luZyBzaGVldCBhbmQgc2V0IGFzaWRlIHRvIGNvb2wuClRvIGNvbmNsdWRlIHRoYXQgIkNPREUgZG9lc24gaGF2ZSBhbnl0aGluZyBpbiBjb21tb24gd2l0aCB0aGUgYmVzdCB1bmlzIGluIHRoZSB3b3JsZCIgZnJvbSB3aGF0IEkgc2FpZCBpcyBhIGxvZ2ljYWwgZmFsbGFjeS4gCk5vdCBlYXRpbmcgZW5vdWdoLCBub3QgZXhlcmNpc2luZyB3aGlsZSBsb3Npbmcgd2VpZ2h0IGV0Yy4pLCB0aGUgd2VpZ2h0IHlvdSBsb3NlIHdpbGwgbWFrZSBpdCBlYXNpZXIgdG8ganVtcCBhdCBhIG11Y2ggZmFzdGVyIHJhdGUgdGhhbiB0aGUgbG9zcyBmcm9tIG11c2NsZSBkZXRlcmlvcmF0aW9uLiAKQ29tcGxhaW50cyBmaWxlZCB3aXRoIHRoZSBjaXR5IEJ1aWxkaW5ncyBEZXBhcnRtZW50IHNob3cgYWxsZWdhdGlvbnMgb2YgcHJvc3RpdHV0aW9uIGF0IHRoZSBhZGRyZXNzLCBpbmNsdWRpbmcgb25lIGluIE5vdmVtYmVyLiBJbnNwZWN0b3JzIHRyaWVkIHR3aWNlIGluIHRoZSBwYXN0IHR3byBtb250aHMgdG8gZ2FpbiBhY2Nlc3MsIHJlY29yZHMgc2hvdywgYnV0IGRpZG4ndCBnZXQgaW4uCjE0MiBvZiB0aGVtIGZpbGUgYSBsYXdzdWl0IHRvIGZpbmQgb3V0IHdobyB0aGVpciBmYXRoZXIgaXMsIGFuZCBoZSdsbCBoYXZlIHRvIGRlY2lkZSBob3cgdG8gaGFuZGxlIHRoZSBzaXR1YXRpb24uIApEaWxrZW5zIGlzIGFscmVhZHkgc2F5aW5nIGhlIHdhbnRzIHRvIGRlbGl2ZXIgb24gaGlzIGNhbXBhaWduIHByb21pc2Ugb2YgaG9sZGluZyB0aGUgbGluZSBvbiB0YXhlcywgd2hpY2ggaGUgc2F5cyBtZWFucyBrZWVwaW5nIGluY3JlYXNlcyBiZWxvdyB0aGUgaW5mbGF0aW9uIHJhdGUgb2YgYXJvdW5kIHR3byBwZXIgY2VudC4uIApUcnVtcCBzYWlkIGhlIG5vdGljZWQgImEgbGl0dGxlIGNoYW5nZSIgaW4gS2ltIEpvbmcgVW4gImF0dGl0dWRlIiBhZnRlciBLaW0gdG9vayBhIHNlY29uZCB0cmlwIHRvIENoaW5hIHRoaXMgbW9udGggaW4gdGhlIHJ1biB1cCB0byB0aGUgc3VtbWl0LiAiSSBkb24gbGlrZSB0aGF0LCIgVHJ1bXAgc2FpZC4KJDI1ICQzNS4gCldoYXQgZG8geW91IHJhbmdlIHZpbGxhaW4gYXQgZm9yIHRoZSA0IHRvIGJlIGEgYmFkIGJhcnJlbCBjYXJkIHdoZW4gdGhlIGZsdXNoIGhpdHM/IEkgYXNzdW1pbmcgdGhhdCBmb3IgNHMgaGUgb25seSBoYXMgQTRzLCBtYXliZSA1NHMvNjRzIGluIGhpcyBjb2xkIGNhbGwgcmFuZ2UuCkFsbCBkaXJ0eSBmb3IgbXkgYXJyaXZhbC4gSGUgd291bGQgZmxpcCBvdXQgaWYgSSBhZGRyZXNzZWQgaXQuIApUaGVyZSB3YXMgYSB0aW1lIHRoYXQgcGxheWVycyB3ZXJlIGdpdmVuIGJldHRlciBvZGRzIGluIG9ubGluZSBibGFja2phY2suIApXZSBnb3QgYSBncm91cCByb29tIHRoYXQgaGFkIGFib3V0IDYgb2YgdXMuIEkgdGhpbmsgdGhlIHBsYWNlIGRpZG4gaGF2ZSBhbnkgb2YgdGhlIGhhcHB5IGVuZGluZ3MgYmVjYXVzZSB5b3Ugd2VyZSBub3QgYWxsb3dlZCB0byB0aXAgdGhlIG1hc3NldXNlLCBhbGwgbW9uZXkgaGFkIHRvIGJlIGhhbmRsZWQgYXQgdGhlIGZyb250IGRvb3IsIGFuZCB0aGV5IHNlZW1lZCB0byBiZSB3YXRjaGluZyB0aGUgZ2lybHMgcHJldHR5IGNhcmVmdWxseS4gCklmIEJldGhlc2RhIGhhZCBnb25lIHRoZSBleHRyYSBtaWxlIHRvIG1ha2UgdGhpcyB0aGUgbW9zdCBzdGFibGUgdmVyc2lvbiBvZiBTa3lyaW0gdG8gZGF0ZSwgdGhleSB3b3VsZG4gaGF2ZSBkb25lIHNvIGluIHNlY3JldC4KU2l0dGluZyBhdCBteSBzaGl0dHkgZGVzayBjaGFpciwgSSBncmFiYmVkIG15IGFuZCBpbnN0ZWFkIG9mIHBpY2tpbmcgdXAgd2hlcmUgSSBsZWZ0IG9mZiwgSSB3YXMganVzdCBmbGlwcGluZyB0aHJvdWdoIHRoZSBwYWdlcy4gTW9zdCBiYWJpZXMuIEFuZCBhIG51bWJlci4gSSByZW1lbWJlciBub3Qgc2VlaW5nIHRoZSBudW1iZXIgYXMgSSByZWFkIGl0IGJlY2F1c2UgZXZlcnl0aGluZyB3ZW50IGRhcmsgYXQgdGhlIHRpbWUuIEkgZG9uIHJlbWVtYmVyIHdoYXQgdGhlIHJlY29yZCB3YXMgZm9yICAgbW9zdCBiYWJpZXMgc29tZXRoaW5nLiBJIHJlbWVtYmVyIGl0IHNvIHdlbGwgdXAgdG8gdGhhdCBtb21lbnQgICBJIGNhbiBzbWVsbCBhbmQgdGFzdGUgdGhlIG1pbnV0ZXMgbGVhZGluZyB1cCB0byBpdC4gSSBjb3VsZCBpbW1lcnNlIHlvdSBpbiB0aGF0IG1vbWVudCBhbmQgeW91IHdvdWxkbiBrbm93IHRoYXQgeW91IHN3aXRjaGVkIHBsYWNlcywgd2l0aCBob3cgZnVja2luZyBzdHJvbmcgdGhpcyBtb21lbnQgaXMuIEkgd2FzIHNvIHBzeWNoZWQgdGhhdCBub3Qgb25seSB3YXMgSSBnb2luZyB0byBiZSBhIHJlY29yZCBob2xkZXIsIGJ1dCBJIGdldCB0byBkbyBpdCBtYWtpbmcgYmFiaWVzLiBCdXQgSSBjYW4gdGVsbCB5b3Ugd2hhdCBpdCB3YXMuIEkgYmVlbiBmbGlwcGluZyB0aHJvdWdoIHRoZSBib29rIHdoaWxlIGxpc3RlbmluZyB0byBteSB2b2ljZW1haWwuIEEgcmVhbGx5IGNsb3NlIGZyaWVuZCBoYWQganVzdCBiZWVuIGtpbGxlZCBieSBhIGRydW5rIGRyaXZlciwgYW5kIG1lICAgcmVhZHkgdG8gZnVjayBteSB3YXkgdG8gYSB3b3JsZCByZWNvcmQgSSBsaXN0ZW5pbmcgdG8gaXQgb25jZSwgbGlrZSBJIGhhdmUgdG8gcmVwbGF5IHRoaXMgSSBtdXN0IGJlIGNyYXp5IGhlIG11c3QgaGF2ZSBzYWlkIHNoZSBOT1QgZGVhZCBhbmQgdGhlIHNlY29uZCB0aW1lIGFyb3VuZCwgYWxsIEkgaGVhciBpcyB0aGUga2lkIHdhaWxpbmcgaW4gdGhlIGJhY2tncm91bmQuIEFuZCBhIHNjcmVhbWluZyBiYWJ5LiBIZXIgYnJvdGhlci4gSGVyIHNpc3Rlci4gRlVDSyBTSFVUIFVQIEkgTkVFRCBUTyBIRUFSIGRlYWQgV2hlZWVld3d3d3d3d3cuIEkgc3BpcmFsZWQgcmVhbGx5IGZhc3QsIHJlYWxseSBmYXIuIFJlYWwsIGFjdXRlLCBlbW90aW9uYWwgdHJhdW1hLCBhbmQgbm90IHRoZSBiZWNhdXNlIHdlIGJyb2tlIHVwIHNoaXQgSSBzcGVudCBNWSBXSE9MRSBMSUZFIHRoaW5raW5nIHdhcyBteSB0cmFpbmluZyBmb3Igd2hhdCBJIGhhdmUgdG8gZ28gb3V0IGludG8gdGhlIHdvcmxkIGFuZCBmYWNlIEVWRVJZIEZVQ0tJTkcgREFZLgpDJ2VzdCBsZSBjYXMgZHUgUnNlYXUganVkaWNpYWlyZSBldXJvcGVuIGV0IGR1IFJzZWF1IGV1cm9wZW4gZGUgcHJ2ZW50aW9uIGRlIGxhIGNyaW1pbmFsaXQgKFJFUEMpLCBkZSBGcm9udGV4LCBkJ0V1cm9wb2wsIGQnRXVyb2p1c3Qgb3UgZHUgQ29sbGdlIGV1cm9wZW4gZGUgcG9saWNlLiAKV2l0aCBMaXVmYXUgYW5kIG1hbnkgb2YgaGlzIHRvcCB3ZWFwb25zIGZyb20gMjAxNCBpbmNsdWRpbmcgcmVjb3JkIGJyZWFraW5nIHJlY2VpdmVyIE5lbHNvbiBTcHJ1Y2UgYmFjayB0aGlzIHllYXIsIHRoZSBCdWZmcyBmaWd1cmVkIHRvIHBpY2sgdXAgd2hlcmUgdGhleSBsZWZ0IG9mZiwgYnV0IHRoYXQgaGFzbid0IGJlZW4gdGhlIGNhc2UuIldlIHdlcmUgYWJsZSB0byBnZXQgaW50byBpdCBlYXJseSBsYXN0IHllYXIsIiBTcHJ1Y2Ugc2FpZC4gIldpdGggd2hhdCB0ZWFtcyB3ZXJlIGdpdmluZyB1cyBlYXJseSBpbiB0aGlzIHNlYXNvbiwgd2Ugd2VyZSBydW5uaW5nIHRoZSBiYWxsIGEgYnVuY2gsIGFuZCBJIGRvbid0IHRoaW5rIHdlIHJlYWxseSBkZXZlbG9wZWQgdGhhdCByaHl0aG0gd2UgaGFkIGdvaW5nIGVhcmx5IGxhc3QgeWVhci4gSSB0aGluayBpdCdzIG9ubHkgYSBtYXR0ZXIgb2YgdGltZSBiZWZvcmUgd2Ugc3RhcnQgZ2V0dGluZyBpbnRvIGl0LiIKSG93ZXZlciwgdGhlcmUgaXMgc3RpbGwgbm90aGluZyB3cm9uZyB3aXRoIHB1cmNoYXNpbmcgYSByZWd1bGFyIGJhc2tldCBpZiB5b3UgcHJlZmVyIHRvIGZvbGxvdyB0cmFkaXRpb25zLi4gCldoeSB1c2UgYSB3aGlybHBvb2wgb3IgYWlyIHR1YiBhdCBhbGw/IE90aGVyIHRoYW4gdGhlIGZhY3QgdGhhdCBpdCBmZWVscyBnb29kLCBpdCBqdXN0IG1heSBiZSBnb29kIGZvciB5b3UsIHRvby4gCkFsb25nIHdpdGggZm9vZCBmcm9tIEZsb3dlciBDaGlsZCAoYSBMYXMgVmVnYXMgcmVzdGF1cmFudCksIHNvbWUgc2xpY2VkIGZydWl0LCBhbG1vbmQgbWlsaywgY2VyZWFsLCBhbmQgUG9wIFRhcnRzIGhlIGhhcyBpbiBoaXMgZnJpZGdlLCBtZWFscyBhcmUgYmVpbmcgZGVsaXZlcmVkIHRvIEFsYXRpIGR1cmluZyB0aGUgMzAgZGF5cywgYnV0IG5vdCBvbiBhIHJlZ3VsYXIgYmFzaXMgc28gYXMgbm90IHRvIGdpdmUgaGltIGFueSBpbmRpY2F0aW9uIGFzIHRvIGhvdyBtdWNoIHRpbWUgaGFzIHBhc3NlZC4KIllvdSd2ZSBnb3QgZm91ciBtZW1iZXJzIG9mIHRoZSBMYWJvciBQYXJ0eSwgdHdvIG1lbWJlcnMgb2YgdGhlIEdvdmVybm1lbnQsIiBzaGUgc2FpZC4KRWRpdDogYSBsb3Qgb2YgYnV0dGh1cnQgcGVvcGxlIGhlcmUuIApUaGUgUyBNQVggaGFzIGJlZW4gYSBwb3B1bGFyIDcgcGFzc2VuZ2VyIHNtYWxsIGNyb3Nzb3ZlciB2ZWhpY2xlLiBUaGUgY29uY2VwdCB2ZXJzaW9uIHdpbGwgZmVhdHVyZSBGb3JkIG5ldyBmYWNlLCBhcyB3ZWxsIGFzIGEgc2xlZWtlciBsb29rIGZvciBhIHZlaGljbGUgdGhhdCBhbHdheXMgYmVlbiBjb25zaWRlcmVkIGEgc3R5bGUgbGVhZGVyLgpXaGlsZSBjb21wbGV0ZSBpbmZvcm1hdGlvbiBpcyBub3QgYXZhaWxhYmxlLCBmcm9tIHdoYXQgaXMgYXZhaWxhYmxlIG9uIGhlciBGYW1lIEJhbGwgVG91ciwgMyw1MDAgcGVvcGxlIHdlbnQgdG8gaGVyIGNvbmNlcnQgaW4gV2FzaGluZ3RvbiwgREMsIHdoaWNoIGlzIHRoZSBoaWdoZXN0IG51bWJlciBJIGNhbiBmaW5kLiBBZ2FpbiwgZnJvbSB3aGF0J3MgYXZhaWxhYmxlLCB3aXRoIE5LT1RCIHNoZSBjb3VsZCd2ZSBwZXJmb3JtZWQgaW4gZnJvbnQgb2YgYmV0d2VlbiAxLDU3MSBhbmQgMjcsMDE3IHBlb3BsZSwgYW5kIHdpdGggdGhlIERvbGxzLCBzaGUgY291bGQgaGF2ZSBwZXJmb3JtZWQgaW4gZnJvbnQgb2YgYmV0d2VlbiA0LDMyMyBhbmQgMjgsMzA1IHBlb3BsZS4gRmluYWxseSwgc2hlIHBlcmZvcm1lZCBhdCB0aGUgMjAwOSBNVFYgVk1BIGF3YXJkcyAoYW5kLCBpbiBteSBvcGluaW9uLCBnYXZlIHRoZSBiZXN0IHBlcmZvcm1hbmNlKSwgd2hpY2ggd2FzIHdhdGNoZWQgYnkgYXBwcm94aW1hdGVseSBuaW5lIG1pbGxpb24gcGVvcGxlLiAKIDIwIHBvaW50cyAgc3VibWl0dGVkIDIyIGhvdXJzIGFnb0JpZ25lc3MgaXNuIGV2ZXJ5dGhpbmcuIEkgcGVyc29uYWxseSBsb3ZlIGFsbCB0aGUgQXZlbmdlcnMgbW92aWVzLCBidXQgdGhleSBhbGwgdGVhbXVwIG1vdmllcyB3aXRoIGVwaWMgc3Rha2VzIGFuZCB0b25zIG9mIGNoYXJhY3RlcnMgYW5kLCB5ZWFoLCBsb3RzIG9mIGZ1bi4gQnV0IGF0IHRoZSBlbmQgb2YgdGhlIGRheSwgYSBnb29kIHNvbG8gbW92aWUsIG9yIG9uZSB0aGF0IGlzIGEgdGVhbXVwIGJldHdlZW4gYSBzbWFsbGVyIG51bWJlciBvZiBjaGFyYWN0ZXJzLCBoYXMgbW9yZSByb29tIGZvciBmb2N1c2luZyBvbiB0aGUgZ3Jvd3RoIGFuZCBkZXZlbG9wbWVudCBvZiB0aGF0IGNoYXJhY3RlciBhbmQgZm9jdXNpbmcgb24gdGhlaXIgb3duIHBlcnNvbmFsIHN0YWtlcy5JdCBsaWtlIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gYSBodWdlIGJ1ZmZldCBhbmQgYSB2ZXJ5IHdlbGwgbWFkZSB2ZXJzaW9uIG9mIHlvdXIgZmF2b3JpdGUgZGlzaC5yeWNvbG9neSAgMyBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ29JZiBpdCdzIGEgbG9zZSBsb3NlIHRoZW4gdGhleSBzaG91bGQganVzdCBpbXBsZW1lbnQgdGhlIHRlY2ggY29tcGxldGVseSByYXRoZXIgdGhhbiBwYXJ0aWFsbHkuIApLZWVwIGluIG1pbmQgdGhhdCB0aGUgYmVzdCBhc3NldCBvZiBiZWluZyBhIG1hc3NhZ2UgdGhlcmFwaXN0IGlzIHRoZSBmbGV4aWJpbGl0eSB0aGF0IGl0IGJyaW5ncyBpbiB0ZXJtcyBvZiB0aGUgd29yayB2ZW51ZSBhbmQgdGltZS4gCk1pYW1pIEJlYWNoIGFuZCBNaWFtaSBwb2xpY2UgZXN0YWJsaXNoZWQgYSBsYXJnZSBwZXJpbWV0ZXIgYmV0d2VlbiBOVyA3dGggQ291cnQgdG8gOHRoIEF2ZW51ZSBhbmQgMTF0aCB0byAxMnRoIFN0cmVldHMuClBva2VyIEdyZWF0IFBoaWwgSXZleSBPcmRlcmVkIFRvIFJldHVybgoiQWJlciBkZXIgZ2VuYXVlIFplaXRwdW5rdCBzdGVodCBub2NoIG5pY2h0IGZlc3QuIiBEZXJ6ZWl0IGdlaHJlbiB6dSBkZXIgR3J1cHBlIHNpZWJlbiBIb3RlbHMgaW4gSGFtYnVyZywgRnJhbmtmdXJ0LCBXaWVuLCBacmljaCB1bmQgQmVybGluLi4gCkkgdGhpbmsgdGhlIG9kZHMgb2YgYW55dGhpbmcgbGlrZSB0aGlzIGhhcHBlbmluZyBhcmUgc2xpbSB0byBub25lLiBUaGUgRE9KIGNhc2UgYWdhaW5zdCBNaWNyb3NvZnQgZm9yIGFudGkgdHJ1c3Qgd2FzIGNvc3RseSBhbmQgdGltZSBjb25zdW1pbmcsIGFuZCB1bHRpbWF0ZWx5IHVuc3VjY2Vzc2Z1bCBpbiBzcGl0ZSBhbiBpbml0aWFsIHdpbiwgd2hpY2ggd2FzIG92ZXJ0dXJuZWQgb24gYXBwZWFsLiBDaXJjdWl0IENvdXJ0IG9mIEFwcGVhbHMgb3ZlcnR1cm5lZCBKdWRnZSBKYWNrc29uIHJ1bGluZ3MgYWdhaW5zdCBNaWNyb3NvZnQuIENpcmN1aXQgQ291cnQgb2YgQXBwZWFscyBoZWFyaW5nLCBpbiB3aGljaCB0aGUgYXBwZWFscyBjb3VydCBqdWRnZXMgYWNjdXNlZCBoaW0gb2YgdW5ldGhpY2FsIGNvbmR1Y3QgYW5kIGRldGVybWluZWQgaGUgc2hvdWxkIGhhdmUgcmVjdXNlZCBoaW1zZWxmIGZyb20gdGhlIGNhc2UuWzI1XQpJIGRlY2lkZWQgdG8gc2ltcGx5IHBvc3QgdGhpcyBpbnRlcmVzdGluZyBjaGFydCB3aXRob3V0IGNvbW1lbnQgaXQgc2VlbXMgdGhhdCBpbiBteSBleHBlcmllbmNlIEkgaGF2ZW4gb2Z0ZW4gc2VlbiBzdWNoIGEgbG9uZyBsaXN0IG9mIHRyaWJlcyB3aXRoIHBvcHVsYXRpb25zIGF0IHN1Y2ggYW4gZWFybHkgZGF0ZS4gCiJXZSBoYXZlIGFsc28gYmVlbiBhYmxlIHRvIHJlIG5lZ290aWF0ZSBzZXZlcmFsIGNvbnRyYWN0cyB3aXRoIGtleSBidXNpbmVzcyBwYXJ0bmVycywgd2hpY2ggd2lsbCBkZWxpdmVyIGltcHJvdmVkIGZpbmFuY2lhbCBwZXJmb3JtYW5jZSBpbnRvIHRoZSBmdXR1cmUuClJpZ2h0IG5vdyBwcm9wZXJ0eSBpc24gdW5kZXJ2YWx1ZWQgc28gaXQgbm90IHRoYXQgYXR0cmFjdGl2ZSwgYnV0IGEgcm91Z2ggcnVuZG93biBvZiBudW1iZXJzIHNob3cgaXQgbm90IHRoYXQgb3ZlcnZhbHVlZCBlaXRoZXIuCldoZXRoZXIgaGUgaW50ZW5kZWQgZm9yIHRoZSBiYWxsIHRvIG1ha2UgY29udGFjdCB3aXRoIGhpcyBhcm0gd2hpbGUganVtcGluZyAobm90IHRoZSBvdGhlciB3YXkgYXJvdW5kKSB3ZSBuZXZlciBrbm93IGFuZCB0aGF0IGRlYmF0ZSBjb3VsZCByYWdlIG9uIHVudGlsIHRoZSBlbmQgb2YgdGltZSBidXQsIGFzIGl0IHN0YW5kcywgdGhpcyBzaG91bGRuIGhhdmUgYmVlbiBnaXZlbiAgIGJ5IHRoZWlyIG93biBydWxlcy4uIApCZWluZyB0b28gdW5kZXJzdGFuZGluZyBhbmQgYW4gZW5hYmxlciBnaXZlcyBoaW0gZXhjdXNlcy4gClBlcmhhcHMgbm8gb3RoZXIgbnVtYmVyIGhhcyBiZWVuIG1vcmUgcG9uZGVyZWQsIGV4YW1pbmVkIGFuZCBjYWxjdWxhdGVkIHRoYW4gcGkuIApXaGFydG9uIG1hbmFnZW1lbnQgcHJvZmVzc29yIFBoaWxpcCBUZXRsb2NrIGV4cGxvcmVzIHRoaXMgYXBwcm9hY2ggaW4gaGlzIGJvb2sgU3VwZXJmb3JlY2FzdGVycyAoVGVzdCB5b3VyIG93biBwcm9iYWJpbGl0eSBjYWxpYnJhdGlvbiB3aXRoIHRoaXMgYXNzZXNzbWVudCB0b29sIGluc3BpcmVkIGJ5IFRldGxvY2sncyB3b3JrKS4uIApCaWN5Y2xlIERvdWJsZSBQYWNrIFBva2VyIHNpemUgY29tZXMgd2l0aCBib251cyBkaWNlLiBBY2NvcmRpbmcgdG8gdGhlIGNhcmQgcGxheWVycywgdGhpcyBpcyBvbmUgb2YgdGhlIGNsYXNzaWMgcGxheWVycy4gCkhleSBtYXRlLCBqdXN0IHRvIGdpdmUgeW91IGEgcXVpY2sgcmV2aWV3LiBJIGRpZCBwdXJjaGFzZSB0aGUgZGVsbCBHNSwgYnV0IEkgYW0gbm90IHJlYWxseSBwbGVhc2VkIHdpdGggaXQgdW5mb3J0dW5hdGVseSA6Ly4gSSBsaXZlIGluIGEgcmF0aGVyIGhvdCBjb3VudHJ5IChNYXVyaXRpdXMpIGFuZCBJIHNwZWNpZmljYWxseSBib3VnaHQgaXQgYmVjYXVzZSB5b3UgbWVudGlvbmVkIHRoYXQgdGhlIGNvb2xpbmcgc3lzdGVtIHdhcyBwcmV0dHkgZ29vZC4gCkRza19veiAgMSBwb2ludCAgc3VibWl0dGVkIDQgbW9udGhzIGFnbwpJIGFmcmFpZCB0aGF0IEkgbG9zaW5nIG15IGFiaWxpdHkgdG8gdGhpbmsgY3JpdGljYWxseS4gSSBzaWduIHVwIGZvciBhbGwgdGhlc2UgcmlnaHQgd2luZyBlbWFpbCBsaXN0cyAocGFydCBvZiBteSBqb2IgYXMgc29jaWFsIGNyaXRpYyksIGJ1dCB0b2RheSBtaXNzaXZlIGZyb20gQW5uIENvdWx0ZXIgYWN0dWFsbHkgbWFkZSBzZW5zZS4gaGFsZiBvZiBpdCBkaWQuIHRoYXQgbWVhbiBJIG5vdyBoYWxmIHN0dXBpZD8gYnV0IGxpc3RlbiB0byB3aGF0IHRoZSBDb3VsdGVybmF0b3IgaXMgc2F5aW5nOiJTb21laG93IHdlIGp1c3QgbWlzc2VkIHRoYXQgaG9tZSBwcmljZXMgZG9uIGdvIHVwIGZvcmV2ZXIuIgpPdXIgKGhhZ3dvbikgd2ludGVyIHNjaGVkdWxlIGlzIGNvbWluZyB0byBhbiBlbmQgdG9tb3Jyb3cgc28gaXQgd2lsbCBiZSBiYWNrIHRvIHRoZSB1c3VhbCAycG0gc3RhcnQgYW5kIGdldHRpbmcgYSBmZXcgbmV3IGNsYXNzZXMuIE1vcmUgY2xhc3NlcyBtZWFucyBtb3JlIHdvcmsgYnV0IGl0IGdvb2QgdG8gaGF2ZSBuZXcgc3R1ZGVudHMgY29taW5nIHRvIHJlcGxhY2UgdGhlIG9uZXMgd2hvIGFyZSBsZWF2aW5nIHdpdGggdGhlIHN0YXJ0IG9mIG1pZGRsZSBzY2hvb2wuClBhaW4gdGhhdCBuZXZlciByZWFsbHkgZ29lcyBhd2F5CkNyZXdpbmcgb24gc3R1ZGVudCBmaWxtcyBpcyBhbiBlc3NlbnRpYWwgcGFydCBvZiB0aGUgY3VycmljdWx1bS4gR2VuZXJhbGx5LCBhIDR0aCB5ZWFyIHRoZXNpcyBmaWxtIHdpbGwgaGF2ZSBhIGNyZXcgb2YgNjAgc3R1ZGVudHMgd2l0aCBhIGhpZ2ggZGVncmVlIG9mIGF1dG9ub215LiAKTGFzdGx5LCB0aGUgcmVhbGx5IGdvb2QgcmVnaXN0cmllcyBhbGxvdyB5b3UgdG8gYWRkIGl0ZW1zIGFuZCBtYXJrIHRoZW0gYXMgYm91Z2h0IHlvdXJzZWxmLiBGb3IgZXhhbXBsZSwgbXkgTUlMIGluc2lzdGVkIG9uIHB1dHRpbmcgaGVyIG93biB0d2lzdCB0byB0aGUgdGhpbmdzIHNoZSBib3VnaHQgdXMuIFRoYXQncyBmaW5lLCBqdXN0IHBsZWFzZSBidXkgZnJvbSB0aGUgc3RvcmVzIHdoZXJlIHdlJ3JlIHJlZ2lzdGVyZWQgc28gSSBjYW4gcmV0dXJuIHRoZW0gYW5kIGJ1eSB0aGUgc3R1ZmYgd2UgYWN0dWFsbHkgd2FudCB3aXRob3V0IGFueSBoYXNzbGUuIEkgd2FzIGFibGUgdG8gZmluZCB0aGUgaXRlbSBzaGUgYm91Z2h0IG9ubGluZSwgcHV0IGl0IG9uIG15IHJlZ2lzdHJ5LCBtYXJrIGl0IGFzIGJvdWdodCwgYW5kIHJldHVybiBpdC4gVGhlIHJlZ2lzdHJ5IGFjdHMgYXMgYSByZWNlaXB0IG9mIHNvcnRzIGV2ZW4gaWYgdGhleSBkb24ndCBpbmNsdWRlIGEgcGh5c2ljYWwgZ2lmdCByZWNlaXB0IHdpdGggaXQuIFRoaXMgd2FzIHRoZSBjYXNlIHdpdGggVGFyZ2V0IGFuZCBNYWN5J3MsIHdoZXJlIHdlIHJlZ2lzdGVyZWQuCkl0IGNhbiBiZSBpc29sYXRpbmcgd2hlbiB5b3Ugc3BlbmQgaHVnZSBhbW91bnRzIG9mIHRpbWUgYWxvbmUgcGxheWluZy4gSXQgY2FuIGJlIG1hZGRlbmluZyB3aGVuIHlvdSBnbyB0aHJvdWdoIGFuIGluZXZpdGFibGUgZG93bnN3aW5nIHRoYXQgaXMgd29yc2UgdGhhbiB5b3UgZXZlciBleHBlY3RlZC4gClRoZSBpbmZvcm1hdGlvbiBjb250YWluZWQgaW4gbXkgYmxvZyBpcyBkZXJpdmVkIGZyb20gbm90ZXMgcHJvdmlkZWQgYnkgTVBEIE9mZmljZXJzIEluIENoYXJnZSAoT0lDKSBhdCB0aGUgZW5kIG9mIHRoZWlyIHNoaWZ0cy4gTW9zdCBuYXJyYXRpdmVzIHJlcHJlc2VudCBlYXJseSBhbmQgcHJlbGltaW5hcnkgaW5mb3JtYXRpb24gdGhhdCB3YXMgZ2F0aGVyZWQgYnkgYW4gT0lDIGZyb20gdGhvc2UgaW4gdGhlIGZpZWxkIHdobyB3ZXJlIGFjdGl2ZWx5IHdvcmtpbmcgY2FzZXMuIApUaGV5IGp1c3QgZG8gaXQgb2YgaGFiaXRBbmQsIHRoaXMgY29zdHMgbWUgdG8gYWRtaXQgaXQsIGJ1dCBJIGFkbWl0IGl0OiBJIGZlbHQgYSB0d2luZ2Ugb2YgcGl0eS4gVGhlc2UgeW91bmcsIHRhbGVudGVkIHBsYXllcnMsIGJ5IGFsbCBtZWFucyBtb3JlIGFjY29tcGxpc2hlZCBhbmQgc3VjY2Vzc2Z1bCB0aGFuIEkgZXZlciBiZSwgZGV2ZWxvcGluZyBzcHJheWluZyBhcyBhIHRpYy5JIHJlZnVzZSB0byBiZWxpZXZlIGNhbiBoZWxwIGl0IEkgZG9uIGJ1eSB0aGUgQVBNIGV4cGxhbmF0aW9uIGVpdGhlciwgaWYgYW55dGhpbmcgc3ByYXlpbmcgY291bGQgZ2V0IGluIHRoZSB3YXkgb2Ygc29tZSBvdGhlciBhY3Rpb24gaWYgd2UgY29uc2lkZXJpbmcgdGlueSBhZHZhbnRhZ2VzIHN0aWxsLiAKQnV0IEknbSBhIG5ld2JpZS4gSSB3ZW50IG91dCBhbmQgdG9vayBhIGNvdXBsZSBmcmllbmRzIG91dCBmb3IgYSBjZWxlYnJhdG9yeSBkaW5uZXIgYW5kIGRyaW5rcy4gTEVTU09OIDQgRmVsbG93IE5ld2JpZXM6IFRyZWF0IHJlYWwgZXN0YXRlIGludmVzdGluZyBsaWtlIGEgYnVzaW5lc3MgYW5kIHlvdSBjb3VsZCBiZWNvbWUgcmljaC4gVHJlYXQgaXQgbGlrZSBhIGhvYmJ5IGFuZCB5b3Ugd2lsbCBnbyBicm9rZS4gSSBjb2xsZWN0ZWQgQXVndXN0J3MgcmVudCBhbmQgSSBwdXQgdGhlIHdob2xlIHRoaW5nIGludG8gdXBncmFkZXMgaW4gdGhlIHVuaXQgSSBtb3ZlZCBpbnRvLiAKVGhlIGNsaWZmIHdhbGsgcnVucyBjbG9zZSB0byB0aGUgcGF0aCBvZiB0aGUgcmFpbHdheSwgbWFpbmx5IGFib3ZlIGl0LCBzbyB0aGVyZSBhcmUgbWFueSB2aWV3cyBkb3duIG9udG8gdGhlIHRyYWNrLiBUaGUgcGF0aCBpcyBlbnRpcmVseSBvbiBzdG9uZSwgZ3JhdmVsIG9yIHJvYWQgc3VyZmFjZSwgYnV0IGNhbiBiZSBzbGlnaHRseSByb3VnaCwgc28gaXQgaXMgbm90IG5lY2Vzc2FyaWx5IHN1aXRhYmxlIGZvciBkaXNhYmxlZCBwZW9wbGUuIFJ1bm5lcnMvdHJhaW5lcnMgYXJlIGFkZXF1YXRlIGZvb3R3ZWFyICAgeW91IHdvbid0IG5lZWQgeW91ciBoaWtpbmcgYm9vdHMuIFRoZXJlIGFyZSB2ZXJ5IGZldyBzdGVlcCBzZWN0aW9ucyBvZiBwYXRoICAgdGhlIGhpZ2hlc3QgcG9pbnQgaXMgb25seSA4MG0gYWJvdmUgdGhlIGxvd2VzdCBwb2ludC4gVGhlIHdhbGsgb2ZmZXJzIHN0cmlraW5nIHNlYSBhbmQgY2xpZmYgdmlld3MsIGJ1dCBhcyBhIHJlc3VsdCBpcyB2ZXJ5IGV4cG9zZWQgdG8gdGhlIHdpbmQuIERvIG5vdCBhdHRlbXB0IHRoaXMgd2FsayBvbiBhIHdpbmR5IGRheSBhcyB5b3Ugd2lsbCBiZSB3b3JuIGRvd24gYnkgdGhlIHdpbmQuClRvZXMgd2FybSBub3cgdGhhbmsgZ29vZG5lc3MsIGJvZHkgc3RpbGwgd2FybS4gCklyYW4gaXMgdGhlIEJ1Z3MgQnVubnkgb2YgdGhpcyBlcGlzb2RlIG9mIHRoZSBMb29uZXkgVHVuZXMgICB0b28gc21hcnQgYW5kIGFycm9nYW50IGZvciBpdHMgb3duIGdvb2QgICBrbmVlIGRlZXAgaW4gdGhlIG11cmRlcm91cyBtYXloZW0gb2YgdGhlIEJ1dGNoZXIgb2YgRGFtYXNjdXMgaW4gU3lyaWEuIApUaGlzIGxvZ2ljYWwgY29uY2x1c2lvbiBpcyBiYXNlZCBvbiB0aGUgZmFsbGFjeSBvZiBjb3JyZWxhdGlvbiBhcyBjYXVzYXRpb24uIEluIG90aGVyIHdvcmRzLCBqdXN0IGJlY2F1c2UgdHdvIHRoaW5ncyBnbyB1cCBvciBkb3duIHRvZ2V0aGVyIGRvZXMgbm90IG1lYW4gdGhleSBhcmUgY2F1c2FsbHkgcmVsYXRlZC4gRm9yIGluc3RhbmNlLCB0aGVyZSBhcmUgbW9yZSBzdG9ya3MgaW4gcnVyYWwgUG9sYW5kIHRoYW4gaW4gdXJiYW4gUG9sYW5kLiAKVXN1YWxseSBpbiB0aGUgY2h1cmNoLCB0aGV5IHRlYWNoIHRoYXQgMTAlIGlzIGEgcmVhc29uYWJsZS9hcHByb3ByaWF0ZSBhbW91bnQgdG8gZ2l2ZSBhbmQgeW91IGRpZCBzYXkgdGhhdCB0aGUgY2h1cmNoIGhhcyBkb25lIGEgbG90IGZvciB5b3UuIApBY2NvcmRpbmcgdG8gdGhlIGRhdGEsIHB1bnRlcnMgcGx1bmdlZCBtb3JlIHRoYW4gJDEyLjUgbWlsbGlvbiBldmVyeSBkYXkgb24gdGhlIG1hY2hpbmVzIGluIHRoZSBIdW50ZXIsIG9yICQ4NjgyIGEgbWludXRlLiAKUmFwaWRlIGRlc2NlbnRlLCBjYXIgdG91dCBzJ2FjY2xyZSBldCBub3VzIGVudHJhbmUgdmVycyBsZSB2aWRlIGRlIGwndHJlIGV0IHZlcnMgbCdBYnNlbmNlIGRlIFNvaSBhdSBtb25kZS4uIApVbHRpbWF0ZWx5LCBJIGRlY2lkZWQsIHJpZ2h0IG9yIHdyb25nLCB0aGF0IEkgRE8gc3RpbGwgYmVsaWV2ZSBpbiBHb2QuIEJ1dCBJIGNhbiBiZWxpZXZlIGFueSBvZiB0aGUgdGhpbmdzIHRoYXQgSSBwcmVjaW91c2x5IGhhZCBpbiBkZXRhaWwuIApJZiB0aGUgcmVjZWl2ZXIgaXMgdW5hYmxlIHRvIHRvdWNoIGl0IGFuZCBoaXQgaXQgYmFjaywgaXQgaXMgY2FsbGVkIGFuIGFjZSBhbmQgdGhlIHNlcnZlciB3aW5zIHRoZSBwb2ludC4gCk15IGh1c2JhbmQgdXNlcyBhIHNwb29uIHJlc3Qgd2hpbGUgY29va2luZywgdGhlbiBhYm91dCBhIHllYXIgaW50byB1cyBsaXZpbmcgdG9nZXRoZXIgaGUgc3RhcnRlZCB0dXJuaW5nIHRoZSBzcG9vbiByZXN0IGFyb3VuZC4gT25lIGRheSBJIHdhcyBjdXJpb3VzIGFuZCBhc2tlZCBoaW0gYWJvdXQgaXQuIEhlIGdvdCBhIHdlZSBiaXQgd29ya2VkIHVwIGFuZCBzdGF0ZWQgdGhhdCBJIGhhZCB0b2xkIGhpbSB0aGF0IHRoZSBvdGhlciB3YXkgd2FzIHdyb25nLiBIZSBsYXRlciB0b2xkIG1lIHRoYXQgaGUgd2FzIHdyb25nLCBoaXMgZXggaGFkIHRvbGQgaGltIHRoYXQuIFllYXJzIGxhdGVyLCBhbmQgaGUgcmFuZG9tbHkgcHV0cyBpdCB0aGUgd3Jvbmcgd2F5LiBJIGtub3cgaG93IHRoZSBjb252byB3aWxsIGdvLCBzbyBJIGFzayBoaW0gYWJvdXQgaXQuIEhlIHN0aWxsIHRlbGxzIG1lIHRoYXQgaGUgZG9lcyBpdCB0aGF0IHdheSBiZWNhdXNlIGkgdG9sZCBoaW0gdG8uIEkgdGVsbCBoaW0gYWJzb2x1dGVseSBub3QsIHVyIGV4IHVzZWQgdG8gdGVsbCB1IHRoYXQsIGhlIHF1ZXN0aW9ucyBoaW1zZWxmLCByZWFsaXplcyB0aGlzIGlzIHRydWUuIFJlcGVhdCBldmVyeSBmZXcgbW9udGhzLiBJIHdvbmRlcmluZyB3aGVuIGl0IHdpbGwgc3RvcCBiZWluZyBmdW5ueT8KSSB3b3VsZG4gc2F5IHRoZSBzaWducyBhcmUgYWNjdXJhdGUsIHRoZSBwb3NpdGlvbmluZyBvZiB0aGUgY29uc3RlbGxhdGlvbnMgYWN0dWFsbHkgY2hhbmdlZCBzaW5jZSB0aGVpciBpbmNlcHRpb24gc28gdGhlIHpvZGlhYyBjYWxlbmRhciB0aGF0IHBlb3BsZSB1c2UgdG9kYXkgaXNuIGV2ZW4gdGhlIGFjY3VyYXRlLiAKU28geWVhaCwgSSBoYXZlIGEgY2xlYXIgY3V0IGRlZmluaXRpb24sIGFuZCBJIGhhcHB5IHdpdGggaXQuIEJlY2F1c2UgaWYgc29tZXRoaW5nIGZhbGxzIG91dHNpZGUgb2YgdGhhdCBkZWZpbml0aW9uLCBJIHdvbiBjYWxsIGl0IGFuaW1lLCBidXQgSSB3aWxsIHN0aWxsIGVuam95IGl0IChhbmQgbWlnaHQgZXZlbiByZWNvbW1lbmQgaXQgdG8gbXkgZnJpZW5kcyBhcyAiYW5pbWUgbGlrZSIpLiAKU2Vjb25kbHksIGlmIHlvdSBnb2luZyB0byBkaXNhZ3JlZSB3aXRoIHRoaW5ncyB0byB0aGUgZGVncmVlIG9mIHNheWluZyB0aGV5IHN0dXBpZCwgeW91IG1pZ2h0IHByb3ZpZGUgYSByZWFzb24uIEVzcGVjaWFsbHkgd2hlbiBhIGh1Z2UgbnVtYmVyIG9mIGdvdmVybm1lbnRzIGFjdGl2ZWx5IHNlZWsgb3V0IHBlb3BsZSB3aG8gYXJlICJOb3Qgd29ya2luZywganVzdCBzcGVuZGluZyIgdG8gY29tZSB0byB0aGVpciBjb3VudHJpZXMgZm9yIHF1aXRlIG9idmlvdXMgcmVhc29ucy4gClRoZXJlJ3MgZ3Jvd2luZyBkaXNzZW50IGFtb25nIHNwb3J0cyBzY2llbnRpc3RzIGFib3V0IHdoZXRoZXIgYWxsIHRoaXMgYXR0ZW50aW9uIHRvIHRoZSBUckEgZ2l2ZXMgeW91IGEgc3Ryb25nZXIgY29yZS8gYmFjayB3aGV0aGVyIGl0J3MgZXZlbiBzYWZlLgpIb3cgb2Z0ZW4gZG8geW91IHRyYWNrIHRoZSBhY3Rpb25zIG9mIHlvdXIgb3Bwb25lbnRzLCBndWVzc2luZyB3aGF0IGhlIGlzIGhvbGRpbmcgYmVnaW5zIGJ5IHJlYWRpbmcgaGlzIGJldHMuIE9mdGVuIHBsYXllcnMgZm9yZ2V0IHdobyBhY3R1YWxseSByYWlzZWQgb3IgY2hlY2tlZCBpbiB0aGUgRmxvcCBvciBQcmUgRmxvcC4gS2VlcCBhIGNsb3NlIGV5ZSBvbiB0aGUgYmV0dGluZyBpbiB0aGUgZWFybHkgcm91bmRzIGFuZCB1c2UgdGhpcyBpbmZvcm1hdGlvbiB0byBhZGQgdG8gaW4gbGF0ZXIgcm91bmRzLi4gClRoZSB0aGluZyB0aGF0IGFsd2F5cyBtYWtlcyBtZSBoZXNpdGF0ZSBpcyB3aGF0IGlmIEkgZWl0aGVyIHdhcyBhIHNxdWliLCBvciBzb21laG93IEkgd2FzIGEgbXVnZ2xlLCBidXQga25ldyBhYm91dCB0aGUgbWFnaWMgd29ybGQuIEVpdGhlciB3YXksIEkgZmVlbCBsaWtlIHRoZSBjb29sZXN0IHRoaW5nIHdvdWxkIGJlIHRvIHNvbWVob3cgcGl0Y2ggc29tZSBzb3J0IG9mIG11Z2dsZSBjbGFzcyB0byBIb2d3YXJ0cy4gCkNsYWlyIGluZmx1ZW5jZSBhbWlkIGV4cGxvc2l2ZSBncm93dGgKQm90aCBnYW1lcyBoYXZlIGVuZW1pZXMgdGhhdCBjYW4gZWFzaWx5IGtpbGwgeW91IHZpYSBlZmZlY3RzIGFwcGxpZWQgb24gaGl0IG9yIGJ5IHNwZWxscywgdGhvdWdoIEJHMiBpcyB0aGUgd29yc2Ugb2YgdGhlIHR3by4gV2hlbiBpbiBkb3VidCwganVzdCBwcmVzcyB0aGUgcmFnZSBidXR0b24sIGFuZCBpdCBsaWtlbHkgcHJvdGVjdCB5b3UuLiAKU3VicHJpbWUgbW9ydGdhZ2VzIGJ1dCBhbHNvIHRoaW5ncyBsaWtlIGNhc2ggZm9yIHBheWNoZWNrIGludGVyZXN0IHBheW1lbnRzIGFuZCByZW50IHRvIG93biBjZW50ZXJzKT8gVGhlIHBlb3BsZSBhdCB0aGUgdG9wIHdlcmUgdGFraW5nIGluIHdheSBtb3JlIG1vbmV5IHRoYW4gdGhleSBldmVyIGhhZC4uIApUcmVsaXZpbmcgc2F5cy4gCiJUaGV5IGNvbiBwZW9wbGUgaW50byB0aGlua2luZyB0aGV5IGhhdmUgYSBtdWNoIGJldHRlciBvZiBjaGFuY2Ugb2Ygd2lubmluZyB0aGFuIHRoZXkgYWN0dWFsbHkgZG8sIiBEciBMaXZpbmdzdG9uZSBzYWlkLgpGb3IgZXhhbXBsZSwgaW4gdGhlIGNhc2Ugb2YgZm9vdGJhbGwgeW91IGNhbiB2aWV3IGxlYWd1ZSB0YWJsZXMsIGZpeHR1cmVzLCByZXN1bHRzIG9mIHByZXZpb3VzIGZpeHR1cmVzLCBvciB5b3UgY2FuIHZpZXcgaGVhZCB0byBoZWFkIG1hdGNoIHVwcyBhbmQgZGV0YWlsZWQgcmV2aWV3cyBvZiBwcmV2aW91cyBnYW1lcy4uIAoyLiBUaGVpciBiZXR0aW5nIGZyZXF1ZW5jeSBoYXMgaW5jcmVhc2VkLgpUaGlzIHBhcnRuZXIgbWF5IHBvc3Nlc3MgYSB2YWdpbmEsIGEgcGVuaXMsIHNvbWUgY29tYmluYXRpb24gdGhlcmUgb2YsIGFuZCBtb3N0IGNlcnRhaW5seSBhbiBhbnVzLiAKVGhlIHRheHBheWVyIGFsc28gc3VibWl0dGVkIHZhcmlvdXMgdHJhbnNwb3J0YXRpb24gcmVjZWlwdHMgZm9yIFRvcm9udG8gVHJhbnNpdCBDb21taXNzaW9uIHRpY2tldHMgYW5kIHRva2VucywgYXMgd2VsbCBhcyB0YXhpIGZhcmVzIHRvIG9yIGZyb20gaGlzIGhvbWUgYW5kIHNvbWUgVG9yb250byBwYXJraW5nIGV4cGVuc2VzLiBTaW5jZSB0aGVzZSBhcmUgYWxsIGNvbnNpZGVyZWQgZXhwZW5zZXMgb2YgZ2V0dGluZyB0byBhbmQgZnJvbSB3b3JrLCB0aGUganVkZ2UgcnVsZWQgdGhhdCB0aGVzZSB3ZXJlIGFsc28gbm90IGRlZHVjdGlibGUuClRoYXQgbXVjaCBzdGF0dXMgd291bGQgcHJldHR5IG11Y2ggYmUgYSBkcmVhbSBmb3IgbWUuIEkgdGhpbmsgSSB3b3VsZCBob25lc3RseSBwYXkgYSAkMSwwMDAgQUYgZm9yIGFsbCBlbmNvbXBhc3Npbmcgc3RhdHVzICsgcHJpb3JpdHkgaW4gYWxsIHRyYXZlbCBtZXRob2RzICh0aGluayBvZiBVYmVyIFBsYXQgZm9yIHRoZSBhaXJwb3J0LCBDbGVhciArIHByZWNoZWNrIHRvIGdldCB0aHJvdWdoIGZhc3QsIHByaW9yaXR5IGNoZWNrIGluL3Bvc3NpYmxlIHVwZ3JhZGVzIG9uIGFueSBuYXRpb25hbCBhaXJsaW5lLCBhbmQgdGhlbiBob3RlbCBiZW5lZml0cyBhdCBhbnkgbmF0aW9uYWwgaG90ZWwgY2hhaW4pLgpTbyBpbiB0aGUgZW5kIGkgdGhpbmsgaXQgaXMgYSBsb3NpbmcgY2FsbC4gSXRzIGluY3JlZGlibHkgZGlmZmljdWx0IGZvciB0aGUgQ1UgdG8gaGF2ZSBibHVmZnMsIGlzaWxkdXIgY2FuIGhhdmUgbG9hZHMgb2YgZmx1c2hlcywgYW5kIHRoZXJlcyBodWdlIElDTSBjb25zaWRlcmF0aW9ucwpMZWFmcyBzaWduIGdvYWx0ZW5kZXIgR2FycmV0IFNwYXJrcyB0byBvbmUKU2hlIGhhcyBzdGFydGVkIGdvaW5nIGFuZCBzYXlzIGl0IGhhcyBiZWVuIHRyYW5zZm9ybWF0aXZlIGFuZCBoZWFsaW5nLiBUaGUgdGhvdWdodHMgeW91IGV4cHJlc3NpbmcgYXJlIG11Y2ggbGlrZSB0aGUgb25lcyBzaGUgaGFzIGJlZW4gc2hhcmluZyB3aXRoIG1lIGFuZCBJIHRoaW5rIHlvdSB3b3VsZCBmaW5kIHBlb3BsZSB3aG8gd2lsbCB1bmRlcnN0YW5kIHlvdXIgcGFpbiBhbmQgc3RydWdnbGUuIApUaGlzIHdhcyB0aGUga2luZCBvZiBzdGF0ZSByZXBlYXRlZCBhcm91bmQgdGhlIHdvcmxkLCB0aGUgb25lIHdoaWNoIGNvbnNpc3RlbnRseSBmYWlsZWQuIEl0IHdhcyBtb3JlIExlbmluIGFuZCBTdGFsaW5zIGlkZWFzIGF0IHBsYXkgdGhhbiBNYXJ4J3MuIEl0J3MgZG91YnRmdWwgdGhhdCBUcm90c2t5IHdvdWxkJ3ZlIGRvbmUgYW55IGRpZmZlcmVudCBlaXRoZXIuIEknbSBub3Qgc2F5aW5nIHRoYXQgTWFyeCB3YXMgY29tcGxldGVseSBjb3JyZWN0LCBidXQgdGhpbmdzIGFyZSBhdHRhY2hlZCB0byBoaXMgbmFtZSB0aGF0IGRvbid0IG5lY2Vzc2FyaWx5IGhhdmUgYW55dGhpbmcgdG8gZG8gd2l0aCBoaW0uClBlb3BsZSB3YXN0aW5nIG1vbmV5IG9uIGJ1bGxzaGl0Li4gCkFmdGVyIHRoZSBydXNzaWFuIHJldm9sdXRpb24gU3RhbGluIHRvb2sgdG8gYXRoZWlzdGljIHByaW5jaXBhbHMuIEFsdGhvdWdoIGJ5IHRoZSB0aW1lIHdvcmxkIHdhciAyIGhhZCBzdGFydGVkIHN0YWxpbiBoYWQgZmluYWxseSBicm91Z2h0IGJhY2sgdGhlIHJ1c3NpYW4gb3J0aG9kb3ggY2h1cmNoIHRvIGZ1cnRoZXIgY29udHJvbCB0aGUgcGVvcGxlIG9mIHJ1c3NpYS4gCkFuZCBldmVyeSB0aW1lIEkgYnJpbmcgdGhpcyB1cCBwZW9wbGUgc2F5IGl0IG5vdCBpbXBvcnRhbnQgYW5kIGhhcHBlbmVkIGEgbG9uZyB0aW1lIGFnby4gVGhlc2UgY2hpbGRyZW4gd2VyZSBiZWF0LCBmb3JjZWQgdG8gc3BlYWsgRW5nbGlzaCwgcmFwZWQsIHRvcnR1cmVkLCBzdGFydmVkLCBhbmQgc29tZSBldmVuIGRpZWQuIE5vdCBpbmNsdWRpbmcgdGhlIG9uZXMgd2hvIGtpbGxlZCB0aGVtc2VsdmVzIGxhdGVyLCBtYW55IG5ldmVyIGdvdCByZXBhcmF0aW9ucy4gCkRlbm4gZGFzIEZyIGlzdCBhYnNvbHV0IGhlcmF1c3JhZ2VuZC4gCkkgc3VyZSBDYW5hZGEgY2FuIHJlbGF0ZSB0byB0aGF0IHNpbmNlIHdlIHdlcmUgYWxsIGluIHRoZSBOZXcgV29ybGQuLiAKSSBhc3N1bWVkIHRoZXNlIGd1eXMgd2VyZSB0YWxraW5nIGFib3V0IGhhdmluZyBzb21lIGxlZnRvdmVycyBvciB3aGF0ZXZlciB0aGF0IGJlZW4gaW4gdGhlIGZyZWV6ZXIgbGlrZSBhIG5vcm1hbCBodW1hbiBiZWluZywgbm90IHdoYXRldmVyIHNjdWZmZWQgYXNzIHJlYWR5IG1lYWwgc2hpdCB0aGlzIGlzLiAKV2UgbmVlZCBTaW5nbGUgUGF5ZXIgIG5vdCBQdWJsaWMgT3B0aW9uIG9yIG5vdywgZXZlbiB3b3JzZSwgZm9yY2VkIGluc3VyYW5jZSBwb2xpY3kgY29uc3VtcHRpb24gYXQgaGlnaCByYXRlcyBzbyBpbnN1cmFuY2UgZXhlY3V0aXZlcyBjYW4gc3RheSByaWNoLi4gCkkgaGF2ZSBhbm90aGVyIHNpc3RlciB0aGF0IGhhcyBzdWZmZXJlZCBhIHRyYXVtYXRpYyBicmFpbiBpbmp1cnkuIApJIHRoaW5rIGhlIGtub3dzIHdoYXQgaGUgZG9pbmcuIEdlbi4gCkdvaW5nIGRvd24gdGhlIHJhYmJpdCBob2xlIGluIGdlbmVyYWwgdHVybmVkIG1lIGludG8gYSBzcGlyaXR1YWwgcGVyc29uLiBUaGUgZWFydGggbWlnaHQgYmUgZmxhdCwgSSBkb24ndCBrbm93LiBCdXQgSSBoYXZlIGNvbWUgdG8gcmVhbGl6ZSB0aGF0IHdlIGFyZSBkaXZpbmUgYmVpbmdzLiBUaGUgbW9yZSBJIHJlYWQgdGhlIG1vcmUgSSBzdXNwZWN0IHRoZXJlIGlzIGEgY29uY2VydGVkIGVmZm9ydCB0byBtYXJnaW5hbGl6ZSBodW1hbiBiZWluZ3MuIFRvIHByZXNlbnQgb3VyIHNpdHVhdGlvbiBhcyBob3BlbGVzcy4gVG8gZ28gdG8gYmVkLCB3YWtlIHVwLCB3b3JrIGZvciBmYWtlIG1vbmV5LCBhbmQgZ28gYmFjayB0byBiZWQuIFdoZW4geW91IGJyZWFrIGZyZWUgb2YgdGhhdCBidWxsc2hpdCBpdCdzIGV5ZSBvcGVuaW5nLiBBbG1vc3Qgbm8gb25lIHRhbGtzIGFib3V0IGl0LCBhbmQgaWYgeW91IGRvIHlvdSAic2hhbWluZyBzaW5nbGUgbW90aGVycyIgb3Igc29tZXRoaW5nIHJpZGljdWxvdXMgbGlrZSB0aGF0LgpaaWVnZW5taXN0IHp1bSBFaW5zYXR6Li4gCk1pY2hhZWwgTW9vcmVyIGdpdmVzIHVzIHZhbHVhYmxlIGluc2lnaHQgaW50byBib3hpbmcsIGFuZCBwYXJ0aWN1bGFybHkgaW50byB0cmFpbmluZyBpbiBhbiBhcnRpY2xlIGF0IEZpZ2h0IEh5cGU7ICJJIHNlZSB0aGVzZSBndXlzIHRoYXQgaGFsZiBhc3MgZmlnaHQsIGFuZCBzb21lIG9mIHRoZW0gZG93biBoZXJlIGluIHRyYWluaW5nLCB0aGV5IGhhbGYgYXNzIHRyYWluLCBhbmQgdGhhdHMgbm90IGhvdyBJIHdhcyBicm91Z2h0IHVwLiIgRm9yIE1vb3JlciB0cmFpbmluZyBpcyBvYnZpb3VzbHkgdGhlIGtleSB0byBzdWNjZXNzIGluIGJveGluZy4gSGUgZ29lcyBvbiB0byB0ZWxsIHVzIGhvdyB1bmJlbGlldmFibHkgaGFyZCBQYWNxdWlhbyB0cmFpbnMuICJJIHdpdG5lc3NlZCBoaW0gZ28gMjYgcm91bmRzLCBub25zdG9wIGhpdHRpbmcgdGhlIG1pdHMuIApOZXh0IEkgYnVpbHQgYW5kIGRlcGxveWVkIHRoZSBwcm9qZWN0LiAKRWFybGllciBpbiB0aGUgeWVhciwgdGhlIHdob2xlIGluc2lkZSBvZiB0aGUga25lZWNhcCB3b3VsZCBodXJ0IGJlY2F1c2UgdGhlIGtuZWVjYXAgd2FzIG5vdCB0cmFja2luZyBjb3JyZWN0bHkuIAoiYmluIExhZGVuIiBzaW1wbHkgbWVhbnMgInNvbiBvZiBMYWRlbiIuIEhpcyBmYXRoZXIgd2FzIE1vaGFtbWFkIGJpbiBBd2FkIGJpbiBMYWRlbiwgYW5kIGhpcyBmYXRoZXIgd2FzIEF3YWQgYmluIExhZGVuLiAKVHJlYXRtZW50cyBkaXJlY3RlZCBhdCBub3JtYWxpemluZyBpdHMgbGV2ZWwgb2YgZnVuY3Rpb24gaGF2ZSBiZWVuIGZvcm11bGF0ZWQgdG8gZWZmZWN0aXZlbHkgYWRkcmVzcyBsb3cgYmFjayBwYWluLiBUaGlzIGhhcyBsZWQgdG8gYW4gaW5jcmVhc2luZyBhbW91bnQgb2Ygc3RhYmlsaXphdGlvbiB0cmFpbmluZyBwcm9ncmFtcyB0byBhZGRyZXNzIG11bHRpZmlkdXMgbXVzY2xlIGR5c2Z1bmN0aW9ucy4KRWRpdDogQW5kIGZvciB5b3UgdG8gc2F5IHRoYXQgcGVvcGxlIGdvaW5nIHZlZ2FuIHdvdWxkIGZpeCA3Mi45JSBvZiB0aGUgcHJvYmxlbSBtZWFucyB5b3UgYWJzb2x1dGVseSBmaW5lIHdpdGggdGhlIGVudmlyb25tZW50YWwgZGVzdHJ1Y3Rpb24gdGhlIGluZHVzdHJpYWwgZmFybWluZyBvZiBzb3kgaXMgY2F1c2luZyBhdCB0aGlzIHZlcnkgbW9tZW50LCBhcyBsb25nIGFzIHRoZSBwcm9kdWN0IGdvZXMgdG8gaHVtYW4gbW91dGhzIGluc3RlYWQgb2YgbGl2ZXN0b2NrLiBUaGlzIG9ubHkgc3VwcG9ydHMgbXkgdGhlb3J5IHRoYXQgdmVnYW5zIGRvbiBjYXJlIHNvIG11Y2ggYWJvdXQgc2F2aW5nIGFuaW1hbCBsaXZlcyBhcyB0aGV5IGRvIGxlZ2lzbGF0aW5nIHRoZSBwdWJsaWMgdHVtbWllcy4uIApHb29kIGx1Y2sgYW5kIGhhdmUgZnVuIS4gCiJPa2F5ISBMZXQgZG8gaXQhIkkgbGlrZSB0byBzYXkgSSBoYWQgdGhlIGZvcmV0aG91Z2h0IHRvIGtlZXAgaGVyIG51bWJlciBidXQsIGFsYXMsIGl0IGRpZG4gb2NjdXIgdG8gbWUgYXQgdGhlIHRpbWUuIApIb3cgZG8geW91IGJlYXQgYSB0aWUgaW4gcG9rZXI/CkEgbGl0dGxlIGlyb255LCBJIHN1Z2dlc3RlZCwgaW4gdGhlIHN0YXRlJ3MgbGFyZ2VzdCBjYXNpbm8gKGJhc2VkIG9uIG1vbnRobHkgcmVjZWlwdHMpIHBheWluZyB0byBzZW5kIGEgbWFpbGVyIGFib3V0IHRoZSBwcmVkYXRvcnkgZWZmZWN0cyBvZiBjYXNpbm8gZ2FtYmxpbmcuIApJIGFtIGEgbmF0aXZlIEVuZ2xpc2ggc3BlYWtlciBsaXZpbmcgaW4gYSBub24gbmF0aXZlIEVuZ2xpc2ggc3BlYWtpbmcgY291bnRyeS4gCkVhY2ggbmlnaHQgaGFzIHRoZSBwb3RlbnRpYWwgdG8gcmFpc2UgYWJvdXQgJDIsMDAwIGluIHByb2ZpdHMgYWZ0ZXIgdGhlIGRlZHVjdGlvbiBvZiBwcml6ZXMgYW5kIG9wZXJhdGluZyBjb3N0cywgYWNjb3JkaW5nIHRvIG9yZ2FuaXplcnMsIHdobyBzYWlkIHRoZXkgbmVlZCB0aGUgbW9uZXkgdG8gYnV5IG5ldyBlcXVpcG1lbnQgZm9yIHRoZWlyIGNvbW11bml0eSBmaXJlIGRlcGFydG1lbnRzLgpTZW4uIApXaGF0IENvbnN0YW50aW5vIG9mZmVycyB3aXRoIGhlciBzb2FwIGlzIHRoZSBvcHBvcnR1bml0eSB0byBjb25zdW1lIG5vdCBqdXN0IGhlciBpbWFnZSwgYnV0IGhlciBhY3R1YWwgYm9keS4uIApIZXJlIHRoZSB0aGluZywgSG9sZGVuIGlzIGEgdmVyeSB1bnJlbGlhYmxlIG5hcnJhdG9yIGFzIHdlbGwuIEZvciBleGFtcGxlLCB3aGVuIGhlIGlzIGV5ZSBiYWxsaW5nIHRoZSB0aHJlZSBnaXJscyBhdCB0aGUgY2x1YiwgdGhleSBhcmUgbGF1Z2hpbmcsIGJ1dCBoZSB0aGlua3MgaXQgYmVjYXVzZSBoZSAic3VhdmUiICAgVGhlbiBhZnRlciBoZSBkYW5jZXMgd2l0aCBvbmUgb2YgdGhlbSwgdGhleSBkb24gaW52aXRlIGhpbSBiYWNrIHRvIHRoZXJlIHRhYmxlLCBIb2xkZW4gdGhpbmtzIGl0IGJlY2F1c2UgdGhleSBhcmUgZHVtYiBvciBzb21ldGhpbmcsIGJ1dCBhY3R1YWxseSwgdGhlc2UgbGFkaWVzIGFyZSAzMCB5ZWFycyBvbGQsIHRoZXkgYXJlIExBVUdISU5HIGF0IGhpbS4gU28gd2hhdCBoZSBzZWVzIGlzbiBhbHdheXMgdHJ1ZS4gCkkgYWxyZWFkeSBoaXQgMjEwIG9uIG15IG1haW4gYW5kIGFtIGFsbW9zdCBhdCAyMDAgQXJjYW5lIEZvcmNlLiAKU3RhZmYgc2FpZCBkdWUgdG8gdGhlICcndW5wcmVkaWN0YWJsZSBuYXR1cmUnJyBvZiB0aGUgZ2FtaW5nIGVudGl0bGVtZW50IG1hcmtldCwgbm8gYnJva2VyIGNvdWxkIGd1YXJhbnRlZSB0byBwcm92aWRlIGEgc2V0IGFtb3VudCBvZiBlbnRpdGxlbWVudHMgd2l0aGluIGEgc2V0IHRpbWUgb3IgYXQgYSBzZXQgcHJpY2UuCldoYXQgaWYgdGhlIGhvdXNlIGJ1cm5lZCBkb3duPyBXaGF0IGlmIHRoZSBsYW5kbG9yZCBzb2xkIHRoZSBob3VzZT8gV2hhdCBpZiBzb21lYm9keSBnb3QgYSB0cmFuc2ZlciBhdCB3b3JrPz8gQSBzbWFydCBsYW5kIGxvcmQgc2hvdWxkIG5vdCB0YWtlIHRoYXQgbXVjaCByZW50IGluIGFkdmFuY2UgZm9yIHRoZSBzYW1lIHJlYXNvbi4gCiJUaGUgdHJhaW4gc2hlZCB3YXMgbm90IGluaXRpYWxseSBidWlsdCBmb3IgZWxlY3RyaWZpY2F0aW9uIHNvIHdlIGRvIGhhdmUgdG8gcHV0IHRvZ2V0aGVyIGEgcGxhbiBvbiBob3cgd2UgY2FuIGRvIHRoYXQsIiBBaWtpbnMgc2FpZCwgbm90aW5nIHRoYXQgdGhlIHBsYW4gaXMgYWJvdXQgNzUgcGVyIGNlbnQgY29tcGxldGUuIAoyLiBFdm9sdXRpb24gYnkgbmF0dXJhbCBzZWxlY3Rpb246IENoYXJsZXMgRGFyd2luLCAxODU5CkRpZSBBc3lsZnJhZ2UgaXN0IHdpZWRlciBlaW4gYW5kZXJlcyBUaGVtYS4gClRoZSBzbHVnZ2VyIHByZXZpb3VzbHkgcHV0IGhpcyBob21lLCBidWlsdCBieSBKYXVyZWd1aSBBcmNoaXRlY3QgaW4gMjAxMCwgb24gdGhlIG1hcmtldCBpbiBKdWx5IDIwMTcgYW5kIGluIEphbnVhcnkgMjAxOCBmb3IgYSBoaWdoZXIgJDkuOSBtaWxsaW9uIGFzaywgYWNjb3JkaW5nIHRvIFppbGxvdy4KTGUgTUlTUCBlc3QgYmFzIHN1ciBsZSBwcmluY2lwZSBxdWUgbGUgdG91Y2hlciByZXNwZWN0dWV1eCBwZXV0IGZhdm9yaXNlciBsJ2VzdGltZSBkZSBzb2ksIGxhIGNvbmZpYW5jZSBldCBsZSByZXNwZWN0IG11dHVlbC4gClVzaW5nIHRoZSBwcm9wb3NlZCBpbmRpdmlkdWFsIGluYWN0aXZpdHkgdGhyZXNob2xkLCB0aGlnaCBtdXNjbGVzIHdlcmUgaW5hY3RpdmUgNjcuNTExLjklIG9mIHRoZSB0b3RhbCByZWNvcmRpbmcgdGltZSBhbmQgdGhlIGxvbmdlc3QgaW5hY3Rpdml0eSBwZXJpb2RzIGxhc3RlZCBmb3IgMTMuOTcuMyBtaW4gKDIuNSAzOC4zIG1pbikuClRoaXMgd2FzIG5vdCB1bmlxdWUgdG8gdGhlIGlzbGFuZC4gCkFuZCBJIHJ1biBmb3IgY291bmNpbCBldmVuIHVuZW5kb3JzZWQuIEFuZCBJIHByb3ZlIHRvIHlvdSBJIGNvdWxkIGJlIHRoZSBiZXN0IHB1YmxpYyBzZXJ2YW50IHlvdSBldmVyIGhhZCwgb3IgSSBkaWUgdHJ5aW5nLiAKQW5vdGhlciBhY2N1c2VyLCBhbHNvIDE2LCBtZXQgS2VsbHkgYXQgaGlzIDIwMDggdHJpYWwsIHdoZXJlIGhlIGdhdmUgaGVyIGFuIGF1dG9ncmFwaC4gSGUgbGF0ZXIgaW52aXRlZCBoZXIgdG8gaGlzIGhvbWUgaW4gdGhlIENoaWNhZ28gc3VidXJiIG9mIE9seW1waWEgRmllbGRzLCB3aGVyZSB0aGV5IGhhZCBzZXggbXVsdGlwbGUgdGltZXMsIGFjY29yZGluZyB0byB0aGUgZG9jdW1lbnRzLCB3aGljaCBzYWlkIGhlIGFsc28gc2xhcHBlZCwgY2hva2VkIGFuZCBzcGl0IG9uIGhlci4KVmFyaWV0eSBvZiBQb2tlciBTaXRlcyB0byBQbGF5IEZyb20KUGx1cywgS29yZWFucyBzb21ldGltZXMgY2FsbGVkIG15IHNpc3RlciBhIHdob3JlIHdoZW4gc2hlIHdhcyBpbiBwdWJsaWMgd2l0aCBtZSwgd2hlbiBJIHNlcmlvdXNseSBkb3VidCB0aGF0IGhhcHBlbnMgdG8gS29yZWFuIHdvbWVuIHdpdGggS29yZWFuIHNpYmxpbmdzLiBUaGF0IGlzbiB3aGl0ZSBwcml2aWxlZ2UuCkkgaGF2ZSBjaGlsZHJlbiBpbiBzY2hvb2wgaW4gS29yZWEuIE91ciBvbGRlc3QganVzdCBmaW5pc2hlZCBtaWRkbGUgc2Nob29sICh3aG9vcHMgb3JpZ2luYWxseSBJIHNhaWQgaGlnaCBzY2hvb2wpIGFuZCB3aWxsIGhvbWVzY2hvb2wgd2l0aCBhbiBBbWVyaWNhbiBzY2hvb2wgKGFuZCB0aHVzIHJlY2VpdmUgYW4gQW1lcmljYW4gaGlnaCBzY2hvb2wgZGlwbG9tYSkgZm9yIGhpZ2ggc2Nob29sLgpEZW1vY3JhdHMgYmVjYW1lIHVuY29tZm9ydGFibGUgYWJvdXQgdGhlIG5vdGlvbiBvZiBhIGNvIHByZXNpZGVuY3kgYW5kIE1yIENsaW50b24ncyB0cnVtcGV0aW5nIG9mIGhpcyBvd24gYWNoaWV2ZW1lbnRzIHVuZGVyY3V0IGhpcyB3aWZlJ3MgY2xhaW1zIG9mIGRlZXAgZm9yZWlnbiBwb2xpY3kgZXhwZXJpZW5jZSBnYWluZWQgaW4gdGhlIFdoaXRlIEhvdXNlLgpGaW5kIGEgd2F5IHRvIG5vdCBjaG9rZSwgd2hhdGV2ZXIgdGhhdCBtYXkgYmUsIHNvbWV0aW1lcyBJJ2xsIHBsYXkgbXVzaWMgYW5kIGp1c3QgZm9jdXMgb24gdGhhdC4gCldoYXQgaWYgaXQgaGFwcGVucyBtdWx0aXBsZSB0aW1lcyBmb3IgdGhlIHNhbWUgcGVyc29uPyBUaGUgb3RoZXIgc3R1ZGVudHMgd2lsbCBzdGFydCB0byByZXNlbnQgdGhlbSwgdGh1cyBkaXNjb25uZWN0aW5nIHRoZSAicHJvYmxlbSBjaGlsZCIgZXZlbiBtb3JlIGZyb20gY2xhc3MsIHByb2JhYmx5IGNhdXNpbmcgbW9yZSBkaXNydXB0aW9ucy4KSSB1c3VhbGx5IGdvIHRvIDExIEFNLCBidXQgdG9kYXkgc29tZXRoaW5nIHRvbGQgbWUgdG8gZ28gdG8gOSBBTS4gSSB0aGluayB0aGlzIG1pZ2h0IGhhdmUgYmVlbiB0aGUgcmVhc29uLCBhcyB3ZWlyZCBhcyB0aGF0IHNvdW5kcy4gClByIHJlcXVpcyBwb3VyIGxhIHByZW1pcmUgZXQgbGEgc2Vjb25kZSBhbm5lCihIZXJlIHRoZSBsaW5rIHRvIHRoZSB2aWRlby4pIEFuZCB0aGVuIGhlIHNwZW50IHRoZSBmaXJzdCB0d28gaW5uaW5ncyB0YWxraW5nIHRvIEtydWsgYW5kIEt1aXAgb24gdGhlIFRWIHRlbGVjYXN0LCB3aGVyZSBoZSBwcmFpc2VkIFRpbSBMaW5jZWN1bSBhbmQgRnJlZCBMZXdpcyBncm93dGggdGhpcyB5ZWFyIGFuZCBjb21wYXJlZCBKb2huIEJvd2tlciBzaG9ydCBzd2luZyB0byBoaXMuIEhvdyBtYW55IG9mIHlvdSBleHBlY3RlZCBoaW0gdG8gc2hvdyB1cD8gRGlkIHlvdSBldmVuIGNhcmU/IEkgdGhpbmsgaXQgd2FzIGdyZWF0IHRoYXQgcGxheWVycyBsaWtlIEhhYyBNYW4sIEJyZXR0IEJ1dGxlciwgQmlsbCBOb3J0aCBhbmQgVGVycnkgV2hpdGZpZWxkIGFsc28gc2hvd2VkIHVwLiAKQSBjcmFwcyB0dXJuIGJlZ2lucyB3aXRoIGFuIGluaXRpYWwgb3IgImNvbWUgb3V0IiByb2xsLCBpbiB3aGljaCB0aGUgcGxheWVyIHRyaWVzIHRvIGVzdGFibGlzaCBhICJwb2ludCBudW1iZXIiIHRoYXQgaXMsIHdoZW4gdGhlIGRpY2UgYWRkIHVwIHRvIGZvdXIsIGZpdmUsIHNpeCwgZWlnaHQsIG5pbmUgb3IgMTAuIApFbnZveXMgd2VyZSBzZW50IG91dCB0byB0aGUgdmFyaW91cyBMYXRpbiBBbWVyaWNhbiBuYXRpb25zLCBhbGwgd2l0aCB0aGUgcG9pbnRlZCBpbnRlbnQgdG8gdHJ5IGFuZCByZXBhaXIgcmVsYXRpb25zLCBhbmQgdG8gZW5zdXJlIHRoYXQgdGhlc2UgY291bnRyaWVzIHdvdWxkIGJlIHN1cmUgdG8gc2VlIHRoYXQgdGhlcmUgd2FzIHZhbHVlIGluIFVuaW9uIHZpY3RvcnkgZm9yIHRoZW0uIFRoZSBtb3N0IGltbWVkaWF0ZSBnb2FsLCB3aGljaCB3YXMgbWV0IHdpdGggcmVsYXRpdmUgc3VjY2Vzcywgd2FzIHNpbXBseSB0byBlbnN1cmUgdGhhdCB0aGV5IHdvdWxkIGRvLCB3ZWxsLiBOb3RoaW5nLiAKWW91bmcgQ2FuYWRpYW4gZnJvbSBTbWl0aHMgRmFsbHMsIHRyYXZlbGxpbmcgb24gYSBzaG9lc3RyaW5nLCBtZWV0cyBjdXRlIFN3ZWRpc2ggbmFubnkgd2l0aCBhIG1vcCBvZiByZWQgY3VybHMgaW4gYSBsYXVuZHJvbWF0IGluIFNhbiBGcmFuY2lzY28uIApDYWxsIG1lIGEgcGVydmVydCwgYnV0IEkgZG9uIHRoaW5rIHRoZSBpc3N1ZSBoZXJlIGlzIHdoYXQgdGhlc2UgbWVuIHdlcmUgZG9pbmcgcG9vbHNpZGUuIApEbyBub3QgYWJhbmRvbiB0aGUgRGVtb2NyYXRpYyBwYXJ0eS4gCkl0IGhhcHBlbmVkIGxhc3QgeWVhciB3aXRoIHRoZSBlbnRpcmUgaGVhbHRoY2FyZSBzZWN0b3Igd2hlbiBBbWF6b24gYW5ub3VuY2VkIHRoZXkgd2VyZSBnb2luZyB0byBjcmVhdGUgdGhlaXIgb3duIGhlYWx0aGNhcmUgY29tcGFueSwgYW5kIGhhcHBlbmVkIGFnYWluIHRoaXMgcGFzdCB3ZWVrIHdoZW4gQW1hem9uIGFubm91bmNlZCB0aGV5IHdlcmUgbG9va2luZyB0byBjcmVhdGUgYSBncm9jZXJ5IHN0b3JlIGNoYWluLiBBbWF6b24gaGFzIHRoZSBhYmlsaXR5IHRvIHRhbmsgdGhlIGVudGlyZSBzdG9jayBtYXJrZXQgaW4gMzAgZGF5cyB3aXRoIDMwIHByZXNzIHJlbGVhc2VzLiAKUGxlYXNlIHJlcG9ydCBoZWxwIHVzIGhlbHAgeW91IGJ5IHJlcG9ydGluZyB0aHJlYWRzIGFuZCBjb21tZW50cyB0aGF0IG9idmlvdXNseSBicmVhayB0aGUgZ3VpZGVsaW5lcyBhYm92ZS4KQnV0IGluIHRoaXMgaW5zdGFuY2UgICB3aGVyZSBoZSBpcyB2ZXJ5IGNsZWFybHkgYmVoYXZpbmcgYSBzcGVjaWZpYyB3YXkgdG93YXJkcyB0aGlzIHNlcnZlciBiZWNhdXNlIHNoZSBpcyBmZW1hbGUgICBpdCBpcyBwYXJ0IG9mIGEgd2hvbGUuIApQb2tlciBpcyBncmVhdCB0byB3YXRjaCBvbiBUViwgaXQgaXMgYWJvdXQgcHN5Y2hvbG9neSBhbmQgcGVvcGxlIG1vcmUgdGhhbiBpdCdzIGFib3V0IHRoZSBjYXJkcyBhbmQgc28gaXQgYXR0cmFjdHMgYSBsYXJnZSBwZXJjZW50YWdlIG9mIG5vbiBwbGF5ZXJzLiBQZW9wbGUgbG92ZSB3YXRjaGluZyBvdGhlciBwZW9wbGUgaW4gcmVhbCBzaXR1YXRpb25zIGFuZCBwb2tlciBpcyB0aGUgbGF0ZXN0IHJlYWxpdHkgVFYgY3JhemUuCkNhc2lubyByZXN0YXVyYW50IHdpbm5lciBpbiBxdWFsaXR5CllvdSBidWlsdCB5b3VyIHJlc3RhdXJhbnQgYW5kIGN1dCB0aGUgcmliYm9uLiBOb3cgeW91IG93ZSAkNTAwSyB0byB0aGUgYmFuayBidXQgYXNzdW1pbmcgeW91ciBjaG9pY2UgdG8gb3duIGEgcmVzdGF1cmFudCBpcyBhIGdvb2QgaWRlYSBhbmQgeW91IGhhdmUgdGhlIG5lY2Vzc2FyeSB3b3JrIGV0aGljLCB5b3UgYXJlIG5vdyBhcmUgZ2VuZXJhdGluZyBzdWJzdGFudGlhbGx5IG1vcmUgcmV2ZW51ZSB3aXRoIGEgcmVzdGF1cmFudCB0aGFuIGF0IGEgJDI1L2hyIGpvYiBzbyB5b3UgY2FuIHBheSBiYWNrIHlvdXIgJDUwMEsgbG9hbiBtdWNoIGZhc3RlciBpdCB0YWtlIHRvIHNhdmUgdXAgJDUwMEsgbWFraW5nICQyNS9oci4gCkRlbW9jcmF0cyB3aG8gc2lkZSB3aXRoIGNvcnBvcmF0ZSBpbnRlcmVzdHMgdG8gYmxvY2sgUHJlc2lkZW50IE9iYW1hIGFnZW5kYSB3aWxsIHN1ZmZlciBmb3IgaXQgYXQgdGhlIGJhbGxvdCBib3guIEV2ZW4gYXMgd2UgY2VsZWJyYXRpbmcsIGl0IHRpbWUgdG8gZG91YmxlIGRvd24uIApDbGljayBUVVRPUklBTCwuIFRoZW4uIApUaGUgQmxhY2sgV2lkb3cgdG8gV29uZGVyIFdvbWFuIGNvbXBhcmlzb24gbWFrZXMgdGhlIE1DVSBsb29rIHdvcnNlIGltby4gCkluIHJldHVybiwgSSByZWNlaXZlIGhpcyBsb3ZlIGFuZCB0aGUgb3Bwb3J0dW5pdHkgdG8gd2F0Y2ggaGltIGdyb3cuIApZb3Ugc2hvdWxkIGhhdmUgYm9sZGVkIHRoZSBrbSwgcmF0aGVyIHRoYW4gdGhlICJvbmNlIi4gSSByYXJlbHkgZ2V0IHB1bGxlZCBvdmVyLCBidXQgbGFzdCA0dGggb2YgSnVseSwgSSB3YXMgcHVsbGVkIG92ZXIgdHdpY2UgaW4gdW5kZXIgYW4gaG91ci4gTm8sIEkgd2FzbiBkb2luZyBhbnl0aGluZyB3cm9uZyBhbmQgbm8sIEkgZGlkIG5vdCByZWNlaXZlIGFueSB0aWNrZXRzLiBFdmVyeW9uZSBnZXRzIHB1bGxlZCBvdmVyIGV2ZW50dWFsbHkgaW4gQW1lcmljYS4gUHVsbGluZyBwZW9wbGUgb3ZlciBpcyBhIG5hdGlvbmFsIHBhc3RpbWUgZm9yIHBvbGljZSBoZXJlLiBVc2luZyB1bml0cyBvZiBraWxvbWV0ZXJzIGJldHJheXMgd2h5IHlvdSB3b3VsZCB0aGluayBwZW9wbGUgZG9uIGdldCBwdWxsZWQgb3ZlciBmb3Igbm8gcmVhc29uIEFMTCBUSEUgVElNRSBpbiBBbWVyaWNhLgpXaG9sZSB0cmlwLCBpdCB3YXMgaW4gdGhlIGhpZ2ggNzBzIGFuZCB3ZSBzYXcgYSBiZWF1dGlmdWwgc3Vuc2V0IGFuZCBqdXN0ClNoZSBzYWlkIGhlcnNlbGYgdGhhdCBzaGUgdXNlZCB0byBkdW1wIGd1eXMgZm9yIHRoZSBzbWFsbGVzdCBvZiByZWFzb25zIHdoaWNoIGlzIGFjdHVhbGx5IHJlYWxseSB1bmZhaXIgb2YgaGVyIGFuZCBzaGUgcHJvYmFibHkgcmVhbGl6ZWQgdGhhdCBqdXN0IGJlY2F1c2UgYSBndXkgdGFrZXMgb2ZmIGhpcyBzaG9lcyB3aXRob3V0IGFza2luZyBkb2VzbiBtZWFuIGhpcyBjaGFyYWN0ZXIgYW5kIHJvbWFudGljIHBvdGVudGlhbCBsZXNzZW5zLiAKQSBwYXJ0aWN1bGFyIHRyZW5kZXIgZm9yIDIwMTQsIHRoaXMgc3BlY2lhbGlzZWQgZm9ybSBvZiBtYXNzYWdlIHJlcXVpcmVzIHN1cGVyaW9yIHNjaG9vbGluZyBhbmQgZGlzdGluY3RpdmUgY2VydGlmaWNhdGlvbiBmb3IgdGhlIHRoZXJhcGlzdC4uIApIb3dldmVyLCBpdCB3aWxsIGFsc28gY29zdCB5b3UgbW9yZSBvbiBhY2NvbW1vZGF0aW9uIGFuZCB0cmFuc3BvcnQsIHNvIGlmIHlvdSByZWFsbHkgYXJlIG9uIGEgc2hvZXN0cmluZyBidWRnZXQsIHRoZW4gcGVyaGFwcyBKYXBhbiBtYXkgYmUgYSBsaXR0bGUgdG9vIG11Y2guIApERCA+IFNvSi4gSSBhcmd1ZSBTb0ogaXMgYmV0dGVyIHRoYW4gREQsIGJ1dCBJIHByZWZlciBERCwgYmVjYXVzZSBJIGhhdmUgdG9vIG1hbnkgcHJvYmxlbXMgd2l0aCBTb0ouIFRoZSBtYXJnaW4gaXNuIGJ5IG11Y2gsIHRob3VnaC4gClRoZSBjaGVhcGVzdCB3YXkgaXMgcHJvYmFibHkganVzdCB0byBzaWduIGFuIGRvY3VtZW50IHRoYXQgYWdyZWVzIHRoYXQgdGhlIGJvdW5kYXJ5IGlzIHRoZSBoZWRnZSBhbmQgdGhhdCB0aGUgZmVuY2UgaXMgbm90IG9uIHRoZSBib3VuZGFyeS4gQm90aCBrZWVwIGEgY29weS4gSWYgYW55dGhpbmcga2lja3Mgb2ZmIGluIHRoZSBmdXR1cmUgeW91IGhhdmUgdGhhdCB0byBldmlkZW5jZSB5b3VyIHBvc2l0aW9uLgpUaGUgaGlnaGVzdCBoYW5kIG9mIFBva2VyIGlzIHRoZSBSb3lhbCBmbHVzaGFuZCBubyBvdGhlciBoYW5kIGNhbiBiZWF0IGl0LiBNb3Jlb3ZlciwgeW91IGNhbm5vdCBnZXQgNSBhY2VzdW5sZXNzIHlvdSBhcmUgcGxheWluZyB3aXRoIHR3byBkZWNrcyBvciBtb3JlLiAKU2lkZSBub3RlIGFydGljbGU6IENoaXJvcHJhY3RpYyBjYXJlIHJlZHVjZSBkaXNhYmlsaXR5IHJlY3VycmVuY2VzIEpyIG9mIE9jY3VwYXRpb25hbCBhbmQgRW52aXJvIE1lZCAyMDExCkknbSBiYWQgYWJvdXQgaGFpciBicnVzaGluZy4gSSBjb21iIG15IGhhaXIgYmVmb3JlIGhhaXIgd2FzaGluZyBhbmQgYWZ0ZXIgYnV0IHVzdWFsbHkgdGhhdCdzIGl0LiBJIHVzdWFsbHkgcHV0IG15IGhhaXIgdXAgYW5kIGxlYXZlIGl0IGJlIHVudGlsIEkgd2FzaCBpdC4gVGhhdCBhY3R1YWxseSBkaWRuJ3Qgb2NjdXIgdG8gbWUuIFRoYW5rIHlvdS4KUGxlYXNlIGtub3cgdGhhdCBiZWluZyBvcGVuIGFib3V0IGFueGlldHkgaXMgZ29pbmcgdG8gaGVscCBzb21lb25lIGVsc2UgcmVhZGluZyB0aGlzIHdobyBpcyBzdHJ1Z2dsaW5nIHdpdGggdGhlIHNhbWUgdGhpbmcuIApFdCBzdXJ0b3V0IGlsIG5lIHNlcnQgIHJpZW4gZGUgZmFpcmUgY2V0dGUgY3VyZSBzaSB2b3VzIHBhc3NleiB2b3RyZSB0ZW1wcyAgbWFuZ2VyIHRyb3AgZ3JhcywgdHJvcCBzdWNyIGV0IHRyb3Agc2FsLCBldCBzaSB2b3VzIG4nYXZleiBwYXMgdW5lIGh5Z2luZSBkZSB2aWUgc2VpbmUuIENlIHNlcmFpdCAgbW9uIGF2aXMgY29tbWUgYXBwbGlxdWVyIHVuIHBhbnNlbWVudCBzdXIgdW5lIGphbWJlIGRlIGJvaXMuIEMnZXN0IGNvbW1lIGxlIHByaW5jaXBlIGRlcyBtZGljYW1lbnRzLCBpbHMgc3RvcHBlbnQgbGEgZG91bGV1ciwgbWFpcyBsZSBtYWwgZXN0IHRvdWpvdXJzIGwuLiAKV2hhdCBJIGxlYXJuZWQgZnJvbSB1c2luZyBKTHMgc2l0ZSBpcyB0aGF0IEpvbmF0aGFuIGlzbiB0aGUgYmVzdCBwbGF5ZXIgb3V0IHRoZXJlLCB3aGljaCBzdWNrcyBiZWNhdXNlIGhlIGEgcHJldHR5IGdvb2QgdGVhY2hlciBhbmQgaXMgZ29vZCBhdCBleHBsYWluaW5nIGhpcyBjb3Vyc2Ugb2YgYWN0aW9uLiBIZSBoYXMgYSBnb29kIGNvbmNlcHQgd2hpY2ggSSBmZWVsIGxhcmdlbHkgaXMgcG9vcmx5IGV4ZWN1dGVkLgpUaGUgY2F1c2Ugb2YgcHJpbWFyeSBGU0dTIGlzIHVua25vd24sIGFsdGhvdWdoIHNvbWUgY2FzZXMgYXJlIHRoZSByZXN1bHQgb2YgYSBnZW5ldGljIGRlZmVjdCwgYW4gaW5mZWN0aW9uLCBvciBhIHRveGljIHJlc3BvbnNlIHRvIGEgZHJ1Zy4gClRoZSB0cmFpbmluZyBJIGdvdHRlbiBoYXMgYmVlbiBncmVhdCwgYnV0IGJlaW5nIHBhcnQgb2Ygc3VjaCBhIHN1cHBvcnRpdmUgImZhbWlseSIgaXMgdGhlIGJlc3QgcGFydC4gClNlbmYgaXN0IGdlaWwhIEljaCBsaWViZSBTZW5mLiBJY2ggaGFiIGltbWVyIG1pbmRlc3RlbnMgdmllciB2ZXJzY2hpZWRlbmUgaW0gS2hsc2NocmFuay4gRGVuICJub3JtYWxlbiIgbWl0dGVsc2NoYXJmZW4sIEx3ZW5zZW5mIFNjaGFyZiwgRGlqb24gU2VuZiwgRGlqb24gU2VuZiBtaXQgS3JuZXJuLgpTb2Z0d2FyZSBFbmdpbmVlciBtYXkgaGF2ZSB0aGUgZ292ZXJubWVudCBwYXlpbmcgMTIwLDAwMCB0byB0aGUgcHJpbWUuIApUaGUgSmV3JyBtYXN0ZXJmdWwgdXNlIG9mIGRlY2VwdGl2ZSBzdHJhdGFnZW1zIG1ha2VzIGhpbSBhbiBleGNlbGxlbnQgcG9rZXIgcGxheWVyLiBXaGV0aGVyIG92ZXJjaGFyZ2luZyBmb3IgYSBiYWdlbCBvciB3ZWF2aW5nIGFuIGluc2lkaW91cyBwbG90IHRvIGNvbnF1ZXIgMTkzMHMgRXVyb3BlIGluIGEgTWFyeGlzdCBaaW9uaXN0IGludGVybmF0aW9uYWwgYmFua2luZyBjb25zcGlyYWN5LCBUaGUgSmV3IGhhcyBhdCBoaXMgZGlzcG9zYWwgYSByaWNoIGhpc3Rvcnkgb2YgZHVwbGljaXRvdXMgZXN1cmllbmNlIHRvIGFpZCBoaW0gaW4gaGlzIGhlcmV0aWNhbCBxdWVzdCBmb3IgeW91ciBjaGlwcy4gSGlzIGNvbnN1bW1hdGUgZ3JlZWQgbXVzdCBiZSB0ZW1wZXJlZCBieSBjaGVjayByYWlzZXMsIHNvIHRoYXQgd2hlbiB5b3UgY2hlY2sgYSBkcmF3IHRvIGhpbSwgaGUsIGNvd2FyZGx5IGZlYXJpbmcgYSBjaGVjayByYWlzZSwgcmFzcHMgdGhlIGZlbHQgYmVoaW5kIHlvdSB3aXRoIGhpcyBsb25nLCBkaXJ0eSBmaW5nZXJuYWlscy4uIApNeW9mYXNjaWFsIFJlbGVhc2U6IGlzIGJhc2VkIG9uIHJlbGVhc2luZyB0aGUgY29ubmVjdGl2ZSB0aXNzdWUgdGhhdCBsaW5rcyBldmVyeSBtdXNjbGUsIGJvbmUsIG5lcnZlLCBhcnRlcnksIHZlaW5zLCBhbmQgaW50ZXJuYWwgb3JnYW5zLiAKTWFpbmx5LCBteSBicm90aGVycyBibGV3IGl0IG91dCBvZiBwcm9wb3J0aW9uLCBpbiBteSBoZWFkLiBNeSBvbGRlc3QgYnJvdGhlciByaWdodCBhZnRlciBJIGJsZXcgdGhlIGNhbmRsZXMgb3V0IHNhaWQgc2luY2UgaXQgd2FzbiBteSBiaXJ0aGRheSB0aGUgb3Bwb3NpdGUgb2YgbXkgd2lzaCB3b3VsZCBoYXBwZW4uIApJIHRoaW5rIGEgbG90IG9mIHBlb3BsZSBhcmUgZHVtYiBhbmQgcGFydGlzYW4uIApIYXJyb24xNyAgNjMsMDUyIHBvaW50cyAgc3VibWl0dGVkIDEwIGRheXMgYWdvCld5bm4gUmVzb3J0cyBpcyBmYWNpbmcgc2NydXRpbnkgYnkgZ2FtYmxpbmcgcmVndWxhdG9ycyBpbiBOZXZhZGEgYW5kIE1hc3NhY2h1c2V0dHMsIHdoZXJlIHRoZSBjb21wYW55IGlzIGJ1aWxkaW5nIGEgcm91Z2hseSAkMi40IGJpbGxpb24gY2FzaW5vIGp1c3Qgb3V0c2lkZSBCb3N0b24uIFJlZ3VsYXRvcnMgaW4gTWFjYXUsIHRoZSBDaGluZXNlIGVuY2xhdmUgd2hlcmUgdGhlIGNvbXBhbnkgb3BlcmF0ZXMgdHdvIGNhc2lub3MsIGFyZSBhbHNvIGlucXVpcmluZyBhYm91dCB0aGUgYWxsZWdhdGlvbnMuCkZvciBleGFtcGxlLCB0ZXN0cyBzaG93IHRoYXQgdGhlc2UgbmFyd2hhbHMgY2FuIGRldGVjdCBjaGFuZ2VzIGluIHdhdGVyIHNhbGluaXR5IHdpdGggdGhlaXIgdG9vdGggc2FiZXJzLiBIb3cgaXMgbWVhc3VyaW5nIHNhbHQgY29udGVudCBhbnl0aGluZyBvdGhlciB0aGFuIGNvbXBsZXRlbHkgdXNlbGVzcyBmb3IgYW55b25lIG5vdCB3b3JyaWVkIGFib3V0IGh5cGVydGVuc2lvbj8gSXQgdHVybnMgb3V0IHRoYXQgY2hhbmdlcyBpbiBzYWxpbml0eSBhZmZlY3Qgd2hlbiB3YXRlciBmcmVlemVzLiBBbmQgaWYgeW91J3JlIGFuIGFpciBicmVhdGhlciBtYWtpbmcgYSBsaXZpbmcgYXJvdW5kIHNoaWZ0aW5nIGljZSBmbG9lcywgdGhlbiBrbm93aW5nIHRoYXQgeW91IGNhbiBnZXQgYmFjayB0byB0aGUgc3VyZmFjZSBpcyBhIHJlYWwgcGx1cy4KSXQgc2hvdWxkIGdvIHdpdGhvdXQgc2F5aW5nIHRoYXQgcmVhbCBlc3RhdGUgaW52ZXN0aW5nIGhhcyBhIGxvdG9mIGhpZ2hzIGFuZCBsb3dzLiBUaGVyZSBhcmVuJ3QgYSBsb3Qgb2Ygb3RoZXIgYnVzaW5lc3NlcyB3aGVyZSB0aGluZ3MgY2FuIGZlZWwgYXMgZ3JlYXQgaW4gb25lIG1vbWVudCBvciBhcyBjYXRhc3Ryb3BoaWMgdGhlIG5leHQuIApFQ29tbWVyY2UgQXJ0aWNsZXMgIE5vdmVtYmVyIDIzLCAyMDA1UmVhZCB0aGUgRW50aXJlIEFydGljbGVSZWFkaW5nIE9ubGluZSBQb2tlciBSZXZpZXdzIDEKTFBHIGlzIGEgbm9uIHByb2ZpdCB2b2x1bnRlZXIgZ3JvdXAgYmFzZWQgaW4gS0wsIGNvbW1pdHRlZCB0byBtYWtpbmcgYSBkaWZmZXJlbmNlIHRvIHRoZSBxdWFsaXR5IG9mIGxpZmUgZm9yIHRoZSBMR0JUIGNvbW11bml0eSBpbiBNYWxheXNpYS4gTFBHIGdyb3VwIHdhcyBmb3JtZWQgaW4gU2VwdGVtYmVyIDE5OTggYW5kIGFjdGl2aXRpZXMgaW5jbHVkZSB3ZWVrbHkgc3BvcnRzIChib3dsaW5nLCB2b2xsZXliYWxsLCBiYWRtaW50b24sIHNxdWFzaCksIG1vbnRobHkgbW92aWUvdGhlYXRyZSBvdXRpbmdzIHBvdGx1Y2sgZ2F0aGVyaW5ncywganVuZ2xlIHRyZWtraW5nIHBpY25pY3MsIGRvbWVzdGljL292ZXJzZWFzIHRyaXBzLCBmdW5kIHJhaXNpbmcgZXZlbnRzLCBjb21tdW5pdHkgc2VydmljZSBldGMuIApCeSBkYXkgZm91ciBEaWFuZSBCb3JnZXIgaXMgYmFjayBhdCBjb2xsZWdlLiAKQW5kIFdoaXRlaG91c2Ugd2FudHMgbW9yZSBpbmZvcm1hdGlvbiBhYm91dCBob3cgS2F2YW5hdWdoIGFuZCBoaXMgd2lmZSBhZmZvcmRlZCB0aGVpciAkMS4yIG1pbGxpb24gaG9tZSBpbiAyMDA2LCBhbmQgaG93IGhlIG1hbmFnZWQgdG8gcGF5IGZvciBtZW1iZXJzaGlwIGluIHRoZSBDaGV2eSBDaGFzZSBDbHViLCB3aG9zZSBpbml0aWF0aW9uIGZlZSBpcyByZXBvcnRlZGx5ICQ5MiwwMDAgd2l0aCBhbm51YWwgZHVlcyBvZiBtb3JlIHRoYW4gJDksMDAwLgpIZXJlIGFyZSBteSB0b3AgZml2ZSBwb3N0cyBvbiBmZW1hbGUgYW5hbCBwbGVhc3VyZS4gCkZvciBhIGZldyByZWFzb25zIG1haW5seToKSSB0cmllZCB0byBpbnN0YWxsIHQgc3BsaW5lcyBmb3Igcmhpbm8uIERldmVsb3BzIHN1cmZhY2UgbW9kZWxpbmcgc29mdHdhcmUgLiAzIGZvciBrZXlnZW5ndXJ1IFJoaW5vOiBWaWV3OiAxMS8yOTogTmV3IFQgU3BsaW5lcy4gCkEgYm9va3NoZWxmIHdpdGggbm90aGluZyBidXQgYSBjb3VwbGUgZHVzdHkgb2xkIERyLiBTZXVzcyBib29rcy4gCkFib3V0IGEgcXVhcnRlciB3ZXJlIGRydWcgYmFiaWVzIG1vc3RseSBveHljb2RvbmUgYW5kIHRoZSByZXN0IHdlcmUgZ2VuZXRpYyBkaXNvcmRlcnMsIGJpcnRoIGRlZmVjdHMgYW5kIHByZWVtaWVzLiBXZSBiZWNhbWUgYXdhcmUgb2YgYmFiaWVzIHdpdGggbWlzc2luZyBsaW1icywgaG9sZXMgaW4gdGhlaXIgc3BpbmVzLCBzaHVudHMgaW4gdGhlaXIgYnJhaW5zLiAKQXMgcGFydCBvZiBpdHMgQ2xlYW4gQkMgcHJvZ3JhbSwgdGhlIGdvdmVybm1lbnQgaXMgc3BlbmRpbmcgJDkwMiBtaWxsaW9uIG92ZXIgdGhyZWUgeWVhcnMgdG8gaGVscCBhY2hpZXZlIGl0cyBjbGltYXRlIGNoYW5nZSBnb2Fscy4KSm9pbmluZyBmb3JjZXMgd2l0aCBLYWxpZXNoYSwgc29tZSBzYXkgdGhhdCB0aGVzZSB0d28gbWF5IHZlcnkgd2VsbCBiZSB0aGUgbW9zdCBtdWx0aSBkaW1lbnNpb25hbCBib3hlcnMgdGhlIHNwb3J0IGhhcyBldmVyIHNlZW4uIFJlYWNoaW5nIG5ldyBsZXZlbHMgYW5kIGJyZWFraW5nIHRocm91Z2ggdGhlIGdsYXNzIHdhbGxzLCBpdCBpcyBDaHJpc3RpbmEncyBkZXRlcm1pbmF0aW9uIGFuZCB3aWxsaW5nbmVzcyB0byBwdXQgaXQgYWxsIG9uIHRoZSBsaW5lIHRoYXQgbWFrZXMgZXZlcnkgZWZmb3J0IGEgY29tbWl0dGVkIG9uZS4gU2hlIGNhbiBzdW0gaXQgdXAgaW4gdGhyZWUgd29yZHMsICJJJ20gYWxsIGluLiIuIApNYW5pdG9iYSwgTW9ybmVhdSBzYWlkIHRoZSBkZWFsIGNvbWVzIHRvbyBzb29uIGZvciB0aGUgcHJvdmluY2UgbmV3IFRvcnkgZ292ZXJubWVudC4uIApNYWxhaGFqYXRpICAxIHBvaW50ICBzdWJtaXR0ZWQgMiBkYXlzIGFnbwpIZSB3b3JrZWQgYWNyb3NzIENhbmFkYSBpbiBsdW1iZXIgY2FtcHMgYW5kIHdpdGggcm9hZCBidWlsZGluZyBjcmV3cywgaW5jbHVkaW5nIGEgc3RpbnQgYnVpbGRpbmcgdGhlIEFsYXNrYSBIaWdod2F5LCBhbmQgbWFueSB5ZWFycyBkcml2aW5nIHRydWNrIGZvciBLb2tvdG93IGFuZCBUTlIuIFJlZCB3YXMgYW4gYXZpZCBzdXBwb3J0ZXIgb2YgbG9jYWwgc3BvcnRzIGluY2x1ZGluZyBob2NrZXksIHNvZnRiYWxsLCBicm9vbWJhbGwgYW5kIHNub29rZXIuIApBY2UgaW4gdGhlIEhvbGUKUmV2ZW51ZXMgdG9wcGVkICQxMDAgYmlsbGlvbiBmb3IgdGhlIGZpcnN0IHRpbWUuIFRoZSBuZXcgNzc3WCBpcyBzZXQgZm9yIGZsaWdodCB0ZXN0cyBieSB0aGUgc3VtbWVyIGFuZCBvbiB0cmFjayBmb3IgZGVsaXZlcnkgbmV4dCB5ZWFyLiBUaGUgQWlyIEZvcmNlIHBsYW5zIHRvIHRha2UgZGVsaXZlcnkgb2YgaXRzIGZpcnN0IDM2IEtDIDQ2IHRhbmtlcnMgdGhpcyB5ZWFyLiAKWW91ciBwaHlzaWNpYW4gb3dlcyBpdCB0byB5b3UgdG8ga25vdyBhcyBtdWNoIGFzIHBvc3NpYmxlIGFib3V0IHlvdXIgZGlzZWFzZSBvciBoZWFsdGggY29uZGl0aW9uLiAKU2Nvb3AncyBjb21wcmVoZW5zaXZlIHJlYWx0aW1lIGJyZWFraW5nIG5ld3MgcHJlc3MgcmVsZWFzZSBmZWVkIGFuZCBwdWJsaWNseSBhY2Nlc3NpYmxlIDE4IHllYXIgYXJjaGl2ZSBwcm92aWRlcyBhIHZvaWNlIHRvIE5aIGNpdmlsIHNvY2lldHkgYXQgdGhlIGhlYXJ0IG9mIEdvdnQuIEFuZCBzZWN1cmVzIGFsbCBOWmVycyBhY2Nlc3MgdG8gdGhlIGluZm9ybWF0aW9uIHRoZXkgbmVlZCB0byBiZSBhYmxlIHRvIHBhcnRpY2lwYXRlIGluIE5aIGRlbW9jcmFjeS4gCkQnYWlsbGV1cnMsIGonYWkgcHUgcmVjb25uYXRyZSBsZSBjaGllbiBxdWUgaidhaSB2dSBlbiBhY3Rpb24gKGNoYXF1ZSBjaGllbiBhIHVuZSByY29tcGVuc2UsIGNlbHVpIHF1ZSBqJ2FpIHZ1IGF2YWl0IHVuZSBiYWxsZSBwb3VyIGpvdWVyKS4gCkJ1dCBzdGlja2luZyBzaG91bGRlciB0byBzaG91bGRlciB3aXRoIHRlYW1tYXRlcyBhbGwgdGhlIHRpbWUgaXMgYm9yaW5nIHRvIHNvbWUgcGVvcGxlLCBiZWxpZXZlIGl0IG9yIG5vdApUaGUgTWNMYXJlbiB0ZWFtIHByaW5jaXBhbCwgTWFydGluIFdoaXRtYXJzaCwgaGFzIGJlZW4gcXVpY2sgdG8gZGVmZW5kIGhpcyBkcml2ZXIgaW4gdGhlc2UgcGFnZXMgaW4gdGhlIHdha2Ugb2YgTGF1ZGEgYW5kIEZpdHRpcGFsZGkgY29tbWVudHMuIGFyZSB2ZXJ5IHF1b3RhYmxlIHBlb3BsZSwgYW5kIHZlcnkgcXVvdGFibGUgcGVvcGxlIHNheSB0aGluZ3MgZm9yIGVmZmVjdC4gSSBrbm93IE5pa2kgYW5kIGxpa2UgaGltLCBhbmQgSSBhY2NlcHQgdGhhdCB0aGVyZSBhcmUgcGVvcGxlIGFyb3VuZCB3aG8gd2FudCB0byBzYXkgdGhpbmdzIHRvIGNyZWF0ZSBjb250cm92ZXJzeS4gTmlraSBpbiB0aGF0IGNhdGVnb3J5Lgo=|<---